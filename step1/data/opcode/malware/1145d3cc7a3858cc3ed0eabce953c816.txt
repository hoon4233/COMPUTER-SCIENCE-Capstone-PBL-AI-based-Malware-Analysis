mov
or
add
add
dec
add
add
add
add
add
add
add
in
adc
or
lods
jp
pop
inc
or
push
inc
gs
test
aam
test
mov
sub
pop
xchg
xor
ja
cli
add
mov
xor
ins
aas
out
fnsave
inc
jae
pusha
ins
jle
or
or
js
mov
test
inc
mov
xchg
test
cli
push
and
mov
test
dec
or
jmp
cmp
fwait
xor
jns
or
mov
pop
and
and
sbb
mov
mov
cs
dec
dec
adc
mul
leave
jl
sbb
xor
and
mov
xor
ds
cwde
outs
movs
push
dec
retf
gs
out
jl
inc
aas
pop
movs
lds
cwde
popf
sub
test
icebp
xchg
dec
test
adc
add
into
mov
xchg
inc
and
aaa
cmp
cmps
rcr
push
js
jmp
pop
(bad)
xchg
xor
xor
rcl
jle
ds
aaa
aaa
push
sti
cli
cwde
stos
lods
add
pop
mov
ds
or
jge
bound
jl
sub
cmp
loopne
push
adc
scas
out
pusha
das
not
test
or
mov
cmp
xor
popf
add
rol
jecxz
mov
mov
or
adc
retf
fisub
sub
mov
and
mov
xor
push
int
cmp
popa
cmp
adc
mov
push
jae
in
sub
xor
shr
fwait
push
jno
sub
stos
xor
mov
dec
inc
inc
imul
aad
dec
in
stc
aaa
rcl
stos
push
jae
pop
jno
pop
ret
jl
push
jnp
xlat
stos
jmp
mov
dec
xchg
mov
ss
aam
jns
xor
dec
cmp
cmp
mov
pop
test
aam
and
inc
sub
or
dec
jne
icebp
xchg
xlat
jbe
cmp
push
jne
cmp
fs
xchg
mov
fsub
mov
movs
jp
xchg
jg
xor
fisttp
mov
cmp
jae
push
fs
hlt
clc
jp
test
jns
and
je
dec
ins
mov
mov
aas
sbb
mov
in
adc
outs
mov
shl
mov
sbb
(bad)
fs
xchg
sub
push
int
aaa
dec
dec
mov
lods
out
cmp
sub
aaa
xor
xchg
sti
repz
cmp
fld
pop
pop
sbb
pop
lods
inc
push
icebp
sbb
jmp
mov
sbb
adc
mov
adc
mov
jnp
pop
add
cmps
rcr
jb
es
cmp
mov
cmp
pushf
cmp
mov
(bad)
pop
mov
push
cmp
mov
out
call
movs
push
sahf
xor
(bad)
loop
pop
les
push
retf
jmp
mov
xlat
push
mov
movs
inc
adc
sbb
inc
or
scas
fist
test
mov
add
stos
xor
es
fdivrp
mov
rol
out
dec
jbe
or
cdq
(bad)
jg
sub
ror
jmp
cli
fisttp
fld
xor
jmp
mov
adc
sub
fild
icebp
shr
push
outs
in
rcr
mov
jns
int
jge
or
(bad)
in
add
ja
jne
fwait
(bad)
xor
in
jmp
test
or
push
adc
gs
pusha
cmc
in
jbe
dec
sbb
jecxz
enter
repnz
mov
sahf
test
jne
sbb
push
pushf
ret
sub
daa
ret
xchg
fwait
cli
fwait
retf
sub
and
out
sbb
add
fsubr
mov
popa
sti
neg
ins
add
inc
mov
sbb
add
lods
push
push
jo
rcr
aas
xlat
movs
out
sub
xchg
sbb
cmp
fidivr
mov
repnz
stos
mov
pop
jbe
xor
jno
div
fidivr
cmps
nop
lock
sar
fisttp
xchg
nop
inc
dec
packssdw
add
pop
pop
jnp
mov
or
jno
xchg
dec
pop
inc
push
ret
lods
call
jne
(bad)
fld
add
pop
fdiv
and
pop
mov
mov
xor
mov
(bad)
xor
out
push
ror
lods
popf
cmc
push
mov
int3
(bad)
cld
dec
outs
(bad)
xchg
pop
mov
fstp
push
lock
jp
mov
jno
push
mov
jl
dec
movs
mov
xlat
cmp
and
xchg
xor
xor
fnstcw
adc
inc
mov
dec
or
adc
sbb
int3
mov
retf
movs
retf
pop
lahf
ret
pop
sbb
aas
cmp
or
ins
cmps
jle
jmp
pop
sbb
push
add
and
push
pcmpeqd
pop
and
neg
retf
aad
sbb
xor
loope
inc
hlt
lahf
loopne
and
fxch
or
add
adc
stos
(bad)
dec
imul
fistp
push
mov
cmp
adc
jle
and
pop
xchg
mov
inc
dec
int
pop
neg
inc
pop
inc
mov
cwde
in
ror
mov
imul
scas
test
add
push
arpl
pop
jp
call
fmul
mov
jl
and
imul
fs
arpl
cld
lods
pop
or
mov
test
ins
iret
ss
fimul
ret
and
lods
cmp
xchg
cmp
mov
jne
loop
dec
dec
jg
xchg
xor
fistp
das
pop
or
dec
fist
ror
sub
sbb
mov
and
dec
mov
rol
add
and
and
adc
retf
cwde
inc
jmp
outs
mov
push
xchg
or
add
stc
sub
jae
sbb
pop
ret
gs
retf
pop
mov
dec
(bad)
ss
xor
jno
das
aas
sub
shl
sar
adc
arpl
pop
retf
ins
push
or
popa
jae
rcl
pop
sub
mov
lahf
mov
aam
test
or
jno
jne
mov
and
movs
mov
inc
leave
bnd
fdiv
or
add
mov
leave
(bad)
mov
(bad)
clc
popf
jae
mov
mov
aaa
or
lds
jo
stos
out
dec
pop
repnz
inc
inc
inc
xchg
xchg
nop
push
xor
ret
mov
out
jecxz
sub
push
aaa
ss
mov
push
inc
enter
add
mov
daa
dec
outs
add
dec
les
inc
ds
cld
jb
sbb
jmp
mov
cs
test
add
enter
mov
push
and
push
pop
fdiv
pushf
outs
pusha
outs
cld
ffreep
call
retf
das
xor
arpl
sbb
les
stos
add
mov
repnz
aaa
enter
idiv
imul
mov
cmp
sub
pop
arpl
es
cwde
cmp
cmp
push
pop
mov
adc
pop
adc
mov
mov
mov
cmp
push
(bad)
sub
shr
adc
test
stos
xchg
(bad)
cmp
mov
sub
aad
mov
daa
loopne
fxch
inc
jae
mov
mov
mov
jnp
(bad)
add
inc
sahf
out
pop
jge
and
jp
dec
scas
mov
dec
movs
fnstsw
retf
rcl
into
mov
cmp
leave
jmp
jmp
ret
stos
jno
add
mov
fisub
mov
xor
xor
jge
jecxz
mov
jb
add
xchg
fwait
inc
adc
out
or
repz
aad
jp
(bad)
js
lods
loopne
rcl
sbb
test
in
inc
adc
js
outs
push
add
fcomip
jmp
out
xchg
xor
jo
repz
mov
sbb
or
or
stc
inc
cmps
aas
push
add
mov
nop
rcl
sbb
imul
pop
outs
in
push
das
outs
or
mov
cmps
pop
and
clc
sti
mov
(bad)
sbb
inc
cmp
js
add
dec
lahf
mov
mov
xchg
cmp
repnz
mov
in
scas
sbb
sbb
stos
test
inc
shl
pop
mov
mov
push
pusha
fld
xor
pop
retf
test
inc
xchg
or
push
test
adc
mov
inc
mov
adc
pop
ficom
outs
out
popa
pop
jl
std
imul
pop
sub
loopne
or
repz
push
fcmovu
cmp
fdiv
xchg
and
pop
dec
loope
push
pop
ret
lods
das
add
cmp
jmp
add
jo
adc
pop
fiadd
mov
sub
pop
jae
fisttp
aas
xchg
fwait
and
xchg
fiadd
pushf
inc
movs
aad
jmp
data16
xchg
out
je
pop
repz
stc
loop
icebp
clc
or
push
sub
mov
xor
mov
mov
div
aad
fbstp
or
lahf
lods
lahf
sub
scas
js
std
mov
pop
imul
mov
movs
sub
ror
mov
mov
push
aaa
in
aas
push
cmp
pandn
adc
inc
jae
outs
push
mov
not
mov
mov
loope
inc
jne
sbb
pop
cmp
and
add
sub
int3
xchg
fsubr
mov
data16
jns
jmp
push
ret
mul
mov
mov
xor
inc
or
icebp
mov
mov
icebp
lea
retf
lods
mov
cli
pushf
dec
jns
cwde
ret
test
popf
jp
sub
pushf
dec
inc
popf
scas
not
shl
cs
inc
bound
pop
sbb
sbb
rcr
test
pop
fsubr
adc
add
ins
into
out
push
or
xchg
popa
xor
or
daa
pushf
xchg
aad
ret
push
cmp
ins
stos
lahf
jp
aaa
(bad)
sbb
or
pushf
outs
sub
fiadd
test
or
call
push
inc
mov
xchg
jns
push
pushf
pop
aaa
fisubr
movs
jb
jnp
jg
cdq
outs
sar
repz
std
push
jg
and
push
scas
adc
shl
in
sbb
(bad)
mov
pop
sub
iret
push
jge
jmp
fist
repnz
popa
dec
(bad)
cmc
push
push
daa
adc
mov
xor
mov
je
fld
and
xlat
mov
pop
push
dec
test
inc
dec
mov
adc
adc
imul
mov
mov
retf
pop
add
mov
pushf
adc
inc
or
sub
aad
dec
jmp
xchg
inc
xchg
push
inc
pop
sbb
and
mov
icebp
inc
jmp
jmp
pop
dec
pusha
cmp
jae
jl
push
aad
jl
mov
adc
test
sbb
leave
pop
imul
or
mov
int
dec
out
xchg
idiv
jl
shr
int3
pop
lds
les
pop
jmp
popf
cwde
cmp
fwait
mov
test
adc
sub
push
push
fwait
and
push
cmp
mov
cmp
rol
jp
movs
sbb
sub
add
and
xchg
push
and
popf
outs
cld
out
pop
and
jmp
scas
push
cmp
push
cmc
mul
ss
or
repz
rcl
push
dec
cmps
es
adc
movs
fisub
scas
cli
rol
xor
je
sub
mov
jns
sbb
ret
xchg
aam
mov
sub
(bad)
ja
xchg
test
in
imul
int
in
cmc
mov
movs
sti
dec
adc
cwde
stos
outs
add
pslld
xchg
cdq
push
add
dec
sbb
mov
lods
out
push
mov
xor
aad
and
out
(bad)
call
loope
mov
fs
retf
outs
movs
mov
mov
mov
cli
mov
(bad)
cmp
or
leave
sub
arpl
gs
dec
or
jne
ja
push
fld
xchg
test
cli
sub
sbb
scas
mov
push
adc
sbb
jge
or
inc
mov
retf
pop
sbb
push
and
or
sahf
dec
and
sub
xor
icebp
in
cmp
cmps
stos
sub
or
and
je
xchg
enter
and
xchg
sti
adc
scas
addr16
pop
pushf
pop
mov
cwde
xchg
or
pop
(bad)
in
rcl
jnp
push
das
sub
and
lahf
cld
test
test
pop
mov
stc
add
mov
xchg
jmp
in
jecxz
xor
cmp
nop
cmp
mov
sbb
push
add
push
jle
fimul
add
rol
jl
in
cmc
mov
dec
dec
nop
cmps
xor
inc
pop
test
pop
dec
jp
sbb
mov
out
rcr
cdq
jp
push
xlat
inc
and
pop
aad
jg
push
popa
mov
out
sub
test
or
in
cli
shr
pop
mov
xor
bound
and
(bad)
stos
hlt
icebp
xchg
dec
inc
sbb
nop
out
pop
test
mov
xchg
fs
cmp
das
fimul
dec
imul
ss
jg
mov
imul
mov
nop
stc
jae
loope
sub
dec
inc
nop
lock
cli
(bad)
nop
mov
inc
hlt
adc
stc
pop
fimul
jmp
xchg
jno
ins
dec
adc
aad
lods
mov
js
loopne
mov
xchg
mov
dec
enter
dec
sub
push
xor
int
(bad)
jecxz
mov
dec
call
xchg
fidiv
fstp
rcr
pop
jecxz
(bad)
push
mov
inc
fwait
outs
sub
aam
out
cmc
mov
mov
inc
call
add
pop
outs
xchg
enter
sub
or
jcxz
les
es
adc
sbb
sti
leave
jns
jle
test
(bad)
in
push
ror
push
fadd
movs
dec
adc
push
xchg
xchg
outs
inc
pop
inc
icebp
push
pop
or
adc
ss
xchg
mov
inc
loop
fadd
ret
and
(bad)
pusha
mov
dec
push
xor
sahf
and
loopne
mov
dec
fs
cwde
cwde
mov
gs
in
lods
mov
and
xchg
inc
mov
fdiv
sti
sti
and
js
jmp
mov
dec
cld
adc
mov
js
addr16
mov
subps
inc
rcl
inc
imul
xchg
test
mov
pop
lahf
dec
ins
cmc
sub
movs
and
jbe
popa
and
mov
add
movs
(bad)
mov
mov
sub
mov
jmp
adc
push
ins
push
xor
popf
mov
bound
lods
imul
push
mov
push
sbb
jae
mov
cs
mov
sbb
and
jno
push
xor
ja
add
in
push
inc
in
xchg
cmp
push
mov
test
cmps
mov
je
cmp
cld
xor
sar
loope
mov
dec
add
sbb
push
ret
aam
mov
jns
jno
cmp
mov
jbe
and
clc
ffreep
mov
shr
inc
movs
ror
(bad)
ins
sub
repnz
into
xlat
pop
add
rcr
dec
(bad)
jnp
rcr
lods
ficom
xor
shr
xor
cmp
popf
scas
gs
pop
or
into
(bad)
pop
mov
xor
pop
lock
pop
add
add
mov
jmp
fstp
fnstenv
int
fs
xchg
cmp
pop
aas
xor
mov
mov
gs
cmps
push
into
push
push
cmp
rol
jno
daa
inc
push
inc
or
hlt
xor
aaa
mov
(bad)
movs
mov
mov
jle
or
sbb
jle
inc
sbb
fiadd
ss
dec
push
cs
ror
dec
inc
adc
call
lahf
pop
cli
fidivr
(bad)
jno
push
repnz
mov
fisub
div
cmps
cmp
inc
mov
icebp
pop
test
dec
int
dec
or
pushf
jns
cmp
into
mov
ret
dec
jns
out
cmp
aaa
test
sub
clc
(bad)
(bad)
out
lods
pushf
pop
jge
stos
fdiv
add
xchg
pminsw
icebp
ss
mov
iret
fwait
mov
xor
pushf
aad
pop
test
ret
clc
aam
xlat
stos
xor
or
addr16
push
cmp
lahf
out
cmps
fnstsw
out
clc
int3
(bad)
xor
or
rcr
retf
mov
cmovs
les
jae
popa
mov
popf
sub
cmp
mov
sbb
or
std
inc
jg
ret
movs
cmp
dec
dec
mov
sub
stos
push
mov
mov
in
neg
xchg
or
mov
and
jae
mov
xchg
adc
outs
cmp
mov
inc
jbe
lods
aad
xor
push
and
mov
jbe
push
mov
ror
aas
fwait
or
ds
jg
jle
xchg
test
outs
push
add
mov
xchg
adc
iret
xor
jne
ins
pop
push
jecxz
fist
pushf
(bad)
ficom
sub
idiv
pop
cld
aad
add
adc
and
cdq
mov
hlt
mov
adc
pushf
loopne
dec
call
xor
cmc
or
das
xor
stc
bound
or
mov
inc
in
into
das
out
stos
mov
add
imul
cli
push
leave
retf
rcl
scas
clc
mov
fwait
lods
adc
dec
idiv
pop
mov
fcom
and
popf
dec
and
fisubr
inc
ret
sub
sahf
cs
std
sbb
cwde
xchg
sub
pop
jg
sahf
je
loope
add
nop
pop
lea
sti
test
add
popf
adc
add
mov
lods
loope
push
push
stos
bound
pop
bsf
fs
jmp
mov
sbb
adc
gs
dec
mul
mov
mov
retf
(bad)
shl
outs
out
gs
inc
pushf
call
mov
cdq
or
(bad)
(bad)
pop
cs
pop
aas
cmovae
cmp
retf
int
or
stos
jge
cld
or
xchg
push
xchg
xor
mov
loop
shl
retf
inc
data16
sar
dec
movs
dec
or
and
add
push
aaa
add
and
mov
icebp
mov
in
cmp
aaa
cli
jge
mov
xor
daa
jmp
cmp
pop
push
and
jb
jmp
mov
movs
jbe
mov
sti
adc
xor
clc
pop
data16
(bad)
movs
pop
aam
sbb
mov
fcomi
jle
loopne
or
ret
and
cdq
xor
push
nop
ds
cwde
adc
mov
loop
fsub
mov
sub
in
fistp
sbb
and
xor
aad
push
movs
jg
adc
adc
fs
fnstcw
xor
adc
cmp
ret
imul
and
out
ret
daa
push
xor
jmp
inc
sub
xor
cdq
aas
ror
call
bound
out
shl
rol
inc
in
ret
push
adc
clc
leave
mov
mov
js
xor
xchg
std
shrd
aas
and
movs
pop
in
jge
pop
inc
lds
pop
cmps
fisttp
mov
(bad)
jns
sub
xchg
imul
adc
sub
sbb
cwde
ret
ja
jle
push
aaa
push
bound
mov
scas
push
dec
daa
push
pop
in
mov
pop
inc
loope
and
mov
add
popf
mov
sub
enter
add
xor
ret
xchg
mov
es
push
pop
idiv
xor
adc
gs
and
fist
ss
out
imul
and
jns
loopne
and
or
push
imul
inc
rcl
xor
dec
out
and
loopne
cdq
adc
dec
inc
je
lods
jmp
inc
sbb
test
xchg
sahf
push
clc
shr
in
sbb
xor
pop
mov
mov
cmp
mov
das
popf
sar
jmp
fcomi
les
lods
adc
test
xor
call
call
xchg
pop
je
jmp
cmps
mov
not
pop
(bad)
sbb
fmul
test
add
inc
sbb
mov
aaa
pop
xchg
jg
jecxz
imul
cs
(bad)
mov
ss
loope
xor
mov
and
jae
xor
mov
jb
mov
push
mov
ja
sti
loope
cmp
hlt
jmp
jbe
and
arpl
inc
les
hlt
stos
ins
mov
push
out
dec
mov
mov
lahf
aad
dec
int3
mov
sbb
outs
(bad)
mov
xchg
cmp
je
test
ss
in
xchg
sub
popa
mov
test
push
xchg
lods
outs
add
popa
in
aam
fwait
push
loop
mov
ins
(bad)
push
xchg
inc
xor
sbb
and
mov
cmp
mov
cmp
ret
pop
or
out
bound
mov
in
inc
xor
xchg
arpl
outs
dec
fisub
das
or
dec
retf
out
stos
test
das
push
div
fiadd
out
stos
(bad)
loopne
cli
(bad)
aas
pushf
jb
sub
or
mov
jg
sbb
push
mov
(bad)
in
nop
imul
lods
push
in
dec
mov
test
or
mov
imul
pop
xor
out
xor
pop
pop
and
pop
dec
jl
movs
aad
jl
popa
or
and
sub
es
jno
in
sahf
out
mov
das
enter
dec
es
nop
out
jne
jmp
iret
xor
iret
xchg
fs
cmp
bound
xchg
dec
push
lahf
pop
pop
les
mov
outs
xchg
mov
and
test
pop
imul
out
lds
nop
loope
das
fstp
mov
popf
in
sub
pop
xchg
mov
frstor
pusha
rcr
jbe
pop
pop
sahf
std
(bad)
push
mov
pop
push
inc
leave
sub
pop
and
push
rcl
push
adc
and
or
sub
stos
xchg
cmp
aam
mov
jle
mov
test
(bad)
retf
popf
aaa
dec
bound
sbb
mov
jne
push
mov
popa
imul
loopne
outs
push
mov
xchg
aaa
ins
test
or
jo
out
and
fimul
add
adc
and
popa
loop
je
mov
pop
sub
cmp
lds
xchg
push
into
dec
repz
and
fwait
ins
mov
push
inc
je
inc
pop
dec
mov
fstp
jnp
adc
cwde
popf
fcomp
adc
or
cmp
or
iret
icebp
cmps
xchg
shl
cmp
enter
in
sbb
imul
shl
dec
pop
in
push
sub
adc
loope
dec
mov
popf
pusha
push
ins
imul
test
in
popa
xor
mov
popf
cmp
mov
test
push
or
or
stos
push
sti
xor
(bad)
or
ja
jge
out
mov
cmps
adc
add
pop
mov
xchg
mov
xchg
pop
push
cmps
aaa
pop
dec
xor
(bad)
xchg
stos
retf
xchg
pop
pop
add
arpl
adc
fistp
pusha
push
iret
ja
lock
mov
icebp
mov
push
push
leave
push
pop
sub
or
inc
jno
xor
cmp
call
push
popa
cwde
jmp
stc
mov
cld
inc
xor
xor
fistp
pop
add
sbb
sub
and
nop
xor
add
in
jmp
in
add
ins
cmc
mov
inc
push
icebp
ds
adc
pop
addr16
cs
push
das
inc
rol
cmp
pop
mov
xor
sub
mov
xchg
pop
aas
mov
in
cmp
pop
jg
in
inc
push
cmp
pop
clc
pop
or
mov
mov
mov
mov
(bad)
data16
aam
dec
data16
popf
das
hlt
mov
adc
mov
sub
inc
dec
or
mov
and
mov
dec
call
push
in
(bad)
pop
std
(bad)
fwait
or
add
mov
mov
inc
xlat
movs
repnz
movs
js
les
push
inc
or
or
int3
aad
test
clc
mov
mov
imul
jae
xchg
sub
leave
loope
jno
mov
mov
test
shr
add
fisubr
test
push
jns
xor
stc
mov
retf
pop
add
add
lods
sub
lods
mov
push
cmp
jle
dec
movs
cmp
and
scas
test
shl
add
add
aas
fnop
push
push
mov
sbb
cdq
jmp
leave
add
iret
mov
pop
es
rep
popa
xchg
pop
cmp
cwde
aas
clc
jle
mov
mov
inc
pop
ja
aam
(bad)
call
jmp
out
push
push
sub
xchg
mov
scas
scas
or
sub
inc
call
xor
mov
lea
imul
ficom
sub
xor
add
fdivrp
es
div
scas
ja
pop
cmp
inc
sbb
cmp
push
imul
lock
call
fisub
clc
cdq
push
fsub
sbb
movs
jne
or
xor
cs
jne
in
mov
sbb
mov
push
pop
adc
add
call
and
mov
iret
jns
in
cwde
jg
add
bound
mov
jl
inc
int
xchg
inc
fmul
mov
and
or
ret
sbb
mov
adc
add
adc
adc
pop
pop
(bad)
retf
idiv
pop
xor
loopne
ja
(bad)
out
repz
test
dec
xor
ss
xchg
push
stc
adc
mov
mov
popf
dec
ds
add
dec
adc
leave
jmp
fmul
dec
rol
jecxz
xchg
scas
fisubr
mov
mov
pop
int
cmps
(bad)
fs
push
leave
and
cmps
xor
and
data16
xlat
outs
jae
ficom
adc
data16
sub
mov
test
cdq
xor
ins
outs
cmp
pop
(bad)
dec
aaa
mov
das
aad
pusha
out
ins
jns
push
mov
jp
adc
sar
(bad)
dec
sbb
sub
mov
mov
(bad)
push
xchg
jmp
call
push
ins
scas
loop
adc
rcr
cmp
ins
rcl
lock
sub
into
pop
int3
xchg
push
add
daa
fsub
scas
fnstsw
adc
shrd
pop
cmp
mov
xchg
or
ret
inc
sahf
sbb
out
mov
jmp
gs
mov
pop
fs
pop
movs
leave
fiadd
loopne
pop
mov
sub
mov
xchg
push
pusha
or
add
rcr
fld
dec
or
jns
dec
stos
ja
jns
sub
sbb
iret
sub
stos
std
and
jae
sbb
pop
shr
inc
cmp
dec
cdq
mov
dec
out
jl
outs
hlt
add
(bad)
mov
dec
getsec
adc
ret
dec
inc
jle
popf
test
jl
cmps
ror
adc
inc
popf
sti
hlt
lahf
mov
in
xchg
xor
pop
pop
jge
push
mov
jle
jg
sti
mov
mov
js
dec
and
push
out
add
jge
(bad)
aaa
jne
retf
jg
push
pushf
hlt
inc
(bad)
outs
sti
xchg
ret
psrad
and
test
push
loope
in
das
lods
call
retf
xchg
cmps
pop
adc
sbb
cli
ins
or
mov
jl
movs
addr16
mov
jbe
xchg
fadd
cmps
add
mov
arpl
aaa
cld
addr16
dec
scas
es
sub
inc
xor
test
dec
in
dec
push
iret
pop
sahf
sub
cmp
or
fxam
call
adc
cdq
push
sbb
jge
add
pop
sub
arpl
or
arpl
cmp
imul
movs
gs
sbb
mov
cli
pop
push
std
mov
gs
sub
idiv
and
retf
stos
(bad)
mov
sti
dec
mov
sub
xchg
test
push
mov
mov
fcomp
cmp
adc
pop
push
mov
xchg
push
cmps
mov
imul
(bad)
push
ror
inc
(bad)
sub
push
mov
pop
or
or
mov
cs
and
test
inc
shl
mov
retf
shl
adc
sar
xor
leave
inc
sub
inc
movs
xchg
mov
retf
ror
aas
pop
in
mov
aas
int
ja
sub
mov
jne
dec
sub
mov
adc
add
pop
cmp
in
aas
pushf
(bad)
cmps
sub
mov
and
push
inc
and
or
mov
mov
test
add
(bad)
fild
mov
or
inc
inc
movs
cmps
pop
retf
repz
cmps
adc
xchg
clc
xchg
mov
push
test
scas
xchg
sub
mov
ins
addr16
pop
sbb
pop
add
js
sahf
mov
test
fimul
mov
cmp
pop
jb
jae
and
push
enter
jo
js
jg
popf
mov
push
adc
xor
dec
sbb
stc
push
jnp
test
bound
div
loope
cmps
inc
xlat
(bad)
xor
(bad)
cdq
pop
xadd
out
push
mul
cmps
cmp
mov
mov
in
dec
sbb
lahf
mov
(bad)
pop
je
popf
mov
popa
mov
inc
mov
clc
inc
and
test
gs
loopne
in
(bad)
mov
lock
mov
fst
pop
pop
dec
fucomp
add
fidiv
test
sub
(bad)
sub
mov
inc
mov
mov
xchg
pushf
mov
jl
and
push
xchg
sbb
dec
aaa
pop
sbb
xor
lds
jmp
fld
jp
adc
pop
jg
leave
out
sbb
cwde
dec
pop
sub
mov
cli
test
jecxz
xchg
cmps
iret
push
cli
stos
jge
call
loopne
and
in
loopne
xor
mov
mov
xor
clc
mov
stos
or
add
dec
xor
out
daa
scas
inc
jmp
push
xchg
into
push
sub
daa
dec
inc
dec
inc
dec
push
jno
mov
enter
xor
iret
sbb
sbb
loope
adc
adc
les
fs
leave
mov
(bad)
xchg
shl
xchg
jns
xor
fisubr
inc
sti
mov
repz
pushf
call
mov
or
add
sbb
mov
ror
and
popa
mov
or
pop
push
or
test
cdq
mov
(bad)
mov
cwde
sahf
jecxz
adc
(bad)
mov
cmp
dec
xchg
xchg
aam
add
in
sub
push
or
sar
xlat
aas
pop
popa
in
sbb
mov
clc
daa
stos
and
and
jb
cmp
dec
mov
mov
gs
ja
push
pop
mov
dec
mov
mov
and
xor
mov
popa
mov
pop
mov
push
ins
dec
sbb
xlat
add
add
add
push
loope
inc
jle
dec
inc
clc
lods
fadd
test
cmp
jmp
inc
das
xchg
ins
icebp
add
cdq
or
movs
bound
cmps
or
ja
pop
and
or
(bad)
fsub
outs
mov
jno
scas
fs
ret
cmps
movs
out
push
jnp
pop
sar
sbb
je
dec
movs
push
pop
push
or
xchg
add
and
fcomp
pop
add
and
aad
es
push
mov
out
ins
ficom
inc
shl
mov
mov
lahf
scas
call
jl
lock
leave
xchg
add
mov
cli
push
test
aam
mov
mov
jns
push
shl
xchg
inc
sub
mov
cmp
fwait
enter
add
test
dec
xchg
popf
xchg
test
add
iret
in
mov
mov
inc
fwait
stos
fcom
sbb
adc
sub
dec
into
mov
leave
and
jmp
retf
mov
xchg
add
fprem
jns
movs
call
push
cld
ja
adc
rcr
jp
dec
push
jnp
cmps
or
stos
mov
xor
mov
test
cmp
das
mov
and
nop
cmp
test
outs
shl
mov
add
push
ret
int
cmp
iret
cmps
push
inc
sti
fucomip
mov
push
adc
inc
gs
out
sbb
mov
(bad)
or
mov
scas
jb
mov
rcl
(bad)
mov
sub
push
test
jbe
leave
cdq
xchg
mov
mov
test
popa
mov
fs
mov
inc
shl
xchg
fnstenv
push
or
loopne
out
and
dec
leave
retf
int3
push
in
shl
std
jecxz
int3
das
or
inc
repnz
mov
je
adc
xchg
mov
dec
ja
test
cmp
sar
mov
aad
fucomi
mov
test
or
add
(bad)
sar
ja
cmp
movs
mov
jbe
push
xchg
int
jp
cmps
pop
fs
add
mov
add
add
or
ror
jecxz
jne
clc
(bad)
test
and
fwait
mov
mov
out
mov
xchg
mov
add
inc
adc
jbe
add
bound
loope
xor
and
inc
into
mov
or
xchg
daa
dec
mov
sub
movs
sbb
cwde
shr
jmp
cs
imul
fwait
jne
pusha
pop
lds
les
mov
mov
cmp
xor
mov
jno
cmp
ret
jmp
mov
je
mov
mov
inc
dec
push
push
loope
xchg
lods
(bad)
hlt
and
cli
(bad)
and
push
sub
rcr
sbb
or
neg
mov
int
loopne
add
xchg
jecxz
rcl
jmp
jge
ins
inc
sbb
or
push
imul
sbb
fld
dec
inc
sub
jge
retf
push
dec
and
test
shr
movs
ss
hlt
inc
add
aad
jmp
adc
fmul
push
ins
icebp
in
jecxz
mov
sbb
sti
push
and
iret
les
mov
dec
jg
aas
call
cmp
lahf
pop
aam
cwde
in
mov
pop
cmp
inc
stos
imul
xchg
inc
jmp
xor
xor
mov
cmp
dec
data16
cmps
jnp
mov
test
or
xor
in
aas
add
inc
aad
pop
cmp
sahf
aas
inc
cdq
fisubr
aad
pop
jmp
add
call
pop
dec
jo
(bad)
in
ins
nop
bound
jecxz
add
rol
addr16
cmps
jecxz
mov
fdiv
jno
lahf
test
imul
aaa
pop
sbb
rcr
and
fwait
mov
icebp
fadd
jae
push
push
xchg
cmp
jno
rol
retf
sbb
popa
pop
add
imul
rcr
cwde
popf
cmp
dec
xchg
cmp
jns
sbb
jbe
scas
enter
push
pop
and
into
data16
lds
push
in
jno
jmp
sub
or
and
pop
dec
cmps
leave
dec
addr16
adc
xor
mov
retf
in
enter
push
pop
adc
push
lahf
mov
cld
push
push
xor
scas
addr16
ins
xchg
das
mov
cmp
hlt
push
or
xor
sahf
mov
inc
cmp
dec
in
mov
jmp
std
sbb
adc
out
add
ins
jle
fwait
pop
stc
(bad)
mov
mov
inc
scas
add
rcl
movs
aad
es
mov
sbb
jbe
dec
add
fidivr
adc
mov
inc
push
sbb
lahf
fsub
iret
add
jl
lock
or
out
rcl
mov
mov
(bad)
and
add
(bad)
js
mov
jmp
dec
into
cmc
push
aad
cmc
dec
out
leave
inc
cdq
adc
pop
add
mov
mov
test
pause
mov
xchg
adc
clc
xchg
fwait
adc
inc
push
adc
fwait
leave
daa
scas
push
ret
movs
lea
shl
loop
sbb
pusha
outs
pop
sahf
xchg
inc
cdq
adc
mov
jmp
sbb
cmps
adc
inc
push
mov
aam
cs
fwait
dec
pop
ret
lds
ds
jmp
jmp
push
adc
cmp
push
xor
into
xor
mov
fmul
inc
mov
jno
fs
jb
in
mov
push
jg
lds
retf
popa
jp
and
sbb
cmps
inc
stos
cdq
jmp
push
xor
in
outs
popa
push
sbb
cmp
movs
stos
popf
cmps
inc
sub
jbe
gs
cmp
cmp
inc
(bad)
dec
mov
(bad)
mov
xchg
or
stos
in
mov
add
push
mov
scas
mov
or
scas
mul
(bad)
pop
xchg
(bad)
hlt
call
stos
mov
jb
push
test
pushf
inc
stc
in
retf
ror
call
dec
xor
iret
adc
rcr
dec
push
outs
inc
dec
adc
and
test
(bad)
test
sbb
push
lahf
or
adc
int
or
fistp
call
mov
dec
retf
xor
dec
jmp
mov
sbb
and
mov
jecxz
and
mov
sub
cmc
int
xchg
stc
outs
sub
cs
dec
or
mov
add
loope
(bad)
cmc
jb
rcl
mov
cwde
mov
aas
jae
stc
out
leave
inc
or
or
(bad)
or
inc
sub
xlat
gs
aas
xchg
ficom
out
sbb
xor
dec
pop
outs
or
xchg
xchg
mov
xor
dec
sub
push
dec
dec
mov
mov
or
fist
ja
and
ss
call
icebp
add
std
(bad)
fmul
sti
shr
fwait
pop
imul
outs
push
or
shl
mov
sub
mov
jbe
out
pusha
pushf
cwde
out
dec
push
out
(bad)
aam
ficom
ror
push
push
adc
fldcw
out
lea
enter
sar
push
fwait
cwde
sbb
les
cs
sub
push
cmp
sub
out
xchg
ret
dec
dec
pushf
int3
fisubr
out
push
jbe
pop
jb
push
fmul
mov
std
into
shl
jnp
inc
push
sbb
in
inc
iret
cmp
dec
xchg
and
mov
repz
call
jmp
inc
sti
loope
enter
mov
(bad)
lods
stos
push
arpl
or
(bad)
lock
cs
lods
gs
pop
dec
out
xadd
mov
scas
lods
or
sbb
(bad)
ds
pop
sbb
ss
mov
not
shr
xchg
pop
cmc
js
mov
mov
leave
dec
outs
bound
bound
xchg
neg
xchg
idiv
(bad)
addr16
pop
and
shl
(bad)
push
aad
into
add
sub
jbe
movs
adc
and
adc
dec
bound
pop
repnz
jg
ins
or
fucom
add
push
(bad)
inc
mov
add
xchg
jle
cmp
loopne
lock
sub
test
outs
xchg
pop
jmp
icebp
mov
mov
leave
ror
mov
out
cmp
aad
mov
repnz
mov
sub
cmps
addr16
or
es
xchg
cmp
cdq
in
mov
adc
inc
and
ret
jb
in
xor
xor
sbb
loopne
mov
std
movs
stos
js
or
clc
pop
xchg
jbe
mov
mov
dec
jne
xor
lea
loop
fild
fsub
loopne
mov
ins
inc
daa
sub
out
popa
jge
add
cmp
mov
and
mov
sub
mov
cmp
popa
jl
inc
pop
jb
aaa
inc
clc
jno
xor
cld
call
ins
inc
(bad)
cmp
loope
or
pop
test
mov
sub
inc
adc
sub
call
jb
xchg
jp
jae
dec
shl
adc
dec
fs
sbb
sahf
lea
sbb
sti
pop
gs
mov
inc
fisub
and
dec
sar
xchg
popa
movs
pop
lods
or
in
mov
fild
jae
lock
dec
call
mov
dec
fs
loope
retf
jns
xchg
enter
nop
cmc
js
dec
loopne
mov
push
fild
nop
mov
scas
and
pop
rcr
push
add
addr16
or
into
xchg
mov
scas
jo
sbb
cmp
int
pop
pop
enter
les
aaa
mov
test
sbb
gs
mov
dec
xlat
xchg
xor
and
dec
jmp
mov
cwde
sahf
push
inc
or
mov
stos
int3
and
and
and
scas
mov
stos
or
and
and
or
scas
fs
or
push
stos
inc
sbb
std
out
and
js
std
aaa
lods
sbb
lods
rcl
and
stos
sub
call
inc
cmps
(bad)
adc
loop
dec
inc
popa
cmp
loop
fs
int3
(bad)
fstp
cmp
jae
mov
stc
clc
mov
bound
push
xor
push
aaa
imul
mov
fbld
xor
dec
daa
arpl
adc
add
loope
mov
mul
push
(bad)
or
pop
arpl
jo
add
int
sahf
xor
leave
shl
pop
and
(bad)
mov
push
push
xchg
enter
dec
jmp
xor
mov
inc
int3
movs
inc
xchg
push
fild
clc
ds
out
mov
lock
aas
mov
sub
lods
outs
stc
add
call
add
jns
scas
loope
or
das
inc
ror
cdq
in
sub
imul
mov
lock
adc
sub
ss
pop
fisub
mov
(bad)
ror
stos
xor
stc
mov
push
sub
push
inc
test
fisttp
gs
test
scas
fdivr
add
mov
cld
and
clc
jne
shl
fistp
(bad)
test
mov
ja
xor
push
(bad)
neg
pop
in
mov
push
mov
les
retf
js
cli
std
push
lds
retf
nop
and
popa
imul
bound
add
lahf
or
repnz
xchg
movs
cmp
out
xchg
(bad)
push
cmps
popf
fdiv
push
add
jbe
loop
push
dec
inc
sub
fdiv
aaa
dec
clc
(bad)
enter
les
cs
lock
mov
or
outs
sub
cmc
rcr
pushf
pusha
ret
add
mov
jg
adc
sub
mov
daa
das
in
pop
sub
jp
inc
les
jp
out
push
retf
adc
in
pop
and
mov
and
out
pop
enter
movs
pop
and
ins
sahf
cdq
push
ds
add
(bad)
repz
push
rcl
in
push
jb
inc
jne
pop
icebp
or
repnz
fmul
shl
out
cmp
arpl
xlat
dec
mov
pop
sub
inc
push
fwait
inc
add
out
sub
lods
or
cdq
test
mov
(bad)
in
int3
sbb
mov
bound
outs
cmps
mov
mov
cwde
jl
jmp
push
jno
cmp
movs
mov
test
push
inc
imul
mov
pushf
imul
fsub
jno
mov
fstp
xchg
js
adc
popf
(bad)
jecxz
dec
push
repz
pusha
hlt
stos
xor
push
sbb
stc
aas
(bad)
movs
ds
pop
imul
test
sbb
test
jae
mov
jg
loope
test
out
or
sub
fst
xlat
xlat
loop
xor
sti
retf
sbb
dec
setno
xor
test
xchg
or
push
sub
add
xchg
std
test
test
cli
int
mov
arpl
inc
test
fs
sbb
sbb
jne
sub
jmp
mov
into
dec
daa
repnz
daa
arpl
jne
lods
adc
out
pop
(bad)
adc
or
not
or
jmp
shr
cmps
jp
arpl
mov
pop
and
in
cmp
rol
loop
mov
stos
ins
dec
test
add
or
rcl
cmp
push
sbb
bound
adc
adc
in
jg
out
mov
xor
dec
adc
test
out
mov
dec
outs
and
movs
test
fs
mov
je
bound
das
out
dec
mov
popf
outs
jmp
mov
loop
(bad)
sbb
pop
fnsave
sbb
ds
aad
xchg
mov
in
(bad)
retf
mov
out
mov
and
cmp
ret
repnz
into
test
out
rcr
out
push
test
inc
sub
rcr
data16
pop
jecxz
mov
addr16
mov
inc
fbstp
cld
int
test
cmps
test
or
push
or
mov
popf
call
out
(bad)
loope
pop
jb
push
imul
push
push
xchg
and
popf
jmp
jg
cdq
dec
std
pop
sub
std
jle
or
and
mov
mov
lock
loopne
cmc
in
das
ds
int3
and
cmp
sbb
or
ins
push
sbb
add
mov
pop
cwde
push
ja
pop
icebp
int
sahf
push
adc
and
outs
or
cmp
jge
sub
mov
(bad)
int3
ror
xchg
ins
hlt
push
dec
in
adc
adc
idiv
pop
rol
stos
lds
mov
fs
test
cmp
mov
sbb
pusha
in
popa
in
sub
jbe
(bad)
arpl
out
fisubr
inc
add
in
and
jnp
fmul
cmps
loopne
aad
je
push
xchg
and
out
xor
fadd
ins
add
lds
mov
jae
push
outs
hlt
sti
shr
ja
cs
bound
dec
pop
daa
ins
scas
push
jmp
fdivr
cmp
pop
rol
mov
adc
push
inc
xor
xchg
mov
pop
movs
movs
pop
pop
retf
xchg
nop
mov
mov
scas
adc
test
sbb
xor
jle
mov
mov
adc
bound
inc
movs
out
cmp
inc
popa
test
das
xchg
cdq
mov
shl
hlt
aad
sbb
sbb
aaa
call
xchg
mov
mov
movs
(bad)
out
fst
cmp
call
mov
cmp
sar
imul
popf
inc
add
mov
enter
imul
call
test
dec
pop
(bad)
push
mov
xlat
sbb
xchg
sub
iret
pop
mov
icebp
xchg
sub
mov
xor
sbb
scas
jle
cwde
das
mov
xor
aaa
neg
mov
mov
xor
jmp
aaa
pop
push
and
pop
outs
jle
mov
aad
cmp
sub
xchg
push
adc
mov
scas
jmp
arpl
addr16
rcl
mov
je
rol
aam
ds
xchg
(bad)
(bad)
adc
jg
(bad)
cmp
lods
jmp
and
sbb
push
inc
jnp
push
sar
mov
jl
mov
sti
sbb
and
imul
outs
gs
repnz
mov
or
retf
mov
aad
sub
ins
scas
dec
fwait
popf
outs
jecxz
sub
and
xchg
mov
inc
pop
rcr
test
std
xchg
pop
xchg
xchg
in
sbb
push
outs
(bad)
test
mov
mov
dec
fld
jns
cmps
jg
jg
push
lds
push
mov
repz
mov
add
das
or
sub
xor
ds
in
mov
cmp
mov
inc
sbb
js
dec
dec
mov
int
inc
jecxz
(bad)
(bad)
lea
mov
push
adc
dec
fs
cs
mov
mov
lahf
adc
jp
lgs
sub
repnz
mov
cmc
dec
push
xor
mov
sub
cmc
inc
xchg
jecxz
fst
push
inc
fild
daa
lods
leave
rcr
scas
in
sbb
adc
(bad)
cmc
xchg
xchg
fcmovnbe
cmps
repnz
iret
and
dec
bound
scas
xchg
frstor
push
pop
and
icebp
arpl
push
test
cmp
sub
sahf
xor
mov
inc
or
add
test
pop
or
or
xchg
cmps
in
inc
sti
in
pop
mov
sbb
mov
push
or
sub
inc
fdivr
adc
retf
adc
xlat
pop
and
out
xor
call
dec
cld
retf
pop
add
outs
ins
ror
push
fs
mov
mov
rol
dec
ret
test
mov
repnz
shr
and
pop
xor
lea
ja
jle
and
out
dec
test
sbb
es
std
loope
mov
inc
(bad)
mov
(bad)
fidiv
pushf
jmp
cmps
lods
mov
stos
outs
pop
pusha
loope
push
jno
or
repnz
scas
and
add
jl
scas
loop
lds
mov
cli
mov
cwde
push
mov
outs
fld
gs
test
retf
hlt
jb
pop
mov
jae
jmp
neg
js
inc
mov
cmp
outs
lea
push
push
push
loopne
push
mov
enter
or
dec
sbb
mov
loope
xlat
mov
(bad)
xor
pushf
mov
mov
mov
pop
shl
sbb
fwait
cmp
xchg
(bad)
push
push
mov
jbe
cmps
ret
dec
cmp
ss
sub
sub
lods
lods
aas
adc
jl
cmp
call
fimul
fadd
dec
push
ds
jp
call
stos
xchg
pop
inc
ins
mov
inc
pop
test
add
(bad)
xchg
jne
imul
outs
and
mov
mov
jmp
(bad)
mov
push
push
aad
repnz
cdq
push
dec
dec
lea
mov
aam
pop
lods
es
push
call
mov
cmp
xor
mov
loope
xchg
and
popf
push
or
jo
shl
fnsave
jb
imul
inc
adc
scas
sahf
stos
clc
or
in
adc
dec
inc
in
jae
aaa
sub
xor
add
cmp
cmp
in
xchg
scas
outs
jge
ins
inc
add
sbb
sbb
int
jo
rep
add
std
ins
pop
dec
mov
pop
loopne
sar
popf
adc
icebp
push
dec
dec
shr
ss
pop
inc
sbb
pop
int3
xor
in
in
add
ins
movs
xlat
call
push
mov
test
dec
dec
pushf
cmc
cld
sub
jmp
inc
lock
cmps
inc
pop
and
out
fistp
mov
leave
repnz
movs
(bad)
lods
nop
pusha
test
sbb
inc
scas
push
adc
(bad)
xor
pop
adc
add
cmps
int3
adc
sub
movs
loope
addr16
sbb
popa
stos
mov
inc
movs
int
scas
dec
xchg
mov
shl
or
mov
pop
pop
sub
ret
aad
mov
and
mov
mov
ds
mov
xor
jecxz
mov
jmp
xor
js
pop
in
repz
xchg
xor
adc
jno
pop
mov
xchg
cmp
arpl
mov
push
retf
xor
mov
mov
sbb
mov
stos
cmp
mov
mov
cmp
imul
mov
mov
inc
aaa
gs
sbb
push
push
aad
xor
pop
adc
push
jp
popf
lds
mov
lds
int3
mov
cld
(bad)
out
cmp
daa
jnp
neg
(bad)
outs
sbb
shl
sbb
out
push
cld
push
adc
int
or
xchg
pop
cli
or
rol
adc
stc
adc
pop
(bad)
adc
cli
adc
adc
pop
xor
or
mov
outs
cs
jecxz
mov
fiadd
aad
push
inc
fscale
iret
pop
inc
sbb
sbb
cdq
mov
sti
mov
inc
scas
arpl
and
dec
sub
xchg
cmp
sbb
jle
in
or
cmp
cmp
ins
cmps
or
xchg
jns
repz
test
inc
mov
test
ret
inc
clts
vmwrite
cli
and
cmc
out
loope
in
aad
js
test
sub
fist
je
sub
add
sbb
test
arpl
jle
ja
cmp
jle
jecxz
inc
jbe
enter
push
and
or
js
and
and
push
inc
data16
clc
imul
jae
push
mov
data16
sti
mov
push
je
pop
push
movs
mov
jle
jne
or
mov
stos
sub
mov
jnp
ret
scas
sahf
arpl
or
cmp
ss
xchg
pop
rcl
mov
repz
bound
pop
icebp
cs
(bad)
push
jp
and
retf
jge
movs
jbe
test
cmc
test
sahf
mov
inc
jnp
mov
in
sub
lock
pop
fidiv
push
jge
jg
movs
stos
std
cmps
fs
jb
or
repz
or
dec
cs
xchg
mov
pop
sti
fwait
pop
sbb
inc
mov
nop
mov
add
and
fsub
(bad)
daa
inc
arpl
mov
jnp
call
scas
lea
xchg
pop
adc
and
in
ret
dec
ret
and
scas
adc
xor
dec
push
aaa
push
jmp
data16
test
(bad)
xchg
dec
mov
and
xor
adc
nop
adc
aas
or
fucomip
sbb
cld
(bad)
jnp
jle
push
jb
sbb
fidivr
xchg
ffree
fwait
(bad)
aam
mul
dec
inc
sub
loopne
mov
jmp
dec
xchg
in
cld
push
cmps
call
xchg
xlat
scas
data16
xor
call
lock
arpl
lods
bswap
mov
sbb
data16
xchg
in
or
(bad)
xchg
fisttp
adc
xchg
inc
(bad)
outs
ret
sub
into
stc
lea
pushf
sub
mov
pop
div
dec
jmp
mov
iret
sub
sub
push
push
sbb
cmp
pushf
adc
xor
pop
lods
mov
cmp
inc
xchg
jb
pop
sub
or
retf
lds
cmp
(bad)
sti
push
in
inc
push
test
ins
jle
xor
movs
inc
xor
jmp
jns
fldl2t
aad
ss
(bad)
xchg
sbb
xor
and
pop
pop
ret
shr
sbb
mov
inc
ja
fpatan
jg
push
jo
iret
(bad)
test
push
jecxz
mov
mov
(bad)
mov
pop
inc
sub
pusha
ja
inc
or
sbb
out
les
dec
cmp
cmps
leave
and
jnp
in
popa
add
cmp
aam
sbb
popf
stos
scas
and
push
mov
fcmovu
ins
lods
popf
fwait
repz
ret
bound
aam
mov
addr16
imul
popf
inc
mov
dec
or
sub
cmps
dec
out
fucomip
cdq
retf
mov
pop
pop
into
les
xchg
sub
leave
mov
xchg
ror
dec
mov
cmp
ror
sub
adc
mov
sti
push
lea
mov
cmc
push
(bad)
mov
dec
jle
xchg
out
jmp
sahf
mov
scas
pop
and
sbb
lds
mov
xchg
dec
jns
mov
xchg
(bad)
or
mov
jp
aam
jg
sbb
mov
std
out
jb
shr
rcl
lods
rcl
push
fist
mov
cs
mov
adc
out
push
aad
in
popf
or
jg
cmp
cmp
or
sub
sub
pop
imul
push
ret
push
xchg
mov
mov
xor
arpl
mov
or
adc
push
jmp
cli
arpl
rcr
std
fs
idiv
push
pop
add
sbb
scas
fs
xor
not
daa
jl
xchg
fwait
adc
or
push
cdq
mov
adc
pop
and
shl
in
push
lods
push
push
sbb
mov
dec
sbb
dec
iret
ins
xchg
or
mov
mov
and
fdiv
mov
and
or
mov
imul
stos
in
cdq
xchg
or
xor
pop
lods
or
add
jno
mov
arpl
ja
xchg
and
clc
int
sahf
ret
icebp
adc
xchg
xrstors
push
imul
cwde
push
cmp
int
pop
loop
jp
sbb
ins
sbb
jae
ins
popf
sbb
dec
ins
lods
adc
int3
out
into
jmp
lea
out
inc
jb
xor
pop
mov
pop
js
mov
mov
sbb
mov
cmp
mov
aaa
ret
pop
fisttp
clc
mov
out
in
push
shl
std
int
push
and
pop
pop
pop
inc
sbb
pop
add
ja
xchg
adc
xchg
add
cmp
jnp
arpl
xchg
adc
sub
or
popf
jno
sar
sub
fadd
xchg
out
xchg
cmp
lock
scas
or
push
ins
and
test
xor
xor
mov
loope
adc
mov
mov
mov
retf
add
jge
mov
popa
push
mov
retf
imul
mov
fsub
xchg
mov
in
out
add
jns
pop
jp
cmp
movs
push
inc
retf
jle
jne
pop
xor
aam
aaa
enter
ret
cmp
std
xchg
cmc
out
ret
test
and
xor
(bad)
push
cwde
test
add
mov
xchg
sbb
(bad)
pop
iret
cmp
sahf
leave
cli
mov
sub
and
mov
xor
test
ins
mov
jnp
dec
xor
out
or
shr
sbb
or
mov
xchg
rol
mov
outs
icebp
adc
add
sbb
or
jg
jno
or
add
test
imul
lock
sub
mov
pushf
fwait
(bad)
not
adc
cmp
lods
mov
je
hlt
adc
sub
jecxz
or
cmps
jo
outs
jmp
loop
pop
inc
rol
scas
sbb
inc
jle
imul
mov
mov
add
sbb
push
arpl
sub
jp
leave
dec
xlat
fwait
divps
int
call
data16
jmp
sub
mov
test
dec
push
xchg
and
cmp
fmul
mov
and
jp
jno
or
je
xchg
cmps
xchg
outs
rcr
mov
mov
imul
leave
sub
mov
mov
fsubr
cmps
jg
cwde
pop
push
call
pop
mov
aad
pop
cmp
xchg
pop
loop
xchg
(bad)
jp
repz
fisubr
cmp
pop
sbb
je
inc
into
adc
ret
dec
dec
loop
repz
and
mov
jns
push
inc
mov
mov
outs
in
inc
ja
add
or
xlat
inc
jmp
gs
sbb
iret
push
adc
dec
retf
aad
sub
lods
stos
sbb
and
dec
lock
ss
cmp
pop
inc
push
pop
inc
sub
pop
sbb
jne
mov
out
pop
jno
imul
add
dec
les
dec
js
imul
dec
sbb
sub
mov
fsubr
sub
adc
push
mov
mov
pop
ins
push
add
mov
pop
pop
pop
and
xor
mov
test
stc
inc
mov
rcr
mov
fucomip
or
sub
leave
push
xlat
loopne
xchg
cmp
ds
gs
cmp
jo
or
dec
xchg
add
add
push
es
daa
movs
lds
lods
inc
cs
aam
rcl
adc
je
cmps
jbe
mov
push
cmps
jb
scas
dec
cmp
fsubr
shr
int3
push
jo
retf
pop
gs
repnz
jp
pop
ficomp
je
lahf
mov
(bad)
in
bound
sahf
aaa
lea
jle
fmul
neg
pop
or
(bad)
test
push
fidiv
stos
cmp
xor
dec
nop
scas
retf
jne
cmps
push
cmp
es
xor
aas
or
inc
push
mov
test
mov
sub
cmps
enter
jl
loopne
mov
pop
lods
clc
das
jnp
inc
xchg
mov
mov
mov
inc
or
adc
clc
repz
pop
lods
xor
inc
int
cmp
int
fst
and
scas
test
into
and
xchg
inc
or
inc
nop
shl
lock
adc
(bad)
lea
mov
data16
jo
or
sbb
sbb
leave
sub
imul
inc
fisttp
(bad)
mov
cmp
cmp
pushf
cmp
and
push
mov
adc
imul
arpl
push
or
dec
sub
jb
pop
div
mov
mov
cmp
xor
fmul
push
pop
mov
push
lds
jp
cmp
data16
or
sub
and
adc
jmp
xchg
inc
sub
push
cmp
dec
nop
ror
xor
xchg
data16
(bad)
es
push
lods
fisubr
cmp
jle
lea
sub
xlat
sets
pop
xchg
clc
out
inc
popa
sbb
sub
push
retf
out
outs
or
xor
sti
xchg
les
in
(bad)
xchg
enter
icebp
cmp
dec
jae
and
jae
adc
adc
fs
retf
cwde
call
xor
(bad)
hlt
mov
in
enter
adc
iret
bound
and
dec
repz
cdq
sbb
pop
cmp
pop
lock
cmp
jl
mov
ss
push
jns
pusha
mov
push
cmp
stos
xchg
ficomp
push
mov
fsub
shl
rol
repnz
mov
sahf
in
inc
cmps
jmp
xor
add
sbb
call
cdq
sub
jl
aaa
mov
lds
cmps
jae
out
into
pushf
xor
adc
and
inc
push
fadd
sub
int3
push
cld
push
call
dec
pop
cmp
and
cmps
sbb
imul
jmp
adc
inc
pop
mov
cld
inc
fstp
pop
(bad)
jb
add
jb
xchg
and
sbb
or
or
les
bound
shl
scas
adc
daa
xchg
ds
sub
jmp
dec
ja
arpl
ror
out
jb
push
dec
imul
cmp
call
shl
sbb
outs
jle
sbb
stos
inc
bound
movs
inc
sbb
jp
ss
adc
mov
sub
sahf
dec
arpl
and
stos
popf
inc
pop
push
or
cmp
pop
sbb
arpl
xchg
add
dec
inc
cs
movs
stos
(bad)
pusha
push
push
xor
mov
rol
lahf
xchg
pop
(bad)
jbe
enter
push
jmp
or
mov
sub
mov
mov
data16
xchg
int3
hlt
in
in
out
add
dec
enter
cmp
test
clc
mov
aad
add
and
adc
mov
mov
jl
pushf
sbb
(bad)
out
std
xor
outs
mov
jp
cdq
jg
out
pop
dec
sub
xchg
and
and
popf
jae
inc
mov
fs
aad
retf
cld
cmp
(bad)
and
cmp
add
sahf
iret
push
jmp
inc
xchg
pop
jae
sub
jno
repnz
ret
adc
jmp
ds
cmp
push
hlt
movs
out
jb
sub
clc
gs
jmp
push
(bad)
push
stc
repz
aam
faddp
and
sbb
add
sub
test
jno
jle
shl
mov
fistp
sar
fidivr
mov
retf
mov
cmps
or
xchg
or
xchg
ja
mov
sbb
push
push
loop
xchg
jns
imul
xchg
sti
dec
aaa
or
dec
jns
ins
sbb
mov
retf
fldenv
xchg
ja
scas
dec
test
out
lea
mov
mov
add
push
xchg
push
and
add
pop
xor
xchg
jecxz
data16
fsubr
scas
pop
pop
push
dec
sub
sub
mov
xor
(bad)
mul
cdq
lahf
jp
xor
mov
idiv
push
mov
cwde
inc
and
mov
loope
push
push
loop
mov
xor
mov
movntps
js
in
out
scas
jge
xchg
mov
in
inc
enter
inc
adc
not
je
jo
sbb
or
push
cmps
ins
cld
and
fistp
xchg
in
cmp
loop
or
sahf
repnz
jmp
pushf
pop
outs
xor
mov
xchg
adc
and
test
cmp
shl
mov
ret
jle
pop
pop
mov
xchg
or
hlt
adc
jge
and
dec
jl
cmp
sub
inc
or
ins
and
data16
and
pop
nop
adc
cld
and
xlat
add
dec
mov
repnz
sub
pop
push
jmp
or
add
pop
pop
cmp
inc
cmovne
(bad)
(bad)
mov
dec
ja
push
call
mov
xchg
idiv
lods
(bad)
cmps
xor
das
cmc
repz
ficomp
inc
pop
mov
aaa
aad
or
dec
aad
mov
push
push
pop
fnsave
retf
ror
fs
sbb
es
out
loope
arpl
loope
shl
mov
pop
mov
sub
inc
leave
push
fs
test
or
(bad)
ins
dec
or
jb
sbb
add
jns
mov
push
and
push
sub
adc
mov
lds
mov
rcl
sub
addr16
(bad)
retf
jnp
lods
in
je
sbb
outs
mul
es
lock
dec
ins
movs
fadd
inc
mov
push
push
cmp
add
sub
inc
in
(bad)
jnp
push
(bad)
fst
in
inc
imul
mov
pop
adc
jo
ins
cmp
imul
or
arpl
add
and
(bad)
clc
call
ror
inc
and
ret
dec
jns
mov
sbb
xchg
jb
js
and
(bad)
push
add
fs
pushf
movs
pop
jno
(bad)
cmp
dec
xchg
imul
neg
cmp
inc
xchg
sbb
lahf
cmp
popa
mov
(bad)
iret
loop
xchg
xchg
xor
test
js
add
mov
rol
sbb
nop
pushfw
jle
imul
imul
pop
aam
jmp
or
fidivr
jo
add
mov
and
and
dec
push
adc
jo
test
leave
call
jecxz
mov
and
inc
stos
cmp
scas
xor
test
or
lock
retf
retf
(bad)
mov
push
sti
fisttp
jbe
aaa
pop
gs
jb
jmp
pop
mov
push
sbb
pop
push
outs
mov
out
mov
cmp
ret
rcr
shl
ficomp
adc
jmp
(bad)
test
scas
inc
jnp
ret
ficom
mov
xchg
pop
adc
jecxz
mov
aad
pop
sub
pop
es
jecxz
js
rol
mov
nop
push
stos
jns
adc
mov
sti
xchg
inc
inc
mov
cli
aas
dec
mov
stc
cwde
lea
ret
test
inc
pop
dec
or
lea
dec
or
test
sub
lock
cs
out
fdivr
and
popa
inc
pop
and
data16
fsub
fimul
add
sbb
daa
push
add
cdq
dec
mov
test
sub
test
mov
out
jb
scas
dec
add
cld
jp
(bad)
xlat
push
adc
int
add
add
(bad)
jmp
mov
test
ror
and
inc
(bad)
(bad)
sbb
pushf
fld
prefetchwt1
or
rcr
dec
and
test
xor
mov
pop
xor
(bad)
push
cmp
in
aad
mov
outs
jo
inc
or
imul
ins
sti
cwde
add
es
dec
sbb
iret
mul
xor
(bad)
xchg
mov
aaa
test
repz
xchg
cdq
outs
mov
and
push
in
stos
jb
add
xchg
pusha
sbb
lock
imul
mov
push
pop
aaa
pop
xchg
inc
loop
inc
cmps
fld
sub
cmps
xchg
retf
mov
pop
je
push
mov
sub
or
push
loope
add
jns
pop
mov
inc
mov
pop
cmp
xchg
mov
cli
mov
jnp
sub
std
add
test
push
leave
dec
pop
int
dec
ss
cmp
mov
push
cwde
push
stos
jmp
dec
rcl
xchg
mov
push
ss
dec
imul
test
retf
jb
dec
pop
mov
jge
jge
jns
cmps
jbe
mov
inc
and
cmp
inc
adc
dec
xchg
test
or
popa
inc
and
jmp
icebp
ss
in
pop
lds
push
or
push
(bad)
(bad)
scas
fcom
call
sub
add
fiadd
test
out
jne
ret
jb
mov
out
sub
shl
jecxz
xor
shl
lods
cmps
jp
xchg
lea
dec
retf
pushf
retf
mov
inc
cdq
adc
in
adc
retf
xor
cld
movs
jle
mov
and
fs
mov
(bad)
in
jns
pusha
pop
stos
xchg
stc
int
fsubr
out
sti
arpl
mov
aam
mov
rcl
and
mov
mov
xchg
jmp
cmp
mov
fwait
or
cmp
sub
ror
stos
(bad)
rcl
jle
push
cmp
lahf
sbb
push
adc
xchg
xchg
xor
loop
adc
ret
inc
mov
pop
popa
mov
aas
out
jle
sbb
sub
or
adc
dec
not
nop
pop
retf
js
mul
and
cmp
sub
shl
data16
pop
aas
ret
pop
mul
sub
jo
jns
jmp
sbb
sub
sar
ret
cwde
sbb
cmp
sub
imul
inc
stos
adc
pop
in
lds
sbb
imul
cmc
ins
or
mov
shl
sbb
dec
mov
hlt
ret
dec
mov
test
jns
in
push
xor
push
sub
loopne
cmp
test
sar
(bad)
fwait
add
xor
and
dec
xchg
push
dec
rcl
add
jne
jle
and
mov
sbb
mov
in
cmps
mov
adc
mov
jp
xor
psrld
cmp
dec
scas
scas
cmp
cli
add
adc
add
add
scas
faddp
add
or
ja
mov
inc
pop
icebp
xchg
xchg
or
les
dec
cdq
call
or
imul
cmp
mov
mov
xor
mov
dec
cmp
mov
cmps
adc
rcl
adc
pop
inc
jecxz
or
pop
movs
push
xchg
pop
xchg
push
jecxz
xchg
or
mul
vpackssdw
xchg
stos
(bad)
int3
add
pusha
sti
(bad)
(bad)
jl
pop
int3
pusha
and
jl
mov
jbe
clc
pop
pop
adc
xor
cli
out
fldcw
out
test
arpl
div
sub
lods
pop
sahf
or
and
xor
jnp
stos
ret
add
popa
pop
test
fistp
dec
add
push
add
fiadd
adc
ja
sbb
and
retf
sbb
(bad)
or
popa
sbb
loop
or
xor
pusha
push
pop
repz
dec
jmp
xchg
inc
fwait
in
and
lahf
stos
sub
sub
dec
aam
je
and
mov
sbb
and
dec
repnz
jl
jnp
mov
pop
push
add
outs
push
inc
lea
jb
rcr
mov
addr16
inc
xor
movs
test
shr
jb
enter
sub
dec
sbb
jge
and
fcmovbe
(bad)
jae
xchg
pop
or
aad
lods
jb
mov
das
or
mov
les
sub
dec
or
adc
data16
ror
push
cmp
lea
pushf
sub
pop
aaa
pop
fcomp
xor
xchg
mov
fsubr
aam
fistp
mov
push
fistp
(bad)
scas
or
les
and
mov
mov
dec
inc
arpl
popf
push
scas
imul
ins
in
mov
xor
fnstenv
rol
sbb
push
jns
adc
enter
mov
mov
ret
jbe
jo
pop
ja
or
adc
jg
jle
adc
test
js
inc
mov
rcl
gs
and
clc
into
sbb
rol
in
and
jb
and
cmp
pop
cmp
mov
cs
push
push
imul
out
inc
aas
cdq
out
dec
add
cmp
rol
(bad)
not
fbld
or
cmp
pop
mov
icebp
(bad)
jnp
les
mov
push
pop
add
das
test
pop
ficomp
fst
lods
jae
or
cmp
out
push
sbb
mov
sub
(bad)
mov
push
xchg
vxorps
mov
xchg
sahf
push
add
pusha
movs
scas
in
xor
add
xor
dec
inc
and
imul
repz
sub
jmp
push
gs
mov
mov
clc
in
test
imul
mov
hlt
push
mov
mov
retf
lods
sbb
mov
cli
add
out
sti
mov
cmp
push
mov
cmp
xchg
nop
shr
out
xchg
frstor
xchg
stos
jl
jl
lahf
cdq
ds
mov
lds
jmp
jb
fwait
add
ret
push
sti
imul
repz
in
adc
rcl
test
sub
(bad)
clc
sti
pop
aaa
div
movs
jmp
in
sub
aad
sbb
addr16
into
jnp
fisttp
and
mov
mov
cmp
jp
lea
adc
nop
mov
or
dec
call
sub
push
push
mov
ret
push
pop
mov
add
lods
sti
pop
cmp
fild
mov
ins
dec
pop
inc
(bad)
icebp
in
idiv
inc
cmp
cmp
lods
jmp
ins
pusha
and
lock
into
(bad)
adc
mov
test
add
pop
dec
pushf
dec
and
scas
shl
sub
push
fcom
pop
dec
adc
mov
pop
jnp
sti
inc
out
loop
stos
or
in
add
mov
add
mov
mov
cs
(bad)
int
pop
sbb
xor
daa
in
pop
clc
arpl
add
call
sub
ret
ins
cmp
icebp
add
(bad)
test
xchg
ins
imul
(bad)
dec
les
or
jge
push
sbb
fisttp
inc
sahf
out
stos
in
mov
stos
mov
xchg
(bad)
sub
dec
(bad)
jnp
(bad)
ror
push
lahf
mov
fwait
js
nop
cmp
xchg
push
scas
fmulp
lods
fld
sub
imul
cmovs
div
shr
adc
test
mov
mov
cmp
push
cmp
ror
pmullw
mov
(bad)
shl
cmp
mov
sub
ins
and
ins
mov
dec
sahf
shl
sbb
sbb
and
imul
sbb
sbb
repz
pop
cmp
inc
stc
or
enter
pop
into
push
jo
clc
(bad)
mov
mov
je
sbb
sbb
and
out
repz
rcr
adc
dec
ds
fs
or
inc
sbb
pop
sub
adc
jne
ja
pop
inc
cmp
fnstenv
cs
adc
(bad)
cmp
mov
sbb
xchg
dec
dec
pop
ins
or
inc
adc
sti
push
dec
and
iret
add
movs
and
xor
xor
jmp
xor
lahf
outs
jne
sbb
out
cmc
jbe
int3
dec
fstp
pop
fistp
gs
mov
and
and
scas
mov
ret
adc
ret
xchg
cli
add
dec
dec
sbb
shr
sbb
mov
loop
fild
mov
fnstsw
hlt
cmp
test
mov
pop
cmp
jb
fisttp
pop
out
gs
in
das
cmp
fdiv
add
addr16
and
(bad)
adc
sbb
dec
int3
ins
ret
jecxz
and
nop
xlat
enter
push
bsr
aam
lahf
addr16
cmp
pop
pop
or
out
jmp
sub
popf
sar
movs
and
xchg
fwait
xor
in
push
inc
push
call
test
mov
rcl
push
loopne
push
rol
mov
out
inc
aaa
mov
daa
in
(bad)
mov
fld
ret
sub
adc
xor
xor
loop
adc
pusha
jo
mov
and
test
or
dec
sbb
(bad)
lods
jl
sar
es
inc
mov
inc
aas
adc
adc
inc
aad
out
mov
test
adc
inc
and
dec
in
jnp
jnp
mov
xor
mov
out
stos
in
push
sbb
mov
cli
jb
xchg
(bad)
repz
push
mov
(bad)
inc
scas
dec
cwde
aaa
imul
div
jmp
lds
fs
in
push
(bad)
and
add
add
mov
mov
mov
mov
rol
sbb
ret
cs
not
xor
add
cmp
or
jl
mov
push
mov
es
xor
xchg
bound
mov
adc
dec
scas
push
cmps
sub
jg
jae
popa
imul
or
mov
mov
cmp
cld
add
xor
(bad)
mov
sbb
jnp
mov
xlat
out
mov
int3
dec
push
push
push
push
push
or
sti
aas
lds
in
std
loope
loopne
mov
aaa
mov
lock
popa
dec
inc
cdq
jge
add
pop
add
mov
cmp
js
pusha
xchg
enter
std
shl
ins
aas
xchg
add
lods
mov
movs
sub
(bad)
sub
in
das
mov
add
ret
pop
(bad)
jge
dec
ins
xchg
shr
outs
sub
xchg
mov
push
push
mov
les
(bad)
mov
ror
enter
and
jmp
xchg
jbe
push
les
sub
(bad)
scas
stc
ss
dec
stc
sbb
adc
lds
jb
and
and
movs
fidiv
sbb
add
ins
loope
sbb
dec
iret
sbb
pop
ins
std
mov
inc
out
sti
rol
cli
inc
jcxz
jns
inc
jmp
or
or
pusha
mov
jmp
out
pop
xchg
out
adc
jge
in
outs
test
mov
inc
jl
dec
push
and
out
fwait
sbb
cmp
jbe
push
jb
sub
ins
dec
(bad)
jmp
movs
out
and
fs
sub
or
push
jg
gs
test
mov
(bad)
les
mov
pop
cmp
push
fcom
cmp
jmp
imul
mov
test
add
fbstp
jmp
ror
xchg
test
mov
or
aas
mov
mov
sbb
mov
push
jle
sub
pusha
(bad)
jmp
dec
and
aaa
call
pcmpeqw
stos
and
sbb
ja
push
fsub
inc
sbb
loop
cli
movs
ins
loopne
inc
test
or
and
and
mov
push
mov
rol
leave
ds
(bad)
mov
adc
adc
(bad)
rol
in
test
dec
call
pop
jmp
stc
ror
or
sbb
mov
adc
test
into
pop
outs
icebp
shl
cmp
mov
mov
push
je
dec
adc
outs
push
ret
js
hlt
sub
adc
ja
int
ret
sbb
cmp
test
imul
repz
cmp
push
push
fmul
xor
pop
inc
fs
push
push
int
mov
cs
jmp
call
mov
loopne
cld
call
fwait
bound
jmp
jl
arpl
aad
push
xchg
cs
inc
lds
xor
sbb
push
aas
adc
mov
push
sbb
push
out
(bad)
sar
test
dec
loope
dec
lods
cmp
shl
mov
ins
pop
add
daa
or
mov
scas
dec
movs
icebp
fsubr
loope
cdq
scas
mov
push
xchg
push
push
hlt
mov
out
nop
mov
jge
mov
sbb
(bad)
jle
fild
movs
out
out
call
std
out
pop
call
daa
(bad)
jl
and
in
jbe
inc
adc
sti
dec
mov
scas
mov
jl
dec
xchg
mov
cdq
or
test
fwait
(bad)
jmp
iret
mov
xchg
xchg
mov
mov
mov
imul
int
test
add
cs
push
or
pop
out
inc
and
push
lea
or
mov
mov
xchg
and
or
or
and
add
xchg
dec
mov
shl
jg
(bad)
repz
sahf
sbb
ror
ja
in
cmp
test
mov
stc
into
sar
popa
jbe
adc
push
xchg
nop
xor
push
push
xchg
arpl
and
jns
stos
xchg
stos
outs
ror
outs
call
ficomp
xchg
dec
push
jb
xchg
xchg
pop
cld
or
into
or
dec
jp
inc
adc
xchg
push
xchg
ja
lods
ds
aam
pusha
xchg
or
xor
lahf
or
outs
loopne
add
inc
add
sbb
xlat
push
mov
mov
sbb
into
pop
int
pusha
jmp
cmp
cmp
cmp
cmps
push
and
push
sub
aas
ins
sbb
cld
jge
hlt
adc
add
xchg
sbb
pop
jl
lods
in
icebp
or
enter
bnd
jmp
sub
hlt
or
jmp
scas
sahf
xchg
ins
mov
mov
push
loop
pop
sub
inc
pop
bound
int3
xlat
lods
inc
and
pop
push
ja
sub
xchg
ins
je
(bad)
js
outs
cs
xlat
shr
and
or
xchg
mov
xor
lea
icebp
(bad)
pop
xchg
shr
dec
inc
mov
adc
paddw
aad
js
movs
dec
dec
repz
repz
and
frstor
mov
sbb
mov
jle
sbb
cmps
shr
and
xor
sbb
pop
cmp
adc
add
or
cmp
sbb
adc
and
mov
mov
xchg
jle
std
push
in
imul
fst
jp
push
aad
dec
push
push
pushf
sub
adc
cs
or
add
iret
xchg
fstp
pop
xlat
sahf
mov
jmp
mov
aas
arpl
aaa
out
imul
pop
mov
xor
fistp
in
sbb
stc
push
les
retf
push
fidiv
das
mov
xor
mov
push
jb
cmps
fcomp
imul
scas
in
mov
mov
hlt
fidivr
push
das
cmp
pop
sbb
add
popf
stos
retf
ficom
or
div
inc
add
jns
cdq
fdiv
in
stos
inc
(bad)
or
mov
mov
dec
arpl
mov
xchg
or
fstp
inc
in
outs
or
dec
rol
jmp
dec
leave
xchg
mov
cmp
fimul
loop
xchg
stc
mov
sbb
pop
stos
mov
mov
popa
repz
jmp
push
pushf
and
mov
dec
pop
movs
dec
icebp
loop
in
add
xor
add
mov
sub
xor
pop
test
fwait
adc
sbb
pusha
adc
inc
ret
movs
popf
stos
repz
cmp
int3
(bad)
into
xor
fild
ret
in
push
(bad)
mov
repnz
mov
or
jns
mov
or
ins
sub
dec
cdq
aaa
in
inc
inc
sbb
test
mov
ret
mov
pop
ret
mov
push
loop
xor
mov
(bad)
into
push
xchg
sbb
dec
mov
add
sbb
push
mov
das
in
dec
(bad)
cmp
mov
in
sbb
or
stc
mov
inc
add
dec
stos
gs
in
pop
mov
ret
or
sar
add
scas
or
fcom
or
into
jns
mov
rcl
mov
test
pop
and
xchg
ins
cmp
jne
jo
outs
dec
stos
outs
push
imul
mov
push
xlat
cmp
pop
jns
mov
mov
sub
push
mov
nop
ja
xchg
xor
push
jmp
dec
xchg
cmp
jae
test
inc
sub
jbe
mov
movs
pop
xlat
pop
jmp
lds
outs
sbb
inc
out
(bad)
fbstp
pop
cmp
aas
sub
pop
icebp
repz
inc
fldenv
mov
adc
cmp
sbb
mov
(bad)
and
jne
mov
dec
inc
xchg
rcl
iret
lods
nop
adc
out
sahf
in
mov
xchg
and
ins
clc
xchg
push
add
loopne
mov
cmp
push
jmp
sub
jne
add
push
(bad)
in
loop
icebp
or
ret
mov
jg
ret
loopne
adc
sti
call
dec
mov
pop
stos
leave
inc
mov
xchg
sub
sbb
cmc
aam
mov
sub
div
cmp
inc
xor
or
jo
mov
push
jl
cmp
dec
xchg
push
jbe
or
movs
push
sub
add
push
pop
xor
dec
jo
jmp
mov
mov
cmp
scas
popa
stos
stos
mov
dec
and
lea
and
(bad)
imul
sbb
mov
popf
jbe
es
adc
xchg
in
pop
xchg
mov
push
int
and
call
ret
mov
outs
push
fcom
push
mov
jb
cs
daa
loope
add
int3
fld
ins
inc
fs
sar
arpl
loopne
add
sub
dec
xchg
lock
push
pop
cmp
mov
(bad)
rcl
xor
jne
hlt
or
ins
push
inc
lahf
sbb
cdq
nop
push
mov
dec
ret
test
pop
out
(bad)
pop
mov
jb
and
adc
shl
int3
push
xor
test
arpl
add
mov
add
popa
in
push
mov
gs
shl
inc
les
out
sub
and
jb
scas
ss
rcl
out
push
rol
adc
fcom
push
ins
movd
out
xor
adc
(bad)
shl
fldpi
mov
cld
dec
or
mov
out
movs
mov
sbb
xchg
or
jnp
mov
fcomp
stc
test
cmp
jo
inc
rcr
jae
(bad)
lea
data16
jne
cmp
lock
cmc
ins
mov
or
movs
sbb
adc
jle
jmp
retf
dec
ret
(bad)
xor
std
jne
or
xchg
pop
scas
imul
mov
adc
add
inc
mov
popa
xchg
jb
fdivr
fxam
retf
nop
pop
xchg
sub
dec
push
inc
out
pop
pushf
js
inc
les
shr
jg
sbb
xchg
sub
inc
loope
mov
loopne
mov
mov
sub
mov
dec
xor
xor
fsub
ins
jne
inc
out
sahf
mov
add
sbb
jge
cmp
adc
sbb
cmp
sub
jae
jge
lahf
mov
dec
jno
mov
out
mov
jl
xchg
jge
aaa
int3
add
cmp
lock
ficom
mov
out
leave
cmps
aas
and
xchg
ror
inc
mov
jno
cmp
sub
out
mov
repz
inc
xchg
arpl
mov
xchg
mov
pop
or
jmp
fbld
cmps
inc
cdq
sbb
movs
cdq
and
mov
xor
sbb
push
in
(bad)
out
mov
retf
lea
sahf
cmc
pusha
dec
pop
mov
lods
mov
xchg
and
xchg
das
dec
fistp
mov
ins
leave
dec
jae
or
retf
mov
and
cs
cdq
mov
jo
int
lods
jae
popa
rcl
imul
jbe
lds
and
pop
es
mov
or
(bad)
mov
pop
and
fdivr
cli
dec
jg
mov
sahf
sbb
arpl
jmp
out
rcl
fs
jmp
dec
push
es
jae
inc
aam
pop
and
and
cmp
sahf
out
adc
sub
adc
stos
stc
out
test
xchg
or
out
arpl
jl
pop
fdivr
jp
add
jge
push
bnd
dec
mov
(bad)
mov
data16
in
movs
xchg
sahf
dec
shl
cmps
adc
pop
xor
and
hlt
push
pop
call
push
mov
test
mov
out
xor
loop
pop
dec
mov
icebp
mov
in
test
xchg
mov
adc
pushf
cmp
pop
pop
mov
xchg
or
pop
push
(bad)
mov
xchg
pop
mov
sub
(bad)
cmp
xchg
xchg
pop
sbb
inc
mov
xor
pop
pop
dec
mov
fdivr
jge
shl
dec
retf
pop
push
xchg
or
xchg
mov
shl
mov
std
sbb
adc
in
pand
dec
xchg
in
sar
mov
sbb
in
pushf
icebp
push
lods
sub
seta
rcr
mov
nop
push
jp
je
adc
push
inc
jne
xlat
inc
jo
mov
jae
and
add
adc
add
popf
sbb
scas
pop
idiv
push
and
sub
dec
mov
pop
dec
dec
(bad)
jmp
pop
enter
xlat
ds
adc
dec
fnstsw
and
mov
test
push
dec
std
cmp
pop
dec
dec
jo
jg
pushf
sub
push
jge
sbb
stos
call
jp
(bad)
mov
push
(bad)
fisttp
fidivr
cmps
cmp
das
inc
cmps
rcl
in
cwde
add
dec
dec
js
les
mov
inc
daa
dec
popf
movs
push
iret
ja
test
stc
(bad)
(bad)
adc
aad
std
scas
test
or
stc
add
lods
mov
jbe
fisttp
iret
pop
enter
mov
xor
mov
pop
sub
in
sbb
mov
xlat
jns
js
cmc
inc
or
std
(bad)
ds
ret
enter
pusha
add
iret
fmul
pusha
(bad)
mov
aam
add
ror
stos
lea
lds
(bad)
push
xchg
adc
js
mov
sub
call
ins
scas
mul
xlat
retf
(bad)
ins
loope
lahf
mov
jns
sar
sub
push
imul
jb
int3
mov
fst
cld
mov
adc
out
push
adc
and
repz
cs
push
mov
sbb
jmp
sbb
push
and
js
jno
dec
cmp
movs
test
add
out
pop
push
out
pop
std
sbb
pop
popa
enter
xchg
pop
add
and
add
retf
int3
lock
mov
cmps
rol
rol
getsec
loopne
test
rcr
mov
push
inc
sbb
dec
xchg
adc
ds
addr16
mov
pusha
aas
cmps
inc
inc
xor
fwait
rcl
ss
push
xor
cmp
in
jbe
jnp
ss
xor
jg
cld
lods
mov
inc
fsub
sti
mov
push
inc
pop
push
in
jmp
pop
je
jo
sbb
repz
or
push
ins
cs
leave
pop
fist
test
leave
movs
fisttp
popa
mov
test
and
cli
retf
repnz
(bad)
sub
cmc
add
test
repz
dec
ins
or
movs
ds
sbb
mov
out
mov
mov
lds
xchg
xchg
inc
out
or
(bad)
bound
jmp
fucomi
xor
jge
cmp
cmp
jecxz
xor
sub
imul
les
test
or
les
push
mov
iret
test
cli
xor
in
push
repz
jle
xchg
push
dec
retf
and
mov
mov
or
add
mov
cmp
push
or
jmp
loopne
mov
cmc
push
sbb
loope
int
pop
dec
jae
push
(bad)
loope
aad
inc
ret
xchg
inc
mov
sahf
sub
mov
push
sub
add
sub
sub
inc
pop
add
(bad)
push
mov
(bad)
in
mov
ds
inc
pop
ret
or
mov
fadd
xchg
fisub
jg
pop
pop
xor
sbb
sbb
aaa
pop
jg
push
sahf
dec
sbb
ins
ss
and
xchg
imul
rcl
dec
not
iret
push
pop
push
jmp
daa
pusha
std
jns
shl
aaa
inc
xchg
test
in
(bad)
and
repz
xor
sbb
mov
ins
fsub
imul
scas
adc
mov
outs
adc
xchg
les
and
in
mov
fs
aad
ret
mov
cmp
ins
xchg
outs
aad
cmc
adc
xor
ss
mov
outs
xchg
dec
repz
test
sbb
jp
cmp
or
adc
add
cs
sub
scas
shl
out
xchg
and
push
daa
jno
sbb
sub
xor
jmp
mov
pop
mov
pop
(bad)
cmp
mov
mov
pop
jno
add
dec
xchg
cmp
stos
inc
ja
lock
(bad)
ja
mov
sub
sbb
(bad)
test
imul
jb
dec
fstp
fisubr
inc
add
cmp
xchg
push
sbb
clc
pop
dec
push
sti
push
push
adc
lock
add
shr
inc
xchg
mov
xchg
imul
arpl
fisub
cld
shl
mov
scas
fnstsw
fdiv
adc
cmps
add
pop
mov
sti
imul
mov
jmp
mov
jb
dec
test
out
inc
loopne
sbb
lds
(bad)
sahf
cmp
loopne
hlt
or
sub
popf
pusha
push
xchg
adc
xchg
adc
iret
je
retf
fisub
sbb
es
fsubr
in
leave
dec
test
cs
aam
retf
sub
cmps
aas
mov
js
mov
pushaw
es
dec
push
clc
in
cmp
(bad)
jae
pushf
push
push
shl
call
idiv
imul
aad
fistp
mov
scas
pop
pop
xlat
je
adc
out
add
jmp
jnp
mov
jb
xchg
sbb
adc
xchg
cmps
ja
and
clc
aad
pop
cld
sub
mov
movs
and
out
push
sbb
inc
mov
push
pusha
cmp
mov
xor
add
ss
adc
bound
jmp
add
xlat
add
(bad)
js
and
mov
push
loopne
push
adc
mov
push
(bad)
xchg
in
and
(bad)
fidiv
outs
and
xchg
pop
aam
inc
iret
mov
push
movs
cld
lds
nop
push
jne
dec
cmc
pop
sbb
stc
inc
aad
int3
jmp
sbb
stos
jnp
cmp
stc
xor
cmp
movs
xchg
mov
mov
(bad)
jl
in
fsub
popa
lea
(bad)
pop
dec
ja
pop
pop
pop
scas
sahf
icebp
dec
ror
mov
daa
mov
jge
out
call
daa
mov
pushf
loope
pop
mov
sbb
adc
scas
mov
jecxz
push
mov
iret
call
jge
push
cdq
sar
dec
or
int3
fist
add
jge
fcompp
or
outs
cli
inc
mov
das
cmps
aam
pop
out
jl
in
mov
ins
xor
mov
and
(bad)
mov
add
xor
imul
xchg
xchg
or
dec
mov
xor
je
ja
in
cdq
mov
push
or
fisttp
or
xor
sti
cmps
mov
sub
jne
sti
pop
(bad)
and
bnd
xchg
pop
pop
stos
fnstsw
fisttp
xor
rcr
fs
mov
adc
dec
pop
pop
jne
aam
repz
fwait
leave
lods
sbb
shl
pop
jno
or
push
ret
jmp
adc
mov
xor
inc
sub
arpl
or
mov
add
test
pop
inc
inc
mov
clc
pop
out
mov
jbe
cmp
pop
arpl
sbb
out
movs
xor
mov
fadd
xchg
mov
aas
addr16
mov
and
fsub
adc
or
inc
scas
ins
pop
push
ins
lahf
enter
jbe
mov
add
adc
imul
daa
lods
test
ret
pop
(bad)
xor
leave
pop
xor
xchg
jo
xchg
imul
pop
cmp
jmp
jns
mul
jp
jbe
mov
sahf
cmp
cs
clc
jo
and
loope
popa
(bad)
dec
test
mov
dec
dec
std
adc
test
retf
mov
sbb
sti
and
xchg
xchg
inc
mov
sidtd
mov
add
jns
xchg
(bad)
aam
xor
mov
stos
retf
in
loop
add
dec
sub
add
ins
pop
dec
iret
(bad)
imul
in
and
das
scas
adc
shr
mov
retf
xchg
mov
mov
jb
jmp
ja
jns
pop
jne
mov
es
cmp
and
mov
sbb
push
inc
out
cli
fcom
shl
cmps
sti
pusha
cmp
ss
jg
add
and
pop
inc
loop
call
idiv
iret
sti
rcl
aad
fisubr
je
inc
popa
xor
inc
jbe
jne
enter
or
cwde
lds
push
push
pop
jge
xchg
push
aam
xchg
mov
std
xchg
movs
ins
or
call
pop
lods
sub
iret
jmp
and
lods
adc
std
mov
sub
cmc
les
scas
add
mov
pop
cmp
in
and
xchg
dec
sbb
jecxz
jo
add
in
push
pop
cmc
sub
sub
hlt
inc
or
pushf
mov
inc
inc
in
pop
shl
repz
mov
sbb
dec
iret
push
or
mov
mov
movs
xchg
dec
or
push
repz
push
retf
jge
dec
mov
jae
add
pop
cmp
or
push
pusha
imul
in
mov
push
out
xchg
sar
outs
dec
ret
sub
xchg
movs
mov
daa
clc
jns
mov
sbb
xor
adc
pushf
push
cmp
mov
push
mov
movs
pop
xor
scas
inc
or
cli
pushf
mov
push
int
adc
sub
inc
adc
cmp
out
cmp
sar
or
add
and
test
cmp
mov
pop
and
jl
mov
jbe
dec
(bad)
stos
aad
inc
mov
stos
add
test
lahf
test
mov
push
out
mov
pop
ins
sbb
and
imul
lods
dec
fs
fiadd
push
loope
xchg
cwde
adc
js
push
jl
adc
mov
pusha
or
mov
cmp
dec
or
(bad)
xlat
xor
jb
add
andnps
daa
out
clc
cld
fmul
add
cmovnp
enter
jecxz
mov
jg
(bad)
fimul
hlt
sar
push
sbb
gs
add
mov
sub
jmp
neg
imul
inc
push
hlt
or
test
mov
imul
jge
rcl
xor
sbb
fisub
lea
inc
shl
xchg
outs
xor
push
sbb
ja
jmp
adc
call
pushf
test
mov
test
(bad)
mov
scas
cld
or
jle
push
mov
xchg
cmps
add
mov
add
jmp
test
in
std
or
push
fist
pop
xchg
or
outs
loop
jno
outs
pop
out
jae
and
pop
fild
repz
pop
or
xor
rol
mov
stc
mov
je
retf
test
repnz
mov
jecxz
leave
jo
mov
pushf
hlt
dec
mov
(bad)
cld
outs
push
sbb
adc
push
in
test
fwait
stos
cmp
stos
mov
push
bound
sbb
dec
out
sti
push
or
into
lahf
push
popa
jle
pop
call
pop
frstor
inc
ins
push
dec
outs
push
(bad)
sub
ret
add
movs
push
cmp
outs
dec
jmp
xchg
mov
pop
push
call
stos
sub
and
pop
mov
inc
outs
add
cdq
mov
dec
leave
jno
jecxz
(bad)
mov
xchg
xor
add
mov
(bad)
sbb
push
clc
and
fs
ret
call
jp
and
sbb
xor
and
cmp
cmp
cmp
add
mov
mov
or
push
pushf
sti
cmp
test
outs
push
test
fistp
dec
test
xlat
scas
mov
push
jp
(bad)
jb
jle
in
or
ds
scas
repnz
mov
push
enter
fcmovne
mov
out
inc
mov
mov
push
int3
push
aaa
mov
sub
in
aad
push
aas
dec
sub
ss
test
(bad)
xor
aad
(bad)
xchg
scas
aad
jb
sbb
dec
cmc
xchg
sar
dec
loope
mov
aaa
adc
or
fs
mov
pushf
les
arpl
pop
or
dec
mov
imul
jo
fnstsw
leave
cs
xchg
or
dec
inc
lds
test
test
or
xchg
cmps
push
push
scas
mov
sbb
inc
jg
call
pop
fucomp
leave
pop
(bad)
popf
das
cmp
mov
xor
into
mov
les
fnstcw
sub
push
shl
push
lahf
cmc
mov
jmp
mov
dec
sub
fmul
xchg
frstor
sahf
cmp
dec
inc
jnp
inc
lds
mov
or
and
hlt
sbb
(bad)
cmps
add
lds
mov
cmp
pushf
xor
mov
xor
push
push
sub
std
ss
sbb
ss
pop
mov
(bad)
aad
adc
adc
pushaw
jbe
(bad)
mov
mov
jbe
mov
sbb
jnp
ret
sbb
pop
pop
xor
mov
das
push
shl
test
push
inc
lods
pop
pop
fcomp
inc
push
jmp
xchg
movs
mov
mov
mov
pop
fnstcw
sbb
dec
mov
mov
addr16
jmp
(bad)
cwde
pop
jp
xlat
inc
arpl
icebp
xor
mov
jp
pop
xchg
inc
shr
iret
jle
mov
gs
dec
imul
(bad)
jns
pop
adc
cmp
dec
mov
shl
iret
push
std
xchg
jg
pop
loope
inc
fdiv
xchg
mov
mov
fisub
scas
cmp
and
push
dec
hlt
and
cmps
push
jl
cmp
je
jge
pusha
or
sbb
xor
add
fidiv
cmp
stos
outs
lods
(bad)
aas
jo
sbb
push
mov
pop
jno
pop
inc
faddp
std
dec
jae
xchg
inc
inc
inc
mov
outs
scas
data16
test
fdivr
clc
mov
mov
(bad)
icebp
xchg
mov
push
stos
out
das
mov
gs
sbb
pop
pop
mov
mov
int
mov
(bad)
jnp
jno
adc
mov
pop
rol
jmp
xor
dec
cmp
ins
out
ror
sbb
xor
out
mov
inc
push
dec
sbb
mov
daa
or
mov
cdq
(bad)
imul
pop
cdq
les
jae
cli
ffree
jb
(bad)
pop
lds
add
leave
shl
jp
sub
mov
mov
pusha
cld
out
inc
repz
in
mov
cdq
(bad)
bound
dec
sub
adc
xchg
sbb
cmps
jno
or
out
pop
(bad)
mov
cld
(bad)
and
cmps
xor
fwait
outs
movs
pop
jne
test
cmp
sub
fdivr
or
pop
jns
sbb
inc
jnp
fisttp
jp
mov
cmp
test
fisub
js
outs
mov
pushf
idiv
sbb
cdq
cmp
es
sbb
retf
mov
or
xchg
stos
shl
jno
mov
xor
jns
(bad)
push
cmp
mov
nop
and
std
shl
jae
aad
and
fistp
sti
add
fst
jno
jg
or
std
xor
adc
xchg
adc
push
rol
(bad)
jmp
dec
lods
out
in
inc
out
mov
sbb
(bad)
mov
imul
(bad)
fimul
sub
je
jge
outs
imul
aam
in
inc
outs
popf
dec
xlat
sbb
pusha
pushf
sub
imul
addr16
out
outs
cdq
stos
out
out
inc
rol
loope
add
ret
and
mov
sub
fsub
(bad)
cmp
mov
es
cmp
fs
cmps
or
dec
or
ror
pop
or
shl
add
stos
rcl
xchg
fdivr
adc
pop
xchg
addr16
(bad)
lock
or
mov
gs
push
ins
xchg
(bad)
push
mov
mov
mov
xchg
stos
out
jae
sub
sbb
scas
adc
ss
mov
es
fistp
and
addr16
test
fwait
xchg
xor
sahf
fidiv
push
mov
xchg
loopne
hlt
inc
fcomp
inc
xlat
(bad)
push
add
or
(bad)
imul
jle
xchg
(bad)
dec
pop
sahf
outs
inc
dec
iret
and
and
sbb
pop
or
adc
mov
test
push
jl
mov
and
mov
lods
arpl
test
add
mov
sub
retf
adc
cmc
or
cmp
mov
lock
pop
add
jmp
or
sahf
scas
pop
mov
push
fsubr
cmps
jne
mov
cli
in
cmps
inc
aad
push
(bad)
jbe
jnp
mov
out
(bad)
cmp
in
mov
jp
in
int3
pop
pop
test
ret
aad
rcl
mov
fstp
adc
xchg
pop
clc
sbb
les
fwait
mov
sahf
cmp
bnd
push
and
repz
iret
dec
lock
shr
pop
mov
add
and
js
rcr
jecxz
jl
push
ret
mov
fld1
je
mov
xor
sub
cs
retf
sub
int3
(bad)
xchg
scas
movs
push
movs
cmp
(bad)
popa
cmp
test
aam
pop
xor
adc
add
shl
mov
(bad)
xor
aas
(bad)
(bad)
xchg
adc
out
dec
dec
movs
cli
repz
mov
addr16
or
pop
jge
add
movlps
mov
push
test
xor
fcom
call
cwde
add
loop
enter
sub
int
(bad)
leave
pop
mov
cdq
pushf
jae
jp
jle
cmp
out
mov
adc
push
jbe
ds
sub
nop
pop
mov
xchg
mov
std
push
je
xor
pop
in
or
mov
icebp
nop
das
add
outs
push
cmps
sar
movs
cld
loop
add
mov
or
push
or
aaa
push
les
movs
push
enter
and
pop
movs
cmp
or
or
leave
and
cdq
adc
add
add
dec
scas
shl
stc
test
cmp
retf
jnp
push
sub
xor
mov
loope
lock
call
push
mov
ds
mov
sub
push
shl
movs
sbb
dec
xor
fsubr
jl
scas
dec
push
and
call
push
lahf
or
xor
das
adc
ss
push
mov
pop
rcr
shl
push
mov
es
mov
mov
push
mov
mov
cs
lods
and
sub
sbb
push
xor
jg
push
mov
popf
stos
loop
push
mov
jp
xlat
lock
loope
aad
aad
(bad)
mov
dec
data16
das
loope
je
dec
out
std
imul
(bad)
or
cwde
dec
push
mov
adc
xor
in
mov
gs
jnp
das
jb
mov
mov
xchg
out
in
les
popw
or
gs
dec
scas
shr
inc
mov
mov
dec
cmp
and
xchg
fistp
retf
and
mov
mov
ds
mov
xchg
es
pop
sub
out
lds
sbb
mov
jmp
mov
(bad)
jl
adc
sar
les
(bad)
mov
mov
pop
nop
pop
sbb
mov
adc
pop
and
add
cmps
dec
sub
push
mov
mov
jp
inc
sahf
sbb
mov
sar
sub
repz
cdq
xor
xchg
clc
sti
inc
movs
mov
jp
fiadd
test
push
xchg
or
in
pop
and
lock
add
pop
or
(bad)
enter
cmp
and
ret
rol
das
popf
std
stos
stc
mov
mov
data16
mov
and
(bad)
movs
pop
fdivrp
(bad)
ds
mov
mov
imul
in
sar
(bad)
cmp
aam
jmp
cdq
loopne
sub
xchg
loop
cmc
mov
(bad)
sub
xor
push
lods
inc
inc
inc
xor
in
out
retf
xchg
loopne
das
jae
jmp
retf
xchg
push
mov
push
dec
sbb
inc
jnp
push
ds
push
mov
or
sub
daa
xchg
repnz
inc
ret
jmp
pop
xchg
(bad)
out
pop
outs
dec
popa
cmp
gs
jmp
push
dec
out
pop
sub
loopne
inc
scas
out
xchg
cwde
mov
(bad)
adc
mov
or
call
and
jmp
call
mov
ja
mov
add
mov
fdivr
pop
sub
add
in
iret
ds
pop
fs
int3
cs
(bad)
aam
add
stos
movs
cmp
cmp
sti
jmp
pop
out
cmp
push
js
adc
ins
loopne
ror
mov
pop
push
xchg
inc
mov
imul
add
pop
and
ins
ss
sub
pop
ja
arpl
xchg
retf
(bad)
(bad)
mov
adc
xor
and
lock
or
pop
mov
jmp
cld
(bad)
jbe
dec
jg
cs
fsub
inc
js
fwait
mov
cmc
fisub
repnz
fist
fadd
mov
xor
test
popf
(bad)
jge
xchg
ret
imul
movs
cwde
lods
cmp
jmp
outs
loop
arpl
ret
aam
fsubr
out
fldenv
(bad)
lods
call
jge
scas
sub
xchg
test
jmp
into
adc
sub
push
mov
fild
mov
aam
inc
push
cld
cmovg
shr
cwde
(bad)
dec
mov
rcl
dec
and
jno
cmc
outs
arpl
cmp
scas
dec
imul
stos
inc
push
ret
outs
add
inc
daa
and
jl
inc
inc
aam
jno
retf
aas
or
das
and
je
xor
ins
ret
into
repz
mov
pop
retf
push
mov
mov
shl
repnz
out
test
pop
fwait
push
or
adc
pop
ds
and
cmp
xchg
and
dec
cmp
sbb
popf
xor
mov
stos
scas
repz
adc
in
cmp
cwde
add
xor
add
loope
daa
push
movs
test
cli
jecxz
jno
push
mov
es
push
and
loopne
(bad)
test
ret
lods
loopne
fiadd
daa
popf
sbb
movs
jns
and
jbe
daa
rcr
(bad)
ins
jecxz
out
cmp
cwde
jmp
cli
pop
xor
mov
pop
sahf
cmp
cmp
cmp
int
sub
stos
mov
dec
lds
sbb
cmp
jbe
mov
outs
cwde
push
or
(bad)
out
or
ins
int3
and
push
shr
repz
aam
pop
jae
pop
smsw
mov
xor
pop
jp
or
jns
dec
aad
int
mov
mov
jge
inc
sbb
pop
das
ins
cmp
cld
rep
mov
lock
adc
jae
mov
sbb
mov
xchg
or
clc
in
pop
cmp
loope
inc
in
lahf
push
(bad)
cmp
xor
neg
or
mov
fisubr
fidivr
test
dec
pop
cmc
and
xchg
or
test
dec
mov
out
mov
jg
add
sbb
iret
jne
(bad)
cmp
adc
stos
mov
jmp
fwait
movs
ins
repz
shr
jge
pop
icebp
push
sar
sbb
sbb
ins
jle
daa
fwait
xchg
ins
mov
scas
or
je
mov
int3
loopne
loopne
out
ds
jbe
pop
dec
sbb
inc
push
push
mov
lahf
cwde
xor
test
jns
sbb
jmp
xor
jb
fwait
or
xchg
(bad)
movs
xchg
xchg
mov
imul
cld
sub
mov
je
test
mov
pop
adc
jge
or
ret
js
into
push
shr
aaa
xlat
rol
xchg
pushf
loope
pop
daa
data16
rol
(bad)
icebp
mov
out
mov
jbe
cmp
inc
mov
xor
or
add
jecxz
adc
add
cli
mov
stos
clc
rcl
sub
imul
clc
shl
aam
jmp
mov
cmp
mov
arpl
lods
bound
inc
in
ja
daa
xor
movs
loopne
sar
jle
scas
test
xchg
mov
jp
cld
cdq
cld
sub
jg
in
sbb
cmp
mov
std
test
cmp
and
sub
pushf
pop
xchg
jge
outs
icebp
pop
repz
fld
dec
sbb
aam
cld
jmp
(bad)
jae
inc
mov
xlat
jmp
cmp
mov
imul
cmps
popf
test
mov
pushf
repz
cmp
sub
ss
mov
inc
rcl
mov
xor
clc
dec
xchg
mov
mov
ficomp
fnstsw
dec
call
lock
jb
push
iret
iret
sub
pop
enter
xlat
and
dec
pop
out
mov
mov
push
test
inc
test
dec
es
pop
sub
jmp
into
dec
jo
inc
test
pop
test
and
pusha
repnz
fadd
and
sbb
inc
sti
pop
pop
cwde
std
mov
mov
adc
das
xor
mov
mov
sbb
hlt
sar
sbb
(bad)
xchg
repnz
mov
arpl
dec
and
int3
pop
xchg
out
adc
or
cmp
sbb
mov
lods
(bad)
scas
test
adc
movs
(bad)
stc
sub
push
add
jg
or
int3
jle
into
cli
fidiv
enter
ins
cmc
test
(bad)
(bad)
ins
xchg
out
(bad)
sub
aaa
test
fiadd
pop
adc
jne
icebp
lods
rcl
(bad)
dec
ja
and
call
ins
inc
pop
clc
xor
mov
jo
stos
inc
in
mov
popf
push
push
jge
sub
nop
out
inc
test
inc
or
loopne
mov
inc
pop
nop
xor
call
sbb
jmp
fadd
sub
push
mov
scas
cmp
cmp
out
cmp
push
cmp
inc
scas
std
jge
(bad)
lahf
add
lock
sub
sahf
jnp
xchg
adc
push
in
das
and
jb
sbb
push
scas
push
mov
push
add
dec
es
ss
jns
pop
cmp
push
inc
popa
mov
mov
mov
xor
push
push
mov
cmps
lds
cmp
fwait
nop
leave
pop
sub
dec
add
scas
lahf
fimul
jmp
pushf
pop
or
retf
ds
push
sbb
and
pop
and
hlt
outs
and
jno
dec
dec
inc
sti
inc
jmp
jbe
movs
jae
sub
out
fsubr
sub
jb
inc
or
cmps
jge
out
sub
arpl
scas
xchg
sbb
push
push
les
aas
rol
cs
jne
mov
cmps
push
ret
int
enter
icebp
mov
cdq
push
stos
mov
add
xor
repnz
hlt
dec
xor
xchg
aaa
push
push
dec
ins
adc
mov
dec
loop
push
and
ret
push
sar
mov
ret
dec
sub
ficomp
inc
xor
jae
push
xor
pop
jo
xchg
mov
pop
jg
xchg
pop
adc
pop
icebp
mov
mov
jmp
rcl
mov
(bad)
gs
jns
mov
fdivr
jb
jno
gs
shl
sti
and
fcom
data16
in
sbb
sbb
xchg
call
jmp
les
push
or
sub
cmp
jmp
add
mov
imul
scas
dec
or
inc
sub
mov
push
xlat
ins
jno
repnz
xor
int
lea
repnz
arpl
pop
jg
mov
or
cmp
in
mov
mov
unpckhps
(bad)
sub
jge
retf
lods
cwde
jo
adc
ins
daa
(bad)
ret
fidiv
push
sbb
pop
lds
mov
mov
scas
ret
ins
fwait
push
lds
call
ficom
fs
out
mov
push
pop
jge
int3
push
inc
cwde
jae
adc
aaa
push
mov
call
sub
pop
add
inc
push
or
mov
push
pop
add
out
pop
les
add
jg
jg
sahf
loope
adc
pusha
mov
mov
xor
loope
xchg
scas
pop
aam
adc
dec
loopne
xor
cmps
es
imul
mov
addr16
lea
and
and
cmp
aaa
sbb
xor
into
sub
aad
dec
inc
js
fisub
pushf
add
icebp
sbb
inc
or
jge
inc
mov
enter
dec
ss
lea
push
sbb
ret
pop
aas
enter
pop
leave
cmps
inc
push
and
mov
lods
dec
push
cli
or
aam
or
hlt
sar
push
loopne
(bad)
xor
cmc
sbb
sub
add
aad
jl
push
and
jnp
xchg
xchg
(bad)
in
sub
sub
cmps
or
xchg
fnstcw
mov
sub
cmp
mov
enter
or
mov
aaa
imul
jmp
pop
bound
inc
inc
jle
mov
or
cli
jae
pop
loop
push
add
jl
icebp
ja
mov
jge
mov
pop
mov
cmp
jo
or
pop
and
(bad)
xchg
fwait
mov
icebp
jo
sbb
mov
call
aas
jp
call
and
mov
and
(bad)
idiv
mov
adc
mov
scas
out
jg
rcr
xchg
jecxz
das
cdq
push
sbb
push
(bad)
(bad)
gs
(bad)
sbb
and
fnstenv
movs
xor
jbe
cmps
mov
or
cld
fsubrp
jmp
inc
leave
fist
cmps
adc
pop
stos
or
std
xchg
xlat
retf
push
mov
mov
in
inc
cdq
push
leave
mov
mov
push
ss
inc
sbb
popa
(bad)
pop
test
pop
xor
int
cmps
and
pop
sub
lahf
das
test
lods
(bad)
dec
cmc
mov
inc
mov
or
dec
sbb
pop
shl
jmp
and
jecxz
hlt
sar
add
cmp
pop
dec
neg
adc
add
in
cmc
test
pop
adc
xor
xor
xor
daa
sbb
add
pop
push
fild
stc
dec
mov
dec
sub
inc
add
icebp
push
js
pop
xor
stc
mov
xor
cs
test
jae
cs
xchg
aam
xor
ins
sahf
scas
push
hlt
repz
mov
xor
inc
imul
movs
leave
dec
icebp
adc
lds
or
mov
outs
ins
hlt
pop
xchg
loopne
sub
pcmpgtd
push
sbb
repnz
je
push
cmps
sbb
xchg
mov
and
cmp
lds
(bad)
popa
mov
call
xchg
jecxz
xchg
fst
icebp
nop
shr
jbe
sbb
inc
ficom
cmps
jge
adc
adc
and
dec
out
cmp
mov
jmp
push
into
or
test
pushf
mov
jle
in
xor
out
mov
cmp
fstp
jmp
add
push
pusha
cmp
scas
popa
(bad)
or
ins
stos
sti
cmp
ja
pop
into
retf
dec
popf
and
setle
mov
cmp
aad
mov
clc
mov
mov
movs
inc
sub
push
mov
call
and
(bad)
jmp
out
or
and
fsubr
(bad)
test
pop
les
xor
cwde
bound
dec
outs
lds
fst
cmc
mov
mov
sub
mov
(bad)
jo
shr
mov
push
clc
adc
sbb
push
in
dec
pop
jne
scas
adc
xor
clc
mov
mov
int3
xchg
inc
push
xchg
cld
aas
mov
cli
xchg
adc
add
dec
xor
jb
ret
outs
mov
repz
fsub
scas
int
adc
fwait
push
lea
iret
es
mov
cmp
popa
mov
pop
mov
inc
imul
stos
je
dec
or
fcom
es
sub
mov
push
dec
xor
stos
jnp
inc
(bad)
jle
imul
sbb
shl
dec
sbb
ins
dec
repnz
jno
rcl
not
push
in
sub
add
jb
test
or
das
mov
mov
cmps
inc
fwait
adc
sbb
dec
repnz
iret
ins
cwde
adc
or
mov
movs
sbb
sahf
lock
repnz
in
cs
(bad)
mov
retf
jb
xor
and
adc
cwde
out
adc
push
fnstenv
int3
adc
mov
test
or
jp
ss
aas
lds
mov
dec
dec
outs
mov
dec
xor
jmp
pushf
mov
dec
retf
xchg
imul
fwait
inc
out
xchg
shl
xchg
add
stos
stos
add
pop
and
jg
(bad)
(bad)
lds
dec
xchg
aas
(bad)
mov
and
add
dec
bound
out
out
mov
push
and
sub
cmps
and
sbb
fs
xchg
cmp
out
jle
addr16
mov
xor
adc
mov
pop
imul
cld
sbb
int
call
fcmove
inc
les
xor
rcl
xchg
stos
test
mov
call
push
pop
shl
les
sbb
dec
arpl
clc
push
dec
jmp
xor
loope
aaa
arpl
mov
jbe
retf
sub
lds
adc
mov
aam
pop
pop
pop
dec
pop
dec
hlt
xor
xor
or
sub
cmp
mov
jnp
bswap
mov
jge
sub
movs
cmc
and
pop
cmp
imul
fs
sbb
js
loop
xor
scas
pushf
lea
cmp
(bad)
jmp
fsub
pop
pop
aas
call
jb
imul
xchg
xchg
mov
pop
dec
mov
dec
mov
add
mov
mov
iret
aam
pop
nop
gs
imul
pop
dec
inc
es
adc
fnsave
daa
mov
xchg
popf
dec
push
dec
call
dec
pop
push
je
dec
add
xchg
jg
xor
int3
pop
lock
sti
ins
mov
cmps
loopne
and
push
dec
push
mov
xchg
jb
adc
loope
icebp
push
mov
sahf
ds
mov
cmp
cwde
repnz
mov
mov
mov
mov
adc
pop
xor
fdiv
or
lock
sub
shl
jae
or
mov
jl
xor
inc
cdq
mov
test
retf
ret
dec
dec
xor
out
xor
mov
je
test
jb
pcmpeqw
data16
adc
or
mov
mov
sbb
data16
ja
(bad)
lods
inc
sub
sub
pop
mov
jno
fnstcw
(bad)
push
xchg
sbb
push
add
loope
inc
mov
retf
fucom
inc
mov
icebp
inc
scas
jg
dec
xor
mov
ss
inc
push
dec
cmp
cmp
test
xchg
repnz
retf
mov
adc
mov
push
sub
cld
add
jp
sub
test
iret
jge
xchg
or
push
jae
sbb
pop
xor
ror
ret
mov
loop
cmp
xchg
movs
cdq
das
dec
cmp
pop
ins
js
inc
int
adc
movs
xor
cdq
loop
mov
push
push
push
push
adc
add
pop
lds
leave
scas
adc
cld
(bad)
jecxz
out
sub
mov
fisub
rol
xor
mov
mov
clc
retf
ds
out
out
and
sbb
or
jg
sbb
inc
test
test
lock
xchg
sahf
cmp
sbb
xor
sbb
pop
ficomp
mov
or
test
dec
inc
repz
jecxz
ror
lock
rcr
cdq
dec
xchg
dec
jmp
and
addr16
fadd
pop
mov
xor
xchg
shl
dec
mov
sub
outs
sahf
sub
popf
movs
imul
sub
fwait
mov
lds
imul
int3
fistp
shl
jae
xor
das
retf
aaa
fst
idiv
fstp
daa
test
mov
push
cmc
add
icebp
or
pusha
sub
push
dec
jl
add
aam
sbb
inc
in
jne
aas
mov
hlt
xor
rcl
shr
inc
xchg
jecxz
addr16
hlt
sti
or
sbb
push
xchg
pop
pop
mov
inc
jb
or
pop
enter
mov
mov
lock
inc
jb
scas
call
jecxz
adc
add
mov
lods
cmp
into
jns
lods
fdivr
sbb
or
dec
mov
add
dec
stos
sub
mov
mov
jbe
inc
cmp
push
or
test
add
fcom
test
stc
dec
fwait
(bad)
icebp
or
sub
gs
and
popa
pop
mov
inc
push
not
(bad)
daa
pushf
ret
and
sbb
call
pop
mov
pop
movs
stc
ds
inc
pop
je
fidiv
mov
mov
das
xchg
add
cld
outs
rol
mov
xchg
or
fcomp
jb
xor
cmp
xchg
xchg
loopne
push
cs
mov
or
jmp
hlt
sub
xchg
les
mov
fwait
push
push
pusha
pop
xor
cld
jne
xor
push
or
and
cld
and
xor
test
xchg
fwait
dec
in
fisub
mov
pop
fistp
fldcw
push
push
repz
leave
jp
sub
jg
push
imul
mov
or
(bad)
push
xlat
adc
xor
retf
mov
pop
out
and
(bad)
jnp
and
or
fnsetpm(287
sar
jbe
mov
int
retf
mov
ret
push
in
jnp
bsr
adc
cdq
ins
scas
popa
cmp
add
enter
push
sbb
inc
hlt
sub
retf
dec
jge
adc
retf
lods
sub
movs
inc
or
mov
loop
pop
mov
fbld
clc
into
and
movs
push
lock
test
popa
dec
xchg
pushf
jp
fidiv
mov
mov
in
gs
in
cmc
bound
sub
ror
push
ins
jno
cs
retf
add
mov
push
jecxz
frstor
mov
cmp
sub
cmp
sub
repnz
add
retf
xchg
cdq
sbb
or
push
adc
fidiv
fisttp
in
(bad)
cmp
dec
inc
aad
inc
scas
or
lea
mov
out
push
xchg
push
call
mov
lahf
outs
add
lds
jb
retf
retf
stc
sar
mov
dec
mov
fwait
je
jg
mov
xor
int
(bad)
xchg
mov
xor
aaa
mov
or
jne
shl
push
jp
ja
das
mov
into
(bad)
jnp
cmp
test
mov
cs
pusha
jo
or
fdivr
sub
test
dec
sar
mov
pushf
add
popf
push
push
out
sub
add
out
inc
out
sbb
les
scas
inc
pushf
inc
cld
(bad)
lods
push
out
outs
jns
lods
adc
pop
sub
xchg
call
dec
push
mov
mov
inc
xchg
mov
aam
fidiv
add
icebp
jnp
cmps
call
daa
pop
addps
in
ret
mov
icebp
mov
mov
shl
cld
inc
mov
arpl
sub
pop
inc
xchg
pop
jne
out
xor
in
ins
imul
imul
lock
add
jbe
mov
sahf
popf
adc
xchg
stos
sub
adc
jmp
sub
call
int
sbb
cmp
ds
mov
lods
inc
test
ja
mov
adc
imul
cmps
mov
sub
mov
out
dec
pop
popa
sub
lahf
enter
(bad)
pop
mov
add
movs
dec
pop
mov
jmp
inc
cmps
sbb
sub
fcom
jg
ja
jge
cmp
enter
mov
push
sub
jne
or
adc
dec
cmp
or
mov
stc
es
sbb
dec
push
push
fs
push
fmul
push
jl
sti
lds
jl
push
(bad)
cmp
mov
ins
jb
nop
xchg
ror
cmp
mov
sbb
push
xchg
xor
je
inc
inc
lahf
mov
movs
scas
sub
or
dec
xchg
xchg
call
inc
cmc
call
arpl
fidiv
movs
or
cli
add
or
arpl
sbb
in
enter
cmp
rcr
add
adc
int
hlt
vmovaps
inc
loope
sub
mov
cld
pop
mov
ins
jp
cmp
xchg
dec
cmp
aas
(bad)
jnp
cwde
in
mov
dec
sub
pop
aam
mov
stos
cmps
mov
pop
data16
test
dec
cmps
push
fst
test
popa
sbb
pop
aad
pop
mov
daa
scas
mov
lea
jl
push
shl
(bad)
int
call
fnstcw
fcomip
mov
xchg
ret
xchg
push
pop
adc
mov
jmp
jmp
mov
jne
mov
clc
cmp
lock
sub
inc
aam
sti
loopne
adc
jb
fldcw
fisttp
inc
out
xor
sub
jnp
rol
and
pop
xchg
popa
pop
sbb
add
cmp
dec
stos
test
pop
mov
dec
push
popa
sbb
test
pop
pop
rcr
int
ds
xchg
xor
pop
inc
xor
push
and
mov
push
mov
dec
and
add
rcr
cmp
stos
mov
mov
out
pop
sbb
push
mov
push
popa
xchg
call
cmp
and
add
shr
(bad)
int
in
and
and
stos
mov
fist
push
mov
out
retf
lahf
out
jno
dec
fistp
call
mov
cdq
push
mov
cmp
pop
xchg
addr16
rcl
enter
hlt
in
push
stos
dec
adc
jnp
sub
cmp
xor
ret
jl
xchg
cmp
popa
mov
push
or
or
add
stos
fwait
(bad)
mov
sahf
mov
cmp
fstp
push
dec
pop
and
adc
jp
or
xchg
mov
xor
sub
mov
dec
mov
(bad)
es
sub
cmc
jmp
or
cmp
lahf
jne
outs
mov
dec
cs
or
(bad)
adc
jo
pop
(bad)
and
xchg
sub
hlt
mov
jns
lahf
cmps
(bad)
scas
in
(bad)
jg
data16
push
and
or
pop
movs
jns
scas
mov
arpl
add
mov
xlat
add
inc
ins
push
sbb
lods
sbb
fimul
sar
movs
xor
test
les
and
jmp
xchg
and
(bad)
cli
ror
jns
aad
mov
xchg
pop
cs
jns
sbb
mov
ins
push
jp
pop
jns
mov
(bad)
or
mov
and
xchg
pop
mov
mov
mov
cmps
pop
repz
stc
dec
inc
mov
stos
test
jae
inc
imul
lahf
sbb
ins
shl
aad
jg
add
xchg
xchg
sbb
cmc
jbe
cmp
xor
inc
cs
popa
sbb
mov
pop
push
or
leave
neg
mov
jo
mov
ret
xchg
sbb
push
lock
mov
mov
enter
ret
retf
mov
(bad)
mov
jbe
pop
jmp
dec
daa
les
add
adc
int
add
cmc
test
or
test
out
mov
mov
fidiv
jle
retf
pop
and
sti
fisttp
push
push
xor
aad
adc
std
pop
adc
xor
fs
xchg
loopne
in
push
repz
outs
and
jg
push
xlat
push
mov
test
or
fwait
jge
pop
adc
or
xchg
test
sahf
add
or
adc
xchg
aaa
jg
mov
cmc
and
retf
out
stos
iret
cld
repz
icebp
inc
test
adc
jmp
fs
popf
in
or
(bad)
jnp
adc
adc
(bad)
jl
xor
cmp
in
lods
and
cli
push
fild
cmps
adc
inc
pop
adc
cwde
or
and
icebp
sbb
retf
sti
(bad)
lahf
(bad)
int
scas
sub
loope
loopne
xor
retf
sahf
cmp
sub
push
lods
sbb
in
mov
test
loope
sbb
dec
pop
out
dec
sti
int3
push
cmps
or
retf
sbb
xchg
mov
push
fcomip
sbb
stos
jl
js
xchg
ins
jnp
jo
outs
in
push
cs
dec
push
sbb
cmp
mov
dec
sbb
ins
pop
adc
mov
stc
ins
jl
push
cmp
mov
test
or
mov
fist
pushf
fimul
mov
sub
sub
mov
cmp
cmp
pop
jmp
mov
xchg
xchg
clc
inc
cdq
sbb
xor
clc
setbe
jbe
mov
out
mov
mov
pop
mov
mov
pop
cwde
mov
mov
hlt
aas
sti
push
mov
cmp
cmc
dec
fistp
sar
stc
mov
jmp
or
aad
hlt
aam
outs
rol
sbb
ret
icebp
and
sub
dec
scas
aaa
inc
dec
jg
call
mov
and
dec
xor
pop
and
arpl
mov
out
sub
push
push
mov
into
int
sbb
shl
pop
adc
test
popf
add
lds
sub
xor
nop
push
outs
popa
daa
dec
sub
in
cmp
pusha
and
iret
inc
or
rol
mov
push
cwde
scas
jge
xchg
out
and
pop
mov
outs
sub
ds
fsubr
dec
adc
jge
jbe
shr
cmp
xchg
mov
push
imul
or
jle
sub
stos
test
(bad)
out
xor
aam
shl
daa
xchg
push
gs
add
cmc
out
add
in
push
adc
mov
mov
out
mov
adc
mov
loop
fcomp
and
push
pop
and
xchg
jne
outs
mov
outs
loope
cdq
and
cmp
loop
dec
sbb
retf
pop
fsub
adc
or
aad
pop
fwait
es
loopne
mov
and
or
jmp
pop
inc
xchg
add
xchg
ss
and
push
bound
xor
ja
jo
sbb
push
sahf
hlt
out
xor
(bad)
out
sub
cmp
pop
test
dec
cmc
lea
push
pop
jecxz
mov
push
jmp
jns
mov
gs
cmp
in
xor
sti
scas
cwde
in
jp
or
jae
push
inc
lds
pop
cs
sub
loop
div
sub
lahf
inc
sbb
jb
sub
jo
(bad)
retf
and
repnz
gs
mov
mov
ret
jae
hlt
frstor
daa
mov
inc
sbb
imul
jmp
in
or
das
mul
mov
pop
sub
xchg
mov
mov
sub
mul
mov
or
imul
sub
rcr
xchg
das
or
inc
neg
shl
sub
inc
push
mov
or
shr
(bad)
out
sbb
xor
ins
dec
sbb
mov
push
xchg
rcr
push
and
and
pop
mov
mov
sbb
pop
cdq
imul
cwde
mov
inc
adc
ins
add
push
je
add
add
inc
jnp
jg
in
sbb
jns
popf
imul
iret
jae
into
or
jo
mov
mov
push
loop
pop
add
mov
mov
aad
imul
jo
fwait
mov
push
rol
pusha
inc
sahf
jbe
out
pop
scas
sbb
pop
les
inc
nop
pop
xchg
imul
and
cmps
cs
scas
jmp
es
dec
sbb
fwait
rcl
pop
push
pop
fdiv
and
or
aam
mov
mov
push
and
inc
xor
icebp
cmp
pop
dec
dec
dec
cdq
mov
xchg
lock
push
fsubr
fwait
mov
mov
or
adc
dec
push
in
cmp
cs
and
je
mov
push
lods
mov
xchg
std
and
call
fist
jl
push
out
ror
pop
push
xchg
call
mov
iret
mov
popf
sub
inc
out
dec
clc
sbb
std
fidiv
stos
sub
outs
ret
sub
retf
dec
movs
mov
imul
in
lds
and
pop
pop
jecxz
jp
add
test
or
sahf
push
je
rol
adc
in
jae
cmp
lods
cmps
cmp
sahf
sbb
loope
xchg
ret
out
(bad)
addr16
gs
xor
rcpps
aaa
mov
outs
pop
xor
ret
cmp
xchg
out
push
retf
mov
sbb
mov
scas
fst
push
stos
pop
mov
jo
shr
popf
sbb
mov
or
xchg
add
fld
or
jg
xchg
mov
push
or
bound
shl
cmp
cli
xor
retf
mov
enter
sbb
xor
mov
js
push
sbb
ret
sub
pop
fisubr
add
mov
pushf
xor
add
add
push
and
jne
fs
mov
jl
cmp
lds
and
mov
adc
cdq
jne
mov
mov
push
or
ror
sbb
rol
repnz
adc
loope
add
stos
xchg
dec
pop
adc
rcr
inc
inc
adc
push
loope
fistp
mov
loope
or
fwait
dec
xlat
stos
dec
mov
add
push
jo
repz
or
mov
sub
je
movs
sbb
dec
lods
add
ret
push
ficom
xchg
hlt
jo
daa
and
sub
into
adc
push
jae
je
and
sbb
mov
mov
(bad)
icebp
ins
ds
push
sahf
(bad)
fisttp
jnp
out
add
sub
into
shl
jno
pop
outs
pop
scas
iret
adc
xchg
mov
dec
test
mov
xchg
dec
stc
and
xchg
aad
pop
(bad)
test
push
jmp
pop
lahf
(bad)
push
or
push
xchg
ret
in
sbb
neg
sub
xchg
adc
loopne
adc
pop
mov
(bad)
add
leave
repz
mov
test
test
fstp
sbb
and
push
mov
xchg
inc
mov
jo
mov
jle
aam
bound
aaa
push
cmp
sbb
mov
jle
jmp
gs
jmp
mov
lock
fidivr
push
call
add
pop
or
cwde
dec
cmp
inc
in
(bad)
mov
add
call
pop
popf
nop
xor
outs
inc
loopne
mov
sub
stos
call
xchg
(bad)
mov
retf
push
inc
push
and
mov
pop
pop
mov
dec
jp
cmp
enter
loope
dec
dec
xlat
loope
pop
leave
mov
imul
adc
ret
sbb
sahf
data16
aas
in
jmp
test
xor
out
es
adc
sub
sub
std
inc
shr
push
mov
dec
sbb
cmp
jg
jb
movs
(bad)
sub
cli
xchg
aam
sbb
adc
push
loope
pop
loop
jbe
or
mov
mov
cmp
dec
add
popf
adc
aad
and
mov
dec
cwde
clc
jmp
fst
sub
je
and
adc
scas
jbe
xchg
mov
mov
or
adc
arpl
(bad)
xchg
lods
sub
mov
sub
sidtd
aaa
or
lock
xor
mov
hlt
jns
inc
bound
inc
mov
mov
sub
cmp
(bad)
pop
push
sahf
mov
clc
sbb
dec
mov
jnp
sub
push
and
inc
or
repnz
dec
(bad)
shr
dec
rep
cdq
push
les
repz
jo
popa
lahf
fdivr
movaps
adc
test
sbb
jnp
aad
dec
pop
inc
retf
mov
fnstcw
adc
inc
jp
jb
xchg
(bad)
jle
mov
lods
pop
dec
and
cld
enter
test
rcl
xchg
mov
(bad)
pop
push
test
stos
fmul
xor
in
fs
aas
push
test
shr
cmp
xchg
aad
mov
push
pop
mov
hlt
mov
xchg
idiv
iret
xchg
inc
loope
test
rcl
or
push
push
cli
dec
mov
xor
stc
jae
xor
ja
(bad)
lahf
jecxz
das
retf
mov
mov
sub
sub
(bad)
rcl
jae
mov
dec
inc
popa
aaa
dec
dec
ins
push
mov
movs
pop
lods
mov
cli
sub
(bad)
ds
imul
das
dec
xor
jl
jo
jmp
mov
xlat
and
pop
imul
loopne
cld
sahf
adc
push
dec
inc
mov
adc
adc
rcl
mov
icebp
fmul
mov
out
fmul
mov
ds
imul
ss
mov
movs
sbb
in
test
dec
mov
lods
mov
daa
sbb
inc
adc
stos
retf
pop
adc
cld
loope
push
sub
push
dec
sbb
test
aad
xor
data16
and
inc
push
pop
imul
mov
ja
sub
(bad)
lods
push
aaa
push
call
add
call
jge
rol
shl
jmp
(bad)
nop
(bad)
rol
enter
nop
pop
lahf
xchg
retf
xor
adc
bound
inc
and
or
les
pop
or
in
pop
cmps
test
or
inc
mov
fist
xchg
jle
sti
dec
(bad)
repz
fsubr
imul
into
mov
push
fs
fbld
(bad)
stc
(bad)
jle
cmps
aam
or
cmps
dec
jmp
mov
stc
enter
std
pop
ins
popf
cmp
ret
dec
cli
inc
dec
mov
and
and
xchg
adc
push
or
rcl
mov
imul
jmp
shl
movs
sbb
popf
mov
jl
push
xchg
data16
dec
sbb
out
(bad)
sbb
mov
outs
jmp
adc
lahf
sub
mov
aas
mov
mov
jnp
(bad)
mov
dec
cmp
xor
jmp
xor
xor
or
sti
push
js
in
sub
mov
shl
outs
je
retf
jbe
xchg
or
ds
aad
pop
mov
shl
xor
mov
mov
add
mov
mov
pop
xor
rcl
mov
aaa
mov
xor
push
jns
pop
adc
ficomp
test
fnstenv
das
add
jns
inc
dec
inc
mov
mov
addr16
fistp
iret
lods
aam
jne
push
mov
pop
loop
out
shr
mov
mov
dec
mov
inc
mov
add
mov
ret
or
int
or
or
hlt
(bad)
inc
popa
push
sar
nop
(bad)
mov
jmp
neg
push
out
in
(bad)
sub
sub
das
xchg
xor
or
cmps
clc
push
xchg
dec
xchg
loop
jg
mov
das
stc
or
sti
std
push
xor
mov
pop
add
mov
adc
pop
arpl
repz
xor
loop
ror
je
ret
pop
nop
pop
mov
outs
push
mov
adc
fstp
sub
les
imul
xchg
xchg
cmp
jg
mov
push
and
cmp
retf
loope
ins
sbb
jnp
jnp
or
(bad)
dec
fwait
pop
xor
mov
enter
jp
or
sub
retf
and
push
dec
push
push
push
and
inc
dec
sbb
mov
cmps
fstp
(bad)
sbb
pop
repz
movs
fcomp
pushf
sub
and
fidivr
jmp
push
(bad)
lods
test
cmps
neg
xor
inc
popf
int
cmp
pop
sub
xchg
ja
pop
push
sbb
inc
rcl
loop
fsubp
ins
test
les
out
sub
adc
call
mov
setbe
push
pop
add
mov
lods
fwait
mov
fidiv
push
scas
cmp
inc
clc
call
movs
sub
push
cmps
cld
lahf
popa
push
add
add
gs
or
(bad)
das
xchg
ins
enter
dec
rol
sbb
xor
cmps
xchg
mov
jmp
add
pop
aaa
mov
push
mov
sbb
enter
ret
ja
imul
mov
das
add
lds
outs
push
jg
imul
popa
ret
or
cwde
dec
call
out
jmp
fbstp
pop
cmp
jecxz
add
adc
fstp
mov
std
jbe
mov
mov
sar
popf
test
fwait
test
stos
add
adc
lds
fnstsw
data16
rcl
dec
cmc
out
imul
jae
pop
pop
xchg
imul
lods
push
(bad)
iret
push
lods
adc
jecxz
vpunpcklwd
jnp
add
mov
div
and
or
cmps
test
cdq
fdiv
out
cmp
sub
and
jge
aaa
adc
lods
jl
ins
xor
adc
inc
jo
ins
shr
pop
in
outs
dec
cmp
or
mov
fisub
ss
leavew
repnz
mov
les
cmps
push
and
(bad)
xchg
mov
jno
pop
xor
mov
cwde
lgs
push
and
inc
in
inc
fwait
arpl
test
stc
lods
sub
cmp
mov
(bad)
adc
mov
fild
vpmaxub
push
in
mov
sbb
sub
clc
push
std
fs
cwde
mov
xor
xor
dec
pop
xchg
out
sub
push
jns
inc
push
adc
jbe
(bad)
xchg
dec
sub
scas
jmp
scas
or
call
adc
pop
mov
pop
js
stos
(bad)
or
cmp
sbb
retf
imul
(bad)
xor
sbb
rcl
dec
sbb
adc
cmps
out
loop
lock
scas
or
mov
iret
and
nop
push
call
pop
sahf
rcl
pop
xchg
and
ja
nop
push
jecxz
enter
jo
xor
fadd
xchg
(bad)
call
in
lea
jno
inc
retf
xor
sub
push
repnz
add
lea
xchg
push
es
adc
mov
hlt
mov
mov
fld
int3
shl
dec
imul
stos
push
pop
clc
cmps
inc
scas
xor
test
push
int3
jns
dec
xchg
cmp
sahf
sbb
cmps
test
mov
mov
sbb
rcl
call
mov
in
xlat
mov
pop
add
mov
push
inc
iret
jns
(bad)
(bad)
mov
popf
mov
or
cmp
push
lds
mov
nop
bound
pop
sub
xchg
lods
idiv
aam
inc
scas
mov
stos
jne
mov
mov
(bad)
sbb
sbb
cli
push
or
pop
std
xor
jmp
add
jp
iret
not
stos
dec
mov
fisttp
ja
gs
fs
ja
cmp
les
xor
add
aam
test
scas
rol
lock
sahf
jmp
(bad)
cmp
mov
pop
and
mov
(bad)
jb
ret
mov
add
outs
(bad)
adc
(bad)
cwde
push
add
rcr
inc
loopne
sub
jmp
popa
xor
mov
les
jne
xchg
inc
ror
add
call
retf
and
xchg
xchg
iret
mov
cwde
fs
sub
sar
xchg
mov
lock
in
fnstsw
pop
ins
xor
jne
pusha
aam
mov
pop
cmps
sub
jmp
clc
push
sbb
mul
fsubp
inc
xor
mov
add
adc
xchg
or
jp
ss
shl
pop
out
(bad)
jmp
xchg
repz
and
jmp
popf
lahf
retf
sub
and
out
out
popa
mov
push
pop
sbb
dec
test
pop
div
mov
loop
arpl
push
mov
fst
cs
es
into
sbb
or
push
sub
push
cmps
cmps
test
cli
daa
dec
jbe
and
xchg
push
loope
sub
aaa
or
les
movs
pop
out
div
(bad)
mov
cmp
cwde
and
repnz
xchg
push
test
shl
outs
(bad)
out
cmp
sbb
out
cmps
sbb
sub
jno
jle
ficom
adc
mov
dec
jle
dec
and
movs
ror
data16
arpl
mov
push
dec
push
sbb
outs
cmp
rcr
inc
fst
test
adc
cmp
xor
ret
pop
xor
cmp
stc
lahf
push
ror
mov
cmc
jp
loop
ret
xor
rcr
sub
xchg
iret
jge
xchg
adc
or
mov
ss
imul
mov
iret
outs
xor
sar
add
mov
out
xor
xchg
js
iret
(bad)
cmc
aad
movs
(bad)
div
rcl
push
movs
(bad)
cmp
(bad)
adc
cmps
mov
mov
dec
ds
fcom
push
ins
loope
sti
in
ds
lahf
mov
cmp
sub
push
pop
or
xchg
adc
in
sar
retf
inc
mov
(bad)
sub
push
repz
lock
nop
sbb
jl
fs
cs
icebp
add
leave
imul
cs
mov
test
jg
vmulss
imul
mov
aad
dec
and
icebp
push
mov
push
(bad)
f2xm1
das
cmpxchg
jecxz
mov
pop
add
(bad)
call
mov
loope
jnp
pop
dec
mov
mov
std
je
mov
xchg
ret
into
inc
or
xchg
jbe
xor
jbe
push
pop
rcr
jno
outs
arpl
cmp
adc
cmp
das
movs
or
sub
cmps
push
movs
inc
js
xchg
cs
loope
push
and
xchg
stc
std
inc
xor
pop
push
sbb
jo
stos
scas
cwde
inc
cmp
inc
repz
push
mov
hlt
mov
mov
mov
outs
rol
fild
imul
es
mov
out
sbb
jl
das
sub
aaa
xor
leave
xchg
lods
add
movs
cmp
ret
push
test
fdivr
ss
pand
sub
adc
cmc
shl
dec
pop
cwde
jg
mov
and
xchg
mov
jb
ins
xor
out
push
jns
popf
adc
repz
sbb
xor
retf
imul
pop
test
in
pop
ins
add
in
lds
loop
ror
mov
push
inc
shl
(bad)
adc
xchg
inc
enter
xor
xor
rcr
fistp
dec
leave
cli
gs
xchg
aas
mov
fwait
inc
scas
ja
xchg
outs
mul
push
neg
mov
xchg
push
jmp
cmc
mov
iret
pop
and
jo
int3
fimul
scas
push
adc
lds
add
mov
fnstsw
retf
mov
mov
das
mov
jbe
in
std
mov
aaa
sub
call
dec
pop
sahf
xchg
popa
data16
data16
mov
adc
and
push
hlt
adc
(bad)
cli
pop
add
lahf
add
out
add
arpl
xchg
xor
or
ror
lods
xchg
sub
retf
in
adc
popf
pusha
dec
das
ss
add
daa
jmp
sub
ss
popf
push
lods
aad
repnz
jle
add
mov
clc
lods
mov
adc
jno
popf
inc
mov
and
mov
or
js
and
mov
jg
into
jmp
mov
or
and
lods
mov
push
mov
in
mov
lods
cmps
or
(bad)
out
fstp
adc
in
cli
cmp
arpl
mov
ret
ins
jmp
mov
cmp
jp
pop
or
imul
addr16
popaw
push
div
dec
lods
dec
fimul
out
out
jnp
sub
xchg
fs
inc
xchg
fcomp
mov
xchg
fucompp
pop
pop
icebp
pop
mov
(bad)
pop
cmp
pop
pop
sahf
inc
sahf
pop
cmp
sbb
dec
xor
jg
pop
or
pop
fs
push
popf
test
jmp
sbb
sub
dec
lock
cmp
adc
mov
jbe
in
sub
mov
add
dec
dec
mov
out
or
cld
mov
jno
jno
(bad)
iret
rcl
inc
in
jmp
fiadd
in
movs
int
mov
xchg
(bad)
cmc
add
pop
popa
ror
sbb
bound
push
push
cmp
inc
mov
int
adc
scas
pop
jne
scas
mov
xchg
xchg
paddusw
mov
jg
sub
test
inc
and
test
cmp
or
jmp
rcr
xor
loop
bound
out
arpl
jne
xor
in
or
(bad)
push
jne
fdivr
xor
retf
imul
push
push
scas
pop
pop
(bad)
cmp
mul
popf
repnz
dec
jbe
shr
sbb
mov
sti
cdq
ins
fdivr
add
xor
imul
lock
in
inc
adc
lods
sbb
adc
sub
pop
fadd
nop
pushf
mov
nop
fist
mov
fistp
xlat
xchg
adc
inc
bound
push
ss
dec
or
add
rcl
jmp
dec
repz
fwait
push
or
push
fisub
xor
xor
mov
jp
fwait
es
inc
add
pushf
scas
cmp
ins
clc
or
mov
dec
frndint
ins
adc
push
add
gs
push
ret
aaa
mov
push
es
pop
sub
aad
cmp
out
and
and
ja
inc
arpl
fs
out
inc
xor
add
data16
add
inc
xchg
loop
sbb
cmp
mov
rcl
lahf
dec
mov
cmps
pusha
adc
dec
imul
cmp
and
leave
xchg
inc
cmp
add
pop
sub
mov
pushf
or
and
rol
into
es
mov
shl
test
rcr
sbb
fwait
repz
sbb
(bad)
in
mov
sahf
push
add
mov
stos
adc
or
mov
daa
xchg
add
or
xor
pop
fwait
std
loop
loop
shl
imul
ds
sbb
sbb
xchg
and
mov
ds
bound
sbb
inc
stos
ja
xlat
mov
and
cmp
xor
pop
aaa
add
pop
and
lock
lahf
inc
(bad)
sub
in
cmp
xchg
data16
scas
int3
or
xor
add
stos
inc
push
fiadd
into
and
xlat
inc
pop
push
test
jecxz
jg
push
cmc
aas
(bad)
cmp
arpl
rol
sbb
push
int
pusha
lds
dec
(bad)
rcl
jmp
mov
pop
(bad)
jp
inc
fild
popa
cmp
lock
in
mov
aas
test
jg
lods
push
adc
sub
in
sbb
hlt
outs
xchg
mov
mov
inc
loope
cmp
ja
movs
shl
inc
pop
push
outs
(bad)
in
inc
sub
call
lds
dec
fdivr
push
push
cmp
sbb
outs
imul
std
and
jg
retf
sti
out
mov
cmc
jge
jp
dec
aam
cmp
inc
in
mov
mov
scas
(bad)
loopne
ins
icebp
popa
bound
add
gs
lahf
ins
lods
pop
je
and
mov
or
aas
push
daa
sub
inc
cmp
and
push
push
xchg
mov
or
and
ret
jecxz
aas
jb
ficom
outs
sahf
sub
loope
sub
imul
out
and
jg
xchg
lods
adc
out
dec
jle
(bad)
add
ds
push
pusha
fwait
enter
(bad)
xlat
xlat
mov
push
pop
iret
(bad)
fcom
mov
in
les
mov
mov
cli
sub
popf
dec
fsubr
mov
std
rol
and
cmps
daa
hlt
jmp
loopne
mov
in
rol
mov
pop
inc
aaa
aad
sbb
mov
cmp
dec
jmp
cs
mov
retf
rcl
mov
cmps
sbb
outs
jae
icebp
mov
adc
call
dec
fs
fistp
adc
cli
mov
mov
cmp
aam
inc
ja
pop
cmps
test
cmp
in
out
clc
jge
arpl
jmp
das
icebp
push
jbe
or
cmp
call
adc
fdivr
pop
div
cmc
call
push
xchg
sub
imul
xchg
mov
int
fucomp
pop
out
lahf
push
mov
and
mov
xchg
mov
popf
jecxz
or
xchg
call
in
push
lock
sbb
repz
out
scas
push
adc
inc
xchg
jle
(bad)
mov
pop
ins
loope
ja
xchg
sub
retf
or
scas
add
jmp
adc
add
jp
mov
jb
and
loope
(bad)
ficomp
mov
ins
aad
or
cdq
and
movs
pop
pop
fcmovnu
xchg
lea
pushf
or
cmp
mov
adc
repnz
fcomip
xor
fs
or
or
push
mov
fcmovb
iret
call
jae
jo
add
jg
sbb
ds
daa
icebp
shl
inc
cdq
ss
data16
stc
cli
sbb
adc
int
bound
add
test
pop
pop
rcl
add
jp
cld
jge
or
aad
sub
sti
sbb
cmps
shl
xor
sbb
ja
adc
mov
push
pop
xor
test
out
or
cwde
add
mov
cmp
daa
jmp
mov
push
xchg
movs
xor
sbb
in
xchg
mov
push
jae
ficom
xor
sub
mul
push
xor
or
and
cmp
test
adc
pop
lahf
jb
adc
jg
mov
pop
into
loop
add
lea
add
lea
jo
mov
cwde
in
mov
adc
xor
add
push
or
sar
in
xor
fiadd
xchg
adc
xlat
imul
push
repnz
cmps
inc
mov
mov
inc
and
test
arpl
inc
lds
icebp
or
es
iret
aaa
xor
daa
inc
fcmovnu
dec
add
mov
les
call
shr
dec
mov
push
(bad)
aad
inc
jb
cmp
xor
mov
pop
jns
fild
jo
adc
mov
popf
sbb
cmps
sti
inc
popf
cmp
xlat
ins
lea
popa
fisubr
adc
or
ds
les
aas
pushf
outs
push
add
adc
cmp
ret
or
inc
mov
mov
ja
rcr
inc
mov
adc
or
js
mov
jg
cmp
push
pop
add
inc
mov
xor
push
sar
aas
aad
std
stos
jnp
mov
enter
and
(bad)
repz
and
retf
call
xchg
xchg
adc
cs
in
iret
repnz
and
jmp
ins
call
lds
jl
jmp
inc
or
call
xor
es
mov
sub
adc
jmp
push
rol
mov
add
ds
sub
test
inc
jle
movs
push
adc
xchg
push
sbb
inc
inc
inc
div
lods
dec
sbb
inc
shr
adc
fsub
sub
frstor
mov
cmp
sub
or
iret
push
xor
adc
or
mov
das
mov
xchg
div
retf
mov
mov
push
sbb
xchg
rol
jnp
loopne
in
dec
icebp
cmp
shl
or
push
lock
sub
loop
xor
addr16
cmp
shl
xchg
dec
mov
fmul
dec
mov
mov
sbb
xor
inc
mov
mov
mov
and
cmp
sub
jmp
jnp
cmp
cli
sbb
cli
stos
sub
imul
fcomp
mov
and
jg
dec
pop
mov
rcr
xchg
mov
mov
inc
or
pop
jecxz
add
inc
fmul
jb
inc
push
faddp
jp
jge
std
add
cmp
sub
add
movs
sahf
mov
and
cmc
jp
fnstenv
pop
aam
aad
pop
arpl
stos
movs
pop
ret
lods
cdq
int3
xchg
jl
push
jp
cwde
addr16
ret
cmp
test
or
pop
mov
je
call
sar
sbb
into
pusha
sub
mov
in
int
sub
inc
mov
int3
scas
loop
retf
cmp
fadd
dec
aas
das
mov
test
sbb
cmp
int3
sbb
fwait
sub
ror
or
adc
(bad)
mov
mov
sbb
mov
ins
xchg
movs
inc
mov
jne
jnp
or
sub
fwait
jl
out
or
repz
in
cdq
int
lock
xchg
xchg
mov
repnz
mov
out
adc
pop
cmp
mov
mov
jle
or
xchg
mov
dec
mov
mov
imul
retf
add
cmp
cmp
push
sar
xsha1
cmps
push
and
xchg
ins
inc
jns
sub
mov
scas
out
xchg
mov
xchg
push
dec
imul
pop
pusha
movs
adc
sub
cmp
mov
mov
push
mov
jae
inc
pushf
dec
into
es
dec
das
int3
popa
dec
jae
call
mov
imul
(bad)
jp
push
add
sbb
std
lds
adc
imul
fs
loope
in
push
jmp
lods
jb
xor
jge
icebp
or
push
push
xchg
iret
div
les
sti
or
add
cmp
mov
jmp
out
pusha
mov
les
mov
push
push
(bad)
jecxz
lods
test
inc
jge
adc
dec
out
sbb
imul
adc
je
fisttp
mov
xchg
and
arpl
mov
push
xchg
mov
rol
inc
sbb
das
push
push
sub
stos
mov
push
in
imul
shl
repnz
retf
lods
xor
push
push
dec
mov
rcr
or
test
(bad)
xlat
ja
jmp
fs
daa
cld
idiv
jmp
add
fbstp
(bad)
pop
(bad)
or
jmp
adc
cmps
push
cmps
ficom
sti
sar
hlt
jo
mov
adc
push
test
stos
and
lods
mov
dec
sub
push
sbb
sub
mov
cmp
or
adc
ret
push
push
add
pop
in
out
inc
sbb
push
aam
pushf
xor
jne
nop
sub
mov
inc
jbe
in
xchg
jl
inc
sbb
pop
cdq
cli
pop
lds
xchg
pop
cli
loopne
inc
add
mov
inc
in
add
sbb
and
(bad)
ret
popf
rcr
out
adc
mov
int
loop
ds
loope
jmp
test
shl
fst
inc
daa
mov
hlt
imul
dec
movs
ja
imul
xor
inc
xchg
sub
pop
(bad)
movs
test
stos
gs
cmp
adc
and
movs
inc
std
add
mov
inc
or
xor
sbb
(bad)
mov
jmp
add
jno
jns
rcr
pop
add
sub
cmp
xlat
sub
or
pop
push
outs
cs
push
jae
in
shl
jmp
sub
mov
cmp
retf
push
aam
jo
ins
inc
and
adc
test
ins
inc
cmp
cmp
inc
retf
fisttp
xlat
or
dec
les
std
loope
(bad)
out
in
(bad)
hlt
mov
pop
cmp
iret
jp
push
sbb
loopne
cmps
push
in
inc
sub
idiv
push
push
add
dec
pop
cmps
push
shl
sti
fisttp
call
xlat
xchg
jmp
mov
push
dec
rcr
retf
cmp
or
imul
pop
jecxz
jmp
jns
jnp
mov
xchg
fist
sub
(bad)
mov
jo
add
jg
fcom
test
mov
xchg
popf
loopne
mov
adc
shl
jnp
jmp
or
push
add
or
jg
into
inc
xor
test
aaa
xlat
jne
adc
sbb
add
out
aas
xchg
pop
fcom
xchg
ror
cmps
fldenv
and
jecxz
mov
leave
call
jmp
ror
fdivr
xor
xor
mov
into
sar
cmc
icebp
jle
pop
popa
and
cs
cmp
adc
and
(bad)
aam
sub
lods
adc
mov
daa
lds
or
or
xor
xor
popa
lods
cmps
clc
mov
cmp
bsr
mov
sahf
sub
scas
xor
ss
in
sbb
scas
rcl
sti
push
cmp
in
cmps
jg
push
add
sub
bound
push
stos
dec
dec
pop
gs
into
(bad)
pavgb
shl
sbb
fbstp
push
mov
in
retf
enter
xchg
imul
sahf
mov
daa
rcl
add
test
movs
lahf
mov
and
arpl
lock
adc
and
mov
lahf
mov
imul
inc
es
cmp
dec
(bad)
mov
or
jecxz
xor
pop
test
fbstp
mov
stos
adc
mov
cs
retf
and
je
gs
xchg
adc
movs
or
sbb
pop
sub
aad
sti
xor
inc
mov
popa
pop
cmp
xchg
rcr
dec
mov
mov
fidiv
out
sub
call
jno
jno
sub
jno
sbb
sub
mov
mov
inc
cmps
push
(bad)
scas
xchg
pop
pushw
add
ret
repz
(bad)
xlat
add
mov
inc
iret
fnsave
lock
pop
jo
cmps
ja
addr16
stmxcsr
sub
jp
cmp
stos
pop
js
sub
test
mov
xor
sub
or
mov
cmp
enter
shl
cmp
xchg
(bad)
mov
fwait
enter
pop
sub
push
xor
aam
popa
add
and
mov
fdiv
pusha
int
or
or
xlat
leave
inc
pmulhuw
push
lahf
cmp
fimul
jecxz
call
xchg
fwait
inc
in
xchg
movs
sbb
(bad)
out
fsub
in
out
adc
push
das
fstp
and
icebp
popf
fisubr
push
cdq
xchg
mov
or
dec
into
sti
xor
cmp
mov
js
or
and
dec
jge
and
xchg
iret
xor
mov
add
adc
sub
ja
fstp
scas
pusha
jb
stos
cmp
cmps
jmp
pmulhuw
cmc
or
stos
(bad)
imul
(bad)
pop
xchg
data16
cmp
stos
xlat
dec
add
dec
xor
lods
in
push
rcr
ins
test
lahf
mov
jno
cli
dec
(bad)
mov
ret
stos
scas
sbb
(bad)
inc
jbe
fwait
mov
ins
inc
xor
sub
out
push
in
loopne
add
jmp
mov
xchg
test
cmps
cld
ds
mov
out
xchg
xchg
aaa
or
popf
hlt
pop
in
cmp
sbb
repz
inc
fdivr
xchg
cmp
push
pop
inc
outs
stos
movs
dec
pop
pop
out
or
pop
ss
cmp
ins
js
adc
seta
cmps
adc
stc
xchg
push
pop
mov
lahf
aam
out
push
cmps
je
jmp
imul
push
repnz
(bad)
cld
in
cmps
in
je
push
dec
cdq
jo
mov
int3
aas
fiadd
daa
fdivr
repnz
fs
pop
fidiv
cmc
inc
pop
das
es
and
cwde
test
push
jmp
stos
pop
jp
int
dec
neg
jo
sub
adc
mov
mov
push
call
outs
mov
or
mov
mov
ins
xchg
jns
(bad)
scas
sbb
dec
lea
mov
stos
loopne
or
cmc
inc
mov
(bad)
sti
mov
jne
pushf
in
mov
inc
push
in
daa
or
in
dec
(bad)
mov
xor
xor
cmps
lods
xor
sbb
xor
shl
ficom
dec
mov
test
inc
fld
push
pop
(bad)
ficom
scas
xchg
push
leave
js
ds
mov
mov
std
arpl
cmps
call
mov
push
pop
pop
loop
retf
push
cli
adc
push
mov
and
cld
add
jmp
ins
jmp
repnz
neg
ins
ds
(bad)
neg
stc
mov
mov
mov
xchg
imul
retf
mov
sbb
mov
jns
jbe
mov
add
sahf
mov
jmp
push
mov
xchg
add
or
mov
shl
(bad)
cmp
sbb
imul
mov
pushf
mov
xchg
mov
nop
nop
imul
sar
jnp
inc
or
push
fdivr
arpl
dec
and
xor
push
(bad)
mov
dec
shl
lock
pop
push
mov
rcr
addr16
sar
mov
sub
retf
dec
cli
daa
cli
add
loop
mov
push
pop
xchg
jae
add
ffree
inc
mov
lods
js
mov
add
cmps
add
aaa
dec
mov
mov
sahf
test
popa
xor
test
mov
jl
jb
lock
lods
mov
cmp
and
push
inc
or
add
call
adc
sahf
xor
cwde
or
pop
inc
test
out
add
repz
push
inc
enter
fs
or
fild
inc
mov
push
aaa
fisub
adc
es
sub
dec
mov
mov
ror
retf
sbb
in
jb
pop
pop
dec
add
loop
fild
jge
mov
enter
outs
or
fild
(bad)
mov
in
sub
inc
ss
or
(bad)
ficom
(bad)
lahf
mov
mov
stos
loope
and
aas
add
mov
cmp
pop
scas
neg
pextrw
adc
rcr
(bad)
mov
imul
jne
push
leave
daa
or
imul
xchg
ret
xchg
mov
lds
sar
mov
adc
sbb
das
xchg
or
pop
xor
jnp
xchg
sbb
inc
inc
fdivr
inc
jmp
or
and
mov
jnp
data16
cmp
mov
out
std
andnps
movs
aam
ins
loop
add
scas
sbb
inc
pop
fcmovne
ins
add
cld
(bad)
xchg
repz
pushf
add
xchg
scas
call
outs
adc
test
sti
inc
xor
cwde
or
xchg
pcmpeqw
xor
sbb
js
mov
xor
aaa
cmp
adc
or
sahf
cdq
or
cs
outs
inc
ret
out
pop
mov
ss
fnsave
xchg
xchg
or
popf
stos
mov
ja
pop
mov
(bad)
jp
push
ss
into
push
xchg
pop
clc
imul
pop
in
jge
jl
cmp
sar
add
jo
xchg
es
aas
push
mov
mov
loop
pop
cwde
or
dec
fnstcw
sahf
jne
sbb
lods
fiadd
xchg
fldenv
imul
lods
pop
xchg
jecxz
mul
cli
add
push
dec
ret
mov
mov
test
or
push
ret
lods
jg
stc
ret
addr16
xchg
inc
dec
movs
jle
jecxz
nop
loop
sbb
adc
cmp
xor
sub
lea
sub
std
fwait
push
xchg
cmp
mov
jns
in
popf
(bad)
icebp
pop
fld
inc
and
scas
add
push
lods
ja
aas
sub
mov
(bad)
adc
ds
movs
aaa
ins
pop
xchg
std
cmps
mov
es
sub
nop
pextrw
div
ins
and
mov
data16
xchg
adc
push
out
jne
inc
adc
jl
mov
jbe
call
cdq
out
cdq
sbb
dec
xor
loopne
xor
xor
cmp
es
mov
popf
inc
xor
jb
and
cmps
mov
cmps
outs
adc
xor
(bad)
or
loop
xchg
add
push
pusha
shl
cmp
push
xor
jnp
adc
sub
adc
pop
push
push
in
jbe
mov
and
dec
pop
and
fcmove
sahf
stos
in
xchg
stos
out
push
gs
xlat
mov
ja
inc
inc
js
and
movs
sub
jl
shl
push
inc
loope
sar
daa
mov
icebp
out
imul
cwde
mov
cmc
scas
nop
lods
stc
es
rcl
xchg
movs
icebp
and
popa
ja
repz
lock
push
ss
aaa
inc
sub
or
rcr
out
call
imul
dec
sub
pop
sar
iret
cmp
fcom
jno
xor
cmp
je
dec
and
mov
(bad)
jmp
pop
scas
mov
xchg
ss
jcxz
icebp
jp
daa
aam
xlat
pop
sub
aaa
and
xor
push
push
or
unpcklps
jp
cmp
mov
or
dec
sub
jmp
adc
fdiv
push
in
sbb
sbb
addr16
unpckhps
add
dec
in
les
push
sahf
ds
outs
cmc
das
pop
mov
aam
retf
aas
ficomp
and
or
xchg
cmps
mov
pop
mov
sub
movs
mov
add
jmp
movs
push
pop
pop
xchg
ror
xchg
lods
mov
xor
jb
fisttp
inc
je
scas
aas
ror
cdq
inc
mov
pop
sub
(bad)
jo
je
mov
mov
lock
mov
rcl
fdivr
into
into
ss
xor
lods
mov
aam
in
lds
mov
in
xchg
popa
fisubr
sub
mov
sahf
ins
push
loop
sub
dec
ins
nop
imul
mov
dec
icebp
fsubr
cdq
push
push
xor
and
repz
push
cmps
inc
rcr
xor
dec
(bad)
int3
rcr
mov
pusha
into
or
sub
pop
dec
sbb
cmps
adc
inc
out
movs
mov
ins
aas
aas
(bad)
xlat
jmp
cmp
sub
dec
cwde
ins
sbb
add
je
add
daa
in
cli
mov
ret
inc
cmps
add
add
daa
jle
jle
les
hlt
test
cmp
call
and
xchg
ret
leave
sar
rol
jle
push
mov
push
data16
xor
mov
int3
push
hlt
jp
add
jae
sbb
xor
mov
adc
push
in
and
lods
aad
mov
mov
push
repnz
in
xchg
rcl
es
sahf
fbstp
stos
stos
fild
xchg
add
in
cmp
aam
rcl
cwde
xchg
(bad)
movzx
imul
dec
cdq
imul
lea
and
pop
mov
test
out
jb
(bad)
out
inc
sub
jae
dec
outs
lahf
and
mov
js
fstp
xchg
test
xchg
dec
add
add
adc
ds
mov
pop
std
loopne
mov
arpl
push
mov
div
test
mov
rol
cli
add
pop
mov
imul
and
pop
ss
sub
shl
mov
cdq
shl
xor
fs
cmp
inc
xchg
xchg
sbb
int3
cmp
cmp
jle
ss
inc
or
repnz
sbb
jle
mov
cmp
xchg
lds
push
mov
cdq
stos
mov
push
test
push
out
or
fcom
dec
and
xchg
jge
fcom
out
cs
adc
inc
sub
data16
mov
push
aad
loop
rol
jb
mov
loope
dec
pop
xor
inc
jecxz
out
and
lods
popa
ins
ret
add
jl
mov
call
int3
dec
pop
daa
jae
loopne
cmp
jl
sub
lods
cmps
shl
aam
inc
shl
div
xchg
dec
scas
rcl
lock
stos
in
ds
in
cmc
adc
nop
cld
ins
xor
cmps
out
push
sbb
bound
sub
in
call
ins
jo
mov
mov
outs
or
sbb
out
aad
cmp
jmp
mov
ja
call
and
cmp
mov
xor
(bad)
shl
pop
mov
xor
push
ret
ret
(bad)
xor
mov
jmp
lock
adc
(bad)
aam
pop
in
pop
test
sti
stos
shl
cwde
pop
mov
adc
cmps
add
dec
push
or
mov
xor
inc
jo
inc
push
and
pop
mov
pop
jnp
dec
stos
(bad)
adc
pminsw
repnz
xor
xor
jbe
outs
js
inc
and
pushf
imul
adc
lods
aad
sahf
lods
ins
lock
xchg
cmp
mov
(bad)
addr16
pop
das
xchg
inc
inc
dec
xchg
mov
sahf
lds
mov
jmp
mov
ins
adc
mov
outs
out
cmp
pop
ss
vmovntpd
xor
xchg
xchg
push
(bad)
adc
clc
jno
fcmovbe
pop
cmp
pop
ins
inc
pop
das
sbb
repnz
cmp
xchg
out
popf
pop
imul
sub
push
outs
fimul
add
daa
stos
rcl
ss
xchg
out
sti
mov
and
movs
(bad)
js
ins
push
inc
js
push
jbe
fdiv
inc
icebp
push
push
mov
or
out
ins
sub
test
test
dec
test
mov
jae
xchg
hlt
push
add
sub
adc
dec
cmp
test
int
popf
xor
jmp
test
mov
xchg
dec
leave
int3
mov
das
in
add
call
jle
mov
icebp
sahf
push
into
and
push
in
or
ins
(bad)
clc
pusha
adc
jns
dec
xor
mov
mov
cli
mov
test
jge
and
and
lds
arpl
mul
push
inc
inc
outs
imul
add
and
out
mov
pop
repz
fcmovu
cmc
int
cmp
ds
adc
mov
inc
mov
and
sbb
pushf
add
test
pop
fild
leave
les
je
in
pop
add
popf
sbb
mov
ds
fwait
es
push
mov
outs
dec
imul
test
cmp
adc
inc
add
adc
xor
fwait
xchg
pop
xor
xchg
push
inc
loop
xor
mov
fnstenv
int3
(bad)
mov
cmps
inc
sub
popa
mov
rcl
je
aam
fiadd
mov
(bad)
outs
inc
adc
and
test
mov
mov
fwait
jbe
movs
idiv
adc
push
mov
jo
outs
jno
(bad)
(bad)
sub
mov
clc
(bad)
les
lea
mov
jns
loope
in
jne
loopne
jo
in
mov
dec
retf
and
inc
scas
dec
xchg
and
or
or
add
mov
pop
adc
mov
pop
xchg
cld
jb
ror
jmp
fild
xor
xchg
jb
mov
mov
mov
in
pusha
scas
cmp
and
mov
push
ja
call
adc
repz
fldcw
mov
mov
sub
cmp
cmp
loope
jecxz
add
push
push
idiv
or
dec
push
lahf
jge
and
cmps
adc
int
js
test
lds
mov
cmps
jl
cmp
add
sbb
mov
add
adc
jae
cmp
(bad)
into
fistp
sbb
mov
or
mov
pop
push
jnp
sahf
pop
inc
ins
mov
inc
jb
mov
and
mov
movs
jbe
ss
dec
pop
das
outs
dec
adc
stc
or
mov
pop
movs
repnz
daa
adc
add
cmp
jmp
xchg
mov
or
pop
cwde
sbb
dec
pop
test
sbb
jno
das
xchg
dec
jb
mul
xor
ss
cmps
shl
adc
xor
cs
ret
cli
xor
enter
cmp
iret
mov
add
cwde
jo
sbb
cli
mov
lock
push
shl
mov
push
fdivr
adc
out
call
xor
jmp
in
fimul
xor
(bad)
(bad)
sub
test
dec
retf
ins
iret
out
xchg
loope
and
iret
in
(bad)
call
int3
mov
jmp
fmul
test
std
(bad)
sar
test
mov
fisttp
rcl
mov
test
mov
lahf
mov
mov
sub
ja
loope
mov
out
add
inc
mov
movs
in
push
cmc
jb
lea
iret
sbb
push
retf
add
cmp
addr16
fsub
and
into
in
mov
add
and
or
and
push
or
add
xor
xchg
cwde
cmp
aam
push
or
cmps
out
arpl
ins
hlt
in
and
xchg
cmp
and
or
adc
std
push
xor
scas
mov
dec
je
inc
enter
add
test
jno
xlat
add
inc
stc
gs
int3
aas
fild
out
gs
adc
mov
pop
add
sub
adc
data16
or
enter
mov
and
xlat
cs
mov
sub
lahf
sahf
sub
movs
lods
and
(bad)
in
ror
ss
arpl
int
shr
push
cwde
shr
xor
push
imul
sbb
mov
inc
push
ror
push
cmp
sti
in
xor
push
ss
fwait
sbb
push
aad
aam
loopne
mov
mov
and
push
sahf
push
mov
movs
pop
xchg
jle
and
cmp
popf
ss
xor
daa
mov
push
popf
std
mov
xchg
xor
retf
test
arpl
scas
imul
movs
fistp
daa
xor
scas
adc
push
mov
xchg
jb
mov
es
scas
ins
mov
adc
or
xor
fucomi
fsub
(bad)
enter
inc
mov
ja
cmp
sbb
js
jmp
lods
lahf
mov
and
nop
and
cld
push
inc
xchg
retf
mov
mov
xor
(bad)
(bad)
test
stos
mov
fst
dec
sti
fneni(8087
test
pop
pop
inc
inc
or
arpl
les
or
xchg
jle
data16
mov
and
in
xchg
std
js
lea
lds
out
lods
push
ins
iret
mov
fisttp
push
scas
dec
or
lds
cmps
jg
xchg
dec
cmp
pop
inc
stos
lahf
mov
xchg
xchg
xchg
mov
stos
arpl
cmp
shl
xor
push
outs
push
out
hlt
jge
out
adc
and
lahf
es
adc
pop
scas
test
adc
xchg
mov
dec
dec
popf
cwde
inc
jg
loopne
mov
je
push
faddp
fdiv
cld
jbe
loopne
jg
sahf
cmp
retf
(bad)
rcr
das
rol
ins
mov
fst
inc
ret
sub
icebp
xor
icebp
pusha
(bad)
xchg
xlat
(bad)
repz
sbb
or
push
xor
jge
mov
xor
add
push
imul
mov
xor
scas
mov
push
fbstp
mov
lods
aaa
aas
mov
test
cmp
jecxz
and
out
xor
mov
bound
stc
fnstcw
mov
test
clc
es
mov
fwait
mov
add
ficom
jl
jp
jge
sub
data16
mov
lods
into
dec
and
xchg
inc
in
inc
out
push
push
(bad)
add
mov
repnz
pushf
fbstp
fs
inc
fist
mov
sbb
ja
pop
jp
mov
sub
rcl
push
or
in
adc
sub
scas
fcom
ficomp
out
pop
leave
inc
jle
mov
dec
xlat
push
repnz
jg
and
dec
dec
aad
mov
pop
addr16
and
fst
inc
xor
dec
out
xchg
ins
dec
(bad)
std
out
ja
cld
cmps
popf
and
or
call
cmp
icebp
add
(bad)
inc
fldenv
jb
mov
jnp
call
(bad)
div
dec
movs
sub
psubusb
les
mov
aam
je
movs
pop
mov
cmc
xchg
mov
in
xor
in
xchg
mov
mov
xor
push
mov
in
ffreep
fmul
cmp
cmps
push
inc
icebp
pop
fist
icebp
(bad)
aam
and
mov
mov
jp
in
jp
ins
inc
mov
mov
adc
sbb
fnstcw
add
iret
fsub
or
mov
jo
ss
xchg
adc
(bad)
sub
test
jbe
pop
movs
sub
mov
mov
or
or
jne
sub
call
mov
xchg
cmp
out
fsubr
aad
mov
retf
rol
icebp
mov
in
cmp
and
stc
pop
adc
mov
ficom
stos
push
call
pop
mov
pop
sbb
push
or
sbb
push
imul
and
cmp
(bad)
shr
push
loope
mov
ret
push
cmc
aaa
dec
adc
xchg
stc
xchg
(bad)
call
jae
xchg
inc
aaa
in
shr
sar
das
xchg
popa
dec
jmp
fisub
jnp
cmp
push
pop
mov
pop
fidiv
inc
add
and
xchg
sub
arpl
adc
dec
out
hlt
sub
pop
dec
idiv
mov
mov
push
mov
push
gs
leave
xchg
jo
cmps
or
xor
and
(bad)
mov
out
add
imul
fcmove
sub
push
adc
test
loopne
push
and
mov
adc
in
fcmovu
jne
stc
push
jle
mul
inc
in
shr
(bad)
xchg
and
loope
in
fbld
mov
aaa
and
and
jno
xor
adc
call
cmp
sub
push
push
imul
sbb
or
mov
outs
jp
iret
sub
and
inc
mov
(bad)
adc
mov
jns
imul
popa
pop
jmp
sub
(bad)
pop
pop
adc
dec
xor
fbstp
inc
in
(bad)
push
imul
test
xor
sbb
pop
xor
mov
mov
xor
pushf
ret
repz
dec
je
jne
pop
adc
sbb
mov
xchg
xchg
and
out
xchg
js
sti
add
push
iret
std
or
push
or
mov
mov
xor
jp
sub
mov
dec
sub
scas
xchg
adc
mov
iret
or
pushf
test
pop
push
xchg
fnsave
mov
cmp
xchg
jmp
xchg
cmps
dec
popf
or
jmp
push
jno
clc
nop
xor
sub
adc
push
ins
mov
sbb
push
arpl
cs
xlat
repz
jle
jnp
ret
mov
push
in
ret
loopne
inc
cdq
rcr
retf
inc
out
mov
mov
jle
pop
xor
inc
popf
add
popf
fiadd
stc
push
push
popa
and
mov
enter
mov
jg
adc
in
ror
jno
sti
gs
dec
dec
cdq
cmp
push
mov
push
in
std
fimul
adc
adc
cld
rcl
xchg
pusha
fdivr
out
xchg
fs
aas
jbe
add
or
je
test
jle
movs
movs
pop
mov
(bad)
jle
push
dec
inc
push
xchg
push
push
je
fstp
loop
dec
xchg
stc
stos
popf
and
ffree
lds
movs
push
mov
jns
in
daa
dec
dec
stc
xchg
repz
jb
mov
ja
jae
pop
cmp
xchg
cmp
xchg
sahf
test
or
sbb
adc
cmp
lds
scas
pop
push
pop
loopne
int
addr16
dec
out
lock
and
mov
out
(bad)
aad
cmc
loopne
jb
test
push
aaa
dec
out
aad
and
cmp
stos
jl
(bad)
mov
mov
dec
(bad)
xchg
inc
sub
push
ins
outs
leave
push
scas
bound
jecxz
stc
adc
cmp
xor
dec
enter
fisttp
fbstp
in
fwait
in
outs
push
out
push
ret
sub
std
push
pop
repz
jns
stc
aad
jb
sbb
popa
mov
push
rcl
test
mov
rol
hlt
jns
cwde
in
dec
loopne
retf
test
les
(bad)
pop
(bad)
adc
mov
aam
xor
fs
ficom
adc
dec
pop
movs
xor
or
inc
jl
daa
adc
call
add
xor
frstor
push
popa
jmp
rcr
or
pop
adc
fistp
sar
ds
push
jb
cmps
mov
sbb
mov
xchg
mov
mov
dec
daa
xor
inc
cmp
test
nop
adc
mov
xchg
jns
data16
fstp
test
gs
sbb
shr
gs
mov
lds
outs
fwait
cmp
out
sahf
stc
add
xchg
jle
fisttp
push
cdq
push
xchg
pop
jmp
mov
pop
int
loopne
hlt
mov
inc
(bad)
jle
(bad)
or
in
nop
pushf
cld
inc
inc
sub
mov
call
mov
retf
mov
fisubr
aam
adc
cmp
mov
cmc
call
and
pusha
bound
movs
lods
lods
inc
sbb
jae
xor
lock
test
xchg
xor
xchg
dec
nop
jns
mov
jmp
dec
add
sub
xchg
cli
(bad)
cmps
jecxz
out
sub
and
sahf
xcrypt-cfb
cmps
cmps
test
cwde
dec
pop
sbb
xchg
mov
das
xchg
and
arpl
lock
adc
adc
shl
inc
and
add
mov
or
sbb
and
enter
fdiv
mov
jp
inc
mov
mov
stos
jecxz
test
int
and
sar
pop
mov
sub
dec
retw
xor
punpcklbw
fldln2
nop
sub
lods
ins
jle
xlat
test
mov
sbb
call
pop
and
mov
lods
adc
rol
inc
mov
outs
in
adc
mov
mov
lds
nop
js
fs
cmp
mov
loop
jge
pop
ret
mov
(bad)
jmp
pusha
push
stos
pushf
push
sahf
xor
fadd
push
aaa
outs
repnz
cmp
cdq
das
repnz
or
dec
jmp
and
lahf
arpl
jne
aad
inc
and
adc
not
sbb
fwait
mul
dec
xlat
call
das
je
test
cmps
adc
mov
mov
cmp
(bad)
mov
fxch
and
adc
adc
mov
pop
leave
fs
jecxz
movs
sbb
fldenv
rcl
fcomi
cmp
retf
retf
pop
inc
mov
sub
sti
mov
shr
lock
or
enter
(bad)
in
pop
js
lock
push
test
mov
mov
ins
push
aad
xchg
inc
cmc
pop
ins
test
in
outs
out
and
in
shl
stc
ds
adc
jae
ss
mov
fimul
sbb
ja
mov
mov
cld
mov
aaa
mov
fld
in
ins
ret
in
rcl
mov
xchg
stc
pop
sbb
push
pop
cdq
mov
xchg
dec
test
aad
adc
arpl
test
add
(bad)
inc
clc
push
(bad)
in
push
xchg
jne
or
mov
rol
xor
push
sbb
lea
inc
int
mov
xor
ret
les
call
and
dec
fst
or
sub
outs
sar
lahf
popf
push
inc
stos
xlat
lea
mov
push
pusha
(bad)
mov
mov
movs
push
stos
cs
xor
mov
pop
and
add
loop
int
push
sub
js
mov
xchg
jle
adc
sahf
jmp
cdq
in
mov
cmp
test
out
gs
popf
clc
nop
(bad)
je
cmp
cmp
fs
test
mov
test
rcl
shl
pop
mov
out
jp
push
inc
xlat
cli
adc
sbb
sbb
fdivp
addr16
dec
push
popf
mov
popf
loopne
aad
pushf
pop
cmp
aaa
mov
xor
loopne
pop
mov
fwait
mov
test
sbb
sub
arpl
jo
mov
cmps
jmp
jb
sbb
xor
mov
xchg
(bad)
ret
out
pop
jp
icebp
mov
or
sbb
int
cmp
jns
mov
mov
(bad)
dec
retf
push
dec
mov
(bad)
pop
mov
add
stc
pop
mov
dec
xchg
out
or
xchg
inc
outs
hlt
gs
retf
jne
xchg
mov
xchg
or
icebp
mov
push
push
and
cmp
xchg
ss
call
dec
pop
jp
scas
ins
and
mov
jns
popf
fisttp
pushf
std
aad
push
shr
test
xchg
int
lods
jl
movs
jecxz
fild
mov
cmps
fiadd
cmp
es
mov
xchg
and
stos
test
test
(bad)
add
mov
out
jnp
cmps
div
xlat
mov
call
cli
xor
ret
fisubr
pop
and
lods
rcr
(bad)
neg
adc
mov
pop
leave
jp
in
retf
clc
int3
repnz
add
arpl
mov
test
dec
dec
(bad)
aas
pop
test
and
cdq
mov
fwait
xchg
mov
jne
repz
sub
into
pop
xchg
jge
push
push
lea
pop
adc
pop
and
je
fsubr
std
cmp
lods
jecxz
(bad)
retf
mov
mov
mov
imul
and
dec
and
xor
int
aaa
pop
and
xchg
nop
into
stos
mov
mov
dec
adc
cmp
or
sub
mov
imul
jg
mov
fdiv
push
in
ror
or
neg
test
and
wrmsr
mov
jmp
pop
xchg
xlat
xor
and
inc
jne
js
ins
mov
xchg
push
(bad)
bound
cs
ja
ds
jmp
(bad)
mov
push
outs
xchg
imul
das
fsub
sbb
sbb
loopne
iret
inc
push
mov
mov
lock
xor
pusha
jbe
call
mov
(bad)
jg
out
stos
arpl
ins
call
test
mul
sti
bound
mov
pop
in
mov
popa
dec
les
daa
jno
int
pop
lock
or
data16
dec
lea
mov
sbb
test
ret
inc
xchg
ret
xor
shl
push
mov
push
fst
loopne
dec
jecxz
xchg
xor
cmp
mov
sbb
mov
cmps
(bad)
out
(bad)
loope
(bad)
call
xchg
push
repz
jno
lahf
lahf
pop
push
lock
mov
jne
retf
repnz
jmp
push
or
repz
inc
lahf
and
retf
ror
and
add
cwde
cld
inc
xchg
pop
daa
dec
mov
fs
fisttp
fistp
fistp
lods
enter
clc
mov
(bad)
push
es
and
fild
add
out
ficom
mov
xchg
cmp
jbe
enter
or
adc
mov
sbb
cld
repnz
dec
bound
cmp
popa
xor
popa
cs
in
retf
movs
popa
out
fild
sbb
jg
loop
rol
add
mov
repnz
rcl
mov
fstp
loop
aam
cmc
in
sub
test
retf
in
arpl
dec
retf
inc
cmp
nop
test
adc
sub
and
test
daa
mov
dec
(bad)
popa
jmp
jecxz
push
mov
pop
jb
es
retf
sbb
mov
or
aas
inc
pushf
leave
xor
idiv
or
or
(bad)
leave
pop
pop
jo
mov
jge
mov
inc
push
dec
push
inc
retf
mov
loope
out
aad
mov
call
pop
push
push
aaa
cli
or
mov
mov
je
fbstp
dec
dec
cmp
shl
repnz
stos
imul
hlt
xchg
mov
add
clc
xchg
inc
xchg
fcomp
ret
inc
dec
mov
jge
pop
aam
fprem
push
iret
cs
lds
or
data16
mov
stos
lods
sbb
retf
mov
sub
inc
call
jo
int3
out
dec
jmp
jle
sub
mov
stc
es
fcmovnu
adc
into
sbb
mov
ins
js
jbe
jg
call
imul
pop
fldenv
push
xor
pusha
enter
arpl
fbstp
mov
push
mov
pop
mov
in
sub
cli
adc
xlat
iret
cli
les
xchg
ret
lods
bound
mov
push
popa
push
xor
addr16
lods
or
jle
daa
out
jmp
mov
mov
xor
cld
cmc
push
movs
adc
sub
inc
jge
shr
into
jg
and
scas
fadd
mov
sbb
movhps
inc
ins
js
aaa
ficomp
dec
dec
sbb
sbb
out
rcl
psrad
adc
scas
(bad)
retf
movs
mov
mov
and
jb
outs
inc
inc
adc
mov
cdq
jmp
mov
pop
or
fwait
cmp
sbb
outs
test
xchg
push
jle
sar
les
(bad)
mov
jmp
aaa
push
(bad)
add
pop
retf
stc
inc
mov
shl
xchg
sar
ret
cmps
aad
stos
scas
adc
sti
sti
cdq
cmp
popf
xor
mov
and
fisttp
repnz
xor
movs
test
in
pop
into
mov
jnp
jge
add
jp
ins
test
inc
adc
shr
sub
add
xor
xchg
into
stc
xchg
mov
lods
pushf
push
fadd
push
out
cwde
xchg
xor
movs
data16
mov
stos
popa
push
add
add
sub
cmps
add
in
fsqrt
vpunpckhbw
push
xchg
cwde
xchg
mov
arpl
cmp
mov
pusha
js
pusha
popa
cmp
jecxz
mov
fwait
pop
out
out
jne
jbe
xchg
(bad)
add
movs
(bad)
mov
jae
xchg
and
shl
(bad)
or
mov
mov
dec
mov
mov
(bad)
das
xchg
mov
push
jno
sub
nop
cmps
cs
sub
dec
xchg
movs
mov
inc
sub
mov
shl
aaa
mov
movs
mov
pop
icebp
cmp
rcl
ins
add
adc
test
fbstp
and
xor
pop
ins
je
mov
push
jp
and
sub
clc
adc
jo
(bad)
push
data16
mov
mov
cmp
imul
pop
cmp
call
inc
add
inc
push
out
sbb
cmc
cdq
mov
dec
test
cmps
gs
sub
mov
es
rcl
push
icebp
push
in
xchg
cmps
dec
jae
add
aam
adc
pusha
out
fdivr
clc
mov
cmp
bt
cmp
int
lock
cmp
ds
push
pushf
mov
in
das
(bad)
adc
stc
or
mov
xor
mov
mov
inc
test
jo
mov
loope
fldl2t
sbb
add
or
sbb
push
mov
enter
aad
pop
xchg
mov
push
sub
(bad)
cmp
or
rcr
sub
repz
dec
pop
mov
mov
sbb
lock
jmp
lds
loop
addr16
xchg
push
mov
add
pusha
scas
dec
sub
rol
repnz
mov
leave
imul
inc
fisttp
or
mov
xchg
sbb
mov
dec
jge
xor
adc
mov
adc
sar
(bad)
pop
(bad)
sbb
pop
call
out
mov
les
or
stos
icebp
push
rcl
fcmovnb
jbe
mov
push
fsub
and
mov
xor
out
mov
ja
(bad)
push
lods
stos
mov
ret
imul
push
addr16
fstp
je
adc
popa
or
(bad)
fwait
jmp
bound
sbb
dec
cmp
sbb
sub
sti
xor
lods
ret
pop
xchg
pop
dec
std
(bad)
and
and
xor
imul
adc
push
ins
repnz
gs
addr16
push
js
sub
fld
xor
inc
(bad)
or
outs
xor
sbb
pop
scas
mov
iret
xor
fcmovnbe
movs
sub
mov
pop
sbb
jb
cmps
dec
inc
sbb
cwde
vsubsd
push
sub
jnp
push
inc
jno
js
pop
mov
mov
std
ds
shl
sbb
iret
gs
xchg
dec
fistp
lods
cmp
push
in
mov
add
inc
outs
sbb
mov
mov
loope
ror
aad
jp
mov
jae
adc
cmp
mov
aad
sub
shl
push
pop
repz
jmp
clc
popa
test
mov
cmps
stos
in
les
mov
sahf
daa
in
outs
popf
adc
jle
imul
add
push
(bad)
mov
shl
jne
clc
inc
repz
adc
cmp
pop
arpl
ret
inc
xchg
movs
add
fistp
jmp
fild
sub
retf
jecxz
into
jmp
inc
ret
push
icebp
xor
pushf
in
inc
mov
ins
daa
in
mov
add
ds
sahf
inc
mov
sbb
mov
and
add
imul
or
jb
sub
mov
fwait
jmp
cmp
jecxz
test
inc
and
fcom
mov
sbb
(bad)
gs
dec
int3
pop
sub
(bad)
xor
or
cmp
push
pop
icebp
add
les
hlt
fld
lods
pusha
mov
dec
xchg
in
imul
cmp
mov
sbb
in
and
test
ret
xor
les
or
bound
xor
out
not
fwait
mov
mov
in
arpl
mov
fdivr
push
push
enter
retf
jp
mov
lahf
(bad)
jmp
in
jle
rcl
ins
cs
daa
fcmovne
inc
retf
sbb
fidivr
jecxz
inc
jg
sub
mov
sub
dec
ins
(bad)
pusha
push
gs
por
xchg
add
cli
(bad)
fptan
fdiv
out
inc
test
and
cwde
mov
pop
out
xor
add
jno
jecxz
fcom
retf
ins
adc
bound
xchg
push
das
pop
push
dec
retf
jmp
scas
sub
pop
in
jl
mov
jns
cmps
jo
mov
push
retf
pop
push
fadd
jns
adc
mov
xor
inc
sbb
pop
sbb
int3
mov
push
jbe
push
adc
mov
dec
(bad)
push
arpl
adc
mov
call
test
fwait
mov
pop
mov
xchg
es
sbb
xor
pop
xchg
xor
pop
out
aaa
mul
mov
cmp
mov
add
mov
mov
add
pop
stos
shr
push
xchg
ins
clc
xor
stc
fcom
mov
ins
push
jecxz
fwait
cmp
or
mov
inc
daa
fist
pop
mov
ror
xchg
push
out
adc
lahf
sub
or
iret
ins
push
push
test
add
sbb
out
shr
xlat
popa
cmp
jae
jecxz
inc
not
pusha
and
ror
aaa
push
xor
pop
test
in
and
mov
vmovsd
into
cli
xchg
(bad)
rol
xchg
mov
or
lea
outs
inc
add
cmp
pop
push
sub
mov
popa
xchg
sub
int
(bad)
mov
leave
sub
mov
pop
mov
test
sub
jnp
out
lahf
xchg
cmp
jne
jo
and
arpl
test
mov
ins
sbb
rcr
and
sahf
mov
push
addr16
xor
adc
repnz
xor
js
ret
xchg
popf
adc
rcr
push
adc
sub
movs
aaa
mov
jbe
(bad)
push
push
outs
pop
mov
and
fs
mov
sub
jmp
inc
test
push
push
push
stc
jo
in
cwde
dec
loope
xor
or
or
and
or
fcomp
mov
add
js
movs
lahf
mov
jl
or
jo
int3
inc
ret
loop
add
loope
dec
dec
add
and
mov
popa
cmc
mov
lea
push
(bad)
aaa
test
sub
out
adc
stos
sbb
pop
mov
jle
pop
mov
nop
inc
sub
dec
add
pop
iret
mov
fst
loop
sub
push
repz
push
fstp
aam
inc
shr
mov
adc
lds
adc
repnz
adc
test
retf
aas
xchg
mov
cmp
loope
in
mov
add
mov
dec
cmp
jmp
jne
add
sub
imul
(bad)
fld
retf
inc
lods
jge
rol
adc
shl
mov
popa
shl
jl
lods
in
xchg
sbb
leave
jae
jmp
xchg
xchg
push
test
nop
jg
push
repz
inc
pop
aam
test
sub
jmp
mov
scas
pop
fisttp
shl
lahf
pop
out
mov
lods
push
out
jl
cwde
lahf
push
cmp
dec
inc
jb
test
dec
mov
or
push
in
cli
mov
jns
ins
test
(bad)
daa
aaa
xchg
loop
push
mov
in
and
xchg
call
mov
jbe
fcomi
add
or
and
fst
mov
mov
rcr
adc
jno
int3
add
mov
jmp
(bad)
out
loop
mov
sbb
jmp
push
mov
outs
inc
movs
pop
jno
cli
loope
sub
push
cmp
nop
and
loope
add
xchg
pop
gs
rol
ret
mov
jecxz
mov
std
lods
call
ja
mov
nop
inc
(bad)
sub
dec
jmp
in
xor
sbb
das
test
sbb
pop
iret
(bad)
xchg
js
jb
mov
addr16
add
push
scas
jge
jae
repz
pop
dec
jmp
sti
movs
sar
dec
mov
xchg
and
test
inc
ret
fwait
gs
or
or
lock
stc
ss
sbb
jns
sbb
mov
into
add
in
(bad)
pop
jmp
sub
in
cdq
ds
push
loopne
sbb
cmp
mov
mov
jmp
push
mov
cdq
sub
adc
jp
movs
jno
mov
fsubrp
mov
sub
popa
xor
and
cmp
xlat
retf
xchg
fwait
les
sahf
(bad)
mov
jmp
inc
in
outs
std
add
inc
jge
fs
bts
cmps
push
test
jb
pop
leave
fwait
or
xor
jp
pop
gs
out
pop
xor
data16
imul
ror
das
and
fsub
push
lea
ins
mov
es
out
and
sbb
cmp
jae
jnp
or
and
outs
xchg
(bad)
(bad)
scas
arpl
lods
adc
cwde
and
mov
nop
mov
pop
cmp
iret
inc
sub
jl
stc
je
fisubr
cld
jg
jne
mov
test
(bad)
call
jg
jb
pop
adc
inc
push
pushf
xor
mov
xchg
lahf
push
jb
jp
jmp
out
dec
cdq
(bad)
sub
mov
xor
arpl
cli
nop
bound
or
sbb
loop
or
xor
push
fsub
mov
imul
mov
outs
dec
adc
fs
adc
mov
popa
js
popf
sbb
sub
into
fimul
fiadd
cld
(bad)
iret
or
aam
cmps
ins
mov
push
mov
in
pushf
repnz
jne
inc
mov
xor
scas
or
cmp
push
sub
ret
jo
xchg
cmp
rcl
inc
adc
in
rcr
lods
cs
xchg
ror
cdq
gs
movs
push
mov
popf
dec
push
xchg
push
or
lods
mov
les
lods
je
pop
or
(bad)
cmp
jne
cs
imul
jg
push
add
(bad)
pop
jb
hlt
neg
mov
mov
mov
ror
test
jbe
int
inc
lods
fwait
xchg
mov
dec
mov
jmp
cmc
mov
not
daa
cli
addr16
jg
fiadd
mov
ud1
cwde
inc
movs
mov
cmc
xchg
inc
std
add
pop
sub
sbb
call
inc
xor
movs
pop
sahf
jbe
sbb
test
inc
xor
jne
ins
(bad)
mov
retf
cmp
jle
or
cmp
or
ret
clc
movs
out
adc
and
cmp
out
jmp
lods
add
rcr
retf
or
sub
sub
not
es
sub
adc
call
jnp
and
lock
sub
pop
or
je
and
adc
sahf
adc
mov
mov
in
sar
sbb
rol
adc
test
mov
mov
mov
out
or
sub
ds
ss
stc
jl
pusha
scas
lods
pop
mov
mul
mov
in
add
(bad)
adc
add
arpl
pop
add
mov
cmp
push
not
cmps
pop
shl
test
xchg
jge
jmp
sub
xor
aad
push
cdq
mov
jae
les
push
ficom
and
call
xchg
inc
cmp
mov
cmp
clc
scas
ins
push
fwait
cmp
cmp
fadd
or
push
das
and
jne
int
out
ret
jmp
in
pop
jb
ins
in
pop
push
dec
jbe
outs
out
cmp
jbe
cdq
or
loop
pop
cld
push
add
xchg
push
js
rcr
dec
adc
out
int3
pop
sub
pop
dec
push
std
les
(bad)
push
sub
adc
lock
int
out
add
pop
xor
mov
xchg
mov
cdq
adc
inc
dec
pop
pop
add
mov
fdiv
xlat
cmp
mov
add
das
xchg
fst
cli
cli
nop
bound
aaa
jno
jl
pop
push
test
movs
jmp
sub
fimul
movs
ficom
sub
mov
add
pushf
pop
(bad)
dec
lods
jl
pushf
jp
mov
shl
int3
jecxz
retf
bound
cmps
imul
fcomip
jno
nop
sub
dec
mov
sti
mov
jg
push
push
js
cs
inc
mov
adc
xor
inc
inc
inc
rcl
(bad)
call
out
dec
stos
push
sbb
aaa
fistp
jp
mov
icebp
pop
sub
daa
shl
push
lods
aad
adc
sbb
dec
xchg
sub
pop
ins
xchg
cmp
iret
data16
in
push
mov
lea
jbe
mov
ds
push
sar
gs
hlt
(bad)
loopne
aam
sahf
mov
ret
outs
cmp
std
int
adc
icebp
jl
and
pop
and
mov
int
aam
outs
sbb
jne
sub
stos
sub
aaa
push
xchg
push
mov
fcom
cmps
or
les
push
push
sbb
inc
jmp
mov
adc
mov
jne
pop
inc
pop
cmp
jnp
push
mov
push
xchg
(bad)
je
in
add
or
sbb
lods
stc
leave
aas
lahf
shl
mov
fild
push
fisttp
mov
nop
gs
sub
imul
js
xchg
fsub
xchg
push
je
(bad)
jmp
imul
mov
mov
test
iret
popf
add
and
jmp
sbb
sar
repz
adc
nop
pusha
ins
fxch
pop
dec
dec
cld
leave
sbb
inc
es
cwde
pop
or
cs
push
sub
push
push
cwde
rol
or
(bad)
add
cmp
aas
popf
stc
inc
loope
pop
mov
repz
inc
and
hlt
daa
add
push
inc
(bad)
mov
inc
mov
pushf
dec
xor
test
ret
sub
loope
mov
movs
scas
repz
add
dec
xchg
into
xchg
xchg
and
cmp
ins
call
mov
inc
(bad)
cdq
mov
rol
dec
cmp
inc
retf
mov
leave
adc
mov
call
xchg
in
mov
ror
mov
cli
mov
call
fwait
mov
icebp
xchg
mov
xor
iret
and
sbb
pusha
inc
cdq
inc
sbb
and
jbe
xchg
call
push
add
pop
mov
das
cmp
mov
out
mov
movs
es
(bad)
cmp
fiadd
mov
fsub
dec
fdivr
xchg
mov
add
mov
out
imul
int3
add
gs
sub
(bad)
pop
sub
imul
es
push
inc
cld
jmp
cdq
mov
add
repz
and
xchg
dec
xor
pop
inc
leave
out
mov
add
mov
jge
or
xchg
push
xor
addr16
ds
scas
push
sbb
shr
sbb
xor
sub
jmp
sub
push
aas
mov
add
xchg
daa
call
mov
ficom
pop
rcl
cmp
inc
outs
pusha
fild
int3
inc
mov
fadd
mov
or
cmp
int
lgs
xchg
or
jo
sbb
scas
fisttp
inc
push
add
aad
xchg
jne
in
mov
cmc
sub
dec
scas
pop
sub
sahf
hlt
popa
xor
sbb
fmul
dec
adc
adc
in
mov
daa
loopne
jl
pop
addr16
ffreep
call
inc
push
push
xchg
dec
xchg
cmp
sbb
ja
or
mov
and
push
inc
int
sbb
and
lock
ficomp
fsubr
fcom
dec
cmc
jb
mov
ja
(bad)
or
movs
inc
jg
out
jle
stos
sbb
test
leave
mov
add
mov
xor
push
pusha
into
sbb
shl
jno
mov
dec
es
loope
inc
cld
mov
jmp
lds
add
adc
shl
xor
jo
ja
(bad)
mov
out
adc
sbb
das
xchg
je
mov
adc
std
sub
adc
mov
push
add
dec
(bad)
out
sbb
cmp
jnp
lea
ja
jecxz
sbb
dec
add
hlt
loope
sub
add
adc
aas
fucomi
ins
pop
pop
add
pushf
jg
loope
rep
aad
cmp
dec
add
(bad)
push
xchg
ins
sbb
xor
dec
mov
jle
pop
add
jmp
data16
sub
nop
pop
adc
or
leave
lds
outs
sbb
aad
sub
xchg
(bad)
pop
dec
into
mov
jnp
dec
fadd
test
sar
push
add
stos
mov
jge
sbb
adc
fisub
pushf
mov
jo
mov
loop
sbb
jmp
adc
sbb
xor
ror
sub
add
add
sbb
ror
out
or
test
xchg
test
stos
dec
mov
mov
inc
push
retf
pushf
test
cdq
push
adc
inc
(bad)
xchg
ret
not
adc
pop
push
(bad)
mov
xchg
inc
pop
js
idiv
int
mov
test
rol
mov
mov
mov
ror
arpl
sub
xchg
imul
sahf
jmp
movs
mov
movs
sub
(bad)
pushf
sub
les
mov
jbe
stos
sahf
mov
add
xor
sbb
int
fcomip
arpl
or
and
and
pop
fs
add
(bad)
lds
add
sti
and
enter
jg
popf
sub
cmp
js
and
inc
jl
sti
pop
push
imul
jmp
add
mov
in
scas
mov
outs
retf
ss
xchg
call
fistp
pop
int3
sub
sub
add
vexpandps
(bad)
repz
shl
adc
and
lods
mov
popa
jnp
pop
sbb
or
es
fucomi
push
pusha
mov
icebp
lock
popa
in
jns
sahf
inc
sbb
rcl
mov
ret
mov
xor
les
pop
mov
dec
adc
fwait
cmp
xchg
popf
and
and
ins
fwait
push
out
sbb
cmp
mov
inc
loop
dec
mov
mov
(bad)
and
nop
movs
(bad)
bound
stos
push
das
jg
mov
(bad)
scas
outs
mov
lahf
enter
(bad)
les
es
xchg
and
push
int
sub
sub
retf
je
call
push
int3
cld
dec
pop
sahf
push
jge
sub
push
dec
ret
call
or
and
and
pop
xor
test
jge
pop
pop
in
cmp
mov
push
dec
add
adc
js
xchg
xchg
mov
shl
(bad)
jb
mov
lods
dec
jns
xchg
jge
call
in
or
(bad)
inc
mov
dec
sar
xor
pop
add
iret
lock
dec
int
test
pop
xchg
in
es
mov
dec
jmp
pushf
inc
pop
mov
xor
fwait
and
outs
pop
mov
lds
mov
loope
(bad)
popf
mov
ficom
or
pop
push
fistp
aam
cmp
and
outs
mov
js
jmp
loope
dec
jl
(bad)
mov
pusha
xor
icebp
pop
cmp
push
sti
pushf
test
or
fdivr
pop
adc
inc
and
test
xor
jg
in
sbb
xchg
push
cli
push
pop
scas
xlat
push
fldcw
js
sbb
push
jne
nop
(bad)
out
mov
cmp
cmps
rcr
outs
call
adc
dec
jno
sub
int
(bad)
cmc
shr
push
and
cmp
and
sbb
sub
mov
(bad)
fld
fwait
sub
into
shl
neg
mov
frstor
cmp
fisub
in
mov
mov
ds
mov
leave
retf
aaa
cmc
aad
test
mov
mov
xor
ret
pop
mov
fcom
jb
or
xchg
into
dec
mov
ror
mov
(bad)
sub
movs
aas
sti
mov
add
push
mov
retf
sub
pop
mul
not
xchg
mov
(bad)
mov
inc
stc
mov
leave
pop
xchg
cmp
leave
add
jg
cmp
ret
push
fsin
cmc
rep
cs
fimul
adc
cdq
loop
cmp
out
xor
cwde
xchg
dec
inc
dec
mov
adc
aam
push
pop
jae
jmp
sub
shl
int3
mov
sbb
inc
xchg
int3
or
rol
shl
pop
jbe
lods
mov
ja
jno
out
jae
popa
and
dec
aaa
sub
les
mov
leave
scas
adc
dec
pop
pop
dec
sub
mov
mov
pop
push
mov
fwait
inc
pop
xchg
out
div
push
push
call
adc
fst
xchg
push
popf
cmc
das
les
pop
mov
xlat
mov
iret
pop
mov
jmp
rol
retf
stos
pop
icebp
or
xor
in
mov
movs
jmp
(bad)
retf
movs
adc
shl
cmc
sbb
scas
xchg
mov
push
mov
test
or
popa
pop
mov
test
pop
mov
add
or
push
dec
inc
dec
test
cmovl
(bad)
push
mov
adc
ret
es
add
dec
xchg
int
dec
pop
enter
sub
push
mov
jne
xchg
out
mov
je
arpl
out
push
sub
popf
push
pop
sub
sti
inc
stos
loope
rcl
add
push
mov
ror
inc
pop
pushf
aas
jb
pusha
mov
add
mov
push
dec
test
push
inc
rcr
fwait
dec
mov
out
mov
cmp
jmp
rcr
pop
std
out
movs
gs
(bad)
cmp
adc
aam
stos
das
mov
xor
cmp
es
pushf
lods
xchg
mov
data16
es
ss
dec
bound
pop
xor
jbe
or
xor
arpl
xchg
add
add
cs
ss
int3
mov
and
and
out
outs
sbb
inc
aam
xchg
scas
sti
test
inc
mov
jnp
movs
aas
xor
jae
test
in
repz
pop
retf
movs
and
cwde
inc
cmp
add
call
sub
jge
xchg
push
push
mov
(bad)
lds
test
cmc
cld
adc
ss
pop
add
jmp
sub
add
out
xor
sbb
mov
ror
sahf
call
ret
pushf
das
in
sub
or
jl
cmps
xor
jne
mov
jae
xor
pop
popa
push
pop
adc
fcmovb
jo
in
xor
xor
inc
test
xchg
pop
(bad)
out
es
dec
shl
and
jb
dec
adc
mov
stc
popa
pop
and
imul
cli
sahf
mov
pop
cmc
repz
push
jp
retf
test
dec
pop
test
and
clc
movs
cdq
and
pusha
sbb
mov
sbb
adc
sbb
mov
mov
xchg
loopne
inc
mov
imul
push
(bad)
(bad)
sbb
add
in
inc
loope
inc
adc
outs
or
inc
sbb
pusha
dec
stos
stos
mov
(bad)
and
neg
gs
adc
pop
es
ror
mov
push
add
call
jmp
jl
mov
cld
rcl
in
fisttp
xchg
jne
cmp
fnstenv
cld
jg
cmp
jg
out
mov
outs
arpl
xchg
and
pop
or
movs
movs
pushf
xchg
add
adc
and
repz
in
stc
pop
mov
in
cmp
or
xchg
sahf
cmp
les
fucomp
cmps
test
jge
scas
jmp
in
pop
jg
addr16
cmp
mov
out
dec
jae
ret
aam
cmps
addr16
arpl
das
xchg
fisub
jne
or
sbb
pop
xor
(bad)
fisubr
(bad)
int3
popa
das
mov
adc
or
icebp
adc
sahf
sahf
in
or
iret
ds
mov
pop
js
xor
fnstcw
call
and
xor
ficom
xchg
xchg
(bad)
add
pop
inc
push
scas
cmps
pop
cs
sub
aad
mov
mov
xchg
fcmovnu
gs
pop
mov
cmp
repz
das
(bad)
jmp
pop
imul
retf
(bad)
adc
loopne
(bad)
jbe
pop
jb
(bad)
test
pusha
(bad)
jle
jg
xchg
(bad)
test
or
(bad)
aam
fmul
jo
mov
add
test
xor
jno
and
aam
cmp
sub
or
and
and
out
retf
shr
(bad)
lods
iret
neg
popa
gs
push
repz
pop
sub
add
add
push
(bad)
or
and
dec
sub
popf
sbb
xor
int3
add
dec
lds
into
out
sub
mov
mov
xchg
adc
test
jmp
pop
iret
scas
pusha
push
xor
jo
pop
mov
pop
jae
and
sub
pushf
push
into
gs
mov
jp
nop
add
iret
shl
inc
neg
enter
pop
sbb
adc
add
mov
jnp
test
jmp
add
test
fiadd
sbb
gs
cmp
fsubr
(bad)
sbb
not
sbb
adc
bound
cmps
xchg
(bad)
mov
mov
ret
js
jae
pop
and
popa
js
out
jl
imul
pop
test
push
rcl
mov
mov
pop
fwait
lahf
sub
sti
inc
stos
xor
jecxz
pop
cs
mov
and
jl
jl
cmp
div
dec
adc
adc
push
jbe
xchg
mov
pop
dec
div
mov
xor
cld
add
popa
jmp
(bad)
fwait
(bad)
xchg
(bad)
mov
jle
call
jne
or
enter
mov
fwait
ret
ret
push
add
test
mov
cmc
bound
arpl
leave
mov
sub
mov
ja
pop
dec
retf
(bad)
iret
fcomp
jb
mov
sbb
jno
xchg
sub
push
in
call
pushf
xlat
call
pop
pop
xchg
out
mov
outs
sbb
lea
inc
sahf
repnz
and
pop
add
sub
inc
sar
fcom
imul
enter
fld
ins
je
out
push
fwait
(bad)
fcomp
sbb
dec
sahf
sbb
lods
cwde
jmp
add
stc
adc
and
mov
pop
rol
imul
out
jg
inc
jb
rol
ror
test
mov
sub
ss
and
xor
jl
push
mov
inc
repz
hlt
mov
jl
push
mov
and
cwde
fld
adc
mov
add
sbb
sbb
xchg
sub
xor
fwait
(bad)
pop
jmp
jle
loope
mov
push
popf
inc
or
jno
or
jp
mov
mov
and
adc
dec
jb
push
js
dec
lock
jecxz
adc
mov
adc
mov
xchg
xchg
scas
adc
jns
gs
call
mov
scas
cmps
enter
std
mov
dec
out
lahf
std
ficomp
add
jne
add
jno
cmp
loope
xchg
and
mov
retf
lds
dec
push
daa
xchg
dec
(bad)
loopne
mov
jns
jno
pop
xor
cmp
ficomp
and
pusha
xchg
jns
jg
imul
adc
sub
sbb
call
ss
mov
sub
mov
push
(bad)
fiadd
hlt
xor
mov
sbb
retf
mov
fst
div
mov
(bad)
test
pop
cli
cld
pop
dec
inc
and
in
iret
in
pop
jle
sbb
pushf
cmp
inc
int3
add
xor
dec
cmp
dec
inc
pop
pop
add
lock
push
movs
xchg
adc
aaa
cmps
or
pop
jno
and
sub
scas
xchg
push
sbb
mov
mov
mov
pop
lods
popa
je
shl
sti
mov
add
xchg
(bad)
xor
pop
stc
(bad)
mov
sbb
shr
inc
bound
addr16
adc
aam
xchg
sbb
mov
das
mov
mov
(bad)
aad
mov
xor
loop
cmps
xchg
stc
cld
es
fsub
push
in
aam
lods
mov
ficom
cmp
test
out
mov
push
xor
mov
mov
xor
mov
into
outs
dec
out
cmp
push
ss
dec
sub
dec
shr
adc
jmp
mov
test
dec
ror
out
dec
int3
lahf
mov
ret
loope
mov
sahf
or
ins
dec
jp
sub
mov
lods
lods
push
scas
daa
aad
inc
pop
adc
sub
mov
push
sub
fs
rcl
push
inc
aad
or
shr
hlt
inc
aam
cmp
xchg
dec
bound
xor
push
fiadd
add
out
mov
imul
xor
xlat
in
stos
fidiv
inc
inc
jmp
or
ds
test
jns
pop
popa
cmp
ins
cmps
data16
cmp
scas
jmp
cdq
in
ret
dec
push
in
ins
repz
and
ret
dec
or
cmps
adc
int
add
out
inc
out
jae
sahf
scas
cmp
imul
inc
jg
pop
mov
ret
or
or
repz
mov
lea
xor
dec
in
mov
(bad)
sahf
add
inc
bound
shl
jmp
jnp
dec
push
out
add
mov
in
or
sbb
std
mov
pop
jg
lahf
add
das
imul
int
lods
imul
mov
sbb
fsubrp
je
xor
clc
sbb
xchg
inc
cmc
pop
(bad)
das
leave
xor
cdq
and
mov
(bad)
jbe
leave
jge
rcl
and
int3
clc
lods
add
sub
cmp
cmc
xchg
push
fs
cmp
imul
add
add
xchg
xchg
pushf
pop
or
arpl
cli
shl
add
imul
mov
jmp
mov
mov
pop
(bad)
scas
and
in
paddusw
movs
sbb
call
mov
sbb
adc
popa
push
and
cmp
mov
cmps
lock
std
in
mov
into
sbb
call
out
lds
mov
mov
sar
sbb
mov
adc
cli
mov
(bad)
retf
dec
add
inc
leave
nop
pop
adc
shr
mov
sub
push
xchg
imul
cmp
pop
pop
lods
jecxz
jmp
mov
pop
and
xchg
fidivr
mov
sub
daa
inc
push
mov
test
stos
sbb
or
jne
xchg
(bad)
pusha
fs
mov
hlt
mov
call
and
or
dec
shr
in
lds
xor
out
inc
jb
sbb
hlt
loope
or
daa
sub
inc
rcl
add
stc
mov
(bad)
jbe
pushf
stc
jmp
fcomp
inc
(bad)
std
sbb
mov
neg
xchg
mov
jecxz
shl
mov
mov
sbb
cmp
mov
add
popa
push
inc
pusha
add
cwde
fs
sub
xor
inc
and
push
gs
mov
add
pop
or
cmp
dec
push
(bad)
mov
sub
jle
adc
aam
icebp
sub
(bad)
sub
cld
bound
out
adc
aad
out
pusha
inc
call
repnz
sub
mov
sub
sbb
push
leave
dec
loopne
(bad)
jne
push
adc
hlt
mov
or
es
cmp
pop
xchg
push
push
mov
stc
es
sub
scas
xchg
(bad)
icebp
ss
mov
sub
js
dec
ret
mov
or
popf
inc
push
fnstcw
push
in
(bad)
push
cwde
pop
sbb
pop
les
sub
push
iret
push
out
mov
push
xchg
ins
push
and
loope
sub
sub
stos
jae
fmul
iret
js
xchg
ret
pusha
ror
dec
mov
ror
outs
cld
push
inc
aas
jnp
jns
test
mov
rcr
adc
cmps
dec
pop
call
push
xor
push
pop
sbb
mov
jbe
jnp
pop
dec
pop
and
test
or
push
addr16
jae
mov
jg
xor
(bad)
pop
mov
test
cmps
push
idiv
cmc
sub
add
setbe
ret
mov
adc
mov
sub
sub
mov
jp
fadd
dec
mov
mov
jl
shl
cmp
pop
iret
mov
js
pop
mov
push
pop
lods
mov
push
push
ret
cmps
mov
sub
sub
and
mov
push
fwait
aam
js
sub
cdq
scas
xchg
or
xor
fs
jp
pusha
dec
jae
jmp
adc
push
cmp
adc
xchg
rol
sub
ins
push
ss
scas
ret
out
es
jbe
sbb
push
mov
add
sbb
out
fisubr
cmp
(bad)
or
and
loop
cmp
hlt
add
pop
pop
imul
dec
mov
mov
repnz
sub
cdq
jbe
adc
dec
adc
in
fild
rol
scas
xchg
mov
mov
test
add
or
div
cli
push
jno
add
sbb
int
(bad)
outs
fist
fs
sbb
(bad)
pop
fsub
leave
scas
push
pop
outs
push
int3
loope
adc
jmp
loopne
popa
lods
call
adc
stos
sbb
lock
out
shr
or
push
fnsave
(bad)
scas
ss
jb
bound
adc
shl
inc
adc
jl
dec
lods
sub
retf
or
mov
ins
jmp
mul
call
push
rcl
ret
ficom
lods
stc
movs
sbb
not
cmc
sub
sbb
stc
rcl
loopne
inc
ret
cmc
sahf
mov
sub
pusha
sbb
in
xor
clc
in
outs
inc
repz
jg
mov
jne
out
pop
push
xor
test
scas
jge
popf
iret
ds
icebp
stos
mov
dec
repnz
push
mov
fisttp
pop
add
add
inc
lock
pop
jae
cmp
not
jne
test
mov
xor
(bad)
fdiv
push
int
clc
imul
mov
sahf
push
out
pop
or
dec
nop
or
xchg
dec
xchg
es
xchg
adc
pop
adc
cmp
dec
xor
aaa
push
in
inc
xor
jnp
push
or
push
int3
mov
sub
aaa
mov
popa
je
inc
not
mov
clc
push
les
or
fiadd
and
in
neg
push
mov
(bad)
adc
ins
pop
mov
pop
scas
jg
and
cwde
mov
mov
js
rcl
scas
iret
add
cmps
call
mov
addr16
mov
pop
mov
(bad)
cld
jle
xchg
aaa
ins
jns
clc
popa
xchg
push
jo
bound
inc
(bad)
fadd
test
rol
xchg
mov
mov
xor
push
into
sti
push
xor
nop
mov
div
push
test
inc
cmp
and
dec
icebp
adc
or
xor
sub
mov
ins
jle
mov
pop
cli
add
jmp
std
push
shl
pop
call
mov
cmps
dec
mov
adc
out
aaa
sub
or
imul
mov
mov
dec
pop
into
icebp
stc
cmc
mov
pop
jmp
shr
mov
pop
(bad)
jg
pop
inc
mov
cmp
mov
test
int
dec
mov
ins
or
(bad)
shl
test
fbstp
mov
repnz
mov
fist
pop
pop
adc
(bad)
rol
mov
in
xor
push
dec
adc
fidiv
inc
ret
jae
ret
mov
stos
jbe
leave
adc
mov
add
pop
les
lea
jmp
or
or
xor
jle
fcom
ins
xchg
fstp
adc
lea
iret
retf
scas
mov
xor
mov
sahf
inc
xchg
in
pop
cld
(bad)
push
int
out
ss
adc
mov
(bad)
int
and
stc
mov
in
or
idiv
ret
push
dec
jmp
call
aad
in
sti
inc
cmp
stos
mov
cmp
sub
add
jne
xor
pushf
push
outs
test
adc
idiv
dec
movs
sub
sti
mov
int
cmp
add
addr16
adc
test
das
fsubr
scas
shl
fwait
mov
not
pop
dec
aad
push
inc
aad
mov
gs
xor
popa
mov
mov
dec
dec
mov
xchg
ja
jecxz
lea
jecxz
inc
xchg
sbb
sysenter
or
out
sub
gs
loopne
(bad)
add
mov
stos
jnp
andps
das
jle
xchg
sahf
push
ja
xchg
les
xchg
out
addr16
cmp
hlt
mov
sub
or
mov
fnstenv
data16
stos
jl
push
xor
dec
call
addr16
imul
mov
push
sbb
retf
jae
mov
pop
sbb
adc
xchg
or
stos
fwait
sbb
jbe
outs
mov
add
adc
dec
sbb
cmps
xor
jns
push
jo
retf
mov
call
mov
int
cmps
mov
cmp
fisub
mov
pop
fld
mov
scas
das
mov
adc
nop
cwde
cmps
xor
jmp
push
arpl
pop
and
cdq
and
cmp
sbb
aad
data16
xlat
cmp
fwait
mov
scas
push
nop
mov
fcmovb
adc
gs
lods
test
cmc
push
cmp
jbe
mov
push
jp
dec
pcmpgtb
clc
je
dec
mov
(bad)
je
xor
call
dec
xlat
dec
fs
dec
adc
mov
(bad)
fimul
adc
stos
mov
fcomp
xor
push
sbb
fmul
jmp
(bad)
dec
xchg
mov
xor
push
mov
cmc
jmp
cdq
pop
mov
test
mov
mov
xor
mov
movs
je
scas
dec
add
out
adc
xchg
test
repz
mov
(bad)
lock
fld
popf
mov
cmp
inc
add
push
or
pop
mov
or
ds
jb
push
aaa
data16
jg
or
int
cmp
int
imul
mov
cmp
cmps
cmp
stc
(bad)
xor
add
repz
push
data16
inc
(bad)
jmp
and
inc
(bad)
aas
xor
shl
loope
xchg
fcmovb
call
mov
jp
or
sub
mov
dec
inc
and
sbb
mov
in
jg
add
add
fucomip
bound
inc
imul
push
xchg
mov
mov
int
in
daa
sub
std
adc
sbb
fnstenv
cmc
adc
fs
push
lods
sub
add
adc
jle
clc
(bad)
movs
shr
pop
jp
std
fdiv
scas
sub
push
shl
xchg
(bad)
cld
jge
dec
inc
jb
int
inc
call
fidiv
pop
pop
ret
shl
add
out
in
or
and
jb
in
sbb
sbb
dec
and
or
cmp
pop
lea
jbe
aad
inc
add
stos
lock
lods
loopne
aaa
adc
fistp
dec
bound
jns
retf
sbb
xor
addr16
(bad)
test
cli
mov
je
(bad)
cmps
ins
sar
cmps
sub
xchg
fnstsw
mov
dec
mov
jp
dec
imul
push
fadd
pushf
call
xchg
jl
pusha
add
pop
pushf
nop
sbb
cmp
jno
pop
gs
cwde
sbb
xor
adc
mov
mov
mov
xlat
mov
and
fstp
int3
and
or
into
outs
dec
dec
sahf
jp
add
std
sbb
add
(bad)
cmps
add
mov
dec
imul
xlat
jge
movs
daa
push
lea
loope
inc
aaa
sahf
cmp
dec
cmc
and
repnz
sub
mov
mov
cmps
pop
xchg
add
loope
mov
in
jg
sti
hlt
pop
jns
or
or
add
cdq
hlt
pop
adc
xor
push
cmp
inc
jmp
test
sti
and
dec
add
xchg
fwait
xchg
out
push
or
add
clc
xchg
and
stos
fwait
push
xchg
in
dec
loop
inc
in
aas
(bad)
cmp
inc
idiv
enter
pop
cmp
mov
xlat
daa
inc
test
js
int
mov
sub
sbb
ins
clc
jnp
sahf
rcr
mov
cs
xchg
xchg
fst
cdq
sar
lods
xlat
int
ror
dec
ins
push
add
dec
and
retf
repz
xor
inc
push
xchg
inc
sub
pop
(bad)
pop
xor
xchg
wrmsr
ret
jbe
or
xchg
leave
test
cmp
inc
adc
popf
push
imul
pop
test
adc
and
icebp
pusha
in
imul
mov
imul
adc
or
add
cdq
mov
out
sbb
test
sbb
iret
fcom
add
dec
pushf
jmp
mov
int
aam
mov
jg
lock
stc
mov
pushf
jb
imul
loope
pusha
sub
lahf
jno
xchg
and
test
sahf
stc
sar
or
jno
repnz
and
frstor
xchg
add
lahf
inc
jg
hlt
add
cmps
loope
jnp
gs
or
jnp
jo
ret
xor
(bad)
cdq
push
inc
test
scas
add
sbb
shl
add
lods
jmp
mov
sar
jp
push
mov
xchg
and
sbb
mov
ret
ds
into
call
cmp
inc
lods
test
out
dec
dec
js
sub
mov
jecxz
push
inc
gs
or
xor
gs
push
dec
or
sbb
out
inc
inc
ins
jne
xchg
or
xchg
into
rcr
mov
add
test
fs
enter
int3
ins
push
mov
retf
xchg
test
jp
iret
jp
sbb
lahf
xchg
mov
sub
or
popf
mov
xchg
pusha
jmp
loope
call
fist
pusha
xor
imul
xor
fisttp
push
pop
jns
dec
and
movs
imul
cmp
mov
scas
adc
sub
xchg
dec
sub
pop
dec
retf
xchg
jmp
aaa
mov
cwde
les
(bad)
add
mov
pop
test
add
and
lods
(bad)
aaa
ficomp
stos
cmp
pop
xlat
je
imul
or
xor
mov
cwde
push
mov
(bad)
data16
sar
cmp
pusha
jnp
dec
adc
leave
mov
mov
test
inc
adc
sub
aad
aam
dec
mov
(bad)
cmps
pusha
clc
test
fstp
jae
xchg
(bad)
(bad)
xor
clc
mov
bsr
inc
cmp
pop
adc
pop
mov
retf
ror
lahf
dec
repnz
retf
ds
or
mov
jns
daa
retf
iret
mov
sub
mov
jbe
sahf
adc
mov
xor
add
dec
jmp
iret
sub
sbb
inc
popf
cmp
adc
xor
cmps
fs
add
mov
cs
adc
add
ja
ffreep
sbb
inc
repz
ss
imul
sbb
rcl
and
push
cs
repnz
xor
sbb
mov
loope
cmc
push
jmp
lss
jmp
rol
xor
push
loope
loope
jae
mov
add
and
mov
mov
(bad)
lods
jne
daa
inc
repnz
or
movs
cmps
in
scas
adc
sbb
inc
mov
std
iret
leave
push
mov
and
loop
sub
cmp
stos
int3
iret
add
xor
cmp
push
repz
repnz
jl
jne
das
out
cmp
adc
adc
xor
ror
pop
mov
pushf
ror
popf
pusha
lea
fs
jnp
xchg
sub
mov
xchg
aam
nop
cli
dec
fdiv
(bad)
es
ds
inc
cmps
add
dec
ja
out
adc
mov
add
cs
push
cli
pop
inc
lea
adc
imul
cld
cmps
lds
movs
popa
and
aaa
movs
jno
mov
xchg
add
jle
add
into
(bad)
and
adc
retf
dec
mov
int3
dec
jle
mov
dec
mov
mov
int3
mov
iret
out
pop
cs
les
and
or
gs
scas
pop
shl
(bad)
test
hlt
loop
in
ja
retf
loope
push
retf
sub
pop
pusha
jmp
dec
nop
mov
jo
fadd
test
sti
lods
xor
add
aad
sub
loop
sti
jmp
jmp
sahf
outs
daa
sub
or
jge
cmp
ret
jno
stc
xor
cmp
repz
test
push
xchg
mov
dec
pop
ds
cwde
jg
mov
xor
cwde
and
jp
pop
pushf
dec
jo
dec
in
inc
and
cld
out
cs
movs
cmps
ret
jmp
mov
das
je
lea
fcomp
pop
mov
stos
pop
fnstcw
xor
addr16
jo
xor
out
ds
dec
sbb
test
dec
ror
ret
mov
push
xchg
test
xchg
dec
dec
mov
sub
mov
imul
pusha
add
mov
xchg
jne
(bad)
mov
movs
push
mov
mov
imul
(bad)
pcmpgtw
ret
add
add
sub
sub
shl
or
jnp
js
mov
es
push
out
sub
scas
test
xlat
pop
fwait
in
lahf
inc
popf
mov
sahf
sub
pop
imul
pop
ret
mov
mov
jecxz
add
cmp
out
fs
movs
sub
cmp
in
leave
cmp
jo
or
inc
and
retf
lods
dec
in
shr
js
ss
pusha
ret
sti
sbb
pop
pop
(bad)
cmps
xor
xchg
loope
pop
cmp
add
lods
daa
test
sub
adc
addr16
push
mov
test
out
jns
out
jne
xchg
hlt
retf
add
adc
inc
push
lock
call
pop
lea
adc
inc
shl
fcmovnb
stos
lods
and
sub
aad
ja
test
aaa
fnstsw
lods
in
inc
addr16
cdq
fldcw
xlat
cli
das
cmpps
push
imul
arpl
lds
mov
cs
fld
jl
push
or
cli
js
cmp
aad
mov
cs
push
ins
popf
in
jmp
(bad)
mov
add
aas
mov
fsub
mov
(bad)
in
cld
aam
inc
inc
mov
sub
jle
retf
(bad)
clc
xor
test
mov
pop
cmc
dec
jg
inc
loop
xchg
add
popf
lods
(bad)
out
test
or
add
(bad)
sahf
pop
sti
xor
dec
fnstcw
xchg
js
outs
into
or
mov
mov
sub
or
dec
mov
pop
inc
sbb
cmp
mov
add
push
jp
and
pop
xchg
jg
push
jo
movs
sbb
frstor
repnz
or
cli
or
aam
add
adc
jge
inc
jo
mov
push
jae
push
aas
or
out
and
adc
aaa
or
jns
ret
adc
jns
mov
fistp
push
cmps
jnp
sub
int
and
push
xor
int3
(bad)
lock
mov
sbb
push
lahf
(bad)
iret
es
jp
cli
repnz
ins
leave
mov
xor
inc
imul
jno
sbb
fmul
jbe
sub
sbb
xor
sti
xchg
popf
fmul
sbb
or
ins
mov
pop
xor
jmp
mov
dec
dec
(bad)
push
dec
xchg
not
shl
add
pusha
inc
jmp
add
rol
outs
xchg
call
pop
bswap
mov
repz
mov
aam
int
cmp
int
push
sahf
jp
mov
iret
mov
sbb
mov
nop
shr
sub
mov
in
xchg
sub
ror
mov
shr
mov
mov
dec
fwait
adc
inc
les
cmp
inc
and
mov
out
(bad)
fimul
or
mov
repz
arpl
adc
pop
xchg
es
push
hlt
(bad)
dec
xchg
call
inc
ja
movs
fs
xchg
rol
mov
cdq
dec
addr16
(bad)
pop
(bad)
(bad)
out
(bad)
jecxz
adc
mov
pop
loopne
or
out
push
push
aaa
ds
ds
in
inc
int
scas
xchg
pop
push
jmp
cmps
xchg
jno
(bad)
ss
dec
adc
scas
es
push
inc
ficom
push
adc
loope
outs
sub
sub
sbb
jno
inc
gs
push
cmp
jns
shl
bound
pop
adc
or
xchg
push
push
mov
bound
ficom
or
sti
sti
lds
add
adc
je
test
xlat
pop
xchg
xchg
fcmovnbe
xchg
mov
pop
test
paddb
push
pop
xor
xchg
adc
mov
mov
xor
(bad)
jmp
cwde
and
cs
(bad)
loopne
xor
inc
es
jno
inc
in
mov
mov
lods
xlat
xor
push
sbb
sbb
push
cmp
and
sub
pop
shr
leave
cmps
montmul
cmps
pop
fwait
inc
pop
dec
ins
inc
inc
jnp
call
push
push
psubq
and
mov
adc
outs
jbe
push
fnstcw
stos
push
stc
fisubr
inc
or
cmps
lods
jo
daa
push
jecxz
ret
sar
repnz
sbb
neg
sub
xor
cmp
(bad)
push
cmp
sub
popa
sti
cwde
mov
xor
mov
add
mov
sbb
or
adc
xor
xchg
call
or
jg
xchg
test
jae
mov
or
ror
jne
test
test
adc
(bad)
fidiv
mov
sar
mov
repz
add
inc
jecxz
sub
in
add
sub
inc
sub
outs
push
scas
test
ret
clc
loope
inc
idiv
inc
xchg
lahf
dec
inc
pusha
movs
add
jo
jg
ret
fs
mov
jl
ins
mov
jmp
fwait
adc
inc
cwde
imul
pop
iret
les
add
not
imul
pushf
jmp
xchg
retf
mov
xor
cli
mov
push
(bad)
stos
sub
cwde
je
fisttp
outs
int
mov
jns
or
or
cmp
cmp
fnstenv
popf
lock
arpl
mov
jecxz
mov
cmp
inc
pop
mov
add
mov
adc
mov
das
jb
sets
push
pushf
pop
aas
mov
jo
dec
cdq
lea
rol
es
(bad)
out
aaa
inc
pop
popf
fcmovbe
add
push
xor
pusha
(bad)
push
inc
in
dec
out
or
sti
xor
mov
jns
mov
ja
hlt
inc
add
inc
scas
adc
pop
mov
xchg
in
(bad)
movs
dec
mov
cmp
lea
adc
stc
pop
(bad)
jo
jae
xchg
xchg
xor
popa
adc
or
outs
xchg
jle
add
push
mov
rcr
add
sbb
push
inc
inc
xor
xchg
dec
das
cmc
retf
stos
xchg
ds
xchg
das
cld
ins
add
fldcw
neg
pandn
gs
dec
mov
jecxz
sub
sub
pop
lods
(bad)
mov
xor
test
into
int
test
mov
mov
shl
dec
dec
jg
mov
jb
cwde
cmp
out
dec
pop
out
mov
mov
xlat
cli
fbld
cmc
or
sar
pop
add
das
jmp
xchg
in
xchg
sti
outs
(bad)
stc
or
xor
test
lea
jecxz
mov
dec
sahf
cmp
xchg
bound
xchg
fwait
push
and
mov
sub
cmps
rcl
sub
(bad)
leave
loopne
push
int3
and
xchg
fnsave
das
xchg
jo
ficomp
inc
inc
sub
inc
xchg
pusha
call
outs
push
pop
mov
push
jns
frstor
push
dec
bound
(bad)
pop
sub
aad
and
into
push
xlat
cmp
xor
or
pop
mov
mov
mov
imul
(bad)
cmps
or
sti
push
fucom
popf
(bad)
arpl
pop
jmp
xor
jl
cmp
push
arpl
cmps
mov
jp
xor
ins
stos
ret
xchg
shl
xchg
iret
fdiv
and
jae
adc
mov
fst
push
ror
and
sbb
or
push
xchg
das
repnz
js
(bad)
jmp
xor
sti
enter
inc
cmp
push
rcr
cwde
cmps
pop
in
add
or
inc
xchg
std
add
push
jecxz
adc
xor
jecxz
ds
sbb
lods
and
xchg
xor
push
je
pushf
pop
dec
and
sub
cmp
int
aad
and
fisttp
loope
rcr
sti
and
mov
stc
repz
inc
sub
and
adc
add
movs
jno
cmp
(bad)
jne
jg
mov
xlat
pusha
push
rcr
sub
mov
imul
and
shr
jl
inc
dec
cmp
mov
inc
or
jle
mov
lea
mov
stc
cmp
adc
iret
mov
sub
inc
xchg
lahf
call
lock
inc
(bad)
mov
fidiv
jnp
ret
sub
inc
movs
cmp
test
rol
(bad)
out
jge
push
ret
or
test
jno
(bad)
pop
mov
pop
jno
mov
push
pusha
loope
ja
dec
ds
imul
fiadd
inc
xor
add
jb
scas
idiv
mov
fs
iret
ins
aam
add
ret
fiadd
and
fcom
gs
repnz
pmaddwd
push
in
dec
cmps
cmp
scas
mov
add
sbb
xchg
push
xor
ins
mov
sub
stc
mov
call
mov
lock
inc
sub
add
popa
ins
push
cmovl
leave
cld
outs
adc
loopne
add
in
jmp
sbb
mov
cmp
or
xchg
loop
pop
out
push
xor
sbb
call
sub
jp
fmul
xchg
or
cld
push
cmp
stos
sub
jmp
mov
das
dec
and
(bad)
lea
jne
pop
pushf
xchg
and
fild
(bad)
and
repz
dec
pop
pop
pop
jmp
mov
scas
pop
xchg
and
sub
movs
cmp
push
cmp
sbb
shl
mov
xchg
ret
sbb
xor
sub
lahf
movzx
push
adc
xor
adc
sbb
inc
cli
fidiv
xor
pushf
jns
and
ds
movs
xchg
pop
sub
cmc
imul
fnstsw
jno
je
jecxz
retf
out
cld
jecxz
fcmovnu
mov
mov
gs
cli
stos
mov
pusha
fst
jg
cld
lods
add
test
pop
test
push
add
dec
cmp
mov
mov
shl
dec
mov
das
mov
or
mov
jo
mov
leave
stos
cmp
(bad)
pop
aas
push
retf
add
xor
ret
cmp
cmps
xchg
mov
jno
es
jl
push
test
jb
int3
pusha
inc
and
mov
add
jmp
(bad)
inc
sub
jae
(bad)
mov
xchg
xchg
aam
mov
dec
mov
jnp
lock
mov
lahf
dec
(bad)
mov
popa
dec
inc
lds
inc
and
cmp
mov
out
pop
and
rcr
popf
dec
adc
out
inc
cmp
mov
push
lea
pop
clc
mov
movs
nop
fldenv
rsm
jbe
xchg
rol
cld
sar
sbb
lea
aaa
loopne
dec
inc
rcl
(bad)
int
shr
scas
jbe
inc
call
dec
retf
enter
push
sub
jne
arpl
dec
or
sub
xor
in
adc
sub
cmp
out
and
dec
mov
dec
push
xchg
xchg
sbb
pop
push
lods
xchg
mov
scas
push
pop
mov
mov
sub
inc
jbe
mov
out
mov
jmp
push
nop
or
cdq
sbb
pop
dec
in
(bad)
mov
and
nop
mov
scas
xor
xchg
loopne
test
stos
or
xchg
jne
imul
xchg
(bad)
das
lds
fbstp
adc
jg
in
in
movs
faddp
add
in
pop
ss
jno
cmp
addr16
mov
adc
inc
ret
imul
dec
inc
mov
mov
in
dec
jecxz
test
and
jae
int
adc
cmp
and
call
mov
and
dec
cmp
sub
and
cmp
jb
mov
dec
mov
sub
add
sbb
pop
mov
dec
(bad)
push
sub
push
scas
and
loope
inc
pop
retf
repz
imul
fidivr
les
mov
(bad)
call
ja
fsub
lea
sub
xchg
out
xchg
xchg
pop
mov
xor
sti
mov
mov
imul
lock
dec
idiv
mov
lock
aam
sbb
lahf
xchg
sub
add
out
into
nop
fwait
retf
fs
es
fdiv
(bad)
rcr
sbb
jle
pop
xchg
inc
shl
stos
add
pushf
loope
adc
(bad)
bound
xchg
sub
mov
enter
jnp
aaa
repz
dec
or
lds
fstp
adc
mov
push
loop
lods
xor
mov
cmp
loop
mov
add
inc
mov
mov
inc
outs
mov
mov
inc
ins
inc
arpl
xchg
test
dec
add
jecxz
cmp
xor
scas
inc
adc
dec
adc
push
inc
lahf
mov
mov
cmp
pop
pop
pop
aas
pop
dec
(bad)
mov
out
icebp
in
lock
mov
div
sub
imul
inc
cmp
cmp
jmp
fisttp
inc
jno
call
in
pop
mov
inc
dec
xor
mov
mov
adc
mov
loop
cmp
in
(bad)
fiadd
pop
lock
call
jecxz
repz
into
or
and
fiadd
ret
call
xchg
call
jae
inc
bswap
fwait
mov
sub
fadd
(bad)
pusha
movs
mov
mov
in
shr
push
sbb
cli
loop
lods
adc
mov
fst
push
cwde
sbb
popf
cs
in
scas
enter
dec
gs
adc
imul
daa
adc
retf
int
xor
and
xchg
(bad)
mov
dec
hlt
iret
cdq
outs
neg
add
push
int
aaa
jae
in
lea
and
mul
fwait
in
fst
cmc
rol
int3
or
mov
jmp
xor
jmp
aad
fwait
jns
mov
ins
fbld
in
popa
cmp
push
sti
cmps
sbb
push
(bad)
mov
icebp
dec
mov
movs
jns
mov
scas
push
add
ret
mov
repz
adc
popf
adc
popf
daa
loope
xchg
aad
pop
push
mov
push
mov
push
xchg
or
push
cmps
pusha
pop
mov
add
dec
jb
add
cld
add
inc
imul
rcl
sbb
push
(bad)
int
sbb
pop
mov
add
sub
lea
sbb
mov
stos
sbb
rol
loopne
inc
jbe
je
cmp
fld
jae
icebp
xor
xchg
(bad)
loope
inc
ja
call
jae
push
mov
aaa
xchg
shl
cmp
outs
in
mov
push
dec
mov
out
sub
push
push
jne
repz
cs
jbe
pop
(bad)
jp
arpl
leave
lahf
fneni(8087
mov
adc
mul
div
push
imul
int
push
inc
out
adc
nop
scas
pushf
aam
dec
fnstsw
arpl
aas
imul
sbb
into
mov
stos
pop
sar
push
sbb
gs
fdecstp
inc
out
das
call
add
fdiv
fs
dec
pop
stc
sub
std
pop
sahf
aad
hlt
jge
lea
inc
fistp
jp
mov
push
out
ja
inc
test
cmp
push
into
popa
xchg
push
cmc
sbb
jbe
retf
mov
dec
into
stc
fwait
mov
(bad)
scas
(bad)
mov
ds
ret
mov
lock
xlat
jb
fmul
mov
mov
sub
lahf
inc
mov
adc
dec
push
adc
xor
dec
jno
cmp
ror
test
xchg
push
imul
xor
or
mov
shr
xor
sbb
shl
dec
sub
push
push
and
rol
test
loop
imul
fdiv
inc
or
stos
movs
xchg
or
ret
cwde
nop
push
gs
aas
rol
(bad)
repnz
adc
ret
pop
cld
test
xchg
ret
(bad)
test
push
fstp
fnstenv
dec
and
scas
pop
cli
scas
lods
sbb
adc
fist
lahf
sahf
cmp
jo
mov
adc
mov
add
xchg
retf
imul
or
call
cwde
push
inc
pushf
add
iret
adc
and
push
pop
add
mov
loopne
jmp
xchg
add
test
jne
test
jge
add
push
sub
jno
imul
out
lods
popf
jl
adc
(bad)
dec
enter
xlat
or
inc
push
arpl
out
(bad)
adc
add
(bad)
aaa
ror
lods
adc
jno
pop
xchg
in
pop
fnstenv
or
push
jmp
mov
in
stos
and
adc
(bad)
out
stos
ror
in
retf
or
pop
and
pop
call
cli
das
sbb
loope
in
js
and
fs
or
mov
sbb
mov
cmp
inc
loope
(bad)
jmp
popf
mov
jno
repnz
dec
not
stos
lods
pop
rcr
(bad)
hlt
in
std
xchg
fxsave
dec
xchg
mov
mov
das
stos
int
inc
push
pop
mov
xor
push
pop
lea
fidiv
sbb
fdivr
xchg
int
or
test
dec
shl
mov
mov
scas
push
add
test
dec
pop
pusha
or
punpcklbw
adc
lods
push
jmp
add
push
movs
xor
dec
add
imul
imul
js
in
sbb
mov
jmp
out
xor
fwait
in
sub
xchg
sub
repz
addr16
push
cdq
inc
imul
fldenv
sbb
fnstsw
inc
dec
pop
dec
sub
ins
xchg
cdq
ficom
in
xor
scas
in
fnstenv
repz
inc
xlat
mov
push
dec
shl
jne
jecxz
jb
(bad)
cwde
aaa
out
push
loope
ret
inc
call
inc
sbb
push
push
scas
(bad)
loope
fld
ficomp
imul
ja
inc
jno
ins
les
aaa
jb
dec
fsubrp
nop
data16
sbb
das
mov
mov
dec
sub
int
pusha
ret
xchg
xchg
mov
dec
div
push
sti
mov
cwde
lock
sti
imul
or
push
push
dec
shl
adc
(bad)
sbb
mov
mov
(bad)
xchg
pushf
in
or
outs
adc
push
js
loopne
jmp
mov
dec
or
and
bound
jg
sar
cmp
fld
pop
cmp
dec
xlat
lods
sub
jp
ins
int3
sti
iret
das
push
int3
ss
sahf
sbb
dec
out
call
adc
push
sti
pop
int
test
movs
idiv
push
sbb
xlat
pop
loop
pushf
dec
add
mov
lea
sti
shr
dec
pop
out
or
add
sahf
std
icebp
pop
mov
mov
jmp
mov
popf
sbb
sub
rcl
add
call
pop
mov
inc
movs
jg
mov
rol
popa
mov
sub
ins
adc
rcl
mov
stos
cmp
rol
in
and
out
sub
and
xchg
or
popf
fmul
inc
out
mov
or
mov
push
sbb
and
push
retf
js
imul
xor
pop
pop
lods
daa
data16
or
dec
fisttp
mov
mov
fiadd
(bad)
lods
mov
jne
mov
or
jl
add
repz
enter
dec
daa
fwait
lods
sahf
and
cmps
inc
retf
pop
or
jo
dec
jl
out
popa
retf
push
jb
mov
int
jae
(bad)
aad
jecxz
dec
jl
call
mov
xchg
push
mov
cmp
cmp
push
cdq
out
fwait
mov
xchg
fdivr
push
sahf
test
xchg
mov
es
stos
mov
sub
(bad)
(bad)
xor
mov
cmp
out
addr16
mov
mov
push
lock
(bad)
cmps
mov
xchg
or
push
add
je
retf
add
xchg
sti
arpl
mov
sub
mov
mov
or
pushf
jmp
(bad)
mov
adc
cdq
nop
mov
mov
cli
push
ins
push
add
add
inc
lock
push
(bad)
mov
test
out
mov
inc
pusha
pop
or
mov
imul
xchg
out
sub
jo
scas
stos
fisub
in
push
cmps
push
ds
and
push
int
pand
pop
outs
cld
sti
mov
leave
test
and
push
cmps
adc
xor
xchg
pop
push
inc
cmp
mov
jmp
mov
jns
out
arpl
pop
retf
out
retf
inc
mov
and
xchg
sub
mov
sub
add
push
push
gs
xor
pop
imul
retf
js
or
and
arpl
loop
test
stc
jb
cmp
hlt
call
ins
xor
shl
lods
pushf
cmps
(bad)
push
bound
dec
xor
fnsave
(bad)
imul
popa
out
and
add
inc
xor
imul
std
cld
aad
xchg
int3
dec
mov
mov
pop
cmp
(bad)
lock
cmp
scas
mov
jbe
mov
(bad)
clc
loopne
(bad)
fcom
outs
mov
popa
test
mov
jbe
test
fsubp
mov
or
mov
scas
dec
adc
jnp
push
mov
dec
inc
pop
dec
sub
rcl
mov
fst
dec
and
xchg
inc
dec
adc
test
inc
add
cmp
gs
nop
ins
nop
es
in
cmps
mov
neg
adc
push
stos
push
fidiv
or
inc
pop
xchg
pop
xchg
scas
mov
pop
or
out
adc
mov
out
jle
pop
or
xor
xchg
popa
push
fstp
xchg
push
popf
inc
dec
stc
xchg
xor
loope
inc
out
call
cmp
xchg
jle
cld
dec
mov
sub
sub
cwde
movs
or
sbb
imul
cs
cmps
js
cmp
test
sub
mov
sub
jb
loope
inc
jmp
push
push
in
push
mov
xor
sahf
inc
jl
pop
jo
push
and
jl
je
dec
adc
neg
sbb
mov
repz
sub
movs
sub
aaa
adc
stc
jl
loop
shl
dec
push
fcom
push
cmp
xor
(bad)
iret
aam
std
mov
shl
mov
nop
add
push
push
aad
les
and
call
push
push
and
aam
sub
lods
mov
leave
add
vpaddusw
sub
movs
mov
das
test
dec
mov
out
jnp
adc
outs
push
sbb
mov
jle
pop
jb
outs
dec
sub
or
cwde
cmp
mov
jae
and
jae
je
into
adc
cmc
mov
fdivr
arpl
mov
pop
stos
daa
add
outs
add
repnz
mov
fwait
or
mov
add
out
push
sbb
push
push
jge
add
(bad)
mov
enter
dec
jle
fsubr
fldenv
mov
xchg
lds
ss
jle
nop
mul
jg
sub
test
lock
jle
arpl
push
add
ss
icebp
push
cli
mov
sbb
jno
scas
dec
out
ror
popf
js
push
adc
inc
movs
xchg
xchg
(bad)
ins
and
loope
push
inc
test
inc
test
add
mov
inc
pop
push
sbb
cmp
imul
adc
imul
jb
pop
(bad)
pushf
fcmovbe
xor
fs
xor
in
stos
push
mov
(bad)
ret
mov
jo
dec
retf
jecxz
jmp
mov
pushf
sub
and
xor
pushf
dec
ret
stc
adc
sar
add
jge
add
sub
fucomp
mov
cli
in
aaa
lods
rcr
add
push
test
xchg
popa
aam
cdq
mov
jb
fmul
cmp
pop
gs
aam
leave
cmc
out
fdivr
sbb
das
js
pop
rcr
lods
mov
adc
movs
or
push
(bad)
aam
in
xchg
sbb
repnz
or
xor
sbb
loop
popf
push
xchg
inc
pavgw
enter
fisub
adc
imul
inc
in
aad
test
lahf
or
xor
dec
or
aad
jmp
jl
out
inc
pop
ret
aas
jmp
sahf
dec
imul
add
cmp
xchg
sub
cmp
mov
mov
xor
jne
push
inc
aad
lahf
add
stos
mov
mov
lahf
xchg
add
push
movs
aam
bound
jg
jbe
(bad)
sbb
shl
dec
test
and
and
repnz
lods
jge
ret
loop
ror
or
mov
shl
sub
test
pop
dec
pop
pop
xchg
push
and
adc
or
fnsave
xchg
and
or
stc
add
xlat
inc
xchg
ja
popf
aam
adc
cmp
inc
lock
pop
dec
mov
scas
(bad)
push
into
pop
mov
mov
sub
es
sub
test
and
sub
or
sbb
jp
dec
scas
jne
ret
data16
call
xor
shl
dec
and
mov
std
mov
fild
dec
jno
jne
ja
xchg
mov
(bad)
stc
bound
loopne
push
xor
mov
inc
cmp
popa
hlt
jb
cld
stc
mov
es
in
mov
imul
loop
and
and
nop
outs
aaa
adc
jo
adc
add
mov
in
adc
push
fist
fcmove
fwait
dec
movs
sub
jle
aaa
aaa
and
dec
xchg
aas
pop
push
add
jbe
outs
in
out
sub
call
stos
mov
pop
data16
push
lds
mov
adc
adc
cmps
lock
shr
test
lods
pop
test
jb
fiadd
xchg
mov
dec
call
pop
loop
(bad)
ds
and
inc
cmp
cwde
adc
int3
inc
lahf
adc
push
add
jge
std
lea
fiadd
in
iret
sub
pop
cmp
pop
(bad)
iret
jb
dec
cmp
es
loope
imul
and
lods
mov
cmps
sbb
jle
pop
ins
repnz
test
sub
adc
hlt
daa
loop
dec
(bad)
pusha
and
in
mov
pushf
popf
and
mov
lods
(bad)
push
or
imul
repz
mov
push
stos
not
mov
inc
mov
imul
xchg
cmc
hlt
in
add
mov
xchg
inc
cmp
neg
mov
fisub
xchg
loop
mov
add
mov
ins
xor
sbb
scas
or
mov
out
out
sbb
cmp
and
xor
cmp
popa
ret
push
leave
mov
and
imul
imul
(bad)
fadd
out
int3
lds
pushf
jmp
ret
mov
ror
sub
mov
xor
push
test
mov
sbb
(bad)
fwait
or
(bad)
adc
cmp
cmc
out
dec
sub
retf
mov
adc
dec
sbb
and
(bad)
sub
xchg
sub
inc
ja
cmp
fcom
cmp
scas
push
pop
cmps
lods
lods
sbb
aad
or
mov
outs
and
enter
pop
add
int3
inc
lea
mov
outs
jns
inc
push
(bad)
icebp
inc
inc
vlddqu
loopne
jae
mov
and
ins
jp
jo
sbb
adc
xchg
out
mov
sbb
call
or
leave
fsub
aaa
call
push
inc
gs
or
das
data16
fst
popa
or
call
fisttp
mov
mov
pop
(bad)
popf
inc
retf
stos
pusha
in
fild
inc
stc
je
retf
dec
pop
(bad)
in
xor
add
push
ror
aaa
popa
aam
daa
jo
test
ins
inc
cdq
push
add
jge
aas
jnp
or
fild
aam
dec
lahf
outs
ficom
pop
data16
inc
xchg
sbb
sub
xchg
or
aaa
jmp
xor
stc
mov
adc
in
shl
add
mov
adc
mov
(bad)
jge
xchg
xor
xor
jge
mov
sbb
out
jmp
cs
inc
add
mov
xchg
cmp
into
adc
dec
dec
lods
imul
daa
mov
adc
aas
push
dec
add
adc
cmp
add
(bad)
adc
sbb
sub
xlat
ss
mov
daa
xchg
retf
mov
xchg
cwde
lds
cld
clc
jl
and
inc
hlt
stc
outs
and
ret
pop
in
inc
sti
or
clc
lock
mov
sbb
ja
je
stos
dec
(bad)
sbb
dec
inc
iret
add
in
shl
sub
mov
cmp
outs
sub
or
pop
add
rol
sbb
bound
(bad)
shl
dec
push
xchg
mov
cdq
sbb
mov
push
hlt
pusha
mov
push
fidivr
ds
rol
les
das
cmc
and
mov
add
inc
shl
ret
dec
adc
jg
or
or
int
xchg
ficom
cmp
mov
int3
sub
clc
jbe
jmp
ret
jp
push
ss
sbb
loop
out
cmps
push
inc
int
xor
punpckhwd
leave
mov
retf
sti
fstp
aad
jbe
std
cli
cmp
mov
cld
dec
xor
and
fist
xchg
dec
mov
cmp
stos
pop
push
leave
iret
lods
sbb
push
inc
cmp
jmp
jecxz
mov
push
popf
imul
adc
inc
enter
(bad)
iret
dec
xor
pop
adc
sub
sbb
cdq
cmp
jecxz
(bad)
ror
adc
sub
cmp
movs
push
cmp
leave
cmp
adc
sbb
std
xchg
ins
js
(bad)
call
jnp
dec
sub
sbb
sub
cmc
xor
outs
das
nop
cmps
int3
(bad)
jb
mov
clc
push
sbb
js
ret
or
cmp
xor
xchg
xchg
xor
sbb
xor
cmp
test
push
pop
xchg
test
sub
sub
jecxz
mov
pop
cmp
pop
hlt
sub
arpl
pop
mov
js
add
push
mov
aam
mov
dec
mov
inc
push
mov
xor
loop
leave
lods
(bad)
fucomip
out
sbb
push
or
js
mov
lds
mov
add
sub
push
fnsave
and
out
xor
pop
mov
mov
loope
into
dec
mov
outs
add
add
clc
hlt
inc
repz
fcom
pusha
pop
add
xchg
in
inc
lahf
fsubr
mov
ret
jl
shr
ds
or
jp
lea
jg
dec
push
call
mov
test
loop
lds
push
arpl
push
jns
pop
xchg
pop
mov
add
in
xchg
add
push
jbe
jne
movs
jmp
cmps
sub
jmp
(bad)
add
lahf
jbe
mov
out
jle
dec
lea
ficom
iret
mov
out
pop
and
enter
lock
(bad)
std
shl
inc
pop
outs
jo
test
pop
mov
ins
test
retf
cmp
out
retfw
jle
les
inc
dec
fnstenv
xor
xchg
jne
shr
mov
mov
aas
push
(bad)
loopne
test
mov
movs
movs
push
iret
mov
data16
imul
shl
sub
xor
pop
movs
inc
jmp
push
movd
ret
cld
call
fcomp
cmp
push
pop
adc
add
pop
rcl
mov
xchg
sub
add
test
mov
push
add
lods
je
jle
scas
push
lds
arpl
(bad)
push
mov
pop
mov
cld
enter
aaa
mov
mov
lock
mov
lods
xchg
mov
cs
dec
cli
xchg
(bad)
repz
mov
pop
outs
mov
ins
mov
mov
cs
das
push
xor
test
into
loope
inc
jo
pushf
push
pop
adc
in
cld
pop
and
(bad)
sub
ss
iret
pop
hlt
rol
or
dec
(bad)
les
dec
push
nop
inc
push
push
aas
nop
xlat
sbb
pop
int3
xchg
ja
jbe
xor
pop
pop
mov
retf
xlat
stos
mov
fwait
xlat
pop
mov
gs
int
inc
push
mov
sbb
push
add
or
and
xchg
push
xchg
cld
mov
das
stc
xor
mov
cmp
sbb
xor
or
mov
xchg
(bad)
jmp
cmp
movs
xchg
outs
jl
adc
stc
add
cmp
cs
add
pop
rol
xor
sub
inc
cmp
push
mov
neg
xchg
add
cld
pop
cmp
push
sub
adc
mov
(bad)
jmp
pop
imul
fwait
in
iret
lahf
sbb
pop
ds
pop
movs
mov
cmp
mov
jmp
sbb
ficom
clc
push
jns
and
sbb
lock
aas
iret
xlat
mov
mov
rcr
push
popf
pop
fidiv
mov
gs
cdq
push
push
scas
jge
out
mov
sahf
shl
mul
ds
shl
adc
or
sub
pop
stos
call
mov
or
pop
fidiv
cmp
(bad)
xchg
jle
jo
xchg
mov
inc
out
and
mov
cdq
xchg
cdq
sub
cmp
add
out
dec
cmps
inc
pop
iret
cmp
cwde
out
repnz
push
push
rol
sub
fld
lods
scas
or
mov
xor
add
es
nop
cmps
gs
mov
inc
dec
fild
inc
popa
repnz
push
adc
xor
scas
sbb
hlt
lahf
sub
sub
ss
dec
cmp
cmp
daa
pusha
cmp
push
sbb
fst
outs
(bad)
es
test
and
and
sbb
(bad)
pop
das
arpl
inc
int3
pop
pop
pop
in
lahf
gs
push
push
jne
jb
inc
out
dec
jmp
mov
test
out
leave
imul
mov
inc
shl
inc
and
mov
jb
push
loope
sbb
push
add
mov
sub
sti
aad
addr16
xchg
call
push
sub
mov
push
mov
arpl
nop
int3
jg
call
popa
mov
lahf
inc
test
mov
sbb
aam
push
aam
rcr
add
(bad)
ins
sahf
add
mov
xchg
dec
sbb
sub
jecxz
aaa
xor
jne
jp
inc
push
fld
int3
mov
sbb
push
add
shr
mov
aas
arpl
hlt
(bad)
push
sbb
jnp
jge
inc
(bad)
cmp
addr16
(bad)
xor
ins
lea
ret
sbb
sub
js
jmp
lods
out
std
cmc
inc
cmp
push
stc
cmp
sbb
dec
pop
jne
and
mov
sbb
dec
dec
sbb
sbb
pop
pop
ror
mov
test
dec
ins
jg
data16
push
push
hlt
(bad)
fwait
pop
in
inc
mov
movs
push
call
mov
lahf
pop
retf
(bad)
fist
push
jecxz
push
jmp
and
adc
fist
pop
push
xor
inc
mov
or
push
push
stos
xchg
mov
jo
in
fidivr
push
icebp
inc
push
mov
push
aaa
sbb
push
dec
mov
adc
movs
push
adc
stos
repz
pmaddwd
iret
out
(bad)
ins
or
ret
dec
push
(bad)
das
add
push
mov
les
cli
add
mov
adc
adc
cmp
and
scas
adc
cmp
jbe
xchg
mov
idiv
adc
repnz
sti
and
fist
call
(bad)
fmulp
pop
pop
minps
mov
cs
aam
and
ret
or
enter
paddq
push
mov
push
xor
loop
stc
jo
mov
mov
aaa
imul
inc
cs
pop
and
push
pusha
pop
xchg
pushf
in
rcl
xchg
cmp
fsubr
push
rol
pop
mov
cmp
mov
mov
movs
ffreep
fldenv
mov
or
xchg
icebp
mov
sub
xchg
in
add
fisub
into
inc
sub
out
cmc
shl
push
lock
test
pop
xchg
push
mov
push
jmp
or
lods
push
dec
inc
xor
cmps
ss
push
or
(bad)
sub
xor
fsincos
mov
pop
inc
jbe
mov
fadd
ror
adc
xchg
or
pop
std
dec
scas
sbb
(bad)
out
jns
xchg
mov
(bad)
int
and
sbb
aad
and
retf
sbb
cmp
mov
jae
mov
add
xchg
fwait
push
jae
jne
out
sbb
setl
or
(bad)
arpl
jne
test
retf
arpl
idiv
push
inc
push
shr
mov
imul
shl
or
xor
ss
push
addr16
std
or
cli
mov
ins
jno
ins
cdq
imul
mov
add
mov
cs
retf
cmp
movs
mov
(bad)
loop
test
xchg
add
inc
cmp
push
mov
dec
pop
jae
imul
pusha
add
sti
jno
cmp
addr16
popf
jae
push
lods
cmps
clc
stc
outs
int
push
std
mov
pop
jae
fidivr
addr16
daa
int3
xchg
push
or
rcr
xchg
ss
lock
fcmove
sahf
push
cmps
test
in
fidiv
in
iret
and
test
inc
sbb
shl
enter
mov
jge
test
pop
aas
adc
xchg
aas
das
repz
add
test
imul
test
jmp
jmp
mov
xlat
repnz
in
in
adc
mov
sti
call
push
sbb
nop
xor
cmp
call
out
or
iret
dec
mov
push
sub
scas
xchg
mov
out
adc
push
or
mov
mov
stc
lock
cmp
xor
cmp
mov
jo
sbb
(bad)
mov
cli
mov
add
test
xor
in
in
in
imul
pop
scas
imul
stc
mov
pop
call
xor
xchg
out
mov
inc
retf
dec
jnp
push
into
pushf
inc
je
mov
inc
movs
xor
jl
sbb
xchg
and
hlt
das
jecxz
sub
and
bound
popf
add
cli
mov
repz
pusha
mov
push
sub
and
and
fisttp
add
stos
dec
ficom
shl
repz
cmps
arpl
fbstp
xchg
lods
loop
mov
mov
stc
inc
popf
inc
js
jno
adc
cmp
push
sbb
xchg
add
aam
mov
mov
pop
aaa
sbb
inc
inc
pop
mov
jg
enter
xchg
push
adc
cmp
fidiv
push
sbb
mov
out
sub
aad
fnstenv
push
fst
inc
mov
mov
into
sti
add
fcom
push
and
addr16
add
mov
mov
in
cmp
retf
mov
cmp
out
call
pop
xor
rcr
mov
shl
mov
xchg
call
mov
pop
(bad)
dec
stc
ret
mov
sbb
imul
mov
dec
jns
add
imul
(bad)
out
dec
pop
mov
iret
fst
ja
scas
mov
push
(bad)
into
sub
int3
inc
(bad)
out
test
push
dec
fdivrp
mov
inc
out
sbb
adc
addr16
pop
enter
sahf
xchg
jo
hlt
mov
fidiv
push
sub
loopne
sbb
ins
pop
jae
or
lea
retf
scas
aam
outs
xchg
xchg
daa
dec
pusha
or
idiv
xchg
mov
scas
push
push
cwde
xchg
in
data16
clc
int
out
jg
aas
imul
into
cld
repz
push
out
pop
pop
in
stos
push
adc
loope
dec
jno
mov
jg
fnstsw
add
mov
jl
sahf
xchg
ds
(bad)
outs
pop
cmp
mov
scas
outs
mov
hlt
scas
inc
out
dec
jns
shl
fiadd
(bad)
jmp
lods
retf
daa
mov
push
sbb
xor
pop
mov
ficomp
test
fxch
cmp
(bad)
(bad)
pop
pop
mov
cmc
mul
loope
lahf
mov
shr
pop
(bad)
xchg
xchg
sbb
sbb
ja
cmp
and
pop
pop
mov
lea
mov
xor
pop
imul
mov
imul
fbstp
mov
rol
call
xor
and
mov
fidivr
mov
mov
(bad)
scas
call
and
push
(bad)
sub
loop
fnstsw
mov
aad
icebp
cmp
cwde
(bad)
imul
retf
add
jg
rol
dec
sahf
and
push
jno
sub
test
push
xchg
ja
(bad)
sub
dec
and
(bad)
pop
xchg
sub
ins
out
out
test
and
mov
adc
or
test
xor
push
pusha
lds
mov
sbb
nop
jno
mov
cmps
shl
pop
add
cmc
mov
iret
push
sahf
cdq
sbb
cld
and
dec
ds
push
pop
dec
or
jns
call
jge
fs
out
in
(bad)
lgs
sub
in
jns
xchg
fcom
pop
call
and
push
nop
or
cmps
inc
pusha
or
mov
jg
sbb
(bad)
movs
push
sbb
cmc
sub
add
cmovge
mov
dec
daa
or
scas
dec
sub
(bad)
icebp
mov
inc
or
jbe
jb
xor
out
jl
test
mov
sbb
jmp
push
adc
mov
inc
or
bound
jbe
popa
fimul
movs
and
pop
xchg
out
std
adc
outs
push
or
fs
jns
push
ja
sbb
push
or
inc
jge
je
ret
daa
push
(bad)
rcl
pop
mov
cli
ret
aas
pop
mov
mov
mov
mov
adc
push
rol
mov
jmp
aad
xchg
mov
inc
test
push
ds
sbb
mov
xchg
jecxz
ds
mov
movs
mov
or
xchg
stos
call
jle
jbe
aad
test
jno
or
pop
inc
arpl
div
clc
cmps
cmps
aaa
add
ret
pop
dec
jecxz
dec
(bad)
loop
cmp
or
iret
sbb
jle
test
add
add
scas
dec
inc
cmp
cmp
jmp
jns
fdivrp
in
jecxz
push
jns
inc
ror
mul
pop
pusha
pop
fidivr
(bad)
rcr
in
jmp
test
sub
mov
sahf
push
icebp
push
sub
xor
in
into
(bad)
jmp
ret
pop
nop
rol
xor
cmp
jp
pop
aaa
clc
iret
repz
loope
fsub
add
jmp
test
xor
bound
mov
sbb
dec
push
adc
sub
retf
ffreep
aaa
pop
mov
mov
push
jbe
stos
ss
test
xor
push
adc
mov
xchg
aad
retf
add
fild
xor
in
unpckhps
mov
addr16
ret
jle
movs
enter
dec
test
mov
push
jp
sbb
lds
scas
ror
mov
jp
ret
fisttp
jbe
ret
push
sub
xchg
jns
call
scas
mov
int
xor
aas
mov
ins
push
cmp
(bad)
push
add
mov
sbb
and
imul
xchg
les
dec
jbe
scas
fiadd
xlat
jo
adc
or
or
inc
dec
das
and
push
out
xor
mov
call
mov
not
call
mov
adc
or
jbe
mov
push
pop
push
inc
sub
jl
(bad)
adc
(bad)
lock
sbb
scas
mov
inc
mov
mov
sti
add
and
outs
mov
xchg
sub
dec
mov
ret
cdq
push
rol
outs
lahf
jge
pop
movs
iret
fwait
popa
and
push
push
mov
rol
popa
dec
or
pushf
inc
jne
das
leave
aaa
inc
imul
jmp
and
jnp
ficom
jns
push
jns
and
ds
cmps
sbb
mov
push
repz
xchg
cmp
lods
lock
movs
jbe
cmp
fwait
rol
add
cmps
dec
pushf
mov
xor
lahf
fist
jno
in
jnp
out
inc
lods
test
retf
add
nop
stc
pop
cs
add
iret
lea
dec
cmp
pop
ds
in
imul
jne
mov
adc
stos
pop
rcr
into
cli
and
dec
inc
mov
in
repz
mov
xlat
ja
xor
les
jo
out
add
xchg
cld
jbe
adc
inc
and
inc
push
xor
or
add
inc
xchg
inc
dec
lods
call
xlat
(bad)
jbe
sahf
pop
addr16
(bad)
lods
lds
jo
(bad)
and
sub
lock
pop
mov
mov
jo
in
jae
mov
mov
(bad)
fimul
addr16
pop
push
mov
out
movs
cli
nop
mov
(bad)
push
and
neg
pusha
jne
out
pop
cmp
test
fidivr
div
mov
cdq
into
sahf
xor
test
fwait
pop
inc
push
sbb
das
sub
movs
lods
mov
es
and
aad
jo
cmp
pop
jne
push
and
jmp
mov
fistp
cmp
mov
nop
(bad)
mov
mov
cmp
jle
add
ss
pop
loope
jnp
and
cli
inc
mov
pop
jle
sbb
int3
sbb
jnp
(bad)
pusha
push
add
hlt
daa
pop
jne
dec
stc
and
sub
int3
pop
aam
gs
jmp
push
push
or
loop
mov
or
pop
xor
mov
icebp
in
inc
outs
adc
mov
mov
loope
fdivr
mov
outs
inc
lea
loop
mov
scas
scas
jbe
push
or
imul
mov
mov
inc
cdq
fadd
std
sub
mov
mov
inc
leave
fidiv
aad
xchg
mov
push
shr
mov
stos
mov
inc
ins
push
dec
jo
push
jmp
or
lods
dec
mov
leave
jp
les
dec
popa
fmulp
lock
xor
clc
cmp
rol
cmp
inc
les
retf
stos
bound
(bad)
ins
lea
push
js
xor
in
and
xor
cmp
or
loope
or
sub
dec
sub
jge
sbb
retf
mov
xor
sbb
mov
test
mov
push
inc
les
mov
call
mov
push
dec
cmps
mov
nop
mov
in
jno
mov
ds
je
(bad)
movs
imul
test
nop
cmp
jmp
movs
cmps
gs
push
jmp
scas
sbb
aam
jo
(bad)
(bad)
mov
add
(bad)
mov
mov
push
rcl
push
test
pop
push
adc
mov
inc
fwait
dec
outs
push
enter
(bad)
inc
jb
mov
int
mov
mov
mov
sbb
iret
xchg
xor
cmp
push
imul
mov
js
fmul
pop
cdq
sub
stos
xchg
int3
add
(bad)
test
sbb
jmp
leave
loope
dec
pushw
or
(bad)
sbb
or
push
push
call
inc
sub
mov
or
arpl
sub
pusha
(bad)
jmp
out
mov
pushf
inc
popf
and
(bad)
add
jo
stos
stos
cmp
sbb
fild
mov
mov
dec
push
jge
xchg
or
sub
pop
inc
(bad)
outs
in
mov
fwait
xor
lock
dec
cmp
loopne
lahf
fdiv
lea
mov
pusha
push
xor
daa
sbb
sub
ja
cmp
add
fimul
xor
dec
mov
fldln2
test
dec
out
mov
add
(bad)
rcr
push
out
xchg
sbb
dec
jle
scas
or
and
fwait
xchg
inc
mov
mov
xchg
jecxz
cmp
sub
retf
pop
out
lahf
lods
sub
and
lea
fmul
mov
jmp
popf
std
idiv
scas
ffreep
jg
jle
cmps
mov
push
xor
int3
pop
dec
stos
or
push
push
retf
mov
fild
lods
push
test
repz
in
mov
adc
xor
sub
jmp
xor
fiadd
into
or
adc
and
xchg
pop
xor
not
sub
daa
jp
mov
push
xchg
xchg
dec
fiadd
inc
retf
cs
(bad)
sti
(bad)
mov
xchg
mov
mov
pop
jmp
and
or
retf
and
in
jecxz
clc
xor
xchg
cmp
jmp
les
repnz
mov
pop
das
hlt
test
push
js
mov
xchg
push
or
add
or
add
leave
pop
and
outs
popf
inc
cli
xlat
cdq
pop
mov
pop
test
sar
ds
or
mov
in
add
movs
sbb
dec
ss
fwait
sub
mov
add
xor
mov
inc
jmp
test
jp
xor
cmp
cmp
jne
stc
clc
nop
inc
(bad)
fmulp
(bad)
int3
gs
mov
adc
sub
adc
sub
push
pop
jmp
xchg
xlat
cmp
jecxz
push
jecxz
in
mov
ins
shl
les
add
jno
add
push
sbb
fistp
test
loopne
or
sub
mov
hlt
dec
call
nop
sbb
loop
xor
fadd
mov
cmp
fidivr
pop
icebp
or
in
inc
push
ror
cmps
xlat
retf
push
sub
sahf
xor
lds
out
aaa
mov
add
sbb
arpl
in
rcl
xlat
pop
or
rol
popf
jmp
repnz
enter
shl
and
cmc
mov
jne
mov
xor
ins
dec
xor
sbb
sub
add
pop
nop
and
outs
jmp
push
(bad)
mov
jecxz
int
call
add
cmp
shl
(bad)
retf
rol
inc
fld
cmp
nop
int3
xor
cmp
enter
fist
data16
xor
add
xchg
pop
lods
cs
or
outs
jmp
in
and
mov
int
add
das
jp
mov
mov
repnz
shl
fisubr
loop
adc
aad
std
inc
daa
shl
or
jmp
sbb
fwait
mov
add
cdq
inc
std
fld
imul
xchg
sub
adc
dec
pop
mov
inc
repnz
xchg
rcr
push
jb
repnz
pop
out
adc
sub
or
adc
lahf
sbb
out
sbb
lahf
dec
and
retf
stc
mov
adc
bound
pop
inc
add
pop
ja
shr
dec
hlt
mov
stos
push
mov
lahf
inc
pop
test
fdiv
jne
mov
and
mov
xchg
hlt
icebp
shl
jmp
mov
hlt
rcl
and
test
xchg
repz
fisttp
lahf
test
or
add
loop
add
mov
(bad)
jl
add
ja
in
shr
push
or
fs
xchg
fisttp
test
adc
outs
pusha
mov
shl
and
jns
retf
add
jl
stos
xlat
ror
and
pop
outs
int
mov
pop
mov
mov
(bad)
pop
dec
push
daa
xchg
inc
cdq
add
or
mov
sbb
scas
jge
sub
sub
xchg
in
jb
outs
cmp
xor
mov
les
sbb
icebp
out
mov
jbe
push
pop
mov
cmps
jo
idiv
test
outs
pop
jb
movs
xor
push
sti
scas
cs
test
xor
loop
pop
pushf
mov
mov
xchg
rol
pop
adc
gs
in
sub
mov
xor
cmp
outs
dec
sbb
push
mov
gs
(bad)
fcomp
cmp
pushf
scas
dec
inc
popa
test
mov
jmp
in
mov
cmp
test
jnp
outs
imul
bound
rcr
icebp
mov
xor
test
push
adc
pop
iret
jecxz
call
dec
sbb
leave
pusha
or
fadd
test
jecxz
rcr
fsubr
mov
inc
xor
mov
mov
jnp
mov
cmc
enter
into
or
(bad)
dec
adc
xor
mov
mov
xchg
xchg
loope
in
pop
cld
pop
pop
shr
js
dec
add
mov
jae
movs
or
pop
mov
jmp
jb
ss
jo
xor
pop
jmp
mov
xchg
movs
(bad)
mov
aad
out
fadd
adc
sbb
xor
idiv
cdq
cdq
adc
cmp
or
stos
hlt
push
js
jno
das
push
mov
movs
jne
xchg
sti
sbb
inc
mov
retf
pop
mov
fcmovnu
test
or
xchg
mov
stos
inc
rcl
mov
scas
pop
mov
(bad)
or
mov
xchg
xchg
dec
and
mov
or
adc
int
cli
mov
sub
pop
sbb
jg
inc
cld
sbb
or
push
add
mov
pushf
jp
or
push
dec
dec
fld
mov
xchg
adc
stos
je
mov
enter
loope
xor
jmp
xchg
push
fnsave
add
jle
nop
fnstcw
movs
xchg
outs
xlat
mov
pop
fs
push
out
pop
xchg
mov
add
mov
lea
jnp
jnp
or
inc
shl
dec
adc
or
jmp
add
rcr
mov
aam
fiadd
xor
out
call
dec
in
mov
iret
gs
ror
fisttp
ret
inc
arpl
frstor
push
push
enter
pusha
pusha
adc
pop
mov
test
push
mov
ins
stos
rol
test
add
out
dec
dec
inc
addr16
test
es
data16
pop
cmp
popf
loopne
scas
mov
bound
add
lock
(bad)
jmp
std
jmp
loopne
mov
or
xchg
dec
sub
push
lods
lahf
inc
lods
jmp
addr16
and
mov
xor
inc
mov
mov
jbe
add
push
ins
adc
cmp
mul
add
xchg
mov
test
add
adc
xor
adc
cmp
jne
add
inc
push
test
and
add
or
mov
dec
fist
cmp
ja
push
add
xlat
push
adc
ins
sbb
pop
(bad)
push
xchg
lods
jbe
or
outs
mov
ins
adc
sbb
in
aas
in
push
shl
sub
xor
inc
xchg
cdq
inc
add
cld
ss
push
mov
(bad)
pop
out
push
jb
test
mov
push
mov
repz
pop
call
iret
clc
ds
loope
fwait
aad
inc
sbb
xchg
pop
outs
or
loopne
cmp
ror
cld
inc
lahf
jae
lahf
dec
and
jmp
add
cmp
retf
jecxz
inc
dec
cmp
xor
cli
xor
call
jne
mov
sti
cmp
push
xor
jno
cmp
add
cli
aad
dec
cmps
adc
cmps
test
outs
xor
les
adc
fsub
sbb
xchg
cmp
inc
and
sbb
mov
push
cmp
popa
or
pushf
mov
dec
inc
jne
shl
sub
iret
push
and
movs
out
pop
mov
dec
adc
push
jmp
test
leave
mov
push
cmp
sar
outs
arpl
lods
fidiv
stos
xchg
jge
push
sbb
lea
adc
sub
xchg
mov
scas
sub
pop
icebp
repz
or
jmp
aad
xchg
je
push
imul
sbb
sbb
sbb
inc
in
addr16
pop
(bad)
call
(bad)
or
loope
ss
retf
sti
and
or
dec
lahf
outs
mov
repz
jmp
cmp
pop
pop
cwde
shl
xchg
into
bound
add
push
sub
(bad)
mov
or
popa
je
icebp
ins
dec
mov
and
xchg
pop
inc
xlat
lahf
aas
mov
cs
aad
xor
aam
xor
mov
push
push
mov
inc
mov
inc
sbb
nop
sub
stc
int
leave
loop
inc
rcl
out
popa
mov
xchg
jb
fwait
xor
pusha
fwait
lock
jnp
or
xlat
xor
sub
adc
es
scas
lds
inc
dec
sar
ret
pop
mov
cmp
(bad)
or
mov
jno
fdivr
sbb
dec
push
jno
sbb
jns
mov
arpl
or
(bad)
xchg
dec
popf
pop
add
sub
repnz
mov
movs
xor
dec
and
add
call
clc
mov
or
cmp
test
and
dec
cmc
cmp
cmc
lods
and
add
js
mov
jbe
movs
and
mov
pop
jmp
push
mov
aaa
inc
dec
push
jne
jl
fwait
mov
or
inc
idiv
(bad)
pop
xchg
(bad)
in
mov
xchg
js
xchg
mov
sub
mov
ss
jge
ret
jp
jp
sub
int
push
dec
xchg
add
sahf
mov
ret
sub
and
outs
xor
(bad)
sti
inc
sub
outs
es
leave
push
daa
inc
sbb
xchg
(bad)
inc
retf
fidivr
pop
mov
dec
(bad)
push
into
retf
cmp
fldcw
int
mov
dec
pushf
cld
xchg
aam
mov
shl
or
in
xchg
das
dec
push
iret
iret
loope
dec
mov
inc
jecxz
repz
shl
cwde
xchg
or
mov
cmp
mov
lock
fmul
(bad)
adc
mov
jb
mov
push
xor
push
sets
retf
mov
lds
(bad)
cmp
push
mov
xor
add
nop
loope
icebp
stos
sub
cmps
adc
scas
sub
fidivr
push
dec
mov
jecxz
mov
pusha
mov
sbb
mov
test
sub
arpl
adc
push
or
sbb
or
fcom
pop
mov
dec
retf
dec
lods
or
and
adc
sar
sbb
jecxz
(bad)
mov
inc
pop
stc
jmp
rcl
stos
mov
sbb
fnsave
(bad)
sbb
rcr
div
sub
push
jl
mov
dec
int3
inc
ins
jge
xor
into
lods
sbb
ins
sub
xor
lods
loopne
and
imul
into
pop
cmps
imul
cmp
mov
push
mov
sbb
enter
test
je
into
ins
xor
arpl
retf
cmp
mov
cmp
adc
imul
lods
retf
stc
push
rcr
xchg
add
dec
dec
push
sti
and
jmp
mov
inc
xor
test
(bad)
pushf
into
stos
push
mov
fcomp
dec
pushf
mov
aad
in
cli
dec
test
inc
arpl
sbb
push
data16
clc
sub
xchg
ds
retf
loope
loop
out
call
cmp
jp
pop
stos
jb
les
xchg
fsubr
fadd
mov
add
fnstcw
ror
pushf
xor
jmp
jecxz
js
movs
or
pop
adc
sbb
pop
pop
stos
daa
js
out
pop
push
xchg
fistp
sti
addr16
test
(bad)
icebp
pop
add
adc
(bad)
clc
out
add
pop
dec
inc
ss
mov
xchg
jbe
repnz
enter
xor
and
neg
scas
cmps
jae
lea
mov
pop
push
xchg
mov
inc
add
es
dec
clc
add
mov
repz
cmp
shl
lahf
jp
xchg
and
imul
sub
scas
lahf
jmp
fsub
xor
sub
cmps
push
(bad)
cmp
cmps
loopne
jb
xchg
ja
fwait
jg
and
ficom
mov
jle
(bad)
in
data16
xlat
retf
das
inc
ins
add
frstor
or
daa
jo
ret
ja
cmp
push
mov
ins
mov
pushf
mov
popa
jle
mov
xchg
mov
shr
xor
mov
and
or
or
call
and
or
pop
(bad)
jmp
and
outs
stos
or
pop
inc
xor
movs
les
aam
imul
pop
mov
mov
test
ja
outs
dec
cmc
fmul
mov
mov
fstp
daa
adc
cmc
xchg
and
leave
scas
inc
mov
or
gs
mov
out
and
(bad)
imul
je
mov
add
es
xchg
dec
push
push
mov
xchg
cdq
and
mov
sub
mov
mov
imul
lock
xor
daa
fisttp
and
cmps
lods
mov
xor
jmp
xchg
out
daa
cs
add
in
mov
cs
and
push
xchg
in
xor
hlt
in
xor
lock
test
or
(bad)
mov
xchg
out
push
jmp
enter
push
or
cwde
lods
ja
add
loopne
nop
cmp
mov
or
xor
hlt
mov
push
cmc
(bad)
mul
and
fimul
cmp
push
mov
sbb
xchg
adc
mov
repz
in
lea
outs
lods
jb
xor
mov
loope
sbb
loopne
mov
inc
in
jno
and
aaa
dec
and
adc
push
arpl
or
push
jl
mov
jle
stc
fwait
mov
jne
ror
mov
jmp
pop
in
lock
imul
jg
test
cwde
cmps
xchg
fwait
stc
mov
lahf
sub
adc
xchg
adc
xchg
add
adc
call
sbb
aaa
push
das
xchg
pop
lods
fcmovu
mov
mov
lods
or
out
pop
out
addr16
out
xchg
je
lods
rcr
pop
adc
cmp
mov
mov
(bad)
sub
push
jle
mov
inc
mov
lock
pop
ds
sbb
lahf
data16
adc
pop
(bad)
xchg
movs
in
sub
into
or
inc
push
clc
scas
aas
push
or
xchg
mov
call
xor
jb
rcr
not
pop
push
mov
leave
cld
fldenv
pop
not
test
inc
call
inc
add
mov
add
mov
loope
movs
stos
das
and
sub
jno
adc
into
and
int
(bad)
mov
add
cdq
popf
and
xor
push
and
out
int3
ins
fadd
pop
sub
fsub
js
inc
enter
dec
jge
dec
add
mov
push
jbe
loopne
inc
mov
pop
cmp
xor
sub
mov
mov
cli
adc
pop
(bad)
xchg
adc
sbb
loop
mov
jbe
inc
push
pop
cmps
(bad)
push
cmp
repnz
push
sub
cli
movs
test
cs
mov
and
retf
jnp
stos
pop
leave
mov
push
dec
push
push
sub
int
mov
leave
xchg
sub
imul
cmp
(bad)
jecxz
pushf
xchg
shl
or
or
outs
cli
sub
es
xor
cld
mov
ja
dec
aaa
das
daa
jnp
mov
pop
mov
mov
retf
ss
iret
movs
push
and
sub
jle
lahf
xchg
inc
mov
mov
mov
pop
xchg
mov
and
out
mov
pop
loopne
mov
sbb
sub
int
dec
lahf
lahf
imul
xor
and
dec
adc
fild
mov
call
mov
mov
fwait
js
and
xchg
ret
pop
movs
in
jnp
data16
jo
daa
scas
ja
arpl
jbe
fidivr
cs
cmp
or
inc
shl
mov
shl
mov
inc
cli
aam
jae
mov
idiv
push
push
mov
and
aas
enter
sbb
aaa
xchg
movs
mov
sbb
ds
into
dec
push
xor
jp
pop
sbb
sbb
(bad)
mov
imul
cmp
pop
(bad)
retf
dec
sbb
hlt
out
aaa
jbe
push
mov
sar
xchg
out
pushf
or
push
mov
lahf
mov
aad
mov
xor
inc
and
push
dec
adc
scas
mov
and
(bad)
nop
(bad)
push
inc
xchg
loopne
(bad)
lahf
mov
fdivr
ja
ja
fbld
cmc
icebp
mov
out
mov
lahf
ss
jge
fadd
dec
les
(bad)
in
sbb
cmp
sub
pop
push
outs
inc
or
and
dec
clc
inc
(bad)
fwait
movs
mov
xchg
scas
fcom
pop
ins
sbb
cmp
mov
or
fbstp
or
mov
and
dec
test
repz
cmc
xor
loopne
sub
jl
test
je
(bad)
sbb
loopne
add
cmp
outs
push
div
add
mov
or
retf
adc
shl
sbb
dec
xchg
xchg
ins
(bad)
call
push
mov
push
sub
xor
add
jle
nop
dec
ds
or
in
push
mov
pop
cmp
ret
push
std
sbb
mov
add
mov
ja
jno
mov
xchg
inc
mov
mov
into
mov
xor
outs
mov
mov
retf
ret
aaa
gs
idiv
dec
xor
cmp
sub
sbb
xchg
mov
sub
mov
or
cmp
cmp
in
movs
cwde
pop
inc
cmp
jecxz
pop
pop
mov
push
mov
lds
jg
repnz
icebp
sub
sbb
hlt
nop
retf
neg
add
sbb
shr
aaa
mov
leave
pop
dec
pop
mov
in
fild
shl
add
dec
ror
fiadd
repz
xchg
cdq
in
mov
push
add
pop
pop
(bad)
mov
fcmovb
sbb
rcr
cmp
and
add
add
jle
jl
sbb
dec
adc
leave
test
cld
add
jle
inc
into
push
sahf
retf
push
stos
jp
push
into
jecxz
enter
mov
mov
jp
push
xchg
mov
dec
out
jmp
aaa
(bad)
test
dec
ja
cdq
mov
adc
dec
fsubr
cmp
push
imul
(bad)
xchg
xchg
test
inc
jg
push
call
popf
out
cwde
out
dec
pop
ds
mov
jae
mov
mov
dec
push
mov
out
jmp
xor
ins
mov
(bad)
push
js
movs
cmps
outs
clc
cdq
sub
dec
inc
addr16
mov
and
jbe
cwde
jmp
mov
ret
popf
sub
repz
(bad)
add
mov
and
popa
sbb
(bad)
inc
fwait
loopne
int
int
outs
stc
nop
jecxz
pop
sub
jo
sub
mov
push
daa
cmc
outs
not
jle
mov
adc
(bad)
daa
fs
push
mov
adc
test
out
stos
adc
mov
popa
or
fldcw
xor
es
jecxz
mov
ror
sahf
dec
push
test
outs
xor
fsub
dec
xor
imul
fwait
inc
call
pop
and
inc
fst
jl
jmp
leave
nop
ror
or
scas
popf
out
lock
jl
jp
fstp
cs
cmp
sub
sub
jecxz
nop
aam
pop
jmp
imul
mov
jl
add
lock
sub
ins
stos
cdq
inc
or
and
pop
dec
push
dec
and
xchg
imul
sbb
pop
ret
inc
fist
dec
cmc
xlat
dec
ins
sbb
fstp
cmp
imul
push
jge
sub
pop
in
mov
fimul
inc
sub
jmp
addr16
or
imul
push
mov
adc
aad
adc
icebp
fcomp
mov
and
sbb
push
push
sub
mov
out
clc
xor
mov
iret
ror
dec
(bad)
in
jbe
call
mov
(bad)
mov
ficom
rcr
dec
jmp
mov
xchg
icebp
and
sahf
fadd
lahf
sub
pusha
out
jns
xchg
or
push
mov
jno
fs
pushf
mov
cdq
jge
stos
sub
rcl
idiv
xor
out
out
mov
mov
sub
add
xchg
cmp
mov
inc
es
sub
lds
loopne
das
ja
in
jb
std
adc
popa
xlat
and
cs
push
pop
arpl
stos
or
fadd
push
es
inc
repz
(bad)
xor
push
aaa
inc
out
mov
jno
add
pop
ret
sar
js
sub
je
mov
data16
dec
lahf
add
outs
pop
push
test
push
les
cdq
ret
pusha
sbb
pop
jl
retf
or
jmp
push
inc
sbb
push
psubsw
jne
mov
pop
push
jecxz
inc
(bad)
mov
loop
cmp
cmp
xchg
icebp
xchg
iret
jno
add
scas
sbb
sub
xor
or
mov
mov
add
sub
data16
mov
mov
clc
scas
fstp
or
mov
popa
inc
push
ins
dec
push
shr
loopne
sbb
out
mov
sub
stos
cmp
imul
rcr
inc
mov
adc
call
(bad)
inc
aad
icebp
(bad)
pop
pop
(bad)
out
xchg
stos
add
adc
iret
imul
add
cmp
add
jns
gs
ror
xor
test
imul
cmp
or
sar
dec
pop
daa
daa
jbe
into
(bad)
fdiv
jl
pushf
inc
jb
stos
xchg
push
jl
repz
jne
(bad)
std
out
mov
addr16
lods
mov
mov
jns
ror
mov
jae
loope
dec
ss
sub
sub
jno
jle
int
call
stc
or
loopne
and
adc
mov
xchg
outs
inc
push
int3
jecxz
mov
inc
(bad)
enter
int3
lea
loop
fiadd
push
imul
shl
push
inc
jno
outs
movs
push
(bad)
xor
jb
inc
xor
dec
and
or
leave
push
shl
fwait
retf
mov
sbb
sub
jl
ins
(bad)
add
xchg
shl
and
(bad)
into
push
inc
in
cmps
sbb
jns
out
jno
sbb
or
sahf
mov
sub
adc
and
jg
lds
jns
cmp
sub
int3
jb
mov
repnz
hlt
sbb
cmc
mov
fiadd
icebp
lods
cs
pop
fmulp
fwait
xchg
adc
jmp
retf
pop
add
sbb
push
mov
fst
jmp
mov
jbe
xchg
(bad)
adc
loopne
loope
fld
jbe
ins
adc
jle
mov
loopne
bound
test
mov
dec
std
and
xchg
pop
sar
inc
jnp
movs
ror
xchg
(bad)
ins
daa
fs
lock
pop
lods
dec
ds
ret
adc
das
mov
fdivr
adc
les
retf
inc
and
sub
addr16
pop
jb
(bad)
dec
push
call
xchg
xchg
sub
pop
loope
arpl
pop
xchg
aas
inc
fistp
mov
ds
data16
pushf
mov
fldenv
ss
sbb
inc
pop
push
mov
fcmovne
out
mov
cmp
sbb
or
or
jl
sub
push
jmp
or
je
push
push
and
loope
push
adc
dec
push
repnz
push
jnp
hlt
inc
jb
mov
push
imul
push
or
ins
fcom
or
shl
mov
in
(bad)
popa
xor
pusha
call
xchg
stos
lahf
(bad)
popa
xchg
pop
(bad)
fld
xchg
shl
push
hlt
sub
cmp
xchg
ins
jmp
(bad)
xor
adc
cmp
jbe
les
push
lds
cwde
push
mov
pop
(bad)
and
ins
hlt
sub
in
xchg
mov
dec
ret
xor
sub
rcl
imul
mov
stos
or
ja
dec
xchg
mov
stos
out
pop
add
movs
mov
jle
pop
dec
add
push
dec
imul
fstp
inc
es
stos
ins
rcl
mov
inc
and
imul
(bad)
mov
mov
adc
in
and
or
pop
jge
nop
cmp
iret
jmp
in
jp
imul
adc
popa
dec
inc
retf
ret
xchg
in
cmp
jg
mov
xor
jg
call
dec
dec
aaa
imul
or
sbb
sub
or
stc
jle
mov
sti
js
fstp
out
dec
out
inc
fstp
inc
mov
mov
stos
mov
aas
jo
cmp
push
push
mov
stos
imul
jp
movs
rcl
add
ja
pusha
pop
or
adc
dec
mov
push
adc
repnz
or
push
(bad)
in
sbb
outs
loopne
aad
cli
inc
test
ss
push
or
sbb
mov
sahf
dec
dec
mov
ffree
push
cmps
xchg
sahf
push
jmp
add
sbb
jb
ror
data16
call
pop
and
imul
add
dec
inc
cld
stos
jbe
xchg
arpl
aad
jge
shl
xchg
movs
jnp
sub
and
mov
fiadd
stos
sbb
mov
mov
call
mov
xor
sub
push
or
sub
adc
sbb
mov
xchg
mov
pop
inc
or
stc
gs
and
adc
lds
push
(bad)
mov
in
sbb
push
xchg
cmp
and
test
int3
loop
and
jecxz
ins
(bad)
hlt
test
xor
xor
push
leave
mov
lds
popf
mov
cld
xor
mov
xchg
mov
std
inc
int
repnz
div
cmp
daa
mov
repz
dec
or
add
pop
call
not
outs
xor
js
ficom
test
fs
jge
stos
mov
xchg
stos
jns
(bad)
fld
leave
push
and
(bad)
sub
popa
push
xchg
test
pop
push
pop
adc
or
and
out
add
cmp
aam
mov
adc
rdtsc
inc
inc
push
es
(bad)
(bad)
mov
movs
mov
retf
clc
or
pop
imul
popf
dec
sub
daa
mov
sti
add
mov
mov
push
jmp
ins
enter
mov
int3
adc
pop
int
push
cs
push
pop
sub
push
push
dec
mov
cs
loope
sub
pop
cmp
add
pop
int3
xchg
shl
cdq
or
out
inc
mov
(bad)
push
sub
and
lods
aam
cwde
cmp
shr
push
fwait
push
fild
xchg
loopne
and
repz
mov
inc
dec
pop
dec
repz
adc
cmps
sub
cmp
in
jbe
repz
pop
xchg
mov
les
inc
xchg
cmps
cld
inc
lahf
hlt
push
and
dec
lahf
lock
and
jg
sbb
test
imul
mov
test
aaa
rcr
xor
imul
call
adc
sbb
fstp
enter
sub
sub
jge
cmp
sub
shr
xchg
adc
imul
aas
idiv
aas
mov
mov
or
inc
or
std
xchg
fld
das
mov
or
dec
sub
xor
cmp
dec
je
fsub
dec
xor
inc
jge
es
push
inc
xor
les
sub
ret
loope
lods
mov
jnp
outs
jmp
call
xchg
iret
adc
fild
std
or
outs
fdiv
out
(bad)
lds
pop
adc
stc
or
into
lds
movs
jne
push
retf
add
test
add
mov
repz
xor
mov
mov
xchg
in
out
int
fdivp
rcr
mov
cmps
std
mov
es
mov
push
(bad)
out
and
adc
jo
lods
and
cmp
jb
sbb
imul
mov
retf
pop
xchg
(bad)
aad
mov
xor
sbb
sahf
push
mov
mov
sub
(bad)
pop
std
sub
mov
mov
sub
into
inc
repz
lahf
xor
fwait
push
mov
call
inc
getsec
loope
sub
xor
xor
pusha
adc
call
(bad)
push
jnp
cmp
fwait
cmp
pop
jnp
and
xor
xor
lods
mov
cdq
inc
(bad)
mov
sub
js
fistp
stc
sbb
aam
es
das
pop
or
sti
sar
jb
sbb
adc
addr16
jmp
jmp
mov
mov
lahf
fst
and
je
shl
sub
out
pmaxsw
scas
(bad)
div
xchg
cld
mov
mov
dec
lea
jno
les
popa
pop
int
pop
inc
ins
lods
sbb
or
jle
pop
aas
and
sub
xor
mov
sar
imul
xor
dec
mov
clc
jno
push
call
mov
and
cmp
and
repz
cmp
or
jg
or
cmp
push
ret
fs
popa
enter
(bad)
cmp
test
mov
mov
push
jo
jnp
xchg
xchg
dec
jnp
js
js
cwde
jle
int3
scas
in
jns
lock
cmp
push
fstp
unpckhps
cmp
jmp
dec
(bad)
in
call
fwait
test
add
mov
jmp
mov
and
in
or
push
faddp
sbb
add
inc
mov
adc
xor
call
adc
jmp
in
jmp
inc
ins
dec
cmp
fcomp
mov
popf
test
les
push
push
mov
(bad)
jmp
sbb
sahf
sbb
popf
popf
hlt
lds
mov
pop
push
inc
in
adc
loopne
mov
push
lds
cmp
gs
sub
pushf
mov
int3
push
fadd
fstp
ror
push
pop
ss
aad
dec
mov
aad
iret
sahf
xor
dec
sub
inc
repz
aad
retf
scas
out
pushf
jns
inc
xchg
and
jbe
adc
mov
jno
dec
out
xchg
pop
inc
pop
inc
jg
into
pop
and
movq
fcom
loop
cmp
mov
cdq
lds
(bad)
mov
sub
cmps
(bad)
push
idiv
ss
or
bound
add
dec
loop
fmul
loopne
push
repnz
pop
jg
or
push
fndisi(8087
jo
iret
fstp
test
mov
mov
push
aas
out
test
add
call
loope
sahf
mov
xor
fistp
int
sbb
fstp
cmc
lods
cmp
loopne
ins
xchg
loopne
ret
fidivr
add
add
mov
cmp
cli
push
iret
iret
icebp
stos
cmc
push
pushf
cmp
(bad)
int
sub
and
cmp
fwait
mov
push
sbb
gs
sahf
jnp
mul
adc
vpandn
and
lahf
mov
adc
sub
sub
shr
ret
ss
dec
call
int3
sub
inc
repz
dec
sub
retf
data16
mov
(bad)
into
inc
inc
js
mov
jnp
xchg
jl
and
aam
(bad)
stc
mov
push
mov
popa
jns
push
pop
jnp
dec
sub
sbb
out
enter
sub
xor
fsub
daa
ret
mov
push
mov
mov
jmp
in
mov
or
lods
call
or
js
(bad)
sbb
and
mul
loope
push
hlt
xchg
ds
scas
movs
adc
xchg
into
mov
and
and
mov
pop
and
jmp
inc
push
shr
add
loopne
test
mov
push
dec
xchg
je
mov
mov
loope
push
inc
jmp
pop
xchg
stos
push
clc
in
call
imul
jo
adc
daa
jmp
loope
cwde
cmp
dec
fdivrp
in
adc
cmps
dec
test
lock
pop
pop
out
push
xchg
cmp
sbb
jg
outs
int3
and
push
sar
inc
and
pop
int
fnstsw
call
loopne
jge
(bad)
test
sbb
pop
wbinvd
mov
fdiv
push
push
pop
cmc
mov
mov
(bad)
bound
or
repz
xchg
mov
adc
xor
inc
movs
cli
push
ret
clc
fcom
out
xor
pushf
xor
pop
push
aaa
ss
or
push
push
cmp
sbb
dec
leave
sub
sbb
add
in
rcr
xchg
xchg
or
lock
mov
xchg
or
xor
jle
mov
iret
push
xor
mov
pop
mov
push
add
in
cmp
sbb
je
jnp
inc
or
lahf
inc
aaa
mov
jp
jg
and
xchg
(bad)
imul
jno
outs
shr
sbb
mov
pop
in
mov
or
pop
bound
idiv
mul
into
pop
sub
mov
jl
(bad)
lods
and
outs
jne
(bad)
(bad)
clc
cmps
mov
cmps
push
or
cld
int
or
mov
aas
rcl
cmp
inc
pop
(bad)
xchg
xor
add
mov
pop
imul
sub
aam
xor
popa
sbb
lods
gs
dec
sub
push
retf
ss
adc
pusha
sbb
in
xchg
sbb
inc
out
iret
outs
xchg
sbb
cmp
mov
cwde
and
sar
cmp
dec
inc
push
rcr
jno
or
mov
scas
stc
lods
mov
call
ds
pop
push
push
bound
add
jle
mov
aad
mov
fcom
sti
imul
xlat
ins
sub
pop
pop
pop
scas
aad
xor
or
xor
mov
lods
rcl
or
nop
pop
mov
adc
rcl
pusha
nop
in
aam
in
sub
fs
cmp
jecxz
dec
lods
jmp
ds
sbb
add
sbb
arpl
xchg
scas
daa
aam
rol
add
stos
xchg
jo
movups
jg
outs
mov
les
xchg
stos
repz
push
mov
sbb
sahf
(bad)
stos
fsubr
dec
push
xor
out
inc
jb
dec
xchg
pushf
inc
or
add
stc
rcr
sar
cmps
lods
jno
or
into
xor
(bad)
sbb
and
into
sub
xor
push
sbb
mov
int
imul
mov
cs
gs
js
xor
cli
fidiv
cli
pusha
inc
mov
and
lds
mov
stos
xchg
push
test
add
rcl
js
dec
sahf
sar
not
cli
(bad)
sbb
inc
stos
mov
shl
add
jbe
xchg
sub
das
mov
jmp
fcmovne
ins
movs
outs
xor
cmp
push
les
ret
mov
add
in
xor
push
mov
fld
dec
sar
or
jecxz
or
pop
inc
sub
xor
stos
ret
xchg
sub
xlat
pop
add
mov
sub
inc
mov
out
mov
cdq
rcr
ret
dec
in
xchg
dec
dec
(bad)
sbb
loopne
xlat
shl
sbb
jo
cmps
xor
cld
xor
adc
test
inc
sbb
sub
jne
push
or
sub
fsubr
dec
test
out
scas
xchg
or
and
aaa
push
lods
cmp
aaa
outs
pop
std
test
dec
lods
lock
cwde
push
pop
mov
xchg
cmp
arpl
out
sbb
ror
sub
fdivr
and
mov
in
xor
mov
fnstsw
lea
out
imul
loope
movs
and
push
pop
je
addr16
ds
or
ja
push
rcr
cmc
adc
mov
aaa
xor
push
lock
dec
inc
cmp
push
ficomp
inc
enter
in
sub
test
inc
sbb
dec
icebp
sbb
xchg
ret
mov
lea
xchg
imul
xor
cdq
cmps
or
cmp
call
jmp
in
dec
icebp
xchg
adc
and
and
imul
mov
mov
or
jns
popf
push
mov
mov
inc
jg
adc
add
inc
loopne
cmp
pop
loop
or
jl
ja
mov
lock
adc
push
jecxz
icebp
shl
sbb
fnstcw
push
loop
push
imul
imul
push
mov
or
mov
jl
lock
mov
test
pushf
les
mov
aad
(bad)
sbb
shl
adc
mov
mov
call
sub
(bad)
shl
mov
in
xchg
or
mov
popf
mov
xchg
mov
adc
sbb
pop
mov
and
cwde
movs
mov
sub
or
mov
stos
push
retf
out
xlat
call
rol
inc
shl
(bad)
xchg
int3
stos
jno
adc
out
fild
daa
jl
cmp
rol
test
jle
scas
jmp
inc
dec
jl
sbb
pop
ficom
jns
jl
ds
jns
sub
in
or
ins
aam
fadd
lock
jb
int3
ja
sub
xor
outs
test
xchg
xor
jns
or
in
bound
popf
out
pop
sar
jmp
xor
movs
(bad)
mov
or
fs
jnp
jnp
clc
scas
in
cmps
jne
aas
out
loop
stos
test
dec
mov
test
add
test
push
and
mov
les
gs
push
lds
mov
or
inc
std
imul
pop
imul
jae
and
add
loope
and
cmp
rcl
pop
add
cli
xchg
cmp
aas
adc
and
jmp
fucom
mov
pop
sbb
out
iret
idiv
mov
mov
dec
pop
int3
dec
inc
jne
pushf
rol
enter
ja
xchg
cmp
sub
pop
inc
push
mov
xor
mov
popa
add
(bad)
mov
(bad)
push
ins
push
ret
stos
fdivr
push
scas
and
or
inc
pop
in
fimul
loope
(bad)
mov
pop
stos
loop
and
jnp
add
sbb
lds
cwde
and
shl
lods
inc
mov
adc
bound
mov
popf
or
mov
sub
jecxz
sti
fidivr
add
ret
bound
retf
fwait
sbb
and
frstor
int
cmp
pop
lea
cdq
mov
repz
sub
xor
push
adc
jae
call
or
xchg
js
sub
mov
jg
cmps
call
shl
popf
dec
and
sub
mov
loop
icebp
mov
jmp
shr
xchg
ret
test
adc
jp
scas
pop
mov
loopne
xchg
call
(bad)
mov
jecxz
js
out
add
adc
add
xchg
pop
stc
and
and
js
mov
hlt
pop
arpl
push
sbb
mov
test
ret
jmp
ret
mov
scas
xor
loope
(bad)
dec
push
and
(bad)
cmp
inc
mov
fs
mov
mov
adc
mov
xchg
add
out
out
fisub
mov
cwde
rcr
sbb
test
pop
loopne
ret
and
jp
iret
cmp
pop
mov
sub
call
fsub
mov
stc
ins
ror
ds
xor
cmp
dec
shl
mov
pop
lods
mov
xor
sub
retf
dec
mov
add
scas
or
stc
or
sub
fstp
mov
xchg
inc
add
popf
data16
pop
std
sub
cmc
mov
mov
xchg
pop
jno
and
inc
loope
arpl
add
ret
dec
out
sub
mov
mov
ins
xchg
push
inc
rcr
cdq
sub
push
(bad)
cmp
sti
das
dec
arpl
out
mov
inc
xor
stos
mov
sub
jb
mov
mov
jecxz
push
push
and
pop
fxch
addr16
dec
xlat
stos
aad
sub
add
pusha
and
dec
sahf
sub
inc
push
xor
pop
jne
mov
adc
int
test
fcmove
add
cmp
aam
sub
or
and
in
mov
xor
mov
nop
jp
push
inc
mov
fidivr
(bad)
xor
pop
movs
jle
mov
sub
inc
or
stc
in
aad
jnp
lods
dec
nop
out
jmp
mov
cmps
mov
mov
add
cwde
inc
iret
jnp
push
icebp
jnp
mov
mov
add
jmp
xchg
sub
jo
mov
mov
mov
cwde
jmp
shl
movs
js
call
in
sub
mov
in
shr
ja
adc
pop
push
cmp
stos
jmp
ret
dec
pusha
add
ins
cli
(bad)
xchg
push
adc
je
rcl
inc
jns
iret
daa
pop
push
call
fist
mov
cmovns
adc
not
dec
test
(bad)
popa
push
movs
sub
mov
out
mov
inc
adc
inc
sub
push
fs
inc
scas
or
or
jp
or
jmp
push
dec
or
(bad)
test
jmp
sub
sbb
ret
push
add
out
xchg
ss
push
outs
popa
cmp
sbb
imul
xchg
push
or
dec
outs
das
lods
pop
int3
scas
test
mov
bound
adc
mov
rol
pop
mov
imul
mov
out
in
scas
clc
ss
xchg
push
icebp
jno
sub
leave
out
or
ret
inc
push
xchg
xor
jg
stos
(bad)
std
cli
and
or
push
push
stc
in
adc
movs
or
push
lods
movs
fsub
outs
adc
jnp
lods
sub
test
imul
pop
movs
sbb
cmp
xor
push
cmp
adc
dec
shl
addr16
sub
hlt
jg
mov
popf
xchg
out
ss
pop
sbb
cmp
sbb
sbb
push
pop
or
mov
mov
retf
jecxz
and
fsubr
add
add
gs
dec
xor
inc
stc
jp
or
jbe
mov
aas
fwait
push
fcom
push
jo
pop
xor
loopne
lods
mov
mov
mov
stos
cmp
mov
pop
push
push
std
pop
fsubr
jo
ror
int
lock
mov
mul
call
push
(bad)
xchg
push
shr
les
push
call
imul
push
pop
xchg
dec
mov
add
sub
mov
outs
cmps
push
pop
push
adc
out
fcomp
mov
dec
push
jg
in
dec
cmp
lods
or
sub
pop
fisttp
inc
outs
mov
mov
and
jp
fimul
in
sbb
mov
popa
ror
movs
mov
das
push
mov
cwde
push
ffreep
(bad)
ficom
add
or
adc
dec
dec
adc
pop
cmp
repz
repz
hlt
sub
std
imul
push
cwde
and
jp
div
add
mov
stc
out
add
xchg
or
out
jnp
mov
daa
jge
lods
add
aad
xor
mov
add
add
pop
jmp
in
cmp
add
icebp
add
jo
es
sbb
or
xor
je
inc
sub
retf
mov
push
pop
shr
dec
sub
imul
mov
daa
scas
loope
ret
add
and
mov
add
mov
aas
sub
push
or
test
int
mov
shl
xchg
sub
gs
push
cmp
mov
adc
push
pop
cmps
jmp
add
sbb
mov
scas
push
mov
or
add
hlt
imul
movs
jns
pushf
bound
or
or
int
in
das
mov
mov
cmp
ret
or
cmp
adc
jno
into
sahf
xchg
fs
lods
sahf
sbb
sbb
clc
jmp
mov
std
stos
xchg
cmc
sub
pop
adc
retf
sahf
cwde
jmp
pop
les
(bad)
add
push
pop
and
cdq
dec
or
jno
lods
lods
icebp
jb
jg
stos
inc
test
lods
mov
std
stc
fwait
loope
cmp
push
in
xor
data16
mov
push
ds
stos
or
xchg
outs
test
adc
movs
mov
std
push
jb
push
movs
push
xchg
in
test
lds
push
fcom
loope
inc
sub
pop
push
xlat
add
dec
mov
cli
sub
cmp
mov
inc
inc
scas
or
aam
sub
dec
sub
xor
aas
jmp
inc
out
test
or
sbb
push
fwait
das
mov
in
ja
or
or
jae
sbb
cmp
daa
inc
frstor
adc
xchg
add
xor
loopne
iret
sti
sbb
lds
dec
(bad)
fmul
scas
sub
into
cs
test
xchg
imul
arpl
in
jmp
and
pcmpgtw
mov
mov
cmp
out
push
or
imul
mov
aaa
jg
aas
jge
adc
mov
push
mov
push
iret
rcr
add
or
jl
xchg
fld
pusha
sbb
mov
fdiv
xchg
sbb
mov
push
jge
mul
shl
sti
add
or
fmul
out
cmp
and
lods
arpl
imul
fsub
jne
jl
cmp
adc
enter
iret
int
jmp
mov
mov
nop
aas
shr
fiadd
dec
jnp
stc
xchg
push
xor
lds
fnstenv
pop
test
and
out
cdq
jle
outs
bnd
stos
fmul
paddusb
and
or
dec
fwait
mov
mov
inc
fnstenv
aaa
stos
cmps
repnz
adc
in
dec
pop
xor
cmp
xchg
mov
xor
or
mov
dec
dec
push
adc
or
jne
ds
in
pusha
in
repnz
std
rcl
fcom
(bad)
test
popf
imul
stc
repz
cmp
(bad)
lock
xchg
push
aad
scas
mov
mov
dec
lock
jbe
inc
ret
sbb
cmps
jb
js
stos
jmp
movs
push
pop
push
(bad)
dec
ja
(bad)
fstp
scas
inc
mov
sub
jl
fld
fbld
les
sbb
jle
inc
and
adc
lds
add
push
push
push
sub
mov
dec
test
sar
test
and
pop
cmp
pop
out
add
es
jne
test
inc
dec
and
cld
scas
and
push
jle
fld
lds
iret
iret
cdq
add
(bad)
mov
jnp
arpl
in
(bad)
xchg
adc
xor
adc
shl
mul
mov
mov
pushf
in
dec
sub
aaa
lds
push
jns
dec
retf
loope
and
(bad)
push
or
pusha
lods
(bad)
and
or
pop
push
stos
shl
xchg
xchg
mov
jb
dec
fmulp
faddp
mov
mov
mov
call
outs
inc
fmul
sbb
mov
jbe
mov
pop
xchg
shr
sar
shr
cmp
add
xchg
(bad)
cmp
jno
(bad)
jle
test
mov
dec
hlt
sahf
mov
jmp
and
outs
sbb
lea
xchg
test
mov
addr16
ret
jbe
in
std
in
jb
push
push
pop
mov
out
mov
in
jg
mov
add
adc
sbb
or
data16
test
sbb
push
push
aas
mov
add
dec
or
lods
lods
and
cwde
sub
mov
jp
add
xor
aaa
push
or
cmp
jnp
sar
sahf
lods
ins
cld
mov
arpl
dec
jb
rol
dec
xchg
aam
out
ss
call
cmp
stc
jmp
or
mov
call
ds
dec
mov
fstp
jae
pop
mov
repnz
or
fisubr
cmp
ins
mov
stc
and
aad
jno
outs
inc
mov
push
dec
cmp
sub
jmp
add
cmp
push
cs
outs
mov
cmp
cmp
adc
aad
test
sub
sbb
cmc
add
fwait
scas
loope
mov
fwait
and
dec
xor
pop
push
(bad)
bound
push
adc
sub
inc
iret
cmp
sub
jae
imul
inc
sub
jo
out
mov
leave
loop
sbb
daa
sbb
(bad)
sbb
fucom
ret
mov
inc
xor
jmp
pusha
shr
xchg
loope
xchg
dec
ja
scas
push
nop
mov
pop
pusha
xchg
dec
in
jp
les
test
dec
or
xor
pop
retf
lods
push
push
or
scas
in
cdq
inc
stos
test
int
popf
dec
pop
mov
xchg
(bad)
sar
jne
rcr
or
dec
mov
ds
gs
nop
(bad)
pop
loopne
dec
jne
nop
mov
inc
dec
(bad)
out
cdq
ja
lds
add
sahf
shl
and
scas
aaa
pop
scas
dec
daa
enter
gs
inc
pushf
inc
ret
in
and
sub
test
push
adc
fadd
stos
rcl
push
sub
(bad)
arpl
jno
or
ret
or
repnz
pop
and
repnz
mov
dec
sar
fadd
mov
pop
shl
push
ret
adc
pop
(bad)
fldl2t
rol
lahf
xlat
or
mov
mov
outs
(bad)
mov
dec
jecxz
adc
imul
or
add
(bad)
mov
(bad)
mov
int
loop
jae
imul
adc
mov
or
mov
jno
xor
and
outs
adc
call
jmp
add
jbe
retf
or
add
rcl
test
dec
adc
push
mov
les
rol
sbb
in
lods
les
push
into
dec
in
dec
xor
dec
retf
mov
pusha
(bad)
or
pop
sbb
adc
pop
test
push
xor
add
aam
repz
dec
pop
or
(bad)
fnstsw
and
mov
mov
pop
scas
js
and
inc
pop
pop
out
pop
sub
das
ins
and
pop
mov
ficomp
pop
mov
cmps
loope
xor
popf
lahf
ss
rcr
inc
sub
xchg
jmp
sbb
add
fadd
mov
push
mov
sub
call
and
outs
movs
xor
call
shr
adc
mov
out
enter
fs
hlt
push
out
cmc
cdq
add
mov
add
mov
cld
scas
aam
ficom
xor
sbb
inc
je
scas
mov
inc
sahf
add
dec
adc
sub
fidiv
jb
test
rcl
inc
fsqrt
fs
stos
lea
inc
arpl
ret
sub
dec
xchg
jmp
mov
cdq
xchg
xchg
mov
xor
mov
add
cmc
jp
push
call
outs
mov
aaa
into
add
fs
push
mov
repz
pop
jge
in
jb
test
enter
pop
cmc
test
mov
jmp
adc
iret
inc
dec
add
jg
dec
sar
and
loope
xchg
push
mov
jo
stos
mov
cmp
es
mov
popf
fwait
sub
xor
icebp
cli
hlt
cmp
int
imul
pop
(bad)
adc
mov
xor
pop
or
mov
push
and
sub
sbb
or
aam
xor
stc
shl
int
dec
push
mov
imul
outs
int
sbb
nop
in
pop
sbb
fadd
pop
cmps
jb
popf
jmp
popf
fimul
into
aad
in
ins
mov
push
sub
das
adc
pop
mov
lock
jle
mov
dec
ss
add
or
mov
adc
dec
adc
jnp
(bad)
movs
pop
mov
sbb
retf
pminub
call
fisub
fist
not
scas
sbb
push
fcomip
(bad)
jb
xchg
movs
loop
inc
scas
pop
add
retf
ret
sub
mov
add
xchg
(bad)
jecxz
lock
push
mov
lods
icebp
inc
and
jb
mov
cmovns
dec
setne
addr16
(bad)
(bad)
clc
add
ins
cld
sar
call
jb
fcomp
pop
cli
mov
mov
rol
stos
es
mov
mov
mov
ror
jbe
dec
outs
loope
daa
out
mov
jbe
shl
cmc
icebp
or
adc
push
div
daa
sahf
test
cmp
add
fstp
push
sar
and
adc
xlat
xchg
or
lock
in
sub
mov
stc
add
mov
mov
(bad)
outs
stos
les
pop
pop
fucomip
xchg
ins
push
mov
pop
inc
je
(bad)
shr
test
adc
outs
fwait
xchg
ja
test
jle
into
pop
sahf
sbb
jns
push
fild
jmp
add
ret
(bad)
push
loope
fsubr
inc
pop
and
mov
stos
cmp
push
jns
jl
call
inc
mov
fsubr
lds
(bad)
sbb
lds
mov
xchg
or
jecxz
into
inc
jae
adc
and
dec
int3
lds
js
push
adc
movs
es
or
aas
enter
imul
in
and
cmp
jmp
retf
mov
and
mov
cmp
out
mov
cmc
jae
pop
imul
fs
add
fcomp
loope
inc
or
into
ins
xchg
pop
(bad)
inc
or
mov
adc
inc
test
cmp
jnp
shr
inc
jne
pop
inc
mov
cmp
mov
xor
retf
aad
sub
jg
imul
push
add
push
lods
cmps
add
add
mov
jnp
pusha
mov
fist
pusha
jo
fisttp
jb
and
jo
cmc
cmp
jl
xchg
cld
jp
dec
repnz
(bad)
mov
pop
push
push
push
cmp
cmps
cmp
jecxz
cs
inc
or
cmc
xchg
mov
dec
sub
retf
fs
jne
xor
nop
jno
in
adc
mov
mov
mov
xchg
in
cwde
adc
xor
inc
cmp
mov
and
in
jbe
stos
add
retf
stos
sahf
movs
xor
fcomp
inc
(bad)
sar
cli
jno
aam
popa
add
sub
mov
out
push
sbb
and
or
push
sar
movs
fucom
jmp
mov
js
sub
xchg
dec
sub
shr
sub
icebp
lock
mov
pop
and
jae
aas
daa
in
int3
ja
arpl
pop
mov
add
jmp
mov
or
adc
mov
mov
jo
push
xchg
xchg
lds
add
fcmovnu
jmp
aam
in
sbb
xchg
inc
movs
daa
xchg
out
dec
push
ins
fst
pushf
xchg
sub
jnp
mov
mov
or
jb
xchg
adc
and
xor
mov
xor
jmp
mov
scas
fild
mov
push
jnp
scas
cli
jae
and
inc
xor
and
scas
mov
stos
mov
and
repnz
out
ins
dec
mov
fistp
div
shr
xchg
stos
push
scas
into
out
and
mov
add
jne
movs
inc
in
mov
je
and
in
xchg
cmp
lods
push
pop
xor
pop
add
mov
jb
aaa
test
imul
dec
sbb
std
fadd
pop
cwde
pop
(bad)
je
mov
add
scas
jmp
or
out
dec
dec
es
push
xlat
cmp
cdq
jo
sub
nop
mov
cli
jo
inc
aam
cmp
pop
or
push
push
movs
icebp
enter
or
pushf
add
dec
and
in
das
pop
mov
dec
js
test
mov
jle
imul
in
mov
xchg
je
push
and
leave
out
jnp
push
cmps
adc
add
jb
pop
fistp
nop
and
lods
adc
dec
xchg
add
jo
aaa
inc
add
push
loop
xchg
dec
push
loop
bound
ja
push
std
test
ss
es
and
ficom
push
push
xchg
scas
add
bound
(bad)
add
and
pop
les
(bad)
mov
adc
fsubr
call
add
xor
call
add
lea
add
mov
sbb
lock
sub
(bad)
div
in
ror
mov
dec
pop
cld
retf
sar
shl
mov
fldenv
sar
aad
or
jmp
jnp
mov
out
loop
sub
fsubr
xchg
jns
shl
sbb
push
mov
mov
sbb
dec
(bad)
cli
inc
jp
inc
inc
xchg
xlat
mov
cmps
pop
daa
clc
dec
sbb
in
xchg
mov
mov
lahf
mov
jmp
in
outs
(bad)
cmp
int
sub
push
xchg
inc
xchg
push
icebp
int
mov
aaa
test
pop
xor
hlt
cmps
dec
lock
and
lods
jmp
lock
mov
cmp
cdq
je
mov
xor
mov
inc
mov
adc
inc
dec
push
jge
dec
mov
lods
stos
pop
fldenv
xchg
fs
out
sbb
pop
arpl
loope
cmp
popa
add
outs
mov
jl
fldenv
dec
in
inc
ins
clc
jmp
mov
iret
or
and
or
push
or
push
push
push
jb
xchg
pop
mov
sub
cwde
or
je
outs
and
dec
jecxz
ja
xchg
xchg
cmps
jmp
ins
fnsave
cmps
dec
sbb
jp
clc
outs
mul
dec
cmp
dec
or
add
stos
or
pop
jbe
arpl
aam
mov
push
xlat
jmp
in
xchg
mov
fcomip
add
and
popf
or
xor
mov
fisttp
pop
cmp
sub
retf
(bad)
clc
xchg
or
push
gs
jmp
sbb
jns
push
retf
pop
inc
fdiv
cwde
cmp
sar
scas
xor
fsubrp
or
inc
pop
add
cmp
retf
dec
int
mov
icebp
mov
lods
jo
ficom
mov
(bad)
sub
out
retf
jnp
test
scas
shl
jns
in
dec
add
test
xor
fs
call
inc
out
mov
push
cmp
cmps
jb
jb
fdivr
cs
mov
mov
push
inc
xchg
movs
neg
pop
jno
js
dec
adc
addr16
jmp
push
dec
pop
jg
jae
mov
ret
jecxz
jecxz
and
adc
jg
cs
mov
cmp
faddp
dec
xor
jp
dec
popa
jge
out
adc
hlt
mov
push
jbe
xchg
sub
pushf
jmp
aad
and
repz
shl
fs
scas
push
lock
lock
dec
mov
jp
(bad)
mov
dec
es
add
lock
aas
dec
push
in
mov
sub
pusha
add
dec
sar
sub
rol
cmp
add
mov
xor
xchg
push
movs
push
mov
(bad)
mov
les
pushf
lock
jb
ret
pop
mov
cmp
sub
jbe
gs
aaa
stos
jb
outs
movs
or
lock
dec
jb
pop
retf
rcr
sahf
adc
ficom
cmps
movs
cwde
sub
pop
pop
xchg
stc
not
or
and
adc
or
hlt
jno
jb
aam
jb
sbb
aad
enter
mov
adc
inc
sub
push
adc
out
jge
ret
cmp
popa
jmp
or
lea
add
mov
fisttp
mov
adc
test
ret
in
ins
mov
das
mov
sbb
neg
leave
xchg
ror
outs
mov
push
push
outs
mov
pop
mov
pop
jns
dec
mov
and
(bad)
sbb
pinsrw
fnstenv
cmp
pop
rol
sub
xor
mov
fs
idiv
push
setl
popa
jmp
jp
ins
movs
xchg
movs
cmc
ss
cmps
cmp
ja
pop
cmc
xor
icebp
add
idiv
dec
mov
je
mov
dec
fld
xchg
mov
xlat
lahf
cmp
scas
ret
out
js
and
xor
cli
or
mov
inc
mov
sub
jae
mov
popa
pop
retf
and
add
add
dec
adc
shl
xlat
inc
cli
ror
xchg
jo
pushf
lds
outs
mov
ficom
pop
xchg
and
outs
leave
dec
movs
sub
mov
jl
adc
nop
push
xor
jo
xor
fwait
out
inc
sub
inc
rol
stos
cwde
sub
out
push
sbb
stos
or
add
les
sar
int
jns
aam
retf
sar
mov
sub
inc
and
xchg
fstp
fdiv
jb
fisttp
cmc
mov
mov
push
or
sbb
test
rcr
add
addr16
adc
push
jp
and
iret
xchg
loop
push
mov
mov
pop
test
ins
cdq
(bad)
mov
int
sub
sbb
test
inc
test
and
lods
lock
repnz
adc
dec
xor
cwde
sahf
ja
xchg
je
mov
or
int3
mov
sub
arpl
inc
rcr
jmp
xlat
cmp
fdiv
or
ins
dec
iret
cld
ins
jg
ja
es
fmul
and
fbstp
mov
push
pop
hlt
jp
adc
aas
add
sub
aaa
test
lods
add
fdiv
pop
mov
push
fwait
jb
push
(bad)
sbb
cmp
inc
jmp
mov
cld
in
pusha
inc
(bad)
fidiv
dec
xlat
cmp
fs
xor
enter
arpl
dec
pop
sub
inc
cmp
adc
das
lods
push
cs
sub
push
repnz
inc
into
call
mov
push
hlt
retf
jno
cli
lahf
int3
mov
inc
out
fstp
jge
mov
lds
cmc
mov
in
add
pop
mov
sub
adc
mov
(bad)
das
dec
scas
dec
push
hlt
xchg
je
stc
(bad)
mov
ud2
mov
adc
pop
inc
push
pop
mov
mov
cld
ins
lds
push
iret
in
cmp
mov
rcr
push
hlt
inc
lahf
daa
pop
mov
loope
jmp
(bad)
mov
xor
je
movs
in
xor
inc
imul
test
fisub
mov
aam
dec
jle
outs
add
cmp
xor
cli
cdq
cmp
push
pop
push
ja
mov
pop
jge
mov
cmp
add
or
fdivr
jns
jmp
out
jmp
out
cli
add
mov
enter
xchg
mov
dec
sbb
fwait
jb
inc
mov
mov
scas
sbb
loope
push
mov
je
xor
out
inc
call
mov
les
jmp
out
icebp
gs
sbb
ss
jne
out
dec
mov
mov
pop
push
call
inc
test
out
outs
leave
jb
jae
mov
pop
ins
fistp
adc
jo
jmp
pop
or
jl
xlat
inc
cmp
or
loope
and
push
fwait
cmp
clc
or
sub
jne
sub
lods
or
ror
(bad)
les
js
xchg
(bad)
(bad)
out
lahf
out
rcr
pusha
add
test
ja
enter
outs
jbe
or
lods
call
lahf
popf
inc
dec
xchg
int3
ret
or
mov
aaa
jge
pop
mov
mov
mov
ret
mov
lods
xchg
mov
and
imul
mov
(bad)
in
es
ja
arpl
jns
jo
repz
sub
or
(bad)
stos
inc
shl
or
lock
ss
ins
mov
test
push
test
inc
push
jnp
in
stos
cmp
xor
mov
cmp
fcom
xor
inc
out
add
stos
add
mov
enter
dec
int3
arpl
sbb
sar
mov
in
fcom
mov
jmp
call
xor
(bad)
jecxz
int3
sbb
scas
dec
pop
not
ins
sbb
push
in
xor
clc
sub
aas
sbb
push
mov
xor
dec
inc
dec
pusha
pop
and
retf
xchg
xchg
mov
jp
(bad)
fld
std
jmp
jmp
aas
das
cmp
test
hlt
or
nop
rol
loopne
stc
jl
or
jae
add
push
adc
and
push
int
pop
shr
es
jnp
das
gs
or
aaa
cs
movs
cmp
(bad)
pop
pop
xchg
js
xchg
shr
in
jl
xor
aad
xchg
and
cmp
daa
fs
and
ss
inc
push
out
mov
imul
inc
xor
shl
fcmovbe
mov
shl
add
inc
ret
push
scas
inc
mov
fist
cmp
(bad)
(bad)
sti
inc
shr
out
int
add
sub
call
inc
xchg
je
sar
push
or
jmp
lock
mov
jmp
in
in
jl
repnz
jecxz
and
ret
(bad)
call
mov
adc
dec
cld
fisub
xchg
push
and
push
dec
lds
or
pusha
inc
(bad)
jl
sub
and
lds
dec
repnz
xor
cmp
xchg
mov
sub
in
inc
xor
push
inc
lock
ret
push
sbb
fcmovnb
scas
mov
inc
or
sub
dec
pop
adc
daa
mov
repnz
outs
imul
imul
out
inc
lods
xchg
hlt
fdivr
test
sbb
iret
jns
int
dec
movs
lods
inc
and
sbb
pushf
pushf
inc
rol
nop
psubsb
xchg
je
scas
mov
pushf
leave
pop
aam
fimul
imul
in
ror
stc
mov
sar
cdq
xor
or
add
leave
xor
sub
mov
ins
clc
adc
sub
pushf
add
retf
inc
fsub
ja
into
test
pop
scas
fimul
jecxz
sti
and
pop
(bad)
mov
sbb
scas
test
ret
fwait
mov
push
xchg
(bad)
cmp
dec
lock
sbb
loop
into
cmc
mov
pop
push
pop
push
dec
sbb
jne
fidivr
aam
sub
sub
retf
ret
xor
das
add
jno
adc
or
or
clc
daa
imul
(bad)
movs
out
jo
mov
test
ret
outs
inc
cmp
call
xor
jg
scas
out
push
mov
aaa
cld
cmp
cmps
aam
stos
mov
int
test
rcr
dec
pusha
sahf
push
and
push
leave
dec
lea
jle
js
(bad)
shr
loope
mov
jmp
mov
cmps
mov
mov
adc
xor
dec
cmp
jg
mov
jae
cdq
inc
and
mov
stc
(bad)
mov
pop
adc
out
xor
jno
test
inc
xor
pop
cmp
push
clc
push
push
cld
dec
and
sbb
out
add
les
xchg
add
scas
in
inc
cmps
sahf
mov
jg
push
icebp
jae
push
push
out
mov
push
fmul
add
mov
mov
mov
mov
shl
ret
rol
inc
pop
pop
movs
and
sbb
adc
stc
(bad)
ja
or
inc
les
lahf
loope
jns
pop
push
cmp
jmp
lock
adc
inc
push
in
push
sti
ror
popa
dec
mov
shl
lahf
xor
sub
fwait
icebp
cmp
jmp
pop
ds
mov
mov
mov
std
cmp
iret
pop
dec
hlt
popf
outs
jecxz
cmc
call
jge
sbb
cmps
jbe
std
sbb
lods
adc
int3
add
add
xchg
jecxz
xor
imul
movs
push
loop
xchg
xchg
mov
out
mov
(bad)
cmp
xor
das
and
(bad)
cmp
mov
push
hlt
and
popa
dec
dec
sub
sbb
scas
fisubr
mov
fmulp
fld
(bad)
in
test
je
adc
sub
sbb
jmp
ins
es
jns
out
scas
bound
xchg
xchg
and
xor
movs
cwde
xor
sti
pop
js
popa
cmp
push
out
into
fwait
gs
dec
int3
stos
jno
std
loop
dec
loopne
fist
inc
mov
pop
mov
fwait
call
inc
push
adc
(bad)
jg
pusha
or
jmp
xor
cmp
cmp
mov
and
sbb
fiadd
or
or
xor
les
pop
xor
leave
sbb
dec
jecxz
xor
and
mov
shl
ja
cmp
sbb
mov
jge
ins
mov
popa
hlt
lea
mov
test
mov
jge
lock
pop
mov
xchg
mov
xchg
prefetch
or
cdq
mov
in
in
test
cmp
in
cmp
sbb
sub
rol
jg
out
sub
out
and
pop
xchg
or
jmp
push
sub
(bad)
and
jne
or
jecxz
inc
push
out
jne
(bad)
imul
adc
dec
rol
les
sbb
mov
iret
mov
adc
xchg
xchg
and
xchg
test
ficom
jb
fnsave
cmc
cmp
pusha
push
mov
cwde
mov
mov
add
push
fistp
sahf
in
lds
fwait
jg
mov
push
push
jb
iret
sub
aam
test
movs
push
sbb
sti
push
ins
(bad)
aam
jno
mov
and
inc
jge
push
jnp
sar
and
sub
cmp
sub
hlt
or
jmp
inc
cli
push
xchg
mov
xor
fld
pop
mov
or
ins
loop
pop
cmp
lahf
mov
jmp
push
shl
sbb
sar
movs
fldcw
xchg
fstp
sbb
jmp
push
out
push
add
add
dec
sbb
add
mov
test
pusha
xchg
inc
call
inc
xor
xor
push
mov
pop
mov
pop
pop
outs
cld
add
xchg
xchg
pop
push
cli
push
pop
dec
and
in
ja
data16
ds
(bad)
push
in
shr
adc
mov
and
dec
jb
fs
movs
pop
movs
dec
movs
push
cmp
loop
sub
inc
dec
and
les
mov
leave
mov
bswap
in
jb
cmp
mov
fwait
rcr
xchg
cs
lea
out
cmps
jbe
mov
daa
lea
ret
out
mov
cmps
(bad)
fild
xchg
add
cwde
inc
in
retf
in
addr16
cdq
(bad)
and
mov
xor
sbb
push
cmp
shl
aam
mov
movs
popa
data16
inc
fild
(bad)
stos
cmp
fcomi
call
dec
sbb
cmp
jle
mov
(bad)
dec
aas
inc
xor
add
cmp
bnd
inc
sbb
nop
xor
dec
outs
int
sub
mov
cmp
cmovne
mov
jns
cmp
mov
push
dec
(bad)
and
stos
inc
ins
add
xchg
add
into
jne
xchg
jecxz
mov
call
imul
add
add
in
icebp
repnz
call
test
mov
push
mov
in
rcr
ss
loopne
mov
cs
xor
cmps
stos
push
addr16
xchg
pop
call
add
sub
add
pop
push
movs
ins
sub
sbb
das
or
pop
xchg
push
ja
jl
(bad)
xor
ins
iret
cwde
mov
add
enter
fadd
cdq
cdq
dec
xor
ror
or
pop
jle
inc
push
and
xchg
aas
retf
fs
sbb
outs
je
lea
mul
jle
push
ja
xchg
mov
js
aaa
sbb
loop
test
pop
test
add
cwde
and
repz
push
xchg
jp
adc
outs
loop
lds
pop
cld
in
push
adc
ret
pop
mov
and
xor
in
sub
es
add
adc
dec
mov
sub
(bad)
jno
ret
test
fld
sahf
push
xchg
mov
shl
out
fisttp
add
inc
or
aam
rol
call
mov
dec
and
mov
jl
test
jmp
fldln2
cmp
arpl
mov
loope
mov
sub
jge
adc
jae
jbe
adc
dec
jle
push
(bad)
push
bound
retf
sbb
mov
cwde
pop
cld
data16
into
jp
push
jecxz
lds
pop
mov
xchg
rol
add
movs
jle
or
pop
into
add
add
out
pop
rep
je
retf
cmp
dec
jg
mov
pusha
in
imul
mov
inc
repz
sbb
push
sub
or
pop
sub
repnz
into
je
stos
test
add
fwait
xor
dec
mov
and
add
mov
mov
xchg
mov
jmp
cmc
cmp
out
sbb
fidivr
js
and
xchg
aas
cmp
sbb
mov
adc
stos
lods
fist
xchg
mov
sahf
cmp
xchg
push
stos
dec
push
xor
sbb
xchg
popf
nop
jmp
repz
mov
push
mov
arpl
pop
scas
pop
rol
jmp
in
into
xor
jbe
and
test
mov
hlt
(bad)
sbb
dec
xor
data16
out
inc
scas
(bad)
clc
fsub
mov
add
cmp
inc
adc
add
ss
aam
clc
dec
mov
jno
jmp
mov
das
adc
and
and
pop
pusha
xor
(bad)
retf
stos
add
or
scas
sahf
pushf
sub
jnp
hlt
push
xchg
iret
xchg
loop
movs
leave
push
out
std
pop
rcr
adc
mov
pop
ror
lods
and
xchg
pop
call
stc
test
mov
xor
and
sbb
add
lea
add
jbe
rol
cli
adc
(bad)
scas
in
jbe
push
adc
cmps
daa
bound
outs
inc
aam
and
mov
ins
xchg
add
xor
push
ds
mov
mov
or
(bad)
push
xor
xchg
ds
sub
popf
out
jecxz
dec
sub
cwde
iret
out
(bad)
adc
sti
jmp
xor
je
arpl
mov
xchg
aam
cli
mov
add
ins
and
add
cmp
cmp
rcr
arpl
jbe
mov
xchg
stos
aaa
shr
mov
push
dec
in
push
xor
loopne
push
fadd
clc
pop
mov
or
or
test
add
cmp
addr16
fsub
std
(bad)
xor
in
pop
inc
dec
in
imul
pop
repnz
adc
inc
dec
push
add
mov
dec
adc
sbb
enter
mov
xchg
(bad)
hlt
pushf
cmp
cmp
lds
mov
mov
jmp
sub
shr
pop
jno
pop
loopne
or
test
(bad)
(bad)
fadd
fstp
pop
sbb
pop
mov
pop
fsub
dec
and
in
mov
add
push
jno
mov
lea
jle
sbb
xchg
sti
pop
push
sub
sub
(bad)
imul
cli
cdq
idiv
leave
shl
out
int3
mov
idiv
das
xchg
mul
idiv
push
test
les
test
pop
pop
cmps
dec
repz
pop
scas
ins
fisubr
pop
xchg
js
stc
sbb
imul
sbb
cmp
out
lahf
jae
jns
test
mov
dec
jbe
aas
lahf
sbb
(bad)
in
jnp
push
std
pop
push
mov
test
mov
sar
jmp
ret
pop
mov
xor
mov
pop
loop
cmp
mov
dec
std
pop
dec
adc
je
call
aam
cmp
in
push
cli
outs
or
and
inc
sar
xchg
and
inc
ins
in
in
pop
push
in
outs
in
in
adc
adc
inc
sar
sti
test
inc
and
stos
jmp
sub
pop
ja
cmc
push
xor
sub
push
push
stos
xlat
adc
in
stc
inc
jl
push
shl
(bad)
int3
stc
fdivr
add
fdivrp
je
retf
mov
cs
xor
and
pop
mov
dec
jbe
pop
or
ds
mov
xor
cmp
jbe
stc
fld
and
sub
mov
repz
cmp
xlat
mov
mov
or
js
sbb
dec
in
and
rol
push
adc
fs
mov
adc
iret
ret
sub
(bad)
call
cmp
jbe
push
(bad)
mov
mov
inc
jp
mov
add
icebp
pop
add
pop
repz
in
stc
add
xlat
shl
dec
mov
push
mov
sub
mov
dec
jae
sbb
pop
call
dec
lahf
adc
adc
retf
js
bound
rcr
test
das
inc
daa
jae
dec
fbstp
mov
es
out
leave
xchg
int
dec
imul
cdq
sbb
pop
shr
lods
sbb
fcmove
lods
daa
(bad)
retf
test
not
stos
xor
mov
cmp
fcomp
cmp
(bad)
push
pop
mov
pop
(bad)
pop
inc
stos
add
sbb
repz
mov
pop
rol
xor
and
cmp
daa
cmp
cmp
add
and
push
imul
push
pop
mov
jg
loop
test
imul
out
push
xchg
xchg
mov
es
outs
pushf
fwait
xchg
cmp
leave
out
imul
xchg
push
aaa
ret
adc
scas
jae
or
mov
cwde
mov
pusha
adc
cmp
sbb
mov
add
inc
adc
mov
push
inc
xor
(bad)
and
and
cmc
sbb
dec
clc
mov
xor
and
mov
adc
pop
pushf
int
mov
or
inc
stos
sahf
in
loope
fcom
out
cmp
xchg
mov
into
fdivr
xor
pusha
aad
int
cmp
jno
adc
mov
sub
scas
pop
push
mov
pusha
mov
mov
adc
gs
adc
loopne
and
add
push
jg
lea
cmps
push
rcl
mov
(bad)
push
xchg
jmp
jge
shl
fxch
and
push
aaa
pop
jp
pop
pop
ss
call
inc
or
add
test
js
mov
xchg
out
leave
fldenv
and
bt
sub
test
pop
loope
sti
mov
push
cdq
test
rcl
enter
adc
or
int
xlat
sbb
retf
aaa
mov
je
out
cmp
pop
int
xchg
idiv
mov
jno
inc
jnp
sbb
cwde
pop
jae
rol
nop
and
mov
int
and
and
mov
sbb
mov
into
imul
add
aam
inc
lock
aas
or
cmp
lea
imul
cmp
sbb
popf
sub
mov
mov
and
mov
sbb
pop
add
fist
js
out
out
mov
cs
ret
mov
and
jmp
imul
and
cld
pop
sbb
lahf
in
add
xor
popa
sub
inc
mov
outs
cmps
jne
clc
pop
mov
mov
std
xchg
dec
xor
and
pop
aam
loope
sub
pop
ds
push
xor
lahf
(bad)
sub
ret
mov
lods
in
cmp
leave
push
push
sub
jle
cdq
push
(bad)
pop
and
mov
cmp
lea
test
pushf
in
inc
pusha
pop
inc
sub
nop
in
pop
push
pop
test
ret
fs
popf
cmps
leave
jge
fisub
mov
fisttp
push
mov
push
sub
iret
jbe
ins
ins
mov
and
loop
jb
fs
lods
lea
js
mov
repz
sbb
mov
mov
or
xor
gs
add
in
shl
pop
and
das
mov
push
sbb
fcmovb
mov
les
aas
xor
sub
fistp
dec
loop
cmp
inc
xchg
mov
mov
add
inc
xor
std
stos
fwait
mov
mov
jp
out
sahf
popf
xor
(bad)
int3
or
pop
mov
push
dec
outs
sub
ds
mov
xor
test
ins
fldenv
push
adc
jecxz
xchg
lods
xchg
mov
fcom
and
cld
inc
int
jmp
bound
retf
inc
mov
cwde
aam
aam
mov
jle
bound
(bad)
fcmovb
(bad)
cmp
stc
adc
jmp
add
cli
sbb
xchg
and
mov
sbb
ss
xor
adc
cmp
push
and
pop
jmp
add
cmps
xchg
ror
mov
adc
test
mov
sar
push
iretw
pop
push
stos
push
rcl
jmp
(bad)
aad
dec
shl
(bad)
clc
push
mov
es
sub
push
add
test
xchg
jg
xchg
leave
mov
mov
loopne
and
xor
or
stmxcsr
cmp
dec
mov
sub
dec
dec
call
nop
add
leave
loopne
inc
dec
icebp
or
or
mov
xor
mov
pop
push
add
retf
pop
jl
xor
dec
into
sti
and
bound
add
(bad)
xchg
or
adc
movs
cmp
and
out
sbb
retf
xchg
xchg
ret
jb
push
jb
jno
xchg
jno
or
push
loope
outs
test
jge
(bad)
jmp
xchg
popf
jns
jo
cmp
std
out
jnp
sbb
daa
ins
sbb
fist
das
scas
addr16
or
add
xor
popa
test
stc
sbb
sbb
or
inc
sti
test
movs
dec
xchg
scas
loope
mov
mov
into
xchg
inc
ret
xor
daa
aaa
and
js
and
xchg
jg
mov
lock
outs
ffree
sbb
adc
dec
fisub
popf
pop
fldenv
test
stc
mov
cmp
pop
jnp
pop
fistp
cmp
pop
(bad)
sbb
arpl
mov
in
retf
sub
mov
mov
sub
out
sub
(bad)
dec
xchg
stos
pop
xchg
cmp
repz
retf
mov
ds
repz
popa
ja
(bad)
enter
outs
mov
loopne
xchg
test
cs
xor
je
enter
mov
dec
imul
imul
fs
mov
inc
mov
in
push
push
mov
jg
push
popf
and
loope
and
mov
cmp
mov
fld
adc
stos
(bad)
nop
sbb
pop
loopne
or
add
push
mov
cmp
inc
xchg
push
ins
xchg
pop
hlt
add
cmp
lock
sbb
ror
iret
and
inc
loop
mov
xchg
push
or
mov
(bad)
lods
test
mov
mov
imul
inc
leave
in
cli
pop
hlt
cdq
adc
lods
jae
cmp
push
leavew
imul
or
sti
push
jmp
mov
fdiv
mov
mov
mov
stos
pop
pop
es
(bad)
js
sti
mov
dec
lds
jo
scas
xor
jno
mov
icebp
mov
(bad)
xor
adc
stc
push
ror
fsubr
push
fnsave
call
mul
arpl
std
adc
stos
inc
inc
(bad)
ror
stos
out
stos
retf
das
lods
mov
sub
pop
movs
fwait
sub
jge
iret
je
movs
xor
loopne
mov
add
jp
xchg
jmp
sbb
nop
add
mov
xchg
jge
add
mov
dec
leave
pushf
outs
cmps
push
jg
jne
(bad)
jmp
xor
mov
js
xchg
(bad)
fisttp
dec
ret
adc
inc
movs
shr
(bad)
and
adc
pop
imul
jmp
xor
aam
jmp
xchg
push
shl
jge
or
mov
test
inc
push
dec
cld
ror
sar
hlt
hlt
in
and
ds
imul
je
and
outs
ror
or
jg
outs
loope
and
es
ja
retf
xchg
mov
fucompp
and
shr
dec
inc
movs
pop
cmp
xor
xchg
adc
test
xchg
push
test
daa
mov
adc
inc
cmp
stc
push
push
scas
mov
in
push
or
fdivr
and
adc
xor
in
jp
cmc
mov
sar
xor
push
push
daa
inc
jge
imul
stc
add
retf
inc
jnp
out
aas
arpl
pop
adc
ds
jge
jb
loop
std
jmp
ret
jl
sbb
das
cmp
mov
hlt
mov
mov
int
out
push
ds
ss
dec
call
mov
gs
(bad)
and
lds
mov
gs
jbe
inc
test
hlt
xchg
add
fidiv
and
hlt
ds
mov
add
sub
in
sahf
out
pushf
fcomp
mov
cmp
imul
mov
dec
dec
mov
add
jo
jge
lods
adc
jno
arpl
cs
jbe
and
(bad)
pop
xchg
pop
loop
mov
cwde
xor
inc
jb
leave
test
add
movs
test
pop
(bad)
(bad)
stc
lea
jge
cmp
cmps
gs
cmps
fdivp
cmp
jp
outs
(bad)
mov
dec
repnz
pop
shl
mov
sub
mov
div
jns
or
jl
pop
jae
stos
sbb
ja
pusha
mov
dec
ret
cld
inc
mov
retf
lods
sbb
fisttp
adc
outs
nop
into
ret
mov
cwde
outs
lds
sbb
jge
or
neg
sub
out
sbb
sub
loop
sub
enter
cld
add
jecxz
xchg
mov
pop
ret
scas
mov
add
inc
popf
(bad)
inc
sbb
mov
aad
dec
mov
dec
(bad)
mov
jmp
or
xchg
xchg
sbb
and
out
inc
aaa
inc
push
or
or
loopne
(bad)
lds
inc
add
cmp
in
cdq
xchg
push
pop
jle
dec
jnp
out
aas
fimul
jbe
or
js
jnp
and
lods
(bad)
shl
ins
dec
jmp
inc
jo
(bad)
and
test
dec
adc
in
cmps
ds
inc
mov
scas
aas
shl
jle
pop
dec
xchg
(bad)
aad
imul
aad
dec
out
inc
test
lahf
int3
cli
or
into
mov
rcr
pop
pop
cmp
hlt
push
sub
fcmove
icebp
ins
xchg
in
add
jb
add
fwait
and
cmps
retf
pop
mov
cmc
imul
(bad)
cmps
add
shl
sbb
and
fldcw
inc
mov
dec
mov
xor
jle
cmp
mov
mov
inc
cmps
lock
addr16
(bad)
sar
test
inc
(bad)
jmp
and
ss
pop
add
add
and
cmp
sbb
inc
add
xor
movs
jne
loop
xchg
and
imul
inc
cmp
pop
xchg
repz
das
and
add
sbb
loop
push
hlt
(bad)
mov
imul
cmp
mov
jg
dec
adc
ficomp
jle
or
push
jns
sbb
fsubr
sub
and
mov
cwde
push
outs
or
les
aam
lds
ds
adc
pusha
daa
inc
movs
cmp
aam
mov
popf
add
jmp
xchg
push
outs
sahf
add
and
and
adc
xchg
sahf
sbb
fisttp
fmul
lods
inc
out
into
scas
xor
leave
mov
out
pop
mov
jmp
dec
mov
mov
shl
rol
(bad)
frstor
and
cmp
sub
ins
clc
cs
out
jecxz
adc
mov
ins
out
std
dec
push
test
sub
cmp
push
fstp
sbb
rcl
adc
mov
push
mov
push
lds
mov
out
adc
cmp
sbb
ins
call
dec
ins
stc
fcom
rcl
cs
mov
mov
inc
aad
xlat
dec
sub
out
jmp
mov
jnp
retf
xor
popf
cmp
retf
loopne
scas
dec
push
sbb
or
in
add
pop
pop
xor
cwde
mov
ret
loope
pop
pop
and
imul
int3
xchg
sbb
and
xchg
mov
es
xor
cs
mov
repz
std
dec
jmp
ret
loop
pusha
test
cs
fnstcw
pop
inc
inc
bound
add
leave
add
mov
mov
(bad)
iret
cmp
dec
mov
(bad)
jg
mov
movs
push
jno
add
and
mov
in
aam
call
addr16
sbb
cs
jnp
(bad)
mov
pop
inc
dec
inc
out
stos
xor
and
retf
sbb
or
call
cs
popa
fbld
inc
daa
inc
sub
dec
popa
jae
sbb
jne
aam
lds
dec
mov
dec
fimul
ja
dec
shl
inc
mov
rcr
sub
pusha
mov
in
jmp
mov
stos
outs
jae
xlat
mov
pop
mov
int3
add
cmp
ss
mov
xchg
cmp
pop
mov
add
imul
shl
cmps
jne
jg
push
push
xor
add
cmp
push
int3
sbb
cwde
pop
mov
pop
(bad)
popa
mov
pop
std
push
fbld
push
lods
jne
dec
mov
adc
(bad)
sahf
aam
sbb
or
pop
jns
lea
(bad)
xchg
pop
and
mov
pushf
test
sar
add
cmps
ja
sbb
lahf
ret
(bad)
pop
cmp
test
mov
inc
dec
leave
test
mov
rep
lea
retf
push
ss
push
pop
inc
mov
aam
iret
pushf
std
repz
mov
and
or
push
mov
nop
hlt
cmp
int
shr
sbb
cmp
inc
test
jno
loop
int
add
mov
jmp
int3
and
mov
test
retf
dec
test
out
mov
popf
jbe
inc
pop
out
aaa
std
(bad)
push
fs
loopne
pop
xor
scas
cmp
inc
xchg
or
jne
adc
rol
icebp
popf
arpl
jns
inc
adc
jo
dec
test
aad
pop
and
scas
imul
dec
jns
jl
test
inc
or
loope
sbb
xor
cmovge
sbb
out
pusha
cmps
xor
jns
dec
pop
cmp
pop
outs
arpl
cmp
neg
cli
push
shr
test
push
sub
inc
sbb
in
dec
fisttp
sahf
push
xor
pop
dec
pop
out
mov
fcomp
xchg
push
ds
dec
mov
ins
into
pop
add
and
das
jmp
adc
xor
mov
iret
inc
and
ins
pop
popa
pop
les
jmp
inc
cwde
das
mov
jmp
sub
lahf
mov
popa
pop
out
lahf
scas
cmps
sub
push
xor
mov
aas
(bad)
cmp
add
mov
stc
es
mov
jg
popa
sub
(bad)
cmp
inc
adc
inc
push
cs
mov
jns
cmc
mov
mov
mov
mov
and
stc
or
push
popa
xor
add
push
sub
mov
mov
nop
inc
sub
pop
addr16
sar
pop
pop
lea
jmp
xor
int3
dec
xchg
test
mov
call
or
jp
pop
mov
lods
dec
push
adc
cmp
shl
mov
dec
jmp
jo
or
jbe
xchg
inc
jge
mov
stc
mov
lds
xchg
out
iret
inc
(bad)
pop
push
jge
cmp
pop
es
pusha
adc
int3
xor
lods
inc
jo
pop
xor
aam
sub
iret
imul
rcl
repz
and
ficom
push
inc
fadd
ins
(bad)
xchg
xchg
sbb
push
fmul
nop
pause
call
outs
sub
idiv
inc
fdiv
adc
sbb
jae
jne
mov
inc
lods
inc
enter
push
das
test
ins
jge
test
aas
xor
jae
out
hlt
push
ins
(bad)
fistp
les
xlat
xchg
mov
or
shl
and
mov
jae
clc
test
std
pop
aam
sub
cmp
xor
stc
xchg
cmp
shl
(bad)
cwde
out
in
repz
lea
aam
xchg
jge
ficomp
mov
lods
cmps
mov
fcmovb
mov
xor
pop
dec
popf
pop
or
mul
and
pop
mov
data16
pop
adc
mov
popf
shr
jl
sub
cmps
popa
or
bound
sbb
add
push
sar
jne
sar
in
add
and
in
test
push
das
adc
repnz
mov
push
jle
push
add
jns
(bad)
(bad)
fadd
cld
pop
mov
aas
loopne
rol
cld
getsec
xor
cld
nop
and
mov
imul
xchg
cs
push
(bad)
icebp
nop
xchg
scas
mov
xchg
into
jge
push
inc
div
or
jns
fld
out
stc
dec
mov
xchg
repnz
lods
(bad)
mov
mov
push
and
push
dec
jnp
sbb
jmp
mov
int3
ja
xlat
inc
stc
fidivr
and
fs
ins
mov
jge
add
cmp
inc
loopne
mov
push
sub
aad
mov
out
sbb
xchg
mov
mov
in
and
mov
jb
leave
fsubr
mov
jns
stos
es
add
push
mov
mov
mov
dec
std
shr
ror
ins
cmp
gs
cdq
pop
int
les
movs
fbstp
ja
stc
push
daa
loopne
mov
or
hlt
jbe
fs
mov
jp
bound
lock
mov
sbb
repz
retf
int3
lods
cmp
push
jb
inc
lods
pusha
mov
enter
cmp
jmp
cld
cmp
retf
ja
jmp
lods
in
xchg
sub
jle
sbb
aad
adc
ror
jns
je
push
dec
add
fdivr
scas
sbb
push
push
sbb
mov
popf
pop
jb
not
mov
sub
mov
mov
pushf
je
or
and
inc
sahf
test
or
pop
mov
test
shl
push
dec
movs
push
inc
mov
les
mov
mov
pop
lods
fimul
push
inc
mov
adc
push
popa
dec
mov
mov
imul
xchg
div
pop
sbb
jnp
sub
ins
pop
pop
in
dec
inc
cs
out
in
call
pusha
inc
sub
inc
out
jne
push
add
sti
sub
mov
jecxz
or
leave
in
xor
retf
push
gs
adc
paddsw
div
jmp
or
push
and
test
pop
(bad)
jmp
and
and
popf
fucom
jle
popa
fnstenv
pop
das
fsub
std
repnz
enter
pop
cwde
jne
pop
dec
xchg
popa
jnp
push
jle
xor
fst
cdq
sbb
push
push
sbb
jmp
bound
ror
jge
fsubr
push
aam
call
cli
les
and
add
pop
js
jge
shl
sub
inc
cdq
inc
pop
(bad)
(bad)
sahf
stc
or
cli
movzx
cmp
push
or
les
arpl
adc
jle
ficomp
mov
mov
dec
jl
ret
outs
shl
arpl
xchg
cld
iret
leave
aas
ret
cmps
adc
sub
push
fdivr
push
jmp
imul
data16
aas
and
data16
call
jnp
outs
cmp
push
xor
or
stos
int3
or
aam
push
adc
pop
cwde
clc
repnz
mov
sub
jl
inc
xchg
or
shl
cmp
scas
mov
ret
push
push
cdq
arpl
(bad)
or
pop
jno
fsubr
addr16
xor
repnz
push
test
addr16
xchg
inc
nop
test
pusha
loopne
pushf
dec
arpl
mov
aaa
or
cwde
mov
into
cmc
xchg
clc
xor
push
outs
fmul
add
add
sbb
xchg
shl
xor
jecxz
push
sub
lahf
or
push
adc
xchg
(bad)
outs
call
call
sbb
xor
dec
movs
xor
mov
outs
push
jle
in
inc
adc
aad
sbb
adc
shr
xor
xor
mov
inc
xor
ret
fstp
out
xchg
rcl
jp
push
lds
paddsw
xchg
adc
push
ret
or
mov
dec
(bad)
xor
jge
aam
movs
dec
int
mov
mov
sub
cdq
inc
mov
out
daa
test
movs
lea
enter
lods
pop
adc
sub
(bad)
shr
cmp
cld
div
icebp
pusha
inc
ins
pop
iret
repz
mov
mov
sar
call
jno
push
popf
xor
bound
aas
push
mov
jno
cwde
jg
xor
retf
mov
(bad)
add
add
adc
popa
xchg
cmp
sbb
popa
push
hlt
mov
and
jns
mov
jae
add
push
mov
mov
(bad)
sbb
xchg
sbb
dec
mov
add
cmp
mov
test
mov
xchg
in
out
sbb
(bad)
pusha
jmp
es
scas
pop
sahf
dec
repz
inc
xchg
mov
in
pop
bound
or
cld
mov
sub
fstp
rol
fimul
ins
dec
retf
lds
enter
iret
cmps
xchg
jns
cld
icebp
adc
rol
(bad)
lods
fst
inc
sti
sar
into
pop
bound
dec
hlt
push
out
test
push
ds
fiadd
push
lahf
inc
and
inc
div
sub
pop
and
jl
imul
xlat
sbb
(bad)
adc
jmp
retf
(bad)
cmp
out
call
add
repnz
in
mov
loope
push
pop
arpl
jne
pusha
xor
fst
out
jne
push
test
xor
jo
lea
inc
dec
dec
jns
fdiv
add
cs
stos
mov
sti
mov
push
mov
cmps
stos
adc
aad
push
out
cld
or
xor
aaa
sub
sbb
xchg
pop
adc
mov
and
jmp
test
rcl
fcomp
rcl
les
jne
lahf
push
test
jmp
aas
das
sbb
add
addr16
(bad)
cs
xchg
jnp
rcl
popf
shl
mov
mov
inc
out
sub
mov
jge
jle
or
adc
sub
retf
pop
(bad)
aaa
rol
sbb
mov
test
sub
push
mov
aam
neg
lods
(bad)
jmp
mov
dec
adc
pop
aas
adc
or
inc
ret
xchg
ret
pop
add
test
sbb
cmp
ds
push
pop
sbb
jae
mov
(bad)
sub
pop
pop
inc
in
retf
pusha
jl
mov
int
push
arpl
pop
xchg
and
sahf
mov
movs
and
(bad)
mov
push
(bad)
push
shl
gs
cdq
sbb
mov
cmp
push
addr16
mov
sub
(bad)
fwait
cmps
in
inc
and
hlt
mov
outs
(bad)
push
ret
push
push
pop
fwait
cmp
jns
mov
loopne
push
inc
push
jne
dec
pop
add
das
sbb
xor
inc
icebp
adc
and
jl
nop
fwait
dec
xor
sbb
call
test
pop
fwait
ins
jns
xchg
mov
lahf
xlat
dec
or
jns
sbb
fsubrp
cli
fucomi
fs
adc
das
int
ins
movs
aaa
fmul
in
movs
xor
popf
sub
mov
je
xor
xor
sahf
retf
push
jge
jne
into
scas
fisttp
inc
xchg
mov
jns
add
pop
outs
mov
fstp
push
and
jp
adc
and
js
jnp
ins
add
jl
or
dec
xchg
fxch
int3
mov
jmp
sub
fwait
lea
mov
xchg
dec
mov
add
adc
(bad)
fstp
fdivrp
jae
outs
push
adc
enter
and
mov
xchg
add
push
loope
push
xor
jmp
ret
js
jmp
mov
mov
sub
cmc
stos
dec
or
mov
sar
retf
hlt
and
ja
nop
clc
mov
fs
jmp
dec
das
iret
cmp
jl
movs
imul
xor
gs
cmp
push
shl
out
add
adc
std
sahf
dec
movs
xchg
add
retf
xor
in
mov
inc
xchg
xchg
jle
pop
or
jno
jns
push
add
pushf
add
iret
xchg
clc
cld
div
push
ds
ins
outs
push
dec
mov
push
movs
sbb
les
test
imul
imul
int
je
rcr
jno
dec
pop
cli
sbb
push
imul
ins
fsub
add
mov
sbb
pop
addr16
shl
cmps
xor
enter
push
xchg
mov
push
push
mov
jbe
mov
outs
adc
(bad)
and
sbb
pop
sbb
outs
push
sub
sahf
js
sbb
add
cmp
push
dec
cmps
mov
xor
fnstcw
xchg
mov
jp
ins
sbb
lods
jecxz
dec
jo
jmp
inc
ror
pop
out
inc
mov
mov
pusha
mov
push
inc
push
adc
out
mov
gs
xor
and
lods
lods
mov
rcl
mov
cmp
movs
xor
xchg
add
and
xlat
popa
or
loope
xor
mov
sbb
fdiv
mov
sar
icebp
stos
ds
lods
dec
xor
pop
das
ret
(bad)
mov
push
cmp
sub
gs
or
inc
and
mov
stos
loope
cmc
mov
or
or
cmps
cmps
ss
jmp
out
std
sub
inc
into
enter
nop
or
in
cld
mov
scas
sub
clc
dec
adc
push
push
and
fist
lock
test
sub
test
mov
fwait
adc
jbe
sub
jbe
or
xlat
lods
data16
clc
icebp
stc
int
out
fsub
loop
mov
cli
retf
or
aaa
xchg
sub
add
pop
retf
mov
jmp
aas
into
pop
cmp
cmp
jl
daa
push
xchg
das
sbb
sub
jmp
pop
inc
mov
(bad)
mov
(bad)
fiadd
loopne
mov
or
or
ds
push
adc
sbb
sar
dec
jecxz
leave
daa
sbb
xor
lahf
cmp
add
aas
(bad)
fcom
scas
pop
imul
sub
popa
sbb
ret
pop
shl
xchg
adc
mov
cmp
addr16
jno
xor
xor
push
(bad)
dec
sbb
rcr
cld
dec
push
cmp
loop
shr
data16
mov
push
sbb
aad
out
call
cs
js
shr
jecxz
inc
imul
ror
or
jle
test
scas
ja
pop
sbb
dec
mov
xchg
push
(bad)
xchg
popf
(bad)
ss
js
movs
mov
daa
in
stc
ret
loop
mov
adc
xor
push
add
jb
aas
fistp
dec
cmp
test
dec
mov
adc
imul
push
scas
mov
leave
ja
cmp
sub
push
mov
ror
je
scas
and
popf
pop
push
outs
or
ror
cmp
dec
stc
adc
sar
and
in
dec
clc
mov
lods
outs
movs
js
cdq
mov
pop
ror
fcomp
ss
push
(bad)
imul
xchg
leave
jle
das
icebp
popf
dec
sbb
jle
dec
xor
adc
or
stos
mov
jbe
jge
test
xchg
sahf
jge
sub
mov
das
cmp
mov
xchg
loop
adc
shr
mov
scas
in
inc
dec
mov
inc
es
fnstcw
inc
arpl
adc
mov
in
(bad)
out
fwait
(bad)
loop
arpl
or
mov
cli
cwde
add
cmp
shr
add
mov
add
mov
dec
cli
cmps
sbb
vxorpd
hlt
mov
or
shl
jl
sub
fisttp
and
or
aas
into
bound
icebp
dec
aaa
bnd
dec
das
adc
call
icebp
mov
arpl
inc
jp
pop
repz
(bad)
pop
add
pop
(bad)
jp
adc
(bad)
mov
(bad)
and
(bad)
pop
and
jp
inc
out
pushf
and
psubd
test
mov
stos
or
(bad)
inc
and
(bad)
push
push
fdiv
in
cmc
repz
sub
jge
dec
push
xchg
icebp
mov
add
and
push
jl
xchg
psrlq
xchg
inc
cmp
push
fwait
xchg
hlt
mov
pop
out
push
jle
add
inc
push
(bad)
mov
inc
cmps
sub
fldcw
and
imul
mov
or
in
in
pop
ret
xchg
ret
inc
add
call
pop
repz
xchg
dec
cmp
jge
test
outs
cdq
jp
pop
inc
rcr
addr16
jmp
sbb
test
mov
ret
sub
add
ins
mov
leave
jb
xor
dec
dec
cmp
adc
sub
mov
or
jg
add
test
ret
test
arpl
dec
mov
xor
test
sbb
pop
xlat
jne
jbe
fwait
jae
rep
jmp
cmps
inc
ss
push
jbe
add
mov
jo
mov
mov
in
inc
fdiv
ret
lea
pop
outs
dec
or
cmp
jmp
mov
nop
int3
mov
or
daa
and
dec
les
xchg
dec
(bad)
in
(bad)
pop
xchg
mov
pop
jge
sbb
pop
jnp
adc
pop
push
mov
or
push
inc
ficom
(bad)
push
call
aas
inc
inc
and
adc
outs
(bad)
mov
or
iret
jb
pop
xchg
dec
clc
xor
sahf
mov
and
cmp
adc
cli
lahf
dec
and
mov
xor
mov
test
mov
push
neg
adc
cwde
cmps
xor
aad
push
(bad)
mov
sub
dec
sbb
retf
jbe
cmps
aas
dec
scas
add
aaa
jecxz
lds
xlat
ins
inc
or
bound
jmp
xor
out
addr16
jb
repnz
sti
xchg
mov
xor
mov
xor
inc
adc
jo
add
scas
out
loopne
test
outs
lds
scas
std
xchg
(bad)
adc
stos
inc
lock
(bad)
mov
sub
jbe
add
dec
sub
inc
xchg
jbe
cmc
repz
mov
xchg
(bad)
loop
std
and
or
fsubrp
stc
push
ins
dec
sub
and
ret
out
es
(bad)
jnp
xor
or
retf
sub
retf
movs
adc
xchg
mov
mov
retf
jmp
scas
(bad)
(bad)
sbb
aad
mov
sbb
lods
pop
add
or
dec
into
xor
fdivp
push
mov
mov
jae
pop
adc
jbe
stos
lds
xor
jo
jmp
sub
xchg
mov
jns
mov
fbld
adc
into
mov
dec
jmp
retf
inc
shl
or
ja
out
jmp
mov
xchg
pop
test
out
inc
jae
inc
sti
inc
push
inc
and
adc
les
inc
ror
add
(bad)
shr
retf
adc
neg
pop
mov
stos
aas
mov
jg
or
pop
xor
dec
sahf
mov
mov
and
push
push
sub
lock
pop
adc
cmps
cmp
ja
repz
jb
or
retf
lahf
sbb
sbb
adc
add
mov
lea
mov
dec
mov
int3
ss
xchg
add
and
pusha
cli
cmp
inc
xor
jge
aaa
stc
jmp
iret
cmp
std
mov
scas
inc
clc
push
dec
inc
jmp
xchg
mov
sbb
mov
xchg
xor
test
pop
jecxz
mov
sahf
sti
lods
pop
stos
loope
imul
in
pusha
sbb
xchg
pop
stos
dec
push
in
adc
imul
inc
xchg
lock
and
je
movs
dec
loope
xchg
or
ret
pop
jmp
jg
inc
jmp
jp
dec
imul
out
xchg
xor
xor
inc
mov
add
sbb
mov
xchg
add
jle
leave
xchg
and
xor
pusha
cmp
inc
jl
pop
mov
mov
pop
das
add
jb
in
mov
pop
imul
sub
ss
mov
sbb
out
jmp
inc
test
iret
or
push
push
jb
fs
in
bound
loop
sbb
jno
sub
mov
pop
stos
shl
or
push
outs
or
xchg
sbb
mov
fldpi
jecxz
test
and
sbb
xor
aas
mov
fwait
push
mov
sub
mov
fs
outs
clc
call
add
fisttp
sbb
lock
pop
bound
and
push
fsubr
loope
push
adc
rol
inc
loop
mov
out
std
rcr
retf
or
add
sbb
in
mov
jmp
(bad)
mov
ret
and
mov
aam
call
add
and
dec
adc
out
ja
and
mov
iret
adc
movs
inc
or
fcomp
shl
rcl
mov
xlat
iret
retf
repz
and
shl
sbb
add
fwait
cmps
scas
repz
div
popa
cmc
sub
push
mov
dec
jmp
gs
hlt
lock
cwde
hlt
int3
loope
in
out
call
mov
xchg
jg
cs
repz
scas
cli
push
aas
push
stos
cmps
add
dec
adc
repz
xor
or
ret
aas
inc
ins
adc
clc
(bad)
and
ins
shl
xchg
xchg
push
aaa
push
xchg
mov
jl
mov
pop
xchg
cmp
cmp
ror
cdq
ret
adc
push
das
ret
mov
pop
mov
mov
and
loope
movs
push
adc
sub
dec
mov
sub
xchg
jno
enter
test
ja
mov
adc
leave
loope
jo
mov
mov
lahf
push
outs
sbb
pop
addr16
ret
push
in
push
push
repnz
addr16
adc
in
adc
fsubr
iret
cmps
mov
ret
ss
jns
sbb
and
dec
xor
nop
pop
xchg
call
and
in
clc
xchg
sahf
(bad)
add
pop
mul
mov
push
cli
gs
sbb
cs
inc
retf
sti
arpl
mov
push
jecxz
fisubr
jo
clc
cmp
cmp
lods
neg
xchg
jg
retf
inc
scas
sahf
shr
pop
push
pop
sbb
ins
xor
rol
dec
imul
shr
push
inc
pop
arpl
aam
ins
fmul
in
fiadd
cdq
inc
je
lods
hlt
dec
xor
mov
cmps
jp
cmp
adc
or
jno
cld
xchg
mov
mov
xor
pop
pop
dec
jp
push
movs
adc
nop
dec
test
sbb
popa
adc
dec
adc
xchg
or
and
push
ret
jbe
xchg
in
add
push
xor
test
add
pop
push
scas
cdq
push
push
repnz
leave
call
mov
movs
mov
mov
jnp
shl
movs
inc
cs
xchg
pop
pop
push
cdq
mul
inc
xchg
cmp
popf
bound
pop
stc
nop
aas
ja
aad
lds
mov
out
int3
dec
addr16
or
jl
push
sbb
sub
ja
test
pop
and
push
lahf
sub
xchg
xchg
(bad)
xchg
bound
mov
gs
imul
fwait
mov
jb
shl
xchg
sub
loope
test
outs
push
pop
cmp
sbb
pushf
clc
in
fsubr
push
lods
les
cld
cmps
jmp
aas
in
cmp
into
sub
fcomip
sub
mov
push
push
lods
sub
dec
imul
sbb
pusha
sbb
hlt
jo
or
cmp
les
lods
sub
cdq
fucom
cmps
in
push
dec
out
in
mov
push
pop
xchg
dec
or
cmp
jbe
pop
test
cmp
fs
jecxz
mov
std
fisttp
mov
lock
mov
adc
mov
int3
mov
adc
cmp
push
push
retf
xchg
jae
lds
aas
test
test
cmp
(bad)
push
mov
dec
or
fist
cmp
adc
repnz
xchg
div
xchg
sbb
add
xchg
pop
fst
pop
pop
adc
jmp
push
shl
pop
movs
pusha
jge
clc
add
retf
pop
cmc
out
sbb
jne
lock
mov
or
movs
lahf
test
(bad)
(bad)
xchg
and
fstp
inc
icebp
pop
push
push
cmp
jl
sub
and
cmp
pop
and
loope
sbb
(bad)
popf
cmp
iret
stc
rcr
outs
sbb
cmp
cmc
sbb
push
ficomp
push
xchg
ins
sub
mov
scas
neg
push
(bad)
fldcw
stos
adc
mov
dec
jno
mov
sbb
lahf
push
adc
mov
daa
(bad)
loopne
cmp
inc
mov
push
xchg
movs
ds
in
sub
les
push
dec
sbb
jnp
push
sahf
imul
dec
pop
jo
lods
int3
dec
outs
(bad)
sub
mov
mov
cmp
pop
out
jmp
jo
mov
adc
mov
mov
jle
xchg
test
and
popa
ret
mov
push
loope
lods
and
lock
std
inc
fs
pop
or
inc
xchg
mov
push
push
loop
inc
adc
in
scas
(bad)
push
out
mov
push
jle
add
jp
push
mov
(bad)
daa
scas
ja
repz
cmp
xor
in
js
(bad)
lods
imul
scas
pop
jmp
mov
pop
shl
sub
inc
xlat
push
add
test
jnp
cmp
and
das
in
loop
pusha
dec
cli
clc
push
mov
sub
outs
xchg
fldcw
fwait
and
fnstsw
call
adc
icebp
dec
ins
inc
or
xor
jl
retf
pop
sbb
loope
mov
(bad)
out
mov
mov
ds
adc
outs
pusha
xor
das
sbb
mov
and
mov
pop
mov
lds
(bad)
arpl
push
mov
jne
imul
adc
push
mov
ds
jp
scas
xor
out
xlat
addr16
hlt
or
cmp
push
fdiv
push
jne
cmp
xchg
xchg
lea
mov
push
sbb
stos
dec
cs
mov
lea
repnz
add
xchg
dec
push
jae
or
pop
dec
(bad)
int3
scas
xor
cmp
push
popf
dec
jno
jnp
lods
mov
lds
add
push
add
mov
jecxz
imul
in
imul
xchg
shl
or
dec
je
push
push
jecxz
retf
pop
xchg
in
sbb
pop
pop
fbld
fisubr
or
(bad)
lds
inc
and
(bad)
or
repnz
mov
push
and
mov
int3
mov
dec
push
pop
pop
in
into
mov
sub
mov
mov
js
add
ds
out
xor
jnp
add
sbb
sub
pop
sbb
movs
imul
xor
cmp
stos
xchg
rcl
adc
test
outs
jne
dec
sbb
pop
add
fwait
ja
orps
or
or
dec
pop
(bad)
loop
adc
ret
and
add
stc
and
fmul
xchg
dec
mov
mov
enter
icebp
jg
cmc
dec
div
dec
or
repz
add
and
cmps
jmp
pop
jge
outs
out
mov
jl
jbe
sbb
mov
imul
xchg
mov
adc
mov
scas
jae
retf
mov
and
mov
sub
inc
dec
jmp
mov
push
push
les
cmp
and
inc
xor
scas
mul
jne
arpl
xchg
jecxz
arpl
push
push
mov
mov
pop
pop
or
test
or
dec
neg
test
jmp
sbb
movs
fstp
push
xchg
in
movs
mov
cmps
outs
xchg
mov
mov
mov
xchg
mov
bswap
das
push
xchg
or
daa
dec
sbb
cmps
adc
sbb
or
inc
or
add
pop
outs
cdq
or
bound
push
mov
xchg
cld
pop
sub
mov
je
adc
ffreep
push
daa
out
popa
popa
or
mov
mov
pop
inc
repz
fstp
test
sub
xor
sbb
jae
mov
mov
xchg
(bad)
test
mov
push
dec
xor
mov
loope
or
lahf
nop
jmp
test
data16
xchg
jmp
stos
ror
xor
dec
ret
add
push
and
arpl
pop
mov
cmp
retf
ror
push
lock
xor
dec
jo
sti
push
retf
jns
ror
test
out
inc
mov
in
inc
(bad)
ja
movs
cld
(bad)
sbb
popf
daa
add
mov
push
sub
mov
mov
inc
dec
std
cwde
lock
jno
retf
ret
or
jmp
pop
out
in
test
push
jns
inc
pop
xchg
pop
lods
les
add
sti
stc
adc
xlat
and
mov
pop
ins
push
push
mov
fwait
push
or
xor
repz
xchg
cwde
xchg
cmp
gs
scas
retf
xchg
repnz
cmc
xchg
xchg
jne
cmp
mov
mov
add
push
inc
inc
icebp
adc
jge
neg
xchg
push
repnz
imul
xor
mov
push
lods
mov
cmps
mov
movs
cmp
mov
paddd
push
in
sbb
stos
call
cmp
push
jg
movs
xchg
fist
cli
cmp
xchg
dec
xchg
jnp
bound
add
shr
loop
sti
cmp
outs
adc
aam
push
repz
pop
call
jg
(bad)
jae
scas
jae
in
xor
push
das
outs
and
push
sahf
and
jbe
aas
cmp
mov
pop
and
jle
call
ja
scas
ss
in
sar
cmp
sub
add
mov
mov
jmp
cmps
pop
or
std
pop
(bad)
adc
mov
(bad)
jge
adc
xor
jns
mov
cwde
fistp
mov
in
retf
cmc
fadd
sbb
jne
in
adc
sbb
mov
pop
cmc
jo
pop
fld
das
pop
int
inc
cdq
ins
ret
sti
lock
jo
xlat
(bad)
popa
iret
aam
lods
(bad)
xor
push
and
xchg
or
ins
test
xchg
xchg
pop
aam
push
bound
(bad)
mov
(bad)
and
stc
jp
cli
out
loopne
sbb
sbb
push
lds
xchg
or
clc
cdq
push
dec
cmp
out
rcl
out
popf
les
fmul
stos
xlat
mov
sahf
aad
movs
les
out
shl
aas
cld
push
rcl
add
mov
out
cmp
shr
shr
(bad)
or
movs
popf
push
(bad)
mov
jmp
xchg
mov
push
jg
dec
mov
cwde
adc
push
add
pop
shld
int3
ins
mov
cli
dec
inc
mov
adc
xor
dec
cs
sahf
add
out
fld
sahf
out
mov
fcom
push
push
adc
push
nop
xchg
ins
push
seta
sbb
add
call
jmp
xchg
mov
inc
and
sbb
pop
int
lds
mov
retf
rcr
rcl
out
jno
sbb
pop
xchg
xor
clc
mov
retf
cmps
dec
add
lods
sti
cmps
lods
add
add
inc
cmps
mov
or
mov
jne
adc
adc
cdq
mov
push
mov
sbb
ret
(bad)
mov
xchg
repnz
mov
icebp
mov
inc
mov
scas
push
outs
push
int
enter
daa
fisubr
adc
in
loope
mov
push
mov
mov
sti
leave
or
bound
fwait
shr
scas
xor
add
bnd
ins
jo
push
cwde
mov
bound
fistp
jns
pop
enter
mov
jg
cmp
scas
retf
imul
inc
loope
lds
add
cmps
div
pop
outs
cmps
or
into
scas
repz
ficomp
mov
pop
loopne
ds
xchg
cs
call
lods
mov
pop
das
cmp
jl
mov
cmp
sbb
daa
cmc
int3
xor
or
xor
(bad)
jp
movs
jb
mov
retf
inc
push
push
adc
test
fldenv
sub
cmp
lahf
outs
(bad)
xor
imul
and
je
add
xor
repz
jmp
fld
mov
out
jp
ret
push
xchg
pop
push
stos
mov
cmp
test
or
inc
xor
push
es
pop
xor
imul
xchg
or
jno
lds
pop
mov
dec
sub
or
mov
fwait
mov
movs
push
sbb
lods
fsubrp
xor
or
lock
pop
or
ss
jo
lods
loope
icebp
cmc
xchg
inc
push
dec
add
sub
(bad)
pop
or
push
jp
inc
frstor
das
xor
out
adc
out
mov
in
adc
inc
jno
jno
leave
in
aad
add
add
fadd
push
mov
int3
adc
jnp
dec
jne
test
mov
ret
pop
push
and
inc
(bad)
cmp
pop
cmp
loop
mov
pop
stc
mov
mov
jnp
cmp
push
popf
cdq
loope
lods
push
lock
mov
pop
lods
sar
aaa
or
enter
mov
aaa
test
call
jns
dec
enter
mov
movaps
loop
mov
scas
je
mov
xor
xor
or
js
jno
push
mov
xor
movs
iret
lods
pop
test
mov
xchg
div
adc
mov
cmps
test
sub
xlat
push
sub
pop
ret
pop
fldenv
daa
cmp
xlat
cli
cld
sbb
imul
inc
mov
aaa
inc
push
jbe
(bad)
dec
jmp
mov
pop
(bad)
imul
cli
adc
inc
in
das
fist
sub
jmp
call
jns
jmp
pop
pop
cwde
and
push
inc
call
dec
adc
xchg
movs
sbb
push
jmp
inc
ror
xor
jbe
test
outs
sub
xlat
jp
aas
jns
inc
sub
vsubps
push
xor
bound
cld
mov
jnp
push
or
mov
cwde
mov
and
mov
adc
xlat
add
imul
adc
bound
das
cli
cld
in
xor
mul
mov
in
aam
int
jp
popf
sbb
ss
adc
xchg
jmp
mov
pop
mov
loop
pop
out
test
lea
mov
and
shl
sub
mov
mov
dec
fadd
adc
xchg
stos
push
dec
mov
push
shl
and
pop
mov
push
gs
clc
pop
xchg
js
es
inc
daa
jge
leave
add
push
push
xor
hlt
xor
fwait
add
pusha
ficom
adc
push
xor
pushf
daa
push
mov
inc
into
stc
shl
aam
and
jns
push
dec
fsubr
adc
ja
and
fisub
mov
cmp
(bad)
cs
xor
icebp
fild
dec
adc
test
stos
mov
das
inc
ds
or
das
xor
adc
pusha
sub
mov
aam
cmps
add
jno
lock
nop
imul
gs
adc
jae
add
lea
test
ds
dec
cmp
pop
push
mov
loopne
pop
mov
out
push
mov
push
push
fst
mov
cmc
lea
sbb
adc
mov
push
cmp
inc
push
add
ja
ret
repnz
mov
enter
dec
add
(bad)
out
loop
push
(bad)
ret
and
iret
imul
inc
icebp
out
or
mov
dec
jge
sbb
cmp
popa
and
fs
je
sbb
jns
inc
push
push
jb
xor
lock
mov
xchg
pop
loop
sub
fsub
fdivr
or
(bad)
and
pop
sti
push
inc
out
icebp
mov
bound
icebp
imul
out
inc
into
data16
dec
lock
outs
sbb
test
add
or
push
sub
pop
fisttp
cmp
scas
rcr
(bad)
sahf
test
pop
(bad)
pop
popa
or
test
jle
mov
ja
xlat
pop
jne
sub
jo
in
enter
outs
push
add
dec
fnstenv
movs
inc
sbb
aad
xor
push
ins
inc
retf
mov
in
sbb
pop
mov
inc
xor
cmp
dec
push
fistp
fwait
in
inc
test
jge
xor
(bad)
jmp
aaa
lock
out
or
fst
fs
jge
shr
or
adc
shl
cmp
retf
mov
paddq
add
cmp
test
and
int3
dec
mov
jl
mov
inc
push
push
mov
outs
inc
imul
fmul
mov
nop
mov
pop
ja
jb
inc
mov
fidiv
icebp
fsubr
add
fldenv
and
adc
xor
inc
jg
push
fidiv
jl
xor
pmaddwd
inc
fldcw
in
pop
and
xchg
clc
daa
ins
sbb
(bad)
adc
arpl
aad
arpl
int
jo
mov
mov
loope
push
jae
in
push
retf
aaa
loopne
sti
or
mov
fisttp
std
inc
cmc
fdiv
(bad)
in
xchg
ds
lods
imul
push
jp
sti
sbb
cmps
sub
pop
cmp
sahf
xchg
cmp
repz
add
ds
inc
ds
lods
mov
add
adc
ficomp
xchg
lea
and
jne
jle
ds
and
add
(bad)
xor
pusha
cmc
ja
out
jge
jmp
leave
inc
push
push
nop
repz
mov
shl
mov
pop
dec
inc
inc
push
inc
lahf
scas
jno
or
das
(bad)
or
enter
push
push
and
jne
lea
push
pop
xchg
enter
lea
and
ss
test
and
sti
pop
sahf
cmp
mov
ds
lods
cs
sub
das
jbe
arpl
fcmovnbe
sbb
rcr
ja
xor
dec
jae
cdq
lahf
pop
lock
in
add
dec
neg
push
adc
dec
js
cwde
push
call
fcmove
lahf
cli
mov
dec
cmp
call
xchg
and
mov
or
jmp
sub
lods
push
jae
sub
jns
mov
fcmovu
pop
mov
adc
and
pop
js
adc
sub
pop
jge
jmp
cwde
icebp
and
int
xor
cdq
push
adc
cmp
outs
sbb
sub
popf
(bad)
(bad)
mov
test
inc
lea
add
jno
rcl
inc
out
push
jb
aad
into
mov
rcl
xor
cmp
cs
or
sub
(bad)
pusha
lahf
add
mov
hlt
dec
jg
push
fwait
lea
adc
cmp
sahf
xchg
and
mov
in
ins
int
pop
dec
loop
out
mov
(bad)
nop
jae
in
mov
je
jl
enter
adc
adc
xor
(bad)
repz
dec
mov
ror
xchg
pop
(bad)
lds
cmp
jle
das
test
inc
lods
stos
adc
jns
loop
hlt
and
xchg
jae
adc
or
mov
jmp
int
cmp
mov
int
sbb
or
push
in
div
add
pop
into
data16
sub
sbb
sub
push
retf
xor
xchg
cmp
rcr
cwde
bts
cli
imul
xchg
sbb
jno
sar
push
into
mov
shr
jns
leave
in
inc
dec
and
add
outs
popf
retf
xchg
jp
and
(bad)
fidivr
inc
bound
(bad)
fild
and
fs
or
jne
js
sub
add
(bad)
sub
and
push
or
sub
dec
push
aaa
test
lock
inc
adc
and
out
fild
test
int3
pop
mov
mov
(bad)
push
sub
ss
cmp
inc
sub
mov
mov
or
icebp
adc
enter
sbb
jl
ret
mov
adc
and
cli
cmp
fmul
add
outs
or
xor
jle
mov
mov
(bad)
not
clc
fcmovb
xchg
pop
ret
jle
cwde
pop
add
push
lods
mov
mov
jge
fcomp
jmp
push
mov
loopne
cmp
sub
sub
clc
jbe
idiv
sbb
mov
ficom
ins
push
ins
or
test
rdmsr
fimul
pop
in
leave
sub
xor
retf
xor
jmp
pop
jmp
xchg
cli
(bad)
int3
gs
mov
and
and
(bad)
jmp
dec
lea
push
cs
mov
fstp
(bad)
clc
dec
push
sbb
ret
pop
les
push
mov
push
js
pop
mov
mov
dec
xchg
cmp
cmp
mov
sbb
icebp
mov
leave
push
cmp
add
pop
sbb
and
inc
mov
out
test
leave
mov
les
dec
jge
shl
xchg
xor
mov
add
jb
dec
enter
lea
inc
mov
imul
mov
test
or
out
xor
ficom
mov
jecxz
pop
sbb
pusha
fst
(bad)
push
cmps
mov
add
jb
aas
mov
pop
add
sub
mov
jmp
retf
add
cmp
push
fstp
mov
jb
in
leave
pop
mov
mov
leave
sbb
push
xchg
inc
lods
aaa
fadd
jecxz
and
call
add
sti
cwde
je
fwait
mov
ins
nop
sbb
retf
cli
mov
push
dec
add
sbb
sub
into
push
sbb
push
mov
cmp
scas
and
retf
add
and
cmp
and
push
jno
sub
nop
mov
sbb
push
ins
cmp
xor
add
add
xlat
push
xor
icebp
push
xor
test
mov
sub
imul
jnp
out
inc
repnz
push
add
jns
test
lods
ins
xchg
ds
mov
cmp
inc
dec
(bad)
ret
dec
in
mov
push
ror
xchg
loopne
fbstp
sbb
mov
jge
xor
imul
aad
cmps
push
int3
dec
xchg
std
enter
pop
xor
mov
add
xor
mov
or
cmc
jmp
mov
jecxz
mov
inc
mov
adc
(bad)
mov
or
ja
adc
popa
retf
add
xchg
inc
dec
jle
or
sbb
dec
sub
inc
push
xchg
cmps
and
inc
or
and
jecxz
fwait
dec
push
xchg
jo
cmps
int
call
test
mov
shl
test
mov
sti
ins
mov
inc
sub
xchg
and
sbb
mov
lahf
or
arpl
or
in
and
pop
jae
test
js
fmul
punpcklbw
scas
or
inc
loope
sahf
sub
pushf
adc
and
push
popa
mov
popf
pushf
in
mov
mov
ins
js
cdq
add
sub
ins
pmulhw
hlt
into
ja
jecxz
enter
inc
mov
(bad)
rol
push
mov
xor
gs
(bad)
clc
add
sub
mov
stos
push
mov
in
add
sbb
push
fistp
pop
push
int
inc
adc
int3
mov
sti
sahf
push
add
shr
mov
xor
es
movs
loope
(bad)
lock
(bad)
pop
push
out
outs
(bad)
and
xchg
push
cmc
jns
mov
imul
or
ret
mov
push
or
and
mov
and
xchg
cmps
gs
cdq
stos
inc
push
pop
pusha
ds
push
rcl
sub
push
xchg
movs
pop
mov
pop
mov
mov
xchg
add
shl
test
js
adc
dec
mov
ficom
sbb
lock
std
xchg
dec
mov
mov
cmps
mov
mov
iret
xchg
inc
jbe
or
(bad)
out
inc
mov
imul
and
jmp
outs
fcmovne
or
test
fsubp
mov
mov
dec
mov
inc
ja
dec
mov
cmps
(bad)
daa
pop
xchg
neg
jb
call
out
pop
cmp
test
cmp
mov
jp
mov
test
dec
je
pop
cmp
pusha
push
mov
(bad)
in
bound
or
sahf
mov
add
enter
ss
xchg
gs
iret
add
pop
rcr
jns
scas
(bad)
cmc
adc
adc
ror
js
arpl
sbb
mov
pushf
movs
sbb
gs
ds
xor
adc
sbb
mov
ror
jmp
cli
in
or
cmp
out
mov
or
mov
push
test
xor
aas
stos
(bad)
adc
and
ret
cmp
mov
pop
hlt
movs
lock
in
outs
jmp
xchg
cdq
pop
jp
xchg
pop
(bad)
pop
aad
sub
aam
push
loopne
pop
xchg
adc
(bad)
into
js
sbb
jl
adc
psubw
ffree
dec
xchg
sub
mov
imul
push
and
mov
leave
mov
mov
jmp
repnz
xchg
cli
xchg
xor
cmp
dec
lahf
cmp
adc
lods
or
add
adc
aas
rcr
test
shl
fimul
out
cmp
pop
mov
xchg
jmp
fnstenv
or
pop
hlt
dec
out
shl
in
xor
cmps
mov
and
std
push
aam
enter
push
cmp
mov
push
lods
dec
test
gs
adc
fbstp
cmp
push
lock
and
fst
mov
jnp
mov
and
mov
pop
shl
inc
mov
js
mov
repnz
lods
jb
xchg
sbb
mov
mov
scas
out
xchg
fidiv
xchg
dec
push
cdq
ja
push
sbb
cmp
xchg
lea
adc
inc
pop
inc
adc
inc
mov
sar
push
int
push
dec
xchg
shl
or
or
cmp
adc
std
push
stos
les
aaa
hlt
fs
jae
mov
fwait
dec
sahf
jo
xor
inc
call
movs
pop
mov
rcr
cmp
mov
mov
mov
xor
gs
call
mov
fwait
mov
jecxz
add
mov
scas
pop
jo
push
sahf
repz
add
pop
(bad)
xor
call
ins
jge
(bad)
lahf
sti
adc
aas
ds
xchg
scas
clc
nop
xor
(bad)
xchg
jl
mov
jnp
pand
add
sbb
jnp
pushf
ffreep
sbb
stc
aas
mov
cmc
retf
fcmovnbe
and
sbb
cmp
aas
lods
jp
pop
cs
ror
jecxz
loopne
mov
inc
ja
xchg
or
jmp
mov
or
pop
idiv
scas
push
out
jp
inc
push
sbb
cmp
jnp
push
sbb
pop
test
jge
jo
cmc
dec
add
cmp
xlat
mov
je
dec
sbb
iret
xor
ficom
mov
sbb
add
shr
inc
movs
and
cmp
dec
and
mov
pop
sahf
cmp
xchg
sbb
ins
push
outs
xchg
pop
in
push
ss
les
call
cmp
mov
push
aaa
into
or
test
mov
cmp
xchg
cwde
mov
test
mov
pop
adc
(bad)
fldcw
shr
psrlq
xor
inc
popa
xor
(bad)
fs
mov
ja
or
mov
je
push
xlat
and
movs
scas
or
(bad)
fldcw
xor
aad
ins
scas
ins
xor
mov
jno
jl
mov
pop
jo
nop
sti
or
or
mov
ins
or
push
ss
jg
mov
cmps
mov
sti
pop
loopne
mov
push
push
inc
cmp
in
aad
call
pop
rcl
sar
cli
int
outs
sbb
pushf
bnd
pop
mov
aam
lods
jmp
dec
mov
sbb
ret
popf
sub
jle
data16
out
mov
or
sbb
(bad)
xchg
mov
dec
sub
xor
mov
mov
les
jb
retf
fucomi
adc
movs
push
leave
mov
clc
mov
adc
add
repnz
(bad)
shl
jnp
xor
cmp
outs
dec
lahf
dec
mov
into
arpl
jns
test
jge
shl
jmp
lahf
push
mov
mov
xchg
push
mov
dec
cdq
into
mov
mov
lods
add
sub
xor
cmp
aaa
cdq
mov
lds
dec
(bad)
aam
dec
adc
sub
mov
pop
adc
dec
lods
addr16
pop
inc
js
fadd
xlat
xor
sar
xor
les
fcmovu
pop
rcl
cld
aas
repnz
ds
je
push
jae
cld
and
and
and
dec
aaa
sub
dec
fiadd
dec
hlt
es
mov
push
jmp
movs
jmp
sbb
xchg
loop
(bad)
xor
mov
jo
into
cmp
or
pop
xor
sbb
pop
push
je
xchg
fcomp
xor
inc
dec
ret
pop
jne
mov
retf
ds
xchg
and
mov
ret
movs
xchg
adc
ret
or
sti
jg
mov
arpl
movs
nop
enter
shr
dec
dec
leave
out
fist
(bad)
xlat
inc
in
jns
aad
push
adc
lods
mov
jp
idiv
xchg
cmps
xchg
inc
ins
ins
cs
cmp
sbb
sub
aam
aad
adc
sbb
add
cmp
repz
nop
xor
outs
scas
sub
jl
repnz
sar
jg
xor
scas
mov
je
jg
sbb
and
mov
out
cmp
adc
mov
out
lods
dec
mov
js
enter
data16
mov
fild
int3
gs
add
and
pop
outs
jnp
lgs
and
sar
pop
data16
push
ret
mov
and
jne
mov
(bad)
jb
daa
and
add
dec
addr16
mov
ss
dec
add
adc
ss
addr16
cmp
dec
stc
mov
icebp
xor
xchg
mov
clc
nop
cwde
sub
mov
and
xor
repnz
sub
inc
jbe
ins
scas
pop
dec
jge
test
sbb
pop
or
cs
retf
fld
mov
pop
jp
es
(bad)
(bad)
xor
sbb
in
ror
lds
sbb
call
add
fiadd
xor
(bad)
jmp
jecxz
cdq
xor
jb
push
jbe
dec
xor
xor
push
inc
xor
cld
(bad)
lods
imul
inc
pop
popf
loop
cmp
js
sbb
dec
sti
fcom
jg
dec
pop
mov
add
jbe
jl
jecxz
pusha
call
out
xchg
cmc
call
cmps
in
dec
or
cmps
ins
icebp
xor
in
stc
mov
add
cmp
xchg
sbb
clts
jne
and
xchg
dec
shl
addr16
mov
jmp
icebp
jb
popf
js
inc
jo
sub
shr
pop
cli
mov
fsub
in
cmps
mov
sbb
aad
ss
rol
loop
xchg
xor
mov
es
adc
xlat
das
xchg
add
mov
out
pop
push
mov
push
mov
rol
fild
xor
jl
jmp
push
call
sbb
mov
(bad)
pushf
xor
jp
(bad)
xor
rol
push
cmps
sub
(bad)
and
call
add
adc
rcr
lods
mov
scas
es
push
movs
out
shr
rcr
push
call
mov
shr
sbb
inc
mov
popf
mov
xor
movaps
call
or
or
adc
iret
sbb
xchg
lahf
jg
xor
dec
outs
add
inc
add
daa
(bad)
dec
adc
lds
xchg
mov
add
jg
push
mov
mov
push
cmp
lods
pop
das
shl
loope
test
sbb
push
xchg
ins
(bad)
int3
and
call
jns
ja
nop
loop
inc
lds
and
add
inc
test
jne
pop
and
inc
mov
aam
retf
cwde
cmp
sub
mov
jmp
sbb
fnstsw
scas
(bad)
out
lock
ret
and
jp
call
fsubr
jns
(bad)
cmp
and
popf
mov
cmp
ret
fs
dec
inc
aas
mov
ins
mov
inc
jmp
xchg
sbb
ret
shl
cmp
cmp
repnz
fcomp
loopne
sbb
cmp
or
loop
rcpps
loopne
add
sub
and
cmp
or
dec
sub
ja
into
adc
push
test
imul
xchg
sti
loopne
into
aaa
pop
cli
out
ins
inc
iret
ja
xchg
cmps
ficomp
leave
push
cmps
jbe
pop
retf
push
cld
xchg
push
mov
ins
mov
mov
shl
xor
mov
pop
aad
out
cmp
dec
pop
inc
adc
ins
repnz
inc
jb
shr
pop
movs
jno
pop
(bad)
xchg
push
sbb
ds
out
mov
xchg
repz
(bad)
jge
call
bound
icebp
pop
mov
pusha
mov
in
dec
jge
or
rcl
movs
sbb
pop
fidiv
xlat
pop
sub
cmp
pop
lahf
mov
lahf
inc
push
inc
mov
mov
inc
sub
cld
ficomp
sbb
sub
test
push
sub
mov
ds
cmps
(bad)
frstor
or
mov
sub
sahf
call
retf
hlt
or
ret
mov
psubsb
push
jle
icebp
cmp
inc
imul
in
mov
lahf
pop
mov
sub
mov
push
dec
js
pushf
out
jno
in
add
add
pop
jo
mov
sti
mov
or
ror
add
dec
pop
js
xor
out
sub
mov
icebp
mov
clc
(bad)
mov
dec
cs
loopne
push
(bad)
jg
repnz
jo
adc
sub
ins
fcomp
aaa
xchg
push
outs
scas
push
sub
push
xchg
sar
push
stc
fldenv
int3
rcr
fmulp
jp
pop
jne
mov
or
call
rcl
aam
xchg
cwde
xlat
sahf
lods
loopne
push
or
ret
lock
dec
mov
sub
pop
in
dec
or
retf
or
pop
mov
sub
sbb
and
cmc
and
pop
jge
push
inc
jle
pop
mov
jmp
push
out
inc
jl
jl
leave
adc
and
pop
push
mov
jae
push
push
retf
jge
imul
ror
jb
xchg
outs
js
popf
inc
imul
or
popf
fimul
sbb
sti
outs
sbb
enter
add
sbb
sub
jo
xor
xor
jmp
mov
mov
dec
call
xor
aas
hlt
aas
in
push
sub
retf
push
inc
jno
pusha
jns
add
xchg
in
(bad)
mov
mov
sbb
outs
retf
mov
inc
ss
adc
and
or
retf
add
jg
sbb
mov
jbe
xchg
out
out
retf
jmp
imul
xlat
mov
pop
lea
leave
jbe
push
lock
mov
pop
lods
call
dec
cmps
push
(bad)
or
lahf
or
xchg
push
(bad)
jle
jb
mov
cmp
cs
push
mov
int3
mov
cmps
mov
jmp
cmps
pop
inc
(bad)
ins
lods
push
fld
push
mov
sbb
push
retf
(bad)
mov
test
fwait
mov
loop
cld
fs
mov
xchg
push
cs
sbb
(bad)
mov
inc
fcomp
jmp
push
call
gs
loopne
movs
xchg
out
cmps
lock
add
shr
jae
or
jae
outs
ss
fsub
call
push
dec
and
sar
std
adc
out
es
lock
gs
test
mov
fwait
push
and
nop
inc
mov
loop
or
and
mov
mov
jne
dec
jb
stos
(bad)
aad
push
sbb
aam
mov
sbb
scas
mov
adc
popa
push
pop
push
and
sub
pushf
xlat
xchg
repnz
mov
push
cmp
shr
adc
dec
loope
fstp
rcr
rol
pushf
ss
(bad)
fsubr
in
pop
pop
inc
test
div
cmps
and
ins
mov
test
dec
jg
test
cli
out
sub
cs
dec
cdq
iret
int
cmc
push
lahf
fist
push
adc
ins
xchg
fld
xchg
(bad)
and
dec
aas
iret
add
ret
sub
stos
pop
ds
int3
out
cmps
arpl
fdiv
ins
popf
mov
inc
retf
call
push
or
sbb
sbb
shl
aaa
out
adc
mov
popa
repnz
fs
call
shl
push
or
shl
xor
pop
in
sbb
vpsubd
clc
jno
cmps
xor
jg
cmp
push
icebp
push
(bad)
jns
or
cli
sub
sub
xchg
aas
inc
xor
cwde
lahf
or
vpaddsb
in
adc
ins
dec
sub
dec
push
sub
repz
mov
fld
jle
dec
sbb
add
mov
xchg
pushf
ret
or
xchg
push
jecxz
and
test
jle
dec
mov
jno
and
fldenv
sub
in
xchg
not
jmp
sub
add
pop
inc
out
imul
fistp
xchg
xchg
(bad)
xchg
imul
test
(bad)
psllw
not
repnz
sub
cli
bound
pop
adc
loope
shl
sbb
outs
push
xor
test
in
imul
pavgb
jle
mov
ss
pop
test
dec
jp
enter
lds
jge
inc
stos
mov
cs
mov
pcmpgtd
ins
fisubr
mov
xchg
xor
xor
cdq
dec
xchg
adc
cmp
mov
jmp
jmp
inc
mov
push
inc
mov
xor
pop
aaa
cmp
jae
jns
push
sub
nop
cmp
adc
push
xor
mov
rcr
imul
mov
jmp
jo
sbb
lods
mov
sbb
icebp
sbb
pushf
mov
adc
xor
dec
hlt
fbstp
pop
icebp
add
push
rcr
jmp
push
lea
es
sbb
mov
fidiv
and
scas
shl
shl
idiv
inc
mov
les
inc
jmp
mov
pop
jno
pop
aaa
sub
mov
in
out
add
add
push
ja
retf
push
xchg
daa
jno
inc
mov
out
inc
push
sbb
sbb
xchg
xchg
repz
dec
sub
out
int
mov
cli
jno
sbb
iret
jmp
push
push
fist
out
mov
inc
xchg
ja
pop
fxch
int
adc
or
ror
loopne
cmp
cmp
mov
cwde
lods
test
movs
sar
in
and
mov
(bad)
mov
dec
jno
aas
mov
pop
aas
enter
pop
lods
lods
mov
push
clc
push
and
or
popf
xchg
or
aam
enter
test
mov
pop
mov
add
scas
mov
icebp
enter
mov
enter
adc
lock
mov
movs
(bad)
sahf
and
in
jns
ins
int3
sub
cmp
mov
sbb
scas
outs
lock
movs
arpl
iret
(bad)
ds
sub
gs
out
mov
mov
sahf
movs
add
int3
push
add
xchg
inc
and
inc
push
inc
jne
mov
dec
add
cmps
fsubr
jecxz
test
clc
add
adc
jno
xchg
push
(bad)
jno
sbb
mov
sbb
nop
pop
or
jae
les
sbb
push
inc
pop
mov
repz
fdiv
add
je
lods
mov
aam
scas
mov
inc
fild
cdq
pop
call
jecxz
and
mov
push
std
push
jle
hlt
sub
jnp
stc
les
xor
(bad)
clc
repz
add
xor
mov
add
mov
scas
out
outs
cld
out
leave
sbb
test
cmp
push
test
jns
mov
pop
push
popa
inc
jmp
pusha
pop
out
dec
adc
sbb
cdq
xchg
fstp
xor
mov
xor
and
lods
push
adc
stos
jnp
test
or
or
pop
mov
fistp
pop
rcr
inc
jg
movs
xchg
repnz
in
addr16
clc
or
iret
cmp
inc
fwait
cld
add
cmp
pop
push
outs
mov
or
adc
adc
scas
adc
rcl
enter
pop
pop
dec
out
ins
adc
mov
nop
xchg
xchg
inc
imul
push
ins
mov
rol
ficomp
mov
scas
stos
sbb
cmc
aad
sbb
ds
push
neg
les
push
sbb
and
retf
cmp
sbb
mov
push
mov
fcmovnu
bound
add
xchg
push
pop
xor
jno
adc
cli
std
xor
aaa
add
and
je
pop
inc
jp
test
xor
cld
sbb
imul
push
mov
mov
neg
dec
cmp
push
in
pop
ins
mov
sbb
leave
ret
test
or
test
pop
inc
les
pop
or
(bad)
jb
push
pop
fbstp
in
push
dec
fnsave
dec
sbb
adc
sahf
mov
cmp
jmp
ss
and
pop
xor
call
mov
mov
jno
sbb
cmp
and
arpl
add
and
in
fnsave
push
cmps
dec
rcl
arpl
xchg
(bad)
xchg
mov
data16
lea
sahf
std
cmp
in
mov
xlat
mov
sbb
sbb
repz
imul
push
and
dec
xor
lds
fcmovu
dec
mov
and
gs
aad
arpl
out
loopne
das
and
jb
dec
ror
xor
inc
xchg
adc
mov
test
data16
cmps
adc
(bad)
sbb
mov
das
repz
iret
lahf
fwait
pop
repz
outs
add
shl
in
adc
(bad)
pop
mov
repz
xchg
scas
xchg
cs
mov
cmp
sub
dec
ror
into
jno
jmp
dec
std
ret
and
cmp
xchg
icebp
ins
inc
inc
rcr
push
cli
pop
xchg
bound
sar
mov
inc
and
cmp
add
xchg
jo
stos
mov
fidivr
stos
mov
jge
js
or
xor
(bad)
push
and
jbe
and
mov
test
sti
jle
retf
aas
pop
or
(bad)
mov
sbb
jecxz
dec
in
repnz
add
stos
mov
pop
pop
mov
pop
jns
add
stos
push
es
sahf
sub
leave
pop
mov
faddp
push
mov
in
xchg
jg
add
ins
mov
adc
pop
inc
sbb
icebp
ins
jle
pop
sar
xchg
inc
mov
jnp
jbe
add
into
cmps
add
mov
mov
dec
xchg
dec
xchg
cmp
ret
mov
repz
jne
daa
push
jo
ret
test
xor
(bad)
fadd
jle
nop
shr
adc
shr
mov
push
(bad)
pop
xor
test
clc
or
xor
(bad)
nop
bound
mov
arpl
sub
jl
pop
jae
and
inc
adc
mov
sub
xor
(bad)
inc
mov
xor
popf
xchg
jle
cdq
adc
jae
adc
sub
shl
cmp
dec
push
mov
dec
xor
pop
ja
dec
(bad)
xchg
cmc
push
sbb
in
test
mov
xchg
cld
jl
push
pavgb
mov
test
mov
push
jno
repz
fdiv
add
xor
add
das
jno
ret
xor
fwait
(bad)
sbb
push
pop
vshufps
add
cmp
push
xchg
adc
jae
push
repz
std
test
mov
pusha
pop
xor
jo
push
sbb
cmp
iret
(bad)
popa
call
add
sahf
test
cld
mov
sbb
ds
jbe
bound
js
retf
scas
cmp
mov
jmp
dec
xchg
jg
js
icebp
dec
jmp
jns
jbe
jmp
test
and
out
and
fwait
aad
xor
add
xor
sbb
mov
fistp
add
mov
and
xchg
popa
dec
hlt
enter
adc
jno
rep
sub
hlt
icebp
sbb
mov
fstp
outs
daa
pop
add
push
jo
aas
xor
outs
call
mov
popf
std
out
lock
push
in
lds
push
mov
out
fldenv
mov
cld
in
mov
in
sar
scas
inc
sbb
pop
(bad)
xor
fwait
cmp
ret
out
pop
push
and
fmulp
dec
test
inc
sub
into
in
mov
or
std
sub
js
lods
fs
add
add
xchg
shr
sbb
sbb
and
pop
sbb
jl
imul
xchg
cmc
out
mov
inc
jp
dec
inc
(bad)
(bad)
fsub
add
push
or
rcr
sub
inc
out
add
shl
or
xchg
mov
mov
xchg
(bad)
mov
pop
popa
pop
push
pcmpeqd
lahf
adc
fwait
int3
pop
dec
push
pop
ins
push
push
sbb
jnp
adc
pop
ja
dec
pop
or
or
push
xor
sbb
movs
mov
fistp
call
repz
mov
int
mov
fldcw
repz
test
aad
jbe
or
push
and
sbb
ins
mov
and
hlt
addr16
jmp
cmp
lock
jg
push
(bad)
and
test
int
fdivr
pop
add
adc
cmp
iret
es
sti
mov
adc
jns
addr16
sbb
ss
xchg
mov
inc
aad
pop
mov
loop
inc
popa
push
hlt
fst
stos
clc
push
sub
cmps
lods
stos
sbb
repnz
ret
pusha
mov
adc
ss
or
test
jb
pop
stc
je
sub
mov
jmp
repz
dec
rol
push
jl
sbb
test
sub
jecxz
xor
or
retf
rcl
mov
xchg
push
jecxz
fild
add
ins
into
cmp
arpl
imul
nop/reserved
aad
and
mov
sbb
xchg
pusha
test
fdiv
pop
ret
pusha
sar
xor
popf
fisttp
fcomp
cmp
mov
outs
xchg
dec
pop
in
jle
mov
or
cmp
bt
push
jne
mov
mov
icebp
clc
dec
and
or
add
icebp
jp
ja
loope
imul
mov
icebp
scas
sti
add
adc
mov
mov
(bad)
outs
mov
xchg
ror
not
sahf
out
rol
cmps
xchg
iret
jmp
aad
mov
lahf
sub
fistp
cmps
sbb
sar
adc
pop
pop
and
jmp
cmp
cmp
jnp
dec
sti
cmc
loopne
jecxz
lock
jns
mov
xchg
pusha
xchg
xchg
fldcw
inc
fisub
rol
dec
cmp
fisttp
push
lahf
fwait
loope
push
cwde
mov
iret
sub
leave
loopne
dec
lds
push
sub
repz
dec
sti
mov
mov
vpmaddwd
dec
mov
sar
or
mov
mov
ret
sti
mov
or
dec
push
adc
xor
pushf
or
ret
mov
push
adc
clc
add
and
jmp
jmp
pusha
in
fst
push
xor
adc
(bad)
stc
xor
sbb
cdq
int
(bad)
sbb
fidiv
test
popa
add
aad
mov
pop
sbb
dec
fwait
ret
mov
(bad)
sti
cmp
jne
mov
xchg
pop
ins
fadd
sbb
or
retf
sub
cli
fisttp
aas
(bad)
and
js
mov
inc
mov
push
stos
mov
daa
sbb
and
inc
mov
rol
inc
lea
cwde
outs
or
out
popf
mov
sti
inc
inc
pusha
or
or
arpl
mov
adc
cld
daa
sub
fsubrp
mov
or
adc
movs
sub
shl
sub
icebp
xor
pop
test
sub
ret
mov
repz
stc
push
aam
sub
int
dec
(bad)
jns
test
pop
clc
mov
dec
push
push
aam
push
loop
in
and
xchg
rcr
enter
test
dec
popf
xor
ss
inc
xor
xchg
add
mov
dec
adc
cmp
mov
out
lods
repz
repz
in
jp
repnz
call
test
add
add
fwait
(bad)
retf
sub
sar
(bad)
arpl
int
push
loop
clc
ss
jb
icebp
jge
fucom
(bad)
out
push
xchg
mov
push
xor
cs
mov
fadd
sub
xchg
or
sbb
sbb
popf
sbb
push
push
xlat
lock
ret
ds
mov
cmp
aaa
mov
ds
add
mov
je
dec
push
jmp
pop
daa
mov
out
int3
gs
std
cmp
rol
pop
test
and
mov
cmc
stc
stc
or
(bad)
rol
scas
ror
jo
adc
xor
cmp
cmp
arpl
retf
sub
or
dec
in
test
push
iret
shl
inc
pop
in
mov
mov
les
daa
cli
daa
(bad)
sbb
icebp
add
inc
sub
inc
retf
push
ficomp
add
and
aas
adc
fst
mov
mov
sahf
into
and
int
jbe
sahf
mov
mov
rcr
outs
or
repz
pop
push
cmp
xchg
out
jge
retf
pop
pushf
popa
fcmovnbe
jne
das
add
inc
movs
xchg
jmp
rol
popa
cmps
mov
rcr
adc
call
pop
inc
out
lea
or
(bad)
dec
loope
sbb
jle
adc
retf
push
dec
cdq
fdivr
add
fsubr
std
fs
mov
pop
dec
mov
mov
lods
aad
lahf
sub
pusha
shl
jp
out
jbe
repnz
xchg
xchg
ret
idiv
inc
xchg
sub
jge
fild
repz
xor
push
mov
push
aaa
std
adc
pusha
push
sar
mov
out
lock
test
leave
dec
mov
adc
outs
xchg
sub
push
test
mov
xchg
test
sahf
inc
fcom
in
jecxz
jae
sbb
sub
repz
daa
mov
outs
pop
fcomp
and
dec
(bad)
mov
ret
mov
enter
xchg
mov
add
loopne
xchg
push
lock
imul
push
std
rcr
leave
push
mov
shr
pop
jmp
xchg
bound
mov
sbb
pop
xor
cmp
out
xchg
mov
sbb
push
imul
mov
or
sub
push
ja
je
popa
xchg
add
add
(bad)
arpl
lods
or
sti
xor
inc
add
movs
cwde
out
jg
test
inc
dec
xchg
movs
adc
cmp
mov
cs
dec
es
mov
pop
bswap
cmp
jnp
cmps
or
test
sbb
ds
mov
dec
aaa
fiadd
fadd
push
or
loope
loop
xchg
std
test
push
pop
lahf
lds
jne
or
add
fidiv
mov
imul
retf
fcom
cs
icebp
leave
mov
dec
or
add
cld
out
jae
push
jecxz
mov
sub
push
repz
not
or
in
inc
dec
add
dec
xor
outs
lahf
test
fwait
mov
adc
adc
adc
push
call
xchg
sub
inc
pop
inc
xchg
cmp
jle
xchg
push
daa
adc
dec
scas
inc
pushf
adc
movs
adc
cmps
sbb
add
push
push
stos
mov
or
int3
mov
sub
sar
movs
ins
pop
or
hlt
lods
mul
or
jge
xor
pop
in
int3
out
fwait
inc
pop
xchg
enter
xor
sub
test
cmp
xlat
cmp
dec
ror
ss
and
lea
jmp
adc
pop
fcomp
cmp
sbb
js
lods
jmp
and
xchg
imul
outs
rol
sbb
and
repnz
shr
xchg
and
dec
cmc
xor
call
fmul
jns
jb
adc
dec
cmc
outs
lea
dec
jmp
xchg
movs
iret
mov
mov
pop
xchg
mov
mov
cmp
into
leave
stc
cdq
fwait
out
cmps
push
(bad)
lods
dec
add
es
xor
pop
aam
cmp
leave
(bad)
rol
jnp
(bad)
push
test
jae
and
sbb
ror
xor
jge
fbstp
mov
pop
imul
(bad)
adc
xor
into
stos
mov
adc
push
xchg
lahf
or
push
stc
push
push
and
lods
retf
(bad)
nop
adc
adc
js
and
popf
add
outs
xlat
cmc
and
mov
pop
inc
cmps
xor
loope
lds
mov
fs
dec
lods
rcl
scas
cmp
sub
dec
push
xchg
or
mov
mov
fcmovnb
je
into
mov
jle
sub
mov
es
rcl
dec
aaa
test
cmp
sub
repnz
jmp
mov
imul
lods
push
out
lock
mov
rol
cld
xchg
hlt
test
mov
data16
sbb
and
iret
arpl
les
jae
fs
in
push
retf
cld
pop
push
mov
sbb
bound
gs
jp
inc
ins
and
jo
or
inc
and
fwait
dec
fisttp
daa
xor
sub
aas
rcr
les
xor
inc
dec
mov
clc
mov
push
cmp
inc
cmp
mov
in
cmp
aaa
jb
std
adc
(bad)
cmps
(bad)
adc
adc
aas
pop
xor
shl
mov
add
jae
ret
and
pop
sbb
sbb
dec
lea
inc
and
enter
mov
add
xchg
es
and
adc
mov
pop
cmps
in
daa
dec
dec
cdq
push
in
xchg
pop
sbb
xor
aas
sbb
clc
(bad)
sbb
ds
shr
mov
dec
(bad)
xchg
outs
sub
je
add
dec
sbb
fbld
test
or
jp
mov
(bad)
jmp
or
fbstp
(bad)
cmp
push
aad
mov
rol
(bad)
test
lsl
ja
inc
test
jecxz
inc
mov
cmp
out
xchg
or
stos
imul
cmp
dec
imul
mov
sar
jb
cmp
ins
and
mov
cmc
dec
push
mov
inc
rcl
icebp
xchg
addr16
mov
jmp
add
out
(bad)
cmc
pop
dec
hlt
loope
dec
mov
mov
ds
arpl
xor
mov
sub
int3
dec
in
cmc
rcl
inc
std
push
mov
enter
add
shl
push
and
sub
inc
dec
movs
push
test
pop
call
mov
or
mov
inc
mov
les
aam
xchg
pop
mov
stc
push
imul
jge
test
xor
and
inc
mov
sbb
retf
mov
psubusw
test
xor
and
jno
shl
dec
add
xchg
stc
lds
sbb
push
cmp
jmp
mov
pop
xchg
retf
jbe
adc
or
xor
out
mov
mov
or
jmp
mov
(bad)
(bad)
or
mov
out
mov
mov
xchg
adc
fbstp
xchg
push
lods
outs
dec
xchg
ficom
je
sti
in
jns
sti
add
cmc
(bad)
aad
mov
cmp
hlt
push
rol
pop
push
jne
or
dec
sbb
xchg
test
inc
push
bound
push
jp
outs
sub
sbb
xor
lock
lods
and
aad
gs
inc
jge
jne
(bad)
movs
ins
cwde
mov
dec
pop
inc
mov
pop
mov
jge
cmp
dec
mov
or
dec
int
ret
pop
jb
cmp
adc
popa
jmp
push
mov
mov
std
push
ja
sub
jbe
and
mov
cs
imul
in
inc
adc
or
(bad)
cmp
inc
mov
jp
xor
ins
cmp
and
ins
std
imul
cmps
push
dec
repnz
xchg
xlat
sub
call
mov
mov
xchg
jb
retf
stos
pop
push
cmp
enter
add
mov
xor
sbb
inc
dec
mov
icebp
pop
cmp
ja
push
out
dec
jge
push
(bad)
add
mov
and
push
std
out
mov
pop
dec
sub
inc
daa
fidivr
mov
ror
into
and
inc
frstor
pop
fnstcw
push
stc
out
pop
je
popf
fdivr
and
sub
inc
mov
arpl
xor
push
add
pop
mov
out
lds
rcr
xor
test
inc
iret
push
cmps
(bad)
fsub
jae
sbb
or
stos
ins
mov
mov
mov
mov
pop
mov
lds
pop
daa
int
(bad)
mov
push
enter
xor
sub
popf
mov
mov
push
pop
es
mov
pop
das
stos
pop
leave
jecxz
jnp
retf
push
adc
ins
movs
or
inc
mov
dec
leave
cmp
xchg
hlt
clc
in
call
fsubp
cs
frstor
sbb
dec
dec
int3
pop
jg
jp
repz
xor
out
jno
push
iret
ret
aad
imul
jmp
xor
mov
(bad)
(bad)
hlt
ds
jecxz
pop
sbb
jecxz
adc
sub
sbb
xchg
inc
mov
pop
adc
dec
add
mov
inc
cdq
out
bound
shl
adc
mov
jmp
not
mov
sub
daa
jl
cmp
(bad)
leave
jb
sbb
cmp
rcl
int3
sbb
adc
fsubr
ror
or
jmp
mov
mov
rol
pop
jge
mov
data16
cmp
jl
iret
jle
mul
dec
gs
xor
mov
pop
ret
std
(bad)
retf
inc
adc
xor
push
ss
dec
ror
jmp
xchg
jbe
mov
pop
sbb
mov
fisub
sub
mul
aad
movs
mov
xchg
inc
data16
sub
mov
hlt
jne
push
sub
dec
repz
and
adc
int3
inc
es
(bad)
push
push
sub
pusha
aas
inc
imul
cli
repz
add
inc
adc
nop
jae
ins
mov
cmps
fwait
popf
lahf
(bad)
mov
mov
mov
cmp
xlat
popa
and
jne
mov
and
adc
add
or
xchg
lahf
xor
(bad)
cmps
pop
in
mov
push
inc
stos
jecxz
sub
in
push
je
xor
nop
in
lods
int
dec
(bad)
fadd
jmp
cmp
leave
mov
inc
jmp
daa
icebp
jmp
js
leave
mov
dec
ds
movs
or
sub
pop
aad
xchg
adc
(bad)
cld
js
cmp
and
push
aad
cmp
dec
fdivr
jne
pop
mov
sub
rep
lods
cmp
aas
dec
and
push
cmp
xchg
mov
ret
scas
iret
xor
push
mov
pop
(bad)
std
and
jmp
fwait
cdq
jno
sub
cld
je
mov
repz
loopne
retf
pop
daa
mov
sti
xchg
xor
retf
xchg
xor
sbb
mov
pusha
inc
mov
jbe
imul
call
lock
(bad)
aad
movs
int
xor
jl
(bad)
add
fldcw
mov
into
jg
cs
fmul
pop
or
out
shl
sbb
xor
jl
or
retf
jle
loop
das
fwait
ret
adc
rol
and
mov
ret
inc
mov
aad
pop
push
test
stc
add
cmps
pop
into
std
sti
pop
fild
adc
adc
pusha
inc
jae
add
dec
mov
ins
jg
inc
out
ror
sbb
jp
je
push
and
fist
push
repnz
ficomp
and
sbb
aad
addr16
popa
fidiv
test
sub
push
imul
repnz
cmp
push
cmp
pop
and
sti
test
leave
or
and
loop
mov
jno
or
cmc
pop
ins
or
pop
sahf
movs
in
or
sub
inc
dec
cmp
pop
and
int
inc
mov
and
std
fisub
mov
dec
ret
mov
imul
pop
and
sar
in
mov
lds
cmps
rcr
xchg
push
jg
or
shr
xor
pop
inc
imul
in
inc
icebp
lods
xor
mov
mov
pop
imul
push
pushf
jb
adc
sbb
inc
pop
nop
dec
ret
ins
not
sub
xchg
fisttp
test
ret
bound
imul
push
and
pop
test
stos
mov
cmps
pop
sub
sub
jecxz
shl
repz
xchg
cli
ins
mov
gs
sub
ja
sti
js
out
rol
pop
movs
dec
mov
adc
ds
lods
in
loop
aaa
leave
das
hlt
xchg
or
adc
push
icebp
sbb
cmps
adc
stos
xchg
xor
mov
adc
das
adc
push
sub
or
pushf
ds
fcom
sti
shr
adc
mov
jmp
and
arpl
sub
sbb
xor
jge
jmp
or
sbb
adc
push
cmp
ja
out
out
arpl
(bad)
cli
cdq
add
push
(bad)
jmp
ret
in
xchg
dec
bound
sti
pop
loope
in
sub
xchg
sar
outs
cld
(bad)
cmc
mov
and
fwait
pop
adc
call
ror
dec
pop
xor
test
mov
xchg
int3
mov
in
and
mov
stos
mov
cs
cld
pop
dec
and
or
inc
mov
imul
ret
jecxz
pusha
push
das
cdq
js
jge
imul
xchg
mov
mov
mov
frstor
popf
test
in
adc
into
shl
and
shl
fidiv
dec
outs
and
push
push
sar
retf
xor
cwde
lea
jo
(bad)
lods
sbb
sar
ds
shl
push
ins
push
test
std
xlat
and
jg
cmps
aad
sti
cmp
in
neg
js
mov
pusha
pop
xor
jae
dec
xchg
add
fcom
nop
sub
mov
ror
in
js
jae
adc
cmp
adc
or
cmp
imul
jmp
jmp
cmp
scas
jle
imul
mov
jnp
fcom
mov
mov
sbb
push
mov
jg
mov
push
mov
rol
aad
cld
dec
cmp
pushf
adc
loop
mov
clc
rol
jb
cmp
mov
push
test
cmp
data16
ss
jb
push
and
xchg
pop
ja
dec
aaa
lods
repnz
sbb
or
jne
mov
sbb
fld
outs
push
stc
mov
fbstp
push
int3
adc
xchg
(bad)
aaa
loop
xor
outs
sub
pop
cmp
xor
lods
push
ret
push
test
or
test
out
sbb
mov
cwde
repz
into
or
xchg
adc
jne
adc
inc
dec
lods
je
jno
je
xor
jecxz
jb
mov
pop
dec
ret
in
int3
arpl
push
(bad)
les
fcmovu
sbb
mov
jnp
sbb
mov
jge
add
addr16
aaa
call
cmp
adc
mov
or
mov
inc
repz
in
dec
hlt
fadd
jmp
sti
out
jns
popa
and
xchg
das
cmp
iret
scas
clc
jmp
call
stmxcsr
jecxz
(bad)
aad
imul
loop
out
daa
xlat
out
add
sbb
pop
movs
dec
jl
jl
mov
mov
jg
inc
xor
outs
mov
pop
mov
dec
retf
cmp
movs
push
mov
test
inc
inc
jge
jmp
fild
fst
and
xor
enter
dec
ret
dec
movs
out
movs
adc
cmps
pop
push
xlat
lods
add
pop
pop
lea
inc
pop
jmp
lods
inc
pop
ja
cld
jb
sbb
and
sub
add
in
cmp
push
ja
(bad)
fild
imul
xchg
daa
or
xchg
pop
and
aad
cwde
stos
xchg
retf
nop
mov
jmp
jmp
jp
imul
lods
sub
cmc
mov
clc
ret
mov
jns
lods
sbb
in
ror
int
loop
and
dec
(bad)
mov
imul
dec
loop
jbe
mov
(bad)
loop
xor
add
shr
or
outs
jge
out
inc
retf
retf
mov
add
leave
ret
sbb
push
cmps
int3
sub
mov
cmp
aaa
ror
cmp
xchg
dec
sub
pop
xchg
jmp
xor
xor
test
aam
lea
mov
data16
jp
and
mov
dec
fidiv
sbb
cmc
and
inc
xchg
(bad)
sbb
fwait
sbb
scas
movd
outs
dec
stc
popf
jb
adc
sub
aad
xlat
mov
fwait
pop
clc
shl
(bad)
jmp
icebp
jb
and
enter
popf
push
push
dec
mov
loope
fcomp
ucomiss
xchg
sbb
ret
sahf
mov
push
mov
adc
movs
(bad)
aas
xchg
(bad)
pop
pop
sub
jnp
sbb
in
fldenv
cmp
cs
sbb
(bad)
outs
mov
mov
pop
sbb
cmps
jbe
adc
imul
imul
push
mov
xchg
cmp
xchg
jg
cmp
jmp
gs
lods
add
jb
sub
mov
dec
aas
cwde
lea
push
(bad)
mov
inc
sbb
cmp
leave
xchg
ret
add
movs
jnp
cli
mov
stc
adc
sti
fldenv
fistp
cmp
sbb
pusha
jl
mov
fild
push
and
add
mov
fwait
add
(bad)
(bad)
ja
mov
je
int3
adc
imul
ss
not
xchg
sub
adc
into
mov
enter
mov
popa
adc
mov
jg
sbb
cmps
pop
xor
loopne
ins
mov
scas
mov
and
or
stc
pop
xchg
clc
mov
sub
or
cmps
fsub
pop
xchg
mov
cmp
inc
addr16
jbe
xlat
jecxz
jl
cmc
mov
pop
sub
or
sti
jmp
f2xm1
fisttp
and
gs
or
icebp
jecxz
iret
mov
mov
jg
mov
ins
cld
sahf
sbb
cmps
cmp
xchg
sbb
fcom
cwde
mov
push
iret
mov
add
lock
add
cli
int3
js
push
push
dec
or
out
sbb
outs
shl
fwait
sub
or
aas
imul
adc
fwait
addr16
pop
push
test
in
pop
push
mov
out
sub
enter
js
stos
and
pop
push
jbe
inc
out
test
push
mov
jmp
jns
jmp
inc
sbb
mov
cli
test
fsub
and
mov
dec
adc
out
pusha
sub
xchg
xchg
add
in
inc
fidiv
es
lock
mov
cmc
xchg
and
out
in
and
mov
cmp
push
push
cmps
test
and
cld
(bad)
in
lock
sbb
mov
movs
cs
rcl
je
cmp
inc
cmp
add
jmp
or
mov
or
jnp
xchg
mov
mov
and
out
pushf
icebp
and
mov
push
mov
inc
test
sub
stos
xchg
jb
aaa
dec
or
push
lea
call
xor
jb
push
cmp
inc
imul
add
cmps
ret
cmp
push
retf
div
test
outs
loop
(bad)
hlt
out
das
popf
les
ins
jb
lds
add
pop
(bad)
xchg
lods
retf
iret
lds
inc
mov
inc
aas
jns
dec
rol
pop
aam
fcmove
jnp
sub
iret
or
aad
arpl
ja
pop
es
mov
cli
sbb
ja
jecxz
adc
mov
enter
mov
mov
lods
stos
stc
add
sbb
jl
rcl
in
lock
add
rcl
test
or
es
jb
pop
jne
push
sar
mov
adc
mov
cmps
call
out
sub
(bad)
fiadd
dec
(bad)
dec
mov
call
push
test
clc
or
sub
cmps
icebp
enter
cmp
fiadd
(bad)
jmp
adc
call
js
fnstcw
pop
add
adc
lock
push
push
push
dec
push
cmp
ror
mov
fld
imul
popa
loopne
gs
mov
ja
jo
not
sti
inc
ds
nop
push
test
xchg
sub
cs
cmps
test
push
repz
dec
xlat
fs
movs
rol
adc
(bad)
stc
(bad)
or
mov
push
push
and
retf
cdq
stos
bound
mov
and
lds
mov
sub
xchg
retf
in
cli
xchg
test
add
or
push
sub
xor
js
clc
js
push
(bad)
and
cmp
mov
mov
push
and
sub
mov
push
dec
push
ins
addr16
je
repnz
pop
and
cld
fidivr
cmc
lods
stos
mov
frstor
and
inc
mov
pop
push
mov
cmp
xchg
dec
and
fnstenv
cmps
loope
mov
pop
inc
retf
test
inc
cmp
dec
(bad)
pop
mov
pop
and
idiv
pop
es
shr
jp
push
clc
push
stos
mov
retf
rcr
and
fisubr
and
pop
and
lahf
pop
fwait
add
fwait
out
lock
movs
int
ror
cmps
jmp
outs
bound
int3
adc
xor
(bad)
mov
cmp
adc
xor
mov
hlt
sbb
hlt
jbe
sbb
in
sahf
jge
fst
inc
lahf
pop
imul
dec
out
popa
mov
cmc
jmp
or
add
jbe
jo
jne
dec
sbb
dec
das
imul
mov
rcl
pop
push
outs
fmul
loope
out
retf
and
and
inc
push
xor
int3
jmp
ret
ds
dec
adc
cmp
mov
mov
(bad)
and
pop
pop
or
cmp
(bad)
and
push
sub
add
jge
jo
loope
inc
retf
jg
scas
jmp
sbb
out
fidiv
fcomp
les
scas
mov
cli
add
xor
fdiv
out
or
mov
cwde
popf
ins
aam
mov
pusha
mov
xchg
cld
rcr
mov
ror
shl
mov
pop
movs
sub
loop
push
inc
loope
popf
mov
pop
in
loope
lods
mov
add
(bad)
out
pop
xor
jmp
sti
lds
jmp
xchg
sub
jae
xor
mov
int3
inc
lahf
fbstp
push
mov
pop
aam
dec
push
inc
push
or
add
xor
xchg
call
dec
inc
stc
fld
cmp
jmp
or
mov
sar
ja
lock
test
cli
(bad)
xor
and
jnp
out
int3
or
inc
cmc
mov
adc
ds
dec
cli
out
in
add
icebp
sbb
mov
and
inc
pop
scas
inc
hlt
inc
(bad)
push
and
nop
jmp
mov
mov
or
mov
int3
dec
rcl
je
adc
pop
mov
test
bnd
dec
xchg
cmp
mov
iret
sub
out
mov
cmp
xor
ror
mov
xlat
dec
or
(bad)
push
mov
jb
sar
ss
data16
push
sub
add
or
adc
sti
xor
int3
and
push
cmps
adc
inc
jecxz
pop
add
out
scas
imul
retf
shl
or
lods
and
xlat
loop
pop
aam
call
fsub
pop
xchg
sti
pop
inc
(bad)
sbb
test
icebp
pop
(bad)
repnz
shr
repz
ret
mov
cmp
sub
not
xchg
cmp
loope
push
wbinvd
imul
sub
jne
(bad)
in
icebp
sub
ins
xchg
cwde
cmps
dec
loope
into
cmc
es
fsub
mov
sub
scas
cmc
aad
inc
sbb
stc
mov
cmp
pop
push
sahf
retf
push
cld
pop
test
inc
mov
sar
dec
push
sbb
cmps
aad
and
mov
popf
xor
cmp
add
jae
cmps
xor
mov
cmp
sbb
aas
mov
ss
pushf
retf
shl
jb
adc
fcmovne
mov
jno
push
lea
cmp
test
shr
cmp
jns
out
ins
dec
shr
cmp
ret
rcl
test
pop
shr
les
mov
stc
scas
add
(bad)
and
or
gs
shl
mov
and
retf
jne
pop
aam
rcl
add
mov
bnd
jl
sti
call
mov
popf
(bad)
jecxz
push
cwde
pop
cmps
das
dec
imul
scas
out
int
cmp
fisub
xchg
lods
(bad)
mov
jle
mov
imul
leave
in
xchg
mov
cmc
mov
aad
mov
mov
inc
js
imul
imul
push
mov
pop
mov
cmp
ret
cmp
add
in
sahf
lods
out
fsub
imul
mov
xchg
sti
or
(bad)
sbb
or
out
add
cmp
ffree
fimul
es
xor
lds
add
dec
(bad)
int3
sbb
mov
test
adc
jo
push
jbe
ret
and
pop
inc
(bad)
add
shr
xchg
outs
repnz
or
int
clc
jns
dec
xchg
in
dec
ins
das
int
add
and
div
add
or
stos
cmp
pop
leave
pop
mov
outs
sbb
test
ror
iret
sub
aam
adc
xlat
ins
pop
mov
call
daa
sub
addr16
push
sub
cs
mov
adc
push
jno
jecxz
outs
mov
repnz
adc
ja
out
cli
mov
mov
and
test
add
packuswb
xor
push
mov
shl
push
stc
xlat
(bad)
cmp
cmp
into
clc
ss
push
cmps
mov
fbld
jno
mov
pop
push
jmp
push
push
leave
hlt
nop
imul
mov
or
inc
xor
inc
pushf
mov
push
mov
mov
cwde
jecxz
sbb
repz
fist
fmul
dec
jmp
dec
cs
add
lock
aam
jbe
call
pop
(bad)
push
xor
in
xor
and
and
lds
cmp
jne
js
sub
cmp
cs
mov
add
mov
xchg
sub
stos
xchg
jo
add
jnp
fidivr
icebp
pop
lods
push
das
xchg
jmp
push
ret
adc
arpl
sbb
add
retf
and
popa
mov
mov
add
int3
mov
pop
pop
int
ins
cmp
cmp
sbb
xchg
jl
call
loopne
leave
jnp
cmp
sar
punpckhbw
xchg
push
pop
imul
sbb
and
xchg
(bad)
test
sub
shl
xor
dec
inc
xor
stc
in
xor
push
mov
sub
sub
call
sbb
in
inc
pop
push
add
(bad)
es
bound
dec
call
inc
inc
nop
dec
dec
arpl
or
rol
call
test
mov
xchg
div
loopne
inc
fild
in
xlat
xor
ja
push
pop
cdq
pop
xor
add
mov
outs
cmovns
jp
dec
mov
cld
adc
jmp
pinsrw
mov
inc
cmp
sub
sbb
leave
sar
dec
(bad)
adc
test
inc
and
scas
xchg
mov
adc
add
jbe
outs
jg
inc
cwde
jno
rcl
dec
inc
(bad)
mov
lahf
ss
test
mov
repz
popa
icebp
push
fild
sar
out
in
inc
out
test
xlat
sub
jecxz
lds
outs
hlt
dec
push
ja
mov
retf
xchg
mov
xchg
pop
sar
lods
aas
addr16
cmps
xchg
adc
shl
ss
imul
push
sbb
cld
cmp
test
mov
xchg
ins
jmp
jnp
pop
jne
xor
xchg
mov
retf
or
rep
xlat
(bad)
fisttp
sti
lea
pop
popf
inc
pop
icebp
rsm
jae
ret
push
jle
fild
lea
iret
in
bound
loope
dec
mov
test
sbb
adc
add
test
int
fisttp
inc
dec
push
out
jg
inc
cmps
mov
dec
jne
out
aas
mov
fcomp
repz
ds
repnz
fwait
in
arpl
stos
add
mov
jne
mov
adc
fcom
cli
and
xchg
sbb
inc
jmp
cwde
xchg
xor
(bad)
mov
arpl
jecxz
sbb
enter
sbb
xlat
xor
ret
ins
mov
test
leave
movs
shl
pusha
cld
lds
lds
xor
std
je
(bad)
loopne
adc
sbb
push
into
stc
and
pop
dec
imul
and
fstp
aas
jge
adc
xchg
pop
cmps
mul
adc
daa
mov
jmp
adc
inc
imul
dec
push
ins
test
imul
push
xor
cmp
add
xor
ja
mov
and
inc
sbb
dec
inc
cld
pushf
xchg
sub
repnz
inc
cdq
shl
mov
xor
sub
jo
and
mov
ret
push
mov
pop
xchg
mov
sbb
dec
(bad)
inc
fst
xchg
(bad)
add
(bad)
cs
or
jp
adc
adc
bound
adc
mov
mov
movs
ja
push
sti
jnp
xchg
aad
shr
dec
or
lea
pop
fucomip
je
or
and
pop
ror
add
adc
cli
fidiv
sbb
outs
rol
pop
pop
aad
cmp
imul
mov
mul
imul
pinsrw
es
les
pop
iret
sbb
cmp
xchg
outs
xor
sub
gs
stc
sar
cmc
cmp
in
fwait
mov
xor
sbb
std
sar
xor
int
or
pop
in
pop
xchg
mov
fwait
inc
push
jmp
sbb
cmps
aaa
sub
leave
sub
cmp
pusha
dec
jmp
ficomp
push
call
xchg
cli
sub
js
push
loop
inc
jb
jno
mov
or
push
push
retf
gs
in
fild
loope
sub
fucomip
adc
mov
sahf
push
aas
sbb
sbb
je
rol
pop
and
pop
cmp
nop
dec
in
stos
imul
stos
xchg
pop
push
push
mov
xchg
push
clc
jno
fst
cmp
cwde
inc
out
(bad)
(bad)
int3
(bad)
and
lods
pop
pop
retf
xor
xchg
jae
mov
add
jge
adc
lods
mov
cmps
jmp
jae
xchg
repnz
ret
cmps
repz
shr
in
and
cwde
les
pop
dec
cmps
mov
mov
inc
(bad)
mov
pop
xchg
pop
dec
or
or
fmul
xor
mov
daa
cwde
inc
mov
adc
out
callw
fs
lea
push
ret
sbb
mov
stc
dec
xor
xor
inc
xchg
pusha
(bad)
mov
call
repnz
cmp
xlat
push
and
loop
icebp
loopne
pop
les
in
xor
ret
cmp
inc
and
mov
retf
and
iret
jae
jmp
jne
mov
mov
ss
cmp
xor
in
clc
loopne
fdivr
test
mul
loopne
cwde
pop
inc
ds
scas
or
cmp
dec
cdq
cmp
push
ins
ds
adc
imul
dec
sbb
dec
jno
aas
fadd
out
arpl
out
mov
cmc
mov
fcmovnu
imul
into
fild
sbb
jge
cmc
cmp
mov
mov
mov
cmc
rcl
in
add
xor
xor
mov
rcl
pop
pop
mov
mov
mov
(bad)
hlt
loope
xchg
mov
fwait
std
pop
in
fdiv
fstp
xchg
out
cmp
retf
enter
mov
sbb
jge
jecxz
sub
daa
pop
mov
in
in
bound
fistp
sahf
stos
ret
push
retf
outs
push
call
fs
inc
cld
shl
mov
cmps
push
mov
pop
test
add
inc
xchg
icebp
cdq
test
push
sbb
out
mov
cwde
(bad)
(bad)
mov
mov
mov
pop
jbe
xchg
sti
pop
dec
push
push
dec
hlt
and
(bad)
jmp
pop
pop
nop
xor
sbb
out
cmps
cmc
add
cs
push
xchg
inc
call
mov
or
scas
stc
(bad)
test
sbb
sub
mov
fst
xchg
mov
pop
pop
xchg
mov
and
out
push
pop
jmp
sbb
jp
mov
lea
in
fcmovnb
adc
cmc
out
xchg
fnstcw
cmovg
hlt
aam
xchg
sar
out
test
jg
xchg
in
cdq
push
jmp
fadd
js
mov
ret
scas
push
dec
inc
pusha
push
repz
xor
sbb
cmps
dec
cld
jmp
fwait
sub
sbb
inc
xchg
cdq
dec
in
outs
in
and
ud0
aad
fiadd
mov
icebp
aad
mov
rcl
data16
fisubr
mov
jle
retf
mov
movs
mov
outs
sbb
ficomp
jo
lods
xchg
cmp
sbb
out
test
mov
xchg
xchg
sub
sbb
mov
mov
pop
adc
xchg
rcr
adc
popf
scas
btr
arpl
inc
stos
or
test
xor
test
xchg
inc
ins
jbe
sub
pop
jb
xor
test
scas
loop
pop
and
in
cmp
ret
out
push
fwait
xor
jmp
mov
std
jns
imul
outs
(bad)
push
scas
dec
pop
mov
and
imul
test
(bad)
push
in
inc
cmp
es
jge
cdq
add
enter
adc
fdiv
pushf
retf
stc
jo
cli
sbb
xchg
rcr
or
pushf
sub
(bad)
loopne
jnp
cmp
lahf
lahf
out
shl
mov
xor
sub
fdiv
test
adc
sub
imul
pop
(bad)
sti
push
fwait
push
cdq
das
or
jle
out
add
dec
pusha
inc
idiv
mov
sahf
outs
in
add
jl
ror
(bad)
outs
rcr
mov
cmps
or
pop
sub
xor
push
push
jo
push
ds
cmp
js
and
aaa
add
sub
xor
inc
pop
cmp
hlt
dec
mov
pop
cmp
sub
rcl
lds
add
mov
push
adc
inc
xor
jl
fsubr
mov
stc
pop
cmps
sbb
rol
nop
dec
imul
movs
into
mov
sub
mov
pusha
frstor
hlt
cmp
rol
sub
(bad)
xor
out
nop
outs
rcr
jl
inc
fdivr
movs
sub
shl
jmp
rcl
fcmovnbe
leave
aam
cmp
add
and
into
lea
lds
and
add
and
icebp
xchg
add
out
out
stc
rcr
shl
mov
repnz
add
(bad)
xchg
loop
add
and
jo
into
fisubr
dec
push
add
add
mov
dec
and
xor
ins
mov
frstor
xor
movs
fwait
mov
dec
add
add
hlt
add
push
shl
inc
repnz
ss
movs
inc
mov
cmps
mov
fild
adc
mov
sub
xchg
push
mov
retf
ds
movs
out
loop
rcr
icebp
repnz
and
(bad)
xchg
sub
into
pop
mov
push
sahf
jae
cdq
jmp
test
in
xchg
(bad)
push
jecxz
cmp
push
add
mov
test
jmp
mov
loope
inc
jle
jmp
lock
push
in
push
adc
add
and
fld
pusha
es
or
inc
mov
stc
repz
retf
xor
inc
cwde
mov
and
loop
lods
xchg
ret
(bad)
into
and
inc
lods
xchg
sbb
int
jp
inc
xlat
and
and
retf
jle
dec
imul
sub
cmp
(bad)
mov
adc
jp
call
pop
in
mov
loope
mov
add
dec
das
dec
test
(bad)
sbb
aaa
aad
sbb
popf
xchg
fild
jb
xor
out
adc
sbb
shl
dec
in
scas
imul
jne
adc
dec
sbb
or
scas
jb
xchg
jp
inc
cmp
xor
pop
(bad)
mov
sub
hlt
inc
shl
cdq
pop
push
cs
fld
jge
mov
popf
outs
pop
xor
lods
jl
lahf
test
popa
push
inc
jl
push
sar
push
xchg
test
enter
cmp
iret
xor
sti
lds
mov
jl
inc
adc
pop
xchg
in
xor
ins
mov
mov
scas
fsubp
adc
retf
sub
xor
retf
inc
test
cmp
shl
fcmove
cmps
xor
dec
repnz
push
xchg
adc
je
sub
mov
adc
movs
mov
leave
dec
loopne
loopne
shl
into
sub
outs
add
sbb
nop
dec
lds
push
jmp
arpl
pop
xchg
nop
test
push
mov
cmp
pop
or
das
movs
int
pop
test
call
sbb
loope
xchg
xor
jmp
hlt
xor
div
scas
rcr
sub
xor
push
jmp
or
adc
imul
or
lock
dec
xchg
fwait
inc
mov
pop
(bad)
mov
sub
adc
mov
fwait
lods
inc
rcl
add
xor
xor
pop
sbb
imul
sbb
dec
loope
pop
and
dec
mov
xchg
mov
pop
popf
pop
arpl
movs
mov
push
sahf
push
mov
add
pop
call
push
pop
js
push
stos
aas
mov
stos
and
or
mov
movs
dec
int
jnp
jecxz
inc
stos
sbb
out
ret
or
ins
jecxz
loop
in
xlat
mov
aam
cli
jmp
popf
sub
inc
(bad)
in
in
(bad)
sbb
test
ficomp
mov
add
xchg
es
mov
shr
mov
xchg
jmp
push
sbb
jge
stos
push
cwde
inc
cmp
popa
inc
mov
leave
scas
mov
xchg
(bad)
cmp
xchg
adc
xor
in
iret
mov
inc
dec
push
cld
test
add
xor
loope
aaa
call
cmc
pop
std
loop
test
pop
(bad)
xor
jecxz
cwde
shl
cmps
pop
ret
bound
out
or
fisubr
out
imul
fcomp
mov
in
mov
sub
cmp
data16
add
stos
jecxz
cmp
(bad)
sub
popa
pop
sub
enter
mov
repnz
in
mov
xor
pusha
les
ror
jbe
jne
lea
xor
xchg
inc
stos
mov
dec
or
ins
jae
sub
xlat
jae
ja
hlt
cmps
add
and
sbb
add
or
loop
mov
mov
cmp
in
ins
mov
(bad)
dec
cs
mov
aam
push
fstp
mov
movs
nop
sub
and
shr
inc
inc
test
fwait
or
mov
jne
inc
sub
or
sbb
(bad)
fisttp
mov
lds
fcmovnb
or
mov
pop
adc
jns
fstp
sub
out
int
and
jge
push
or
xor
xchg
int
xchg
ret
sar
mov
sbb
cs
pop
xor
mov
mov
jbe
hlt
or
push
fbstp
cmp
jmp
scas
xchg
mov
(bad)
cmp
nop
test
aas
in
jp
push
lea
jge
mov
aas
push
stos
in
mov
call
aad
mov
mov
add
mov
cmp
inc
fistp
rol
or
mov
call
dec
in
add
jne
add
mov
inc
mov
popa
outs
or
repz
or
in
sbb
dec
mov
sub
sub
jb
add
xchg
enter
lea
jmp
xlat
mov
mov
sbb
pop
mov
js
xchg
push
int3
loope
xchg
xor
sahf
push
ficomp
mov
cli
sbb
in
daa
fadd
test
fwait
mov
call
pop
imul
adc
add
into
jmp
jl
popa
cmp
pop
inc
add
push
pushf
cld
call
push
mov
xlat
shl
nop
fld
test
aam
jmp
adc
cli
adc
dec
cmp
cmp
je
mov
adc
lea
jle
retf
aas
retf
js
nop
test
or
inc
hlt
sub
repz
retf
outs
inc
fs
mov
(bad)
cmp
in
mov
aam
xchg
push
pop
out
ror
enter
xchg
fisub
jmp
pop
in
jmp
adc
fadd
push
cdq
jmp
idiv
jmp
or
sahf
sbb
cmps
add
push
pop
inc
mov
es
dec
jno
outs
push
jnp
dec
cmp
sahf
push
ja
push
pop
pop
or
pop
push
add
mov
repnz
sub
arpl
xchg
inc
mov
pushf
or
call
adc
mov
pop
mov
pop
std
jge
stos
cmps
push
retf
into
mov
adc
sub
xor
mov
or
aaa
pop
rol
push
nop
call
das
push
ror
sti
out
scas
shr
fs
mov
sub
cmp
mov
pop
adc
xchg
jge
pop
push
data16
pusha
jmp
adc
and
fld
sbb
push
test
int3
dec
movs
pop
mov
sbb
cmp
push
test
inc
jmp
push
rcr
add
jnp
repz
pop
ja
dec
nop
popf
stos
(bad)
and
mov
daa
in
mov
dec
or
cdq
push
adc
ja
jge
mov
ja
sbb
dec
xchg
and
adc
lods
(bad)
fld
or
mov
jmp
rcl
rcl
movnti
sub
jo
inc
ret
fstp
xchg
jae
push
jp
dec
mov
mov
(bad)
movs
mov
inc
mov
mov
cmp
addr16
sub
cmps
loopne
dec
jb
mov
push
inc
mov
cmp
leave
pop
adc
inc
sbb
mov
scas
pop
sbb
hlt
pop
int3
fs
mov
mov
loopne
mov
loopne
movs
in
pop
or
and
cwde
imul
or
cmp
inc
ficomp
call
loopne
and
sub
std
loope
movs
mul
xchg
add
pop
mov
ret
add
retf
addr16
sub
jmp
das
or
cs
ret
or
xor
mov
cmp
push
sbb
ret
gs
cld
xchg
int
jns
iret
test
and
or
in
mov
and
push
call
inc
pop
(bad)
mov
in
adc
mov
outs
xor
cdq
outs
cmps
push
cmps
jne
scas
cli
pop
and
imul
mov
mov
ficomp
(bad)
call
adc
or
push
cmps
xchg
stos
cmp
rol
sub
(bad)
aaa
and
sbb
mul
fcmove
adc
(bad)
jp
lahf
push
and
mul
dec
push
fbld
loop
add
cmc
cwde
mov
xchg
repnz
shl
sub
adc
mov
pop
pop
mov
bound
mov
add
ret
sub
fadd
js
std
jle
xchg
imul
out
inc
scas
mov
jle
es
xchg
rcl
and
sub
aam
adc
arpl
ficom
ins
sub
adc
aaa
test
sub
jno
fist
stc
stc
and
stos
inc
jne
add
and
stc
test
mov
dec
add
fld
adc
and
scas
mov
mov
cmp
inc
das
jmp
ror
in
retf
sub
sahf
in
fsubr
xor
movs
outs
fsub
ja
adc
sahf
xchg
aam
pop
fldcw
arpl
ret
inc
dec
repnz
mov
int
retf
or
adc
mov
rol
loop
xor
jl
adc
add
xchg
pop
and
inc
sar
jno
and
inc
pop
xor
pop
and
xor
sub
ret
ffreep
pop
mov
push
xchg
pusha
mov
and
jg
call
movs
test
lea
push
aaa
or
pop
push
rcr
lahf
ficom
add
push
call
popf
and
loope
adc
sbb
mov
into
in
iret
ret
jnp
bound
mov
sbb
or
mov
mov
push
in
xor
mov
lods
push
add
movs
in
mov
ds
inc
adc
pop
mov
dec
imul
loope
inc
dec
mov
into
stos
dec
enter
out
gs
dec
sub
adc
dec
push
ds
push
cmp
sub
inc
mov
mov
push
jl
mov
pushf
popf
add
push
pop
cmp
ret
(bad)
fxam
addr16
push
aas
sbb
dec
and
mov
mov
cdq
jmp
mov
cmp
hlt
sbb
shr
cli
pop
fs
mov
jle
jecxz
and
iret
out
inc
jecxz
pop
dec
jp
sbb
lods
movs
leave
test
mov
inc
cli
movs
popa
inc
xchg
dec
cmp
lock
ret
cmps
pop
fnsave
inc
movs
cs
pop
inc
xor
push
imul
adc
xchg
stos
adc
(bad)
jge
int3
loopne
sub
cmp
pop
arpl
cmp
xor
lods
cmc
bound
cdq
dec
jns
inc
or
(bad)
and
cli
lds
je
cwde
stc
cmp
shrd
push
loope
fs
add
mov
sub
repnz
dec
and
mov
xchg
adc
shr
movs
xchg
xchg
retf
mov
or
sub
sbb
fs
pop
mov
test
pop
cs
pop
fadd
push
lods
xor
fadd
and
cmp
sahf
dec
mov
test
lods
or
xchg
enter
xor
jg
inc
cmp
mov
jge
jle
xor
adc
jge
scas
pop
test
test
ror
(bad)
sub
cs
pop
(bad)
(bad)
push
retf
inc
adc
sbb
add
dec
bound
adc
movs
aaa
cwde
lods
out
movs
loopne
dec
stos
in
call
and
jb
add
jo
mov
or
mov
push
movs
sub
imul
mov
fs
push
cmp
int3
mov
out
sbb
retf
xchg
add
and
jnp
outs
(bad)
sbb
mov
gs
stc
cmps
(bad)
fwait
(bad)
cld
and
adc
mov
std
pop
(bad)
cmps
fs
pop
mov
cli
(bad)
push
addr16
fs
cmp
mov
mov
data16
bound
sub
fadd
test
and
cs
sbb
mov
(bad)
xchg
jne
idiv
sahf
add
cmp
gs
in
mov
fadd
xchg
pop
inc
mov
mov
jge
mov
lahf
sub
mov
sub
sub
fucomip
(bad)
aam
pop
mov
jae
mov
sub
in
sbb
ss
push
sahf
xor
jmp
pop
cmp
(bad)
repz
fld
fistp
cmp
cmc
mov
in
inc
(bad)
fdiv
mov
or
cmp
sbb
mov
jle
pop
out
test
add
cmp
test
and
sub
lods
call
and
inc
dec
je
jns
sub
pop
test
inc
fldenv
cmp
mov
fldcw
dec
test
jb
xchg
inc
jmp
pop
or
xor
outs
or
dec
repz
into
xchg
popa
xchg
data16
push
xor
sti
lods
(bad)
mov
xchg
xlat
cmp
pop
aam
push
dec
hlt
sti
push
call
in
fs
ja
inc
stos
push
std
test
pusha
push
xchg
xchg
xchg
xlat
bound
mov
adc
enter
inc
mov
push
xchg
sbb
push
ds
(bad)
fmul
sub
addr16
int
add
repz
ja
and
sbb
push
pop
in
and
fistp
leave
test
jg
loope
int
neg
jb
xchg
(bad)
cmp
jne
into
out
shl
or
xchg
std
push
mov
inc
(bad)
sub
ss
dec
add
inc
or
adc
repnz
sbb
xlat
int3
dec
stos
idiv
cld
push
jp
xchg
rcl
in
jg
mov
nop
or
jb
pop
sbb
adc
(bad)
in
(bad)
mov
mov
cdq
inc
ins
mov
(bad)
fcom
imul
push
jns
dec
jno
cmp
mov
and
mov
jo
mov
mov
push
jbe
ret
shr
(bad)
call
mov
iret
or
test
push
ror
inc
dec
pop
dec
repz
ss
(bad)
jmp
(bad)
xor
or
mov
stos
inc
stc
shl
int3
imul
mov
sbb
js
jp
mov
add
fdivr
push
jae
pop
add
add
popf
aas
push
inc
dec
push
jp
xor
retf
push
push
jo
cmp
mov
xchg
out
nop
or
push
sub
(bad)
inc
mov
jmp
fs
push
lea
xchg
or
sbb
mov
xchg
iret
mov
sbb
das
mov
ja
lods
arpl
les
inc
lods
add
fadd
mov
push
cmp
cwde
dec
xor
inc
daa
jmp
clc
push
(bad)
hlt
inc
mov
lods
sub
(bad)
outs
cli
mov
addr16
je
xchg
or
xchg
or
call
scas
clc
ins
leavew
mov
mov
iret
fcomp
or
push
call
cmp
jge
mov
test
cmc
mov
scas
xchg
adc
(bad)
(bad)
jmp
lods
dec
xchg
jns
mov
pop
pop
pop
mov
outs
bound
xor
jmp
jno
imul
iret
or
cmp
mov
xlat
pop
gs
aaa
and
sbb
pop
pushf
jb
shl
jns
or
(bad)
mov
sub
add
push
les
lds
mov
sbb
fmul
pop
je
push
and
lea
mov
imul
movs
cdq
retf
dec
mov
xchg
outs
(bad)
pop
and
nop
int
ret
retf
pop
add
lds
rcr
jg
push
mov
sar
movs
(bad)
in
dec
shr
pop
(bad)
mov
sub
inc
mov
jbe
or
retf
call
cmps
jbe
xchg
in
fcom
jo
rcr
icebp
pop
mov
int3
icebp
mov
popf
pop
xchg
xchg
push
xor
mov
xor
push
jle
pusha
(bad)
test
fwait
xchg
or
add
sub
mov
mov
in
repnz
pop
push
mov
cmp
jle
sbb
pop
mov
xchg
jo
rol
xor
(bad)
(bad)
and
mov
movs
out
push
retf
int3
ds
add
sbb
hlt
daa
xor
or
inc
nop
inc
adc
imul
loope
ror
scas
mov
push
nop
out
lea
sbb
cld
xor
adc
push
lea
mov
xchg
cmps
nop
icebp
movs
inc
push
imul
imul
movs
cmps
and
adc
rcl
or
dec
iret
and
lea
out
out
pop
nop
stos
scas
mov
out
in
cmc
loope
push
or
mov
mov
js
out
cmps
mov
inc
std
icebp
fiadd
sbb
lds
pop
imul
gs
push
sbb
test
out
add
push
sbb
dec
pop
retf
mov
jp
dec
mov
or
pushf
lds
dec
mov
jle
test
cmps
inc
xor
mov
int
inc
cmp
cmp
jae
lods
cmp
neg
xlat
mov
jg
push
inc
push
inc
sub
lds
cmps
in
sar
cmps
adc
sti
add
loope
add
out
bound
aas
jb
cmp
ja
bound
sub
int3
cld
inc
sahf
sbb
aad
inc
out
(bad)
aas
jg
mov
pop
mov
outs
cmps
inc
jmp
ret
(bad)
jns
test
fsub
push
fbstp
mov
pusha
xchg
sbb
jbe
jbe
push
call
sbb
mov
xchg
popa
arpl
sub
xchg
test
and
popa
adc
aad
mov
das
movs
push
add
and
jbe
add
jno
jle
vfmsub231pd
sbb
jae
(bad)
dec
lock
mov
jmp
les
fsubr
xchg
outs
movs
adc
imul
pop
cli
jmp
cli
add
mov
test
(bad)
cmp
fist
xor
mov
fucomip
adc
pop
outs
loopne
pop
pop
or
cmp
sub
and
mov
icebp
push
and
add
dec
jl
mov
pop
mov
cmp
cmp
lds
pop
inc
enter
pusha
lock
std
in
jno
xor
sbb
mov
ins
dec
ror
xchg
idiv
sub
std
cmp
xchg
sbb
sbb
cmps
fnstenv
add
sbb
aam
push
and
int
jmp
pop
inc
adc
ficom
cmp
mov
retf
and
xor
jne
in
mov
mov
sub
ret
adc
cmp
cmp
add
fbld
loope
mov
out
xchg
and
seta
xchg
(bad)
fcomip
in
cmp
les
pop
mov
adc
mov
mov
or
xor
sub
pop
xor
arpl
xchg
add
(bad)
add
stos
cmp
stos
loope
jg
rcr
xlat
fist
stos
ror
cmp
push
sbb
cmc
stos
inc
and
pushf
xchg
cmc
pop
pop
pushf
test
into
test
(bad)
(bad)
mov
cdq
aad
out
outs
or
mov
sub
jle
inc
or
not
adc
imul
out
mov
fistp
loopne
dec
cmp
sub
jmp
pushf
mov
pushw
gs
int
and
and
mov
dec
scas
mov
cmc
sbb
loop
mov
add
bound
jo
cmp
std
xchg
jno
loope
pop
jge
scas
push
or
into
cmp
rcl
outs
idiv
push
imul
inc
adc
lock
push
push
or
dec
mov
add
ror
xlat
pop
shr
pusha
cmp
sub
and
mov
mov
sub
or
lahf
pop
add
rol
mov
mov
dec
mov
or
ds
(bad)
push
ja
cmp
xchg
dec
or
and
or
inc
mov
inc
jle
(bad)
retf
or
xor
pop
daa
xchg
out
sub
pop
pop
jg
call
cmp
fwait
out
mov
imul
jle
xchg
cmps
inc
js
mov
rol
mov
or
lahf
jno
sbb
test
xlat
rcl
add
mov
mov
sahf
mov
jno
mov
or
inc
sbb
jmp
jp
push
retf
and
jecxz
sub
pop
ret
mov
sbb
jns
sub
rcr
ret
xchg
push
mov
pop
mov
and
jmp
outs
out
sar
mov
fidiv
xchg
dec
cmp
lods
sub
cmp
popf
lock
mov
xchg
sbb
add
mov
fadd
stc
ja
icebp
xchg
pop
fwait
xchg
fwait
pop
retf
inc
jmp
adc
dec
mov
adc
cmp
mov
mov
(bad)
xor
test
loop
xor
jnp
jmp
aam
jle
(bad)
jg
cdq
adc
mov
mov
jmp
cdq
mov
xchg
dec
jmp
pop
test
not
fwait
cmps
in
pop
fiadd
cmp
mov
push
pop
xor
xor
xchg
imul
and
inc
bound
jbe
mov
pop
rcr
jae
xchg
jnp
jne
lods
add
and
scas
sbb
fwait
out
pusha
mov
push
push
xchg
lock
and
sbb
jb
aas
mov
adc
mov
dec
or
or
cmp
ins
push
mov
hlt
clc
out
mov
xchg
mov
xchg
mov
jmp
mov
aaa
pop
pusha
loope
call
fwait
pop
mov
dec
call
pop
mov
les
imul
in
outs
shl
test
(bad)
shl
inc
mov
jp
sbb
cmp
adc
retf
or
movs
fdiv
mov
mov
and
icebp
leave
xor
add
push
out
icebp
in
in
sbb
pop
push
(bad)
jl
pop
enter
push
sub
dec
out
mov
xchg
movs
es
in
addr16
in
xor
jns
add
jge
and
sub
fisttp
sub
and
or
fstp
adc
mov
mov
int
ficom
add
cli
ror
sahf
pushf
sub
cmp
fild
jmp
push
mov
scas
xchg
mov
loope
(bad)
jl
adc
push
hlt
mov
mov
push
mov
cmps
jne
(bad)
or
and
call
aas
add
or
in
sar
cmps
ror
xchg
lock
mov
push
je
out
adc
stos
push
fsub
out
nop
xor
fs
test
mov
loope
mov
xor
or
int
sbb
pop
xor
rol
(bad)
and
aam
add
loopne
repz
inc
push
in
xor
scas
loopne
pop
adc
adc
xchg
aad
cmp
push
jmp
sub
icebp
cmp
lods
popa
push
and
mov
shl
(bad)
mov
sbb
lock
cwde
adc
xor
mul
fwait
sbb
hlt
bound
mov
mov
retf
lea
mov
xchg
icebp
xor
mov
idiv
repnz
and
sub
sub
fadd
sahf
or
xchg
out
sub
pop
sub
daa
aam
outs
shr
sub
ret
fwait
dec
scas
mov
or
sahf
pop
adc
sub
in
lods
xchg
shr
mov
jle
out
push
movs
mov
(bad)
add
int3
mov
inc
jns
adc
aam
fcom
sub
mov
xor
sbb
or
push
push
push
pop
cwde
fmul
mov
int
push
and
or
hlt
ss
lahf
jo
add
and
jmp
loop
pop
or
xchg
(bad)
sbb
fs
inc
in
fldcw
dec
inc
jle
and
(bad)
and
xor
add
ss
dec
xor
cmc
sbb
mov
jmp
mov
push
sub
push
xchg
lds
sub
movs
test
xchg
fwait
xor
mov
repz
mov
lods
scas
xchg
iret
or
je
push
jno
lahf
mov
push
adc
leave
gs
aas
and
out
test
jnp
cmps
lahf
sbb
xchg
or
les
inc
ret
(bad)
jmp
out
popa
test
pop
(bad)
jo
adc
xchg
jge
sbb
sub
push
sbb
lahf
dec
push
inc
or
jle
push
stos
(bad)
push
sbb
dec
shl
dec
and
(bad)
jmp
pop
popf
sub
sub
xor
stos
scas
push
test
sub
inc
leave
jo
sub
outs
add
pop
lods
or
add
outs
lods
xor
adc
pop
or
vpshlq
loope
adc
fadd
aam
xchg
or
stos
jo
scas
subps
popa
mov
xor
mov
xchg
ret
cdq
icebp
jb
pop
(bad)
cmp
js
and
sbb
mov
mov
(bad)
xor
pop
and
pop
or
dec
jnp
inc
cmp
pusha
pop
fsubr
and
ins
xchg
xchg
psubusw
inc
pavgw
inc
jg
mov
pop
mov
out
hlt
cmp
push
outs
leave
mov
cdq
call
aad
aad
(bad)
pop
xchg
cli
mov
aad
bound
out
sub
pop
inc
jnp
hlt
mov
scas
jae
mov
movs
jnp
in
loope
mov
mov
retf
jb
stos
lds
mov
test
pop
sbb
icebp
push
loope
lods
xchg
stos
repz
adc
xor
leave
dec
xor
aas
and
mov
cld
mov
into
arpl
mov
dec
xchg
pop
jns
(bad)
dec
je
shr
xchg
fnsave
cld
pop
hlt
(bad)
sbb
outs
sbb
test
cmp
lods
xor
cmp
stos
push
pushf
push
mov
imul
stc
and
xlat
mov
sbb
inc
arpl
int3
add
int3
jns
sti
add
or
mov
mov
fs
mov
imul
lock
cli
pop
cs
retf
idiv
add
lods
fisubr
lds
test
fcmovne
sti
in
and
xor
stos
iret
(bad)
cli
jb
lods
adc
outs
and
dec
shr
jbe
push
mov
sub
mov
lods
(bad)
jns
lods
pop
or
test
push
mov
and
or
mov
in
ss
fisttp
sub
(bad)
fisubr
sub
jecxz
dec
arpl
mov
push
sub
cmp
adc
ins
popf
push
jmp
cwde
inc
vpshufhw
xchg
sar
jecxz
lock
test
rcr
sub
sbb
jae
adc
test
or
jl
in
mov
div
xor
out
pop
movs
jb
imul
mov
sbb
movs
push
jmp
ja
outs
dec
div
sar
and
sub
dec
or
dec
cwde
mov
adc
fucomi
repnz
jne
mov
pop
mov
xchg
idiv
dec
inc
inc
mov
idiv
adc
jno
jnp
and
sysenter
or
in
xchg
push
sbb
jmp
mov
xchg
into
out
xchg
jmp
scas
pop
push
mov
in
xor
dec
sub
mov
retf
popf
sbb
or
mov
dec
call
mov
(bad)
sti
loop
loop
mov
out
adc
pop
inc
in
fcmovu
imul
cdq
add
mov
xchg
pushf
hlt
out
jle
push
(bad)
in
sbb
test
push
jg
inc
inc
arpl
pop
jno
add
jl
stos
bound
inc
mov
punpckhdq
or
addr16
dec
xlat
xor
adc
inc
sbb
adc
add
test
retf
pop
or
fidiv
nop
lods
arpl
test
rol
adc
push
in
fs
into
in
loopne
popf
xlat
addr16
xchg
cmps
adc
xlat
cmc
jmp
xlat
jecxz
enter
inc
clc
cmps
or
aad
or
movs
ret
enter
imul
lock
data16
sub
mov
mov
in
cmp
cwde
and
jmp
or
adc
(bad)
aam
push
icebp
sub
dec
dec
xchg
mov
inc
jle
mov
xor
(bad)
add
sahf
adc
and
jb
out
ret
stos
and
mov
mov
aam
inc
ss
push
push
sub
in
leave
xchg
imul
mov
movs
cmp
lods
fmul
cmp
sub
pop
in
aam
std
repnz
push
and
xchg
xchg
test
aaa
and
sbb
dec
dec
int
retf
inc
dec
sbb
push
push
inc
jge
retf
dec
lahf
sbb
push
test
dec
lods
jle
into
mov
mul
mov
bound
cmps
retf
add
sbb
std
sti
adc
jecxz
mov
mov
xchg
dec
jae
movs
xor
push
mov
mov
(bad)
and
push
mov
jae
in
mov
cmps
xor
jmp
aas
mov
jmp
les
cmps
retf
cmp
xchg
scas
and
mov
jno
and
cld
movs
inc
push
mov
mov
sbb
ret
sbb
mov
add
pop
xlat
inc
jge
pop
xor
pushf
xchg
shr
cmc
call
nop
mov
push
repnz
mov
fs
loope
fld
es
call
push
(bad)
inc
push
xor
push
xor
add
inc
sbb
test
mov
jb
push
push
or
out
mov
js
pop
dec
fld
jbe
neg
mov
fidiv
loop
cwde
popa
mov
hlt
test
or
inc
mov
int
aaa
mov
mov
jl
jmp
test
pop
rol
inc
jo
stos
inc
hlt
popa
mov
imul
les
ret
sbb
or
cmp
and
cmp
inc
mov
jbe
std
outs
push
cmps
ins
mov
ss
pop
les
jnp
loop
push
(bad)
mov
call
push
mov
jp
mov
jp
loop
repz
push
add
dec
or
mov
shr
cmp
inc
fisub
int3
ins
fadd
jle
push
stos
adc
inc
inc
imul
jecxz
ins
arpl
fist
push
cmps
imul
or
mov
and
repnz
and
jmp
xchg
xor
sbb
mov
mov
mov
mov
mov
in
movs
mov
out
jge
push
jbe
mov
adc
and
in
cwde
adc
or
ret
inc
(bad)
pop
cli
pushf
sbb
dec
lock
in
lock
aaa
ret
test
sub
call
cli
xchg
sbb
sub
mov
cld
or
mov
js
cmc
pop
xor
call
test
and
sub
nop
sbb
in
add
fadd
inc
ins
mov
or
loop
jmp
add
or
mov
and
sub
dec
imul
js
mov
(bad)
ins
mov
cld
call
cmp
or
dec
dec
or
pop
lea
shr
cmp
loope
pop
movs
mov
jmp
jmp
and
shrd
mov
std
scas
xchg
mov
push
and
and
arpl
sub
ud0
adc
inc
movs
(bad)
mov
jp
cmp
inc
jg
mov
push
add
mov
pop
dec
jne
push
pop
ret
jl
dec
pop
add
inc
fsub
sbb
push
iret
pop
or
adc
fucomp
sar
dec
fdiv
jae
popa
loopne
cwde
call
cmp
add
jnp
call
xor
dec
cmp
mov
or
movs
arpl
push
loope
sbb
inc
(bad)
frstor
ss
mov
and
mov
mov
invd
call
push
lock
jne
cs
push
lea
rcl
call
in
cs
jle
fbld
or
or
jbe
cmp
xor
mov
xor
loope
pop
inc
cmp
push
jns
bound
adc
outs
jb
in
jmp
push
inc
(bad)
cmp
push
cmp
loope
lods
mov
scas
hlt
mov
lahf
mov
jmp
je
push
jo
(bad)
push
lea
daa
iret
xor
lods
mov
pop
shl
cmp
xor
and
add
mov
jnp
dec
outs
into
daa
aas
jmp
mov
add
popf
in
mov
in
add
dec
mov
mov
mov
mov
shr
mov
and
sbb
mov
inc
or
test
pop
retf
adc
mov
pop
jmp
loopne
push
pop
out
add
mov
jecxz
xor
stc
test
sbb
fwait
pop
push
dec
lock
lods
sbb
aam
cwde
dec
loope
(bad)
mov
ins
and
lahf
add
and
(bad)
mov
jne
in
cmp
adc
sbb
(bad)
mov
mov
cld
addr16
ror
mov
push
dec
mov
cdq
sub
out
fs
mov
fldpi
data16
mov
cmc
push
sbb
ret
inc
fsubr
rcr
xchg
jmp
ficom
mul
xor
pushf
adc
inc
mov
jae
call
repnz
fcomp
loop
adc
jbe
dec
and
sbb
xor
out
mov
sbb
sub
(bad)
mov
inc
adc
dec
ds
dec
ins
mov
pop
sub
aad
dec
pop
and
add
push
in
das
sbb
fsub
dec
rol
sar
ins
xchg
mov
enter
je
push
cmp
add
xchg
pop
call
sbb
in
lea
xchg
mov
dec
mov
adc
mov
or
inc
sbb
mov
or
xor
dec
adc
retf
mov
hlt
dec
dec
push
push
pcmpeqb
xor
and
fistp
jecxz
aad
sub
push
movs
cli
(bad)
add
or
es
clc
lock
scas
loopne
mov
push
mov
out
cmps
out
cs
xor
and
or
cmps
sbb
mov
or
mov
loopne
jp
xchg
jo
add
pusha
js
mov
cmp
(bad)
xlat
mov
xchg
mov
mov
pop
inc
adc
jg
out
imul
or
xchg
lods
pop
aas
aam
add
outs
push
dec
xchg
cmp
fsubr
mov
pop
mov
mov
and
or
add
gs
sbb
xchg
mov
shl
or
dec
mov
imul
nop
sub
xchg
xor
push
pop
xchg
(bad)
test
fwait
(bad)
sbb
sbb
sub
iret
and
out
movs
inc
xchg
ins
outs
dec
xlat
ss
mov
in
jno
sbb
push
push
movs
(bad)
dec
test
pop
dec
inc
push
sti
jmp
cmps
push
test
out
inc
rcr
aad
repnz
or
cmp
fsub
pop
in
out
push
je
rcl
pop
int3
xor
add
aaa
imul
fucomip
push
pop
pop
adc
push
and
mov
dec
push
jnp
fdivp
ror
fdiv
sbb
dec
mov
jmp
nop
cmps
movs
sub
fisubr
stc
xor
push
xchg
mov
push
mov
stc
xchg
call
out
ret
mov
and
outs
mov
add
gs
loopne
xchg
ret
pop
cmc
mov
jbe
mov
cmp
mov
fsub
outs
ds
idiv
icebp
in
xchg
push
add
mov
fadd
sub
and
xchg
mov
pop
int3
scas
(bad)
xor
imul
jns
cmps
leave
std
push
movhps
int
das
jae
out
add
mov
fisttp
jo
push
loop
call
push
and
inc
shl
lahf
sub
movs
es
ins
shr
scas
pop
js
xchg
loop
sub
sar
inc
jo
or
xlat
xor
outs
mov
sbb
jmp
(bad)
or
or
sub
mov
push
sub
push
xor
dec
and
sub
gs
(bad)
dec
sar
xor
cmp
ins
inc
mov
pop
sub
pop
fmul
cmp
outs
es
pusha
push
push
mov
shl
mov
adc
pop
or
xchg
add
cmp
xlat
mov
inc
aas
in
sub
test
cmps
or
adc
xor
jmp
stc
push
adc
push
retf
data16
or
int3
in
sahf
mov
retf
mov
pusha
mov
cmp
xchg
in
cwde
xor
fwait
jecxz
pop
jmp
not
retf
out
sbb
out
gs
data16
or
fimul
xchg
out
sub
fsub
call
mov
push
lods
jle
test
jge
push
xor
stos
out
mov
dec
fimul
mov
inc
ins
cwde
cmp
rcr
pop
(bad)
cmps
test
cmps
dec
or
pop
ss
pop
(bad)
sub
or
hlt
rcl
stos
or
(bad)
xorps
mov
(bad)
xlat
out
pop
xor
mov
aam
fcomp
test
popa
pop
mov
dec
adc
pop
dec
test
adc
jnp
mov
add
push
(bad)
push
push
push
add
push
dec
ja
and
jb
hlt
mov
icebp
adc
jmp
sahf
jb
or
push
stos
mov
ret
adc
pop
imul
cmp
jmp
mov
mov
inc
mov
outs
les
stos
loopne
fnsave
mov
inc
xor
pop
dec
fwait
gs
ret
dec
cdq
adc
ror
(bad)
hlt
es
dec
jne
cmp
test
jge
popf
js
push
adc
sub
mov
sti
(bad)
cwde
jo
std
ins
mov
loope
call
test
pop
scas
into
sti
mov
inc
mov
sbb
(bad)
sub
ret
mov
mov
push
test
jge
aad
aas
popa
mov
jg
jmp
mov
cmps
jno
lods
fadd
call
add
mov
test
xchg
hlt
jno
les
call
mov
inc
and
aad
sahf
iret
sbb
push
mov
adc
fiadd
push
add
or
jl
jno
(bad)
ins
xchg
cwde
or
inc
adc
fisub
xchg
jmp
repnz
aas
in
pusha
mov
mov
fmul
fs
dec
pop
jle
sub
out
adc
gs
mov
mov
push
(bad)
mov
mov
ficomp
ficomp
iret
cmc
inc
mov
pop
xlat
xchg
out
add
sahf
pop
test
imul
cli
clc
daa
dec
xor
movs
ins
pop
je
xor
je
mov
mov
or
loop
loopne
mov
sbb
push
test
pop
ss
sub
dec
ds
out
and
adc
sti
inc
jmp
push
ja
xchg
pop
mov
and
popf
fs
xor
and
repnz
adc
je
xor
or
imul
mov
xchg
cmp
pop
jmp
mov
pop
lahf
test
add
sbb
lods
scas
mov
test
jmp
jmp
inc
mov
test
and
into
cmp
addr16
mov
sbb
stos
sbb
pop
inc
xor
mov
mov
mov
mov
add
inc
xor
inc
inc
pop
jnp
shl
dec
out
push
jnp
jno
pop
push
jbe
add
and
pop
mov
outs
ins
out
ins
shr
mov
pop
popa
imul
xchg
add
std
loope
fidivr
bound
sar
or
mov
add
(bad)
pop
push
iret
and
pop
or
(bad)
sbb
in
lds
lds
lahf
sahf
jo
xchg
push
jmp
mov
pop
imul
std
retf
mov
sbb
add
mov
push
scas
bound
pop
push
ret
push
ss
cmp
stos
mov
in
out
sbb
push
jne
(bad)
mov
cwde
sahf
repz
jecxz
(bad)
sbb
ja
sub
fwait
loope
retf
nop
mov
cmp
clc
clc
mov
clc
out
add
cmc
adc
in
ins
jno
add
pop
pop
xchg
dec
mov
sub
stos
xchg
je
or
and
dec
pop
shl
mov
out
lods
add
fwait
enter
mov
push
dec
scas
test
movs
fs
adc
mov
loopne
xchg
popa
shl
hlt
sbb
mov
(bad)
fidiv
fwait
mov
cld
in
push
(bad)
out
jnp
shr
lods
xchg
mov
sub
push
cmps
(bad)
xchg
sub
sub
xchg
xchg
sbb
pusha
cli
int3
in
popf
mov
dec
adc
ins
(bad)
sub
adc
stos
dec
aaa
ss
xchg
mov
adc
test
cdq
fimul
mov
mov
aaa
jne
mov
sub
leave
aas
loopne
ror
enter
sub
push
(bad)
sbb
cmp
inc
fst
push
into
cld
sub
adc
mov
lods
jae
pop
and
or
mov
popa
aas
imul
xor
xor
mov
mov
repnz
xlat
xchg
jno
cmps
add
add
or
and
mov
pop
lea
pop
aad
xchg
(bad)
jae
push
jae
or
add
cmp
cmp
ins
mov
out
pop
pop
xchg
add
fcmovu
das
pop
mov
pop
sub
call
mov
xchg
xchg
sbb
pop
or
addr16
sub
stos
call
jbe
or
cmps
jae
pop
xchg
xchg
cmps
push
test
addr16
jb
jp
fcmovne
push
cmc
xor
inc
std
sbb
mov
jnp
cmp
dec
xchg
or
lahf
mov
test
inc
not
scas
cmp
jmp
cmp
mov
leave
or
push
push
rcr
mov
fld
push
rcl
inc
iret
sti
sbb
mov
rcr
out
sbb
mov
jp
xchg
loop
lock
mov
fcmovbe
jbe
jo
lods
xor
push
cld
xor
jb
cmc
aas
mov
ins
inc
mov
dec
mov
push
mov
mov
cpuid
push
je
pushf
shl
jl
pop
xchg
loopne
aam
and
popa
test
or
xor
inc
jno
xor
fs
xor
jmp
push
jge
dec
outs
pop
lds
imul
sub
repz
mov
or
(bad)
sbb
and
in
pop
mov
punpckhwd
pop
mov
rcr
xchg
sbb
std
in
xor
jno
xchg
enter
sbb
cmp
clc
xchg
rep
sbb
movs
dec
xor
pop
push
xor
repnz
adc
imul
mov
mov
mov
popa
retf
xchg
cdq
sar
cmp
and
pop
lahf
dec
sbb
inc
loopne
dec
xor
fdivr
call
xor
js
adc
cdq
xchg
inc
cmp
test
and
sub
fwait
inc
in
(bad)
mov
or
lahf
jle
sub
mov
pushf
jmp
sub
mov
sbb
mov
xchg
add
rcl
lds
retf
xchg
(bad)
retf
mov
adc
xor
arpl
test
and
fsub
pop
xchg
rcr
push
add
call
out
push
or
icebp
jb
sbb
cmc
or
dec
cmp
clc
fstp
or
ret
cli
fwait
pop
test
sbb
aaa
inc
mov
fdiv
or
adc
pop
inc
dec
xor
adc
sbb
adc
cli
clc
adc
add
xchg
jmp
and
xor
xor
mov
sbb
fdivr
iret
fiadd
ds
(bad)
es
pusha
sub
adc
test
mov
inc
xchg
lods
mov
iret
xchg
sub
mov
aas
in
mov
pop
sbb
retf
int
pop
xchg
pcmpgtd
ja
les
stos
outs
fs
xlat
mov
movs
fild
jns
dec
fs
in
push
pop
or
dec
retf
sub
aas
and
xchg
ds
jle
pop
lods
jecxz
pop
retf
fdiv
add
sti
jmp
out
outs
sub
aam
sbb
cmp
inc
icebp
sahf
es
sub
sub
xchg
sub
jnp
fcom
pushf
cmps
cmp
test
pop
test
mov
sbb
sub
stos
mov
dec
jne
pusha
cdq
cmps
push
xchg
iret
sbb
stos
sahf
out
shl
imul
add
dec
sub
sub
sbb
mov
outs
and
std
out
xor
imul
adc
jecxz
dec
and
cmps
xchg
call
mov
sbb
sahf
dec
rcr
mov
test
push
cli
psrlw
or
jo
dec
pop
push
rcl
(bad)
or
jb
jg
pusha
pop
push
out
mov
out
test
xchg
xchg
and
rcl
dec
repnz
mov
or
sahf
sub
jae
test
mov
add
xor
jl
jle
pop
and
pop
aaa
push
cs
in
adc
int3
call
push
cmp
or
jns
ficomp
xchg
sahf
aam
in
ins
sub
shl
ds
cdq
pop
in
cmp
pop
ror
jb
imul
xchg
lock
div
in
dec
popf
fiadd
jmp
fidiv
pusha
add
and
sbb
repz
outs
push
push
fimul
dec
es
xchg
lock
mov
or
jl
std
cmp
jmp
adc
mov
fstp
aas
fnstenv
hlt
jge
inc
(bad)
fs
adc
jnp
in
xor
sbb
xchg
adc
sbb
and
out
test
inc
dec
sbb
ja
inc
mov
or
fild
mov
neg
mov
mov
les
in
sti
sbb
(bad)
cld
pop
js
pop
sbb
loope
fimul
pshufw
dec
mov
mov
mov
enter
sub
sbb
and
in
xchg
scas
jo
popf
add
mov
fsubr
sub
and
fist
daa
cmp
and
cdq
test
jnp
mov
sub
stos
cdq
lods
(bad)
or
imul
add
adc
cmps
push
sahf
mov
mov
jmp
or
jle
sbb
xlat
mov
hlt
push
adc
retf
jnp
add
add
fsubr
mov
dec
adc
pushf
lahf
push
shl
xchg
imul
mov
jle
out
mov
iret
inc
clc
push
mov
jl
push
lea
cwde
push
jecxz
ins
mov
sub
pop
(bad)
sti
(bad)
repnz
cmp
sbb
mov
sbb
sbb
inc
cdq
out
cmp
pop
stc
ffree
ds
pushf
xchg
sub
or
pand
add
jae
and
dec
bnd
call
retf
test
pushf
sub
scas
aad
sbb
icebp
(bad)
out
add
jo
or
cmp
call
inc
sub
sbb
mov
xchg
mov
test
sbb
ins
les
mov
aam
leave
stc
add
test
and
js
inc
test
sbb
or
sbb
xchg
gs
or
pushf
mov
jl
mov
retf
scas
pop
mov
mov
cwde
addr16
jmp
stos
push
push
shrd
push
enter
push
pop
loopne
inc
mov
out
mov
lods
(bad)
mov
pop
inc
mov
jnp
call
fidiv
ret
sub
cmp
sbb
cs
pop
out
clc
and
out
dec
shl
adc
xor
jle
cmp
push
jbe
movs
int3
mov
cmova
adc
outs
jno
mov
mov
dec
adc
jge
rcr
or
xchg
popf
in
cmp
cmps
and
ror
sbb
mov
js
loopne
dec
pop
cwde
or
fnstenv
sbb
and
(bad)
sub
mov
push
dec
cmc
cmp
push
out
and
jg
bound
mov
ds
scas
dec
(bad)
push
xor
dec
push
cs
(bad)
sbb
daa
fisttp
push
xchg
xchg
inc
maxps
pop
outs
cwde
xchg
cmp
nop
sbb
push
or
and
retf
enter
jne
mov
xchg
ins
sbb
push
xor
into
hlt
sub
addr16
sti
clc
xchg
jbe
pusha
sbb
ins
xchg
les
xchg
mov
scas
jmp
test
and
mov
push
pushf
cmps
inc
add
inc
jge
mov
loopne
pop
xor
push
test
repz
mov
test
pop
cmp
test
adc
or
js
aaa
dec
jecxz
in
adc
shr
mov
or
sar
pop
dec
stos
and
std
push
mov
jg
add
pop
sbb
xchg
cmp
jmp
add
and
and
sub
dec
or
lods
add
shl
xor
mov
call
es
mov
xor
out
sbb
xchg
ret
lahf
out
shl
js
jmp
imul
add
jp
push
les
inc
aaa
pop
jno
mov
xchg
int3
imul
xor
test
orps
int3
call
mov
sbb
dec
fcomp
psubd
sbb
popf
inc
std
sub
(bad)
pusha
inc
(bad)
or
ret
sbb
and
and
into
sti
xor
ja
lea
es
out
lods
jne
(bad)
jp
cmp
loope
inc
mov
xor
pop
or
dec
mov
(bad)
fist
les
adc
or
movs
data16
or
xchg
das
arpl
cwde
mov
in
dec
jbe
sbb
mov
cmp
adc
pushf
inc
cmp
and
inc
jno
jmp
mov
adc
in
push
cld
inc
ja
es
paddq
push
cld
sbb
and
lahf
adc
pusha
jmp
jbe
adc
inc
xchg
addr16
int3
push
(bad)
mov
mov
call
push
ret
(bad)
push
(bad)
gs
jbe
jb
pushf
aas
pop
leave
pop
mov
pusha
inc
mov
add
jae
or
imul
pop
in
aam
pop
ret
jmp
cmp
dec
add
sbb
or
pusha
scas
add
push
cmp
cdq
jle
cmp
or
jne
dec
pop
repz
repz
addr16
sub
aas
push
pop
and
xchg
outs
inc
fnsave
mov
push
push
fdivr
je
jmp
pop
xchg
inc
imul
fst
push
bound
mov
(bad)
jne
mov
cmps
jno
sbb
mov
lea
loopne
jno
cmps
mov
fimul
and
sahf
sbb
test
adc
lahf
mov
sbb
mov
fwait
jle
hlt
test
popa
mov
test
aad
cmp
pop
xchg
mov
sti
scas
ds
cld
pop
add
mov
mov
aam
xchg
and
or
push
inc
scas
push
pop
pop
aam
sub
mov
mov
ins
jge
shr
xor
cmp
add
dec
push
hlt
push
pop
push
jg
xlat
(bad)
out
in
and
mov
xchg
scas
in
push
out
out
mov
mov
lods
mov
popf
mov
sub
jns
xchg
cdq
mov
in
lahf
cli
test
ins
fs
push
lahf
fsubr
retf
cmps
jmp
xchg
ins
xchg
xor
mov
xchg
jmp
inc
test
mov
cwde
mov
adc
push
push
cmps
fldcw
(bad)
sar
mov
and
pop
mov
outs
sub
imul
add
aam
push
adc
in
(bad)
js
sbb
push
dec
xlat
mov
hlt
cmp
mov
mov
adc
sbb
enter
jnp
mov
push
hlt
lea
xchg
std
sbb
es
mov
pop
dec
push
mov
pop
popa
aad
jmp
or
xor
add
lahf
lods
pop
jge
inc
pop
xchg
jns
movs
inc
div
in
xor
shl
pop
(bad)
mov
jbe
cmps
lods
test
mov
movs
scas
movs
repz
xchg
enter
dec
aas
sbb
icebp
mov
add
push
cmp
nop
fiadd
pusha
mov
aaa
cmp
mov
jbe
push
dec
imul
and
mov
aad
cmp
ret
sub
xor
adc
sub
outs
pop
cmp
rol
sub
sar
std
std
jmp
shl
push
or
int3
cld
cld
fld
lea
inc
dec
ins
leave
pop
push
cmp
cli
pop
add
imul
jp
clc
in
sub
dec
or
out
xchg
clc
and
push
jecxz
cmp
cwde
inc
jo
cli
ret
pop
aam
and
and
popf
imul
ins
gs
sub
jae
psubsb
repz
retf
pop
aas
inc
inc
lods
xlat
jmp
aas
push
or
mov
mov
out
or
sub
or
dec
mov
or
repz
clc
pop
add
and
jmp
jns
cmps
arpl
xor
bound
or
mov
out
ins
aas
jne
xchg
xor
and
hlt
test
jle
and
inc
std
movs
cld
mov
pop
xchg
shl
mov
shr
dec
mov
adc
lahf
cli
lods
or
xor
out
add
in
jne
pop
loopne
loop
cli
or
sti
jne
fcomp
scas
push
out
and
fdiv
das
inc
inc
cmc
outs
mov
jmp
mov
mov
in
repz
mov
stos
adc
jle
daa
pop
push
sbb
scas
scas
sub
stos
mov
retf
mov
imul
sar
imul
jbe
fild
sahf
fist
mov
popf
aas
mov
mov
add
test
sbb
or
push
xchg
es
clc
outs
dec
dec
xor
or
and
hlt
xchg
(bad)
jle
mov
(bad)
int
jnp
pop
mov
mov
(bad)
and
mov
push
sbb
aad
and
xchg
xor
cmp
jnp
sub
call
adc
pusha
mov
sbb
add
sub
jg
sbb
fstp
dec
fimul
dec
jno
out
mov
sub
into
fs
push
cmp
pop
sub
adc
pop
scas
clc
mov
jne
mov
dec
add
mov
dec
dec
xor
cmp
or
outs
in
retf
jae
add
nop
and
cmp
fs
jbe
in
cli
lock
jp
jns
xchg
mov
sub
mov
xchg
mov
mov
mov
sbb
adc
cmp
outs
outs
hlt
adc
scas
or
iret
(bad)
jb
sbb
mov
mov
(bad)
fsubr
addr16
or
mov
in
fsub
stos
mov
dec
inc
ja
clc
addr16
clc
cld
push
outs
aad
(bad)
call
xchg
smsw
jmp
int
cld
sub
rcl
jle
jne
pop
nop
pop
in
push
mov
jnp
mov
or
and
das
test
jo
push
push
shr
test
scas
es
xor
cmp
push
pop
mov
in
inc
ins
lahf
pop
bound
scas
iret
jp
pop
jle
daa
lds
outs
scas
jg
imul
les
jp
jg
mov
inc
mov
in
fiadd
push
je
push
or
add
ins
out
scas
div
mov
xor
test
push
rol
inc
scas
fnstenv
jns
mov
ret
xor
std
mov
stos
in
and
ins
inc
(bad)
es
cmps
jae
fcom
popa
outs
mov
xor
push
fimul
mov
mov
adc
pop
movs
lahf
aas
fst
mov
sbb
repnz
pop
add
pop
ja
mov
cmp
cwde
call
in
(bad)
jae
dec
mov
adc
xchg
cli
adc
pushf
pop
cmc
fld
fdiv
push
add
jmp
into
inc
mov
pusha
add
lock
test
mov
mov
fadd
cs
or
loopne
xchg
ja
mov
mov
mov
dec
je
pop
lods
and
pushf
daa
icebp
pop
jns
test
stos
loop
or
je
pop
pop
lds
sar
dec
inc
cmp
dec
mov
mov
sub
mov
adc
(bad)
mov
cld
or
xchg
mov
jp
mov
or
pop
(bad)
stc
dec
push
mov
mov
push
lods
xchg
or
in
pushf
mov
stc
sub
lods
inc
inc
(bad)
jmp
not
mov
jmp
std
imul
sub
stc
rcr
cmps
inc
in
call
pop
clc
fistp
js
mov
pop
repnz
in
enter
je
dec
mov
(bad)
sar
lods
fcomip
and
inc
xor
mov
in
scas
dec
jle
ret
dec
adc
inc
mov
adc
(bad)
sub
rcr
cmp
mov
jmp
sub
mov
or
cmp
cmp
jmp
mov
add
fwait
daa
mov
sub
inc
or
cmp
add
fst
lds
jge
gs
xor
outs
jbe
xchg
and
jmp
dec
jno
and
retf
jmp
sbb
imul
cmp
push
push
retf
jmp
pop
out
xor
js
adc
push
xor
(bad)
sbb
add
ror
mov
stos
dec
xchg
sbb
cmp
retf
push
pushw
pop
dec
loop
mov
jbe
adc
addr16
cli
inc
cmc
pop
sub
mov
jp
sbb
dec
sub
cmp
jge
sub
dec
fs
stos
ffree
sub
mov
fcomp
das
xchg
add
push
cwde
(bad)
adc
clc
(bad)
ja
sbb
mov
xor
(bad)
(bad)
sub
xchg
bound
mov
adc
inc
out
int
sub
test
pop
or
cmp
cld
adc
fxch
mov
adc
and
jb
and
and
and
jge
jle
pop
in
pop
aam
lahf
jb
out
sar
mov
in
and
add
test
push
xlat
mov
cmp
and
adc
or
arpl
(bad)
push
test
push
push
mov
jecxz
inc
in
sti
repnz
scas
(bad)
mov
mov
dec
sub
push
inc
jns
or
addr16
call
jge
sbb
xchg
fistp
fadd
lods
push
push
and
sub
pusha
mov
cmp
fiadd
js
fisubr
pop
xor
mov
mov
push
jmp
imul
and
rol
fwait
xchg
scas
push
ins
enter
push
(bad)
adc
leave
sub
sub
fmul
adc
pop
clc
stos
mov
cld
ja
push
scas
cmp
adc
sbb
jp
or
aam
cdq
mov
inc
call
leave
pop
dec
js
mov
mov
or
addr16
push
or
jb
out
and
retf
fist
sti
das
pushf
cmp
jg
and
in
inc
ja
jae
(bad)
jae
add
ins
add
hlt
dec
iret
cdq
pop
mov
pop
xlat
pop
mov
or
les
pop
jmp
loope
(bad)
data16
in
outs
xor
sbb
cwde
repnz
cmp
inc
cmps
adc
pop
daa
jp
daa
(bad)
jne
sbb
loopne
fstp
xor
stc
in
and
xchg
shr
sbb
mov
cmp
mov
adc
not
add
mov
(bad)
mov
out
or
stc
pushf
aad
push
cmps
add
inc
xor
mov
stos
(bad)
sub
cmp
inc
sar
dec
or
(bad)
cld
push
(bad)
lods
or
imul
sub
pop
jecxz
xor
lea
mov
jmp
jl
inc
adc
clc
sbb
xor
ret
std
sbb
sbb
jns
push
dec
pop
fisub
leave
jo
pop
movs
xchg
add
lods
pusha
daa
fucom
mov
fwait
stos
gs
push
push
push
in
pop
jae
sbb
dec
sub
addr16
jae
je
dec
jne
dec
and
loop
mov
mov
loop
sti
mov
int
push
or
pop
test
mov
dec
mov
adc
cmps
cmp
jmp
xor
sar
imul
test
vhaddps
je
pop
inc
clc
xor
mov
or
adc
je
jno
push
ficom
js
jmp
popf
dec
test
gs
sub
sub
pushf
mov
stos
pop
leave
push
pop
mov
fstp
mov
(bad)
lods
push
ret
pop
leave
into
xlat
mov
add
retf
sub
repz
push
mov
dec
fisub
rcr
paddsb
data16
sbb
in
pop
mov
push
push
xchg
push
std
push
adc
outs
jmp
add
mov
retf
pop
popa
or
pop
in
nop
ficom
sbb
nop
mov
scas
scas
cwde
adc
jg
adc
mov
ja
mov
mov
out
jge
adc
pop
inc
mov
xchg
sbb
mov
and
repz
arpl
addr16
cmps
jecxz
sub
dec
call
jp
pop
fbstp
xor
lods
or
int
cmc
and
bound
stc
push
inc
pushf
mov
sbb
add
test
xlat
movs
stc
pop
test
mov
or
sti
cmp
or
(bad)
xchg
fidivr
xchg
test
mov
dec
xchg
xchg
adc
and
int3
stos
jno
xor
add
iret
sub
pusha
lds
mov
push
int3
ins
(bad)
fcmovu
mov
(bad)
call
adc
mov
lods
or
lea
daa
add
jge
push
mov
cmp
js
push
push
loop
cld
jmp
stos
xchg
in
fisubr
push
popa
inc
or
popf
call
std
inc
dec
out
mov
popa
xor
out
mov
stos
or
sbb
int
call
rol
cmp
mov
rcr
lods
jo
jo
add
sub
das
fidiv
lods
sub
xlat
int3
sahf
pop
and
mov
or
mov
push
pop
pop
repz
mov
sub
(bad)
add
mov
mov
popa
push
loopne
sub
mov
pop
lock
retf
mov
jmp
or
dec
inc
or
sbb
mov
jge
mov
xchg
icebp
imul
sar
or
push
mov
and
fwait
jmp
enter
inc
sbb
mov
cmp
xchg
je
js
push
sub
out
mov
xor
and
cmc
xor
rol
or
pop
mov
test
add
push
or
pop
std
and
or
aaa
pop
inc
adc
mov
sub
cld
daa
add
jae
(bad)
jp
aad
test
pop
jmp
ja
rcl
fidivr
jbe
loop
push
(bad)
in
cmps
(bad)
int3
(bad)
mov
stc
xlat
pop
xchg
call
jmp
add
scas
outs
out
data16
out
mov
into
test
std
ror
ret
enter
popf
mov
cmp
ror
and
mov
jle
sbb
adc
cmp
cmps
dec
gs
mov
pop
cmp
mov
add
xchg
mov
ja
adc
mov
add
(bad)
sbb
push
scas
cmp
push
jl
push
or
push
push
jne
jb
xchg
xor
mov
sub
out
out
movs
adc
push
and
test
and
ror
inc
push
inc
adc
stos
inc
in
jecxz
std
cmp
pop
lods
sahf
ret
cmp
xchg
pop
stos
add
loope
je
lock
pop
add
lods
loopne
ror
dec
ins
call
pop
fisubr
fs
or
mov
scas
push
arpl
dec
mov
imul
test
and
sub
dec
out
shr
fsubr
mov
rol
loope
popf
adc
stos
cmp
inc
ins
cmp
pop
inc
fwait
or
loope
call
dec
pushf
xchg
fiadd
xor
gs
add
jns
xchg
rcl
or
(bad)
and
adc
aas
call
xchg
xchg
sub
push
mov
mov
push
or
gs
jne
sbb
xchg
(bad)
les
lea
movs
push
movs
dec
mov
pushf
xor
sbb
imul
mov
inc
daa
inc
cmp
div
push
cmps
movs
not
mov
sti
push
call
pop
mov
fs
cmp
and
mov
dec
ins
fistp
push
or
pop
jbe
sbb
jae
aaa
mov
mov
add
into
jns
leave
mov
jl
inc
adc
mov
fwait
popf
and
xchg
cmp
adc
fs
push
(bad)
retf
aaa
pop
int3
push
fist
sub
mov
test
lea
pop
dec
inc
xchg
movs
or
in
and
mov
mov
xlat
test
outs
jg
sub
pop
jne
movs
push
jb
pop
sbb
stc
adc
mov
jo
push
std
xor
inc
arpl
mov
mov
xchg
sub
stos
jp
fldcw
or
mov
push
inc
dec
mov
nop
pop
dec
jo
ret
leave
cmps
add
xor
mov
mov
jnp
cld
out
in
push
and
hlt
fwait
out
dec
fiadd
cmps
or
nop
pop
in
iret
cmc
sbb
sub
scas
add
outs
push
ss
pop
imul
sub
cmc
mov
pushf
pop
iret
mov
mov
dec
jg
repnz
lds
jbe
xchg
outs
mov
sbb
mov
aam
data16
fcmovnu
ds
inc
dec
popa
fwait
rcr
sbb
hlt
rcr
and
dec
mov
stos
push
and
cmp
lods
xor
jmp
and
mov
adc
sbb
loope
dec
adc
push
add
fild
cwde
xchg
ja
xlat
(bad)
rcl
leave
inc
sbb
pusha
push
pop
retf
push
jmp
lods
nop
daa
jae
xchg
mov
push
jns
and
fs
mov
cmp
sbb
jmp
lea
lea
dec
dec
sbb
dec
test
sub
lahf
into
xchg
or
inc
add
mov
jne
iret
cmps
js
stos
and
jmp
ins
add
xchg
out
jecxz
pop
mov
retf
xchg
inc
inc
lahf
sub
inc
retf
adc
mov
frstor
sbb
inc
dec
dec
xor
fstp
inc
push
xlat
mov
ss
test
aaa
push
outs
lods
pusha
push
(bad)
jns
faddp
dec
mov
xor
fwait
push
lock
lahf
rol
dec
dec
jl
shl
sbb
sub
push
test
mov
into
lahf
push
dec
adc
aad
and
pusha
arpl
push
pop
inc
add
outs
cmp
cmp
je
mov
cmps
mov
jmp
pop
dec
cli
pop
mov
shl
shr
out
fdivr
and
push
je
cmps
mov
cmp
add
mov
mov
pop
ja
dec
sysret
jnp
(bad)
in
fs
cmp
test
push
xchg
xor
mov
jae
ins
arpl
lds
scas
mov
mov
mov
mov
push
cmc
aas
pop
adc
jp
push
sub
retf
ret
movs
cmp
xchg
or
sub
sub
loope
fistp
mov
jne
ins
jb
es
cmp
pop
pop
mov
mov
inc
mov
mov
pop
clc
dec
movs
sub
cmp
retf
in
xchg
das
pop
inc
jno
add
adc
popf
add
cmp
pop
popa
jecxz
(bad)
scas
ror
inc
lods
sbb
inc
add
call
fdivr
dec
pop
or
xchg
push
retf
jge
mov
imul
sar
mov
dec
cwde
(bad)
dec
jmp
and
push
sbb
mov
aad
int
cmp
xchg
scas
fs
scas
test
(bad)
imul
(bad)
call
stos
shl
or
es
and
jns
scas
sub
popa
mov
jp
test
test
fwait
int
sub
pop
ds
out
retf
inc
or
mov
adc
fadd
call
arpl
test
dec
js
adc
std
adc
es
xor
(bad)
and
enter
cld
gs
lods
sub
and
outs
cmps
xchg
xchg
leave
fwait
and
mov
fisubr
or
fbld
or
(bad)
bound
outs
inc
pop
push
pusha
mov
jl
mov
push
popa
push
cdq
inc
ret
mov
repz
mov
daa
and
mov
and
inc
int
sbb
pop
repnz
xchg
jp
sub
cs
icebp
into
adc
xor
and
aam
ret
mov
cmp
fadd
out
xor
adc
ins
jb
lods
xchg
add
and
pop
rcl
and
jp
stos
sbb
sub
imul
gs
push
jmp
push
test
in
scas
or
fs
mov
popf
bound
call
mov
inc
inc
cdq
arpl
inc
aaa
icebp
shl
cli
test
ret
mov
fild
sub
js
mov
xor
ret
mov
fstp
pop
or
or
mov
icebp
or
push
mov
push
mov
shl
inc
iret
pop
xor
call
pushf
(bad)
sub
cmp
mov
and
sbb
jle
icebp
xor
outs
outs
ret
call
xchg
jg
(bad)
pop
movs
sti
ins
repnz
mov
sti
adc
stos
int3
out
sub
or
and
icebp
mov
test
das
adc
adc
mov
pop
cwde
test
ins
adc
sub
in
out
and
in
rcr
push
and
ror
sahf
mov
hlt
inc
test
or
fwait
dec
jg
or
ffreep
push
ret
dec
gs
jnp
into
rcl
pop
loop
xor
jne
mov
pop
pop
mov
movs
stos
cmp
xchg
out
cmp
xchg
(bad)
push
push
and
or
xchg
ds
(bad)
and
adc
ins
dec
sbb
mov
inc
jno
mov
dec
fmul
cmps
out
sbb
addr16
popf
fwait
push
ja
or
retf
sbb
scas
ret
add
out
pusha
imul
push
es
or
jg
out
sbb
scas
inc
xor
retf
repz
outs
sbb
inc
call
imul
sahf
dec
(bad)
repz
sub
(bad)
dec
xor
inc
jb
pop
(bad)
xor
and
and
ds
and
pop
mov
and
js
add
retf
sbb
jo
test
pop
mov
push
add
push
jb
cmps
call
fst
icebp
fisubr
and
mov
add
xor
pop
cdq
scas
bound
lods
aam
cmp
retf
pop
cdq
pop
mov
fwait
jle
push
movs
mov
retf
std
mov
jge
test
fwait
ins
cmp
sub
js
(bad)
sbb
enter
mov
in
xchg
sbb
pop
(bad)
inc
inc
inc
adc
pop
cmp
or
fsub
aaa
pop
leave
int3
mov
mov
test
xchg
rcl
popa
jl
stc
in
outs
lods
xchg
pop
mov
jmp
dec
sub
mul
mov
sub
loope
xchg
and
push
mov
sbb
push
ja
sub
enter
arpl
xor
sub
fdiv
jmp
mov
inc
jle
in
mov
je
adc
adc
sahf
xlat
jo
xchg
mov
retf
cwde
cmp
lds
jg
cmp
sub
xchg
sar
(bad)
sahf
cmps
add
adc
inc
or
jnp
add
arpl
pop
jecxz
jmp
and
mov
mov
pop
adc
hlt
test
inc
inc
dec
cmp
mov
push
mov
fwait
sub
mov
test
loope
icebp
(bad)
xchg
idiv
cmp
icebp
daa
mov
or
cs
jmp
mov
dec
mov
fbld
sub
clc
jno
cmp
pop
lea
fld
push
push
cmp
dec
pop
mov
add
mov
or
jmp
xor
sbb
aad
rcr
fwait
push
mov
jo
aad
pop
mov
fwait
add
push
dec
sti
jmp
aas
dec
and
ror
repnz
mov
and
mov
retf
rcl
out
repz
sahf
ror
push
fwait
loopne
cmps
outs
mov
into
or
jo
(bad)
dec
xor
add
in
or
mov
addr16
push
mov
or
jecxz
aam
cmp
sbb
jns
xor
sub
xchg
lock
push
inc
mov
pop
hlt
lahf
push
mov
push
xor
jle
popa
loopne
xchg
jmp
outs
sub
test
in
jge
dec
cmp
test
cmc
push
sahf
ror
addr16
mov
lahf
jno
xor
and
pop
mov
mov
in
mov
cmps
aam
pop
sbb
aaa
mov
add
adc
add
test
aaa
mov
push
cli
xchg
sbb
xlat
enter
cs
mov
dec
loop
or
inc
push
mov
ror
stc
push
scas
mov
sbb
mov
sbb
loop
retf
movs
(bad)
sahf
test
mov
and
mov
aaa
enter
add
(bad)
lahf
add
aaa
int
aaa
xor
xchg
adc
arpl
mov
jge
sbb
bound
mul
shl
shl
dec
ins
adc
pop
cmps
cmp
(bad)
aad
and
mov
inc
sbb
xor
ins
out
jl
movs
jl
sub
sub
push
pop
sub
lahf
test
mov
das
loop
(bad)
inc
jbe
mov
mov
lahf
sub
(bad)
icebp
into
sbb
imul
add
cwde
jb
ret
fnstcw
xchg
ret
xlat
mov
mov
repnz
xor
ret
mov
mov
xchg
aas
cmp
mov
mov
clc
xor
retf
psubsw
mov
fmul
in
and
cmp
xchg
pop
gs
mov
imul
xchg
inc
outs
pushf
stc
dec
pop
ss
jecxz
hlt
pop
icebp
xchg
and
ss
push
sbb
test
out
gs
arpl
and
ds
ss
xor
mov
jg
enter
sbb
fist
repz
hlt
int
push
std
pop
pop
(bad)
sbb
mov
call
out
jbe
dec
or
adc
mov
mov
movs
call
(bad)
cmp
cmps
pusha
sub
fcomp
cmp
jae
inc
outs
push
repz
xor
pushf
jbe
push
popf
cdq
dec
fsubr
and
cmp
loope
adc
jle
or
mov
push
loope
add
sbb
(bad)
pop
mov
pop
pop
adc
cmp
pop
pop
add
pusha
xchg
sbb
dec
out
lock
dec
in
ret
fnstenv
pop
sti
movs
cwde
sub
cmp
in
inc
scas
(bad)
stos
mov
and
movs
and
jno
cmp
sub
dec
xchg
push
cld
push
movs
fstp
clc
inc
or
mov
mov
cdq
repz
inc
jae
mov
les
sbb
dec
push
dec
imul
arpl
push
movs
mov
jl
adc
rol
jno
int3
mov
mov
cld
(bad)
push
retf
xor
jb
into
jns
test
inc
mov
sbb
sub
fstp
inc
inc
adc
jmp
mov
sub
mov
xchg
inc
pop
inc
and
in
(bad)
push
jb
cmc
neg
test
lea
daa
pop
in
sbb
push
jecxz
cwde
enter
rcr
pop
cmp
push
cwde
ds
shl
lods
jne
sub
sbb
jb
mov
shl
out
mov
aaa
xor
mov
cmp
or
iret
sahf
fstp
or
in
mov
clc
xchg
jl
add
fxch
push
int
loope
or
daa
lods
cmps
mov
inc
outs
cmp
jb
call
pop
ror
(bad)
shr
cwde
loopne
andnps
mov
test
cdq
push
push
fbstp
xor
aam
sub
and
das
adc
jo
jle
or
push
shl
cmp
jg
movs
xor
inc
ror
call
inc
fisttp
mov
fbstp
sub
fsub
in
add
enter
mov
add
jbe
mov
pop
call
add
sahf
mov
adc
adc
mov
in
mov
cmp
push
jo
pop
mov
cmps
fild
lds
test
adc
lods
dec
mov
cmps
add
xchg
jnp
push
imul
cmps
jp
movs
fmul
dec
out
imul
and
or
sub
les
xchg
mov
xchg
adc
mov
rcr
daa
shr
das
adc
mov
xchg
(bad)
cmp
jbe
call
or
mov
out
pop
and
cmps
add
xchg
inc
aaa
(bad)
shl
or
bound
or
and
and
retf
jp
jbe
leave
rol
rol
iret
or
daa
imul
enter
push
pop
mov
repz
sbb
or
lods
adc
daa
xor
scas
add
pop
ret
das
or
pushf
adc
cs
pushf
sub
sahf
inc
clc
ins
dec
lea
test
call
cmp
pop
out
xchg
in
jle
int
bound
ins
(bad)
(bad)
cld
js
add
icebp
dec
xchg
cdq
popa
fwait
shr
sbb
jbe
(bad)
(bad)
jmp
shl
pop
bsr
repnz
pop
jb
push
aad
sbb
enter
xor
imul
dec
inc
pop
xor
cmps
push
lods
cmps
rol
jae
jp
fld
xchg
mov
pop
push
imul
jecxz
adc
lods
inc
imul
mov
dec
neg
test
sbb
sbb
push
mov
movs
fistp
mov
jmp
inc
mov
pop
bound
mov
and
cdq
pop
add
sub
js
and
aad
ds
in
mov
pop
into
push
das
xlat
lock
pop
jge
(bad)
div
mov
sub
mov
cld
xor
shl
jns
nop
cwde
stos
dec
cmp
repnz
mov
jg
mov
lock
dec
cmc
inc
xor
dec
call
dec
dec
enter
enter
repnz
mov
add
inc
push
pop
std
pop
pop
sbb
aad
fucomip
mov
push
sbb
mov
scas
mov
xchg
(bad)
jnp
inc
xchg
mov
test
sub
sbb
mov
(bad)
scas
test
ror
jge
out
mov
cmps
mov
mov
cmps
cmp
fstp
jae
movs
cwde
push
lods
pop
mov
push
jmp
mov
push
xchg
aas
mov
xor
sub
jnp
test
xchg
jecxz
rcl
dec
cld
add
(bad)
xlat
repz
sub
xor
div
adc
addr16
dec
mov
sbb
rcl
cmps
add
ja
jmp
jbe
imul
cmc
ror
lds
sbb
cmc
dec
mov
dec
pop
jnp
imul
addr16
dec
arpl
rol
inc
js
ret
push
or
inc
cmp
inc
fistp
jnp
pop
outs
dec
mov
inc
adc
adc
mov
(bad)
shr
add
xchg
not
xor
add
(bad)
xchg
xchg
retf
in
ror
movs
int
aad
int
fmul
movs
pop
(bad)
add
das
int3
pop
les
mov
cwde
xchg
arpl
leave
dec
push
pusha
stc
mov
lods
popf
jl
cs
pop
stc
jbe
es
mov
aad
shr
pop
icebp
hlt
inc
xor
xor
test
rcl
push
ficom
ja
imul
add
jmp
sub
xlat
mov
repnz
jl
jge
test
mov
dec
pop
add
push
fnstenv
(bad)
mov
xor
jl
rol
cmp
fistp
sbb
gs
rcr
fmul
mov
loopne
lock
dec
jg
enter
in
sub
or
in
iret
call
loope
retf
mov
enter
and
cmp
add
add
add
in
jmp
push
mov
and
cmp
outs
xchg
ins
mov
fwait
daa
and
and
stos
or
or
push
inc
xor
pop
lds
adc
leave
outs
mov
inc
fisubr
bnd
xor
xor
dec
je
and
lock
mov
fs
popa
(bad)
iret
sub
mov
pop
fwait
in
test
js
jnp
sti
and
and
ins
mov
push
xchg
ins
loopne
xor
add
fldenv
xor
in
bound
movs
mov
mov
or
xchg
sub
inc
imul
rcl
inc
lea
fdiv
repnz
mov
and
jmp
push
js
call
push
fistp
addr16
mov
dec
inc
cmp
aas
xchg
hlt
push
push
test
push
das
pop
test
sbb
je
pop
outs
fdivr
mov
(bad)
jmp
ins
jmp
(bad)
jnp
xchg
or
enter
jmp
sbb
or
sub
icebp
xor
stos
(bad)
or
cmps
mov
ds
push
xchg
retf
xlat
cmps
cmps
not
sub
pop
cld
push
js
ins
stc
lock
lods
add
out
popf
movs
add
jmp
add
data16
and
inc
loop
test
mov
pop
sbb
and
sbb
push
xchg
(bad)
mov
nop
cmps
(bad)
lods
retf
inc
xchg
lock
out
jns
stos
dec
fmul
imul
test
pushf
retf
in
(bad)
stc
pop
mov
sbb
push
pop
mov
fidiv
mov
mov
xchg
les
es
jecxz
and
mov
jo
into
addr16
out
add
fisubr
ins
adc
xchg
dec
cmps
lods
daa
(bad)
lods
push
pushf
subps
jno
sbb
inc
mov
(bad)
fld
xchg
cmps
xlat
cmp
jb
test
push
test
ins
loope
aaa
mov
std
or
(bad)
call
ficomp
mov
jmp
mov
cmp
fnstenv
mov
mov
sbb
and
scas
js
sbb
cmp
ins
inc
bound
pop
jmp
cmp
test
xor
xor
ftst
fdiv
jb
fwait
push
inc
test
mov
data16
push
in
mov
enter
xlat
mov
push
adc
sar
stos
ja
xchg
sti
daa
punpckldq
test
mov
pusha
je
add
cdq
add
jp
pop
jecxz
mov
xchg
cmp
adc
jns
int3
in
imul
int3
dec
push
push
jnp
loopne
imul
dec
push
repnz
jecxz
xchg
mov
xchg
cmp
pop
pop
std
retf
sub
jbe
mov
mov
jge
push
and
sbb
jmp
pop
mov
out
pop
daa
or
sub
cmps
or
inc
fldcw
or
mov
arpl
jnp
mov
out
lods
fs
outs
out
adc
sbb
mov
iret
into
push
and
fild
test
and
mov
sbb
(bad)
xor
push
jno
jge
adc
test
xchg
inc
jno
aaa
mov
or
and
jne
push
jmp
je
jmp
loop
pusha
retf
dec
in
sbb
pop
test
xchg
mov
fdiv
adc
retf
inc
mov
aad
sbb
and
jne
mov
pop
push
imul
fcmovu
fmul
mov
call
or
mov
add
stos
or
or
jle
and
mov
enter
mov
out
aad
out
xchg
enter
xor
adc
jmp
lock
xchg
xchg
loop
jae
sbb
push
add
push
(bad)
into
sub
cwde
frstor
(bad)
loopne
push
leave
adc
inc
repnz
outs
(bad)
cld
push
rcr
push
call
push
mov
adc
xor
pop
cld
adc
arpl
aas
sub
mov
pop
jns
iret
pop
ins
xor
jmp
out
pop
pop
jmp
out
sbb
lahf
aam
sub
test
xchg
outs
xchg
xor
cmp
jmp
jge
mov
pop
test
repnz
adc
ins
loope
xchg
or
push
xchg
fdivr
xlat
arpl
or
mov
(bad)
in
add
daa
stc
pusha
sub
mov
jno
lds
mov
ret
ret
inc
cmp
push
or
int
cmp
test
jg
inc
push
jbe
pop
adc
fs
mov
sub
jg
jg
pop
xchg
scas
(bad)
ja
push
pop
mov
push
jmp
jmp
int3
push
xor
int
aad
push
(bad)
into
push
sbb
ins
adc
and
push
cs
in
test
mov
inc
iret
push
ret
inc
pop
(bad)
ja
mov
test
mov
cs
pop
rcr
mov
imul
xor
paddb
inc
data16
loopne
cmp
mov
and
sbb
push
pop
pop
xor
cmp
fnstenv
(bad)
ficomp
cmp
dec
retf
xor
fmul
inc
jno
pop
jnp
popa
inc
add
pop
addr16
adc
loopne
shl
loope
and
imul
leave
cmps
or
pushf
cmc
ja
int
jmp
xchg
jns
push
mov
push
fs
repnz
cwde
and
jle
xchg
(bad)
or
call
(bad)
outs
dec
inc
mov
adc
sahf
ror
test
adc
rol
push
xor
inc
sbb
aad
xchg
xchg
jae
cmp
ja
jmp
cmps
cmc
adc
push
pusha
cmp
and
lea
adc
dec
ficom
cmp
or
adc
jb
inc
lds
sub
out
push
(bad)
xor
jp
daa
lods
in
cli
dec
ins
lods
out
xchg
mov
shl
les
aas
push
xchg
out
fidiv
dec
call
push
or
stc
inc
mov
aaa
mov
push
loope
repz
in
pop
push
aas
jle
je
mov
push
dec
and
sar
aaa
xchg
mov
pop
push
jmp
popf
push
xchg
lahf
xlat
neg
loopne
and
dec
cmp
jmp
rol
push
inc
das
mov
inc
add
imul
mov
pop
cli
jae
test
aaa
cmc
aad
retf
adc
adc
jo
cmp
adc
sbb
cmp
add
stos
dec
cmp
and
pop
jne
arpl
jo
cmp
ret
add
xor
into
sub
dec
mov
lea
ficom
lods
or
mov
xor
and
fld
test
imul
mov
dec
pop
(bad)
daa
aas
or
test
test
jns
shr
lods
jo
cmp
rcr
adc
outs
push
lods
cmp
fdivr
lock
push
mov
imul
adc
addr16
leave
sar
sahf
mov
sub
sub
dec
or
stos
cmp
ret
bound
xchg
shr
xchg
mov
add
pop
pop
jb
sub
lods
jge
adc
scas
mov
test
je
ret
jmp
jbe
(bad)
mov
cmp
sub
shr
sbb
jge
pop
or
outs
loopne
adc
std
lea
popa
gs
mov
and
test
jl
popa
sbb
cli
(bad)
neg
cdq
outs
adc
pop
push
call
lahf
dec
iret
adc
mov
bound
push
icebp
fwait
or
push
lock
loopne
cmc
mov
add
dec
lods
mov
lods
sub
and
jle
dec
scas
or
push
push
sbb
pop
dec
ss
adc
in
xor
add
jge
or
xchg
add
xchg
popf
ror
fidivr
sti
dec
xchg
cmp
dec
outs
in
bts
ds
aas
pop
popa
cmp
push
outs
xor
or
mov
xor
test
arpl
clc
push
lods
jp
jmp
xchg
ins
into
pop
jne
mov
jne
fiadd
ins
clc
inc
out
frstor
add
das
ret
adc
cmp
(bad)
dec
sbb
in
das
jo
jne
push
mov
or
dec
or
dec
out
movs
imul
or
adc
fs
call
push
xor
jp
jno
inc
lods
rol
and
pop
pop
xor
xchg
mov
jae
sbb
mov
bound
adc
sub
loopne
in
(bad)
fnstsw
ficomp
cld
popf
mov
mov
dec
or
dec
scas
test
mov
das
mov
pop
add
xor
fld
mov
std
or
jmp
cmp
clc
mov
push
inc
inc
jle
adc
aaa
popf
lods
mov
push
pusha
in
in
cmps
getsec
imul
or
scas
and
cmp
(bad)
inc
in
out
jecxz
inc
arpl
mov
and
call
jl
shl
mov
imul
iret
(bad)
(bad)
fcomp
dec
imul
or
pop
mov
ins
mov
mov
data16
ins
mov
(bad)
sti
mov
gs
in
jl
dec
inc
mov
sub
sub
shl
das
std
pop
and
jle
es
mov
inc
shr
xchg
jne
cmp
fimul
xchg
xchg
cs
std
and
mov
test
sub
(bad)
xor
cmp
or
les
and
out
pop
rol
or
(bad)
pop
test
fucomi
sub
inc
loopne
shl
cmps
stos
jbe
mov
test
jb
dec
leave
pop
ss
test
rcr
sbb
and
icebp
sub
mov
cwde
test
fs
sti
ins
scas
cmps
ins
sub
dec
mov
sub
push
mov
mov
dec
mov
test
and
inc
or
test
adc
std
jo
push
repz
pop
jl
xchg
adc
pop
pop
(bad)
mov
fnstsw
ror
sbb
dec
fimul
and
xchg
xchg
imul
jns
lods
pop
arpl
mov
ret
in
stos
cmovbe
test
or
ds
aad
and
sub
sahf
out
push
xchg
lods
mov
outs
push
mov
cmc
mov
out
leave
xchg
mov
call
mov
push
or
cmps
xor
mov
pop
pushf
aam
scas
out
cmps
sub
clc
push
mov
aas
mov
inc
inc
in
leave
mov
(bad)
imul
inc
les
mov
jle
js
cmp
mov
add
ds
mov
mov
and
sbb
ficomp
pop
xor
lds
and
inc
ret
or
sub
cmps
jo
sub
adc
popa
into
adc
les
adc
ret
xor
in
rol
fistp
lods
scas
push
aas
cmp
adc
movs
add
pop
mov
add
jno
pushf
lock
add
inc
jl
mov
das
pop
jo
xlat
dec
jns
repnz
(bad)
dec
rcl
adc
cmp
les
scas
inc
cmp
xor
sub
or
or
lods
imul
lods
pusha
std
std
outs
mov
fiadd
jl
inc
bound
dec
cmp
out
push
sti
in
sub
mov
rcl
push
jl
cs
rcl
test
stos
(bad)
and
stos
push
add
add
leave
adc
sahf
ss
dec
xor
jb
xchg
enter
sar
xor
clc
das
aam
rcl
mov
rcr
leave
shl
scas
test
push
shl
inc
(bad)
jle
mov
mov
or
inc
imul
ds
scas
shl
sbb
jbe
ds
sub
cmc
or
popa
and
jns
call
dec
test
xor
push
sbb
jg
ins
mov
xlat
add
jge
jge
push
outs
cmp
jmp
clc
jno
ret
dec
ficomp
jnp
sub
mov
and
mov
mov
add
shl
fld
mov
cwde
movs
dec
mov
lock
enter
push
ins
lahf
mov
dec
scas
into
fcomi
adc
sbb
aad
popa
in
fnstenv
xchg
cdq
add
shr
cmp
aaa
stos
add
retf
call
or
das
shr
pushf
bound
loop
adc
popf
or
nop
sub
ror
jb
ror
mov
and
iret
fcmovnbe
retf
aad
cmp
or
int
sahf
add
es
sub
add
xchg
xchg
nop
jle
sub
and
sbb
dec
sahf
pop
jnp
arpl
mov
aaa
push
movs
js
hlt
inc
and
lahf
dec
mov
push
dec
jle
stos
pop
je
mov
mov
xor
outs
mov
push
sahf
and
xor
and
lods
je
repnz
das
cmp
out
shl
xchg
mov
leave
and
repnz
ins
cmp
inc
fild
pusha
(bad)
in
(bad)
je
pop
mov
neg
(bad)
icebp
ja
inc
push
and
test
fist
cmp
xchg
jmp
adc
mov
mov
clc
jmp
call
push
add
stos
shl
imul
stos
mov
bound
add
mov
sub
pop
es
cmp
mov
pop
(bad)
aam
rcr
mov
or
xchg
pop
jb
or
icebp
sub
pop
xor
ror
out
xchg
rol
pop
inc
or
dec
mov
mov
out
jns
mul
xor
jno
leave
fdivr
adc
push
jmp
int
gs
sbb
rcr
ret
inc
stos
jge
mov
(bad)
adc
pop
inc
loopne
add
leave
clc
je
jae
and
imul
ror
and
push
test
jmp
iret
cmp
scas
dec
adc
add
ret
xchg
jbe
push
fs
fs
mov
hlt
ret
pop
inc
das
push
mov
sti
leave
fcomp
mov
and
or
inc
repz
mov
and
push
jecxz
inc
pop
mov
sub
loopne
adc
and
xor
xchg
es
dec
pop
push
mov
mov
xor
xchg
hlt
push
into
mov
lahf
lock
xchg
adc
add
pop
iret
lahf
(bad)
mov
les
or
or
or
sub
(bad)
in
std
mov
into
aaa
mov
xchg
jmp
xor
xchg
les
nop
retf
lods
mov
call
sbb
les
cmp
dec
pop
xchg
pop
dec
push
dec
ins
sbb
sbb
cmp
je
push
mov
ds
in
dec
sbb
jl
std
in
in
sub
xchg
ficom
shrd
xchg
jle
pop
mov
and
mov
lods
jg
std
sbb
adc
or
pop
adc
xlat
mov
ret
sbb
pop
inc
pop
jp
pop
push
loop
push
jae
dec
fmul
ja
mov
inc
mov
(bad)
xchg
cmp
clc
jl
add
fistp
aaa
push
data16
mov
repz
ja
adc
cmp
hlt
mov
shl
pop
mul
jo
aad
jg
shl
pusha
aam
xchg
or
lea
mov
test
lds
mov
mov
gs
fwait
cmp
pop
movs
mov
repnz
push
inc
jle
inc
lods
jg
or
and
and
xor
cld
xor
push
(bad)
push
push
mov
or
push
stc
jge
pop
jecxz
mov
stos
sbb
scas
cld
push
out
mov
xor
jecxz
pop
add
mov
sbb
test
jo
jne
jmp
mov
ffree
cmp
xor
aad
sub
stc
in
dec
(bad)
xchg
out
xchg
loope
sub
dec
shl
les
pop
mov
div
mov
rep
les
mov
push
and
into
dec
ret
int3
sbb
sbb
retf
mov
jns
ret
ins
or
xchg
cmps
in
add
jp
xchg
test
xor
xchg
dec
test
and
cmps
mov
add
loopne
cmp
dec
mov
mov
fbld
call
inc
sbb
int3
mov
mov
ss
add
inc
adc
dec
cli
xor
in
pop
adc
dec
repnz
sub
cmp
shr
adc
jb
inc
stos
outs
inc
pushf
test
dec
mov
mov
(bad)
clc
ds
ins
mov
lods
mov
in
fild
leave
sbb
xor
jmp
fldenv
push
fimul
jns
xchg
cld
not
push
fistp
outs
xchg
cmps
pop
test
out
sbb
jno
cdq
js
xchg
adc
loopne
inc
adc
xchg
dec
add
lea
cmp
movs
out
arpl
mov
pop
mov
cmp
xchg
ds
rol
movs
dec
ror
movs
aas
das
jns
hlt
pop
sub
mov
xor
retf
fisttp
inc
mov
jge
and
lds
dec
stos
cpuid
cmc
in
pop
movs
lds
add
sar
movs
dec
cld
in
push
or
cdq
fwait
mov
jmp
or
jecxz
pop
(bad)
call
jb
rcl
xchg
sbb
push
dec
(bad)
cmp
push
xor
aad
dec
clc
sbb
mov
(bad)
pop
xchg
pop
imul
xor
dec
and
jo
mov
mov
sti
sub
xchg
cmps
addr16
icebp
pop
shl
jo
dec
mov
mov
push
sub
dec
div
fsubr
mov
ds
xchg
into
loopne
mov
ds
ret
(bad)
xchg
jbe
dec
inc
pop
(bad)
imul
sub
stc
movs
test
clc
dec
cdq
and
shl
sbb
pop
jmp
pop
imul
adc
add
mov
jl
jno
and
(bad)
nop
sbb
rol
sahf
(bad)
jae
pusha
imul
or
ja
mov
sbb
repnz
mov
push
adc
inc
sbb
cmp
adc
sbb
push
(bad)
adc
leave
(bad)
push
fisubr
(bad)
sub
cmps
sub
mov
arpl
mov
mov
adc
fcomp
inc
push
imul
pusha
adc
sub
fwait
mov
sub
ins
xchg
ins
pop
dec
neg
adc
push
push
jo
add
add
mov
or
adc
imul
cdq
inc
mov
dec
ins
cmps
jae
xchg
aas
ds
fstp
dec
push
in
xor
push
jg
inc
aam
aas
jg
test
sbb
push
stos
mov
add
pusha
ins
cli
jbe
lahf
jnp
sub
addr16
out
dec
aaa
pop
into
push
jbe
jg
or
jmp
test
inc
push
sti
mov
push
fst
ffreep
adc
add
jmp
mov
mov
push
jmp
(bad)
mov
dec
cmp
mov
mov
xor
cwde
mov
rcl
push
ret
imul
dec
sub
scas
push
loopne
lahf
ins
mov
cwde
jae
jne
sub
(bad)
add
xchg
jmp
or
mov
mov
dec
xchg
jecxz
ss
inc
adc
sbb
int
nop
stos
sbb
cmp
dec
xchg
mov
sbb
xor
sbb
or
fisttp
hlt
jp
fpatan
in
nop
xor
push
cmp
test
leave
(bad)
arpl
xor
lods
push
pop
xchg
mov
sbb
mov
daa
lahf
push
cmp
cld
mov
daa
cmp
adc
and
icebp
sahf
inc
bound
push
and
fcomp
call
and
or
scas
test
js
test
pop
mov
stos
cmp
inc
xlat
sbb
imul
cmp
adc
xchg
cmp
xchg
push
pop
adc
adc
mov
and
outs
jmp
cmp
mov
fbstp
cmp
mov
xchg
xor
xlat
jmp
(bad)
mov
pusha
dec
xor
xlat
xor
mov
daa
jne
cmps
mov
and
(bad)
or
out
xchg
retf
fucomp
jns
shr
sbb
es
fcom
mov
std
mov
cdq
xor
xor
sbb
xchg
jl
test
inc
(bad)
aad
inc
xchg
stos
mov
loop
jg
jnp
repnz
repz
pop
mov
xchg
test
out
dec
mov
add
inc
(bad)
repnz
retf
fisubr
rcl
and
jecxz
outs
enter
loop
test
xchg
push
fsubr
in
test
or
add
movs
repnz
das
clc
jne
outs
(bad)
cmp
jecxz
cmps
jmp
add
cmp
jno
sub
xchg
retf
repz
aas
and
xchg
cs
xlat
aam
int3
rcr
ins
(bad)
dec
push
xor
inc
jmp
adc
std
cdq
pop
jae
ror
mov
std
xor
inc
pop
in
mov
jg
rep
sti
retf
cdq
sti
icebp
mov
and
cmc
sub
jge
lods
or
ret
mov
pop
mov
mov
push
jnp
mov
add
xchg
imul
sti
and
xchg
fst
lods
jle
in
xor
retf
outs
lea
add
jp
lds
mov
ret
dec
add
mul
jns
scas
jg
jecxz
and
(bad)
test
in
and
xchg
ficom
ins
and
shl
mov
inc
xor
push
push
xchg
pop
lock
push
pop
mov
imul
das
jns
cmp
add
xchg
adc
jb
jnp
lods
push
and
add
xchg
mov
jmp
mov
fdivr
loope
dec
jno
movs
dec
dec
es
test
out
das
sub
or
(bad)
lock
ds
xor
add
jne
inc
fiadd
test
iret
pusha
xor
adc
cmp
data16
mov
fwait
push
mov
pop
adc
sub
lods
push
movups
std
dec
test
adc
xor
popf
jbe
(bad)
xlat
enter
stc
xchg
inc
call
ins
xchg
adc
jecxz
jle
jl
idiv
jecxz
repnz
aam
sub
push
jae
outs
add
jl
outs
test
js
das
xchg
xchg
ds
adc
mov
adc
ficomp
aad
mov
sub
and
fistp
lods
lods
dec
mov
jmp
jno
test
sub
sub
push
popa
ins
dec
retf
aas
adc
mov
push
neg
jle
nop
push
jnp
mov
cmp
or
cmp
mov
in
jle
and
repnz
imul
dec
jl
jbe
mov
sub
push
pop
dec
(bad)
add
or
cmp
movs
inc
lock
aam
test
and
sbb
adc
jl
push
sbb
call
(bad)
xchg
adc
sar
lods
repnz
pusha
cli
lods
mov
sub
sar
pop
rcr
js
xor
lock
sub
cmp
add
sub
xor
lods
pop
test
inc
add
push
in
adc
sbb
rcl
outs
push
or
inc
lahf
loope
cmps
scas
aam
inc
in
xchg
inc
pop
mov
aam
call
sbb
lea
(bad)
push
adc
aaa
dec
in
dec
sub
(bad)
adc
mov
mov
xor
aad
scas
das
shr
cmps
in
push
mov
mov
cmc
inc
adc
jge
cli
fwait
test
leave
jbe
cmp
retf
hlt
(bad)
mov
xor
daa
push
aad
mov
ret
pop
push
rol
push
and
outs
xor
in
jbe
jp
inc
sbb
lock
out
outs
pop
push
inc
(bad)
jmp
cmp
xor
sub
leave
jmp
je
stos
std
loope
movs
mov
data16
das
adc
popa
outs
cld
and
push
mov
push
dec
nop
push
lock
adc
mov
scas
cmp
leave
call
or
cmps
push
xor
popa
add
inc
retf
dec
or
dec
stos
ja
retf
out
out
dec
mov
enter
dec
out
mov
pop
lods
popa
mov
adc
ins
cmps
add
mov
jmp
cmp
xchg
pop
mov
loope
vandps
fwait
push
mov
sbb
(bad)
pop
bound
jo
dec
inc
es
dec
cmp
ins
sbb
imul
in
xchg
pop
cmps
fwait
fwait
outs
test
out
xchg
mov
xchg
std
cmp
dec
ror
mov
lea
jae
(bad)
xor
outs
mov
push
mov
inc
popf
adc
pop
jg
sub
shr
ror
dec
rcr
out
jo
sub
push
fsubr
mov
pop
cmp
ss
jle
dec
js
(bad)
cwde
mov
rcr
pushf
movs
repz
movs
aam
arpl
push
sub
xor
xor
fs
enter
add
dec
shl
mov
add
push
sbb
push
adc
xor
repnz
sar
mov
inc
lds
push
jns
and
pop
loope
loop
clc
push
test
outs
xchg
mov
xchg
add
pop
es
repz
cmps
inc
ficomp
lods
stos
mov
ds
loop
push
pop
inc
jns
dec
cmp
in
mov
add
pop
mov
mov
fwait
dec
loopne
fwait
pop
pusha
add
pop
or
pop
stos
mov
jmp
cmps
inc
xor
mov
pop
pushf
jmp
cmp
push
cmp
fcom
hlt
or
add
mov
cmp
retf
mov
int
sbb
or
rol
mov
daa
sub
mov
push
imul
sbb
mov
sub
dec
rcr
sbb
mov
es
int
inc
dec
je
xor
sbb
add
inc
jmp
xchg
xchg
loope
mov
pop
test
jp
ds
sbb
adc
and
jo
fld
std
xchg
leave
enter
adc
movs
xor
xchg
pop
or
cmps
mov
out
std
add
inc
inc
xor
popa
icebp
mov
bound
adc
jne
or
mov
inc
pop
sbb
pusha
es
jo
in
mov
cmp
xor
es
shr
out
fdivr
sbb
sti
mov
in
out
inc
test
push
jae
movs
lock
xor
mov
xchg
or
jb
loope
push
pop
mov
cwde
mov
inc
or
rcl
fsubr
xchg
sbb
lods
jecxz
push
mov
out
out
pop
fisttp
xor
push
leave
ins
fsub
mov
xor
mov
icebp
ins
shl
push
out
push
jmp
rcl
pop
or
lods
or
cmc
xchg
test
nop
jge
ret
xchg
mov
stos
jb
outs
push
adc
mov
leave
mov
jae
ins
mov
enter
sub
xchg
retf
iret
xchg
test
fld
ret
(bad)
mov
lahf
xchg
jmp
lods
(bad)
div
data16
dec
in
(bad)
es
outs
mov
sub
scas
or
or
loope
sar
lods
mov
fld
ss
retf
std
loop
sub
lahf
push
jge
and
xchg
adc
xchg
cmp
mov
cld
fdivr
movs
adc
jecxz
jae
mov
mov
scas
lds
(bad)
(bad)
xchg
test
cmp
push
pop
pop
enter
or
mov
jnp
stos
pop
dec
xor
leave
dec
arpl
ds
int
retf
aaa
ja
mov
adc
std
pop
pop
mov
inc
fisub
adc
imul
leave
ficom
in
mov
xor
lods
jnp
xchg
addr16
xlat
inc
mov
mov
outs
out
push
test
sub
pop
mov
ret
xchg
daa
loopne
jl
pop
sar
inc
retf
dec
cwde
jmp
jo
xor
lock
xlat
in
popa
arpl
push
test
jg
call
(bad)
and
or
shr
sbb
add
frstor
pop
addr16
sbb
push
jl
adc
jg
out
inc
jecxz
adc
add
dec
cwde
adc
dec
jge
xchg
jp
xchg
xchg
adc
ins
sbb
loopne
int
iret
mov
mov
outs
aas
lods
(bad)
cmp
adc
jmp
ret
jns
sub
jne
jb
push
mov
mov
bound
arpl
fist
adc
loope
push
in
adc
(bad)
fdivr
or
retf
call
(bad)
cmps
pop
sbb
inc
xor
ss
sbb
ins
xor
add
xchg
mov
jle
lods
xchg
add
int3
arpl
dec
jb
inc
jmp
pop
cmps
mov
mov
adc
mov
scas
jle
les
mov
xchg
and
dec
fst
dec
and
mov
push
push
pop
push
mov
repz
pusha
push
in
test
push
call
loopne
jmp
add
xor
or
lds
pop
adc
cmp
(bad)
ds
dec
xor
mov
(bad)
cli
fadd
pushf
xchg
pop
cmps
push
pop
mov
mov
loop
push
sahf
pop
loopne
inc
mov
mov
in
es
mov
mov
stos
ss
test
adc
ret
fistp
sub
lea
pop
ss
hlt
scas
mov
xchg
xor
in
add
or
ret
xor
and
pop
hlt
fbld
pusha
fidivr
ret
cmps
cmp
hlt
mov
mov
mov
pop
xor
and
mul
outs
or
inc
ja
ds
mov
arpl
inc
jecxz
jb
xchg
aas
leave
adc
inc
cs
outs
sbb
and
xchg
cwde
cld
xchg
mov
mov
ret
xor
xchg
cmp
dec
push
es
sbb
out
dec
repz
imul
movs
popf
add
not
(bad)
inc
dec
movs
fs
out
cmp
sbb
mov
xchg
sub
imul
cmp
mov
jb
adc
inc
sub
data16
sub
je
and
mov
sar
sar
jno
int3
stos
push
jbe
jp
add
push
icebp
rol
std
add
(bad)
jb
sbb
lock
outs
(bad)
mov
sbb
fmul
loope
stos
ror
mov
gs
(bad)
movs
inc
pop
sub
add
fadd
inc
mov
or
ins
sbb
dec
and
nop
hlt
std
fs
xchg
aas
dec
ja
inc
sub
mov
shl
popf
sub
mov
sbb
xor
inc
or
jge
hlt
sti
adc
xor
pop
icebp
mov
sub
add
imul
xchg
add
push
pop
es
push
outs
lods
inc
dec
and
and
push
pop
loop
adc
push
punpckhwd
aad
pusha
rcr
cmp
add
imul
sbb
fst
ja
retf
test
inc
sub
int
loope
and
mov
pusha
dec
push
jmp
(bad)
hlt
test
inc
idiv
pop
shr
mul
add
shr
lods
pop
dec
push
in
jg
call
lea
stos
fisttp
dec
int3
sub
sub
xchg
repnz
adc
or
arpl
sbb
sub
mov
pusha
mov
add
pop
pop
lods
xchg
loop
lods
pusha
pop
in
or
mov
mov
inc
out
cmps
jecxz
mov
iret
xchg
fimul
jns
stos
jo
les
movs
call
arpl
pushf
and
add
xor
sahf
mov
je
sub
fwait
inc
fcom
out
add
retf
pusha
scas
aas
inc
dec
xor
adc
and
inc
popf
dec
imul
inc
dec
xchg
sbb
mov
pop
in
pop
add
jae
mov
jl
cmp
mov
aam
and
outs
ins
push
test
push
pop
inc
or
inc
cmc
mov
or
rcr
popa
mov
adc
dec
popf
stos
in
fs
imul
pop
push
sbb
xor
sbb
retf
push
sub
sub
lds
pop
test
pop
xchg
fst
clc
rcl
loope
sbb
bnd
movs
dec
ror
cmps
push
rcl
movs
add
addr16
push
and
dec
jmp
scas
pop
pop
rcl
or
jecxz
loop
sub
cld
fdivr
lods
mov
mov
xchg
shr
sub
push
js
push
sbb
inc
mov
test
adc
jmp
gs
test
fadd
fisttp
sbb
xor
pushf
fstp
mov
jmp
loop
repz
mov
mov
push
jne
(bad)
dec
lds
push
mov
retf
xor
push
neg
cmc
add
cmp
in
pop
sub
push
rcl
push
mov
stos
inc
add
mov
add
leave
xor
int3
xchg
jmp
ret
hlt
or
repnz
pusha
ins
and
push
pop
sar
stc
(bad)
jns
stc
sbb
retf
pop
out
shr
sub
and
test
inc
pop
cmp
mov
rcl
retf
call
push
cmp
in
push
sbb
jmp
lahf
leave
mov
(bad)
loope
pop
jno
gs
xchg
popf
jp
lds
and
mov
and
mov
cmp
retf
lds
jno
mov
(bad)
into
push
inc
nop
sub
les
ja
cwde
cmp
push
inc
xchg
xchg
xor
pushf
and
scas
test
das
push
jbe
jmp
mov
xor
adc
jae
mov
mov
sbb
xchg
fs
push
dec
(bad)
jle
pop
cmp
adc
cwde
pop
(bad)
out
mov
movs
mov
loopne
jmp
xchg
pop
cmc
mov
stos
inc
pop
adc
adc
xchg
nop
or
imul
jns
mov
ret
dec
cmc
les
int
jle
fbstp
cmp
mov
faddp
push
sbb
jnp
cmc
pop
fcmovnb
xor
cmp
(bad)
(bad)
sbb
(bad)
cld
stos
(bad)
das
pushf
je
retf
mov
mov
mov
loop
inc
cmp
mov
shl
sub
add
rcr
sbb
xchg
cmp
sbb
aad
add
mov
sahf
pop
inc
dec
fstp
add
xchg
addr16
loope
or
fist
imul
movs
movs
mov
cli
push
dec
add
sbb
and
sbb
inc
je
cmp
push
(bad)
inc
popf
shl
dec
iret
pop
pop
pop
xchg
sub
or
mov
scas
dec
add
jg
mov
dec
mov
add
ds
jle
inc
jb
pop
adc
jmp
jle
jmp
or
mov
test
jmp
adc
stos
dec
jb
lea
stc
popa
or
icebp
bnd
lahf
mov
adc
ret
mov
ret
dec
bound
leave
test
mov
mov
mov
lods
mov
push
cs
sbb
cmp
and
sbb
mov
adc
cmp
fcomp
pop
jo
outs
jae
test
scas
shr
pop
repnz
(bad)
cmc
pop
sub
aam
sub
jbe
mov
jg
loopne
or
xchg
cmc
or
test
lahf
xchg
lods
and
fstp
or
push
jge
dec
fisub
add
in
jecxz
cmp
add
ins
push
push
adc
mov
xchg
inc
xchg
cld
or
outs
ins
mov
(bad)
jno
add
mov
pop
push
ins
loopne
push
mov
js
dec
lahf
hlt
fcmovnb
(bad)
mov
cmp
cli
add
and
lods
rcl
pop
dec
icebp
ins
cmp
and
test
jns
mov
mov
xchg
ins
pop
xchg
out
xchg
lods
sub
pop
mov
mov
add
mov
mov
out
loopne
xchg
fldenv
push
inc
push
mov
jmp
cmp
jne
push
ds
sbb
in
mov
gs
aaa
push
dec
dec
imul
xchg
ja
mov
clc
hlt
nop
popf
xor
fld
mov
shl
adc
nop
nop
adc
(bad)
(bad)
out
cwde
xor
mov
scas
fld
shl
xchg
xchg
cmp
mov
jae
call
retf
sub
leave
pop
in
adc
fwait
cmp
aam
les
xor
pop
and
pop
(bad)
jne
jnp
test
dec
punpcklwd
xor
inc
std
adc
xor
push
xor
enter
arpl
je
push
fwait
mov
or
jl
cli
stc
jno
sar
loopne
sti
xchg
cmp
xor
pop
mov
mov
loopne
or
sub
mov
icebp
sbb
mov
test
call
sbb
mov
xor
adc
call
and
or
and
ins
sar
aaa
add
movs
jno
mov
push
pop
aam
jno
(bad)
sahf
sub
sbb
sbb
movs
(bad)
clc
push
mov
xor
call
test
test
and
pop
and
cmp
jae
mov
pop
fst
xchg
add
pushf
ret
(bad)
push
ret
adc
enter
inc
jae
mov
shl
loop
std
repnz
std
push
pop
push
int3
nop
cmp
movs
jle
cmc
push
mov
and
and
mov
mov
mov
sbb
lds
jae
adc
sbb
jg
jp
daa
arpl
xchg
mov
adc
sbb
push
mov
mov
add
and
xchg
adc
scas
xor
mov
into
mov
mov
(bad)
imul
xor
and
fs
cmps
jge
cmp
inc
pop
adc
cwde
outs
out
das
inc
and
pop
cdq
loope
and
jnp
pop
lods
cld
test
jns
dec
push
push
jge
repnz
div
xchg
adc
pop
sub
call
push
test
cdq
adc
pushf
cmps
pop
mov
add
movs
add
je
mov
shl
mov
push
adc
(bad)
mov
dec
add
dec
ja
in
aad
mov
pop
imul
sbb
leave
xchg
test
or
add
in
jns
sar
push
add
push
loopne
repnz
movs
mov
and
shl
xchg
adc
js
sub
mov
pusha
(bad)
popa
xchg
ret
ins
gs
mov
fistp
mov
ins
and
(bad)
aas
pop
dec
cwde
mov
mov
dec
sbb
or
mov
call
imul
movs
imul
push
cld
pop
xchg
jns
in
xchg
stos
fldenv
in
or
jge
shl
dec
rcl
add
and
movs
lahf
in
fcom
ins
stc
jmp
xchg
xchg
test
add
enter
dec
retf
pop
es
pop
enter
data16
pushf
aad
cmp
sub
aad
pushf
sti
ror
aaa
aam
xchg
dec
push
pop
hlt
frstor
movs
mov
push
mov
xchg
push
dec
and
out
pop
popa
je
test
push
mov
or
inc
dec
es
dec
cmps
mov
jp
cwde
inc
push
clc
loope
popa
sub
ins
mov
sahf
and
mov
imul
repnz
mov
in
mov
dec
rcr
push
aad
dec
jl
sbb
jge
jle
jl
cli
jge
rcl
mov
movs
fbld
jmp
or
push
jb
dec
fs
aaa
cmp
(bad)
retf
xor
or
and
out
clc
push
fiadd
jo
dec
pop
or
jmp
adc
jmp
mov
jecxz
inc
stos
mov
shr
fmul
mov
and
adc
adc
mov
cmp
mov
push
(bad)
out
and
jmp
sub
out
lods
leave
daa
(bad)
stos
popa
inc
xchg
lock
add
leave
stc
push
xor
xor
xor
cdq
dec
add
pop
pop
pushf
mov
jae
mov
mov
sub
mov
sbb
mov
cld
inc
fs
or
xchg
int
lods
ins
retf
lahf
adc
ret
xor
xor
cmp
sub
pop
out
popa
push
mov
mov
mov
push
ret
and
mov
ror
(bad)
bnd
lds
push
push
jmp
mov
pop
lods
jg
mov
pop
cmp
retf
cmp
cmc
dec
push
lds
inc
dec
icebp
fidiv
lods
cmp
dec
pushf
push
dec
mov
imul
mov
mov
int3
rol
and
sub
add
or
loope
nop
mov
sysret
mov
ficomp
lea
stc
push
pushaw
popf
ins
jne
xor
(bad)
gs
ins
addr16
or
sbb
sub
mov
and
push
mov
les
rol
pushf
mov
jno
mov
je
test
mov
dec
mov
push
bound
sar
dec
and
xchg
stc
jo
sti
inc
sbb
add
fwait
add
jp
into
push
xor
dec
das
pop
das
dec
arpl
adc
in
adc
pop
les
push
out
jo
xchg
daa
mov
jno
(bad)
jo
out
out
bound
ficom
mov
nop
dec
aas
out
je
and
outs
pop
enter
std
test
pop
inc
mov
xor
ds
push
or
cmc
mov
mov
xchg
push
daa
dec
out
mov
sbb
or
fdiv
imul
add
jae
push
xchg
fnstsw
pushf
div
and
ds
fdiv
jmp
push
or
xor
sbb
fs
lea
test
fild
add
cmp
scas
pop
movs
cld
fidivr
sbb
xor
mov
add
inc
les
sub
cmps
lods
or
xor
out
stos
stos
xchg
out
lahf
mov
jbe
mov
xchg
mov
ror
ja
jecxz
test
movs
pop
les
adc
inc
sub
stos
xor
pusha
mov
outs
aaa
mov
sub
das
sbb
fcomp
das
jge
add
imul
xchg
xchg
popf
stc
cmp
mov
(bad)
mov
lds
inc
dec
dec
inc
popa
loopne
outs
call
xor
dec
gs
xor
mov
adc
mov
xor
inc
dec
xor
or
push
inc
jns
lods
enter
and
cmps
xlat
fcmovnb
push
xchg
cmp
popa
push
pushf
ins
cmp
add
in
mov
das
es
adc
sbb
jle
adc
mov
xor
bound
cmps
xor
mov
jmp
cmp
cmp
jns
enter
ds
mov
jno
fimul
jg
imul
int
mov
aad
xor
push
push
imul
add
imul
pop
es
rcl
lahf
jp
mov
pop
ins
out
cmp
adc
cmp
jle
shl
cmps
(bad)
retf
lods
cs
adc
fld
mov
pusha
mov
and
push
clc
adc
fcom
in
mov
push
movs
mov
cdq
inc
or
mov
aam
imul
push
jne
movs
dec
pop
jl
icebp
in
inc
xor
xlat
test
repnz
cwde
adc
add
sub
mov
and
cmps
in
leave
ja
jecxz
add
cmp
cld
push
or
call
movs
lock
std
dec
mov
inc
pop
call
inc
push
or
icebp
mov
call
retf
mov
ins
outs
pop
into
retf
iret
xchg
iret
and
inc
mov
add
movs
adc
(bad)
push
fldcw
push
xchg
cmp
retf
iret
outs
xchg
push
cmovge
leave
push
int3
shl
mov
dec
sbb
(bad)
and
xchg
stos
cmp
ins
xor
cmp
push
xor
call
outs
lahf
adc
inc
ss
inc
xchg
jb
sti
push
inc
jmp
sub
xor
mov
push
dec
pop
das
sar
es
mov
test
movs
cwde
cli
xchg
mov
and
jbe
xchg
fld
push
jge
adc
dec
cmp
scas
lds
jo
xor
or
loope
add
mov
cmp
(bad)
js
lock
inc
cwde
jg
nop
and
fldcw
in
mov
inc
xchg
jmp
loope
xor
call
lods
sub
jno
lock
cwde
das
sti
push
aam
out
mov
push
scas
push
cdq
cmp
shl
sub
gs
les
and
movs
dec
ret
gs
leave
les
cmp
or
cmp
pop
popf
out
das
mov
sub
pop
dec
lds
mov
push
ins
push
jmp
sub
inc
mov
je
popa
xchg
fimul
or
or
inc
movs
loope
cwde
dec
cmp
push
mov
dec
out
mov
mov
add
loop
adc
mov
es
dec
call
sub
enter
scas
in
mov
mov
jns
cmp
jge
jecxz
and
(bad)
xchg
xor
mov
or
jno
cmp
jae
in
adc
loope
pop
jmp
adc
adc
xchg
fimul
mov
or
loopne
sub
dec
sbb
inc
ds
lea
js
lods
xchg
adc
out
lahf
or
pop
push
ja
ds
inc
imul
jp
dec
sub
int
xchg
cdq
out
push
pop
fstp
test
cmps
add
add
jmp
push
inc
mov
sbb
mov
push
sbb
push
mov
cmp
mov
int3
out
in
ins
add
aaa
stos
lds
popa
xchg
call
push
loopne
dec
scas
(bad)
gs
xor
mov
add
adc
jo
push
xchg
mov
ror
jp
enter
cmp
jg
jle
cwde
mov
sar
pop
pop
inc
xor
leave
or
xor
call
lock
bound
iret
inc
or
push
aam
bound
pusha
inc
sub
add
mov
cmp
lods
add
add
sub
retf
xchg
inc
and
jge
mov
xor
sahf
ss
ins
stc
cs
add
xchg
ins
xchg
pusha
sbb
or
lods
(bad)
sub
mov
cmps
aaa
or
repz
ror
not
pop
mov
adc
fisubr
mov
mov
xchg
adc
movs
mov
mov
hlt
xchg
jmp
xchg
jb
inc
mov
mov
iret
pop
mov
mov
mov
arpl
test
cs
push
mov
inc
mov
test
mov
push
pushf
pop
inc
out
pusha
lea
push
aad
adc
push
mov
dec
cmp
ror
and
dec
cli
movs
xor
(bad)
shl
pop
cmp
push
dec
dec
or
fist
mov
out
scas
hlt
ds
mov
mov
outs
pop
jno
or
cld
and
cmc
mov
popf
and
nop
mov
mov
fs
repz
lods
mov
sub
in
xchg
test
test
adc
inc
cs
mov
mov
push
xchg
shr
cmp
movs
ss
adc
daa
shl
test
not
das
out
jp
xor
scas
xor
jb
sahf
pop
and
xor
stos
lods
mov
(bad)
fcom
pop
pop
lea
clc
fbld
arpl
dec
mov
xchg
sbb
pop
fdivr
call
pop
daa
mov
aaa
(bad)
es
retf
ret
jo
jl
fstp
les
aas
adc
mov
mov
sbb
fsub
pop
arpl
ret
sbb
dec
push
jle
retf
push
dec
push
push
jl
imul
push
das
ins
and
or
or
add
shr
das
fs
stos
enter
test
pop
daa
rcr
js
push
mov
frstor
mov
jno
and
mov
pcmpeqw
pusha
fsub
es
outs
sti
lods
popa
jmp
stc
jo
lahf
push
retf
push
pop
leave
sti
add
sar
mov
scas
cmp
stos
ja
xlat
lds
inc
jge
test
push
xor
mov
cmc
mov
mov
out
lock
jnp
push
out
ss
adc
popf
cmps
mov
nop
lods
(bad)
pop
aas
cmp
or
xchg
mov
stos
outs
das
pop
xor
sub
and
ins
xor
idiv
cmp
and
bound
fadd
mov
inc
mov
lods
mov
cmp
adc
gs
int3
pushf
push
fdiv
add
mov
test
jno
stc
xchg
sbb
retf
xchg
arpl
fdiv
add
inc
pop
push
mov
cli
adc
out
adc
adc
and
fstp
sbb
cli
jbe
add
jae
je
xor
test
call
rcl
cli
idiv
add
xor
cs
or
mov
jmp
stos
daa
out
loop
pop
jae
adc
iret
mov
das
xchg
push
dec
jge
inc
cmp
or
fsub
inc
jge
or
mov
retf
and
and
jle
call
stos
adc
fstp
or
pushf
sub
gs
pop
fidivr
out
call
inc
push
imul
mov
sub
xlat
pop
popa
cld
push
gs
jmp
test
ret
repz
jnp
daa
cli
in
iret
shl
or
xchg
hlt
mov
mov
data16
(bad)
xchg
sub
scas
xchg
ss
mov
xor
out
xchg
outs
loope
or
ja
cmp
inc
(bad)
ficomp
push
scas
lods
lods
jle
sbb
dec
pop
retf
mov
jp
mov
push
jecxz
nop
ret
or
dec
cwde
test
pop
and
loopne
inc
(bad)
gs
dec
dec
jns
push
xor
jmp
sbb
mov
push
xor
gs
pop
xchg
sub
shr
mov
xchg
pushf
fcomp
loope
lods
sbb
fdivr
leave
sub
ds
(bad)
js
cmp
stos
retf
mov
mov
sub
shl
(bad)
push
and
sub
pop
retf
ins
push
pop
mov
push
and
mov
scas
enter
mov
lds
inc
sbb
jno
loope
xor
add
mov
inc
std
arpl
sub
mov
sbb
push
ret
and
jbe
test
pop
cmp
jle
inc
add
rcl
bound
sar
dec
mov
add
adc
push
mov
adc
mov
or
mov
sbb
pop
retf
jmp
aaa
push
push
scas
stos
and
repz
rcl
stos
sti
paddb
sub
sahf
or
or
lods
(bad)
mov
adc
sahf
push
mov
jno
fld
pop
jl
mov
mov
pop
cs
adc
test
mov
inc
pop
inc
add
dec
(bad)
xor
bound
ret
xchg
pop
inc
mov
or
xchg
adc
(bad)
jge
cld
fsqrt
js
addr16
aaa
jmp
stos
xor
cmc
lods
xchg
in
sub
and
les
cmp
inc
jg
or
movs
pushf
jmp
push
push
jmp
mov
test
or
sbb
push
inc
sub
stos
sbb
mov
xor
int3
jae
jmp
inc
mov
mov
xor
push
cmp
lock
mov
sahf
sbb
pop
fnstsw
jecxz
adc
lods
add
cmp
lods
das
popf
add
xchg
ja
sub
pop
mov
cmps
sub
shl
cdq
push
cmp
das
fdiv
ret
icebp
jns
push
fwait
jno
mov
ret
jmp
mov
jp
push
ret
ror
pop
adc
je
fdiv
pop
(bad)
inc
pop
data16
aaa
out
push
or
xor
popa
in
in
pop
add
push
repz
ret
fstp
rcr
and
pop
aad
daa
(bad)
dec
mov
aad
pop
mov
or
ret
jg
and
rol
cld
(bad)
lahf
mov
or
push
std
xlat
cwde
cmp
cmovge
(bad)
jmp
(bad)
cwde
cmp
pop
jnp
les
scas
cli
(bad)
in
jmp
or
mov
lea
mov
fistp
(bad)
jge
lea
lahf
enter
popa
and
xor
adc
frstor
cmp
fnstenv
or
js
mov
push
test
gs
cmp
add
mov
push
jecxz
retf
fwait
mov
jge
test
sub
enter
rcr
daa
mov
sub
jae
popa
add
fs
sub
sbb
icebp
ins
mov
dec
cld
cli
hlt
dec
xor
pop
push
adc
test
mov
test
fucom
inc
ror
mov
retf
ins
mov
int3
dec
aam
int3
jle
ret
mov
mov
jns
aad
inc
fld
ret
adc
pop
pop
cmp
jnp
lods
mov
dec
mov
or
cmp
iret
xchg
xchg
(bad)
cmp
mov
mov
pusha
push
das
cmps
sbb
(bad)
mov
sbb
inc
in
push
xchg
pop
xor
jmp
movs
pop
ins
cmps
in
ds
push
shl
fldcw
add
jp
ret
into
pop
add
retf
dec
fnstsw
fbstp
add
mov
xchg
mov
add
icebp
ficomp
and
stos
fwait
test
and
xchg
and
scas
adc
sbb
ret
dec
sub
addr16
vpmacsww
xor
jecxz
clc
mov
sub
dec
(bad)
pop
mov
and
mov
and
mul
fld
arpl
sbb
pushw
xor
pop
mov
push
jae
fs
add
fistp
clc
adc
inc
(bad)
mov
jmp
lods
out
mov
cmp
cwde
lds
mov
sbb
mov
add
into
push
dec
aam
aas
push
(bad)
retf
pop
sub
imul
xor
js
call
test
adc
jmp
sub
jmp
mov
sbb
lahf
pop
pop
icebp
mov
cmps
and
mov
sbb
jmp
mov
inc
inc
repz
mov
hlt
sahf
push
into
or
fsubr
fs
and
mov
sbb
xchg
fmul
push
int
jmp
in
mov
fwait
cmp
jmp
adc
std
xchg
sub
xchg
rcr
pop
fwait
dec
adc
sub
idiv
jns
repz
dec
inc
jle
clc
mov
mov
xchg
push
mul
out
cmp
dec
mov
jle
jae
add
lahf
gs
shl
adc
cli
xor
call
pop
xchg
mov
lods
out
mov
inc
adc
adc
push
adc
pop
inc
jno
inc
adc
retf
add
mov
lock
dec
popf
cmp
add
test
mov
imul
in
mov
sbb
inc
jae
mov
fmul
cdq
jbe
dec
inc
ss
cld
test
call
in
adc
pop
and
fisubr
push
outs
push
xchg
mov
sub
push
addr16
retf
jg
add
fs
adc
jbe
aaa
fcomi
ss
mov
je
add
cmp
jle
push
and
imul
sti
sti
push
sub
push
cmp
pusha
pop
jb
push
cmps
mov
mov
xchg
sbb
mov
inc
movs
adc
mov
sbb
dec
mov
adc
sub
scas
jmp
inc
or
shld
nop
add
icebp
(bad)
jg
mov
daa
ins
xor
mov
ja
cmp
pop
mov
outs
or
retf
dec
xlat
fsub
pop
fpatan
jns
cmps
repz
push
bound
inc
push
rcr
adc
sub
jno
sbb
call
mov
xchg
sar
mov
add
pop
add
cmp
dec
jecxz
shl
popa
stos
mov
movs
and
in
or
push
push
outs
push
pop
xor
jecxz
scas
loop
xchg
sbb
test
sub
fnstsw
pop
jo
push
fldcw
fs
in
dec
loope
push
lea
adc
mov
ds
ja
jge
mul
dec
lods
stos
lock
mov
cdq
inc
mov
inc
pop
mov
dec
inc
inc
and
mov
fmul
mov
inc
ret
mov
jno
cmps
pop
or
neg
add
inc
ror
mov
into
adc
push
(bad)
mov
cld
xor
jnp
inc
xor
adc
scas
push
rol
and
xchg
popa
fidivr
adc
sub
jmp
mov
dec
dec
mov
in
call
dec
cmps
mov
jns
push
mov
mov
xor
(bad)
jg
cmp
aad
ins
jge
les
xchg
xor
ds
pop
movs
repz
mov
xchg
fld
jmp
xor
jnp
lds
sbb
rcl
bnd
jbe
(bad)
or
pop
inc
repnz
push
in
outs
pop
cmp
in
dec
(bad)
jmp
xor
popf
addr16
inc
das
cmps
lock
je
dec
jnp
or
daa
cmp
call
out
mov
ins
iret
gs
jg
inc
nop
icebp
inc
movs
mov
loope
add
push
movhps
mov
(bad)
pop
sbb
cmp
jnp
sti
imul
call
jmp
(bad)
clc
arpl
xchg
out
xor
mov
sub
movs
adc
imul
add
dec
call
test
mov
adc
cmps
clc
push
mov
add
dec
fwait
nop
pop
add
sbb
jbe
out
and
xor
add
add
sbb
daa
adc
repnz
mov
sbb
stos
xor
loop
jae
sti
into
fnsave
es
push
lods
data16
mov
repnz
arpl
jae
out
ret
mov
rcr
adc
mov
sbb
push
ss
xor
cmc
push
into
(bad)
push
xchg
dec
cmc
mov
add
das
or
mov
test
sti
mov
imul
(bad)
(bad)
add
arpl
arpl
mov
loop
aaa
cdq
cdq
or
ins
std
or
cmp
pop
leave
ss
or
scas
sub
and
call
dec
in
repnz
sub
scas
rcl
dec
leave
mov
mov
inc
mov
icebp
fld
mov
add
out
nop
fimul
and
sub
xor
gs
jp
jge
jb
mov
jmp
cs
cmc
jecxz
or
mov
mov
or
jb
pavgb
jl
popf
jmp
stc
sar
cmp
rcr
sti
push
ret
sub
gs
pop
test
xchg
mov
fst
or
sbb
cld
sub
daa
mov
cli
mov
push
sub
scas
ja
jae
call
test
fs
fs
(bad)
daa
push
push
pop
push
push
inc
xor
jo
sbb
jns
xor
add
pop
shl
pop
dec
push
dec
jl
(bad)
push
add
sub
xlat
clc
cmp
pop
test
dec
xor
push
(bad)
cmp
fstp
(bad)
cli
push
pop
aad
mov
inc
jle
ret
mov
mov
lahf
mov
outs
mov
mov
retf
leave
loopne
sub
imul
cs
in
test
jmp
or
sbb
or
mov
jno
ds
mov
mov
push
call
call
mov
push
sub
jo
jb
call
int3
mov
adc
sub
iret
cmps
sub
popa
pop
(bad)
or
push
(bad)
les
outs
fbstp
dec
fs
sbb
add
and
pop
sbb
mov
in
fsub
dec
and
cmp
cmp
dec
xor
sbb
jge
cmp
and
rcl
retf
jmp
mov
or
fdiv
hlt
aad
sbb
add
ss
sbb
lods
loope
mov
adc
in
jecxz
xor
leave
push
sbb
add
outs
add
add
dec
add
push
(bad)
leave
jbe
pop
retf
mov
cmp
sti
ror
xor
or
aas
dec
call
stos
sub
retf
ror
shr
mov
loope
repz
pop
clc
es
fild
es
inc
ret
pop
mov
jmp
(bad)
cdq
int
test
pop
pop
mov
adc
mov
loop
and
add
scas
outs
stc
retf
sub
inc
jmp
xchg
xor
pmovmskb
popa
aam
inc
js
in
loopne
xchg
cmps
dec
and
int3
es
push
sub
xlat
repz
mov
(bad)
call
or
xchg
jle
int
push
sub
dec
ins
pop
shl
test
pop
and
pusha
repnz
cmp
mov
mov
add
sub
out
rol
call
aad
lahf
jmp
push
pop
xor
and
in
addr16
mov
stos
push
and
dec
mov
je
add
enter
xor
xlat
cdq
nop
call
push
dec
cmp
sbb
loop
int
xlat
mov
ja
mov
push
push
aaa
add
inc
scas
scas
outs
sbb
test
rcl
cmp
retf
xor
cmp
sub
stos
mov
sub
push
pop
xor
mov
leave
dec
sub
pop
enter
sbb
stc
inc
jne
enter
fst
cwde
or
and
lea
call
mov
jae
push
lods
retf
scas
pop
xchg
and
adc
push
inc
cmp
fstp
daa
sub
call
xor
and
xchg
test
xchg
dec
les
mov
hlt
bnd
and
and
and
test
mov
jle
lahf
mov
into
(bad)
push
or
mov
dec
mov
mov
es
(bad)
bound
pop
push
mov
inc
xor
adc
adc
lods
cmp
cmc
cmps
sbb
push
inc
call
int3
xlat
loopne
enter
xchg
fcomp
ins
push
fdiv
xchg
ins
or
push
push
jmp
or
mov
rcl
adc
push
(bad)
or
xchg
dec
adc
mov
jbe
add
mov
mov
ja
jae
into
inc
cmp
stc
add
out
inc
test
cwde
cli
sub
mov
xor
jae
pop
aam
xor
lds
sub
(bad)
jecxz
and
jle
xchg
adc
jmp
or
jnp
aam
xchg
sbb
cmp
sub
inc
push
shl
inc
mov
mov
sar
mov
and
pop
cmp
les
xor
arpl
les
out
inc
mov
jmp
sbb
fist
inc
out
adc
inc
and
popf
or
repnz
and
sub
(bad)
pop
into
push
jle
sbb
loopne
jae
push
call
pop
inc
cs
jnp
repnz
mov
mov
inc
dec
fisubr
jnp
loopne
(bad)
jae
test
pop
mov
into
rcl
lea
jbe
push
lea
aaa
icebp
sub
aam
cmps
adc
xor
(bad)
imul
popa
xchg
neg
jbe
popf
push
xchg
mov
adc
adc
or
adc
push
cmps
fcomp
ret
cmp
(bad)
daa
vcvtss2sd
fsubr
cdq
jno
lea
jge
pop
hlt
fnstsw
mov
mov
popf
lock
mov
scas
jle
dec
imul
mov
outs
lahf
xchg
mov
enter
dec
and
mov
(bad)
or
je
scas
xor
push
je
mov
rcr
scas
push
les
add
cmc
les
ja
mov
inc
mov
dec
cmps
out
dec
push
mov
add
dec
mov
cmp
mov
and
push
push
inc
push
rcl
xchg
mov
jmp
add
pushf
outs
(bad)
sbb
sahf
xor
fstp
out
or
jge
mov
jg
jmp
test
pop
sbb
mov
mov
xchg
test
xchg
rol
dec
and
push
mov
out
push
loop
xor
dec
inc
pop
or
addr16
inc
and
fidiv
sbb
and
inc
cmp
adc
cmp
jmp
scas
adc
ja
test
jbe
fiadd
and
push
jle
fs
mov
rcl
mov
jge
addr16
cs
mov
xchg
aas
push
or
out
in
ret
inc
(bad)
jmp
inc
loope
hlt
xchg
mov
dec
inc
mov
fbld
inc
shl
cmp
and
inc
add
mov
push
retf
xchg
mov
sbb
sub
inc
test
pop
pushf
clc
fwait
es
and
inc
(bad)
popa
popa
inc
sub
mov
cmp
shl
clc
cmc
cmp
stos
jns
addr16
cdq
mov
call
push
inc
mov
dec
mov
cmp
out
mov
movs
pop
(bad)
mov
test
sahf
cld
ss
jp
ja
mov
rcr
mov
bound
fwait
dec
into
sahf
mov
fwait
not
gs
sbb
nop
inc
or
jl
add
cmp
(bad)
and
aam
jecxz
and
call
jle
inc
pop
mov
inc
outs
cld
rol
mov
jl
jl
jmp
mov
dec
js
ins
cmps
xchg
mov
pop
pusha
pusha
lds
iret
ins
cmp
mov
sahf
sbb
or
daa
cmp
mov
sub
or
loopne
cmp
mov
test
lea
cdq
pop
xor
cmp
mov
inc
adc
inc
inc
push
daa
movs
bound
stos
call
(bad)
lods
and
dec
lds
in
pop
inc
aas
in
jbe
lods
jne
shl
mov
mov
dec
aas
inc
adc
mov
xor
iret
inc
cmove
dec
xor
lods
xchg
xchg
adc
and
cmp
and
inc
or
dec
mov
inc
(bad)
leave
js
inc
jne
mov
stos
xchg
ins
imul
adc
dec
cwde
dec
rcr
adc
icebp
pop
in
dec
push
push
js
sti
aam
(bad)
and
mov
out
push
dec
sahf
mov
fisub
sub
dec
jnp
out
dec
les
xor
in
jl
nop
mov
(bad)
aam
in
enter
sar
sub
in
and
lock
jae
stos
xchg
call
cmps
pushf
sar
push
(bad)
mov
sub
dec
jg
mov
inc
sub
call
xor
leave
or
push
stc
push
mov
pop
push
(bad)
mov
pop
(bad)
lahf
dec
xor
or
jecxz
sub
sub
popf
pop
fsub
xchg
pop
inc
loopne
in
outs
rdpmc
or
je
push
call
or
pop
outs
aam
ror
cli
ja
popf
sahf
adc
enter
lods
mov
ds
aam
retf
sub
inc
dec
int3
jge
push
(bad)
ja
retf
xor
outs
in
xchg
outs
push
mov
imul
data16
fidivr
xchg
mov
mov
outs
mov
add
(bad)
(bad)
xchg
out
(bad)
add
test
and
enter
mov
sbb
jle
and
out
cmps
dec
dec
sbb
bound
cmp
inc
sub
sbb
(bad)
fcmovnbe
cmps
call
and
sbb
mov
aam
add
aas
int
mov
or
cmp
sub
push
fnstenv
popf
pusha
aaa
sub
pop
test
sub
xchg
bound
mov
lock
sbb
(bad)
adc
shl
or
fsubr
mov
gs
jmp
aad
push
pusha
pop
pop
fimul
cmp
fisub
sbb
add
outs
add
ficomp
inc
adc
push
clc
add
dec
mov
out
lahf
mov
out
test
pop
dec
popa
in
stos
jmp
cs
jbe
aas
(bad)
test
jne
fucomip
add
les
inc
outs
mov
movs
adc
in
cwde
push
push
cmp
push
jmp
and
adc
test
inc
jle
vmread
add
xchg
xchg
dec
mov
imul
mov
mov
sub
add
inc
stc
jne
test
dec
in
je
ror
imul
xchg
ins
movs
iret
mov
adc
dec
data16
push
out
out
je
inc
or
daa
sbb
(bad)
fstp
push
jmp
outs
retf
push
test
fmul
cmc
into
fdiv
hlt
pushf
mov
loopne
sub
mov
loopne
add
xor
(bad)
mov
in
in
inc
push
mov
cmp
dec
out
(bad)
retf
rcl
mov
(bad)
cmp
push
xor
adc
pop
xchg
movs
xchg
cli
ror
pop
xchg
fdivr
mov
leave
pusha
(bad)
push
dec
pushf
add
mov
mov
jbe
popa
mov
aaa
push
or
adc
dec
(bad)
dec
jo
shr
pop
std
lahf
cmp
push
pop
mov
mov
mov
pop
fst
es
mov
(bad)
sti
shl
jmp
ins
or
xlat
cmp
mov
ds
dec
outs
cmp
mov
and
jne
test
loopne
std
xchg
jns
cmps
fimul
or
(bad)
fwait
(bad)
icebp
pushf
shl
and
dec
xchg
mov
dec
adc
lods
pushf
or
xor
dec
retf
(bad)
push
fadd
mov
retf
push
lahf
sahf
inc
and
adc
push
mov
sbb
xor
jo
add
and
int3
push
sub
add
adc
xor
cli
(bad)
jl
lods
jmp
dec
add
addr16
xchg
jmp
mov
xchg
mov
pop
test
dec
cmp
adc
jb
fwait
xchg
sub
and
sbb
fsubr
inc
sbb
add
sub
sub
call
xchg
mov
push
test
dec
pop
retf
cmp
xchg
push
cmps
jns
push
xchg
and
jl
cmp
mov
sbb
cli
es
cmc
mov
les
stc
imul
out
inc
push
mov
xchg
adc
mov
mov
inc
pop
test
lds
mov
xchg
inc
aad
fldenv
fidiv
pop
jne
mov
pop
jmp
fild
bound
hlt
ret
fadd
ret
sub
pusha
add
sbb
jne
mov
(bad)
sub
sar
inc
out
inc
ds
cdq
and
push
rcr
jo
imul
xlat
clc
mov
movs
(bad)
jmp
dec
cmp
out
clc
in
mul
shl
fnstenv
je
in
sti
sbb
mov
stc
or
fwait
(bad)
test
adc
push
xchg
mov
pop
or
fdivr
jmp
push
div
dec
or
popf
test
push
aad
xchg
(bad)
test
sahf
mov
fwait
inc
cli
pushf
inc
scas
mov
div
not
push
loopne
loope
sbb
mul
mov
add
mov
sub
fstp
xor
sbb
cmps
lods
push
lock
das
mov
loope
and
mov
daa
call
(bad)
pop
rol
adc
sbb
push
pop
test
test
sub
and
fisub
xchg
mov
and
xor
cmc
aas
cdq
(bad)
(bad)
in
hlt
inc
hlt
sub
adc
mov
pop
inc
xor
pop
(bad)
sbb
loop
hlt
sub
imul
cmp
lock
cwde
imul
xchg
rol
aad
push
dec
or
aam
into
dec
bound
jb
xchg
sbb
sbb
xor
iret
pusha
mov
xor
movs
int
enter
mov
nop
aam
les
cmp
lods
xor
ja
imul
pop
icebp
out
pop
add
add
push
neg
or
fstp
inc
call
arpl
shl
adc
push
cmp
sbb
inc
retf
cmp
nop
les
mov
loope
xchg
xor
xor
jmp
push
pushf
stc
stc
adc
test
ror
inc
aam
arpl
inc
pop
test
lods
stos
jl
jg
shr
pop
aam
mov
ret
xchg
inc
dec
sbb
sub
sbb
or
and
shl
sbb
mov
aad
or
mov
mov
aas
push
test
aam
add
add
jbe
leave
psubusw
lods
push
fsub
add
lahf
mov
and
inc
sub
mov
aas
jecxz
in
push
test
neg
or
sub
push
jnp
sbb
stos
fimul
into
psubb
shl
sub
fmul
stc
add
adc
sub
pop
stos
idiv
push
scas
(bad)
std
cs
inc
sti
xchg
sub
inc
clc
pop
lods
or
mov
sub
sbb
hlt
sub
and
jne
icebp
test
or
dec
or
push
repnz
adc
callw
dec
jne
pushf
adc
in
mov
xor
jnp
push
bnd
mov
test
call
pop
test
pop
jle
add
les
mov
mov
cmp
and
cmps
jge
xchg
and
pusha
sub
cdq
call
mov
jmp
fst
and
sub
mov
push
(bad)
lods
jge
pop
cwde
jns
enter
movs
je
rol
cli
es
push
retf
out
cs
add
retf
je
dec
pusha
and
loope
leave
ret
cmps
repnz
jle
ins
(bad)
in
ins
sbb
dec
scas
cli
push
icebp
sub
inc
out
repnz
retf
dec
inc
fcmovu
rep
stos
and
jmp
data16
not
xchg
or
jne
xchg
fst
bound
popf
repz
sub
fs
ja
lahf
pminsw
dec
pushf
pop
retf
mov
push
imul
addr16
into
call
clc
fcomp
push
jmp
xor
adc
ja
push
sub
xchg
and
pop
jae
sub
jle
xchg
aas
adc
les
mov
xchg
mov
push
xchg
ja
cmp
ja
mov
aaa
adc
mov
or
mov
imul
lock
sub
retf
loope
add
aam
sub
movs
jecxz
repz
addr16
xchg
jp
add
sub
in
outs
jo
jp
mov
lds
rcl
dec
fs
xor
dec
or
(bad)
aad
sub
jg
cmps
push
gs
or
(bad)
pop
add
gs
popa
out
stos
lahf
mov
outs
jb
cwde
and
fsub
xor
dec
push
ins
push
retf
in
push
das
cmp
xchg
aas
cmp
loopne
lahf
(bad)
das
icebp
xchg
std
repz
cs
mov
test
mov
xchg
adc
add
mov
pop
jmp
scas
pop
loop
sbb
(bad)
std
loope
xchg
cwde
add
xchg
jp
test
mov
clc
stc
xchg
mov
outs
push
lea
fwait
outs
movs
cmp
faddp
or
stos
out
xchg
add
out
int
mov
xchg
aas
(bad)
mov
inc
aam
add
mov
dec
sub
popa
add
cld
add
popa
jecxz
pop
pop
fnstsw
iret
fcom
and
push
push
lock
pop
in
mov
sub
inc
imul
stos
and
test
mov
push
xchg
aad
or
test
repnz
dec
push
icebp
fs
cmp
loop
lock
aas
ror
out
sub
enter
ror
imul
jne
and
test
addr16
lods
mov
cmp
sub
cmp
pop
jb
xchg
cmp
fidivr
aaa
mov
adc
adc
jns
pop
dec
jo
(bad)
cwde
mov
int
repz
out
ret
mov
cmp
jmp
sahf
sub
sub
rol
xchg
and
out
mov
push
sbb
xchg
lahf
or
enter
xor
xor
inc
xor
or
xchg
jae
cmp
icebp
sub
cmp
leave
ror
pop
or
add
pop
dec
outs
push
data16
cmp
jg
fwait
out
outs
jae
repz
fsubr
mov
dec
cmp
mov
dec
cmps
xor
sub
(bad)
ja
inc
cmp
test
bound
mov
mov
mov
xchg
es
pop
test
mov
outs
addr16
cmp
push
cmc
or
mov
loope
dec
cmps
push
mov
out
adc
jle
lods
ins
xor
xor
jge
sub
(bad)
shl
or
mov
out
icebp
push
jne
jne
(bad)
icebp
popf
mov
call
xor
adc
jmp
loope
jmp
push
xor
stos
mov
retf
mov
mov
xchg
fist
stc
push
cmps
mov
xchg
pusha
cmc
push
ficom
mul
mov
bound
out
adc
fcomi
into
call
fwait
add
addr16
std
mov
cmp
cmp
call
loopne
and
dec
dec
movs
dec
shl
in
cmps
outs
int3
jne
push
shl
dec
cmp
mov
ins
xchg
push
sahf
push
xor
add
xchg
arpl
lods
mov
mov
or
push
js
sub
in
jmp
cs
sbb
jns
and
mov
or
push
in
dec
call
(bad)
cmc
inc
cmc
sub
mov
jmp
es
mov
and
ins
outs
mov
dec
sbb
shr
jno
movq
je
pushf
fist
cmp
mov
scas
xchg
(bad)
fnstcw
sub
mov
inc
pop
inc
mov
and
jle
sub
jne
jmp
aas
in
mov
and
jl
es
jp
je
rcl
popa
and
pop
jo
sbb
mov
arpl
cmp
jns
mov
aam
push
pusha
in
cmp
mov
sub
dec
pop
add
popaw
aas
mov
pop
(bad)
mov
push
retf
jle
mov
mov
or
mov
or
dec
and
das
xor
mov
jae
xor
shl
je
dec
adc
call
pop
mov
jnp
movs
out
test
xchg
std
out
and
aaa
mov
jl
daa
into
jae
outs
test
loope
es
aad
lea
cli
mov
mov
es
sbb
cmp
adc
jmp
jp
ror
xchg
jno
or
or
adc
in
das
in
or
imul
frstor
ds
pop
outs
mov
int3
ret
dec
test
aad
jecxz
lea
push
mov
pop
cmp
rcr
jb
dec
lods
rol
mov
ss
xor
push
test
lods
movs
adc
mov
out
js
mov
or
(bad)
push
push
sub
fnstenv
sbb
mov
aad
jne
pop
mov
in
cli
clc
not
jb
sub
mov
jbe
inc
mov
xlat
adc
adc
imul
out
and
lock
clc
mov
out
push
es
fadd
xor
cmp
fdiv
outs
mov
cmp
gs
cmp
sbb
shl
arpl
inc
lods
(bad)
push
es
sub
pop
pop
mov
inc
xor
fadd
xor
mov
cmp
repz
popf
push
pop
sub
pop
test
cmp
test
ds
movlps
add
das
popa
icebp
das
pop
mov
dec
jge
ds
es
scas
ja
repnz
or
push
lds
push
clc
sbb
stc
out
clc
mov
addr16
test
outs
in
inc
loopne
bound
add
jle
mov
imul
ret
cwde
jmp
loopne
cmp
jle
aad
pop
cli
idiv
pop
sub
shrd
out
es
and
mov
cmp
xchg
movs
movs
mov
int
jp
push
inc
repz
and
sub
call
sbb
cld
gs
inc
cld
pop
inc
lahf
in
cdq
dec
cmp
call
imul
iret
mov
stc
jb
(bad)
mov
adc
inc
fsubr
inc
mov
std
cdq
fnstenv
add
leave
xor
xchg
mov
pusha
cmps
fsubr
les
leave
lea
jae
cmps
push
mov
(bad)
sar
out
sbb
add
pop
in
mov
pop
mov
inc
call
xor
cmps
sbb
test
in
mov
ds
dec
sbb
cmp
inc
ins
pop
jne
in
nop
mov
inc
outs
ret
sub
mov
ins
call
mov
ss
aam
imul
push
aad
idiv
addr16
pop
into
out
outs
popf
outs
inc
mov
cmp
sub
retf
test
in
pushf
cmp
aas
mov
scas
or
les
adc
dec
pop
enter
ror
retf
or
cld
aam
pop
mov
mov
stos
xchg
xlat
in
jae
into
push
movs
shr
std
cmps
scas
jns
pop
pop
pop
mov
outs
out
lahf
xchg
aaa
iret
test
push
imul
retf
push
xchg
mov
cli
xchg
test
pop
enter
mov
mov
adc
stos
jg
repnz
or
fiadd
xchg
sar
mov
idiv
pop
mov
xor
mov
loopne
push
mov
pop
out
test
aas
jb
addr16
fist
push
pop
in
add
ror
in
ret
dec
jge
push
dec
in
adc
in
std
sahf
in
and
clc
imul
enter
mov
sbb
bound
imul
stos
inc
cdq
enter
(bad)
push
in
add
push
mov
mov
(bad)
jb
cmp
ja
mov
movs
inc
sahf
add
dec
lods
adc
cmp
push
jns
xor
test
mov
sub
clc
jne
retf
mov
mov
and
bound
or
fs
stc
pop
cli
and
jno
sahf
and
jge
xor
jecxz
mov
in
sub
dec
shl
outs
adc
cmp
adc
xlat
dec
add
push
xchg
jo
pop
push
pop
xor
hlt
xchg
inc
pop
rcr
call
xor
pop
jl
mov
aam
aam
push
pop
call
push
jnp
jp
xchg
xor
cld
jo
pop
test
push
mov
test
inc
jg
sub
fnstsw
mov
jnp
out
popa
xor
mov
jmp
aas
pop
cmp
cs
and
test
sar
imul
aam
out
stos
inc
sti
adc
cmp
add
push
in
cld
mov
arpl
or
adc
nop
inc
and
rep
rol
inc
jno
or
adc
adc
xor
dec
pop
push
call
adc
clc
cdq
mov
jge
adc
dec
fcomp
push
push
or
inc
cli
scas
nop
stos
pop
sub
pusha
cli
mov
and
jp
jecxz
lods
cmp
inc
cs
ror
cmp
xchg
dec
inc
aam
cli
pop
test
stos
in
mov
ret
dec
xor
mov
xor
sub
or
and
fdiv
mov
pop
outs
xor
mov
mov
dec
or
gs
xor
test
jmp
xchg
jb
jge
cmp
inc
or
aam
pop
in
idiv
and
shr
test
fild
dec
dec
push
retf
cld
push
icebp
xchg
mov
xor
cli
jbe
adc
jnp
stos
gs
mov
iret
(bad)
in
pop
movs
mov
sbb
mov
pop
jb
lahf
and
idiv
add
out
movs
popf
sbb
loope
xchg
xchg
unpcklps
in
xchg
push
mov
cli
sbb
rol
cmp
outs
aam
xchg
addr16
add
add
pop
fwait
icebp
cmp
aad
lds
cmp
cmp
cmps
js
cmps
adc
xor
popa
add
adc
stos
xchg
jl
mov
daa
movs
add
call
jb
pop
pop
sti
push
lahf
push
fwait
jmp
jo
pop
int
div
dec
xlat
mov
mov
sub
push
push
push
mov
jae
jecxz
stos
push
jl
gs
xlat
cmp
add
sahf
jns
test
and
cmc
fidiv
das
popa
stos
push
fnstenv
xchg
add
xor
clc
jmp
or
jnp
(bad)
test
fdivr
sbb
dec
jbe
pop
push
outs
mov
inc
sbb
jb
fld
mov
xor
jnp
add
sbb
(bad)
stos
mov
cmp
add
retf
loope
in
adc
pop
dec
das
xor
jnp
rcl
(bad)
in
mov
iret
xchg
movs
and
(bad)
(bad)
sbb
rol
rcr
push
aaa
retf
scas
es
pop
psubsb
xlat
pop
hlt
into
mov
ds
mov
les
adc
adc
mov
xor
fmul
fcmove
retf
mov
(bad)
adc
dec
mov
inc
inc
(bad)
inc
sub
cmp
or
js
push
bound
add
ja
pop
das
dec
sbb
sub
mov
jle
cmps
ret
rcl
mov
mov
test
lock
mov
pmullw
aaa
fild
mov
dec
xor
ins
inc
and
je
stos
xor
push
adc
stc
jg
mov
daa
pushf
aas
popa
add
out
hlt
or
je
cmps
push
xchg
xchg
xchg
sub
push
test
inc
mov
or
jmp
sub
jne
jmp
jp
cld
jns
or
xor
ins
xchg
icebp
shl
(bad)
in
outs
jno
fsubr
sub
pop
mov
mov
sbb
dec
mul
test
pop
movs
jmp
and
idiv
enter
sbb
daa
mov
je
xchg
(bad)
jmp
aam
sahf
pop
cld
jg
push
cmps
and
jp
test
idiv
adc
fld
pop
loop
xor
push
sub
cmp
cmps
pusha
(bad)
and
fisubr
sahf
cmp
fistp
cmp
push
adc
ror
and
cmp
stos
popf
sbb
dec
mov
fld
cmp
jnp
sbb
retf
mov
inc
iret
sub
xchg
daa
fs
fimul
xor
in
fcmovu
nop
jns
cmp
sahf
scas
out
or
push
leave
or
mov
into
cmps
adc
fwait
mov
cmps
cmp
sbb
sbb
(bad)
cli
pushf
inc
xchg
jp
ja
xor
sub
call
daa
sti
jmp
call
push
cmp
pop
push
in
jle
and
aas
add
lods
shl
mov
jl
leave
lds
pop
clc
xchg
les
pop
out
lahf
cmp
cmp
cmp
push
out
sahf
lsl
sub
out
jg
sahf
or
dec
mov
dec
pop
aas
rol
sub
dec
in
mov
mov
test
fisttp
inc
mov
pop
cmps
stc
cmp
sahf
aas
sar
js
mov
imul
daa
call
jb
test
sub
outs
adc
(bad)
cmp
(bad)
cmps
pusha
xchg
add
jne
addr16
mov
and
in
mov
dec
sbb
loop
into
mov
into
aaa
ret
mov
xchg
lods
sub
nop
into
stos
jo
sbb
fdivrp
add
int
xor
paddb
dec
mov
push
xchg
mov
ss
xor
sub
call
scas
lock
enter
jl
sub
fsubrp
lahf
loope
stos
and
xlat
repnz
test
xor
outs
pop
sub
mov
cmp
arpl
icebp
outs
jns
sub
inc
mov
jmp
ss
adc
repnz
dec
fmul
mov
aad
cmps
push
hlt
outs
js
sub
push
pop
add
pop
xchg
jmp
sub
xor
mov
dec
popf
lock
in
dec
test
inc
pop
sub
shl
test
cmps
inc
cmp
ret
lods
push
cmps
jo
out
imul
std
outs
sub
sub
lods
ins
imul
add
push
in
jnp
jns
pop
or
mov
sub
shl
add
pushf
jge
sbb
pop
lods
mov
jbe
dec
std
pop
stos
pusha
int
(bad)
ja
daa
xchg
jbe
outs
movs
xchg
imul
sbb
pop
cmp
xchg
xchg
ror
mov
cld
and
and
mov
(bad)
repz
and
mov
inc
outs
(bad)
fcom
(bad)
aaa
inc
sub
out
xor
mov
mov
jle
sar
sbb
inc
retf
mov
test
ret
jmp
(bad)
push
jb
aad
add
push
iret
ret
jnp
push
pop
fdiv
ins
push
mov
adc
stc
lahf
ret
jne
call
sub
jmp
pop
les
adc
mov
cdq
test
mov
outs
mov
jg
adc
and
xor
nop
inc
movs
scas
out
jno
sub
inc
pop
jl
jae
sub
nop
lods
imul
in
lock
add
mov
(bad)
out
call
push
loope
call
fwait
call
in
shl
js
loopne
push
mov
cmps
sub
add
loopne
inc
cli
call
push
mov
xor
sbb
xor
mov
imul
mov
adc
sbb
mov
adc
stos
pop
retfw
sub
pop
mov
in
das
pop
js
dec
dec
fimul
inc
ins
aaa
outs
adc
lods
mov
sub
repz
push
and
and
adc
jne
sub
int3
icebp
xchg
enter
test
lock
dec
cmps
mov
cmp
fild
aas
in
retf
add
int3
or
dec
or
push
jl
fmul
dec
aam
dec
lea
ja
fs
xor
sub
popa
xchg
push
hlt
psadbw
jmp
outs
retf
and
inc
sbb
stos
dec
clc
push
lds
lds
sbb
scas
push
dec
pusha
or
push
outs
cmp
mov
add
mov
std
repz
mov
xor
in
hlt
gs
jmp
aas
add
leave
loope
inc
sbb
sahf
cmp
cs
jecxz
loop
scas
sub
shl
sbb
mov
call
sbb
repnz
test
mov
mov
out
sub
sahf
pushf
pop
jmp
shl
dec
test
add
and
push
test
sar
into
ins
pop
aam
push
push
(bad)
test
lahf
outs
pop
call
pop
ret
in
sbb
adc
sub
sub
add
fistp
sbb
inc
cmc
inc
inc
(bad)
je
das
pusha
les
inc
imul
into
mov
cmp
pop
ret
fsubr
mov
stos
stos
jmp
movs
mov
jmp
dec
pop
(bad)
sbb
sub
movntps
jle
mov
call
push
mov
jg
xlat
sbb
into
dec
mov
scas
push
jae
xchg
gs
shl
ja
psllw
arpl
daa
or
fisttp
fyl2xp1
out
jmp
add
cmps
push
mov
shl
add
sbb
stos
xor
out
out
scas
mov
mov
sub
shl
int
lea
inc
repz
and
jle
add
sbb
mov
pop
fild
loope
ror
adc
inc
cdq
jmp
int
cmps
xchg
enter
outs
dec
movs
stc
xor
add
sbb
test
or
sbb
push
or
mov
leave
gs
adc
adc
stos
fmul
xchg
leave
jl
mov
stos
mov
dec
xchg
sbb
sbb
lahf
jecxz
sub
dec
add
cli
push
jl
stc
mov
inc
jbe
inc
jp
js
shl
sbb
jne
jge
xchg
das
xchg
cmc
jmp
add
and
mov
jge
cld
inc
and
mov
xchg
out
test
dec
cmp
sar
xlat
popa
mov
rcr
(bad)
and
enter
mov
jne
inc
sub
mov
add
and
ret
adc
hlt
(bad)
enter
jne
push
pop
adc
pushf
xor
popf
and
imul
rcr
(bad)
lahf
std
jmp
sub
cs
movs
in
cmc
cmp
rcr
xchg
movs
push
mov
ins
sbb
std
mov
test
jg
int3
or
ffreep
mov
mul
sbb
dec
out
adc
std
add
mov
arpl
mov
(bad)
jmp
shl
dec
or
push
addr16
sbb
pop
push
mov
sub
inc
pop
fcomi
outs
xor
pushf
retf
pop
dec
adc
xor
and
rol
push
repnz
stos
lahf
test
into
push
inc
pop
movs
dec
es
in
xor
xchg
mov
mov
xchg
adc
repz
xchg
xor
sub
(bad)
ficomp
cdq
out
inc
(bad)
arpl
lea
cmps
jg
ret
cmp
std
sti
loop
in
sti
inc
mov
bound
outs
ror
rol
les
icebp
stos
push
lea
and
inc
or
repz
arpl
ins
int3
push
mov
ror
jp
and
imul
jle
sub
rcl
jmp
rcl
pop
push
mov
fdivr
int
jecxz
xor
in
pop
loop
outs
std
or
push
ffree
js
pop
sahf
fst
sbb
nop
inc
gs
cmp
data16
stos
(bad)
es
mov
(bad)
scas
pop
sub
add
jmp
xor
out
ret
add
daa
xchg
daa
jo
xchg
xor
div
mov
cmp
pop
push
fsub
test
push
add
mov
fild
dec
lea
dec
mov
fdiv
cli
and
sahf
push
and
sahf
or
pop
sti
movs
jnp
push
and
rcl
jp
and
and
or
sub
shl
xor
addr16
aas
jns
xchg
sbb
loopne
and
ds
sub
out
xchg
out
das
sub
xor
pop
add
add
jp
xlat
nop
shl
sbb
stc
add
mov
imul
out
pop
shl
mov
adc
scas
lds
jo
clc
inc
cmc
cmp
push
xor
push
jb
(bad)
xchg
arpl
inc
mov
mov
add
sub
adc
pop
mov
and
sub
pushf
fcom
repz
cmc
sub
add
shl
xchg
or
xchg
or
xchg
mov
cmps
invd
jmp
in
xor
mov
sbb
dec
add
add
call
fld
sub
push
sub
push
adc
mov
call
add
sbb
sub
dec
add
sub
nop
mov
out
adc
inc
jl
int3
jmp
push
xor
fneni(8087
mov
repz
and
push
cmp
pop
xchg
pop
aaa
dec
mov
mov
lods
test
pop
fild
repnz
gs
lock
ds
jge
repz
push
mov
mov
test
(bad)
adc
outs
dec
test
sub
mov
fwait
jne
cmps
lock
loope
pcmpgtw
jmp
and
mov
fs
pop
cmp
mov
inc
push
mov
push
ret
xor
add
inc
in
inc
(bad)
daa
push
mov
or
jo
(bad)
int
cs
iret
ds
fmul
ds
sbb
pop
push
nop
adc
aad
xchg
fcmovnbe
cmps
pop
adc
repz
xchg
adc
(bad)
das
out
xchg
push
inc
mov
sub
or
mov
repz
sub
orps
jmp
js
or
adc
retf
pop
call
outs
jecxz
pop
and
sbb
fld
aaa
popf
push
xchg
mov
sbb
add
mov
add
mov
mov
scas
sbb
push
and
ins
xor
push
push
clc
call
xor
(bad)
or
stc
in
lods
push
mov
mov
call
cmp
(bad)
fwait
or
cwde
cmps
in
aas
push
enter
adc
out
inc
xor
or
sub
div
div
xchg
and
out
aad
adc
fisttp
inc
adc
sbb
cmp
mov
jae
dec
outs
push
cmp
fcom
mov
mov
mov
adc
sub
and
push
scas
dec
or
scas
stos
daa
test
add
inc
sub
xchg
jmp
(bad)
in
aam
add
mov
inc
fstp
jmp
jl
mov
jmp
or
push
(bad)
leave
ss
adc
mov
inc
mov
fisub
push
fimul
lahf
rcl
jns
out
out
add
loop
sub
hlt
push
arpl
movlps
cs
add
pop
cs
les
push
in
xchg
mov
mov
fs
push
add
daa
push
out
inc
mov
rcr
jp
outs
cdq
sub
mov
ins
je
lahf
rcl
retf
cmp
sbb
test
dec
movs
jo
cmps
idiv
(bad)
mov
inc
movs
(bad)
mov
(bad)
jns
imul
jl
sub
or
mov
mov
mov
outs
mov
sbb
push
jecxz
popf
pop
stos
jge
adc
mov
pushf
mov
jl
fsubr
and
bnd
mov
mov
and
or
stc
scas
test
loope
sbb
jae
fnstenv
scas
gs
les
xchg
aad
shl
pop
das
sub
out
nop
and
and
arpl
pop
dec
enter
outs
cwde
movs
inc
pop
or
push
mov
inc
jbe
dec
mov
ja
sub
mov
dec
mov
xor
jbe
rcr
mov
jp
outs
or
aad
add
ret
scas
ror
mov
outs
jl
hlt
loop
fnstsw
pop
sub
push
enter
or
adc
xor
in
mov
pop
repnz
pop
mov
pusha
std
sahf
or
mov
in
push
scas
data16
push
sbb
add
fld
fild
(bad)
jge
xchg
cmp
out
mov
jne
ins
rcl
out
pop
cmps
sbb
les
neg
test
out
pop
push
cmp
xchg
call
ins
lea
mov
add
cs
sar
shl
lods
das
or
fsub
fdivr
into
stos
inc
xchg
pop
add
pop
pop
pushf
shl
mov
out
lds
rcr
push
fwait
xchg
les
sub
dec
loopne
ds
sbb
push
inc
popf
stos
jge
inc
cwde
xchg
pop
(bad)
repz
or
clc
addr16
cli
inc
outs
pop
jmp
or
(bad)
adc
mov
out
pop
les
jo
sub
cmps
getsec
nop
sbb
icebp
call
popa
inc
add
push
cmp
(bad)
sub
mov
sbb
mov
sbb
mov
stos
sbb
add
jp
repnz
daa
xlat
test
sub
cmc
pop
inc
ffree
test
out
mov
pop
sbb
popa
mov
and
lahf
aas
outs
mov
shl
fbld
pop
sbb
jae
xor
pop
ds
jg
inc
pop
lea
cmp
aas
cmp
mov
call
retf
dec
mov
fcmovu
sub
nop
push
add
xchg
xor
inc
sbb
pop
xor
loop
clc
sbb
inc
sbb
pop
sub
aas
and
jp
jmp
mov
test
out
outs
jno
loop
add
add
imul
jge
nop
(bad)
adc
ja
aas
pop
dec
out
ins
ror
out
sub
cwde
adc
jne
mov
shl
leave
jg
in
ds
and
fdivr
mov
call
ds
cmp
mov
xchg
push
fidivr
push
sbb
inc
mov
xchg
or
in
cld
daa
dec
sub
inc
xor
and
pop
dec
add
xchg
or
cli
fist
jl
and
inc
jg
xor
lods
in
xor
push
mov
int
pop
push
xchg
xlat
into
cs
pop
pop
sbb
stc
mov
cmc
outs
popa
iret
rcr
push
pop
pushf
and
mov
jae
out
lahf
ins
arpl
movs
inc
xchg
mov
(bad)
leave
loopne
jmp
sbb
ret
in
cld
scas
jl
mov
mov
xor
sub
push
mov
lds
rcr
ja
ins
mov
mov
mov
fnstcw
(bad)
dec
or
(bad)
sbb
aad
add
es
add
out
test
mov
add
cwde
shr
or
std
mov
fs
jp
dec
cmp
xchg
mov
fiadd
dec
inc
cdq
push
mov
sti
jmp
mov
mov
mov
cmps
retf
mov
outs
fldenv
or
pop
xlat
and
addr16
test
xor
and
dec
mov
enter
sbb
test
int3
mov
jecxz
inc
sbb
jne
clc
push
fidiv
in
or
xchg
jp
bnd
clc
push
dec
clc
test
mov
dec
je
pop
pop
cwde
sbb
and
cmp
inc
mov
xchg
leave
imul
idiv
std
cdq
sbb
inc
push
out
and
adc
test
shr
ja
add
jne
scas
ss
ins
mov
pop
or
cmp
mov
loop
ret
in
(bad)
pop
mov
cmps
sub
mov
fmul
sub
mov
mov
sahf
sub
aas
jmp
int
pop
int3
mov
pop
ss
inc
fsub
aad
jmp
test
sbb
(bad)
mov
sbb
push
mov
mov
lods
fidiv
les
aaa
jo
lahf
push
jo
push
push
xor
pop
adc
in
mov
sub
das
jae
imul
stc
test
rcr
jmp
inc
mov
fst
adc
movs
xor
add
int3
jp
(bad)
xchg
jmp
xchg
dec
or
add
jg
test
ficom
mov
shl
or
mov
and
mov
xchg
dec
addr16
fiadd
sub
sub
repz
jo
shl
movs
jnp
pop
addr16
push
imul
rcl
dec
into
cmp
cmp
inc
push
push
int3
or
inc
loop
ss
jp
nop
je
inc
stc
dec
cmc
jno
js
fsubr
test
mov
push
push
aam
jno
fistp
movs
jno
in
nop
test
aaa
(bad)
les
scas
imul
xchg
fidivr
jmp
sub
sti
or
bound
push
dec
mov
inc
xchg
xchg
inc
mov
mov
rcl
pop
cdq
jo
(bad)
(bad)
xchg
push
and
sub
push
(bad)
jae
inc
dec
pop
test
mov
push
inc
mov
cmp
popa
cdq
and
dec
(bad)
out
bound
inc
sti
inc
retf
adc
sub
or
ja
add
mov
loopne
loope
sub
or
mov
cdq
mov
(bad)
into
js
sbb
and
fs
rcr
mov
mov
jmp
ja
fnstsw
inc
mov
add
popa
pop
out
shr
in
mov
mov
inc
repz
sahf
jp
daa
mov
aad
fs
or
in
xadd
cs
xor
call
dec
stos
call
xor
mov
es
loopne
or
std
int3
loopne
movs
mov
inc
mov
(bad)
or
mov
clc
mov
push
(bad)
cli
mov
dec
popf
outs
loop
or
adc
stos
add
jle
cmps
sar
xor
mov
pop
jbe
pop
ret
dec
pop
(bad)
lahf
sub
sbb
leave
out
xchg
std
into
sbb
jecxz
add
mov
push
jmp
xor
ins
xchg
adc
sbb
cli
and
inc
popa
clc
sbb
sbb
xchg
add
ins
loope
pushf
xchg
xchg
leave
nop
cmps
mov
mov
pop
loopne
popf
adc
jmp
jnp
adc
xor
fs
or
(bad)
adc
inc
fstp
or
mov
gs
fcmovne
shld
fidivr
js
mov
in
(bad)
int3
jle
aad
push
sbb
dec
shr
mov
cmps
pop
mov
cwde
or
in
pusha
out
dec
ds
movs
inc
retf
stc
and
sti
loopne
jmp
popa
adc
loopne
cmp
push
sub
push
inc
add
push
and
push
ret
loope
inc
scas
fdiv
sub
xor
cmc
pop
outs
rcl
(bad)
and
and
in
inc
pop
cs
in
test
sar
push
cmp
inc
cmp
stc
inc
jnp
icebp
movs
cli
mov
out
pop
aad
mov
sub
imul
test
test
(bad)
jmp
push
jmp
retfw
mov
jne
adc
jb
or
bound
jmp
fwait
pop
mov
retf
int
pop
xchg
outs
nop
mov
test
xchg
je
sahf
sbb
mov
jmp
fcos
push
adc
sub
pusha
arpl
add
loope
cdq
jle
iret
(bad)
pop
cdq
mov
fwait
dec
ins
xor
inc
enter
js
mov
aad
pop
cs
pop
cld
inc
jge
ins
ds
or
push
push
in
cmp
sbb
cdq
dec
pop
shl
mov
repnz
rcl
mov
sti
retf
push
int
dec
outs
popa
sub
bound
cmp
mov
mov
inc
jb
sub
sub
dec
icebp
sub
xchg
loopne
or
or
xor
call
pop
or
mov
push
out
jae
mov
fild
pop
int3
or
jb
or
push
push
dec
popf
stc
mov
mov
clc
shl
es
mov
in
mov
ins
pop
fisub
add
mov
lds
lods
into
sub
out
add
in
mov
or
jmp
inc
popf
shl
repz
inc
sti
out
sub
outs
mov
mov
(bad)
cmp
loop
btc
aad
xor
mov
push
mov
cli
div
popa
scas
ss
jecxz
mov
inc
leave
inc
push
cmp
enter
cmp
jnp
pop
je
pushf
pop
jmp
sbb
fnsave
or
cmp
or
aaa
test
movs
push
mov
dec
inc
mov
jle
int3
mov
test
cld
add
mov
rcr
jo
and
mov
adc
pop
stos
cmc
test
loope
test
cdq
inc
mov
int3
add
jge
stos
xor
jmp
int
nop
sbb
push
fidiv
xchg
or
pop
xlat
outs
or
adc
sbb
repz
sbb
jmp
aam
xchg
icebp
pop
stos
jl
call
je
and
lahf
test
mov
push
sti
retf
mov
std
fld
sbb
out
mov
ret
xchg
add
push
jns
lods
(bad)
imul
pop
mov
leave
pop
mov
mov
sbb
xor
icebp
lahf
dec
pusha
bound
dec
jecxz
push
jle
jo
gs
xor
loop
call
pop
nop
es
push
arpl
mov
push
dec
push
pop
ins
ins
cli
outs
add
jle
sahf
mov
sbb
mov
inc
adc
into
xchg
mov
xor
fstp
adc
loopne
pop
stos
xchg
fdiv
mov
cmp
push
and
add
fxch
sbb
sub
add
pop
mov
scas
imul
das
adc
loopne
data16
xlat
fwait
iret
cmp
fild
inc
in
xchg
dec
cmp
sub
rol
lods
inc
aam
mov
adc
int
adc
sar
in
stos
sub
push
inc
jo
xchg
mov
scas
scas
dec
sub
inc
adc
mov
mov
push
int
clc
sbb
push
pop
inc
pusha
lock
jmp
gs
inc
aas
inc
jo
lods
clc
push
or
inc
cmp
jbe
mov
mov
sbb
mov
out
mov
mov
mov
cld
xor
and
sti
(bad)
and
or
jno
adc
test
and
shl
xchg
or
call
xchg
mov
movs
and
sub
ins
xchg
in
push
std
sub
and
pop
mov
adc
jno
cld
popf
mov
cwde
cmp
lds
jl
das
mov
xor
mov
jp
dec
mov
add
fs
xlat
es
pop
and
pop
mov
dec
cli
jno
pop
inc
repnz
aas
jp
in
xchg
adc
cmp
adc
retf
pop
sbb
xchg
push
and
adc
dec
iret
xchg
add
dec
jne
jnp
(bad)
test
aam
movs
xor
aad
bound
fs
mov
ret
clc
xchg
in
xchg
(bad)
jb
pushfw
sub
leave
or
inc
fsub
iret
push
daa
mov
xor
ins
mov
mov
add
mov
or
lods
and
jns
xchg
aad
lahf
lds
xchg
mov
hlt
imul
or
mov
cwde
jecxz
cmp
ret
je
sbb
mov
jne
scas
and
in
push
mov
sub
and
push
pop
mov
stos
sbb
add
mov
jae
sahf
std
mov
pop
test
jg
jno
xchg
data16
pop
imul
dec
enter
jne
cmp
add
mov
clc
mov
sub
iret
(bad)
push
call
ds
adc
push
xchg
fld
mov
mov
sbb
les
shr
sti
cmp
ret
or
popf
xchg
add
icebp
sub
loopne
xor
adc
loope
xchg
scas
ror
cdq
out
inc
aad
or
shl
cmp
adc
popf
into
aad
imul
sbb
mov
test
mov
push
add
nop
popa
fs
test
cli
mov
sbb
or
movs
jecxz
imul
int3
fninit
xchg
sub
mov
add
outs
push
test
or
push
stc
dec
ror
popf
mov
mov
fwait
aad
push
(bad)
js
(bad)
sahf
fcmovnb
test
dec
test
inc
push
ficomp
aaa
fsubr
add
sbb
(bad)
shr
xchg
out
mov
iret
pop
ror
cdq
sub
mov
push
iret
stc
or
inc
pop
icebp
(bad)
mov
xchg
cmp
sbb
xchg
xchg
xchg
jbe
push
mov
lods
pop
adc
pop
das
lods
fld
mov
nop
mov
in
and
mov
aad
cmp
scas
daa
adc
aam
mov
stos
retf
out
adc
(bad)
cmp
cmp
or
pop
push
ins
cmp
(bad)
fidiv
adc
or
out
les
pop
int3
lea
inc
repz
adc
daa
ror
mov
shl
mov
pop
cdq
push
push
mov
lea
sbb
popf
push
ret
adc
in
inc
pop
mov
sbb
(bad)
inc
xor
push
pop
mov
test
xchg
sub
lds
ds
jle
jecxz
xchg
sti
push
push
jecxz
out
pop
fisubr
push
test
push
int3
lea
and
push
mov
lea
push
std
into
fidivr
shl
popf
aam
scas
add
out
and
jne
add
or
jecxz
mov
cmp
(bad)
lds
xchg
jns
retf
push
cdq
xlat
fwait
pushf
sbb
popf
stc
xor
loope
std
push
rcl
sbb
pop
dec
xlat
repz
cmp
mov
test
mov
stos
outs
es
leave
mov
sub
mov
mov
xor
dec
fwait
xor
in
xlat
jmp
popa
add
xchg
lock
sub
mov
retf
cld
leave
ret
jbe
fs
xor
fmul
daa
les
call
dec
or
outs
xor
call
imul
push
loop
add
adc
xchg
lds
mov
jb
sbb
lahf
call
mov
xlat
ins
aad
or
pop
jb
nop
rol
add
push
pop
cs
jb
jmp
and
sbb
jle
and
xor
sbb
sub
inc
mov
inc
fs
lods
add
cwde
(bad)
mov
mov
bound
dec
sub
or
mov
sub
mov
xchg
fs
mov
dec
test
and
fadd
xor
je
push
shl
xor
mov
dec
push
clc
int
cs
cdq
dec
mov
jmp
push
and
and
aaa
sub
js
cmp
int
mov
out
ja
ja
push
out
scas
xlat
lods
or
ret
jge
push
sti
aas
pop
push
xchg
int
in
jae
test
(bad)
pop
adc
cli
cmp
call
mov
bound
push
adc
loopne
test
add
push
sub
cmp
bound
arpl
mov
xchg
push
xchg
adc
sahf
fcmovne
test
jb
push
retf
gs
out
aaa
mov
inc
adc
dec
or
xchg
out
stos
cwde
adc
mov
aam
les
xchg
inc
inc
(bad)
fnstsw
mov
aas
leave
fisttp
jno
stos
ret
mov
jl
stos
cmp
and
mov
mov
pushf
inc
sbb
mov
or
adc
enter
test
clc
cmp
adc
mov
sti
add
mov
je
cdq
aad
jae
sub
mov
push
(bad)
repnz
xchg
cmp
std
pop
push
jp
clc
mov
xchg
cwde
pop
ja
arpl
imul
retf
sbb
mov
das
inc
imul
mov
clc
cmp
stos
mov
cmps
mov
(bad)
add
out
movs
js
les
xor
pop
push
inc
es
add
inc
xor
jbe
cmp
int3
mov
shr
into
sbb
in
in
inc
mov
mov
repnz
js
mov
fisub
or
test
jbe
add
xchg
out
cmp
xor
mov
int3
push
aad
sub
push
mov
scas
rcl
jne
inc
rcr
inc
inc
jl
push
shl
xlat
jg
loop
jo
xchg
mov
sbb
mov
jne
mov
pop
cmp
or
sbb
mov
(bad)
imul
jnp
movs
fcom
inc
(bad)
adc
push
call
sub
scas
dec
addr16
imul
(bad)
cmp
or
out
movs
(bad)
(bad)
cmp
or
jge
fadd
test
out
mov
push
mov
into
and
cli
jp
lods
sbb
xchg
es
push
jnp
xchg
inc
sbb
pop
jmp
call
les
repz
sub
in
(bad)
pusha
(bad)
lock
mov
test
sbb
inc
imul
out
scas
fwait
ror
or
pop
or
enter
scas
stc
sti
cmp
aad
sub
dec
arpl
movs
sub
mov
sbb
inc
pop
sbb
adc
and
adc
add
popf
xchg
lock
rol
mov
or
ficomp
sub
push
pushf
jecxz
loope
in
push
dec
cmp
ja
pusha
mov
in
add
in
pop
cs
imul
adc
dec
pextrw
mov
or
aad
jge
pop
repz
call
div
add
inc
jl
jae
pop
daa
cli
push
(bad)
(bad)
cmp
fsubr
mov
imul
int
mov
push
enter
inc
dec
sbb
(bad)
aad
xchg
shr
cdq
sub
test
xor
pop
dec
add
out
mov
pusha
mov
dec
add
mov
sahf
jbe
sbb
push
nop
and
int
std
test
mov
mov
sbb
jecxz
popa
mov
xchg
mov
inc
nop
push
iret
and
pop
ror
fcomp
xchg
inc
stos
cmps
arpl
push
loop
sbb
fadd
mov
(bad)
in
ins
xor
mov
push
sbb
in
cmp
aam
addr16
jae
xor
in
inc
mov
mov
adc
sub
lods
daa
fwait
push
push
mov
pop
out
fbstp
cmp
xor
outs
loop
out
mov
icebp
ins
push
xor
(bad)
push
loope
iret
xchg
ins
push
sbb
nop
fnsave
test
xchg
sbb
fiadd
sub
out
out
sbb
pop
js
ffreep
inc
xchg
aad
div
push
test
in
mov
loop
fcom
xchg
push
and
fist
lods
jge
dec
test
jle
fs
sub
cli
ror
mov
iret
hlt
(bad)
fld
into
aas
nop
fwait
lods
loop
add
xchg
in
adc
push
cmp
mov
adc
into
loope
pushf
mov
mov
jbe
cmp
loopne
cmps
pusha
jge
imul
rol
das
jae
out
mov
(bad)
loopne
js
fiadd
dec
mov
add
xchg
in
inc
ja
mov
pop
pop
fst
es
inc
mov
pop
(bad)
je
neg
repz
xchg
das
cmc
sbb
mov
or
adc
(bad)
std
call
loope
mov
or
jb
push
sbb
sub
xor
inc
les
sub
push
push
imul
push
or
js
movs
push
mov
aam
call
adc
and
es
lahf
mov
xchg
adc
push
xchg
and
retf
call
outs
(bad)
mov
clc
ins
in
lods
sar
leave
cmps
mov
stos
pop
dec
loope
pushf
addr16
sti
push
leave
adc
jge
push
mov
in
lea
ficomp
dec
mov
xchg
imul
in
xor
push
mov
shr
mov
xor
jnp
adc
je
ins
cmps
outs
add
outs
push
rol
and
mov
popf
inc
add
sbb
pop
mov
pushf
cmp
rcl
push
(bad)
xor
data16
xchg
inc
rol
aam
add
mov
idiv
dec
mov
sub
xor
mov
in
mov
inc
cli
jmp
ins
mov
push
cmp
xchg
pop
adc
repz
popf
fcomi
mov
outs
pop
cmp
mov
ja
sub
dec
dec
add
ja
cmps
pop
or
das
or
and
imul
pop
daa
inc
jg
das
in
push
cmc
call
mov
daa
retf
in
or
fs
push
pop
xchg
ret
pushf
inc
fsub
or
enter
mov
lods
mov
call
fnstcw
mov
pop
jecxz
(bad)
std
jns
lea
sub
sbb
outs
xchg
push
adc
push
cwde
push
pop
sbb
call
scas
sub
xchg
scas
push
adc
push
fcmovnbe
push
dec
mov
hlt
add
push
push
out
jae
lock
push
imul
hlt
into
push
push
inc
retf
fld
int
sti
jge
mov
(bad)
fsub
mov
adc
pusha
and
ja
arpl
stc
mov
push
idiv
sub
jne
inc
pusha
in
aaa
(bad)
ds
pcmpgtb
(bad)
mov
fs
ins
cli
test
adc
fs
(bad)
dec
pushf
inc
or
sbb
xchg
shl
add
fisttp
pop
stos
cmp
fdiv
xchg
test
ss
inc
mov
push
dec
mov
lahf
jg
jb
pop
fild
outs
mov
or
inc
nop
adc
kmovb
leave
pop
mov
dec
ins
dec
outs
jb
int3
shl
test
jae
dec
fdivr
pop
cwde
pusha
imul
xchg
sbb
icebp
cwde
clc
add
mov
test
mov
(bad)
mov
sub
xor
mov
mov
ins
mov
mul
or
cmp
inc
pop
or
push
push
xchg
call
imul
aad
and
lahf
stos
dec
mov
enter
sbb
and
inc
stos
ja
add
mov
inc
fistp
pop
push
jg
sub
(bad)
push
lods
frstor
jae
mov
cmps
adc
sbb
xchg
enter
and
sbb
ret
inc
xor
mov
or
lods
xor
ja
push
test
lods
daa
fistp
stos
(bad)
jbe
add
dec
and
mov
sti
out
nop
dec
pop
adc
pop
or
cmp
js
dec
ror
adc
xor
cmp
das
fadd
stos
xor
out
sbb
mov
das
test
xor
(bad)
push
jmp
popf
sub
shl
fisttp
cdq
pop
gs
xor
fld
mov
leave
out
pop
push
inc
das
mov
cmp
scas
mov
sbb
add
hlt
imul
mov
or
not
outs
pop
popa
fstp
inc
pop
inc
pop
in
ret
ss
gs
fmul
or
fs
stos
xor
jge
out
add
rcl
push
xor
mov
fwait
pop
adc
inc
add
or
call
movs
and
int3
or
inc
addr16
push
loop
(bad)
dec
xchg
cdq
inc
fidiv
and
cli
push
jecxz
or
mov
fwait
enter
lea
cs
daa
jae
push
adc
arpl
inc
enter
fsub
mov
mov
aas
dec
rcl
inc
jl
(bad)
mov
(bad)
sub
movs
jecxz
mov
bound
mov
scas
inc
inc
lahf
les
dec
ds
push
shl
icebp
jns
pop
jmp
sub
cmp
pop
jae
lock
xor
arpl
in
icebp
push
add
push
daa
out
sbb
ficomp
loope
clc
ret
imul
add
dec
inc
icebp
stos
mov
outs
mov
mov
add
mov
mov
push
push
dec
stos
mov
push
cmc
xchg
mov
cmp
dec
xor
or
stos
sub
xor
enter
dec
sbb
cld
fdiv
pop
das
lahf
mov
or
cmp
and
push
cmp
ret
ret
popa
into
cmp
or
mov
repz
mov
aas
fxch
(bad)
in
cmps
mov
push
sahf
ins
inc
jle
dec
add
push
add
mov
and
cmp
lock
or
xor
loopne
push
das
popf
inc
adc
pop
push
int3
dec
in
inc
push
add
mov
and
dec
pop
stc
cwde
ja
ret
sub
out
stc
hlt
inc
pushf
mov
add
xor
add
div
adc
add
lods
pop
push
outs
xor
es
inc
dec
ret
je
bound
dec
xor
mov
scas
out
rcr
int3
sub
out
cmp
mov
mov
shl
push
adc
movs
or
xchg
clc
retf
push
sub
mov
push
gs
xchg
mov
fsubr
or
push
adc
iret
push
gs
ins
fdiv
addr16
sbb
movs
xor
adc
mov
imul
mov
sti
div
jmp
sub
mov
and
cmc
xor
push
ds
adc
ja
inc
test
into
test
mov
sti
push
stc
xor
pop
movs
mov
sbb
push
shr
jmp
rcr
or
dec
into
int3
xlat
pop
or
mov
mov
inc
loope
mov
imul
mov
dec
int
loopne
adc
ds
adc
(bad)
jmp
jne
or
adc
dec
(bad)
fdivr
jmp
outs
pop
mov
scas
push
mov
xchg
pusha
cld
bnd
data16
ret
(bad)
int
cmp
out
jnp
not
das
jmp
add
mov
arpl
or
cmc
jl
mov
dec
pop
and
fistp
pop
xchg
mov
sahf
cwde
adc
xor
ret
add
stc
and
xchg
xchg
movs
dec
loopne
sbb
mov
call
shr
jmp
loop
mul
movs
push
inc
pop
cmp
inc
ds
cdq
jge
dec
int3
push
shl
xchg
outs
push
shl
imul
test
push
(bad)
adc
or
pop
push
and
add
sub
ficom
push
shr
mov
aas
les
adc
dec
lock
sub
and
jmp
or
mov
push
imul
dec
jne
in
loop
repnz
ins
dec
jnp
sub
sbb
(bad)
xor
inc
data16
(bad)
or
es
rcl
and
push
push
mov
(bad)
mov
mov
int
jge
or
cmc
xor
mov
loope
lahf
(bad)
xchg
in
cmp
div
mov
ja
hlt
repnz
push
dec
add
dec
adc
mov
out
add
es
mov
xor
lahf
sbb
push
jo
xchg
fldl2e
push
add
mov
mov
xchg
xchg
jne
(bad)
sbb
fcom
push
push
cmp
xchg
jp
bound
std
push
pop
es
ficomp
pushf
fisubr
add
cdq
inc
inc
and
jo
mov
fisttp
adc
fdiv
sahf
outs
and
jmp
pop
jg
push
ret
mov
dec
pop
xchg
xchg
mov
push
out
sub
test
mov
call
retf
push
test
cmps
and
adc
stos
shr
xor
sar
cmp
daa
push
in
or
push
fs
stc
xor
or
dec
out
fst
iret
mov
pop
mov
pop
dec
push
cvtpi2ps
xor
loope
(bad)
cld
retf
retf
or
inc
pop
mov
xchg
outs
fucom
ins
adc
add
jmp
pop
push
arpl
pushf
jmp
xor
hlt
add
push
movs
mov
cs
sub
jl
xor
xchg
mov
fiadd
sbb
nop
es
repz
sbb
cmp
cmp
loope
inc
sar
dec
call
mov
in
push
int
push
sub
sar
aad
mov
mov
sahf
xor
(bad)
(bad)
aaa
cs
js
jb
mov
(bad)
dec
ins
pop
test
add
dec
ins
(bad)
jae
push
pop
xchg
rol
ucomiss
fldenv
xchg
dec
xchg
dec
dec
cmp
adc
dec
imul
je
adc
shl
and
pop
jne
iret
pop
pusha
retf
push
cli
and
push
mov
and
pushf
fisttp
lds
lahf
and
movs
push
out
mov
jmp
mov
inc
leave
sbb
(bad)
(bad)
adc
loopne
pop
cmp
jg
cmp
mov
sub
rcr
mov
sbb
fild
add
push
push
or
je
cmp
dec
mov
jmp
dec
stos
mov
dec
test
xchg
sbb
das
cmc
and
hlt
add
lods
and
sbb
mov
mov
sbb
push
lods
ds
add
and
adc
push
dec
fist
jno
inc
fwait
push
ret
or
push
cld
aad
cwde
ror
clc
xor
push
(bad)
cmc
das
jnp
(bad)
(bad)
fwait
jo
sbb
xor
js
xchg
(bad)
jae
es
int
cmp
xchg
outs
inc
(bad)
sti
ret
ins
test
xchg
or
xchg
xlat
pop
cld
aas
int3
cmp
lahf
jo
xor
loopne
mov
bound
fist
test
jmp
push
mov
jnp
mov
push
lahf
mov
adc
sub
mov
mov
jl
xchg
mov
cmps
enter
ss
sahf
into
push
mov
dec
cmp
add
dec
popa
(bad)
rcl
aas
or
push
adc
sub
xor
out
jmp
xchg
mov
mov
mov
sub
push
push
sub
mov
or
ret
and
iret
in
retf
mov
mov
and
or
push
mov
add
or
jle
jne
cmp
fnsave
shl
xchg
shl
mov
icebp
sbb
mov
dec
push
pop
mov
das
stos
inc
test
mov
arpl
nop
ss
inc
cld
call
out
in
outs
ret
jl
fdivr
adc
sub
dec
jne
call
jmp
jecxz
in
daa
mov
sbb
lea
push
xlat
and
pop
in
mul
push
out
call
jp
adc
xchg
inc
jmp
std
xchg
push
mov
jmp
mov
iret
xor
xrelease
xor
aas
test
sti
gs
jmp
xor
fild
ret
jg
dec
addr16
stos
loopne
adc
icebp
shl
(bad)
ret
inc
push
call
cs
jmp
mov
xchg
mov
mov
pusha
adc
clc
mov
stos
sub
hlt
pop
test
nop
or
sbb
cmp
call
jmp
and
inc
lahf
loop
xor
push
push
push
sahf
ss
ins
jb
cwde
popa
inc
mov
lahf
cmp
mov
inc
(bad)
sbb
cld
xchg
and
not
repz
lods
add
call
add
push
test
fsubr
fistp
inc
sub
dec
jecxz
and
dec
sub
inc
jns
or
jecxz
push
shl
pushw
xlat
popa
mov
cmps
jo
shr
jo
(bad)
(bad)
and
inc
mov
daa
imul
xchg
push
xchg
out
adc
lahf
cmp
dec
mov
popa
pop
and
jge
sbb
repz
cwde
sar
push
bound
test
out
fisttp
cdq
ds
scas
sub
pop
push
imul
mov
imul
adc
out
js
sbb
push
add
dec
add
scas
adc
das
pop
xor
mov
push
clc
std
pushf
mov
adc
push
inc
out
mov
mov
loopne
push
addr16
arpl
or
pop
xlat
xchg
push
out
pop
push
sbb
push
mov
sub
xor
dec
aas
into
les
imul
repz
mov
ret
leave
outs
shr
xchg
fldpi
and
cmp
mov
leave
(bad)
mov
test
pop
call
mov
and
or
dec
and
das
out
pop
ins
test
scas
push
addr16
push
mov
sub
dec
dec
inc
pop
jmp
sub
rcr
jo
or
mov
jl
rol
or
adc
ins
jp
pop
das
pop
mov
sub
xchg
adc
mov
push
or
in
in
adc
shr
add
sar
cli
fwait
xchg
jnp
(bad)
in
mov
lods
mov
ficom
cmc
xchg
scas
iret
retf
or
adc
sbb
inc
xor
xchg
repz
jne
dec
dec
stos
in
push
lods
sbb
mov
enter
push
add
cmp
arpl
mov
push
lods
imul
and
inc
int3
jmp
arpl
inc
pop
mov
out
sbb
cli
in
push
sbb
add
stc
popf
cmps
cmp
outs
aaa
dec
mov
inc
fdivr
push
outs
sahf
push
out
bound
pop
xor
test
or
xchg
inc
rcr
das
retf
push
shrd
arpl
enter
mov
fild
push
sub
clc
dec
or
and
add
je
sub
stos
out
inc
or
jo
imul
and
in
adc
icebp
add
sub
inc
loop
jno
mov
lods
fcmovnbe
and
cmp
movs
dec
out
test
push
clc
test
bound
mov
cmp
ins
scas
aad
cmp
ret
pop
jle
xchg
mov
sbb
ret
cmp
push
push
cmp
dec
inc
push
and
and
ins
sub
pop
fadd
test
mul
ret
arpl
out
cld
hlt
and
add
adc
out
jmp
idiv
int3
or
gs
xchg
ror
sbb
jb
lahf
pop
mov
jmp
cs
or
mov
xchg
pop
fwait
push
and
lea
rcr
push
outs
btr
sub
lahf
iret
adc
iret
inc
mov
retf
mov
repz
pop
fstp
stos
jne
adc
lahf
sub
sub
xor
xor
mov
jno
retf
push
inc
in
loop
dec
jb
aas
icebp
cwde
push
retf
mov
fcomp
cs
mov
mov
aas
xchg
push
retf
push
sbb
pop
mov
lods
jb
mov
xchg
icebp
lahf
mov
mov
jns
xor
les
jmp
fst
outs
lea
mov
daa
loop
mov
and
lods
jnp
or
ror
or
cwde
call
aaa
push
adc
rcl
ss
jno
cmps
lods
aaa
push
sahf
cmp
or
pop
test
popa
dec
in
in
mov
lods
std
push
addr16
mov
call
mov
pusha
std
cmp
inc
fidiv
pop
mov
jae
jp
cdq
or
addr16
aam
inc
loope
cwde
xor
or
in
sbb
xor
mov
pusha
mov
mov
pop
mov
nop
(bad)
sub
lock
dec
pminsw
sub
adc
jbe
in
sbb
ret
lahf
sub
sub
cmp
(bad)
xor
stc
mov
inc
mov
pop
pop
outs
aas
mov
push
(bad)
loope
pop
(bad)
leave
(bad)
mov
push
push
(bad)
imul
mov
xor
scas
mov
xchg
mov
fwait
jns
cmps
xchg
mov
mov
cmps
bound
jnp
fbstp
arpl
xlat
lea
ret
jno
outs
sbb
es
js
pop
mov
cdq
mov
or
jl
dec
cmps
lods
pop
mov
adc
dec
fld
div
rcr
jo
mov
cmp
jae
dec
fstp
je
shl
jo
aas
(bad)
imul
xchg
jno
push
int
stc
adc
xchg
jbe
fisubr
adc
inc
sub
dec
jmp
out
and
rcr
pop
pop
xchg
sub
(bad)
add
loop
cld
pop
cmp
and
mov
loop
mov
movs
add
pop
cs
es
mov
ss
loopne
xor
(bad)
aad
test
call
jl
(bad)
pop
xor
outs
shl
aad
push
cwde
scas
mov
pop
out
xchg
out
mov
add
mov
mov
(bad)
push
jne
cwde
xchg
clc
dec
and
mov
fisttp
xchg
ss
sub
sar
pop
icebp
dec
movs
cmps
xlat
fisttp
repz
aad
pop
pop
dec
imul
stos
sub
pop
sar
jnp
xor
test
mov
movs
data16
push
pop
sub
cmp
ret
or
inc
(bad)
add
push
aam
dec
mov
mov
cmps
shr
push
aas
xchg
xchg
sub
xchg
xchg
jmp
adc
cmp
cmp
aas
lea
inc
adc
or
in
mov
arpl
ja
cs
bnd
xchg
push
add
jmp
(bad)
loop
cmp
inc
out
ss
out
out
pop
or
or
jbe
les
xchg
inc
xchg
xor
aad
jae
add
xchg
dec
dec
rcr
and
mov
ja
sbb
movs
push
sbb
les
add
cmp
call
retf
ss
inc
pop
mov
dec
imul
aad
gs
mov
adc
pop
adc
aas
sub
push
jo
push
or
add
enter
jge
push
mov
pop
int
ins
mov
xor
sbb
(bad)
loopne
mov
les
ret
jge
pop
cmp
sub
jnp
push
pop
bound
xchg
push
dec
daa
push
fstp
and
xor
je
mov
xchg
scas
arpl
mov
inc
mov
fdivr
push
clc
bound
dec
aad
cmp
pop
gs
loopne
clc
mov
cmp
cwd
fsub
sahf
xchg
cwde
push
inc
push
push
xor
xor
sub
(bad)
mov
dec
mov
adc
scas
push
push
jnp
pop
jne
(bad)
push
inc
pop
sub
aam
mov
mov
shl
sbb
aas
stc
not
push
inc
mov
sbb
or
fsqrt
mov
fstp
repz
cmp
aad
iret
mov
inc
xchg
outs
xchg
sub
lock
(bad)
jb
ja
call
push
aaa
into
mov
jg
add
sbb
add
arpl
inc
cld
ss
fidiv
imul
cmp
push
aaa
and
add
or
sbb
fld
xchg
sub
ja
(bad)
mov
(bad)
jae
das
mov
and
jmp
shl
or
aam
(bad)
or
imul
add
xchg
or
(bad)
mov
push
or
jg
repz
inc
and
adc
loopne
(bad)
xor
or
(bad)
mov
fwait
lds
cmp
and
lods
xchg
pop
dec
(bad)
sub
popa
jecxz
sbb
out
fidiv
cmps
scas
xor
or
sub
pop
xchg
fild
ins
std
adc
mov
dec
arpl
jg
mov
and
not
add
idiv
adc
int3
das
mov
pop
rcl
pop
xchg
or
pop
(bad)
mov
jo
sub
mov
les
and
adc
cwde
pop
out
sub
ja
repnz
pop
sub
adc
mov
dec
imul
dec
sbb
das
pushf
lods
pop
sbb
nop
test
add
cmp
in
test
iret
pop
jmp
ret
jmp
mov
dec
rol
sbb
xor
not
adc
loop
bound
cmps
les
jae
popf
test
test
ror
(bad)
ds
mov
add
(bad)
ffreep
outs
(bad)
cmp
xor
outs
sahf
fild
cmp
push
push
imul
pop
mov
call
jb
imul
retf
mov
repnz
into
fld
int3
(bad)
inc
add
jp
das
push
inc
pop
cdq
adc
jecxz
or
adc
jo
mov
leave
in
fs
shr
xchg
enter
xor
add
push
jge
mul
mov
cmps
imul
scas
cmps
jl
mov
and
shl
loop
(bad)
ins
mov
cmp
shl
addr16
lods
dec
loope
pop
pop
(bad)
test
jb
jb
hlt
out
add
pop
fldcw
and
mov
popa
idiv
sti
sti
call
and
jg
pop
pop
int3
mov
xlat
mov
mov
push
scas
adc
out
sbb
imul
mov
test
or
mov
and
aas
ret
and
outs
pop
pop
stos
mov
sbb
test
pop
jne
fnstcw
push
dec
xor
mov
adc
or
jmp
pop
pop
sbb
cmp
bswap
mov
inc
popa
daa
aas
out
inc
loop
adc
fimul
arpl
xchg
jge
add
mov
bound
cmp
xchg
push
sub
sub
add
dec
xor
adc
sub
aad
into
je
pop
(bad)
adc
sub
les
inc
(bad)
adc
mov
and
sahf
or
and
sbb
test
pop
aad
dec
fsubr
loopne
cmp
pop
and
in
add
inc
add
popf
cmp
jnp
mov
xchg
pop
aas
(bad)
xor
comiss
inc
js
popa
div
cmp
out
push
dec
adc
dec
in
movs
lods
pop
ror
push
outs
dec
xor
out
outs
sbb
adc
out
xchg
sub
test
add
loope
mov
mov
loop
out
into
dec
adc
jp
jle
jg
push
add
sub
rcr
ret
popf
(bad)
aas
ret
int3
xor
jg
hlt
sbb
adc
aas
and
in
cmp
lock
sbb
mov
loope
add
dec
icebp
push
sbb
cmp
ss
aam
xchg
ins
into
or
int
dec
push
jmp
int3
mov
cld
dec
add
pusha
mov
sub
lahf
xor
in
(bad)
cmp
ja
stc
call
cmps
mov
aaa
jmp
mov
cmps
(bad)
pop
lods
mov
jg
pop
dec
cmp
xor
aad
jne
or
or
xchg
aaa
inc
jle
loopne
sub
adc
xchg
jns
stos
(bad)
lock
outs
pop
iret
enter
ins
xchg
inc
cmp
mov
xor
mov
add
dec
and
xor
ins
out
sbb
jl
mov
mov
test
and
cmp
pop
xchg
bound
xchg
cmp
aas
nop
ja
cmc
outs
out
push
call
xor
outs
leave
jbe
pop
shr
call
pop
out
ins
popa
mov
les
es
add
dec
and
jmp
imul
lods
mov
jns
and
dec
(bad)
in
jecxz
add
inc
fadd
xor
inc
mov
in
xor
cmp
mov
aaa
or
inc
mov
test
packssdw
loop
jmp
push
stc
jl
cmp
aad
xchg
mov
jecxz
in
add
hlt
das
repz
data16
mov
dec
jge
not
stc
imul
gs
sbb
outs
pop
nop
out
push
mov
inc
ja
adc
int3
mov
repnz
mov
aam
xor
xor
jmp
inc
mov
cmp
mov
je
mov
mov
jb
ret
xchg
push
or
xor
mov
adc
bound
(bad)
push
pop
xor
cdq
inc
cs
popa
pop
mov
pushf
adc
jbe
mov
xor
add
pop
sbb
add
mov
sub
or
stos
sub
scas
pusha
push
aad
mov
lea
jp
test
out
inc
fwait
sbb
fwait
mov
and
mov
cmp
xlat
aam
xchg
and
mov
je
fistp
outs
(bad)
or
xchg
inc
dec
xchg
les
daa
add
cs
and
(bad)
sahf
adc
lock
jae
xor
lds
je
test
xor
out
rol
or
mov
xchg
mov
out
je
fxch
(bad)
daa
mov
out
jp
mov
test
add
test
aas
pusha
in
push
add
and
mov
gs
pop
sbb
imul
fs
sbb
movs
push
sbb
leave
add
jg
push
jg
jmp
scas
aaa
inc
sahf
mov
(bad)
push
mov
mov
data16
test
scas
xor
mov
add
mov
pop
out
orps
clc
neg
xchg
rcl
pop
call
mov
cmps
mov
bound
inc
jmp
dec
mov
out
lea
div
ss
fild
pop
sub
jbe
(bad)
retf
out
sub
inc
and
inc
and
retf
mov
repnz
xor
dec
jo
ds
push
pop
or
hlt
int
das
bnd
push
sti
lea
or
scas
in
movs
mov
xchg
dec
sar
pop
mov
sbb
call
movs
cs
test
xchg
mov
add
loope
lods
scas
dec
mov
sub
add
data16
sub
movs
dec
(bad)
cmp
xor
push
out
xor
shl
adc
data16
mov
adc
cwde
xor
cld
sbb
or
jecxz
je
pop
sti
clc
lods
push
xchg
jg
cmp
les
inc
(bad)
daa
sbb
push
ret
inc
outs
imul
rcl
in
push
(bad)
rcl
stc
push
jo
mov
mov
cmp
pop
adc
(bad)
fwait
cmp
fmul
dec
test
and
mov
mov
ret
fwait
js
(bad)
pop
mov
push
pushf
pop
ss
aaa
pushf
dec
mov
push
dec
dec
arpl
jle
js
xchg
aad
fs
push
in
push
std
inc
sub
jl
out
mov
gs
mov
retf
ins
and
cdq
and
je
cli
aas
xor
mov
imul
push
mov
pop
mov
or
dec
imul
dec
jmp
into
jge
xchg
sbb
lea
nop
adc
jbe
pop
fild
push
sbb
call
fdivr
dec
lock
jle
push
fist
pushf
jns
mov
cmp
push
push
enter
sub
outs
mov
push
push
je
int
cwde
ins
fwait
loop
outs
pop
mov
and
mov
arpl
cmp
call
add
shl
cmp
pop
adc
cdq
repz
sbb
jmp
pop
fcmovne
cdq
cmps
mov
mov
dec
xchg
hlt
clc
test
sbb
mov
pop
aas
adc
out
push
push
js
(bad)
cmp
or
nop
pop
imul
out
cmp
and
jnp
ins
loope
pop
sbb
lds
retf
dec
pop
sbb
js
jbe
cmp
jae
xor
aad
dec
adc
add
xor
out
ins
cmps
jbe
imul
pusha
clc
inc
lds
jae
int3
pop
in
stos
sbb
inc
pop
push
imul
bndstx
rcl
out
jl
mov
daa
cli
sub
sbb
sti
lods
fdivr
aaa
cdq
sbb
jb
loopne
or
jmp
cmp
sbb
xor
je
lds
sub
fild
cmp
xor
jl
push
movs
dec
and
cmp
push
sbb
adc
sub
inc
pop
mov
shl
pop
cwde
xchg
adc
sub
in
dec
ret
sbb
or
(bad)
in
sbb
mov
pushf
int
pop
or
jb
dec
(bad)
pushf
dec
imul
sbb
repz
push
mov
xor
shl
cld
repz
mov
clc
mov
pop
fwait
dec
mov
ret
or
add
fiadd
xchg
cmp
push
push
cmp
sbb
inc
movs
es
xchg
popa
jle
cmps
shl
dec
je
add
loope
(bad)
mov
ins
lods
adc
in
cmp
mov
bound
bound
imul
and
pop
enter
fbld
xor
js
das
int
ins
cmp
pop
loopne
scas
pop
dec
fwait
add
add
sub
and
out
mov
adc
call
neg
lea
dec
sbb
sar
in
jp
popf
jge
mov
mov
retf
mov
imul
scas
sahf
sub
and
jmp
pop
ins
inc
pop
adc
fcom
ins
std
adc
mov
pop
ret
in
rcr
mov
pop
int3
test
fwait
lock
shr
data16
out
pop
or
mov
(bad)
jo
jb
and
jle
pop
lds
jno
dec
pop
inc
or
pop
scas
sub
scas
nop
jl
push
pop
jmp
enter
nop
(bad)
leave
cmp
dec
or
rcl
call
repz
mov
pop
aam
push
test
stos
mov
add
add
sub
retf
aas
sbb
push
stos
sahf
into
sar
jmp
cmps
cdq
(bad)
mul
inc
xor
pop
xchg
dec
stc
neg
xchg
and
jo
das
mov
call
clc
cdq
ins
push
add
bound
dec
bound
iret
mov
fldcw
mov
jg
shl
out
scas
call
je
call
and
mov
enter
and
out
or
xor
push
dec
cmp
and
into
cmp
xor
mov
iret
fadd
push
repz
or
add
loope
jno
xchg
jno
mov
dec
mov
icebp
loopne
dec
sbb
mov
aad
adc
or
xchg
jecxz
push
jno
add
jg
in
es
lea
test
adc
mov
inc
jae
mov
or
into
mov
inc
add
mov
inc
fisub
jl
sbb
xchg
sub
repnz
(bad)
mov
(bad)
xchg
stc
lods
test
ret
inc
fldcw
pop
sbb
cmps
mov
inc
out
mov
jno
add
(bad)
adc
adc
cdq
xchg
xchg
mov
mov
cmp
mov
dec
cmps
cmps
jne
(bad)
arpl
jmp
outs
arpl
push
jmp
sub
dec
mov
inc
outs
imul
aas
mov
and
push
out
sbb
sahf
scas
jne
(bad)
mov
jecxz
repnz
lods
fimul
mov
cmp
in
sbb
sub
pop
sub
xchg
loope
bound
or
test
scas
xchg
dec
lahf
(bad)
sub
fs
fiadd
adc
loopne
mov
out
iret
test
mov
pop
mov
(bad)
mov
loope
rol
(bad)
xlat
xlat
dec
lods
adc
mov
inc
rol
retf
call
sbb
inc
push
stc
push
push
es
ins
popf
cli
nop
movs
(bad)
test
sub
outs
pusha
jmp
scas
imul
cld
fmul
loopne
pop
xchg
fs
fwait
dec
loopne
cli
pop
movs
mov
js
iret
push
fisubr
add
and
outs
add
or
movs
and
jl
cdq
pop
into
test
sbb
mov
xchg
cmp
movs
ror
leave
ret
ret
mov
jp
push
test
mov
fs
es
mov
sbb
neg
sbb
mov
(bad)
loopne
std
call
jmp
push
jge
push
mul
das
test
jnp
imul
call
movs
lea
cmp
call
push
xchg
lea
mov
popf
or
loopne
ret
sub
mov
push
(bad)
cld
lods
std
jmp
rcr
addr16
xchg
dec
jae
call
mov
mov
cmp
shr
out
jnp
jle
shl
sbb
cmp
dec
stos
mov
icebp
arpl
rcl
jne
pushf
pop
pop
adc
aam
and
cld
and
xlat
push
(bad)
ds
and
sbb
xor
xor
repnz
inc
and
pop
rcl
imul
das
fs
rol
mov
dec
inc
(bad)
sub
dec
stc
dec
add
lock
mov
iret
mov
not
rcr
cld
imul
sbb
(bad)
pop
(bad)
mov
sub
cmps
adc
fsubp
mov
adc
repz
daa
retf
es
pop
mov
xchg
lods
retf
or
adc
cmp
mov
js
loopne
pop
adc
jne
mov
jmp
repz
call
imul
(bad)
pusha
idiv
push
add
cmp
jne
or
ja
and
xchg
push
and
fbld
push
les
mov
cmp
add
xor
sbb
and
test
and
add
dec
sbb
sbb
popf
jle
inc
imul
lahf
dec
nop
clc
retf
sbb
mov
dec
mov
cmp
retf
dec
xor
dec
jnp
add
lahf
jmp
lahf
jle
mov
dec
add
pop
scas
ins
push
mov
mov
jns
js
lahf
mov
xchg
(bad)
icebp
push
mov
pop
push
sub
pop
or
retf
stos
jecxz
mov
sub
cmp
xlat
xor
imul
out
cmp
lahf
sar
outs
mul
shr
mov
pop
dec
mov
mov
inc
movs
inc
fimul
xor
jns
lods
add
jl
ret
add
push
mov
scas
ror
mov
cmp
sti
repnz
or
fdivrp
mov
jmp
cs
aad
or
les
pop
sbb
mov
pop
mov
mov
jns
sahf
cmc
movs
and
iret
inc
shl
dec
add
in
or
aad
or
clc
arpl
push
mov
lods
mov
sub
xchg
sub
xor
push
adc
cmp
cwde
je
dec
push
vandnps
xor
add
retf
pop
cmps
out
ror
enter
inc
sub
in
pop
loop
gs
(bad)
(bad)
pop
mov
lods
out
mov
push
fcomp
sbb
rol
adc
jl
xor
mov
xor
jge
dec
jnp
fs
aam
add
gs
pushf
mov
pop
in
push
shl
push
or
xchg
test
mov
add
(bad)
in
push
and
push
fnstcw
daa
scas
shr
mov
jle
imul
sub
cmps
cmps
mov
add
test
inc
iret
cmp
add
cmp
pop
shl
(bad)
and
inc
loop
pop
push
ret
pop
and
push
or
sub
mov
inc
mov
xchg
outs
jmp
in
push
mov
lds
popf
inc
mov
cs
adc
xchg
test
fucomi
xor
enter
jns
or
mov
xchg
or
in
inc
or
push
test
dec
ja
les
shl
lods
in
test
lock
inc
or
sub
inc
dec
clc
ins
push
sbb
int3
mov
test
mov
in
mov
mov
sti
add
int3
xchg
adc
pop
aaa
xchg
mov
adc
dec
hlt
and
cmp
ret
test
ror
add
xchg
ret
lock
or
sbb
aaa
fwait
mov
jnp
fldpi
pop
cmp
call
push
leave
sub
cmp
shl
mov
neg
or
stos
adc
mov
pushf
aam
pop
mov
popa
sbb
mov
adc
xchg
out
add
cmp
mov
pop
icebp
retf
stos
fstp
ror
iret
mov
ret
sub
das
xchg
call
inc
xor
jae
mov
xor
add
sti
test
ins
inc
fimul
pop
push
cs
xchg
cmp
mov
ss
aad
mov
daa
shl
popa
jle
pop
retf
iret
mov
cli
cmp
or
mov
and
dec
imul
pop
cwde
ja
shl
inc
jb
mov
jmp
out
dec
mov
lea
cs
data16
xchg
aaa
out
dec
loopne
or
outs
inc
and
mov
and
pop
mov
mov
mov
mov
push
cmp
sahf
xor
mov
test
xor
mov
sahf
rol
ret
hlt
mov
dec
mov
dec
arpl
dec
repnz
sbb
cmp
xor
leave
lea
pop
(bad)
xor
int3
ret
dec
pop
lods
push
mov
imul
xor
and
clc
imul
cmp
call
icebp
lods
pop
dec
std
popf
cs
int3
sub
mov
icebp
mov
aam
mov
ret
sub
js
sub
adc
pop
cmps
mov
mov
or
and
aas
ds
pop
dec
ins
sti
cmp
in
xchg
add
ror
sub
sub
jmp
add
les
(bad)
jge
jns
lea
sbb
mov
jle
push
cmp
fidivr
jp
jne
adc
scas
ins
mov
dec
call
inc
mov
test
(bad)
dec
outs
or
pop
sub
dec
jmp
xor
and
(bad)
mov
cmps
mov
pushf
hlt
mov
mov
sti
ret
xchg
or
push
push
dec
sub
cmp
int
xchg
gs
mov
das
das
xchg
xchg
outs
(bad)
lahf
xor
xchg
dec
in
sar
push
jge
mov
push
test
adc
js
inc
dec
dec
mov
cld
inc
lods
movs
mov
xchg
pop
jb
loopne
pusha
mov
cmp
scas
stc
inc
fcmovnu
add
xor
add
dec
call
pop
jno
sub
sti
jecxz
jb
pop
mov
stos
jae
or
dec
shl
xlat
jne
call
mov
retf
clc
add
cld
cmp
adc
cwde
pop
int
mov
cdq
pop
ds
xchg
sahf
mov
sub
lods
aad
ret
cmp
sbb
test
mov
in
mov
imul
ret
inc
pop
mov
sti
les
imul
ja
cmp
hlt
lock
lods
push
retf
cmp
cmp
aam
test
mov
cmps
jmp
xchg
xlat
shr
mov
lds
imul
in
aad
fcmovnu
loop
cld
call
nop
pop
inc
jno
popf
test
inc
pop
ds
imul
add
mov
sbb
ret
or
cli
pop
(bad)
das
dec
mov
pop
xor
sub
sti
xchg
xchg
push
xchg
xchg
mov
cmp
sbb
mov
push
cmps
stos
out
push
les
outs
enter
mov
mov
add
fimul
data16
fdivr
(bad)
and
pop
scas
stc
lock
xchg
test
adc
xor
in
xor
bound
(bad)
push
or
xor
stos
(bad)
xlat
(bad)
push
ror
rcl
xor
in
xor
jmp
inc
push
sub
and
push
scas
mov
cdq
test
mov
mov
aaa
clc
cmp
xchg
xchg
aas
test
dec
int3
mov
cmp
dec
(bad)
dec
imul
inc
inc
dec
jno
xor
loopne
out
in
push
jo
aas
and
cld
fbld
fsub
and
(bad)
jne
(bad)
in
jl
outs
mov
aad
(bad)
pop
jecxz
mov
inc
out
pop
mov
shl
into
jmp
push
add
inc
lods
and
test
mov
jge
jp
cli
mov
ins
jno
add
ret
(bad)
sub
xchg
ins
jl
fcom
add
or
ss
vpmaxub
ins
xchg
mov
mov
sub
repz
jl
mov
rcr
inc
fs
ds
data16
retf
(bad)
test
xchg
sub
sub
mov
push
mov
mov
mov
mov
xchg
pop
xor
mov
call
mov
(bad)
iret
pop
xadd
jg
add
xchg
and
xchg
lds
mov
mov
jmp
mov
xor
sbb
mov
gs
cmp
push
(bad)
rol
in
test
movs
in
jmp
loop
xor
iret
mov
mov
mov
(bad)
sub
ret
fsubr
les
mov
pop
clc
cmp
xor
movs
xor
pop
mov
inc
mov
(bad)
jnp
mov
push
add
adc
push
scas
call
in
push
mov
inc
push
daa
sbb
or
fcmove
xchg
xor
int3
cmc
rcl
add
or
pop
ret
inc
jmp
fs
inc
gs
or
out
pop
jo
jg
pop
mov
repz
vmwrite
sbb
xor
lock
dec
mov
and
and
stos
add
aam
adc
lock
in
sbb
xchg
daa
dec
or
call
inc
in
and
push
adc
fdiv
call
iret
mov
ins
nop
mov
test
ror
jae
cld
xchg
push
fadd
pop
pop
test
dec
xchg
mov
repz
inc
inc
out
jecxz
mov
xchg
add
push
jnp
pushf
lea
mov
jg
lods
test
(bad)
jmp
std
lods
mov
xor
xchg
xchg
push
cld
push
or
fsubr
sub
(bad)
push
inc
or
fsubp
bound
aaa
adc
mov
inc
pop
or
and
call
std
push
mul
int3
or
dec
lods
jmp
inc
in
sbb
cmps
and
dec
mov
xor
lahf
jno
inc
iret
adc
dec
dec
or
xchg
aas
jns
gs
cdq
les
mul
sbb
pop
popa
scas
pop
in
xchg
je
pop
adc
inc
bnd
inc
jp
ds
add
xor
xchg
call
scas
or
pop
dec
and
in
nop
pop
xchg
cld
retf
nop
test
dec
xor
out
dec
test
loope
cmp
test
xchg
movs
dec
cmps
repnz
push
loopne
icebp
pop
push
cs
not
fdiv
dec
mov
out
xchg
movs
adc
ret
xor
push
ins
cmp
aas
into
pop
pop
shl
add
pop
dec
in
jmp
fcomp
fsubr
add
cmp
and
(bad)
dec
xchg
ins
iret
mov
aam
cmp
sahf
sahf
xor
adc
das
inc
ror
loopne
jnp
ins
adc
lds
daa
cmp
retf
aam
popa
dec
popa
push
push
jne
(bad)
push
jo
add
pop
dec
mov
sbb
add
and
hlt
and
(bad)
and
xor
not
mov
jne
xor
mov
leave
pop
sub
mov
les
(bad)
push
popf
leave
dec
imul
js
lods
or
loop
dec
int
cmps
imul
fild
int
lds
push
and
ret
data16
inc
xchg
add
or
and
(bad)
adc
adc
mov
jmp
aas
outs
imul
(bad)
bound
mov
or
mov
add
push
mov
ret
push
pop
or
mov
hlt
in
mov
or
and
imul
jns
ret
fisttp
pop
add
pop
arpl
mov
rcr
and
pop
jl
retf
mov
dec
inc
xchg
and
stc
ds
mov
push
loopne
(bad)
outs
sbb
fdivr
inc
mov
push
popf
and
mov
adc
dec
sbb
fs
in
fisubr
or
dec
das
inc
inc
inc
lods
ins
push
xor
rcl
or
aaa
inc
nop
xor
jecxz
sbb
leave
jo
sbb
daa
fiadd
mov
stc
push
fs
xor
jmp
test
dec
inc
in
dec
mov
xor
mov
xchg
in
lods
pop
lock
jne
rcl
nop
jle
test
lldt
push
imul
xchg
add
mov
push
sub
mov
enter
rol
call
sbb
xor
push
adc
push
gs
and
repnz
jl
dec
jne
xor
retf
jecxz
xchg
fld
aam
aam
test
pusha
mov
sbb
imul
(bad)
in
adc
in
pushf
mov
push
outs
jne
pop
mov
xchg
loopne
call
push
pushw
pop
out
xor
fwait
adc
dec
rcl
cdq
push
leave
dec
mov
push
and
jnp
sbb
jle
jne
clc
ja
cmp
cmp
mov
jne
add
jg
push
daa
push
loop
addr16
cs
(bad)
out
adc
sar
repnz
call
sub
push
mov
xor
mov
scas
xchg
inc
call
mov
js
pop
retf
dec
test
sub
jo
cmp
outs
cmps
add
or
add
movs
xor
sbb
mov
imul
and
mov
push
dec
popf
or
(bad)
cmps
cmps
push
inc
psllw
and
sub
aas
in
lods
and
mov
jge
rcl
call
mov
sub
pop
xor
mov
ja
test
pop
add
push
xchg
or
cmovae
xor
iret
and
push
and
jo
push
jl
(bad)
dec
adc
adc
mov
stos
rcr
lods
popf
xor
xchg
cs
(bad)
pop
test
repz
inc
add
adc
loope
adc
or
sbb
mov
lds
cmp
cmps
push
retf
jb
ins
mov
es
movs
dec
mov
imul
xchg
add
scas
inc
and
mov
loop
std
and
push
outs
add
pop
jmp
xchg
jb
mov
sub
inc
scas
imul
aad
in
stc
shr
movs
mov
pop
aad
cmps
fdiv
jecxz
cmp
fistp
scas
mov
out
jmp
lods
les
test
das
mov
adc
mul
inc
pop
shr
(bad)
in
test
sbb
shl
into
cmp
dec
imul
mov
popf
lock
push
fstp
call
cmp
mov
inc
push
mov
mov
test
mov
(bad)
pushf
add
jmp
shl
repnz
jmp
add
popa
mov
pop
xchg
lea
pop
aas
popf
mov
cmps
pop
retf
fbld
inc
(bad)
jl
repz
mov
rol
js
jecxz
hlt
(bad)
xor
sub
sbb
mov
mov
into
sub
adc
test
les
add
loope
cmovnp
cmc
cli
sahf
jns
sbb
ins
stos
jae
mov
pop
jl
mov
pushf
mov
sub
mov
mov
fdivr
outs
or
jmp
int3
fsub
push
push
push
es
scas
mov
cmc
in
repnz
mov
(bad)
sbb
enter
and
jno
sar
dec
fiadd
out
call
mov
cmps
jne
je
mov
jp
out
aad
adc
iret
cmps
shr
aas
fcomp
bound
das
adc
inc
xor
push
xchg
imul
in
xor
loopne
popf
in
mov
push
jecxz
(bad)
sub
jp
scas
jp
or
in
inc
(bad)
dec
inc
jo
les
mov
imul
xlat
adc
and
rol
sti
pop
mov
cs
mov
ret
vcvtsi2ss
sub
cmp
in
outs
pop
dec
in
sub
sahf
fstp
mov
sahf
jl
test
and
sbb
pop
jg
lea
std
mov
inc
std
aas
mov
cmp
xor
or
call
int
mov
int3
and
sbb
adc
mov
outs
lahf
mov
xor
std
imul
push
mov
stos
shl
lock
fmul
pop
js
sbb
inc
lods
imul
rcr
or
int3
neg
jbe
dec
mov
cld
daa
xchg
je
aaa
ja
xchg
xchg
jns
shl
cmp
dec
shr
ret
xchg
pop
retf
cmp
call
imul
jnp
xchg
call
or
ficom
loop
sub
pop
not
jo
xlat
int
xchg
clc
mov
hlt
data16
lds
aam
fs
add
jne
and
add
js
add
(bad)
icebp
fbstp
sti
and
sub
adc
mov
cmp
pop
pop
ficom
aas
sub
fild
rol
call
popa
movs
jecxz
cmp
repnz
test
and
push
jo
fs
pop
(bad)
ja
pusha
mov
or
es
shl
dec
push
cmp
push
fsubr
add
cmp
push
lea
xchg
xor
out
inc
xchg
in
jae
mov
int
inc
and
pop
pop
icebp
ror
push
imul
(bad)
push
jmp
(bad)
mov
js
mov
push
dec
xchg
mov
cli
sbb
out
neg
sbb
push
xchg
scas
out
std
inc
sbb
sub
push
jg
mov
daa
popf
add
add
loope
not
mov
scas
das
(bad)
loope
(bad)
and
push
and
xor
xor
xor
(bad)
dec
xchg
mov
cmp
adc
pop
out
xor
push
mul
loope
sahf
pop
add
test
sbb
lods
add
pop
fisttp
cmp
ror
inc
call
lods
sbb
xchg
add
daa
das
in
add
out
std
xchg
outs
clc
mov
stos
cdq
stos
iret
xchg
ds
or
movs
sub
add
inc
imul
and
call
dec
add
xor
js
jp
outs
xchg
push
cmp
outs
jbe
rol
sbb
jp
ds
xchg
and
mov
dec
and
leave
(bad)
fsubr
jle
loop
stc
dec
jmp
nop
int3
xchg
mov
ins
mov
pop
(bad)
stos
shr
mov
xor
sbb
shl
sti
bound
sub
cli
inc
pop
or
ror
call
jae
mov
sbb
pop
ja
or
or
dec
add
iret
cdq
cmps
test
fwait
outs
pusha
jo
mov
pop
xor
js
retf
add
es
inc
push
pop
jmp
pop
cli
loope
lock
pop
ret
mov
pushf
nop
aad
sub
loope
jae
inc
cmp
cdq
std
arpl
xchg
outs
adc
vmovupd
lahf
mov
dec
sbb
pop
mov
mov
dec
or
xor
and
xor
mov
jno
je
add
push
fldenv
and
xor
adc
xchg
xchg
mov
mov
add
cmp
dec
mov
xchg
aaa
icebp
mov
movs
repnz
es
shl
popa
fadd
(bad)
jb
xor
movs
les
bound
retf
mov
ficom
mov
in
js
jl
mov
sbb
jmp
frstor
inc
outs
mov
push
loope
sbb
lods
shl
adc
test
sti
(bad)
stc
and
mov
scas
mov
ins
int
mov
leave
imul
or
repnz
mov
adc
pop
imul
lods
sub
mov
pushf
movs
cdq
or
mov
into
ror
xchg
mov
inc
(bad)
movs
cmp
fcomi
int3
push
xor
hlt
lods
pop
aas
xchg
pop
mov
dec
add
je
rep
sbb
mov
jne
jns
mov
sti
mov
add
aam
or
sbb
repz
cmp
sub
mov
sub
rcr
jle
sub
push
jecxz
neg
xor
mov
shr
daa
ret
mov
(bad)
sub
jle
icebp
mov
or
add
or
outs
ja
jns
int
mov
sub
data16
sti
mov
scas
mov
xor
adc
inc
xor
pop
mov
jle
inc
stc
add
pop
or
adc
test
xchg
adc
clc
inc
dec
sub
js
fdivr
xor
fs
sub
aas
xor
es
fidivr
jb
push
or
mov
push
mov
sub
xor
dec
mov
jb
ds
xor
sahf
or
(bad)
mov
sbb
cwde
imul
stc
jns
jae
mov
sub
(bad)
pushf
sub
jne
(bad)
popf
push
adc
cli
int3
push
or
(bad)
test
dec
push
out
xchg
cld
loopne
jmp
mov
ds
adc
outs
aad
push
loop
out
lods
sub
xor
or
scas
jmp
push
or
outs
mov
push
dec
pop
imul
inc
jne
ja
jge
and
cli
jp
dec
xchg
inc
push
inc
(bad)
stc
add
jmp
add
jmp
cld
out
pusha
xlat
or
fsubrp
cmp
jae
ss
xchg
jbe
dec
or
cdq
(bad)
mov
lods
jae
pusha
scas
mov
or
xchg
mov
mov
pop
jne
call
jnp
hlt
jbe
xlat
in
xor
(bad)
loope
inc
loope
sbb
jp
xor
mov
dec
mov
dec
ins
cmp
adc
mov
jp
(bad)
pop
xor
adc
dec
jae
mov
sahf
int3
stos
int
mov
fild
mov
(bad)
xchg
loope
dec
jnp
sbb
mov
pusha
push
rcr
(bad)
cmp
jp
ror
sub
(bad)
adc
mov
sub
xchg
xor
xor
mov
jl
mov
into
iret
cli
mov
out
bound
pop
inc
fidivr
adc
inc
stos
push
jb
(bad)
push
push
fisub
ins
sbb
mov
imul
mov
xor
push
bound
aad
push
sub
pop
jnp
dec
and
jae
stc
push
sbb
div
cmp
xchg
mov
xor
mov
gs
ss
add
in
rol
jle
retf
rcr
sbb
enter
int3
add
scas
pusha
mov
inc
mov
popf
push
add
dec
test
jmp
ror
retf
lods
ja
xor
in
mov
inc
iret
stos
out
jp
jl
xchg
dec
and
dec
xchg
pop
bound
sar
push
fs
jmp
movs
arpl
ror
mov
mov
xor
xor
xor
jb
inc
push
mov
adc
pop
in
pop
sbb
push
xchg
sub
xchg
add
mov
fimul
adc
cmp
mov
sub
jae
jmp
fistp
push
cmp
sub
xor
je
lods
pop
inc
fdivr
retf
repz
ss
or
or
(bad)
lock
pop
cmp
mov
rcl
push
lahf
and
dec
ret
loope
enter
movs
add
repz
push
pushf
mov
xchg
add
scas
fwait
dec
and
fnstsw
add
inc
mov
push
outs
test
push
adc
dec
add
int
scas
cmp
xchg
dec
arpl
mov
dec
dec
or
cmp
pop
outs
xchg
pop
cli
repnz
lock
and
mov
jae
rcr
xchg
test
xchg
cmp
(bad)
aad
sbb
popf
repnz
mov
sbb
aaa
shl
jl
xchg
push
add
and
jb
sahf
jp
sbb
les
shl
cli
xchg
in
xchg
sbb
nop
ins
repnz
sub
sub
inc
mov
fbstp
jmp
mov
fwait
xchg
daa
repnz
setae
loop
aam
fcmovbe
xlat
xchg
dec
sti
xor
cdq
ret
xchg
xchg
out
mov
jl
es
sbb
aam
ror
dec
or
lds
fwait
mov
and
loop
out
arpl
dec
shl
sti
pop
add
dec
shl
aam
sbb
or
xor
cld
adc
lods
outs
lahf
sub
cmp
push
out
xor
push
and
enter
jl
js
ins
aaa
push
(bad)
xchg
push
shl
rcr
lea
sub
jg
fdivr
iret
out
mov
call
mov
stos
std
cmp
push
(bad)
jns
cli
xor
mov
cli
inc
jp
sti
xlat
imul
jmp
sbb
sub
sub
das
ror
xchg
jecxz
popf
stos
in
mov
repnz
jmp
push
ins
and
dec
jg
pop
dec
push
fcmovnb
jb
mov
fwait
mov
push
cld
sbb
xlat
push
cli
mov
dec
shl
xor
jmp
or
retf
imul
aaa
sbb
in
pop
repnz
and
not
xchg
mov
fidivr
aad
cmp
fstp
cmp
or
jle
jns
xchg
outs
jb
leave
adc
loop
repnz
jge
les
xor
(bad)
push
sti
stos
xchg
fcomp
in
jae
jmp
sub
scas
iret
mov
pusha
push
aam
dec
or
cmp
xchg
jne
xchg
pop
test
out
inc
(bad)
sub
cmp
aam
mov
test
popf
xor
inc
push
retf
int3
jne
fld
pushf
xor
arpl
and
outs
sbb
pop
loop
icebp
neg
inc
cmp
(bad)
js
xor
push
xchg
loopne
jae
mov
cmp
mov
popa
xchg
scas
inc
dec
mov
push
sbb
jp
jmp
mov
scas
pushf
push
push
mov
xlat
jp
mov
push
lds
faddp
fsub
lea
jl
mov
ins
js
add
jp
nop
and
std
cmp
mov
das
inc
or
or
fnsave
mov
hlt
pop
scas
push
pop
(bad)
sub
add
inc
cmp
je
gs
ret
push
cmps
xor
fdiv
dec
xor
leave
sbb
pop
into
loope
scas
loope
aam
cs
inc
inc
outs
xor
dec
fbld
loopne
enter
xor
mov
inc
dec
gs
mov
add
gs
sar
inc
jge
mov
hlt
lods
pusha
clc
jo
stc
mov
aam
mov
je
fnstcw
mov
and
ss
xchg
jge
(bad)
xor
repz
add
mov
rol
clc
pop
xchg
icebp
ins
mov
ss
cmp
repz
cdq
hlt
and
pop
mov
add
sub
mov
sub
add
dec
xchg
shl
mov
pop
sti
popa
ins
in
mov
push
mov
pop
loope
stc
aaa
sub
add
icebp
lods
fist
sub
stos
jb
mov
pushf
pop
sbb
mov
into
shl
mov
push
add
jo
frstor
ret
xchg
cmp
mov
dec
jp
jns
push
jnp
push
mov
add
test
or
(bad)
sti
leave
fsubp
and
clc
pusha
stos
add
jne
sbb
shl
mov
fild
mov
and
xor
sahf
xchg
dec
xchg
ds
scas
ds
mov
sub
(bad)
cmp
and
pop
fcmove
mov
cmps
int
cli
push
or
inc
test
in
push
clc
scas
or
xchg
rol
test
mov
lahf
sub
retf
inc
xor
lock
dec
mov
sub
data16
loop
mov
jp
mov
enter
mov
mov
cli
or
lods
(bad)
mov
mov
or
movs
mov
sbb
fdivrp
sbb
and
outs
xchg
ins
fabs
pop
dec
xchg
jmp
pop
ss
imul
sub
pop
je
inc
push
dec
mov
and
dec
mov
lds
xchg
lea
mov
shl
leave
loop
add
push
mul
pop
mov
shr
xchg
pop
sbb
and
int
adc
push
sbb
pop
das
pop
or
mov
jg
or
outs
jle
sub
push
inc
pop
mov
or
fidiv
cmps
mov
dec
data16
jne
inc
jb
adc
add
push
or
scas
out
and
sbb
(bad)
jmp
jae
rcl
add
je
push
dec
addr16
dec
fdivrp
hlt
frstor
imul
sti
cwde
mov
xor
mov
cmps
in
inc
cmp
push
xchg
jge
in
in
fild
dec
arpl
and
clc
xchg
and
fdivr
inc
adc
cmps
jmp
or
pop
mov
call
mov
xchg
repz
stos
xchg
out
int
and
stos
xchg
cwde
sbb
mov
adc
pop
mov
ja
mov
rcl
push
imul
cmp
shr
xchg
and
int
icebp
inc
cmp
xlat
jno
icebp
(bad)
iret
add
aam
in
pop
jg
mov
sub
or
les
cwde
inc
cmp
stos
sbb
fadd
ds
out
rol
or
fisttp
jbe
hlt
movs
punpckldq
pop
lods
sub
ja
adc
call
mov
inc
add
dec
xchg
jp
int
push
mov
and
nop
pop
repnz
push
xchg
inc
int3
enter
outs
lods
loop
add
inc
out
and
cmp
repnz
jmp
inc
imul
fdivrp
sbb
pop
xchg
inc
lea
test
xchg
inc
mov
mov
or
add
sar
adc
inc
retf
jmp
mov
call
inc
adc
adc
imul
pushf
sub
pop
lock
ror
scas
sar
popf
adc
stos
inc
(bad)
fld
outs
sub
popf
xor
into
cdq
xor
xor
jl
mov
push
out
mov
dec
ret
push
sti
sub
(bad)
pop
in
xor
stos
es
pusha
retf
add
sub
rol
push
mov
xor
push
mov
(bad)
hlt
dec
setnp
(bad)
mov
add
pusha
int
pop
mov
add
popf
stc
ins
mov
outs
std
add
mov
jp
movs
jmp
loopne
std
test
mov
jmp
pop
scas
mov
retf
imul
sub
(bad)
xchg
fist
ficom
loope
gs
lods
ins
jno
mov
or
push
test
sbb
dec
in
jge
in
lea
int
sti
mov
dec
adc
scas
pop
stc
mov
sbb
shl
frstor
add
cmc
mov
pop
mov
data16
jno
mov
jmp
sar
mov
call
sub
pop
data16
aaa
cwde
repnz
les
push
repnz
xor
push
movs
icebp
sub
jmp
mov
cmps
sbb
lahf
push
rcr
xor
jb
in
pushf
sub
or
fisttp
icebp
dec
je
cmp
jne
or
sub
xchg
int3
adc
and
fs
pusha
jg
mov
mov
jle
sub
cmps
ret
imul
das
sahf
iret
movs
jb
out
stc
push
clc
inc
jp
rol
mov
lods
call
pop
(bad)
retf
fcmove
repnz
pop
cmp
cdq
add
icebp
jmp
pusha
adc
popf
mov
cmps
and
(bad)
frstor
jnp
xchg
mov
mov
data16
lahf
test
add
inc
or
push
repnz
stc
push
push
addr16
lods
xor
cmp
mov
mov
mov
sub
aad
repz
outs
call
test
inc
sti
and
lods
popa
out
push
mov
imul
inc
scas
(bad)
cli
sti
jo
aaa
pop
pusha
push
add
cs
lahf
jne
jmp
mov
int
adc
icebp
mov
push
lahf
sahf
popf
(bad)
mov
test
lea
cmp
mov
loope
cwde
pop
push
ja
mov
cmp
cmp
loop
cmp
adc
icebp
adc
sahf
pop
push
mov
mov
repnz
mov
into
sub
inc
adc
fidiv
inc
xchg
cmp
mov
adc
pop
inc
scas
fldcw
lods
cli
sbb
mov
(bad)
mov
add
push
sti
pop
or
xchg
mov
cdq
add
push
div
jmp
aam
sti
sti
jno
adc
ret
push
fild
mov
arpl
mov
lahf
and
push
ss
mov
push
pop
cli
dec
loopne
or
iret
scas
xor
(bad)
sub
adc
jb
cli
and
pop
stc
jg
clc
adc
test
xchg
(bad)
(bad)
fld
es
sbb
(bad)
and
inc
jmp
adc
adc
fild
lods
and
call
dec
mov
movs
cmp
inc
xchg
je
mov
retf
push
pop
imul
mov
inc
dec
cs
dec
xor
out
sub
sub
(bad)
mov
(bad)
inc
inc
sahf
cmp
cdq
int
test
jae
fwait
js
mov
pop
dec
fidiv
lds
cmp
jmp
mov
xor
mov
mov
push
jno
call
mov
rcr
popf
jno
enter
mov
inc
es
push
dec
mov
aas
ss
mov
repnz
adc
xchg
sbb
test
xor
mov
mov
adc
xchg
jecxz
push
xchg
fist
add
dec
sbb
jbe
ja
push
call
pop
shl
(bad)
dec
adc
mov
cmp
mov
mov
scas
jecxz
popa
bound
fcomp
jb
lahf
ja
mov
or
repnz
loop
xchg
jnp
pop
sbb
jp
and
fwait
jbe
or
mov
and
mov
pop
cmps
int3
cld
in
jmp
mov
mov
mov
sbb
sub
push
mov
and
lods
xlat
hlt
sub
imul
mov
push
fisub
jae
shl
cwde
push
cmp
xor
sbb
cmp
add
loope
pusha
cmp
adc
call
repz
cwde
xchg
push
pop
pop
cs
and
ret
mov
mov
push
out
or
mov
imul
mov
repnz
sub
test
add
mov
jb
mov
test
or
mov
cmc
pop
mov
xor
addr16
es
pop
sahf
pop
xor
adc
rcl
and
mov
mov
lods
mov
xchg
and
in
fwait
movs
shr
shl
test
int3
and
pop
xchg
dec
mov
jb
cmovnp
loop
cs
fdiv
dec
jecxz
scas
ss
div
(bad)
idiv
push
add
cwde
add
cld
dec
xchg
(bad)
sbb
fs
jmp
lods
loopne
sub
and
xchg
inc
ins
adc
jnp
aad
xlat
(bad)
lods
imul
ins
xor
ss
fiadd
out
(bad)
stos
(bad)
imul
mov
cmc
and
inc
out
sti
neg
(bad)
ins
mov
jnp
mov
cs
mov
sahf
shl
push
push
sti
cmp
in
jbe
push
loope
or
pop
xchg
scas
mov
popf
fild
cwde
dec
push
push
jno
add
mov
popa
stc
jb
pop
xor
ja
pop
mov
sub
xchg
add
fmulp
cmps
jecxz
out
jo
xchg
loopne
xchg
test
int
imul
or
les
and
fwait
retf
fwait
bound
mov
or
sub
fidiv
mov
ins
push
mov
dec
dec
jecxz
loop
(bad)
add
ja
loopne
mov
test
popf
sub
pusha
mov
push
(bad)
and
mov
pusha
cmps
jl
jg
or
sbb
dec
cmp
cmps
pushf
inc
aad
cmp
(bad)
pop
jp
mov
stc
in
or
add
xor
hlt
jge
js
xor
mov
hlt
sub
pop
adc
xor
mov
xlat
mov
fadd
test
aad
jns
mov
jbe
aam
cld
fstp
mov
jne
xor
jg
jae
and
ret
lock
cld
loope
sbb
jne
dec
nop
nop
and
fwait
gs
inc
stc
dec
sub
push
inc
ja
jmp
mov
test
pop
ficomp
les
js
adc
jne
cmp
mov
loope
sbb
enter
jns
lods
mov
jecxz
mov
pop
aam
xchg
add
mov
and
out
and
or
jno
xor
inc
(bad)
div
gs
enter
ss
pop
pop
pusha
stos
ds
and
sar
or
aad
js
imul
in
dec
push
sub
shr
lock
and
add
xchg
push
mov
inc
(bad)
aas
push
push
dec
or
imul
inc
sub
xchg
fstp
sbb
jnp
shr
push
cs
mov
repz
shl
xchg
mov
je
dec
lock
call
inc
xlat
aam
icebp
jg
sbb
inc
mov
jge
mov
push
and
popf
popa
aad
iret
cld
jnp
outs
adc
test
mov
mov
ficomp
xor
push
pop
sti
leave
inc
in
std
jnp
daa
xor
ret
mov
xchg
leave
call
ror
mov
push
stos
add
pop
cmp
pop
loope
inc
or
mov
(bad)
cmp
push
xchg
dec
sbb
and
sub
mov
and
jge
retf
sbb
idiv
or
(bad)
jmp
addr16
xchg
push
ret
jns
ret
adc
dec
cs
mov
ins
and
inc
ins
push
mov
adc
jnp
nop
mov
cld
rcl
test
mov
xchg
xchg
cmp
push
mov
mov
sbb
sub
mov
lea
daa
dec
rcl
lea
xor
pop
bound
cld
jne
test
push
loopne
loope
lods
inc
in
bound
xchg
xor
repz
fld
sbb
fisttp
mov
mov
lock
push
xchg
and
mov
xchg
cmp
or
cmp
mov
dec
lock
movs
or
fisttp
stos
push
shr
adc
gs
sbb
icebp
inc
pusha
jae
ins
bound
gs
push
pop
popa
rcr
fistp
fdiv
ret
call
mov
jmp
mov
xor
and
test
ret
test
inc
into
or
mov
pop
int3
jge
(bad)
aas
out
xor
dec
arpl
daa
cmp
leave
mov
lea
xchg
icebp
push
dec
jno
cmp
dec
or
fucomp
mov
cld
and
mov
in
mov
stos
cwde
jnp
data16
inc
shl
aas
adc
movs
inc
pop
(bad)
inc
daa
mov
(bad)
adc
sub
sbb
bound
sbb
and
aaa
imul
fwait
add
mov
rcr
sub
push
or
pop
and
ja
es
test
and
sti
or
dec
or
fs
jmp
or
dec
loopne
adc
cmp
arpl
dec
mov
enter
mov
fisub
loopne
lahf
int
xor
jmp
data16
test
(bad)
jb
mov
add
mov
add
gs
out
(bad)
dec
out
shr
push
arpl
xor
(bad)
push
vhaddps
sub
int
mov
bound
pop
jne
pop
or
retf
and
xchg
push
dec
call
jae
into
sahf
leave
sbb
mov
aam
dec
(bad)
mov
push
xor
mov
cmp
sbb
add
push
cmps
rol
mov
ror
sar
clc
cmps
icebp
pop
sub
gs
jecxz
push
lods
xor
into
sbb
stc
and
inc
pop
cmp
fist
js
sub
sbb
mov
jb
push
fistp
or
jb
cmp
js
daa
or
push
(bad)
leave
dec
jp
or
fimul
pop
das
sar
ins
xchg
data16
(bad)
and
retf
push
fild
outs
data16
jnp
cwde
jns
push
xor
xchg
xchg
or
ret
repz
movs
push
add
dec
xchg
fld
sbb
add
(bad)
sub
cmp
inc
mov
mov
iret
test
or
xchg
lds
test
out
and
aad
push
push
call
sub
scas
lods
sar
push
cmp
inc
ret
int3
dec
(bad)
cmp
xor
fimul
popa
and
pop
inc
xchg
(bad)
mov
aam
aaa
rol
jmp
adc
scas
mov
retf
inc
addr16
popa
loope
test
pop
mov
xor
fidivr
je
es
adc
or
xchg
inc
cmp
push
cmp
test
in
aas
je
mov
call
clc
add
(bad)
xchg
push
pop
jg
xchg
out
push
add
mov
inc
pop
mov
cmp
jle
lea
push
xchg
imul
pusha
lea
ins
add
popa
jp
sbb
test
mov
pop
pop
int3
add
dec
dec
dec
inc
or
xor
sub
aam
scas
xchg
xor
stc
add
test
aad
jnp
retf
pushf
ret
push
(bad)
cmp
add
movs
dec
hlt
aas
xor
int
push
(bad)
mov
mov
xchg
and
aad
mov
xor
push
aaa
repnz
fwait
pop
inc
push
scas
inc
out
shr
test
pop
out
ret
imul
aam
add
jns
xchg
push
shl
lock
dec
or
xchg
cmps
dec
into
cdq
mov
imul
inc
mov
mov
es
fldcw
cwde
sub
mov
jno
aad
hlt
call
imul
push
clc
pop
lods
cmp
retf
in
ss
adc
fsubr
adc
les
(bad)
aad
mov
stc
retf
pop
inc
sbb
nop
sbb
dec
jnp
nop
jmp
xchg
cmp
in
leave
jns
test
xchg
ds
push
stos
cld
lock
int3
or
dec
ja
es
call
sbb
mov
mov
and
int3
inc
(bad)
push
int3
and
out
push
les
inc
or
test
jmp
xchg
stos
sub
push
dec
jmp
mov
cmp
sar
lock
mov
cwde
xchg
or
mov
mov
sbb
rol
rcr
or
mov
jmp
cwde
adc
pop
fist
out
retf
gs
mov
mov
test
cmp
adc
xlat
jp
inc
jmp
jne
mov
test
test
(bad)
sub
add
jmp
and
sti
xor
or
out
rcr
pop
mov
jb
shr
ja
jge
mov
out
jnp
mov
mov
jecxz
dec
or
arpl
test
(bad)
cmps
mov
mov
pop
jle
hlt
outs
out
pop
daa
mov
cld
enter
and
mov
xchg
xchg
add
stc
pop
jp
push
out
pop
cmps
fcmove
or
xor
in
imul
ins
outs
in
adc
bnd
pop
xor
pop
(bad)
xchg
xlat
xchg
shl
int3
lahf
add
xor
mov
cs
dec
sar
xchg
sbb
iret
mov
inc
mov
inc
sbb
push
pop
cli
jmp
leave
dec
loope
cs
shr
fsub
aad
jns
mov
gs
enter
and
sbb
sbb
sbb
scas
lahf
sub
sub
dec
loopne
movs
lahf
stos
pop
xchg
mov
lea
xlat
pop
aaa
mov
xchg
jmp
push
or
mov
repnz
jbe
stc
outs
ja
jmp
arpl
sub
cmp
xor
bound
jmp
mov
sub
outs
jecxz
jbe
mov
sar
xor
mov
js
push
jae
mov
outs
jle
call
xor
cmp
xchg
dec
shl
jl
and
test
xor
repnz
pushf
dec
mov
movs
mov
bound
pop
stc
jmp
out
inc
add
pop
push
mov
fidivr
pusha
test
cmps
cdq
and
outs
in
xor
daa
es
sbb
aad
enter
call
std
popa
fld
mov
pop
push
mov
cmps
inc
sbb
les
out
and
mov
sahf
sahf
into
stos
test
out
mov
jo
iret
rcr
(bad)
cmp
sub
inc
cmp
repnz
(bad)
int3
push
hlt
jmp
mov
push
hlt
fld
xchg
retf
push
aad
popa
lahf
arpl
mov
fcmovnbe
loope
shl
dec
nop
in
cli
jecxz
or
and
test
stos
mov
or
adc
and
dec
ret
cli
ficomp
mov
and
mov
mov
nop
iret
sbb
rcr
adc
pop
pop
sub
repz
inc
and
ret
and
arpl
dec
aam
dec
lock
jo
sub
stc
sti
or
leave
retf
mov
inc
inc
call
push
adc
inc
mov
mov
not
ffreep
dec
push
adc
push
movs
and
or
adc
push
dec
fwait
in
adc
push
test
push
jb
jbe
or
dec
add
leave
inc
push
aad
int3
sbb
fsubr
mov
mov
xchg
dec
xchg
out
pop
scas
inc
mov
inc
xchg
shl
mov
popf
adc
out
mov
hlt
inc
cmps
or
iret
movs
xor
test
xor
dec
fcomip
and
daa
xchg
movs
(bad)
aam
mov
sub
loopne
cmp
das
out
jbe
mov
stos
jbe
cmps
pop
iret
xchg
pop
stc
cli
cmp
in
and
mov
mov
xchg
and
jmp
jmp
mov
pushf
cwde
mov
sub
xchg
mov
cmps
or
rol
popf
or
out
jo
in
bound
data16
leave
sar
push
xchg
lods
test
pop
cs
pushf
mov
cmps
ins
jecxz
pop
inc
mov
les
push
pop
dec
dec
xor
icebp
sub
in
push
push
movs
je
iret
icebp
ror
mov
lods
xchg
mov
hlt
jae
and
and
dec
jge
jp
push
pminsw
lock
pop
xchg
icebp
sub
mov
cmps
out
pop
adc
loop
push
dec
pop
outs
je
xchg
or
icebp
sbb
cmps
mov
xchg
clc
sub
int3
ins
xchg
in
sub
int3
ja
fist
jns
in
int3
mov
mov
pop
ja
daa
adc
aam
imul
stos
mov
aam
int
movs
(bad)
xchg
add
int
in
cdq
mov
out
std
in
adc
hlt
out
or
cwde
out
cwde
out
inc
ror
xlat
or
or
dec
fiadd
mov
fistp
mov
in
and
cli
mov
or
xor
dec
inc
xchg
cmps
call
add
cmp
out
test
or
scas
add
jbe
or
xor
jmp
add
hlt
sub
dec
jmp
xor
repnz
imul
xor
or
icebp
hlt
pop
push
pop
daa
cs
jno
push
and
out
cld
fs
cli
lods
fild
xchg
lods
shr
out
mov
dec
dec
push
xor
(bad)
adc
nop
ja
daa
(bad)
scas
sbb
pop
cmc
mov
vmwrite
clc
add
adc
jp
pop
mov
daa
jge
dec
adc
sub
(bad)
add
movs
mov
into
and
xchg
or
sub
ins
mov
pusha
in
jecxz
rcr
test
dec
mov
les
pop
sbb
jb
sbb
push
adc
sub
or
sbb
cmp
sub
lea
loope
xchg
imul
fistp
(bad)
mov
test
outs
test
inc
aad
stc
pop
jle
aas
test
popa
in
call
jp
mov
fst
push
dec
imul
cdq
stc
and
enter
xchg
adc
fld
xor
xor
std
push
fstp
fidivr
jbe
xchg
(bad)
xchg
test
adc
cmps
pop
jo
push
iret
sub
sahf
add
mov
fucomp
dec
mov
push
test
js
fst
sub
(bad)
aad
mov
xor
les
mov
adc
xor
pop
pop
ret
test
cs
mov
(bad)
mov
mov
push
jmp
mov
ret
jp
movs
add
jmp
arpl
(bad)
rcl
inc
sti
cli
mov
or
cmc
pop
pop
enter
xchg
push
and
sahf
or
add
mov
mov
loope
and
jmp
ss
jb
inc
mov
push
int
pop
sbb
mov
cld
loopne
je
and
icebp
stos
add
loope
mov
inc
mov
stos
mov
gs
mov
adc
shr
dec
cmps
or
jne
imul
ins
sti
pop
mov
mov
xor
call
dec
mov
or
jo
(bad)
dec
mov
jo
nop
cmps
and
ja
icebp
lods
adc
rol
cmp
dec
add
xchg
outs
addr16
inc
xchg
push
cmc
mov
inc
xchg
outs
lods
test
rcl
mov
push
mov
jb
(bad)
jge
pop
dec
movs
xchg
movs
jmp
and
pop
or
mov
in
stos
inc
fnstcw
push
pop
dec
mov
je
movs
shl
in
cld
lods
dec
loopne
xor
in
shl
iret
xchg
in
mov
dec
imul
leave
lds
xchg
mov
fnstcw
icebp
les
enter
cld
aas
dec
jnp
arpl
xor
out
scas
ret
xchg
sbb
bound
fmul
out
inc
xchg
dec
movs
sub
dec
mov
cmp
outs
scas
arpl
inc
test
sbb
xchg
sbb
jne
pop
test
xchg
jo
cmps
stc
loop
mov
jp
adc
int3
ror
add
mov
jbe
and
pushf
xlat
out
in
jecxz
lahf
mov
cmp
ficomp
cld
clts
int
out
mov
pop
mov
cmc
div
or
jno
jecxz
push
iret
and
gs
jmp
repz
push
pop
call
sub
aas
jp
mov
rcl
push
in
dec
aas
inc
jmp
xchg
jae
jp
mov
push
scas
xor
ja
shl
arpl
xchg
mov
mov
xchg
or
out
pop
xor
mov
push
cli
xchg
sar
es
sbb
mov
ins
mov
jns
out
inc
stos
mov
inc
ins
mov
jb
dec
in
test
pop
fbld
sbb
cmp
cs
enterw
jmp
dec
or
xchg
xchg
or
pop
or
pop
fmul
test
adc
xchg
and
cld
test
inc
add
shl
sub
out
imul
hlt
stc
push
ins
icebp
xlat
adc
sbb
cmp
push
push
in
push
mov
cmp
sub
dec
mov
pop
mov
sbb
daa
jge
popa
cli
je
sbb
xor
xchg
(bad)
aad
push
hlt
mov
fcmovne
mov
cmc
shl
out
sub
xchg
mov
xchg
icebp
cwde
push
dec
jecxz
mov
lahf
xchg
ffreep
fs
mov
mov
jmp
pop
retf
add
test
call
addr16
cs
push
pop
mov
mov
sub
pop
sti
lods
cmp
imul
dec
mov
icebp
xor
adc
jmp
out
inc
movs
in
jmp
push
leave
movs
test
cmp
pop
addr16
jle
mov
in
push
ret
jecxz
loop
sub
retf
loopne
bswap
stos
fadd
lock
out
daa
inc
inc
and
mov
push
aas
sbb
jo
rcr
or
mov
jbe
mov
mov
retf
inc
rcl
cmp
test
dec
pop
sub
mov
cmp
add
test
cmp
mov
add
gs
pop
mov
xor
icebp
lods
loopne
push
sub
sbb
js
xor
dec
mov
pop
and
xchg
dec
lea
and
cmp
adc
pop
adc
adc
aad
test
mov
lods
pop
dec
fdivr
test
repz
ret
(bad)
dec
fild
cmp
mov
lock
inc
sbb
jmp
mov
pop
mov
(bad)
sub
inc
push
loop
mov
pop
aas
jno
mov
add
fs
dec
(bad)
(bad)
out
test
in
adc
and
sub
inc
inc
fadd
fwait
mov
or
(bad)
sbb
jg
mov
pop
mov
shr
pop
mov
sar
push
sub
into
inc
pushf
call
in
leave
mov
push
cmp
and
xchg
stc
cmp
call
ja
pop
sub
xor
daa
xchg
push
or
aam
pop
daa
mov
mov
dec
jge
fistp
fidiv
rcl
pop
fdiv
or
inc
scas
pop
add
(bad)
cli
jmp
std
add
dec
cmp
arpl
(bad)
cli
jae
cmps
mov
int
jle
clc
sar
mov
pop
jae
frstor
push
fucompp
mov
sub
push
shl
or
adc
mov
repnz
std
imul
in
pop
add
clc
xchg
bsf
push
fld
jg
jmp
(bad)
mov
mov
dec
into
popf
push
jb
js
(bad)
sti
cmp
aaa
xchg
add
test
push
pop
and
or
retf
dec
loop
wrmsr
inc
shl
pop
fisubr
aas
mov
and
cdq
adc
outs
mov
cmp
cli
xchg
dec
cmp
bound
sahf
jmp
adc
dec
test
icebp
dec
push
pop
jo
ins
add
and
xchg
jae
mov
xchg
out
movs
std
lea
sbb
outs
aas
mov
push
hlt
retf
inc
aad
pusha
push
hlt
mov
popf
push
mov
shr
add
repnz
dec
pop
jne
retf
ret
or
leave
mov
(bad)
jmp
call
xchg
aad
pop
jp
lds
pushf
daa
inc
add
or
xchg
inc
jbe
cs
xchg
push
pop
xchg
out
sbb
adc
call
add
push
cmp
mov
outs
mov
ins
pop
into
(bad)
jmp
rol
xor
inc
pop
fadd
and
fcom
out
lsl
aas
aas
shl
dec
loop
push
jbe
jbe
adc
jnp
data16
test
(bad)
imul
adc
fcom
add
repz
sar
cmp
mov
push
rcl
popf
or
cwde
popa
(bad)
push
(bad)
xchg
pop
dec
lds
mov
cli
jnp
dec
dec
inc
jbe
pop
dec
cdq
bound
dec
mov
cmp
lods
call
data16
push
and
xor
inc
aad
leave
dec
cmp
xchg
pop
idiv
movs
inc
pop
mov
or
ficom
out
fs
into
movs
aas
adc
jno
pop
es
dec
nop
dec
cmps
or
sbb
pushf
sub
or
and
mov
loope
sbb
inc
das
imul
fwait
ins
icebp
popa
inc
data16
retf
cmp
push
jmp
call
sub
addr16
mov
lahf
xor
das
out
and
mov
gs
retf
sub
(bad)
add
jne
sbb
cmp
inc
cmc
sar
pop
shr
xchg
inc
es
fisttp
sub
(bad)
mov
cmp
inc
cwde
or
adc
push
test
clc
imul
and
sub
retf
ffreep
in
push
(bad)
mov
jns
jge
adc
retf
inc
inc
push
clc
jp
push
mov
xor
sbb
movs
fimul
lea
pop
inc
out
mov
js
mov
bound
or
stos
mov
ja
std
push
xchg
sub
pop
dec
rep
or
(bad)
movs
fwait
js
mov
mov
cmp
xor
std
mov
ins
inc
jae
sbb
mov
stos
jb
int3
pop
ret
pop
push
fisttp
xor
outs
sub
sub
push
pop
fwait
es
call
dec
js
push
(bad)
je
nop
pop
mul
xchg
ret
das
add
dec
mov
out
mov
repz
add
clc
jecxz
jnp
push
pop
neg
mov
cmp
rol
or
xchg
jb
loope
sbb
inc
fisub
fdiv
outs
scas
cli
mov
cmc
jo
sbb
mov
dec
loop
jle
dec
mov
inc
or
pop
xchg
fidiv
lods
cmp
std
mov
cmp
and
test
addr16
sar
cmp
in
dec
cdq
jnp
xchg
push
clc
out
cmc
pmulhw
dec
(bad)
xor
push
cs
dec
pop
cmps
or
lods
cmp
outs
rcr
xchg
mov
pushf
aam
dec
push
nop
sub
(bad)
loopne
jp
sbb
cmp
or
xchg
push
sbb
movups
test
mov
or
daa
aaa
mov
lods
add
sbb
add
inc
sbb
pop
mov
mov
xchg
push
mov
mov
xor
mov
icebp
bound
push
sub
add
or
mov
push
push
js
add
jmp
pop
ss
adc
std
dec
jp
sub
xlat
cmp
jbe
int3
cmp
leave
out
sti
jmp
adc
imul
ret
stos
cmp
fidivr
push
push
dec
dec
adc
clc
inc
mov
pusha
fild
xor
pop
pop
mov
call
imul
inc
pusha
je
jne
mov
rcl
rol
dec
xchg
sbb
mov
jb
lds
mov
aaa
pushf
sub
add
cmp
push
ins
mov
mov
push
inc
mov
pop
xchg
xor
add
call
ret
cld
aad
add
push
adc
inc
dec
fisttp
int3
stos
mov
or
or
cmp
ds
imul
or
das
aam
jnp
add
jae
xor
outs
xor
das
mov
jbe
arpl
outs
mov
mov
xlat
es
int3
inc
les
add
or
scas
jbe
sub
push
sbb
sub
scas
and
aas
in
inc
test
fwait
cmp
test
hlt
and
jecxz
je
inc
xor
dec
or
fild
into
mov
mov
pop
xchg
mov
xor
sbb
loope
cld
ins
into
scas
mov
into
mov
sub
push
or
jns
mov
test
out
mov
out
sub
mov
push
dec
daa
ret
sar
ins
aas
or
and
addr16
push
mov
xchg
outs
lds
xchg
fistp
dec
xchg
outs
mov
gs
out
cmp
in
(bad)
cmp
nop
sahf
test
and
sbb
repz
mov
shr
mov
dec
mov
xchg
sbb
pop
aas
mov
mov
shl
(bad)
scas
jnp
dec
ins
mov
or
push
jae
jmp
adc
jl
xchg
test
sub
jge
enter
in
out
xor
push
(bad)
or
std
mov
sbb
aam
fstp
push
iret
push
push
inc
cmp
test
outs
movs
fsubr
sub
pop
xchg
(bad)
pop
retf
mov
arpl
jo
jl
and
call
popf
xchg
clc
xchg
jne
inc
push
imul
js
test
jae
pusha
mov
popa
test
inc
push
jae
mov
xchg
sub
shl
dec
sub
mov
lea
xchg
and
sbb
into
mov
sbb
mov
mov
call
mov
movs
ins
push
push
pop
mov
sbb
push
jecxz
mov
das
jb
add
cwde
or
and
cld
stc
daa
dec
sbb
push
test
inc
into
popf
int3
and
aas
clc
sbb
loopne
lods
inc
call
push
mov
imul
pop
(bad)
cmp
jbe
(bad)
mov
sbb
fwait
popa
(bad)
iret
(bad)
fldcw
adc
js
push
xchg
movs
cmp
(bad)
pusha
js
dec
inc
xchg
sbb
sbb
mov
pusha
lea
xchg
pop
pushf
xor
loop
jle
fdivr
rol
inc
jmp
inc
retf
adc
inc
push
call
movs
pop
xchg
push
call
xor
sahf
dec
and
push
loopne
inc
mov
jmp
jg
(bad)
(bad)
mov
ficomp
cmps
inc
sti
outs
inc
or
fst
xor
mov
call
mov
add
out
repnz
sti
inc
mov
loope
inc
rol
call
cmp
(bad)
fidivr
jmp
fdiv
add
and
outs
jno
pop
sbb
fucomp
jb
sbb
or
pop
lea
xchg
fist
into
xchg
outs
or
into
aaa
jb
mov
mov
movs
dec
inc
ret
ror
adc
push
pushf
jle
mov
cmc
sbb
lods
push
jg
adc
mov
aaa
(bad)
out
ins
adc
retf
push
lods
pusha
mov
cli
push
and
stos
shr
es
mov
stos
ret
test
xor
cmc
mov
jne
jbe
fdiv
mov
das
(bad)
test
add
mul
das
mul
out
push
jno
push
pusha
shl
cmc
jmp
movs
mul
mov
pop
cmp
dec
mov
inc
in
adc
sbb
test
lods
adc
dec
cli
mov
inc
sub
sbb
movs
pop
xchg
ret
xor
inc
cmc
xchg
or
push
mov
mov
dec
leave
iret
(bad)
jno
pop
test
dec
mov
dec
add
or
lock
mov
repnz
sub
sbb
add
call
gs
loope
dec
jg
cmp
je
daa
(bad)
sbb
adc
fwait
retf
or
mov
jmp
dec
jnp
ror
scas
(bad)
into
retf
inc
mov
push
fstp
pusha
dec
dec
and
aad
aad
sub
jnp
mov
lea
ret
(bad)
cmp
inc
repnz
cmc
xor
enter
pop
mov
inc
or
adc
fistp
xchg
inc
mov
fsubr
jb
sbb
repnz
(bad)
(bad)
call
cdq
repz
ret
pusha
cmp
in
jmp
push
sub
and
inc
icebp
jle
scas
out
hlt
sub
fnstenv
mov
fsub
push
fwait
les
xchg
sbb
test
loope
adc
mov
loopne
xchg
pop
xchg
or
dec
mov
add
mov
add
cmp
test
retf
xor
sbb
ret
retf
dec
(bad)
xchg
inc
pop
aam
fild
loope
repz
xor
fist
cdq
xchg
push
push
and
addr16
pop
pop
mov
fsubr
xchg
addr16
xchg
popf
push
mov
stos
mov
dec
in
mov
and
or
mov
mov
aaa
push
rcl
mov
sahf
jnp
popf
mov
cmp
out
sahf
jb
push
cdq
add
and
xlat
arpl
lds
jecxz
pop
sbb
out
aam
adc
dec
std
push
adc
repnz
sub
mov
outs
push
mov
mov
sbb
xchg
outs
mov
mov
push
(bad)
out
and
shr
push
ficomp
dec
popa
arpl
sti
(bad)
es
fst
mov
mov
add
cmp
and
comiss
shl
and
push
sbb
call
dec
arpl
inc
add
pop
adc
jmp
pop
stos
xor
add
dec
outs
dec
mov
in
ds
push
scas
xor
cmps
sub
jo
gs
dec
pop
dec
push
es
fsubr
xchg
iret
aas
icebp
push
or
dec
test
xchg
rol
ss
adc
int3
addr16
je
lods
jne
sar
jl
jb
push
lahf
and
adc
cmp
cwde
sbb
aad
cmps
jg
cmp
rol
sar
icebp
js
vfrczss
hlt
xchg
mov
mov
push
std
mov
fs
ds
ror
shl
xchg
sar
jbe
pop
cmp
neg
cmp
mov
cmps
cmps
scas
jb
and
pop
dec
cmps
xchg
cmp
xchg
sub
cmps
pop
and
sub
push
je
xor
or
cdq
add
mov
cmp
sar
cld
fld
call
xchg
les
xchg
sahf
push
dec
push
mov
ret
and
(bad)
stos
or
mov
outs
inc
addr16
inc
test
sbb
test
out
rcr
xchg
clc
fnsave
inc
in
dec
inc
mov
outs
mov
mov
mov
ds
inc
jb
jcxz
dec
(bad)
out
movs
mov
loope
sahf
fwait
call
cmp
outs
pop
cmp
fldenv
add
sar
mov
add
cwde
(bad)
out
inc
lods
dec
je
aas
adc
xor
sti
call
out
cli
int
add
outs
and
jne
sahf
arpl
outs
sar
dec
pop
out
movs
in
and
pop
fs
add
call
ffreep
inc
in
jl
scas
or
jecxz
adc
and
in
mov
cmp
retf
test
jmp
sub
or
xchg
fsubr
retf
xchg
xchg
fidivr
mov
div
fdivrp
dec
sbb
mov
jno
cmp
add
adc
xor
mov
or
xchg
inc
les
cmps
mov
or
pop
mov
cmp
mov
xor
sub
pushf
loopne
stos
out
fisubr
hlt
stos
(bad)
mov
sbb
(bad)
ss
push
in
mov
imul
and
push
and
outs
cmp
sub
adc
cmp
rcr
cmps
xchg
xor
in
lods
jge
push
cmc
repnz
loop
mov
jp
fs
or
out
mov
fucom
mov
ins
fnstenv
sub
cwde
loope
inc
sti
test
int
dec
mov
(bad)
(bad)
cmps
push
push
dec
xchg
sub
rol
into
pop
les
xor
lods
loopne
cwde
xchg
pusha
ror
sub
mov
dec
les
jl
cli
push
inc
sub
pop
adc
sbb
dec
arpl
gs
sbb
in
icebp
sbb
sub
mov
inc
pop
outs
test
lea
push
or
js
xchg
scas
xchg
pop
test
retf
sbb
lock
pop
cmp
xor
test
stos
call
push
cdq
jle
xchg
pop
(bad)
out
fcmovbe
dec
dec
fisubr
sub
cwde
xchg
and
dec
adc
les
fs
xchg
or
imul
(bad)
push
mov
push
xor
cwde
xchg
jae
xchg
mov
data16
adc
xchg
sub
sbb
mov
sbb
xor
loope
mov
and
adc
outs
jmp
paddsb
inc
lods
dec
js
fs
repz
cmps
mov
adc
add
add
loop
icebp
dec
arpl
shl
aas
sbb
fcomp
stos
dec
cdq
inc
sti
lods
pop
fistp
jne
es
out
mov
push
test
mov
or
je
repz
fmul
xchg
cdq
sar
dec
test
jae
push
mov
lods
adc
adc
jns
and
pop
mov
jmp
xchg
and
and
in
jmp
and
cdq
scas
jle
cli
pop
sar
outs
sbb
jns
mov
jmp
icebp
lods
push
jo
dec
xchg
push
pop
pushf
mov
or
sub
mov
inc
dec
xchg
jmp
or
jl
lds
(bad)
pop
xor
sar
mov
add
or
aas
dec
xchg
mov
ficomp
arpl
sbb
popf
sub
dec
and
stc
int
fdivr
dec
jns
out
xchg
outs
rol
loopne
and
mov
xchg
ins
pop
inc
mov
jnp
pop
ret
das
fsub
jb
je
stos
out
out
and
lds
push
or
pop
sbb
fwait
mov
ss
cmps
int
xchg
push
xor
data16
pop
pop
and
aas
call
xor
push
loopne
in
leave
ins
mov
pop
pop
sub
pop
fild
pmaxsw
ins
mov
out
mov
ficom
aad
call
cmp
xchg
fistp
mov
add
pop
inc
xchg
push
push
jmp
aad
push
adc
aas
adc
leave
jecxz
jmp
push
jmp
jmp
lods
mov
push
mov
push
inc
xchg
mov
mov
pop
sub
inc
ret
outs
pop
dec
ss
or
jmp
shr
and
mov
inc
loopne
inc
push
add
aam
dec
push
push
jae
repnz
pop
add
adc
(bad)
dec
adc
sbb
cmp
loope
ret
pop
mov
cdq
push
neg
les
push
sbb
mov
add
call
(bad)
fs
mov
push
je
pusha
mov
jbe
mov
mov
add
jle
scas
cmp
out
addr16
cmc
jge
dec
out
mov
xor
loopne
popf
aad
pushf
jp
jmp
inc
cmp
jecxz
sbb
cmps
bound
scas
imul
movs
sbb
mov
dec
sub
outs
mov
pop
shr
sbb
jbe
push
adc
sub
loop
arpl
and
fimul
mov
into
xor
xor
test
add
mov
hlt
pop
enter
fist
lods
mov
pop
js
sti
xor
pop
icebp
call
in
mov
jmp
jb
cs
scas
inc
pop
dec
inc
gs
push
scas
sub
mov
fsin
ss
stos
ja
retf
jecxz
loope
mov
push
add
addr16
or
das
mov
mov
dec
mov
imul
xchg
rol
push
sar
and
fisubr
adc
and
les
fistp
cmps
and
ret
fbld
or
jns
pop
inc
cdq
jg
or
in
cmp
mov
pushf
sub
aas
sub
xchg
dec
repnz
retf
or
push
mov
idiv
xchg
fistp
add
ins
ror
mov
pop
int
stos
outs
fcomp
test
sbb
xor
cwde
mov
fisubr
inc
adc
jg
and
into
xchg
dec
pop
addr16
cmp
dec
imul
mov
push
xchg
xchg
pop
add
jmp
sub
xor
ret
std
aad
cmp
mov
cmps
dec
adc
adc
mov
inc
inc
inc
pop
mov
xor
mov
inc
je
sbb
fwait
dec
mov
cmp
inc
xor
sahf
sti
mov
dec
stc
frstor
imul
ja
adc
sbb
mov
jns
xchg
mov
mov
stc
int3
push
or
mov
inc
adc
lea
mov
mov
cmp
aaa
inc
sub
jle
sbb
cmp
cmc
xor
outs
xlat
dec
mov
outs
dec
int3
xchg
jp
ror
push
sar
cdq
int3
arpl
lahf
mov
out
mov
jae
int
adc
out
mov
fstp
xor
jmp
or
js
out
xor
cwde
push
(bad)
jmp
mov
sub
jg
imul
fidiv
mov
iret
cmp
mov
lods
ret
pop
fist
(bad)
ja
add
mov
mov
loopne
xchg
dec
sub
cs
test
stos
stos
retf
and
lea
mov
iret
dec
add
(bad)
retf
push
sub
cdq
mov
in
add
mov
pop
call
pusha
movs
lock
dec
pop
lods
inc
arpl
sub
sbb
and
not
push
jl
(bad)
add
ds
mov
fild
(bad)
in
push
outs
cmc
cwde
fadd
xchg
cs
imul
cmps
pusha
pop
add
xor
data16
pop
mov
ja
call
sbb
fdivp
lock
mov
sbb
imul
mov
scas
and
leave
rol
aaa
inc
mov
ins
mov
push
jp
ret
dec
stc
retf
fwait
sbb
mov
test
mov
repnz
lods
in
xor
das
mov
out
dec
popa
inc
jbe
mov
sub
sbb
xchg
sbb
dec
pop
xchg
pop
and
and
or
in
jns
jnp
lea
and
mov
dec
imul
mov
push
jp
int
outs
jle
loop
mov
lock
rcl
movups
dec
dec
dec
sub
xchg
jnp
cmps
iret
arpl
nop
out
cdq
add
cs
ret
and
push
push
(bad)
mov
jg
shl
sbb
dec
jg
xchg
stos
and
sub
scas
mov
ss
icebp
cdq
and
imul
xchg
stos
cmovge
jmp
lods
cli
add
hlt
loop
call
fcom
lods
mov
fldcw
not
ss
cld
push
sbb
scas
and
cld
dec
repz
sbb
in
push
cmp
add
ins
cmps
movs
in
xchg
adc
adc
(bad)
(bad)
jle
xor
ss
pop
shl
sub
jp
aaa
das
popa
jno
outs
adc
fild
pop
cmp
ins
mov
sub
adc
les
xor
inc
mov
mov
ins
or
mov
pop
push
jne
adc
rcl
mov
cmps
dec
push
imul
or
pop
xchg
pop
sub
xchg
cld
jns
sbb
mov
sub
mov
and
sar
dec
xchg
out
mov
mov
lea
in
stos
cmp
call
mov
shr
mov
clc
jne
mov
adc
sub
pushf
sub
jo
punpckhdq
scas
rcl
sub
jo
cwde
push
mov
hlt
rol
mov
add
mov
aad
fistp
xor
outs
cli
sub
jge
or
mov
pop
add
pusha
movq
pusha
jl
fsub
cs
xor
ds
jp
das
inc
mov
xor
(bad)
stos
jnp
jo
bound
popa
and
push
pop
popw
out
cli
in
sub
sub
(bad)
jmp
in
dec
xor
sar
js
in
inc
sub
(bad)
fstp
in
enter
cmp
mov
into
icebp
adc
pop
out
inc
xchg
jnp
or
clc
sub
hlt
stos
scas
leave
add
mov
add
push
adc
in
mov
test
fisttp
(bad)
adc
lods
fcmovne
xor
dec
xchg
stos
jb
aam
or
pop
cwde
lods
(bad)
xchg
push
cwde
push
test
push
cmp
mov
in
jo
xor
sub
sub
cwde
and
loop
shr
sbb
lahf
nop
imul
ror
dec
cmps
adc
ret
sti
xchg
dec
sbb
(bad)
dec
mov
out
mov
(bad)
inc
fs
lock
(bad)
out
pop
push
in
add
std
dec
mov
mov
sub
mov
arpl
or
(bad)
and
daa
adc
jge
int
and
invd
xchg
inc
sub
out
jg
adc
fwait
dec
int3
dec
mov
repz
icebp
cmps
sub
es
pop
and
icebp
xor
jl
pop
and
add
pusha
jb
adc
xor
xchg
pop
dec
(bad)
rol
ins
inc
in
or
and
dec
jle
stc
sbb
ror
outs
cmove
stos
xchg
sub
out
and
retf
push
cs
sbb
push
jle
adc
mov
mov
sbb
and
pop
adc
je
sbb
push
shl
add
scas
xor
cmp
push
in
xchg
dec
push
jae
icebp
pop
sub
jmp
add
and
sbb
sub
(bad)
ror
mov
jmp
mov
not
outs
mov
test
mov
shr
repnz
mov
dec
(bad)
jns
pop
xor
push
adc
out
or
and
js
int3
push
cmc
cs
cmp
(bad)
mov
pop
jo
and
stos
mov
inc
pop
stc
neg
scas
icebp
das
loop
mov
iret
adc
or
test
data16
push
aam
retf
inc
push
movs
jg
cmp
mov
ror
or
sub
inc
jne
mov
rcl
ficomp
pop
add
dec
rol
pusha
aam
pop
add
outs
xchg
cdq
xchg
xchg
test
retf
push
mul
pop
cmp
shl
xor
cmps
mov
dec
jmp
ins
jp
call
mov
sub
xor
sub
mov
lods
mov
cli
fs
lods
cmp
mov
test
jl
nop
jge
sbb
cli
es
std
outs
test
pop
adc
lods
fild
ds
push
ds
sbb
fcomp
mov
movs
pop
mov
das
inc
dec
push
aam
aam
es
sbb
or
push
push
and
pop
inc
clc
daa
sub
stos
repz
xchg
in
dec
sar
lahf
mov
ror
add
ja
jmp
shr
mov
adc
lock
mov
xor
mov
std
sub
cmp
fidivr
and
cmp
sbb
arpl
addr16
sar
cmp
and
adc
sub
bound
pop
dec
adc
mov
mov
daa
mov
pop
stc
add
push
sub
movs
jno
pusha
stos
or
in
mov
add
and
jmp
ds
sbb
cmp
rep
dec
or
test
imul
mov
out
js
jmp
clc
pop
or
jb
push
mov
mov
xchg
mov
int3
inc
sub
ret
pop
xchg
jl
push
arpl
sbb
js
add
inc
mov
(bad)
jmp
rol
popf
frstor
mov
inc
push
dec
or
mov
outs
dec
xchg
xchg
int
dec
pop
add
mov
adc
loopne
ins
inc
mov
cmp
dec
add
mov
sbb
in
xchg
mov
or
push
xchg
nop
outs
dec
mov
cmc
dec
push
(bad)
push
mov
add
pop
aam
daa
aam
repnz
xchg
out
push
mov
lods
mov
(bad)
gs
xor
pop
pop
push
gs
sbb
fistp
(bad)
std
lea
inc
jge
imul
mov
adc
add
push
bound
in
dec
jae
add
lea
push
jb
jg
pop
aas
js
xor
shl
and
fisubr
out
fs
mov
jmp
fisttp
fdivr
xor
jg
adc
jno
pop
test
shr
hlt
pshufw
sub
ror
push
movs
(bad)
fnsave
lods
inc
inc
dec
popa
cvttps2pi
mov
mov
mov
push
cmp
cmp
mov
in
inc
xor
xchg
push
mov
les
repnz
inc
cmp
das
xchg
repz
imul
(bad)
sub
fist
retf
dec
cmp
cs
test
mov
ds
stc
scas
ins
clts
mov
inc
lds
addr16
mov
sbb
je
and
mov
and
lock
stos
pusha
jbe
xor
xchg
dec
ffreep
cmp
pop
or
lds
cmp
je
retf
iret
iret
xor
jmp
xchg
cwde
inc
inc
popf
fadd
bound
lahf
or
pop
fisubr
(bad)
and
pop
out
inc
das
add
ds
test
shl
and
rcl
mov
lahf
test
es
sbb
in
sub
or
dec
dec
std
sub
repnz
aaa
cld
mov
lock
cmp
mov
sbb
ja
xor
xor
jmp
adc
(bad)
adc
jo
aam
add
jno
jns
xor
adc
loopne
(bad)
pop
(bad)
sub
push
jae
fucomip
mov
call
bound
and
hlt
sbb
push
loop
pop
cmp
or
mov
jbe
mov
std
cli
retf
imul
div
or
in
mov
in
dec
jae
(bad)
es
xchg
jae
out
cmp
cmp
add
sub
lahf
xchg
cdq
mov
jno
lahf
push
dec
sub
(bad)
nop
dec
or
mov
cmc
leave
ins
pop
ins
div
and
ja
jmp
icebp
pop
mov
or
(bad)
sbb
imul
cmp
adc
push
jle
fistp
enter
scas
mov
retf
lahf
mov
or
dec
out
sub
(bad)
out
mov
out
pop
jbe
aad
add
ret
lds
mov
add
xchg
mov
aam
outs
ss
push
call
test
idiv
inc
cmps
pop
cmp
xor
xor
fst
jp
adc
pop
lea
sahf
(bad)
xor
es
out
mov
jge
cmp
mov
adc
mov
xor
lock
xchg
test
test
add
push
jmp
fisubr
aad
jmp
mov
pop
adc
mov
sub
cwde
xor
ins
cmp
adc
int
pop
ins
mov
shl
sub
imul
lods
xor
lahf
out
mov
add
ja
push
out
push
jp
fisubr
loope
out
cmp
mov
adc
cmp
out
lods
jge
jo
ins
in
dec
mov
jmp
pop
mov
or
and
int
add
add
sub
cmp
outs
div
and
or
mov
std
ja
mov
add
outs
xor
fimul
pop
cmp
add
push
gs
aaa
cdq
sbb
push
test
mov
sti
mov
cld
pop
lock
mov
lock
adc
loop
push
sbb
iret
lods
scas
loop
mov
jo
lds
jecxz
(bad)
mov
jb
push
imul
sub
test
inc
(bad)
addr16
inc
or
pop
enter
or
sub
shr
adc
mov
pop
xchg
mov
add
into
xchg
cli
adc
(bad)
mov
stc
and
mov
push
adc
fild
add
ret
inc
sar
jbe
imul
cmp
mov
pop
sub
lahf
mov
and
fistp
adc
lahf
inc
inc
mov
bound
std
mov
inc
mov
sahf
inc
mov
xchg
or
mov
inc
outs
(bad)
mov
jb
mov
rol
or
sbb
dec
ss
mov
mov
popa
xor
iret
arpl
push
inc
mov
dec
out
ret
jns
pop
aas
fwait
pop
xor
pusha
or
std
outs
jb
pop
pop
in
imul
stos
add
scas
push
test
(bad)
into
frstor
push
cmc
add
sbb
or
adc
pop
fwait
scas
xchg
cmc
push
es
and
(bad)
ror
dec
push
enter
int3
out
imul
sub
out
add
and
mov
pop
pop
cmp
aas
sbb
sub
inc
xchg
mov
dec
xor
pop
push
push
adc
shl
jge
dec
adc
xchg
inc
mov
into
sar
adc
jl
test
dec
retf
hlt
dec
xchg
scas
push
aad
aam
and
xor
jno
inc
mov
push
jle
test
jns
dec
test
rol
ror
mov
mov
mov
mov
mov
lods
mov
jae
inc
out
inc
mov
sbb
push
call
or
std
mov
dec
jnp
repnz
jmp
leave
push
bound
or
jae
rol
mov
xadd
push
dec
adc
mov
or
or
mov
popa
dec
sbb
mov
cmps
inc
popf
aas
xor
xchg
pop
mov
mov
loope
(bad)
jae
inc
int
push
aam
popa
mov
loop
std
jp
or
inc
scas
gs
sub
mov
jle
cmp
fbld
and
mul
sbb
xchg
dec
je
jb
lods
mov
sub
loopne
pop
xchg
jns
scas
push
and
std
retf
mov
ja
sub
inc
push
fisttp
movs
fistp
push
mov
ja
into
(bad)
and
dec
stos
push
jnp
inc
repz
cmps
repz
xor
mov
sub
outs
out
je
bound
sbb
fcomp
call
sbb
jno
adc
and
leave
xor
and
pop
jno
add
ins
cmp
jmp
xchg
stos
mov
cmp
rcr
iret
fdivr
pop
in
icebp
into
pop
sbb
out
and
stc
add
in
enter
xchg
mov
xor
fld
jns
jmp
neg
jmp
cld
pop
jg
fs
add
test
popf
xchg
(bad)
dec
or
pop
jae
mov
xchg
imul
mov
sar
pushf
rol
out
mov
xchg
enter
sahf
mov
jg
stc
int3
lods
retf
and
leave
mov
add
lea
xchg
xor
mov
cli
pop
xor
mov
cmp
sbb
sbb
iret
shl
cs
and
int3
inc
mov
xchg
xor
sbb
xlat
ficomp
cli
xlat
sbb
movs
retf
mov
mov
fistp
pusha
lahf
into
sbb
dec
and
imul
imul
ins
xchg
push
cmps
push
subps
cmp
pop
add
std
pop
clc
sar
int3
xchg
inc
dec
cmc
retf
adc
pop
adc
aaa
mov
sub
cmp
push
xchg
add
and
hlt
fstp
cmp
stc
or
xchg
(bad)
lods
fimul
adc
imul
movs
mov
pop
mov
and
xor
fnstsw
adc
and
test
lock
sbb
retf
lods
or
sub
xstore-rng
cmps
xchg
in
popa
xchg
in
cmps
and
imul
inc
adc
call
xor
sbb
xchg
mov
cmp
mov
push
cmp
or
cmp
sub
jnp
loop
and
jp
ja
xor
cmps
test
adc
xchg
leave
xchg
loop
push
popf
cld
jg
out
mov
push
xchg
push
lea
jb
mov
sbb
xchg
dec
jbe
std
xor
sar
inc
pop
jp
int
and
jg
in
cmps
adc
jp
imul
sbb
idiv
lahf
cmp
sti
push
push
fwait
push
imul
shl
jle
mov
lea
or
mov
dec
cdq
mov
cdq
xchg
sub
sbb
sbb
call
xchg
fldenv
sub
test
sub
icebp
adc
loopne
outs
pop
cmp
cmp
cmp
popf
jmp
push
ss
mov
xchg
mov
jb
fiadd
jo
fild
and
out
lea
jns
or
gs
stos
(bad)
dec
jg
test
cmp
xchg
pop
cmps
fnstenv
pop
sbb
adc
jnp
repnz
ss
jle
sar
cmp
inc
mov
xchg
adc
arpl
in
mov
fs
(bad)
retf
into
in
loope
inc
mov
mov
dec
in
lahf
movs
lea
mov
mov
mov
fyl2x
cld
sbb
mov
ffreep
leave
mov
pop
mov
je
pop
push
test
xchg
stos
inc
outs
mov
push
mov
push
rcl
adc
mov
lods
push
xchg
sub
outs
and
pop
mov
pushf
and
push
xor
mov
sbb
add
jns
fld1
inc
inc
xchg
test
add
or
or
push
xlat
push
cmc
test
loope
fld
xor
mov
mov
ret
shl
xor
push
loope
popa
pop
sbb
xor
jle
pop
test
dec
inc
adc
inc
dec
cdq
jne
in
or
push
sub
jno
aam
lds
bound
mov
repz
test
jmp
into
dec
fld
add
scas
inc
rcr
and
test
xchg
lds
mov
pop
sub
xchg
je
add
pop
jl
push
pop
es
pop
mov
mov
int3
and
jp
sbb
inc
adc
rcl
jmp
stc
push
sub
retf
shl
inc
cmp
add
outs
ds
out
loopne
lahf
(bad)
mov
test
jp
(bad)
or
out
repnz
jns
or
xchg
addr16
faddp
arpl
inc
push
test
cmp
inc
call
xlat
bound
mov
xor
sbb
in
ret
dec
sbb
pop
xchg
push
sub
jle
retf
sub
mov
xor
jle
mov
int3
mov
and
pop
(bad)
enter
imul
xor
(bad)
jmp
sbb
in
xchg
adc
mov
add
retf
push
cmp
scas
dec
sub
movs
or
add
push
jae
inc
cwde
pop
in
imul
sub
or
(bad)
jnp
and
ror
jno
int
jmp
dec
call
loopne
test
push
arpl
cmp
xchg
mov
icebp
mov
ret
test
fdiv
adc
xchg
cdq
(bad)
fcomp
lahf
lahf
mov
mov
cdq
out
push
cmps
sahf
dec
in
in
mov
scas
sbb
cmp
mov
mov
sub
out
xchg
dec
scas
ds
cmp
xor
push
jbe
enter
pop
jno
int
mov
sub
add
jmp
push
pop
or
cmp
cli
cmp
add
push
adc
mov
mov
and
push
retf
jl
inc
fstp
mov
into
or
cmp
(bad)
stos
(bad)
dec
mov
pop
imul
aas
(bad)
ja
xor
ret
jb
ficomp
pop
xor
in
sbb
pop
adc
psraw
sbb
jns
adc
fwait
xchg
pop
xchg
ss
in
sub
sbb
cli
jle
sub
sub
mov
jl
mov
aad
and
test
iret
hlt
cmp
mov
mov
push
inc
call
(bad)
mov
sbb
stos
push
imul
mov
out
xchg
pop
jmp
imul
jmp
imul
jae
ficomp
cs
adc
jb
or
xor
inc
mov
push
push
out
pop
les
cdq
adc
int
add
in
push
mov
dec
in
clc
in
pop
jl
adc
pushf
jp
or
dec
bound
adc
mov
cli
es
sbb
jge
pushf
jae
nop
outs
or
fild
int
(bad)
fdiv
std
test
ret
adc
rol
ss
xchg
fwait
jae
cmp
ror
xor
jg
fs
js
ins
test
lods
in
loope
cmp
jecxz
mov
mov
popa
outs
retf
push
pop
imul
shl
mov
sahf
pop
gs
adc
int
mov
not
jg
neg
mov
enter
pusha
jne
(bad)
xchg
rol
mov
std
shr
mov
mov
scas
and
dec
(bad)
in
mov
add
jo
xor
dec
cmps
sbb
jmp
pop
inc
ins
outs
sahf
jo
pop
(bad)
fwait
push
das
sar
and
retf
jne
mov
or
push
pop
push
cmps
mov
ins
push
cwde
arpl
sbb
jnp
jns
int3
or
mov
in
mov
popf
xchg
jmp
jmp
and
lahf
stc
sub
fcomp
out
mov
in
mov
cmp
inc
dec
arpl
enter
sub
jo
mov
push
xchg
mov
hlt
cmps
ret
pop
inc
leave
sahf
imul
jle
cs
mov
xchg
xor
test
mov
shr
jae
enter
daa
in
mov
pop
pop
push
lds
jmp
xchg
icebp
leave
jmp
or
push
shl
out
sub
and
push
mov
shl
pusha
cmp
push
pop
add
mov
jbe
mov
shl
push
jg
ss
sbb
push
xor
outs
stos
mov
jns
stos
sbb
push
hlt
jns
mov
(bad)
and
pop
mov
aaa
dec
xchg
shl
sbb
xlat
sti
ret
pusha
sahf
in
push
pop
cmc
test
sbb
ror
(bad)
jge
mov
cmp
push
and
mov
cmps
scas
dec
add
dec
pushf
pop
mov
mov
cmp
xchg
and
pop
xor
std
add
jb
pushf
xor
in
out
mov
lock
popf
ret
xchg
and
cmps
aas
mov
(bad)
pop
movs
adc
cld
jae
test
ret
sub
adc
jecxz
xchg
neg
fimul
cmp
or
loop
je
cdq
fidivr
pusha
aaa
push
xor
pop
std
sbb
adc
imul
xor
ret
or
repz
(bad)
std
jae
js
ins
mov
pushf
in
push
fldcw
loopne
fs
adc
push
or
mov
add
inc
mov
lock
mov
push
stos
js
dec
jo
cld
shl
cmps
or
pop
mov
popf
and
pop
inc
dec
mov
xor
jmp
cmp
sar
dec
hlt
xor
dec
ror
addr16
jno
cmc
jmp
mov
sub
lods
inc
pop
scas
jno
xchg
imul
dec
or
inc
mov
adc
enter
or
in
jno
sub
sub
jl
xor
or
push
outs
repz
pop
add
fldpi
and
push
or
fimul
les
(bad)
or
cmp
gs
(bad)
mov
fild
dec
aam
cmp
(bad)
or
sub
add
jo
imul
xlat
or
scas
mov
fistp
imul
sub
enter
or
mov
or
xchg
or
cmp
aam
arpl
gs
fiadd
xchg
js
add
aaa
nop
adc
jge
add
cmp
test
rol
call
cmovo
pop
sbb
sub
sub
xchg
and
call
push
cmp
movs
mov
jmp
adc
push
push
out
or
or
fld
cs
fwait
push
ja
inc
dec
xor
mov
lock
(bad)
fidiv
push
inc
ret
jne
mov
aad
push
retf
pop
popf
bound
xchg
rol
arpl
int
xchg
sar
sbb
ret
lods
(bad)
push
adc
retf
scas
popa
inc
aaa
pop
mov
adc
stos
fs
in
adc
mov
sti
add
sbb
adc
adc
ins
add
inc
mov
adc
cs
dec
sahf
daa
sub
add
xchg
aas
out
adc
aaa
stos
sar
add
push
in
mov
pop
xor
(bad)
pusha
adc
inc
adc
lock
pop
cmp
push
cmp
or
xlat
cmp
popa
rcr
(bad)
sti
fsubr
repnz
fcmovb
(bad)
clc
adc
stos
add
pop
push
dec
dec
addr16
dec
push
jg
cmp
frstor
sar
xchg
jno
dec
push
adc
jmp
mov
retf
jbe
repz
or
mov
mov
dec
xor
and
in
imul
add
push
xlat
pop
pop
and
inc
jno
sbb
(bad)
or
adc
pop
repz
xorps
mov
push
ret
xor
or
sub
fcom
xor
push
ror
xor
pop
mov
cs
pop
or
and
int3
ss
pop
inc
xchg
cmp
pop
je
jle
sub
enter
outs
mov
mov
xor
push
call
test
imul
push
add
std
scas
pop
js
mov
jno
ret
or
xchg
xor
sbb
sbb
sub
xchg
shr
mov
shr
mov
sub
or
pop
cmc
push
push
outs
mov
scas
sbb
(bad)
adc
dec
and
test
sub
inc
sbb
jecxz
jne
pop
jo
push
scas
push
out
stos
push
(bad)
push
mov
mov
hlt
lahf
fcmove
pop
lds
push
mov
pop
xchg
pop
sub
(bad)
std
rol
dec
jnp
in
test
sub
ret
mov
scas
dec
jle
icebp
push
(bad)
cmp
inc
and
jecxz
xor
fs
sbb
cmps
repz
out
mov
popa
cmp
data16
cmc
popf
mov
pushf
cmp
jns
mov
aad
push
(bad)
loope
daa
fcom
xor
out
test
mov
cmp
cmp
pop
lock
out
sbb
test
fidivr
push
jns
(bad)
push
dec
push
mov
bound
sar
int
cmp
ja
add
mov
pop
outs
fucom
xlat
mov
int3
outs
stc
gs
add
cs
add
and
nop
mov
js
imul
adc
(bad)
mov
cld
pop
sub
icebp
and
neg
in
cmp
outs
mov
inc
xchg
add
push
(bad)
mov
sbb
push
xlat
jle
out
mov
bound
movs
mov
(bad)
and
loop
sub
xchg
push
das
xchg
mov
sub
movs
fdivr
dec
xchg
mov
mov
int3
lea
add
mov
jae
shr
lahf
sub
push
pop
jp
sbb
sub
ja
(bad)
retf
fisttp
sub
pop
lods
es
mov
aas
add
fild
xchg
test
pop
rcr
popf
mov
and
movs
fcom
sbb
dec
movs
mov
fiadd
and
jmp
mov
jns
jp
popa
jle
push
add
mov
cmc
pusha
xchg
imul
pusha
pop
mov
cmp
and
dec
add
popf
mov
or
aas
das
movs
adc
ins
test
test
sub
sbb
arpl
lods
cdq
cmp
sbb
lock
and
out
cmp
adc
xchg
push
into
cld
ror
cmc
xor
outs
aaa
sub
shl
nop
(bad)
mov
in
ins
sbb
cmp
sub
fidiv
adc
cdq
jp
add
dec
cmp
pop
add
dec
pop
in
sub
jmp
xchg
loopne
and
idiv
shl
sbb
leave
movs
cmp
es
out
clc
ret
jb
push
jns
xor
inc
retf
aaa
cs
loope
or
repz
pop
test
sar
fstp
xor
push
inc
jae
xchg
fidiv
dec
pop
call
cs
xor
iret
xchg
pushf
adc
push
adc
sub
sbb
mov
(bad)
loopne
mov
loop
mov
(bad)
cmps
loope
hlt
into
hlt
fldenv
test
jbe
ret
xlat
or
xor
ds
pop
cmc
jo
xlat
jb
lahf
cmps
push
xor
aam
ror
cmp
mov
mov
ja
jp
outs
(bad)
fadd
or
dec
cmp
inc
repz
adc
xchg
mov
fiadd
outs
stos
out
xchg
imul
movs
test
bound
icebp
mov
hlt
sti
add
mov
jne
ins
xor
clc
fst
mov
lahf
fwait
dec
cmp
mov
pop
fisub
jb
sbb
and
xchg
in
push
pop
push
and
xor
outs
cmp
push
sub
mov
sub
jle
jmp
in
mov
pushf
jno
stc
stc
adc
aam
iret
or
pusha
or
sbb
jl
pop
xchg
cmp
xor
dec
mov
test
sub
cmps
mov
in
popf
fcomp
mov
adc
adc
fst
in
and
xchg
lods
fs
pop
and
xor
lods
or
cwde
fdiv
pop
popa
fucomp
pop
pop
fs
and
sbb
or
sbb
into
add
mov
xor
cmp
clc
inc
out
call
pop
fnstenv
loop
pop
or
push
mov
cmp
mov
pushf
mov
test
sub
push
sub
and
mov
push
dec
add
imul
push
mov
adc
jmp
icebp
xchg
adc
and
scas
sbb
cmps
int
dec
rcr
pop
dec
mov
mov
add
sub
ins
sar
out
mov
xor
pusha
movs
inc
nop
xlat
retf
add
jle
call
sbb
push
fwait
sbb
aaa
mov
mov
daa
out
add
xor
ret
jo
(bad)
stc
dec
fwait
and
in
aaa
cld
inc
sub
mov
xchg
mov
mov
or
(bad)
xor
push
stc
inc
mov
test
inc
push
mov
adc
popa
lds
xchg
push
mov
mov
(bad)
repz
mov
mov
adc
cmp
cdq
jno
inc
mov
ret
add
aaa
test
jg
aas
call
jno
jae
inc
jmp
cmps
xor
pop
add
mov
mov
div
in
cmps
mov
sub
mov
and
xor
neg
jo
and
mov
push
call
dec
aad
mov
pop
cwde
jnp
(bad)
cdq
mov
je
mov
ja
lds
rcr
fld
ret
mov
test
outs
test
retf
jns
xor
add
test
add
pop
mov
lods
push
fild
fbstp
hlt
add
and
loop
repz
(bad)
jecxz
xchg
in
inc
pop
(bad)
and
scas
icebp
(bad)
shl
fdiv
add
push
and
or
inc
fbstp
push
outs
les
inc
jo
jle
test
cmc
scas
dec
shl
cmp
mov
and
mov
sub
(bad)
out
sbb
mov
dec
cmps
(bad)
and
dec
pop
ja
add
pop
leave
mov
retf
bound
inc
push
xchg
cmp
fisttp
daa
xchg
std
(bad)
repnz
int3
cmp
pop
int
(bad)
call
push
stos
movs
leave
add
sub
fsubr
add
jecxz
dec
jmp
imul
add
xchg
out
or
scas
out
sub
imul
mov
retf
lds
jne
mov
les
jp
inc
sahf
sbb
jbe
cdq
ins
movs
dec
push
ret
les
cmovns
mov
sbb
mov
xor
and
(bad)
stc
lahf
cli
shl
mov
push
test
and
add
leave
add
and
pop
xchg
xchg
pop
or
sbb
inc
dec
jp
cmp
imul
call
pop
push
push
jg
pop
add
stos
ds
mov
jecxz
scas
xlat
or
jmp
push
test
xchg
imul
jo
push
(bad)
xor
lea
fdivr
(bad)
vpshufd
or
lahf
mov
(bad)
or
sub
in
daa
cs
and
pop
cmp
push
rcl
push
ret
rol
inc
shl
cwde
ja
sbb
nop/reserved
hlt
mov
push
(bad)
jmp
adc
push
pop
jo
pop
icebp
jecxz
cwde
push
sbb
xchg
(bad)
lock
int
lods
jge
xchg
dec
repz
xor
mov
aad
mov
iret
sbb
cmps
push
push
pop
into
fild
cwde
das
sti
push
inc
call
add
loope
fs
sbb
mov
xchg
das
mov
jne
mov
push
int
xor
push
popf
test
shl
and
pop
cmp
hlt
and
(bad)
jbe
mov
mov
sbb
sbb
sub
and
inc
mov
jge
dec
inc
xor
inc
push
rol
adc
xchg
or
and
retf
shr
out
int
sbb
cmp
xchg
cmp
mov
jmp
std
cld
movs
test
popf
sar
pop
shr
sbb
clc
sbb
test
and
in
pushf
mov
xor
hlt
pop
pop
shr
sbb
adc
(bad)
mov
sub
lea
push
sub
nop
ins
adc
not
iret
jmp
aaa
xor
sub
std
dec
fcmovnbe
out
out
sub
out
xor
js
xchg
repz
xchg
test
xchg
add
aas
mov
dec
add
and
xchg
inc
test
cmp
loope
iret
jmp
sti
mov
xchg
and
test
inc
(bad)
pushf
rcr
and
jg
push
sub
cmp
shl
push
ret
inc
loope
dec
add
sub
shl
scas
jle
add
jmp
(bad)
imul
mov
push
cdq
xchg
or
cwde
test
out
or
movs
rcr
inc
xchg
mov
call
xchg
dec
inc
jg
iret
inc
xchg
aas
jae
dec
ss
pop
popa
add
daa
repz
ret
call
pop
inc
bound
mov
adc
pop
int
inc
adc
enter
icebp
in
fs
jecxz
and
out
mov
push
add
retf
lds
sub
ja
mov
enter
movs
outs
mov
cmp
xchg
xor
jmp
out
imul
sub
icebp
lods
mov
add
mov
jnp
popf
ds
hlt
push
test
dec
xor
inc
xchg
and
leave
dec
pusha
call
jle
pop
lods
mov
xchg
addr16
inc
xchg
and
addr16
jg
sti
sbb
aas
inc
repnz
movs
leave
fs
mov
popf
jmp
mov
mov
jno
sahf
lods
push
test
jns
inc
or
lods
mov
imul
inc
xor
lock
adc
out
std
ret
movs
cwde
sub
pop
and
in
int3
lods
jae
icebp
(bad)
sbb
jl
xchg
fisub
dec
fcmove
xor
push
xor
repnz
stc
subps
xchg
out
mov
or
jnp
and
pop
dec
push
add
lds
pop
sub
xor
(bad)
dec
iret
(bad)
js
adc
jnp
js
mov
xchg
mov
jo
stos
js
and
(bad)
fcmovb
mov
jbe
imul
shl
aas
leave
and
mov
dec
hlt
fdiv
lahf
fcomip
push
into
(bad)
jbe
ss
sbb
mov
xor
lds
ds
add
push
(bad)
and
ss
out
mov
xchg
mov
jae
dec
sbb
mov
dec
add
mov
or
(bad)
pop
popf
mov
dec
push
(bad)
aas
and
mov
stc
(bad)
loope
or
xchg
pop
test
or
sbb
inc
push
mov
xor
je
inc
mov
jo
out
fstp
sub
adc
out
enter
jg
or
inc
adc
in
call
push
sahf
mov
addr16
mov
in
jbe
imul
imul
shr
mov
inc
inc
xor
pusha
and
movs
ins
jp
enter
movs
mov
dec
pushf
leave
and
pop
(bad)
jnp
cmp
data16
and
in
(bad)
add
in
mov
jge
push
cmps
fidivr
sbb
cmps
cmp
fidiv
jmp
or
jb
stos
out
mov
jae
add
enter
inc
cmps
inc
xchg
mov
cli
jns
cld
xlat
pop
push
in
stc
clc
fistp
div
or
jne
retf
mov
push
in
sbb
push
pushf
adc
int3
rcr
xchg
fwait
scas
pop
and
mov
add
les
sub
mov
cld
mov
pop
stc
js
scas
(bad)
ins
xchg
test
test
xchg
mov
sub
xchg
xor
jno
or
pop
jp
xor
adc
dec
jl
sub
sbb
cmp
cmp
outs
sbb
sub
sub
pop
adc
out
gs
inc
sub
inc
test
pop
jmp
repnz
cli
lea
cmp
ds
sti
aam
pop
pop
retf
(bad)
daa
fdivr
add
inc
lock
add
mov
lahf
jl
inc
jle
in
std
out
inc
pop
(bad)
xlat
call
fbstp
push
or
mov
xlat
xchg
mov
adc
or
pop
xchg
je
jmp
mov
fcomp
push
jmp
inc
mov
sub
cmps
xchg
pop
pop
xchg
mov
jle
inc
push
adc
sahf
and
out
dec
mov
fidiv
mov
mov
shr
lahf
add
push
(bad)
sub
addr16
(bad)
fidiv
xor
cmp
adc
jp
jne
fldenv
mov
pop
arpl
in
and
or
aad
mov
pop
cmps
push
dec
dec
add
add
popa
rcl
leave
in
shr
movs
popf
ins
retf
movs
dec
into
stos
jne
adc
idiv
mov
xor
inc
pushf
jno
mov
jecxz
xor
inc
adc
test
ds
adc
popa
add
and
imul
xor
lods
adc
outs
icebp
clc
or
xchg
shl
add
sub
ret
and
or
aaa
mov
xchg
jle
lock
sub
sbb
cdq
inc
jns
sub
push
fwait
(bad)
ret
jp
adc
sbb
push
add
mov
pop
cmp
pop
mov
mov
cmp
fild
outs
cmp
sub
popf
xor
arpl
jl
aad
mov
ss
xor
inc
shl
daa
int3
jne
fist
sbb
or
aad
imul
mov
jle
pop
fcmovnbe
mov
shr
or
stos
pop
popa
sub
add
push
adc
inc
lock
outs
inc
mov
mov
scas
retf
not
out
mov
xor
out
test
mul
cmp
outs
cmp
cmp
push
push
fbstp
pop
popa
bound
mov
jmp
sub
cmps
jnp
mov
icebp
cmp
es
sbb
cld
push
rcl
jns
sar
dec
push
xchg
popa
ret
sub
sar
mov
xchg
jns
or
inc
or
xor
daa
cmps
pop
or
xchg
nop
out
clc
cs
adc
cmp
stc
xor
sub
cdq
mov
in
in
(bad)
mov
fisttp
in
in
mov
adc
mov
pop
jns
pop
dec
or
mov
cmp
jge
cmp
jbe
stc
pop
or
add
mov
out
ret
sbb
aad
xor
or
mov
add
lahf
jle
cmp
repz
mov
ins
outs
mov
int
and
retf
jge
lock
arpl
cmp
hlt
sbb
xor
(bad)
fmul
push
imul
xchg
cmps
pop
pop
pop
fcom
das
outs
outs
jne
adc
hlt
mov
push
(bad)
ficom
mov
das
xchg
cwde
mov
ss
cmp
push
cli
xor
mov
push
lea
xchg
int
lods
jecxz
and
xor
scas
cmp
cmps
or
fcomi
aad
xchg
push
aas
movs
fsubr
mov
mov
das
dec
cmp
fcomp
or
inc
rol
sbb
gs
push
cdq
sbb
test
jl
fld
not
inc
es
fmul
or
call
mov
cmp
out
loope
bound
popa
loope
push
enter
or
ret
js
mov
mov
fild
ds
cdq
cwde
mov
mov
mov
shl
cmps
ins
push
ja
bound
into
mov
ficomp
sti
xchg
sahf
mov
jp
push
rol
push
xchg
(bad)
cmp
push
ret
mov
pop
mov
sar
sbb
(bad)
jg
jle
xchg
mov
(bad)
sub
retf
xchg
out
stos
cld
push
or
adc
add
mov
rcr
int3
pmullw
mov
call
jge
push
dec
int3
sbb
or
fwait
aaa
test
cdq
out
add
retf
imul
and
add
add
ja
xchg
cmp
cs
adc
push
adc
xchg
inc
mov
add
sbb
cmp
push
(bad)
mov
add
push
cs
sar
(bad)
xor
lods
bound
cli
jb
xchg
add
vpminub
push
jmp
jl
(bad)
in
in
mov
sbb
shl
sbb
cdq
retf
mov
test
aam
nop
aad
jmp
int
xchg
mov
cmp
mov
ficom
add
xchg
inc
mov
mov
sbb
mov
xor
dec
and
push
(bad)
and
sub
scas
mov
cmp
sbb
(bad)
movs
lods
fsubr
call
jns
xchg
and
in
loopne
dec
dec
or
not
inc
stos
and
sar
push
jmp
pop
or
adc
sub
cmp
cmp
inc
jb
xchg
adc
push
dec
js
and
mov
jg
ss
stos
fnsave
test
cmp
or
aam
iret
in
jmp
inc
(bad)
ins
movs
out
out
mov
sub
mov
loopne
pop
mov
mov
jmp
ficomp
pop
mov
xor
push
xor
pop
shl
inc
xchg
cmps
ss
mov
push
hlt
or
ins
mov
sub
sti
or
push
leave
mov
(bad)
mov
dec
idiv
test
into
mov
sub
or
jno
mov
add
cmp
rol
jmp
dec
push
retf
jecxz
and
inc
fs
dec
mov
stos
mov
lods
mov
dec
shr
es
scas
lods
arpl
sbb
test
mov
push
stc
mov
xor
scas
lds
jge
cmp
fiadd
ja
jle
xchg
test
outs
int
fbstp
sub
xchg
inc
icebp
jecxz
ins
xchg
sbb
jb
sbb
dec
stc
sbb
pop
cmp
xchg
xchg
rol
sub
pop
ja
pop
push
int3
(bad)
jmp
sbb
outs
push
xor
xor
addr16
xchg
inc
stc
xchg
loope
stc
pop
xor
fnsave
das
(bad)
sti
sar
pop
or
neg
add
inc
mov
sbb
mov
mov
test
mov
daa
add
inc
xchg
out
dec
jmp
sbb
retf
push
inc
mov
cmps
mov
add
sahf
cmp
xchg
push
retf
or
xlat
adc
or
fsub
mov
(bad)
repnz
retf
push
inc
pop
imul
shr
repz
aad
xor
in
inc
pop
sbb
add
repz
in
pop
sbb
sub
iret
cdq
or
and
mov
pop
inc
jnp
ss
mov
js
mov
pusha
aaa
repz
pop
xor
in
xchg
sub
mov
outs
aam
data16
scas
or
lds
adc
or
(bad)
cwde
xchg
adc
out
and
jle
mov
sub
imul
sub
gs
mov
mov
add
imul
inc
ds
fcom
pop
ret
out
mov
dec
ja
and
dec
push
cmc
mov
xchg
scas
aaa
xlat
(bad)
popa
dec
add
or
fisttp
xor
xchg
mov
lea
cmp
xor
sbb
inc
(bad)
jns
popf
jmp
pop
ds
shl
pop
mov
adc
aaa
ja
aaa
mov
sub
and
into
aaa
dec
xor
mov
mov
ret
cwde
cmp
les
pop
mov
sub
fadd
dec
scas
xor
push
fist
out
iret
dec
sbb
mov
push
cmc
call
sub
jmp
imul
cmp
and
call
loope
icebp
jne
push
push
or
mov
add
jl
push
or
push
inc
push
leave
xor
in
idiv
mov
or
mov
std
(bad)
out
jno
std
stos
popf
fs
test
push
xor
inc
dec
inc
scas
xchg
sahf
lods
out
xchg
pop
mov
sub
jne
jb
mov
jbe
(bad)
jle
cli
pop
lods
cwde
aas
push
mov
jmp
cmp
ret
pop
xchg
outs
pop
mov
cvtpi2ps
repz
ja
imul
mov
(bad)
and
cmps
dec
push
sbb
js
rcr
aam
push
imul
arpl
cs
xor
outs
or
in
xor
in
test
fmul
pop
add
test
(bad)
enter
in
(bad)
and
pop
je
lahf
in
mul
rcr
sar
mov
and
adc
scas
(bad)
shl
sbb
ins
push
mov
xor
ss
outs
test
sub
hlt
pusha
in
mov
cmp
pop
test
fdiv
je
scas
adc
pop
push
add
ja
pusha
in
mov
or
push
or
inc
fstp
sub
popf
test
xchg
dec
sbb
sbb
cmps
into
mov
test
or
jae
mov
in
pop
dec
jb
mov
in
cld
ss
int
shr
dec
cmp
fstp
add
ss
mov
xchg
and
add
xchg
cli
into
retf
stos
mov
sar
dec
lar
cmp
sti
jp
mov
inc
sbb
xchg
dec
rcl
or
dec
lods
xchg
imul
pop
sbb
cmp
xor
jae
cmp
sub
out
ret
jae
mov
loop
dec
pop
mov
(bad)
je
push
mov
xor
(bad)
jg
mov
ret
jl
pop
cmp
hlt
ins
mov
and
push
out
or
sub
sbb
pop
push
rcl
jae
xor
add
retf
cmp
ret
imul
push
push
jl
inc
hlt
mov
pop
dec
pop
inc
jecxz
xchg
cmp
jmp
sub
addr16
cdq
icebp
mov
jmp
lods
inc
and
cdq
mov
out
push
div
mov
je
sbb
jnp
ret
data16
je
ins
fwait
pop
loopne
and
ja
test
loope
jns
or
repnz
add
fsubr
ret
add
jg
xchg
daa
xchg
jmp
push
mov
jne
mov
aaa
cdq
xor
les
xor
push
sub
sub
xchg
vunpckhps
loop
inc
call
nop
aam
aad
ds
push
xor
mov
xchg
push
popa
jmp
imul
add
les
jae
sub
dec
or
xor
adc
std
pushf
fcmovnu
aam
leave
mov
add
pushf
mov
push
nop
popa
xchg
adc
addr16
dec
and
outs
sti
xor
jns
or
imul
pop
sbb
xchg
call
push
or
fld
pop
popa
dec
and
(bad)
out
push
or
xor
add
jmp
pop
bound
in
and
scas
xchg
out
inc
adc
frstor
int
into
lods
or
sub
jecxz
mov
dec
sub
mov
iret
or
adc
js
sbb
int
push
int
lea
dec
push
pop
ins
loopne
inc
xor
out
add
hlt
sbb
jbe
xor
popf
fbld
scas
sbb
loopne
fcomp
test
mov
cmc
pop
test
sahf
dec
jmp
jae
jecxz
dec
adc
aaa
loope
out
jo
dec
jle
rcr
ror
mov
arpl
xor
and
in
call
popa
xlat
test
xor
mov
aas
lods
xor
aas
jo
or
daa
dec
fld
sbb
jl
sbb
xchg
js
adc
aas
dec
mov
mov
clc
xor
ret
rcr
stos
repz
cld
in
in
jle
push
out
dec
js
inc
fsubr
cwde
pop
push
fidiv
clc
lds
jb
lods
sub
cld
xchg
ins
and
sub
sub
out
mov
xchg
jb
out
sub
out
jg
popf
ffree
(bad)
push
shl
mov
push
jno
bswap
xchg
dec
mov
adc
mov
mov
push
mov
and
pop
adc
add
ret
clc
imul
test
mov
in
xchg
stos
jb
adc
cmp
ja
dec
jnp
in
push
jns
pop
push
push
cmc
retf
sbb
fcom
mov
ins
scas
pop
add
in
pop
retf
gs
dec
jmp
mov
mov
aad
cld
lods
and
sbb
xchg
cmp
fsubr
jo
data16
jmp
call
push
mov
push
sbb
das
sbb
xor
fwait
adc
iret
mov
sub
retf
ror
pop
jmp
xchg
or
cmp
or
aaa
std
adc
dec
inc
(bad)
shl
and
pop
inc
sbb
(bad)
push
mov
xchg
(bad)
or
jp
pop
jle
sbb
pop
add
popa
in
in
mov
sahf
fiadd
pop
mov
push
jge
lock
test
mov
js
fsubr
dec
jne
aad
cmp
dec
sub
test
xor
out
lea
pop
cmp
pop
aaa
jae
pusha
sbb
cmc
repz
push
fisub
in
leave
pop
fwait
sbb
dec
int
das
or
fwait
adc
inc
mov
call
icebp
adc
retf
js
ror
adc
and
sbb
(bad)
(bad)
dec
sub
shl
pop
scas
pusha
aam
loope
xchg
retf
outs
xlat
push
push
rcr
xchg
in
push
arpl
fld
adc
std
push
sub
ss
push
jl
rol
(bad)
nop
mov
std
mov
xchg
jecxz
inc
mov
fdivp
mov
sbb
ss
adc
data16
sti
dec
lods
fcomp
inc
(bad)
repz
dec
sbb
jnp
mov
in
arpl
pop
pop
push
mov
push
mov
mov
or
push
clc
and
inc
fdivr
test
ja
pushw
mov
adc
scas
xor
aad
xchg
not
mov
es
xchg
and
cmc
jbe
push
lds
sbb
mov
lds
scas
(bad)
mov
(bad)
jg
inc
add
mov
mov
call
je
div
repz
pop
dec
mov
xor
gs
shl
add
cmc
hlt
stos
xchg
mov
jmp
loope
xor
ficom
jno
pusha
sar
ss
call
pop
lds
xor
cdq
movs
pop
and
pop
cmp
add
cmc
pop
icebp
xchg
cmp
rcl
fisttp
es
mov
mov
fisubr
xor
mov
inc
add
mov
icebp
push
adc
leave
push
cmps
mov
fdivr
inc
neg
dec
jne
mov
mov
and
icebp
or
push
push
cld
sbb
pop
jge
test
jbe
inc
loopne
add
leave
mov
xlat
inc
pop
shl
cmps
imul
out
cmc
dec
pop
sub
jne
mov
xor
mov
sub
cmp
cmp
movs
rcl
add
fdivr
add
add
xor
jle
push
daa
or
mov
loop
out
bound
imul
cli
fwait
(bad)
mov
jb
xlat
out
das
push
mov
std
out
iret
sbb
sti
adc
push
movs
out
inc
dec
sar
ja
xchg
adc
pop
aad
xchg
inc
xchg
add
clc
addr16
mov
rcl
jns
sbb
sub
jnp
pop
pop
push
loope
adc
mov
mov
pop
and
push
xchg
xor
repnz
adc
fldenv
loop
push
jbe
clc
aad
add
mov
pop
aam
ss
repnz
outs
imul
jge
xor
(bad)
sbb
lods
mov
mov
push
fwait
ins
cdq
cmp
jg
cmc
loop
sbb
pop
xchg
cmc
(bad)
xor
pop
sti
mov
xor
pop
mov
repz
test
dec
xchg
pop
cs
xchg
adc
rol
sti
push
out
pop
int3
mov
lods
mov
pop
lods
fnstenv
sub
stc
loopne
pop
add
mov
push
in
jg
mov
shl
test
add
push
inc
jae
(bad)
dec
aaa
jae
movs
pop
push
and
xchg
inc
cmp
push
(bad)
fwait
ja
test
sub
test
xor
xchg
icebp
inc
mov
leave
sub
add
inc
lea
push
out
shl
(bad)
rcr
rol
loop
adc
sar
call
call
in
outs
test
add
pop
push
dec
mov
lods
call
push
mov
cmps
ss
mov
mov
imul
inc
sub
xchg
subps
pop
xchg
aad
adc
mov
popa
stos
pop
retf
add
mov
stos
nop
jge
push
jo
(bad)
or
aam
dec
fsubr
add
cmc
fimul
call
jns
mov
repz
cs
fwait
or
enter
mov
or
mov
lds
mov
ret
ja
mov
jecxz
test
into
mov
sub
inc
outs
pop
inc
arpl
leave
into
test
mov
bound
or
iret
fiadd
mov
mov
or
mov
imul
jmp
or
out
xchg
dec
lods
outs
loopne
dec
cmp
dec
xrelease
xchg
fs
cwde
ret
ficomp
cwde
jmp
lods
iret
sti
sahf
jne
int
xchg
jo
adc
xchg
add
scas
mov
sbb
or
popa
xor
mov
nop
ins
push
mov
popf
aaa
clc
sbb
outs
pop
xchg
mov
xor
mov
out
int
cs
xor
mov
outs
jnp
cdq
adc
(bad)
out
mov
sbb
mov
popa
rcr
enter
enter
gs
idiv
js
add
sbb
shl
mov
js
push
mov
sub
mov
lahf
mov
sub
push
repz
add
(bad)
fcom
xchg
movs
dec
in
or
push
sti
sti
or
inc
cmps
(bad)
inc
inc
neg
sub
cmp
add
gs
cdq
fistp
movs
out
mov
mov
adc
std
adc
in
vpminub
adc
fistp
jmp
xor
and
outs
call
and
and
sbb
push
jl
fisttp
fcomip
push
jo
lock
imul
jmp
cs
clc
pop
sti
push
retf
inc
sbb
(bad)
inc
mov
cmp
push
sbb
(bad)
ficomp
into
sbb
in
push
xchg
outs
test
dec
in
data16
loope
push
mov
out
ins
xor
push
popf
scas
ja
or
popa
fidiv
inc
sbb
xchg
xchg
(bad)
xchg
ins
pop
xchg
popf
pop
pop
lds
rol
mov
inc
sti
mov
jbe
add
aas
rcr
ins
out
cmps
fnstenv
jg
sub
jns
dec
hlt
xchg
in
popa
mov
int3
or
in
inc
imul
aad
and
mov
and
and
jge
bound
jmp
stos
pcmpgtb
cmps
in
int3
ds
pop
push
cmps
inc
scas
pop
in
pop
pop
les
mov
test
out
dec
push
shr
push
in
mov
jns
mov
and
jmp
add
not
xchg
stos
jl
repz
adc
rol
sbb
out
mov
mov
fadd
mov
not
pop
das
lea
add
sahf
dec
jno
xor
adc
ret
mov
mov
imul
and
loope
mov
scas
call
rcl
pop
xor
mov
es
les
hlt
jbe
adc
mov
inc
and
or
(bad)
ds
arpl
mov
aam
mov
test
or
outs
sti
mov
hlt
or
push
es
xor
out
cmp
sub
mov
ja
cmp
gs
(bad)
mov
mov
inc
xor
push
xor
mov
mov
or
in
scas
int
repz
push
out
push
mov
out
dec
ja
out
dec
mov
lock
push
hlt
mov
in
jl
outs
js
and
sbb
gs
add
or
fild
jno
push
or
pushf
dec
pop
and
mov
mov
retf
fnstsw
cld
mov
push
pop
pop
pop
xlat
cmp
ret
push
test
aaa
(bad)
pusha
fidivr
jmp
lahf
mov
sti
(bad)
or
mov
mov
push
sub
pop
or
retf
aaa
rcl
scas
cli
add
in
xlat
jae
aas
dec
jmp
dec
ror
sbb
cmps
dec
ret
jns
pop
mov
and
or
jb
jmp
aam
cmp
push
sbb
push
mov
mov
ja
sub
bound
ret
out
mov
jbe
dec
mov
adc
test
ret
addr16
out
add
pop
leave
cli
cmp
add
or
pop
jno
cli
repnz
inc
retf
pop
pop
push
aaa
mov
and
jecxz
ja
inc
cmp
in
xchg
test
in
mov
mov
mov
call
ret
(bad)
dec
adc
inc
sub
ret
scas
pusha
push
and
sahf
nop
mov
jns
fistp
lods
fisubr
rcr
inc
cwde
pop
push
test
and
scas
push
inc
(bad)
mov
push
dec
in
in
mov
xchg
inc
fldcw
adc
mov
xlat
aam
sub
inc
mov
mov
push
aas
neg
inc
(bad)
hlt
mov
xchg
cli
cmp
test
inc
inc
gs
dec
pop
xor
in
test
ret
inc
fnstsw
mov
dec
ins
pop
xchg
xchg
mov
jmp
call
cwde
jns
xchg
adc
dec
inc
xlat
push
in
push
call
mov
or
lea
pop
push
dec
pop
sub
jmp
xchg
sbb
js
das
loopne
xchg
inc
push
pop
mov
daa
(bad)
jmp
test
push
or
add
dec
mov
out
and
scas
leave
sbb
cwde
es
sbb
and
jbe
sub
xchg
clc
mov
stc
popa
dec
cs
pop
hlt
cdq
test
aad
scas
pop
cmp
movs
pop
ja
movs
call
pop
int
mov
mov
xchg
mul
icebp
sbb
mov
pusha
push
loope
sbb
pop
xchg
out
leave
cmc
sbb
inc
xor
je
xchg
mov
mov
ds
jp
shr
je
lods
popa
std
push
mov
scas
(bad)
xchg
outs
aam
cs
push
mov
pop
popf
push
and
jge
out
je
cdq
xchg
cdq
in
aas
add
ficomp
cli
cmps
jnp
cmp
xchg
inc
sbb
mov
sub
dec
xchg
int
mov
rcl
xchg
cmps
adc
test
or
cmp
inc
lea
jge
nop
in
or
jmp
add
sar
inc
dec
imul
mov
mov
(bad)
hlt
lea
dec
add
adc
dec
fisttp
inc
shr
push
jp
fidivr
sub
pushf
fnstsw
mov
movs
(bad)
retf
daa
mov
xchg
popf
ret
lds
(bad)
(bad)
shl
adc
mov
mov
adc
push
sbb
cmp
in
or
test
xor
jmp
icebp
inc
or
mov
jne
xchg
adc
sub
xor
pop
cmp
jmp
add
(bad)
cmps
lds
loop
(bad)
(bad)
inc
test
jb
mov
jmp
and
cs
add
outs
xor
outs
mov
adc
push
inc
out
inc
xchg
je
sub
push
xchg
push
dec
ror
test
in
inc
sbb
les
retf
add
xor
ret
inc
add
xor
ret
dec
jns
add
iret
fstp
dec
js
sub
fild
outs
retf
clc
pop
das
pusha
clc
and
inc
adc
sub
sbb
fild
imul
jmp
cwde
jae
jecxz
test
loopne
cmp
into
stos
pop
popa
pusha
lahf
add
adc
sti
mov
dec
and
cmpxchg
sub
loopne
add
inc
xlat
xor
nop
stos
adc
out
add
sbb
or
ret
inc
leave
push
jb
in
or
dec
or
enter
aad
pop
xor
sbb
fcom
xor
pop
dec
jecxz
xchg
sub
fadd
inc
add
iret
lods
cld
or
test
fistp
rcr
es
ror
add
pop
(bad)
lds
jnp
mov
test
push
xor
(bad)
in
inc
cmp
mov
mov
jnp
adc
cmp
outs
test
fmul
jae
jmp
xor
repz
push
cmp
xor
fwait
mov
rcl
pop
daa
pop
inc
jge
mov
jne
enter
dec
(bad)
xchg
int3
cmc
clc
xchg
(bad)
jae
inc
sub
and
sar
sbb
cmp
pop
cli
dec
push
adc
mov
sbb
dec
dec
bound
lods
cmp
(bad)
mov
sbb
ins
xor
cmc
mov
iret
nop
js
add
ss
dec
xchg
gs
ins
lahf
and
or
loope
in
inc
test
jno
cdq
jb
xor
imul
sbb
shl
in
in
xchg
pusha
retf
enter
cwde
sahf
push
adc
push
in
jmp
loop
sub
jne
shl
pusha
rcr
data16
ror
sbb
mov
mov
test
jl
mov
in
mov
(bad)
xchg
jno
adc
mov
mov
pop
and
mov
(bad)
repnz
adc
test
xchg
or
(bad)
call
jp
mov
push
mov
enter
xor
push
and
aas
mov
ret
nop
xchg
xor
cmp
push
or
add
sbb
pop
outs
add
test
mov
out
movs
repz
sbb
retf
(bad)
rcr
dec
push
idiv
add
in
add
inc
dec
mov
jb
shr
ins
inc
fs
mov
scas
push
dec
jb
into
test
xchg
in
mov
jb
(bad)
mov
mov
stc
into
(bad)
int
xchg
popf
nop
push
rcr
or
xchg
test
pop
jecxz
inc
(bad)
cmp
shl
dec
es
loop
cwde
lods
mov
adc
aad
cmc
pop
cld
retf
mov
out
sub
in
push
mov
mov
daa
retf
jmp
int3
mov
sbb
iret
out
pop
loopne
cmp
scas
mov
push
nop
and
and
popf
mov
dec
pop
jge
movs
ja
(bad)
nop
sbb
push
cmp
sahf
rol
sub
popf
mov
push
and
retf
sbb
mov
loop
lds
jmp
mov
inc
adc
cld
aas
les
xor
mov
daa
loop
(bad)
inc
(bad)
xchg
xchg
lahf
icebp
not
int
and
pop
aas
jb
adc
jle
lock
call
sti
popa
dec
jb
push
add
(bad)
test
push
mov
fld
jmp
xchg
jle
push
mov
jne
in
in
call
(bad)
lock
imul
sbb
aaa
mov
sahf
mov
fsubrp
pand
and
and
and
cmp
cmc
cwde
cmc
movs
sub
mov
xor
push
int
aam
jl
and
aad
mov
aas
add
aam
in
mov
push
out
cld
fld
mov
stos
rcr
cmps
push
fs
pop
jle
cwde
push
sub
xor
pushf
(bad)
inc
add
pop
cmp
ja
and
and
call
add
cmp
out
aaa
and
retf
push
mov
hlt
push
mov
cwde
fcom
jecxz
inc
das
fstp
arpl
rol
hlt
push
inc
push
xor
add
loopne
in
push
mov
mov
inc
adc
sub
nop
cmc
adc
lahf
mov
ss
adc
jmp
pop
push
rcl
cmp
adc
les
or
mul
jbe
cmp
add
pop
sbb
fadd
push
add
inc
mov
call
data16
jg
lods
stos
test
mov
sub
ret
jo
in
jg
in
mov
outs
jne
fchs
call
sub
dec
or
or
out
gs
adc
dec
mov
sbb
push
aad
pop
fbstp
aas
je
cdq
imul
aad
daa
adc
cmp
pushf
clc
mov
imul
jmp
ficom
mov
jb
sub
lock
sbb
and
fnstenv
into
test
daa
cwde
sbb
movs
addr16
and
xor
push
jnp
xlat
outs
push
jg
call
jmp
fwait
mov
sbb
mov
pop
and
push
pop
repz
(bad)
movs
test
inc
and
sub
outs
cld
and
test
cwde
shr
cmp
enter
push
scas
mov
bound
stos
pop
adc
pop
retf
out
test
je
or
imul
mov
xor
lahf
pop
xchg
int3
stos
adc
cli
push
sub
test
mov
scas
add
leave
jmp
mov
mov
jbe
jns
pop
push
sub
inc
das
xchg
adc
fwait
cmp
inc
jae
push
push
cmp
cmps
push
jecxz
ret
cdq
(bad)
cmp
dec
loop
test
push
and
mov
inc
mov
js
pop
int
and
dec
push
dec
xchg
mov
pop
push
cli
rcl
or
daa
imul
inc
sti
mov
movs
mov
in
pop
aam
mov
and
jbe
jno
nop
xor
sub
push
jbe
aad
lods
jmp
jb
xor
and
jb
shl
js
into
push
sub
cmps
pop
sub
mov
mov
pop
pop
cmp
push
ret
out
xor
mov
mov
ret
jmp
aaa
mov
dec
inc
pop
inc
lods
push
addr16
xchg
xchg
or
xchg
or
xchg
jp
sbb
(bad)
mov
iret
mov
push
dec
and
(bad)
ficom
jmp
in
add
into
test
clc
xchg
lahf
add
popa
cmc
and
pop
loopne
mov
pusha
pop
stos
mov
adc
out
clc
ret
xchg
lahf
xchg
lds
imul
les
jo
adc
cmp
xor
dec
test
cld
mov
repz
mul
add
in
fcomp
push
dec
icebp
sbb
das
imul
pop
dec
(bad)
imul
call
loopne
retf
inc
cmp
pop
ja
hlt
cmp
cmc
xchg
stos
shl
hlt
cmps
scas
jmp
cld
mov
aad
cdq
aas
adc
imul
pop
fimul
push
into
pop
pop
retf
scas
mul
jle
adc
lods
jge
adc
repz
mov
mov
cmp
cmp
push
test
dec
test
(bad)
sub
cmp
rol
aas
popf
sbb
shr
pop
jno
cmp
sbb
cmps
imul
shl
dec
imul
lock
lock
jno
idiv
dec
add
lea
and
fadd
push
xchg
out
mov
jg
xchg
or
cmp
lods
xchg
push
dec
cwde
ins
test
mov
inc
xchg
inc
loop
jns
ss
loopne
push
fs
pop
xchg
fs
fmul
mov
pop
hlt
and
sub
dec
std
rol
push
sub
jne
adc
sub
jecxz
push
sbb
fisttp
and
mov
cmc
je
cmps
mov
rol
mov
arpl
and
lock
sti
pop
xchg
pusha
iret
jno
dec
nop
ret
mov
sub
cmps
lods
inc
test
lock
jle
or
movs
mov
lock
inc
xor
mov
add
push
popa
in
lods
leave
sahf
xor
mov
xchg
(bad)
sbb
jecxz
std
inc
ins
loopne
pop
int3
push
mov
mov
mov
cli
dec
xchg
xchg
pop
scas
mov
aaa
or
jo
out
test
ret
fsubr
movd
and
cmp
pop
or
mov
xlat
xchg
mov
repz
pop
hlt
icebp
jnp
retf
xor
mov
sub
pop
das
and
push
add
fisub
arpl
pop
inc
inc
cmp
push
lods
add
cmp
or
sub
aas
fld
mov
jae
call
repz
mov
push
in
xchg
or
xor
sbb
mov
sub
mov
jp
mov
aaa
js
mov
xor
clc
fcomp
or
mov
sbb
int
stos
arpl
mov
rcr
les
and
mov
js
ss
rcl
push
mov
or
adc
cmps
cmp
xchg
(bad)
aas
mov
cmp
lods
mov
mov
out
psubd
inc
shl
aas
cmp
fnstcw
(bad)
dec
xchg
retf
test
cmp
cmp
xor
cs
fcom
test
cmp
icebp
ins
ror
dec
cdq
imul
lea
scas
push
add
repz
sti
and
shr
adc
inc
ja
pop
adc
mov
out
fsubr
jmp
ret
push
push
loopne
outs
cdq
xchg
push
mov
(bad)
mov
(bad)
loop
into
dec
cs
push
stos
cmc
push
push
mov
xchg
push
and
pop
cdq
cmp
movs
cmp
stos
jnp
dec
mov
in
test
xchg
mov
(bad)
sti
idiv
or
lods
or
adc
sub
push
test
fimul
jae
or
out
inc
xor
fs
adc
(bad)
adc
push
rol
push
sub
jp
xchg
jmp
mov
in
adc
mov
out
jb
mov
add
ret
cmp
punpckldq
out
clc
stos
sbb
push
cli
ret
stc
das
repz
mov
xchg
test
add
jmp
adc
shl
gs
adc
mov
pushf
cli
jl
xchg
fld
sub
pop
icebp
pop
inc
mov
cmp
sub
lock
push
jecxz
push
ret
xchg
imul
mov
push
mov
jbe
jp
lods
push
pop
int
cdq
mov
add
lods
cmc
loopne
adc
mov
test
in
adc
cmp
mov
lea
fwait
add
mov
fdivr
mov
mov
adc
gs
repz
or
jb
lock
je
dec
mov
bound
enter
dec
adc
fist
xor
cmp
out
dec
sbb
mov
or
stc
mov
arpl
sar
cmp
enter
outs
daa
add
cmc
add
xor
in
sub
push
xor
cs
mov
es
fstp
sti
loope
cli
js
(bad)
sti
jge
adc
pusha
add
pushf
mov
mov
xchg
(bad)
leave
dec
adc
dec
out
mov
or
or
xchg
mov
sar
test
ret
add
mov
push
pop
lea
out
jecxz
fldcw
pop
xor
pop
push
sub
and
xchg
sub
mov
xchg
sbb
sub
ror
and
mov
or
sti
add
test
call
ror
test
out
in
enter
imul
dec
fsub
xor
mov
jno
loop
or
cmp
xchg
sbb
sub
inc
lahf
test
nop
lods
sbb
mov
push
xchg
clc
jle
fnsave
imul
and
sbb
das
fld
mov
jns
add
bound
xchg
mov
jmp
cmp
je
stc
jb
adc
mov
lahf
aam
sbb
rol
inc
(bad)
pop
out
adc
mov
out
jns
xchg
sbb
add
inc
mov
lock
test
aad
mov
add
dec
mov
mov
imul
iret
fcomp
and
lea
mov
test
in
in
fldcw
hlt
lock
jae
xchg
jle
xchg
pop
jecxz
mov
jb
pushf
arpl
je
std
jg
lock
test
and
pusha
rcl
xchg
loopne
xor
aam
fcomp
pop
movs
int3
mov
sub
xchg
fst
fsubr
push
movs
(bad)
ret
mov
sub
sub
add
and
shl
sbb
jmp
adc
xchg
jl
xor
lahf
push
pop
xchg
mov
xchg
cld
or
ror
aas
fadd
dec
mov
sub
xchg
mov
jmp
hlt
ret
xor
add
mov
dec
(bad)
jge
jne
(bad)
lock
inc
div
pop
sbb
jge
daa
inc
lea
pop
mov
scas
shr
movs
repz
dec
outs
inc
cld
pop
xchg
xchg
pushf
ret
ss
out
sbb
jmp
(bad)
xor
xor
test
push
mov
mov
in
xchg
mov
lahf
xadd
ja
sti
adc
or
mul
sahf
cmp
or
cmp
shl
bound
loopne
push
mov
jp
mov
push
loope
arpl
mov
mov
les
or
hlt
push
mov
add
or
inc
or
retf
lods
mov
push
(bad)
mov
or
(bad)
cmps
lock
xor
mov
fmul
jne
xor
sub
inc
adc
rcr
outs
push
ins
into
aam
retf
dec
sar
ror
ret
jecxz
shl
mov
mov
mov
lahf
sub
pop
iret
jb
or
out
hlt
xor
ficomp
adc
or
out
ffree
push
sbb
stos
mov
sub
mov
mov
xor
(bad)
cdq
or
add
dec
cld
sbb
(bad)
push
cmc
inc
add
sahf
xor
ins
jmp
adc
adc
add
push
inc
(bad)
jg
pushf
mov
js
jle
pop
xor
push
or
sti
inc
test
out
and
sbb
push
outs
inc
in
mov
mov
mov
cs
and
lods
cmp
imul
push
rcl
jg
pop
xchg
mov
lods
xlat
jecxz
cli
ins
jl
dec
and
jge
mov
push
repz
fcomp
mov
pop
hlt
loopne
outs
(bad)
jle
cwde
inc
or
call
add
ror
and
xchg
push
adc
push
jecxz
mov
loop
inc
mov
movs
mov
dec
pop
or
pushf
push
push
xchg
sbb
(bad)
cwde
loop
lea
and
push
popa
inc
and
xor
pop
ins
shl
in
and
out
sbb
ret
mov
jecxz
jecxz
enter
mov
aad
(bad)
push
push
and
aaa
addr16
out
dec
mov
push
mov
mov
sbb
or
mov
or
push
push
and
sbb
push
jbe
pop
and
cmp
icebp
jle
cmp
and
std
sub
add
nop
stos
mov
sub
shr
mov
inc
mov
add
dec
(bad)
(bad)
cmc
pop
pop
and
mov
xchg
rol
(bad)
cs
aam
inc
mov
inc
loope
adc
mov
(bad)
cld
jmp
mov
mov
push
test
jmp
push
in
xchg
(bad)
rcl
xchg
pop
push
mov
call
cmps
jmp
cmp
out
and
mov
mov
sbb
jp
add
sub
loopne
add
adc
mov
sub
fadd
pop
push
je
ret
inc
out
fisubr
push
mov
leave
es
cli
das
adc
ins
and
push
aad
ins
mov
mov
xchg
arpl
(bad)
or
sub
push
sub
lods
call
neg
mov
mov
and
test
repz
jmp
sub
out
jp
rcl
hlt
inc
int3
fcomi
ja
pusha
or
hlt
les
ret
imul
and
retf
inc
mov
inc
add
mov
dec
jle
xchg
sbb
into
neg
pop
jnp
pop
lods
adc
ret
lds
cmp
cwde
popf
scas
call
push
jmp
jle
repz
dec
daa
gs
rcr
(bad)
je
mov
push
shr
cmp
int3
scas
repz
jmp
ja
mov
neg
add
xlat
mov
(bad)
gs
std
inc
cs
or
pop
shr
pop
stos
cwde
dec
movaps
adc
mov
out
jae
mov
cld
gs
fidivr
mov
retf
call
pusha
out
inc
mov
dec
or
lods
push
(bad)
call
test
add
cmc
das
xor
xchg
loop
add
pop
stos
(bad)
out
adc
sbb
add
rcr
add
scas
rcr
adc
jmp
test
and
loope
fisub
mov
cmps
mov
aas
jmp
out
daa
shl
sti
not
mov
cmp
out
je
xchg
xchg
or
fst
sbb
fsubr
add
mov
cld
pop
ins
cmc
sbb
adc
imul
inc
inc
lea
cmp
mov
std
sar
push
pusha
inc
movs
ss
retf
das
ds
ds
inc
pop
xchg
adc
jb
fisubr
in
lods
loopne
in
movs
mov
xchg
xchg
add
leave
mov
mov
jecxz
ret
(bad)
fwait
pop
test
lods
pop
je
movs
std
sti
gs
add
movs
(bad)
xchg
pop
jnp
pop
into
xor
push
(bad)
sbb
movzx
popa
call
fsubrp
es
push
sub
inc
cmp
ficomp
sti
rcl
outs
nop
ss
cwde
pop
add
pop
mov
push
mov
clc
cmp
popa
sub
sbb
outs
out
cmp
frstor
enter
cmp
addr16
inc
pusha
mov
les
mov
(bad)
adc
xor
cdq
mov
dec
and
ds
stc
dec
repnz
mov
cld
lahf
dec
pop
imul
mov
fwait
das
mov
sub
mov
adc
pop
ret
cmc
or
leave
arpl
or
adc
popf
fs
fmul
mov
jle
aaa
movs
push
jg
fxch
pop
scas
pop
dec
jns
add
inc
ins
sub
pop
in
es
loop
xchg
add
pop
mov
jnp
pop
push
or
mov
das
push
mov
pushf
das
lahf
bound
inc
shl
arpl
inc
fld
sbb
or
inc
mov
dec
sbb
or
lds
fldcw
push
add
test
xchg
fwait
jae
js
pop
retf
jle
leave
add
mov
shr
and
test
or
jge
inc
push
mov
iret
inc
loope
out
dec
adc
cmp
sub
fwait
add
cli
int3
jno
jo
test
lock
mov
or
lods
cld
pop
ds
rcr
mov
xor
add
sub
push
mov
push
inc
mov
pop
lods
scas
out
xchg
or
neg
je
les
pop
xor
mov
mov
jmp
stos
ja
adc
out
push
pop
jge
scas
test
stos
cmps
fs
push
test
jne
ins
test
out
mov
clc
mov
mov
loop
pusha
fisub
pop
imul
pop
mov
mov
pop
stos
push
pop
pop
sbb
add
mov
pop
daa
arpl
xchg
ret
mov
cmp
(bad)
movs
inc
jmp
arpl
repnz
icebp
push
imul
ficomp
jle
into
mov
sar
stos
sub
movs
loop
shl
inc
cmp
cli
loopne
jns
mov
test
jnp
xchg
dec
cli
jge
(bad)
mov
or
xchg
not
mov
jnp
and
adc
xlat
mov
repnz
mov
adc
sti
sub
mov
sbb
xor
push
(bad)
pop
mov
xlat
push
int3
add
cmc
out
jmp
fnstenv
xor
add
dec
lea
push
cmps
inc
xor
in
pop
and
(bad)
cdq
sahf
test
xor
data16
jmp
jmp
jmp
sbb
xchg
sar
(bad)
shr
call
inc
mov
daa
and
xlat
int
pop
jmp
dec
fsubr
arpl
pop
ret
mov
rcr
adc
mov
or
call
pushf
mov
jnp
mov
sub
add
push
stos
mov
lock
fs
sbb
xchg
inc
popf
ja
addr16
(bad)
fnsave
push
xchg
movs
fdiv
scas
or
push
mov
xor
outs
cmp
sbb
imul
call
neg
loopne
addr16
mul
pop
hlt
jmp
cdq
sub
fistp
ret
pop
xchg
cdq
aad
push
mov
push
sar
adc
(bad)
mov
dec
imul
scas
fs
pushf
and
jbe
sub
(bad)
out
mov
jp
push
mov
aas
mov
cmp
push
xchg
inc
test
aam
jns
cmp
das
shl
or
adc
xor
mov
aaa
sti
push
jne
cmps
cdq
inc
das
xor
fnsave
enter
mov
mov
mov
mov
dec
jmp
sub
fld
ror
stos
shr
into
jns
fs
sub
sahf
cmps
fs
xor
rol
scas
retf
sub
lea
or
fs
call
fisttp
shl
sub
rcl
jg
dec
mov
test
push
xchg
cmp
clc
shl
scas
pop
icebp
sub
mov
leave
icebp
fwait
addr16
add
mov
std
mov
(bad)
cmc
stos
or
inc
mov
ror
and
mov
cld
mov
inc
ja
add
jb
pop
in
push
movs
aam
imul
or
jb
dec
mov
xchg
fistp
jge
mov
jle
add
in
pusha
push
xor
xor
mov
sbb
mov
inc
xor
adc
mov
lods
pop
pop
jo
dec
sub
test
jmp
jae
mov
or
ja
ret
(bad)
(bad)
mov
push
mov
cdq
xchg
xchg
sub
adc
iret
fimul
aad
jne
pop
pushf
or
pop
xor
dec
out
adc
sub
xlat
jecxz
in
ret
xchg
push
add
cs
bound
imul
xchg
loop
push
jp
iret
xor
mov
add
push
mov
test
push
ret
out
cwde
mov
fs
arpl
dec
add
xchg
out
inc
jae
adc
aaa
or
mov
add
jb
jnp
cld
popf
into
js
fimul
add
dec
jge
mov
push
lea
(bad)
lahf
mov
scas
int
xchg
mov
scas
into
shl
pop
and
(bad)
arpl
pop
add
mov
mov
cmp
push
les
inc
pushf
pop
fwait
test
in
in
mov
(bad)
mov
and
jb
fucomp
jle
daa
aas
push
out
sbb
pop
iret
test
dec
mov
ss
mov
int
bound
mov
jge
sbb
cmp
pop
cmp
ror
mov
mov
dec
fwait
xor
retf
dec
dec
jl
aad
imul
xor
pop
inc
data16
in
mov
call
xor
int
popf
pop
in
push
mov
xchg
and
cs
push
ret
add
jle
pop
stc
pop
mov
fmul
leave
xor
stos
nop
cmps
fisub
movs
inc
adc
outs
loope
jnp
xor
pop
(bad)
out
mov
xchg
push
jp
je
mov
dec
push
cmp
cs
int
cmp
sar
xor
ret
fiadd
cwde
mov
iret
mov
lds
xor
nop
ror
jmp
or
icebp
mov
pusha
mov
imul
test
xchg
mov
push
adc
aad
scas
mov
mov
inc
imul
cs
sbb
pushf
shl
add
jmp
cwde
ins
adc
and
pop
push
jge
out
js
mov
test
lods
popf
xor
loope
jno
sbb
cmps
or
mov
arpl
sub
push
cmp
mov
adc
jbe
mov
std
out
mov
inc
(bad)
aaa
adc
mov
js
mov
aam
jge
jns
mov
push
nop
pop
(bad)
ret
popa
inc
es
jno
mov
xchg
mov
sub
xchg
mov
movs
cdq
sub
dec
daa
sbb
xchg
or
pop
lea
sar
pop
addr16
xor
sbb
push
shl
loope
jle
popa
and
lds
and
adc
push
fcmovnb
sbb
dec
push
xlat
mov
call
sbb
jne
and
prefetch
loop
in
dec
jnp
jp
pop
(bad)
call
push
sbb
or
std
or
dec
mov
mov
js
xchg
sahf
ins
add
sti
in
fbstp
jno
inc
push
mov
pusha
cmp
call
ins
lock
xchg
lods
adc
pop
cmp
aad
xchg
cmp
nop
fwait
mov
cmp
shl
rcr
arpl
out
mov
in
sub
je
pop
inc
test
pop
adc
mov
fs
xor
daa
rol
rcl
sbb
(bad)
xchg
nop
inc
cmp
jmp
push
repnz
(bad)
cmps
mov
test
loopne
arpl
stos
mov
test
add
stos
or
jno
(bad)
xor
xchg
enter
lds
mov
add
dec
std
in
jne
iret
jo
call
rcr
cmovbe
push
pop
(bad)
cmp
pop
out
(bad)
pop
nop
cmp
lea
lods
jmp
lods
clc
cmp
enter
sbb
in
fisubr
lods
adc
dec
cmps
ror
and
pop
popa
inc
repz
push
jp
cmp
(bad)
mov
call
ins
fld
movs
pop
je
sub
jbe
sahf
ss
cmp
pusha
mov
rcr
dec
mov
icebp
cmp
push
pop
std
das
inc
in
inc
add
xor
sbb
fcmovu
(bad)
xor
mov
cmp
icebp
(bad)
pop
sar
cmp
fild
sub
bound
pop
add
int3
xchg
(bad)
mov
sbb
xchg
push
fs
(bad)
cli
call
mov
mov
pop
mov
and
sahf
mov
ror
frstor
ret
lods
jmp
in
stc
inc
mov
js
mov
mov
test
jmp
push
inc
pop
das
inc
rcl
sbb
cmp
icebp
arpl
xor
mov
(bad)
jle
pop
std
test
xchg
xchg
(bad)
gs
(bad)
in
ror
jae
nop
out
push
test
push
lds
pop
shl
add
xchg
ror
dec
inc
out
movs
dec
jno
push
jne
fisubr
retf
(bad)
rcr
test
add
lock
dec
push
or
mov
inc
jmp
jp
(bad)
or
mov
sbb
sub
jecxz
push
adc
(bad)
rcl
mov
xchg
mov
movs
jmp
loopne
xchg
jno
ins
js
scas
lods
pusha
adc
lahf
outs
sub
int3
out
cwde
xchg
add
inc
rcl
sbb
ss
add
sahf
ja
popa
add
xchg
add
es
ins
fnstcw
mov
or
push
ror
xor
fwait
add
jmp
jle
jp
pushf
and
popf
shl
call
jo
div
js
cld
add
mov
rol
nop
jmp
call
add
loop
dec
dec
leave
xchg
int3
jg
push
adc
addr16
stos
sbb
xchg
mov
nop
movs
push
mov
movs
bound
dec
test
xor
shl
xchg
outs
dec
mov
in
inc
je
or
jmp
dec
retf
xor
cmp
(bad)
jnp
call
inc
mov
test
add
push
jmp
push
loopne
call
ficom
xchg
je
rcl
jno
arpl
daa
pop
adc
movs
mov
push
push
xchg
outs
inc
pop
retf
pop
dec
jl
cmps
mov
gs
add
dec
scas
jbe
mov
sub
push
pop
dec
mov
repnz
rcl
in
sub
stos
cmp
jecxz
push
sbb
int
inc
cwde
mov
push
cmps
pop
xor
pusha
icebp
dec
xor
mov
mov
inc
movs
pop
in
lock
push
pop
call
dec
dec
pop
loope
mov
xlat
aas
ror
shl
sbb
push
add
mov
xchg
add
inc
dec
ret
sub
stos
or
movs
xor
not
dec
push
adc
xlat
nop
xchg
dec
pop
push
xor
push
push
jl
gs
fidivr
int
dec
cdq
xor
mov
ins
(bad)
enter
(bad)
jae
mov
xchg
(bad)
arpl
in
(bad)
(bad)
adc
std
sbb
in
call
(bad)
retf
punpckhwd
imul
sar
push
lock
xchg
jmp
adc
jle
aad
repnz
mov
test
xor
scas
xor
neg
sar
cmp
into
pop
adc
or
dec
mov
retf
test
(bad)
sub
ret
rol
in
jne
pusha
cmp
ds
ss
movs
pop
xor
jno
xor
sbb
push
fstp
xor
(bad)
mov
push
jecxz
or
imul
adc
mov
cmp
sbb
std
mov
aas
adc
in
xchg
bound
cmps
mov
clc
inc
call
test
and
cmc
lds
dec
jo
imul
xchg
fwait
cdq
out
(bad)
adc
adc
sbb
ss
in
sti
push
ret
pop
xchg
xlat
aam
pop
loope
sub
mov
popa
inc
inc
dec
adc
lds
jmp
repz
lods
push
div
clc
iret
mov
sbb
rcr
enter
or
aas
push
inc
ret
icebp
out
shr
ins
xor
xor
cmp
pusha
push
scas
adc
mov
jbe
test
fcmove
inc
leave
out
and
(bad)
mov
mov
and
aaa
fld
cli
push
aad
cs
add
pop
nop
sub
(bad)
repnz
jle
jmp
(bad)
loope
and
and
fst
test
mov
push
jbe
cmp
cmc
out
(bad)
fisub
ins
shl
pop
ins
or
and
sub
out
cmp
push
in
pop
and
dec
ins
mov
ror
push
or
icebp
ret
jo
lock
outs
jne
push
push
into
add
push
outs
fcmovb
(bad)
cmc
enter
mov
and
xor
fisubr
jp
inc
pop
jbe
lds
adc
jle
es
cmp
sub
sub
cmp
or
sbb
pushf
mov
leave
sub
ins
pop
sub
frstor
sub
hlt
jne
inc
add
cmp
lock
(bad)
jmp
enter
mov
unpckhps
cwde
out
cmp
popf
mov
in
or
sar
push
mov
cmp
or
push
test
and
pusha
sbb
movs
xchg
or
enter
pop
push
shl
mov
mov
(bad)
popa
dec
test
test
dec
mov
xchg
xchg
adc
movs
jae
loopne
cdq
xchg
out
rcl
adc
mov
std
fst
adc
ret
ret
aam
lods
mov
rcl
in
xchg
jecxz
mov
xor
push
jecxz
movs
add
out
sub
lea
clc
jb
test
sbb
mov
loope
or
sti
por
jmp
arpl
ftst
sbb
lds
cwde
ins
or
aam
lock
mov
mov
out
push
lea
sub
sar
into
cwde
or
sub
or
ds
inc
jns
call
bound
dec
pop
adc
sbb
mov
pop
arpl
dec
xor
rcr
mov
call
aam
fdiv
aas
aad
shl
aam
push
xor
or
jns
add
js
dec
outs
fldcw
loope
sar
sbb
stos
int
mov
sbb
mov
ror
add
mov
test
mov
mov
cmp
(bad)
and
mov
leave
mov
push
or
cmp
adc
test
imul
std
sbb
lea
bound
dec
xchg
ins
scas
jp
les
push
in
setns
daa
push
dec
dec
(bad)
inc
fldenv
sar
jb
cmp
inc
shl
cli
js
imul
(bad)
sub
sbb
mov
ret
adc
jmp
aaa
(bad)
addr16
fs
jmp
xor
sub
shr
cwde
dec
sbb
pop
mov
xor
test
or
aaa
in
or
daa
jg
xor
std
push
out
pop
ja
(bad)
sbb
test
into
nop
call
jbe
ror
sbb
mov
xchg
dec
mul
cmp
stos
inc
lea
sub
xchg
fild
mov
sub
add
adc
mov
xchg
cmp
inc
int3
mov
add
cmc
cld
xchg
jbe
(bad)
mov
and
sbb
push
retf
sbb
sub
xor
add
enter
scas
sub
enter
sbb
das
lock
popa
sbb
sbb
push
sub
cld
jne
cli
test
popa
xchg
les
add
pop
imul
xchg
cmp
adc
mov
add
cwde
ror
and
clc
mov
(bad)
cmp
mov
loopne
aad
mov
mov
mov
jns
and
or
aaa
or
sbb
sub
and
or
pop
lock
or
popf
pusha
fwait
sti
rol
fisttp
int3
dec
das
lea
pop
fisttp
mov
aaa
rcl
pop
cmc
test
ins
xchg
push
sahf
in
cmps
ja
movs
xchg
and
push
pop
xlat
ja
rcl
cs
int
out
leave
repz
or
lock
dec
dec
and
xor
sub
(bad)
data16
cmc
cmp
loope
fs
repnz
sti
jb
pop
mov
sub
(bad)
fcomp
mul
lahf
test
sub
nop
sahf
int3
xor
or
push
arpl
outs
(bad)
arpl
xchg
repnz
mov
push
and
sti
movs
mov
out
jb
in
jge
xor
mov
popf
push
add
sub
out
cli
dec
inc
fstp
js
mov
psubb
shl
adc
retf
jg
cmp
xchg
cmps
lods
loop
push
add
jnp
or
dec
in
mov
xchg
push
mov
arpl
dec
cdq
mov
mov
lods
cli
(bad)
loop
div
jmp
in
mov
sbb
cwde
movs
push
mov
in
ret
lahf
aad
stc
ja
jmp
sub
outs
and
jp
jae
es
or
xchg
mov
mov
cwde
call
shr
outs
jl
das
(bad)
loop
mov
loope
fild
xchg
cli
pop
scas
sbb
or
je
push
and
sti
cdq
dec
fstp
xor
jne
cwde
(bad)
stos
xchg
adc
sub
sub
fidivr
sahf
addr16
fisttp
cmps
pop
mov
loope
adc
mov
retf
xchg
sar
jnp
loope
outs
test
pushf
cdq
fdivr
test
(bad)
or
leave
sbb
jbe
addps
imul
popf
jno
dec
lods
push
imul
jecxz
pop
rol
mov
pop
stos
pushf
nop
sub
push
mov
dec
jge
sub
sub
ficom
mov
fld
inc
sahf
adc
into
push
imul
mov
pop
cwde
pop
fidiv
out
(bad)
xor
fs
call
popf
shr
pop
cmp
add
jns
in
and
add
dec
test
jge
xor
xor
cmp
cwde
inc
mov
movs
dec
enter
test
pop
in
add
jo
adc
pop
pop
fldcw
fisubr
dec
cdq
sub
xchg
jno
hlt
xor
loop
inc
popf
sub
or
sub
inc
add
in
and
adc
pop
pusha
jecxz
push
mov
xor
mov
jmp
jae
cli
mov
push
(bad)
retf
jae
cli
push
jge
xor
in
sbb
sar
cmps
test
mov
xchg
pushf
sub
mov
and
inc
std
addr16
sub
and
cmps
adc
xor
imul
add
mov
add
mov
(bad)
pop
data16
aam
push
test
xchg
jle
dec
push
outs
sbb
push
mov
xlat
xchg
jae
cli
sbb
lahf
scas
xor
sbb
and
dec
fldl2e
(bad)
xor
dec
sbb
push
stos
lods
out
xor
arpl
sahf
and
sbb
jge
(bad)
repz
xor
lea
mov
cld
(bad)
push
nop
mov
call
loop
sar
xchg
icebp
dec
push
lds
out
xchg
ins
push
and
(bad)
cdq
cmp
retf
cmp
cli
hlt
adc
(bad)
arpl
lea
imul
jp
dec
xchg
les
mov
in
ret
xchg
iret
popa
aam
mov
and
push
js
call
xchg
lahf
push
xor
sbb
xchg
xchg
cmps
sar
es
mov
int3
ret
inc
mov
repnz
jecxz
test
jne
or
int
ror
nop
gs
aas
loope
scas
sbb
pop
cmp
cmps
cmps
pop
sbb
adc
xchg
int
stos
loop
mov
fnsave
mov
mov
aam
fcmovnb
(bad)
fucomip
dec
mov
or
test
mov
pop
es
cmp
imul
add
cmp
in
cmp
inc
dec
xchg
ret
scas
xor
mov
ss
cmp
jp
inc
aam
hlt
mov
lea
(bad)
mov
cmp
int
jmp
gs
ins
(bad)
mov
add
pop
jle
fistp
cmp
sub
jo
out
loope
enter
xchg
(bad)
lock
aaa
out
in
xchg
or
cwde
ins
jbe
movs
xchg
add
jns
sahf
xchg
inc
test
leave
pop
push
inc
mov
mov
call
push
ror
data16
xor
rcl
popa
(bad)
fs
fwait
add
mov
xchg
dec
outs
cmp
(bad)
dec
ja
mov
cdq
leave
or
dec
xchg
xor
ja
add
int
push
mov
inc
das
in
sti
jnp
jne
adc
iret
mov
push
aas
int3
in
pop
repz
arpl
inc
lock
push
add
push
loopne
sbb
je
(bad)
mov
into
or
lods
inc
loopne
jmp
div
mov
test
and
int
jb
imul
mov
lods
stos
ffreep
mov
add
pop
stos
ds
loopne
fwait
out
retf
in
and
mov
inc
stos
out
in
jno
push
fwait
sub
hlt
in
rcr
jge
retf
cmps
dec
jb
aam
imul
out
adc
jae
lock
lds
xchg
jo
iret
leave
rol
or
cmps
shl
aad
mov
sbb
mov
push
mov
dec
inc
or
(bad)
add
movs
mov
js
mov
sbb
sub
daa
or
les
add
les
xchg
int3
test
scas
cmp
dec
pop
sbb
js
(bad)
outs
jle
(bad)
in
pop
inc
pop
mov
in
jl
add
aam
jns
cmp
mov
mov
idiv
xor
xor
dec
xor
add
pop
push
dec
mov
cdq
cmp
push
jb
aaa
nop
dec
imul
xor
xor
sub
or
sahf
sti
cmps
xor
cld
pop
pop
test
push
xor
lods
stos
jge
test
or
cmp
mov
or
(bad)
pop
dec
stos
jmp
das
cli
and
in
or
call
mov
xchg
mov
in
jmp
mov
mov
inc
cmp
xor
xor
sub
cli
add
sbb
das
mov
push
or
call
xchg
nop
sub
dec
and
int
inc
xchg
dec
lea
scas
cwde
outs
rol
or
dec
iret
jmp
adc
jns
fs
push
xchg
inc
or
loopne
fnstenv
in
out
mov
add
mov
inc
mov
imul
cmp
inc
inc
and
fld
icebp
call
and
iret
xlat
test
xchg
scas
adc
adc
push
inc
icebp
cld
cwde
jb
enter
rcl
mov
outs
xor
push
mov
add
add
fwait
xchg
pop
loopne
pop
inc
lods
cmp
mov
inc
test
jmp
hlt
test
jmp
test
and
pop
add
jo
bound
cdq
pop
cli
cmps
(bad)
jmp
clc
retf
xor
mov
aas
pop
lahf
(bad)
sbb
sbb
es
stc
sub
dec
aaa
mov
add
ss
xchg
adc
lods
dec
test
out
xor
mov
int3
pop
mov
cmp
and
(bad)
cld
scas
lock
jmp
cld
movs
sub
push
daa
push
cmps
aad
in
push
(bad)
sti
shl
stc
jp
xor
(bad)
xchg
xchg
clc
adc
jns
sub
leave
cli
sbb
fsubr
cld
xor
or
xchg
cli
arpl
je
mov
dec
ror
pusha
ret
add
sbb
fcmovb
sub
or
int
jno
adc
mov
cmp
xchg
mov
cmps
cwde
dec
sbb
mov
aas
(bad)
gs
inc
addr16
jns
adc
shl
dec
add
into
fdiv
cs
shr
imul
mov
hlt
in
mov
xor
mov
icebp
loope
and
clc
mov
dec
xchg
and
in
pop
add
jecxz
fisttp
jno
or
add
sub
call
stos
inc
daa
movs
or
sub
cmps
cli
clc
cmp
lea
jbe
leave
cwde
push
es
fsubr
jg
cmp
mov
cmps
cmp
cs
pop
cmp
lahf
popf
test
ja
xor
adc
es
mov
call
xor
(bad)
xor
lds
add
loope
imul
arpl
xor
xchg
(bad)
fmul
(bad)
adc
int3
movs
inc
mov
call
ins
mov
sub
cmp
test
inc
xor
sar
push
lods
arpl
pushf
cmp
pop
xlat
sbb
mov
lods
aam
ucomiss
test
xor
mov
cwde
lea
fisubr
ret
fcmovnbe
imul
xor
dec
mov
mov
add
rcr
or
xchg
mov
cmp
jne
sub
sar
pop
movs
sahf
loop
inc
cmp
sar
mov
pop
jbe
jo
push
mov
adc
daa
movs
ds
mov
add
push
retf
das
push
test
or
push
mov
xchg
ins
cmp
mov
scas
jmp
inc
out
mov
push
stos
(bad)
adc
(bad)
out
loope
sub
cmp
jo
adc
les
stos
or
push
(bad)
scas
shl
cli
and
add
aas
jmp
push
movs
test
and
ins
rcl
inc
sbb
not
add
pushf
cmp
popw
fs
cld
mov
cwde
dec
scas
or
jl
jl
adc
push
js
jae
mov
dec
add
xchg
and
addr16
jmp
enter
pop
stc
mov
movs
add
adc
int3
xchg
xchg
adc
fcmovne
imul
ret
imul
jecxz
inc
sub
pop
xchg
add
add
xor
imul
in
mov
push
imul
(bad)
call
xchg
pusha
in
mov
aam
ins
out
neg
push
cmp
aam
into
mov
cvtps2pi
pop
or
push
xor
or
test
mov
adc
test
out
inc
fnstenv
cmp
pop
fbld
mov
aad
dec
mov
xchg
or
push
je
cld
repz
(bad)
and
cmc
out
or
add
rcl
rol
lds
add
or
sar
lea
jecxz
mov
test
pop
inc
add
jle
js
push
or
jp
lahf
mov
test
xchg
aaa
xor
pop
xor
jno
bound
sub
jbe
push
or
arpl
push
sbb
test
push
jge
xchg
sub
movs
gs
in
mov
push
retf
je
repz
fs
pop
dec
pop
push
dec
xor
in
fwait
xor
fstp
dec
dec
sub
lea
inc
sbb
(bad)
mov
repz
shl
stos
neg
imul
daa
cmp
loopne
sub
xchg
mov
add
push
cmps
je
call
es
add
dec
fisttp
dec
loop
xor
inc
dec
inc
loop
mov
adc
scas
fsub
cmps
test
xchg
out
out
(bad)
lods
add
add
cmp
or
push
cwde
add
xchg
out
cmps
retf
jle
int
das
adc
or
stc
push
pusha
call
mov
fdiv
adc
(bad)
dec
stc
lock
adc
nop
sub
mov
mov
sbb
xchg
or
sbb
cmps
(bad)
call
and
add
sub
data16
std
cmp
scas
push
sbb
cmps
jnp
das
dec
sub
fstp
shl
and
mov
pop
pop
mov
push
ror
push
sub
mov
pushf
add
sub
cmp
mov
out
xor
jg
pop
pop
push
adc
fucompp
call
out
push
jge
leave
(bad)
fadd
jmp
movs
fnstcw
(bad)
or
loope
pop
xchg
jns
sbb
shl
loopne
cdq
xchg
dec
and
es
out
pop
icebp
inc
test
cmp
shr
cli
aas
lods
fbstp
add
loop
xchg
cmp
je
jno
icebp
cmp
aam
(bad)
aas
sub
jg
push
jle
cmps
xchg
popa
mov
sbb
mov
pusha
cmc
leave
cs
jne
call
cs
and
cld
jae
mov
sbb
lahf
pusha
xchg
repnz
adc
imul
mov
sub
cmps
jns
ja
enter
cmp
push
pop
mov
sub
mov
xchg
jno
add
jl
adc
inc
out
xchg
push
xchg
pop
out
dec
ins
movs
mov
les
push
(bad)
shl
xchg
xchg
push
lds
not
je
enter
pop
xchg
mov
push
cld
sub
out
pusha
or
inc
loope
pop
xchg
mov
xor
ror
outs
xor
test
xchg
pop
add
loop
sahf
stc
repz
mov
dec
rol
mov
sbb
fmul
jecxz
push
imul
mov
sar
cdq
rcl
repz
(bad)
(bad)
pop
pop
jnp
aam
rcr
push
push
into
div
daa
push
js
(bad)
call
mov
or
inc
setg
aas
sbb
es
ins
mov
fsubr
sbb
push
call
lods
push
sub
mov
in
sub
(bad)
ficom
imul
push
push
ror
aaa
dec
adc
fiadd
int3
push
adc
stc
cmp
inc
shl
shl
jmp
or
movs
mov
xchg
ror
sub
mov
retf
pop
push
dec
je
stos
movs
dec
push
ds
xchg
dec
into
mov
sub
fwait
sub
(bad)
retf
cs
inc
mov
mov
cld
repnz
xor
push
mov
mov
rcr
leave
or
jne
push
(bad)
pop
mov
cmp
hlt
sar
push
pop
mov
jne
mov
fld
sbb
retf
mov
outs
mov
fsubr
pop
call
pop
rol
int3
mov
sbb
jg
pop
and
mov
into
iret
ds
(bad)
bound
out
xor
imul
stos
ds
cwde
push
sub
jmp
pusha
repz
adc
cli
xor
pusha
and
xor
aad
aaa
sbb
retf
les
fcomp
xchg
movs
ret
mov
pop
mov
je
pop
mov
mov
xchg
push
push
clc
mov
outs
and
in
jbe
sbb
xchg
sti
jp
inc
mov
adc
ret
and
clc
addr16
jo
or
out
xchg
cmps
mov
and
or
cmp
mov
pop
fcomp
sbb
rcr
ret
sbb
sbb
adc
jno
mov
inc
mov
lahf
ds
sbb
rcr
(bad)
pop
(bad)
push
fisub
ror
pop
pop
push
movs
fist
call
pop
xchg
xchg
inc
pop
dec
test
in
mov
in
adc
(bad)
cmp
sbb
jo
push
dec
pop
adc
pusha
inc
mov
cmp
xchg
outs
add
std
out
jns
imul
or
loop
sub
push
sbb
icebp
repnz
mov
fcmovnb
shl
(bad)
lea
and
popf
jle
sbb
pop
test
and
shr
test
outs
adc
das
jne
lahf
mov
add
cld
ret
cmps
pop
jb
jb
or
mov
stos
push
inc
pop
cmp
cmp
call
sub
aaa
pop
lea
adc
call
das
mov
je
push
inc
ds
xchg
(bad)
and
jb
loop
outs
cmp
cmp
(bad)
aam
and
lods
pop
in
daa
push
js
icebp
sbb
imul
adc
cmps
sbb
jbe
or
pop
mov
mov
adc
xor
mov
jmp
jb
jmp
and
nop
mov
add
neg
sahf
call
xchg
mov
pop
loopne
push
pop
and
dec
in
movs
call
cwde
inc
mov
fild
fs
cli
adc
loope
inc
mov
cmp
outs
mov
leave
mov
adc
cmp
fwait
pop
xchg
xchg
pusha
hlt
popf
bound
mov
call
(bad)
mov
fadd
retf
arpl
mov
mov
pop
cmp
add
mov
push
(bad)
cmps
cmp
or
xor
fsub
inc
imul
je
sbb
cwde
pop
retf
xor
enter
inc
test
or
xor
sub
(bad)
mov
xor
fcomp
push
scas
dec
lahf
nop
dec
es
jnp
es
push
out
daa
push
nop
sbb
ja
inc
sbb
enter
ror
fidiv
cmps
ret
imul
add
and
punpckhbw
mov
mov
jae
call
movs
scas
push
clc
or
popa
jb
sbb
mov
push
jns
xchg
mov
aaa
lock
mov
jbe
dec
xor
fisttp
inc
sti
icebp
push
pop
(bad)
cld
dec
(bad)
stc
pop
pop
clc
sti
inc
popf
aaa
sub
jg
movs
ja
dec
outs
scas
adc
sub
rcl
aam
xchg
imul
and
jle
in
jecxz
dec
ja
mov
std
dec
push
lock
les
inc
pop
or
call
cmp
cld
cmp
sbb
mov
push
fst
jle
adc
aaa
clc
push
or
mov
sahf
retf
sub
mov
js
cli
fcmovnu
into
push
or
outs
imul
mov
dec
jge
call
ds
test
sbb
sub
xor
mov
stos
in
leave
ja
cwde
enter
and
pusha
xchg
mov
out
push
jp
adc
stos
pusha
aam
cmps
dec
push
call
and
pop
mov
(bad)
cmp
test
in
ret
or
sbb
fisttp
sbb
les
cmp
add
xor
cmp
popf
xchg
call
mov
loopne
inc
add
jo
push
add
mov
mov
push
pop
sub
cwde
add
test
enter
mov
es
mov
out
shl
mov
nop
sub
mov
cmps
shr
pop
je
mov
push
pushf
in
test
mov
leave
xchg
lock
sti
xchg
ss
dec
mov
test
sub
xor
mov
jle
xchg
inc
pushf
cmp
push
dec
call
push
or
push
cli
xchg
jge
sbb
(bad)
pop
mov
in
mov
call
pop
sub
adc
push
movs
sbb
add
xor
fs
sbb
mov
lds
inc
pop
cli
add
cmps
sub
sub
mov
cmp
pop
imul
or
rcl
and
call
test
pop
xchg
gs
lds
loop
sti
sbb
inc
fwait
add
ss
(bad)
sbb
jns
enter
movs
xchg
(bad)
das
ja
cmc
mov
push
xor
call
dec
mov
clc
xor
pop
cmp
dec
jnp
mov
add
ins
pop
int3
xor
imul
pusha
jns
cs
movzx
mov
movs
scas
les
(bad)
cwde
in
sub
ins
inc
add
enter
adc
retf
xchg
push
loope
imul
xor
test
or
jmp
pop
pusha
mov
in
lock
(bad)
(bad)
call
div
xchg
mov
adc
xor
sbb
push
addr16
fmul
mov
jbe
(bad)
adc
pop
sbb
fisttp
int3
popf
cmps
test
mov
push
mov
mov
mov
push
lea
mov
adc
mov
adc
loopne
clc
xchg
ret
sbb
stos
scas
sbb
fcom
pop
(bad)
sub
sbb
xor
pop
popf
call
scas
and
mul
aaa
cmps
jge
scas
cld
xor
sbb
fsubr
pop
out
neg
(bad)
enter
(bad)
xor
pusha
gs
cmp
mov
movs
inc
into
inc
data16
repnz
shl
je
pop
or
push
jae
pop
pop
mov
mov
xchg
test
xchg
sbb
xchg
dec
pop
or
jecxz
push
sub
lock
std
shl
mov
call
inc
mov
xchg
out
inc
adc
xchg
(bad)
retf
fmul
push
adc
lahf
pop
xor
add
and
push
xor
jne
popa
popf
push
dec
cwde
xchg
adc
repnz
test
mov
arpl
shl
inc
push
jmp
sbb
movs
push
cmp
mov
push
push
aas
les
imul
or
ds
xor
stos
lods
mov
scas
ins
cmc
sbb
ret
jbe
not
xchg
js
jecxz
push
add
add
pop
inc
dec
cmps
rol
repz
and
adc
push
stos
push
mov
or
sub
pop
bnd
fs
mov
inc
(bad)
out
cmp
(bad)
call
or
cmc
imul
jb
scas
leave
inc
pop
sbb
or
lods
repnz
mov
out
jmp
lods
mov
push
dec
push
lock
fidiv
push
aas
fst
outs
(bad)
mov
adc
pop
es
dec
fdiv
xlat
lahf
mov
pop
ins
shl
sbb
div
inc
xchg
xor
js
mov
sub
cmp
push
pop
xchg
jb
inc
mov
pop
call
je
mov
mov
js
jmp
rcl
aad
dec
into
jl
sub
jmp
arpl
push
mov
adc
mov
loope
xor
or
je
mov
add
pop
in
cmc
cld
add
movs
sub
rol
cmps
pop
fimul
int
ja
pop
inc
movs
jg
mov
inc
push
dec
jp
sbb
inc
add
fistp
sar
cmp
adc
repz
or
xor
pop
out
fist
jb
jle
mov
add
mov
xlat
dec
shl
push
sub
repz
pop
movlps
sub
mov
loop
and
mov
mov
cmp
and
pop
jmp
clc
push
cmp
in
cmp
sbb
pop
sti
sbb
inc
jp
jle
mov
std
(bad)
adc
sub
retf
shr
adc
jge
les
dec
pop
clc
shl
adc
loop
loopne
stc
ja
popf
add
jge
pop
fst
push
push
xchg
aad
cli
aad
lahf
cmps
sub
or
adc
ds
into
sbb
aaa
mov
jno
inc
out
push
(bad)
mov
int3
retf
add
out
in
movs
pop
pop
jle
xchg
int3
(bad)
xor
ret
retf
mov
jmp
mov
addr16
(bad)
popa
push
rcl
fldz
or
lea
xor
arpl
push
aad
mov
(bad)
inc
retf
sub
sti
pop
mov
pop
idiv
pop
adc
lds
fs
(bad)
aam
outs
cmove
outs
bound
inc
adc
jnp
sahf
scas
mov
gs
cmp
popa
sub
push
inc
(bad)
icebp
in
cmp
inc
cli
pop
add
sbb
ins
xor
popf
xchg
sbb
jnp
shr
(bad)
rol
xor
sar
inc
mov
js
aad
mov
loope
ins
xchg
dec
add
aaa
popf
inc
xchg
sbb
dec
popa
cs
pop
mov
test
xchg
and
or
outs
push
rol
add
jecxz
or
jmp
cmp
fild
or
ja
cmp
shl
adc
icebp
cmp
stos
mov
pop
int3
cmps
cmps
xor
add
rcl
mov
scas
inc
cmp
js
inc
push
dec
xchg
push
add
mov
and
or
fsubr
add
dec
push
mov
sbb
cs
add
xchg
dec
dec
xor
add
mov
dec
ret
js
jg
popf
push
jno
jge
mov
addr16
clc
mov
rcl
push
add
shl
dec
jecxz
mov
xchg
pop
jmp
adc
jo
into
sbb
and
in
mov
push
or
sub
retf
fstp
ja
mov
mov
in
addr16
(bad)
loopne
dec
push
inc
xchg
cmc
test
int3
jmp
pop
call
add
(bad)
test
addr16
fisubr
hlt
inc
dec
add
in
(bad)
xchg
and
push
jb
jl
(bad)
inc
imul
(bad)
das
and
or
pop
fbld
jno
mov
movs
pushf
mov
jns
sbb
iret
push
sar
idiv
inc
and
xchg
inc
adc
imul
rol
jmp
pusha
xchg
fild
(bad)
sub
ins
jmp
dec
aaa
inc
(bad)
jl
ja
cmp
cmp
cwde
cmc
(bad)
fsub
mov
in
inc
sbb
lock
xor
adc
cli
das
dec
sbb
std
popa
mov
rcr
dec
mov
retf
or
xor
fs
or
ror
jb
xchg
jge
loope
cmp
push
cs
xchg
inc
fwait
sbb
sbb
das
fdiv
aad
neg
popf
jbe
cmp
inc
retf
mov
(bad)
and
cld
xchg
imul
loopne
or
jae
(bad)
in
cs
jg
cwde
test
pop
inc
gs
xor
stc
outs
xor
adc
lahf
clc
movs
cwde
(bad)
aad
push
ror
mov
loopne
jecxz
push
pop
xor
in
inc
push
into
ror
mov
sub
push
ins
mov
add
mov
jle
outs
stos
xchg
sub
mov
(bad)
cmp
sbb
arpl
retf
xchg
sahf
les
jne
jmp
call
outs
mov
sub
sti
adc
cli
test
push
mov
and
ins
xchg
dec
cmp
outs
into
mov
xlat
mov
ins
push
sahf
leave
sbb
push
jo
jecxz
pop
clc
loopne
sahf
ss
ret
in
mov
mov
test
mov
(bad)
(bad)
jge
xchg
jmp
xchg
aaa
push
adc
cmps
ins
xor
push
shl
out
xor
or
or
or
(bad)
adc
int
int3
retf
pop
push
outs
and
adc
push
adc
mov
shr
dec
inc
inc
add
test
aaa
xor
call
inc
icebp
xchg
jg
pop
lds
lods
ja
sbb
jmp
fcomp
jnp
dec
icebp
mov
cmp
dec
inc
jge
jbe
scas
mov
dec
inc
mov
jne
daa
mov
test
sub
or
xor
retf
(bad)
mov
xlat
fld
pushf
add
dec
pop
adc
fwait
test
sub
lock
(bad)
add
xchg
mov
leave
adc
jns
push
lss
test
inc
jo
fcomp
pop
sub
xchg
ja
mov
out
adc
xchg
sub
add
pop
push
sub
xchg
mov
adc
ds
pop
mov
and
mov
dec
mov
jno
movs
add
int3
aaa
hlt
and
mov
push
loop
mov
adc
les
mov
leave
mov
cmp
stos
test
rcl
inc
cmp
repz
int
cmp
sar
dec
push
int3
adc
pop
mov
pusha
movs
cmps
push
js
(bad)
jo
xchg
and
(bad)
mov
int3
cmp
push
shr
pop
push
sbb
add
jle
adc
stc
mov
int
gs
sbb
mov
add
setnp
sbb
cld
push
movs
frstor
inc
sti
mov
jo
mov
adc
std
mov
call
xor
nop
enter
fs
jp
(bad)
mov
retf
xlat
push
or
cs
test
add
jb
mov
and
mov
icebp
int3
sbb
mov
jge
je
pop
pop
mov
lods
mov
push
lock
mov
jmp
push
xchg
fcmovnb
xchg
jmp
cmp
rol
cmp
add
xor
inc
cmps
sub
shr
mov
pop
push
in
push
mov
jmp
dec
mov
push
imul
stos
adc
mov
(bad)
das
call
pusha
push
stos
mov
loopne
sub
rcr
push
dec
push
(bad)
call
out
jae
aad
push
std
mov
shl
stc
test
repnz
cmps
repnz
add
fcmove
ficomp
cmp
or
xor
pusha
cmp
sbb
mov
retf
hlt
sar
andps
push
adc
aam
int3
stos
cmp
sub
fistp
mov
mov
and
jnp
pop
cmp
xchg
fcom
lds
push
adc
mov
inc
inc
scas
pop
or
call
imul
or
lahf
popf
pop
(bad)
cmp
pop
out
jmp
cmp
or
pop
adc
sti
adc
cmp
dec
clc
jno
adc
push
popa
cmc
mov
bound
fisub
inc
shr
jle
scas
daa
out
(bad)
xor
push
dec
dec
gs
and
sbb
push
inc
push
mov
adc
cli
call
xchg
std
ret
push
adc
and
or
mov
call
mov
pop
lods
add
clc
push
fldcw
mov
mov
ds
and
loope
dec
and
out
out
push
mov
gs
movs
mov
sbb
or
xchg
iret
movs
addps
add
sbb
adc
clc
or
(bad)
mov
std
cbw
pusha
dec
push
jb
pop
std
mov
movs
mov
idiv
mov
and
mov
dec
jp
test
mov
imul
arpl
jnp
ret
pop
cmp
ja
pop
inc
stos
xor
sub
mov
or
in
test
cdq
cmp
pop
(bad)
and
add
stos
and
data16
and
pop
repnz
xchg
arpl
aas
pushf
fisub
loopne
fidivr
add
inc
nop
hlt
or
add
pop
rol
sbb
call
lods
mov
cmp
cdq
sahf
adc
dec
gs
mov
add
test
cs
mov
addr16
dec
out
pop
and
add
aas
rcl
imul
jg
(bad)
sti
inc
pop
ret
or
or
add
pop
mov
(bad)
cmps
or
fsub
fimul
pushf
iret
or
imul
out
pop
aad
and
(bad)
je
rcl
test
stos
xor
mul
jle
inc
jo
repnz
xchg
punpckldq
and
mov
fnstsw
sbb
(bad)
fnsave
popf
cmp
nop
pop
xor
jb
mov
push
inc
jg
dec
lea
cs
ins
in
scas
inc
lods
ds
je
and
mov
fdivr
in
push
and
and
mov
jle
sub
adc
cwde
fimul
stos
xchg
and
enter
loope
cld
jecxz
(bad)
(bad)
mov
xlat
sbb
js
add
pushf
in
xchg
add
data16
int3
dec
xlat
xchg
or
in
test
push
or
lods
push
pop
out
push
test
pushf
jns
jl
aad
mov
mov
imul
adc
mov
icebp
or
jns
mov
push
(bad)
fld
cli
cld
push
jl
and
or
add
sahf
xor
pop
imul
aam
in
outs
lea
pop
mov
pop
loope
addr16
mov
pushf
inc
mov
ds
cwde
sub
add
jmp
mov
or
xchg
adc
jmp
jp
pop
jns
pop
cmp
outs
imul
dec
test
push
test
out
lock
sahf
jle
jb
dec
xor
pop
cmp
mov
push
xor
int3
cmc
fwait
pop
or
data16
add
cmp
les
xor
cdq
sbb
mov
push
jno
jp
ret
movs
pushf
sbb
ins
les
lea
jns
fwait
or
daa
retf
inc
push
cli
lock
and
in
add
and
data16
and
(bad)
sub
mov
int3
loope
or
xor
cdq
inc
jo
pop
cmp
sub
push
fsubr
cmps
pop
sub
icebp
imul
nop
xor
jge
les
mov
sahf
nop
push
add
cmp
bound
iret
jmp
push
daa
lods
pop
xor
pop
fs
test
arpl
cs
mov
test
mov
sahf
les
pushf
dec
jae
xchg
mov
in
lds
dec
sbb
push
jo
(bad)
xchg
xchg
xor
lahf
(bad)
jbe
fmul
cs
mov
test
(bad)
jmp
and
test
fisttp
jne
push
mov
adc
jmp
cli
mov
xchg
iret
cmp
mov
sti
dec
outs
jbe
out
rol
jle
pusha
sti
out
(bad)
fwait
and
retf
data16
pusha
push
sub
mov
mov
mov
adc
sbb
pop
adc
cmp
das
data16
add
mov
(bad)
push
arpl
idiv
mov
pop
mov
dec
inc
and
scas
push
pop
aas
ds
push
mov
pop
imul
scas
push
outs
cwde
xchg
mov
in
ffree
and
(bad)
iret
mov
inc
xor
cs
ss
leave
inc
adc
mov
cs
jmp
fdivr
adc
or
cdq
(bad)
and
shl
mov
xchg
test
pop
adc
mov
cmp
xlat
movs
(bad)
sub
in
xlat
lds
push
sahf
jno
cmp
lods
push
inc
cmp
shl
fwait
mov
mov
and
jbe
or
ds
test
sbb
iret
and
shl
out
stos
and
and
out
add
inc
stos
push
cmp
add
xchg
mov
adc
frstor
leave
ja
mov
xlat
out
stos
xor
imul
mov
shl
sar
movs
push
pushw
cld
add
ret
inc
adc
ret
or
in
movs
cmp
add
sbb
jle
mov
pop
mov
shl
mov
(bad)
push
dec
or
mov
sub
mov
cmp
xor
and
mov
and
mov
bound
in
dec
outs
nop
xchg
mov
and
xor
jno
mov
add
(bad)
dec
jl
jae
int3
cmp
shl
lock
jno
cmp
xor
push
and
add
shl
mov
mov
loop
pop
loopne
jo
loope
mov
or
test
sbb
(bad)
xor
(bad)
push
(bad)
cmp
loope
(bad)
and
ror
cdq
hlt
mov
inc
cmp
sbb
cld
(bad)
mov
xchg
xchg
jnp
pusha
repnz
adc
stos
adc
add
mov
push
push
ja
test
mov
inc
dec
push
push
movs
pusha
inc
ss
xchg
out
or
mov
add
iret
mov
mov
and
or
cmps
jge
cmp
retf
in
adc
rcl
push
popa
arpl
iret
imul
sahf
push
pop
xor
dec
(bad)
pop
push
ins
xchg
(bad)
repnz
ret
add
xchg
inc
scas
sbb
xchg
test
cmp
add
shl
lahf
mov
jp
dec
adc
aas
adc
sub
cwde
call
push
mov
fmul
lods
and
or
out
add
es
cmp
mov
ss
jno
out
cmps
jle
adc
pushf
cmp
addr16
jge
dec
pop
in
xor
add
cmp
jle
add
faddp
dec
sub
add
xchg
adc
xchg
shl
(bad)
push
cmp
test
add
stos
mov
adc
(bad)
sub
nop
popf
cmp
out
addr16
loope
inc
(bad)
pusha
or
(bad)
into
cwde
fs
call
lds
pop
repnz
lahf
enter
popf
mov
pop
sub
add
ins
push
cmps
(bad)
(bad)
jbe
ror
sbb
cld
and
outs
xchg
fst
mov
pop
scas
sti
inc
(bad)
jl
inc
lods
lock
aad
jecxz
scas
std
les
jle
aaa
stc
and
loope
mov
mov
adc
sub
repz
and
ins
and
mov
mov
adc
push
mov
lea
pop
inc
jge
pop
push
cmp
add
fucom
(bad)
cmp
fucomp
arpl
pop
in
retf
push
in
pop
sub
dec
jmp
pop
nop
mov
addr16
loope
mov
aad
pusha
cmp
push
push
sbb
mov
test
scas
cmp
dec
push
jbe
sar
mov
lea
jnp
into
dec
shl
fsubp
enter
out
ds
mov
(bad)
push
jns
add
sbb
fcomp
in
push
mov
jns
loop
test
in
and
dec
dec
xchg
add
jmp
pop
and
je
push
xchg
inc
push
inc
popa
cmp
outs
pop
sub
shl
push
jp
inc
jg
push
inc
out
daa
xchg
add
test
jb
repz
push
movs
addr16
inc
mov
mov
int
and
es
(bad)
stos
and
dec
rol
in
mov
dec
loopne
fsincos
mov
adc
or
and
and
xchg
mov
ja
add
test
ins
push
loope
and
sbb
fwait
pop
stos
lds
(bad)
push
or
push
xchg
mov
dec
ds
jae
push
js
jae
fimul
cmp
add
loop
mov
adc
inc
mov
mov
mov
add
int3
iret
fimul
scas
sbb
cwde
lock
jge
xor
push
sbb
lods
(bad)
cli
arpl
dec
ss
xchg
add
push
retf
ret
popf
hlt
imul
pop
std
leave
and
inc
loopne
iret
scas
jecxz
dec
mov
mov
fisttp
jns
rcl
pop
sbb
popf
outs
sbb
repz
test
lods
mov
pop
jmp
sbb
cmps
dec
mov
loopne
nop
push
mov
dec
jbe
adc
popf
les
sub
mov
jp
mov
push
xor
dec
in
xor
cli
outs
lds
shl
xlat
xchg
fmul
mov
lods
inc
push
cld
sbb
or
in
or
lods
add
pop
xchg
sar
das
mov
frstor
out
pop
mov
pushf
jl
cmp
jns
lahf
mov
dec
lods
lahf
popf
movs
add
test
jp
movs
add
cmp
arpl
jbe
push
lds
movs
mov
and
daa
jg
add
push
jl
push
repnz
pop
(bad)
xchg
int3
hlt
cmps
xchg
loop
cmp
in
inc
mov
inc
stc
jns
js
jl
neg
mov
ins
imul
(bad)
pop
ja
jmp
xor
jmp
addps
push
retf
sub
(bad)
xlat
icebp
sub
mov
outs
popf
icebp
dec
ret
leave
dec
test
ror
xor
and
pop
sub
pop
add
jmp
jge
mov
fcom
jp
and
outs
jmp
cmp
sti
xor
mov
addr16
jno
leave
add
mov
out
pop
push
sub
test
push
cmp
lahf
inc
sub
out
mov
outs
mov
add
inc
in
popa
inc
idiv
xchg
std
or
lea
fcomp
popf
stos
jl
repnz
sbb
inc
sbb
xchg
add
stos
mov
dec
loopne
mov
ss
or
es
cmp
mov
jl
in
ins
lods
aam
jnp
out
xchg
cs
pop
push
mov
xchg
cs
sahf
xor
push
sar
shl
mov
bnd
and
fsubr
ins
cmps
sbb
push
(bad)
pusha
rcr
cmp
imul
pop
mov
and
mov
mov
push
jmp
stc
push
pop
push
add
xor
lods
or
jmp
and
mov
aam
xchg
push
xor
in
ins
cmp
dec
test
and
fldenv
cmps
ins
or
inc
je
repnz
pop
jne
in
scas
stos
jnp
in
fiadd
in
pop
and
mov
ror
sbb
jns
sbb
push
and
pop
jp
and
cmps
repnz
jp
mov
sbb
and
mov
cmp
inc
pop
inc
dec
xor
dec
ror
sbb
ins
or
xor
repnz
dec
popf
mov
pop
js
in
add
stc
push
sub
mov
pop
mov
sbb
push
xor
stos
mov
addr16
mov
mov
pusha
jo
js
adc
icebp
xchg
in
scas
ins
out
fadd
pop
jg
xchg
cmp
pop
mov
lds
mov
or
pop
ret
mov
adc
inc
inc
or
and
into
adc
pop
les
dec
test
mov
ins
iret
jbe
cmovns
mov
in
sti
add
or
mov
nop
popf
pop
push
in
push
movs
test
bound
jle
push
shl
xchg
psubb
mov
lods
ja
jnp
inc
arpl
xchg
in
or
add
jmp
fldenv
sbb
jle
sub
mov
xchg
mov
pop
cmps
psllq
in
sub
push
jge
dec
jne
cmp
fld
dec
repnz
push
push
fcom
out
push
mov
repz
and
mov
clc
je
int
pop
sahf
pop
fisttp
sar
mov
push
fwait
jmp
stos
mov
loopne
scas
jae
jg
or
(bad)
retf
fisubr
xchg
jg
ret
mov
inc
mov
and
out
and
dec
inc
xor
inc
dec
push
jmp
push
movs
or
and
mov
cmps
shl
add
cmp
cmp
sahf
scas
out
mul
xor
jmp
in
dec
sub
mov
cld
push
sbb
pop
shl
xor
aad
ret
(bad)
push
dec
and
inc
jl
push
push
enter
dec
pop
sbb
retf
sub
call
jp
clc
ja
mov
cmp
mov
mov
lock
stos
arpl
inc
rol
loopne
cld
je
aaa
cmp
ret
aas
xchg
add
test
hlt
and
and
jmp
lock
fidiv
dec
je
inc
test
fisub
sbb
in
test
ins
in
push
jnp
rcl
or
in
sbb
jbe
push
sub
int3
fst
sub
int3
imul
and
loope
jl
mov
ret
repnz
icebp
and
jg
movs
std
add
das
add
loope
pusha
ins
xchg
pusha
daa
push
pop
fidivr
or
xor
jb
mov
cmp
outs
out
test
pop
inc
mov
sbb
retf
jge
jnp
mov
retf
je
call
cs
gs
shr
mov
dec
popa
in
test
xor
in
xchg
and
xchg
xchg
ror
cmp
push
ins
add
ins
loope
(bad)
pushf
xchg
push
jns
mov
int3
test
jbe
xor
push
xchg
push
inc
sar
pop
js
movs
cwde
dec
jg
js
lods
or
jl
and
sbb
stc
dec
ja
out
nop
mov
ss
popf
into
pop
xchg
ja
and
cmp
jl
icebp
shr
xor
call
jle
fdivr
aam
push
fstp
mov
out
cwde
and
or
outs
push
add
clc
std
add
neg
repz
inc
xor
(bad)
and
loopne
stos
mov
hlt
sub
jmp
test
push
mov
mov
fstp
inc
mov
shl
xchg
mov
mov
outs
loop
iret
imul
or
xor
pop
repnz
jb
aaa
push
push
sahf
aaa
dec
pusha
retf
and
in
(bad)
mov
mov
xchg
(bad)
mov
(bad)
bound
je
sahf
jl
jmp
cmp
push
push
neg
xchg
and
js
shl
sti
test
push
mov
fist
movd
mov
pushf
cmps
repz
fbld
(bad)
bnd
xchg
adc
cdq
add
add
mov
add
jp
push
inc
adc
mov
or
push
cmps
jecxz
and
dec
xor
adc
adc
pop
push
fdiv
dec
or
pusha
sub
push
stos
pop
data16
cdq
jge
push
or
mov
and
or
adc
arpl
sbb
push
scas
daa
lods
mov
(bad)
mov
mov
pop
mov
mov
js
mov
pop
stc
xlat
outs
xor
mov
cmps
add
leave
inc
sar
ss
(bad)
sbb
and
jge
mov
adc
jmp
stos
in
xchg
fsubp
ss
xor
leave
sysexit
sub
jae
pop
cld
xchg
nop
push
mov
(bad)
cmp
pop
mov
sub
es
sbb
pop
(bad)
in
(bad)
dec
push
cmps
xchg
mov
sbb
push
retf
ficomp
mov
out
jmp
outs
test
mov
xor
scas
jno
adc
sub
jb
adc
cmp
jne
inc
xor
add
fst
dec
cmp
and
outs
movs
inc
xchg
ds
sub
enter
jl
inc
stc
xchg
sub
fstp
mov
mov
es
mov
into
jp
js
push
dec
mov
mov
scas
push
jno
sbb
not
xchg
aaa
ret
push
cmp
xor
rol
loop
mov
mov
test
nop
bound
push
sahf
add
rol
ja
add
test
sar
fdiv
and
xchg
and
in
jge
fnclex
not
lea
movs
push
sub
mov
inc
ins
sbb
dec
pop
or
mul
mov
retf
sub
sbb
inc
dec
lock
cmp
push
ss
cmps
dec
rcl
retf
call
cmps
dec
ror
and
sub
jge
inc
outs
xor
xchg
inc
cwde
sub
mov
in
xchg
sahf
mov
inc
fnsave
nop
xchg
arpl
cmp
push
fcomp
scas
push
enter
sub
out
test
xchg
aam
push
lock
push
in
daa
jmp
sbb
(bad)
xor
daa
ins
test
push
xor
mov
cmp
cmp
pushf
jge
(bad)
(bad)
loop
or
jg
adc
jp
jo
xor
xor
popf
sahf
dec
fwait
jecxz
lea
shl
ins
mov
cmps
jns
cmps
stos
pop
ss
jp
mov
cmps
fld
(bad)
cld
jno
mov
pop
add
movs
call
xchg
push
jne
mov
out
mov
inc
cmc
jl
cmp
addr16
jb
mov
aam
add
add
mov
in
(bad)
xchg
scas
ja
xchg
scas
pop
sar
das
jecxz
xchg
cmp
je
fisubr
popf
int
mov
or
hlt
fcomp
mov
aaa
scas
imul
xor
(bad)
push
ja
repz
lahf
dec
sar
pop
ja
push
sbb
outs
or
jbe
fwait
movs
pop
xor
mov
sub
enter
jle
adc
pop
call
loopne
shl
adc
or
cmp
arpl
je
fwait
out
int3
data16
out
cld
hlt
cwde
stos
jl
dec
ds
mov
mov
add
mov
icebp
jle
imul
rcl
and
es
enter
imul
mov
mov
jmp
sub
cmpxchg
je
pop
add
mov
and
pop
xchg
ja
cli
jo
add
mov
inc
jecxz
(bad)
cmp
and
pop
adc
dec
sub
(bad)
pusha
data16
movs
out
pop
push
cwde
cmp
sub
arpl
jle
call
xchg
div
add
xchg
jmp
adc
cld
jle
enter
pusha
or
add
rep
mov
ins
jae
xchg
mov
xchg
mov
cld
xchg
out
mov
lock
inc
pushf
movs
(bad)
or
pop
imul
int
fcom
mov
pop
xchg
call
sbb
mov
and
push
test
mov
jae
sub
test
lock
pop
aas
sbb
out
dec
fnsave
add
into
into
inc
and
jns
add
lods
jmp
add
jb
mov
mov
add
out
popf
pop
adc
mov
inc
xchg
test
repnz
xor
into
(bad)
adc
in
cmps
add
imul
lahf
sbb
push
and
jns
mov
mov
sbb
mov
sub
int3
pop
add
rcr
aad
sub
jp
mov
adc
xchg
aam
and
inc
cmp
int
mov
cmc
push
xor
mov
dec
popf
xor
inc
inc
and
cs
inc
les
je
jecxz
psubb
and
xor
in
repz
dec
mov
push
mov
dec
xor
push
fmul
js
mov
cdq
retf
xor
push
clc
xor
sub
dec
dec
int3
pusha
shl
stos
ret
push
pop
ds
cdq
push
push
or
push
(bad)
(bad)
mov
mov
jno
(bad)
and
gs
iret
addr16
mov
addr16
xchg
ins
jl
sub
fldcw
call
mov
dec
fdiv
stos
cmps
mov
js
sbb
cmp
ins
adc
sub
lock
pop
fadd
test
cdq
mov
cdq
or
xchg
stos
cmp
mov
cmp
lds
outs
fistp
test
es
cmp
or
cwde
pop
sbb
dec
arpl
cmps
xor
mov
xchg
retf
hlt
scas
cmc
(bad)
lahf
scas
mov
xacquire
jns
push
arpl
jb
cmp
or
jg
leave
leave
addr16
dec
mov
jbe
shl
mov
adc
add
sbb
jo
pop
xchg
dec
fwait
cmp
lea
dec
inc
or
jle
push
jge
xor
push
fidivr
mov
sub
mov
dec
out
pop
pop
out
jnp
je
sahf
repnz
sbb
int
mov
mov
fist
ins
jl
xor
sbb
mov
or
enter
enter
add
xor
mov
dec
adc
xor
out
aaa
mov
dec
scas
push
jo
mov
pop
imul
jl
stos
pop
dec
xchg
stos
cmps
inc
push
xchg
mov
sub
jp
mov
mov
or
xchg
dec
das
inc
add
jnp
psubd
mov
jmp
fistp
shr
cmp
outs
(bad)
jge
sub
lods
adc
push
push
mov
movs
xor
repz
jg
in
enter
imul
fist
mov
mov
and
call
in
fs
std
(bad)
cli
(bad)
cli
daa
fld
xchg
cmp
and
loopne
mov
jns
jmp
sub
fstp
pop
add
pop
repnz
dec
in
add
jle
cld
mov
lds
jge
leave
inc
add
mov
stos
dec
inc
and
jg
dec
ins
add
xchg
lahf
inc
inc
cld
lods
dec
into
sbb
icebp
mov
imul
and
inc
shl
mov
inc
dec
adc
popf
addr16
mov
xchg
lds
cld
ret
or
retf
ror
add
lods
add
sbb
add
ins
xor
inc
pusha
loopne
pop
sub
push
xor
and
loopne
sar
inc
popf
and
mov
lds
lock
inc
sbb
dec
dec
dec
lea
rol
in
cmp
sub
(bad)
sbb
push
push
test
std
jb
pop
mov
jecxz
cmp
xor
cmps
movs
aad
xor
mov
dec
push
cli
stos
movs
and
mov
scas
imul
call
mov
push
jne
popf
pop
inc
adc
fwait
sahf
cmp
or
inc
in
aad
enter
pop
jmp
ja
jne
inc
lahf
into
neg
jg
stc
jne
les
dec
mov
or
push
dec
inc
cmc
scas
into
jmp
dec
cmps
xchg
stos
mov
mov
or
retf
shl
(bad)
iret
(bad)
imul
ror
cmp
dec
fprem1
jo
lods
cmp
xor
add
enter
mov
mov
test
retf
and
sub
sti
in
sbb
jp
cmp
aas
sub
hlt
enter
push
fucomp
inc
addr16
inc
enter
sbb
push
jle
pop
std
ins
adc
adc
or
mov
pop
mov
ret
xchg
xchg
bound
ret
cs
repz
mov
mov
std
aad
fidiv
cmp
div
push
lahf
push
pop
imul
pop
mov
inc
sub
or
fld
lea
or
movs
xchg
sub
cmps
xchg
aas
pop
icebp
leave
mov
xor
mov
repnz
mov
cpuid
ins
dec
pop
mov
es
cmc
je
jmp
(bad)
mov
test
imul
das
jp
mov
in
inc
rcr
(bad)
push
fstp
hlt
pop
sub
jmp
and
loope
mov
pop
xor
mov
mov
mov
pop
retfw
xlat
aad
sbb
test
into
loope
cmp
inc
cmp
sar
in
lods
inc
sub
push
push
dec
sbb
push
out
mov
stos
ds
shr
inc
repnz
sbb
mov
pop
pop
pop
sbb
nop
jle
jge
ja
(bad)
fmul
mov
daa
and
xchg
in
mov
push
je
inc
pop
add
in
push
xor
sbb
or
jns
hlt
rcl
sar
mov
jecxz
repz
lea
into
adc
and
adc
or
mov
lods
popa
sub
xor
and
and
fdivp
fsub
stos
xor
push
xchg
dec
fidiv
leave
ds
hlt
add
ror
pop
imul
cmp
jb
add
loopne
ds
or
sub
xchg
mov
mov
lock
test
std
ds
pop
cld
jmp
stc
out
cli
adc
mov
cmp
pop
push
fwait
sub
cli
arpl
mov
xor
add
stos
jge
cmp
imul
mov
ds
adc
add
shr
push
repnz
bound
(bad)
scas
push
(bad)
adc
not
les
jp
adc
fadd
and
pop
mov
test
mov
inc
stos
enter
and
inc
int3
sub
inc
mov
pop
mov
out
std
ds
aam
scas
in
jecxz
lss
mov
movs
xchg
push
imul
mov
arpl
hlt
cld
cmp
xor
xor
jg
outs
mov
cmp
dec
movs
movs
outs
ja
into
or
test
dec
stos
pop
adc
sbb
pop
pop
test
(bad)
mov
add
fwait
pop
push
pop
add
add
in
mov
or
cwde
mov
xor
cdq
jno
cwde
movs
jl
xlat
inc
imul
dec
or
cs
and
cmps
or
mov
add
xor
add
xchg
inc
icebp
xchg
std
xor
mov
dec
in
mov
ds
aaa
data16
(bad)
or
imul
pop
adc
fadd
cld
test
in
pop
movq
dec
sub
sbb
popf
xlat
and
pushf
rol
push
mov
push
mov
cmp
rcl
inc
push
(bad)
add
dec
mov
enter
loop
aam
xor
sub
push
pop
mov
push
or
out
pop
lahf
rcr
rcl
nop
(bad)
inc
test
loopne
xlat
cs
jmp
mov
mov
mov
movs
cmps
mov
mov
mov
lds
data16
(bad)
cmp
cmp
add
or
xor
aad
lods
add
sahf
shr
stos
push
xchg
adc
xchg
not
jge
dec
ret
sbb
sbb
and
or
sbb
dec
loope
jecxz
jg
fmul
out
je
adc
push
into
in
sub
daa
test
inc
mov
or
clc
dec
scas
inc
das
push
loope
mov
mov
in
pop
lea
or
dec
shr
icebp
mov
into
fdivr
fstp
pop
jns
nop
dec
pop
imul
xor
gs
cs
outs
cmps
cld
pop
(bad)
cmc
lds
data16
mov
inc
push
mov
mov
stos
push
sbb
dec
movs
pop
jg
add
test
pop
sbb
sbb
dec
mov
xor
popf
in
call
xor
jo
mov
inc
lods
ds
ins
pop
mov
imul
xor
xchg
retf
cmp
js
jo
into
lea
mov
or
inc
scas
loopne
dec
cwde
ss
popa
mov
jecxz
dec
xor
retf
push
mov
sub
adc
rol
mov
cmp
lods
pop
pop
aam
in
je
shl
daa
sub
pop
jmp
stos
cs
inc
retf
addr16
movs
cmp
rep
test
push
popf
mov
lods
mov
retf
les
xchg
pop
xchg
enter
ja
cwde
push
mov
pop
lahf
jns
add
or
mov
mov
fbld
and
fcmovne
push
mov
cmp
ret
sbb
fldenv
je
mov
cmps
or
repnz
in
xor
std
fist
pop
mov
jmp
jmp
push
js
ins
sbb
dec
cmp
mov
and
mov
ret
pop
in
shl
jge
push
xchg
lock
loop
mov
nop
xor
push
jns
ret
popa
ret
icebp
aad
loope
out
sbb
fild
call
in
add
shr
int3
ret
mov
inc
xchg
push
xchg
shr
add
fsub
mov
jne
xor
out
sbb
shl
fbstp
sbb
imul
adc
neg
popa
(bad)
push
jb
cs
inc
sub
lds
fwait
cmc
pop
loope
inc
mov
adc
mov
adc
xchg
sbb
push
les
(bad)
stos
repnz
pop
xor
add
mov
dec
std
test
push
xor
retf
add
sub
or
add
sub
xchg
loop
xchg
ror
into
daa
jmp
push
fsub
cmp
adc
mov
ja
int
jno
push
cmps
ss
jl
scas
(bad)
scas
bound
pop
ror
in
cmps
cmp
aaa
std
les
cmp
add
in
(bad)
(bad)
pop
test
into
cmps
sbb
sub
sbb
lea
cmp
mov
cmp
inc
dec
push
scas
inc
ja
sar
ror
scas
fsubr
leave
push
sar
cmp
ds
leave
cmp
sub
sbb
push
cmp
mov
addr16
int3
(bad)
sub
out
jecxz
jno
cwde
add
stos
push
stc
je
enter
std
mov
inc
xchg
xor
adc
mov
sbb
push
pop
xor
ds
cmp
stos
sub
sub
aam
or
sti
sti
jl
xchg
mov
inc
mov
jmp
mov
fistp
(bad)
mov
repz
mov
push
ret
scas
inc
pop
cdq
cmp
out
fmul
aad
cmp
loopne
not
retf
stc
scas
mov
bnd
jmp
xchg
xor
sbb
mov
xor
rcr
pop
rol
mov
cmps
in
out
xchg
in
lds
cmp
mov
movs
mov
or
pop
jmp
mov
or
xchg
sub
pop
cmp
sbb
add
sbb
fild
adc
xor
lods
mov
mov
sbb
mov
push
pop
ins
mov
dec
pop
and
mov
add
jne
inc
jns
mov
xor
xchg
dec
aaa
aas
pop
clc
out
cmp
bound
fadd
push
pop
out
arpl
lock
lds
and
in
add
xchg
je
gs
test
test
test
pop
lods
dec
lds
adc
mov
ficom
pop
fist
adc
mov
cdq
imul
jmp
mov
cmp
sbb
fadd
xchg
add
cmc
jecxz
jmp
out
xor
jns
pop
pop
push
std
jno
and
(bad)
loopne
mov
pop
and
imul
in
daa
(bad)
loope
ja
idiv
dec
sub
test
(bad)
fld
jb
pop
push
pusha
rol
clc
mov
arpl
push
repnz
lods
jae
retf
(bad)
jbe
push
push
stos
clts
dec
inc
ins
and
mov
inc
mov
and
adc
inc
xor
mov
pop
sbb
loop
loop
in
nop
sti
pop
xor
scas
(bad)
in
cmp
mov
pop
(bad)
(bad)
mov
xchg
add
or
adc
jmp
std
and
jp
or
clc
sar
sub
je
mov
mov
sbb
ins
inc
adc
sbb
inc
sub
mov
jo
jecxz
dec
jmp
bound
mov
adc
aam
fnstcw
pop
sbb
aam
inc
leave
loope
pop
xlat
fisubr
xchg
aas
push
push
adc
adc
mov
add
mov
(bad)
cmps
hlt
aam
imul
push
popf
or
rcr
or
dec
outs
arpl
sets
mov
mov
adc
lods
(bad)
push
sub
mov
push
(bad)
aaa
repnz
xchg
cli
cmps
gs
je
sahf
inc
movs
and
mov
adc
(bad)
fisub
inc
or
in
jecxz
xor
cs
xchg
dec
push
movs
repz
xchg
scas
lods
pop
jle
cwde
les
popf
jecxz
repnz
loopne
bound
cmps
fild
ss
test
loop
jb
(bad)
sub
sub
int
xchg
xchg
sti
daa
add
lods
lds
mov
into
sbb
arpl
pop
mov
rcl
mov
xchg
std
pushf
movs
mov
fdivr
ins
pop
cdq
pop
js
pop
xor
xor
lods
test
dec
jp
es
or
loopne
lock
lock
pop
pop
push
push
cs
xor
js
cs
leave
pop
adc
sub
mov
and
jle
jo
inc
jnp
daa
push
or
dec
sbb
sub
out
jecxz
int
mov
into
jae
or
ret
adc
xor
xchg
pop
inc
adc
hlt
js
push
dec
retf
and
stos
loopne
jnp
not
sbb
and
test
sbb
jl
fidivr
pop
sti
aam
enter
xchg
stos
and
xchg
ins
aas
mov
lods
test
(bad)
stos
rol
fdiv
pop
mov
adc
add
icebp
push
retf
sub
scas
arpl
cs
cmp
dec
xor
lea
call
cdq
ds
fnsave
daa
int3
push
loop
cmps
jb
mov
cmp
test
dec
(bad)
jge
sub
lahf
mov
out
pop
sar
enter
loopne
add
and
call
jp
iret
and
shl
js
(bad)
jecxz
popf
popa
bound
ds
add
dec
and
lods
xchg
mov
dec
xchg
test
xor
sub
in
inc
fsubr
push
fmul
lods
sub
out
mov
jnp
mul
dec
jmp
call
push
lsl
loopne
push
pop
or
xor
mov
imul
daa
sub
outs
sub
push
addr16
ret
add
icebp
(bad)
mov
xor
mov
push
mov
lea
mov
jns
pop
mov
push
imul
imul
arpl
call
adc
push
mov
(bad)
push
pop
xchg
int3
adc
ds
mov
pop
or
pop
xlat
fcomp
or
pop
xor
fld1
pop
stc
inc
das
add
call
or
aam
ret
xchg
dec
ds
jg
retf
mov
rcr
cmc
out
gs
xor
jo
pop
(bad)
scas
and
or
outs
mov
jge
leave
imul
je
mov
sbb
pop
and
xchg
add
fwait
je
das
sti
xor
imul
xor
add
loope
clc
jbe
jle
push
mov
loop
sub
mov
shl
pop
scas
je
inc
push
pusha
xchg
sub
clc
mov
inc
addr16
movs
lods
fs
sar
adc
cmps
xchg
mov
dec
dec
je
push
jnp
mov
push
ins
fdiv
in
bound
pop
xchg
(bad)
(bad)
scas
dec
adc
cmps
mul
inc
jecxz
mov
or
xor
pop
cmps
call
push
sar
mov
dec
ins
inc
pop
das
gs
ja
sbb
sub
mov
and
fwait
rcl
repnz
adc
scas
or
mov
ins
xor
ret
mov
test
movs
mov
add
popf
pop
mov
retf
retf
data16
mov
stc
aaa
add
inc
movs
xchg
and
push
inc
jne
adc
retf
sti
jnp
dec
sub
movs
neg
push
xor
inc
mov
xor
add
add
rol
mov
retf
rol
repnz
jae
fisttp
hlt
dec
jg
and
std
or
rcl
adc
push
(bad)
(bad)
(bad)
in
loope
mov
jb
dec
cli
xchg
push
sti
adc
fst
fbld
add
lods
jp
mov
jo
cmp
movs
lahf
sbb
fdiv
mov
jmp
gs
enter
add
movs
data16
xchg
and
popf
mov
test
sbb
ret
sbb
shl
lahf
movs
xchg
clc
jb
out
std
mov
stos
or
lods
div
es
repz
cli
xor
(bad)
adc
call
popa
mov
dec
(bad)
jecxz
popf
xor
pop
and
sbb
(bad)
mov
push
push
xchg
inc
xor
enter
dec
sub
xor
stc
mov
outs
enter
fstp
call
movs
mov
ret
sub
out
sub
popa
cmc
mov
mov
xor
sar
imul
mov
hlt
into
and
mul
ds
mov
jne
push
shl
jp
xchg
cs
dec
xlat
(bad)
push
push
fbstp
lods
jmp
xor
mov
pop
das
jb
and
sub
arpl
dec
sbb
scas
or
fstp
or
dec
or
mov
cmp
nop
retf
dec
mov
sbb
loop
ins
outs
jb
retf
adc
cmp
loop
leave
pop
cmp
not
cs
fsub
test
repnz
int3
mov
or
rcl
push
adc
pusha
clc
jecxz
lods
xor
imul
dec
sub
js
sbb
(bad)
xchg
push
xor
jb
mov
fimul
or
xchg
cld
xlat
ja
xor
stos
add
fadd
test
and
scas
jae
pop
xchg
add
data16
dec
xchg
rcr
or
dec
sub
jg
imul
mov
in
fsubr
mov
pusha
or
mov
mov
mov
cld
out
pop
(bad)
jp
xor
movs
leave
js
outs
leave
or
mov
(bad)
stos
pop
push
pop
add
push
xchg
pushf
mov
scas
push
sbb
aam
xchg
sbb
xchg
xchg
adc
push
mov
adc
fild
imul
push
adc
xor
icebp
jecxz
aaa
mov
jecxz
jecxz
push
shl
fbstp
pusha
xor
std
adc
pop
adc
xor
or
cmp
repz
push
jle
lock
inc
and
mov
test
push
aas
xchg
and
xor
mov
mov
mov
cmp
sbb
aam
cmps
add
mov
rcr
idiv
out
dec
sub
dec
test
fstp
cwde
xchg
push
adc
xchg
xchg
xor
mov
jecxz
mov
out
outs
adc
pop
out
mov
out
cdq
aad
leave
fnstcw
mov
or
pop
dec
inc
call
cdq
jno
pop
pop
push
popa
(bad)
push
stos
and
cmc
sub
sti
mov
pop
(bad)
cmp
dec
mov
aas
push
sahf
mov
jb
test
mov
gs
fwait
cmc
popf
cmp
xchg
movs
mov
sub
aad
clc
xchg
mov
xchg
ss
sbb
rol
mov
and
adc
loop
mov
jle
lods
xchg
pop
jg
push
rcl
dec
sbb
loop
lock
mov
sti
jmp
jecxz
sbb
test
fsubp
into
sbb
call
pshufw
or
mov
inc
js
xor
or
push
stos
jecxz
outs
dec
popa
lea
xchg
jmp
sti
xchg
das
or
mov
sbb
data16
pop
repnz
push
int
mov
and
popa
cmp
dec
lds
repnz
sub
or
into
pop
mov
enter
jns
pop
xchg
xor
fwait
or
mov
fmul
pop
adc
inc
pop
test
leave
fwait
adc
adc
jg
sub
(bad)
enter
inc
jae
mov
xchg
xor
jae
repnz
push
sahf
jecxz
push
jbe
cs
rcl
mov
xlat
test
xor
imul
inc
push
popf
cmp
sub
fadd
out
mov
leave
pushf
pop
shr
aaa
cs
hlt
jbe
pusha
push
dec
fwait
inc
stc
out
push
shl
pop
or
sar
sahf
leave
inc
sbb
fldcw
(bad)
or
or
aad
test
xchg
mov
push
cmp
or
sbb
cmps
jle
fdivr
leave
nop
psllw
into
pop
repnz
call
shr
pop
mov
hlt
sub
fsub
xor
test
sbb
sub
stos
mov
dec
add
mov
push
out
lods
pop
push
push
sub
popf
clc
sub
retf
mov
adc
pusha
das
shl
adc
xor
(bad)
out
call
mov
dec
xchg
es
(bad)
inc
retf
loope
xchg
test
fcom
dec
inc
call
leave
inc
pop
idiv
ins
mov
fnstenv
xor
addr16
in
sbb
pop
bound
push
mov
push
pop
dec
or
push
lods
sar
inc
push
mov
ss
aam
sub
inc
neg
dec
mov
xchg
inc
pop
imul
add
into
jl
jbe
call
pop
xlat
cmps
ror
rol
mov
daa
mov
xor
or
rcr
cld
mov
cli
pop
add
pop
mov
xchg
pop
mov
loop
jnp
pop
scas
mov
dec
ret
mov
gs
push
aam
push
shl
daa
outs
pop
js
cmp
ins
fidiv
add
stos
repnz
inc
and
inc
push
and
jbe
dec
inc
shl
bound
pop
cld
data16
enter
fisubr
lods
popf
sbb
pop
add
pop
arpl
push
mov
jecxz
cmps
test
or
sbb
sahf
jns
mov
cwde
ja
add
xchg
xchg
mov
add
add
or
icebp
scas
outs
stos
pop
into
sbb
int3
mov
mov
imul
cmps
ds
call
fst
cmp
ja
in
push
pop
lock
push
pushf
scas
cld
lods
sub
cmp
cpuid
mov
shl
dec
pop
hlt
ss
arpl
lahf
push
sar
pop
or
call
gs
xor
lds
call
inc
pop
into
mov
adc
mov
lock
dec
fsub
inc
jns
inc
push
das
add
mov
sbb
cvtpi2ps
cmp
cld
call
(bad)
or
inc
add
jl
dec
jns
pop
jl
adc
loop
pop
jg
pop
jae
imul
adc
cmp
movs
cmp
or
lea
pop
mov
push
mov
mov
or
in
or
int
(bad)
aam
clc
fbld
add
mov
(bad)
imul
scas
scas
add
mov
repz
xacquire
sahf
push
les
loopne
fcom
je
or
push
mov
scas
aad
sti
leave
jle
(bad)
xchg
fisttp
out
jno
adc
imul
pop
dec
jb
cdq
mov
lahf
cmp
mov
sti
mov
ds
(bad)
repz
nop
or
in
das
sub
jl
pop
jmp
lods
and
xlat
je
rcl
retf
sub
jbe
push
mov
popa
pop
int3
sbb
nop
or
fcom
or
cmps
stc
ret
aad
sbb
pop
call
sbb
lds
xchg
(bad)
into
movs
jno
cmc
test
outs
push
fiadd
clc
mov
sbb
mov
out
add
mov
cmp
pusha
repnz
mov
pop
test
mov
stos
cmp
loope
cmp
mov
or
scas
mov
dec
rcr
inc
in
pop
call
inc
mov
jnp
pop
in
sub
in
aad
ror
adc
and
in
pop
mov
cmp
comiss
sbb
inc
xchg
dec
jg
cmp
rcr
dec
fidivr
cmps
imul
add
jbe
inc
cmc
out
xor
mov
fstp
jle
into
xor
imul
sbb
(bad)
cwde
push
test
cmps
xchg
fdivr
neg
xchg
cwde
call
sub
clc
xchg
ins
fst
mov
enter
test
in
cdq
sbb
test
imul
retf
dec
sbb
lds
mov
or
mov
lds
in
pop
pop
push
mov
loope
inc
xchg
jecxz
xchg
push
enter
ret
and
imul
retf
addr16
lea
movs
fld
jns
jmp
stos
popa
dec
push
sub
push
idiv
das
jns
dec
dec
test
daa
scas
add
mov
out
pop
cli
push
stos
jmp
fistp
in
mov
rol
fwait
out
adc
pop
jle
mov
add
lahf
and
adc
outs
push
(bad)
mov
loopne
test
pop
xchg
jnp
mov
add
test
and
outs
in
scas
ret
aaa
call
scas
ss
in
jbe
icebp
out
sub
jle
dec
sbb
mov
fidiv
pop
pop
xchg
mov
sbb
dec
clc
xor
mov
sahf
push
add
adc
sub
pop
inc
or
movs
aad
sbb
mov
adc
call
adc
mov
mov
or
loopne
dec
inc
pop
push
(bad)
sub
(bad)
std
data16
arpl
ret
mov
or
inc
ret
outs
rcr
pop
test
inc
jle
cmp
js
movs
ret
mov
out
jmp
pop
call
sbb
adc
addr16
cmp
xor
nop
movs
pop
jl
call
mov
jg
jge
stos
xor
push
cmps
je
cld
lds
outs
xchg
les
xchg
adc
nop
or
call
jnp
jp
xor
in
add
out
into
mov
ja
outs
jle
(bad)
gs
mov
or
jmp
xchg
and
inc
xchg
adc
sbb
mov
inc
idiv
xor
mov
les
in
adc
sub
test
push
xchg
sub
mov
mov
(bad)
(bad)
push
lock
inc
sbb
retf
mov
(bad)
jge
pop
iret
and
or
sbb
push
call
xchg
mov
setns
movs
popa
dec
dec
mov
clc
lea
mov
sbb
pop
das
jb
jecxz
lods
and
scas
mov
add
dec
das
cmp
loope
stos
inc
cwde
and
movs
rcl
int3
mov
ret
xlat
adc
out
fstp
not
push
fist
xor
test
cmp
pop
or
stc
and
ret
pop
fcomip
xor
test
cmp
push
jae
scas
sbb
test
in
mov
sub
or
jmp
mov
bound
mov
adc
outs
retf
loop
es
fstp
ins
and
pushf
fucom
sub
shr
and
sar
jge
inc
cmps
sbb
jp
pop
call
push
fistp
bound
inc
jmp
push
scas
movs
push
adc
mov
sahf
or
cmps
mov
xchg
mul
inc
lods
mov
stc
cs
call
iret
div
cmps
mov
(bad)
sbb
adc
inc
cdq
sbb
imul
fs
les
pusha
out
in
push
movs
dec
retf
(bad)
std
pop
xlat
pop
test
arpl
dec
adc
ins
mov
dec
gs
xchg
push
int3
jo
jge
jne
xor
test
xchg
push
mov
jmp
jmp
test
xchg
push
push
in
shl
or
out
inc
xor
cmp
stos
xor
pop
cmps
clc
ficomp
loop
adc
pushf
rcl
nop
cmps
movs
out
(bad)
mov
(bad)
bound
jne
aad
push
add
ror
stos
cwde
(bad)
idiv
aam
(bad)
sbb
ss
clc
out
cdq
aas
sahf
pop
rcl
push
sti
addr16
xchg
push
adc
inc
test
aam
add
out
dec
jae
adc
lahf
dec
or
leave
movs
loopne
arpl
xchg
addr16
push
add
cdq
(bad)
cmc
mov
or
and
ja
adc
or
cdq
xor
test
(bad)
loope
mov
xchg
add
mov
sbb
shr
push
fwait
pop
sahf
pusha
or
sub
fnstsw
pop
cmp
mov
jno
jg
dec
sub
cmp
pop
call
outs
int3
das
add
lahf
inc
loope
sti
xchg
add
push
add
je
idiv
pop
jl
pop
pop
sbb
(bad)
repnz
xchg
sbb
and
retf
daa
outs
pop
cdq
imul
xor
daa
dec
cmp
dec
popa
test
je
jbe
fidiv
push
clc
aam
fdiv
inc
adc
dec
adc
add
mov
jno
adc
xchg
adc
aad
push
outs
ret
sub
push
out
mov
or
retf
fist
daa
lock
mov
jl
jecxz
in
adc
xchg
mov
fmul
jno
xor
(bad)
dec
and
pop
fdiv
mov
imul
icebp
jbe
mov
call
inc
loope
pop
ins
pusha
imul
shl
out
(bad)
mov
jmp
xchg
ds
pop
xor
retf
fadd
sbb
loope
jmp
pop
and
rcr
xchg
push
mov
jecxz
cmp
fadd
(bad)
rcr
pop
pop
scas
fisub
test
ins
jns
(bad)
or
xchg
(bad)
cmp
push
dec
jae
mov
jae
inc
and
adc
ins
test
mov
enter
push
call
cmp
ds
pop
scas
xor
aad
cld
jmp
iret
sub
inc
loope
int
loope
mov
or
jl
adc
inc
in
icebp
jl
je
mov
jns
and
adc
add
jno
enter
mov
push
sbb
mov
je
std
out
mov
int3
jp
retf
xchg
out
fs
xchg
ret
adc
add
and
mov
(bad)
mov
repnz
ins
test
and
or
test
dec
push
cmps
cmp
mov
xor
jb
jp
xchg
test
xchg
add
or
mov
sahf
sub
inc
ffreep
in
xchg
sub
and
sbb
pushf
dec
mov
imul
cmp
stc
pop
repz
(bad)
push
push
ja
or
mov
in
cld
xchg
or
pusha
mov
cmc
fdiv
repnz
push
cmovno
add
(bad)
retf
sub
fist
jmp
cmps
mov
ficomp
(bad)
and
pop
outs
or
mov
movs
xchg
inc
cmp
inc
or
mov
faddp
mov
loope
dec
add
cli
mov
dec
jae
pushf
iret
fbstp
pop
test
pop
mov
sub
push
push
sar
xchg
dec
jo
fnsave
sub
adc
in
mov
add
xlat
sub
and
shr
fimul
mov
shl
das
ins
in
cmp
xor
iret
jecxz
mov
push
mov
pop
movs
push
jg
jno
mov
xchg
pop
ret
mov
add
cmp
cwde
sub
test
popf
fadd
cmp
adc
sub
int3
adc
(bad)
mov
adc
rdpmc
ret
popf
in
fs
add
das
lds
jne
imul
fist
iret
movs
mov
xor
or
sbb
and
mov
mov
xor
push
cmp
cmp
xchg
repz
fistp
test
xor
or
xchg
(bad)
mov
jb
push
fnstsw
or
lods
pop
clc
aaa
mov
push
push
sbb
mov
in
mov
pop
push
pop
shl
in
aam
outs
test
(bad)
(bad)
mov
js
out
outs
cmp
ret
test
and
adc
xor
xor
ins
xchg
ret
mov
dec
cmp
xchg
jle
int
ret
push
dec
repz
rcl
ror
fsubr
mov
sbb
into
in
cmp
adc
and
inc
adc
adc
jmp
test
mov
daa
retf
inc
or
and
(bad)
jl
(bad)
in
lahf
mov
ins
fcmovu
ja
fs
sar
cmovo
pop
mov
out
sub
mov
mov
push
in
adc
aad
jae
adc
inc
ds
aaa
bound
xchg
(bad)
cdq
in
clc
mov
xchg
fbstp
pop
gs
pushf
fwait
cmova
stc
sbb
push
cs
fstp
(bad)
out
shr
retf
jne
cmp
(bad)
hlt
int3
jmp
enter
retf
test
and
add
pushf
stc
repz
cmp
sub
jns
mov
popf
adc
out
pop
imul
rcl
jns
mov
aas
xchg
rol
test
pop
mov
mov
or
pop
mov
xlat
jmp
test
mov
inc
cld
and
pop
inc
push
sbb
loopne
xchg
pop
lods
jae
jecxz
(bad)
dec
imul
adc
cmp
ret
xchg
leave
aad
dec
inc
stos
jnp
adc
mov
repz
jp
mov
sub
bound
(bad)
adc
dec
fmul
sti
mov
and
ds
test
(bad)
repnz
sbb
mov
test
mov
push
adc
jo
fmul
sub
mov
xchg
popf
sub
push
das
adc
out
sub
nop
movs
sub
aas
out
pop
fistp
fdiv
test
xchg
sbb
mov
mov
adc
call
add
mov
mov
pop
cwde
inc
push
(bad)
mov
and
(bad)
aam
out
test
das
in
ins
leave
add
aam
jmp
inc
in
and
loopne
ror
inc
xchg
hlt
inc
bound
fmul
not
inc
xor
jae
mov
sub
(bad)
adc
call
sti
(bad)
(bad)
sar
(bad)
sti
lods
mov
pcmpgtw
fmul
fisttp
mov
sbb
dec
popa
cs
and
nop
adc
sub
jp
push
add
aaa
mov
mov
or
xchg
inc
mov
imul
push
sub
dec
cs
jb
leave
and
push
sbb
mov
test
push
je
and
cmp
mov
out
dec
bound
fwait
inc
in
call
cmp
xchg
mov
mov
xor
mov
repnz
pop
test
inc
jmp
and
rol
in
out
pop
ja
mov
mov
fstp
or
push
mov
cmc
test
popf
adc
sahf
xchg
movs
je
addr16
cmps
fisttp
mov
mov
(bad)
pusha
rcl
sub
dec
enter
xor
rcr
(bad)
repz
out
shl
movs
pop
pop
cmp
or
push
cwde
push
aas
ret
ja
mov
fisttp
cwde
cld
pop
pop
cwde
pavgw
inc
test
dec
and
pop
cmp
and
mov
cmp
xor
sbb
fsubr
adc
push
jp
xlat
cli
scas
stc
lea
xor
outs
pop
mov
enter
fbstp
inc
add
inc
clc
adc
mov
add
cld
div
in
mov
sbb
xchg
inc
shr
push
and
add
mov
std
adc
dec
inc
or
xor
inc
push
cli
rcl
popf
nop
movs
fwait
jnp
out
int
inc
xor
fs
int
(bad)
ss
aaa
or
mov
aad
add
ret
push
call
mov
sub
or
cmp
sub
adc
add
jecxz
jno
lods
push
xor
icebp
inc
movs
cmp
lods
dec
dec
cmps
push
xor
mov
ins
repz
icebp
push
imul
xlat
jno
xchg
pop
and
mov
adc
adc
mov
jo
mov
aad
push
fcmovbe
xor
repnz
or
stc
or
xor
add
sub
in
xor
fisubr
ret
push
movs
sbb
pop
aas
jmp
cmp
cmp
mov
and
mov
mov
icebp
cmc
clc
fmulp
enter
test
mov
es
arpl
cmps
sbb
adc
sub
loop
push
in
nop
scas
mov
icebp
mov
leave
aas
sbb
dec
cmp
ror
test
(bad)
ins
lods
(bad)
scas
mov
cmp
push
xchg
hlt
lea
sub
dec
jb
clc
jae
paddw
enter
test
cmp
pop
push
or
out
test
push
aaa
repz
mov
ret
sub
movs
xor
pop
jl
test
xlat
les
loop
lds
sub
lahf
scas
or
mov
inc
jmp
push
fs
pop
xchg
inc
inc
mov
and
lods
jle
sbb
repnz
cmp
out
shr
pop
pop
push
inc
test
push
xchg
(bad)
pusha
push
fnstsw
enter
movs
(bad)
mov
fld
(bad)
or
xchg
xor
dec
push
xor
sbb
mov
xor
fld
ins
adc
dec
mov
pop
add
leave
dec
sbb
sti
push
mov
xchg
jnp
loope
mov
out
(bad)
aam
call
inc
adc
and
push
mov
and
lods
je
dec
hlt
stos
out
hlt
fsubr
and
push
add
add
mov
sbb
(bad)
mov
outs
aam
retf
inc
cmp
add
xor
lock
pop
sub
jle
xor
dec
inc
mov
inc
mov
inc
icebp
pop
test
cmp
call
std
loopne
xchg
stc
es
test
inc
pop
add
and
xchg
stc
xchg
mov
repz
popf
test
mov
cmc
fcmovnu
lock
rcl
enter
push
push
jne
xchg
cmps
sahf
xchg
xor
loopne
xor
mov
nop
mov
stc
fwait
xor
jnp
iret
cmp
mov
in
xlat
inc
jmp
add
and
loope
jl
rep
inc
cmp
sbb
mov
push
or
jmp
fbld
(bad)
stos
pop
pop
shl
jmp
jmp
sub
sahf
cmps
rcr
mov
mov
shr
aaa
cmp
imul
pop
jecxz
ds
outs
and
lods
clc
push
test
dec
pop
sub
test
xchg
and
and
ret
xor
pop
shr
movs
inc
movs
adc
and
pop
scas
and
fst
les
mov
add
mov
mov
icebp
cmc
pop
popa
fidiv
movs
jne
ror
push
iret
or
in
pusha
fistp
cmp
xor
jle
or
imul
jmp
mov
add
sbb
dec
repz
pop
dec
(bad)
(bad)
in
stos
test
mov
nop
sbb
mov
cmp
or
aaa
popa
and
pop
dec
lods
and
mov
iret
jecxz
or
out
stc
scas
retf
outs
fdiv
in
inc
movs
add
rcr
scas
and
ret
add
mov
push
sar
ror
or
movs
and
dec
call
aas
les
sub
inc
pop
ds
jecxz
jns
les
push
cmp
out
stc
add
push
sbb
imul
xor
pop
call
movs
dec
pusha
call
mov
scas
icebp
mov
stos
sbb
adc
push
or
fs
xor
inc
retf
pop
xchg
and
sub
push
cmp
inc
cs
pop
outs
fcmove
dec
inc
mov
inc
shl
and
stos
rcl
xchg
dec
and
sti
sub
fsub
call
gs
nop
popf
pop
cmp
pop
iret
aam
adc
jg
or
into
sbb
in
in
push
aam
lahf
movs
clc
cmp
dec
cli
push
jns
xchg
add
dec
mov
test
add
aad
and
cdq
push
jecxz
js
pusha
loop
mov
mov
(bad)
into
in
jmp
mov
jb
jg
es
jmp
aad
add
add
out
rcl
and
shl
mov
xchg
add
inc
fnsave
pop
mov
test
nop
dec
jecxz
outs
pop
mov
pop
das
imul
gs
repz
aas
mov
daa
test
cmp
sti
lock
mov
jbe
bound
mov
repz
gs
push
clc
sbb
adc
js
or
aas
push
sbb
ret
fwait
outs
popa
cwd
(bad)
clc
mov
aam
add
ret
popf
push
stc
in
dec
adc
nop
xchg
sub
lods
jg
sub
bound
inc
jmp
test
sti
scas
mov
sub
ss
mov
mov
and
inc
scas
mov
sub
push
fnsave
and
sub
out
dec
dec
pop
stc
mov
push
mov
aad
xor
jp
xchg
add
lock
mov
inc
pop
adc
sahf
sahf
aad
inc
in
dec
retf
sbb
xchg
(bad)
(bad)
clc
sub
xchg
sub
mov
out
jge
stc
ins
mov
fstp
out
mov
jo
scas
sbb
pop
mov
or
pop
in
loop
add
loopne
(bad)
out
adc
fwait
xchg
clc
mov
xor
sbb
mov
inc
jb
scas
mov
iret
jno
loope
int3
pop
enter
fild
popf
xor
inc
pop
push
sbb
loop
mov
jmp
mov
popa
cmp
out
mov
sub
mov
sub
jb
not
cmps
data16
mov
cmc
xchg
scas
into
call
sbb
push
aaa
das
(bad)
lock
nop
mov
mov
scas
inc
or
push
sub
or
cmp
das
xor
push
pop
xor
mov
jg
outs
(bad)
mov
lods
mov
xchg
inc
push
and
or
cwde
test
retf
fisttp
pinsrw
popa
xor
clc
arpl
jns
add
jnp
adc
and
out
cmp
cmp
and
xchg
xlat
cld
mov
aad
mov
loope
push
cmp
movs
fcomp
push
add
dec
mov
inc
push
std
sub
inc
sbb
mov
push
push
push
hlt
popa
cld
sub
mov
pusha
stos
lea
or
pop
mov
movs
cmp
mov
jns
int3
call
sbb
xor
(bad)
loope
and
jb
les
retf
mov
sub
gs
scas
jae
adc
sbb
inc
cmp
xchg
jo
xchg
mov
out
jne
(bad)
js
xchg
retf
ins
pop
or
xchg
cmps
pop
jne
rcl
nop
outs
mov
mov
mov
pop
jg
lods
imul
adc
and
inc
(bad)
or
enter
dec
mov
iret
inc
movs
dec
push
ret
in
les
call
lahf
cmp
js
cmp
mov
shl
jge
sbb
sti
jecxz
imul
push
or
mov
mov
ins
es
inc
aaa
neg
lods
mov
mov
ror
int
lods
jl
xlat
and
(bad)
addr16
mov
fild
aaa
aaa
int
inc
jmp
pop
adc
add
aaa
cli
shl
cmp
jns
inc
mov
fimul
(bad)
into
jae
jg
xchg
rcl
xor
cmp
cld
jae
mov
fst
sub
shl
dec
outs
sub
arpl
push
shl
and
outs
mov
sbb
dec
mov
mov
bound
rcr
data16
jmp
fdivr
scas
lock
and
jnp
inc
ja
imul
sub
das
xchg
mov
jp
pop
(bad)
and
mov
mov
pop
cmps
mov
lahf
imul
out
shl
cld
ret
xor
dec
dec
arpl
out
lods
dec
sub
(bad)
aas
jno
ds
dec
movs
pop
sbb
nop
dec
imul
fcmovnu
inc
jnp
mov
pop
and
loopne
or
jae
mov
and
mov
out
pop
dec
into
or
xor
aam
mov
mov
sub
jnp
int3
call
retf
mov
inc
xor
mov
clc
push
jge
(bad)
lds
adc
add
outs
cmps
mov
pop
pop
xchg
dec
repz
and
sub
sbb
mov
mov
cmps
cmp
cdq
push
adc
mov
shr
pop
jp
cmp
and
inc
mov
imul
test
les
push
stos
shr
popa
or
sbb
add
dec
bound
push
xchg
sub
inc
cmp
sbb
(bad)
pop
jle
push
sub
mov
xor
adc
cmps
jle
shr
sbb
mul
sub
int
adc
dec
sbb
jbe
add
cmp
popf
fmul
and
xchg
push
cmps
inc
mov
cdq
iret
dec
inc
cmp
dec
sbb
aad
adc
sbb
pop
ret
or
jno
mov
rcr
xchg
(bad)
enter
sub
ins
gs
popf
dec
push
dec
push
adc
adc
lahf
mov
pop
mov
retf
sub
retf
pop
xchg
mov
rol
mov
mov
push
fadd
mov
sub
bound
fstp
sub
mov
or
frstor
inc
stos
push
(bad)
cmp
lock
nop
and
movs
cmp
xlat
cdq
(bad)
or
(bad)
or
clc
mov
in
sub
cmp
cmps
daa
out
das
out
xchg
out
ret
mov
cmp
das
add
fidivr
lock
out
in
pop
bound
in
dec
js
scas
test
push
inc
add
pop
outs
jnp
(bad)
cmps
mov
inc
arpl
and
das
and
pmulhw
mov
lods
lock
loop
jp
imul
retf
icebp
clc
fist
fbstp
push
jecxz
inc
dec
sti
pusha
(bad)
clc
fnsavew
pusha
shr
fs
mov
movs
xor
add
xchg
sub
sti
mov
mov
pushf
xchg
inc
and
loopne
sbb
mov
inc
adc
add
loop
xor
jno
clc
aas
add
jl
or
fisubr
push
inc
call
mov
int3
sbb
fld
cmp
push
adc
pop
sub
mov
mov
xchg
fsubr
sbb
aam
cmp
mov
push
out
inc
cdq
mov
push
fiadd
clc
push
retf
in
jnp
shr
push
je
cmps
mov
inc
inc
into
nop
pop
xor
arpl
lock
inc
mov
pop
jg
jb
mov
addr16
imul
xchg
pop
pop
cmp
mov
xchg
cmps
lds
jge
jb
cmp
hlt
leave
enter
aam
loop
mov
sbb
push
test
in
(bad)
sub
pushf
scas
aaa
xchg
add
inc
or
stos
xlat
mov
ss
arpl
mov
jo
add
retf
mov
vpcmpeqb
ror
cli
call
mov
mov
pop
ds
fldcw
inc
jnp
or
mov
dec
dec
packsswb
inc
fdiv
test
movs
gs
or
jmp
into
sti
mov
in
fisubr
in
test
daa
neg
lea
xchg
cmp
push
cld
lock
fsubr
pop
outs
stos
inc
mov
fcom
loop
adc
jb
je
hlt
(bad)
push
mov
mov
into
cmps
test
jmp
sub
cwde
lock
sbb
lods
mov
pusha
add
int3
add
sub
ss
mov
inc
add
dec
nop
shl
arpl
pop
push
push
int
movs
cld
mov
scas
ret
jo
jl
dec
mov
sbb
mov
iret
arpl
sub
mov
je
scas
and
dec
in
imul
addr16
ret
mov
aam
jae
cmp
test
sbb
jbe
retf
mov
xchg
retf
and
out
jb
add
add
push
out
cmp
jecxz
not
bound
jg
out
std
int3
hlt
add
add
add
(bad)
cmp
mov
sub
dec
lea
aad
in
(bad)
nop
xchg
mov
pop
mov
inc
enter
push
cmps
xor
pop
repz
fdivr
cmps
or
inc
sbb
stos
cdq
and
cmp
addr16
xchg
add
mov
push
test
add
ins
pop
push
sbb
sbb
sbb
mov
xor
dec
gs
mov
mov
xchg
or
adc
scas
sub
and
(bad)
sbb
int3
adc
jecxz
movs
aam
push
je
lds
inc
sbb
jmp
mov
popf
paddsb
iret
mov
inc
cmc
les
xchg
add
xchg
(bad)
inc
dec
jns
shl
rcr
repnz
(bad)
addr16
stc
xchg
lds
fdiv
xor
or
fdivr
sub
and
mov
(bad)
and
ss
mov
ret
in
not
or
repz
cmp
jl
push
iret
sbb
call
int
std
jne
push
mov
ins
push
sub
mov
push
mov
adc
add
pop
pop
iret
in
cs
addr16
dec
mov
inc
enter
cmp
stos
pop
pushf
lahf
and
or
xchg
enter
mov
outs
and
lods
fstp
into
(bad)
xor
or
adc
adc
jmp
sub
xor
or
cmp
xchg
jmp
cmp
adc
movs
pushf
or
jmp
mov
push
(bad)
pop
imul
cld
pop
add
or
test
push
cli
stc
repz
aad
adc
addr16
jnp
sbb
pop
or
(bad)
rcl
popa
sbb
(bad)
push
sbb
scas
and
jecxz
outs
adc
xlat
pop
loopne
pop
mov
(bad)
xor
mov
push
das
jo
inc
loopne
pushf
pop
pop
xchg
pushaw
mov
das
sub
sbb
adc
or
xchg
mov
ret
inc
sti
repz
sbb
sub
popf
rcr
call
mov
ins
mov
test
dec
pop
mov
lock
mov
or
adc
adc
xchg
push
dec
sub
daa
mov
adc
xchg
mov
aad
or
add
cdq
(bad)
movs
xor
sub
mov
jmp
lock
mov
mov
push
cmp
ins
dec
test
and
adc
mov
and
lea
add
repnz
mov
jp
(bad)
fadd
daa
sbb
xchg
repnz
inc
jmp
xchg
lea
inc
repnz
sbb
xlat
sahf
adc
or
repz
adc
add
(bad)
jnp
sub
inc
ret
push
push
adc
push
popa
fdivp
jns
jmp
cld
scas
in
retf
fisub
aad
push
dec
xchg
out
adc
lds
mov
repnz
out
push
push
addr16
scas
pop
(bad)
icebp
sbb
ja
jmp
jg
not
cmp
push
dec
dec
sbb
inc
ret
arpl
inc
jmp
add
adc
mov
inc
sbb
scas
add
mov
mov
mov
nop
fdivr
mov
aad
test
lods
push
mov
or
adc
call
cmp
or
int
mov
inc
test
repz
call
cmp
pop
mov
pop
lahf
xchg
sbb
xchg
xchg
ss
movs
iret
in
out
imul
push
and
leave
(bad)
mov
xchg
popf
sub
pop
xor
xchg
mov
xchg
fwait
sbb
fdiv
imul
mov
out
mov
add
icebp
pop
data16
sbb
mov
xlat
sti
js
shr
test
(bad)
jbe
fcom
or
lods
xchg
cld
pop
nop
inc
cmps
rcr
fst
sbb
dec
xor
jecxz
js
or
repnz
cmp
test
pop
dec
xchg
jmp
sub
stos
or
pop
sbb
sub
pusha
ror
sbb
and
jg
dec
clc
aad
push
fs
fbld
test
mov
in
inc
xchg
clc
(bad)
out
fistp
shl
rol
mov
loope
stos
inc
pop
test
inc
into
aam
gs
test
sbb
cld
mov
sbb
div
(bad)
mov
xor
out
fwait
cmp
sub
add
inc
sub
(bad)
int
mov
clc
dec
inc
mov
nop
scas
shl
out
push
xlat
cld
sahf
mov
inc
outs
je
shl
clc
pop
fdivr
(bad)
xchg
sbb
out
es
enter
je
icebp
shr
(bad)
arpl
push
mov
push
and
jns
mov
(bad)
mov
popf
in
push
outs
iret
cmp
sbb
iret
mov
retf
loopne
pop
push
pop
inc
and
jno
jno
or
xchg
cdq
idiv
and
sahf
push
add
ins
jle
popa
cmp
nop
push
enter
inc
push
cmp
xchg
mov
lahf
clc
in
push
adc
sahf
int3
out
inc
popf
or
hlt
mul
shl
dec
mov
cmp
cwde
aas
int3
mov
outs
cmps
or
lods
mov
data16
add
pop
ds
and
cmps
stc
cmps
shl
inc
inc
sub
dec
(bad)
imul
pop
push
rcl
fdiv
xchg
jge
sub
cmp
xor
out
fsubr
or
push
mov
mov
inc
(bad)
push
sti
jnp
sti
adc
cmp
adc
sub
add
xlat
jge
movs
fldenv
popf
add
xchg
dec
and
fcom
jmp
fsub
ficom
pushf
in
stc
xchg
or
popf
shl
xchg
inc
(bad)
not
xor
(bad)
sahf
lods
mov
hlt
push
add
popf
adc
mov
out
cdq
pop
sub
xchg
xchg
mov
data16
xchg
popf
sub
and
jbe
xchg
pusha
xchg
adc
xor
pop
xchg
xchg
popa
mov
and
popf
cmp
imul
or
test
jecxz
les
and
dec
das
xchg
sbb
jbe
cdq
xlat
cli
jae
mov
sub
test
addr16
or
jge
push
clc
mov
shl
push
cmp
push
add
push
dec
aad
lods
loope
push
cmps
sub
lock
cs
jle
sbb
mov
inc
cmc
rcr
mov
inc
push
xor
ins
inc
cmp
sub
or
push
lock
jbe
movs
xchg
ss
nop
jge
cmc
mov
dec
xchg
imul
jo
(bad)
jo
push
in
cld
movs
add
pop
push
inc
in
add
and
adc
push
lods
sbb
pop
dec
ins
sbb
test
out
jno
shl
lods
push
mov
call
dec
dec
or
dec
(bad)
out
push
mov
adc
pushf
dec
mov
pop
mov
sbb
dec
push
adc
fs
or
pop
psrad
mov
pushf
mov
out
mov
xchg
or
xor
push
xchg
xchg
cmc
sub
add
(bad)
fidiv
dec
fbld
jbe
xchg
add
fnstsw
cdq
fild
mov
cmp
mov
out
sub
out
mov
mov
dec
retf
inc
into
pop
in
add
movs
frstor
cmp
inc
les
leave
ins
mov
inc
mov
pop
lods
jbe
push
clc
add
outs
cmps
or
outs
push
and
repz
add
jmp
and
ins
bound
jecxz
icebp
lods
js
shr
add
push
(bad)
mov
in
cld
ds
jno
fwait
mov
xor
test
sbb
cmp
(bad)
jmp
adc
push
jl
xor
xchg
sub
mov
jb
or
inc
popf
sub
or
cli
pop
jmp
inc
inc
je
pop
push
popf
enter
sbb
stc
xor
daa
xchg
or
es
shr
scas
pop
mov
dec
mov
pop
mov
mov
dec
pop
pop
les
rcl
lods
xchg
aaa
pop
int3
test
idiv
and
lds
jge
mov
test
rcl
pop
(bad)
cs
adc
fild
push
js
adc
in
int
aad
int3
xcrypt-ofb
cmps
test
dec
inc
call
xchg
mov
dec
mov
dec
xchg
sti
jecxz
jmp
adc
push
xchg
mov
xchg
int
enter
aaa
adc
out
add
sbb
in
mov
lods
push
je
pop
add
jmp
add
lods
loopne
js
je
daa
ret
fnstenv
addr16
push
pushf
jp
mov
and
mov
in
pop
fadd
call
imul
mov
outs
cwde
xchg
cmps
stc
inc
jmp
xor
fs
outs
pop
les
fs
sub
js
and
xchg
psrld
push
out
jnp
xchg
lea
jno
mov
movs
in
js
das
shl
jp
ret
adc
jo
sub
outs
mov
jne
sub
pop
mov
movs
and
dec
dec
rol
enter
push
jns
or
fidiv
test
mov
mov
pop
fisttp
call
and
mov
adc
pop
jle
inc
add
loope
gs
mov
aas
rol
cmps
push
push
jp
xchg
ret
sbb
mov
popf
lods
gs
fnstenv
mov
pushf
or
in
jnp
popa
cmp
jp
popa
dec
int3
cmc
(bad)
addr16
(bad)
push
(bad)
popa
les
push
sbb
stos
jle
movs
push
sub
popa
sub
cdq
mov
xor
mov
fs
out
ss
jl
push
jnp
mov
dec
mov
mov
push
dec
jg
jp
fidivr
pushf
dec
leave
lods
neg
adc
adc
call
test
mov
push
fiadd
xchg
shl
iret
push
pusha
rcpps
mov
jle
pushf
je
test
iret
stos
mov
cdq
pop
in
dec
inc
je
jno
lock
test
pop
cld
mov
adc
lahf
xor
pusha
div
int3
mov
and
cli
cmps
or
sub
pop
imul
imul
rol
fdiv
mov
or
xchg
mov
jbe
out
loope
imul
cmp
lods
cmp
mov
cmp
or
loop
jg
fsubr
dec
sbb
pop
sbb
out
mov
rcl
loop
sbb
aad
in
pop
cmp
xor
inc
pop
push
fdivr
adc
fisub
pop
jmp
push
xchg
inc
add
sub
repz
or
shl
xor
rcr
das
dec
pop
jle
popf
cld
pop
sbb
mov
push
and
cld
pop
rol
xor
call
xchg
adc
in
call
ja
cmps
in
(bad)
imul
adc
ret
lods
jmp
lds
pop
rol
mov
xchg
loop
out
mov
data16
leave
and
xchg
icebp
adc
xchg
or
pop
ins
jmp
pop
push
ins
bound
int3
sub
icebp
imul
in
imul
cmps
adc
shr
setae
fnsave
test
fucomp
adc
xor
fisttp
mov
push
mov
comiss
adc
push
inc
push
xchg
or
jmp
push
mov
mov
popa
push
lock
push
sbb
add
shr
movs
movs
mov
into
mov
fwait
dec
stos
leave
xor
pop
dec
out
adc
cli
les
mov
push
movs
movs
or
pusha
imul
sbb
repz
push
(bad)
xlat
movs
out
pop
inc
sbb
adc
rol
and
jmp
and
cmp
ss
jo
add
sbb
ja
addr16
xchg
mov
(bad)
and
or
adc
and
mov
xor
(bad)
fistp
mov
ror
xor
fsubr
imul
fimul
repnz
stos
out
inc
mov
sub
push
adc
scas
sbb
mov
or
icebp
idiv
rcl
ins
jg
repz
iret
xor
bound
(bad)
adc
dec
push
inc
pop
jmp
mov
imul
pop
aam
sbb
sub
xchg
jl
rol
outs
call
aaa
fisttp
pop
test
push
ret
popa
adc
lods
jo
call
aaa
(bad)
pop
jg
test
inc
stos
push
and
sub
adc
mov
dec
js
not
xchg
hlt
cmp
ins
aaa
hlt
aam
xchg
(bad)
cmc
pop
repnz
jnp
cmp
push
dec
mov
push
das
cwde
jno
test
and
rcr
xor
push
mov
push
mov
cmp
mov
xchg
sbb
pop
mov
imul
icebp
pop
adc
lahf
add
outs
int3
adc
jle
cmp
push
dec
enter
dec
push
jb
or
stos
xchg
xor
push
lea
popf
xor
add
mov
push
mov
sub
lock
cmps
inc
adc
or
(bad)
fld
mov
inc
popa
and
icebp
pop
pop
aad
jo
mov
inc
xchg
fmul
cld
xchg
jge
jp
imul
inc
clc
inc
leave
push
ret
call
div
(bad)
sub
and
push
mov
mov
fs
add
sbb
jb
or
push
mov
sub
sbb
xor
and
sub
push
add
mov
dec
jb
movs
xor
pusha
push
adc
mov
jg
mov
call
push
sahf
lock
rol
dec
cmp
add
jmp
loope
loope
jmp
pop
jmp
cli
push
jo
lock
and
ss
or
lea
mov
js
mov
(bad)
rol
or
dec
mov
pop
retf
mov
jg
popa
mov
jae
mov
movs
push
lods
loope
push
cmps
push
xchg
lock
pop
mov
(bad)
retf
ss
or
add
cwde
cwde
popa
ret
inc
lods
daa
in
mov
cli
mov
iret
add
pop
(bad)
mov
dec
lahf
xor
rol
xchg
push
clc
jecxz
jl
je
div
sbb
into
neg
enter
or
in
add
fcom
(bad)
test
daa
push
add
adc
inc
int
adc
aam
(bad)
mov
mov
mov
add
shl
sub
mov
das
xchg
iret
outs
push
or
(bad)
pop
int3
mov
inc
mov
adc
mov
dec
inc
and
xlat
xchg
bound
repnz
cli
pop
lds
and
scas
aad
mov
shl
test
sbb
pop
nop
test
pop
fdivr
fdivr
int
cwde
xor
sbb
pop
movs
aam
cmp
mov
or
push
add
fisttp
into
mov
fnsave
jecxz
clc
or
pop
cmp
and
jo
scas
mov
popa
ins
outs
sub
ds
pop
icebp
push
pusha
dec
mov
fild
add
cmps
pop
jmp
add
add
pushf
sar
retf
loopne
pushf
pop
mov
movaps
iret
adc
ja
enter
dec
(bad)
popa
xchg
fsubr
and
test
push
mov
into
dec
add
clc
in
jns
dec
out
pop
iret
in
stos
fs
cwde
pop
adc
out
push
loop
cli
jno
add
ror
shl
push
xchg
sub
fstp
minps
xchg
cwde
jbe
inc
outs
fadd
hlt
xor
inc
pushf
mov
xchg
jg
pop
(bad)
sbb
dec
inc
ss
and
sub
adc
ins
hlt
outs
cmps
jmp
pop
pop
pop
cmp
sti
icebp
xchg
aam
xchg
sbb
cmp
inc
data16
jo
in
sub
stos
or
adc
adc
int3
mov
xchg
xor
pop
mov
mov
sahf
push
inc
mov
push
out
mov
sub
dec
cld
ret
mov
mov
adc
pop
or
sar
and
or
mov
push
rcr
jge
xchg
push
mov
call
adc
mov
xor
out
xor
iret
repz
aad
xor
cli
sub
out
in
xchg
push
inc
pusha
addr16
aaa
mov
leave
or
jb
cmc
enter
adc
fdivr
push
pop
je
(bad)
in
(bad)
add
push
pop
xchg
shr
jne
push
jl
int
xchg
and
dec
xchg
lock
(bad)
call
enter
stos
adc
pop
or
or
mov
cmp
cmc
or
les
les
inc
fwait
push
or
stos
add
mov
in
inc
(bad)
push
push
nop
sbb
dec
and
hlt
mov
or
jle
call
movs
out
(bad)
jmp
adc
mov
mov
lods
std
call
mov
ds
xor
xor
or
sbb
add
ret
mov
pop
leave
and
ret
pushf
scas
std
sub
lods
dec
imul
mov
add
bound
inc
cmp
sub
cmc
jnp
mov
add
push
xchg
outs
fsubr
xor
shr
sub
(bad)
icebp
mov
or
xor
lods
stos
dec
pop
mov
mov
ret
jmp
sub
popf
fstp
jne
adc
jno
add
gs
retf
repz
ja
pushf
sbb
out
out
push
daa
hlt
mov
fcomi
inc
mov
mov
test
fcomp
test
xchg
xchg
mov
(bad)
jle
cmp
sub
push
and
pusha
push
sbb
repnz
pop
(bad)
mov
test
loope
scas
or
mov
push
mov
sub
mov
xor
int
inc
pop
add
push
sbb
stos
outs
mov
(bad)
jg
cmp
xor
sub
daa
loopne
cmp
sub
and
test
outs
add
jmp
addr16
icebp
push
(bad)
jnp
out
and
js
jl
xchg
xchg
xchg
jb
xchg
inc
jp
push
loop
inc
inc
add
icebp
pop
jp
fld
mov
xchg
pop
ffree
mov
push
rol
fidivr
cmp
mov
nop
cmps
mov
data16
sub
inc
div
ret
pop
lahf
add
or
shr
jl
mov
loop
adc
out
rol
mov
jb
mov
mov
cli
mov
mov
sbb
call
sub
push
xor
out
je
nop
test
or
fadd
ss
dec
popa
ret
push
push
scas
fld
fisttp
dec
adc
pop
sbb
outs
dec
test
xchg
mov
imul
dec
or
cmp
sub
addr16
lahf
cli
inc
test
xchg
arpl
adc
mov
sar
add
mov
push
shl
dec
sub
adc
xor
ins
stc
loopne
dec
sub
push
inc
dec
sbb
push
mov
adc
lods
fstp
mov
mov
loop
pusha
inc
cli
mov
cmp
mov
sbb
mov
or
lods
(bad)
std
inc
dec
mul
add
add
mov
sbb
push
call
inc
mov
jnp
ror
arpl
jl
add
out
hlt
jle
pop
enter
lods
push
push
dec
scas
sbb
mov
es
out
sbb
cmp
jp
(bad)
sbb
pop
mov
mov
push
movnti
pop
sbb
adc
adc
fist
fidiv
dec
test
aaa
xchg
clc
mov
mov
and
add
jns
jmp
retf
push
lock
addr16
cmp
neg
xlat
add
aaa
mov
dec
xchg
inc
xchg
mov
pop
lods
aad
bound
in
ins
clc
sbb
sub
mov
ins
adc
pop
pop
fstp
icebp
shl
cmps
and
jecxz
aam
test
jo
shr
js
mov
sub
pushf
cmp
cli
push
lds
mov
jbe
jecxz
mov
inc
fcomp
push
popf
jg
sub
dec
in
popf
jns
cwde
sub
mov
cmps
popa
in
cmps
mov
xchg
add
test
daa
add
add
dec
in
jo
adc
ja
xlat
sub
add
out
div
cmp
xchg
jl
scas
push
stos
std
test
cld
repnz
cwde
xchg
fild
mov
jl
sub
test
xchg
mov
adc
cmp
or
aad
hlt
out
aas
inc
xor
xor
ja
jmp
daa
aas
ds
mov
aam
int
cmps
pop
adc
dec
and
lods
icebp
stc
mov
push
push
xlat
mov
pusha
jno
and
cmp
mov
xchg
jge
dec
sbb
retf
lea
(bad)
lods
mov
into
mov
retf
jmp
jmp
in
pusha
push
call
pushf
repnz
push
pushf
stos
fdivr
or
mov
jg
hlt
aam
je
mov
and
aas
cdq
out
pusha
jmp
push
xchg
(bad)
or
push
push
inc
int3
retf
std
lds
jg
addr16
push
test
mov
jle
cdq
add
rcl
xchg
or
sahf
mov
dec
jo
or
mov
sub
fcmovnb
jns
ins
mov
mov
jnp
xor
mov
xchg
jge
xchg
movnti
adc
not
adc
les
(bad)
out
into
nop
xchg
mov
neg
pop
lea
aam
scas
xchg
loope
dec
pop
pop
ins
in
xchg
pop
imul
(bad)
retf
cdq
adc
cmp
out
test
push
ret
cli
dec
ds
arpl
movs
fld
rcl
or
leave
out
int3
sbb
jmp
js
inc
or
int3
cdq
scas
sti
add
xchg
call
dec
sub
cld
or
in
mov
adc
mov
push
and
mov
mov
or
xor
inc
sar
push
sub
and
clc
jmp
lods
xor
jg
sub
cmp
cmp
or
add
gs
dec
sub
xchg
push
and
push
add
or
lock
cmp
xor
out
adc
jno
and
(bad)
cdq
pop
loop
repnz
outs
dec
std
and
mov
movs
sub
loope
outs
push
adc
xchg
and
stc
das
inc
ins
push
xchg
cmp
fs
mov
xor
jmp
dec
or
xlat
ftst
sbb
sub
lods
adc
movs
imul
fnstenv
dec
sbb
test
jae
and
xor
sub
fdivr
mov
(bad)
out
test
lea
sahf
cmp
in
loope
push
mov
mov
mov
jmp
jns
dec
add
sar
jmp
pushf
fs
cmc
cmp
inc
fisttp
push
bswap
pusha
mov
jbe
jnp
arpl
mov
mov
movs
in
pop
scas
mov
fstp
jl
xchg
and
jbe
cli
dec
(bad)
or
cmp
lods
hlt
nop
leave
add
jb
mov
mov
xor
mov
popf
jg
pop
and
add
in
adc
jb
scas
loopne
adc
jle
mov
cmp
push
inc
xchg
(bad)
(bad)
enter
(bad)
aas
jp
test
shl
fdiv
adc
xchg
ss
xor
out
dec
mov
out
mov
mov
inc
test
add
loope
or
cmp
dec
cmp
adc
into
clc
dec
into
adc
push
dec
cmp
hlt
mov
xchg
dec
cld
sar
arpl
inc
dec
xor
dec
data16
push
xor
lock
jno
pop
loopne
arpl
mov
fldl2t
aam
popf
jle
mov
push
ins
push
push
or
push
inc
sbb
jle
inc
ds
pop
loopne
push
jns
js
add
sub
and
xchg
inc
pop
or
popa
xor
adc
xchg
add
mov
retf
dec
sbb
cwde
test
dec
lds
or
pop
sbb
mov
daa
sub
test
add
inc
fld
sti
pop
fstp
out
gs
gs
and
clc
div
je
mov
cmp
ror
pop
pop
mov
or
test
out
dec
adc
jg
sbb
out
imul
icebp
xchg
mov
rol
hlt
pop
or
and
cmp
jb
fadd
or
pusha
pushf
adc
pusha
lods
mov
(bad)
inc
arpl
jnp
leave
push
mov
int3
stc
rol
(bad)
lahf
add
cmc
xchg
sti
fcmovbe
lods
nop
dec
inc
inc
dec
and
pushf
xchg
dec
mov
inc
push
fisttp
(bad)
mov
sar
imul
mov
adc
nop
dec
lock
(bad)
lods
or
pop
retf
movs
mov
inc
shl
pop
or
mov
add
mov
or
and
cmps
sub
cdq
sbb
sub
inc
cmp
and
sahf
lahf
dec
push
and
addr16
aad
scas
push
inc
add
pop
mov
sbb
stos
adc
cld
and
xor
jmp
pop
(bad)
loope
add
dec
jle
pop
ins
xchg
test
fld
out
xor
jno
out
mov
lds
jge
fadd
xor
inc
push
sbb
or
outs
popf
lea
pop
(bad)
in
fild
ror
pop
jno
out
inc
cmp
jns
seta
sub
sbb
hlt
hlt
imul
popa
call
nop
xchg
or
in
push
rol
jl
jmp
loop
jecxz
stos
outs
es
enter
fadd
sbb
cmc
and
pop
push
cmp
js
test
div
sbb
inc
stc
xchg
xlat
mov
int3
jns
pop
xchg
inc
stc
aas
add
cdq
shl
out
movs
ja
in
or
dec
inc
mov
inc
ja
mov
sbb
jnp
pop
rol
pop
scas
push
xchg
out
xchg
mov
inc
retf
mov
mov
ss
jmp
adc
(bad)
fsub
outs
test
setbe
mov
aas
fwait
div
dec
or
(bad)
test
jle
pusha
jo
mov
lds
stos
inc
push
retf
out
fs
ret
inc
rcl
shl
push
mov
sbb
(bad)
jmp
sub
in
mov
jg
jmp
mov
int
(bad)
std
jae
push
mov
imul
xor
sbb
loopne
sub
scas
hlt
sar
bnd
pop
mov
xchg
les
fidiv
(bad)
ss
aaa
add
jmp
add
idiv
push
push
je
inc
push
and
add
enter
cmp
mov
pop
(bad)
mov
pop
movs
or
add
mov
mov
and
cmc
or
adc
sbb
(bad)
ds
mov
dec
ret
jge
adc
xchg
in
in
inc
jl
aad
(bad)
push
mov
pop
pop
adc
movs
les
test
lahf
imul
lahf
(bad)
stc
dec
pop
in
adc
out
ins
arpl
outs
push
retf
dec
xchg
loop
mov
sbb
pushf
push
adc
and
inc
push
dec
in
out
and
push
lea
(bad)
pop
lea
sar
fistp
(bad)
scas
dec
and
in
pop
bound
inc
pop
dec
out
lods
jae
cmp
in
pop
es
mov
add
in
jbe
push
or
dec
push
xchg
pop
into
adc
arpl
cmc
inc
ja
hlt
sub
shl
dec
icebp
mov
out
(bad)
aam
push
jno
data16
idiv
loopne
pop
rol
shl
jmp
hlt
cs
cmp
cli
jno
xchg
mov
pop
test
mov
adc
pop
aam
xchg
int
inc
sahf
test
ins
push
mov
mov
ret
pop
sbb
mov
fwait
sub
gs
and
int3
add
cs
mov
or
jge
repnz
jae
iret
pop
sub
mov
bound
(bad)
mov
sbb
movs
mov
test
and
pop
movs
test
mov
fwait
dec
je
mov
mov
shr
inc
mov
jne
pop
jg
push
cmps
out
xchg
pushf
dec
mov
stos
pop
cmp
scas
add
mov
push
stos
shl
cmp
xor
jle
push
icebp
jl
adc
in
push
inc
movs
jo
sar
inc
adc
pop
dec
mov
stc
adc
sbb
lea
xchg
sbb
mov
xor
push
or
xlat
add
dec
shl
pop
cmp
adc
ins
mov
push
pop
lahf
cdq
fidivr
pop
and
adc
je
mov
push
sbb
scas
js
test
mov
shld
adc
jo
jle
adc
mov
cwde
pop
fs
adc
loope
loope
push
or
scas
retf
mov
add
test
mov
lahf
jmp
jmp
popa
fidiv
sbb
stos
add
mov
movs
fs
imul
adc
test
pop
adc
lock
jmp
inc
pop
and
push
and
sbb
push
or
add
inc
dec
cdq
adc
mov
movs
psrad
hlt
sar
sub
xor
cwde
lds
mov
dec
pusha
aad
scas
push
mov
adc
retf
iret
lods
test
(bad)
xor
cli
inc
fdiv
and
pop
(bad)
xor
xor
pop
pop
imul
inc
les
stos
imul
xchg
pop
imul
xor
pusha
bswap
add
inc
pop
adc
test
arpl
add
fadd
push
cmps
into
and
pop
hlt
ret
test
pop
mov
adc
inc
std
inc
shr
mov
mov
xlat
add
sub
push
push
or
jne
jbe
pop
xchg
jae
add
xchg
mov
(bad)
mov
ja
xor
scas
sub
pop
retf
cmp
scas
and
adc
arpl
push
jg
push
retf
ret
xor
idiv
pop
push
lock
add
mov
fcom
or
pop
xchg
push
mov
pop
lds
and
xchg
dec
ins
test
std
jno
retf
cmp
add
imul
dec
pop
lds
scas
jno
arpl
add
pop
hlt
out
xor
pop
leave
(bad)
pushf
aad
sbb
sbb
dec
pop
(bad)
jecxz
je
in
xlat
dec
outs
push
jp
jo
(bad)
mov
lock
jecxz
loopne
jbe
cmovne
mov
cdq
sbb
outs
neg
xchg
(bad)
dec
test
dec
inc
inc
out
and
fimul
addr16
mov
ja
cmp
sahf
movs
stos
jno
push
pop
test
xor
push
sbb
test
jo
ja
outs
fldpi
sbb
cmp
fidiv
std
imul
inc
popa
push
inc
mov
or
mov
adc
pusha
jl
mov
call
std
inc
ins
and
mov
pop
jmp
jbe
mov
push
and
push
lds
push
mov
sahf
aam
mov
rol
adc
and
sbb
daa
pop
ret
addr16
inc
into
cli
add
stc
add
cld
sbb
rol
xchg
popa
fs
(bad)
fist
jmp
jnp
jnp
daa
dec
mov
into
(bad)
fs
push
out
sbb
idiv
pop
pop
not
fld
pop
pop
cmp
cdq
cmps
mov
(bad)
pop
paddb
adc
pop
add
push
mov
repnz
push
cmp
jp
fnstsw
(bad)
(bad)
mov
aaa
and
push
(bad)
mov
or
iret
push
repnz
inc
mov
aas
inc
ss
cdq
cmp
in
lods
mov
out
sub
outs
mov
inc
xchg
xchg
test
imul
imul
(bad)
pop
bnd
or
in
pop
push
adc
inc
mov
ins
sbb
pop
rcr
or
ins
push
pop
sub
(bad)
and
out
stc
cmp
and
sbb
xchg
mov
cmc
push
cmp
mov
sub
retf
xlat
sub
nop
xor
push
add
cmp
popf
adc
xor
add
dec
sar
and
ins
mov
lods
movs
jp
xchg
inc
inc
sbb
iret
add
test
sbb
xor
gs
sub
out
cmp
mov
pusha
add
das
(bad)
push
retf
push
aam
loopne
mov
test
mov
into
movs
pop
jne
sub
xlat
mov
repz
rcr
das
push
xchg
cmp
test
pop
ret
nop
(bad)
sbb
mov
push
mov
call
jge
data16
or
pop
cmp
jmp
push
sbb
pop
popf
mov
cmc
jb
std
fstp
dec
imul
sbb
(bad)
call
jmp
aas
call
int
mov
adc
shr
and
fnsave
fbstp
jl
fmul
jns
inc
jecxz
or
cdq
xor
lds
sbb
leave
outs
rol
jbe
jbe
pop
push
in
push
repnz
sub
neg
mov
lods
bound
or
cld
lahf
push
repnz
repnz
loope
add
loop
sbb
es
mov
mov
out
mov
mov
lahf
and
adc
xor
pusha
xor
int3
push
mov
es
(bad)
mov
cmps
xor
clc
out
or
(bad)
adc
cmp
mov
out
(bad)
mov
jp
add
jp
stc
lods
push
pop
ret
cmp
push
jp
xchg
test
iret
push
jg
mov
or
inc
cmps
shr
out
pop
movs
in
pop
mov
in
dec
mov
cdq
(bad)
aaa
jmp
aad
xor
add
nop
mov
int3
sub
jo
mov
or
frstpm(287
out
mov
sub
push
dec
push
fmul
adc
pop
(bad)
inc
inc
jmp
clc
jbe
xor
hlt
cmp
popf
ss
mov
cmp
(bad)
outs
xlat
add
mov
cs
iret
popf
call
push
or
rcr
fidivr
fmul
xchg
jge
mov
push
test
outs
sub
or
outs
add
hlt
(bad)
cmc
das
das
enter
int3
test
push
push
mov
rol
test
(bad)
call
mov
(bad)
mov
stos
gs
push
pop
fisub
fdiv
dec
aam
or
fsubr
test
fnstsw
and
pop
sbb
xchg
mov
push
or
popf
loopne
pop
(bad)
movs
test
test
xchg
xchg
(bad)
dec
inc
outs
fsubr
xor
jp
inc
mov
lahf
pop
pop
inc
dec
adc
xor
cmp
push
add
cld
jp
xlat
ins
and
push
dec
sub
jp
add
pop
mov
and
(bad)
call
call
and
es
mov
adc
aaa
pop
les
sbb
cmp
test
in
ficom
dec
dec
pusha
mov
sub
jmp
and
out
scas
adc
inc
imul
es
mov
arpl
(bad)
in
inc
aaa
mov
out
jmp
pop
and
out
xor
aaa
sub
adc
jns
pop
pop
repnz
addr16
mov
mov
mov
and
inc
fs
xor
ror
sub
scas
and
cmc
inc
jbe
pushf
jnp
push
loopne
xchg
mov
inc
out
repz
loopne
jno
out
out
inc
or
lahf
mov
push
jle
call
inc
test
js
sti
dec
adc
pop
leave
xor
or
jg
shl
int3
imul
mov
repz
sbb
mov
mov
retf
call
inc
add
jle
out
shl
loop
sbb
push
cs
popa
std
imul
push
jno
enter
popf
push
mov
and
aas
add
push
fisubr
lods
cdq
outs
sbb
sbb
add
in
mov
pop
sub
cmp
pusha
je
sbb
gs
ds
cmp
mov
jmp
idiv
shl
jmp
rcl
stos
add
clc
cmp
xor
push
dec
jns
or
scas
mov
adc
sub
inc
fst
shl
ret
cli
inc
jmp
sbb
xor
add
fiadd
pop
rcr
push
cs
push
pusha
pop
lahf
jbe
js
cmp
outs
dec
mov
pop
fwait
das
sbb
dec
fcom
and
inc
aad
dec
add
dec
sub
sbb
int
mov
push
mov
repnz
fild
repnz
xor
dec
inc
pushf
neg
or
repnz
sbb
nop
sbb
pushf
pop
int
retf
sub
xchg
pop
push
cmp
mov
pop
test
or
pop
add
repz
lods
daa
ret
ret
leave
mov
icebp
push
cmp
mov
pop
sub
xor
xlat
aaa
xchg
icebp
mov
in
stos
jno
jp
(bad)
jo
aad
xchg
sahf
leave
cmp
imul
lds
loop
dec
loope
sub
xchg
std
or
or
sub
mov
stos
bound
lea
(bad)
std
cwde
das
(bad)
out
pop
xchg
sar
fidivr
adc
mov
xor
imul
out
dec
fs
mov
and
inc
nop
scas
xchg
shl
imul
adc
mov
call
mov
sbb
mov
fidiv
fwait
or
adc
out
fnstsw
push
mov
stc
pop
or
enter
cdq
aaa
sbb
push
mov
test
jno
xlat
pusha
xchg
push
sub
mov
dec
out
mov
bound
mov
aas
jge
inc
imul
fwait
mov
xor
lock
jp
cmp
inc
mov
ds
mov
es
xchg
les
test
or
add
xor
js
dec
bound
mov
hlt
rcr
and
cmp
stc
(bad)
adc
xchg
iret
lods
push
out
cmp
lahf
fcomp
int
movs
pusha
xor
je
sti
pusha
nop
cmpps
mov
jmp
add
jmp
push
pusha
in
mov
dec
sub
and
mov
jp
imul
ret
jp
xchg
stos
or
dec
ds
and
(bad)
rcl
mov
stos
sbb
jle
and
jg
jl
mov
and
pop
pushf
fistp
pusha
imul
out
repnz
test
fxtract
jg
push
adc
test
cmp
rcl
scas
lea
test
xchg
adc
movs
add
pop
inc
sar
std
ins
sub
leave
fs
into
xchg
test
xor
fcmovnb
inc
adc
push
and
out
inc
aaa
test
pop
push
xor
test
xor
aam
in
es
adc
mov
and
mov
enter
jl
inc
and
fldenv
adc
xchg
ja
fisttp
mov
out
push
mov
mov
lahf
jl
cmp
pusha
cli
repz
ja
out
sub
or
jns
or
xchg
retf
xor
add
aaa
inc
dec
into
xchg
test
sbb
sub
enter
sbb
mul
jle
sahf
xor
in
adc
lock
js
gs
add
cmp
xchg
dec
dec
call
(bad)
fcomp
jg
cwde
movs
dec
jne
or
and
js
repz
cmp
inc
in
jmp
fcom
mov
mov
int
stc
xor
mov
fisttp
sar
mov
cwde
xchg
cmp
add
pusha
push
mov
repz
popa
sbb
not
loopne
push
xchg
cdq
in
fist
cld
or
je
jg
jmp
adc
and
adc
mov
dec
sub
jbe
lea
and
sti
push
mov
rcr
les
shl
out
xchg
test
and
outs
dec
in
and
(bad)
cmp
mov
xor
push
xor
loop
xchg
cld
inc
movs
hlt
cmps
pop
sbb
pop
add
aas
js
out
(bad)
xchg
pop
fsubrp
les
push
ja
mov
mov
scas
mov
adc
adc
in
or
pusha
mov
mov
jb
cwde
popf
xchg
sar
mov
cld
jnp
sub
stos
adc
xchg
aas
or
mov
cmps
mov
mov
rcr
mov
inc
push
xchg
cmp
xor
or
sub
xor
imul
dec
(bad)
js
retf
adc
ret
lods
out
and
rcl
xor
mov
push
in
push
sbb
leave
pusha
sub
push
mov
adc
mov
jno
(bad)
cmp
inc
adc
test
in
push
sahf
mov
orps
dec
clc
mov
xlat
xor
pop
mov
cwde
xchg
in
ja
iret
(bad)
(bad)
out
mov
sbb
out
mov
(bad)
daa
xor
or
mov
sahf
(bad)
sti
pop
stc
addr16
(bad)
or
cmps
pop
mov
sbb
adc
test
xchg
test
push
or
sub
retf
cmp
jne
jecxz
mov
mov
xor
cmps
jmp
push
clc
or
mov
xor
cmp
adc
push
(bad)
mov
inc
and
out
cmp
cmps
iret
pop
jo
fs
push
jno
cli
cmps
outs
(bad)
loopne
adc
fistp
out
jo
cmp
mov
retf
addr16
jl
mov
cli
cmps
cmps
loop
xor
lds
jge
sbb
mov
cmp
das
pop
icebp
dec
inc
pop
mov
rcl
xor
repz
lahf
fidiv
sahf
jae
jecxz
cmp
stc
xor
mov
(bad)
sub
ja
jge
imul
das
out
xchg
lods
mov
cmp
(bad)
and
mov
retf
pop
scas
jns
mov
inc
push
cmc
stc
and
xor
pop
in
xor
fcom
xchg
jp
gs
aad
adc
mov
addr16
add
dec
loopne
mov
test
cmp
ret
(bad)
mov
jmp
shr
mov
std
adc
es
add
(bad)
cmp
mov
rcl
movs
call
mov
cmc
ja
repz
rcr
jecxz
loop
dec
xor
adc
ins
jne
mov
jmp
push
outs
push
inc
sti
ins
in
jns
lea
push
or
dec
and
addr16
mov
dec
sbb
add
dec
cmp
dec
out
ja
pop
cmp
in
je
or
mov
push
test
dec
shl
(bad)
fnstcw
pop
scas
push
loope
and
test
jmp
inc
dec
sahf
mov
aad
or
push
xchg
clc
xchg
xor
shl
mov
(bad)
cmc
imul
es
and
jecxz
lds
and
jae
mov
xchg
xor
call
pop
sbb
mov
pop
xchg
and
popf
mov
xor
xchg
aas
push
sahf
jo
jb
popf
adc
es
std
stos
push
mov
inc
add
neg
imul
or
mov
or
xor
adc
and
cmp
sub
mov
dec
icebp
dec
int3
test
sub
cmc
shl
jbe
outs
(bad)
lar
aad
inc
rol
rcr
ret
sub
mov
add
xchg
mov
mov
push
xchg
dec
mov
retf
outs
int3
ret
je
ret
pop
cmp
cmp
mov
out
fisttp
enter
popa
out
mov
or
dec
fs
fisub
lods
cwde
retf
adc
sbb
or
(bad)
ds
aaa
adc
mul
or
add
aam
retf
cmp
mov
ss
mov
shr
pop
(bad)
pop
fs
cmc
add
mov
dec
sbb
shl
in
cmp
and
jle
or
mov
call
or
push
loopne
out
pop
mov
xchg
pop
rcl
pop
mov
adc
xchg
std
jge
cmps
(bad)
xchg
sar
sbb
hlt
adc
sbb
mov
rcr
mov
jbe
sub
jg
mov
les
scas
shl
nop
repnz
pop
xor
add
ror
add
adc
pop
adc
sbb
jg
and
in
gs
push
dec
sahf
xor
pusha
sbb
pop
dec
das
ror
lock
push
popf
rcr
add
xchg
xor
jge
(bad)
push
adc
(bad)
and
neg
je
pop
lock
ja
add
pop
mov
mov
xor
rcl
pop
jle
std
jae
push
call
clc
push
mov
loop
in
ffree
popa
push
js
repnz
mov
lahf
movs
mov
(bad)
retf
pop
cmc
sahf
inc
jne
dec
call
jns
pop
mov
ror
cmp
add
sub
lds
pop
mov
sbb
jno
loop
dec
and
cld
pop
fidivr
sub
pop
cmp
fsubr
cmp
shl
add
mov
imul
mov
cdq
jmp
xor
push
cmps
cmp
xor
dec
cmp
mov
pop
fsub
mov
test
or
into
inc
jnp
stos
cmp
inc
int
addr16
xchg
lea
aad
ja
jb
sbb
sub
mov
(bad)
or
xor
scas
add
cmp
or
dec
or
leave
adc
cmp
clc
mov
stos
sar
mov
aad
inc
or
aad
test
xchg
ss
inc
retf
(bad)
out
sub
daa
cmc
std
xchg
or
sub
mov
dec
sub
in
or
lods
pop
sub
hlt
push
cmp
mov
and
(bad)
jnp
push
ror
fs
mov
cmps
xor
push
jecxz
lds
xor
mov
dec
shl
jne
xchg
les
add
dec
in
popa
lahf
pop
jmp
mov
push
or
push
aaa
sub
sahf
mov
push
pop
sbb
pop
ins
pop
sub
and
dec
imul
pop
(bad)
clc
fstp
dec
mov
and
(bad)
fs
add
inc
repnz
stos
fneni(8087
loope
(bad)
retf
dec
int3
movs
adc
mov
dec
sbb
or
xchg
(bad)
add
std
pop
rcl
and
jnp
add
dec
pop
outs
arpl
in
pop
mov
push
cli
dec
adc
ins
icebp
jp
xlat
retf
(bad)
cs
jp
(bad)
sub
xor
dec
add
or
test
js
push
(bad)
cmp
jl
and
sbb
sahf
xchg
cli
pop
add
mov
jae
inc
mov
iret
aaa
cmp
cld
inc
xor
test
cmp
out
push
lahf
sbb
jp
mov
in
xchg
not
add
dec
push
aad
add
cmps
add
sub
dec
aad
clc
push
aas
es
(bad)
in
stos
(bad)
mov
inc
imul
gs
call
jge
jo
mov
popa
xlat
or
lds
sti
or
std
add
mov
out
inc
in
int3
mov
int
adc
sub
aaa
sub
scas
nop
sbb
shr
adc
cdq
out
sahf
jge
lea
cmps
pop
dec
adc
fwait
(bad)
fiadd
and
sub
push
push
push
inc
movs
popf
add
sbb
lods
retf
andps
fs
(bad)
push
mov
ss
xchg
push
cs
push
cwde
push
pop
call
cdq
dec
test
loopne
lahf
enter
ret
add
ret
xor
xor
fs
enter
push
mov
jmp
int3
jp
retf
dec
addr16
xor
push
pushw
in
jle
in
xchg
fdiv
mov
icebp
stos
cwde
cmps
xchg
jb
jmp
add
adc
sbb
movs
dec
dec
test
outs
xor
ficom
fild
(bad)
mov
scas
and
cmc
iret
push
mov
sbb
out
mov
test
xor
(bad)
cmp
test
mov
xor
mov
int
(bad)
push
popf
adc
imul
cdq
cmp
xchg
dec
in
ret
int
sbb
adc
jns
mov
sti
push
sub
and
pop
test
addr16
int
cmc
or
xchg
sbb
jmp
test
in
fistp
jno
add
dec
xchg
jg
cmp
mov
pop
scas
xlat
and
in
gs
dec
pop
sbb
adc
shr
mov
icebp
and
je
add
push
popf
test
jb
jne
sbb
push
jp
rol
cvtdq2ps
fs
lds
inc
or
cmc
lods
int3
and
fwait
stos
iret
retf
call
push
push
jmp
add
arpl
adc
shl
adc
xchg
push
adc
dec
push
stc
aad
mov
push
inc
shl
pop
outs
test
mov
popf
popa
or
rcl
add
cmp
test
sbb
sbb
jp
adc
xor
in
call
movs
sbb
jge
xchg
sti
test
sbb
ja
js
lock
loop
pop
stos
jae
push
cwde
addr16
out
mov
cld
scas
and
and
daa
jns
mov
xchg
test
push
aaa
jne
push
test
jb
push
aas
(bad)
shl
mov
scas
jmp
sbb
mov
ret
call
jecxz
fidiv
cmp
out
lods
pop
jae
popf
fild
mov
jo
xor
mov
dec
sbb
xchg
int3
stc
adc
adc
movs
enter
shl
retf
pusha
mov
js
jns
sbb
movs
lahf
test
jp
pop
add
cmp
sbb
add
or
cmp
mov
fsin
inc
int
pop
mov
sbb
xchg
mov
fwait
pop
mov
cli
mov
xchg
cmp
sahf
fistp
sbb
in
icebp
cmps
sub
mul
in
inc
test
or
mov
aaa
out
popf
sbb
mov
test
shl
icebp
scas
cmp
pop
jae
and
push
fwait
and
sahf
fisubr
daa
dec
das
jmp
jnp
out
test
mov
jb
push
stc
loopne
ins
or
mov
fcomp
dec
sbb
jecxz
(bad)
xor
js
add
js
(bad)
fiadd
cld
xor
dec
repnz
(bad)
jecxz
stos
cld
stos
xor
push
out
push
mov
mov
es
call
ja
fbld
retf
fs
add
iret
mov
mov
in
pop
mov
loope
pop
pop
scas
fwait
int3
mov
mov
cmp
sbb
and
scas
mov
mov
add
loop
add
mov
add
pop
xor
bound
(bad)
rol
int
xor
(bad)
jns
pop
pusha
lahf
nop
stos
fld
pop
cmps
inc
pop
mov
dec
pop
adc
shr
int3
das
fistp
xchg
cmp
inc
mov
push
jmp
xchg
mov
sbb
stos
mov
jmp
add
(bad)
clc
jae
push
popa
jo
sub
(bad)
pop
xchg
out
jg
call
xor
add
pop
lock
jecxz
xor
sub
and
jnp
in
addr16
je
iret
xchg
pop
pop
xor
or
xchg
cmp
loope
mov
das
das
repnz
ficom
mov
sub
in
mov
pop
push
xchg
sub
xor
and
outs
mov
push
adc
or
dec
arpl
shl
lds
imul
sub
xor
cs
xchg
pusha
js
pop
test
(bad)
je
adc
mov
sbb
push
std
add
sbb
movs
sub
mov
pop
dec
enter
call
cmp
mov
nop
cmps
and
pop
cwde
loopne
jmp
cmp
pop
pop
les
pop
(bad)
push
lock
pusha
and
mov
inc
push
popa
pushf
stc
pop
fisubr
mov
xchg
das
ret
fbld
js
stos
jmp
in
loope
into
add
sub
push
movs
lods
jg
pop
imul
test
addr16
in
jmp
fmulp
mov
(bad)
stos
push
pop
mov
(bad)
aad
out
popf
or
sub
fadd
in
std
sub
dec
clc
and
mov
imul
push
retf
xchg
enter
mov
mov
imul
test
jl
mov
push
xor
cli
enter
sub
mov
adc
push
out
lahf
js
adc
xchg
(bad)
outs
mov
test
sahf
sub
or
jns
or
cmps
das
cmp
jno
(bad)
and
test
dec
xchg
in
ds
jl
rcl
xchg
dec
jp
inc
sbb
sbb
out
inc
mov
and
sbb
cdq
call
xor
out
mov
imul
dec
(bad)
mov
xchg
jl
cmp
lahf
xor
push
push
inc
or
bound
outs
scas
dec
pop
jnp
fucomip
dec
pushf
inc
cmc
jnp
cld
push
jmp
jmp
jns
adc
xor
(bad)
aad
dec
sbb
mov
out
mov
retf
int3
mov
jnp
sbb
pop
add
jp
sub
sbb
jle
jae
lock
xchg
das
cmp
cmp
or
jmp
frstor
jo
mov
les
or
ins
sub
in
loope
imul
cmp
fild
adc
cli
push
ds
push
inc
pop
(bad)
push
push
outs
inc
xor
pop
dec
fisttp
scas
add
in
and
sub
lods
cs
fdiv
pop
mov
or
mov
jp
lods
movs
xchg
enter
daa
gs
icebp
sbb
loopne
sahf
sub
je
call
lock
or
dec
movs
sub
adc
loopne
push
sar
push
gs
sub
cmp
jnp
push
out
xchg
jbe
pop
ret
inc
cmp
mov
les
lea
jge
movs
int3
sar
popa
cmovg
jg
test
(bad)
fcmovne
fisub
jns
lea
leave
xor
sub
inc
fwait
in
mov
pop
nop
cmp
lock
sbb
inc
dec
xchg
in
nop
mov
jbe
(bad)
js
fldcw
pop
push
outs
cmp
add
jo
bnd
or
inc
hlt
pop
(bad)
scas
lods
fmul
mov
mov
ds
jns
retf
jmp
rol
push
nop
retf
xlat
mov
and
not
ficom
lods
cmp
push
push
test
add
jmp
mov
arpl
scas
test
psubusb
nop
mov
push
cmps
cmc
mov
in
arpl
dec
pop
(bad)
int
sbb
cdq
fldcw
lods
adc
ret
inc
xor
ins
or
pusha
cmp
cld
mov
mov
rol
dec
push
hlt
sub
mov
cs
dec
sub
and
ror
jno
bound
cmps
aaa
add
cmp
inc
dec
ret
xchg
stos
scas
sub
push
push
jae
mov
or
sub
mov
xchg
dec
mov
popf
cmp
rcr
inc
xor
pop
cmps
sahf
adc
pop
std
push
in
aaa
retf
xchg
jl
shl
addr16
jmp
jo
sbb
imul
pop
ins
push
mov
or
out
out
mov
cmp
fs
sub
pop
fcom
inc
sub
push
clc
lahf
dec
(bad)
ins
sbb
lds
or
nop
adc
adc
stc
pop
js
sub
gs
imul
xchg
into
xchg
sbb
fistp
pop
int3
cmp
out
outs
ss
mov
jmp
aad
inc
jmp
in
ja
and
jae
or
jbe
ins
mov
arpl
push
and
cmp
cmc
sbb
dec
(bad)
aam
(bad)
dec
in
enter
mov
stc
push
mov
scas
add
cmp
fisub
cs
mov
sub
push
aam
in
sbb
jbe
lods
or
popa
push
pop
ins
cwde
push
lahf
scas
mov
dec
or
or
fdivr
sbb
push
(bad)
ja
scas
mov
dec
cli
push
stos
push
jecxz
es
repnz
inc
ds
xor
add
mov
or
int
icebp
and
push
aas
in
cmp
(bad)
adc
sbb
mov
pop
or
xor
pop
mov
pop
test
arpl
test
mov
iret
call
(bad)
mov
test
ficomp
push
dec
int
add
fisttp
fsubr
fisttp
pop
cld
xor
mov
pop
fcom
je
jae
add
ret
pop
add
sub
or
dec
sub
cwde
cmp
(bad)
call
xchg
fiadd
repz
inc
lods
ror
rcr
das
xchg
jo
mov
fbld
(bad)
shl
cmp
xlat
xchg
xor
push
add
inc
mov
outs
shl
test
mov
(bad)
in
mov
out
adc
mov
cmp
cli
stos
outs
bound
enter
daa
js
outs
sbb
in
xor
mov
dec
push
cli
mov
div
add
mov
sbb
mov
imul
sub
mov
mov
rdtsc
cmc
push
push
sub
mov
pop
mov
icebp
int3
pusha
dec
out
jl
inc
inc
in
fadd
cli
data16
mov
sub
cmps
dec
jg
cld
sub
sbb
aas
imul
jle
pop
test
push
aad
enter
pop
fcmovnb
cwde
jbe
jbe
cld
mov
push
scas
sbb
push
cld
leave
cs
lahf
xchg
sbb
add
adc
rol
mov
test
mov
inc
fstp
adc
or
retf
mov
xchg
mov
stos
jbe
mov
daa
call
push
jge
and
xor
mov
pop
das
loopne
cmp
lahf
cmp
mov
in
test
fs
xchg
inc
shl
loop
repz
std
dec
outs
(bad)
cwde
ins
test
imul
mov
shr
jo
sub
fwait
pusha
repz
adc
mov
in
push
stos
push
(bad)
mov
sbb
cld
push
push
cmp
(bad)
int3
cmp
dec
add
xlat
mov
inc
in
movs
sbb
add
mov
std
mov
fnstcw
adc
icebp
jecxz
or
xchg
sub
ds
std
imul
(bad)
mov
test
aam
mov
dec
adc
(bad)
fnstcw
sbb
dec
cmp
xchg
cld
jae
nop
dec
sub
jge
adc
push
ins
adc
repz
xor
outs
(bad)
cmps
inc
js
jp
add
inc
xchg
jbe
add
shr
cmps
out
and
pop
mov
lock
xchg
mov
out
scas
out
sub
lds
cmp
xor
and
ffree
xchg
aam
push
sub
into
lahf
movs
lods
imul
in
nop
fidivr
mov
xor
shr
jne
fs
jge
pop
mov
cdq
fcomp
pop
cwde
pop
rol
add
xchg
out
pop
cli
out
int3
and
mov
test
dec
loop
fcomi
fwait
and
out
inc
lahf
loop
jno
mov
outs
adc
pop
fimul
sbb
adc
or
push
sar
mov
pusha
pop
xor
test
xor
sbb
mov
mov
and
pop
ja
(bad)
iret
sub
pushf
popf
inc
jg
cs
xor
xor
mov
aaa
mov
adc
mov
sub
adc
jo
popa
mov
pop
jns
sub
dec
ins
push
nop
dec
mov
es
jl
jmp
push
ficomp
xor
rol
push
inc
lds
cdq
test
push
idiv
jb
imul
jg
jg
jl
push
bound
div
call
dec
faddp
clc
pop
rcr
inc
js
jecxz
cmp
dec
outs
fucom
cmp
jnp
stos
mov
dec
or
shl
jns
mov
xor
(bad)
adc
(bad)
xor
ret
add
es
dec
mov
ficom
pop
push
clc
adc
dec
push
(bad)
ins
out
jbe
lea
cmp
loopne
jns
sub
inc
cmc
cli
mov
cmp
push
sbb
push
or
rcl
in
jno
jg
loopne
aas
icebp
out
das
add
jne
icebp
call
push
cmp
push
dec
loopne
addr16
mov
mov
cmp
mov
jle
hlt
cmp
lods
scas
mov
and
push
sub
mov
loopne
rol
jmp
add
jb
adc
mov
cmp
mov
and
mov
xchg
push
loopne
or
adc
arpl
loopne
mov
imul
xor
mov
cmp
(bad)
xlat
lds
pop
(bad)
mov
adc
cmp
test
sbb
jl
aam
xor
sbb
or
lods
push
jno
mov
(bad)
inc
push
cwde
(bad)
fldenv
inc
fsub
xor
xchg
pop
fwait
cmps
cmp
pop
cld
mov
ins
cmps
push
xchg
jmp
sub
stos
ret
neg
pushf
dec
imul
arpl
lahf
mov
push
xor
in
sti
lahf
xchg
mov
xlat
repz
in
(bad)
and
xor
sar
xor
push
adc
push
aad
fld
cmps
rcr
bnd
retf
or
add
push
retf
test
dec
mov
jmp
pop
pminub
fs
lods
aam
dec
pop
mov
int3
push
xchg
fcom
xor
cld
test
(bad)
adc
lahf
dec
dec
(bad)
jl
dec
xor
ja
pop
pop
jo
xchg
xchg
call
(bad)
std
jbe
(bad)
test
adc
ins
and
fsub
fild
sub
clc
fnstenv
and
xor
adc
ret
or
pop
push
(bad)
sub
test
(bad)
popf
push
dec
mov
xchg
xor
in
xchg
test
jle
dec
mov
mov
cdq
dec
lods
pop
xor
mov
test
repnz
jmp
lock
sub
fwait
add
or
fcmovu
xchg
push
sbb
cmp
adc
scas
pop
or
push
push
push
sar
xchg
mov
inc
das
xchg
fstp
xor
hlt
pop
pop
xchg
or
jge
or
fcomp
out
pmaxub
pop
lds
rcr
xchg
shl
xor
shl
cmp
call
rol
fidiv
jmp
cmp
out
push
fcomp
mov
adc
fisttp
movs
sar
jmp
(bad)
mov
dec
ja
fistp
push
xchg
movs
and
lods
mov
adc
jmp
and
shl
add
xchg
xchg
xor
mov
xor
movs
cmc
jne
jmp
sbb
xchg
retf
shl
fs
xor
pop
pop
stos
fdivp
mov
int
gs
out
mov
cmp
ror
sub
shl
daa
enter
pop
jbe
test
test
add
push
outs
add
mov
sahf
scas
jg
xor
mov
fwait
mov
cmp
scas
push
push
int3
and
xor
js
mov
sub
sbb
pop
cmps
xchg
push
fidivr
out
mov
popf
sti
sub
call
loopne
sub
mov
mov
lock
add
shr
jge
stc
cdq
sub
out
mov
aaa
retf
mov
out
add
mov
cmp
and
mov
xor
das
sbb
jecxz
stos
stos
push
sub
(bad)
enter
popa
cmp
(bad)
and
std
pop
loop
jecxz
(bad)
fwait
mov
push
add
xchg
dec
aaa
icebp
pop
fnstcw
fisub
adc
cmp
push
int3
pop
dec
aas
aam
dec
nop
xchg
mov
loope
loope
leave
stos
or
pop
dec
lods
xchg
je
xor
sub
xchg
cmp
movs
or
pop
dec
test
push
ficomp
sbb
xor
sar
xor
popf
not
retf
jbe
and
pushf
repnz
push
out
pop
pop
int
push
lds
xchg
jne
in
out
sbb
mov
or
xchg
les
sub
les
lds
push
mov
les
mov
test
outs
cli
imul
dec
push
cmp
push
cmp
mov
sbb
ins
cmc
pop
xchg
nop
mov
push
jns
sbb
dec
add
add
gs
adc
outs
jl
neg
ffreep
push
lods
clc
into
adc
push
das
mov
xor
sbb
aad
in
sbb
mov
(bad)
mov
push
std
adc
mov
ficomp
test
arpl
loop
adc
xor
push
mov
xchg
pop
iret
fsubr
cmp
mov
fs
inc
scas
cmp
lahf
std
retf
or
pushf
pop
je
inc
inc
jo
mov
mov
fnstcw
mov
sbb
pusha
dec
ss
push
push
popf
sub
xchg
ins
push
aam
dec
cwde
or
scas
dec
pop
push
fwait
out
cdq
inc
mov
call
dec
and
dec
pop
push
adc
pop
loopne
jg
dec
pop
sub
mov
xchg
cmp
test
std
pop
es
mov
div
sub
sub
inc
cmp
add
mov
inc
fwait
mov
loope
popf
sub
sbb
xchg
outs
mov
add
repnz
mov
cld
pop
mov
cmp
lods
pop
leave
sbb
or
dec
mov
or
mov
inc
lds
sbb
or
lea
loop
out
fsubr
in
xlat
into
outs
lods
push
ret
adc
push
sub
xchg
inc
mov
imul
retf
call
shr
out
gs
push
mov
add
mov
mov
jg
inc
add
inc
mov
and
adc
bsr
add
sub
push
loope
lea
pop
out
xor
fcmove
es
daa
mul
jecxz
sub
stos
jo
retf
sub
int
adc
inc
test
pop
cld
adc
int3
push
repnz
push
test
stos
ins
sub
dec
and
mov
lea
push
mov
(bad)
outs
or
fcmovne
add
jmp
out
mov
mov
or
mov
adc
fsub
push
push
ja
lahf
(bad)
(bad)
mov
popa
push
loopne
cmps
shr
pop
dec
imul
sbb
or
pop
fmul
jge
push
fistp
inc
xchg
cdq
push
test
jg
les
nop
jae
jl
call
mov
or
es
dec
jnp
ficomp
sub
push
lock
and
xor
dec
lods
sbb
jne
xchg
inc
or
push
js
jecxz
mov
xchg
dec
call
jbe
mov
adc
mov
sub
jnp
sbb
inc
pusha
fs
sbb
and
pusha
push
sahf
retf
arpl
push
dec
mov
or
sub
loopne
pop
mov
pop
adc
mov
outs
aad
mov
push
(bad)
call
arpl
push
mov
sbb
pushf
inc
fadd
push
cmp
scas
mov
sub
mov
cld
rcl
test
into
ins
xlat
ss
cmp
cld
pop
aas
mov
add
out
adc
rol
mov
out
xor
les
mov
xlat
shl
shr
lmsw
mov
or
cmp
jnp
(bad)
hlt
mov
sbb
sbb
push
int3
mov
dec
imul
ins
lods
sti
dec
ret
jnp
(bad)
stos
outs
push
jo
push
mov
call
mov
out
or
test
leave
ins
lods
rcl
jno
into
push
aam
jno
xchg
add
shr
mov
mov
add
int3
mov
shl
fs
cmp
shr
(bad)
sbb
add
inc
arpl
fiadd
call
(bad)
(bad)
sub
xchg
sub
hlt
mov
scas
sub
popa
pop
push
jmp
shl
imul
jp
inc
xchg
xchg
adc
shr
cmc
cld
ds
enter
daa
mov
add
mov
lea
xchg
jmp
dec
lahf
xchg
sar
mov
bound
adc
test
pop
stos
inc
pushf
lock
ds
sub
mov
cmc
inc
xchg
jae
jnp
(bad)
adc
movs
jne
and
out
cmps
sub
push
sbb
lods
mov
outs
les
(bad)
xchg
fdivr
jb
ror
test
cli
pushf
enter
lea
pop
mov
ins
pop
sbb
jb
mov
stc
aas
repz
mov
add
dec
cmp
pusha
cs
dec
inc
cmc
or
push
in
lea
in
aas
rcl
jae
icebp
cld
mov
test
or
shr
test
pushf
inc
mov
in
jecxz
sbb
ror
movs
rcl
jo
sbb
jns
sub
push
push
and
push
inc
cdq
and
mov
arpl
push
mov
test
xchg
inc
pop
sbb
sub
jne
jle
xchg
and
pop
dec
cld
sbb
in
(bad)
(bad)
out
call
sub
lea
sub
les
mov
ss
add
je
(bad)
(bad)
outs
fwait
pop
stos
pop
rcr
or
cmc
call
ror
call
mov
lock
mov
mov
or
and
rcl
mov
mov
mov
xchg
push
add
in
fidiv
jp
cmp
or
push
jge
pop
mov
test
das
jo
mov
retf
xchg
pop
sti
call
and
xchg
out
jb
movs
push
xor
dec
outs
adc
bound
cli
je
mov
repnz
mov
shl
push
push
xor
outs
ins
cmp
mov
fidiv
xchg
lahf
pop
push
repz
into
sahf
push
push
pop
jmp
repnz
dec
daa
and
cmp
cwde
je
inc
pop
addr16
xor
sub
mov
mov
or
inc
call
divps
sbb
inc
adc
add
cs
mov
lahf
or
ror
xchg
test
aam
lahf
dec
pop
shl
sahf
arpl
(bad)
dec
jae
push
arpl
adc
dec
sbb
pop
into
out
cmp
xchg
xchg
out
les
out
sub
scas
cmp
pop
cli
sub
rcl
mov
xchg
(bad)
iret
pop
inc
rol
sub
cmp
out
test
fstp
cli
mov
sub
cmps
aas
popa
mov
xchg
adc
mov
inc
or
sbb
adc
mov
jl
movs
pop
mov
cwde
jne
sub
adc
stc
jb
lea
inc
mov
mov
xchg
daa
adc
xchg
daa
jno
sub
out
sub
dec
add
cwde
int
sub
shl
shl
adc
(bad)
and
enter
ins
mov
add
cmp
mov
jmp
ins
cmp
xchg
push
jae
sahf
adc
call
outs
push
jmp
add
retf
xchg
fidiv
mov
fst
sbb
mov
frstor
jg
in
js
or
jo
push
xchg
adc
push
dec
inc
imul
inc
inc
and
or
pop
push
mov
ret
mov
gs
pusha
test
sbb
push
push
push
int
adc
adc
aad
inc
inc
dec
fisub
mov
scas
mov
inc
in
stos
repz
inc
mov
mov
jno
cwde
dec
clc
int3
sbb
push
outs
movs
and
icebp
adc
int
mov
lahf
rcl
loope
add
dec
addr16
jns
add
sti
rcl
dec
aaa
repz
movs
jp
or
add
pop
pop
into
mov
aam
retf
cmp
loope
mov
retf
add
loopne
clc
inc
xchg
mov
dec
sub
add
xor
dec
xchg
sti
out
fsubr
mov
adc
icebp
out
sbb
movs
(bad)
cmp
mov
and
xchg
ficom
sti
ja
rol
add
retf
mov
add
dec
xchg
mov
cs
mov
xchg
add
pop
cmp
jb
mov
stos
or
(bad)
std
mov
pop
pushf
hlt
xchg
dec
cmp
aaa
fwait
push
ror
stos
or
xchg
or
retf
scas
test
lods
push
enter
ins
mov
sbb
test
push
popa
in
in
sti
aad
popf
loop
or
in
fbstp
sahf
cdq
test
fisttp
stc
xor
jmp
jle
dec
jno
imul
outs
add
mov
daa
rcl
loop
jl
sbb
jae
cmps
paddq
pop
cld
push
mov
(bad)
in
iret
cmps
push
nop
xchg
fist
int3
jns
xor
mov
sahf
add
lods
movs
add
scas
adc
and
push
repz
or
push
stc
(bad)
and
imul
add
pop
xchg
fnsave
ret
pop
dec
out
lods
ret
enter
push
xor
xor
pop
or
jb
jg
sub
inc
ret
fidiv
gs
or
lds
lahf
(bad)
and
pop
jb
bound
jmp
cmp
xor
sub
pop
adc
mov
pop
or
fidivr
cmp
mov
out
icebp
adc
add
stos
xchg
sub
fimul
mul
inc
dec
dec
jno
push
loope
stc
imul
cmp
cs
bnd
lahf
pop
and
in
imul
(bad)
fstp
sar
xor
sub
mul
sub
push
(bad)
pushf
push
(bad)
dec
aad
fcos
add
mov
cmp
pop
lods
pop
inc
and
outs
div
adc
movs
clc
cs
mov
retf
lds
add
mov
pop
mov
out
icebp
arpl
pop
addr16
xchg
dec
cmc
into
add
adc
jmp
adc
jnp
inc
mov
add
sub
sub
bound
into
jl
nop
frstor
lock
mov
sub
test
je
je
lods
jg
mov
fcomp
add
add
aas
loop
daa
or
lods
call
mov
xor
xor
pop
(bad)
loopne
cmp
lds
ins
cdq
cdq
push
and
cmp
mov
fcmovbe
dec
pop
sbb
adc
dec
fldcw
imul
xor
push
loop
inc
(bad)
in
jae
sbb
sbb
dec
or
dec
push
sub
bound
xor
push
imul
fstp
mov
repnz
mov
fcom
dec
scas
enter
xchg
jnp
repz
adc
adc
scas
xor
mov
ins
pop
stos
jae
adc
xchg
sbb
enter
cmp
adc
dec
cwde
mov
ret
add
jnp
add
sbb
int3
clc
mov
cmp
lock
push
add
ret
in
and
sub
pushf
cmp
inc
out
cs
das
or
xchg
jnp
pop
mov
jecxz
dec
jp
fisub
test
dec
push
leave
test
mov
in
js
scas
fadd
jle
(bad)
out
test
iret
inc
add
test
xor
add
in
pop
jno
or
or
pop
jl
neg
dec
(bad)
cmp
sbb
add
mov
jne
mov
test
cld
mov
pop
rdtsc
scas
adc
add
pop
getsec
retf
in
sub
xor
sub
jle
rcr
mov
ins
sar
add
daa
inc
dec
or
push
push
mov
shl
xor
ss
push
xor
mov
dec
cmps
rcl
stos
(bad)
movs
mov
sbb
into
or
ins
mov
sub
adc
dec
in
cmp
aaa
fdivr
(bad)
out
loop
mov
inc
aaa
push
jle
mov
faddp
push
sbb
and
pop
pushf
xor
mov
retf
and
or
mov
stos
adc
dec
in
cld
sub
cmp
mov
lds
inc
stos
cld
mov
idiv
mov
data16
mov
outs
and
addr16
jl
call
inc
jle
cmp
jl
pop
mov
sub
(bad)
mov
cmp
sbb
movs
mov
sbb
push
(bad)
jbe
aas
stc
inc
pop
pop
popa
test
fisub
sub
call
pop
(bad)
cmp
mov
sahf
push
lods
(bad)
cld
pop
push
mov
lahf
fldcw
aas
fidivr
dec
xor
jae
sar
out
fidivr
cmp
imul
sbb
(bad)
aam
retf
mov
sub
inc
adc
xor
sub
mov
jne
ds
stos
not
pop
xor
daa
shl
pop
call
ins
jg
mov
arpl
add
pop
mov
pop
or
int
push
xchg
loop
pop
loope
cmp
or
inc
(bad)
fist
outs
xchg
jnp
adc
(bad)
ds
out
jns
cmp
mov
mov
pusha
lahf
pushf
add
sti
fisubr
mov
daa
lock
sub
adc
sub
loopne
or
ins
(bad)
pop
mul
adc
inc
hlt
(bad)
in
dec
lea
dec
mov
cmp
push
xor
sub
popa
mov
pop
loop
rcl
ins
lock
adc
jnp
jmp
or
daa
push
mov
(bad)
fnsavew
cmp
pop
push
and
xor
xor
push
mov
jo
dec
ficomp
lahf
xchg
cs
jno
les
push
mov
inc
or
enter
popa
and
cmc
xchg
lods
xor
push
xchg
movs
nop
call
jne
push
movs
jecxz
pop
dec
pop
inc
icebp
cmc
in
add
inc
push
cmp
(bad)
(bad)
hlt
sub
jp
inc
scas
xchg
xchg
test
mov
mov
ins
add
jge
cs
shr
in
xor
inc
sub
sub
sub
mov
call
add
dec
jo
lock
xor
mov
(bad)
sbb
mov
mov
dec
cwde
add
xchg
cmp
xor
push
outs
(bad)
and
dec
push
repnz
hlt
dec
(bad)
sti
push
(bad)
pop
enter
shl
(bad)
movs
dec
cmp
pop
data16
fild
cli
jno
xor
inc
jmp
sub
(bad)
or
test
das
or
jbe
in
fwait
sbb
pusha
je
mov
sub
mov
xlat
push
scas
add
les
je
cmp
push
jb
pop
or
xchg
jmp
lods
add
(bad)
push
jbe
mov
out
pop
push
in
dec
jle
mov
pusha
adc
out
call
(bad)
addr16
mov
mov
add
inc
scas
xchg
add
lds
add
xchg
scas
sbb
lock
pop
pop
stc
bound
add
pop
arpl
adc
inc
int3
xor
cld
mov
xor
stos
arpl
adc
arpl
fcom
jle
rol
ficom
jmp
mov
inc
mov
jge
inc
jns
pop
adc
icebp
bnd
rcr
pop
adc
mov
ja
ss
clc
add
in
ret
lock
popf
or
movs
dec
div
dec
or
sub
xchg
xchg
fisttp
xchg
xchg
dec
sahf
adc
mov
out
in
mov
ss
inc
je
or
push
fisub
jbe
and
nop
fwait
mov
mov
and
sbb
inc
push
add
and
fimul
or
xchg
in
call
mov
shl
xchg
repz
mov
and
loop
test
mov
mov
stc
sbb
or
mov
das
loopne
retf
xor
hlt
add
hlt
mov
xchg
test
mov
mov
rcl
dec
mov
sbb
popa
ss
mov
test
(bad)
aas
sbb
xor
out
fiadd
and
les
les
test
aaa
push
add
and
inc
xchg
jbe
mov
jle
(bad)
push
rol
xchg
sub
xchg
mov
das
mov
out
cwde
push
int
popf
push
push
dec
dec
(bad)
sub
and
and
bswap
and
or
inc
mov
into
pop
add
popf
inc
mov
nop
xchg
jb
js
inc
(bad)
ds
stos
ret
mov
fdiv
(bad)
push
mov
or
inc
std
mov
mov
cmp
mov
mov
push
dec
sbb
adc
clc
pop
inc
ret
scas
aaa
push
push
and
dec
sub
test
movs
cmps
inc
and
repnz
in
repnz
sbb
pop
shl
xchg
fbld
jp
mov
imul
cmp
jmp
add
push
jle
xchg
or
jb
push
into
xchg
inc
inc
mov
pop
mov
popf
cmc
fwait
repnz
stc
movs
adc
cdq
dec
rcl
aad
cmp
leave
pusha
fst
jno
push
cs
adc
ffreep
inc
cwde
jmp
cs
fst
inc
jg
xchg
mov
mov
or
in
outs
sub
dec
in
push
rol
xor
cwde
loope
xor
stos
dec
in
sub
inc
cmp
adc
cmp
test
mov
push
retf
xor
cwde
xchg
retf
enter
add
push
repnz
outs
lahf
and
or
pop
dec
cwde
std
cmp
add
jp
imul
cdq
aas
rcr
pop
sbb
jnp
inc
sahf
cmp
add
xlat
inc
cmp
sti
jb
cdq
push
pusha
in
test
cmc
cmc
or
push
loopne
dec
fwait
cs
test
bts
adc
iret
xor
mov
out
scas
cmp
pop
dec
xchg
bound
sub
aad
dec
pop
enter
stc
inc
and
pop
adc
scas
out
jbe
jns
idiv
mov
es
mov
cmps
inc
push
jmp
(bad)
scas
xchg
inc
in
mov
push
movs
mov
and
in
or
inc
xchg
jno
ins
push
fucompp
cmp
loop
push
sub
setge
or
enter
in
inc
or
push
out
jnp
xor
mov
aam
jo
inc
dec
pop
fld
xor
in
adc
(bad)
fnstcw
sub
xchg
sub
push
cmp
xlat
data16
pop
retf
jns
in
sub
inc
shr
mov
call
jns
(bad)
ja
xchg
mov
mov
sbb
dec
xchg
in
or
mov
or
xchg
repz
dec
pop
fld
add
sahf
push
sub
or
push
cmp
(bad)
(bad)
add
mov
mov
push
sub
xor
fdiv
jmp
xor
fdiv
retf
push
shl
xchg
jbe
sti
push
add
push
mov
gs
or
enter
mov
stos
sar
push
enter
mov
mov
xchg
mov
fwait
push
shl
daa
int
icebp
pop
cmp
xchg
shr
mov
(bad)
sbb
sti
lods
cmps
or
mov
jnp
jbe
xchg
add
or
push
scas
mov
xchg
xchg
sub
ss
xor
add
in
enter
pop
clc
addr16
dec
cmp
mov
hlt
mov
(bad)
pop
outs
hlt
stos
lods
(bad)
mov
(bad)
mov
mov
and
mov
add
xor
adc
or
add
mov
inc
clc
leave
loop
ins
in
sbb
rcl
push
imul
inc
cli
sub
xor
sbb
popf
or
add
std
lds
lds
pop
xchg
jl
add
imul
aad
outs
hlt
jns
add
loopne
xor
shl
loop
inc
retf
and
(bad)
xchg
stos
xor
or
dec
dec
jp
push
loopne
pop
stc
or
ins
(bad)
push
adc
int
scas
or
dec
add
out
cwde
inc
movs
add
cmps
lods
loop
jle
mov
in
cmp
sub
outs
jp
pop
repz
push
xor
in
dec
ror
mov
cmps
sbb
xor
cmc
add
repz
aaa
sub
xor
popa
xor
test
dec
movs
fdiv
adc
mov
fimul
shl
jmp
push
xor
dec
xor
repz
jle
mov
adc
pop
(bad)
mov
inc
lea
imul
dec
jl
popf
jl
inc
loope
jae
push
sbb
push
cmp
(bad)
daa
mov
shl
idiv
push
test
inc
cmp
cmp
dec
jecxz
hlt
dec
(bad)
shr
jno
and
jns
inc
push
xor
mov
rcl
in
sbb
add
and
sar
push
inc
(bad)
outs
(bad)
repz
cmp
das
cs
sbb
fistp
jb
sbb
or
adc
lods
add
pop
add
ficomp
idiv
lods
cmps
xor
fadd
nop
fimul
xchg
aaa
nop
aad
add
imul
hlt
repnz
xor
add
push
ds
and
movs
lea
xor
adc
jmp
sub
add
mov
sbb
stos
jae
je
es
mov
jmp
pusha
aad
push
push
int
out
enter
in
fsubr
scas
fsubr
jmp
out
lods
xor
pop
jbe
fs
cld
push
cmp
ret
test
jle
mov
inc
or
dec
mov
mov
xor
or
mov
cmp
outs
stos
test
xchg
push
pusha
jge
loop
mov
out
push
stc
xlat
mov
push
xor
call
loop
repnz
push
(bad)
adc
aas
iret
mov
cmps
and
sub
ds
imul
gs
clc
bswap
pop
adc
push
xor
ins
jmp
cwde
outs
jnp
pop
xchg
cmp
ins
dec
gs
mov
out
stos
popf
sub
fnstsw
das
fdiv
push
test
push
sub
xlat
mov
mov
stos
adc
push
pop
imul
and
outs
mov
call
cmc
xchg
jns
push
imul
cdq
mov
mov
push
xor
add
xor
(bad)
mov
out
movs
push
xchg
ds
lds
retf
outs
jnp
cli
test
add
push
sbb
jecxz
fs
fisttp
stc
push
dec
jmp
pop
pop
mov
cmp
lock
int3
jecxz
mov
(bad)
retf
dec
popa
aas
pop
jbe
mov
in
(bad)
cmp
mov
and
cld
mov
xchg
retf
fild
jle
add
sbb
jg
add
fiadd
cmp
dec
outs
mov
jl
loopne
cmp
aaa
ja
wbinvd
xor
xchg
in
xchg
sbb
mov
mov
addr16
pop
pusha
and
jo
cwde
and
mov
jo
in
pop
ficomp
in
lds
xor
lahf
pop
mov
sbb
repnz
mov
sbb
inc
xor
push
aaa
fsubr
aaa
dec
add
sbb
adc
push
(bad)
jno
fdivr
ds
mov
jns
fmul
sbb
pop
test
leave
scas
jecxz
pop
sbb
mov
jbe
sub
cmps
pushf
cmps
aam
add
or
jle
sub
mov
std
cli
adc
sub
add
mov
rol
and
sub
cmp
push
rcl
mov
outs
cmp
cmc
inc
dec
adc
and
imul
cdq
sub
push
shl
(bad)
mov
xchg
push
xchg
xchg
ss
pop
mov
sti
cld
bound
mov
sbb
stos
pop
fisttp
nop
(bad)
(bad)
loope
pop
mov
out
add
ret
sbb
pop
(bad)
hlt
and
stos
popa
jge
out
push
mov
jmp
or
in
ror
push
data16
adc
test
es
fdivr
jb
out
int3
mov
sar
push
out
or
add
ss
push
push
clc
not
add
fdivrp
adc
retf
mov
ins
clc
pop
add
frstor
daa
pop
add
ret
sbb
or
xchg
cmp
leave
call
movs
bound
dec
sub
out
xor
test
jge
mov
mov
call
aas
nop
jbe
dec
push
(bad)
loopne
mov
dec
mov
loope
jbe
in
lahf
jns
jg
sahf
xor
or
or
mov
test
xchg
sub
and
sub
adc
mov
jp
mov
lea
cmp
lods
sbb
ret
scas
clc
popf
dec
test
add
push
in
gs
ficom
aam
(bad)
xchg
cmp
dec
sti
cmc
sar
inc
ins
or
scas
mov
das
adc
aad
push
xor
call
lea
add
jo
jae
stos
stc
xor
shl
pop
repz
mov
push
pushf
inc
push
jmp
inc
ret
jmp
push
or
lods
aam
pop
xchg
adc
inc
in
push
push
inc
call
pop
jle
mov
xor
imul
and
and
aaa
adc
xor
adc
iret
adc
ret
iret
mov
imul
dec
popf
cmp
push
or
ss
imul
pusha
pop
dec
mov
sub
sub
mov
dec
or
test
fcomip
push
int
and
sub
cmp
jnp
add
mov
rol
shl
mov
xor
cmp
in
sti
int3
jl
(bad)
outs
mov
inc
adc
mov
inc
jb
push
xor
push
dec
xchg
(bad)
fistp
push
inc
xchg
ficomp
movs
adc
in
add
add
outs
cdq
mov
leave
int
stc
xchg
push
jo
jecxz
retf
xchg
test
jb
mov
xor
movs
inc
out
lods
or
push
dec
test
lods
stos
cwde
or
in
mov
arpl
je
(bad)
sbb
xor
dec
mov
cdq
push
int3
push
out
jb
in
pop
sub
std
sbb
pop
inc
sti
push
push
pop
mov
sbb
fisubr
(bad)
mov
and
shl
sub
cmp
push
fcomp
mov
ins
fwait
mov
xchg
(bad)
inc
mov
jnp
icebp
mov
xchg
mov
mov
add
(bad)
adc
and
mov
mov
or
ss
pop
adc
cmp
sub
or
ffree
sub
or
push
dec
mov
bound
jge
and
mov
xor
retf
lahf
in
xchg
xor
jecxz
daa
push
pop
fadd
sahf
xchg
pushf
cmps
scas
into
fsubrp
repnz
ja
sub
sbb
inc
ror
push
or
sbb
sub
add
ja
xor
clc
clc
inc
push
or
mov
in
mov
push
push
arpl
jns
adc
or
je
out
loopne
mov
or
std
pop
push
inc
rcl
dec
pushf
dec
fcom
mov
pusha
adc
in
retf
adc
gs
xchg
mov
jb
mov
xchg
or
stos
add
fistp
sahf
adc
xchg
sub
outs
dec
push
adc
mov
mov
mov
movs
dec
imul
and
movs
out
test
lds
(bad)
ins
ss
fbld
and
mov
mov
out
cmp
adc
(bad)
jo
scas
jecxz
stc
sbb
mov
cmp
movs
xlat
dec
jl
icebp
test
sbb
push
and
and
popf
push
adc
cli
mov
rcl
inc
sub
sub
les
rol
(bad)
jg
cmp
add
add
mov
jo
ss
inc
cmp
(bad)
sbb
push
jmp
mov
sub
mov
loopne
pop
(bad)
xor
mov
adc
sbb
push
shl
out
sub
aas
inc
or
mov
cmp
mov
test
mov
(bad)
ds
int
ret
jns
mov
jmp
retf
jne
das
jmp
mov
pop
inc
into
shl
outs
sar
jo
mov
mov
cli
out
imul
out
aam
sbb
push
mov
xchg
adc
fwait
rcl
inc
adc
dec
aaa
mov
iret
mov
jg
add
sub
pop
xchg
push
mov
push
pop
scas
mov
outs
repz
fstp
retf
ins
retf
pop
(bad)
outs
arpl
nop
add
push
leave
push
add
sti
dec
cmc
(bad)
cs
fiadd
ret
shl
push
dec
sub
jne
leave
inc
cmps
pop
sub
enter
jecxz
clc
ret
arpl
jp
xchg
cld
xor
ret
add
cmp
leave
xchg
push
push
pop
mov
cmp
jmp
cld
(bad)
(bad)
xchg
add
dec
cdq
sahf
xchg
rol
lss
call
push
push
int
sti
adc
fmul
mov
cli
fbld
jns
push
movs
or
xchg
jmp
mov
add
mov
in
les
std
aas
inc
xlat
dec
pop
inc
mov
pop
fadd
xchg
(bad)
mov
sub
and
mov
inc
sbb
pushf
mov
inc
cmps
mov
mov
test
lahf
call
hlt
stc
and
cmps
popf
(bad)
call
test
in
out
pushf
pushf
ss
fbld
arpl
cmc
int
mov
inc
retfw
and
jecxz
jb
leave
shr
out
cmp
not
xchg
jmp
jmp
fnsave
stc
out
enter
ret
imul
inc
dec
push
fild
fistp
jns
(bad)
cmp
les
mov
pop
xor
ja
leave
push
add
add
gs
xor
jne
inc
loopne
xor
add
add
inc
imul
sbb
por
mov
and
jp
lock
sbb
dec
xor
outs
and
adc
fwait
rcl
push
push
shr
mov
inc
pop
lods
push
stc
mov
scas
out
and
(bad)
pop
mov
fs
inc
std
dec
or
sbb
repz
adc
push
push
or
into
lea
mov
cli
je
ja
js
fsub
fisttp
stos
ror
mov
jbe
nop
jmp
out
ins
bound
fcmovne
fcom
ffreep
or
sub
mov
test
mov
int3
xor
ja
pop
and
cld
les
dec
mov
cld
loopne
and
iret
lahf
inc
lds
mov
rcr
cmp
inc
dec
popf
jl
or
dec
jg
inc
clc
mov
gs
in
dec
sub
mov
mov
cmps
in
test
cwde
add
call
mov
xor
imul
dec
mov
hlt
imul
std
cs
mov
test
cmp
in
inc
xor
fsub
inc
mov
jmp
push
lds
test
push
inc
jmp
pop
movs
shl
test
call
pop
sub
sub
rol
dec
int
adc
pop
xor
mov
call
retf
inc
and
adc
pop
jne
xor
or
loop
inc
mov
nop
pop
dec
mov
imul
shl
stos
out
sbb
fcmovnb
mov
adc
ds
inc
mov
push
adc
bound
nop
xchg
dec
push
xlat
lds
dec
jp
mov
pop
das
stos
in
mov
pusha
daa
pop
fsubrp
cmp
addr16
adc
fs
sysexit
ds
pop
jns
pop
sub
mov
mov
adc
and
test
int
mov
repnz
je
retf
daa
xchg
cwde
pop
jmp
adc
mov
jle
jmp
xlat
cld
std
or
call
pusha
shl
test
les
ins
test
sar
cdq
in
mov
sbb
jmp
xor
popf
fadd
int
(bad)
shr
leave
push
adc
outs
scas
scas
fcomip
cli
lahf
repz
fdivr
cmp
inc
xchg
imul
sti
adc
adc
mov
jp
stc
sbb
inc
mov
sbb
nop
inc
sbb
pushf
jnp
mov
adc
jl
(bad)
test
mov
sbb
or
sub
std
jbe
les
call
ja
mov
mov
repz
leave
dec
lea
loope
push
sbb
adc
subps
es
jae
mov
ret
into
adc
xor
aad
add
mov
pop
xor
fadd
add
pop
jnp
sub
jbe
cdq
push
cs
jle
ins
les
mov
jge
sbb
jbe
movs
dec
lahf
(bad)
movs
mov
test
mov
iret
pop
popf
jge
mul
jmp
jp
(bad)
es
shl
push
or
jo
xchg
ins
outs
retf
(bad)
cmc
xor
or
pop
sbb
xor
fisttp
mov
lea
lahf
(bad)
mov
cmps
jmp
out
add
and
popf
test
shl
adc
jae
cmp
inc
repz
pop
lds
and
out
dec
cmp
jae
xor
adc
into
popa
enter
sbb
mov
xchg
fwait
ror
outs
or
scas
push
mov
or
mov
sub
dec
xchg
push
jecxz
cdq
pop
movs
fmul
out
adc
sbb
dec
hlt
inc
cmp
xor
jge
mov
int
mov
mov
ja
mov
popa
xchg
or
retf
repnz
outs
mov
push
mov
sbb
mov
mov
cmp
loope
mov
test
ror
xchg
outs
inc
cmp
xchg
fnstsw
test
enter
or
sub
rcl
fisubr
inc
test
and
xadd
inc
clc
ja
test
push
push
nop
es
xchg
and
add
je
lods
push
mov
add
xchg
xchg
not
call
jmp
push
adc
mov
jmp
add
dec
or
nop
cmps
(bad)
(bad)
icebp
out
popa
xchg
ror
shl
aaa
fidiv
scas
sbb
jne
and
ret
xchg
xchg
cmps
add
mov
clc
cmps
popa
mov
or
aaa
test
or
dec
mov
xor
pop
fidivr
cmc
xchg
pop
ins
pop
lods
adc
stos
pop
push
cmp
movs
outs
clc
(bad)
pop
outs
ror
outs
xor
in
aas
push
retf
(bad)
jns
cli
xor
nop
movs
adc
push
sar
enter
stos
ret
ror
daa
xor
lods
std
scas
outs
xchg
int3
loope
jecxz
push
mov
and
sub
mov
cmp
call
mov
adc
pop
shl
cs
loope
ss
outs
daa
sar
(bad)
in
aaa
repz
adc
fdiv
jp
aam
es
mov
and
xor
xor
neg
sub
mov
sti
or
aad
fidiv
scas
call
pop
or
jb
add
jne
xchg
fstp
hlt
fist
lods
pop
push
mov
imul
ret
add
sbb
dec
cmp
hlt
mov
mov
lock
sbb
enter
in
adc
pop
aad
and
and
push
outs
(bad)
jg
sub
je
sar
inc
scas
out
lock
pavgb
cmp
popa
and
pop
dec
outs
dec
inc
push
in
into
cs
cmps
call
cld
nop
int3
xchg
and
cmp
test
pop
ret
pop
addr16
ja
sub
pop
jmp
addr16
and
out
in
push
inc
jecxz
pop
arpl
mov
lock
mov
inc
xchg
(bad)
clc
jo
rcl
jg
out
fistp
sub
dec
or
fldenv
jae
imul
mov
ins
push
sbb
clc
pusha
es
xor
and
push
aaa
(bad)
dec
push
sbb
fidiv
fcmovb
dec
pushf
push
js
sbb
xchg
dec
stc
xor
dec
ins
clc
and
and
jecxz
mov
mov
popf
and
movs
xchg
movs
dec
ror
mov
shl
pop
xor
pop
aad
mov
(bad)
sub
inc
jmp
pop
xchg
stc
or
cli
mov
iret
lods
into
mov
mov
sbb
push
(bad)
mov
stos
or
hlt
pop
retf
mov
test
mov
add
test
imul
add
cmc
and
pop
scas
add
sub
mov
add
adc
test
mov
dec
inc
push
pop
inc
adc
(bad)
(bad)
xchg
and
movs
into
adc
(bad)
add
or
mov
pop
sti
setp
test
nop
mov
xor
cmpxchg
xor
cmp
sub
cmc
retf
inc
ds
adc
sbb
inc
mov
add
ds
xor
(bad)
(bad)
fstp
mov
fstp
div
dec
jmp
mov
icebp
loopne
dec
test
dec
aaa
out
sub
jl
das
sub
js
das
xor
mov
fild
or
hlt
and
jo
(bad)
rol
mov
sbb
sub
shr
push
(bad)
sub
repz
fld
mov
pop
sbb
adc
jle
aam
inc
mov
movs
jp
cmp
sub
dec
cmps
jl
into
or
mov
lock
xchg
push
mov
lods
je
(bad)
call
sub
mov
daa
inc
fs
pusha
sbb
mov
ins
sub
(bad)
or
cdq
pop
jle
gs
and
mov
sbb
(bad)
jns
cdq
imul
inc
cmc
bound
dec
push
jge
dec
lods
pop
or
jge
adc
cmp
add
in
call
scas
jnp
data16
and
(bad)
pop
xchg
retf
mov
sbb
cmc
jp
nop
sub
aas
retf
or
pop
imul
add
xor
sbb
jmp
fimul
(bad)
pop
add
stc
xor
imul
hlt
jbe
mov
xchg
inc
movs
jb
push
leave
mov
or
pop
dec
cli
out
sub
xchg
aaa
inc
stc
out
jl
inc
(bad)
mov
inc
aad
xchg
outs
or
inc
loope
pop
(bad)
aam
xchg
inc
push
int
retf
push
and
xor
ret
scas
(bad)
fcom
(bad)
adc
mov
lods
test
and
shl
fs
popa
pop
push
jne
adc
xchg
pop
dec
nop
add
and
xor
fild
mov
out
add
mov
test
push
test
aas
adc
leave
in
dec
sub
out
sti
fcom
lahf
pop
call
and
sbb
(bad)
jecxz
cmps
enter
adc
add
cld
sbb
mov
mov
call
pop
push
xor
(bad)
jno
and
ins
fist
cwde
mov
pop
fcomp
pusha
hlt
xchg
lods
xor
sub
ins
rcl
std
out
sti
imul
add
movs
in
cmp
dec
es
(bad)
xor
mov
or
push
sbb
cmp
inc
sahf
push
xor
ins
shl
ins
jp
pushf
shl
scas
push
arpl
mov
jg
pop
jmp
inc
popf
shl
stos
mov
clc
imul
loope
mov
mov
xchg
out
popf
mov
std
fwait
jns
pushf
push
mov
cmc
mov
push
inc
sub
jae
jbe
jno
dec
jp
lods
pop
cmps
xchg
into
std
mov
in
mov
push
and
scas
push
push
imul
add
inc
mov
inc
push
iret
mov
and
dec
push
aam
cmp
shr
mov
pusha
test
push
int
inc
sub
jl
inc
iret
xor
mov
mov
xchg
enter
adc
jmp
outs
aas
jns
fisubr
mov
or
jle
add
mov
gs
and
and
push
retf
cmps
sub
shl
lods
fsub
add
popf
cmovg
jp
xchg
in
imul
xchg
call
dec
les
jmp
fsqrt
out
fsub
mov
add
or
lods
int
fcmovnbe
retf
add
lods
fst
out
ins
fldenv
ret
ret
push
jbe
xchg
nop
inc
es
or
cld
arpl
nop
add
pushf
mov
mov
xor
xor
mov
fisttp
popa
sbb
dec
out
jns
inc
repz
xchg
es
out
ret
mov
loope
mov
and
and
aas
js
cmps
adc
dec
lods
rol
xchg
mov
push
ins
mov
js
sbb
pop
xor
push
fs
jne
clc
sub
fadd
arpl
inc
fnstcw
push
jno
mov
mov
mov
xchg
push
or
push
test
scas
rcr
xchg
loope
js
adc
aad
hlt
out
gs
shl
dec
stos
repnz
inc
cld
mov
loop
add
or
jno
fld
in
cmp
inc
(bad)
xor
xchg
jp
test
and
in
sbb
xchg
pop
or
mov
inc
inc
std
or
cmovle
adc
and
jecxz
movs
push
loopne
fmul
jne
lods
pop
(bad)
fistp
inc
cmps
cvtdq2ps
sbb
push
loope
add
xchg
xchg
pop
mov
mov
inc
das
or
js
add
xchg
stos
sub
es
int3
cmps
pop
push
pop
stos
sub
xchg
add
and
mov
outs
mov
dec
aam
sti
sbb
add
retf
outs
(bad)
jnp
mul
imul
test
fst
inc
xchg
jmp
call
dec
cdq
fld
aaa
or
ror
push
call
and
pop
ja
aad
pop
hlt
mov
lods
xchg
pop
push
jmp
outs
jmp
mov
pop
mov
xchg
lds
or
xchg
or
das
jns
ds
stos
xor
ret
xchg
xchg
(bad)
fild
and
xor
jp
es
scas
into
js
dec
ret
push
(bad)
retf
push
mov
push
sar
adc
clc
imul
xchg
mov
scas
(bad)
in
aas
out
fisttp
ds
jl
add
mov
lods
dec
sbb
pop
pop
movs
push
add
cmc
xchg
out
aad
cmps
push
push
mov
loopne
push
clc
cmps
add
(bad)
sbb
xchg
mov
cmp
adc
xchg
pop
xor
das
dec
out
mov
sbb
xor
jns
dec
mov
push
and
xor
sbb
in
mov
xor
retf
or
out
push
mov
ins
mov
and
es
add
cmps
iret
aaa
fdivr
push
movs
popf
jns
inc
mov
mov
jae
addr16
pop
push
dec
pop
mov
mov
cs
or
jle
pusha
dec
sahf
out
outs
movs
clc
sti
adc
xchg
jmp
xchg
jae
out
push
fsubr
cmps
scas
sbb
outs
pop
pop
loope
xchg
inc
dec
es
popa
mov
xor
push
call
add
mov
ins
mov
xor
sub
dec
sar
in
lods
push
add
scas
bnd
clc
test
add
push
out
xlat
xor
and
lds
push
rcr
sahf
in
(bad)
les
lods
cmp
xchg
sbb
fiadd
arpl
in
jmp
ins
jecxz
loop
ficomp
dec
(bad)
repz
pop
mov
hlt
rcr
vmovntps
inc
inc
cmc
retf
(bad)
int3
(bad)
icebp
push
js
xchg
inc
loope
mov
fidiv
push
lock
out
popf
xor
and
jb
outs
inc
adc
inc
(bad)
idiv
shl
(bad)
pushfw
xchg
ins
frstor
sub
in
dec
mov
adc
jge
mov
jne
icebp
cmps
lock
std
cmp
ins
mov
mov
dec
sub
mov
lds
mov
mov
jecxz
in
dec
ins
mov
or
push
shl
push
xor
repz
pop
xor
sub
cmp
xor
jge
mov
popf
push
add
movs
into
mov
mov
std
push
retf
jp
test
cmp
scas
dec
jmp
aad
and
sub
inc
jmp
std
push
pop
rcl
dec
xor
(bad)
lea
ins
adc
sbb
jp
mov
jno
shl
xchg
test
gs
mov
add
mov
push
or
arpl
push
mov
sbb
cmps
push
pop
pop
xchg
int3
inc
adc
push
lea
jno
sub
xor
(bad)
jmp
or
aaa
push
mov
cmp
pop
call
sub
into
pop
and
pop
add
mov
mov
sub
xchg
movs
ret
cld
std
(bad)
pop
jnp
pop
sub
loop
mov
xlat
jns
je
ins
pop
inc
stc
xlat
je
push
inc
retf
clc
adc
cmp
pop
dec
stos
add
add
js
aaa
je
pop
push
movs
sub
cmp
or
xchg
mov
cdq
fbld
mov
lock
fwait
addr16
lods
jnp
ficomp
push
inc
jb
scas
and
adc
mov
bound
mov
cmps
fdiv
cdq
push
lds
out
pop
jnp
mov
in
fwait
sahf
sbb
pop
pop
rcr
stos
addr16
outs
(bad)
test
fs
fadd
hlt
mov
adc
mov
jb
sbb
jno
shl
test
icebp
ins
push
xchg
int3
and
ins
nop
cmp
mov
adc
lea
push
xlat
sbb
inc
je
xor
sar
(bad)
jl
sub
push
sub
in
aad
push
jmp
rcr
inc
xchg
mov
pop
cmps
repnz
dec
daa
dec
cmp
push
int
das
retf
sbb
add
popa
or
push
mov
in
dec
pop
xchg
ror
mov
fldenv
nop
loop
(bad)
sub
pop
pop
push
xor
ret
push
add
push
lods
sub
sbb
icebp
inc
pop
mov
jne
jmp
(bad)
jmp
cmp
jl
sbb
shr
dec
sti
lock
add
fdivr
jo
idiv
retf
jge
xchg
xchg
xchg
pop
push
push
and
ins
(bad)
retf
loopne
mov
cwde
scas
add
and
hlt
repnz
mov
pop
aaa
repnz
xchg
lahf
cmp
repnz
les
xchg
adc
stos
xor
add
dec
test
pop
xor
sbb
shl
(bad)
mov
sub
add
cmps
inc
mov
mov
xor
daa
pop
outs
daa
jmp
and
push
xor
inc
sbb
push
int3
sbb
(bad)
and
pop
sub
xchg
sti
aaa
sbb
js
js
test
jbe
cli
cmp
sbb
cwde
push
aad
push
pop
mov
adc
jns
xor
repz
add
dec
ret
in
outs
push
mov
int3
jmp
jl
push
push
lahf
or
test
fidivr
in
fstp
jmp
inc
push
arpl
fs
or
or
dec
aad
sub
das
add
jl
out
cld
in
les
int3
aaa
je
call
sbb
sbb
pop
push
sbb
in
test
cmp
xchg
scas
xchg
(bad)
cwde
jecxz
daa
cs
adc
mov
mov
lods
outs
mov
or
jb
add
xor
(bad)
pop
and
cmp
mov
int
stos
clc
cmp
imul
inc
movs
imul
ins
pop
jbe
loop
in
sbb
mov
push
mov
in
xchg
or
test
lahf
mov
movs
mov
or
shl
inc
inc
inc
mov
(bad)
aad
dec
and
retf
gs
xchg
(bad)
jno
push
enter
xor
popf
sub
sub
mov
mov
rcr
cli
cmps
pop
aaa
ins
push
cwde
adc
sti
jb
(bad)
fsubr
pop
mov
inc
in
fldl2e
shl
push
sbb
loopne
jle
or
xor
cmp
sbb
clc
and
mov
pushf
cmp
pop
popa
stos
cmp
sbb
jmp
lds
sbb
shr
nop
bound
and
mov
jb
rol
rol
ins
inc
int
data16
add
fldcw
add
or
cmp
fcomi
loopne
(bad)
adc
sar
mov
jo
jae
push
daa
cmps
es
movs
cmps
pop
cmp
scas
mov
or
sub
mov
mov
call
les
push
pop
retf
push
ror
js
or
mov
pop
xor
rol
add
add
ss
xlat
cs
cmp
cld
sub
ins
cmp
lds
jle
gs
dec
mov
or
mov
jnp
adc
push
xchg
into
jle
loop
push
fld
or
xchg
retf
xchg
adc
mul
mov
sbb
aas
lods
and
push
mov
in
ret
cdq
inc
xchg
or
and
mov
push
xchg
mov
mov
call
dec
outs
xor
or
mov
pop
out
xchg
sti
out
mov
ja
retf
add
icebp
xor
mov
nop
pop
push
dec
adc
mov
std
or
cmp
aam
mov
and
xchg
retf
mov
cmc
mov
sti
jl
jge
call
pop
jecxz
fucompp
mov
lock
pop
push
int3
and
rol
jle
push
sti
or
push
jge
test
popa
dec
dec
fisub
push
int
mov
mov
js
xchg
sbb
or
(bad)
cdq
cli
push
pop
xchg
jns
dec
or
jle
push
cmp
icebp
aaa
inc
mov
les
clc
stos
xchg
pop
out
pop
jbe
xor
xlat
mov
call
xor
nop
clc
jo
add
xchg
sub
push
xchg
mov
retf
mov
and
push
and
mov
xor
test
(bad)
outs
push
loopne
jno
call
inc
test
mov
ins
aas
mov
inc
frstor
xor
je
pop
out
cmp
mov
call
mov
rcl
xor
or
xchg
push
mov
xor
mov
xchg
(bad)
pop
cli
imul
in
xchg
fs
cmps
addr16
xchg
mov
inc
scas
mov
sub
sub
sub
cdq
popf
mov
retf
push
inc
(bad)
out
ds
out
push
das
cmp
jbe
ror
or
js
sbb
stc
jecxz
test
mov
jmp
mov
sti
dec
test
bound
xchg
test
xor
nop
jnp
out
push
cld
out
in
(bad)
aad
mov
push
jl
xor
lods
xchg
mov
std
inc
int3
jle
arpl
jl
jmp
jnp
sbb
dec
xchg
add
adc
mov
fidiv
ds
add
repz
out
mov
add
je
(bad)
cs
mov
in
cwde
inc
mov
stos
gs
mov
fisttp
xor
sub
es
shl
dec
retf
jmp
jns
test
mov
sbb
out
dec
lods
loope
in
push
cmps
xchg
dec
rcl
outs
je
mov
outs
cmps
xor
arpl
sbb
es
xchg
xchg
pop
sub
out
jbe
lea
popa
loopne
xlat
inc
clc
ds
inc
adc
pop
into
inc
mov
movs
aaa
jbe
stos
cwde
inc
xchg
in
nop
and
data16
xor
inc
push
xor
rcl
sbb
out
outs
lea
aad
js
inc
add
sbb
movs
xlat
(bad)
out
(bad)
mov
out
les
imul
and
mov
push
push
and
fsubrp
rcl
leave
mov
jge
es
cld
mov
daa
xor
xor
mov
scas
jno
dec
int3
lfs
jbe
outs
popf
sbb
test
add
jne
jge
xor
inc
mov
push
ror
fisub
mov
ficom
sbb
push
sub
daa
sbb
sbb
clc
dec
retf
cmp
dec
inc
in
push
sub
jo
cdq
adc
lods
fmulp
popa
repnz
add
add
repz
cwde
stos
movs
outs
loopne
aaa
mov
pop
pop
dec
jno
(bad)
mov
xchg
sbb
movs
daa
pop
fcom
inc
cmps
jb
push
pop
(bad)
std
mov
xor
push
cmp
inc
jmp
mov
and
in
mov
add
fild
cmp
push
aas
leave
not
pop
movs
imul
inc
mul
rol
fwait
mov
loope
cmc
mov
in
pop
int3
fld
cmp
pop
ficom
mov
jo
add
sahf
or
or
push
out
jecxz
xchg
in
inc
inc
in
dec
cdq
mov
scas
repz
stc
jno
fiadd
ins
ret
fcom
cmp
or
inc
stos
inc
add
daa
cmp
fs
std
ret
push
mov
popa
mov
or
mov
rcl
mov
outs
cli
repnz
mov
cmp
mov
std
fisttp
xor
fs
xchg
pusha
in
data16
inc
sahf
stc
cmp
push
jle
imul
into
mov
push
sub
dec
mov
or
dec
and
retf
dec
pop
xchg
or
add
inc
mov
mov
mov
dec
aaa
gs
fs
scas
push
sbb
or
stos
ss
sub
in
push
add
mov
mov
wbinvd
pop
adc
js
push
test
mov
pop
mov
out
and
and
pop
in
mov
add
loop
jge
xor
push
cld
xchg
mov
add
or
pop
out
bound
mov
pop
fmul
dec
sbb
xor
cld
clc
mov
xor
idiv
fwait
pop
in
es
sti
sti
sub
jo
sar
cmp
cld
cli
stos
push
lods
dec
jle
cdq
mov
aam
(bad)
stc
test
stos
sahf
mov
ss
sti
loope
movs
pop
xlat
inc
or
in
stos
pop
and
sbb
jmp
adc
xlat
push
movs
sub
mov
mov
cdq
or
hlt
mov
out
leave
adc
shr
addr16
jp
sbb
xor
mov
push
push
out
test
dec
cdq
sub
cmp
pushf
push
xchg
pushf
int3
dec
ds
out
jne
icebp
ja
jno
cmp
lods
xchg
xor
fild
xor
es
mov
cs
pop
fistp
add
mov
mov
xor
dec
and
aaa
dec
pop
or
cmp
sti
pop
jns
push
jge
test
jmp
into
in
xor
push
enter
sub
(bad)
test
mov
mov
fmul
xchg
(bad)
shr
aas
or
rcr
inc
jle
aas
xor
adc
test
neg
sbb
sbb
mov
cmp
xor
mov
inc
call
or
pop
mov
iret
dec
jo
adc
cs
fcomip
rol
cli
fdivr
iret
xor
sti
add
std
and
cmps
data16
dec
push
aas
jbe
add
outs
mov
jle
ror
aam
dec
cmp
mov
jns
xchg
xchg
mov
(bad)
or
int3
fs
js
inc
lods
pop
adc
(bad)
mov
inc
sbb
aaa
lea
ss
dec
stos
xor
sub
sbb
stos
into
adc
jmp
fdivr
ret
scas
int
push
scas
enter
xor
fstp
in
push
push
push
jbe
jns
es
pop
js
xchg
scas
dec
dec
mov
call
ss
cmp
pop
sbb
sub
bound
add
movs
das
cmp
ins
arpl
mov
sbb
in
mov
enter
sahf
xchg
repnz
sbb
cmp
jo
addr16
clc
retf
hlt
data16
ror
mov
mov
repnz
mov
bound
fs
xor
fldenv
scas
jmp
stos
outs
test
sub
daa
sub
mov
cwde
mov
iret
jns
out
cmp
cmp
test
data16
xabort
pop
mov
daa
inc
mov
rcl
fnstsw
mov
push
xchg
je
test
or
cmps
adc
aam
mov
(bad)
fld
sbb
cwde
xchg
out
jne
inc
leave
add
ins
aam
les
adc
mov
push
mov
dec
mov
pop
pop
jmp
jb
sbb
ja
call
scas
ficom
repnz
outs
std
mov
sahf
jl
xchg
mov
popf
jp
mov
adc
sbb
xchg
mov
int3
out
(bad)
pusha
ficom
jns
inc
xor
int
stos
loopne
pushf
push
sub
cmp
sub
aam
mov
aas
pop
xor
hlt
and
adc
jg
aas
cmps
retf
adc
mov
lahf
loope
xor
xor
inc
popf
(bad)
pop
ja
sbb
jecxz
mov
cwde
fwait
xchg
and
sub
or
jl
ficomp
jecxz
inc
aad
add
xchg
jno
dec
scas
adc
xor
xor
imul
stc
cmp
sbb
iret
fwait
icebp
push
jns
adc
hlt
dec
aad
mov
cmp
fwait
adc
lahf
les
sar
ret
test
loopne
out
and
stos
mov
jmp
xor
jecxz
mov
inc
sub
push
dec
add
sub
js
mov
ror
inc
xchg
push
rcl
out
pop
fnstsw
mov
mov
jg
aad
movs
lods
je
jmp
mov
inc
push
inc
jg
sahf
sub
iret
stos
mov
adc
inc
push
in
sbb
ins
daa
sbb
fs
test
leave
mov
imul
pop
fdiv
push
pushf
call
cwde
pop
jns
inc
mov
jmp
sbb
cmp
add
or
and
mov
shr
cmp
ret
jbe
xor
loope
pop
rep
ret
adc
jae
cdq
out
cmp
cmps
das
jae
test
mov
inc
fs
lea
test
add
jnp
mov
inc
cmp
in
fs
dec
adc
push
jle
popf
adc
ins
xchg
lahf
mov
or
fsubr
pop
in
sbb
xor
add
outs
dec
jg
out
repnz
jecxz
sbb
ins
cld
adc
rol
mov
add
push
test
imul
lahf
push
test
inc
in
stos
xor
xchg
push
loop
adc
stos
add
inc
xchg
jne
int3
add
xchg
adc
pop
je
xchg
xchg
out
adc
je
jne
pushf
test
fisttp
(bad)
sahf
mov
pop
xor
sub
lods
push
adc
enter
cs
mov
fidivr
adc
jg
jb
outs
mov
fldenv
push
stos
fnstenv
je
test
add
xor
popf
fnstsw
mov
test
leave
inc
mov
or
jnp
ret
rcr
sub
cmp
icebp
mov
jmp
sbb
xchg
jmp
mov
sbb
cs
outs
dec
icebp
jns
sbb
add
bound
jecxz
sbb
clc
sti
pop
xchg
sub
ret
popa
xchg
out
cmp
jo
icebp
out
sbb
push
push
pop
sbb
and
imul
out
cmp
add
xchg
cmp
rcr
xchg
pop
or
shl
mov
test
into
retf
sub
dec
inc
js
retf
loope
or
inc
mov
jmp
retf
jns
pcmpgtw
dec
cmp
call
pop
add
sbb
jp
xchg
fidivr
int3
xchg
jb
shl
and
call
cdq
lea
movs
rcl
dec
int3
(bad)
adc
retf
or
out
(bad)
fsub
nop
mov
into
cmp
sub
push
xor
sbb
add
xor
inc
sbb
mov
sbb
cmc
mov
cdq
outs
mov
cmp
xchg
icebp
xor
lds
sbb
enter
mov
cmp
sbb
ja
fnstcw
jo
out
dec
repz
sbb
add
stc
inc
jne
mov
sahf
daa
or
add
in
out
fst
sbb
jb
mov
test
push
ins
lds
jae
jg
push
in
outs
xor
sbb
mov
ja
add
gs
mov
sbb
mov
sahf
dec
bnd
push
mov
and
pmaxsw
pop
movs
div
pop
repnz
mov
jno
or
cld
clc
push
nop
jecxz
inc
sbb
pop
stos
add
bound
jecxz
xor
cmp
xor
movs
fild
sar
jmp
retf
leave
cwde
mov
icebp
aas
push
das
jae
adc
test
mov
fisub
pop
push
jle
repnz
xchg
and
stos
jl
xchg
lahf
jle
dec
jp
lods
xchg
xchg
icebp
add
pop
das
(bad)
clc
jo
xor
dec
scas
mov
iret
ret
push
pop
lock
js
outs
imul
sub
outs
data16
loop
loopne
mov
(bad)
sub
clc
pop
ss
mov
mov
xchg
mov
pop
xchg
and
jnp
jg
cmp
aaa
ret
rol
jns
push
jp
xor
fisubr
add
mov
adc
lods
cdq
mov
mov
ret
cwde
push
mov
dec
cmp
pushf
adc
jecxz
xlat
hlt
add
test
jmp
out
lds
push
fidivr
pusha
and
std
push
mov
fld
adc
dec
rol
push
mov
ins
push
movs
loope
pop
push
or
mov
outs
fstp
(bad)
push
std
sub
jnp
sub
mov
xchg
les
inc
xchg
dec
xchg
call
or
pop
ja
mov
push
inc
cmc
sbb
jns
mov
(bad)
mov
outs
movs
loop
mov
push
pusha
add
leave
test
mov
mov
shl
ins
fwait
in
or
loope
pop
cmp
jno
jmp
xchg
xlat
iret
push
cmp
add
les
cmps
test
xlat
jle
cmp
dec
cmp
ret
mov
imul
popa
pop
mov
push
in
pop
xchg
fldenv
sub
sbb
cmp
inc
sti
xor
loop
outs
jno
sbb
out
in
out
jne
aam
push
cmp
cli
or
sub
fbstp
xchg
xchg
imul
mov
ror
xchg
rcl
aas
div
aas
in
add
mov
add
mov
dec
mov
sbb
xchg
fimul
stos
cmp
lahf
inc
pop
nop
mov
adc
pop
cmps
and
jmp
out
and
mov
sub
repz
xor
mov
sbb
push
sbb
ret
cdq
jo
cld
je
ret
jmp
rcr
retf
mov
add
push
jge
jmp
pushf
mov
aas
sbb
bound
retf
sbb
in
cwde
sub
jecxz
gs
fadd
push
xor
mov
fsub
adc
inc
inc
or
test
not
cmp
fsubr
jb
stos
jmp
pop
cmp
aad
cmps
push
mov
data16
cli
in
sbb
push
push
aam
jecxz
mov
pop
jle
mov
mov
stos
mov
pushf
shl
aad
xchg
es
enter
and
add
jmp
cli
jne
outs
in
sub
stc
iret
clc
push
pusha
scas
dec
jbe
dec
push
outs
cs
adc
mov
pop
inc
test
scas
retf
sbb
push
add
test
sbb
and
pop
repnz
cmp
jl
loop
loopne
dec
or
jge
xchg
jne
pop
(bad)
jbe
dec
dec
pop
push
xor
(bad)
je
repnz
xor
dec
push
cmp
rcr
xlat
mov
adc
pop
test
mov
out
ds
mov
mul
or
sti
push
aaa
jp
fs
imul
(bad)
or
or
ja
js
sbb
add
mov
movs
in
aad
sbb
add
or
leave
sar
adc
cmp
sbb
popa
repnz
cwde
cdq
fnstcw
cld
int
stos
ins
outs
inc
jp
(bad)
popa
pop
xor
sahf
cmp
les
mov
xchg
retf
or
adc
mov
fiadd
(bad)
out
xchg
cdq
movs
lods
imul
stos
pop
xor
mov
push
(bad)
pop
mov
push
adc
fldcw
mov
cmps
xor
adc
int3
sbb
jp
dec
dec
mov
nop
test
jp
inc
div
inc
push
shl
push
sbb
push
jle
test
sahf
inc
jmp
fwait
xchg
nop
pop
loop
pushf
sti
xchg
mov
(bad)
jmp
add
jge
xor
hlt
xchg
adc
mov
add
jp
mov
adc
call
sub
push
sbb
ins
sbb
loope
cmp
sub
div
pop
and
sbb
jo
ds
arpl
add
hlt
(bad)
jb
icebp
sub
mov
jae
xor
(bad)
mov
test
jmp
ret
retf
mov
pop
sub
les
test
pop
cli
stos
and
and
lea
stos
in
mov
fisttp
cmp
loopne
std
cld
xchg
je
retf
cmp
daa
fistp
movs
sub
outs
jmp
aam
mov
dec
out
std
mov
xchg
out
jge
mov
out
(bad)
xor
nop
fs
or
push
sub
jbe
call
pop
xchg
sbb
out
pop
jno
retf
inc
xchg
addr16
(bad)
lods
out
adc
sub
jno
scas
iret
das
inc
(bad)
or
mov
fld
int
mov
rcl
das
xchg
(bad)
mov
dec
add
mov
out
push
aas
jo
xchg
inc
movups
pop
out
xchg
push
dec
iret
xor
mov
dec
add
daa
jmp
sub
xchg
scas
bound
aas
adc
inc
(bad)
shl
ffree
ret
in
icebp
out
cmp
add
outs
inc
or
mov
or
sbb
dec
nop
imul
das
xchg
inc
ja
pop
inc
cmp
(bad)
cmp
pop
ins
fadd
(bad)
(bad)
inc
pshufw
fs
icebp
pusha
rcl
pop
rcr
xor
mul
lods
xchg
cmp
lods
dec
lahf
adc
aad
out
aas
or
cmp
push
leave
cld
(bad)
pushf
test
xchg
sar
sbb
pop
ret
shr
mov
mov
add
dec
mov
jp
jecxz
test
clc
fisttp
(bad)
add
push
addr16
xor
jmp
or
jp
dec
fs
sti
cmps
repnz
add
stos
adc
cmps
addr16
popa
aas
lock
mov
add
dec
mov
jmp
add
in
ret
ss
jmp
ins
aad
mov
mov
mov
sub
in
and
xchg
dec
xor
push
sbb
aam
cmp
jmp
xchg
fcom
sbb
inc
mov
dec
(bad)
cmp
and
lea
mov
dec
sbb
push
xchg
push
dec
xor
ret
lods
and
stc
hlt
pop
retf
fidivr
adc
and
xchg
inc
mov
lods
in
xchg
pushf
lods
fld
(bad)
push
addr16
mov
mov
scas
xor
nop
data16
lahf
cmp
push
xchg
adc
push
push
test
mov
(bad)
pushf
in
xchg
test
mov
les
not
jle
mov
sar
dec
xor
inc
sub
test
or
inc
ficomp
dec
out
cmp
add
scas
call
std
jne
nop
push
pop
xlat
addr16
(bad)
scas
cmc
(bad)
out
add
xchg
add
add
mov
cmps
cli
nop
icebp
dec
xchg
jmp
sub
cmp
stc
or
xchg
dec
outs
out
(bad)
and
mov
sub
std
mov
outs
jmp
xor
add
or
inc
rol
(bad)
scas
aaa
ja
(bad)
jmp
mov
cld
jmp
mov
dec
add
data16
mov
push
jecxz
js
xchg
data16
pushf
sar
mov
adc
add
cmp
xor
(bad)
popa
cmp
push
xchg
pushf
ret
push
or
add
stc
loop
pushf
mov
sub
mov
mov
cdq
popa
mov
inc
in
mov
sar
jp
into
mov
clc
(bad)
pop
push
inc
je
xor
daa
loopne
bound
test
jmp
ins
mov
mov
retf
jae
xor
stc
out
pop
arpl
cmps
add
call
pop
sbb
iret
mov
mov
popf
sub
jb
je
clc
jle
mov
(bad)
push
push
adc
mul
bnd
cmps
dec
mov
dec
ret
push
nop
(bad)
sar
push
adc
test
addr16
lock
jecxz
push
icebp
and
in
adc
mov
cmp
fs
add
mov
pop
mov
movs
ret
sub
and
add
jmp
xor
in
test
mov
iret
lds
retf
stc
clc
loop
(bad)
arpl
dec
sbb
push
mov
adc
outs
lahf
xchg
nop
out
fnstcw
adc
lea
mov
push
mov
aam
in
mov
je
inc
sbb
int
mov
xchg
jne
push
arpl
(bad)
iret
shr
test
inc
xlat
ss
mov
pusha
cmps
imul
stc
je
movs
test
add
ss
fisubr
lock
mov
fnstenv
adc
adc
out
ret
xor
pushf
sar
fstp
cdq
loop
clc
iret
mov
mov
idiv
sar
pop
pop
mov
push
out
adc
mov
jecxz
adc
inc
cmp
sbb
mov
sbb
popa
cmp
out
cmp
cmps
movs
arpl
inc
icebp
xor
outs
mov
scas
sub
inc
retf
(bad)
imul
into
sbb
sahf
vpacksswb
cwde
test
in
cmp
and
push
sub
sbb
ss
ret
lock
cmps
jmp
clc
das
adc
cmp
sub
mov
add
push
push
pushf
mov
cli
adc
cli
movs
daa
cmp
jb
in
pusha
gs
sub
xchg
push
repz
xor
sti
push
pop
mov
push
sahf
xchg
sbb
dec
cmps
inc
push
xor
aas
xor
xchg
dec
jb
pushf
push
sub
sbb
pop
sbb
out
mov
pop
xlat
sub
sti
bound
std
aas
xlat
rol
(bad)
pop
add
(bad)
inc
inc
test
add
lods
mov
shr
test
xor
mov
and
daa
mov
jbe
xchg
push
adc
xchg
mov
ret
pusha
add
test
xadd
int
pusha
jmp
mov
push
lods
pop
retf
movs
dec
mov
(bad)
jge
call
addr16
add
outs
in
dec
les
pop
in
shl
je
or
int3
(bad)
in
inc
xchg
je
out
adc
push
out
out
sti
cmc
ret
rcr
pop
sbb
jae
outs
xchg
mov
sub
cmp
pusha
mov
xchg
and
movs
(bad)
mov
in
xor
inc
adc
dec
nop
adc
js
and
fs
fstp
push
repnz
gs
ja
mov
jle
mov
pop
pop
ret
mov
xchg
ins
ins
mov
and
nop
pop
mov
mov
cmps
(bad)
(bad)
mov
aas
push
int
dec
add
adc
push
sub
jp
es
add
xchg
jg
dec
jg
adc
mov
(bad)
jmp
sbb
lahf
enter
push
push
cmp
iret
in
fistp
mov
mov
adc
inc
pop
xchg
push
pmullw
push
pop
sti
xchg
sbb
rcr
mov
out
outs
retf
in
(bad)
sub
aad
sahf
pop
call
xchg
jp
cmp
jns
xchg
arpl
lahf
mov
cmp
das
call
in
les
jmp
mov
mov
fs
and
inc
das
add
enter
or
stos
pop
inc
pop
pop
leave
cli
iret
(bad)
aas
sahf
leave
stos
jb
int3
mov
push
pop
mov
out
mov
jo
bnd
sub
fwait
or
jle
popa
je
pop
push
scas
ins
jb
xor
or
int3
cmpxchg
pop
retf
inc
nop
aas
mov
jmp
mov
out
int
lahf
shr
loope
jle
js
pusha
int
jge
mov
scas
and
xchg
fsub
sbb
sub
jbe
sub
xor
dec
xchg
xchg
mov
(bad)
div
jle
push
xor
pusha
sbb
push
jle
aas
add
cmp
jmp
pop
pop
js
pop
adc
mov
test
push
xor
inc
xchg
mov
push
shl
push
das
adc
xor
cmp
inc
nop
jg
nop
sahf
rol
lahf
cs
arpl
bound
(bad)
lods
xor
arpl
mov
dec
mov
cmp
xor
cmp
dec
jg
cdq
sar
mov
fcomp
jno
into
jmp
xlat
add
add
dec
add
pop
idiv
imul
leave
sbb
ret
(bad)
push
pop
pusha
jnp
push
jmp
jo
sbb
je
jbe
pop
jmp
dec
mov
xchg
jp
xchg
aaa
fnstenv
cli
sar
xor
xor
xchg
out
ins
xor
pusha
and
or
or
mov
mov
in
test
jp
cmp
ins
fiadd
push
pop
sbb
mov
and
cmp
jo
ja
rol
test
rcl
push
push
cmp
fimul
dec
jb
mov
bound
scas
pop
dec
int
mov
mov
adc
cmp
push
push
(bad)
in
cmp
add
scas
loop
inc
shl
jb
xor
mov
imul
shl
lea
test
push
cmps
aam
mov
test
ds
add
sub
pushf
inc
rol
mov
into
push
pop
and
xchg
jl
aas
push
and
pop
pop
ds
(bad)
mov
inc
mov
mov
mov
inc
std
fcomip
shl
xchg
sbb
and
imul
pusha
lahf
push
mov
outs
ja
sub
dec
adc
xlat
cs
mov
mov
sbb
fisttp
neg
or
imul
movs
sbb
loopne
xchg
mov
les
call
cli
das
cmp
scas
push
outs
nop
add
mov
movs
pushf
cmps
and
fst
fisubr
ds
xchg
mov
and
in
test
or
xchg
sti
ret
cli
iret
hlt
and
push
push
pop
push
lods
fs
jge
inc
xor
pop
xor
cmp
pushf
retf
stos
xchg
lds
cmp
and
into
xchg
(bad)
ss
dec
(bad)
adc
test
mov
jno
mov
aad
adc
xor
push
test
mov
aam
push
out
adc
cmp
cmc
adc
cmps
stc
xchg
aad
cli
cmp
(bad)
mov
(bad)
jns
mov
mov
jg
leave
push
cmps
call
jns
mov
sahf
sbb
cdq
sbb
movs
mov
enter
out
pop
add
dec
add
cmp
inc
movs
rcl
and
xchg
fwait
sub
mov
cmp
data16
repnz
out
push
sub
xchg
push
jbe
add
push
retf
dec
add
lea
pusha
adc
seto
add
add
fwait
les
outs
mov
jmp
mov
push
stos
cmp
repnz
pushf
add
outs
xor
mov
test
push
fcompp
es
sub
bound
or
jae
xchg
mov
mov
push
or
mov
mov
js
cwde
push
aas
sub
stc
mov
mov
out
lahf
mov
dec
inc
div
stos
mov
push
cmp
xlat
xchg
inc
cmp
ret
and
or
lahf
xor
mov
sbb
lock
or
fnstcw
sbb
push
pop
cmp
enter
xor
cdq
push
pop
jecxz
adc
sbb
ss
fwait
movs
daa
mov
lea
jl
fwait
scas
ffree
aam
mov
pop
xchg
inc
xor
ss
dec
pop
inc
mov
mov
add
ds
(bad)
mov
sbb
and
call
push
pop
inc
outs
add
fcomp
pusha
and
and
pop
and
dec
mov
mov
movs
es
cmp
lods
out
(bad)
mov
fdiv
pop
out
stos
gs
xchg
sub
jno
out
sbb
idiv
sbb
aam
fld
jg
add
ror
sub
xor
xor
pop
sub
mov
xchg
fs
mov
adc
add
xchg
cmps
out
push
add
mov
fistp
or
punpckhbw
jbe
mov
jbe
mov
shr
call
lock
add
in
push
stos
xchg
push
cmc
or
ror
mov
ins
add
scas
out
mov
inc
jae
inc
sahf
int
out
stos
pushf
push
rol
dec
fsub
push
in
popf
xchg
push
mov
repz
sbb
or
dec
sub
fdivr
call
fldcw
les
aaa
lea
mov
push
bnd
jne
(bad)
shr
mov
ficomp
popa
mov
sub
jl
pop
outs
push
dec
mov
enter
sub
cmp
js
lahf
xchg
or
lods
into
pop
(bad)
jmp
jbe
cli
retf
ror
inc
cmp
das
push
jno
data16
adc
aas
pop
aam
dec
test
data16
push
xchg
sbb
sub
dec
mov
xchg
sbb
pop
xlat
test
or
ss
xlat
cwde
cmc
mov
pop
sub
push
xchg
push
ficomp
int3
mov
mov
movs
outs
dec
call
aas
lods
clc
or
lock
mov
iret
and
pop
neg
mov
and
std
(bad)
test
fs
jge
push
jno
enter
movs
xor
mov
pop
(bad)
jnp
retf
adc
out
stos
mov
lods
ficomp
and
and
ret
xlat
in
pop
inc
je
dec
add
push
jns
xor
stos
mov
and
dec
sbb
aas
jge
inc
dec
push
inc
test
xor
fimul
movsx
nop
xchg
jge
dec
cmp
xchg
jmp
adc
js
int
aad
ins
aas
xor
mov
cmp
sahf
(bad)
xor
jge
mov
call
in
test
lods
mov
jbe
and
movs
inc
or
xchg
mov
cmp
iret
push
loop
iret
outs
pop
xor
pop
or
inc
xor
or
inc
jo
add
xor
cwde
jge
mov
sub
out
mov
cmp
pop
retf
in
aad
scas
cmp
pop
adc
lods
aad
rcr
push
into
cmp
cmps
jbe
add
test
nop
jmp
inc
lods
cmp
dec
sar
jo
test
(bad)
cmp
(bad)
dec
gs
addr16
out
ins
lods
mov
jge
cli
cs
mov
jb
push
pop
push
cmc
(bad)
inc
iret
retf
fs
repz
sar
push
out
and
push
mov
jnp
xchg
(bad)
retf
pushf
sub
adc
(bad)
shl
or
int
adc
sbb
mov
jne
lds
jno
inc
js
and
and
imul
inc
add
sar
sub
push
mov
sub
mov
lock
enter
sbb
ret
bound
movs
test
data16
sbb
test
into
jle
retf
or
xchg
or
fdivr
xchg
loope
daa
push
(bad)
pop
js
push
ins
fwait
addr16
mov
xchg
add
dec
aas
xor
sti
and
call
fnstsw
dec
je
or
ja
arpl
in
add
out
imul
xchg
adc
mov
arpl
movs
cmp
adc
lods
ret
mov
popf
cmc
and
mov
jmp
jne
sub
cdq
popa
jnp
push
dec
test
fnsave
ss
pop
pop
push
pop
gs
jae
scas
jns
out
mov
sub
and
idiv
sub
sub
xlat
fwait
std
ds
adc
(bad)
mov
in
test
inc
lods
dec
sbb
jae
or
push
call
xor
xor
mov
sbb
xchg
aas
sub
cmc
cmp
mov
mov
cs
mov
mov
ins
and
mov
cmp
sbb
retf
fld
icebp
jne
xchg
fistp
(bad)
(bad)
adc
loope
int3
test
mov
inc
inc
and
inc
aam
dec
loope
mov
mov
lods
xchg
lahf
xchg
and
cmp
cmp
pop
(bad)
mov
sahf
xchg
inc
lock
cmp
sbb
push
dec
mov
inc
inc
sahf
loopne
std
jne
mov
not
jbe
xor
iret
call
jnp
pushf
add
push
sub
push
dec
dec
sub
jmp
and
ja
shl
(bad)
leave
(bad)
in
jbe
sub
pop
jno
xor
and
ftst
(bad)
xor
mov
call
sub
enter
jne
jg
out
pop
dec
int
inc
and
loope
sbb
in
scas
ss
clc
test
adc
ins
popa
sub
int3
push
rcl
loop
inc
mov
mov
cmp
rcr
push
aad
imul
pop
pop
push
xchg
paddusb
xor
mov
and
add
mov
mov
push
add
cmp
mov
mov
lods
jge
and
fldcw
test
movs
inc
or
out
cs
xor
pushf
jb
test
push
stc
das
xchg
lock
out
arpl
movs
push
outs
aaa
out
cld
leave
push
inc
mov
lds
inc
and
test
gs
in
cli
cmps
cmp
mov
mov
inc
das
lock
(bad)
xchg
jp
ret
repz
outs
jnp
out
lods
cmp
ja
das
pop
ds
iret
(bad)
cld
adc
js
mov
arpl
sbb
(bad)
int
hlt
xchg
mov
and
in
call
inc
push
dec
sbb
ror
inc
push
fwait
leave
into
outs
jb
pop
scas
sub
jno
xchg
stos
adc
cld
push
sub
cmp
neg
mov
and
inc
jmp
js
pop
xchg
inc
daa
je
jns
call
pop
mov
in
sub
ret
mov
std
call
(bad)
shl
loope
gs
add
mov
xchg
call
dec
push
jmp
sub
ins
cmp
repz
or
icebp
jmp
jb
mov
pushf
test
and
inc
in
in
pop
lods
pop
and
scas
xor
fild
sbb
enter
jns
push
fisttp
ja
jecxz
ins
fnstsw
(bad)
int
pushf
sub
out
mov
(bad)
jmp
(bad)
xchg
sbb
inc
scas
cmps
in
mov
ret
dec
and
adc
in
cmps
push
push
cwde
icebp
lds
(bad)
dec
jo
aas
ficom
xlat
outs
push
sbb
cli
mov
call
mov
imul
bound
ds
mov
arpl
sub
mov
jmp
xor
cdq
pop
movs
enter
pop
vpunpckhbw
cmps
pop
imul
fistp
leave
rcl
sub
les
out
nop
mov
jae
push
icebp
and
je
call
hlt
cmc
jnp
sub
pop
pop
pop
mov
xor
mov
xor
mov
ucomiss
loopne
sbb
std
dec
popa
and
test
clc
sub
cmovl
mov
adc
adc
or
pop
mov
rol
popf
pusha
xor
scas
lods
xchg
inc
out
xor
sub
out
cmc
sbb
mov
rcr
xor
inc
(bad)
fild
arpl
scas
cmp
add
cs
fidivr
pop
jle
xor
repnz
jbe
jge
add
mov
push
sub
push
jge
sub
hlt
cmps
scas
clc
in
test
bnd
es
xchg
push
jmp
int
jg
(bad)
xchg
cmp
jge
mov
fcom
and
nop
arpl
push
mov
or
test
aad
fs
popf
jp
inc
out
inc
in
fs
imul
dec
(bad)
pop
fwait
sti
imul
int3
sbb
clc
jg
xor
mov
cmp
mov
into
adc
aad
cvtdq2ps
xor
call
mov
inc
outs
dec
icebp
jnp
test
pusha
push
mov
dec
or
jno
or
xchg
dec
fcom
fs
pusha
dec
retf
inc
or
add
pusha
push
and
fwait
in
pop
dec
nop
fdivr
xor
hlt
inc
pop
mov
fwait
lds
lahf
mov
in
inc
mov
call
jge
xchg
fnstsw
dec
pop
dec
xchg
or
mov
inc
idiv
sbb
(bad)
ss
mov
adc
sub
sbb
lods
add
jbe
adc
adc
add
mov
ds
mov
popf
or
outs
(bad)
fucomp
jnp
test
imul
scas
sbb
jno
(bad)
test
cld
jg
push
push
inc
inc
repnz
div
addr16
(bad)
(bad)
test
ins
ret
adc
dec
sbb
lods
lahf
mov
xchg
cmp
nop
repz
push
call
or
scas
inc
je
aad
push
mov
mov
adc
mov
std
or
scas
repz
sahf
xor
mov
xchg
mov
lods
pop
mov
mov
cld
icebp
into
(bad)
shr
jb
xor
and
ror
fidivr
bound
add
mov
xchg
dec
xchg
(bad)
push
sub
(bad)
in
dec
outs
bswap
test
or
or
movs
neg
scas
sbb
mov
xor
add
mov
mov
mov
push
jne
add
jbe
imul
lea
xor
xchg
retf
add
jo
cmc
in
mov
imul
into
das
imul
out
jbe
push
push
dec
jnp
in
push
sbb
and
mov
loop
xchg
mov
test
sbb
pop
retw
jp
fs
test
xchg
push
sub
(bad)
and
std
popa
pop
jns
fild
pop
fisttp
inc
xor
pop
adc
outs
test
dec
adc
iret
inc
jmp
sbb
pushf
int3
bnd
jle
mov
outs
pop
jns
cmp
or
cdq
sbb
repnz
mov
or
push
mov
sbb
icebp
inc
sbb
pop
mov
pop
ret
shr
or
inc
das
imul
inc
inc
outs
xor
sbb
out
or
cmp
sub
dec
jo
and
in
ss
movs
rol
fs
mov
in
data16
push
bound
enter
lea
adc
and
and
adc
ret
inc
data16
add
leave
lock
xchg
pop
sahf
jle
aaa
fld
aas
push
or
(bad)
leave
and
loopne
dec
ins
push
mov
push
retf
out
jbe
dec
or
pop
in
mov
sub
jle
mov
xchg
jmp
stos
movs
pop
lods
pop
cmp
mov
retf
ret
xor
fcmove
push
test
push
cmp
jae
std
push
sub
(bad)
repnz
and
jnp
dec
jmp
mov
push
fild
sti
sbb
or
sti
jno
sahf
pop
mov
(bad)
adc
stc
cmp
lods
iret
test
shr
frstor
mov
loope
loop
sti
mov
pop
cmp
sbb
test
imul
test
mov
mov
mov
pop
xchg
lods
mov
cld
mov
nop
mov
out
mov
mov
movs
int
ret
dec
repnz
mov
jge
es
out
cmp
add
dec
cli
push
mov
sbb
xchg
popa
jb
adc
rol
shr
mov
dec
lods
out
out
rcr
jmp
imul
fdivr
jge
pop
sbb
push
or
mov
jl
inc
fnstsw
mov
mov
std
dec
jno
(bad)
mov
and
repz
lods
jne
mov
fsubr
push
cmp
aad
daa
add
mov
sbb
inc
shr
fs
call
inc
out
repz
mov
sub
xor
inc
xchg
xchg
and
and
cmps
pushf
adc
scas
popf
sbb
mov
mov
jno
cmc
(bad)
data16
ds
xchg
movs
cmp
inc
ds
inc
(bad)
std
clc
out
lock
cli
sbb
div
cs
les
sbb
test
cwde
(bad)
xor
enter
lds
lds
mov
jns
mov
ds
(bad)
aam
mov
and
out
xor
jns
add
jmp
es
repz
loope
pushf
(bad)
jecxz
sbb
cmp
inc
js
dec
inc
sub
xor
lock
mov
loopne
js
dec
retf
sub
jp
test
lods
outs
mov
les
add
hlt
pop
sub
movs
xchg
xor
mov
push
sbb
gs
bound
fcmovb
ds
mov
and
xlat
inc
and
(bad)
dec
mov
push
int3
push
xchg
jmp
je
xor
jecxz
call
sbb
jno
or
xchg
fiadd
cmp
mov
outs
aas
or
in
add
add
test
adc
xchg
fimul
sbb
test
sub
fbstp
add
aaa
and
or
adc
mov
pop
adc
and
inc
rol
and
aas
lods
nop
in
or
in
sete
add
adc
jp
cmp
mov
inc
jg
cmp
rcr
jne
(bad)
or
fcmovbe
sar
arpl
jo
mov
aas
mov
adc
inc
ins
fwait
ret
ins
sub
cmp
mov
xor
pop
sub
aas
fild
lods
jl
mov
idiv
stos
jae
es
scas
ds
inc
dec
sub
fcom
mov
cmps
shl
fist
add
jne
inc
les
test
shl
fwait
and
xchg
popa
(bad)
mov
retf
pop
sar
adc
jge
fidivr
jle
and
and
aas
add
push
out
enter
test
pop
pop
sbb
jecxz
mov
mov
out
and
cmp
addr16
outs
loopne
push
or
out
add
add
inc
js
inc
dec
or
mov
icebp
mov
sub
shr
xchg
and
call
repnz
inc
jecxz
and
inc
and
push
jne
mov
loope
stos
cmps
push
in
inc
xchg
sbb
sub
add
cmp
psubusb
jge
inc
in
dec
mov
or
neg
pushf
add
jo
call
fidivr
mov
imul
xchg
or
cmps
stos
push
inc
mov
dec
fisub
pop
adc
ja
fidivr
daa
int3
sub
clc
xchg
pop
call
jge
test
cmp
(bad)
iret
push
mov
xchg
(bad)
movs
gs
and
dec
pop
ins
test
xchg
call
mov
or
enter
sub
int
push
push
push
fidiv
fs
mov
xlat
repnz
mov
popf
scas
fst
jmp
cmp
mov
dec
push
aad
aaa
rcl
mov
add
or
add
(bad)
out
pop
adc
adc
shl
retf
mov
lahf
rcl
call
call
xchg
imul
shl
repnz
sub
mov
bound
fs
rol
push
jne
adc
add
mov
push
xchg
push
jo
stos
push
mov
add
cmps
call
mov
rol
cmps
mov
aam
hlt
mov
mov
popa
dec
in
fild
data16
fsub
icebp
shl
mov
fs
jmp
jne
repz
mov
(bad)
push
push
mov
jns
std
mov
and
cs
and
add
mov
adc
or
mov
mov
std
cdq
imul
or
pop
xchg
pop
mov
jle
daa
mov
lock
addr16
movs
sub
cmps
sub
add
or
mov
ret
mov
clc
repz
dec
mov
(bad)
push
jecxz
cmps
mov
add
cmc
push
dec
dec
xchg
test
jge
push
cmp
jecxz
icebp
fist
or
add
daa
fwait
cmp
movs
(bad)
push
or
sub
or
scas
dec
stos
xchg
push
out
inc
out
dec
jae
pcmpeqb
mov
sbb
(bad)
fisttp
and
push
scas
retf
xchg
mul
fucomip
repnz
bound
mov
pop
(bad)
cmp
push
clc
dec
push
ret
push
int
out
loop
add
arpl
stc
pop
arpl
test
xor
cmp
cmps
outs
aam
cmp
adc
sub
mov
push
out
sub
mov
xor
pop
cmovp
mov
call
movs
push
or
cwde
test
xor
popf
leave
cmp
mov
cmc
pop
(bad)
cmp
or
jns
sahf
outs
or
cmc
fmul
mov
add
push
inc
push
mov
mov
dec
sub
fild
xor
push
and
mov
sub
and
retf
or
or
movs
push
outs
adc
sbb
and
adc
cld
xchg
pop
and
pusha
loope
pop
fiadd
cwde
aam
lea
dec
(bad)
sahf
dec
mov
jb
lods
sub
dec
adc
sub
xor
sbb
out
mov
cmp
sbb
push
jne
lea
xchg
mov
aam
or
scas
cmp
pop
add
ret
cmp
push
out
(bad)
in
inc
jns
push
outs
xor
push
int3
or
adc
push
movs
imul
call
pop
adc
add
or
dec
pop
dec
mov
daa
push
retf
(bad)
rol
jnp
mov
aaa
cmp
ficomp
out
xor
sti
add
or
inc
aad
mov
xchg
push
mov
out
and
adc
xchg
adc
sub
and
(bad)
mov
mov
xor
popf
cdq
stos
and
adc
imul
jle
and
enter
push
cmp
jb
mov
mov
mov
aaa
jne
mov
push
cmc
jmp
mov
sar
fnsave
je
adc
xor
aaa
or
mov
sar
lock
retf
loopne
pop
cmp
call
nop
ret
mov
xchg
xor
push
dec
adc
sub
pop
jl
je
dec
outs
inc
mul
not
or
or
inc
mov
push
in
jg
sbb
sbb
mov
and
stc
in
adc
push
xchg
loop
fs
iret
aaa
imul
(bad)
push
mov
sbb
retf
rol
mov
js
mov
push
pop
sub
mov
mov
fsub
xchg
nop
arpl
xchg
lahf
(bad)
mov
pop
ss
pusha
xor
and
leave
xor
push
iret
xchg
and
jb
sti
push
aaa
add
int
adc
out
arpl
lahf
jne
aas
pop
sub
movs
or
(bad)
jae
xchg
jns
gs
sub
xchg
test
in
mov
stc
jmp
xor
ss
imul
ficom
outs
mov
or
(bad)
jge
jp
add
and
mov
pop
adc
xchg
adc
int3
and
jne
xchg
mov
inc
push
enter
adc
mov
or
jbe
(bad)
popa
xor
stos
sbb
bound
sbb
fnstenv
jns
adc
test
fdivr
inc
lods
movs
sbb
dec
mov
mov
dec
mov
popa
icebp
pop
ds
sahf
call
and
daa
jne
sbb
into
call
sub
pop
mov
mov
xchg
(bad)
bnd
fsubrp
popf
cmp
je
and
out
adc
pushf
out
out
dec
and
add
iret
rcr
adc
jle
pop
adc
or
or
add
mov
dec
sbb
rcl
sbb
(bad)
fidivr
xor
jno
or
jge
movlps
loopne
push
stos
dec
mov
shl
mov
jecxz
imul
jns
mov
cli
sub
inc
imul
in
lea
aad
into
loope
xor
(bad)
aam
das
cmp
jle
repnz
jno
xchg
outs
cmp
jae
xor
cs
or
xor
push
andps
call
inc
retf
cmps
sub
pop
push
jb
jmp
dec
retf
hlt
adc
mov
shl
or
out
shl
pop
dec
pop
sub
pop
(bad)
xchg
xor
sahf
pop
or
leave
mov
in
movs
xor
add
or
loope
push
pop
mov
sbb
repnz
retf
test
sbb
addr16
les
jb
push
and
daa
push
inc
call
push
das
je
sbb
or
sub
fmul
ret
repz
or
jmp
shr
cmps
add
inc
push
mov
rol
aam
jmp
sbb
and
sub
ja
push
dec
js
out
outs
push
in
or
and
cmp
outs
dec
and
cs
pop
shr
mov
pop
dec
adc
lock
je
inc
cdq
push
pop
loope
jo
das
addr16
inc
out
pop
jns
inc
mov
add
ficom
jo
lock
push
and
pop
lods
scas
sbb
adc
adc
dec
and
(bad)
adc
jae
repnz
je
mov
push
sbb
call
and
jl
test
jbe
cmp
lods
(bad)
sbb
outs
bound
data16
fistp
jge
sbb
in
adc
dec
pop
jae
mov
or
inc
push
and
mov
adc
mov
xchg
jnp
jl
das
xlat
pop
in
jecxz
or
loope
push
(bad)
mov
sub
cdq
(bad)
or
mov
sbb
rcr
shl
sbb
in
pop
scas
das
fisttp
movs
sbb
add
sub
cmp
(bad)
test
inc
push
add
addr16
pop
or
xchg
lds
push
pop
push
mov
retf
add
fxch
xchg
sub
jg
pop
in
imul
push
add
push
adc
xchg
jnp
xchg
mov
cmp
jg
ins
test
jne
push
test
addr16
stc
call
jbe
test
mov
mov
cmp
xchg
ja
in
mov
aaa
shr
lahf
lss
mov
clc
stos
scas
stos
adc
inc
push
mov
popa
retf
fsubrp
lods
sbb
daa
cmp
add
dec
xchg
sbb
popf
mov
inc
(bad)
imul
jecxz
loopne
pop
pop
jecxz
cwde
retf
sub
sbb
add
pop
add
pop
retf
out
retf
enter
add
aaa
dec
inc
mul
or
call
inc
adc
pushf
movs
jge
push
scas
popf
fld
push
loop
pop
add
pop
enter
fldcw
push
adc
jecxz
repnz
ds
xor
out
add
loop
shl
sbb
push
mov
xchg
lods
ret
xchg
cmp
inc
dec
sar
std
xor
cmp
jbe
jae
ds
ret
int
add
mov
cmp
aad
jne
cs
inc
in
fidiv
push
leave
push
cmps
mov
ficom
xor
sbb
push
test
sub
out
and
sub
mov
in
shr
retf
fistp
fsincos
mov
xor
retf
and
or
jp
jbe
cmp
fcmovnu
call
shr
aaa
cmps
aaa
ds
push
push
das
inc
push
sub
xchg
push
enter
aas
pop
in
inc
dec
test
xor
std
retf
stos
adc
bound
sbb
push
pop
or
xlat
repz
mov
popa
cmc
stc
(bad)
xor
dec
fnstenv
and
mov
lds
lds
xchg
addr16
retf
ficomp
dec
sub
mov
push
jbe
jp
jo
ja
movs
movs
loope
sub
fistp
sar
lock
leave
in
fdivr
and
popf
xchg
fdivr
(bad)
push
ins
mov
mov
push
in
(bad)
cmp
stc
jmp
inc
push
sbb
popa
pushf
cmp
movs
out
ds
sar
mov
imul
fist
sbb
cli
popa
fwait
jecxz
fs
jbe
outs
inc
inc
daa
mov
in
fmul
call
lock
(bad)
and
aad
sbb
retf
xchg
xchg
mov
(bad)
loop
movs
mov
pop
sub
dec
inc
push
jmp
add
pop
sub
fcom
xchg
lods
adc
loop
fstp
mov
mov
into
adc
pop
leave
pop
or
nop
mov
ss
mov
inc
out
push
cli
movs
into
ficomp
lea
aam
scas
(bad)
(bad)
test
fld
arpl
or
retf
sbb
mov
mov
lahf
xchg
jmp
stc
xchg
cmc
movs
ret
cmp
xor
and
bound
xchg
hlt
addr16
addr16
nop
jmp
pop
sbb
and
push
into
ss
push
adc
xor
dec
les
dec
bound
sub
rcr
or
test
jo
loop
or
data16
pop
or
dec
leave
cmp
jg
je
sub
add
aam
(bad)
xor
cmp
arpl
sbb
push
jae
rcr
push
push
into
rcl
cmp
stos
jl
call
rcl
push
add
lods
pushf
stc
movs
mov
jp
addr16
ss
dec
jno
or
inc
(bad)
fdivr
inc
sub
or
jnp
push
adc
pop
inc
cmps
popa
lods
xchg
adc
cmc
mov
(bad)
mov
test
scas
mov
(bad)
sbb
sub
in
clc
push
xchg
dec
aam
xchg
pop
test
fldenv
pop
es
adc
icebp
adc
call
cmps
add
xchg
mov
std
mov
add
loopne
mov
adc
rcr
or
jno
inc
imul
jecxz
jle
aad
or
xchg
test
jbe
jb
dec
test
push
jl
aam
add
fwait
adc
leave
pop
shr
and
add
fld
and
mov
push
push
xor
sub
shl
iret
cdq
ret
pop
bound
dec
stc
add
loop
call
sbb
lahf
push
cmp
fwait
rcr
jae
out
jne
aam
dec
(bad)
fld
sub
pop
inc
cmp
mov
xchg
push
push
(bad)
sub
xor
sub
sbb
xchg
leave
jg
xchg
rol
pop
cmc
stc
dec
je
in
push
xor
pop
jmp
mov
add
push
jnp
add
sbb
adc
push
pop
out
cmp
int
mov
sbb
jle
adc
mov
jle
lock
mov
push
lock
adc
xor
and
gs
call
push
mov
or
pop
pushf
inc
cwde
pop
dec
xor
fild
xchg
js
inc
mov
xchg
push
jbe
inc
mov
or
jno
das
mov
addr16
mov
push
sbb
sub
sub
fwait
sbb
push
sbb
pop
jmp
aas
mov
pop
(bad)
sti
rol
xchg
sti
repnz
pop
frstor
ror
loope
xchg
xor
push
ftst
call
pop
pop
cmp
sub
loop
cld
lds
xchg
cmps
js
xor
inc
jmp
shr
mov
fdivr
data16
retf
test
scas
sbb
(bad)
pop
outs
sub
mov
pushf
and
inc
xchg
or
xchg
and
sbb
loopne
push
push
cs
jmp
cmovp
xchg
cdq
xor
scas
inc
pop
stos
das
cmps
bound
jg
fsub
lods
push
jae
mov
ret
fwait
jmp
mov
xchg
push
sub
aad
je
sbb
ins
into
retf
dec
std
sti
das
mov
(bad)
or
retf
and
mov
sub
sbb
cld
mov
xor
outs
jecxz
mov
or
cdq
ja
fcmovne
mov
jg
dec
fstp
data16
rcr
inc
mov
aam
in
movs
xchg
sub
adc
cmp
and
or
push
and
out
loop
jge
inc
sbb
fstp
push
rcr
dec
xchg
xor
lock
xchg
adc
jle
sbb
sub
scas
mov
int
aaa
add
arpl
(bad)
mov
or
mov
stos
pop
ja
fldenv
rcl
ret
out
addr16
mov
mov
mov
lahf
es
mov
ror
out
jnp
les
push
cld
sbb
mov
test
call
movs
mov
pop
xchg
jecxz
nop
adc
cmp
inc
pop
cld
mov
fild
bound
xlat
mov
sbb
hlt
repnz
sub
fsub
jp
and
xchg
fistp
pop
outs
arpl
sbb
mov
jle
popf
mov
jecxz
jg
sahf
push
add
clc
cmp
inc
inc
lahf
pop
mov
or
fcom
lods
dec
ror
movs
and
push
retf
xor
sub
mov
push
ds
mov
div
mov
(bad)
cmp
xor
jmp
mov
push
lds
jb
push
ret
push
sub
fs
inc
pop
in
imul
in
ds
dec
mov
jmp
shl
mov
jmp
fsubp
and
xor
in
fcmove
(bad)
cmp
fimul
jo
cwde
fs
and
es
push
gs
cmps
arpl
fisttp
popa
stc
jne
jnp
push
sub
xor
fwait
in
dec
adc
inc
fmul
ins
es
push
imul
jge
daa
lahf
or
lds
pop
cmps
xor
mov
xor
push
js
adc
dec
or
sub
out
jge
(bad)
mov
sub
push
mov
call
aad
icebp
or
les
adc
cmp
call
xchg
xor
dec
out
js
sbb
mov
in
pop
loop
ror
mov
or
fucomp
ret
stc
or
mov
xchg
jns
jp
dec
push
mov
jnp
push
adc
cmp
jg
imul
xchg
stc
(bad)
out
fadd
inc
pop
fs
test
inc
xlat
push
xlat
fidivr
daa
fwait
jae
rcl
push
jl
sbb
jle
cdq
cli
aas
push
ins
test
dec
mov
or
mov
outs
xor
js
inc
push
stos
fidivr
cmp
add
push
leave
sahf
adc
dec
add
cmps
push
jne
std
pop
(bad)
push
cmps
jl
mov
inc
into
mov
clc
lahf
movs
jnp
xor
xchg
std
(bad)
xchg
add
push
jo
mov
stc
jle
pop
adc
and
rcl
in
dec
mov
sbb
(bad)
lock
pop
jno
or
adc
and
cmc
adc
mov
ficomp
bound
stc
lahf
dec
test
jmp
dec
inc
loope
neg
pop
inc
aas
test
movs
or
ins
les
pop
and
jecxz
mov
scas
les
out
sbb
jo
(bad)
clc
mov
mov
push
xchg
and
adc
jb
std
pop
push
fs
cmp
retf
adc
popf
in
clc
call
int3
and
xor
shr
xchg
jge
ficom
or
hlt
xchg
aam
cld
cwde
je
rol
xchg
cs
sti
mov
jl
mov
loopne
pop
mov
movs
mov
leave
mov
clc
movs
pop
mov
push
jne
(bad)
les
add
push
rcl
jmp
inc
and
cmc
cld
or
push
push
mov
cmp
in
sahf
pushf
fcom
add
mov
lock
adc
cmp
dec
shr
mov
aam
and
aaa
imul
mov
jecxz
iret
das
mov
lock
bound
shl
test
iret
icebp
outs
mov
dec
outs
ds
sbb
mov
aas
and
rcr
xchg
shl
inc
dec
sahf
push
cld
sti
dec
out
and
ficom
pop
adc
outs
mov
imul
push
aas
pop
out
fnstcw
movs
stos
push
loope
sub
jns
call
sbb
cmps
sub
mov
or
xor
cmp
inc
ja
jne
idiv
(bad)
(bad)
fadd
push
imul
mov
and
mov
sub
add
xor
add
sbb
adc
dec
repz
in
test
in
data16
lock
and
fld
mov
dec
jbe
dec
mov
das
ins
js
xchg
sub
adc
push
neg
and
or
lods
pop
mov
imul
push
add
test
stc
icebp
or
xchg
or
mov
sbb
int3
leave
push
ins
or
loopne
jo
inc
push
rol
jg
sar
xor
ss
jmp
lea
push
inc
mov
mov
lods
mov
mov
push
sub
aad
repnz
sbb
cli
xchg
pop
(bad)
lea
aaa
mov
push
jp
sub
adc
(bad)
pop
fstp
stos
and
lods
int
shl
cli
cs
bound
and
outs
bound
xchg
cld
popf
jae
jl
and
xor
xchg
pop
pop
and
mov
loop
call
outs
adc
scas
in
int3
mov
mov
pop
jmp
leave
pusha
in
adc
push
and
mov
ficom
pop
dec
add
clc
mov
cli
es
loop
xor
adc
cld
sti
sbb
pop
call
retf
jnp
mov
in
aaa
xor
repnz
sub
sub
aaa
in
fldl2e
ss
push
mov
sahf
cmps
jl
or
(bad)
test
sar
aam
add
jle
mov
call
jo
mul
pop
or
data16
xchg
mov
dec
or
test
hlt
lock
mov
out
in
lahf
adc
scas
mov
dec
adc
je
mov
mov
ja
or
jg
sahf
cli
lods
aas
arpl
ja
pop
mov
xchg
in
loope
mov
xchg
push
shr
or
in
ja
ins
outs
or
bndldx
pop
into
pop
dec
and
xchg
dec
pop
mov
add
add
test
test
bound
dec
shl
jne
(bad)
sar
test
retf
mov
or
leave
mov
adc
es
xchg
test
xor
sbb
mov
adc
in
cmp
xchg
test
shl
sub
fimul
jmp
xlat
mov
loop
xchg
jl
das
jnp
loopne
and
dec
dec
xchg
pop
scas
mov
adc
inc
or
push
or
fidiv
dec
leave
loope
jmp
fs
test
(bad)
fs
mov
xchg
cmp
push
inc
xchg
call
add
push
push
stc
and
sti
clc
(bad)
cmp
imul
cld
retf
mov
pop
ror
add
js
in
stos
neg
jp
fld
add
cmp
cs
and
mov
shl
add
retf
jecxz
push
and
jp
(bad)
in
movs
loop
and
sbb
retf
gs
lods
adc
test
adc
in
inc
or
sub
imul
and
adc
mov
xchg
bound
loope
cmc
push
je
ja
sbb
gs
and
(bad)
cmp
xchg
das
or
daa
rol
push
xchg
jbe
aaa
mov
xor
push
jle
jl
shl
add
pop
aas
mov
int3
sub
call
fnstsw
shr
sbb
pop
lods
jnp
jg
imul
xchg
push
dec
push
dec
mov
jp
test
dec
mov
jl
add
sysret
jge
fld
loop
inc
mov
fcomi
les
dec
or
rol
mov
jnp
ret
add
pop
add
aas
(bad)
mov
xchg
std
pushf
push
es
sbb
movs
into
jg
cmp
gs
inc
or
ror
inc
sahf
pop
and
push
dec
in
popf
enter
jmp
fdiv
xor
mov
dec
aad
ins
test
jl
inc
pop
aas
and
pusha
mov
mov
sahf
test
sub
or
or
mov
movs
iret
jae
or
jo
push
sbb
ror
sbb
adc
sbb
sbb
xor
jl
sub
add
outs
dec
test
icebp
call
push
imul
add
inc
in
fwait
mov
sub
xor
and
xchg
mov
out
sti
outs
push
jns
cmp
call
ror
icebp
daa
lahf
mov
gs
jbe
in
adc
out
mov
je
mov
fdivr
mov
sbb
jl
dec
call
lods
imul
nop
jge
pusha
or
xchg
fst
cmp
pop
xchg
or
in
mov
cli
test
xchg
mov
std
jae
dec
dec
popa
addr16
lock
and
and
jmp
js
out
mov
mov
sahf
dec
push
push
mov
aad
jnp
test
cmps
or
cdq
dec
pop
(bad)
mov
pop
movs
int
gs
pop
xchg
sub
rol
ret
sub
idiv
xchg
in
mov
inc
nop
or
sbb
cmp
scas
push
add
pop
es
frstor
mov
repz
inc
dec
sub
popa
cmp
and
or
dec
mov
add
pop
stc
jp
push
ret
adc
mov
rcr
sbb
jl
sar
mov
inc
sub
fcmovne
int
dec
cli
inc
xchg
hlt
cmp
scas
xchg
jo
retf
push
mov
and
cmp
pop
es
mov
xor
jmp
mov
test
xchg
idiv
and
aas
cld
pop
mov
xor
retf
repnz
or
cs
xor
push
push
mov
(bad)
scas
adc
push
cmp
sti
xchg
push
popf
mov
jmp
nop
mov
data16
mov
sub
inc
test
cmp
inc
add
xchg
outs
jl
cli
xlat
mov
pop
fucomi
jmp
cwde
and
test
dec
or
and
lds
adc
xor
std
or
movs
inc
jmp
inc
inc
push
mov
xor
jg
imul
test
out
mov
retf
xchg
fiadd
shr
scas
xor
mov
imul
in
(bad)
dec
xchg
push
gs
cmps
jns
imul
rol
xor
fs
mov
sbb
dec
fsubr
inc
int3
mov
repz
and
mov
pop
test
sub
push
or
mov
mov
je
mov
xor
ret
mov
pop
in
xor
add
test
cmp
lock
dec
loopne
mov
mov
adc
sub
cmovle
dec
clc
das
loopne
sbb
pop
or
in
lods
mov
je
out
outs
push
fisubr
out
mov
adc
inc
xchg
fild
jnp
pop
in
xchg
cmc
dec
rcr
ds
pop
ja
or
fistp
leave
outs
push
xor
fnsave
dec
pushf
add
popa
or
mov
pusha
pop
je
jne
mov
push
or
rsqrtps
mov
jl
pop
adc
add
mov
mov
mov
push
je
dec
rcl
jl
pop
jp
fs
inc
pop
adc
pop
mov
and
mov
mov
and
push
sub
cmp
in
mov
sbb
and
xor
mov
add
fadd
fwait
mov
ja
out
je
sar
mov
ja
in
push
sub
or
push
cs
jb
cmp
icebp
xchg
dec
jl
push
sbb
sbb
sub
pop
rol
aam
xor
xchg
add
repz
test
aas
ds
sbb
pop
jae
loopne
lds
add
mov
movs
mov
xor
mov
pop
loope
mov
lds
js
xchg
sub
in
ror
or
in
or
pop
inc
ins
push
call
jl
movs
rol
test
push
cs
push
ficomp
xor
(bad)
jmp
adc
aaa
retf
jae
add
jl
outs
mov
jl
ret
cmp
(bad)
add
pop
scas
cmp
mov
dec
inc
iret
mov
add
(bad)
mov
push
sub
leave
and
int3
sbb
cdq
idiv
(bad)
adc
pop
movs
push
pushf
inc
jle
imul
das
(bad)
push
jno
test
clc
xchg
stos
int3
sub
inc
aas
loop
sti
cmps
dec
in
add
rol
jg
jp
call
xor
jge
iret
inc
out
and
outs
js
imul
icebp
sbb
fdiv
xor
test
and
cmp
mov
and
adc
ja
lea
mov
out
mov
sbb
cli
dec
scas
dec
int3
add
pusha
dec
aad
icebp
repnz
fld
mov
mov
adc
mov
mov
pop
fistp
ss
jmp
add
fidivr
pop
and
xchg
or
cmps
inc
cmp
push
mov
mov
stos
nop
lods
idiv
jbe
dec
lock
lods
dec
cmp
xor
xchg
fucomi
mov
inc
xor
push
(bad)
iret
fcmovnbe
aaa
jmp
enter
test
lods
jecxz
mov
shr
fdiv
mov
adc
sbb
inc
add
dec
repnz
dec
imul
xor
mov
pop
fs
push
or
(bad)
pop
test
in
rcl
cmp
or
cmp
jne
movs
xlat
dec
xchg
adc
xchg
fisub
repz
(bad)
loop
add
adc
push
sbb
pop
loope
xchg
mov
cmp
xchg
sub
inc
dec
popf
sti
jmp
out
mov
js
and
outs
inc
ret
retf
xchg
and
push
dec
pop
loope
pop
xchg
lods
sub
dec
and
add
xor
stos
bound
mov
mov
in
mov
adc
pop
mov
scas
mov
sbb
inc
fdiv
inc
sub
sbb
(bad)
clc
jle
in
sbb
mov
ins
fisub
adc
mov
fwait
jno
inc
pop
sbb
jae
test
sub
jns
movs
ins
es
pop
sbb
mov
cmp
inc
jg
pop
pop
or
fild
push
sahf
lea
push
jp
sbb
add
dec
add
jge
adc
sub
cmps
adc
or
sbb
lods
jo
sub
cmp
lahf
push
cmp
pop
movs
mov
(bad)
push
add
addr16
or
clc
iret
jl
xor
cmp
xchg
xor
test
mov
gs
jno
pop
xor
push
cmps
mov
outs
mov
fist
jb
cmc
scas
ja
add
sub
xor
and
add
cmp
(bad)
lods
pop
sub
test
lock
mov
sub
repz
pop
jne
xor
ja
outs
push
jns
repnz
mov
or
mov
xrelease
cld
adc
dec
call
invd
xor
mov
out
cs
daa
push
out
xor
xor
jbe
bound
(bad)
or
adc
cmc
test
mov
(bad)
out
mov
xor
repz
cmp
jp
sbb
sbb
sbb
sar
ins
lods
xor
xor
mov
and
fiadd
(bad)
or
and
pushf
or
aam
add
daa
leave
inc
int3
sub
cmps
imul
fwait
scas
jl
fadd
not
es
sti
sub
scas
std
movs
ret
jmp
cwde
test
pop
add
repz
(bad)
sbb
aas
sbb
xor
push
sahf
jp
pusha
and
or
xor
pusha
fsub
xchg
cmp
inc
shr
adc
inc
cmp
pop
(bad)
ins
sahf
xor
adc
imul
push
sub
mov
and
std
sbb
lea
mov
push
push
loope
push
xchg
mov
int
mov
push
test
pop
xchg
sub
xor
daa
lahf
in
call
pop
add
sbb
mov
xchg
mov
cld
sahf
mov
pusha
push
and
xlat
sub
into
and
jns
cmps
rcr
scas
(bad)
xor
out
mov
das
out
daa
call
add
and
jmp
loop
mov
lods
cmp
icebp
push
sub
sbb
mov
imul
mov
dec
jge
popa
adc
arpl
push
push
dec
fldcw
pop
inc
jnp
dec
sti
enter
adc
std
push
rcr
mov
(bad)
push
and
mov
or
cdq
inc
clc
mov
and
outs
add
or
inc
and
jbe
stos
sbb
inc
push
mov
fwait
cdq
(bad)
xor
into
gs
jb
jmp
inc
sub
xor
xlat
mov
jno
jmp
loopne
cmp
cmp
and
rcr
xchg
mov
or
push
js
pusha
lea
jmp
pop
or
mov
stos
ins
(bad)
mov
push
out
pop
push
sahf
jb
jecxz
in
inc
or
ins
lods
dec
jg
fst
jge
in
xor
fiadd
repnz
(bad)
dec
sbb
pop
je
dec
frndint
adc
in
or
mov
(bad)
rol
ret
enter
xor
les
rol
jo
or
cmp
lods
jns
shr
int
sbb
addr16
fs
out
cwde
in
xor
gs
scas
inc
repnz
push
sub
xchg
mov
cwde
cmps
bound
pusha
xchg
cmps
dec
adc
inc
xor
retf
test
in
mov
push
movs
stc
mov
pop
xor
push
int
mov
mov
mov
xor
pop
mov
sub
sbb
xlat
pusha
shl
mov
pop
lock
mov
test
jnp
cld
out
adc
or
ret
dec
adc
mov
loopne
out
jl
cs
pop
xchg
outs
cs
in
jne
push
add
lds
mov
push
daa
scas
popf
pop
stc
fld
je
sahf
ins
test
fs
(bad)
aaa
inc
cmp
and
sub
sbb
pushf
idiv
sub
fild
push
(bad)
int
rcl
sbb
xor
fwait
xchg
fsub
pop
icebp
loop
icebp
add
adc
adc
add
call
push
push
mov
or
je
or
mov
push
jbe
dec
adc
mov
jmp
cmp
fst
adc
adc
js
pop
cmp
and
mov
div
or
cli
sub
les
outs
mov
and
mov
xchg
push
nop
and
push
gs
dec
sub
loop
fsubp
mov
pusha
pusha
stos
xlat
unpcklps
les
ret
imul
mov
stc
ja
xcrypt-cfb
cmps
bound
in
loope
pop
push
into
es
hlt
inc
lods
nop
das
xchg
sbb
loop
fsubr
pop
movs
shl
mov
scas
cmp
jmp
pop
pop
add
jno
push
sub
mov
aaa
pop
(bad)
(bad)
fnstsw
jmp
add
mov
or
jo
push
retf
sbb
dec
mov
cmp
xlat
retf
scas
mov
mov
fistp
pop
xchg
je
adc
ret
cmp
sti
mov
aam
std
fdivr
sbb
add
jo
sar
cwde
jecxz
ret
ins
cmc
add
dec
lds
test
mov
rcr
call
(bad)
ja
xor
add
fnstenv
inc
xor
adc
(bad)
mov
pop
sbb
aad
cmp
adc
or
sbb
and
sub
pop
lea
ds
push
shr
(bad)
loop
cli
mov
leave
cdq
inc
pop
and
mov
sub
jb
add
les
add
lds
add
aas
sub
lock
sbb
sbb
dec
jl
xchg
push
mov
add
xor
pushf
stos
jne
out
mov
mov
and
mov
stos
cmp
mov
or
xchg
ficomp
imul
int3
repnz
fwait
in
inc
int
call
push
std
popf
repz
les
retf
ret
pop
xchg
mov
mov
ret
fwait
gs
jmp
div
test
jmp
or
daa
fwait
pop
lahf
sbb
mov
mov
pop
cli
jecxz
dec
pop
aam
movs
mov
mov
add
mov
scas
inc
nop
not
cmps
adc
sbb
xor
sub
ds
int3
aaa
dec
xor
ficomp
mov
push
sub
pop
xchg
int3
cmp
mov
mov
(bad)
push
cmps
aam
ficomp
push
movs
scas
cld
push
and
add
xchg
xor
fidivr
clc
jb
inc
sub
inc
icebp
loop
push
pop
dec
in
movs
aaa
stos
outs
aam
xchg
test
xor
fsub
sub
inc
adc
fsub
cmp
xor
cmp
outs
fadd
adc
(bad)
lahf
or
nop
cmp
mov
daa
(bad)
mov
xor
cwde
mov
xchg
pusha
push
push
scas
cmp
std
sub
lea
mov
shl
cdq
mov
cmp
(bad)
pop
shl
addr16
push
ins
(bad)
and
xor
ds
cmp
jne
xchg
ror
ret
test
xchg
adc
ror
aad
adc
retf
shr
pop
loope
bound
dec
shl
mov
sahf
adc
scas
jnp
repz
or
(bad)
adc
or
inc
xchg
and
lock
and
mov
sub
push
or
cmps
xchg
sbb
push
cmp
and
pop
ins
lea
in
ss
aas
push
dec
mov
sbb
adc
fwait
xchg
leave
aaa
push
or
inc
gs
inc
cmc
mov
arpl
ret
lods
cmp
loope
xor
rcr
jns
add
mov
and
xor
fwait
sub
nop
push
xor
lock
xor
(bad)
push
aad
(bad)
dec
stos
jle
es
add
pop
xor
cmp
mov
xor
push
gs
out
imul
leave
popa
add
js
and
lods
adc
call
push
push
sbb
loope
int3
add
es
pop
vmovss
push
mov
test
test
call
xor
adc
push
std
cmp
or
in
js
lock
adc
cmps
addr16
mov
xchg
xor
mov
clc
sbb
mov
test
add
xor
nop
rol
pop
mov
cld
sub
(bad)
repnz
add
fstp
dec
repz
pop
loope
shl
pusha
cmp
mov
ds
pop
fist
repz
sub
pop
stos
clc
xor
je
cmps
mov
fist
repz
pop
and
lds
fldpi
jle
dec
xchg
jne
jl
mov
dec
mov
scas
sub
fwait
jp
or
fldcw
lods
push
pop
hlt
retf
bound
data16
or
mov
cld
ret
into
cs
mov
pop
movs
stc
das
and
dec
xor
xchg
push
push
and
xchg
outs
jmp
adc
test
loope
popf
xor
test
jecxz
xor
and
lahf
repz
mov
fstp
sti
int3
aaa
into
xchg
retf
dec
pop
pop
mov
fs
icebp
and
xchg
in
pop
inc
or
in
fs
(bad)
dec
cli
and
sti
icebp
pop
jle
fmul
inc
scas
lods
(bad)
jg
xlat
loopne
in
jnp
mov
jae
mov
shl
lods
push
xchg
dec
neg
or
out
jbe
ficom
pop
outs
adc
movs
enter
mov
ret
cmp
ins
inc
mov
stc
mov
ss
mov
cmc
lea
cmp
mov
sub
mov
xchg
sahf
mov
adc
imul
mov
mov
inc
outs
cld
movs
test
mov
mov
retf
lea
les
lahf
mov
imul
pop
pop
push
xchg
cmps
idiv
repz
sub
jo
pop
inc
cld
sbb
sub
and
mov
push
dec
arpl
popf
je
push
and
aas
call
jae
adc
outs
sbb
daa
push
xor
les
mov
cmp
pop
clc
scas
mov
nop
shl
cmp
mov
out
rol
pop
mov
js
pushf
xor
call
jb
mov
sbb
dec
clc
dec
jb
mov
adc
test
and
and
lock
adc
in
jb
gs
jbe
jo
xor
test
or
pop
inc
mov
enter
inc
xor
sar
pop
and
imul
cmc
popf
xchg
addr16
out
movs
xor
les
add
call
test
loop
jo
lea
(bad)
mov
and
es
push
cdq
ins
inc
mov
clc
rcr
pop
sbb
pop
mov
xchg
in
jne
xchg
sbb
and
and
dec
and
lods
fisubr
jbe
cmps
test
sahf
mov
mov
adc
push
cmps
movs
add
pop
loopne
cli
jmp
js
retf
jmp
stos
push
fmul
sti
call
inc
stos
cmps
mov
jmp
popf
jnp
jge
pushaw
or
fsubrp
fist
iret
(bad)
push
dec
mov
movs
ins
push
rcr
pop
or
mov
mov
push
xor
test
xlat
pop
shr
pop
leave
out
test
pop
div
sti
out
mov
rcl
in
dec
imul
imul
lods
and
sub
pop
xchg
shl
lods
es
fsubr
(bad)
cmps
arpl
mov
and
dec
adc
sub
lea
mov
jns
cwde
mov
cli
sub
cmp
cmp
in
and
mov
call
inc
and
add
cmp
xchg
adc
xchg
test
mov
jp
push
mov
adc
add
and
mov
lock
jl
sub
push
mov
lods
mov
loop
ficom
mov
adc
pop
or
mov
int3
mov
lods
enter
mov
cmp
dec
mov
cmp
in
and
cmp
jne
pop
inc
sub
xchg
jge
cmp
lea
push
jae
in
cmc
into
add
add
cmp
aaa
cmp
inc
ret
xor
dec
dec
aad
mov
cmp
inc
in
xchg
adc
loopne
je
mov
cmp
cmp
push
sbb
(bad)
cld
mov
xor
or
mov
sub
enter
cld
js
dec
jmp
pop
mov
inc
push
adc
pusha
(bad)
loope
add
test
xchg
(bad)
addr16
int3
jo
jns
pop
mov
sbb
pop
push
xor
std
(bad)
es
xchg
inc
adc
aad
outs
cmp
and
mov
cmc
stos
(bad)
pop
int3
cld
mov
js
push
ret
and
dec
jp
adc
inc
in
sbb
mov
lahf
aaa
hlt
test
stos
adc
xor
inc
jl
les
push
(bad)
(bad)
(bad)
lds
fadd
imul
fcomp
ins
ret
in
and
cmp
lea
loope
mov
leave
call
mov
push
ins
push
pop
retf
or
mov
and
mov
cmps
inc
cmps
mov
adc
sub
ret
in
fiadd
xor
inc
jg
mov
mov
les
out
out
xchg
aad
cmp
(bad)
jecxz
inc
xchg
jns
iret
inc
xchg
inc
ret
push
dec
mov
xchg
jmp
mov
cs
and
inc
arpl
(bad)
sub
test
xor
push
jbe
sbb
scas
jne
mov
jg
loope
or
ret
fdiv
cmp
push
std
daa
addr16
xchg
add
gs
dec
pusha
outs
jns
dec
mov
mov
lahf
fwait
or
adc
xor
lods
xlat
int
mov
mov
in
mov
test
pop
dec
shl
jmp
fwait
(bad)
jo
ss
pop
mov
add
xchg
loope
nop
jo
ja
dec
rol
add
adc
mov
int3
fdiv
into
cdq
sub
xchg
push
cdq
enter
xor
not
mov
call
repz
test
shl
or
pushf
and
pop
xchg
jns
out
stos
gs
rcr
es
aas
popa
fs
mov
mov
or
clc
js
fldcw
out
inc
movs
inc
xor
xor
jg
or
xor
aad
mov
(bad)
(bad)
dec
jmp
in
stos
jecxz
push
jg
mov
mov
movsx
mov
fcomp
xlat
adc
sub
lea
ds
push
popa
ins
lahf
or
mov
ja
xchg
mov
cli
pop
cli
lods
jne
push
sbb
scas
xchg
pop
push
scas
cmp
call
xchg
scas
das
or
mov
retf
adc
sub
lahf
sub
mov
jecxz
mov
xor
mov
xchg
shl
mov
mov
arpl
ror
mov
fincstp
push
sub
frstor
xor
adc
popf
jge
xchg
push
outs
cmps
das
mov
sub
ret
outs
retf
add
je
sbb
jae
idiv
call
aaa
retf
ins
cmps
stc
fnstenv
jns
jge
pop
or
or
nop
add
mov
xchg
loop
dec
xchg
or
call
nop
xchg
mov
dec
(bad)
call
neg
(bad)
fbstp
cmp
sub
arpl
mov
dec
(bad)
stc
inc
xor
jne
mov
add
das
jg
push
nop
mov
or
mov
cmps
(bad)
outs
or
or
outs
adc
xchg
mov
mov
pop
cmp
popa
mov
push
aad
mov
fidivr
mov
gs
fisttp
loopne
lahf
xchg
adc
popa
std
mov
movs
xchg
and
in
pop
(bad)
repz
mul
jb
inc
and
(bad)
adc
sar
mov
mov
out
call
pop
inc
rol
ss
push
aam
pop
jae
mov
jbe
add
inc
inc
and
xchg
hlt
adc
imul
mov
aad
(bad)
in
stos
int
xchg
in
adc
stos
test
scas
call
sub
addr16
into
sub
imul
inc
sbb
into
(bad)
iret
pop
stos
mov
cmc
cmc
lahf
loope
arpl
aad
imul
cmps
int3
mov
cli
out
repz
mov
xor
mov
jne
stos
fnstsw
cmc
lods
mov
cmp
mov
xchg
xor
daa
int3
push
or
(bad)
fidivr
jns
xchg
mov
test
movs
mov
add
sub
cdq
jmp
and
jl
in
repnz
fmul
xor
div
(bad)
in
popa
(bad)
sbb
xchg
loop
mov
jmp
cli
push
hlt
enter
mov
xchg
and
cmp
popw
adc
data16
jmp
jge
add
call
sub
xor
pop
sbb
inc
int3
imul
and
clc
add
or
test
mov
nop
div
(bad)
xchg
or
adc
adc
hlt
cmps
and
in
adc
cmp
xlat
sbb
pop
jp
imul
mov
push
inc
lahf
xlat
ret
mov
mov
mov
pop
icebp
adc
enter
imul
xchg
cmp
hlt
cmp
jns
push
pop
xor
pop
add
mov
test
pop
arpl
jne
cmp
inc
mov
cmp
fld
(bad)
cwde
mov
dec
in
popa
addr16
nop
sub
ja
test
mov
adc
loopne
sbb
(bad)
add
jmp
pop
xor
in
bound
in
clc
mov
push
and
idiv
sbb
scas
push
fcmovne
jae
mov
and
and
sar
loop
sbb
inc
(bad)
pop
mov
in
dec
mov
int
les
jle
push
dec
in
pop
push
fcom
das
and
ss
lea
pop
mov
pop
sahf
stc
fwait
aam
cmp
daa
mov
xchg
les
mov
adc
fimul
iret
mov
shr
popf
fwait
nop
repz
xor
push
add
push
gs
pop
nop
push
or
fwait
sub
rcr
mov
stos
in
hlt
loop
arpl
cmovp
sbb
imul
cmc
pushf
pusha
xchg
push
mov
xlat
data16
dec
(bad)
mov
jae
lods
jmp
cmp
or
jp
xor
fnstenv
cmp
adc
cs
inc
clc
inc
xchg
cmps
icebp
mov
mov
test
movs
xchg
jp
jo
fmul
sub
cli
push
mov
scas
pop
stos
std
mov
or
(bad)
cmp
mov
or
mov
pop
fsub
mov
mov
gs
mov
lods
jmp
inc
mov
lds
repz
fldenv
jp
je
inc
dec
arpl
pushf
stos
jb
fsubr
call
cli
pusha
dec
sub
push
inc
xor
ret
data16
jae
jmp
mov
out
popa
pop
xchg
popa
push
pop
cld
imul
outs
mov
aas
sub
int
scas
push
mov
jne
xlat
mov
(bad)
inc
loopne
xor
mov
rcr
test
xchg
sub
jbe
xor
imul
adc
movs
loopne
pop
(bad)
popa
sbb
add
std
outs
adc
int
es
xchg
sub
leave
mov
mov
inc
pop
int3
dec
imul
xchg
adc
sbb
stos
mov
iret
loop
pusha
jb
shl
neg
aas
mov
jb
bound
sub
mov
jmp
pop
cs
fcomp
and
mov
pop
dec
mov
or
inc
xchg
in
push
dec
in
lahf
pop
int3
scas
aaa
ss
retf
dec
je
inc
fcompp
out
stos
inc
pop
dec
pushf
mov
xor
out
jnp
aad
sub
loopne
and
xor
jmp
mov
loop
and
pop
stos
leave
ins
call
push
sbb
sub
inc
xchg
jg
pop
and
inc
push
mov
or
clc
das
xchg
jns
lds
cmps
scas
cmp
cmp
cs
js
js
js
dec
cmp
dec
test
sti
pop
jns
or
pop
add
jmp
dec
(bad)
push
mov
or
xchg
push
test
(bad)
xor
fld
cmp
pop
out
sub
pop
jmp
xor
sbb
div
stc
jge
mov
adc
mov
jnp
inc
or
mov
push
adc
or
ret
mov
or
xchg
mov
pop
cmc
lahf
jmp
inc
ss
icebp
jmp
frstor
adc
stos
sbb
lock
xchg
(bad)
jns
das
movs
xchg
adc
mov
xchg
inc
pop
mov
dec
dec
pop
ret
xor
dec
cmps
(bad)
xorps
xchg
loop
push
repz
nop
(bad)
je
xchg
xchg
mov
jne
fdiv
stc
jae
pop
test
cdq
outs
and
cmp
xchg
add
push
scas
sbb
mov
retf
ds
adc
or
add
jno
js
jl
mov
mov
and
pop
cmp
loop
mov
dec
loop
leave
jecxz
sbb
stc
imul
in
inc
xor
popf
pop
mov
pop
cmps
mov
jg
lea
sbb
inc
cdq
sbb
(bad)
outs
in
mov
dec
and
pop
jb
clc
jmp
pop
neg
add
dec
push
inc
xchg
scas
ror
(bad)
in
sar
sti
mov
aas
imul
pushf
xlat
fnstsw
jecxz
cmps
pop
popa
neg
mov
ds
jmp
add
mov
pusha
jmp
aaa
mov
jbe
inc
out
sub
mov
add
jne
add
jnp
(bad)
jp
mov
int
mov
daa
push
jne
mov
(bad)
jle
out
imul
xchg
mov
jle
lea
xchg
mov
into
shl
loope
mov
imul
jmp
retf
xor
int3
mov
mov
jae
dec
repnz
dec
test
add
add
aad
out
clc
lock
loope
mov
adc
jge
sbb
rol
pushf
mov
ins
retf
leave
ins
sti
xor
retf
and
adc
pushf
xor
cmp
jge
dec
jae
aaa
sahf
aam
jl
scas
and
or
pop
jo
dec
xor
das
pop
and
mov
fldcw
adc
push
pop
mov
div
xchg
ret
cmps
cmps
dec
xor
lods
jl
jae
popa
sub
leave
ficom
(bad)
jnp
movs
sbb
inc
movs
inc
cs
adc
xchg
mov
icebp
xchg
outs
jmp
out
out
imul
add
jae
push
inc
mov
add
xchg
xchg
pop
pop
mov
adc
data16
or
leave
mov
mov
xchg
sbb
or
sbb
icebp
mov
add
or
imul
cmp
js
stos
sub
ins
jp
dec
mov
jle
xor
add
nop
(bad)
xchg
and
xor
mov
rep
movs
xlat
push
and
loopne
or
aas
(bad)
out
loopne
jbe
clc
sar
scas
in
sub
scas
dec
lea
cmp
mov
in
mov
sbb
pop
xchg
jge
inc
mov
mov
jmp
xchg
mov
icebp
mov
les
pusha
add
mov
mov
and
loope
in
inc
loop
movs
test
rcl
mov
sub
mov
icebp
adc
lock
jo
fmul
mov
(bad)
or
xchg
xor
(bad)
pop
jnp
sbb
mov
not
xchg
xor
sbb
in
sub
shr
inc
or
outs
imul
test
jp
or
test
call
pop
sbb
dec
loope
test
and
scas
clc
jbe
xchg
mov
or
jns
and
jle
ins
repnz
sub
cmc
hlt
push
mov
jg
push
and
or
mov
mov
sbb
ds
ja
sub
mov
dec
push
mov
cld
and
mov
xor
push
jge
in
das
sub
bound
jmp
(bad)
mov
push
movs
push
cmp
push
(bad)
and
stos
jb
push
cld
pop
push
xor
cli
call
add
cmp
pop
xor
xchg
aad
outs
lods
iret
mov
adc
mov
mov
and
and
or
test
or
and
bnd
dec
xor
xchg
fwait
fs
retf
mov
add
jno
xor
add
out
fild
retf
xchg
and
xor
adc
mov
xchg
jmp
dec
fistp
push
outs
xchg
mov
cld
add
push
xlat
mov
gs
in
fidiv
pop
movs
mov
jg
in
rol
into
pop
sbb
loopne
out
ins
pop
inc
xor
mov
inc
add
mov
jg
neg
sahf
fst
mov
inc
and
and
mov
xor
rcr
jg
xchg
sbb
and
mov
pop
or
retf
jecxz
mov
stos
jmp
es
push
and
aaa
jmp
xchg
pop
into
pop
xor
cld
jbe
xlat
add
jle
js
(bad)
push
mov
idiv
stc
push
ss
sub
ror
cmp
mov
pop
or
aad
call
ret
or
sbb
imul
std
pop
xor
mov
fdiv
cmp
xchg
pop
cs
cmp
mov
shl
jmp
or
and
popa
jmp
fmul
out
cmp
and
dec
push
jl
inc
push
jecxz
ret
adc
call
in
inc
mov
in
mov
adc
mov
arpl
not
push
xor
sub
and
sub
not
call
inc
pop
stos
pop
add
or
push
push
add
mov
(bad)
mov
mov
push
loopne
shl
repz
pop
xchg
daa
push
mov
mov
fstp
xchg
mov
scas
call
and
out
mov
dec
adc
push
addr16
adc
xchg
push
pop
iret
movs
imul
push
sub
aam
xchg
ds
mov
add
ja
outs
xor
pushf
mov
cmp
aad
or
push
cmp
xchg
lds
xchg
leave
dec
add
out
jae
inc
icebp
xor
sub
mov
adc
mov
pop
xchg
dec
iret
add
or
cmp
daa
lahf
addr16
jg
jg
cmp
push
inc
push
in
or
sub
mov
xor
loop
cmp
rcr
mov
pop
cld
fidivr
dec
sahf
pop
addr16
jecxz
aam
es
repz
cmovo
js
xchg
push
int3
data16
rol
pop
fdiv
xchg
imul
mov
sbb
xchg
outs
data16
sub
enter
imul
mov
or
sti
add
mov
clc
add
sub
and
in
(bad)
sti
xor
dec
es
jp
inc
mov
bound
scas
mov
loope
or
add
xchg
outs
push
adc
mov
sbb
repnz
ds
jl
neg
sbb
(bad)
cmp
in
popf
fldenv
jns
(bad)
pop
scas
jmp
lods
jns
xchg
and
inc
sar
mov
cdq
sbb
pushf
mul
loop
mov
in
dec
sbb
das
dec
mov
lods
arpl
cs
pop
out
jnp
add
cmp
not
push
jge
and
mov
aam
xchg
jge
cmps
xor
xor
cs
cli
je
loope
fnsave
inc
dec
out
push
and
das
in
xchg
enter
call
shl
loop
fistp
imul
push
in
sub
mov
imul
(bad)
repnz
and
call
mov
daa
adc
inc
cmp
jnp
mov
stos
popf
dec
or
repnz
pop
sbb
fidiv
xchg
stos
dec
in
dec
mov
jle
retf
lahf
out
or
stc
pop
jmp
fdiv
(bad)
push
daa
arpl
pop
inc
or
(bad)
sbb
out
in
cmc
cs
cmc
xor
cmp
bound
adc
xchg
outs
and
mov
retf
jne
mov
mov
shr
mov
call
xchg
pop
mov
push
push
idiv
sbb
rcl
jl
test
cli
xchg
call
pop
push
push
jne
xchg
dec
jae
jns
loopne
ja
fld
cmps
pusha
or
add
pop
enter
sbb
popf
jo
or
sub
fs
push
add
or
mov
popa
adc
mov
pop
xchg
jmp
test
jo
sbb
mov
lods
xor
imul
test
mov
outs
xor
bnd
test
cmp
xor
jnp
popa
adc
push
xor
inc
pusha
add
test
dec
inc
or
ror
rol
add
mov
fs
das
add
jle
mov
xor
mov
xor
xchg
sti
pop
aam
fld
add
pop
cmp
sub
mov
or
pusha
sub
frstor
(bad)
pushf
aad
fcom
lods
jl
sub
and
test
mov
sbb
sub
jl
mov
sbb
inc
das
pusha
lods
aam
inc
call
cmp
add
mov
jl
out
pop
cmps
and
push
inc
ins
add
push
fld
mov
or
je
sub
stos
rcr
shl
sbb
enter
mov
movntq
out
ds
movs
fwait
inc
xchg
pop
mov
mov
lea
jl
loop
adc
outs
mov
mov
(bad)
cmp
lock
mov
icebp
mov
fild
and
movs
adc
pop
fidivr
or
cvtpi2ps
jb
sub
mov
lahf
jne
popf
xor
mov
dec
je
adc
jae
popf
dec
loopne
sub
ins
jmp
shl
jns
jmp
sahf
shl
cmc
cld
and
xchg
outs
scas
in
popa
adc
cs
add
(bad)
nop
or
xor
sub
fcom
cmp
add
fucomi
xchg
dec
cs
mov
shl
pop
add
pop
mov
and
mov
pop
cli
jecxz
not
test
sbb
nop
cmp
and
cmps
imul
or
pop
cmp
arpl
aam
cmp
push
pop
inc
sbb
sbb
div
das
mov
inc
gs
sbb
cdq
push
sti
call
mov
(bad)
jg
sbb
cmps
lods
scas
cmps
add
or
icebp
xchg
pop
cmp
aad
jecxz
jo
dec
xchg
dec
pop
loopne
jne
sub
sbb
and
pop
and
adc
mov
stos
shl
sbb
xor
mov
fwait
mov
outs
sbb
and
cmp
je
cmp
cmp
aaa
jmp
push
mov
int
jne
ror
add
sahf
xor
jnp
mov
stc
or
adc
dec
fisubr
mov
es
mov
out
mov
inc
pop
push
mov
nop
repnz
std
and
imul
minps
pop
sahf
out
imul
push
pop
repnz
(bad)
(bad)
adc
rcl
mov
push
mov
mov
jae
aam
sub
push
sub
and
in
push
ror
jbe
loope
jecxz
shl
xor
adc
mov
inc
push
jbe
lock
lods
mov
sbb
sbb
sbb
fwait
mov
jmp
cmp
add
test
or
push
retf
mov
ficomp
inc
mov
bound
lock
lods
and
lods
cdq
cmp
lock
outs
mov
ss
shr
mov
clc
aad
inc
data16
push
add
rcl
es
push
inc
push
pop
lock
pop
cmp
mov
dec
adc
js
push
lods
push
xchg
push
pusha
addr16
test
out
cmp
push
or
fisub
je
xor
int
push
pop
inc
pop
pop
scas
daa
add
ja
jo
pop
mov
je
dec
pop
loopne
inc
and
scas
aad
cmp
jmp
dec
fcomp
sub
std
lock
jp
push
cld
inc
cmp
and
int3
sub
jge
not
cmp
sub
in
mov
cmp
pop
dec
jecxz
ja
xchg
cmps
rcr
popf
jb
stc
push
ror
sub
ficom
gs
and
cld
inc
loope
or
xchg
out
sbb
inc
adc
mov
dec
ror
mov
mov
xchg
add
mov
in
je
ret
idiv
add
xchg
fist
lock
jnp
adc
out
mov
jge
dec
cmp
cmp
and
retf
ror
into
push
jge
(bad)
es
push
jmp
and
adc
lods
movs
inc
stos
xlat
jl
jg
outs
ror
into
pusha
(bad)
imul
sbb
repnz
aad
adc
mov
lods
add
ror
out
(bad)
mov
or
movs
pop
int
or
popf
retf
loopne
push
or
mov
in
xchg
mov
push
cmps
in
push
adc
ret
push
push
test
mov
adc
cmp
pop
fdivr
push
xchg
in
mov
or
xchg
cmps
sbb
push
add
sbb
daa
dec
add
int
test
movs
ror
loopne
in
repnz
cmp
popf
clc
jno
adc
and
pusha
ss
jno
fs
repnz
adc
in
out
je
pop
jo
mov
inc
int3
sti
and
in
cmp
pushf
mov
je
sub
pop
inc
adc
or
sti
jne
loopne
les
aaa
test
add
mov
adc
popw
mov
test
fld
mov
in
lds
(bad)
shl
shr
popf
sbb
cmp
(bad)
cwde
sar
repz
mov
imul
(bad)
cld
jge
(bad)
push
cmp
jecxz
mov
mov
jp
inc
fcomp
ss
hlt
or
hlt
inc
jl
jb
or
sub
and
mov
stos
fst
lea
mov
jge
xchg
cmp
xchg
xlat
add
pop
pop
push
loope
jp
push
scas
adc
pop
popf
fs
inc
pop
adc
mov
pop
jne
sub
dec
jno
sahf
je
fdivrp
xchg
mov
pop
mov
je
mov
lods
dec
jge
add
dec
loopne
dec
mov
mov
adc
fs
mov
xchg
mov
imul
sbb
xor
push
jg
add
mov
imul
scas
mov
push
aad
mov
xchg
add
out
mov
push
inc
fwait
mov
mov
(bad)
mul
sbb
cli
sbb
repnz
push
sub
loope
fwait
stos
cmp
and
inc
scas
jp
xchg
jl
pop
add
inc
jns
jmp
push
mov
dec
or
enter
pusha
mov
pusha
pop
mov
jmp
ret
adc
mov
mov
mov
retf
xchg
loope
mov
dec
push
in
out
and
cdq
retf
gs
ficomp
pop
sbb
push
mov
bound
(bad)
xor
ret
fprem1
xor
fist
out
nop
ins
sti
and
test
mul
ins
xor
es
add
jmp
stos
jmp
sub
cdq
mov
in
push
pop
jge
test
mov
pop
mov
push
clc
sbb
cmps
ficom
lock
push
pop
int3
idiv
mov
sub
jp
xchg
pop
sbb
(bad)
(bad)
dec
outs
xchg
pop
jo
ss
adc
pop
lods
xchg
ss
jmp
inc
test
push
ret
and
pop
nop
pop
aaa
pop
test
hlt
test
sbb
sbb
lods
xchg
mov
call
xlat
outs
out
push
popa
xchg
fiadd
cmps
pop
iret
or
test
cmp
push
cmp
repz
inc
mov
pop
mov
in
mov
jne
dec
push
jb
mov
and
push
mov
sbb
(bad)
test
jno
sbb
adc
(bad)
push
lods
clc
push
mov
sbb
jg
cmc
mov
mov
and
ja
stos
xor
sub
movs
inc
jg
out
push
mov
sub
cwde
sbb
stos
fisttp
adc
enter
out
xlat
xor
mov
out
pop
push
mov
ss
xchg
mov
loop
mov
popa
sbb
hlt
lods
in
repnz
sub
push
(bad)
cmp
data16
jmp
jmp
add
and
xchg
pusha
xor
mov
ins
fcom
mov
out
enter
dec
inc
add
mov
xchg
add
fprem1
cmc
jo
outs
cmc
loopne
add
sub
jno
out
adc
mov
jae
test
adc
sar
inc
ds
mov
xchg
iret
jge
mov
adc
or
les
test
scas
ss
bound
sar
push
pop
test
push
mov
cmps
scas
hlt
test
dec
or
inc
jg
sar
cmp
mov
mov
jbe
icebp
push
mov
sbb
adc
lds
mov
fs
adc
fmul
call
movs
sbb
mov
mov
mov
out
push
rol
mov
shl
punpckldq
jecxz
inc
test
cmp
repnz
int
clc
ret
(bad)
mul
mov
mov
sbb
inc
dec
cmc
fdivr
loop
bound
mov
movs
push
stc
pop
and
daa
and
jnp
cmp
das
test
dec
loope
imul
mov
push
es
fwait
push
inc
fiadd
bnd
mov
aad
sbb
shl
xor
out
cmp
mov
push
pushf
mov
xlat
inc
jb
xchg
xchg
fld
adc
jmp
dec
xor
and
push
and
fidivr
or
movs
ret
in
dec
pop
ins
in
fstp
dec
jae
in
push
rcl
cs
stos
xchg
mov
mov
mov
stos
add
cmps
pop
pop
xor
(bad)
inc
pop
aad
stos
push
jno
dec
and
mov
add
mov
mov
mov
cmp
data16
aad
cli
xchg
add
cs
fmul
aas
pop
pop
cmp
std
adc
mov
dec
jp
fadd
xchg
add
je
fild
ret
pop
or
add
push
(bad)
fwait
lock
xlat
sub
push
mov
mov
jmp
mov
or
jo
mov
bound
stos
sub
fnsave
xchg
cmp
pop
adc
lock
stos
mov
xor
iret
push
inc
loopne
inc
cmp
xchg
rol
jns
sbb
mov
pop
das
xchg
xlat
lea
sbb
push
pop
push
frstor
addr16
ds
(bad)
adc
vcmppd
sbb
(bad)
or
cmc
addr16
jle
sub
mov
inc
jb
movs
stos
shl
add
xchg
adc
gs
hlt
push
dec
hlt
sub
not
data16
dec
loopne
inc
xchg
add
movs
loop
mov
xchg
jbe
adc
nop
mov
lock
push
imul
stos
dec
mov
adc
ja
jmp
adc
out
es
inc
cmp
jae
push
xor
sub
stc
out
mov
call
cli
js
std
ins
imul
mov
fdivr
adc
dec
push
or
sub
ret
or
or
xchg
int3
mov
mov
cli
repnz
xchg
push
push
push
fcomp
test
dec
sahf
cmps
mov
mov
stos
add
inc
push
fsubr
pusha
pop
mov
neg
rcl
pushf
movs
mov
lea
and
test
test
not
and
mov
mov
adc
test
sub
jp
in
push
addr16
push
or
cli
pop
shl
pop
inc
shr
int3
add
jne
bnd
and
cmps
inc
aas
adc
and
xor
push
xchg
imul
lahf
ds
xlat
ja
dec
xor
stos
mov
fst
call
inc
sbb
sbb
or
sbb
sub
sahf
daa
xor
not
repz
or
retf
xor
inc
ja
(bad)
fcmovb
dec
lahf
adc
(bad)
jmp
loopne
lock
push
test
mov
aad
jp
cmp
imul
jo
xor
mov
inc
push
(bad)
mov
mov
mov
test
dec
pop
movs
test
and
pop
fcmovb
les
stos
int
(bad)
xor
stos
mov
push
xchg
enter
dec
loop
fs
or
fadd
push
loop
nop
sbb
nop
dec
pop
sub
xor
and
es
or
loope
xlat
sbb
push
push
push
adc
cmovbe
arpl
inc
mov
test
out
push
out
dec
fdivr
gs
xchg
cmp
stos
pop
mov
sbb
dec
push
add
mov
mov
rol
pop
push
and
popf
inc
jp
xor
cmps
mov
mov
pop
jecxz
int3
stos
(bad)
(bad)
stos
cmp
imul
arpl
dec
(bad)
and
sbb
and
mov
movs
dec
add
pop
adc
enter
addr16
dec
and
inc
or
and
daa
(bad)
cmp
imul
test
pusha
push
movs
pop
enter
shr
mov
adc
cld
mov
cmp
push
push
daa
xor
jmp
jnp
sbb
int
push
inc
push
and
pop
pushf
shl
ret
(bad)
jecxz
fcmovb
push
movs
add
loop
fstp
push
cmps
scas
out
std
(bad)
sbb
mov
jle
test
pop
gs
mov
sbb
cmps
imul
mov
push
clc
add
out
(bad)
cli
jle
loopne
bound
test
neg
push
and
jle
scas
imul
lods
jne
jbe
ds
mov
retf
leave
fist
pop
xchg
ret
stos
ds
xchg
or
and
pop
jmp
push
jmp
rcr
popf
sahf
or
push
fs
push
push
push
mov
icebp
mov
add
sub
enter
xor
xchg
xchg
cld
cmp
sub
adc
fisub
jmp
shl
add
jle
fucomi
es
jo
inc
adc
jmp
lea
inc
adc
or
pop
dec
jp
scas
(bad)
aaa
loopne
inc
mov
lds
outs
add
loopne
cwde
sahf
(bad)
sub
adc
xor
jle
cmp
mov
jbe
mov
imul
imul
add
stc
mov
aas
sub
push
lods
retf
lahf
mov
push
loopne
push
jmp
nop
xor
push
jmp
jle
xchg
bound
jge
dec
sub
aad
movs
pop
push
push
cmps
fwait
pand
sub
mov
int3
push
loopne
outs
mov
jb
lea
dec
callw
imul
jne
jecxz
mov
xchg
inc
jp
in
jl
test
pop
cs
les
sub
cmp
push
out
jne
push
dec
cli
jge
pop
ins
and
(bad)
fstp
loope
dec
mov
sbb
mov
push
loopne
fwait
loop
adc
js
mov
mov
pop
jns
xor
dec
aam
xlat
sar
cmp
lahf
pop
cmp
dec
pop
cmps
push
scas
and
mov
or
jno
in
movs
rol
add
jmp
push
jmp
sbb
or
and
sub
std
push
dec
leave
mov
mov
rcl
jo
ds
sub
outs
xor
xchg
sub
lods
sub
lock
and
ret
loopne
fadd
pop
inc
mov
xor
jne
lock
jno
or
push
sbb
push
fpatan
aaa
stc
mov
lock
shr
jmp
pushf
pop
ins
pushf
loopne
out
and
and
mov
sub
call
addr16
std
mov
xchg
mov
fiadd
sub
(bad)
fadd
mov
or
sbb
loop
pop
mov
loope
call
jno
xor
fistp
add
test
xchg
retf
inc
ss
ffree
jmp
jecxz
xchg
cdq
imul
movs
dec
pop
sahf
ret
mov
daa
sub
push
and
ficom
aas
gs
scas
retf
cmp
dec
out
inc
jb
mov
and
mov
loopne
in
imul
mov
xchg
sub
mov
or
fs
out
jmp
inc
mov
out
push
int3
out
pop
mov
inc
inc
cmps
clc
fistp
mov
ror
adc
aas
push
pop
push
mov
push
test
xor
call
push
sbb
mov
(bad)
js
or
outs
scas
cmp
lods
arpl
ret
les
out
cmc
ficomp
div
pop
and
loopne
jmp
add
aad
(bad)
adc
adc
xor
dec
xchg
lea
dec
jns
jbe
cmps
test
jb
adc
mov
fisttp
or
fwait
sub
lods
sub
aam
mov
mov
jbe
inc
into
ds
inc
xor
adc
test
adc
cmps
pop
into
cmp
lahf
pushf
push
ins
sub
(bad)
(bad)
cmp
stc
push
out
adc
jmp
(bad)
inc
push
jo
pop
and
inc
inc
xchg
retf
scas
mov
cdq
lea
or
sub
int3
fdivp
adc
std
sar
int3
mov
and
hlt
outs
sbb
neg
retf
dec
inc
ins
mov
jge
jb
rcl
mov
dec
aaa
adc
dec
jne
gs
inc
in
test
pop
(bad)
or
sbb
add
mov
lods
addr16
not
xor
div
xchg
mov
(bad)
aas
jo
cmp
inc
aad
clc
mov
cmp
sbb
mov
or
(bad)
or
sub
dec
push
or
retf
test
inc
push
pop
sub
popf
(bad)
cmp
ror
mov
xor
fs
xchg
(bad)
stos
mov
rol
imul
push
outs
or
mov
cmp
loope
dec
in
push
dec
(bad)
icebp
pop
rcr
arpl
stos
inc
(bad)
mul
dec
daa
mov
repz
jmp
dec
push
adc
cld
popf
sub
outs
scas
jp
and
enter
test
jl
aad
mov
enter
out
push
stos
jnp
xor
ror
mov
xchg
out
cmp
xchg
jmp
add
pop
or
fdivrp
(bad)
not
xor
mov
in
sub
xor
ret
sub
rol
adc
mov
sub
loop
mov
repnz
xor
call
mov
jns
test
dec
jle
repz
or
js
jne
nop
cmp
jbe
dec
mov
pop
jp
push
xor
push
sub
aaa
(bad)
(bad)
je
in
in
fucomp
mov
ss
vmovss
adc
push
dec
in
push
xlat
cmp
movs
xlat
xabort
mov
into
hlt
neg
imul
sub
scas
or
ror
jmp
cs
jecxz
adc
pop
dec
shl
icebp
jno
sbb
inc
xchg
sbb
data16
xchg
dec
push
mov
add
loopne
mov
cmp
mov
xor
hlt
add
clc
sub
jle
hlt
outs
dec
repz
rcr
fs
test
or
push
fist
lahf
mov
sbb
jo
pop
fs
enter
and
and
ins
(bad)
mov
ins
xchg
repz
lods
lock
into
dec
jbe
fcom
cmps
nop
retf
jns
sub
mov
mov
push
sub
adc
mov
lods
inc
adc
pop
sub
inc
mov
ror
rcr
push
lea
aad
rol
js
or
jmp
sub
and
aas
mov
xchg
sub
out
jbe
push
popf
fcom
es
jns
repnz
out
push
mov
jge
pop
add
aaa
add
xchg
inc
repz
push
inc
rcl
fidiv
ds
mov
ja
cmp
ret
pop
xor
cld
adc
xlat
mov
movs
sub
in
xlat
ficomp
jnp
aam
mov
fild
repz
popf
push
and
mov
xchg
xor
in
scas
pop
xchg
mov
je
pop
dec
push
xlat
leave
dec
in
dec
push
mov
mov
xor
test
stos
push
cld
dec
jns
in
mov
cmp
xchg
stos
repnz
in
xor
mov
pop
pop
xor
fnsave
mov
adc
in
xchg
js
add
repz
not
xor
sti
rcr
fdivr
mov
push
or
hlt
out
inc
in
lds
cmp
cmp
jmp
xchg
xor
shr
add
pop
loop
pop
sahf
mov
sbb
outs
(bad)
mov
rcr
fld
lock
mov
sub
push
in
add
mov
jge
rol
pop
cmc
and
and
popa
pop
das
test
in
push
jno
aam
lods
imul
cmp
sbb
idiv
repz
jns
js
sbb
pop
test
mov
mov
mov
pop
mov
xchg
ret
shr
jb
fdivr
hlt
jno
or
jmp
mov
aas
js
(bad)
out
jmp
fwait
jle
scas
ins
xchg
movs
movs
ret
aam
les
js
xor
imul
jl
aas
rol
mov
sahf
jl
into
das
(bad)
scas
dec
(bad)
in
jp
sbb
push
scas
sub
push
push
mov
or
call
movs
(bad)
jmp
test
or
icebp
repnz
aad
adc
pushf
xchg
call
fld
xchg
and
sub
cmp
adc
pop
add
xchg
jmp
mov
pop
pusha
cld
fs
pop
jg
mov
add
inc
movs
dec
push
imul
cmps
xlat
sti
add
loope
cli
push
cmp
push
xor
pop
inc
pusha
cld
push
jle
lods
mov
outs
cmp
jg
lods
add
mov
xchg
jecxz
retf
push
mov
ja
std
push
adc
inc
in
out
cmps
stos
test
xor
push
retf
(bad)
jne
mov
mov
test
mov
aas
mov
aam
dec
xchg
enter
mov
div
fwait
adc
add
outs
jl
adc
not
mov
xor
sahf
and
dec
bswap
sub
loope
rol
push
fisub
adc
test
adc
jbe
jg
shr
push
out
jbe
aas
sbb
ins
ss
pop
out
inc
mov
shl
and
sub
frstor
or
ret
clc
rcl
cld
imul
in
and
and
(bad)
pop
bt
xchg
shl
mov
jmp
or
pop
lahf
out
fs
popf
xor
push
repz
pop
(bad)
test
adc
aam
stos
lods
pushf
cmps
loopne
add
fisttp
mov
jp
retf
std
dec
jmp
inc
movzx
call
lods
push
mov
inc
jb
sub
inc
and
cmp
adc
push
in
stos
pop
dec
mov
stc
mov
in
adc
in
sbb
(bad)
retf
neg
inc
call
shl
jmp
xchg
out
mov
fcomp
inc
push
loop
fs
stos
cdq
sub
jns
cmp
pop
mov
stc
or
sub
add
in
leave
sbb
fwait
in
cmc
inc
fld
sbb
dec
sbb
leave
das
stc
loop
shl
inc
inc
lahf
out
lds
sub
jg
pushf
xchg
dec
mov
out
(bad)
jnp
and
inc
(bad)
mov
adc
or
xor
pop
push
fild
pop
ds
loopne
cmp
jne
(bad)
adc
(bad)
mov
(bad)
mov
xchg
fist
pop
pop
ss
mov
ja
xchg
hlt
cmp
sbb
clc
jp
dec
ja
and
jmp
repz
cli
adc
imul
mov
cmps
ins
int
movs
sub
add
mov
sbb
fnsave
jns
ja
nop
(bad)
xor
aas
sbb
lods
mov
hlt
sub
int3
jle
lea
adc
rol
ret
leave
clc
jae
sub
lea
adc
mov
leave
(bad)
imul
push
repz
mov
xor
stos
stc
jo
(bad)
(bad)
fisttp
sbb
cmp
or
mov
pop
push
lods
std
cmp
push
xchg
mov
shl
shr
jnp
imul
xchg
pop
and
and
add
cmp
xchg
inc
test
jmp
(bad)
mov
test
cmp
fadd
mov
sahf
jmp
loope
(bad)
add
cmp
inc
scas
inc
out
inc
in
fwait
push
neg
jge
adc
add
xchg
jae
pop
sahf
xor
mov
cmc
jle
xchg
lea
sahf
lock
pop
sbb
out
outs
in
xchg
clc
mov
add
iret
mov
pop
gs
test
or
test
loopne
cmp
xor
mov
cli
shl
pusha
test
xor
(bad)
mov
in
loopne
jle
mov
xor
aaa
fwait
xor
and
and
and
out
lds
xor
cmp
dec
add
ins
adc
mov
inc
fdiv
in
(bad)
mov
jbe
in
sar
jg
inc
mov
sbb
data16
dec
jmp
idiv
(bad)
jo
mov
xchg
aam
jns
mov
push
out
dec
(bad)
adc
jns
lds
and
cld
adc
jge
inc
xchg
fnstenv
ss
jle
inc
sbb
add
pop
jl
mov
scas
retf
pop
add
adc
push
rcl
clc
or
lahf
jb
dec
mov
ja
jle
xchg
push
aas
mov
ins
or
fsubr
mov
pop
jbe
push
adc
push
cmp
test
cs
xor
cld
mov
and
or
cmps
into
repz
sub
(bad)
enter
or
pop
inc
pop
retf
sbb
mov
dec
cwde
imul
xor
mov
dec
rol
xlat
ror
and
push
imul
xor
xchg
xor
xor
scas
or
mov
icebp
adc
mov
dec
outs
(bad)
mov
movs
movs
sbb
xor
shr
jg
jo
inc
out
call
fstp
outs
or
or
je
ja
inc
mov
mov
jbe
mov
lahf
out
repnz
mov
call
dec
sbb
imul
push
inc
push
add
cs
aaa
xchg
pop
mov
cmps
jp
mov
test
sti
stos
xchg
cmps
ss
jae
sbb
dec
and
das
xchg
sti
adc
xor
icebp
arpl
in
clc
mov
dec
sbb
repnz
push
cwde
adc
sub
mov
jmp
mov
loope
dec
xor
iret
sub
ja
sbb
gs
xchg
jge
inc
sub
not
arpl
mov
(bad)
cmp
outs
(bad)
fs
pop
adc
mov
ds
jo
aaa
mov
jb
fadd
pop
mov
push
or
popa
add
inc
jmp
mov
dec
(bad)
hlt
adc
(bad)
ja
test
and
pop
adc
cld
cmc
and
or
arpl
mov
mov
pavgb
imul
sbb
lds
jno
fsub
mov
pop
je
sti
cld
pop
pop
jo
jbe
daa
mov
jo
aaa
gs
test
imul
cmps
xchg
sub
shr
fcom
xchg
fwait
je
(bad)
out
out
or
shl
xor
fstcw
repz
in
mov
lea
and
outs
not
int
push
add
inc
mov
inc
cli
mov
pop
adc
push
ins
cmp
or
in
inc
sti
ja
fbld
push
cmp
push
and
mov
add
outs
sbb
inc
fdivr
push
out
shr
mov
pop
push
push
cmps
test
inc
inc
sub
outs
or
or
pop
cmp
xchg
push
mov
inc
das
ss
mov
mov
aaa
out
test
or
adc
lds
add
imul
ss
add
out
fst
sub
or
jns
cs
xlat
ins
sahf
add
adc
or
fisttp
sar
dec
mov
jecxz
jns
sub
call
push
js
loope
push
ins
sub
sub
outs
sbb
call
dec
inc
stc
or
mov
enter
clc
sbb
dec
repz
je
pop
mov
nop
cmps
mov
xchg
fstp
fwait
or
dec
popf
push
push
add
sti
inc
or
lahf
fbstp
repz
push
bound
imul
sub
pop
rcr
adc
test
out
jp
mov
sub
mov
clc
cmps
cdq
shl
cld
sbb
imul
mov
test
jmp
adc
rcr
xchg
test
push
push
push
sub
fdivr
test
fstp
jl
push
(bad)
iret
ficomp
js
arpl
push
pop
jle
pop
call
clc
je
inc
hlt
mov
xchg
scas
jg
xchg
dec
push
repnz
daa
nop
sahf
sbb
shl
cmp
xchg
cs
xchg
test
cs
sbb
sbb
jo
push
mov
jg
in
mov
inc
push
outs
inc
fdiv
imul
sbb
sbb
out
mov
or
psrlw
push
push
fdivp
lock
jns
ror
jb
xor
retf
pop
xchg
mov
mov
jle
cmc
push
dec
or
les
pop
stos
mov
push
jecxz
mov
pcmpgtw
(bad)
jnp
ss
mov
mov
cs
xor
lock
fidiv
mov
adc
xchg
and
cmp
pop
mov
cmp
jo
pop
dec
and
add
mov
and
in
sbb
hlt
cmp
jp
xchg
out
xchg
pop
stos
sub
(bad)
loopne
mov
mov
push
mov
shl
int3
sbb
in
test
jmp
movs
aas
imul
fimul
loopne
dec
aad
lods
call
push
or
sub
push
inc
mov
adc
mov
or
repnz
mov
xchg
pop
test
push
loope
ror
push
psubsw
aas
and
in
mov
pop
sbb
aaa
lea
not
das
(bad)
stos
scas
inc
pop
pause
dec
inc
pop
popf
or
push
jecxz
jbe
popf
mov
sub
push
mov
or
pop
xchg
jecxz
adc
xchg
jae
out
cmp
mov
sub
xchg
mov
sbb
loope
cmps
test
(bad)
aad
movs
aam
hlt
dec
jnp
jecxz
pop
jmp
mov
test
cmps
aam
xor
outs
sub
sbb
and
and
js
fsubr
(bad)
mov
in
xor
dec
jnp
and
icebp
xchg
iret
fdiv
into
sbb
imul
stos
lds
push
cmp
outs
cli
pop
hlt
test
jne
jmp
push
or
adc
cwde
push
out
mov
xchg
int3
xor
pop
mov
popf
inc
dec
into
and
mov
xchg
(bad)
(bad)
push
jecxz
sti
push
shr
clc
outs
cmp
mov
mov
jecxz
inc
pop
pop
jmp
xor
jae
and
je
sar
jmp
jns
lahf
or
pusha
scas
mov
mov
pop
cmp
jb
stos
stos
mov
sbb
out
loopne
pop
push
cmp
or
sub
add
aas
push
fmulp
sub
movs
(bad)
ins
mov
shl
xchg
cmp
fadd
std
cmps
je
jae
jmp
lea
sbb
mov
sub
xlat
and
jp
scas
jmp
pop
add
or
scas
mov
dec
cmp
std
cmp
not
pop
xchg
inc
dec
mov
and
mov
push
in
mov
jae
mov
popf
mov
or
test
pusha
xchg
xchg
xlat
mov
pop
test
not
aam
and
inc
adc
movs
outs
push
lahf
sbb
jg
xor
jne
pop
pop
(bad)
xchg
outs
loop
pop
sbb
je
popa
xchg
mov
jecxz
sub
push
aam
push
adc
pushf
lahf
sub
push
pop
and
enter
dec
popa
push
xor
jmp
sbb
ficom
bound
xchg
ins
sbb
jmp
and
push
inc
adc
pop
mov
jecxz
cdq
(bad)
mul
mov
addr16
or
ret
daa
pusha
add
xor
test
jne
mov
push
jne
cmp
xchg
loopne
scas
int3
int3
in
repz
(bad)
out
dec
sti
ficomp
jb
mov
add
das
movs
jl
push
xchg
daa
ins
push
stos
repz
movs
repz
les
adc
mov
adc
stos
(bad)
addr16
jmp
sub
mov
dec
push
adc
xchg
inc
(bad)
movs
sbb
push
jge
jg
les
(bad)
jge
push
cmp
ins
outs
aam
imul
fstp
in
sbb
clc
pop
mov
aas
dec
mov
ror
cmp
adc
mov
xchg
pop
rcl
xor
mov
pusha
push
je
imul
repz
movs
ffree
sub
mov
dec
jmp
ins
ret
dec
dec
std
pusha
xchg
sbb
adc
jmp
adc
xchg
hlt
fidiv
or
jmp
mov
test
ja
xchg
jbe
in
(bad)
imul
pop
adc
cmp
leave
je
ret
pcmpgtb
popf
inc
push
xor
jns
test
div
jne
push
dec
sbb
repnz
fs
mov
cmp
into
mov
xor
jmp
sbb
scas
lods
retf
test
push
jne
es
mov
pop
jmp
inc
push
sub
sub
fwait
hlt
stos
inc
jns
test
hlt
pop
jecxz
int3
retf
dec
shr
out
sub
data16
ss
out
mov
mov
(bad)
int3
jae
or
sub
mov
ret
push
cs
inc
retf
sti
sbb
push
adc
jmp
sti
imul
dec
push
out
xchg
aad
jle
scas
ins
nop
scas
sbb
inc
jo
test
adc
push
sbb
(bad)
jnp
(bad)
cs
call
sbb
arpl
out
sahf
sbb
(bad)
jo
adc
stos
sar
sub
fwait
addr16
jecxz
jo
jge
ins
xchg
or
ror
or
jge
cli
mov
push
cmp
sbb
xor
cmp
add
pusha
jmp
mov
gs
or
inc
mov
stc
arpl
push
idiv
pop
stos
stos
adc
(bad)
sbb
and
loope
fld
(bad)
movs
sub
outs
scas
(bad)
in
or
call
cmc
cli
(bad)
loope
adc
pop
jno
and
sbb
mov
lods
adc
mov
or
xor
js
adc
xor
enter
xchg
mov
xor
out
mov
nop
es
cli
dec
jg
sbb
fbld
xor
rol
sub
jno
loopne
rcr
dec
popa
leave
inc
test
sub
cwde
test
dec
pop
xchg
inc
cs
cs
iret
arpl
loopne
mov
lods
bound
mov
sub
and
or
out
sub
push
ret
std
and
push
(bad)
retf
xor
mov
xchg
add
fwait
add
push
cmp
and
cmp
adc
push
mov
fidiv
cmp
adc
shr
js
mov
arpl
xlat
mov
pop
or
mov
or
cmp
jmp
dec
fisubr
push
inc
cwde
adc
sbb
pop
jl
push
call
in
cmp
or
inc
jae
push
bound
add
aad
and
sbb
mov
in
push
aas
mov
pop
and
cmp
push
ja
xor
les
popa
xor
loope
dec
jg
push
push
jo
sahf
scas
mov
xchg
mov
adc
push
pop
nop
pop
mov
mov
retf
ret
retf
js
fadd
mov
(bad)
pop
dec
xchg
and
xor
scas
and
sub
fcmovne
push
test
aad
mov
xchg
inc
xor
repnz
(bad)
gs
or
dec
sbb
add
fisttp
cmp
dec
mov
int3
(bad)
adc
data16
mov
scas
jp
pop
xchg
or
aad
scas
push
mov
inc
add
cwde
(bad)
xchg
mov
jmp
imul
daa
pop
jg
repnz
das
sahf
inc
adc
or
pop
mov
fnstcw
inc
cmp
cld
mov
mov
push
sbb
jb
push
retf
retf
shl
inc
dec
retf
cmp
in
add
add
ja
add
and
xchg
aam
jge
stc
lods
mov
ja
xor
inc
xor
mov
pushf
jmp
retf
sbb
packssdw
jge
movs
adc
shl
iret
xor
out
push
lods
fstp
pop
das
mul
mov
popf
sbb
cmc
aas
xor
xchg
loopne
or
sbb
mov
mov
in
or
pusha
jne
bound
fcomp
les
outs
into
std
inc
cmc
or
fsub
mov
push
cmps
lods
mov
out
mov
xor
fiadd
in
lods
call
or
outs
push
push
(bad)
clc
cmps
jmp
addr16
mov
cmp
inc
sbb
push
sahf
mov
jns
add
ret
mov
or
cmp
jne
jecxz
js
mov
xchg
xor
das
stos
mov
xchg
iret
mov
ret
hlt
loop
mov
xchg
jbe
fnsetpm(287
mov
add
jg
sub
lds
jge
arpl
adc
push
jae
xchg
push
jle
pop
sbb
inc
aas
aaa
js
cld
jle
push
ins
(bad)
xchg
out
xor
adc
rcl
mov
gs
cmp
inc
aam
leave
pop
fiadd
je
pop
leave
nop
fnstenv
dec
xchg
pop
cmp
push
fisub
push
jmp
jge
mov
rol
jno
fmul
xchg
int3
xor
pop
xor
pop
mov
js
inc
inc
daa
dec
ds
pop
or
pusha
jnp
js
in
sar
mov
mov
cmp
push
mov
stos
xchg
sbb
clc
or
cmc
stc
dec
pop
imul
mov
mov
push
ins
bound
add
daa
andps
jae
adc
adc
clc
or
mov
movs
sub
movs
xchg
sbb
cmc
fwait
loopne
sub
(bad)
jecxz
push
movs
or
lock
and
mov
mov
cmp
mov
or
adc
sub
mov
cs
xchg
ja
(bad)
and
cs
adc
mov
sub
xor
inc
adc
ins
sub
in
lods
das
(bad)
fcomip
push
add
loopne
lock
cmp
shl
leave
and
fist
jmp
gs
sti
push
popf
pop
in
and
inc
out
test
cmps
in
sub
stos
jbe
xchg
jp
push
aad
push
mov
push
in
shr
sub
push
lock
push
xchg
mov
cmp
xchg
mov
call
pusha
and
imul
(bad)
test
pop
xchg
mov
loop
and
lods
mov
dec
loope
pop
push
xchg
aaa
jmp
mov
jl
aam
inc
in
add
(bad)
sub
cmp
mov
pop
xchg
call
hlt
popa
jmp
into
int3
mov
in
sbb
call
or
sbb
or
sbb
fwait
and
add
movs
into
shl
test
cmp
sti
icebp
daa
pop
(bad)
frstor
int3
daa
cmp
outs
aam
adc
int3
outs
pop
ror
add
dec
push
inc
loop
ret
fnsave
iret
and
cmc
and
ins
mov
outs
nop
sar
mov
mov
sbb
icebp
mul
daa
bound
sub
pop
call
push
ror
mov
into
fistp
mov
aas
or
ds
retf
(bad)
xor
hlt
inc
sub
pop
es
stc
inc
and
or
or
mov
daa
ins
shl
call
cmp
lods
jbe
jl
dec
shl
adc
jbe
cmc
call
scas
jp
push
mov
inc
in
lock
test
pop
inc
xchg
add
xor
sbb
cmp
jb
cdq
out
(bad)
xlat
aas
int3
rcr
adc
in
scas
loop
repnz
push
test
int
shl
es
outs
pop
enter
in
icebp
fwait
dec
sbb
(bad)
(bad)
nop
int
push
xlat
xlat
cmp
push
inc
xchg
pop
push
mov
mov
jl
xchg
push
lods
jbe
inc
in
xchg
mov
into
(bad)
in
jle
add
pop
bound
xchg
mov
rol
mov
sbb
inc
pusha
adc
(bad)
shl
icebp
enter
(bad)
fistp
pusha
xchg
sub
movs
stos
add
lods
sbb
mov
mov
lods
imul
xchg
mov
adc
in
push
in
adc
mov
xchg
dec
pop
int
push
jo
(bad)
nop
dec
cmps
xchg
cmp
mov
iret
sbb
pop
shl
add
inc
jne
inc
enter
inc
xor
adc
dec
scas
(bad)
cli
push
into
retf
sbb
jmp
popa
pop
daa
pop
ins
xor
sysenter
in
hlt
cmp
test
int
ss
cmp
daa
inc
mov
mov
jg
mov
pop
out
scas
pusha
outs
ds
popf
je
or
mov
jp
lea
psubq
cmp
ds
xchg
xor
(bad)
into
pop
or
adc
jmp
call
mov
fsubr
pop
xchg
in
int3
jb
aam
xchg
xchg
xchg
loopne
enter
lea
test
dec
dec
and
fs
pop
loopne
sub
das
inc
outs
sbb
sub
call
mov
call
jmp
popa
jns
jb
(bad)
mov
dec
aad
push
test
sub
scas
movs
popf
clc
repz
std
xchg
pop
popf
dec
lahf
push
mov
test
cmp
jbe
retf
xor
add
mov
arpl
push
or
data16
pop
sub
add
and
and
mov
add
daa
aad
jg
mov
fld
or
scas
pop
pusha
and
int
iret
sub
push
shr
repz
scas
(bad)
movs
neg
outs
in
mov
pop
mov
cmps
jnp
or
push
aam
sbb
jg
gs
fsubr
clc
cmp
sub
add
pop
push
jg
fistp
xor
inc
fiadd
and
xor
shr
in
adc
pushf
jl
dec
push
(bad)
dec
dec
and
call
jbe
dec
pop
and
xchg
xchg
das
jne
outs
cmps
daa
sbb
dec
movs
push
mov
cdq
gs
add
sub
hlt
aas
xor
mov
and
xchg
push
mov
and
fs
mov
and
mov
inc
cwde
push
outs
ins
pop
pop
jnp
mov
data16
cs
xlat
or
mov
sub
clc
add
call
scas
pop
je
(bad)
addr16
push
in
(bad)
cld
and
cdq
cmps
inc
and
imul
test
push
and
xchg
xor
jle
adc
cld
add
cmp
dec
mov
sbb
jg
mov
lods
mov
or
call
jge
inc
xor
push
lahf
xchg
jl
imul
cmp
push
je
jno
jg
sbb
cmovae
fs
cs
jno
scas
ror
jecxz
arpl
(bad)
iret
fmul
mov
cli
pop
lahf
mov
jnp
cmps
into
sub
nop
mov
pop
mov
in
mov
inc
fcom
sub
xchg
mov
pop
push
lods
mov
dec
shl
push
and
out
mov
daa
scas
out
sub
movs
inc
fstp
mov
pop
(bad)
popa
pop
movs
mov
out
or
pop
adc
inc
jbe
test
mov
mov
pop
dec
das
sbb
aam
and
sbb
cmp
pop
test
push
sub
lods
jns
sub
xchg
pop
cmc
rcr
xchg
rcl
popa
enter
jb
lahf
mov
shr
scas
cli
jecxz
dec
lds
mov
pop
test
mov
icebp
addr16
outs
mov
and
mov
or
jge
dec
dec
movs
dec
push
addr16
xor
test
add
sti
jb
jecxz
xor
das
pushf
not
bound
ss
dec
out
test
ja
fbld
hlt
in
shr
add
xchg
or
(bad)
in
pop
fsubr
push
sbb
adc
mov
cmp
pop
jnp
mov
ds
iret
pop
mov
cmp
jecxz
sub
bound
add
inc
jo
or
push
mov
scas
in
ret
sbb
cmps
or
rcr
cmc
xchg
ficomp
push
xor
scas
test
in
inc
xchg
jb
or
frstor
sbb
xchg
int
or
nop
aad
xor
mov
mov
pop
xor
out
add
pop
push
sar
push
push
(bad)
and
ins
icebp
or
in
jb
and
out
add
pushf
out
aam
pop
into
cmps
xor
int
sbb
pop
out
or
xor
add
mov
fwait
nop
xchg
iret
or
cmps
cwde
inc
clc
jne
mov
inc
cmp
xchg
pop
inc
lock
mov
dec
sbb
enter
hlt
inc
push
jp
push
jmp
mov
inc
aas
test
es
mov
inc
mov
jmp
sbb
arpl
inc
aaa
mov
cwde
xor
sbb
adc
pop
ds
rcl
mov
and
cmps
push
arpl
mov
xor
push
xor
rcl
call
cmp
cmp
out
sub
add
data16
cli
ret
sub
test
ds
pop
es
inc
stc
pop
pop
sbb
arpl
jnp
add
adc
pop
mov
xchg
mov
addr16
sti
cmp
shl
cmp
inc
cli
retf
(bad)
mov
or
mov
mov
es
ins
xor
test
sbb
mov
push
cmp
call
in
daa
push
or
les
mov
jle
jmp
sar
clc
fcom
(bad)
mov
jp
scas
pop
mov
mov
mov
sub
jp
pop
stos
aas
cli
outs
retf
lahf
xchg
fwait
xor
int3
ins
jns
cwde
mov
mov
pop
xchg
cmp
mov
pop
inc
shl
or
or
fdivr
mov
pusha
xor
iretw
push
push
push
push
cmp
iret
(bad)
dec
adc
push
js
retf
stos
fdivr
mov
sub
jmp
xor
popa
add
pop
push
xchg
jnp
jae
cmps
enter
mov
jp
dec
jle
dec
fcomp
popf
pop
mov
xor
or
push
ss
test
icebp
mov
sbb
cmps
or
ins
and
push
or
arpl
mov
retf
or
push
and
movs
or
push
mov
sbb
or
int3
xor
inc
sub
(bad)
dec
lods
xor
xor
inc
mov
jge
mov
jb
mov
jae
cdq
cmp
pop
in
ror
xor
leave
adc
inc
pusha
jmp
fidiv
dec
jge
and
jl
push
es
jge
jbe
(bad)
(bad)
adc
out
lock
push
mov
enter
mov
rcr
jecxz
cwde
mov
sub
add
stos
test
in
inc
(bad)
call
test
xor
pop
aaa
inc
inc
mov
ins
jnp
outs
ss
pop
xlat
mov
shl
mov
test
lods
call
test
cmps
jno
jne
popa
pop
mul
fild
mov
gs
test
inc
cwde
ins
mov
dec
(bad)
push
add
dec
push
push
movs
mov
jo
pop
retf
push
ror
loope
aas
outs
test
mov
mov
(bad)
lock
dec
jle
mov
mov
jns
ins
aaa
js
das
clc
xlat
mov
mov
das
xchg
ficom
and
jae
push
dec
cli
push
sub
arpl
icebp
out
into
xchg
(bad)
mov
add
movs
adc
or
pop
pop
adc
mov
int
jno
lds
jmp
into
mov
movs
adc
cdq
jg
jno
jno
adc
ja
or
pop
mov
push
adc
aam
cmps
sbb
(bad)
retf
sbb
mov
jb
push
test
mov
inc
sub
cmps
mov
cmc
sbb
shl
pop
retf
jnp
repnz
and
cs
push
mov
(bad)
in
dec
xchg
sbb
mov
push
rcr
xchg
fistp
pop
shl
out
idiv
loop
loopne
nop
or
mov
or
add
jge
xchg
ja
inc
mov
xor
jp
mov
ins
mov
inc
enter
hlt
into
jecxz
dec
add
sbb
jo
inc
cmps
or
mov
push
xchg
mov
mov
dec
test
sar
loop
in
mov
xchg
outs
pop
dec
mov
jmp
fcmovnb
das
inc
lahf
or
les
jmp
bound
mov
xor
push
xchg
xlat
cmp
aas
xchg
test
xchg
fsub
add
pop
out
jg
int
add
jns
mov
shl
xor
pop
sbb
hlt
sub
xor
jl
jo
and
popf
mov
jg
or
bound
leave
movs
and
in
icebp
push
les
sar
and
aam
pop
push
and
ds
add
push
lods
add
imul
dec
ret
test
and
lods
add
pop
pop
lock
ins
sub
inc
sub
out
xor
or
pop
cmc
es
shl
(bad)
test
jno
jmp
sti
int
movs
into
or
(bad)
inc
sbb
pusha
movs
outs
outs
mov
and
call
mov
mov
add
in
and
ficom
scas
rcr
mov
cmps
(bad)
repnz
sbb
addr16
sub
loopne
mov
pop
es
pop
rcr
fsqrt
pop
or
arpl
pop
mov
and
mov
shr
xchg
pop
adc
arpl
sti
xor
(bad)
ins
push
daa
push
or
push
fdivr
test
ret
cmp
inc
mov
dec
test
aaa
hlt
add
xor
mov
(bad)
not
cmp
sub
jne
or
sub
push
xchg
xor
icebp
and
or
add
loope
test
or
xlat
out
nop
out
add
xor
scas
icebp
das
push
cmps
adc
xchg
popf
or
cmp
jecxz
sbb
fs
ss
jg
popf
fcomp
xchg
cmp
fstp
inc
arpl
ror
or
scas
cmps
and
pop
mov
lds
test
and
lahf
jge
(bad)
and
ss
sub
cmp
dec
in
aas
sahf
in
imul
int3
jecxz
pop
(bad)
mov
std
mov
int3
xchg
fldenv
xchg
xchg
add
(bad)
adc
popa
jb
lea
mov
ror
jle
xlat
dec
cmp
bound
inc
adc
mov
inc
dec
mov
adc
dec
cmp
inc
dec
shl
inc
sub
rol
cmp
sub
daa
jmp
int
xchg
xchg
icebp
scas
scas
pop
mov
enter
mov
jae
enter
pop
(bad)
(bad)
aaa
mov
add
jae
js
cmp
push
xor
rol
add
in
jecxz
(bad)
and
push
mov
mov
ltr
cmc
call
(bad)
push
cmp
cmp
test
mov
cmps
das
or
lods
jle
not
arpl
dec
test
rcl
daa
enter
lods
cs
cli
sti
lock
mov
jp
add
ds
or
mov
adc
outs
push
pop
jno
sub
mov
pop
adc
pusha
push
shl
addr16
stos
repnz
fisttp
pusha
push
test
dec
imul
cmp
adc
push
and
sub
sti
ret
fdiv
pop
loop
sub
jno
(bad)
iret
fnstsw
dec
inc
pop
outs
push
mov
mov
push
mov
in
mov
shr
add
jb
out
pushf
sub
in
mov
jg
out
jmp
or
mov
inc
pop
jge
adc
push
push
jp
test
sub
mov
or
nop
mov
ds
adc
push
adc
pop
xor
aam
div
repz
test
fdivr
push
jmp
into
sti
xchg
mov
(bad)
fdiv
jle
mov
add
fnstcw
mov
sbb
gs
outs
pop
sub
dec
xor
scas
xchg
popa
mov
ret
retf
dec
ins
outs
mov
jno
lock
jle
sar
rcr
xor
mov
jne
pavgb
cwde
test
mov
test
and
pop
mul
xor
add
pop
ja
ficomp
inc
mov
cwde
xchg
movs
mov
out
jne
mov
and
mov
push
bound
ins
mov
jg
mov
pop
or
aad
ror
cmp
inc
les
push
inc
cmp
jno
stc
sbb
and
aaa
out
pushf
test
adc
ja
sub
rol
or
imul
fs
imul
push
mov
sub
int
push
xchg
iret
mov
ds
rol
aas
sar
pop
jmp
xchg
aam
outs
repz
ret
push
pop
jp
pop
cmp
test
test
sbb
outs
cmps
xchg
or
dec
addr16
call
adc
adc
inc
jae
cmp
mov
dec
(bad)
(bad)
(bad)
fs
sbb
pop
mov
icebp
outs
xlat
sub
and
test
mov
sbb
ds
mov
pop
stc
and
das
paddusb
mov
push
pop
or
mov
mov
push
sbb
adc
adc
out
adc
fstp
popf
cwde
dec
scas
icebp
mov
sub
jbe
inc
push
or
sbb
mov
or
scas
jmp
jg
ins
std
arpl
push
push
stc
mov
cs
xor
aas
hlt
mov
mov
fiadd
mov
fs
out
push
in
xor
pop
adc
lds
out
in
ss
popa
push
arpl
xor
mov
dec
sbb
pop
lds
jge
nop
inc
adc
fs
loope
shl
in
mov
shr
jl
adc
mov
sbb
in
sbb
mov
mov
lods
xor
outs
out
dec
or
pop
loope
js
and
dec
push
and
dec
and
sbb
xchg
out
or
xor
movs
mov
imul
scas
mov
les
mov
js
xor
loopne
push
ins
rcl
imul
pop
xor
cmp
pop
(bad)
dec
sar
sbb
mov
push
jl
xchg
mov
push
add
inc
lods
xchg
jle
add
sbb
mov
shl
dec
mov
adc
aaa
data16
inc
pop
xchg
cmps
out
push
mov
xchg
mov
sbb
push
mov
jno
cmp
lods
cmp
sub
xchg
xor
test
ret
jmp
cs
loopne
mov
sbb
call
xor
mov
dec
(bad)
int
js
pop
pop
aam
mov
and
mov
(bad)
repnz
imul
pusha
sub
push
or
inc
addr16
shl
clc
pop
sahf
cmp
mov
sbb
adc
nop
sti
jp
jns
lods
icebp
dec
loope
and
sbb
test
push
mov
ret
shl
enter
jge
retf
scas
inc
mov
hlt
inc
icebp
int
cmp
pop
cwde
test
fisubr
add
add
es
sub
jno
mov
fistp
mov
inc
rol
push
xlat
or
sbb
lds
(bad)
jle
cld
push
test
mov
fisub
ins
or
retw
sub
or
out
push
push
cmp
jp
imul
les
sbb
mov
shl
sbb
call
adc
stc
sbb
fs
aas
dec
je
pop
push
xchg
sub
cmc
cli
push
adc
out
mov
or
out
inc
jns
pushf
(bad)
cmp
rcl
mov
pop
jo
fs
inc
jge
push
mov
jae
into
cli
jle
push
out
(bad)
arpl
mov
scas
push
cmp
dec
das
aaa
fs
imul
and
jb
push
inc
pop
bound
xchg
or
push
pop
inc
pop
inc
dec
push
scas
fincstp
(bad)
test
cwde
dec
loop
mov
dec
xor
hlt
push
dec
aad
pop
adc
shl
push
lods
cdq
xchg
adc
fwait
mov
cmp
hlt
leave
scas
ret
dec
adc
mov
movs
fisttp
fst
jmp
or
inc
test
jmp
sub
imul
out
jl
ror
out
imul
fdivr
mov
jp
push
ret
rcl
pop
jno
ret
test
adc
(bad)
daa
sbb
les
cmp
je
jg
inc
pop
lds
hlt
sbb
jmp
jg
les
fild
add
push
js
cmps
inc
mov
push
dec
mov
arpl
cmps
out
push
fst
xor
add
fwait
daa
sub
inc
pop
inc
pop
jmp
das
or
xlat
ss
add
push
idiv
jle
xchg
xlat
imul
(bad)
(bad)
in
push
out
mov
pop
hlt
and
add
jb
mov
cmps
out
push
inc
sub
inc
cmp
(bad)
fs
mov
mov
jmp
sti
cmc
pop
mov
sbb
div
sub
xor
cdq
repz
cmp
pop
imul
call
leave
fisub
mov
pop
lock
iret
out
push
aaa
jo
xor
sub
or
sub
sub
fisub
jl
lds
imul
inc
in
cmps
mov
outs
gs
mov
pop
aaa
icebp
mov
push
bound
jecxz
jmp
xchg
scas
xchg
nop
sti
xor
sub
mov
scas
lea
jae
sub
adc
test
dec
ret
mov
pop
addr16
xchg
outs
add
loope
bswap
jnp
pop
mov
imul
mov
aad
jle
xor
loop
ret
sar
nop
mov
sbb
jle
dec
cmp
jno
sub
xor
iret
adc
sbb
xor
imul
retw
xchg
xchg
sbb
js
add
lea
imul
inc
aas
pop
aad
call
sub
mov
mov
fwait
lock
sbb
add
mov
shr
jecxz
mov
int
sbb
into
mov
inc
add
fdivr
cmp
das
movs
pop
aam
ss
in
pushf
and
imul
xor
ror
loop
push
loope
adc
fdiv
sbb
ja
sahf
cmps
sbb
sub
call
adc
leave
jns
popa
pop
pop
cmps
cdq
int
mov
nop
push
es
cmc
mov
jns
adc
jns
imul
repz
imul
push
xlat
xlat
jno
jnp
jmp
mov
xchg
dec
int
mov
cmp
js
push
xchg
sub
xchg
sahf
ins
xor
push
scas
push
dec
add
mov
test
fcomp
and
lods
leave
cdq
icebp
retf
sub
(bad)
jmp
mov
adc
aas
push
mov
sub
adc
int
sbb
inc
mov
inc
loope
loope
mov
inc
call
aam
(bad)
leave
aad
inc
jg
fadd
stos
add
cs
enter
pop
ror
mov
mov
push
dec
icebp
add
sbb
mov
int
dec
mov
or
jmp
xchg
mov
cmp
adc
jmp
adc
mov
in
in
lahf
das
xor
std
cdq
or
push
lods
and
repz
jmp
js
mov
push
sbb
jb
dec
mov
test
rcr
pop
mov
jge
cmp
lahf
xor
jae
mov
xor
repnz
or
clc
test
inc
cmp
iret
into
cmps
repz
pop
nop
loop
adc
mov
loop
aad
fcom
mov
fwait
add
inc
ins
dec
loope
mov
ins
mov
mov
mov
cmp
ins
or
add
icebp
jp
iret
jmp
shl
xchg
cdq
adc
mov
stos
in
lahf
cwde
mov
fnsave
imul
jne
mov
cli
jge
jle
fst
jl
add
sub
dec
retf
jbe
inc
(bad)
cli
jmp
or
movs
push
fistp
inc
scas
mov
or
(bad)
jmp
dec
ss
mov
int3
jle
pop
inc
or
aas
mov
mov
mov
ret
aaa
shl
pop
ja
sub
push
(bad)
fstp
adc
(bad)
loop
push
sbb
fdivr
mov
pop
add
jmp
sti
fidiv
scas
inc
jno
xchg
ror
pop
lock
cmp
pusha
add
add
lods
mov
inc
in
mov
or
loope
sub
repz
loope
mov
lahf
das
test
stos
scas
das
dec
sub
jl
jnp
ds
jecxz
pop
ds
jmp
shl
mov
or
stc
push
and
(bad)
call
jmp
push
out
xchg
sbb
retf
pop
test
ins
and
or
aas
movs
into
adc
inc
in
adc
mov
and
call
mov
(bad)
imul
scas
sahf
inc
push
push
rcr
push
in
popa
xchg
xchg
or
imul
push
jl
retf
popf
dec
sbb
adc
pushf
mov
scas
xchg
pop
ja
das
jae
mov
sub
dec
jnp
sub
dec
stos
lds
xchg
xchg
push
push
jecxz
adc
lock
dec
sbb
or
jl
sub
pop
repz
mov
dec
cld
push
cmp
pop
adc
xchg
cmp
into
cdq
inc
xor
pushf
push
imul
dec
jo
sub
mov
out
clc
jmp
lds
out
cli
lods
clc
jbe
add
pushf
fimul
inc
sti
nop
cmp
cdq
adc
ds
fst
cmc
and
daa
jle
adc
(bad)
(bad)
das
add
es
popw
sar
push
xlat
lods
dec
aam
loop
inc
cmc
sub
push
nop
sub
xor
arpl
and
or
cmp
pusha
lock
fwait
xchg
push
out
sub
arpl
dec
push
scas
bound
rcr
cli
cwde
out
push
adc
mov
xor
data16
ja
sub
and
push
(bad)
sbb
pop
mov
cld
(bad)
push
push
fcomi
xchg
jmp
sar
ret
popf
hlt
into
(bad)
shl
push
mov
je
in
pusha
cmp
pop
and
xchg
jl
fstp
adc
mov
cld
jnp
inc
enter
imul
mov
xor
out
sahf
js
test
mov
xor
call
cmp
or
xchg
es
mov
or
in
sbb
fwait
mov
stos
adc
ret
cmp
add
jmp
out
fmulp
sar
sbb
mov
jmp
cmp
mov
retf
jnp
arpl
push
mov
cwde
sbb
xor
not
jge
jns
mov
gs
shl
nop
outs
bound
pop
jl
pop
push
pop
jg
std
lods
mov
push
cld
stos
or
add
iret
dec
jno
(bad)
cmp
xor
mov
pop
call
int
ss
mov
(bad)
rol
gs
jnp
pop
xor
jb
inc
push
push
rcl
fcmovnb
xor
pop
pop
or
cs
out
xchg
adc
jecxz
daa
and
in
out
inc
or
shl
out
jns
dec
idiv
repnz
(bad)
mov
test
outs
push
or
test
mov
movs
jl
push
xchg
xchg
lahf
sahf
dec
sahf
cli
mov
iret
not
fimul
addr16
jecxz
fwait
push
add
into
cmps
mov
ret
add
jnp
and
xor
mov
int
das
push
dec
psubw
add
aam
retf
gs
outs
adc
mov
into
ds
inc
shl
ss
sub
mov
cmp
popf
jnp
int
out
imul
cmp
pop
push
lock
(bad)
ins
pop
push
cmp
xchg
dec
shl
in
mov
out
xchg
sbb
lds
nop
adc
imul
mov
dec
push
adc
xchg
xor
cwde
sti
add
sub
inc
cmc
jno
ins
jg
mov
enter
(bad)
sub
aaa
lds
(bad)
xchg
or
nop
xlat
xor
cmp
sbb
stos
in
loopne
addr16
clc
arpl
mov
sub
cmp
pop
sub
lods
clc
aaa
jb
and
push
mov
cmps
das
dec
mov
ret
push
bound
xchg
adc
pop
cmps
fld
xor
leave
add
inc
mov
add
jle
inc
dec
in
sub
sti
ss
es
pushf
adc
sahf
inc
add
rol
pop
rcl
loopne
retf
pop
mov
hlt
mov
sbb
int
mov
sub
sub
mov
add
hlt
mov
add
and
add
cli
sub
aaa
ins
or
les
shld
mov
xchg
xor
cmps
repnz
mov
dec
(bad)
cli
add
xor
dec
mov
xor
int3
push
cmp
fdivp
fcom
xor
sbb
sbb
fcomp
js
pop
mov
mov
push
and
mov
into
inc
jle
jns
or
jno
push
aas
xchg
jbe
pop
psubb
push
sbb
out
jmp
ds
mov
cli
and
or
mov
test
movs
xor
aam
add
cdq
jmp
xor
test
or
inc
add
sahf
mov
call
xadd
adc
push
inc
add
and
inc
jge
loopne
and
jo
dec
mov
jge
jne
jae
mov
cmp
ins
xor
adc
jno
outs
pop
push
push
inc
cld
popa
mov
mov
jae
sbb
std
xchg
outs
or
mov
inc
stos
out
adc
movs
les
lods
dec
call
ja
push
popa
or
mov
xchg
push
or
data16
push
xchg
retf
arpl
jmp
cmp
jl
(bad)
lock
not
cli
sbb
aad
repz
or
test
push
scas
inc
iret
sub
cmp
int3
jne
iret
test
xor
in
adc
xchg
stos
dec
movs
push
add
rol
adc
mov
push
dec
rcl
lahf
jbe
or
push
cmp
push
push
sbb
hlt
cmp
dec
fst
mov
adc
and
stc
adc
sbb
pop
test
adc
pop
xchg
dec
xchg
add
int3
adc
scas
xchg
push
outs
dec
movs
shr
push
stos
inc
pop
jbe
push
adc
ret
out
and
add
aad
jnp
sti
sub
and
add
mov
adc
push
cmp
mov
imul
shl
loopne
call
xchg
sub
daa
ret
pop
repz
mov
call
gs
into
mov
les
test
ror
test
mov
mov
push
loope
cmp
leave
jge
call
mov
cmp
jmp
into
test
ds
and
cmc
ret
scas
xor
or
std
pop
pop
retf
shl
jns
jge
je
mov
xor
neg
popa
cmp
mov
cmp
jg
fdivr
ins
mov
add
ror
(bad)
outs
sbb
imul
in
out
push
mov
jg
xor
mov
test
inc
sub
mov
retf
scas
imul
cmp
lahf
xchg
adc
push
add
add
xchg
ds
(bad)
jecxz
out
mov
mov
add
stc
in
sbb
les
scas
xchg
movs
and
es
push
pop
add
mov
inc
rol
cmp
mov
push
xor
jecxz
std
lar
int
shl
xor
mov
jmp
push
dec
pushf
icebp
xor
jmp
cmp
pop
dec
and
stos
pop
mov
jns
test
inc
in
ja
clc
ja
lock
into
jecxz
retw
inc
push
add
fisttp
or
dec
ss
fs
sub
pop
lock
lea
dec
in
jo
add
jecxz
xchg
cli
mov
adc
jmp
mov
loopne
mov
(bad)
xor
loopne
shl
sub
and
add
mov
repnz
in
inc
add
imul
int3
or
and
cdq
xor
jae
sar
mov
les
sahf
(bad)
sar
jne
sub
call
ds
jae
pusha
sbb
imul
stc
mov
out
xor
pop
out
and
ds
mov
jp
jo
sub
mov
icebp
js
loopne
out
stc
or
cmp
sar
ds
aas
pop
sub
rol
rcr
test
inc
xchg
lock
sub
jl
push
ret
(bad)
dec
scas
sub
(bad)
in
ffree
ja
adc
sbb
loopne
stos
shr
jns
xchg
sub
mov
inc
and
lea
fs
push
retf
mov
in
stc
aad
stos
in
rcr
jg
daa
sar
cdq
pandn
leave
dec
xlat
das
and
test
int3
jb
(bad)
(bad)
push
sbb
addr16
test
push
push
xlat
push
movs
pop
adc
or
popf
fmulp
or
xchg
lods
std
popa
cmp
push
push
push
mov
and
iret
ret
iret
cmp
jae
and
(bad)
fistp
mov
aam
mov
inc
sbb
js
jbe
bound
cmps
ins
sahf
lea
hlt
mov
daa
pop
mov
mov
pop
inc
inc
idiv
shl
xchg
cld
in
jne
add
cli
add
das
in
pop
neg
jmp
inc
mov
cwde
stos
dec
pop
stc
mov
xchg
cmp
jmp
xchg
jne
mov
les
in
sub
cwde
lods
xor
pop
and
add
ja
pop
int
es
call
adc
daa
or
inc
mov
fwait
mov
sbb
(bad)
es
scas
gs
mov
mov
stos
adc
(bad)
iret
scas
fcmovnb
mov
mov
cmps
ja
aam
adc
dec
inc
jg
add
retf
dec
cdq
fld
repz
inc
xchg
fsin
out
fnstenv
xor
mov
pop
sbb
mov
push
in
out
call
cli
es
retf
xor
in
fild
test
inc
jl
cmp
adc
popa
xor
cld
push
inc
neg
stos
jge
popa
pop
aad
mov
mov
sbb
push
leave
dec
xchg
out
and
in
sub
add
ret
gs
dec
(bad)
mov
fwait
aas
push
jp
inc
int
or
sbb
cmp
push
inc
clc
pop
fsubrp
dec
es
sub
or
mov
inc
add
dec
jmp
mov
in
inc
sbb
arpl
sub
sub
mov
cli
repz
pop
js
or
sbb
ret
aaa
mov
push
neg
sbb
pushf
xor
cmc
push
add
out
xchg
xchg
loop
xchg
add
(bad)
scas
arpl
in
das
cwde
test
mov
das
gs
mov
lock
out
loopne
adc
pop
test
sub
daa
xor
jnp
mov
mov
push
shl
mov
pop
mov
mov
sbb
sbb
or
push
test
iret
test
and
mov
jb
jo
pop
call
xchg
neg
dec
sbb
ret
pop
ins
ds
add
lds
in
inc
push
jb
pushf
mov
push
gs
rcr
lods
mov
mov
cli
jbe
and
(bad)
mov
lods
mov
retf
cmp
ret
aaa
xchg
js
dec
dec
cmp
inc
loop
(bad)
repz
and
lds
jge
jno
int
dec
cdq
cdq
ins
mov
sbb
inc
pop
stos
and
push
out
xor
data16
mov
dec
mov
and
sub
jae
inc
fisub
push
mov
pop
xor
(bad)
ins
loope
hlt
cmp
std
dec
dec
cmc
int
or
nop
sub
pop
mov
adc
sub
cmp
push
jmp
ins
mov
pop
lahf
push
out
outs
mov
loope
jmp
popa
push
cwde
mov
cmp
not
xchg
dec
mov
lds
out
test
jmp
pop
pop
add
or
and
test
aaa
aaa
int
pop
out
lea
mov
and
fidiv
mov
sub
fcmovb
cdq
daa
fs
add
cdq
scas
les
pop
sub
ror
(bad)
push
shl
and
jl
fbstp
mov
popa
(bad)
fdivr
jno
push
sub
repnz
nop
mov
jns
cmp
mov
ja
retf
das
mov
xchg
xchg
std
inc
mov
push
mov
iret
jbe
iret
aam
xchg
lods
out
cmp
retf
add
mov
stos
jge
or
fwait
dec
cld
jbe
mov
sbb
jge
in
test
(bad)
sahf
ror
cmp
inc
sbb
in
push
mov
sbb
in
sbb
loope
fwait
retf
sub
mov
jmp
jns
jl
cmps
mov
adc
add
push
jl
loopne
mov
mov
mov
test
daa
out
in
scas
add
dec
push
adc
enter
dec
bound
shl
mov
mov
add
data16
push
les
push
add
dec
or
mov
xor
mov
js
push
(bad)
imul
rcl
in
hlt
mov
dec
dec
mov
jecxz
jecxz
stos
ins
xchg
stos
sti
fimul
aad
mov
xchg
call
pop
fld
ss
mov
test
(bad)
fldenv
mov
popa
ret
cwde
xchg
xchg
retf
shr
and
or
shrd
cmp
test
cmps
xchg
add
push
lods
stos
push
push
sbb
inc
jge
ins
sar
aas
mov
ret
popf
loope
xchg
xor
jl
or
add
xchg
lahf
fidiv
and
shl
push
push
inc
jge
sbb
imul
push
mov
inc
test
imul
test
push
sbb
icebp
adc
frstor
aaa
push
jl
mov
dec
cdq
and
sbb
popa
aad
ja
mov
bswap
movs
push
fdivr
cli
pop
push
call
rcr
and
mov
fs
fist
mov
sbb
movs
mov
(bad)
fld
fidivr
ja
jle
retf
cmp
adc
dec
mov
push
and
xchg
ins
leave
xor
ss
sub
sti
call
outs
sub
and
cmc
(bad)
mov
sbb
ins
in
test
stc
add
aam
push
(bad)
add
lahf
xchg
jns
xor
fisubr
sub
inc
lods
fstp
imul
push
sbb
movs
das
mov
daa
(bad)
lock
out
fild
pop
xor
out
push
in
push
shl
pop
aam
ins
rol
sbb
fwait
jecxz
inc
lea
stos
or
mov
stos
sbb
adc
lock
in
sub
xor
jmp
pop
mov
int3
call
fwait
mov
(bad)
and
jns
iret
fsubr
and
aam
adc
push
(bad)
and
jbe
inc
pop
les
push
(bad)
sub
pop
shr
fidiv
xchg
loopne
hlt
ret
aad
jg
add
rcr
sbb
xor
jle
sub
loopne
xor
xchg
test
sub
cmp
push
inc
out
sub
mov
out
sahf
outs
iret
inc
inc
lea
or
mov
js
test
xlat
stos
sbb
sub
sub
(bad)
(bad)
push
cwde
lahf
aaa
mov
inc
repnz
and
and
and
or
mov
js
xor
pop
jmp
popa
nop
bound
(bad)
ss
xchg
imul
xlat
call
xor
cld
inc
mov
stos
mov
hlt
not
add
hlt
pop
pop
jbe
outs
lahf
sar
gs
fcomp
repz
fisttp
ds
add
ss
ficom
pop
in
stos
dec
jmp
dec
xor
shr
sbb
cdq
jbe
xlat
fidivr
icebp
lds
inc
dec
inc
in
pop
jge
push
inc
cmc
out
mov
jl
mov
or
dec
rcr
stos
clc
dec
push
fldenv
cmc
mov
out
or
ja
xchg
(bad)
sbb
mov
xchg
push
lods
mov
cdq
or
movs
cli
cs
out
lock
cmp
hlt
jp
xor
add
sbb
pop
cmps
fnstenv
popf
out
fsub
cmp
mov
(bad)
jecxz
das
cmps
mov
shr
mov
inc
adc
test
pop
pop
push
xchg
adc
push
push
jecxz
and
fbld
xchg
js
ss
push
je
or
mov
imul
not
aas
enter
push
lods
addr16
push
arpl
xchg
and
and
jb
pushf
(bad)
jmp
xor
push
aaa
push
push
aam
xchg
lahf
lds
push
inc
pop
bound
mov
mov
cmp
cmp
mov
and
test
mov
movs
in
sar
jbe
in
and
ds
xchg
mov
xchg
loop
idiv
pop
cmp
mov
test
adc
fsub
pop
fst
fsin
xchg
or
pop
sbb
jo
out
lds
leave
call
or
fistp
shufps
out
jg
loopne
sbb
(bad)
call
lea
ficom
dec
push
aam
sbb
imul
inc
mov
inc
add
sbb
lahf
stos
xchg
xchg
xchg
cmp
icebp
cld
mov
jmp
lock
jmp
fsubr
fild
aam
stos
cmp
xor
sub
stc
dec
(bad)
loope
cmps
sbb
pop
les
mov
xchg
sbb
push
adc
and
shl
add
cmp
or
inc
and
ds
loop
outs
and
(bad)
mov
sbb
(bad)
ficomp
and
lea
mov
inc
scas
jecxz
std
jmp
xchg
sub
jo
test
push
push
add
xchg
ror
xchg
(bad)
enter
dec
rol
lahf
rol
sbb
pop
dec
jp
js
ficomp
mov
loopne
ins
dec
jmp
repnz
jo
mov
cmp
adc
sub
mov
repnz
inc
lds
stos
shr
ja
repnz
(bad)
pop
cmp
sub
popf
and
icebp
push
mov
ret
cmp
(bad)
sar
les
lea
xlat
inc
sbb
add
cmp
ficomp
push
mov
mov
pusha
mov
addr16
mov
sub
mov
add
jp
mov
ja
sahf
call
sbb
dec
pop
mov
out
popa
cs
stos
dec
xor
sub
sbb
dec
call
xchg
loop
mov
retf
pop
adc
(bad)
nop
add
jbe
pop
in
lods
cmp
dec
xchg
test
data16
sti
mov
cmps
mov
pop
sbb
sub
and
inc
sub
push
or
outs
popf
add
and
arpl
neg
and
daa
stos
sub
xchg
and
fild
adc
push
sbb
retf
ja
sub
pop
jmp
mov
jmp
in
rol
add
and
mov
lods
cmp
mov
sbb
adc
adc
dec
mov
mov
xor
clc
sub
and
fldcw
mov
test
sbb
pop
(bad)
test
jbe
xchg
out
test
mov
enter
mov
loope
rcl
sub
fucomi
adc
jle
fwait
ret
das
js
mov
push
addr16
sub
out
mov
retf
push
aaa
(bad)
and
inc
sbb
adc
fnstcw
pop
adc
cwde
xor
cmp
test
push
add
out
push
ins
jb
mov
sbb
gs
xchg
(bad)
loop
div
push
stos
dec
mov
fdiv
sbb
mov
shr
mov
es
push
shl
mov
retf
dec
xor
pop
pop
loopne
(bad)
jg
xchg
inc
loopne
dec
lock
mov
mov
or
stos
(bad)
sar
idiv
push
adc
fild
fisttp
inc
and
enter
and
pop
jno
add
xor
add
icebp
push
xor
xchg
mov
mov
push
adc
inc
fadd
popa
mov
psllw
pop
(bad)
fidiv
cwde
movs
pushf
inc
and
addr16
out
out
aad
or
loope
(bad)
mov
add
in
dec
jp
cmp
push
imul
push
sar
dec
cld
ja
das
out
pop
dec
push
sbb
push
ror
(bad)
dec
xor
lea
out
(bad)
push
ins
mov
pushf
pop
push
arpl
lds
pop
imul
and
(bad)
retf
bswap
xchg
sbb
inc
push
lods
push
mov
mov
lahf
outs
pop
jmp
adc
push
xchg
jmp
pop
mov
dec
retf
or
lods
sbb
mov
mov
jge
fwait
sbb
stc
add
scas
push
rcl
mov
adc
jne
imul
push
jge
sbb
mov
xchg
lea
fstp
icebp
scas
jnp
mov
pop
adc
and
mov
inc
mov
je
pop
or
hlt
sub
or
int3
xor
and
inc
ret
inc
mov
dec
mov
rol
inc
inc
jae
xlat
test
jmp
mov
clc
aam
cs
dec
mov
aam
imul
stos
mov
jmp
push
shr
ins
and
add
jno
inc
repnz
shl
mov
mov
test
xchg
cmc
dec
outs
mov
push
daa
jl
sbb
push
cdq
sub
adc
in
jne
lods
push
movs
jmp
xchg
push
xor
xchg
xor
les
mov
loopne
call
loopne
sub
mov
pop
daa
repz
pop
or
mov
stos
mov
jnp
ret
aas
dec
inc
xor
(bad)
and
lahf
cmps
mov
or
push
lock
shl
scas
sub
sbb
mov
add
mov
into
fcomp
(bad)
cld
jl
jmp
arpl
retf
sub
jns
add
outs
push
adc
ret
or
fcmovb
and
sub
xchg
and
dec
arpl
clc
ss
daa
outs
leave
inc
stc
sbb
leave
pushf
xlat
sub
adc
in
jnp
int3
clc
mov
in
movs
mov
outs
push
cdq
stc
scas
leave
xchg
scas
fcomp
xchg
pop
or
dec
call
outs
(bad)
mov
mov
mov
cli
out
cli
xchg
popa
repz
pop
mov
xor
mov
cmp
pop
xchg
gs
cmp
xchg
lea
mov
imul
sub
push
push
in
popa
mov
push
adc
dec
test
lea
shl
sub
xchg
(bad)
mov
jge
bound
das
inc
es
jb
inc
mov
in
xchg
loope
or
hlt
add
push
or
ret
sbb
sub
sub
data16
(bad)
pop
aad
mov
sbb
loopne
(bad)
aam
and
shl
sar
fisubr
mov
or
cmp
push
add
mov
popf
fwait
mov
mov
lock
(bad)
(bad)
ss
jno
xlat
je
lods
out
fldcw
pop
and
loope
mov
imul
daa
mov
cmp
or
jno
in
popa
xor
test
cwde
(bad)
int3
movs
xchg
in
xchg
test
jle
imul
into
sub
pop
in
and
pop
(bad)
lea
adc
mov
fadd
and
sub
sub
sbb
call
add
jb
out
(bad)
outs
or
js
lods
pop
data16
add
sar
or
sbb
or
out
xchg
sti
dec
mov
mov
cmps
ins
loope
outs
iret
lock
xchg
retf
dec
mov
fsubp
int3
loopne
aam
daa
nop
add
and
xchg
test
int
inc
mov
inc
jge
mov
imul
push
pop
inc
cmps
dec
inc
jmp
into
int
pop
push
adc
lahf
mov
clc
jb
pop
jnp
jg
std
inc
das
pop
popa
dec
test
imul
(bad)
out
dec
xchg
ss
jp
js
mov
inc
arpl
add
push
lock
out
lahf
cmp
pop
xchg
out
aaa
xor
jbe
aaa
icebp
push
and
js
cmp
out
fwait
dec
lods
mov
pop
jecxz
and
push
jmp
sbb
mov
ret
or
pop
inc
push
jno
daa
nop
fisub
jle
aad
leave
xor
loop
loope
dec
mov
retf
mov
inc
sub
sbb
add
les
or
rol
daa
xor
jge
or
fsub
or
cmc
push
add
adc
jmp
das
jnp
cmp
gs
mov
in
cmps
jge
sub
dec
push
xchg
cmp
bound
mov
mov
dec
movs
jns
imul
movs
xor
loope
push
jp
call
adc
sbb
ds
adc
xor
iret
jmp
(bad)
out
out
js
adc
les
ds
retf
mov
ins
lock
xlat
ja
fsub
jg
add
sbb
popa
repnz
adc
inc
and
push
pop
ror
shl
jb
out
push
push
cld
jmp
adc
nop
mov
and
pop
jbe
outs
mov
(bad)
int
and
xor
les
adc
xor
dec
jns
loopne
add
cmp
jmp
push
scas
pop
xor
fstp
pop
lods
lods
push
push
call
jb
icebp
test
int3
jge
push
xchg
jnp
mov
dec
rol
jne
mov
jp
clc
outs
ss
push
jmp
cmp
sub
mov
dec
jno
ret
fld
cmc
sti
mov
dec
adc
and
(bad)
sub
sbb
imul
add
fisubr
jle
cmp
cmp
add
mov
push
mov
and
rcl
xchg
out
sub
xchg
jnp
xchg
mov
mov
nop
int
out
(bad)
mov
sub
dec
retf
add
pop
inc
imul
or
cli
or
adc
pop
adc
shr
pop
or
cmc
lock
(bad)
fld
ds
add
adc
out
call
scas
mul
icebp
pop
cmps
icebp
fidiv
pop
jp
or
mov
adc
stc
out
es
or
sbb
inc
daa
popf
pop
xchg
sub
int3
bound
adc
adc
out
mov
adc
fist
add
icebp
and
or
lea
mov
and
cmc
sub
pop
mov
jmp
jb
and
jmp
jo
add
xchg
and
fnsave
fadd
or
lods
push
xchg
mov
hlt
dec
adc
xor
je
push
ja
push
scas
arpl
stc
(bad)
xchg
loop
fisubr
jge
loope
jg
imul
pop
sti
pop
fbstp
or
cmp
push
loop
mov
sub
add
mov
dec
js
in
inc
out
stos
add
sub
idiv
fcomp
mov
jne
inc
jno
push
add
xchg
xor
sar
loope
and
movs
lds
mov
sti
pop
mov
ja
ss
dec
inc
loopne
std
adc
jmp
shr
cmp
lea
mov
ds
clc
push
addr16
inc
ds
sti
and
mov
xchg
pop
(bad)
or
pop
cmps
and
xor
(bad)
cmp
(bad)
clc
sbb
ja
add
and
sub
xchg
sbb
sbb
dec
dec
dec
popf
adc
mov
xor
or
test
xchg
xor
aaa
xchg
jp
dec
mov
xor
fucomi
scas
movs
push
mov
dec
dec
or
imul
xor
xchg
jnp
add
aad
inc
in
pusha
push
xchg
faddp
out
or
stos
popa
jnp
mov
dec
cmp
sbb
stos
cmps
call
xor
or
cmc
add
pushf
dec
pop
adc
fs
iret
into
xor
pop
sar
cwde
ficomp
adc
ss
push
cld
jp
das
mov
(bad)
jae
repnz
mov
(bad)
cmp
xor
sbb
sbb
aaa
sbb
pop
sub
inc
cmp
inc
add
push
mov
add
jmp
sahf
sbb
out
add
in
sub
not
fdiv
outs
or
int
pop
aaa
sar
(bad)
daa
jb
bound
loope
int
jnp
adc
xlat
repz
test
(bad)
shr
repnz
adc
dec
push
xchg
(bad)
jmp
and
sub
sub
mov
loopne
sub
jle
aaa
xlat
sub
adc
ret
aaa
xlat
hlt
add
inc
add
in
or
ss
int3
sbb
mov
mov
cmps
cli
and
shl
mov
push
imul
and
aaa
add
(bad)
test
addr16
inc
lock
inc
inc
xchg
rcl
mov
jae
leave
push
pop
add
mov
dec
lods
or
add
xchg
xchg
aaa
gs
test
jle
arpl
es
pop
movd
inc
or
scas
mov
dec
jo
mov
cmp
in
sub
mov
jl
mov
push
pop
mov
test
add
sbb
in
mov
sahf
jbe
sbb
push
sbb
psubsw
into
sbb
push
psrad
or
xchg
imul
mov
inc
aaa
sti
mov
imul
push
dec
push
iret
sbb
pop
xor
(bad)
xor
fs
es
mov
push
inc
sub
inc
lea
push
adc
(bad)
nop
fs
fist
xchg
lock
mov
adc
aas
add
jmp
int
jns
and
adc
fnsave
dec
aas
jae
shr
mov
push
test
enter
xlat
adc
(bad)
out
(bad)
xchg
or
out
pop
sbb
std
jb
ror
movs
inc
mov
(bad)
jp
add
fisub
sbb
dec
ret
imul
cmps
mov
xchg
adc
jno
jns
in
neg
mov
sbb
fist
(bad)
popf
in
mov
lock
dec
sti
inc
mov
dec
mov
sahf
pop
in
xlat
mov
(bad)
aaa
fs
loopne
mov
sbb
pusha
in
mov
fcomp
mov
or
pop
ja
les
sti
js
out
cmp
cmp
call
cmp
aas
and
test
daa
popa
sbb
dec
or
xor
mov
sub
es
loopne
ror
pop
cs
xlat
sbb
mov
pop
jbe
test
ds
cmc
inc
cmc
and
jae
int3
test
aaa
pxor
push
mov
xlat
jge
push
sbb
xchg
inc
jmp
mov
popa
in
push
lods
xchg
xor
loopne
bound
imul
xchg
add
(bad)
ins
pop
aad
(bad)
retf
push
stos
push
mov
mov
test
adc
addr16
cli
retf
xchg
hlt
and
fs
pop
sub
jg
loopne
dec
and
ficom
fiadd
call
icebp
inc
std
popa
or
adc
out
movs
inc
sub
xchg
inc
mov
arpl
xor
xor
movs
rol
mov
call
add
repnz
popa
in
shl
cmp
dec
das
enter
lock
inc
xor
push
xchg
pop
dec
jp
stc
and
lods
(bad)
push
sub
fnop
pop
aaa
xchg
popf
sub
dec
inc
scas
cmp
scas
test
xor
and
xor
sbb
fldcw
fst
cmp
sub
enter
pop
(bad)
jl
test
and
(bad)
mov
iret
jp
popf
xor
(bad)
mul
xor
fbstp
pop
mov
jge
imul
jmp
and
add
movs
aad
loop
stos
into
test
cmps
dec
add
movs
call
pop
mov
push
scas
shl
test
pop
push
je
xchg
jmp
mov
sbb
neg
push
pop
adc
int3
dec
stos
or
sub
jne
(bad)
jnp
pop
loope
bts
pop
mov
shl
mov
or
push
movs
std
nop
cdq
int3
stos
pushf
mov
inc
sub
mov
adc
in
xchg
and
or
rol
(bad)
in
dec
sbb
test
out
addr16
cwde
sub
aam
mov
addr16
sub
or
shl
int
js
cmp
inc
push
push
mov
and
clc
inc
rol
xchg
mov
(bad)
stos
mov
lea
push
push
cdq
fiadd
mov
sub
ret
es
mov
pop
inc
icebp
mov
shl
xchg
pop
je
jmp
xchg
or
aaa
in
xchg
les
movs
push
adc
inc
adc
sub
dec
jbe
es
inc
loope
fwait
inc
cs
es
retf
pop
mov
xor
and
cmps
loopne
ss
imul
imul
mov
mov
cld
shl
ss
push
mov
pop
aad
ret
ss
in
jge
mov
pop
xor
in
repnz
push
dec
popa
in
jmp
popf
(bad)
and
lea
sub
and
xor
cdq
pusha
dec
outs
enter
and
ror
inc
push
xchg
sub
fwait
clc
(bad)
ins
icebp
test
pushf
sub
les
jne
inc
xchg
and
xchg
ret
ins
fistp
push
cwde
jbe
ror
mov
pop
cs
inc
jecxz
cmp
push
jl
adc
fs
dec
sbb
ret
xor
push
or
xchg
cmp
fs
in
push
push
jecxz
xchg
xor
(bad)
sub
mov
and
or
pop
jle
lock
cmps
xchg
add
or
add
dec
pop
xchg
xchg
iret
push
into
out
pop
fcomip
xchg
retf
sub
xor
idiv
loopne
rcl
jae
fwait
jg
test
sbb
sar
stos
add
jns
jno
pop
mov
add
pop
int
add
fsubr
mov
xor
sub
push
test
mov
and
fiadd
shl
mov
add
mov
rcl
mov
(bad)
sar
jmp
mov
xlat
jp
mov
xor
inc
(bad)
pop
cmp
mov
pop
scas
mov
pusha
aaa
call
or
std
cmp
pcmpeqd
or
mov
stos
test
sbb
mov
cs
fisttp
aam
fwait
jg
or
jne
and
xchg
adc
and
xchg
inc
xlat
mov
dec
mov
jne
mov
pop
inc
mov
popa
jbe
pop
repnz
cli
mov
sar
mov
mov
cmps
daa
cwde
ficom
fwait
aam
jmp
jl
rol
add
shl
test
js
cmp
lods
ror
or
xor
clc
adc
push
xor
adc
outs
mov
or
adc
sub
out
outs
pop
xlat
out
adc
xchg
leave
movs
sbb
dec
ins
fs
mov
ins
ja
retf
mov
mov
shr
data16
pause
sub
and
lds
jmp
add
mov
xchg
call
out
mov
ror
out
out
cli
icebp
jb
jg
push
push
lods
cmp
mov
mov
sub
loope
pushf
out
ret
xchg
mov
neg
mov
add
neg
aas
vsqrtsd
mov
adc
cmp
mov
fldenv
mov
mov
dec
xchg
rcr
rcr
mov
js
push
dec
lock
ja
call
xchg
sub
pop
mov
sbb
(bad)
xlat
xchg
jl
mov
cmp
jmp
jnp
js
out
lods
jecxz
hlt
les
scas
adc
iret
test
int
dec
out
mov
out
retf
and
or
sbb
es
mov
pop
pop
imul
sbb
adc
xchg
adc
mov
cmp
sbb
sti
xchg
retf
loopne
sahf
ret
es
adc
ins
and
mov
cdq
sahf
jmp
rol
push
inc
adc
movs
jo
call
in
xor
mov
adc
push
jl
adc
pop
mov
cs
adc
jmp
dec
mov
adc
iret
js
jo
mov
(bad)
scas
xor
fisttp
mov
mov
pusha
xchg
fist
loope
stos
adc
jb
loope
(bad)
xor
mov
push
scas
mov
hlt
jecxz
and
cdq
scas
adc
mov
and
xor
loop
push
sbb
jno
mov
pop
test
sub
leave
dec
stos
or
ds
cs
daa
movs
fidiv
cmp
ror
stos
out
pop
inc
mov
or
adc
stos
bswap
fisubr
in
mov
es
icebp
fsin
mov
push
stos
jno
cmp
call
dec
inc
xor
mov
xchg
push
sub
test
arpl
xchg
xchg
dec
mov
ins
push
xchg
dec
repz
sbb
ins
sub
loop
push
sbb
(bad)
pushf
mov
jmp
repz
xchg
sbb
ja
xchg
xchg
mov
cmp
cwde
hlt
out
(bad)
cmp
push
jns
vpor
sbb
lods
lahf
cmp
fnstcw
adc
sbb
inc
test
mov
pop
sbb
call
jmp
inc
inc
pop
fucomp
mov
cmp
mov
(bad)
mov
and
xor
cmps
shl
lds
or
fdiv
popa
lods
mov
sbb
ja
jns
loop
(bad)
out
ins
sbb
xor
ret
mov
inc
ja
data16
sbb
adc
push
out
fidiv
jo
push
lods
push
sbb
ror
fwait
mov
aas
retf
jne
cmp
mov
loop
cli
xchg
push
or
push
and
test
in
mov
bound
xchg
pop
sub
or
ret
mov
xchg
arpl
loopne
ja
jle
cmp
sbb
imul
jnp
dec
or
jne
push
pop
xchg
jae
(bad)
pop
cmp
loop
push
jo
out
cdq
das
mov
pop
dec
cmps
jb
cmp
pop
pop
push
bound
xchg
pop
xchg
or
call
sahf
test
popa
jl
shl
lods
mov
mov
mov
xchg
jb
jecxz
push
fidivr
mov
jle
sti
xchg
dec
inc
imul
adc
mov
jle
test
push
dec
into
lahf
loopne
pop
cmps
(bad)
scas
inc
sti
push
ficomp
sbb
push
xchg
inc
mov
sub
jl
scas
or
movs
xlat
test
xchg
xchg
das
pushf
test
loop
mov
aas
add
inc
hlt
imul
or
mov
or
jecxz
inc
es
dec
lds
mov
mov
mov
or
sbb
adc
mov
retf
jno
inc
sbb
dec
lods
mov
je
xchg
rol
mov
cmps
cs
or
aaa
stos
movs
sahf
fsub
shl
sti
jnp
xor
adc
and
or
push
mov
leave
push
cwde
inc
inc
div
adc
add
iret
adc
das
xor
shl
sbb
sub
jae
xlat
adc
mov
popa
push
cld
cmp
jmp
lds
mov
stos
mov
scas
out
dec
bound
sub
cs
adc
repnz
jge
dec
movs
(bad)
push
fninit
(bad)
jno
(bad)
fninit
lods
ins
mov
jns
sub
fcom
out
inc
cld
xor
inc
pop
ins
adc
clc
adc
pop
fdiv
call
push
lahf
xor
fbstp
loop
fdivr
movs
scas
mov
int3
sub
cmps
inc
xor
and
inc
sub
sti
inc
fdiv
push
xchg
sub
arpl
rcl
(bad)
movs
mov
test
or
mov
or
(bad)
xlat
cmp
pop
jbe
hlt
fs
mov
ins
hlt
xor
shl
cmps
retf
adc
xchg
push
adc
cmp
aaa
mov
cmc
je
aas
repz
and
outs
call
mov
pusha
adc
dec
ret
in
xor
mov
adc
jnp
push
popf
jge
call
push
dec
sub
lds
fwait
enter
xor
scas
or
xchg
push
jge
js
jo
movs
aam
cmp
fld
adc
test
out
clc
xor
dec
fidiv
jge
fldcw
sub
int3
aas
nop
jmp
repnz
jb
xchg
dec
or
xchg
inc
scas
in
sti
inc
je
jb
fwait
daa
adc
push
sti
outs
ja
shl
or
push
(bad)
dec
inc
enter
loope
jae
and
aam
push
int3
lahf
sti
movs
imul
mov
sub
daa
and
out
bound
pop
mov
std
mov
sar
(bad)
aaa
push
and
and
mov
jbe
(bad)
fadd
into
cmp
mov
pop
push
add
rcl
fsubr
fsubr
xchg
aam
data16
outs
cmp
mov
fstp
lods
inc
lahf
jmp
(bad)
dec
pop
adc
scas
adc
rcr
test
scas
mov
lds
sub
mov
test
or
test
pop
xchg
cmp
shl
(bad)
or
fstp
lods
mov
pushf
xor
adc
pop
jnp
xchg
das
out
sbb
int3
jl
scas
movs
cs
mov
jne
nop
into
daa
mov
rol
adc
mov
mov
cmp
xor
out
ins
cmps
lock
loope
mov
inc
or
clc
and
stos
jl
arpl
(bad)
retf
gs
into
mov
scas
cmp
aas
mov
enter
pop
shr
cmp
jl
inc
rol
(bad)
(bad)
mov
dec
test
es
out
clc
mov
arpl
fisttp
pop
sub
lock
jg
rol
cmp
sub
sbb
ficom
xor
je
inc
mov
push
xor
inc
cwde
aas
mov
ror
mov
xor
xor
jl
in
inc
jl
(bad)
jmp
lahf
sbb
ss
or
xchg
imul
fcom
xchg
push
mov
jne
sbb
xor
test
push
lods
cmc
fwait
xchg
fsubr
jmp
aam
clc
arpl
je
push
lea
and
dec
movs
js
and
mov
xor
jb
sar
cmc
aam
imul
fs
dec
push
push
repz
add
arpl
mov
pop
aaa
mov
arpl
stos
xlat
adc
xor
int
inc
jg
repnz
add
xchg
imul
xor
xor
(bad)
ds
enter
pop
adc
cmp
inc
jecxz
dec
outs
imul
nop
ret
dec
in
and
test
jne
inc
daa
ror
or
push
push
mov
outs
jp
sub
jge
repnz
xor
add
sbb
mov
mov
rcr
mov
rol
mov
int
push
add
sbb
pop
or
pop
aam
xchg
and
jg
(bad)
xor
in
imul
movs
pusha
loope
pop
sbb
pusha
gs
cmps
xor
pop
movq
mov
div
pop
push
jl
sub
sbb
push
jno
ds
sar
jo
hlt
test
push
pop
push
test
(bad)
pop
leave
(bad)
lock
xchg
std
mov
mov
sub
inc
outs
addr16
fistp
imul
data16
xchg
(bad)
fiadd
inc
pop
pop
lods
sub
in
xchg
dec
cmp
rcr
push
call
pop
int
(bad)
out
enter
std
outs
dec
cdq
push
push
and
mov
pusha
and
fisubr
fild
pop
lahf
mov
shr
xchg
fs
mov
and
jne
push
outs
adc
scas
push
fcomip
xor
lock
lea
xor
pushf
mov
mov
sahf
sahf
jecxz
in
pop
out
adc
rol
or
xor
mov
mov
cli
lahf
pop
or
xor
sub
sbb
fld
test
push
cmps
jge
mov
cwde
es
(bad)
out
inc
mov
mov
(bad)
pushf
cld
adc
sti
cmp
mov
inc
xchg
xor
adc
add
jle
(bad)
mov
movs
call
retf
stc
out
push
fldpi
rcr
or
shl
ret
clc
xchg
or
sbb
dec
mov
xchg
sti
push
jl
out
push
ret
adc
cmp
imul
je
fmul
(bad)
out
or
lods
gs
not
mov
pop
and
repz
ja
jmp
lds
dec
mov
sar
push
sbb
imul
stc
xor
pop
pop
out
dec
int
(bad)
mov
fadd
ret
not
shl
cmps
hlt
daa
test
(bad)
adc
ror
dec
out
daa
adc
and
lods
enter
fsub
(bad)
test
xchg
adc
mov
and
xchg
pop
fdivr
fidiv
cmps
xchg
inc
lock
mov
or
rcl
pop
adc
popa
sub
add
iret
in
pop
xor
div
pop
xor
test
mov
call
inc
pop
into
jl
stc
jae
xchg
jbe
fwait
call
pop
test
add
and
mov
xchg
or
or
mov
add
lds
in
xchg
mov
mov
mov
xor
pop
xchg
or
adc
ss
inc
cli
outs
mov
movs
inc
inc
retf
addr16
test
push
push
push
pop
out
cmp
dec
stos
stos
fistp
push
aaa
je
mov
jl
div
mov
jo
pusha
jb
and
ror
pop
inc
int
cmp
les
xchg
ss
loope
aad
loop
xchg
add
imul
out
dec
scas
sbb
(bad)
push
xor
and
push
in
cmp
cmps
inc
test
test
scas
fwait
sbb
xchg
xchg
jmp
into
imul
jo
push
rol
retf
jne
dec
mov
push
push
push
jnp
pop
movs
dec
dec
xchg
sub
je
jae
imul
jmp
lds
or
xchg
pop
mov
xor
(bad)
xchg
imul
adc
sbb
push
dec
idiv
std
cli
std
mov
inc
hlt
add
inc
xchg
pop
and
sbb
sbb
nop
cmp
push
loope
aaa
test
push
jecxz
jbe
jp
fwait
mov
in
pop
cmp
sub
inc
push
(bad)
scas
lods
cmps
xchg
out
sub
cmp
mov
dec
mov
add
xchg
or
and
xor
enter
xchg
int3
add
cs
mov
rol
scas
ss
jp
ret
inc
int
push
cs
push
std
jbe
mov
mov
inc
fidiv
rcl
cmc
push
adc
aad
xchg
jne
ror
xchg
mov
add
sbb
mov
stos
pop
push
enter
cmp
scas
mov
pop
stc
jne
mov
fucomi
fs
cmp
dec
retf
popa
popf
aaa
dec
xor
popf
js
es
cmc
leave
fwait
inc
jle
sbb
aad
mov
push
jo
or
push
push
mov
rcr
push
int3
adc
add
xor
xor
mov
movs
in
outs
test
out
sub
or
dec
mov
repz
or
and
(bad)
int
inc
test
sub
or
movs
add
pusha
fistp
xchg
mul
in
inc
jo
xchg
leave
jne
fnstsw
jae
test
or
sub
enter
lahf
push
lods
push
or
retf
or
cmove
ret
rcl
fistp
jp
push
push
mov
cmp
std
sti
call
push
gs
push
sub
jmp
in
sbb
movs
and
dec
push
ds
ffree
out
xchg
or
dec
mov
cmp
inc
jns
pop
mov
pop
mov
cmp
scas
in
add
pop
add
sbb
lock
les
sub
aas
fs
add
pop
scas
sbb
sub
dec
ret
pop
jmp
or
adc
in
or
(bad)
or
out
and
inc
or
mov
push
add
jp
ja
fmulp
movs
mov
cdq
push
or
mov
adc
ds
jbe
inc
cwde
in
mov
sbb
std
add
mov
add
ret
clc
imul
sahf
mov
cmp
lods
popa
pop
push
js
mov
out
out
sahf
in
pop
shl
outs
pop
in
jno
jae
iret
mul
inc
adc
rol
dec
repz
mov
imul
pop
xor
aad
(bad)
addr16
cmps
add
ret
xchg
sub
aaa
ins
test
push
in
mov
and
cmp
cwde
pushf
fwait
mov
mov
(bad)
jg
jae
gs
popf
xor
cmps
leave
cmps
push
das
mov
popa
cmp
dec
ins
xchg
pop
fcom
outs
dec
les
popf
adc
fisttp
ret
mov
fmul
repnz
cmp
movs
fisub
and
retf
ss
push
hlt
in
inc
xchg
cmp
pop
mov
push
int3
adc
cmc
and
adc
lea
lock
leave
jmp
mov
mov
out
int3
push
ins
lea
mov
outs
mov
and
test
out
lds
fiadd
adc
xor
mov
je
cmps
fwait
pop
dec
pop
pusha
push
repnz
lods
and
out
scas
xor
(bad)
cmp
(bad)
jns
repnz
rcl
cdq
shr
movs
dec
and
mov
mov
ins
mov
das
clc
ret
xor
imul
call
fldenv
sbb
and
stos
mov
sub
fstp
mov
(bad)
jmp
mov
sbb
(bad)
cmp
fcomp
je
xchg
add
(bad)
aad
jp
das
dec
xor
or
dec
push
pop
add
in
mov
xchg
mov
stc
sbb
fnsave
dec
ins
pop
inc
mov
loopne
fisubr
jg
cmps
sti
(bad)
sbb
mov
pop
sbb
fdivr
jmp
mov
mov
push
pop
call
lahf
in
or
pushf
nop
push
cmp
mov
xchg
xlat
pop
popa
aad
and
pushf
fwait
mov
mov
jae
mov
test
inc
push
stc
outs
add
push
sub
sbb
addr16
dec
mov
jne
push
aam
sti
mov
xor
push
push
pop
and
pop
xor
in
jnp
mov
lea
add
fist
daa
cmp
mov
push
xor
add
add
add
dec
out
inc
(bad)
(bad)
push
loop
out
arpl
mov
test
jae
jbe
cmp
push
dec
xor
js
loop
push
test
push
pop
nop
pushf
adc
xchg
mov
or
shr
loope
lahf
inc
imul
stos
popa
popa
push
inc
in
push
mov
sub
xor
mov
dec
cmp
sbb
inc
cmps
jae
rol
outs
movs
cmp
cmp
ss
idiv
fldcw
xchg
fild
mov
xor
jo
repnz
cmp
inc
daa
adc
or
lock
daa
call
jns
sub
jle
xchg
not
dec
add
pop
add
mov
mov
(bad)
imul
mov
pop
movs
jne
add
aad
and
mov
and
aas
cwde
scas
jns
movs
jmp
pop
pop
adc
shl
imul
xchg
mov
mov
aad
ss
adc
pusha
(bad)
pusha
jne
dec
cmp
(bad)
xchg
lds
push
ins
es
jnp
cmp
adc
xchg
inc
and
jle
sti
ins
xchg
push
mov
inc
imul
movs
xchg
rcl
rol
aas
adc
xchg
out
outs
xchg
int
scas
cmp
add
inc
aas
(bad)
test
pop
ror
das
test
inc
add
mov
ret
lock
fidiv
push
dec
jp
push
imul
push
sti
mov
mov
ss
jl
popa
dec
sub
cmp
fsubr
jns
mov
add
xor
jns
leave
inc
sub
mov
inc
sub
lahf
enter
mov
xor
test
pop
or
adc
arpl
popa
cwde
adc
jae
movs
push
xchg
retf
pushf
jmp
mov
adc
inc
into
jmp
nop
(bad)
xchg
push
pop
test
mov
mov
mov
std
cmp
mov
sbb
mov
(bad)
pop
push
jbe
pushf
mov
and
sub
cmp
pop
dec
adc
loope
ins
mov
inc
mov
imul
int3
and
or
movs
outs
mov
test
mov
xchg
or
fisttp
mov
lea
test
ret
fdiv
jg
lea
sub
jge
push
jecxz
aad
push
fcom
add
sbb
aam
inc
jle
into
cld
jl
mov
dec
lds
inc
push
sbb
adc
sbb
or
(bad)
out
adc
xchg
int3
aam
and
xor
jmp
sbb
xor
into
mov
jns
fsubr
mov
push
or
shl
pop
dec
and
lds
sbb
cmps
sar
inc
test
add
push
adc
cmp
sbb
push
push
sbb
xchg
cmps
bound
std
or
sub
and
aaa
sbb
movs
mov
into
lods
mov
fnstsw
pop
retf
pop
add
repz
test
jne
fdiv
push
ds
jbe
scas
shl
pop
xor
xchg
mov
and
popa
sub
popa
push
xchg
loop
push
xor
push
jge
dec
ds
les
mov
mov
ds
sub
les
ins
sbb
xchg
repnz
inc
inc
inc
jae
mov
mov
repz
xor
aas
jno
xor
cs
jae
test
lahf
pop
or
imul
cwde
rcr
jl
mov
ficomp
pusha
sub
jg
ds
fsubr
or
std
cld
repz
pop
mov
fild
pop
cmp
pop
xchg
mov
xchg
jns
(bad)
int
mov
leave
loope
xor
cmp
pop
mov
xchg
nop
xor
sub
inc
dec
stc
jmp
jge
outs
xchg
add
nop
xchg
jl
and
mov
in
sar
(bad)
aam
dec
inc
mov
mov
fisttp
and
sar
add
push
sahf
stos
mov
lahf
clc
lods
xchg
pop
ins
mov
ret
bswap
int
pop
jbe
sbb
sahf
into
test
lds
cmp
movs
cld
push
mov
cmp
test
mov
hlt
sub
stc
sub
retf
fdivr
les
xor
test
mov
(bad)
jmp
sbb
and
mov
xor
pop
enter
int3
adc
xor
cli
es
out
pop
dec
jge
mov
push
push
out
mov
call
in
stos
ja
mov
out
fwait
push
mov
push
addr16
(bad)
enter
mov
loop
xchg
dec
add
add
es
aad
fwait
loope
dec
jbe
pop
jae
pop
inc
inc
int3
jge
or
(bad)
dec
ins
pusha
aad
ret
cmp
cdq
aas
dec
pop
retf
push
mov
ror
fbld
mov
les
mov
push
xor
mov
in
add
xchg
in
cmp
fnstcw
mov
jo
pop
pop
mov
add
sti
enter
scas
push
xchg
mov
retf
dec
mov
inc
std
cmp
sar
and
add
xchg
fisub
push
pop
enter
mov
data16
mov
xchg
xor
fnsave
das
xor
in
pop
movs
(bad)
in
leave
mov
loopne
push
push
repnz
jb
jp
mov
sbb
fs
jl
xor
imul
xchg
addr16
mov
aas
pop
adc
out
adc
mov
shl
adc
inc
push
imul
xchg
inc
pop
mov
xor
in
orps
xchg
inc
jle
add
retf
out
nop
js
and
jbe
inc
adc
sahf
movs
cli
xor
iret
ins
ror
popa
loopne
sar
imul
pusha
sub
mov
nop
or
mov
add
inc
mov
or
jo
sahf
adc
je
out
ds
pop
push
fdiv
push
xchg
pcmpeqw
or
iret
cmp
into
jge
je
lods
inc
in
mov
and
int3
ret
rol
sub
cmp
call
or
sub
mov
or
xor
jns
mov
leave
retf
movs
mov
test
jmp
push
icebp
test
sub
clc
mov
stos
fcomp
popf
movs
ja
js
shl
jmp
int
clc
jmp
popa
jbe
ror
lea
bound
cwde
push
mov
xchg
cmp
cdq
repnz
lds
mov
and
sbb
fist
mov
mov
test
or
js
add
lds
imul
dec
cmps
sub
lds
sub
inc
jp
adc
sbb
sti
or
repz
mov
bound
lods
sbb
fld
jl
adc
pop
fnstcw
shl
lods
in
dec
(bad)
repz
test
xlat
bound
ret
test
xchg
mov
lds
dec
adc
mov
push
xor
cld
jecxz
inc
je
(bad)
sti
cmp
outs
pop
icebp
iret
adc
and
jge
out
jecxz
add
mov
out
dec
sti
mov
mov
out
outs
das
lods
mov
out
in
mov
xor
add
pop
fisttp
lds
or
call
xor
jae
pop
out
cmps
lahf
ds
xchg
xchg
push
fs
popa
adc
in
and
cmp
cmp
movs
cmps
popa
cdq
inc
sti
nop
jecxz
xchg
push
fld
sub
push
data16
push
mov
clc
xchg
adc
xchg
push
push
call
cmp
adc
test
cli
cmp
(bad)
icebp
sub
jne
mov
test
retf
jne
dec
mov
inc
add
lds
mov
inc
and
mov
jecxz
cli
lods
xor
push
pop
scas
outs
popf
add
dec
jmp
mov
ret
popa
enter
clc
jecxz
scas
or
sbb
popf
mov
daa
adc
dec
aad
and
test
repnz
rcr
ins
movs
fsub
xchg
adc
sbb
and
out
sbb
mov
popf
jmp
mov
xchg
in
add
ret
xlat
ins
jo
sub
cmp
mov
scas
test
jecxz
fistp
lds
retf
(bad)
nop
ja
loope
jns
add
and
das
fwait
push
mov
arpl
hlt
add
cdq
loopne
xchg
dec
dec
add
loopne
sbb
dec
int
cmp
jge
sti
jl
aaa
push
xchg
outs
push
xor
hlt
inc
push
out
sti
adc
push
aaa
cmp
mov
mov
(bad)
(bad)
(bad)
cli
mov
arpl
aad
repz
xchg
jnp
cwde
sbb
fnsave
mov
jge
(bad)
inc
push
pop
pop
mov
mov
xor
jecxz
shl
stos
sbb
push
xchg
je
sub
inc
pop
or
cmps
xlat
imul
add
(bad)
mov
mov
push
mov
daa
mov
fiadd
sti
dec
adc
mov
out
dec
xchg
hlt
adc
nop
mov
mov
imul
clc
das
xchg
sbb
clc
push
pop
sbb
scas
pop
cmp
jns
sbb
fistp
inc
push
sub
fisubr
cmp
add
(bad)
ds
dec
(bad)
dec
out
aam
cmps
(bad)
jb
jmp
ror
popf
push
je
jo
fcmovnb
cwde
out
push
(bad)
pop
imul
or
out
mov
mov
fwait
or
inc
sbb
rcl
jno
sahf
fisttp
outs
rcr
dec
dec
push
iret
ret
lea
test
in
ds
add
mov
fidivr
xchg
xchg
adc
xchg
fldenv
out
mov
pusha
dec
push
sub
mov
shl
jl
js
pop
inc
(bad)
fisubr
push
icebp
pusha
push
cmps
mov
xor
stc
xchg
outs
popf
retf
int3
push
popa
fnsave
jb
add
push
adc
xchg
(bad)
ins
and
jmp
shl
stc
daa
sbb
jo
mov
cmp
pushf
aad
cld
add
mov
mov
outs
popa
push
xchg
cmps
pop
xrelease
sbb
out
sub
jge
repnz
mov
fnsave
xchg
in
push
imul
movs
(bad)
bound
je
push
pushf
jne
retf
test
inc
mov
inc
nop
sub
jp
push
inc
jg
jne
test
sbb
stc
add
mov
sub
xchg
pop
popf
cdq
or
push
dec
mov
in
pop
loope
arpl
mov
out
mov
sub
div
xlat
cld
mov
iret
jcxz
pusha
xlat
push
cwde
push
shl
test
sub
dec
(bad)
fmulp
mul
jecxz
mov
repnz
adc
jnp
(bad)
fbld
push
sub
sar
stos
daa
pop
add
jp
pop
jbe
mov
jns
or
sbb
mov
es
or
sub
sbb
data16
(bad)
jmp
jns
pusha
push
loop
xchg
loop
and
xor
and
shr
cmp
xchg
jp
add
cmp
mov
mov
cs
pop
ss
out
imul
aaa
add
adc
cdq
mov
adc
and
sar
pusha
fist
push
stc
scas
xchg
or
pop
mov
pop
jo
loop
mov
(bad)
push
mov
pusha
jg
in
or
or
mov
cwde
cmp
pushf
daa
lds
arpl
mov
leave
and
inc
scas
xor
jb
fldcw
adc
jle
xor
cdq
dec
in
ins
jecxz
pop
stos
jl
es
cdq
mov
in
xor
xchg
mov
and
mov
rcr
test
ss
mov
lods
or
hlt
sbb
jne
lods
(bad)
fldenv
fisub
outs
repz
mov
sbb
inc
imul
mov
sub
jmp
shl
cmp
lea
call
adc
in
xchg
and
loopne
push
pop
es
or
sbb
add
cmc
or
mov
retf
test
stc
addr16
cmp
gs
inc
sub
add
sti
lds
adc
fsubr
mov
or
aaa
dec
xchg
sub
test
jb
add
cli
cmps
js
outs
xor
in
mov
aam
pop
push
sar
aam
out
mov
ss
jp
mov
repnz
les
dec
inc
in
retf
cmps
fwait
call
imul
inc
push
ds
mov
ss
or
sbb
out
ins
(bad)
pop
or
xor
mov
es
enter
out
clc
aaa
leave
retf
call
in
out
push
dec
xchg
pop
adc
scas
into
rcr
mov
mov
(bad)
aas
stos
pop
xlat
in
stos
shr
dec
loop
pop
cmp
xor
mov
(bad)
hlt
inc
dec
lods
test
sbb
push
xchg
rcl
std
cdq
dec
adc
(bad)
leave
outs
push
imul
dec
test
ds
jg
xchg
and
pop
sahf
dec
ja
rcl
test
iret
les
mov
mov
xor
jmp
or
mov
cmp
fstp
push
(bad)
and
lock
fsubr
js
lods
jl
aad
aaa
mov
xor
jp
cmp
leave
sbb
das
lea
ret
xchg
retf
cmp
or
int3
or
and
ret
push
enter
sbb
cmps
mov
leave
jo
shl
xchg
xlat
bt
lods
retf
jns
adc
(bad)
mov
shl
mov
and
fst
xor
dec
les
daa
or
ret
xor
lock
fcomi
inc
or
add
jae
push
cmp
fst
cld
into
fidiv
xchg
inc
push
dec
xor
pop
hlt
lods
stc
stos
xchg
push
pop
scas
inc
xor
add
lahf
aad
adc
mov
mov
xchg
imul
push
nop
or
sbb
les
jae
add
inc
push
into
in
ror
movs
or
popf
stos
adc
stos
popa
pop
push
inc
pop
fwait
mov
bound
mov
sbb
xchg
ror
movs
mov
and
and
outs
mov
sub
xlat
imul
lahf
cs
push
data16
sahf
mov
ss
jge
lock
call
mov
and
mov
dec
xchg
jne
imul
cmp
sub
inc
cld
js
xchg
das
fwait
loope
mov
xlat
inc
into
xchg
or
xchg
mul
and
dec
rol
aad
stos
xchg
out
int3
test
push
xor
bound
sub
xor
fidivr
jmp
adc
fidivr
inc
xor
lahf
fdivr
adc
xor
gs
gs
pop
ins
mov
and
or
cmp
(bad)
les
jno
xchg
pop
jecxz
lds
ds
lods
jnp
(bad)
cmc
push
pushf
fldcw
and
cmp
mov
pop
jno
add
addr16
add
jle
jo
jmp
and
es
mov
sbb
fsubr
sub
push
xchg
jecxz
xchg
ins
mov
inc
pop
push
mov
popf
imul
(bad)
jae
mov
cli
adc
cmp
stos
sbb
and
dec
lods
add
cmp
inc
ret
out
sub
inc
sub
lock
push
fwait
xor
fst
bound
jle
add
mov
xor
stos
push
mov
jne
add
xchg
call
pusha
or
out
aad
std
lds
imul
dec
adc
fwait
(bad)
movs
mov
jle
imul
mov
pop
jmp
(bad)
xchg
jecxz
stos
rol
mov
ins
test
les
fdiv
jne
inc
push
sub
(bad)
call
mov
fs
pop
clc
pop
jb
and
dec
jbe
dec
mov
test
jmp
jbe
sar
push
and
ins
jmp
(bad)
mov
dec
ficom
data16
adc
leave
xchg
or
inc
enter
outs
mov
pop
push
bound
test
test
hlt
loopne
xor
jo
call
mov
sub
pop
rcr
xor
dec
xor
retf
loop
pusha
jbe
mul
add
mov
jae
pop
xor
adc
jge
imul
mov
push
call
je
std
mov
push
jnp
fwait
pop
and
cld
(bad)
jbe
mov
xchg
shr
aad
inc
addr16
stc
pop
outs
push
bndstx
sub
outs
sub
or
push
pop
xor
sti
hlt
(bad)
and
into
mov
int3
(bad)
pushf
cmp
jne
inc
out
xor
movs
mov
pop
push
fidivr
in
ror
xor
test
stos
int3
out
scas
inc
cld
call
sbb
shr
add
push
in
(bad)
out
sbb
mov
or
imul
inc
mov
adc
(bad)
adc
mov
pop
std
dec
inc
sti
iret
(bad)
sti
push
mov
adc
pmaxub
inc
int3
inc
js
xor
jmp
xor
clc
stos
inc
inc
dec
scas
mov
sbb
popf
xchg
ss
ret
cld
popf
lock
fwait
movs
or
jle
mov
fidiv
pop
pop
xor
dec
mov
mov
and
mov
jnp
fdiv
(bad)
and
pushf
ins
int3
xchg
mov
jno
inc
test
sub
(bad)
into
xor
shl
mov
bswap
rcr
pusha
add
cmp
xchg
add
imul
mov
lea
cs
out
cmps
(bad)
fwait
out
aaa
sub
nop
in
bnd
(bad)
dec
xor
xchg
es
shl
ins
lock
fcom
fidivr
mov
loop
into
dec
iret
push
lahf
jg
aad
cmps
push
in
sub
cmp
add
jle
dec
mov
ds
ds
push
xor
aam
pop
dec
xor
pop
cmp
lods
xor
jmp
or
dec
arpl
dec
inc
dec
out
mov
push
fsub
jg
(bad)
pop
cmp
sub
ss
mov
fs
inc
push
fadd
ror
cli
jne
mov
pop
js
sub
dec
xchg
mov
xchg
out
xchg
adc
out
movs
lods
test
call
and
movs
xor
loope
jno
sti
inc
js
mov
in
fwait
xchg
sub
adc
mov
leave
mov
inc
stc
adc
inc
mov
jg
ins
test
push
inc
push
mov
xor
sahf
leave
or
mov
ins
jmp
and
sub
jge
shl
(bad)
clc
inc
adc
dec
xchg
dec
xor
adc
or
adc
sti
pusha
cwde
mov
shr
fnstsw
mov
xchg
jns
stc
mov
ins
inc
shr
fimul
dec
dec
and
je
xchg
inc
icebp
jecxz
jae
ins
inc
sub
inc
and
and
sbb
inc
add
leave
dec
mov
aaa
push
add
js
(bad)
pop
out
(bad)
push
sti
or
add
nop
cmc
into
mov
mov
inc
or
or
in
in
sbb
mov
popa
and
inc
dec
fsub
ss
inc
adc
mov
adc
adc
mov
jmp
pop
fsubr
sbb
fwait
cmp
inc
out
cld
xor
hlt
mov
pop
ss
les
xchg
mov
pop
das
dec
cmp
enter
mov
inc
or
sub
sub
push
cmp
sbb
cmc
aas
ss
cmps
call
and
xchg
clc
iret
add
les
mov
outs
xor
popf
call
das
pop
jl
cmp
push
dec
(bad)
(bad)
lea
scas
sbb
ss
inc
dec
cmp
adc
push
pop
pop
xor
das
(bad)
or
lods
repz
adc
and
sbb
sahf
mov
lock
das
push
push
add
sub
bound
popa
push
rcl
(bad)
xor
push
and
mov
popf
stos
icebp
adc
ret
mov
jae
xchg
out
fxch
call
jno
fwait
push
scas
jmp
sub
cmp
mov
leave
mov
rol
imul
mov
jno
add
mov
out
jbe
adc
mov
jecxz
bound
jle
xchg
shr
and
lds
inc
sbb
(bad)
mov
cmp
xchg
pop
jns
cdq
ret
sti
pop
ss
scas
adc
in
xchg
imul
mov
test
rol
mov
jmp
pop
push
cmp
dec
mov
test
repz
les
popf
bound
pop
shr
(bad)
pop
add
js
sar
inc
add
outs
enter
dec
aam
xor
sbb
loopne
out
jo
fistp
imul
mov
push
int
jno
retf
iret
adc
push
(bad)
fdiv
dec
push
outs
and
imul
mul
and
mov
rcr
popf
sbb
test
and
shl
lods
icebp
push
test
add
int
out
and
jae
fsubr
fistp
shr
pusha
add
test
(bad)
mov
push
mov
(bad)
rcr
test
aas
jno
mov
mov
push
(bad)
sti
xchg
adc
xchg
xor
xchg
sti
sbb
cwde
jmp
lea
(bad)
mov
mov
push
dec
inc
stos
push
jmp
mov
mov
push
fld
push
imul
mov
sbb
mov
xchg
movs
movs
shr
vmovdqa
fwait
(bad)
cwde
mov
or
adc
sbb
jmp
test
jae
dec
(bad)
leave
adc
cmps
pop
pop
inc
xor
test
call
lods
or
xlat
popa
clc
inc
push
das
pop
fstp
adc
jle
xor
cmp
and
xchg
sbb
mov
push
inc
jns
mov
sbb
dec
mov
pushf
fmul
mov
sbb
xchg
xor
pop
out
adc
push
rcr
xor
ins
pop
jbe
in
imul
xlat
out
mov
adc
xor
cmp
test
movs
sub
jge
daa
ret
mov
(bad)
jmp
aad
mov
movs
pop
js
mov
dec
inc
xchg
xchg
mov
jecxz
dec
push
ja
push
jge
sub
add
daa
out
lock
pop
inc
xchg
xchg
test
push
mov
ret
test
stos
popf
xchg
jnp
pop
mov
addr16
push
xchg
movs
hlt
dec
test
(bad)
adc
or
clc
cmp
inc
mov
sub
xchg
loopne
sar
adc
scas
mov
mov
pop
add
mov
xchg
icebp
mov
push
in
sar
mov
adc
stos
ret
push
(bad)
mov
inc
popa
movs
out
shl
std
xlat
mov
fstp
lods
in
aad
pop
out
jns
fisub
mov
sub
adc
outs
push
push
and
rcr
pop
sub
(bad)
push
out
icebp
push
fcom
inc
pop
mov
je
mov
sbb
dec
or
mov
gs
int3
div
sub
or
jecxz
and
mov
fs
cmp
fimul
cmp
pop
xor
inc
or
in
popa
sbb
iret
adc
cli
(bad)
dec
fcom
js
dec
out
sbb
icebp
jb
and
xlat
push
inc
out
sti
jne
mov
cmp
and
sub
mov
pop
inc
(bad)
cwde
and
fnstenv
test
xor
mov
loop
push
dec
mov
lds
test
push
sahf
jge
call
sub
js
and
mov
and
jmp
push
and
cmp
fdivr
push
or
mov
ins
js
fidivr
sub
leave
mov
xchg
clc
mov
ja
cdq
call
mov
cmp
(bad)
cdq
in
fwait
int
pop
test
mov
fstp
(bad)
cmps
pop
rol
arpl
mov
add
push
test
loope
mov
push
lods
push
lds
push
ret
(bad)
fwait
jns
icebp
or
inc
sub
loopne
popf
jecxz
adc
enter
cmc
sbb
arpl
xchg
div
es
sbb
pop
jbe
fcmovu
repz
add
mov
jl
dec
xor
clc
test
in
das
imul
xor
inc
push
and
in
cmp
addr16
sub
movs
mov
popa
add
xchg
sub
rcl
fisub
jb
jg
inc
xchg
cmp
ret
ror
popf
mov
cs
jae
rcr
cwde
repnz
push
adc
les
push
shl
cmp
std
mov
int3
sbb
cs
ja
mov
cld
gs
in
or
dec
stos
repnz
gs
in
jp
xchg
or
in
sub
(bad)
cmps
mov
mov
test
push
sti
push
xchg
lds
mov
cmp
bound
and
retf
out
cwde
movs
int
mov
(bad)
fwait
daa
fist
movs
mov
popf
adc
int3
mov
lods
fwait
and
or
ret
xor
pop
jg
adc
jne
jmp
fcomip
jbe
mul
inc
mov
sbb
dec
jno
loopne
and
cli
adc
add
call
fist
mov
ds
and
jns
movs
jg
xchg
sbb
inc
add
hlt
inc
shl
scas
mov
fbstp
pop
jb
ds
(bad)
mov
mov
sub
cwde
sub
aad
xchg
retf
or
(bad)
call
aam
popa
lahf
rol
and
mov
xor
jo
xchg
mov
push
mov
in
cmp
scas
mov
sbb
push
xchg
push
sbb
pop
repnz
inc
in
jle
mov
add
into
sahf
inc
pusha
dec
and
jb
call
(bad)
mov
inc
out
outs
fild
shl
xchg
add
jnp
mov
mov
test
retf
mov
ins
mov
sub
jge
mov
call
pop
xor
setae
inc
lock
jbe
popf
xchg
bound
dec
sub
jmp
mov
push
inc
mov
cmps
sbb
test
lea
or
pop
aas
cli
fs
sbb
mov
add
je
xchg
sbb
in
mov
dec
and
std
(bad)
mov
movs
adc
pop
cmp
cwde
mov
gs
pop
movs
dec
inc
sub
push
inc
gs
and
shr
movs
adc
xchg
pop
dec
aam
add
lahf
add
cli
xor
mov
inc
imul
push
or
fmul
in
int
adc
and
test
lods
popa
jl
sub
idiv
addr16
or
xlat
inc
and
add
rol
and
ss
push
stos
call
retf
aaa
adc
das
sub
inc
xor
inc
stos
xor
pop
jmp
sti
fs
mov
iret
and
pop
int
sub
repz
imul
sbb
mov
dec
hlt
xchg
jl
test
mov
add
mov
push
ds
in
out
std
sbb
leave
loope
xor
iret
inc
scas
pop
adc
mov
sbb
aam
push
xor
sub
pop
retf
push
fld
aaa
dec
adc
enter
test
cmps
or
fisttp
popa
fmul
push
jae
jns
scas
test
jge
(bad)
int3
sub
fucomp
test
je
pop
nop
call
test
cmp
ins
mov
sti
xor
mov
jae
int
inc
push
xchg
xchg
(bad)
leave
push
cmps
pop
in
inc
cwde
(bad)
test
sub
ds
add
loopne
and
sti
(bad)
adc
xor
mov
add
dec
arpl
pop
pop
pop
inc
jle
fnstenv
xor
mov
fadd
dec
fmul
pop
and
in
push
pop
aam
add
pop
iret
inc
adc
inc
cmc
fdiv
into
movs
mov
inc
adc
call
mov
xor
sbb
add
push
lds
xchg
sbb
mov
sbb
jp
inc
mov
daa
and
je
dec
xchg
cmp
int3
in
mov
cwde
aam
clc
repnz
(bad)
push
cmp
jg
mov
mov
jmp
inc
enter
sbb
mov
pop
imul
sar
pushf
push
imul
int
sub
mov
inc
loope
cmp
imul
and
or
fdivr
icebp
inc
icebp
and
sti
pop
stc
jmp
jbe
fdivr
setp
mov
stos
shl
sub
call
dec
and
cld
adc
xor
pusha
pop
into
xchg
xchg
or
or
pop
lods
ins
xor
sub
ds
lock
dec
jg
pushf
xchg
fneni(8087
cmps
retf
sbb
mov
imul
xchg
xor
add
loopne
add
out
std
cmps
aaa
xchg
adc
cmp
sbb
or
test
cmps
mov
rcl
dec
mov
xchg
lods
mov
fild
pop
stc
mov
pop
add
mov
stos
(bad)
into
scas
jbe
fadd
pusha
aad
xchg
sub
out
cmp
adc
adc
xchg
or
push
add
arpl
xor
mov
shl
push
les
fidivr
aaa
in
imul
movs
out
popf
pop
inc
mov
ror
ins
out
mov
mov
adc
mov
ja
aas
inc
adc
inc
and
into
sti
mov
add
jmp
jmp
sub
ficom
std
fist
sbb
nop
inc
mov
inc
cwde
es
adc
xor
daa
inc
clc
stc
push
test
and
adc
xor
lods
jns
stc
icebp
jne
int3
mov
xchg
movs
sub
sub
(bad)
lods
ja
sbb
lods
cld
mov
out
or
bound
mov
cwde
inc
ins
jae
lahf
scas
ins
jmp
adc
add
arpl
mov
adc
sbb
push
imul
(bad)
stc
repz
inc
mov
sahf
xchg
jmp
fs
mov
sahf
fldenv
xchg
jmp
jb
stos
jnp
cld
and
pop
ret
clc
jae
add
sbb
add
jl
pop
pop
test
(bad)
std
jne
bound
mov
ret
or
inc
fsub
add
mov
out
pop
out
retf
test
outs
shr
sar
outs
ret
jp
es
inc
dec
xlat
push
pop
icebp
push
jp
xor
stos
pop
clc
sbb
xchg
ins
stos
sbb
jnp
pop
cmp
mov
int3
test
mov
cdq
sub
or
mov
outs
mov
push
bound
mov
sub
sub
dec
nop
adc
stc
jmp
xchg
push
popf
add
and
je
imul
dec
fcom
std
and
outs
cmps
mov
mov
jl
lods
hlt
arpl
enter
loope
cmps
rcr
jecxz
out
out
out
cmps
repz
xchg
cmp
leave
clc
mov
xchg
dec
xchg
imul
dec
lea
popf
into
dec
iret
xchg
hlt
out
dec
jge
mov
mov
mov
or
xchg
jp
mov
(bad)
add
(bad)
pushf
hlt
enter
fidivr
mov
(bad)
xlat
inc
(bad)
in
mov
je
mov
fwait
add
lds
fwait
xor
pop
mov
push
add
push
sbb
or
pop
push
lods
sbb
out
leave
arpl
inc
mov
call
sub
das
adc
sub
xchg
cmc
jo
xlat
gs
sbb
mov
dec
(bad)
or
shr
cmc
dec
xchg
cmp
out
cli
icebp
in
(bad)
movs
xor
push
or
sbb
add
cmp
jnp
push
adc
push
adc
icebp
dec
adc
shr
stos
es
push
movs
sbb
rcl
cli
ret
fucomp
push
or
std
jge
mov
jl
xor
ins
mov
test
(bad)
push
movs
sbb
jmp
fild
popf
inc
mov
rcr
(bad)
lock
sbb
fcom
sbb
dec
lods
sub
out
(bad)
fcmovb
arpl
imul
cmp
sub
cmp
lods
push
out
adc
lods
rol
sar
jae
jmp
adc
push
rol
dec
xor
pusha
int3
(bad)
(bad)
push
inc
mov
call
sub
dec
sbb
jns
(bad)
out
shl
sbb
stc
lods
repz
pushf
xchg
add
movs
pop
jae
push
dec
add
xchg
dec
iret
out
jb
sbb
xchg
cmp
jecxz
push
or
xor
sbb
sbb
dec
pop
inc
movs
pop
addr16
je
push
ret
icebp
out
push
ja
inc
fdivr
inc
cdq
lea
cmc
push
fs
dec
loope
scas
cmps
push
retf
push
lods
idiv
push
mov
push
into
or
add
stos
retf
int
xchg
xchg
(bad)
push
rol
out
out
lods
fwait
mov
adc
add
scas
leave
enter
inc
aaa
mov
mov
sub
fdivr
inc
mov
xor
dec
stos
into
addr16
sti
(bad)
jnp
lods
cmp
shr
mov
fbld
push
out
rol
dec
jmp
out
ret
sbb
fnsave
popa
movs
cmp
xor
gs
xchg
arpl
js
adc
icebp
scas
jge
loop
adc
enter
(bad)
mov
push
enter
push
push
jno
xchg
fidiv
pusha
cmp
sahf
mov
adc
inc
push
(bad)
pop
shl
imul
dec
outs
ins
cmp
adc
bnd
ss
mov
adc
jbe
xchg
aaa
jp
jg
mov
bound
sub
mov
adc
push
test
cs
into
fdiv
mov
jns
cmps
int3
pop
es
std
aad
(bad)
push
test
add
jo
cwde
inc
inc
imul
out
imul
inc
retf
xor
or
jnp
push
mov
xchg
pop
pop
sbb
inc
test
or
aad
je
push
sub
jl
add
not
stos
out
cmp
cdq
mov
adc
setns
inc
xchg
adc
cmp
popa
add
int3
add
push
mov
or
push
xor
(bad)
xor
xchg
mov
cld
ja
and
ins
mov
sbb
clc
sbb
add
enter
and
inc
dec
test
xchg
fsubr
into
lea
dec
pop
cwde
fnsave
in
adc
mov
sar
mov
pop
dec
xor
lea
test
sub
nop
hlt
sbb
or
cmp
stos
aas
test
mov
mov
(bad)
sbb
sub
adc
xor
jl
push
cmps
jl
(bad)
sub
mov
call
fsubr
pop
jle
lahf
(bad)
fwait
sbb
push
aaa
es
and
movs
aaa
pop
aam
bound
in
retf
loop
es
pop
push
into
lea
daa
jns
cmps
push
cmps
jb
fdivr
ror
pop
cmps
push
inc
dec
fidiv
fwait
or
je
mov
(bad)
je
xchg
(bad)
retf
xacquire
pusha
push
mov
push
mov
mov
pop
aad
sar
push
and
ret
mov
stos
(bad)
stos
stos
sahf
and
mov
jp
cwde
cwde
rol
adc
inc
jne
mov
cs
push
popf
lock
inc
cmp
push
xor
inc
xchg
sub
imul
or
mov
push
mov
dec
das
jbe
push
push
stc
jae
inc
adc
stos
push
addr16
adc
out
adc
xor
test
xor
push
add
xor
cdq
les
xchg
and
test
imul
sahf
mov
fisub
enter
mov
femms
inc
sbb
and
stos
cdq
inc
int3
lods
adc
or
mov
gs
mov
stos
iret
outs
or
cmc
mov
or
(bad)
jecxz
inc
jge
mov
sub
xchg
sbb
repnz
inc
xchg
or
sbb
sub
dec
add
out
mov
in
addr16
hlt
js
icebp
shr
ja
test
push
mov
shl
pmuludq
sub
xchg
xchg
fs
mov
pop
mov
ret
aam
xor
cmps
outs
and
loope
pusha
mov
cs
cmp
adc
jge
inc
push
cmps
cdq
ret
add
test
pop
retf
outs
xor
mov
nop
and
fistp
hlt
jge
add
popa
sub
sahf
adc
out
lods
xor
es
sub
cmps
xlat
inc
sbb
test
cs
inc
sbb
or
pop
out
cmp
outs
pop
xchg
test
and
mov
jl
lods
fwait
(bad)
iret
pop
(bad)
lahf
jmp
push
mov
lea
lods
pop
sub
or
loopne
inc
jns
ss
push
or
pop
retf
mov
stos
push
add
pop
shl
sbb
scas
movs
inc
jno
scas
or
and
shr
and
jno
test
dec
aaa
dec
fwait
sbb
jo
mov
inc
lock
xor
sbb
jle
jmp
jb
mov
loop
test
inc
in
scas
stc
xor
sbb
pop
sbb
mov
sub
add
push
push
or
dec
mov
imul
mov
cs
dec
mov
bound
fs
mov
pop
add
loope
fwait
push
adc
mov
movs
div
push
(bad)
stos
add
fisttp
repz
js
iret
iret
outs
imul
adc
sub
add
mov
jecxz
(bad)
jmp
push
mov
mov
(bad)
sub
(bad)
pop
inc
push
into
retf
mov
test
xchg
cli
and
fbld
jl
push
mov
out
fstp
test
pusha
or
daa
into
jmp
jmp
sbb
outs
test
nop
retf
jmp
cmp
push
pop
jbe
ror
cmc
push
dec
fs
out
jne
or
shl
add
jecxz
push
cli
jb
fwait
inc
mov
inc
pop
and
mov
and
jmp
or
mov
cmc
mov
ds
dec
(bad)
and
(bad)
cli
les
and
fild
pop
mov
(bad)
dec
(bad)
xchg
(bad)
retf
mov
mov
sbb
xor
push
mov
sbb
xor
adc
out
cdq
sub
call
mov
cs
iret
aas
mov
cmp
xor
test
xchg
xor
lods
and
push
cwde
cli
imul
sub
push
xchg
adc
lods
ds
inc
jmp
fidiv
repnz
cmp
adc
ror
jl
or
add
fisttp
aas
lods
lods
into
sbb
cmp
cmp
sbb
or
lds
fadd
dec
shl
xchg
cwde
jo
pop
jp
(bad)
lea
cmc
push
xchg
sar
fnsave
scas
jb
xor
mov
popa
sbb
mov
cmp
or
or
(bad)
xor
movs
xchg
clc
mov
sub
(bad)
dec
sub
mov
fs
dec
pop
popa
jno
aas
lahf
into
pmullw
test
dec
jno
mov
mov
inc
int3
mov
in
mov
jb
sub
imul
(bad)
mov
outs
(bad)
pop
push
inc
xchg
xchg
imul
push
sub
and
xor
lods
pop
fwait
fwait
mov
leave
jle
add
lds
lods
lods
pop
pushf
push
sbb
mov
int
data16
pop
icebp
inc
js
cli
pop
jae
mov
(bad)
pusha
fsubrp
loopne
mov
xor
and
scas
js
adc
adc
push
retf
adc
inc
outs
daa
ss
sub
mov
pop
and
aaa
imul
out
ja
in
and
pushf
dec
out
stos
push
dec
bound
ret
mov
sbb
icebp
in
dec
add
cld
mov
mov
repnz
cmp
xor
fwait
mov
fcmovbe
cmps
in
xchg
sub
lea
pop
shl
xchg
nop
not
push
sub
mov
dec
push
or
jb
add
(bad)
pop
fistp
retf
and
add
cmps
jae
mov
add
int3
adc
retf
dec
(bad)
std
mov
scas
add
icebp
std
adc
or
pop
call
je
mov
aam
pop
xlat
sar
sbb
jl
and
mov
jl
lahf
or
add
mov
cs
mov
inc
inc
enter
ret
push
pop
push
mov
lea
sbb
pop
mov
pop
aas
inc
(bad)
repz
dec
dec
ret
or
cmp
scas
add
pop
inc
push
xchg
imul
mov
sub
xor
retf
loope
add
inc
cmp
rol
add
(bad)
mov
fwait
xchg
mov
dec
cmc
adc
jmp
cmps
pop
data16
in
ret
aas
add
call
cdq
dec
xchg
lods
mov
idiv
pop
mov
mov
sub
ins
cmp
pop
mov
imul
mov
push
mov
cmc
aas
gs
call
mov
sbb
ss
(bad)
fistp
inc
dec
xor
sbb
fadd
adc
and
std
out
or
call
adc
ins
pushf
jl
adc
aaa
shl
jmp
(bad)
in
je
xchg
(bad)
xchg
aam
sbb
call
sub
int
retf
adc
fimul
out
or
dec
(bad)
dec
ret
cli
sbb
stos
pop
in
movs
mov
xor
xlat
mov
cmps
cmp
loopne
mov
pusha
addr16
add
inc
mov
and
fs
sar
mov
adc
cmp
test
xchg
mov
dec
mov
dec
xor
es
mov
pop
add
ds
repz
retf
push
repnz
adc
sub
pop
add
push
sub
xchg
pop
sbb
sbb
jp
in
lods
cmp
mov
cli
jmp
mov
push
hlt
fucomp
jge
(bad)
jbe
jmp
aam
cmp
xchg
adc
xchg
repnz
shr
cmp
xchg
(bad)
test
outs
adc
(bad)
movs
push
jno
arpl
arpl
adc
movs
sar
mov
add
sub
adc
loopne
lds
inc
adc
into
clc
inc
and
dec
mov
fdivr
push
mov
xchg
(bad)
pop
push
aas
mov
mov
loope
xchg
scas
jge
and
into
or
outs
mov
jle
(bad)
(bad)
test
adc
push
cmp
sub
jnp
or
icebp
les
inc
call
gs
pushf
scas
lds
test
imul
(bad)
loop
xchg
cdq
pop
retf
sub
xchg
das
pop
je
add
jle
les
iret
push
adc
and
adc
out
jl
scas
push
inc
add
call
cmp
outs
(bad)
out
sbb
dec
into
scas
sbb
retf
inc
shl
loope
mov
cwde
sub
sub
stc
mov
add
stos
repz
sbb
sub
adc
push
cmc
ins
enter
gs
fiadd
adc
xchg
cmp
push
or
jp
retf
inc
sub
fistp
and
add
clc
in
mov
xchg
jmp
dec
js
dec
lods
push
mov
dec
push
dec
xchg
out
pop
inc
sbb
arpl
test
or
mov
inc
(bad)
call
add
jl
sub
pop
push
imul
nop
pop
mov
std
fisub
ds
fimul
fdiv
cmova
ins
ja
out
adc
call
mov
xchg
xor
daa
push
xor
loope
bound
jle
or
mov
fdiv
cs
imul
or
in
jno
push
push
imul
(bad)
and
test
ret
stos
cmp
repz
call
push
cs
fldenv
xor
pop
xor
jo
in
xor
inc
pop
scas
popa
adc
inc
xor
or
hlt
or
or
mov
cwde
dec
fwait
retf
sbb
dec
mov
in
adc
push
mov
dec
inc
mov
stc
or
or
sub
cmp
into
xor
jae
fistp
or
rcr
sub
ins
sbb
dec
dec
shr
pop
lock
mov
dec
movs
mov
xlat
mov
arpl
mov
xchg
sbb
xor
ja
pop
std
or
stc
repnz
add
shl
pop
loop
pop
inc
loopne
sti
mov
xor
mov
test
es
shr
cmp
outs
xchg
lahf
cmp
xor
inc
sub
push
jg
pop
mov
imul
icebp
outs
ins
imul
(bad)
or
movs
xchg
mov
mov
adc
jmp
sbb
mov
lods
and
hlt
sub
add
pop
xchg
ret
std
and
push
in
sub
call
dec
movs
jp
or
lock
cmp
add
push
ret
mov
cli
call
lock
int3
cmp
push
mov
ins
push
jne
inc
push
inc
stos
(bad)
gs
jb
shr
fbld
inc
test
shl
jns
lea
mov
jmp
push
cmp
fsub
sub
mov
(bad)
push
xchg
std
hlt
scas
xchg
xchg
test
js
and
ret
pop
lahf
call
shl
je
loope
xor
xor
or
(bad)
xchg
retf
(bad)
dec
js
outs
xchg
pop
sub
mov
outs
stos
scas
adc
xchg
lods
dec
cmps
enter
bound
test
pop
dec
call
inc
js
mov
pusha
jmp
mov
ja
fidivr
daa
pusha
mov
int3
mov
fcmovb
cmps
sbb
in
mov
(bad)
ss
imul
mov
rol
lods
mov
xchg
add
jb
push
shl
test
repnz
cmc
cmp
pop
in
add
inc
or
sti
sar
inc
repz
xchg
pop
call
repz
adc
mov
cmps
and
aas
inc
push
mov
loopne
sbb
dec
retf
sbb
aas
(bad)
cmps
mov
nop
mov
sub
loop
dec
mov
adc
shl
out
ret
and
sti
and
pop
dec
cmp
sub
ins
into
sbb
sti
cld
stc
jp
mov
jmp
add
ins
xlat
dec
mov
daa
sahf
inc
les
scas
mov
and
or
sub
jmp
out
dec
test
jl
add
int3
or
add
mov
(bad)
sbb
ins
loopne
ror
hlt
out
stc
sbb
add
fs
inc
mov
icebp
jae
imul
pop
je
mov
mov
fistp
cli
call
out
mov
(bad)
bound
or
xlat
mov
sub
cmp
push
movs
jbe
out
jnp
or
mov
sbb
add
imul
or
lds
(bad)
mov
jb
cwde
out
sub
jle
push
repz
xchg
mov
inc
xchg
mov
jns
ret
xor
aas
lahf
sti
das
pop
out
retf
xchg
jecxz
xchg
inc
inc
mov
xchg
lahf
jle
les
popf
fmul
arpl
pop
and
stos
stos
push
daa
and
lods
adc
scas
jno
pop
stc
jecxz
ja
xlat
mov
mov
xor
bound
(bad)
mov
jl
(bad)
repnz
and
xchg
or
mov
ror
and
stos
out
adc
mov
adc
or
jl
or
aad
or
mov
add
js
dec
movs
fst
push
out
js
shr
fwait
sbb
lods
sub
pop
retf
dec
movs
cmc
call
mov
pop
bound
mov
das
stos
jmp
fist
xchg
sub
dec
(bad)
mov
inc
aam
push
stc
shl
add
loope
imul
add
push
mov
ret
ja
jnp
ja
xor
pop
enter
test
iret
mov
ds
clc
pop
or
push
jno
xor
movs
mul
sbb
lds
cmp
aas
aaa
hlt
(bad)
fisttp
out
mov
cmp
lods
or
lods
mov
clc
cdq
pop
ins
jb
add
jg
repz
lods
mov
cwde
sub
add
outs
loop
aaa
pop
or
inc
int
fidivr
push
ror
or
and
in
aad
pop
cmp
xchg
jnp
dec
xor
aam
aam
xchg
(bad)
sbb
xchg
into
jl
popa
cmp
ret
fst
std
mov
jb
mov
xchg
shr
sub
arpl
mov
aaa
and
jle
fsubr
dec
std
imul
in
nop
pop
inc
adc
pop
fsubr
aam
dec
mov
cmp
ds
pop
ffreep
retf
dec
fdivr
push
pop
fbstp
jne
xchg
mov
push
and
int
cmp
daa
cmp
rcr
sar
daa
mov
xor
leave
rol
cmp
xor
or
pushf
sbb
test
int3
add
cdq
pop
call
mov
enter
shl
jecxz
sub
or
shl
daa
loopne
cmps
aam
repz
push
xchg
mov
leave
or
movs
out
cmp
pusha
gs
sub
jnp
and
ja
and
jns
loop
xchg
int3
or
idiv
mov
sub
push
ret
cmp
cwde
xchg
imul
inc
dec
out
inc
push
push
shl
mov
inc
jecxz
or
jmp
shl
aas
sbb
test
fcom
test
xchg
pop
jmp
xchg
mov
add
mov
mov
mov
fistp
xchg
push
bound
dec
lds
mov
add
mov
mov
ja
mov
test
bnd
call
movs
dec
outs
add
loop
mov
cmp
test
adc
sub
arpl
sub
sub
cwde
inc
jmp
xor
pop
mov
cmp
lods
jmpw
repnz
stos
int3
xchg
push
sbb
test
rcr
xchg
mov
jmp
sahf
ret
push
sub
ret
repnz
loop
call
xchg
retf
xchg
mov
(bad)
ret
test
mov
dec
data16
push
popa
movs
loope
mov
data16
rol
pop
xchg
xor
icebp
push
push
mov
iret
popa
sub
mov
mov
adc
imul
cmps
hlt
mov
cwde
and
pop
mov
mov
sub
hlt
cmc
xchg
je
mov
adc
das
dec
add
inc
inc
sbb
push
sbb
dec
cwde
lods
shr
js
inc
and
sar
xor
cmovo
mov
xor
fs
mov
jl
pushf
mov
in
(bad)
cmp
mov
or
enter
fs
and
sbb
mov
retf
ret
dec
ins
xor
jmp
retf
jl
inc
les
mov
mov
add
or
retf
arpl
or
into
mov
adc
mov
cs
daa
sub
outs
out
push
into
xchg
ret
fcmovnu
push
add
add
stos
pop
mov
xchg
repnz
or
arpl
push
fsub
imul
retf
inc
repnz
cmp
add
push
(bad)
inc
sbb
sbb
aaa
stc
ffree
in
(bad)
stos
cs
(bad)
mov
mov
jmp
mov
inc
sbb
mov
repnz
aad
daa
data16
mov
scas
pop
jns
mov
shl
cdq
ins
jno
sub
sbb
dec
sbb
(bad)
lea
mov
in
cmp
cmp
aas
mov
adc
push
and
js
ret
fisttp
dec
jge
or
js
jp
jmp
fsub
cld
dec
xchg
(bad)
loop
jmp
jno
cmc
mov
sbb
rcr
ds
rcr
xchg
jmp
sub
or
cwde
adc
sub
or
push
mov
test
pop
or
jb
and
es
call
movs
or
adc
pop
arpl
or
fstp
nop
jg
aam
sbb
pop
nop
xor
sbb
mov
mov
and
mov
bound
dec
add
adc
inc
jb
ss
loope
mov
sbb
icebp
pop
mov
pop
cmp
pop
add
sub
sub
mov
pop
xchg
cmc
or
cmp
mov
ss
bound
mov
inc
mov
loopne
pop
pushf
mov
mov
test
and
jbe
cmp
jecxz
push
pop
stc
lock
add
aam
pusha
scas
(bad)
push
xchg
pop
mov
lock
out
push
jmp
sar
into
xlat
mov
cmp
fwait
call
std
fsub
cmc
test
xchg
sub
xor
cli
jae
cld
lahf
fistp
movs
and
test
rcr
mov
push
daa
ror
hlt
retf
call
pop
xlat
in
add
dec
adc
fcomip
push
xor
add
mov
stos
arpl
pop
or
(bad)
imul
dec
jmp
loopne
dec
cwde
jne
xchg
call
or
icebp
push
jns
fdiv
fisubr
pop
aas
call
dec
shl
jecxz
push
mov
call
dec
pusha
loop
bound
in
add
cmp
cmp
mov
mov
stc
inc
cmp
mov
test
sbb
push
mov
ffreep
cld
push
arpl
fxch
pop
push
mov
adc
cmp
fwait
jmp
pop
sbb
arpl
and
pop
cmp
aad
sbb
sbb
fs
dec
lahf
pop
xchg
jg
push
xor
in
mov
sub
leave
iret
cs
adc
inc
nop
dec
fxch
xchg
adc
mov
adc
and
mov
ds
mov
test
imul
mov
cmovs
cmps
adc
sti
mov
shl
push
sub
push
mov
and
test
out
icebp
jmp
adc
call
xor
mov
push
sbb
stos
pop
icebp
xchg
adc
dec
dec
repnz
aas
cmp
or
dec
mov
push
push
(bad)
xchg
(bad)
jns
and
icebp
mov
mov
ins
fsubr
sub
(bad)
popf
push
push
jb
mov
and
and
cmps
aas
xor
mov
push
inc
ja
mov
push
mov
push
test
arpl
mov
adc
mov
xor
mov
jmp
dec
xor
push
and
xchg
jbe
sbb
adc
out
adc
cmp
call
mov
popf
(bad)
in
pop
or
or
jns
sub
aaa
inc
cmp
(bad)
aad
mov
gs
pop
mov
daa
ficomp
add
inc
clc
and
out
cs
retf
movs
adc
ret
dec
mov
xchg
aam
pop
push
mov
jg
popa
scas
sar
mov
or
pop
lahf
or
(bad)
cwde
push
shl
aad
push
and
xor
int
shl
(bad)
and
sbb
and
sub
repnz
popf
jl
ror
int3
mov
cwde
cld
pop
inc
jnp
ss
or
xchg
iret
outs
retf
(bad)
sbb
rol
xor
pusha
jb
adc
call
scas
and
ret
aam
mov
mov
jne
repnz
xchg
ror
loope
fistp
or
pop
and
fcomp
jae
(bad)
pop
push
je
mov
scas
sti
in
add
imul
push
xchg
dec
scas
loope
mov
in
shl
shr
push
jmp
rcr
(bad)
jmp
movs
lahf
jecxz
inc
dec
push
jb
jmp
pop
adc
icebp
ret
jb
pop
ret
cwde
sbb
xor
ret
sbb
pop
jmp
mov
outs
jmp
mov
xor
inc
adc
outs
xchg
cwde
sbb
es
call
popf
test
popf
push
sbb
or
cmp
ds
outs
test
and
lahf
lods
cmp
in
cmps
(bad)
out
adc
stos
pop
push
movs
or
mov
in
popa
inc
inc
add
fwait
imul
mov
and
jmp
in
xchg
dec
or
mov
cmc
retf
(bad)
jmp
push
push
pop
into
frstor
sahf
add
test
push
(bad)
rcl
fimul
jmp
jne
dec
jg
xchg
dec
out
inc
(bad)
mov
push
pop
and
clts
adc
cdq
(bad)
xchg
call
cmps
and
clc
jne
es
inc
pop
push
mov
inc
ja
push
std
or
mov
js
xchg
inc
jge
push
lods
and
inc
mov
imul
rol
rcl
ret
jmp
xchg
jecxz
push
xor
sub
xor
mov
mov
shl
mov
cs
inc
in
in
(bad)
mov
gs
cs
jl
mov
shl
jecxz
test
mov
sub
daa
cmp
arpl
inc
outs
dec
push
hlt
clc
or
push
mov
sub
js
test
aam
cmps
mov
pop
lods
or
or
mov
leave
mov
cmps
shr
mov
mov
add
mov
cmp
inc
adc
aad
or
call
xchg
scas
(bad)
mov
dec
inc
das
and
cmp
arpl
mov
sub
es
pushf
and
(bad)
into
lahf
mov
xchg
dec
popa
inc
(bad)
jle
fsubr
pop
retf
push
cmp
cli
cmps
cmp
xor
(bad)
fisttp
stos
aam
dec
aaa
or
int
xchg
push
xchg
mov
cmps
sub
jns
lods
xchg
push
out
fsub
sbb
out
dec
pusha
mov
add
jnp
icebp
jmp
and
je
mov
push
int3
pop
cmp
push
cmp
jecxz
cmc
aas
sub
lds
stos
push
test
mov
jle
data16
loop
repz
mov
dec
cwde
fcomp
and
mov
mov
pop
inc
aad
out
push
fidivr
adc
enter
in
cmp
and
in
and
test
and
cld
push
dec
jp
ret
fisubr
lds
(bad)
into
cmp
pop
cmp
inc
mov
sar
adc
push
mov
cmps
jne
mov
add
inc
cwde
popa
add
aaa
les
push
adc
xlat
stos
add
sti
clc
ret
test
dec
and
(bad)
mov
mov
jmp
jmp
push
in
aas
mov
pop
mov
daa
pop
pop
push
daa
imul
out
cwde
daa
pusha
adc
push
scas
add
mov
push
scas
ss
stc
jno
sub
ja
or
popf
lods
(bad)
test
inc
mov
sbb
xchg
loopne
ficom
ins
adc
sub
pop
lock
js
stos
and
enter
mov
mov
rcl
arpl
(bad)
xlat
int3
adc
adc
nop
sub
cmc
call
fimul
mov
adc
sti
or
or
adc
into
adc
cmps
(bad)
je
pop
es
mov
stos
sbb
ins
push
xchg
push
mov
iret
jg
jge
pop
xor
ret
and
mov
(bad)
ror
sub
repz
rcl
call
jle
outs
sbb
sub
fsubr
jb
std
jne
inc
mov
loopne
mov
rcr
enter
shl
pop
rol
pop
pop
outs
xchg
(bad)
imul
push
inc
jb
mov
pop
sbb
retf
jns
xchg
rol
int
xchg
das
inc
push
into
js
adc
dec
mov
sub
es
(bad)
movs
and
fld
out
sbb
jle
lods
(bad)
fsub
imul
sbb
outs
iret
loop
and
xchg
xchg
cwde
add
mov
cli
jo
rcr
add
xor
xchg
rcr
or
sbb
bound
and
add
cdq
adc
dec
sub
inc
adc
jae
push
in
into
pushf
cmc
pop
cmps
mov
pop
in
cld
in
mov
pop
les
stos
and
lahf
fstp
std
and
cmp
add
push
and
sub
mov
jmp
hlt
pop
push
jnp
adc
dec
cmp
add
sbb
sbb
jb
and
rol
fadd
sbb
inc
inc
push
pop
aad
mov
mov
fbstp
aaa
movs
sub
pop
popa
cmps
retf
cld
mov
mov
scas
ja
dec
push
sub
pop
xchg
sub
addr16
xlat
inc
rdmsr
in
xor
cmp
or
inc
inc
adc
push
ins
test
mov
push
xor
mov
inc
addr16
xchg
dec
and
sti
nop
scas
dec
pop
push
pusha
jecxz
add
xor
pop
xchg
xchg
lock
adc
inc
loopne
mov
in
(bad)
mov
dec
ins
fdivr
inc
imul
addr16
(bad)
mov
out
sbb
dec
aaa
mov
cld
xor
dec
and
popf
not
js
jnp
sbb
sar
xlat
cwde
or
hlt
loope
lea
inc
add
and
cmp
jb
mov
cli
imul
in
stos
xchg
enter
or
cmp
xchg
stos
pop
adc
(bad)
and
push
imul
mov
adc
mov
push
popf
mov
dec
dec
test
test
shl
xor
cwde
or
push
mov
into
ror
dec
fadd
outs
inc
movs
scas
(bad)
mul
inc
and
mov
mov
loope
imul
daa
(bad)
xchg
sbb
dec
neg
fwait
dec
cmps
mov
in
cld
jne
fwait
std
lods
lods
fstp
jmp
fist
call
adc
push
xchg
or
sbb
fdivr
xchg
jmp
out
dec
leave
jo
cmp
ins
std
xor
ins
xchg
push
mov
stos
pop
test
mov
jp
pop
sbb
cmp
push
cmp
or
sbb
jne
mov
lahf
out
pusha
std
push
arpl
stc
xor
jg
enter
imul
enter
xchg
adc
dec
push
(bad)
ja
outs
inc
scas
cmc
mov
push
sbb
hlt
add
mov
shl
cmp
bound
movs
and
in
aas
xor
ret
int
lods
ins
pop
rcl
xchg
fld
(bad)
push
fwait
xchg
pop
into
int3
std
test
or
xchg
clc
add
retf
popf
mov
xchg
mov
mov
sbb
shl
or
into
push
xor
(bad)
push
dec
and
or
mov
xchg
xlat
retf
loop
hlt
dec
pop
push
loopne
aam
arpl
pop
jno
mov
push
stos
sub
inc
in
pop
adc
fmul
xchg
mov
adc
std
mov
and
jno
cdq
fs
mov
or
dec
cmps
pop
sub
(bad)
daa
pop
xchg
add
xchg
into
inc
int3
or
mov
push
aas
jnp
stos
mov
(bad)
add
cmp
inc
in
test
sbb
add
cdq
movs
pop
push
fsubr
popa
jo
xchg
pop
dec
add
jg
jns
mov
jb
xor
bound
loop
push
fisttp
pop
and
bound
cwde
jns
push
jnp
add
outs
cli
cmp
xlat
sbb
jns
add
pop
retf
and
mov
sub
imul
popf
int3
mov
movs
movs
jecxz
xchg
mov
fisubr
xchg
cmp
push
jns
cmp
bound
div
ss
popa
mov
mov
test
ja
int
int
mov
daa
cmp
jmp
cmp
or
jecxz
mov
out
(bad)
(bad)
hlt
pop
fbstp
not
mov
xchg
jnp
adc
sbb
leave
test
out
icebp
rcr
not
mov
cmps
mov
add
(bad)
ror
(bad)
sub
out
test
push
adc
adc
or
mov
dec
xor
ins
and
xchg
fcomp
dec
sbb
and
and
and
retf
popa
and
repnz
fcomp
mov
inc
sar
sbb
cwde
push
mov
addr16
pop
sub
lods
(bad)
mov
lock
scas
and
xor
xchg
add
and
jae
adc
jb
jae
dec
xchg
mov
xchg
push
retf
mov
and
mov
push
add
fcomp
push
mov
and
xor
jp
and
pop
neg
or
sbb
xor
outs
ret
movs
push
jno
or
lods
inc
add
ss
outs
xchg
in
pop
popa
mov
movs
push
sbb
inc
repnz
pop
mov
shr
jecxz
inc
ins
jge
(bad)
cmps
mov
cmp
scas
fsubr
sahf
sbb
aaa
loop
push
xchg
jno
hlt
fldenv
sub
add
rcl
xchg
addr16
movs
hlt
and
jmp
mov
xlat
fwait
gs
jmp
sub
out
in
(bad)
sub
dec
mov
stc
fwait
sbb
(bad)
call
arpl
sub
shr
lock
(bad)
iret
sub
xchg
push
stos
fidiv
imul
cmp
jmp
push
pop
push
mov
jns
push
adc
ret
(bad)
pop
xor
stos
aam
and
or
aas
mov
stos
add
daa
mov
cmp
stos
into
xor
dec
or
jae
or
cli
outs
or
add
or
gs
cmp
aas
out
mov
icebp
(bad)
jno
stos
inc
pop
inc
outs
mov
xchg
cld
imul
sbb
mov
push
inc
or
xlat
call
pop
pusha
cdq
dec
mov
jae
retf
cmp
inc
shr
add
fdivr
mov
or
xchg
test
and
fcom
or
jne
xor
jb
pop
inc
pop
rcr
sbb
adc
fisubr
xchg
daa
xchg
xor
test
cmc
retf
sbb
add
inc
into
jno
lds
inc
mov
lahf
adc
pusha
lods
xchg
mov
or
jo
gs
int
pop
outs
and
leave
xchg
dec
loope
popa
jecxz
in
hlt
packuswb
xchg
lods
mov
jns
xor
inc
or
inc
xchg
test
cdq
jmp
fs
lahf
test
and
gs
mov
xchg
push
mov
jns
gs
or
add
test
pop
out
pop
xor
call
ret
movs
dec
add
adc
xor
repz
and
inc
push
push
call
je
xchg
(bad)
inc
adc
dec
stos
inc
(bad)
mov
jmp
jne
arpl
adc
inc
xor
lods
cs
mov
sar
arpl
pop
repz
ja
rcr
(bad)
out
dec
nop
jo
cwde
xchg
movs
adc
jg
aad
mov
out
fisubr
enter
jne
jmp
sub
pop
lods
in
or
mov
or
enter
pusha
xchg
mov
psubb
test
hlt
and
adc
leave
and
pop
xor
out
leave
stos
mov
inc
push
add
adc
cwde
or
add
push
xor
repnz
dec
and
in
mov
fistp
or
int
les
mov
xor
inc
cmp
mov
cld
sbb
inc
sbb
sub
sbb
fucomip
jb
xchg
jmp
pop
pop
mov
inc
or
cmp
scas
or
sar
or
mov
sahf
in
lods
mov
hlt
shl
xor
xchg
test
ror
sti
mov
mov
push
adc
lods
adc
push
lds
clc
dec
repnz
push
and
retf
cwde
push
mov
xchg
or
fiadd
lds
fimul
shl
in
loopne
pusha
add
jl
rol
or
xchg
mov
call
int
mov
popa
dec
and
sbb
xchg
inc
ds
or
loope
add
add
inc
ja
cmc
push
movs
xchg
adc
je
adc
push
call
dec
repz
sub
fmul
adc
sub
loope
nop
jo
aaa
push
cld
fsin
mov
xor
outs
outs
gs
shl
popa
jmp
cmps
fdiv
jl
cmp
mov
mov
pop
sub
mov
or
dec
or
inc
lds
fucomp
inc
in
lea
fimul
sbb
dec
inc
shl
or
aam
push
sbb
leave
inc
mov
xchg
lods
rol
movs
push
mov
enter
push
ret
mov
inc
cli
cmps
xchg
cwde
mov
outs
repz
xor
(bad)
and
lahf
dec
pushf
mov
dec
scas
mov
xlat
or
mov
pusha
jns
cmc
mov
aaa
lock
jp
xor
loope
xchg
jne
push
ins
mov
or
inc
xor
lods
jge
jg
cmps
sbb
mov
stc
outs
xchg
and
out
pop
xchg
out
in
out
push
adc
push
repz
mov
xor
pop
cld
pop
xchg
dec
jbe
sub
push
mov
cmc
scas
(bad)
pop
push
or
js
push
jns
jge
pop
or
xchg
idiv
pop
mov
or
jmp
and
lds
push
push
dec
and
test
repz
mov
clc
push
push
in
int
fldenv
mov
pop
in
iret
jno
dec
movs
xchg
inc
push
inc
xchg
cmc
adc
and
paddusw
jmp
(bad)
sub
ins
or
icebp
sbb
inc
jbe
xor
lds
clc
push
xchg
mov
shr
jmp
sub
xchg
nop
xchg
jle
in
jmp
test
or
pop
jne
dec
sbb
xor
jns
jg
xor
xchg
sar
out
test
xchg
xor
fcomp
call
lds
in
ja
loop
jmp
(bad)
fldenv
cli
repz
fild
push
push
das
mov
xor
and
loopne
repnz
mov
mov
mov
popa
popf
imul
ins
xchg
push
xchg
aam
xchg
jmp
fisub
mov
sbb
fneni(8087
mov
stos
ss
fisubr
mov
inc
mov
loopne
sub
and
pushf
cmp
mov
xchg
das
neg
xchg
and
shl
pop
add
loopne
cmc
daa
popa
xor
std
hlt
sub
out
out
cli
xchg
pusha
inc
fsub
lods
daa
(bad)
xchg
mov
imul
mov
enter
dec
pop
movs
and
out
jp
mov
and
mov
cli
pop
icebp
gs
enter
aam
sub
inc
jno
cmp
shl
xchg
dec
pop
mov
test
push
push
mov
mov
cwde
leave
mov
pushf
fldl2e
mov
call
stos
pop
mov
push
and
mov
pusha
call
cmp
xchg
jecxz
push
test
and
push
inc
xchg
sub
jle
push
jmp
rol
xchg
loop
(bad)
jns
sbb
jmp
lea
push
mov
adc
xchg
in
call
or
cld
jmp
rol
and
push
cld
fisubr
retf
gs
(bad)
mov
sbb
sbb
loop
fnstsw
mov
retf
stos
push
mov
aaa
sub
sub
mov
in
push
inc
jmp
and
mov
mov
fucom
jge
cmp
mov
sub
in
int3
pop
pop
xchg
(bad)
test
mov
popa
push
pop
mov
push
sub
push
mov
pop
xor
std
mov
add
(bad)
fisubr
into
adc
popa
mov
inc
aad
push
jp
xchg
inc
xchg
jmp
dec
pop
mov
sbb
dec
pop
out
lds
jb
or
outs
inc
ins
inc
cmp
mov
(bad)
xchg
mov
out
xchg
arpl
adc
lods
stc
add
bound
mov
mov
dec
push
ja
mov
or
pusha
pop
adc
je
fdivr
int
repnz
fcmovnb
out
push
aad
rol
mov
add
iret
and
and
sub
shl
push
lea
push
lea
mov
aas
mov
in
cmp
jmp
push
cmp
adc
push
lea
push
repnz
jmp
mov
pop
jne
inc
fild
iret
rol
sbb
repz
in
push
fldcw
sbb
inc
xor
adc
adc
aaa
xor
mov
xor
xchg
mov
and
jmp
push
aaa
enter
jae
call
push
sbb
fld
jnp
or
stc
jb
mov
mov
call
mov
add
xor
outs
stos
loope
cdq
into
lahf
fdiv
pop
dec
cmps
or
xor
jns
mov
out
cmps
dec
mov
mov
sti
add
mov
cmp
mov
fsub
mov
int3
xchg
jg
mov
pop
in
bnd
jmp
dec
movs
inc
jne
out
shr
(bad)
mov
jg
enter
fnstsw
fld
mov
je
lock
iret
fldlg2
je
sbb
fwait
inc
mov
std
cmp
ins
jb
adc
add
or
mov
sbb
adc
test
mov
scas
and
popa
cmc
mov
lods
shl
mov
push
stc
jbe
enter
gs
inc
mov
div
or
out
iret
enter
into
cmc
pop
mov
ja
lods
test
xor
cmps
std
fsub
dec
push
fistp
call
pop
mov
push
pop
int
and
fwait
in
clc
hlt
loop
mov
jmp
mov
sub
dec
xlat
ss
jecxz
inc
ins
push
lock
or
sub
hlt
fsub
jge
dec
inc
dec
out
push
push
stc
dec
test
push
lods
repz
icebp
xor
(bad)
dec
xchg
ins
iret
and
popf
out
mov
fcom
mov
xor
push
adc
push
mov
cwde
(bad)
loopne
adc
loop
lock
cmp
nop
jecxz
xchg
(bad)
jle
movs
mov
lock
sub
sti
mov
add
dec
mov
push
adc
sub
pop
test
mov
mov
(bad)
mov
cmc
shr
loop
mov
data16
(bad)
test
inc
(bad)
add
(bad)
pop
jae
mov
pop
imul
mov
(bad)
fstp
cmp
sbb
and
dec
mov
xor
loop
(bad)
mov
xor
and
inc
push
mov
pop
xor
pushf
neg
xchg
rol
mov
mov
fs
pushf
icebp
inc
dec
jnp
adc
aaa
jecxz
push
fs
dec
es
iret
out
je
mov
dec
mov
out
push
and
loop
into
mov
push
pushf
mov
xor
pushf
arpl
sbb
pop
xor
call
jbe
sbb
xchg
call
dec
push
sar
(bad)
mov
jl
js
imul
cli
xor
cs
sub
hlt
pop
adc
or
sub
mov
idiv
add
or
inc
xchg
mov
or
jmp
cmc
in
setl
pusha
out
dec
xchg
fidiv
ficomp
(bad)
in
call
dec
mov
and
push
and
and
push
adc
hlt
loop
xlat
adc
ficomp
cmp
push
jmp
and
pop
xlat
gs
inc
inc
xor
std
stos
sti
in
mov
sub
(bad)
into
mov
pop
test
mov
enter
xlat
outs
movs
bound
pop
je
sbb
dec
aam
cld
rcr
rcl
ror
mov
or
inc
cld
xchg
movs
shl
push
cdq
out
mov
test
adc
lods
or
xchg
stos
adc
mov
(bad)
sar
add
mov
adc
ins
mov
add
test
mov
frstor
lds
pop
mov
mov
das
je
es
pop
popa
mov
jle
outs
dec
repnz
scas
loop
push
adc
mov
test
aas
cmp
add
xchg
cmp
xor
xor
mov
sti
xor
mov
out
fcmovb
dec
sbb
shl
fisttp
push
mov
test
adc
push
movs
mov
fdiv
outs
pop
popf
adc
shl
and
sub
xchg
xor
enter
inc
xchg
pop
or
dec
in
push
scas
setge
add
dec
in
rcr
mov
frstor
(bad)
add
xchg
iret
adc
push
sub
sbb
cmp
sub
sub
movs
push
sbb
xchg
cmp
icebp
mov
test
sub
sar
push
pop
add
pushf
stos
pop
cld
push
and
mov
stos
jbe
sbb
push
push
jle
cmp
cwde
fs
cmp
cmps
sub
mov
dec
jbe
mov
or
sbb
and
movs
xchg
pop
jmp
inc
sbb
mov
push
and
pop
jae
lods
and
pop
pop
cdq
ret
xchg
fdecstp
cmovo
sub
sbb
cmp
ret
xchg
in
repz
clc
push
push
cmp
adc
pop
cmp
mov
jnp
mov
mov
repnz
pop
cmovl
mov
jne
rcl
pop
jno
inc
out
cmp
adc
out
mov
out
outs
adc
add
imul
xor
sbb
pop
dec
sbb
movs
mov
repz
xor
adc
and
jl
cmp
dec
jnp
jb
das
sti
cmp
mov
test
iret
fcomp
or
sub
cs
mov
or
test
cwde
xor
push
fbld
lahf
mov
es
out
rcr
xchg
push
test
call
and
cmp
and
fist
cmc
mov
(bad)
jge
inc
jo
cmp
sub
jmp
rcr
jb
retf
stos
popa
mov
je
out
ret
test
mov
mov
outs
cs
in
pop
mov
adc
inc
pop
cmp
mov
in
lock
xor
pushf
pop
clc
(bad)
aaa
pop
ja
mov
call
rcr
ds
test
add
mov
cmp
sub
pop
bound
dec
dec
rcr
mov
nop
sbb
setns
cmc
mov
jmp
inc
sub
sbb
jle
add
sbb
hlt
aam
mov
and
jle
out
shl
jmp
lock
idiv
mov
sub
scas
lds
sub
and
and
scas
movs
(bad)
adc
inc
dec
(bad)
xchg
xchg
dec
hlt
cmp
cld
xor
push
xchg
lock
cmp
repz
jmp
ficomp
pop
and
and
ds
(bad)
or
ret
jl
pop
pop
outs
in
scas
and
cmp
push
stos
imul
popf
cmp
arpl
jmp
xor
mov
or
in
inc
cld
adc
sub
pop
push
sbb
pop
bound
mov
and
pop
ds
inc
test
and
inc
cmp
je
sbb
mov
fild
or
and
gs
jmp
mov
pop
dec
stos
jmp
sti
push
enter
cmp
mov
popa
mov
mov
out
xchg
or
(bad)
adc
xchg
sti
test
jbe
xchg
mov
inc
iret
xchg
dec
bound
fwait
or
push
jl
in
pop
addr16
adc
fisub
or
push
mov
cmps
scas
in
adc
push
cmp
mov
push
fdivr
sub
dec
push
mov
mov
ja
inc
dec
stc
fild
add
push
pop
test
push
adc
or
mov
sbb
pushf
dec
hlt
mov
lds
jns
mov
int
adc
adc
mov
jmp
ror
inc
cmp
xchg
stos
and
out
and
mov
imul
adc
call
xlat
sbb
scas
cmp
or
cmps
inc
sahf
mov
sbb
sbb
push
(bad)
call
scas
dec
push
push
ror
pop
outs
mov
addr16
add
mov
mov
mov
dec
jb
mov
out
mov
test
retf
pop
xchg
lea
ror
mov
xor
or
dec
or
and
xor
pop
shl
jb
xchg
cmc
pusha
movs
retf
(bad)
stc
push
push
movs
retf
movs
call
mov
(bad)
fwait
repz
and
mov
sbb
imul
jne
lods
sub
repnz
and
mov
mov
ds
leave
outs
jae
pop
sub
mov
fdivrp
inc
and
push
mov
scas
xor
outs
pop
pusha
rcl
stos
lods
movs
and
pop
mov
xor
cmp
sahf
add
add
push
ror
dec
fisttp
push
popa
sti
mov
fisub
ffreep
int3
push
fmul
jmp
ret
in
in
adc
xchg
pop
dec
dec
cmps
mov
pop
lds
push
arpl
mov
sbb
retf
adc
icebp
(bad)
xchg
pop
cdq
dec
jae
and
clc
jae
movs
ins
cld
lock
out
mov
xor
push
lahf
or
retf
(bad)
cli
or
scas
fadd
add
sbb
push
inc
pop
push
lahf
int3
xor
dec
pop
and
sar
jns
mov
scas
add
(bad)
fscale
das
(bad)
adc
adc
icebp
mov
test
lods
cld
mov
sbb
enter
mov
imul
push
sbb
jns
dec
fs
mov
pop
ins
in
and
call
daa
ret
or
call
addr16
adc
enter
or
icebp
push
inc
mov
std
cmp
sbb
mov
pop
mov
bound
adc
mov
inc
cli
imul
xor
fs
adc
das
and
push
call
jl
jle
popf
add
mov
pushf
xor
fistp
cld
pop
in
jns
jecxz
ds
cmp
xor
xchg
aaa
mov
push
inc
outs
add
or
jecxz
lods
aaa
jg
fiadd
pop
mov
sub
and
mov
sbb
mov
ret
sub
dec
hlt
int
into
jmp
fistp
neg
fucomip
jge
popa
mov
pop
pop
imul
adc
pcmpeqb
dec
lods
adc
jg
inc
push
fs
or
inc
inc
ror
in
stos
mov
inc
inc
inc
push
dec
test
fistp
pop
mov
shr
add
mov
jbe
pop
xor
pop
ret
popf
cmps
clc
out
pop
loopne
xor
mov
xchg
or
adc
cmp
mov
xchg
jmp
or
adc
mov
iret
sub
add
mov
inc
fs
jle
push
rcr
inc
inc
cmp
sar
add
fisubr
(bad)
out
push
jecxz
jbe
push
fld
in
xlat
and
nop
ja
jecxz
cwde
out
inc
and
push
add
push
jne
pop
je
mov
pop
out
mov
mov
retf
add
jmp
inc
push
div
loope
mov
mov
pop
test
cmp
push
movs
xchg
movs
stos
cmps
or
jecxz
jno
scas
and
pop
(bad)
mov
jmp
xlat
inc
pop
cmc
test
jl
xchg
jg
cmc
mov
mov
dec
scas
add
cmp
or
push
cmps
out
test
jno
jnp
arpl
in
xor
pop
sub
ins
std
iret
gs
fdiv
cwde
popa
sub
pop
sti
ins
jmp
dec
push
shr
xchg
fnstsw
add
cdq
adc
es
icebp
sub
icebp
cmps
leave
lds
mov
or
stos
lahf
movs
fisubr
popf
fidivr
sti
dec
ret
rol
add
jmp
add
fld
(bad)
cmp
mov
sar
xchg
int3
dec
push
mov
daa
jg
movs
retf
test
inc
addr16
cmps
and
mov
in
xor
repnz
cwde
xchg
popf
mov
push
cdq
test
rcl
jns
rcr
enter
fsubr
xor
cmp
out
aas
cmp
repz
xchg
pop
stc
gs
sbb
cmps
xchg
inc
sub
and
les
out
gs
push
pusha
mov
sub
enter
jg
pop
push
sub
jle
gs
xlat
push
adc
stc
shl
fdivr
or
pusha
inc
add
push
or
add
sub
sub
std
push
dec
js
push
adc
sub
sub
cwde
push
loope
or
outs
mov
push
call
fs
xor
cmp
jg
push
inc
out
movs
iret
mov
pop
or
xor
xchg
pop
arpl
das
add
sahf
xor
mov
data16
or
pop
push
in
adc
adc
jle
adc
std
sbb
(bad)
cld
dec
loopne
and
pop
sbb
jg
add
mov
xchg
loope
jnp
jnp
push
or
mov
int
and
mov
sbb
inc
mov
fistp
mov
aad
packssdw
test
jmp
jne
mov
cs
pop
inc
adc
nop
sub
push
cmps
push
(bad)
jmp
repnz
add
or
es
add
das
jno
sub
movs
push
popa
jg
jne
sub
and
mov
rol
or
sub
loop
gs
in
sahf
sbb
jne
lahf
aad
retf
xchg
call
sub
fbld
mov
(bad)
sbb
or
test
int
not
mov
adc
lods
pop
add
jbe
jmp
jge
push
(bad)
aad
stos
iret
mov
xor
adc
es
pop
cmp
ins
xor
retf
push
int
popa
js
repnz
xor
pushf
mov
mov
ret
(bad)
into
xchg
fidivr
sti
out
arpl
xor
sub
mov
xchg
xchg
mov
dec
sub
test
(bad)
shl
adc
out
sbb
fs
loopne
movs
xor
pop
ins
and
inc
cmp
xchg
sub
shl
pop
std
(bad)
mov
cmp
add
mov
inc
pushf
adc
jge
xor
repz
xlat
push
add
cmc
mov
mov
dec
jbe
popf
out
jle
dec
cmp
lds
add
popf
push
or
xor
stos
mov
sub
mov
aam
ds
inc
push
dec
xchg
lods
cdq
and
dec
cmp
adc
mov
sub
sub
jg
and
xor
int3
mov
sar
push
test
out
pop
shr
sahf
push
cli
cmp
cmp
nop
ins
add
mov
cwde
cmp
sub
rol
popa
int
(bad)
repz
les
push
inc
jmp
inc
test
mov
imul
dec
inc
xlat
mov
mov
lock
clc
shl
movs
fnstsw
xor
imul
aaa
mov
or
retf
mov
ds
xchg
mov
out
mov
push
sub
mov
xbegin
mov
popa
push
int3
push
push
call
mov
mov
add
add
loope
inc
push
xor
jmp
je
sbb
adc
and
ficomp
out
jne
jle
and
cmp
push
nop
mov
scas
xchg
int3
xchg
inc
mov
or
cmc
and
pop
sbb
cmp
arpl
mov
jbe
or
pop
sar
(bad)
ficom
mov
cmp
xor
sbb
mov
lods
push
fwait
shl
(bad)
fcom
imul
mov
fs
jmp
adc
inc
shl
mov
xor
popf
sub
(bad)
lock
jb
test
mov
mov
retf
jb
and
not
shl
mov
xor
mov
push
push
push
mov
aam
daa
movs
or
jg
add
mov
sbb
cmc
rcl
clc
aam
ja
and
jle
adc
add
xchg
pop
mov
ret
out
cmp
mov
aam
inc
cmp
mov
push
add
es
icebp
fmul
push
nop
cmp
int
mov
adc
sub
jbe
clc
gs
jmp
je
adc
cdq
jo
or
sti
retf
sub
mov
mov
sub
sub
nop
jmp
jmp
and
pop
lds
mov
mov
hlt
or
or
stos
aaa
sti
mov
pop
jl
out
cmp
lock
je
cmp
std
push
lods
add
xchg
mov
outs
aam
sub
mov
cmps
sub
mov
shr
in
int
and
xchg
das
out
lahf
cwde
xchg
jge
inc
call
mov
lea
gs
(bad)
in
inc
mov
sbb
inc
loop
mov
pop
adc
jle
push
in
jne
or
popa
call
stos
cmp
jbe
or
sbb
je
push
daa
je
sub
(bad)
dec
aaa
in
or
push
adc
inc
fcmovne
xor
cmp
int3
daa
inc
push
sub
pop
arpl
in
sub
push
ss
cmc
shl
jl
xlat
mov
fs
mov
push
cmc
cmp
jo
stos
out
icebp
cdq
je
jecxz
aas
xor
stos
push
adc
lods
sbb
dec
jne
dec
or
pop
(bad)
cmps
add
mov
or
into
(bad)
cdq
movs
call
icebp
shr
(bad)
je
mov
add
adc
inc
iret
retf
sbb
mov
(bad)
es
mov
loope
xor
fs
mov
ret
cmp
fnsave
mov
ja
pop
(bad)
(bad)
cmp
xor
pop
mov
shl
dec
push
out
and
in
out
ret
or
(bad)
leave
shl
mov
and
call
fcomp
nop
xlat
popf
inc
mov
shr
gs
fnstenv
push
cmp
or
test
mov
xor
retf
or
push
lds
movs
cmp
mov
pushf
sub
mov
mov
les
sub
repnz
movs
mov
mov
xor
lds
loop
pop
mov
mov
xchg
inc
jno
imul
cmp
das
push
arpl
xor
mov
and
xor
stc
push
bound
xchg
ret
dec
ins
je
jl
xchg
jae
add
fsubr
cmc
or
mov
jmp
fcom
jo
mov
push
sub
cwde
cmp
mov
inc
stos
or
add
cdq
add
inc
push
add
push
outs
enter
scas
les
dec
mov
pop
cli
cmp
fwait
mov
gs
mov
adc
jbe
scas
pushf
int
xchg
sbb
(bad)
scas
fisub
mov
inc
mov
xor
out
sub
sti
xchg
clc
loopne
push
sub
(bad)
shr
xchg
div
sbb
or
jmp
inc
mov
mov
fs
cmp
mov
dec
push
cmp
int
jns
pop
sub
sub
(bad)
sar
xor
stos
dec
mov
retf
mov
push
sbb
lds
mov
xchg
cmp
dec
adc
dec
push
and
(bad)
and
ret
sub
add
sar
je
shr
dec
sub
(bad)
mov
aaa
push
push
push
retf
xchg
pop
fist
rcl
pop
adc
adc
add
add
cmp
and
fucomip
pop
mov
push
(bad)
and
test
out
leave
(bad)
fwait
adc
jmp
mov
mov
sub
mov
std
xor
rcl
fldpi
sar
arpl
stos
and
iret
aaa
fwait
out
sub
nop
mov
push
or
enter
stos
lock
sub
retf
pop
loopne
xchg
sbb
js
push
sub
xchg
ja
pop
vmulsd
dec
jmp
sbb
and
or
popf
pop
sbb
inc
neg
out
push
jmp
aaa
xor
fisttp
in
mul
movs
aam
stos
sub
add
sub
push
loopne
aaa
shl
fidivr
and
cmps
out
int3
fsub
idiv
fcmovu
push
add
add
jmp
mov
sbb
fimul
fwait
mov
inc
jns
popf
cld
inc
jb
scas
jns
mov
lds
sbb
out
add
arpl
mov
inc
fcmovb
push
sub
cmp
mov
adc
push
or
jns
test
xchg
pop
(bad)
xchg
cld
inc
mov
pusha
shl
out
(bad)
mov
inc
push
push
sub
mov
push
es
or
into
pop
aam
and
mov
sti
sub
sub
push
sbb
gs
ja
dec
repz
fisub
shr
fild
push
and
jo
jg
add
call
out
mov
jb
ins
rcl
mov
jbe
sub
cli
sub
lods
int
in
lods
fisubr
adc
push
and
test
scas
test
mov
xor
pop
out
xchg
jo
int
test
les
inc
push
xlat
adc
test
loopne
imul
cmp
test
dec
sbb
pop
mov
bound
cmp
dec
sbb
fld
ret
leave
in
js
movs
pusha
mov
retf
fdivr
les
mov
stc
sub
inc
jne
or
(bad)
cmp
xor
in
pop
in
imul
xchg
mov
cwde
movs
jbe
ja
arpl
fdiv
sub
adc
ror
fwait
sar
ficom
adc
icebp
sahf
jecxz
stos
push
push
sbb
dec
cmp
in
sbb
add
xor
push
pusha
fwait
inc
dec
fs
mov
mov
or
test
or
popf
dec
jae
xor
sti
xor
cmp
not
jl
cmps
movs
cmp
push
mov
outs
daa
mov
sbb
mov
mov
rol
mov
sar
cmp
ds
inc
fcomi
push
push
imul
add
ja
fidivr
mov
mov
or
xchg
mov
repnz
xchg
sbb
cmp
fs
call
js
jmp
neg
jno
movs
push
jne
lea
add
fwait
inc
std
mulps
fisttp
sub
repnz
or
and
lds
cli
mov
or
call
fbld
mov
push
jae
not
call
push
in
mov
xchg
add
mov
(bad)
retf
mov
push
or
shr
jae
push
div
not
stos
les
xor
adc
push
dec
push
popf
dec
daa
out
clc
scas
pop
jge
add
int
sahf
sub
jo
enter
addr16
mov
enter
mov
push
mov
mov
pop
sub
mov
push
xor
pop
inc
adc
sub
mov
sbb
push
push
pop
mov
scas
mov
xor
mov
(bad)
cvtps2pd
outs
fwait
ret
pop
xchg
sbb
xchg
(bad)
fild
(bad)
cmp
dec
movs
mov
mov
dec
cld
das
mov
out
add
mov
dec
xor
aad
leave
lahf
arpl
mov
test
inc
ins
test
(bad)
(bad)
adc
xchg
adc
and
cmp
sub
lods
mov
leave
aam
jmp
lods
movs
mov
add
sub
div
push
jbe
cli
jl
mov
xor
(bad)
in
mov
test
jne
pop
imul
sar
sub
inc
add
gs
mov
mov
out
shr
xor
xrelease
xor
inc
xor
sbb
cmp
ds
cmc
push
lahf
add
pop
fadd
push
cwde
mov
mov
cmps
jle
jmp
pop
outs
inc
(bad)
cwde
popa
xchg
jge
js
mov
pop
mov
push
popa
aam
inc
retf
lea
xchg
push
aaa
mov
mov
vpcmpeqb
movs
cmp
push
loopne
mov
lds
movs
scas
sbb
mov
dec
dec
mov
and
gs
fadd
push
mov
icebp
inc
je
mov
xchg
daa
daa
fistp
sub
mov
sahf
neg
in
push
mov
mov
popf
test
data16
mov
xchg
test
mov
jns
mov
mov
out
jno
in
lods
adc
dec
fist
es
xchg
out
mov
xchg
sbb
dec
das
ins
lods
xchg
dec
leave
pop
push
mov
push
imul
loopne
mov
pusha
jno
test
fst
and
gs
adc
bound
mov
out
xor
mov
fcmovnu
lds
scas
ficom
jmp
sub
ss
sar
sbb
arpl
mov
pop
cmp
lods
mov
mov
mov
mul
ins
scas
cmps
sbb
stos
jns
arpl
and
xchg
xchg
add
data16
mov
test
cld
in
pop
popa
(bad)
push
sbb
adc
mov
pushf
xchg
jnp
pop
fldcw
mov
push
xchg
mov
or
xor
dec
push
lods
fbstp
inc
sti
xchg
or
pop
std
add
rol
sbb
aam
out
sahf
sar
les
jmp
mov
stc
popa
mov
mov
nop
test
and
inc
out
mov
pushf
push
out
pop
rcr
xor
test
aaa
adc
mov
imul
jle
sbb
std
mov
and
clc
hlt
and
and
add
jg
cdq
fs
clc
push
push
mov
sub
(bad)
xor
pop
(bad)
xchg
sahf
outs
mov
jg
or
repz
rol
cmp
outs
add
add
jg
dec
jne
xchg
(bad)
pop
movs
js
shl
dec
push
and
in
cmps
pop
push
popa
imul
inc
int
mov
mov
sub
sbb
inc
scas
add
retf
pusha
cli
mov
mov
xor
jl
mov
js
fadd
les
ins
mov
lods
sbb
outs
test
dec
(bad)
jge
repz
jl
leave
scas
sar
cdq
jns
mov
popf
xlat
outs
mov
or
test
adc
nop
leave
scas
adc
in
(bad)
pop
xor
jg
test
call
sysexit
inc
and
mov
sub
sub
(bad)
mov
mov
shr
outs
ror
test
sbb
in
shl
mov
sbb
loope
or
mov
sbb
lods
in
mov
lock
pop
ins
in
xor
out
pop
sbb
dec
hlt
das
or
rol
push
sbb
stos
int3
push
fcom
cli
inc
push
xor
nop
push
mov
mov
xchg
push
(bad)
sahf
(bad)
lock
push
jb
xchg
xchg
(bad)
dec
(bad)
arpl
dec
scas
pop
push
les
sub
fisttp
fisubr
push
retf
lock
pop
movs
jno
add
pop
nop
cmp
out
std
push
ret
xchg
jo
jmp
jp
adc
pusha
(bad)
jp
push
jge
(bad)
call
lea
and
pop
lock
pop
xchg
pop
xor
push
pop
(bad)
iret
rcl
popf
outs
js
sub
data16
jb
jmp
dec
push
cmps
fcom
jmp
cld
add
lods
mov
fidiv
inc
xor
pop
hlt
cld
imul
fidiv
cmc
mov
cli
fucomip
pop
and
daa
dec
mov
sub
int
idiv
retf
imul
sbb
add
or
rcl
or
leave
(bad)
xchg
scas
repnz
cdq
xbegin
fmul
mov
stc
jecxz
mov
and
sbb
aad
(bad)
and
xor
sbb
push
call
pop
retf
cdq
hlt
or
cdq
or
push
push
xor
fdiv
push
xor
shl
leave
mov
daa
clc
mov
mov
inc
ror
sub
retf
leave
scas
and
cs
ss
test
push
push
movs
push
or
shr
out
xor
mov
jns
das
pop
sti
and
rcl
sahf
xchg
in
mov
loop
xor
aas
ret
test
dec
aas
dec
inc
in
pusha
fcmovnbe
add
scas
out
lods
rcl
jle
dec
inc
(bad)
rol
js
test
fcmovnbe
mov
push
movs
inc
cmp
ja
test
ja
mov
rcr
mov
cmp
idiv
test
jmp
mov
inc
ds
sti
sbb
lock
fstp
mov
sbb
outs
push
push
jmp
lods
jmp
push
xor
xchg
jnp
fist
mov
jne
inc
test
out
jae
into
mov
retf
sahf
dec
sbb
(bad)
mov
and
ds
jp
je
xchg
sub
test
repnz
int
mov
or
dec
lds
test
mov
rcr
push
imul
mov
idiv
cld
repnz
push
enter
std
mov
rcl
pusha
(bad)
cmp
pop
daa
lahf
and
add
repz
sbb
dec
push
and
sub
mov
or
gs
mov
cwde
mov
idiv
out
mov
stc
jns
loopne
std
or
pop
mov
stc
and
sub
or
push
js
cmp
or
test
sbb
pop
dec
(bad)
hlt
cmp
(bad)
jbe
sbb
mov
and
les
shl
pop
loop
push
jae
mov
popf
push
sub
out
jnp
xlat
jle
mov
dec
xor
dec
fiadd
mov
and
int
jmp
dec
out
fisub
stc
dec
stos
cmp
pop
cmp
ret
jmp
dec
add
dec
xchg
xor
mov
mov
add
retf
es
jp
rol
adc
inc
lahf
inc
or
gs
push
cmp
cmp
push
mov
and
scas
xor
pop
cmp
cmp
stos
jae
rcl
lods
fcmovnbe
mov
jecxz
iret
pop
xchg
loop
pop
cmps
(bad)
loop
pop
movlps
cdq
inc
scas
fs
call
sahf
xor
mov
adc
sbb
retf
lahf
jp
retf
imul
fsub
mov
cwde
mov
call
push
xchg
retf
fstp
jne
push
add
sti
lahf
xchg
sub
imul
rol
or
call
pop
xor
dec
mov
add
rol
repz
jno
(bad)
sub
int3
iret
fbstp
(bad)
pop
data16
test
dec
imul
push
(bad)
cmc
ret
lahf
retf
aas
gs
leave
hlt
imul
xor
(bad)
jle
inc
jae
fwait
inc
cmp
mov
cmp
push
push
mov
repz
add
pop
pop
push
jo
out
jns
lock
loop
lods
jne
outs
dec
pop
fcomip
push
aam
gs
pop
mov
loopne
mov
ror
leave
jl
pop
cwde
fisubr
mov
sbb
mov
push
mov
add
aas
add
das
mov
adc
sbb
mov
retf
rcl
sbb
mov
add
fwait
and
mov
adc
or
sub
idiv
xchg
into
or
int
cmp
ret
mov
xchg
popf
and
inc
jge
mov
jmp
and
mov
imul
daa
cmp
cwde
xor
dec
sbb
dec
popa
mov
fisttp
xchg
in
loopne
(bad)
leave
repnz
and
mov
test
into
pushf
(bad)
scas
add
and
popf
in
cmps
out
iret
jo
xor
dec
push
repz
and
dec
push
mov
mov
mov
xchg
nop
test
push
dec
inc
out
stos
pop
je
mov
xchg
xor
jl
push
xchg
psubq
sti
mov
pop
sub
or
adc
inc
push
or
jb
inc
test
mov
cmp
adc
movs
aas
and
std
ss
jno
push
in
pushf
jno
mov
xchg
pop
sbb
cmp
shl
lods
mov
cli
or
loope
ds
mov
pop
sbb
pushf
(bad)
int3
cmp
inc
cmps
or
pop
or
js
adc
ins
in
hlt
les
jb
xchg
mov
rcl
in
adc
ins
mov
and
mov
rcl
loopne
cmp
cwde
mov
dec
lock
xchg
das
lods
dec
movs
xor
outs
mov
and
ins
xor
mov
dec
js
add
add
clc
xchg
pusha
les
fldenv
stc
dec
cli
push
or
mov
loop
push
loope
retf
add
inc
mov
push
push
dec
movs
xlat
ins
ret
je
repnz
outs
popf
or
sbb
inc
xor
mov
(bad)
pop
push
xchg
fist
sbb
loop
jg
les
xor
(bad)
div
cmp
outs
mov
aam
ss
mov
(bad)
cmps
loopne
mov
scas
fwait
sahf
mov
mov
or
ds
and
jmp
popa
out
es
inc
inc
jmp
push
loop
jno
dec
or
popa
das
pop
jno
push
retf
xchg
mov
cmp
or
pop
jnp
xchg
xchg
imul
cdq
jg
xchg
add
inc
ins
popa
lock
cmps
cwde
(bad)
out
lock
stos
rol
in
loopne
scas
fstp
dec
out
or
cmp
xor
pop
mov
imul
ss
jae
pusha
dec
mov
cdq
mov
sub
adc
shl
loopne
sub
test
mov
add
leave
rcr
lods
mov
stc
and
arpl
mov
sahf
(bad)
push
iret
retf
cmp
or
add
lock
popf
mov
test
mov
mov
add
inc
sti
hlt
dec
jb
pushf
mov
frstor
call
repz
push
jmp
clts
cmp
sub
adc
clc
(bad)
and
dec
mov
int3
retf
ja
inc
in
lock
add
dec
(bad)
aam
inc
or
sbb
int3
sar
jecxz
imul
mov
dec
fmul
mov
movs
test
mov
scas
xor
add
in
inc
scas
lock
shl
mov
or
mov
call
xchg
push
imul
loope
adc
gs
mov
fst
jne
test
arpl
jg
adc
inc
div
mov
inc
(bad)
jne
icebp
xchg
enter
aas
pushf
xchg
retf
xchg
inc
cmc
cld
cld
(bad)
fucompp
stos
push
sub
jg
test
dec
lds
aaa
das
sbb
or
nop
jmp
ins
mov
retf
test
push
push
inc
ret
retf
repnz
mov
add
ins
add
ja
jns
dec
and
cmps
jno
je
loop
jg
inc
xor
xchg
xor
add
int
stc
cmp
bound
test
mov
into
sbb
adc
push
add
repnz
and
adc
rcr
in
pop
mov
popf
mov
inc
jnp
push
add
call
inc
int3
sbb
push
dec
xor
inc
xchg
jnp
ja
dec
dec
mov
xor
dec
fsub
xchg
and
gs
or
inc
sub
nop
cwde
mov
jns
mov
popa
ror
inc
xor
and
xchg
xor
outs
arpl
mov
into
imul
fisttp
(bad)
out
fdivr
adc
invd
adc
loopne
ret
mov
sub
aam
xchg
mov
into
sbb
cmps
xor
(bad)
into
mov
mov
add
push
cwde
dec
ss
mov
aaa
jb
dec
int3
inc
mov
adc
cmp
cmp
inc
dec
dec
sbb
popa
fcomp
fbld
int3
xchg
xchg
xor
pop
xchg
mov
enter
mov
popf
add
mov
mov
movs
jbe
mov
out
push
inc
sbb
pusha
cmp
cld
pop
sub
arpl
push
jl
mov
cmps
lds
aad
dec
loope
shl
mov
push
push
or
cmc
pop
xchg
mov
sbb
fidiv
cwde
iret
fs
rcr
pop
hlt
cmps
imul
fstp
in
pop
lahf
ja
or
sbb
push
xor
test
cmp
in
and
scas
data16
mov
pop
pop
cmps
push
loope
sub
je
loope
outs
add
or
icebp
push
inc
push
mov
sub
cmp
adc
or
xchg
sbb
or
push
scas
cld
repz
cmp
jns
sar
mov
aas
mov
enter
push
fist
lds
imul
add
jns
mov
cmp
push
push
fld
(bad)
stos
jo
test
dec
xchg
and
pusha
fsub
xchg
lods
fs
sar
rol
push
or
jmp
and
jmp
out
pop
cmovs
aas
mov
pop
sbb
leave
pusha
xlat
mov
in
push
in
jp
rcl
in
xchg
sub
cmp
rcr
nop
icebp
aaa
int
xchg
lahf
jnp
lea
adc
out
xchg
sbb
sbb
jne
inc
jl
icebp
jns
icebp
mov
or
iret
test
and
movs
(bad)
mov
adc
jno
pop
inc
push
(bad)
out
jmp
ret
inc
int3
out
cli
in
or
ret
push
test
mov
jb
(bad)
leave
out
call
push
ss
push
enter
aas
arpl
and
jl
push
es
sar
leave
fs
popf
idiv
xchg
sub
jecxz
pop
adc
out
inc
jge
mov
retf
scas
(bad)
jns
push
loop
mov
and
idiv
and
jne
shr
mov
xchg
leave
movs
fdiv
(bad)
loopne
test
jae
clc
push
xchg
test
mov
test
sbb
sub
rcr
jge
mov
jg
cmp
jg
in
pusha
ret
xchg
loop
sar
or
push
enter
adc
xor
adc
adc
pop
arpl
psubb
cmp
sbb
fiadd
pop
jbe
stc
mov
std
frstor
popa
and
out
mov
ror
push
cmp
scas
dec
cmc
or
or
or
cmps
out
mov
(bad)
push
adc
xchg
cmp
lock
scas
pop
pop
or
and
cmp
or
mov
imul
outs
call
bswap
sahf
sub
aaa
mov
fwait
cmp
in
sub
sbb
xchg
fisub
retf
cs
pusha
pop
push
loope
sbb
jno
cwde
sti
pop
repz
loope
inc
and
add
mov
xchg
test
(bad)
sub
xor
cdq
arpl
cmp
div
ins
and
cmp
idiv
dec
mov
jl
push
inc
dec
imul
int3
mov
inc
sbb
icebp
mov
cmp
sbb
inc
clc
add
loopne
or
fidiv
pop
lods
mov
mov
mov
std
imul
jecxz
sar
sti
sub
out
push
enter
dec
shl
mov
mov
mov
pop
xlat
mov
mov
movs
fs
pop
fisttp
and
or
or
adc
loop
ret
clc
movs
mov
sub
pop
sahf
icebp
test
addr16
push
mov
or
daa
outs
imul
mov
cmp
inc
(bad)
and
stos
movs
and
mov
sbb
fisub
pop
mov
pop
and
aam
das
sub
movs
jo
stos
cmps
xor
and
stc
fwait
adc
jecxz
scas
xchg
xor
mov
fucom
cmp
add
icebp
mov
loopne
out
lods
sbb
sub
inc
out
movs
das
push
pop
xor
(bad)
pop
or
test
mov
rcl
sub
add
cmp
out
or
fcmovnb
mov
dec
stos
ja
mov
fwait
adc
gs
add
ds
call
lods
dec
push
jmp
je
mov
fs
fsubr
pop
cmps
or
push
(bad)
sub
pop
add
pop
adc
and
fistp
inc
ror
push
js
xchg
inc
dec
adc
movs
clc
sub
sub
das
faddp
pop
mov
or
inc
push
cmps
push
sub
aad
or
xchg
shr
(bad)
sbb
ret
mov
bound
jg
into
ret
inc
bnd
icebp
(bad)
mov
add
adc
xchg
les
push
iret
sub
leave
ror
push
dec
jp
push
add
rcl
or
mov
out
aam
add
cmp
retf
add
inc
ret
fs
push
adc
cs
in
push
test
ja
loopne
stc
ja
imul
ins
mov
push
and
sub
cmc
outs
dec
push
enter
movs
test
lods
xchg
fidivr
fld
jg
pop
loop
(bad)
mov
jbe
dec
bound
enter
mov
mov
aas
js
mov
dec
sub
retf
jbe
jae
or
lods
out
cwde
push
adc
push
jne
stos
cmp
and
movs
das
test
popa
push
pop
or
lds
xchg
rcl
fist
mov
xchg
test
popa
adc
shr
dec
sbb
jp
pop
jge
jmp
pusha
call
push
add
(bad)
push
dec
sbb
mov
push
jne
sahf
sub
(bad)
test
xor
xchg
fs
adc
rcl
(bad)
mov
inc
jg
retf
es
cmp
pop
dec
cmp
push
and
out
mov
pop
pop
inc
xor
test
push
cld
retf
iret
or
daa
shl
mov
test
pop
inc
pop
xchg
(bad)
pusha
out
scas
sbb
cld
push
push
stos
(bad)
sbb
outs
je
lods
call
mov
cmp
xor
js
test
jo
cmp
pop
arpl
pop
jle
adc
stc
or
scas
daa
mov
jae
xchg
jmp
push
inc
or
call
jne
sub
imul
(bad)
and
scas
pop
dec
push
xchg
lds
mov
jae
push
out
mov
and
cld
fadd
loop
xchg
or
aad
or
mov
lods
lock
pop
test
push
mov
scas
pop
mov
add
gs
scas
and
jg
fiadd
push
push
lahf
mov
lds
xchg
push
dec
(bad)
rcl
xlat
push
dec
jp
adc
mov
fimul
frstor
xchg
jge
mov
add
mov
out
rcr
ss
add
jmp
inc
mov
cmp
cmp
fsub
test
push
fist
iret
mov
mov
sub
lahf
in
call
out
pop
out
or
sbb
into
cwde
xchg
int3
push
cmc
pusha
mov
and
rol
rol
xchg
jl
inc
xor
mov
push
push
call
nop
xchg
xlat
sahf
test
sbb
ja
push
call
fsubr
sub
xchg
into
cwde
cmp
je
pop
ret
ins
xor
lods
xchg
out
sahf
cli
mov
mov
mov
or
push
js
loop
push
mov
sub
outs
dec
fs
push
clc
fnstsw
or
jp
mov
xchg
popa
fcom
imul
sbb
pand
retf
jg
inc
retf
mov
inc
cdq
inc
push
jmp
pop
(bad)
fisub
and
and
stc
clc
ror
sbb
jmp
sbb
or
pop
aad
cmp
(bad)
cdq
(bad)
stc
cmp
add
popa
ins
xchg
aad
adc
cmps
push
jle
push
mov
sbb
adc
jno
sbb
add
rep
and
shr
xor
in
inc
and
jmp
fist
inc
and
pop
loope
push
ret
not
iret
xchg
xor
cmps
imul
mov
arpl
sahf
aad
aas
call
jb
and
fstp
(bad)
icebp
seta
xor
push
out
in
icebp
push
mov
sbb
push
dec
out
inc
jp
mov
xchg
adc
test
stos
mov
cmp
pop
mov
scas
into
or
pusha
or
cli
lods
mov
vmovupd
rcpps
aad
push
movs
gs
dec
xor
test
push
cmps
imul
loop
inc
(bad)
xchg
inc
jmp
jmp
in
jns
jle
dec
lea
cmp
inc
leave
loopne
aas
or
mov
lahf
das
repnz
bound
mov
cmps
dec
jle
stos
(bad)
mov
(bad)
(bad)
lea
xchg
je
and
push
fsincos
ret
sbb
and
xchg
int
cmps
push
push
xor
cmps
add
dec
jmp
dec
mov
imul
mov
cmps
xchg
ss
adc
sbb
xchg
popa
jnp
cmps
xor
scas
or
inc
arpl
call
sbb
arpl
mov
dec
push
lock
stos
pop
push
cmp
sbb
inc
cmp
mov
dec
jae
into
push
gs
xchg
dec
add
cmp
je
or
pop
lods
inc
ss
call
jmp
sbb
leave
mov
push
cli
pop
in
pop
sti
imul
pop
sbb
pop
call
in
and
mov
jge
mov
cmp
inc
mov
ret
test
or
and
mov
sbb
pop
mov
test
iret
mov
outs
pop
sbb
out
cmp
les
fidivr
pop
cdq
aad
mov
and
icebp
jecxz
fdiv
and
call
jmp
in
stos
push
popa
xchg
je
(bad)
in
mov
ficom
xchg
pop
out
dec
pusha
lds
push
inc
push
test
push
retf
or
or
inc
or
add
movs
dec
jae
mov
cdq
ret
pop
sar
push
push
test
adc
dec
dec
js
adc
jmp
xchg
int
fs
jb
push
push
sub
fs
mov
inc
jo
popa
leave
pushf
cmp
dec
es
mov
dec
inc
arpl
mov
xor
es
sbb
and
and
scas
ins
dec
lahf
pushf
inc
pop
(bad)
movs
mov
mov
in
outs
adc
jb
dec
lds
mov
(bad)
bound
xlat
xchg
data16
(bad)
mov
inc
mov
xor
mov
and
jg
(bad)
ins
retf
mov
popf
(bad)
or
mov
dec
adc
test
push
aaa
mov
xchg
jne
or
push
fbstp
das
mov
int
daa
mov
cmp
js
push
xchg
repz
enter
mov
repz
daa
inc
adc
ds
push
cmp
adc
cdq
jbe
lahf
into
or
xor
or
push
pop
jl
push
icebp
stos
test
jle
jbe
mov
pop
xchg
in
pop
(bad)
and
inc
sub
out
call
jg
jno
bound
mov
jl
cmp
icebp
dec
lea
mov
mov
dec
dec
xor
(bad)
xlat
sahf
xchg
or
cmps
inc
jecxz
mov
bound
cli
add
pop
push
ds
ret
push
in
dec
add
pushf
(bad)
mov
test
aad
inc
bound
mov
sbb
fs
push
sahf
xchg
lahf
mov
and
sbb
xor
test
xchg
cmp
fs
loop
das
xchg
cmp
mov
mov
jecxz
(bad)
push
cs
pop
sbb
jno
or
and
in
mov
int
xchg
cmp
mov
out
outs
icebp
jbe
jbe
mov
inc
jo
mov
adc
ret
sbb
loope
or
popa
xchg
dec
sub
push
mov
sbb
mov
mov
loopne
mov
stos
push
(bad)
push
cmp
iret
cmps
mov
push
pop
frstor
out
rcl
(bad)
rcr
adc
dec
cwde
jo
(bad)
hlt
sbb
xchg
inc
mov
push
aaa
(bad)
(bad)
iret
gs
cmp
adc
jo
pushf
fild
enter
das
imul
mov
cmp
aaa
jg
and
loop
ins
out
into
shr
sub
pop
mov
cmps
pop
add
dec
mov
mov
mov
push
mov
dec
into
lahf
cmp
sbb
add
(bad)
aaa
xor
sti
xchg
repz
test
lods
(bad)
lahf
dec
jmp
fisttp
out
dec
mov
in
rcr
in
mov
test
mov
jmp
pop
(bad)
fisubr
dec
mov
jl
jo
jb
push
clc
addr16
(bad)
out
mov
or
pop
scas
dec
inc
jmp
inc
and
scas
mov
push
dec
adc
jbe
or
vmwrite
mov
lock
ret
push
add
arpl
mov
shr
loope
in
shl
test
cmps
and
cmps
ret
push
shl
push
mov
mov
jnp
sahf
cmp
rcr
hlt
test
mov
imul
jle
inc
fs
mov
(bad)
stc
mov
xor
test
sbb
rep
cdq
sub
scas
sbb
stos
push
stos
leave
aam
mov
or
xlat
sbb
mov
lock
xchg
push
lods
inc
in
mov
dec
xor
aad
aad
sbb
sub
pop
adc
pop
sti
scas
mov
mov
cmps
adc
fisubr
call
enter
sahf
pop
push
lds
add
mov
jae
in
bound
lods
push
adc
jb
jb
mov
fisub
xor
mov
(bad)
bound
sbb
sbb
cdq
push
mov
mov
ds
push
int
rol
mov
out
lods
repz
xchg
popf
inc
xchg
dec
jno
cli
or
in
cli
call
cmp
mov
pop
dec
cmc
push
or
jl
sub
or
les
data16
scas
xor
daa
mov
adc
jmp
inc
adc
sbb
test
or
and
cmc
in
jge
add
ror
fistp
icebp
fild
dec
lock
stos
mov
popf
xor
hlt
pop
loop
mov
nop
lds
add
outs
pop
dec
pusha
mov
ins
dec
jge
outs
push
mov
movs
les
sbb
mov
out
mov
lds
mov
sbb
pop
icebp
outs
inc
test
cs
mov
lods
sub
shl
je
pop
(bad)
inc
mov
mov
movs
mov
fdiv
inc
aam
adc
push
mov
aas
xchg
fild
stos
xchg
idiv
adc
pop
fidivr
ds
mov
jp
jl
or
into
dec
in
push
pop
pop
cmps
jp
sbb
mov
lahf
leave
sbb
lds
mov
cli
mov
add
les
test
add
or
fyl2x
mov
test
test
mov
mov
sbb
movs
mov
movs
jecxz
or
xor
test
out
mov
sub
cmc
mov
ins
jge
sbb
adc
and
dec
cmp
push
stc
xor
inc
pop
push
std
jb
mov
daa
push
inc
lds
(bad)
jo
sub
add
jle
sub
mov
mov
ret
lds
arpl
dec
jmp
movs
mov
test
(bad)
xor
jns
pop
in
fistp
cmp
jae
push
iret
test
inc
push
(bad)
mov
jnp
pusha
(bad)
into
je
imul
jle
pop
aaa
mov
or
shl
call
and
or
jb
jl
sub
push
pop
add
in
stos
xchg
out
mov
cld
stos
sbb
les
outs
test
mov
ror
pop
and
scas
add
in
push
les
push
jmp
dec
and
inc
xor
add
fwait
or
push
aam
mov
ffreep
aas
lahf
add
pop
bnd
adc
add
jo
int3
les
fdiv
mov
imul
mov
out
push
iret
pusha
mov
ds
leave
mov
adc
loopne
cs
ss
adc
aad
stc
aas
xor
das
jnp
jge
enter
mov
xor
clc
inc
inc
and
sub
ins
mov
mov
fiadd
gs
pop
enter
pop
stos
adc
adc
or
call
lock
pop
fisub
loope
popa
mov
retf
mov
xchg
dec
and
(bad)
mov
rcr
jl
push
push
call
jo
loop
push
lahf
mov
and
mov
hlt
mov
sub
or
mov
(bad)
mov
cmp
gs
data16
sub
out
jecxz
imul
xchg
xchg
sub
xchg
jb
ret
mov
sbb
cld
jne
rcl
sahf
movs
pop
push
cmp
aas
(bad)
xchg
enter
push
in
pusha
ret
stos
inc
jne
dec
mov
sbb
jo
jbe
stos
test
out
gs
fidiv
sbb
dec
retf
movs
jl
push
shl
pop
cmp
and
lods
xor
mov
fcmovnbe
push
rol
stos
inc
cmps
xchg
and
in
shr
shl
aas
pop
pop
in
xchg
sub
mov
clc
xchg
mov
sub
rcr
add
fwait
mov
(bad)
fld
loope
cmp
test
inc
mov
call
push
aad
cmps
push
repnz
jno
daa
xor
ja
js
xor
cs
lahf
fisttp
jmp
clc
mov
xchg
data16
xchg
enter
mov
in
(bad)
rcr
ins
pop
leave
inc
or
int
mov
not
cs
push
les
movs
pop
lahf
fadd
pop
nop
scas
loope
loope
mov
inc
sub
les
push
and
inc
in
aaa
aas
(bad)
out
sti
daa
mov
adc
xor
cmp
or
and
sub
sti
aaa
aaa
inc
add
pop
rcr
add
daa
pop
mov
icebp
shl
pop
jne
icebp
movs
scas
je
arpl
stc
ficomp
dec
aam
pop
fnstsw
sbb
adc
cs
inc
mov
or
nop
fdivr
fnstsw
mov
sahf
jno
dec
mov
icebp
icebp
hlt
pop
out
inc
inc
mov
push
push
xor
gs
jne
dec
test
mov
lahf
pop
neg
pop
xchg
mov
adc
enter
icebp
xor
or
sub
sahf
pusha
mov
(bad)
lea
out
push
xchg
cmp
dec
jg
leave
jne
jg
repnz
pop
repnz
mov
mov
and
mov
imul
sub
fs
ss
xor
ins
mov
adc
push
or
fucomp
adc
ficom
mov
ret
es
or
pop
jmp
ss
lods
scas
adc
repnz
xor
dec
dec
inc
mov
adc
imul
push
and
retf
inc
(bad)
iret
jle
or
mov
xor
imul
enter
imul
or
nop
ja
push
mov
cmp
or
adc
aas
xchg
ret
dec
and
jg
push
dec
jmp
cmp
(bad)
mov
add
mov
xchg
pop
xor
sbb
pshufw
and
jb
mov
xchg
int
mov
inc
movs
push
fstp
jno
xchg
sub
movs
les
xor
jl
xchg
sti
arpl
jge
call
cmp
in
cs
cmp
push
push
xor
gs
je
rcl
push
xchg
push
cmp
imul
xor
call
jmp
in
add
jb
out
imul
mov
pop
push
cld
jmp
add
fwait
or
pop
bound
(bad)
cmp
sub
jne
test
test
call
jge
jae
dec
inc
jo
add
mov
add
mov
out
out
sbb
push
fisubr
stc
fld
sub
out
xchg
adc
xchg
xchg
in
sbb
cmp
or
nop
(bad)
rcl
fsubr
test
and
std
ds
nop
adc
sub
ins
movs
jns
call
jmp
fdiv
dec
mov
mov
xor
push
push
ret
retf
test
inc
in
push
int
sbb
lds
fidivr
pop
push
jne
fwait
mov
sbb
push
rcl
adc
(bad)
sbb
pop
ins
mov
sub
cmp
pop
iret
jne
imul
rol
mov
sahf
pushf
xlat
clc
mov
lds
xchg
int
iret
iret
jo
xor
push
les
inc
rol
mov
push
outs
test
add
cmps
dec
dec
retf
outs
push
cmp
dec
adc
mov
dec
jns
(bad)
out
pusha
rcl
mov
and
daa
dec
pop
mov
je
outs
sub
std
out
jne
push
(bad)
inc
xor
int3
les
int3
in
and
imul
dec
adc
adc
jmp
xchg
xor
outs
stc
ret
lods
aam
shl
test
ret
fadd
cli
imul
sbb
pusha
pop
rcr
jge
xchg
fdiv
retf
dec
jmp
pop
test
rol
jp
xchg
cmps
xchg
mov
scas
cmovge
fdivr
jge
jns
adc
das
ret
inc
enter
iret
hlt
rcr
adc
add
or
mov
mov
mov
and
ret
cld
cmp
outs
sub
mov
mov
sbb
pop
or
hlt
rcr
dec
mov
call
jb
xchg
mov
adc
push
(bad)
shl
and
add
jg
ja
dec
jmp
repnz
out
push
pop
aam
mov
je
xlat
test
test
pop
hlt
(bad)
dec
lock
in
aam
mov
cmp
add
mov
fdivr
inc
aas
(bad)
std
push
loop
jns
sub
ja
cld
repz
es
fdiv
pop
pop
int
lods
cs
jnp
sti
dec
adc
mov
test
mov
fisttp
mov
std
cmps
inc
xor
xor
stc
xchg
mov
enter
xchg
fstp
mov
iret
add
pop
xchg
add
repz
push
scas
aaa
push
movs
and
mov
dec
sub
lahf
out
dec
js
out
inc
mov
lds
sar
mov
or
das
jnp
adc
leave
pop
pop
rol
out
or
cmp
mov
rol
add
sar
push
cmps
adc
inc
es
mov
inc
bsf
and
sbb
repz
std
push
mov
(bad)
int3
or
inc
dec
into
test
mov
or
repz
pop
es
lock
rol
sbb
dec
xor
sub
cld
cmp
dec
jbe
add
out
mov
sbb
iret
arpl
jg
jmp
mov
adc
xchg
or
adc
idiv
pop
sbb
sub
dec
lods
mov
inc
arpl
xchg
adc
iret
(bad)
call
mov
dec
cld
xchg
sbb
and
arpl
out
push
arpl
mov
jae
jno
pop
es
es
icebp
in
pop
pusha
in
push
ins
sbb
xor
jge
(bad)
int
xlat
or
out
and
mov
push
test
sbb
add
mov
dec
jge
pop
mov
fnstcw
into
enter
shr
mov
or
pop
lods
imul
dec
push
(bad)
fimul
repnz
mov
adc
push
fnstsw
jb
lods
dec
push
call
inc
or
push
lods
xchg
ret
(bad)
mul
lea
sbb
(bad)
and
pop
mov
push
jle
and
sti
jge
cs
mov
shl
add
std
and
(bad)
mov
cmp
retf
dec
push
dec
pop
call
lods
cmp
and
push
cmp
dec
ret
inc
shr
mov
cmp
adc
loope
pop
call
scas
das
mov
icebp
push
(bad)
mov
fwait
and
ins
lods
cld
sbb
in
mov
je
xchg
sbb
(bad)
pushf
(bad)
call
repz
imul
xor
inc
dec
fxch
cmp
add
jae
sbb
cmp
add
or
and
jge
adc
shr
ror
xchg
stos
iret
lock
xor
call
aam
mov
fwait
es
loope
movs
mov
dec
mov
popf
retf
and
inc
popf
ret
fmul
int3
or
pop
jno
mov
push
leave
imul
pop
adc
xor
ja
int3
jae
pop
stos
mov
lods
scas
in
stos
fst
add
mov
das
js
ret
xchg
icebp
fild
cmc
icebp
call
add
retf
mov
inc
push
dec
out
add
shl
das
xchg
je
xchg
psubusb
test
or
dec
mov
dec
cmp
cwde
hlt
xor
pushf
in
test
call
xor
adc
mov
popf
cmp
popa
add
and
mov
fild
push
jg
mov
cld
add
pop
mov
xor
or
adc
arpl
push
fstp
out
jbe
add
in
dec
dec
(bad)
shr
fwait
jmp
mov
push
sbb
movs
add
mov
mov
jmp
xchg
cmps
gs
mov
and
or
outs
push
dec
(bad)
mov
pushf
js
fild
sbb
fild
xchg
inc
test
aad
xor
xor
xor
or
lds
mov
fmul
xchg
inc
xchg
pop
shr
jmp
xchg
xor
or
sbb
inc
mov
cmps
add
or
hlt
cmp
push
jno
cmps
or
cdq
ror
test
inc
iret
pop
div
fdivrp
and
xor
xor
sar
mov
jmp
int
push
stos
pusha
std
lock
add
shr
popf
sbb
add
scas
hlt
xchg
xor
imul
or
popf
and
xchg
xchg
mov
xor
push
fsubr
cmp
sbb
add
pusha
jge
ins
add
ret
push
in
xchg
ja
outs
ins
ins
or
into
es
mov
test
lea
dec
push
cli
retf
mov
push
jb
aas
call
add
cmp
dec
push
mov
shl
les
mov
dec
xchg
mov
(bad)
cmc
(bad)
out
jp
out
dec
out
sub
or
inc
cmp
call
setno
push
sub
push
add
in
(bad)
ja
and
enter
xlat
enter
xor
enter
add
mov
mov
ror
(bad)
fimul
xor
sti
jmp
jp
mov
stos
adc
sahf
pop
arpl
cli
dec
mov
and
cs
call
movs
(bad)
(bad)
cmp
aaa
sub
cmp
ins
test
xor
pop
inc
out
imul
inc
jnp
aad
inc
and
pop
cmp
lods
jae
push
push
loop
pop
(bad)
cmps
cmp
aas
sbb
and
xor
sbb
adc
es
xor
call
(bad)
into
adc
pop
xchg
or
cmp
mov
(bad)
jmp
(bad)
and
cmp
call
sbb
or
jbe
pop
xlat
sbb
or
retf
rol
cmp
movs
or
cmc
mov
push
add
or
cmp
xchg
pop
clc
(bad)
aaa
push
fbld
ins
jl
shl
push
adc
mov
mov
pop
imul
dec
cli
pop
pop
(bad)
sbb
add
mov
gs
dec
lock
fdiv
cmps
addr16
mov
xor
loop
out
push
xchg
jns
rcl
out
fsub
das
out
sub
and
cld
mov
test
ins
div
sub
in
(bad)
mov
mov
jae
mov
inc
(bad)
pop
jne
scas
mov
pop
jg
mov
lea
lahf
pop
movs
hlt
inc
hlt
ficom
arpl
aaa
mov
mov
cdq
fimul
stos
pop
lahf
fsubr
mov
push
inc
jge
std
(bad)
icebp
mov
lods
push
add
scas
or
push
mov
cmp
cli
aaa
sbb
jbe
cmp
xor
arpl
mov
repz
push
leave
pop
out
mov
out
pop
lock
cld
repz
data16
or
mov
add
stc
mov
loope
sbb
cmc
test
leave
cmc
dec
mov
out
cmps
cmp
cmp
out
test
mov
jae
pop
or
scas
cmp
(bad)
lock
jecxz
and
inc
xor
push
cmps
test
inc
dec
jo
push
sbb
pop
hlt
or
xor
xchg
and
jmp
jmp
rcr
push
jne
test
lahf
cdq
mov
pop
jmp
dec
pusha
(bad)
xor
out
jp
call
xchg
adc
mov
test
out
cs
xchg
jns
out
mov
mov
adc
stc
add
inc
jb
imul
ret
cld
scas
adc
mov
mov
loop
sbb
pop
or
call
repnz
jle
shl
push
push
cmc
pop
pop
jle
in
push
outs
cwde
push
fwait
test
dec
imul
lds
arpl
mov
movs
scas
fbld
push
pop
retf
xchg
movs
cs
dec
aaa
cmp
and
inc
int3
addr16
aad
jle
or
add
aas
and
sbb
pop
sub
sub
cwde
dec
in
das
mov
fs
aam
sub
aaa
inc
xor
mov
pop
sub
dec
pop
gs
and
leave
cmp
jl
jmp
cmp
or
adc
cmp
sbb
sti
dec
jecxz
mov
adc
inc
fmul
sti
ja
icebp
push
shl
ret
std
xchg
nop
cdq
cmp
xchg
push
pop
scas
in
ror
push
push
add
dec
pslld
movs
jnp
sar
fnstsw
ins
stc
add
retf
shl
stc
cmp
arpl
dec
dec
xchg
into
pop
(bad)
loope
pop
cmps
add
in
cmc
(bad)
mov
popa
push
dec
mov
jne
mov
or
mov
icebp
xor
(bad)
fmul
into
das
or
je
or
into
pop
dec
mov
je
ror
or
cmps
jmp
ds
mov
lods
repnz
mov
xchg
mov
adc
adc
mov
lds
dec
push
repnz
pop
cmps
mov
loopne
and
icebp
add
shr
out
test
sub
fdivr
xor
sbb
cmp
icebp
test
outs
ret
and
or
sbb
out
push
adc
inc
sbb
mov
mov
xchg
fs
mov
mov
mov
popf
ds
cmp
sbb
hlt
js
pop
aas
adc
ret
push
sar
inc
inc
xchg
sar
mul
dec
jo
popf
or
sbb
sub
and
(bad)
cmp
cmp
mov
inc
sbb
xor
je
cli
or
xchg
retf
test
cmp
cli
imul
inc
push
mov
push
sbb
lods
mov
pop
sub
aas
stos
mov
mov
in
cld
out
mov
je
int3
pop
xor
xchg
pop
sbb
sub
sbb
and
mov
dec
inc
push
imul
mov
and
cmps
leave
(bad)
mov
cmp
sbb
adc
int3
jno
popf
fistp
jecxz
pop
in
std
ret
xor
imul
ds
adc
xor
loopne
stos
mov
and
sub
ins
in
or
inc
sub
and
xchg
xlat
call
loopne
cmp
or
jecxz
xchg
cli
mov
ins
mov
xchg
and
jmp
mov
adc
pop
mov
cs
mov
jmp
xor
sub
push
xchg
sbb
push
push
and
push
push
adc
idiv
push
out
mov
jo
sbb
push
pusha
(bad)
adc
lahf
lods
test
cmp
rcl
mov
cmp
xlat
test
mov
clc
mov
bound
loopne
(bad)
lock
xchg
cs
hlt
cmp
and
or
jo
cs
pop
js
dec
into
scas
xor
call
jmp
mov
pop
inc
add
jmp
pusha
push
es
add
xor
fstp
ins
aas
outs
mov
je
xchg
popf
mov
xchg
imul
inc
retf
mov
test
sub
jae
daa
push
sub
lods
test
and
sbb
inc
cmp
mov
fistp
and
push
jo
test
stos
cmp
push
lods
bnd
adc
ret
ret
rcl
xor
ds
mov
int
ret
cmps
fs
cld
mov
xchg
in
xchg
or
cld
xchg
test
push
pop
(bad)
stos
push
inc
imul
jae
cmp
mov
addr16
ret
stos
mov
mov
cs
cmp
cli
std
xor
(bad)
xor
and
jo
push
ret
popa
adc
nop
and
xor
sbb
xor
xchg
adc
mov
jle
jecxz
(bad)
xor
les
lods
lods
lods
je
mov
xor
fimul
fcom
mov
lods
pop
in
fwait
(bad)
int
int
(bad)
sbb
loopne
(bad)
fs
lahf
adc
das
sbb
jge
enter
mov
loopne
fdivr
(bad)
into
js
adc
syscall
in
in
inc
jge
mov
jnp
rcr
aad
sub
shr
ss
cs
pop
cmp
xchg
int
repz
add
lahf
pusha
and
mov
sub
movs
addr16
mov
push
shl
icebp
(bad)
(bad)
loope
jg
les
jl
fistp
push
popa
das
cmp
out
out
sub
xchg
xchg
shl
sti
stc
dec
xlat
call
xchg
jecxz
pushf
popf
pop
pop
push
out
xor
dec
nop
mov
movs
jle
cmp
xchg
fld
(bad)
mov
enter
inc
(bad)
fstp
mov
int
in
in
shl
jmp
dec
shl
stc
mov
mov
xor
or
call
cwde
mov
add
int3
add
xlat
mov
out
je
mov
xor
dec
and
hlt
in
mov
mov
add
mov
mov
push
inc
adc
and
xor
dec
xor
sub
popf
bound
jmp
mov
iret
aaa
in
lods
scas
or
add
out
cmps
xlat
iret
test
sub
sub
and
sbb
and
push
or
mov
mov
sbb
div
pusha
push
aad
ds
rcl
dec
push
sbb
loope
test
dec
ficomp
xor
stc
pushf
pop
mov
retf
in
aaa
fbstp
cmp
xchg
adc
test
movs
ds
mov
xor
cmp
mov
test
mov
and
out
inc
mov
dec
test
sub
cdq
push
adc
xlat
jb
cwde
imul
scas
outs
dec
js
dec
stc
mov
mov
retf
add
jp
js
and
inc
xchg
cmp
shl
pop
push
dec
fnsave
sub
arpl
arpl
loope
leave
(bad)
adc
fldenv
es
pop
xor
loope
mov
add
xchg
push
cmp
mov
outs
jmp
inc
or
sbb
push
sub
and
xor
add
and
push
(bad)
pop
dec
mov
sub
scas
test
(bad)
into
pop
mov
addr16
xchg
mov
cmps
mov
icebp
xor
xchg
loop
iret
jmp
cmc
dec
inc
gs
int3
jae
lahf
js
(bad)
cmp
out
inc
xor
out
cmp
inc
leave
inc
pusha
pop
xlat
adc
aam
jmp
test
mov
fisttp
sub
sub
cmp
mov
into
fwait
jp
dec
ret
xchg
and
test
pop
lock
and
push
mov
adc
test
stos
cmp
or
pop
or
out
lods
adc
add
pop
push
ficomp
add
out
mov
xchg
push
lahf
ret
jmp
push
call
xor
jnp
fcomp
cdq
dec
es
ret
xchg
ficom
jecxz
das
mov
test
aas
ins
sbb
scas
loop
je
or
xchg
ss
jg
dec
popa
jo
(bad)
fild
cmp
repnz
je
or
retw
xor
retf
push
jne
movs
(bad)
into
ror
sub
pop
cdq
add
cmp
sub
call
pop
popa
rol
cmp
int
dec
adc
push
stos
jl
in
ins
pop
adc
mov
sbb
cmc
shr
call
mov
jbe
fst
jl
and
dec
mov
push
ja
ret
cmps
data16
or
scas
(bad)
xchg
xchg
inc
clc
loopne
aam
mov
shl
clc
or
out
les
sbb
out
aaa
test
std
(bad)
and
cmp
fiadd
cld
ds
stos
mov
and
jmp
inc
cmp
stos
and
jb
pop
inc
outs
xor
sbb
icebp
cmp
jecxz
jle
xchg
jmp
dec
retf
cdq
popa
ja
xchg
fisttp
xor
add
sahf
adc
adc
sahf
mov
js
das
std
clc
or
mov
push
test
mov
or
add
cmp
movs
or
cmc
call
sti
pop
inc
pop
or
mov
mov
xchg
mov
in
call
cwde
xchg
iret
sub
cmc
bound
stos
fs
push
and
(bad)
push
ret
jbe
mov
shr
inc
xchg
lea
ret
cmp
enter
xor
adc
xchg
jmp
into
xor
test
sub
mov
imul
out
outs
cmp
ss
sub
or
xchg
xchg
outs
das
or
movs
xor
or
icebp
jmp
jae
lds
leave
cmp
in
std
cmp
xchg
dec
mov
fadd
jmp
add
test
arpl
and
out
jp
add
stc
cdq
and
sti
pop
mov
add
dec
test
dec
cmps
int3
aad
cmp
push
xchg
sbb
xrelease
lods
inc
jp
adc
ret
imul
add
xlat
xor
mov
cmp
pop
in
(bad)
nop
jmp
push
leave
shl
push
sbb
jl
xlat
gs
dec
movs
cli
retf
mov
jg
rol
cmp
or
ror
jle
lahf
xor
mov
arpl
not
fidivr
pop
arpl
push
nop
(bad)
jecxz
xchg
and
or
cwde
xor
mul
and
jmp
push
out
fmul
shl
(bad)
dec
add
mov
xchg
clc
cmp
lahf
mov
aad
rcl
pop
add
in
dec
add
repnz
out
(bad)
jp
add
sub
mov
fsubr
aas
popf
pop
xchg
cmp
aam
or
std
and
sahf
fld
idiv
mov
lock
mul
cmp
or
je
(bad)
loope
mov
stos
fwait
(bad)
iret
adc
mov
inc
jge
mov
mov
jo
xchg
stos
or
mov
xor
and
cli
jg
mov
pop
fcomp
int
xor
lahf
cmps
rol
pop
xor
add
add
loopne
ret
pop
add
mov
loopne
rcr
popa
imul
pop
js
pushf
and
setnp
inc
cs
or
adc
push
popa
vmread
sbb
sbb
gs
xor
call
arpl
adc
ins
mov
in
cdq
xor
es
cmps
div
imul
out
mov
pop
or
test
fcom
add
pop
mov
cs
jne
cmp
int
mov
popa
jne
add
fwait
cmp
bnd
call
in
nop
xchg
not
pusha
aaa
aas
repnz
pop
cld
push
jge
mov
sti
mov
inc
loop
call
dec
pop
mov
xor
sub
sti
cmps
sub
inc
xchg
pop
aaa
call
mov
cdq
pop
lock
int
xor
adc
fist
mov
aaa
jmp
xor
lods
int
cmp
(bad)
jbe
sub
je
cdq
ss
lock
mov
aaa
shld
hlt
cwde
dec
stos
mov
cli
ret
arpl
xchg
out
sub
mov
fwait
add
sbb
jb
or
aam
in
pop
mov
out
push
arpl
jecxz
fimul
mov
inc
xchg
loopne
mov
rol
pusha
jae
xor
inc
mov
test
fs
jns
das
data16
mov
xlat
(bad)
and
fidivr
rcl
jmp
pop
mov
clc
mov
lods
dec
rol
push
inc
adc
pop
add
das
hlt
leave
add
movs
sbb
and
push
xor
fdivr
xor
add
mov
mov
adc
jnp
adc
jmp
adc
leave
dec
pop
les
(bad)
call
adc
cli
iret
leave
mov
dec
pop
out
or
(bad)
mov
scas
cdq
cwde
arpl
mov
rcl
mov
lods
iret
retf
pop
sub
cmp
jecxz
repz
ds
adc
sub
int
jo
add
dec
mov
out
xchg
pop
fimul
daa
sti
jns
ins
fisttp
and
loope
dec
jnp
inc
sar
xchg
scas
or
das
cwde
pop
fucom
sub
js
rcr
das
(bad)
in
add
test
std
push
sti
ret
and
mov
pop
(bad)
jo
or
or
not
test
test
in
fcomp
inc
stos
adc
scas
repnz
jmp
mov
mov
bnd
jge
mov
mov
jns
stos
jbe
cmp
ins
push
(bad)
aas
cmp
adc
sahf
cmp
mov
stc
arpl
dec
inc
sub
sub
adc
cmp
repnz
jns
icebp
mov
or
ret
xor
push
sub
adc
lods
icebp
out
fcom
inc
rcr
addr16
xor
inc
lea
add
mov
cmp
pop
add
stc
adc
adc
cli
fistp
cmc
(bad)
arpl
div
std
adc
test
push
mov
mov
fisubr
add
nop
(bad)
in
xor
mov
mov
mov
xchg
retf
leave
sub
push
sbb
dec
(bad)
mov
mov
mov
mov
dec
xlat
sbb
(bad)
sbb
fldenv
test
xchg
out
mov
push
jp
call
pop
mov
inc
shl
inc
pop
pushf
add
jl
and
(bad)
jle
jae
jecxz
push
jae
ret
mov
sar
jl
adc
vsqrtsd
bsr
adc
adc
jne
aas
inc
and
xchg
add
popa
jl
sub
fsubr
push
push
xor
cmp
mov
repz
ja
add
or
in
sub
into
pop
push
xor
sub
ret
add
add
dec
xchg
test
(bad)
call
xor
adc
xchg
ror
push
cmp
pop
xchg
cmp
xchg
sub
test
push
out
movs
movs
inc
sub
stc
and
ffreep
inc
(bad)
(bad)
mul
les
push
mov
add
jb
sbb
rcl
in
adc
neg
mov
add
push
and
dec
test
sub
mov
mov
ror
fld
inc
xor
cmp
dec
popf
jle
xchg
inc
adc
(bad)
sar
mov
adc
inc
int3
xlat
lods
sbb
mov
push
jo
add
fst
sub
test
pop
in
inc
sbb
mov
xor
cmp
cmps
jno
pop
xchg
xlat
imul
(bad)
mov
cwde
or
imul
xchg
iret
mov
dec
std
test
retf
jae
ficomp
fstp
or
xchg
inc
in
ror
int3
pop
adc
and
sahf
das
mov
mov
scas
dec
out
sub
std
xor
lods
int
jle
pusha
sub
out
mov
sbb
xor
cmp
fimul
mov
retf
add
pop
(bad)
pop
lods
inc
popf
adc
outs
ret
mov
pop
sbb
cmp
pop
daa
sbb
test
mov
or
pop
into
push
cs
inc
in
pop
imul
lods
or
ror
fld
imul
jmp
ror
loope
push
add
mov
push
inc
scas
adc
fidiv
and
rcr
in
cmp
arpl
(bad)
cmp
loop
aaa
stos
ins
lods
lea
frstor
jmp
mov
outs
pusha
dec
mov
pop
and
mov
push
(bad)
ror
stos
(bad)
adc
push
into
mov
jne
bnd
cmp
pop
in
lock
or
xor
idiv
xchg
popa
(bad)
jg
jo
adc
cs
dec
outs
stos
pop
(bad)
pop
mov
retf
jo
adc
or
jnp
dec
xchg
cdq
addr16
mov
sub
add
sub
jne
cmps
cdq
push
fwait
fwait
pop
dec
jae
div
cwde
adc
mov
mov
fwait
adc
sbb
in
loop
cmp
pop
xchg
fbstp
xor
mov
(bad)
jmp
test
fwait
xchg
popf
and
fld
sbb
xlat
stos
mov
daa
ins
push
cmp
push
mov
test
cmp
fs
sub
push
(bad)
pop
mov
das
call
jmp
xchg
aas
les
mov
daa
rcr
dec
xor
neg
cld
dec
inc
pusha
mov
add
pop
scas
psubb
adc
jl
xchg
fwait
ret
and
pop
fst
xchg
pop
in
dec
jbe
hlt
shl
xor
loope
fcomip
cmps
popa
xor
aaa
rcr
push
jo
push
cli
rcl
inc
mov
jno
data16
js
test
cmps
movs
cld
jge
call
mov
aam
jns
aad
lods
and
xlat
and
adc
pushf
in
sbb
xor
add
mov
and
cmp
arpl
sub
mov
or
push
inc
push
fdivr
xchg
cmp
cwde
(bad)
in
std
ret
cmp
addr16
sar
shr
cli
pop
xor
inc
scas
movs
mov
sbb
dec
mov
aas
xchg
push
dec
in
dec
out
and
push
stos
and
mov
fild
adc
xchg
into
(bad)
jmp
or
mov
dec
clc
dec
cmps
iret
cwde
fidiv
rcl
dec
xchg
jns
jo
and
and
scas
push
pop
(bad)
push
mov
imul
xchg
ret
adc
sbb
mov
rol
jbe
mov
lds
mov
add
xlat
xchg
clc
fist
int
stos
call
daa
imul
sahf
mov
test
and
mov
mov
fdivp
sti
add
je
or
int3
adc
inc
fwait
sahf
stos
dec
repz
mov
push
sub
add
pop
push
inc
mov
adc
push
or
cdq
out
inc
inc
push
cmp
cmps
or
rcr
gs
xlat
sbb
jp
outs
aas
mov
jbe
mov
lods
push
jo
push
ret
aas
fisubr
call
jbe
mov
call
cmps
inc
retf
rcl
stos
repz
push
jo
add
ss
push
ins
in
mov
cmp
jl
mov
xchg
cmp
repz
jge
rcr
in
ss
lods
pushf
dec
addr16
and
jno
pop
repnz
inc
pop
clc
aam
ficomp
(bad)
inc
or
jp
arpl
push
pop
(bad)
mov
test
pop
imul
cli
jecxz
xor
jg
dec
pushf
sbb
xor
test
and
cwde
mov
xor
clc
or
fwait
lods
dec
lahf
outs
mov
and
xchg
jge
es
cwde
retf
xchg
and
inc
push
data16
mov
cld
mov
jg
mov
aas
inc
sub
test
aaa
xchg
les
sub
jmp
xchg
xchg
(bad)
enter
jb
pop
cmps
ins
(bad)
out
ja
test
int
shl
push
mov
data16
leave
scas
xor
stos
scas
retf
mov
inc
test
lods
or
leave
arpl
imul
pop
loopne
into
cld
lea
mov
cmp
addr16
mov
pop
retf
ja
lahf
jb
dec
(bad)
in
mov
dec
cmp
dec
loope
jmp
xchg
in
pushf
cwde
pop
inc
cmp
repnz
stos
lds
std
call
int3
loopne
loop
sbb
xor
out
xor
into
push
cdq
jno
retf
mov
xchg
jge
loopne
aam
pop
jle
ja
or
mov
std
xchg
push
sbb
test
xor
add
pop
fwait
jg
xor
mov
icebp
(bad)
push
in
xchg
dec
fs
sub
(bad)
adc
inc
and
call
push
icebp
pop
jg
into
cmps
popa
mov
mov
ins
xor
popf
jo
ds
jbe
dec
or
and
xchg
(bad)
mov
jns
push
(bad)
out
inc
cmp
arpl
sbb
ss
movs
sub
dec
hlt
fistp
mov
pusha
sbb
je
jge
pop
data16
in
fwait
outs
fmul
(bad)
inc
inc
sar
xchg
mov
test
inc
inc
jo
idiv
mov
lods
cmp
sub
lock
fisttp
std
jp
loopne
push
mov
xor
sbb
clc
push
jne
jecxz
mov
cs
(bad)
test
xchg
push
add
bound
in
imul
cld
nop
hlt
or
dec
mov
and
scas
stos
jle
and
mov
dec
lahf
sbb
mov
push
push
movs
lahf
mov
cmp
mov
jno
sahf
sub
push
inc
outs
retf
jge
(bad)
(bad)
xchg
jecxz
jno
inc
mov
jae
daa
cmps
cs
aaa
push
mov
aam
hlt
mov
inc
pushf
ret
cld
gs
push
push
inc
sahf
call
and
nop
ss
push
push
inc
mov
arpl
pusha
mov
pop
repnz
ins
cmp
sub
cmps
mov
pop
mov
add
xor
call
jp
es
loopne
cli
aad
inc
add
sahf
sub
clc
add
mov
loop
push
test
test
jg
jnp
jg
aad
xchg
push
xor
lds
lea
lods
(bad)
xor
not
pop
add
mov
pop
inc
sub
clc
fs
pop
push
push
ja
pop
xchg
(bad)
cmp
inc
mov
iret
out
mov
arpl
mov
js
jle
sbb
test
out
jno
out
cdq
lahf
jl
xlat
pushf
lea
add
pusha
(bad)
mov
dec
sub
add
sbb
inc
push
ins
xor
or
adc
fcomp
sbb
(bad)
sbb
sbb
rcl
out
sbb
call
adc
sti
inc
mov
repnz
retf
mov
xor
loopne
movs
out
enter
call
repz
inc
mov
out
mov
fucomp
add
sbb
(bad)
jb
xor
sbb
and
sti
cmc
(bad)
jmp
push
in
fdiv
mov
push
mov
pop
pop
div
jnp
sub
add
int
sub
or
fs
ins
cmp
out
ret
sbb
inc
(bad)
mov
push
iret
push
dec
enter
call
adc
jne
(bad)
push
push
lea
int3
cmp
mov
outs
pop
(bad)
in
and
rcl
out
pop
xchg
sub
inc
push
inc
jo
xlat
sbb
and
das
sub
cmp
mov
add
retf
ror
shl
movs
mov
and
push
push
xchg
push
push
xchg
(bad)
loop
in
retf
fs
mov
xor
mov
mov
or
sbb
mov
cmp
scas
hlt
mov
pusha
push
xor
js
push
pop
ret
imul
and
shr
das
pop
and
mov
mov
cld
out
dec
pop
xor
xchg
mov
ja
pop
pop
popf
push
out
inc
inc
dec
xchg
loop
ins
in
push
popa
inc
adc
jns
dec
jnp
popa
out
xchg
jne
adc
arpl
mov
pop
retf
pop
mov
rol
cwde
xor
fnsave
sahf
and
or
or
(bad)
sbb
inc
push
js
jne
or
or
aas
jl
dec
push
dec
mov
mov
xor
imul
mov
movs
dec
in
inc
xchg
or
inc
push
cmp
jmp
shl
push
add
cmps
in
idiv
cmp
cmp
adc
jl
and
addr16
mov
xchg
movs
cs
add
dec
push
mov
sbb
scas
(bad)
fcomp
iret
lahf
test
sbb
push
fld
pop
mov
(bad)
aad
scas
pop
xor
push
jle
or
scas
repz
fimul
and
xchg
in
mov
or
inc
lods
dec
pop
ret
ins
push
pusha
xchg
push
lea
hlt
cmps
and
mov
sub
shl
cli
cmps
xchg
ficom
pop
pop
inc
cmps
cdq
test
imul
aas
cmp
pusha
loope
and
daa
in
mov
push
(bad)
(bad)
cmp
int
xor
or
outs
mov
adc
adc
add
add
call
jl
jo
add
ss
loopne
xchg
mov
and
cli
fidiv
sbb
inc
movs
js
popa
mov
ror
mov
jb
sbb
stc
jne
fstp
ja
add
cmp
add
cmp
js
hlt
hlt
mov
stc
and
arpl
iret
push
shr
sub
dec
dec
repnz
sbb
push
pop
add
out
xchg
and
test
out
retf
mov
xor
xor
push
out
test
mov
adc
xchg
xor
xor
pop
adc
dec
push
(bad)
ins
xchg
and
mov
push
icebp
ss
popa
add
pop
cld
call
add
xchg
adc
mov
bound
adc
push
mov
fwait
test
pop
icebp
leave
inc
jb
stc
ret
int3
jne
xor
retf
cmp
mov
xchg
in
sti
add
jl
cli
test
pop
ror
mov
xor
cmps
sahf
bound
pop
out
cmps
addr16
or
or
lds
or
repnz
nop
call
inc
fldcw
dec
out
aad
inc
mov
retf
sbb
std
js
mov
cld
and
(bad)
sti
push
pop
dec
mov
sbb
int3
cmp
mov
test
mov
pop
sahf
mov
jno
push
loope
outs
xor
xor
cld
rcr
fs
jb
xor
(bad)
pop
nop
xchg
jmp
test
cmp
mov
mov
movs
add
and
xchg
pop
adc
cdq
mov
movs
idiv
test
lahf
adc
jecxz
push
call
add
movs
xor
outs
mov
fucomip
or
icebp
pop
mov
int
ret
nop
ins
pop
pop
xchg
mov
mov
ret
jb
jb
test
jl
sub
mov
shr
fwait
jae
scas
pop
inc
dec
inc
imul
scas
mov
stos
test
cmp
mov
jae
dec
aas
dec
rep
push
fs
mov
jecxz
cdq
(bad)
std
(bad)
mov
(bad)
movs
imul
ret
fimul
xor
xchg
mov
sti
xlat
fdivr
fisttp
or
mov
inc
sub
push
div
mov
jbe
ds
leave
pop
or
(bad)
fcmovnbe
iret
add
mov
inc
sbb
js
pushf
popa
lock
ds
out
sub
idiv
inc
jns
xor
dec
jbe
xor
pushf
cs
ss
xlat
xchg
test
cs
(bad)
scas
loopne
stos
hlt
icebp
ja
out
es
repnz
retf
jne
xor
ins
nop
xlat
push
lahf
push
jg
ja
push
std
sub
test
pop
xor
mov
jmp
push
outs
mov
pop
(bad)
adc
xor
mov
and
(bad)
aas
fst
sub
test
or
and
cdq
(bad)
ror
ins
call
adc
add
call
mov
jle
outs
je
ror
or
sub
js
sub
push
dec
pop
fs
dec
mov
scas
push
pop
lods
call
dec
fwait
xor
sbb
ret
jp
int3
repz
cmp
imul
stos
add
bound
mul
scas
mov
pushf
cmp
pop
xor
ja
push
jae
adc
xchg
xor
aam
fisttp
fdiv
dec
cmp
dec
sub
jno
jbe
sub
xchg
or
adc
mov
scas
sbb
cmp
pop
dec
dec
cmp
rcl
cs
push
push
or
jecxz
arpl
popa
cwde
shl
xchg
xchg
call
enter
scas
test
sbb
fidivr
push
lar
sti
push
imul
cdq
das
add
jbe
xchg
push
add
int
jmp
mov
dec
out
mov
test
ffree
les
adc
std
pop
ret
add
push
in
push
push
imul
(bad)
fs
push
sar
or
and
xchg
jecxz
repnz
ss
out
mov
cld
out
push
ins
neg
ret
inc
pop
in
jb
sbb
outs
dec
cmp
dec
sar
loope
lods
dec
jo
dec
sub
scas
xor
jmp
and
sub
dec
dec
pop
cmp
fs
or
inc
sub
lods
adc
sub
(bad)
push
test
jo
in
aaa
fwait
sub
cmp
imul
das
stc
cmc
dec
dec
out
stos
xor
inc
push
sub
or
sahf
loope
push
test
out
mov
cmp
pop
pushf
pop
push
test
outs
std
test
aaa
jae
dec
sub
out
push
xchg
adc
xchg
outs
cwde
lea
cmp
les
imul
adc
adc
jmp
adc
add
sub
inc
push
sti
cmp
fistp
adc
ins
inc
dec
mov
(bad)
rol
mov
and
or
test
xchg
mov
imul
mov
arpl
push
adc
ret
call
(bad)
mov
push
push
loope
push
(bad)
mov
loop
and
pop
mov
nop
dec
push
sar
adc
mov
pop
mov
pop
rcl
dec
loope
out
push
out
es
outs
mov
in
cmp
repnz
xor
push
mov
aaa
pop
ds
mov
mov
les
sbb
mov
or
packsswb
sub
jne
mul
dec
scas
inc
dec
mov
pop
iret
or
clc
in
ins
sbb
popf
pop
repnz
add
push
jns
call
push
sub
jmp
push
ror
out
jns
mov
push
add
es
scas
outs
pop
into
mov
pop
xchg
mov
inc
jecxz
retf
je
and
stos
xor
imul
push
shr
sub
popf
lock
stos
fnstenv
(bad)
shl
daa
or
and
inc
data16
arpl
sti
xchg
shl
(bad)
jg
out
(bad)
sbb
jecxz
and
push
and
mov
sbb
call
fadd
loope
xor
ja
outs
inc
loop
dec
pop
push
into
scas
in
push
pop
jge
push
in
fimul
repnz
arpl
xor
inc
imul
ficom
mov
loop
ins
push
test
or
daa
aas
pop
sar
imul
cmp
iret
cmp
loope
cdq
addr16
dec
int3
out
sahf
sub
adc
cmovle
call
scas
out
int
mov
dec
xchg
popf
fs
add
out
push
push
sbb
pop
mov
fiadd
aam
sub
sub
(bad)
and
adc
and
add
jno
cmp
pop
and
sbb
daa
dec
sub
fs
mov
lea
(bad)
ins
ja
loope
cwde
jl
push
push
aad
in
je
jnp
adc
movs
out
jne
pop
in
fld
mov
pop
fisub
arpl
lea
jmp
mov
sub
sbb
mov
ret
pop
push
scas
jbe
dec
mov
int
fcomip
push
sub
adc
sar
jmp
add
daa
inc
retf
xor
aad
aad
in
sti
loopne
mov
lods
mov
and
out
adc
pop
sbb
shr
in
inc
mov
out
jae
lds
cli
test
std
(bad)
retf
mov
xchg
sbb
jns
xchg
xor
jne
jo
xor
clc
repnz
pop
push
cli
jmp
xor
fisub
ss
xor
arpl
into
or
call
mov
xchg
or
nop
fld
xor
rsqrtps
sub
or
fiadd
scas
mov
xor
(bad)
call
mov
out
outs
loopne
and
xchg
inc
cmp
cld
jne
mov
add
inc
inc
mov
cmps
and
ret
test
test
lock
fstp
mov
fbld
out
test
cmp
sub
xchg
xchg
mov
sbb
lds
fcmovbe
xor
mov
ins
pushf
push
pushf
pusha
jge
push
popf
aad
or
(bad)
mov
es
mov
mov
icebp
scas
inc
cmp
loopne
fldl2e
stc
xchg
lods
retf
(bad)
jne
xchg
and
ja
adc
inc
rol
jo
test
xchg
dec
xchg
mov
sub
jno
push
dec
(bad)
jnp
fnstenv
cmp
sti
rcr
jmp
pop
dec
jl
push
adc
clc
push
rcl
ficom
or
xchg
and
push
jg
push
xchg
push
outs
push
imul
sbb
mov
and
xchg
push
out
add
fs
mov
les
jl
pop
dec
inc
scas
mov
repnz
call
pop
adc
cmp
rol
adc
xchg
push
les
jns
sti
push
xchg
pop
outs
je
stc
jbe
movs
retf
or
iret
(bad)
cmp
mov
retf
pop
in
leave
push
mov
mov
add
pop
jo
test
icebp
push
in
popf
pop
or
(bad)
fld
and
cmp
push
scas
sbb
imul
int
add
push
mov
dec
stc
dec
cmp
les
fwait
mov
popf
ins
cli
push
pushf
sub
add
shl
rcl
stos
(bad)
shl
sbb
mov
iret
in
(bad)
idiv
aam
out
mov
rol
jl
rol
sbb
stos
add
pop
enter
add
jp
add
in
sbb
xchg
(bad)
add
inc
out
std
push
pop
test
dec
les
ficom
gs
jb
in
daa
xchg
test
mov
das
mov
mov
mov
mov
mov
mov
xchg
dec
mov
add
les
xchg
inc
push
sub
dec
(bad)
jecxz
aas
pop
scas
in
fstp
push
inc
retf
in
push
mov
mov
and
fwait
clc
std
cmps
(bad)
mov
adc
push
xlat
nop
fsubr
xchg
jns
dec
and
(bad)
in
mov
scas
push
int3
jmp
jmp
push
(bad)
fcomp
jnp
repz
in
pop
or
mov
ins
js
jmp
pop
cmc
pop
ja
retf
inc
test
loop
push
jae
test
cmp
scas
xchg
push
outs
push
(bad)
mov
push
cwde
dec
cdq
mov
inc
jb
popf
inc
jo
pop
mov
scas
sahf
mov
repnz
add
ss
pop
dec
call
sahf
push
push
push
pop
jecxz
std
jp
pop
jmp
cwde
jno
mov
fidivr
test
loop
loopne
ja
repnz
inc
loopne
adc
in
loopne
lods
cdq
enter
mov
(bad)
aas
ins
adc
mov
add
mov
sub
mov
and
sbb
push
je
ja
pusha
fwait
sub
outs
sub
(bad)
shr
xor
lods
sub
xor
add
in
jl
outs
rcl
mov
mov
rcl
xchg
fidiv
cwde
aam
inc
mov
scas
pop
adc
(bad)
imul
out
jno
sbb
pushf
popa
std
mov
cmps
ss
out
lods
dec
nop
jecxz
lock
adc
pop
out
mov
xor
repz
icebp
adc
les
into
or
fs
fdivr
and
push
mov
(bad)
imul
mov
(bad)
mov
sbb
nop
jle
xor
call
and
outs
add
inc
sti
cs
or
and
rcl
push
xchg
sbb
xor
cmp
adc
cmp
or
push
add
jae
inc
int
ficomp
xlat
in
(bad)
rcl
push
jnp
xchg
arpl
test
cs
ins
xlat
add
pusha
mov
out
out
in
xor
ins
mov
ins
mov
out
pop
pop
push
jb
pop
sub
fcomi
sahf
in
xor
mov
xor
ret
lods
clc
ins
popa
mov
cmc
and
mov
call
daa
and
pop
fsub
pop
outs
jmp
jae
stc
imul
xchg
arpl
adc
mov
adc
rcl
cld
(bad)
daa
sub
into
lea
lea
mov
push
push
outs
mov
push
cmp
lds
jle
sbb
sub
sbb
sbb
inc
push
cmp
inc
out
(bad)
dec
jbe
pop
shr
fnstenv
inc
xchg
xor
mul
push
mul
add
out
jmp
adc
retf
xor
jp
fcmovu
mov
(bad)
push
xchg
test
jmp
xchg
fild
out
push
lea
pushf
dec
shl
(bad)
mov
mov
push
addr16
nop
mov
sub
ja
xor
inc
jne
cmps
outs
out
mov
mov
push
sub
stos
inc
pop
outs
repz
rol
and
jge
jo
mov
or
add
mov
pop
imul
aaa
xchg
hlt
sbb
inc
push
pop
cmp
test
mov
popf
cli
pop
xor
cmp
mov
adc
mov
stos
jl
xor
(bad)
xor
add
mov
jbe
cwde
or
mov
test
sub
mov
mov
fistp
mov
shl
test
and
cmp
mov
and
jns
xor
mov
in
iret
repz
xchg
and
neg
mov
lods
retf
add
xchg
inc
cmp
pop
pop
mov
daa
cmp
comiss
mov
pop
gs
stc
in
and
sbb
adc
mov
pop
or
sahf
sahf
xor
cmps
jmp
dec
repz
mov
fidivr
pop
stos
fadd
pop
in
adc
dec
dec
out
pop
xor
retf
push
shl
lea
adc
pop
adc
fidivr
jmp
lods
adc
test
sbb
or
hlt
retf
stc
jle
adc
push
xchg
retf
mov
jmp
sub
test
jo
les
mov
ins
or
cmps
sbb
test
push
fwait
and
retf
jbe
pusha
lds
and
inc
sub
(bad)
imul
mov
and
(bad)
sub
loope
clc
inc
push
into
pop
out
or
cdq
dec
arpl
pop
clc
or
mov
rcr
das
out
mov
push
mov
jmp
adc
shl
mov
repz
dec
xchg
aaa
stc
inc
adc
mov
test
ss
push
jg
into
outs
cs
retf
stc
mov
shl
inc
test
cmp
jnp
test
inc
mov
sub
inc
sbb
jae
stos
ret
mov
sbb
pusha
xchg
jne
loope
data16
lods
bound
push
in
jo
push
push
movs
ss
add
jg
fist
stos
jns
add
gs
sti
xchg
imul
stc
jmp
sbb
push
stos
pop
sbb
xchg
mul
leave
jl
in
dec
xchg
loop
retf
xchg
mov
sbb
shr
cmp
pop
loopne
sub
mov
sub
dec
sti
mul
enter
retf
ins
addr16
cld
add
scas
add
sbb
(bad)
icebp
aaa
adc
pop
pop
fisttp
push
loope
push
mov
rcl
xchg
aas
leave
inc
pop
jmp
or
in
jecxz
loope
nop
inc
and
rcl
lods
je
mov
mov
mov
inc
inc
cmp
xchg
mov
mov
aaa
es
adc
iret
mov
sbb
mov
shr
push
dec
jb
aas
movs
mov
inc
pop
jb
xchg
test
cmp
jbe
add
pop
les
dec
xchg
rcl
xor
movs
(bad)
in
ss
(bad)
imul
ins
xchg
icebp
icebp
outs
xchg
sar
repz
xchg
xchg
je
jl
xchg
call
(bad)
hlt
adc
adc
mov
rol
inc
adc
rol
mov
daa
ret
js
out
pop
dec
fimul
in
(bad)
loopne
xchg
(bad)
jb
lds
in
pop
int
jmp
cmp
or
enter
push
gs
cmps
(bad)
stc
mov
in
int3
xchg
and
sub
push
(bad)
lds
mov
mov
hlt
test
mov
sub
ss
or
adc
pop
adc
stc
mov
shl
inc
pop
push
fmul
outs
ret
inc
hlt
push
mov
out
sbb
iret
mov
inc
cs
jo
test
daa
(bad)
out
shl
aas
in
jmp
rol
test
test
(bad)
hlt
pop
or
mov
mov
jnp
xor
mov
fucomip
pop
arpl
mov
inc
push
sbb
adc
movs
push
jge
les
inc
mov
jns
adc
mov
cmp
out
xchg
xlat
and
(bad)
mov
mov
inc
sbb
je
aad
mov
mov
shrd
loop
lods
pushf
test
fyl2xp1
inc
loopne
xor
stos
test
inc
xor
or
stos
mov
clc
push
xchg
pop
and
fidiv
add
jecxz
mov
jmp
clc
and
sbb
sub
xchg
ss
mov
dec
sub
pop
xchg
iret
outs
mov
or
mov
jb
(bad)
bnd
les
mov
je
lods
mov
fisubr
dec
jnp
test
hlt
pop
inc
pop
call
cli
stos
inc
ror
imul
pop
in
call
in
imul
retf
fst
popf
pop
cmp
movs
mov
pop
out
xchg
js
push
xchg
jg
add
mov
ss
iret
enter
scas
leave
lahf
xor
inc
pusha
fnstenv
stos
iret
clc
sahf
xchg
sub
loop
nop
xlat
xor
movs
dec
(bad)
mov
cmovns
aas
xor
icebp
mov
dec
(bad)
movs
call
jnp
xchg
movs
int
ror
ficomp
xchg
or
adc
mov
sub
in
bound
test
scas
je
sbb
rcr
mov
lods
adc
(bad)
cmp
fmul
push
add
loopne
gs
repnz
in
or
(bad)
cli
mov
jg
lods
stos
xchg
xchg
dec
push
cmp
pop
leave
jbe
(bad)
int
dec
and
fld
rcr
dec
xchg
push
xchg
ds
daa
fdiv
and
enter
inc
xchg
dec
in
cli
sti
pop
shr
jp
adc
jb
fild
sub
inc
xchg
add
mov
into
js
pop
shl
cmp
sbb
fmul
loope
xlat
in
mov
cdq
and
out
push
repz
mov
scas
clc
xchg
in
pop
clc
sar
mov
adc
sbb
mov
dec
outs
cmp
ficom
adc
sbb
std
psubsw
into
pop
retf
mov
rcl
inc
(bad)
or
outs
cmp
test
jnp
pop
sbb
jnp
repz
xchg
out
cwde
lahf
daa
inc
lahf
cmps
mov
aaa
pop
(bad)
loope
xchg
fcom
in
inc
jns
sub
loope
xor
dec
sub
test
mov
je
clc
movs
(bad)
jae
jb
inc
pop
fbld
outs
js
imul
jmp
adc
add
daa
fistp
rcr
jmp
jle
jmp
in
cmps
add
pop
ror
sbb
dec
data16
loope
sbb
stos
into
add
test
jp
mov
dec
ds
dec
mov
push
jecxz
and
call
xor
nop
adc
shl
and
(bad)
in
cmp
loope
pop
pop
gs
and
and
or
and
sbb
inc
dec
jbe
mov
jl
retf
mov
dec
retf
into
or
call
sbb
xlat
mov
mov
inc
outs
jns
mov
push
jbe
cwde
or
and
push
popf
push
jl
xchg
jecxz
pop
push
cmp
loope
ja
aad
adc
mov
mov
or
jbe
dec
pop
push
inc
mov
xor
adc
mov
movs
js
pusha
mov
call
jb
(bad)
into
inc
jmp
mov
and
hlt
xor
(bad)
xor
inc
xchg
stc
push
fs
lods
push
or
add
pop
js
neg
cmc
push
adc
sbb
mov
xchg
jns
scas
lock
test
setge
jae
lea
xor
pop
mov
mov
call
mov
pop
and
cmp
and
add
sbb
or
(bad)
pop
fcomip
xchg
inc
test
fs
sbb
aam
sub
add
pop
rcl
jg
inc
ins
(bad)
in
arpl
push
dec
cs
retf
xlat
sub
icebp
movs
lea
addr16
shl
in
push
xchg
out
jl
jne
dec
add
ins
push
xchg
xchg
push
sub
push
jae
mov
xchg
push
jno
mov
stos
mov
sub
outs
xchg
dec
call
jecxz
dec
into
sbb
fwait
arpl
xchg
push
push
ins
sub
(bad)
push
mov
cmp
jp
ret
sti
std
es
mov
push
stos
into
arpl
mov
xor
out
ins
rol
jmp
mov
lea
inc
mov
stc
push
mov
(bad)
xor
sub
rol
out
js
sbb
mov
mov
mov
dec
(bad)
gs
fcomp
scas
push
xchg
and
bound
push
cmp
mov
daa
in
aas
es
mov
sbb
(bad)
mov
mov
fild
clc
push
xor
pop
loop
dec
(bad)
sub
inc
pop
neg
shl
mov
mov
sub
xchg
jbe
cmp
mov
and
loop
retf
(bad)
std
jnp
(bad)
xlat
jmp
pop
outs
(bad)
mov
inc
pop
push
iret
test
js
jmp
das
ret
loop
pop
in
leave
adc
(bad)
in
sar
push
(bad)
xor
inc
mov
movs
jb
dec
xor
enter
lock
sub
cdq
lahf
inc
pop
dec
out
sahf
arpl
dec
es
jae
cmp
mov
arpl
call
pop
sub
push
in
inc
cmp
push
sbb
jge
inc
mov
stos
scas
mov
xchg
jmp
push
(bad)
stos
mov
inc
mov
out
push
in
loopne
imul
mov
sbb
pop
xchg
stos
dec
cli
popa
outs
aad
cld
push
push
shl
mov
pop
xor
loope
daa
fsubr
dec
sub
sub
adc
(bad)
mov
aas
movs
fwait
dec
mov
push
jg
add
into
mov
push
outs
dec
(bad)
faddp
inc
in
sahf
adc
xor
cmp
xor
sbb
xchg
jnp
je
js
push
mov
ins
test
std
inc
lods
(bad)
fucomip
(bad)
lods
jb
inc
adc
mov
mov
xor
loopne
imul
jne
fcomp
push
dec
(bad)
mov
or
test
mov
lods
or
stos
cwde
sbb
mov
cmps
pop
inc
data16
fwait
pop
dec
push
enter
in
or
pop
pop
into
fdivr
sub
lods
test
(bad)
push
mov
xor
pop
jns
enter
std
xchg
jmp
add
pop
cmps
(bad)
inc
pusha
(bad)
out
xchg
sub
adc
pop
retf
pop
push
push
mov
ins
pop
rol
loopne
cmp
mov
sahf
shr
repnz
cmp
pusha
ds
jge
out
ret
xlat
mov
push
xor
inc
jecxz
xchg
mov
pusha
adc
sub
cmp
mov
ror
add
scas
aaa
(bad)
imul
dec
sub
std
fs
pushf
int3
popa
loop
lds
push
jl
mov
xor
pop
scas
xchg
jns
adc
push
popa
add
mov
jmp
pop
aas
leave
pop
and
bound
(bad)
rol
fs
sbb
push
pop
mov
int3
and
icebp
pop
lds
loop
add
xchg
imul
jge
ret
retf
pop
cmp
or
xchg
scas
and
sub
push
fwait
xchg
fs
mov
mov
add
js
inc
stc
call
push
repnz
pop
aaa
hlt
jmp
imul
fdiv
in
xor
aam
mov
int
in
inc
lods
rol
js
retf
add
dec
(bad)
popa
mov
push
sub
or
inc
rcr
gs
cmc
or
cmp
clc
in
ja
jb
lock
shl
cmp
fdivr
add
xor
push
xchg
pop
pop
xchg
and
push
mov
or
xor
sti
sbb
sub
xor
mov
dec
or
(bad)
outs
and
daa
into
(bad)
in
sub
push
xor
xchg
ror
or
xor
in
inc
jo
or
dec
aad
pop
es
test
out
popf
mov
adc
or
retf
cmp
repnz
mov
std
mov
outs
ins
mov
clc
out
lock
xchg
inc
pop
out
adc
add
sbb
data16
dec
in
jge
pushf
and
rcl
bnd
enter
sub
call
jge
or
lods
jbe
xchg
loop
push
inc
pop
inc
arpl
push
(bad)
call
lds
repz
xchg
jnp
pop
das
syscall
(bad)
xchg
mov
sub
sar
(bad)
mov
dec
and
ror
pop
push
or
in
ficomp
icebp
mov
jno
and
mov
xchg
ss
(bad)
or
enter
push
jge
jle
push
push
loop
arpl
xchg
or
shl
jle
fmul
jecxz
mov
ja
jmp
call
dec
mov
push
int3
cmp
pop
sbb
add
dec
pop
push
cmp
repz
mov
mov
aas
loopne
ins
jg
arpl
clc
pop
test
add
shl
test
adc
or
mov
scas
jo
dec
sbb
adc
xchg
push
xchg
lahf
shl
pusha
mov
xchg
inc
popa
push
mov
in
jne
sbb
inc
sbb
xlat
sub
dec
adc
div
push
cli
(bad)
jp
push
iret
call
push
mov
int
and
test
mov
dec
dec
mov
mov
sub
and
and
pushf
cmc
shl
push
fisubr
xchg
ds
(bad)
sahf
jp
in
dec
cmp
xlat
or
cli
pop
xor
xor
sbb
cli
ins
adc
push
ja
dec
je
push
int
inc
mov
les
or
sub
sbb
retf
jge
push
cdq
icebp
(bad)
shl
xor
mov
cli
leave
sbb
xor
adc
sbb
adc
dec
mov
cld
sti
bound
mov
push
dec
movs
(bad)
mov
inc
outs
idiv
out
add
cmp
rol
sub
(bad)
movs
repnz
and
dec
dec
xchg
inc
or
push
push
fxch
inc
int3
call
mov
sbb
pop
pushf
iret
push
popa
jecxz
adc
shr
mov
lods
or
cmps
mov
push
add
xchg
(bad)
and
add
mov
leave
adc
stc
pushf
sbb
xchg
inc
push
jmp
movs
popf
call
xor
mov
pusha
dec
xchg
mov
test
rcl
push
cmp
aaa
popf
pusha
xor
jne
sbb
and
int
sbb
not
pop
aas
jbe
arpl
dec
lahf
add
inc
mov
pop
or
mov
test
xchg
pop
or
in
dec
push
(bad)
pop
iret
adc
in
inc
into
jecxz
xchg
mov
inc
xchg
xchg
mov
jecxz
dec
sbb
imul
ins
mov
pop
outs
pop
sub
jmp
mov
lahf
loope
jmp
fisub
leave
out
lea
call
lahf
scas
xchg
dec
jae
(bad)
xchg
mov
test
pop
(bad)
icebp
cmp
sbb
jae
cmp
sbb
push
fwait
mov
sub
ss
out
xchg
jns
cld
fisttp
pop
pop
out
mov
mov
or
sbb
mov
sbb
mov
ret
(bad)
shl
mov
pop
xor
loop
aad
shl
mov
cmp
aaa
lahf
sub
and
dec
ror
push
add
icebp
call
leave
lock
fadd
mov
lahf
stos
mov
xchg
das
push
int3
mov
push
sbb
xor
cli
mov
or
adc
inc
cmp
pusha
pop
mov
mov
push
push
mov
movs
scas
leave
mov
adc
fdiv
or
mov
xlat
sub
ja
es
cli
pop
mov
out
aad
xor
cmc
das
push
push
int
sub
enter
push
adc
out
das
call
sub
mov
pop
test
cmps
mov
dec
mov
or
pop
mov
pop
sub
or
and
fcmovnb
push
loop
popf
adc
ja
fmul
inc
popa
pop
shl
aad
cdq
out
sbb
pop
sub
shr
retf
fwait
sahf
push
and
jns
or
std
xchg
mov
mov
mov
sbb
lock
or
sti
xchg
pop
cmp
rol
sub
rol
movs
jecxz
add
stos
pop
dec
adc
(bad)
ror
dec
xchg
mov
xchg
sub
sub
fisttp
or
and
pushf
push
sub
(bad)
fisttp
lods
or
ins
dec
xor
popf
push
lahf
adc
dec
das
xchg
jecxz
(bad)
xor
xlat
fist
dec
sub
xor
aad
mov
ja
xchg
push
add
xor
jbe
ss
fist
mov
jmp
cli
jl
cli
ja
adc
sub
mov
mov
(bad)
in
mov
mov
retf
dec
add
or
nop
sar
iret
iret
lds
push
ret
out
and
imul
leave
bt
sbb
adc
adc
sbb
sub
fdivr
or
sbb
xchg
call
mov
push
cdq
mov
push
mov
inc
jmp
movs
mov
dec
add
outs
or
shl
sahf
cmps
cmp
push
ds
mov
jp
cli
xchg
cmp
shl
ret
mov
rcr
outs
imul
push
fbld
sete
fs
mov
bound
test
xor
inc
dec
fild
cmp
lock
fistp
add
adc
cmp
ins
fisubr
xor
jg
inc
pop
and
outs
mov
jl
mov
xchg
and
lea
pop
jl
in
add
sub
icebp
outs
retf
mov
adc
jo
pusha
pop
daa
mov
fild
dec
mov
addr16
xor
call
cmp
mov
loopne
mov
aam
inc
jbe
test
mov
mov
add
ror
pop
scas
stc
pop
aad
aad
xchg
cmps
dec
jmp
retf
stos
mov
mov
cmps
dec
imul
pop
xor
inc
out
add
jmp
xchg
add
shr
cs
add
mov
xchg
fidiv
xor
(bad)
loop
inc
pop
jns
jecxz
mov
push
dec
icebp
loopne
jge
lea
adc
sub
daa
jae
sub
adc
dec
push
fistp
data16
or
std
inc
hlt
test
push
mov
(bad)
cli
shl
push
leave
add
call
retf
jg
bound
(bad)
(bad)
out
sbb
sub
push
arpl
es
nop
movs
adc
push
inc
push
test
aas
movs
test
inc
test
icebp
pop
inc
mov
lds
mov
pop
mov
push
sbb
jmp
inc
inc
mov
movs
sbb
fidivr
xchg
mov
movs
mov
lods
xor
and
test
mov
and
dec
mov
and
imul
arpl
sub
and
and
mov
cmp
mov
into
fmul
and
xchg
sbb
push
push
data16
jb
es
add
jne
addr16
in
jmp
and
push
sbb
les
push
das
data16
push
or
add
and
data16
jae
xor
sub
push
addr16
jp
les
aad
stos
jae
rcl
add
cmp
call
push
std
mov
sbb
fild
or
lock
and
aam
fwait
mov
inc
cmp
(bad)
and
pop
dec
in
push
outs
xchg
repz
movs
es
sbb
fcmovb
mov
cwde
daa
jmp
inc
movs
out
pop
xor
(bad)
cld
(bad)
jne
movs
mov
out
lds
push
cmp
ret
cmp
jle
shl
add
jg
jecxz
ret
pusha
xchg
xchg
scas
and
jp
pop
out
loopne
sub
adc
sbb
jae
or
lods
jp
enter
scas
jnp
inc
mov
or
inc
dec
jne
pop
cli
repnz
jmp
xor
arpl
into
jnp
test
jns
xchg
cmps
retf
dec
mov
or
addr16
sbb
and
daa
cli
xlat
cmp
pop
nop
push
daa
test
cmp
sar
in
mov
inc
stos
cmp
push
js
pop
add
sar
mov
cmp
icebp
lock
not
gs
ret
mov
enter
in
sbb
shl
adc
out
adc
add
jns
jg
add
lods
out
fdivr
mov
mov
jg
push
or
(bad)
mov
stos
dec
mov
cmp
stos
mov
arpl
outs
sbb
pop
clc
das
test
or
mov
mov
push
mov
mov
daa
icebp
outs
dec
fild
or
jg
hlt
scas
jne
adc
(bad)
push
sbb
add
cmps
repz
xchg
iret
jb
test
sbb
cmp
inc
mov
out
push
jmp
pop
dec
aas
loope
push
pop
inc
cs
fsub
das
push
cwde
mov
enter
mov
mov
retf
xchg
cmp
jae
xor
or
les
pop
cmp
xchg
mov
sub
in
dec
pop
add
into
sub
in
mov
int3
inc
cmp
fsub
xor
mov
xchg
cwde
hlt
ror
xchg
fdivr
or
mov
cmps
lods
cmps
add
jl
jmp
mov
movs
push
jnp
rol
jbe
inc
pop
popf
shl
adc
jl
jno
mov
popa
lods
adc
xor
cmp
push
cmc
inc
mov
pushf
shl
push
or
enter
sahf
in
js
cli
sar
call
cmp
outs
test
jno
popf
xchg
xor
pop
or
sahf
cmp
enter
popa
and
xchg
or
adc
add
bound
sbb
sbb
mov
lds
mov
dec
mov
xor
retf
cwde
mov
sahf
and
cmc
pushf
(bad)
mov
enter
cmp
mov
cmp
xchg
xchg
mov
ror
jb
in
mov
ror
dec
xor
push
adc
jle
mov
push
cmp
je
cmp
lea
idiv
sbb
ret
add
lock
cmp
adc
js
fnsave
jmp
out
jle
jne
push
mov
cld
mov
in
mov
xor
test
xor
pusha
push
pop
arpl
sbb
dec
loopne
enter
aaa
or
imul
mov
push
lea
rcr
adc
cmp
icebp
cmp
cmp
aaa
fwait
pop
test
(bad)
hlt
mov
xor
into
out
jno
adc
pop
sub
aam
cmp
test
pusha
and
sub
sbb
clc
call
dec
xchg
into
or
mov
(bad)
fld
adc
stc
xor
mov
inc
outs
pop
cmp
jbe
xchg
dec
push
imul
js
adc
ja
adc
add
ins
mov
bound
(bad)
sti
add
jae
jecxz
daa
(bad)
cwde
jns
or
dec
sbb
dec
loop
inc
xchg
xchg
push
adc
inc
(bad)
hlt
dec
scas
mov
mov
pushf
xor
int3
mov
cld
mov
js
or
scas
push
and
mov
arpl
xchg
out
stc
fdiv
push
cmp
leave
mov
fisubr
add
jae
sub
add
fbld
push
sbb
sbb
or
mov
cld
loope
outs
dec
ja
or
xor
loope
mov
and
js
nop
imul
push
xchg
movs
ret
xor
(bad)
jne
icebp
sub
lahf
dec
sti
addr16
or
fistp
jnp
jge
pusha
test
rcr
imul
sbb
int
cs
pop
(bad)
int
outs
jb
add
and
jg
stos
into
lahf
or
js
outs
add
and
push
dec
pop
rcl
(bad)
dec
pop
pop
aas
stc
and
jmp
mov
std
(bad)
or
push
xor
mov
nop
fs
pop
push
sub
fisttp
stos
popa
ror
xchg
jl
aaa
sbb
mov
push
xor
inc
xor
cmp
retf
fs
mov
or
in
jle
les
jmp
pop
clc
outs
dec
xchg
fs
(bad)
jl
push
int
cmp
adc
add
scas
pop
push
jnp
hlt
dec
cwde
and
push
lea
test
and
outs
pop
mov
or
shr
aam
xor
xor
(bad)
cmp
push
sbb
aam
lahf
cld
cmp
add
dec
stc
and
sbb
pop
in
ja
sbb
jmp
inc
lahf
shl
imul
mov
cdq
bnd
loopne
in
xchg
popf
and
sub
add
lods
mov
dec
ins
ins
xchg
mov
sub
out
adc
jmp
bound
mov
lds
push
aad
fwait
scas
sbb
sbb
test
std
nop
cs
xchg
and
std
jl
aaa
dec
ss
das
inc
mov
data16
or
cs
and
imul
pop
mov
dec
cmp
inc
int
pop
std
(bad)
push
mov
imul
pop
loope
dec
sub
cmps
sub
popa
fdivr
leave
or
scas
jg
jmp
mov
cmp
stos
add
and
inc
mov
dec
(bad)
(bad)
sbb
lock
mov
inc
mov
jo
add
imul
inc
stos
jbe
mov
cmp
push
jg
std
lock
mov
xchg
leave
in
xor
fdiv
xchg
cmps
aad
dec
mov
sub
xchg
sbb
mov
mov
ds
sub
aam
gs
dec
push
daa
inc
lahf
stc
or
jmp
outs
cmc
fwait
lds
cmp
fistp
dec
fsubrp
xchg
adc
iret
cdq
push
mov
call
out
lods
fs
jnp
out
pop
dec
xor
aaa
sysexit
pop
iret
mov
lahf
fldenv
pop
sbb
inc
stos
pop
loop
mov
xchg
sahf
js
pop
jnp
push
dec
mov
mov
cld
js
mov
(bad)
aad
xor
jae
push
mov
in
mov
sub
sub
jge
add
outs
aam
les
sbb
test
mov
mov
mov
iret
sbb
mov
scas
xor
test
fld
out
(bad)
rcl
imul
les
ret
inc
lock
mov
pop
jecxz
loope
push
call
jno
xchg
xor
dec
add
push
mov
addr16
shl
pop
and
outs
inc
das
lods
adc
mov
out
(bad)
fidiv
lahf
in
mov
imul
dec
sub
pop
xor
mov
(bad)
cli
mov
push
inc
sub
and
pop
mov
add
into
sub
repz
jg
iret
mov
dec
scas
jmp
out
popf
xchg
mov
cdq
mov
stos
int3
sbb
jno
int3
pop
loopne
sbb
add
jg
loop
(bad)
fcomp
push
dec
cmp
cmc
xchg
adc
rol
add
fisub
pop
bound
xor
fsub
inc
nop
push
or
cmc
xchg
out
loop
ins
cmp
adc
ins
xchg
jbe
pop
shr
mov
push
cmp
add
ins
fwait
imul
mov
cmc
lahf
into
dec
adc
out
push
(bad)
sti
loop
mov
lods
pop
xchg
mov
popf
xor
cmp
push
mov
dec
pop
cdq
out
sbb
and
cmp
ret
movs
mov
fwait
jle
scas
retf
data16
push
or
xchg
nop
lea
xchg
loopne
mov
xchg
inc
shr
push
push
pushf
and
data16
dec
(bad)
mov
add
js
xchg
out
jae
push
cld
gs
adc
les
or
dec
nop
sub
mov
mov
push
leave
add
mov
int3
and
xor
sbb
sub
dec
shr
cmp
retf
lock
jecxz
popa
add
jl
cmc
or
out
xchg
pop
pop
loopne
ins
fs
add
mov
lods
les
cmp
sti
lahf
das
call
mov
aam
addr16
mov
shr
clc
push
aas
mov
fwait
push
pushf
sar
stos
pop
int
inc
test
jmp
add
jbe
out
mov
(bad)
mul
pop
clc
lods
inc
adc
int3
dec
jns
jo
loopne
jmp
ins
adc
mov
retf
pop
out
test
mov
ror
enter
lea
lds
xchg
inc
call
pop
cld
std
mov
scas
scas
in
or
jge
fs
(bad)
movs
neg
(bad)
cmp
jecxz
jno
lea
mov
mul
aam
add
and
xor
inc
es
loope
test
push
xor
out
jmp
loop
push
sti
dec
pop
pop
cmp
inc
push
repz
cmps
or
or
inc
ins
lds
cmp
sbb
or
or
and
inc
jae
adc
jb
repnz
cmp
les
adc
jae
(bad)
loopne
inc
outs
out
int
sub
sahf
pop
mov
jb
in
add
jg
cdq
jl
jg
add
clc
mov
xchg
aaa
out
call
xchg
cwde
out
cs
(bad)
call
push
aad
(bad)
mov
sub
sbb
lds
pop
addr16
fucom
and
pop
stos
pop
lds
gs
sbb
add
or
aam
xchg
js
pop
fst
fstp
fnstcw
rcl
shl
shl
push
push
scas
mov
mov
(bad)
repnz
cmp
xchg
jle
clc
jo
jns
cwde
sub
(bad)
lods
add
push
je
sub
xchg
jmp
scas
(bad)
adc
mov
mov
stos
dec
fs
aas
imul
jl
jmp
xchg
shl
xchg
mov
in
mov
xchg
cmp
or
xchg
xchg
jle
jmp
push
jnp
jo
es
mov
cdq
loopne
add
pop
outs
mov
and
test
push
sub
pop
iret
mov
in
xor
ja
mov
repz
sub
leave
int
in
imul
dec
sbb
das
dec
jle
mov
sahf
rcr
sar
cmp
mov
sbb
cmp
push
shr
cmps
arpl
xor
aas
ja
retf
sbb
push
stos
loopne
call
cmp
mov
icebp
sbb
std
add
jmp
test
sub
adc
and
xchg
shl
push
sub
rcr
test
ja
cs
pop
rol
push
push
xchg
sbb
std
or
add
bound
neg
cmps
cld
or
push
or
jmp
adc
pop
push
sahf
push
lahf
dec
fstp
das
adc
push
js
sbb
jecxz
cmp
(bad)
ds
xchg
pop
dec
inc
pusha
cmp
xchg
ja
sbb
pop
ficomp
outs
push
(bad)
int
outs
mov
sbb
inc
mov
xor
pop
pop
sub
cdq
push
jecxz
cmps
mov
xor
inc
rol
inc
cdq
adc
or
(bad)
repz
jl
hlt
idiv
xor
in
mov
mov
xor
cwde
push
ret
test
inc
mov
fisub
jae
add
rcr
stos
jg
and
jne
daa
popf
outs
je
fisub
das
adc
and
push
mov
xchg
nop
daa
popf
sub
outs
pop
jne
xchg
fldcw
cmp
and
cld
pop
mov
setb
adc
in
sub
inc
ds
lock
fisubr
(bad)
sub
jmp
cwde
sbb
xor
add
or
ins
call
push
js
pop
fadd
sub
or
in
mov
push
ret
cmp
sub
cmp
mov
mov
push
addr16
(bad)
lods
push
and
xor
mov
scas
test
adc
aas
leave
and
or
iret
es
add
fwait
and
inc
jmp
jne
ror
mov
xchg
dec
sar
scas
dec
push
xchg
cmc
cs
adc
jg
xor
mov
cmp
ficomp
sbb
jg
dec
mov
daa
movs
xchg
mov
inc
lds
mov
xchg
push
test
mov
lods
stos
dec
es
pop
or
jmp
push
sbb
lahf
mov
fsubr
movs
(bad)
pop
fldcw
(bad)
stos
push
xchg
out
int3
push
jmp
xchg
pusha
sbb
test
jmp
cmp
push
jmp
fisub
inc
rcl
stos
sub
push
jp
cmps
xor
retf
shl
inc
mov
add
mov
gs
fidiv
cmp
or
daa
aas
stos
mov
cmp
lea
ror
ja
mov
ins
pop
add
pop
sub
fisttp
jnp
(bad)
xor
mov
add
mov
mov
outs
lea
arpl
idiv
pop
pop
push
push
push
jo
add
(bad)
std
cld
or
shl
pop
xor
pop
outs
sti
dec
shl
fnstsw
xor
ins
out
xchg
retf
shl
inc
jno
ins
push
outs
fld
and
jp
daa
fdivr
mov
or
mul
jae
or
sub
loopne
pop
mov
push
arpl
push
sub
adc
into
cmp
push
bound
pop
adc
int3
and
lods
(bad)
cli
fld
movs
mov
pop
add
fild
es
fild
mov
in
sub
ds
imul
stos
test
shr
cmp
xchg
test
arpl
outs
ret
add
sar
push
loopne
in
sub
pop
ins
(bad)
dec
fwait
ror
aas
dec
(bad)
or
jmp
cmp
jl
sbb
jno
adc
fidivr
mov
jecxz
cli
cli
fsubrp
adc
inc
or
inc
xor
out
push
aas
or
dec
or
push
or
inc
sub
cdq
rcl
cdq
or
xor
mov
inc
xchg
xchg
out
(bad)
clc
sub
clc
es
mov
inc
push
inc
push
arpl
xor
push
out
inc
cdq
fdiv
loop
enter
add
adc
pop
add
dec
fucomp
ss
pusha
pop
cmp
add
fidiv
jle
add
lds
pop
dec
push
jge
or
xchg
cmp
jmp
xchg
adc
loope
cdq
call
add
ror
jmp
adc
mov
jnp
int
mov
cwde
lock
inc
mov
add
sti
mov
jne
add
mov
stos
stos
jne
clc
(bad)
rol
stos
add
mov
add
pop
xor
cmps
lods
pop
push
ds
retf
daa
sbb
stos
mov
rcl
jg
stc
mov
cld
or
bound
test
sbb
cmp
lea
sub
aas
daa
outs
out
inc
cmp
xchg
pusha
int
pop
imul
loope
in
dec
pop
pop
(bad)
sbb
cs
xor
xor
(bad)
inc
add
pop
repnz
pop
fsubr
cmps
lea
aaa
movs
pop
out
jno
jg
imul
dec
pop
cmp
fimul
sbb
fsub
push
sub
aas
ret
cmp
jle
push
push
shr
jle
inc
xor
mov
sub
cmp
lods
jno
jl
(bad)
and
push
mov
imul
ja
xchg
popf
xchg
cmp
lea
les
fs
lods
xchg
mov
adc
stos
test
xchg
and
fidivr
inc
pusha
xchg
cmp
ret
xor
xor
cmc
push
and
icebp
loopne
adc
(bad)
repnz
and
add
retf
ins
shl
jmp
lods
and
mov
lahf
ficom
jmp
jmp
and
xchg
sub
leave
mov
add
int
inc
sub
retf
pop
fdivr
adc
mov
mov
sahf
movs
pop
mov
mov
rep
xor
push
das
dec
repz
movs
scas
mov
xor
movs
push
dec
xchg
jo
nop
add
jp
stos
retf
popf
push
pop
inc
inc
mov
mov
mov
cmc
aad
add
jne
es
std
xchg
test
stc
push
sar
mov
pop
jnp
push
popf
push
daa
mov
pop
dec
lods
pop
out
sub
mov
dec
ja
mov
in
pop
xor
sbb
fidiv
sbb
fmul
mov
pop
cmp
imul
add
mov
repnz
es
iret
cmp
stc
mov
adc
adc
es
push
jne
aam
jae
mov
xor
mov
mov
and
xor
cmp
out
jne
rcr
inc
mov
mov
div
lahf
fisub
call
add
xor
popa
aam
das
dec
adc
fldenv
sub
ds
jle
lods
sahf
xchg
dec
adc
cmps
rcr
cmp
mov
or
cdq
bound
loopne
fdivr
bound
out
stos
out
cmc
jns
inc
ror
mov
mov
mov
fistp
mov
pusha
cmp
test
sub
add
aam
mov
pop
xchg
push
sbb
jecxz
stos
pushf
push
or
mov
add
jbe
fistp
mov
add
add
mov
sub
fs
inc
push
popa
fcomp
repz
push
mov
loope
in
mov
cmp
xor
mov
jp
imul
pusha
fninit
imul
cmp
and
or
jo
push
jnp
push
mov
call
add
xor
icebp
push
nop
ins
mov
mov
out
rcr
or
out
(bad)
out
xchg
cmp
mov
cmp
ficomp
js
(bad)
shl
jo
call
and
jg
cs
sbb
je
pop
dec
gs
jge
scas
inc
loopne
push
sub
mov
cmp
(bad)
mov
xchg
pop
sahf
push
iret
xor
aad
pop
(bad)
in
inc
sub
mov
mov
outs
repnz
data16
(bad)
xchg
xor
lods
fimul
out
xchg
in
sub
cmp
movs
out
cmp
xchg
mov
fcomp
sahf
mov
mov
retf
mov
jno
fmul
jmp
push
sub
xchg
jb
(bad)
push
js
mov
mov
and
aaa
outs
inc
pusha
jmp
sbb
test
dec
xor
ficom
mov
inc
pusha
pop
or
or
fnstcw
je
jmp
pushaw
xchg
jns
cmc
mov
mov
aad
jnp
fist
jl
and
loop
cmp
dec
adc
jbe
mov
in
xor
xchg
movs
xchg
pop
test
cmp
jg
fwait
fs
and
call
mov
sbb
add
(bad)
icebp
and
pop
daa
mov
dec
mov
movs
int
pop
js
xchg
xor
fcmovnbe
push
les
in
movs
in
sahf
jecxz
out
ret
cdq
js
mov
in
(bad)
ja
push
cmps
or
ret
mov
xor
das
jo
or
or
sbb
dec
inc
sub
add
fwait
mov
cdq
adc
xor
mov
out
pop
xchg
out
int
jne
and
mov
(bad)
push
push
outs
imul
frstor
fistp
outs
mov
mov
in
jg
loop
aaa
or
push
jecxz
mov
cmps
pmaxsw
inc
out
stos
daa
sbb
or
fs
call
jp
mov
sub
jnp
addr16
fld
ins
clc
adc
ror
mov
in
lea
mov
sub
loopne
call
in
xchg
xchg
aam
inc
xor
movs
or
sbb
xchg
test
loopne
(bad)
or
retf
dec
(bad)
inc
mov
jg
hlt
ffree
bound
mov
jp
push
mov
stos
pushf
aas
icebp
push
js
mov
mov
inc
mov
pop
sub
add
(bad)
fcom
mov
jmp
in
mov
hlt
stc
dec
jbe
out
idiv
iret
mov
jp
mov
test
adc
jmp
jns
sub
test
mov
into
ds
push
fdivr
cwde
adc
pop
push
ja
or
popf
dec
adc
ins
and
loope
xor
and
shl
js
push
jnp
aas
rol
mov
shl
mov
dec
rcr
sbb
mov
push
cdq
add
in
fsubr
aaa
out
push
mov
push
out
mov
cmp
sbb
inc
cwde
shr
jmp
sbb
in
mov
mov
or
push
pushf
xor
add
sbb
rcr
or
aaa
sbb
rol
mov
(bad)
dec
lock
jo
and
loope
xor
cld
jne
ror
pop
push
retf
sub
add
xchg
scas
call
inc
hlt
sub
nop
fs
push
or
adc
fwait
pop
and
rcl
xlat
mov
dec
xchg
push
xor
(bad)
jmp
stos
into
enter
fsub
or
xchg
inc
fcomip
push
leave
cmp
xor
ret
dec
sub
xchg
repz
jne
(bad)
and
jmp
rcr
neg
and
pushf
imul
ds
popf
popf
gs
test
ss
dec
or
aad
add
fneni(8087
mov
jge
jbe
and
mov
mov
push
push
adc
push
jmp
mov
mov
push
in
and
cmp
inc
pop
jb
xchg
or
mov
adc
jae
sbb
xchg
pop
mov
sbb
add
or
mov
call
gs
xchg
push
in
mov
movs
sub
xor
add
jae
mov
outs
int3
stos
mov
add
es
cwde
loopne
jns
test
sub
in
les
xor
cwde
sahf
stos
jge
addr16
pop
jl
dec
je
ins
push
lahf
rcr
call
xor
and
xor
push
pop
pop
xchg
and
inc
sar
test
data16
and
pop
sbb
idiv
mov
xlat
adc
cmc
int3
pop
push
push
cwde
dec
movs
inc
pop
outs
or
xor
leave
add
dec
pop
mov
cmps
pop
inc
fwait
inc
and
inc
cmps
loope
or
cmps
inc
or
lahf
stc
jge
fld
add
fimul
pop
add
frstor
or
nop
mov
fldcw
xlat
mov
out
push
mov
xlat
add
jle
nop
fist
push
outs
mov
dec
cmp
add
test
(bad)
aad
push
xor
rcr
mov
mov
cmp
out
iret
dec
daa
push
xor
push
adc
js
aaa
lods
out
idiv
xchg
outs
inc
outs
icebp
stc
into
cmp
pop
sbb
cmc
cmp
sub
mov
push
add
frstor
mov
jge
cmp
sahf
adc
mov
add
sbb
ss
xchg
cs
clc
push
mov
pusha
pushf
jl
inc
(bad)
in
mov
loopne
dec
adc
(bad)
sub
and
mov
push
mov
popa
js
ret
dec
adc
dec
cmp
inc
jae
or
adc
sub
mov
cmc
fld
mov
xchg
(bad)
xor
mov
div
cs
pusha
sbb
and
mov
jb
or
push
aad
pop
ds
xlat
xchg
dec
dec
sbb
sbb
push
mov
cmp
ins
dec
aaa
cmp
ja
shl
adc
js
and
push
dec
gs
ret
push
clc
mov
mov
inc
inc
push
sbb
je
es
jge
add
sbb
add
out
(bad)
(bad)
xchg
push
outs
rol
nop
mov
push
or
jns
aam
fidivr
sar
dec
jae
mov
mov
lds
xlat
xchg
mov
cmp
js
mov
nop
bound
push
mov
adc
lahf
cmp
jmp
jns
out
inc
adc
(bad)
ins
xchg
fild
dec
cli
sub
(bad)
fidivr
mov
mov
sub
pop
in
repnz
cmp
and
inc
xor
sub
adc
lock
mov
shl
retf
xor
popa
(bad)
imul
mov
ins
test
(bad)
xchg
inc
dec
xchg
push
dec
cmp
pop
ins
sar
scas
inc
nop
aas
(bad)
call
(bad)
adc
and
sbb
push
xor
ss
outs
xchg
jb
in
loope
xor
push
mov
adc
les
mov
pop
xor
inc
dec
scas
ss
sub
jne
sbb
push
xchg
outs
cmp
adc
pop
xchg
add
dec
inc
dec
popf
lds
cmp
in
or
adc
mov
pop
dec
and
xlat
push
mov
lea
mov
or
xchg
xchg
jg
fs
inc
and
sbb
in
sbb
movs
inc
adc
cs
xchg
mov
shr
cli
inc
popf
xchg
bound
jl
scas
lock
fldcw
out
iret
pop
scas
outs
ins
mov
or
pop
push
fcmovnb
pop
and
retf
dec
xchg
ins
jo
add
and
add
stos
mov
sub
or
sbb
sub
shl
addr16
in
shl
test
cld
rcl
mov
loopne
out
shl
xchg
pop
cdq
inc
(bad)
and
dec
dec
pop
add
gs
out
lahf
push
add
in
adc
mov
sub
and
dec
inc
popa
popf
pushf
popf
jns
jae
push
mov
loope
popa
fwait
xor
inc
pop
movs
mov
shl
or
push
lea
clc
test
gs
lea
gs
(bad)
cli
test
add
lea
lods
cs
mov
push
aam
nop
dec
inc
sub
lods
loop
push
push
aas
sub
fisub
enter
push
fstp
jo
add
sub
in
mov
fcomp
orps
fild
sbb
rol
sub
pop
nop
mov
clc
dec
add
push
jl
sbb
push
inc
mov
push
adc
push
dec
pop
test
mov
test
mov
(bad)
jbe
add
mov
xchg
push
pop
add
sbb
ss
ret
jp
sub
xchg
ret
pop
and
popf
out
ret
xor
inc
add
lahf
jae
xchg
or
adc
loop
dec
pop
dec
jbe
or
mov
out
pushf
push
and
dec
std
xor
mov
scas
aad
and
lea
stos
fldenv
sub
pop
mov
xor
xchg
cmp
in
fldenv
push
fsubr
retf
lds
sub
mov
sbb
xchg
xchg
lds
xchg
mov
ja
stc
aam
xchg
aam
xchg
popa
add
rcl
dec
imul
cmp
push
cmp
pop
jmp
cmp
push
xor
jmp
jb
mov
adc
out
mov
aad
mov
jbe
out
inc
gs
sbb
push
icebp
imul
addr16
mov
push
jae
push
lds
(bad)
ins
stos
dec
(bad)
int3
das
and
test
dec
ins
nop
add
movs
sbb
jecxz
in
inc
sbb
cli
jne
mov
movs
push
sbb
cli
mov
add
popa
call
jno
adc
jno
imul
jbe
pusha
lods
das
cmp
pushf
pop
lahf
jbe
inc
jecxz
into
xchg
adc
dec
adc
push
repnz
pop
pusha
aaa
arpl
jbe
push
gs
mov
or
cmp
jg
inc
out
jno
mov
inc
dec
mov
je
sbb
aad
sahf
(bad)
dec
add
push
mov
daa
imul
mov
sub
inc
out
mov
repz
push
mov
jmp
or
dec
hlt
mov
outs
adc
outs
stos
ins
push
mov
mov
ds
sbb
sub
xor
and
addr16
xor
inc
mov
mov
sbb
adc
data16
inc
mov
ja
cdq
mov
rcr
daa
or
js
lds
outs
cmp
sub
inc
imul
imul
mov
jg
(bad)
mov
jb
call
cmp
mov
(bad)
pop
data16
loope
in
pop
or
in
or
or
fs
dec
inc
(bad)
xchg
sbb
sub
xchg
push
ins
rcpps
xor
sub
sub
in
add
out
mov
mov
jecxz
jmp
scas
jl
test
movs
(bad)
scas
out
inc
call
sbb
(bad)
rol
and
pop
xchg
pushf
icebp
pop
fisubr
inc
daa
loope
into
and
xlat
ds
mov
xor
add
repnz
cli
stos
or
daa
push
mov
or
outs
and
fnstenv
add
ds
out
dec
cmps
cdq
rol
out
mov
pop
bnd
jmp
dec
inc
repz
dec
mov
dec
or
movs
sub
adc
mov
xchg
jmp
xchg
out
mov
jbe
xchg
mov
imul
xor
xchg
stos
dec
jge
jle
mov
ja
movs
into
rol
fldcw
(bad)
adc
rol
and
pop
mov
imul
pop
sbb
jo
xor
lock
dec
fstp
xor
xchg
dec
inc
mov
rol
sub
cmps
imul
push
xor
xor
movs
retf
(bad)
xchg
aas
jno
rcl
cli
or
jb
cmp
push
out
pushf
sbb
int3
rcr
rol
dec
fiadd
lock
push
jecxz
inc
out
and
push
ja
dec
leave
cs
cmp
push
js
push
sbb
repnz
push
add
mov
in
push
stc
fidiv
lods
in
dec
pop
aaa
inc
mov
mov
popf
iret
sub
leave
lds
xor
dec
mov
arpl
push
pushf
inc
dec
pop
mov
sar
(bad)
inc
jno
add
imul
pop
test
es
scas
and
or
ss
int
and
pop
ja
leave
icebp
add
dec
lock
clc
or
xchg
dec
push
mov
cmp
outs
cmp
push
(bad)
aad
add
add
lea
push
adc
sub
ret
adc
leave
cmp
adc
pop
add
pop
dec
fnstcw
add
je
adc
dec
and
cld
hlt
add
inc
jne
sub
jmp
xchg
fs
push
movs
fimul
cmp
xor
sbb
imul
mov
hlt
push
jne
dec
sub
or
es
xchg
ja
shl
cld
push
fiadd
mov
repnz
lods
xchg
sbb
pop
(bad)
inc
inc
mov
rcl
pop
push
mov
mov
xor
faddp
fs
lahf
dec
test
mov
nop
daa
jge
test
aaa
and
ficom
cmp
mov
ror
repnz
lods
push
and
sub
stos
aam
inc
ror
pop
xchg
sbb
xchg
pop
add
jmp
jmp
inc
dec
add
scas
pusha
sub
ret
repnz
xchg
std
push
lea
push
aad
fistp
std
mov
mov
and
mov
add
inc
iret
movs
loop
adc
adc
stc
popf
xor
adc
add
arpl
dec
sbb
add
push
jno
sbb
das
push
ss
out
pop
ss
test
mov
mov
scas
or
shr
xlat
ftst
push
loope
mov
pop
lods
lods
cld
pop
push
or
and
inc
mov
jo
sbb
sub
xor
out
push
rcr
sub
xchg
fs
inc
and
mov
pop
in
adc
pop
call
shl
xchg
sbb
and
inc
outs
in
pushf
stc
mov
mov
jmp
daa
cmps
lock
and
dec
mov
push
and
mov
or
fisub
into
jbe
push
fldcw
popf
test
mov
xor
ret
std
popf
ins
mov
fdiv
fs
push
neg
sub
and
out
and
sbb
sub
(bad)
fidiv
stc
out
enter
add
mov
aaa
and
xchg
xchg
and
mov
push
dec
push
repz
data16
mov
out
test
in
mov
sub
and
aaa
push
lds
inc
jmp
push
xlat
movs
mov
jmp
sub
cmp
(bad)
fiadd
mov
mov
adc
adc
fcomp
aaa
test
sbb
pop
enter
je
jmp
cmp
pop
clc
data16
sub
or
mov
enter
jnp
and
hlt
inc
outs
xchg
fist
scas
push
pop
mov
cmp
sbb
push
stc
push
inc
mov
(bad)
mov
cld
adc
(bad)
cld
hlt
mov
sbb
cld
sti
daa
inc
push
scas
or
sub
fist
shl
call
outs
adc
(bad)
inc
cmp
adc
cmp
stos
sbb
or
adc
mov
adc
mov
ror
fisub
(bad)
sar
or
lds
pop
and
fisttp
and
aaa
cmp
push
or
(bad)
pmulhw
pop
xlat
xor
xor
mov
xchg
push
sbb
test
ins
ret
cmc
sub
xchg
(bad)
ins
fdivr
into
aas
into
xchg
jnp
shr
out
or
shl
and
dec
xchg
dec
sti
push
xchg
loope
cmp
mov
scas
sar
or
adc
adc
cmp
(bad)
xor
cwde
shl
and
addr16
cli
push
call
inc
and
jle
xchg
mov
jl
fistp
adc
mov
mov
mov
leave
xor
push
stc
xor
test
in
out
mov
jo
mov
cmp
arpl
add
push
fbld
adc
jbe
(bad)
pop
xchg
mov
cli
call
rcl
movs
push
repz
xchg
lds
mov
cwde
(bad)
in
cmp
cmps
jb
fst
mov
stc
popf
idiv
and
sbb
sub
test
test
and
popa
movs
xchg
stc
mov
sbb
outs
aad
xor
clc
cmc
jmp
fs
xchg
js
mov
add
(bad)
mov
cmp
fsub
inc
(bad)
(bad)
das
push
cmp
cwde
pop
sbb
sbb
push
test
push
aaa
add
push
or
mov
test
mov
ror
jae
or
neg
xchg
les
rol
fst
scas
and
sub
xchg
fwait
dec
shr
movs
add
hlt
dec
rsqrtss
pop
or
rcl
scas
dec
jnp
mov
mov
leave
push
xchg
jnp
test
pushf
imul
test
adc
push
xchg
repnz
mov
ret
test
test
inc
mov
test
xchg
dec
daa
pushf
ins
sbb
in
push
mov
leave
sahf
jl
mov
add
sub
je
loope
lahf
in
out
into
or
cmps
lods
push
test
jno
pop
push
xchg
jmp
sub
je
xor
setp
pop
pop
imul
add
in
jb
xor
sub
dec
scas
pusha
pusha
retf
pop
shr
sub
pop
in
mov
cmp
das
and
out
shl
pop
jle
xchg
imul
and
add
xchg
adc
cmp
jb
cmp
icebp
cmc
and
fidiv
iret
add
mov
xchg
jno
je
or
mov
adc
adc
cmp
(bad)
mov
push
inc
icebp
cmps
mov
push
mov
call
loope
mov
lds
mov
dec
fmul
pushf
scas
loope
xor
pop
mov
cmp
jnp
popa
pop
dec
outs
mov
mov
sub
jne
mov
pop
popf
popa
mov
loope
imul
out
popf
sub
das
fist
shr
push
dec
mov
dec
ret
fadd
add
loopne
adc
repnz
add
ss
popa
adc
sti
push
jp
jno
shl
rol
les
(bad)
scas
lods
ror
sahf
fwait
pusha
mov
scas
outs
sbb
cld
stc
pusha
push
ins
xchg
pop
scas
movs
out
(bad)
pushf
jae
scas
cld
push
lods
(bad)
pop
repz
cld
cmp
cmps
mov
dec
fld
into
repz
ret
inc
(bad)
push
lds
cmp
sub
nop
lea
fild
outs
jae
mov
pop
int
xchg
daa
add
sbb
pop
les
cmps
xchg
sub
add
or
push
ret
pop
inc
sub
aaa
inc
into
int
imul
adc
xchg
pop
jbe
pusha
enter
ins
cmp
cmp
or
jo
sub
pop
std
movs
pop
push
or
and
mov
dec
adc
xchg
das
pop
fld
jg
mov
cmp
stos
dec
sub
rol
sbb
(bad)
jecxz
mov
ret
push
dec
neg
jl
mov
(bad)
clc
fsub
jno
adc
pop
sahf
mov
jmp
nop
inc
mov
push
aam
enter
into
jg
fs
inc
jmp
repz
mov
sub
and
psubusb
cmps
retf
das
fwait
ret
rol
rcl
jmp
lods
cmp
in
test
mov
pop
cmp
push
clc
(bad)
(bad)
jae
shl
jmp
in
stos
jmp
mov
xchg
repz
fs
cli
cmp
or
stos
into
daa
xchg
int
mov
call
test
mov
inc
and
(bad)
imul
out
jae
scas
js
lods
fsubr
ins
mov
sbb
push
test
pop
scas
pop
(bad)
call
je
mov
pop
pop
add
sub
xchg
mov
sbb
inc
mov
lds
mov
je
jmp
daa
push
push
rcl
pop
mov
shr
inc
lods
lods
shl
shl
pop
cmp
stos
(bad)
lds
adc
mov
outs
cmp
jnp
out
js
adc
xor
xor
or
add
and
add
not
push
mov
push
jle
or
shl
aad
fisubr
sbb
into
in
fild
imul
out
js
mov
mov
loop
gs
push
add
mov
scas
int3
pushf
jne
jmp
imul
mov
ins
xchg
sbb
jo
cmps
push
aam
ja
ret
sbb
ins
pop
jp
cli
lods
pop
push
xor
or
(bad)
jae
mov
icebp
add
ss
fidiv
popa
test
aaa
in
jne
jnp
icebp
xor
mov
mov
mov
test
pushf
cwde
push
mov
test
cmps
pop
int3
sar
cmp
jo
std
add
xchg
sbb
in
ja
adc
dec
(bad)
in
cmp
cmp
cmp
and
outs
push
loop
or
or
xchg
xchg
pop
push
int
sub
js
cmp
ret
or
fcomp
mov
push
or
inc
loopne
in
pop
fmul
addr16
jmp
mov
push
xor
ja
pop
add
fstp
push
xor
mov
sub
xchg
add
jbe
in
mov
test
xchg
inc
or
jbe
in
jmp
frstor
inc
sbb
cmps
push
out
adc
adc
add
adc
cdq
dec
movs
mov
retf
jb
sub
mul
arpl
mov
in
jge
xor
test
ss
lods
xor
pop
es
and
jne
aaa
sbb
and
test
xchg
shr
out
cdq
pop
out
push
mov
xlat
mov
xchg
aam
(bad)
adc
jmp
add
jno
pop
pop
out
int
jo
sub
in
js
cmp
std
mov
mov
sub
mov
add
add
ins
adc
or
cdq
cld
xchg
(bad)
cmp
mov
sbb
pop
inc
mov
dec
ins
div
adc
sahf
fdivr
inc
add
mov
or
icebp
sahf
pop
mov
lods
adc
push
cld
or
scas
jns
bound
mov
or
ins
sub
shr
loop
xchg
mov
xchg
ret
xchg
sub
fcom
sbb
sbb
sbb
ss
int3
iret
in
push
int3
test
inc
test
cmp
xor
adc
push
(bad)
icebp
xchg
fisttp
mov
out
fbld
pop
dec
jmp
jb
js
adc
or
jb
call
sub
jge
push
or
ins
mov
lock
or
and
aam
jmp
xchg
and
mov
sub
inc
call
xchg
neg
in
jle
mov
out
lock
sbb
ret
ds
movs
aad
(bad)
pushw
adc
mov
mov
inc
jp
lock
adc
jle
(bad)
inc
xor
lahf
bound
cld
int
sbb
inc
push
test
inc
dec
jmp
std
test
inc
adc
cmp
in
aad
push
jnp
in
cmp
adc
icebp
inc
sbb
js
test
lds
sbb
mov
leave
or
cmp
lea
mov
push
pop
or
adc
adc
pushf
xchg
cmps
ja
and
test
fisubr
iret
jo
and
cmp
ja
pop
shl
imul
in
cdq
les
mov
stos
daa
js
(bad)
or
pop
js
fsubr
mov
test
(bad)
fwait
stos
pop
jne
mov
loop
sti
cwde
jecxz
xchg
retf
pop
inc
pop
xchg
aaa
fist
jmp
dec
ins
mov
int
sbb
adc
and
fcom
(bad)
icebp
jecxz
scas
mov
mov
adc
mov
(bad)
mov
popa
ins
test
scas
adc
sub
jmp
add
in
fadd
adc
mov
cld
nop
lahf
and
cmps
pop
xchg
(bad)
aaa
test
dec
mov
outs
ins
sbb
ja
cmps
mov
scas
fwait
jg
jp
add
dec
ja
add
sbb
(bad)
xor
es
sub
(bad)
repz
shl
rol
ds
pop
mov
push
push
iret
stos
mov
and
std
mov
in
or
push
jle
test
int3
pop
dec
js
sub
aam
les
and
les
jmp
pushf
mov
enter
inc
sti
dec
(bad)
lea
cmp
xor
shl
fcom
mov
push
fs
shl
pop
lods
js
pop
call
jb
lods
ds
inc
cmp
ror
pop
jnp
out
inc
xchg
xor
ror
pop
ror
mov
stos
pop
ret
inc
sub
sbb
inc
or
outs
jae
push
xchg
movs
test
add
repz
adc
das
inc
scas
rcl
lds
and
mov
xor
xchg
adc
gs
mov
call
adc
and
lds
push
mov
jno
pop
paddusw
push
outs
mov
fxch
je
frstor
inc
pop
xchg
mov
push
push
je
sti
sub
rol
xchg
mov
arpl
cdq
cmp
enter
clc
pop
dec
vcvtsd2ss
imul
mov
mov
hlt
mov
pop
gs
and
movs
fs
gs
scas
cmp
push
mov
push
das
imul
mov
in
js
add
test
je
ror
sbb
sub
sbb
shr
xchg
in
xor
ret
test
imul
(bad)
and
pop
mov
sub
mov
rol
pop
or
inc
ret
pop
daa
repz
hlt
test
and
sbb
mov
div
xor
dec
pop
scas
ret
mov
sub
push
push
sbb
shl
(bad)
aas
fbstp
(bad)
ja
inc
cmp
nop
outs
jle
or
stos
sub
and
arpl
or
sub
xchg
ret
lods
test
sahf
(bad)
mov
xor
cmps
neg
xor
sub
int3
sahf
ins
ret
clc
data16
icebp
fnstsw
out
test
mov
jle
bound
or
jle
jge
mov
cmp
aam
or
and
into
fdiv
call
and
movs
xchg
and
movs
jg
pop
xchg
sbb
or
mov
jmp
ss
inc
mov
push
leave
sub
cs
xor
mov
xchg
jne
xchg
or
daa
imul
mov
dec
int3
popa
inc
or
aam
lahf
inc
cmps
imul
fs
retf
pop
xor
add
rcr
fcmovnbe
cmp
and
inc
xor
xor
shl
ja
stc
jb
cld
cmp
jl
fcmovnu
dec
imul
out
ins
mov
adc
adc
mov
or
in
scas
pushf
leave
mov
es
enter
or
add
and
jle
jle
pop
jecxz
cld
mov
iret
xchg
out
cli
lods
ss
test
mov
jmp
cwde
pop
out
int3
pop
push
sbb
sbb
sbb
adc
int
push
fiadd
retf
mov
mov
inc
(bad)
scas
test
add
leave
ds
pop
sbb
cmp
shl
or
cmc
mov
sti
fmul
stos
mov
cs
mov
push
jnp
call
sbb
pop
jmp
mov
xor
cmp
fadd
es
fwait
lea
rol
sbb
call
jmp
sub
mov
test
add
je
jo
mov
in
(bad)
jmp
or
mov
push
push
imul
test
fwait
add
test
cwde
fs
(bad)
mov
lahf
sbb
int3
dec
fisttp
mov
pop
fistp
fiadd
daa
xor
cmovns
movs
push
xchg
lds
inc
push
in
push
mov
mov
inc
loop
adc
mov
xor
sbb
push
fld
pusha
int
inc
ficomp
loope
into
add
mov
xchg
mov
jbe
lahf
rol
leave
xchg
movs
sub
inc
and
xor
addr16
sub
(bad)
adc
mov
rcl
cmp
pop
sbb
mov
inc
ins
xchg
adc
inc
test
adc
xchg
das
push
imul
jo
fcomp
mov
dec
hlt
and
or
ja
pop
test
dec
sub
jb
shl
pop
mov
into
adc
mov
jge
mov
js
ret
arpl
sub
mov
arpl
fidiv
movs
jecxz
fmul
and
sbb
cmp
or
xlat
sub
inc
pop
fidivr
neg
sbb
fdivp
lods
hlt
(bad)
popa
imul
jmp
(bad)
mov
shl
outs
cdq
add
jmp
mov
pop
daa
pop
add
pop
mov
and
cmp
imul
aam
jae
iret
adc
in
jns
loopne
pop
cli
fwait
and
shl
fwait
pop
cmp
cwde
fisttp
push
(bad)
sub
cwde
dec
sar
clc
pusha
in
inc
dec
(bad)
xor
add
pop
rcl
in
sub
stc
mov
adc
pop
ror
xlat
hlt
ss
xor
or
dec
je
stos
(bad)
scas
inc
xchg
in
shl
arpl
dec
stos
mov
push
push
push
test
add
mov
nop
outs
arpl
push
std
aas
mov
(bad)
pop
mov
shl
mov
pop
inc
pop
and
mov
ret
inc
xor
loop
xor
(bad)
mov
sub
out
punpckhdq
push
lock
inc
mov
sub
out
ret
push
mov
or
cmp
js
push
fnstsw
fdiv
mov
aad
jl
std
or
cdq
scas
fdivr
inc
jae
add
push
imul
test
adc
xor
xor
aas
adc
in
sti
repz
jmp
dec
inc
(bad)
sahf
aam
rcl
iret
pop
jle
or
test
sti
int3
test
(bad)
xlat
mov
push
adc
sti
imul
and
int3
jp
xor
mov
stc
pop
adc
cmp
stos
ret
scas
add
nop
pop
push
fcomp
ds
fisubr
cmp
push
sub
je
les
sub
out
xchg
icebp
mov
(bad)
lods
xlat
xor
push
mov
icebp
mov
call
packssdw
adc
rol
pop
loopne
sbb
pop
sbb
xchg
lock
sub
add
and
pusha
leave
cmps
sub
sti
retf
call
jmp
sub
std
out
pusha
(bad)
xor
mov
aad
mov
push
pop
sahf
ins
icebp
and
and
sub
imul
xchg
js
push
loopne
lods
jg
push
pop
ror
mov
(bad)
pop
or
cld
dec
enter
test
or
imul
cmp
jo
add
test
mov
sbb
lods
mov
(bad)
ins
loope
push
aaa
mov
or
scas
rcr
retf
fdivr
mov
test
pop
xor
push
sub
ins
push
icebp
dec
aam
mov
je
lock
push
push
dec
(bad)
out
mov
xor
xor
sub
ja
repnz
icebp
xchg
mov
(bad)
ss
cmc
cs
adc
sub
sbb
aam
jns
dec
jns
and
push
and
cli
mov
xor
pop
dec
pusha
pop
adc
cmps
push
or
mov
cmp
push
add
aam
retf
ret
push
(bad)
add
cmps
stos
cld
aaa
sbb
lahf
hlt
pop
or
jp
arpl
xchg
and
out
adc
jbe
push
and
xor
mov
xchg
add
(bad)
sahf
and
dec
rcl
inc
push
inc
xchg
mov
or
repnz
repz
mov
jnp
inc
mov
xchg
hlt
or
adc
inc
out
imul
inc
xor
pop
or
test
push
pop
movs
jno
aas
mov
mov
inc
rcr
cmp
add
shr
rcr
je
or
pop
cmp
add
inc
nop
mov
das
test
sbb
sbb
adc
push
sub
hlt
push
addr16
fmul
add
test
fwait
push
xchg
dec
xchg
pop
imul
(bad)
pop
mov
pop
(bad)
mov
pop
enter
mov
dec
push
bound
mov
sub
fdiv
mov
lds
jne
adc
jb
sbb
(bad)
push
neg
and
retf
mov
cmp
inc
rcr
mov
rol
clc
jmp
mov
jge
test
cmp
loopne
inc
idiv
call
sbb
bound
test
daa
push
dec
cmp
ins
bound
daa
mov
adc
dec
push
sti
div
sub
daa
sbb
(bad)
mov
retf
jmp
cmp
outs
in
cld
aas
push
mov
rcl
imul
fild
jle
inc
mov
xchg
pop
stos
pop
sbb
ss
lds
and
mov
fwait
mov
fs
stos
outs
pop
xchg
jns
loope
pop
outs
mov
or
daa
ja
mov
push
pusha
or
mov
sti
sub
xor
sbb
jno
xchg
jno
shl
call
aas
dec
or
rcl
test
lahf
sub
stos
cmps
es
sub
inc
retf
imul
into
movs
adc
in
fnstsw
popf
xor
in
add
fmul
(bad)
cld
(bad)
push
mov
shl
loope
mov
in
lds
push
cmp
pop
mov
pop
daa
and
ds
dec
push
shl
bound
outs
jmp
push
(bad)
and
inc
mov
loope
add
dec
inc
jl
dec
push
cs
pop
sti
pop
inc
pop
jne
push
clc
sub
push
mov
mov
mov
mov
inc
loopne
loopne
in
aaa
aad
xor
or
dec
xchg
mov
and
pop
xor
dec
sbb
xchg
stos
imul
adc
dec
xchg
fnstenv
and
aaa
cli
loopne
xor
mov
sbb
mov
and
cmp
sub
sbb
and
sar
lods
mov
mov
cmps
repz
mov
push
stos
test
mov
inc
shl
loope
cld
and
lock
out
pop
sub
sbb
xlat
cmp
out
into
test
les
cwde
jo
clc
inc
xor
popa
in
je
pop
xchg
mov
jb
bnd
jb
lds
imul
dec
cmps
gs
mov
(bad)
in
fsubr
pop
div
aad
add
add
data16
cmp
xor
push
sub
mov
fdivr
cmp
inc
cdq
in
push
xor
inc
enter
ins
or
inc
jbe
int
test
lock
adc
inc
ja
pmaxsw
imul
test
rcr
add
push
clc
ss
scas
xor
jns
adc
and
cwde
ins
mov
dec
std
mov
mov
(bad)
xlat
in
(bad)
js
mov
ins
mov
and
std
call
pushf
test
and
(bad)
mov
dec
mov
lock
inc
dec
mov
push
aas
sub
jae
xchg
(bad)
sahf
sbb
(bad)
repz
push
add
jmp
(bad)
mov
shl
call
push
dec
adc
add
and
cmp
push
rcr
mov
push
(bad)
mov
outs
jl
(bad)
mov
xor
adc
std
repnz
out
adc
in
pop
addr16
imul
jl
lods
les
mov
or
scas
test
scas
cmp
xchg
test
aaa
cmps
aad
adc
jl
mov
pop
js
ret
fstp
jmp
push
xchg
pop
in
xor
outs
mov
test
inc
push
sti
pop
or
scas
mov
loope
cwde
push
sub
and
cmp
shl
push
pop
test
addr16
inc
pop
push
call
and
popa
js
jp
test
enter
scas
pop
mov
dec
xchg
sub
mov
adc
lahf
(bad)
fucom
jge
or
gs
push
mov
push
jmp
xor
cmp
xchg
mov
dec
into
outs
sbb
pop
mov
jl
cli
mov
popa
adc
sbb
jmp
or
push
mov
inc
dec
retf
mov
imul
mov
push
jo
xor
xor
or
popf
xchg
and
mov
fld
loop
icebp
out
xor
aaa
int3
jno
imul
arpl
push
ja
push
mov
(bad)
es
scas
mov
aad
mov
std
fs
and
test
aas
pusha
mov
pop
aam
out
jmp
fwait
push
mov
sub
stc
jnp
mov
and
movs
mov
xor
inc
in
enter
pop
jb
or
stc
mov
into
mov
repnz
retf
and
pop
and
adc
jae
jae
push
mov
inc
mov
(bad)
adc
pop
arpl
mov
pushf
adc
mov
adc
je
imul
std
cmp
xchg
test
in
mov
add
dec
mov
or
outs
xchg
jp
sar
sti
and
push
mov
jp
cmp
jno
test
fisub
push
stos
and
fistp
cmp
loope
push
in
mov
sahf
adc
daa
fwait
xchg
lods
imul
adc
mov
fwait
movs
scas
sub
sbb
iret
mov
(bad)
push
cdq
ficomp
mov
sbb
and
mov
nop
mov
dec
movs
or
das
sahf
fidivr
repnz
xor
mov
xlat
in
hlt
dec
and
in
and
clc
xchg
out
mov
mov
fwait
jg
sbb
mov
addr16
and
rcl
int3
cdq
adc
push
outs
pop
mov
mov
push
sar
jl
and
jmp
in
xchg
pop
and
push
repnz
fld
dec
sub
pop
cmp
sub
inc
cmp
int3
mov
jmp
stos
push
into
pop
mov
pop
cmps
cdq
mov
push
mov
mov
sbb
enter
sub
cmp
iret
xchg
sbb
push
shl
xchg
cdq
and
and
aaa
mov
add
ret
shr
inc
and
repnz
mov
shl
or
pop
push
jge
cmp
push
icebp
sar
mov
pop
(bad)
aaa
pop
movs
clc
pop
jmp
bound
add
mov
cli
aad
jecxz
add
fimul
xchg
outs
(bad)
pop
cdq
rcl
adc
sbb
clc
and
pop
dec
popa
outs
inc
mov
cmps
ins
jle
push
les
sbb
mov
fnsave
mov
adc
rcl
cmp
lea
stos
fdivrp
test
iret
add
pop
push
xchg
ins
cmp
push
cdq
sti
in
push
add
add
pop
in
cmp
les
dec
call
call
xchg
imul
mov
xchg
enter
xor
pop
imul
in
jns
jb
mov
sub
mov
mov
xchg
(bad)
rol
lahf
jge
push
addr16
add
add
(bad)
mov
ror
pop
and
enter
mov
jle
mov
pop
inc
jmp
or
aaa
in
cmp
sub
out
jmp
jns
jmp
(bad)
dec
mov
add
sub
jmp
ins
inc
loop
repnz
inc
mov
mov
jo
xlat
mov
lahf
sub
test
sbb
ficom
pop
int
sbb
imul
in
inc
add
push
ja
inc
sub
mov
lods
shr
or
xchg
int
(bad)
idiv
pop
xlat
inc
add
dec
dec
lods
test
cmovns
xchg
jae
div
bound
ins
sub
outs
bound
push
arpl
add
movs
hlt
push
jne
lds
je
add
(bad)
jp
cs
pushf
mov
mov
icebp
dec
push
mov
jbe
aas
adc
cmp
cmp
call
jl
dec
ins
and
clc
adc
push
test
jl
fidiv
add
ficom
lods
inc
ficomp
sub
sbb
jg
jnp
sub
dec
clc
sub
lahf
cwde
movs
lahf
adc
out
daa
stos
push
mov
mov
scas
outs
dec
xchg
xlat
push
imul
fwait
enter
sbb
(bad)
add
test
in
jmp
add
fs
out
xchg
adc
inc
sub
mov
hlt
inc
mov
and
adc
dec
int
shr
push
std
xchg
stos
sub
push
xlat
aad
xor
add
sar
sbb
push
or
mov
push
std
mov
xor
sar
dec
add
sbb
and
sbb
push
sbb
and
mov
mov
(bad)
loopne
pusha
add
ja
ds
pop
push
out
add
retf
cdq
imul
add
cmp
mov
and
and
(bad)
mov
cmp
jg
pop
fdivrp
add
je
sbb
mov
jo
push
and
data16
lahf
cmp
(bad)
dec
popa
gs
fucomp
add
push
mov
shr
clc
lea
jns
or
aaa
add
cmp
rcr
popa
jmp
in
hlt
dec
mov
cld
or
imul
div
pushf
dec
mov
std
cwde
jno
and
bound
ja
sbb
aas
and
mov
dec
mov
sub
(bad)
fucomip
pop
push
outs
cmp
jno
add
aaa
push
mov
inc
pop
pop
pusha
cmps
add
push
xor
imul
cmp
arpl
retf
jo
sahf
cmps
inc
and
stos
xchg
repz
in
mov
sbb
xor
mov
sahf
outs
or
sub
push
push
int
inc
shl
pop
and
xchg
enter
cld
xor
cmp
in
pop
jo
test
bound
mov
pushf
out
jbe
outs
es
jge
mov
push
jg
mul
push
xor
(bad)
and
shl
outs
inc
icebp
out
scas
scas
shl
sbb
icebp
add
jb
mov
sub
rcl
push
dec
adc
scas
scas
rcr
jmp
mov
xor
xchg
sbb
inc
jae
fdivr
mov
movs
dec
lahf
aam
or
mov
mov
or
add
scas
dec
into
pop
out
daa
dec
pop
inc
scas
stos
xor
mov
dec
jle
js
les
movs
xor
add
lahf
push
iret
adc
dec
stos
jae
bndldx
fild
cld
test
iret
jno
jnp
pop
pop
popa
xchg
mov
mov
inc
push
pop
js
aad
dec
push
lods
(bad)
dec
add
std
jmp
dec
das
cmp
stc
adc
add
(bad)
mov
addr16
xchg
ins
icebp
cli
xor
or
pop
xchg
pop
jp
int3
mov
cmp
(bad)
dec
add
or
lods
movs
rcr
push
xchg
call
sub
lods
push
imul
xchg
movs
sub
jb
hlt
mov
inc
cmps
xor
adc
imul
retf
es
cmp
in
mov
add
popf
jmp
fs
mov
dec
jnp
jg
pop
inc
out
mov
mov
lds
int3
push
inc
sbb
add
xor
jl
dec
in
aas
call
or
fld
xchg
sub
loopne
ror
sub
sub
test
lock
mov
mov
es
sti
cmp
dec
into
test
test
cmp
sbb
and
xchg
mov
sahf
aam
xrelease
xor
xchg
int3
xchg
outs
fcmovnbe
or
mov
aad
mov
fmul
cmps
les
inc
ret
lods
loop
mov
inc
mov
out
inc
cdq
mov
lahf
(bad)
clc
loope
cmps
sbb
mov
xchg
icebp
sub
mov
and
fidivr
push
arpl
xchg
(bad)
(bad)
test
mov
or
outs
les
xchg
cmp
jno
mov
rol
dec
scas
neg
mov
outs
xor
or
and
dec
adc
aaa
sub
sub
adc
sub
jmp
xor
fdivr
ss
int3
sahf
cmps
xchg
push
pop
or
pop
fwait
mov
sub
mov
pop
lods
pop
(bad)
in
scas
mov
xchg
call
mov
loopne
pop
test
jae
mov
or
jmp
into
pop
pop
sub
lea
pop
sbb
cs
add
mov
pushf
int3
sti
jp
bound
inc
sub
cli
jnp
stos
dec
ins
retf
inc
sti
push
ins
mov
repnz
shl
enter
sub
cmps
bound
xor
add
jb
jae
xor
xchg
jmp
cwde
stos
stos
mov
push
cmc
fidiv
scas
inc
cmp
sbb
std
popf
xor
push
imul
fnstenv
push
sbb
lods
dec
xor
cmc
jmp
push
adc
ins
dec
sub
push
lds
adc
pop
xor
test
xor
xchg
scas
mov
sub
ror
(bad)
nop
mov
call
(bad)
sbb
imul
xor
out
cmp
fld
ds
sti
imul
repz
xlat
fdiv
push
jle
movs
sub
and
mov
(bad)
adc
push
sahf
and
mov
ja
mov
lock
lods
add
pop
(bad)
out
cdq
cli
sbb
mov
(bad)
push
(bad)
cwde
pop
cmps
mov
push
test
pop
pop
jnp
cs
ret
dec
lds
aas
bound
xor
mov
idiv
int3
daa
mov
lods
enter
xchg
mov
pop
repz
ret
or
add
and
jno
mov
int
jno
clc
mov
out
sar
ret
sub
xor
push
mov
bound
pop
xchg
cmc
movaps
loop
in
bound
iret
ret
push
stos
sub
inc
or
push
dec
add
pop
in
shl
pushf
push
(bad)
es
imul
pop
jmp
inc
cmp
ret
rcl
cmp
adc
das
dec
mov
retf
sbb
pop
addps
xor
repnz
push
gs
dec
hlt
inc
mov
push
pop
add
shl
inc
xor
aas
gs
idiv
mov
in
cmp
xchg
loopne
jnp
(bad)
mov
mov
jae
jmp
mov
sub
jae
dec
retf
aas
pop
or
pop
adc
int
mov
mov
mov
daa
cdq
rol
push
fadd
adc
or
mov
mov
enter
ror
pop
fisubr
cmc
scas
sub
sbb
stos
div
sbb
gs
cmc
sar
sub
loopne
dec
lods
mov
add
retf
push
stos
xchg
(bad)
jno
shr
jmp
daa
sbb
mov
dec
pusha
pop
xchg
ja
mov
jnp
repnz
test
jnp
stc
ja
call
xor
ret
jno
and
push
xor
lahf
inc
xchg
out
cmp
xor
cmp
data16
stos
(bad)
in
dec
test
ins
cmps
cmp
pushf
out
pusha
rol
dec
lahf
outs
imul
sbb
push
sbb
scas
ficom
mov
imul
push
(bad)
mov
cmps
xchg
pop
adc
pop
or
das
pop
and
in
pop
sub
pop
push
adc
add
mov
xchg
sar
cmp
fistp
add
retf
stos
scas
imul
ret
dec
in
xchg
mov
ret
inc
xchg
and
pop
sub
or
fld
mov
mov
inc
ss
sbb
mov
fs
stos
repnz
lock
out
jo
mov
hlt
(bad)
stos
mov
mov
or
mov
outs
cmp
jge
movs
and
fcom
pop
inc
sbb
retf
push
pop
rcl
mov
pop
push
xchg
hlt
out
in
cld
cld
(bad)
sbb
cmp
retf
mov
pop
lds
lods
neg
ret
cld
push
movs
add
dec
or
mov
sbb
jbe
call
mov
or
(bad)
pcmpeqw
add
aas
shl
pop
adc
repnz
lock
xchg
fs
push
inc
shl
(bad)
fcmovnu
inc
jmp
dec
mov
pop
rol
push
outs
jmp
or
mov
lahf
mov
pop
lahf
(bad)
cmp
scas
or
iret
sub
inc
sbb
ret
sbb
and
phaddd
and
push
fadd
pop
xor
or
push
mov
js
sub
sub
(bad)
mov
std
mov
add
cmp
xchg
lds
mov
xor
mov
hlt
xchg
shr
jmp
sti
(bad)
jmp
sub
jg
repnz
xor
mov
popf
cwde
sbb
cmp
jo
repz
xchg
aad
rcl
push
adc
fidivr
jl
xchg
test
jne
dec
and
or
dec
lahf
and
arpl
push
test
lds
loop
js
fsub
mov
mov
lods
cs
or
repnz
popa
imul
push
sub
ret
std
push
mov
sahf
mov
(bad)
rol
rcr
cwde
push
push
in
out
iret
xchg
dec
dec
sub
inc
sub
ins
lods
cmp
sbb
daa
fldz
sub
(bad)
sub
fcmovb
xchg
push
push
pop
stc
jge
hlt
fdivr
ds
(bad)
(bad)
into
mov
dec
fld
js
push
sub
jo
and
lds
int
ins
enter
jbe
enter
push
test
rcl
xor
ds
mov
popa
lea
pop
dec
sbb
adc
mov
test
adc
dec
add
adc
repz
popa
or
std
fwait
add
mov
aam
test
mov
sahf
and
add
mov
(bad)
(bad)
or
pop
lock
out
into
sbb
xchg
or
aas
push
lods
push
push
fwait
mov
loop
frstor
xor
ja
ret
ret
sti
sub
test
mov
call
add
xchg
and
pand
into
push
jne
out
lea
add
pop
jae
in
clc
push
mov
sbb
adc
aad
xor
(bad)
lahf
xchg
adc
push
sti
rol
js
or
arpl
push
in
pop
fmul
mov
xchg
imul
int3
sbb
or
stos
push
mov
push
jno
cmp
ja
or
mov
out
icebp
push
jl
loope
push
push
addr16
mov
cmp
fistp
or
sbb
add
pushf
push
retf
add
pop
xchg
icebp
test
jge
mov
rcr
mov
popf
stos
jns
dec
ficomp
lock
xor
repz
fsub
(bad)
addr16
in
mov
or
outs
sub
jno
cmp
fidiv
ret
cwde
je
lods
popa
pop
push
jmp
mov
lahf
pop
push
dec
ja
or
stc
loope
repnz
cmc
data16
(bad)
xchg
ja
cld
scas
mov
icebp
inc
push
dec
xor
mov
mov
mov
cmp
push
inc
add
inc
add
ins
inc
jg
jnp
pop
sub
xor
in
ja
retf
push
xchg
jl
in
mov
lahf
mov
dec
add
xchg
add
push
loope
stos
mov
(bad)
in
call
or
sti
mov
(bad)
push
call
add
in
sahf
lock
imul
adc
mov
sbb
arpl
pop
pop
sub
cmp
data16
mov
iret
cmp
cs
out
les
mov
inc
loopne
fisub
cmps
ins
mov
(bad)
mov
adc
mov
xor
js
jecxz
mov
mov
or
cmps
xchg
je
xchg
cmp
int3
dec
push
nop
dec
mov
xchg
lods
xchg
test
xor
jns
and
jae
stos
lds
push
or
idiv
sub
repnz
(bad)
fsub
js
sub
fxch
(bad)
cmp
cwde
retf
jge
(bad)
loope
imul
aad
jae
aas
das
loopne
dec
sbb
jecxz
loopne
mov
jae
mov
into
pop
call
dec
(bad)
push
push
dec
lds
jge
and
icebp
push
pop
cs
mov
push
dec
rcr
jge
ja
(bad)
jmp
leave
in
xor
(bad)
test
test
ins
dec
sbb
mov
outs
stos
in
and
cld
xor
push
mov
jmp
inc
mov
cmc
not
jns
not
fild
adc
jne
sahf
repnz
imul
jnp
in
and
and
dec
enter
mov
fwait
xlat
push
adc
aam
fidivr
ror
fldenv
inc
es
nop
mov
dec
push
clc
mov
fbld
mov
add
xchg
sbb
xor
and
cld
jae
push
add
call
inc
sub
dec
js
cwde
pop
popf
out
or
add
push
test
jg
mov
aas
test
adc
rcl
daa
fcomp
mov
fidivr
mov
add
jmp
(bad)
ins
in
dec
fsubr
inc
lahf
int3
mov
scas
aaa
mov
cmp
(bad)
shl
fstp
stc
es
or
mov
push
mov
and
dec
loope
pop
lock
shl
pop
fsub
fst
aaa
mov
test
dec
jle
inc
add
sub
int
leave
mov
pusha
mov
dec
int3
repnz
stos
add
scas
jmp
xchg
or
mov
test
mov
in
fcom
mov
mov
into
aaa
mov
ins
test
mov
out
lods
and
stos
(bad)
ss
push
add
jbe
ret
out
cdq
sub
jge
pop
or
add
repnz
addr16
ja
jle
test
std
iret
xor
leave
pop
es
in
sar
test
add
ins
lahf
js
jns
sbb
add
dec
jle
or
cmps
shr
sub
sbb
js
mov
xchg
adc
lds
pop
or
jne
dec
call
mov
hlt
sub
xchg
pop
pop
ja
pop
cmps
push
not
mov
push
mov
jns
dec
pop
push
aaa
sbb
pusha
xor
imul
outs
retf
sti
mov
and
je
add
test
es
push
push
cmp
or
popa
push
xchg
adc
cli
dec
repz
repz
in
ds
pushf
std
repnz
icebp
cli
fdivr
inc
pop
mov
mov
movs
pop
test
push
sub
push
xchg
or
mov
addr16
call
jg
mov
mov
xchg
or
ss
addr16
mov
mov
enter
loopne
jbe
lock
dec
nop
fimul
fwait
mov
mov
cld
nop
mov
fsub
jbe
dec
ins
call
enter
cmp
dec
pop
in
pop
leave
add
mov
div
lods
adc
jo
loopne
iret
call
jbe
adc
dec
pop
(bad)
lods
mov
cmp
aam
xor
adc
inc
inc
or
pop
lods
imul
out
mov
dec
jne
add
pop
cmps
lock
pop
jnp
lahf
push
jne
ds
es
(bad)
ffree
push
scas
movs
jl
cmps
ss
les
sar
inc
xchg
sbb
clc
add
xor
hlt
aam
adc
and
fdiv
pushf
adc
in
dec
jb
fwait
scas
cld
xor
fsub
in
das
jg
stos
lods
xchg
(bad)
xchg
imul
popf
imul
ja
(bad)
add
fcomp
lds
pop
cmps
inc
jg
in
repz
cmp
rcr
sbb
mov
imul
bound
ja
out
xchg
call
mov
pop
cmp
and
xor
inc
pop
mov
(bad)
inc
xchg
mov
mov
je
mov
hlt
mov
lods
xchg
cmp
ds
leave
test
out
jmp
scas
leave
sbb
add
loopne
mov
or
rcl
pextrw
add
mov
sub
out
sub
and
in
dec
jl
and
iret
ret
jecxz
adc
or
cmps
ins
fst
dec
aad
lahf
inc
xchg
sbb
xor
cmp
shl
cmp
addr16
pop
sub
test
sub
jle
aas
inc
icebp
(bad)
test
cmc
arpl
push
and
cmp
mov
into
sbb
(bad)
jge
stos
mov
mov
jbe
repnz
fcom
fidivr
(bad)
daa
pop
imul
addr16
add
lds
fistp
push
test
les
retf
hlt
shl
fcmovne
and
jmp
test
jle
fwait
imul
push
sbb
adc
mov
call
xchg
leave
dec
ja
jnp
and
mov
sub
push
add
cmp
dec
test
mov
sbb
cmp
stc
aam
pop
je
mov
loope
or
add
mov
cwde
int
mov
mov
sub
xchg
pop
xor
pushf
loope
xor
lods
or
sbb
or
jmp
popa
xor
fadd
jmp
inc
pop
aad
in
and
and
inc
mov
and
icebp
pop
(bad)
call
cmp
iret
(bad)
(bad)
sti
sub
loop
mov
imul
ja
data16
or
leave
mov
adc
push
mov
or
mov
pop
test
mov
jnp
leave
loopne
stc
jo
push
add
and
add
leave
(bad)
cmp
sub
daa
cld
mov
push
ret
pushf
es
add
xor
addr16
mov
jle
mov
jbe
mov
pop
call
popf
ret
xor
jo
inc
or
mov
mov
cmc
loope
loopne
add
in
clc
cmps
jmp
cmp
add
int
push
adc
popa
mov
pop
sbb
lods
ja
test
iret
stos
mov
test
push
sahf
fist
mov
ficomp
push
loope
xor
mov
(bad)
jmp
dec
int3
je
aam
jle
test
mov
popf
test
cmp
xor
es
adc
mov
inc
cld
mov
call
shl
cmc
mov
adc
mov
(bad)
mov
fs
loopne
dec
mov
push
cdq
dec
pop
mov
in
outs
and
mov
dec
sub
es
and
dec
adc
push
mov
int
mov
xlat
sub
sahf
outs
pop
inc
mov
rol
jecxz
push
mov
hlt
jge
dec
shl
add
push
inc
lods
jmp
mov
ins
arpl
jecxz
jg
adc
mov
in
adc
in
pop
mov
out
cmp
addr16
arpl
dec
movs
enter
push
scas
bound
sbb
lods
xchg
data16
cmp
mov
std
scas
fist
shl
cmps
inc
sub
jb
adc
jp
mov
neg
cli
fdivr
mov
je
cmp
inc
add
pusha
pop
cwde
jnp
fwait
int
lahf
push
pop
dec
xor
pop
cs
cld
adc
outs
jg
cwde
mov
mov
mov
bound
cmp
cld
push
and
cmp
js
sub
jns
sti
loop
jp
mov
fs
push
test
frstor
inc
jmp
in
shl
mov
add
jb
cli
push
ret
mov
pop
push
jns
mov
sbb
jl
sysret
repnz
movs
out
mov
and
xor
mov
mov
imul
sub
fs
cmc
push
out
pop
sbb
sub
out
mov
jae
fucomi
jmp
mov
ficomp
call
aam
mov
jb
sbb
xor
into
and
add
xchg
cmps
inc
jmp
fwait
mov
push
jp
mov
out
and
jbe
mov
inc
repnz
jae
mov
(bad)
int3
cli
push
pop
repnz
icebp
call
mov
enter
inc
pop
shl
push
mov
inc
fwait
push
shl
leave
or
jge
fimul
cmps
stos
popa
mov
xchg
xor
inc
cmp
or
xor
cmps
rcr
sar
inc
pop
out
enter
mov
mov
dec
jmp
lods
imul
dec
repnz
mov
and
outs
pop
and
sbb
cld
cmp
cmps
push
cmp
call
jb
ret
sub
bound
pusha
aaa
jne
stc
hlt
repz
mov
scas
mov
dec
repz
call
jl
loop
test
push
or
jecxz
and
add
pop
inc
icebp
sub
or
test
(bad)
cmp
imul
xchg
ds
mov
jle
mov
ins
popf
pop
(bad)
lods
xor
xchg
popf
in
add
aaa
and
fwait
sub
out
mov
dec
imul
sbb
imul
adc
xchg
aas
pop
push
xor
pop
jno
jb
fsubr
pop
mov
sti
cwde
movs
sub
pop
add
sbb
xlat
push
or
mov
dec
xor
inc
fwait
les
sub
add
cmp
adc
xchg
(bad)
cmp
shl
add
push
movs
xor
cli
or
jge
add
and
(bad)
fisubr
cmp
jbe
jle
mov
mov
jl
push
mov
pop
xor
adc
pop
push
aad
pusha
fistp
pop
in
inc
pop
adc
test
test
shr
and
push
hlt
test
sub
retf
xlat
dec
jl
and
mov
out
cli
push
iret
adc
push
test
cmp
dec
pop
and
(bad)
fucom
retf
jl
aam
xchg
scas
pop
test
pop
xchg
js
and
mov
dec
mov
rol
fiadd
xchg
dec
jo
sub
or
dec
shr
out
std
jne
js
in
ret
lock
movs
gs
and
push
pop
movs
push
jp
aam
jo
out
xchg
pop
mov
adc
adc
mov
push
xor
jmp
jecxz
ins
adc
cdq
mov
ret
xor
and
mov
shl
xchg
retf
cmp
cmp
ins
sub
fsubr
mov
pop
sub
int
loop
daa
sub
add
push
and
and
aam
fsubp
pop
mov
jle
call
cmps
xchg
mov
xchg
mov
loope
and
imul
sahf
jo
sbb
ds
sbb
ror
call
sub
xchg
out
ret
and
mov
mov
movs
sbb
test
jmp
push
bound
mov
adc
(bad)
sub
push
inc
cmp
nop
dec
stos
mov
mov
ret
jnp
cmp
inc
and
fistp
sbb
outs
or
stos
out
mov
movs
jmp
jbe
push
lock
movs
addr16
leave
pop
adc
jbe
aam
sar
cmp
(bad)
leave
mov
cmp
pusha
repnz
lods
imul
adc
lods
cmp
mov
out
das
mov
cmp
or
mov
ds
mov
gs
imul
pop
ss
(bad)
xchg
inc
and
jae
imul
mov
into
ret
sub
aam
jbe
mov
outs
sbb
or
ss
int3
sbb
xor
pop
dec
inc
nop
push
jnp
out
(bad)
fs
sar
add
push
jecxz
sub
rcl
rcl
in
dec
adc
dec
lods
sbb
loope
xor
ret
sub
rcl
mov
sub
push
mov
retf
adc
dec
xchg
push
xor
hlt
jmp
jnp
out
xor
ja
push
xor
int
sbb
cmp
in
xor
popa
sbb
cmc
cli
(bad)
hlt
push
mov
dec
cmps
icebp
nop
ss
jg
icebp
xchg
mov
dec
xlat
push
(bad)
ret
add
sub
nop
jmp
lds
adc
out
pop
xchg
xchg
loop
cwde
sub
pusha
push
jecxz
loope
jb
rcl
jns
jb
mov
jge
fwait
mov
sub
xor
call
dec
mov
das
sahf
xor
out
(bad)
add
into
imul
cmps
jge
imul
out
jl
enter
mov
mov
inc
mov
pushf
(bad)
sysenter
int
pop
sub
jmp
cld
shl
lds
test
jecxz
test
jo
loopne
js
lods
ret
outs
xchg
test
in
cmps
in
mov
ffreep
pop
test
fldenv
ss
push
nop
cli
dec
(bad)
and
xor
lods
cmp
mov
inc
fidivr
and
sar
xor
rcl
imul
mov
add
call
addr16
inc
pop
or
outs
in
ret
out
lock
xchg
int
xlat
call
data16
xlat
mov
shr
add
cmp
dec
stos
pop
mov
jne
sbb
icebp
mov
push
cdq
jmp
mov
rcr
fsubr
fldcw
push
xchg
push
sbb
iret
jmp
cmps
js
aam
(bad)
push
or
rcl
dec
les
push
call
frstor
push
ja
int
xchg
call
push
hlt
dec
sbb
xor
rol
add
jb
add
ficomp
jp
in
nop
mov
(bad)
jle
les
arpl
loopne
pop
ss
sahf
xchg
fwait
mov
mov
daa
sbb
lods
inc
jb
mov
pop
(bad)
es
dec
push
mov
(bad)
and
mov
and
xor
xlat
rol
lds
gs
dec
mov
mov
bnd
inc
retf
xchg
pop
push
mov
nop
mov
jl
jne
stos
ds
ficom
in
or
hlt
inc
inc
jmp
sbb
and
sahf
fs
fimul
and
into
push
cmps
stos
jmp
sub
sub
mov
ror
jmp
xchg
into
xor
mov
lds
push
ret
vsubsd
out
dec
mov
jb
adc
out
gs
repnz
jne
push
ret
mov
xchg
pop
test
adc
cs
cmp
pop
xchg
add
enter
inc
dec
mov
and
jle
into
scas
dec
scas
sahf
mov
jl
and
pop
mov
or
sti
out
neg
pusha
(bad)
call
test
gs
cdq
scas
std
outs
push
(bad)
icebp
nop
(bad)
ror
mov
ret
jns
mov
jmp
push
mov
cmp
shr
push
jmp
sub
mov
inc
inc
cwde
outs
xlat
js
idiv
es
sub
sub
int
push
test
call
lods
ds
das
pop
fidivr
cwde
and
push
and
pop
movs
or
outs
std
dec
push
pop
aas
mov
adc
jmp
pop
ds
cmps
dec
adc
fiadd
fwait
adc
mov
mov
aaa
ins
dec
sub
fldcw
fisttp
add
mov
cs
inc
pop
popa
imul
(bad)
std
cmps
test
mov
movs
fnstcw
lods
pop
loop
mov
popf
inc
jae
mov
mov
jp
in
data16
imul
add
mov
in
je
div
rol
fst
push
cmps
test
aas
out
sub
jmp
dec
sbb
jae
xchg
retf
lods
lods
adc
clc
mov
nop
int
mov
adc
xor
and
dec
fiadd
mov
cmp
inc
push
sbb
(bad)
cld
in
mov
pop
(bad)
repz
popf
xchg
sub
fidivr
aam
or
sbb
movs
lods
inc
mov
pop
mov
and
jp
or
jmp
movs
mov
popf
shr
push
gs
xchg
mov
adc
xchg
mov
fwait
test
fild
repz
or
cmc
xchg
call
pop
mov
repnz
movs
sub
mov
call
sub
cmp
jmp
dec
mov
dec
aam
pcmpeqb
dec
xchg
test
pop
and
stos
dec
sahf
rcr
pop
mov
pushf
xor
jmp
loope
jecxz
pop
sub
(bad)
movs
sub
mov
add
imul
cdq
aaa
xor
ds
adc
cmc
mov
push
lahf
xchg
dec
or
push
pop
mov
push
(bad)
das
int
stc
adc
mov
or
rcr
push
ins
in
test
cmps
icebp
inc
push
push
lea
dec
or
scas
(bad)
mov
lock
adc
xor
inc
lock
aas
dec
fs
mov
aaa
mov
rcr
call
adc
imul
test
mov
jno
fdiv
inc
ret
push
data16
into
mov
inc
cmps
lods
dec
jg
inc
in
fimul
daa
mov
mov
cs
ficom
lds
inc
aam
icebp
stos
ins
leave
fnstenv
sub
mov
icebp
push
or
(bad)
out
cmp
cdq
iret
adc
push
pop
adc
in
out
lock
sbb
out
mov
xor
jmp
ins
das
lahf
push
xor
out
xor
cdq
and
loop
sub
cmp
push
jl
jne
sub
into
inc
hlt
int3
imul
mov
call
push
bnd
push
jmp
xor
aad
cmp
(bad)
add
push
push
repz
cmps
pop
xchg
scas
fld
sar
pop
sub
dec
out
mov
mov
push
and
xchg
xchg
gs
das
pop
ret
jns
daa
push
ja
cdq
or
mov
sbb
sub
js
neg
push
xor
sub
mov
sub
push
add
push
cmp
sti
push
gs
fcom
inc
adc
push
retf
movs
adc
mov
pop
scas
mov
sub
add
dec
aaa
(bad)
mov
or
mov
jb
dec
mov
xchg
or
mov
jmp
push
push
mov
out
jl
push
nop
pop
push
into
mov
icebp
cmps
lods
push
cmp
mov
outs
loopne
call
add
repnz
sub
add
ret
push
jle
andnps
mov
mov
aas
outs
cmp
or
mov
or
sub
push
movs
cvtps2pi
repz
test
push
and
xchg
push
int3
js
and
loopne
adc
sub
pusha
jmp
sub
dec
pop
and
add
je
cld
push
aam
mov
popa
das
mov
lods
out
scas
jns
adc
sub
adc
push
out
mov
shr
push
push
icebp
outs
push
ror
pop
ins
push
ret
int
mov
fadd
mov
mov
mov
stos
adc
xchg
jns
mov
pusha
inc
dec
imul
fcomp
push
fsub
jno
jae
sub
or
xchg
bound
call
sub
adc
mov
xor
jecxz
aam
inc
push
adc
rol
xor
mov
jnp
fisubr
pushf
xchg
fidiv
std
mov
sub
inc
push
jecxz
std
jae
cdq
pop
inc
fld
inc
mov
sti
xor
stc
dec
in
mov
jg
arpl
scas
xchg
push
sbb
popa
popf
jno
cmp
pushf
popf
stos
fnstenv
popf
jno
sub
aad
cmp
cmp
hlt
mov
cmp
sbb
and
xchg
mov
cmps
sub
cmp
call
fimul
daa
push
push
xchg
and
movs
mov
not
mov
inc
iret
call
in
push
jecxz
and
cwde
adc
and
jle
gs
cmps
outs
mov
mov
(bad)
lock
or
ins
sub
bound
movs
mov
jg
jns
xchg
stos
test
or
push
dec
in
xor
jmp
dec
in
cmp
mov
ss
(bad)
aad
repnz
and
or
xor
aam
or
xor
rcr
pusha
and
inc
lea
adc
pop
or
push
mov
push
jge
rcr
adc
clc
xchg
out
fs
jno
iret
pop
fnsave
mov
aad
sbb
(bad)
orps
retf
xchg
ins
imul
and
movs
movs
nop
cs
in
sbb
data16
retf
or
out
mov
pop
mov
mov
aaa
movs
test
or
inc
outs
inc
lahf
push
push
loope
into
adc
loope
outs
push
lock
dec
add
adc
adc
cmps
loope
push
jle
mov
enter
and
in
xchg
jge
push
(bad)
and
aaa
xchg
dec
mov
dec
mov
int
push
sub
leave
ja
ror
sub
stos
inc
push
aaa
xchg
and
hlt
sub
xchg
jnp
clc
sahf
inc
hlt
add
mov
popf
jmp
ins
out
xchg
or
xchg
fiadd
mov
add
add
mov
ret
sub
cwde
cs
xlat
pop
mov
(bad)
(bad)
mov
ja
popa
pop
sub
push
xor
cmp
xchg
es
push
sbb
lea
push
push
iret
pop
fcomp
inc
mov
shl
inc
xor
xchg
pop
or
xor
lock
jmp
xchg
ror
lahf
rcr
adc
mov
pop
push
inc
push
movs
xchg
jbe
cmp
aas
ficomp
out
jl
call
jno
fild
mov
addr16
adc
sub
(bad)
cmp
adc
adc
cmc
push
inc
xchg
sub
jl
sbb
and
jo
pop
fsub
add
mov
les
cmps
and
out
in
sub
fistp
adc
fidiv
or
sbb
lods
ins
shr
repnz
mov
sub
inc
jmp
sub
mov
cmp
cdq
mov
sbb
call
lea
mov
imul
add
pop
js
push
pop
scas
push
mov
sub
pop
lds
nop
rcl
pusha
addr16
movs
idiv
jle
xchg
sub
shl
outs
or
jne
and
mov
fld
fadd
movs
inc
stos
pop
es
push
repz
and
jg
push
lods
(bad)
cdq
push
sub
and
mov
add
stos
push
not
jmp
jg
jecxz
adc
xor
add
mov
imul
xchg
retf
dec
retf
jle
out
icebp
and
cmp
call
push
pop
rol
or
dec
pushf
mov
fcomp
lods
dec
jnp
mov
inc
push
jmp
test
or
or
cmp
popa
push
out
mov
js
dec
out
sub
lds
aad
popf
cli
push
aam
inc
repnz
and
js
mov
ins
and
xchg
mov
int
sbb
adc
cwde
push
ror
loop
add
ds
xchg
call
sbb
sbb
push
js
push
movs
movs
pop
inc
xor
loop
inc
dec
call
sub
fdiv
adc
xchg
(bad)
lods
jge
xor
lahf
and
xchg
push
jecxz
mov
mov
mov
arpl
retf
(bad)
jae
xchg
je
jns
mov
aas
cmps
push
nop
shl
jp
test
out
lahf
test
movs
jp
xor
jnp
mov
daa
mov
inc
aad
adc
inc
lock
xor
(bad)
cli
mov
stos
fdivr
jmp
push
inc
sbb
mov
dec
xor
xor
sahf
rcr
mov
in
test
sbb
xchg
add
call
mov
jmp
jle
cs
xchg
mov
mov
arpl
xchg
and
outs
out
neg
xor
and
sti
inc
in
(bad)
pop
or
dec
sub
std
(bad)
rcr
cmp
addr16
and
pop
mov
stos
out
hlt
mov
or
push
icebp
stos
fistp
ret
push
int
pop
mov
push
xor
lds
fimul
add
lea
add
push
mov
push
(bad)
div
adc
push
sub
fadd
sbb
fstp
nop
bound
(bad)
out
and
push
pop
cdq
retf
dec
cmc
outs
in
push
aas
ficom
sub
mov
mov
outs
pop
shl
xor
xor
repnz
out
jnp
pop
les
std
dec
inc
xor
jno
mov
xchg
dec
adc
scas
pop
and
jl
inc
(bad)
shl
xchg
xchg
mov
sbb
pushf
pop
in
or
fcmovu
stos
stc
push
(bad)
mov
clc
scas
sub
loopne
xor
cmp
retf
jmp
or
stos
jne
sbb
jb
xchg
xchg
lahf
stc
in
xlat
xlat
sbb
shl
nop
pminsw
inc
jp
call
jmp
scas
inc
lahf
cmc
(bad)
out
(bad)
icebp
daa
jns
jb
and
sub
les
fcmovbe
shl
push
enter
adc
jmp
fstp
sbb
cmp
bndldx
or
cmps
cmp
dec
jg
inc
adc
rcl
dec
push
js
and
cmp
push
pop
adc
or
lds
push
(bad)
jmp
cmps
outs
fbld
vcomiss
jp
arpl
lock
pop
not
dec
mov
mov
bound
cmps
mov
xor
mov
nop
cmp
cmp
sub
enter
movs
into
and
mov
mov
xchg
iret
fwait
jnp
inc
ins
lods
clc
push
lds
push
outs
mov
push
pop
jecxz
mov
daa
mov
jb
jmp
(bad)
aas
push
jb
or
and
push
add
aad
out
adc
icebp
mov
pushf
mov
ss
mov
int
sbb
repnz
std
add
adc
fnsave
ficom
sar
shl
or
adc
in
pop
sbb
rcl
cwde
fmul
sub
xor
into
popa
cli
or
adc
in
mov
add
in
nop
les
ja
add
nop
sbb
sbb
(bad)
(bad)
adc
mov
cld
enter
sti
ja
int
jbe
cmps
cdq
mov
dec
jns
sub
xchg
xlat
xor
mov
mov
or
test
and
es
mov
imul
mov
sub
mov
mov
repnz
mov
setns
mov
jmp
mov
popa
mov
mov
pop
mov
fadd
inc
push
xchg
xor
inc
sbb
(bad)
and
into
push
add
lods
or
cmp
fist
and
in
cmp
dec
jnp
imul
jl
retf
pop
mov
mov
enter
mov
sub
popa
dec
retf
in
fisttp
cmp
cmps
clc
push
shl
jne
inc
jnp
xor
jl
retf
cmp
test
or
jl
mov
cmp
repnz
outs
(bad)
test
mov
stos
add
jge
aad
pop
dec
cmp
mov
call
cwde
mov
sub
mov
pop
and
gs
inc
or
adc
icebp
es
lock
xchg
pop
jl
bound
std
add
shl
out
popf
jnp
cmp
ds
sar
mov
push
ins
sbb
or
addr16
mov
scas
inc
stos
fcomip
cmp
sub
jb
cmps
les
out
cmps
cmp
imul
adc
and
sub
inc
(bad)
jp
mov
ror
loopne
ret
push
inc
sub
iret
(bad)
fistp
lods
xchg
shl
div
loopne
outs
loopne
mov
inc
aam
cmp
nop
mov
sbb
cmp
mov
mov
pop
sbb
mov
mov
push
mov
mov
jmp
(bad)
dec
or
jecxz
ror
test
fs
in
mov
es
jp
repnz
ja
jbe
xor
into
cmp
nop
push
mov
sub
pop
cmp
jl
stos
cmp
stos
cmp
jb
nop
dec
aad
sbb
sub
pusha
jae
cmp
es
xlat
mov
popf
jge
fwait
imul
inc
adc
imul
dec
aad
sbb
dec
into
ins
das
pop
pop
push
repz
test
pop
pushf
test
adc
pop
cli
fld
imul
in
mov
jge
add
ret
jecxz
cmp
sahf
sbb
ret
outs
jmp
xchg
aaa
sbb
test
and
xor
cmp
bound
inc
dec
and
inc
and
mov
das
push
or
shr
dec
jmp
movs
ins
sbb
jno
adc
lds
das
(bad)
shl
inc
emms
ret
ins
inc
div
or
mov
into
xor
xor
cdq
pusha
lds
xchg
ins
sbb
jmp
mov
cmps
xor
jmp
dec
in
inc
mov
sub
pop
fiadd
mov
retf
(bad)
xor
dec
pushf
push
xor
cld
sbb
enter
je
add
push
mov
xor
das
push
movs
xchg
lods
stc
and
push
fwait
cmc
sub
(bad)
(bad)
movs
mov
das
mov
rol
sbb
add
pop
cmps
or
(bad)
out
mov
xchg
sti
nop
call
je
stc
mov
in
clc
fs
pop
mov
push
cwde
das
aad
xchg
cmp
leave
in
sub
mov
cmp
add
or
aas
in
mov
pushf
pop
jle
pop
xchg
jp
jle
stc
jae
test
fnsave
ret
mov
imul
pop
pop
mov
and
cmp
cmp
fwait
mov
and
xor
cmp
pushf
rcr
rol
xor
cmp
idiv
cmp
fadd
mov
jnp
jne
dec
dec
icebp
ins
and
aaa
out
arpl
and
in
xlat
dec
ret
hlt
ss
mov
outs
dec
fldenv
ins
and
movs
cmp
mov
and
xchg
lds
cld
loopne
inc
adc
pop
aas
out
cmc
or
clc
jmp
mov
inc
xchg
mov
cmp
pop
xor
mov
sbb
mov
push
jbe
add
stos
add
imul
or
jns
lods
mul
inc
and
cmp
stos
jmp
loopne
pop
(bad)
lods
mov
jb
mov
movs
push
and
cmp
xlat
sub
mov
mov
xor
loopne
ins
das
add
jnp
call
int
pop
and
in
call
clc
sar
test
and
mov
cwde
cmp
and
mov
jmp
in
ficomp
mov
add
lods
cmp
xor
fsub
mov
lock
ins
sbb
cmp
push
into
sbb
pop
dec
jns
pop
jp
popa
nop
pop
push
sbb
push
pop
jl
mov
imul
adc
inc
cdq
sub
pop
jo
lahf
hlt
or
cld
fsubr
sub
repz
adc
out
sub
push
sub
and
(bad)
dec
shl
push
(bad)
lock
shl
daa
repz
mov
mov
add
mov
add
sub
jmp
fsubr
xchg
gs
push
jns
lods
lods
inc
dec
jnp
xchg
lods
ins
pop
das
ja
cmp
mov
xchg
fcom
(bad)
jl
repnz
xor
repz
push
ins
and
sub
stos
fs
icebp
cmps
cmp
es
(bad)
pop
jmp
xor
int
dec
sbb
ds
imul
push
std
addr16
hlt
dec
sub
dec
adc
xor
test
xchg
xchg
outs
dec
cld
mul
dec
test
outs
inc
or
mov
mov
popa
jecxz
bswap
jl
ins
cmps
adc
dec
loope
inc
inc
inc
lea
pop
lods
mov
loope
icebp
cld
inc
pop
ror
es
dec
pop
inc
leave
test
sub
ror
jmp
cwde
add
popa
gs
pop
xchg
jbe
cdq
enter
scas
mov
ret
sahf
out
or
es
nop
xor
hlt
pop
(bad)
sti
ins
mov
lea
inc
or
mov
or
sub
fstp
lahf
leave
out
call
jp
xchg
cmps
pop
push
dec
cmp
jge
cmps
cmp
(bad)
adc
push
fsubr
push
loop
dec
loop
mov
sub
loope
into
jae
mov
popf
fstp
fucomi
addr16
stc
out
cmp
in
movs
add
pop
aad
pop
(bad)
iret
movs
ja
mov
jmp
pop
cwde
jae
xlat
ret
clc
cmps
aam
add
add
call
movs
mov
stos
nop
popa
inc
(bad)
loopne
dec
in
xchg
mov
xor
sub
test
sub
add
rol
fdiv
push
adc
sti
xor
lods
movs
or
hlt
jg
pop
adc
mov
shl
mov
sub
xchg
cmp
(bad)
cwde
xchg
fwait
cdq
movd
mov
push
cld
retf
test
sbb
daa
test
sahf
int3
jne
ficom
xchg
jge
icebp
add
xor
fwait
(bad)
cmp
icebp
add
sub
loop
fadd
idiv
mov
xor
gs
mov
add
lods
pop
jne
int
or
outs
ins
cmp
pop
jmp
lods
clc
mov
mov
movs
add
aam
and
sub
and
mov
xor
fwait
lea
sbb
(bad)
lds
mov
sub
add
aaa
jmp
rol
mov
jo
data16
mov
(bad)
frstor
mov
enter
fstp
mov
and
repnz
xchg
pusha
(bad)
and
dec
adc
loopne
mov
in
es
dec
pop
push
inc
fcom
int
mov
sti
pop
sub
mov
sub
fst
ss
hlt
xchg
jmp
push
daa
inc
not
xchg
popa
push
add
and
outs
sbb
xchg
cmp
add
sbb
scas
outs
xor
cmp
jb
ss
mov
push
and
and
jecxz
mov
test
sar
fst
mov
out
cdq
jnp
int
or
data16
inc
js
cmc
mov
xchg
js
xchg
adc
call
jns
jge
mov
push
xchg
cdq
mov
jbe
stos
cmp
(bad)
ss
sbb
mov
(bad)
cmp
mov
int
mov
jns
inc
fwait
test
jno
cmps
sbb
icebp
mov
movs
cmp
leave
inc
cs
nop
scas
push
mov
aad
sar
fs
xchg
dec
and
mov
dec
jp
scas
mov
mov
pushf
mov
cvtps2pd
cmp
pusha
push
push
inc
cmps
sbb
(bad)
push
out
jo
cmp
mov
push
scas
jmp
pop
sbb
sub
adc
shl
pushf
or
bound
ret
mov
enter
sub
lock
inc
ins
add
into
add
test
sub
leave
cdq
stos
jge
out
lds
or
sti
cmc
push
mov
popf
inc
inc
sbb
mov
jl
or
and
pushf
lock
push
xchg
mov
push
pop
stos
out
xchg
(bad)
icebp
mov
jge
jo
ins
push
ins
iret
mul
cmp
add
jne
xor
dec
fbstp
fidiv
inc
sub
push
pop
data16
popf
retf
mov
fisub
shl
test
pop
lock
xchg
jb
loopne
lods
jmp
mov
ret
aam
in
or
fnstsw
sahf
(bad)
add
pop
ja
loope
pop
jo
loop
sub
mov
pop
ret
pop
cli
je
xchg
mov
std
and
movs
push
movs
lods
sub
cs
cmp
pop
cld
rcl
jns
add
and
sbb
(bad)
imul
mov
dec
ins
fild
mov
mov
xor
gs
sub
shl
std
jo
fcomi
push
loope
adc
xor
enter
xchg
fsub
sbb
push
fucomp
add
mov
or
sar
jl
mov
(bad)
jmp
cwde
int
loope
push
dec
add
add
inc
movs
mov
aad
push
cmp
mov
push
push
mov
sbb
xor
push
sar
sub
sar
int3
ret
dec
cwde
movs
xchg
and
shl
and
or
add
jmp
cmp
outs
out
fisttp
mov
jns
adc
pop
je
add
jnp
lods
mov
push
fild
xchg
push
mov
xchg
jb
lahf
add
push
cdq
pusha
enter
push
jae
cld
mov
sub
sub
sub
add
xlat
je
aam
movs
enter
out
lea
add
stos
lahf
pusha
and
adc
jno
div
cmp
sub
and
dec
adc
std
dec
popa
dec
adc
sub
inc
icebp
adc
cli
xlat
shr
js
enter
movs
sub
add
xor
push
add
pop
out
stos
arpl
div
jge
pop
add
mov
rcl
into
mov
aam
test
mov
sbb
push
(bad)
pop
mov
fs
les
adc
push
popa
inc
pop
sub
je
xor
dec
lods
jbe
inc
in
(bad)
pop
fs
enter
scas
adc
out
shr
dec
xchg
or
mov
sbb
adc
add
pop
arpl
sbb
ja
sbb
(bad)
stos
stos
cmp
pop
push
push
inc
inc
jns
jle
jne
adc
mov
(bad)
fistp
cld
(bad)
(bad)
mov
mov
aad
imul
cmp
in
cdq
jmp
inc
cld
mov
push
adc
sbb
(bad)
popf
cmps
inc
pop
add
(bad)
xchg
cli
popa
fdiv
scas
rcl
mov
cmp
cmps
mov
in
bound
xor
inc
aad
cmp
enter
out
jno
leave
xor
adc
cmp
frstor
fisubr
or
and
fs
and
mov
mov
popf
dec
or
or
jl
dec
push
and
cs
into
xor
cmp
mov
jno
dec
sti
xchg
and
test
jecxz
jne
and
inc
std
push
popf
nop
jns
push
jnp
test
cmp
rcl
or
popf
add
mov
jp
and
xor
or
ss
test
or
in
fimul
push
in
xor
adc
lods
sbb
or
sbb
mov
movs
not
jmp
aam
sub
jns
mov
out
sub
jg
(bad)
sbb
xchg
push
outs
(bad)
shr
in
ja
sbb
loop
add
ss
(bad)
xor
xor
bswap
loopne
sbb
(bad)
or
pop
xor
cmp
mov
push
xor
aas
aam
es
sbb
mov
out
or
sbb
adc
xchg
cmp
fdiv
(bad)
jp
sbb
(bad)
fcmovu
pop
rcl
popf
jmp
data16
jns
jae
loopne
jmp
das
mov
call
stos
js
xor
or
sbb
cwde
lods
mov
inc
retf
mov
hlt
sub
out
push
aaa
js
mov
into
xchg
xchg
jmp
xlat
popa
xchg
jbe
dec
sbb
in
or
stc
ins
xor
(bad)
ror
adc
retf
(bad)
fbld
idiv
cmp
popf
neg
je
and
cld
adc
pop
mul
cmc
sbb
sub
mov
imul
mov
jbe
mov
inc
mov
and
fmul
(bad)
stos
daa
out
and
cvtps2pd
pushf
pop
xchg
sbb
(bad)
jb
movs
lds
add
nop
sub
in
cmp
push
mov
shr
mov
call
xor
cmp
pop
popf
mov
mov
dec
fdivr
and
pop
mov
or
ins
fiadd
shl
adc
inc
ror
js
out
aaa
add
nop
mov
iret
retf
cmp
lock
or
ror
fs
mov
and
stos
push
cmp
mov
add
xlat
dec
inc
or
(bad)
rcl
enter
int
(bad)
leave
cmp
cli
xor
jnp
and
repz
xchg
aaa
imul
xor
call
xor
sub
out
jo
lods
mov
and
sbb
rol
cmp
push
sbb
shl
sbb
mov
fdiv
inc
repz
mov
pop
push
jb
adc
cmp
pop
loop
out
leave
ins
add
mov
or
rcl
scas
inc
stos
add
xor
or
aam
xchg
mov
inc
pop
or
out
std
gs
leave
fdivr
stos
test
stos
push
mov
into
sar
mov
iret
sbb
mov
into
sbb
(bad)
stos
pop
cdq
into
mov
jb
mov
(bad)
aad
pop
mov
(bad)
jo
jne
loope
out
push
(bad)
jmp
cmp
lds
add
fidiv
aas
inc
adc
call
jmp
arpl
dec
push
push
mov
or
das
cs
xchg
hlt
jno
data16
std
adc
inc
ss
mov
push
hlt
sahf
ins
out
add
add
xchg
aaa
adc
scas
push
add
xor
sbb
cmp
inc
mov
pop
dec
pop
popf
(bad)
sub
sbb
repz
dec
sbb
repnz
rcl
and
mov
pop
sahf
jecxz
or
jo
or
rcr
push
enter
pop
sbb
aaa
bound
test
dec
sub
xchg
jmp
ins
cs
repnz
add
mov
mov
stos
mov
cld
cli
addr16
mov
xchg
push
dec
sbb
(bad)
mov
xor
jns
stos
sub
ror
clc
cmp
jecxz
shr
imul
pop
stos
cmp
sbb
retf
add
pop
inc
pop
rcl
bound
pop
lock
in
retf
nop
add
ss
scas
and
jno
mov
push
jmp
sub
mov
mov
cli
sti
out
adc
(bad)
neg
xchg
or
repnz
mov
mov
js
xchg
inc
fucomip
icebp
jne
adc
cwde
loop
jl
inc
call
or
push
imul
retf
jmp
lock
xchg
scas
movs
add
sahf
inc
sub
jmp
xchg
rcr
xchg
idiv
cmps
or
xor
push
push
call
or
les
ret
cmp
mov
clc
sub
jae
jle
mov
adc
daa
shr
popf
ins
and
dec
jmp
out
out
adc
movs
cmp
jecxz
jl
cs
rcl
scas
jmp
lock
xchg
add
pop
js
aaa
push
pop
mov
push
aad
mov
cwde
aad
popa
pushf
jbe
adc
cmp
test
addr16
adc
lea
mov
sub
int
or
jg
(bad)
aas
mov
fmul
xor
jnp
cmc
push
dec
ins
call
dec
clc
add
jmp
mov
add
and
das
push
push
fsubr
push
push
add
sti
aas
mov
xchg
(bad)
fdivr
and
mov
icebp
inc
and
mov
ret
cs
clc
std
add
dec
out
int
mov
lods
jno
jmp
and
fwait
loope
mov
push
inc
imul
cmc
xor
push
xchg
clc
jp
sti
jmp
push
js
sub
dec
mov
jo
cli
or
mov
mov
inc
in
sbb
or
jmp
mov
lods
inc
or
test
rcl
mov
cmp
xor
adc
dec
mov
or
and
sbb
leave
nop
push
or
jno
sti
inc
retf
scas
jle
or
je
fs
ss
sbb
xchg
xchg
jg
xor
inc
mov
inc
sbb
push
inc
fistp
sub
pop
mov
pop
add
mov
dec
sar
push
jns
dec
xor
call
addr16
ficomp
add
stos
pop
ret
and
daa
ret
shl
mov
call
jbe
jae
cmp
into
push
(bad)
iret
out
sub
in
cmc
sub
test
bsf
xor
xor
add
sbb
imul
addr16
xor
inc
jmp
retf
and
leave
jae
(bad)
or
mov
fisubr
mov
das
cld
mov
xor
or
mov
mov
(bad)
sub
adc
outs
ret
cmp
je
xchg
mov
add
mov
adc
imul
pop
inc
sbb
gs
sub
idiv
or
pop
jb
add
jg
dec
pop
out
cwde
add
movs
and
(bad)
aam
cmp
xor
or
xor
mov
rep
xor
pop
sub
push
sar
pop
imul
fild
mov
outs
add
cs
push
lods
shl
mov
ja
dec
fnstsw
push
shr
mov
daa
shl
pop
add
pop
repnz
jge
stc
mov
and
into
out
push
mov
sbb
mov
jmp
(bad)
in
arpl
jo
sbb
or
cmp
test
push
outs
jb
sar
retf
sahf
xchg
scas
in
lods
test
out
call
sub
jg
push
pop
in
loop
dec
dec
cmps
lods
mov
mov
sbb
in
jmp
and
fld
mov
stos
xchg
jp
in
push
fisub
jmp
inc
mov
call
add
xor
mov
inc
inc
mov
mov
and
and
sbb
fisubr
into
ins
stos
cld
push
mov
lahf
jge
sub
pop
in
dec
sub
cmps
dec
outs
in
or
dec
cmp
pusha
add
in
ret
loope
imul
(bad)
sub
push
jecxz
or
mov
and
xchg
gs
dec
sub
jae
out
add
rol
mov
aaa
mov
enter
aaa
jne
add
and
cmps
mov
popa
les
mov
sub
je
pop
sub
mov
ds
fsubp
xchg
movs
cmp
cmps
xlat
loope
push
xlat
xor
jno
popa
jmp
sub
lods
mov
mov
pusha
xchg
pop
sbb
movs
mov
pop
mov
sbb
or
das
ficom
int3
mov
stos
push
daa
pop
adc
push
ror
(bad)
rcr
repnz
fistp
aas
or
je
outs
jmp
jo
sbb
mov
push
sbb
call
adc
mov
imul
xchg
(bad)
ins
xchg
aas
leave
jl
aad
push
sti
and
test
cs
rcr
es
pushf
cs
daa
push
shr
or
fprem1
mov
mov
sahf
imul
jmp
(bad)
cs
xchg
pop
pop
hlt
and
arpl
cdq
mul
rol
ja
or
shl
mov
rcl
cwde
mov
std
dec
fnstsw
mov
cmp
movsx
dec
and
pop
ins
test
sbb
je
ins
mov
dec
mov
mov
pop
mov
aam
push
push
jge
mov
or
and
lods
mov
pop
pop
sbb
rcr
jno
clc
test
cmp
ret
cmc
frstor
sub
lahf
sub
xchg
in
pop
das
push
add
jo
pop
or
outs
les
sub
mov
icebp
mov
inc
mov
jnp
jg
dec
movs
movs
lock
and
adc
or
and
shr
pop
fwait
push
mov
fs
jns
mov
xchg
out
sbb
or
sbb
inc
sbb
in
pop
nop
adc
fsub
ds
mov
xchg
shl
faddp
mov
sub
fdivr
and
enter
add
sub
mov
sbb
push
mov
fwait
scas
xchg
imul
aad
cmp
or
rcl
cmps
push
sbb
cmps
xchg
mov
cmp
sbb
dec
retf
add
add
push
inc
rcl
mov
retf
aam
lahf
mov
(bad)
lock
sub
out
shl
pminub
sti
gs
sub
xchg
sbb
popf
in
scas
xor
test
mov
out
test
movs
into
pop
add
(bad)
mul
xlat
ss
mov
sbb
movs
pop
and
adc
pop
dec
pcmpgtb
push
jo
or
mov
inc
cwde
out
nop
outs
jmp
clc
xchg
ret
push
mov
icebp
test
shl
add
pushf
mov
popf
pop
push
hlt
loopne
mov
jne
in
dec
cmp
(bad)
cmp
aad
lea
inc
enter
pop
xchg
xlat
mov
test
or
cmp
cmp
inc
lods
dec
das
iret
ret
mov
pop
sub
clc
into
push
xor
xor
cdq
mov
lods
and
lahf
fs
push
es
mov
lock
aaa
adc
bound
push
gs
sbb
cs
fidiv
lea
add
test
inc
lahf
adc
stos
push
cmp
and
test
jle
and
push
inc
or
cld
aam
jp
pop
mov
mov
aam
test
sbb
fwait
jno
xchg
dec
fsubr
dec
in
sub
cmp
dec
scas
div
pop
fnsave
sbb
(bad)
pop
mov
arpl
pop
call
mov
test
mov
ins
stos
dec
adc
sub
mov
aad
xor
mov
inc
inc
add
pop
retf
adc
js
jle
jmp
add
popa
int
scas
inc
(bad)
mov
call
sub
sub
test
sahf
push
push
push
mov
and
mov
inc
mov
aas
loope
fst
test
popf
jp
lahf
fld
jg
movs
cli
std
and
inc
jl
xor
jns
cld
sbb
cmp
gs
jl
or
xor
push
ds
push
xor
(bad)
stos
iret
adc
adc
out
cdq
and
out
xchg
push
cmps
mov
cmp
adc
orps
rol
mov
mov
and
mov
nop
dec
add
adc
in
data16
enter
ins
jmp
in
mov
add
or
ins
ins
scas
frstor
ror
jg
adc
mov
ds
sti
ins
jnp
cdq
out
cli
pop
push
jmp
xchg
mov
(bad)
ret
(bad)
jno
mov
xchg
and
add
mov
jns
sar
mov
jns
fidiv
push
push
cli
(bad)
out
cmp
xor
stc
bnd
ret
adc
xor
mov
xor
jne
or
dec
js
xor
in
adc
iret
inc
(bad)
push
mov
jl
imul
or
push
inc
data16
cmp
fidiv
pop
ss
push
in
mov
pop
cmp
mov
mov
bound
xchg
icebp
(bad)
jo
nop
add
popa
pop
fbstp
daa
ret
mov
and
jle
int3
jns
repnz
mov
(bad)
popa
jne
xchg
and
jle
call
push
ss
or
and
cmp
mov
sbb
addr16
sbb
adc
pop
adc
sbb
cli
inc
retf
pop
(bad)
fucomi
jp
test
dec
adc
push
mov
cmp
jg
and
cmp
sub
cli
cmp
sbb
lods
int
mov
inc
repz
mov
inc
pop
or
in
xchg
sbb
std
mov
ss
pop
sti
adc
into
call
jnp
fistp
push
sub
addr16
cmps
mov
jl
stc
in
idiv
(bad)
test
xor
nop
sub
movs
mov
jp
scas
dec
iret
ins
mov
dec
push
jmp
out
mov
(bad)
ins
outs
ds
repz
arpl
dec
les
xchg
add
and
xor
fdivr
fwait
cmc
add
scas
popf
jecxz
in
mov
imul
mov
add
cld
mov
fiadd
call
mov
sub
je
mov
jne
in
cmp
and
gs
imul
push
repnz
mov
in
leave
mov
dec
cmc
sahf
out
dec
jmp
fld
mov
and
and
ret
dec
mov
pop
mov
repnz
pop
push
push
mov
cmp
dec
lds
pop
sti
andnps
aam
rol
cs
pusha
push
push
jmp
pop
dec
and
pushf
aaa
js
in
dec
cmps
lods
hlt
icebp
sbb
inc
retf
imul
inc
pop
or
ja
sbb
push
xchg
dec
adc
dec
mov
pop
cwde
cld
outs
test
shr
gs
stos
repz
sub
jno
mov
inc
out
mov
pop
ins
xchg
in
jno
retf
shl
imul
mov
adc
inc
sbb
stos
call
pop
clc
out
mov
push
cmc
or
ins
ins
fiadd
in
or
and
shr
icebp
(bad)
xor
inc
xor
nop
mov
ins
mov
int
xchg
movs
jnp
call
lahf
imul
neg
fild
arpl
nop
push
adc
xor
push
sub
test
in
mov
sbb
cmp
out
and
test
xchg
into
leave
stos
mov
sbb
mov
mov
inc
arpl
jns
mov
pop
xlat
out
shr
inc
retf
fs
outs
push
push
mov
mov
into
jecxz
mov
mov
dec
jns
jle
icebp
mov
mov
inc
fld
xchg
retf
div
scas
movs
or
jns
inc
in
cwde
cld
sar
xchg
mov
and
mov
pop
aas
mov
loopne
push
pop
pop
sub
pop
xlat
adc
aas
pushf
dec
fsubr
cdq
jo
jg
ror
cwde
std
mov
iret
hlt
adc
inc
sub
xchg
mov
sti
jl
push
mov
push
and
mov
cmp
or
jb
popa
jmp
xor
stos
xchg
mov
outs
retf
call
xchg
pop
sbb
jns
mov
pop
scas
mov
pusha
mov
adc
mov
push
(bad)
in
movs
inc
mov
ja
das
sbb
icebp
pop
pop
mov
xchg
push
dec
cmp
and
in
add
jo
jmp
mov
jmp
bound
and
add
jecxz
mov
retf
jp
xor
ds
call
xor
es
pop
cmp
int
imul
dec
in
cmc
sbb
repnz
in
sbb
dec
(bad)
pusha
push
aas
shl
sbb
xor
dec
and
fbstp
push
test
pushf
pop
mov
mov
inc
sti
sbb
mov
enter
adc
xor
clc
sub
pop
out
sbb
dec
dec
lods
jb
ins
addr16
out
imul
push
adc
mov
je
movs
or
fadd
fisubr
jg
cmp
adc
mov
cmp
ins
shl
add
dec
bound
mov
iret
mov
dec
repz
xchg
xor
add
(bad)
inc
xchg
stos
inc
adc
jecxz
sub
repnz
repnz
icebp
xor
sbb
lds
unpcklps
(bad)
div
lods
ret
or
adc
lods
into
xlat
adc
pusha
xchg
cmps
xchg
push
lahf
cmps
bnd
out
adc
sbb
(bad)
mov
sti
scas
cmp
cmp
ret
mov
push
imul
or
sub
pop
not
into
stos
fidivr
stos
ins
jge
fisttp
imul
cmp
into
jle
into
inc
addr16
cmc
in
nop
dec
out
test
mov
call
mov
inc
cmp
int
or
loop
inc
lock
dec
fcom
ins
fcomip
(bad)
mul
mov
jmp
dec
sub
fadd
jae
shl
push
mov
in
loope
(bad)
push
out
fcomp
mov
xchg
mov
int
mov
rcl
inc
cmp
or
inc
xchg
scas
sub
loop
jge
or
ds
pop
mov
aas
movs
inc
and
inc
in
jp
repz
and
xchg
and
push
ja
mov
das
lods
int
adc
ficom
popa
sahf
add
pop
add
ss
(bad)
shl
inc
sti
imul
cmp
call
or
xor
xchg
or
je
jmp
test
cmps
in
test
xchg
(bad)
push
fcom
loop
dec
je
xlat
ror
xor
jmp
imul
cdq
adc
fnsave
mov
mov
jb
xchg
in
movs
retf
dec
inc
out
inc
(bad)
jo
das
cmps
add
mov
dec
pop
mov
ins
mov
and
push
xchg
cmp
das
xchg
mov
fldcw
rcr
pop
or
cli
inc
aam
xor
(bad)
fild
hlt
das
xchg
and
jno
pop
xor
fisubr
dec
mov
adc
or
jno
push
adc
test
lahf
cmp
adc
ret
inc
and
clc
xchg
aad
cmp
or
in
or
jnp
sti
mov
xchg
pop
hlt
data16
das
mov
jp
dec
push
mov
int
cmp
bound
inc
sbb
sbb
xor
ds
out
dec
jnp
hlt
les
in
pusha
sub
ret
add
xchg
mov
nop
pop
loopne
xchg
sbb
add
stos
mov
cdq
bound
in
sub
pop
pop
mov
aaa
fadd
xchg
adc
test
pop
jo
cmp
into
add
shr
xchg
adc
(bad)
mov
ss
mov
adc
xchg
xchg
ror
loop
dec
inc
or
inc
add
jns
scas
iret
mov
sub
call
ins
push
push
mov
jmp
popa
movs
pop
out
outs
push
jmp
sar
sahf
jl
mov
xor
ins
int3
jl
sar
sub
push
imul
inc
int
sbb
mov
sbb
xchg
sub
aaa
sub
call
cmp
repnz
mov
out
stos
adc
mov
popf
and
pusha
or
(bad)
loopne
fidivr
lods
mov
std
js
ds
jmp
push
imul
leave
fidiv
sub
(bad)
xchg
adc
jnp
and
add
jne
sbb
fcom
sub
dec
adc
adc
mov
xchg
inc
mov
dec
aad
out
repz
add
imul
cld
fwait
jno
mov
data16
push
xchg
ret
sar
test
sbb
rcl
mov
cmp
xchg
stos
cmp
dec
cdq
sub
in
sar
movs
push
add
fild
and
imul
pop
stc
xor
dec
movs
inc
(bad)
dec
imul
jne
sar
push
scas
cli
test
pop
and
pop
push
sub
imul
push
rcl
pusha
push
iret
div
push
ror
fs
cli
xchg
rcl
in
xor
inc
shr
test
pop
test
mov
ds
in
jmp
sub
pushf
push
lahf
jg
mov
clc
pop
into
push
retf
push
xchg
mov
js
sub
js
(bad)
mov
mov
cmp
ss
sub
xor
js
mov
jge
xchg
jg
inc
mov
lea
lds
popa
pop
rol
dec
xor
mov
outs
mov
inc
int3
xlat
loopne
sub
cmp
jae
or
loopne
popf
ss
lea
push
fs
(bad)
cmp
out
sub
mov
lea
dec
xor
pop
daa
pop
mov
sahf
xchg
xchg
sar
and
sub
jo
lods
push
adc
push
adc
popa
xchg
jg
jno
jmp
add
dec
xchg
cmp
sub
pusha
pop
test
in
mov
mov
cs
repnz
mov
call
sbb
or
popf
jbe
and
test
sub
js
mov
jns
cmp
pop
lods
nop
and
pop
push
cmc
cmp
ins
and
sub
jmp
push
jecxz
aas
or
adc
ret
(bad)
aas
sub
or
jae
pusha
cmc
(bad)
xor
neg
outs
fdiv
inc
xor
and
out
ins
in
mov
fs
popa
cwde
add
loop
mov
sub
mov
dec
leave
fs
xchg
adc
aam
aaa
nop
xor
sub
add
fwait
sub
inc
dec
addr16
clc
cmps
push
or
ins
fnstcw
mov
aaa
mov
lock
js
mov
arpl
xchg
(bad)
in
outs
sub
xor
sbb
sub
sar
sub
jl
retf
(bad)
imul
pop
sub
sub
ds
add
xchg
sub
(bad)
xor
push
inc
cs
adc
(bad)
neg
xor
xchg
fnstsw
pop
sub
mov
adc
int3
mov
into
jmp
sub
rcr
out
adc
inc
packuswb
push
cmps
mov
ins
mov
mov
push
xchg
out
jo
mov
cmc
push
fisub
lock
lods
sbb
cwde
inc
fmul
add
lea
inc
xchg
inc
and
scas
retf
or
inc
lods
sub
cmp
xor
jmp
and
mov
inc
xlat
out
jnp
shl
(bad)
imul
mov
test
das
and
sbb
mov
xchg
jecxz
adc
pushf
xchg
test
mov
(bad)
push
fwait
imul
pop
sub
dec
stos
leave
pop
jno
scas
adc
add
xor
xlat
pop
xlat
std
gs
out
and
push
inc
ja
xor
xor
test
cmp
cmps
adc
mov
scas
aaa
sbb
daa
cld
js
and
shr
mov
dec
rol
push
and
sub
dec
mov
add
rol
xchg
rcr
std
xchg
gs
mov
sub
in
movs
and
int3
mov
pop
cwde
or
gs
je
rcl
call
xor
inc
dec
pop
dec
nop
dec
adc
sub
mov
fdiv
out
loopne
fs
stos
pusha
cmc
into
mov
imul
cmc
fwait
mul
push
xchg
mov
rcr
sahf
push
mov
mov
js
and
adc
ds
retf
xchg
jmp
sbb
xchg
bound
arpl
je
xlat
sub
ja
pop
sbb
fcomip
nop
cmps
lahf
data16
fidiv
and
sahf
adc
adc
adc
sub
mov
sbb
lds
shr
fstp
add
cmp
call
mov
pop
sti
outs
aaa
fild
mov
xor
add
stos
ss
test
stos
jg
mov
push
add
fst
test
dec
imul
repnz
xlat
pop
loope
mov
xlat
jo
and
xchg
imul
and
dec
jns
out
jle
cmc
into
mov
xor
fsubr
and
sub
or
jmp
push
inc
xchg
call
adc
xchg
je
mov
imul
dec
nop
popa
dec
dec
dec
and
clc
push
out
push
nop
jae
add
(bad)
(bad)
mov
mov
adc
push
repnz
mov
jle
popf
mov
loopne
mov
jg
lods
out
ja
inc
stos
mov
jne
xchg
dec
and
inc
bound
pushf
test
int
enter
xchg
adc
xchg
test
jg
mov
push
jmp
dec
adc
mov
rcr
ret
repz
xor
jne
bound
movs
xor
sub
inc
adc
jno
lds
movs
pop
scas
out
rcr
cmp
movs
inc
loope
out
mov
mov
or
fsubr
mov
cmp
push
xchg
xchg
mov
xchg
fiadd
mov
mov
out
mov
mov
or
lock
mov
push
in
fld
pop
aam
mov
push
idiv
or
ja
shr
bound
gs
mov
add
loop
jmp
hlt
add
dec
xor
or
cmp
jb
retf
sub
cmps
arpl
mov
imul
test
cmp
in
dec
aam
test
call
cli
fdivr
out
lods
sti
pusha
movs
xchg
sar
fld
in
ficomp
jb
es
pop
lock
out
jbe
dec
mov
dec
jae
dec
test
pop
jb
pop
sbb
test
lock
jge
pop
lods
add
loop
scas
pop
jg
(bad)
cld
jmp
pop
in
push
xchg
gs
or
enter
rcr
call
imul
mov
je
popa
dec
(bad)
imul
scas
mov
js
ret
mov
xchg
push
mov
in
inc
int
xchg
mov
fcmovu
lds
cwde
iret
mov
cmp
xor
adc
mov
sbb
push
aas
mov
adc
js
sub
adc
fsub
inc
jle
inc
cmc
mov
cdq
outs
and
sti
jmp
push
sub
push
fnstenv
fst
psadbw
test
xchg
cmc
or
shl
mov
sbb
inc
or
leave
dec
push
jle
aam
cli
or
loop
xor
dec
pop
cmp
leave
sar
or
lock
rcl
pop
and
jg
fisubr
pop
sub
push
pop
aam
leave
mov
add
sbb
arpl
sub
add
in
xchg
sub
ret
cmps
mov
mov
into
nop
fild
jo
std
cmp
mov
loope
dec
pop
mov
xchg
pop
popa
ins
test
js
test
add
inc
adc
fisttp
jnp
sub
inc
mov
jp
jne
lods
mov
outs
jl
dec
mov
lods
call
stos
xor
daa
inc
mov
rol
jns
inc
mov
push
mov
and
inc
lods
ret
aad
xchg
bound
fild
cdq
xor
mov
adc
sbb
(bad)
xlat
jg
xor
fmul
inc
leave
or
inc
sub
and
pop
idiv
ds
stos
sahf
(bad)
jbe
hlt
xor
popa
jmp
sub
ins
mov
scas
and
adc
test
pop
adc
mov
fwait
mov
lock
dec
and
mov
mov
sbb
cmp
mov
sti
call
dec
jmp
adc
mov
push
and
sar
xchg
test
push
test
jnp
out
repz
jne
adc
mov
cs
cmp
or
nop
cmp
pop
mov
adc
ret
mov
jb
push
ja
inc
pusha
mov
cmp
ret
adc
cmp
fcmovu
push
mov
not
ins
scas
dec
mov
mov
pop
mov
pop
cld
(bad)
adc
in
mov
or
div
in
pop
sub
dec
xor
sbb
add
in
cmps
jl
xor
test
jecxz
ds
push
dec
cmp
xchg
pop
js
mov
xchg
push
and
xor
sub
mov
push
or
icebp
int3
out
mov
adc
xor
mov
jg
add
ficom
(bad)
icebp
sahf
sar
sbb
out
inc
pop
xor
test
inc
idiv
mov
lods
adc
or
sub
sbb
xchg
and
xchg
out
jae
jbe
sti
es
inc
pop
mov
mov
cmp
cmp
fld
icebp
mov
sub
dec
cdq
mov
mov
js
push
arpl
fdivrp
dec
shr
adc
movs
mov
test
in
scas
pop
xor
fmulp
mov
dec
cs
mov
adc
cmc
jbe
stos
dec
dec
lods
int
ss
loop
stc
pop
mov
cmps
push
enter
xor
push
mov
aas
not
push
in
pop
leave
fwait
hlt
adc
inc
dec
sbb
add
mov
int
jne
pop
sar
and
vmwrite
mov
aas
pop
pop
aaa
icebp
addr16
icebp
xchg
mov
pop
push
and
in
xchg
add
add
mov
or
pop
imul
xor
sub
not
sub
sub
mov
mov
or
add
pop
ja
in
jp
ins
popa
test
inc
repz
rol
std
xor
leave
cmp
(bad)
call
out
adc
pusha
ds
mov
jl
add
outs
cmps
inc
icebp
movs
out
sub
pop
outs
pop
jmp
or
pop
aam
sub
push
nop
dec
mov
stos
adc
fimul
xor
mov
or
xor
jns
jp
jo
shr
push
(bad)
in
push
imul
inc
jl
mov
test
jno
dec
aaa
jle
sbb
adc
pop
inc
jb
cwde
jns
mov
sub
fstp
sub
ret
and
aas
data16
ret
mov
repnz
call
ret
daa
jle
inc
clc
mov
ror
sbb
dec
cmp
pextrw
cdq
sbb
xchg
mov
cdq
(bad)
fwait
sbb
cmc
inc
aaa
inc
adc
dec
jmp
mov
adc
stc
adc
hlt
fwait
movs
inc
cmps
mov
imul
clc
push
jne
or
sar
sub
in
lods
sub
outs
sub
lods
pop
rol
cmp
xchg
sbb
inc
push
jae
lahf
pusha
dec
jg
lods
mov
stos
cmps
clc
adc
or
xor
mov
lods
jp
jle
test
push
inc
fist
jo
(bad)
inc
mov
adc
clc
and
sti
dec
dec
adc
push
mov
lds
inc
pop
cdq
aas
jb
or
icebp
repz
imul
xchg
loop
push
cmps
push
cmp
repz
sub
in
cmp
jmp
fmul
add
xchg
mov
xor
sub
retf
push
int
mov
movs
pop
dec
out
cmp
push
js
inc
fisub
arpl
(bad)
leave
les
jg
cmp
sub
sbb
mov
sbb
sar
outs
jmp
jmp
mov
shl
inc
mov
data16
icebp
stos
mov
mov
dec
mov
push
add
ret
jmp
mov
or
bound
test
mov
(bad)
stos
outs
stos
mov
in
rcr
retw
push
jae
outs
out
xchg
and
push
out
mov
pop
sbb
(bad)
sahf
mov
or
pop
stc
cmp
jmp
xor
xchg
and
sbb
cmp
cld
ins
and
loop
push
jno
jecxz
cmp
(bad)
movs
dec
repz
adc
imul
popa
scas
leave
mov
ins
jae
pop
cmp
inc
lods
add
ret
ficomp
or
add
mov
xlat
dec
retf
xor
pop
shr
sar
nop
fxch
mov
xor
lds
mov
aam
fild
sub
adc
inc
gs
and
(bad)
pop
out
xchg
or
int3
jno
jae
cmp
dec
repnz
cmp
add
stos
mov
mov
stos
retf
cld
push
fisttp
dec
addr16
pop
and
mov
add
nop
cwde
inc
and
es
push
es
jbe
in
adc
cmps
clc
lock
sahf
jp
add
push
xor
outs
bound
cmp
aad
xor
pop
retf
jp
repz
lock
sar
test
fs
mov
jmp
inc
sbb
push
in
fadd
dec
(bad)
jbe
xchg
test
les
jecxz
std
stos
enter
jmp
lds
popf
sbb
outs
(bad)
jmp
fild
mov
neg
xor
adc
xor
ret
nop
shl
clc
jb
pop
sti
push
or
add
mov
jge
inc
jbe
xor
push
sub
adc
out
push
fisttp
mov
fist
push
jmp
test
adc
call
loopne
xchg
shl
retf
ins
dec
jge
gs
or
stos
mov
mov
jnp
mov
cmp
pop
das
in
imul
mov
xlat
iret
mov
sbb
stos
je
call
inc
movs
ins
mov
icebp
push
out
js
pop
mov
add
das
sahf
sub
add
jmp
fld
mov
push
aam
or
cld
inc
je
daa
lods
push
and
mov
nop
std
jo
scas
mov
imul
push
pop
shl
push
daa
pop
(bad)
call
aas
push
movs
or
inc
inc
push
jae
xor
dec
or
bound
sub
dec
enter
cmp
push
icebp
cmc
scas
xchg
(bad)
retf
cs
icebp
sti
call
pop
mov
mov
pop
mov
push
xor
and
add
test
sahf
pusha
test
cmc
aas
loop
and
or
(bad)
(bad)
sub
cmp
loopne
push
out
add
pushf
xchg
ins
dec
and
mov
ins
sbb
data16
sub
mov
shr
adc
sub
and
jg
arpl
loope
in
adc
dec
xor
lea
in
sub
ins
adc
loopne
add
or
jae
int3
clc
ret
lods
mov
mov
mov
dec
and
imul
mov
and
cmp
inc
push
add
ss
xchg
repnz
cs
aas
sub
cmp
add
test
jbe
mov
xor
iret
mov
mov
mov
pop
xlat
inc
in
sub
or
add
and
jle
sub
ret
or
add
mov
pushf
stc
daa
arpl
sbb
idiv
jbe
and
jae
dec
mov
cmp
fidiv
ins
sbb
pop
rcr
pop
push
idiv
fmul
pop
clc
pop
jg
cmp
sub
loope
loopne
jne
pop
adc
ret
and
jne
xor
jo
inc
into
cmp
mov
jns
aaa
cmps
jns
into
idiv
ins
xor
or
xlat
aaa
ds
retf
xor
daa
sub
ror
adc
inc
push
inc
sbb
loopne
mov
test
mov
cmps
pop
dec
pusha
jmp
xchg
xchg
cld
jb
nop
mov
out
inc
shr
and
sbb
loopne
jno
sub
in
repz
jl
gs
imul
arpl
sbb
adc
pop
sbb
(bad)
mov
test
add
movs
test
mov
xchg
jnp
icebp
retf
les
jbe
(bad)
cmps
sbb
in
fwait
scas
fwait
out
nop
cmp
sbb
xchg
push
rcl
cmps
push
adc
add
xchg
mov
mov
mov
mov
and
pop
aaa
push
mov
sub
loop
add
push
rcr
call
push
clc
xchg
add
xor
scas
mov
cli
push
mov
test
cmp
(bad)
int
cmps
pop
inc
sbb
jmp
aam
pusha
ficomp
mov
or
and
xchg
(bad)
cmp
ret
mov
push
xlat
xchg
js
shr
js
or
out
xor
and
in
stos
adc
fbld
sbb
xor
call
les
dec
push
mov
or
xchg
xchg
jmp
mov
movs
adc
jl
in
loop
fisubr
ret
dec
mov
stos
loop
rcl
clc
inc
or
enter
and
ins
sbb
mov
int
sub
xor
cmps
dec
out
shl
pop
inc
dec
sbb
and
lds
fcmovu
nop
mov
mov
iret
pop
dec
(bad)
mov
enter
sbb
xor
hlt
sub
lods
xchg
jg
sub
cli
add
mov
dec
lods
into
inc
xchg
aas
gs
jno
and
stos
dec
xchg
jecxz
cmp
test
nop
arpl
bnd
jmp
outs
jmp
inc
lds
imul
adc
mov
dec
cli
cmc
sbb
cwde
xor
push
in
imul
dec
lods
fld
fimul
mov
imul
and
sbb
xor
push
push
pop
loop
neg
pop
dec
push
adc
jnp
cmc
mov
fld
jo
arpl
push
jmp
jo
sahf
leave
(bad)
adc
xor
iret
sub
sbb
pop
scas
dec
mov
movs
or
mov
and
jmp
mov
xchg
mov
lea
in
push
add
push
call
mov
jae
lods
add
fld
inc
jns
inc
jge
jge
test
into
add
enter
dec
out
fcomp
or
hlt
test
cmp
fbstp
sahf
popf
and
push
cmp
cdq
in
test
push
mov
shl
jnp
lods
inc
and
add
sbb
pop
jnp
nop
and
cmp
cmp
dec
dec
push
out
cwde
inc
fnstcw
call
dec
arpl
inc
and
adc
shl
sbb
ja
lock
xor
movs
ret
fdiv
int3
xor
add
out
jne
nop
(bad)
jmp
sbb
push
loope
jbe
inc
in
pop
(bad)
jns
push
lock
sbb
pop
cmp
iret
sahf
xchg
out
pop
ror
shr
add
mov
jecxz
adc
imul
pop
sbb
jg
push
push
js
and
fwait
xor
les
pop
and
push
pop
adc
stc
stos
cwde
mov
dec
into
popf
cmp
mov
shr
(bad)
test
je
jno
lods
xchg
mov
or
data16
add
or
daa
adc
(bad)
rcl
push
push
xlat
imul
push
mov
and
imul
cmc
cmc
pop
push
push
mov
mov
rol
retf
mov
in
push
fdiv
aaa
adc
push
xchg
loopne
mov
mov
repnz
mov
sub
jno
test
bound
adc
call
idiv
or
fisttp
inc
push
fnsave
or
mov
aaa
sub
inc
adc
dec
jle
or
adc
(bad)
out
out
inc
ficomp
sub
cmc
dec
xor
jae
fdiv
mov
dec
hlt
inc
cmp
(bad)
hlt
psubq
pushf
idiv
xchg
xchg
xchg
je
ja
mov
push
inc
xchg
cmp
sub
retf
test
in
cwde
je
jno
pop
cdq
or
or
lock
push
jbe
(bad)
mov
push
mov
xchg
pop
mov
addr16
cld
cmp
ret
inc
shr
mov
pop
pop
jns
sub
sbb
inc
imul
sbb
dec
mov
cmp
xchg
mov
xchg
ja
test
and
sti
into
js
or
test
mov
xchg
test
cmp
ss
imul
sbb
repz
sub
mov
mov
(bad)
xor
sbb
jg
test
stos
mov
outs
aas
jbe
inc
in
or
gs
iret
jnp
pop
cmc
pop
loopne
lock
outs
sub
rol
test
mov
push
clc
adc
mov
add
in
sub
sub
xchg
cli
ds
imul
xor
inc
pop
xchg
xchg
sbb
shl
mov
daa
out
xchg
loop
(bad)
test
cmp
in
and
mov
inc
imul
aas
mov
push
push
shl
out
test
inc
stos
hlt
loope
es
mov
mov
jmp
fxch
loope
pop
ret
jae
les
je
jg
push
enter
jno
sub
retf
repnz
ins
cmc
xor
shr
jae
fbstp
inc
push
ja
js
pop
sbb
pop
jno
bnd
or
add
scas
call
sbb
push
iret
adc
cmp
cld
inc
ins
jecxz
adc
mov
sub
aam
pop
push
push
jb
jbe
repnz
iret
aam
lods
mov
inc
les
xor
movs
out
dec
je
jns
leave
jb
or
pop
and
(bad)
jnp
das
xchg
cmps
call
das
aad
dec
test
ds
(bad)
outs
adc
sub
lahf
call
shl
jg
xor
fistp
(bad)
mov
mov
pop
or
or
and
or
int
mov
jle
icebp
cmp
add
icebp
sub
jbe
(bad)
out
int3
mov
ja
imul
mov
outs
les
or
xchg
in
fadd
dec
pop
repnz
leave
loope
xchg
cmp
jo
movs
sbb
in
in
loope
inc
sub
push
cmp
dec
mov
popa
retf
hlt
mov
ret
cmp
inc
jge
sub
gs
push
push
xchg
into
cmp
cmp
mov
out
(bad)
les
out
bound
dec
les
dec
aad
cwde
inc
pop
and
mov
hlt
add
cli
add
test
and
sbb
test
and
push
dec
jmp
mul
xchg
test
out
lahf
jle
ja
fdivr
sub
in
arpl
xchg
rol
aad
in
and
sub
jnp
adc
mov
or
mov
ds
fmul
ss
or
jne
hlt
fist
push
pop
jl
xchg
fist
icebp
jge
ss
cli
sub
cld
jl
dec
push
lahf
es
or
loope
aaa
fisubr
mov
lds
sti
or
outs
lea
adc
jae
inc
jae
cmp
movs
cmps
mov
inc
retf
mov
mov
jle
add
and
ja
mov
pop
inc
adc
inc
push
mov
push
test
sbb
mov
nop
lahf
xor
inc
mov
inc
ficomp
(bad)
movs
stos
std
jmp
mov
sbb
es
dec
(bad)
loop
xor
mov
mov
dec
mov
inc
xlat
cdq
(bad)
fidiv
fist
retf
fwait
stc
sti
xchg
pop
or
push
test
cmps
jecxz
cld
mov
push
add
sahf
mov
ret
inc
es
int3
cmp
movs
xchg
sbb
pop
push
xor
std
inc
push
dec
pop
dec
jns
jge
fidiv
jl
cmps
jp
retf
push
jmp
mov
mov
retf
mov
add
push
adc
(bad)
std
fld
adc
xchg
xchg
pusha
push
lea
das
addr16
cmps
xor
sub
(bad)
test
mov
and
mov
psubusw
sbb
dec
sbb
retf
lods
cmp
cwde
xchg
pop
les
(bad)
push
adc
push
repnz
(bad)
(bad)
gs
call
push
int3
inc
test
cmc
pop
cmp
push
repnz
(bad)
mov
pop
cmp
mov
fwait
xchg
dec
imul
je
daa
mov
add
test
mov
leave
popa
push
aaa
sbb
mov
jns
iret
leave
mov
and
lahf
inc
cmp
push
mov
xchg
cdq
iret
xchg
(bad)
aas
xor
jbe
(bad)
xor
inc
cmc
aaa
nop
xor
inc
adc
add
jle
and
mov
add
cs
adc
outs
push
push
ret
(bad)
out
sub
pop
sub
cmp
aam
(bad)
sbb
fistp
sub
sahf
enter
fiadd
adc
and
int
imul
pushf
jg
hlt
int3
and
sar
movs
dec
fsubr
sbb
pushf
js
pop
mov
sub
inc
ret
xchg
inc
cs
out
es
xchg
mov
out
lods
xchg
pop
int
ret
jmp
(bad)
jnp
pushf
adc
movs
pop
pop
fwait
xchg
fidivr
xlat
sub
and
test
adc
or
retf
dec
sub
lahf
mov
hlt
or
mov
int
sub
cs
add
cmp
je
aam
push
push
jmp
xlat
js
pop
jnp
dec
pop
shl
out
fcomp
mov
sub
movs
cmp
nop
in
mov
fnstcw
cmp
ins
ror
pop
add
cmp
pop
cmp
lods
mov
rcr
mov
dec
ret
jo
jno
mov
in
pop
stos
cmps
xchg
fcom
rcr
movs
aas
iret
(bad)
stc
test
inc
sar
xchg
outs
adc
pushf
scas
push
shl
dec
lahf
pop
sub
or
jmp
or
or
cli
clc
out
shl
rol
jae
mov
gs
inc
dec
push
adc
sbb
pop
and
mov
imul
fstp
rdtsc
add
pop
xchg
int
jno
and
dec
in
pop
pop
js
push
int
aas
mov
repnz
cdq
fiadd
or
test
xchg
int3
sbb
dec
sub
scas
push
cli
cmps
xchg
(bad)
call
imul
sbb
pop
call
icebp
mov
(bad)
dec
mov
push
mov
mov
cmp
pop
adc
retf
add
pop
loope
fxch
mov
and
add
mov
jns
lahf
das
push
fdivr
xor
aam
pop
or
fnstcw
cdq
outs
rcl
out
sbb
push
xlat
add
scas
jmp
fisubr
loop
mov
dec
adc
aas
sub
hlt
or
scas
inc
sar
fild
(bad)
dec
sti
in
jmp
mov
mov
add
mov
(bad)
xchg
fucompp
pushf
pop
sub
cmc
mov
xchg
jae
stos
xchg
aam
add
pop
shl
test
and
xchg
jbe
xchg
rol
dec
mov
addr16
xor
mov
adc
add
shr
xor
es
dec
(bad)
mov
jb
inc
mov
shr
in
cwde
ffree
jg
pop
pusha
push
sub
sub
jmp
imul
xlat
xor
cld
pop
fs
fstp
cld
test
imul
ret
fs
mov
ins
or
and
xchg
push
xchg
pusha
(bad)
mov
add
hlt
xchg
cmp
push
sbb
fnsave
push
xchg
jns
mov
(bad)
bound
pop
or
stc
add
xor
scas
outs
add
pop
in
(bad)
movs
mov
sahf
mov
pop
cli
loope
jns
inc
les
in
cmp
mov
movs
fwait
mov
int
xchg
inc
mov
sub
mov
out
or
jmp
mov
jbe
mov
outs
xor
aaa
jae
aam
fst
xchg
(bad)
loope
aaa
dec
jne
into
sub
sbb
adc
or
inc
aad
sub
sbb
imul
jmp
inc
xor
jb
cmp
mov
dec
pop
cmp
repz
push
pop
sub
popa
lods
or
sbb
mov
(bad)
in
jns
fwait
xchg
xor
je
pop
jne
add
xchg
in
mov
add
xlat
rol
fsub
cwde
jle
sub
mov
jo
stos
nop
mov
jns
sbb
mov
push
dec
mov
inc
movs
aam
jnp
pusha
push
adc
mov
int3
mov
jmp
add
sbb
inc
push
jnp
adc
xor
sub
(bad)
aad
push
push
push
inc
lea
dec
adc
mov
(bad)
call
outs
add
out
jns
hlt
push
sbb
dec
sti
aaa
popf
outs
iret
sbb
push
dec
sub
lock
fild
loopne
mov
lock
xchg
cmps
dec
(bad)
hlt
push
adc
dec
into
iret
xor
icebp
mov
xchg
mov
cld
dec
leave
bound
mov
add
push
fidiv
push
lods
pop
mov
mov
push
mov
push
cmps
mov
movs
inc
dec
or
push
push
jne
pop
add
or
fbld
jmp
adc
aad
xor
and
outs
push
add
add
and
jnp
in
addr16
mov
pop
push
push
imul
cvtdq2ps
mov
outs
cmp
push
inc
mov
push
mov
mov
dec
sub
mov
sub
add
mov
add
fdivr
xor
pop
mov
call
or
fild
pop
cmp
or
push
int
xchg
dec
imul
stos
fwait
cmps
pop
pop
add
jb
sbb
sub
inc
and
inc
sub
xor
adc
les
popa
jl
sbb
cmp
out
push
lock
mov
mov
mov
repnz
loopne
mov
psubusw
cld
stos
fcomp
push
sbb
popf
jb
inc
test
gs
jae
mov
or
and
ins
lods
(bad)
clc
adc
xchg
into
mov
je
sar
or
push
movs
mul
inc
pop
cld
adc
(bad)
push
in
sti
stos
outs
fisttp
push
and
stc
les
imul
dec
enter
je
call
sub
pop
fwait
test
xor
xor
into
push
xchg
fisttp
loopne
adc
inc
cmc
out
sub
div
and
inc
jb
jnp
inc
mov
pop
sbb
cmp
pop
mov
sbb
je
cmp
stos
or
sub
ret
mov
in
iret
push
dec
daa
pop
pop
pop
push
das
push
repnz
int
pop
adc
and
loop
mov
mov
inc
push
ins
dec
fsubrp
sahf
inc
adc
lahf
mov
cli
sbb
mov
cld
dec
mul
and
out
mov
out
aam
ret
pop
push
add
adc
pop
sub
mov
lea
dec
fstp
ds
push
das
jo
mov
pop
imul
sbb
or
retf
inc
push
add
daa
xor
in
inc
fwait
pop
dec
outs
mov
sub
(bad)
ins
daa
stos
inc
nop
sub
(bad)
jle
dec
fldenv
mov
ficom
cld
mov
fbld
mov
mov
(bad)
aad
std
pop
cs
mov
lds
mov
jmp
(bad)
cld
inc
mov
rsqrtps
rcl
test
push
mov
adc
pushf
dec
or
sbb
movs
sbb
(bad)
lea
pop
mov
xchg
add
mov
loope
leave
cmc
in
std
mov
(bad)
bound
mov
stos
addr16
ins
xchg
jmp
mov
mov
scas
mov
adc
out
loop
ins
jnp
pop
sub
push
cmps
mov
gs
sahf
or
bound
jno
jb
idiv
ins
mov
mov
bound
dec
dec
push
js
test
pop
jle
into
and
dec
call
loopne
xchg
jl
movs
mov
sub
loop
sub
or
pandn
repnz
call
mov
dec
out
mov
sub
rol
dec
div
(bad)
xchg
push
xchg
or
lods
jbe
(bad)
enter
dec
call
jg
scas
mov
arpl
repz
sub
pop
shl
in
ret
retf
mov
mov
add
xor
stos
popf
enter
std
sbb
movs
cmps
sub
test
retf
push
adc
and
push
loop
push
inc
and
popf
jge
stos
add
mov
push
mov
shr
movs
out
jb
int3
iret
(bad)
xchg
cmc
add
repnz
and
retf
xchg
cli
push
xorps
fadd
mov
movs
mov
cmps
data16
xchg
daa
(bad)
fistp
fdivr
mov
loope
test
cmp
add
(bad)
mov
xchg
xchg
xchg
sub
push
inc
jno
sbb
loopne
dec
pop
push
call
cmc
sbb
cmp
jmp
pop
add
icebp
push
or
arpl
inc
and
pop
inc
xchg
push
mov
add
rcr
pusha
push
push
test
add
sahf
mov
fcom
movs
sbb
test
mov
imul
nop
cmps
xchg
dec
and
mov
lods
fild
jmp
stc
inc
xlat
xor
out
jns
inc
mov
sbb
jmp
aam
jae
cli
inc
xor
out
ss
in
enter
sbb
and
dec
adc
jno
ds
inc
out
dec
and
jae
ds
pop
out
fst
lea
mov
mov
enter
sub
xor
cmp
jp
mov
pop
jb
cld
or
in
test
(bad)
movs
add
shr
xor
jl
xor
fs
and
aad
dec
dec
add
ins
pop
xor
cmp
out
pop
das
sub
mov
loope
add
(bad)
sub
cmp
fist
int
mov
jle
jp
push
adc
dec
pop
xor
fwait
int3
fnop
push
xor
cld
fist
cmp
ins
mov
aad
jns
scas
retf
lods
adc
loope
loop
mov
fsubr
out
les
cmp
arpl
pusha
add
pop
dec
jl
popa
sub
pop
aaa
stos
xor
cmp
nop
adc
and
aas
retf
mov
mov
bound
dec
push
push
data16
lea
adc
push
xor
icebp
mov
sbb
cmps
xchg
sbb
dec
inc
xlat
imul
adc
lods
hlt
mov
call
imul
or
push
fcom
xchg
lods
or
pop
or
iret
in
stos
arpl
cmps
leave
js
mov
push
sbb
std
pop
test
repnz
in
xchg
mov
lea
jmp
mov
push
jo
sar
mov
fisttp
xor
xchg
in
test
ficomp
je
mov
jb
add
popf
retf
jnp
pop
adc
mov
ss
xchg
js
mov
sbb
cmps
(bad)
dec
mov
sub
fldenv
scas
xor
mov
in
adc
xchg
push
and
add
push
outs
pusha
fisub
repz
arpl
adc
push
or
scas
dec
mov
stos
addr16
mov
sbb
xor
repnz
loop
sbb
(bad)
lods
in
add
pop
adc
loopne
push
push
(bad)
shl
cmps
push
stc
mov
adc
and
stos
jl
not
jg
and
imul
sahf
dec
sbb
inc
pop
pop
pop
call
mov
or
adc
push
in
sbb
mov
repnz
inc
test
fwait
cmp
in
cmp
(bad)
fdiv
jmp
xor
ss
cmp
jmp
jbe
adc
fnstcw
rol
mov
pop
hlt
call
jo
cmp
jge
dec
mov
xchg
jge
dec
mov
aaa
imul
inc
push
cmp
sbb
clc
push
jge
xchg
or
xor
ror
mov
imul
cmc
jno
add
mov
pop
imul
sbb
or
adc
inc
sar
mov
rcl
fst
(bad)
fadd
mov
aad
gs
pop
xor
imul
sbb
dec
sub
jp
or
push
pop
fisttp
dec
xchg
icebp
sub
adc
sbb
mov
lock
(bad)
loop
push
test
xlat
push
dec
lods
xor
add
sahf
jns
mov
cmp
cmp
sub
xor
push
test
xor
xchg
fnsave
cs
ins
add
ins
sbb
lahf
push
xor
hlt
bound
cwde
or
xor
inc
jmp
daa
retf
das
(bad)
aam
jmp
push
lods
add
inc
or
mov
jg
jle
dec
dec
test
js
mov
add
mov
pop
(bad)
and
cmp
lods
sub
jl
outs
adc
rol
jbe
in
cmc
mov
xchg
das
fs
imul
cmc
and
retf
in
call
ins
into
in
xchg
sbb
inc
das
cmp
mov
sar
imul
inc
retf
into
inc
mov
data16
push
or
cld
add
popf
lds
mov
repnz
push
ds
xor
movs
dec
bound
mov
add
gs
rol
(bad)
mov
pop
popf
jg
or
inc
leave
xor
push
sti
pop
pop
push
pop
dec
shr
in
mov
nop
add
and
aam
mov
and
or
xor
test
mov
pushf
pusha
jnp
mov
out
xchg
scas
aad
jmp
push
pop
fmulp
xor
fmulp
pop
inc
and
out
fiadd
loope
in
mov
push
pushf
gs
mov
cmp
adc
lea
jno
mov
xchg
sub
(bad)
push
pop
adc
cmp
adc
mov
and
inc
push
jp
retf
enter
and
or
shl
xchg
ja
mov
ja
and
ret
sbb
cwde
into
fcom
mov
jbe
je
hlt
adc
sti
jno
cmps
mov
mov
in
cwde
pop
mov
sub
fldl2t
adc
data16
mov
cmp
mov
in
xor
ss
cmp
mov
jo
ret
sahf
inc
mov
loopne
call
mov
test
popf
xor
xchg
leave
or
add
lods
imul
enter
inc
(bad)
inc
movs
imul
mov
(bad)
mov
stc
test
lods
ja
sub
(bad)
scas
mov
stos
retf
xchg
push
cli
push
mov
hlt
xchg
outs
idiv
sti
sar
ret
cmc
ror
mov
jg
adc
ret
aas
fcom
mov
inc
sub
(bad)
loope
shr
xchg
mov
xchg
xlat
xor
imul
or
cmp
outs
sti
repz
sbb
loop
idiv
or
iret
out
and
daa
jle
sub
mov
mov
mov
fistp
icebp
sbb
rcr
pop
xchg
push
popf
in
mov
jge
sahf
mov
add
fst
in
mov
jge
inc
cmp
lahf
dec
jg
fbstp
loop
clc
push
inc
add
adc
push
dec
(bad)
test
nop
in
call
ds
shl
and
xor
xchg
dec
jns
cli
mov
nop
push
mov
jae
movs
dec
mov
test
adc
push
and
mov
call
test
or
imul
lods
stc
mov
lods
mov
xchg
imul
add
push
xchg
jns
mov
cmp
cmps
xor
fucomip
xchg
es
pop
jle
rcl
cmp
mov
adc
xor
rol
cmc
add
inc
cli
adc
fistp
out
and
jne
cld
mov
fwait
xchg
out
test
dec
push
push
jae
sbb
lea
stos
add
xor
mov
cmp
(bad)
sbb
ja
jmp
mov
in
adc
lock
(bad)
stc
out
pusha
jae
(bad)
mov
dec
push
(bad)
sti
xor
or
ret
mov
lods
and
out
out
mov
cli
ja
and
push
test
sub
and
push
mov
and
push
pop
(bad)
jmp
dec
push
lds
popf
mov
push
cmc
retf
push
out
dec
mul
ins
fsubr
pop
ret
inc
add
scas
out
mov
fadd
mov
jne
ret
adc
sub
push
or
repz
mov
stos
pop
push
mov
out
or
pop
mov
mov
sub
add
mov
sub
and
add
fs
or
(bad)
stc
sub
jp
sar
cli
leave
xor
mov
inc
mov
jnp
das
sbb
stos
xor
jmp
adc
add
mov
mov
xchg
dec
pop
mov
mul
pop
push
fwait
pop
fiadd
das
push
inc
adc
sbb
(bad)
ror
sar
mov
jo
add
or
retf
out
in
(bad)
bound
pop
jmp
popa
fpatan
mov
fadd
mov
xor
sbb
clc
push
pushf
out
sub
lea
sti
ins
shr
jbe
mov
pop
mov
in
rol
(bad)
jo
lahf
mov
sub
inc
(bad)
scas
int3
test
popa
(bad)
pop
adc
frstor
jno
sub
fwait
dec
adc
sub
jle
(bad)
movs
jns
add
bound
inc
mov
and
and
sub
or
shl
pop
pop
arpl
out
inc
inc
into
call
ret
push
push
dec
stc
push
sti
push
push
adc
cmc
and
sbb
inc
das
(bad)
pop
jp
loope
dec
add
add
sub
pmulhw
icebp
jg
popf
(bad)
mov
sub
and
in
int
mov
cld
xor
pop
pop
fcmovnbe
push
mov
sub
dec
call
adc
fnsave
aam
xchg
daa
lahf
mov
repz
fnstcw
fisubr
add
cli
cmps
lods
and
outs
cwde
jo
or
mov
jle
fisttp
xchg
sahf
out
mov
mov
lock
shl
(bad)
and
pop
iret
fs
cli
adc
ins
mov
ja
int3
icebp
mov
xchg
ss
(bad)
jle
push
add
sbb
jae
mov
push
add
imul
in
pushf
dec
cmp
xchg
xchg
in
jp
cmp
pop
jp
or
std
ficomp
aam
mov
ret
sub
lods
fsubr
out
and
xor
mov
push
dec
popf
add
push
sbb
pop
push
pop
jno
mov
dec
pop
fdiv
inc
sbb
cmp
jno
pop
pop
fcmove
or
mov
sub
lahf
mov
sub
lds
push
cdq
xchg
jo
(bad)
(bad)
je
shl
or
and
adc
cli
sar
mov
adc
xchg
pushf
mov
stos
mov
sahf
sub
or
jbe
scas
ret
xor
leave
(bad)
cmp
pop
mov
shl
sub
stos
loopne
lods
(bad)
shr
mov
mov
mov
adc
loopne
ret
mov
push
or
fisub
fiadd
jbe
dec
ins
aaa
mov
or
xor
sub
push
cs
cmp
into
mul
jb
push
lahf
sub
aam
jmp
add
and
lods
adc
push
int
lods
add
xor
push
ds
lods
sar
repz
fxtract
dec
mov
sub
dec
aaa
mov
popf
xor
(bad)
xchg
into
mov
cdq
cmp
mov
jnp
fcmovnbe
xor
mov
push
xchg
stos
or
repz
stos
mov
pusha
jmp
or
and
or
retf
out
test
mov
(bad)
push
std
sti
cmp
enter
mov
call
jecxz
adc
mul
push
fsubr
in
push
mov
pop
inc
adc
into
ds
mov
inc
xor
ds
cdq
pushf
jmp
sbb
sahf
fcom
aaa
loope
cmp
dec
pop
mul
pusha
stos
adc
push
add
pop
mov
sub
dec
mov
dec
push
mov
mov
in
pusha
mov
cmp
mov
mov
adc
std
adc
mov
sub
es
dec
pusha
adc
or
and
adc
scas
popf
sub
or
cwde
pop
ror
lahf
jns
lock
jo
test
push
in
xlat
jp
add
push
xchg
xchg
ds
rcl
lock
jmp
pop
dec
sbb
jge
mov
cmp
xor
jl
push
sar
fimul
aam
xchg
rcr
jo
js
dec
or
mov
cmp
ret
mov
inc
pop
dec
add
inc
jp
icebp
mov
cld
daa
loop
push
mov
adc
call
push
push
pop
jge
mov
(bad)
sbb
fmul
out
xchg
xchg
leave
jge
and
push
jp
out
pop
ins
jl
fimul
fs
dec
mov
adc
lds
sbb
xchg
xchg
cwde
inc
test
sar
pop
jp
jb
movs
ds
mov
dec
sahf
mov
dec
jg
loope
fstp
pushf
pop
mov
dec
cmp
adc
(bad)
lahf
cmp
xor
cmp
iret
xchg
dec
movs
push
repnz
xor
in
sub
(bad)
stos
xor
mov
adc
fsubr
fild
scas
mov
sbb
retf
cli
loopne
jle
pusha
mov
and
inc
add
retf
mov
fs
cmc
ret
jle
mov
jecxz
nop
mov
pop
add
pop
pop
cmp
push
adc
jo
scas
stos
retf
jo
cld
and
sar
out
iret
in
imul
xchg
mov
(bad)
ds
push
push
fisubr
sbb
inc
and
jl
ja
pop
ret
jns
xchg
icebp
sub
cmp
sub
ds
sar
or
and
rdmsr
leave
mov
and
and
mov
mov
iret
arpl
or
les
dec
or
movs
call
in
sub
push
data16
fcomp
stos
(bad)
mov
add
daa
mov
push
mov
lahf
push
icebp
sub
call
inc
fsubr
and
(bad)
jns
outs
jg
mov
sar
sub
xchg
sub
dec
and
(bad)
fcom
jnp
sbb
mov
sbb
sub
rcr
push
mov
imul
inc
repnz
aaa
call
cmp
call
adc
call
pop
ret
sub
pop
lds
inc
push
pushf
xchg
jne
and
rcr
mov
mov
inc
sub
mov
outs
mov
in
mov
pop
add
test
mov
sbb
cmc
js
(bad)
lds
push
or
xor
mov
jbe
sbb
ins
fst
fild
fisttp
fdivp
test
xchg
sub
sbb
or
sub
xchg
test
pop
arpl
push
dec
jge
pusha
fsub
cli
ins
in
imul
xchg
pop
or
das
and
sub
jg
pop
jp
mov
aam
shr
mov
popf
sbb
imul
aaa
pop
out
and
mov
jmp
adc
fst
int3
mov
jne
xchg
inc
xor
add
pop
je
fwait
(bad)
repz
cmps
scas
imul
mov
out
sbb
mov
hlt
test
xor
mov
cmp
mov
jle
xchg
scas
xor
stos
pop
popf
mov
sbb
jmp
mov
cmp
into
gs
stos
xchg
cli
push
es
mov
jmp
pop
and
sbb
and
dec
sub
push
sbb
inc
ja
xor
sti
into
push
mov
cmps
into
idiv
inc
pop
mov
lods
call
dec
in
fist
jl
daa
stos
(bad)
(bad)
adc
retf
sbb
ret
xor
and
push
cmps
ficomp
pop
out
cld
cmps
push
add
add
xchg
xor
fwait
into
pusha
xor
inc
ret
fisub
or
mov
or
xor
mov
imul
mov
cmp
sbb
add
sub
xchg
lock
call
fistp
inc
sbb
pushf
retf
outs
loop
pop
mov
das
xor
xlat
mov
mov
mov
xchg
dec
dec
stc
dec
lock
imul
(bad)
cmp
repnz
ja
fisub
ror
mov
div
or
mov
outs
sub
aad
xchg
xor
call
xchg
test
mov
in
(bad)
enter
and
jnp
fild
popf
xrelease
sub
adc
push
aad
jb
jae
fs
pop
jge
repnz
add
jae
mov
in
icebp
retf
nop
xchg
ret
(bad)
pop
aas
dec
mov
ins
mov
jle
gs
push
stos
movups
mov
push
scas
lods
xlat
pusha
xchg
sub
aam
cmp
mov
pushf
sti
mov
neg
mov
and
xchg
and
pop
pop
dec
adc
push
ror
mov
mov
dec
xchg
mov
out
push
fldcw
pop
push
lock
(bad)
fdiv
mov
and
sub
cmp
pop
out
div
mov
push
jo
sub
adc
mov
or
mov
popa
mov
out
mov
pusha
iret
mov
icebp
pop
cmp
scas
xor
adc
inc
jno
aam
jmp
daa
pushf
fisubr
wbinvd
sub
jno
cld
call
or
clc
iret
dec
cmp
cmc
cmp
mov
sbb
mov
add
jno
dec
pop
sbb
push
int3
add
cwde
adc
das
mov
cmps
les
adc
shl
add
fwait
mov
sub
vhsubpd
dec
mov
mov
or
and
cmp
push
ror
push
je
xlat
adc
jmp
lds
cmp
pop
inc
popa
shl
xchg
or
jnp
(bad)
mov
cmp
in
test
js
scas
ss
sub
inc
pop
iret
aam
punpckldq
inc
retf
shl
test
push
outs
shl
mov
sub
xor
retf
enter
out
or
std
test
add
shl
xchg
jg
cdq
push
aad
add
mov
sbb
pop
clc
mov
jno
sub
mov
lock
outs
sub
mov
mov
dec
mov
int
mov
sti
out
and
hlt
sbb
and
mov
push
daa
xor
jb
in
in
pop
cli
sub
pop
loope
in
pop
loopne
xchg
mov
mov
mov
fsubr
jmp
mov
adc
(bad)
cli
out
mov
mov
out
std
xor
cmp
inc
cmp
js
push
in
stos
fcom
adc
xchg
iret
scas
lea
add
icebp
push
and
dec
xor
rcl
daa
ja
mov
jns
cmp
cmp
aad
leave
inc
pushf
sub
jmp
sbb
adc
jp
push
(bad)
sti
jp
sub
out
(bad)
daa
mov
dec
push
rcr
mov
icebp
push
sub
cmps
cwde
jno
xchg
mov
mov
std
pop
dec
xchg
nop
mov
sti
out
sbb
sbb
inc
xor
fbld
mov
mov
xchg
lods
fs
mov
(bad)
jg
movs
loope
and
cli
xor
stos
fsubr
(bad)
mov
shl
xlat
bound
lods
mov
(bad)
cwde
test
or
stc
mov
imul
scas
pop
sub
xchg
xchg
pop
adc
jmp
mov
popa
mov
shl
jbe
(bad)
in
mov
sub
add
ftst
jmp
mov
xchg
xchg
imul
push
jg
lea
je
pop
retf
pop
cmp
pusha
(bad)
cmc
push
imul
or
fld
loopne
jmp
fnstsw
xchg
lock
in
lods
sbb
push
dec
test
mov
mov
inc
fimul
cs
cmp
imul
add
fadd
aas
mov
add
pop
jg
pop
test
pop
pop
outs
xchg
ja
xchg
xor
add
jmp
int
push
add
xor
loope
aam
repnz
shr
xchg
inc
std
test
loope
pop
pop
fmul
mov
dec
add
lea
and
test
dec
sub
ss
fcomp
and
out
mov
jecxz
mov
stos
jmp
imul
sahf
ret
xchg
adc
xchg
mov
sbb
sbb
mov
inc
hlt
stos
push
pop
pop
pop
fcomi
mov
je
fld
sub
shr
dec
inc
movs
jo
add
fwait
inc
pop
adc
shl
or
cmp
mov
leave
in
stc
xor
dec
adc
add
loopne
inc
outs
and
adc
push
ins
ficom
daa
dec
push
test
mov
or
sahf
jle
sbb
pop
movs
loope
shl
dec
mov
les
sub
(bad)
push
ja
xor
mov
scas
cmp
push
mov
hlt
xor
xor
lahf
and
inc
add
sbb
mov
mov
test
mov
sub
mov
imul
jnp
std
retf
and
dec
mov
cmp
out
mov
jo
stc
mov
sub
mov
(bad)
xor
lahf
and
sti
movs
pop
(bad)
cmp
add
sbb
dec
sub
imul
sbb
xor
jnp
sar
dec
lea
inc
sbb
in
xchg
inc
adc
jmp
div
cmc
scas
lahf
call
(bad)
fld
stos
and
les
sub
pop
mov
push
xchg
les
ja
cwde
stc
xchg
test
in
cmp
pop
mov
push
inc
(bad)
jmp
mov
pusha
lahf
sub
fnstsw
fsubr
in
test
jae
sbb
xchg
ds
jb
jp
mov
mov
mov
sub
aas
es
mov
sbb
sbb
mov
stos
js
scas
hlt
mov
in
nop
and
imul
das
dec
out
push
jmp
aaa
cmp
inc
rcl
inc
adc
add
cmp
inc
jl
lods
mov
leave
push
pop
add
mov
xor
loope
pop
movs
div
nop
sub
shr
mov
inc
(bad)
fcmovnbe
dec
cmc
pop
mov
in
mov
xor
cmp
or
ds
jmp
pop
test
and
je
and
fist
and
mov
out
mov
repnz
adc
xchg
xchg
movs
test
push
or
mov
dec
(bad)
in
imul
pop
adc
push
rol
cs
push
xchg
dec
sbb
inc
xchg
xchg
jmp
cmp
inc
in
sub
in
ds
pop
out
dec
std
mov
retf
pop
push
movs
fld
push
jo
add
(bad)
sbb
inc
ss
xchg
or
sbb
paddd
dec
dec
inc
or
sbb
fnstsw
stos
mov
neg
xchg
std
pop
(bad)
in
test
push
(bad)
in
xor
xchg
sub
clc
test
jbe
push
test
and
jne
sbb
(bad)
mov
add
in
test
cmp
jno
xchg
cs
cli
arpl
adc
fwait
mov
dec
mov
icebp
cmps
mov
lods
js
lods
inc
pop
hlt
inc
enter
mov
mov
mov
outs
mov
pop
or
mov
test
mov
fwait
out
adc
pop
jg
xchg
nop
or
push
pop
jge
mov
inc
jno
movs
xor
xchg
pop
sbb
hlt
jg
mov
mov
xchg
jmp
and
add
fs
mov
lea
jp
pop
int3
retf
adc
mov
fld
and
jmp
jle
xor
cmp
hlt
inc
mov
mov
shl
mov
xchg
inc
push
xchg
vmread
jmp
add
inc
rol
cli
pop
into
(bad)
popf
mov
cs
dec
push
xor
std
dec
int3
push
outs
add
or
jne
daa
mov
int
dec
repnz
daa
adc
cs
std
into
inc
add
cwde
jl
and
push
repnz
test
push
fwait
mov
mov
mov
or
adc
loopne
mov
sar
loope
mov
jne
and
push
cmp
(bad)
lock
inc
push
sar
out
pop
dec
pop
and
outs
popf
adc
xchg
mov
leave
inc
adc
loop
mov
(bad)
icebp
cmp
popf
jo
sbb
push
fwait
shl
dec
(bad)
aaa
cwde
popf
push
lods
mov
jbe
ins
mov
out
(bad)
adc
cmp
xor
push
xlat
push
xchg
lods
leave
push
fistp
jnp
es
cmp
inc
fmul
jae
fsubp
imul
(bad)
sbb
je
add
cdq
xchg
jnp
jl
lahf
sbb
or
bound
jl
and
lds
xchg
xor
mov
xchg
int3
in
jg
push
fmul
add
add
mov
push
and
out
xchg
test
jmp
xor
test
dec
in
sbb
xchg
mov
sti
jno
add
cmp
xor
and
and
jmp
or
xor
cwde
sti
xor
sub
mov
xlat
jp
pop
xor
inc
call
add
inc
dec
push
mov
cmps
jg
push
or
stos
jno
packuswb
and
xor
nop
std
(bad)
xor
mov
and
int3
xchg
add
mov
push
xchg
lods
pop
imul
add
mov
xchg
pop
retf
cli
(bad)
imul
or
jge
test
or
(bad)
xor
lahf
and
cld
lods
jb
add
pop
sahf
xchg
cld
or
gs
cmc
ss
loopne
stc
sub
jae
aaa
call
sbb
adc
lods
xchg
push
sbb
inc
popa
mov
ret
or
retf
jno
mov
dec
jne
pop
loop
movs
xlat
pop
pop
inc
add
leave
fcmovu
cmp
pop
sahf
repz
in
mov
leave
fs
movs
add
test
xchg
gs
pusha
fiadd
cmp
nop
add
movs
fwait
call
lds
and
mov
pushf
sti
dec
retf
ret
xchg
xor
cmp
sub
jbe
in
mov
jae
sub
sbb
cwde
or
adc
sahf
xchg
jnp
rcl
popf
inc
or
lods
mov
sub
shl
cmp
or
push
aas
mov
loope
cld
add
test
and
push
xor
iret
add
inc
aaa
or
cmp
and
(bad)
(bad)
cmp
jb
adc
ja
or
jne
jmp
dec
adc
mov
mov
xchg
push
aas
add
dec
push
push
sub
push
retf
jge
pop
mov
lds
or
shl
xchg
mov
clc
mov
pop
dec
sti
stos
lock
cs
movs
je
dec
pop
fild
addr16
dec
push
dec
into
cmps
push
push
enter
ds
je
inc
outs
push
add
dec
cmp
jmp
bnd
fwait
mov
adc
sub
cmp
jl
loopne
cli
imul
leave
test
pop
jb
add
mov
cmp
test
stos
sub
imul
sub
aam
mov
scas
aad
pop
out
add
mov
loop
cmp
push
jbe
mov
out
dec
jne
fst
pop
into
std
add
std
arpl
mov
fmulp
sub
xchg
ds
sbb
pop
data16
cld
inc
lods
cmp
xchg
repz
ja
push
adc
cmp
inc
mov
inc
stc
stos
call
mov
adc
cmps
movs
repnz
stos
repz
pop
jns
pop
xchg
sub
loopne
pop
mov
cmc
adc
push
dec
pop
in
test
nop
in
lds
rcr
(bad)
dec
jmp
das
in
test
mov
fisttp
xlat
cld
mov
sub
mov
cmp
mov
xchg
and
(bad)
iret
pusha
shl
inc
loope
sub
ret
mov
add
inc
push
push
or
(bad)
or
cdq
cwde
and
outs
popa
rcr
test
cld
fwait
dec
call
ss
mov
in
and
in
mov
scas
and
mov
sub
or
jne
jbe
mov
add
sar
push
xchg
rcr
mov
sahf
test
mov
shl
mov
fxch
lea
xor
js
sbb
jns
add
push
popa
data16
jg
ins
and
adc
jl
imul
clc
sub
xor
pop
loope
pop
aam
cmps
adc
mov
mul
and
dec
jnp
pop
imul
aad
and
mov
int3
test
pop
and
xlat
dec
push
pop
leave
sub
mov
sbb
movs
ror
xchg
(bad)
ror
cmp
inc
in
test
fwait
xor
or
retf
(bad)
xchg
ss
es
(bad)
nop
loope
enter
ins
sbb
std
je
cmp
lods
dec
fsub
popf
sub
xor
(bad)
psllq
into
pusha
pop
neg
(bad)
push
imul
push
enter
and
pop
or
(bad)
lods
cdq
or
stos
xor
inc
movs
pop
xchg
(bad)
loop
mov
getsec
xchg
(bad)
iret
mov
pop
(bad)
or
lds
sub
sahf
scas
lds
xchg
xlat
adc
test
inc
cmp
loop
mov
sub
mov
es
or
ja
ret
rcl
sub
in
fldenv
lds
dec
mov
xor
fsubr
pop
je
cs
xchg
pop
xchg
outs
xor
scas
pop
dec
or
sbb
xchg
mov
xchg
pop
loop
xchg
out
dec
add
pop
movs
xor
lods
nop
in
mov
(bad)
fldenv
test
push
outs
sbb
jbe
sub
mov
ins
and
cmps
push
mov
jge
xor
aad
call
and
rol
or
and
dec
jg
and
arpl
cmc
ins
lods
mov
inc
xchg
adc
fcomp
imul
jmp
add
mov
sub
inc
rcl
mov
mov
cmp
jg
loope
ror
aad
push
leave
stc
fnsave
ins
(bad)
pop
sbb
xchg
rcl
xor
addr16
dec
sub
push
push
es
sub
pop
sbb
sbb
clc
xchg
inc
xchg
cmc
(bad)
pop
cld
das
cmp
in
pop
and
(bad)
xor
jp
sbb
out
pop
xor
popf
xor
mov
aas
jo
jo
dec
adc
shl
and
(bad)
mov
mov
ds
push
mov
jbe
sbb
bound
(bad)
test
inc
xchg
aam
cmp
mov
in
mov
mov
xchg
shl
outs
dec
mov
sub
xlat
in
sbb
repz
aam
jns
fistp
shr
dec
inc
into
xchg
dec
cli
jnp
inc
pusha
fdiv
sahf
inc
out
xchg
inc
add
mov
dec
cli
shl
and
push
mov
jge
xchg
call
push
or
and
xchg
push
or
jle
es
pop
inc
bound
pop
xor
dec
(bad)
std
mov
retf
vmovdqu
pop
sti
xchg
add
push
(bad)
(bad)
cmp
sub
mov
in
cmp
loope
cmp
add
pop
in
out
sub
fisttp
xchg
cmp
out
lds
push
add
sub
out
and
or
sbb
(bad)
jb
xchg
or
sbb
jns
cmp
rcl
(bad)
jmp
in
sbb
std
cmp
mov
sbb
jle
sbb
cmp
repnz
dec
imul
rol
sbb
popf
adc
pop
jge
mov
cwde
xor
(bad)
cmp
fild
sub
shr
add
jnp
enter
mov
pop
ror
rol
mov
rol
outs
aad
mov
les
in
and
movs
adc
and
cmc
fadd
enter
push
leave
push
imul
add
pop
std
pushf
test
sub
jp
stos
cs
in
xor
repz
das
inc
inc
xlat
out
inc
mov
push
sub
jno
and
pop
xor
aad
pop
loope
push
nop
imul
mov
test
xor
adc
push
call
cli
bound
loope
fld
jnp
inc
dec
or
pop
cmp
pop
scas
popa
or
jl
xchg
sub
jp
xor
pushw
push
sahf
xchg
mov
fmul
unpckhps
cmps
cmp
das
test
aad
cdq
add
ins
(bad)
jnp
aas
cmp
in
mov
shl
pop
movs
mov
ins
(bad)
mov
mov
imul
mov
inc
inc
rcl
(bad)
rcl
and
scas
mov
xchg
mov
jp
sbb
or
jl
push
xchg
fdiv
xlat
and
test
jecxz
adc
aaa
xchg
pop
aas
xchg
(bad)
imul
jmp
mov
cmp
dec
push
pop
jl
pop
imul
adc
out
inc
addr16
dec
mov
cmps
cmp
ins
cmp
inc
mov
in
cmps
(bad)
push
push
pop
out
sbb
xchg
mov
retf
dec
push
xchg
aad
xchg
adc
mov
data16
sub
stos
pop
sar
jmp
cdq
shl
fsub
sbb
in
lods
cmp
in
inc
cld
(bad)
jmp
ret
mov
es
jne
pop
cmp
out
cmp
jae
pop
sbb
outs
clc
arpl
mov
cs
xchg
pop
mov
ja
adc
push
ficomp
pop
sbb
push
pushf
mov
push
out
xchg
xchg
sti
and
push
fbld
ss
lock
mov
sub
mov
je
mov
movs
js
lods
xchg
push
jge
xor
mov
jnp
ret
icebp
pop
xor
fisubr
into
jg
and
dec
into
or
push
call
test
sbb
cmc
cmps
pusha
mov
or
call
xchg
and
es
inc
adc
movs
add
ror
jb
dec
popa
mov
(bad)
mov
adc
xlat
int3
or
dec
jae
fsub
loop
adc
xor
dec
nop
add
into
and
outs
mov
mov
or
fidiv
call
pop
loopne
jecxz
fnstsw
int3
pop
mov
lock
ja
sbb
dec
and
mov
cmc
int
jmp
inc
in
add
fsubr
and
push
mov
lock
jbe
shl
jge
sbb
dec
xchg
fisubr
jge
jle
add
call
push
mov
mov
inc
xor
add
ja
xchg
and
cmp
imul
fisubr
sbb
mov
repnz
rol
jmp
xor
cmp
je
jle
add
push
mov
and
scas
outs
pop
pop
jb
shl
retf
shr
push
sbb
push
inc
and
in
int
data16
outs
cld
pushf
ficomp
(bad)
pop
xlat
xor
das
stos
out
jb
mov
(bad)
iret
sbb
jae
inc
dec
retf
gs
add
test
shr
cmp
inc
not
add
cmp
xchg
xor
dec
inc
sub
add
push
xlat
in
loopne
imul
les
mov
outs
retf
mov
test
adc
out
not
sbb
ror
test
mov
out
out
cli
aam
and
aam
sub
push
push
retf
push
dec
mov
in
jb
or
cmc
in
cmp
pop
pop
pop
cmps
mov
shl
jnp
xor
les
mov
jmp
sbb
dec
sub
lock
out
push
and
xchg
or
push
lock
pushf
shld
stos
shl
sub
sub
adc
pop
jae
xor
xor
(bad)
sar
xchg
aam
pusha
rcr
xor
push
ds
mov
test
fld
mov
xor
jge
int3
and
out
dec
les
shr
mov
xchg
pop
ret
xchg
xor
movs
push
jns
shl
iret
cmp
jo
jae
div
pop
add
inc
mov
pop
bound
fisttp
pushf
dec
add
and
mov
add
xchg
xchg
xchg
lahf
xlat
push
int
(bad)
jle
aam
cwde
pop
lods
stos
clc
test
xor
jns
push
scas
mov
jmp
loop
xchg
repz
mov
pusha
enter
lock
hlt
in
jns
mov
mov
mov
pop
enter
addr16
fisttp
mov
lahf
jecxz
add
lods
sbb
pop
sub
adc
xchg
cmp
(bad)
lea
lea
sub
push
lods
cmp
add
sbb
mov
sub
les
inc
and
pop
sbb
xor
out
out
movs
pop
adc
jle
in
int3
xor
fsubr
xchg
cmps
cmc
jmp
sbb
or
push
iret
into
test
imul
cmc
sub
iret
jae
clc
sbb
mov
jno
cs
mov
dec
pushf
or
popa
push
jp
aad
inc
xchg
xor
xor
or
push
sti
in
push
sbb
xchg
add
dec
mov
in
adc
pop
pop
mov
into
xchg
mov
sub
dec
push
iret
and
adc
jg
loopne
ds
stos
inc
dec
iret
sti
xchg
cs
jle
sub
push
add
jmp
sbb
ret
cmp
mov
mov
stos
ret
xchg
inc
jnp
dec
sub
je
stc
dec
les
xchg
cmps
dec
add
pop
leave
lods
add
iret
les
push
pusha
jo
movs
fisub
inc
push
adc
mov
les
shl
mov
in
or
cli
call
pop
pop
ins
ins
xchg
mov
jns
mov
push
or
ret
jb
inc
cmp
mov
daa
test
daa
push
out
jmp
pop
mov
cwde
xlat
xchg
pop
int
out
mov
mov
retf
nop
enter
lods
popa
fisttp
je
jl
loop
jno
push
pop
leave
pop
pop
dec
sub
movs
rol
cdq
adc
xchg
(bad)
jl
mov
pop
jns
pop
xchg
jno
enter
icebp
ins
xor
fistp
add
(bad)
jmp
(bad)
xchg
movs
fnstsw
push
push
bound
inc
in
and
fsubp
loopne
xor
mov
(bad)
std
test
shl
cmps
jns
dec
inc
mov
sbb
cmp
push
push
mov
es
fbld
scas
cmp
mov
(bad)
daa
pop
inc
mov
add
push
movs
div
inc
sub
test
jge
cwde
jmp
ret
inc
arpl
(bad)
test
mov
push
fisubr
push
fwait
daa
push
jo
mov
stos
pop
clc
jnp
js
(bad)
pop
or
icebp
stc
jle
dec
int3
out
push
inc
add
pop
loopne
pop
mov
retf
push
pop
cdq
jmp
nop
push
push
jae
scas
out
sbb
arpl
xor
inc
ret
mov
movs
mov
push
or
(bad)
es
cmp
pop
in
push
clc
xlat
mov
xlat
mov
pop
pushf
leave
popf
fs
pushf
xor
pop
(bad)
pushf
push
or
mov
in
je
test
add
and
hlt
mov
xor
adc
mov
pop
pop
jns
out
imul
jge
aam
cmp
pop
retf
cmp
out
cmp
jp
mov
inc
sbb
xlat
mov
jl
add
xor
test
sahf
jg
cmp
cwde
jne
test
sub
and
inc
xchg
es
push
mov
or
xchg
test
mov
jmp
(bad)
cmp
addr16
aas
and
xchg
push
mov
jp
ja
es
mov
push
jg
mov
mov
sti
in
dec
int3
jecxz
pop
pushf
(bad)
in
inc
push
push
lds
std
das
sbb
leave
dec
mov
mov
xchg
(bad)
sub
mov
or
pop
push
icebp
or
inc
ins
jnp
lea
sub
fwait
mov
add
or
sbb
les
movs
lea
jge
aaa
bound
xor
adc
(bad)
fs
ror
inc
xor
jno
and
jg
jno
cmp
in
bound
jl
rol
out
sar
mov
lock
push
xor
mov
mov
popa
rol
xchg
xor
xchg
or
sub
stos
xchg
iret
cmp
fild
aaa
test
xchg
sub
imul
call
out
js
pop
jmp
and
int
pop
js
xchg
jecxz
jle
outs
jno
lods
dec
dec
push
(bad)
jnp
mul
sub
(bad)
inc
movs
(bad)
call
xchg
dec
dec
shl
ss
xchg
cmp
pop
aaa
xchg
dec
icebp
mov
into
ret
inc
cmps
cdq
cs
sub
push
rcr
pop
lods
jb
inc
push
add
es
test
in
mov
xor
(bad)
pop
imul
sub
icebp
jb
outs
xor
xor
push
loope
lock
int3
out
test
xchg
inc
mov
dec
xchg
mov
xor
add
fild
sbb
out
mov
out
mov
push
test
pop
loopne
xlat
mov
and
in
adc
mov
xchg
sbb
fst
call
dec
xchg
add
ss
jbe
xor
aaa
movs
not
xor
cld
ins
xchg
call
cmp
shr
dec
ja
mov
mov
les
mov
pop
je
(bad)
jno
sub
and
cld
into
(bad)
je
es
int
pextrw
mov
mov
adc
xchg
cmp
sahf
lahf
add
xchg
pmullw
push
mov
in
jecxz
loopne
cwde
sub
cmp
push
mov
jo
dec
je
cmp
daa
pop
add
outs
lahf
div
add
in
xor
jmp
jmp
sti
or
push
cld
lds
imul
out
jb
neg
in
push
dec
pop
xor
addr16
pop
test
cmp
mov
retf
cmp
ss
xlat
call
lds
sbb
mov
aad
xor
push
cmp
pop
imul
imul
(bad)
sub
mov
ins
adc
lods
jo
outs
shl
adc
bound
jecxz
test
lods
and
cwde
cmp
pop
retf
js
pushf
pop
jbe
fnstcw
mov
pop
pushf
in
or
(bad)
cmp
push
(bad)
int
lea
lea
add
outs
jp
lds
jmp
push
cmp
outs
or
xor
xor
pop
(bad)
pop
sbb
and
adc
mov
adc
adc
cwde
test
pushf
stos
rcr
jne
adc
fsub
lods
xlat
aaa
sbb
les
shr
mov
mov
retf
cli
repz
retf
int3
xchg
push
ins
test
gs
aad
fisttp
jge
inc
pop
lea
stos
or
adc
cdq
stc
loope
xor
leave
push
(bad)
call
imul
call
mov
and
push
push
pop
dec
jmp
cmp
fistp
stos
lock
adc
fdiv
(bad)
scas
aaa
mov
movs
out
push
add
pop
fdivr
ret
jae
inc
aad
sbb
pushf
xor
jbe
xchg
test
xchg
fs
das
jb
and
das
icebp
add
out
aam
or
adc
mov
inc
cmps
aaa
pop
cmp
dec
jbe
jne
out
rol
push
inc
mov
mov
bound
and
ss
in
repz
lods
ins
jns
xchg
fwait
loop
push
xor
pop
mov
push
and
fwait
adc
gs
scas
xchg
fdivr
pop
mov
cmc
in
jns
xchg
rol
pop
sbb
lock
enter
sbb
ret
je
aaa
(bad)
cli
movs
sub
movs
jbe
call
cmp
test
fnstenv
sbb
retf
mov
cmp
push
fimul
add
data16
jl
ins
(bad)
mov
mov
aad
test
mov
aaa
shr
retf
pop
fimul
xchg
adc
imul
sub
es
mov
outs
int
jecxz
loop
ficomp
xor
sub
jae
(bad)
push
stos
loope
inc
add
xchg
rol
xchg
cmc
sub
stc
mov
bound
adc
popf
inc
push
or
mov
inc
pop
xchg
(bad)
mov
test
jo
(bad)
jp
sub
in
lea
inc
ret
test
xor
push
loop
ss
jecxz
(bad)
cmc
jecxz
fld
mov
push
jg
mov
imul
or
xchg
and
add
popf
mov
dec
scas
cmp
sub
xor
mov
or
xchg
(bad)
mov
cmp
sbb
cmp
rol
add
enter
(bad)
lea
xor
fs
and
mov
and
mov
push
leave
in
and
in
jo
pop
rol
aas
jecxz
pop
sar
pop
sub
sub
mov
inc
pmovmskb
sub
sbb
dec
xor
mov
(bad)
das
xchg
mov
ret
push
(bad)
cdq
outs
movs
dec
inc
aam
int3
lock
pusha
loop
adc
int3
cld
stc
mov
sub
pop
xor
pop
or
popa
sub
ss
lds
cmps
cmps
push
and
jne
xchg
and
fistp
les
xor
inc
std
(bad)
repnz
ja
xchg
inc
mov
jmp
(bad)
popa
call
pop
xchg
cld
push
xchg
inc
add
rcl
xchg
pop
and
jno
les
dec
add
sbb
xor
inc
scas
loopne
cmps
push
movmskps
push
xchg
or
iret
inc
into
clc
jo
shl
fs
psubusb
test
mov
push
adc
lahf
fisubr
sahf
inc
mov
ins
cmp
repnz
jmp
inc
dec
popa
sti
pusha
out
aad
xor
daa
call
(bad)
xor
fwait
or
scas
mov
inc
mov
(bad)
shr
pusha
lock
xchg
sub
les
test
jle
sbb
ins
(bad)
popa
aam
jne
sbb
iret
mov
es
aad
xor
xchg
test
rcl
sbb
push
test
xor
scas
and
add
push
(bad)
xor
cdq
pop
imul
and
sub
pusha
sub
fcom
xchg
mov
outs
aad
jnp
into
inc
sub
cli
pushf
addr16
fcomp
movs
mov
in
aas
and
outs
ins
ror
or
adc
outs
ret
cmp
sbb
xchg
pushf
or
mov
lock
fnstcw
mov
scas
jle
test
outs
loope
in
sub
sbb
jp
jnp
add
stc
stos
cmp
(bad)
retf
fst
inc
adc
scas
rcl
cld
ror
arpl
and
aad
sub
idiv
repnz
cmc
out
les
or
and
(bad)
leave
in
ins
dec
rol
jne
adc
dec
ins
frstor
ins
inc
mov
popa
fild
and
or
int
popf
std
mov
cmps
popf
jne
dec
out
xor
out
stos
dec
mov
repz
es
sahf
inc
xchg
inc
arpl
pop
xchg
sub
aad
or
dec
jp
jno
in
dec
pop
and
and
ret
pop
sbb
add
mov
leave
test
icebp
pop
push
(bad)
add
jecxz
jle
mov
inc
lods
pop
gs
mov
mov
fisttp
sti
xor
mov
add
xchg
(bad)
pop
mov
add
inc
xchg
out
bound
fisttp
lods
mov
dec
stos
das
iret
adc
xchg
ret
mov
jne
mov
mov
adc
int
sbb
fnstsw
add
out
sahf
rcr
mov
adc
and
jmp
mov
out
ret
lds
rcl
adc
dec
mov
rol
jg
arpl
adc
jo
arpl
and
xchg
shr
pop
push
cmp
or
push
dec
retf
or
xacquire
std
jnp
pop
bound
sub
imul
js
pushf
push
cmps
loop
movs
aad
xor
cmp
inc
das
mov
(bad)
pop
dec
pop
icebp
test
sti
pop
jge
mov
lahf
pop
xchg
pop
neg
in
enter
push
lods
xchg
add
dec
xchg
xor
and
pop
loope
add
fldenv
cmp
movs
shl
dec
mov
cmp
lods
pop
sbb
dec
sahf
inc
(bad)
cwde
jmp
gs
pop
pop
jmp
in
xor
test
pop
ds
pop
push
xor
mov
pop
add
aam
mov
in
pop
scas
ret
adc
inc
mov
push
(bad)
jo
cmp
mov
xchg
push
fist
das
aad
imul
adc
adc
(bad)
sti
sub
stos
or
or
lock
fs
mov
push
hlt
xchg
dec
cdq
movs
clc
xor
and
ret
sub
js
fwait
bound
pop
jae
lods
pop
sbb
adc
and
mov
sub
lods
dec
mov
(bad)
leave
out
add
xchg
stos
jo
lea
sub
jl
pop
and
jb
daa
jecxz
jo
xor
(bad)
mov
test
sbb
or
xlat
fidivr
in
push
xor
(bad)
mov
cmp
adc
and
leave
jmp
pop
(bad)
jns
mov
add
in
inc
pop
push
int3
(bad)
sar
and
xor
es
retf
lods
mov
mov
repz
jbe
xchg
das
jns
or
or
cmps
mov
stos
and
inc
mov
push
loop
out
dec
xor
xor
add
sub
scas
mov
mov
xchg
inc
leave
icebp
push
mov
dec
dec
jg
rol
sub
retf
dec
in
imul
pop
add
mov
daa
adc
xchg
mov
shl
outs
and
ins
sbb
sbb
sti
and
push
xchg
pushf
dec
std
cdq
stos
sub
and
js
jmp
jne
push
(bad)
xor
jl
mov
dec
pop
loopne
mov
jp
xor
std
(bad)
xchg
mov
sub
add
popa
add
out
pop
cmp
cld
cmp
mov
jns
out
mov
ja
fisttp
xchg
sub
mov
and
xor
ja
leave
(bad)
jmp
movs
cli
minps
xor
inc
dec
scas
dec
ja
sbb
out
enter
sub
xor
lods
stos
mov
ror
jge
(bad)
dec
shr
sbb
repnz
inc
in
sub
mov
imul
(bad)
push
pushf
mov
in
retf
aad
push
xchg
imul
(bad)
adc
out
retf
into
movs
leave
cmovb
rcl
cld
(bad)
in
fmul
int
adc
push
hlt
pop
loop
icebp
movs
push
push
out
dec
and
clc
lock
inc
adc
fwait
mov
and
out
fidiv
loope
out
(bad)
stc
cmps
outs
stos
scas
popa
jmp
outs
lea
mov
popa
xor
shl
xchg
mov
adc
mov
fimul
jbe
addr16
xor
dec
js
xchg
lods
pusha
js
outs
add
sbb
in
mov
pop
inc
fild
stos
push
mov
mov
repnz
inc
mov
add
and
adc
test
bound
ret
cmp
sub
xor
or
cdq
fistp
xor
out
in
ins
pop
sbb
mov
pusha
pop
adc
out
push
ret
repnz
xchg
mov
xor
aas
push
push
(bad)
sub
jp
mov
ret
scas
pop
sub
popa
dec
les
adc
pop
fsub
mov
add
mov
imul
lea
jns
clc
sbb
mov
push
fwait
adc
out
clc
hlt
sub
mov
(bad)
and
or
and
push
in
cmps
lock
jno
imul
jmp
adc
xchg
call
pop
pop
out
sub
popa
(bad)
test
or
jg
mov
push
pop
jle
mov
jbe
stos
bound
mov
je
popa
leavew
mov
loop
sahf
mov
outs
pop
pop
(bad)
add
loopne
push
add
push
jmp
es
pop
mov
and
repnz
mov
sbb
fiadd
(bad)
xchg
(bad)
pop
loop
bnd
lahf
xchg
push
cmp
and
mov
mov
pop
push
fstp
push
inc
ja
and
mov
stos
pop
mov
mov
jnp
xor
jmp
mov
out
add
jl
pop
add
or
inc
inc
rol
(bad)
pop
outs
in
popa
loopne
push
test
js
pop
jnp
and
ss
(bad)
push
jmp
mov
mov
imul
cld
rol
es
test
clc
pop
(bad)
cld
dec
lahf
stos
(bad)
ss
or
xchg
addr16
sub
and
(bad)
mov
sub
movs
push
jge
add
scas
shr
shl
in
arpl
pop
aad
xchg
jmp
sbb
or
mov
adc
push
ret
icebp
add
and
out
in
mov
lods
scas
test
sub
call
outs
clc
outs
mov
scas
aad
jmp
cld
rcr
or
stos
push
or
(bad)
nop
or
aaa
mov
lock
(bad)
loopne
mov
sar
in
ret
push
pop
stos
inc
mov
rcl
lahf
mov
dec
xor
call
push
in
push
jg
push
inc
mov
adc
push
pushf
pop
and
add
xor
pcmpeqd
and
cdq
add
push
sti
scas
push
scas
aaa
cmp
inc
and
cmp
test
int3
mov
cmp
addr16
mov
call
push
mov
jmp
pop
ror
stc
(bad)
(bad)
(bad)
arpl
mov
push
sbb
xchg
dec
mov
cs
push
or
mov
jns
imul
inc
ds
mov
mov
popa
pop
push
pop
lahf
imul
dec
adc
pop
jo
out
pop
xor
bound
mov
jno
out
mov
mov
cmc
xor
inc
jmp
call
dec
out
push
addr16
xchg
xchg
aas
(bad)
js
inc
les
pusha
sub
mov
cmp
fnstsw
cmp
push
or
mov
lods
jmp
stos
imul
push
shr
mov
dec
test
xchg
add
pop
retf
sbb
outs
daa
movs
loop
xor
push
push
jno
(bad)
sbb
imul
movs
out
push
pop
mov
outs
clc
arpl
jg
pop
sbb
pop
int
mov
out
stos
xchg
jmp
push
mov
hlt
repz
cld
or
mov
hlt
jmp
mov
test
xchg
ins
push
mov
pop
inc
mov
inc
shr
cli
popf
xchg
int
outs
xlat
in
jnp
es
or
(bad)
jne
dec
aaa
rcl
mov
inc
and
jmp
jae
and
adc
(bad)
sub
test
xchg
lods
dec
sahf
in
inc
xor
cmps
jge
or
outs
add
popa
and
(bad)
push
sub
mov
or
daa
xchg
movs
adc
repz
mov
jo
mov
adc
and
mov
in
leave
push
sbb
xor
outs
icebp
sub
in
xchg
jo
ja
pusha
or
push
mov
sbb
aam
mov
sbb
dec
scas
cmps
cs
test
jg
in
inc
data16
pop
(bad)
(bad)
jb
pop
pop
ins
pop
adc
in
adc
popa
pop
repnz
dec
test
and
inc
dec
in
sub
and
sar
or
cmp
and
mov
fwait
cmp
lahf
or
retf
loopne
xor
add
shl
xor
mov
aas
jns
(bad)
sbb
dec
nop
add
inc
in
adc
inc
push
into
mov
adc
in
xchg
adc
mov
scas
inc
ja
out
stos
in
(bad)
xchg
pop
lods
mov
jns
and
sub
mov
add
add
push
pusha
pop
jo
fild
dec
dec
cmp
mov
ret
pop
shr
jbe
pop
adc
inc
fisub
mov
mov
shld
add
call
(bad)
shl
jg
loope
ret
loopne
and
mov
dec
mov
retf
add
pop
xchg
lock
xor
xchg
pop
inc
add
adc
push
fldenv
sbb
push
dec
loop
push
mov
rcl
mov
push
push
fnsave
mov
jg
mov
fistp
mov
sub
call
xor
(bad)
pusha
mov
sbb
icebp
push
(bad)
lahf
xlat
inc
sub
lahf
stc
xor
ret
push
xor
arpl
div
out
in
data16
xor
mov
xchg
icebp
mov
ja
jns
pop
jae
jg
cmp
int
pop
dec
or
dec
mov
call
jnp
fimul
nop
push
cmp
leave
jp
bound
dec
push
fidiv
adc
mov
movs
clc
fstp
stc
dec
iret
xor
cmps
js
push
add
add
dec
dec
xchg
je
mov
jmp
jp
test
fs
jae
mov
test
sub
jecxz
popf
sub
adc
xor
jns
add
push
jae
cmps
cs
icebp
sbb
jbe
in
sbb
into
not
gs
push
add
jmp
jp
inc
add
(bad)
lock
stc
adc
cwde
mov
sbb
cmp
pop
cmp
das
movs
stc
mov
pop
and
ins
imul
dec
and
mov
jns
xor
ret
mov
cmc
(bad)
pop
push
mov
add
and
addr16
pop
mov
push
jl
or
fwait
ja
lahf
add
stos
rcl
imul
call
dec
mov
and
mov
aas
movs
cmps
sbb
stos
test
sub
cmp
mov
sbb
dec
arpl
pop
nop
jp
jo
xchg
inc
pop
add
xchg
pop
or
out
mov
sub
rcl
out
jmp
pop
add
sbb
ja
jae
mov
clc
in
add
sbb
test
add
xchg
add
loop
and
mov
xchg
or
xchg
sahf
outs
rcl
inc
jae
mov
jo
lock
cmp
dec
push
(bad)
shl
cmp
sbb
push
repz
sub
xchg
push
rcl
fstp
dec
fsubr
movs
ss
jge
pop
push
push
in
cdq
call
mov
xchg
and
pop
inc
add
in
mov
and
and
sub
retf
scas
out
repnz
dec
push
adc
inc
jae
pusha
inc
push
push
test
xchg
sbb
push
pushf
outs
mov
push
popf
iret
mov
jae
sbb
or
sbb
pop
cld
pop
cs
das
xor
inc
test
xchg
mov
stc
pop
ficom
lahf
js
ffreep
repz
shr
das
fadd
sbb
cmps
fist
(bad)
or
and
jmp
mov
inc
mov
pop
mov
mov
or
xchg
push
inc
jp
in
sti
inc
(bad)
fisubr
inc
push
sbb
mov
dec
ins
adc
lds
movs
pop
arpl
out
rol
inc
sub
xor
popf
nop
inc
mov
add
jp
jno
adc
push
(bad)
xchg
popa
imul
pop
mov
test
inc
das
popa
repnz
loopne
mov
xchg
rcl
or
and
jle
pop
xlat
dec
xor
and
jo
add
mov
mov
(bad)
icebp
fisttp
push
(bad)
ins
or
imul
cmp
pushf
mov
sar
lods
xor
int
out
or
mov
mov
jbe
mov
imul
lea
scas
ret
mov
jmp
mov
(bad)
adc
ds
mov
xchg
mov
imul
in
lahf
fwait
sbb
add
inc
mov
dec
dec
mov
xor
and
jg
cmp
jl
fld
cdq
imul
mov
in
sub
add
(bad)
call
push
mov
xchg
rcl
js
call
push
sbb
mov
enter
mov
rcr
test
fs
mov
inc
(bad)
mov
xchg
test
daa
sbb
fcmovb
or
int3
into
push
scas
dec
and
loopne
push
in
imul
mov
les
outs
nop
sar
mov
movs
jmp
push
popa
push
or
pop
xchg
inc
add
pop
rcl
add
test
sbb
mov
shr
push
pop
pop
push
std
movs
adc
int3
jb
fadd
xlat
pop
in
cwde
idiv
mov
mov
push
push
adc
jne
ffreep
mov
add
clc
add
jl
fs
fnstcw
sub
jg
es
pop
lds
leave
outs
inc
pop
push
cmp
pop
jb
dec
pop
mov
sbb
mov
sbb
lds
inc
jne
(bad)
or
pop
jns
in
pop
jmp
test
xchg
push
cli
call
sub
pop
into
xor
in
adc
jle
jnp
dec
add
pop
mov
jle
in
clc
inc
and
xchg
or
or
sub
jmp
retf
stc
test
out
sar
add
jecxz
adc
shl
and
out
adc
inc
or
mov
lods
jmp
sub
jmp
lahf
clc
mov
and
(bad)
dec
clc
pop
pop
jp
sahf
mov
int3
lea
or
pop
add
sub
imul
inc
push
push
push
and
xor
dec
jbe
fistp
xchg
lds
int3
popf
fsubrp
shl
nop
xchg
stc
rol
mov
imul
push
bnd
cmps
(bad)
mov
int
pop
pop
dec
inc
and
xchg
fidiv
call
mov
iret
pop
in
popa
out
leave
cmps
psadbw
test
rcr
dec
push
cmc
ret
cmp
sahf
std
cmps
and
dec
add
call
mov
mul
popa
push
add
ss
cld
ror
or
add
fcomi
daa
pop
shl
mov
ds
mov
xor
push
sub
icebp
popa
pop
in
adc
ret
inc
push
or
(bad)
mov
and
mov
mov
lods
fnstcw
movs
call
add
add
sub
ins
jbe
in
push
xchg
jg
nop
sub
int
fidivr
lea
cmp
test
aam
mov
adc
mov
popf
jmp
xchg
inc
dec
sahf
or
icebp
fistp
aaa
in
inc
adc
xor
stos
dec
xchg
sbb
mov
push
data16
stos
push
call
jl
std
fldcw
xchg
(bad)
std
cmps
rol
les
js
push
and
mov
push
jge
icebp
jle
push
nop
rcl
imul
aas
jns
rcr
movs
or
or
add
fiadd
ror
mov
dec
sahf
(bad)
enter
icebp
iret
xchg
inc
jl
jne
cmp
push
sub
pop
sar
in
lea
or
mov
repz
fwait
push
mov
daa
mov
push
rcr
(bad)
lods
dec
shr
cmp
scas
and
repnz
or
pop
cmp
popf
sbb
inc
std
call
loop
xor
push
int
jmp
mov
aas
or
clc
fild
(bad)
fdivp
imul
cld
inc
xor
cmps
dec
ins
lods
pop
inc
push
or
mov
sub
sbb
(bad)
xlat
or
mov
fidiv
aaa
pop
dec
mov
fs
mov
outs
jmp
(bad)
imul
inc
sbb
in
sbb
xchg
cmp
xor
inc
(bad)
jne
jne
(bad)
cmps
inc
lock
adc
loopne
mov
not
cmp
push
sti
jle
sar
out
push
jbe
and
sbb
dec
add
pop
mov
push
inc
jae
add
ret
loope
ds
stos
stos
in
pop
xchg
ins
pop
push
dec
jbe
mov
pop
or
jo
and
mov
cmp
(bad)
sbb
sti
and
mov
iret
xchg
sub
jge
pop
call
gs
xlat
dec
fstp
in
(bad)
fs
frstor
cmp
or
cmc
bound
out
aad
cmps
sub
sbb
sar
mov
stos
sub
data16
mov
add
shr
jl
adc
mov
iret
xchg
inc
cmps
add
int3
fcmovu
fstp
in
dec
push
mov
push
mov
shr
popf
hlt
call
or
adc
mov
iret
cli
mov
mov
retf
mov
xchg
push
mov
cmc
repnz
fwait
add
test
pop
or
or
sub
dec
repnz
bound
aam
sub
push
mov
inc
neg
pop
mov
mov
and
xlat
adc
push
inc
mov
popf
inc
popa
xchg
ins
pop
or
outs
and
push
mov
xor
fwait
movs
stos
adc
and
and
jnp
aam
retf
ror
or
sbb
retf
jge
repnz
mov
clc
mov
fnstsw
aas
adc
sbb
and
mov
imul
mov
mov
cbw
mov
jg
and
fist
fisttp
jmp
inc
outs
xor
sbb
js
scas
sbb
adc
xchg
pop
inc
xor
arpl
push
(bad)
hlt
inc
mov
popa
test
push
jp
mov
lock
pop
mov
inc
(bad)
aaa
jnp
push
rcl
push
xchg
aas
js
mov
dec
loopne
add
push
mov
lock
inc
push
push
sub
inc
mov
add
adc
mov
ins
test
enter
(bad)
call
push
mov
push
xchg
bound
sbb
sbb
mov
pop
ret
stos
pop
sbb
lods
mov
xchg
scas
es
cdq
push
jl
inc
ins
add
inc
add
xor
leave
add
and
mov
mov
sub
xor
xor
shl
rcr
pop
cdq
or
cmp
cmc
pusha
cmp
aam
std
and
xchg
cmp
imul
cmp
repz
xchg
repnz
push
cmp
icebp
in
add
imul
repz
imul
or
pop
jae
dec
lock
pop
sbb
jnp
jg
pop
pop
in
inc
xor
fisubr
sbb
loop
rol
fidivr
cld
aaa
test
mov
xor
sbb
rep
shr
ss
int
xor
imul
push
jae
shl
mov
(bad)
scas
mov
stos
pop
xchg
enter
int3
cmp
mov
xchg
jge
jmp
fs
retf
xchg
pop
jnp
iret
adc
mov
cdq
loope
sub
mov
mov
vmovaps
and
cmp
jnp
pop
shl
push
sub
rcr
call
cld
outs
call
jecxz
nop
pop
or
inc
stc
call
mov
push
sbb
mov
xor
jmp
xor
icebp
inc
jle
imul
fcom
mov
adc
fwait
ror
jno
dec
fbld
aam
dec
or
mov
iret
mov
cld
or
or
movs
sti
(bad)
ss
int3
cld
pop
lea
pop
std
mov
or
je
movs
pop
jg
adc
sub
or
aam
outs
add
or
popa
mov
(bad)
(bad)
mov
ret
fs
xor
push
outs
movs
cmp
xchg
inc
fldcw
sar
pop
in
lahf
call
cmps
push
or
fst
lods
add
or
xor
pop
push
lahf
pop
lods
gs
popa
cmp
out
jecxz
or
jmp
data16
cmp
jbe
pop
stos
or
mov
lock
push
stos
add
mov
sub
ficomp
mov
mov
bound
or
push
xor
imul
push
enter
xor
xor
jp
xchg
cmp
ret
jle
rcl
ror
sar
lods
inc
into
das
or
repnz
dec
retf
sbb
mov
mov
pop
call
icebp
mov
dec
cdq
gs
fcmovne
popf
add
icebp
mov
and
(bad)
mov
(bad)
aas
fdivr
jl
xlat
xchg
push
mov
(bad)
(bad)
mov
or
lods
shr
out
les
loop
cli
rol
aas
sub
mov
xchg
out
dec
in
inc
or
xchg
pop
loope
lods
cmovo
icebp
sti
add
jl
(bad)
fisttp
pop
lods
mov
pop
int3
test
jbe
inc
fcmovnu
icebp
xor
(bad)
hlt
xor
leave
jp
mov
imul
adc
repz
jnp
cld
mov
in
xor
dec
mov
or
xchg
scas
fcomp
test
sti
test
sti
adc
mov
imul
lds
xchg
ins
cmp
test
inc
arpl
outs
dec
je
fucom
adc
inc
mov
inc
test
xchg
mov
loop
pushf
dec
vprotq
sub
loopne
inc
jp
xor
and
lds
inc
fstp
mov
enter
pop
mov
inc
mov
mov
jns
or
das
gs
nop
mov
repnz
int3
das
lods
mov
add
jecxz
in
fnstenv
cmp
inc
rcr
mov
push
adc
scas
lods
cmp
scas
add
mov
(bad)
stc
push
xor
inc
sub
aas
subps
xchg
jbe
test
test
mov
(bad)
mov
add
or
popf
pop
pop
enter
dec
clc
adc
leave
sub
sub
repnz
fisttp
or
push
pop
xor
sub
cmp
mov
test
add
iret
test
les
or
retf
pop
jnp
clc
mov
ins
popa
adc
push
push
push
push
xlat
xlat
jge
mov
cmp
sti
push
movs
mov
mov
loop
cmp
test
sub
ror
fisub
aad
add
cld
push
mov
sbb
addr16
jecxz
pop
gs
repnz
adc
aaa
gs
add
bound
adc
sbb
mov
mov
push
mov
out
addr16
mov
mov
shl
pop
cmp
xchg
pushf
cmp
repz
push
nop
adc
push
imul
cmp
or
call
and
inc
cmp
inc
cmp
mov
inc
add
mov
cmc
xor
ret
jle
mov
dec
jmp
ror
les
sbb
cmc
fld
cld
cmp
call
lods
je
mov
clc
inc
je
or
and
hlt
les
(bad)
ins
sub
or
mov
repnz
pop
popf
add
ja
pop
shl
pusha
push
jb
pop
pusha
in
test
mov
(bad)
xchg
fs
das
push
inc
aaa
mov
mov
fwait
jb
sub
jns
sub
sahf
sub
fwait
stos
ja
push
pop
push
jmp
cmp
out
das
outs
arpl
sbb
retf
sahf
dec
xchg
js
cmp
stc
pop
add
fcomi
sbb
push
jnp
adc
bound
or
sti
bnd
mov
jno
int
or
mov
into
jno
push
lock
xchg
imul
mov
jmp
out
pop
jecxz
pop
out
in
out
jl
cmp
cmp
fistp
data16
push
xchg
mov
or
push
push
out
or
xchg
xchg
les
sbb
aad
mov
mov
imul
inc
fcmovu
sar
out
mov
cmp
loopne
sahf
cmc
mov
mov
jmp
aam
mov
int3
and
xor
enter
out
pop
mov
push
sti
enter
dec
mov
mov
aaa
mov
pop
movs
or
repnz
cmp
cmp
push
aad
scas
mov
mov
out
pop
rcr
push
and
mov
xchg
sub
adc
fstp
outs
sbb
ins
add
xchg
mov
sar
repnz
sub
into
add
jl
fsub
sbb
sahf
xchg
lahf
sub
push
and
retf
les
xchg
inc
push
jge
rcl
or
or
cmps
arpl
pop
add
xor
xor
jno
mov
sbb
rol
(bad)
xor
jo
inc
rcl
pop
xor
cmp
push
sub
int
std
(bad)
push
push
and
rol
jmp
stc
aaa
mov
xor
and
push
daa
out
outs
push
loop
xor
push
pminub
and
add
out
mov
mov
ficomp
mov
fdivr
add
and
das
leave
sub
push
sahf
mov
int3
mov
cmp
in
pop
mov
mov
or
(bad)
jg
lock
dec
(bad)
xchg
aam
loopne
cwde
out
sahf
add
pop
(bad)
test
inc
sar
inc
nop
add
cmp
cmps
mov
test
inc
out
cmp
push
dec
out
(bad)
sbb
hlt
jne
xchg
fbld
adc
cmc
pop
fild
aas
lods
aad
cmp
pop
pop
xor
(bad)
in
arpl
mov
sub
mov
mov
push
les
sbb
popf
(bad)
fsubp
push
jne
mov
pop
and
call
adc
(bad)
(bad)
lea
cmp
int
adc
mov
or
push
adc
pop
inc
push
movs
push
pop
cli
lea
js
push
cmp
jl
js
xchg
lock
sbb
aaa
or
dec
push
es
retf
dec
mov
mov
mov
rcr
cli
fsubr
loope
fsub
in
cs
outs
cmps
adc
sub
or
add
daa
lahf
mov
mov
ja
mov
stos
shl
leave
mov
inc
push
xor
sbb
les
je
(bad)
xlat
sbb
call
and
pusha
int3
inc
retf
scas
mov
mov
add
aam
or
add
mov
adc
cmp
movs
lds
loop
lea
dec
ss
inc
xchg
les
push
cmc
xchg
arpl
aas
push
aas
pusha
xor
enter
pop
or
xchg
out
and
and
fmul
push
adc
push
mov
bound
test
pop
cli
in
cmp
ror
mov
mov
loope
push
iret
cmp
xchg
cmp
bound
cdq
idiv
sbb
retf
fcom
scas
arpl
fistp
cmp
pop
js
xchg
test
pop
lds
lock
(bad)
sbb
push
mov
fnstenv
loope
fidivr
mov
push
fidivr
hlt
fcomp
test
sub
cmp
mov
das
xchg
mov
dec
mov
and
dec
stos
mov
lahf
or
xor
push
in
retf
push
sbb
dec
shr
sub
push
rol
mov
sahf
adc
and
sub
pushf
ins
or
retf
jae
xor
jne
fdiv
xor
sbb
adc
pop
inc
daa
dec
hlt
jbe
jnp
cmc
cmp
les
or
mov
popf
stos
sub
(bad)
adc
jo
outs
push
bound
(bad)
out
std
fwait
je
popf
pop
les
pop
and
pushf
xchg
pop
aaa
push
leave
sub
pop
dec
ret
dec
cmp
fistp
cmp
sbb
jl
fs
mov
mov
and
dec
pushf
inc
adc
mov
mov
fcmovnb
jmp
pop
ins
sbb
inc
mov
xchg
inc
dec
fwait
push
mov
mul
inc
inc
jp
cs
sub
mov
or
pop
mov
movs
in
mov
sbb
mov
sbb
xor
add
(bad)
mov
and
jne
(bad)
js
call
dec
sub
sub
loopne
movs
inc
int3
cmp
rcr
test
lods
lea
adc
push
mov
xor
mov
cmp
fsubr
clc
clc
dec
adc
mov
sub
in
xchg
mov
ret
(bad)
lahf
mov
ds
jno
(bad)
fcmovb
(bad)
fist
lahf
cmp
jmp
add
sbb
es
imul
inc
rol
xor
fistp
adc
sub
adc
cwde
int3
addr16
push
mov
cmp
push
mov
ret
icebp
dec
jo
add
fs
fdivr
leave
sbb
mov
das
sahf
push
xchg
stos
mov
inc
xor
sub
popa
ret
sbb
jne
gs
cmp
xchg
movs
xchg
mov
dec
sbb
out
loopne
sbb
cmp
pop
jecxz
outs
mov
cmps
arpl
ins
sbb
or
push
pop
mov
fisub
hlt
test
mov
fcmovbe
ins
sub
jmp
add
mov
and
sub
mov
mov
mov
xchg
lock
xchg
ins
fidivr
push
mov
std
lea
ins
push
mov
fs
sets
xor
sub
sub
bound
mov
fsubr
sbb
imul
ins
addr16
inc
xchg
popa
sar
leave
pop
jecxz
leave
js
in
push
loopne
(bad)
icebp
cs
out
dec
inc
imul
jmp
pop
rol
sbb
fisubr
jle
stos
or
pop
mov
test
add
jecxz
js
cwde
and
and
inc
mov
movs
mov
std
ins
xchg
ss
movs
jb
jnp
sti
imul
adc
fcmovnu
inc
jb
div
clc
cmps
fsubr
or
jmp
sar
lock
add
sub
cmps
icebp
xchg
(bad)
fisttp
mov
dec
sub
push
lea
mov
add
pop
lahf
pop
sub
pop
add
call
into
pushf
dec
imul
dec
nop
fsub
enter
xchg
xor
pop
add
and
and
mov
hlt
inc
repz
xor
push
xor
fnsave
ins
bound
rol
movs
and
xor
cs
ins
imul
sbb
push
or
inc
sbb
sbb
ret
cdq
mov
pop
jne
xchg
mov
repnz
adc
dec
sbb
push
ins
mov
outs
imul
xor
fcom
inc
out
jecxz
jp
sbb
adc
sub
test
push
or
cmps
mov
sbb
jmp
arpl
push
push
xor
pop
add
out
add
fisubr
pop
call
in
hlt
pop
mov
and
(bad)
out
lahf
add
sar
adc
pop
mov
jle
out
lods
mov
(bad)
xchg
inc
jge
push
out
jo
mov
aaa
push
push
pop
add
ins
or
(bad)
inc
not
jp
daa
out
push
ds
add
cwde
push
jmp
push
dec
adc
(bad)
es
cmp
fwait
aam
and
popa
xchg
scas
in
fnsave
push
push
fdiv
mov
cwde
cmp
fs
mov
dec
add
ja
mov
ss
adc
test
lea
(bad)
out
sar
mov
loope
es
mov
rcr
es
jne
out
lea
jmp
and
lahf
xchg
sbb
les
jp
pop
call
retf
loop
jmp
stos
imul
sbb
add
xchg
data16
jno
stos
ins
sti
cdq
pop
out
in
ret
movs
pop
loop
pop
enter
xchg
adc
cmps
mov
mov
ins
pop
gs
sub
(bad)
or
cmp
jecxz
gs
dec
pushf
xchg
mov
pop
stc
dec
int
sub
repnz
leave
push
jbe
cmps
pusha
cmp
les
cmp
xchg
ds
mov
arpl
xor
inc
adc
es
pushf
pop
xchg
pop
push
cmc
cmc
xlat
into
sub
mov
mov
pop
jbe
retf
sub
add
adc
stc
aam
and
test
(bad)
cdq
div
pop
mov
inc
push
mov
mov
mov
icebp
mov
inc
ss
pop
xchg
scas
lods
dec
ds
cld
out
mov
movs
sbb
lods
test
or
mov
xchg
mov
adc
sbb
mov
jnp
pushf
mov
adc
sub
imul
(bad)
xor
nop
adc
cmp
loope
outs
ffreep
inc
fisub
or
inc
sub
push
inc
adc
xor
xchg
in
mov
int3
bound
cmp
adc
fs
inc
aas
xchg
cmps
arpl
push
aam
add
lds
sbb
std
cmp
cmp
add
sub
aam
ret
imul
lahf
std
lds
gs
imul
sahf
aaa
clc
popf
xor
cmps
dec
dec
in
and
add
sub
jle
jmp
aaa
in
cmp
mov
mov
rcr
mov
sahf
and
sbb
cmp
lock
(bad)
push
in
sti
es
adc
popa
xchg
push
cmp
pop
or
retf
xchg
retf
cmp
mov
push
iret
jle
bound
sbb
cmc
in
or
pop
pop
cwde
retf
or
pop
lock
scas
aam
test
sub
movs
inc
xor
inc
test
mov
aaa
xchg
scas
cld
xchg
jg
mov
push
or
shr
rcr
push
push
int
pop
mov
and
dec
sub
jge
xchg
or
mov
dec
(bad)
sbb
push
cmps
mov
pop
jmp
mov
hlt
rcl
pop
inc
add
sti
mov
sub
xchg
xchg
cmp
dec
xor
pop
repnz
pop
fs
xchg
mov
cs
sub
mov
ss
cwde
(bad)
fs
pusha
xor
out
lock
mov
retf
shl
mov
xor
loope
gs
cmps
outs
(bad)
lock
sbb
ss
push
gs
shl
adc
pushf
xchg
xor
ret
ss
(bad)
dec
mov
jle
call
mov
(bad)
test
dec
push
ins
adc
test
sub
aas
nop
fisttp
push
adc
jnp
pop
sbb
sub
push
mov
cmc
out
dec
jge
jbe
mov
mov
mov
bound
mov
adc
shl
jns
push
les
push
adc
pusha
add
lods
js
inc
push
inc
cld
mov
mov
push
dec
or
pop
dec
mov
das
out
pop
(bad)
aam
pop
shl
inc
or
(bad)
pusha
(bad)
mov
rep
fidivr
jecxz
jmp
adc
in
mov
retf
pop
sbb
inc
dec
mov
inc
mov
push
adc
(bad)
add
ss
jns
js
jno
addr16
and
mov
push
jno
and
mov
mov
inc
pop
mov
mul
stos
push
sbb
es
mov
scas
xor
ds
cli
je
psubd
cmps
aas
and
sahf
(bad)
dec
lods
dec
lds
inc
mov
pop
and
push
xor
inc
adc
out
sbb
sbb
dec
test
js
mov
das
ins
ins
rcl
mov
jle
iret
std
test
ds
add
fistp
in
inc
mov
adc
cmps
fs
mov
adc
mov
adc
div
pop
iret
or
sub
add
sub
scas
inc
shr
mov
xchg
cld
pusha
cs
gs
inc
fstp
mov
jo
pshufw
jnp
shl
fcom
mov
test
iret
out
xor
or
(bad)
mov
(bad)
out
std
iret
loope
add
mov
inc
xor
and
pop
push
jg
adc
and
mov
(bad)
mov
shr
(bad)
(bad)
fisttp
and
fldpi
addr16
aad
aas
cwde
mov
fsub
dec
mov
(bad)
fstp
daa
ret
pop
pop
mov
adc
inc
xor
pushf
sbb
and
pop
cmp
mov
into
repz
jns
mov
outs
fstp
scas
int3
and
imul
xchg
cmp
pop
ret
mov
jb
jo
jbe
iret
pop
mov
imul
jo
popf
(bad)
sti
or
xor
je
pushf
popa
mov
xchg
stc
jne
pop
inc
nop
sahf
inc
int3
rcl
int3
mov
xor
cmps
ss
adc
mov
dec
cmps
repnz
test
arpl
push
xchg
add
sbb
dec
(bad)
xchg
xchg
mov
cmp
cwde
lods
ins
rcr
sbb
stos
and
push
call
repz
fwait
arpl
adc
push
imul
repz
xor
inc
mov
xor
js
push
cld
xlat
ja
sbb
pop
xor
adc
sub
cmp
je
cs
adc
inc
sub
xchg
or
jecxz
lahf
cs
xchg
iret
jmp
add
add
pop
pop
shl
in
and
(bad)
daa
xchg
inc
test
cmp
jecxz
mov
dec
call
addr16
nop
fld
or
popa
pop
int
ins
ds
mov
xor
ret
rcr
adc
cld
jmp
dec
mov
js
mov
sub
je
fld
xor
inc
repnz
inc
movs
fisub
xor
popf
cmps
xchg
jmp
mov
ss
sbb
aad
sbb
mov
arpl
je
push
test
cmp
aad
sbb
les
jo
in
aam
div
fdivr
addr16
and
inc
shl
mov
push
and
dec
mov
xor
ror
xchg
sub
lds
pop
mov
cmp
imul
push
cdq
std
ins
inc
mov
cmc
frndint
(bad)
test
scas
and
sbb
sub
retf
gs
pop
add
pop
imul
adc
xchg
imul
pop
mov
test
les
mov
out
adc
fnstcw
mov
addr16
add
xchg
lods
ret
inc
(bad)
les
sti
jp
or
sub
cmp
fdivr
ret
pop
out
pop
xlat
inc
mov
std
in
in
pop
mov
call
jl
std
mov
xchg
xchg
inc
cwde
imul
retf
repz
dec
pop
mov
and
test
push
or
or
mov
mov
cmps
lea
or
xchg
gs
in
out
pop
sbb
add
push
cmp
dec
jge
mov
sbb
lock
xchg
std
push
pop
ins
mov
call
cmps
mov
jnp
mov
xchg
cmps
adc
xchg
popa
int3
pop
add
test
pusha
pop
jmp
rcl
add
cmp
rcr
and
(bad)
or
dec
and
fwait
enter
adc
(bad)
jmp
sar
inc
push
xor
lods
dec
and
xchg
xor
ds
fstp
cwde
pop
lea
imul
mov
xchg
lods
add
les
pop
test
xchg
add
jns
je
ret
(bad)
data16
cmps
mov
(bad)
sahf
out
stc
inc
pop
mov
lods
push
cmp
push
sti
(bad)
loop
in
jns
pop
adc
in
pop
push
aam
les
aad
mov
sbb
pop
aad
sub
into
cwde
cld
fs
retf
dec
push
scas
push
add
push
mov
and
mov
into
sub
cli
shl
xor
ds
cld
ret
ficom
inc
enter
inc
pop
jl
mov
add
dec
or
cmc
push
dec
jno
inc
loop
jle
pop
push
stos
cmp
lea
fnsave
xchg
test
scas
popa
push
repnz
dec
enter
fdiv
cdq
push
loop
mov
sub
nop
xchg
clc
fcomp
jae
jle
sar
mov
push
push
lds
dec
les
jbe
outs
ins
dec
stos
add
pop
call
adc
in
fwait
adc
dec
movs
pop
int3
and
enter
adc
jp
fidivr
fld
push
xchg
jb
mov
jns
test
xchg
mov
xchg
pop
cwde
and
js
sbb
xor
in
jmp
jne
lds
(bad)
add
fld
push
enter
ror
jle
(bad)
sbb
aam
cs
fdivr
jo
loopne
inc
or
mov
leave
xor
lods
mov
stos
inc
dec
cmp
movs
movs
inc
retf
in
adc
or
icebp
cmps
mov
push
mov
enter
mov
in
sbb
cdq
pop
mov
push
mov
add
xor
ret
or
sbb
ins
lea
inc
bound
xor
mov
aam
add
cmp
sbb
adc
cmp
inc
mov
imul
inc
sti
adc
push
das
xchg
ss
popa
(bad)
sub
jne
cs
shr
pop
jmp
push
push
ins
jg
(bad)
xchg
fild
xchg
or
fisttp
adc
repz
xchg
cwde
adc
js
mov
sub
sub
mov
nop
jo
mov
movs
push
js
jb
adc
arpl
scas
neg
add
or
cli
leave
jle
or
lock
mul
or
ins
mov
jns
and
(bad)
xchg
out
dec
mov
popf
and
sub
test
js
leave
cmp
and
out
push
jle
stos
xchg
fnstcw
pop
add
aas
stc
mov
call
mov
retf
sbb
sahf
data16
or
or
loope
cmp
outs
xchg
push
or
jb
xchg
jge
aam
int
inc
ret
into
push
and
mov
outs
test
mov
mov
stos
call
and
push
cmp
loop
push
fs
inc
daa
push
mov
ret
pop
xchg
js
scas
hlt
mov
sub
pop
popf
pop
sub
cdq
fs
pop
hlt
jp
(bad)
cs
arpl
sbb
loopne
jne
xchg
hlt
sub
adc
cs
loop
inc
movs
adc
jecxz
mov
sbb
jb
mov
sub
mov
pop
xchg
mov
mov
(bad)
fs
adc
popa
xchg
dec
cld
lea
pop
cmp
mov
xor
sbb
cmp
adc
jl
xchg
xlat
mov
xchg
dec
xor
aad
sub
(bad)
jo
data16
in
sub
xor
stc
lahf
not
repz
xor
outs
fdivrp
and
sub
adc
adc
push
fild
jge
fstp
cmp
fisub
retf
rcl
pop
leave
or
aaa
lds
lock
std
adc
jle
outs
xor
jb
int3
test
data16
(bad)
movmskps
xchg
ins
push
cmp
(bad)
in
sbb
dec
ja
lds
xchg
jb
or
pop
xchg
xchg
fwait
js
fidiv
adc
movs
call
(bad)
ss
cmp
dec
(bad)
xchg
ficomp
out
adc
retf
(bad)
xchg
shr
cmp
adc
and
ror
in
fstp
scas
mov
pop
iret
mov
pop
push
popf
or
add
sbb
inc
(bad)
add
sbb
xor
lock
xchg
mov
in
cmp
nop
ja
or
stos
sar
jns
fiadd
jo
add
fisubr
addr16
and
rol
(bad)
(bad)
mov
mov
or
cld
mov
push
movs
in
pop
pusha
jnp
out
lea
test
mov
inc
and
push
arpl
adc
jge
adc
push
clc
xchg
rol
leave
and
fiadd
in
pop
push
repnz
mov
pushf
mov
ins
sbb
jnp
shr
out
hlt
iret
xchg
xor
in
repnz
jnp
xlat
mov
inc
xor
sub
pop
jmp
cmp
mov
push
(bad)
out
push
sbb
cmp
pop
mov
test
pop
ja
fwait
gs
sub
in
inc
neg
inc
jge
(bad)
imul
inc
jne
ins
loopne
push
loopne
invd
jmp
pop
mov
jge
imul
movs
push
mov
mov
sbb
push
bound
movs
aad
sub
sbb
jl
jb
xchg
mov
out
cmps
(bad)
std
mov
movs
jg
stos
js
cmp
push
ins
push
push
lds
movs
sbb
ret
xor
jge
stc
add
lock
and
(bad)
pop
shr
neg
int3
outs
loope
mov
pop
jno
repnz
leave
imul
aam
inc
ja
add
and
mov
pop
mov
xchg
(bad)
mov
or
fs
pop
xchg
mov
loope
stos
(bad)
retf
fst
int3
addr16
lea
cmc
push
nop
(bad)
and
sub
test
inc
aaa
popf
loope
retf
ror
sub
xchg
sbb
xchg
and
outs
iret
cmp
fucomi
fistp
out
in
or
(bad)
aaa
cs
lods
and
xor
lods
sbb
pop
sbb
inc
pop
jae
inc
(bad)
icebp
mov
sbb
mov
imul
mov
push
icebp
je
xor
je
outs
cld
mov
dec
sbb
or
int
mov
jbe
pusha
nop
add
stc
jae
sbb
aad
dec
cmps
out
dec
sbb
and
fist
cmp
push
push
mov
daa
aaa
dec
dec
loopne
shl
pop
clc
rol
xchg
xchg
ds
lock
in
add
out
(bad)
enter
daa
adc
adc
cmp
inc
or
sbb
mov
std
xchg
hlt
sahf
cdq
ins
mov
mov
or
icebp
mov
push
xchg
jmp
sub
or
mov
pop
adc
sub
daa
pop
ss
mov
dec
push
fisubr
js
or
sti
or
mov
mov
dec
xor
lock
lods
push
xchg
push
nop
call
in
sti
jecxz
nop
fcmovnbe
xchg
jns
cwde
stc
add
and
iret
sbb
mov
mov
adc
fisub
xor
push
out
ds
jae
push
test
xlat
enter
push
or
cld
ret
or
in
cdq
dec
pop
(bad)
loopne
outs
int3
fs
mov
mov
loope
pop
cmp
or
pop
mov
and
aam
cli
add
fdivr
stos
xchg
jns
adc
xor
push
xor
lock
retf
jo
push
jnp
sub
int
push
jg
sbb
cmp
xchg
add
ret
jno
out
pop
test
into
xor
add
add
jp
jecxz
ins
daa
push
pop
jmp
cmc
push
and
loopne
std
arpl
dec
cmps
hlt
ss
sub
lahf
jb
xchg
mov
(bad)
addr16
sub
stc
lods
jl
push
pusha
scas
xchg
add
mov
add
cdq
push
das
(bad)
jo
cmp
jae
cmp
xor
add
icebp
xchg
inc
push
xchg
in
cmp
ins
and
aad
pop
bound
sbb
push
and
shl
hlt
ins
push
fsubr
mov
repz
adc
pop
dec
mov
out
imul
clc
cmp
rcl
jg
xor
xor
pop
xchg
inc
mov
sar
mov
sub
push
pop
je
ins
xor
xchg
dec
mov
clc
int3
mov
aaa
jnp
add
xchg
int
retf
jmp
sti
pop
loope
cmp
or
push
mov
jno
jle
shr
lods
inc
sar
push
shl
and
leave
mov
xor
push
fcomp
mov
xor
shl
mov
in
stc
fsubr
aad
push
pop
test
lods
xor
and
sub
repnz
xchg
cmp
adc
call
imul
mov
cli
xchg
das
adc
clc
into
repnz
popa
test
cmps
pop
xchg
jp
jb
loopne
pop
pop
cmp
bound
lds
shl
scas
das
retf
mov
cs
mov
hlt
cmp
outs
push
or
ins
pop
fild
xor
adc
pop
shl
push
dec
push
gs
jns
pop
jb
cmp
xor
sub
lea
test
mov
cmps
fisubr
push
out
and
jbe
movs
xor
dec
fs
sub
sbb
call
mov
imul
add
int
movs
in
ins
mov
xchg
enter
jmp
bound
ins
sbb
ret
sbb
xchg
fmul
inc
repz
pop
xchg
mov
(bad)
cmps
push
xlat
push
call
mov
mov
stos
repz
push
mov
bound
dec
icebp
xchg
fucom
sub
movs
mov
scas
mov
arpl
sbb
xchg
cli
sub
ds
dec
icebp
pop
jmp
dec
xchg
ror
xchg
pop
add
cld
daa
inc
cmp
out
jmp
xchg
add
push
popa
lock
pushf
and
fisubr
cdq
pop
retf
jb
jl
sub
mov
cmc
mov
aam
(bad)
popa
sub
stc
ret
push
sti
jns
icebp
repnz
mov
outs
lods
xchg
jp
fild
sbb
push
mov
or
out
test
xchg
pop
in
mov
sbb
jg
sbb
(bad)
xchg
push
push
ds
inc
cmc
pop
(bad)
adc
mov
and
inc
jl
je
mov
dec
loop
mov
pop
fisttp
iret
outs
cwde
jge
xchg
pusha
inc
jbe
repz
cmps
push
pop
(bad)
repnz
and
imul
xor
sbb
loopne
outs
adc
shl
sbb
mov
xchg
into
pop
add
mov
daa
dec
rol
loope
push
pop
mov
les
bound
repz
ja
xor
mov
cmc
sub
mov
cmp
sbb
lds
dec
mov
pop
sub
ud1
xchg
jl
xchg
or
sub
jnp
or
test
cmp
jb
jnp
pusha
sahf
jae
js
aaa
lahf
jbe
inc
sub
push
dec
xor
das
mov
outs
pop
fdivr
jecxz
add
inc
test
ds
add
aaa
jle
movs
and
cli
and
call
xchg
test
fdivp
faddp
pop
fcmovnu
test
xchg
pop
gs
neg
std
push
jmp
cmp
cwde
and
(bad)
push
popf
pop
js
mov
pusha
sub
mov
inc
inc
cmps
outs
popw
test
adc
popa
js
or
dec
push
sbb
add
mov
out
fwait
mov
inc
add
popa
pop
mov
mov
dec
jecxz
jg
xchg
adc
cmps
stc
stos
mov
adc
cmp
lock
test
xor
adc
xchg
(bad)
cmp
pop
mov
push
mov
cld
inc
jl
rol
stc
out
dec
cwde
mov
call
mov
stc
popa
cmp
xchg
std
xor
mov
test
dec
mov
or
loop
mov
push
dec
scas
dec
xchg
pop
sbb
mov
and
cmp
xchg
inc
(bad)
dec
adc
inc
sar
scas
fmulp
(bad)
aaa
mov
cmovnp
and
pusha
out
mov
cs
mov
inc
cs
xor
je
jg
dec
add
jl
in
cli
mov
cwde
fisttp
(bad)
pusha
or
test
fdivr
jne
arpl
inc
retf
ja
xor
inc
js
loope
repz
mov
push
jmp
rcr
dec
addr16
outs
loopne
test
in
pop
lods
add
iret
cmp
fsub
movs
imul
popf
in
xchg
outs
jmp
call
mov
cmp
bts
adc
inc
xchg
ret
ret
inc
and
push
gs
add
mov
shr
fmul
repnz
push
imul
mov
rcl
call
mov
mov
shl
into
adc
mov
jbe
push
into
mov
aaa
xchg
xor
push
je
jnp
jecxz
xchg
push
pop
lahf
mov
cmps
pop
dec
mov
push
out
push
loop
dec
and
jge
out
popa
push
push
push
aam
pop
push
stc
fidiv
dec
cmp
mov
popa
lock
xchg
push
shl
imul
ret
jl
sub
test
push
jge
cmc
fimul
rcr
push
sbb
xchg
dec
test
push
push
add
inc
fwait
hlt
test
sub
jle
mov
jp
cmp
cmp
ret
outs
adc
cmp
(bad)
push
aad
mov
and
or
(bad)
mov
in
imul
jle
data16
mov
xchg
xchg
add
and
jg
add
shl
push
cmp
sub
push
lahf
mov
jmp
out
imul
or
push
mov
sub
(bad)
jmp
pop
std
push
jne
dec
aam
mov
xor
and
mov
xchg
call
aam
push
aas
sub
ins
xchg
push
lea
xchg
imul
push
icebp
xchg
mov
clc
and
dec
pop
and
cld
cmp
das
mov
adc
adc
push
xchg
or
nop
retf
bound
cmp
aas
xor
inc
aaa
inc
add
push
xchg
mov
test
fdivr
loope
jns
or
shl
mov
js
push
ss
scas
ja
clc
adc
push
fadd
mov
stos
icebp
mov
outs
cmp
hlt
repz
add
dec
movq
dec
enter
sbb
packssdw
xlat
ja
in
loop
or
sub
jp
fstp
mov
arpl
aas
in
pop
das
ss
in
sub
pusha
xchg
mov
sbb
mov
cmp
js
lds
xchg
ret
mov
jb
jmp
pop
into
lea
ds
sahf
dec
in
out
and
ja
dec
or
les
jno
jmp
xor
push
mov
mov
mov
sti
mov
jecxz
xchg
mov
pop
mov
jb
rcr
mov
sbb
cmp
arpl
imul
pop
pushf
add
dec
add
add
add
lock
mov
(bad)
mov
ret
xchg
icebp
cmp
dec
sub
cmps
sbb
in
inc
das
xchg
push
and
popf
(bad)
sti
lea
add
gs
pushf
sahf
inc
loopne
xchg
jmp
and
pop
push
xor
into
mov
rcr
pop
(bad)
ret
mov
and
mov
aas
adc
lods
scas
inc
test
js
clc
mov
jne
fidivr
popa
jo
cmp
jp
ins
pop
sbb
jae
add
or
add
sub
adc
cmp
adc
test
cdq
push
adc
jmp
rol
jno
push
fcom
(bad)
lods
jnp
(bad)
lds
jge
(bad)
scas
sbb
js
mov
dec
add
movs
popf
mov
sub
or
mov
jo
test
add
sub
sbb
add
mov
mov
pop
test
mov
and
iret
ja
shl
jo
pop
popf
mov
inc
xor
and
jl
int
push
push
mov
push
sti
adc
inc
sar
mov
mov
mov
push
or
and
test
frstor
test
stos
pop
and
xchg
jmp
mov
enter
into
sar
pop
mov
out
in
icebp
lock
out
ss
fs
cmp
mov
rol
jmp
lods
js
movs
mov
pop
xor
int
jmp
push
jecxz
fcomp
sbb
sub
sbb
xor
int3
mov
mov
xor
and
cmp
xchg
inc
dec
or
jmp
adc
aam
add
arpl
int
in
cmps
jno
nop
cli
adc
xor
pop
stos
dec
psubd
mov
aaa
lea
js
loopne
adc
inc
add
mov
add
mov
ror
sbb
mov
sti
push
jecxz
scas
iret
pop
jbe
mov
xchg
sbb
in
inc
jp
jmp
stos
ficomp
sub
xor
push
lods
xor
sub
mov
cwde
out
inc
test
jno
pusha
push
test
jle
sbb
adc
jo
dec
call
in
sub
jb
inc
int3
shl
pop
scas
imul
fs
push
int3
and
or
stos
out
movs
clc
into
xor
pop
or
mov
int
mov
std
repz
imul
bound
pop
jno
retf
dec
test
(bad)
mov
imul
(bad)
jg
sub
test
jmp
push
test
sbb
in
mov
sbb
mov
jp
push
dec
fbstp
jbe
mov
mov
int3
ins
sbb
daa
mov
repz
dec
repz
ret
jmp
bound
mov
adc
div
sbb
out
int3
int
bound
into
test
adc
add
push
lea
jnp
or
das
sub
lea
adc
adc
fidivr
aad
scas
pushfw
adc
adc
std
mov
and
sbb
xchg
and
test
sub
cmp
or
and
lock
jns
leave
or
sub
icebp
cmp
pop
emms
out
inc
retf
sti
mov
fdivr
sbb
add
mov
test
sub
push
sti
cld
jbe
fstp
sbb
into
adc
mov
stc
repz
pop
sub
push
and
loope
sub
(bad)
cmp
sbb
mov
sbb
fisttp
mov
iret
not
stos
ja
dec
pusha
add
mov
push
xchg
sahf
std
cmp
or
or
iret
add
das
xor
xchg
or
dec
ds
jecxz
mov
(bad)
adc
das
sbb
cld
pusha
pop
and
push
pop
adc
rcl
addr16
sbb
repnz
jl
add
adc
js
xchg
clc
mov
and
xchg
inc
sbb
fsubr
retf
mov
movs
mov
add
cmp
jo
test
add
push
xor
lds
add
adc
jmp
fldenv
cld
loopne
pusha
fisttp
mov
ficom
mov
push
(bad)
jg
inc
and
cmp
xchg
out
jbe
push
scas
jnp
cmps
test
retf
gs
(bad)
mov
pusha
xor
cmp
lods
ror
add
in
shr
pop
mov
mov
xchg
pop
and
lea
sub
(bad)
mov
jb
cmp
cmp
add
das
fs
xchg
test
mov
inc
and
cmp
addr16
out
ret
jns
sub
or
xlat
and
sub
mov
out
mov
push
sbb
adc
push
and
jnp
mov
nop
jno
mov
push
jl
adc
pop
lea
addr16
imul
in
xchg
(bad)
mov
lahf
ret
test
test
push
sub
jmp
loope
icebp
sub
in
repz
repnz
or
test
imul
outs
mov
fsub
call
pop
ins
cli
xor
popa
cs
xchg
cmp
dec
(bad)
fwait
ss
cmp
inc
add
sbb
stc
mov
int
pop
adc
dec
mov
cdq
call
ins
or
mov
mov
ja
or
fisubr
add
sub
rol
(bad)
or
dec
push
dec
pop
jno
jmp
out
icebp
daa
and
sub
mov
sahf
push
xor
push
test
jle
inc
les
xor
xchg
mov
adc
pop
sar
xchg
mov
cmp
mov
mov
push
add
popf
dec
retf
push
out
mov
and
adc
sub
xchg
out
ror
pop
mov
movs
outs
xchg
cmp
mov
sub
add
push
sub
push
cdq
retf
iret
test
pop
lods
sbb
es
push
mov
out
aad
push
out
(bad)
and
inc
cld
jg
repz
inc
and
(bad)
cmp
or
popa
les
ds
nop
rcl
cmp
jp
ja
pop
imul
inc
(bad)
test
xchg
lock
nop
xor
fadd
xor
call
push
imul
fcomp
dec
jge
mov
call
adc
ins
sbb
jne
add
or
mov
mov
mov
mov
mov
movs
call
out
movs
push
lea
xor
xor
pop
int
mov
mov
in
mov
test
or
leave
pop
xchg
popf
mov
(bad)
sbb
cmp
jnp
sbb
out
and
mov
inc
aad
and
stos
mul
sbb
xor
xor
cmp
inc
js
icebp
cmc
clc
fwait
push
xchg
dec
fs
ds
xchg
mov
ds
retf
imul
xchg
sbb
es
js
push
shl
rcl
push
stc
loopne
dec
repnz
inc
pushf
arpl
ss
add
jmp
jge
mov
shl
xchg
xor
cmc
inc
(bad)
pop
dec
jmp
push
clc
lahf
cmps
ret
xor
loope
push
mov
and
inc
mov
pop
xchg
mov
bswap
pop
mov
pushf
mov
mov
mov
jne
cdq
ss
ret
push
sub
push
mov
mov
lahf
xor
pop
push
mov
jmp
lea
sbb
inc
sbb
dec
pop
fisttp
dec
dec
dec
cwde
stos
outs
adc
iret
sbb
std
rcr
xchg
(bad)
adc
ret
cs
mov
mov
sub
fsubr
sti
inc
ret
or
adc
in
push
cmps
and
jg
jbe
sbb
std
js
and
rol
bound
ret
push
es
sbb
adc
xlat
mul
add
or
xchg
popf
sahf
loop
daa
cmc
and
mov
fstp
pop
cli
inc
jp
dec
and
js
movs
mov
pop
adc
sub
cmp
cmp
fisubr
add
cli
cmp
pop
mov
bound
pop
bound
or
xchg
aaa
popf
aad
cmp
xchg
hlt
add
and
dec
sbb
push
xchg
ins
and
cmps
out
xor
pop
and
fimul
adc
adc
jp
loopne
vpshuflw
xor
fadd
arpl
sbb
ja
add
push
push
and
push
jle
mov
xor
xchg
mov
push
es
cmp
mov
nop
or
enter
pop
dec
aam
inc
sbb
loopne
xor
loope
jo
retf
mov
dec
dec
fwait
les
jecxz
std
jb
call
xchg
iret
xlat
lods
sbb
inc
in
call
std
and
dec
mov
push
fs
imul
ror
adc
mov
ret
mov
popa
fsub
sahf
outs
gs
mov
jae
not
inc
adc
lea
and
fs
sub
sub
div
mov
dec
jne
inc
pop
cmps
out
adc
xrelease
sub
(bad)
push
xor
out
inc
push
stc
sub
sbb
ret
cmp
xchg
add
pushf
lahf
fstp
jmp
(bad)
out
or
cmps
movs
pushf
dec
not
pushf
(bad)
es
mov
dec
cmc
pop
push
jo
sahf
cmps
mov
sar
mov
xchg
daa
sub
and
dec
test
add
sbb
dec
lahf
or
cmc
add
push
or
adc
ins
outs
xor
shl
sti
inc
ret
sbb
out
pusha
pop
jge
inc
lds
fwait
jae
add
pusha
xchg
jp
fld
or
adc
retf
outs
dec
pop
or
jnp
pop
sub
dec
xchg
ss
cmp
mov
rcl
inc
les
clc
mov
pop
add
push
rcr
inc
mov
pop
push
fst
in
pop
sahf
loope
(bad)
pop
cmps
push
mov
jnp
cmps
push
and
std
sbb
mov
jecxz
scas
loop
scas
(bad)
bound
mov
add
mov
jbe
clc
jne
inc
dec
cmp
cs
cmp
sub
jnp
mov
jmp
xor
sbb
push
dec
jns
push
mov
out
fstp
shl
cmp
push
jo
dec
pop
out
jge
jp
xlat
lds
xor
xchg
vcvtsd2si
icebp
pop
fsubr
mov
fnstcw
icebp
sti
jno
(bad)
call
mov
mov
dec
add
aam
sbb
adc
cmps
jnp
daa
cmps
movs
mov
test
mov
rcr
inc
mov
adc
loope
retf
fdiv
arpl
add
push
jno
test
in
sub
cdq
cmp
inc
cld
retf
cdq
xchg
ss
add
daa
sbb
jle
jg
lahf
inc
cmc
xor
xlat
xchg
xchg
inc
cwde
fcom
dec
stos
movs
adc
pop
in
mov
mov
jnp
mov
fsubr
call
or
das
jge
xchg
ret
lea
and
add
and
or
push
aad
fs
int3
adc
(bad)
jno
popa
test
mov
xor
cmp
clc
call
mov
rcl
add
xor
(bad)
sbb
sahf
sbb
push
loopne
inc
sysexit
jge
jb
sbb
mov
test
or
in
scas
mov
repz
jp
xor
push
xor
mov
inc
pop
mov
cli
inc
cmp
int
adc
pushf
(bad)
repnz
add
pop
mov
push
xchg
cmp
dec
aas
and
ja
jecxz
out
es
xchg
mov
je
jmp
shr
jmp
cmc
ffree
in
mov
call
cdq
pop
jae
(bad)
jnp
stos
addr16
xchg
mov
add
push
ja
sbb
(bad)
mov
mov
lea
lds
push
fidiv
adc
xor
dec
ins
stc
jmp
icebp
add
jae
test
push
inc
cmp
cmp
xchg
div
js
and
xchg
cmp
cwde
xor
shr
adc
xchg
mov
lock
inc
dec
in
test
push
push
jae
das
enter
mov
inc
pop
add
div
mov
or
imul
mov
out
pop
call
and
aas
(bad)
fdivr
fstp
in
outs
dec
enter
add
add
jmp
dec
in
(bad)
jno
and
xor
ins
add
jecxz
push
test
cwde
(bad)
rcr
cmp
jle
jp
daa
adc
pop
int
js
sub
(bad)
ret
mov
lea
lahf
popf
ret
pop
push
aas
imul
pop
or
lock
iret
iret
mov
mov
rcr
aam
cmp
pop
cdq
jns
out
push
les
jg
fstp
mov
and
jns
(bad)
xlat
inc
rol
mov
test
ja
(bad)
loop
aaa
pop
jo
movs
dec
lahf
ret
dec
out
lea
data16
push
push
xchg
imul
popf
adc
repnz
icebp
aas
mov
test
sbb
ins
cdq
in
nop
jo
sti
lea
sbb
(bad)
push
mov
inc
inc
pop
pusha
lahf
rol
mov
push
jg
adc
imul
jmp
out
out
adc
movs
and
xchg
push
int
adc
and
stc
xor
cld
sti
ret
or
pop
popa
pop
pop
sti
(bad)
out
mov
mov
pop
outs
cs
cdq
pop
mov
fnstenv
mov
js
inc
hlt
aaa
mov
pop
xchg
dec
cmp
xor
push
sahf
xchg
dec
jg
lods
inc
cli
(bad)
fnstenv
icebp
push
inc
push
pop
add
in
out
pop
loop
jne
es
add
cmc
xchg
(bad)
pop
in
mov
add
push
int
stos
pop
ins
fs
push
popf
ret
jne
fstp
xor
sbb
inc
xchg
fcmovnbe
rol
sub
xlat
add
xchg
int
xor
cdq
sub
mov
stos
fbld
push
out
fdivr
pop
test
mov
push
outs
movs
mov
jle
ins
jno
jb
retf
in
bnd
mov
adc
mov
fstp
jle
jmp
jno
lods
ins
inc
je
jle
adc
dec
and
prefetcht1
test
and
sar
div
jae
mov
dec
dec
pop
cs
dec
test
sub
and
ins
aam
aas
push
popa
loopne
aaa
aad
cwde
pop
(bad)
hlt
dec
pop
sti
retf
addr16
sbb
sbb
test
iret
cmp
adc
mov
or
xchg
jae
fmul
sar
imul
popa
adc
scas
ins
xor
mov
add
and
scas
pop
hlt
mov
imul
repnz
movs
(bad)
lea
test
jmp
mov
aas
(bad)
or
jae
lahf
fist
dec
inc
cmp
push
cwde
inc
jno
sti
mov
call
les
add
sub
and
pop
aaa
int3
push
push
ins
movs
sub
scas
mov
pop
popa
jbe
xor
mov
stos
aas
jno
push
mov
adc
clc
mov
jbe
enter
idiv
mov
mov
adc
dec
dec
jmp
jge
xor
cmc
adc
pop
mov
cmps
mov
and
shl
icebp
jg
(bad)
lahf
movs
pop
mov
bound
ror
jo
ins
xchg
and
out
ror
inc
push
push
hlt
imul
xchg
cmp
(bad)
nop
mov
sub
cmps
test
xchg
jmp
scas
mov
ror
icebp
cdq
pop
and
mov
ja
add
inc
cdq
js
xchg
cmps
(bad)
xlat
aad
jl
aaa
and
or
out
cmc
fidiv
xchg
rcl
inc
ja
dec
sub
adc
add
sbb
sbb
pop
aas
pop
push
add
mov
scas
stos
stos
dec
mov
popa
pop
cmps
cmc
inc
adc
pop
mov
add
stos
call
stc
out
retf
push
push
sti
mov
or
in
xchg
aaa
xchg
imul
stos
lock
inc
inc
mov
xchg
adc
pop
push
sar
cmp
add
cmp
jmp
xacquire
outs
push
ret
push
popf
test
adc
out
inc
xchg
and
(bad)
int
(bad)
mov
or
xchg
pop
jbe
sbb
adc
int
rcl
stos
ss
daa
jle
adc
inc
and
xor
(bad)
retf
imul
lea
xor
dec
fld
(bad)
test
pushf
addr16
pop
dec
popa
mov
aas
data16
xchg
es
shl
je
or
xchg
jo
or
iret
aaa
scas
push
nop
add
in
or
push
pop
dec
jecxz
jbe
mov
or
imul
ret
mov
out
or
aam
das
and
cmp
aaa
pop
loop
or
pop
sbb
mov
mov
pop
fidivr
fidiv
pusha
sahf
and
cmp
mov
jge
jl
pop
mov
xchg
xchg
repz
fwait
dec
out
add
jae
mov
out
aaa
repz
jns
pop
arpl
and
aad
popf
and
fwait
aad
loope
fistp
retf
jne
add
xchg
addr16
repnz
repz
add
leave
lock
dec
(bad)
fidivr
and
lahf
cli
and
cwde
or
(bad)
pop
cmp
pop
ret
jnp
retf
sub
scas
aad
cmp
(bad)
aad
mov
imul
mov
and
inc
inc
mov
inc
dec
sti
dec
push
fcomp
movs
mov
loope
or
es
rcl
and
es
arpl
test
add
pop
ss
push
pop
sub
test
bnd
loopne
iret
xchg
jecxz
movs
sbb
pop
mov
(bad)
mov
js
sub
xchg
adc
ins
jg
shl
ins
xchg
and
fbld
je
inc
gs
movs
out
add
mov
cmp
out
(bad)
pop
sbb
xchg
sbb
jge
mov
mov
xchg
ss
retf
jp
dec
loop
jecxz
cld
pop
fst
sub
les
cmp
imul
sub
bound
and
outs
shr
mov
lds
or
dec
daa
aas
inc
fwait
or
jnp
rcr
lock
int
inc
imul
sub
arpl
scas
inc
cmp
cwde
lods
add
mov
inc
mov
xchg
cmps
mov
and
xchg
xor
mov
mov
(bad)
mov
jl
push
(bad)
sti
jae
out
into
fadd
pop
imul
jmp
ja
mov
mov
daa
ins
add
sbb
sbb
fidivr
outs
mov
(bad)
push
ins
movs
outs
aas
xchg
jb
(bad)
aad
jecxz
popf
dec
addr16
loopne
mov
pusha
jns
jg
sahf
xchg
add
inc
mov
push
lea
call
(bad)
xor
retf
ret
lar
outs
out
pop
aam
data16
push
fst
mov
and
fist
push
pushf
cmp
jmp
arpl
out
or
xchg
(bad)
(bad)
jbe
cmps
xchg
mov
js
movs
push
or
jge
or
ja
push
les
fist
xchg
adc
std
mov
popf
fmul
jecxz
(bad)
es
fstp
jb
adc
jbe
cli
sbb
aas
in
pop
jne
push
push
cmps
add
pop
xchg
jno
(bad)
sbb
and
popa
push
popf
dec
xor
xchg
aas
sbb
mov
stos
scas
in
pop
leave
in
add
fs
stc
push
fwait
(bad)
ins
iret
retf
mov
sbb
(bad)
in
cwde
scas
add
inc
push
add
sub
aas
mov
sub
jbe
or
push
movs
sub
xor
xchg
dec
or
fsubr
add
cmc
(bad)
pop
jno
call
lods
popa
mov
(bad)
xlat
mov
cmc
retf
dec
adc
fimul
mov
addr16
call
imul
jbe
sub
adc
and
dec
cmc
pop
(bad)
jae
and
xchg
daa
aad
push
retf
jne
lea
aam
push
dec
push
add
adc
add
add
jmp
mov
ret
loop
push
fstp
mov
ins
jp
mov
pop
aaa
mov
xor
jmp
jecxz
pop
jo
fmul
lds
push
xor
mov
(bad)
jno
dec
sar
push
call
sub
dec
sub
inc
mov
jbe
mov
call
push
or
xchg
stc
fidiv
inc
xchg
xlat
stos
(bad)
fisttp
std
cmp
pushf
jo
cmp
inc
in
rcr
(bad)
scas
retf
out
movs
call
ja
das
jae
pop
in
mov
cmp
lea
fsub
jns
clc
xchg
test
fisubr
push
inc
adc
sub
imul
pushf
cmps
sub
sbb
mov
jns
arpl
pop
push
mov
jecxz
(bad)
sub
xchg
push
nop
(bad)
into
out
push
scas
popa
cmps
cmc
mov
or
sub
in
inc
call
pop
sbb
iret
mov
pop
cld
mov
xchg
call
push
js
ins
cmp
pop
out
mov
xchg
jmp
pop
imul
loopne
stos
jg
xor
cmp
add
inc
push
push
popa
push
cmp
cmp
push
inc
sti
pop
or
sahf
pop
add
jle
mov
stos
daa
imul
or
push
test
push
cmp
(bad)
and
mov
push
cs
jbe
mov
clc
ret
sahf
daa
pop
rcl
imul
scas
jle
imul
in
pop
sub
xchg
cmp
aas
sub
(bad)
mov
pop
repz
dec
push
or
xchg
rol
outs
adc
dec
in
mov
dec
xchg
sub
addr16
lds
pop
mov
ficomp
sbb
ins
(bad)
pop
int
push
shl
xchg
fwait
push
sub
fiadd
nop
jne
gs
push
retf
pop
mov
dec
lahf
or
jo
test
push
jecxz
es
jp
cmp
mov
jle
lds
pop
int3
jns
pop
fwait
inc
iret
in
cmc
mov
aam
dec
(bad)
int
fld
push
mov
out
dec
xor
and
pop
push
sbb
call
js
shl
cmp
fisubr
ins
and
sbb
out
push
cmps
lods
(bad)
cmp
aas
fild
xchg
pop
cmc
xor
scas
lods
adc
cmp
add
cmp
movs
add
mov
call
fmul
int
adc
in
gs
lahf
xor
dec
add
sbb
lods
out
pop
add
call
dec
in
std
sbb
cmps
mov
nop
add
push
scas
push
or
test
aad
mov
dec
in
(bad)
pop
sub
mov
lea
jle
repnz
mov
sbb
adc
jmp
add
loop
pop
iret
int
push
frstor
std
sbb
out
scas
fnstcw
push
mov
repnz
hlt
adc
adc
inc
inc
mov
mov
fisub
sub
xor
xlat
mov
pusha
adc
fdivr
dec
mov
mov
and
shr
ins
adc
inc
sar
jg
cmp
xchg
rcl
sub
(bad)
sbb
out
adc
ins
sbb
(bad)
int
mov
scas
lahf
sbb
mov
(bad)
push
fadd
mov
pusha
pop
je
stos
sub
sti
or
aam
frstor
xchg
mov
popa
pop
xchg
pop
imul
cmp
inc
mov
jno
mov
jno
in
adc
hlt
pop
mov
cmps
jge
out
xchg
push
pop
jne
mov
gs
and
cld
icebp
lahf
mov
jne
ja
mov
mov
sub
push
cmp
ficom
jl
lock
xchg
enter
mov
pop
inc
mov
xchg
(bad)
int
mov
movs
scas
cmc
mov
sbb
fild
push
ja
push
xor
mov
jp
repnz
dec
jno
je
push
jg
jle
imul
popa
xor
lods
aas
mov
or
mov
jmp
add
push
cld
push
mov
cli
ss
repnz
outs
xor
mov
out
popf
pop
ret
outs
or
mov
or
and
es
pop
hlt
pop
out
ret
loop
into
(bad)
shl
inc
outs
xor
inc
pusha
pop
neg
popa
retf
sub
pusha
cmps
push
pandn
mov
adc
(bad)
movs
jecxz
mov
out
add
xor
in
mov
jle
(bad)
adc
lea
test
jmp
pop
fidiv
jae
jne
cld
jnp
adc
aam
mov
cwde
push
cwde
jmp
sbb
test
push
gs
inc
cmps
xor
gs
mov
cmp
mov
mov
js
pop
pop
call
mov
(bad)
dec
xchg
into
outs
in
or
mov
dec
or
mov
rol
mov
rol
ja
sub
lea
les
stc
sub
jle
mov
xchg
ins
retf
mov
sub
inc
pop
cmps
mov
fs
xchg
pop
div
mov
loop
xor
test
mov
and
mov
in
jb
adc
xchg
test
xchg
call
pop
mov
(bad)
pop
jo
add
daa
jg
cli
(bad)
in
sbb
enter
fs
add
addr16
repz
cli
fxtract
lods
(bad)
movs
jnp
into
fild
ret
mov
and
add
stc
jne
jecxz
xor
popa
int3
mov
scas
dec
int3
xchg
mov
push
call
push
xor
xor
sub
pushf
mov
aad
mov
fild
call
out
mov
dec
jle
push
or
dec
stos
adc
xchg
sbb
movs
call
or
xchg
jg
nop
cmp
lods
and
sti
div
jmp
psrlq
or
pop
adc
jmp
es
scas
ror
jge
cmp
addr16
sub
mov
dec
movs
js
lock
and
ss
xor
pop
push
mov
leave
bound
retf
hlt
retf
xlat
mov
retf
sub
in
in
out
int3
shl
jl
aad
nop
push
xor
int3
rcl
out
fadd
fs
jmp
mul
aaa
cwde
adc
adc
aam
fadd
inc
repz
in
ss
sbb
pop
cmp
pop
push
outs
cmp
and
push
inc
(bad)
xchg
aas
adc
fwait
lods
add
imul
mov
aad
rcr
loopne
xchg
les
scas
call
xchg
mov
std
div
repnz
mov
mov
pusha
shl
sub
mov
jmp
pusha
cwde
lock
inc
data16
outs
dec
stos
cld
lea
jge
jb
movs
(bad)
mov
push
scas
inc
stc
or
dec
out
(bad)
fs
call
xchg
push
aam
push
xchg
xchg
jno
inc
(bad)
in
pop
sub
push
lds
mov
dec
push
scas
xchg
pushf
mov
mov
sub
lds
xor
lahf
adc
pop
jg
sub
in
rol
mov
cmps
pop
in
imul
jo
dec
cvtps2pi
inc
xlat
xchg
xor
push
cli
jb
jnp
fbstp
mov
fisttp
fld
add
(bad)
shl
inc
pusha
sub
fisttp
or
or
aas
cs
push
(bad)
adc
inc
push
push
mov
outs
inc
jecxz
scas
aad
scas
inc
inc
jge
push
(bad)
stc
adc
mov
imul
mov
mov
pop
push
lods
mov
mov
hlt
aam
pop
or
out
out
lds
(bad)
add
xchg
push
pop
cld
push
lods
xchg
fadd
test
jns
js
imul
inc
jns
mov
call
jnp
sbb
xor
jle
jne
sub
pop
ds
add
shl
cmp
cmps
mov
jge
outs
mov
xor
int3
jbe
sbb
push
or
jae
cmps
lock
sbb
in
pusha
popf
loop
adc
adc
xchg
jmp
jmp
sub
dec
or
rol
xchg
fxch
ror
mov
mov
xchg
xchg
cmp
or
jns
ins
cmps
lds
inc
pop
aaa
jbe
cmp
mov
xor
pop
add
mov
inc
popa
das
pusha
xchg
dec
das
out
pop
sbb
mov
sub
aaa
lods
or
sbb
and
jge
mov
stos
sti
mov
repz
mov
cld
push
sub
and
mov
sahf
push
inc
cmp
aas
xchg
iret
mov
cld
je
and
push
adc
test
mov
jecxz
bound
test
add
xor
into
or
mov
mov
and
js
xor
sub
(bad)
mov
sbb
push
and
cwde
mov
xchg
jmp
mov
das
sbb
xor
jecxz
cdq
mov
jns
cmp
xlat
in
xchg
popa
pop
sbb
mov
scas
jg
sub
mov
xor
leave
movs
in
or
jns
stos
(bad)
adc
into
inc
sbb
xor
push
jmp
dec
test
jb
jmp
lock
xchg
es
lods
bound
shl
loop
sbb
cmc
faddp
cmp
fst
std
inc
adc
ret
jecxz
mov
stos
push
jno
rcr
jne
xor
iret
mov
into
in
xchg
mov
cmps
inc
xchg
or
popf
fldenv
mov
cmps
mov
inc
xor
pop
popf
dec
sar
test
or
sbb
stc
daa
cmc
inc
dec
out
into
dec
xor
cmp
xor
xchg
cmp
pop
lods
xor
in
add
fs
call
sbb
pop
es
(bad)
push
mov
sub
cdq
ja
jecxz
dec
mov
pop
jge
ins
add
mov
push
xor
int3
cdq
dec
or
sbb
or
fadd
sbb
sbb
pop
pop
inc
clc
lock
retf
xor
push
imul
mov
jns
daa
pop
inc
(bad)
and
mov
ret
shl
outs
or
inc
hlt
jns
or
daa
xor
xor
push
ins
mov
stos
push
imul
and
add
xor
in
adc
retf
inc
jle
es
stos
fst
adc
cli
les
jb
hlt
sub
xchg
call
cmp
fisub
push
sbb
sub
dec
ss
gs
rcr
sbb
pop
loopne
inc
jmp
sti
xchg
(bad)
pusha
mov
sahf
out
ja
mov
or
inc
cmp
mov
addr16
mov
ss
fidivr
rcr
sti
inc
aaa
cmp
xchg
call
sub
inc
add
jg
jmp
aas
xchg
and
xchg
lods
mov
sbb
call
dec
movs
cmp
xor
push
adc
les
sahf
jp
lods
pop
in
adc
shr
dec
daa
push
les
rol
mov
inc
or
clc
mov
leave
xchg
ret
mov
sub
mov
adc
adc
call
sub
and
dec
mov
add
pop
pop
sub
mov
mov
dec
fst
or
jns
cli
outs
or
xor
call
in
pop
repz
mov
dec
nop
sti
sub
pop
jne
sub
shr
jecxz
retf
fdivr
fcmovu
stos
sub
pop
jge
cmp
inc
add
test
push
xchg
xchg
mov
mov
adc
add
dec
and
cmp
mov
xor
push
add
outs
mov
repz
jecxz
in
adc
pop
psllq
(bad)
and
int
sub
test
addr16
sub
jb
iret
mov
add
clc
(bad)
aas
out
mov
jle
jecxz
adc
iret
jne
adc
mov
ja
and
and
adc
pusha
je
inc
jbe
xor
xor
dec
repz
lahf
or
inc
sbb
xor
xor
ins
int
jae
and
push
add
fistp
sub
dec
repnz
rcl
out
(bad)
mov
cmps
outs
pop
outs
mov
cmps
pop
cli
outs
jae
std
push
bound
sub
test
imul
je
pop
ficomp
jmp
int
in
dec
jno
lods
aaa
jg
xchg
mov
dec
popa
in
out
xchg
mov
add
cmp
dec
popa
mov
inc
ja
and
lahf
lods
sbb
popf
pop
pop
outs
xor
and
loopne
pop
dec
les
push
jb
xchg
cmp
sbb
jnp
out
mov
aaa
xchg
dec
sub
jl
shl
test
loope
mov
jo
xchg
aas
sbb
push
sbb
pop
fwait
adc
daa
sbb
xor
jecxz
lods
cmp
pushf
shl
fistp
mov
das
jne
outs
sub
pop
or
jnp
mov
iret
sbb
aaa
addr16
fld
adc
mov
sbb
inc
or
stc
(bad)
sbb
stos
in
sahf
bound
clc
sub
sbb
iret
les
ja
repz
cli
or
xchg
jns
vprotd
cli
stos
dec
and
nop
(bad)
adc
jno
in
mov
out
pop
imul
xchg
scas
pushf
test
mov
push
test
jecxz
not
inc
outs
adc
and
mov
stos
cmp
pop
push
repnz
pop
jne
sub
ins
dec
rcr
imul
imul
stos
pop
sahf
jg
mov
mov
test
dec
mov
sbb
out
add
xchg
jnp
push
jl
cli
mov
test
and
fiadd
mov
popa
add
cld
loop
ins
in
cld
repz
mov
mov
ja
xchg
or
outs
pop
pop
ret
mov
retf
imul
and
sub
in
sub
push
cmp
push
inc
(bad)
mov
sbb
repnz
push
(bad)
xor
inc
div
retf
and
jl
(bad)
sub
mov
sub
imul
fldpi
cld
movs
push
stos
push
mov
jae
mov
jecxz
add
test
adc
or
jge
push
inc
jmp
ret
jae
xor
adc
shld
mov
fmul
jecxz
int3
outs
cmps
mov
shl
and
rol
cmp
inc
cmp
bound
scas
sti
mov
sbb
jbe
ins
stos
fwait
or
test
sub
xor
xchg
xchg
mov
cmp
cmps
mul
je
mov
clc
mov
pop
pop
in
cld
jl
push
clc
aas
jge
mov
sub
inc
sub
dec
fsubr
pop
outs
in
sbb
xchg
mov
and
pop
and
pop
ins
ja
std
(bad)
icebp
push
add
and
les
or
cmp
stc
push
dec
int3
dec
add
test
adc
repz
adc
imul
pop
loop
pop
mov
js
add
scas
add
push
pop
mov
mov
and
xchg
lock
repnz
adc
push
pop
enter
mov
sahf
out
jb
mov
lods
aas
mov
add
and
into
mov
sbb
xchg
cmps
push
sahf
dec
fs
in
not
(bad)
jns
dec
dec
ss
leave
push
inc
sahf
fdiv
push
shl
cli
push
lea
jae
ror
les
retf
cmp
pop
push
fst
cmp
popa
mov
daa
call
jecxz
xchg
jb
jmp
mov
mov
cwde
dec
jb
or
mov
(bad)
jne
dec
jnp
jmp
jp
std
call
xor
pop
test
xor
data16
sbb
dec
aad
jle
and
loope
lods
mov
imul
call
sub
in
push
mov
data16
(bad)
mov
faddp
cli
div
fcmovnbe
jb
into
mov
sbb
push
xor
push
call
aas
(bad)
ss
pop
vpmulhw
es
inc
(bad)
and
cmpxchg
outs
add
mov
xor
aam
shr
mov
xor
inc
jae
jmp
or
cmps
mov
cmp
lods
lahf
es
pop
lods
cwde
arpl
jo
pop
sub
lahf
leave
test
cmp
sbb
and
pop
sahf
cmp
stos
(bad)
js
scas
int
push
loopne
or
icebp
lds
xor
iret
add
sar
sbb
mov
int3
int
leave
mov
(bad)
repz
frstor
fcmovnu
inc
sti
add
cdq
dec
jp
pushf
sub
cmp
int
rcr
jb
jmp
inc
lods
mov
sbb
leave
mov
pop
pop
mov
xor
sbb
and
push
pop
retf
dec
xor
and
loope
sub
push
pop
aad
clc
mov
lea
sbb
jge
test
mov
sbb
add
(bad)
jo
fsub
les
adc
ins
aas
leave
in
popa
mov
fbstp
in
xor
mov
inc
nop
movs
cmp
retf
jle
pop
mov
add
mov
adc
and
movs
add
stos
push
adc
cmps
pop
sub
cld
dec
ja
mov
jnp
cmp
std
fild
test
movs
lods
mov
push
xchg
mov
xlat
sbb
into
xchg
outs
dec
bound
sbb
sbb
inc
jbe
jg
or
or
adc
aam
and
add
jo
mov
sbb
inc
cmps
sahf
jo
dec
jno
mov
jl
aam
push
jno
sbb
add
sub
mov
dec
pushf
scas
sbb
pop
daa
xor
mov
std
jnp
xor
adc
fwait
aam
addr16
dec
rcr
and
inc
inc
ss
xchg
fild
pop
(bad)
jo
cmps
pop
sub
and
adc
jecxz
pop
pop
outs
jne
jp
inc
dec
sbb
dec
and
fsub
in
fidivr
inc
mov
dec
lods
aam
daa
ins
mov
mov
data16
retf
jns
cmp
adc
stos
call
jne
cmps
fnsave
fsub
and
fist
push
gs
and
xlat
and
lds
ja
cmp
push
imul
adc
pop
nop
sbb
push
xor
out
(bad)
ud2
sub
dec
inc
in
jmp
cdq
call
retf
test
dec
mov
or
dec
pop
(bad)
ja
and
mov
dec
cmp
xor
push
out
(bad)
ja
retf
sahf
adc
mov
repnz
addr16
and
xor
lods
and
push
mov
bound
or
cs
sahf
jmp
jbe
mov
mov
adc
lahf
test
mov
cmp
push
stos
inc
mov
push
or
aaa
jl
call
xor
xchg
push
mov
add
inc
pop
jge
and
adc
mov
out
jecxz
dec
push
lar
xchg
jb
and
fld
enter
(bad)
out
pop
add
ja
outs
call
fwait
ja
lahf
imul
adc
sub
adc
cmps
dec
popf
mov
jnp
add
xor
int
arpl
nop
sbb
popa
inc
icebp
sub
gs
shr
cmps
cld
jg
cs
mov
or
sbb
test
repz
and
clc
loopne
push
mov
pop
sub
cmp
fmul
ins
mov
adc
xchg
cmp
sar
dec
cmp
add
popf
fsubr
pop
mov
lock
push
xchg
test
div
sub
arpl
test
clc
ja
mov
clc
int3
fidiv
jbe
int3
mov
adc
push
cmp
xchg
retf
int3
and
je
fninit
sbb
aam
test
outs
xchg
outs
outs
jno
inc
xor
adc
jmp
and
pop
adc
pop
xchg
movs
mov
in
or
cli
sub
bound
in
dec
cmp
retf
adc
lock
cmps
sar
leave
mov
mov
sbb
push
push
add
ins
call
inc
out
aaa
dec
push
pop
pop
js
sbb
push
cmp
sub
fild
xchg
movs
in
cwde
pop
xchg
test
adc
int3
stos
pop
xor
mov
cmp
test
xlat
mov
pop
or
test
popf
mov
adc
adc
inc
cmp
push
mov
mov
mov
adc
lods
ja
and
div
inc
jno
(bad)
outs
dec
pop
and
fdiv
jle
js
mov
call
dec
jmp
pop
cwde
inc
lahf
sbb
test
xor
pop
test
dec
dec
dec
inc
test
es
repnz
sub
repnz
mov
jle
sub
sub
not
add
dec
dec
imul
inc
shl
jp
outs
xchg
stc
adc
pop
(bad)
dec
pop
push
cmps
inc
shr
in
daa
inc
add
xor
pop
dec
(bad)
sar
push
cdq
jno
jae
fisub
into
hlt
ficomp
inc
shl
ins
in
pop
mov
je
fsubr
xchg
addr16
lods
retf
cmp
jno
ret
cwde
push
push
push
dec
das
mov
aam
xchg
push
test
mov
fild
mov
outs
ret
ret
cmps
les
movs
test
mov
push
pop
sub
mov
push
mov
jmp
inc
and
pop
pop
fcomp
mov
sub
inc
sbb
add
arpl
push
dec
xchg
jmp
fldenv
pushf
inc
xor
icebp
mov
push
ret
ror
or
add
fsub
les
mov
xor
fwait
mov
scas
mov
test
bound
fstp
push
jno
popf
pushf
mov
sub
or
lock
push
push
ret
xor
cmp
and
xchg
and
push
and
jns
sub
push
mov
ret
scas
and
adc
in
push
xchg
jns
(bad)
jge
jl
pop
push
fstp
ins
in
and
shl
arpl
pop
sub
lods
std
jae
lock
jo
mov
mov
mov
sbb
fstp
lods
push
xchg
push
out
or
push
int3
and
mov
scas
lahf
jl
inc
(bad)
ins
movs
add
mov
mov
mov
cmp
xor
js
repnz
lods
pusha
xor
push
repnz
repnz
sbb
push
(bad)
xchg
lock
int
jl
push
or
ds
add
jl
add
xor
xchg
sti
jne
xor
jmp
pop
js
adc
sbb
push
in
push
fadd
cld
fist
inc
sar
pop
xchg
inc
xchg
ja
stc
push
daa
lahf
test
adc
jle
out
nop
inc
sti
mov
xchg
adc
mov
js
and
add
xchg
jnp
outs
sti
mov
shl
into
cli
sar
xor
cmps
pop
es
addr16
pop
call
or
lds
jae
xchg
or
xchg
mov
fidivr
outs
hlt
and
jae
cmc
cmps
sbb
das
mov
loope
pop
mov
retf
lods
sub
fld
push
fs
sbb
xor
mov
cmp
push
and
jmp
push
pop
inc
push
pushf
cmp
push
push
daa
pop
sahf
mov
retf
adc
stos
mov
mov
sub
les
dec
mov
jb
pop
test
jmp
or
enter
jmp
add
push
ret
stc
sbb
inc
pop
fs
adc
xchg
aad
inc
adc
xchg
sti
dec
int
fdivrp
push
addr16
mov
xchg
rol
sbb
repnz
sub
xor
push
xlat
pminub
out
jge
push
push
je
aas
fadd
mov
out
jg
scas
pop
fistp
jno
mov
xor
sahf
aam
or
mov
xchg
cwde
stos
outs
imul
test
xchg
inc
xlat
adc
adc
xor
outs
mov
inc
popf
xor
pop
jge
cmp
cmc
cld
mov
(bad)
mov
enter
cmp
sar
dec
in
cmp
mov
mov
pop
sub
fimul
nop
mov
xchg
das
push
cs
push
sub
fld
push
mov
stc
int
pop
push
rcr
retf
aam
pop
dec
or
mov
inc
pop
inc
mov
push
ins
or
call
push
pop
retf
mov
cmp
jbe
xlat
daa
add
mov
jmp
bound
sbb
pusha
add
jne
push
into
inc
mov
push
pop
jmp
movs
cmc
pop
cmp
out
out
jae
pop
add
fcomp
ret
or
dec
xchg
fucomp
mov
xor
sub
cwde
lea
cwde
adc
push
mov
mov
aad
mov
add
(bad)
shl
sbb
outs
pop
cmps
add
mov
xchg
adc
test
mov
shr
cmp
js
imul
adc
dec
repnz
sub
lods
shr
cmp
or
sbb
adc
mov
mov
or
es
mov
stos
mov
std
and
or
iret
popf
or
inc
cmp
and
mov
sbb
movs
push
inc
mov
mov
cmp
test
xor
sti
and
or
js
and
pop
sti
dec
push
imul
fisttp
cmp
pop
add
stc
mov
push
pop
dec
int3
fcom
loopne
mov
fsub
les
and
inc
mov
push
xor
cmp
dec
jb
aaa
pusha
addr16
scas
fsubp
mov
rol
cmp
loop
dec
sbb
mov
lock
data16
push
add
in
jae
pusha
ins
dec
aaa
cmps
pushf
push
stos
or
mov
pop
in
inc
jnp
pop
xchg
pop
add
cwde
xor
sub
mov
sub
inc
int3
rcr
ins
je
xor
xchg
outs
dec
es
fcmovu
sahf
and
int
mov
xchg
retf
mov
stos
push
mov
or
and
inc
nop
bnd
ss
aad
mov
inc
(bad)
mov
(bad)
cmps
ds
movs
mov
cmp
shl
rcl
add
mov
enter
mov
jge
xchg
retf
ret
xor
dec
sub
sub
cmp
xchg
into
(bad)
mov
cli
test
sbb
inc
into
xchg
xchg
cld
inc
(bad)
loope
(bad)
jle
or
lock
pop
cwde
or
popf
jle
push
xchg
or
daa
push
and
and
sub
jnp
in
pop
(bad)
std
cmp
jnp
xchg
movs
inc
cld
pop
jge
sahf
imul
jmp
and
cwde
jecxz
or
fucomp
daa
imul
cwde
inc
pop
mov
dec
xor
or
test
xchg
and
mov
inc
js
xor
sbb
ins
sub
mov
push
cwde
shl
(bad)
loopne
jb
mov
xchg
adc
int3
inc
rcr
sbb
es
test
jb
jmp
mov
out
popa
and
data16
rol
mov
sahf
out
movs
add
out
(bad)
mov
mov
cmp
pop
enter
jnp
sti
(bad)
push
push
and
pop
cs
pop
(bad)
or
pop
les
sub
xchg
test
mov
mov
test
jo
pusha
mov
fist
stos
xchg
add
adc
fnstcw
(bad)
sahf
leave
jnp
jo
push
mov
icebp
push
push
inc
sub
fs
or
mov
pop
cmp
xchg
cmp
gs
inc
mov
jecxz
mov
cmp
inc
sub
inc
outs
outs
icebp
sbb
fsubr
mov
inc
mov
push
in
or
inc
repz
js
xor
ss
lods
aam
sbb
into
sar
dec
mov
lds
and
repz
enter
and
gs
adc
add
xor
mov
push
das
adc
aam
call
xor
pop
stc
(bad)
cmps
das
sbb
lods
xor
inc
xchg
jmp
xor
inc
sub
and
sub
sahf
xor
sbb
jns
mov
dec
ins
dec
jbe
and
cmps
gs
push
jb
cmps
push
sbb
out
push
sbb
sahf
or
sbb
cmp
mov
pop
adc
jmp
mov
das
and
ja
movs
dec
sub
xor
jmp
test
sub
jo
push
into
retf
xchg
or
stos
pop
movs
dec
call
xor
in
(bad)
xor
mov
jg
setge
dec
pop
xchg
fstp
cdq
or
jmp
call
mov
(bad)
popa
push
xchg
mov
cmp
test
pop
dec
cs
iret
dec
xchg
dec
ins
xchg
call
out
mov
rcr
xchg
pop
daa
sar
cmp
mov
pop
in
mov
inc
out
in
and
sub
lea
mov
cmp
js
(bad)
add
test
jbe
jmp
(bad)
cli
cdq
push
jns
mov
mov
daa
or
xchg
in
ja
imul
inc
es
or
add
repnz
and
repz
mov
jns
inc
xchg
in
cmps
enter
icebp
sbb
cs
and
xchg
xchg
mov
out
aad
retf
rcr
int3
mov
cwde
mov
rep
fwait
adc
sbb
and
test
mov
popa
xor
stc
push
add
xor
bound
ins
pop
sub
add
jecxz
inc
gs
or
mov
jmp
sub
sbb
mov
xor
dec
loop
mov
xor
xchg
mov
dec
popa
dec
(bad)
mov
shl
gs
push
adc
aaa
jmp
cmp
mov
iret
mov
lahf
inc
add
popf
push
sub
mov
sub
out
retfw
or
lahf
mov
dec
stos
jo
fild
mov
(bad)
call
mov
xor
data16
(bad)
bound
popa
pop
jl
mov
imul
mov
ror
sahf
add
sahf
sub
jne
or
dec
arpl
das
dec
sub
sbb
jbe
outs
xchg
jae
xchg
hlt
cld
hlt
nop
call
scas
leave
mov
imul
sbb
adc
daa
sti
dec
popf
scas
(bad)
(bad)
jle
xchg
(bad)
xor
daa
mov
xchg
ins
leave
adc
add
mov
jmp
(bad)
jp
inc
popa
xor
aam
mov
popa
outs
(bad)
out
out
or
xchg
mov
xor
or
shl
jnp
ja
out
push
scas
cmp
cmp
or
repz
xchg
push
push
in
call
xor
pop
mov
cmc
and
push
mov
push
sub
test
or
pusha
mov
jmp
jmp
pop
pop
popa
mov
fstp
add
xchg
xchg
lods
mov
cmp
div
int3
xor
shl
xchg
jp
aas
mov
ja
sub
iret
pop
xchg
sub
adc
jmp
mov
or
dec
inc
add
ins
mov
call
repnz
ins
push
inc
test
cs
add
pop
mov
cmp
dec
inc
mov
cmp
ds
dec
fcomp
or
rol
retf
push
int
(bad)
jb
sbb
sub
rcr
jg
and
jle
cdq
xchg
retf
sub
js
int
popf
push
ins
addr16
dec
or
sbb
popf
mov
dec
call
out
adc
pop
mov
jl
ret
inc
scas
jns
gs
jnp
mov
jmp
jne
sub
sub
imul
dec
lds
daa
test
or
dec
(bad)
ds
sbb
hlt
mov
(bad)
fsubr
fisubr
lahf
sub
mov
ja
xchg
cs
call
retf
or
das
sub
and
cmp
xor
pop
fidivr
mov
and
inc
js
rol
pop
hlt
dec
or
mov
in
outs
inc
add
and
stc
hlt
mov
mov
push
sahf
mov
sbb
div
mov
out
jnp
aaa
push
call
inc
jae
xor
icebp
add
scas
mov
pop
push
or
jl
jnp
mov
imul
mov
mov
outs
iret
dec
cmp
cdq
xchg
pushf
aas
lds
jbe
leave
adc
lea
mov
mov
lods
sbb
mov
out
in
and
push
stos
and
ret
pusha
arpl
inc
cmps
retf
dec
outs
adc
lods
fidivr
ja
lahf
in
sbb
and
xchg
sub
cmp
xchg
mov
pop
int3
push
and
jge
push
cmp
mov
mov
add
cmp
and
test
dec
dec
ss
in
outs
mov
scas
(bad)
mov
in
jmp
into
jns
retf
xor
popf
ja
sub
jbe
pop
add
or
out
and
push
xor
jns
jae
xlat
sbb
or
repz
dec
jle
pop
in
mov
xor
stos
outs
loopne
mov
add
add
add
mov
loopne
mov
cmps
sti
jp
scas
arpl
mov
push
in
pop
arpl
and
push
mov
add
or
push
rcr
add
js
aaa
lahf
inc
pushf
xor
fbld
fdiv
mov
mov
mov
push
jae
daa
fadd
xor
jo
ins
mov
mov
cmp
in
aam
jo
sbb
fistp
stos
sbb
nop
(bad)
out
jecxz
push
or
inc
mov
or
cmps
pop
cmp
shr
mov
xor
dec
leave
cmp
and
push
adc
xchg
retf
(bad)
and
mov
or
int3
pop
in
or
movs
mov
popa
shr
(bad)
mov
cld
out
fld
sahf
out
dec
gs
clc
mov
ja
je
sahf
ja
nop
rcl
xor
scas
mov
test
and
or
sahf
dec
fist
cmp
imul
ds
adc
push
ret
lods
jle
and
inc
imul
pop
or
lahf
(bad)
scas
ins
loope
add
add
sar
jle
ss
add
xchg
popf
mov
push
dec
imul
out
lods
jl
cld
mov
in
gs
stos
hlt
pop
aas
mov
xor
clc
clc
pop
cmp
sbb
mov
data16
pop
call
add
nop
ss
push
(bad)
test
rcl
push
es
imul
(bad)
fiadd
mov
aam
cmps
sti
arpl
push
sub
enter
add
xor
aas
jmp
jecxz
jne
jge
or
test
inc
adc
retf
retf
mov
adc
mov
scas
xor
movs
and
jbe
imul
sub
xchg
stos
sbb
pushf
xor
pushf
shl
cdq
(bad)
dec
cmp
sub
inc
or
leave
setns
push
xchg
and
adc
push
ret
std
push
retfw
cmps
pop
xchg
sub
fimul
gs
scas
int3
adc
pusha
xor
adc
out
jns
jge
fs
or
cmp
xchg
mov
sbb
xlat
test
push
aam
shl
mov
das
push
pop
pop
add
addr16
int3
adc
aad
movs
add
inc
jae
bound
sbb
lods
xchg
cmp
lods
pop
je
stos
movs
(bad)
mov
in
imul
jecxz
sub
cmps
jg
jae
mov
es
dec
cmp
mov
and
mov
rcr
cdq
jp
imul
sub
jbe
push
stos
rcr
ret
retf
retf
in
sub
mov
sbb
push
mov
test
jnp
or
popf
add
aas
add
nop
data16
es
xchg
(bad)
pop
cmpxchg
pop
mov
xchg
inc
xchg
leave
int
jmp
nop
inc
(bad)
sbb
or
xchg
ret
(bad)
loop
retf
push
and
lods
outs
mov
test
iret
push
or
movs
jmp
jns
and
je
retf
test
bnd
xor
pop
mov
and
addr16
jg
loope
push
and
lods
sbb
enter
mov
mov
cmp
jbe
add
sti
jmp
je
sbb
out
sbb
movs
scas
out
in
lahf
mov
dec
push
pop
mov
jmp
pop
aaa
sti
leave
inc
xor
mov
or
arpl
inc
mov
add
add
setbe
jecxz
(bad)
hlt
(bad)
bound
fstp
pop
outs
repnz
sub
ins
jns
xchg
(bad)
je
mov
fdiv
jne
lahf
add
lock
iret
icebp
ins
fld
mov
es
add
dec
jns
(bad)
sbb
fsubr
mov
dec
out
call
or
add
(bad)
jle
jmp
imul
dec
cmp
sbb
xlat
inc
dec
dec
jmp
xor
stc
xchg
push
aad
jo
in
mov
dec
and
repz
jno
(bad)
popf
xor
sbb
cmp
cdq
pusha
add
out
pop
mov
adc
retf
mov
stos
sbb
ins
push
enter
pop
das
mov
sbb
pop
jno
cmp
adc
pop
pop
(bad)
cmps
rol
ror
mov
cs
movs
mov
mov
pop
jb
pusha
cmp
das
data16
retf
fst
stos
int
mov
repz
xor
fsubr
outs
fisub
xchg
mov
fst
daa
pop
dec
stc
test
jb
aaa
mov
sub
inc
sbb
shl
rcr
sub
stos
add
sub
and
aam
add
enter
mov
sbb
ret
mov
pop
sub
jge
push
inc
sub
ins
add
add
loope
inc
pop
jp
push
imul
add
sub
in
push
(bad)
icebp
add
aam
push
pop
loop
xchg
pop
xchg
sbb
les
popf
xor
push
jl
(bad)
push
push
out
cmps
xor
push
inc
ror
dec
adc
mov
or
jmp
mov
(bad)
shl
add
ret
inc
fwait
and
push
vcvttss2si
add
and
or
dec
sti
mov
push
xchg
dec
mov
xlat
push
enter
jecxz
mov
adc
loop
jne
retf
xlat
fidivr
push
and
ret
xchg
stos
adc
inc
jmp
xor
jns
out
dec
add
jns
dec
mov
nop
and
popa
movs
pop
mov
ja
stos
inc
stos
int3
xchg
adc
call
mov
call
xor
xor
mov
xchg
shr
fsub
rcr
or
jb
dec
xchg
lock
and
int3
mov
fstp
adc
repz
push
mov
sbb
mov
push
pop
adc
sub
outs
xor
push
or
lds
(bad)
lods
adc
mov
and
popf
fcomp
repz
jmp
push
cmp
push
adc
in
ds
sub
pop
jecxz
add
fnstcw
int
lahf
or
or
dec
mov
cwde
pop
jge
inc
mov
add
repz
lock
test
retf
loop
das
adc
adc
je
imul
leave
xchg
je
add
cmp
dec
cmp
sub
jo
fcomp
add
ja
push
pop
mov
neg
dec
adc
movs
xchg
jge
ret
push
add
adc
jp
js
in
add
aas
and
sub
aam
test
jle
pushw
mov
out
call
outs
and
cwde
test
and
xchg
ja
popf
xlat
mov
jae
dec
add
cs
out
pusha
and
jl
add
or
push
cmp
inc
xchg
cmp
adc
mov
sti
in
sub
xor
pop
ret
mov
push
cmp
mov
sbb
adc
loop
xchg
push
gs
std
imul
ds
mov
or
arpl
mov
repnz
sub
add
mov
cmps
sbb
(bad)
dec
in
and
xchg
mov
mov
pusha
popa
out
xchg
mov
aam
jmp
in
(bad)
fld
mov
call
adc
test
lea
push
out
sbb
xor
test
mov
aas
add
add
or
out
js
call
adc
fidiv
push
sbb
jle
outs
jbe
mov
xchg
(bad)
aam
arpl
cmps
dec
mov
add
and
push
add
add
loop
(bad)
outs
mov
(bad)
mov
jne
repz
es
push
and
xchg
je
mov
imul
aad
enter
mov
ret
dec
js
(bad)
(bad)
dec
retf
in
cmp
popa
mov
gs
cdq
jle
sub
jno
xchg
fiadd
mov
xchg
(bad)
jo
sbb
les
in
jns
hlt
mov
dec
clc
cmp
adc
push
jmp
int
push
fucomi
mov
mov
sub
xchg
sbb
cwde
jp
sbb
and
xor
add
dec
push
inc
push
je
inc
js
in
or
lock
daa
out
sub
mov
inc
jns
xchg
cmp
hlt
je
fucomi
fild
dec
add
stc
pop
outs
push
mov
cwde
loopne
dec
into
or
add
cmp
inc
sub
stos
push
push
int
scas
out
add
xchg
cmc
cmp
arpl
mov
or
dec
pusha
je
(bad)
xchg
adc
adc
inc
push
push
adc
sbb
mov
mov
retf
jno
add
mov
ror
mov
mov
push
add
mov
lock
scas
jmp
sub
mov
outs
dec
outs
pop
sbb
mov
jmp
movs
jl
xchg
lock
in
jecxz
mov
add
scas
xchg
or
cmp
in
je
dec
out
push
dec
(bad)
jp
test
cmps
and
mov
mov
lahf
mov
and
arpl
jmp
lahf
ss
push
sti
stc
or
adc
jbe
mov
inc
and
cmp
pop
pop
mov
adc
test
xchg
repnz
jo
jne
or
test
mov
lock
in
retf
nop
sbb
in
(bad)
aas
push
ficomp
test
mov
jmp
pop
push
mov
inc
mov
sbb
rol
test
dec
fst
xor
jb
mov
daa
mov
cld
les
push
rcr
ins
xchg
jp
cmps
mov
xor
adc
popf
outs
sub
push
pop
call
cmps
rcr
or
sahf
or
or
mov
push
sbb
pop
add
gs
dec
dec
add
mov
jb
push
out
stc
ficom
push
stos
(bad)
ror
or
test
xchg
loopne
mov
sbb
dec
push
pop
sub
xchg
adc
add
lea
sub
xchg
dec
scas
aad
int
and
inc
jp
mul
sbb
arpl
ins
xchg
jns
ja
sbb
pop
mov
mov
rol
jno
xor
pop
(bad)
rcr
push
ret
pop
xlat
loope
cmp
adc
inc
pusha
lock
sub
std
ficom
mov
nop
jle
stos
adc
add
xor
sub
lahf
xchg
lock
sbb
inc
push
push
jns
das
out
aas
shl
pusha
pushf
retf
popa
push
xchg
jp
pop
mov
icebp
clc
or
sub
sbb
xor
push
mov
fwait
test
dec
bound
ficom
dec
and
and
scas
push
push
sar
push
dec
clc
add
mov
sub
or
push
test
inc
je
or
clc
sbb
push
out
data16
pop
pop
imul
mov
pusha
mov
xchg
daa
jle
or
aas
or
xchg
into
mov
pop
mov
xor
push
ins
push
dec
dec
push
add
mov
pop
lods
mov
and
call
mov
cmps
test
not
scas
cdq
pop
inc
fild
pop
in
idiv
shl
jne
xchg
and
xchg
add
hlt
cwde
mov
push
aas
or
and
int3
loopne
inc
pop
(bad)
(bad)
cmps
int3
dec
in
xchg
xchg
lock
outs
push
repnz
mov
daa
dec
hlt
or
mov
hlt
mov
ja
jno
jns
adc
or
jecxz
xor
mov
sub
je
inc
aad
push
or
stos
lea
sar
lods
inc
or
fld
pop
lds
or
(bad)
out
lods
aas
retf
mov
jo
mov
shl
jns
jmp
jmp
and
pop
sub
xor
(bad)
add
into
mov
cdq
mov
fwait
cmp
test
dec
mov
mov
pop
lock
fadd
or
ins
(bad)
pushf
xor
aam
daa
in
and
das
sbb
or
sbb
xor
mov
js
or
push
add
inc
fwait
cdq
lds
mov
cld
(bad)
pop
dec
nop
enter
or
daa
pop
mov
call
nop
mov
ret
push
or
dec
in
es
sub
xor
mov
or
add
lods
dec
outs
and
sbb
retf
das
xchg
mov
pop
movs
mov
cmps
pushf
cmps
aaa
mov
xchg
(bad)
je
jmp
mov
cmp
jb
mov
leave
pusha
mov
pop
or
pop
and
fnsave
cs
sbb
cmp
int
loop
mov
mov
xchg
sub
sub
jnp
sub
mov
sahf
xor
push
and
(bad)
mov
(bad)
mov
cwde
into
add
mov
bound
pop
jbe
push
dec
data16
ror
pop
aas
xchg
or
idiv
mov
mov
inc
jecxz
and
in
pop
lds
pop
(bad)
aaa
(bad)
pop
cwde
(bad)
mov
mov
jmp
cmps
sub
in
movs
push
sub
xchg
mov
nop
pop
xor
pop
fmulp
das
push
lods
enter
out
int
loope
sbb
mov
fistp
cld
imul
inc
push
scas
adc
cmc
cmp
outs
xor
fcmovnu
imul
and
sub
mov
mov
(bad)
add
jb
cli
pushf
sahf
mov
rcl
es
dec
push
add
(bad)
mov
push
jns
adc
sbb
arpl
test
loop
xor
jmp
sbb
aam
stos
jle
add
stc
sbb
jo
std
jmp
es
fbld
loopne
sbb
ja
into
inc
sbb
jbe
popa
pop
aam
ss
adc
or
fisub
shl
xchg
inc
pop
sbb
xlat
and
clc
cli
ficomp
xor
and
sahf
sar
(bad)
xchg
fsub
lods
or
sub
test
dec
add
adc
jecxz
cdq
cwde
lea
ins
fdivrp
or
jno
aaa
cmp
and
int3
stc
mov
ins
xchg
imul
dec
jmp
stos
nop
ror
dec
icebp
lods
movs
ins
sar
outs
fdiv
sub
mov
fisttp
xor
pop
nop
jle
add
cmps
pop
nop
jae
push
das
(bad)
popf
jb
push
div
mov
and
outs
xlat
cli
jecxz
push
and
cmc
mov
ja
xchg
or
or
scas
sbb
mov
mov
xor
xor
loop
adc
fsubr
pop
sub
shl
pop
(bad)
mov
idiv
jl
dec
(bad)
xchg
xchg
lock
lea
and
js
pop
test
retf
xor
sub
sbb
xchg
mov
xlat
mov
jg
add
cmc
cmp
pop
jge
lea
dec
jecxz
push
inc
xchg
and
jmp
out
loop
in
cmp
or
ret
mov
pop
or
(bad)
push
cwde
out
imul
loop
test
sub
iret
mov
sbb
xchg
mov
stc
inc
cmps
lods
adc
jns
inc
retf
cld
and
xor
test
repz
jno
cwde
imul
xchg
push
(bad)
sub
sbb
inc
int
cmp
mov
jle
in
xchg
in
push
dec
pusha
xchg
ss
mov
mov
xor
jne
add
out
sbb
(bad)
mov
mov
xchg
gs
jg
dec
rcl
or
cwde
mov
or
sub
bound
int3
sti
push
(bad)
cmp
push
xchg
jnp
xor
mov
xchg
out
jg
(bad)
dec
cmp
jp
add
jecxz
jg
jmp
arpl
or
out
push
inc
and
mov
ss
inc
xchg
mov
cwde
outs
outs
add
inc
xor
pop
scas
jns
movs
add
add
mov
ja
cmp
imul
pop
repnz
arpl
sub
xchg
add
mov
loop
pmuludq
sbb
sbb
pop
sar
ret
add
mov
jns
add
cli
loop
test
enter
xor
out
nop
sub
test
ja
push
xor
add
lods
xchg
(bad)
jmp
clc
cmps
mov
push
mov
adc
shl
int
xchg
dec
lock
daa
sbb
stos
lods
push
inc
cmp
and
dec
push
outs
mov
test
mov
jae
std
cmps
xor
push
dec
test
call
out
jnp
cli
add
leave
or
dec
add
in
sub
add
ins
fs
and
sbb
xchg
pop
inc
sub
mov
pusha
mov
jle
dec
or
fst
xchg
or
retf
icebp
mov
push
and
sti
xchg
xchg
lods
in
dec
add
mov
fsubr
rcr
not
dec
mov
xchg
icebp
adc
or
mov
jp
ds
loope
clc
xor
mov
ins
js
mov
push
stos
and
ror
aam
fst
mov
push
int3
mov
inc
in
pop
mov
push
movs
mov
cmps
retf
shr
data16
jmp
xchg
inc
aam
mov
je
jp
daa
cmp
jmp
inc
add
xchg
adc
push
xor
adc
jb
xchg
mov
iret
dec
out
xchg
push
in
lods
jne
push
push
test
pop
mov
cmp
outs
mov
jo
daa
rcl
add
je
xchg
dec
(bad)
aaa
nop
and
scas
fdiv
stos
or
jl
cmp
lea
xbegin
add
bound
cli
mov
rcr
(bad)
out
xor
ins
fsub
push
icebp
enter
or
xor
test
jle
scas
arpl
mov
and
inc
bnd
dec
pop
push
mul
pop
fstp
mov
cmp
iret
dec
and
xlat
xchg
nop
movups
lods
cmp
sub
pop
sub
fcos
jo
pop
sti
rcl
mov
out
(bad)
aad
cmp
jecxz
cld
(bad)
fild
lahf
(bad)
idiv
mov
outs
ins
fs
pop
mov
stc
test
xchg
mov
in
ret
jg
bnd
adc
ficom
mov
ret
comiss
jg
js
mov
dec
(bad)
cli
and
inc
push
fwait
outs
sub
shl
cdq
mov
dec
into
ret
aas
pushf
xor
repnz
add
adc
sbb
lahf
stc
leave
call
mov
sahf
inc
jmp
jmp
mov
cdq
push
push
(bad)
addr16
in
pusha
adc
adc
ja
popf
lods
aam
mov
adc
dec
xchg
xchg
fwait
imul
jle
add
fucomi
add
pop
retf
jmp
add
loopne
xor
jae
lahf
lods
in
cmp
ret
xchg
repnz
adc
xor
adc
cwde
aam
daa
add
clc
gs
ds
cmc
dec
mov
outs
out
adc
jbe
jl
imul
js
mov
lahf
clc
das
lods
es
and
mov
mov
imul
test
cli
mov
jge
aas
aaa
into
add
mov
hlt
call
sbb
cli
or
add
imul
xchg
mov
lods
dec
cmp
movs
xor
test
je
or
leave
push
mov
pop
aaa
sbb
out
pop
mov
dec
and
mov
(bad)
scas
sbb
cmp
je
out
pop
scas
outs
add
mov
xor
pop
iret
push
(bad)
fidivr
push
shr
rol
sbb
cs
mov
test
push
ss
mov
push
cmp
xlat
cdq
popa
clc
xor
std
fs
dec
clc
sub
push
or
xor
pop
sbb
mov
sbb
jmp
xchg
cdq
jle
add
das
jae
test
lds
enter
mov
movs
cmp
jo
jmp
mov
mov
add
xchg
shl
shr
push
ret
mov
ds
ja
xor
arpl
popa
sahf
xchg
add
mov
cmp
mov
xor
push
and
pushf
popf
loop
imul
sti
xchg
fsubr
out
arpl
fcom
and
sub
jg
add
int3
or
in
sbb
sti
cwde
mov
sbb
push
fcomp
xor
lods
gs
xchg
inc
xor
mov
imul
imul
jne
iret
ret
cwde
push
pop
add
test
or
jmp
aas
das
scas
and
dec
or
sti
pop
call
ret
mov
push
and
out
pop
inc
mov
inc
loope
xchg
cs
fisubr
fdivr
jns
aam
add
mov
sub
adc
in
add
mov
xchg
sti
xchg
ja
xchg
fisubr
cmp
add
adc
push
pop
or
fadd
cmp
(bad)
mov
jge
xor
pop
xchg
jne
cmp
cmp
push
push
xchg
lods
fwait
js
jne
mov
(bad)
out
not
popa
pop
js
dec
or
lahf
outs
push
cmp
jno
(bad)
mov
cmp
inc
repnz
fadd
sbb
pop
ret
cwde
ss
push
into
scas
popa
add
inc
lock
cli
lds
cdq
retf
into
pusha
push
pusha
adc
cli
pop
jecxz
mov
jno
in
inc
adc
xchg
inc
pop
mov
cmp
push
xor
push
inc
out
(bad)
jbe
pusha
adc
jge
xchg
xor
cs
sbb
enter
shr
stos
jbe
enter
sub
cmp
aas
pushf
xchg
cdq
dec
and
aad
pop
inc
push
add
(bad)
mov
inc
ja
or
mov
lock
jecxz
sub
dec
jbe
push
jo
ins
aam
mov
aas
cs
xor
gs
cld
fmul
fstp
or
fimul
jle
rol
mov
pop
sbb
fisub
fdivr
and
pusha
jmp
cwde
sbb
cli
xor
repz
int3
rol
gs
ins
popa
ret
(bad)
aam
mov
sub
cli
lds
xchg
loop
cs
pusha
add
aam
dec
mov
cmp
int
cmc
xchg
ret
pop
push
mov
mov
pop
lds
je
scas
ret
outs
sahf
sub
mov
add
loope
mov
(bad)
xlat
cwde
mov
pop
jmp
orps
jnp
dec
mov
fcomp
lea
cmp
push
xor
imul
cmp
mov
mov
mov
sbb
mov
imul
mov
xchg
or
or
ins
push
aam
adc
hlt
imul
push
fsub
pop
mov
adc
rcr
cmp
inc
fdivr
sti
inc
xor
jp
sar
ins
int3
gs
cmp
test
arpl
or
pop
add
xchg
mov
jns
out
add
inc
in
idiv
data16
push
and
sub
movs
ins
sbb
jmp
mov
xor
les
retf
sbb
sub
scas
pop
cmp
shl
jl
mov
shr
jecxz
aas
test
jns
add
jo
fs
movs
cmp
inc
call
cmp
aad
sub
loope
fucom
adc
aas
pop
xor
fdiv
jl
outs
mov
xchg
test
xchg
ins
mov
cmps
jns
mov
rcr
and
(bad)
int
imul
dec
or
jne
cdq
loop
(bad)
pop
xchg
push
push
(bad)
pop
dec
xchg
jge
sahf
pop
add
pop
imul
pop
mov
sub
mov
jno
jmp
jmp
fild
mov
stos
aaa
fmul
add
pop
and
xor
sbb
xchg
dec
ret
mov
ja
xchg
in
fild
push
cmp
sbb
jae
jbe
arpl
sar
scas
or
in
mov
xchg
popf
ins
add
(bad)
arpl
pop
mov
adc
ja
js
aas
jl
sub
(bad)
test
loop
and
(bad)
in
sub
add
pusha
cld
jo
(bad)
in
ss
mov
mov
leave
xchg
call
mov
std
scas
cdq
test
scas
xor
inc
not
mov
loopne
sbb
loope
das
push
xor
sti
mov
popa
adc
push
push
mov
je
mov
cmp
xchg
stos
in
xchg
sar
adc
bound
pop
aaa
ss
adc
or
lods
mov
cmp
das
cmp
int3
adc
sbb
xor
sub
imul
mov
mov
test
xchg
shl
jmp
mov
in
cwde
(bad)
jle
xchg
mov
mov
and
int
mov
jg
pop
pop
mov
push
out
dec
aam
adc
cmp
jns
inc
xchg
cmp
sbb
add
(bad)
push
push
or
sahf
cdq
jns
shr
cmp
pop
adc
mov
cmp
jg
or
mov
aam
sar
or
lahf
push
sub
pcmpgtw
adc
out
jae
test
scas
add
cmp
mov
sbb
xor
jae
cs
mov
adc
push
cmp
xchg
push
mov
fadd
leave
test
hlt
mov
out
dec
dec
test
cs
cmp
cli
mov
mov
fisttp
or
xchg
xor
add
loope
sti
jns
aad
shl
idiv
mov
push
mov
fstsw
xchg
dec
sub
and
fisttp
popf
inc
ins
ja
cmps
mov
adc
cld
pushf
ja
sbb
shr
sbb
and
mov
sahf
dec
ror
xchg
pop
sbb
and
jbe
ins
call
jmp
push
fimul
mov
lods
ret
iret
ja
pop
mov
out
hlt
loopne
ret
xchg
mov
cmps
call
and
pop
jbe
rcl
and
mov
movs
jb
mov
cdq
mov
mov
lds
and
inc
inc
je
sbb
xor
pop
push
bound
cmp
xchg
je
retf
dec
push
ret
and
das
shl
cmps
xchg
retf
jo
aas
xor
xor
sub
fdiv
pop
pop
test
fisubr
jae
mov
test
pop
jg
fnsave
jns
push
rcr
out
add
pop
and
enter
xor
out
cmps
stc
dec
mov
xchg
xchg
fldcw
add
and
mov
pop
sub
mov
retf
arpl
and
push
dec
out
mov
xchg
fwait
cmps
fsub
mov
addr16
sbb
fdiv
or
sub
pushf
xchg
jb
inc
icebp
or
dec
(bad)
shl
jae
and
hlt
lods
das
test
adc
movs
inc
sbb
sbb
add
mov
adc
repnz
push
mov
lods
jne
mov
add
fdiv
mov
jmp
or
outs
jg
adc
fwait
icebp
push
ins
je
(bad)
sbb
lds
xor
retf
lea
cwde
mov
je
pusha
cld
or
cmp
shr
sbb
pop
mov
xor
aad
jmp
mov
adc
mov
adc
push
jg
jnp
cmc
ins
and
dec
sub
out
xbegin
xchg
lds
fisub
xor
call
icebp
jnp
push
jae
test
(bad)
mov
inc
xor
hlt
lods
pop
lea
sub
push
mov
scas
sbb
into
cwde
sub
jmp
fstp
movs
xchg
adc
cmc
or
jae
push
push
jge
xlat
jle
in
into
mov
int3
pop
(bad)
push
fdiv
jno
and
mov
movs
sbb
ja
xchg
or
push
(bad)
jns
lods
loop
cmp
loopne
ret
popf
mov
int
pop
xchg
xor
test
or
lods
jmp
in
or
dec
gs
ret
bound
cmp
shl
lods
mov
or
cli
cli
repz
test
push
cmc
lds
cli
psubusb
add
inc
fdivr
cld
mov
push
ins
dec
(bad)
cld
push
push
imul
inc
inc
test
out
mov
cmc
adc
push
stos
es
sbb
cmp
cmp
mov
jne
mov
add
cmp
push
pop
push
push
rcr
nop
retf
iret
push
sub
xchg
ins
jnp
cmp
aaa
jmp
mov
mov
lea
retf
js
sub
ret
pop
lods
dec
sar
fwait
ret
lods
mov
cmp
mov
(bad)
sub
test
jg
fwait
int3
leave
push
rol
inc
mov
(bad)
mov
ror
fild
jbe
adc
push
jecxz
mov
pushf
or
dec
mov
sar
adc
mov
test
xchg
test
popf
sub
daa
fmul
or
in
out
sub
cld
sub
int3
inc
pop
fnsave
pop
dec
aam
inc
call
mov
adc
stos
cs
xchg
setb
xor
jmp
cli
pop
stc
aas
div
and
rep
jnp
imul
inc
cpuid
add
popa
or
mov
mov
add
sar
movs
ja
cmp
das
push
pop
sbb
xchg
mov
xchg
cmp
jl
test
pop
movs
or
mov
arpl
mov
jns
aas
sub
push
out
jp
cdq
test
retf
out
add
ds
cmp
lds
clc
pop
adc
xchg
jl
mov
mov
dec
mov
aaa
ins
adc
fidivr
mov
xlat
pop
sbb
or
push
mov
cld
lahf
ret
dec
ret
popf
les
(bad)
xlat
imul
pop
inc
out
imul
mov
push
push
jecxz
adc
push
ins
and
ror
xchg
ds
int3
mov
in
push
(bad)
addr16
dec
sbb
inc
inc
nop
sbb
or
inc
jns
or
loope
add
daa
xchg
push
mov
push
ror
push
aam
aaa
sub
push
js
sbb
movs
mov
scas
push
popf
xor
or
add
pop
xor
inc
stos
pusha
jge
pop
scas
jp
mov
or
iret
pop
push
fs
das
xor
cmp
fs
sti
out
fcomp
or
mov
aas
add
mov
repnz
addr16
inc
pushf
loopne
push
push
adc
out
or
inc
push
ret
inc
inc
loope
mov
test
cwde
dec
mov
add
xchg
adc
push
leave
add
mov
(bad)
jmp
pop
mov
(bad)
(bad)
jnp
cmp
loopne
xchg
(bad)
fist
sbb
sbb
clc
cmp
sub
xchg
ins
std
add
ja
inc
sub
je
call
outs
(bad)
stos
inc
adc
ins
nop
ins
stos
in
mov
div
pusha
(bad)
sub
xchg
fbstp
mov
push
and
repz
inc
and
mov
outs
or
dec
mov
cmp
mov
inc
mov
rcl
push
and
sub
popa
psllq
aad
sbb
mov
adc
shl
imul
xchg
inc
pusha
and
sbb
arpl
inc
test
fcomip
pop
psubd
cmp
mov
stc
retf
pushf
fisubr
pop
jecxz
mov
sub
fstp
adc
leave
cwde
test
outs
mov
mov
test
popf
pop
dec
ins
cld
push
shr
dec
scas
test
xor
jp
(bad)
jno
lods
sbb
test
aas
sbb
fst
dec
sub
pop
xor
imul
push
xchg
mov
cmp
jmp
ins
jb
xlat
pop
xchg
adc
push
and
xor
add
stos
xchg
prefetch
(bad)
add
jl
imul
div
push
cmps
add
pushaw
or
mov
xchg
fsubr
xor
movs
jne
movs
mov
adc
lods
mov
sar
xor
mov
jp
sar
xchg
in
xlat
cmp
fsub
mov
ret
fnstenv
mov
in
add
ins
dec
aam
dec
dec
jp
ret
or
xlat
dec
xor
popa
xor
mov
or
pop
rcr
sub
jno
adc
adc
dec
in
jmp
mov
mov
and
int3
sub
shl
out
(bad)
repz
adc
call
call
dec
aas
inc
sbb
das
mov
shl
dec
inc
mov
ror
sub
push
adc
xchg
add
sub
xchg
push
xchg
and
jno
dec
nop
jg
pop
cmp
retf
ret
repz
inc
lock
add
fcomi
sbb
cld
js
mov
push
lea
adc
repz
(bad)
std
int
jle
jb
cmps
cs
icebp
call
test
popa
(bad)
daa
or
in
pop
dec
cmp
jns
sbb
in
repnz
test
add
aad
sbb
lock
enter
adc
pop
cdq
jp
shl
outs
and
push
test
push
mov
xchg
(bad)
jge
dec
cmp
loopne
jl
(bad)
pop
fyl2xp1
xchg
mov
sub
add
(bad)
shl
mov
ss
mov
jg
xchg
into
jns
or
mov
(bad)
sbb
loop
xor
movs
sbb
int3
(bad)
push
mov
lock
jns
pop
adc
xor
cs
and
call
mov
enter
cmp
mov
adc
mov
cmp
adc
shr
cmp
into
das
repnz
mov
sahf
pushf
loop
(bad)
sti
(bad)
les
mov
and
and
xchg
ds
fst
bound
mov
icebp
and
mov
xor
jmp
mov
xchg
sub
jl
stos
jnp
pop
add
dec
sbb
push
xor
daa
nop
fstp
mov
or
push
xchg
and
push
mov
inc
cmp
movs
xlat
pop
xor
into
icebp
aas
rol
loop
adc
jns
data16
cmp
dec
scas
jmp
jmp
lods
mov
ss
pushf
adc
je
push
mov
adc
in
adc
xchg
icebp
xchg
loopne
jp
add
movs
xor
sub
mov
push
int
rcl
data16
mov
in
popf
fs
lds
push
jmp
in
ret
adc
addr16
idiv
(bad)
retf
outs
in
sbb
add
fcom
xchg
or
xchg
push
adc
and
fiadd
inc
repz
jle
mul
sub
shl
xchg
fcomp
sub
sbb
inc
dec
int3
cs
sub
stos
jne
sbb
jg
lods
xchg
pop
fs
iret
stos
sar
mov
out
push
pop
add
popf
not
add
jl
pop
xchg
inc
jne
mov
in
movs
pop
jmp
shr
xchg
(bad)
ret
or
sbb
push
or
cmc
and
inc
push
cmp
iret
arpl
and
adc
or
pop
jg
inc
out
fdivp
mov
jno
cmps
xchg
pushf
shr
xchg
out
repz
inc
fs
inc
mov
or
mov
push
(bad)
inc
dec
adc
shl
mov
cmp
mov
out
xchg
loope
loopne
mov
xchg
je
fwait
aas
or
sub
into
and
aam
mov
shl
call
xchg
popf
add
ret
mov
inc
shl
xor
es
cdq
stos
cld
pushf
fsubr
xor
add
inc
ret
ins
jo
call
cmps
bound
stos
xchg
adc
out
stc
fldcw
push
add
clc
loop
push
inc
inc
aad
shl
in
loop
loop
sub
push
shr
stos
imul
xchg
ret
sbb
xchg
loopne
ja
loop
pop
lock
rcl
xchg
dec
xchg
inc
adc
add
jne
xchg
pop
mov
loope
sahf
push
sub
stc
imul
jmp
xchg
rol
pop
push
pop
sub
call
mov
add
aam
lods
mov
xchg
outs
fmul
(bad)
sbb
mov
mov
sub
sub
xchg
xchg
int
xchg
imul
mov
or
xchg
and
call
mov
ret
xor
test
mov
jne
dec
pop
mov
mov
es
and
mov
test
pop
jmp
stc
mov
mov
mov
movs
into
mov
adc
or
lock
fdivr
mov
les
ss
push
lock
call
scas
aad
add
dec
xor
sbb
push
imul
sbb
ss
xor
out
imul
xchg
not
popf
mov
ret
js
bound
fsub
(bad)
aam
(bad)
(bad)
enter
xchg
sbb
cwde
dec
retf
add
cmps
clc
lods
dec
imul
sti
adc
mov
pop
xchg
mov
mov
pop
sbb
pop
jp
jg
inc
cmp
les
jnp
and
scas
push
xchg
cmp
clc
xor
loope
sbb
and
add
dec
retf
inc
sbb
leave
faddp
mov
push
cmc
mov
fadd
arpl
in
mov
and
js
ret
adc
dec
imul
or
pop
(bad)
fsubr
dec
fisttp
jle
pop
sahf
in
dec
sbb
inc
push
or
push
dec
inc
jb
loopne
mov
dec
adc
jb
jbe
mov
lds
mov
inc
sub
pop
pop
(bad)
sub
lds
cmp
int
bound
fmul
adc
cmp
or
cmovge
mov
loopne
(bad)
mov
das
addr16
jmp
mov
jae
push
pushf
mov
aas
add
xchg
push
sbb
test
and
je
je
push
test
cmp
push
scas
stc
sub
and
data16
mov
inc
sub
or
in
ins
ins
pop
enter
pop
outs
mov
rol
xchg
es
inc
xor
cmp
mov
out
fucomp
aad
pusha
push
mov
and
repz
jp
(bad)
jg
fdiv
push
pop
add
pop
inc
pop
daa
loope
xchg
dec
xchg
(bad)
mov
and
xlat
mov
cmp
repnz
sub
cmp
cmps
in
lds
outs
and
jp
(bad)
push
dec
xor
adc
scas
dec
data16
xchg
xchg
lods
inc
add
cmp
dec
pop
ret
std
xor
cmp
in
jmp
mov
data16
mov
mov
(bad)
mov
ins
daa
dec
push
sbb
rcl
inc
xchg
retf
das
dec
pop
mov
ror
mov
jno
xchg
jp
jnp
leave
jmp
jecxz
add
sahf
jno
fisttp
enter
test
inc
rcr
sahf
push
and
cmps
pop
sub
(bad)
in
mov
ss
out
daa
out
sub
or
stc
cmc
sbb
pop
test
mov
inc
int3
gs
and
aam
bound
lock
not
iret
stos
add
push
popa
xchg
mov
scas
bswap
ds
mov
sub
ror
or
iret
sbb
cwde
pop
(bad)
jno
sti
or
mov
jno
test
loop
ins
add
and
das
push
mov
addr16
jno
repnz
jmp
xchg
xor
mov
call
xchg
loop
rcr
xchg
out
test
mov
push
in
jmp
fdivr
fsub
add
sahf
mov
es
mov
sub
sbb
in
pop
add
sar
xor
das
jp
repz
xor
dec
jmp
sub
mov
repz
dec
je
push
adc
add
inc
hlt
std
test
outs
xchg
jmp
test
inc
jge
fcom
or
popf
adc
pop
jle
xchg
rol
push
cmps
xchg
mov
repz
xor
xor
fidivr
cmps
and
stc
mov
(bad)
ja
mov
test
movs
xor
stc
aad
mov
adc
sub
mov
call
jle
add
and
jno
sbb
pushf
retf
test
shl
into
stos
cmc
mov
scas
test
outs
jp
pop
ins
rcr
outs
mov
out
jb
and
jl
mov
(bad)
rol
loopne
pop
push
mov
stc
and
int
dec
test
hlt
xlat
mov
xchg
shl
cmp
add
rcl
mov
mov
sar
push
jp
dec
mov
jl
fisubr
jmp
mov
and
pop
imul
fdivr
loopne
aam
or
int3
add
fstp
dec
cdq
and
dec
cli
sbb
mov
lods
fdivr
pop
sbb
pushf
inc
and
xor
mov
call
jo
mov
das
scas
push
sbb
mov
mov
inc
inc
out
pop
cmps
xchg
dec
sub
lea
pmulhuw
xor
adc
xor
jmp
fdiv
and
push
mov
(bad)
scas
cmc
xchg
sub
stc
retf
jo
cmp
mov
ds
imul
pop
dec
jmp
push
js
outs
push
xor
cmp
inc
pop
je
fcmovnu
jnp
test
cmp
pop
push
(bad)
pop
jno
std
jae
repnz
int3
xchg
push
leave
and
mov
sar
leave
inc
adc
imul
inc
jmp
test
and
ins
sub
add
mov
ds
loop
mov
cdq
outs
arpl
pop
pop
mov
jne
jne
cli
sbb
mov
mov
sbb
es
add
xchg
sahf
mov
stos
jne
movs
or
sub
mov
push
mov
das
(bad)
xchg
adc
lock
call
add
fstp
sbb
pop
lock
mov
gs
dec
dec
shl
xor
movs
xchg
pop
imul
jne
cdq
(bad)
retf
cmp
das
sub
push
retf
mov
cs
xchg
inc
inc
push
pop
sbb
mov
icebp
sub
add
dec
mov
(bad)
in
in
jnp
int3
inc
out
xchg
out
pop
ret
mov
xlat
push
or
and
fdivr
mov
or
out
test
mov
lds
sub
jae
cmp
in
add
lds
stos
test
fist
or
sbb
test
aas
and
(bad)
mov
jmp
mov
lock
xchg
clc
and
popa
call
push
push
push
test
gs
lods
push
hlt
push
call
add
idiv
imul
add
add
xchg
iret
mov
add
xchg
enter
daa
rcr
bound
inc
xor
xchg
retf
pop
jmp
scas
push
sahf
ss
jno
imul
stos
adc
jg
push
sub
cdq
jg
jecxz
cmp
icebp
pop
sub
xchg
adc
push
fsub
shl
fcmovnbe
das
or
adc
fdiv
ds
cld
jno
xlat
icebp
(bad)
test
popa
test
pop
xchg
mov
mov
sub
xor
xor
(bad)
jbe
test
enter
fucomi
pop
mov
jmp
mov
daa
imul
movs
pop
loope
jl
retf
outs
pop
mov
sar
dec
mov
push
rol
out
loopne
int3
and
retf
(bad)
push
or
xor
xor
or
jle
and
and
je
cld
add
mov
nop
pushf
aas
imul
xor
pop
lods
fst
retf
jmp
push
shr
sbb
pop
mov
cdq
ss
cs
push
push
bound
lods
push
out
xlat
cs
xchg
pop
ins
ret
aas
aam
sub
and
cmc
inc
cmp
mov
sub
jmp
ret
sbb
push
cwde
pop
test
dec
das
in
mov
cmps
(bad)
addr16
loopne
push
and
push
push
or
enter
jle
cmps
jbe
jno
imul
(bad)
out
(bad)
mov
pop
js
mov
inc
xchg
clc
dec
int3
les
shl
add
jmp
les
jo
pop
rep
jo
loopne
sub
xor
out
and
das
stc
or
and
push
inc
mov
cmp
xchg
aam
push
pop
add
ss
mov
repz
mov
mov
in
sub
sub
cmp
pop
sub
rcl
mov
(bad)
out
push
div
jmp
int3
sub
adc
sub
repnz
es
sub
gs
xchg
lea
adc
push
and
test
adc
mov
in
sbb
xchg
sbb
cmps
pop
dec
mov
pop
loopne
das
call
sub
sbb
jl
sub
mov
push
or
in
scas
rol
pop
pusha
je
xchg
pop
outs
cld
mov
scas
in
sub
loope
(bad)
enter
inc
(bad)
lds
jnp
dec
and
mov
sbb
fstp
mov
in
outs
rcl
mov
sbb
loope
mov
(bad)
pop
sbb
or
mov
pushf
(bad)
das
jmp
shl
lods
imul
inc
enter
test
inc
push
stc
xchg
stos
push
push
add
push
mov
outs
jecxz
out
push
pop
test
mov
dec
leave
cmp
push
adc
cmp
inc
dec
pop
sub
inc
jno
addr16
mov
jl
test
adc
(bad)
movs
aas
mov
cmp
mov
outs
fidiv
pop
mov
mov
aas
inc
or
fstp
cmp
test
lock
(bad)
retf
dec
into
inc
mov
and
inc
inc
sahf
pushf
hlt
jl
pmuludq
js
dec
fdivr
ins
clc
(bad)
aaa
jne
std
jnp
out
cld
sar
xchg
mov
cdq
cdq
fnstcw
jge
fmul
pop
or
pop
ficom
(bad)
call
push
vmwrite
xor
xor
ret
xor
imul
mov
test
xchg
scas
int
fsubr
stc
mov
xor
sub
mov
ret
rcr
jle
and
test
out
(bad)
dec
mov
and
xor
scas
frstor
push
ds
sahf
into
out
sub
out
fcom
add
dec
and
sub
pop
out
xor
mov
mov
les
jae
ret
daa
sti
rcr
adc
(bad)
les
enter
into
int
outs
sub
(bad)
sub
pop
sub
dec
mov
add
int
sbb
xchg
idiv
inc
jb
sbb
fcomp
jns
xor
pop
inc
sbb
inc
aas
sbb
retf
jl
and
jmp
jmp
and
call
cld
es
pop
fcomi
popf
es
add
bound
or
sub
data16
mov
fidiv
scas
ret
fcomp
pusha
fdivr
fst
mov
inc
daa
mov
loop
clc
mov
sub
sub
sbb
xor
movs
cmp
jne
jae
(bad)
mov
shl
pop
xchg
inc
mov
jno
(bad)
loopne
dec
call
mov
pop
xchg
mov
ss
std
lods
xor
mov
mov
push
jp
sub
rol
sbb
sub
sbb
adc
movs
jmp
pushf
mov
dec
fucom
mov
xchg
xchg
movs
mov
pushf
mov
loop
je
inc
adc
in
hlt
movs
mov
mov
popf
mov
(bad)
push
lods
sbb
or
enter
pushf
sahf
rcr
pop
nop
inc
xchg
mov
lea
add
scas
push
jo
inc
xchg
fwait
push
bound
xor
retf
push
bndldx
call
faddp
sbb
mov
pop
call
pop
sahf
imul
dec
imul
cmps
out
movs
leave
cmps
xchg
add
out
jecxz
xor
jbe
xchg
and
xchg
xlat
dec
into
mov
push
pop
jge
mov
cmp
mov
daa
bound
retf
cmp
int
sti
jns
in
pop
or
sub
adc
xchg
xchg
mov
push
fsubr
shr
cld
bound
dec
icebp
sti
mov
and
xchg
push
mov
push
push
jno
mov
pop
int
pushf
pop
call
outs
nop
mov
xchg
mov
aad
mov
jecxz
popf
xchg
mov
dec
les
stos
pop
mov
jp
daa
es
and
stc
jns
add
cmc
sbb
add
pop
push
pop
jl
outs
jl
sbb
retf
jl
ret
push
jno
mov
inc
push
xchg
add
in
adc
lods
cs
out
cmp
stos
add
dec
jle
sbb
daa
adc
lea
aaa
ret
cmp
xchg
xchg
add
push
mov
jle
enter
inc
mov
std
sub
rcl
inc
xlat
jl
xchg
repz
mov
cmp
pop
mov
adc
std
dec
mov
xchg
push
and
xchg
out
div
(bad)
add
std
cmp
or
xor
scas
push
push
xchg
cmp
push
sub
xchg
or
sti
add
(bad)
enter
out
mov
pop
inc
in
jbe
sbb
movs
cmp
and
sub
push
cmp
ret
fcomp
fisub
dec
ret
retf
pop
stc
add
add
adc
cmp
and
or
push
movs
dec
push
int
push
fisttp
fisub
aas
jb
aas
sar
cmc
push
movs
cmp
push
in
leave
mov
dec
fld
(bad)
jl
push
inc
push
sbb
add
mov
xchg
dec
sbb
retf
ins
cmp
das
int3
or
mov
sbb
int
mov
inc
or
fcomp
add
lock
mov
in
adc
push
dec
xchg
(bad)
jae
push
rcl
mov
leave
lods
xor
and
pop
ret
and
ror
or
add
jge
xchg
mov
call
clc
adc
or
fs
sbb
icebp
aad
aad
lods
push
sar
popf
xchg
jne
jns
or
ins
sahf
push
test
xchg
loopne
fst
shl
xchg
dec
fisttp
fwait
nop
inc
into
mov
inc
mov
push
mov
les
pop
aam
jle
scas
sub
and
hlt
jo
push
pusha
jmp
inc
add
add
int
mov
aam
and
(bad)
lds
stc
dec
mov
mov
add
sub
adc
inc
jb
cli
lahf
aaa
and
jmp
sbb
arpl
in
or
cmp
sbb
scas
sub
xor
out
lods
ja
mov
jbe
arpl
aam
and
xlat
es
push
mov
mov
outs
dec
shl
ror
mov
(bad)
jmp
imul
sbb
mov
ror
cmp
nop
xor
inc
shr
mov
scas
cmp
(bad)
aam
adc
fst
ins
fbld
and
call
push
imul
aad
jmp
xchg
mov
ret
in
bound
sbb
pop
dec
out
pop
push
test
inc
dec
pop
cdq
mov
push
out
add
or
lods
xchg
sahf
mov
jb
cs
jnp
fdiv
iret
int3
les
cs
fld
lock
pusha
cmp
fcom
cwde
int
mov
cld
jo
push
stc
sub
xchg
pop
dec
nop
pop
repz
ror
packsswb
test
xchg
sbb
test
ret
lods
mov
fs
out
stos
jno
jp
fstp
sbb
adc
movs
int3
(bad)
sub
jecxz
dec
mov
dec
not
pop
dec
sub
outs
in
dec
dec
xchg
aaa
xchg
mov
mov
aam
sub
out
fs
adc
inc
fnstenv
sbb
and
and
or
stc
inc
aad
stos
fistp
das
dec
fwait
out
pop
mov
push
inc
loopne
push
(bad)
jno
addr16
and
js
push
pop
push
push
lds
or
mov
push
in
lods
mov
xchg
out
imul
sbb
cld
xchg
imul
int3
jp
in
pop
cwde
mov
and
and
push
sub
push
add
cli
mov
xor
pop
dec
sub
and
mov
xchg
mov
cmps
add
das
repnz
movs
in
jbe
leave
mov
jg
icebp
adc
repz
mov
adc
ins
sbb
das
(bad)
mov
lods
and
out
inc
stc
sub
jp
pop
inc
sub
inc
push
cmps
mov
fdivr
int3
popf
pushf
inc
cld
jns
lods
push
jmpw
push
outs
lahf
mov
daa
stos
lock
jae
jae
xchg
xchg
retf
xchg
repz
scas
cmp
mov
das
mov
rcl
sub
fs
and
xor
sub
adc
mov
movs
cmp
or
mov
repz
lock
iret
sbb
sub
lahf
pop
hlt
cmps
in
test
mov
aaa
mov
cli
push
pop
movs
mov
xchg
pop
push
cmp
in
jae
lock
nop
mov
add
inc
push
mov
push
push
adc
int
fdivr
call
cmp
xchg
fwait
jae
push
mov
add
dec
push
test
(bad)
xchg
xchg
leave
(bad)
aam
jle
sahf
sub
and
aam
mov
cld
test
push
stos
add
inc
fdivr
sbb
push
into
push
test
and
mov
nop
mov
in
out
fsub
mov
les
adc
cmp
cmc
push
mov
out
repnz
cdq
jno
xor
xchg
cmp
ror
jmp
cld
jg
jp
inc
jne
repz
jg
rcr
pop
jae
add
clc
inc
fs
mov
and
rcl
mov
adc
xor
mov
jmp
jns
cmp
mov
sub
cmps
in
daa
fld
push
fstp
mul
xor
faddp
cld
push
pop
out
jp
xor
xor
or
mov
sar
mov
mov
push
shr
cmp
gs
push
mov
push
xor
(bad)
sub
inc
aaa
jae
lahf
out
mov
lahf
xor
into
xchg
or
xchg
int3
je
ror
aad
in
xchg
pop
int
mov
lds
ficomp
push
inc
repnz
xchg
jno
sbb
xor
imul
jne
lods
sub
xchg
cmp
mov
cmp
rcl
xchg
loop
cmp
inc
enter
outs
fsub
inc
inc
pop
sub
clc
xor
fisttp
jg
pop
dec
jl
imul
mov
mov
mov
movs
fwait
sar
gs
sub
mov
std
in
mov
sub
(bad)
call
stc
fidiv
push
jp
lock
rol
inc
frstor
mov
sbb
dec
or
mov
pop
jnp
xchg
sbb
inc
les
push
nop
sbb
ds
popf
ret
std
nop
rcl
sub
sub
add
xchg
dec
mov
out
pop
and
dec
sbb
sbb
test
mov
jb
sbb
mov
shr
push
xchg
mov
cwde
enter
jbe
pop
mov
rcl
jae
inc
sbb
in
sub
adc
jmp
imul
pop
repnz
cmp
and
imul
cmp
mov
pop
movs
cli
(bad)
into
mov
out
or
sub
adc
sub
pop
push
mov
pop
mov
mov
cmp
shl
add
xor
add
dec
out
pop
daa
loope
sti
retf
sbb
add
int3
xor
push
(bad)
cld
inc
cdq
pop
inc
mov
dec
xor
loop
mov
jo
jno
stc
jecxz
cmp
cmp
add
adc
pop
gs
scas
inc
add
xchg
inc
push
neg
not
jmp
or
xor
or
mov
dec
fisttp
add
ficom
dec
xchg
xchg
mov
movs
hlt
mov
xchg
sahf
push
jb
mov
or
in
jnp
pushf
add
xor
sbb
sti
or
cmc
pop
inc
sbb
xchg
xchg
dec
sti
jmp
mov
or
stos
push
and
jp
mov
mov
add
enter
loopne
jno
fstp
pop
cs
out
sbb
mov
cli
add
or
fcmovnu
sub
lds
sbb
mov
mov
sub
jns
scas
pop
arpl
jo
pop
daa
stos
jbe
xchg
rcr
pop
es
repz
std
iret
push
inc
pushw
xlat
fs
test
mov
adc
mov
mov
fst
mov
(bad)
daa
and
mov
stos
lahf
ret
or
cmp
jle
hlt
fstp
mov
push
push
pushf
add
or
pop
cmc
jecxz
cld
add
(bad)
das
or
inc
retf
fnstenv
cli
repnz
fmul
js
stc
push
cwde
add
pop
pop
std
xchg
push
call
push
ror
mov
fld
(bad)
int
fmul
or
or
push
ret
popa
(bad)
shl
sbb
push
add
push
lods
aam
and
jnp
push
sub
test
mov
adc
ss
pop
mov
push
aad
repz
loopne
ror
jb
add
sbb
xchg
jae
cmp
dec
adc
add
nop
add
ja
scas
jae
icebp
mov
jnp
add
loopne
imul
data16
xchg
aaa
cmp
jecxz
mov
fcmovu
mov
ja
std
lock
test
div
xlat
push
xchg
dec
mov
ficomp
gs
icebp
ds
cmc
in
int3
(bad)
jnp
inc
jl
pop
sub
or
aas
sbb
xor
push
sbb
xor
sbb
mov
js
call
sbb
imul
jp
jmp
call
ja
push
jns
lea
mov
mov
neg
or
mov
cmp
push
ja
pop
ficom
adc
aad
pushf
xor
mov
ds
pushf
xchg
ja
xchg
or
push
rcr
mov
xchg
xchg
out
test
shl
nop
retf
(bad)
outs
mov
sahf
out
out
adc
enter
das
cmp
pusha
movs
dec
enter
push
or
cld
jge
add
jmp
mov
fidiv
xchg
sbb
adc
pop
cmp
xchg
mov
imul
or
add
push
out
loop
add
(bad)
call
lock
inc
fs
scas
push
mov
test
mov
jg
or
inc
in
jae
cs
fmul
mov
jmp
movs
(bad)
icebp
sbb
sahf
mov
or
adc
add
mov
xor
cli
bswap
jp
es
cmp
shl
inc
cli
aaa
leave
imul
ja
inc
xchg
xor
shl
gs
outs
outs
add
mov
mov
dec
jge
ins
test
call
pop
loop
xor
out
jecxz
xlat
push
pop
dec
mov
jne
cmp
xor
push
sub
ficom
(bad)
popa
inc
arpl
jae
sbb
push
mov
mov
call
(bad)
arpl
xor
mov
enter
in
sub
add
cmp
inc
jne
jge
jle
xor
test
sub
jo
mov
mov
(bad)
xor
pop
pop
pushf
sub
out
and
push
out
les
cmp
xchg
ror
mov
inc
mov
int3
ffree
repz
fstp
cmp
sbb
add
push
sub
pop
enter
ds
mov
pop
xchg
xor
stos
ds
(bad)
imul
jge
cmp
add
pop
mov
lea
push
imul
pop
or
lods
popa
cld
inc
and
lahf
ins
call
jle
cmp
test
xchg
inc
and
adc
jle
push
rcl
jge
and
cmc
test
loop
sbb
mov
or
test
fs
test
mov
cmp
sbb
mov
jmp
shl
add
fcom
rcl
(bad)
in
int
inc
mov
and
bound
outs
push
jg
mov
enter
xor
mov
push
fcom
(bad)
iret
mov
sar
stos
jp
out
test
add
pop
in
into
stos
(bad)
repnz
(bad)
iret
jl
aas
cmp
in
int3
(bad)
movs
call
pop
mov
sub
(bad)
adc
pop
in
mov
cmp
push
stos
cs
add
stos
jg
ret
pop
cmp
(bad)
and
xor
sbb
(bad)
pop
push
mov
dec
pop
std
das
retf
fidiv
xchg
(bad)
xor
cld
es
inc
lods
lock
jecxz
out
stos
and
inc
lea
pusha
push
ins
test
pop
xchg
out
jmp
jne
shr
fistp
inc
sbb
mov
inc
mov
push
pf2iw
movs
jae
jnp
inc
mov
punpckldq
or
jg
repz
mov
pop
fcomp
out
jns
ret
outs
data16
cmp
popa
cmps
pop
in
xor
outs
mov
outs
cmc
retf
repz
add
cmp
inc
shl
dec
push
adc
enter
and
bound
test
movs
mov
mov
mov
mov
mov
cld
inc
mov
or
mov
xor
and
ds
ror
scas
sar
push
dec
in
mov
imul
push
sar
push
add
pop
loope
iret
imul
push
int
adc
inc
adc
(bad)
sub
xor
cmps
jp
or
adc
mov
sub
lods
adc
repnz
jl
jns
adc
in
cmps
lods
xlat
fs
inc
mov
aad
mov
dec
jb
mov
mov
test
lods
test
cmps
clc
(bad)
cmp
ja
out
add
fs
test
test
push
(bad)
add
mov
xchg
pushf
call
sbb
xor
ins
add
jmp
leave
xchg
push
dec
gs
jl
push
and
fidiv
fdiv
sub
stos
nop
xor
repnz
test
stc
push
cmp
xchg
mov
les
sbb
fmul
jae
push
out
fld
shl
jge
les
movs
or
call
sub
addr16
jmp
mov
and
push
and
mov
jo
and
enter
and
cmp
mov
mov
push
mov
cmp
or
in
adc
adc
or
or
sar
scas
xor
inc
cwde
push
cmp
add
sbb
lahf
(bad)
out
lds
cwde
jno
sbb
dec
sub
add
sub
shl
dec
cdq
std
sti
test
hlt
mov
scas
jl
in
adc
test
inc
das
clc
cli
mov
jne
fcmovnb
adc
aad
ret
out
fwait
inc
xor
mov
or
fldcw
imul
cmc
xchg
(bad)
jnp
mov
cmps
scas
stos
sub
fld
ins
push
adc
movs
mov
adc
arpl
lea
push
int3
rol
rcl
add
pop
call
mov
popa
push
arpl
push
stc
mov
cdq
xchg
das
loop
dec
mov
dec
(bad)
or
dec
test
fld
pop
std
cmc
inc
shr
and
popa
dec
movs
fist
(bad)
push
les
pusha
add
mov
and
cld
jmp
cli
cmp
addr16
mov
xchg
fwait
and
fnstsw
dec
pop
lahf
xchg
mov
popf
pop
mov
pop
pop
xchg
mov
sbb
sbb
mov
jmp
sbb
mov
sysexit
dec
aam
fwait
inc
mov
inc
sbb
or
sti
sub
movs
and
fwait
dec
jne
popa
mov
ret
hlt
push
enter
xchg
stc
iret
sbb
(bad)
loope
test
shr
aad
rcl
inc
bound
aas
xchg
shr
mov
cs
mov
cwde
mov
mov
xchg
sbb
jbe
mov
stos
dec
nop
shl
es
cmp
aam
xchg
jmp
sbb
or
(bad)
mov
jge
stos
inc
cmp
jne
dec
jp
fdivr
movs
xor
loope
sub
dec
in
lahf
out
imul
and
iret
test
dec
and
outs
xchg
mov
cmp
mov
outs
(bad)
or
and
iret
xchg
(bad)
mov
adc
movs
jp
push
cmp
mov
xor
push
mov
outs
sbb
or
aam
mov
cmp
cmp
push
loope
sub
test
pop
inc
out
pop
sub
jb
sub
mov
mov
(bad)
adc
in
scas
lahf
adc
arpl
pop
cmp
mov
xchg
cmp
push
ror
sbb
mov
pushf
and
retf
sbb
xchg
std
and
das
movs
movs
pop
sar
es
jmp
mov
(bad)
jnp
cmp
aaa
rcr
jne
adc
fcomp
mov
jno
push
mov
dec
inc
loop
push
sub
sub
jne
jbe
pop
fisttp
jle
ret
add
jae
jle
pop
sub
add
mov
cli
std
pop
lds
outs
shl
je
pop
daa
inc
jnp
dec
push
or
(bad)
mov
ds
fnstcw
pop
pop
cld
int
popf
(bad)
aad
dec
adc
lods
pop
cmp
js
xchg
sub
ficomp
repnz
dec
les
lahf
fiadd
inc
jp
jbe
and
sub
fucom
push
repnz
rcr
aas
gs
sbb
sub
fwait
and
xor
ret
lahf
lock
retf
mov
fnsave
adc
das
jge
jmp
mov
push
stc
xor
bound
in
and
ins
mov
mov
cmps
mov
in
cmp
pop
loope
sub
nop
cld
jg
inc
cwde
imul
(bad)
and
in
jge
mov
loop
mov
outs
mov
mov
jbe
push
stc
and
loope
jle
mov
outs
push
lahf
mov
mov
push
fdivr
xor
cmc
addr16
push
dec
fisub
adc
data16
mov
gs
sub
(bad)
aad
xchg
dec
mov
fstp
inc
xor
inc
xchg
icebp
push
fmul
pop
inc
addr16
sub
test
ss
jge
jb
mov
inc
sbb
mov
in
aad
je
mov
xchg
ret
iret
jnp
mov
fwait
js
fcomp
cwde
or
add
mov
hlt
push
sbb
retf
loopne
dec
inc
into
push
sahf
ds
push
pop
xchg
mov
retf
push
ins
mov
mov
das
aam
fcom
mov
jne
jb
retf
xor
cmp
and
and
fstp
adc
stc
pushf
adc
xlat
xchg
add
imul
xlat
xor
rcr
pop
cmp
scas
lahf
or
hlt
pop
cmp
add
sub
mov
cld
cmc
(bad)
mov
pushf
cmps
lds
nop
test
cmps
push
xor
sub
jge
(bad)
push
cmp
sahf
jnp
enter
mov
sub
fpatan
data16
or
inc
outs
mov
mov
pop
iret
pusha
mov
inc
sti
mov
cmc
cdq
fadd
loope
mov
data16
cs
int
push
xchg
(bad)
xchg
call
addr16
cmp
inc
mov
jns
bound
cwde
mov
shl
and
ficomp
aam
inc
xor
push
mov
jno
mov
jae
int3
jg
rol
js
loope
les
hlt
lock
test
sbb
sub
(bad)
mov
das
cmc
sub
ret
loop
sub
pop
scas
or
scas
ds
dec
cmps
repz
xchg
pop
and
sahf
call
idiv
xor
aam
mov
call
int
outs
popf
(bad)
lock
jge
and
dec
bound
in
mov
not
jae
sub
mov
(bad)
cmp
xor
outs
jne
jae
push
mov
jg
xchg
pop
(bad)
add
in
test
and
cs
dec
retf
ds
mov
sub
pop
inc
aam
xor
cld
and
mov
or
or
shl
cwde
mov
ror
fwait
clc
push
mov
adc
dec
dec
xor
or
or
cmp
and
imul
push
(bad)
mov
mov
getsec
shl
inc
leave
sbb
sbb
dec
nop
pushf
fucomi
pop
cmps
dec
cmp
ror
aaa
or
movs
sbb
out
mov
push
shl
popf
sub
test
into
test
and
pop
jno
mov
mov
hlt
fcomp
in
push
ins
xor
repnz
popa
or
dec
mov
adc
push
mov
xchg
sub
push
xor
xchg
jmp
out
(bad)
mov
lea
mov
cli
mov
call
and
sahf
stc
or
xor
popa
repz
je
(bad)
out
ret
add
push
and
mov
add
icebp
mov
or
das
sbb
mov
test
inc
aad
jge
cmc
push
sar
add
xchg
pusha
jp
in
push
jl
in
mov
cmp
xor
fist
daa
mov
push
lods
lock
mov
retf
mov
jnp
loopne
xlat
push
call
sub
cmp
add
or
inc
sbb
jb
add
cmps
jl
adc
pop
add
push
xchg
inc
mov
dec
cli
(bad)
adc
pop
jmp
fwait
mov
lods
push
rcr
mov
rcr
fs
pop
push
adc
mov
in
loopne
in
ret
push
fcomp
pop
dec
push
fnstsw
xor
jnp
inc
xor
retf
xor
push
jl
jg
inc
mov
(bad)
(bad)
mov
pushw
adc
out
cdq
xor
movs
es
rcl
(bad)
adc
mov
fcom
jb
add
int
lahf
push
clc
or
stos
mov
mov
sbb
fidiv
fisubr
aaa
adc
jmp
(bad)
daa
jle
push
mov
lds
imul
les
dec
pushf
movs
sub
inc
in
pop
std
pop
push
mov
fdiv
inc
icebp
inc
jg
test
call
sbb
cmc
jp
aad
cs
inc
pusha
push
pushf
cmp
jo
mov
rcl
lahf
or
push
add
and
xchg
dec
jmp
jae
imul
nop
xlat
jb
ret
call
out
mov
fxam
ss
push
add
sti
xchg
xor
gs
sar
push
ret
mov
mov
add
and
and
sub
xchg
mov
push
lds
js
ret
cdq
mov
add
push
(bad)
xchg
lahf
inc
or
adc
mov
sbb
iret
fidiv
in
mov
push
inc
leave
add
cdq
jmp
adc
sub
adc
call
pop
rol
dec
xor
cmps
and
sub
ret
jb
adc
jo
cli
inc
adc
and
lea
ja
cmp
cs
sahf
mov
mov
adc
jbe
mov
push
mov
fbld
mov
retf
loopne
push
aas
pop
cmp
xchg
lahf
les
dec
sahf
bound
(bad)
stc
mov
jne
cld
clc
or
mov
pop
mov
in
pop
and
lods
loopne
pop
(bad)
loopne
gs
mov
pop
popf
jle
ror
fimul
fdivr
movs
jmp
push
push
outs
out
cmps
mov
out
sahf
push
dec
aaa
ret
sbb
clc
xor
call
neg
jb
cmp
jecxz
or
cmp
fbld
dec
addr16
cmp
push
loopne
nop
xchg
mov
gs
iret
pop
jns
xor
push
add
mov
lods
pop
push
xchg
sbb
stos
jmp
dec
mov
push
sub
(bad)
fsubr
sti
fldenv
call
gs
push
shl
jle
enter
call
cmp
pop
xlat
call
dec
(bad)
xlat
add
adc
loopne
sbb
cmp
cli
mov
pop
pop
pop
adc
call
aaa
shr
(bad)
ds
jnp
pop
iret
outs
(bad)
push
or
(bad)
or
pop
frstor
and
(bad)
mov
cmp
ja
mov
inc
retf
dec
movs
xchg
and
jne
ror
mov
clc
outs
movs
add
or
lahf
inc
dec
pop
pushf
xchg
sbb
bound
stos
das
mov
mov
icebp
into
or
xchg
mov
sbb
push
jb
dec
jg
sub
push
sub
xor
add
push
jnp
cwde
mov
xchg
sub
adc
sub
mov
imul
test
adc
ror
jge
cmp
mov
dec
xchg
je
inc
or
(bad)
inc
out
xchg
jns
add
jo
cmps
xchg
push
movs
mov
(bad)
std
cmp
ins
pop
mov
mov
int3
test
push
jnp
cli
lods
xchg
(bad)
rcl
fs
jle
sbb
test
jb
icebp
adc
dec
pop
sbb
int
jae
movs
jno
add
adc
dec
mov
test
inc
je
cmp
stos
(bad)
leave
sub
(bad)
int
movs
fdiv
xchg
jnp
mov
js
iret
xlat
push
test
inc
sub
dec
popa
ins
mov
arpl
fnsave
(bad)
das
pusha
push
xchg
stc
cmps
xchg
sbb
mov
pop
daa
mov
xor
mov
lea
scas
rcr
inc
inc
cmp
inc
(bad)
jp
in
arpl
mov
push
sub
jo
int3
cmp
aas
mov
inc
sub
(bad)
in
jle
std
mov
movs
pop
push
in
xchg
add
fnstenv
scas
pop
scas
aaa
sbb
jle
xor
dec
fs
fsub
dec
js
lods
fild
fisubr
push
cmps
xchg
pushf
loope
sbb
movs
test
gs
jns
adc
jmp
add
sbb
mov
es
cmp
add
cwde
pop
xor
inc
sub
movs
adc
icebp
stos
movs
xchg
xchg
jmp
mov
out
dec
cwde
and
hlt
pop
push
lahf
dec
bnd
xchg
fild
add
fld
retf
xor
add
bound
dec
sbb
into
cmps
or
ror
hlt
cld
mov
cmps
cs
fnstcw
pop
mov
das
jns
jae
ror
shl
(bad)
jne
out
sbb
call
les
retf
(bad)
or
in
dec
mov
loopne
aaa
ret
dec
adc
jns
jne
mov
inc
xor
mov
inc
mov
out
push
jmp
ror
push
pop
adc
fstp
and
and
(bad)
(bad)
adc
jle
ror
imul
dec
test
or
mov
mov
xchg
daa
data16
call
sub
cs
xor
mov
sbb
icebp
gs
mov
pop
pop
mov
in
mov
(bad)
push
(bad)
sti
lds
sbb
out
mul
xor
push
repnz
pop
rcl
lds
mov
bsr
scas
mov
sahf
sub
xlat
cli
dec
and
jecxz
mov
iret
mov
pop
outs
stos
xchg
push
outs
sbb
mov
add
loop
cld
xlat
ret
sbb
sahf
repz
stc
popa
das
xchg
dec
fnsave
or
cmp
mov
jns
xlat
gs
in
mov
pop
sbb
inc
movs
(bad)
cwde
inc
cmp
or
and
out
repz
cmp
int3
mov
pop
and
xor
inc
mov
sbb
mov
stos
iret
mov
mov
xchg
or
into
sbb
adc
inc
call
pushf
fwait
push
pushf
xor
pushf
sub
in
push
adc
and
xchg
out
repz
pop
cld
dec
or
cmp
sub
push
sbb
mov
and
pusha
cdq
mov
cli
loop
sbb
repz
gs
stos
sub
movs
ins
mov
mov
bound
das
mov
mov
sub
adc
sbb
mov
js
and
mov
mov
mov
int3
les
jle
mov
pop
out
loope
fldcw
aam
xchg
pop
sbb
dec
add
mov
mov
xor
jmp
(bad)
imul
fild
mov
ds
fld
jl
mov
inc
out
pop
das
pop
add
out
push
loopne
adc
enter
mov
inc
call
jmp
xor
adc
cli
pusha
inc
jecxz
pop
mov
scas
add
aad
not
cmp
or
add
shl
rcr
adc
pop
int3
retf
popa
pop
int3
inc
lahf
pcmpgtd
fcomip
pop
mov
popa
lock
xor
shr
repnz
cmp
(bad)
in
mov
aad
jl
dec
sub
mov
jbe
mov
mov
xchg
jge
cdq
mov
inc
or
int
mov
repnz
sub
mov
pop
ror
mov
xchg
repz
dec
jl
jmp
inc
movs
add
scas
xlat
jecxz
movs
pop
mov
scas
cmp
adc
xchg
xor
push
adc
mov
dec
outs
add
mov
(bad)
js
push
inc
adc
fnstenv
mov
jmp
sahf
out
not
xor
xchg
add
out
addr16
dec
pusha
fdivrp
and
call
iret
ins
mov
xchg
inc
inc
xchg
outs
add
ret
outs
repnz
sub
dec
add
ja
aad
cmp
sbb
daa
mov
cmp
dec
push
iret
and
jg
push
mov
push
int3
pop
mov
mov
mov
cdq
sti
jmp
jecxz
inc
(bad)
out
fiadd
lock
clc
or
std
enter
out
inc
lods
lods
(bad)
sub
jg
jne
xor
or
movs
mov
hlt
push
inc
sbb
pusha
outs
pop
dec
add
sbb
push
je
mov
pop
mov
sbb
je
pop
scas
je
adc
xchg
lahf
push
cmps
retf
sti
pusha
inc
jmp
pop
pop
mov
push
adc
mov
xlat
daa
mov
cdq
cmp
dec
aad
cmp
rcr
cli
dec
adc
or
xchg
stos
xchg
add
inc
pop
push
mov
cmps
pop
fbld
inc
scas
xchg
sbb
mov
(bad)
lock
inc
jmp
js
call
mov
aaa
and
daa
pop
movs
add
sub
jnp
shl
sbb
retf
jno
mov
inc
rcr
push
sub
daa
inc
xor
out
hlt
shl
aad
push
add
sub
xor
and
push
mov
ins
and
push
mov
jge
push
pop
push
pop
mov
cdq
cmc
fucomip
xchg
pop
adc
cmp
in
pop
mov
xor
ficomp
add
cmps
push
push
adc
jb
mov
lock
push
jae
in
mov
or
cmp
sti
jmp
cmps
outs
psubd
addr16
pop
jae
add
out
mov
into
gs
arpl
(bad)
imul
pop
xlat
sub
pop
das
loope
and
mov
push
ss
fiadd
inc
in
call
adc
rcr
daa
xor
cmp
mov
xchg
lock
stos
and
shl
ret
movs
out
mov
ss
out
pop
pop
(bad)
inc
(bad)
das
mov
jno
pusha
test
in
dec
cmp
int
or
pop
in
lods
pop
shl
or
ins
push
jne
mov
test
imul
lods
or
xor
lods
in
or
scas
jecxz
mov
mov
xchg
outs
dec
add
pop
dec
test
std
adc
dec
or
jl
scas
xchg
in
mov
mov
adc
mov
imul
add
adc
and
loop
sub
nop
mov
xchg
add
mov
xchg
xchg
push
sub
pop
inc
xor
call
sahf
bound
(bad)
jnp
mov
jb
or
mov
je
cld
push
fsubp
cld
call
dec
mov
jmp
fldz
push
pop
rcr
add
xchg
jecxz
fs
aam
les
jo
cs
addps
and
push
jo
cmp
bnd
aas
push
int3
shl
dec
add
jp
das
and
int3
arpl
mov
cmp
or
cmp
in
ror
stos
pushf
es
and
fld
add
mov
xchg
mov
sub
mov
sbb
dec
sub
or
jg
retf
pop
mov
jle
cmp
push
fs
add
mov
jae
(bad)
jmp
jp
mov
mov
xor
dec
inc
test
dec
sti
push
inc
(bad)
rol
sbb
sbb
popa
inc
pop
shl
aam
mov
xor
push
xchg
out
xor
sub
pop
xchg
scas
sbb
je
cmp
stos
mov
xchg
xchg
sbb
add
xchg
inc
je
loope
mov
sbb
cmp
dec
jle
lods
inc
popa
test
mov
sub
sub
stos
xor
and
mov
xchg
int3
pop
cwde
dec
xchg
xchg
sbb
jns
daa
fsub
add
sbb
cmp
sub
xchg
jmp
popf
jb
xchg
mov
not
iret
fnstsw
inc
rcl
xor
call
push
cdq
(bad)
sti
mov
fild
cmovo
dec
fist
mov
sbb
mov
jecxz
neg
loope
fcmovu
shl
nop
mov
push
ds
xchg
mul
std
adc
lds
shl
cmc
in
outs
jne
jo
jecxz
sbb
fwait
adc
mov
xor
movs
stos
push
stos
into
mov
cmp
fld
xchg
jmp
sahf
add
sbb
imul
ds
push
sahf
rcl
mov
jne
bound
push
xor
fcmove
lock
add
arpl
adc
test
neg
lods
das
adc
in
aad
or
jmp
push
cmp
push
pop
pop
mov
and
addr16
adc
leave
xchg
xlat
das
push
shl
push
push
cmp
xchg
inc
mov
xchg
(bad)
stos
mov
es
pop
adc
fld
movs
ret
test
jnp
js
int
mov
push
les
(bad)
sub
mov
in
int
dec
push
xor
inc
dec
mov
fnstenv
test
dec
push
cmps
addr16
fnstcw
in
je
cmp
and
xor
cmp
jo
sbb
fsubrp
push
call
ret
xchg
pop
cmp
ds
rcl
call
rcl
adc
outs
sub
cmps
movs
imul
jmp
test
and
gs
pop
ds
mov
shr
push
push
or
test
mov
ret
movs
cmp
icebp
enter
cmps
xchg
fdivr
inc
xchg
icebp
sahf
test
jp
sbb
cmp
add
fs
mov
data16
pushf
pusha
mov
push
test
cmc
mov
enter
lods
movs
sbb
xlat
fcmovne
aad
and
imul
cmp
adc
fiadd
(bad)
cs
arpl
stos
mov
js
popa
into
cmp
and
pop
lea
aaa
icebp
(bad)
out
ins
lds
in
sub
inc
(bad)
push
pop
aaa
ins
jge
xchg
rcl
adc
jmp
hlt
jbe
inc
mov
aad
push
push
sahf
ins
cld
adc
pushf
or
jmp
aad
ror
dec
xor
jno
cmc
push
dec
(bad)
out
mov
adc
dec
(bad)
mov
je
lahf
add
cmps
push
xchg
js
pop
push
pop
jo
ret
ret
cmp
push
mov
xor
int3
and
(bad)
and
ja
in
pusha
mov
cmp
jl
pop
xor
into
push
jno
dec
cmp
or
(bad)
(bad)
jl
and
inc
jmp
test
pop
mov
cmp
xchg
add
xchg
shl
xchg
push
push
arpl
or
pop
jmp
dec
add
es
jmp
js
ror
shl
(bad)
test
push
and
stc
and
cmp
imul
fcomp
ret
es
xor
push
inc
inc
xchg
cdq
xchg
sbb
shr
fnsave
outs
sub
push
arpl
cli
or
inc
pop
push
mov
mov
shr
add
jno
pop
sub
mov
bound
ds
cmp
movs
jb
add
shl
sbb
out
push
(bad)
out
ret
out
mov
adc
pop
mov
jg
outs
pop
aad
iret
jmp
jo
test
fisubr
mov
repz
movs
or
add
xchg
and
inc
das
sub
pop
ins
sbb
call
cmp
fcmovnu
ret
pusha
jp
and
cmp
sbb
cmc
test
in
call
pop
inc
ret
pushf
in
retf
add
lahf
cld
push
pop
int3
and
dec
outs
int3
(bad)
fisttp
add
cmp
add
imul
in
lods
sbb
ds
pusha
and
jbe
in
mov
out
inc
pand
mov
fucomi
xchg
imul
fcmovnb
xor
pop
ds
test
popf
or
cmp
sub
daa
xchg
(bad)
pop
test
mov
mov
outs
mov
neg
cmps
idiv
pop
ins
iret
call
loopne
mov
mov
xor
popf
sub
leave
je
int
inc
clc
inc
jb
inc
shl
sbb
add
push
iret
cmps
jne
cmp
das
xchg
ss
or
sub
inc
or
mov
scas
jge
pop
jmp
add
push
sub
xor
jne
xor
jle
inc
sbb
in
xchg
jb
mov
jle
sub
mov
xchg
test
stos
mov
mov
dec
outs
out
inc
mov
mov
icebp
sub
dec
ja
ins
or
sub
or
mov
cmps
out
xor
or
loope
stc
adc
stos
jo
out
and
lahf
jecxz
pop
adc
cmp
mov
dec
retf
shl
jl
or
cmp
push
xchg
push
cmps
loop
inc
dec
inc
pop
sti
mov
test
cmp
dec
dec
(bad)
xor
pop
push
mov
sub
mov
into
ds
push
(bad)
fwait
inc
mov
inc
stc
rol
push
xchg
xor
and
fsub
xchg
imul
add
inc
mov
out
lods
stos
ret
not
shr
lods
sti
xor
int3
inc
hlt
add
dec
jle
and
addr16
mov
cwde
sbb
mov
pop
nop
ja
popa
mov
jmp
xchg
in
popa
or
test
sub
pop
add
fbstp
aam
sti
pop
jno
jb
mov
test
pop
mov
mov
ficomp
or
sub
mov
das
out
push
cmp
mov
pop
and
cmp
(bad)
outs
jmp
cmp
das
pop
jge
inc
dec
shl
push
jmp
and
stos
push
jp
call
jp
xor
pop
mov
sub
cmp
out
mov
addr16
into
or
sub
sti
or
mov
sub
cmp
push
jnp
add
popf
xor
adc
xchg
jbe
stos
mov
(bad)
jo
pop
mov
and
fidiv
rcl
rcl
mov
addr16
sbb
retf
mov
sahf
sbb
dec
jo
imul
mov
adc
stos
pop
test
sub
leave
cli
repnz
mov
idiv
push
into
sbb
ret
or
xchg
mov
mov
lods
jle
fcom
mov
add
adc
jb
jne
pop
sub
mov
or
fsub
cmp
stc
adc
xchg
ret
cmp
nop
cwde
sbb
(bad)
popa
lods
jmp
daa
dec
or
loopne
or
loope
jmp
fadd
cmp
mov
fwait
aaa
movs
out
in
dec
push
cmp
test
mov
inc
adc
pcmpgtd
ins
ds
mov
std
pop
xchg
or
popf
cmp
(bad)
sar
sbb
cmp
les
sbb
mov
xchg
xchg
es
mov
mov
mov
mov
out
xchg
popf
out
cli
jmp
jg
inc
jne
stos
dec
mov
cmp
ret
cmp
imul
loope
arpl
or
pop
fld
out
add
jmp
rcr
xchg
shl
sbb
dec
lahf
(bad)
ja
xor
lahf
not
push
popf
fnstenv
adc
lock
sbb
psubb
add
mov
ret
jg
xchg
xchg
add
xchg
cdq
in
enter
add
imul
push
or
test
adc
cmp
jge
push
test
lods
mov
mov
(bad)
sar
enter
inc
cmp
(bad)
push
repz
inc
sub
outs
aas
retf
lds
jns
ret
repnz
push
mov
cmp
or
mov
stos
jbe
jmp
dec
push
adc
mov
popa
pushf
ret
xor
test
jp
lea
push
mov
pusha
add
clc
push
jge
sbb
adc
shr
std
rcl
in
add
jae
repz
xchg
sub
push
iret
mov
add
fsub
sbb
jo
shl
add
mov
jg
add
into
retf
ret
jb
out
mov
or
jle
dec
sub
icebp
in
retf
fld
sbb
xchg
pusha
test
retf
push
out
ret
jle
popa
sbb
or
push
fcom
mov
out
ret
leave
mov
out
push
jmp
pop
ss
ins
pop
mov
jns
out
cmp
imul
neg
icebp
je
stos
push
xor
neg
or
dec
xor
mov
fldz
jb
test
jg
fcom
push
(bad)
lea
sub
retf
aas
mov
fsubr
sbb
fdivr
cmp
pop
js
pop
dec
jnp
mov
xchg
cmp
ror
mov
cdq
mov
jne
adc
int
jmp
mov
adc
mov
jne
std
xchg
xor
mov
popf
mov
test
pop
fwait
lea
push
inc
test
(bad)
fadd
adc
retf
cld
jae
mul
inc
pushf
sbb
and
mov
xchg
inc
mov
mov
lods
and
stc
in
mov
hlt
sub
xchg
mov
retf
and
popf
xor
mov
in
cli
jbe
jmp
ficomp
dec
fsubr
(bad)
and
aad
dec
mov
mov
mov
aas
push
lods
adc
test
lods
mov
rol
dec
loope
mov
xchg
jnp
or
(bad)
das
mov
sbb
cdq
jmp
mov
mov
mov
call
or
ret
sar
addr16
fnstsw
aam
daa
mov
jo
mov
int3
outs
ss
into
scas
xchg
in
adc
sbb
movs
leave
or
adc
push
test
pop
xchg
imul
sbb
clc
cmps
cwde
inc
rcr
imul
bound
scas
(bad)
int3
jo
mov
and
sbb
sub
sub
mov
dec
or
or
xchg
pop
loopne
(bad)
mov
pop
pop
mov
xchg
movs
(bad)
ss
xchg
retf
jb
lods
cmps
ins
lea
(bad)
and
jmp
(bad)
bound
addr16
or
retf
dec
aam
int
jp
ja
(bad)
bnd
push
outs
retf
fnstenv
pop
push
jb
pop
mov
or
xor
inc
call
test
lock
retf
adc
jmp
sub
push
pop
imul
(bad)
jmp
and
ret
mov
mov
pusha
mov
scas
mov
cmp
leave
shl
xor
xchg
sub
pop
sub
inc
cmp
cmps
jmp
retf
mov
ds
and
sbb
repz
into
scas
sub
push
pop
pop
mov
std
inc
push
sahf
push
push
xor
xchg
inc
mov
xor
cld
jge
cwde
mov
mov
cmps
pop
popa
sub
cmps
cmp
loope
cmp
in
push
out
jb
ins
scas
out
mov
jl
jb
pop
pop
mov
imul
out
imul
imul
xchg
adc
mov
cmp
xor
retf
xor
xor
jae
mov
push
add
adc
outs
fidivr
gs
call
jo
mov
pop
jne
jbe
mov
push
out
into
pop
xchg
js
int
mov
data16
imul
xchg
fmul
sub
jg
push
sub
xchg
call
outs
mov
into
mov
ss
arpl
call
push
int3
in
jp
les
inc
add
fs
repz
mov
mov
sub
cmp
ret
aaa
sti
push
fstp
xchg
or
adc
sti
jne
loope
ror
loopne
dec
cmps
and
xchg
push
jecxz
mov
jmp
clc
mov
fcom
ret
lds
dec
fild
or
mov
enter
mov
test
push
mov
pop
inc
jns
mov
ficomp
in
xchg
sbb
dec
sub
or
mov
push
mov
push
mov
es
ins
push
and
test
lock
scas
xor
lods
test
xchg
imul
add
adc
pop
bound
pop
add
xchg
mov
repz
rcl
xor
sbb
xchg
dec
enter
jns
stos
int3
retf
add
inc
jbe
retf
in
fimul
aad
xchg
sti
test
and
sub
je
les
xor
push
add
xchg
dec
and
das
fistp
(bad)
dec
push
pop
mov
pop
into
push
fldenv
shr
jle
aas
pop
mov
enter
pop
mov
shr
inc
pop
cmp
scas
in
int
inc
adc
add
push
loop
add
xor
xor
xchg
in
rol
inc
(bad)
dec
inc
inc
push
or
adc
lahf
jnp
inc
adc
mov
or
and
sbb
sub
in
add
mov
fild
int3
and
or
call
push
add
cmp
hlt
in
inc
pop
in
dec
mov
pop
adc
sub
pop
xchg
fild
push
outs
stos
shl
test
data16
and
pop
ins
pop
sbb
pop
and
pop
nop
jp
je
call
inc
clc
lods
dec
pop
xchg
inc
aam
push
or
lods
das
jecxz
mov
out
into
jno
cdq
clc
test
xor
aas
push
and
repnz
jne
xchg
aad
add
inc
(bad)
jmp
js
pop
jl
cmp
xchg
mov
adc
mov
xor
test
pcmpgtw
jl
add
pushf
dec
clc
jno
xlat
out
in
xchg
in
mov
mov
inc
stos
popa
push
mov
xchg
inc
jbe
sub
lock
sub
sub
retf
jns
push
ja
push
in
divps
pop
sbb
and
sbb
js
jmp
fstp
cmp
loopne
pop
mov
sub
mov
xchg
inc
adc
xchg
mov
ret
lds
inc
jg
cmp
sub
cmp
or
push
ss
cmp
shr
mov
cmp
adc
adc
inc
xchg
mov
scas
inc
or
je
sar
not
sar
pop
pop
bound
sbb
cmp
mov
and
sti
add
std
push
rdmsr
lock
pusha
mov
xchg
loopne
data16
mov
int
outs
stc
push
in
jmp
cmp
mov
iret
inc
ins
cwde
jne
aas
push
lahf
pop
add
add
cmp
mov
jb
dec
test
add
pop
dec
loope
xchg
push
sbb
xor
sti
mov
test
pop
imul
clc
mov
and
int
loop
mov
pop
push
push
(bad)
inc
cmps
jne
push
or
clc
xchg
clc
dec
adc
pusha
mov
shr
cmp
enter
shl
cs
cs
sahf
adc
stc
adc
xchg
push
xor
dec
ror
pop
test
test
xchg
fld
loope
fld
aas
gs
fbstp
sbb
xchg
imul
ja
dec
lock
ins
mov
adc
sbb
sbb
add
lock
jmp
sbb
jnp
fistp
bound
fld
shl
test
inc
pop
loop
popa
mov
aas
sub
ja
int
out
das
loope
daa
jb
mov
or
sbb
movs
mov
imul
int3
dec
stc
mov
cwde
in
fs
mov
mov
popa
das
movs
push
mov
push
popa
dec
xor
jecxz
ds
push
movs
add
fmul
cmp
loopne
js
dec
dec
push
test
retf
xor
push
mov
push
cli
imul
pusha
cmp
retf
dec
leave
add
cs
mov
cmps
(bad)
mov
mov
sar
int
dec
or
jl
stos
jmp
mov
add
jbe
scas
cmp
and
mov
cmp
rcl
je
lods
mov
jb
fist
xchg
test
mov
xchg
aad
bound
fxch
rcr
aas
lods
jp
or
pop
pusha
jmp
stos
inc
dec
add
inc
repnz
fcom
push
push
clc
mul
add
ja
jb
mov
test
xchg
paddusw
sub
je
aad
inc
adc
mov
lock
int
ds
push
push
jno
stos
not
adc
popf
jle
(bad)
xchg
jmp
cwde
jge
push
dec
lea
pop
dec
daa
stos
stos
pop
rcl
call
push
mov
push
or
(bad)
rcl
(bad)
ror
and
xchg
clc
push
int3
pusha
jns
aam
cmp
inc
in
inc
jo
mul
lock
xor
mov
cs
push
mov
xor
test
scas
icebp
clc
sbb
loope
lods
jne
mov
pop
jo
lahf
or
sar
or
pushf
xchg
inc
xor
pop
push
into
push
sbb
sbb
(bad)
stos
sbb
test
mov
sar
rol
pop
mov
cmp
out
es
in
push
dec
aas
adc
outs
push
push
cli
sbb
mov
xor
nop
das
shl
sbb
add
or
dec
popa
stos
shl
xchg
jg
adc
cmps
jg
cmp
mov
js
test
call
push
test
pop
sbb
imul
outs
data16
pop
cmp
ret
movs
jle
sub
inc
stc
pop
xchg
push
adc
adc
mul
mov
ds
in
push
aaa
mov
mov
lock
sbb
test
pusha
pop
mov
mov
xlat
test
push
clc
fwait
call
cwde
jae
push
dec
jle
ret
sub
test
addr16
cld
iret
mov
ds
pop
test
daa
xor
mov
cli
std
cmp
push
adc
out
cmp
std
xchg
inc
pop
and
aam
dec
mov
jmp
lahf
(bad)
jbe
jle
cmp
jl
jg
pop
scas
iret
dec
mov
mov
push
popa
sbb
cmps
aaa
dec
mov
push
call
out
in
add
ror
inc
cmp
or
loopne
and
aad
fld
in
loope
ds
cmp
sub
cs
neg
xor
lea
ins
add
mov
dec
stc
jo
test
pushf
mov
ins
cmc
cdq
mov
push
(bad)
sub
sub
sub
add
daa
lock
mov
pop
sahf
ds
adc
jmp
add
xor
sbb
sbb
adc
scas
vmovq
arpl
xor
dec
dec
int
test
loope
xor
pop
xchg
(bad)
int3
and
shl
inc
add
addr16
fcmove
mov
pop
jg
mov
pop
jns
rcl
dec
lods
jae
mov
int
pop
in
fild
xchg
cmp
scas
xlat
jecxz
and
jmp
push
jg
push
push
or
cmp
(bad)
into
add
or
scas
jecxz
cld
inc
adc
mov
movs
mov
pop
pusha
pop
sbb
dec
jae
pop
scas
mov
imul
sub
out
ret
cmp
iret
test
jb
ret
inc
cs
test
int
fstp
cmp
jne
iret
ret
dec
daa
fdivr
mov
add
cs
repz
retf
rol
add
sub
ja
ss
dec
adc
sub
popf
ror
cwde
inc
jb
in
lods
cmp
nop
xor
sub
in
inc
pop
aam
push
ja
pop
loope
sub
cmp
jmp
ins
test
pop
inc
cmp
dec
in
loop
icebp
loop
fisttp
cli
in
fistp
mov
sub
aaa
clc
cmp
and
push
daa
jae
mov
(bad)
ja
pop
in
mov
and
xchg
dec
loop
fs
std
xchg
test
inc
push
push
adc
jbe
popa
cmpxchg
popf
sahf
pop
ins
movs
ja
mov
lahf
repnz
pop
outs
fisttp
les
sbb
retf
and
pop
sbb
xchg
xchg
loopne
pushf
and
cld
cmp
sub
sub
xor
pop
pop
mov
fsubp
jp
sub
aaa
aam
mov
adc
nop
rcl
mov
je
dec
xchg
pop
lds
in
ret
mov
stos
into
jle
or
inc
xlat
cdq
in
mov
xchg
fdiv
retf
div
pop
or
add
sub
mov
into
pusha
loopne
sbb
inc
rcr
rcl
xchg
adc
mov
adc
loope
scas
into
mov
es
clc
mov
xchg
inc
lods
jl
inc
push
fist
das
pop
es
push
retf
test
popf
mov
aas
add
cwde
leave
and
inc
gs
sub
mov
jle
cmp
and
leave
loope
pop
pop
mov
dec
outs
cmp
add
retf
sub
or
inc
cwde
pop
cmp
pop
pusha
mov
xchg
push
(bad)
pusha
jl
pop
imul
loope
aam
das
das
stos
test
sub
mov
pop
movmskps
push
pop
sub
cwde
push
sbb
rcl
movs
in
ror
mov
into
inc
inc
sub
xchg
jle
or
cmp
fild
mov
rcr
retf
mov
sub
lahf
jp
mul
aad
imul
mov
jg
stos
(bad)
std
aad
or
neg
je
fldcw
lds
pop
ja
fdiv
push
retf
mov
xor
dec
add
test
(bad)
sbb
push
cdq
rcr
jb
cmp
fnstsw
sti
scas
arpl
push
retf
mov
pop
and
ret
cdq
jns
push
jns
test
jb
ret
cs
popf
xchg
scas
xchg
jp
add
mov
jmp
popa
repz
movs
jo
and
and
and
and
add
adc
pop
dec
pop
lods
nop
xor
jl
(bad)
loopne
adc
sbb
mov
aas
sbb
mov
popa
out
jge
jl
popf
(bad)
fistp
xchg
adc
pop
pop
idiv
or
and
cmp
push
sub
mov
sbb
push
xor
(bad)
jl
cld
fcomp
adc
call
xor
add
cmp
adc
psubusb
xchg
lea
mov
jns
repnz
ror
xor
loopne
dec
nop
adc
push
cmps
dec
jae
pop
mov
inc
ret
pop
add
mov
ror
jne
jns
rol
mov
jno
mov
(bad)
adc
or
scas
neg
fbstp
sti
lods
jo
mov
push
int3
jg
sub
cmp
(bad)
sub
daa
icebp
mov
out
jae
inc
xchg
dec
pop
and
dec
and
sub
mul
cmp
mov
mov
and
inc
push
sub
aam
stc
ins
test
loopne
out
test
jmp
cmp
cmps
mov
pop
out
fwait
dec
imul
inc
imul
mov
mov
push
xor
int
out
or
or
cs
pop
int3
sbb
push
mov
pop
or
sbb
jg
sbb
sahf
in
mov
xor
xor
mov
xchg
mov
push
fst
xchg
sub
inc
xor
xchg
setp
xlat
sbb
test
jge
ds
ds
push
add
mov
psllw
sbb
cmc
mov
inc
jge
xchg
bound
std
add
ror
in
call
int3
(bad)
push
mov
out
xchg
or
sbb
es
aas
loopne
push
in
sbb
mov
xor
or
push
jo
ja
add
adc
cdq
sbb
loopne
mov
call
repz
sahf
sub
fwait
mov
and
retf
iret
fimul
rol
cmp
sub
cmp
cmp
push
push
mov
push
dec
push
stos
shl
mov
mov
pop
mov
xchg
mov
je
and
data16
and
dec
add
outs
jnp
out
add
test
sub
pop
xor
aad
pop
mov
stc
xor
aaa
retf
scas
imul
mov
inc
dec
adc
push
add
xor
pop
dec
jo
jle
hlt
mov
pop
inc
mov
imul
in
jle
clc
imul
pop
(bad)
mov
mov
mov
mov
lds
mov
push
cmp
mov
lea
mov
jmp
mov
jl
call
and
movs
adc
jecxz
mov
retf
lock
mov
(bad)
mov
inc
cwde
popf
bound
inc
jl
cmc
pop
movs
lahf
stos
ja
aas
pop
popf
cmp
pop
push
mov
sub
jge
leave
in
push
dec
div
rol
pop
inc
mov
sahf
cwde
lahf
out
scas
(bad)
jmp
popa
lahf
dec
xor
xchg
jbe
pop
in
fmul
je
xlat
loopne
fsub
xchg
aam
cwde
call
add
or
loope
lds
sbb
stos
dec
pop
and
xchg
clc
movs
and
(bad)
xor
rcr
push
daa
dec
inc
gs
(bad)
lods
rcl
push
jmp
jmp
rcl
jmp
movs
sbb
add
stos
xchg
movs
hlt
clc
dec
(bad)
sub
jnp
mov
cmp
dec
rcr
imul
inc
inc
or
test
push
pushf
mov
(bad)
ror
outs
test
dec
push
stc
add
pop
pop
cmp
adc
add
stos
inc
pop
sbb
aad
push
dec
mov
imul
mov
(bad)
fistp
inc
adc
mov
sbb
push
adc
movs
mov
mov
mov
xchg
pop
in
fiadd
outs
retf
sar
in
cwde
sub
dec
or
ja
pop
nop
and
mov
inc
xor
(bad)
mov
push
(bad)
and
aas
mov
pop
fisubr
sub
test
inc
mov
ins
cmps
push
push
inc
cld
sbb
mov
pop
repz
scas
jp
test
sub
rcl
xchg
movs
pop
dec
outs
enter
call
mov
jb
cmc
mov
mov
mov
mov
movs
xor
iret
mov
out
fcomp
fbstp
xchg
std
lds
in
std
retf
nop
pushf
imul
neg
pop
mov
jne
fidiv
daa
dec
and
inc
adc
lds
mov
jl
stos
dec
jmp
out
inc
xlat
fisttp
jb
out
popa
push
retf
(bad)
push
jmp
jne
dec
cmp
hlt
jecxz
mov
xor
ds
add
int3
push
leave
mov
repz
jl
pop
cs
inc
lahf
iret
dec
xor
retf
in
(bad)
aaa
rol
cmp
xchg
outs
adc
and
mov
push
clc
aas
lock
inc
push
bound
(bad)
cwde
cmp
lock
lds
cmps
js
xchg
xchg
sbb
mov
jbe
mov
add
bnd
pop
push
mov
pop
je
xchg
jne
repnz
jl
pop
cdq
aaa
push
mov
fcomi
pop
add
ss
mov
movs
xor
test
pop
not
mov
loop
out
scas
jbe
call
and
push
lahf
mov
test
cmp
xor
pop
push
in
xor
jbe
jns
cmc
mov
mov
xor
dec
ins
and
cmp
mov
sbb
and
pop
scas
mov
mov
lea
cmp
adc
ja
les
or
pop
ret
mov
mov
cmp
sub
pop
jmp
clc
adc
fcomip
push
(bad)
mov
push
movs
cmp
mov
sub
out
int
cmp
jl
jp
clc
or
mov
mov
pop
pop
jle
leave
test
fs
fnstcw
in
mov
and
repz
and
out
and
ret
inc
sbb
out
push
ret
or
leave
pop
fdiv
adc
in
xchg
rcl
dec
shl
lods
mov
imul
jne
mov
popa
lahf
mov
ds
arpl
out
js
repz
jbe
pop
xchg
mov
jo
jmp
jo
in
test
push
dec
push
jmp
leave
pop
jl
push
and
int3
sub
out
test
sbb
dec
mov
outs
ja
sti
and
and
mov
(bad)
mov
xchg
add
adc
jo
(bad)
aam
cmp
fsubp
or
rcl
pop
lods
(bad)
(bad)
add
mov
pop
jmp
xchg
mov
popf
ss
imul
mov
fs
push
xchg
scas
neg
dec
daa
mov
ja
dec
and
in
imul
mov
fst
scas
mov
mov
jle
mov
add
movs
setnp
data16
add
push
push
mov
movs
mov
pop
xor
jg
dec
mov
mov
out
ficomp
daa
int
or
dec
xor
inc
jg
in
gs
pop
push
(bad)
inc
movs
(bad)
pop
sbb
push
(bad)
dec
pushf
adc
or
adc
mov
mov
xchg
loope
sbb
(bad)
push
pop
shl
daa
test
data16
loopne
add
xor
aas
jg
movs
or
into
(bad)
shl
cmp
and
stc
sbb
push
add
push
pop
add
repnz
outs
dec
sbb
jge
cwde
movs
rcl
inc
lahf
data16
ror
nop
mov
dec
mov
ds
je
dec
scas
dec
or
jmp
std
mov
mov
test
mov
js
sbb
cwde
cmp
loop
ret
gs
je
sub
arpl
jno
jmp
sbb
hlt
out
jp
xchg
pop
mov
xchg
mov
push
push
or
pop
xor
out
dec
scas
rcr
gs
add
xor
inc
sub
cmps
inc
adc
aaa
sbb
iret
movs
fnstcw
xor
or
out
and
mov
lahf
adc
add
push
in
sbb
pop
daa
or
add
mov
sbb
inc
ret
sbb
in
mov
sbb
call
bound
mov
pop
(bad)
pop
aad
cmp
sahf
cdq
dec
mov
cmp
ss
adc
hlt
mov
div
add
das
cmps
outs
stos
inc
or
fld
cmc
cdq
xchg
pop
cli
mov
fsubr
shl
jmp
dec
mov
psrld
or
dec
dec
inc
mov
push
cmp
jbe
cmp
jecxz
jecxz
mov
ss
mov
mov
rep
add
or
jl
test
jmp
loop
fidiv
shl
and
and
mov
jno
pop
pop
pop
mov
retf
inc
pop
or
sub
inc
push
mov
xor
(bad)
fxtract
lock
rcl
pop
cmp
pushf
adc
daa
mov
cld
fst
xchg
outs
inc
dec
fld
aas
addr16
mov
xchg
icebp
jle
sub
mov
aaa
adc
cli
jnp
test
bound
inc
mov
mov
nop
push
int
cmps
mov
xchg
xor
dec
push
mov
sub
popf
daa
or
stc
jbe
das
pop
fsub
call
pop
repnz
pop
pusha
mov
or
call
push
pmaxub
dec
adc
ins
fadd
mov
mov
and
push
cmps
pop
shr
sub
push
into
(bad)
sbb
lods
daa
outs
adc
les
stc
push
inc
mov
cwde
or
int
stc
or
in
call
out
pop
xchg
stos
pop
loop
mov
js
cmp
mov
adc
xchg
cmp
push
enter
je
ror
push
sbb
mov
lea
mov
out
jb
retf
push
mov
xchg
jo
or
xchg
inc
jg
loope
mov
jns
push
(bad)
leave
lods
and
pop
push
adc
sub
out
fucomi
inc
dec
or
mov
xchg
mov
test
pop
test
xchg
call
lods
push
mov
push
fisttp
dec
fld
and
push
(bad)
mov
ds
neg
xchg
stos
mov
shr
and
jb
adc
js
and
mov
sbb
and
(bad)
and
jg
pushw
jle
loopne
(bad)
ins
mov
jns
mov
cli
clc
inc
push
sbb
icebp
test
cli
ret
cmp
arpl
movs
mov
mov
data16
dec
cmps
lds
add
loope
add
push
or
jmp
cmp
ficom
xchg
movs
movs
imul
cmp
inc
push
test
out
cld
or
add
hlt
mov
(bad)
mov
lods
in
retf
fnstcw
(bad)
mov
iret
in
imul
in
jns
cmp
je
and
inc
add
cmp
inc
imul
rcl
push
dec
loopne
push
cmc
lahf
aad
mov
idiv
jle
inc
sub
sub
and
mov
dec
outs
daa
pop
inc
addr16
mov
aad
dec
mov
daa
and
inc
shr
inc
mov
and
mov
ins
ins
pop
add
sub
movs
add
dec
push
daa
pushf
(bad)
mov
lods
cld
pavgb
xor
daa
pop
sbb
xchg
pop
push
jae
dec
push
jmp
arpl
sbb
mov
mov
aas
jne
jbe
jae
xchg
adc
notrack
add
retf
inc
adc
jbe
inc
and
popa
lahf
out
and
sbb
out
or
push
cli
loop
imul
dec
mov
jno
(bad)
(bad)
or
xchg
ins
pop
push
add
push
inc
lds
and
aad
adc
aaa
lods
scas
iret
pushf
retf
mov
pop
jnp
dec
fld
daa
out
(bad)
out
mov
or
in
daa
add
idiv
sub
inc
and
jge
add
mov
and
add
fldl2t
xor
std
mov
cli
daa
xor
push
adc
jb
and
push
cdq
ret
push
aaa
fs
jno
xor
mov
dec
out
cmp
and
dec
lds
ret
jle
sub
dec
out
(bad)
nop
jmp
adc
shl
adc
imul
and
fwait
cli
add
pop
add
jl
or
gs
mov
cmp
popf
movs
retf
cmp
iret
mov
mov
push
(bad)
mov
popa
and
xor
jno
in
xchg
xchg
(bad)
arpl
jmp
adc
mov
jmp
inc
ds
mov
ja
sub
into
xor
in
xchg
adc
dec
cmc
jle
or
mov
lock
pop
enter
repnz
mov
push
nop
lds
pop
xchg
inc
xchg
pushf
cwde
ret
stos
push
fidivr
in
jo
lods
neg
lods
lock
inc
dec
test
sub
pop
jle
sbb
push
fisttp
movs
mov
out
loop
xor
xor
sub
xchg
push
rcr
pop
out
push
xor
test
cmc
jae
(bad)
pushf
rol
cs
xchg
retf
out
push
mov
imul
(bad)
in
xor
and
pop
pop
add
das
adc
dec
cli
inc
cs
ret
or
push
dec
mov
fistp
dec
arpl
call
fmul
or
inc
add
imul
dec
and
xchg
xor
cdq
scas
int3
sub
xor
mov
adc
mov
and
push
idiv
shr
in
jo
jae
sub
xor
mov
inc
ret
xor
loopne
mov
dec
outs
sti
mov
jge
and
arpl
cmp
leave
jmp
call
lahf
ins
add
sbb
ins
dec
inc
jae
jge
(bad)
bound
cmp
push
cmp
aad
jg
icebp
mov
jle
fwait
(bad)
xchg
jnp
scas
inc
mov
push
inc
xor
mov
rol
cs
cld
loop
push
aam
ins
int3
ret
ss
inc
(bad)
fcomp
fld
cmp
jecxz
mov
dec
cld
out
sub
pop
xchg
or
adc
ins
push
add
call
and
repz
jp
inc
pop
outs
fistp
and
es
push
arpl
and
(bad)
aam
cmp
push
push
jg
mov
jecxz
pop
fsubr
jmp
xchg
dec
jmp
jae
and
mov
mov
sub
adc
push
int3
daa
data16
adc
dec
movs
imul
retf
push
inc
jg
add
jg
mov
dec
and
jecxz
sub
sub
pushf
movs
mov
mov
rcl
pushf
cwde
dec
jmp
push
(bad)
lahf
sub
jb
sbb
rcl
and
pop
xor
bound
cmps
xchg
cmps
mov
mov
mov
das
adc
movs
mov
sub
popf
push
call
jmp
pop
push
adc
and
jb
pop
ins
loopne
call
imul
dec
sar
in
cmp
in
jnp
data16
rol
xchg
inc
inc
and
sub
cmps
rcr
sub
cmc
inc
cmp
or
jns
(bad)
cld
push
push
add
xchg
jno
inc
push
cmps
std
push
push
sbb
leave
clc
std
(bad)
mov
fwait
pop
dec
in
popa
jo
dec
push
dec
jle
imul
sar
add
mov
sbb
test
ffreep
bound
pop
rol
daa
jmp
push
dec
movs
pop
mov
push
sub
call
es
and
mov
cmp
mov
hlt
dec
addr16
xor
dec
ja
fwait
cmc
cmps
xlat
dec
mov
stos
inc
dec
sbb
aam
sbb
lea
movs
mov
outs
sbb
cmp
jmp
dec
cdq
iret
scas
jnp
pcmpeqd
fwait
jmp
xchg
dec
xor
pushf
jmp
dec
jb
addr16
jns
sub
leave
fisttp
pop
sbb
neg
jno
jns
fldenv
cld
dec
xor
mov
test
add
xor
cmps
push
and
jns
cmps
repz
inc
pop
or
shl
jns
add
xor
and
sbb
cli
sti
xor
out
mov
dec
fadd
gs
fbstp
ins
push
xor
bnd
loope
xor
push
rcr
test
jns
inc
(bad)
(bad)
cmp
mov
jg
xor
ret
pop
out
add
adc
out
mov
inc
sub
mov
xor
rol
jl
ror
sbb
hlt
popa
push
mov
fwait
retf
mov
pop
rcr
xchg
push
jmp
fwait
add
push
or
lock
popa
mov
adc
jne
xchg
lods
sbb
pop
xchg
xchg
aas
dec
inc
ja
(bad)
fadd
cmp
add
adc
(bad)
pop
out
sbb
jle
retf
aaa
fs
sub
mov
jp
pop
push
mov
push
mov
cmp
sbb
iret
add
ret
sar
or
push
bound
movs
movs
mov
gs
les
pop
in
xchg
and
shl
pop
(bad)
cmps
add
es
xor
mov
(bad)
dec
mov
jge
sbb
lahf
test
mov
xor
movs
fdivr
lahf
(bad)
mov
xchg
push
inc
pop
jge
sti
retf
mov
xor
sub
lahf
pop
test
out
pop
arpl
popf
cdq
test
lds
inc
das
dec
inc
inc
push
dec
push
cld
cmp
and
repz
dec
xchg
and
inc
pop
out
jmp
jnp
retf
mov
xlat
inc
mov
pop
shl
jmp
dec
inc
out
test
adc
mov
xchg
dec
fnstsw
iret
repnz
mov
into
retf
in
(bad)
ins
leave
push
jnp
mov
push
mov
jmp
icebp
cmp
(bad)
xlat
push
pop
stc
lock
adc
inc
pop
and
add
(bad)
adc
mov
cmp
call
add
bound
aaa
xchg
push
jp
lds
fdivr
stos
sub
push
jecxz
(bad)
push
cmp
test
idiv
aad
leave
nop
in
cs
jle
ja
int
inc
popf
mov
in
adc
iret
jmp
jno
ins
call
adc
fidiv
adc
sub
aaa
mov
jp
fld
sbb
loopne
jp
xchg
inc
inc
sub
aad
xchg
ret
sub
adc
adc
mov
std
mov
jle
push
or
mov
or
call
sar
cmp
fbstp
dec
inc
mov
icebp
imul
or
xchg
xor
jo
in
in
sub
ud2
push
movs
aaa
or
aas
stos
int3
aam
stos
leave
fidivr
loopne
push
fistp
mov
or
adc
test
push
push
aam
sub
sbb
mov
jae
jmp
cli
push
lahf
sub
mov
(bad)
aam
pop
(bad)
sub
sub
push
cmp
imul
fwait
inc
(bad)
sub
clc
fld
push
clc
outs
xor
pop
and
ins
fdiv
sub
enter
scas
fiadd
cmp
mov
mov
(bad)
dec
retf
je
xor
mov
push
in
or
xchg
iret
sub
cmps
jno
inc
aas
lahf
mov
pop
inc
push
loop
add
mov
mov
push
fist
leave
sub
fldcw
cmp
mov
mov
dec
das
adc
ss
mov
sti
lock
out
jle
or
lahf
divps
out
xlat
adc
pop
fld
outs
and
lock
pop
mov
push
xchg
lods
mov
add
jmp
repz
in
push
mov
mov
mov
dec
shr
mov
or
push
lods
push
xor
aaa
movs
push
fdiv
xor
retf
mov
jae
int
push
lock
cdq
rcr
mov
or
rcr
adc
mov
dec
pop
cwde
pushf
inc
mov
addr16
push
fld
sti
popa
js
and
int3
and
into
lds
(bad)
ds
in
mov
ds
inc
call
sbb
dec
mov
cmp
ficomp
rcr
sbb
push
jl
enter
xchg
les
cli
pop
jno
loop
fistp
sub
sar
push
adc
call
enter
push
cli
(bad)
pop
rol
sub
or
and
xor
(bad)
lea
add
sub
stos
(bad)
nop
test
loop
cld
div
std
xlat
xor
clc
js
mov
inc
mov
retf
mov
dec
ins
cmp
and
jae
or
mov
sbb
(bad)
mov
mov
pop
out
jge
scas
mov
fsubr
add
mov
add
fcmovu
leave
scas
dec
xor
xchg
mov
sub
or
cmp
adc
pop
pop
outs
enter
fdivrp
sub
pop
mov
leave
push
cmps
mov
lods
retf
pusha
adc
push
jbe
xchg
mov
mov
imul
or
fmul
mov
aaa
fdiv
loope
mov
adc
fadd
stc
and
mov
in
fs
aaa
mov
mov
retf
jbe
adc
cmps
bound
(bad)
das
or
mov
aaa
lods
(bad)
mov
rol
and
movs
mov
dec
jns
scas
xchg
icebp
inc
mov
ja
mov
sub
outs
mov
lods
push
ror
clc
add
mov
push
cwde
dec
add
ins
(bad)
and
mov
or
popa
jmp
push
mov
or
test
daa
cmps
imul
mov
mov
aas
bound
arpl
mov
jp
shr
gs
icebp
dec
pop
jle
jne
ja
or
out
ins
xchg
gs
test
cmp
xor
outs
lds
enter
sbb
mov
ret
mov
aad
or
sub
ret
outs
add
mov
fld
lock
xchg
aas
sbb
dec
retf
pmaxub
or
fidiv
inc
adc
ja
ja
gs
xchg
pop
mov
mov
out
jno
in
sub
mov
mov
xor
test
jecxz
or
xchg
test
cmp
popa
adc
dec
or
sbb
pop
pop
jmp
addr16
xchg
jae
mov
ins
add
sbb
xchg
lods
cmp
enter
cmp
repnz
mov
ins
xor
ss
adc
repnz
lea
mov
loopne
inc
jae
loopne
xor
mov
push
gs
mov
xchg
or
push
lods
mov
push
std
shl
mov
repz
mov
mov
into
jmp
frstor
inc
inc
fist
or
sbb
jno
test
jg
mov
addr16
or
xchg
mov
icebp
push
mov
adc
(bad)
ror
pop
ret
in
xchg
in
test
mov
jmp
push
ja
(bad)
cmp
push
ret
mov
inc
ret
enter
jae
loop
jmp
ins
fnstcw
adc
and
pop
loope
jno
enter
mov
pop
xor
sar
lods
add
cmps
movs
mov
adc
fimul
mov
movs
mov
popa
mov
inc
mov
and
push
adc
push
jle
push
xor
ins
add
push
mov
xchg
sbb
xchg
push
lods
lea
lea
pop
in
scas
mov
jecxz
lea
rol
mov
aam
sub
stos
bound
fsubp
daa
pop
scas
retf
push
dec
mov
popf
mov
test
push
addr16
div
cdq
mul
fstp
add
das
jle
xchg
and
push
(bad)
sti
xchg
jns
sub
cmp
daa
sahf
ficom
sti
xchg
cmp
icebp
lahf
xchg
mov
push
mov
ret
popf
xor
test
loop
push
jbe
sbb
sbb
call
cwde
mov
inc
stos
mov
ss
das
dec
mov
xor
jno
and
fmul
jecxz
scas
test
xlat
fcmove
mov
shl
or
pop
ss
ins
jbe
jno
icebp
fwait
xchg
(bad)
lods
shl
std
pop
mov
mov
cwde
push
int3
pop
inc
scas
mov
dec
in
cmps
jge
in
scas
jge
mov
jp
int3
ror
in
mov
sti
cmp
cmp
mov
fwait
push
shl
xor
sub
adc
int
es
add
inc
or
outs
sub
jns
add
sbb
adc
imul
adc
iret
xor
add
pushf
out
sbb
ins
xchg
jne
sbb
lds
jns
push
and
jb
popf
repnz
and
lock
jmp
ds
shr
or
xor
inc
dec
out
outs
bound
dec
outs
imul
jbe
dec
(bad)
mov
cmp
mov
pop
and
dec
mov
fucomip
pop
cmps
push
ins
mov
or
cmp
sar
enter
add
mov
in
mov
dec
mov
fist
and
shl
push
(bad)
fst
(bad)
hlt
ss
jns
jne
add
iret
enter
lods
lea
mov
xor
ficomp
and
cmp
nop
xchg
outs
mov
inc
add
fisub
movs
pushf
icebp
mul
mov
pop
sbb
push
xchg
sub
adc
xchg
fimul
inc
out
adc
jmp
xchg
push
aas
and
lea
push
div
pop
cmp
pop
ins
and
ins
push
jecxz
and
leave
jmp
and
fild
sbb
ja
repz
mov
shl
clc
push
int3
(bad)
fsub
imul
inc
test
xchg
add
(bad)
jbe
or
fcmovnb
cs
clc
test
add
repnz
xchg
out
mov
jmp
cdq
mov
or
lahf
popf
add
sar
sbb
fisubr
lahf
or
dec
mov
bound
xchg
and
mov
jg
call
ss
icebp
push
mov
in
mov
sbb
or
inc
icebp
nop
xchg
ss
xchg
out
into
xchg
mov
mov
data16
mov
cmp
xchg
xchg
rol
adc
jp
mov
pop
cmp
pop
push
inc
frstor
inc
pop
sub
fs
jmp
pusha
test
mov
dec
and
jle
sub
dec
pop
mov
sbb
lods
mov
stc
outs
or
mov
loope
(bad)
sbb
frndint
and
push
jae
fimul
in
(bad)
mov
add
push
push
call
inc
push
stos
out
xchg
dec
push
jmp
mov
das
rcl
loopne
xlat
(bad)
les
es
popf
push
push
push
add
repz
or
mov
xchg
push
fisttp
stos
fdiv
out
aas
ja
and
inc
dec
sub
stos
cmp
ss
dec
inc
hlt
push
push
jmp
retf
pusha
cmp
lds
push
cmps
cmp
or
pop
add
jns
movs
scas
loope
mov
inc
dec
sbb
push
or
sti
dec
(bad)
mov
xchg
ret
dec
js
pop
inc
push
bound
xchg
cmp
jno
dec
adc
pushf
iret
add
in
inc
adc
(bad)
js
mov
or
sub
add
xor
popa
mov
inc
pop
hlt
fiadd
ja
mov
(bad)
scas
repnz
int
cmp
push
mov
cmp
mov
(bad)
xchg
mov
or
clc
js
pop
and
sbb
and
test
and
xchg
jb
cmp
adc
add
je
fisubr
dec
ror
into
mov
jge
cwde
and
mov
mov
mov
mov
aaa
retf
out
or
int3
(bad)
sbb
inc
lods
movs
mov
sbb
xchg
inc
jo
in
mov
sub
pop
stos
ja
fistp
std
jne
push
mov
std
sar
mov
mov
fistp
pop
mov
and
lahf
hlt
add
repz
pop
mov
imul
sub
sti
mov
xor
(bad)
loop
add
or
push
jnp
xlat
or
xor
push
clc
xchg
sub
cs
add
adc
push
cmc
jne
add
popf
lods
bound
xor
test
mov
inc
sbb
mov
xchg
pop
push
xor
sub
cmps
shr
mov
(bad)
retf
mov
call
sbb
(bad)
jge
outs
pop
rcr
movs
sub
lds
sub
sbb
pop
nop
neg
cld
int3
jno
xchg
ds
sti
retf
adc
mov
jg
jp
pop
push
adc
add
(bad)
(bad)
sub
sbb
push
adc
xlat
sbb
pop
retf
inc
loopne
xchg
sub
add
adc
push
nop
shl
jae
fmul
mov
push
ins
xor
sbb
mov
loope
nop
mov
and
jbe
jne
mov
xchg
dec
dec
pop
sub
lock
adc
mov
jns
and
cmp
pop
std
add
and
mov
aam
dec
dec
and
iret
inc
push
aas
xchg
shl
jmp
dec
mov
arpl
daa
les
(bad)
fild
pushw
lods
mov
out
cmp
or
cmp
jmp
rep
xor
dec
stc
or
out
add
xlat
jb
xor
jnp
out
xor
retf
ins
add
mov
iret
rcl
fstp
ins
sete
sti
mov
adc
loopne
xor
mov
fldl2t
xlat
ja
mov
bnd
dec
jno
aam
cld
add
das
pop
push
pop
pop
int3
add
int3
stos
inc
xor
test
scas
adc
cwde
and
aad
das
mov
xor
aam
push
inc
js
push
sar
fstp
fdiv
ret
mov
push
pushf
jmp
ret
sub
cdq
stc
scas
add
sub
(bad)
pop
js
shl
hlt
outs
or
dec
or
lahf
dec
jle
jbe
nop
push
cmps
or
loope
les
and
(bad)
stc
clc
push
leave
mov
xchg
and
sar
ret
loopne
hlt
add
pop
imul
mov
add
push
sub
jnp
inc
push
jae
push
data16
push
mov
loop
cs
hlt
add
add
cdq
repnz
inc
adc
rol
in
cmp
jae
xor
(bad)
pop
dec
movs
daa
dec
sbb
in
xor
mov
xor
test
jl
sub
sbb
jns
das
fsubp
test
xchg
rol
aaa
lods
fprem
jmp
inc
jae
mov
add
inc
mov
leave
nop
sbb
push
xchg
das
and
xchg
out
jecxz
pusha
lds
fst
mov
(bad)
mov
shl
sbb
pusha
and
fwait
ret
mov
sbb
and
xchg
loope
ficomp
repz
cmc
sub
mov
in
ds
movs
adc
push
imul
cdq
jne
ds
dec
icebp
inc
pop
retf
xor
and
das
(bad)
mov
and
sbb
fninit
sub
pop
neg
sbb
cmp
sub
mov
jno
push
cli
cwde
stc
call
fwait
mov
test
xchg
or
push
loopne
test
push
or
push
mov
out
jl
jle
scas
jbe
hlt
pop
je
jb
push
xchg
fistp
jae
adc
out
inc
jecxz
xchg
jge
push
je
retf
jnp
out
pushf
push
xchg
xor
or
jge
int
mov
push
sub
mov
scas
pop
out
push
js
dec
pusha
sub
jl
mul
(bad)
sbb
outs
rcr
repz
sbb
jno
inc
inc
push
jecxz
pop
cmp
leave
dec
xchg
mov
pusha
adc
sbb
int
jb
outs
inc
xor
fidivr
cmp
loopne
into
loope
inc
ds
out
rcl
and
out
dec
daa
rcr
adc
mov
sbb
mov
shl
sub
std
xor
repnz
and
retf
add
inc
jge
mov
mov
enter
fs
or
add
ja
mov
call
pop
call
scas
xor
sub
mov
imul
sub
and
adc
les
in
cmp
push
mov
aam
scas
pop
lods
pop
pushf
int
add
push
mov
pop
cwde
mov
fcmovne
mov
int3
dec
mov
adc
adc
add
inc
push
call
jmp
add
inc
add
lds
mov
push
out
xchg
test
stos
add
inc
sub
(bad)
push
lods
jnp
in
adc
inc
inc
pushf
dec
rol
push
push
ins
int3
mov
lods
push
(bad)
int
xchg
adc
pop
test
das
xor
push
push
adc
rol
mov
mov
loopne
ror
pop
mov
in
mov
cmp
sbb
jle
sbb
mov
cwde
push
inc
jbe
push
iret
retf
push
js
mov
movs
jae
(bad)
ror
add
jge
sub
pop
scas
pop
(bad)
fisttp
cmp
lods
dec
xor
repz
jbe
mov
xor
scas
jg
mov
inc
ss
inc
xchg
or
xor
and
jg
les
mov
push
add
and
lds
ret
pop
out
hlt
mov
cli
inc
mov
mov
push
push
das
repnz
out
and
mov
mov
icebp
sahf
mov
adc
and
mov
xchg
int3
adc
xchg
inc
mov
fidivr
and
out
out
cmps
retf
mov
mov
and
(bad)
jl
push
mov
dec
je
cmp
fnstcw
xchg
push
mov
popa
iret
mov
mov
sub
xor
out
psubsw
jno
ss
inc
jo
shl
repnz
sub
pusha
push
ret
sub
dec
repz
lock
sti
jno
push
aaa
jo
add
sub
cld
js
fwait
pause
mov
inc
xchg
dec
int
mov
jne
dec
push
pop
sbb
sbb
xor
out
shl
outs
inc
adc
fld
pop
sub
and
or
nop
cmp
je
(bad)
add
sub
es
pop
sbb
xchg
test
xchg
mov
(bad)
jnp
mov
mov
outs
dec
cmp
xlat
sub
sbb
popa
sub
data16
xchg
mov
aas
push
test
jp
xchg
sar
mul
dec
and
mov
das
idiv
xchg
sbb
jnp
pop
ret
lods
not
dec
or
xchg
pop
mov
or
int3
rol
dec
fimul
sar
cld
xor
sbb
dec
stc
xor
add
adc
jae
xor
loop
int3
mov
jns
sub
dec
cmp
pop
mov
jg
sub
es
ins
cmp
inc
retf
fstp
cmp
test
scas
fcom
adc
jl
cmps
mov
mov
xlat
push
push
lods
in
pop
xor
or
sub
xor
cdq
dec
into
int
addr16
retf
jnp
retf
or
dec
movs
es
xchg
mov
(bad)
data16
lock
mov
jmp
sub
push
sub
cmp
into
xlat
int3
pop
mov
fild
push
(bad)
pop
pusha
mov
pop
cmp
push
mov
ficom
(bad)
push
adc
mov
repnz
lods
xchg
aas
cmp
in
bound
xor
pop
sbb
or
xchg
int3
lods
cmps
das
leave
jnp
daa
xchg
mov
aad
sub
push
sbb
movs
test
je
and
jns
and
js
sub
mov
mov
sub
sti
cmp
add
pop
(bad)
mov
in
test
pusha
cwde
mov
out
test
int3
adc
test
lds
test
out
fild
dec
add
xchg
out
aam
je
(bad)
add
xor
pop
xchg
movs
inc
add
xchg
idiv
xor
push
add
call
cdq
xor
xchg
lea
aam
and
movs
aad
not
inc
dec
fstp
xchg
outs
cld
add
ds
fcmove
dec
dec
mov
push
sbb
je
and
mov
and
xchg
xor
add
(bad)
mov
jns
ror
out
gs
ja
popf
test
or
push
mov
sbb
jmp
(bad)
xchg
push
sbb
ins
cmp
xchg
inc
jns
push
dec
pusha
mov
mov
and
daa
and
mov
lods
les
retf
sti
ins
dec
sbb
add
sub
sar
push
or
sahf
mov
test
add
clc
std
and
inc
(bad)
jns
int
lods
fnsave
push
lods
push
lea
jne
pop
and
mov
je
retf
call
lods
(bad)
or
xchg
cli
sub
(bad)
in
rcr
ret
xor
lds
icebp
or
sbb
and
inc
cmp
stos
xchg
ins
enter
loope
xor
loope
mov
rcr
sbb
bound
add
xlat
ds
ret
pop
jnp
shr
clc
mov
add
xlat
xchg
addr16
pop
jmp
dec
mov
lods
or
xor
xor
mov
cmc
sbb
cwde
nop
or
shl
xor
adc
jmp
adc
je
loopne
ja
sub
inc
pushf
push
mov
dec
and
jecxz
or
fiadd
dec
sub
nop
(bad)
popf
jns
cs
sub
inc
pop
sbb
push
popa
cld
cmps
mov
pop
mov
dec
xor
ror
scas
dec
div
adc
xlat
neg
push
jo
sub
sub
enter
mov
test
and
data16
imul
push
dec
inc
push
pop
add
sub
xchg
xchg
out
test
adc
mov
inc
in
retf
jge
sub
sbb
data16
lea
xor
dec
scas
inc
mov
jecxz
jecxz
push
ds
fld
(bad)
outs
clc
test
xchg
shr
sbb
mov
adc
outs
jge
adc
fiadd
test
sbb
dec
sub
ror
push
fmul
inc
nop
mov
jno
add
int3
imul
adc
mov
or
jns
das
cli
call
ret
(bad)
test
ror
sbb
jle
jne
outs
dec
cmc
test
adc
lahf
dec
jbe
loopne
cld
cs
repz
and
sub
inc
jmp
sub
push
pop
jmp
das
(bad)
lock
sti
ja
cmp
mov
sub
dec
sub
mov
cld
jns
(bad)
outs
xor
ret
cmps
ja
jns
daa
int3
sbb
fisubr
int3
outs
sub
push
jmp
cmc
jecxz
cld
push
sub
mov
lods
mov
ret
push
sbb
lds
lods
fstp
xor
out
sbb
aas
push
mov
rcl
dec
cdq
mov
lds
stos
in
(bad)
stos
repz
fcmovnu
cmps
pushfw
hlt
bnd
and
test
cmps
outs
retf
inc
ss
fnstcw
inc
mul
add
cwde
jbe
sti
idiv
push
add
test
lahf
fnstenv
test
xchg
outs
out
mov
mov
mov
lods
dec
add
jg
dec
xor
xor
dec
inc
dec
out
(bad)
fnstsw
xchg
daa
xchg
xchg
sbb
iret
push
inc
int3
mov
mov
dec
fistp
pop
inc
in
or
int3
inc
mov
add
pop
push
test
push
jge
pop
call
fsubr
mov
in
xchg
in
outs
ja
enter
stos
call
sar
outs
mov
sub
xor
cmps
xor
xchg
fsubr
test
into
xor
push
inc
lahf
popa
mov
dec
int
push
test
pop
sbb
sar
pop
(bad)
add
dec
(bad)
sti
sub
out
aam
fsub
push
loope
cmps
adc
jno
lahf
scas
mov
and
xor
mov
retf
dec
cdq
sbb
pop
pusha
pop
jo
cmp
mov
sahf
jmp
fsub
mov
jl
imul
inc
popa
mov
mov
and
test
dec
or
dec
cdq
sub
sub
rcl
pusha
mov
or
xor
push
leave
push
jg
xor
hlt
xchg
cmp
mov
in
ja
repnz
jae
xor
cld
sbb
add
ds
push
mov
aad
fst
test
jmp
push
cdq
xor
mov
add
pop
rol
inc
or
dec
iret
cmp
cmp
inc
xchg
push
cmp
mov
jbe
shr
lock
cwde
cs
stos
pop
sub
or
adc
icebp
add
xchg
mov
cmp
sti
adc
pop
mov
dec
xlat
jmp
(bad)
xor
icebp
jle
jg
jo
aaa
imul
(bad)
movs
lds
pusha
mov
and
sbb
xchg
xchg
mov
xlat
aad
cmp
cmp
xchg
xor
mov
mov
pop
(bad)
push
xor
push
mov
cmp
sub
sbb
sub
test
vpunpcklqdq
mov
fdiv
push
or
cld
inc
bound
pop
inc
add
iret
inc
sbb
dec
adc
sbb
jno
pop
mov
cmps
repz
mov
push
xchg
or
xchg
retf
sbb
repnz
popf
push
popf
repz
jmp
sub
xor
mov
inc
stos
div
jo
inc
fld
outs
ins
sub
popa
mov
inc
sahf
scas
ins
jp
pop
sti
cmc
inc
jns
and
push
jge
mov
push
pusha
ins
hlt
stc
mov
pushf
outs
shr
jmp
push
movs
mov
push
sub
xor
ins
repnz
test
mov
xchg
out
daa
fist
jo
aam
sub
xlat
loope
iret
add
and
push
pop
(bad)
dec
ficom
push
add
sub
cdq
jge
sub
jo
idiv
mul
test
(bad)
and
mov
mov
imul
ret
adc
aam
jg
push
sti
push
dec
push
out
sbb
fist
daa
and
sub
arpl
clc
pop
rcr
jbe
mov
int3
ret
mov
in
push
repz
inc
mov
cmp
lea
push
mov
ret
lahf
(bad)
mov
mov
fstp
xor
jmp
fadd
(bad)
sub
imul
jle
mov
pop
loope
xchg
push
out
xchg
jecxz
inc
sti
leave
sbb
dec
fwait
or
pop
and
mov
jmp
pop
clc
sbb
jg
mov
jecxz
or
add
pop
inc
or
pop
mov
aas
mov
add
jb
shl
dec
aaa
ret
mov
pop
int
xchg
jb
test
jnp
popa
test
arpl
lds
stos
dec
dec
arpl
push
or
arpl
jns
push
cwde
push
scas
mov
adc
jno
mov
ffreep
ficomp
les
pop
add
in
mov
pop
jmp
dec
jae
mov
aas
nop
sbb
shl
sub
xlat
pop
inc
mov
adc
push
leave
add
mov
aaa
inc
adc
std
xchg
(bad)
ret
repz
push
cmp
cmps
cs
and
xchg
fld
sbb
sahf
popf
xchg
dec
mov
in
sub
fisub
btc
es
push
lods
xor
jne
pop
mov
fcomp
ja
repnz
out
inc
mov
aad
cld
jl
and
dec
cmp
adc
jmp
loopne
repz
fs
scas
or
sbb
pop
mov
sub
out
out
and
adc
mov
cmp
mov
xchg
dec
mov
add
or
sub
popa
ins
addr16
fistp
fsubr
je
add
rcl
clc
icebp
adc
pushf
xchg
or
and
mov
push
sub
push
repnz
or
add
cmp
icebp
mov
mov
fdivr
js
not
sbb
in
mov
sub
pop
xor
cmps
pop
sbb
and
ds
inc
shr
scas
int3
retf
push
pop
xchg
and
push
int3
push
inc
adc
sti
sub
ss
push
gs
push
push
or
mov
ss
ins
repz
jae
push
adc
pop
mov
jns
mov
pop
mov
cmps
mov
call
sbb
cmps
push
(bad)
inc
dec
xchg
jl
sub
jg
inc
(bad)
(bad)
mov
add
(bad)
xchg
arpl
mov
push
outs
fnstsw
mov
jge
ins
fwait
and
mov
test
xor
stos
sbb
dec
in
in
or
rcl
psubusb
xor
stos
or
(bad)
sub
xchg
cld
or
rol
inc
shl
mov
rcl
push
sub
ins
shl
dec
cmp
push
jge
and
dec
pusha
fld
arpl
iret
pushf
and
imul
hlt
fst
jmp
mov
pop
push
mov
mov
test
int3
add
mov
xlat
daa
push
lods
inc
fsubrp
cmp
inc
xchg
add
outs
cmc
pop
pop
pop
push
jmp
div
call
mov
rol
daa
daa
pop
sbb
jg
xor
mov
movs
mov
imul
jno
cdq
xor
jecxz
or
dec
test
retf
push
rcl
mov
mov
push
scas
loop
xor
lock
sbb
sbb
and
fs
mov
lea
in
sub
ins
aas
sub
add
pop
in
xchg
es
add
mov
stos
ds
push
rcr
push
movs
rcl
sub
jno
lock
mov
cwde
and
cs
xor
xor
mov
jo
mov
xchg
jg
lods
push
xchg
(bad)
mov
mov
mov
daa
gs
ja
lock
inc
fsub
sub
jno
mov
xor
and
jne
inc
cmp
adc
jb
push
and
call
and
xchg
jmp
jns
mov
retf
rcr
test
out
aad
sub
pusha
jb
adc
jmp
sbb
dec
jnp
scas
jecxz
jae
mov
test
int
in
jo
test
dec
sbb
scas
xchg
xor
inc
iret
sub
sbb
je
test
add
aaa
lods
xchg
out
sub
xchg
loope
je
xor
stc
xlat
push
test
push
ffreep
mov
inc
xor
mov
sub
scas
mov
cmp
pop
ins
mov
sub
fwait
xchg
adc
out
jle
test
push
inc
add
dec
mov
push
fld
or
test
xchg
cs
cli
clc
mov
push
push
popf
and
test
cmp
xlat
xchg
and
ins
js
inc
inc
retf
daa
dec
pop
mov
sbb
movs
(bad)
repnz
div
pop
xchg
cmp
and
and
enter
mov
jno
pop
outs
mov
dec
and
xchg
inc
ins
sub
movs
pop
adc
mov
call
cld
pop
inc
gs
outs
mov
adc
and
hlt
sub
shl
pop
cwde
or
jmp
movs
cmp
fmulp
in
dec
test
jl
push
outs
std
and
loop
xchg
loope
lods
hlt
je
cmp
mov
ret
push
pop
clc
cmps
ss
inc
fst
or
dec
pop
pop
and
aas
push
popf
cmps
mov
adc
sub
xor
add
mov
daa
les
repnz
cmps
jmp
int
or
cli
ins
fcompp
mov
lods
or
mov
out
and
jb
or
lods
cmps
and
push
xchg
pop
push
mov
jno
mov
out
add
add
pop
mov
push
mov
scas
test
repnz
jl
push
or
inc
or
daa
cmp
jl
outs
push
inc
cs
mov
aas
ret
pop
and
or
aam
sbb
push
pop
push
mov
sub
add
push
mov
sub
nop
adc
test
xor
bound
or
jbe
fst
mov
(bad)
icebp
scas
aas
push
or
sbb
repnz
or
pop
sahf
jmp
and
in
jns
or
lods
es
aam
jmp
rcl
xchg
adc
ss
cmp
movs
sbb
mov
jle
imul
in
and
shl
or
mov
loop
sbb
jbe
sbb
mov
stc
rol
push
dec
movs
pusha
adc
mov
jb
cmp
repnz
jl
and
rol
mov
jae
cmp
imul
gs
retf
push
test
mov
test
mov
aad
xchg
mov
clc
push
sub
fisub
call
iret
cmps
test
mov
scas
nop
sahf
xchg
xchg
movs
(bad)
push
mov
stos
icebp
mov
ins
das
xchg
aas
aaa
dec
mov
sahf
sar
xchg
push
add
(bad)
jo
fwait
movs
je
mov
pop
loop
(bad)
or
adc
sahf
jmp
pop
arpl
dec
daa
(bad)
pushf
mov
repz
jp
pop
and
daa
add
dec
loope
shl
jns
frstor
add
loopne
fbld
and
mov
sub
into
mov
stc
scas
sub
or
pop
rcl
jl
cdq
mov
leave
lahf
shr
sbb
mov
add
dec
xlat
call
adc
call
dec
add
rcr
cmp
add
ret
jne
int3
pushf
movs
nop
xor
nop
push
fstp
and
xor
pop
repz
sbb
es
push
aad
jmp
scas
pusha
jbe
into
sub
in
push
aas
push
mov
sub
pop
xchg
jbe
iret
test
div
sbb
jno
(bad)
in
xchg
aam
jle
aas
in
mov
fdivr
xor
ja
mov
sub
dec
ret
inc
int3
retf
mov
les
or
mov
sbb
inc
pusha
lock
mov
clc
sbb
shl
xchg
xchg
mov
repnz
dec
test
in
add
add
mov
test
retf
test
mov
or
xor
add
or
push
push
dec
dec
retf
mov
frstor
mov
sub
stos
adc
pusha
sbb
icebp
or
pop
div
xor
xlat
cmp
aam
adc
mov
(bad)
push
dec
ins
cmp
jae
and
push
jae
lods
fs
mov
dec
adc
clc
aaa
in
mov
jb
rcl
xor
mov
and
neg
pop
and
(bad)
ror
(bad)
aam
xchg
js
or
pop
ror
inc
mov
cmp
jne
xchg
ret
fidiv
add
popf
xor
sbb
add
inc
shl
in
pop
repz
sbb
aad
sbb
popf
sbb
popf
fmul
cli
je
jnp
pop
add
dec
jae
mov
or
adc
outs
xor
dec
lods
(bad)
into
xchg
fcomp
mov
pop
sbb
jnp
fs
mov
jecxz
aaa
and
jns
les
xchg
cli
ins
or
cdq
ins
test
inc
shl
sbb
shl
or
loope
cmp
pop
nop
(bad)
xchg
mov
dec
jl
add
push
cdq
mov
pop
and
mov
ficom
add
add
cmp
stc
xchg
movs
dec
jbe
clc
xchg
push
jp
dec
in
in
xor
ds
mov
and
scas
inc
fistp
lock
mov
ins
outs
outs
(bad)
stc
mov
shl
push
inc
leave
jo
or
xor
movs
inc
cmps
movs
out
dec
pop
pop
push
div
shl
ss
push
xor
mov
dec
hlt
or
and
scas
cdq
add
xchg
mov
shl
jns
push
js
pop
jp
inc
in
and
call
arpl
add
mov
mov
push
iret
or
xchg
in
sbb
mov
into
inc
jae
fisttp
leave
retf
daa
pusha
and
jb
and
repz
stos
cmp
ficomp
lds
imul
lods
sbb
adc
jbe
mov
adc
cli
lods
sbb
sar
(bad)
cmc
fadd
jecxz
nop
inc
jl
dec
mov
cmps
dec
bound
lahf
mov
sub
daa
adc
pop
test
outs
inc
push
add
enter
xchg
aad
or
loop
inc
scas
pop
mov
xor
sbb
in
dec
xchg
jp
repnz
push
xchg
test
adc
sbb
push
test
dec
push
inc
pop
push
mov
stos
loope
xor
mov
stos
call
dec
xchg
push
xchg
in
xor
lods
push
repnz
aad
ja
ror
push
in
dec
mov
sbb
fmul
add
imul
sbb
push
mov
fucom
aas
xchg
adc
rol
test
push
hlt
add
and
mov
dec
fstp
stc
cli
or
push
and
out
adc
(bad)
pop
out
lock
adc
rcl
ins
mov
clc
popa
cmc
es
mov
mov
(bad)
repnz
adc
cmp
test
dec
ja
je
rcr
or
mov
mov
pop
mov
mov
xchg
call
push
xchg
push
mov
div
jg
or
mov
jbe
sub
inc
in
pop
inc
addr16
cmp
movs
mov
xchg
sub
sub
clc
shr
and
and
movs
int3
inc
popa
sbb
ror
les
pop
xor
imul
pop
dec
xchg
mov
pop
retf
mov
ja
fst
sahf
mov
push
imul
jo
adc
scas
xchg
ret
call
jmp
outs
jmp
push
(bad)
out
daa
xchg
mov
inc
pop
retf
and
daa
rol
jmp
cmp
cmp
fcmovnbe
fst
cmps
mov
leave
mov
cmp
lods
push
mov
or
jge
lea
cld
pop
and
push
or
shl
stos
aas
inc
mov
cmp
pop
xchg
movs
push
sbb
mov
inc
inc
jno
push
popa
cwde
or
mov
fs
jb
adc
das
push
inc
cmps
sub
mov
outs
sar
inc
cld
dec
sub
push
jb
jge
in
inc
xlat
stos
mov
or
or
lods
movs
jmp
addr16
scas
addr16
or
mov
popfw
xchg
outs
outs
iret
outs
retf
loop
pop
movs
lods
sub
fucomip
xor
je
xor
(bad)
enter
mov
in
cdq
or
aad
aam
or
pop
mov
js
rep
mov
cmp
cli
jnp
outs
test
xor
and
out
mov
mov
ror
cmp
push
paddusb
push
cmc
test
mov
rcl
cmp
out
scas
(bad)
and
enter
lea
inc
sti
out
retf
xchg
jg
aam
or
arpl
fmul
sbb
shl
or
cmps
int
adc
jb
and
dec
gs
mov
dec
imul
inc
or
pop
rol
cmp
push
sbb
or
fnsave
cmp
xchg
cmp
mov
stos
xor
push
and
addr16
add
gs
sub
dec
adc
cmps
pop
out
popf
push
icebp
cwde
out
jbe
push
lds
cmp
mov
callw
or
sub
int3
call
je
jle
sub
xor
in
pop
mov
dec
mov
push
adc
inc
pop
cvttps2pi
lahf
add
imul
mov
into
jns
dec
cmp
es
dec
imul
sti
hlt
and
loopne
or
mov
push
push
lods
aad
clc
mov
sar
int
jecxz
aas
adc
dec
mov
push
jp
dec
xchg
jb
xlat
push
imul
cli
pop
push
sbb
lahf
pushf
retf
sbb
xchg
dec
sbb
(bad)
out
mov
(bad)
(bad)
js
ins
pop
out
pushf
fidivr
pop
xor
imul
fstp
pusha
pop
mov
cmp
sbb
daa
jo
xchg
lods
ins
pop
push
pop
rcl
xchg
add
mov
push
test
icebp
sbb
dec
jmp
inc
cs
sub
out
daa
add
push
mov
rcl
sar
xlat
jb
test
mov
pop
test
jge
pushf
cs
repz
and
push
pusha
fisub
push
mov
jle
fadd
cmps
sub
jmp
daa
push
(bad)
cli
test
xor
mov
retf
rol
push
push
xchg
add
neg
add
(bad)
lods
test
(bad)
enter
sahf
push
add
xchg
ficom
xchg
(bad)
mov
call
mov
aad
test
ja
addr16
in
test
push
out
les
xchg
xor
in
(bad)
rcr
test
mov
aam
inc
addr16
outs
cmp
adc
call
rol
addr16
aaa
jmp
call
loop
xor
jmp
sbb
jecxz
retf
rol
cld
xchg
xor
pop
pop
jg
add
xchg
add
or
scas
add
retf
sub
ror
xlat
pusha
fdivr
ss
pop
inc
into
push
test
ins
xchg
push
loop
dec
cwde
add
jnp
out
jo
push
stos
mov
dec
xor
or
and
add
dec
or
rcr
je
fisub
repnz
cmp
ja
neg
outs
push
xor
lds
scas
inc
mov
jne
mov
jmp
pop
lds
xchg
inc
fmul
sbb
jp
pop
(bad)
cmp
lahf
lea
sbb
ds
mov
pop
sub
cs
dec
or
mov
pop
push
ins
or
sbb
lods
pop
xchg
daa
sub
lods
mov
adc
cdq
int3
into
mov
int
xchg
xchg
pop
test
add
pusha
sub
adc
into
rcl
sti
in
stc
xor
inc
jo
push
scas
data16
sbb
enter
dec
mov
(bad)
fsub
jmp
xor
movs
sbb
call
sti
popa
stos
jl
call
int3
loope
jbe
sbb
lock
cs
dec
mov
xchg
nop
js
push
ret
int3
mov
(bad)
arpl
inc
mov
mov
sbb
add
into
std
outs
adc
fwait
jno
mov
daa
dec
addr16
sbb
inc
ds
cs
test
mov
mov
or
mov
mov
mov
push
and
cli
loop
xchg
idiv
or
pop
adc
mov
dec
mov
stc
adc
nop
xor
fstp
ja
(bad)
ins
pusha
in
push
mov
cwde
add
in
or
inc
in
scas
iret
dec
sub
cmc
ins
mov
mov
mov
iret
jmp
add
dec
call
mov
std
mov
call
adc
sbb
push
sahf
out
gs
push
sbb
cmps
rol
shl
call
jno
jns
or
jne
pop
retf
mov
(bad)
sahf
adc
ret
outs
cmp
dec
sar
jecxz
shl
add
iret
retf
fucom
jne
mov
outs
shl
bound
or
sahf
jnp
shl
mov
add
scas
lds
mov
xlat
pop
psrlq
xor
or
fdiv
bound
sbb
cli
mov
in
add
test
cld
inc
xchg
fcmovbe
out
inc
mov
shl
jecxz
xor
jne
mov
push
movs
mov
sbb
mov
xlat
add
aas
add
(bad)
xor
lds
sub
jb
cmp
jne
ret
int
and
adc
fs
loop
pop
cwde
cmc
jle
fld
mov
and
imul
cmp
mov
call
dec
jmp
out
addr16
mov
mov
add
popa
(bad)
(bad)
stos
mov
call
inc
fild
sbb
hlt
inc
xlat
xor
push
dec
push
pop
xchg
pop
nop
xchg
ins
rcl
mov
pop
adc
cld
test
inc
enter
xchg
jmp
and
mov
mov
loop
add
nop
jb
adc
lods
fnsave
and
movs
pusha
adc
jmp
lea
gs
and
cmp
ja
cmps
jmp
mov
cs
cli
mov
sbb
push
imul
fwait
cmp
ds
icebp
cld
test
and
adc
cli
ds
push
in
test
xchg
mov
repz
sbb
inc
test
cmp
and
mov
gs
adc
mov
gs
out
add
je
ret
cmps
ret
push
mov
(bad)
fdivr
cmc
and
add
retf
jp
xchg
stos
(bad)
sar
lds
cmps
xor
les
into
and
inc
popf
pusha
mov
lahf
clc
mov
idiv
ret
mov
mov
sbb
cmc
inc
jae
xchg
inc
jo
dec
clc
mov
add
or
adc
mov
aam
xchg
cmp
mov
xlat
lock
sub
in
inc
jnp
add
jbe
ror
push
out
pushf
pop
std
ror
mov
dec
aaa
inc
xchg
mov
(bad)
dec
sub
inc
sub
mov
xchg
cmp
sahf
popa
call
sub
scas
icebp
cmc
push
outs
pop
imul
ror
(bad)
pop
adc
cdq
jmp
arpl
add
jne
imul
push
dec
pushf
dec
(bad)
adc
cmp
fsubr
mov
movs
push
mov
icebp
xchg
int3
rol
adc
mov
pop
inc
jg
cmc
bound
jae
out
push
jmp
loopne
dec
mov
rcr
xchg
lea
hlt
push
es
and
ins
cmp
dec
cmp
call
(bad)
popa
iret
dec
pusha
inc
inc
jl
leave
sub
or
mov
push
cmp
jne
stc
test
push
inc
sub
gs
(bad)
add
mov
inc
in
inc
xor
dec
push
xlat
ret
out
and
mov
cmp
mov
mov
sub
popa
imul
movs
and
or
or
adc
adc
and
aas
jbe
movs
mov
add
jns
mov
out
add
(bad)
pusha
xchg
jl
sub
leave
int3
sbb
mov
(bad)
dec
sar
cmps
smsw
inc
adc
inc
push
sub
mul
fdiv
push
js
ret
out
stos
xor
lock
in
mov
int
cmp
out
sahf
adc
scas
mov
ret
gs
out
aad
and
dec
(bad)
stos
sbb
daa
mov
add
cmp
jb
adc
mov
in
dec
mov
rol
mov
popf
xchg
and
arpl
push
icebp
jbe
data16
stc
div
inc
jmp
popa
mov
pop
cld
scas
push
dec
ins
aaa
xchg
lahf
dec
hlt
mov
fcom
test
cmp
(bad)
dec
jmp
push
xchg
pushf
pushf
sub
mov
push
jmp
fimul
mov
cmps
cmc
das
inc
sbb
bound
fst
sti
and
in
(bad)
lock
popa
or
jno
mov
mov
hlt
popf
out
fimul
fstp
push
pop
mov
cmc
sub
inc
pop
jg
ins
fistp
hlt
cmps
bound
cmp
rcl
lock
jl
inc
mov
test
jge
fild
in
test
int
dec
shl
sub
enter
xchg
es
sub
aam
push
mov
push
mov
push
popf
add
inc
fcomp
cs
pop
dec
and
jno
and
std
or
fldcw
or
mov
push
int
sub
outs
push
cs
nop
gs
lods
(bad)
(bad)
jle
daa
xchg
xor
adc
cdq
inc
and
xlat
ja
and
movs
cli
mov
out
stc
push
pop
or
dec
jbe
(bad)
jge
fldcw
aam
xchg
rcl
out
leave
loopne
(bad)
pusha
or
push
jle
bound
push
jne
data16
mov
dec
aas
ds
adc
js
sti
dec
call
push
pop
sahf
xor
dec
loopne
xor
or
sbb
sbb
icebp
scas
retf
pop
cwde
iret
add
ror
gs
rol
jl
imul
or
adc
scas
and
lds
push
mov
(bad)
pop
dec
fnstsw
xchg
jno
les
sbb
push
js
lock
cld
cwde
inc
popf
adc
lods
or
sub
sub
push
push
imul
out
inc
add
jae
cmp
push
xchg
test
adc
int3
jmp
jb
loop
std
(bad)
cdq
test
and
cmp
cmp
xchg
cs
adc
jo
sub
iret
sbb
arpl
(bad)
sub
stos
jle
pushf
add
clc
sub
dec
add
(bad)
mov
mov
enter
cmp
loop
xor
sbb
test
xchg
adc
dec
pop
stos
jno
jg
pushf
cwde
sbb
imul
cmc
fstp
pushf
and
and
mov
push
sub
add
lock
movs
xor
fsubr
pop
inc
sub
mov
mov
scas
ins
jb
inc
pushf
and
popa
dec
mov
idiv
dec
gs
mov
imul
fcomp
pop
xchg
out
test
dec
std
push
jns
addr16
nop
out
jns
xlat
inc
push
sbb
lahf
popf
loopne
popa
add
cmp
fcomp
rol
shr
sub
bnd
inc
cmp
dec
in
test
movs
stos
pop
test
(bad)
jne
dec
sbb
xchg
sar
pop
push
lea
push
inc
int
jo
or
sub
xchg
into
mov
xchg
xchg
cs
jne
cmp
push
or
sbb
inc
pop
imul
stc
hlt
sbb
into
xchg
mov
push
sbb
(bad)
xchg
out
fmul
dec
das
cli
mov
adc
inc
imul
push
jae
mov
push
xor
arpl
popf
jo
dec
jecxz
jbe
popf
nop
jo
(bad)
je
mov
mov
sub
inc
loope
jp
or
mov
dec
inc
das
test
add
xor
sub
sbb
add
and
outs
lods
into
movs
icebp
test
push
or
mov
xchg
outs
inc
push
cdq
not
dec
push
or
sbb
inc
lock
in
sub
adc
and
pop
mov
out
lock
cmp
push
jg
(bad)
(bad)
and
cmp
imul
popf
call
cmps
div
es
mov
stos
mov
outs
push
push
fist
gs
add
push
sub
xchg
je
xchg
call
fnstsw
fdivr
rcr
inc
mov
scas
or
jae
shl
icebp
pop
sub
add
test
jns
sbb
cmps
dec
clc
inc
imul
(bad)
cmp
dec
ins
push
mov
arpl
adc
loope
add
ins
cmp
mov
add
jg
das
sub
sub
add
add
outs
inc
icebp
out
mov
rcr
mov
les
movs
jnp
xchg
call
sub
jge
mov
arpl
retf
int
ins
ficom
test
pop
sbb
aaa
sub
or
sahf
sbb
into
push
icebp
xor
jnp
out
(bad)
dec
xchg
shl
je
scas
cwde
addr16
(bad)
lock
outs
cs
scas
mov
cmp
xchg
test
(bad)
cmp
stos
xchg
test
mov
test
adc
inc
fs
dec
ins
aas
and
or
mov
outs
pop
cmp
mov
adc
push
xchg
mov
loopne
adc
add
imul
pop
jns
dec
sbb
pusha
xor
lea
aad
sbb
jno
in
adc
mov
push
ds
add
(bad)
adc
add
push
pop
rol
fimul
cmps
adc
js
pop
dec
retf
xor
daa
xchg
cmps
xrelease
test
mov
mov
cmp
add
push
mov
xor
enter
add
mov
xor
adc
cmp
call
test
cli
push
je
arpl
mov
js
sbb
pop
sahf
pop
int
out
inc
add
jnp
xor
out
push
xchg
push
int3
jnp
sbb
cmps
xor
outs
pop
jns
ror
fmul
or
adc
movs
push
lock
fisub
jbe
xchg
push
jg
cdq
lds
jno
out
jb
sub
fcmovnb
xlat
int
push
test
xor
ss
lods
jmp
fwait
(bad)
call
shr
ror
or
test
gs
and
push
jmp
jno
scas
sbb
loopne
push
xor
xchg
xchg
ret
cmp
call
mov
push
jp
add
ins
out
jnp
lea
not
push
xchg
lods
push
and
test
xor
arpl
fs
mov
mov
hlt
addr16
inc
retf
sti
sub
mov
push
fcom
cdq
je
pop
jo
dec
js
inc
enter
add
adc
sub
adc
je
nop
dec
mov
xor
push
cmp
dec
pop
test
fldcw
adc
cmp
sub
stos
stc
pop
mul
cld
mov
jmp
xor
or
jmp
jle
in
jno
sub
jno
clc
stos
push
cmp
adc
retf
ss
mov
push
into
jae
in
dec
jmp
jge
dec
(bad)
(bad)
xchg
pop
aad
add
or
and
sub
aam
imul
loope
mov
push
into
mov
aaa
ss
nop
add
sbb
push
into
sub
lock
adc
ja
cmc
retf
cmp
inc
add
scas
hlt
sub
dec
jae
xor
lds
repnz
pushf
call
mov
inc
pop
push
mov
jge
movaps
and
mov
lods
push
sub
out
adc
xchg
jecxz
test
jne
pop
cmp
sbb
jge
repz
inc
fadd
dec
dec
jo
mov
jecxz
mov
jle
outs
dec
daa
xlat
ss
push
jne
and
cli
push
ror
jae
mov
js
inc
ror
and
push
pop
and
fs
in
call
sbb
hlt
imul
and
push
dec
or
mov
ja
sub
push
repnz
xchg
cmps
mov
mov
mov
push
or
inc
sub
leave
jle
pop
sub
ret
out
loop
lods
test
outs
iret
bound
dec
pop
mov
mov
sti
mov
push
sub
and
int3
or
in
add
adc
lds
mov
cwde
sbb
pop
(bad)
xlat
xor
ficomp
ins
sbb
lods
retf
inc
sbb
bound
cwde
in
push
test
push
or
cmp
xor
out
or
mov
jb
cli
sub
lds
pop
das
jp
cwde
arpl
out
dec
aam
inc
inc
cmp
into
mov
push
aam
ror
dec
cdq
or
(bad)
xor
(bad)
push
nop
hlt
mov
fs
frstor
xchg
sub
fsubr
pop
xchg
inc
mov
add
or
mov
xor
out
pop
inc
clc
je
pop
dec
mov
adc
inc
pop
sbb
shr
pop
mov
mov
adc
mov
sub
mov
outs
rol
rcl
jo
shl
ror
sub
xchg
adc
pusha
pop
loop
xor
sbb
test
jne
call
push
dec
nop
xor
shl
(bad)
imul
std
mov
test
loop
add
mov
aad
ret
mov
dec
cld
call
adc
loopne
movs
push
cmps
shl
ret
add
and
xchg
mov
inc
mov
jb
jmp
mov
xchg
dec
cmp
lock
jmp
dec
jge
xor
or
cmps
dec
aaa
cmp
fsubr
scas
dec
mov
pcmpgtw
cmp
xlat
icebp
shl
or
cmp
push
or
mov
jmp
and
add
out
mov
int3
adc
adc
std
push
call
mov
retf
jno
rcr
dec
mov
(bad)
es
mov
mov
lahf
ret
stos
or
aaa
ins
xchg
movs
cmp
xor
or
xchg
pop
mov
xchg
hlt
popf
ins
loope
xchg
sbb
pop
in
ror
fwait
or
xchg
pop
scas
fdivr
hlt
inc
fdiv
in
pushf
jecxz
push
push
xchg
xor
inc
inc
stc
cdq
shr
fwait
jb
sbb
ins
adc
push
dec
mov
xor
ret
inc
xor
adc
inc
cs
xchg
retf
xor
fcom
and
push
adc
fnstsw
arpl
push
mov
ds
fisub
inc
push
xor
mov
pusha
pop
int3
in
enter
cmp
dec
jmp
sahf
adc
rol
std
adc
xlat
aam
pop
jbe
pop
sub
cld
cdq
cmp
or
push
popa
pusha
or
ins
jb
fs
cmps
test
(bad)
icebp
mov
mov
lds
imul
inc
jb
dec
push
push
daa
mov
loope
call
ins
out
(bad)
cmp
cwde
jp
sub
push
ret
bound
inc
aad
xchg
jnp
shl
clc
daa
push
inc
pop
stc
and
enter
or
jmp
xchg
ret
test
lea
sar
jo
xor
mov
stos
xchg
pushf
mov
and
call
call
add
imul
in
mov
shr
repz
xchg
mov
jmp
fist
retf
add
jbe
dec
pop
sbb
jp
push
into
jmp
dec
hlt
ins
dec
jae
stc
mov
and
or
jnp
and
fimul
jae
mov
icebp
das
lds
lods
in
mov
fwait
neg
sub
push
pop
and
mov
std
and
sbb
mov
cmp
sar
pop
les
xchg
sbb
and
push
les
mov
repz
fstp
dec
push
ins
std
or
inc
dec
jbe
retf
push
pop
out
movs
add
je
cmp
sub
dec
pop
dec
cwde
lods
idiv
jge
sar
outs
add
jae
xlat
jle
pop
inc
test
inc
jecxz
movs
repz
stos
xchg
outs
add
sub
xor
mov
xor
out
(bad)
ret
fnstcw
mov
jmp
in
mov
mov
adc
xor
fcmovbe
(bad)
push
into
or
clc
std
pop
mov
sbb
jg
cmp
push
jp
sbb
movs
jnp
into
test
daa
jo
out
les
pop
lods
xor
xchg
data16
sub
shl
mov
inc
lods
pop
mov
mov
mov
cmp
leave
sbb
gs
adc
sub
sbb
xor
push
lds
inc
arpl
icebp
xchg
sbb
fild
inc
fwait
lock
mov
repz
aam
inc
inc
loop
in
(bad)
sub
retf
fwait
cmp
ror
xchg
out
jecxz
push
clc
loope
or
lahf
ror
pop
cmp
lea
(bad)
stos
fwait
cli
lock
sbb
shl
jns
xchg
or
mov
shr
jo
hlt
adc
add
scas
inc
push
stos
push
xlat
jnp
test
or
mov
ret
pop
jns
aad
rcl
outs
outs
cmp
jle
aad
vmwrite
or
pop
dec
pusha
inc
add
ror
cmp
and
dec
pusha
pusha
stos
fst
xchg
dec
pop
jnp
dec
dec
xchg
cmp
fist
daa
fwait
cmp
xor
icebp
(bad)
jmp
shl
movs
mov
ins
fcomp
pop
ror
and
and
and
mov
jo
add
jnp
add
jno
push
mov
inc
mov
sub
cdq
add
std
jb
sub
test
mov
inc
sub
lahf
cmc
mov
sub
mov
fidiv
mov
loope
mov
jp
add
in
jb
or
mov
sbb
inc
and
sahf
retf
test
pop
sbb
mov
jns
push
frstor
and
test
lods
jb
rol
inc
xchg
(bad)
sbb
pop
icebp
sub
enter
xlat
push
(bad)
push
call
std
pusha
leave
cdq
retf
(bad)
jmp
add
loop
ja
xor
mov
pop
inc
mov
outs
ja
xchg
or
xor
push
ret
jl
xor
inc
jle
mov
dec
mov
push
dec
shl
or
xor
test
call
in
and
xor
cmp
bound
push
xor
stc
xor
loopne
or
mov
xchg
(bad)
or
pop
dec
call
aaa
mov
loope
xchg
cmps
inc
adc
xor
outs
fist
and
mov
out
dec
lods
cdq
(bad)
aad
aam
stos
inc
mov
daa
xchg
mov
pop
cwde
(bad)
jmp
stc
dec
sahf
es
repnz
sbb
mov
or
imul
inc
adc
or
push
mov
loope
cdq
mov
cld
and
loopne
shl
lea
sahf
add
jo
inc
or
(bad)
scas
jne
pusha
inc
cmp
push
xchg
xor
dec
jb
repnz
inc
aam
push
jecxz
or
pusha
es
xchg
mov
loope
add
jl
mov
jg
pop
mov
into
inc
lods
rcl
mov
xchg
mov
(bad)
cmp
mov
xchg
xchg
imul
sub
aas
repnz
pop
pop
jbe
push
loope
mov
add
mov
fs
jle
jg
rep
or
adc
add
push
xchg
push
adc
inc
idiv
and
int
jno
jl
aad
mov
fst
out
int3
lea
mov
or
sbb
cwde
out
and
repnz
pop
imul
sbb
xchg
std
sbb
(bad)
sbb
sbb
cmp
rcl
mov
xor
arpl
pusha
jo
dec
mov
add
cmp
inc
jge
hlt
shl
jns
dec
retf
ficomp
jo
jnp
mov
mov
pop
movs
or
hlt
cmp
hlt
dec
jno
loope
xchg
loope
loop
dec
daa
js
out
jae
sbb
(bad)
push
cmps
out
mov
push
addr16
dec
shl
mov
mov
int3
ret
xchg
inc
sahf
out
vaddps
outs
scas
adc
add
mov
mov
jmp
in
popf
pop
stc
pop
ret
jne
in
inc
add
pop
pop
add
or
bound
cmp
mov
push
cs
cli
arpl
jmp
inc
mov
inc
jae
or
fimul
dec
mov
je
call
sahf
or
or
push
sbb
add
lds
sub
ror
jl
jb
jmp
call
xor
dec
shl
les
(bad)
fcom
xchg
and
xchg
mov
dec
jmp
push
mov
and
fsub
nop
cmc
jge
pop
push
cmp
repz
stos
shr
add
adc
gs
pop
or
cmp
mov
push
mov
fcmovnbe
in
push
mov
ins
test
mov
mov
pop
clc
aaa
repnz
xchg
push
arpl
mov
add
cmc
call
repz
jp
cmp
cmp
lahf
stos
mov
out
push
fnstcw
dec
sbb
shl
jno
ds
popf
push
into
mov
fcom
add
test
in
push
or
sbb
sub
inc
mov
inc
fimul
add
or
xchg
test
cmp
cmps
mov
push
neg
xor
jbe
dec
popa
xchg
movs
enter
inc
repz
mov
test
mov
out
add
arpl
(bad)
mov
mov
xor
(bad)
ret
pop
xchg
dec
xlat
push
movs
push
shr
jp
sub
push
dec
inc
out
mov
jmp
inc
retf
(bad)
ffreep
jecxz
lahf
stos
jmp
push
dec
push
inc
mov
test
je
or
pop
inc
imul
inc
fisttp
sahf
icebp
and
bound
push
nop
aas
test
or
(bad)
int3
xchg
sub
emms
mov
in
push
aas
dec
and
rol
loop
in
mov
popa
lods
gs
push
sub
int
outs
cmc
call
sbb
dec
sahf
sbb
out
cs
and
jmp
xor
loop
leave
mov
leave
inc
or
add
cdq
je
nop
imul
out
or
mov
icebp
pop
stos
fidivr
(bad)
test
adc
(bad)
sar
dec
cmp
fimul
icebp
enter
inc
bound
je
or
ret
xlat
sar
ja
or
and
jne
pop
sub
cmp
push
push
dec
(bad)
and
xchg
pusha
sub
jmp
and
push
xchg
enter
pop
cmp
push
test
cmp
icebp
fnstsw
cld
ins
mov
daa
cs
xor
(bad)
cmp
cli
mov
push
xchg
sub
jle
mov
pop
xchg
in
sub
mov
movs
sub
test
rcl
lds
hlt
add
inc
mov
fsub
xchg
sub
aaa
or
stos
add
mov
rol
or
scas
in
inc
lea
mov
or
xor
test
mov
jle
jge
leave
sub
sbb
push
fst
pop
jb
pop
adc
fwait
or
cs
xchg
ds
scas
cli
stos
add
push
cmp
arpl
mov
mov
xchg
or
lods
push
out
and
ds
push
outs
jmp
outs
icebp
jg
push
div
mov
cmp
xor
mov
jo
xor
ror
sbb
adc
cmc
jbe
xchg
xchg
inc
push
sbb
push
xor
sbb
popf
(bad)
into
cmps
adc
ror
mov
lock
mov
add
mov
outs
sub
aas
cmps
lods
or
dec
dec
pushf
inc
sbb
jp
push
and
out
xlat
xchg
cmps
push
add
je
loopne
xor
push
push
repnz
xchg
shr
leave
imul
inc
out
sbb
pusha
ins
jp
sub
or
stos
idiv
jne
ficom
sahf
or
sbb
aad
sub
out
cmps
rcl
adc
in
repz
and
or
loopne
xor
cmp
cmps
add
bound
jmp
push
jecxz
repz
xchg
sahf
aam
repnz
add
mov
lods
stos
into
mov
and
mov
mov
stos
mov
bound
add
and
jmp
std
das
or
jae
and
scas
out
lea
jbe
cmp
inc
jge
aad
and
test
push
clc
es
shl
xchg
in
add
int
jno
add
int3
add
in
int3
mov
sbb
inc
xchg
or
or
mov
jb
ja
(bad)
cli
ret
enter
pop
adc
mov
push
pop
mov
out
mov
hlt
xor
fild
push
ret
call
mov
or
or
dec
daa
sbb
cld
enter
pop
lahf
icebp
xor
in
fadd
xchg
push
icebp
nop
dec
pushf
jbe
xchg
or
stos
sbb
retf
sub
std
into
mov
scas
and
bound
xchg
jno
movs
repnz
lods
fdiv
outs
jbe
and
xor
mov
cmps
cmc
xor
xchg
push
cwde
pop
sbb
addr16
stos
adc
sub
sbb
xchg
retf
into
fst
stc
addr16
pop
(bad)
jp
xor
repnz
inc
inc
xchg
and
in
repz
xchg
fsubr
test
cmp
std
jo
fld
inc
push
mov
jl
ins
ror
fbld
pop
daa
imul
shr
and
jbe
aaa
sahf
sbb
and
call
jge
mov
push
xchg
rol
mov
dec
push
call
pop
or
push
pop
pop
cmp
xor
jnp
mov
(bad)
(bad)
hlt
cs
hlt
mov
fwait
xor
bt
dec
mov
add
cs
ds
xchg
xor
neg
in
dec
outs
cmp
xlat
pop
xlat
arpl
pushf
arpl
push
iret
(bad)
arpl
mov
cmp
test
jp
xor
rcr
jo
or
mov
lock
pusha
sub
or
pop
sub
mov
cmp
add
std
mov
jmp
cmc
jecxz
mov
xchg
mov
(bad)
dec
and
inc
sbb
mov
inc
jb
pusha
push
adc
shl
sub
xor
aam
imul
inc
test
data16
fs
loopne
pushf
loop
mov
sub
mov
and
pop
or
or
addr16
cmps
dec
cmp
push
(bad)
ins
and
ins
jno
xchg
mov
hlt
mov
in
adc
inc
clc
push
jge
mov
pop
pop
mov
fisttp
jno
add
sub
add
ret
jmp
(bad)
imul
adc
add
jo
fmul
retf
xor
repz
push
cmp
cmp
xchg
dec
ret
pop
dec
push
stos
jb
xchg
stc
mov
ja
(bad)
sub
fsubr
jge
loop
add
add
adc
xor
imul
in
cmps
fwait
mov
fsub
cmp
and
shr
sbb
push
(bad)
rol
gs
(bad)
mov
out
imul
xor
adc
and
cmp
imul
ret
push
push
jg
dec
test
enter
xchg
mov
jge
pop
inc
pop
cdq
jmp
es
pushf
jle
into
cmp
(bad)
pop
xor
clc
and
ss
ins
movs
mov
inc
aaa
pop
cld
jle
mov
into
dec
mov
movs
retf
inc
cmp
nop
addr16
mov
adc
and
sub
imul
cwde
mov
clc
or
xchg
mov
xor
shr
pop
add
jmp
rcl
(bad)
dec
xor
das
popf
retf
(bad)
fcomp
gs
or
or
in
lea
cdq
dec
jmp
outs
adc
div
mov
and
(bad)
pop
out
sbb
xchg
jp
or
pop
mov
sub
jecxz
mov
cwde
test
or
xchg
xchg
test
lods
addr16
xchg
aad
jmp
ds
repz
gs
mov
sub
mov
sub
fimul
inc
jl
inc
loope
cmps
lods
test
shl
test
adc
nop
jecxz
pop
mov
lahf
js
dec
push
ja
ret
inc
xchg
ins
pop
and
je
out
push
lea
test
(bad)
(bad)
fnstcw
adc
push
stos
fld
(bad)
dec
lahf
jne
add
(bad)
pop
xlat
adc
test
or
mov
ss
push
jmp
xchg
gs
js
das
or
ja
cwde
add
jne
clc
sub
sbb
and
cmp
pop
and
push
add
push
mov
dec
mov
lds
pushf
sub
pop
dec
movs
inc
push
out
scas
jmp
mov
xchg
sub
dec
sub
jle
movs
movs
pop
scas
pop
aam
mov
mov
mov
retf
cmps
add
fsub
mov
jle
xchg
mov
(bad)
call
int
cs
shr
ret
add
inc
inc
repnz
ss
dec
outs
cmp
ret
hlt
jns
cmc
xchg
sar
adc
leave
or
adc
repz
shr
lds
outs
mul
jae
ficom
mov
std
test
jbe
mov
push
je
jne
call
and
clc
lea
cmp
push
pushf
int
mov
pop
out
cmps
(bad)
xor
loope
push
mov
sbb
ins
lods
cli
(bad)
popa
push
add
retf
popa
sbb
mov
aad
sbb
push
xchg
add
ret
sbb
lea
imul
ins
dec
xor
xor
loope
xor
icebp
mov
adc
stos
rcl
jle
xchg
mov
lods
fadd
loop
cmp
adc
adc
test
out
aad
pushf
test
aam
cmc
adc
xchg
xchg
jnp
leave
pop
sbb
mul
shr
pop
jb
scas
ficomp
loopne
std
xor
push
sahf
adc
cmp
pusha
lea
mov
ret
neg
sbb
pop
or
dec
mov
ins
push
pop
test
nop
stc
add
add
mov
mov
in
jmp
movs
popa
clc
mov
test
inc
(bad)
sub
adc
loopne
aam
mov
mov
rcr
in
dec
mov
sub
scas
mov
pop
call
ss
mov
jmp
icebp
cmps
add
sbb
sahf
(bad)
int
enter
ja
jge
in
outs
aas
sbb
or
pop
push
(bad)
xchg
push
mov
add
addr16
add
xchg
mov
xchg
inc
sbb
js
aad
pop
xchg
fisub
push
dec
mov
push
mov
shl
in
stos
dec
pusha
cmps
xor
cmp
jae
push
mov
ret
xchg
not
or
mov
lea
test
jecxz
imul
mov
jae
aaa
mov
xor
push
in
jns
jp
xlat
out
ss
and
add
add
fild
outs
cmp
sbb
push
bound
lahf
jge
inc
sbb
test
xor
mov
sub
mov
retf
dec
hlt
leave
add
pop
ror
and
adc
test
xor
jnp
out
pusha
lea
add
fwait
mov
xchg
loope
in
xor
mov
popf
je
mov
xor
adc
xlat
out
add
pcmpgtd
jo
dec
or
mov
xchg
call
in
sub
rcl
ret
movs
int
arpl
jne
fist
arpl
push
jns
es
inc
xor
outs
je
pop
fsubr
pop
cdq
adc
jecxz
sbb
jbe
mov
mov
movs
sbb
leave
ds
and
(bad)
fisub
xchg
mov
cmp
in
sbb
int
jg
stos
arpl
mov
(bad)
in
cmp
xchg
jae
inc
arpl
dec
je
xchg
inc
xchg
addr16
shr
sar
xlat
and
sbb
lds
bound
inc
cwde
out
mul
or
inc
mov
inc
data16
mov
sub
adc
push
adc
test
cmc
xchg
jnp
mov
movs
fiadd
and
xor
sub
out
cmps
jns
or
retf
loop
mov
ja
lods
lods
shr
pop
or
xchg
inc
jns
inc
(bad)
scas
mov
pop
mov
jo
xchg
dec
not
cmp
stc
fidiv
dec
sub
outs
sub
popa
movs
cmp
sbb
adc
sbb
pusha
cmp
dec
cmp
cwde
fistp
sbb
dec
shl
pop
xchg
nop
loope
pop
mov
shl
in
(bad)
iret
xchg
jge
jl
push
xor
cmp
push
xchg
daa
sbb
test
xchg
(bad)
std
pop
mov
test
in
add
inc
test
and
ret
es
or
stc
inc
fsub
xchg
mov
xor
aam
in
ja
pop
lds
mov
rcl
inc
mov
dec
test
addr16
pusha
push
and
pop
xchg
clc
dec
es
iret
sbb
in
and
xchg
pusha
add
pop
bound
aaa
cs
in
dec
add
or
xchg
les
xchg
ror
or
xchg
popf
jne
and
iret
mov
pusha
test
xor
sbb
mov
inc
xor
pusha
adc
sbb
inc
cmp
or
or
(bad)
aad
test
and
movs
mov
pushf
dec
hlt
pop
lods
jne
mov
dec
dec
push
cwde
jmp
jne
mov
lods
sub
mov
movs
adc
pop
adc
out
mov
inc
sti
inc
rcr
pop
jmp
(bad)
repnz
inc
push
retf
jecxz
dec
push
push
fnstenv
aaa
mov
mov
mov
pop
sub
adc
hlt
mov
mov
xchg
jmp
fld
sbb
out
push
gs
call
data16
push
xchg
iret
imul
cmp
or
dec
inc
sub
std
pop
int3
push
inc
pop
cdq
imul
or
ja
and
nop
movlps
mov
ja
and
and
push
mov
imul
je
pop
popf
add
or
test
int3
frndint
ds
(bad)
mov
sbb
sub
test
(bad)
push
ret
jmp
mov
push
fist
icebp
repnz
sub
psrad
ja
in
pusha
mov
inc
sub
xchg
in
dec
lea
mov
push
jp
jns
scas
inc
not
fisttp
mov
movs
dec
ret
push
loopne
dec
fcmovnb
add
movs
pop
inc
repz
lea
sub
enter
cmp
mov
inc
pusha
mov
mov
loopne
ret
cmp
leave
mov
out
in
stos
pop
mov
jp
hlt
adc
sbb
push
fnstsw
inc
in
ds
sahf
add
js
shl
mov
pop
outs
dec
sub
pop
rol
movs
movs
mov
sbb
fsubr
dec
sub
mov
rcl
int
in
fist
or
daa
aaa
pop
test
cdq
pop
aaa
cmp
call
xchg
shr
mov
sbb
out
in
cmps
sahf
push
inc
xor
xchg
xchg
mov
mov
and
and
and
push
add
xor
out
movs
adc
fcmove
or
and
icebp
cmp
xchg
rol
dec
mov
outs
inc
(bad)
leave
les
xchg
pop
test
xchg
(bad)
dec
in
pop
jmp
imul
xor
js
stos
cmp
mov
xchg
imul
iret
mov
xchg
ficomp
cwde
dec
sbb
test
mov
aaa
push
adc
ins
outs
cwde
(bad)
fstp
sti
push
dec
inc
scas
int
and
cmp
xchg
push
frstor
and
into
jge
adc
loope
ins
retf
lea
fst
imul
and
mov
std
xor
jnp
pop
push
lds
ret
push
add
fistp
mul
(bad)
cmps
test
jl
stc
xlat
xchg
cs
test
ins
mov
jmp
jmp
mov
sub
add
in
pop
ret
lahf
mov
push
xor
add
push
repnz
or
popa
mov
xor
and
mul
cld
adc
or
and
ret
xor
push
or
in
(bad)
imul
push
cmp
push
cmp
shl
add
sub
call
pop
shr
pop
or
mov
mov
inc
mov
mov
mov
movs
dec
jge
push
add
nop
or
add
outs
jae
mov
push
and
jne
arpl
std
mov
rol
push
inc
push
sub
push
xchg
pop
cmp
vcvttpd2dq
sbb
inc
idiv
cmp
push
cmp
sub
jno
adc
mov
enter
fild
add
in
or
push
sbb
and
sbb
or
loope
inc
aam
jg
mov
leave
adc
sbb
mov
or
in
mov
and
push
ins
cmp
retf
and
call
sahf
sub
adc
cvtps2pi
and
fs
cmc
sub
mov
fistp
mov
scas
arpl
sti
test
push
adc
lea
mov
cmp
xor
xchg
das
inc
xchg
dec
adc
das
sar
sar
cmp
xlat
ret
div
push
and
repnz
js
mov
ja
inc
pop
arpl
ins
das
mov
iret
jecxz
lods
test
push
(bad)
xor
jno
xor
xchg
cmp
mov
cld
stos
fldcw
aam
jo
faddp
fs
das
out
jl
mov
xchg
lods
inc
add
scas
call
jno
das
popf
inc
push
jmp
mov
and
adc
stos
movs
mov
jne
mov
fild
das
adc
scas
pop
mov
and
mov
dec
jmp
sub
rol
mov
movs
sub
std
sub
test
out
mov
arpl
repz
scas
pop
pusha
xor
sti
nop
push
(bad)
fsubr
inc
mov
sub
fild
lock
sar
test
push
mov
sbb
xor
(bad)
sub
bound
test
lahf
aas
mov
pop
(bad)
cmps
jo
lea
mov
jnp
fcmovnb
pusha
iret
les
pop
outs
das
mov
ret
nop
add
pop
and
jns
test
xchg
jmp
cmp
shr
data16
add
jnp
dec
and
or
fisub
pop
push
push
scas
std
push
add
dec
inc
mov
daa
mov
mov
jecxz
push
aaa
in
mov
add
and
dec
add
sbb
sbb
push
inc
jbe
aam
dec
int3
xor
call
dec
stos
pop
jo
movs
pop
add
inc
sbb
and
push
div
xor
jp
retf
mov
test
loopne
jmp
push
jmp
in
nop
jl
je
push
jnp
jno
(bad)
cdq
imul
stos
sbb
leave
inc
jmp
scas
out
inc
xor
push
jmp
in
fs
movs
ror
jg
adc
ret
clc
xchg
(bad)
mov
stos
cmps
sbb
(bad)
cbw
xlat
clc
inc
mov
fisub
xchg
mov
dec
jo
lock
mov
(bad)
dec
sbb
mov
stos
pop
push
in
arpl
cmp
sub
popa
push
or
xchg
push
xchg
inc
push
push
iret
or
pop
dec
jmp
mov
lds
aad
(bad)
dec
sub
test
mov
and
sub
hlt
call
cld
jns
mov
push
ja
or
push
retf
xchg
test
shl
mov
push
xchg
dec
mul
adc
adc
inc
cs
call
retf
xor
inc
(bad)
xchg
or
js
test
pushf
inc
ret
and
fadd
push
mov
jno
fwait
gs
and
xchg
sub
out
loop
cwde
out
mov
push
dec
pusha
scas
lds
cwde
adc
push
sbb
out
cmps
or
icebp
cmps
jno
les
sbb
rol
pop
add
hlt
into
sub
inc
ds
cld
aaa
sbb
adc
jge
push
or
push
inc
mov
mov
inc
bound
xor
idiv
(bad)
jl
inc
xchg
pop
sti
shl
or
mov
jl
or
sub
lods
test
loop
aam
nop
jne
and
shl
sub
push
xchg
or
cli
dec
lods
rcl
stos
push
mov
fld
dec
shr
cmp
daa
and
mov
lods
xchg
out
(bad)
push
mov
shl
stos
adc
push
(bad)
scas
pusha
sbb
std
cmp
sbb
cmp
pusha
and
shl
test
int
inc
int
mov
xor
(bad)
pop
mov
mov
mov
sub
mov
and
das
(bad)
ins
sub
(bad)
xor
mov
push
stc
mov
cmps
xchg
int
cmps
inc
sub
(bad)
push
ins
hlt
(bad)
mov
push
aaa
pop
lods
(bad)
(bad)
push
gs
pop
repnz
repz
adc
push
je
sbb
fisttp
test
push
sbb
punpcklwd
push
(bad)
xor
(bad)
xor
cli
cmps
add
adc
xchg
cmp
test
es
imul
call
push
in
rcl
mov
stos
sub
cmp
or
push
js
cld
sub
popf
and
(bad)
lock
inc
cmp
mov
popa
cmp
adc
retf
jnp
pop
mov
outs
pop
mov
dec
pop
jp
mov
pushf
sahf
les
mov
cld
test
inc
int3
call
out
mov
push
and
cmp
pusha
sbb
les
aad
int
outs
in
into
adc
call
add
pop
push
or
out
push
into
je
jg
adc
mov
(bad)
aas
xchg
rcl
js
mov
inc
xchg
jb
iret
idiv
and
cmp
adc
les
dec
and
lods
adc
stos
and
lods
add
mov
inc
add
sub
pop
xor
jge
and
retf
push
pop
ss
retf
int3
movs
es
xchg
fld
movs
and
adc
ins
mul
dec
xchg
and
fbld
mov
int3
jo
and
xchg
inc
cwde
imul
repz
test
mov
pop
push
jbe
repz
xor
fdiv
adc
xor
pop
and
test
sub
out
cli
sar
cmp
jb
shl
dec
xchg
aas
fcom
(bad)
push
and
jno
mov
iret
inc
movs
jae
mov
pushf
jbe
pop
dec
addr16
jl
xchg
inc
xor
push
rcr
loopne
rol
jp
call
aad
push
push
adc
and
scas
dec
jge
jge
ret
push
pop
xor
stc
mov
sahf
mov
mov
sbb
mov
gs
sbb
or
cmc
mov
cmp
mov
nop
repz
rol
into
sub
or
addr16
rep
mov
dec
sub
dec
add
stos
adc
mov
imul
div
loope
pop
test
fistp
ret
add
mov
xchg
jbe
inc
push
mov
fucomip
mov
cmc
add
or
or
fwait
enter
push
cmp
mov
lods
cmp
cli
outs
(bad)
jo
cwde
in
mov
test
in
retf
mov
dec
mov
repz
test
sub
xchg
dec
cli
inc
imul
enter
fwait
jae
dec
inc
ret
xchg
xchg
adc
cmp
outs
dec
push
fist
xchg
das
push
test
mov
scas
nop
pop
add
test
mov
ret
pop
hlt
fidivr
xor
sbb
xor
jg
int3
add
cmp
add
xor
pop
cmp
adc
jne
imul
inc
les
lea
fsubrp
jnp
mul
jno
xchg
out
pop
push
or
fucomi
add
xor
ficomp
cdq
fcomp
ffreep
jno
pushf
movs
pop
sahf
adc
adc
mov
add
sbb
dec
adc
cs
pushf
xor
jmp
mov
pop
mov
jno
jge
icebp
bound
pop
in
ja
mov
lahf
xor
jle
loope
lahf
add
aad
mov
bnd
in
dec
in
inc
push
lahf
add
inc
jg
fistp
fisubr
cmps
sub
sbb
gs
mov
jmp
mov
lahf
ins
idiv
sbb
popf
sub
inc
mov
out
dec
and
ja
outs
mov
mov
or
sbb
ss
lahf
(bad)
bound
std
jecxz
mov
aaa
push
mov
push
scas
enter
mul
mov
push
test
bound
or
in
dec
sahf
mov
in
sub
in
inc
ins
push
cli
scas
mov
scas
xchg
dec
pusha
push
xchg
mov
mov
cvttps2pi
add
and
or
and
sub
xchg
mov
inc
in
inc
or
mov
gs
mov
xchg
push
sub
(bad)
and
push
mov
jmp
xchg
sbb
sahf
pusha
xchg
inc
xchg
pop
fisub
stos
adc
shl
sub
mov
xchg
jbe
movs
xor
xor
jae
mov
dec
pop
pusha
sti
fcom
fsubr
jmp
fs
fld
jo
dec
jno
aas
lods
out
push
jno
fist
inc
jge
jnp
fsubr
ds
fisttp
in
(bad)
aas
dec
aam
and
cli
lock
pop
mov
outs
call
pop
pop
adc
xchg
dec
push
pushf
pop
pop
or
mov
fisub
sahf
cmp
jmp
add
(bad)
bound
mov
mov
xchg
les
or
mov
cmp
lahf
push
movs
jae
jne
not
push
in
xor
daa
iret
je
in
or
push
ins
fcomp
pop
inc
aam
xchg
div
xor
cmp
ins
xor
xlat
mov
jmp
(bad)
sub
fadd
imul
push
sub
jmp
cmp
leave
mov
aam
cs
jo
stos
imul
cs
ds
popa
pop
jmp
xor
neg
test
in
jae
lods
cmc
cwde
enter
scas
adc
pop
dec
and
mov
sti
imul
and
repnz
bound
pop
mov
sub
ds
sub
out
loope
aaa
push
fwait
repz
dec
ins
out
dec
adc
xor
sbb
test
and
or
adc
sar
xchg
dec
mov
(bad)
scas
scas
ins
xchg
repz
in
jecxz
popa
enter
mov
idiv
jmp
sbb
mov
jge
or
sti
outs
xchg
add
adc
mov
sub
jmp
popa
cmps
mov
cmp
fiadd
jl
xchg
mov
and
ret
ds
adc
out
cs
imul
aas
fidiv
imul
outs
push
cld
imul
sbb
not
sub
jge
jge
pop
call
mov
mov
in
ret
push
jb
arpl
icebp
sbb
jecxz
pop
cwde
and
(bad)
mov
retf
fbld
cmc
loope
adc
mov
cmc
(bad)
mov
add
shr
ins
ins
pop
push
sub
push
out
sub
dec
push
test
je
mov
scas
jecxz
push
mov
imul
ror
xor
pop
mov
jecxz
jo
cld
adc
or
pop
jecxz
aas
inc
push
gs
push
(bad)
xchg
lods
imul
push
and
lea
cmp
push
xchg
je
neg
or
leave
jl
ret
ror
cmp
and
stos
xlat
aaa
xchg
push
ds
addr16
ss
mov
dec
fst
dec
fs
pop
rsm
in
xor
mov
sbb
or
dec
movs
adc
(bad)
push
shl
mov
add
mov
std
sub
inc
inc
jle
test
aaa
les
jecxz
jl
(bad)
xor
ja
jle
xchg
fcom
int
mov
pop
inc
sub
sbb
cmps
mov
add
retf
enter
scas
ins
std
cmp
dec
push
(bad)
push
sub
aaa
stos
or
dec
inc
gs
mov
jmp
cmp
arpl
push
rcl
les
and
mov
mov
sbb
xor
push
ins
ret
out
push
cmp
enter
cli
or
gs
adc
cwde
dec
jae
(bad)
mov
and
mov
(bad)
icebp
and
popf
mov
xor
mov
xchg
(bad)
dec
je
imul
adc
out
dec
xchg
call
loop
fcom
movs
xchg
push
xor
pop
cmps
hlt
ror
scas
or
push
aam
or
movs
imul
iret
push
pop
fld
push
xchg
ss
sbb
call
or
and
mov
or
enter
lahf
test
sbb
enter
cli
cld
mov
push
pop
xor
fisub
sub
pop
das
imul
rcl
dec
mov
pop
mov
rcr
fcom
rol
pop
jecxz
add
(bad)
mov
dec
(bad)
fadd
push
push
retf
mov
adc
out
jmp
pop
dec
push
inc
fdiv
fstp
mov
or
stos
pop
jb
xchg
mov
(bad)
pop
mov
imul
xchg
cmp
mov
xor
ret
xchg
(bad)
(bad)
int3
mov
(bad)
ror
mov
jmp
ja
mov
int
mov
imul
fidivr
pop
dec
jne
pop
add
rcr
movs
aaa
xchg
(bad)
cmp
dec
sub
push
inc
in
fwait
loopne
ins
sub
jge
pop
xor
add
sbb
in
leave
push
mov
daa
ss
jbe
ds
in
xchg
add
jbe
add
(bad)
push
jno
int
push
jne
cs
pop
loope
push
(bad)
push
(bad)
xchg
cmp
xlat
jge
sbb
shl
les
or
xchg
dec
mov
xchg
dec
in
mov
jl
xchg
or
ja
sti
int
sub
pushf
es
push
jmp
cmp
call
out
or
fisttp
std
ins
push
add
cmps
lds
push
outs
popf
dec
or
jae
jbe
xchg
push
cld
loop
cmc
mov
sub
(bad)
sti
mov
jecxz
mov
ret
iret
push
dec
test
xchg
inc
lds
aad
sub
add
ficomp
jmp
sub
cmps
jno
dec
mov
ret
and
(bad)
dec
xchg
pop
inc
jp
push
mov
ja
and
xchg
loopne
rcr
cmps
je
outs
or
dec
stos
and
dec
mov
mov
inc
aad
mov
jmp
out
xchg
rol
adc
jbe
pop
cmp
mov
adc
cmp
nop
in
pop
cwde
stos
add
xchg
das
xchg
cmp
(bad)
arpl
dec
mov
xor
jnp
pop
retf
jl
retf
lea
inc
ror
fdivr
repnz
test
lahf
call
lds
test
fwait
jecxz
pop
adc
ds
out
je
imul
inc
inc
daa
(bad)
sar
(bad)
push
into
in
sub
ror
jo
push
ins
neg
fcmovu
sbb
mov
pop
leave
stos
fsub
or
cmps
call
pop
and
push
shr
aas
mov
xor
js
adc
sbb
dec
dec
jg
mov
scas
mov
shl
imul
push
and
mov
lds
fist
xor
jae
xor
ror
call
dec
ret
cmp
push
sar
mov
in
jne
push
cld
inc
fdiv
pop
js
xor
ds
dec
lahf
test
jge
jmp
scas
mov
and
loop
xor
mov
cld
push
fwait
sbb
and
dec
mov
adc
mov
daa
adc
and
das
(bad)
in
rcr
and
mov
push
add
or
pop
es
int3
xchg
(bad)
into
in
and
call
jmp
push
add
in
mov
push
xor
add
push
inc
mov
xor
xor
or
imul
lds
retf
retf
clc
mov
sahf
iret
push
icebp
lock
push
or
or
adc
xor
jl
lahf
add
inc
mov
inc
or
or
xor
mov
and
lea
xor
stos
cs
sub
inc
pop
ror
sub
dec
scas
xor
mov
ret
add
jo
jmp
xchg
call
retf
fmul
cmp
cmp
cmps
jae
dec
mov
aam
(bad)
jnp
push
push
jp
jno
test
jo
push
sbb
sbb
sahf
jne
jns
mov
in
sar
cmps
loopne
cvtps2pi
add
(bad)
frstor
mov
imul
push
push
(bad)
les
xchg
sub
or
add
retf
jne
je
pusha
push
in
sbb
xlat
cmp
stos
retf
mov
cdq
sub
loopne
movs
mov
out
pop
rcl
sub
push
aad
xor
cmp
movs
outs
adc
pop
pop
pusha
test
jb
mov
sbb
adc
xchg
mov
cwde
gs
sbb
cmps
jmp
push
jecxz
into
mov
pop
xbegin
adc
inc
mov
ds
xchg
xchg
and
pop
mov
sahf
cdq
test
pop
sub
lea
push
and
or
or
jg
(bad)
hlt
push
adc
call
lock
sub
push
push
lock
leave
repnz
adc
sti
xor
mov
mov
data16
inc
out
xor
std
fiadd
xchg
mov
add
std
lahf
outs
rcl
add
inc
mov
sbb
push
fisttp
dec
jns
or
pushf
cmp
add
je
out
into
mov
dec
(bad)
es
or
sti
stc
(bad)
push
nop
jne
ins
les
jmp
xchg
adc
mov
loop
push
fdivr
movs
scas
and
or
xchg
push
sar
inc
pop
sbb
js
push
shr
pop
mov
xchg
bnd
jns
cmc
mov
fadd
mov
jno
std
lods
arpl
fdivrp
sub
pop
shl
pop
xor
fadd
xor
xor
test
(bad)
daa
ret
rcr
mov
jnp
not
xor
loope
fcmovu
push
xchg
adc
jmp
ss
outs
cli
mov
movs
nop
xchg
pop
or
dec
push
aam
jle
pop
call
ins
ficomp
add
cmp
mov
adc
in
push
push
add
fwait
cli
ds
(bad)
ja
int3
pop
cmp
push
movq
or
stos
jo
clc
fstp
jmp
cmc
dec
call
ins
sbb
xlat
mov
sub
xchg
jge
scas
pop
push
pop
mov
pop
xor
sahf
leave
stc
stos
xor
into
sbb
pop
(bad)
loop
es
shl
mov
pop
mov
sbb
and
sub
mov
jmp
jns
ss
icebp
fstp
xchg
jecxz
stos
ret
cmps
jo
mov
jg
stos
cs
repnz
inc
std
test
sbb
push
dec
iret
test
out
(bad)
jmp
adc
iret
jge
out
sbb
and
xor
xchg
jns
data16
(bad)
fnstsw
ror
das
adc
(bad)
xchg
outs
(bad)
scas
inc
ret
imul
das
loope
add
(bad)
movs
sbb
sub
ffree
mov
mov
hlt
scas
fwait
jp
mov
lods
movs
fs
rcl
(bad)
push
out
movs
or
fdiv
pusha
mov
(bad)
jl
add
inc
jb
xchg
inc
repnz
je
mov
jb
pop
or
nop
clc
sub
pop
clc
lea
les
aaa
sbb
xor
stc
add
push
sbb
sbb
hlt
mov
or
push
(bad)
jmp
rcl
mov
or
mov
and
fild
fild
das
cmp
push
mov
pushf
cmps
dec
pop
outs
jne
test
(bad)
enter
mov
push
sub
ja
clc
rcl
aas
and
movs
out
xor
cs
jo
nop
mov
adc
(bad)
out
ins
sub
popf
pop
sar
jb
or
mov
lods
dec
push
or
ret
fisubr
sbb
xchg
std
fdivr
xor
dec
mov
jno
iret
lea
movs
cld
push
cdq
jno
xor
pop
mov
sti
pop
or
dec
add
in
jp
mov
loopne
fldcw
dec
and
(bad)
add
loopne
cmp
push
dec
and
dec
or
lea
mov
out
sbb
fidiv
scas
in
ret
aad
add
sbb
cmp
(bad)
sub
adc
retf
leave
lock
mov
cmp
aad
int
test
pop
sub
aam
adc
(bad)
fucomp
jl
out
stos
adc
mov
iret
adc
mov
or
mov
(bad)
popa
int
push
jbe
add
push
adc
mov
lahf
call
mov
int
imul
sub
mov
cmc
fsub
pop
mov
(bad)
xor
mov
addr16
clc
dec
or
jecxz
(bad)
cli
inc
js
lahf
jmp
push
enter
mov
jecxz
shl
jo
enter
es
pop
adc
iret
pusha
jp
inc
push
push
hlt
dec
in
mov
mov
xor
ins
and
lahf
test
fiadd
movs
jle
mov
out
jmp
(bad)
sub
sti
push
pop
xor
inc
add
mov
xchg
xchg
fstp
popf
inc
in
hlt
sar
mov
call
fisubr
movs
sub
cld
ret
fld
mov
pop
ins
out
sub
cmc
inc
adc
loope
imul
out
lods
and
aad
ds
(bad)
xor
jmp
arpl
popf
inc
push
fnstcw
push
ja
sar
push
pop
add
cmp
and
mov
sbb
inc
cld
pop
xchg
jmp
sub
hlt
xchg
shl
fwait
mov
in
add
and
and
cld
and
jmp
pushf
mov
popa
xlat
dec
stc
mov
sub
arpl
inc
outs
or
cdq
mov
sar
sbb
and
xchg
ins
mov
aas
push
enter
and
add
cmp
(bad)
cmp
mov
into
push
aas
sub
adc
adc
fadd
loope
outs
scas
mov
je
mov
pop
jns
lea
(bad)
or
or
xchg
lods
inc
xor
pop
and
(bad)
hlt
leave
pushf
cmp
xchg
add
(bad)
jle
pop
leave
sub
hlt
and
loopne
(bad)
push
cmps
cmps
or
adc
pop
sar
ss
dec
leave
sbb
nop
cmc
test
enter
mov
xor
out
paddb
test
loope
mov
cmps
adc
arpl
shl
movs
mov
add
mov
inc
push
xchg
lahf
imul
in
jo
pusha
(bad)
jno
xchg
outs
sub
(bad)
xor
enter
ret
xor
out
mov
push
call
les
loopne
stos
lods
lock
shr
lock
les
ret
call
sbb
fisttp
pop
idiv
xchg
pop
cmp
call
dec
and
fsub
scas
jns
jl
xchg
stos
lea
rol
xor
ret
cli
cmp
adc
mov
hlt
cmp
bound
addr16
scas
adc
sbb
adc
dec
xchg
sub
sub
cmp
and
push
sub
pop
or
add
lahf
dec
sbb
cs
jbe
mov
pop
je
loop
fistp
mov
and
test
xchg
push
xchg
lds
adc
movs
pcmpgtd
stc
aad
mov
dec
lods
ret
ds
cs
sbb
cmp
movs
cdq
scas
xchg
out
jnp
dec
dec
(bad)
fisubr
cmp
and
mov
rol
sbb
(bad)
sub
push
xchg
cmp
jns
cmovge
aaa
loop
mov
ds
adc
sbb
xor
sub
jb
stos
push
and
popa
or
jns
out
stos
les
mov
sbb
sub
shl
ss
cmp
(bad)
push
adc
adc
repnz
add
adc
iret
rcr
retf
sub
push
stos
lock
aas
int3
or
dec
mov
and
add
sti
mov
adc
shl
movs
add
jmp
movs
add
cmp
mov
stc
jno
push
rol
jmp
cld
fild
push
mov
inc
inc
cld
imul
xor
fcmovu
mov
popf
cli
movs
sbb
in
jmp
sbb
inc
int
cmp
or
cs
call
retf
out
mov
das
fstp
das
push
outs
into
js
lds
(bad)
jmp
mov
mov
add
xchg
mov
cmovnp
pop
fimul
bound
mov
push
mov
cli
adc
sub
cld
dec
xchg
cmp
retf
dec
xor
pop
push
data16
(bad)
jg
dec
jno
jae
stos
sub
(bad)
dec
rcl
cmp
xor
cmps
jae
daa
xlat
lods
ins
push
pop
ins
cmps
add
dec
xchg
pop
neg
(bad)
loopne
mov
ins
add
or
loope
pop
add
jmp
push
mov
mov
push
sbb
sbb
das
mov
dec
mov
push
enter
cmp
repz
pop
(bad)
and
and
mov
(bad)
pop
mov
mov
mov
sbb
mov
nop
xor
pop
jmp
std
adc
int
mov
mov
(bad)
in
pop
sti
sub
scas
mov
nop
mov
add
push
or
cwde
xchg
pop
adc
imul
inc
jle
popf
popa
scas
xchg
bound
cdq
mov
test
scas
scas
std
push
mov
mov
and
mov
sbb
dec
sbb
xchg
(bad)
inc
dec
test
cmp
jmp
stos
push
dec
push
xchg
movs
(bad)
into
retf
mov
cld
xor
mov
xchg
xchg
arpl
(bad)
mov
shl
push
mov
and
mov
int
mov
sahf
cld
mov
mov
cmps
dec
sub
lds
jb
cwde
pop
sub
jns
sub
add
push
ror
mov
mov
sub
pusha
jns
stc
dec
mov
sub
retf
fmul
fsubrp
std
sub
mov
jb
in
pmulhuw
dec
popf
mul
mov
in
in
(bad)
adc
sub
ins
dec
cmp
arpl
sbb
addr16
fsubp
lahf
sti
inc
add
clc
cmp
push
out
pushf
loop
test
cdq
cmc
lea
test
add
and
jmp
dec
std
and
push
and
jmp
pop
fsub
jb
mov
bound
pop
popf
mov
pop
lods
adc
dec
pop
pop
into
cmp
push
daa
sub
stos
repnz
xchg
push
aas
imul
sub
dec
sub
or
les
or
mov
jmp
adc
dec
test
(bad)
push
rol
or
ss
ja
mov
jne
pop
adc
ja
sbb
stos
jb
repz
xchg
leave
jecxz
adc
xchg
or
push
jecxz
dec
aad
outs
clc
outs
cmp
and
cwde
mov
xchg
jle
fsubr
sbb
call
data16
movs
xchg
xor
pop
in
or
inc
adc
(bad)
mov
mov
dec
push
leave
mov
dec
adc
mov
mov
jmp
add
imul
push
in
jne
jne
rcr
dec
mov
mov
cmp
xor
push
rsqrtps
pop
sub
xor
mov
popf
es
and
xor
movs
cmp
(bad)
sbb
fnsave
in
xor
clc
push
ror
pusha
les
shl
and
imul
pop
pop
pop
iret
stc
popa
mov
ret
jnp
mov
adc
ins
sub
dec
fisttp
adc
mov
rol
cmps
fcomp
lock
push
cmp
sub
sbb
out
xor
mov
xor
or
leave
jns
sbb
sahf
sar
out
jo
rol
ins
pop
test
pushf
add
xchg
mov
mov
add
pop
(bad)
adc
(bad)
jge
es
(bad)
scas
cwde
popf
enter
jbe
call
ins
fadd
jmp
pop
mov
inc
leave
xor
in
pop
or
imul
and
mov
repnz
cs
pop
in
addr16
out
paddsw
mov
add
(bad)
test
hlt
mov
jecxz
or
push
addr16
hlt
mov
mov
jg
jae
stos
loop
test
shr
dec
mov
out
icebp
push
scas
or
out
mov
pop
mov
xor
pop
sbb
out
inc
outs
or
mov
shl
jge
jns
in
push
pop
mov
and
and
popf
mov
out
jbe
lock
dec
xchg
test
jg
cli
clc
push
dec
and
add
ins
xchg
dec
xchg
jg
mov
inc
sub
jns
xchg
sub
jns
in
and
mov
mov
mov
or
xchg
fldcw
and
es
dec
dec
mov
push
lods
imul
sub
pop
icebp
outs
shl
cdq
jb
pop
cmp
mov
cli
mov
ret
rcl
in
mov
sbb
or
adc
loop
sub
repnz
out
or
inc
int
test
sbb
sahf
test
data16
jno
(bad)
fwait
stc
out
pushf
xchg
lock
jno
std
push
cmp
jp
aaa
nop
jno
pop
mov
addr16
mov
(bad)
cmc
lea
ja
lahf
xchg
pushf
iret
sbb
fcmove
and
daa
pushf
add
fisub
cmp
ret
mov
not
cmps
mov
nop
cdq
fwait
int
mov
dec
call
cmp
gs
mov
movs
jae
fld
je
xchg
shr
xchg
sti
mov
adc
sahf
xchg
aaa
inc
jmp
inc
xchg
sub
add
arpl
rcl
std
add
clc
adc
push
sub
adc
ss
cmp
(bad)
or
pop
mov
xchg
xchg
xchg
cwde
dec
aam
rol
pop
fdiv
jle
cmp
adc
push
mov
rcl
fucomp
sbb
call
push
mov
rcr
fisttp
repnz
ins
aas
int
jl
adc
xor
dec
inc
cmp
scas
retf
jmp
retf
cmp
ret
mov
loopne
mov
xchg
test
and
jmp
stos
lods
jle
cmc
mov
lods
loope
lea
out
idiv
sbb
fcmovne
fidiv
sub
inc
sbb
cmp
dec
dec
lock
xor
out
test
pop
sub
pop
mov
mov
icebp
pop
push
pcmpeqd
shl
cli
pushf
fcomp
jl
(bad)
cmc
jb
mov
pop
sbb
dec
cmps
(bad)
xchg
loop
retf
pushf
jmp
imul
pusha
sub
mov
or
hlt
in
dec
jecxz
data16
mov
add
ret
xor
xor
loop
das
mov
jecxz
ins
or
mov
cmp
inc
mov
fld
das
xchg
inc
and
xchg
retf
inc
sti
scas
mov
and
pop
mov
cwde
jp
jnp
cmc
pop
xchg
fidiv
inc
mov
and
push
das
mov
loopne
iret
movs
pop
jmp
jmp
and
test
and
ins
jb
rcr
dec
ret
loopne
sbb
rcl
adc
and
test
adc
mul
mov
cs
fcom
call
fs
cs
out
pop
cli
test
mov
xor
pop
mov
sbb
or
or
cdq
or
lods
sub
nop
ja
push
test
inc
aas
pop
jle
pop
rol
mov
mov
repnz
leave
cli
or
cmp
out
cmpps
mov
ret
xchg
add
ds
fwait
jo
std
cmc
mov
test
aas
push
adc
cmp
pop
xchg
lea
enter
shr
add
popf
sbb
cmps
xchg
aad
aas
fcom
pop
adc
mov
ins
or
mov
mov
into
(bad)
jecxz
int
test
test
xchg
jbe
mov
pop
cld
mov
les
(bad)
mov
push
cmp
cld
xchg
push
mov
int3
or
cmp
ins
sbb
shr
popa
inc
mov
loopne
bnd
call
mov
jns
jae
(bad)
gs
or
adc
mov
jecxz
sub
sbb
cmp
movs
aas
sub
sar
sub
cld
lods
adc
pop
jle
mov
out
enter
cs
push
outs
fdiv
fcomi
pop
dec
das
adc
retf
sti
add
mov
jmp
mov
push
sub
retf
ins
loope
jo
sub
xor
push
push
push
sbb
ror
sbb
arpl
inc
or
pop
push
inc
and
mov
nop
sub
xchg
jno
push
mov
inc
mov
jo
(bad)
cmps
and
adc
mov
and
jnp
lods
jge
ins
sahf
or
bound
sub
(bad)
or
pop
adc
call
ffree
js
sbb
pop
fmul
dec
in
cmp
dec
cmp
push
mov
mov
es
cmps
out
bound
inc
xor
xchg
es
pop
push
test
mov
xchg
jbe
vandps
cmp
and
push
es
inc
add
xchg
std
into
xor
neg
add
fwait
dec
push
shr
mov
jg
pop
and
fisttp
mov
or
sub
in
test
shl
or
push
out
icebp
cmp
mov
jecxz
dec
scas
mov
rcr
movs
xlat
mov
stc
sub
mov
cmp
pop
js
jno
imul
hlt
mul
jmp
mov
mov
lock
sub
mov
out
ficom
inc
jge
cmp
out
dec
arpl
test
shl
out
retf
mov
xor
popf
fs
add
out
add
xchg
cmp
add
xchg
popa
mov
or
adc
arpl
stos
push
dec
pop
fbstp
xchg
push
fimul
sbb
xchg
repz
push
inc
pop
scas
inc
mov
mov
fld
mov
sbb
push
cmp
out
cld
push
pop
mov
scas
mov
cwde
bnd
(bad)
das
repz
push
lods
ja
or
ins
mov
outs
cmps
sub
xchg
xchg
in
aaa
adc
fidivr
mov
xchg
mov
into
aam
int3
jl
adc
bound
or
mov
inc
fbld
cli
cmp
or
or
loope
dec
arpl
jmp
push
es
loope
dec
rcl
outs
pop
sahf
jmp
push
xchg
push
xchg
jns
stos
jmp
add
int3
retf
cmps
push
inc
(bad)
cmp
inc
dec
popf
es
sbb
shl
inc
mov
pop
mov
jmp
sub
loope
int3
sbb
sub
mov
retf
cmp
repz
cwde
jle
sbb
sub
fs
shl
repz
test
nop
nop
and
fs
xlat
jle
lods
inc
add
push
inc
sub
loope
bound
mov
mov
sbb
pop
out
jo
outs
outs
ins
lea
pusha
adc
inc
push
lahf
call
mov
outs
xchg
xchg
sub
mov
mov
loopne
sub
jno
xchg
mov
pop
and
jne
call
aaa
jp
adc
dec
scas
(bad)
jno
nop
and
mov
hlt
test
stc
dec
ss
loope
xor
dec
mov
sbb
or
and
adc
pop
push
mov
addr16
mov
shr
ja
sahf
mov
outs
push
(bad)
sub
xchg
retf
jmp
add
bound
add
rcl
jp
cdq
jge
push
mov
cmc
aas
push
xchg
jns
jne
mov
xor
mov
leave
dec
mov
xor
mov
int
push
jle
mov
into
mov
scas
stos
cmp
push
clc
retf
jns
aam
jno
or
add
(bad)
xor
jg
aaa
mov
jp
in
fidiv
push
repnz
adc
push
aad
outs
cs
fisub
mov
mov
add
cli
mov
dec
cmp
mov
push
sbb
cwde
(bad)
fs
pop
(bad)
repz
xchg
adc
mov
pop
dec
xchg
stc
and
retf
cmp
mov
lahf
out
test
mov
push
retf
inc
push
push
mov
dec
push
adc
or
(bad)
iret
mov
mov
xor
inc
rcr
xor
sbb
(bad)
mov
sub
mov
jl
pop
mov
sub
inc
repnz
xchg
jne
dec
leave
ins
mov
ret
pushf
jge
sar
int3
ficomp
ds
mov
xor
ss
fcmovb
inc
jp
dec
xchg
jl
mov
cmp
inc
adc
les
pushf
adc
jae
test
pop
sub
xor
mov
cld
add
iret
sahf
ror
bound
add
cld
scas
je
pop
mov
(bad)
in
mov
shl
dec
rol
mov
nop
leave
inc
mov
sbb
jne
cmp
or
lock
push
ja
jns
sbb
jne
popa
in
retf
stos
xchg
mov
push
adc
mov
lahf
cmps
jmp
(bad)
and
ret
cmp
(bad)
cmp
cmps
ja
stos
enter
jnp
push
push
cmps
jns
not
xor
cmps
mov
xor
xor
js
(bad)
fisttp
xor
out
mov
outs
loop
add
add
jmp
leave
lea
fwait
and
dec
adc
sbb
fs
ret
(bad)
cmp
mov
ds
loope
(bad)
xor
sbb
sbb
dec
push
adc
add
iret
mov
repnz
cs
push
es
mov
adc
pop
xor
xchg
cmp
in
push
mov
cmc
leave
leave
repz
jecxz
xchg
dec
push
mov
xlat
inc
dec
mov
xchg
nop
addr16
aas
icebp
jno
sub
(bad)
pop
sub
pop
(bad)
jmp
add
jnp
add
pop
int
jnp
sar
dec
sbb
xor
aaa
fild
jbe
pop
aam
movs
leave
xor
dec
pop
push
ins
lea
pop
enter
jl
pop
ret
xchg
mov
mov
cmp
inc
enter
push
imul
cmps
mov
arpl
mov
stos
jmp
mov
loop
outs
sub
retf
out
ret
or
xlat
aas
pop
mov
(bad)
sub
sbb
leave
repz
dec
pop
gs
lods
push
inc
push
xor
mov
(bad)
sub
mov
call
jp
or
int
lods
jo
test
jge
xor
sbb
pop
test
or
pop
pop
out
(bad)
imul
push
push
adc
push
cmp
xchg
pushf
mov
shl
mov
loope
cmc
jecxz
inc
sar
in
std
push
mov
or
push
jle
xchg
imul
mov
pop
test
adc
(bad)
mov
call
push
inc
popf
gs
in
(bad)
push
lods
iret
mov
and
or
push
mov
stos
adc
adc
pop
mov
shr
pop
out
adc
jle
jg
inc
fld
in
sbb
fwait
sti
mov
jo
into
pop
push
mov
fs
ds
cmps
sub
enter
outs
xor
sbb
dec
pop
xchg
xor
add
cmp
dec
dec
inc
(bad)
pop
gs
sbb
jbe
mov
(bad)
cmp
(bad)
call
scas
dec
push
xchg
xchg
(bad)
popf
dec
sub
lea
ja
sub
in
stc
ja
push
mov
fld
out
xor
push
cwde
lds
ror
jae
sub
dec
in
xchg
mov
push
add
sbb
mov
idiv
out
int3
pusha
std
or
adc
xor
adc
out
sbb
dec
push
dec
jl
push
aad
call
push
fwait
jb
mov
pop
ds
fadd
mov
lds
fdivr
shr
imul
sahf
movs
lock
cmp
push
jo
call
adc
sub
push
push
mov
mov
(bad)
shl
cmps
adc
fadd
daa
pop
retf
sub
add
call
aas
popf
out
xchg
xlat
cmps
and
std
retf
cmc
loopne
call
jge
pop
inc
mov
adc
popf
sub
inc
jb
jne
retf
dec
mov
cmp
pop
(bad)
fdivr
and
adc
fldenv
fs
mov
shl
sti
sub
fistp
ins
mov
fnstcw
outs
outs
push
push
mov
push
loopne
pop
pop
xchg
ret
sub
add
pushf
mul
mov
mov
mov
jae
mov
pop
into
fs
out
outs
xor
xchg
(bad)
mov
mov
pop
pushf
jbe
ss
inc
pop
aad
pushf
enter
ja
aaa
test
sahf
cli
mov
mov
adc
mov
jne
test
xor
jno
and
test
mov
clc
div
cdq
dec
cwde
jl
fs
data16
jg
mov
fisubr
enter
push
xlat
outs
push
shr
push
jns
dec
mov
push
cli
shrd
xor
mov
push
ds
mov
xor
fs
pop
push
xchg
cmp
and
dec
dec
xor
loop
in
or
retf
cs
and
jne
leave
sbb
data16
xchg
jl
pop
push
sub
pop
mov
(bad)
mov
loopne
mov
push
mov
add
out
push
jmp
sub
(bad)
xchg
mov
mov
mov
or
dec
inc
mov
mov
stos
into
mov
sub
das
je
dec
pop
in
retf
push
inc
sub
jo
bound
sbb
ins
mov
pop
pop
daa
push
pop
jmp
(bad)
lods
push
test
pop
stos
cmps
lods
inc
cdq
pop
dec
pop
das
fmul
sbb
pop
loopne
sbb
fistp
sub
enter
and
jmp
outs
jno
ins
push
xchg
and
adc
push
out
das
aaa
icebp
add
mov
scas
mov
mov
(bad)
in
mov
stos
in
xor
or
mov
gs
sbb
add
imul
dec
sbb
cli
(bad)
sub
jb
mov
adc
inc
aaa
imul
xor
aad
xor
cmp
ret
nop
push
in
out
mov
dec
dec
call
dec
daa
dec
out
iret
lea
(bad)
dec
ret
rcl
sub
cs
in
adc
cmp
jmp
or
loope
shl
jle
or
inc
jmp
mov
sbb
in
inc
rol
push
push
popf
aaa
pop
fst
dec
int3
jmp
sbb
pusha
pop
movs
jnp
mov
dec
jnp
popf
mov
bswap
aaa
dec
call
fs
test
pop
rol
sbb
cdq
mov
sub
xor
sbb
mov
loope
in
int
mov
pop
(bad)
xor
cli
adc
add
aad
xchg
xchg
test
or
(bad)
fisttp
pop
aad
cmp
imul
and
jl
retf
enter
cmps
cmp
vcvtss2sd
loop
(bad)
sub
stos
sub
jb
ja
jp
or
pop
jo
fisttp
repz
and
mov
scas
mov
xchg
shr
mov
add
pop
in
or
sahf
movs
push
gs
cli
push
xor
int
adc
leave
sub
bnd
lea
jp
movs
push
loope
xor
lock
xor
or
sbb
jmp
jo
xchg
cmp
sub
push
fisubr
fistp
jg
cs
stc
ins
arpl
test
jecxz
into
jl
popf
test
mov
fistp
std
or
and
pop
pop
mov
jns
jo
or
(bad)
and
push
sbb
pusha
push
repnz
aam
sbb
imul
sbb
js
cmp
pop
xchg
(bad)
sahf
call
xchg
pop
xor
ds
xor
inc
arpl
loopne
aaa
push
jmp
adc
and
or
loope
pop
test
mov
mov
fldenv
rol
ins
call
add
adc
pop
push
jo
test
xchg
push
or
imul
enter
jne
mov
je
sbb
aas
add
inc
cmps
inc
sbb
mov
clc
jnp
ins
pop
aad
(bad)
in
punpcklwd
add
imul
bnd
adc
xchg
cld
setl
(bad)
gs
inc
lds
push
xchg
push
popf
dec
ficom
inc
add
shl
int3
and
mov
iret
inc
mov
xchg
jle
cmp
popf
(bad)
push
pop
imul
ret
cwde
repz
rcr
sub
pop
mov
jmp
adc
mov
cwde
nop
sbb
test
add
add
lea
mov
sbb
inc
out
pop
push
pop
test
mov
cmp
sahf
mov
xchg
cmp
(bad)
rep
mov
out
(bad)
cmp
pushf
les
ja
mov
and
sbb
mov
(bad)
jecxz
repz
(bad)
lock
cli
imul
xchg
adc
test
and
cmp
mov
xchg
inc
inc
add
(bad)
xchg
mov
mov
test
mov
pop
add
xor
test
or
mov
in
xchg
cdq
mov
cmp
shr
sub
jae
cli
shr
mov
mov
mov
mov
add
repnz
call
cs
fist
call
xor
mov
mov
dec
ins
aad
ror
stos
aad
imul
push
jg
mov
inc
test
pop
xchg
mov
sbb
iret
dec
inc
dec
xchg
in
ret
mov
fist
lahf
mov
mov
(bad)
sub
sub
or
call
xchg
cdq
out
xor
in
std
icebp
mov
pushf
xor
push
loopne
aad
jg
xor
jge
push
out
sub
out
jo
inc
(bad)
xor
scas
mov
dec
std
adc
mov
dec
xchg
mov
or
mov
add
push
mov
push
daa
add
nop
xchg
jbe
jmp
push
loopne
adc
pushf
das
ins
(bad)
ds
sahf
mov
mov
sbb
xor
js
and
stos
dec
add
add
cli
ins
in
loop
test
xchg
sahf
adc
dec
in
dec
xor
sbb
iret
inc
jno
and
dec
push
dec
int3
in
data16
jb
add
hlt
and
and
jmp
xor
and
pop
call
scas
stc
jecxz
lock
and
pop
sar
fs
cmp
lahf
test
cmc
stc
lock
add
enter
cmp
xor
stc
int
mov
jl
ror
xor
call
xchg
adc
test
loop
jae
cmp
mov
xor
push
mov
cli
cld
xchg
inc
dec
aam
(bad)
and
aaa
mov
in
cwde
lahf
mov
and
xlat
and
inc
xchg
and
movs
add
jmp
(bad)
inc
out
sub
enter
int
out
dec
jo
cmp
jmp
push
add
inc
mov
mov
mov
je
push
cmp
mov
xor
and
xchg
sub
add
mov
push
xchg
jbe
sub
add
(bad)
shl
fsubr
sbb
imul
in
shl
arpl
sub
popa
outs
dec
pop
push
mov
psrlw
in
jb
push
pop
xor
out
mov
mov
dec
(bad)
cld
call
mov
mov
pop
stc
stos
iret
inc
push
retf
push
mov
movs
mov
inc
mov
retf
js
mov
and
retf
test
push
xor
sbb
rcl
mul
push
lock
dec
cs
or
in
and
into
dec
pcmpeqb
arpl
dec
es
add
das
cld
dec
xor
mov
retf
loope
and
push
retf
xlat
nop
pushf
in
dec
sar
cli
stos
repz
dec
paddq
add
mov
sub
cmps
push
retf
push
dec
jl
fisubr
and
das
sbb
jnp
pop
xchg
outs
pop
(bad)
das
pop
stos
aas
stos
(bad)
stc
ins
mov
sub
cdq
inc
cld
jecxz
rcl
iret
cmp
push
pop
ja
pushf
lock
jb
push
dec
jmp
jne
mov
test
mov
pop
les
add
mov
push
lock
cmc
ins
and
hlt
inc
or
rcl
jle
pop
and
xchg
jl
out
mov
add
sub
pop
pop
movs
in
(bad)
push
cmps
jno
in
xchg
out
mov
fyl2x
jl
xchg
inc
test
dec
gs
jmp
push
mov
mov
(bad)
repnz
push
or
call
mov
mov
jbe
(bad)
je
aas
hlt
xor
cmc
(bad)
in
nop
sub
ss
jbe
je
mov
add
mov
sbb
or
popf
add
test
xchg
fld
sub
push
ins
push
pop
out
push
dec
cli
test
pop
jle
arpl
jns
leave
stos
sbb
fwait
sub
fsubr
pop
popf
aas
stos
js
out
sbb
mov
fadd
inc
repnz
in
sar
sbb
ds
or
rcl
adc
stos
stos
sub
xchg
inc
cs
pop
retf
or
inc
(bad)
push
ret
(bad)
adc
cmp
or
ror
sbb
dec
fs
mov
or
scas
ja
jecxz
jle
shl
or
mov
jecxz
test
fdiv
data16
nop
iret
mov
add
inc
mov
dec
adc
pop
stos
xchg
fs
and
sbb
std
push
xchg
aaa
mov
sbb
ret
push
cld
sbb
test
inc
push
ror
and
int
or
mov
and
(bad)
xor
inc
jne
retf
jb
mov
stc
push
imul
or
pop
mov
xchg
jae
xchg
shr
mov
movs
movs
xchg
fisub
add
mov
rcr
adc
mov
pushf
push
sbb
sbb
or
push
retf
jno
retf
outs
push
sub
ss
xchg
in
fist
test
lock
xorps
les
adc
lock
bound
jp
adc
in
push
or
test
jmp
mov
push
in
lahf
dec
jecxz
stos
es
popa
sub
js
scas
popf
gs
in
fiadd
pop
add
stos
inc
(bad)
mov
adc
xchg
stos
push
mov
sbb
push
popa
cld
and
mov
aad
xchg
cmc
aaa
fst
enter
ret
addr16
xchg
cmpxchg
sub
jbe
jecxz
mov
imul
and
es
dec
mov
shr
sub
xchg
xlat
ja
mov
lock
(bad)
fisttp
sar
cli
rcr
mov
out
pusha
hlt
and
enter
popf
mov
je
nop
retw
push
cmps
sub
adc
fidivr
popf
xchg
sub
push
aam
mov
or
or
mov
ins
popf
imul
ror
and
(bad)
shr
xor
pop
push
pop
jo
mov
pusha
ret
into
movs
mov
sar
xchg
pop
xor
fnstenv
movs
loop
jo
in
repz
cmp
dec
or
mov
sbb
jmp
cmp
out
inc
daa
xor
out
mov
leave
add
ret
xlat
das
push
out
and
cdq
shl
mov
dec
cmp
cmps
jnp
mov
stc
loop
(bad)
push
ret
jbe
test
movs
jb
mov
jp
lods
sub
loope
int
mov
imul
cli
pop
cmc
adc
push
and
mov
std
adc
(bad)
fcmovne
(bad)
div
sub
sbb
dec
xchg
pop
in
cmp
mov
call
xchg
icebp
mov
cmp
popf
mov
push
outs
pusha
rcr
push
test
pop
push
dec
add
js
sbb
scas
mov
gs
jmp
ror
sbb
loope
rcl
mov
mov
or
mov
fmul
jge
pop
dec
mov
pop
and
mov
inc
pop
test
dec
repnz
add
rcr
movntq
sti
daa
pop
ret
mov
push
stos
popa
and
sub
mov
jmp
iret
lods
push
add
adc
jge
xchg
sub
icebp
test
jg
pop
imul
jge
out
and
out
jmp
jecxz
ins
sub
inc
push
pop
dec
sbb
push
jp
adc
fisub
mov
mov
xor
imul
fadd
pop
inc
out
jl
retf
in
(bad)
stos
xchg
jge
xor
lock
sub
sbb
enter
push
and
jae
and
push
enter
stos
and
or
ins
mov
inc
push
ret
and
pop
cmp
and
jmp
ja
pop
push
and
inc
ss
pushf
popa
std
dec
jecxz
adc
sahf
or
mov
gs
lea
adc
sub
addr16
test
mov
xchg
pop
scas
or
xchg
je
xor
inc
jae
lea
out
loope
es
xchg
inc
inc
pop
pop
bound
or
mov
jmp
dec
xchg
pop
jp
fwait
ja
ror
outs
les
jmp
jmp
mov
cdq
out
fwait
mov
lods
push
imul
xor
and
call
mov
xchg
dec
js
(bad)
outs
loope
sbb
sub
addr16
daa
jns
jmp
add
push
pop
jb
xor
add
jne
in
mov
dec
mov
xor
pop
pop
mov
mov
sbb
and
or
and
lock
(bad)
fld
fnsave
or
inc
leave
xor
ror
daa
test
rol
sbb
cmps
mov
(bad)
scas
xchg
mov
jecxz
sti
pop
xor
sti
cld
inc
mov
push
loope
xor
sar
ror
or
cmp
je
out
sub
inc
xor
mov
and
shr
xchg
or
sbb
mov
lahf
or
mov
popa
mov
adc
sub
pop
ins
nop
repnz
(bad)
pusha
push
mov
inc
push
jge
fs
or
and
repz
dec
mov
test
in
and
dec
xchg
mov
pushf
dec
repnz
repz
xor
aas
mov
mov
mov
out
adc
mov
stc
stos
aaa
div
adc
out
lea
mov
hlt
and
loope
pop
xchg
inc
sub
push
jae
hlt
xchg
mov
adc
xchg
pop
test
test
push
pop
sti
mov
and
or
jnp
dec
dec
ret
(bad)
rcl
in
cmp
mov
ins
mov
nop
(bad)
leave
dec
push
mov
pop
ins
in
cs
mov
jge
mov
dec
and
lea
xchg
mov
xchg
jecxz
pop
mov
dec
pop
bnd
outs
jmp
cmp
dec
rcr
inc
cmc
pusha
inc
cmps
enter
aad
test
add
aas
movs
xor
test
scas
call
cmp
jb
adc
das
xchg
inc
mov
push
inc
pop
scas
or
test
pop
adc
repz
mov
lods
sbb
imul
add
sub
cli
sbb
fmul
dec
and
iret
xor
adc
inc
cwde
xchg
movs
call
push
ja
or
push
pop
xor
jecxz
mov
std
jmp
xchg
push
xor
sbb
xor
push
inc
cmp
into
sbb
sub
mov
sar
out
push
ret
mov
outs
cmp
xor
cli
cmps
(bad)
xchg
adc
pop
sub
jo
test
pop
mov
xor
add
and
out
sar
js
sub
mov
fst
xchg
mov
add
adc
imul
xor
sbb
xchg
mov
xchg
fimul
movs
push
test
mov
adc
adc
in
sbb
js
repnz
xchg
mov
mov
sbb
cmp
sbb
mov
loopne
out
arpl
push
sti
loopne
mov
outs
not
fcom
mov
in
test
(bad)
in
jle
repnz
jl
enter
clc
cmp
ret
fs
fldenv
add
stc
push
push
out
jnp
retf
fs
mov
out
mov
cmp
add
and
hlt
call
(bad)
push
fs
xchg
rcl
les
pop
mov
scas
loopne
shl
sbb
lahf
mov
dec
dec
and
cmp
inc
loope
or
int
mov
movs
push
pop
cmp
mov
adc
mov
dec
data16
mov
jmp
push
mov
mov
cmps
xlat
or
aas
leave
(bad)
and
idiv
fidiv
mov
pop
mov
test
mov
pusha
out
test
out
icebp
ret
rol
sub
sahf
scas
sar
rol
adc
sbb
sti
push
fwait
sahf
leave
fadd
std
mov
sub
in
mov
lds
jmp
cmps
shr
gs
dec
push
add
sub
mov
jge
fiadd
pusha
movs
movs
mov
push
(bad)
fsubr
mov
ins
pop
xor
jo
mov
push
nop
pop
call
inc
lods
icebp
cmp
in
clc
cmp
dec
push
mov
movs
and
or
jmp
jmp
loope
xor
pop
mov
add
adc
mov
adc
movs
xchg
enter
stos
pusha
ret
stc
sub
data16
pop
pop
cmp
(bad)
dec
adc
push
or
jnp
xor
xor
mov
fmul
pop
fisttp
loop
mov
cmp
into
xor
test
cmp
lea
cmp
jle
fisub
cmp
xor
jnp
pop
int
pop
inc
out
jmp
jne
cmps
adc
outs
mov
jno
sub
mov
dec
popa
rcr
or
cs
lods
jg
pop
popa
mov
xchg
cmp
dec
scas
dec
cwde
xchg
add
xchg
cmc
mov
mov
retf
imul
(bad)
add
add
ffreep
xor
sbb
sub
jl
mov
cmp
mov
jnp
and
push
add
jnp
xor
inc
xor
outs
call
loop
jns
rol
or
and
xchg
xor
cmps
sahf
mov
adc
lods
and
fstp
iret
mov
sub
jg
imul
push
dec
jmp
push
push
cmp
shr
or
fdivr
sub
push
lea
xchg
int
pushf
int
push
sbb
(bad)
xchg
fst
jl
add
shl
pushf
or
leave
test
outs
or
push
cmp
gs
mov
idiv
bnd
mov
pop
mov
xchg
pop
iret
mov
(bad)
daa
repnz
mov
loope
inc
mov
inc
inc
leave
dec
mov
cmps
or
jno
mov
and
ftst
mov
sbb
add
mov
mov
push
mov
ja
pop
je
test
add
pop
shl
int
push
(bad)
xor
push
dec
jle
cmp
pop
mov
jae
out
jb
loop
loopne
mov
es
sub
fisub
les
lea
dec
cli
jp
es
sbb
push
fbld
movs
enter
sub
dec
or
inc
jp
and
and
out
ret
add
imul
nop
test
jmp
shl
mov
ins
neg
jle
and
mov
daa
enter
adc
mov
jo
lea
nop
mov
pop
call
cwde
or
jp
jmp
ror
sar
pushf
sub
stos
ds
lods
aad
ror
mov
mov
adc
pusha
mov
ins
imul
lahf
push
stos
adc
outs
sbb
xchg
or
popf
cld
or
(bad)
xchg
and
mov
mov
lock
dec
movs
inc
fist
jne
stc
(bad)
out
xchg
xor
mov
add
call
and
out
jmp
sbb
mov
call
inc
jl
ja
test
adc
sub
pop
sahf
pushf
das
repz
cs
aad
add
jg
das
mov
lds
rol
ror
clc
mov
pop
push
jl
clc
xor
and
bound
mov
mul
adc
xchg
aam
or
(bad)
xor
dec
sti
mov
test
ret
aad
jae
ins
mov
fisub
fidivr
jmp
fisub
and
(bad)
sbb
cs
in
inc
xchg
mov
jo
das
add
lods
fs
ss
jp
sbb
daa
ret
sbb
add
cld
call
test
test
fild
push
jmp
mov
addr16
jno
movsx
push
fld
das
aas
fucom
push
mov
sbb
icebp
and
inc
push
xor
idiv
pop
lea
xchg
cld
mov
push
inc
jmp
and
pop
pop
jle
test
call
pop
jmp
sbb
mov
sahf
out
and
sahf
in
ficom
adc
mul
pop
daa
mov
std
jecxz
xchg
sub
mov
test
xchg
ret
adc
shr
div
fnsave
int
ins
pop
mov
mov
(bad)
idiv
cwde
jmp
or
push
movs
shl
mov
adc
inc
add
mov
or
mov
or
or
add
out
jmp
mov
lea
in
xchg
xor
lock
and
(bad)
rcr
mov
imul
mov
xor
shl
pop
and
jle
mov
xchg
scas
or
mov
pop
mov
push
xchg
adc
ins
mov
bound
push
(bad)
jecxz
cmps
jbe
jne
dec
dec
mov
(bad)
pop
xchg
(bad)
sub
push
mov
sub
aam
and
mov
enter
mov
jnp
cmps
mov
sub
fmulp
outs
or
xor
xchg
stc
cmps
mov
or
arpl
ficom
nop
stc
sahf
ins
jo
mov
ds
push
xlat
loope
(bad)
(bad)
xchg
jb
add
shr
jmp
clc
(bad)
pop
repnz
sub
aam
sbb
movs
jae
movs
lahf
or
push
jo
call
xchg
pop
and
(bad)
adc
or
mov
scas
scas
dec
xor
mov
inc
push
dec
lods
(bad)
dec
aad
stos
shl
and
push
lea
fdivr
ficom
sub
inc
pushf
mov
xchg
pop
fld
mov
add
retf
xor
cmp
movs
repnz
(bad)
xor
inc
or
add
(bad)
(bad)
in
fwait
inc
clc
mov
movs
hlt
das
ret
test
out
mov
movs
jl
cmp
(bad)
je
ins
scas
lock
push
cmp
pushf
cdq
pop
or
scas
and
mov
std
inc
in
dec
mov
addr16
adc
inc
fsubp
inc
fwait
mov
jns
aam
std
nop
jbe
gs
mov
pushf
xchg
cmp
(bad)
daa
jmp
(bad)
xor
sbb
stos
or
cli
dec
outs
cmp
mov
jne
adc
xchg
icebp
push
(bad)
jecxz
push
test
and
ja
mov
lds
(bad)
adc
lahf
loopne
pop
add
mov
das
ins
outs
(bad)
stc
(bad)
pop
sbb
js
add
pop
sub
test
push
mov
rol
mov
sub
aam
push
push
mov
lods
or
in
ret
pop
sar
ins
adc
out
sbb
sbb
in
mov
out
jns
fidiv
adc
adc
adc
sti
mov
or
and
(bad)
sti
mov
and
jge
mov
jg
add
mov
(bad)
mov
mov
(bad)
cli
fucomip
dec
pushf
out
or
cmp
das
push
fcompp
(bad)
pushf
mov
out
enter
lds
add
loopne
(bad)
out
mov
or
add
out
fst
adc
push
adc
jl
cmp
fiadd
shr
(bad)
mov
xchg
cdq
fisubr
mov
(bad)
stos
pop
les
mov
or
scas
test
mov
push
popf
dec
scas
bound
ret
fiadd
push
mov
dec
cld
mov
push
ret
ss
inc
mov
fiadd
sbb
test
xchg
jge
enter
out
inc
clc
cmp
adc
jecxz
sbb
xor
mov
mov
lods
mov
mov
sub
jnp
cld
mov
jge
ja
aad
xlat
les
test
adc
sub
dec
mov
xchg
js
sbb
ds
fs
cmp
mov
fwait
dec
or
loop
and
fs
ficomp
outs
dec
sti
dec
pop
jnp
pop
sbb
sar
ret
and
cmc
imul
dec
das
jno
inc
or
add
xor
test
mul
xor
stos
fs
or
cmp
sub
mov
(bad)
push
pop
cli
movs
adc
sbb
add
sub
hlt
sub
in
jbe
xor
jmp
loopne
add
add
cmp
sti
out
bswap
jae
out
adc
enter
loop
sub
inc
xchg
xlat
push
cmp
sbb
mov
cmps
cmps
push
popf
push
(bad)
push
mov
sub
dec
jne
cmps
(bad)
pop
jb
jae
aam
pop
lock
imul
fs
scas
(bad)
cmp
aam
sub
out
(bad)
sbb
js
js
das
mov
mov
xor
mov
call
cmp
dec
in
loope
push
inc
and
test
add
mov
push
or
sub
push
aam
pop
ret
jno
jl
push
push
shl
sbb
dec
and
xor
les
xor
sbb
clc
nop
or
addr16
mov
aad
mov
(bad)
je
push
pop
test
push
scas
mov
push
pop
das
in
and
sbb
mov
cld
jbe
dec
sahf
xor
mov
mov
addr16
xor
pop
dec
adc
sahf
fwait
out
mov
adc
js
inc
clc
inc
lock
sub
sbb
cmp
clc
dec
jp
scas
icebp
lods
xchg
test
test
inc
movs
and
inc
inc
shl
rcl
daa
scas
repnz
push
iret
pop
and
ds
cmps
pop
add
nop
mov
mov
mov
dec
mov
nop
adc
ja
jg
inc
shr
jecxz
pop
pop
jne
hlt
jae
xchg
push
int3
lds
iret
out
sar
mov
test
or
mov
ins
cmp
sub
aaa
fadd
xchg
xchg
sti
fnsave
push
(bad)
mov
inc
test
daa
loopne
add
pop
out
scas
cmp
movs
pushf
xor
leave
movs
lods
mov
jo
xor
xchg
sub
and
imul
mov
mov
sti
mov
inc
mov
ret
popf
mov
mov
cld
add
pusha
jnp
jg
pop
call
data16
(bad)
in
ds
sbb
add
mov
pop
(bad)
in
add
inc
or
je
or
psubsb
pop
scas
stos
or
std
lahf
cmc
dec
aam
outs
or
add
mov
sbb
xor
or
(bad)
xchg
push
or
out
add
(bad)
sbb
repz
adc
outs
add
mov
dec
inc
in
ret
adc
sar
pop
stc
scas
cwde
pop
in
jmp
or
xchg
aaa
in
xchg
and
jecxz
push
sbb
not
dec
pop
ds
das
retf
mov
pop
mov
aaa
sub
cmps
inc
sub
xchg
enter
push
sub
loopne
inc
mov
jae
cmp
mov
cmp
outs
jl
sub
mov
mov
sbb
sbb
(bad)
fcom
sti
shl
ret
add
jmp
iret
push
retf
xchg
adc
je
retf
jge
inc
fsubr
push
adc
fcomp
repnz
cmp
sqrtps
call
jnp
xchg
ss
outs
add
sahf
fsubr
loopne
mov
xchg
inc
and
pop
inc
and
xor
aad
jmp
es
dec
dec
outs
fwait
mov
loopne
xor
pushf
xchg
xchg
and
jo
pop
sub
les
popa
in
ins
ror
fwait
inc
fld
mov
lods
xchg
fisubr
xor
lds
dec
in
cmp
xchg
inc
mov
imul
retf
mov
fist
cdq
pandn
cmp
push
sub
jbe
sti
mov
pop
add
push
sub
sbb
add
cmps
and
(bad)
sub
scas
(bad)
lods
or
mov
(bad)
lock
push
cmps
jno
mov
xor
jae
adc
add
push
stc
rol
dec
stc
shl
loopne
mov
xchg
pop
dec
pandn
and
or
fadd
push
push
test
add
push
scas
std
mov
jnp
shl
mov
inc
in
mov
call
lea
sbb
movs
sub
adc
outs
test
sub
pop
add
js
cs
push
movs
repz
shl
outs
or
xor
mov
lds
ror
sbb
sbb
das
lahf
pusha
jnp
add
cdq
dec
aam
fild
pushf
jns
add
ins
ret
push
nop
xchg
jbe
add
pop
jbe
test
pop
dec
mov
dec
retf
arpl
ins
aas
inc
pop
fs
aaa
cdq
mov
cwde
adc
dec
js
mov
xor
pop
add
(bad)
bound
pusha
xor
not
jle
loop
mov
add
out
and
jno
mov
adc
push
sub
retf
mov
aas
dec
outs
setnp
faddp
jo
push
push
mov
cmp
and
stos
dec
xchg
shl
(bad)
mov
sbb
mov
pop
mov
ins
pop
cmps
movs
aas
sub
shl
gs
scas
inc
leave
xor
jnp
sbb
fnstsw
lods
das
and
mov
test
sbb
pop
xor
repz
sub
(bad)
push
or
jp
in
out
push
retf
jge
mov
mov
out
push
cld
xchg
mov
stc
or
jp
mov
popa
lds
jae
cld
or
jbe
xor
test
cmp
aas
stc
lds
add
int3
aad
std
leave
or
jns
fisubr
push
popa
rcr
pop
mul
cld
xchg
int
adc
cmp
push
ins
xor
mov
stos
sbb
sbb
push
mov
mov
jne
mov
(bad)
lods
cmp
lahf
in
call
push
or
xor
fdiv
pop
mov
jno
xchg
and
xchg
sub
cmp
lods
stos
mov
pop
push
push
adc
mov
add
js
stos
dec
pop
imul
sbb
clc
and
inc
arpl
movs
cmp
popa
mov
mov
sbb
neg
sbb
xlat
or
call
shl
mov
and
nop
out
jae
xchg
mov
inc
(bad)
jno
outs
push
dec
xor
mov
aam
cdq
stos
fwait
sbb
lock
(bad)
ror
sub
outs
add
push
xor
(bad)
in
mov
addr16
ins
push
xor
hlt
sub
mov
sbb
(bad)
mov
add
call
ror
dec
neg
add
ret
cli
jae
sub
out
and
in
cmp
dec
retf
leave
jo
mov
pushf
das
fsubp
push
dec
fldenv
xchg
add
xor
and
cmp
sar
cmp
test
sbb
sub
imul
cdq
pusha
push
fadd
inc
mov
cs
mov
lods
ss
outs
and
jnp
sbb
leave
and
in
pop
mov
push
xchg
mov
dec
push
hlt
mov
bnd
mov
rcr
cmp
jnp
(bad)
shl
lahf
add
inc
dec
adc
fst
mov
aad
add
dec
loope
clc
in
push
into
scas
and
rol
in
dec
cld
push
(bad)
out
lods
jmp
js
pop
adc
lods
mov
ins
daa
inc
outs
ror
outs
pusha
in
lea
jmp
mov
cmp
dec
rcr
mov
mov
mov
pushf
imul
dec
fnstcw
retf
arpl
pop
mov
inc
lods
mov
imul
push
or
les
mov
into
sbb
mov
mov
push
and
dec
dec
jbe
mov
mov
mov
cmp
jbe
mov
stos
mov
fdivr
scas
shl
(bad)
enter
test
loopne
jl
push
dec
dec
jp
ins
loop
addr16
mov
sbb
in
or
mov
addr16
dec
pop
ds
das
lds
mov
jne
ficomp
jnp
movs
xchg
das
loop
or
add
jge
jnp
sahf
enter
ffree
iret
test
test
mul
cmp
out
gs
js
push
mov
jbe
test
fs
fadd
jmp
and
mov
sub
cli
retf
dec
jae
add
cmp
push
push
cmp
outs
inc
push
test
xchg
jmp
ret
fcmovne
scas
jae
xor
add
push
mov
or
jae
cmps
mov
push
test
aas
adc
mov
mov
pop
pop
jbe
sbb
stos
mov
and
js
loopne
sbb
retf
shr
ds
repz
sbb
dec
test
adc
pop
and
cmp
(bad)
enter
and
and
out
cs
add
inc
and
xor
ficom
jb
mov
test
jb
or
xchg
ins
pop
inc
fs
stos
inc
imul
mov
in
(bad)
enter
dec
retf
(bad)
arpl
sti
pop
sbb
xchg
add
pop
jl
(bad)
xor
jge
dec
rsqrtps
mov
push
sub
xchg
leave
xor
(bad)
pop
popa
jno
mov
sub
movs
popf
mov
push
xchg
into
dec
outs
push
mov
mov
or
mov
mov
push
mov
jbe
int
adc
dec
mov
pop
retf
fs
(bad)
dec
stos
mov
mov
aad
add
mov
cmps
test
dec
shr
std
pop
add
adc
mov
lea
or
mov
inc
adc
test
add
movs
mov
sub
fwait
adc
jl
jl
xchg
xor
jns
enter
mov
xchg
out
es
shr
jnp
nop
pop
leave
and
jp
pusha
pop
jl
(bad)
mov
div
shr
and
mov
push
inc
cdq
sub
push
cmc
dec
sub
sbb
adc
push
mov
xlat
jno
push
sbb
lods
stos
sbb
in
dec
das
mov
movs
ja
xor
loope
jle
mov
in
push
xlat
sub
xchg
sbb
out
xchg
dec
test
jp
cli
dec
mov
mov
jns
push
jne
or
test
add
icebp
imul
fcom
ja
push
push
xor
sub
rcr
icebp
neg
js
mov
xchg
mov
jnp
out
pushf
jbe
ss
pop
xchg
cmps
pop
jb
add
xor
and
push
addr16
or
rol
mov
ins
cs
or
adc
or
hlt
lods
or
loope
inc
xor
pop
or
inc
pop
cs
mov
add
mov
lahf
dec
mov
jp
and
mov
pop
dec
mov
sub
(bad)
fwait
add
inc
push
gs
(bad)
idiv
mov
popf
jnp
cmp
cmp
fstp
xor
int3
inc
mul
mov
mov
bound
inc
add
pushf
or
(bad)
loop
adc
lods
mov
repz
xchg
inc
fisttp
push
ret
imul
mov
(bad)
stc
jp
repz
std
(bad)
cdq
daa
idiv
cdq
pop
dec
jmp
in
dec
inc
push
pop
ror
adc
inc
push
pop
mov
dec
scas
inc
push
sahf
mov
outs
inc
int3
pop
push
sub
imul
push
ret
xor
lahf
adc
(bad)
mov
ja
shr
int3
push
adc
or
xchg
cmps
jg
cli
out
(bad)
fistp
jmp
sbb
fwait
scas
add
mov
cmp
jle
add
mov
arpl
scas
add
(bad)
jno
pop
loope
mov
mov
push
icebp
test
sbb
dec
sbb
stos
mov
in
pop
inc
int3
sub
sub
or
lock
jb
xchg
pop
mov
stos
adc
call
cmp
push
cmp
sbb
sbb
rol
mov
das
or
sub
sub
dec
adc
sub
pusha
push
xor
rol
or
adc
dec
mov
sbb
xor
and
cdq
ds
sbb
jmp
test
ret
jge
pop
in
jbe
adc
pushf
and
xchg
mov
outs
mov
mov
adc
sbb
out
aaa
(bad)
aas
pop
loope
aad
sahf
cmp
pusha
add
mov
scas
loop
sub
adc
jmp
mov
inc
imul
inc
pop
mov
js
pop
jnp
push
sub
cld
and
mov
push
xor
jno
es
mov
jmp
pop
jmp
or
das
dec
cld
sub
enter
xchg
dec
inc
call
mov
adc
jno
mul
mov
imul
jp
aam
in
and
aad
push
adc
add
mov
push
xor
out
dec
jmp
ds
push
or
pushf
sub
loopne
fdivr
mov
movs
inc
retf
sbb
lea
sub
jge
xor
jne
hlt
stos
cmp
jle
pusha
pop
jp
add
hlt
shr
push
push
cmp
pop
stos
sub
je
adc
push
sub
or
pop
sbb
push
inc
cmc
sahf
fisubr
lea
push
xchg
icebp
lods
jb
aam
test
cmp
cmc
hlt
dec
aas
jp
call
sub
ins
xchg
sbb
sbb
sub
in
int3
jmp
adc
aas
sar
add
cmp
(bad)
push
sbb
not
(bad)
ins
or
lea
mov
ret
aad
jae
cli
cmp
into
ins
sub
fcom
iret
retf
pop
ins
repz
cs
fwait
test
and
lods
xchg
and
sbb
xor
lods
add
sti
sahf
js
pop
or
std
adc
and
outs
xor
adc
cmp
fwait
pop
adc
add
sub
adc
inc
mov
mov
clc
jle
loop
sbb
dec
mov
and
arpl
(bad)
xor
sahf
pushf
sub
add
addr16
or
xor
popa
les
and
into
cli
push
inc
pop
(bad)
fmul
cmp
shl
call
jmp
arpl
inc
ror
test
push
lahf
es
or
inc
inc
cs
cmp
not
sub
int
xchg
scas
out
int3
jbe
pop
cmp
xor
rcl
cdq
ret
cmp
clc
xor
addr16
(bad)
arpl
mov
aas
mov
push
shl
pop
(bad)
retf
pop
jns
enter
mov
js
mov
int
mov
jecxz
leave
dec
push
or
mov
pop
sub
stc
lea
mov
xchg
cdq
int
push
sub
mov
xchg
dec
js
addr16
(bad)
les
hlt
stos
add
popa
data16
mov
sbb
popf
call
add
aas
js
in
mov
inc
pop
fwait
lock
scas
cmp
adc
rol
cmp
aam
push
sub
mov
or
push
loope
cmps
cwde
jmp
rol
call
or
sbb
xor
jns
xchg
push
jg
mov
movs
fcom
cmp
int3
lock
movhps
aad
jno
push
inc
rcl
stos
cmp
add
jne
cli
loope
cmp
outs
ficom
je
or
neg
aas
inc
movs
test
std
xchg
or
out
dec
jmp
mov
jecxz
push
std
lods
push
gs
retf
scas
sbb
aas
cmp
sbb
mov
mov
adc
add
xor
mov
jmp
dec
push
or
adc
push
neg
in
cmps
dec
popa
mov
dec
imul
rol
xchg
cmp
stc
mov
mov
div
jno
shl
jb
pushf
mov
retf
sbb
bound
jge
jle
add
scas
or
clc
pop
into
inc
xchg
loope
popf
lds
add
fwait
xor
int3
lods
xchg
push
mov
dec
cmc
mov
ret
push
imul
mov
pop
stos
sub
push
stc
lods
xchg
pop
jecxz
dec
push
not
es
dec
push
or
mov
jae
(bad)
pop
ins
aad
xchg
cmp
cwde
jne
jno
xor
xchg
mov
mov
scas
dec
add
adc
xchg
sub
out
cmps
inc
mov
push
gs
pushf
cmps
sbb
data16
scas
or
jmp
mov
inc
jns
movs
imul
das
mov
push
mov
dec
dec
in
ror
push
dec
xor
or
fstp
push
fs
inc
loop
push
sbb
mov
popf
psrad
and
jecxz
cmp
or
cmps
adc
jb
ins
jl
sbb
sbb
mov
push
xchg
mov
neg
or
pop
outs
mov
mov
and
jae
push
add
stos
jo
jns
shr
sti
dec
loopne
xor
mov
push
mov
xchg
xchg
ret
daa
aad
push
xchg
retf
pop
jle
mov
dec
push
aam
add
and
in
lods
mov
inc
out
xchg
pushf
(bad)
in
out
lods
cmp
rol
int
inc
mov
js
and
add
sbb
outs
jae
cmp
dec
neg
lahf
xchg
mov
push
push
je
sub
push
push
pop
lock
or
(bad)
fisubr
cmp
in
les
idiv
push
je
push
sub
pusha
add
mov
(bad)
adc
add
xchg
push
mov
dec
arpl
adc
and
push
push
xor
cmp
jecxz
out
jl
xor
pop
add
or
mov
adc
adc
aam
mov
mov
ret
(bad)
call
data16
adc
test
pop
(bad)
movs
pop
cdq
and
jp
(bad)
fs
retf
push
lds
jmp
sub
and
in
cmp
and
retf
xor
movs
test
xchg
cld
leave
pop
ret
in
ds
sub
sub
jns
sbb
pop
std
out
mov
pop
loope
dec
adc
xchg
ins
(bad)
push
and
jp
ror
and
or
or
mov
jge
test
sbb
push
popw
push
fist
inc
(bad)
movs
adc
repnz
retf
inc
mov
xchg
mov
inc
add
xchg
cmp
call
mov
xor
sbb
adc
push
push
cli
inc
test
cmp
sbb
popf
inc
pop
jbe
dec
or
or
arpl
fdiv
out
jbe
in
out
cmp
inc
fsubr
push
outs
nop
aaa
and
cmp
pop
inc
outs
in
int
xchg
xlat
fild
push
fld
jl
sub
xchg
jbe
in
mov
xor
scas
mov
or
add
mov
lods
sti
xchg
adc
fist
adc
cdq
inc
adc
cli
aas
lds
mov
pusha
(bad)
ds
int
rol
in
sub
xchg
icebp
jl
ins
cmp
push
adc
push
cld
pop
jno
and
cdq
mov
mov
sub
pop
imul
pop
retf
xchg
lods
out
neg
pop
inc
mov
push
cdq
js
jg
sub
in
das
enter
sbb
sub
fld
xor
retf
push
xchg
enter
loope
je
lods
dec
movs
mov
ins
inc
push
xchg
stc
pop
ins
cmp
dec
enter
pop
jb
fisubr
push
push
jbe
adc
inc
pusha
jl
out
pop
shr
pop
shl
and
inc
clc
sar
imul
sbb
xor
xbegin
xor
adc
cli
lods
cmp
imul
sahf
sbb
(bad)
jnp
imul
cmc
xchg
mov
or
dec
retf
add
add
nop
lahf
lods
adc
iret
sbb
mov
bnd
inc
push
add
outs
pop
cmps
pop
jecxz
mov
push
sbb
iret
shl
xlat
lods
(bad)
jns
push
mov
sub
cmp
jp
nop
ror
retf
adc
push
data16
setle
cmp
sub
cmp
push
ret
sub
je
loop
(bad)
int
and
ins
adc
inc
(bad)
int
mov
mov
xor
les
cmp
jge
shr
call
jp
cmp
test
fisttp
cmps
shl
dec
mov
jns
jae
ffreep
sub
jae
sub
push
scas
js
mov
ins
sub
cdq
pop
test
sbb
and
fldenv
cmp
add
jo
data16
enter
out
push
bound
or
mov
scas
(bad)
add
scas
jb
popf
imul
mov
jp
jae
jmp
mov
push
adc
shr
xor
mov
and
add
movs
xchg
adc
push
in
(bad)
jo
jns
jno
rol
iret
and
dec
jo
aam
adc
scas
dec
mov
shl
mov
pop
lock
xor
sbb
call
jl
xchg
test
fstp
jae
jb
pop
retf
sar
sub
sti
jnp
adc
mov
loope
addr16
and
sbb
mov
mov
les
and
movs
jno
pop
ds
pop
sub
cmp
out
cmp
push
call
cmp
cdq
xchg
jl
or
pushf
jecxz
sbb
cmp
add
in
lods
or
add
ds
sbb
retf
gs
aas
nop
retf
into
lea
pop
into
inc
xor
mov
leave
loopne
fwait
test
pop
push
jmp
std
test
push
out
add
xchg
sub
test
int
jbe
mov
mov
sbb
pop
add
mov
retf
daa
xor
dec
into
xchg
into
pop
xchg
shr
shl
sub
push
dec
mov
cmp
ror
cmc
lods
fldenv
shl
lods
mov
std
push
sub
(bad)
shr
ret
sahf
pop
push
mov
and
mov
jg
or
fdivr
xchg
or
out
or
add
adc
push
adc
add
push
das
in
test
iret
push
jmp
ss
xlat
pop
repnz
ds
inc
mov
cmp
lods
dec
lea
sub
push
(bad)
dec
rcr
cmc
test
push
xchg
call
and
cld
inc
outs
das
test
inc
adc
and
add
loopne
dec
retf
mov
sar
pushf
adc
hlt
sbb
fwait
ins
add
pushf
jnp
xchg
div
xor
sub
jns
es
div
push
push
ret
mov
or
fwait
mov
and
sbb
cwde
stos
cmp
fwait
movs
fsubr
pop
xchg
cld
(bad)
ja
sbb
jno
(bad)
add
ds
into
int
ins
jb
mov
jg
add
fcom
jecxz
dec
or
(bad)
call
push
push
xchg
icebp
in
iret
les
mov
clc
pop
sub
dec
cmc
push
test
xor
and
pop
or
scas
jmp
dec
dec
xor
ins
scas
or
fcmovu
arpl
fidiv
lods
outs
dec
js
jb
addr16
adc
cdq
aas
mov
push
adc
jmp
sub
jmp
cmp
sub
pop
mov
add
mov
cld
sub
out
cmp
sub
mov
jmp
cli
aaa
leave
mov
mov
xor
pop
iret
cmp
dec
test
ins
dec
mov
lds
in
mov
cmps
mov
push
mov
stos
mov
sysret
fnstcw
sub
mov
inc
push
out
or
loop
pop
add
pop
inc
lds
popf
mov
inc
cmc
dec
rol
int3
mov
add
mov
xchg
ret
retf
and
sbb
sub
leave
arpl
inc
adc
and
mov
pop
sbb
mov
inc
sbb
and
je
in
xchg
mov
cmc
shl
ins
and
in
mov
es
pop
sbb
ror
cmp
cli
scas
add
jne
jo
outs
out
out
push
call
fidivr
xor
mov
xor
pop
cli
mov
add
and
dec
jecxz
add
push
ds
mov
into
cmp
jg
push
cld
adc
sbb
lods
pop
sbb
out
adc
push
push
outs
or
adc
jl
mov
jo
fadd
push
cs
stc
movs
scas
pushf
sub
dec
push
fisttp
adc
push
call
jmp
cmp
(bad)
adc
ror
jmp
jle
adc
hlt
ds
addr16
hlt
sbb
mov
shl
lahf
pusha
pop
in
loop
and
pop
cmp
ins
xchg
retf
lahf
imul
add
shl
sahf
clc
inc
mov
adc
dec
xor
gs
sbb
sub
sti
xchg
arpl
(bad)
scas
shl
jnp
pop
adc
push
add
push
dec
mov
sbb
scas
outs
iret
sub
add
cdq
xchg
xor
js
jle
xchg
add
inc
jmp
nop
push
scas
jle
scas
call
repz
lods
clc
aaa
xchg
(bad)
mov
movs
jbe
test
aam
stos
inc
lea
jb
add
(bad)
mov
repz
push
xor
xchg
ficomp
jns
or
stc
and
mov
pop
(bad)
aas
mov
jle
lods
cmp
pop
mov
test
push
loope
mov
dec
cmp
pop
pop
sub
sub
cli
out
mov
add
push
dec
push
mov
adc
lds
out
cmp
movs
aam
mov
pop
inc
fistp
out
add
(bad)
mov
xchg
jbe
mov
es
push
dec
add
adc
and
mov
nop
jnp
inc
leave
cwde
add
mov
and
les
sub
and
push
sub
pop
push
jae
test
mov
movs
pop
aam
leave
jmp
push
js
sub
repz
inc
inc
fsubr
imul
out
aam
mov
jle
pop
adc
sbb
cmp
in
int
lahf
std
mov
call
bound
jmp
jge
lds
popa
dec
movs
(bad)
pop
lahf
stc
pop
cli
das
xchg
out
cmp
xchg
stos
dec
aam
loope
lods
jnp
imul
add
inc
xchg
(bad)
push
loope
sahf
mov
inc
pop
jmp
cmp
pop
inc
push
lods
ins
rol
sbb
and
ins
push
and
cmp
mov
jns
jge
call
(bad)
sbb
stc
adc
ja
dec
xlat
pop
mov
jmp
cmps
shr
xor
or
pop
jecxz
arpl
xor
jecxz
sbb
fwait
xchg
(bad)
adc
stos
int
or
pop
(bad)
nop
repz
cmp
aad
jb
dec
mov
pusha
inc
mov
pop
xchg
push
mov
call
xchg
inc
es
loopne
cmp
pop
mov
(bad)
loop
inc
or
arpl
std
sbb
mov
daa
inc
jo
jge
jbe
jno
sub
repnz
jnp
jecxz
sbb
daa
xor
push
into
mov
call
clc
sbb
lods
sbb
bound
shl
jmp
xor
xchg
sub
cld
jmp
cmps
push
loope
out
and
cmp
icebp
inc
or
out
sub
outs
add
mov
test
jbe
out
dec
jns
(bad)
or
out
jg
lea
in
xor
div
mov
rol
lahf
popa
lea
and
adc
dec
test
fdivrp
jl
movs
dec
add
dec
sub
pop
rcr
or
mov
mov
loope
cmp
push
pop
aad
push
mov
repnz
mov
xchg
movaps
repz
outs
jl
lds
dec
pop
test
jmp
rcr
pop
cmc
ins
add
aas
mov
inc
and
adc
aam
call
leave
inc
cwde
cmc
cli
mov
fcom
lahf
mov
dec
movs
cmp
nop
or
fiadd
jns
pop
cdq
adc
js
aad
push
sub
nop
retf
or
sbb
push
ret
mov
mov
les
cmp
es
inc
in
std
cmp
add
in
pop
xor
fnstenv
or
and
addr16
in
lods
retf
inc
adc
sub
out
mov
fcomp
sub
mov
mov
pop
(bad)
push
call
out
mov
fs
arpl
mov
jne
mov
mov
fisttp
imul
push
mov
leave
xor
xchg
lds
push
cwde
cmps
pop
in
rol
jle
popa
mov
addr16
sub
in
adc
lahf
call
xor
jl
cmp
xor
es
shl
mov
push
imul
inc
xchg
jnp
push
rcl
imul
(bad)
mov
add
push
or
stos
sbb
or
sbb
mov
sbb
rcr
cwde
pop
mov
jge
adc
sbb
inc
add
jle
fdiv
adc
cmps
(bad)
mov
pop
shl
add
dec
inc
and
mov
call
outs
pusha
scas
cmc
into
push
es
mov
pop
fisub
das
dec
inc
addr16
dec
cmc
and
shl
push
push
mov
sub
(bad)
hlt
iret
pop
and
(bad)
movs
jp
ret
xor
shr
and
ror
jno
pop
outs
pop
mov
mov
mov
fmul
fbstp
les
push
mov
in
push
dec
xor
cmp
fnstsw
sbb
add
in
cmps
ins
out
loope
(bad)
shl
jle
sbb
leave
or
add
fwait
add
outs
aam
lods
hlt
inc
and
cmp
push
stos
ins
dec
sub
(bad)
je
fisub
inc
mov
neg
ins
ss
cmp
push
pop
loope
or
loope
inc
and
sub
dec
leave
pop
shr
add
xchg
inc
add
push
outs
xchg
imul
inc
xor
pop
fisubr
test
mov
cdq
mov
add
popf
fnstsw
pop
inc
pop
les
(bad)
cmp
(bad)
stc
and
inc
loopne
xchg
xchg
fcom
jmp
add
(bad)
inc
mov
and
mov
int3
sub
add
(bad)
bnd
pop
sub
into
pop
mov
xchg
lods
fist
jmp
pop
in
mov
imul
and
and
fild
pop
mov
popa
daa
xor
mov
aad
repnz
xchg
xor
pop
and
xor
or
stos
inc
mov
outs
mov
sub
mov
jmp
rol
xor
lea
out
mov
mov
hlt
pop
xor
pop
in
cmps
stos
cld
mov
xor
pusha
iret
sub
stos
push
push
xchg
mov
int
ja
(bad)
cmp
mov
and
mov
lods
adc
ret
fst
mov
cmp
sbb
pusha
ja
pop
scas
sbb
test
cmps
mov
cmp
pop
adc
lahf
ja
push
pop
popf
clc
mov
dec
or
sub
fisub
rcl
mov
add
mov
popa
dec
adc
out
dec
scas
fsubr
int3
imul
pop
(bad)
in
ins
loopne
lahf
ror
adc
inc
push
push
ret
repz
out
lods
mov
lods
add
pop
fs
mov
dec
sahf
mov
push
imul
mov
test
rcl
sahf
ret
mov
add
aam
not
mov
aas
adc
push
mov
lds
and
jnp
mov
cmc
dec
dec
sti
jmp
loope
(bad)
xchg
popa
sbb
sbb
add
pop
sbb
and
dec
ds
dec
mov
cld
inc
lods
adc
pop
mov
repnz
push
in
mov
mov
mov
mov
and
jge
jecxz
mov
arpl
jl
lock
pop
jbe
push
popa
inc
dec
mov
rcr
test
adc
adc
add
and
push
push
rol
push
add
mov
ffreep
lea
mov
test
sub
clc
pushf
push
adc
mov
cmp
imul
adc
cli
lds
jo
pop
sahf
rcl
lea
cmp
shr
push
sbb
mov
push
lods
jns
js
xchg
add
xor
pusha
sbb
aaa
and
mov
sub
outs
add
data16
hlt
mov
ret
pop
es
or
gs
ja
shl
sub
hlt
enter
fcomp
or
sub
push
jnp
sahf
mov
xchg
stc
fisubr
or
push
fs
dec
adc
jns
std
addr16
push
mov
xchg
xchg
sub
sbb
pop
sbb
xchg
fistp
cmp
(bad)
push
dec
pop
add
stos
push
mov
xchg
jmp
cmps
jmp
enter
push
mov
(bad)
out
(bad)
enter
jbe
inc
ins
loopne
add
in
cmps
inc
rcr
into
mov
call
(bad)
out
outs
adc
or
lar
outs
push
adc
addr16
push
inc
and
movs
and
push
clc
lods
sub
push
scas
leave
add
mov
sub
xor
jbe
and
add
(bad)
out
inc
dec
sub
and
fs
xchg
adc
sub
movs
push
sbb
push
cld
shl
cld
dec
pusha
clc
and
aad
shl
popf
frstor
daa
xchg
or
mov
ds
pop
stc
push
cli
push
pop
push
pop
fld
push
dec
cmp
enter
jmp
mov
or
pushf
mov
xchg
popf
(bad)
pop
sbb
inc
push
sbb
add
sub
fcomp
jne
mov
xor
jne
mov
dec
out
sbb
dec
xchg
inc
pop
imul
gs
mov
xlat
(bad)
lds
inc
ficomp
scas
push
and
icebp
pop
push
stos
ja
ret
xchg
cli
sub
cwde
shl
call
add
and
jns
test
fcom
pop
add
daa
xor
xchg
(bad)
arpl
mov
push
pop
push
div
pop
clc
xchg
iret
(bad)
call
push
fadd
stc
sub
sti
enter
sbb
and
xchg
xor
(bad)
aaa
and
bound
ror
sub
rcl
mov
retf
adc
frstor
inc
lea
jecxz
add
je
aaa
clc
push
arpl
stc
push
inc
dec
mov
loope
ins
mov
out
std
addr16
sub
jns
std
fild
(bad)
js
mov
add
inc
inc
bound
dec
inc
ins
aad
ins
mov
cs
enter
daa
ins
inc
ss
pop
xor
mov
adc
mov
repz
inc
ja
(bad)
es
fisubr
arpl
fld
fadd
mov
das
jle
mov
mov
pushf
xor
push
lods
or
push
mov
out
ins
xchg
pushf
mov
hlt
mov
repnz
mov
inc
imul
jno
or
xor
(bad)
clc
fidivr
int3
push
fldenv
and
mov
ficomp
repz
pop
add
cli
mov
mov
ret
ds
addps
xchg
fs
das
sbb
fwait
sub
xlat
xor
loopne
mov
or
aad
adc
mov
or
in
arpl
jns
je
push
and
mov
out
sbb
dec
loop
or
mov
in
cwde
ins
iret
retf
mov
hlt
mov
jno
add
mov
or
imul
mov
and
movs
sbb
icebp
out
cwde
push
out
hlt
cmp
push
dec
(bad)
imul
inc
clc
jbe
out
fistp
(bad)
enter
push
push
pop
dec
daa
mov
stos
jne
popf
mov
ficom
cmp
int
movs
cmp
fdivr
(bad)
mov
pop
aaa
pop
shr
push
idiv
es
pop
pop
mov
mov
jae
int
movd
je
add
sub
icebp
xchg
xchg
in
mov
push
jmp
mov
test
pop
sub
xchg
dec
retf
es
ins
cmp
ds
fsubr
rcr
inc
aas
sub
cmc
xor
(bad)
pop
aam
jp
sub
cmp
fst
fnstenv
add
sub
test
push
mov
add
mov
scas
dec
iret
in
fucomi
aam
inc
mov
call
fiadd
pop
xchg
shr
add
and
ja
and
cli
mov
sbb
ss
imul
sbb
xchg
outs
xor
jge
in
or
add
shl
pusha
jmp
loopne
jge
inc
(bad)
mov
adc
jge
xchg
adc
or
lods
cld
pop
inc
push
popa
outs
fcomp
stos
jo
fcomp
or
dec
and
lods
shl
retf
add
xor
xor
sbb
enter
inc
xlat
mov
mov
xor
jne
jno
mov
in
inc
cmp
nop
adc
hlt
jle
add
jmp
adc
pop
inc
in
add
test
lods
aad
jmp
add
(bad)
cmp
imul
test
lahf
pop
inc
pushf
sbb
jo
push
jmp
sub
hlt
and
cld
imul
repnz
hlt
outs
jne
fld
out
pop
rcr
pushf
push
movs
pop
ficom
mov
sub
sar
fs
mov
dec
mov
int
pusha
icebp
xchg
sbb
cs
std
push
jl
repnz
mov
mov
ins
(bad)
xchg
imul
fsubr
fdivr
test
outs
push
cmc
icebp
das
add
shl
arpl
imul
int
outs
push
and
sub
mov
ja
lock
loope
fcom
movs
je
or
cld
sbb
push
(bad)
lods
stos
out
push
ja
xchg
shr
(bad)
cmp
enter
repnz
cld
movs
cmp
fwait
enter
mov
bound
(bad)
cli
jns
loopne
xchg
stos
jge
out
adc
push
sbb
mov
xchg
lods
and
jp
loope
jg
xor
popf
out
out
imul
cmp
(bad)
jmp
sub
jl
mov
or
retf
icebp
add
cmc
add
clc
fst
jnp
rcl
aad
bound
in
leave
fnsave
scas
pusha
sub
shr
dec
mov
je
cmps
inc
fstp
cdq
and
(bad)
int
mov
shl
pop
cmp
sbb
dec
lahf
mov
mov
sbb
iret
cmp
push
shr
dec
or
mov
test
inc
ds
stos
xor
cs
ror
mov
lea
jo
cwde
cmps
xor
stc
dec
pop
mov
adc
imul
push
lds
or
repnz
ror
sbb
out
loopne
iret
ret
test
or
or
fisttp
repz
xchg
mov
cmp
push
dec
jno
and
icebp
nop
sar
imul
out
(bad)
xor
cmps
push
push
cmc
jmp
add
inc
mov
lsl
or
cmp
pop
aad
lods
jg
pop
fstp
sub
xchg
ins
mov
mov
cmp
pop
cmp
or
pop
popf
pop
hlt
inc
push
out
mov
ficom
push
xor
push
mov
mov
ror
push
push
loope
ds
xlat
fnstsw
pushf
jne
xchg
les
pop
cmp
in
scas
push
push
cmc
aas
sahf
data16
cld
xor
pop
es
fs
pop
(bad)
retf
repz
mov
mov
ror
jp
mov
mov
mov
xlat
mov
pop
jmp
mov
idiv
outs
adc
mov
adc
cmp
dec
scas
aam
movd
rcr
fcomp
arpl
rcr
into
jo
push
pop
dec
mov
inc
mov
jp
cmp
fld
push
dec
push
cmp
jle
sub
int
repnz
sahf
enter
aam
fcomp
movs
cwde
add
push
je
and
out
pop
mov
dec
push
int3
(bad)
mov
pop
cmp
into
pushf
cmps
sub
mov
(bad)
pop
xchg
push
movs
clc
imul
mov
cwde
jno
fld
mov
fild
jg
test
jmp
ficomp
test
inc
mov
shl
movs
jbe
sbb
cmp
pop
adc
push
xchg
out
rcr
pop
mov
or
jle
adc
sub
xor
push
pop
test
pop
xchg
stc
xchg
jno
in
fidiv
mov
in
and
sub
clc
cmp
sub
idiv
jp
mul
out
sbb
out
lods
xchg
push
jecxz
ins
test
mov
fcomp
stos
popf
sbb
rcr
xor
out
mov
add
jg
cmps
call
ja
shl
ds
mov
cmc
mov
shl
xlat
sub
xchg
movs
(bad)
adc
mov
nop
jns
or
fisttp
(bad)
mov
add
mov
sub
(bad)
xor
xchg
jno
and
int
xor
jo
jns
imul
mov
push
pusha
dec
mov
les
test
psubsb
cmp
ret
call
outs
cld
push
daa
ffreep
movs
mov
and
lods
jmp
clc
test
fst
cmps
pop
xor
inc
add
pop
mov
outs
adc
call
call
sbb
xchg
das
pop
es
rcl
js
in
xor
mov
in
pop
icebp
lds
retf
add
call
xchg
repnz
cmc
mov
pop
bound
dec
pop
jl
jg
(bad)
mov
hlt
mov
(bad)
and
and
adc
cmc
shr
dec
jle
adc
stc
popa
sub
cmps
mov
push
mov
fsubrp
(bad)
or
fwait
das
std
dec
mov
ja
aad
and
push
aaa
outs
push
dec
mov
jne
fwait
pop
mov
jno
test
xor
mov
jp
fidiv
sbb
push
sbb
inc
xchg
mov
cmp
add
xlat
scas
cwde
pushf
ds
test
lds
jmp
out
inc
jp
ret
mov
repz
add
inc
mov
lods
xor
jl
or
sub
inc
and
loop
loop
xchg
xor
std
mov
int3
pushf
sbb
sbb
or
mov
jb
loope
arpl
xchg
adc
enter
cs
adc
dec
or
xor
pop
pusha
inc
enter
inc
cmp
mov
scas
pop
call
add
shl
shl
enter
push
test
inc
push
retf
imul
dec
adc
xchg
sub
fwait
xchg
stos
retf
dec
sbb
pop
aad
les
imul
jg
outs
cmp
mov
mov
movs
add
sbb
jnp
out
mov
out
adc
mov
clc
sbb
stc
jg
fadd
fwait
pop
xchg
jmp
iret
jno
sahf
mov
bound
mov
sbb
lods
mov
dec
sbb
dec
sbb
adc
(bad)
adc
xor
sbb
ret
dec
aad
scas
in
(bad)
inc
xor
js
mov
shl
and
addr16
adc
cmp
out
test
pop
hlt
mov
fldenv
jns
popf
imul
retf
pop
daa
in
enter
in
call
dec
inc
and
in
mov
push
sub
cmp
sub
ds
outs
scas
pop
or
pushf
jle
rol
mov
inc
aad
pop
jmp
jp
mov
ret
lods
dec
push
dec
pop
push
leave
xchg
sub
pop
xchg
ror
ret
dec
retf
loopne
stos
push
iret
cdq
xchg
std
sub
or
jecxz
push
push
(bad)
cdq
push
cmp
jle
mov
dec
sbb
aad
jle
test
fistp
mov
fidiv
retf
xor
imul
pop
ret
icebp
sbb
sbb
inc
out
movs
xchg
and
retf
and
inc
jno
xchg
mov
mov
fwait
sub
into
mov
xchg
xor
inc
xor
out
xchg
dec
pushf
sub
or
or
inc
dec
adc
repnz
sub
popf
pop
fucomip
or
mov
mov
popa
mov
into
mov
cdq
mov
(bad)
test
xlat
int3
xchg
cdq
loopne
gs
push
stos
(bad)
in
pop
push
lea
out
dec
scas
or
mov
inc
div
mov
or
mov
xchg
cmp
cmp
sbb
sub
and
xchg
jne
movs
fcomp
jge
add
bound
dec
fdiv
lods
dec
pop
cwde
loopne
mov
dec
sbb
daa
adc
push
pop
loop
jmp
das
out
jmp
cwde
pop
cli
pop
push
ins
and
xchg
adc
les
div
cmp
div
add
aad
mov
mov
jbe
xchg
dec
clc
xor
popa
adc
mov
leave
(bad)
fcmove
and
sbb
sti
retf
ds
mov
rol
test
cmc
xchg
icebp
out
inc
push
ror
mov
inc
ffree
ins
stos
repnz
mov
popa
cdq
mov
xor
fs
fs
in
cmp
dec
rcr
scas
cmc
add
mov
push
mov
shl
xchg
xchg
mov
and
call
out
int
retf
jp
nop
lds
in
ja
lock
mov
cdq
push
stos
jb
xchg
stos
push
pushf
movs
mov
push
leave
es
loopne
pop
inc
cmp
dec
adc
sbb
in
inc
in
loope
lods
jo
mov
or
repnz
scas
sub
push
mov
sahf
ret
icebp
mov
sbb
retf
xchg
ret
jp
cmps
xor
imul
sbb
inc
retf
adc
ds
fwait
xor
neg
push
jae
mov
xrelease
cli
(bad)
adc
adc
test
push
mov
or
(bad)
pop
jmp
adc
cmps
mov
pop
cmp
fcomp
push
mov
bound
dec
mov
cmp
repz
es
(bad)
je
popf
xchg
enter
sbb
jno
mov
push
inc
sub
xchg
jbe
mov
jge
ds
mov
xchg
inc
push
mov
into
xor
cmps
adc
pop
lods
nop
xor
jns
pop
mov
or
repnz
xor
mov
mov
mov
mov
inc
stos
mov
in
pop
xchg
cmps
(bad)
mov
jne
rcr
xor
in
daa
dec
dec
imul
inc
or
pop
or
mov
fstp
hlt
shl
or
pusha
sbb
mov
dec
adc
add
ss
dec
(bad)
sbb
sti
jecxz
mov
xor
mov
mov
retf
xor
pusha
xchg
jno
cmp
rcr
enter
(bad)
jbe
shr
pop
js
dec
arpl
ja
addr16
lods
retf
shl
push
out
ins
lock
xchg
push
call
and
js
and
popf
ds
data16
js
shr
sub
xchg
call
add
xchg
movs
jbe
xchg
inc
pop
retf
movs
das
push
pop
mov
aam
mov
jno
sub
cdq
mov
push
mov
pop
shl
cmp
pop
jo
or
sti
inc
cmp
bound
dec
inc
neg
inc
sub
jle
cmp
jns
or
dec
lahf
jns
adc
xor
mov
jecxz
ja
int3
movs
or
pop
ins
adc
mov
or
or
mov
or
imul
pop
xchg
adc
push
aad
or
jmp
hlt
push
mov
mov
push
xchg
aad
inc
jmp
pop
push
jo
mov
sbb
cli
outs
cmps
or
pop
fbstp
mov
pop
sbb
xchg
xchg
adc
mov
pop
or
lahf
sub
stc
add
sbb
sti
cmp
sbb
inc
cmc
pop
inc
daa
sbb
jecxz
ret
xor
ins
or
or
add
iret
aaa
test
xor
pushf
lds
adc
xrelease
fxch
ret
xor
push
dec
rcr
sub
imul
ret
push
retf
push
sub
cwde
jno
mov
or
or
(bad)
jnp
mov
je
mov
mov
and
int
mov
ja
xchg
mov
mov
dec
mov
mov
pop
pop
loope
cmp
add
adc
jmp
cmp
jecxz
adc
xchg
sbb
shr
adc
ins
loopne
push
inc
stos
mov
int3
loopne
dec
xor
(bad)
sub
dec
sahf
dec
(bad)
xchg
(bad)
shl
inc
aad
sub
adc
repnz
inc
lods
addr16
test
repnz
jb
sub
adc
jae
stos
imul
xor
adc
(bad)
mov
ja
outs
xchg
mov
(bad)
push
jb
shl
cs
xor
sahf
push
inc
inc
xchg
loop
cmp
fs
sbb
xchg
and
mov
push
sub
jp
inc
sub
fwait
mov
cmp
lahf
cmp
dec
inc
ins
or
mov
mov
jmp
mov
cmps
repz
iret
pop
ror
cli
cmps
jp
xchg
das
loope
ror
mov
xor
retf
xchg
jmp
loopne
inc
repnz
std
ins
xchg
shl
sub
inc
jmp
jp
dec
(bad)
shl
or
inc
pop
pop
icebp
fsubp
mov
aas
or
pop
and
nop
cmps
pop
int3
jb
jle
mov
xor
xchg
sub
xchg
imul
loope
mov
push
cmp
xor
jecxz
pop
cmps
push
add
adc
sbb
inc
jne
or
mov
sub
cmp
or
ds
clc
popf
mov
in
sbb
lahf
cmp
sub
push
push
scas
dec
imul
inc
lock
popa
into
aam
nop
loopne
and
test
and
leave
cmps
mov
jp
inc
sbb
clc
leave
in
pusha
or
aad
into
cmp
jb
fs
cwde
inc
cmp
movs
(bad)
enter
and
mov
ins
mov
jo
lods
adc
xchg
add
xchg
cmp
or
test
cmc
and
fwait
inc
or
dec
fdivr
stos
mov
xchg
dec
jmp
mov
pop
leave
xchg
aaa
loopne
cli
sbb
scas
or
adc
dec
je
pop
mov
fild
ficomp
jae
dec
inc
fcmovbe
mov
push
jle
sub
jae
lods
outs
sub
into
jb
mov
sub
add
int
xchg
adc
ds
push
sub
aam
arpl
out
mov
scas
xchg
sbb
jecxz
ficom
jle
gs
ret
rcl
retf
adc
jle
or
mov
clc
mov
sbb
cdq
jp
pusha
leave
iret
out
mov
int
inc
aaa
js
mov
sub
add
bnd
jmp
inc
dec
les
ds
out
add
xor
(bad)
add
aam
jne
imul
and
and
out
out
dec
add
ins
sub
inc
dec
call
mov
int
test
ins
xchg
(bad)
out
dec
dec
ss
fucomp
imul
dec
cli
clc
das
xlat
sub
fstp
xchg
stc
mov
sti
ret
test
add
push
push
int3
fstp
das
xchg
call
loop
dec
add
or
xchg
gs
ins
and
int
mov
push
fldcw
push
adc
xchg
cmp
fst
cmp
cmp
cmp
push
fistp
into
xchg
jle
data16
iret
jecxz
push
rcr
int
xchg
sub
mov
xchg
int3
imul
mov
leave
loop
(bad)
std
int
pop
fadd
not
mov
mov
das
and
inc
add
dec
lahf
into
inc
adc
fpatan
add
xlat
popa
sahf
(bad)
out
fs
jns
or
cdq
fidiv
push
aam
lea
xchg
inc
cdq
inc
add
sub
in
inc
xchg
sbb
in
pusha
or
scas
out
int
jmp
sbb
call
jns
jne
scas
jp
inc
push
push
inc
mov
js
pop
jmp
and
leave
out
out
add
sbb
sahf
or
stc
in
ret
sub
adc
inc
call
movs
into
ss
dec
cmp
aad
mov
add
call
aad
xchg
ret
mov
adc
sbb
mov
dec
adc
inc
add
hlt
mov
les
mov
xor
mov
leave
xor
rol
pop
mov
adc
sahf
xchg
lods
sbb
xchg
push
call
ins
lahf
test
and
cs
adc
or
paddsw
(bad)
ins
out
je
test
jmp
push
pop
or
adc
cld
xor
mov
ins
pusha
adc
pop
fst
jmp
or
mov
dec
les
loop
cmp
(bad)
shr
xor
push
xchg
cmp
fadd
shl
fld
mov
lods
and
and
repz
mov
inc
mov
adc
jbe
xor
xchg
ins
pop
pop
push
pop
or
aam
and
pop
(bad)
dec
mov
jmp
rcl
jmp
dec
(bad)
icebp
(bad)
fsub
stc
and
test
punpcklbw
adc
adc
fcomip
mov
arpl
pop
push
push
cmp
push
xchg
and
imul
jne
push
pop
dec
mov
fcmovnu
in
shl
loopne
test
frstor
leave
in
out
dec
(bad)
fidivr
fcmovnu
je
add
int
in
pushf
mov
or
movs
cli
leave
fwait
(bad)
call
sub
jge
inc
jb
sti
add
inc
lds
call
sbb
sbb
(bad)
idiv
shr
mov
add
clc
jp
adc
xor
xlat
jl
and
mov
dec
aad
movs
fldenv
retf
mov
movs
shl
jecxz
mov
lods
ins
pop
pop
push
push
or
inc
dec
ds
sub
adc
xchg
cmp
rol
sub
cmp
pop
mov
ins
(bad)
adc
jecxz
retf
in
and
jnp
jns
clc
adc
and
mov
les
retf
stos
sti
jp
pop
in
jge
xchg
and
xchg
inc
in
enter
jl
or
jns
gs
jmp
sub
inc
je
into
mov
push
dec
push
and
mov
cs
mov
test
adc
push
jns
jo
and
nop
inc
lock
ins
push
not
mov
xor
sbb
add
lods
les
pop
cmp
stc
sbb
nop
fmulp
xchg
out
aad
dec
or
xchg
add
popa
call
pop
test
mov
mov
and
xchg
sbb
repz
call
clc
enter
cmps
dec
lds
push
cmp
or
inc
movs
or
inc
shr
mov
dec
xor
cdq
cwde
jmp
cmp
aam
(bad)
cld
arpl
rol
rcl
or
sbb
les
sbb
and
into
movs
mov
movs
sbb
mul
mov
int
stos
iret
mov
test
push
ror
or
xchg
cmp
xor
mov
inc
push
ss
mov
fsubp
add
retf
jg
test
dec
jge
cmp
hlt
jecxz
push
mov
sub
mov
pop
fidivr
or
ss
sbb
adc
pop
call
ret
push
push
out
mov
data16
out
mov
sar
mov
and
out
clc
ja
xor
cmp
ins
mov
jecxz
xchg
stc
cld
and
cmp
dec
xchg
test
cmc
mov
loopne
mov
mov
retf
push
dec
ret
push
shl
sahf
jmp
das
dec
les
and
add
mov
xchg
cmps
jmp
sbb
hlt
setge
adc
pop
or
dec
jb
and
or
xchg
add
jae
hlt
int3
push
leave
int3
sti
fcos
or
in
inc
push
addr16
cmp
push
cmp
adc
dec
pop
mov
push
enter
(bad)
xchg
jne
sbb
adc
pushf
nop
fidiv
push
lods
jo
mov
inc
jmp
into
int3
mov
adc
movs
cli
xacquire
cld
scas
jle
mov
jbe
rcr
inc
jmp
test
inc
sub
mul
xchg
cmp
fs
xor
ss
test
cmp
aaa
push
cld
xchg
ins
ja
fild
ins
les
imul
scas
jne
sbb
push
retf
mov
rol
inc
dec
mov
lds
jle
pop
xchg
in
out
sbb
std
addr16
movs
lahf
test
xlat
test
out
pop
pop
push
sti
sub
sar
es
push
aam
mov
or
pushf
mov
lds
mov
jmp
mov
inc
dec
lods
inc
mov
in
mov
cmp
cmp
add
or
mov
mov
popa
fcomp
mov
(bad)
push
ds
test
out
mov
mov
(bad)
and
pop
jp
fs
push
into
mov
sti
pop
stos
les
inc
call
sub
loop
loope
mov
out
inc
clc
and
imul
pcmpeqw
xchg
outs
jmp
xchg
pop
sub
test
out
mov
sbb
into
imul
push
xchg
or
add
add
jle
daa
(bad)
scas
or
adc
inc
mov
in
add
dec
cld
repz
mov
lock
fs
rcl
mov
stos
inc
dec
shr
test
sbb
pusha
xchg
jmp
push
push
cli
xor
jle
push
fdiv
outs
fs
inc
icebp
jne
mov
add
add
test
mov
fdivr
adc
adc
and
jmp
(bad)
cmp
lds
test
aaa
ds
test
(bad)
pop
jecxz
fcmovnb
outs
push
xor
mov
leave
push
jmp
sbb
inc
adc
fnstsw
sti
sub
inc
mov
xchg
lds
add
retf
sbb
lea
mov
xlat
out
lahf
push
(bad)
popa
push
adc
xchg
mov
cmp
xor
xchg
js
ret
xchg
mov
mov
pop
sbb
loop
les
rcr
and
call
stc
cmp
mov
push
cmps
mov
xchg
aas
and
pushf
shl
out
dec
mov
(bad)
mov
je
retf
pop
ins
retf
pop
pusha
xor
pop
mov
ins
js
shl
xor
jg
and
mov
adc
ret
push
cli
mov
jge
inc
inc
adc
(bad)
in
nop
or
test
mov
ret
rcr
repnz
mov
push
jae
mov
mov
lds
mov
mov
jns
addr16
aas
cmps
ficomp
mov
les
lods
xlat
and
cld
sbb
push
and
mov
adc
pop
cmp
add
adc
mov
outs
cmp
scas
dec
jns
mov
pusha
sahf
add
xchg
sub
pop
(bad)
mov
mov
fist
cld
pushf
push
sar
sbb
shl
aam
scas
retf
hlt
ror
inc
daa
xchg
pop
outs
out
test
xor
lods
pop
or
inc
adc
repnz
pop
rol
mov
or
pusha
jns
mov
sub
xchg
out
mov
push
int
pop
mov
mov
jo
cs
dec
das
push
icebp
icebp
pminsw
jno
or
fild
cmps
pop
sub
or
(bad)
mov
int
fmul
sbb
inc
or
daa
movs
fstp
imul
sub
push
cwde
push
mov
pop
fbstp
mov
sbb
jbe
mov
xchg
pop
lock
cmc
mov
imul
ins
leave
js
sub
stc
cs
es
scas
dec
aas
mov
icebp
push
pop
adc
and
push
shr
scas
lds
iret
div
dec
sbb
test
add
les
jmp
(bad)
sbb
and
add
xchg
ins
movs
mov
mov
jne
(bad)
aas
sbb
ins
enter
dec
ins
xchg
fistp
dec
mov
fcom
adc
jnp
nop
pop
fs
sahf
ja
pushf
call
loop
nop
aas
pop
cld
std
jle
lods
xchg
adc
sbb
jo
pop
test
mov
jmp
add
xor
and
mov
push
pusha
scas
mov
xor
sub
sti
rol
pushf
xor
retf
out
outs
psrlw
mov
sbb
jp
xchg
out
repnz
(bad)
loop
sub
leave
fnstsw
lahf
jge
mov
gs
pop
inc
lds
push
jecxz
arpl
fwait
mov
lods
adc
cmps
or
ss
das
jae
test
sbb
popf
arpl
jae
cwde
mov
inc
aas
mov
xchg
jl
test
or
sahf
sub
mov
sub
push
cmp
(bad)
ins
add
push
adc
mov
movs
in
jg
loopne
push
dec
push
adc
or
and
fild
into
ror
pop
sbb
jle
out
mov
pop
fimul
mov
push
push
dec
push
xlat
rol
in
mov
and
cmp
fld
push
xchg
jmp
jne
mov
out
dec
clc
pusha
repnz
add
or
leave
push
(bad)
or
test
push
sahf
jmp
mov
push
adc
xchg
arpl
adc
test
xchg
nop
cmps
pop
push
sub
jae
stos
mov
sbb
out
in
inc
adc
cmp
imul
push
push
cmp
call
repz
mov
pop
dec
and
leave
push
daa
pop
mov
mov
div
fdiv
cmp
ins
adc
sbb
push
ins
dec
dec
xchg
mov
sbb
mov
stc
stc
pop
ins
inc
dec
popa
icebp
in
inc
xchg
or
iret
in
xor
xor
jmp
mov
daa
xlat
adc
adc
xor
out
in
and
mov
mov
in
add
or
cmp
sbb
ror
pop
test
outs
cli
xchg
jmp
add
mov
fstp
arpl
in
jmp
test
xchg
sbb
and
repz
and
imul
jp
sub
in
cmp
add
xchg
xchg
dec
(bad)
adc
mov
lods
std
imul
fs
mov
jl
jb
mov
sahf
mov
pop
or
sbb
ss
jmp
loop
dec
xchg
rcl
mov
sbb
jo
pop
lds
retf
or
mov
sti
sbb
les
sti
scas
das
enter
cmp
pop
pop
into
cs
popf
push
add
adc
pop
rcl
jmp
cmp
xor
push
mov
dec
das
push
mov
loop
mov
fdivr
mov
das
adc
movs
(bad)
repz
add
push
mov
retf
mov
je
inc
lahf
mov
sbb
mov
mov
jecxz
mov
outs
mov
mov
inc
push
or
mov
or
add
int
arpl
mov
sbb
xchg
cli
test
jmp
fist
cmp
xor
add
test
or
mov
pop
sub
push
cld
add
mov
cwde
mov
movs
mov
mov
fst
shl
push
cmp
sbb
sahf
imul
push
into
adc
dec
adc
(bad)
stc
fsubr
mov
xchg
outs
mov
adc
(bad)
dec
test
dec
jo
sbb
fist
(bad)
call
and
mul
or
idiv
inc
imul
sti
in
repz
fcmovu
in
out
adc
(bad)
shl
call
cmp
and
loopne
push
loopne
jnp
sbb
and
push
cld
nop
mov
jge
andnps
aam
div
test
mov
loopne
jmp
pop
add
dec
bound
or
call
loop
pop
stc
pop
sub
inc
push
push
pop
sti
xchg
inc
xor
daa
jge
inc
int
lods
add
pop
fwait
jecxz
jecxz
stos
jno
jb
inc
dec
fistp
dec
fisub
mov
adc
imul
in
bnd
out
adc
stos
xchg
sub
cmovo
loope
je
sub
(bad)
repnz
cmps
jmp
jp
jo
ret
sub
into
push
les
jg
xchg
loop
push
out
mov
mov
jmp
test
es
mov
daa
retf
out
add
xor
xlat
or
fwait
out
inc
mov
mov
sbb
rol
sbb
jmp
xchg
shr
fsubr
mov
and
jg
fcom
push
repnz
dec
push
loopne
dec
dec
jl
mov
jns
data16
repz
das
mov
std
(bad)
cwde
pop
adc
call
mov
loopne
push
xor
or
imul
adc
mov
sahf
sbb
or
ror
jl
or
sub
iret
sbb
lahf
pop
in
call
or
xor
imul
pop
mov
sub
jmp
ret
mov
add
pop
pop
and
pop
push
fstp
loop
dec
test
loopne
cmp
ja
lea
sar
fs
and
jg
in
jg
add
inc
aad
xor
xchg
mov
cdq
mov
or
loope
cmp
sub
(bad)
out
push
pop
sti
sbb
std
(bad)
out
dec
push
mov
cs
stc
cmps
mov
inc
cdq
push
sub
jl
inc
in
xor
leave
lods
out
cli
in
fwait
jmp
lods
or
loop
and
dec
in
ss
xchg
xor
in
cld
sub
loopne
pusha
pop
sbb
jmp
cmps
in
sbb
pop
jecxz
push
xlat
xchg
mov
jbe
ret
cmc
dec
jmp
clc
mov
dec
shl
dec
ja
aam
bnd
cdq
js
jae
pushw
xchg
fisttp
fbstp
or
jbe
sbb
ficomp
sub
imul
in
daa
mov
pop
cmc
cmp
call
inc
rcr
sub
mov
push
call
mov
mov
(bad)
mov
mov
inc
and
inc
outs
sub
stos
xchg
or
les
push
add
cwde
pop
test
pop
repnz
leave
int3
mov
les
imul
movs
pop
popa
and
in
aam
dec
xor
fbld
lahf
mov
sbb
sbb
pop
xchg
adc
pop
mov
xchg
mov
(bad)
mov
out
cld
(bad)
xor
arpl
xchg
sbb
and
dec
cmp
imul
aad
ss
and
mov
xor
sbb
cli
sub
hlt
cmp
mul
loop
imul
push
adc
push
lahf
mov
adc
jbe
mov
jle
mov
arpl
or
add
fdivp
push
adc
xchg
retf
(bad)
fadd
jl
xchg
inc
push
cld
and
leave
mov
movs
mov
inc
(bad)
mov
les
jns
adc
dec
sahf
push
cmp
loop
add
popa
pop
pop
add
in
mov
pop
rcr
add
int
jb
int3
fwait
mov
(bad)
cld
adc
or
mov
cwde
pop
push
pop
loopne
dec
or
pop
jecxz
sub
(bad)
xchg
pop
jb
sub
mov
add
xchg
imul
mov
push
add
and
iret
push
cwde
jp
push
xor
xchg
xor
jae
push
pop
jno
mov
int
test
dec
nop
enter
jo
in
pushf
lahf
sti
ja
(bad)
test
xchg
jno
xor
rol
sub
inc
inc
xor
pop
jae
loope
mov
cmp
call
push
sub
scas
adc
pop
int3
int
lahf
push
jge
mov
imul
rcl
jmp
fnsave
(bad)
aaa
pminub
sbb
mov
push
or
sub
or
pop
pop
pop
pop
xchg
mov
je
cmp
scas
jns
and
out
ds
or
fisttp
jle
sbb
popf
jne
add
cld
ins
and
jbe
lods
mov
pop
dec
and
ins
adc
pop
pop
outs
in
ins
push
inc
test
pop
shl
in
arpl
adc
sbb
inc
hlt
xor
cmp
cdq
mov
lea
(bad)
out
jge
and
jae
xor
xchg
xor
sub
cwde
ins
sub
mov
dec
sub
mov
or
and
test
lds
(bad)
mov
xor
add
scas
xchg
shr
repz
and
inc
inc
scas
dec
das
clc
adc
jne
pop
std
adc
scas
je
pop
jmp
arpl
mov
loopne
xor
call
fnstenv
push
jge
mov
jae
push
in
xchg
mov
cwde
rcl
mov
push
loope
mov
fadd
xchg
add
retf
addr16
mov
xor
out
push
push
pop
stos
adc
ins
sub
jg
popa
fidiv
shl
imul
test
dec
pop
hlt
adc
in
lods
sub
lods
cdq
lods
sub
xor
sub
pop
cmp
lods
fadd
es
xor
mov
sar
loope
xchg
inc
push
mov
retf
jnp
addr16
ror
clc
push
and
stos
aam
inc
sti
dec
mov
jns
jno
mov
push
addr16
mov
scas
add
xchg
test
inc
mov
int3
jl
repz
jg
inc
xor
push
(bad)
sub
jmp
mov
mov
int3
aad
xor
ror
sub
loope
mov
pop
imul
aad
scas
lds
mov
(bad)
addr16
push
call
add
xchg
and
add
sbb
lds
jg
mov
out
enter
packssdw
jmp
mov
xchg
test
out
mov
push
in
in
sub
in
loopne
js
outs
dec
(bad)
sti
mov
call
nop
or
push
(bad)
daa
(bad)
enter
loopne
aad
and
arpl
lea
pusha
pop
jbe
mov
mov
mov
inc
into
jle
push
test
push
pop
imul
pop
popa
repz
inc
daa
imul
in
jecxz
and
pop
arpl
mov
mov
lahf
fwait
lods
test
cwde
clc
cmp
in
aam
push
aas
jp
cmp
repnz
loop
push
leave
adc
pop
add
pop
pop
bound
jg
xchg
xchg
and
push
xchg
sti
sub
movs
adc
cmp
setnp
call
cdq
mov
sar
lods
hlt
and
icebp
aas
dec
js
jae
sbb
inc
lods
jo
pop
inc
imul
popa
stos
or
or
mov
sahf
jp
adc
pop
mov
dec
mov
mov
stos
xor
fcmovnu
jno
outs
mov
cmp
(bad)
pusha
scas
ins
pop
daa
fwait
xor
add
adc
mov
xor
xchg
add
pop
inc
xchg
lods
dec
and
enter
in
push
and
xchg
mov
xor
fst
mov
lods
popa
test
es
xchg
lds
inc
movs
mov
into
pushf
pop
imul
fucomi
jmp
push
cmp
adc
dec
nop
fstp
cmp
test
pop
cmp
pop
dec
or
sub
addr16
fidiv
push
push
loopne
stc
jmp
stos
xor
dec
iret
cmp
and
(bad)
cmp
lahf
into
cmp
arpl
call
and
jbe
fist
aas
or
les
inc
jb
dec
std
arpl
imul
mov
mov
jmp
cmp
fwait
mov
iret
aaa
in
mov
ficomp
ret
das
and
test
retf
nop
in
adc
data16
fdivr
cmc
push
imul
push
xchg
push
xchg
das
or
ja
mov
jno
mov
cwde
mov
daa
ficomp
jle
add
mov
xor
in
mov
jmp
jg
call
sub
fsubr
inc
adc
mov
cwde
repnz
jb
ins
rol
ss
jae
aad
or
aam
push
leave
rol
imul
jl
and
sub
repz
sub
mov
cmc
and
pop
inc
shl
inc
and
xchg
xchg
fiadd
ret
adc
(bad)
jo
xor
jl
fldpi
hlt
pop
dec
add
lock
test
fisub
ret
fs
lea
xchg
sbb
rcl
cmp
pusha
push
adc
scas
inc
dec
enter
xchg
(bad)
mov
iret
push
aad
fiadd
adc
mov
dec
xor
inc
mov
pushf
dec
leave
cs
out
(bad)
int3
out
sbb
je
arpl
imul
dec
and
inc
in
imul
and
inc
dec
fcmovb
mov
das
(bad)
imul
and
dec
pop
inc
pop
push
sbb
outs
jns
sar
or
mov
dec
sub
hlt
sbb
xchg
xor
popa
jns
pushf
addr16
push
jnp
mov
outs
and
add
iret
push
mov
mov
cmp
neg
jbe
xor
fnsave
pushf
jnp
bound
popa
mov
loopne
ret
sub
iret
lahf
cmps
xchg
jnp
aam
call
clc
retf
mov
mov
xchg
repnz
push
sbb
jmp
or
or
gs
les
xchg
jne
retf
ins
xchg
mov
leave
sbb
sti
inc
xchg
push
xor
mov
pop
stos
cmp
neg
out
(bad)
dec
or
int
lods
jge
in
push
out
mov
imul
xchg
loopne
ins
push
mov
test
push
xor
(bad)
cdq
pop
lahf
jg
pop
(bad)
lods
int3
jbe
jno
mov
jge
xchg
xor
out
add
daa
mov
xchg
mov
nop
mov
jno
xchg
loopne
xchg
add
movs
lock
pop
gs
cmc
mov
icebp
push
xlat
mov
add
lods
cmp
adc
jle
xlat
outs
jg
fldcw
rcl
scas
popa
mov
and
mov
sbb
data16
cmp
movs
fisub
inc
mov
jle
loope
cmp
cwde
iret
inc
cwde
mov
mov
dec
sub
shl
popf
cmp
sbb
push
loopne
cmps
lds
mov
xchg
daa
in
xor
aaa
(bad)
leave
les
pushf
test
cmp
xchg
lahf
xor
mov
or
pop
hlt
xchg
(bad)
out
ins
mov
in
push
pop
dec
(bad)
cmc
das
fwait
xor
ror
adc
xor
sub
rcr
(bad)
rol
pop
mov
dec
scas
mov
out
arpl
test
imul
addr16
adc
mov
and
push
fistp
into
inc
popf
pop
add
ret
cmp
mov
adc
sahf
adc
(bad)
mov
pusha
adc
rcr
shl
cwde
stc
pop
jnp
faddp
es
loop
daa
push
and
pop
inc
pop
sub
sub
cdq
mov
scas
mov
dec
in
push
inc
cmps
nop
mov
f2xm1
xchg
mov
sub
xchg
test
mov
outs
sahf
mov
out
loope
cmc
mov
xchg
fiadd
sbb
lods
push
xchg
inc
je
call
mov
popa
cmp
pop
mov
int
mov
inc
lea
das
push
push
cmps
test
imul
gs
mov
mov
imul
adc
ss
dec
gs
add
push
mov
in
pop
jae
push
ss
cmc
jl
cmp
cmp
clc
fucom
xchg
outs
iret
jo
xchg
iret
sbb
jge
ins
movs
push
mov
cmp
xchg
xor
adc
push
xchg
jne
(bad)
and
inc
pop
fdivr
fwait
mov
jae
push
call
mov
adc
push
call
mov
bound
sbb
push
in
or
inc
cld
imul
scas
ds
mov
ret
stos
cmps
sub
bound
mov
jns
(bad)
lea
jae
into
push
push
iret
and
dec
pop
sub
retf
mov
js
ins
imul
jnp
mov
adc
out
pusha
in
inc
(bad)
xor
repz
sti
int
xor
jnp
mov
ret
in
sub
xor
jp
cmps
sbb
fcomi
push
push
sbb
or
xor
popf
and
retf
imul
stos
inc
mul
sub
add
cmp
stos
or
pop
test
(bad)
pop
out
loope
mov
push
jb
cmp
xor
add
jns
cdq
adc
ds
int3
aas
push
lods
add
leave
jl
bound
and
cwde
sbb
or
cmp
icebp
hlt
minps
jecxz
or
mov
std
repz
push
out
add
pop
mov
fisttp
(bad)
jle
dec
fnstenv
jmp
cmp
dec
cmp
inc
int
stos
fs
jg
push
add
popa
js
dec
addr16
pushw
mov
mov
movs
add
pusha
leave
out
lods
(bad)
push
push
dec
adc
mov
pop
mov
mov
cmp
rcpps
loopne
mov
scas
mov
(bad)
jmp
mov
pop
or
or
jl
retf
xchg
cmps
sub
mov
sub
data16
gs
(bad)
cli
inc
mov
inc
ret
mov
cmc
sbb
inc
popf
push
pminsw
push
cmps
sbb
ds
push
pushf
in
jb
jmp
dec
fisttp
jae
jg
shl
in
daa
lds
sub
mov
(bad)
inc
mov
aaa
cmp
mov
xor
mov
push
stc
inc
into
sub
out
mov
pop
and
mov
jmp
and
push
cs
cmps
sub
xor
push
test
push
xchg
call
mov
pop
dec
jle
ror
clc
test
inc
fnstenv
xchg
mov
frstor
das
cld
jb
cmp
shr
sub
or
jne
stos
pop
mov
ror
push
test
xchg
out
fwait
dec
(bad)
sub
or
ja
arpl
mov
pop
xchg
mov
outs
cli
mov
in
xor
push
(bad)
aaa
mov
or
dec
dec
sub
scas
cwde
stos
mov
add
pop
jns
fcomp
out
aam
arpl
dec
xchg
inc
ret
ds
jmp
sbb
xchg
mov
pop
test
loop
cmp
in
xor
mov
int3
fld
in
pushf
and
imul
jp
pop
jp
dec
mov
mov
mov
call
in
sbb
data16
cmp
idiv
push
add
or
lds
nop
sub
add
ror
in
sub
xchg
cwde
jbe
jns
loopne
xor
adc
and
imul
shr
ficomp
movs
mov
push
push
ror
sub
xor
iret
adc
xchg
aad
and
pop
jmp
call
cmp
in
inc
ficom
ret
cmp
fisub
test
dec
dec
es
xlat
in
sbb
xchg
push
fs
ds
rcr
sbb
fild
fwait
jmp
or
push
repz
pusha
ins
add
in
fsubp
mov
pop
inc
fnclex
neg
jge
iret
jge
lahf
add
cli
jno
pop
jns
mov
in
or
loopne
add
inc
dec
or
xor
mov
xor
mov
div
add
stos
jg
gs
xchg
fwait
xchg
outs
ret
fst
mov
xchg
mov
ins
enter
pop
xor
(bad)
xchg
adc
and
(bad)
in
jge
cmps
xor
pop
inc
out
rcr
shr
call
mov
push
push
call
dec
pop
mov
xor
btc
mov
mov
aam
push
push
pusha
loope
add
dec
leave
cwde
mov
push
jle
sbb
dec
out
lock
hlt
stos
stos
neg
sub
jbe
xchg
mov
bound
dec
pop
(bad)
ins
mov
fdivr
shl
jmp
and
pusha
cs
iret
cs
idiv
mov
fstp
stos
cmc
data16
fsub
or
mov
sbb
ret
inc
sbb
mov
xor
cmp
movs
sub
fmul
(bad)
fidivr
jmp
imul
ja
sbb
scas
jmp
inc
push
inc
call
jbe
lea
shr
pop
and
inc
inc
mov
add
int
popa
inc
in
aad
inc
cmp
add
cmp
mov
ss
mov
xor
inc
dec
sub
cmp
cmp
or
mov
xchg
mov
pop
mov
and
call
inc
sbb
outs
cli
call
mov
dec
hlt
jbe
mov
pop
push
mov
shl
jne
and
pusha
sbb
sbb
cmp
inc
add
mov
shl
in
gs
dec
xor
aad
sbb
mov
mov
inc
jle
shl
and
sub
scas
out
lods
js
int3
push
pop
cmp
das
pop
inc
je
popa
inc
into
sub
or
lock
test
sahf
mov
repz
fdiv
mov
leave
movs
inc
sub
pusha
sub
mov
inc
mov
sub
mov
cwde
and
cmp
push
ins
popf
loop
or
scas
iret
sub
test
mov
scas
in
sub
lahf
or
into
or
je
ficomp
ins
jge
sbb
fadd
inc
stc
and
sub
lods
inc
out
sub
dec
fs
mov
push
imul
sahf
mov
adc
(bad)
mov
in
pop
sbb
clc
xchg
cmps
inc
les
mov
sub
jae
scas
dec
cmp
outs
cs
add
push
imul
nop
xchg
dec
or
pop
dec
jle
and
(bad)
push
inc
mov
int
into
test
data16
icebp
sbb
jecxz
push
mov
cld
or
call
xor
test
push
out
sbb
mov
sub
repnz
lock
(bad)
ins
sbb
fcos
iret
dec
(bad)
popa
aas
pop
lods
jg
pop
out
ins
inc
and
idiv
or
in
sbb
cmp
fcom
inc
dec
mov
dec
mov
icebp
sti
repnz
dec
inc
daa
push
popa
gs
push
sahf
and
sar
xchg
test
xchg
mov
shl
dec
out
jnp
xchg
fimul
sub
jns
push
jmp
dec
push
cmps
ins
movs
test
int3
or
dec
push
pop
std
adc
jle
sbb
retf
jg
in
pushf
push
sub
sbb
dec
and
pop
jo
inc
dec
movs
in
loopne
pusha
push
inc
bswap
xchg
jecxz
mov
pop
fstp
call
sub
sbb
dec
mov
and
pop
dec
ja
(bad)
dec
push
jle
adc
mov
rol
out
cmp
adc
dec
and
or
adc
call
ins
popf
or
and
mov
pop
iret
aam
arpl
pop
mov
xchg
hlt
stc
mov
sti
xchg
mov
in
add
and
int3
mov
sub
aas
mov
fsincos
mov
sub
inc
arpl
into
int
and
fist
jl
push
add
mov
mov
sbb
mov
std
mov
dec
ret
cmp
xchg
pop
adc
adc
dec
add
cmp
cmps
jecxz
aas
pop
push
ja
fsub
jno
jecxz
jbe
lea
clc
int3
sahf
pop
or
ds
adc
sub
aaa
pop
and
dec
add
out
adc
aam
push
imul
jns
xlat
nop
or
pop
das
xchg
xlat
test
(bad)
mov
pushf
icebp
arpl
xchg
shl
sbb
adc
imul
out
pop
test
fs
adc
jg
push
out
imul
add
sbb
scas
call
or
inc
popa
inc
daa
aas
sbb
aad
cmps
mov
mov
imul
cmps
cli
sub
xchg
jp
push
out
fcmovbe
xchg
dec
adc
push
dec
hlt
arpl
mov
jmp
mov
pop
mov
enter
aas
mov
je
rcr
enter
cmps
sar
pop
and
dec
mov
dec
mov
mov
imul
shl
aam
and
xchg
jmp
pop
adc
dec
enter
out
dec
mov
ins
fld
mov
inc
sub
xchg
in
ret
inc
in
rcr
adc
es
cmps
jge
or
cs
xor
imul
ror
gs
in
ins
push
mov
ret
pop
or
pop
mov
push
mov
and
jb
sbb
mov
imul
rol
sbb
jp
cmc
test
sti
mov
jb
xchg
imul
ins
int3
(bad)
xor
sub
pusha
popf
cmps
pop
jl
in
inc
add
fsub
and
dec
scas
sbb
lock
ins
div
aas
pop
xchg
dec
lock
or
and
das
or
std
int3
loope
xor
mov
mov
pop
js
add
fldl2e
mov
shr
mov
mov
inc
retf
out
and
push
ret
push
cs
mov
push
rcr
push
jle
scas
movs
adc
ror
or
pop
out
push
ret
in
ins
cs
xor
mov
or
retf
xor
(bad)
int3
pusha
adc
sub
xchg
ret
je
pop
leave
in
jmp
adc
jo
mov
sub
imul
aam
gs
bnd
mov
adc
xor
xchg
push
jae
repz
mov
jnp
push
and
test
(bad)
xchg
std
cmp
adc
popa
aaa
xlat
push
jnp
sub
outs
inc
sub
push
mov
push
cli
jle
mov
movs
(bad)
mov
push
outs
cs
jecxz
jno
aas
jnp
scas
mov
sbb
sub
ja
adc
call
cmp
push
sbb
dec
gs
pop
lea
pusha
or
jns
push
ds
jne
add
shl
add
outs
arpl
int
stos
mov
jmp
jb
mov
jp
stos
dec
aad
jns
mov
jno
pop
cmps
dec
xchg
jne
test
jmp
std
push
sbb
sub
addr16
in
icebp
fwait
add
scas
xchg
js
mov
mov
or
vmovupd
pop
aam
adc
nop
adc
add
movs
xor
jmp
jmp
mov
jp
scas
and
mov
xchg
repnz
pop
push
add
xor
add
bnd
mov
aaa
cmp
pop
lahf
push
nop
sub
xor
sbb
in
push
pop
jge
push
cmp
test
mov
mov
cld
jmp
pop
ss
mov
arpl
icebp
imul
jno
test
test
das
retf
fwait
sahf
stos
inc
mov
ret
lahf
dec
clc
hlt
jnp
mov
jmp
push
(bad)
movs
add
(bad)
lods
mov
pop
mov
mov
stos
sub
retf
cmps
aas
mov
js
cmp
shr
lods
sub
push
(bad)
mov
cli
adc
aaa
sbb
nop
repnz
jle
add
push
mov
cdq
push
int3
push
xchg
xchg
scas
and
ins
push
mov
test
sbb
pop
sbb
dec
or
and
mov
ss
test
pop
(bad)
repz
retf
fist
or
mov
xchg
cmps
ins
jno
in
inc
ficom
(bad)
fisub
ss
gs
jl
frstor
push
xchg
or
sti
or
cld
adc
fstp
jb
popf
(bad)
fnstsw
pop
fcomp
sub
pop
(bad)
sbb
add
mov
rcl
fimul
test
iret
lock
inc
adc
dec
mov
jmp
mov
repz
xor
fnstenv
lock
stc
imul
jmp
rol
(bad)
call
push
mov
sti
jmp
inc
dec
mov
scas
or
dec
mov
lea
pop
and
jecxz
jnp
inc
out
mov
ins
call
fwait
adc
sbb
mov
inc
mov
push
inc
call
cs
push
inc
mov
icebp
jl
repnz
(bad)
jcxz
mov
xlat
or
fdiv
std
rcl
stc
mov
add
and
cmps
cmp
gs
pushf
(bad)
dec
sahf
jecxz
mov
repnz
mov
(bad)
stos
jp
inc
test
add
jae
mov
mov
push
mov
les
ror
clc
popf
jl
push
mov
sbb
cld
mov
rcl
cmp
ins
xchg
(bad)
xchg
fdiv
out
and
pop
sbb
icebp
pushf
mov
sahf
inc
sub
inc
cmp
inc
(bad)
mov
or
cmp
stc
jle
scas
outs
es
and
js
jnp
retf
pushf
aad
sahf
xor
mov
jmp
imul
(bad)
or
cmp
cmp
cld
aaa
setnp
add
sub
(bad)
arpl
je
dec
dec
xor
adc
movs
mov
inc
sbb
xchg
mov
cwde
adc
aad
sub
adc
leave
movs
pop
shr
xchg
cmp
loope
rol
mov
cmp
bound
push
ins
outs
cmp
push
dec
fiadd
inc
dec
cmp
call
test
mov
mov
imul
and
aam
xor
aam
in
loop
aad
sahf
fs
mov
pop
inc
mov
and
inc
jns
ds
cmp
mov
loopne
or
inc
(bad)
aad
mov
lds
mov
inc
mov
xor
xor
xchg
xor
or
jbe
pusha
neg
popf
push
push
shr
adc
call
xor
iret
mov
pop
ja
mov
lea
add
sahf
int
cmp
mov
hlt
mov
dec
pop
mov
jbe
ret
rcl
mov
nop
cmp
or
push
adc
in
das
(bad)
cwde
scas
stos
lock
and
xchg
pop
mov
push
pop
cmp
jl
pop
cmp
lods
mov
mov
push
in
popa
pop
xor
xor
pushf
xchg
into
dec
jnp
stos
add
pop
push
xchg
ins
and
fmul
sub
int3
sub
nop
dec
add
inc
or
(bad)
pop
jmp
fild
sub
sbb
push
div
cmps
sbb
dec
xchg
in
(bad)
(bad)
bound
leave
xchg
lods
scas
adc
inc
push
sub
mov
or
pop
out
or
rcr
cwde
out
push
call
stc
pop
psubq
push
cmp
dec
or
jb
mov
into
sub
xor
in
aaa
mov
sbb
jo
inc
or
hlt
scas
jecxz
inc
jnp
lods
sub
daa
sbb
mov
or
adc
jge
mov
mov
das
test
add
mov
cmps
fbld
imul
int
or
mov
cmp
jge
repnz
arpl
cmps
and
xchg
test
movs
xchg
sbb
pop
or
or
lea
mov
sbb
jmp
daa
mov
mov
cwde
push
dec
iret
lds
xchg
shl
mov
dec
inc
sbb
inc
lods
fwait
stos
fmul
add
jmp
xchg
jg
jne
push
jne
xchg
jle
sbb
nop
das
scas
lock
call
das
or
pop
repz
test
scas
call
mov
idiv
pop
sub
clc
(bad)
mov
xchg
popa
leave
repz
xchg
mov
mov
mov
mov
push
sbb
mov
mov
dec
lahf
nop
push
sbb
push
lods
rcl
xor
retf
fisttp
shr
cs
outs
add
xor
or
jns
jl
and
mov
xor
and
ins
ins
adc
jb
push
cmp
mov
push
or
jb
cmps
adc
(bad)
xor
cmp
dec
nop
dec
lods
mov
ins
xchg
and
popa
inc
or
mov
cmp
pop
dec
inc
jle
cmp
les
inc
jl
add
aaa
int
adc
and
(bad)
xor
test
cs
xchg
sbb
push
push
mov
jns
jb
jo
xor
adc
lea
not
in
imul
pusha
jl
xchg
movs
lahf
adc
xlat
dec
add
(bad)
loopne
ins
pop
mov
add
rcr
cmps
adc
jl
pop
cmc
inc
pop
push
mov
mov
iret
mov
outs
mov
jl
les
repz
sbb
sti
pop
mov
gs
ret
and
rol
lock
mov
lock
or
xchg
jge
mov
dec
fcomp
add
adc
mov
xchg
(bad)
outs
popa
mov
jns
jecxz
pop
jae
dec
or
jns
and
xor
int3
jmp
cmc
aam
loopne
mov
xor
out
repz
loop
add
dec
and
xchg
outs
xor
pop
ins
dec
ds
aaa
repnz
movs
xchg
test
sub
jmp
xchg
xchg
pop
outs
or
mov
jge
xlat
div
cmovbe
out
jp
dec
jnp
xor
loop
dec
ja
mov
in
rol
loope
out
push
push
add
xchg
xor
push
jl
adc
mov
inc
jb
jb
add
into
les
sbb
push
hlt
js
pop
aam
and
mov
les
fcom
xor
in
or
mov
xor
jbe
mov
pop
cmp
ret
or
dec
shl
stos
jmp
or
icebp
add
adc
sbb
cs
imul
pusha
sbb
rcr
and
mov
loopne
es
ins
(bad)
push
mov
lods
(bad)
aam
push
mov
jno
sub
rcl
fisubr
pop
mov
cli
js
push
daa
lahf
jecxz
sub
aas
jae
cmp
push
dec
pushf
js
xchg
and
or
popf
mov
or
add
cmp
fs
(bad)
xor
cmp
stos
loop
retf
out
fnstcw
fwait
push
dec
add
adc
fwait
mov
xchg
fcom
shr
jge
inc
lahf
jo
mov
dec
mov
mov
pop
icebp
fisttp
into
or
ds
or
loopne
push
sbb
shl
add
and
pop
mov
jno
and
mov
pusha
sbb
xor
ret
add
cmc
sub
out
adc
popf
add
mov
fcom
mov
push
call
sub
fist
(bad)
out
lock
mov
cdq
repz
popf
pop
leave
(bad)
shr
xchg
pop
(bad)
ins
sar
xchg
push
mov
into
fld
out
pop
cld
fstp
or
jle
imul
inc
(bad)
ficomp
out
fwait
fwait
daa
and
ficom
int3
sbb
push
test
xchg
les
popa
cmp
or
and
sub
xchg
adc
imul
mov
aas
cli
lds
out
ret
xlat
xor
adc
jns
or
xor
xor
mov
jmp
stos
cmp
xchg
retf
ins
hlt
jp
movs
lods
sub
ds
rcl
xor
pop
cli
lock
dec
popa
inc
jmp
push
pop
adc
fbld
jle
jg
add
in
mov
pop
jle
data16
pusha
clc
es
xchg
cmp
hlt
aas
pop
cdq
dec
and
push
cmp
mov
inc
sar
mov
stos
mov
mov
pop
out
push
in
push
fisttp
cmps
repnz
sub
add
inc
push
jmp
push
mov
jo
loopne
lock
jnp
daa
inc
mov
neg
pop
push
std
jbe
adc
adc
jno
mov
pop
fisub
dec
cmc
mov
js
das
jge
comiss
adc
jecxz
imul
dec
loop
adc
nop
cmps
arpl
mov
add
out
ret
and
inc
or
jp
add
xchg
cmp
lock
bts
arpl
xor
push
loopne
ins
mov
out
sub
mov
or
cmp
sbb
xor
sti
mov
nop
popa
fist
inc
out
icebp
mov
fnstenv
pop
fidivr
sti
movups
fimul
xor
repz
loopne
adc
jecxz
and
push
test
test
es
fadd
add
mov
std
sub
cmp
inc
gs
inc
shl
jl
push
popf
nop
faddp
imul
dec
repnz
mov
inc
fistp
jae
dec
lds
mov
jo
rol
cld
inc
sbb
fiadd
inc
(bad)
es
xchg
movs
push
and
scas
and
adc
popa
sahf
mov
ins
cli
push
mov
cmp
scas
mov
jecxz
xchg
cwde
dec
les
loop
movs
jbe
cmp
adc
inc
ins
call
outs
adc
xchg
mov
mov
int3
ss
add
(bad)
cld
call
ins
jp
jno
addr16
repnz
popa
pop
jbe
lods
repz
sbb
dec
repz
xchg
inc
or
and
out
sub
aam
pop
mov
test
cmc
ret
mov
xchg
jnp
jl
dec
scas
sub
pop
push
dec
(bad)
ds
push
aad
sub
mov
pop
out
mov
(bad)
outs
adc
sub
cmp
ss
push
xchg
mov
xor
cmps
adc
cmp
jno
adc
mov
test
cmp
(bad)
xor
dec
jne
xchg
cld
pop
call
push
cmp
sub
fstp
xchg
jge
or
popa
jns
(bad)
iret
cmps
scas
jle
icebp
cmps
inc
mov
ins
adc
sub
ins
mov
lods
adc
inc
push
scas
jno
add
out
xor
jno
push
test
mov
addr16
push
add
jmp
pop
nop
cld
outs
in
add
imul
rcl
dec
bound
mov
ins
aas
push
push
aad
ins
pop
arpl
mov
icebp
sub
push
cmp
stos
(bad)
push
ret
jns
inc
cmp
cmp
bound
cmps
pop
aaa
hlt
outs
or
sbb
push
mov
out
rcl
add
mov
xchg
lods
(bad)
nop
add
pop
push
int3
cmps
push
ret
cld
pop
sbb
repnz
ror
cdq
ss
jge
mov
push
push
into
pop
out
shl
mov
out
adc
jp
shr
mov
add
cmp
ja
pop
hlt
jb
and
pop
in
adc
fwait
sbb
add
enter
std
cmps
mov
cmps
cmp
shl
dec
add
jo
stos
push
pop
(bad)
pop
jne
cmps
lods
popf
and
add
into
mov
add
retf
stos
push
test
cmp
rcl
int3
sar
loopne
cdq
add
movs
or
xor
cwde
and
fistp
xor
cli
outs
or
js
es
stos
inc
loopne
xchg
cmp
dec
je
xor
fidivr
imul
(bad)
ret
adc
out
ins
jge
movs
lods
mov
in
in
loop
xchg
mov
mov
cdq
dec
jle
div
into
jecxz
add
or
inc
das
inc
jecxz
jns
test
sbb
and
stos
cmp
ret
sbb
inc
sbb
mov
lea
sub
ret
movs
sub
fcomp
mov
ret
int3
in
retf
jecxz
pop
test
jge
mov
push
ds
pop
stc
pop
pop
popf
pop
jmp
hlt
xchg
sbb
jmp
mov
mov
sbb
clc
push
sbb
ins
jns
aaa
inc
sbb
pop
das
push
jno
inc
mov
(bad)
jge
ror
retf
cmc
pop
outs
in
cmps
fdivr
icebp
jnp
jmp
xchg
les
dec
clc
mov
or
dec
les
mov
aad
(bad)
mov
and
into
xchg
sbb
(bad)
jge
jg
fisttp
push
rsqrtps
cmp
daa
aaa
cmp
arpl
mov
adc
mul
(bad)
or
xlat
dec
jmp
jp
outs
sub
mov
jp
xchg
push
mov
adc
mov
mov
mov
pop
inc
sub
inc
outs
div
ret
ss
std
and
sub
xlat
lods
cmc
ins
ins
psubsw
add
ret
pusha
inc
(bad)
xchg
pop
jns
xchg
xlat
scas
inc
lea
adc
pop
xchg
inc
cwde
aaa
xor
push
test
bound
sub
push
ficomp
mov
cli
dec
and
es
lahf
sub
ins
cmps
lock
popa
sbb
jge
lods
xchg
adc
in
sahf
rcr
mov
das
cmp
mov
or
test
sbb
bound
into
enter
sbb
gs
pop
jno
adc
fist
sub
int3
pushf
mov
mov
fnstsw
ins
push
mov
fdiv
inc
aaa
int3
mov
mov
xchg
add
test
(bad)
pop
xchg
mov
shl
sbb
test
sti
xchg
or
shr
sbb
push
fcompp
adc
arpl
retf
cdq
imul
sbb
(bad)
pop
or
stc
jns
or
test
adc
jns
mov
xchg
cmp
and
pop
push
and
push
mov
inc
pushf
sbb
mov
cmp
(bad)
inc
xchg
mov
imul
loop
inc
jmp
mov
or
cwde
daa
out
inc
ficomp
jmp
retf
xor
sahf
lods
lea
jb
or
add
(bad)
aas
mov
push
(bad)
cmp
mov
xor
in
mov
sbb
push
or
cdq
data16
cmp
std
sub
call
ss
mov
sub
lods
jp
out
push
addr16
push
out
shl
push
xor
into
in
clc
inc
cmp
jne
movs
inc
jg
in
gs
cli
xor
fwait
xchg
cmp
jno
cmp
clc
pop
pop
and
jecxz
mov
dec
jno
pop
stos
fadd
sub
cmp
dec
adc
out
cmp
dec
push
frndint
push
addr16
dec
imul
adc
mov
in
add
out
pop
and
inc
out
sbb
repz
mov
jp
gs
sbb
adc
(bad)
push
shl
bound
out
(bad)
dec
jecxz
fst
push
test
fild
jns
scas
xchg
mov
push
cwde
dec
pop
popa
test
out
dec
lock
ins
mov
xchg
loop
js
sub
test
out
jmp
dec
adc
stos
push
xor
retf
icebp
mov
sub
repnz
(bad)
mov
inc
inc
or
fcmovnb
pminsw
and
jge
addr16
pop
dec
pop
shr
mov
jmp
or
lds
fld
mov
(bad)
out
sbb
in
mov
shl
sahf
stos
xchg
or
mov
mov
jmp
push
test
mov
add
mov
daa
scas
int3
arpl
xor
out
pop
(bad)
and
mov
mov
pop
xchg
mov
hlt
js
out
in
scas
lods
imul
xor
sub
sub
mov
test
fwait
gs
mov
in
repnz
int
jg
scas
lahf
retf
mov
jge
inc
pop
addr16
mov
enter
dec
dec
xchg
shr
fs
push
jae
ror
xchg
iret
cwde
retf
mov
out
(bad)
push
mov
mov
ss
inc
pop
fcom
into
mov
sbb
aas
out
stos
call
addr16
nop
retf
inc
jp
mov
push
mov
mov
hlt
adc
pushaw
(bad)
call
icebp
sub
push
addr16
mov
mov
sbb
stc
cli
data16
mov
dec
out
mov
xchg
inc
jo
in
sub
mov
dec
xchg
cdq
cmp
ins
jmp
retf
out
mov
retf
adc
cs
mov
sub
ret
addr16
cmps
and
cmp
adc
add
jg
cmps
fsubrp
push
inc
call
add
js
adc
hlt
sbb
mov
mul
sbb
cmps
loop
shr
leave
add
sbb
xor
(bad)
mov
call
adc
out
mov
adc
(bad)
sbb
js
xchg
jmp
cld
or
sub
gs
scas
inc
add
mov
pop
adc
aam
lock
push
inc
aaa
jno
jb
test
outs
loopne
push
push
dec
add
mov
and
jbe
sub
jne
inc
leave
pop
sub
mov
and
test
inc
popa
call
sti
sbb
adc
pop
call
push
mov
inc
mov
sub
mov
pop
jmp
pusha
xor
jg
cmp
or
sub
daa
dec
jle
push
cmp
mov
sbb
jl
pop
fld
cwde
fucomp
mov
bound
clc
pop
daa
imul
jmp
cdq
sbb
cmp
cli
test
leave
ret
mov
cld
jp
je
in
dec
(bad)
cdq
mov
outs
sub
and
cmps
aas
fnstsw
jb
movs
mov
jb
jnp
mov
push
pop
pop
rol
imul
mov
mov
leave
std
cmp
mov
jle
arpl
push
push
test
shl
push
(bad)
neg
pop
pop
enter
add
out
scas
xchg
mov
jge
popf
push
adc
aas
sub
adc
adc
jle
loope
retf
and
nop
push
bound
frstor
push
enter
push
in
bound
hlt
pop
push
in
aad
and
je
cmp
cs
mov
outs
mov
movs
xor
retf
mov
jmp
(bad)
arpl
inc
adc
das
ja
push
sar
push
lea
mov
jecxz
cmp
push
mov
mov
push
dec
ins
test
pop
mov
jo
and
(bad)
push
jecxz
jb
or
enter
lods
xor
inc
test
mov
fwait
jb
sbb
jno
dec
or
cli
push
cmps
mov
test
cmps
or
(bad)
mov
mov
mov
sahf
(bad)
jmp
and
cli
fabs
scas
or
js
cld
jne
nop
lods
xor
mov
push
jg
sub
xor
or
push
xor
sbb
hlt
pop
jne
pop
dec
es
jg
push
sub
arpl
and
sbb
sub
lods
push
nop
dec
nop
mov
aad
fmul
mov
(bad)
sbb
mov
loopne
(bad)
repnz
leave
xor
in
retf
dec
pop
pop
movs
cld
test
xchg
fsubr
jl
cmp
ret
call
mov
adc
or
repnz
mov
jae
icebp
and
pop
cdq
xlat
fist
mov
sub
inc
xlat
(bad)
hlt
popf
xchg
out
dec
and
pop
jge
hlt
mov
int3
(bad)
test
jp
mov
test
mov
push
dec
or
lods
mov
pop
inc
pop
mov
xor
ds
call
add
ret
inc
retf
popa
out
cmp
ds
jns
outs
gs
xchg
inc
dec
sub
fiadd
cmps
adc
and
in
subps
sbb
ins
into
ret
iret
scas
clc
es
mov
jo
xchg
rcl
pop
test
cmp
mov
cs
ins
scas
scas
mov
pop
(bad)
repnz
jae
add
ss
jns
cs
test
stos
daa
push
mov
mov
pop
cmp
pop
cdq
mov
push
mov
hlt
(bad)
sub
call
adc
test
push
cmp
sub
cdq
jle
leave
mov
mov
test
lock
jmp
dec
das
stc
mov
mov
jb
jecxz
lods
mov
in
ds
xchg
pop
rol
inc
or
push
(bad)
lods
add
add
cli
cmp
call
xor
cmp
sahf
xchg
xchg
fisub
daa
pop
and
jnp
jl
mov
xor
inc
fs
clc
ins
inc
add
sbb
mov
cmp
mov
push
jnp
popa
sub
and
dec
inc
imul
mov
stos
mov
xor
lods
dec
pop
or
adc
sbb
pop
cmp
repz
push
mov
in
lahf
adc
test
push
pop
out
(bad)
(bad)
push
cwde
push
sbb
cmp
inc
dec
fsub
push
mov
loop
lods
cmp
pop
xchg
push
mov
(bad)
inc
mov
adc
sub
jb
pop
jnp
pop
cmp
loopne
cwde
push
dec
pop
sbb
jmp
lock
sub
ins
jmp
cdq
ror
jp
add
call
imul
(bad)
cmp
pop
aad
mov
scas
mov
stos
out
jnp
mov
pop
mov
(bad)
scas
cdq
retf
stos
pop
mov
and
dec
push
(bad)
aam
push
mov
inc
inc
and
cwde
repz
scas
mov
adc
mov
cmp
out
push
push
xlat
div
xor
gs
fst
jbe
pushf
in
mov
jnp
cmp
dec
das
mov
push
xor
dec
aaa
loope
pop
inc
je
or
mov
add
lahf
xor
adc
in
jg
arpl
add
int
cmp
in
dec
add
cwde
fs
cmp
sbb
sbb
or
push
xor
pop
rcr
mov
iret
xor
jl
mov
jno
retf
cmps
icebp
mov
sub
retf
aas
(bad)
sbb
fild
fs
push
mov
lds
icebp
push
loop
(bad)
repz
push
and
mov
shl
cli
int3
sub
inc
or
add
sub
jnp
dec
and
popf
jo
(bad)
mov
test
xor
ss
mov
pop
xchg
and
mov
pop
aad
dec
imul
xor
sbb
and
xor
(bad)
xchg
jmp
int
xchg
pop
mov
jne
cs
jmp
jns
sbb
add
rcr
add
sub
add
js
mov
push
out
jno
pop
int
push
dec
stos
test
ss
xchg
test
adc
jae
jmp
push
test
repz
or
fst
rcr
sahf
inc
add
inc
dec
xchg
js
ins
jae
mov
sar
pop
jp
cld
fistp
xlat
ja
mov
dec
push
mov
sub
xchg
jno
test
hlt
inc
inc
int3
sbb
mov
imul
dec
mov
sahf
test
fmul
mov
movs
mov
and
sbb
nop
scas
ror
scas
mov
inc
jl
or
repz
rol
int
pop
out
ds
xchg
call
shl
mov
mov
xchg
cmp
fwait
xchg
add
movs
(bad)
push
jmp
aas
lahf
cmps
cmp
xor
fcmovne
and
ja
inc
les
aam
je
loope
rcl
mov
loop
push
jno
adc
dec
ss
nop
and
cmp
in
jnp
mov
push
shr
sub
pop
dec
retf
popf
dec
out
popa
or
dec
int
xor
mov
and
mov
xchg
mov
stc
add
add
clc
pop
je
fnclex
xchg
and
mov
movs
daa
cmp
pop
add
cmp
int
in
aad
gs
into
dec
(bad)
(bad)
jmp
jne
sub
ret
movs
ss
js
popa
mov
jle
mov
add
cmps
into
and
inc
pop
and
sbb
loop
sub
int3
pop
inc
ficomp
scas
imul
and
mov
inc
in
xchg
cmc
xlat
jne
cld
add
std
outs
ja
std
loope
ss
and
dec
xor
xor
push
mov
mov
adc
jb
xchg
xchg
jmp
jmp
mov
pop
enter
sti
out
jmp
add
retf
fcmovnb
push
shl
xchg
and
rcr
ds
push
jp
push
(bad)
lea
inc
pop
fsubrp
dec
(bad)
cmps
cmp
jp
leave
mov
fild
les
out
mov
sbb
jbe
pop
jno
int
nop
aam
lahf
pop
xchg
sbb
xchg
not
push
and
inc
jecxz
jne
mov
push
mov
stos
clc
outs
(bad)
out
call
pushf
repz
jp
inc
push
pop
push
(bad)
aad
mov
test
jae
mov
or
add
cli
sub
xchg
xlat
dec
std
mov
mov
xor
mov
lea
jecxz
mov
cmp
or
outs
mov
mov
ins
ret
rol
out
popf
jp
std
sbb
xchg
cmps
lods
cdq
sbb
and
cmp
inc
inc
test
cmp
pop
push
clc
je
fst
and
cmp
mov
mov
ds
daa
loopne
ins
lods
push
push
call
in
inc
sub
cs
mov
(bad)
out
stos
push
in
mov
int
mov
cmovb
push
push
dec
inc
xor
fnstsw
jno
in
and
out
(bad)
xchg
sti
enter
(bad)
ds
in
test
iret
div
in
iret
fs
imul
or
retf
cdq
or
bound
sub
add
push
in
rol
mov
fbld
dec
push
push
call
pop
(bad)
out
jge
cmps
xor
pop
push
sub
lahf
adc
lods
shl
dec
ins
dec
xchg
pusha
outs
ja
xor
int
sahf
lods
adc
arpl
fwait
cmc
mov
sbb
outs
rcl
mov
hlt
in
xlat
cmp
mov
pop
ins
imul
int
jge
and
arpl
push
xchg
mul
test
cmps
fisub
and
arpl
xor
sti
pop
ins
aas
and
(bad)
xchg
add
pop
xchg
cmp
inc
or
sbb
push
(bad)
adc
jmp
xor
pop
jp
mov
sbb
fldlg2
adc
ins
repnz
aam
movs
push
jne
ror
adc
add
cmp
add
hlt
push
and
jo
in
pop
sub
pop
lds
inc
out
fwait
jno
or
cld
sbb
es
push
adc
mov
sub
mov
or
mov
adc
xchg
imul
inc
pop
(bad)
in
in
out
pop
(bad)
lock
nop
cmc
add
dec
dec
sar
cmp
sti
inc
ins
add
xlat
mov
inc
enter
shl
xor
lahf
dec
ins
in
out
cmc
stos
sbb
push
mov
repnz
mov
popa
pop
sahf
out
pop
lods
or
jae
hlt
and
test
jb
in
add
imul
mov
mov
(bad)
mov
dec
enter
adc
sbb
lods
mov
mov
enter
fsubp
xor
out
aaa
mov
popa
nop
lock
aad
lods
shl
fmul
xchg
imul
jg
dec
sub
loope
icebp
xor
jg
das
push
xor
je
in
lahf
pusha
ficom
mov
jp
movs
cdq
xor
lahf
into
lahf
mov
test
std
mov
stos
xchg
pop
ds
jb
mov
jmp
loopne
movs
mov
push
mov
and
retf
sti
jmp
mov
jae
repnz
int
push
inc
sub
adc
mov
hlt
add
xchg
out
and
out
push
int3
push
mov
test
jmp
push
loope
add
sub
gs
aam
cmp
(bad)
and
lahf
movs
xchg
sub
js
jb
jmp
mov
jg
jae
pop
xor
in
aas
(bad)
aas
(bad)
xor
sar
sbb
sbb
jne
lds
or
fld
cld
xchg
mov
data16
sub
inc
dec
sub
mov
add
retf
stos
or
idiv
pop
push
loopne
test
or
mov
jl
cmp
add
fdiv
inc
adc
jno
or
pop
mov
addr16
test
mov
dec
jo
mov
or
mov
pop
cmp
add
inc
inc
imul
mov
sbb
inc
shr
adc
ret
loope
push
clc
(bad)
pushf
pop
ds
cmps
sahf
pusha
pop
imul
pop
or
mov
retf
test
sub
enter
mov
pop
mov
inc
out
(bad)
adc
adc
pop
or
adc
add
xor
cwde
mov
ja
fsubr
ins
jns
add
pop
mov
mov
test
rcl
push
push
push
in
xchg
and
add
shl
mov
mov
ret
cmp
sbb
sar
xchg
cmp
inc
adc
jge
and
pop
mov
jbe
scas
or
mov
shr
adc
mov
movs
or
xlat
leave
ret
lock
sub
dec
xchg
gs
idiv
(bad)
xor
push
stc
stos
fucomip
mov
out
dec
mov
pop
test
out
mov
xor
std
enter
cmp
mov
dec
pop
cli
ret
in
xor
dec
or
mov
jge
data16
sub
or
stc
mov
pop
cmove
aaa
stos
mov
adc
retf
jne
out
lds
scas
pop
(bad)
call
pop
dec
adc
ins
jb
push
aam
jns
test
add
dec
ret
mov
mov
jno
dec
(bad)
popa
or
pop
mov
mov
add
xor
mov
in
dec
jno
(bad)
fild
popa
sub
ror
inc
fidivr
pop
enter
fst
dec
sub
loopne
enter
ror
xchg
or
addr16
mov
(bad)
mov
sbb
lds
aaa
loop
cmc
sub
rcl
repz
jecxz
dec
(bad)
repnz
and
sub
add
mov
in
(bad)
push
sar
add
mov
imul
leave
inc
test
mov
push
xor
jo
mov
mov
push
xchg
call
adc
test
and
or
retf
(bad)
aam
loope
push
lock
data16
(bad)
dec
arpl
jmp
xchg
push
pusha
out
cli
faddp
je
test
pop
push
jns
cld
jnp
std
sbb
(bad)
sub
fistp
(bad)
pop
jbe
adc
push
add
mov
mov
dec
inc
mov
shl
cmp
sub
or
mov
cmp
pop
sub
(bad)
mov
cmp
adc
inc
push
loopne
mov
test
jae
call
out
fistp
pop
or
xchg
lahf
cld
mov
or
iret
jmp
xchg
je
cmp
xor
jno
es
sub
(bad)
hlt
jo
aas
out
lds
wrmsr
and
push
dec
pop
sub
mov
push
xor
cmp
aam
out
repz
inc
retf
(bad)
xchg
les
push
jno
push
(bad)
cmps
inc
mov
popf
mov
jno
pop
inc
sti
sub
sar
mov
fstp
sub
pop
adc
ja
xor
(bad)
(bad)
mov
retf
hlt
adc
in
or
add
add
mov
fs
sub
dec
jmp
or
(bad)
int
push
test
jmp
imul
imul
sbb
and
and
mov
out
mov
rcl
out
ins
push
add
xlat
daa
mov
or
test
retf
push
movs
add
mov
push
jno
jne
push
clc
ret
test
cdq
ret
stos
call
hlt
pop
iret
sub
adc
je
test
push
mov
cdq
inc
dec
xchg
call
inc
lock
cmp
out
mov
in
fmul
pop
popa
pop
lods
inc
gs
pop
fmul
stc
xchg
jmp
sub
leave
es
mov
mov
loope
sub
push
sub
xchg
adc
inc
loop
inc
sbb
dec
mov
push
mov
mov
mov
sub
cld
std
jns
inc
fs
int3
out
add
dec
sbb
cdq
mov
sahf
(bad)
jns
leave
inc
mov
push
jbe
mov
stos
call
add
in
jb
pop
stc
pop
adc
and
add
xor
sbb
fild
fmul
adc
icebp
pop
jge
test
push
cwde
jb
sbb
call
xchg
stos
lahf
(bad)
out
jbe
adc
mov
cmp
push
sub
pop
cli
pop
pop
arpl
dec
and
xor
lods
push
cmc
into
dec
pop
adc
mov
mov
outs
jmp
mov
int
sub
cmps
(bad)
jne
sub
jecxz
aam
push
pop
jl
stos
rcl
iret
dec
cdq
scas
call
into
mov
lds
push
mov
(bad)
jb
xchg
pop
out
clc
pop
ja
jge
scas
and
cwde
enter
push
sub
or
or
(bad)
xlat
lods
mov
pop
ins
xor
hlt
popf
daa
xor
cmp
push
popa
jnp
inc
lahf
jle
js
pop
int
(bad)
cmp
call
shl
aad
cmps
push
sub
outs
test
lock
mov
fwait
or
or
in
dec
shl
xor
cli
sahf
xchg
and
jae
sub
jb
cmp
add
fcmove
dec
mov
mov
int3
rcr
adc
out
and
jmp
(bad)
cmp
cmp
aad
or
in
inc
jnp
inc
ret
push
cmc
mov
addr16
cmp
mov
std
sti
xor
mov
pop
xor
cwde
retf
inc
ficomp
pop
cs
into
movs
adc
lock
mov
popf
rol
inc
std
cmp
in
dec
mov
push
xchg
rcr
aad
in
sbb
jae
inc
mov
pop
mov
jmp
pop
sbb
(bad)
cdq
ss
xor
inc
and
and
in
pop
add
scas
aaa
and
(bad)
sbb
ins
pop
add
enter
cli
cdq
cmp
push
dec
movs
push
test
nop
pop
dec
test
jne
mov
fwait
movs
or
mov
mov
sahf
icebp
push
push
call
push
sub
cwde
ret
xchg
movs
nop
inc
addr16
jmp
test
add
add
fcomp
sbb
iret
(bad)
lahf
cmps
or
push
(bad)
fcom
cmp
adc
fisub
dec
test
jle
adc
or
mov
in
lahf
je
or
scas
add
in
sub
shr
sub
in
out
sti
lds
mov
retf
ja
fidiv
sahf
xchg
dec
or
adc
gs
into
lock
cmp
or
inc
mov
out
push
cmp
push
sub
xor
or
lods
pop
dec
fld
(bad)
mov
push
inc
dec
test
fwait
push
jge
les
aad
and
fistp
(bad)
xchg
push
add
mov
stos
and
push
pop
pop
fld
(bad)
in
retf
(bad)
sahf
push
fldenv
mov
xchg
pop
mov
sbb
and
pop
into
outs
cmp
sbb
xchg
sub
sbb
xchg
push
pop
mov
xor
mov
cmp
xor
lds
fucom
in
sti
jg
xor
jecxz
or
pop
xor
jmp
imul
call
adc
cmc
mov
scas
fcom
movs
fistp
scas
xor
(bad)
pop
adc
fdiv
inc
int3
jecxz
int
loop
jns
push
adc
sbb
inc
les
inc
or
xchg
repz
das
imul
clc
mov
adc
pop
pop
or
jl
push
jecxz
xchg
shl
jecxz
aam
das
enter
fimul
fcomp
push
sub
loope
inc
inc
or
fwait
int3
fiadd
pop
std
ror
sar
jno
test
clc
or
lea
and
push
(bad)
jp
or
xchg
jle
adc
push
in
aam
xchg
outs
in
shl
rol
dec
std
push
(bad)
call
clc
and
sub
jnp
in
sub
pop
fsub
arpl
(bad)
mov
and
or
mov
in
imul
hlt
sub
push
cmp
mov
mov
pop
out
add
jp
ins
es
xor
ins
addr16
lahf
into
pop
cdq
shl
pop
xchg
loopne
outs
mov
or
cmp
pusha
mov
rol
int
stos
xlat
and
pusha
and
pop
repz
addr16
add
push
nop
cmp
dec
jne
mov
pop
pop
test
in
sub
sbb
or
cmp
sbb
cli
aaa
pop
push
sub
rep
shl
jo
jnp
push
gs
lods
push
push
sbb
xor
fs
mov
push
inc
popa
mov
push
(bad)
adc
mov
(bad)
adc
dec
pop
cmp
fs
mov
stos
mov
dec
xchg
adc
push
xchg
(bad)
pop
xor
call
mov
sti
mov
leave
and
call
lods
pop
sub
pusha
or
cmp
sub
inc
mov
xchg
pop
(bad)
(bad)
add
pop
sbb
sub
jp
popa
pop
sub
xchg
pop
mov
(bad)
jl
ins
mov
es
and
mov
mov
out
dec
and
pushf
rcl
push
push
ficomp
add
jg
retf
and
and
lods
push
cmp
call
mov
aas
sbb
sbb
sbb
mov
or
dec
(bad)
or
dec
dec
imul
pusha
mov
cmc
mov
dec
imul
jmp
mov
outs
les
mov
mov
sbb
jne
mov
fcom
mov
xchg
xchg
push
shl
or
in
(bad)
pop
mov
data16
cs
cld
pop
mov
or
movs
inc
pusha
xchg
and
adc
sub
and
(bad)
leave
lock
adc
xlat
mov
push
dec
lock
and
cmp
jg
in
jbe
aas
push
xor
mov
loope
popa
and
add
pop
pop
int
dec
add
xchg
cmp
xchg
shl
push
rcl
sbb
sub
adc
in
inc
lock
pop
fistp
add
sub
in
dec
call
test
jbe
lahf
das
cmps
shl
xor
xor
add
aam
dec
inc
jmp
jno
xchg
mul
loope
xchg
push
int3
shl
jb
jecxz
mov
dec
in
xlat
ds
dec
cmp
push
xchg
mov
mov
lds
add
adc
push
xchg
(bad)
rcr
fsubr
cdq
and
mov
or
xchg
xlat
es
in
jle
iret
xor
(bad)
jmp
dec
mov
jecxz
jae
shl
pop
cmc
fimul
pop
mov
inc
movs
sub
mov
mov
(bad)
pop
xchg
adc
imul
cmps
inc
cmc
and
adc
loope
and
in
mov
js
in
inc
cli
(bad)
pushf
adc
push
cmp
xchg
neg
stos
mov
fstp
shl
xchg
outs
popf
es
lahf
cmp
dec
sub
pop
mov
data16
sub
sub
cmp
loope
or
push
and
mov
dec
(bad)
or
dec
add
ret
dec
or
cmp
mov
mov
dec
call
sbb
sub
jmp
mov
and
adc
das
pop
mov
shl
add
arpl
fisttp
cwde
mov
mov
sub
out
xor
add
mov
jno
clc
aas
pop
mov
mov
icebp
les
pop
push
pop
xchg
pop
jmp
push
cs
and
inc
jmp
xlat
jbe
inc
xor
cmc
in
mov
shl
inc
mov
cwde
(bad)
xor
xchg
xchg
xchg
test
mov
cmp
push
push
imul
xchg
push
and
rcr
shr
ins
pop
nop
mov
cmp
sbb
scas
bound
or
retf
mov
clc
ins
inc
inc
and
push
bound
mov
mov
lock
inc
cmp
mov
push
ins
jno
push
into
ins
xchg
imul
arpl
xchg
and
mov
push
dec
cs
(bad)
mov
test
pop
scas
xchg
mov
cmps
jb
cmp
retf
and
dec
or
daa
pop
push
jae
dec
nop
xor
cmp
push
sbb
sub
dec
cld
pop
lahf
popa
xchg
cmpxchg
(bad)
test
add
sub
repz
xchg
fwait
test
scas
pusha
push
xchg
repz
jp
mov
push
mov
mov
pop
mov
in
mov
cdq
out
and
push
lods
rol
rcr
js
cmps
sar
jnp
jnp
xlat
jmp
cwde
cdq
jp
call
inc
xor
cwde
mov
jo
xor
mov
imul
push
sti
adc
pop
xor
sbb
jmp
mov
push
lea
fld
xchg
dec
ret
push
int
retf
inc
movs
cmp
shl
hlt
xchg
les
add
xlat
loopne
mov
lods
ss
mov
xchg
mov
arpl
jp
inc
mov
push
adc
push
sub
gs
call
pop
adc
mov
mov
jle
mov
add
pop
out
xor
ret
sub
fisub
push
mov
rcl
je
(bad)
sbb
mov
push
xlat
lock
es
movs
inc
mov
xor
pop
out
fld
mov
outs
or
cli
and
repnz
inc
mov
jae
xor
loopne
retf
xlat
xchg
retf
bound
call
xchg
jmp
addr16
ins
add
and
cmps
mov
stos
jae
call
scas
ds
sbb
retf
adc
es
sbb
or
fimul
add
lea
test
fadd
cs
sbb
cs
movs
pop
imul
inc
fstp
sbb
popf
and
mov
hlt
scas
jnp
in
inc
push
rol
call
xchg
std
jle
mov
test
or
sub
cdq
sub
daa
xor
mov
gs
stc
addr16
dec
cmp
pop
or
push
cmp
ds
aas
cmp
dec
inc
ret
xlat
bound
adc
fidivr
fs
stos
loop
sub
or
adc
mov
fucomip
or
cld
stos
(bad)
outs
js
mov
shl
dec
loopne
pushf
clc
mov
rcl
stos
and
pop
cmps
popa
mov
neg
and
or
lock
push
(bad)
mov
inc
xor
push
in
out
mov
jp
stos
or
pop
icebp
out
push
stc
cmp
fwait
and
cmp
cld
jl
pushf
push
xor
push
add
pop
adc
xor
pop
dec
mov
(bad)
cmp
xchg
push
inc
fistp
mov
pmaxub
fdiv
test
sub
shl
and
popf
mov
cmp
sub
mov
fisub
mov
add
jmp
push
sti
bound
lock
jg
pop
stos
xor
jmp
addr16
or
jns
leave
retf
test
(bad)
xchg
mov
adc
and
mov
cmp
mov
mov
or
mov
mov
out
outs
push
cmps
leave
sub
xacquire
jo
mov
xchg
retf
fstp
dec
mov
lahf
jo
ds
retf
dec
in
push
popa
mov
outs
sbb
out
mov
push
or
nop
dec
sub
cmp
imul
mov
mov
mov
xchg
(bad)
or
push
jl
es
and
pause
jp
sbb
fsincos
xor
cmp
sbb
push
das
ins
inc
adc
cmp
xor
not
jp
leave
not
add
sbb
sub
mov
sub
cmps
inc
scas
xchg
xchg
push
sub
lods
fld
loop
mov
fwait
ret
add
adc
fcomp
pop
mov
pop
jmp
sub
adc
xor
shl
push
dec
out
mov
cmp
test
sar
cmp
jmp
test
aad
cld
es
repnz
mov
shl
add
cmps
or
sar
inc
xor
out
mov
call
mov
js
lods
imul
shl
xchg
out
pop
add
pushf
mov
fsub
mov
(bad)
mov
cmp
popa
add
dec
stos
sub
stc
pop
mov
sbb
(bad)
push
mov
xchg
shl
adc
adc
sub
dec
fstp
xor
dec
jp
jmp
sub
sar
push
arpl
mov
stos
add
fsubr
inc
or
pop
add
xor
mov
mov
dec
jae
mov
and
out
jecxz
xor
adc
ss
cs
fild
fbld
xor
cmp
pop
dec
xchg
xchg
(bad)
hlt
add
sbb
pushf
jns
inc
(bad)
int3
lods
not
fstp
popf
(bad)
mov
jmp
xor
bound
sbb
ret
push
(bad)
loopne
fwait
mov
or
out
call
dec
(bad)
fadd
sub
dec
dec
pop
cmp
mov
sti
pusha
adc
test
ret
repnz
ins
retf
sub
test
scas
jle
sub
popa
sub
into
xor
ja
bound
aaa
in
inc
jo
out
push
inc
and
push
jnp
and
int
add
xor
pop
dec
add
(bad)
loop
(bad)
cli
scas
sti
xor
std
push
xchg
dec
ud0
les
xchg
fwait
bound
mov
pop
sbb
(bad)
test
xchg
outs
mov
jns
push
in
ds
rcl
lock
cmp
test
add
xor
dec
scas
xchg
xor
mov
js
outs
icebp
sub
dec
jle
cmp
cwde
sbb
bound
sub
add
and
inc
loopne
cwde
dec
mov
mov
xor
add
call
fmul
pop
inc
push
imul
or
cld
or
sar
push
(bad)
ror
or
test
mov
mov
sub
cli
and
hlt
fs
pop
jge
cmp
jns
test
sub
dec
icebp
jbe
jb
in
call
in
ror
push
inc
test
mov
push
or
and
scas
into
cmps
mov
and
adc
pushf
scas
dec
loope
push
imul
sub
cld
icebp
mov
outs
rol
repnz
in
cmp
xchg
daa
cdq
inc
pop
dec
dec
cmps
sbb
cmp
(bad)
mov
or
aaa
ret
jo
popf
xor
push
cmp
in
pop
mov
jo
(bad)
nop
lock
push
pop
mov
mov
test
outs
jnp
in
imul
arpl
fdivr
inc
dec
push
lahf
daa
jmp
outs
fwait
jno
adc
and
shr
mov
jae
scas
xor
inc
xor
mov
or
push
lods
aad
cs
add
pop
xor
lahf
mov
adc
addr16
les
cmp
pushf
retf
or
and
xlat
or
fnstenv
cmp
and
cmp
mov
sub
popa
(bad)
sti
add
call
or
xchg
mov
aaa
sub
mov
leave
cmps
outs
xor
imul
jb
mov
scas
xor
xchg
mov
pop
dec
dec
push
mov
cmp
aas
or
mov
stc
sub
in
dec
sub
outs
ja
mov
xchg
shl
push
sar
mov
je
sub
data16
pop
retf
bnd
xchg
xchg
dec
neg
or
xor
dec
mov
inc
std
pop
(bad)
jle
mov
push
cmp
out
adc
repnz
or
adc
pop
inc
js
ja
les
xchg
sbb
xchg
jnp
xchg
pop
daa
push
cmp
pushf
das
jb
cmp
movs
pop
mov
test
ret
imul
dec
xor
xor
jns
dec
scas
repnz
ror
mov
inc
imul
and
mov
inc
inc
mov
in
adc
aas
fcomip
mov
icebp
adc
mov
fcomp
add
cmp
sahf
mov
jne
and
xor
mov
push
push
sbb
cs
(bad)
pop
adc
mov
pushf
pop
shl
inc
sbb
outs
out
sbb
xor
test
call
dec
movs
jle
xchg
call
dec
push
loop
inc
push
jno
inc
add
stos
xor
add
mov
iret
out
rol
add
dec
fistp
retf
(bad)
cdq
rcr
sbb
inc
popa
sub
inc
ds
jmp
mov
clc
fmul
xchg
(bad)
in
into
sub
retf
int
xchg
mov
push
xor
ss
mov
outs
jmp
test
pop
stos
in
mov
xchg
mov
adc
dec
lea
cs
xor
movs
mov
xchg
push
xor
aaa
mov
pop
(bad)
xchg
jmp
add
dec
sar
mov
daa
push
test
ss
sub
sub
sbb
(bad)
(bad)
xor
in
dec
loop
in
sub
icebp
mov
and
push
and
mov
mov
lds
in
ins
inc
fild
fdivr
cld
mov
int
out
enter
shr
test
adc
mov
jecxz
xor
and
in
iret
and
(bad)
aas
loop
ja
push
rol
hlt
aam
fsubp
jecxz
pcmpgtb
addr16
push
pop
push
ss
push
push
push
retf
out
push
out
mov
scas
push
push
jl
repnz
mov
dec
cmp
aad
movs
pop
cmp
push
(bad)
in
aam
mov
xchg
dec
cs
sbb
mov
xchg
cmp
pop
daa
ficom
mov
shl
rol
and
xor
jge
repnz
les
add
inc
test
jle
repnz
scas
fistp
test
mov
call
sub
fwait
xor
inc
xor
imul
cli
sbb
sub
ja
cmps
ins
or
dec
mov
pop
lods
rol
movs
fdivr
int
hlt
ret
ins
xchg
test
sti
fwait
jmp
jge
(bad)
in
xchg
mov
setp
aad
pusha
xor
and
cmp
fmul
inc
lds
sub
stos
mov
(bad)
mov
cmp
jnp
aaa
fnstcw
mov
imul
sbb
push
jmp
dec
jbe
cdq
lods
ss
fwait
mov
xchg
ret
adc
dec
jg
cmp
mov
jge
rcl
(bad)
sbb
mov
jae
xor
bound
cmp
sbb
pop
sub
dec
loopne
mov
les
ja
push
xor
ins
or
(bad)
cmp
add
ins
mov
lds
movs
mov
push
mov
imul
rol
mov
and
frstor
loop
leave
push
sub
test
add
pop
(bad)
fdiv
pop
in
aad
sub
adc
mov
pop
push
push
fnsave
sbb
jecxz
jmp
shl
xchg
xor
mov
and
dec
scas
(bad)
mov
fisub
inc
or
sar
mov
icebp
hlt
retf
gs
mov
fisub
loope
fiadd
or
stos
pop
dec
add
std
movs
push
pop
fidivr
(bad)
fisttp
jmp
scas
lea
popa
shl
jnp
movs
mov
push
(bad)
aaa
cld
sbb
jo
je
or
(bad)
out
repz
fwait
cli
leave
imul
ja
dec
int3
nop
nop
adc
dec
pop
jmp
mov
inc
pop
sub
xor
call
arpl
inc
or
ds
cmps
xchg
dec
mov
icebp
stos
jecxz
cmp
push
add
out
repnz
cmp
les
pop
add
inc
movs
mov
mov
mov
or
in
pushf
call
sbb
sbb
aaa
sahf
push
addr16
pop
jle
aas
popf
adc
popf
ror
dec
pop
popf
inc
jecxz
jge
jmp
sbb
xor
pop
push
leave
out
pop
dec
jns
popa
enter
dec
dec
ret
cmp
and
pop
cdq
pop
pop
hlt
fidiv
inc
scas
xor
fld
mov
dec
and
cs
(bad)
stc
dec
mov
icebp
vpmulhuw
mov
inc
or
mov
into
ret
sbb
add
ror
dec
lea
ins
into
xchg
lods
pop
xchg
jg
inc
push
js
sub
jo
jmp
xor
(bad)
and
fsub
lods
mov
pop
cmp
or
out
xchg
aaa
sbb
push
pop
dec
jmp
pop
push
(bad)
jmp
into
in
sbb
mov
int
inc
test
xchg
sbb
ret
pop
sahf
test
sbb
xchg
scas
ret
dec
adc
jg
neg
rcr
sbb
pop
cs
cdq
in
cdq
add
cmp
adc
inc
shl
push
jns
pop
xlat
or
daa
lahf
cmp
shr
jp
add
ss
fcom
dec
xchg
rol
outs
pop
adc
xor
hlt
inc
or
rcr
jle
adc
pop
or
push
cmp
sbb
dec
or
inc
repnz
mov
and
popf
sbb
cwde
and
push
cmp
pop
mov
cmps
icebp
adc
sub
loop
retf
repnz
ss
movs
pop
movs
ds
push
mov
jnp
aam
test
sub
ret
or
push
cmp
xor
stos
pushf
leave
mov
pop
rol
push
jmp
and
xor
in
add
nop
jmp
fimul
xchg
and
js
or
xor
cmc
outs
sub
fwait
jmp
add
xchg
and
mov
call
jo
lods
xchg
mov
ret
je
sbb
call
xchg
test
cld
or
into
imul
push
rcl
vcvtdq2pd
stc
sbb
idiv
sub
int
neg
mov
lea
dec
inc
rcl
std
int3
cmp
dec
mov
mov
arpl
cmp
into
scas
jbe
sub
ins
jb
push
in
xor
repz
icebp
js
mov
adc
sub
dec
inc
mov
lahf
xchg
inc
add
adc
add
test
or
fnstenv
jl
sbb
mov
adc
jp
sub
pop
fild
std
in
adc
out
inc
ret
add
jl
lahf
in
idiv
pop
and
std
push
mov
ret
add
push
retf
pop
iret
in
jl
ja
mov
sub
or
sub
jge
icebp
xor
dec
out
adc
int3
xchg
inc
int3
sub
mov
jnp
adc
cli
mov
dec
aaa
call
je
cmp
xor
inc
cwde
(bad)
mov
add
das
and
jbe
push
rcr
add
addr16
and
push
arpl
dec
add
rcr
xlat
mov
adc
pop
mov
sub
mov
mov
dec
out
pop
jns
push
push
rcl
push
dec
loopne
add
sub
ins
mov
cmps
lahf
push
mov
push
sbb
xor
jne
xchg
xchg
out
sub
sbb
jno
in
jno
xchg
sub
pop
daa
dec
or
call
lea
jne
jl
nop
sub
mov
rol
test
data16
adc
retf
sar
js
repnz
lods
lock
xchg
mov
addr16
rol
popa
inc
rol
mov
and
aam
xchg
call
(bad)
pop
scas
mov
les
sub
addr16
adc
dec
out
fisub
pop
rol
adc
mov
in
sbb
sahf
mov
mov
pop
ja
and
mov
hlt
repnz
pop
jmp
cwde
push
push
inc
ror
jae
cmp
test
mov
ror
bnd
es
stos
add
jmp
cdq
mov
pop
stos
mov
or
jecxz
adc
cmc
sahf
es
sbb
test
mov
cmp
rol
mov
push
ss
aaa
and
fisttp
rcl
mov
dec
mov
jmp
pop
scas
das
pushf
gs
out
imul
cmps
mov
je
mov
mov
pop
movs
mov
sub
xlat
shr
cmp
(bad)
dec
outs
sbb
(bad)
rcr
mov
mov
int
xor
jle
jmp
sbb
push
mov
jmp
lods
js
stos
cmp
ficom
cmps
aam
cli
xor
adc
or
pop
loopne
and
and
cmp
dec
xchg
not
aam
and
fidivr
lods
sub
lods
rol
ss
mov
jbe
int3
(bad)
cmp
outs
adc
popf
std
into
retf
daa
sbb
mov
pop
mov
push
cs
xor
cli
push
push
fs
fcomp
mov
std
adc
sub
or
adc
sub
push
push
sub
sub
out
cmp
sbb
icebp
mov
pop
add
ror
aaa
jae
mov
test
xor
push
stos
mov
test
jp
push
xor
push
or
mov
stc
ret
inc
jb
mov
in
fisttp
aas
sbb
mov
retf
pop
es
sub
stos
jmp
or
out
aam
jmp
cmps
adc
mov
mov
dec
imul
push
dec
out
pushf
dec
jecxz
out
neg
sub
leave
cmp
sub
int3
das
cdq
dec
sub
jl
or
rcr
enter
cmps
jno
loopne
ret
adc
or
and
dec
(bad)
add
mov
lods
ds
iret
cdq
sub
adc
dec
repz
push
push
leave
cli
popf
xor
adc
pop
jecxz
call
jo
pop
cmp
out
jns
sbb
mov
mov
jge
push
movs
repz
pop
das
jg
inc
scas
ret
das
mov
push
cld
loop
aas
and
or
xlat
xor
es
jp
push
pop
dec
jmp
dec
xchg
cs
fsubr
int3
stos
es
mov
(bad)
cmps
rcl
arpl
bound
dec
retf
stc
sub
jne
ja
cmp
js
pop
cli
out
test
jecxz
xor
out
in
shl
shl
sub
(bad)
mov
pop
fiadd
jmp
xchg
mov
fucomi
cmc
push
(bad)
mov
int
out
or
mov
aas
stos
fcomi
push
loopne
es
jge
jmp
mov
pop
push
movs
data16
xlat
dec
push
sti
shl
out
mov
mov
jo
mov
imul
arpl
std
jo
mov
cs
and
and
xchg
mov
or
and
pop
movs
call
std
scas
int3
loope
and
push
mov
dec
lods
lods
xchg
jmp
jge
cmc
sub
sti
pusha
jo
test
sbb
(bad)
jecxz
sub
xchg
lods
sub
daa
push
popa
inc
xor
fiadd
repz
cmovge
or
adc
pop
cmp
mov
push
addr16
adc
fsubr
xchg
pop
xchg
pop
xor
sub
push
or
scas
dec
mov
aam
cmps
xor
in
xor
out
push
add
or
or
push
add
js
shl
cmp
mov
data16
cs
inc
inc
sbb
outs
ret
mov
(bad)
sbb
call
adc
xchg
and
sub
xchg
loop
jp
sbb
cld
fbld
or
loopne
call
adc
(bad)
lods
ret
retf
jns
(bad)
sbb
popa
xor
xchg
cmp
mov
rol
xchg
test
push
jmp
fadd
(bad)
jmp
jp
idiv
xchg
bound
ret
mov
adc
in
lods
test
push
cmc
fistp
addr16
(bad)
mov
dec
mov
pop
mov
ret
pushf
cmps
fwait
mov
ds
add
test
mov
hlt
or
in
mov
ret
fwait
ret
lock
inc
or
sbb
cmc
(bad)
jae
mov
iret
dec
mov
repz
xchg
std
sub
dec
or
les
or
stc
jg
jl
and
cmps
jp
pop
test
jno
sbb
jns
xchg
mov
ins
rcl
xchg
mov
add
outs
fwait
jle
sub
jne
ror
adc
xchg
cmps
add
mov
paddusb
ins
push
outs
(bad)
adc
mov
xchg
inc
mov
je
fwait
or
rcr
xor
cdq
daa
fisttp
cwde
or
(bad)
adc
(bad)
push
lea
icebp
out
enter
in
jle
gs
popf
xchg
ror
or
popf
pop
into
mov
pop
inc
cmps
sub
cmp
push
fisub
lahf
and
mov
stc
sub
or
dec
mov
pushf
lds
sar
and
mov
sbb
xchg
movs
cmps
jne
adc
add
jl
retf
pop
pop
mov
test
idiv
adc
push
fcom
fwait
mov
cmps
rol
pop
movs
inc
out
pop
lods
pop
stos
sbb
rcr
pop
push
scas
out
data16
inc
jp
ins
jmp
or
mul
mov
sbb
xor
sti
inc
cdq
mov
jmp
jno
dec
xor
mov
mov
push
dec
sbb
xchg
int3
xchg
fadd
jb
pop
in
cli
fcos
cmp
adc
fidiv
popf
sub
cmps
mov
push
les
sub
dec
dec
inc
stos
mov
in
stos
jmp
rcr
xor
or
push
push
xchg
sbb
movs
outs
(bad)
popf
stc
enter
xor
mov
xor
inc
pop
xchg
mov
lahf
fild
xor
out
std
fld
mov
ficomp
pop
fisttp
sbb
and
or
iret
js
push
jno
push
ds
aaa
mov
movs
pop
arpl
or
mov
and
out
adc
pop
and
xchg
sbb
pop
ret
ja
fist
rcl
cld
mov
jae
sbb
mov
add
mov
xor
hlt
clc
and
push
add
lods
push
pop
retf
retf
cld
enter
or
jle
push
mov
xchg
jo
mov
xlat
dec
addr16
das
adc
sub
out
jp
or
ds
xchg
xchg
hlt
clc
hlt
mov
ds
mov
rcl
arpl
xchg
bound
add
sub
stc
fild
leave
push
(bad)
sub
aam
inc
mov
call
out
jo
fwait
inc
jecxz
pop
add
and
inc
pop
sahf
icebp
pop
jno
add
xchg
lods
inc
ins
in
retf
test
fsub
sub
inc
jmp
jmp
push
inc
mov
loopne
jbe
into
add
imul
loopne
cmps
mov
pop
sub
ins
xchg
(bad)
cmps
repnz
mov
mov
or
daa
test
add
inc
xor
add
fadd
fsincos
adc
inc
push
mov
cmp
jmp
imul
fidivr
lahf
mov
xor
sbb
mov
cld
sub
mov
shr
mov
in
(bad)
mov
repnz
test
fstp
nop
inc
mov
out
psubb
mov
aaa
es
or
xchg
vpsubw
je
aas
(bad)
addr16
ret
retf
fldenv
aaa
movs
pop
inc
test
retf
js
and
jae
lods
jl
dec
mov
mov
or
fcomp
pop
xchg
and
mov
xchg
imul
fisubr
cwde
push
in
ins
sbb
retf
enter
imul
pop
in
popf
inc
fld
jg
mov
ins
dec
mov
push
or
pop
mov
pop
div
popf
call
loopne
movs
inc
push
clc
pop
pop
cmp
jnp
stos
push
gs
das
jmp
jb
push
inc
rol
and
sbb
jl
or
jl
cmc
and
add
dec
xor
sub
jge
push
jl
sub
pushf
repnz
push
sub
(bad)
scas
sub
mov
cmps
mov
sbb
adc
cmp
xchg
mov
sbb
adc
xchg
outs
xchg
push
int
addr16
pop
adc
pushf
sbb
dec
or
xchg
ds
ficomp
loop
fst
daa
test
mov
fs
cmps
nop
ins
inc
mov
dec
test
mov
std
push
into
mov
(bad)
jl
pop
sbb
cmps
loop
adc
into
adc
cmp
repz
stos
nop
les
mov
or
sub
inc
lahf
and
sti
add
loopne
fs
fistp
xchg
mov
jns
cli
(bad)
hlt
adc
popf
xchg
adc
popf
pop
pop
xchg
ja
popf
dec
sub
icebp
add
mov
dec
sub
(bad)
or
imul
bound
into
(bad)
mov
pop
mov
and
fild
popa
pop
add
stos
jno
xchg
out
cli
jmp
push
mov
fisttp
repz
rol
popf
jle
mov
jno
jae
xor
mul
pop
xor
cmp
ror
rol
mov
mov
stc
mov
out
sub
or
mov
fisubr
out
sbb
jecxz
and
adc
cmps
pop
jnp
mov
xchg
lahf
push
int3
xor
sahf
test
or
and
ds
cmp
je
push
idiv
push
add
inc
cmp
test
jg
stos
pop
push
pop
sar
popf
sbb
mov
fisub
loope
sbb
xor
dec
add
lock
or
or
jg
loope
cmps
rcl
xor
imul
adc
sub
fwait
scas
sub
aas
enter
sbb
sub
mov
movs
test
mov
adc
ja
or
mov
cdq
shl
sbb
dec
test
xchg
fs
test
call
int3
cmp
add
mov
inc
fisttp
inc
push
rol
adc
aam
in
mov
aas
mov
pop
in
scas
repz
and
mov
mov
mov
stos
cld
ja
mov
cmc
jno
jmp
push
xlat
or
(bad)
sub
test
fistp
iretw
add
imul
mov
clc
sbb
loope
inc
and
pop
jno
das
scas
aam
sub
cwde
mov
sbb
pop
push
iret
xor
pop
inc
into
or
mov
dec
pop
movs
fwait
dec
push
cli
outs
or
pop
out
or
and
pop
cmps
pushf
sub
and
int3
sbb
(bad)
cmp
(bad)
or
neg
sbb
ficomp
nop
pushf
cli
lods
clc
repz
push
jb
ret
dec
ficomp
or
mov
push
imul
imul
dec
adc
mov
outs
repz
push
rol
dec
mov
in
(bad)
jb
or
cdq
int3
aas
es
das
jne
or
ins
or
ins
mov
daa
ds
daa
dec
pop
dec
ja
es
imul
push
or
sub
test
jb
or
mov
push
jle
add
inc
add
test
push
sbb
pushf
in
in
div
add
push
jnp
inc
bound
dec
xor
nop
cli
fidivr
pushf
mov
jns
push
pop
sub
cbw
in
adc
in
hlt
popa
scas
xor
lock
or
repnz
or
and
inc
jbe
ins
inc
js
ss
and
inc
fidiv
xor
stc
or
popa
or
aad
and
mov
inc
and
inc
fdivp
add
inc
and
out
cmp
xor
jne
shl
push
dec
repnz
test
cmp
push
mov
enter
sbb
or
stos
outs
cmps
mov
push
sub
dec
add
movs
push
add
sbb
pop
push
jbe
pop
call
push
sbb
mov
lock
jnp
cmp
ins
cmp
cmp
fwait
and
adc
or
retf
add
jae
or
xchg
es
dec
loopne
retf
aaa
mov
movs
push
sbb
(bad)
xchg
fstp
scas
mov
frstor
mov
rcr
push
xor
test
mov
xchg
push
std
mov
jecxz
xor
dec
push
or
pop
call
out
repnz
cmp
loopne
xor
retf
mov
sub
out
(bad)
std
adc
ret
push
mov
cmp
aad
inc
mov
jecxz
in
jecxz
mov
fcomip
xor
adc
stos
lahf
nop
cdq
fiadd
pop
retf
mov
(bad)
xchg
mov
sub
js
sub
and
mov
xor
rcl
push
nop
and
das
pop
inc
ror
pop
add
cmp
dec
add
cmp
inc
mov
popa
dec
push
imul
test
pop
movs
aas
sub
jg
push
push
lea
sub
mov
test
cld
inc
inc
out
movs
xor
sub
xchg
cmp
sub
xor
xor
(bad)
or
push
adc
dec
push
repnz
jb
stos
sub
ds
xchg
cmp
jb
push
mov
lea
ret
cdq
or
xchg
sub
mov
adc
(bad)
cmps
jne
mov
mov
in
sub
std
inc
mov
int3
xchg
lahf
test
cmp
dec
repz
scas
cs
push
clc
out
mov
push
xchg
daa
mov
mov
aam
sbb
mov
(bad)
mov
jle
iret
out
and
adc
push
outs
fistp
lock
in
cmp
mov
xor
es
fadd
movs
or
call
cld
dec
push
sub
xchg
mov
dec
cmps
std
cs
jge
mov
in
push
jg
sbb
out
jns
cmp
pushf
fiadd
and
int3
clc
popw
dec
jmp
inc
cs
jo
movs
sub
jnp
cmc
sbb
mov
jmp
fist
inc
adc
xchg
loopne
xchg
dec
inc
cmp
cld
mov
and
retf
mov
mov
outs
out
rcl
mov
neg
xor
jge
xchg
lock
mov
jne
cmps
sahf
mov
jne
pop
add
mov
push
shl
rcr
jns
cld
out
pop
mov
or
mov
inc
xchg
sub
sti
pop
ret
jns
mov
sbb
dec
xchg
sahf
mov
jb
mov
fisub
mov
jp
mov
fist
pop
loope
jno
out
sub
mov
ins
jg
ins
push
(bad)
adc
xchg
int3
stos
pop
shl
and
cmp
retf
int3
inc
pop
aad
test
(bad)
stos
cmp
push
mov
mov
add
pusha
pop
cwde
jle
out
mov
pop
or
pop
cmp
jg
sbb
jne
icebp
(bad)
mov
pop
loope
popf
mov
out
dec
dec
(bad)
in
push
pop
cmps
or
dec
sub
xlat
dec
cwde
scas
xor
cdq
fisttp
pusha
jnp
or
ret
pop
repz
sbb
mov
in
add
jbe
jno
pop
loopne
ins
shr
jmp
outs
dec
movs
xor
mov
mov
fnstcw
(bad)
sbb
cmp
mov
jae
inc
in
in
call
sub
movs
xor
daa
imul
pop
xor
dec
push
fldenv
push
mov
mov
sub
adc
push
mov
fs
aaa
xor
adc
mov
xchg
popa
mov
add
stc
dec
xchg
(bad)
pop
imul
dec
sar
or
call
or
jl
mov
(bad)
leave
cli
or
leave
mov
ror
mov
xor
(bad)
cmc
and
and
fistp
mov
test
mov
test
lea
adc
outs
je
jmp
push
inc
pop
fs
xchg
mov
repz
pushf
cwde
push
mov
xchg
fwait
mov
sub
cmp
scas
pop
call
out
ins
sbb
dec
push
(bad)
imul
sub
sbb
outs
jmp
jae
dec
adc
mov
xor
mov
adc
mov
sbb
repz
sub
pop
out
arpl
jecxz
das
cmp
retf
jno
sar
xchg
in
xor
add
mov
cmp
fst
xchg
ins
jl
lea
jge
in
call
fsubr
xchg
mov
mov
inc
mov
push
nop
jmp
inc
ins
loopne
xchg
clc
test
sub
xchg
cli
(bad)
cmps
lods
dec
and
push
dec
push
cld
jmp
movs
xor
xor
mov
pop
jb
cmps
mov
push
stos
xchg
stos
adc
xor
jo
jl
ja
sbb
pop
and
sbb
cs
sub
retf
xchg
adc
lahf
rcl
cmps
mov
xlat
cmps
jnp
ins
push
and
sub
dec
retf
iret
push
dec
mov
cmp
jae
push
jne
jbe
pop
mov
clc
movs
cdq
push
retf
mov
sub
and
xchg
(bad)
aam
mov
pop
fnstsw
mov
xchg
cmp
adc
inc
mov
loope
in
(bad)
push
rcl
xchg
daa
mov
push
aaa
adc
daa
push
sbb
std
inc
jnp
mov
fmul
xlat
mov
mov
mov
sbb
ror
add
sbb
pop
mov
push
cmc
jae
outs
repz
push
sbb
jmp
cmps
out
fldenv
push
(bad)
nop
sar
retf
and
mov
inc
and
repnz
rol
sbb
fsub
in
test
pop
fsubr
mov
adc
cmp
loopne
in
ja
js
fld
xchg
add
push
cmp
sti
mov
xor
scas
shr
xchg
sbb
xchg
sbb
outs
add
push
push
jmp
pop
xchg
fsave
in
rol
xor
test
inc
xchg
jp
sub
jbe
jo
js
out
rcl
cmp
push
xchg
in
xor
cmp
jecxz
mov
jl
dec
sti
push
ret
das
xchg
test
pop
cmp
mov
int
xchg
add
cmp
fs
inc
iret
stos
and
lods
or
imul
cmps
xchg
vmwrite
push
dec
pop
xor
(bad)
push
mov
add
or
push
mov
sbb
cmp
jb
and
repnz
pop
pop
cdq
and
cmp
mov
(bad)
jmp
jl
xor
inc
neg
push
aas
cmps
je
and
sbb
ins
and
xor
mov
mov
stos
repnz
push
movs
mov
cs
xor
dec
iret
adc
dec
cmps
add
add
and
mov
mov
lods
pop
imul
jl
aaa
arpl
popa
stc
xchg
sub
pop
retf
jl
mov
pop
adc
lahf
test
mov
push
shr
jmp
mov
mov
scas
adc
in
mov
ss
sub
cmps
add
or
add
mov
dec
cwde
fs
xchg
icebp
sbb
outs
mov
inc
(bad)
stc
mov
cmp
imul
scas
xor
add
inc
call
fcomp
mov
jp
into
enter
cmps
int
lods
push
cdq
mov
pop
stc
push
jmp
pushf
jl
sub
imul
push
jne
aad
add
loope
jecxz
mov
sbb
ins
push
sub
call
and
jns
retf
inc
movs
(bad)
retf
je
mov
movs
jge
xor
retf
mov
mov
repnz
jmp
and
rol
adc
cmp
test
mov
cmc
cs
imul
shr
movs
mov
call
nop
mov
pop
clc
xor
mov
xor
in
jp
dec
mov
pop
xchg
xor
js
das
shr
lea
call
xor
jbe
pop
iret
fstp
fcom
jae
jb
adc
sub
std
cli
push
rol
or
outs
int3
imul
jmp
imul
jnp
mov
jno
and
rol
mov
outs
dec
jae
sub
mov
cld
cmp
pusha
sub
and
adc
hlt
adc
iret
sbb
and
mov
retf
pusha
adc
stos
and
fimul
fcomip
mov
stos
scas
add
ret
and
loopne
mov
jmp
xor
dec
cmp
jb
stos
xlat
or
sbb
ss
xchg
cmp
bound
xor
and
out
ret
aaa
ret
jnp
ins
and
mov
and
inc
sahf
jae
retf
cld
cmps
fistp
je
mov
xchg
sub
enter
in
sub
jb
push
setp
stc
sub
data16
jns
sub
mov
mov
gs
pop
loop
mov
and
xor
mov
lea
cmps
retf
xchg
cmc
ss
lods
inc
sub
xchg
cmps
fdivp
lea
rcl
icebp
push
out
in
rcl
jnp
push
jae
cmc
outs
mov
(bad)
aam
repz
sub
ins
and
imul
mov
or
dec
imul
fwait
ror
push
xchg
scas
push
sbb
clc
in
ret
push
dec
push
pop
(bad)
popf
sbb
pop
scas
stos
repnz
sub
neg
lea
push
cmp
cmp
std
and
dec
inc
mov
push
loop
xor
cmp
and
adc
hlt
add
jns
repnz
xor
mov
stos
das
ror
sbb
cld
dec
test
mov
inc
cmp
sbb
cmps
and
or
cmp
jge
push
sbb
jmp
call
popa
sub
xchg
(bad)
pop
icebp
(bad)
cli
lock
cmp
cmp
mov
test
inc
jmp
pop
cli
sub
dec
and
inc
aam
xchg
and
out
stos
inc
xchg
sub
add
rcl
add
pop
mov
add
mov
or
pusha
mov
cmps
jb
stc
sbb
clc
imul
fcomp
cmp
dec
scas
add
pop
mov
ja
push
bound
adc
cmc
push
adc
dec
jnp
shr
es
xchg
inc
mov
inc
push
mov
aad
push
arpl
xchg
in
adc
fcom
lds
sti
cld
push
nop
mov
adc
sub
aaa
cmps
cmp
inc
cdq
repz
mov
jno
adc
(bad)
pop
push
xor
lods
adc
es
call
fist
(bad)
(bad)
leave
sub
addr16
fisttp
xchg
jmp
push
sar
shl
mov
xor
pop
in
into
lods
mov
pop
call
pop
dec
outs
scas
mov
xor
push
push
movs
in
cdq
loope
dec
inc
stos
inc
add
mov
jge
lds
xchg
retf
jns
das
jbe
sbb
fldenv
push
pop
les
inc
imul
test
mov
pusha
or
int
sub
inc
das
clc
arpl
(bad)
lock
inc
xchg
fisubr
repnz
cmc
push
lods
outs
xor
ret
xor
jg
xor
lods
ins
xor
or
mov
adc
mov
hlt
rol
stos
in
cwde
adc
mov
or
dec
cmc
or
xor
sub
out
jae
xchg
inc
loope
mov
imul
dec
sbb
mov
ret
pop
repnz
and
sahf
push
adc
(bad)
outs
dec
int3
inc
jle
lahf
push
movs
mov
pop
loop
xchg
movs
push
sub
loope
adc
jb
push
and
mov
xor
add
or
hlt
sti
inc
cmp
dec
adc
mov
inc
adc
shl
mov
fst
rcl
inc
adc
aaa
jp
or
or
(bad)
arpl
repnz
into
jg
or
mov
(bad)
lds
scas
mov
sub
adc
std
fild
outs
inc
xchg
cmp
pop
jge
ds
mov
mov
call
test
cmps
(bad)
cld
xchg
and
xchg
adc
in
(bad)
out
pop
xor
inc
fs
js
jle
gs
jne
nop
inc
in
fnstcw
fsubr
cmc
inc
retf
and
pop
xor
clc
lods
(bad)
ror
mov
sub
bound
scas
gs
out
xchg
dec
and
push
dec
push
popa
push
or
mov
repnz
int
add
xlat
xor
mov
into
and
lods
test
fimul
mov
add
sub
or
jae
out
fs
aas
lds
fwait
adc
xchg
nop
dec
fwait
add
icebp
fs
aaa
(bad)
scas
leave
and
cmp
cmp
jae
fdiv
adc
push
in
adc
lods
and
pusha
js
mov
sbb
js
add
test
cmp
dec
clc
pop
shl
adc
in
xchg
jne
pop
je
jnp
ins
test
in
dec
mov
inc
mov
iret
mov
and
lds
cld
(bad)
in
aad
data16
ficom
(bad)
movs
fdiv
sbb
pop
sbb
push
outs
push
ins
out
dec
sar
jg
mov
push
xor
push
jecxz
ret
popf
call
jl
in
lahf
dec
loop
cli
loopne
aad
inc
js
mov
inc
ss
cmp
push
jp
sbb
test
jmp
fimul
int
std
pop
push
pushf
mov
pop
loop
fwait
sti
rcr
mov
cmp
inc
das
adc
fwait
js
frstor
cs
es
jns
in
mov
push
rcl
and
arpl
dec
push
out
movs
push
test
adc
outs
sar
loope
test
mov
mov
jbe
jbe
push
pop
aam
add
pop
lods
inc
jno
pop
ja
and
jecxz
ins
xor
xchg
push
adc
(bad)
xlat
add
push
push
daa
sbb
push
cmps
and
adc
jnp
dec
movs
in
or
(bad)
leave
xor
sar
dec
outs
cld
pushf
fsubr
fwait
and
adc
pop
pop
xor
lock
ins
cmp
mov
ins
or
and
push
push
and
sbb
mov
cmp
mov
sub
neg
sbb
sub
dec
dec
push
inc
mov
das
pop
mov
rol
jmp
or
test
stos
sub
push
mov
pushaw
and
xchg
xchg
xor
test
push
cmp
cdq
xor
pop
shl
add
jg
push
ret
popa
mov
or
mov
dec
mov
xor
into
adc
xchg
inc
in
pop
lea
out
inc
lods
aad
sub
fisub
int
arpl
dec
dec
shl
mov
dec
push
jp
stos
out
push
adc
sub
xor
mov
inc
(bad)
sub
and
or
daa
pop
pop
mov
push
imul
cli
out
bound
and
dec
stc
fnstsw
mov
inc
loop
test
pop
xchg
xchg
sar
sbb
into
(bad)
sub
loopne
test
shr
loop
push
or
lds
sbb
outs
sbb
cmp
xor
xchg
or
push
(bad)
push
mov
call
pop
jle
ret
pop
mov
mov
mov
das
ret
jnp
(bad)
pusha
cmp
test
pop
sub
aad
adc
or
pop
imul
xchg
les
sbb
xchg
adc
test
jbe
repz
fucom
adc
pop
imul
mov
cmp
and
lock
mov
jg
sbb
jp
inc
aam
cmp
fdivr
leave
fcmovnbe
mov
add
or
ret
dec
pop
cdq
(bad)
or
sbb
ret
(bad)
mov
loop
movs
lock
dec
sbb
es
mov
pop
cmp
inc
out
pushf
not
sti
pop
sub
cmps
adc
xchg
ins
std
xchg
inc
cmp
pop
imul
adc
push
push
xlat
xchg
mov
test
push
mov
xlat
hlt
out
inc
inc
jge
fidiv
mov
sbb
int
add
aam
sbb
mov
mov
fistp
cmp
inc
pop
dec
xchg
mov
(bad)
stos
scas
sbb
in
push
sbb
test
lock
sub
mul
(bad)
sub
cdq
mov
repz
stos
pop
xchg
ss
push
loope
dec
adc
movs
das
mov
push
jl
push
sahf
mov
data16
pop
sbb
js
inc
repnz
in
rcr
lahf
inc
adc
add
add
push
pop
cmp
pop
(bad)
pop
scas
sar
and
xor
sbb
dec
gs
jae
enter
int3
das
loop
add
pop
inc
loop
mov
or
inc
sub
jae
(bad)
(bad)
mov
stc
aas
jns
push
fwait
out
mov
pop
cmp
out
cmp
push
ret
loopne
mov
push
das
pop
add
cmp
sub
out
adc
xchg
jle
pop
mov
outs
arpl
add
hlt
and
push
in
shl
mov
pop
xor
push
inc
lahf
clc
jmp
dec
mul
sub
cmp
or
jo
pusha
(bad)
jbe
lahf
pop
mov
inc
mov
mov
es
pop
test
sub
mov
cli
xor
(bad)
push
shr
xor
push
cwde
mov
push
sbb
mov
pop
sbb
ror
test
sub
jp
cmp
push
push
adc
jp
dec
cmp
sbb
mov
call
mov
ja
test
mov
push
out
sbb
pop
jb
and
pop
inc
je
cmp
fdiv
jp
js
and
popa
xchg
and
stc
das
sti
call
dec
push
push
sahf
bound
cld
out
test
fcomi
gs
cmp
sahf
cli
mov
fidivr
in
adc
icebp
push
mov
int3
popa
call
mov
lea
xor
call
dec
pop
loope
jno
xlat
mov
jge
imul
cdq
mov
es
dec
ja
push
fnstenv
cs
xor
add
dec
push
jo
dec
xor
pop
mov
push
lods
mov
(bad)
mov
mov
in
xchg
stos
fcomp
xchg
sahf
or
(bad)
das
jg
xor
cdq
sbb
push
cmps
fmul
inc
pop
add
mov
mov
in
push
mov
(bad)
mov
retf
fdiv
mov
adc
adc
rcl
data16
in
popf
inc
pop
and
adc
sbb
mov
(bad)
mov
mov
repz
imul
xor
jl
mov
dec
xchg
jle
jge
mov
adc
sbb
pop
xchg
lea
test
mov
in
push
sub
test
dec
jge
stos
rol
xchg
call
call
dec
dec
inc
ss
mov
pop
enter
cdq
cwde
sbb
add
inc
aam
adc
loopne
jle
ins
(bad)
and
repz
or
mov
mov
cld
call
adc
(bad)
jp
stos
dec
fistp
xchg
dec
dec
mov
mov
jle
sahf
inc
outs
dec
jb
in
test
mov
std
cmp
mov
sub
add
jmp
fmul
jg
xor
and
or
idiv
ret
dec
mov
fidiv
xor
fdivr
xchg
jne
xchg
cmp
inc
jns
aad
aad
push
(bad)
push
sub
ins
sub
loopne
add
movs
ds
mov
ja
push
jmp
adc
cwde
add
retf
jg
ins
test
fs
jp
leave
inc
mov
rcl
adc
dec
mov
cmp
shl
jae
pop
fsubr
cwde
jno
mov
fwait
ror
push
repz
(bad)
mov
and
pop
out
xor
out
repz
cmp
inc
xchg
rcr
cmps
add
fsub
test
fstp
fsubr
add
add
add
sub
pop
pop
jl
dec
add
push
mov
mov
cmps
fild
scas
hlt
pop
pop
sahf
sub
or
and
sub
sahf
push
mov
push
and
xor
xor
dec
mov
aam
imul
and
sbb
cmc
inc
push
cmps
sbb
dec
push
push
call
and
xlat
clc
fsubrp
mov
dec
jae
addr16
and
in
push
cmps
rcr
push
pop
pop
jne
scas
fwait
cmps
or
jecxz
add
mov
movs
cmp
cmp
and
out
and
jecxz
bound
and
dec
test
mov
arpl
cmp
mov
xor
sbb
pop
add
push
xchg
cs
push
xchg
sub
xchg
sub
mov
mov
mov
jns
add
retf
push
fadd
jae
in
jns
fild
cli
sahf
icebp
in
inc
inc
aas
xor
sbb
and
neg
dec
mov
jl
inc
mov
or
jg
mov
xchg
push
addr16
push
jg
daa
mov
ja
mov
in
and
sbb
rcr
mov
sub
les
xor
jmp
push
icebp
stos
xor
and
push
mov
(bad)
shl
xor
push
(bad)
add
div
lds
xchg
call
jge
es
sbb
(bad)
sub
sbb
(bad)
imul
movs
sub
sub
movs
xor
fincstp
and
mov
lds
loope
push
cmps
ret
add
xor
jge
mov
(bad)
sub
retf
sub
sbb
xchg
or
scas
stos
dec
jnp
adc
sbb
mov
sub
imul
adc
xchg
test
xor
mov
mov
mov
(bad)
imul
cld
or
mov
jno
fwait
std
cli
ss
or
(bad)
fldenv
xlat
je
leave
retf
aaa
icebp
(bad)
bound
push
pop
sub
lahf
push
push
or
fs
mov
arpl
push
mov
push
ja
add
mov
inc
(bad)
fs
sub
les
and
cmp
sub
pop
mov
sub
xlat
add
push
push
je
cmp
imul
dec
push
pop
sbb
shl
push
sti
pop
mov
es
push
rcl
inc
lock
mov
cld
(bad)
lock
jmp
ins
adc
mov
adc
jnp
iret
xchg
jge
ins
jbe
mov
ret
and
mov
mov
pushf
jle
xlat
jne
mov
xchg
outs
cmp
mov
std
dec
repnz
adc
push
and
movs
(bad)
sbb
xchg
fbld
jmp
mov
aaa
sar
movzx
xchg
sbb
adc
sbb
cmc
push
in
jae
imul
pop
mov
xchg
jl
sub
cmp
idiv
xlat
mov
dec
push
mov
movs
enter
push
or
test
cmp
jne
aad
jae
add
add
adc
mov
(bad)
cmp
sub
or
sub
neg
mov
aam
jp
fild
cwde
out
pop
inc
inc
cwde
das
mov
test
inc
out
mov
stc
mov
in
imul
(bad)
push
jo
pop
mov
out
cmp
sar
adc
mov
stos
add
add
sahf
movs
mov
repz
repnz
(bad)
icebp
or
pop
mov
sub
outs
fidivr
adc
and
mov
js
mov
inc
cs
push
loope
add
mov
je
sbb
jmp
scas
lock
int3
fidiv
test
mov
sbb
test
ja
scas
lock
push
add
xor
mov
xlat
daa
mov
pop
fucomi
cmp
mov
mov
test
sti
fisubr
push
mov
xchg
(bad)
std
jmp
int
xchg
fisubr
adc
mov
dec
push
jae
mov
add
jp
popa
int3
push
out
jmp
add
ret
rcr
(bad)
enter
jmp
adc
adc
bound
push
retf
ds
cli
pop
xor
inc
dec
cmp
push
dec
data16
add
out
popf
jnp
outs
fs
mov
push
mov
cmps
loop
xchg
jmp
int
ficom
sub
xchg
mov
ja
cli
dec
ret
ja
mov
jle
(bad)
push
cmp
adc
loope
(bad)
clc
cli
inc
imul
inc
mov
fdiv
lods
xor
mov
loop
jp
push
adc
cmc
shr
ja
retf
adc
loop
imul
or
cmps
inc
in
pop
mov
pop
jo
and
aam
cmps
stos
das
sub
or
push
int
xor
jmp
mov
shl
or
scas
mov
in
fist
push
or
sbb
mov
mov
push
clc
or
adc
(bad)
cmp
jb
sahf
mov
fild
call
xchg
aad
aaa
adc
jns
dec
or
cmp
fsub
jmp
inc
jb
bswap
mov
mov
lahf
scas
test
fimul
scas
dec
sub
cdq
ror
and
lds
les
bound
mov
arpl
std
cs
jno
mov
jg
int
pushf
mov
and
mov
pop
or
shl
clc
jb
loop
push
jmp
push
jne
or
(bad)
jmp
dec
sbb
test
sbb
scas
jl
mov
stos
xor
dec
pop
mov
cmp
leave
pop
je
out
dec
movs
loopne
arpl
lods
ror
mov
(bad)
(bad)
jmp
pop
mov
inc
icebp
div
mov
mov
mov
cmp
dec
inc
push
cmps
sbb
daa
in
cdq
fcomp
jbe
repz
mov
mov
mov
inc
sub
jns
sbb
inc
(bad)
dec
cli
cli
call
jns
cwde
mov
fwait
not
fidiv
push
mov
mov
mov
stos
ins
xchg
jns
push
dec
mov
sbb
dec
ins
jne
leave
dec
sub
inc
scas
pop
leave
daa
sti
not
movs
out
cmp
cwde
cmp
in
dec
mov
jbe
(bad)
loopne
int3
xchg
ds
push
mov
add
call
arpl
dec
inc
iret
add
sbb
cmp
test
adc
dec
cmp
test
lahf
pop
mov
push
test
cmc
jmp
xor
pop
lds
sbb
(bad)
jns
xor
dec
pop
xchg
addr16
fstp
gs
std
fcomp
add
movs
pop
lea
sti
adc
inc
aad
clc
(bad)
xchg
(bad)
pop
movs
into
xchg
retf
int3
out
inc
fidiv
add
retf
mov
push
push
push
int3
jg
repnz
popa
ins
pop
sbb
mov
jl
jb
cwde
dec
je
(bad)
mov
mov
mov
pop
inc
push
inc
push
iret
sbb
and
rcl
pop
and
cmp
push
xor
dec
hlt
mov
and
(bad)
sbb
ficom
inc
shl
rol
jne
(bad)
arpl
xchg
leave
xchg
enter
(bad)
mov
push
ret
jmp
pop
div
out
dec
ja
and
jno
push
mov
sbb
sub
sub
(bad)
test
sti
jnp
mov
mov
hlt
dec
add
mov
dec
xchg
or
retf
loope
inc
ins
xchg
int
xor
cmps
icebp
and
xor
mov
sbb
fisttp
mov
test
in
repz
retf
popf
mov
mov
sahf
inc
add
ret
call
aas
sub
ins
rcr
inc
and
stc
lds
sbb
sub
push
int3
dec
(bad)
xchg
add
sub
xlat
add
bound
xlat
ss
push
inc
dec
jns
sahf
out
mov
rcl
inc
not
xor
xchg
pop
cmp
outs
shl
push
enter
int
push
add
neg
mov
out
scas
cmc
mov
loopne
das
or
xlat
adc
fbstp
(bad)
cli
mov
rcl
xchg
stos
ret
retf
bound
push
mov
cmps
fist
and
retf
test
mov
mov
or
ror
and
or
pushf
into
mov
push
xchg
jo
pop
inc
pop
adc
xchg
push
sub
aad
push
fcomp
call
mov
fistp
sbb
cdq
in
mov
pop
stos
adc
xchg
sbb
fistp
sbb
enter
adc
sbb
push
mov
mov
dec
repnz
inc
prefetch
arpl
sub
out
push
push
mov
test
test
adc
(bad)
jge
push
sub
fldcw
mov
adc
lds
jne
clc
xor
mov
adc
data16
jb
pop
lahf
mov
lahf
popa
cs
inc
clc
xchg
pop
xor
xor
sub
fimul
fs
sbb
pop
dec
movs
in
out
ror
lods
or
push
sub
call
stos
(bad)
xor
push
dec
lock
jp
and
inc
push
clc
xchg
jp
cwde
xchg
mov
sub
add
sti
jl
call
std
ss
in
fsubrp
scas
(bad)
les
out
imul
fidivr
inc
push
in
(bad)
jmp
fnstenv
cld
add
ins
leave
call
add
loop
int3
jge
ins
in
mov
inc
push
dec
cli
int
mov
into
xchg
mov
push
jg
(bad)
(bad)
movs
dec
and
inc
(bad)
sbb
mov
fwait
mov
jae
and
stos
mov
inc
imul
mov
mov
jb
cmp
ror
call
enter
fstp
ss
xchg
xchg
push
pop
mov
mov
xchg
mov
add
add
xchg
mov
in
or
xor
jns
or
sub
push
mov
xchg
and
arpl
sub
cli
in
lahf
imul
jo
in
xlat
adc
and
jb
jne
fild
outs
and
mov
and
loop
mov
into
xchg
aas
mov
cmc
maskmovq
mul
dec
mov
shl
adc
ror
out
push
neg
addr16
xor
rcl
retf
test
sbb
int3
lds
push
imul
xor
push
out
out
fcom
mov
ds
xchg
std
fild
or
(bad)
xor
push
inc
sbb
sahf
retf
mov
jmp
mov
add
dec
mov
dec
xchg
and
pusha
outs
cmp
out
test
dec
test
push
mov
sub
inc
imul
push
aas
sub
push
xchg
mov
sub
or
mov
push
mul
popa
(bad)
xchg
cmps
mov
mov
lds
mov
push
mov
cmps
lock
or
into
add
xchg
dec
inc
test
or
inc
shr
fisub
push
and
sub
push
push
inc
or
add
pop
rol
std
sub
dec
add
jmp
xchg
mov
das
ins
pop
fs
jmp
mov
sahf
aaa
inc
add
xor
xchg
add
pop
xor
daa
xor
arpl
jp
jo
(bad)
jo
rol
mov
aaa
mov
sub
or
dec
or
cli
push
js
ja
mov
cli
xchg
into
out
int
mov
sbb
les
dec
mov
lods
lock
mov
mov
in
sbb
inc
sar
adc
push
mov
(bad)
cmp
add
or
jnp
ds
popa
retf
push
jne
adc
scas
pop
inc
jne
mov
xor
fild
stos
scas
adc
mov
push
imul
add
jae
cli
aaa
jg
dec
lods
or
(bad)
sub
adc
mov
pop
ja
inc
push
and
pop
sbb
imul
out
jge
fisub
cmp
cmp
xchg
inc
loop
push
push
inc
sahf
sub
mov
mov
repnz
les
test
retf
lea
into
fiadd
les
loop
mov
cmp
cld
dec
retf
dec
pop
mov
cmps
push
dec
lahf
pop
(bad)
mov
pop
dec
scas
or
aad
mov
xor
inc
dec
pusha
cmp
scas
fadd
jo
(bad)
push
dec
test
sbb
fwait
or
retf
mov
sbb
icebp
pop
jmp
data16
jo
jecxz
xchg
lss
and
xor
int
lahf
cdq
pop
jnp
mov
sub
inc
sub
mov
addr16
ja
out
cs
scas
pop
fld
push
ret
rol
js
adc
retf
sbb
jp
mov
loop
dec
ret
ins
adc
mov
add
jae
xchg
pop
xchg
cmc
or
jns
test
or
xor
add
rcr
adc
pop
jae
push
sbb
xchg
retf
scas
and
lods
or
sub
pop
das
std
movs
xchg
cmp
fcomp
mov
add
stos
fldenv
jae
popf
cdq
pop
ja
lods
retf
adc
out
mov
ret
sub
mov
xchg
sub
aas
cmp
sbb
in
adc
sub
dec
jno
cwde
cwde
movups
imul
in
iret
bound
ret
and
sub
(bad)
repnz
pop
(bad)
repz
pushf
sahf
xchg
or
jns
loope
cmp
rol
cs
pop
(bad)
push
jl
inc
fadd
sbb
add
and
xor
cmps
test
add
retf
jge
test
stos
test
adc
ficomp
sbb
scas
push
mov
adc
out
xor
fdivp
stos
push
sar
fs
mov
jecxz
pop
sbb
pop
in
cmp
ins
jnp
(bad)
mov
imul
mov
cmp
call
test
hlt
sbb
jg
or
xor
inc
fild
jp
daa
loopne
(bad)
fcomp
aad
inc
sub
jl
add
push
inc
and
stos
or
sbb
sub
fst
push
dec
gs
push
enter
adc
mov
push
scas
xchg
lods
outs
cmp
(bad)
imul
and
call
test
sbb
push
pop
mov
xor
cmp
int3
sahf
lods
movs
adc
xchg
fistp
inc
(bad)
dec
dec
ss
mov
shl
cmp
hlt
add
jb
cmp
test
(bad)
or
(bad)
ret
lea
add
in
mov
int
jle
popf
call
rcr
aaa
in
mov
loop
sti
xor
add
leave
cmp
fisttp
in
sub
pop
inc
and
pushf
dec
mov
cmp
fs
ss
movs
idiv
sub
cmc
fsub
scas
adc
lock
inc
sti
pop
mov
dec
sbb
fdiv
leave
xchg
sub
(bad)
mov
pop
icebp
fadd
int3
lahf
aad
inc
clc
mov
sub
pop
pusha
inc
std
iret
data16
stc
jmp
leave
je
or
out
cdq
sbb
loopne
pop
xor
lds
ficomp
adc
cdq
iret
repnz
popf
add
fistp
pop
(bad)
test
out
adc
(bad)
dec
dec
inc
ss
sub
ds
dec
xchg
je
mov
cmp
cmps
imul
lock
loop
cmp
inc
push
movs
mov
cwde
in
mov
cs
push
ja
xor
dec
push
jno
jmp
rol
cmp
and
ds
repz
mov
je
push
mov
and
sub
retf
retf
mov
sbb
(bad)
call
icebp
dec
jae
dec
xchg
cmps
in
je
cli
jmp
push
cmps
out
dec
sbb
dec
mov
ficomp
pop
dec
sbb
jns
mov
xlat
adc
iret
mov
imul
int3
jp
out
cmc
mov
fs
pusha
or
gs
xchg
movs
xchg
je
int3
hlt
push
adc
imul
or
xchg
jo
ret
ficom
ret
cmp
int
fimul
pop
enter
(bad)
sub
pop
imul
mov
ins
or
xchg
outs
fidiv
push
leave
loope
add
or
arpl
retf
push
dec
int3
pop
inc
imul
mov
mov
jmp
in
(bad)
sub
xchg
mov
dec
icebp
or
arpl
jmp
retf
test
push
sbb
out
lds
dec
jmp
dec
popf
fwait
xor
mov
push
fs
and
mov
sbb
std
ss
mov
jo
mov
loop
jl
and
add
push
aad
xor
dec
scas
out
adc
mov
jae
ss
jle
xlat
(bad)
or
cli
test
in
arpl
adc
and
and
cdq
data16
jno
pop
out
mov
pop
dec
das
add
sahf
dec
mov
call
popa
push
push
bound
(bad)
jnp
ud0
repz
xchg
jne
cmp
mov
dec
in
or
mov
inc
and
dec
daa
dec
mov
in
mov
mov
and
mov
jne
out
push
je
bound
into
xor
or
add
loopne
inc
push
loopne
xor
aas
jmp
adc
out
mov
xor
fld
repnz
jg
loopne
aaa
std
and
mov
retf
dec
xchg
xlat
mov
jg
fistp
call
fwait
adc
push
aam
sbb
int3
movntps
ret
call
adc
and
dec
sub
jecxz
inc
fsubr
in
mov
adc
dec
adc
xchg
lahf
dec
lods
and
ret
leave
fsubr
jecxz
xor
mov
add
adc
stos
fs
clc
clc
xchg
enter
sub
or
xchg
mov
pop
xchg
popa
int
mov
pop
setg
add
sbb
mov
sub
jne
ret
inc
ret
(bad)
aam
jb
cmp
pop
or
jno
clc
mov
outs
ins
mov
aad
and
push
addr16
add
pop
imul
fs
fist
jl
sbb
push
es
xor
not
ja
inc
icebp
int
cmp
xchg
lods
inc
add
imul
aam
js
outs
and
pusha
jb
iret
loop
dec
(bad)
sahf
gs
addr16
and
jp
cmps
retf
and
sbb
sbb
ret
mov
test
mov
cld
adc
mov
mov
pop
call
sbb
cmp
into
ins
and
js
bound
es
loope
mov
inc
imul
pop
push
mov
add
add
jle
fwait
call
push
cmp
xchg
add
ror
retf
cmp
jl
mov
pop
cmp
mov
jmp
xor
lock
mov
(bad)
pop
pop
movs
neg
or
push
sbb
inc
retf
or
push
add
outs
cmp
pop
xor
mov
inc
add
fwait
int
fcomp
pop
sub
pop
jae
iret
sub
cli
cmp
fdiv
out
mov
and
repz
xor
out
xor
out
rcl
js
push
frstor
lods
add
xor
repnz
mov
sbb
mov
inc
dec
imul
xchg
nop
fisttp
aaa
lods
and
push
mov
cld
stos
and
in
int
xor
mov
cmp
aas
inc
xor
cmp
mov
push
xor
ins
call
ins
inc
jp
jg
retf
rcr
hlt
shl
cmps
mov
repz
jmp
xchg
xchg
adc
dec
adc
scas
and
pushf
xchg
adc
jle
aam
or
xchg
in
dec
push
push
xor
arpl
mov
ins
lods
cmp
iret
mov
mov
push
movs
mov
je
sub
xlat
cmovg
xchg
fwait
mov
xor
xor
mov
sbb
add
stos
pop
ret
sub
js
xchg
mov
(bad)
mov
fiadd
loopne
addr16
addr16
fnclex
in
sub
clc
mov
jae
ja
fisttp
out
sbb
lods
ins
dec
das
mov
(bad)
in
jg
lock
and
(bad)
mov
mov
test
cld
aad
inc
iret
enter
sbb
in
fnstenv
inc
or
inc
mov
adc
int
mov
dec
aas
dec
sbb
and
mov
mov
mov
test
or
add
dec
cmps
test
cmp
test
dec
ds
nop
mov
ror
scas
dec
jle
shr
rcl
into
dec
idiv
lods
daa
mov
pop
mov
mov
daa
rcr
sbb
pop
or
cwde
les
add
leave
xchg
dec
ins
push
not
test
mov
sub
cdq
mov
mov
push
ret
mov
mov
push
mov
pop
push
scas
jo
xor
in
div
mul
sbb
sbb
jecxz
adc
xchg
sub
call
push
mov
in
jp
pop
add
nop
xor
aad
ror
adc
mov
cmp
sbb
(bad)
adc
jbe
jmp
lock
jp
cmps
cmp
not
and
push
ret
pop
repz
aad
or
and
icebp
lock
sub
adc
sub
jmp
(bad)
out
mov
ror
push
ror
outs
aad
push
mov
xor
mov
fcmovu
bndldx
pop
mov
xchg
inc
data16
mov
(bad)
mov
outs
sub
jmp
stos
sti
jns
dec
push
xchg
pop
fnstsw
pop
imul
jle
xor
das
mov
push
sub
jl
pop
push
repz
jmp
push
inc
add
lods
inc
ror
mov
(bad)
sti
test
mov
jns
jecxz
sub
inc
ficomp
fst
std
sahf
(bad)
add
push
(bad)
xchg
stos
mov
jle
ins
test
imul
pop
xlat
sbb
mov
mov
fcomp
(bad)
frstor
fisubr
femms
or
into
movs
push
pusha
imul
test
push
pop
(bad)
scas
push
arpl
fimul
mul
mov
mov
les
cdq
lods
or
mov
outs
jnp
sbb
xchg
ror
mov
adc
xor
fcomp
push
jno
fwait
adc
pop
call
lahf
sub
pop
clc
push
xchg
pop
les
lods
sbb
inc
stc
fldpi
cwde
in
mov
inc
std
rcl
jns
mov
icebp
movs
shl
mov
cwde
pop
aad
leave
iret
cmp
(bad)
stos
bound
stos
ins
push
imul
push
or
pop
sahf
sub
xor
and
shl
(bad)
(bad)
arpl
hlt
mov
js
mov
xor
push
jno
pop
loopne
mov
lahf
pop
ja
out
ficomp
xlat
or
and
and
cmps
test
shl
jle
dec
stos
jae
adc
adc
into
or
out
sub
dec
xor
call
imul
mov
xchg
leave
pop
in
mov
(bad)
mov
retf
xchg
test
push
aaa
mov
or
pand
jmp
mov
push
icebp
inc
push
inc
xor
sub
mov
dec
neg
xchg
jmp
scas
out
(bad)
pop
or
add
xor
mov
sti
push
xor
es
fsub
retf
addr16
cs
mov
inc
sub
xchg
sbb
push
out
cmp
or
adc
and
cli
mov
fsubr
inc
into
push
stos
cli
ror
pop
(bad)
out
xchg
sbb
in
movs
std
push
dec
dec
xchg
xchg
or
xor
pusha
pop
ror
in
xchg
dec
xchg
leave
sbb
cwde
sub
xor
repz
sbb
rcr
add
rcl
aas
in
repz
loopne
cmp
(bad)
pop
sahf
pushf
cmp
in
lds
jmp
(bad)
aam
imul
xlat
push
leave
or
sub
or
push
mov
inc
sbb
xlat
(bad)
sub
jno
or
out
mov
xchg
sbb
jmp
jne
adc
xor
scas
jo
mov
pop
adc
mov
cmp
jl
pop
push
mov
sub
(bad)
push
mov
popf
call
xor
xlat
xchg
ins
jns
or
jl
or
inc
dec
shl
(bad)
out
sar
cmp
or
int3
js
push
out
pop
and
fwait
jae
cmp
in
popf
sub
int
xor
sub
loope
mov
and
jg
(bad)
ror
sbb
scas
scas
movs
dec
adc
push
push
jnp
dec
push
arpl
outs
push
sbb
mov
sub
jnp
push
repz
pushf
dec
xchg
jl
sub
add
cmp
cmp
in
pop
sbb
mov
cmp
(bad)
mov
pop
sbb
xor
dec
jle
adc
fcom
mov
xor
fstenv
lahf
in
mov
jp
addr16
inc
sub
push
outs
fcomp
pop
shl
sbb
sbb
ror
ins
jnp
mul
mov
out
test
aad
mov
lock
sbb
ins
int3
out
enter
into
add
mov
jae
xchg
int
ror
inc
shl
jl
add
or
inc
pop
dec
lods
adc
inc
cmp
cmp
push
icebp
push
aam
hlt
jecxz
sub
mov
sbb
stos
mov
pusha
add
sbb
punpcklbw
cld
out
or
fnstenv
in
mov
gs
xor
and
pop
sbb
push
lods
ficom
mov
ror
std
ja
or
rcl
and
data16
fwait
sub
std
mov
cmps
stos
or
pop
mov
pop
ror
fs
jne
sti
pop
mov
loopne
data16
mov
leave
mov
add
mov
cs
sbb
jg
jae
loop
mov
and
in
push
je
pop
sbb
mov
push
adc
xchg
sub
in
cmp
and
dec
xor
xor
adc
xchg
pop
sbb
aaa
xor
int3
mov
in
sbb
and
repz
inc
loop
call
sub
add
call
sub
sahf
mov
ins
pop
cld
jecxz
and
int3
add
stos
mov
hlt
movs
lahf
sub
and
push
sub
das
jmp
sub
lds
jp
or
ret
inc
nop
jecxz
pop
inc
pusha
cwde
pop
aaa
adc
or
idiv
fs
leave
sbb
add
mov
repnz
jg
mov
(bad)
outs
and
clc
mov
sub
inc
lods
add
ins
out
lock
out
dec
xlat
imul
pop
xchg
or
fld
push
adc
mov
jbe
fwait
inc
mov
dec
or
mov
push
jnp
push
rcr
icebp
dec
mov
or
test
cmp
mov
sub
js
push
je
out
lods
outs
cld
data16
clc
mov
loope
sub
fstp
or
inc
cmp
xchg
movs
xchg
es
add
jge
mov
adc
jecxz
nop
mov
and
sub
mov
add
jb
ret
add
sbb
ffreep
mov
(bad)
and
jne
int3
xlat
pop
fst
loopne
in
call
hlt
arpl
(bad)
loopne
mov
stc
scas
and
in
nop
ss
sbb
ret
int
pushf
dec
inc
sbb
dec
in
jmp
aas
or
lods
rcr
mov
xor
lahf
mov
mov
clc
ror
push
mov
call
mov
cmp
scas
jns
mov
out
pop
pop
(bad)
mov
daa
xchg
shr
and
rcl
sbb
mov
push
cli
in
and
aaa
retf
(bad)
loop
mov
mov
or
jo
mov
cld
sub
and
mov
inc
mov
scas
stc
ds
(bad)
aam
cmps
jbe
and
jno
push
cmp
retf
sbb
lahf
push
int
sub
dec
or
ds
pusha
les
mov
ror
fsub
sub
ror
popa
sub
daa
cmp
fisttp
fisubr
add
test
lock
jo
imul
(bad)
neg
jle
adc
add
outs
add
push
mov
inc
repz
pop
sbb
dec
shr
jb
fadd
xchg
dec
add
add
and
in
and
xor
imul
nop
and
inc
sbb
adc
rcl
inc
inc
adc
xor
in
push
gs
std
aad
cmps
out
xor
call
fisubr
popa
int3
sub
mov
jo
mov
sub
fcom
xchg
bnd
ins
stos
mov
sbb
(bad)
aaa
enter
push
jno
loopne
and
loop
push
mov
aas
push
nop
xlat
stos
call
aas
inc
(bad)
jge
loop
ds
shr
mov
push
in
xchg
in
in
dec
int
popa
std
nop
pop
mov
ficom
out
sbb
xor
outs
stos
adc
push
add
xchg
cmp
sub
leave
xchg
pop
test
bound
ss
dec
mov
pop
xchg
xchg
(bad)
out
test
or
pop
or
and
add
pop
mov
add
dec
hlt
adc
fwait
lock
lea
ja
ret
mov
add
add
add
xchg
cli
test
addr16
movs
sti
loope
xor
sahf
jmp
pop
adc
push
dec
or
sbb
lods
or
stos
xor
mov
mov
mov
push
mov
mov
bswap
xchg
imul
jae
sbb
loop
popf
add
sub
push
xchg
cmp
inc
cs
out
hlt
sbb
gs
cmps
mov
stc
pop
les
ret
iret
inc
jmp
je
push
sub
push
loopne
add
xchg
retf
mov
leave
jns
dec
adc
adc
mov
jnp
dec
cmps
or
test
pop
fcom
mov
scas
rcr
push
push
scas
mov
mov
sub
push
jg
sti
ret
mov
cdq
popa
icebp
or
push
mov
je
int3
das
push
add
cwde
(bad)
iret
cwde
dec
sub
lods
or
test
lods
sbb
jmp
std
arpl
cmc
dec
mov
jle
add
mov
mov
push
(bad)
cmc
cmps
cmp
xor
and
je
jle
(bad)
(bad)
je
jae
ins
add
imul
ins
in
ins
leave
adc
cmp
xchg
ss
and
popa
xor
push
cmp
rcr
ja
inc
and
mov
push
outs
or
xchg
nop
add
enter
adc
mov
inc
test
stc
sub
call
js
dec
xlat
scas
or
call
and
fadd
jbe
das
push
or
dec
je
push
mov
pop
dec
dec
cdq
jp
jno
mov
inc
push
popa
or
adc
into
push
push
int
ret
jnp
sub
loop
sahf
push
hlt
mov
mov
xor
les
inc
(bad)
inc
xchg
mov
jg
jnp
les
xor
xchg
cmps
bound
mov
push
sub
adc
jg
and
sti
xor
add
sbb
mov
pop
enter
sbb
dec
fisttp
cmps
and
mov
ret
fwait
daa
sbb
inc
into
mov
iret
cmp
imul
add
ret
inc
sahf
out
jno
push
fdivr
inc
fild
dec
xchg
xchg
loop
cmc
pop
scas
je
pusha
movs
sbb
mov
rol
fiadd
mov
pop
sbb
fldcw
mov
ud0
sub
push
pop
aaa
add
adc
fld
sbb
lea
ins
arpl
retf
(bad)
in
mov
int3
inc
or
fs
jl
mov
push
push
or
mov
mov
dec
js
(bad)
repnz
in
xchg
jo
nop
lods
sbb
nop
retf
mov
add
mov
adc
cmp
sar
std
sbb
mov
call
mov
pop
es
add
cs
pushf
push
mov
or
es
xchg
sbb
jbe
adc
mov
popa
in
fcmovu
movs
push
jp
(bad)
fs
retf
push
xchg
pop
jge
mov
and
sahf
nop
mov
mov
xor
in
and
dec
jnp
in
dec
sub
inc
sbb
xchg
scas
inc
lods
fucomi
je
in
xchg
and
aas
iret
push
lods
adc
push
(bad)
fnstenv
retf
cmps
fs
jb
dec
in
xor
aaa
mov
lahf
test
aad
add
sbb
mov
pop
(bad)
cmps
and
dec
call
dec
popf
dec
ss
jecxz
aaa
xor
clc
hlt
arpl
ficomp
push
arpl
pop
mov
cdq
int
sub
imul
cmp
into
pop
fbstp
rcr
push
cmc
sbb
sahf
or
lds
mov
mov
lds
dec
outs
mov
in
call
push
mov
aam
(bad)
xchg
jecxz
dec
or
idiv
adc
jle
not
std
fstp
daa
dec
icebp
(bad)
(bad)
ds
xchg
pop
sbb
iret
mov
sti
sub
mov
cmp
fadd
out
(bad)
imul
pop
sub
push
inc
jmp
inc
push
cld
dec
jnp
jns
push
loopne
cmp
sti
pop
jp
mov
dec
lods
xchg
add
hlt
out
pop
dec
sbb
mov
dec
sti
pop
out
bound
dec
adc
popf
rcr
jnp
mov
aam
jnp
add
xlat
test
and
fcomp
mov
cdq
xor
movs
jae
aam
stos
mov
pop
aas
shl
sbb
sahf
sbb
sbb
pop
ins
retf
xor
mov
or
add
mov
in
fidiv
add
fdiv
jge
dec
and
call
xchg
pop
push
mov
hlt
lahf
and
or
clc
mov
mov
aaa
sar
aam
je
cs
or
xchg
ret
sbb
stos
adc
add
lock
loope
sub
pusha
mov
add
xchg
jnp
mov
mov
mov
out
addr16
stos
mov
int
scas
nop
push
dec
xor
popa
inc
and
imul
js
mov
push
pop
mov
lods
mov
out
mov
add
lock
fwait
xchg
or
gs
arpl
sub
adc
inc
bound
outs
mov
mov
sub
repnz
call
inc
jbe
push
cmp
sbb
rol
mov
ins
gs
cdq
(bad)
shr
jmp
stc
sti
jmp
lea
test
jo
dec
ja
dec
jne
data16
sub
mov
ds
cmp
jmp
pop
adc
cwde
push
rcr
cwde
daa
xchg
xchg
hlt
mov
sbb
or
push
dec
xchg
and
pop
stc
mov
push
cld
lock
fbstp
jg
lea
jmp
cmc
sub
iret
sbb
mov
mov
and
sub
jo
(bad)
or
lahf
jmp
or
leave
and
inc
ret
repz
gs
xor
mov
ss
mov
(bad)
call
jle
jp
scas
mov
add
loop
adc
inc
(bad)
outs
ja
pop
or
cmp
in
pop
ins
mov
mul
pop
loop
jnp
stos
int3
and
add
add
popa
lahf
pop
popa
push
pop
in
movs
or
punpckldq
mov
mov
movups
push
cmp
aad
rol
stc
pop
jb
adc
ja
push
lds
test
jns
popa
push
dec
cmp
inc
lock
call
call
add
fnstcw
(bad)
cld
cdq
or
jp
mov
sbb
jmp
in
push
push
loope
jno
add
or
retf
shr
xlat
pcmpeqb
enter
push
add
push
ret
hlt
xchg
jge
and
pop
rol
xor
dec
lods
mov
pop
xchg
daa
adc
push
test
bound
sbb
dec
cs
ffreep
cmovnp
cs
movs
loopne
les
and
push
mov
xor
jnp
leave
data16
sbb
bound
or
pop
test
fisttp
enter
cmp
dec
in
rcl
loope
stc
jge
jmp
push
out
adc
and
retf
add
xchg
and
int
stos
and
lds
fisubr
push
jnp
lahf
sub
fcomp
or
jmp
mov
cmp
aaa
mov
mov
mov
sub
loopne
mov
or
lock
adc
mov
shr
sbb
adc
jge
and
clc
call
pushf
xor
add
inc
xor
jge
stc
dec
dec
xor
std
jnp
jl
out
dec
inc
(bad)
lods
jnp
lock
js
adc
jns
cdq
dec
add
and
aaa
pop
sbb
leave
test
add
in
sbb
cld
ja
test
ror
and
sub
in
out
adc
jae
sub
ret
mov
xor
sahf
or
(bad)
sbb
mov
mov
setae
enter
or
mov
inc
or
and
jg
xlat
sub
mov
mov
sub
mov
mov
and
out
xchg
movs
fsubrp
icebp
enter
std
mov
cmp
repz
sar
xor
out
mov
into
or
daa
mov
and
xchg
add
pop
push
(bad)
ficom
js
or
stos
and
pop
fbstp
xchg
ret
jle
aad
clc
and
mov
mov
xchg
xchg
repnz
xor
sbb
into
push
rcl
dec
(bad)
call
pop
add
add
cmp
(bad)
or
push
ja
ror
call
retf
cdq
scas
nop
jecxz
dec
cdq
sbb
ss
mov
mov
mov
retf
hlt
add
jbe
sbb
imul
push
stos
call
xchg
cwde
clc
adc
aas
jge
fstp
popf
outs
call
repnz
lods
inc
and
jge
je
ds
mov
mov
repz
cdq
cmp
jno
jmp
call
or
sbb
cs
je
mov
das
dec
sub
sub
mov
stos
or
and
out
mov
pushf
daa
stos
pop
into
ror
repz
sahf
sub
push
ret
adc
xlat
in
pop
xchg
inc
or
cld
xchg
dec
pop
arpl
cmps
or
sub
pop
mov
call
iret
out
cwde
jae
xchg
out
xchg
lods
inc
jp
jl
and
in
arpl
adc
cs
inc
pop
fdivr
jo
xchg
dec
and
adc
inc
adc
out
sub
mov
or
and
xchg
sar
mov
lahf
cwde
adc
inc
jmp
xor
push
leave
dec
fcmove
push
cmps
in
adc
jecxz
mov
aaa
jge
cwde
mov
aad
mov
ret
xchg
push
jp
or
mov
jno
mov
add
jns
in
add
inc
pop
mov
adc
das
cld
(bad)
sub
call
pop
or
data16
adc
jb
jns
mov
mov
pushf
mov
jno
lock
enter
in
inc
hlt
(bad)
push
ins
fdivr
test
xchg
dec
mov
jae
ds
mov
fmul
inc
out
pop
adc
adc
adc
bound
aas
push
xchg
sub
adc
sub
scas
xchg
mov
mov
inc
cmp
test
daa
dec
mov
jnp
adc
movs
mov
jecxz
ins
cld
inc
pop
enter
lods
div
cmp
(bad)
dec
cli
mov
gs
cs
retf
push
xor
stos
fsub
call
stos
out
push
mov
pop
inc
cwde
test
push
daa
mov
and
cmp
aas
fwait
push
(bad)
xor
shl
(bad)
xchg
out
mov
fist
loope
xor
sbb
repz
retf
xchg
dec
ins
mov
mov
pop
imul
mov
add
ins
xchg
fwait
in
ror
sub
out
popf
ror
inc
dec
fidiv
cmp
(bad)
xchg
push
push
and
pop
fwait
nop
xchg
inc
js
(bad)
movs
movs
mov
push
sub
cmp
inc
ss
out
xchg
fidivr
das
out
and
sar
push
push
mov
fisttp
xor
rcl
dec
dec
clc
cli
push
movs
or
(bad)
push
jge
sub
jmp
adc
or
rcr
sub
lock
scas
in
(bad)
pusha
dec
(bad)
cmc
into
outs
test
(bad)
push
lods
jg
pusha
push
jecxz
cli
push
sub
cwde
iret
sbb
fstp
mov
sbb
xchg
push
xchg
push
mov
lds
imul
mov
test
xor
sbb
or
mov
stos
mov
pop
cli
cmc
mov
and
dec
dec
leave
cs
adc
out
xor
dec
xchg
inc
outs
fwait
pop
or
push
daa
xchg
dec
outs
rol
cmc
daa
push
in
aaa
je
jmp
xchg
cdq
addr16
cmp
mov
sub
out
mul
rcr
fbld
stos
mov
fwait
clc
sbb
movs
or
push
mov
pop
jg
mov
lds
test
out
push
addr16
add
jns
ds
das
mov
ret
aam
mov
je
sti
dec
xor
aam
mov
mov
arpl
fcmovnb
mov
data16
fild
mov
jmp
cli
xor
inc
aam
adc
push
and
(bad)
or
es
sub
pop
aaa
lods
pop
fs
dec
add
mov
jne
jnp
out
lea
adc
xchg
retf
lds
pushf
or
push
loope
sub
push
push
mov
cmp
dec
inc
mov
push
int
mov
sub
lds
gs
xor
inc
sbb
mov
ins
jbe
inc
into
lea
push
sbb
scas
fimul
(bad)
stc
fnsave
scas
xchg
loop
div
pop
lahf
mov
xchg
push
rcl
mov
jg
aas
dec
and
mov
cs
push
inc
push
pandn
hlt
mov
xor
enter
mov
test
xor
sbb
mov
ins
movs
dec
mov
cld
mov
inc
ss
adc
add
pop
mov
adc
ds
call
sub
scas
pop
bound
mov
mov
mov
stos
xchg
xchg
xchg
fsub
icebp
rcl
lahf
lahf
xor
nop
xor
bound
or
push
sar
xchg
pop
in
inc
into
and
dec
push
pop
pop
rcr
xor
aaa
hlt
in
mov
jg
xchg
or
inc
sub
into
xlat
dec
mov
cs
pop
adc
cmp
pop
and
inc
sti
out
mov
or
data16
rol
aad
ss
ret
aas
ss
push
inc
jno
aas
cdq
xor
int
aad
xor
xlat
lds
pop
or
mov
xchg
xor
nop
sub
push
cwde
ror
adc
cmp
push
jp
jne
adc
lea
inc
popf
xor
cmp
mov
retf
cmps
mov
mov
mov
push
add
xor
pop
mov
mov
fistp
cli
cli
mov
mov
daa
sbb
div
stos
(bad)
not
mov
adc
jno
add
daa
or
adc
adc
ret
addr16
(bad)
xchg
adc
xchg
jne
sbb
adc
add
nop
test
jg
inc
retf
aas
xchg
cmp
ins
movs
xor
add
popa
cmps
mov
(bad)
push
xchg
inc
mov
jne
out
add
stc
sbb
mov
inc
ins
pop
leave
sbb
dec
mov
je
adc
xchg
cmps
test
jo
push
inc
rcl
movs
fwait
ret
fadd
pop
cs
ficomp
ret
inc
pop
push
movs
mov
stos
lock
pop
fadd
mov
adc
add
cmp
jb
push
mov
leave
or
pushf
xchg
pop
xchg
dec
fsubr
test
sar
loope
and
add
or
and
push
call
ins
pushf
retf
(bad)
xor
ret
loope
inc
test
mov
(bad)
outs
sbb
mov
fcomp
loopne
sub
mov
aas
fwait
cmps
lods
xor
out
inc
xchg
jmp
xchg
test
cmps
or
inc
pop
cmp
or
or
cmp
xchg
cmp
repz
sub
fild
mov
mov
jmp
loopne
ja
adc
inc
xchg
push
jb
xor
dec
cmp
pop
adc
outs
rol
out
cmps
mov
and
or
jl
mov
mov
sbb
and
test
sar
sbb
ds
iret
add
(bad)
jne
mov
jo
cwde
ins
pop
and
mov
ror
xor
sti
and
pusha
movs
jmp
es
xor
call
cwde
mov
ins
push
aam
pop
mov
jno
xchg
push
ja
(bad)
sahf
cmps
out
pop
stc
sub
adc
lock
mov
ficomp
test
sub
add
mov
mov
push
xor
jle
lea
cmps
mov
cwde
jmp
and
adc
sti
int
jecxz
dec
xor
repz
adc
lea
fwait
stc
scas
es
push
imul
inc
xor
lods
push
out
xchg
and
push
jb
or
(bad)
push
fidiv
not
rol
mov
(bad)
fild
push
or
push
bound
inc
sbb
jg
(bad)
mov
leave
lods
push
sub
mov
push
leave
shl
push
hlt
dec
pop
sbb
in
xchg
pusha
or
xor
outs
ret
add
inc
dec
adc
push
add
retf
xor
mov
fmul
jle
stos
(bad)
adc
sub
mov
cmps
inc
cmp
pop
mov
mov
mov
inc
popa
push
and
mov
fsub
cmp
bound
jecxz
pop
add
es
fadd
(bad)
fs
mov
dec
ins
sahf
ret
sub
enter
inc
and
push
mov
and
sbb
dec
cmp
je
or
icebp
sti
imul
xchg
in
sub
repnz
xor
and
ret
cmp
xchg
sbb
outs
hlt
neg
lea
lods
mov
jl
mov
add
pop
mov
pop
adc
imul
xchg
sbb
xor
jb
(bad)
pop
adc
push
cmp
into
ret
jp
xchg
push
les
push
inc
ja
out
mov
cli
mov
pushf
stos
sub
(bad)
shl
(bad)
(bad)
fcmovb
jo
push
mov
mov
adc
fisttp
xchg
(bad)
cmp
mov
mov
imul
sbb
repnz
retf
pop
xor
mov
pop
jns
(bad)
fsubr
add
ins
add
jecxz
mov
xchg
(bad)
add
jae
ret
push
loop
jp
outs
push
mov
xchg
test
mov
ins
outs
xor
das
(bad)
mov
fisubr
inc
jno
data16
mov
ins
into
(bad)
sahf
cmp
aam
nop
es
cmps
jle
push
ficomp
aaa
je
scas
in
loopne
push
ss
jge
ins
add
adc
xchg
adc
out
in
cmps
lods
sub
pop
mov
fcomp
sbb
mov
test
int
pop
sub
(bad)
xchg
in
addr16
movs
and
mov
xchg
push
lock
mov
fcomp
push
mov
jmp
dec
or
aas
test
jp
inc
clc
fbld
sbb
xchg
mov
sbb
mov
test
fidivr
push
in
mov
popf
sbb
test
pop
lock
jmp
lock
sbb
ins
retf
(bad)
push
mov
rcl
mov
mov
xor
xchg
push
movs
fucom
pop
dec
adc
cmp
data16
outs
jg
sub
retf
leave
push
push
jne
sbb
add
call
pop
add
ffree
sub
fucomi
pop
push
arpl
cmps
add
jmp
les
cwde
in
jmp
shl
xor
movd
lods
outs
ins
jg
jl
cmp
cmps
(bad)
xchg
add
jae
fisub
inc
fistp
rcr
jecxz
icebp
ror
cmps
repz
fimul
(bad)
jae
xor
hlt
call
or
dec
mov
mov
test
sub
in
out
iret
(bad)
mov
and
clc
pushf
repz
push
dec
retf
add
adc
push
popa
popf
jno
mov
fwait
jo
jae
adc
enter
mov
mov
adc
fisubr
push
sbb
cmp
out
adc
push
(bad)
in
int3
cmp
push
mov
cmp
mov
inc
shr
jno
ret
cmp
mov
push
dec
or
push
ret
pop
xor
sub
sub
and
fld
mov
xor
pop
outs
lods
ins
inc
jne
sub
mov
mov
cmp
and
sub
aas
dec
fnsave
and
jns
jl
dec
test
mov
add
rcl
sub
mov
jge
fmul
movs
aad
movs
mov
add
sub
cmp
scas
sub
in
mov
fs
lods
ja
jmp
adc
movs
(bad)
pop
mov
scas
jmp
mov
fadd
mov
jge
pop
test
aam
inc
in
inc
data16
int
xor
out
xor
fs
pushf
cmp
and
cmps
mov
int
pop
(bad)
lods
outs
dec
int
clc
mov
inc
fs
out
ins
pop
js
inc
test
jg
jge
mov
pusha
shl
ins
loop
int3
fxch
jbe
push
inc
mov
adc
loope
push
push
(bad)
push
cs
ins
dec
push
cdq
scas
inc
test
mov
and
pop
fidivr
outs
mov
pushf
inc
xor
in
cmp
inc
xor
adc
xchg
es
ins
xor
push
pop
mov
push
mov
jle
mov
sti
or
pusha
out
xchg
and
pop
std
ins
mov
adc
sbb
mov
pop
sti
xchg
enter
je
leave
xor
push
add
out
sub
repz
jmp
in
imul
sbb
add
or
js
in
pushf
mov
mov
jbe
or
jbe
push
and
push
mov
mov
test
(bad)
fldcw
inc
and
sbb
and
pop
pop
xchg
out
pop
dec
sar
iret
je
adc
xor
pop
out
cld
test
xchg
dec
popf
xchg
push
adc
ins
and
add
sbb
push
das
sub
int3
arpl
aas
out
cmps
ins
push
out
mov
imul
(bad)
jg
inc
pop
mov
mov
push
shl
inc
loop
pop
test
cdq
jb
ret
icebp
cmp
and
(bad)
jno
retf
or
call
xchg
inc
out
xor
(bad)
aaa
imul
jo
mov
ins
pushf
shl
mov
dec
adc
jge
ins
clc
mov
fsubp
add
gs
cmps
push
xchg
xor
es
mov
lock
clc
pop
add
(bad)
(bad)
in
in
mov
out
popa
out
shl
sbb
or
inc
lods
mul
push
push
jnp
lods
push
add
or
push
mov
aad
cvtps2pd
shr
mov
stos
inc
push
fdivr
or
ret
int3
ror
rol
loopne
sbb
leave
adc
xchg
inc
fldenv
retf
arpl
xor
jmp
push
inc
scas
in
arpl
mov
iret
sahf
mov
add
add
jecxz
mov
cmp
add
std
cmc
aam
cdq
outs
mov
jl
pop
les
sub
or
cmps
in
mov
cmc
je
cmps
inc
mov
fadd
mov
sub
aam
movs
stos
dec
xor
pop
lahf
repz
adc
inc
sbb
dec
mov
ret
xchg
sti
and
cmp
in
xor
mov
jno
push
push
sub
fwait
or
test
aam
xchg
jb
test
mov
inc
xor
(bad)
sar
ins
push
pop
adc
push
int
mov
outs
fldenv
and
movs
mov
inc
pop
xor
out
fimul
cmps
frstor
inc
pusha
enter
mov
stc
dec
test
add
cmovg
or
jecxz
cmp
out
(bad)
repz
addr16
dec
sahf
fidivr
dec
mov
sbb
pusha
cwde
movs
stos
std
cdq
dec
jne
mov
(bad)
sbb
shl
mov
cdq
or
ret
ss
nop
fmul
shl
inc
xchg
push
sub
in
jbe
es
scas
push
loop
rol
nop
cld
mov
inc
adc
daa
xor
gs
xor
xchg
(bad)
and
or
pop
dec
lea
in
and
xchg
imul
or
int3
dec
or
fadd
aas
jg
mov
jbe
mov
and
mov
fisub
mov
jno
inc
je
inc
mov
dec
bound
sub
cmps
xchg
dec
out
or
(bad)
data16
repnz
jbe
pushf
out
nop
inc
sbb
adc
or
cld
jb
js
fstp
shr
dec
mov
ja
jbe
dec
xchg
pop
test
inc
pop
pop
fcmovu
pusha
mov
test
pop
sub
sbb
sbb
xchg
sub
dec
es
ret
inc
xchg
imul
das
sub
bound
push
mov
popf
scas
xor
push
sbb
aaa
cdq
push
ja
adc
jbe
xor
jo
int
stos
pop
cmp
mov
mov
aaa
jmp
in
xchg
fsubr
pop
leave
cld
adc
add
inc
mov
stc
not
loopne
cmc
sbb
sub
dec
xor
cmps
or
xor
mov
(bad)
and
gs
repz
aam
ror
inc
xor
mov
lods
add
pop
and
cs
jb
dec
cmp
cli
fwait
dec
(bad)
push
aam
jae
pushf
push
enter
mov
cmps
cld
mov
jb
push
pop
push
sbb
bound
cmp
jnp
mov
push
test
dec
push
sahf
aam
fs
test
leave
add
push
fisubr
loop
fsubr
adc
enter
jle
mov
add
or
cwde
push
push
xor
cs
adc
pusha
inc
popf
inc
clc
pop
push
jno
mov
loop
push
or
xor
add
fadd
sub
push
xchg
mov
sbb
xchg
(bad)
adc
sahf
ret
rol
cdq
int3
in
addr16
jle
out
push
outs
add
frstor
dec
pop
mov
js
cmp
adc
mov
adc
mov
xchg
cli
sub
int
jge
dec
mov
scas
jns
adc
mov
pushf
push
jmp
ret
das
sbb
dec
adc
fs
in
mov
movs
or
cmp
cld
out
jnp
scas
dec
aas
xor
sbb
mov
adc
push
ds
push
ja
fisttp
shr
ss
pop
jb
iret
pop
cld
pop
sbb
mov
in
sub
xlat
and
loope
mov
inc
jmp
push
imul
outs
pop
xchg
mov
mov
jle
or
mov
adc
sub
add
(bad)
test
test
loopne
push
fs
xchg
test
inc
test
dec
pop
jne
sub
dec
sbb
(bad)
(bad)
jle
add
add
jl
lea
fidiv
cwde
cmp
js
xchg
sub
mov
mov
jae
cmc
fldcw
gs
jnp
dec
sbb
cdq
jmp
adc
pop
std
pop
stc
push
popa
sahf
movs
not
rol
outs
xchg
pop
xchg
test
inc
cmc
push
sub
jns
pop
adc
sahf
lea
mov
or
or
inc
loope
sub
pusha
push
dec
ss
div
jbe
sbb
adc
mov
int3
out
sbb
xor
jge
jae
cmp
dec
cld
enter
mov
cmp
jmp
(bad)
clc
or
retf
mov
pushf
adc
jnp
push
js
push
xchg
ss
mov
jnp
mov
les
test
and
xor
mov
cmp
cdq
aas
js
outs
sub
shl
int3
mov
mov
std
xchg
imul
jb
lahf
cmp
scas
fst
jg
mov
pop
(bad)
mov
fidiv
jle
rol
inc
cli
data16
or
cmp
test
pop
sbb
jmp
inc
rcl
in
arpl
std
jno
ds
(bad)
adc
jns
mov
fdiv
in
cmp
fmul
scas
push
or
fwait
aad
in
xor
cwde
xchg
gs
in
sbb
pop
mov
adc
data16
cmp
ror
inc
loope
sub
add
addr16
mov
or
or
cli
mov
call
out
fmul
jb
jae
sub
out
(bad)
cli
mov
sub
div
ins
push
cmc
cmp
push
mov
pop
dec
xchg
fidiv
fstp
fst
test
dec
sbb
stos
enter
and
call
sbb
jmp
fisttp
imul
shl
out
repnz
imul
fcom
cmps
(bad)
idiv
fnstsw
adc
icebp
in
call
(bad)
sbb
xor
sub
xchg
cmp
xchg
lds
mov
sbb
push
bound
sub
cli
push
push
js
xchg
int3
sub
adc
xor
mov
cdq
push
lods
pop
sbb
cdq
mov
xchg
mov
ins
sub
mov
lods
jmp
test
js
inc
je
xor
daa
sahf
push
test
xchg
js
sbb
fwait
aaa
xchg
sbb
pop
mov
retf
fsub
cmp
adc
jp
ret
mov
sub
lahf
pop
in
rol
out
(bad)
push
test
mov
sbb
cmc
pushw
enter
mov
mov
pop
fcom
jge
out
inc
jge
nop
jmp
pop
mov
mov
xor
outs
mov
pushf
lock
sub
cld
scas
ins
test
outs
sub
jle
push
ds
pop
ja
mov
inc
hlt
and
cmp
xor
inc
ins
dec
adc
mov
in
mov
outs
enter
or
cmp
jne
shr
inc
adc
xchg
xchg
jae
ffreep
sti
cld
xchg
test
push
mov
inc
mov
inc
ins
jmp
cdq
jl
mov
imul
xchg
inc
lock
stos
or
or
shr
mov
les
ds
adc
xchg
sti
jb
mov
les
mov
mov
jo
add
xor
push
sub
into
int3
int3
into
jno
jmp
jbe
leave
aad
sbb
cwde
mov
mov
push
test
jae
xlat
fmul
lock
loopne
xchg
outs
ins
dec
mov
push
outs
cli
cmp
stos
or
jnp
xor
adc
outs
pop
iret
adc
and
fisub
and
adc
dec
pop
imul
cwde
out
xchg
fcomp
push
test
fisubr
cld
jns
jnp
xor
jae
lahf
daa
aad
or
retf
add
fstp
sub
push
and
dec
test
cmp
sub
inc
rcr
daa
das
sar
pop
repnz
sbb
inc
jo
dec
mov
mov
add
or
push
mov
xchg
(bad)
mov
jo
xor
in
enter
xor
mov
pop
inc
sub
cmp
inc
xchg
mov
addr16
push
dec
xchg
pop
sbb
xlat
mov
xchg
inc
push
and
out
ror
cmp
lds
mov
in
cmp
cdq
push
jp
sbb
sub
mov
add
sub
arpl
add
pushf
inc
enter
push
sahf
xor
jle
push
sbb
les
xchg
dec
sub
xchg
xor
movs
sbb
xor
mov
xor
jecxz
fidiv
jge
ret
push
dec
(bad)
sbb
mov
adc
retf
cmps
add
dec
subps
es
out
adc
pop
(bad)
push
add
and
stos
arpl
imul
cmps
inc
inc
mov
adc
inc
xor
inc
rol
(bad)
shr
jb
push
lds
xchg
(bad)
aad
hlt
shr
jge
dec
lea
sbb
pop
ins
adc
fstp
shl
shl
xor
mov
pop
adc
mov
ret
push
scas
outs
movs
push
ss
int
add
nop
push
mov
push
jae
sbb
hlt
ins
stos
jmp
cdq
sbb
nop
sbb
mov
jl
stos
mov
fcmovbe
add
in
dec
stc
mov
mov
cmp
adc
mov
mov
aas
call
cmp
xlat
pop
loopne
or
outs
inc
mov
push
xchg
fdiv
inc
ror
sbb
and
in
out
or
popa
cmps
aad
fild
or
lea
daa
retf
test
push
add
and
retf
or
ds
repz
stc
xchg
xor
push
jo
mov
into
(bad)
ja
mov
pop
fldlg2
imul
and
sar
enter
push
lds
repz
sub
fst
push
xchg
mov
mov
popa
add
clc
adc
imul
jae
adc
and
mov
jg
leave
mov
mov
mov
cli
lods
(bad)
pop
cli
or
pop
pop
aaa
cs
cmp
or
cld
sar
ficomp
rcl
in
jb
bound
lea
mov
loope
test
dec
pop
mov
cmp
adc
lds
xchg
xor
mov
and
sub
sbb
out
cs
dec
jmp
jae
adc
fidiv
ins
in
out
std
sbb
dec
js
out
inc
bound
rol
adc
xchg
jge
clc
neg
mov
push
sub
fldenv
jecxz
jno
es
pop
out
je
jl
pop
lea
out
xchg
push
push
adc
sub
dec
and
and
sub
je
mov
leave
and
pop
mov
jge
adc
movs
adc
add
hlt
pop
or
xchg
xchg
into
jg
xlat
and
movs
jne
stc
sbb
std
or
js
add
inc
ins
push
mov
div
ror
enter
sub
xchg
mov
xor
sbb
setnp
movs
inc
ret
mov
mul
fcmovb
push
xchg
adc
jmp
pop
cmp
icebp
push
jl
ja
jmp
xor
std
cmp
jno
and
or
fwait
and
gs
bound
or
(bad)
fistp
and
push
xchg
ja
outs
mov
add
movs
cmp
xor
mov
cmc
mov
mov
pop
sbb
aam
add
push
outs
xchg
je
test
in
clc
jne
int3
arpl
mov
xor
xor
(bad)
aam
pop
xlat
adc
xchg
mov
or
dec
ret
out
push
xor
mov
mov
fs
cmc
xor
(bad)
dec
cmp
mov
shr
adc
in
hlt
leave
sub
sti
mov
rcr
movs
mov
push
inc
out
push
jo
aaa
jb
fadd
outs
sahf
and
inc
pop
imul
mov
popf
arpl
xor
test
inc
rol
and
mov
out
lock
sti
fnstcw
mov
ins
outs
cmp
xor
jb
pop
sbb
add
and
xor
punpckhwd
inc
ret
cmp
mov
mov
and
in
in
in
mov
jae
popa
sub
jnp
retf
movs
add
ins
retf
sub
push
(bad)
int
adc
or
sbb
out
jae
pop
and
into
(bad)
popa
out
jp
movs
push
rol
push
std
jno
inc
sbb
int
inc
loopne
pop
cmps
ins
push
sbb
jle
test
cmp
xchg
dec
dec
sub
jp
xor
dec
movs
ror
dec
sti
pop
jne
xchg
int3
repnz
in
mov
sbb
cmps
in
pop
data16
mov
mov
pusha
sbb
adc
leave
pop
push
test
leave
out
and
mov
fcomp
mov
sar
mov
adc
cmp
mov
dec
push
ret
or
enter
cmp
jbe
inc
stc
and
adc
xor
(bad)
loope
mov
cmp
push
loopne
dec
or
aaa
push
xchg
mov
out
push
mov
xor
pop
fild
xchg
fldcw
xor
ror
sub
jge
cmps
call
inc
push
adc
shl
nop
imul
mov
fmul
in
lods
mov
cmp
sub
ret
(bad)
adc
mov
add
sub
sub
ins
mov
test
fisub
sub
and
push
add
lock
out
jge
dec
mov
js
enter
(bad)
or
sbb
add
cmp
leave
sub
adc
inc
push
mov
out
cdq
popa
ret
jb
xchg
or
jns
bound
xchg
push
nop
inc
dec
fisttp
dec
jno
push
inc
in
sub
lods
adc
or
jbe
loopne
cmc
out
aas
fimul
js
not
cwde
and
add
int3
dec
out
cmp
add
cmp
movs
inc
std
pop
jbe
push
into
inc
test
repnz
xchg
cmp
repz
jmp
mov
movs
pop
std
adc
fmul
jns
sub
mov
movs
and
js
or
pop
inc
ins
pop
adc
push
and
retf
repz
mov
fdivp
xchg
inc
in
inc
scas
inc
aam
xchg
xchg
or
not
enter
mov
cmp
mov
xchg
mov
xor
fiadd
sbb
daa
pop
mov
aas
out
das
test
dec
or
push
xor
pusha
das
inc
bound
shl
and
mov
xchg
push
mov
call
movs
adc
adc
scas
dec
pop
sar
ret
dec
cwde
ret
hlt
in
popf
jmp
cmp
or
mov
cmp
call
mov
and
mov
das
daa
int
pop
mov
sar
iret
and
inc
lea
imul
and
imul
(bad)
fwait
xor
push
or
movs
iret
push
pop
cmp
imul
sbb
outs
cwde
adc
mov
pop
adc
movs
push
push
dec
sahf
js
fldcw
rcl
cmps
jl
or
dec
fistp
mov
in
bound
fisttp
inc
clc
mov
xchg
std
jns
xlat
push
dec
out
nop
xchg
scas
xor
ret
jno
fwait
xor
cwde
test
shr
cmps
sub
iret
aad
mov
mov
bound
and
fistp
push
fiadd
pop
sbb
mov
sahf
fisubr
popf
loop
mov
in
in
fwait
xchg
(bad)
pop
mov
add
retf
or
cmp
(bad)
aam
shl
xchg
pop
mov
push
imul
pop
rcr
sub
cmp
jnp
jg
aad
pop
aas
js
shl
fimul
xchg
xchg
shr
clc
fdiv
popf
xor
mov
icebp
std
or
adc
leave
dec
sbb
xchg
ds
fstp
cmp
sti
or
push
cmp
push
xchg
movs
and
sbb
cld
adc
mul
fsub
fld
loopne
add
out
ja
dec
mov
daa
mov
not
popf
and
or
popf
ficom
cmp
mov
out
add
dec
adc
cmc
out
iret
sub
adc
adc
push
or
add
mov
mov
popf
dec
int
xor
imul
(bad)
xor
cmp
push
and
pushf
retf
js
hlt
fsubp
inc
ja
stos
sti
test
pop
pop
sbb
sub
call
adc
dec
les
dec
(bad)
in
lock
adc
iret
aaa
mov
mov
xchg
pushf
pop
sbb
out
ins
inc
test
js
pop
push
nop
fstp
sub
pushf
scas
movups
fld
xchg
test
clc
push
fisttp
xor
jl
add
jecxz
sub
pop
icebp
jns
mov
lahf
ds
dec
nop
out
ins
sub
or
cmps
stc
stos
cmps
pop
js
cmp
aaa
pop
mov
cdq
iret
xlat
sar
jp
mov
jbe
jmp
fwait
push
lahf
retf
inc
sub
rol
cmp
and
xchg
ins
sub
inc
sbb
rcl
fld
mov
cwde
mov
mov
jl
jb
mov
mov
aaa
xor
int3
rol
jp
jl
test
add
xlat
sbb
push
fist
out
sbb
je
frstor
cmp
fsub
sahf
jle
push
push
push
or
shr
xchg
adc
call
shr
adc
xchg
pop
mov
push
dec
mov
mov
xchg
(bad)
stos
inc
sbb
ins
cmp
lahf
test
in
out
aaa
sbb
mov
ja
mov
xchg
sbb
nop
je
xchg
jb
push
popa
in
xor
mov
mov
in
aas
aas
adc
test
cmp
ds
push
mov
ss
je
nop
cs
pop
dec
pop
adc
test
mov
call
and
call
inc
(bad)
outs
jns
ds
sub
jle
dec
popa
jne
push
mov
dec
call
jl
test
retf
pop
shr
js
retf
scas
xor
push
hlt
dec
jbe
add
push
ret
repz
mov
add
sub
test
movs
ja
hlt
leave
push
adc
inc
dec
cmp
enter
lods
adc
cwde
mov
(bad)
fmul
hlt
add
or
ds
adc
xchg
mov
ror
mov
and
bound
stc
lods
in
sbb
rol
lock
out
adc
jnp
cmps
mov
test
mov
loopne
mov
inc
ja
mov
xor
es
aas
adc
(bad)
js
mov
adc
jge
ret
scas
ret
jo
test
jo
es
leave
test
iret
or
loopne
and
je
hlt
mov
sbb
xchg
pop
int3
jle
sbb
pop
dec
(bad)
mov
push
sahf
inc
out
outs
cmp
sbb
cmp
test
fcom
push
out
movs
nop
enter
mov
test
mov
pop
shr
clc
inc
and
dec
adc
or
retf
mov
out
dec
cmp
cmp
jns
outs
mov
sahf
jle
loop
pop
out
xor
fstp
sbb
ins
mov
loop
test
scas
add
inc
ss
test
jecxz
pop
call
mov
adc
pop
dec
mov
repnz
test
dec
mov
sub
or
(bad)
call
cdq
fsub
adc
outs
loope
dec
fwait
ds
xor
js
loopne
rcr
(bad)
jb
fadd
adc
dec
aad
arpl
adc
bound
dec
mov
add
cmps
dec
repnz
xchg
ds
fsub
mov
add
add
fld
sbb
jmp
sbb
call
xchg
cmp
das
ds
stos
or
lock
mov
movs
ret
dec
ja
je
add
jae
add
lock
aad
(bad)
mov
sbb
outs
nop/reserved
or
dec
leave
cmp
in
jnp
cwde
fdiv
cdq
mov
pushf
arpl
mov
jmp
sti
inc
dec
cmps
dec
mov
xor
and
aad
cmps
cmp
out
int3
sbb
jb
push
add
(bad)
out
aam
call
jge
seto
adc
ret
popf
add
add
cmp
add
ret
jg
js
aas
sub
dec
push
in
call
(bad)
sub
cmp
inc
arpl
mov
js
std
mov
cs
cmp
lea
sahf
sti
xor
enter
mov
mov
or
mov
xor
ja
call
push
sub
adc
cmps
in
mov
js
cmp
leave
inc
hlt
or
ret
mov
adc
xchg
scas
jmp
and
imul
call
sub
xor
jae
out
adc
cli
xchg
xchg
les
adc
inc
sbb
mov
inc
push
cmc
out
push
mov
jbe
dec
dec
mov
jo
shl
or
lock
out
mov
call
jnp
and
js
ins
fidiv
movs
sbb
clc
xchg
test
xor
iret
in
mov
ja
pop
jnp
push
cmp
push
cmp
jg
imul
cmp
push
ja
pop
in
jne
add
dec
xchg
cwde
and
fnstenv
and
mov
rol
loopne
add
inc
sar
addr16
mul
xchg
or
push
pop
xchg
and
cmp
inc
mov
dec
and
retf
enter
(bad)
cs
movs
pop
ins
or
(bad)
out
imul
mov
or
mov
(bad)
ja
dec
pop
jns
sti
jmp
test
and
xchg
sub
sub
xchg
pop
fmul
imul
jg
jb
ss
rol
inc
in
sub
adc
mov
pop
imul
jae
ret
test
jne
lods
scas
les
outs
inc
outs
inc
jbe
push
dec
and
aam
sub
push
pushf
imul
mov
mov
push
xchg
xor
ja
lods
data16
xchg
and
cmp
mov
fcomp
sar
mov
pop
scas
xchg
(bad)
fadd
repnz
add
inc
and
mov
pushf
popa
xor
xchg
lock
gs
ficom
gs
ss
fldcw
push
imul
cld
pop
xchg
mov
xor
data16
(bad)
and
pop
pusha
(bad)
push
jae
pop
test
retf
add
dec
mov
adc
test
sbb
mov
ficom
mov
arpl
add
rcr
fs
outs
fsubr
sbb
dec
loope
stos
xchg
mov
test
xchg
jle
push
xchg
inc
movs
icebp
cld
jecxz
cld
mov
xchg
out
cmp
sbb
aam
inc
loopne
add
out
push
or
mov
(bad)
mov
xor
xchg
sbb
clc
sub
aas
push
jno
cs
test
mov
cwde
lahf
and
jl
out
jge
call
mov
lds
sub
shr
mov
shr
add
test
repz
fldl2e
js
cdq
sbb
loop
(bad)
mov
xchg
outs
push
pop
inc
jmp
daa
mov
lock
loopne
xchg
aam
push
and
inc
mov
mov
xor
cmp
fstp
jl
out
fcmovbe
jg
xchg
dec
aas
push
sbb
out
add
inc
inc
or
ret
adc
ret
ss
lock
scas
in
ret
movs
or
mov
pop
jo
test
sub
fwait
mov
sub
jae
cmp
stos
cmc
dec
fsub
mov
mov
jns
mov
out
inc
push
mul
xchg
(bad)
fdivp
data16
mov
mov
stos
iret
stos
mov
call
sub
pop
movs
and
call
cmp
pop
and
(bad)
jmp
push
mov
fwait
add
ret
ds
lock
lds
push
fucom
aas
cmp
push
or
jmp
mov
adc
arpl
xchg
shl
scas
lahf
shl
mov
aas
cmps
arpl
mov
je
pop
popa
iret
popa
xlat
jp
lds
xchg
out
fdivr
push
dec
js
outs
int3
mov
mov
push
cmp
mov
pop
out
iret
pop
mov
or
jge
int
std
mov
jmp
mov
arpl
mov
dec
push
stc
jmp
jp
sub
jne
stos
mov
out
inc
les
lock
fwait
(bad)
push
ja
repz
push
dec
sar
nop
pop
in
retf
jae
addr16
icebp
or
adc
xor
test
outs
scas
push
stos
es
cmp
call
inc
fnop
push
retf
xlat
and
jecxz
fsubp
imul
sub
addr16
aas
and
push
xchg
rcl
std
pusha
cmp
test
push
iret
push
jmp
mov
clc
frstor
(bad)
mov
std
dec
ins
xor
pop
jp
push
repnz
in
or
lea
fdivp
mov
stos
inc
imul
sub
imul
sti
test
fidivr
mov
dec
aam
ins
loopne
xlat
and
loope
cld
sub
(bad)
pop
inc
les
add
div
cld
repnz
push
retf
shl
mov
scas
aad
dec
jmp
adc
je
mov
cdq
test
jl
into
retf
int
outs
repnz
pop
arpl
retf
mov
dec
pop
aad
sub
xchg
jo
mov
jb
push
sbb
xor
outs
cli
mov
mov
shr
imul
ret
sti
dec
jbe
dec
xchg
loop
ins
ja
mov
xor
out
mov
mov
inc
in
xchg
jle
dec
add
sar
int3
dec
mov
out
retf
pop
jmp
mov
inc
inc
pop
int3
fadd
xchg
stos
dec
or
or
data16
add
repnz
xchg
jecxz
sbb
xor
pop
or
xor
mov
sbb
sbb
fsub
or
push
mov
or
pop
shr
cmp
add
sbb
int3
mov
jae
jbe
sub
mov
jbe
pushf
sub
pop
fidiv
xchg
jne
(bad)
sbb
clc
data16
mov
into
cmp
cmc
scas
adc
jl
add
sub
je
outs
inc
add
les
xlat
sbb
loop
lods
dec
pop
imul
inc
sub
jae
lahf
call
lods
into
jmp
aas
add
cli
mov
scas
dec
and
dec
push
jnp
sbb
dec
fld
adc
pop
cmp
call
pushf
test
add
sbb
mov
cmp
or
fist
popa
arpl
mov
mov
ret
or
cs
scas
inc
push
adc
out
rcr
leave
call
(bad)
repnz
sbb
test
test
and
xchg
std
jo
push
fcomp
mov
dec
xor
mov
sbb
cmp
push
les
sbb
popa
and
test
jb
pop
dec
imul
daa
push
sbb
push
enter
and
imul
sbb
cmps
scas
mov
nop
jbe
or
mov
pop
jbe
cli
xchg
mov
rcr
mov
xor
adc
mov
mov
mov
dec
inc
cs
neg
sbb
lock
mov
inc
dec
out
outs
je
dec
arpl
and
rcl
xchg
cmp
lea
sub
mov
cmps
and
sti
popf
scas
xchg
std
dec
mov
pop
pop
(bad)
data16
xchg
mov
jmp
pop
pop
stos
xor
jno
push
cdq
jp
add
add
mov
xchg
adc
stos
leave
inc
xor
pop
push
xor
(bad)
scas
sub
xchg
pop
or
mov
popa
dec
or
aas
adc
adc
or
cwde
cli
ss
mov
and
cwde
cwde
jge
pop
push
shr
daa
dec
pop
popa
je
inc
xchg
(bad)
pop
cld
xor
lods
popa
mov
rol
not
dec
or
out
inc
xchg
test
push
push
or
push
jmp
xor
and
pop
fidivr
(bad)
retf
(bad)
das
and
xchg
jmp
jmp
retf
jge
fcmovnbe
sti
dec
jle
cmc
mov
adc
sub
loop
jg
js
cwde
shl
sbb
test
stos
inc
aad
mov
dec
push
sub
mov
mov
sub
fild
adc
and
sub
stos
mov
cs
sti
psubusb
or
lods
inc
jo
pop
iret
dec
mov
adc
adc
xor
lock
or
shr
adc
add
fnclex
jbe
ja
mov
cmp
inc
mov
test
adc
pop
arpl
push
mov
sbb
dec
fdiv
neg
(bad)
dec
push
xor
fidivr
fs
sub
pushf
cs
mov
retf
and
inc
ret
and
int
cwde
rcl
imul
cmp
(bad)
cmc
xchg
mov
scas
pop
test
fbld
outs
scas
shl
lds
mov
mov
jo
dec
sub
or
mul
iret
test
les
(bad)
jns
mov
ret
bound
or
in
mov
inc
mov
call
lods
and
into
push
pusha
add
or
inc
test
fcmovnb
mov
adc
or
aad
pop
popa
mov
push
cli
xor
scas
push
repnz
mov
push
mov
dec
jle
int3
ds
imul
mov
jno
sub
pushf
mov
into
pop
xor
es
iret
dec
xchg
shr
dec
test
mov
inc
pop
xchg
outs
fwait
std
or
sti
pop
ret
cli
scas
dec
enter
das
pop
and
mov
dec
mov
or
sub
push
inc
dec
inc
out
sti
xor
xchg
cwde
addr16
xor
(bad)
push
stos
adc
add
std
ss
stos
leave
adc
sbb
inc
mov
xor
daa
dec
(bad)
aad
mov
inc
xor
hlt
lods
pop
jno
daa
mov
scas
das
and
and
bound
mov
test
int
lods
cmp
inc
push
std
out
out
hlt
dec
(bad)
mov
div
add
pop
inc
jge
sub
jno
dec
xor
(bad)
shl
adc
ror
addr16
add
test
(bad)
cmp
scas
jnp
in
fwait
stos
test
sub
push
fadd
jo
pop
mov
push
xlat
arpl
adc
out
push
adc
inc
ins
ins
imul
inc
inc
jg
aam
pop
std
icebp
rcl
fwait
or
dec
pop
cdq
and
mov
mov
retf
scas
repnz
mov
sbb
mov
popa
sub
rcr
pop
and
inc
push
and
sub
pop
jno
clc
jb
nop
pusha
ins
adc
(bad)
mov
xchg
cmp
cmp
(bad)
(bad)
and
ror
sub
jl
sbb
fs
(bad)
shl
jmp
into
dec
xor
push
out
sar
or
fbld
mov
pop
mov
pop
test
loopne
mov
imul
mov
ja
aas
cs
inc
leave
jnp
fld
fld
jg
or
jb
ud0
xor
cmp
add
cli
repz
loopne
shl
push
fist
sub
int3
lds
adc
xchg
ret
sti
push
cmp
push
outs
ins
pop
cld
push
call
pusha
repz
daa
ins
outs
iret
inc
mov
retf
cmp
out
sub
xchg
test
icebp
nop
pop
mov
xchg
cmps
xor
repnz
and
js
jecxz
iret
ins
or
inc
xlat
or
lods
jmp
adc
jb
mov
cmp
jmp
sbb
in
inc
sbb
fadd
xor
jmp
loopne
mov
mov
xor
push
push
ja
mov
cmp
inc
outs
inc
xchg
pop
loopne
inc
sub
push
(bad)
dec
or
outs
shl
bound
jns
pop
imul
xor
dec
sahf
js
out
ficom
xchg
fidivr
sti
push
mov
xor
inc
inc
scas
push
dec
xchg
or
sub
push
stc
scas
xchg
jle
inc
out
xchg
sbb
or
enter
ss
test
jno
adc
xchg
outs
mov
sub
push
aas
arpl
jb
lahf
push
push
sub
jge
retf
cmp
aad
pop
dec
xor
pop
movs
mov
jno
sbb
jnp
out
mov
mov
mov
xchg
push
call
fstp
imul
aas
cmp
cmp
cmp
mov
icebp
mov
jmp
cli
sahf
in
pop
dec
xor
loop
mov
jns
mov
sar
idiv
call
mov
loop
xor
add
or
pop
shl
or
or
lock
mov
int3
(bad)
ret
mov
or
push
mov
jmp
inc
fs
out
mov
gs
inc
pop
lock
add
sahf
aad
out
jae
shr
push
mov
xchg
enter
inc
push
movs
dec
fs
xor
mov
and
mov
lea
ss
xor
or
ins
rcl
pop
inc
mov
jns
or
jge
mov
sahf
iret
dec
imul
retf
fsub
push
or
aam
cmps
sahf
loop
mov
sub
xor
cmps
jns
nop
fs
mov
dec
mov
pop
sbb
push
mov
pushf
icebp
outs
ins
pop
into
inc
xchg
repz
mov
mov
xchg
ror
inc
dec
inc
in
cmp
popf
cmps
call
pop
add
jmp
cld
fwait
lahf
outs
fiadd
xor
jge
cwde
xor
jo
cmp
fsub
(bad)
sti
push
cmps
add
fistp
mov
not
call
sbb
ins
mov
call
xor
jns
stos
out
adc
add
ficomp
or
or
push
jp
out
ins
or
retf
add
push
cmps
das
call
fstp
jg
clc
sbb
sub
cmp
and
cmp
adc
mov
(bad)
mov
aam
adc
mov
and
adc
xor
cmp
dec
push
adc
jae
dec
pop
and
nop
mov
or
(bad)
lods
fs
xchg
cmp
loope
je
mov
xor
lahf
je
loopne
jle
aas
jecxz
fisttp
mov
cmp
push
js
icebp
mov
sbb
mov
sbb
pop
xchg
xor
fldcw
loope
imul
or
enter
nop
in
pusha
jmp
jnp
rol
jne
push
push
cmp
scas
jmp
xor
mov
loopne
arpl
push
add
sub
and
and
or
jl
jl
xor
push
test
adc
xchg
mov
mov
sti
retf
fs
cs
push
in
adc
jg
cmp
cmps
cld
fsub
pop
mov
(bad)
mov
mov
sub
sub
push
sub
dec
inc
bnd
nop
inc
adc
mov
sahf
jne
cmp
mov
or
adc
arpl
ja
sub
fwait
(bad)
arpl
out
jmp
and
push
cmp
loop
das
sub
out
inc
jae
push
scas
push
inc
test
adc
icebp
pop
ret
scas
pop
cmp
nop
xchg
mov
mov
mov
xchg
inc
dec
or
bound
sbb
fbstp
sar
sahf
push
cmp
xor
mov
and
std
dec
test
leave
imul
mov
mov
fnstenv
rol
or
jb
pusha
jmp
xor
sub
xchg
xor
(bad)
pop
or
out
sub
add
sti
gs
and
push
stc
xor
dec
rcr
xor
sar
push
aam
push
xchg
mov
pop
stos
imul
sub
push
mov
and
dec
repnz
lea
lds
xor
sti
jge
in
ds
inc
stc
pop
and
mov
xchg
mov
mov
or
pop
movs
pop
dec
loope
aaa
aam
xor
mov
push
int3
fisubr
fdiv
inc
push
out
mov
xor
xor
or
add
(bad)
sbb
mov
fcom
ja
jg
in
popf
fdivr
inc
rcl
jo
jbe
push
jge
xor
push
add
mov
cwde
scas
push
cmc
lods
fstp
arpl
jb
shl
xchg
out
popa
xchg
popf
(bad)
retf
and
(bad)
int
loop
mov
aad
movs
sub
popf
xchg
aaa
packuswb
inc
in
sbb
xchg
cld
jns
xchg
jecxz
js
sub
out
out
stos
sbb
jecxz
out
aam
fs
inc
xor
jne
xor
mov
scas
fcmovb
cmp
or
add
test
mov
fld
pop
hlt
adc
cmp
pmovmskb
pop
clc
dec
imul
ja
xchg
pop
dec
(bad)
push
dec
clc
adc
test
(bad)
out
cld
scas
fwait
int3
ds
or
add
nop
or
sub
xchg
xlat
data16
pop
jne
aam
jbe
ja
repz
cmc
cmps
xor
test
push
out
xor
aaa
imul
retf
jmp
mov
js
outs
fcomp
js
pop
gs
lods
fprem1
add
cmps
test
stos
test
mov
test
mov
add
aam
mov
pop
mov
test
or
je
mov
sub
add
jbe
cmp
mov
push
gs
ror
repz
pop
icebp
xchg
push
sub
inc
add
stc
add
cmc
fdivr
fdiv
loop
not
or
sbb
lods
fsubp
inc
call
iret
vshufps
adc
and
xchg
cdq
mov
xchg
xor
cld
push
ficom
imul
out
lahf
inc
scas
push
sbb
mov
and
adc
clc
test
fsub
repz
mov
add
in
sbb
lods
(bad)
pop
xor
cmp
sbb
jb
in
or
enter
xchg
ds
push
pop
add
mov
jae
cli
jnp
outs
push
fsub
adc
or
add
imul
(bad)
jmp
mov
in
pop
and
repz
popf
fld
clc
mov
ror
ds
mov
leave
cmp
lahf
dec
xlat
add
cdq
mov
imul
repz
outs
sub
mov
out
inc
dec
or
lods
inc
xor
cmp
mov
or
mov
(bad)
and
mov
cdq
not
mov
loope
jl
sbb
add
sub
in
(bad)
pushf
out
jno
ret
and
mov
call
js
loop
add
icebp
add
jno
scas
int3
xchg
dec
(bad)
loope
fwait
xchg
mov
mov
push
les
retf
xchg
mov
inc
inc
xor
and
stos
jle
lea
mov
jnp
ret
(bad)
cdq
pop
and
dec
add
sbb
dec
push
pop
sub
bound
mov
aas
adc
ja
int3
out
push
mov
jecxz
pop
mov
shr
out
stos
gs
imul
rol
dec
or
jnp
cmp
aad
jl
mov
mov
dec
sbb
adc
jmp
test
jmp
das
or
mov
cdq
sar
shl
lds
and
rcr
mov
out
and
fimul
jnp
jge
cmp
add
stos
pop
aaa
sbb
jnp
retf
fcomp
xchg
mov
jne
xchg
adc
int
jp
fisubr
adc
pminsw
push
fidiv
xor
pop
aas
scas
enter
xchg
arpl
retf
jmp
cmps
nop
xor
cmp
jns
popa
rcr
scas
and
xchg
fwait
retf
and
xchg
push
enter
jnp
enter
nop
xlat
loope
xchg
jge
jnp
ds
xor
lods
dec
add
xchg
mov
jmp
sub
mov
mov
xor
and
mov
sbb
jp
loop
stos
inc
int
pusha
fucom
mov
xlat
xchg
inc
scas
int
div
mov
xor
mov
test
data16
loope
jl
adc
cmps
shr
mov
adc
aas
sub
fwait
mov
stc
repnz
mov
inc
xchg
clc
mov
arpl
fisubr
lds
(bad)
cmc
inc
cld
js
mov
xchg
sub
xchg
xchg
aad
cs
adc
lds
sbb
mov
mov
jg
add
jbe
jmp
pop
mov
fidiv
and
xor
jbe
stos
cmp
mov
(bad)
and
xchg
xor
dec
aas
cwde
test
fstp
in
pop
rep
dec
call
movs
lods
aaa
xor
test
movs
mov
sahf
bound
and
repnz
push
mov
(bad)
out
push
outs
adc
daa
pop
mov
outs
pop
rcl
sar
and
(bad)
mov
pop
pushf
cmp
fwait
mov
xor
and
cmp
loopne
inc
pop
dec
stos
test
or
and
rcl
ss
pop
xchg
xor
xor
jo
adc
pop
and
pop
je
addr16
test
pop
jmp
outs
stos
mov
xchg
xchg
mov
jmp
sub
and
push
sub
push
in
dec
iret
jecxz
sbb
pop
fimul
pop
mov
movs
mov
clc
push
xor
cld
inc
es
sbb
jge
jg
mov
int
inc
and
add
icebp
in
jns
je
popa
sbb
xchg
xchg
mov
rol
out
lods
jecxz
nop
dec
(bad)
cdq
or
call
in
push
icebp
ror
(bad)
sti
pop
jge
jmp
test
push
sbb
pop
pop
sahf
outs
mov
test
scas
rcl
mov
jle
js
shl
aaa
(bad)
and
or
nop
sahf
pop
sti
in
neg
movs
mov
mov
jo
daa
lldt
loop
rol
bound
lahf
cmp
fwait
jmp
sbb
cmp
test
arpl
cmp
jmp
stc
cs
and
sbb
ret
fsubr
cwde
jb
in
sahf
add
jo
or
retf
nop
dec
sub
jmp
in
push
test
pop
mov
out
push
or
fldenv
inc
adc
push
sbb
or
in
out
aas
jb
nop
adc
fisubr
js
ror
fbld
and
sbb
dec
iret
xor
iret
fcomp
popa
cmp
inc
out
es
pop
sti
in
icebp
icebp
push
stos
pop
jno
fisub
pop
loopne
shl
shl
push
stos
xor
sti
inc
jno
test
pop
out
adc
lea
adc
sahf
mov
sbb
and
cmps
pop
and
sysenter
jnp
ins
lods
push
xchg
jne
sbb
cmp
loopne
xor
fucomip
jl
fld
cmc
pushf
outs
stos
retf
push
sbb
js
loope
dec
in
jbe
dec
jl
imul
sbb
dec
idiv
sbb
sahf
shr
mov
(bad)
push
aaa
mov
dec
cmp
popa
fidiv
mov
enter
scas
xchg
loopne
sti
gs
pop
add
pop
sbb
push
dec
hlt
sub
adc
cmp
push
sbb
push
and
jbe
out
enter
push
cmp
xchg
dec
std
cmp
push
hlt
(bad)
mov
cmps
dec
and
fst
push
out
in
aad
xchg
out
mov
and
and
(bad)
cmc
neg
mov
and
push
int
xor
sub
mov
xor
mov
loopne
mov
and
hlt
xchg
mov
test
mov
sub
fisttp
das
cmps
aam
or
cdq
mov
loopne
mov
lods
scas
xlat
mov
imul
in
aas
mov
stos
push
and
fcomp
jge
xchg
sahf
inc
imul
add
or
inc
jecxz
adc
adc
xlat
or
xchg
js
gs
mov
int3
dec
mov
mov
popa
pop
retf
dec
pop
aad
mov
fdivr
out
stos
loope
mov
aad
mov
cmp
test
pusha
mov
mov
push
fsub
mov
xchg
std
test
dec
in
in
or
(bad)
cli
mov
sbb
std
(bad)
test
rcl
adc
xchg
outs
adc
mov
in
fsub
cmp
inc
test
jle
ins
xchg
cdq
popa
inc
leave
sub
jae
pop
mov
dec
inc
sub
das
push
lds
jae
sti
xchg
mov
jo
shr
cli
sahf
jnp
cmps
jo
fstp
xor
addr16
in
out
int
jp
or
jno
pop
pushf
jle
mov
inc
popf
es
retf
loopne
pop
pop
jmp
xchg
xchg
leave
mov
adc
stos
pop
sbb
(bad)
sbb
jo
push
call
xchg
mov
pop
dec
dec
sahf
push
lahf
stos
test
cmps
jmp
xchg
jb
mov
push
das
or
retf
cmp
int3
fs
int
test
mov
dec
ss
jne
aas
in
push
add
sub
in
bound
(bad)
lahf
inc
xchg
push
and
das
(bad)
movs
in
inc
xchg
push
test
das
out
outs
xor
xchg
fbstp
pop
out
cwde
cmps
push
jmp
jbe
inc
push
mov
rcr
xchg
pusha
and
dec
aam
add
into
ja
lods
daa
sub
xchg
adc
push
aad
sbb
push
aad
not
hlt
out
push
mov
xor
cmp
mov
xor
fs
(bad)
mov
mov
mov
mov
sub
mov
in
ja
pop
cwde
mov
dec
cdq
sti
scas
or
or
inc
cmp
or
cmps
fimul
xor
nop
nop
cmp
inc
les
cdq
cmp
test
xchg
mov
lods
or
hlt
sbb
inc
shl
ss
mov
mov
aaa
std
mov
inc
(bad)
pop
cdq
push
cmp
mov
test
jae
inc
out
outs
je
sti
push
push
fstp
clc
das
mov
or
inc
xchg
mov
test
inc
test
stc
sbb
mov
push
test
sbb
sti
mov
(bad)
add
std
lea
loop
cs
int
jae
arpl
fidiv
pop
gs
fdivr
xchg
sub
loopne
jle
adc
dec
mov
cdq
mov
repnz
mov
push
and
fsub
push
and
sub
scas
adc
out
push
jmp
push
in
xchg
jmp
pop
ja
mov
rol
sbb
in
mov
test
adc
in
and
add
out
js
(bad)
rol
and
inc
pop
pop
xchg
mov
push
jge
sbb
imul
dec
jo
add
and
sbb
into
pusha
loope
dec
xchg
imul
repnz
cwde
repnz
xor
arpl
pop
lods
jne
mov
xchg
cmp
lahf
mov
fidiv
mov
call
scas
nop
punpckhwd
stos
daa
mov
mov
xor
push
jp
dec
add
cmp
(bad)
lea
and
icebp
push
push
and
loop
and
int3
gs
mov
cmp
xchg
mov
xchg
mov
push
(bad)
mov
fimul
shl
push
cs
inc
xchg
cmp
fld
bound
mov
imul
jmp
je
dec
in
jne
lea
clc
pop
fstp
lds
fsubrp
test
pop
std
and
outs
test
adc
loopne
(bad)
movs
imul
stc
xor
cmc
sub
push
add
pop
mov
inc
adc
lahf
ret
fwait
stc
or
cmps
push
push
mov
hlt
rol
rcr
xor
not
and
enter
mov
jno
adc
test
call
pop
cmp
ss
pop
pop
in
sbb
adc
daa
inc
jp
add
icebp
sti
xor
(bad)
data16
aaa
(bad)
outs
inc
push
xchg
push
and
movs
xchg
in
inc
inc
ja
leave
xor
lods
mov
fcom
mov
sub
mov
jge
mov
rcl
sbb
fidiv
pop
sub
sbb
mov
clc
cmp
jp
sub
aaa
ss
dec
pop
pop
mov
retf
mov
je
xchg
xchg
jp
hlt
dec
loopne
ror
repnz
cdq
out
iret
lahf
mov
sahf
repnz
sahf
jmp
xchg
push
jecxz
lock
aad
xchg
ins
ins
xor
or
xor
int3
or
mov
cmp
lods
mov
cmp
push
ins
mov
cmp
icebp
mov
dec
(bad)
not
jg
dec
ins
loop
and
(bad)
cli
mov
jne
gs
add
repnz
jmp
or
or
stos
add
daa
cmp
sub
arpl
out
pop
jecxz
push
daa
ret
pop
loop
jmp
add
lahf
sub
push
cmp
js
dec
jecxz
(bad)
outs
sub
call
dec
mov
test
scas
call
cmp
jl
push
popf
mov
aas
cmps
or
rcl
mov
fnstenv
push
fdivr
test
sbb
mov
jnp
push
test
sub
aaa
test
sahf
xlat
and
repz
in
shl
lods
mov
jle
push
mov
arpl
ret
nop
mov
xchg
sbb
xchg
sahf
outs
mov
outs
xchg
cmp
xchg
pop
add
fsub
jl
mov
xchg
je
sbb
adc
and
push
mov
retf
jo
xor
sti
ins
rol
cmp
nop
jecxz
mov
sub
fcomp
jbe
pop
cld
push
in
sub
fcomp
inc
test
mov
dec
cmp
jmp
inc
sbb
enter
std
ins
push
sbb
sbb
or
xchg
jp
addr16
ins
inc
imul
sbb
add
xor
mov
repnz
push
adc
aaa
fst
cmp
jne
shr
lods
xchg
out
cmp
xchg
mov
(bad)
mov
not
cld
loop
lods
into
idiv
(bad)
mov
retf
out
rol
cmp
fs
mov
jo
add
cmovp
in
or
jecxz
dec
xchg
js
sbb
cmp
add
jno
and
retf
push
mov
in
inc
(bad)
out
daa
jmp
sbb
js
jb
adc
xor
add
xor
aas
adc
jmp
out
xor
mov
in
sub
jge
mov
outs
push
sbb
cmps
mov
push
cdq
pop
jg
in
dec
into
test
sbb
js
pop
mov
popf
push
pop
xchg
shr
fst
(bad)
paddb
gs
adc
jns
xor
or
vpandn
test
stc
push
call
addr16
cmp
sbb
add
cli
ror
push
shl
loope
dec
adc
dec
mov
cmp
mov
push
adc
mov
inc
cwde
or
dec
pusha
jg
xchg
movs
xchg
inc
mov
mov
sar
in
jl
or
mov
xchg
mov
jb
lods
sub
out
neg
jbe
(bad)
mov
push
mov
movs
les
clc
test
arpl
call
int
lds
xor
in
mov
sbb
imul
jg
xchg
sbb
pop
scas
dec
inc
jmp
xchg
(bad)
fidivr
xor
and
repz
aas
mov
ins
rcr
aas
xchg
sub
mov
imul
mov
sbb
mov
add
adc
mov
test
mov
outs
pop
jle
dec
out
lds
les
push
and
daa
cmps
and
push
mov
xor
add
pop
mov
cmps
and
xor
and
out
stos
push
xchg
popa
rcl
test
pop
iret
xor
pop
stc
scas
pop
popf
pop
test
imul
sbb
jae
xchg
xor
ss
mov
test
data16
cwde
dec
mov
outs
inc
mul
in
mov
in
rcl
pop
loope
imul
pop
jbe
sub
jp
add
dec
cmps
shl
int
adc
cmp
xchg
retf
ror
dec
mov
mov
movs
adc
mov
pushf
jge
sahf
jmp
dec
inc
mov
push
out
mov
mov
imul
shl
pop
jmp
pop
xlat
jbe
pop
test
xchg
jp
stos
mov
mul
pop
dec
ins
(bad)
dec
sbb
cli
xchg
rcr
lods
push
push
arpl
mov
pop
cmc
shl
push
adc
xor
pop
cmp
or
sub
add
cmp
aaa
out
push
mov
fdivr
push
xchg
xor
call
ins
pop
aaa
popa
cmps
adc
push
mov
ss
test
lods
addr16
or
xchg
inc
sub
sbb
jno
leave
pop
popa
pop
jno
test
sti
scas
xchg
into
cmp
in
jle
cli
jmp
std
cmp
ror
mov
xchg
sub
call
sbb
sbb
pushf
lods
pop
outs
test
in
mov
repnz
aas
mov
(bad)
mov
out
aaa
pop
inc
pop
jmp
adc
movntps
fsubr
push
push
pop
pop
fsub
push
ds
popf
ins
or
retf
and
jb
or
scas
and
daa
xor
push
repnz
aam
mov
nop
cmc
fwait
push
xor
bound
bnd
jge
fiadd
movs
aam
cmp
push
jle
shr
js
xchg
pop
rcl
xor
jecxz
adc
(bad)
and
cmp
shr
jge
ss
push
(bad)
(bad)
mov
push
inc
mov
loope
add
or
enter
jo
cld
jp
lods
cmp
imul
std
adc
xchg
push
test
fdivr
mov
xchg
cmps
inc
pop
mov
addr16
inc
xchg
mov
sbb
fnstenv
jge
or
int
mov
stos
mov
push
fcmovnb
mov
pop
pop
sub
sub
jne
cmp
ja
call
jl
mov
das
(bad)
sub
hlt
jns
pop
mov
dec
fwait
add
outs
push
pop
and
retf
jle
div
(bad)
arpl
sbb
dec
sar
add
add
scas
sub
or
or
ja
daa
mov
jne
adc
push
(bad)
(bad)
test
sbb
cmps
fs
in
pop
repnz
mov
leave
loop
jns
jae
dec
test
dec
aad
ficom
pop
jb
dec
test
adc
mov
lea
jl
mov
rcr
cwde
pop
into
into
sub
inc
ss
xor
sub
xor
jae
pop
bound
shr
pushf
pop
pop
add
mov
jl
shl
scas
mov
(bad)
dec
sbb
aam
or
cmp
xor
call
sbb
mov
jb
imul
scas
mov
ins
retf
dec
push
xor
sar
jb
add
mov
div
or
xor
push
cmps
cld
pop
mov
call
push
mov
inc
out
or
iret
dec
and
inc
xchg
outs
and
ss
(bad)
push
mov
(bad)
mov
outs
aad
aad
cmp
mov
(bad)
sbb
mov
cld
cli
les
and
mov
add
hlt
cmp
cmp
scas
mov
aas
jno
push
loopne
enter
mov
cmps
shl
jle
jb
mov
dec
jecxz
mov
mov
xor
fsub
clc
pop
pusha
jmp
sub
mov
scas
lods
inc
dec
mov
int
add
add
in
sbb
dec
xor
add
sahf
lods
inc
inc
aad
or
fisttp
mov
push
xor
inc
stc
adc
fwait
int3
lods
cmp
in
test
cmp
xchg
add
arpl
daa
xor
dec
sahf
out
sar
ret
push
(bad)
ins
out
sbb
stc
mov
pop
outs
xor
pop
sub
int3
pushf
fst
dec
pop
test
xchg
fs
push
(bad)
outs
test
inc
add
jmp
loopne
mov
imul
in
scas
mov
and
enter
adc
xchg
sar
(bad)
inc
cmp
int
ins
push
movs
add
sub
imul
xchg
mov
mov
dec
cmp
sub
imul
adc
and
in
dec
or
mov
enter
outs
sub
add
sub
loopne
(bad)
add
mov
call
jg
sbb
ret
push
inc
movs
xchg
lea
sub
inc
(bad)
jmp
leave
ja
sbb
in
ja
cdq
xlat
int
inc
pop
fist
fwait
pop
ss
or
and
dec
(bad)
sub
inc
xchg
and
push
pop
lds
ins
outs
and
ins
cwde
sbb
mov
xchg
aas
mov
pushf
stc
xor
add
movs
sbb
pop
jmp
or
call
sbb
ja
vmread
jl
les
cdq
aam
push
push
shr
jae
das
jge
pop
loopne
dec
mov
dec
cs
ret
adc
aad
int
add
pmulhuw
jl
adc
stos
sub
(bad)
nop
jle
dec
push
data16
or
iret
imul
pop
sbb
cmp
scas
std
loope
inc
cmp
sbb
fadd
ins
pop
adc
pop
inc
or
or
out
or
cmp
imul
cmps
pop
sbb
mov
xchg
loop
push
mov
jns
test
adc
out
pop
mov
adc
loop
mov
les
jg
pop
stos
adc
push
ins
js
mov
pop
into
ins
out
popa
jo
mov
sahf
mov
sub
pushf
cvtpi2ps
pop
and
push
cmp
inc
adc
ror
into
ficomp
add
retf
xor
xchg
pop
or
xor
mov
lock
and
xor
xchg
mov
sub
jae
cdq
xchg
cmp
sbb
pop
fisub
(bad)
aas
cs
pop
icebp
(bad)
mov
loope
aam
dec
push
ins
add
fs
loop
aaa
or
int
mov
lock
inc
and
ret
pop
hlt
not
xchg
not
push
inc
fiadd
sbb
jl
retf
xchg
mov
lock
pop
adc
jo
ficomp
mov
mov
jne
cmp
jo
ss
push
jnp
sti
mov
mov
shl
jae
outs
stos
sub
mov
in
pop
out
cmps
push
or
(bad)
dec
xchg
les
sbb
pop
jmp
dec
push
mov
mov
pusha
jl
addr16
push
mov
loope
xchg
push
dec
ja
mov
jmp
ds
cmps
loopne
xchg
lock
jmp
es
nop
pop
push
pop
jmp
sub
test
cli
cs
cdq
pop
mov
pop
int3
shr
mov
adc
nop
mov
ja
sub
and
xchg
push
jno
add
adc
mov
push
leave
into
mov
or
loopne
addr16
pop
rol
jmp
fs
and
into
sbb
jo
push
cmp
pop
adc
mov
or
stc
dec
neg
hlt
mov
or
adc
xor
xor
and
xchg
(bad)
push
popf
pop
(bad)
std
imul
mov
xor
adc
ins
xchg
push
popa
dec
loopne
loop
mov
xor
sti
push
(bad)
std
mov
ins
fwait
mov
lahf
aad
sub
lods
push
retf
in
(bad)
sar
inc
xchg
cld
mov
cmp
mov
movs
or
sub
or
imul
out
sbb
js
loope
cmp
loop
or
iret
(bad)
adc
xor
dec
cmps
cmp
or
jbe
mov
cld
inc
inc
and
int
adc
hlt
dec
in
cwde
jmp
mov
out
ss
cwde
cld
xchg
adc
daa
pop
mov
xor
push
je
mov
cmp
and
imul
in
and
rol
mov
cmc
retf
cmp
daa
add
pop
stc
lock
(bad)
retf
test
dec
outs
out
movs
pop
dec
sbb
retf
in
lds
dec
mov
data16
and
inc
push
(bad)
mov
inc
push
add
push
lods
mov
(bad)
fmulp
outs
mov
jecxz
leave
out
sbb
aam
int3
mov
push
mov
retf
shl
mov
cmp
adc
mov
xchg
scas
inc
and
adc
sub
add
dec
aad
and
dec
xchg
or
fcomip
sub
stos
jmp
fsubr
jne
hlt
hlt
dec
sub
stos
jg
test
xor
sub
fwait
mov
jecxz
cld
out
(bad)
aaa
pop
aam
push
out
cwde
cmp
push
xor
cmps
loopne
fmul
in
pop
and
call
fiadd
out
(bad)
daa
push
sbb
retf
mov
xchg
hlt
or
(bad)
stos
push
je
or
pop
cmps
xor
shr
outs
cmps
cmp
sbb
popa
and
ins
pop
ins
push
mov
xor
mov
xchg
fwait
mov
and
or
dec
outs
call
dec
in
mov
js
test
fbstp
arpl
mov
test
mov
or
mov
arpl
addr16
add
xchg
sar
repnz
hlt
or
stc
mov
mov
popf
in
dec
nop
add
mul
retf
mov
or
loopne
addr16
retf
sbb
inc
ja
jmp
scas
dec
outs
jb
(bad)
and
push
jl
loope
add
sub
adc
xchg
jle
jae
repz
stc
xchg
jae
pop
xlat
ror
pop
pop
mov
pop
sub
daa
pop
fild
cmp
mov
or
out
lock
retf
(bad)
clc
ret
xchg
je
pop
mov
addr16
push
shl
add
adc
jmp
int
js
or
push
scas
jmp
sub
jl
cwde
sar
aam
adc
push
in
cmp
push
jmp
mov
push
jge
cmp
in
jge
repz
sub
xchg
mov
popf
mov
dec
rcr
lahf
inc
jg
adc
imul
pop
xor
das
popf
mov
mov
pop
sti
loop
movs
sbb
int3
adc
fst
in
sbb
out
inc
lahf
out
mov
jbe
shl
add
xor
cwde
xchg
sbb
fld
(bad)
cdq
push
repz
jge
and
lods
dec
or
(bad)
hlt
daa
outs
and
pop
into
das
jae
call
fwait
lods
cmp
outs
and
pop
out
stos
cmp
aas
mov
jns
ret
inc
xor
inc
xchg
(bad)
mov
inc
mov
push
ror
inc
pop
(bad)
push
nop
rcl
jecxz
call
sbb
jecxz
mov
add
ds
fs
or
xchg
inc
sub
test
inc
rcr
mov
xchg
add
cmc
sahf
stos
add
aam
out
push
add
mov
arpl
adc
dec
cli
(bad)
mov
int3
xor
fstp
outs
xor
push
stos
cmps
out
and
gs
adc
shl
pop
mov
daa
pop
fistp
repz
fsubr
hlt
rcr
inc
inc
add
jo
adc
fs
mov
dec
dec
test
(bad)
nop
xchg
ins
mov
jecxz
xor
xchg
xor
cwde
mov
pusha
ds
(bad)
repnz
push
push
cdq
cmp
fwait
pop
imul
nop
retf
pop
das
pop
js
xor
scas
inc
pop
lock
sbb
loopne
arpl
mov
stos
push
push
retf
push
out
and
jns
mov
ret
push
pop
jp
or
ret
ins
call
xor
push
sbb
mov
js
movs
mov
jle
xlat
dec
dec
xchg
mov
adc
jmp
out
cld
mov
mov
sub
iret
push
sahf
ffree
jecxz
stos
jo
dec
es
data16
nop
cwde
jmp
jno
dec
clc
movs
and
adc
popa
call
push
dec
sub
xor
push
push
jge
jge
imul
add
mov
stos
shl
add
das
pop
gs
cmp
arpl
jo
cmps
ror
(bad)
jnp
daa
shr
test
or
push
jns
inc
lods
cmp
into
jmp
das
dec
cwde
sbb
mov
jp
xchg
sbb
je
(bad)
jg
int3
movs
push
mov
inc
xchg
movs
lods
and
or
and
inc
add
adc
add
sti
into
movs
pop
sub
test
fdiv
push
mov
mov
or
daa
and
sub
xor
das
shl
daa
mov
icebp
test
addr16
popf
add
inc
daa
shl
and
(bad)
out
and
sbb
out
inc
fistp
and
addr16
pop
jle
mov
ja
shr
rcr
add
stc
stos
ja
sbb
sahf
adc
push
jns
pop
pop
add
mov
pop
xchg
fild
in
push
call
xchg
ret
pop
mov
int3
popa
jne
cmc
nop
jmp
dec
lock
push
out
dec
lods
push
test
loop
jnp
mov
aaa
lea
in
ja
scas
cmp
mov
xchg
std
and
dec
in
add
(bad)
adc
retf
mov
out
das
sbb
pop
cli
jns
xor
mov
push
in
dec
or
inc
dec
loop
fistp
jns
sbb
cmp
jae
push
inc
mov
iret
ss
(bad)
dec
mov
cmps
or
outs
int
enter
je
out
cmps
jmp
xlat
paddsb
fdivr
sbb
fadd
test
lds
pop
adc
cmp
dec
pusha
mov
cli
ins
inc
mov
sbb
dec
mov
push
push
outs
sbb
frstor
ret
cs
imul
gs
jle
mov
add
aas
xor
(bad)
arpl
jl
dec
push
call
nop
sbb
int
sub
fnstsw
cmp
scas
mov
sub
out
mov
jmp
and
ins
ret
push
lock
push
or
loope
adc
jp
bswap
add
jl
loopne
test
adc
xchg
cwde
dec
das
mov
push
clc
push
cwde
sbb
adc
nop
out
xchg
and
iret
out
cmps
outs
in
neg
add
fsub
push
ss
scas
inc
pop
xchg
jnp
cmp
xchg
push
test
sbb
test
sbb
jns
push
mov
scas
mov
sbb
cmp
popa
xchg
cwde
dec
push
int3
test
ja
into
popa
rcr
sub
cs
add
adc
inc
iret
pop
test
fs
mov
ror
push
mov
add
cmc
mov
mov
es
cmp
sbb
jge
mov
pop
mov
push
ret
rcr
ficom
pop
cmp
adc
rol
cmp
cmp
sbb
gs
in
cld
dec
into
int3
repz
xchg
adc
popa
pusha
sbb
adc
ret
psadbw
or
and
pop
jnp
add
inc
xlat
scas
pop
xor
inc
pop
adc
aas
xor
xchg
out
shl
add
inc
sbb
ins
fbld
mov
popf
push
mov
(bad)
daa
sub
ja
outs
and
xchg
cwde
cdq
pop
or
mov
mov
(bad)
imul
pop
dec
outs
mul
cmps
xlat
mov
lods
pop
lods
sbb
pop
lods
jbe
mov
movs
sbb
je
pop
sub
pop
pop
imul
add
popa
add
popf
mov
sub
jmp
pop
cmps
sub
loope
mov
push
call
jle
in
push
jmp
popa
mov
js
xchg
retf
out
(bad)
jno
ss
mov
dec
sub
pop
stc
ds
cmps
ror
scas
stc
inc
pop
mov
rol
dec
push
int
rcr
cdq
inc
sub
sub
movs
in
repnz
sbb
pop
jle
enter
shl
jle
ins
shr
stos
popa
test
repz
cmc
(bad)
(bad)
sbb
and
push
adc
cdq
stc
cli
aam
pop
in
scas
jb
adc
or
rol
xlat
dec
sub
(bad)
(bad)
cli
movs
in
fldenv
loop
jb
imul
add
mov
adc
outs
mov
loope
out
clc
xchg
aas
aad
xchg
mov
mov
test
sub
pop
jmp
sbb
test
add
mov
adc
jp
dec
mov
push
cmps
(bad)
push
mov
(bad)
sub
adc
xor
rol
in
stc
cmp
out
outs
adc
test
sbb
xor
sahf
popf
cmps
push
mov
sti
jno
lods
sub
mov
test
mov
mov
sub
(bad)
xchg
lods
test
xor
ds
xchg
fmul
jo
clc
sbb
clc
iret
shl
aas
sar
inc
sbb
outs
je
xchg
loopne
out
imul
lods
pop
mov
fsub
inc
push
add
retf
scas
das
mov
test
xor
in
rol
rol
dec
fcomp
xchg
mov
data16
imul
jl
inc
add
add
aas
jo
in
popa
test
dec
ins
call
pusha
dec
push
xchg
pop
mov
mov
dec
ret
cmps
jecxz
jmp
add
fbstp
ret
xlat
pop
loopne
mov
fdivr
rcl
(bad)
mov
cmp
mov
mov
out
xor
sbb
adc
ins
bound
mov
neg
loop
pop
mov
not
das
(bad)
jne
fild
push
mov
hlt
stos
test
inc
sub
and
or
rol
xchg
es
(bad)
mov
daa
mov
pushf
xor
cmp
into
clc
pusha
mov
aad
aad
cmp
fsubr
sub
outs
jl
and
jno
retf
cli
mov
jnp
ins
cld
xor
jg
aas
into
mov
push
dec
sub
lahf
xchg
mov
(bad)
aam
cmp
jg
dec
push
loopne
xchg
cmp
inc
adc
push
jl
scas
std
scas
pop
(bad)
mov
mov
pop
xor
mov
pop
les
add
push
retf
jns
stos
inc
iret
or
mov
mov
pop
scas
ret
mov
test
jp
cmp
push
loopne
pop
mov
sbb
cmp
jl
jmp
jnp
dec
aam
adc
cdq
xor
cmps
rcl
mov
push
ret
push
dec
push
fwait
xchg
sti
sar
jmp
and
fcmovu
icebp
imul
xor
in
xor
cmc
movs
lods
sub
jmp
sbb
inc
cmp
mov
pop
inc
fst
int
repnz
(bad)
sub
inc
and
popf
inc
fsub
loope
in
mov
gs
push
test
dec
(bad)
pop
aam
int3
fdiv
cmp
mov
in
in
mov
xchg
loope
mov
or
test
ss
addr16
enter
add
leave
xchg
or
mov
or
in
ds
dec
adc
ds
or
push
jno
rol
or
sti
adc
ins
out
ds
fsubrp
lods
ins
stc
push
lds
push
(bad)
outs
lea
adc
nop
sbb
pop
nop
scas
inc
pop
mov
pop
or
shl
push
mov
push
(bad)
xor
es
fisub
fnstsw
lahf
(bad)
int3
imul
mov
and
cmp
push
inc
cmp
lea
lahf
inc
mov
mov
leave
rcr
sar
repz
sub
add
lods
aam
inc
jmp
call
sub
add
fsubr
fs
ss
jne
xor
das
ins
outs
xor
mov
add
aas
or
movs
loop
loopne
mov
xor
xchg
shl
pop
shl
sbb
inc
call
mov
cmp
repz
mov
nop
hlt
jmp
or
movs
sahf
cmp
mov
mov
and
fs
and
rcl
or
and
pop
mov
mul
movs
loope
adc
inc
scas
stc
sbb
fiadd
aaa
bound
mov
mov
mov
ins
(bad)
fidiv
xor
popf
out
fiadd
(bad)
sub
retf
daa
retf
push
test
loopne
push
aam
mov
cwde
inc
das
add
std
stos
adc
ror
sub
cmp
out
fdivr
arpl
aas
ffree
dec
imul
adc
pop
adc
mov
(bad)
ins
xchg
or
or
movs
lea
dec
test
dec
jnp
xor
sahf
and
pop
adc
push
sbb
shr
fistp
cmp
adc
aaa
inc
and
ss
aam
ja
es
push
icebp
in
int
stc
mov
fisubr
pop
std
ds
or
cmp
push
rcl
jns
aaa
inc
xchg
push
in
mov
and
mov
pop
dec
stos
pop
aas
cmc
daa
pop
mov
fcom
mov
inc
imul
mov
ja
loopne
mov
cmp
ins
ret
or
imul
outs
sub
aas
ds
push
cmp
mov
aad
push
das
adc
mov
loop
jnp
test
dec
imul
or
push
cmps
out
call
fisubr
mov
sbb
push
rol
imul
push
and
jmp
add
mov
sub
je
pop
shl
adc
rcpps
push
push
jo
xchg
in
jg
and
das
inc
icebp
jl
mov
jne
gs
jp
and
jg
imul
lahf
sti
or
(bad)
or
pushf
adc
pushf
add
in
xor
mov
icebp
clc
sub
mov
pop
cmc
dec
popf
dec
mov
dec
(bad)
cmp
mov
push
les
sub
leave
pop
mov
jp
std
lods
mov
push
inc
test
cs
enter
lods
loope
aad
xchg
jmp
inc
sub
repz
add
mov
retw
fcmovb
daa
mul
push
xor
popa
xchg
popa
inc
mul
mov
and
(bad)
call
push
cmp
retf
mov
(bad)
out
jmp
ror
loope
(bad)
ins
cwde
mov
jns
inc
mov
in
(bad)
gs
inc
lahf
xchg
mov
or
push
mov
sbb
(bad)
out
xchg
rcr
je
xchg
icebp
js
mov
add
sahf
ror
repnz
dec
imul
cmps
out
mov
adc
adc
jl
int3
cld
jmp
dec
ror
in
add
add
xor
das
mov
mov
cmps
jb
ret
mov
pop
cdq
xor
jge
aaa
jne
neg
push
bound
and
mov
or
sahf
test
addr16
xchg
jp
mov
push
sub
pushf
(bad)
cmp
or
fstp
test
neg
xor
cdq
or
inc
cmp
outs
xchg
pop
in
stc
ins
aad
inc
loopne
mov
sbb
(bad)
xchg
sub
cld
xlat
sub
pop
mov
es
movzx
dec
mov
fnsave
loopne
loopne
data16
aas
jns
test
cmp
dec
mov
and
jp
adc
sahf
rol
jbe
and
xchg
mov
add
ret
jo
out
push
sbb
lods
add
sub
popa
inc
push
lahf
ja
pop
pop
mov
lds
sbb
cdq
out
inc
sbb
in
jmp
jae
push
cmps
call
retf
jbe
or
call
iret
lahf
ds
xor
imul
std
dec
mov
call
dec
add
dec
in
mov
and
sbb
push
lods
out
or
lods
call
lods
lods
pushf
dec
in
shr
push
int3
dec
mov
(bad)
mov
jl
test
mov
jle
dec
mov
inc
adc
mov
inc
shr
cdq
stc
inc
or
jl
leave
dec
mov
call
push
mov
push
fisub
cmp
or
jge
sub
daa
aad
jge
mov
and
push
push
fadd
xchg
outs
add
xchg
mov
inc
lea
loop
in
call
ret
xchg
shl
in
mov
adc
jg
cmp
clc
por
jne
lods
or
xor
test
jns
pop
pushf
imul
cmps
mov
sub
push
pop
outs
jmp
outs
ss
outs
pop
dec
sbb
dec
add
cmps
push
ins
out
cwde
xor
dec
adc
pop
mov
adc
adc
mov
mov
mov
mov
outs
cmp
fdivr
pop
aad
push
inc
dec
imul
dec
and
out
xlat
out
cmp
jbe
fst
out
ss
sti
std
and
lock
push
add
test
mov
mov
in
add
ret
stos
jmp
leave
div
push
test
inc
adc
shr
nop
fcom
dec
xchg
xchg
push
jecxz
clc
out
mov
or
sbb
mov
mov
or
pop
push
and
pop
jnp
mov
pop
jp
fisttp
xor
outs
mov
scas
leave
sbb
jg
les
jp
mov
jle
pop
xor
jae
je
(bad)
cmp
inc
fwait
dec
ja
lods
cmp
movs
add
(bad)
cmp
icebp
xchg
adc
xor
mov
inc
add
cmp
and
test
push
mov
pop
xor
jmp
sbb
arpl
shl
int3
push
mov
or
mov
inc
jb
xor
and
ins
jae
sahf
jp
jbe
ss
cmp
sub
in
ja
add
icebp
fild
jl
or
push
add
pop
aaa
not
pop
lea
popf
pop
mov
adc
test
mov
sub
jmp
dec
cmp
daa
xchg
imul
or
push
mov
in
fstp
test
retf
ret
push
repz
mov
cmp
add
jne
test
cmp
xchg
push
test
sbb
push
sub
adc
jmp
push
pop
fisubr
mov
push
cmp
pop
and
or
es
daa
stos
inc
cmp
repnz
es
jae
cmps
jmp
fcom
push
(bad)
ss
scas
sahf
(bad)
jbe
push
pushf
in
jne
ins
shl
adc
dec
int3
mov
mov
add
dec
ficom
dec
xor
mov
jmp
mov
fidivr
test
push
sub
call
dec
mov
jmp
jo
loop
pushf
push
push
lock
frstor
push
add
cli
(bad)
mov
mov
enter
bnd
outs
ss
das
and
mov
call
pop
loopne
push
out
sbb
jp
pushf
and
shl
popa
ins
call
pop
jbe
sbb
inc
int3
mov
movs
mov
xchg
mov
bnd
fild
mov
js
pop
in
dec
jns
sub
into
and
fidiv
jge
mov
mov
and
daa
sub
je
call
xor
jns
sub
mov
sub
xor
mov
or
xor
xor
enter
add
mov
jl
pop
sub
or
mov
or
movs
shl
adc
test
std
jae
jno
mov
idiv
popa
ins
imul
es
call
(bad)
or
adc
mov
mov
(bad)
mov
and
outs
sbb
jmp
sbb
test
nop
repnz
stc
shl
jae
push
inc
cmp
repnz
jo
rol
int
pop
fistp
sar
push
and
push
mov
sub
mov
inc
div
jp
cmps
add
cmp
cmps
cwde
lods
rcl
xchg
adc
leave
adc
xor
aas
jecxz
lds
rcl
fadd
jne
ins
test
sub
test
and
xor
sti
jae
xor
neg
cmp
jbe
sub
cmp
ret
push
and
lea
loopne
mov
mov
ret
or
lock
mov
lock
sub
loop
xor
outs
mov
dec
dec
sub
imul
inc
mov
xor
scas
lea
sub
push
cmc
mov
and
adc
mov
test
mov
test
enter
push
js
jecxz
cmp
mov
mov
and
mov
es
ret
mov
popf
mov
hlt
xchg
ret
pop
push
xchg
iret
fistp
(bad)
shr
fdiv
xchg
xor
mov
aas
and
out
shl
xor
sahf
pop
iret
dec
mov
add
fs
mov
mov
test
mov
loope
retf
jge
daa
movs
test
mov
mov
aas
mov
mov
(bad)
in
jmp
or
cmp
add
push
and
and
movs
or
pop
mov
jb
in
jmp
jmp
jge
jo
enter
ds
retf
sbb
sub
iret
test
xchg
sahf
dec
sub
jge
into
or
cmp
in
fsubr
or
movs
dec
cmp
imul
dec
mov
je
or
sub
sub
dec
scas
dec
iret
lahf
fwait
pop
not
add
mov
mov
call
sbb
movs
xchg
mov
sbb
lods
pushf
int3
sar
mov
push
xchg
or
sbb
cld
cmp
inc
out
ret
sub
std
jp
popw
jmp
pop
adc
stos
mov
inc
shl
cs
sbb
jmp
push
and
fsubr
scas
dec
popa
lock
fcomip
popa
pop
push
sub
inc
pop
and
sbb
mov
xchg
push
push
adc
jmp
mov
out
mov
sti
adc
and
sahf
repnz
(bad)
jmp
adc
data16
jl
jle
div
jmp
(bad)
retf
in
scas
mov
jb
int3
out
mov
xchg
cmp
xchg
jg
push
cs
(bad)
(bad)
jecxz
push
in
xchg
test
xchg
stc
scas
jmp
and
stc
aad
adc
add
icebp
fs
dec
push
ret
ficom
xchg
dec
push
sub
ins
out
xchg
jo
jp
mov
jecxz
mov
lods
or
shl
adc
and
iret
movs
cmp
xor
lds
push
mov
mov
jge
mov
dec
sbb
ret
das
add
cmc
ror
push
fucompp
rol
jp
pop
pop
scas
cmps
leave
sub
xchg
bound
addr16
dec
lods
stos
aaa
in
adc
sbb
xchg
jne
loopne
mov
mov
push
sub
ins
add
pop
cdq
inc
pop
pop
mov
cmp
popa
cmp
sub
mov
repz
fisubr
pop
mov
les
mov
xor
(bad)
in
les
loope
dec
je
lds
xor
push
movs
(bad)
jecxz
(bad)
cli
and
sbb
daa
jmp
push
mov
lea
xchg
adc
sbb
or
fdivr
loop
dec
fdiv
mov
inc
mov
imul
cs
jo
test
mov
es
mov
add
pop
lods
mov
dec
(bad)
popa
pop
cli
std
call
(bad)
das
mov
into
cmp
arpl
xchg
fisttp
fisub
mov
je
addr16
jge
xor
scas
addr16
cwde
js
sub
mov
ins
cli
loopne
sbb
retf
ja
add
(bad)
(bad)
jne
lea
(bad)
mov
imul
test
push
adc
jl
jle
dec
xor
cdq
inc
fstp
retf
adc
das
or
sbb
ins
mov
(bad)
mov
push
jns
inc
ins
and
mov
arpl
(bad)
popa
aas
fdiv
les
adc
aas
jmp
cmp
out
cmp
addr16
jp
in
push
mov
daa
mov
test
push
dec
movs
xchg
inc
clc
mov
mov
jp
cli
sub
mov
mov
sahf
lock
fs
loop
or
jmp
adc
ins
pushf
pop
jmp
icebp
fmul
dec
ds
push
and
aaa
daa
in
sahf
xchg
leave
retf
stc
jnp
pop
sti
icebp
push
es
retf
xor
jnp
xchg
rol
and
sbb
fcom
imul
push
pusha
pop
adc
out
push
or
mov
pop
fwait
mov
sar
lods
jg
fdiv
inc
mov
out
daa
mov
inc
call
int3
imul
mov
icebp
push
mov
push
push
test
push
sbb
jns
int3
in
aaa
and
jl
jp
push
mov
and
sub
mov
ficomp
cmp
cs
pop
loope
cmc
and
pushf
outs
jg
fisubr
push
mov
or
fmul
(bad)
dec
mov
dec
into
cli
cmp
push
and
push
loopne
ins
dec
aad
ss
mov
jae
std
shl
mov
dec
cld
adc
fs
movs
xor
push
and
dec
pop
inc
push
pop
jg
mov
addr16
imul
sub
push
xor
aam
mov
sti
fcomp
adc
aas
int3
call
aaa
mov
xchg
aad
nop
loope
sub
xchg
xor
lock
add
xchg
cmp
push
and
jg
mov
ret
test
mov
and
push
dec
arpl
jno
(bad)
shl
je
jnp
jmp
repnz
js
std
push
mov
push
jmp
ss
xor
jns
or
sbb
inc
mov
push
out
call
daa
std
add
sbb
jno
fstp
in
mov
lds
les
jnp
xor
xor
xchg
inc
xor
dec
xchg
dec
fisttp
dec
sti
add
or
loopne
jp
cmp
and
iret
arpl
outs
test
xor
iret
clc
ret
in
and
pop
dec
add
jg
sbb
outs
mov
jb
repnz
rol
and
ins
imul
xchg
scas
in
mov
(bad)
and
sahf
imul
add
sub
mov
jmp
pop
loope
add
and
and
fnsave
add
push
sbb
push
lods
sub
inc
adc
leave
dec
pop
retf
dec
sahf
push
enter
sahf
stos
fstp
push
push
sbb
adc
cdq
xor
mov
aad
cli
mov
sub
sbb
ret
outs
(bad)
mov
mov
sbb
mov
add
clc
movs
test
sti
sub
gs
sar
gs
adc
in
or
mov
daa
cmp
xchg
pop
pop
ficom
leave
dec
fs
ss
push
dec
xlat
xor
mov
pop
fisub
jmp
fs
or
outs
stc
in
addr16
test
loope
mov
loopne
mov
and
xchg
sbb
loopne
scas
jmp
pop
adc
ficom
not
mov
out
jp
ds
pop
movs
mov
mov
(bad)
(bad)
sahf
mov
add
cmp
ins
xchg
iret
and
push
dec
js
jle
mov
lock
sub
outs
out
in
call
adc
adc
ret
mov
push
inc
push
mov
mov
or
cli
call
pop
out
aad
inc
inc
dec
int
xchg
fs
sbb
sbb
inc
pop
push
inc
int
loopne
push
cmps
mov
xchg
and
mov
sbb
xchg
add
pop
dec
and
imul
sar
cmp
lods
or
cmp
mov
dec
mov
jg
inc
retf
jmp
add
jmp
aaa
xchg
in
ror
dec
sti
cmp
add
out
sbb
movs
jb
rcl
or
sub
fiadd
add
mov
fwait
shr
cmc
out
xlat
xor
test
jnp
jg
ret
adc
ss
ret
pop
call
mov
xlat
leave
or
test
xlat
xor
and
adc
gs
sar
jb
push
xchg
mov
call
and
xchg
mov
jp
cs
xor
push
test
xor
inc
out
jg
fstp
lods
mov
xor
mov
call
stos
ins
push
lahf
cld
or
jp
aas
push
mov
pop
mov
mov
das
test
add
imul
mov
xchg
adc
push
push
test
xor
bound
cmp
mov
jecxz
in
cli
je
imul
sub
sub
or
iret
repz
push
in
jl
inc
mov
and
jmp
sbb
movs
fist
les
pop
scas
into
jnp
bound
(bad)
pusha
push
add
xor
into
int
cmp
test
loop
cmps
push
mov
idiv
out
clc
add
adc
and
fdivr
fidivr
xchg
or
(bad)
mov
or
push
stc
mov
call
jg
dec
in
mov
popf
push
push
pop
stc
mov
add
xchg
adc
pop
and
lea
call
fwait
mov
mov
neg
cmps
sbb
fild
nop
push
pop
adc
adc
jg
mov
cmp
jp
xor
(bad)
cmp
shl
lods
or
xor
jnp
data16
pop
adc
sti
imul
xchg
mov
inc
dec
cli
int3
pop
dec
adc
mul
xchg
sbb
cmp
lahf
out
retf
xchg
or
jmp
mov
add
test
call
adc
jmp
mov
inc
xor
sti
adc
sub
addr16
pop
jnp
mov
or
mov
imul
movs
icebp
popa
inc
jecxz
or
add
xchg
pop
pop
adc
and
je
mov
dec
mov
sub
imul
jno
sub
adc
stc
add
fimul
jg
out
mov
ja
ds
xor
ss
mov
xchg
ins
bound
mov
popf
ins
inc
push
out
arpl
and
jecxz
xor
sbb
push
push
or
nop
dec
dec
jns
jae
sahf
add
fwait
xor
fisttp
(bad)
ficomp
jecxz
xchg
lock
sub
jmp
sbb
stos
push
jmp
push
int
fst
xchg
jnp
inc
daa
movs
stc
jns
leave
das
addr16
pusha
rcr
or
cmp
test
movs
jp
test
and
adc
push
loop
mov
inc
jo
mov
fstp
dec
fwait
jbe
sar
cmp
jge
mov
jmp
popa
inc
push
fwait
clc
xor
pop
scas
(bad)
lock
inc
and
mov
sub
cmp
mov
xor
sub
cmp
or
inc
pop
push
mov
jmp
stos
or
dec
adc
out
xchg
jmp
xor
pop
test
push
dec
lea
pop
xchg
lock
mov
jne
in
fcomp
jl
aam
sahf
mov
(bad)
or
and
or
jge
adc
aad
or
out
ret
shl
loope
or
daa
mov
ins
and
cli
aam
xchg
jge
loopne
pushf
sub
pushf
jmp
out
add
cmp
(bad)
sbb
out
add
data16
cmps
mov
movs
jg
adc
xor
rcl
loope
jl
jecxz
bound
sti
test
or
sub
xor
fimul
pushf
and
dec
sbb
jb
fcomp
mov
fbld
and
xchg
ret
mov
out
mov
jmp
(bad)
popa
dec
lea
inc
sahf
lods
shr
cwde
(bad)
pop
test
retf
xchg
add
(bad)
adc
pushf
xor
xor
js
imul
xor
je
hlt
dec
cmp
call
pop
xchg
cmp
ror
dec
(bad)
mov
pusha
pop
into
jg
push
sub
dec
mov
sbb
mov
dec
xchg
ja
jle
fistp
je
inc
pop
or
inc
cwde
in
ror
pop
adc
fxch
stc
aad
movs
ficom
cli
add
(bad)
sub
inc
shl
mov
enter
push
mov
or
out
pop
(bad)
jecxz
scas
gs
mov
jle
outs
aaa
dec
pop
mov
scas
shr
mov
dec
cmps
jecxz
dec
xor
fwait
xlat
and
jo
(bad)
(bad)
xchg
push
and
ret
add
sbb
lea
shr
mov
pop
clc
push
add
ja
(bad)
sub
add
loop
mov
scas
dec
sub
xchg
push
sbb
mov
ins
js
loopne
pop
icebp
pop
rol
mov
jne
xor
sub
gs
xlat
mov
in
imul
fcom
push
mov
inc
arpl
call
pop
mov
adc
mov
ret
ret
dec
adc
in
xor
aad
jp
mov
fst
pminsw
int3
nop
std
cmp
xchg
setae
cmp
movs
aas
dec
(bad)
mov
jl
aad
xor
retf
inc
mov
sub
fxch
pusha
inc
ss
leave
inc
mov
cmps
jbe
or
dec
ja
mov
mov
hlt
sub
ficomp
mov
cmp
xchg
jb
inc
inc
cmps
mov
cmp
xor
sbb
or
ret
push
mov
and
loope
imul
rcl
sub
and
out
jp
mov
aas
imul
imul
enter
es
movs
mov
sbb
xor
push
out
imul
shr
jl
xor
lock
fdiv
mov
cmp
lods
and
jnp
loop
daa
and
sub
pop
and
xchg
sqrtps
sar
repnz
leave
into
cmp
push
mov
add
and
cmp
outs
aam
xchg
pop
(bad)
mov
jmp
cmp
jb
fucomi
aam
mov
push
inc
test
add
jge
xlat
sub
sub
out
push
mov
dec
dec
push
cmps
add
sbb
adc
dec
mov
cdq
daa
in
call
and
pop
nop
jo
ss
arpl
cmp
iret
mov
mov
inc
cmp
and
mov
iret
mov
jmp
dec
add
dec
sub
sbb
xor
add
jp
push
xor
xor
sbb
popa
mov
sbb
mov
nop
ja
push
int3
push
mov
ret
and
mov
push
inc
or
cmp
xchg
(bad)
stc
sti
mov
cs
scas
imul
adc
xor
fsub
xchg
call
push
inc
jnp
push
mov
movs
lock
adc
jne
ret
mov
and
cmp
inc
dec
mov
aaa
test
mov
fadd
out
mov
je
push
sub
imul
cmp
enter
fucom
int
or
repnz
and
in
inc
add
int3
dec
inc
ss
in
scas
mov
ja
pop
mov
movs
pop
jns
xchg
mov
jle
mov
pop
ficomp
in
xor
popf
push
mov
out
shl
int3
out
pop
imul
mov
sub
fisttp
mov
cmps
mov
test
int
mov
es
lahf
adc
jne
stc
popa
popa
mov
push
jg
mov
or
mov
push
test
in
retf
cld
pop
outs
jecxz
gs
ret
movs
push
shr
movs
xchg
scas
aam
in
test
mov
push
mov
xchg
cwde
ins
sbb
(bad)
mov
bound
jle
fisubr
sub
jae
push
fstp
and
stos
and
pop
sbb
mov
sub
xor
pop
phaddw
call
and
mov
dec
sub
cmp
rcr
inc
fcomp
inc
aad
xor
adc
stos
jg
adc
repz
mov
(bad)
ficomp
test
loop
pushf
push
push
sahf
sti
push
movs
jmp
pop
imul
mov
jp
mov
adc
or
pop
test
xchg
iret
sub
push
int3
pop
sub
daa
rcl
xchg
sub
mov
xchg
ret
cmps
rol
pushf
dec
je
(bad)
jmp
pop
sahf
xor
outs
sub
jp
ins
or
popa
mov
or
push
xchg
pop
icebp
es
stc
mov
std
mov
inc
jns
push
push
push
ss
pop
addr16
xor
test
push
mov
cmp
push
jnp
mov
xchg
xor
into
jne
xchg
push
add
push
shl
fist
out
addr16
pop
out
xor
mov
aad
daa
pushf
sub
std
or
and
dec
xchg
mov
cmp
mov
or
aas
sbb
sahf
sahf
in
jl
cwde
jmp
xchg
sti
in
in
jle
(bad)
sbb
sub
outs
ss
xor
xchg
dec
jo
dec
jg
out
pop
push
xor
lahf
(bad)
xlat
iret
in
cmps
mov
in
(bad)
xor
js
out
xlat
sar
sar
inc
add
js
loope
leave
jmp
out
sub
stos
add
test
icebp
mov
je
and
xchg
jg
inc
ds
pop
mov
cdq
pop
dec
adc
loopne
or
dec
inc
mov
jle
mov
mov
xchg
jmp
cmps
xchg
stos
in
add
call
call
push
cmp
xchg
xchg
dec
push
or
je
movs
mov
dec
mov
xor
aaa
nop
ret
in
mov
int3
hlt
push
inc
push
or
mov
sub
mov
das
mov
shl
bswap
push
and
loop
jg
test
cmc
nop
loope
sti
xor
sahf
int
push
scas
popf
daa
sub
xchg
les
enter
mov
and
xor
sahf
push
mov
in
fwait
mov
call
mov
repnz
mov
mov
xchg
enter
cmp
inc
mov
into
and
jge
xchg
push
sbb
xor
pop
jecxz
xchg
push
in
inc
jmp
repz
pop
outs
(bad)
and
shl
mov
fcom
jge
pop
or
push
dec
push
gs
mov
hlt
push
and
out
and
jp
das
call
sub
push
in
neg
mov
lock
loope
mov
gs
rcr
and
or
or
cmp
cli
fsubr
jmp
cmp
in
pop
ret
sub
gs
push
and
(bad)
mov
dec
mov
sbb
in
popa
(bad)
mov
inc
loop
pusha
pop
in
loopne
int
mov
mov
sbb
adc
movs
lods
cs
mov
xor
lock
arpl
les
das
mov
pop
mov
add
es
ss
sub
mov
out
jp
mov
imul
les
sbb
xlat
ret
cmp
mov
mov
sub
fcmovbe
outs
ja
pushf
xor
pushf
cmc
push
xchg
test
test
dec
mov
jo
repz
pop
dec
pushf
(bad)
pushf
std
bswap
(bad)
aad
or
movs
inc
leave
xchg
repz
test
xchg
push
or
outs
xchg
shl
scas
mov
or
fnstsw
jb
jb
ja
test
stos
sub
xchg
pop
repz
sar
xlat
xchg
cmps
xchg
mov
mov
std
or
adc
dec
sub
int
shl
pop
xchg
fild
pop
imul
mov
clc
std
inc
ins
jge
aam
push
inc
test
xor
es
ret
fstp
(bad)
ja
jp
and
mov
lea
mov
push
inc
lods
xchg
sbb
(bad)
jns
stc
push
jg
push
push
inc
gs
fstp
test
hlt
xchg
inc
or
std
rcl
(bad)
fwait
xor
pop
or
push
push
jmp
std
rol
(bad)
pop
push
xlat
jnp
jg
sti
or
jecxz
addr16
add
sub
dec
add
mov
cli
sbb
int3
sub
sub
pushf
mov
jle
xchg
sub
test
hlt
push
xchg
test
clc
data16
aaa
test
cmp
dec
mov
mov
dec
and
sbb
xor
push
inc
pop
les
arpl
scas
fistp
jnp
add
mov
aad
sahf
xlat
xchg
jg
pop
mov
sbb
mov
popa
push
jae
inc
xchg
xchg
ins
scas
xor
in
lds
sbb
pop
mov
mov
or
dec
ds
add
and
push
dec
or
test
ss
or
lods
stos
imul
jecxz
je
push
push
mov
and
mov
addr16
lds
bound
ret
ins
inc
adc
data16
push
cmp
sbb
ret
fild
mov
pop
pop
sub
(bad)
mov
fsub
loope
mov
mov
and
out
push
and
push
int3
clc
leave
mov
push
repnz
movs
lahf
popf
shr
and
sub
or
(bad)
mul
xchg
cwde
inc
mov
dec
aam
rol
fs
(bad)
aas
add
je
adc
inc
add
and
mov
adc
in
mov
sub
or
xchg
enter
cmp
sbb
fild
pop
inc
retf
mov
(bad)
fstp
(bad)
lock
lahf
stos
mov
mov
sub
push
sub
xchg
retf
xor
jae
jae
cdq
imul
cwde
(bad)
cwde
xchg
in
xor
pop
mov
fild
inc
or
push
sahf
adc
sti
xlat
stc
cmp
mov
sub
jl
mov
or
(bad)
jmp
aas
js
xchg
gs
pop
pushf
sbb
addr16
jns
pop
movs
xchg
fcomip
xchg
retf
xchg
xor
mov
adc
pop
lds
or
enter
push
sub
imul
popf
sub
sbb
mov
lods
div
out
jnp
xchg
pushf
pop
and
dec
mov
xor
scas
mov
xchg
push
or
mov
add
es
xchg
inc
cwde
sti
xchg
test
pushf
dec
mov
in
mov
sub
call
ror
xor
ss
and
mov
fst
int
les
(bad)
xchg
fwait
rol
or
gs
or
sbb
xor
pop
test
fwait
push
(bad)
sti
cmp
imul
cli
fwait
in
cmp
xlat
out
mov
movs
call
leave
sub
movs
clc
mul
inc
js
jmp
or
and
imul
pop
stc
adc
pop
call
sbb
inc
test
arpl
jmp
int3
xchg
jns
ss
sbb
push
xlat
addr16
mov
into
xchg
xchg
mov
ins
pop
ja
fild
lds
add
stc
mov
fild
(bad)
fisttp
dec
fs
ror
sub
mov
inc
dec
stos
xchg
xchg
dec
loope
inc
adc
xchg
and
sub
mov
mov
lock
cmp
movs
xlat
pop
js
add
dec
mov
shr
mov
or
jno
jmp
ss
aaa
ds
sbb
pushw
lahf
inc
ins
push
or
xor
adc
push
das
icebp
retf
jns
inc
dec
les
mov
xchg
sbb
mov
sbb
(bad)
je
or
mov
and
add
xor
stos
into
clc
pusha
pusha
aam
ins
pop
dec
popf
nop
bound
and
xchg
inc
scas
add
push
mov
mov
jno
pop
imul
pop
xchg
fld
sub
enter
std
mov
mov
push
loop
cmp
out
stc
call
and
xchg
outs
or
inc
aaa
ss
and
jne
jp
cmp
xchg
sub
test
pop
mov
cs
inc
push
jae
sbb
pop
mov
js
retf
loopne
dec
push
cld
repnz
(bad)
ins
sbb
jmp
sbb
ss
sub
lods
adc
shl
xor
xchg
and
inc
inc
pop
ins
push
fidivr
(bad)
rcl
mov
push
cmp
push
pop
mov
rol
repz
out
pop
cmps
fst
push
sti
jne
add
sbb
ins
sbb
pop
dec
inc
addr16
sub
sbb
adc
fcomp
or
or
stos
rol
sbb
sbb
outs
cmp
xchg
gs
stos
popa
leave
imul
and
sbb
jge
nop
retf
xchg
xchg
dec
out
lea
jecxz
jno
dec
(bad)
push
ja
in
jns
inc
dec
mov
in
daa
aam
mov
inc
push
mov
out
mov
aad
add
push
or
mov
outs
push
or
ins
cmps
fs
xor
test
jecxz
in
adc
daa
jnp
(bad)
data16
push
mov
mov
(bad)
rcr
(bad)
push
fnstenv
jae
fbld
or
pop
jmp
mov
in
add
in
fst
push
in
inc
outs
push
call
cmp
shl
xchg
das
scas
fdiv
aam
mov
(bad)
jecxz
adc
fs
das
(bad)
and
mov
cmps
out
gs
ficom
add
int3
fistp
mov
not
iret
loopne
pop
and
test
xor
push
xor
icebp
sbb
lods
nop
xlat
loopne
mov
cmps
cmp
inc
es
jp
mov
jle
cmps
add
jmp
outs
mov
call
add
loope
addr16
or
inc
jb
std
jae
ss
dec
xchg
and
pop
xchg
sbb
sub
rcl
sbb
enter
jns
mov
imul
cmp
adc
fsub
sbb
sti
adc
ficomp
(bad)
shr
xor
fisttp
retf
mov
loop
xlat
(bad)
sub
inc
inc
js
loop
jge
push
cmps
inc
add
ja
aaa
(bad)
adc
jmp
repz
adc
mov
out
stos
(bad)
loope
sbb
lea
fimul
jmp
cmc
nop
push
or
mov
movs
xor
adc
inc
push
push
pushf
in
and
jmp
sub
popf
cmp
bound
xchg
dec
push
add
sub
jmp
movs
mov
lea
call
shl
push
fstp
sti
mov
into
call
scas
mov
inc
fisttp
out
fsubr
cmps
jns
int3
inc
ss
or
push
and
pop
xchg
adc
cmc
push
add
or
jp
daa
mov
test
popa
(bad)
mov
leave
icebp
out
call
xchg
cdq
ja
dec
int3
add
mov
fistp
add
xchg
dec
pop
fs
pop
push
sbb
dec
call
xor
(bad)
in
xor
in
xchg
inc
outs
or
pusha
movs
repz
mov
push
shr
dec
ret
cmp
push
mov
cmp
mov
mov
frstor
ins
fist
scas
sub
inc
(bad)
push
cld
push
xor
mov
mov
or
add
add
xchg
xor
addr16
or
je
add
xor
inc
mov
cmp
mov
aas
lods
jg
shl
push
stos
adc
mov
jne
cli
dec
stos
inc
pop
(bad)
sub
lahf
mov
add
push
int
mov
enter
ins
(bad)
cmp
sub
retf
xor
ins
sbb
cmp
inc
pop
xor
(bad)
cld
mov
dec
in
scas
mov
(bad)
dec
dec
push
int3
loop
repnz
adc
sbb
test
lea
jne
xor
mov
xor
fist
shr
fstp
gs
out
mov
mov
fwait
xor
ja
arpl
test
inc
cdq
(bad)
stos
mov
push
cmc
lods
add
cli
xor
inc
shr
sub
pop
aaa
jg
lods
loope
sub
in
fimul
lahf
jl
dec
fdivr
sbb
sbb
add
pop
cmp
out
aas
ss
fld
and
push
movs
cmp
leave
pop
pop
mov
(bad)
fdivrp
jae
or
jae
push
cdq
lock
mov
sub
inc
in
mov
and
fcomp
inc
push
rol
mov
test
sub
cmp
stos
rcl
stos
adc
sub
sbb
lds
in
inc
mov
les
je
adc
retf
mov
fs
mov
inc
and
xchg
es
xor
hlt
fsub
rcl
clc
xor
(bad)
lods
mov
jbe
and
out
(bad)
xchg
mov
enter
(bad)
jle
repz
idiv
push
dec
sar
jmp
loop
clc
xchg
pop
popa
mov
in
jbe
pop
fisttp
(bad)
cmp
leave
cmp
mov
cmp
mov
pusha
lea
or
dec
(bad)
mov
push
adc
les
(bad)
fldcw
inc
test
jno
aas
fmul
pop
or
aad
jl
cmps
jno
jg
dec
fs
cmp
(bad)
div
or
(bad)
std
pop
xor
sub
inc
mov
div
inc
das
fstp
loope
pop
sub
jns
loop
cmp
lds
ds
cmp
ja
loop
ror
fstp
cmp
inc
xchg
mov
out
push
jmp
out
pop
inc
mov
sbb
aam
xor
inc
out
add
xchg
xchg
loop
dec
cli
mov
fmul
xchg
add
out
adc
fdiv
mov
pop
retf
xlat
in
ret
add
je
mov
fwait
or
loopne
jns
ret
mov
jb
shl
lods
cmps
push
imul
cld
mov
sub
dec
push
mov
stos
pusha
das
pop
imul
imul
outs
push
or
cmp
lods
mov
icebp
add
inc
mov
xchg
stos
lock
xchg
ror
mov
aad
in
fwait
sub
mov
and
shl
int3
repnz
stos
stc
out
mov
out
lods
jge
(bad)
loopne
das
in
nop
fwait
dec
ja
js
hlt
and
and
pusha
out
scas
push
pop
iret
mov
jle
movs
sub
jp
in
jmp
aaa
(bad)
cvtpi2ps
ins
lea
inc
pop
das
in
fdiv
push
out
movs
mov
jnp
jmp
ret
pcmpgtb
js
pop
iret
add
add
mov
push
cmp
or
mov
xor
cmp
cli
pop
push
sbb
dec
mov
outs
push
in
xor
shl
cmp
lock
mov
mov
push
adc
hlt
or
in
je
cmp
bound
sbb
jne
ins
cmc
cmp
sub
sbb
push
icebp
jmp
loope
push
dec
movs
push
cmp
mov
add
ret
xor
adc
jecxz
rol
aaa
(bad)
jb
push
scas
arpl
imul
dec
pop
ror
fimul
cmp
adc
es
call
sub
pop
jns
imul
pop
sahf
stos
xchg
movs
cmp
leave
cld
and
jae
bound
sahf
jo
ins
mov
retf
mov
xchg
and
andps
movs
pop
cli
mov
retf
cli
push
and
fs
fild
test
add
pop
dec
icebp
jmp
addr16
loopne
dec
fcomp
mov
inc
pop
ror
out
jp
push
sub
sbb
mov
fidiv
adc
jbe
loopne
ret
add
xor
cmp
ror
pop
ror
mov
call
mov
jl
xor
or
mov
inc
test
ret
jnp
push
jmp
test
(bad)
out
push
xchg
lods
dec
mov
xchg
dec
les
jmp
mov
mov
pushf
pop
ins
test
fdivrp
jnp
ja
popa
jbe
iret
pop
sub
clc
mov
inc
hlt
dec
out
push
shl
sub
jbe
xor
inc
mov
mov
test
sbb
push
add
or
sub
xor
inc
or
mov
cs
in
add
(bad)
adc
call
stc
jge
retf
pop
or
loopne
in
dec
dec
clc
xor
cli
repz
mov
shl
cmps
cdq
dec
inc
sub
fidivr
scas
inc
scas
cmp
cmp
adc
or
adc
int3
popa
aaa
rol
mov
lods
aad
or
xor
popa
fld
xchg
dec
sbb
mov
mov
push
mov
jmp
pushf
push
mov
mov
adc
mov
xchg
pop
add
scas
mov
in
push
and
shl
in
ss
js
addr16
pop
scas
test
sbb
add
pusha
into
out
(bad)
mov
inc
xchg
and
cmp
stos
cmc
in
icebp
sbb
cmp
ins
outs
mov
adc
mov
xchg
dec
je
das
ret
sbb
daa
jns
out
jle
mov
inc
imul
cli
xor
adc
jp
cld
and
js
push
and
dec
add
dec
mov
or
dec
cdq
add
pop
cmc
scas
xchg
aaa
mov
repnz
retf
stc
add
inc
xchg
mov
push
push
add
out
cmp
call
jae
jns
stos
add
push
push
iret
mov
sub
mov
mov
or
sub
movs
add
ja
mov
cdq
jns
cdq
or
jmp
rcr
adc
jmp
xchg
add
mov
cmp
mov
repz
iret
mov
fld
lock
iret
push
push
xchg
arpl
shl
inc
add
pop
gs
inc
xchg
ret
and
jno
and
js
pop
mov
mov
std
pop
bnd
adc
sahf
iret
repnz
mov
retf
xchg
shr
mov
ficom
fcom
daa
call
cld
inc
dec
xor
xchg
xchg
mov
popf
add
push
or
sub
ds
retf
test
adc
pop
(bad)
adc
daa
(bad)
xor
ds
push
or
fsubp
fwait
div
mov
stos
add
arpl
cmps
out
cmp
jne
cmp
xchg
mov
sbb
xor
adc
rcl
daa
(bad)
repnz
xlat
ret
out
(bad)
jmp
sbb
scas
jae
mov
mov
mov
data16
ins
jle
shl
pop
iret
fcomp
dec
shl
pop
xor
lods
outs
sahf
sti
scas
push
arpl
popa
fild
loope
data16
scas
fwait
pop
stos
daa
sbb
xchg
pop
cdq
pop
ins
sbb
mov
or
xor
repz
js
outs
cmps
mov
add
mov
out
fidiv
bound
inc
mov
mov
cmps
mov
loop
push
or
sbb
push
and
and
ret
pop
nop
push
gs
je
jne
clc
xor
aam
test
mov
sub
arpl
icebp
das
jge
xor
sahf
cmp
popa
mul
sar
fistp
or
add
fbld
(bad)
sbb
push
push
movs
xchg
xor
or
xchg
fwait
sub
jp
rcr
cmp
shr
movd
xor
jmp
punpcklwd
imul
mov
inc
jb
mov
dec
xchg
movs
test
xlat
xor
and
xchg
mov
push
pop
push
xor
fnstsw
push
add
mov
test
ret
and
(bad)
mov
popf
mov
ret
(bad)
inc
test
xrelease
add
ins
out
repnz
test
icebp
iret
les
das
(bad)
test
int3
mov
sbb
adc
push
dec
cmp
dec
cwde
shl
mov
popf
push
int3
gs
xchg
hlt
fimul
pusha
cmp
(bad)
jge
xor
mov
data16
push
jne
and
call
mov
(bad)
jno
test
pop
and
dec
das
fbld
jl
dec
test
pop
gs
push
fsubr
mov
cli
sbb
push
xlat
mov
lods
cmps
ds
mov
inc
sub
push
loopne
arpl
add
sub
pop
cmc
lahf
aad
mov
jmp
jb
xor
(bad)
je
inc
mov
rcl
out
push
inc
fsubr
push
enter
and
inc
cmps
add
mov
ja
(bad)
(bad)
test
cmp
xchg
fild
clc
loop
push
mov
sbb
pushf
jle
aaa
sub
call
fmul
adc
dec
push
sub
(bad)
retf
add
push
in
pop
cmp
xor
enter
jo
push
(bad)
sbb
push
or
sti
jne
mov
dec
movs
stos
lods
jmp
(bad)
ffreep
outs
mov
push
shr
jmp
adc
adc
jp
jo
imul
mov
out
mov
or
hlt
ret
xchg
int
or
mov
ins
mov
adc
xchg
shl
cwde
xor
pop
mov
add
test
pop
std
adc
mov
xchg
add
jb
out
ds
(bad)
ins
mov
mov
cwde
in
push
mov
mov
xor
xlat
mov
cmp
ficomp
fmul
sbb
sbb
data16
add
popa
mov
cmp
cdq
lods
or
and
and
movs
jns
frstpm(287
mov
dec
out
mov
aas
push
lods
ret
loopne
mov
mov
sbb
sub
icebp
inc
sbb
dec
into
aad
dec
push
sahf
add
mov
js
not
retf
(bad)
jne
rcr
dec
xchg
dec
cli
mov
adc
mov
jns
jne
jbe
xor
fild
cmc
cdq
lahf
mov
inc
jge
cwde
add
mov
and
sub
popf
aas
fwait
imul
in
sti
iret
stos
movs
sub
cs
and
int
push
clc
ficomp
adc
cmp
fwait
rcl
dec
mov
sbb
aas
jb
mov
repz
pop
(bad)
mov
aas
jmp
pop
xchg
gs
sbb
mov
push
push
xchg
popf
sar
lds
mov
push
pop
xor
xchg
pop
xchg
push
jbe
xchg
test
aaa
std
aad
sbb
cmp
es
iret
or
into
sahf
mov
and
enter
xlat
daa
jmp
jecxz
jecxz
rcl
repz
dec
rol
pop
dec
xchg
in
fld
fmul
jo
pop
inc
aad
push
add
stc
sub
push
popf
cwde
fistp
push
call
int
mov
movs
mov
clc
inc
jae
jecxz
mov
xchg
sbb
fcomp
and
out
jb
push
jnp
or
shl
fcom
xchg
add
aam
rcl
sub
pushf
les
rol
stos
cmp
mov
sbb
jae
jp
push
sbb
imul
sbb
mov
(bad)
fstp
stos
test
mov
ffreep
cwde
sar
push
lock
fwait
mov
test
sbb
xchg
mov
xchg
inc
xlat
push
cwde
dec
sub
repnz
je
pop
inc
aaa
or
pop
sbb
data16
dec
cmp
in
cdq
cmp
das
and
xchg
and
outs
xchg
es
mov
mov
or
and
cmp
fs
sbb
aam
add
xchg
and
test
rol
loop
push
xchg
xchg
les
mov
ret
dec
cmp
test
out
push
and
inc
jbe
(bad)
iret
dec
or
cli
sub
cmc
inc
aaa
shr
popa
and
mov
dec
dec
fdivr
mov
pop
adc
mov
int
mov
fidiv
lds
iret
add
test
jecxz
es
test
sbb
sbb
mov
sub
int
sub
xchg
pop
sbb
imul
call
pushf
neg
or
mov
test
cmp
loope
mov
arpl
outs
jle
fcmovnbe
in
pop
test
mov
call
lea
dec
gs
cli
pop
lock
xor
mov
aas
pop
(bad)
(bad)
adc
xor
(bad)
popf
outs
in
cmps
and
(bad)
rcl
hlt
push
cmps
lock
mov
movs
xor
push
push
jns
aaa
pop
push
call
and
push
mov
leave
stos
pop
shl
jo
and
and
lea
in
in
sub
das
fs
push
dec
and
xor
dec
cmps
add
in
sbb
add
push
inc
xchg
call
rcl
ins
cmps
aad
lahf
and
xor
xor
push
or
mov
pop
bound
cmp
jp
loop
mov
int
inc
mov
pop
sub
lea
push
je
mov
stos
adc
xchg
jb
ret
outs
and
sahf
fwait
out
mov
out
push
imul
dec
pop
inc
inc
jmp
xor
imul
scas
mov
(bad)
or
outs
aam
in
jb
adc
rcl
sar
ror
out
xchg
scas
inc
inc
loop
test
nop
lock
dec
xlat
jno
push
je
jo
icebp
(bad)
mov
jmp
data16
sub
cmp
test
and
and
into
lds
les
and
push
xor
inc
jecxz
(bad)
loop
mov
sbb
jae
push
call
mov
call
and
es
jmp
xchg
aaa
mov
pusha
push
movnti
add
cs
xchg
call
jno
push
mov
fist
pushf
sahf
sbb
call
sub
jg
sub
sahf
out
in
lock
aas
mov
jmp
lods
clc
pop
popf
stos
push
xchg
push
mov
(bad)
sti
aad
sar
mov
gs
bound
movs
or
fwait
jb
sub
das
pushf
jecxz
and
dec
in
addr16
js
mov
inc
mov
xchg
fdiv
(bad)
xlat
cmp
jecxz
movs
mov
sar
movs
js
in
adc
mov
test
fs
pmuludq
xor
test
retf
cmp
movs
cmp
inc
or
inc
pop
sub
mov
mov
xchg
mov
and
int3
adc
xchg
int3
fwait
out
bound
pushf
addr16
xor
xchg
leave
mov
int
test
dec
test
mov
out
aaa
(bad)
das
ffreep
jb
lock
test
xchg
scas
loope
mov
jns
ja
xor
dec
cmp
and
fcmovnb
xor
sahf
push
das
cmp
push
ret
xchg
fs
in
push
daa
ffree
xchg
scas
std
lods
pop
cmp
xchg
fs
or
inc
mov
bnd
fs
adc
cmp
fisttp
in
outs
cmps
ja
inc
jne
in
dec
ss
sub
adc
ret
pusha
sahf
lds
mov
mov
add
dec
outs
inc
xor
test
aas
jae
cmp
and
cmps
div
sub
mov
out
adc
inc
adc
cmps
popa
mov
aaa
cmp
imul
pop
icebp
ficomp
mov
or
jns
jne
xchg
lock
pusha
cdq
ss
ret
mov
(bad)
fild
ficomp
mov
add
jb
pop
xor
mov
rcl
or
mov
sub
out
or
(bad)
adc
mov
sub
mov
sbb
mov
jge
cdq
and
addr16
sub
jecxz
arpl
or
jae
pushf
push
out
inc
pop
rcr
dec
mov
mov
sub
jle
push
ins
and
mov
(bad)
or
retf
xor
mov
sbb
movs
ret
sub
fnstenv
inc
retf
jmp
adc
(bad)
xchg
and
test
inc
sbb
call
jecxz
xor
pushf
mov
xor
or
loopne
cmp
int3
stc
push
adc
lods
and
cs
mov
push
mov
dec
sahf
int
cmp
xor
pop
inc
fnstenv
push
jne
aas
and
(bad)
mov
out
loope
popa
lods
lock
in
dec
loopne
mov
add
or
push
or
push
fisttp
retf
fwait
cdq
push
or
push
jne
sbb
push
cmp
out
pop
and
push
xor
in
sub
icebp
mov
scas
leave
xchg
out
cdq
sub
cwde
mov
pop
(bad)
cmp
pop
mov
bnd
or
cld
mov
daa
loopne
push
popa
adc
sbb
movs
pop
jo
aaa
pop
push
ins
add
call
ins
ss
push
adc
pop
out
or
cld
push
sbb
xor
into
fdivr
or
nop
rol
sub
fidiv
popf
adc
xlat
mov
popa
std
test
outs
jno
mov
cli
adc
mov
xor
mov
neg
or
idiv
push
jae
jb
dec
test
sar
sub
gs
push
push
cli
aad
scas
and
shl
cmp
xor
pop
xor
(bad)
xchg
sub
movs
xchg
xchg
mov
dec
scas
retf
retf
js
test
pop
dec
or
mov
les
adc
xor
(bad)
leave
add
popa
push
adc
jnp
(bad)
lock
mov
sub
jnp
popa
lods
pop
jo
jmp
fwait
mov
mov
add
mov
mov
pop
mov
add
adc
dec
mov
aam
pop
inc
test
int
push
pusha
aas
push
mov
jl
push
xchg
test
lods
xchg
inc
(bad)
loope
inc
mov
adc
cmp
cmc
xchg
cmc
pop
jno
fidivr
test
add
stos
ror
pop
pop
cdq
cli
jmp
xchg
addr16
mov
popa
stc
fst
xchg
clc
outs
push
mov
push
sub
popf
ret
xchg
not
mov
repnz
mov
loopne
mov
mov
arpl
cmp
test
xchg
xor
rcr
mov
xchg
adc
in
mov
adc
bound
cmp
xchg
xchg
xor
imul
inc
(bad)
mov
jge
ja
inc
and
jo
sub
icebp
inc
xchg
jbe
mov
sahf
or
rol
leave
retf
stos
mov
jmp
mov
scas
ins
lea
repz
stc
mov
jecxz
sub
and
std
push
je
mov
inc
je
sub
add
and
call
imul
pop
stos
stos
inc
adc
std
xor
call
mov
movs
or
sahf
mov
sbb
test
and
mov
jmp
xchg
cmps
xor
sub
mov
adc
scas
adc
fstp
sti
dec
sub
pop
cdq
test
sahf
(bad)
ret
add
test
jbe
add
enter
xchg
mov
mov
mov
add
xchg
and
aad
sbb
loop
jg
cmps
hlt
mov
daa
jne
js
jae
push
jb
ror
jb
popf
cwde
aad
adc
imul
sub
fcmovbe
movs
int3
movs
sti
mov
pusha
std
mov
pop
data16
xchg
into
pop
mov
fwait
scas
sahf
sbb
sub
sub
push
data16
mov
adc
xchg
sar
inc
sbb
dec
hlt
in
sub
int
loop
ja
jmp
inc
dec
mov
mov
aas
call
mov
in
ficomp
mov
lods
cmps
enter
aam
add
retf
imul
hlt
xor
pop
loopne
inc
scas
stc
mov
into
jbe
fstp
adc
test
out
test
cmp
push
movs
push
cmp
cmp
clc
mov
(bad)
dec
jcxz
cmp
scas
cmp
out
popf
jge
test
test
or
and
fiadd
fst
fisubr
fidiv
jno
or
xchg
push
inc
mov
and
inc
lds
adc
inc
sbb
sub
adc
mov
jle
xchg
mov
adc
test
mov
and
fst
mov
into
push
ret
add
daa
add
loop
push
push
jno
pop
sti
shl
push
sar
inc
in
push
lahf
stos
jae
in
popf
fiadd
sub
sub
stc
in
sbb
stos
scas
add
and
sub
dec
mul
iret
cmp
pop
and
aad
sub
cdq
xchg
aaa
leave
cmp
pop
cdq
and
dec
nop
pop
cmp
sub
jae
arpl
ins
popa
ja
inc
pusha
daa
aaa
dec
mov
les
xchg
sub
jae
adc
loope
sub
mov
mov
(bad)
lods
sti
xor
push
jg
ficomp
push
mov
popf
xchg
js
out
popa
nop
pusha
pop
push
lock
push
xchg
daa
xchg
inc
adc
lahf
sub
push
cmps
fwait
ja
js
push
or
imul
(bad)
pop
es
push
mov
dec
mov
scas
or
cs
or
push
mov
sbb
(bad)
not
fadd
inc
in
in
or
mov
out
pop
imul
mov
cs
mov
lahf
add
pop
add
clc
pop
mov
jge
bound
repnz
aaa
fs
popa
scas
out
movs
mov
ins
mov
mov
es
dec
popf
cmp
pop
jno
leave
xor
or
cmp
stos
adc
xchg
adc
push
or
jg
test
leave
push
mov
shl
push
cmp
xchg
xor
jg
pop
scas
xchg
(bad)
cmps
dec
push
jns
int3
dec
ret
push
jb
mov
xor
in
call
(bad)
or
sbb
rcr
(bad)
fisub
jecxz
aam
dec
neg
shl
jo
pop
xchg
mov
enter
jp
pop
pop
pop
int3
sub
retf
cmps
aaa
clc
daa
js
pop
jnp
loope
cmp
add
xchg
in
out
xchg
cmp
mov
xchg
int
inc
les
cmps
leave
(bad)
out
inc
xor
or
sbb
in
in
test
sub
jg
inc
inc
in
mov
clc
mov
bound
outs
in
fwait
jmp
push
push
inc
(bad)
das
(bad)
mov
loopne
pop
dec
je
outs
(bad)
and
jp
loopne
nop
lods
in
scas
ret
loopne
jae
push
scas
fisub
cmp
xchg
xor
mov
pop
loope
or
mov
lahf
cmps
call
dec
lods
sub
jo
jle
clc
sbb
or
fs
js
cmp
jmp
mov
mov
add
adc
sub
jmp
mov
push
sub
inc
xchg
push
jge
out
lods
cmp
or
sahf
iret
shr
sbb
and
sbb
out
retf
push
inc
cmp
cmps
and
je
dec
(bad)
pop
mov
mov
pusha
jmp
mov
push
mov
in
cmp
lds
movs
dec
mov
add
je
stc
fs
pusha
xor
sub
int
(bad)
(bad)
add
cmp
lds
daa
outs
or
lahf
loope
lock
ds
inc
mov
dec
pop
clc
movs
outs
int
sti
jge
add
fbstp
mov
dec
and
jo
movs
cs
mov
jl
mov
push
pop
inc
call
or
sub
xor
stos
sub
out
sahf
mov
fwait
push
in
daa
inc
sbb
out
pop
das
jp
or
mov
dec
sbb
jecxz
outs
inc
sub
xor
mov
push
sub
sti
sbb
imul
and
jg
out
pop
mov
xor
push
stos
retf
jecxz
push
sub
pop
aad
push
and
xchg
hlt
jge
pop
sar
jmp
fadd
mov
jge
cmp
sbb
shr
mov
inc
das
(bad)
aam
imul
cmps
call
dec
jb
fidivr
das
push
dec
push
inc
lods
dec
ins
test
mov
sbb
mov
cli
sbb
shr
xor
mov
pop
jb
sbb
cmp
inc
fst
mov
fcom
in
push
out
cmp
dec
stc
in
mov
inc
in
popa
or
std
pop
cmp
mov
mov
retf
rcr
out
sub
cdq
inc
lock
xchg
test
jae
mov
retf
test
aad
add
lds
push
sbb
jge
jl
popa
int3
jecxz
(bad)
out
iret
mov
ret
repnz
iret
add
and
int3
rol
or
mov
gs
outs
pop
into
cmp
mov
aas
(bad)
jecxz
adc
movs
cmp
ins
dec
daa
int
into
xchg
xchg
pop
cli
jmp
rcr
sar
jg
jno
pushf
xchg
dec
adc
cmp
cmp
mov
mov
dec
and
aam
fwait
jp
adc
jns
mov
dec
jg
xchg
lods
enter
xor
xchg
dec
cmps
push
push
rol
xchg
mov
fwait
jg
mov
add
mov
mov
dec
lahf
sub
push
cwde
jmp
inc
fst
mov
xchg
or
arpl
and
sub
popf
icebp
push
sbb
add
adc
and
push
jns
lds
fmul
shl
outs
std
pop
jecxz
sub
xor
nop
cli
lds
pop
mov
(bad)
fimul
push
cmc
ja
and
push
inc
xchg
push
sub
push
outs
(bad)
sbb
adc
jge
test
cld
aam
in
in
push
sahf
std
stc
jmp
xor
cld
and
jno
sub
loopne
dec
into
stc
inc
adc
add
ret
(bad)
hlt
mov
shl
or
lahf
mov
(bad)
sti
sbb
and
mov
popf
jmp
leave
pop
push
xchg
xchg
and
mov
push
inc
jecxz
loope
pop
sbb
or
nop
dec
and
fs
cs
pop
test
sub
(bad)
dec
dec
sbb
sub
adc
imul
fsub
and
mov
push
rdpmc
adc
lahf
mov
pushf
xchg
aad
push
cmps
test
or
adc
sub
cmps
adc
cld
js
sbb
sbb
rol
inc
mov
bnd
(bad)
icebp
jne
push
jge
cmp
jg
inc
cdq
arpl
leave
popa
push
cld
xor
shr
outs
push
rol
addr16
pusha
jg
adc
mov
pop
sbb
aaa
adc
pop
jecxz
and
daa
and
ror
fwait
adc
push
stos
test
or
push
jno
xchg
xchg
xchg
push
fwait
fs
cmp
arpl
cli
in
or
push
fiadd
push
inc
jl
stos
pop
sub
fistp
aam
ficomp
jge
fldcw
ret
ror
hlt
xor
scas
pop
test
push
les
dec
pop
mov
mov
and
jmp
xor
xchg
pop
cmps
or
jb
jmp
test
outs
push
jl
mov
sbb
xor
ret
add
add
adc
xor
in
test
dec
xchg
sub
aad
push
sub
aam
dec
es
retf
into
mov
bound
test
xchg
pop
push
sub
xchg
sbb
icebp
test
pop
jae
bound
aad
imul
test
dec
out
dec
push
sbb
push
bound
sub
cmps
pushf
mov
xchg
push
retf
pusha
sbb
and
out
jb
movs
dec
imul
sbb
scas
pop
aaa
fidivr
int3
pop
jae
mov
gs
neg
jmp
mov
and
inc
xchg
outs
cmp
fs
mov
nop
jmp
xchg
test
std
mov
jg
sbb
xchg
outs
jb
inc
jge
xchg
pop
pop
add
cmc
nop
pop
jge
mov
mov
mov
mov
jmp
pop
outs
cs
div
outs
mov
xchg
shl
sbb
mov
push
jg
js
adc
mov
xchg
sbb
adc
popf
leave
int
xor
xor
inc
mov
dec
dec
push
mov
jmp
add
shl
jbe
int
push
cmp
cmp
(bad)
sub
stos
push
jne
adc
pop
dec
cmps
xchg
and
pop
bound
test
lods
out
mov
or
inc
jge
pop
outs
inc
xchg
and
mov
add
les
add
inc
retf
test
pop
out
xchg
or
in
sahf
dec
out
sub
sti
rol
(bad)
pop
add
fstp
leave
or
push
outs
ds
popa
jb
fwait
cmp
mov
cmp
push
add
xchg
sub
cmp
fwait
aaa
in
mov
(bad)
pop
sti
pop
stos
mov
inc
int3
jge
jmp
xchg
jae
lds
inc
jp
mov
mov
ret
push
cmp
sub
mov
clc
bound
adc
adc
out
cwde
aad
mov
das
repnz
in
punpckhbw
push
jmp
in
push
cmp
mov
les
lahf
test
mov
fwait
and
loop
retf
cmp
rcl
ins
push
rcl
mov
jo
aaa
xchg
jmp
outs
inc
adc
repz
mov
adc
mov
std
mov
mov
push
test
fiadd
sbb
and
and
adc
mov
xor
jno
inc
dec
mov
lods
sahf
retf
sbb
xor
fsub
jnp
test
push
ds
adc
fcom
jmp
xor
pop
(bad)
mov
pop
add
fst
test
call
mul
inc
cmps
fcomp
mov
cld
out
sar
mov
pop
or
jmp
mov
push
pop
sar
xor
lods
xchg
imul
call
test
sahf
dec
mov
mov
xlat
sbb
sti
popf
int3
jmp
push
es
(bad)
cmp
jno
iret
aaa
int
mov
rcl
nop
cmp
pop
int
jae
dec
inc
jo
les
ins
jp
xor
jbe
cmps
adc
cmp
push
jae
aas
call
jo
jb
std
mov
hlt
in
dec
mov
in
xchg
sub
popa
arpl
push
test
les
ret
std
pop
pop
jne
or
dec
jbe
mov
inc
xlat
aaa
xchg
in
out
call
xchg
pop
adc
dec
outs
dec
or
push
xor
sbb
xchg
dec
pop
out
jne
mov
jl
ss
imul
jno
and
xchg
inc
fadd
jno
(bad)
jo
and
adc
pusha
xor
xor
pop
jge
scas
mov
adc
cmp
sbb
dec
sbb
dec
xchg
xlat
leave
sub
push
sbb
mov
cdq
mov
cmp
mov
or
or
pop
dec
cmp
sub
movs
push
ficom
int3
fmul
jp
mov
mov
inc
cmp
popf
in
cmp
shl
mov
out
cmps
mov
or
in
mov
mov
mov
mov
jmp
add
sahf
sub
cmp
push
jp
test
mov
enter
cmp
adc
jp
xor
ja
data16
rcr
adc
sbb
jne
and
sub
mov
xor
fld
and
xor
push
out
push
jbe
jl
neg
push
pop
mov
je
stos
lahf
inc
icebp
xor
std
push
movs
mov
(bad)
repnz
mov
mul
cs
and
xor
fstp
xchg
push
mov
scas
movs
lds
sub
(bad)
jno
loop
jle
mov
je
lds
(bad)
ficom
push
lahf
call
mov
mul
inc
aam
mov
scas
pop
xchg
retf
retf
cmps
push
and
adc
dec
out
push
pop
cwde
cmps
popf
pop
lea
pusha
jecxz
mov
daa
in
dec
dec
pop
mov
jnp
addr16
es
rcl
dec
ins
(bad)
sar
jle
sar
test
stos
xchg
sub
mov
out
adc
inc
jbe
test
mov
mov
inc
iret
xchg
or
call
ror
mov
xchg
retf
push
adc
test
call
push
mov
imul
xor
dec
fnstenv
test
pop
in
push
xchg
fimul
dec
or
xchg
fidivr
add
mov
and
call
pop
add
fcmove
jge
mov
cli
and
pop
lock
sub
xor
sbb
rcr
jne
les
neg
mov
repz
dec
mov
pop
jmp
and
sbb
(bad)
out
fmul
jns
add
cmp
or
cdq
dec
xor
pop
push
lock
fist
mov
and
out
and
pop
pop
adc
sbb
dec
jg
cs
mov
nop
call
xchg
inc
ins
sub
add
mov
jo
gs
in
and
jl
pusha
mov
(bad)
xchg
sbb
lock
xlat
xchg
daa
fdivr
fnstsw
and
jmp
cli
xor
dec
sbb
js
cmps
cmc
xchg
xlat
mov
dec
push
imul
scas
push
(bad)
es
cmp
xchg
sbb
test
jnp
fdiv
sahf
pop
push
loope
mov
mov
mov
mov
hlt
and
jmp
icebp
pop
movs
dec
jae
mov
jae
adc
jbe
cmps
jo
xchg
cmps
pop
mov
push
cmp
in
inc
sbb
or
in
mov
ret
fwait
cwde
mov
pop
or
(bad)
pop
pop
jp
or
mov
fnstenv
sbb
xchg
retf
push
ss
jnp
adc
pop
xchg
lods
sbb
popf
sub
xchg
sub
and
xchg
idiv
mov
inc
es
movs
pop
rol
popa
fwait
daa
push
pushf
sub
or
lods
outs
popa
jno
ret
xchg
nop
jb
data16
and
aad
stc
aad
pop
int3
fs
cmp
repz
push
xlat
fist
add
inc
fadd
(bad)
jle
fisttp
sbb
out
sti
dec
inc
lods
cmps
jl
cmp
data16
popa
sahf
in
or
sub
dec
inc
mov
pop
xor
xchg
outs
ror
sbb
aam
inc
xchg
fldcw
sub
cmc
cmp
cmp
cmp
sar
jmp
ror
jecxz
int
mov
mov
xchg
mov
sbb
into
iret
mov
pop
movs
mov
jg
pushf
inc
and
mov
cmps
(bad)
jmp
mov
sbb
sbb
ss
push
out
xor
xor
sub
sub
push
(bad)
fs
adc
cdq
call
leave
sbb
out
scas
mov
je
lds
jns
int
mov
and
ret
mov
nop
mov
adc
xor
das
adc
popa
mov
adc
rcl
or
add
aas
sbb
ret
xchg
xor
je
bound
rcl
dec
ror
xor
push
pop
jg
mov
or
sub
jns
pop
mov
sbb
jo
push
adc
pop
das
add
pop
pop
retf
jns
cmp
loopne
loope
scas
cmp
call
lds
inc
xchg
scas
and
fst
out
pop
sbb
or
jl
popf
shl
sub
push
pop
jmp
mov
mov
sub
ins
mov
and
pusha
daa
xor
adc
out
push
and
movs
outs
rcr
lds
mov
jmp
es
sub
xchg
dec
bndstx
push
cld
clc
jae
push
pop
add
loop
or
adc
lods
push
(bad)
push
xchg
mov
pop
cmc
adc
clc
cs
mov
imul
sahf
movs
fadd
mov
xchg
add
fnsave
leave
shl
push
xchg
dec
retf
inc
(bad)
cmovb
enter
jnp
jge
daa
aad
add
outs
push
test
add
arpl
test
mov
ret
in
mov
aam
mov
jmp
sbb
sbb
inc
cmps
and
mov
pop
adc
push
repz
push
mov
inc
ja
push
push
xor
mov
div
mov
in
or
push
aaa
retf
sbb
fsubr
test
outs
ss
loope
lods
addr16
push
mov
inc
repnz
loop
movs
push
and
out
push
pop
mov
test
sbb
or
int
jecxz
fld
push
pusha
sub
pop
arpl
fcomp
(bad)
leave
mov
fs
lods
and
adc
push
mov
stos
test
std
pop
out
and
sbb
xchg
clc
sub
pop
rol
jae
sahf
popa
ins
hlt
cwde
out
ins
mov
pop
or
pop
je
inc
call
stc
push
daa
rcr
ja
inc
xor
ins
lds
jo
test
inc
daa
jns
jo
cwde
jne
sbb
dec
fstp
sub
and
out
sahf
pop
jmp
xor
call
loope
pop
bound
icebp
push
into
outs
outs
push
shl
mov
or
add
push
cmp
cmp
and
xchg
fwait
out
inc
mov
sbb
loopne
sub
xchg
inc
dec
sub
mov
pop
sub
pop
in
xchg
retf
sub
nop
pop
sub
(bad)
adc
call
mov
cli
sbb
ds
pop
and
jne
fld
ret
aad
mov
mov
retf
adc
sti
cmp
jae
icebp
les
inc
movs
stos
xor
call
sub
sub
adc
lds
xor
xchg
dec
sub
fs
in
cmp
sbb
inc
cmp
movs
inc
popf
cmp
(bad)
sub
data16
pushf
mov
retf
jae
cmp
xor
ds
add
jne
push
ror
mov
jns
iret
add
imul
dec
or
inc
xchg
les
icebp
(bad)
pop
mov
imul
into
(bad)
jns
movs
mov
jp
jmp
lods
and
mov
jl
cmc
xchg
(bad)
pop
int3
and
or
ds
fdiv
xor
dec
shl
jo
push
rcl
and
pop
dec
dec
cmp
in
xor
js
ficom
mov
out
xchg
push
ins
mov
arpl
mov
xor
mov
lea
out
xor
fmul
or
sub
mov
mov
mov
xor
cmp
ja
mov
pushf
pop
xchg
and
fdiv
pop
jge
cli
push
retf
jmp
dec
mov
mov
cmps
fnsave
jp
xchg
sub
jmp
or
add
sbb
push
jp
pusha
mov
xor
jns
inc
gs
rcl
rol
aaa
shr
aas
or
sub
xchg
into
ret
dec
jl
adc
sbb
ja
iret
dec
and
ss
out
retf
aaa
out
inc
movs
retf
cmp
or
enter
mov
bound
push
pop
fnsave
mov
neg
mov
mov
popa
aaa
pop
scas
cmp
inc
(bad)
std
mov
ss
jo
stos
test
sub
mov
inc
outs
pusha
dec
jne
xchg
pushf
pop
inc
push
jecxz
pop
call
pop
mov
mov
stos
cmp
xchg
in
out
sub
ja
cmp
add
mov
dec
stc
enter
aam
retf
jne
pop
cdq
dec
pop
out
push
jp
fld
push
adc
arpl
gs
pop
or
sub
out
ror
daa
shl
xor
test
ja
inc
movs
adc
sub
out
cmps
std
mov
mov
sub
add
cmp
lea
out
inc
fisttp
jb
ds
cmp
ret
in
ret
xlat
lahf
fs
sbb
ror
jns
icebp
sbb
add
pop
dec
rcl
stc
dec
lods
test
lds
shl
ret
cs
mov
cmc
and
mov
push
pop
inc
jae
test
js
xlat
out
pop
mov
push
es
test
loop
fst
sbb
inc
(bad)
and
pop
or
lds
mov
push
leave
dec
sub
mov
push
mov
mov
xor
push
je
sbb
add
sar
fwait
cmp
out
xchg
mov
cmp
ins
imul
cmp
(bad)
push
scas
stc
and
mov
xchg
mov
sub
sti
pop
jno
retf
sub
dec
dec
jno
adc
sahf
and
sub
adc
sahf
add
or
in
cmp
fwait
mov
enter
sub
mov
addr16
popa
cs
bound
imul
push
adc
hlt
mov
cld
jb
add
scas
mov
and
dec
inc
pop
ins
pop
adc
add
test
mov
pop
cmp
sub
push
test
les
iret
xchg
dec
mov
das
pop
add
mov
(bad)
dec
pop
mov
(bad)
dec
test
arpl
mov
mov
fld
pop
jecxz
adc
and
inc
inc
sbb
lods
scas
lahf
out
or
xor
adc
mov
retf
push
loope
shl
push
sub
sub
rcr
mov
test
ds
movs
sub
cmp
and
adc
and
xor
mov
push
xchg
and
jnp
inc
test
push
fild
dec
push
test
sar
js
rcr
hlt
pop
(bad)
pop
loope
test
ja
cli
stos
bswap
pop
and
daa
mov
ret
mov
das
push
enter
adc
mov
cmp
mov
pusha
mov
mov
mov
pop
adc
pop
add
js
xchg
and
loopne
or
sub
sbb
xor
sub
test
lods
mov
push
movs
mov
push
mov
(bad)
mov
call
mov
mov
idiv
pusha
adc
add
mov
cmps
gs
iret
jnp
retf
mov
cmps
jo
std
or
pushf
add
or
rol
jg
inc
xor
test
pop
xor
lds
mov
pop
cs
dec
mov
sub
(bad)
scas
sub
clc
add
or
mov
xor
nop
push
fadd
bndstx
xlat
mov
push
icebp
scas
push
mov
pop
or
xor
pop
out
sub
inc
mov
inc
pushf
mov
fsubr
jne
mov
bound
mov
mov
mov
shr
mov
mov
neg
add
(bad)
push
or
icebp
int
mov
push
add
repnz
ret
pop
call
pop
int
test
fldenv
inc
jae
jmp
retf
cmp
stos
cli
adc
cmp
mov
outs
add
xor
and
add
call
stos
gs
add
adc
adc
inc
sbb
pop
leave
mov
inc
aaa
push
(bad)
call
pop
xchg
lods
dec
cmp
or
(bad)
dec
out
fisttp
es
adc
retf
push
sbb
gs
js
iret
fcom
pop
test
jmp
mov
cmp
jmp
inc
aam
sbb
(bad)
in
scas
adc
or
mov
inc
imul
fst
retf
adc
ret
mov
or
pushf
loope
push
cmc
and
adc
cwde
sub
jns
(bad)
scas
imul
push
mov
xor
ja
bnd
paddusw
xchg
aas
call
mov
or
neg
mov
popa
mov
pop
push
mov
mov
shl
push
(bad)
scas
outs
cmp
jno
in
add
and
lock
adc
es
ror
inc
ror
mov
(bad)
in
aas
jns
sbb
or
call
lea
scas
cmp
stos
push
jg
mov
out
popa
xchg
jnp
sbb
inc
sub
jmp
inc
cli
mov
imul
loopne
sub
aaa
ins
sbb
sbb
push
imul
lahf
adc
inc
call
pop
(bad)
mov
xchg
xor
xor
(bad)
in
call
xchg
xchg
clc
sahf
mov
sbb
sti
pop
cmc
mov
jae
mov
in
movs
xchg
cmp
adc
jb
clc
leave
xor
cli
mov
mov
retf
vfrczss
xor
pop
iret
loope
ss
sbb
imul
inc
dec
and
lods
mov
push
mov
xor
(bad)
adc
int
shl
jg
sub
dec
out
adc
sti
push
mov
dec
ins
daa
cdq
xor
mov
fst
pop
enter
ror
or
jns
out
ja
pusha
cmps
push
mov
rol
imul
push
inc
or
add
sar
pop
fisubr
out
adc
shl
xlat
and
in
dec
fs
enter
aam
into
pop
and
pusha
je
jo
test
cmp
inc
and
aas
and
sbb
sahf
sub
fst
out
push
sbb
or
outs
cmp
arpl
jo
cmp
jmp
pop
fwait
mov
or
arpl
mov
sub
pop
sub
pusha
cmp
mov
sti
pop
scas
test
cmps
mov
cmps
shr
add
cdq
call
shl
mov
iret
je
add
repnz
les
dec
fisub
sbb
retf
cdq
sub
xlat
or
pop
es
jecxz
aaa
mov
rol
push
or
push
repz
jge
add
(bad)
leave
inc
ss
rcl
lea
out
lods
mov
lahf
and
or
adc
aad
jae
or
mov
(bad)
in
mov
sub
(bad)
push
sbb
jb
jne
mov
mov
mov
jecxz
sub
loop
arpl
cmc
or
pop
pop
mov
xor
jno
inc
in
std
aas
in
ror
sbb
jo
sbb
in
inc
dec
push
icebp
xor
std
call
ja
push
push
(bad)
cmp
mov
cmp
je
icebp
in
pop
and
mov
pop
gs
cmp
jb
movs
(bad)
call
rol
mov
ror
push
(bad)
jbe
xor
dec
(bad)
int3
cmps
inc
or
sub
mov
add
push
mov
lock
push
mov
das
cmp
outs
mov
jp
sub
cmps
cmp
ret
cld
mov
cdq
aam
and
push
inc
xor
pop
shl
adc
retf
pop
out
rol
int3
in
mov
fdivr
jnp
adc
in
les
push
(bad)
das
and
aaa
std
jo
push
(bad)
(bad)
bound
mov
cwde
xchg
test
mov
outs
in
aaa
stc
ret
push
xchg
jae
add
mov
repnz
jb
adc
dec
mov
in
shl
(bad)
stc
repnz
mov
inc
iret
cmps
mov
mov
xor
mov
rsm
jno
in
inc
push
push
or
jge
fld
call
leave
outs
mov
inc
or
aam
lods
rcl
dec
in
in
mov
jmp
add
or
jbe
jecxz
mov
(bad)
fidiv
mov
pop
mov
sub
mov
cmps
shl
out
stc
xchg
and
inc
xchg
nop
add
jbe
push
dec
adc
mov
les
dec
pop
jbe
dec
inc
adc
jnp
fcmovbe
or
int
inc
pop
mov
outs
mov
xchg
leave
rcr
xchg
pop
loopne
stc
ins
leave
mov
idiv
retf
fwait
lock
loope
fs
pop
xor
out
inc
jo
mov
xchg
adc
outs
mov
stos
sub
push
js
lea
or
into
stos
xchg
push
mov
xor
pop
cmp
fwait
dec
cmp
popa
js
add
(bad)
adc
movs
clc
xor
mov
jnp
pop
(bad)
pop
stc
call
mov
mov
(bad)
adc
add
pusha
test
dec
mov
hlt
adc
dec
cs
inc
(bad)
stc
sbb
neg
enter
pop
movs
neg
fsub
loope
jg
gs
sbb
mov
adc
not
mov
push
mov
fisttp
leave
clc
jne
fucomip
fwait
xor
aas
leave
ins
mov
sub
test
leave
pop
clc
repnz
xor
sbb
xchg
ror
outs
add
cmps
mov
dec
sbb
cmp
mov
in
sbb
cld
arpl
sti
cld
sub
mov
xor
lea
retf
pop
repnz
jb
sub
sbb
jmp
sbb
pop
rol
test
out
push
or
sub
and
imul
rcr
scas
idiv
pop
fbld
fndisi(8087
lock
jo
jne
movs
cli
mov
jne
je
mov
out
cmps
xchg
in
scas
mov
cmp
mul
inc
push
push
mov
xor
jg
dec
cdq
push
sti
cmp
xchg
add
jmp
jg
rol
or
cld
inc
jmp
sbb
xchg
pop
push
stos
and
in
out
dec
cmp
sub
or
push
(bad)
stos
and
call
popa
outs
jg
sti
jl
sub
dec
adc
or
test
xchg
dec
es
mov
sbb
and
mov
(bad)
pop
in
aaa
stos
mov
fdivr
fyl2x
mul
cdq
popf
mov
or
icebp
stos
loop
test
jns
add
shl
aad
mov
mov
(bad)
inc
test
out
fs
or
sub
fild
pushf
adc
lea
cmp
fld
dec
pusha
cmps
mov
and
xor
daa
enter
dec
mov
out
dec
dec
or
data16
test
jae
(bad)
imul
bound
add
add
not
into
sbb
and
sti
sub
repnz
std
sahf
inc
mov
add
arpl
loopne
inc
inc
sbb
sub
pop
js
nop
cmp
and
mov
icebp
shl
xchg
lea
sub
mov
cmp
cld
sub
aam
mov
cwde
xchg
fs
outs
pop
(bad)
cwde
es
push
mov
aam
sbb
and
inc
call
mov
stos
cmp
loopne
stc
pop
pushf
out
sbb
loop
mov
data16
out
movs
mov
dec
sti
mov
sbb
fmul
ficomp
addr16
outs
cmp
repnz
shr
mov
sub
stc
fstp
outs
cmps
sbb
xor
call
add
push
(bad)
xchg
xor
jbe
pushf
sub
popa
(bad)
ds
add
fdiv
push
ds
mov
jne
push
ins
inc
repnz
add
mov
xchg
and
cmp
iret
aam
mov
xor
add
ss
dec
push
and
pop
fsub
or
aaa
or
pop
push
jae
in
or
scas
mov
push
jmp
push
jg
and
out
cmp
pop
popf
mov
dec
sub
out
pop
mov
loopne
pop
clc
jnp
jb
std
dec
das
loopne
sbb
pusha
int
loope
in
push
imul
fidiv
sbb
scas
pusha
out
hlt
sbb
cmps
outs
outs
jae
loopne
add
lea
aaa
jecxz
inc
sti
jecxz
imul
aaa
ins
popf
cmp
pop
xchg
aas
push
ins
push
test
cmps
fisubr
cmps
clc
or
mov
inc
int
sti
loope
cli
mov
jge
jge
mov
test
popf
test
jo
loope
dec
pop
and
ins
sbb
push
inc
sti
aad
lea
push
in
mov
cdq
push
pop
push
imul
popf
push
push
nop
xor
lea
push
lds
cs
adc
inc
pop
sbb
pop
xchg
sbb
fcmovu
das
adc
push
jg
adc
leave
inc
in
push
mov
sar
repz
outs
pop
or
and
imul
jne
xchg
or
rcr
dec
fwait
xchg
in
ud2
fsubr
sbb
push
dec
je
mov
xor
mov
les
sub
mov
dec
push
mov
mov
test
call
sub
jmp
cmc
in
mov
ins
xchg
aas
movs
and
clc
or
inc
outs
jmp
xor
add
mov
jmp
xor
iret
add
and
add
adc
pop
pop
add
js
sub
pop
loop
push
into
cmp
je
jae
inc
xchg
and
dec
xchg
push
mov
imul
into
jnp
and
mov
pop
push
sbb
(bad)
out
rcr
(bad)
cli
lock
or
xchg
scas
mov
inc
xchg
mov
add
mov
in
jb
out
sar
or
call
in
cmp
popf
popf
pop
and
(bad)
cld
cld
ins
mov
dec
shr
dec
adc
push
shl
push
push
xlat
xor
jne
dec
sbb
cmp
dec
sub
and
fisttp
adc
cli
mov
xor
sub
aam
cmp
dec
shr
sub
stos
push
sti
mov
into
fist
mov
pop
sub
dec
push
fstp
iret
fmul
jle
add
cld
sbb
dec
scas
fcom
test
(bad)
ins
mov
push
mov
movntps
push
cmps
dec
mov
mov
sub
inc
and
add
sbb
mov
push
pop
aad
arpl
xchg
sub
int
lahf
addr16
or
mov
push
loope
mov
rcl
bound
movsx
cmps
ss
outs
add
repz
jle
outs
xor
in
pop
ss
(bad)
pop
retf
fxch
pop
jecxz
das
call
add
movs
sahf
sub
push
add
adc
sub
add
jnp
sub
and
add
sbb
stc
mov
aaa
sahf
mov
in
mov
push
push
or
aaa
sbb
jg
(bad)
pop
xchg
add
jp
fwait
sbb
add
mov
jbe
sbb
daa
mov
xchg
mov
or
pop
dec
inc
(bad)
push
and
das
scas
std
adc
and
mov
add
jmp
es
popa
mov
and
retf
ret
dec
xor
mov
xchg
mov
sub
dec
addr16
(bad)
aad
imul
int3
push
shr
sub
fiadd
fst
(bad)
sahf
push
dec
adc
movs
mov
xor
scas
ds
pop
push
shl
push
ins
test
aas
enter
sub
ja
scas
ret
imul
aas
and
push
int3
rcr
xchg
dec
xchg
push
scas
mov
jnp
cmp
outs
mov
inc
out
movs
rol
and
xchg
adc
jns
and
mov
js
adc
xchg
xchg
xchg
xchg
clc
push
pusha
out
cmps
imul
pop
cmovo
dec
mov
(bad)
lea
or
cmp
inc
jp
bound
or
(bad)
xchg
lods
rcl
pop
add
(bad)
cmp
inc
sahf
mov
or
das
aas
cwde
mov
sub
inc
ins
add
jmp
(bad)
imul
mov
pop
mov
fidiv
or
lods
sldt
add
mov
nop
icebp
jle
out
xchg
and
push
xor
ret
out
iret
adc
les
jmp
lea
ret
outs
adc
xor
sub
shl
and
retf
mov
fild
cmp
ins
or
popa
in
push
sub
aaa
aaa
out
mov
iret
ja
pop
call
pushf
xor
jne
sti
popf
cwde
mov
cmp
push
int3
ss
popa
fidivr
lds
adc
pop
mov
or
mov
add
js
and
stos
pop
in
pusha
mov
outs
(bad)
adc
and
(bad)
jo
mov
pusha
cmp
cmc
out
inc
mov
cmp
pop
clc
jp
nop
(bad)
mov
xchg
aaa
jb
aad
push
inc
not
xchg
out
idiv
stos
mov
mov
iret
stos
out
aaa
adc
xchg
push
inc
loopne
inc
test
cmp
cmp
ret
and
inc
mov
mov
dec
popa
sbb
mov
mov
sub
pop
jo
pop
cmp
sbb
mov
out
mov
lahf
mov
and
jns
sahf
inc
js
cli
or
lods
outs
xor
sub
mov
movs
push
fwait
icebp
(bad)
sar
adc
sbb
push
adc
aam
cmp
movs
inc
pop
enter
lds
in
(bad)
push
pop
mov
out
les
pop
push
(bad)
loop
das
sub
push
xchg
mov
repz
imul
pop
adc
test
in
mov
add
add
lock
pop
stos
xchg
pop
xchg
inc
adc
inc
mov
jge
pop
mov
cdq
push
cmp
dec
in
dec
mov
mov
outs
xchg
sub
daa
loopne
data16
mov
mov
mov
in
sti
push
loop
jae
cld
adc
and
push
lock
jbe
xchg
mov
(bad)
mov
rcl
mov
adc
jb
xor
imul
fldenv
lods
xchg
call
pop
std
inc
sub
xchg
arpl
imul
repz
iret
mov
repnz
out
nop
jb
mov
add
inc
scas
adc
fild
aaa
xor
fs
imul
jo
cmp
mov
repnz
push
mov
mov
cdq
pop
or
and
mov
add
stos
or
sub
out
and
or
xchg
jne
push
stos
sub
add
xchg
(bad)
(bad)
jmp
cli
mov
push
iret
ja
mov
jnp
pop
add
jmp
mov
jo
push
cmp
xor
mov
call
into
sbb
adc
jne
paddd
pop
mov
pusha
aas
fwait
shl
outs
pop
mov
jne
jl
pop
rcl
outs
imul
js
popa
push
dec
dec
sbb
bound
pushf
mov
imul
fsub
ret
fs
xchg
pop
cmps
dec
mov
or
and
xor
cmp
fist
jne
push
and
cmp
pop
mov
fisttp
and
add
(bad)
or
inc
xlat
inc
and
or
movs
js
paddb
pop
cmps
jp
xchg
push
xor
bound
pop
inc
xchg
in
or
fistp
popf
bound
xchg
test
pop
mov
test
lods
xor
adc
xchg
out
adc
xor
mov
xchg
lods
outs
loopne
lods
rcr
je
shl
fucomp
std
stc
test
fcmovne
push
scas
int3
sub
popa
push
and
aam
sti
jg
push
and
mov
js
jb
fidivr
shl
dec
sub
sub
adc
stc
mov
mov
and
pop
movs
shr
retf
ficomp
loopne
or
fmul
mov
test
rcl
pop
push
dec
xchg
das
jmp
xchg
scas
add
retf
or
mov
adc
ret
sub
jmp
mov
pop
sbb
shl
jl
xlat
scas
jmp
mov
or
cmp
xchg
adc
jbe
add
repnz
jge
gs
push
jo
jge
int
mov
push
mov
adc
dec
mov
xor
mov
leave
sub
mov
aas
les
ja
cmp
mov
test
mov
call
imul
adc
mov
in
repnz
outs
cmp
icebp
and
jecxz
or
xor
out
mov
outs
(bad)
in
jle
out
cmc
xchg
aam
or
je
clc
cli
not
dec
int
bound
sub
dec
mov
gs
sbb
fcomi
push
pusha
ss
dec
(bad)
lds
pop
(bad)
(bad)
mov
aad
(bad)
jbe
push
outs
pop
les
xchg
adc
pop
test
cmp
out
xor
(bad)
push
addr16
push
stc
data16
lods
add
or
pop
adc
or
dec
mov
xchg
sub
mul
mov
xor
xor
fst
xor
or
fcmove
jno
jecxz
test
test
mov
inc
xchg
btc
mov
daa
add
xchg
and
ins
xchg
enter
(bad)
inc
cli
pusha
rol
bound
mov
out
adc
int3
jne
and
adc
push
inc
xor
jmp
mov
mov
loop
cmps
out
inc
push
out
sub
and
out
ftst
dec
daa
mov
shl
fcmovne
int
fisttp
pop
vpcomb
pop
int3
(bad)
jne
jp
pop
inc
mov
dec
push
imul
dec
scas
mov
(bad)
xchg
ficom
test
mov
pop
xor
mov
(bad)
movs
cmp
sbb
imul
retf
std
clc
adc
outs
shl
hlt
mov
inc
pusha
jp
add
dec
js
mov
repz
lahf
das
mov
add
push
push
adc
add
into
scas
inc
add
xor
out
ss
jecxz
inc
jno
aaa
dec
push
push
std
sub
cmp
mov
and
cmp
pop
pop
inc
xor
ja
and
aaa
xchg
sar
or
mov
or
arpl
mov
xor
xlat
and
xchg
xor
or
test
jo
ret
lea
test
test
adc
ret
inc
in
in
imul
sbb
or
rcr
cmp
(bad)
sub
(bad)
retf
or
popf
into
out
dec
and
sar
pop
mov
jo
xor
jo
sbb
lds
xchg
sub
mov
(bad)
cmc
pop
shr
sub
out
shl
add
dec
push
push
xchg
iret
inc
xchg
fcmovne
scas
loopne
loopne
in
fldcw
cdq
mov
cmp
add
ret
push
and
scas
cld
mov
push
push
push
push
mov
xchg
dec
setbe
jp
daa
stos
and
ror
dec
and
leave
or
scas
js
imul
xchg
rol
push
int
sub
pop
stc
jno
fwait
sbb
sbb
dec
aad
mov
mov
pop
mov
mov
jmp
loop
das
cbw
fsubr
and
jo
adc
leave
push
jne
pop
or
mov
fdiv
dec
cmp
call
fdiv
dec
pop
pop
mov
jg
adc
inc
fbstp
jge
fldenv
add
sbb
fwait
dec
fldenv
shr
stos
push
mov
adc
pop
and
mov
and
sub
inc
xchg
les
jb
cmp
in
jle
jmp
test
xchg
aad
(bad)
and
adc
sub
cmp
das
cmps
neg
lahf
pop
(bad)
push
aad
mov
arpl
sub
cmp
dec
in
push
pop
xchg
sub
fs
sar
or
sub
call
std
ja
add
ja
xchg
mov
ins
jle
xor
fs
stc
mov
in
sub
mov
pop
sub
pop
push
dec
xchg
jbe
ja
out
dec
(bad)
push
out
test
xor
xchg
jne
cmp
sar
outs
in
adc
fldenv
xchg
mov
push
fild
stc
mov
into
xchg
stos
add
jns
cmps
lock
dec
(bad)
(bad)
pushf
sub
out
dec
jecxz
sub
and
xchg
lds
hlt
pushf
jmp
clc
fild
bound
stc
pushw
rcr
jge
adc
shl
cmp
xchg
pop
jbe
ds
sub
icebp
xor
mov
sbb
xor
call
fnstsw
(bad)
imul
cmp
fcmovnu
or
jnp
les
push
push
and
rcr
ret
dec
in
xlat
mov
sub
xlat
mov
shr
cmps
popa
loop
rcr
mov
dec
cli
jne
stos
dec
call
leave
das
jp
sbb
sbb
scas
ins
stos
and
sahf
in
mov
lea
inc
imul
mov
iret
enter
pop
and
mov
aad
outs
iret
xchg
mov
pusha
lds
inc
pop
sbb
fs
pop
fcomp
fist
cdq
pop
add
fiadd
lahf
mov
push
jmp
and
shl
rol
movs
xor
mov
jle
mov
jg
repz
add
dec
repnz
ss
sti
lahf
ficom
add
cld
push
add
jle
shl
div
mov
xchg
in
mov
xchg
sbb
lock
arpl
mov
dec
mov
xor
sti
clc
ror
and
les
push
popf
jno
xchg
fidiv
xor
out
xchg
data16
int3
pusha
test
cld
neg
xor
add
push
mul
(bad)
lock
in
sbb
cdq
fidivr
pop
pop
xchg
mov
mov
outs
repnz
in
stos
rcr
out
ins
dec
mov
mov
mov
add
or
fld
fwait
jb
lahf
add
add
cmp
adc
stos
in
aas
hlt
adc
mov
lahf
leave
repz
jae
adc
cdq
and
(bad)
loop
ins
xor
sub
mov
out
push
xchg
shl
idiv
push
jo
xor
ins
push
int
lahf
test
jmp
inc
das
scas
push
xchg
pusha
jns
fistp
fistp
ins
cmp
add
shl
test
ret
mov
scas
xchg
sti
inc
adc
out
fidivr
in
inc
xor
(bad)
sbb
pop
out
or
ins
repnz
data16
test
fwait
idiv
cwde
pop
std
mov
xchg
int
es
out
(bad)
push
cmp
inc
mov
mov
push
or
mov
mov
inc
(bad)
jg
movs
xchg
mov
adc
mov
sub
sbb
retf
xor
push
adc
(bad)
addr16
inc
sbb
es
inc
inc
xor
sub
or
out
and
jl
jno
sbb
jno
fs
xchg
retf
test
mov
cli
rcr
mov
cdq
cmps
jmp
pop
fsub
and
sbb
sbb
jb
or
mov
mov
adc
dec
aaa
frstor
or
cmps
sar
sbb
scas
gs
pop
ds
pop
dec
dec
repz
das
cdq
cmp
sahf
add
xchg
push
xchg
xor
pop
jnp
sbb
pop
lea
adc
xor
fiadd
paddb
test
into
jno
jae
fsub
sbb
stos
sti
fcomp
pop
retf
aam
jbe
and
cdq
stos
dec
mov
out
xchg
pushf
jmp
jl
popf
inc
imul
or
adc
sbb
shr
fiadd
imul
fcom
or
test
stos
pop
and
dec
sbb
and
fbld
lahf
lock
mov
or
cmp
pop
adc
cmp
sbb
leave
mov
mov
inc
stc
bound
pop
jl
and
cmps
pop
sub
cmp
and
mov
mov
movs
mov
pop
or
mov
in
jns
xchg
addr16
repnz
adc
aad
stc
fldcw
and
ror
inc
inc
cmc
push
mov
mov
sbb
and
cli
dec
and
mov
(bad)
scas
icebp
hlt
jecxz
repz
icebp
mov
inc
jl
outs
jp
imul
mov
mov
push
iret
dec
cld
test
cli
ss
bound
xchg
and
out
cmps
call
mov
ss
push
add
arpl
addr16
fdivp
test
or
ss
jo
out
adc
cwde
sbb
repnz
sti
xchg
jb
test
std
out
outs
stos
dec
ficom
cwde
aam
push
cmps
adc
repnz
scas
pop
loop
lods
in
test
jmp
sbb
int3
paddsw
aad
and
in
dec
loop
mov
mov
inc
test
mov
outs
iret
sub
int
int3
sbb
mov
and
or
or
in
ins
mov
addr16
push
fnsave
mov
dec
scas
mov
mov
pop
inc
outs
fwait
xor
sub
dec
sahf
inc
imul
cmp
dec
les
lea
mov
and
fisttp
jle
(bad)
mov
mov
das
push
xchg
sbb
sbb
push
xchg
mov
es
jae
ror
cmps
outs
rcr
or
ss
outs
sub
push
sub
jp
inc
add
imul
pop
data16
sub
mov
mov
jbe
add
mov
out
dec
cmc
ret
lahf
les
push
out
ss
mov
popf
mov
call
cmp
lods
xor
seto
cdq
shr
aaa
push
rol
push
adc
(bad)
jnp
dec
add
adc
xchg
inc
in
dec
movs
cmp
addr16
ds
xchg
mov
scas
mov
inc
imul
mov
sub
inc
adc
fnstcw
sbb
hlt
jmp
or
mov
pop
loopne
in
mov
mov
arpl
mov
jne
leave
das
test
adc
out
sbb
xor
adc
xor
sti
jecxz
mov
adc
(bad)
xchg
int
dec
jecxz
fadd
push
push
jge
scas
je
stos
gs
js
je
xchg
outs
cmp
movs
(bad)
dec
in
(bad)
push
ja
cld
not
(bad)
mov
mov
xchg
in
into
or
movs
(bad)
or
add
cmp
retf
fcomp
adc
fild
push
scas
ins
mov
push
test
jle
xor
test
mov
and
sahf
lahf
adc
fmul
pop
aam
mov
stos
pop
jmp
icebp
adc
sub
mov
adc
aad
(bad)
and
test
call
(bad)
gs
int3
pop
jg
call
lods
(bad)
mov
shl
dec
or
sbb
dec
test
pop
das
dec
(bad)
out
mov
add
push
imul
je
sbb
jnp
(bad)
push
pusha
fcom
in
push
jae
stos
inc
push
push
cmp
out
int
mov
xchg
test
sbb
pop
loope
jecxz
cli
cmp
push
pop
fwait
dec
pushf
mov
je
fwait
mov
js
in
in
aad
in
imul
sbb
cli
loop
(bad)
in
int
rcl
ins
cmp
and
nop
mov
jnp
shl
cmp
push
pop
retf
(bad)
jmp
push
dec
and
sub
pop
hlt
push
les
imul
mov
jg
arpl
ror
inc
scas
call
pop
test
(bad)
cmc
adc
xor
xchg
inc
pop
mov
call
aaa
gs
push
mov
jae
fwait
out
loop
or
mov
movs
push
and
and
scas
adc
std
outs
aad
fadd
xor
dec
(bad)
sbb
sbb
sbb
inc
neg
pop
xchg
les
inc
mov
iret
rcr
jb
cmc
xlat
jne
std
ins
dec
add
xchg
xchg
js
bound
xor
repnz
and
pushf
adc
scas
mov
std
push
cmp
cld
js
push
leave
cmp
sub
std
loop
adc
jo
ret
xor
aaa
mov
mov
test
push
(bad)
mov
cmc
fadd
das
inc
fprem1
(bad)
popa
and
sub
test
popf
shl
hlt
retf
and
or
test
(bad)
mov
hlt
pop
frstor
cli
jb
xchg
pop
xchg
jns
rol
and
push
iret
int
sub
xchg
push
aad
data16
sbb
xor
add
(bad)
fnstsw
pop
fisttp
push
fsubr
fisttp
push
fstp
shl
pop
pop
jns
repnz
or
xchg
mov
cmp
cmc
test
pusha
xchg
inc
mov
hlt
pop
adc
clc
xchg
and
mov
fcmovnu
lock
sub
cli
inc
mov
sahf
or
into
or
push
data16
lods
sbb
xchg
in
mov
bnd
pop
or
add
psraw
jae
xchg
jge
xor
mov
mov
jecxz
pushf
(bad)
rcr
sti
fistp
dec
mov
fistp
lock
mov
dec
fmul
rol
imul
mov
inc
jnp
mov
xchg
fbld
push
gs
mov
pusha
adc
ret
dec
mov
push
pop
shr
sub
pop
pusha
mov
mov
dec
icebp
lea
xchg
out
add
fnsave
arpl
jmp
nop
mov
out
sbb
mov
sub
(bad)
jge
imul
imul
mov
push
(bad)
and
push
or
cmp
add
shl
pop
fwait
in
add
pop
js
xchg
xor
xor
lahf
mul
adc
or
ss
fist
int3
scas
int
repz
(bad)
fwait
push
mov
push
dec
sbb
cmp
pop
mov
sbb
std
imul
ds
mov
test
push
lahf
mov
sub
imul
cmps
xchg
stc
push
and
jno
jl
cmp
xchg
cmp
fdiv
add
mov
inc
loop
in
fild
in
inc
jne
std
std
jb
sbb
loop
push
shl
mov
enter
aad
stc
cdq
inc
jno
sbb
stos
pop
call
icebp
lock
or
jnp
sahf
pop
shl
adc
cmp
sbb
pop
test
xor
mov
clc
mov
test
push
lock
and
retf
pop
push
out
stc
sti
lods
aam
(bad)
ss
inc
mov
mov
ins
je
and
and
mov
into
mov
outs
in
lods
inc
jp
outs
mov
xor
adc
daa
shr
mov
dec
mov
xchg
clc
mov
repz
xchg
add
jecxz
and
sbb
add
sbb
out
cli
cmp
cld
ja
in
call
mov
xlat
ss
jge
pop
js
adc
xor
dec
fisubr
jae
mov
enter
adc
mov
icebp
cmps
jecxz
leave
test
fst
retf
ror
and
shr
clc
das
outs
add
movs
lds
pusha
aad
adc
xchg
push
add
inc
call
sub
in
and
xor
les
or
sti
popf
mov
int3
xor
pushf
push
inc
mov
std
xchg
rcr
adc
sahf
out
push
cmc
pop
(bad)
loop
dec
inc
pop
cmp
sbb
mov
and
stc
adc
xor
cmps
xor
(bad)
fiadd
sbb
ficom
icebp
mov
clc
inc
gs
lods
and
push
push
xchg
add
fnstenv
in
jecxz
or
push
clc
fmul
lods
call
push
jp
shl
(bad)
arpl
dec
inc
int3
and
sbb
xlat
mov
inc
in
push
ret
jno
xchg
pop
xchg
imul
jp
push
inc
clc
sahf
call
idiv
mov
out
dec
sbb
jl
fcomp
sbb
cmp
out
mov
icebp
out
jg
sti
mov
lods
xchg
fiadd
int
imul
not
lea
xor
outs
lods
mov
cmp
push
inc
pop
push
cli
pop
mov
xor
cli
inc
xchg
lods
or
jne
mov
outs
das
sar
mov
push
dec
or
lods
lea
cmp
test
jno
sub
mov
add
or
mov
ret
cs
test
jle
dec
cmps
pop
test
mov
sub
pusha
dec
or
(bad)
into
stos
sub
push
rcl
sbb
jl
pop
ins
popf
loop
pushf
or
daa
bound
push
ficomp
addr16
test
add
pop
ror
gs
jmp
adc
arpl
icebp
cli
pop
ja
(bad)
pop
xor
(bad)
icebp
or
adc
jae
sub
mov
add
mov
enter
fld
cdq
xchg
xor
sbb
inc
or
xchg
xchg
mov
inc
push
and
jg
dec
cmp
rcr
int
mov
in
mov
loopne
add
(bad)
mov
lock
jmp
sub
push
pop
hlt
push
mov
or
jg
sbb
pop
cmp
in
push
out
popa
mov
rol
push
jns
jle
sbb
or
lock
xor
hlt
mov
out
mov
scas
hlt
icebp
mov
ins
mov
pop
jp
aam
xchg
test
xchg
call
mov
dec
arpl
adc
lds
out
scas
movs
dec
sub
(bad)
stc
or
mov
add
sbb
mov
repz
cmp
and
pushf
stos
xchg
pop
fwait
retf
mov
call
jle
aaa
lds
movs
test
mov
rcr
sub
sub
or
cmc
pushf
iret
sbb
(bad)
mov
mov
push
fldcw
aad
push
xor
cs
cmp
xor
xor
scas
push
mov
or
adc
xchg
push
cwde
and
jp
cmps
gs
std
out
(bad)
jnp
add
or
idiv
push
pop
hlt
adc
test
inc
popa
or
xchg
retf
loop
stos
lods
pop
pop
int3
push
and
jnp
fld
push
xchg
or
fdiv
push
dec
push
dec
adc
adc
ret
push
add
cmps
std
cwde
jle
test
mov
sahf
test
push
xchg
scas
shr
pop
jle
mov
out
je
mov
mov
sub
popa
pushf
jle
movs
push
scas
push
lds
adc
jge
dec
stc
data16
push
enter
loope
popa
push
aas
lods
xlat
xor
inc
and
fdivr
stos
jne
out
test
popa
in
fild
ins
jo
mov
fisttp
ret
mov
mov
aaa
mov
jno
call
sub
ss
rol
inc
(bad)
(bad)
or
xchg
mov
xor
repnz
push
lods
cmp
data16
xor
xor
loope
out
and
cmp
jne
sbb
mov
mov
cmps
cmp
add
jne
cmp
pop
cs
out
popa
adc
sbb
jnp
or
in
xchg
mov
mov
xor
(bad)
addr16
jl
cmp
(bad)
cmp
outs
sar
fist
test
popf
or
jmp
sub
nop
outs
cld
mov
cwde
mov
push
dec
retf
stos
scas
fsubr
fadd
push
mov
push
xchg
enter
xchg
and
rcl
mov
inc
jmp
js
mov
shl
aad
mov
inc
les
aam
bound
push
fwait
aam
dec
add
sbb
jae
pop
inc
(bad)
push
dec
adc
test
or
adc
mov
icebp
sbb
mov
and
push
add
adc
int3
test
stos
fs
retf
push
mov
or
xor
lds
mov
loop
fild
lds
pop
jl
jg
int3
adc
mov
pop
and
stos
mov
or
jp
loope
out
sbb
cmp
(bad)
in
jae
xchg
popf
adc
add
out
mov
xrelease
dec
dec
sbb
inc
test
ins
jecxz
int
add
jnp
xchg
inc
out
push
scas
add
sti
out
jno
jp
int
sbb
notrack
inc
lods
and
jmp
popa
sbb
sahf
inc
les
cmp
(bad)
adc
pushf
fwait
lahf
rcr
xchg
xchg
mov
pop
in
jecxz
hlt
xchg
jl
je
cmps
out
mov
leave
sbb
(bad)
sbb
call
lods
pusha
mov
push
das
test
lods
push
pop
mov
jl
data16
push
jg
sub
add
stc
aaa
xor
inc
fucompp
sbb
jle
repz
adc
mov
cmp
xor
movs
stc
and
mov
add
outs
pop
stos
daa
adc
jnp
dec
or
mov
xchg
xchg
pop
adc
sub
xchg
push
std
aas
push
imul
ds
xchg
jns
add
jns
loopne
or
add
sub
outs
daa
and
dec
(bad)
pop
or
xlat
or
adc
adc
(bad)
mov
nop
outs
mov
mov
pop
jns
movs
mov
or
and
popa
mov
and
cmp
movs
ret
mov
retf
mov
jb
sahf
test
rcl
dec
shl
mov
nop
xchg
into
xor
das
in
ret
jae
sbb
adc
aas
aas
rol
jle
jle
pop
(bad)
in
adc
add
fs
push
clc
ror
bound
jecxz
int3
sahf
ins
sbb
test
in
aad
xchg
ds
fidivr
add
shl
push
add
loope
mov
sub
outs
call
stos
(bad)
mov
jae
sub
jl
stos
jnp
call
cmp
adc
mov
inc
or
lds
mov
mov
pop
test
imul
icebp
arpl
xchg
jl
push
sbb
(bad)
imul
mov
lahf
ret
xor
aas
cmp
sub
cmp
mov
popa
std
xlat
xchg
(bad)
mov
cmp
xor
jo
jle
mov
fist
cmps
sbb
nop
adc
inc
retf
xor
scas
pusha
test
lea
cmp
leave
imul
pop
mov
aaa
and
enter
std
mov
push
sti
rol
xchg
xchg
inc
(bad)
jo
popf
ins
inc
jbe
call
cmps
jbe
mov
mov
fcom
inc
and
xlat
fsubr
mov
ret
loope
pop
adc
push
nop
jmp
js
cwde
xchg
mov
cmp
push
push
jp
ds
add
adc
loop
adc
jo
sbb
push
fcomp
mov
dec
je
out
scas
fst
mov
sub
pusha
jp
enter
pop
mov
pop
pop
adc
imul
mov
sbb
je
xlat
fwait
inc
cmp
xchg
xor
jae
pop
sbb
xchg
inc
in
or
std
sub
fsub
lods
jns
repnz
lock
out
(bad)
mov
jecxz
xchg
out
frstor
mov
pop
push
xor
add
xor
js
inc
jp
in
dec
(bad)
loop
movsx
xchg
xor
sbb
in
dec
pop
loop
xchg
das
adc
popf
out
imul
mov
dec
sub
sub
movs
outs
repnz
loopne
mov
dec
dec
dec
test
mov
xchg
mov
pop
test
push
and
lods
mov
or
loope
xchg
(bad)
scas
mov
js
jno
sbb
jl
rol
xchg
(bad)
jl
dec
jecxz
cld
push
add
lods
out
bound
jne
mov
xor
pop
hlt
adc
fucompp
mov
aas
cmp
mov
repnz
jmp
(bad)
aaa
jnp
jecxz
mov
ret
dec
clc
mov
or
xchg
xor
or
test
push
cmps
pop
(bad)
in
push
dec
std
outs
xchg
jne
lods
lahf
stc
or
pop
adc
and
or
add
inc
pop
lahf
fdiv
push
sub
out
dec
movs
nop
and
or
les
out
add
mov
push
jnp
or
jae
pop
and
inc
pop
pop
bound
cwde
ret
adc
enter
pop
fs
mov
aaa
xor
dec
sbb
jne
cwde
scas
xchg
ins
xor
imul
call
add
jmp
movs
jae
ins
fwait
push
adc
iret
stc
sub
scas
div
lahf
repnz
in
adc
loop
push
sub
push
xor
sub
(bad)
sub
dec
mov
or
ins
jbe
ror
outs
fldcw
push
xchg
pop
pop
fcom
cmp
iret
cld
add
mov
lods
test
std
xchg
or
cmp
gs
mov
inc
scas
mov
das
fdivr
push
in
test
xor
cdq
cmp
pop
xor
fadd
lods
push
idiv
out
and
in
ret
add
repnz
retf
mov
xchg
popa
jns
je
fs
call
inc
add
aad
(bad)
jp
aad
in
daa
and
rol
(bad)
call
dec
js
mov
cmc
xor
add
jmp
ret
hlt
jne
or
sub
jmp
mov
xor
jle
xchg
(bad)
jge
arpl
(bad)
or
hlt
push
js
add
fnstenv
jmp
arpl
loopne
xchg
inc
pop
mov
jo
ret
leave
fsub
pop
cmp
cwde
pop
ins
retf
xchg
outs
lods
ins
out
xor
mov
pushf
enter
push
pop
jmp
sub
cmp
stos
popa
enter
push
in
mov
add
nop
mov
mov
in
aas
int3
xchg
add
pop
xchg
jg
inc
inc
out
scas
in
pop
fsubr
jecxz
sbb
scas
retf
jnp
dec
(bad)
iret
leave
in
cmps
push
cs
adc
lea
dec
add
xchg
aam
and
sahf
std
pop
xchg
fxch
jle
daa
add
test
jle
lahf
mov
or
cdq
cmp
shl
(bad)
add
rol
ins
gs
push
push
mov
out
cmc
imul
cmp
ds
test
loop
int3
cmp
add
(bad)
and
cmp
cmp
shl
out
mov
fwait
cmp
daa
mov
data16
cwde
imul
push
arpl
inc
cli
std
shr
sbb
(bad)
mov
inc
jp
lods
sar
(bad)
int
jns
std
lods
popf
neg
fdiv
sub
outs
stos
dec
inc
xchg
sub
or
and
jge
imul
imul
mov
sbb
(bad)
out
sub
ins
in
lods
mov
not
xor
xor
fcmovnbe
push
jae
stos
jmp
push
or
pop
pop
aas
imul
in
(bad)
jg
into
arpl
fld
jmp
adc
daa
mov
ins
mov
push
xor
sub
cmp
pop
push
add
(bad)
xchg
leave
loopne
sbb
test
jae
arpl
or
xor
add
hlt
xor
xor
iret
mov
jge
mov
rol
mov
sub
das
cmp
push
cmp
outs
pop
fiadd
xor
mov
push
fscale
out
shl
sub
sub
pusha
inc
cld
jb
push
adc
(bad)
push
stos
pop
or
gs
xor
cdq
popf
js
in
mov
mov
je
rcr
push
or
in
xchg
(bad)
cmc
dec
cmc
lods
cs
jne
in
sbb
lock
jg
fnsave
scas
ins
xor
stc
lods
das
dec
(bad)
xchg
ret
sub
and
jae
retf
call
cmp
or
cmp
in
xchg
mov
fst
mov
add
mov
xlat
stc
mov
packsswb
loope
cmps
sbb
shr
sub
push
mov
or
int
mov
clc
mov
mov
mov
mov
test
cmp
mov
mov
sbb
pop
jo
outs
jl
or
sbb
or
xchg
iret
mov
rdmsr
sahf
(bad)
sbb
and
sar
inc
dec
pop
xchg
fild
xor
and
out
pushaw
int
out
xchg
or
test
push
(bad)
ffree
les
sub
cwde
hlt
mov
mov
sub
pop
test
inc
push
add
call
sbb
icebp
je
add
rcr
jmp
dec
sbb
outs
in
sub
dec
and
aam
test
mov
or
retf
push
clc
pop
std
rol
mov
jg
shl
push
out
push
out
test
xor
add
adc
pop
cmps
pop
popf
loop
jnp
adc
xchg
adc
fwait
(bad)
pop
(bad)
sub
js
cwde
add
dec
and
cmps
xor
pop
xor
lea
adc
mov
pusha
add
cmps
(bad)
cmp
xchg
add
addr16
sub
stos
int
lahf
fsub
scas
mov
test
mov
call
adc
mov
leave
rcl
dec
dec
cmp
xchg
outs
adc
xchg
jb
sub
in
rcl
test
clc
xor
rol
pop
sbb
push
test
jbe
xchg
aad
inc
ds
rcr
xor
sbb
cmp
push
cmp
movs
ins
jnp
arpl
and
loopne
xchg
stc
push
popa
sbb
sahf
les
mov
movs
daa
or
in
sub
int3
pop
outs
jb
(bad)
pop
mov
test
lods
aas
stos
inc
dec
mov
and
push
(bad)
loope
mov
sbb
add
xor
ds
cmp
scas
stos
cmp
sub
test
(bad)
cmp
pop
daa
inc
in
in
sub
pop
stc
mov
add
push
xor
xor
jb
iret
and
push
push
sub
das
cmc
xchg
jmp
mov
dec
xchg
jp
add
test
fld
pop
mov
fldcw
daa
mov
stc
add
movs
and
gs
ja
cmc
sbb
cld
es
push
pop
cmp
and
and
sbb
add
dec
sbb
mov
fmulp
sbb
or
inc
jp
and
movs
scas
pop
and
test
iret
dec
xor
mov
xchg
mov
xchg
jge
cmp
jb
dec
pop
mov
cs
fdivr
or
aad
xor
inc
xchg
xor
ds
cli
int3
nop
cmp
fdiv
jp
std
xor
dec
pop
icebp
sar
imul
jp
pop
sub
bound
out
fstp
mov
sbb
in
fistp
aaa
cwd
in
(bad)
sub
stos
jmp
mov
adc
fisub
and
mov
sbb
int
mov
push
shl
iret
call
aad
scas
mov
scas
out
test
xor
(bad)
cld
pop
mov
lds
(bad)
ss
cwde
in
jbe
pop
data16
adc
mov
fsubr
dec
mov
fldpi
mov
jge
pop
stos
stos
je
mov
mov
out
jmp
pop
add
out
fcom
inc
test
fs
rol
aas
mov
dec
daa
sbb
cmp
pop
dec
dec
std
scas
jns
pop
adc
js
jmp
mul
mov
hlt
cmp
xchg
lahf
in
ficomp
mov
sub
fs
dec
xlat
push
fwait
xchg
je
pop
xchg
jbe
cmps
popa
div
movs
rol
push
mov
addr16
sbb
dec
push
jbe
aaa
mov
sub
loope
dec
psllw
mov
mov
mov
or
pop
in
dec
or
daa
ss
pusha
cmp
mov
stc
cmp
mov
aas
fiadd
push
push
mov
imul
out
xor
retf
call
inc
jnp
and
or
mov
sub
mov
xor
pushf
mov
cdq
pop
arpl
cmps
xchg
ss
gs
retf
pop
js
push
les
mov
retf
mov
fst
pop
or
shl
inc
shr
push
stos
int
pop
ds
push
push
jecxz
mov
data16
iret
pop
mov
aad
ror
push
lods
pop
into
adc
pop
ret
in
mov
inc
sub
dec
mov
or
cmp
mov
mov
sub
int3
(bad)
xchg
adc
mov
xor
pop
and
sahf
sbb
jecxz
xor
bound
and
retf
rcr
or
or
or
mov
ins
popa
xchg
pop
sub
add
aad
int
lods
mov
mov
mov
push
stos
ss
inc
fdivp
aam
sbb
aaa
mov
ror
ins
lock
lds
fstp
dec
mov
jl
loopne
js
scas
xchg
mov
mov
daa
inc
hlt
pop
idiv
lds
cmp
jae
test
adc
pop
and
test
sub
movs
scas
pop
lods
or
sar
or
jge
retf
sub
jne
cmc
les
lea
imul
mov
ins
test
push
out
jge
(bad)
stos
pop
imul
mov
or
jne
out
jns
xchg
outs
or
shr
pop
maskmovq
not
retf
cli
cmp
mov
xchg
pop
fdiv
sbb
xchg
xor
xor
iret
xor
ja
jl
add
fnop
lods
clc
push
inc
dec
repz
mov
lods
and
lock
call
push
out
jnp
push
push
setns
out
push
rol
sub
xchg
and
ss
add
mov
icebp
jb
xchg
adc
imul
pushf
mov
movs
aaa
lds
jns
jnp
mov
push
pop
push
std
mov
adc
out
or
cld
inc
mov
cmps
dec
sbb
ja
int3
neg
lods
mov
jnp
dec
dec
inc
fucomi
(bad)
push
cdq
jno
and
sbb
xchg
pop
shl
mov
int
mov
aad
mov
adc
mov
mov
scas
ss
aad
fstp
push
arpl
push
inc
xor
mov
mov
loopne
or
aad
aam
sub
(bad)
cmp
sbb
jg
popf
or
inc
je
sub
adc
jno
push
aaa
push
add
jl
cmps
push
mov
sub
pop
nop
jns
lods
mov
cwde
jecxz
and
mov
in
push
push
cmp
in
stc
lahf
es
mov
inc
sub
aas
imul
test
mov
sbb
pop
lea
(bad)
push
je
(bad)
sbb
sub
call
pop
pop
nop
stos
movs
or
mov
and
and
and
jb
aad
call
rcl
adc
retf
pop
and
jo
sti
mov
mov
add
icebp
mov
mov
sub
rcl
push
ds
sbb
fistp
(bad)
aam
lahf
fdiv
call
lds
aaa
lahf
(bad)
push
push
push
mov
iret
xor
retf
shr
adc
pop
pop
loope
cmp
cmp
movs
(bad)
nop
rol
or
jecxz
inc
jl
add
mov
test
push
pop
gs
ds
mov
jmp
lea
jae
fsub
jmp
clc
cmp
mov
into
and
popa
pop
mov
mov
sbb
sub
and
xor
aas
fucomp
mov
in
lahf
jne
scas
mov
jne
mov
cmp
jl
inc
aam
stc
adc
cdq
or
lahf
push
jmp
in
pop
outs
leave
pop
loop
lods
pushf
sbb
loope
jae
(bad)
jmp
or
sbb
inc
ret
fwait
int
je
ret
mov
jmp
inc
(bad)
mov
push
jmp
fwait
mov
adc
inc
mov
push
dec
cmp
or
lods
sbb
sti
xchg
or
pop
dec
or
test
das
sbb
lahf
dec
mov
repnz
test
push
xchg
mov
popa
int3
inc
dec
or
xchg
aas
and
mov
rcr
lahf
and
sub
jne
je
pop
dec
sahf
pushf
shr
jle
jmp
sub
push
add
ins
es
(bad)
xchg
(bad)
shr
test
and
int3
xor
dec
ss
nop
mov
clc
not
fbld
outs
les
es
nop
gs
add
sub
sbb
jns
lds
lock
stos
nop
mov
mov
hlt
xor
imul
lock
sbb
imul
cmp
dec
jmp
and
dec
cli
(bad)
mov
(bad)
or
das
mov
aam
adc
push
mov
(bad)
out
inc
xchg
xchg
or
jne
stos
sbb
test
fbstp
or
loope
jp
pop
dec
jae
fmulp
sub
les
mov
hlt
or
adc
fsubr
test
jmp
jbe
test
mov
dec
push
out
inc
jmp
sub
push
dec
jle
mov
cmp
push
mov
jmp
sub
dec
cmc
xor
cmovge
xor
push
std
jns
pop
cmp
push
fistp
cmp
mov
(bad)
mov
mov
je
mulps
sbb
mov
leave
add
mov
adc
sar
sbb
jle
push
add
cmps
lds
pop
dec
gs
and
pop
xchg
repz
mov
rol
in
mov
outs
(bad)
outs
in
je
push
retf
mov
cmp
cmp
popf
test
retf
aam
rcl
pop
push
or
je
jp
add
loope
mov
loope
push
aaa
jge
jmp
iret
mov
das
(bad)
mov
stos
mov
jbe
rcr
mov
dec
jnp
add
pop
jns
fnstenv
stos
test
nop
pusha
fs
inc
or
addr16
mov
icebp
jb
pushf
in
pop
push
adc
cmp
sbb
popa
neg
or
mov
mov
mov
ror
cmp
add
inc
mov
push
mov
stos
sub
inc
pop
cld
xchg
pusha
aas
data16
push
ins
add
repnz
inc
sub
cli
bound
dec
cld
cmp
adc
popf
aas
inc
dec
adc
xchg
pop
adc
mov
js
(bad)
(bad)
pop
int
retf
xlat
pop
or
ins
xchg
scas
cdq
mov
ins
and
xchg
inc
leave
sti
xor
jbe
sbb
cmp
and
(bad)
xlat
out
jmp
push
popf
(bad)
cmp
add
jo
mov
aam
lods
mov
pop
pop
sub
sbb
enter
retf
outs
call
out
fdiv
loop
cmps
cwde
sub
mov
mov
(bad)
xor
mov
fnop
adc
or
adc
gs
icebp
popf
jmp
pop
jp
push
shl
mov
sub
in
test
pop
xor
jle
or
adc
add
imul
cmps
or
sub
inc
test
das
push
or
popa
and
pop
sbb
retf
icebp
sub
add
sahf
or
fcomp
mov
adc
mov
jl
push
pop
jmp
mov
xor
mov
das
aas
jl
iret
or
and
pop
or
(bad)
xor
popa
xchg
jae
inc
dec
xchg
mov
dec
cli
dec
xor
pop
fild
mov
and
push
add
js
cld
and
sub
sub
lahf
retf
adc
xor
outs
or
sbb
sub
mov
xchg
in
inc
xor
jecxz
rcl
or
ret
out
jnp
and
cmp
std
cmp
cmp
shl
mov
mov
adc
jae
and
ja
jmp
cs
fldenv
in
jb
jge
das
cmp
pop
call
icebp
nop
sahf
add
jnp
pushf
js
xchg
jo
xchg
rcr
cmp
test
push
popa
stc
mov
ret
fstp
jne
call
stos
hlt
adc
jo
dec
lods
mov
test
push
push
ret
fucomip
out
daa
mov
cmp
hlt
push
stos
jge
mov
mov
(bad)
mov
ror
inc
loope
xchg
ret
cwde
fidivr
mov
add
cmc
mov
dec
ins
cmp
push
fdivr
inc
js
mov
xchg
jne
dec
jle
int
mov
mov
in
gs
lods
scas
push
sbb
je
pcmpgtb
dec
fdivr
mov
cmp
data16
mov
movs
inc
mov
les
rol
jecxz
mov
test
xor
out
sub
cmp
ins
cmp
fisttp
je
popa
push
jecxz
xchg
dec
and
mov
iret
or
mov
cmps
xor
push
add
(bad)
pextrw
pop
and
push
sub
(bad)
mov
jmp
push
cmp
mov
in
fiadd
jno
or
push
stc
mov
movs
adc
lahf
xchg
or
aam
loope
cmp
pop
add
or
in
xchg
in
jmp
cli
add
repnz
sti
pop
and
and
sub
jno
fld
or
dec
cmp
in
push
adc
inc
ds
jne
addr16
inc
js
or
fisttp
cmp
adc
cld
movs
mov
pop
xchg
stc
inc
mov
adc
loop
ja
ret
or
mov
dec
add
ffreep
jmp
sbb
clc
mov
dec
inc
cdq
enter
loope
inc
bound
or
ins
sub
push
jle
stos
or
push
dec
jnp
(bad)
cmp
dec
dec
or
cmc
js
retfw
xchg
pop
daa
fild
sti
inc
push
jb
xchg
hlt
inc
xlat
stc
repnz
fs
cmp
(bad)
adc
jno
ss
cmp
jns
fs
push
fs
mov
sbb
xchg
add
mov
cli
into
daa
mov
imul
mov
aas
sar
imul
dec
mov
stos
imul
pop
stos
xchg
sbb
outs
or
sbb
jmp
jg
rcl
mov
xchg
xchg
out
ins
inc
jno
or
inc
pushf
inc
in
shl
movs
push
xor
sub
dec
mov
mov
sbb
lods
and
mov
sub
cmp
imul
test
push
sbb
mov
sub
cmp
jno
je
loopne
jle
popf
sbb
cli
push
aas
or
repnz
mov
(bad)
jno
ret
jmp
mov
push
fiadd
sbb
loopne
loope
nop
xchg
push
stos
or
sbb
sub
xchg
or
lods
or
dec
test
lea
mov
jne
loope
shl
hlt
js
sub
call
hlt
push
jno
lds
in
clc
dec
xor
nop
test
jmp
mov
into
daa
outs
shl
lea
in
jl
call
call
dec
pusha
arpl
inc
idiv
addr16
(bad)
push
retf
cwde
pop
push
lods
mov
ds
mov
dec
xchg
scas
jle
mov
push
loop
pop
jmp
mov
out
xchg
sbb
sbb
cmps
cmp
dec
aad
js
adc
mov
ds
int3
adc
jo
mov
mov
aam
not
add
scas
std
fwait
in
cmp
jmp
sub
mov
fld
push
leave
aad
push
jne
push
add
push
and
pop
sbb
clc
push
rcl
xor
mov
dec
sbb
dec
mov
(bad)
pop
push
pop
mov
clc
inc
aad
icebp
xchg
nop
push
stc
add
aad
popa
and
pop
mov
mov
and
adc
cmp
test
jno
pop
sub
clc
dec
leave
cld
sti
and
sub
lar
(bad)
test
pop
mov
out
addr16
ss
mov
xor
mov
test
fs
push
div
scas
addr16
mov
adc
sbb
iret
lds
mov
mov
ret
pop
pop
jl
cmc
pop
adc
ror
scas
pop
add
inc
adc
pop
dec
dec
shr
adc
dec
xlat
shl
pop
test
or
jns
mov
pop
inc
jbe
jnp
cmps
jg
jno
or
or
in
jae
pop
js
fs
dec
sbb
push
jbe
loop
std
clc
fistp
in
cmps
ret
jnp
repz
nop
jo
pusha
mov
ins
gs
mov
jle
std
jb
push
pop
ss
sub
dec
pop
call
scas
jmp
repz
cmps
cmps
stos
mov
pop
sub
shl
std
fld
xor
dec
pushf
stc
mov
lods
test
imul
scas
leave
dec
popf
dec
int
dec
shl
ins
cs
sbb
add
aas
mov
clc
aam
xchg
mul
mov
push
les
adc
and
(bad)
idiv
jp
sbb
ins
lods
pop
pop
and
hlt
out
popa
sar
int3
jmp
or
ja
xor
xor
push
xchg
ins
dec
in
sub
xchg
cld
inc
jb
push
lods
mov
pushf
rcr
jne
jp
or
popf
xchg
mov
pop
xor
or
xchg
or
out
(bad)
cmp
xchg
mov
dec
jno
or
mov
idiv
add
test
mov
inc
imul
add
push
sub
xchg
add
call
outs
xchg
xchg
(bad)
mov
in
jle
mov
sub
add
inc
arpl
mov
sbb
popa
scas
test
adc
inc
push
xor
loope
jo
sub
jbe
mov
xchg
aaa
sbb
ins
mov
jae
popf
rcr
mov
sub
hlt
loop
jae
push
retf
jge
inc
or
push
std
pop
sub
cdq
jmp
sbb
mov
sbb
les
jp
xor
daa
cmp
mov
pop
pop
or
sub
cli
outs
gs
pop
push
gs
sbb
pop
mov
rcr
and
clc
and
fld
ret
xchg
lock
jns
sbb
loopne
mov
add
loop
or
jmp
sub
jbe
cmps
mov
loop
(bad)
daa
loop
mov
push
ins
nop
out
bound
push
jg
jmp
push
mov
dec
bound
jno
dec
outs
mov
or
test
out
cdq
sahf
cmc
xchg
arpl
xchg
or
jp
nop
cmp
fldenv
lds
pop
movs
adc
mov
sti
or
and
xor
add
mov
xchg
or
mov
jecxz
ss
xchg
sahf
(bad)
cmc
xlat
or
retf
sbb
ficom
xor
dec
jbe
adc
mov
and
xor
pop
mov
dec
test
scas
xchg
push
sbb
cmps
add
out
lock
test
dec
std
aaa
dec
sbb
movs
in
popa
sbb
sub
arpl
mov
jp
popf
mov
pop
loop
and
das
ficom
mov
adc
imul
inc
cmp
loopne
neg
test
bound
cmp
sbb
in
test
sbb
push
dec
dec
(bad)
(bad)
es
aaa
movs
or
sti
loope
cli
cmp
int
mov
mov
adc
lock
dec
push
retf
fidivr
ror
dec
mov
xchg
xor
imul
mov
mov
outs
mov
sub
jl
jbe
lods
test
sbb
js
jg
inc
xlat
cmp
mov
mov
pop
ret
sub
add
push
loope
push
out
xchg
xor
fsubr
out
add
xchg
mov
mov
imul
dec
iret
das
fsubr
cmp
xor
inc
jns
jge
(bad)
ret
mov
push
ja
add
sahf
sbb
pop
in
ja
popf
pop
xor
cmp
loope
push
lods
cs
pop
bound
mul
sahf
sub
push
push
ds
push
repnz
sahf
(bad)
pop
(bad)
cmp
outs
(bad)
aad
sbb
fdiv
xor
pop
push
mov
mov
add
test
stos
mov
dec
jmp
xor
(bad)
(bad)
cld
popa
shr
jnp
cld
jbe
movs
bound
ds
pushf
jne
xchg
and
xchg
fucom
inc
sbb
cs
or
ret
jmp
push
jp
mov
inc
es
call
aad
jns
es
jno
mov
add
xlat
and
shl
fs
sbb
pop
xchg
and
cmp
les
xor
sub
xchg
out
rol
loop
out
adc
mov
mov
dec
cmp
push
jge
cld
cmps
mov
add
xor
adc
fcmovu
and
and
or
aam
add
cmc
outs
jge
test
out
shl
int3
ins
pmaddwd
hlt
outs
popf
sub
stos
es
and
fcom
inc
call
jmp
stos
in
not
cli
sub
mov
jmp
or
mov
or
jle
(bad)
fmul
sahf
adc
and
repz
jbe
(bad)
retf
lahf
int3
aas
jl
out
xchg
in
jnp
sub
call
push
xchg
jmp
push
imul
mov
mov
jb
stos
scas
adc
mov
add
cmp
lfs
jae
mov
leave
jno
jbe
adc
inc
loopne
mov
ds
ror
cmp
test
pop
pop
jnp
pop
dec
dec
xchg
or
or
dec
sub
and
lock
popa
test
daa
xchg
outs
cmps
out
adc
js
pop
fiadd
loop
dec
fwait
std
xor
test
dec
arpl
push
idiv
jns
jecxz
push
icebp
inc
dec
and
test
aaa
mov
sub
mov
xor
movs
inc
or
mov
pop
es
sub
or
cmps
jmp
cmp
cmp
sbb
arpl
push
push
clc
jae
hlt
xchg
push
shl
adc
call
mov
aas
add
adc
shr
stc
pop
(bad)
(bad)
xchg
mov
jmp
into
xlat
jge
sub
popa
sbb
pop
xchg
mov
div
iret
fisub
lods
push
fnstsw
inc
jp
leave
mov
(bad)
in
sub
mov
pop
xchg
bound
imul
imul
push
xchg
lahf
jmp
sub
lods
xchg
pop
imul
jns
addr16
stc
jae
mul
out
addr16
cwde
inc
jp
std
movzx
mov
lds
mov
stos
mul
aam
out
sbb
and
add
inc
fs
push
pop
outs
push
cmovne
mov
pop
mov
push
mov
xchg
mov
adc
pop
outs
test
mov
push
dec
aam
addr16
jecxz
mov
lods
es
mov
inc
repnz
add
bound
or
push
mov
mov
dec
pop
xchg
jns
test
add
inc
js
cmp
pop
add
sti
xlat
data16
push
push
or
mov
aad
dec
push
das
fbld
sub
mov
inc
or
mov
inc
or
imul
xchg
sbb
pop
rcl
xor
sbb
(bad)
stc
jle
mov
sahf
test
mov
fsubr
cmps
mov
int3
dec
call
pop
xor
stos
xchg
fsubr
aas
cld
iret
fs
add
jge
lock
mov
add
iret
pop
sbb
inc
inc
push
fcom
out
sub
sub
out
cmp
cdq
dec
pushf
cmc
popa
push
daa
imul
push
and
sub
sbb
test
pop
loope
mov
push
and
pop
aam
dec
(bad)
cmp
lds
in
adc
daa
push
in
jecxz
mov
nop
cs
jg
mov
ficomp
pop
push
bound
cwde
loopne
and
pop
mov
push
mov
ins
ror
scas
sub
add
popa
cwde
pop
aad
and
call
sbb
es
jle
fnstsw
push
inc
mov
stc
mov
leave
jp
out
inc
mul
push
xor
stos
pop
in
jb
gs
pop
gs
xchg
out
(bad)
or
daa
scas
add
add
pop
add
or
aad
push
or
dec
repnz
fsubrp
push
xor
cwde
test
inc
sub
jb
xchg
ja
mov
idiv
mov
mov
xor
pop
push
ins
cmps
or
xchg
xchg
test
sbb
sbb
(bad)
mov
cmp
js
and
dec
xchg
(bad)
cmp
ror
cmp
mov
mov
push
xor
or
fld
ins
outs
push
xchg
(bad)
cld
cmc
icebp
les
icebp
push
fdivr
mov
adc
(bad)
add
inc
xchg
and
imul
sbb
cld
jno
push
addr16
mov
aas
leave
int
inc
pop
ins
pop
xchg
sbb
xor
rol
jb
popf
or
jg
call
ss
pusha
push
mov
loope
mov
lods
nop
fs
retf
cmc
pop
aam
inc
jmp
add
xchg
leave
test
inc
mov
in
inc
inc
jmp
leave
adc
retf
push
loopne
repz
(bad)
jnp
adc
repnz
push
inc
movs
imul
int3
xchg
cmp
hlt
les
sub
retf
dec
jne
ror
es
push
sbb
ret
lock
(bad)
push
jge
mov
das
mov
adc
adc
cmc
imul
and
out
xor
add
push
cmp
out
cli
test
adc
mov
ins
movs
hlt
(bad)
inc
mov
iret
jecxz
push
dec
add
pop
xor
rcl
add
ffree
push
push
mov
enter
and
lods
call
or
mov
rcr
jp
lahf
mov
push
pop
lahf
adc
fisttp
fwait
clc
sub
or
push
sub
std
adc
push
mov
mov
pop
jge
sbb
rol
sub
fwait
adc
xor
sti
push
or
popf
pop
call
cmp
loopne
cmp
inc
sar
jns
fdiv
fs
mov
ins
xor
imul
(bad)
out
or
ror
call
jp
aas
xor
into
sbb
push
push
mov
mov
popa
mov
fdivrp
enter
jnp
dec
je
std
ror
jbe
mov
mov
jno
xchg
int
div
test
in
push
and
fwait
mov
and
scas
sbb
scas
push
sahf
dec
push
mov
sbb
stos
ds
aam
out
adc
icebp
loopne
adc
xlat
hlt
pop
mov
dec
fdivr
mov
pushf
push
mov
mov
pop
mov
or
adc
push
call
jno
lea
data16
loope
and
movs
test
ins
les
mov
ins
dec
add
aaa
add
mov
xchg
(bad)
xchg
sbb
lock
pop
pushf
pop
ret
aas
and
mov
bound
fucomi
popa
xchg
loopne
fistp
lock
es
add
mov
scas
(bad)
push
add
pop
push
mov
adc
sbb
repz
mov
dec
cmp
retf
(bad)
je
dec
pop
cmp
mov
mov
xor
loope
fs
add
inc
cmp
xor
mov
movs
ds
add
and
and
js
jg
mov
in
mov
ds
add
push
les
mov
and
cmp
xor
mov
test
imul
lock
cmps
jmp
test
mov
out
cld
cmp
jmp
jle
out
shl
push
push
loope
add
dec
mov
sti
add
inc
cmp
push
ja
test
ret
xchg
lahf
xor
mov
jmp
rol
aas
pusha
les
ins
xchg
lahf
push
xchg
push
add
inc
xchg
adc
addr16
loop
sub
sti
adc
and
sbb
jl
addr16
mov
mov
inc
lds
mov
test
out
repnz
jmp
or
xlat
sbb
movs
out
sub
test
jmp
jae
dec
sub
call
cmp
push
ins
push
nop
fstp
into
ja
je
mov
fstp
retf
ins
xor
arpl
mov
cs
loop
sbb
outs
dec
xor
inc
ins
arpl
idiv
cwde
dec
push
je
cmps
pushf
test
ret
cld
popa
cwde
call
inc
stos
or
sahf
lods
movs
imul
mov
adc
call
xchg
loop
pop
scas
sub
popf
rcr
push
inc
or
ror
retf
push
xor
or
xor
and
push
cmps
cmp
pop
cwde
jae
sub
inc
push
and
ins
sbb
out
call
mov
dec
or
and
sub
xchg
in
add
repnz
retf
mov
inc
jb
pop
inc
add
dec
jbe
sbb
push
test
cmp
pop
cli
or
int3
sbb
adc
xchg
pusha
cmp
loopne
loop
icebp
ror
cmp
lds
pop
idiv
push
xor
mov
or
dec
push
inc
jne
cmc
push
xlat
xchg
push
les
sub
mov
push
popa
add
mul
lods
cwde
cmp
pop
sub
sub
mov
adc
bound
add
ss
mov
(bad)
cdq
out
inc
test
ucomiss
add
cld
pop
arpl
cmp
call
retf
sar
es
mov
in
outs
push
je
mov
mov
jmp
stos
xor
mov
(bad)
bnd
cmp
sbb
call
arpl
add
jnp
das
shl
xor
and
xchg
retf
mov
mov
mov
mov
adc
add
adc
dec
lods
loopne
imul
sub
popa
cmp
inc
mov
mov
or
push
nop
push
sti
popf
int
sbb
mov
and
js
test
mov
pop
xchg
and
push
fst
jno
mov
cld
adc
mov
ss
mov
mov
out
mov
stos
lea
mov
lods
xchg
pop
cwde
punpckhwd
mov
aad
mov
mov
inc
and
je
out
test
inc
adc
dec
fsubrp
scas
sahf
add
inc
xlat
xchg
scas
fdivr
pusha
dec
in
mov
xor
xchg
dec
loope
inc
sbb
and
enter
sbb
in
into
mov
add
(bad)
mov
lods
addr16
fiadd
out
int
sbb
dec
xchg
and
sbb
xor
fisubr
repz
sbb
pop
ds
test
popf
sbb
jle
outs
mov
aam
stos
pop
xor
mov
mov
dec
dec
aam
je
out
or
cmp
cwde
out
int
fs
pop
idiv
xchg
mov
xchg
(bad)
je
test
pop
test
xor
imul
mov
ss
mov
push
pop
fld
or
push
push
push
add
sbb
rol
xchg
mov
or
pushf
add
aam
ds
mov
or
sbb
int3
pop
add
sub
jp
rol
sub
mov
pop
call
xor
push
push
gs
or
imul
or
mov
or
add
xchg
jo
add
and
outs
in
mov
fisubr
sbb
retf
daa
xor
jecxz
es
jmp
ret
lods
push
fnsave
mov
test
hlt
fldcw
adc
ins
add
popa
add
add
add
dec
xor
cmps
dec
jecxz
lods
pop
pop
arpl
jns
gs
test
fdiv
ror
mov
xchg
das
fwait
xchg
outs
lock
out
xchg
jge
inc
ds
mov
push
retf
pop
add
adc
icebp
test
inc
outs
inc
jp
in
cs
scas
out
es
loope
ds
jl
movups
loopne
dec
imul
mov
dec
stos
mov
in
push
mov
jns
pop
cmp
mov
test
jmp
xchg
repz
mov
push
pop
rol
pop
xlat
or
imul
out
mov
mov
pop
dec
xor
and
aad
fucomip
test
pop
sbb
push
xor
add
jge
or
sbb
add
dec
or
and
mov
or
inc
mov
sub
test
mov
shr
int
into
pop
sbb
out
jp
int3
scas
loop
inc
and
mov
mov
xchg
add
std
div
push
cdq
fdiv
movnti
lea
out
sub
stos
mov
sbb
inc
hlt
nop
mov
test
(bad)
mov
mov
jae
push
mov
or
mov
mov
test
test
push
adc
bts
lock
jns
lods
mov
mov
or
pop
pop
xor
jo
sbb
or
mov
inc
jmp
in
sub
fisttp
mov
popf
pop
daa
or
add
in
fmulp
std
and
dec
xchg
fcom
adc
outs
test
adc
jge
mov
stos
mov
call
mov
jle
scas
test
and
mov
jae
cmp
not
adc
sub
fisttp
xchg
sub
jbe
push
(bad)
loope
mov
jnp
sub
das
dec
popa
xchg
in
cmps
repz
(bad)
push
xchg
jecxz
retf
stc
jmp
mov
std
mov
jle
mov
je
pop
mov
outs
or
mov
imul
movs
xlat
push
fistp
push
loop
jmp
daa
inc
int
arpl
fild
dec
loope
test
inc
xchg
cwde
aad
ins
call
pusha
mov
(bad)
loopne
shl
fcomp
dec
adc
jge
xchg
jl
cmp
sub
sahf
cli
outs
jecxz
pop
(bad)
mov
idiv
in
mov
pop
scas
and
push
mov
fldcw
call
fbld
add
push
push
retf
adc
and
scas
dec
hlt
xchg
lock
test
scas
retf
das
es
daa
jle
out
pop
mov
mov
loope
add
jg
call
(bad)
bnd
(bad)
mov
or
jle
inc
and
pop
fnsave
mov
into
push
scas
dec
(bad)
fldenv
dec
inc
int3
(bad)
sbb
cmp
jl
mov
push
cmps
les
ss
aas
or
iret
wrmsr
jecxz
mov
int
(bad)
js
sti
les
xchg
inc
mov
out
pop
push
in
push
fwait
jmp
pop
xor
adc
imul
jge
xlat
inc
xor
xlat
xor
mov
mov
xchg
inc
mov
dec
gs
into
xlat
sub
(bad)
push
mov
push
mov
fwait
les
or
in
out
adc
xor
xor
inc
cwde
mov
jg
int3
pop
outs
push
inc
aaa
add
fadd
fxch
xor
xor
or
adc
mov
inc
xchg
dec
inc
imul
fldenv
adc
lods
(bad)
sti
add
sub
xchg
scas
or
pop
ds
push
aas
rol
jle
xor
dec
and
pop
loop
cs
mov
shr
(bad)
inc
in
cmp
sub
push
ja
aaa
mov
lods
mov
xor
mov
and
adc
mov
fmul
int3
dec
gs
pop
iret
mov
dec
mov
bound
lock
enter
dec
cli
cmp
jo
in
lea
and
jne
test
call
cmps
or
mov
and
arpl
mov
dec
mov
movs
pop
inc
xchg
xchg
rcr
and
mov
mov
jg
lock
mov
pop
or
nop
sbb
jnp
(bad)
xchg
push
jge
and
jne
jge
inc
dec
add
add
movs
jle
jo
fwait
imul
lods
inc
xor
movs
sub
fidiv
sub
adc
retf
fild
mov
mov
rcl
sub
idiv
in
fdivr
into
retf
sub
sbb
ss
ds
sbb
ret
les
(bad)
repz
stos
cmp
fcmovnbe
and
cli
ror
movs
in
arpl
sub
repz
push
mov
js
stc
push
enter
test
and
jno
push
int
test
pushf
(bad)
jmp
mov
test
xchg
xchg
rcl
popa
mov
icebp
mov
stc
nop
xor
mov
aad
xor
mov
or
cmp
sub
sub
repnz
(bad)
lods
hlt
cmp
jns
or
clc
inc
fld
jae
pop
push
sub
inc
fbld
ins
in
fs
fcomp
sbb
dec
lea
rcl
lods
fsubr
test
fmul
lea
xchg
mov
scas
pop
enter
mov
add
dec
int3
inc
arpl
xchg
out
add
les
mov
pop
or
adc
je
or
or
mov
inc
leave
movs
clc
xchg
popaw
and
test
xor
fs
jnp
cmps
test
in
fidivr
xchg
jnp
(bad)
mov
cmp
shl
enter
adc
jbe
movs
ss
in
jmp
jmp
sbb
imul
aad
jnp
sbb
(bad)
shl
lods
je
xlat
fbstp
dec
adc
mov
push
or
sti
sbb
xor
arpl
jb
(bad)
push
xchg
bound
pop
mov
cs
inc
lods
adc
bound
aam
xor
and
xchg
dec
xor
inc
sub
mov
adc
jmp
inc
pop
xor
in
shl
pop
push
std
jmp
mov
aad
sub
mov
cld
rcl
ds
clc
mov
sub
sbb
test
into
jbe
sub
xchg
ja
enter
pop
rol
enter
and
fwait
pop
or
dec
(bad)
jmp
inc
daa
pop
shl
ins
not
mov
jmp
data16
or
inc
adc
sub
dec
out
cmps
ins
cmp
or
adc
mov
ror
popa
call
sti
fwait
push
sub
dec
movs
mov
daa
inc
mov
lahf
(bad)
cmc
rol
fidivr
push
call
add
sbb
mov
aad
nop
cmp
out
xor
pop
jno
pop
ret
cmp
(bad)
popa
out
retf
fidivr
or
mov
or
jnp
aam
inc
arpl
test
mov
xchg
pop
fisttp
sti
mov
jg
cdq
add
sub
fwait
pop
sahf
fbstp
dec
es
pop
ror
mov
lea
fmul
scas
cld
cmc
add
(bad)
adc
fmul
cmp
movs
test
scas
ret
dec
stos
ins
jb
or
push
out
scas
call
or
xchg
jecxz
adc
scas
mov
mov
mov
retf
ret
jbe
jle
imul
sbb
out
xchg
sti
xor
shl
and
xlat
xlat
lds
push
movs
in
stos
add
test
dec
(bad)
push
pop
ret
or
push
(bad)
pop
jmp
inc
cmp
aaa
add
lea
or
loope
fst
repz
or
push
ret
dec
je
ins
pop
pop
adc
jge
in
je
das
ds
or
or
std
into
pop
add
jp
jge
cs
imul
mov
ds
push
dec
push
es
int
or
fsincos
lods
aas
sar
mov
adc
int3
jns
jnp
mov
movs
test
imul
sub
jg
pop
scas
push
icebp
mov
and
mov
shl
cmp
stc
or
jp
push
xor
test
push
out
lahf
cmp
lea
add
jb
xchg
test
(bad)
outs
cmp
ins
clc
inc
adc
ror
and
call
pop
(bad)
jnp
out
dec
and
cmps
scas
and
pop
int3
aas
(bad)
or
fimul
mov
or
xchg
dec
jae
xor
into
inc
out
ret
adc
mov
jge
int
(bad)
mov
aad
xor
scas
clc
daa
loop
rcl
enter
adc
cwde
lahf
dec
dec
gs
push
xor
pop
push
mov
pushf
cs
inc
inc
leave
(bad)
mov
scas
xor
xchg
in
popa
jmp
cmc
xor
inc
push
xor
push
bound
and
repnz
jnp
into
inc
loope
push
adc
neg
mov
fdivr
dec
adc
sbb
mov
push
dec
xor
fucomi
cmp
lods
loope
jns
cmc
jge
scas
enter
ret
mov
jae
movs
sahf
cmp
in
imul
jle
cmp
test
push
jnp
out
inc
frndint
push
jns
xchg
shl
dec
int
cmp
sub
arpl
push
in
sbb
jo
jl
mov
jp
imul
movs
loop
mov
popf
add
push
addr16
popf
icebp
add
mov
ss
mov
push
dec
jle
sbb
(bad)
hlt
sub
in
cmp
and
int
xchg
inc
xchg
popa
(bad)
dec
mov
xor
xchg
xor
adc
xor
loopne
mov
mulps
and
sar
or
(bad)
inc
imul
stc
(bad)
cwde
and
jmp
pop
and
cdq
call
test
aam
outs
cmp
shl
cmp
(bad)
lods
and
fsub
push
mov
mov
jns
mov
cmp
sbb
mov
repz
sti
leave
cmp
stc
loopne
cdq
addr16
or
adc
add
xor
lods
dec
dec
out
loop
outs
sbb
inc
clc
ds
mov
dec
repnz
inc
lock
inc
pop
shr
sub
xor
inc
push
addr16
lea
push
mov
jns
push
dec
and
pusha
fisubr
sbb
inc
dec
mov
inc
test
cmps
jl
jmp
pop
mov
nop
xor
pop
fdivrp
mov
mov
sti
in
imul
mov
push
lahf
jnp
cmc
mov
adc
mov
fldcw
leave
in
sub
bound
sbb
dec
mov
test
stos
mov
lock
call
jo
xor
test
and
(bad)
ja
jo
jb
ins
lods
push
ins
loop
sbb
ficomp
pop
or
pop
jg
sub
lods
ret
rol
sbb
push
(bad)
cmp
jle
push
push
call
aaa
jnp
inc
sbb
in
mov
mov
push
push
and
sahf
ret
not
add
mov
jno
gs
mov
addr16
mov
daa
ret
leave
in
xchg
stos
push
xchg
aad
out
cmp
push
xlat
and
movs
and
mov
addr16
jb
cmps
outs
dec
ret
enter
clc
xor
dec
clc
test
in
push
push
pop
pop
add
fs
cmps
jl
movs
jmp
fwait
or
sub
mov
adc
adc
pusha
xor
jo
mov
sbb
(bad)
fist
(bad)
retf
push
cmp
push
fnstsw
adc
hlt
sbb
push
pushf
rcl
mov
popf
and
ret
push
pusha
scas
inc
mov
pop
cli
call
jae
pop
push
jnp
jae
shl
mov
jmp
xlat
rcl
popf
jnp
retf
inc
dec
mov
cmp
mov
xchg
xchg
int3
hlt
mov
(bad)
mov
xor
mov
scas
pop
pop
popa
xchg
xlat
mov
fisubr
lds
aam
mov
mov
inc
pop
or
sbb
pop
cdq
jp
das
lods
xor
add
outs
repz
(bad)
enter
(bad)
neg
xor
sub
inc
sbb
imul
sub
imul
mov
pushf
sub
jns
imul
push
int3
jecxz
(bad)
in
in
std
int
xchg
dec
outs
je
outs
and
out
mov
jbe
addr16
(bad)
pop
mov
xchg
in
pop
mov
cdq
mov
sbb
sub
arpl
mov
sbb
mov
ds
iret
push
dec
in
xor
in
mov
loope
pop
fwait
pop
test
js
jb
iret
inc
mov
cwde
jns
add
retf
push
push
mov
mov
in
pop
retf
jb
mov
jmp
or
xchg
or
and
stos
inc
adc
push
js
loope
add
or
addr16
pushf
out
test
icebp
sbb
scas
jle
or
movs
xchg
sub
jle
mov
movs
dec
adc
add
and
adc
in
sbb
cmp
xor
mov
stos
pop
sub
mov
mov
sbb
xchg
cwde
das
aaa
xor
pop
stos
sbb
inc
adc
jge
push
loope
mov
pushf
mov
sub
or
not
sbb
call
scas
popf
cmp
scas
in
sti
sub
or
xchg
arpl
xor
daa
or
je
add
sub
pop
fs
mov
repz
sub
pop
iret
fs
mov
cdq
mov
dec
cli
fucomip
aam
aaa
mov
(bad)
clc
(bad)
retf
xor
dec
sbb
pushf
push
lea
adc
sar
push
nop
fsubr
movs
pop
xchg
and
xor
loopne
fcmovnu
les
(bad)
ja
sbb
in
xor
adc
cli
test
push
jne
scas
jnp
jp
addr16
mov
mov
mov
sub
jmp
bound
int
pop
(bad)
ror
pop
jns
cmp
add
cmp
push
xchg
retf
outs
aam
fdivrp
int
lahf
push
out
loope
adc
shl
xor
add
adc
adc
cmps
mov
jmp
rol
mov
push
in
mov
hlt
dec
movs
fisub
jmp
ins
mov
jle
aaa
adc
xchg
bound
mov
leave
loope
adc
add
and
mov
push
lock
push
pushf
xor
adc
in
pop
loope
cmp
pop
addr16
jg
or
ror
test
data16
std
movs
cli
not
adc
jle
mov
mov
retf
and
cmp
or
mov
iret
xchg
fistp
jle
sbb
xor
jno
mov
pop
test
popf
add
jb
dec
test
jmp
test
push
lahf
jb
push
sbb
xor
sbb
mov
ret
test
cld
mov
mov
mov
sub
das
(bad)
loope
jb
ss
add
add
inc
sub
mov
aas
(bad)
ja
adc
xor
retf
mov
repz
inc
retf
adc
outs
inc
arpl
or
lea
(bad)
mov
mov
bound
sub
std
pushf
fwait
adc
dec
mov
and
mov
retf
ss
mov
fistp
adc
js
sti
(bad)
jmp
shl
sub
add
call
dec
dec
(bad)
movs
jp
ins
xchg
xchg
test
push
cmp
in
xchg
cmp
fs
mov
(bad)
pop
pop
or
dec
xchg
inc
lods
push
add
add
call
sub
push
xchg
mov
test
lods
sbb
add
and
imul
sub
push
into
dec
ins
fcomp
out
nop
push
xor
adc
jmp
es
pop
push
jne
adc
and
dec
push
and
mov
dec
mov
(bad)
mov
out
inc
inc
cmp
push
jg
lods
(bad)
or
inc
pop
mov
fmul
xor
sar
(bad)
mov
mov
fidiv
jo
lods
jno
mov
and
imul
pop
cmp
and
aam
inc
cmp
xlat
fdivr
in
and
push
outs
mov
and
sub
add
dec
cmp
int
xchg
ret
sbb
xchg
loop
(bad)
idiv
pop
fsub
into
mov
push
enter
and
sub
jge
dec
and
sub
mov
mov
jno
ins
aaa
in
pop
mov
push
inc
and
out
fsub
mov
xchg
pushf
push
mov
nop
push
call
ret
sub
rol
inc
test
jb
xchg
(bad)
mov
fcom
jp
fwait
test
popa
pop
adc
xchg
maxps
sub
push
enter
push
out
int
arpl
aam
cmp
push
dec
push
xchg
aad
and
out
inc
sub
(bad)
loopne
mov
dec
xchg
div
addr16
ss
mov
jo
mov
and
fstp
pushf
fs
mov
xchg
fdiv
cdq
sub
fbld
mov
lahf
inc
in
scas
in
icebp
jae
xchg
popf
or
sub
in
sbb
in
pop
and
push
ret
ja
pop
fbstp
fild
cmp
xchg
mov
adc
xchg
xchg
xor
outs
lock
push
mov
mov
jmp
clc
iret
pop
aas
dec
sti
loopne
push
mov
jecxz
xchg
lds
fadd
cmp
inc
arpl
cdq
add
xor
shl
dec
clc
in
repz
nop
lods
scas
shr
sar
test
popa
test
add
popa
imul
mov
ins
shr
jb
cmc
and
xchg
pop
dec
add
xchg
daa
or
cmp
out
add
and
and
push
imul
imul
pusha
arpl
mov
aaa
scas
dec
sub
sbb
inc
retf
dec
sets
inc
mov
adc
xor
sar
(bad)
mov
mov
mov
out
jp
scas
cmp
dec
push
mov
leave
mov
cmp
ins
add
and
aam
nop
dec
imul
jae
adc
jnp
pop
mov
enter
ins
pop
and
push
(bad)
jg
and
xor
jmp
in
mov
mov
mov
jp
lahf
int3
xor
mov
push
sub
pop
or
push
std
call
adc
pop
sub
retf
nop
aaa
xchg
push
stos
mov
xor
xchg
(bad)
stos
xor
xor
(bad)
test
pop
mov
or
inc
jmp
xchg
dec
dec
push
int
inc
ror
jns
and
das
xchg
sub
cmps
mov
ds
scas
dec
pop
mov
adc
or
push
cwde
out
loop
ins
scas
lahf
adc
addr16
jg
inc
dec
mov
jmp
stos
xor
repz
nop
shl
add
lods
pop
jp
mov
mov
jnp
dec
nop
mov
pushf
dec
inc
and
xchg
adc
outs
clc
out
cmp
retf
and
pop
or
cmp
(bad)
popf
pop
test
out
push
xchg
int3
xchg
lods
jl
retf
jp
adc
hlt
xrelease
rol
sub
dec
mov
imul
jle
sub
jp
xchg
ret
leave
scas
jne
pop
das
or
out
fbld
leave
sbb
jns
or
aas
pusha
or
icebp
jmp
jb
stos
jne
out
out
sti
ss
nop
push
call
jecxz
imul
push
mov
xchg
mov
mov
aam
inc
aas
pop
ins
and
jo
and
pop
push
outs
push
call
push
pop
ss
sub
lods
je
shr
jle
les
jne
cld
arpl
add
daa
or
test
add
(bad)
pusha
call
pushf
jb
(bad)
es
fbld
xchg
fwait
(bad)
fadd
shl
push
jge
ja
cmp
xor
(bad)
jo
adc
mov
adc
mov
sbb
push
sbb
jp
xchg
movs
mov
xor
dec
and
pusha
retf
arpl
cmp
enter
mov
jo
fidiv
sar
and
dec
lds
cmps
test
jecxz
rcl
push
sbb
scas
push
es
mov
cs
in
and
int3
jmp
sbb
mov
xor
idiv
jmp
mov
loope
add
pushf
xor
jae
mov
retf
inc
fidiv
addr16
add
sbb
xor
push
sbb
pop
es
sar
push
sar
mov
mov
fld
xor
ss
inc
sbb
(bad)
mov
aas
sar
jnp
pop
jo
sbb
dec
out
inc
cmp
sub
xchg
call
sbb
adc
es
mov
push
sub
add
jne
idiv
sbb
(bad)
push
ja
scas
dec
mov
xchg
(bad)
jecxz
push
fmul
loop
pusha
push
dec
nop
push
xchg
lds
or
jl
push
out
mov
loopne
xor
pop
enter
shl
fwait
sbb
test
and
(bad)
xor
mov
mov
xchg
cld
xchg
cs
xchg
inc
out
pop
jbe
push
popa
sbb
push
cdq
ins
inc
push
jo
sahf
push
and
adc
sub
fimul
test
sar
xchg
mov
and
jns
sub
pusha
jmp
shl
jne
add
mov
sbb
test
icebp
push
jle
hlt
aam
loop
bound
xchg
inc
adc
test
push
or
clc
lods
and
push
jge
out
jne
jno
jne
add
mov
loope
stos
mov
dec
(bad)
pop
in
mov
loope
pusha
sub
imul
pop
fdivr
inc
sub
jp
push
mov
xor
add
jns
jbe
dec
out
sbb
cmp
and
push
jp
popa
out
outs
cmp
ins
retf
loope
push
add
sbb
out
lods
rol
clc
and
jmp
inc
mov
pop
lods
in
fbld
in
add
xchg
push
ret
sar
mov
inc
inc
and
mov
sub
jge
in
jno
fs
mov
push
shr
mov
xor
mov
xor
mov
lods
mov
lods
fs
xor
sti
fimul
add
cli
lahf
inc
xchg
in
mov
or
push
xor
pop
xor
dec
adc
addr16
and
and
and
xor
jns
push
jmp
cmp
loop
add
ds
mov
pop
movs
movs
fsubr
sub
xor
nop
repnz
and
rcr
cmp
cmp
jno
test
sbb
stos
push
int3
mov
pop
movs
xor
adc
xchg
jmp
pop
push
dec
ins
lods
adc
xor
dec
sahf
xchg
xchg
pushf
fistp
test
inc
sbb
mov
push
push
mov
cmp
popf
test
sbb
test
in
inc
adc
xor
in
rcl
out
pop
lods
imul
(bad)
das
out
(bad)
push
and
(bad)
lods
es
stos
add
imul
cmp
into
cmp
call
cmc
in
xor
mov
jns
imul
push
out
inc
inc
cmp
adc
mov
adc
ins
and
loop
and
call
or
hlt
fcom
retf
cmps
cmp
fist
cmp
dec
xchg
sub
out
xchg
mov
retf
jg
pop
pop
shl
push
jae
ins
(bad)
aaa
gs
jbe
cmp
jmp
hlt
jbe
js
jp
sbb
cwde
mov
mov
shl
push
jle
lods
lock
dec
inc
sub
loopne
dec
imul
ror
aam
mov
(bad)
or
in
je
xchg
inc
and
pop
sbb
pusha
mov
dec
and
push
outs
mov
sbb
addr16
pushf
xor
add
and
ror
ss
mov
xor
inc
pop
imul
dec
cmps
aad
fimul
mov
adc
ds
into
jle
and
xor
retf
dec
xor
(bad)
ret
sub
aaa
jbe
scas
dec
cwde
dec
jp
pop
sbb
mov
addr16
mov
icebp
jbe
sbb
push
push
add
push
jbe
fdiv
sub
and
test
xor
clc
fs
and
clc
dec
xlat
call
dec
pop
pslld
adc
repz
(bad)
adc
lods
movs
cwde
cmp
jo
add
sti
stc
or
clc
cmps
out
sti
imul
shr
ss
push
push
cmp
or
xchg
dec
mov
aas
mov
jns
xor
xchg
fdiv
ret
popa
pop
push
ret
jne
icebp
pop
add
inc
fisttp
mov
call
xor
pop
adc
xor
jo
xor
test
(bad)
jnp
ja
and
inc
push
call
icebp
popa
dec
fdivrp
test
shl
movs
test
ret
sub
dec
push
inc
xchg
xchg
mov
call
iret
mov
mov
mov
sbb
mov
jmp
sahf
dec
pop
scas
outs
mov
nop
push
fcom
int3
loope
icebp
cmp
popa
out
(bad)
push
invd
lods
out
fisttp
out
push
gs
es
adc
mov
pop
sub
jne
mov
ret
inc
mov
mov
iret
enter
mul
inc
fsubp
fmulp
addr16
xchg
cmp
mov
lods
cs
jno
mov
and
dec
fcomp
js
adc
repnz
mov
xchg
call
clc
add
jge
jae
call
jo
push
or
mov
lock
mov
lahf
ret
push
rol
xor
sub
xor
(bad)
rol
test
mov
shr
pusha
es
rcr
jmp
adc
mov
pop
sbb
and
lock
push
xchg
pop
or
dec
jecxz
into
jl
xor
xor
sub
lods
repz
out
cmc
ret
fs
xchg
fidivr
mov
(bad)
stc
sahf
mov
lods
pusha
cmp
sbb
dec
cmp
into
dec
xchg
dec
jb
mov
mov
adc
test
cmp
push
mov
xchg
push
push
inc
mov
inc
mov
xor
jg
repnz
stc
mov
add
push
sbb
xchg
neg
cli
fdivr
sbb
sub
inc
and
jbe
xchg
into
dec
int3
add
adc
idiv
out
call
pop
jno
dec
(bad)
jnp
jb
iret
or
pop
mov
xchg
or
ss
test
or
retf
(bad)
cli
and
rcr
(bad)
adc
add
and
xor
mov
out
adc
(bad)
xchg
mov
jle
ret
pop
int3
pop
lahf
inc
cmps
add
mov
lods
push
aas
aaa
mov
bound
and
pop
push
and
push
cmp
out
popf
push
imul
mov
dec
and
adc
arpl
push
adc
mov
addr16
movs
jb
xor
call
imul
dec
inc
add
lds
imul
sub
sub
xor
xchg
pop
xor
jle
mov
add
dec
push
out
mov
jb
imul
adc
add
ficomp
sub
repz
mov
test
(bad)
daa
test
aad
movs
outs
mov
ret
jg
push
cmp
sti
iret
pop
sbb
shl
scas
fs
and
or
and
jbe
out
fsubr
mov
pop
and
and
(bad)
stos
sub
mov
and
cwde
lea
sbb
xchg
mov
xchg
hlt
cwde
(bad)
aam
pushf
sbb
out
lods
stos
cmps
pop
cmp
(bad)
adc
push
add
xchg
gs
dec
push
pop
push
sbb
or
push
popf
add
std
jnp
retf
xchg
sbb
cmps
lds
stos
retf
pop
sahf
clc
dec
aas
sbb
and
movs
and
lods
jl
jbe
ins
daa
inc
mov
mov
mov
ret
mov
jne
push
and
sub
fwait
js
xlat
pop
adc
mov
lahf
mov
mov
fiadd
outs
ret
(bad)
inc
dec
push
xchg
les
mov
repnz
out
aad
aaa
sub
(bad)
xor
cs
xor
mov
xchg
enter
scas
pop
pop
push
mov
pop
xchg
mov
out
pop
mov
es
inc
dec
jp
xchg
mov
cmp
iret
xor
pop
and
pushf
test
jle
inc
inc
add
sahf
mov
push
imul
aas
or
outs
das
mov
cmp
xor
push
mov
mov
fimul
inc
jne
sub
cmovae
call
add
stos
jns
pop
loop
(bad)
in
fsub
fldcw
repz
jge
jmp
pop
mov
shl
mov
dec
jb
xor
aaa
movs
sub
outs
jl
loope
xor
lahf
push
push
pop
mov
in
mov
cmp
adc
push
scas
jle
xor
pop
jg
dec
mov
push
or
xor
loop
cmp
sbb
dec
and
mov
fsincos
mov
jp
inc
cli
and
cmp
arpl
daa
xor
inc
push
sbb
mov
or
and
push
cmps
mov
xchg
cli
sub
pop
fidiv
mov
xchg
mov
jmp
fs
adc
rcl
into
fbstp
dec
mov
outs
xchg
adc
xchg
jae
stc
loopne
pop
(bad)
pop
aam
pop
jle
and
add
adc
push
in
mov
ret
jno
data16
lahf
jns
loop
sbb
jb
jnp
inc
callw
mov
push
sbb
retf
mov
and
push
pushf
dec
xor
adc
adc
and
cmps
or
jecxz
jnp
movs
(bad)
fscale
imul
and
(bad)
(bad)
and
push
cmc
inc
pop
inc
sar
cdq
xchg
inc
popf
fwait
mov
cmp
sbb
out
dec
lds
push
jb
dec
add
or
add
inc
jmp
jo
lahf
sub
outs
xlat
repz
les
sbb
cmp
jnp
lods
sub
xchg
and
pop
inc
push
jle
stos
xor
into
sahf
test
jg
pop
ja
jnp
xchg
loopne
pop
in
sbb
mov
xor
cwde
inc
shl
or
cld
push
pop
inc
mov
leave
in
pop
(bad)
shl
adc
push
add
test
sub
jbe
pop
fisubr
cli
mov
xchg
outs
add
ret
js
out
inc
pop
dec
sub
and
dec
data16
fwait
idiv
dec
adc
pop
fs
test
stos
out
addr16
repz
leave
sbb
int3
rol
das
and
retf
cmc
popf
mov
jl
dec
call
or
ret
iret
adc
jecxz
(bad)
sti
mov
(bad)
in
out
call
xlat
jbe
mov
pop
adc
jecxz
int
mov
pop
mov
cs
cdq
out
aam
pop
dec
sbb
xchg
dec
cmc
sbb
mov
or
(bad)
in
leave
call
popf
gs
mov
enter
not
mov
sub
mov
mov
jge
loopne
leave
aad
jle
sbb
xor
mov
pop
and
lea
xchg
push
mov
shl
adc
hlt
fs
mov
mov
adc
mov
dec
in
lods
(bad)
lock
cwde
xchg
mov
ss
cmps
or
repnz
inc
jecxz
lods
push
hlt
lock
ret
test
lock
fisubr
and
pop
xor
retf
or
fidivr
add
(bad)
dec
or
adc
mov
movs
les
dec
cwde
icebp
or
cmp
ror
mov
jnp
daa
sbb
lock
enter
movups
lods
mov
enter
icebp
shl
sub
mov
cmc
push
pop
stos
pop
dec
inc
test
(bad)
pop
aas
ret
mov
mov
es
sub
and
jae
xor
lods
mov
add
adc
aam
add
jbe
add
jle
mov
in
mov
jne
bound
and
or
bswap
in
popa
cmps
test
scas
add
addr16
mov
stos
push
sbb
lea
or
mov
test
outs
imul
sbb
outs
lods
scas
inc
shl
fisubr
cmps
xor
jns
test
dec
loop
inc
clc
jecxz
imul
ror
sar
sub
mov
test
in
dec
add
and
mov
unpcklps
push
mov
inc
and
fmulp
cmps
mov
shl
dec
pop
dec
mov
out
pop
sub
sub
add
cmps
repnz
push
pop
out
sahf
cmp
jne
push
pop
imul
scas
shl
aad
inc
xchg
jbe
inc
stc
adc
pusha
test
mov
xchg
jle
mov
test
mov
fimul
cmps
mov
sbb
jmp
push
rcr
sbb
shl
sub
adc
out
pop
jmp
mov
mov
shr
repnz
stos
or
scas
(bad)
adc
sbb
aas
jmp
movs
mov
push
push
and
retf
dec
mov
mov
(bad)
test
and
icebp
(bad)
stc
into
cmps
(bad)
cmp
dec
movs
inc
cs
ficom
out
mov
push
xchg
xor
xchg
sbb
loopne
out
test
inc
xchg
call
mov
jo
sbb
sbb
movs
imul
xor
mov
jge
pushf
mov
ins
mov
cmp
sbb
cli
or
cmps
sbb
mov
push
ins
test
dec
push
mov
and
add
jmp
mov
fstp
aaa
adc
add
push
(bad)
sbb
imul
inc
iret
push
ds
imul
push
and
and
and
(bad)
mul
imul
jbe
pushf
mov
and
sub
dec
xchg
pusha
repz
shl
outs
mov
popf
or
pop
neg
mov
nop
push
daa
shr
lds
xor
sti
ja
(bad)
adc
jmp
shl
dec
ja
sahf
push
ror
mov
or
mov
hlt
inc
mov
or
mov
inc
sub
sahf
fs
mov
mov
and
je
div
add
mov
leave
shl
push
(bad)
aaa
fcmovnbe
aas
sub
loopne
ins
mov
sub
xor
fcmove
and
and
movs
(bad)
popf
xchg
dec
pop
push
mov
idiv
daa
push
aad
jae
inc
cmp
je
mov
push
pushf
clc
repnz
in
int
cmp
scas
cmp
popf
push
data16
dec
sbb
pop
pop
idiv
mov
xchg
cmp
das
xchg
fidivr
or
std
pop
cdq
ds
cld
iret
push
push
inc
ret
test
push
push
out
jne
jmp
mov
lock
nop
jb
mov
repz
dec
fdiv
stc
dec
sub
nop
icebp
les
out
les
mov
fistp
xlat
shl
inc
lea
dec
dec
pop
dec
stos
outs
ja
(bad)
pop
das
mov
pop
pusha
out
jg
repz
dec
mov
jle
adc
xor
sbb
inc
fimul
mov
out
and
rcr
mov
pop
jbe
das
sar
mov
pop
ja
test
je
enter
(bad)
mov
push
sub
int
mov
lods
cmp
nop
or
sbb
xchg
mov
sti
mov
pusha
pop
jbe
das
sar
mov
pop
ja
test
je
enter
(bad)
mov
push
sub
int
mov
cmovnp
outs
adc
xor
dec
mov
pop
dec
bound
les
xor
mov
into
popf
xchg
xchg
in
lahf
mov
adc
aaa
push
sub
cmps
xor
in
(bad)
popa
mov
mov
jmp
ret
clc
cwde
leave
fucomi
jnp
cmps
hlt
shr
aad
fisubr
fidivr
movs
xchg
rol
jle
cmc
xor
cmp
lock
daa
jecxz
int3
mov
sbb
pop
gs
movs
popa
cmp
push
jmp
lods
iret
popf
jns
stc
add
nop
or
pop
call
call
imul
or
not
loopne
es
fcmovnb
iret
cwde
xchg
and
xchg
in
movs
mov
paddd
and
mov
test
sub
les
ins
lods
cmc
push
retf
je
mov
mov
sbb
mov
in
xchg
and
cmc
ror
cmps
xor
cli
int3
daa
sub
fwait
pop
mul
in
icebp
mov
hlt
ret
pushf
icebp
sub
repz
(bad)
mov
push
jl
jne
inc
pop
sbb
sbb
jmp
cmc
(bad)
jle
add
sub
shr
aam
stos
retf
ror
jno
xor
hlt
sbb
stc
mov
ja
ret
jbe
test
enter
cmp
inc
push
sub
shr
aam
stos
retf
ror
jno
xor
hlt
sbb
xor
add
add
add
add
sub
add
push
and
jge
cwde
and
jnp
popa
and
add
add
loopne
(bad)
call
add
add
add
add
sbb
add
add
add
push
and
aam
pop
and
push
cmc
popa
sub
sub
add
adc
or
aas
add
add
add
adc
(bad)
movs
mov
add
add
or
and
add
sub
add
or
and
mov
into
aaa
popa
and
inc
pop
add
add
add
jnp
add
lock
add
(bad)
(bad)
call
add
add
jmp
add
and
in
shr
add
sub
adc
lea
add
add
add
and
sahf
adc
add
add
sub
add
mov
add
or
add
or
and
test
sub
and
andnps
cmps
movs
dec
inc
pop
popa
cmp
call
push
add
add
jae
add
or
add
or
add
or
push
xchg
xor
pop
(bad)
(bad)
inc
and
add
add
pop
lea
add
add
add
add
shl
add
sub
add
or
add
or
push
and
pop
jae
and
ss
cmp
sbb
sub
test
and
out
js
cmps
pop
popa
cmp
(bad)
(bad)
call
sbb
add
adc
and
lahf
repz
pop
and
call
(bad)
dec
adc
sbb
add
sub
adc
add
xor
add
add
add
add
add
add
push
cmp
add
add
sub
sbb
and
inc
int
and
inc
or
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
fild
add
adc
push
add
add
jae
add
or
add
or
pop
and
and
imul
sub
add
and
mov
enter
sub
add
or
and
sub
pop
and
sub
add
or
sub
sbb
add
and
add
add
push
add
or
and
js
cmps
pop
and
and
popa
cmp
(bad)
inc
outs
pop
add
or
and
sub
and
cmp
(bad)
(bad)
jmp
and
add
sub
sub
and
mov
pop
and
xor
pop
popa
cmp
(bad)
(bad)
jmp
call
push
add
or
idiv
(bad)
(bad)
jmp
and
add
sub
add
jns
xlat
and
(bad)
jmp
jecxz
xor
add
add
add
add
add
add
or
jae
add
push
or
lea
add
add
cmp
mov
and
pop
inc
or
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
outs
and
add
adc
outs
push
adc
pop
aas
pop
bound
and
fadd
push
adc
or
or
lahf
xchg
pop
and
fld
sub
sub
mov
mov
popa
cmp
(bad)
inc
or
add
push
adc
and
ins
mov
pop
and
(bad)
(bad)
popa
cmp
(bad)
dec
imul
and
sbb
pop
and
mov
cmp
(bad)
call
add
das
or
repz
and
cmp
(bad)
(bad)
call
push
pop
jae
add
or
pop
adc
and
int3
jg
and
cmp
(bad)
(bad)
call
add
pop
adc
or
(bad)
inc
inc
pop
and
cmp
(bad)
(bad)
inc
or
sbb
add
or
adc
and
mov
mov
jg
popa
cmp
(bad)
(bad)
inc
outs
add
or
or
pop
push
adc
adc
or
add
push
adc
sub
adc
pop
add
add
add
and
add
or
jo
add
lea
add
add
add
daa
add
or
and
cmp
shl
adc
es
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
cmp
add
cld
add
add
add
add
add
rol
add
cmp
add
les
add
push
(bad)
(bad)
jmp
add
add
add
adc
add
bound
add
add
add
add
add
add
add
add
dec
add
add
or
adc
or
and
xchg
test
ret
jmp
cmp
(bad)
(bad)
call
pop
adc
pop
adc
sahf
adc
pop
pop
adc
and
xor
sbb
(bad)
call
pop
adc
xchg
adc
and
test
or
(bad)
call
or
push
and
adc
pop
sbb
adc
cmc
mov
add
push
cwde
popa
or
cmp
(bad)
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
and
pop
mov
push
popa
cmp
adc
sahf
adc
cmp
jmp
lods
popa
cmp
add
or
mov
adc
and
loopne
out
cmp
and
and
cmp
(bad)
call
pop
pop
movups
pop
setne
pop
setne
adc
(bad)
mov
mov
dec
sbb
dec
(bad)
(bad)
call
or
add
add
add
popa
cmp
(bad)
call
or
add
add
add
add
or
(bad)
mov
and
cmp
adc
adc
imul
push
loop
fisub
pop
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
or
sbb
or
or
ja
xlat
outs
pop
and
mov
std
(bad)
call
add
adc
or
push
pop
int3
nop
and
sub
std
(bad)
call
or
adc
or
jo
inc
mov
adc
cmp
and
and
aas
in
lds
mov
(bad)
call
pop
sbb
pop
sbb
sahf
adc
cmp
and
imul
(bad)
call
pop
pop
or
pop
pop
or
or
or
popa
sahf
adc
jmp
ds
and
jge
popa
cmp
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
pop
adc
pop
xchg
or
xchg
popa
sahf
adc
cmp
and
jo
cmps
popa
cmp
adc
or
cmp
sbb
adc
xchg
push
popa
into
pop
and
cmp
cld
(bad)
call
pop
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
dec
enter
and
cmp
cld
(bad)
call
add
pop
adc
or
jmp
push
les
mov
out
popa
cmp
pop
pop
or
xchg
or
or
or
test
and
(bad)
mov
cld
(bad)
call
adc
adc
push
sbb
lea
add
add
or
or
sub
and
cmp
(bad)
dec
or
or
popa
or
mov
pop
cld
(bad)
call
adc
cld
push
xchg
sti
xor
popa
cmp
(bad)
dec
adc
(bad)
add
add
or
sub
add
adc
pop
pop
adc
adc
push
and
jo
popa
cmp
cld
(bad)
dec
or
sbb
or
fs
or
push
mov
pop
and
cmp
sti
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
add
and
cmp
sti
(bad)
call
adc
and
add
adc
add
idiv
and
lock
ret
popa
cmp
or
push
and
adc
push
rcr
pop
pop
adc
adc
pop
adc
adc
jno
sbb
pop
and
cmp
(bad)
call
adc
adc
leave
(bad)
iret
sahf
pop
and
adc
cmp
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
adc
mov
and
jne
sti
popa
cmp
(bad)
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
adc
loopne
test
pop
and
dec
call
(bad)
call
or
push
and
adc
rcr
ja
pop
and
cmp
sti
(bad)
jmp
add
xor
add
add
add
add
adc
and
and
adc
and
mov
and
adc
adc
pop
adc
adc
add
mov
add
add
add
add
add
add
add
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
stos
add
add
pop
push
or
pop
and
lds
ss
sub
add
or
(bad)
sbb
add
sbb
sub
add
or
mov
or
pop
and
cmp
lahf
sbb
scas
popa
cmp
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
cmp
pop
and
xor
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
out
pop
and
cmp
(bad)
(bad)
call
add
adc
adc
and
and
cmp
(bad)
(bad)
inc
outs
push
push
or
mov
and
ret
and
popa
enter
popa
cmp
(bad)
(bad)
call
pop
and
hlt
xchg
sub
sub
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
cmps
icebp
pop
and
retf
popa
cmp
(bad)
call
push
movs
add
add
or
pop
and
and
pop
xchg
push
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
aam
mov
leave
ins
popa
cmp
std
(bad)
call
pop
and
sahf
rcr
push
es
std
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
or
cdq
pop
and
cmp
outs
sbb
or
lock
and
mov
lock
(bad)
inc
outs
sbb
or
or
push
and
inc
sbb
(bad)
call
lea
add
sbb
xchg
mov
and
popa
cmp
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
xor
pop
and
cmp
std
(bad)
jmp
sub
add
jle
add
add
or
add
or
sub
add
add
or
pop
and
and
daa
das
popa
cmp
cld
(bad)
inc
sub
adc
or
retf
add
add
adc
and
and
adc
and
cmp
add
and
pop
inc
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
sub
add
jle
add
add
or
add
or
sub
add
add
or
pop
and
and
dec
add
aas
(bad)
(bad)
call
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
mov
pop
and
cmp
(bad)
(bad)
inc
pop
push
or
pop
and
and
jne
mov
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
sub
add
or
mov
or
pop
and
xor
pop
and
ja
mov
(bad)
inc
outs
pop
push
or
imul
push
and
push
xchg
loop
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
aaa
cld
neg
shl
inc
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
in
and
cmp
std
(bad)
call
pop
and
daa
ja
and
cmp
std
(bad)
inc
sbb
add
pop
and
and
cmp
std
(bad)
inc
outs
sbb
or
jecxz
cmps
cmc
and
stc
and
and
movs
adc
pop
popa
cmp
outs
sbb
or
mov
sub
and
mov
and
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
adc
and
lds
xor
addr16
(bad)
call
push
movs
add
add
or
pop
and
xor
mov
and
dec
jmp
inc
sub
add
xor
add
add
add
add
adc
and
and
aaa
bound
xor
pop
cmp
adc
je
and
pop
inc
adc
add
jnp
add
inc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
sub
add
pop
add
add
add
cmp
add
adc
and
and
sub
or
and
push
and
mov
das
and
outs
sbb
or
add
sub
and
xchg
and
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
sub
add
or
mov
or
pop
and
sub
pop
and
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
sub
add
jle
add
add
or
add
or
sub
add
add
or
pop
and
sub
(bad)
(bad)
call
add
adc
adc
and
add
cmp
stc
shl
popa
cmp
outs
push
push
or
je
add
and
mov
pop
and
ja
dec
lahf
pop
popa
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
and
cmp
(bad)
call
pop
and
adc
xchg
ffreep
push
jae
cmp
(bad)
inc
pop
push
or
pop
and
inc
push
mov
add
(bad)
(bad)
call
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
pop
dec
popa
pop
and
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
leave
icebp
out
and
outs
add
outs
std
(bad)
call
push
movs
add
add
or
pop
and
lea
and
push
shl
std
(bad)
inc
sbb
add
pop
and
popa
cmp
and
pop
jmp
cmp
(bad)
inc
sub
adc
or
cmc
add
add
add
adc
and
enter
and
ins
and
add
pop
push
or
jge
push
jae
mov
and
pop
inc
adc
add
in
add
add
add
add
add
add
add
add
mov
add
cmps
(bad)
(bad)
inc
add
add
add
add
add
add
add
sbb
add
nop
add
add
add
add
add
cmp
add
adc
adc
and
test
pop
pop
and
ins
lea
mov
outs
sbb
or
mov
outs
outs
and
(bad)
and
(bad)
inc
outs
pop
push
or
inc
and
and
dec
add
and
(bad)
dec
push
mov
or
pop
and
and
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
adc
add
outs
sub
add
adc
or
push
adc
and
or
mov
xchg
(bad)
(bad)
jmp
sub
add
jle
add
add
or
add
or
sub
add
add
or
pop
and
and
push
jnp
cmp
(bad)
inc
outs
sbb
or
mov
sub
and
popf
sar
and
push
adc
(bad)
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
and
xchg
push
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
sub
add
adc
and
and
cmp
cmc
std
(bad)
call
push
movs
add
add
or
pop
and
and
and
pop
popa
cmp
std
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
mov
and
pop
push
inc
(bad)
popa
cmp
pop
and
(bad)
leave
sbb
add
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
fwait
lock
cmp
pop
std
(bad)
inc
sbb
add
pop
and
dec
shl
pop
jae
cmp
(bad)
call
lea
add
sbb
mov
out
imul
(bad)
inc
sub
add
adc
or
cmc
add
add
add
adc
and
and
xlat
jp
popa
adc
and
out
inc
or
pop
pop
adc
adc
add
add
add
add
add
add
add
add
add
xor
add
popf
add
add
add
add
add
add
add
add
add
add
test
add
adc
movs
add
add
or
pop
and
fstp
sub
mov
or
mov
or
pop
and
fisttp
pop
and
jae
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
adc
add
outs
sub
add
adc
or
push
adc
and
dec
jb
pop
and
or
popa
cmp
(bad)
(bad)
call
lea
add
sbb
dec
leave
out
and
(bad)
lods
popa
cmp
(bad)
(bad)
inc
pop
push
or
add
adc
adc
and
adc
push
add
int
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
xchg
jae
pop
and
or
jp
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
sub
add
adc
and
cwde
mov
imul
(bad)
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
(bad)
sub
call
cmp
(bad)
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
sti
mov
push
add
push
(bad)
(bad)
inc
outs
sbb
or
sbb
push
and
es
std
(bad)
inc
outs
sbb
or
jl
ins
scas
and
mov
pop
and
sbb
out
popa
cmp
std
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
and
cmp
(bad)
inc
outs
pop
push
or
hlt
jbe
xchg
and
cdq
aas
pushf
and
(bad)
call
pop
and
and
cmp
(bad)
jmp
sub
add
jle
add
add
or
add
or
sub
add
add
or
pop
and
xor
ret
pop
and
test
fisub
and
(bad)
inc
sub
add
adc
pop
add
add
adc
jo
add
or
jo
add
lea
add
add
add
daa
add
or
pop
adc
or
jmp
cmp
popa
and
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
and
add
loope
add
sub
add
popa
add
add
add
pop
add
add
add
int
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
add
add
retf
add
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
hlt
add
pushf
pop
and
loopne
popa
cmp
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
pop
or
pop
pop
or
popa
sahf
adc
sbb
cmp
pop
and
pop
(bad)
(bad)
call
pop
adc
pop
adc
sahf
and
lods
adc
cmp
(bad)
(bad)
call
adc
pop
adc
adc
push
sbb
lea
add
add
or
or
add
shrd
call
add
add
sti
(bad)
rcr
lahf
imul
(bad)
(bad)
call
or
adc
or
test
and
pushf
shl
(bad)
call
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
adc
pop
movups
pop
setne
pop
setne
push
adc
adc
call
and
fs
popa
cmp
(bad)
call
pop
adc
xchg
adc
and
jo
cmp
(bad)
dec
adc
(bad)
add
add
or
sub
add
adc
pop
pop
adc
adc
sub
and
cmps
popa
cmp
(bad)
(bad)
call
adc
and
or
stc
cmp
(bad)
(bad)
jmp
sbb
inc
or
or
in
push
in
and
xchg
xor
cmp
std
(bad)
call
or
xchg
cmc
mov
pop
and
mov
std
(bad)
call
or
push
and
adc
push
rcr
aas
sbb
popa
cmp
std
(bad)
call
add
adc
or
or
sub
and
sbb
cmps
std
(bad)
dec
or
or
movs
inc
stc
cmp
pop
pop
or
xchg
or
or
or
mov
and
outs
cmp
(bad)
call
or
push
and
adc
rcr
hlt
cmc
pop
and
push
jne
popa
cmp
call
add
or
(bad)
and
into
and
sub
fisub
(bad)
call
or
push
and
adc
pop
sbb
adc
mov
in
pop
and
sub
push
popa
cmp
std
(bad)
dec
or
sbb
or
cwde
cmp
mov
add
popa
cmp
cld
(bad)
call
adc
inc
mov
and
jmp
out
(bad)
call
or
push
and
adc
pop
adc
adc
push
dec
jno
and
add
ret
cld
(bad)
call
or
pop
adc
adc
stc
das
and
pop
and
cmp
or
add
add
sub
add
or
sub
add
or
push
or
add
jae
add
or
add
or
or
pop
lods
loopne
pop
and
cmp
(bad)
call
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
adc
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
sahf
adc
sbb
pop
sbb
or
sbb
or
or
fnstcw
icebp
repnz
(bad)
dec
or
sbb
or
add
sahf
adc
pop
adc
or
or
and
iret
movs
and
in
(bad)
call
or
adc
or
mov
sub
and
dec
retf
and
(bad)
call
pop
pop
or
pop
pop
or
or
or
popa
sahf
adc
stc
lea
push
pop
and
loopne
test
test
(bad)
jmp
add
adc
add
push
add
add
add
adc
add
add
xor
add
add
add
or
xor
add
sub
and
xchg
stos
mov
popa
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
push
and
jb
add
or
es
sub
adc
adc
add
or
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
adc
jnp
add
add
or
add
or
jnp
add
add
inc
xchg
add
add
mov
jl
inc
mov
and
inc
or
add
dec
add
add
add
add
add
add
add
add
test
add
ret
add
add
add
cmp
add
add
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
jnp
add
add
add
add
xor
and
sub
and
popa
shl
and
bound
pop
popa
cmp
(bad)
inc
and
add
pop
jge
add
add
mov
pop
(bad)
(bad)
inc
add
add
add
bound
jnp
add
add
and
add
shl
or
add
and
push
(bad)
popa
pop
and
jnp
inc
popa
cmp
(bad)
(bad)
inc
add
add
add
bound
jnp
add
add
and
add
shl
or
add
and
and
or
in
popa
cmp
(bad)
(bad)
inc
push
jge
add
add
and
add
add
add
add
add
add
sbb
add
and
and
mov
popa
cmp
(bad)
(bad)
inc
and
add
bound
add
add
and
ficom
pop
and
inc
popa
cmp
sub
lahf
outs
mov
inc
jnp
add
add
add
add
aaa
or
push
ds
and
jo
and
xlat
popf
push
pop
popa
cmp
(bad)
inc
and
add
bound
add
add
and
outs
add
adc
sub
pop
(bad)
(bad)
call
sub
xor
add
add
add
add
adc
add
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
add
add
adc
or
push
sbb
fisub
or
inc
push
add
add
(bad)
(bad)
dec
add
popa
add
add
add
add
add
add
add
sub
outs
pop
add
add
add
pop
pop
bound
or
ds
mov
and
xchg
lock
jnp
add
add
loopne
add
add
sub
sbb
je
sub
pop
and
pop
xchg
pop
and
mov
mov
and
js
pop
and
dec
sbb
popa
cmp
(bad)
jmp
adc
push
add
add
adc
or
jnp
add
add
and
nop
lahf
ror
and
push
add
add
add
cmp
add
sub
add
add
add
aam
(bad)
call
push
pop
pop
pop
or
and
pop
xchg
pop
and
daa
add
popa
sub
pop
push
xor
and
in
and
add
jl
sub
imul
push
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
pop
or
push
cmp
pop
add
add
add
pop
pop
bound
add
xor
add
add
add
add
adc
or
and
and
pop
jge
and
pop
inc
or
add
sub
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
stos
add
add
or
or
add
aaa
adc
inc
pop
and
icebp
aaa
xor
mov
pop
pop
or
add
imul
pop
and
sub
js
call
mov
push
or
pop
or
pop
pop
pop
bound
adc
ror
out
scas
mov
(bad)
dec
add
add
add
or
sub
repnz
in
mov
push
(bad)
(bad)
inc
pop
bound
adc
mov
enter
popa
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
push
add
push
or
cmp
sbb
(bad)
inc
sub
add
adc
push
add
add
adc
or
or
or
pop
and
jg
cmp
add
pop
inc
push
add
add
(bad)
(bad)
jmp
add
add
add
add
add
inc
add
add
add
add
or
pop
or
add
mov
and
cdq
loopne
sub
pop
or
pop
pop
pop
bound
adc
xor
dec
pop
and
sti
jmp
popa
sub
and
dec
jmp
sub
and
sub
pop
add
add
push
add
push
or
push
or
and
(bad)
(bad)
inc
sub
add
xor
add
add
adc
add
add
add
xor
jle
cmps
(bad)
popa
and
or
add
cmp
add
dec
add
add
add
add
add
add
(bad)
(bad)
inc
nop
add
add
add
add
add
bound
jnp
add
add
and
add
shl
or
add
pop
pop
or
ds
jecxz
(bad)
and
shl
sub
and
jns
and
pop
and
and
adc
add
and
and
jp
popa
cmp
(bad)
inc
push
jge
add
add
and
sub
pop
and
cmp
(bad)
call
or
and
and
retf
sub
cmp
(bad)
jmp
add
add
xor
or
add
add
add
add
sub
xor
add
add
adc
push
and
sahf
call
pop
inc
add
add
push
add
add
add
add
(bad)
(bad)
push
add
add
dec
add
jnp
add
add
bound
jnp
add
add
and
add
shl
or
add
and
add
bound
add
add
popa
out
cmp
scas
add
add
add
add
add
aaa
or
mov
sub
and
sub
push
add
add
or
add
add
add
add
add
add
add
push
or
or
jb
inc
jecxz
and
pop
inc
or
add
or
add
mov
add
add
add
mov
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
pop
push
pop
pop
pop
adc
push
adc
pop
pop
pop
or
add
push
jle
popa
sub
pop
pop
call
push
(bad)
popa
sub
add
add
pop
jge
add
add
add
cmps
pop
and
or
push
push
xor
and
lds
mul
sub
cmp
(bad)
inc
push
bound
jnp
add
add
and
add
shl
adc
mov
and
dec
shl
(bad)
(bad)
dec
pop
pop
or
jecxz
push
(bad)
(bad)
dec
pop
bound
adc
pusha
or
and
add
add
or
or
jmp
lock
and
mov
dec
jp
popa
cmp
(bad)
(bad)
inc
or
loope
(bad)
pop
and
sub
(bad)
inc
pop
or
shl
xchg
cmp
(bad)
(bad)
inc
push
bound
adc
jmp
and
jp
cmp
sub
add
adc
add
pop
add
add
add
adc
sub
add
xor
jmp
add
or
add
add
rol
add
lea
add
add
add
add
and
add
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
sbb
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
push
jge
add
add
sub
adc
add
or
sbb
jnp
add
add
pop
add
add
sldt
push
add
pop
pop
or
push
push
fild
add
xor
add
add
adc
jnp
add
add
cmp
adc
(bad)
outs
mov
pop
inc
add
(bad)
(bad)
jmp
add
inc
add
add
add
add
add
add
data16
jge
add
add
add
add
add
sub
add
or
add
add
and
(bad)
shl
arpl
mov
jnp
add
add
outs
das
add
push
pop
and
xor
add
popa
sub
add
add
add
sub
add
or
pop
and
mov
mov
sar
jmp
add
add
xor
add
add
adc
jnp
add
add
add
and
add
adc
add
add
add
adc
add
pop
pop
bound
add
add
add
outs
and
add
add
add
add
outs
and
add
add
pop
pop
jge
add
add
add
add
xor
add
add
add
add
add
outs
adc
add
and
test
sbb
popa
and
inc
sbb
add
out
add
fiadd
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
mov
add
inc
add
add
add
add
(bad)
call
add
add
add
dec
add
add
add
add
add
pop
add
add
mov
add
add
add
add
loopne
add
add
sub
jnp
add
add
loopne
add
add
sub
and
loop
pop
and
cmp
popa
cmp
(bad)
call
or
and
ins
aam
pop
and
or
clc
popa
cmp
or
and
mov
cmp
(bad)
(bad)
dec
and
and
pop
(bad)
(bad)
inc
jnp
add
add
add
push
or
and
push
cmp
and
mov
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
pop
pop
or
and
xor
pop
and
das
cmc
or
sar
(bad)
inc
pop
jb
or
or
push
and
out
leave
and
(bad)
call
or
and
and
cmp
jnp
add
add
and
add
or
cdq
jb
(bad)
pop
and
outs
cmp
popa
cmp
pop
or
or
ins
ds
out
sub
and
cmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
pop
pop
or
and
push
push
pop
and
inc
popa
cmp
(bad)
call
or
sub
cmc
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
and
ja
cmp
pop
inc
gs
cmp
(bad)
(bad)
dec
and
and
mov
pop
popa
cmp
jl
add
add
adc
add
or
(bad)
xlat
pop
and
cmp
std
(bad)
inc
jnp
add
add
add
add
add
xor
add
or
cmp
and
xor
inc
pop
pop
or
and
push
xor
pop
and
push
pusha
or
scas
std
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
popa
xor
add
add
add
and
add
or
jge
xchg
xor
inc
int3
xor
cmp
(bad)
inc
sbb
pop
or
jnp
add
add
loopne
add
add
sub
add
std
(bad)
inc
add
add
add
or
test
push
and
lea
and
(bad)
inc
sbb
and
mov
test
and
(bad)
inc
jnp
add
add
loopne
add
add
sub
pop
pop
or
(bad)
fwait
sub
cmp
cld
(bad)
jmp
adc
or
inc
or
add
add
sbb
cmp
addr16
imul
pop
inc
cmp
add
cld
add
add
and
add
fwait
push
add
jp
add
mov
add
arpl
add
and
add
cmp
add
pop
add
add
add
add
call
add
add
add
add
sub
add
add
add
outs
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
dec
push
add
push
add
add
sub
add
data16
add
add
add
push
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
add
push
add
add
add
adc
add
in
add
add
add
cmps
push
add
cmp
add
or
inc
cmp
(bad)
(bad)
call
add
cmp
add
adc
and
ret
pop
and
jne
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
add
jnp
add
add
outs
xor
sub
add
adc
adc
and
and
cmp
or
mov
rcl
mov
popa
cmp
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
sub
sub
sub
and
adc
and
jmp
jmp
(bad)
(bad)
call
add
adc
adc
and
popa
je
pop
and
jecxz
in
cmp
(bad)
call
or
adc
and
and
ficom
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
sub
fdiv
and
enter
es
std
(bad)
dec
adc
push
stc
ss
inc
jnp
add
add
jnp
add
add
push
outs
sub
add
adc
add
add
add
pop
outs
xor
add
adc
and
push
imul
add
pop
push
cmp
jnp
add
add
jnp
add
add
or
add
push
sbb
or
fdivr
loopne
cmp
(bad)
dec
adc
mov
enter
and
cmp
(bad)
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
push
add
push
sub
and
mov
push
and
push
leave
imul
pop
popa
cmp
std
(bad)
call
mov
cmp
movs
pop
and
cmp
xor
and
sub
and
dec
mov
cld
cld
(bad)
inc
add
add
add
push
sbb
pop
add
push
sbb
or
add
add
jnp
add
add
adc
add
pop
or
mov
retf
call
mov
jle
fcomp
test
imul
cmp
add
add
out
push
jae
and
call
popf
cld
(bad)
dec
add
push
adc
and
outs
das
sub
sub
adc
and
cli
ins
mov
cld
(bad)
inc
jnp
add
add
jnp
add
add
outs
xor
xor
add
adc
and
rol
sbb
imul
adc
sub
add
push
adc
and
fbld
mov
xor
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
pop
or
mov
stos
gs
and
stc
sbb
(bad)
call
add
add
add
adc
and
mov
ins
cmp
sti
(bad)
inc
jnp
add
add
xor
add
and
fdivr
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
pop
or
jg
scas
(bad)
sub
and
dec
aas
and
(bad)
call
mov
cli
call
cmp
cmp
add
adc
add
pop
pop
and
cmp
jne
(bad)
inc
add
add
add
or
retf
mov
and
in
call
ins
or
dec
sti
(bad)
call
push
add
mov
hlt
pop
and
xchg
push
popa
cmp
sti
(bad)
call
mov
dec
mov
dec
or
popa
cmp
adc
mov
mov
imul
adc
scas
cmp
sti
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
sub
pop
pop
and
sahf
cmps
inc
and
out
xchg
aam
popa
cmp
cli
(bad)
call
adc
push
pop
pop
pop
bound
adc
and
jmp
add
mov
lahf
pop
ins
pop
popa
cmp
add
and
jle
sub
and
sub
and
(bad)
call
add
aaa
add
push
adc
and
and
fwait
jae
popa
cmp
(bad)
call
add
or
adc
sti
adc
inc
cmp
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
push
add
push
adc
sub
add
push
adc
and
test
push
pop
and
rol
cmp
jnp
add
add
outs
xor
or
add
cmp
add
sub
pop
push
and
sbb
and
loopne
xchg
pop
popa
cmp
stc
(bad)
call
add
add
outs
xchg
and
xor
lock
stc
(bad)
dec
or
xlat
inc
fcomp
lea
xor
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
push
add
push
sub
and
and
inc
push
push
and
(bad)
call
mov
push
cwde
and
sub
stc
(bad)
inc
or
add
add
add
jnp
add
add
or
add
push
pop
adc
adc
sub
add
push
adc
and
addps
pop
and
pop
rcl
cmp
stc
(bad)
call
mov
jne
scas
pop
and
dec
into
popa
cmp
jnp
add
add
xor
add
adc
and
shl
mov
(bad)
call
mov
movs
fisttp
and
mov
(bad)
call
add
add
adc
je
mov
popa
cmp
clc
(bad)
inc
jnp
add
add
jnp
add
add
add
sub
add
adc
and
mov
jnp
add
add
or
add
push
adc
sub
add
push
and
ret
call
add
add
adc
outs
xor
add
and
cdq
js
cmp
outs
adc
ret
pop
push
and
and
push
or
jp
xor
pop
clc
(bad)
inc
jnp
add
add
or
and
add
loopne
add
add
add
add
add
adc
add
adc
or
push
sub
mov
sub
and
adc
and
push
imul
cmp
clc
(bad)
call
or
adc
adc
and
and
push
jae
cmp
idiv
inc
jnp
add
add
adc
mov
sub
mov
and
data16
cmp
idiv
call
or
or
mov
rol
and
cmp
idiv
jmp
adc
push
add
add
add
add
adc
push
xchg
pop
or
and
bound
pop
xor
adc
pop
or
or
add
stos
add
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
rol
add
push
xchg
pop
or
adc
and
and
and
popa
sub
adc
push
pop
pop
pop
pop
bound
add
add
and
(bad)
adc
iret
mov
push
and
inc
leave
jb
cmp
(bad)
inc
sbb
pop
sbb
push
adc
adc
push
inc
clc
pop
and
test
push
(bad)
(bad)
inc
or
sub
add
push
add
sub
add
adc
and
and
sar
pop
popa
cmp
(bad)
(bad)
call
push
and
sub
jnp
adc
cmp
(bad)
(bad)
inc
adc
sbb
add
adc
and
add
and
inc
sbb
popa
cmp
adc
add
pop
add
add
add
adc
sbb
add
dec
jns
xchg
and
fs
popa
and
add
add
fdivr
(bad)
call
add
add
add
add
add
add
add
xor
and
mov
and
xchg
xor
pop
mul
pop
popa
sub
add
push
and
rol
and
aaa
js
sub
xor
xchg
add
pop
add
adc
jnp
add
add
sub
sbb
es
adc
and
add
add
fdivr
(bad)
call
add
cmp
add
add
push
add
add
add
loopne
add
add
sbb
add
push
add
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
pop
or
pusha
mov
dec
sub
inc
into
ret
sub
and
sub
add
add
add
xor
rol
add
pop
add
adc
jl
add
add
or
sub
jmp
xor
popa
and
pop
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
jle
or
and
mov
pop
pop
and
rep
movs
popa
sub
push
pop
pop
or
and
pop
sbb
pop
and
outs
ror
add
add
add
or
pop
add
mov
sub
lds
jnp
add
add
loopne
add
add
sub
add
push
and
push
mov
jns
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
pop
and
xchg
xchg
cdq
pop
and
cmp
(bad)
inc
jl
add
add
or
jl
add
add
adc
add
sub
add
xor
add
add
adc
jl
add
add
sub
add
push
cmp
add
add
mov
mov
dec
lock
popa
and
or
add
int3
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
loopne
add
add
add
adc
add
pop
or
and
and
and
pop
and
and
push
mov
jl
add
add
sub
add
push
sub
and
int3
adc
aas
stc
dec
and
fst
popa
cmp
(bad)
inc
jnp
add
add
loopne
add
add
add
adc
add
sub
and
cmc
mov
and
xchg
mov
(bad)
inc
push
pop
or
add
add
sub
add
push
pop
or
(bad)
adc
(bad)
(bad)
call
or
ror
and
pop
(bad)
(bad)
inc
sub
add
adc
add
inc
add
add
add
adc
pop
adc
lea
add
add
add
add
pop
adc
lea
add
add
add
add
jl
add
add
adc
add
add
adc
add
jae
add
push
jge
add
add
sub
add
xor
add
add
adc
jnp
add
add
or
add
and
push
push
and
and
pop
or
add
add
add
add
add
add
add
add
add
rol
add
and
add
mov
(bad)
(bad)
cmp
add
dec
add
add
add
add
xor
add
add
add
add
or
outs
push
movs
hlt
and
mov
movs
and
jecxz
or
sub
add
xor
and
pop
outs
loopne
sub
and
sbb
and
popa
cmp
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
push
and
push
(bad)
(bad)
inc
push
xor
and
or
dec
and
mov
xor
(bad)
inc
add
and
add
add
add
jnp
add
add
pop
pop
pop
bound
or
scas
xchg
push
and
popa
cmp
(bad)
(bad)
jmp
or
add
test
std
(bad)
(bad)
inc
add
add
add
inc
pop
jle
cmp
(bad)
(bad)
inc
push
loopne
or
add
jge
add
add
or
and
pop
sahf
mov
and
popa
dec
pop
popa
cmp
(bad)
(bad)
dec
and
into
push
movs
pop
and
cmp
pop
add
pop
pop
bound
pop
jge
add
add
and
jne
pop
and
sub
(bad)
inc
pop
pop
or
and
and
ss
movs
popa
cmp
add
adc
add
add
add
adc
add
add
add
jnp
add
add
pop
pop
pop
bound
push
or
and
out
cmp
repnz
and
add
(bad)
(bad)
call
add
add
add
add
add
xor
add
sub
push
xor
and
cmc
into
and
ins
and
add
add
add
loopne
or
add
sub
add
pop
pop
pop
or
dec
imul
sub
jno
pop
and
stc
addr16
popa
sub
adc
push
add
add
add
add
adc
add
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
add
add
add
add
adc
jnp
add
add
add
sub
add
push
loopne
or
add
add
sub
add
xor
add
add
adc
jnp
add
add
add
sub
add
push
loopne
or
add
add
add
add
push
sub
add
adc
add
adc
add
add
add
add
add
add
lea
add
add
add
add
add
add
xor
test
add
or
add
push
or
or
fldenv
adc
ja
popa
and
push
add
add
(bad)
(bad)
call
add
add
add
add
add
sub
pop
pop
or
and
and
sub
add
add
add
pop
add
add
or
adc
sbb
pop
mov
pop
and
mov
popa
sub
add
xor
and
sub
and
retf
retf
and
adc
add
add
add
adc
or
inc
sbb
and
or
mov
pop
inc
add
add
fdivr
(bad)
jmp
add
add
add
add
add
sub
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
pusha
or
fld
push
and
add
add
or
sti
cdq
sahf
jle
sub
and
sahf
out
and
and
ins
pop
popa
sub
adc
add
add
add
pop
or
addr16
out
jecxz
fadd
dec
repz
and
inc
or
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
jmp
add
add
add
add
push
pop
bound
pusha
or
and
push
call
xchg
popa
sub
add
aaa
or
mov
(bad)
xchg
and
sbb
push
and
add
add
or
and
loope
and
xchg
out
jecxz
cmp
(bad)
dec
and
pushf
sbb
xchg
adc
jmp
cmp
(bad)
dec
and
(bad)
bound
push
(bad)
(bad)
inc
(bad)
adc
or
ins
arpl
pop
and
outs
jno
cmp
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
push
add
push
or
and
xchg
sub
fbld
or
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
push
add
push
pusha
or
mov
out
(bad)
inc
and
repz
cmp
(bad)
(bad)
inc
or
or
or
push
and
div
and
pop
leave
cmp
cmp
shr
add
xor
jnp
add
add
add
add
add
add
cs
and
mov
inc
or
add
and
add
add
add
add
add
(bad)
(bad)
push
add
push
add
add
inc
add
loopne
sub
add
jge
add
add
and
and
sub
add
add
and
jb
pop
and
push
jl
sub
add
add
jmp
pushf
sub
add
add
add
xor
add
add
add
adc
sub
add
push
add
jge
add
add
inc
adc
int3
(bad)
jecxz
and
add
(bad)
(bad)
push
add
push
add
add
add
add
add
sub
sub
and
cs
or
push
and
adc
popa
sub
add
add
and
and
mov
add
jge
add
add
and
shr
pop
and
dec
dec
dec
popa
sub
add
add
add
add
adc
sub
add
push
add
add
add
add
imul
add
add
add
add
add
imul
sub
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
or
sub
jle
and
add
popa
and
pop
add
add
add
mov
add
cmp
add
sar
(bad)
inc
add
add
add
add
test
add
add
jge
add
add
and
jno
pop
and
sub
add
jnp
add
add
jnp
add
add
outs
aaa
add
or
inc
call
and
adc
pop
and
add
sub
add
add
sub
add
adc
cmp
(bad)
inc
jnp
add
add
jnp
add
add
or
outs
mov
ret
and
push
cmp
and
inc
xchg
popa
pop
popa
cmp
(bad)
jmp
adc
or
ins
add
add
add
adc
jnp
add
add
pop
pop
pop
or
jo
mov
and
add
and
or
or
inc
or
add
add
add
add
add
add
add
aam
add
icebp
add
add
add
sbb
add
bound
add
mov
add
add
add
add
push
add
add
add
add
add
or
push
retf
cmp
cmps
cmps
imul
pop
popa
sub
test
mov
jle
popa
sub
add
add
or
and
(bad)
ins
pop
and
and
cmp
(bad)
inc
pop
adc
and
xchg
imul
add
xor
add
or
pop
cmp
pop
and
sbb
popa
cmp
(bad)
inc
jnp
add
add
jnp
add
add
or
jae
sbb
and
sti
rcl
hlt
stos
sub
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
and
ret
mov
cmp
(bad)
(bad)
inc
add
add
add
or
imul
and
jmp
inc
and
(bad)
dec
and
pop
inc
stos
pop
and
pmulhuw
cmp
push
or
test
jmp
and
sbb
dec
and
(bad)
jmp
adc
push
add
add
pop
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
pushf
and
gs
cmps
and
shr
popa
and
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
cmp
jnp
add
add
jnp
add
add
or
jns
lods
inc
and
pop
or
pop
and
popa
sub
add
pop
and
out
jg
and
scas
stos
shl
mov
adc
add
jne
add
pop
add
adc
jnp
add
add
pop
pop
pop
or
aas
push
jae
and
push
xchg
mov
pop
inc
add
add
cmp
add
and
add
add
add
fdivr
(bad)
jmp
cmp
add
add
add
or
test
mov
sub
and
pop
aam
and
xchg
sbb
popa
sub
add
add
or
and
and
js
popa
sub
add
loopne
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
add
add
adc
jnp
add
add
xor
and
push
dec
and
sbb
or
inc
push
add
add
add
add
add
add
sbb
add
add
add
aam
(bad)
jmp
bound
push
jge
add
add
and
and
sub
sub
and
and
mov
and
add
pop
jge
add
add
push
and
and
sub
add
or
and
lods
sbb
sub
and
mov
cmp
(bad)
inc
and
add
pop
jge
add
add
adc
add
add
add
adc
add
add
add
aaa
add
or
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
jge
add
add
add
add
xor
add
add
adc
add
add
add
aaa
add
or
add
or
add
add
add
adc
add
or
add
add
add
add
add
add
inc
xor
add
add
add
add
adc
mov
add
add
sub
add
adc
add
jae
add
adc
add
add
add
aas
add
push
or
iret
mov
sahf
push
and
or
pop
inc
add
add
add
add
add
(bad)
(bad)
inc
add
sub
ds
jle
add
or
cmp
add
sub
add
xlat
pop
and
rcl
call
mov
adc
sub
add
or
add
or
xchg
out
movs
dec
sub
xor
add
add
add
add
adc
add
add
or
or
outs
jns
sti
and
and
pop
inc
or
add
add
add
add
add
add
(bad)
(bad)
jmp
add
inc
add
add
add
add
xchg
add
add
adc
and
std
pop
and
ror
popa
sub
and
and
push
iret
in
popa
sub
inc
sbb
pop
and
in
pushf
popa
sub
inc
mov
test
sub
bnd
sub
and
jg
adc
and
call
(bad)
(bad)
inc
push
pop
add
xchg
add
add
rcr
cmp
(bad)
inc
pop
pop
or
add
scas
repz
fmul
cmp
(bad)
dec
sub
adc
push
add
add
add
add
adc
and
add
add
or
aaa
mov
mov
lea
or
add
add
add
add
(bad)
(bad)
jmp
add
add
add
cmp
add
cmp
cmp
add
and
add
add
pop
inc
sub
add
or
and
and
stos
fwait
or
sub
cs
pop
and
sub
add
sub
add
or
cmp
add
je
add
add
or
inc
mov
push
push
mov
cmp
(bad)
inc
jle
add
or
cmp
add
push
inc
or
sub
and
aas
or
and
shl
pop
and
jo
or
cmp
or
jno
es
movaps
sub
(bad)
inc
push
pop
push
mov
cmp
add
and
or
mov
adc
add
add
xor
add
add
add
add
adc
sub
add
add
jle
add
add
fs
add
add
add
push
adc
add
or
cmp
dec
mov
inc
mov
popa
and
pop
inc
or
add
stos
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
add
push
add
add
add
add
sub
push
or
mov
cmp
add
and
cmp
sub
dec
int
mov
and
sub
add
or
mov
and
xchg
mov
popa
cmp
(bad)
inc
adc
and
sbb
xlat
adc
arpl
(bad)
call
add
push
push
push
outs
push
add
push
add
or
xchg
nop
pop
and
push
or
(bad)
dec
rcl
add
add
adc
add
sub
add
or
add
adc
or
inc
mov
retf
das
popa
cmp
(bad)
(bad)
call
lea
add
add
push
adc
push
pop
inc
pushf
adc
or
add
or
add
add
imul
pop
inc
sub
add
or
or
fwait
add
fs
and
cmp
(bad)
(bad)
dec
jle
add
or
cmp
add
push
inc
adc
adc
sub
fwait
(bad)
sub
and
mov
or
cmp
xchg
(bad)
(bad)
jmp
cs
mov
add
add
sub
add
and
add
add
rcl
add
add
adc
add
sub
add
je
add
add
adc
and
pop
ret
and
mov
popa
cmp
(bad)
(bad)
fiadd
add
fadd
and
mov
inc
mov
popa
and
inc
add
add
or
add
add
add
(bad)
(bad)
jmp
or
and
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
xor
add
add
xor
add
add
add
add
adc
sub
add
or
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
pusha
add
add
jle
add
push
add
mov
push
je
imul
add
push
add
adc
add
and
dec
inc
add
add
push
add
rol
and
outs
bound
add
add
add
add
add
push
fld
cmp
push
add
add
and
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
pop
add
push
add
add
or
pop
packsswb
push
add
add
add
add
push
add
add
add
inc
add
push
add
inc
pop
add
add
pop
add
add
pop
add
add
popa
add
add
pop
add
add
add
add
inc
pop
add
add
inc
cli
inc
push
add
inc
pop
add
add
inc
popa
add
add
cli
inc
push
add
mov
add
add
inc
add
push
add
inc
cli
inc
push
add
inc
cli
inc
push
add
inc
popa
add
add
inc
pop
add
add
add
add
push
add
add
push
add
add
push
add
add
add
inc
mov
push
add
inc
arpl
push
add
inc
add
push
add
add
push
add
popa
add
add
add
push
add
add
push
add
add
add
inc
add
push
add
inc
add
push
add
add
push
add
add
push
add
inc
push
add
add
add
add
add
add
add
or
add
add
or
add
add
or
or
adc
add
adc
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
sub
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
iret
cmp
xor
dec
add
add
add
add
sub
xor
push
add
add
add
add
sub
xor
push
add
add
add
add
sbb
xor
pop
add
add
add
aas
add
adc
add
add
add
add
adc
add
add
add
inc
add
xor
add
add
add
add
add
add
add
add
add
add
add
bound
and
stc
or
add
call
add
add
add
push
jp
and
fst
bound
and
push
adc
and
into
adc
and
dec
adc
and
(bad)
adc
and
inc
adc
add
add
add
adc
mov
xchg
add
add
push
bound
and
stos
push
xchg
add
add
pop
call
add
add
sbb
sbb
add
pop
sbb
add
xchg
sbb
sbb
and
gs
xchg
add
add
push
xchg
add
add
int
add
fstp
int
add
push
and
and
add
cmp
fadd
add
mov
add
add
and
add
add
add
sub
add
cli
sub
add
add
pop
add
add
sub
add
outs
sub
add
add
sub
add
add
pop
add
add
sub
push
adc
add
mov
add
add
cmp
add
repz
add
xchg
sbb
add
hlt
or
add
xchg
add
ins
cmc
or
add
xchg
add
add
add
add
add
add
add
or
add
xchg
add
add
or
add
xchg
add
add
or
add
xchg
add
add
dec
add
add
xchg
add
add
push
or
add
xchg
add
add
xor
or
add
xchg
add
dec
add
add
or
add
add
add
add
adc
add
xchg
add
push
add
add
or
add
add
or
add
add
or
add
add
or
add
or
add
sbb
add
add
cmp
or
add
add
or
add
add
adc
add
add
or
add
add
add
add
add
add
add
add
push
or
add
add
movd
add
or
or
add
add
(bad)
add
add
or
add
add
adc
add
add
add
add
add
sbb
add
sbb
add
add
add
or
add
sbb
add
add
add
or
add
add
sbb
sbb
add
add
sbb
sbb
add
add
sbb
add
sbb
or
add
add
sbb
push
or
add
add
sbb
add
add
add
sbb
add
add
add
add
add
sub
add
add
and
sub
add
add
and
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
and
je
or
add
add
and
add
or
add
add
fld
add
xor
or
add
add
es
add
pop
sub
add
daa
jmp
add
adc
or
add
sbb
add
add
add
add
add
add
add
add
add
cs
add
add
sub
add
add
add
add
add
xor
add
add
sub
cwde
xor
add
add
sub
and
or
add
add
or
add
pusha
xor
add
add
or
add
cmp
or
add
add
das
or
add
mov
or
add
add
das
push
add
add
or
add
add
xor
add
add
sbb
add
sbb
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
xor
add
xor
add
add
xor
add
xor
add
add
sbb
add
xchg
inc
add
add
add
or
add
xchg
sbb
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
ss
add
xchg
add
cmp
add
add
cmp
or
test
or
add
xchg
add
dec
add
add
xchg
add
cmp
add
add
add
add
add
sbb
add
xchg
inc
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
ins
cmp
jge
add
add
pop
cmp
gs
ins
cmp
jge
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
dec
add
add
push
add
add
push
add
add
popa
add
add
dec
add
add
push
add
add
push
add
add
popa
add
add
add
add
add
cmp
add
add
add
add
add
add
jecxz
add
add
in
add
add
jecxz
add
add
in
add
add
scas
cmp
mov
add
add
enter
add
add
add
add
add
add
add
dec
add
add
arpl
add
add
push
add
add
add
dec
add
add
arpl
add
add
push
add
add
add
add
add
add
cmp
or
adc
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
leave
add
in
add
add
rol
add
icebp
add
add
add
stc
add
or
dec
add
sub
and
jl
xor
sub
push
cmp
mov
add
add
pop
add
add
inc
add
add
add
add
inc
push
add
add
inc
pop
add
add
inc
add
add
inc
imul
add
inc
sbb
cmp
add
add
inc
jo
inc
add
ret
add
inc
mov
inc
add
mov
cmp
cmp
cmp
ds
fwait
add
pop
inc
mov
jno
pop
dec
add
add
add
inc
jmp
jns
aad
icebp
add
add
inc
stc
add
add
inc
inc
add
mov
inc
add
add
sbb
das
inc
adc
add
inc
inc
push
add
add
or
xchg
add
cmp
inc
outs
add
add
add
inc
inc
test
add
add
add
add
add
add
or
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
add
add
lods
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
jecxz
mov
push
add
add
add
add
add
add
add
add
add
ror
add
add
add
add
add
add
push
adc
add
add
or
add
adc
add
je
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
int
inc
add
add
add
inc
add
add
add
add
xchg
cmp
add
push
and
add
add
repnz
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
str
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jbe
add
add
outs
gs
push
gs
add
arpl
ins
imul
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
jb
push
jne
jo
gs
dec
ins
fs
jae
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
fs
gs
or
(bad)
loop
(bad)
loop
mov
sub
loop
mov
sub
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
mov
sub
mov
or
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
mov
sub
sub
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
sub
mov
sub
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
loop
mov
or
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
add
arpl
outs
jb
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
or
lods
loop
mov
sub
mov
sub
loop
scas
add
or
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
or
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
sub
mov
sub
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
add
sub
scas
loop
scas
loop
mov
sub
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
mov
or
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
scas
loop
scas
add
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
or
scas
loop
scas
loop
mov
or
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
add
sub
lods
loop
scas
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
mov
or
scas
loop
mov
sub
sub
stos
loop
(bad)
loop
mov
or
loop
(bad)
loop
scas
loop
lods
loop
mov
or
mov
sub
loop
mov
or
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
mov
sub
mov
sub
sub
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
scas
loop
mov
or
mov
sub
or
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
or
stos
loop
scas
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
jns
je
ins
add
sub
lods
loop
mov
sub
scas
loop
mov
or
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
or
scas
add
ins
jne
push
jns
gs
sub
(bad)
loop
mov
or
loop
stos
loop
mov
or
mov
sub
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
mov
sub
mov
or
(bad)
loop
stos
loop
stos
loop
mov
sub
sub
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
sub
loop
mov
or
lods
loop
mov
sub
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
add
sub
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
stos
loop
stos
loop
scas
add
or
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
scas
loop
mov
or
loop
lods
loop
mov
or
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
loop
lods
loop
mov
or
lods
loop
scas
loop
scas
loop
mov
or
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
stos
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
mov
or
loop
mov
sub
stos
loop
mov
or
lods
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
add
sub
(bad)
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
mov
or
stos
loop
mov
sub
mov
or
scas
loop
stos
loop
stos
loop
mov
or
scas
loop
mov
sub
mov
sub
(bad)
loop
scas
add
sub
mov
or
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
(bad)
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
add
sub
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
or
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
add
push
arpl
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
sub
(bad)
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
mov
or
scas
loop
lods
loop
scas
loop
scas
loop
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
scas
add
or
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
mov
or
loop
mov
sub
mov
sub
popa
ins
add
jae
gs
cs
dec
add
or
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
or
lods
loop
stos
loop
scas
loop
mov
sub
add
sub
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
mov
or
lods
loop
(bad)
loop
mov
sub
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
or
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
sub
mov
sub
scas
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
mov
sub
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
sub
lods
loop
scas
loop
scas
loop
mov
sub
scas
add
sub
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
mov
sub
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
scas
add
sub
stos
loop
mov
sub
stos
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
or
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
add
sub
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
scas
add
or
lods
loop
mov
sub
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
lods
loop
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
stos
loop
mov
or
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
add
or
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
or
scas
loop
(bad)
loop
lods
loop
scas
add
sub
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
(bad)
loop
scas
loop
scas
add
sub
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
mov
sub
scas
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
mov
sub
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
mov
or
scas
loop
scas
loop
stos
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
or
mov
sub
loop
mov
sub
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
or
stos
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
mov
or
scas
loop
(bad)
loop
lods
loop
mov
or
stos
loop
scas
loop
scas
add
sub
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
mov
sub
or
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
mov
or
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
mov
or
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
or
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
mov
or
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
add
or
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
mov
sub
mov
sub
mov
sub
mov
or
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
sub
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
or
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
mov
sub
mov
or
scas
loop
mov
sub
loop
lods
loop
stos
loop
scas
add
or
scas
loop
mov
sub
stos
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
add
sub
mov
or
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
mov
or
mov
or
loop
scas
loop
mov
sub
loop
mov
sub
(bad)
loop
stos
loop
mov
sub
or
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
add
sub
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
or
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
or
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
lods
loop
scas
add
or
scas
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
mov
sub
loop
mov
or
mov
or
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
or
lods
loop
stos
loop
stos
loop
mov
sub
mov
or
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
scas
add
sub
mov
or
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
sub
scas
loop
mov
or
loop
lods
loop
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
scas
add
sub
scas
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
mov
sub
lods
loop
mov
or
mov
or
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
scas
add
sub
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
or
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
loop
mov
or
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
lods
loop
lods
loop
mov
or
lods
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
or
scas
add
sub
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
add
sub
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
mov
or
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
or
loop
mov
or
sub
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
or
sub
scas
loop
scas
loop
mov
sub
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
scas
add
sub
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
sub
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
or
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
or
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
mov
sub
sub
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
mov
sub
scas
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
mov
sub
lods
loop
lods
loop
scas
add
sub
mov
or
stos
loop
scas
loop
scas
loop
scas
loop
mov
or
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
add
or
(bad)
loop
stos
loop
mov
sub
mov
sub
stos
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
mov
or
scas
loop
mov
sub
loop
mov
sub
scas
loop
scas
add
sub
lods
loop
mov
sub
lods
loop
stos
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
mov
sub
sub
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
mov
or
mov
or
lods
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
add
or
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
scas
add
sub
mov
sub
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
mov
sub
mov
sub
scas
add
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
scas
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
mov
or
loop
mov
sub
lods
loop
lods
loop
mov
or
lods
loop
(bad)
loop
stos
loop
(bad)
loop
mov
or
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
add
sub
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
scas
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
scas
add
sub
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
mov
sub
sub
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
mov
or
mov
sub
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
add
or
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
or
scas
loop
mov
sub
(bad)
loop
stos
loop
scas
add
or
(bad)
loop
mov
or
stos
loop
lods
loop
mov
sub
mov
sub
stos
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
or
scas
add
or
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
or
scas
loop
lods
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
loop
mov
or
stos
loop
stos
loop
scas
loop
scas
add
sub
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
scas
add
sub
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
lods
loop
mov
sub
mov
sub
lods
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
sub
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
mov
or
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
add
sub
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
mov
or
stos
loop
(bad)
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
or
mov
or
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
mov
or
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
mov
sub
lods
loop
stos
loop
scas
add
sub
lods
loop
mov
or
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
add
or
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
or
sub
mov
or
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
stos
loop
scas
loop
mov
sub
mov
or
loop
mov
or
loop
lods
loop
lods
loop
mov
sub
or
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
mov
or
(bad)
loop
stos
loop
scas
add
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
sub
mov
or
add
or
mov
sub
loop
mov
sub
mov
sub
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
loop
mov
sub
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
add
or
lods
loop
mov
sub
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
mov
or
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
mov
sub
or
scas
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
mov
sub
mov
or
loop
stos
loop
stos
loop
lods
loop
scas
add
or
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
add
sub
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
mov
or
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
lods
loop
mov
sub
scas
add
sub
scas
loop
lods
loop
scas
loop
mov
or
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
add
or
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
or
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
mov
sub
scas
add
je
jb
arpl
fs
jae
add
jb
gs
xor
add
or
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
add
fs
imul
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
lods
loop
scas
loop
mov
or
mov
sub
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
(bad)
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
jb
jne
ins
inc
ins
ins
outs
arpl
dec
gs
gs
xor
cs
ins
add
or
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
mov
or
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
addr16
je
add
gs
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
ins
ins
push
imul
outs
arpl
jne
gs
xor
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
or
(bad)
loop
scas
add
or
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
mov
or
mov
or
lods
loop
(bad)
loop
scas
loop
lods
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
mov
sub
sub
stos
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
mov
or
mov
or
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
mov
or
(bad)
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
scas
add
ins
je
arpl
je
gs
gs
je
add
jbe
imul
jo
fs
jae
add
imul
ins
ins
outs
arpl
imul
add
push
jb
je
arpl
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
bound
arpl
outs
fs
outs
jbe
imul
gs
ins
je
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
mov
sub
lods
loop
stos
loop
mov
or
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
add
outs
add
gs
add
popa
jo
imul
jo
add
sub
mov
sub
scas
loop
mov
sub
loop
mov
sub
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
add
bound
loop
mov
sub
mov
or
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
add
jae
add
popa
jb
ins
add
jb
ins
add
sub
stos
loop
lods
loop
mov
or
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
scas
add
sub
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
or
scas
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
sub
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
mov
sub
mov
sub
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
scas
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
imul
jb
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
outs
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
popa
ins
ins
imul
outs
je
outs
outs
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
outs
fs
outs
outs
add
gs
add
jae
gs
cs
push
imul
imul
je
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
outs
add
outs
arpl
add
je
outs
fs
popa
jae
add
jne
ins
jae
push
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
je
dec
jae
popa
arpl
jb
jne
add
je
gs
outs
add
imul
je
jb
add
je
inc
jne
jb
outs
je
push
add
gs
addr16
dec
jae
ins
imul
jne
addr16
dec
jae
outs
addr16
pop
dec
jae
je
popa
arpl
add
ins
outs
jb
push
je
gs
ins
add
je
add
popa
fs
jns
add
popa
add
je
dec
outs
addr16
add
outs
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
data16
inc
ins
outs
arpl
outs
jo
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
outs
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
add
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
inc
jne
ins
dec
popa
ins
add
je
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
add
js
push
jb
je
add
je
je
add
jb
add
jb
push
gs
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
outs
jo
add
je
xor
push
outs
push
je
imul
jae
ins
add
imul
push
outs
pop
mov
arpl
or
xor
mov
and
add
add
add
add
adc
outs
data16
gs
js
jbe
xor
xor
add
push
sbb
sub
push
adc
add
add
add
add
sbb
add
sbb
adc
add
add
pop
add
adc
push
or
adc
sbb
or
add
or
add
sbb
adc
add
adc
adc
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
and
add
sbb
add
adc
add
add
or
push
adc
push
and
or
adc
add
sbb
add
or
adc
or
adc
or
add
add
and
add
sbb
add
or
add
add
or
and
add
adc
add
add
add
push
adc
add
sbb
add
add
push
pop
add
sbb
or
or
add
and
push
adc
sbb
or
or
add
sbb
add
sbb
add
or
add
sbb
or
or
push
adc
or
xor
and
sbb
or
sub
sbb
push
or
and
adc
adc
sbb
and
or
sub
or
or
add
sub
sbb
and
or
or
or
push
adc
adc
sbb
and
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
add
add
gs
add
pop
add
adc
jo
jb
addr16
and
xor
xor
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
xor
xor
sub
sub
sub
sub
xor
aaa
xor
add
or
add
xor
xor
xor
xor
add
add
or
add
add
add
add
add
jno
add
pop
add
add
add
jns
add
add
add
add
add
add
adc
pop
push
adc
add
or
or
push
pop
add
adc
add
push
push
push
push
and
sbb
sbb
add
and
add
sbb
or
add
add
add
add
sbb
pop
add
add
add
add
add
adc
or
and
or
sbb
or
add
add
push
and
add
add
sbb
and
or
pop
or
or
or
or
or
or
add
add
xor
or
push
add
sbb
adc
add
add
or
xor
adc
xor
add
cmp
add
add
push
push
add
adc
add
add
and
add
add
and
push
add
push
add
add
or
or
pop
add
or
add
or
pop
push
or
or
or
add
or
pop
add
or
or
pop
adc
sub
or
or
or
or
or
or
pop
or
or
or
or
or
and
add
or
sbb
sbb
and
add
sbb
sbb
add
adc
sbb
and
add
or
pop
add
add
add
sbb
adc
or
inc
sbb
adc
sbb
test
or
mov
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
