add
add
add
add
inc
add
dec
inc
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
dec
add
add
add
add
add
add
add
push
inc
add
inc
cwde
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
je
add
pusha
add
add
jle
add
add
add
add
add
push
je
imul
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
jp
add
add
gs
xor
xor
xor
xor
sub
sub
sub
xor
xor
xor
xor
jge
add
outs
outs
data16
gs
js
jae
jb
outs
addr16
add
add
mov
xchg
sub
mov
mov
in
lods
mov
sahf
mov
jmp
mov
mov
in
cwde
jmp
add
xchg
fwait
out
call
out
cwde
mov
mov
loop
mov
dec
js
add
gs
or
mov
ds
mov
sub
cli
inc
adc
fsubr
sbb
pop
dec
in
lods
or
in
cmp
cld
push
inc
cld
movs
add
les
add
cmp
add
add
out
push
cdq
in
xchg
cmp
or
fcmovnb
pushf
in
retf
scas
(bad)
cmp
add
xchg
fld
addr16
pop
or
sbb
sbb
leave
xor
jl
aam
or
adc
sub
(bad)
and
mov
inc
adc
in
out
pop
sub
pop
cmp
lods
sbb
je
ss
cmps
xchg
test
cmp
add
cs
call
idiv
test
iret
imul
xor
ins
fidiv
sub
push
inc
lods
mov
sub
pusha
pop
sub
adc
mov
ss
dec
dec
xchg
xchg
pop
mov
cdq
call
rol
outs
xor
addr16
jg
test
xchg
stos
sbb
jl
inc
push
and
mov
push
mov
sbb
(bad)
cmp
fadd
adc
inc
push
pop
(bad)
(bad)
imul
dec
adc
sahf
push
int
dec
pusha
mov
out
fisttp
and
cmp
sub
out
es
push
or
add
call
ss
cmp
fs
cs
add
mov
push
or
sbb
data16
cmp
sbb
pop
xor
inc
cmc
in
add
stc
sub
pushf
icebp
mov
shl
rol
sar
data16
mov
js
loope
imul
ror
retf
sub
ds
call
mov
loopne
aam
inc
fst
dec
or
xor
les
mov
and
xchg
lahf
inc
(bad)
cmps
mov
(bad)
cmp
cmp
xchg
ins
mov
cmps
mov
push
outs
inc
jle
js
ror
inc
push
jnp
xchg
jmp
pushf
sub
scas
ret
(bad)
jnp
xor
sbb
rdpmc
cmc
adc
ret
mov
cmp
neg
jns
retf
(bad)
scas
je
es
in
in
mov
jnp
stos
xchg
mov
lods
int
mov
bound
cs
pop
outs
pushf
inc
mov
in
mov
pop
sahf
xchg
mov
cmp
aas
or
pop
mov
xor
test
sbb
and
test
sbb
adc
dec
sti
xchg
jns
(bad)
pop
shr
in
aad
shr
arpl
lods
out
outs
mov
add
sbb
fist
adc
cmps
sub
mov
hlt
mov
pop
jmp
cmp
out
pop
cmp
lahf
outs
or
sti
in
or
loopne
addr16
push
jno
mov
jle
fs
in
mov
pop
jo
mov
pop
(bad)
ja
and
(bad)
popa
mov
in
adc
fs
imul
pop
rcr
enter
or
clc
mov
mov
and
iret
mov
and
cmp
cmc
lds
(bad)
ins
lock
in
or
sbb
mov
xchg
dec
std
fdivr
int3
inc
cld
in
outs
out
jnp
sbb
adc
inc
push
pop
xor
nop
lock
idiv
fidivr
iret
adc
jae
mov
arpl
mov
adc
adc
dec
pop
sub
clc
iret
(bad)
in
mov
xchg
cmp
push
lahf
int3
mov
xor
into
call
mov
and
jbe
aad
inc
pop
jle
jb
xchg
ds
and
aas
int
ret
inc
jnp
retf
pushf
les
test
shl
mov
(bad)
js
fisttp
push
ret
push
push
es
leave
sbb
imul
arpl
cmps
mov
mov
mov
sbb
popa
bound
push
in
sub
rol
popf
mov
pop
push
in
hlt
xchg
cmp
rol
mov
movs
cmp
push
mov
test
push
pop
imul
ja
push
xor
pop
sbb
push
(bad)
jb
lods
shr
rcl
addr16
addr16
not
cld
jl
out
(bad)
mov
out
aas
daa
sbb
(bad)
dec
inc
and
mov
aam
adc
mov
sbb
(bad)
(bad)
cmps
lds
pop
loopne
xor
mov
and
jmp
pusha
std
cmp
gs
popa
xor
inc
jo
icebp
(bad)
movs
mov
es
add
movs
rol
inc
dec
push
pop
dec
fmul
jno
(bad)
inc
ins
mov
(bad)
addr16
sbb
push
or
jb
sub
sbb
jne
mov
push
das
xchg
xchg
sub
cli
push
jp
das
cmps
or
fs
sbb
pusha
fs
add
outs
sbb
femms
or
add
inc
add
dec
mov
retf
add
pop
jae
pop
pop
idiv
xor
test
pop
cld
and
loop
dec
pushf
and
ret
xchg
clc
not
dec
vdivss
loope
xor
and
scas
mov
push
mov
leave
movs
adc
cmp
out
xor
test
test
mov
mov
pusha
jle
inc
fisttp
and
mov
lock
push
js
aaa
sbb
inc
out
xor
fs
(bad)
cmp
push
sti
xchg
push
in
hlt
shl
cmc
movs
into
push
mov
ror
mov
lea
cmc
push
push
push
clc
jne
pushf
ins
fistp
xchg
jne
dec
test
lds
idiv
jno
push
aas
adc
lods
inc
mov
in
inc
pusha
retf
ins
or
call
(bad)
ins
sti
(bad)
loop
cmp
add
ss
and
mov
out
mov
je
es
shl
lahf
sbb
push
dec
cdq
xor
sahf
xor
in
fs
sub
cmps
retf
ret
push
ss
mov
mov
frstor
inc
xor
mov
mov
push
cld
inc
fcomp
neg
outs
push
xlat
dec
(bad)
xchg
jl
arpl
adc
lods
cmp
pop
mov
mov
das
int3
aaa
mov
push
dec
dec
(bad)
loope
push
ss
cmp
into
adc
out
and
push
xor
push
data16
call
jno
xchg
in
je
push
daa
aas
mov
mov
pushf
mov
or
push
jne
dec
repz
mov
in
pop
(bad)
or
hlt
adc
push
loope
cmp
inc
push
ins
mov
dec
addr16
cdq
pop
jb
sbb
not
push
aaa
sbb
sub
or
push
mov
xchg
pop
fwait
dec
popa
repz
(bad)
cli
jne
(bad)
pop
jp
mov
aam
loope
add
add
pop
sub
call
sbb
iret
pop
lods
jmp
dec
mov
fldenv
inc
and
and
xchg
nop
fisttp
sub
stos
dec
pop
inc
sub
pop
in
or
xlat
addr16
mov
data16
movs
aas
es
or
fiadd
dec
cmp
(bad)
xlat
pop
mov
pop
dec
int3
inc
fist
xchg
or
arpl
stos
add
test
out
enter
push
lods
arpl
fs
dec
stos
mov
ins
dec
ds
xchg
dec
adc
push
cmp
or
inc
outs
mov
rol
lahf
je
imul
mov
push
sar
stos
mov
leave
sbb
mov
and
lods
or
bound
cli
mov
cs
mov
adc
ror
ret
adc
push
lock
cmp
rcr
inc
lods
push
pusha
scas
into
out
call
enter
push
(bad)
cmc
lock
mov
mov
add
add
or
mov
fld
in
pop
push
xchg
xor
xor
(bad)
push
(bad)
pop
sbb
push
dec
fidivr
sti
imul
xchg
test
mov
jns
sbb
jnp
(bad)
mov
rcl
ror
dec
repnz
ret
jecxz
push
add
add
jmp
lods
inc
in
xor
ja
cmp
or
popf
jecxz
rcr
popa
aas
push
and
shl
jl
adc
les
pusha
into
retf
bound
xor
ins
jbe
nop
pop
aaa
mov
or
sbb
dec
mov
test
shr
sahf
pop
(bad)
into
mov
jo
mov
cmp
push
sbb
ins
add
sti
(bad)
push
or
dec
fdiv
xchg
sar
ret
mov
in
addr16
add
adc
and
push
push
xchg
and
mov
or
sub
movs
xchg
lahf
jmp
pop
addr16
retf
bound
fst
push
jg
push
cmps
jbe
cmp
cmp
cmp
gs
mov
mov
add
aad
(bad)
push
push
ds
mul
data16
pop
adc
mov
pop
push
mov
mov
push
cdq
cli
dec
fiadd
jle
dec
int3
addr16
in
jmp
jecxz
xchg
cmc
jl
jns
sub
pop
retf
les
pushf
xor
push
icebp
pop
inc
push
(bad)
xlat
xchg
loop
inc
movs
add
dec
mov
stos
int3
and
xor
sub
and
jb
lahf
push
mov
div
pop
ror
or
mov
mov
jp
dec
inc
mov
outs
lds
les
mov
push
movs
stc
add
ins
jmp
sbb
push
pop
and
add
stc
dec
xchg
out
cld
jge
popa
das
jns
cdq
aaa
outs
xchg
push
call
hlt
std
inc
push
out
or
fsubr
ret
sbb
call
jmp
push
out
jb
lods
mov
out
jmp
das
pop
jmp
stos
sbb
or
in
add
cmp
mov
adc
jg
aas
inc
push
pushaw
sti
loop
mov
xchg
push
cmp
jl
int3
pop
or
pop
mov
adc
iret
jle
rcr
in
ret
mov
push
mov
sub
adc
and
cli
fucomi
xchg
mov
outs
aas
test
add
xchg
std
dec
dec
add
push
mov
and
sub
cwde
mov
and
inc
adc
push
xor
mov
push
fcomp
daa
test
test
xchg
or
les
or
ss
enter
dec
jle
adc
mov
add
xchg
sub
jo
bound
lock
popf
mov
mov
adc
int
lods
lahf
push
jle
mov
pop
inc
aas
adc
sti
into
sbb
jmp
and
in
js
jge
jno
into
dec
jae
push
mov
lahf
jmp
fidivr
bound
in
loopne
mov
jmp
(bad)
imul
cmp
sar
jns
jle
aam
outs
test
fidiv
pop
push
mov
mov
push
xchg
cmp
jb
and
loope
add
and
inc
imul
pop
add
ret
(bad)
or
xchg
dec
jnp
mov
imul
cmc
mov
pop
ss
lea
mov
cdq
test
out
ficom
mov
inc
sbb
nop
jo
xchg
add
and
icebp
ret
lea
mov
stos
(bad)
and
cmps
mov
loopne
push
jns
mov
sbb
jnp
rcr
aaa
add
dec
in
imul
adc
sti
sub
fcmovbe
push
test
js
and
mov
cmp
lods
mov
aaa
adc
in
and
inc
clc
xchg
or
sahf
xchg
cld
pop
mov
sbb
push
add
or
lahf
jns
daa
mov
sub
add
jl
lea
add
or
jl
inc
(bad)
jno
ja
leave
push
cmp
test
cwde
cs
cdq
xor
ins
sbb
inc
dec
sub
mov
mov
or
pop
push
or
sub
jg
dec
push
mov
jge
aad
jmp
sub
xchg
cmp
enter
xlat
mov
xchg
jp
inc
cmovs
push
pop
mov
ins
jo
sbb
sbb
inc
idiv
jmp
fdivr
stos
or
out
pop
out
scas
jne
fwait
fs
ja
bound
stos
mov
aad
outs
stos
xchg
cdq
cwde
mov
xor
sbb
xor
cmp
or
aas
(bad)
movs
or
mov
cmp
cmp
fwait
cmp
and
push
movs
mul
int
adc
dec
add
pop
rcl
inc
fdiv
pop
pop
scas
fmul
sahf
movs
cld
popa
stc
outs
jns
neg
nop
fidiv
push
dec
ins
ror
push
sbb
jo
xchg
in
test
cmp
mov
push
mov
hlt
mov
sub
and
outs
clc
cwde
pop
mov
mov
adc
(bad)
cmp
push
inc
sbb
call
mov
cmp
sahf
enter
and
or
cmp
push
xchg
pop
shl
sub
jmp
push
lods
cmp
in
(bad)
and
mov
fcomp
test
cmp
sbb
xchg
mov
out
in
cmp
mov
mov
jae
pop
call
ins
mov
sub
loopne
xor
xor
dec
push
ror
push
gs
lahf
or
cmp
cmp
int
add
jmp
cmp
mov
movs
push
sahf
in
jno
(bad)
fbstp
inc
mul
ret
imul
shl
cmp
js
loope
mov
(bad)
fcomp
adc
inc
mov
sahf
jle
jp
in
test
cmps
mov
ror
fwait
push
push
jge
mov
sbb
outs
pushf
cmp
add
ins
rcl
ret
repnz
mov
mov
pop
jbe
cmps
ja
hlt
aam
repz
sbb
stc
test
push
inc
pop
sub
xor
xor
or
aas
sub
(bad)
lds
cld
xchg
outs
cmp
or
dec
dec
xchg
push
sbb
xchg
xchg
jbe
pop
cmc
sub
loopne
and
xor
or
sbb
shr
and
dec
das
sub
inc
cdq
cmp
outs
sbb
fcom
bound
adc
int
push
jae
jge
jb
sbb
xchg
xchg
(bad)
fxtract
and
movs
aam
mov
jno
aas
inc
jno
int
and
stc
pusha
clc
pop
push
sub
inc
cmc
or
xor
(bad)
dec
ins
push
push
js
fwait
cmps
call
xchg
mov
out
sbb
outs
jbe
mov
je
in
push
add
mov
pop
(bad)
sbb
pop
inc
les
dec
push
daa
outs
leave
shl
or
or
cmp
xor
ja
psubw
jbe
push
in
xor
fcmovne
mov
test
adc
mov
jmp
pop
cmc
sub
lds
lds
mov
mov
or
icebp
in
ds
push
ja
(bad)
pop
push
cwde
xor
add
test
inc
sbb
lods
jmp
jno
pop
neg
mov
jecxz
mov
sub
adc
lods
jle
and
xchg
gs
jecxz
repz
out
imul
in
sbb
enter
mov
jge
pusha
push
xor
rcl
mov
pminub
xchg
sub
and
jl
inc
iret
xor
imul
out
popf
fcomp
scas
rol
cmp
popf
inc
pusha
jae
pop
and
push
cmp
jns
jae
cdq
sbb
pop
sub
and
lods
imul
push
outs
push
dec
lds
lock
or
adc
pop
(bad)
sub
xor
add
dec
lock
mov
dec
outs
and
mov
je
push
daa
mov
imul
fldcw
jb
pop
ins
test
xor
jb
pushf
xor
jl
mov
push
xchg
in
push
xor
jno
or
adc
repnz
ins
push
dec
into
pop
mov
add
in
lods
pop
out
(bad)
sti
inc
sbb
dec
mov
jns
imul
ins
call
xchg
(bad)
loopne
sahf
js
or
mov
mov
sbb
push
xor
mov
push
xchg
iret
test
jb
pop
pop
xchg
aam
mov
and
dec
inc
ins
nop
ja
in
mov
adc
(bad)
(bad)
leave
dec
imul
push
in
pop
fcom
fild
int3
mov
scas
fld
(bad)
lods
dec
popf
jo
mov
xchg
cli
jge
pop
lods
jmp
fisubr
jge
sbb
and
push
jnp
fstp
and
adc
je
cdq
push
rol
(bad)
mov
push
jns
dec
mov
cwde
imul
popf
xor
pusha
mov
mov
push
push
cmpxchg
add
sbb
mov
dec
cmc
mov
pop
add
push
jbe
ja
pop
pop
aas
inc
shl
push
or
(bad)
fdivr
cmp
adc
pop
sbb
mov
pop
sbb
sub
mov
mov
push
adc
push
mov
stos
test
sbb
jl
imul
cs
pop
nop
push
xchg
icebp
xchg
ret
call
adc
test
and
or
mov
jno
push
test
add
push
fnsave
push
call
inc
pop
push
inc
jle
lock
inc
pop
or
push
mov
xor
ds
bound
inc
add
inc
mov
push
mov
out
call
add
and
imul
das
cmp
rol
cmp
shl
stc
aaa
jno
test
or
neg
inc
(bad)
jmp
rol
nop
ds
jecxz
pop
stc
sbb
rol
cmp
je
outs
(bad)
in
out
mov
std
cmp
xor
adc
fbld
in
add
pminub
mov
mov
arpl
and
jp
mov
xchg
inc
aas
das
arpl
not
aaa
das
mov
pop
(bad)
repnz
jmp
cvtpi2ps
inc
sbb
mov
sub
or
mov
fld
jnp
stos
stos
jo
aad
pop
dec
(bad)
ret
ror
adc
pop
sbb
sub
ror
push
outs
xor
stos
ror
out
in
aas
adc
add
daa
pop
sbb
pop
les
ins
iret
mov
(bad)
pop
xchg
add
dec
sub
ins
mov
inc
jmp
jge
add
scas
xlat
pop
aas
and
adc
movs
pop
popa
sub
out
sub
xchg
xor
test
(bad)
pop
jmp
jl
clc
xchg
and
cmp
fstp
pop
push
in
jns
fidivr
fidiv
cld
mov
(bad)
std
pop
daa
dec
xor
rdtsc
in
clc
mov
mov
es
or
xor
sahf
imul
std
xlat
lds
xor
int3
mov
pop
in
fnstcw
out
xor
mov
cmp
jmp
add
in
ret
adc
repz
not
hlt
inc
popf
into
push
(bad)
faddp
cmps
push
mov
sub
sbb
cmp
sub
mov
sub
fsubr
mov
cmps
ror
adc
aad
arpl
cmps
inc
je
leave
ins
push
pop
popf
neg
retf
mov
retf
and
sub
dec
mov
push
fcomip
mov
jbe
mov
dec
sbb
xchg
clc
pop
pop
stos
fsubrp
pop
push
int
stos
lds
jge
movs
push
mov
add
cmp
sbb
icebp
sub
pushf
inc
jne
iret
sbb
jb
xchg
and
mov
mov
and
sbb
pop
(bad)
jge
dec
push
repz
push
jns
stos
movs
jl
mov
mov
pop
jge
mov
aad
ja
jle
cmp
sbb
mov
or
push
push
daa
pop
sub
mov
jb
sub
adc
fmulp
ins
fs
adc
mov
cdq
pop
inc
(bad)
jno
jmp
(bad)
fst
(bad)
xchg
adc
mov
or
js
sub
pop
mov
xor
xlat
scas
xchg
mov
dec
xchg
mov
and
pushf
not
xchg
in
repz
or
sahf
test
and
cmps
xchg
cmps
inc
std
adc
pop
xlat
pop
xchg
jmp
das
push
mov
ficom
addr16
mov
pop
mov
sub
cmp
gs
sbb
fldenv
fwait
and
dec
aad
out
test
(bad)
out
in
add
cmc
ja
xchg
jmp
add
dec
test
cmp
or
xor
ficom
inc
mov
inc
out
pop
xchg
adc
cld
add
jne
xchg
pop
pop
dec
add
mov
add
adc
sbb
and
test
fisub
cmps
jo
jp
and
test
aad
xor
imul
cmps
cmp
pop
sub
pop
lahf
pusha
xchg
imul
ins
mov
retf
mov
jne
sbb
mov
test
mov
adc
ja
or
mov
adc
dec
imul
cmps
and
cmps
ja
ret
xor
fmulp
in
arpl
cmc
sbb
push
divps
jo
es
cmc
xlat
sub
pushf
popf
arpl
cmp
mov
test
shl
repz
mov
cmp
xchg
(bad)
cmp
sub
or
lods
movs
or
xchg
call
mov
inc
mov
adc
loop
popf
cmp
rcl
xlat
dec
mov
jbe
push
push
or
pop
es
dec
shl
xor
loopne
in
adc
xor
loop
sbb
mov
cdq
mov
(bad)
push
lods
dec
ffree
aad
pop
dec
add
lods
jp
pop
(bad)
ja
outs
sbb
jp
imul
mov
sbb
out
std
or
add
pop
or
fs
fmul
mov
pop
xchg
stc
mov
push
add
sub
loopne
pop
gs
dec
push
xor
jle
adc
jl
dec
pop
sar
and
ins
shl
out
aam
add
in
mov
sub
inc
ret
xor
clc
int
cmp
inc
fst
not
lods
xchg
inc
addr16
cmc
or
jmp
pop
stc
lea
push
and
xor
dec
adc
out
mov
jo
cmp
xchg
sbb
jl
mov
dec
rol
cdq
pushf
jmp
cdq
mov
repz
fstp
call
cmps
(bad)
fisubr
mov
fcomp
sbb
pop
sbb
gs
les
scas
vmread
add
mov
xchg
xor
or
arpl
pop
cmp
test
sbb
or
popf
stos
jnp
loope
mov
test
push
jae
hlt
imul
or
push
aad
ins
mov
and
mov
adc
jbe
fisub
cmp
fnstsw
es
sbb
or
in
(bad)
rcl
(bad)
imul
xor
mov
popf
push
test
(bad)
mov
xchg
scas
repz
add
sbb
in
ins
jmp
mov
lods
push
pop
or
mov
retf
add
stc
mov
das
or
inc
mov
mov
retf
push
arpl
pop
mov
pop
int
rol
ret
push
aas
test
cmps
push
mov
jmp
nop
cmp
aas
gs
inc
mov
xlat
sti
in
aas
and
clc
inc
xchg
in
mov
shl
ror
push
push
ja
loopne
in
jno
iret
push
pop
aas
enter
mov
pop
out
outs
dec
jg
aaa
(bad)
jp
sbb
cli
imul
xor
imul
mov
pop
push
dec
or
outs
imul
xchg
out
fdivr
lods
sbb
inc
scas
pop
(bad)
scas
push
sbb
inc
xchg
or
push
inc
jb
xchg
jo
out
iret
jp
arpl
fwait
retf
cwde
stos
and
mov
test
mov
adc
pop
aas
mov
(bad)
xor
mul
cmps
push
and
pop
push
test
ss
jg
dec
ins
loop
cdq
xchg
adc
xor
dec
xchg
or
out
lods
out
sub
jae
std
cmps
xor
pop
jns
and
push
rol
xor
cmp
fisttp
ins
jp
dec
adc
int
and
in
cmps
inc
sbb
jge
sub
add
dec
jo
je
std
fisubr
das
jae
(bad)
retf
gs
mov
cmp
addr16
and
stos
cdq
les
jecxz
lds
mov
jo
jg
xchg
stos
mov
mov
sub
cdq
in
cwde
pop
mov
mov
scas
shl
mov
or
dec
mov
adc
sub
sub
fld
cli
mov
mov
sti
dec
ja
in
cmc
test
pop
jno
pushf
addr16
inc
outs
scas
jb
push
data16
inc
push
jae
or
hlt
mov
aas
adc
xchg
in
ins
xchg
out
and
fldenv
push
dec
sbb
and
dec
dec
pop
inc
mov
mov
push
mov
aad
jae
jge
imul
inc
mov
es
setb
push
mov
jne
les
and
jbe
push
lods
dec
out
jmp
fwait
in
jno
mov
cmp
sub
popf
retf
mov
push
scas
mov
xchg
cmp
test
sbb
push
or
mov
scas
inc
shl
or
push
cmps
pusha
xor
test
dec
sbb
add
stos
sub
cmp
cmps
cmp
imul
jle
mov
rcr
mov
sub
sub
mov
add
shl
ds
and
rol
ins
mov
jb
ja
bound
and
mov
cmp
imul
dec
jmp
test
popa
push
fld
sub
pop
fst
mov
mov
pop
call
push
leave
inc
mov
repnz
into
lahf
div
js
aas
xchg
sahf
mov
mov
dec
cs
mov
mov
and
push
pop
mov
outs
jmp
cmp
inc
mov
sahf
cmp
stc
mov
cmps
mov
repz
lods
xchg
pop
retf
ss
mov
mov
clc
and
cmp
test
ret
adc
mov
ins
dec
mov
add
stos
fsubr
add
jg
stos
push
cmp
mov
or
dec
sahf
jbe
fmul
mov
push
test
mov
scas
jae
push
sub
jno
retf
sbb
lods
mov
xchg
sub
out
(bad)
rcr
jb
push
data16
mov
dec
in
call
es
add
(bad)
and
rol
xor
inc
or
inc
sub
inc
into
push
adc
sub
xchg
stos
jle
inc
jl
mov
gs
pop
push
test
sub
inc
xchg
dec
cmps
and
adc
out
cmp
xor
mov
stos
or
and
stos
mov
add
inc
pop
add
jmp
inc
rol
mov
mov
pop
fxch
das
or
xchg
loop
cmp
adc
ret
and
add
push
xor
mov
xchg
les
xor
xor
xor
mov
jg
ds
repnz
aam
xor
fwait
cmp
(bad)
fdivr
fcom
stos
pop
mov
jg
xchg
and
ins
outs
retf
pop
cmp
sub
ins
pusha
push
xchg
mov
cmc
stos
pop
dec
stos
push
xchg
cmp
inc
aas
dec
dec
xchg
mov
in
aam
sbb
xchg
repnz
pop
cmp
push
in
mov
inc
in
push
cmp
int3
cmps
fmul
clc
inc
enter
xchg
adc
or
inc
add
nop
rol
mov
mov
ins
and
cmc
adc
sub
mov
shl
dec
dec
sti
jg
retf
bound
imul
(bad)
arpl
ror
sbb
mov
aam
add
(bad)
cmp
fwait
xor
pop
cmp
pop
in
or
(bad)
(bad)
loop
retf
dec
pop
pop
mov
cmp
shl
mov
sbb
sbb
mov
dec
test
pop
adc
push
push
jbe
pop
ss
clc
ds
mov
jle
inc
outs
stos
out
loope
or
xabort
into
int3
imul
mov
enter
sbb
mov
cli
xchg
dec
outs
cs
movs
xchg
lods
and
test
cdq
int
xor
into
sbb
add
call
lods
and
ds
stos
scas
aam
hlt
mov
add
loope
in
jecxz
mov
(bad)
mov
pop
shl
int
push
xchg
lods
test
mov
out
or
dec
push
das
loope
xchg
aam
aas
outs
sub
call
dec
lea
aaa
loope
xor
hlt
adc
mov
add
mov
xor
add
ret
je
inc
daa
div
jp
sbb
dec
leave
loop
fild
mov
sbb
sub
add
in
mov
ret
xchg
xor
cmp
or
out
das
scas
fs
push
sub
mul
shl
cmp
gs
inc
push
out
push
dec
cwde
rcl
sbb
dec
sbb
or
or
daa
xor
cwde
jp
xor
inc
push
clc
adc
gs
enter
sbb
arpl
(bad)
mov
jg
jle
movs
mov
ins
xor
adc
sti
mov
ins
push
inc
out
nop
and
xchg
sub
bound
sbb
xchg
push
daa
fcom
out
ficomp
gs
scas
jle
rol
or
mov
call
inc
sti
je
push
into
ins
sti
mov
and
retf
xor
sub
xor
rol
jmp
(bad)
dec
pop
stos
test
and
fsub
push
jp
xchg
lods
call
inc
push
dec
pop
daa
cld
out
xchg
mov
movs
xchg
(bad)
jle
neg
push
dec
arpl
mov
fnstcw
idiv
cld
and
call
hlt
lds
sti
fucomp
push
mov
push
jecxz
enter
jno
sub
mov
call
cmp
aad
dec
pop
mul
repnz
retf
mov
call
aas
or
inc
ror
(bad)
cli
pop
mov
test
xor
test
pop
test
(bad)
fsub
lods
push
adc
sub
jnp
inc
(bad)
mov
test
arpl
ds
add
stos
push
xchg
mov
adc
dec
popf
imul
cmps
inc
pop
mov
(bad)
pushf
pusha
adc
test
(bad)
bound
push
out
adc
imul
jbe
lea
and
fdiv
cmp
imul
enter
cmp
loopne
iret
call
inc
out
stos
push
in
(bad)
arpl
clc
lods
cwde
cwde
push
cdq
inc
cmp
(bad)
imul
ret
xchg
je
dec
push
ins
sub
add
mov
jmp
xor
sub
retf
add
(bad)
fcmovu
xor
sub
jl
sub
push
xchg
mov
adc
out
add
jp
and
xor
pop
jg
pusha
loope
push
stc
cmc
imul
inc
scas
cmp
mov
lods
mov
popa
and
xchg
mov
(bad)
jmp
cdq
pop
int
lahf
call
sbb
fsubr
mov
jo
shl
add
js
push
fdivr
jns
sahf
xor
sbb
clc
dec
mov
fwait
iret
adc
sbb
sbb
inc
sbb
jb
data16
pop
iret
je
(bad)
cmps
inc
ins
in
and
popf
fisttp
and
or
add
iret
(bad)
out
mov
pop
gs
loopne
mov
jmp
mov
mov
(bad)
cmp
(bad)
loop
fidivr
dec
pop
dec
out
sub
pusha
sbb
dec
imul
fisttp
inc
mov
sbb
movs
mov
gs
loope
push
xchg
cmp
pop
(bad)
call
add
sub
cmp
fdivr
jecxz
ins
sahf
jns
mov
std
(bad)
add
shl
sub
leave
and
fdivr
pop
(bad)
push
data16
mov
stos
cmp
xchg
cmp
sub
and
fprem1
lods
mov
movs
xor
ja
or
ror
cmp
outs
pop
sub
mov
iret
dec
push
aam
xchg
cs
test
mov
dec
xor
push
scas
out
shr
lock
out
add
mov
fldcw
xor
sbb
nop
push
add
push
or
sar
inc
test
ret
adc
fisub
dec
push
fwait
movs
or
stos
pop
mov
mov
xchg
js
mov
int
fmul
xor
test
aam
pop
lock
xor
test
mov
adc
fsubp
out
adc
out
call
sbb
mov
scas
mov
or
cdq
scas
fisubr
data16
push
push
mov
or
dec
mov
(bad)
adc
sar
inc
minps
pop
movs
stos
mov
and
dec
or
push
adc
enter
ja
jnp
push
mov
fdiv
sub
and
jge
or
push
mov
cmp
pop
mov
(bad)
xchg
add
mov
loop
sbb
inc
fisub
stc
push
mov
in
popf
mov
(bad)
cs
ds
shl
pop
jae
mov
sub
in
add
pushf
popa
imul
mov
mov
jg
mov
dec
sub
lock
js
dec
adc
fdivr
and
lods
push
sbb
mov
jae
pushf
add
shr
lock
sub
cmp
loopne
(bad)
cmp
push
pop
sbb
repz
imul
sti
mov
adc
or
sub
ret
jmp
xor
inc
fadd
je
and
pop
pop
jp
xchg
out
cmp
enter
xchg
test
dec
pop
mov
adc
inc
inc
(bad)
daa
pop
das
xchg
enter
pop
dec
jp
jne
jns
test
mov
iret
mov
ins
das
add
push
sti
push
dec
rcr
test
jmp
lods
or
not
mov
aas
mov
enter
cmovnp
sub
cwde
xchg
cwde
ret
or
mov
mov
add
cmp
in
dec
cmp
dec
fidiv
pop
out
bnd
pop
add
xchg
clc
mov
mov
add
mov
pop
jae
ret
fcomp
fldenv
sub
fcom
int
repz
xchg
out
lds
jbe
fisub
mov
push
hlt
sub
and
icebp
mov
addr16
pop
jo
push
mov
ffree
pop
xor
adc
xor
je
icebp
aad
lods
dec
nop
mov
ins
cmp
jg
enter
pop
shl
fidiv
jp
add
jg
push
mov
dec
jno
cld
mov
pop
xchg
ret
push
add
cmc
cs
out
mov
or
add
mov
mov
lds
pop
inc
jg
cmps
sbb
scas
cmps
mov
xchg
ds
cmp
xor
test
dec
daa
ins
xchg
aaa
xor
outs
or
test
out
xchg
push
inc
mov
stc
inc
js
dec
sub
mov
pop
sub
xor
push
ins
in
movs
out
mov
and
out
outs
fisubr
mov
push
dec
dec
mul
and
sahf
mov
in
cmps
mov
das
cmc
and
pop
inc
scas
cmp
out
in
jl
repz
popf
cli
jne
and
add
shr
clc
adc
mov
inc
xchg
not
arpl
xor
pop
and
mov
xchg
aas
ja
adc
sbb
das
fnstsw
clc
or
jmp
(bad)
or
int
cmps
into
and
jle
out
hlt
jecxz
mov
mov
shl
ret
mov
daa
push
fxch
lods
mov
inc
sub
xchg
dec
jg
xchg
jns
push
sub
sub
inc
sbb
adc
movs
inc
rcl
inc
and
shl
mov
mov
fistp
cmp
outs
int3
xchg
cmp
or
fstp
lods
mov
push
mov
add
push
rol
push
retf
cli
mov
cmp
xor
les
sbb
jne
movs
ret
xor
xor
mov
lods
mov
jp
daa
adc
ror
xchg
test
adc
or
cmp
lea
pop
leave
and
jmp
cmp
pop
in
inc
pop
sub
pop
adc
cs
dec
sub
mov
pop
or
or
jl
leave
nop
dec
jge
loope
push
adc
sbb
shr
fnsave
sub
(bad)
enter
retf
inc
call
sub
cmps
and
mov
mov
ror
call
xor
shl
dec
pop
in
xchg
push
aas
jle
jno
xchg
addr16
mov
rol
cwde
maskmovq
loopne
lds
std
mov
fcom
and
adc
mov
(bad)
leave
push
mov
xor
mov
test
les
adc
adc
nop
push
mov
mov
sahf
gs
or
xor
sbb
icebp
push
pop
outs
scas
lods
mov
pop
jno
aam
std
mov
shr
or
pop
inc
jo
in
mov
movs
aaa
pop
lahf
call
std
push
jmp
jb
leave
call
xor
ret
out
das
stos
xor
outs
and
mov
mov
sub
inc
xchg
xor
lods
xor
add
inc
cli
pop
sti
addr16
stos
mov
jae
mov
jb
cmp
jecxz
dec
(bad)
outs
loopne
jl
cmp
bswap
cmp
push
and
scas
dec
ret
stos
arpl
ror
loop
push
lea
cmp
out
xchg
idiv
pop
pextrw
pop
arpl
shl
jmp
xor
jp
xor
jbe
push
mov
or
add
push
mov
test
push
add
mov
mov
jmp
gs
call
cdq
sub
fwait
sti
mov
jle
xchg
(bad)
lock
dec
sub
push
fcomp
clc
fnsave
mov
pop
xchg
test
imul
cmp
int
lods
inc
pop
inc
std
push
fidiv
fidiv
mov
xor
shr
bnd
push
scas
mov
adc
fldenv
mov
scas
or
sub
mov
repnz
call
jo
mov
dec
pop
pop
xor
and
and
lods
dec
mov
ds
(bad)
add
imul
sub
gs
mov
int
pop
cdq
mov
fist
mov
nop
jecxz
call
(bad)
nop
ret
ss
arpl
sbb
mul
(bad)
adc
mov
jg
mov
push
push
fdiv
repnz
aam
arpl
xchg
outs
leave
fcom
iret
sahf
or
mov
sub
mov
xlat
pop
mov
ror
cmp
leave
movs
add
xor
outs
xor
xor
rcl
leave
xlat
xor
ja
popf
push
pop
retf
cmp
xor
data16
sub
push
pop
clc
ret
(bad)
xor
in
test
lea
out
jb
xchg
xchg
out
pop
stos
cmps
sbb
rcl
mov
ins
mov
mov
xor
icebp
pop
pop
jmp
in
push
lods
push
adc
inc
mul
cdq
clc
mov
xlat
push
and
mov
pop
popa
mov
add
(bad)
outs
lock
mov
push
adc
xor
enter
push
not
repz
inc
rcl
jle
int
out
leave
aas
adc
pop
cwde
mov
push
int3
adc
push
or
jo
stc
mov
cmp
push
mov
add
loop
rcr
add
sub
imul
outs
retf
cs
gs
sbb
ja
inc
push
int
mov
shl
aad
xchg
mov
fbstp
mov
je
retf
sti
int3
pusha
cld
push
dec
pop
frstor
sub
loope
inc
jecxz
push
cmp
pop
and
inc
icebp
cmp
add
stos
popa
cmp
mov
jno
shl
and
cmc
mov
dec
iret
pop
jg
mov
imul
jl
ficomp
cmp
(bad)
push
movs
iret
cmp
pop
in
sub
push
(bad)
jo
enter
jl
xor
dec
mov
inc
dec
cmc
dec
push
stos
sbb
sub
jno
jno
test
pop
xchg
leave
(bad)
movs
xchg
(bad)
mov
jmp
push
cli
pop
in
inc
scas
sbb
test
push
movs
push
fiadd
fld
ins
ret
inc
test
sub
mov
mov
pop
and
push
fsubr
outs
mov
repz
inc
ds
add
ins
ins
loop
mov
inc
dec
call
cld
(bad)
push
jp
cmp
fist
jmp
push
mov
inc
mov
inc
push
aam
cmp
jecxz
ror
mov
xor
mov
cmp
sbb
fidiv
leave
cmp
add
in
jge
jbe
cmp
addr16
arpl
addr16
push
inc
(bad)
std
sar
out
gs
inc
imul
or
or
jp
shl
pop
retf
lea
xchg
pop
mov
xor
test
adc
cmps
inc
adc
mov
in
pop
cli
cmp
xlat
popa
bound
jnp
cmps
and
and
jae
sbb
dec
push
fwait
jl
repnz
repnz
or
pop
in
xor
cmp
sub
ret
jecxz
mov
fs
push
imul
sbb
jle
aas
push
pop
repnz
popf
mov
ret
ret
outs
mov
sub
push
sbb
(bad)
repz
repnz
or
pusha
adc
xchg
mov
mov
popf
inc
fdiv
push
shr
or
rol
mov
(bad)
fld
and
fistp
jg
cmp
fdivr
outs
xlat
lods
lods
add
popf
jno
fisub
push
sub
mov
xlat
mov
sub
mov
xor
pop
xor
xlat
std
and
icebp
adc
repnz
sar
cmp
ja
fcmovne
sub
jmp
es
adc
pop
sub
inc
icebp
dec
xchg
and
sbb
jecxz
or
das
(bad)
push
sub
or
ret
(bad)
sahf
sti
lods
arpl
add
retf
ja
sub
cmp
sbb
js
cmp
xchg
mov
cmp
test
(bad)
xchg
add
clc
cld
cmp
cmps
test
or
mov
push
in
(bad)
jb
aaa
or
mov
mov
fucomp
fwait
call
mov
lods
sbb
sbb
fcmovne
lock
push
neg
stc
jno
fld
jp
fs
ja
sbb
(bad)
mov
aas
mov
cmp
push
and
pop
sbb
sahf
les
popa
push
loop
or
and
rcr
imul
sbb
test
sti
sbb
repz
adc
adc
inc
bound
(bad)
int3
xor
in
mov
das
bound
push
or
cwde
cdq
sub
push
cmp
adc
adc
sahf
lock
jmp
mov
jo
dec
or
xor
outs
jno
or
mov
addr16
push
outs
lock
sti
fsub
imul
adc
es
js
ficomp
pushf
and
and
ror
pop
pushf
jns
outs
push
mov
(bad)
cmc
cmps
js
dec
xor
leave
and
mov
cmps
mov
mov
dec
jo
jmp
into
repz
aas
imul
ss
mov
push
lds
fidivr
pop
(bad)
cmp
outs
or
inc
xor
imul
pop
jl
cld
and
dec
xor
xor
jne
adc
sbb
loope
push
ja
jmp
out
fs
push
dec
push
sbb
popf
xor
cmp
xchg
sar
sti
rcr
push
jge
rcl
and
sahf
sbb
push
inc
add
mov
inc
ins
mov
mov
in
nop
lds
mov
ds
jp
ja
push
jae
push
test
mov
mov
sub
outs
xor
mov
push
leave
or
xchg
mov
lods
and
dec
mov
jmp
mov
sub
clc
je
pop
mov
mov
and
daa
retf
cmp
sti
and
rcl
xor
pop
pop
add
push
aam
push
(bad)
daa
aad
pop
pop
nop
push
pop
pop
popf
movs
(bad)
in
inc
dec
fild
std
je
adc
add
sahf
mov
xor
loope
or
pop
aas
sti
pusha
xchg
xchg
inc
xor
or
push
inc
bound
loop
dec
sti
xchg
mov
mov
mov
sbb
movs
rol
jmp
dec
lea
add
jns
jmp
leave
add
dec
push
xor
jnp
fwait
cmp
cwde
cmp
fnstsw
xor
call
sahf
mov
mov
xchg
in
jge
call
outs
xor
ja
loope
push
xchg
mov
sub
mov
mov
mov
mov
call
sbb
pop
and
jne
movs
xchg
push
bndstx
arpl
xchg
adc
mov
out
cmp
and
shl
jmp
loop
outs
sub
mov
mov
daa
xchg
cmps
add
inc
mov
dec
in
or
dec
fidivr
aad
repz
or
setne
mov
cmps
or
pop
inc
popa
repz
push
retf
out
loopne
mov
inc
dec
arpl
push
(bad)
jle
stos
rol
jmp
scas
mov
push
dec
rcl
cli
sti
jnp
xor
mov
cmp
xchg
sub
leave
pop
ror
popa
(bad)
(bad)
cmps
nop
daa
jmp
add
lods
push
inc
dec
ss
mov
xor
test
push
inc
dec
dec
add
dec
xor
sub
pop
addr16
and
sub
scas
xor
fs
mov
rcl
mov
loope
cmps
lods
mov
xor
sbb
(bad)
mov
outs
push
das
retf
dec
cmp
sti
adc
cwde
scas
add
mov
into
inc
xchg
ins
cmp
test
in
out
pop
cmps
and
fild
mov
mov
shl
jo
gs
inc
shl
dec
pop
or
mov
mov
je
mov
dec
cmp
test
sub
mov
or
mov
jl
adc
aaa
cmp
hlt
ss
in
inc
ret
add
arpl
xor
cmc
mov
sub
sub
fistp
dec
sub
lea
cmp
adc
(bad)
pusha
pop
in
invlpg
cmp
loope
aaa
aam
aad
aam
(bad)
das
icebp
lock
out
mov
mov
fisttp
push
pop
add
(bad)
cli
into
xchg
mov
stos
xchg
cmp
adc
sbb
dec
xchg
sub
fist
mov
or
mov
jmp
das
test
jmp
mov
mov
sti
adc
xchg
(bad)
or
stos
cld
mov
(bad)
stos
retf
shl
lods
inc
pop
push
jbe
push
mov
mov
mov
lea
lods
mov
xor
dec
xchg
push
popf
scas
mov
pop
jle
inc
add
shr
push
and
sub
ret
push
mov
(bad)
shl
sbb
ins
cmps
fcom
sbb
jbe
aam
mov
push
xor
cdq
test
mov
out
popa
retf
and
aas
es
fidivr
mov
call
mov
sub
xchg
cdq
out
mov
popf
xchg
mov
in
addr16
adc
push
inc
aaa
inc
shr
fst
inc
mov
xrelease
cld
data16
push
xor
xchg
test
retf
sahf
loopne
aam
sbb
inc
ds
call
sub
xchg
in
jge
xchg
out
mov
shr
or
jo
push
dec
jo
pop
jb
push
add
in
mov
sti
sub
out
adc
es
retf
cld
sbb
in
test
stc
mov
cmp
fist
xor
sahf
mov
rol
scas
ins
jle
popa
fistp
scas
mov
jmp
or
out
add
hlt
add
mov
pop
int3
ror
outs
scas
pop
mov
lods
xchg
mov
or
out
inc
jbe
mov
mov
jle
fmul
repnz
xor
fld1
sub
push
adc
push
adc
shr
les
icebp
aad
jns
icebp
or
outs
pop
rcl
mov
pop
xor
inc
inc
das
mov
push
mov
inc
test
jle
push
xor
mov
push
stc
jle
cmp
into
push
loope
push
mov
test
sbb
add
fucom
(bad)
(bad)
loopne
aad
repz
and
xchg
inc
sti
rcr
enter
icebp
and
mov
push
fdiv
sbb
jmp
xchg
loopne
dec
mov
inc
or
ins
cmc
mov
pop
xchg
clc
mov
repnz
ret
sub
imul
jecxz
repnz
lods
fmul
cli
arpl
outs
add
adc
jmp
stc
cdq
test
nop
mov
int
mov
mov
lods
mov
push
les
aam
pop
clc
pushf
dec
ja
cwde
cmc
mov
cmps
in
ss
inc
stc
popf
sub
retf
shl
scas
test
jbe
popf
test
mov
dec
pusha
data16
ins
ins
repnz
shr
popf
fs
xlat
call
retf
shl
push
test
repnz
cmp
leave
(bad)
cmps
mov
mov
jne
mov
cmps
push
inc
jle
stos
(bad)
pusha
jmp
push
mov
fld
mov
mov
(bad)
jno
pop
fisttp
dec
pop
dec
cmps
shl
out
int
clc
jno
fcmove
mov
inc
mov
cmp
cmps
pop
sub
data16
call
xor
enter
jb
out
cmp
dec
mov
bound
mov
call
push
outs
out
cmp
push
sbb
aaa
push
not
mov
cmp
sbb
clc
clc
pop
push
dec
sub
ret
dec
pop
inc
cli
(bad)
xor
jbe
inc
imul
fnstsw
pushf
fdiv
call
jl
movs
sti
cmovl
push
test
push
ins
out
or
xor
outs
inc
leave
pop
(bad)
icebp
sbb
xor
jmp
es
sub
fisubr
mov
(bad)
push
fdiv
test
loope
sub
push
jo
ror
das
push
xor
pop
adc
add
mov
cs
push
or
mov
sahf
pop
xlat
add
mov
xchg
jl
iret
inc
mov
xchg
iret
mov
inc
mul
stos
lods
gs
fs
jge
(bad)
mov
js
std
cld
aaa
sub
lahf
fild
ja
cdq
jecxz
mov
pop
sbb
sub
aaa
push
out
jb
arpl
mov
ins
ror
mov
loope
pop
pop
and
mov
cmp
dec
xchg
out
mov
jbe
data16
test
mov
inc
bound
or
dec
sbb
ret
aam
xchg
mov
pop
inc
mov
mov
nop
xor
repz
fld
pushf
sub
xchg
cmp
(bad)
call
sbb
inc
outs
bound
pop
ins
mul
repz
call
mov
mov
mov
dec
sbb
xor
das
push
outs
cmps
pop
dec
and
fist
jle
sub
adc
dec
fld
and
pop
jb
aaa
xor
inc
inc
mov
in
lods
jo
sbb
jp
out
jmp
cmp
pop
aaa
loope
jge
outs
sbb
sub
or
stos
jg
xlat
push
inc
jg
pop
xchg
lods
loop
js
iret
xor
push
jg
dec
mov
sbb
idiv
pop
jo
leave
xor
jmp
sbb
push
test
xchg
cld
dec
rol
mov
inc
mov
jmp
jl
into
scas
mov
lods
jge
pop
jmp
aad
pop
jg
mov
pop
inc
popa
mov
xor
jecxz
xor
or
inc
fdivr
add
not
movs
(bad)
dec
sbb
pop
mov
sub
lods
stc
pusha
or
icebp
int
test
out
jae
iret
shl
or
(bad)
sub
pop
inc
pop
pusha
ins
and
cli
pop
sbb
mov
leave
and
and
icebp
in
jmp
into
in
jae
adc
jno
test
inc
mov
mov
push
adc
ins
bound
les
cmp
iret
cs
call
sub
ret
(bad)
outs
and
in
adc
cmp
sbb
xchg
pop
aad
jb
jmp
cmp
lods
mov
outs
dec
cmp
jmp
or
(bad)
sbb
inc
cmp
push
shl
dec
xlat
dec
pop
jmp
push
shl
clc
sub
mov
push
popf
retf
in
cwde
jp
sbb
(bad)
sti
pop
ins
xor
(bad)
andps
retf
xchg
jmp
cs
fbstp
push
jae
pop
or
rol
xchg
add
fistp
xchg
xor
dec
or
cs
add
lea
mov
or
inc
add
ffree
push
(bad)
les
sbb
dec
enter
push
arpl
jge
sahf
mov
(bad)
mov
xor
inc
inc
jg
cmp
(bad)
aaa
sbb
jecxz
ja
stos
outs
ins
dec
cwde
bound
clc
(bad)
cmp
retf
or
cmp
push
pusha
out
dec
icebp
shr
into
push
mov
mov
xchg
push
sub
popa
push
jge
je
retf
in
aaa
push
add
mov
mov
(bad)
rol
adc
cmp
xor
and
daa
ja
lods
lods
ficomp
mov
icebp
cwde
sub
lods
and
rcr
jg
rcr
in
loopne
cmp
fsqrt
outs
or
jne
xchg
das
add
test
xchg
adc
dec
scas
adc
pop
in
sbb
adc
cmc
mov
push
scas
push
and
inc
sbb
push
lds
xchg
and
jl
adc
daa
add
mov
lods
je
test
fmul
mov
ins
sbb
dec
sbb
mov
push
add
dec
movs
pop
popf
pop
jo
cld
and
pusha
das
mov
and
jle
shr
push
scas
xor
dec
mov
lods
fs
push
cmp
lea
leave
mov
icebp
lods
movs
or
das
outs
int3
sbb
in
gs
cwde
movs
jae
dec
xchg
push
clc
mov
iret
sub
xchg
inc
and
lds
hlt
xchg
xchg
cmp
pop
(bad)
or
lods
cwde
in
and
inc
pop
(bad)
add
mov
push
fidivr
cmp
cdq
leave
jmp
push
sub
adc
cmp
punpckhwd
in
mov
sbb
mov
xchg
sub
dec
movs
dec
mov
out
or
mov
fiadd
ror
out
pop
(bad)
popf
daa
lods
pop
retf
xor
outs
cmp
or
out
add
and
cdq
sub
shl
out
jne
test
jecxz
mov
(bad)
or
inc
inc
cld
jno
aad
jae
pop
out
idiv
out
pop
mov
outs
mov
pop
out
mov
lahf
mov
or
pop
mov
cmp
cs
mov
fdiv
xchg
dec
fld
(bad)
inc
xor
lock
mov
pop
and
mov
mov
lahf
cli
mov
mov
jl
ficomp
jg
mov
mov
push
mov
int3
outs
int3
dec
sbb
inc
hlt
adc
jg
neg
loop
clc
sbb
dec
add
mov
pop
push
cwde
mov
fcomp
adc
(bad)
leave
in
jmp
mov
ds
sbb
mov
scas
scas
stos
lods
mov
jl
out
stos
mul
popa
cmp
inc
int3
push
jb
xchg
mov
inc
mov
pop
inc
movs
cli
push
xor
mov
mov
sbb
loope
sub
add
mov
rcl
sbb
in
or
mov
mov
(bad)
fld
sbb
std
(bad)
in
ins
daa
in
mov
pop
jg
inc
int3
stc
pop
mov
adc
jp
sti
ins
out
adc
in
outs
jmp
pop
popa
inc
imul
and
in
xor
xchg
jle
add
jecxz
xor
mov
inc
in
xchg
scas
dec
ror
sub
cld
imul
mov
shr
jbe
arpl
mov
mov
in
fcomp
sbb
out
(bad)
ja
sbb
and
in
mov
add
inc
inc
push
mov
cmp
scas
cmp
sahf
xchg
pushf
ja
cmp
in
sub
jecxz
jl
xchg
je
add
sub
and
dec
adc
leave
xlat
inc
fwait
xor
jge
out
in
or
ret
add
fistp
test
leave
fist
lea
and
sbb
jl
fidiv
popf
jnp
cs
or
adc
or
sub
mov
or
jo
in
fs
adc
push
inc
jne
mov
into
xchg
out
sbb
repnz
ins
imul
mov
mov
loope
mov
or
cld
cmp
inc
mov
(bad)
ins
retf
jle
pop
ja
dec
xchg
(bad)
mov
out
or
or
test
cs
aaa
loopne
mov
and
mov
dec
mov
dec
push
bound
dec
repz
in
movs
aaa
fisub
cmc
jns
inc
test
jb
push
cmp
jg
imul
add
jg
test
xor
adc
aad
jmp
(bad)
xchg
fld
add
mul
adc
dec
sbb
neg
cld
daa
sub
and
bound
in
daa
sbb
xchg
inc
and
mov
fdivr
dec
mov
stc
movs
ins
push
mov
jae
mov
and
inc
add
push
test
fwait
sbb
pop
push
add
adc
test
and
std
cwde
push
and
xchg
loop
inc
add
ds
scas
arpl
nop
jbe
mov
aad
popa
mov
jg
movs
mov
aam
ja
fsubp
(bad)
fsubr
mov
push
sbb
fcmove
pop
fisubr
(bad)
fbstp
outs
xchg
and
sbb
cmps
lods
ins
mov
fisub
inc
and
shr
cmp
enter
dec
shr
pop
add
jne
jne
cwde
loope
fistp
(bad)
inc
cli
call
nop
sub
out
movs
mov
lds
jl
inc
push
and
dec
xchg
jle
loope
(bad)
pushf
dec
int3
ins
test
jns
cmps
and
xchg
xor
pop
out
inc
or
test
adc
add
aam
xor
cmp
mov
loope
jmp
and
xchg
pop
loope
and
jae
jmp
pop
sahf
jmp
imul
loope
shl
sbb
push
sub
addr16
rcr
or
sub
xchg
lods
mov
test
ds
in
iret
mov
fdivr
xor
mov
or
lea
push
pushf
push
and
sbb
fbld
cld
cli
les
test
cmps
(bad)
shl
xchg
je
fcomp
sub
cmp
push
test
dec
dec
das
jno
mov
cmp
out
shl
dec
stos
sbb
stc
int3
cmp
mov
pop
xchg
pop
cs
xor
call
fiadd
cmp
jne
int
mov
pop
jmp
ja
and
lods
fucomi
cmp
inc
stos
int
outs
cmp
test
and
and
aas
retf
aad
and
push
sub
in
pop
push
mov
in
jmp
out
inc
or
inc
dec
cmps
stos
or
into
and
std
xchg
fptan
loopne
pop
gs
les
sbb
and
icebp
xabort
adc
cwde
test
ja
jb
add
pop
sub
ss
orps
mov
imul
int3
mov
inc
and
xor
loope
popf
cmp
sar
mov
sar
and
repnz
and
sar
mov
or
jp
cli
add
pop
adc
cmp
cdq
jge
aas
jne
repnz
mov
mov
jl
int3
test
ds
dec
aad
test
inc
mov
sahf
mov
fidiv
add
ret
or
loopne
scas
pusha
pop
cdq
and
fs
int
call
or
sbb
pop
or
dec
mov
xchg
daa
imul
jmp
cli
xor
dec
jl
push
jno
cmp
ins
push
xchg
es
adc
xchg
jnp
pop
pushw
inc
push
into
jecxz
(bad)
mov
mov
mov
or
data16
cwde
inc
xchg
(bad)
cmc
iret
out
mov
out
jl
in
cli
adc
sbb
add
sar
lock
fidiv
imul
mov
mov
inc
jl
repz
ins
pop
and
mov
pop
scas
repz
pop
ins
icebp
cli
out
repz
mov
daa
gs
daa
jle
mov
(bad)
movs
dec
or
push
sti
(bad)
popf
jbe
pop
inc
push
mov
inc
cwde
fdiv
jae
mov
mov
enter
retf
retf
cmp
fldlg2
jl
jl
mov
rcl
pop
sub
jno
ins
ds
sbb
adc
pop
mov
in
arpl
add
or
and
xor
fdiv
push
sbb
stc
cmp
not
into
pop
mov
dec
xlat
xchg
or
sub
popa
loope
icebp
lea
mov
sbb
and
loope
pop
out
in
out
dec
retf
jle
mov
loope
outs
xor
mov
xor
sbb
popf
cmp
(bad)
xchg
(bad)
imul
adc
leave
push
into
(bad)
or
push
ror
ds
pusha
out
and
cmp
sbb
push
(bad)
aad
pop
out
(bad)
xchg
out
or
(bad)
pop
add
mov
mov
sub
fld
push
stc
jmp
pusha
sub
jle
mov
xor
(bad)
stos
and
fcomi
push
jnp
sub
sub
dec
fst
daa
data16
inc
and
fadd
xor
xchg
gs
mov
fcom
stos
imul
mov
add
xor
loopne
dec
xchg
dec
cmp
lds
inc
pxor
lea
out
stos
cmp
inc
jb
lods
xor
mov
mov
inc
loop
iret
cdq
or
mov
clc
es
ins
push
jbe
mov
add
inc
jnp
into
adc
inc
xor
sahf
out
sar
je
data16
mov
xchg
loop
imul
(bad)
push
fwait
hlt
scas
fst
sbb
xchg
and
dec
in
xor
mov
cmp
mov
fst
add
outs
inc
dec
(bad)
into
dec
test
push
pop
or
jnp
xor
lahf
aas
sbb
dec
jns
mov
pusha
jge
pushf
js
push
xlat
add
pop
leave
test
nop
lea
rcr
cli
xor
iret
fcomp
and
ds
mov
and
add
push
pop
mov
pop
mov
mov
or
je
outs
mov
outs
xchg
pop
imul
push
sub
sub
cmps
mov
jnp
push
popf
scas
adc
dec
push
add
jmp
mov
pop
jno
loope
xchg
push
jl
mov
xchg
popf
mul
fistp
add
jno
mov
daa
test
pop
mov
mov
fstp
ins
aad
daa
mov
jle
shl
push
cdq
outs
xor
pushf
call
lock
arpl
xchg
sbb
shr
jbe
dec
cdq
adc
fldenv
test
sar
sub
jg
sbb
rcr
pop
out
dec
mov
cmc
iret
mov
jne
(bad)
pop
cmp
cs
dec
mov
or
sahf
mov
xchg
(bad)
imul
jecxz
push
push
mov
pop
fbstp
mov
sbb
rcr
ror
dec
xor
jno
stc
xor
stc
out
jns
fstp
push
pusha
mov
mov
cdq
out
xchg
aas
dec
add
push
lds
push
(bad)
in
jl
xchg
adc
sub
and
imul
or
sub
nop
push
fcom
adc
mov
mov
in
mov
test
sbb
mov
pop
out
mov
imul
repz
add
in
mov
mov
stos
push
inc
sub
std
test
and
xor
aam
mov
add
adc
xchg
bound
sti
ins
inc
xor
sbb
fnstenv
inc
outs
test
in
mov
movs
cmp
push
in
sbb
and
shl
jno
jb
test
pop
stos
test
add
mov
inc
mov
jne
loopne
dec
retf
xchg
xchg
sbb
loope
stc
mov
scas
sub
jnp
in
mov
push
ror
jae
shl
push
or
cmp
dec
mov
lock
adc
cmp
ja
cmps
cdq
or
xor
outs
es
movs
hlt
or
jmp
aaa
out
int3
pop
or
mov
ss
test
or
fdiv
adc
inc
jge
(bad)
jle
loopne
mov
mov
lock
mov
mov
sub
lahf
jge
imul
xlat
bound
scas
addr16
add
rcr
lods
movs
lods
dec
or
sti
mov
daa
inc
fs
xchg
ja
jb
mov
es
inc
fisttp
mov
stc
xor
adc
xchg
imul
or
dec
leave
jb
mov
lahf
and
and
ja
sahf
inc
out
push
mov
mov
dec
mov
jmp
jg
call
mov
add
or
(bad)
and
pop
jge
inc
pop
xchg
jecxz
mov
add
rcl
or
std
aaa
pop
add
pop
mov
js
push
(bad)
push
(bad)
gs
xor
jmp
rcl
jae
xor
jns
outs
mov
xor
dec
aas
mov
dec
jmp
mov
shr
sub
pop
leave
inc
cwde
mov
mov
fstp
ret
inc
sub
xchg
enter
xor
imul
add
xor
sti
mov
sbb
lahf
mov
pop
and
mov
bound
fisubr
xchg
or
sbb
cld
and
shl
mov
icebp
xchg
or
xor
aaa
xlat
sbb
mov
and
(bad)
retf
pop
sub
ja
pop
xchg
mov
call
mov
in
idiv
int3
dec
jl
mov
fild
push
leave
and
inc
sbb
pop
stos
hlt
and
dec
push
ja
jp
jg
and
or
push
js
scas
jns
mov
aaa
inc
push
dec
std
mov
push
pop
pop
sbb
adc
jg
in
jbe
retf
cmps
xor
xchg
mov
dec
sub
mov
icebp
mov
mov
rol
adc
pop
mov
ins
inc
lea
daa
call
call
cwde
(bad)
adc
push
xor
pusha
ins
adc
xchg
xor
adc
pop
sbb
xor
aas
sub
test
inc
ins
adc
xlat
lahf
packssdw
mov
lods
xor
inc
fidiv
mov
test
or
fstp
xor
pop
fld
inc
call
sbb
mov
push
add
ficomp
cwde
mov
ss
dec
mov
mov
add
in
div
jl
pop
or
push
push
xchg
or
xor
dec
sahf
dec
push
pop
cli
mov
push
xchg
lahf
shr
add
add
mov
jl
mov
loop
add
cmp
test
in
stos
movs
inc
adc
sub
mov
bnd
dec
dec
enter
cmp
(bad)
pop
lods
dec
xor
movs
pop
and
std
shr
dec
add
dec
and
cmps
push
inc
xchg
sar
movs
std
jbe
sub
jle
repz
mov
cmp
jns
div
das
arpl
sbb
das
cdq
hlt
inc
(bad)
aaa
popf
sbb
jp
sub
add
(bad)
dec
mov
and
jp
push
(bad)
fsubr
icebp
call
int
xchg
push
lods
xor
adc
fcomp
mov
push
sub
push
cmovl
loop
add
call
in
nop
or
mov
in
std
arpl
sub
mov
sbb
mov
gs
pop
xchg
push
fbstp
dec
pop
cmps
xchg
xor
fxch
push
test
pop
add
xor
sbb
fild
in
in
xor
add
push
mov
iret
addr16
jl
mov
pop
ins
cmp
cmps
cmp
mov
xchg
stos
adc
jne
mov
fnsave
push
push
inc
dec
add
(bad)
xor
sar
adc
mov
xchg
mov
out
(bad)
out
movs
mov
gs
in
paddb
repnz
inc
ds
mov
retf
pop
js
jno
xchg
xor
aaa
int3
jmp
in
add
xor
xchg
into
mov
mov
mov
mov
inc
mov
cs
arpl
push
push
lock
sbb
rcr
loope
loopne
dec
cmp
adc
call
xchg
das
enter
mov
std
mov
test
loop
xchg
mov
or
jg
in
call
fldcw
ja
push
jge
mov
xchg
mov
add
mov
mov
sbb
rol
ins
lods
jmp
or
pop
loope
jne
inc
out
lods
fcomi
pop
clc
stos
in
icebp
and
pusha
popa
repnz
push
fstp
(bad)
mov
mov
dec
sub
mov
std
pop
add
ss
mov
xchg
cs
sar
cld
lods
adc
scas
sbb
test
lahf
push
out
stos
push
or
cmp
test
push
jo
or
(bad)
rol
(bad)
or
retf
out
sbb
fidiv
mov
mov
jl
mov
repz
pusha
stc
aam
ss
shl
jp
mov
sub
push
mov
cli
outs
(bad)
imul
pop
out
adc
fwait
cmp
sub
(bad)
mov
mov
retf
nop
xchg
loop
inc
ror
jo
and
data16
lods
data16
mov
ret
xchg
push
in
push
ins
(bad)
aam
mov
mov
inc
jmp
pushf
leave
repnz
daa
es
cdq
fisubr
mov
pop
or
push
fsub
mov
retf
push
jmp
sbb
popf
outs
and
popa
js
movs
pop
xlat
inc
outs
cmp
movs
push
sbb
cmp
dec
repz
and
push
adc
mov
sub
cli
inc
(bad)
mov
pop
les
mov
aas
fbld
xchg
clc
mov
or
mov
cmp
int3
cli
test
int3
lock
out
jno
jno
(bad)
scas
add
adc
and
push
pop
mov
ret
jnp
jnp
jmp
into
lods
push
add
mov
xor
test
mov
mov
pop
enter
fwait
pop
(bad)
push
(bad)
sahf
pop
mov
loopne
out
xor
repz
rol
push
lods
and
push
mov
imul
pop
cmp
push
aas
and
ficomp
aas
sbb
xor
push
clc
mov
(bad)
out
xchg
adc
pop
outs
outs
cmc
mov
movs
loope
std
adc
cld
adc
cmp
ja
mov
and
mov
stos
push
mov
dec
cli
jle
push
out
ret
es
and
add
xor
hlt
(bad)
gs
rol
mov
outs
adc
into
enter
sbb
(bad)
jp
mov
mov
xchg
inc
shl
sbb
and
pop
sahf
bound
inc
add
lahf
bound
mov
js
cmps
loop
sub
icebp
retf
pop
xchg
and
repnz
lds
xchg
(bad)
fs
std
out
sahf
jmp
dec
out
out
or
push
mov
adc
jns
in
lock
jge
mov
mov
je
das
in
adc
rcr
or
or
sahf
xchg
mov
iret
pinsrw
push
push
(bad)
cdq
into
add
add
adc
xlat
outs
or
leave
add
cmp
mov
call
jecxz
cs
lds
int
sbb
and
jb
pop
or
sub
int
scas
xchg
out
popa
push
pop
adc
test
push
fmul
push
or
jmp
sar
adc
sub
ror
rcr
adc
jns
not
test
jbe
pop
xchg
fsubr
jae
mov
jnp
sbb
push
les
sbb
xchg
ficom
pop
(bad)
loop
xchg
std
jne
mov
mov
xor
pop
or
bound
retf
dec
in
xchg
outs
sbb
pushf
ror
scas
push
mov
(bad)
movs
mov
cmp
mov
shl
xor
data16
fst
lods
xchg
cmp
jbe
jns
xchg
cmp
jne
adc
cmp
xchg
xor
add
(bad)
dec
inc
inc
test
scas
add
(bad)
xor
stos
push
adc
(bad)
imul
cmp
fld
in
jp
sti
ror
fld
sti
call
cdq
or
dec
pop
test
loopne
jae
les
hlt
pop
fwait
jae
cmp
lock
fwait
sbb
pop
and
jmp
mov
lods
jno
sbb
or
lea
rol
push
jne
add
scas
test
jne
scas
inc
call
test
data16
cmp
xor
mov
mov
dec
daa
dec
add
addr16
and
lea
xchg
and
xchg
cli
adc
add
adc
xchg
mov
aad
adc
dec
xor
mov
mov
retf
or
retf
bound
or
outs
pop
adc
dec
fnstcw
inc
repz
mov
pop
cli
inc
lods
call
sub
dec
jp
out
sbb
push
jne
add
pop
pop
xor
jge
dec
in
pop
int
gs
outs
jo
scas
rol
out
or
ficomp
cmp
fld
push
mov
fcomp
adc
pop
or
pop
jg
std
jmp
test
adc
fs
nop
sbb
lds
mov
data16
inc
mov
aaa
add
jge
icebp
int3
bound
es
mov
dec
adc
push
call
mov
in
lock
sbb
mov
call
shl
jb
pop
movs
fistp
imul
sub
repnz
jo
lds
pushf
and
or
mov
push
sbb
ins
pop
mov
test
push
jo
jo
cmp
(bad)
pop
and
aam
xlat
sbb
ss
cmps
pop
cmc
cmp
add
or
sub
cwde
dec
xlat
cmp
mov
and
jbe
lods
jg
mov
pop
das
and
dec
jle
lock
mov
rcl
mov
xchg
scas
pop
mov
movs
cmp
push
js
adc
sub
jge
sti
icebp
or
shr
inc
sbb
and
cmp
push
push
ins
adc
nop
add
dec
mov
adc
jge
movs
sbb
(bad)
adc
int
add
cli
repnz
mov
and
lds
cmp
in
neg
out
movs
jg
ret
push
and
inc
jae
pushf
out
call
adc
pop
les
das
aas
inc
fimul
inc
push
aas
push
push
cmp
xor
bsr
les
scas
imul
dec
adc
es
ds
stc
ficom
adc
mov
pushf
jl
cmp
mov
pop
jns
out
xchg
sub
xchg
aad
sbb
mov
or
jne
add
dec
sub
or
xor
push
or
imul
je
cwde
xchg
adc
adc
popf
sbb
or
sbb
mov
sbb
cmp
jp
sub
rcl
test
push
add
repz
jbe
shl
pop
sbb
lds
mov
xchg
mov
cmps
push
add
cmp
xor
or
mov
ins
mov
and
outs
inc
and
pop
push
push
int3
mov
sub
inc
pushf
in
push
add
adc
jb
idiv
mov
or
(bad)
sbb
adc
jns
inc
sub
ffree
or
shl
out
pushf
pop
inc
movs
lahf
out
repz
adc
sub
adc
out
jge
and
pop
dec
xchg
mov
and
(bad)
leave
scas
adc
fxrstor
out
dec
ds
stos
adc
fnstenv
mov
out
push
pushf
or
stc
cmp
mov
ret
push
neg
das
sub
fisttp
and
dec
xor
or
cmc
mov
xor
repnz
dec
into
lea
adc
test
fdiv
fwait
aas
cmc
jns
lahf
out
mov
leave
ret
sbb
repnz
pop
inc
dec
clc
cmp
or
pop
gs
dec
das
aaa
stc
mov
jbe
or
cmp
cs
xchg
fisubr
icebp
outs
(bad)
fwait
push
loope
and
dec
add
pop
shl
repnz
imul
or
dec
aam
jnp
cwde
mov
push
fwait
mov
je
loope
or
and
shl
xor
sub
das
add
xchg
clc
inc
pop
dec
stc
in
pop
(bad)
(bad)
rcl
in
xchg
addr16
sub
or
and
sub
scas
mov
outs
lods
int
sub
outs
lock
adc
or
test
jno
sub
shl
rol
fs
and
sahf
aas
mov
or
inc
jae
lahf
imul
mov
pop
push
xor
das
ror
loope
sub
mov
and
push
mov
sbb
mov
(bad)
xchg
bound
mov
data16
in
or
or
and
pop
fisubr
les
enter
popf
push
sbb
xchg
mov
sbb
nop/reserved
repz
mov
fs
outs
xor
add
loop
mov
jle
push
cwde
scas
mov
popa
xchg
inc
push
lods
int3
aad
shl
xor
xor
scas
mov
push
or
mov
xchg
sub
and
out
sub
les
js
xor
ins
or
ja
div
shl
inc
lods
fwait
shl
mov
mov
sub
push
stc
inc
and
jne
clc
xchg
and
pop
mov
pushf
out
or
jo
(bad)
clc
inc
scas
ficomp
xchg
loopne
mov
mov
bound
fild
pop
push
inc
or
dec
int3
int3
loope
repz
lahf
sub
fwait
jmp
(bad)
fild
add
xchg
mov
cmp
mov
int
stc
xlat
or
(bad)
scas
pop
js
inc
idiv
dec
mov
sub
mov
pop
punpckhwd
es
pop
dec
cmp
jmp
pop
lods
mov
push
adc
push
xor
mov
mov
(bad)
or
icebp
into
iret
dec
and
sbb
mov
push
sbb
mov
add
les
push
and
lar
movs
and
fstp
cmps
sahf
or
(bad)
repz
(bad)
fistp
xor
mov
jb
xor
xor
jg
retf
mov
cmp
jno
xchg
xchg
dec
and
ds
mov
shr
lods
test
fisttp
ja
push
je
push
push
mov
xchg
jns
mov
neg
dec
fldenv
enter
syscall
sbb
leave
and
sbb
cmp
cld
and
cld
lea
mov
dec
jnp
jne
mov
jns
iret
inc
sbb
jl
cwde
hlt
cmp
mov
jnp
adc
sbb
push
movs
shr
mov
pop
sub
es
jb
pop
test
jle
into
pop
mov
dec
icebp
lock
push
(bad)
outs
jg
push
fdiv
jmp
das
test
jne
loop
mov
mov
jo
and
cmp
mov
(bad)
test
sbb
loop
adc
cmc
add
sub
sub
or
mov
lods
les
(bad)
stc
push
xchg
push
fs
mov
dec
mov
lods
and
push
push
pushf
loopne
std
(bad)
or
mov
pop
mov
call
sar
(bad)
cmp
(bad)
es
shr
stos
(bad)
jmp
inc
mov
lods
jno
mov
into
test
mov
fsincos
sub
inc
loop
xlat
in
mov
in
xor
mov
and
in
xor
sub
jmp
test
call
xor
into
shl
pop
enter
or
cs
adc
clc
stos
jecxz
adc
mov
push
mov
je
inc
sahf
or
cmps
into
jne
mov
retf
sbb
mov
mov
into
outs
test
xchg
shr
sbb
sahf
std
sbb
fisttp
inc
sbb
cmc
mov
sahf
popa
add
lock
imul
mov
jmp
stc
xchg
int
adc
pop
ficomp
jmp
aaa
mov
dec
mov
inc
popf
(bad)
cld
std
data16
lock
xchg
push
scas
sub
add
add
shl
jb
pop
jb
inc
dec
ficomp
xchg
test
sbb
jp
or
mov
popa
jmp
adc
ret
nop
jle
push
sub
jge
popf
adc
leave
adc
(bad)
sub
(bad)
ja
jle
pop
mov
pop
scas
lea
ret
inc
or
stos
fiadd
std
mov
pop
scas
pop
cmp
pop
mov
xchg
sbb
ins
ror
pop
fnsave
push
jge
jg
push
js
test
push
push
and
loopne
mov
sub
out
out
addr16
mov
outs
or
outs
push
jns
mov
scas
push
xchg
sbb
and
sub
repz
mov
xor
arpl
adc
mov
aas
cmp
mov
loop
(bad)
mov
cmc
sbb
aad
dec
dec
fsubr
cdq
hlt
jno
sub
clc
xchg
test
les
lds
or
cwde
inc
out
loope
pushf
jae
push
or
cmps
fwait
mov
pop
inc
pop
sti
jbe
loope
mov
dec
push
test
clc
nop
and
lods
xor
or
and
ins
add
fld
xlat
mov
or
outs
(bad)
sbb
add
inc
fs
je
test
ds
hlt
jp
scas
aaa
mov
sbb
push
adc
ins
repz
mov
(bad)
jmp
sbb
inc
rcr
sahf
push
push
stc
mov
jae
mov
pushf
push
dec
(bad)
add
mov
movs
outs
or
fild
or
and
pop
pop
adc
retf
gs
cmc
rcr
int3
(bad)
sbb
out
data16
sbb
adc
shl
iret
xor
jbe
popa
rol
and
addr16
fwait
mov
stos
sub
adc
(bad)
jnp
fldcw
je
mov
stos
jo
sahf
mov
adc
push
imul
push
or
sahf
add
call
(bad)
cwde
xchg
lods
test
and
cmp
into
mov
jecxz
xchg
cmps
jg
call
adc
adc
test
and
xor
in
dec
cdq
sbb
imul
jne
addr16
icebp
sbb
retf
pop
loope
dec
xchg
cld
jno
or
ins
add
add
pop
and
mov
mov
xor
or
daa
mov
or
cmp
fcomp
dec
hlt
sar
cmp
jno
pop
ret
jno
and
out
pop
adc
pop
mov
jnp
cmp
repnz
add
xor
mov
mov
adc
pop
ret
adc
xor
inc
jecxz
or
imul
dec
adc
out
push
sbb
daa
inc
loop
in
scas
lahf
mov
adc
jbe
(bad)
xor
(bad)
std
sub
sahf
aas
pop
xchg
xor
clc
sbb
push
mov
inc
sbb
sti
adc
fcomp
loop
sub
pop
lock
push
jecxz
xchg
sbb
lea
dec
std
mov
pop
enter
mov
and
into
cmp
xor
sbb
xor
lock
inc
sti
mov
in
enter
sahf
adc
mov
jecxz
test
push
test
aaa
dec
jmp
loope
jnp
mov
aaa
pop
push
aad
fisttp
out
xor
jnp
out
(bad)
xor
test
je
popf
sti
and
or
sti
outs
fidivr
ret
clc
push
push
sub
sbb
inc
fwait
inc
cmp
jo
xor
push
(bad)
mov
xlat
nop
xchg
jge
mov
out
push
inc
adc
inc
rcr
rol
stos
outs
mov
mov
xchg
loope
mov
xchg
mov
push
mov
dec
fwait
inc
ins
and
and
jmp
cmp
inc
jae
jmp
cmps
sbb
push
push
ret
movs
push
das
sub
dec
ins
in
loopne
xchg
cmp
dec
outs
jbe
or
fadd
xchg
push
or
pop
scas
xchg
jp
jp
or
jp
call
adc
mov
mov
jl
out
push
or
push
xor
push
sub
icebp
ret
cmp
add
mov
adc
lds
aaa
push
mov
popa
jmp
aaa
dec
popf
idiv
add
jnp
xor
push
ss
mov
out
(bad)
into
bound
push
ins
neg
and
mov
test
shr
mov
outs
leave
and
add
jae
xchg
bound
mov
adc
(bad)
xchg
inc
jnp
lock
cmc
and
and
out
adc
or
aam
in
jns
or
call
pop
clc
dec
xchg
jmp
fldcw
cmp
jbe
pop
jmp
xchg
dec
mov
mov
scas
cs
mov
or
enter
mov
xor
mov
mov
cmp
int3
mov
inc
call
sti
jmp
push
dec
sub
sbb
loopne
aaa
inc
pop
cs
loope
inc
arpl
ja
xor
inc
je
pop
sbb
adc
call
xchg
add
inc
and
mov
pop
push
cmp
cmp
jmp
sbb
test
(bad)
out
push
pop
lock
movs
lods
mov
cwde
jmp
or
lock
and
mul
loope
psubsw
(bad)
cmc
add
test
lahf
outs
sub
int3
dec
adc
mov
outs
(bad)
adc
int3
and
inc
in
stc
fst
push
jb
fsub
sbb
cmps
dec
lods
xchg
cmp
lock
pop
mov
mov
mov
xor
pop
pop
neg
cmp
lods
aaa
cli
xor
dec
xchg
in
ss
cwde
cmps
push
mov
je
fwait
in
std
xchg
xor
sub
jb
jae
push
test
pop
push
sub
ds
mov
in
loope
stos
pop
dec
or
sub
std
(bad)
ins
cmp
repnz
(bad)
pop
mov
mov
lahf
jecxz
movs
(bad)
cmp
mov
daa
fnsave
ins
mov
iret
bound
pusha
sub
sbb
cld
out
cdq
fmul
faddp
(bad)
nop
jae
fdivr
shl
add
sbb
fcom
adc
sub
push
out
ror
mov
daa
push
dec
xchg
cmp
cmp
xor
inc
hlt
mov
push
loop
cmc
mov
mov
(bad)
retf
sbb
fisttp
movs
add
add
fisttp
je
popa
fs
out
cmps
xchg
xchg
mov
(bad)
mov
mov
pop
bound
ds
sub
fmulp
fnsave
adc
xchg
(bad)
lods
out
pushf
adc
inc
popa
sbb
and
cmps
inc
cmp
sbb
mov
mov
repz
scas
jp
adc
sbb
lahf
mov
dec
stos
movs
call
or
imul
lock
pop
out
fs
outs
xchg
xlat
std
dec
(bad)
fmulp
outs
iret
jl
add
repnz
(bad)
sbb
sbb
das
repnz
pop
jmp
pop
rcr
inc
aam
sahf
addr16
in
cmp
sub
push
out
and
dec
push
rcr
xor
cmp
xor
mov
inc
and
ins
rcr
xchg
mov
fld
lea
data16
aad
mov
xor
dec
repnz
xchg
pop
jl
scas
into
adc
mov
sbb
dec
jmp
ja
mov
push
iret
push
sti
fwait
jge
inc
into
and
rol
dec
pop
je
lea
setp
stos
pop
cmp
mov
mov
adc
inc
add
aam
pusha
gs
mov
cmps
ret
leave
xor
frstor
test
cmp
loopne
inc
cmp
mov
test
mov
icebp
cmc
je
and
imul
fcomip
mov
dec
push
aam
mov
jns
cmp
sbb
aaa
(bad)
sahf
jl
ins
fisub
or
add
idiv
cmps
xchg
adc
pop
sub
cld
inc
push
mov
cmps
sub
mul
adc
xor
adc
lods
mov
in
mov
test
inc
xor
popa
out
ficomp
ss
out
aam
pop
jbe
xor
in
or
dec
test
(bad)
mov
adc
fst
es
inc
or
add
sub
leave
jl
pop
ins
or
ins
jbe
js
push
dec
or
retf
inc
xlat
imul
dec
xchg
dec
std
mov
cmp
and
mov
das
aas
(bad)
mov
in
jmp
sub
pop
ret
in
jp
enter
or
stos
or
push
add
pop
inc
inc
add
(bad)
popa
push
sub
not
fs
mov
sbb
repz
mov
adc
loope
(bad)
les
inc
(bad)
inc
cmp
ja
pop
rol
cmp
xor
xor
adc
or
test
mov
add
inc
push
pop
stc
mov
sbb
jle
fild
test
inc
into
mov
stos
pop
pop
es
call
cmp
mov
sub
or
adc
(bad)
repz
cmps
lods
and
dec
outs
xlat
aad
bound
sub
push
sbb
aaa
dec
fcom
aaa
or
mov
jo
out
push
xor
and
fstp
fisub
mov
cmp
push
push
rol
adc
(bad)
fild
xor
pop
es
jp
sbb
mov
adc
shr
lahf
dec
repnz
mov
pop
xchg
pusha
push
inc
lods
xchg
fbstp
push
fld
retf
dec
les
mov
fwait
aas
adc
push
cmc
push
cwde
rol
jl
sbb
dec
push
shl
popa
xchg
std
movs
xchg
icebp
dec
mov
jo
ds
pop
push
leave
jno
or
sbb
je
jae
sahf
xchg
ins
xor
(bad)
enter
sub
jmp
push
lahf
cmp
jbe
std
dec
stc
mov
imul
xchg
cmovne
fwait
mul
aam
push
(bad)
jg
je
jne
ds
sub
dec
xlat
(bad)
inc
sbb
and
popa
push
js
pop
xlat
pop
or
out
jg
pop
push
pop
jmp
movs
mov
imul
mov
int3
sbb
inc
sbb
cld
and
mov
call
lods
add
mov
in
stos
push
sti
js
arpl
neg
repnz
neg
ins
test
and
(bad)
sahf
ret
and
mov
push
data16
push
push
xor
outs
mov
(bad)
adc
sub
cmp
add
lds
shr
fisubr
outs
out
sub
adc
or
push
sbb
cmps
mov
add
adc
adc
sbb
mov
in
(bad)
into
xor
add
enter
dec
jb
pop
cmps
xchg
jne
push
ins
cmp
scas
call
push
shr
repz
adc
test
pop
sub
and
bound
mov
in
lahf
mov
jne
cmp
xor
shl
mov
mov
test
push
mov
xchg
lods
inc
fsubr
cmp
sbb
xchg
test
vfmsubadd132pd
sub
popf
je
mov
mov
xchg
lds
clc
jbe
sbb
sar
stc
mov
outs
sub
xchg
xor
inc
out
or
jo
mov
enter
dec
(bad)
fdiv
or
ja
aam
mov
cmp
jle
rol
dec
leave
inc
push
push
fmul
fild
xor
repnz
retf
stos
outs
sbb
fdivr
dec
out
sub
enter
jg
scas
ret
pop
push
pop
sub
ldmxcsr
lds
sti
cs
xchg
dec
cld
push
scas
stc
cmp
push
mov
mov
inc
shl
mov
test
stos
inc
sbb
ror
(bad)
and
out
or
test
je
stos
fild
or
sahf
cwde
mov
sahf
inc
(bad)
std
jo
sbb
add
sbb
mov
jns
sbb
push
les
shl
rcr
add
int3
sub
dec
ret
adc
cdq
sub
repnz
sub
int
popf
ds
inc
cmp
xchg
lds
xchg
arpl
data16
fiadd
mov
sbb
and
push
jg
test
inc
aas
jns
nop
mov
xlat
not
pop
jbe
jl
(bad)
mov
inc
shr
mov
mov
sbb
jmp
sbb
stos
mov
mov
add
repnz
dec
cmp
in
xchg
or
jnp
pop
mov
cmp
(bad)
jmp
cld
pop
sub
mov
xchg
sbb
cmp
mov
stos
or
das
xchg
rcl
jbe
xchg
mov
lds
jbe
outs
scas
dec
dec
mov
rcr
mov
les
pop
or
inc
jbe
mov
ja
add
out
loopne
mov
mov
out
fsubr
in
mov
cs
mov
mov
pop
rcl
out
dec
neg
jns
mov
jmp
sbb
stos
jo
stos
xlat
js
push
sub
ror
stos
adc
pop
mov
dec
mov
aad
inc
mov
and
in
rcr
inc
xor
mov
jae
cmp
call
pushf
add
adc
inc
mov
shr
adc
add
mov
cmp
loop
jl
cs
enter
outs
stos
repnz
popf
mov
repnz
inc
jno
mov
int
adc
outs
test
cmp
in
xchg
pop
lods
out
jbe
or
jmp
jnp
jle
sbb
xor
shr
(bad)
dec
lahf
scas
and
cmps
sbb
cmp
xchg
call
sub
(bad)
and
inc
aaa
xchg
jb
sbb
jg
loop
cmp
(bad)
mov
and
scas
in
jne
or
dec
or
pop
adc
sti
in
inc
lds
xchg
rcl
add
stos
cmps
push
lods
cdq
xor
cmps
xchg
push
add
out
dec
add
adc
jbe
inc
pop
and
add
jne
cmp
popf
daa
aas
pop
pop
lahf
cmp
and
or
push
js
iret
dec
jl
stc
cmp
inc
sbb
shl
mov
and
out
push
push
cli
jge
pop
xchg
push
add
push
adc
bound
sbb
loopne
in
ret
inc
mov
xlat
retf
xchg
fs
stos
push
das
jmp
(bad)
ror
or
cmps
gs
iret
pop
inc
fsub
xchg
dec
add
mov
xchg
inc
imul
btc
and
fdiv
xor
mov
test
and
dec
jle
or
sbb
xchg
adc
xor
retf
stos
repz
and
cmc
pop
pop
mov
movs
sbb
dec
dec
xchg
sbb
and
sbb
ret
lahf
xor
ja
pop
je
jle
in
into
dec
and
jl
dec
lock
mov
shr
pusha
inc
jp
mov
xlat
(bad)
mov
push
mov
inc
pop
mov
popa
jae
and
sbb
cwde
ins
sbb
xor
jne
cmp
jne
push
sub
mov
dec
ins
shr
retf
pop
enter
jb
xchg
jmp
inc
jne
cld
mov
imul
jo
xor
xchg
(bad)
sbb
ret
jmp
push
xchg
outs
out
call
es
dec
and
adc
pop
sbb
popf
call
xor
or
xchg
imul
fisub
lods
add
inc
inc
das
stc
mov
mov
push
pop
adc
(bad)
call
mov
outs
ss
and
setle
aad
add
ret
dec
scas
mov
push
mov
outs
inc
xchg
jbe
push
addr16
xor
push
jne
enter
mov
and
adc
cdq
and
jmp
iret
mov
xchg
or
add
mov
jno
dec
je
dec
mov
cli
sbb
shl
test
lods
test
push
in
rcl
rcr
mov
mov
hlt
(bad)
fisub
cmp
aaa
pop
(bad)
pop
push
jmp
mov
mov
loop
fdiv
mov
jmp
mov
xchg
sar
aas
inc
push
cmp
retf
test
and
mov
pop
jno
sub
jno
mov
hlt
jne
xchg
jo
push
fcmovnbe
add
adc
imul
sbb
jbe
pop
(bad)
mov
xlat
cli
jl
int
xchg
xor
adc
add
lahf
data16
sbb
jl
sar
cld
pop
daa
sbb
pop
sahf
(bad)
pop
inc
in
rol
es
inc
cmp
pop
test
mov
jmp
fwait
sbb
ret
nop
test
pop
arpl
mov
inc
inc
mov
repz
and
sub
mov
sbb
mov
adc
push
aam
ret
push
adc
das
popf
loope
cmp
in
jle
push
(bad)
leave
sbb
sub
mov
adc
lods
in
sbb
sbb
movs
ret
xor
ror
sbb
leave
out
adc
pop
out
shr
or
dec
ins
das
mov
add
xchg
add
mov
push
imul
aad
xchg
sbb
in
out
push
cmp
add
mov
dec
xor
popf
push
push
movs
add
mov
sbb
add
xchg
arpl
aas
push
imul
stos
push
stos
xadd
push
pop
aaa
leave
pop
movs
into
clc
mov
ins
xor
cli
push
dec
dec
test
and
bound
mov
add
retf
mov
mov
inc
stos
add
jnp
enter
out
xor
jno
push
push
cmps
daa
ret
lods
sbb
dec
pop
in
outs
xor
mov
rcl
and
jo
jmp
das
out
adc
popa
repnz
lahf
mov
cmc
adc
xor
jecxz
pcmpeqd
inc
outs
daa
mov
mov
jno
cmp
(bad)
fucomi
or
xor
test
in
ret
sar
iret
popf
mov
out
xchg
rol
mov
daa
add
(bad)
jns
aas
cmp
jmp
ds
(bad)
stos
mov
or
jge
or
scas
fsin
je
sahf
cmps
pop
jbe
pop
mov
test
sbb
mov
icebp
pop
aam
or
mov
leave
dec
std
push
cmps
cmps
mov
(bad)
push
scas
int
mov
or
mov
sub
xchg
ret
jg
sub
or
sbb
pop
vmovsd
js
mov
push
in
in
mov
sar
dec
in
ret
daa
inc
cli
fistp
inc
mov
aas
fisub
mov
psrlw
shl
mov
dec
mov
ins
sbb
sub
and
stos
addr16
test
sub
call
mov
(bad)
loopne
inc
mov
fild
inc
jns
sub
cs
leave
sub
fdivrp
adc
pop
mov
into
mov
shr
add
and
cmp
push
mov
into
push
push
sar
jecxz
cld
sti
inc
add
(bad)
call
mov
stc
test
movs
xchg
dec
lds
fcomp
pop
inc
inc
es
mov
sbb
mov
add
cmp
mov
loopne
lea
vorpd
pop
mov
jle
imul
shl
cmp
sar
(bad)
push
push
and
sub
icebp
sub
repnz
xor
fisttp
mov
add
dec
pop
in
imul
mov
out
cmp
cmp
fbld
and
pop
out
sub
loop
or
adc
dec
int
xor
popf
cmps
xchg
enter
push
pop
test
je
div
xor
fild
mov
into
jns
in
fild
pop
aas
data16
mov
daa
(bad)
repnz
adc
xchg
sar
(bad)
xor
mov
shl
addr16
and
bound
ja
faddp
pop
cwde
jp
push
aad
or
jp
int3
leave
out
lock
cs
ret
sbb
mov
repz
mov
mov
push
dec
pushf
lfs
dec
xchg
pop
cmp
pop
outs
mov
xor
stos
in
loop
loop
pushf
call
pop
ret
mov
dec
fwait
mov
inc
aad
cmp
mov
push
add
xchg
mov
aam
mov
enter
jmp
and
arpl
retf
aaa
mov
jae
fcmove
shl
mov
dec
jo
inc
mov
jae
retf
mov
ja
push
lods
mov
leave
bound
ins
aas
stc
adc
rcl
pop
(bad)
mov
adc
leave
fst
pop
mov
sub
sbb
outs
push
jecxz
xor
shl
out
call
jmp
ins
push
or
loop
cmp
xor
mov
(bad)
pop
ins
and
jp
es
outs
jns
stos
scas
jge
loope
call
push
aad
xchg
push
test
sub
ss
das
xchg
stc
push
xchg
gs
fdivr
mul
shr
out
push
xlat
sub
pop
pop
add
ror
sbb
lds
ror
nop
jae
aad
push
outs
lea
std
aas
xchg
mov
addr16
dec
cmps
lea
jbe
lods
dec
(bad)
pop
loop
fwait
pop
jecxz
or
test
jo
xchg
sbb
mov
dec
hlt
sbb
cdq
or
xchg
dec
push
cmp
inc
hlt
mov
pop
fwait
imul
jecxz
movs
pop
cmp
jp
sub
ret
push
hlt
stos
popa
addr16
dec
jmp
xchg
idiv
test
push
jmp
sub
repz
aad
jge
cmp
mov
rcl
mov
sub
jg
das
cmp
push
and
int
les
add
pop
xor
in
xchg
ror
sbb
mov
mov
ror
mov
pop
mov
cld
retf
cmp
int
xchg
xchg
push
push
jle
inc
ins
mov
jge
xlat
test
or
push
or
lods
and
aam
dec
mov
fcom
int
leave
aaa
cmp
sbb
mov
in
dec
or
lea
test
lods
je
push
dec
mov
je
mov
test
jle
pop
and
fwait
jne
hlt
addr16
ins
add
not
movs
sub
out
aaa
pushf
rol
scas
mov
add
hlt
in
push
sahf
or
aas
pop
(bad)
leave
pop
inc
sub
lods
push
and
call
stos
xor
dec
or
je
add
adc
push
dec
push
cmp
cmp
test
outs
js
jne
xlat
mov
jbe
push
jg
fs
and
aam
sti
push
dec
adc
sub
mov
cwde
xchg
mov
inc
popa
lods
out
xchg
add
imul
(bad)
pop
rol
mov
and
xor
int3
mov
cwde
push
pop
adc
cmp
push
sub
xor
inc
(bad)
cmp
cmp
scas
loopne
aad
xchg
vpsraw
leave
jp
inc
xlat
mov
mov
mov
mov
pop
add
inc
lds
lahf
mov
xor
jge
pusha
sub
sti
cmp
jmp
popf
(bad)
call
adc
enter
xchg
cdq
mov
es
add
sbb
mov
fadd
(bad)
aas
xchg
lock
mov
rol
sbb
cmc
cmp
dec
lahf
mov
inc
in
sbb
inc
xor
cmp
hlt
aam
mov
push
(bad)
cwde
push
loop
pop
dec
sbb
bswap
xchg
into
sbb
xchg
push
cwde
cmps
shl
or
mov
call
dec
and
sbb
push
pusha
ja
push
outs
mov
add
adc
or
or
out
cmp
pop
or
scas
retf
repz
idiv
arpl
push
pop
out
nop
xchg
les
add
inc
les
enter
mov
jno
sub
and
adc
stos
mov
jne
mov
push
stos
adc
out
dec
rcr
jmp
(bad)
cmp
mov
inc
loop
adc
jb
fld
cdq
or
shl
aas
in
dec
clc
mov
pop
xor
popf
movs
dec
mov
call
fcmovb
outs
ss
xchg
push
test
fistp
push
fisttp
int
cmp
(bad)
loop
es
retf
sbb
sbb
ins
pop
push
popf
add
addr16
push
(bad)
aam
(bad)
mov
jo
mov
or
(bad)
call
pop
xchg
xor
lods
mov
iret
adc
pop
test
shl
xor
out
ins
mov
xchg
retf
sbb
inc
dec
xchg
mov
(bad)
xor
popa
mov
into
pop
pop
ds
xor
test
pop
mul
ror
addr16
mov
push
repnz
pop
push
das
xchg
jno
or
jmp
fucomp
push
cmc
loope
push
jb
inc
ds
add
push
popf
cmps
cld
lods
xlat
test
inc
add
push
int
add
movs
jno
or
loope
sub
mov
int
aam
shl
test
out
adc
and
add
pop
sahf
out
push
mov
dec
test
push
fisttp
aaa
dec
push
inc
inc
test
clc
loop
adc
pop
mov
pop
shl
aaa
mov
iret
shr
pop
es
out
(bad)
lds
push
imul
scas
addps
loopne
addr16
xchg
xchg
jmp
dec
stos
pop
mov
jae
jmp
outs
xchg
in
jecxz
adc
jb
inc
test
sbb
add
sub
shl
mov
jne
das
aas
jb
mov
in
add
sbb
and
pop
xor
pop
xchg
inc
fistp
aad
mov
iret
mov
dec
mov
mov
test
pop
sub
dec
pop
jge
inc
jno
cmps
add
clc
les
push
xchg
outs
icebp
dec
js
lahf
scas
(bad)
push
or
loop
pop
(bad)
idiv
adc
sbb
jge
test
std
movs
xchg
(bad)
in
movs
mov
scas
sbb
mov
in
int
pop
movs
jp
pop
ins
push
sbb
xor
cmp
fwait
pop
mov
jbe
sbb
fwait
nop
adc
sbb
xchg
out
imul
(bad)
push
xchg
popf
repz
push
xor
and
fiadd
out
mov
inc
adc
fstp
and
xchg
push
cmp
scas
ins
addr16
fldenv
aam
mov
pop
lods
push
cmp
inc
data16
push
sub
int
jno
ror
xlat
jno
test
add
jle
pushf
jge
in
dec
cdq
sub
ss
cld
push
mov
js
mov
jo
push
fnstsw
inc
inc
loope
mov
retf
outs
jge
adc
fwait
jne
scas
addr16
rep
dec
outs
aaa
inc
mov
popa
out
and
xchg
test
push
retf
mov
push
in
and
sub
mov
push
fist
lods
sbb
out
mov
mov
sub
mov
dec
xchg
xor
pop
call
dec
adc
mov
stos
xor
icebp
aaa
enter
push
or
data16
and
mov
cld
pushf
add
clc
fld
sbb
xor
shl
cs
sub
mov
sti
fiadd
cmp
in
xchg
push
stos
mov
adc
xchg
mov
outs
js
lods
ins
lahf
jge
cmp
cdq
lock
enter
shl
jecxz
neg
adc
stos
adc
dec
repz
jp
xchg
ficom
lods
das
hlt
in
sti
jns
push
xor
stc
lds
std
adc
sbb
pop
inc
pop
sbb
in
sub
jbe
xor
xchg
mov
add
into
mov
out
dec
out
mov
fwait
ins
out
add
ja
leave
jno
push
push
test
sub
and
jnp
cmp
fucom
fst
dec
jl
bnd
push
push
or
inc
dec
mov
lea
pusha
add
pusha
dec
sub
pcmpeqb
pusha
jns
adc
sub
into
dec
pop
daa
mov
ja
out
mov
out
aas
or
test
mov
loopne
mov
jno
ins
jmp
addr16
add
rol
cmc
mov
neg
fcmovb
xor
(bad)
in
push
lea
push
mov
(bad)
(bad)
dec
add
cmps
xor
mov
sub
mov
and
in
enter
stos
fiadd
lods
repz
adc
xchg
mov
mov
in
xchg
adc
cmp
vprotd
push
sub
shr
neg
jbe
cmp
(bad)
in
stc
jl
adc
or
jmp
lds
inc
imul
std
fwait
push
movs
xor
sub
clc
jmp
sub
mov
gs
ror
dec
enter
xchg
mov
test
mov
lahf
repz
pop
dec
js
inc
(bad)
pop
push
repz
add
adc
mov
or
xchg
dec
pop
pop
hlt
ror
cdq
cmps
fldenv
mov
pushf
push
sub
jecxz
inc
sbb
cmp
repz
mov
mov
xor
int
cli
jecxz
ficomp
pop
fidivr
nop
lods
and
(bad)
aas
inc
lods
test
pop
pop
add
xor
push
dec
pop
(bad)
mov
rcl
dec
aas
test
cmp
sub
adc
stos
pop
fnstsw
es
loop
rcr
pminsw
test
mov
cdq
pop
(bad)
icebp
jecxz
mov
lds
je
mov
add
xchg
jno
les
mov
lods
push
mov
mov
into
dec
dec
add
xor
lahf
cmp
adc
daa
mov
and
test
scas
das
sbb
pusha
or
stos
xchg
dec
xchg
xor
sbb
aaa
adc
jle
test
(bad)
movs
rcr
nop
pop
in
(bad)
mov
sbb
in
fadd
loop
addr16
cdq
inc
int3
and
loopne
clc
popa
xor
mov
es
jg
mov
mov
jns
aas
mov
inc
jnp
cmc
(bad)
ror
adc
(bad)
cmp
push
stos
jmp
hlt
sub
div
jp
add
xchg
sub
sbb
mov
(bad)
(bad)
jl
sub
mov
loopne
shl
ins
(bad)
cli
inc
(bad)
icebp
ret
sbb
ret
ja
dec
adc
push
fwait
jl
sbb
dec
out
mov
inc
mov
mov
jmp
dec
sbb
neg
mov
sbb
inc
jne
std
and
std
push
jp
push
fimul
sub
xor
aam
xchg
test
iret
arpl
fdiv
dec
dec
shl
je
out
outs
in
fldcw
sbb
jns
jo
jns
and
out
adc
xor
fild
sahf
out
cld
icebp
jmp
sub
(bad)
out
loopne
jbe
xor
mov
adc
pop
ja
icebp
and
aas
in
stos
push
sub
ss
xor
(bad)
dec
dec
nop
imul
stc
xor
gs
les
xchg
sub
xlat
scas
cli
jp
mov
adc
mov
out
test
xor
adc
nop
dec
push
bound
and
ins
push
and
test
mov
xchg
cmp
cdq
aas
sub
or
fld
std
push
cdq
outs
push
or
rol
lea
or
dec
cmp
dec
cmc
sub
sub
out
cmc
adc
ror
call
fadd
inc
pop
dec
inc
loop
pop
jno
mov
jno
in
xor
fwait
push
into
pop
(bad)
lahf
clc
inc
or
and
jno
lahf
dec
dec
inc
jne
xchg
add
sub
and
and
cmp
cli
cwde
pop
in
mov
dec
lods
cmp
aam
or
xor
mov
or
rcl
xchg
add
jmp
sbb
and
aad
jg
rcr
dec
or
pop
and
neg
lock
test
adc
add
and
es
add
pop
mov
sbb
pop
cdq
out
push
test
shl
dec
mov
cli
punpcklbw
out
pop
clc
jmp
addr16
push
cmp
push
nop
mov
out
ficomp
nop
test
push
fistp
push
popa
mov
mov
cs
dec
push
sbb
(bad)
int
in
xor
xchg
fwait
jmp
(bad)
jle
jmp
rdtsc
xor
(bad)
imul
push
in
or
int
pop
or
aad
pop
call
fild
aad
or
push
mov
push
and
xchg
hlt
lahf
sbb
or
(bad)
dec
ja
or
rcr
mov
jbe
mov
sbb
(bad)
sbb
inc
and
jl
es
xchg
pop
push
in
daa
sub
fisttp
jno
mov
mov
mov
movs
in
or
pop
lds
leave
jns
pop
aaa
retw
daa
or
inc
jge
in
dec
mov
xor
es
adc
test
push
push
fstp
stos
stos
aas
mov
mov
xor
push
or
in
push
ret
cld
loope
mov
gs
xor
add
fist
ins
(bad)
in
inc
in
mov
or
lock
xor
cmps
inc
xchg
lea
ja
les
rol
mov
stos
repz
ret
pop
jno
je
mov
outs
jns
je
enter
in
out
xlat
lods
cmp
cmps
fs
sbb
ret
push
adc
or
mov
(bad)
loopne
and
rcr
mov
push
jbe
lock
retf
dec
add
cmp
sub
mov
jbe
aam
add
xor
pop
dec
and
aas
push
mov
sub
cmp
cmp
cld
push
fnsave
adc
jb
jle
nop
push
or
je
lock
or
dec
inc
out
sub
xor
or
pop
or
outs
pop
outs
pop
cmp
jg
mov
mov
leave
and
leave
idiv
mov
das
push
jno
fcom
adc
int3
sbb
inc
mov
mov
cli
mov
pop
add
movs
xor
hlt
or
and
out
(bad)
fadd
add
popf
jl
pop
fld
int
push
inc
ficomp
push
jmp
in
ins
mov
ins
aas
sbb
ins
push
dec
mov
cld
jl
or
pop
bound
mov
fsub
or
scas
mov
add
push
mov
push
xchg
iret
sar
cmp
xchg
cmp
leave
and
pop
call
push
mov
push
cwde
inc
sbb
lods
aas
sub
(bad)
xor
pop
lods
in
adc
sub
(bad)
data16
icebp
xor
in
push
or
stos
jb
and
dec
xchg
imul
dec
sbb
pop
and
mov
cwde
inc
add
nop
hlt
xlat
inc
int3
int3
sub
pushf
push
push
out
xchg
dec
adc
mov
nop
sub
movs
push
fdiv
dec
xor
scas
enter
mov
cmps
lds
bound
mov
cmp
lods
cmp
and
(bad)
ficomp
jge
xchg
mov
and
push
hlt
push
push
add
mov
repz
in
dec
rcr
mov
imul
inc
mov
add
jne
add
rcl
mov
xor
lods
sub
neg
and
mov
mov
sub
lds
inc
shl
aaa
sub
in
das
mov
pop
scas
movs
in
fcom
push
push
fld
popa
das
cld
test
(bad)
int3
cmp
popf
add
pop
fldcw
push
push
sub
fst
inc
sub
inc
push
jg
mov
and
test
jg
jmp
or
jns
stc
stos
out
mul
add
call
or
stos
out
push
neg
imul
shl
sub
jl
fcom
add
jnp
ins
adc
(bad)
fcmovb
add
sbb
into
adc
lods
cmp
add
mov
dec
loopne
push
xchg
fwait
or
out
std
mov
push
add
ins
test
mov
sti
shl
ficomp
and
mov
adc
inc
jne
xor
dec
push
dec
ins
imul
adc
sub
xor
dec
dec
imul
in
pop
nop
add
xchg
ins
sbb
cmp
imul
call
dec
mov
xchg
cmc
popa
xor
rcr
jno
in
mov
cmp
fst
lea
pop
mov
xchg
push
dec
inc
push
(bad)
int
pop
stc
and
dec
sbb
pop
push
pop
sbb
mov
sar
sbb
sub
ins
xor
ficom
xchg
movs
pop
fwait
mov
out
test
movs
jp
sub
inc
jno
lock
sub
lock
adc
pop
inc
cwde
push
shr
jmp
sahf
xchg
(bad)
jp
stos
jb
add
pop
jo
xor
and
xor
sbb
ins
mov
rcl
push
aas
dec
mov
into
shl
xor
mov
inc
cmp
outs
sub
push
mov
scas
imul
nop
mov
hlt
jge
mov
xchg
out
or
xor
mov
jbe
gs
jp
adc
data16
nop
(bad)
fucomi
adc
pusha
pop
ins
cmps
mov
jl
xchg
test
sbb
pusha
jmp
stos
test
xor
mov
retw
inc
gs
push
je
pop
and
div
cmps
cmp
pop
lds
cli
sbb
lods
mov
add
ret
push
xchg
cli
adc
jnp
hlt
retf
cmp
pusha
fisub
cmp
xchg
sub
cmp
pop
hlt
xor
bnd
popa
jae
ror
adc
xor
fimul
and
imul
ret
fs
dec
scas
push
sub
pop
data16
sbb
xchg
jle
mov
mov
aas
xchg
xchg
cld
fucomip
xchg
js
adc
and
inc
data16
(bad)
addr16
rcl
or
or
and
and
neg
aaa
rcl
or
mov
add
inc
clc
in
aam
push
xor
sbb
lahf
and
jb
loop
les
add
jne
in
loopne
(bad)
(bad)
ds
loope
push
or
inc
sbb
es
push
sahf
retf
push
add
jge
or
mov
mov
dec
cwde
sbb
xor
pop
into
ja
lea
mov
dec
enter
daa
jnp
fdivr
(bad)
ins
dec
nop
cli
aaa
dec
out
aas
(bad)
push
mov
shr
lahf
ret
rcr
(bad)
and
jmp
hlt
enter
mov
pop
mov
add
dec
cmps
and
(bad)
xchg
int3
jle
dec
pop
inc
mov
cs
mov
xchg
ret
or
test
xor
dec
btr
xor
pop
jg
sub
jle
mov
(bad)
jecxz
and
xchg
test
mov
pop
xchg
dec
fstp
sar
mov
test
arpl
xlat
call
loop
mov
xor
test
sbb
fwait
mov
sub
sbb
push
lods
sti
cmps
test
test
adc
stc
out
adc
inc
push
out
xchg
adc
sub
jmp
(bad)
mov
mov
xor
inc
jp
sbb
push
and
inc
mov
sub
mov
pop
sbb
retf
jae
out
repnz
aam
scas
sbb
(bad)
pop
mov
jmp
sub
sbb
pushw
mov
mov
xchg
xor
mov
mov
pop
and
popa
xlat
cmc
dec
adc
sbb
(bad)
xchg
xor
cmp
rcl
ins
mov
cmps
mov
call
push
pop
push
cmc
fs
push
pop
test
sbb
in
nop
dec
fadd
jecxz
pop
iret
cmp
jmp
dec
cmp
jecxz
xchg
push
jmp
add
aaa
enter
adc
imul
push
or
push
ret
and
push
test
xor
std
ins
jnp
es
fadd
mov
(bad)
sti
out
xchg
cmp
sti
xor
clc
mov
jb
nop
cmp
mul
aaa
sub
mov
test
pushf
push
cdq
push
movs
rol
shl
ret
add
and
mov
clc
sbb
int3
cwde
mov
mov
pop
inc
inc
jnp
add
test
es
repz
dec
retf
test
inc
dec
cmps
cmp
in
es
xlat
dec
mov
xchg
(bad)
mov
sbb
mov
inc
mov
and
in
dec
aas
jae
aad
cmp
sar
cmps
jb
xchg
cli
adc
jb
inc
mov
xchg
or
fstp
iret
jmp
out
xchg
std
adc
fist
addr16
xchg
loop
xor
add
sti
xchg
cdq
adc
dec
inc
int
mov
lods
xchg
cld
out
retw
(bad)
mov
lods
not
mov
mov
mov
sbb
jnp
sar
pop
aam
int3
lods
mov
mov
rcl
int3
sahf
shl
leave
out
in
mov
ret
add
fwait
test
fdiv
mov
jne
add
ss
or
pop
out
mov
loopne
(bad)
and
es
mov
pop
inc
out
movs
dec
stc
jo
clc
out
adc
sub
into
lahf
and
mov
cmp
xlat
int
jbe
mov
or
inc
pop
and
cmp
push
std
dec
mov
outs
sbb
cdq
push
cdq
adc
clc
addr16
push
inc
or
out
xor
jo
inc
or
loopne
pop
lods
inc
pushf
data16
sahf
je
cmp
xor
dec
stos
or
in
push
adc
sbb
xor
pop
pop
xchg
ret
fcomp
jb
ja
and
mov
jbe
out
inc
rcl
les
mov
and
pop
test
stos
hlt
or
scas
jae
stos
ds
scas
stos
ffreep
or
cmp
mov
inc
pop
push
push
lea
xchg
cdq
fistp
repnz
lahf
out
outs
movs
out
pop
xor
mov
and
cdq
ja
add
(bad)
mov
pop
lock
(bad)
(bad)
jp
pusha
dec
or
aam
mov
fwait
je
or
aas
scas
mov
fwait
ror
test
cmps
jne
test
adc
and
sbb
jg
daa
inc
mov
pand
inc
inc
int3
dec
mov
call
leave
xchg
or
enter
cld
mov
xchg
jne
lahf
and
push
in
mov
out
stc
stc
cmp
adc
inc
ds
nop
jmp
mov
cmp
fld
stos
xchg
and
and
fmul
in
adc
dec
jo
pop
out
sub
ror
jg
xor
test
rcl
sub
add
sbb
lds
jns
js
inc
cwde
sti
jns
and
cmp
mov
loope
es
or
(bad)
jle
mov
cmps
dec
xchg
cli
mov
push
or
into
add
and
loope
stos
mov
cmp
adc
and
jnp
in
test
jae
add
mov
jno
icebp
xchg
mov
mov
push
shl
ret
inc
cmps
mov
das
std
xchg
stos
fwait
dec
movs
mov
dec
dec
dec
int
inc
inc
mov
into
inc
sub
and
gs
mov
cmp
pushf
fnstenv
pusha
add
fistp
sbb
imul
push
stos
stos
es
push
mov
loopne
call
cmp
mov
mov
mov
dec
data16
jmp
xchg
iret
adc
or
call
sub
mov
rcr
push
fidivr
int3
push
test
push
(bad)
fsubr
arpl
(bad)
iretw
mov
popf
lahf
popa
int
shl
ss
(bad)
jle
in
in
imul
sbb
xor
mov
sbb
cmps
fnstsw
mov
xor
lock
or
shl
data16
xlat
(bad)
int
shr
popa
fwait
push
push
das
or
jo
xchg
fdiv
popa
pop
add
scas
data16
in
dec
mov
push
sub
stos
mov
aas
xchg
sahf
xlat
repnz
push
mov
xor
adc
adc
dec
loopne
cmp
out
adc
or
sbb
fs
jnp
addr16
xor
xor
cmp
fisubr
push
mov
inc
(bad)
cli
jae
jbe
rcr
in
inc
scas
fwait
iret
jb
fcom
mov
or
push
imul
adc
dec
mov
xchg
mov
lods
xlat
es
push
shr
lock
je
sub
pop
sti
call
push
mov
int
into
add
je
pop
ror
js
xchg
and
dec
out
lods
jmp
cmp
sub
dec
shr
xchg
pop
nop
inc
cmps
xchg
lea
xchg
pop
pop
push
in
data16
jne
ins
add
jb
jbe
add
cmps
clc
mov
and
xlat
push
(bad)
xor
jno
(bad)
std
sbb
xchg
rcr
iret
pop
mov
scas
inc
adc
push
mov
fxtract
daa
je
mov
cmp
sbb
push
clc
and
sbb
and
mov
cmps
movs
data16
bound
retf
cmp
pop
adc
dec
jno
or
sbb
mov
and
aam
cmp
repnz
add
(bad)
sbb
push
shl
xor
mov
and
sub
push
ret
pusha
inc
push
jle
test
inc
jecxz
cmp
jmp
jg
push
xor
fisub
into
ror
fldcw
cmp
jecxz
iret
or
into
add
aad
push
cmp
xor
arpl
(bad)
or
test
mov
dec
(bad)
(bad)
jbe
call
icebp
aas
jg
cmp
mov
push
mov
mov
or
mov
stos
lahf
pushf
dec
mov
nop
cwde
in
mov
leave
dec
movs
xchg
push
mov
ret
sub
ss
arpl
mov
inc
xchg
cwde
mov
(bad)
jge
jle
dec
adc
sub
dec
xchg
jge
(bad)
adc
mov
push
daa
add
inc
sub
inc
pop
int
iret
test
(bad)
sub
lahf
add
push
inc
sar
std
leave
pop
sar
popf
cmp
mov
pop
enter
mov
rol
das
mov
or
stc
add
(bad)
xor
imul
push
in
xor
stc
mov
push
jmp
std
and
or
sti
adc
scas
mov
movs
dec
std
sub
adc
sahf
fcomi
jmp
xor
mov
out
pop
adc
xor
inc
jecxz
in
(bad)
es
xchg
inc
inc
cmps
in
lahf
push
sbb
loope
inc
(bad)
sub
mov
add
aad
loopne
xchg
add
dec
lock
hlt
cmp
mov
in
call
xor
or
bound
arpl
ficomp
(bad)
jne
cmps
mov
xor
and
add
pop
retf
aas
xchg
mov
sar
aas
mov
cmps
push
dec
cwde
sbb
repnz
stc
inc
(bad)
add
leave
mov
inc
ror
sub
pop
xsave
jae
cli
aaa
inc
mov
jae
out
fsubr
test
jmp
mov
dec
or
es
jg
daa
mov
or
inc
push
gs
mov
inc
mov
xchg
cli
pop
movs
xchg
test
xor
bound
ja
pop
scas
popa
xor
and
call
inc
inc
jmp
sub
mov
nop
dec
add
in
dec
jmp
outs
pop
pop
sahf
add
xor
xchg
cmp
pop
add
jno
push
mov
mov
gs
lock
or
xchg
fwait
in
sbb
iret
nop
dec
push
cmp
fsubr
pop
rcr
and
out
js
mov
inc
push
pop
sub
mov
xchg
jbe
rol
jb
and
push
pop
sub
mov
aaa
movs
into
push
mov
out
lods
xchg
movs
push
mov
xchg
sub
iret
adc
xor
cmp
mov
js
cmp
pop
or
(bad)
popf
adc
cli
jo
cmp
ror
fld
dec
fbld
mov
sbb
test
pop
les
out
jmp
push
pop
jmp
cmp
jmp
xchg
sub
je
inc
pusha
lock
xor
or
sub
shr
daa
mov
test
mov
repnz
push
ret
les
mov
mov
mov
aad
add
clc
loope
in
out
(bad)
inc
pushf
sbb
out
sub
and
in
lahf
stos
and
mov
xchg
ss
mov
cld
call
jmp
pop
lea
cmps
pop
fisub
inc
push
fdivr
(bad)
aad
and
int3
clc
das
xor
add
xchg
jmp
mov
icebp
loop
xor
inc
add
push
xchg
ins
aas
(bad)
cmp
cmp
enter
push
mov
xor
je
jecxz
push
or
out
clc
dec
mov
mov
dec
push
adc
mov
dec
aam
mov
pop
(bad)
int3
into
sbb
enter
stc
fdiv
stos
jge
mov
inc
ja
bound
add
mov
pop
lea
xchg
mov
sub
mov
push
push
inc
mov
pop
push
adc
pop
dec
ins
cmp
adc
nop
mov
jmp
dec
sti
stos
or
cmp
into
rol
adc
push
or
jmp
test
xor
aas
jne
mov
push
pop
sbb
lahf
jecxz
mov
into
lods
add
scas
mov
inc
xchg
cmps
push
mov
movs
rcr
xchg
adc
repnz
idiv
inc
adc
in
add
mov
shr
data16
jo
inc
out
jne
popa
cmc
xor
mov
mov
xchg
call
fs
fldcw
adc
inc
mov
out
out
pop
cld
mov
sub
aam
push
jle
pop
push
sub
and
adc
pusha
aad
push
ins
and
iret
cdq
dec
jp
stc
xchg
jbe
icebp
mov
jp
mov
fmul
cmp
adc
lods
mov
xchg
mov
loop
jmp
in
fwait
pop
mov
push
scas
lock
stc
mov
add
mov
shl
pop
stos
mov
fidiv
inc
mov
xor
mov
dec
xor
ror
test
call
pushf
push
push
mov
and
in
dec
into
dec
sub
cld
adc
imul
ss
push
cmp
fdivr
std
je
jno
and
test
mov
sub
mov
repnz
pop
mov
(bad)
cmc
ins
out
lods
rcl
movs
add
mov
(bad)
cmp
std
dec
mov
mov
xchg
sbb
jle
or
jge
cmp
enter
ret
add
out
or
and
iret
mov
add
pop
or
sti
and
xchg
sahf
fnstcw
xchg
lea
xlat
dec
daa
pushf
adc
aaa
cmps
in
ror
dec
push
aaa
jae
lods
xor
mov
push
dec
push
test
cli
xchg
jle
sti
sub
dec
lods
or
xchg
mov
sti
mov
out
jg
add
mov
ja
ffreep
dec
(bad)
jne
xchg
and
in
cwde
sbb
gs
sub
cli
pop
dec
ret
retf
test
rcl
or
ins
out
sub
mov
push
aas
cmp
push
gs
aad
shr
sub
fidivr
sar
imul
repnz
jnp
sbb
test
popf
popf
mov
pop
jno
ins
sub
jp
jmp
push
fnsave
ror
xor
mov
ficom
push
adc
add
and
adc
push
retf
clc
or
or
out
outs
push
fmul
jg
dec
mov
repz
sub
cmps
int
or
in
sub
sub
cmp
in
scas
enter
push
sahf
dec
jmp
mov
cmp
ja
and
dec
inc
sub
xchg
cmc
mov
sbb
cmps
imul
cdq
jo
jo
nop
aad
jnp
jne
or
jno
and
mov
pop
cmp
nop
jge
inc
pop
push
push
mov
cmp
mov
cmps
cmps
imul
inc
sub
mov
mov
fidivr
loope
jb
shr
pop
cmp
push
jnp
push
sahf
gs
lea
xacquire
sahf
int
dec
retf
mov
test
je
dec
pop
ins
adc
mov
sbb
jmp
ret
jge
movs
mov
es
cmp
pop
lea
es
cdq
and
out
sub
pop
fcomip
cli
cmc
lds
or
add
nop
dec
and
mov
add
(bad)
pop
clc
mov
add
mov
xchg
cmps
mov
sub
mov
mov
xchg
ja
sub
outs
mov
fsubr
ja
and
fdiv
xor
and
sub
cmps
mov
out
jns
or
mov
adc
in
mov
mov
sub
sub
gs
rcl
inc
cld
xor
jno
dec
mov
cs
arpl
cld
dec
mov
leave
push
sub
(bad)
pop
cmp
push
mov
add
mov
jae
mov
jae
adc
add
dec
mov
dec
(bad)
push
mov
stos
pop
hlt
mov
xchg
(bad)
xchg
pop
mov
mov
push
xchg
add
xchg
pop
mov
neg
sub
in
xchg
mul
dec
ins
push
push
jmp
sbb
enter
sub
cmp
rcl
xchg
js
int3
sbb
pop
push
jo
(bad)
dec
xchg
mov
jge
out
xchg
ret
jno
shl
dec
sbb
jg
imul
inc
sar
popf
js
out
cdq
add
into
pop
retf
or
xchg
lods
sbb
or
and
mov
jno
xor
stos
mov
dec
cs
fcomp
sbb
or
dec
push
fimul
sub
sub
loopne
xchg
mov
in
jns
xor
xor
(bad)
cmps
iret
mov
mov
dec
pusha
xlat
mov
xor
std
pop
mov
movs
and
and
mov
in
adc
das
fcmovnbe
(bad)
shl
shl
int
pop
fwait
int
div
enter
mov
out
dec
rcr
inc
lods
or
dec
mov
out
ss
(bad)
cld
bound
jo
or
in
dec
nop
int
(bad)
pop
push
int3
mov
mov
jbe
mov
pop
pop
inc
std
mov
std
xchg
or
pop
push
cmp
aad
or
repnz
mov
shl
sub
sub
dec
mov
retf
dec
mov
push
les
pusha
push
or
cmp
popf
mov
cmp
adc
cmc
jbe
mov
pop
add
sub
lds
sbb
inc
adc
dec
add
and
inc
call
mov
mov
out
push
sti
imul
dec
pop
es
test
cs
jbe
mov
fs
push
shl
adc
aad
popf
es
out
call
sbb
rol
daa
push
jnp
mov
cmps
add
(bad)
jmp
js
scas
addr16
fiadd
call
std
pop
or
inc
cmp
jne
sbb
add
aam
sbb
push
fwait
(bad)
jge
adc
movs
jno
push
sub
icebp
mov
ficom
jg
xor
mov
movs
scas
sbb
mov
adc
test
lock
shr
es
cwde
xor
lods
jle
loopne
mov
sub
call
inc
xchg
dec
push
sub
rol
push
in
popf
(bad)
loop
or
inc
add
push
pop
lock
shr
jne
or
aad
out
fwait
cmp
fstp
mov
sbb
cmp
inc
das
call
mov
add
into
sub
mov
mov
(bad)
mov
sub
ins
loope
or
xchg
pushf
lods
(bad)
sbb
inc
pop
and
imul
jns
das
inc
mov
cmps
and
mov
pop
xchg
loopne
dec
xor
cmp
pop
dec
stos
dec
add
jmp
ins
xchg
mov
imul
adc
fnstcw
inc
sahf
mov
in
push
sub
xchg
(bad)
mov
inc
jmp
test
sar
dec
ins
iret
stos
mov
test
das
fwait
outs
sbb
jae
pop
sub
jmp
popf
jb
jb
call
push
out
and
aam
sub
stos
les
mov
fadd
mov
std
out
inc
(bad)
aad
mov
push
sbb
pop
push
call
push
xchg
ds
popf
adc
sbb
inc
dec
jecxz
cmp
jnp
test
mov
fistp
adc
mov
(bad)
arpl
xchg
xchg
retf
retf
xabort
mov
mov
fwait
jne
(bad)
daa
xchg
lods
mov
out
jge
inc
pusha
mov
fist
cmp
aaa
fwait
add
jb
adc
xor
push
jb
enter
pop
push
(bad)
adc
outs
shr
add
cmps
not
arpl
mov
mov
call
bound
movs
iret
sub
lock
push
lock
arpl
mov
fwait
mov
(bad)
mov
test
sar
into
lods
jecxz
mov
loopne
pop
aas
mov
inc
cmc
dec
fcmovb
jns
jne
sbb
pop
lds
(bad)
imul
push
dec
getsec
cwde
xor
dec
dec
pop
and
(bad)
aam
out
inc
dec
fs
cmc
int3
xchg
movs
shl
sahf
jae
jl
fmul
xchg
sub
jns
jl
pushf
mov
adc
jbe
mov
inc
mov
or
ins
sbb
jecxz
ins
sbb
add
(bad)
repnz
sbb
imul
clc
sahf
cmp
retf
addr16
(bad)
xlat
dec
fbstp
lock
repz
cmps
test
mov
jnp
mov
pushf
xchg
fisttp
aam
adc
cs
xchg
jns
int
(bad)
arpl
push
ins
mov
add
and
rcl
inc
in
sar
mov
ja
(bad)
pop
jnp
cli
pop
jge
xor
cmp
dec
leave
push
xor
and
cmp
lods
stos
jo
xchg
jmp
in
aam
and
add
xchg
xor
(bad)
int3
mov
(bad)
jnp
popf
neg
xor
pop
push
jmp
push
lds
and
repz
scas
fstp
jnp
xchg
sub
test
push
scas
lock
cmp
rcl
mov
and
mov
jmp
sti
inc
out
cli
leave
(bad)
fiadd
sbb
xchg
pop
xor
arpl
outs
push
cmp
lock
adc
(bad)
add
repz
pop
jae
popf
xchg
fucomi
loopne
dec
cmp
sahf
enter
loopne
inc
jne
push
sub
je
sub
jmp
pop
fsubr
mov
lds
add
cmp
retf
std
mov
xchg
mov
fist
sbb
inc
ret
(bad)
retf
arpl
ficom
ins
jmp
jmp
imul
jae
enter
out
jmp
cdq
mov
adc
adc
sbb
pushf
into
dec
sbb
leave
enter
aam
cwde
dec
push
iret
jb
adc
sbb
dec
popa
shl
push
cmp
adc
cli
mov
pop
mov
pop
inc
push
cmp
mov
test
adc
fld
push
mov
jecxz
movs
movs
push
xchg
xchg
pop
stc
xchg
pop
outs
call
iret
jno
xor
xor
mov
cmp
cli
inc
xchg
xchg
cdq
push
inc
xor
add
push
inc
cmps
jae
(bad)
sbb
repz
imul
out
in
gs
xor
cs
xor
das
mov
cmps
ror
dec
(bad)
leave
adc
dec
cmp
mov
or
fs
sbb
sbb
sbb
mov
mov
leave
cwde
packsswb
in
popf
test
adc
out
jl
cli
push
cmp
cmc
sbb
out
mov
addr16
push
sbb
mov
test
shl
iret
mov
xor
mov
cmp
mov
jmp
mov
fbld
mov
cdq
mov
sbb
sahf
sbb
jb
enter
outs
sti
call
push
pushf
mov
xchg
sub
(bad)
push
mov
leave
xor
js
mov
jae
pop
movs
mov
sbb
adc
xchg
cli
je
fdivr
fsub
push
lds
mov
sbb
sbb
dec
push
or
inc
sahf
xchg
stos
or
inc
and
fdivrp
jecxz
xchg
push
or
pop
inc
mov
and
cmp
adc
gs
dec
cwde
jecxz
jecxz
call
and
mov
pop
push
add
adc
icebp
dec
pop
or
or
add
adc
mov
retf
pop
xor
je
mov
adc
jae
xor
sbb
inc
pop
in
mov
shl
jmp
or
jb
dec
in
fwait
xchg
outs
xchg
fwait
adc
iret
cmc
cmps
pop
mov
retf
addr16
scas
int
cmp
push
cli
push
mov
push
and
movs
cmp
and
call
xchg
mov
sahf
xor
pop
mov
pop
ficom
mov
lock
ficom
dec
stc
dec
mov
pop
ins
inc
rcr
aam
popa
and
jge
in
aaa
movs
sub
add
push
daa
ins
cmp
and
verw
int
mov
mov
mov
cmps
mov
add
jle
adc
sar
xchg
jmp
add
scas
outs
jl
jg
fcomp
dec
dec
loope
enter
sub
ja
adc
xor
and
call
movs
push
xor
jmp
sahf
stos
add
daa
jge
mov
sbb
push
stos
push
dec
lods
fdiv
push
mov
daa
push
popa
lods
xor
test
mov
movs
hlt
xchg
mov
sar
scas
movs
sbb
mov
in
fnstcw
mov
fld
popf
fisttp
aaa
mov
jnp
mov
icebp
and
jle
xor
js
test
call
xor
push
shl
jmp
adc
jmp
mov
mov
pop
call
popf
mov
add
or
in
or
lods
ror
mov
pusha
sub
dec
paddusw
cmp
lea
repz
cmp
jmp
adc
sub
test
retf
test
ret
inc
mov
sub
xor
shr
mov
neg
test
cmps
fldcw
adc
pop
mov
sahf
ss
adc
icebp
push
inc
pop
jno
in
repz
jno
in
adc
fld
and
pop
xor
out
push
adc
repz
xchg
outs
inc
pop
lock
cmps
mov
dec
or
jmp
or
mov
call
lds
lods
adc
pop
mov
adc
fimul
out
aas
sub
imul
mov
movs
mov
mov
scas
sbb
add
mov
xlat
fidivr
fidiv
dec
push
add
mov
xchg
pop
(bad)
jns
(bad)
mov
dec
enter
or
les
inc
and
stc
mov
jne
addr16
lods
pushf
shl
jns
cmp
pusha
push
retf
mov
lock
xchg
pop
ficomp
mov
inc
ficom
jmp
mov
cmp
aas
dec
mov
pop
lods
outs
loop
add
xchg
pop
inc
mov
ror
and
ror
fsincos
arpl
inc
mov
cmp
jbe
hlt
jne
jno
pusha
mov
outs
aad
cdq
pop
aaa
into
idiv
add
je
ja
xor
not
rol
arpl
sub
push
cmp
dec
fcmove
scas
retf
mov
ret
adc
add
(bad)
clc
push
pop
add
adc
dec
and
inc
cmp
loope
gs
nop
cmps
mov
dec
sub
jo
mov
mov
jge
les
ret
cdq
add
je
out
jmp
and
mov
jnp
or
dec
stc
xchg
cdq
mov
in
or
jle
or
sub
ds
fcmovnu
data16
lods
inc
cmp
xchg
fild
pop
push
mov
inc
sti
(bad)
test
xchg
add
dec
mov
aaa
xor
shl
push
sti
leave
sti
cmps
test
std
and
je
leave
les
pop
xor
xchg
mov
push
arpl
or
dec
clc
test
stc
pop
add
lods
jmp
shl
pop
inc
sbb
rcr
stos
jp
retf
stc
jno
pop
push
data16
in
scas
out
adc
shl
inc
add
loopne
push
int
div
inc
lods
cwde
in
inc
or
(bad)
bound
sbb
jmp
out
scas
addr16
mov
and
outs
add
imul
cmps
out
inc
xchg
inc
shl
dec
(bad)
mov
(bad)
popa
rcr
cld
jl
ja
nop
jne
cmc
mov
cmp
cs
movq
fcmovnbe
call
movs
mov
adc
adc
rcr
sar
sub
jecxz
add
repnz
pusha
xor
mov
daa
popf
adc
daa
sar
ss
or
(bad)
lods
das
add
fdiv
loop
dec
pop
lods
mov
arpl
cmovno
xlat
and
ins
mov
rcr
push
ins
imul
aaa
sub
ja
idiv
call
mov
mov
sbb
mov
or
rcl
jl
dec
xor
pop
sahf
mov
aas
inc
popa
ret
mov
mov
or
jmp
push
lods
pop
mov
fcom
lock
sbb
push
push
sbb
popa
jmp
dec
push
fisub
test
mov
add
popf
adc
test
or
cwde
cmps
repz
xchg
sbb
movs
int3
pop
push
jnp
xchg
retf
and
scas
in
leave
enter
ret
xchg
xor
inc
ins
rcl
xor
xchg
dec
call
xchg
sbb
aas
in
xchg
dec
mov
xchg
mov
sti
ins
loop
xor
mov
setl
or
jge
test
loop
inc
je
hlt
int
sti
push
pop
or
add
popf
adc
(bad)
retf
push
cmp
addr16
sbb
paddb
mov
mov
aas
div
add
fisttp
push
push
(bad)
inc
adc
in
xchg
lods
dec
fwait
jecxz
adc
or
mov
movs
mov
js
mov
(bad)
fsub
cmp
movs
cmps
das
cwde
adc
push
fiadd
sub
push
push
into
add
dec
mov
push
imul
xor
stc
scas
cmp
add
cmp
dec
ins
stos
or
pushf
jecxz
push
jb
mov
jecxz
pop
and
aam
push
pusha
xchg
pop
imul
pop
push
and
adc
jecxz
ds
imul
push
push
ror
repnz
sbb
in
ret
ds
loop
adc
pop
fs
mov
cmp
jae
sbb
push
bound
push
mov
es
lahf
int3
data16
cdq
sti
xor
cli
sbb
dec
aaa
outs
mov
fimul
push
imul
mov
aam
jmp
bound
std
sbb
pop
xor
cmp
jmp
dec
pop
mov
and
mov
jmp
xor
mov
shufps
cs
movs
xor
ins
jnp
push
adc
lds
mov
dec
aam
or
ins
dec
test
xor
cwde
popf
jb
push
(bad)
movs
cmp
fstp
pop
imul
mov
add
repnz
outs
sub
mov
add
push
lock
fidivr
dec
sahf
imul
cmp
jnp
jne
and
xor
xchg
or
repz
and
or
mov
into
inc
ins
out
aam
mov
sti
pop
sbb
ret
jg
push
dec
inc
aad
repz
or
lds
mov
call
imul
sub
xchg
adc
popa
(bad)
push
inc
xor
xchg
div
adc
adc
retf
sbb
xchg
xor
sub
pop
(bad)
out
cmps
xchg
xor
imul
jns
in
stos
sbb
ret
cwde
pusha
(bad)
sub
leave
mov
mov
add
test
mov
nop
movs
xor
mov
cs
pop
push
in
ror
dec
pop
(bad)
jo
(bad)
jmp
push
xlat
call
inc
test
inc
fmul
sahf
imul
imul
cmp
push
add
inc
inc
daa
cwde
outs
adc
pop
cmp
cmp
mov
mov
retf
pushf
mov
jne
push
je
mov
mov
ja
gs
lods
mov
cmp
push
mov
fsub
pop
iret
push
lock
jg
adc
out
mov
psubusw
jns
inc
rol
mov
(bad)
in
call
cli
mov
ds
mov
fisub
jp
mov
xchg
scas
or
mov
and
jg
pop
sbb
xchg
or
dec
out
add
into
and
xchg
xor
jmp
(bad)
push
fisttp
sar
(bad)
inc
jo
lds
enter
xor
mov
fucomi
cdq
dec
jmp
sub
(bad)
push
scas
and
push
jb
jmp
mov
popa
call
sti
mov
cmc
je
loopne
(bad)
sbb
mov
repz
add
adc
pop
movs
push
push
adc
jecxz
test
fdivr
imul
jns
dec
xchg
cmp
sub
shl
mov
fincstp
ja
mov
ins
jbe
adc
test
lea
pop
push
push
popa
aam
clc
xchg
cs
mov
pop
sub
cmp
xchg
xchg
jne
sbb
and
data16
pop
out
and
jle
adc
inc
sub
out
in
mov
loopne
add
and
dec
enter
cmp
or
cmps
cmps
shr
and
sub
rol
add
inc
add
iret
push
mov
outs
mul
retf
in
sub
aad
push
push
or
dec
cmp
xor
loop
mov
cmp
jmp
sub
lds
sbb
jae
jno
mov
(bad)
sbb
in
(bad)
xlat
inc
inc
mov
xchg
pop
mov
movs
bound
mov
addr16
mov
or
cmps
arpl
scas
ss
in
or
mov
or
clc
cld
sbb
jns
mov
inc
pop
mov
pop
add
(bad)
aam
movs
inc
xchg
xor
jp
ret
dec
cmp
scas
loop
mov
pop
xchg
cmps
popf
dec
(bad)
dec
ds
adc
bnd
push
dec
call
ret
inc
sbb
enter
outs
std
imul
bound
scas
sub
jge
jmp
and
cmp
fcmovnu
fyl2x
retf
push
lds
cmp
test
jle
sbb
pop
pop
push
aas
jp
enterw
das
cmp
jae
xor
mov
jg
push
retf
mov
aam
gs
and
or
pop
fwait
push
out
xchg
xor
data16
xor
jp
mov
xor
sti
mov
and
dec
test
or
push
or
jb
out
jb
add
mov
call
dec
scas
pop
cmp
cmp
xchg
or
xor
push
(bad)
cmc
in
pop
sbb
push
sub
mov
mov
adc
jnp
rcl
stos
pop
dec
mov
cmp
pop
inc
sbb
cmp
sbb
pop
enter
lods
je
inc
pop
pop
xor
mov
and
xchg
push
fmul
push
std
test
cmps
pop
inc
neg
adc
repnz
sbb
and
and
and
xchg
ja
dec
push
jne
in
out
cmps
add
xor
enter
sahf
pop
in
test
sub
retf
int
cmp
mov
ficomp
or
xlat
cdq
mov
adc
addr16
mov
out
and
cs
ins
inc
in
imul
or
nop
or
test
cmp
ret
call
ficom
xor
push
adc
mov
pushw
pop
loope
pushf
push
or
mov
pop
outs
mov
sbb
dec
push
call
fs
push
cmp
adc
sbb
and
xchg
shl
les
dec
jae
jge
push
test
dec
jmp
test
fucomip
aaa
or
pop
push
adc
out
or
push
xchg
ins
aad
jae
out
pushf
xor
inc
dec
push
pop
into
push
sbb
mov
std
jmp
in
pop
xchg
repnz
call
push
out
test
push
adc
add
int
pusha
push
test
and
fmulp
sub
push
or
outs
adc
out
shr
(bad)
ret
ds
fs
outs
mov
shl
sbb
pop
mov
jne
retf
inc
sub
stc
mov
xor
inc
loop
cmp
imul
dec
out
adc
and
dec
xor
lds
(bad)
mov
pop
arpl
pop
dec
arpl
in
rol
adc
mov
sub
mov
sub
mov
jmp
jo
dec
cld
mov
xchg
mov
jbe
sbb
cmp
lds
(bad)
inc
(bad)
stc
jbe
jp
idiv
inc
lahf
push
enter
shl
sub
sub
and
inc
dec
and
mov
test
(bad)
aas
in
mov
fwait
push
cmp
outs
xor
es
mov
pop
fstp
stos
(bad)
pusha
push
xchg
arpl
int
jne
push
test
or
inc
xchg
bound
bound
add
leave
aaa
repz
pop
test
pop
inc
jns
mov
mov
mov
mov
push
jo
sbb
push
ss
mov
dec
cmp
lods
mov
pusha
jl
xor
rcr
push
fild
inc
mov
mov
mov
les
or
ins
push
enter
jle
mov
xchg
mov
(bad)
(bad)
popa
es
mov
push
sbb
into
das
pusha
gs
js
push
sbb
stc
adc
aaa
nop
cs
repz
inc
sub
imul
rcr
mov
cli
or
sbb
xor
add
imul
pushf
repnz
pushf
xchg
ins
push
js
pop
push
or
loope
mov
inc
ret
pop
retf
test
in
add
loopne
mov
ja
xchg
js
int3
push
inc
pop
push
(bad)
push
inc
ds
pop
test
lahf
add
jge
loopne
cmp
pop
xchg
inc
push
sub
push
ins
cdq
cmp
int
or
sbb
out
sbb
test
cmc
cmp
(bad)
cmp
jns
mov
mov
add
fwait
sub
ins
stos
fistp
mov
std
mov
inc
test
jge
jp
int
pop
call
sbb
jbe
iret
cmp
pop
mov
jle
ins
movs
rcr
call
out
hlt
jne
test
sub
fs
fcomp
mov
cmp
mov
inc
mov
fisub
pop
pop
std
and
mov
fidiv
aas
pop
or
pop
cmc
sbb
sti
fucomip
sbb
fcomip
xlat
mov
adc
shl
or
adc
cmp
fld
jb
outs
xchg
daa
sti
int3
pop
cmc
aam
mov
dec
xchg
bound
cli
out
inc
add
adc
or
mov
iret
fwait
jbe
outs
pushf
hlt
loop
int3
jmp
data16
ret
movs
sub
mov
jp
(bad)
repz
cs
xchg
in
rol
sbb
cs
mov
ins
test
or
jl
sbb
and
add
sbb
int3
cmps
cmp
and
jp
pop
scas
xor
and
pop
sub
pop
enter
lods
xor
ffreep
aas
jge
cmc
lods
adc
out
out
pop
(bad)
jecxz
mov
(bad)
inc
pop
xchg
pusha
(bad)
hlt
mov
into
fchs
jg
mov
mov
fadd
out
call
lods
aad
dec
test
adc
(bad)
mov
repz
push
fbstp
or
nop
retf
cdq
ror
out
inc
mov
push
xor
mov
xor
sub
repz
stc
aas
cmp
push
push
rol
call
in
inc
sbb
xor
scas
sbb
and
ins
or
mov
rol
inc
mov
inc
jl
dec
jnp
xchg
sub
mov
ins
fisttp
pop
(bad)
jmp
adc
mov
fmul
cmps
outs
shl
mov
in
neg
cdq
mov
outs
mov
pop
imul
push
push
or
scas
mov
iret
scas
pop
cmps
sub
mov
inc
dec
jmp
and
lahf
and
std
mov
jl
adc
pop
fisubr
pop
mov
stos
add
nop
cmp
test
out
outs
inc
lea
adc
leave
arpl
push
cmp
xchg
or
sbb
in
mov
iret
cmc
jge
mov
ja
and
and
repz
adc
cmp
dec
cmp
icebp
inc
jmp
cmp
sbb
fdivrp
pop
mov
xlat
fsubr
lds
das
add
or
mov
push
adc
movs
mov
scas
cwde
and
out
add
adc
jge
pop
push
std
cmp
cmp
cmps
je
cmp
cmp
les
and
into
int3
das
shr
adc
outs
inc
pop
inc
mov
mov
pop
sbb
pop
mov
sub
popa
sbb
adc
repnz
mov
ins
jl
push
(bad)
and
jg
mov
xlat
push
and
mov
pop
add
leave
inc
test
mov
fisttp
scas
fdivr
out
adc
sti
mov
cwde
push
sar
fild
shl
in
push
sub
leave
(bad)
sub
mov
pop
mov
cmp
mov
imul
stc
or
cs
adc
jge
push
jnp
push
pushf
cmp
sub
fcomip
(bad)
scas
mov
push
sub
stos
(bad)
sbb
shl
mov
mov
jp
push
call
test
sbb
daa
scas
xchg
ja
cs
pop
outs
leave
in
mov
xchg
xchg
inc
pop
jbe
scas
cs
push
out
cld
pop
dec
sbb
scas
and
in
les
push
or
add
(bad)
out
in
daa
sbb
adc
div
dec
shl
add
dec
sub
xchg
jnp
es
adc
pop
push
or
mov
dec
(bad)
push
jnp
retf
add
add
add
into
push
retf
mov
outs
iret
sti
(bad)
pop
sahf
popf
popa
jl
into
jle
fstp
cmc
mov
and
imul
fistp
inc
or
mov
and
fld
cmc
aad
or
xor
xor
pusha
int
in
inc
fpatan
pop
fdiv
mov
fidivr
inc
adc
dec
sub
sbb
xchg
xchg
leave
push
jnp
in
adc
out
cmp
enter
jne
lods
or
jecxz
cmp
sub
dec
(bad)
aaa
mov
cmps
shl
xor
inc
aaa
aam
fcom
jae
xlat
es
mov
or
cmp
mov
adc
cmp
scas
es
mov
jne
sbb
outs
outs
adc
dec
mov
jle
fistp
push
into
add
movs
push
call
cmp
cmc
or
jmp
out
adc
lds
push
push
fdiv
mov
pop
adc
lods
adc
push
push
cmp
xor
retf
mov
sbb
lods
dec
cs
xchg
out
sub
mov
jae
or
dec
ss
pop
and
popa
dec
stos
int3
mov
mov
neg
(bad)
xor
sub
or
out
push
(bad)
cmp
call
lds
dec
dec
adc
loopne
jns
add
cmc
mov
hlt
ins
cmp
push
fisubr
inc
and
inc
xchg
lods
test
ss
adc
sub
sbb
(bad)
sbb
or
mov
mov
xchg
cli
dec
div
jns
(bad)
loop
sbb
dec
hlt
outs
push
cmps
scas
test
xchg
jg
stos
cs
pop
and
dec
fst
fs
nop
shl
test
mov
push
lea
dec
jl
in
outs
jne
jb
dec
dec
add
push
movs
inc
ret
jge
mov
ins
mov
push
scas
js
xchg
mov
(bad)
mov
imul
aas
jns
cmp
mov
adc
fmul
sbb
adc
xchg
sub
nop
pushf
aad
cmps
lock
aam
mov
pop
inc
outs
clc
lods
shl
sub
sbb
(bad)
cmp
nop
outs
push
jne
sbb
mov
and
ja
dec
stos
pop
das
xchg
pop
rol
jns
pop
in
inc
mov
cmc
popa
xchg
out
jb
mov
cwde
in
push
clc
imul
pop
lds
mov
loop
adc
or
loope
mov
ficom
inc
xor
inc
sub
movs
loope
jmp
add
in
(bad)
mov
cmp
gs
shr
repz
add
mov
jmp
arpl
sbb
dec
dec
addr16
pop
es
pop
sti
fstp
mov
xchg
shl
(bad)
sbb
stc
ffree
les
jo
push
loopne
sub
dec
xor
sbb
loope
cmp
ret
sub
or
push
add
sbb
loop
bound
pop
add
pop
test
loope
sub
mov
lock
gs
aad
jle
lods
jbe
cmp
inc
call
xor
test
push
pop
pop
push
mov
hlt
adc
mov
sar
outs
nop
pusha
call
add
add
mov
aad
pusha
sahf
fwait
dec
ret
mov
pop
lahf
shl
adc
sahf
test
mov
jmp
aaa
test
push
test
xchg
jno
(bad)
sub
je
or
adc
xchg
repz
frstor
or
add
or
stc
pop
pop
push
sbb
sub
test
mov
xchg
and
jmp
jo
jae
(bad)
adc
mov
fnstcw
push
ins
popf
pushf
adc
ror
push
mov
mov
pop
xor
sbb
and
xchg
jns
mov
test
cmps
xchg
xor
pop
cdq
jns
adc
inc
test
add
inc
and
sub
add
jbe
mov
sub
fdiv
icebp
add
mov
xchg
xchg
dec
mov
xor
and
arpl
mov
les
loop
clc
cwde
outs
inc
xor
in
mov
out
cmp
dec
sbb
(bad)
rcl
pop
sub
call
fsub
(bad)
jp
push
jge
xor
mov
or
shr
movs
and
push
push
inc
add
call
out
cmp
push
push
fucomi
mov
and
mov
cmp
sbb
ret
jo
sub
js
mov
bound
(bad)
test
mov
sbb
mov
push
inc
call
frstor
jno
pusha
lahf
aaa
test
mov
out
std
pop
and
dec
out
not
mov
xor
loopne
aam
cmp
dec
sub
inc
inc
outs
cwde
call
int3
sti
loopne
push
pusha
xor
mov
popf
mov
xchg
(bad)
int
jmp
aaa
xor
mov
in
sub
test
push
(bad)
xor
adc
pop
popf
ret
sahf
lea
inc
pop
clc
fcom
out
and
fucomip
(bad)
xchg
int3
daa
test
cmc
shl
cmps
(bad)
fisub
ret
inc
mov
aam
lods
out
xchg
xchg
mov
call
lahf
loopne
repz
mov
les
push
xchg
cmp
adc
fldcw
popa
sub
loopne
(bad)
stc
inc
ins
adc
stos
imul
ror
loopne
fisub
jae
jmp
fwait
or
cld
cmc
mov
jo
call
ds
addps
cs
fisub
or
mov
lds
cmps
mov
jge
jb
or
xor
xchg
push
nop
pop
mov
adc
ins
cmc
dec
mov
sub
sub
mov
mov
and
ror
mov
pop
test
into
ins
cmps
mov
cmp
mov
xchg
cmp
movs
pop
and
popa
fild
movs
(bad)
push
int3
call
add
aaa
cs
jmp
(bad)
out
pop
pop
pop
xlat
in
stc
imul
pop
push
or
sbb
(bad)
mov
cmp
cmp
and
mov
add
push
cmp
adc
mov
cmp
outs
dec
jnp
aaa
mov
arpl
mov
dec
mov
test
add
fnstsw
jmp
es
cmc
cmp
pop
mov
add
jmp
in
mov
cmps
xchg
or
mov
dec
pop
jno
clc
mov
shl
cmp
adc
cmp
mov
pushf
(bad)
(bad)
out
fucom
ficomp
sub
jns
fcom
ficomp
imul
mov
adc
std
test
ror
pusha
push
xor
in
push
lock
sub
and
adc
lahf
cmps
hlt
ret
mov
(bad)
inc
pushf
xor
xchg
adc
scas
ret
pop
ss
pop
xor
pop
cmc
ror
jmp
int
popf
mov
ins
dec
pop
sti
rcl
add
cmp
jo
mov
in
shr
jmp
out
dec
mov
mov
mov
gs
sub
daa
(bad)
add
inc
pop
dec
popf
ret
push
jge
adc
into
xchg
fldl2e
rol
jle
shl
and
xlat
(bad)
xchg
or
ja
fnstenv
cmps
rol
add
push
adc
fdiv
and
stc
sbb
sub
jo
push
movs
xor
enter
lahf
daa
and
xor
add
mov
out
sysenter
push
not
neg
xor
xchg
adc
jmp
test
xlat
aaa
adc
aas
call
xchg
mov
stc
(bad)
pop
imul
jb
pushf
jl
loope
ficomp
sub
arpl
xor
and
loope
call
push
aad
pop
and
repz
mov
inc
adc
push
(bad)
rol
loopne
hlt
test
test
ror
jb
and
push
xchg
jecxz
jae
dec
jle
mov
dec
mov
xchg
cwde
inc
mov
inc
pop
ficomp
sahf
mov
cld
and
loope
inc
les
xchg
out
das
or
cwde
and
das
add
xor
mov
mov
sub
inc
test
xor
stos
fs
add
ret
pop
shr
ficom
out
add
push
std
(bad)
imul
xchg
dec
dec
cvtps2pd
and
shl
popf
xor
mov
int3
add
mov
dec
mov
call
out
cs
ret
mov
pop
push
outs
and
mov
add
xchg
xchg
mov
ret
ja
push
jmp
or
mov
mov
std
aas
repnz
test
iret
push
jl
sub
mov
inc
push
das
pop
adc
out
sub
cmp
cmps
jp
sbb
popa
pop
pop
sub
mov
and
push
mov
xor
push
push
mov
jno
sti
fldenv
inc
fwait
shl
call
mov
outs
push
xor
popa
mov
lock
ss
leave
loopne
(bad)
hlt
sbb
or
inc
mov
std
pop
xchg
inc
add
push
jnp
leave
jp
fild
test
mov
push
je
ins
icebp
mov
dec
adc
mov
xchg
outs
pusha
inc
neg
(bad)
xlat
loop
cmp
push
addr16
das
jne
mov
push
dec
les
push
lods
pop
add
jmp
xor
jecxz
imul
pushf
adc
pop
xchg
push
(bad)
js
dec
ret
adc
stc
mov
les
sbb
xchg
call
into
loope
and
adc
sub
stc
add
add
mov
int
test
jmp
dec
loopne
(bad)
out
scas
ror
std
xchg
cld
sbb
test
sar
scas
jl
cmp
ds
fwait
push
out
sbb
or
xor
bound
aad
cmps
(bad)
cmc
fmul
(bad)
pmaddwd
push
mov
inc
cmp
scas
push
test
sub
lock
mov
mov
mov
(bad)
jg
or
(bad)
div
addr16
sbb
cmp
fistp
aad
jg
mov
ins
mov
neg
pop
sbb
mov
jge
stos
sbb
lds
outs
adc
jnp
or
std
xchg
add
div
test
leave
sub
adc
leave
repnz
push
imul
jb
sub
and
cmc
add
call
sbb
jno
xor
outs
pop
cli
cmp
ds
cli
or
enter
cmp
inc
cwde
in
mov
push
xor
loop
movs
sbb
stos
cmps
popf
jnp
jmp
jbe
adc
push
cmp
nop
push
pop
mov
in
fsub
stos
imul
(bad)
dec
mov
popa
jecxz
imul
dec
pusha
and
pop
mov
jo
(bad)
jnp
psllw
dec
cli
mov
imul
push
mov
push
sbb
pop
cdq
inc
fwait
jge
outs
out
jae
mov
popf
mov
test
pop
(bad)
test
xor
outs
xor
rcr
cdq
test
repz
out
jl
lods
ss
push
jg
leave
iret
push
arpl
mov
adc
push
sar
popa
pop
mov
and
fimul
test
sub
jg
popf
pop
cmc
mov
xchg
bswap
or
mov
sahf
cdq
pop
mov
adc
jne
inc
adc
dec
ins
(bad)
mov
cwde
mov
xor
inc
cmp
inc
adc
stos
sub
out
pop
adc
out
movs
shr
inc
or
call
imul
cmp
jge
and
jo
out
repz
call
push
(bad)
xor
scas
jnp
ret
xor
lods
movs
inc
mov
add
push
inc
addr16
sub
shl
add
and
jo
jne
les
jbe
mov
add
fwait
(bad)
sub
shr
xor
icebp
in
push
inc
jg
popf
or
add
mov
scas
xchg
mov
inc
(bad)
iret
push
icebp
inc
xor
jbe
cmp
pop
(bad)
mov
mov
adc
xor
mov
pop
xchg
cmp
loopne
jne
push
push
sub
mov
repnz
inc
hlt
sahf
shl
adc
pop
inc
nop
iret
out
or
inc
retf
imul
sahf
dec
xchg
push
test
mov
adc
mov
xchg
jbe
pushf
pop
mov
retf
sbb
xchg
ins
sti
mov
shl
repz
cmp
push
jp
mov
ret
movs
(bad)
call
into
xchg
ds
arpl
nop
leave
lods
data16
cmc
(bad)
int3
xor
jnp
imul
int3
rol
mov
mov
adc
mov
adc
xchg
add
dec
jg
lea
sti
push
in
repnz
mov
nop
xor
scas
fld
scas
pop
das
mov
mov
and
icebp
push
in
sub
mov
call
push
inc
pusha
fmul
pop
fimul
fcomp
loope
fs
out
mov
cmp
sbb
pop
sbb
movs
jnp
test
adc
loope
imul
sub
push
pop
imul
and
and
fxch
aas
add
cmp
inc
xor
sbb
enter
add
inc
enter
out
xlat
inc
jmp
mov
jmp
xor
shl
push
xchg
repnz
and
adc
and
mov
ds
imul
pop
fld
fst
jmp
mov
push
push
rcr
fist
jp
call
inc
daa
pop
add
push
call
add
sub
pop
xor
cdq
pop
inc
bound
lds
bound
popf
mov
mov
add
xlat
retf
inc
pop
call
iret
xor
bound
sbb
push
cld
pop
and
imul
test
fucom
std
aas
lahf
div
mov
es
push
sub
xor
inc
mov
fwait
out
add
dec
dec
test
add
dec
out
dec
in
imul
push
jmp
in
adc
jo
jo
rcr
pop
xor
retf
push
outs
test
dec
addr16
inc
mov
icebp
jno
xor
mov
scas
(bad)
rcl
mov
add
lds
mov
sub
cld
mov
out
push
scas
daa
(bad)
jnp
mov
push
xor
(bad)
jg
imul
test
jnp
add
push
retf
(bad)
repnz
fdivr
cmps
pop
add
test
test
gs
sub
xchg
call
or
fwait
push
cdq
and
aas
stos
out
dec
mov
cmps
inc
cld
mov
push
sbb
fld
cmc
ja
je
test
xchg
ja
gs
push
mov
ins
rcl
xor
xchg
rol
aaa
loop
push
sar
or
cwde
frstor
xchg
fdiv
shr
jae
cwde
stos
mov
lahf
out
sahf
jnp
cmp
cwde
jnp
cs
call
rcr
in
push
hlt
dec
cmp
mov
enter
out
push
jns
iret
rcl
lds
adc
add
(bad)
pop
aas
retf
mov
sar
jp
dec
mov
pushf
adc
or
gs
xchg
pop
xchg
movups
(bad)
iret
lahf
mov
lahf
push
xchg
mov
gs
or
inc
sub
leave
imul
jbe
sub
imul
add
cmps
pop
lea
fdivp
push
dec
retf
sahf
xchg
xchg
das
push
ds
inc
adc
lock
dec
dec
add
inc
outs
aad
out
ficom
xchg
cmp
out
or
mov
retf
xor
ja
fs
lock
and
inc
adc
mov
nop
dec
sbb
jl
jp
dec
fld
(bad)
iret
aaa
xor
xchg
repz
pop
push
es
xchg
stos
test
xor
int
jl
call
scas
jmp
(bad)
mov
call
clc
dec
mov
mov
sub
push
popf
push
mov
ja
mov
das
lock
imul
imul
out
xchg
retf
fistp
das
push
mov
je
add
shr
cs
addr16
inc
dec
dec
push
adc
xchg
cmp
or
sbb
xchg
shl
je
xchg
inc
call
push
mov
sbb
push
inc
aas
rcr
and
cmp
ffree
sub
pop
mul
loop
loopne
push
mov
fadd
aam
inc
mov
loope
ror
lds
aad
or
out
inc
mov
ret
(bad)
outs
ins
mov
bound
jbe
aaa
mov
xor
dec
dec
mov
jo
out
sar
mov
ret
scas
scas
je
loope
xchg
ja
xchg
jge
cmp
xchg
test
mov
xchg
dec
ret
cmp
cli
dec
lock
pop
jnp
cmp
loop
fidivr
call
sbb
test
out
pop
movs
mov
leave
xor
xor
jb
sbb
xchg
cld
out
call
test
sbb
lods
push
ffree
call
arpl
dec
mov
inc
and
cmp
(bad)
retf
mov
xor
xchg
inc
test
inc
ins
pop
xor
or
adc
repz
push
xchg
sbb
or
dec
mov
out
mov
and
sub
div
jmp
ds
add
sbb
pop
cs
cwde
dec
repz
in
mov
cmp
add
lahf
or
mov
fistp
daa
xor
xchg
fstp
mov
in
xchg
rcl
mov
pop
mov
mov
sahf
test
pop
rcl
lods
xor
inc
mov
pop
ins
fwait
dec
pop
daa
jmp
fist
jno
push
(bad)
loope
fistp
sbb
bound
aas
loopne
pop
or
loope
sbb
mov
(bad)
xchg
sahf
movs
push
fimul
into
cmp
idiv
jecxz
jo
sub
jg
leave
daa
les
in
and
xchg
cwde
leave
imul
mov
pop
sbb
or
and
repnz
scas
pop
adc
dec
inc
shl
dec
add
rol
or
popa
test
mov
and
or
shl
out
pop
ret
popa
lahf
movs
aaa
adc
push
retf
call
out
jecxz
cmp
imul
lods
pop
out
adc
imul
jae
and
xchg
out
mov
xchg
sar
jno
movs
adc
jg
imul
xor
sbb
push
and
xor
imul
arpl
nop
enter
stc
mov
aam
(bad)
rcr
movs
nop
or
mov
scas
add
pop
push
xchg
loopne
jo
js
cmps
push
mov
mov
push
loopne
mov
aaa
push
jno
mov
lods
mov
scas
dec
sub
pop
jnp
icebp
pusha
stos
sbb
and
cwde
cdq
xor
jbe
inc
mov
gs
ror
shr
push
ds
aaa
fmul
outs
scas
jbe
add
ins
popf
jae
adc
fdiv
jmp
push
pushf
cmps
sub
sub
stos
ret
lods
imul
inc
cwde
xchg
add
and
push
cmp
or
shr
or
adc
aam
(bad)
cmp
imul
push
jns
scas
es
shl
repz
push
cmp
jmp
cmp
je
sti
sub
cli
mov
aaa
xchg
(bad)
jmp
movs
fld
test
ja
pop
mov
test
les
loope
sub
xchg
adc
pop
retf
mov
adc
shl
push
pop
in
daa
sti
pop
xchg
pop
shl
pop
stc
mov
xor
pop
cdq
cmp
loope
lods
xor
xlat
aad
je
jle
js
pushf
je
xrelease
xlat
in
push
popf
dec
fwait
xor
inc
in
mov
pop
outs
cmp
xchg
xchg
xor
pushf
dec
dec
hlt
and
push
fidiv
jo
xchg
jecxz
jge
es
stc
mov
repnz
movs
cmp
add
(bad)
enter
mov
sub
pop
daa
sub
aas
dec
scas
loopne
dec
stc
into
repnz
(bad)
push
mov
cmp
sar
dec
rcl
aad
add
add
push
push
popa
push
scas
sbb
outs
in
rol
jle
cmp
(bad)
in
(bad)
outs
adc
iret
in
mov
add
push
add
or
in
aam
imul
cmps
ja
xor
jl
stos
mov
or
test
jmp
jmp
cmp
dec
mov
mov
push
inc
xchg
jp
test
mov
or
jae
sbb
mov
xor
jo
mov
int
jo
xor
push
shl
outs
mov
mov
(bad)
push
mov
retf
fs
movs
dec
pop
repz
test
outs
(bad)
mov
jg
std
add
dec
sahf
(bad)
outs
push
xor
cli
cmc
jmp
add
cwde
cwde
pop
jnp
and
(bad)
out
pop
jp
sub
call
mov
add
sub
push
in
mov
xor
ins
cmp
cli
push
data16
loopne
push
je
stos
sysenter
inc
xor
xchg
sbb
dec
pusha
les
mov
push
sub
push
push
aaa
cmp
sub
mov
add
lods
mov
mov
or
xor
mov
stc
cmc
add
dec
loope
xor
aas
mov
cmps
das
out
jbe
daa
mov
cwde
enter
and
or
sub
mov
or
retf
inc
stos
mov
mov
int3
xchg
sbb
push
xor
movs
test
test
push
mov
dec
xor
mov
xchg
sar
dec
(bad)
cmp
mov
jmp
jns
stos
or
and
or
adc
jb
pop
cs
sar
xchg
inc
cmp
sub
loop
(bad)
sub
out
repnz
mov
test
pop
fucomip
pop
xor
gs
jae
(bad)
bound
aas
dec
sbb
popf
retf
inc
mov
repnz
jno
into
push
jbe
adc
add
jae
pop
add
rcl
sbb
dec
adc
sbb
jmp
retf
(bad)
push
sahf
in
nop
lods
stos
loop
or
push
lahf
mov
pop
ficomp
or
out
(bad)
push
in
mov
cdq
ja
imul
inc
out
cmp
mov
sub
jno
lahf
lock
mov
test
sub
retf
(bad)
pop
stc
jmp
sub
pop
cmps
mov
aaa
(bad)
sbb
xchg
push
(bad)
push
sti
xchg
cli
push
shl
retf
push
adc
sbb
jnp
mov
neg
sti
dec
scas
(bad)
push
adc
mov
xchg
retf
add
daa
imul
lea
fld
pop
daa
push
push
outs
push
inc
fdiv
add
mov
jbe
or
movs
xor
add
add
stc
mov
xor
mov
lds
or
and
lock
and
adc
scas
stc
sbb
int3
pop
std
lahf
jle
dec
mov
pushf
popf
pop
pushf
mov
or
mov
aam
ins
ret
pop
pop
push
call
lock
jo
retf
jg
xchg
pop
mov
push
into
rcl
out
adc
mov
loopne
cdq
cmc
or
adc
daa
cmps
es
shl
fcom
out
bound
mov
pop
(bad)
test
add
loop
shl
sahf
jecxz
xor
loopne
mov
stos
sub
jmp
add
cmc
sbb
ret
push
push
inc
pop
repnz
mov
add
cli
lea
inc
push
dec
sahf
into
aas
cmp
push
cmp
mov
jle
ja
sbb
xchg
xchg
das
fnstsw
pop
xchg
lea
jle
jbe
mov
cmp
fidivr
cmp
sbb
repnz
(bad)
add
jecxz
pop
leave
sbb
fimul
xchg
jle
mov
ins
popa
mov
dec
leave
mov
dec
or
hlt
push
call
fistp
(bad)
push
dec
clc
(bad)
aas
cmc
push
push
mov
cmp
add
shr
or
mov
add
mov
test
sbb
lods
popa
jae
inc
xchg
fdiv
push
fnstsw
xchg
scas
sub
cld
push
sbb
sar
cdq
dec
les
movs
fcom
je
sbb
jno
pop
push
xchg
mov
dec
leave
xor
push
xor
in
gs
mov
push
mov
and
cmp
jo
(bad)
je
arpl
enter
je
jno
add
adc
xchg
aam
mov
scas
shl
dec
sbb
(bad)
push
gs
sub
mov
mov
retf
(bad)
push
and
(bad)
retf
push
cmps
push
dec
in
jp
or
retf
pop
ficomp
mov
fwait
mov
pop
pop
push
fisub
push
loopne
ins
mov
lds
jnp
fadd
arpl
or
add
je
cwde
arpl
in
sbb
repz
call
jmp
addr16
scas
mov
loope
outs
out
scas
xor
push
mov
and
cmp
in
xchg
mov
dec
(bad)
jns
add
adc
add
xor
cld
dec
loopne
jbe
add
std
das
loop
mov
push
inc
mov
mov
push
xor
scas
cld
fistp
addr16
sub
sar
cli
pop
pop
xor
out
aam
dec
add
push
retf
pop
imul
sub
jmp
adc
xor
xlat
sub
mov
ss
jnp
loope
mov
daa
outs
aam
push
xchg
nop
je
(bad)
push
adc
in
xchg
dec
cmps
scas
mov
push
(bad)
fs
outs
out
stos
aam
or
pop
dec
int3
dec
sub
sub
mov
jns
or
inc
adc
dec
sub
inc
add
mov
jne
and
lahf
xchg
xchg
adc
fld
int3
xor
xor
dec
xchg
lds
xchg
cmps
lock
rcl
jge
push
and
adc
ins
out
jmp
mov
dec
retf
mov
int3
pop
inc
jno
sbb
int
cs
mov
sbb
sub
sbb
lahf
and
arpl
dec
sub
loopne
jnp
jo
mov
cmp
add
mov
fdivr
inc
mov
add
inc
daa
jne
jne
(bad)
aas
mov
xchg
loope
ds
adc
scas
movs
sub
mov
xchg
scas
movs
add
pop
cmps
or
inc
es
xlat
sub
pop
ss
push
cmp
jl
ins
test
nop
sbb
outs
pop
test
aaa
and
je
adc
mov
xchg
popa
cmps
or
adc
push
dec
imul
mov
repz
rcr
movs
xor
icebp
scas
mov
rcr
mov
push
test
and
jb
mov
out
jne
xchg
je
sbb
(bad)
test
repnz
std
sub
adc
push
push
and
js
mov
scas
test
mov
arpl
loope
repz
stos
xchg
repnz
jp
outs
inc
xor
mov
jno
inc
sbb
outs
dec
or
fwait
sbb
jb
cli
neg
(bad)
push
ret
push
nop
in
in
or
scas
cli
rcl
jo
lds
dec
push
mov
fiadd
mov
inc
inc
add
in
div
pop
inc
mov
add
jne
hlt
inc
pop
adc
xchg
bnd
sbb
sbb
movs
popa
mov
adc
in
mov
mov
mov
jp
sbb
clc
std
lea
and
mov
mov
sbb
mov
mov
push
jo
sti
das
sbb
mov
xchg
les
ret
mov
dec
dec
dec
sub
aad
into
push
add
pop
jecxz
xchg
push
outs
ss
and
aam
add
xor
dec
repnz
or
shr
dec
loop
jnp
add
pop
repz
inc
sbb
inc
les
and
push
push
fild
cwde
cmp
rcl
jge
out
xchg
jno
cmp
adc
mov
or
dec
out
sub
inc
cmp
push
bound
lds
loope
repnz
push
imul
jp
call
cwde
call
jmp
pop
imul
(bad)
ret
adc
and
cdq
sub
xchg
mov
addr16
or
ds
lds
pop
test
arpl
iret
add
cmp
fwait
push
cmp
lods
xchg
mov
push
fadd
xlat
jae
pop
stos
in
fdiv
add
jecxz
pop
arpl
les
mov
loopne
lahf
(bad)
adc
test
sbb
or
and
bound
jge
push
fnstsw
mov
clc
test
ss
jnp
jge
clc
sbb
les
sbb
int
push
push
dec
aas
push
pop
movd
sbb
mov
xlat
xor
dec
mov
fdivrp
sbb
xor
pusha
pop
mov
mov
outs
lods
or
xor
push
and
inc
fs
pop
xchg
ror
dec
xor
sub
aas
xchg
push
mov
jl
mov
add
sub
pusha
push
pop
(bad)
idiv
fist
pop
mov
push
dec
dec
js
mov
adc
jg
pop
jno
shl
(bad)
cli
sub
xor
dec
adc
push
add
ins
je
mov
xchg
(bad)
je
jmp
push
hlt
inc
and
inc
enter
aam
xchg
cwde
add
jmp
jecxz
ja
xchg
and
retf
cmp
mov
jle
mov
mov
inc
jno
outs
lds
sub
rol
aaa
int3
or
or
outs
xchg
test
dec
daa
sub
out
in
sub
gs
xor
mov
retf
sti
inc
pop
enter
cld
cli
and
pop
push
mov
xor
xor
inc
inc
adc
jo
push
(bad)
sub
pop
icebp
loopne
mov
add
mov
movs
loop
dec
mov
jns
sar
sbb
es
push
xchg
sub
adc
or
jp
out
xchg
inc
int3
mov
adc
jmp
sti
mov
fwait
mov
rcr
and
mov
sbb
aas
xor
ror
gs
and
imul
into
push
push
ds
dec
imul
xchg
popa
mov
pop
ret
xchg
push
xor
(bad)
aad
lea
push
jmp
sti
iret
or
push
pop
cmp
lock
call
lahf
cmp
ja
mov
loope
aas
test
sbb
daa
adc
sbb
mov
xor
sub
xchg
fist
mov
push
inc
mov
push
sub
mov
out
(bad)
cld
nop
stos
sub
bound
cdq
lahf
mov
cmp
test
in
jb
fwait
jno
and
out
jge
sbb
popf
stos
test
mov
mov
retf
mov
aaa
mov
cmp
imul
leave
in
aaa
lahf
jns
mov
sub
ja
sar
in
inc
sub
add
xor
mov
pop
scas
retf
dec
fs
add
out
out
aad
and
popf
movnti
dec
sbb
outs
pop
ror
sub
loope
(bad)
rol
xchg
jo
popa
ret
call
or
lahf
push
lea
loop
mov
fstp
push
test
sub
pop
sbb
repnz
daa
jne
stc
jmp
mov
jmp
add
ss
jmp
dec
push
(bad)
outs
xchg
and
or
dec
jmp
and
(bad)
push
rcl
(bad)
cld
add
lds
add
(bad)
sub
xor
in
mov
test
in
or
mov
dec
fisttp
xchg
xchg
dec
jecxz
mov
das
and
jg
and
div
pop
inc
je
std
add
jle
pop
sbb
outs
jmp
lods
sub
mov
cwde
rol
leave
push
jb
push
neg
aam
sbb
mov
ret
pop
cld
in
stos
retf
sbb
cmp
push
in
fmulp
cdq
in
push
(bad)
movs
jae
and
cmp
dec
(bad)
test
cli
icebp
sbb
mov
push
inc
(bad)
div
or
clc
(bad)
pop
mov
pop
fs
scas
push
scas
jno
sub
mov
sbb
call
pushf
sbb
fs
adc
sbb
scas
jle
jp
add
dec
mov
sahf
xor
rcl
loopne
xor
mov
inc
inc
add
into
jg
ds
adc
sbb
xor
es
jle
mov
into
js
push
xor
sub
ficom
loopne
in
pop
adc
mov
stos
cli
push
dec
bswap
xchg
mov
push
adc
jmp
fld
dec
in
ret
cmp
out
mov
ja
add
jnp
push
mov
comiss
jnp
adc
daa
(bad)
and
or
jns
(bad)
add
fadd
jne
icebp
int
hlt
jb
loop
add
fdivr
mov
ds
inc
mov
inc
inc
clc
jbe
add
pusha
push
mov
pop
sar
adc
retf
mov
in
popa
popa
les
fisubr
jmp
icebp
inc
and
loop
in
(bad)
push
repz
and
pop
fnstcw
clc
int
loop
mov
sub
xchg
fidiv
loope
sub
les
sub
xor
(bad)
aam
sbb
sub
sub
adc
cmps
mov
(bad)
retf
cdq
sbb
repnz
cmp
jae
fcom
xchg
mov
xchg
cmp
or
dec
repz
cmps
pop
cs
push
stos
pop
jno
jno
dec
dec
and
adc
test
cs
(bad)
ret
jmp
retf
dec
rcl
mov
adc
push
xor
push
lock
(bad)
push
cdq
jle
cmps
cmp
stos
sysenter
test
pop
pop
call
femms
loopne
jmp
add
out
jecxz
pop
mov
sub
xor
or
call
rol
push
xchg
fcomi
iret
jb
cmp
stos
push
mov
jns
arpl
and
sub
mov
mov
pop
fcomp
in
pop
add
jg
dec
push
xchg
rcl
mov
mov
lahf
push
std
sbb
jno
mov
cld
aam
ins
pop
mov
aam
mov
push
and
jle
sub
imul
inc
push
out
add
ret
jb
mov
push
int3
imul
out
cmc
cmp
inc
or
or
jo
pop
and
push
pop
sbb
mov
adc
mov
leave
les
loop
stos
and
jno
icebp
movs
in
sub
jbe
cmp
mov
inc
call
inc
xor
sbb
jo
inc
mov
xor
sub
cmp
xor
inc
dec
push
mov
int3
ds
xlat
adc
stos
in
push
sub
sbb
test
imul
frstor
ret
or
mov
cmp
adc
adc
test
int
or
sbb
add
inc
cdq
or
sub
cmp
lds
push
push
push
mov
not
stos
add
cwde
sti
or
fdiv
inc
mov
sub
mov
dec
mov
add
or
test
jp
popa
inc
inc
add
or
xor
mov
into
add
outs
ins
repnz
dec
xchg
(bad)
mov
mov
retf
div
pop
push
aaa
data16
(bad)
mov
or
inc
inc
inc
call
xchg
xchg
pop
mov
fneni(8087
jnp
fstp
inc
or
int
sub
push
test
inc
lds
call
lahf
mov
(bad)
mov
adc
cmp
push
cwde
lock
xchg
pop
inc
inc
push
inc
xchg
cdq
out
leave
inc
xchg
pop
pop
cdq
call
shl
mov
(bad)
dec
mov
ins
nop
mov
dec
mov
jg
sub
in
(bad)
and
jecxz
mov
lods
in
popa
mov
stos
pop
lods
shl
jbe
sbb
ret
mov
gs
inc
mov
jnp
mov
out
dec
iret
(bad)
retf
mov
packuswb
or
cmp
cmp
rol
mov
and
or
das
mov
ja
cli
fnstsw
xor
ins
out
xor
xchg
sar
or
ss
outs
mov
dec
mov
pop
and
not
push
mov
mov
adc
fisub
xchg
in
jno
dec
pop
inc
pop
pushf
scas
out
out
adc
in
mov
and
mov
sub
xor
dec
mov
ins
push
pop
push
mov
dec
(bad)
xor
js
add
xchg
ret
xor
mov
mov
in
hlt
loop
inc
mov
lds
cmp
sub
movs
adc
shl
dec
aas
in
aam
or
loop
inc
lahf
mov
or
jae
icebp
xor
mov
ins
pushf
(bad)
imul
jp
xchg
jp
push
rcr
xchg
mov
mov
jg
enter
icebp
xor
pop
jnp
sbb
je
pop
jns
loop
mov
pop
jge
cdq
xchg
mov
sti
out
jne
jae
adc
and
cli
push
loope
setge
nop
xor
stc
add
jae
jbe
fidivr
dec
or
out
data16
outs
retf
ins
enter
lea
mov
mov
mov
(bad)
adc
das
and
ret
pop
outs
cld
xor
lea
iret
(bad)
fld
shl
add
xchg
(bad)
xchg
into
(bad)
jmp
icebp
aas
cmp
adc
call
add
sbb
std
loopne
add
outs
mov
cli
push
shr
xchg
fdiv
sub
pop
cmp
mov
cmp
les
sti
ret
inc
jae
cmp
sub
mov
sbb
rcl
mov
sub
dec
jns
ror
push
jns
dec
pop
rcl
rol
js
mov
or
pop
(bad)
pop
into
add
ss
add
adc
je
xchg
sbb
adc
loope
test
xlat
dec
lods
cmp
lds
jg
jg
lods
push
sbb
xor
jecxz
fwait
mov
fdiv
inc
gs
push
push
out
lea
sbb
cmp
mov
xchg
or
out
arpl
mov
(bad)
dec
movs
and
sbb
movs
add
inc
pop
nop
aaa
fnstsw
cmp
in
push
aad
push
hlt
sbb
fdivrp
psrad
mov
mov
jnp
mov
je
sbb
lea
jae
mov
jnp
imul
test
inc
adc
adc
iret
test
jg
push
clc
mov
pop
rcr
jmp
clc
cdq
out
push
sbb
(bad)
ins
cmp
pop
stc
inc
pushf
lods
sub
add
or
(bad)
dec
pop
mov
outs
aam
push
js
cmps
fdiv
in
mov
fmul
aaa
push
(bad)
xlat
mov
bound
lods
icebp
lds
imul
loop
cmp
sub
outs
out
or
fwait
sub
adc
shl
in
push
stos
mov
sbb
(bad)
xor
push
sub
bound
fnstenv
sbb
ss
cmp
jo
pop
outs
push
retf
sbb
jmp
cmp
mov
pop
pusha
js
xchg
jl
xchg
pop
adc
sub
leave
lock
jne
(bad)
outs
push
jge
aam
add
push
push
cli
inc
inc
mov
rol
cmp
and
rcr
mov
stos
mov
das
in
jp
loop
bound
stos
add
scas
das
ss
jno
push
push
std
ja
and
sbb
inc
push
and
and
ins
dec
out
inc
sbb
push
js
mov
lock
ret
sbb
pop
jo
dec
xchg
sar
cwde
xchg
fwait
scas
or
arpl
sbb
gs
loopne
pop
dec
sub
jo
cwde
add
fwait
stos
sub
jae
jbe
inc
xlat
imul
push
pop
sub
dec
inc
js
mov
push
xchg
mov
cmp
das
cmp
dec
jecxz
sub
adc
hlt
test
dec
or
inc
mov
loopne
sub
popf
pop
sbb
mov
movs
fstp
sub
mov
push
cld
vpmulhw
sub
pop
and
cmp
push
aam
cli
daa
cld
fwait
mov
sub
adc
imul
fstp
jnp
test
outs
cld
fwait
mov
fadd
enter
add
mov
ins
in
out
leave
xchg
(bad)
ja
jg
add
in
dec
and
jmp
xchg
dec
ss
pop
mov
cmp
lods
retf
je
sar
outs
loopne
fld
xchg
(bad)
cmp
js
daa
fwait
add
jl
mov
cmps
dec
jle
lock
push
mov
cli
and
push
xchg
(bad)
and
les
xchg
add
dec
sbb
pop
je
pop
mov
mov
repz
dec
mov
pop
jae
pop
mov
add
add
jecxz
cmps
jno
leave
inc
movs
and
push
aad
add
push
lahf
push
fwait
adc
jmp
mov
pop
cmp
int3
and
add
or
mov
mov
mov
xor
xor
jbe
jb
mov
inc
add
xchg
icebp
xlat
rcr
in
mov
sbb
mov
loope
lods
or
bound
mov
mov
push
(bad)
repz
imul
call
jl
movs
mov
stc
retf
cmp
hlt
adc
scas
test
cmp
jg
sbb
push
xor
add
jge
push
test
adc
jnp
adc
push
xor
cmp
test
(bad)
in
out
addr16
or
call
(bad)
scas
adc
xchg
and
shr
imul
jmp
shr
jo
xor
daa
push
sahf
adc
fmul
out
xor
imul
addr16
jno
mov
mov
jmp
and
call
or
or
xchg
sahf
rcl
pushf
push
push
arpl
in
pop
dec
push
mov
jne
jbe
sub
xchg
stc
cli
mov
add
cmp
inc
test
add
adc
dec
sbb
mov
push
pop
mov
psubq
xor
mov
lods
dec
pop
stc
mov
js
push
xchg
in
call
arpl
jno
pop
xor
push
mov
adc
push
and
rcr
push
inc
in
inc
jo
add
jge
lahf
sti
xor
jg
enter
push
test
outs
xchg
nop
addr16
inc
jmp
jb
xchg
mov
cmp
dec
ffree
jle
inc
jle
cmp
xchg
xor
jnp
(bad)
outs
arpl
jp
call
push
pop
lahf
xor
iret
inc
movs
or
gs
cld
push
mov
push
jae
rol
stc
cli
adc
lahf
movs
add
inc
dec
cmp
adc
adc
cmps
enter
mov
retf
add
call
ret
mov
cmps
push
shl
leave
sub
loop
push
pop
ins
xlat
out
mov
add
push
fisttp
pusha
in
push
(bad)
test
push
jp
sbb
mov
je
mov
lods
add
ins
fisub
test
mov
cmc
xchg
add
ins
ja
sbb
xchg
mov
scas
movs
dec
jae
jne
mov
dec
bnd
test
cmp
stos
int3
pop
bound
xor
cld
pop
scas
enter
and
leave
test
sbb
retf
xchg
daa
push
jecxz
inc
jae
cmp
and
inc
xchg
das
test
fild
xor
xor
(bad)
outs
adc
mov
lea
inc
ds
rol
jecxz
lahf
sbb
xchg
add
in
sub
push
pop
call
and
push
movs
xchg
test
pushf
stc
jmp
add
fisttp
mov
aaa
cmp
lds
rcr
out
xchg
adc
stos
jg
popf
mov
or
mov
push
cmps
inc
lds
in
jae
push
dec
pop
sar
ins
out
mov
sub
or
ins
pop
xor
dec
push
out
xchg
xchg
dec
or
movs
and
xor
fidivr
or
dec
test
mov
(bad)
add
data16
xor
imul
test
xor
out
mov
push
jge
cmp
sti
cmp
mov
dec
dec
sbb
pushf
das
cmps
repz
sub
xlat
or
cli
xor
dec
mov
call
xchg
test
mov
gs
xchg
or
fmulp
fsub
rcl
std
cmp
and
dec
pushf
mov
pop
(bad)
movs
cli
aad
fbstp
icebp
xor
leave
cmc
scas
fwait
jge
sbb
repz
cmps
inc
push
add
inc
mov
sahf
pop
out
lahf
adc
scas
xchg
pop
mov
in
daa
and
lods
dec
(bad)
xlat
inc
push
lock
mov
mov
xchg
jmp
mov
sbb
xchg
retf
loop
mov
out
shl
push
mov
cmps
pop
popf
je
sub
cmps
repnz
ror
js
test
mov
jle
inc
pop
test
and
jb
pop
fstp
retf
addr16
sbb
call
ja
loop
push
ins
or
dec
adc
movs
fld
mov
addr16
loopne
dec
inc
stos
shl
mov
push
jnp
and
(bad)
jb
pop
call
test
jle
push
xchg
adc
mov
and
add
rol
(bad)
clc
adc
push
push
retf
ins
jno
sbb
in
xlat
out
inc
pushf
cmp
fld
add
es
xor
dec
in
lea
push
ffreep
jl
rcr
ja
mov
call
and
sti
and
outs
xor
es
lea
sbb
dec
push
mov
cmps
and
leave
adc
pop
dec
pop
cmp
inc
xor
mov
mov
xchg
add
and
jnp
pop
sbb
fisubr
xchg
mov
ret
lods
sub
jmp
test
aaa
std
mov
mov
inc
push
push
and
jnp
jle
dec
movs
adc
xchg
dec
pop
xor
and
int3
lods
fldcw
out
es
mov
hlt
mov
and
loope
ficom
outs
cmp
aas
mov
adc
ficomp
pop
je
stos
aaa
push
xor
push
data16
inc
cmp
inc
cmp
fsub
inc
pop
xor
xchg
or
cmp
test
int3
mov
aad
sti
sub
dec
stc
sbb
(bad)
cs
xchg
(bad)
lods
movs
daa
jl
jno
mov
jg
xor
xlat
nop
mov
push
inc
push
mov
hlt
jmp
xor
les
shl
js
fwait
dec
or
in
(bad)
mov
stc
xchg
mov
or
mov
cmps
jae
cld
sub
cwde
mov
push
push
jmp
adc
mov
movs
mov
mov
add
sub
sbb
jo
or
mov
mov
and
push
mov
mov
push
ss
mov
shr
repz
mov
xchg
lea
data16
in
hlt
ror
loop
das
sub
ja
pop
lahf
sub
sub
imul
pop
xor
adc
pop
dec
jl
mov
arpl
test
xchg
pop
pop
adc
jbe
ds
lea
xor
push
sti
sub
aas
mov
jae
aam
xor
mov
xlat
mov
rcr
hlt
or
mov
mov
pop
cmps
test
mov
inc
xchg
and
pop
dec
fwait
push
xlat
jae
jl
pop
bound
sbb
ins
xchg
xlat
mov
scas
sub
add
mov
adc
lea
test
mov
mov
int3
lea
mov
nop
mov
jmp
mov
lods
test
mov
or
mov
iret
(bad)
out
or
sar
jno
pop
into
push
mov
push
xchg
loopne
dec
scas
xchg
jmp
xchg
jno
out
adc
cwde
(bad)
(bad)
jmp
shr
sbb
xchg
hlt
sbb
mov
push
pop
repnz
dec
mov
rol
mov
test
aas
sbb
sbb
and
inc
test
push
xchg
or
retf
int3
loopne
rcr
xlat
inc
pop
int3
jbe
inc
enter
dec
or
pop
std
dec
test
push
xlat
lahf
vpunpcklbw
push
scas
les
sub
rcr
mov
and
inc
jmp
adc
xor
fcomp
aam
push
aad
rcr
mov
mov
enter
xchg
xor
(bad)
xchg
sar
rol
pop
sbb
adc
push
and
and
gs
add
imul
sub
fmul
mov
movaps
cmp
in
lods
retf
add
or
or
inc
daa
out
mov
mov
xchg
add
jb
xor
in
mov
xor
test
int3
pop
addr16
jl
out
bnd
mul
je
sub
lods
dec
rcr
test
sub
push
(bad)
out
xor
jmp
jg
stc
push
lock
push
iret
pop
sub
or
gs
jmp
call
xchg
push
push
sub
xor
push
jp
jo
add
mov
pop
loope
jbe
jg
xor
stc
dec
stos
lods
xor
jg
add
xchg
ret
pop
xchg
cmps
jns
adc
imul
push
sbb
jle
out
fcomp
jg
push
jg
stc
rcl
sub
jb
in
dec
pop
cmps
mov
out
mov
xchg
je
les
or
pop
jne
aad
cmc
imul
movs
xchg
iret
adc
pop
pop
leave
or
ret
lods
lods
daa
adc
xor
add
mov
mov
push
jno
pop
call
test
fistp
loopne
inc
or
ret
inc
or
cld
test
lods
rol
fild
mov
add
sbb
and
dec
ret
mov
jne
gs
mov
gs
mov
out
rcr
dec
fld
dec
adc
loop
jmp
mov
(bad)
push
gs
int3
push
jge
das
push
in
xchg
cmp
push
xchg
cmp
sub
int
gs
imul
clc
int
cmp
loope
add
(bad)
pop
add
adc
sbb
xchg
or
xor
xor
xor
out
sbb
cmp
or
push
out
scas
loopne
mov
pop
pop
sbb
pusha
pop
cmp
icebp
adc
stos
dec
nop
dec
dec
push
movs
out
jae
mov
int3
fiadd
xor
xchg
push
mov
(bad)
out
fcom
mov
test
iret
push
out
outs
push
mov
jae
mov
mov
rcl
add
jb
je
xlat
rol
push
jmp
mov
call
push
in
and
xchg
sub
fstp
retf
or
aas
xor
out
ror
inc
inc
push
gs
retf
mov
dec
jno
mov
daa
mov
retf
ret
jnp
mov
pop
fsub
and
push
ss
ffree
mov
jl
test
cmp
and
jecxz
push
mov
xchg
fnstenv
lahf
cwde
and
xchg
or
(bad)
jo
sbb
fidiv
ret
inc
fisttp
mov
imul
ss
jmp
sub
jb
inc
xchg
stos
das
sub
fist
icebp
mov
es
int
and
out
movs
cmp
test
(bad)
fs
xchg
xchg
and
sub
jmp
adc
icebp
mov
test
inc
fidivr
leave
dec
pop
push
sub
ror
inc
jmp
pop
mov
xchg
cmps
test
mov
mov
mov
xchg
addr16
movs
xchg
lock
aam
sahf
inc
lock
sar
lods
int3
fadd
aaa
mov
xchg
test
stos
mov
sar
cdq
and
sub
gs
cmc
push
jl
out
mov
stos
cmp
cmp
pop
and
inc
mov
push
in
sar
ret
and
push
(bad)
loope
mov
adc
inc
inc
gs
and
jno
adc
scas
fstp
mov
pop
dec
in
arpl
fisub
iret
xchg
xchg
test
aaa
add
aas
sbb
pop
test
mov
jl
inc
sbb
mov
shl
xchg
clc
pusha
ret
jbe
test
scas
pop
mov
ret
add
cmc
jp
push
xor
inc
retf
scas
jns
pop
jp
cmp
mov
mov
adc
aad
inc
(bad)
pop
loopne
dec
lea
test
pop
mov
pop
sbb
imul
xchg
jl
or
cwde
xchg
out
imul
outs
inc
push
call
bound
imul
into
cld
inc
pop
xchg
mov
mov
adc
inc
ss
and
push
mov
mov
idiv
and
xchg
push
clc
fistp
idiv
or
loop
inc
out
jb
jns
mov
pop
cmp
jmp
xor
ins
jnp
xor
enter
sub
mov
cmp
or
add
mov
pop
mov
mov
sub
out
push
pop
shl
les
in
mov
lods
cmps
ficom
scas
sti
(bad)
push
sub
popa
push
out
movs
cwde
xchg
pop
push
xor
leave
ds
fwait
cmp
push
xor
cwde
jge
or
les
es
(bad)
or
adc
les
aad
mov
or
daa
ins
or
hlt
inc
mov
adc
push
retf
sub
push
(bad)
imul
adc
lods
(bad)
mov
sub
jmp
mov
sahf
test
cmc
inc
out
cwde
dec
inc
fsubr
dec
lods
rol
clc
sub
or
ds
loop
jle
jno
cmp
and
dec
pop
ins
mov
(bad)
mov
add
bound
sbb
pop
cmp
je
add
xchg
popf
xor
in
sub
fidivr
dec
cmp
pop
cmp
add
pop
daa
inc
inc
adc
dec
test
(bad)
jp
pop
push
imul
jmp
in
pop
dec
cwde
outs
ins
les
dec
aad
out
outs
ret
and
mov
sti
pop
sub
add
test
js
aas
dec
ror
repnz
movs
dec
pop
(bad)
sbb
mul
dec
xchg
mov
push
fs
or
repz
and
shl
fld
pop
lock
sub
icebp
jmp
mov
or
data16
pop
sub
not
push
sub
push
in
lods
pop
xor
fistp
std
dec
sar
inc
xchg
add
loop
(bad)
fst
daa
cmp
(bad)
mov
fcomi
push
sar
ss
je
jp
jge
mov
or
pop
cmps
dec
sub
outs
jns
(bad)
jo
bsr
add
xchg
sti
mov
adc
into
imul
mov
cmp
jns
ret
ins
sar
and
(bad)
inc
pop
mov
je
pop
and
push
dec
jecxz
je
xchg
sbb
push
mov
add
data16
mov
enter
mov
pop
fcmovnb
jmp
js
inc
cmp
mov
pop
add
sbb
and
cmps
aam
imul
aas
mov
dec
jbe
add
inc
inc
inc
xchg
fist
call
inc
mov
add
iret
fmul
(bad)
pop
call
cdq
mov
adc
xlat
inc
adc
push
mov
out
in
inc
mov
sub
scas
mov
dec
imul
jae
inc
fild
ins
dec
mov
jmp
lahf
sub
dec
mov
and
mov
sbb
push
cmp
or
jno
jl
dec
inc
imul
xlat
test
and
pop
mov
scas
pop
pop
sbb
sbb
push
cs
fs
clc
ret
out
or
inc
or
sub
mov
pop
in
add
fsub
jmp
jno
jle
jnp
or
mov
int3
(bad)
xlat
xor
sbb
(bad)
and
jne
mov
mov
or
hlt
xor
mov
mov
push
outs
pusha
imul
jg
cdq
and
mov
fstp
xchg
int
lods
aaa
loope
mov
leave
dec
clc
call
int
arpl
pop
jp
mul
mov
arpl
jl
shl
movs
cmp
mov
fs
movs
cmp
pxor
jge
mov
mov
dec
les
sub
mov
test
inc
mov
rcl
inc
mov
aam
ins
rcl
shl
ja
push
mov
(bad)
rol
ds
xor
cmp
(bad)
pop
adc
adc
xchg
pop
test
into
push
pop
popa
mov
sar
mov
das
xor
inc
scas
test
dec
in
cmp
shl
je
push
mov
fdivp
add
imul
and
stos
mov
in
sahf
or
mov
jge
mov
dec
xor
xor
popa
int3
ja
das
adc
outs
xchg
and
out
aam
dec
clc
mov
inc
(bad)
push
jmp
(bad)
push
jbe
les
xchg
fidivr
or
ja
movs
mov
add
out
mov
in
cli
add
mov
or
push
xlat
int3
icebp
mov
adc
test
fwait
inc
push
push
jp
or
adc
in
(bad)
test
push
xchg
pushf
in
push
outs
mov
mov
add
dec
sbb
std
data16
mov
mov
nop
sahf
pop
mov
test
je
shr
add
outs
sbb
inc
pop
mov
add
dec
jno
mov
mov
test
mov
mov
xchg
dec
push
movs
loope
adc
or
out
mov
inc
mov
mov
cmp
xor
sbb
and
and
pushf
pop
stos
fadd
shl
cwde
aam
push
cmp
stos
mov
cdq
pop
push
mov
add
cs
call
xchg
inc
xchg
sbb
or
inc
jl
push
mov
outs
scas
aad
jbe
sbb
out
mov
and
fsub
mov
pushf
jne
pop
mov
xchg
sub
xor
ficom
pop
scas
mov
push
jp
or
jmp
test
mov
cs
shl
pusha
xchg
jbe
pusha
jne
jmp
cmp
push
cmp
leave
leave
ds
(bad)
or
fs
add
cmp
sbb
pop
cmp
cwde
xor
adc
dec
loope
jbe
xchg
ins
jecxz
inc
test
mov
xchg
xor
push
ss
push
rol
sbb
mov
xchg
mov
dec
add
adc
adc
pop
adc
mov
sbb
retf
push
aaa
repnz
cmps
cmp
mov
add
fbld
retw
int3
xor
xchg
mov
xchg
sar
jge
pop
sti
scas
sub
sub
mov
xchg
repnz
into
cmp
jb
ret
dec
xlat
xchg
test
in
mov
dec
and
adc
jle
jno
jno
das
mov
lahf
push
pop
cli
mov
shr
add
imul
cld
mov
mov
test
out
ss
dec
jl
mov
dec
cmp
pushf
cdq
test
shl
pop
sub
fdiv
adc
inc
jbe
add
lods
push
dec
mov
sbb
and
pop
(bad)
pop
shl
test
scas
xchg
in
pop
xchg
rcr
jnp
dec
xchg
mov
xchg
dec
shl
xchg
outs
push
xor
pushf
or
imul
clc
aam
call
jp
mov
cmp
rol
iret
lock
lea
mov
loopne
pop
sbb
adc
push
add
xchg
xor
pop
fdiv
outs
jecxz
imul
mov
(bad)
adc
call
sbb
repz
adc
xchg
je
cmp
mov
retf
mov
neg
or
push
push
push
mov
lahf
aaa
clc
inc
mov
popa
jp
xor
xor
and
dec
mov
mov
popf
out
add
js
and
dec
call
(bad)
clc
mov
lea
gs
and
sbb
xchg
jnp
add
sub
pop
les
lahf
out
pop
das
ds
movs
cmp
loope
or
cli
push
cmps
xchg
dec
mov
pusha
loopne
retf
shl
mov
fild
add
ja
test
xor
cli
(bad)
daa
mov
push
stos
xchg
mov
sti
add
push
ins
pop
retf
pop
cld
lods
mov
hlt
sbb
out
dec
inc
fwait
retf
push
js
stos
hlt
aas
adc
push
mov
mov
push
add
inc
mov
dec
pop
ja
loop
repz
sbb
and
out
add
dec
mov
fwait
mov
mov
mov
adc
pushf
mov
mul
mov
(bad)
shl
jmp
dec
arpl
outs
ds
and
mov
jp
rcr
arpl
and
pop
push
into
movs
push
lock
fidivr
xlat
or
popa
push
cmp
neg
ins
pop
adc
clc
xchg
ss
in
pushf
sub
es
push
jnp
sbb
push
mov
mov
nop
xchg
out
retf
cmc
dec
xor
imul
popa
enter
adc
inc
adc
adc
test
retf
test
jle
loope
js
xchg
sbb
rol
inc
rcr
xor
cmp
(bad)
sahf
cmp
dec
(bad)
(bad)
jo
jecxz
push
pusha
fstp
repz
std
shr
rcl
adc
jmp
lock
sbb
(bad)
pop
push
push
push
sbb
mov
push
dec
movs
push
push
rcr
int3
or
pop
dec
mov
xlat
test
stos
and
sti
pop
cmp
cmp
(bad)
ins
fsubr
cmp
push
inc
and
test
and
dec
(bad)
hlt
mov
outs
inc
sub
cs
(bad)
lds
out
cmp
fxch
loopne
add
xchg
pop
jl
sub
dec
sub
cmps
cmp
hlt
pop
pop
pop
mov
add
push
add
sbb
test
inc
or
add
repnz
xor
movs
icebp
add
mov
push
xchg
scas
mov
retf
xchg
scas
js
adc
dec
pop
adc
leave
cmps
gs
xchg
pop
test
and
shl
or
and
ins
inc
mov
or
aas
add
ret
and
mov
enter
push
pop
xchg
aam
inc
mov
push
and
arpl
bsr
mov
push
adc
test
inc
es
mov
(bad)
les
icebp
into
xchg
loopne
(bad)
int
fstp
push
and
in
push
xor
test
mov
popf
(bad)
out
xlat
xchg
inc
nop
stc
repnz
loopne
push
leave
sub
sbb
jp
push
cld
ret
xor
mov
(bad)
out
idiv
stos
leave
mov
and
mov
mov
jl
(bad)
aad
pop
ret
dec
jbe
fsub
jg
inc
adc
and
inc
(bad)
and
test
push
data16
add
sub
aad
xor
sahf
inc
mov
cdq
add
int
lods
or
jle
jmp
mov
fsub
pushf
repnz
sti
leave
xchg
cli
fdiv
dec
(bad)
mov
dec
std
cmps
mov
xchg
sbb
(bad)
fs
pop
push
test
sbb
out
loopne
add
push
jle
sbb
sub
inc
aad
mov
cmp
push
jne
cld
xchg
dec
sbb
or
cdq
stc
gs
clc
rol
mov
mov
xor
sahf
xchg
push
sub
sbb
inc
jno
push
push
cmp
aaa
hlt
(bad)
out
sub
push
ret
jae
hlt
mov
mov
sbb
jns
stos
shr
and
pop
push
jg
or
sbb
push
mov
mov
pop
add
mov
dec
add
push
push
mov
push
cs
outs
mov
push
or
inc
(bad)
push
ror
ror
pusha
add
test
les
aaa
pop
sub
ret
xor
or
cmc
mov
pop
push
sub
adc
push
push
jne
or
lock
daa
mov
ret
aas
push
and
add
add
push
and
out
clc
adc
cmps
sahf
and
and
sub
mov
mov
pop
pop
repz
and
adc
push
mov
sub
dec
in
cmp
mov
push
stos
jmp
pop
push
shr
fwait
cmp
lds
jle
in
lea
xor
movs
ja
retf
sub
dec
add
cmps
cld
mov
dec
cmps
and
pop
jno
add
test
mov
jp
pop
push
ins
mov
fwait
adc
mov
cmp
inc
out
ret
ins
dec
movs
ins
test
lahf
mov
mov
add
ror
dec
mov
xchg
jns
xchg
add
pop
arpl
sub
sub
sar
mov
xor
hlt
sub
fld
pop
lock
sbb
inc
jmp
mov
jne
cmps
int3
mov
xchg
mov
aad
or
and
mov
mov
add
or
mov
jbe
outs
div
fidivr
ret
push
pop
xor
inc
(bad)
fwait
call
mov
in
movs
ja
or
mov
push
xchg
outs
retf
out
movs
pop
cdq
and
add
inc
bound
and
lods
mov
out
jecxz
cld
(bad)
div
sbb
jns
mov
pop
jmp
jno
mov
and
push
cmp
pop
bnd
add
or
and
arpl
inc
mov
or
ss
dec
jmp
cmp
rol
xor
push
mov
pop
(bad)
sahf
jno
fwait
dec
hlt
push
sub
pop
push
lods
or
pop
bound
stos
sbb
mov
gs
je
ja
mov
aad
jecxz
dec
ret
fisttp
popf
pop
mov
sub
(bad)
ss
repz
jb
inc
xor
mov
daa
or
pushf
in
xor
push
neg
add
sbb
pop
xchg
fcom
lock
pop
sub
mov
int3
mul
jnp
or
inc
repz
jp
rcr
mov
xlat
push
pop
(bad)
(bad)
dec
dec
enter
dec
fwait
loopne
sub
mov
xor
nop
pop
dec
dec
jnp
stc
les
mov
mov
call
xor
dec
cmp
xor
stos
enter
or
jge
retf
(bad)
xchg
xor
xor
push
xchg
jmp
pop
sub
inc
cli
or
cmp
jle
sub
out
jae
mov
fst
in
ja
mov
mov
jmp
fmul
adc
mov
hlt
or
movs
(bad)
cdq
jecxz
paddb
adc
mov
mov
or
inc
push
jno
pop
aad
fist
dec
ins
and
sbb
push
and
xchg
xchg
and
xchg
lods
mov
call
loopne
cld
mov
pusha
xchg
imul
mov
lods
ret
inc
out
ins
stos
in
ins
push
stc
cwde
dec
repz
ss
test
in
(bad)
popf
mov
mov
sub
jg
js
imul
ror
lock
adc
push
push
pop
ins
iret
and
adc
aad
jle
mov
inc
jne
mov
(bad)
cmp
add
popa
movs
lds
retf
sar
dec
xchg
pop
and
jbe
dec
repz
push
out
std
addr16
into
jae
out
xchg
(bad)
jg
(bad)
mov
fdiv
or
inc
adc
loop
sub
outs
add
je
test
nop
jae
arpl
mov
push
pop
mov
jle
sbb
stc
mov
ss
pop
and
sub
test
retf
scas
and
es
iret
jae
shl
imul
pop
cmp
aas
in
and
sahf
scas
fdivr
cmp
stos
and
or
aam
mov
ds
cmp
icebp
xchg
cmp
pusha
jae
inc
das
mov
inc
daa
lahf
jne
push
push
mov
(bad)
sbb
jg
push
ret
inc
jbe
mov
cmps
dec
test
adc
test
inc
jg
and
inc
sub
push
pop
jno
fs
pushf
js
lock
fldenv
lods
dec
mov
lea
pop
(bad)
in
jmp
cld
jmp
sbb
sbb
push
and
sbb
mov
daa
jbe
inc
std
test
inc
pop
cmp
rcr
into
mov
retf
test
and
faddp
hlt
jo
and
add
call
loopne
mov
push
sbb
sar
mov
mov
iret
scas
add
mov
fs
mov
js
push
das
out
pop
push
cli
icebp
xchg
call
jg
jmp
movs
jmp
int3
push
bnd
stos
mov
and
jecxz
mov
xor
jne
ins
sbb
xchg
or
pop
xchg
cmp
scas
jne
mov
fmul
xor
push
push
je
xor
jmp
and
jae
popa
movs
cs
xchg
sbb
cwde
cmp
pop
jae
les
push
push
or
jecxz
and
jo
(bad)
rol
pop
jb
loope
dec
(bad)
dec
scas
(bad)
mov
(bad)
push
fcomi
repz
cld
xor
push
enter
les
ins
std
repnz
push
push
mov
les
pop
popa
xlat
sbb
adc
adc
in
out
xchg
inc
fbstp
or
arpl
adc
jp
add
push
inc
xor
mov
jmp
lods
aaa
retf
mov
call
(bad)
dec
call
mov
add
mov
mov
mov
test
sbb
add
pop
outs
sub
test
jne
mov
in
jecxz
sbb
stc
out
into
outs
and
loope
pop
sub
mov
gs
shl
shl
pusha
xor
les
add
gs
jnp
jmp
movs
fist
into
mov
mov
jle
adc
(bad)
aaa
cmp
cli
aaa
cmp
mul
out
sub
xor
mov
inc
rol
cdq
out
jle
jb
mov
pusha
xchg
jp
pop
lods
(bad)
hlt
xlat
mov
int
push
in
fwait
adc
add
push
mov
int
mov
xchg
pop
mov
dec
dec
pop
pop
xchg
imul
jp
xchg
push
loop
or
outs
dec
loopne
dec
adc
arpl
add
xchg
pop
(bad)
pop
mov
mov
sub
out
mov
jne
sbb
scas
pop
mov
retf
lea
adc
pop
fnstenv
sar
xor
ror
daa
jae
cwde
xor
cmp
mov
in
ins
cli
movs
xchg
adc
lea
xchg
leave
xor
cmc
gs
cmp
ins
retf
fs
mov
int3
fsub
fld
std
pop
je
push
(bad)
rcl
mov
mov
mov
sbb
mov
adc
mov
fimul
lahf
push
xchg
aaa
adc
mov
mov
push
jo
xor
sub
sbb
fdivr
mov
retf
cwde
inc
push
dec
outs
mov
sub
push
cmp
enter
add
and
jns
scas
retf
jecxz
or
push
pop
mov
bound
jl
mov
jmp
push
inc
sub
rol
add
inc
popa
add
jns
push
sub
inc
and
push
lods
and
pop
adc
ss
mov
mov
pop
pop
push
outs
push
mov
sub
loope
jo
push
(bad)
jne
cmp
fs
mov
mov
addr16
in
(bad)
ret
pop
xchg
or
dec
xchg
call
retf
sub
and
inc
sub
mov
je
gs
cmp
stos
push
sahf
sub
pushf
es
mov
pop
sar
sbb
icebp
clc
add
mov
mov
mov
adc
jle
xor
xor
hlt
xor
adc
and
xor
and
rcl
add
lods
loopne
jmp
mov
jae
pop
(bad)
cmp
pop
rol
and
daa
mov
cdq
add
mov
mov
ja
and
jne
call
fdiv
cmps
adc
mov
mov
mov
mov
inc
and
retf
repnz
cmp
push
in
repnz
cmp
dec
mov
push
ins
mov
sub
(bad)
xlat
dec
inc
and
xor
push
or
sahf
mov
cmps
mov
or
cmp
add
mov
xchg
fprem
mov
fisubr
mov
jae
js
add
outs
mov
stc
xchg
push
xor
adc
dec
or
mov
mov
sbb
mov
adc
jecxz
ins
jno
pop
mov
xchg
sub
mov
push
stos
add
ret
push
out
ins
and
sbb
adc
test
std
mov
adc
into
je
mov
inc
ss
sub
call
das
shl
adc
cdq
imul
mov
(bad)
pop
add
inc
mov
cld
sub
push
inc
lea
jne
mov
jbe
cmp
sbb
lods
pop
jne
xchg
movs
loopne
push
je
retf
call
adc
pusha
ret
mov
pop
mov
out
test
xor
cs
inc
pop
lea
push
push
and
push
xor
and
push
inc
dec
push
call
(bad)
cmp
test
pop
and
push
cmps
sbb
dec
inc
adc
mov
jnp
mov
mov
sbb
in
test
xchg
fadd
push
lds
push
inc
movs
ficom
retf
bound
xor
sbb
mov
push
jl
xchg
add
dec
ja
add
mov
cmp
dec
nop
mov
dec
in
call
aam
push
adc
inc
into
(bad)
xchg
fist
sub
jle
mov
ret
push
mov
iret
leave
sbb
cmps
dec
mov
jo
jae
cli
hlt
loop
loope
mov
imul
in
repnz
data16
and
cmp
es
scas
xor
add
(bad)
fnsave
adc
xchg
loop
repnz
int
pop
popa
sub
jnp
(bad)
mov
in
pop
les
xchg
stos
cli
jbe
inc
call
leave
(bad)
cdq
retf
cwde
cmps
aad
fs
ret
popf
inc
cmp
add
int3
mov
or
test
xchg
je
test
loope
in
xchg
push
sub
loopne
mov
push
(bad)
cli
cmps
aam
lods
fistp
mov
outs
adc
or
jge
int3
mov
push
pop
pusha
xchg
mov
push
ss
inc
cmps
imul
pop
adc
scas
add
add
loop
std
dec
mov
(bad)
dec
bound
push
arpl
rcl
xchg
mov
jl
mov
(bad)
mov
xchg
daa
(bad)
fs
or
(bad)
mov
lock
scas
push
lds
push
mov
mov
mov
hlt
pop
push
rcl
or
add
mov
and
jae
int3
push
mov
sti
repz
mov
jbe
lea
jecxz
dec
ins
sbb
mov
or
mov
addr16
outs
mov
fcom
dec
jmp
dec
ds
jmp
dec
int3
das
scas
js
ss
sbb
push
retf
call
nop
mov
or
les
ret
sub
cdq
lods
into
retf
push
mov
mov
ja
jns
js
xchg
add
jne
sbb
sbb
or
inc
adc
rcr
dec
dec
mov
adc
jns
dec
mov
pop
sbb
xchg
nop
enter
cs
sbb
ss
mov
and
mov
add
or
or
ror
adc
mov
push
mov
stc
(bad)
out
scas
lods
leave
pushf
mov
nop
scas
lods
cmp
pop
add
frstor
outs
movs
movs
cmp
hlt
push
aad
xchg
in
cmp
hlt
and
movs
push
imul
add
xchg
and
call
mov
mov
lahf
mov
mov
dec
jb
dec
ins
in
cmp
sbb
lods
push
mov
push
xor
fmul
cmc
jbe
mov
push
dec
mov
push
prefetcht1
out
in
inc
fadd
mul
or
clc
inc
xchg
jns
not
outs
ror
and
(bad)
jbe
xchg
add
imul
sub
xchg
xor
jnp
popa
leave
out
or
lea
mov
pop
jle
inc
out
mov
jb
popf
in
lock
mov
pushaw
or
aam
mov
lds
rol
adc
sub
test
loopne
add
add
test
in
sbb
jae
sbb
pop
cmp
loop
out
enter
pop
mov
cld
call
daa
repz
cmp
pop
sbb
cld
inc
fdivr
hlt
pushf
(bad)
pusha
jmp
sub
sbb
jp
xor
cmps
sahf
fsub
(bad)
pop
add
dec
mov
jge
jmp
test
mov
push
cmps
dec
int
mov
push
xchg
inc
dec
jmp
lods
xchg
sub
xor
mov
aas
xchg
sbb
mov
pushf
push
xchg
es
adc
mov
cmps
add
loope
mov
mov
and
pop
mov
jo
adc
push
cmp
add
outs
loope
pop
adc
loope
cmp
jae
xchg
dec
xor
das
mov
aaa
pop
xlat
test
repz
xor
cmp
pop
daa
ss
push
mov
cli
mul
cld
stos
cmp
sbb
(bad)
sahf
sbb
mov
test
xchg
imul
outs
mov
bswap
hlt
mul
das
dec
mov
imul
imul
pop
or
dec
cmp
pop
clc
push
shl
test
jmp
pop
in
or
mov
mov
lock
rol
xchg
scas
repnz
push
out
inc
cmps
ins
(bad)
iret
cmp
mov
inc
xchg
mov
inc
pusha
mov
stos
mov
inc
stc
sbb
xor
sub
xor
aam
or
(bad)
or
inc
sub
adc
dec
stos
mov
stos
jmp
adc
xor
lock
add
or
fdivr
sbb
rcr
jae
jns
push
out
inc
adc
in
retf
ja
mov
cmp
outs
sti
cli
loope
mov
jecxz
pop
mov
out
inc
scas
nop
xor
in
call
adc
clc
retf
mov
dec
jp
scas
jb
add
mov
mov
fcom
xchg
pop
mov
data16
mov
jae
pusha
mov
faddp
xchg
mov
and
out
or
xchg
jbe
psllq
(bad)
ret
xor
pushf
jbe
pusha
test
fild
dec
stos
icebp
add
neg
xlat
fdiv
popa
lods
mov
sar
cmp
cmp
popa
xchg
cmps
pop
mov
pop
fstp
stc
ret
jae
or
sbb
sbb
(bad)
sar
mov
jae
bound
adc
push
xor
packsswb
test
mov
xor
mov
mov
xor
xchg
or
ins
scas
adc
cmp
sbb
fdivr
or
cmp
push
jae
jmp
mov
js
or
(bad)
scas
sub
(bad)
sbb
and
sbb
sbb
fimul
mov
xchg
pop
jmp
icebp
out
or
idiv
enter
push
out
aam
adc
push
shl
ds
ja
daa
outs
cld
pop
adc
push
imul
mov
push
sbb
jno
sub
(bad)
les
inc
inc
cmps
push
dec
pop
or
adc
inc
pop
stc
in
sar
dec
cmp
dec
dec
nop
cmp
pushf
dec
sbb
dec
adc
and
jne
jg
imul
fistp
fsubr
icebp
shl
pop
nop
rcr
lea
fwait
leave
stos
xor
pop
or
stos
lods
int3
xor
aam
lahf
and
sub
dec
in
and
dec
in
sti
arpl
shl
hlt
pop
mov
ins
inc
icebp
sbb
inc
jae
xor
mov
mov
cld
loop
mov
dec
jo
lods
leave
mov
cmps
xchg
inc
push
inc
dec
or
sub
fisub
and
(bad)
mov
push
out
rcr
mov
mov
cmc
mov
cmc
adc
fwait
add
jno
fdiv
lods
xor
pop
adc
jnp
dec
shl
pop
mov
gs
jo
mov
fdiv
xor
daa
jge
sbb
test
dec
stos
lock
mov
test
cs
mov
call
loope
add
imul
cmps
mov
out
or
rcl
xchg
cli
scas
fistp
and
ret
mov
mov
mov
out
lock
sub
or
loopne
xchg
data16
aad
xchg
mov
adc
cwde
ins
scas
pop
fild
sub
sub
leave
cmp
inc
pop
mov
retf
leave
jmp
xchg
call
stos
cs
xchg
jbe
dec
sbb
or
inc
div
pop
shl
xchg
iret
xchg
sub
jbe
mov
in
pop
aaa
lock
cmp
(bad)
push
jecxz
sti
pop
jae
loop
std
test
mov
mov
rcl
mov
push
popa
mov
cs
shl
in
jecxz
stos
xlat
(bad)
(bad)
pushf
pop
not
pusha
call
arpl
cmp
mov
es
sbb
je
popa
or
dec
xlat
cmp
sbb
xor
repnz
call
call
call
sahf
shr
and
sbb
inc
adc
int
mov
inc
push
push
stos
dec
test
jae
ret
mov
ficomp
movs
sbb
scas
sbb
out
and
inc
push
jb
cs
stc
mov
sti
repnz
leave
pushf
call
out
mov
sbb
dec
outs
jbe
mov
xchg
ins
mov
dec
inc
add
add
and
or
mov
push
mov
ja
mul
jnp
jecxz
jno
fcomi
inc
jno
xchg
out
jae
mov
sub
cmp
xor
sbb
cmp
cli
aaa
mov
sub
push
jae
pusha
movs
sub
ret
cmp
ja
ds
cmp
data16
rcl
fdivp
nop
in
and
inc
mov
dec
push
sub
xchg
jo
icebp
inc
dec
jno
push
shr
int3
cmc
jno
lds
cmc
popf
xchg
fmul
cmp
scas
clc
sti
sub
cmp
std
mov
ins
das
(bad)
add
and
repnz
cld
cs
stc
pop
jecxz
inc
lods
arpl
shr
mov
adc
mov
(bad)
or
js
cmp
cmps
movs
mov
aam
add
push
into
mov
push
or
ror
and
ins
and
test
jl
fmul
fistp
sbb
retf
div
leave
mov
mov
mov
lods
loop
xchg
call
jmp
sbb
jnp
jno
cld
jp
repz
sar
push
fnstcw
ins
xchg
dec
ret
lahf
ret
jnp
ds
push
std
out
test
sar
into
mov
jp
sub
mov
pop
push
sbb
or
pop
dec
in
or
andnps
and
jne
pusha
pop
mov
je
fcom
push
(bad)
mov
inc
fiadd
stos
cs
scas
outs
sbb
icebp
mov
xor
in
stc
sbb
pushf
sub
scas
call
add
mov
xor
pop
aaa
fiadd
dec
fcmovnb
cli
out
out
mov
into
adc
loopne
(bad)
cmp
mov
out
mov
and
sti
shl
fdivr
xchg
sbb
mov
lahf
ins
cmc
test
xor
dec
ja
dec
lods
add
add
cmps
inc
pusha
lds
or
xchg
mov
enter
cmp
push
mov
in
inc
pmaxub
ror
push
mov
sbb
ins
cs
or
mov
sub
daa
cmc
dec
push
mov
push
sar
iret
cmps
(bad)
fwait
push
sub
les
jl
std
hlt
push
ins
push
test
and
nop
std
into
call
retf
sbb
int3
sbb
pusha
addr16
inc
mov
mov
in
sbb
pushf
mov
ja
popf
mov
div
fcomp
cli
adc
pusha
fild
pusha
je
or
clc
stos
dec
dec
into
cmp
dec
out
lds
inc
sar
sub
jnp
or
or
aad
pusha
mov
xchg
jmp
test
mov
push
inc
(bad)
hlt
push
fnsave
out
sub
arpl
jb
dec
push
inc
mov
xor
dec
push
mov
scas
cmp
imul
(bad)
int
mov
movs
ret
cld
xlat
pop
into
adc
or
pop
stc
fbld
mov
ret
inc
jnp
xor
mov
mov
in
js
scas
sar
in
mov
mov
adc
xor
addr16
loope
lods
ins
inc
ret
sbb
mov
cmp
addr16
je
mov
ret
mov
jnp
rcr
add
cmp
dec
sub
test
xor
call
test
xchg
jno
or
jo
sbb
inc
cmp
mov
push
aaa
je
xchg
sub
inc
int3
lahf
mov
test
xchg
loope
out
jg
(bad)
dec
add
sub
mov
jb
ins
cmps
adc
or
in
dec
retf
aas
out
enter
sbb
sub
mov
inc
add
cwde
inc
push
pop
in
push
popf
mov
pop
push
stc
adc
cmc
cs
pop
xlat
dec
mov
test
cmc
add
sbb
sahf
popf
stos
pop
outs
pop
fist
adc
dec
scas
add
mov
out
cmp
mov
jg
push
stos
lods
sub
inc
xor
inc
popf
enter
aad
int3
test
xchg
or
cmp
lods
pop
add
out
lods
mov
add
mov
je
or
sbb
cmp
shl
jle
fisttp
loope
je
sub
into
call
daa
dec
lock
sahf
jnp
hlt
movs
ins
icebp
cmp
xor
loopne
dec
aas
into
shl
mov
jge
arpl
adc
mov
cmovo
sti
aad
out
mov
xchg
xchg
jl
sbb
add
int
dec
sbb
xor
fst
inc
mov
call
mov
sub
je
ror
inc
pop
mov
dec
cmps
dec
mov
jbe
jae
int
mov
inc
dec
jb
mov
push
es
mov
mov
or
mov
or
cdq
adc
jnp
frstor
adc
addr16
or
jns
outs
jecxz
call
addr16
xchg
mov
xor
sahf
fmul
cld
mov
adc
mov
xor
scas
sbb
or
cdq
adc
into
leave
xor
jae
sub
mov
les
pop
dec
push
std
lds
mov
jbe
xchg
cmp
imul
gs
aaa
pop
data16
inc
inc
test
add
add
sbb
inc
xchg
xchg
sbb
jnp
inc
push
or
outs
retf
and
dec
aas
jmp
cmp
xchg
lds
mov
dec
(bad)
xor
pushf
nop
cmp
loopne
les
pop
aaa
and
arpl
add
mov
jle
mov
cld
push
mov
inc
add
sub
jo
repnz
cli
dec
data16
ds
inc
cmps
fnstcw
sahf
fiadd
jle
les
mov
je
pop
mov
repz
je
out
and
test
icebp
and
je
(bad)
cli
loopne
xchg
adc
xchg
bound
push
jl
push
fs
shl
mov
test
gs
(bad)
data16
sub
inc
mov
add
sub
in
xchg
inc
mov
stos
push
mov
pop
cmps
inc
cmp
jnp
cmp
or
(bad)
imul
jo
mov
jno
ret
xchg
push
retf
xor
add
mov
bound
xchg
cmps
cmp
mov
fst
xor
daa
jae
in
jmp
ins
in
dec
les
cmp
xor
(bad)
repnz
jle
push
jle
lods
pushf
and
sbb
in
fwait
push
push
out
push
push
movs
fs
aad
mov
jns
ror
push
pop
ret
dec
rol
cwde
mov
stos
fild
inc
call
jno
daa
sub
add
sub
cld
jnp
push
add
inc
(bad)
add
mov
clc
jns
dec
sub
addr16
cmp
add
mov
sub
(bad)
je
in
dec
sub
sub
cmps
data16
mov
cmp
jg
and
xor
dec
sub
out
aaa
pop
ins
add
jbe
mov
cmp
or
mov
test
cwde
pusha
outs
adc
adc
or
push
sub
mov
dec
xchg
mov
bound
mov
xor
or
mov
xchg
enter
fdiv
dec
cmp
sub
(bad)
xchg
mov
cmp
sar
pop
lea
inc
adc
cmc
aad
xchg
pop
iret
lods
jecxz
fld
sbb
fwait
out
ja
call
inc
ret
es
mov
clc
shl
sub
scas
pop
stos
mov
dec
inc
fs
adc
cli
inc
shl
bound
adc
adc
pop
(bad)
lods
outs
mov
and
in
fyl2xp1
icebp
lds
mov
fwait
sahf
push
ds
cmp
addr16
fisubr
xor
cmp
ss
pop
push
adc
rcl
sub
mov
or
into
or
stos
jecxz
sbb
pop
icebp
xchg
(bad)
fdivp
lods
add
jnp
repz
inc
loop
fwait
in
push
cmps
fsub
sub
jns
sbb
sti
adc
dec
cmps
jmp
cmp
(bad)
mov
outs
xor
mov
scas
cmp
sbb
pop
mov
mov
and
std
std
mov
mov
dec
mov
imul
ret
pop
movs
and
mov
pop
sbb
jmp
mov
aam
jl
sbb
or
push
popa
ss
mov
jae
clc
out
int
sar
scas
(bad)
loop
loopne
inc
lods
mov
pop
cmp
fwait
pop
dec
push
(bad)
or
inc
adc
cmp
xchg
push
in
pop
in
mov
sti
jle
push
sub
and
neg
ror
inc
movaps
push
xor
addr16
xchg
cdq
ins
scas
jo
stc
and
push
cmp
pop
or
mov
fwait
sub
ds
jnp
dec
inc
add
add
jmp
mov
pop
add
popa
adc
push
pop
mov
or
imul
push
jecxz
test
fistp
add
mov
ret
ficom
jg
pop
push
mov
retf
pop
fbld
fsubr
std
(bad)
adc
pop
out
rol
push
add
mov
gs
in
xchg
rcr
mov
dec
ret
pop
jo
retf
imul
or
or
xlat
mov
sar
out
push
dec
dec
std
mov
add
xchg
mov
movs
mov
fsubr
gs
test
lahf
or
aas
arpl
gs
push
xlat
pshufw
outs
out
sub
or
aas
stc
jne
sbb
add
adc
cdq
lea
rcr
jo
scas
sbb
mov
mov
pop
jae
add
sbb
popa
icebp
jl
scas
pop
add
mov
and
adc
test
retf
mov
cli
mov
sub
jmp
jmp
mov
fdiv
rcl
sub
inc
mov
pop
fsub
lds
sub
mov
int
push
ret
test
mov
dec
stos
out
xor
mov
rdmsr
inc
mov
arpl
mov
add
out
cmp
fiadd
fbld
mov
add
into
daa
ins
imul
mov
loope
sub
jno
jb
mov
adc
aas
jnp
dec
mov
test
popa
(bad)
jecxz
adc
pop
inc
(bad)
es
cmc
shl
push
test
popa
repnz
dec
mov
cmp
jno
adc
mov
dec
xor
loopne
jno
jecxz
sbb
shl
or
loop
sbb
or
jnp
sub
test
mov
rol
sub
jecxz
mov
cld
popa
nop
dec
sub
(bad)
cli
or
das
sub
int3
adc
fistp
cmp
sahf
cmp
cmp
or
xchg
out
cmp
jb
je
shr
xchg
mov
mov
(bad)
sbb
push
shl
pop
in
(bad)
pop
and
mov
fldcw
aad
arpl
idiv
xchg
or
lods
push
loop
ja
pop
fs
fmul
mov
ret
pop
push
int3
out
sub
pop
xchg
push
out
jl
cmp
sub
cs
xchg
out
mov
add
and
mov
jp
popf
loope
jnp
test
inc
mov
add
xchg
inc
mov
mov
xchg
mul
mov
jp
push
gs
pushf
mov
or
leave
xrelease
mov
fisttp
mov
inc
mov
xlat
ds
or
pop
xchg
xchg
pop
push
lock
mov
bound
dec
jne
mov
rcr
pop
stc
pop
and
add
dec
sbb
or
aas
mov
lock
pop
jp
jg
data16
push
xchg
inc
mov
jb
ds
xchg
and
pushf
popf
repz
jg
outs
dec
jns
push
cwde
scas
jge
add
int
sbb
clc
test
dec
shl
fstp
imul
sub
shl
movs
dec
inc
lock
xor
inc
inc
or
pop
adc
jg
pop
ret
and
out
icebp
or
mov
daa
pop
mov
(bad)
into
bound
jle
data16
cmp
add
les
mov
push
retfw
xchg
inc
pop
data16
imul
add
les
jle
jno
mov
xchg
popf
xor
addr16
sbb
imul
in
adc
cmp
jmp
ret
test
gs
pusha
icebp
jae
in
mov
shl
mov
lahf
ror
xor
sbb
cmp
adc
mov
popf
scas
mov
movs
mov
inc
lock
icebp
inc
inc
jl
fistp
add
addr16
cmp
pop
push
clc
inc
ret
pop
mov
outs
(bad)
jmp
ret
mov
pop
xor
sub
push
dec
sbb
sub
or
and
mov
add
stos
push
mov
push
xchg
xor
push
push
inc
test
cmp
xchg
neg
sub
nop
ret
ds
cmp
(bad)
out
xor
push
sbb
push
pop
push
test
mov
or
sub
jg
cmps
xchg
in
dec
sub
test
mov
mov
fwait
jp
(bad)
test
fs
xchg
movs
blsfill
lock
into
mov
mov
xchg
into
jg
cwde
dec
lahf
das
cmp
add
add
(bad)
jbe
rcl
stos
lock
dec
test
aam
leave
dec
mov
push
inc
out
pop
jmp
bnd
or
pop
bound
repnz
sbb
callw
dec
stc
cmp
test
stc
xchg
mov
dec
repnz
dec
leave
test
fst
cmp
and
outs
(bad)
and
xor
mov
or
fcomp
shl
sete
loope
scas
mov
adc
pop
mov
mov
xchg
cmp
xor
add
push
ja
push
mov
mov
call
das
add
inc
in
sbb
push
fidivr
sub
sub
sub
adc
pop
xlat
jle
xchg
popf
jmp
inc
gs
and
xor
mov
pop
inc
pop
sbb
jnp
xor
out
sub
mov
pop
mov
outs
jl
fld
cmp
cmp
std
into
mov
xchg
sub
jl
fmulp
jo
fsubrp
xor
xchg
xchg
mov
dec
ss
push
pop
and
nop
sbb
rcl
jnp
cmc
out
push
sbb
xor
hlt
dec
and
mov
cmps
neg
dec
popf
stos
scas
push
retf
adc
dec
xor
in
add
(bad)
mov
test
add
stc
push
pop
sbb
jae
call
arpl
fcom
jnp
test
jne
test
lea
cmps
mov
dec
xor
xchg
cmp
xchg
push
(bad)
int3
bound
aam
mov
mov
dec
mov
pop
push
repz
add
ret
lods
and
ins
mov
push
rcl
seto
cmp
inc
xchg
imul
add
pushf
xchg
rcl
call
xor
inc
movs
xchg
ins
pusha
mov
cmps
add
aaa
add
fidivr
mov
mov
dec
stc
fdiv
add
mov
mov
add
xchg
cmp
enter
sub
sbb
push
sbb
pop
fsub
test
jns
gs
loopne
sbb
aam
and
pop
push
pop
test
ins
mov
sbb
adc
imul
xor
fisub
adc
dec
jecxz
jo
inc
mov
test
add
pop
fadd
dec
cli
pop
ds
and
cdq
aad
neg
fbld
xchg
sbb
jbe
and
push
mov
or
mov
enter
addr16
adc
push
pusha
jo
(bad)
push
dec
cs
test
cmp
xchg
int
pop
aad
and
push
and
repnz
mov
shl
and
xchg
add
fcomp
jp
jne
cwde
jp
dec
or
fdiv
cmp
repz
add
pusha
daa
push
adc
mov
cmps
xchg
(bad)
gs
ins
mov
pusha
mov
jl
test
gs
mov
rcl
mov
mov
fsub
sub
or
sti
loop
and
mov
sar
jne
xchg
pushf
sub
aam
enter
mov
popf
lea
sub
lds
call
push
mov
cld
cmp
retf
(bad)
lods
mov
jmp
cmp
inc
icebp
pop
das
dec
loope
pop
test
jle
xor
pop
add
js
aam
outs
xlat
pop
loopne
sti
ret
push
dec
push
dec
push
cs
cli
lea
loope
add
js
sub
and
nop
test
in
fdiv
pop
int3
push
cmp
retf
sar
xor
jg
pushf
fnstsw
test
hlt
es
es
xchg
pusha
scas
in
daa
pop
sahf
push
mov
mov
or
mov
pop
add
and
scas
aaa
xchg
mov
adc
xchg
cmp
nop
out
jo
out
push
fcom
lea
push
rcl
imul
fs
std
jl
repnz
loopne
inc
sbb
mov
pop
(bad)
and
daa
and
addr16
cwde
popa
ds
mov
cmps
jmp
or
neg
and
add
push
xchg
imul
test
or
fld
hlt
js
push
adc
test
push
xchg
dec
xchg
dec
rol
pop
fsubr
fdivr
cwde
ins
dec
mov
xlat
cwde
(bad)
adc
push
out
mov
inc
jns
mov
mov
mov
push
hlt
in
jb
leave
aad
jo
cdq
sahf
mov
mov
test
xchg
outs
adc
mov
sub
sahf
cmp
add
xchg
inc
mov
fmul
jae
and
cli
adc
add
sbb
sbb
push
or
lock
jmp
pop
clc
cli
outs
adc
pop
sub
mov
inc
sbb
pop
pmaxub
ins
pop
cld
cmp
les
fcmovbe
cwde
pop
bound
mov
(bad)
cmp
xor
jecxz
pop
pop
mov
jle
inc
call
lods
repz
(bad)
dec
mov
adc
cmps
jge
int
xor
pop
jae
imul
ins
scas
mov
or
sbb
les
dec
or
imul
(bad)
mov
xor
icebp
es
mov
ss
inc
xor
dec
push
(bad)
fbstp
mov
mov
inc
cmp
les
push
fild
popa
xchg
and
mov
xchg
sub
and
inc
dec
cmps
and
loop
stos
hlt
icebp
inc
xor
icebp
mov
sbb
add
mov
cmp
shl
add
xor
cli
std
cmp
jns
mov
inc
pop
and
mov
scas
cmp
les
retf
or
or
and
sar
pop
mov
test
(bad)
cmp
and
mov
mov
ficom
retf
xor
retf
fs
out
ins
adc
push
jge
mov
ins
adc
lea
gs
and
jbe
cmp
jmp
or
xchg
pop
sub
ficom
jb
pop
or
xchg
push
inc
push
call
xchg
retf
mov
adc
fild
lock
rcr
sub
sub
pop
stos
inc
dec
les
inc
pushf
aam
out
loope
(bad)
sbb
jp
jo
je
sbb
fs
mov
or
lea
lahf
inc
dec
cmp
mov
push
fisttp
lahf
push
inc
mov
jnp
add
nop
fstp
hlt
outs
fcomp
mov
cmp
sub
int
ret
pop
pop
jge
cdq
or
push
retf
sub
push
mov
inc
adc
adc
cmp
mov
mov
leave
(bad)
cs
aaa
enter
jns
xchg
lds
mov
cdq
jmp
stos
cmps
aaa
(bad)
mov
sbb
xchg
xchg
mov
in
mov
sub
movs
repnz
add
sub
bound
inc
jl
movs
inc
jecxz
nop
jnp
nop
jbe
or
shr
(bad)
and
sub
mov
pop
cmp
dec
ins
loope
mul
fsubr
cmp
(bad)
push
ins
mov
xchg
jp
ja
inc
pop
fs
sub
jl
push
add
(bad)
loopne
imul
shr
call
cmc
mov
loopne
mov
pop
pop
jne
movs
mov
jmp
mov
push
ret
out
das
(bad)
cmps
sbb
mov
mov
inc
xor
inc
cmp
jl
sti
scas
stos
push
mov
adc
daa
(bad)
mov
cmp
jecxz
and
push
jbe
push
aas
push
pop
into
pop
fidivr
pop
je
bound
mov
mov
cs
inc
cld
aam
cld
inc
and
mov
adc
out
scas
and
xchg
jb
or
lea
(bad)
rcr
cmp
lods
sub
pop
ficom
sahf
arpl
push
retf
scas
aas
cld
mov
jmp
clc
ror
and
sar
cmp
mov
xchg
xchg
inc
daa
xchg
fwait
mov
or
movs
fild
(bad)
sbb
lods
popf
jle
inc
fstp
(bad)
pushf
pop
or
inc
sar
pop
loope
movs
jl
ret
push
push
sub
mov
jp
fidiv
inc
mov
jmp
aaa
xchg
or
push
sbb
fcmovnu
loop
sbb
jmp
mov
add
mov
inc
daa
outs
sbb
pop
test
lea
adc
xor
jo
rol
ret
repz
inc
mov
pop
dec
aaa
and
add
sbb
push
nop
jge
sbb
mov
adc
cmps
fild
inc
je
shl
dec
daa
sbb
mov
adc
fucomp
push
sbb
inc
lds
fxch
shl
jbe
xor
push
aas
mov
add
cmp
mov
sbb
aad
sub
mov
inc
sub
aam
xchg
cdq
add
add
mov
stos
fbstp
bound
and
loopne
shl
and
in
xchg
stc
jecxz
imul
hlt
pushw
dec
add
mov
jb
test
fcomp
out
mov
(bad)
cld
xor
(bad)
int
movs
pushf
test
in
aam
jp
cli
jmp
jle
sti
add
aad
mov
push
popf
sub
fcomp
fmul
icebp
mov
dec
mov
mov
gs
lods
push
or
inc
sbb
mov
push
ins
xlat
fimul
add
push
cwde
and
(bad)
aad
sbb
inc
call
jne
mov
push
aas
mov
inc
ror
fsubr
fs
les
jmp
fsubr
data16
jbe
jecxz
xchg
es
push
aas
dec
(bad)
mov
mov
mov
cmps
sub
jb
shl
or
mov
rcr
dec
cmp
ret
(bad)
xor
lock
fs
cmps
addr16
mov
cdq
nop
jp
loop
ja
adc
or
pop
xor
pop
pop
xchg
dec
push
or
lods
js
(bad)
mov
cmps
mov
cmps
mov
xchg
push
inc
mov
xor
push
(bad)
aas
mov
enter
adc
int3
(bad)
bound
jg
cmc
ja
jnp
mov
push
cmps
ss
mov
dec
pop
xlat
fdivr
jecxz
pop
xor
in
sub
fistp
and
test
mov
mov
mov
inc
add
stos
pop
jae
test
push
adc
mov
stc
lahf
out
xchg
push
adc
mov
inc
mov
fdiv
jecxz
cmp
jo
pop
push
sub
icebp
test
or
fwait
inc
lahf
xor
mov
add
add
test
jg
int
or
jecxz
pop
movs
ret
jle
pop
xchg
inc
hlt
dec
hlt
(bad)
mov
xlat
xchg
scas
(bad)
cdq
cdq
inc
jo
push
mov
xchg
pop
push
ss
add
adc
mov
cmp
xchg
cmps
xchg
icebp
xchg
lods
sub
xor
mov
gs
xchg
and
ins
pop
push
jp
sub
cmp
cwde
jb
lods
mov
pop
pop
fild
sahf
push
je
cmp
cmp
push
in
push
addr16
int3
xchg
jbe
mov
pop
sti
mov
push
mov
rcl
sub
jae
dec
std
push
cmp
cmc
fbld
movs
addr16
not
div
repz
sub
or
stc
mov
test
cmp
sbb
ret
ds
stc
addr16
(bad)
mov
lock
(bad)
push
fxch
test
lea
and
mov
aam
mov
inc
rcr
pcmpgtd
mov
pop
or
xchg
in
pushf
sub
push
sbb
dec
push
into
shl
int
scas
fdivr
inc
fpatan
pop
pusha
cmp
sahf
iret
sbb
retf
mov
cli
mov
(bad)
retf
nop
cmp
stos
cmp
pop
repz
repz
push
into
dec
add
rcr
in
popf
stc
sub
sar
dec
jae
das
jle
popa
sbb
nop
imul
jecxz
or
retf
stos
out
repnz
repnz
popa
dec
mov
push
rcl
movs
popfw
fwait
push
stc
mov
pusha
cwde
pop
dec
push
jg
add
add
mov
std
xchg
movs
cmp
cwde
cli
in
sub
fs
(bad)
imul
mov
sti
out
mov
xchg
or
mov
push
(bad)
mov
sbb
scas
adc
dec
(bad)
adc
movs
shl
out
jae
add
outs
fwait
js
call
cs
mov
mov
ins
cmp
ds
push
(bad)
sub
push
lock
loope
sub
call
dec
jmp
test
adc
lods
out
and
inc
outs
dec
test
js
mov
das
cmc
sub
pop
loopne
jecxz
es
retf
xchg
in
scas
adc
fcmovne
das
cwde
pop
mov
cwde
jne
mov
inc
jg
pop
fdiv
sub
icebp
jmp
aad
xchg
out
add
mov
mov
test
jb
pop
mov
inc
push
rcr
movs
aas
jmp
pop
jmp
jecxz
push
clc
push
mov
mov
sahf
lods
outs
xlat
ja
jb
cli
mov
mov
mov
jns
sbb
and
stos
sbb
(bad)
xchg
in
jp
sub
mov
lahf
rol
popf
outs
es
cli
stos
aad
sub
push
mov
sbb
out
pop
data16
inc
movs
mov
mov
stos
loop
loopne
sub
repz
jnp
inc
push
imul
push
into
mov
cmp
les
pop
das
or
(bad)
sar
adc
jb
sub
push
pop
cmp
fucomp
push
call
adc
fst
aas
jecxz
pop
das
cs
pop
ret
adc
jo
mov
add
shr
dec
ss
mov
add
fsubr
mov
cmp
icebp
mov
mov
daa
mov
and
arpl
imul
or
imul
xchg
sar
dec
shr
sahf
and
jmp
mov
sbb
mov
(bad)
cld
xchg
out
inc
mov
movs
adc
push
pop
mov
cmps
pusha
rol
jmp
jg
and
mov
jmp
into
or
arpl
(bad)
xchg
hlt
movs
in
in
int3
xchg
adc
jns
push
je
test
xor
dec
lods
outs
sub
fcmovnu
dec
and
aad
ja
mov
mov
push
cdq
test
cmp
movs
add
cmp
jne
mov
fsubr
xchg
mov
shl
or
loope
cmp
xchg
sbb
mov
ja
adc
mov
add
les
lock
stc
jno
imul
loopne
dec
cld
stos
jmp
add
jbe
jne
mov
bound
push
repz
dec
mov
adc
scas
and
sbb
xchg
adc
out
sub
cwde
mul
scas
mov
lods
push
mov
push
add
sbb
jb
cmp
fnstcw
mov
xchg
push
out
mov
mov
mov
adc
inc
dec
cld
dec
xchg
adc
aas
fiadd
sbb
outs
repz
mov
cmp
std
or
sbb
mov
pop
les
and
adc
pop
mov
or
repnz
push
loope
fnstcw
xchg
test
adc
test
out
(bad)
pop
clc
pop
sbb
ss
add
sbb
cld
pop
xchg
rol
inc
pop
jmp
fs
(bad)
jge
mov
adc
xchg
in
pop
loop
mov
mov
jg
repz
push
adc
ins
push
xchg
push
and
aam
jle
sbb
leave
push
mov
repnz
loope
aaa
enter
leave
jp
jl
fst
dec
xchg
call
dec
dec
cmp
imul
push
inc
xor
ds
outs
xor
or
sub
and
jo
xchg
pop
paddusb
mov
or
neg
jae
lods
dec
mov
xchg
mov
fmul
add
xor
cli
jecxz
jge
xchg
out
imul
out
call
or
pop
push
xchg
ins
sar
cmp
test
inc
pop
mov
into
dec
popf
mov
or
(bad)
idiv
jge
sub
dec
pop
adc
pop
push
ins
jp
inc
xor
rol
shr
inc
in
leave
or
sahf
mov
xchg
clc
(bad)
lock
jmp
popf
idiv
cli
mov
and
fcmovbe
pusha
stos
mov
jmp
imul
je
add
dec
mov
xchg
mov
push
or
xor
and
cmps
call
loopne
dec
xor
scas
cwde
aad
jb
ds
add
cdq
xchg
xor
mov
mov
ins
cmps
push
sbb
shl
std
enter
pushf
or
aaa
cmps
into
aas
sahf
(bad)
retf
and
pop
add
dec
jns
mov
sbb
(bad)
in
je
mov
adc
movs
(bad)
xchg
das
pop
outs
mov
pop
inc
push
mov
(bad)
out
push
ficom
imul
cmp
inc
fisttp
into
jno
(bad)
jnp
mov
xchg
scas
inc
ins
push
cmp
push
mov
mov
fs
cmp
xchg
pop
dec
or
sub
int3
(bad)
jns
jecxz
mov
ficom
fcomp
mov
ret
movs
fsub
loopne
repnz
pusha
fwait
pop
cs
ja
pop
mov
lds
(bad)
shr
aas
inc
movs
stos
dec
movs
add
loop
jg
sbb
jno
daa
jnp
pop
add
popf
aam
cwde
push
bound
adc
push
fadd
bound
add
mov
ss
inc
ins
in
(bad)
shr
ins
adc
push
out
cmc
cdq
inc
mov
mov
dec
jb
ins
jecxz
(bad)
push
aaa
sbb
pop
pop
push
fwait
repz
mov
aaa
aad
inc
bound
clc
call
or
or
sbb
shl
cmp
stos
sub
adc
inc
dec
retf
push
sti
popf
xor
adc
push
mov
adc
and
sbb
xchg
lahf
out
jmp
in
inc
clc
sub
ja
addr16
cdq
test
mov
es
and
stos
sub
push
shl
add
adc
and
jnp
sbb
lods
test
leave
xchg
push
inc
into
mov
pop
out
push
pop
xchg
ror
ror
mov
inc
xchg
fcom
add
scas
xchg
gs
adc
lock
daa
adc
adc
aas
stos
mov
stos
je
jb
ss
in
sbb
ja
fsub
dec
popa
and
add
cmp
or
mov
jbe
fnsave
mov
ins
aas
xor
mov
cmc
fs
pop
mov
sbb
arpl
aaa
lock
fmul
xor
and
push
fdivr
shl
jo
pop
ins
es
sub
lods
fist
cmp
adc
push
sub
aaa
pop
out
ins
push
jo
sbb
(bad)
cli
fsubr
push
jo
retf
lods
cli
sbb
(bad)
or
cmp
pushf
imul
cmp
daa
sbb
(bad)
and
or
lods
std
(bad)
in
and
xchg
not
shl
jo
jmp
mov
enter
jg
cmp
add
jo
xchg
xchg
lods
and
push
push
cld
sub
cmp
fsubr
cmps
mov
not
and
mov
(bad)
sbb
rol
sub
fs
mov
pop
or
dec
pop
mov
mov
dec
sbb
shl
sub
ins
inc
dec
xor
aad
and
dec
mov
clc
call
push
and
jmp
add
call
push
retf
pop
in
jmp
cmp
movs
push
sub
pop
jo
loopne
lahf
and
inc
ret
xchg
jb
nop
cmp
inc
cmp
ret
and
fidivr
sar
jbe
retf
test
cmp
cmc
fstp
xchg
dec
push
adc
pushf
mov
retf
pop
iret
dec
lea
or
jl
ins
fwait
add
fisttp
inc
adc
sub
mov
aas
movs
dec
ins
sbb
into
push
or
xchg
popa
fwait
imul
cmc
mov
leave
xchg
stos
mov
iret
xor
xor
out
xor
jp
imul
and
scas
push
test
sub
gs
push
mov
loope
sub
aam
jmp
mov
pop
nop
add
fcmovnbe
gs
push
dec
jle
mov
mov
sub
xchg
mov
ss
jp
cmp
(bad)
gs
mov
xor
(bad)
sub
adc
scas
fsub
retf
push
lds
push
cmps
sbb
or
and
mov
loop
repz
mov
cmp
xchg
pop
pop
sar
mov
pop
lds
aad
test
mov
adc
jae
inc
cmps
js
mov
ss
(bad)
retf
dec
push
movs
sbb
dec
loopne
sub
imul
dec
fst
mov
jmp
fwait
enter
leave
ror
xor
xor
sub
xchg
dec
imul
test
pop
sbb
aam
mov
arpl
ins
loopne
jecxz
aas
xchg
fimul
cmps
xor
cmps
into
mov
sti
(bad)
pop
icebp
lds
add
add
jnp
sub
pop
cmp
ret
movs
out
jns
cmp
popa
and
push
add
jmp
pop
aad
imul
push
pop
aam
ret
pop
fild
dec
sbb
mov
and
cmovge
in
and
ffree
test
mov
rcl
cdq
or
ret
sbb
pop
sbb
jmp
adc
pushf
cmps
inc
dec
ins
sub
pop
repnz
sub
xlat
je
ja
loopne
push
out
inc
push
sbb
add
add
jne
lods
push
xchg
fisttp
xchg
mov
jmp
call
frstor
bound
ds
xchg
xor
stos
mov
shl
repnz
pop
sbb
or
and
and
xchg
mov
sub
add
loope
pushf
add
cmps
sub
test
xchg
ins
das
jne
out
sti
pushf
adc
stos
jb
(bad)
loopne
mov
push
daa
push
push
arpl
fsubr
iret
cmp
mov
into
ins
(bad)
pop
pop
repz
pop
jle
popa
add
int
pop
loopne
clc
popf
dec
jne
pop
shl
outs
mov
adc
push
sub
dec
cmp
mov
test
sbb
sub
loope
mov
mov
xchg
mov
xlat
sub
add
ret
ds
in
push
icebp
or
rcr
jno
inc
(bad)
daa
adc
sbb
loopne
ss
pop
push
out
test
ror
stos
push
shr
push
mov
or
outs
and
push
sbb
loop
pop
fisub
je
xchg
jmp
jmp
xor
mov
and
shr
or
call
jmp
pop
(bad)
jp
mov
pop
ins
cdq
adc
mov
xchg
pop
ss
lods
(bad)
es
mov
out
mov
aas
in
sub
push
js
push
xor
(bad)
(bad)
xchg
loop
dec
in
fsub
fwait
shr
int
(bad)
fst
les
rcl
and
pushf
jae
and
xor
ret
inc
push
and
mov
jge
jb
dec
rcl
fsubr
and
hlt
sub
push
jb
loope
sub
xchg
leave
mov
lock
leave
ins
test
outs
inc
pop
add
lea
hlt
mov
shl
jmp
nop
cmp
xor
inc
cs
and
fcomp
dec
xor
test
sub
xchg
cmps
rcr
bound
mov
push
mov
and
push
xor
jno
push
sub
shl
cmp
sbb
push
inc
call
cmp
test
bnd
inc
imul
popa
sbb
iret
dec
pop
popf
adc
mov
sbb
scas
mov
jae
les
jmp
jns
gs
mov
mov
push
scas
push
xchg
repz
sbb
(bad)
jno
adc
adc
into
int
scas
pop
xlat
jmp
in
scas
std
clc
fnstsw
scas
xor
or
icebp
mov
cld
add
outs
dec
inc
jmp
sbb
out
cmps
mov
in
dec
push
frstor
out
sub
mov
or
sub
imul
shr
scas
fdiv
les
shl
cmp
xor
fwait
or
add
aas
fucom
cmp
and
pop
mov
movs
mov
cmp
sub
(bad)
movs
pop
fimul
pop
cmp
push
cdq
jne
or
xchg
fwait
xor
mov
popf
pop
cli
popa
or
dec
fstp
ds
cmp
jno
xchg
jmp
or
adc
push
inc
push
jbe
pop
push
or
stos
pop
sbb
(bad)
outs
add
mov
sti
xchg
mov
call
and
push
icebp
adc
cmp
out
(bad)
fsubr
mov
xchg
and
test
aaa
clc
sbb
stc
in
popf
inc
ss
movs
cmps
xchg
xchg
mov
cdq
add
out
mov
or
aas
push
push
mov
aam
cli
data16
jno
test
sbb
cli
bound
cmp
adc
jnp
add
cmp
adc
es
mov
ds
jne
dec
sbb
(bad)
pop
pushf
mov
jo
pop
cmc
mov
adc
pop
cmps
sbb
in
dec
mov
loop
xor
jns
mov
in
ins
xor
loop
in
xchg
add
arpl
nop
cmp
(bad)
lds
mov
push
ror
sub
sub
(bad)
cdq
je
xlat
daa
xchg
push
ret
and
and
xor
nop
das
pop
inc
or
mov
or
cmp
adc
push
pusha
sti
mov
stc
adc
mov
adc
push
inc
mov
sbb
imul
adc
and
int
push
ins
adc
add
stos
sbb
movs
mov
push
fwait
dec
xchg
jl
jnp
nop
retf
retf
(bad)
bnd
push
jge
cmp
xlat
or
mov
adc
pop
rcr
call
retf
push
pop
fldcw
cli
in
add
mov
xchg
fwait
sbb
dec
repnz
ins
pop
jnp
loope
retf
repnz
cmp
cmps
xor
cmp
mov
into
ret
xchg
pmullw
and
push
out
push
test
push
(bad)
cwde
loope
out
mov
cdq
icebp
aad
stos
inc
jnp
xchg
or
or
fucomp
jno
inc
ret
xlat
js
ret
xor
mov
rcr
and
mov
loope
xor
jb
dec
push
in
cdq
sub
loope
fmul
mov
inc
sub
jbe
jmp
div
xchg
xchg
add
xchg
mov
retf
out
outs
cli
fistp
cdq
inc
shl
sbb
mov
call
in
xchg
adc
sbb
xor
loop
fidivr
call
cld
adc
sbb
adc
aas
lods
sbb
int
and
sub
cmp
jne
xor
sbb
jp
xchg
dec
dec
fild
or
xlat
or
outs
fsubp
imul
loop
outs
cmp
mov
xchg
mov
pop
ins
push
mov
push
aas
mov
into
mov
dec
xlat
and
in
pusha
mov
cld
xor
clc
js
dec
sub
mov
and
scas
scas
or
retf
inc
sub
dec
adc
push
and
push
ins
mov
mov
movs
nop
outs
cmp
jp
ss
push
call
mov
push
jmp
in
push
push
lds
(bad)
retf
aas
fs
fsub
iret
sbb
push
icebp
jp
pop
push
inc
and
clc
out
adc
mov
dec
mov
les
rcl
arpl
push
cld
ins
test
mov
push
cs
jno
movs
mov
test
clc
mov
jge
or
(bad)
pop
lahf
call
mov
sbb
sbb
call
xchg
or
lock
xchg
jb
xor
jecxz
(bad)
jl
inc
mov
xchg
adc
push
pop
addr16
xor
div
mov
lock
pop
std
or
ds
es
xchg
or
fdiv
(bad)
push
call
pop
outs
test
test
mov
jmp
test
arpl
pop
push
pop
and
cmc
xor
leave
jp
pop
add
xchg
outs
jb
cmc
(bad)
dec
push
pop
lods
pop
movs
stos
inc
mov
inc
cs
arpl
xor
fstp
jp
xchg
lock
add
ss
scas
or
cld
(bad)
int3
dec
xchg
push
fstp
cmp
shl
scas
xchg
in
sahf
pop
pop
inc
pop
sti
popa
push
fcmovb
in
cwde
xor
outs
and
xchg
mov
movzx
les
scas
pop
mov
mov
or
jno
lods
pop
mov
in
mov
fst
push
xchg
push
adc
push
push
in
jecxz
sar
cmps
pusha
mov
push
movs
and
sub
cmps
adc
js
dec
xchg
aas
pop
sub
pop
movs
mov
push
icebp
pushf
xor
add
xor
(bad)
retf
hlt
shl
ins
lahf
retf
dec
(bad)
fidiv
aas
in
add
cmc
mov
cld
repnz
sub
dec
sub
sbb
retf
xchg
pusha
pop
call
and
pop
in
inc
cwde
sbb
cmp
push
push
sbb
mov
sub
fstp
or
(bad)
repz
dec
push
or
cmps
mov
sbb
mov
ja
fwait
stc
push
fisubr
sub
jne
mov
int
ins
xchg
cmp
inc
cdq
dec
pop
mov
mov
hlt
push
push
or
aad
jle
cmp
cmp
mov
push
pop
pop
inc
jbe
add
int
mov
mov
cmp
out
ret
jmp
fcom
pop
outs
adc
mov
rol
repz
inc
stc
pop
rol
jmp
and
sub
les
dec
fcmove
sti
pop
mov
shl
adc
(bad)
adc
jmp
pop
inc
arpl
iret
xor
jo
sub
xchg
mov
add
movs
ror
jle
cmp
(bad)
loop
aaa
push
push
mov
jge
xchg
fs
addr16
xchg
cmps
pop
out
inc
outs
dec
loop
push
xchg
pop
inc
pushf
ret
loope
sbb
cmp
sub
xchg
sar
inc
sub
sete
sbb
cmp
jnp
aad
sbb
leave
mov
inc
leave
xchg
cwde
push
daa
pop
mov
test
cmps
pop
and
mov
fist
add
push
retf
or
ja
mov
stc
fisttp
test
out
jl
iret
mov
sbb
lock
sbb
add
push
out
je
jge
sbb
in
and
ins
leave
adc
adc
pop
dec
dec
mov
aam
jle
push
outs
dec
imul
cdq
test
cmps
setp
neg
dec
iret
scas
push
sbb
cmp
push
shl
mov
adc
movs
sbb
sub
outs
pushf
sub
lea
test
mov
pop
mov
vpunpcklwd
and
mov
shl
sub
dec
sti
push
cmp
ror
retf
test
clc
add
sbb
pop
adc
es
repnz
push
dec
and
mov
pop
xchg
or
adc
xor
out
imul
aam
xchg
and
push
sbb
mov
into
adc
fst
fnstenv
mov
cdq
leave
push
iret
rcr
fcmovnu
sbb
ret
fmul
mov
jbe
xchg
xor
or
in
ret
mov
loopne
xor
jno
imul
xchg
es
and
ffree
dec
xor
adc
sub
ficomp
adc
popf
push
adc
scas
mov
aas
push
out
cmp
in
stos
push
push
mov
mov
adc
mov
iret
stc
mov
pop
and
dec
mov
js
mov
std
hlt
push
dec
xchg
push
cmp
cdq
add
imul
push
data16
fisubr
loope
int3
enter
xchg
add
retf
mov
sbb
inc
jo
ror
add
rol
xor
test
sub
mov
gs
cmp
aad
in
iret
adc
add
cmc
and
push
push
int
sub
call
inc
loopne
pop
sbb
inc
imul
and
or
push
pushf
outs
popf
cmp
shr
push
mov
fs
inc
inc
cmp
pop
sub
scas
push
sbb
jmp
out
and
sbb
adc
or
jo
pop
dec
inc
sti
int3
clc
int
jg
call
and
sar
push
pop
inc
push
sbb
dec
pop
call
push
cwde
sbb
ja
iret
stos
mov
sbb
push
jmp
(bad)
fidivr
popa
xor
sar
xor
mov
cmps
jmp
dec
fadd
and
mov
out
clc
pop
fcomp
mov
adc
pop
test
aaa
push
inc
push
into
ficom
mov
inc
es
mov
ins
iret
scas
pop
adc
cmp
lock
mov
scas
mov
test
jae
jge
mov
cmp
inc
mov
fcmovu
data16
fidivr
sbb
test
dec
fldenv
push
cmp
and
mov
dec
mov
xchg
fimul
mov
dec
fcom
sub
xor
lock
xchg
pop
fmul
or
aad
popa
add
xor
add
dec
pop
js
mov
xor
(bad)
dec
dec
int
push
sub
jecxz
mov
sbb
push
cmc
arpl
inc
sbb
dec
fcomp
pop
adc
mov
aaa
push
mov
xor
(bad)
in
sbb
in
lock
aas
ins
in
push
mov
or
scas
inc
ret
pop
test
imul
outs
jne
and
and
add
leave
pop
add
inc
icebp
in
push
add
in
cmp
pop
jne
repnz
pop
hlt
test
nop
xor
push
add
mov
std
bound
fild
pop
ror
mov
das
inc
mov
jecxz
sahf
push
retf
push
xor
(bad)
mov
jl
pop
mov
or
xor
jmp
fsubr
or
xor
mov
lods
(bad)
mov
sbb
loop
mov
jmp
push
xchg
mov
sub
dec
mov
gs
fsubr
in
mov
mov
movs
daa
les
mov
lods
dec
frstor
popf
outs
sbb
jmp
mov
or
(bad)
pushf
leave
cmps
int
xchg
xchg
dec
xchg
jnp
jp
cwde
pop
push
cli
mov
cmp
mov
ins
loop
jnp
dec
sbb
push
mov
pop
lahf
jp
or
aad
mov
add
shl
stos
sub
pop
jge
fs
stos
ss
scas
push
(bad)
out
mov
das
pop
pusha
inc
xchg
and
scas
or
aaa
stos
enter
and
aam
js
sti
test
xchg
loopne
retf
dec
jnp
fwait
ret
jbe
mov
into
pop
mov
xlat
dec
call
push
and
jb
das
add
(bad)
ss
in
xor
call
dec
imul
mov
stc
repnz
outs
retf
mov
or
sbb
pusha
js
mov
xor
in
mov
pop
outs
mov
imul
ins
in
fwait
lds
add
int
or
sbb
add
out
and
in
(bad)
dec
into
loopne
pop
mov
mov
pusha
pop
dec
inc
lahf
pop
and
dec
or
outs
sub
nop
scas
scas
imul
imul
xchg
movs
(bad)
jge
cwde
mov
out
dec
push
arpl
repnz
mov
aas
or
retf
ret
inc
xchg
jbe
cmps
or
in
mov
inc
cmps
movs
not
push
push
(bad)
cmp
jl
push
shl
fdivr
shr
out
popa
inc
mov
xor
in
mov
mov
loopne
popa
jle
jb
loope
push
and
mov
pop
pop
mov
dec
nop
pop
cli
sub
js
xchg
loop
cmps
loop
sub
bound
xchg
je
retf
add
mov
iret
cmc
jmp
fild
jnp
movs
jo
dec
mov
jns
ret
jecxz
adc
inc
inc
loop
sub
mov
enter
cmp
out
fstp
(bad)
xor
push
and
and
cmp
loopne
sub
mov
js
inc
pop
(bad)
cmp
ret
sbb
bound
xor
cmps
push
ins
push
movs
xor
add
in
ss
pop
hlt
loop
dec
xchg
pop
and
sbb
call
inc
or
sub
scas
nop
jae
pop
hlt
sub
test
int3
aam
sbb
push
fist
adc
out
or
(bad)
mov
bound
pop
fstp
push
repz
dec
or
mov
cld
ins
in
rol
xchg
push
jne
mov
mov
pushfw
mov
sahf
pop
not
std
test
mov
(bad)
jmp
or
stos
xor
mov
inc
and
js
pop
jge
inc
mov
jp
jecxz
jae
sub
stc
inc
adc
mov
sar
dec
dec
xlat
shl
jge
ja
jae
mov
cs
fld
bound
sbb
fisttp
ror
out
stc
loop
dec
(bad)
jns
xchg
test
pop
neg
mov
mov
mov
jae
test
xchg
das
mov
adc
pop
pop
movs
inc
mov
jne
jbe
sub
std
addr16
push
das
gs
jno
out
adc
mov
sub
and
dec
cdq
test
jl
ins
xor
jbe
in
iret
push
mov
ret
mov
pop
push
jnp
mov
dec
scas
sub
adc
test
stos
popf
add
adc
jo
dec
mov
fwait
and
ds
(bad)
daa
pusha
sbb
cmps
popf
mov
cld
test
mov
add
jmp
fwait
adc
mov
int3
cmova
fild
inc
sar
push
push
inc
mov
cmp
scas
ret
sbb
outs
test
cmc
push
adc
mov
icebp
xor
cld
push
jge
jp
and
xchg
jo
scas
or
xor
popf
and
fcom
in
inc
icebp
xchg
ret
and
push
pushf
and
loopne
mov
std
daa
or
sbb
mov
mov
sub
dec
fwait
mov
(bad)
cmp
sahf
cld
rol
push
jne
or
mov
aaa
cmc
arpl
push
adc
inc
je
cld
ds
jnp
mov
call
adc
mov
fs
push
sar
push
mov
lods
rol
mov
test
movs
je
sbb
stos
scas
js
xchg
xor
aas
inc
push
pop
push
add
push
pop
fsub
inc
sbb
push
or
gs
cli
push
aad
dec
cli
les
je
shr
(bad)
clc
add
and
or
push
les
pop
adc
cld
popf
scas
ret
pop
dec
or
sub
pop
and
push
or
push
fst
mov
sbb
xlat
xor
call
call
lds
pusha
fsub
jl
pop
and
fsubr
inc
xor
sub
and
and
sbb
or
std
out
mov
daa
push
mov
dec
jns
dec
ins
or
int
mov
add
xor
shl
cmp
lods
mov
outs
addr16
sbb
popf
sub
retf
jp
pop
jae
enter
dec
out
sub
das
int3
inc
jl
mov
jno
push
and
jbe
call
stos
in
mov
mov
inc
popf
inc
xchg
lods
mov
jmp
mov
jge
mov
mov
mov
jo
jl
imul
lock
dec
and
dec
xchg
push
jmp
push
mov
fcompp
mov
cwde
pop
cmp
retf
or
js
adc
pop
xchg
repnz
outs
mov
inc
jle
out
and
mov
push
xchg
lds
ret
lock
jne
repnz
xor
scas
mov
sub
xor
mov
loope
in
loop
xchg
je
pop
xor
cs
inc
adc
pop
push
pop
sub
fcmovnbe
js
jle
dec
mov
sbb
xor
mov
ins
sbb
push
loop
mov
aam
in
push
push
imul
shl
mov
mov
dec
push
ins
lds
jb
popa
cwde
sbb
in
lock
cmp
nop
dec
sub
inc
popa
cmp
inc
mov
aas
inc
sbb
movs
loop
sub
dec
(bad)
cli
adc
test
aad
xor
mov
jle
push
push
and
dec
div
jno
pop
clc
int3
add
push
test
cli
inc
or
add
or
and
imul
cmps
push
call
scas
in
cmp
push
dec
(bad)
jae
sti
and
jno
inc
inc
out
sahf
inc
pop
inc
jmp
push
daa
nop
clc
(bad)
pop
adc
ins
rcr
mov
in
adc
in
xchg
lods
repnz
cs
lods
xchg
imul
int
xor
enter
cdq
(bad)
and
retf
imul
int3
xlat
outs
sti
and
mov
inc
mov
cmp
das
push
and
psrlq
movs
xor
mov
jns
dec
or
push
inc
add
mov
xchg
or
sbb
add
or
leave
bound
ret
pop
pop
pop
xlat
cld
pushf
in
lea
js
jecxz
movs
aam
std
sbb
mov
rol
ja
push
dec
add
or
vpaddusb
aaa
fmul
cmp
aad
sbb
stos
loop
pop
lods
adc
sub
inc
rcl
fwait
dec
fisub
inc
movs
gs
cmp
pop
mul
lea
sar
addr16
aam
cmps
std
or
int
sbb
cmp
mov
pusha
adc
std
push
pop
mov
jns
mov
das
mov
inc
adc
pop
mov
outs
fcmovb
mov
xchg
mov
mov
pop
xor
and
xchg
cwde
cmp
mov
or
cmp
fwait
lock
sbb
pop
adc
test
xchg
add
inc
cli
xor
and
dec
fwait
xchg
call
cmp
into
push
mov
test
in
pop
adc
push
int
cmp
push
xchg
cld
xlat
ja
sar
hlt
ins
sbb
inc
and
mov
in
inc
icebp
sub
xor
inc
out
mov
xchg
call
mov
aad
ss
mov
lods
sub
fdivr
jecxz
das
sub
inc
mov
inc
push
aas
ret
or
in
fisub
call
inc
or
popa
mov
xor
mov
into
rol
shl
mov
je
test
int3
xchg
cmc
cld
pushf
xor
adc
stc
cmps
(bad)
xlat
xchg
adc
call
mov
mov
dec
sbb
cmp
ins
xlat
add
mov
push
data16
xor
into
xchg
sub
mov
cs
jl
retf
jmp
sar
or
(bad)
jp
ret
neg
jecxz
mov
dec
push
test
cmp
lahf
pop
mov
mov
test
push
sub
dec
fadd
arpl
mov
push
adc
mov
jae
mov
cwde
mov
popa
dec
clc
cmp
push
mov
or
add
or
sub
dec
pop
inc
data16
mov
scas
ficomp
cmp
push
cmp
jne
mov
fadd
sbb
mov
mov
sbb
sbb
bound
pop
push
or
mov
loopne
or
call
add
inc
ror
imul
cmps
rcl
cmp
lahf
fcomp
mov
pop
movs
push
out
adc
xchg
xchg
popa
jecxz
lods
mov
mov
adc
xchg
test
xchg
add
loop
sub
mov
sti
out
jno
jmp
jno
xchg
push
mov
mov
sbb
or
mov
fimul
or
hlt
jmp
sub
xor
repnz
and
or
inc
push
in
in
pop
dec
sub
and
std
inc
cmp
adc
out
outs
xchg
xor
and
or
movs
movs
mov
cli
mov
dec
mov
fimul
adc
add
enter
leave
ds
xchg
mov
sti
addr16
ds
cwde
or
jl
ins
mov
push
inc
jnp
je
enter
mov
(bad)
cmp
imul
jne
jp
scas
xchg
loop
cmp
aas
push
cs
mov
push
mov
retf
sbb
sub
and
jbe
scas
and
push
adc
in
ins
fistp
rcl
push
je
bound
jl
sahf
cwde
or
cmp
aad
ja
retf
mov
sbb
push
out
inc
inc
pop
jmp
loop
push
aam
cmps
mov
cmp
scas
xor
pop
popa
mov
scas
and
or
jecxz
popf
fisttp
ret
adc
not
or
repnz
adc
mov
fsubr
push
xchg
stc
in
and
adc
fisub
movs
call
adc
pcmpgtb
cmp
sbb
mov
fld
xchg
pop
sub
jmp
pop
dec
adc
or
setae
mov
rcl
out
mov
mov
dec
xchg
mov
inc
push
dec
sub
or
mov
cmp
movs
dec
cmp
xchg
shr
sub
and
(bad)
addr16
jmp
scas
jge
push
mov
mov
push
mov
int3
dec
cmp
fldl2e
add
test
mov
out
enter
jno
adc
call
sahf
sbb
mov
not
shl
ds
in
gs
cs
enter
add
xchg
add
xchg
sub
pop
jmp
ss
lds
dec
pop
add
pop
inc
xlat
and
in
or
shl
lods
daa
cmp
ja
mov
push
loopne
mov
dec
scas
out
mov
mov
aaa
mov
xor
and
aas
or
cmp
(bad)
call
popf
xchg
int3
cs
push
or
mov
inc
arpl
and
sub
cli
mul
adc
popa
repnz
adc
(bad)
cmp
pop
xchg
cmp
jl
push
call
push
jp
mov
or
fiadd
test
or
and
retf
bound
das
xchg
scas
clc
ds
lds
or
xchg
mov
idiv
sbb
ins
(bad)
mov
sbb
xor
pop
mov
out
cmps
or
cmps
pop
dec
mov
jl
sub
push
je
sahf
lahf
pusha
and
fwait
fwait
adc
jge
inc
or
repnz
jge
mov
loop
and
add
xchg
adc
push
mov
xor
inc
mov
hlt
fidivr
and
(bad)
shl
and
jge
sbb
jbe
out
mov
mov
ret
lods
lds
sbb
outs
or
je
movs
and
jmp
leave
ror
repnz
add
(bad)
mov
out
pop
and
ficom
gs
or
sbb
xchg
mov
mov
add
xchg
cmp
aaa
jns
sbb
sub
out
inc
mov
fimul
dec
and
cmp
xor
das
int
daa
outs
xlat
dec
adc
lock
addr16
ret
inc
xor
sub
cmps
dec
aas
clc
fistp
mov
push
mov
sub
bound
dec
adc
pushf
jno
xlat
and
retf
mov
sti
fadd
push
and
cmc
push
mov
fwait
and
loop
(bad)
push
pop
test
push
push
popf
sbb
ins
push
mov
mov
jbe
test
cmp
repz
mov
sub
and
adc
push
cwde
sbb
das
hlt
sub
scas
pop
mov
adc
push
add
js
and
in
xchg
cs
sahf
add
rcl
call
pop
sbb
inc
xchg
xor
int
cmps
mov
sbb
in
pop
mov
jne
dec
in
mov
sub
jbe
mov
xor
test
xchg
mov
jmp
sbb
out
jns
push
ins
pop
mov
daa
sbb
add
shl
xchg
rol
xchg
into
aas
cli
into
jmp
cmovge
rol
(bad)
gs
fnstsw
daa
lea
daa
fwait
push
arpl
sub
dec
pop
jle
stos
push
ja
mov
into
sti
nop
call
pusha
ret
int3
rcl
xchg
cmp
cmp
and
loope
adc
mov
hlt
enter
das
nop
pop
loope
mov
in
es
iret
test
inc
pop
mov
stos
in
in
(bad)
sub
add
inc
in
cmps
pop
mov
repnz
test
cs
cmp
stos
enter
pushf
pop
pop
movs
mov
mov
lods
int3
add
popa
ins
or
outs
mov
ja
cld
fs
adc
sbb
leave
pop
pop
daa
clc
xchg
addr16
les
imul
loope
imul
jmp
dec
ret
test
les
mov
icebp
repz
test
les
cmp
js
cs
push
cmp
imul
pop
push
add
dec
paddd
int3
scas
jnp
or
addr16
push
aas
bound
jno
inc
push
or
mov
popf
aaa
jg
jmp
adc
inc
cmp
sbb
xchg
cmp
outs
dec
jl
repnz
inc
add
mov
mov
cmp
mov
xchg
or
jbe
(bad)
fcmovnu
xchg
push
inc
mov
test
mov
movs
inc
xchg
out
das
fsub
data16
or
int3
retf
and
sub
or
dec
repz
adc
mov
cmp
cmc
mov
or
test
fisttp
mov
dec
daa
jns
(bad)
push
push
xor
movs
stc
jnp
mov
xor
push
repz
jecxz
aad
cli
cld
sub
jle
clc
cld
nop
fcmovb
xchg
sub
xor
jno
hlt
outs
fcom
jno
sar
pop
jo
int3
sbb
fst
dec
(bad)
jno
ret
addr16
loopne
retf
shr
lock
(bad)
cmp
xor
mov
loopne
fmul
mov
jae
mov
and
sub
cmp
sbb
mov
sub
icebp
adc
outs
dec
mov
shl
mov
pop
or
scas
aas
out
imul
cmp
jb
sbb
test
(bad)
inc
ss
scas
fs
pop
in
xor
jecxz
bound
cmp
call
popf
push
enter
sub
and
add
enter
(bad)
xor
jmp
mov
int
retf
xor
add
je
push
cwde
cmp
call
inc
das
jge
(bad)
fdivr
cmc
icebp
jmp
cmc
jle
sbb
(bad)
outs
cli
jp
pop
outs
iret
imul
ins
cmp
(bad)
in
icebp
xchg
mov
shl
(bad)
scas
in
dec
push
xchg
add
int3
inc
pusha
cwde
(bad)
dec
test
outs
pop
push
rcr
cmp
jl
cmp
out
ret
(bad)
mov
addr16
xchg
or
loopne
enter
neg
dec
lods
add
in
imul
lds
or
out
pop
cmp
fsubr
jmp
mov
jno
and
adc
xor
int
cli
mov
std
pusha
jmp
or
xor
outs
cmp
pusha
mov
arpl
dec
pop
inc
outs
fdivp
out
out
out
fsub
push
jg
or
dec
out
hlt
xor
ss
jmp
lods
jg
daa
call
cmp
arpl
fstp
jecxz
mov
ins
mov
rcl
fld
dec
int
and
jbe
cmc
mov
(bad)
(bad)
adc
aaa
dec
arpl
lods
xlat
sahf
cld
stos
es
rcl
aad
cwde
fwait
push
data16
cdq
sub
sbb
dec
pslld
jnp
pop
out
jae
add
fcom
mov
or
mov
dec
push
mov
pop
and
rcl
or
pop
inc
addr16
sub
mov
mov
pop
sub
sbb
fldenv
aas
cmp
mov
xor
or
mov
imul
cmp
(bad)
fldcw
fadd
add
inc
test
xchg
pop
cmp
mov
mov
sub
dec
lahf
test
in
dec
mov
pop
jae
stos
mov
fnstenv
in
(bad)
jb
iret
xor
icebp
loopne
inc
sub
rcr
push
pop
out
cmp
xor
dec
sbb
pop
mov
xor
add
cmp
jo
xchg
or
inc
(bad)
ret
push
push
jmp
jp
test
mov
movs
sub
mov
mov
fistp
xor
pop
cmp
sbb
adc
gs
je
dec
(bad)
jge
push
mov
pusha
add
lock
call
out
fcomp
fs
std
ficom
bound
out
gs
les
cmps
adc
sbb
jo
push
push
out
push
mov
outs
int
jle
retf
test
push
(bad)
in
inc
adc
(bad)
retf
mov
sub
and
retf
retf
out
or
out
or
xchg
sub
add
lods
or
adc
add
fisttp
jg
or
mov
loope
imul
fcmovb
js
push
fsubrp
push
imul
retf
sub
ins
mov
sbb
inc
(bad)
fstp
js
mov
jbe
mov
inc
xor
jno
lods
mov
sti
push
xor
movs
mov
enter
cmc
addr16
or
(bad)
sub
dec
dec
jmp
push
jnp
in
xchg
shr
std
frstor
call
xchg
inc
mov
push
inc
sbb
outs
loopne
jnp
fstp
lods
cmp
mov
xor
ret
xor
outs
stos
and
adc
outs
mov
pop
inc
lahf
repnz
dec
pop
adc
jae
shl
push
mov
ins
iret
mov
mul
xor
cld
xor
mov
mov
sub
into
das
or
cmc
dec
xchg
lods
js
aam
clc
or
dec
outs
icebp
and
xor
inc
int
scas
arpl
or
sbb
leave
jb
test
adc
adc
and
sbb
movs
adc
adc
js
imul
not
or
jecxz
outs
xor
jb
cs
stos
mov
pop
push
and
xor
fistp
mov
add
add
inc
fisttp
jne
inc
xor
adc
jl
gs
inc
xlat
xor
bound
pop
test
xlat
cmc
adc
in
jmp
mov
push
inc
sahf
retf
cli
or
hlt
lods
out
add
xchg
fwait
adc
fadd
repz
push
pop
xchg
fs
shl
and
cwde
push
dec
lea
jmp
mov
(bad)
aas
adc
jg
shr
mov
push
jnp
mov
bound
push
xchg
push
push
dec
jae
je
xchg
mov
inc
fistp
dec
mov
popa
jle
pop
test
xchg
clc
push
ret
int3
div
mov
repz
cmp
jge
sahf
mov
mov
mov
fbld
in
hlt
mov
cmp
jnp
cld
shl
sbb
mov
jmp
addr16
repnz
inc
fprem
or
js
mov
push
fucomip
ja
xchg
pop
jne
jo
lds
mov
out
cmp
sahf
push
inc
xchg
scas
and
mov
jge
dec
hlt
movs
and
cs
sub
or
in
xor
sbb
adc
int
mov
fimul
retf
push
sub
icebp
inc
aaa
adc
xchg
mov
dec
je
or
rcr
rcr
jno
pop
inc
push
sbb
cmc
add
ficomp
cmp
out
or
stos
retf
push
cmp
clc
xchg
mov
das
dec
out
jmp
iret
lods
outs
popf
popa
dec
sbb
jnp
out
loope
arpl
xchg
jg
pop
mov
mov
jecxz
sub
sbb
jnp
push
lods
mov
sub
inc
mov
dec
add
xor
shl
mov
ins
and
stc
cmp
xor
dec
dec
nop
outs
mov
stos
xchg
enter
ret
jg
leave
mov
jmp
pop
xor
in
(bad)
and
inc
fnsave
add
ret
pop
xchg
lds
fwait
ror
jmp
clc
lock
cs
xchg
sub
(bad)
das
xchg
repz
mov
push
retf
rcl
and
sahf
fcomp
push
fld
mov
jg
jl
mov
es
cdq
mov
pop
inc
(bad)
out
mov
inc
mov
cmp
sahf
cmp
fidiv
jge
in
xor
scas
cs
in
fistp
xor
push
cwde
sbb
imul
push
inc
sub
push
mov
mov
fs
xor
out
out
push
pop
lods
repnz
lods
call
dec
outs
sbb
mov
out
jbe
mov
sub
mov
pop
inc
jne
jns
sbb
pop
dec
in
adc
mov
jmp
aad
aad
cmps
iret
int
jle
adc
push
daa
xchg
daa
addr16
es
mov
rcl
jne
test
mov
addr16
mov
pop
sbb
jmp
xchg
iret
mov
leave
push
adc
rcr
inc
push
cmp
mov
outs
cmp
dec
sbb
out
sbb
popf
fdivr
out
xchg
sbb
xor
mov
mov
sub
in
inc
or
jo
mov
adc
hlt
int3
dec
inc
jecxz
xchg
or
popf
adc
scas
(bad)
xchg
and
adc
repnz
adc
(bad)
cmp
jecxz
rol
ins
addr16
pop
pop
(bad)
mov
imul
pop
cmp
or
jb
ror
sti
xchg
les
inc
or
bound
sbb
pop
adc
cs
or
lock
ficom
(bad)
dec
push
dec
inc
movs
lods
adc
in
int3
dec
loope
adc
out
ins
cmc
add
xchg
mov
sub
cwde
(bad)
jge
sbb
push
jnp
sub
dec
add
pop
add
movs
fwait
neg
add
jae
(bad)
and
sbb
mov
xchg
or
sbb
mov
mov
add
mov
out
hlt
xor
rcl
aas
enter
mov
inc
out
add
cld
jp
or
mov
cmp
cmps
inc
call
push
pop
out
xor
je
sub
jle
iret
sbb
std
das
xchg
and
(bad)
mov
daa
scas
in
adc
repz
test
test
into
in
push
pop
sbb
xor
in
in
sub
pusha
jle
pop
mov
xlat
ret
pushf
inc
(bad)
xor
test
dec
mov
out
daa
xor
out
add
mov
int
int3
xor
inc
xor
xchg
adc
shl
mov
aaa
inc
pop
mov
adc
popa
xor
add
out
scas
mov
bound
shl
adc
fwait
xor
or
mov
or
inc
xor
xchg
or
(bad)
jl
cmps
(bad)
aas
or
and
xor
push
xchg
pusha
xlat
call
push
cwde
push
cli
jno
xor
aam
jo
cld
sub
sti
xchg
gs
pop
inc
xor
sbb
and
daa
mov
inc
retf
mov
xchg
push
pop
sahf
inc
arpl
add
sbb
xchg
mov
mov
xchg
scas
aad
jmp
fs
aad
dec
push
imul
jle
add
mov
lds
push
push
hlt
and
ficomp
ret
pop
inc
outs
mov
leave
adc
pop
mov
jmp
das
in
sahf
inc
mov
jle
fsub
dec
das
scas
retf
js
xor
jbe
xchg
jge
mov
fdivr
dec
test
push
dec
(bad)
cdq
(bad)
popf
or
add
xor
mov
fistp
mov
popa
dec
pop
stos
cmp
ret
or
imul
fldcw
ror
xor
cmp
mov
(bad)
mov
xor
or
push
sub
or
scas
cmp
sbb
xchg
push
add
xlat
dec
xor
pop
je
xor
popf
or
outs
cld
ds
out
push
push
je
dec
out
adc
and
xchg
jp
lods
cwde
pop
aaa
xor
inc
cmc
ins
lock
jmp
push
jp
test
js
fimul
inc
daa
dec
mov
cmc
repnz
push
jns
movs
cli
loopne
xchg
cmps
mov
xchg
mov
fucomp
imul
in
push
sti
inc
jns
popa
rcl
xchg
push
sahf
dec
pop
bound
add
bound
pop
xlat
pop
adc
stc
ins
out
adc
mov
repz
outs
push
xor
or
cmp
dec
sbb
aam
ss
pop
dec
ins
jno
gs
repnz
adc
jmp
mov
inc
mov
ror
xchg
aaa
enter
(bad)
fsubr
repz
push
fs
adc
(bad)
bound
or
shl
outs
test
out
dec
jb
je
inc
cmps
dec
out
ins
dec
and
loopne
ins
add
xchg
out
sbb
push
loop
xor
(bad)
pop
mov
or
mov
cmp
mov
pusha
iret
(bad)
xchg
jnp
mov
call
or
mov
push
jne
lods
rol
ss
or
ins
jle
lea
in
jecxz
shr
sbb
cmps
sub
ret
test
test
rcr
xor
mov
(bad)
out
(bad)
mov
or
icebp
call
adc
dec
popa
push
cli
pop
in
cmps
add
inc
pushf
sbb
and
lea
cmp
popa
add
(bad)
cmp
or
sbb
retf
or
pop
movs
outs
xor
and
outs
imul
test
jecxz
mov
push
jno
rol
mov
movs
jns
xchg
pop
aad
fadd
mov
mov
fdiv
mov
outs
push
out
pop
sub
jne
ja
test
push
imul
sub
cwde
mov
cmp
in
dec
(bad)
out
mov
not
push
and
jb
sbb
inc
push
aad
(bad)
fstp
adc
rcl
jmp
fnstenv
gs
outs
push
mov
mov
out
cmps
mov
jno
das
jae
adc
push
clc
xor
sub
(bad)
cmp
test
ins
push
cmp
ins
dec
lahf
pushf
jmp
mov
mov
std
cs
mov
cmp
adc
pop
xchg
inc
push
dec
in
ins
cmps
dec
push
(bad)
xchg
js
push
out
lods
stc
mov
adc
jns
xchg
jmp
add
shl
imul
mov
pop
ds
fmul
sub
adc
jmp
nop
sub
sbb
call
and
xor
adc
(bad)
(bad)
sub
mov
(bad)
movs
in
mov
out
sub
dec
test
inc
scas
jbe
adc
xchg
ins
mov
pop
in
shl
int3
ficom
gs
popf
(bad)
stos
in
jne
adc
dec
pop
hlt
mov
cmp
xchg
add
mov
or
jno
jg
retf
jb
jmp
aad
ret
jg
(bad)
cli
jp
dec
push
jmp
jnp
fisttp
ror
mov
int3
add
sahf
jmp
loopne
or
inc
aas
gs
test
repz
div
pop
xor
xchg
xchg
jge
jnp
bound
fimul
push
fs
(bad)
out
loopne
sahf
xor
cmp
cmps
repz
in
or
mov
rol
test
push
dec
cmp
call
sahf
enter
daa
xor
cli
dec
mov
mov
jmp
xlat
fldcw
add
sub
fsub
push
dec
jle
loop
popa
es
int3
ret
out
mov
mov
push
aaa
shr
jmp
mov
mov
or
ficom
push
dec
pop
arpl
cmc
loop
cmp
pop
hlt
cmps
lods
je
mov
jge
imul
mov
repz
jne
dec
(bad)
cld
jmp
inc
dec
movs
sub
bound
fistp
mov
inc
fs
push
sbb
psllw
(bad)
or
inc
jne
clc
das
aam
sub
retf
cdq
int3
inc
push
leave
push
(bad)
js
mov
popf
push
inc
repz
jge
jmp
ins
sbb
sub
aas
fdiv
std
pop
popa
popf
add
lods
or
test
push
lods
and
add
mov
cmp
neg
jnp
mov
cmp
jno
adc
sti
mov
xchg
jb
iret
xlat
adc
cmps
rcr
and
mov
popf
mov
add
push
pop
cmps
mov
xchg
inc
fstp
jg
pop
psubsb
in
cmps
inc
pop
imul
aas
inc
fstp
cmps
aaa
lock
xor
xlat
dec
es
pop
dec
jecxz
sub
xchg
pop
les
sbb
sbb
neg
into
sar
scas
mov
jns
arpl
push
lahf
aam
outs
rol
data16
rcr
push
adc
xchg
xchg
daa
inc
push
fcmovnbe
push
sbb
and
xchg
call
(bad)
add
pop
stos
dec
add
inc
sub
jl
sbb
mov
sub
mov
cmp
loop
xor
pop
push
es
xchg
repz
or
push
outs
inc
ss
and
dec
call
sar
jnp
cmp
and
bswap
stos
push
pop
add
cmp
pusha
sbb
mov
push
imul
xbegin
retf
int3
jge
loop
mov
ins
mov
push
sar
sbb
xchg
repz
popf
and
lahf
push
pop
outs
data16
in
add
mov
outs
(bad)
xchg
mov
lock
cmp
es
mov
sbb
sti
inc
mov
jae
xchg
rcr
aas
(bad)
mov
sub
aaa
xor
js
cmp
xor
inc
push
(bad)
cld
jb
sar
and
xchg
push
jae
enter
adc
xor
popf
ficom
aas
pop
xor
push
or
mov
imul
(bad)
dec
inc
push
adc
das
rcl
lods
pop
int
xor
inc
cwde
aas
push
and
daa
xor
adc
xchg
cwde
test
xor
cmp
or
cmp
cli
repnz
xchg
lock
loop
fwait
rcr
jge
adc
push
adc
fcomp
mov
je
mov
fsubr
rcl
jg
stos
or
jno
shl
inc
mov
aad
cld
gs
in
push
out
jl
cmp
adc
xchg
and
fcmovu
fcmovb
inc
test
jno
mov
rcr
inc
lock
lea
add
arpl
int
cs
xor
push
adc
jge
neg
jg
rol
(bad)
mov
sub
sub
mov
icebp
push
into
inc
pop
iret
(bad)
(bad)
jmp
and
sbb
aam
sub
(bad)
inc
jecxz
das
outs
xor
enter
idiv
push
pushf
(bad)
mov
ret
adc
mov
bound
(bad)
cmp
or
mov
rcl
pop
add
sub
iret
js
pop
stc
push
lods
adc
push
div
mov
call
cmp
or
mov
or
mov
aad
pop
pusha
and
xor
dec
aad
jp
dec
adc
aam
pop
push
mov
sbb
mov
rcr
fidivr
sbb
cwde
sub
jnp
test
pop
lock
cmps
ss
test
mov
xor
lds
(bad)
hlt
jp
add
(bad)
adc
mov
adc
dec
fisttp
lea
fsubr
xchg
xchg
mov
fwait
mov
clc
ret
xchg
outs
jmp
retf
jmp
movs
sub
push
movs
xchg
mov
ins
out
aam
mov
xor
movs
in
cwde
fdiv
mov
adc
and
pop
ret
pop
mul
or
sahf
jno
and
adc
out
loope
js
mov
stos
leave
jns
dec
pop
test
sbb
stos
xor
xor
test
mov
xor
movs
push
cs
xchg
dec
mov
ins
out
shl
ret
ds
pop
add
cmp
stc
sub
jae
sbb
leave
pushf
sub
or
in
aaa
jmp
cmc
xlat
pop
xor
mov
pop
pop
and
xor
lea
pop
mov
jle
mov
ficomp
pusha
mul
xchg
stos
fidivr
stc
dec
hlt
mov
ror
test
sar
jp
in
dec
sbb
inc
sahf
cwde
hlt
mov
add
bound
and
repz
mov
loop
mov
and
in
(bad)
push
mov
dec
mov
xchg
stc
test
ds
or
sti
inc
xchg
mov
retf
and
jg
daa
ficomp
les
mov
ds
lods
xchg
jecxz
xor
in
fisubr
push
add
pop
xchg
mov
out
dec
inc
and
sub
pop
js
(bad)
lods
push
cmps
mov
ds
out
in
xchg
loope
jbe
jae
out
pop
sbb
xchg
sti
mov
pop
or
stos
and
adc
(bad)
int3
sub
stos
clc
fs
adc
or
cli
test
mov
jae
xor
fnstcw
xor
ds
stc
out
and
loop
outs
xor
rcr
xor
and
lods
test
xlat
(bad)
stos
xchg
stos
sbb
mov
out
and
(bad)
neg
push
mov
mov
(bad)
cmp
jmp
xor
jge
leave
test
mov
inc
ja
in
(bad)
push
pop
outs
ret
sbb
imul
sub
jl
and
out
repnz
cmp
mov
jns
lods
xor
aad
pop
aaa
call
in
outs
ins
push
jmp
test
inc
fstp
loope
xchg
lahf
sbb
ret
push
arpl
xor
cmp
cmp
sar
js
dec
push
lea
cmps
dec
sahf
adc
pop
aam
push
cmps
(bad)
cwde
out
pushf
cmp
inc
nop
cmp
dec
jge
mov
movs
inc
ficom
sar
ret
call
cmp
lock
stc
bnd
les
fcom
mov
adc
pop
movs
mov
push
stos
shl
add
push
xchg
or
ja
ins
jl
sbb
push
leave
out
outs
cld
out
push
and
pop
dec
inc
addr16
shl
jecxz
or
push
add
xchg
mov
inc
jle
or
mov
(bad)
cmps
dec
add
and
mov
jmp
(bad)
mov
aad
bswap
ds
xor
outs
xor
lahf
mov
add
retf
dec
(bad)
xor
jg
adc
arpl
mov
jl
lahf
fstp
loopne
inc
jns
pop
loopne
aaa
xor
or
mov
or
xor
push
lahf
int3
cmp
popf
shl
sub
push
xor
dec
mov
movs
inc
jl
cmp
mov
in
(bad)
rcr
add
hlt
js
mov
or
lea
push
pop
adc
test
test
xor
dec
fmul
mov
loopne
push
pop
cmp
outs
push
f2xm1
xchg
xor
rol
nop
xchg
xor
jbe
mov
and
addr16
push
enter
cli
mov
add
push
mov
and
push
pop
cmps
adc
xchg
sbb
loop
pop
push
ins
iret
les
scas
sbb
scas
mov
pop
stos
mov
dec
push
stos
dec
mov
add
inc
out
mov
or
xor
push
push
sub
int3
movs
push
stc
cmps
xor
les
jge
pop
jp
je
aad
leave
and
push
cmps
push
imul
and
sbb
and
inc
cbw
push
inc
fimul
fdiv
push
(bad)
cmp
or
fild
pusha
daa
jmp
sub
(bad)
jp
(bad)
aad
mov
loope
cmc
mov
in
rol
outs
loopne
mov
sub
inc
outs
mov
xchg
cmp
sar
mov
fadd
push
sar
aaa
dec
cmp
dec
outs
cmc
(bad)
jb
push
call
dec
les
(bad)
xchg
imul
mov
cmc
(bad)
mov
sub
pusha
aam
popa
mov
ds
cwde
xchg
fist
xor
into
imul
mov
xchg
retf
(bad)
cmps
test
pop
imul
clc
push
sub
retf
push
pop
test
mov
sbb
outs
(bad)
stc
pop
xor
push
dec
es
(bad)
mov
out
lea
add
sub
icebp
stc
push
xchg
lods
or
sub
adc
(bad)
xchg
push
xchg
jb
mov
cli
sub
fwait
or
add
sar
test
add
cmc
ins
adc
sub
inc
xchg
xor
jg
mov
and
jl
dec
sub
sbb
cmp
push
out
xchg
fcomp
push
inc
repz
jbe
mov
lahf
dec
cwde
sub
pop
iret
int
lock
push
mov
test
cmp
test
rcr
mov
fistp
mov
adc
push
push
push
pop
pop
pushf
xchg
pusha
popf
bound
lods
xchg
(bad)
in
sub
cmp
(bad)
lds
mov
xchg
adc
lods
cld
aad
mov
cmps
imul
mov
add
in
pop
cld
xor
sub
pop
fdivr
or
loope
fidivr
rcr
dec
lea
data16
inc
pop
pushf
push
fldenv
xchg
jp
pop
stos
mov
test
xchg
xchg
(bad)
data16
outs
push
ret
xlat
cmps
mov
out
stos
idiv
mov
mov
stc
mov
test
sbb
out
jbe
ins
pop
dec
imul
dec
xchg
ds
pusha
cmp
shl
adc
dec
int3
sub
sbb
(bad)
inc
loop
cmps
test
mov
pop
sub
pop
icebp
pop
push
inc
shr
mov
and
(bad)
js
cmp
xchg
fistp
dec
or
mov
xchg
inc
mov
push
iret
mov
js
jl
add
mov
inc
mov
or
rcl
fisttp
xchg
cmps
jmp
push
ss
sub
jbe
and
mov
popf
push
scas
inc
push
sbb
adc
jecxz
push
fsubr
aam
not
fldenv
sahf
dec
sbb
dec
cmp
or
je
adc
arpl
cdq
imul
(bad)
fwait
in
jne
push
push
mov
mov
ret
out
shl
mov
popf
or
pop
popf
mov
jmp
pop
mov
cld
xchg
and
movs
imul
sub
cdq
(bad)
test
fdivr
pop
sub
inc
jl
daa
add
aam
aaa
inc
in
imul
xchg
fsub
ror
add
jmp
out
and
push
stc
ds
and
bnd
sahf
and
push
or
mov
aas
fstp
es
iret
imul
lds
mov
shr
mov
out
inc
push
or
jbe
mov
mov
push
mov
ss
push
lock
rcr
xchg
std
lock
mov
loop
cmp
in
cmp
lods
xor
ss
stos
cmps
mov
int
mov
mov
xchg
xor
addr16
lds
mov
call
xchg
push
mov
mov
lods
jo
and
dec
jb
sub
pop
or
sbb
gs
pop
lods
xor
(bad)
push
sti
dec
push
movs
ins
mov
xchg
or
test
in
ficomp
push
lea
xlat
xchg
cmp
adc
mov
mov
pop
mov
sub
jo
push
sahf
mov
mov
pop
xchg
push
das
adc
scas
movs
push
cdq
rol
cwde
popa
fistp
cli
sub
cmp
lea
js
mov
nop
jns
inc
sub
jmp
mov
inc
cmp
or
and
adc
adc
pop
dec
retf
loopne
xlat
in
jmp
pusha
or
popa
mov
push
push
movs
xchg
aas
and
iret
arpl
mov
xor
pusha
aaa
shr
loopne
sti
movs
inc
jecxz
imul
adc
push
repnz
and
jno
hlt
adc
lahf
aad
shl
pop
mov
cmp
adc
out
sub
test
pop
fld
repz
jecxz
inc
pusha
pop
sub
pusha
mov
loop
pop
fbstp
in
ret
arpl
bsr
xchg
js
fwait
inc
mov
xchg
stos
dec
push
test
mov
cli
xor
dec
adc
ret
dec
cmps
loope
mov
icebp
mov
add
ins
repnz
aad
rep
aad
hlt
out
cmp
inc
imul
fbld
ins
push
rcr
das
out
xchg
je
push
push
test
mov
mov
sub
nop
popa
xor
adc
cdq
cld
popa
xchg
push
lea
pop
call
fwait
(bad)
mov
cmp
outs
mov
mov
or
leave
push
sbb
retf
adc
and
aad
push
(bad)
call
cmps
and
push
repnz
(bad)
popa
push
mov
out
repnz
cmp
push
int
sub
rcr
js
jo
retf
dec
(bad)
lock
adc
or
mov
mov
popf
or
jae
xchg
mov
jge
into
lods
jl
pop
xor
adc
lock
pusha
sahf
sar
aas
pop
in
xchg
rol
inc
mov
movs
sub
movs
mov
jne
mov
les
mov
push
cmc
stc
jmp
push
mov
adc
(bad)
or
xor
cs
int
add
aaa
mov
add
dec
cmc
dec
pop
pop
out
push
pop
test
std
xchg
mov
out
mov
cmps
repz
sub
cmp
push
jne
pop
mov
or
int3
ss
jns
push
pop
push
mov
sbb
fdivr
and
push
inc
mov
sub
cmps
xchg
outs
aas
jmp
xor
pop
push
data16
add
popa
ret
vpsllq
xchg
mov
inc
inc
sub
push
cmp
hlt
outs
mov
and
in
test
cmps
or
push
lock
jp
push
int3
pushf
dec
imul
inc
push
sub
add
scas
retf
cmp
add
and
inc
xor
mov
leave
cmp
mov
and
push
sub
ins
popf
dec
add
push
jmp
adc
call
shl
fs
(bad)
dec
enter
fld
add
xchg
xchg
sbb
sub
mov
rol
lahf
test
xchg
shl
xchg
mov
pop
pop
fnstsw
rcr
add
jge
dec
pop
cmp
inc
iret
stos
retf
mov
xor
cs
jae
add
inc
not
idiv
scas
mov
push
movs
mov
jge
cmp
jle
sbb
add
aas
mov
js
lahf
mov
inc
call
fisttp
loop
pop
jnp
mov
pop
or
cmps
mov
bnd
xchg
adc
jle
push
sbb
cmp
cmp
mov
pop
push
cld
(bad)
pop
mov
loopne
cs
popf
mov
jp
repnz
sbb
mov
sbb
add
jae
mov
and
jno
fwait
mov
xor
dec
jle
les
xchg
rcl
loop
fld
and
adc
pushf
call
lea
cdq
loopne
mov
adc
fisubr
popf
jne
in
iret
call
mov
adc
xchg
xchg
add
cmps
add
test
jmp
test
sub
fnstsw
cmps
mov
nop
dec
mov
gs
mov
pop
shl
mov
js
dec
cld
shl
retf
push
stc
(bad)
mov
jg
jb
dec
loope
inc
movs
cmc
add
mov
fimul
or
jg
data16
fstp
push
je
adc
dec
ret
(bad)
retf
movs
ficomp
push
sbb
shl
int
cwde
cwde
or
jl
mov
or
dec
push
adc
enter
loopne
xor
idiv
xchg
enter
inc
push
lahf
jge
cmp
(bad)
loop
xor
je
and
pop
jg
lahf
xchg
imul
addr16
push
nop
sbb
xchg
adc
mov
mov
jmp
adc
fimul
cmp
sub
scas
xlat
fimul
mov
fmul
fisttp
rcl
mov
jne
ja
(bad)
(bad)
ja
aas
je
cwde
jne
pop
movs
xchg
jmp
cmp
test
sbb
cld
stos
pop
leave
or
xchg
mov
xchg
imul
ins
int
xor
add
stos
cwde
dec
cmc
push
fisttp
add
jl
dec
movs
cmp
or
cmps
stc
jno
je
scas
cmps
addr16
bound
repz
cmp
mov
stc
ins
es
out
lods
jmp
and
mov
loopne
xor
pop
and
ss
and
arpl
push
sbb
adc
xchg
add
pop
lods
aas
nop
in
nop
add
mov
xor
movs
cmp
mov
scas
lods
shl
push
jge
cli
mov
outs
mov
cmp
(bad)
enter
call
fst
cli
pusha
mov
adc
push
cmc
cs
mov
scas
scas
jp
in
xor
xor
adc
add
sbb
ja
fcmove
test
pop
sbb
jno
bound
cmps
fs
pop
nop
mov
xchg
mov
sub
sbb
pusha
imul
xchg
xor
mov
int
nop
into
cmp
out
mov
nop
mov
mov
movs
icebp
repz
cmps
push
push
pop
xchg
fmul
adc
test
jmp
nop
jae
mov
inc
xor
div
das
inc
sbb
or
xor
and
emms
fiadd
jae
(bad)
xor
xchg
mov
(bad)
std
rep
cmc
jnp
inc
dec
or
(bad)
sub
cli
cwde
cmc
and
add
out
sub
mov
mov
fcomp
mov
sahf
int
pop
add
out
or
(bad)
ins
jbe
mov
movs
mov
adc
outs
imul
push
pushf
lock
mov
(bad)
or
inc
clc
push
sbb
jp
je
mov
mov
and
sbb
nop
addr16
int3
pop
mov
mov
xor
lock
add
ret
push
(bad)
pop
dec
sti
addr16
sahf
popa
not
int
test
xchg
std
xchg
clc
jo
and
scas
xchg
(bad)
adc
adc
repz
cmp
push
sub
neg
lea
cli
mov
bnd
pop
iret
xlat
inc
jmp
data16
add
sbb
jnp
cwde
mov
xchg
stos
jne
add
(bad)
(bad)
out
pushf
bound
daa
aas
popf
pop
pop
and
push
mov
mov
jmp
mov
inc
lods
mov
sbb
pop
nop
icebp
scas
cmps
xchg
je
cmp
lock
sbb
rcr
call
fcomp
dec
mov
add
popa
rcr
sbb
pop
fst
xchg
retf
cwde
pushf
imul
cld
mov
cmps
xchg
test
ret
mov
call
out
mov
jge
(bad)
pushf
lahf
mov
jge
mov
jae
sub
ins
or
xor
sbb
mov
in
mov
cmp
sub
xor
scas
adc
ds
xor
loope
(bad)
enter
ins
movs
and
mov
and
retf
aas
mov
or
mov
or
push
inc
jge
jp
and
push
cdq
push
pop
mov
dec
stc
push
and
cmp
test
rcr
xchg
ins
inc
sub
sbb
inc
xchg
pushf
push
push
rcr
xor
jns
cs
popf
cdq
fwait
in
mov
mov
addr16
into
sti
xlat
dec
push
sbb
push
push
dec
into
jg
aad
jp
mov
mov
popf
mov
or
clc
xor
xchg
jne
fldenv
add
adc
(bad)
push
jb
in
xchg
stos
out
ins
pop
inc
mov
clc
pop
mov
mov
pushf
xchg
add
repnz
xor
ror
push
movs
or
es
sub
into
imul
dec
into
mov
stc
adc
jne
jo
out
cld
and
mov
dec
inc
or
jne
pop
icebp
cmps
cmp
mov
std
retf
shr
mov
(bad)
add
rcr
js
cmc
mov
jae
loope
or
dec
mov
movs
ret
jl
daa
int3
ret
push
inc
test
sar
mov
cdq
mov
sbb
(bad)
cmp
mov
cdq
aad
mov
pop
sbb
repnz
inc
sar
cmps
cld
stc
pop
stos
popf
xor
pop
cmps
int3
xor
mov
ror
mov
retf
xchg
xchg
xchg
xchg
out
mov
enter
dec
cmp
int3
div
cmp
mov
aas
(bad)
call
jno
pusha
daa
(bad)
mov
sbb
dec
jae
xchg
sbb
imul
popa
out
movs
retf
icebp
sbb
or
das
shr
arpl
rcl
scas
or
xchg
jae
mov
stos
jb
sub
lahf
popa
mov
stc
sbb
cld
xchg
lock
cmp
inc
jp
lds
pop
lahf
add
jmp
in
arpl
sub
jb
icebp
sub
cmps
mov
mov
sbb
int3
inc
sub
sub
loopne
mov
lock
adc
add
xchg
stc
or
ins
xor
push
jmp
pop
jg
pop
adc
ja
hlt
push
fstp
xor
mov
pop
jl
cmp
lods
test
dec
fisubr
aaa
sub
cli
xor
pop
lds
mov
test
test
enter
dec
(bad)
icebp
lock
cli
and
push
les
imul
pop
retf
mov
cmp
adc
clc
data16
das
jno
and
loope
xchg
push
lahf
cmp
push
ror
jae
outs
inc
cmc
stos
rcr
dec
mov
lahf
loope
and
adc
(bad)
mov
fstp
mov
cwde
in
jno
push
jle
inc
mov
add
xchg
jle
aam
mov
push
push
dec
enter
pop
jbe
pusha
lea
pop
xor
pop
lock
cmp
stos
stc
sub
test
xor
mov
addr16
add
enter
push
popf
sub
jo
sbb
xlat
jo
xchg
mov
js
xchg
xchg
imul
push
rcr
sub
(bad)
dec
popa
shl
mov
sahf
movs
and
add
cld
sbb
movs
mov
not
cmp
add
xor
mov
rol
int3
test
mov
leave
push
inc
leave
leave
retf
test
jns
in
pop
jg
cmps
jbe
daa
outs
xchg
and
test
dec
cmps
mov
daa
inc
(bad)
call
sbb
mov
ja
fdivrp
int3
aad
jae
push
fucomp
loope
mov
sti
mov
sub
xchg
or
pop
pop
loope
ds
cmps
dec
in
fistp
xor
mov
push
push
xor
push
push
fnstcw
repz
xchg
dec
jne
cmp
dec
dec
cdq
push
icebp
mov
ficomp
scas
jne
je
pop
call
sar
jns
sti
sbb
mov
aas
out
adc
dec
pusha
out
call
and
and
fbld
int
fcomp
repnz
jmp
mov
or
xor
inc
sbb
test
jmp
leave
iret
fs
dec
fadd
and
dec
fstp
(bad)
mov
(bad)
push
add
fmul
and
les
push
add
and
jnp
mov
lods
mov
cmp
shl
mov
sbb
subps
xor
push
(bad)
shl
stos
inc
or
mov
or
sbb
xor
popa
out
ins
pop
(bad)
shr
mov
pusha
scas
dec
pop
add
loope
mov
test
retf
arpl
stos
xchg
mov
push
sbb
fsubrp
(bad)
out
jbe
mov
aad
xor
push
xchg
call
or
xchg
fnsave
xor
mov
jecxz
dec
jmp
jle
jmp
aaa
(bad)
rol
mov
stos
lods
xchg
(bad)
std
in
dec
inc
xor
iret
cmp
sub
retf
in
(bad)
sub
xchg
xchg
add
push
jg
mov
xchg
mov
mov
mov
dec
call
popa
(bad)
inc
push
ja
fimul
and
sti
xor
std
mov
fcmovnu
mov
out
ins
loopne
dec
adc
adc
fisttp
mov
call
(bad)
xchg
jecxz
inc
jmp
xor
mov
push
and
xor
push
sbb
or
(bad)
das
adc
outs
jb
call
xor
inc
not
retf
pop
dec
adc
repz
jmp
pop
push
and
lds
std
cmp
fwait
cmp
adc
xchg
mov
mov
lahf
mov
jbe
call
add
repnz
das
in
xchg
out
cwde
sbb
shl
stc
loopne
xor
mov
add
xor
cmp
inc
ss
add
out
push
push
ss
lock
cli
mov
push
test
push
xchg
in
mov
(bad)
aaa
dec
cli
jae
lods
mov
xchg
sbb
fsubr
or
ret
neg
ins
aam
pop
loop
fadd
xchg
push
adc
and
fprem1
imul
cmc
test
pusha
mov
inc
stos
or
sub
pop
or
cmp
in
outs
mov
xor
jp
adc
aad
and
push
ja
sahf
mov
jg
ja
call
addr16
pop
push
push
mov
rcl
and
out
inc
dec
jae
push
jbe
mov
xor
test
cmps
mov
loop
push
cdq
addr16
shl
leave
sbb
pop
and
jnp
(bad)
mov
mov
mov
mov
rol
mov
adc
cs
fdivr
dec
dec
sbb
js
mov
cmp
xor
push
es
arpl
imul
test
push
mov
inc
sub
fcmovnbe
in
or
scas
mov
ds
iret
inc
imul
inc
lds
ins
retf
and
or
jae
ins
and
xchg
xchg
(bad)
jmp
adc
fcomp
sbb
lods
clc
xor
push
(bad)
mov
xchg
mov
mov
js
test
not
push
leave
jmp
test
mov
(bad)
mov
add
scas
push
push
sbb
cs
cmp
sub
sbb
push
movs
cdq
jge
popa
psrad
push
movs
shr
sub
inc
or
sahf
pop
pop
nop
fist
sub
jae
cmp
dec
or
sbb
push
xlat
es
xchg
shr
pop
adc
mov
sbb
aas
mov
xchg
inc
test
int
(bad)
xor
test
in
inc
sbb
xchg
inc
push
stos
mov
xor
inc
sub
stos
shr
rcl
add
out
ins
ins
stos
mov
ins
jmp
in
pop
(bad)
mov
adc
add
xchg
jl
cs
jae
cld
repnz
jp
aaa
ror
xor
cmc
hlt
in
pop
ds
cmp
fst
push
movs
sub
sahf
retf
pop
ret
jmp
mov
stc
dec
in
out
xchg
data16
mov
sub
(bad)
loop
test
test
rol
jns
fcomp
dec
add
push
cmp
jns
push
clc
fs
pop
inc
arpl
adc
ins
xchg
xor
ret
or
pop
mov
jg
adc
jne
cmp
loopne
cmps
cmps
mov
in
xchg
je
add
cmp
cs
(bad)
out
movs
stos
push
sahf
jbe
icebp
dec
shr
stos
fstp
cmp
add
fnstcw
xor
daa
sbb
nop
enter
xor
loopne
ret
sahf
ret
add
xchg
jb
jnp
mov
adc
mov
pop
int
loope
sar
pushf
mov
jle
icebp
arpl
fnstsw
mov
inc
sub
xchg
sti
addr16
adc
cs
lods
aam
in
adc
xor
sbb
push
jmp
ins
int
dec
cwde
pusha
movs
rcl
xor
xor
push
pushf
fwait
lods
iret
call
arpl
imul
sbb
adc
shl
sbb
retf
sub
sub
seta
inc
pop
add
inc
pop
xchg
fldenv
mov
mov
mov
idiv
dec
or
push
jnp
outs
ret
fisubr
fnsave
imul
int
dec
movs
xchg
dec
cdq
popa
jp
(bad)
push
xlat
js
inc
mov
mov
mov
jg
jmp
fdiv
mov
lds
lea
shl
adc
mov
sub
bswap
jle
push
inc
cmp
push
imul
mov
lock
mov
jg
sar
pop
leave
cmp
sbb
xor
ja
ret
sbb
test
xor
call
jnp
or
push
sbb
ror
and
ficom
pop
xchg
jge
mov
adc
ror
push
jbe
sbb
mov
dec
mov
jecxz
imul
jo
cld
sub
test
shl
push
cwde
push
jle
cld
xor
push
ins
stos
outs
es
push
enter
adc
mov
call
mov
mov
iret
int3
in
scas
fidivr
jecxz
jmp
stos
jg
ret
loopne
jmp
out
cmc
mov
call
fs
xor
popf
pusha
sub
mov
movs
lods
mov
mov
push
adc
pop
(bad)
loope
outs
test
addr16
mov
js
loope
adc
ss
les
(bad)
in
or
cld
inc
push
ins
imul
shl
or
mov
das
loope
cmp
std
mov
jnp
bound
lods
retf
xchg
push
sub
retf
icebp
cld
or
push
addr16
stos
inc
xchg
pop
pop
sub
pop
pop
sub
mov
push
(bad)
mov
jbe
sbb
inc
fldcw
pushf
pop
shl
je
loop
inc
jl
cmp
iret
xor
xor
dec
and
fsub
loop
scas
cmc
xor
out
jb
xor
cli
aam
jmpw
test
sbb
and
sub
data16
pop
and
movs
dec
int
out
cwde
leave
push
scas
dec
cmps
pop
test
pop
dec
xchg
mov
dec
sub
or
mov
repz
out
add
clc
mov
addr16
xchg
fcomi
cmps
push
xchg
jb
pop
jns
cwde
fld
cdq
mov
cmp
imul
iret
pop
xchg
jle
je
jnp
inc
test
test
mov
xor
test
call
je
xor
mov
mov
fisubr
push
(bad)
mov
mov
mov
pop
xchg
jmp
fsubrp
jb
adc
ss
add
xchg
push
or
neg
mov
adc
test
inc
mov
popf
lock
fsubr
out
mov
add
pop
and
push
sub
mov
mov
push
jae
out
sub
add
(bad)
movs
push
inc
ss
movs
cli
lahf
(bad)
test
jb
xor
pushf
inc
xchg
dec
inc
fcomp
and
ret
inc
push
mov
sbb
ss
push
mov
pop
(bad)
shl
inc
mov
pop
adc
mov
in
sbb
addr16
adc
cmp
les
sub
into
inc
inc
pop
aas
adc
sub
cmp
jnp
adc
jp
adc
(bad)
and
adc
ja
and
pop
fsubr
inc
fisub
cmp
cli
cmp
jle
clc
jno
jnp
fwait
or
dec
aas
adc
imul
mov
sub
xor
dec
sub
push
rol
popf
addr16
iret
iret
push
fsub
fidivr
or
cmp
bound
xor
repz
enter
jl
movs
lods
inc
lods
mov
retf
(bad)
js
mov
jmp
pop
adc
mov
fwait
lods
dec
mov
clc
xchg
mov
sahf
cmc
jg
adc
fbstp
xchg
jecxz
sbb
fldcw
jae
xchg
and
xor
jo
rcr
jmp
dec
sti
adc
aas
or
xlat
dec
pop
cmps
enter
xchg
(bad)
daa
xchg
push
(bad)
sar
into
hlt
jno
jno
inc
sbb
(bad)
fidivr
mov
mov
xor
sbb
sahf
and
mov
nop
out
adc
shl
(bad)
xor
in
pop
cmp
xchg
mov
sub
mov
int
test
or
imul
sbb
and
mov
test
dec
adc
addr16
push
mov
jge
fistp
stc
fidivr
push
mov
ret
dec
sub
push
lea
inc
mov
add
imul
push
xchg
rol
pop
jbe
mov
xor
popf
jns
dec
scas
jg
or
mov
mov
sub
scas
jmp
neg
jbe
adc
xchg
(bad)
daa
push
stc
sbb
mov
call
push
jmp
lds
mov
mov
into
xchg
push
mov
stos
pop
mov
ins
xor
xchg
mov
and
shl
xchg
cmp
scas
or
leave
and
loope
cmps
push
xlat
sub
std
sub
dec
dec
mov
ins
mov
jl
sti
int
sub
hlt
test
xchg
cmp
ins
clc
push
mov
(bad)
push
inc
push
inc
and
jl
mov
xchg
ss
shr
arpl
sub
add
(bad)
hlt
push
aam
push
stc
outs
movs
daa
xor
fbstp
(bad)
js
cmps
repz
mov
and
mov
jle
call
or
pop
cmp
mov
sub
or
mov
call
mov
and
icebp
or
out
and
stc
mov
mov
mov
xchg
jmp
xor
push
push
dec
mov
lea
dec
xchg
mov
test
cmc
mov
xchg
icebp
imul
pusha
mov
leave
add
jmp
push
add
movs
cmp
retf
nop
xor
or
sbb
push
xchg
out
pushf
sub
pop
sub
push
sbb
data16
and
imul
cmps
jmp
mov
std
ja
push
mov
stc
xchg
nop
pop
stos
in
xchg
jns
and
adc
inc
movs
mov
sub
mov
add
shr
adc
leave
outs
ja
test
mov
out
mov
xchg
and
push
mov
sbb
or
sbb
add
mov
pop
cmp
xor
(bad)
adc
js
clc
xchg
or
out
mov
jnp
jns
jo
cmp
(bad)
dec
mov
test
(bad)
xor
ja
lock
push
imul
int3
push
ds
ins
and
pop
aaa
scas
adc
mov
repz
xchg
out
fist
mov
xchg
jecxz
data16
push
dec
sub
adc
add
jae
popa
movs
mov
sbb
mov
popa
dec
aaa
ds
enter
jecxz
inc
and
dec
mov
jno
push
repnz
cmp
mov
loop
loopne
mov
pop
dec
xchg
mov
f2xm1
cmp
mov
inc
push
xchg
retf
dec
cmps
sbb
xchg
add
and
dec
dec
mov
movs
mov
mov
pop
mov
mov
jne
inc
pop
push
and
addr16
inc
cld
fs
inc
mov
push
cmps
adc
clc
jno
adc
loope
ins
sub
adc
in
push
jg
push
imul
das
mov
dec
ins
mov
xor
sahf
enter
std
repnz
mov
in
(bad)
mov
data16
ret
sub
xor
sbb
movs
ficomp
aas
movs
les
xlat
mov
scas
add
mov
mov
inc
pop
gs
push
(bad)
(bad)
sbb
fwait
loop
cwde
comiss
inc
test
test
not
fldenv
adc
mov
push
and
fcom
or
pop
or
push
ds
loop
test
adc
adc
adc
lahf
push
ins
jge
sub
in
in
and
mov
in
pop
es
pop
jmp
pop
std
inc
jmp
cmc
jmp
or
xchg
sub
dec
cli
cmp
pop
and
pop
scas
pushf
call
aas
call
cmp
and
out
loopne
icebp
ficom
dec
test
aam
push
add
out
mov
adc
mov
bound
cmps
mov
in
adc
jge
hlt
aas
outs
outs
xchg
out
inc
xchg
xchg
cmovae
adc
lds
push
jbe
adc
arpl
jmp
popa
scas
cmp
mov
addr16
push
enter
mov
vmovups
mov
pop
stos
inc
xor
xor
push
pop
ins
call
inc
stos
jae
es
jnp
bound
mov
cmp
xor
mov
jno
cmp
mov
(bad)
inc
mov
cmp
mov
pop
push
add
aas
inc
xor
jae
inc
cmp
test
cmp
cmp
aaa
test
sbb
addr16
movs
fidiv
inc
pop
(bad)
imul
lea
adc
adc
clc
mov
xor
call
push
pop
sub
mov
fisubr
jae
ins
cld
es
gs
push
test
in
les
jl
sub
pushw
pop
daa
imul
xor
jp
xchg
cli
popf
clc
mov
pop
int
mov
sbb
dec
adc
mov
aas
arpl
(bad)
adc
gs
mov
cmp
das
test
rol
jge
xlat
outs
mov
mov
shl
imul
and
loope
pop
jb
fidiv
fcmovne
ins
jmp
push
pop
push
cmp
cli
or
bound
in
cmp
jne
mov
(bad)
daa
sbb
mov
idiv
sub
adc
js
or
gs
imul
les
imul
jl
adc
(bad)
addr16
jae
lahf
mov
sub
inc
sub
jg
mov
push
call
adc
mov
mov
dec
inc
sub
push
test
sar
inc
dec
push
sbb
ins
pusha
dec
(bad)
mov
mov
xchg
ficom
and
jns
arpl
jnp
mov
xlat
and
cmp
xchg
nop
stos
fld
push
outs
or
repz
jne
jns
pop
sahf
xlat
in
in
cmp
imul
mov
loop
push
mov
outs
outs
(bad)
scas
mov
pop
pop
sub
mov
mov
ss
outs
mov
or
jmp
out
out
aad
dec
bound
inc
mov
adc
movs
loope
popa
imul
sub
push
sub
rcr
xchg
mov
aas
clc
fadd
fwait
not
(bad)
in
(bad)
int
lahf
mov
adc
int3
jmp
(bad)
or
iret
cmps
aas
in
aas
int
bnd
add
movs
bound
dec
jno
pop
jp
jns
xor
dec
aaa
inc
cmp
outs
push
jmp
inc
pop
inc
aad
fstp
call
or
call
mov
and
loope
mov
push
adc
mov
and
outs
push
enter
lods
dec
rol
xchg
gs
lods
push
dec
push
inc
mov
dec
xchg
sti
dec
test
cmp
xor
jge
mov
test
xor
and
das
mov
add
dec
mov
shl
jmp
lea
loope
sahf
mov
sbb
push
jo
mov
cmps
jge
jg
add
xor
push
xor
outs
or
push
mov
jns
call
popf
push
adc
cs
icebp
mov
push
and
mov
push
enter
stc
mov
retf
inc
test
push
mov
pop
mov
dec
mov
push
ins
cmp
pushf
movs
jbe
mov
fsub
add
clc
xlat
mov
pushf
nop
mov
out
cmp
dec
pusha
je
mov
xchg
sti
push
fst
int
push
fld
hlt
cli
sar
sbb
or
xor
ret
mov
sub
ror
mov
loope
xchg
rol
mov
mov
ja
jbe
mov
xlat
retf
mov
mov
lods
loop
enter
loop
lds
or
add
xchg
loopne
xchg
lock
iret
xchg
mov
cmp
shr
das
sbb
inc
fs
dec
test
enter
addr16
inc
cdq
sbb
outs
dec
data16
add
out
mov
push
sahf
pop
arpl
inc
mov
scas
arpl
jge
jle
cwde
push
cmps
and
pop
mul
imul
mov
imul
cmc
ins
cmps
mov
inc
cmp
jo
rol
test
cld
jb
sub
cmp
or
popa
lods
(bad)
sbb
repnz
inc
mov
push
mov
mov
jne
pop
rcl
add
inc
std
inc
pop
sbb
les
push
and
into
(bad)
pop
aas
mov
cld
nop
(bad)
cmp
test
mov
in
sub
mov
pop
aas
es
outs
(bad)
push
repnz
adc
sub
cmp
adc
cdq
fimul
cld
ficom
inc
dec
outs
adc
call
test
xchg
adc
mov
jb
aam
je
call
loopne
aaa
jae
mov
mov
push
movs
dec
jmp
push
retf
jmp
cmps
and
sbb
sahf
aad
mov
push
push
into
outs
aad
bound
add
sub
xchg
mov
jbe
cmc
aas
or
dec
dec
mov
bswap
sbb
dec
out
stos
add
shr
add
push
or
mov
and
xchg
dec
outs
(bad)
scas
retf
xchg
or
data16
xor
das
adc
sub
cmc
out
iret
(bad)
aad
mov
dec
jb
(bad)
xchg
sub
push
pop
xchg
popf
and
mov
mov
add
pop
(bad)
popf
mov
cmc
pop
pop
das
pusha
jno
stos
rcr
adc
lahf
push
das
xchg
sub
dec
scas
imul
movs
test
int3
jb
dec
(bad)
mov
scas
sar
push
jo
ret
cmp
xor
scas
jnp
xchg
icebp
sbb
and
mov
and
jle
inc
pop
add
push
xchg
jno
ror
pop
jp
stos
outs
adc
fnstcw
test
int
stc
pop
mov
sub
sub
arpl
sub
(bad)
mov
stc
add
and
cmp
cmps
mov
or
inc
scas
js
std
dec
push
and
aaa
xchg
inc
push
es
jmp
int3
cmps
jno
jl
jg
bound
imul
lods
enter
and
call
shrd
push
nop
mov
aam
ja
ss
rcl
fs
and
test
xchg
xchg
ins
add
loope
nop
xlat
pop
(bad)
scas
xlat
sub
sbb
lea
sub
or
ret
mov
fidiv
loopne
push
sub
cmp
(bad)
pop
or
jge
fdivr
mov
cld
inc
and
and
jnp
imul
loop
retf
add
mov
adc
jbe
(bad)
aas
adc
mov
or
cmp
xor
nop
jecxz
and
push
dec
rol
push
mov
cs
shl
push
fimul
(bad)
cmp
cmp
aas
mov
jecxz
xor
mov
arpl
xor
shl
add
and
push
out
jmp
call
mov
add
push
push
sbb
mov
data16
dec
adc
cmp
mov
dec
push
adc
sbb
add
test
cmps
into
mov
or
or
push
sbb
cmp
add
adc
ret
call
call
mov
jp
call
(bad)
lgs
adc
mov
lea
in
mov
fstp
cmp
call
push
out
enter
xchg
leave
ins
push
dec
lahf
dec
inc
(bad)
aad
pusha
pop
xor
adc
cmc
adc
push
cmp
xchg
cli
lods
test
into
mov
xlat
mov
cmps
cwde
je
ins
lods
movs
sbb
and
inc
mov
and
xchg
es
mov
(bad)
jmp
outs
lock
push
fist
inc
mov
pop
mov
cmp
lods
scas
push
shl
sbb
in
sar
mov
sbb
sbb
jmp
call
dec
scas
out
sub
shl
iret
retf
aam
loopne
ins
mov
sub
xchg
dec
out
and
and
push
fs
cwde
inc
push
repz
jge
aaa
mov
rcl
iret
nop
push
mov
retf
mov
and
fwait
pop
jnp
jnp
aam
pushf
in
dec
clc
(bad)
ins
push
jo
add
dec
mov
stc
sub
sbb
arpl
out
sub
js
popa
outs
dec
push
stos
adc
std
ret
pop
jecxz
adc
data16
(bad)
mov
test
cli
cmp
popa
push
aaa
iret
pop
xor
movs
mov
rcr
xchg
cmc
pop
cli
sbb
shl
xchg
icebp
gs
and
fwait
xor
jp
bound
call
mov
xlat
sub
dec
pop
push
add
lods
data16
mov
mov
dec
and
dec
mov
into
retf
adc
push
push
repz
les
imul
aaa
or
jge
sbb
in
add
nop
mov
mov
int
retf
dec
loope
xchg
jnp
inc
sbb
lahf
xchg
xchg
cwde
shl
push
jle
pushf
pop
sar
cli
(bad)
pop
mov
jno
(bad)
xor
mov
jmp
mov
adc
jnp
(bad)
popa
imul
dec
sbb
out
icebp
sbb
shr
pop
test
fs
aam
ja
ret
in
aaa
mov
pop
xchg
ficom
std
push
sub
lock
xchg
cmps
scas
mov
cmp
out
sbb
int
aas
mov
shr
push
jmp
jae
pop
cli
mov
in
sbb
imul
xor
popf
out
mov
ins
jno
fdivr
sti
jmp
enter
pop
jae
xlat
ds
imul
ficomp
outs
outs
jno
inc
inc
push
pusha
repnz
cmp
xor
pushf
dec
mov
add
xor
out
mov
push
fsub
ins
in
mov
and
into
scas
ss
in
pop
dec
inc
jmp
mov
repnz
shl
sbb
pop
inc
mov
aad
imul
test
je
xlat
sbb
bound
out
rcr
dec
fiadd
lods
xchg
sbb
jge
rol
mov
add
out
repz
sbb
loop
shl
icebp
aad
sbb
mov
leave
jg
push
fs
aaa
pop
out
inc
int
sahf
movsx
(bad)
jle
aam
mov
rcr
cld
int
xchg
mov
dec
or
mov
mov
cmp
data16
adc
sbb
inc
int3
xchg
pop
mov
mov
imul
shl
inc
cwde
fstp
sub
sub
stos
addr16
push
inc
sahf
popa
mov
loopne
imul
pop
and
cmp
dec
(bad)
xchg
push
mov
and
mov
xchg
loopne
jns
sbb
mov
add
mov
jmp
mov
es
in
fmul
xchg
std
mov
iret
and
add
int3
add
mov
jl
mov
mov
jmp
ret
add
gs
movs
cmps
adc
dec
stos
xchg
and
dec
push
mov
cdq
inc
ret
pop
shr
mov
pop
adc
jne
fcom
ss
fnstsw
js
sbb
cli
(bad)
cs
fist
(bad)
add
cld
fs
push
lahf
(bad)
xor
aaa
push
adc
xchg
jbe
fdivr
loop
mul
sbb
pop
xor
add
or
fidiv
xor
std
mov
test
hlt
mov
ror
repnz
mov
idiv
mov
add
fstp
popa
push
mov
pop
or
adc
push
arpl
rol
adc
adc
mov
pop
push
movs
mov
icebp
xlat
or
imul
dec
cmp
nop
repnz
int3
(bad)
xchg
icebp
and
fsub
and
inc
push
mov
xchg
inc
xor
xchg
rol
pop
cmp
push
(bad)
js
pusha
sar
cli
sar
ins
cmp
push
pop
pop
rcl
loop
mov
dec
popf
push
repz
push
xchg
stos
mov
mov
in
jnp
mov
scas
pop
mov
addr16
sbb
inc
ds
sbb
cmc
mov
push
sti
lods
push
cmp
mov
fwait
(bad)
jb
fidivr
gs
retf
sbb
and
enter
pop
sahf
shl
je
push
inc
pusha
adc
and
push
sub
sub
mov
je
ror
add
jmp
test
inc
fmul
xor
sbb
sbb
pop
adc
xchg
sub
inc
inc
push
jmp
pop
push
rol
cld
sub
ror
movs
mov
dec
ss
neg
xchg
inc
adc
loop
mul
cmp
add
sar
cmc
push
stos
or
popf
fbld
sub
aas
sub
aad
mov
test
mov
test
js
mov
shr
dec
test
push
and
adc
dec
and
popa
adc
jmp
stos
jle
movs
mov
xlat
xor
ja
retf
and
dec
fwait
mov
xor
sbb
or
lods
test
jmp
push
and
aas
clc
pop
outs
lods
mov
jecxz
ja
addr16
add
ins
mov
or
jae
pop
je
(bad)
jmp
dec
pop
pop
fbstp
cmp
mov
sti
adc
das
(bad)
daa
jg
sbb
cmp
imul
and
sbb
aaa
mov
or
jae
adc
sti
push
jns
mov
adc
pop
and
pop
mov
scas
popa
sub
call
scas
mov
mov
sub
mov
adc
mov
in
sub
rol
xor
(bad)
shl
pushf
add
mov
mov
pop
push
stos
xlat
stos
xchg
unpcklps
call
xchg
inc
sti
mov
pop
or
lds
inc
dec
mov
icebp
call
(bad)
cmp
stos
scas
aam
pop
(bad)
fldcw
loope
xor
mov
sub
or
or
(bad)
jecxz
out
jae
pop
jmp
or
cmp
mov
fistp
fld
or
rcr
loopne
stos
adc
sbb
push
inc
mov
gs
jg
call
xchg
jp
push
and
pop
loop
adc
jle
push
xchg
sbb
pushf
data16
inc
push
ret
or
sahf
cmp
xchg
ja
xchg
into
adc
push
(bad)
jns
pop
mov
jb
jne
scas
xchg
repnz
daa
rcr
xlat
xor
mov
cmp
add
ret
pushf
mov
ds
inc
xor
push
jae
mov
mov
sbb
fmul
mov
push
outs
push
call
lahf
mov
add
jp
xor
lods
cmp
mov
jp
int
jmp
(bad)
loop
out
fcomip
inc
lods
sub
push
pusha
or
jmp
pop
test
mov
imul
or
stos
cmps
xor
fidiv
dec
in
mov
pop
xchg
(bad)
fdivr
sub
and
rol
sub
mov
adc
popa
jb
iret
or
inc
jecxz
retf
test
mov
mov
mov
fxch
shl
test
mov
inc
vhsubps
add
cld
push
mov
or
xor
cmc
mov
pop
inc
bound
push
test
addr16
jb
(bad)
jmp
popf
sbb
fistp
jg
add
mov
pop
or
cmp
push
shr
movs
push
(bad)
stc
cwde
fld
xor
xchg
xchg
call
or
mov
mov
out
imul
mov
add
jo
lock
das
or
aas
inc
and
movs
ins
push
ins
clc
sbb
mov
xchg
sbb
scas
add
inc
mov
ja
cmp
cmps
movs
and
aad
cmp
inc
dec
mov
imul
stc
adc
push
shr
pop
or
fist
xchg
xchg
inc
sub
call
dec
jle
mov
push
lahf
scas
jmp
rol
inc
pushf
xchg
add
jp
jo
sub
mov
push
push
rcr
mov
in
ror
xchg
daa
inc
ins
xor
mov
in
sub
jmp
mov
sbb
idiv
inc
aad
jmp
dec
out
pop
int3
sub
fst
push
and
(bad)
outs
test
(bad)
sub
stc
es
loop
and
imul
dec
loopne
pushf
mov
push
sahf
or
mov
push
cmps
(bad)
loop
mov
pop
push
shl
jbe
outs
inc
xchg
push
popf
cmc
aam
enter
pop
pop
mov
je
(bad)
fcom
cmp
sbb
inc
leave
bound
imul
je
adc
jns
jo
adc
push
cdq
xchg
cmps
mov
out
hlt
popa
or
sub
push
rcl
idiv
sub
repnz
sbb
cld
jg
arpl
mov
frstor
adc
repnz
push
xor
out
mov
data16
dec
mov
mov
jnp
mov
fs
cmp
mov
aam
movs
popf
xchg
xchg
push
sub
pop
mov
sahf
fadd
ret
mov
jns
sahf
pop
ds
xchg
inc
jne
xchg
push
mov
(bad)
daa
test
movs
dec
sub
sub
push
jle
pop
cmp
data16
push
in
bound
je
add
xor
dec
in
repz
lods
mov
mov
cmp
pop
retf
addr16
ja
adc
dec
mov
sub
fiadd
sbb
inc
loopne
xchg
lods
jmp
pop
mov
mov
loope
mov
pop
fimul
sub
cmp
ror
dec
cs
pop
ds
fld
in
cmp
adc
push
in
push
cmps
int3
jnp
dec
and
in
ins
pop
and
aas
mov
cmp
xchg
push
std
jp
xchg
mov
ret
cmp
xor
out
xchg
imul
mov
mov
out
test
or
imul
mov
(bad)
cmp
sub
mov
out
xchg
pushf
gs
inc
add
out
imul
inc
lds
jecxz
pop
pop
push
ret
adc
dec
stos
inc
mov
adc
add
xchg
lea
add
xchg
(bad)
mov
fsubr
gs
mov
jl
and
arpl
rcr
pushf
mov
jl
xor
cmp
cmps
shl
pop
push
sbb
mov
jle
mov
movs
add
out
std
icebp
mov
dec
scas
sbb
scas
cld
pop
jl
ss
jae
out
lahf
imul
out
ins
sub
mov
fadd
fwait
lea
ins
repz
sbb
imul
fcmovnb
in
dec
add
sub
inc
mov
(bad)
mov
adc
daa
cmps
pushf
push
mov
cmp
add
inc
sbb
pop
push
(bad)
jmp
add
fistp
inc
jns
jle
daa
fcomp
or
jmp
fcompp
and
inc
(bad)
iret
jmp
lods
push
xlat
add
lea
jnp
cmp
(bad)
sbb
pop
jno
out
push
xchg
pop
jno
hlt
pop
push
jbe
in
fdivr
or
ins
inc
fwait
xor
jmp
cmp
mov
into
adc
add
or
mov
pop
in
les
push
sbb
or
shl
outs
jg
scas
mov
inc
cmp
add
fidivr
jmp
ss
mov
or
mov
push
or
out
fisttp
jp
mov
xor
test
outs
xor
addr16
in
dec
hlt
xchg
scas
scas
adc
push
xor
test
aas
push
cmps
in
call
test
jne
jmp
cmp
push
ret
jp
xchg
(bad)
mov
out
lea
fist
jmp
scas
ss
mov
pop
jmp
xchg
out
mov
sbb
nop
shr
leave
iret
or
mov
mov
sbb
pop
jp
sahf
(bad)
adc
xchg
jnp
cwde
outs
sbb
push
inc
and
in
bound
push
outs
dec
repz
ret
ret
arpl
(bad)
mov
aaa
shl
stc
and
scas
cmps
aam
sub
icebp
adc
pop
fstp
push
fsubr
dec
mov
push
sub
(bad)
sub
dec
cmps
mov
and
cli
or
adc
cmp
dec
sbb
sbb
jbe
dec
retf
cmp
or
dec
xchg
(bad)
cmp
movs
and
adc
or
mov
enter
ins
retf
dec
std
xchg
push
inc
sti
dec
lods
ret
out
pop
fsubr
in
test
mov
pushf
xor
and
push
mov
and
(bad)
std
push
repz
fadd
adc
popa
rcr
jns
imul
push
pop
sbb
xchg
(bad)
xchg
retf
mul
cdq
aaa
rcr
push
jp
hlt
mov
mov
std
xchg
test
sti
std
cvtpi2ps
adc
test
dec
mov
xchg
inc
inc
add
pop
dec
cld
stos
add
jg
in
pop
pop
scas
pop
sub
xchg
leave
outs
fistp
scas
test
imul
pop
jp
mov
jnp
scas
and
push
out
mov
mov
outs
scas
adc
out
add
lds
lahf
and
js
jno
cmp
retf
jno
cs
sub
and
(bad)
or
les
ret
movs
daa
and
or
inc
xor
xchg
ins
daa
cli
mov
mov
add
rcr
hlt
stos
push
sub
scas
dec
dec
std
leave
jae
out
movs
push
aaa
jp
pop
bound
jnp
scas
pop
mov
push
adc
xchg
icebp
add
and
mov
or
sti
outs
pusha
aam
push
test
add
div
popf
add
inc
xchg
sub
mov
call
xor
jg
jp
rol
pop
xchg
call
push
gs
adc
std
in
es
mov
aad
sub
dec
cmp
mov
popf
mov
nop
shl
mov
dec
pop
test
mov
sbb
into
and
in
fnstcw
or
stc
(bad)
pop
fisttp
dec
mov
inc
out
aaa
cmp
and
sbb
sbb
mov
addr16
fcomp
xchg
in
inc
pop
std
test
xchg
pop
inc
lock
and
xlat
mov
jae
add
neg
ror
stos
les
pushf
sar
dec
fs
jecxz
clc
(bad)
sbb
cmps
jl
pop
aaa
or
sbb
sub
loope
adc
mov
ror
push
outs
adc
cli
outs
inc
retf
sti
xchg
(bad)
fcomp
sti
fstp
int3
cmp
jle
je
loope
mov
sar
pop
pushf
(bad)
shr
aaa
lock
js
stc
mov
pop
pop
ss
adc
ins
adc
push
inc
dec
adc
xchg
iret
(bad)
cmp
(bad)
jmp
pusha
imul
jmp
pop
mov
imul
xor
out
jg
jmp
loope
inc
mov
push
(bad)
lock
add
jecxz
jl
fstp
(bad)
into
and
(bad)
or
std
ficomp
rol
mov
adc
or
dec
jo
pop
xor
mov
cmp
mov
fisubr
adc
or
dec
sub
mov
mov
jl
fsub
mov
mov
in
push
movs
dec
add
retf
push
imul
mov
mov
aaa
jnp
cmp
popa
xchg
and
mov
(bad)
aas
enter
adc
icebp
inc
shl
cmp
xchg
or
push
adc
test
inc
push
pop
xchg
xor
lds
pop
ficomp
mov
loopne
mov
add
xlat
(bad)
lds
mov
push
in
sar
adc
jle
leave
mov
call
inc
pushf
addr16
int
mov
loope
leave
mov
mov
jb
mov
push
fs
jl
outs
std
inc
pop
inc
outs
dec
test
imul
ror
push
add
dec
pop
ss
in
in
fwait
xlat
xor
and
rcr
xor
push
and
mov
and
inc
test
pusha
(bad)
mov
pop
aam
enter
add
je
dec
lods
retf
push
jle
inc
daa
retf
in
and
loop
or
cwde
addr16
(bad)
enter
mov
sbb
gs
adc
pop
mov
xchg
retf
pop
and
(bad)
aaa
sbb
in
push
dec
mov
into
jl
and
jmp
pop
push
ins
add
xor
push
dec
(bad)
jbe
cmp
lea
mov
mov
loopne
inc
out
adc
cli
leave
mov
pop
jb
arpl
movs
cmps
cmps
imul
repz
sahf
or
(bad)
imul
mov
jp
mov
push
aam
ja
mov
mov
cdq
loope
fwait
sub
outs
loopne
jns
xchg
pop
sub
out
mov
(bad)
ja
je
ins
mov
sbb
sub
jge
push
ja
out
aam
mov
in
push
sti
clc
push
xor
or
fbld
add
aas
mov
add
xchg
call
enter
adc
inc
push
stos
mov
fisubr
ror
sub
mov
(bad)
jmp
mov
jae
push
les
or
sub
inc
mov
dec
stos
inc
repnz
and
mov
out
jae
dec
push
popa
out
(bad)
jae
int
mov
xor
imul
cmp
mov
std
jnp
enter
lock
mov
or
aam
shl
movs
sbb
call
jmp
and
int3
test
popa
ret
add
nop
jmp
dec
xchg
addr16
shr
and
and
imul
mov
aad
push
jmp
sub
sti
sti
int3
in
lds
jae
ss
adc
xchg
push
mov
loopne
add
dec
call
xchg
or
jg
jae
imul
push
mov
pop
jo
fcom
mov
and
xlat
ret
addr16
icebp
mov
call
stos
scas
and
jg
(bad)
jno
sbb
push
rol
das
pop
sub
arpl
dec
xor
aaa
adc
arpl
fmul
adc
pushf
dec
ror
int
hlt
sbb
out
mov
movs
movs
call
pop
(bad)
nop
stc
mov
sbb
push
or
les
sbb
cli
push
sub
(bad)
push
hlt
push
lahf
jmp
or
das
ror
and
pop
mov
clc
adc
fadd
dec
xor
inc
out
pop
jmp
and
ret
mov
pop
adc
push
push
add
popa
movs
cs
push
data16
test
mov
imul
mov
cmp
and
ins
xchg
mul
pop
push
mov
loope
mov
jg
and
and
ficomp
adc
ret
(bad)
aam
dec
add
mov
add
or
pop
out
in
mov
pop
fistp
xchg
aas
mov
es
lahf
inc
into
leave
add
mov
push
mov
mov
add
ficom
call
lods
jge
jle
sub
(bad)
and
call
or
les
mov
jle
pop
es
xor
cld
mov
outs
popa
lods
sbb
sub
sbb
sub
inc
les
pusha
in
cmp
cs
inc
xor
adc
cmc
aas
add
xchg
xor
outs
adc
aas
cmp
cld
jno
xor
xor
ficomp
and
mov
shl
pusha
sbb
xchg
add
mov
out
sub
dec
lods
mov
dec
cli
js
loope
add
test
push
jle
dec
in
sti
ins
call
repz
dec
cmps
jmp
xchg
test
shl
movs
add
out
test
clc
stos
sub
es
and
cmp
sbb
out
adc
sahf
push
adc
out
push
cld
shl
shl
mov
dec
add
jle
jbe
inc
xor
mov
mov
jl
pop
pop
sub
dec
fist
mov
or
or
jle
mov
dec
and
stos
aad
mov
cmp
(bad)
(bad)
push
sti
cmp
popa
push
inc
dec
shl
adc
lock
adc
xor
sbb
inc
inc
bnd
clc
jns
mov
jno
fldcw
push
mov
pop
pop
iret
ss
jbe
leave
aad
pushf
inc
xor
mov
in
mov
retf
adc
sbb
xor
loop
fdiv
daa
jno
mov
scas
push
xchg
retf
fcomp
and
data16
cmc
repz
ins
ds
sbb
or
leave
ror
inc
pushf
popa
scas
xor
aad
ret
dec
or
jecxz
test
pop
iret
adc
inc
and
arpl
fwait
push
xchg
fcomp
ds
jae
jmp
pop
in
mov
xchg
movs
nop
aam
imul
popa
sub
adc
clc
fisub
mov
js
nop
out
sbb
mov
mov
icebp
movs
es
daa
dec
arpl
mov
repz
aas
out
inc
mov
pop
jne
js
arpl
push
mov
fimul
sub
inc
cmp
hlt
xor
jmp
das
mov
cmp
mov
out
cmps
or
dec
dec
pusha
xor
pop
cmp
mov
aam
push
xor
mov
aad
adc
ret
add
(bad)
mov
pop
sbb
adc
stos
daa
lods
aas
js
pop
pop
pop
aam
xchg
hlt
pushf
sbb
(bad)
popa
test
lea
mov
stos
adc
mov
cmp
ret
es
or
jl
fisttp
movs
sub
mov
das
jle
mov
dec
mul
dec
xchg
(bad)
out
cmps
(bad)
jle
push
mov
pushf
sub
sub
pop
cwde
mov
lock
cld
add
xchg
call
push
inc
fstp
int
sbb
iret
jl
arpl
xor
push
dec
js
add
jns
dec
jg
(bad)
sbb
pop
pop
es
push
inc
fwait
std
les
int3
mov
sub
mov
clc
xlat
fdivr
(bad)
push
cli
dec
sub
dec
jne
test
test
xchg
repnz
loop
add
xor
fldenv
and
jmp
inc
jmp
push
fs
bound
out
pop
mov
mov
mov
ins
ja
push
jbe
mov
cmc
mov
mov
jb
hlt
push
jbe
dec
or
pop
sar
cdq
xchg
mov
outs
inc
pop
xor
ret
and
ror
xor
lahf
cmp
in
xchg
cmp
aam
mov
add
je
loope
mov
xor
repz
imul
or
imul
lds
xor
retf
sbb
std
test
(bad)
mov
in
adc
or
fcomp
dec
inc
jg
(bad)
cmp
mov
clc
pop
aas
test
jmp
aam
push
rcr
in
jecxz
push
das
mov
aas
scas
or
stc
(bad)
repnz
pop
int
jbe
loopne
es
xlat
xchg
cmps
retf
ss
jnp
cmp
xor
push
xor
mov
js
and
lods
mov
inc
movs
xchg
mov
mov
test
mov
stos
repnz
rol
cwde
adc
jo
lock
jge
sub
shl
pop
and
xor
call
mov
sub
adc
jnp
fistp
mov
cmc
or
cli
popa
pop
fst
pop
cdq
loope
(bad)
or
add
pop
dec
cmp
ds
jmp
mov
aaa
sub
sub
movs
call
int3
stc
std
push
into
cs
les
mov
mov
ins
cmps
sbb
and
fadd
inc
cli
push
loopne
dec
pop
mov
sbb
pop
push
cmp
cli
mov
jge
pop
pop
sbb
or
dec
mov
mov
or
dec
push
retf
loope
inc
dec
in
or
and
jp
int3
movs
hlt
adc
jno
imul
ss
jle
vpsrlw
xchg
sbb
cmp
call
in
jo
xor
inc
dec
loope
in
or
cmp
cwde
push
sub
inc
jae
xchg
cmps
inc
call
outs
jge
adc
cmp
rol
push
scas
dec
pusha
lods
xlat
cmp
bound
sub
fcomp
inc
in
sub
sub
adc
xchg
jo
in
aam
in
in
je
push
adc
jmp
xchg
sub
inc
xor
fdiv
dec
ds
imul
push
aad
mov
rcl
ss
imul
or
jg
xchg
dec
mov
and
aaa
cdq
push
shl
and
jb
inc
push
add
jp
xor
clc
ss
test
movs
xchg
out
inc
xchg
jno
mov
fdiv
js
cli
outs
xlat
push
sbb
mov
jmp
pop
mov
std
out
mov
cmp
std
add
out
xor
cmp
xor
repnz
and
lock
mov
repz
sub
out
mov
mov
mov
jecxz
iret
xchg
aas
inc
or
enter
xchg
or
jmp
xchg
aam
or
loope
test
mov
dec
dec
push
add
xchg
mov
lods
sub
sbb
push
sub
popf
mov
cs
or
adc
in
jo
jno
(bad)
mov
pop
cmp
adc
outs
out
fdivr
and
add
jmp
jns
iret
fisubr
out
cmc
cs
jecxz
add
imul
mov
mov
pop
mov
out
push
mov
cs
mov
jp
dec
shl
mov
in
add
jge
(bad)
cmc
pop
inc
jns
push
pop
(bad)
div
mov
jecxz
aas
cld
jmp
movs
outs
push
add
xor
scas
in
mov
jmp
outs
mov
mov
add
jg
jp
add
mov
mov
daa
sbb
clc
fsubr
retf
add
mov
dec
(bad)
jo
jle
sahf
cs
or
push
into
add
sub
out
push
dec
push
or
cmc
ror
cmp
movs
add
inc
inc
jecxz
sub
inc
icebp
xor
sub
movs
cmc
pusha
xlat
outs
mov
dec
add
and
adc
jecxz
mov
cmps
mov
add
pop
and
cmp
popa
jbe
(bad)
(bad)
cmp
mov
mov
inc
mov
jo
iret
(bad)
cmp
add
cdq
popa
jmp
les
(bad)
xchg
or
stos
hlt
or
pop
adc
xor
ror
outs
xor
cmp
add
and
xchg
add
or
ret
and
daa
sti
add
(bad)
xchg
es
out
mov
sbb
adc
(bad)
add
push
push
fdivp
sub
jbe
(bad)
aam
mov
push
inc
sub
clc
(bad)
stc
sub
mov
std
and
ds
fistp
pop
xor
mov
cli
fwait
jge
push
jge
push
or
mov
in
add
cwde
push
sti
push
fs
sar
mov
jnp
pop
sub
xchg
mov
mov
dec
cmp
pop
mov
or
js
cmps
sub
addr16
dec
mov
cmp
sub
push
imul
(bad)
sar
sbb
and
inc
mov
cs
sbb
sbb
ret
int3
mov
aad
push
or
jo
sahf
int3
nop
fiadd
mov
leave
mov
(bad)
fsubr
xchg
test
fcmovnbe
ds
call
lock
lock
repz
mov
mov
arpl
or
adc
rcl
pusha
push
mov
loopne
jmp
repnz
adc
cli
aam
mov
sub
repz
push
push
mov
or
sub
dec
retf
push
addr16
inc
cmp
imul
mov
fild
mov
and
inc
maskmovq
test
shl
sub
mov
retf
dec
sub
icebp
mov
dec
and
dec
(bad)
in
loopne
and
sbb
bound
sbb
sbb
lods
or
inc
lea
push
dec
shl
(bad)
aam
push
jge
jmp
jo
je
push
addr16
(bad)
sbb
cmp
pslld
call
fst
test
adc
lea
(bad)
pop
clc
adc
das
jp
jp
inc
in
lock
out
sbb
lods
bound
cmp
addr16
daa
xor
sbb
std
lds
and
aas
xchg
(bad)
sub
and
and
xor
xor
or
mov
xchg
sbb
pop
scas
dec
sahf
jnp
or
scas
xchg
jmp
sub
jmp
or
cmp
mov
sub
jmp
jno
or
test
inc
out
mov
popf
xor
or
(bad)
push
retf
sbb
inc
mov
les
rcr
cmp
sahf
sar
xchg
xor
lods
ffreep
arpl
push
cwde
xlat
push
xor
jge
imul
xor
fdiv
xchg
mov
pop
push
dec
inc
mov
mov
jno
mov
in
sub
mov
ins
ss
pusha
sbb
inc
enter
sar
mov
xor
jmp
sbb
jmp
test
mov
in
sbb
test
jmp
cwde
pop
int3
jle
add
rcl
add
xlat
fs
mov
mov
mov
push
mov
jmp
pop
(bad)
aad
popf
xor
lds
scas
out
icebp
je
shl
test
loop
mov
int3
in
stc
shr
sbb
arpl
mov
sbb
dec
add
xor
lods
loope
add
cmp
pop
popa
imul
push
loope
adc
dec
in
aaa
jne
data16
bound
dec
mov
(bad)
in
pop
cmp
cli
xchg
imul
jns
inc
out
dec
pop
sub
into
mov
(bad)
mul
jne
mov
dec
retf
jp
add
fadd
cmp
fwait
aam
cmp
push
addr16
rcr
fdiv
or
or
xchg
daa
repnz
ins
pop
icebp
jp
pop
aad
mov
or
aaa
xchg
popf
or
mov
adc
out
and
or
mov
and
inc
(bad)
xor
repnz
mov
iret
xor
(bad)
or
gs
outs
sub
xchg
xor
jl
sti
fdivr
cmp
aaa
mov
xor
mov
arpl
aam
cvtps2pd
enter
das
fisub
(bad)
sbb
test
pop
sub
(bad)
jae
adc
nop
clc
aas
aaa
mov
repz
xchg
sbb
push
in
add
repz
or
and
cld
test
add
pop
(bad)
movs
cmp
pop
fs
push
mov
push
mov
jnp
fld
fidiv
push
loopne
mov
xor
mov
jns
je
mov
pop
add
mov
sub
mov
push
xor
mov
outs
and
(bad)
lock
dec
jmp
push
or
sar
outs
imul
cmp
mov
xchg
fistp
add
cmp
aaa
cwde
push
jmp
pop
or
loop
mov
test
jecxz
xchg
dec
aam
dec
pop
mov
lods
sub
(bad)
mov
stos
xchg
push
dec
or
dec
inc
xchg
add
mov
push
sahf
dec
mov
repnz
mov
jb
adc
or
inc
mov
rcr
sbb
jo
jnp
test
outs
xor
cmp
cmp
xor
loope
jbe
cmc
ss
(bad)
js
int3
jns
stos
scas
ret
mov
movs
xchg
scas
retf
cmp
(bad)
add
push
add
dec
dec
adc
icebp
test
push
sub
mov
inc
push
sbb
lods
call
test
(bad)
clc
push
ja
sub
stos
push
repnz
mov
push
push
push
rep
clc
test
jmp
mov
test
lahf
cmps
js
mov
jb
mov
xlat
daa
or
shl
mov
or
aad
mov
in
sub
bound
sbb
movs
dec
sahf
pusha
leave
pop
xchg
call
cmp
in
xor
add
test
test
adc
mov
push
sub
xchg
or
mov
mov
pusha
inc
hlt
scas
push
ret
push
inc
mov
adc
dec
jl
lods
outs
jb
retf
fs
inc
in
ins
out
mul
xchg
stos
scas
aas
sbb
mov
jg
daa
in
mov
push
in
cmps
push
clc
push
popa
jnp
jg
and
xchg
xlat
std
mov
pop
pop
cdq
cmp
daa
jns
xchg
xchg
inc
mov
std
pop
ja
dec
jo
dec
lea
out
cmp
push
mov
xor
dec
hlt
nop
pop
and
push
retf
sbb
mov
push
xchg
cmc
cwde
add
ss
adc
call
inc
call
adc
sub
gs
cmc
sbb
shr
retf
test
mov
mov
or
sbb
mov
les
mov
pop
std
mov
(bad)
cs
(bad)
call
lds
dec
cvttps2pi
(bad)
cmc
jb
iret
fdiv
dec
cmp
je
inc
int3
jmp
adc
inc
pop
adc
sub
jns
or
mov
inc
or
hlt
std
jns
pop
stc
add
pop
scas
sub
adc
push
jae
dec
mov
push
sbb
shl
and
aas
sbb
and
pop
mov
pop
jnp
jns
bound
sahf
imul
ss
sbb
xlat
ins
mov
sbb
arpl
imul
jns
cmp
ss
jle
or
dec
cwde
inc
mov
(bad)
pop
imul
adc
stc
fsubr
das
iret
inc
shl
aaa
iret
or
ret
(bad)
jge
shl
pusha
mov
xor
jae
sbb
popf
and
cmps
icebp
arpl
and
mov
and
shl
stos
fs
inc
fs
daa
inc
jae
stc
or
mov
sub
or
nop
dec
jae
loop
stos
lahf
loope
mov
cld
pushf
mov
sbb
xchg
push
scas
mov
int3
xor
pop
push
sub
xor
call
sbb
mov
test
sbb
mov
popa
test
dec
xchg
mov
and
mov
retf
loop
jmp
fs
xchg
movs
push
int
call
mov
inc
pop
jne
inc
imul
idiv
aas
movs
and
inc
push
hlt
in
fs
cdq
retf
mov
int
adc
out
leave
xchg
dec
and
(bad)
ret
or
out
in
xchg
jg
test
jns
dec
gs
(bad)
shr
and
cmps
in
in
mov
xor
lahf
(bad)
jp
pop
and
ds
icebp
jb
jg
jge
add
adc
ins
push
jae
clc
in
and
fistp
cs
and
add
jnp
jo
xchg
(bad)
dec
jle
mov
push
(bad)
loope
ins
arpl
push
cmp
sbb
stc
jbe
dec
xor
mov
imul
out
sbb
push
out
scas
pushf
push
imul
cmps
mov
cmp
iret
ja
cmp
jmp
jbe
pop
pop
sti
jecxz
(bad)
repz
pop
int3
push
sub
in
movzx
push
retf
xor
push
inc
fwait
sub
out
aam
aad
cdq
cmp
dec
pusha
in
mov
jb
ror
movs
ins
add
dec
dec
cmps
add
jmp
leave
std
xor
fisubr
jecxz
and
imul
pusha
xor
call
jle
out
test
ins
fcom
dec
fucomi
icebp
retf
loop
in
xchg
xchg
enter
mov
mov
mov
aad
nop
out
ret
mov
inc
test
in
cmp
nop
les
fsubr
sbb
jns
dec
cmp
lock
or
xchg
sub
fwait
(bad)
or
ss
aas
or
mov
div
outs
bnd
test
leave
push
pop
aaa
pop
pop
adc
mov
aas
xchg
(bad)
push
rol
(bad)
push
dec
mov
in
cmps
cmp
push
popa
adc
faddp
test
cwde
shr
idiv
mov
js
dec
jb
push
jae
pop
adc
repnz
xchg
in
adc
mov
aas
lahf
pop
push
pop
add
cld
jmp
iret
push
retf
jno
adc
fadd
daa
sbb
jno
cli
and
popf
or
or
data16
loope
nop
lods
or
jno
sahf
xchg
in
(bad)
aad
cmp
jp
pop
rcl
cs
cmp
dec
or
sbb
cs
xchg
xchg
out
cli
push
aad
adc
inc
fistp
sub
dec
repnz
mov
mov
movs
ficomp
jecxz
xchg
adc
dec
jmp
or
sub
aas
add
cld
cmp
mov
nop
and
or
outs
sub
shr
push
jp
es
std
retf
repz
dec
jle
mul
sub
mov
vpunpcklqdq
(bad)
test
inc
sti
fstp
adc
push
cmp
in
jmp
fmul
pop
out
and
stos
or
addr16
fbld
cdq
std
imul
mov
aaa
inc
js
xor
leave
adc
cld
xor
repnz
test
dec
mov
dec
cdq
loop
sbb
pop
mov
lea
mov
xor
mov
idiv
in
loop
pusha
xchg
mov
mov
pop
stos
add
pop
icebp
mov
inc
dec
cmp
jg
or
int
push
enter
movs
add
aad
mov
pop
call
lahf
adc
ror
mov
jge
jns
lods
in
jl
add
loope
or
mov
mov
pop
jmp
jbe
out
cmp
ss
pop
test
iret
mov
cmp
mov
lock
xchg
jae
aas
sub
xor
and
sub
fs
dec
sysret
stc
outs
das
cmp
mov
fimul
add
cdq
movs
push
pop
adc
mov
movs
jns
push
and
aaa
sub
sbb
pushf
ds
dec
mov
cmp
fwait
cmovge
gs
es
add
adc
push
inc
and
cmc
and
call
mov
rcl
out
add
ss
(bad)
rcr
inc
ss
rcr
out
sahf
pop
jg
fwait
jne
jmp
cdq
js
sub
jp
mov
dec
xor
stc
dec
cs
sbb
push
gs
daa
push
or
cmp
aaa
repz
int
jns
jp
xor
nop
jno
add
dec
call
dec
mov
mov
xor
xchg
adc
mov
int3
sbb
jno
sbb
sbb
sbb
daa
cdq
sub
add
jecxz
hlt
retf
inc
xor
fld
scas
dec
enter
lock
fucomi
sbb
jmp
scas
sbb
xor
inc
fisub
inc
je
add
aaa
test
aas
repz
out
popf
sub
test
test
pop
sbb
stc
mov
xor
lds
jb
xor
jno
inc
mov
xor
ss
out
and
jmp
pop
cmp
shl
jmp
sub
inc
dec
loope
lods
push
mov
icebp
pop
push
lahf
inc
cmc
mov
pushf
test
(bad)
(bad)
push
scas
mov
pop
adc
and
retf
imul
ror
sub
cli
test
call
jmp
repz
push
xchg
xor
clc
jmp
pop
push
fsubr
lods
mov
call
loop
pop
add
test
push
lds
jne
movs
sti
mov
or
pop
jae
nop
mov
sbb
cmps
cs
aas
cwde
sahf
dec
pop
rol
stos
ja
retf
adc
sbb
dec
icebp
sub
sbb
scas
jmp
push
jle
sbb
pop
push
adc
push
imul
scas
pop
(bad)
fldenv
add
jp
dec
shl
push
pop
out
imul
inc
pop
(bad)
push
sub
cmp
mov
rcl
xchg
pop
jmp
pop
inc
mov
pop
xor
jns
nop
(bad)
aaa
retf
cmps
imul
cmp
pop
inc
sti
mov
sbb
inc
lahf
inc
pop
aad
pop
jb
es
repnz
retf
dec
and
xlat
push
push
add
or
mov
add
ret
das
xchg
mov
les
sbb
mov
je
hlt
dec
add
push
bound
xor
mov
add
mov
xor
movs
inc
shr
rcl
fsubr
push
ds
fcmovnu
mov
adc
mov
nop
mov
js
sub
iret
sub
aad
mov
mov
lea
loop
and
mov
cli
aam
sub
test
xchg
mov
push
inc
test
mov
aas
test
mov
(bad)
aad
rcr
enter
sar
push
shl
lds
push
sub
cmc
sti
cdq
inc
(bad)
jp
mov
jge
imul
punpckhwd
or
or
xor
lds
out
sub
adc
jne
dec
stc
daa
mov
sbb
jg
arpl
jno
int3
inc
cmp
cmps
or
xacquire
loop
lahf
mov
fcomip
imul
idiv
cdq
sub
jae
aaa
jne
ins
bound
adc
out
fsub
inc
adc
rcr
fstp
dec
push
nop
lds
cmp
aam
retf
loope
cdq
mov
aad
dec
pop
dec
push
ret
test
or
xor
cwde
dec
push
and
adc
dec
or
mov
push
loope
rcl
jae
xor
aam
jo
and
es
xlat
imul
adc
clc
and
lods
call
pop
cwde
pushf
add
js
or
push
xor
jnp
and
cmp
sti
cmp
jo
jo
push
stos
in
adc
das
sbb
mov
fstp
scas
ds
mov
rcl
inc
scas
jg
out
xchg
out
cmc
push
in
adc
mov
(bad)
arpl
aaa
lods
out
fidivr
jo
xlat
int
sub
adc
stc
sar
ja
rcr
retf
cdq
xor
cmp
in
jl
fist
xchg
and
(bad)
leave
inc
push
and
cdq
in
rcl
lea
mov
test
lods
and
dec
or
push
add
add
or
in
xor
fiadd
mov
add
imul
add
and
and
icebp
pop
arpl
adc
cmp
outs
mov
xor
push
jo
fldcw
cld
pop
mov
test
aam
mov
mov
out
or
fcmovnb
push
mov
cs
out
push
call
test
int
loopne
loop
and
sub
or
popa
out
pop
fdivr
inc
mov
or
(bad)
sbb
sub
and
mov
fisub
xor
push
je
int
xchg
outs
jbe
inc
pop
xchg
into
addr16
loopne
fwait
jae
movs
les
jne
loopne
sub
xor
xchg
fist
jp
push
pop
add
push
dec
pop
mov
xchg
mov
add
repz
xchg
std
lea
push
push
mov
das
pop
stc
xor
outs
sbb
ficom
mov
jecxz
retf
pop
neg
fdiv
loopne
inc
pop
jnp
dec
dec
xor
mov
mov
jo
or
push
jl
sbb
adc
inc
xor
sahf
adc
mov
adc
ds
xchg
adc
test
cmp
jmp
and
pop
retf
mov
mov
push
dec
inc
rcr
mov
stos
jno
dec
ds
test
popf
jmp
imul
mov
call
xchg
ds
imul
out
or
or
xchg
mov
fistp
pop
aam
sbb
jo
adc
push
push
imul
sub
mov
or
(bad)
mov
into
add
movs
cmp
push
cmps
push
jbe
mov
and
(bad)
sti
addr16
push
cmp
sub
push
ret
sahf
inc
or
mov
cdq
push
sub
loope
lods
outs
xor
or
and
mov
mov
repz
mov
out
mov
jecxz
sub
or
cmps
dec
mov
mov
test
aam
movs
jbe
adc
jle
sbb
int3
shl
inc
loop
pop
pop
loop
xchg
cwde
cs
pop
sti
pcmpgtd
stos
arpl
jmp
movs
outs
pop
xor
sbb
fincstp
add
sbb
ds
mov
test
bound
in
test
js
and
fstp
daa
mov
sbb
inc
enter
dec
or
or
dec
cs
les
inc
mov
addr16
cli
xor
adc
xor
jmp
pop
aad
cmp
test
es
test
call
xchg
mov
out
dec
inc
mov
rol
jle
xchg
addr16
and
sbb
and
mov
mov
icebp
sub
push
push
sub
sbb
mov
cmp
sub
out
outs
stos
pop
aam
xchg
nop
mov
pushf
lahf
fisttp
in
mov
cdq
clc
inc
mov
pushf
sub
add
out
fnstsw
xor
(bad)
test
push
pop
retf
xchg
jl
sti
imul
pop
lea
jae
mov
sbb
mov
add
pushf
dec
(bad)
jno
pusha
mov
sbb
mov
push
xlat
and
shl
clc
xchg
push
ins
shr
mov
xor
dec
movs
jle
loope
sub
pop
xor
xchg
dec
adc
clc
call
xchg
push
sti
(bad)
stc
das
mov
sub
dec
fdivp
fwait
out
pop
shr
addr16
(bad)
mov
adc
ins
das
in
pop
in
outs
sub
mov
pop
es
(bad)
dec
or
adc
into
jno
mov
test
add
inc
jb
test
push
cli
fmul
pop
push
xor
xor
pushf
ret
test
popa
xchg
jne
inc
and
imul
(bad)
idiv
repnz
pop
push
(bad)
and
mov
push
or
fst
push
int
xlat
retf
or
jo
adc
xchg
das
inc
dec
pop
popa
ficomp
or
xchg
repz
pop
pop
clc
xor
dec
call
stc
push
hlt
xchg
mov
inc
lods
(bad)
dec
push
xchg
sub
or
in
rcl
ror
pop
in
jg
int
lahf
mov
inc
xchg
push
add
cld
ds
aaa
mov
push
push
lea
rcl
push
push
mov
ins
ins
jne
and
mov
adc
movs
jmp
mov
xchg
out
dec
cld
rol
iret
pop
das
mov
mov
add
clc
jo
retf
cmp
or
cs
mov
arpl
xchg
into
data16
pushf
jnp
pop
les
movs
fs
inc
ror
aad
ins
jns
mov
fidivr
cmp
das
sahf
inc
cdq
add
and
in
int
mov
pop
dec
pop
fs
in
jg
(bad)
jp
or
loop
mov
into
sahf
leave
les
fidivr
pop
sub
push
mov
in
inc
jbe
sub
pop
pop
loop
sub
in
out
test
jno
mov
jbe
cmp
popa
cmp
dec
in
xchg
sbb
fisubr
adc
movs
or
aam
arpl
dec
sub
add
mov
sub
stos
scas
or
sahf
push
mov
fsub
popf
ror
call
imul
sbb
js
(bad)
shl
call
mov
xchg
bound
inc
call
stos
es
arpl
retf
in
test
in
shl
cwde
mov
je
lahf
pushf
fwait
in
jl
fstp
push
ret
sub
icebp
aas
push
sub
shr
loope
and
mov
lahf
inc
xchg
scas
xor
mov
mov
sbb
enter
or
mov
loopne
mov
mov
inc
sbb
sub
push
inc
pop
adc
and
scas
adc
xchg
adc
mov
push
mov
dec
outs
and
push
addr16
or
push
daa
pop
in
pop
or
cld
int
dec
adc
cmp
test
cmp
xchg
paddsb
ins
add
mov
ins
shr
aas
xchg
add
dec
lock
pushf
fs
jnp
dec
mov
fdiv
(bad)
ins
sbb
xchg
mov
lahf
loop
iret
adc
enter
adc
(bad)
aam
xor
push
jns
pop
mov
les
pop
retf
je
cmps
dec
jnp
das
jo
adc
xchg
mov
rcr
fsubr
shl
mov
mov
push
ret
jno
cld
jp
push
out
pop
fadd
ins
sub
dec
push
aam
and
xor
xchg
mov
mov
rcl
xchg
rol
mov
mov
enter
xor
aam
jo
add
xchg
sahf
pop
mov
dec
pop
mov
imul
mov
inc
mov
ins
int
enter
js
sub
or
jle
adc
loopne
stos
scas
out
mov
pop
fidivr
and
dec
sbb
mov
icebp
jnp
pop
lods
cmp
lea
add
dec
pop
jbe
and
test
sub
fldcw
lahf
pop
aaa
dec
fisub
inc
mov
and
fild
lahf
jecxz
mov
es
outs
rcl
daa
es
std
test
jge
push
xchg
cmps
mov
call
into
dec
add
lods
std
enter
mov
mov
shl
outs
sbb
daa
mov
mov
bnd
add
dec
popf
jne
enter
inc
mov
xor
jg
push
sbb
jmp
jmp
shl
or
sbb
mov
push
fcmovbe
mov
mov
adc
stos
out
inc
jp
inc
fmul
cmps
mov
mov
fistp
dec
cs
test
pop
(bad)
ja
jmp
pop
mov
hlt
dec
push
xchg
or
inc
arpl
cmps
rcr
xchg
pop
inc
nop
push
mov
test
daa
xor
dec
and
ss
popa
push
loope
adc
pop
cdq
xor
and
retf
cdq
jl
or
(bad)
xor
sbb
lods
inc
jl
mov
push
iret
ss
pop
pusha
mov
pop
inc
ds
retf
or
std
neg
mov
adc
into
adc
pop
out
cld
push
test
adc
push
sbb
fwait
adc
adc
test
push
mov
inc
mov
stc
fmul
push
int3
lock
or
cmp
and
dec
mov
dec
arpl
fs
pop
lea
cs
cmp
inc
cmp
push
or
out
xor
pop
jne
xchg
enter
mov
lods
fld
enter
sbb
outs
fcmovne
out
and
cmps
pop
mov
and
mov
mov
shl
inc
dec
retf
inc
ins
jnp
retf
xchg
sbb
pusha
das
stc
adc
adc
inc
xor
pop
iret
pop
inc
dec
das
fidiv
jb
test
dec
mov
retf
stc
test
add
aam
(bad)
jmp
cwde
mov
icebp
repz
jmp
arpl
outs
mov
mov
mov
inc
sbb
out
clc
popf
cdq
fdivr
repnz
bound
int3
mov
xchg
jg
and
aad
inc
rol
xor
pushf
ret
ror
sub
xchg
pop
hlt
xor
or
clc
leave
sub
movs
pop
clc
(bad)
std
int
sbb
data16
test
push
jo
push
push
pop
dec
out
cmp
or
xor
cmps
test
inc
push
and
xlat
xchg
aaa
in
xchg
and
les
pusha
fadd
in
popa
push
xchg
test
mov
mov
push
and
pusha
mov
cli
mov
and
std
aas
test
xor
adc
imul
xor
outs
or
sti
and
push
adc
in
mov
xor
pop
cmps
fnstcw
pusha
and
inc
movs
mov
mov
sbb
push
stos
imul
ins
dec
ds
mov
push
gs
push
popa
(bad)
(bad)
xchg
add
mov
iret
mov
inc
push
push
iret
shr
or
adc
outs
imul
sbb
dec
mov
das
pop
inc
scas
inc
jmp
mov
mov
mov
fwait
into
jge
pusha
rcr
lods
(bad)
daa
dec
jge
jmp
pop
push
add
inc
mov
and
xor
xor
inc
add
test
lds
mov
jmp
scas
mov
inc
xchg
pop
push
dec
call
inc
movzx
mov
mov
xchg
clc
mov
cli
adc
shr
push
loope
push
sub
push
lock
in
and
sbb
adc
daa
push
adc
fld
sbb
jbe
aad
dec
adc
(bad)
inc
pop
iret
push
shr
or
cmps
jmp
push
xchg
pop
movs
xchg
call
psubw
enter
inc
ret
(bad)
and
sub
sbb
sahf
push
imul
and
movs
add
mov
outs
add
add
stc
push
in
mov
aas
mov
cli
popa
pop
das
lds
fst
loope
dec
dec
xor
push
enter
xor
sbb
push
fdivr
outs
retf
sub
cld
push
pop
cmc
push
add
nop
daa
(bad)
pop
mov
mov
mov
jnp
and
mov
addr16
adc
hlt
add
mov
jmp
push
int
int
lea
and
call
sbb
jl
ins
cmc
ret
mov
pop
(bad)
mov
cmp
fldenv
xchg
mov
mov
rcr
repz
loop
adc
(bad)
retf
scas
iret
ret
mov
call
daa
imul
fmulp
and
adc
push
sub
xor
stc
push
ins
mov
inc
jne
imul
sub
(bad)
jl
xchg
cmp
aam
shl
xlat
ret
dec
push
sbb
push
cwde
cs
mov
push
sbb
pop
fstp
es
jno
retf
cmp
xchg
pop
jmp
jecxz
iret
pushf
add
pop
nop
mov
add
outs
fnsave
fadd
adc
fistp
sahf
aaa
loope
cli
cmc
enter
in
call
xchg
sahf
jmp
(bad)
push
(bad)
fwait
fwait
ret
and
js
shr
call
or
call
push
or
sub
mov
fs
lock
jp
loope
sub
dec
pop
cdq
xchg
inc
xchg
jg
dec
(bad)
outs
push
ret
jns
call
fild
lds
retf
jnp
int3
pop
pop
out
mov
dec
ja
into
cmp
sub
lahf
jmp
inc
jmp
cs
in
xchg
inc
or
lea
fs
mov
push
lea
enter
sub
xor
repnz
inc
(bad)
inc
inc
pop
aas
repz
fimul
inc
out
mov
ss
xchg
movs
inc
adc
dec
inc
mov
lods
lds
cmps
mov
xor
das
add
jmp
jp
aaa
pop
in
outs
lea
ret
cmps
pop
fsub
movs
sub
or
mov
push
xchg
fistp
out
add
pop
jl
jg
(bad)
retf
data16
inc
rol
(bad)
gs
sti
mov
dec
(bad)
adc
lahf
xor
adc
pop
sbb
fwait
out
lea
outs
dec
jl
idiv
or
jo
mov
dec
pop
enter
sbb
fs
test
xchg
fst
jp
mov
leave
std
cld
sub
add
xor
hlt
jb
fdivr
push
stos
imul
retf
jb
daa
lods
sub
jmp
or
or
fild
dec
out
mov
icebp
xchg
aam
jge
fs
(bad)
ss
in
xor
test
push
daa
xor
sbb
mov
push
sbb
shl
xor
inc
mov
xor
pop
pop
lahf
ficomp
pop
mov
inc
ins
add
mov
jg
imul
xchg
aas
inc
ficomp
push
push
ins
add
pop
push
xchg
and
sub
leave
lock
dec
and
or
mov
dec
dec
dec
inc
inc
pop
xor
retf
mov
jne
xchg
pop
mov
adc
sub
movs
mov
sub
push
jge
fadd
adc
add
add
(bad)
ss
or
mov
js
jge
ins
and
xchg
out
das
add
mov
jne
xchg
xlat
outs
js
movs
call
stos
pop
das
dec
push
pop
pop
call
or
pop
inc
test
imul
dec
mov
cmovbe
lahf
sub
arpl
(bad)
jb
push
push
cld
push
mov
sahf
fwait
ret
push
in
and
mov
out
adc
nop
jnp
int3
jmp
and
jbe
xor
nop
jg
fdivr
inc
xchg
jmp
push
inc
mov
in
xor
sbb
(bad)
mov
nop
ja
dec
mov
dec
push
pop
lsl
movs
shl
(bad)
fmul
repnz
mov
in
pop
and
dec
shl
mov
pop
fidiv
push
mov
cmp
add
cld
dec
test
stc
add
mov
repz
pop
test
call
jae
test
fimul
lods
pop
dec
movs
(bad)
cmps
out
add
fild
ds
ds
cmps
adc
jle
push
inc
leave
addr16
rol
shr
xchg
mov
xor
aaa
jns
pop
jmp
out
rcr
imul
lods
icebp
pop
and
mov
fild
test
push
lods
pop
mov
pop
dec
mov
pop
inc
aam
pop
outs
mov
jmp
xor
mov
stos
mov
(bad)
xor
and
ficomp
scas
aad
pop
cmc
std
ins
gs
mov
es
xchg
push
mov
lea
mov
xchg
fisubr
mov
push
fisttp
xor
pop
cmp
out
jne
jl
lock
mov
cmps
aad
and
mul
mov
cmps
lahf
dec
pushf
je
add
mov
out
aam
dec
pop
xchg
int3
(bad)
or
add
sub
add
ror
(bad)
dec
pop
stos
jb
jecxz
xchg
out
inc
shl
dec
out
mov
xor
aaa
jns
mov
pop
push
inc
repnz
jo
mov
sbb
imul
cli
inc
dec
add
push
pop
and
mov
jp
sar
cmp
jp
test
push
into
push
cmp
retf
les
gs
out
jp
pop
add
sub
retf
fnstsw
push
adc
dec
xchg
cmp
sbb
inc
repz
xor
(bad)
xchg
inc
vmovhpd
es
dec
sar
dec
xchg
add
dec
jle
call
aad
(bad)
dec
ja
std
or
jns
sub
(bad)
(bad)
push
and
sub
sub
ja
out
pop
leave
fcomp
jl
mov
shl
std
inc
hlt
dec
xchg
sub
sbb
movs
outs
mov
and
popf
cmp
lods
test
mov
cwde
push
in
rcl
push
in
leave
jp
daa
sbb
jle
fsub
ss
mov
dec
jl
jno
mov
mov
lea
aaa
adc
inc
repz
ins
fcom
call
push
xor
push
xchg
mov
leave
loopne
fcmovnb
sar
cdq
pop
mov
push
mov
sbb
loop
push
sbb
jo
test
jmp
push
sub
stos
add
fisub
mov
mov
dec
test
inc
jmp
adc
out
xchg
push
cmp
pop
jmpw
mov
mov
push
add
pusha
mov
push
ficom
outs
or
sub
xor
sbb
mov
xchg
test
push
out
push
ror
rcl
cmps
rol
pop
dec
add
int3
inc
jmp
inc
fdiv
mov
cs
jp
jbe
mov
mov
mov
out
fmul
mov
lods
xor
and
add
and
dec
jns
and
(bad)
mov
call
in
lahf
or
add
jo
leave
std
jmp
pop
xor
sbb
lods
stos
loopne
push
pop
xchg
scas
cmp
and
bound
cmp
cdq
or
(bad)
idiv
mov
push
dec
jle
js
ss
je
fucomip
and
or
jmp
pop
cmc
dec
fcmovu
jno
jno
inc
dec
mov
in
jbe
into
stc
sahf
add
test
pop
pop
rcr
mov
repnz
mov
xchg
add
adc
mov
inc
xchg
inc
std
icebp
jb
jno
jge
xchg
jbe
mov
cmp
adc
adc
mov
cmc
jecxz
jle
std
das
out
inc
xor
mov
add
movs
jmp
popa
push
xor
outs
stos
mov
(bad)
cli
inc
daa
popf
sub
xor
xchg
clc
int
cmp
cmp
call
arpl
push
outs
(bad)
xchg
call
shl
loop
and
push
adc
(bad)
push
gs
mov
inc
test
cmp
mov
inc
inc
sbb
neg
enter
jbe
call
fwait
sbb
into
adc
cmp
jecxz
stos
cmp
lahf
xchg
xor
jns
lods
fnstsw
das
cmps
and
lahf
imul
out
call
mov
lds
adc
mov
mov
les
mov
aaa
adc
addr16
mov
push
cmp
sahf
sbb
and
ficom
xor
pop
in
push
push
and
mov
jmp
push
gs
push
xchg
adc
inc
mov
jno
lds
stos
aas
stc
pop
es
sub
inc
scas
out
sub
pushf
addr16
cmp
aaa
sub
aad
sbb
add
add
dec
mov
mov
jle
dec
ss
mov
fldenv
aas
test
loop
inc
ss
mov
jno
push
inc
xchg
outs
jge
mov
hlt
xor
movs
mov
xchg
loope
mov
push
cli
lds
call
add
fbstp
adc
jae
or
fcmovne
dec
jge
call
mov
push
in
stc
(bad)
mov
in
jp
stos
nop
xchg
xlat
dec
pop
jae
xor
mov
aaa
pop
and
mov
add
sbb
dec
aas
int
ja
mov
add
xor
pop
mov
xor
(bad)
(bad)
fimul
and
loop
dec
mov
test
sbb
mov
dec
hlt
or
dec
les
cmp
mov
sbb
dec
shl
inc
adc
test
xchg
sbb
mov
xor
sbb
rcl
jne
pusha
mov
call
sub
inc
xchg
push
test
sub
adc
sub
pop
hlt
mov
and
nop
fstp
push
xchg
push
sbb
mov
stos
add
and
cmps
in
push
test
pop
fidivr
lods
mov
stc
jb
xor
mov
mov
daa
pop
dec
dec
dec
std
lock
frstor
(bad)
cmps
xlat
cmp
mov
int3
sub
mov
sar
push
dec
pop
pushw
mov
xlat
(bad)
clc
mov
mov
push
mov
enter
cmc
jae
mov
push
pop
pop
pop
xchg
push
xor
push
in
movs
sub
mov
push
inc
in
adc
inc
and
outs
sub
idiv
loope
mov
push
shl
cli
in
push
add
scas
jmp
cmp
inc
xchg
and
mov
bound
fadd
ror
mov
ret
fsub
pushf
cmp
inc
pop
sbb
mov
movs
cdq
sub
pop
je
aad
lea
aam
fbstp
test
adc
idiv
out
jmp
das
test
mov
mov
cmps
cwde
xchg
imul
mov
sti
scas
sbb
retf
inc
adc
pop
mov
test
mov
xchg
test
adc
cs
enter
popa
lods
enter
in
push
cld
hlt
mov
repz
fidiv
inc
pusha
lods
sti
lahf
or
sar
cli
outs
push
mov
(bad)
aam
dec
data16
dec
aaa
dec
out
imul
inc
push
ss
test
jae
adc
out
imul
cmp
(bad)
retf
call
iretw
adc
cmp
pop
xor
adc
call
cmp
frstor
(bad)
xchg
adc
js
sbb
mov
in
cmps
outs
jmp
cld
scas
and
outs
adc
test
jmp
std
cs
xor
fwait
push
mov
cwde
and
adc
gs
and
lds
aaa
(bad)
adc
jle
xor
loopne
xor
lea
sub
jge
fadd
in
mov
fs
push
pop
shld
mov
jle
ror
aaa
jg
inc
dec
jne
mov
dec
(bad)
xchg
lock
popaw
iret
jb
ins
fiadd
dec
mov
jae
mov
(bad)
adc
jne
jnp
mov
xchg
cmp
jl
mov
aad
int3
mov
xor
xchg
pusha
jle
push
pop
lock
and
add
lea
ror
cmp
shl
jbe
mov
popf
cmps
add
ror
jmp
ret
leave
adc
in
pavgw
imul
scas
or
popf
cmps
sbb
shl
sub
mov
out
add
pop
int
inc
rcl
xchg
add
jmp
call
mov
movs
xor
sub
and
ins
aas
dec
add
repnz
mov
lods
test
popf
retf
xchg
mov
sbb
test
(bad)
leave
ja
rcl
lods
cli
out
fdivr
repz
push
inc
inc
push
push
sahf
cmp
jmp
ret
in
inc
sti
sub
push
or
or
(bad)
push
xchg
fistp
repz
mov
lods
out
mov
stc
bound
mov
repz
scas
pop
and
in
cmc
inc
dec
mov
xor
cmp
xchg
loopne
cmp
clc
adc
xchg
xor
add
adc
jg
test
mov
xchg
pop
call
rcr
cmp
test
cmc
push
scas
xor
mov
pop
pusha
or
inc
jle
lock
inc
mov
mov
setbe
jns
push
xchg
xchg
xor
push
cwde
(bad)
icebp
std
or
enter
nop
leave
mul
mov
lods
rol
(bad)
xchg
add
imul
retf
inc
stc
mov
push
cmp
pop
sub
imul
push
push
add
leave
xchg
and
enter
dec
push
and
inc
repz
icebp
aam
jne
out
scas
clc
repz
jb
push
ficom
push
movs
jb
jmp
mov
dec
cmp
adc
in
aam
not
nop
or
hlt
push
int
mov
mov
add
mov
lods
adc
jp
pop
cld
in
lahf
ficomp
sub
mov
jg
repnz
(bad)
fiadd
adc
imul
mov
push
push
xchg
pop
test
ins
xor
not
fsubr
mov
push
fmul
xchg
aad
enter
iret
test
dec
ins
scas
cmp
jmp
(bad)
xchg
mov
sbb
sub
dec
mov
dec
adc
jo
and
adc
cmp
pop
loop
xor
xor
test
jns
ret
stc
aas
inc
pop
adc
stc
adc
cmp
arpl
adc
movs
push
mov
(bad)
jno
add
add
push
outs
inc
into
xor
int3
jns
loopne
ds
retf
test
iret
mov
shl
add
jp
js
or
sbb
and
xor
push
or
mov
mov
sub
arpl
sbb
jl
cmp
push
mov
and
retf
(bad)
outs
jnp
and
and
(bad)
daa
push
xchg
sbb
pop
je
stos
jb
(bad)
inc
loope
cmp
shl
loopne
out
lds
sahf
xchg
and
mov
test
sar
inc
cmp
imul
cmp
cli
xchg
retf
xor
sbb
adc
aam
call
inc
shl
push
lahf
ja
and
retf
icebp
pop
pop
loopne
cmp
mov
out
and
bound
jmp
data16
cmp
sbb
(bad)
cmp
pop
clc
sub
imul
loope
cwde
add
adc
rcl
push
inc
mov
fscale
push
leave
shr
push
cmp
or
nop
mov
xlat
jnp
xchg
cli
mov
lock
mov
rcr
loopne
push
nop
jnp
xlat
mov
xor
cmps
fcom
jns
mov
pop
cdq
sub
out
cmp
scas
mov
xchg
iret
xchg
or
and
jnp
rol
data16
daa
sbb
in
pop
or
push
out
inc
pop
mov
cmp
cli
push
sbb
cli
in
mov
add
cmp
mov
call
xchg
pop
sahf
(bad)
bound
add
es
dec
sbb
(bad)
cmc
jne
pop
imul
push
cdq
xor
adc
or
stos
outs
add
(bad)
inc
mov
mov
mov
icebp
test
fstp
aam
dec
ret
out
sub
cmp
ss
jle
cmp
mov
cmp
cld
xchg
inc
pop
out
shl
xchg
add
daa
xlat
loopne
mov
mov
fidiv
inc
xchg
cli
std
mov
push
cli
aas
movs
sar
inc
push
leave
cmp
gs
in
sub
mov
int
(bad)
jecxz
outs
sbb
jle
jne
inc
or
or
mov
inc
and
jae
in
push
adc
scas
imul
leave
icebp
xchg
sub
and
lock
int
jae
lods
lock
adc
loop
push
(bad)
call
adc
mov
loopne
test
imul
fld
jb
shr
in
imul
imul
call
sub
outs
test
cdq
push
mov
fsub
int
cmp
mov
dec
jnp
cmp
sti
jo
lea
cmp
mov
push
dec
nop
icebp
mov
enter
pusha
xor
xchg
imul
xor
or
jmp
dec
xor
por
mov
push
jmp
cmp
dec
or
dec
cmc
and
dec
adc
retf
fst
mov
push
test
push
adc
xlat
cmp
add
shl
mov
imul
cli
in
sub
leave
dec
sbb
daa
leave
pop
and
icebp
adc
cli
pop
ror
push
ja
and
inc
lock
addr16
jnp
mov
inc
adc
mov
cmp
cmp
rcr
shr
inc
pop
mov
push
ret
aam
pusha
(bad)
mov
jl
ins
imul
in
retf
adc
jae
xchg
xor
js
clc
cmps
sub
cmp
xor
xchg
inc
test
ja
or
inc
loope
call
in
push
pop
xchg
fs
adc
add
call
cmp
sti
sub
mov
push
int
ja
xchg
add
fbstp
fistp
jbe
cmp
pop
loopne
mov
loope
lahf
in
push
push
(bad)
les
js
fidiv
and
fisttp
sbb
jg
pop
adc
dec
test
jmp
jle
xor
bound
xor
aas
mov
out
push
fsubr
daa
adc
or
cmp
test
test
in
lds
ss
test
imul
sub
test
sub
in
daa
pop
xchg
jp
jl
inc
repz
int
adc
enter
pop
xchg
pushf
inc
scas
sahf
popf
and
cdq
lea
xchg
jae
inc
rcl
sar
mov
cmp
bound
jbe
jmp
bound
pop
(bad)
sbb
cmp
aas
jmp
outs
je
add
xor
(bad)
fwait
push
xchg
add
(bad)
in
inc
fdiv
sub
xor
cld
sti
jne
mov
adc
test
bnd
sti
sbb
xchg
xchg
loopne
in
mov
add
pushf
pop
aam
push
enter
fnstcw
popa
ret
fnstsw
pop
imul
in
mov
shl
in
sbb
retf
add
jns
sub
call
test
cmc
jmp
mov
sub
int3
push
and
call
inc
or
jne
add
sbb
ds
mov
jno
in
sbb
clc
addr16
push
and
adc
xchg
cmp
add
cmp
mov
retf
js
xor
pop
int3
sbb
inc
in
(bad)
jmp
es
push
mov
leave
loopne
ss
or
cmp
cmp
or
xchg
arpl
mov
inc
test
(bad)
imul
mov
xchg
out
sub
movs
add
or
es
jns
xchg
xchg
push
and
bound
pop
push
pop
stos
pop
shl
(bad)
push
sbb
gs
xor
loope
xchg
mov
sub
push
or
sbb
pop
mov
xor
mov
je
call
int
test
pop
add
fdivr
push
stc
cmp
pushf
or
xchg
push
mov
repz
jmp
aad
xchg
sub
cdq
out
push
scas
stc
addr16
jnp
sbb
enter
xlat
or
xchg
les
fisttp
push
jnp
ja
adc
lds
push
test
and
mov
inc
jle
and
jae
psrlq
xor
jle
fiadd
and
ror
aaa
add
sub
adc
inc
inc
rol
std
ins
test
push
ins
cli
jecxz
gs
js
pop
push
jbe
jnp
pop
add
adc
xchg
iret
cmp
mov
clc
sbb
mov
jl
pushf
pop
inc
xchg
mov
pop
push
xchg
movs
dec
aam
loope
mov
jo
in
mov
lahf
pusha
or
sbb
movs
sbb
and
imul
cmc
test
jo
pusha
js
adc
jl
popa
mov
jecxz
xchg
(bad)
lods
repnz
test
jnp
cmp
jbe
and
xor
jb
push
call
and
repnz
xor
cmp
in
dec
add
clc
push
(bad)
fidivr
cmp
pop
js
jnp
mov
test
sbb
push
repnz
lods
sbb
out
adc
adc
sbb
pop
push
jl
js
add
pop
cmps
inc
jl
int3
and
fwait
in
test
loope
push
jl
xchg
shl
cwde
inc
fsubr
pop
adc
pop
test
(bad)
push
fcomip
inc
fmul
jl
inc
cwde
arpl
add
neg
ficomp
in
es
dec
mov
and
mov
(bad)
push
mov
icebp
pop
xor
ficom
movs
repz
mov
inc
mov
adc
fs
outs
addr16
lahf
ja
cs
dec
icebp
fwait
sahf
pop
push
xchg
mov
aas
sahf
jno
ja
mov
pop
and
mov
push
push
mov
dec
arpl
jno
cmp
or
pop
cmps
mov
into
mov
mov
add
ficom
push
mov
std
mov
enter
fidivr
inc
loopne
(bad)
arpl
pop
lds
mov
inc
add
(bad)
(bad)
bound
jbe
push
imul
mov
jns
xchg
mov
pop
xchg
fild
fnstenv
ins
ret
adc
loope
icebp
or
cmp
cld
imul
mov
(bad)
aam
sbb
xchg
push
adc
dec
jo
jp
inc
xor
push
pop
aaa
fwait
shr
xor
push
push
mov
test
rcl
xor
sub
cmps
pop
test
fnstcw
cmp
rol
stos
mov
xchg
imul
(bad)
mov
call
in
sbb
retf
adc
jmp
jl
fld
dec
int
movs
ret
fstp
mov
lea
xchg
frstor
adc
xor
dec
loopne
inc
std
into
jns
mov
xchg
jb
mov
(bad)
mov
stc
call
shl
fmul
xchg
push
sbb
stc
lea
adc
call
shl
(bad)
and
jns
adc
cli
and
mov
xchg
xor
test
xor
test
pop
pop
sbb
xlat
xor
test
leave
stos
dec
(bad)
sbb
call
gs
popf
ror
rcr
cs
cmps
mov
daa
pop
stos
jne
dec
and
or
ror
in
pop
les
inc
fst
sbb
sub
lds
call
jmp
cmp
test
or
inc
xchg
dec
push
push
lea
and
and
shl
dec
sbb
(bad)
out
cmp
cmp
pop
mov
test
into
mov
(bad)
mov
sub
lahf
or
shr
jbe
retf
push
nop
rcl
sar
test
add
and
stc
dec
lods
push
ins
test
xchg
int3
pop
xchg
add
sbb
xchg
nop
pop
add
cmp
xchg
push
push
adc
push
addr16
jmp
mov
mov
stos
std
cmps
and
lock
jns
cmps
jge
jge
push
lds
mov
add
cmps
jo
in
mov
ret
sub
aas
cmp
test
xchg
sar
pushf
loopne
daa
into
jge
cmp
mov
aaa
lahf
scas
cmps
aad
repnz
mov
xchg
dec
mov
adc
jp
lods
and
xor
jg
aaa
sub
inc
inc
in
adc
cdq
arpl
ds
retf
cld
sub
inc
xchg
test
xor
xchg
cmovae
mov
push
add
fidivr
sahf
call
add
push
mov
xchg
adc
push
int
fistp
jl
xchg
pusha
mov
hlt
cmp
fstp
popa
aam
outs
and
pop
adc
ds
sub
inc
scas
sbb
ja
jge
lods
sub
push
mov
pop
popa
les
lahf
sti
pop
adc
leave
stos
mov
adc
enter
dec
inc
pop
cmp
xchg
mov
ds
sub
and
mov
add
adc
xchg
fst
inc
cli
outs
iret
ins
in
push
or
or
lods
jmp
call
or
cmc
das
xchg
(bad)
and
adc
aam
jmp
mov
or
js
call
mov
jae
mov
pop
pop
addr16
out
shl
and
fdivr
push
sbb
pop
inc
adc
pop
bound
rol
xor
icebp
adc
in
mov
xor
sub
clc
retf
pop
push
mov
mov
dec
rol
jp
sbb
mov
sub
dec
out
mov
adc
dec
(bad)
and
in
xor
cmp
cmps
(bad)
ja
mov
adc
pop
xchg
iret
push
mov
xor
inc
shl
jg
pushf
jmp
inc
xchg
fwait
or
popf
iret
out
cmp
jne
imul
sbb
lea
inc
popa
fldenv
ja
xchg
push
adc
ins
test
out
rcr
adc
lahf
jo
mov
pop
sub
repz
into
cdq
xchg
mov
and
inc
aaa
mov
and
fldcw
push
xor
test
sbb
or
in
shr
sub
in
sub
es
dec
sahf
push
push
es
jns
retf
adc
stc
pop
shl
ss
cmp
cmc
je
dec
pusha
in
pop
enter
adc
sbb
mov
int3
out
jae
es
mov
inc
mov
inc
sub
pop
and
mov
fbstp
sub
adc
ret
jns
and
shl
sub
loopne
inc
mov
push
fstp
ret
ss
xchg
gs
js
(bad)
aas
jnp
dec
retf
pop
jl
leave
fwait
ret
add
outs
mov
lods
loope
dec
cmps
pushf
or
enter
and
test
nop
and
iret
jae
icebp
xor
or
push
pop
popf
mov
dec
xchg
push
inc
fmul
xor
inc
xchg
pop
push
mov
xchg
lods
mov
mov
mov
fcmovnbe
inc
dec
cmps
rol
pop
dec
push
cmp
mov
adc
mov
aaa
ror
call
and
(bad)
mov
aam
arpl
fld
adc
sub
xor
(bad)
pop
shl
rcl
retf
pop
sahf
and
test
rcl
mov
enter
cmp
cli
shr
adc
mov
jne
sbb
retf
movs
dec
mov
popf
mov
or
pushf
sub
push
dec
adc
mov
sub
sub
xchg
jnp
mov
shl
inc
xchg
push
mov
aam
jae
in
cmc
push
jmp
leave
imul
dec
pop
fsubr
shl
xchg
movs
and
retf
pop
sbb
test
mov
sub
mov
jg
add
inc
out
ds
ins
int
arpl
cmps
xchg
jae
mov
xchg
xchg
or
push
rcr
test
jg
or
loopne
stos
add
mov
cdq
and
xor
cmp
imul
aas
and
test
inc
xor
fimul
mov
cmps
mov
add
cs
repnz
and
mov
mov
adc
icebp
xchg
push
sbb
inc
adc
lea
aas
das
mov
push
movs
and
(bad)
gs
push
mov
push
in
jmp
aam
retf
sub
mov
es
and
cdq
adc
test
in
pop
sti
cmp
(bad)
and
sub
xor
inc
mov
push
repz
call
jns
cld
inc
xor
add
jno
xchg
les
das
jl
adc
test
mov
mov
push
pop
loop
mov
pop
mov
dec
stos
sub
push
xchg
add
jb
mov
inc
mov
sti
test
out
call
std
inc
dec
push
and
mov
pop
ficomp
popf
add
das
dec
push
(bad)
mov
dec
sub
dec
lock
ins
outs
mov
shl
inc
mov
(bad)
mov
and
js
gs
cmp
xor
and
lods
lock
pop
ins
js
jg
jb
mov
addr16
mov
inc
jno
sub
and
stos
test
push
imul
sar
fwait
ins
push
hlt
ins
cmp
scas
push
xor
mov
addr16
inc
push
lods
or
imul
or
(bad)
adc
into
lahf
xor
ja
inc
mov
pop
in
push
lahf
pusha
aas
int3
sub
sti
int
dec
jmp
cmp
mov
cmp
sbb
sbb
lahf
hlt
popf
or
popf
retf
js
imul
xor
stc
pop
pusha
jl
sbb
outs
adc
inc
popa
aas
scas
cli
sbb
adc
inc
inc
adc
clc
(bad)
les
cmps
rcl
jno
ins
push
add
sub
and
mov
sub
xchg
int3
adc
in
push
lds
shl
lock
add
inc
ds
je
jo
mov
sti
nop
int3
call
stos
scas
es
sub
test
inc
adc
xchg
rcr
gs
and
add
jmp
stos
xor
mov
add
adc
fstp
aaa
out
cmp
or
rol
imul
dec
mov
in
pop
jecxz
mov
fcom
test
mov
pop
bound
sar
cmps
shl
push
scas
fwait
mov
ret
fcom
mov
sahf
pop
outs
in
lea
test
mov
popa
xchg
loop
mov
inc
and
fimul
push
gs
in
cmp
sti
xchg
adc
clc
rcr
and
xlat
fnstenv
jecxz
mov
call
popa
rcr
mov
inc
in
cmps
nop
pop
mov
xor
pusha
sub
nop
jne
or
cmp
inc
out
scas
rcl
std
jmp
sahf
xor
fwait
mov
popa
jl
(bad)
pop
xchg
push
mov
adc
jne
push
mov
leave
arpl
cmp
push
cmp
test
mov
out
mov
mul
jno
or
inc
add
call
xchg
ret
mov
push
outs
nop
push
call
cld
das
xchg
xor
std
loope
jb
xchg
mov
jp
cmp
cmp
shr
ins
(bad)
inc
popa
je
dec
sbb
fnstsw
push
movs
inc
push
nop
ins
fst
xchg
dec
mov
das
xchg
push
sub
movs
mov
imul
add
pop
lea
jno
xchg
popa
enter
jns
scas
mov
fimul
sti
repz
xor
mov
xchg
fs
jmp
pop
jne
rcl
pop
aam
daa
fidivr
mov
popa
sahf
imul
mov
aad
add
rcr
cmp
and
or
pop
or
and
jl
cmp
jle
mov
adc
repnz
call
jmp
xchg
data16
mov
ins
jns
out
push
outs
in
or
and
shl
add
js
arpl
xor
and
fstp
(bad)
jmp
cdq
(bad)
pop
or
sub
mov
push
xchg
mov
inc
xor
(bad)
adc
shl
pop
push
add
pop
xchg
xor
xor
pop
push
jne
inc
popa
in
push
lahf
std
(bad)
sar
lock
ds
out
xor
test
adc
mov
(bad)
cmp
gs
ss
in
rcl
dec
adc
push
or
jno
ins
repnz
frstor
adc
sbb
jle
adc
gs
inc
mov
dec
sub
(bad)
lods
jp
jmp
xor
push
cmps
not
and
jmp
sub
out
pop
enter
xchg
lea
scas
jmp
pop
mov
mov
retf
dec
fwait
gs
jmp
lea
leave
xor
jg
xchg
mov
pop
rol
inc
jne
sbb
xor
inc
sub
hlt
add
and
mov
adc
mov
repnz
add
cmps
and
add
mov
and
pop
retf
clc
enter
js
add
mov
fs
pop
test
inc
ret
pop
mov
dec
and
cs
ins
jle
loop
sar
mov
ss
mov
dec
popa
jns
inc
push
xor
popf
and
out
enter
jecxz
xchg
cmps
jmp
cmps
rol
cmp
push
ret
icebp
ss
aaa
mov
or
bound
and
sub
icebp
cs
push
test
bound
inc
push
test
call
jge
stos
dec
mov
dec
arpl
jo
mov
dec
test
movs
outs
push
sub
jmp
xor
fs
pushf
bound
fisubr
pop
mov
xchg
mov
out
xchg
sub
inc
pushf
mov
popf
ss
xor
jp
call
not
hlt
loopne
jns
xchg
ins
gs
sub
mov
test
rcl
add
xchg
push
add
sub
std
das
xchg
add
retf
pop
mov
xor
inc
ret
clc
ror
adc
fwait
dec
bnd
hlt
enter
pop
push
pop
loope
arpl
or
fiadd
xchg
sub
dec
jmp
cwde
add
mov
jns
mov
jae
dec
mov
add
pop
mov
jmp
cli
mov
shl
imul
call
ds
pop
xor
sub
pushf
aad
popf
mov
call
es
jle
mov
adc
push
mov
dec
imul
inc
mov
gs
jbe
pushf
(bad)
pop
shr
fst
cmp
les
fimul
pop
inc
shl
clc
fnsave
xchg
in
fisttp
push
in
lods
lahf
and
mov
sar
jmp
aad
mov
add
outs
femms
inc
mov
sbb
mov
repnz
push
sahf
add
fisub
call
outs
xor
xchg
mov
fnstsw
jle
adc
push
fsubr
xor
lds
fcmove
inc
test
(bad)
inc
xor
repnz
test
pop
or
xor
sub
shl
dec
test
pushf
outs
jmp
jns
inc
bound
xchg
add
sub
in
jle
sub
push
es
in
in
sahf
cwde
out
mov
mov
adc
cmp
imul
lods
rcl
cmps
jnp
scas
mov
sahf
daa
xchg
not
xchg
jno
mov
mov
stos
adc
cmp
inc
adc
jg
mov
leave
ror
push
test
dec
xchg
push
aam
sub
sbb
cli
and
lds
imul
dec
mov
cld
in
push
jno
pusha
adc
ret
mov
in
pusha
mov
mov
mov
into
lods
mov
push
or
xchg
cmp
dec
cs
cmp
push
das
je
xchg
outs
mov
div
repz
outs
in
xchg
test
cmp
outs
mov
cs
jmp
jl
xor
mov
test
inc
rcl
xchg
push
retf
sub
fbstp
push
xor
sub
jnp
rol
adc
cwde
xchg
jmp
xchg
push
adc
mov
xor
inc
sub
mov
inc
sbb
jl
fucomi
call
xchg
in
cdq
xchg
stc
aas
stc
inc
loope
xor
mov
jno
mov
sbb
clc
dec
jp
aas
sub
fld
xor
retf
inc
in
pop
lock
adc
jo
pushf
or
jmp
or
sbb
bound
ins
mov
mov
outs
retf
inc
jb
xchg
or
lahf
mov
out
mov
cmp
(bad)
(bad)
xchg
mov
ret
xchg
pusha
fild
stc
outs
jns
xchg
test
fcom
cdq
mov
mov
cli
neg
stos
mov
pop
jae
push
xor
pusha
dec
xor
jge
or
scas
in
inc
leave
mov
jmp
dec
cdq
lods
jno
mov
jecxz
outs
mov
sahf
(bad)
fldcw
js
aaa
std
in
push
pop
in
and
xchg
stos
adc
sahf
jo
test
dec
mov
rcr
std
xchg
add
out
adc
(bad)
(bad)
aaa
stc
rcl
adc
out
cwde
mov
sbb
cmp
xchg
jmp
lods
out
inc
add
jle
sub
int
dec
pop
test
cmp
das
inc
pop
fsub
lds
icebp
add
je
std
jbe
xchg
pop
cmps
mov
jb
jmp
jb
call
in
in
or
gs
sbb
dec
gs
imul
pop
ins
push
mov
out
lds
push
cmp
sahf
and
sub
jge
cmps
mov
shr
or
int3
cmps
cli
fnstsw
cmp
jmp
cmps
adc
sub
push
mov
movs
rcr
mov
aam
in
pushf
adc
in
lods
rol
hlt
test
push
xchg
jnp
imul
sub
ret
fldenv
cmps
(bad)
mov
xchg
test
lods
cmp
adc
mov
push
mov
cwde
pop
jl
jmp
ficomp
clc
inc
inc
lock
ret
cmps
and
cmp
pop
jmp
ins
dec
sbb
imul
mov
call
pop
ds
(bad)
cmp
xchg
call
jno
dec
and
stc
jmp
stc
and
adc
retf
outs
rol
push
fmulp
adc
xlat
mov
sbb
fucomi
js
sub
and
lds
xor
jae
imul
pop
xchg
cmp
pop
mov
mov
popf
scas
xchg
cwde
ins
jl
clc
mov
hlt
and
push
(bad)
addr16
adc
sahf
dec
sub
rol
sub
or
mov
test
adc
imul
stos
adc
sbb
out
adc
imul
es
seto
and
mov
or
and
xchg
mov
or
adc
xor
add
and
mov
push
cdq
aad
das
add
pushf
jns
mov
pop
lea
sub
mov
loope
ret
lea
popf
js
test
mov
js
pop
pop
scas
div
mov
cmps
or
enter
movs
xchg
(bad)
pop
(bad)
fbld
adc
scas
stos
loopne
pop
fsubr
mov
add
pop
dec
xor
das
(bad)
scas
cmp
push
cli
mov
not
shl
rcr
sahf
sbb
bound
repnz
and
idiv
adc
clc
shr
cmps
and
daa
mov
fisub
fwait
xor
mov
sar
mov
sbb
or
jl
into
cwde
xor
pop
xor
push
xor
aas
cmp
push
jns
push
inc
and
repz
push
stc
xor
les
ss
cwde
inc
and
push
mul
sub
int
adc
dec
or
xor
imul
mov
lods
pushf
divps
js
mov
sahf
aad
push
sub
cmp
cwde
dec
xchg
ins
lods
xor
(bad)
fwait
shl
mov
sub
sar
sbb
jmp
ins
es
mov
int3
adc
or
aas
fdiv
or
imul
ud1
adc
pushf
pop
stos
iret
cli
(bad)
push
out
jecxz
push
add
xchg
mov
sub
int3
push
xor
stos
adc
mov
leave
cwde
sahf
dec
je
xchg
xchg
jmp
mov
(bad)
hlt
popf
pop
sub
or
std
rcr
mov
mov
inc
push
lods
jne
sbb
sbb
jns
aad
nop
movs
fcomp
call
lahf
and
(bad)
mov
push
mov
stc
cli
mov
out
add
ret
aas
mov
enter
mov
cmp
fcom
nop
xor
push
pop
out
fld
push
xlat
cmps
div
adc
lock
aaa
pmuludq
std
and
sbb
sub
adc
(bad)
adc
jns
lahf
inc
xchg
pop
sbb
retf
je
call
xchg
(bad)
aaa
sub
ficomp
dec
mov
enter
test
mov
sar
fbld
outs
lods
xlat
lods
cmp
gs
mov
out
mov
sti
add
mov
jg
daa
mov
mov
dec
mov
cwde
imul
mov
cmps
add
adc
jecxz
dec
adc
outs
pop
pushf
inc
pop
mov
mov
sbb
(bad)
lods
daa
shl
fild
popf
jg
inc
or
sub
test
xor
mov
sbb
mov
push
in
mov
retf
mov
icebp
fdiv
pop
xor
repnz
or
leave
or
jle
pop
inc
mov
imul
sbb
cmp
sahf
cmp
iret
movs
mov
out
or
pop
dec
fcomp
clc
jg
les
pushf
jecxz
rol
bnd
sub
jo
(bad)
aaa
pop
leave
movs
mov
or
add
inc
test
pop
add
sbb
inc
or
pop
mov
stos
mov
xor
aam
pop
(bad)
rcr
jo
xchg
or
outs
lea
or
retf
into
clc
push
sbb
cld
in
pop
stos
ret
and
pop
dec
push
pop
bound
pop
xor
je
pop
mov
mov
and
rcl
jecxz
mov
sbb
adc
jo
xor
fstp
test
adc
and
dec
push
call
sub
repnz
add
mov
outs
jns
daa
cmp
add
push
fwait
cwde
sub
sahf
mov
cli
and
push
pop
xchg
jmp
mov
test
xchg
mov
dec
xchg
dec
jmp
ds
ins
mov
fadd
xor
sbb
mov
adc
jo
stos
or
xchg
jp
add
fild
cwde
sbb
adc
sbb
inc
clc
mov
into
fst
xchg
leave
loope
push
aas
data16
imul
leave
rcl
js
std
rcl
mov
xor
into
pop
(bad)
push
mov
aam
lods
push
mov
pop
nop
fild
cmp
mov
jbe
mov
shl
inc
aad
adc
cmp
popw
rol
rcr
hlt
or
dec
dec
sar
xchg
jb
ds
imul
ror
scas
sahf
jnp
and
das
retf
cs
in
aas
and
inc
dec
mov
xchg
ins
sbb
and
jl
push
push
jb
xchg
div
adc
outs
test
(bad)
ds
pop
das
dec
and
xchg
xchg
pop
sar
call
clc
pop
retf
mov
push
jmp
add
dec
stos
xchg
sub
cli
push
daa
das
inc
add
aas
icebp
xchg
add
push
mov
into
rol
or
dec
cmps
hlt
mov
mov
xor
aas
icebp
scas
mov
or
es
arpl
cmp
mov
sbb
mov
and
(bad)
dec
sub
call
push
lods
(bad)
cwde
ret
ja
jns
jo
jns
push
pusha
loop
jno
stos
xor
push
int3
mov
push
jno
ss
cmp
adc
mul
mov
js
push
cld
mov
dec
mov
cld
ss
(bad)
sbb
int
jnp
int
repz
dec
aas
dec
pop
clc
cmp
sub
clc
mov
mov
xchg
imul
add
ins
(bad)
mov
dec
scas
push
push
loopne
out
xor
arpl
test
push
xchg
aaa
ss
adc
jne
push
in
add
xor
addr16
mov
or
sti
lock
xor
je
jb
add
(bad)
sub
or
push
fwait
movs
adc
jg
in
test
xchg
cmp
sbb
mov
xor
lods
sti
shl
div
aad
mov
scas
pusha
adc
stos
mov
pop
loopne
mov
or
xchg
fwait
cs
cmps
fstp
sbb
and
(bad)
outs
lock
jnp
bound
stc
scas
jno
inc
xlat
inc
outs
lahf
call
lahf
cmp
and
enter
repnz
jg
mov
out
mov
int3
repz
(bad)
xor
fldcw
std
adc
and
add
aam
adc
xchg
add
cmp
rol
jecxz
mov
out
enter
lds
cmp
cwde
data16
in
sti
dec
sbb
popf
mov
out
xor
data16
pop
fisubr
push
pop
sub
inc
out
daa
add
mov
dec
mov
mov
in
jmp
and
add
xchg
sbb
imul
pop
in
or
bound
or
in
push
mov
das
add
xlat
or
shr
mov
ds
imul
or
repz
sub
pop
or
inc
enter
test
and
sti
mov
mov
push
adc
jecxz
xchg
mov
iret
cld
jge
adc
mov
dec
adc
inc
ss
push
sbb
(bad)
and
inc
call
xor
test
icebp
mov
cmps
dec
test
adc
cmc
mov
pop
inc
push
mov
cmc
jb
push
fnstcw
cmp
scas
adc
push
mov
or
iret
jmp
xchg
sub
rcl
jecxz
dec
mov
pop
push
mov
sub
test
sahf
push
shl
add
int3
or
cmp
mov
push
mov
imul
mov
sub
pop
(bad)
fistp
cmp
scas
push
mov
test
jno
test
add
rcr
adc
fisubr
mov
shr
sahf
loope
push
dec
mov
mov
dec
add
stos
out
ror
lods
cli
imul
inc
outs
out
mov
movs
in
adc
sahf
daa
scas
jno
jb
data16
xchg
pusha
sub
fidiv
adc
dec
and
xor
jne
mov
lea
pop
rcr
add
outs
fadd
test
lds
and
aam
dec
out
push
movs
sub
bound
std
dec
xchg
push
sbb
lods
dec
lods
retf
ret
and
sub
sar
rol
loopne
cmp
test
je
and
in
add
pop
cmp
jp
xor
std
mov
fist
add
jns
rcr
push
xor
inc
cwde
(bad)
cmp
popf
push
sbb
addr16
out
dec
cmps
stos
mov
sbb
add
inc
sub
jne
gs
jecxz
fdiv
lock
(bad)
out
cmps
xlat
lock
call
mov
sub
sbb
shl
push
mov
dec
jmp
sar
pusha
and
add
mov
ror
mov
xor
mov
mov
sahf
jbe
icebp
outs
mov
jmp
fisub
icebp
cmp
push
xor
dec
js
sti
inc
ds
cmovge
push
ds
mov
ins
jmp
shl
int3
push
in
jge
popf
js
fbld
fs
scas
mov
push
mov
pop
cmp
outs
cmps
shl
sub
movs
jnp
cmps
(bad)
(bad)
cmp
jb
inc
fisubr
mov
sub
add
popa
mov
iret
movs
push
imul
daa
fidivr
dec
aam
add
out
adc
mov
xchg
mov
std
jl
mov
aam
sbb
(bad)
push
add
adc
repz
outs
ret
sbb
mov
pop
shl
jb
std
jbe
fld
je
dec
mov
jmp
movs
cld
pop
daa
cmp
lods
out
push
dec
xchg
es
dec
mov
idiv
xchg
sbb
clc
mov
cld
sub
into
imul
push
and
ret
inc
movs
pop
adc
xchg
movs
je
dec
mov
push
jo
push
cmp
cwde
(bad)
movs
ss
mov
out
addr16
aad
dec
in
sar
(bad)
(bad)
adc
ins
repz
mov
(bad)
(bad)
and
or
test
mov
add
movs
ins
mov
call
lock
mov
scas
push
test
imul
add
mov
lahf
(bad)
repnz
cmp
les
cli
inc
mov
xor
repz
pop
cdq
mov
fimul
pop
add
fnstcw
popf
daa
push
daa
jmp
fadd
inc
pop
inc
int3
push
pop
fdivr
nop
inc
shr
movs
repz
mov
(bad)
popf
add
loope
fwait
jmp
inc
sti
adc
int3
outs
mov
int3
and
sub
loopne
les
cld
ins
dec
jmp
lods
movs
adc
or
data16
xchg
dec
dec
sbb
sahf
cmp
mov
mov
sbb
test
es
mov
test
mov
shl
icebp
add
pop
and
aas
sub
popf
retw
xchg
push
xchg
mov
test
daa
fsub
push
jmp
or
cld
cmp
pop
imul
test
fwait
inc
mov
adc
test
pushf
daa
cmp
sbb
mov
jle
int3
inc
sub
add
mov
xor
jl
inc
push
scas
adc
aam
fisubr
or
arpl
out
or
inc
xchg
(bad)
fadd
shl
in
inc
sbb
gs
popf
pushf
xchg
xchg
sub
mov
fidiv
leave
es
out
cmc
mov
mov
addr16
jge
retf
jmp
jnp
out
daa
and
hlt
or
cmp
sub
fcomi
pushf
(bad)
pop
pop
(bad)
sti
inc
pushf
jg
(bad)
adc
mov
or
lock
and
xchg
and
jnp
setns
xchg
dec
ret
loop
aad
xchg
retf
mov
xor
ins
adc
sbb
adc
mov
dec
rcl
add
or
into
ins
mov
sub
sti
test
push
call
fstp
cdq
mov
inc
add
imul
scas
fwait
adc
loope
fld
xor
imul
jno
add
push
fisttp
mov
loop
dec
pusha
jno
ss
cs
div
sub
loop
jp
mov
mov
neg
cmps
mov
fadd
and
fbld
es
inc
and
inc
push
cli
enter
mov
fsubp
dec
sbb
sbb
inc
(bad)
aas
push
pop
loope
leave
icebp
arpl
pop
push
pop
lods
push
inc
and
clc
test
add
fdiv
xchg
shl
cmc
jne
xor
mov
pusha
lea
(bad)
cli
ss
cmp
cmp
and
aaa
pop
add
or
sub
add
sbb
add
xrelease
pop
mov
sti
shr
xor
lea
hlt
or
test
mov
rcl
dec
inc
jg
xor
fstp
mov
out
and
in
ja
pop
cwde
ret
test
mov
movs
movs
lea
jbe
mov
addr16
inc
jne
and
outs
mov
out
loope
xchg
and
dec
sbb
dec
cdq
ds
repnz
adc
pop
sbb
fstp
(bad)
xlat
sbb
mov
mov
pop
mov
jp
fisub
mov
add
out
xor
xchg
mov
sahf
jecxz
pop
adc
mov
mov
adc
inc
jne
fiadd
cmp
jne
and
and
sti
cmp
fcomp
mov
mov
stos
xor
es
mov
popf
hlt
mov
and
push
cld
sub
mov
jne
adc
sub
aas
adc
jnp
loop
mov
pop
xor
daa
ins
push
imul
and
xchg
jl
fcomp
pop
mov
and
xor
add
rcr
movs
ss
pop
out
xchg
push
add
imul
arpl
mov
cmp
sbb
enter
pusha
sub
loopne
mov
cmp
adc
test
ret
fidiv
and
mov
je
sbb
cmps
dec
loope
je
iret
shl
test
inc
ins
mov
stc
sbb
das
jp
fiadd
neg
pop
adc
sub
sbb
shr
lock
test
jecxz
dec
mov
mov
sub
dec
popa
pop
nop
sbb
sub
push
ins
dec
push
stos
mov
dec
xlat
sub
jmp
mov
outs
(bad)
(bad)
xor
aas
push
in
loop
dec
out
rcl
and
icebp
and
es
pusha
pushf
adc
iret
enter
dec
ins
sbb
mov
push
sub
pop
sti
xor
pop
daa
imul
sub
mov
int3
jmp
mov
inc
outs
out
jp
add
mov
push
and
xor
lahf
add
lods
lahf
dec
lods
add
call
xchg
nop
jne
data16
or
shr
cmp
idiv
mov
dec
sbb
xor
mov
pop
inc
jmp
bound
xor
push
ret
into
sbb
ret
es
sbb
mov
pushf
in
push
jl
xchg
xor
xchg
cmp
out
shr
sbb
mov
xor
ja
iret
inc
jmp
mov
popa
stos
test
(bad)
pop
or
fsub
xchg
add
inc
mov
inc
sahf
sahf
bound
push
xchg
rcl
daa
inc
lods
mov
(bad)
outs
or
bound
sbb
or
mov
cmp
cmps
sbb
cmp
call
jl
add
lods
mov
stos
and
ins
dec
pop
mov
and
xchg
ror
pop
pop
dec
inc
or
add
gs
mov
or
sbb
retf
cwde
in
outs
push
mov
ror
adc
fpatan
or
das
mov
xchg
fisttp
test
or
sub
ret
inc
mov
lock
push
and
fs
int3
xor
lock
cmp
or
addr16
cld
stos
(bad)
dec
frstor
sub
pop
inc
loop
cmc
iret
in
mov
xchg
dec
scas
mov
fwait
das
adc
fucomp
dec
(bad)
cmp
mov
xchg
(bad)
or
fcom
sti
xor
sub
call
jae
xchg
cmp
movs
sbb
dec
sub
lods
sub
sub
push
cmp
push
or
jo
(bad)
add
int3
das
popf
mov
jp
in
sub
mov
xor
call
(bad)
sbb
shr
pop
push
push
call
fdiv
shr
mov
repnz
cmp
cmps
(bad)
mov
dec
and
ins
mov
movs
test
pop
lahf
cmp
cs
cmp
gs
test
xor
test
jg
pop
xchg
sub
inc
cmp
push
pop
xor
cwde
mov
sub
mov
inc
sbb
sar
pop
popa
(bad)
scas
test
sub
xor
push
push
sbb
mov
mov
sub
or
jle
mov
pop
jb
pop
jno
cmp
addr16
fisub
push
xor
call
push
pop
and
aad
adc
iret
jp
pop
pop
dec
arpl
pop
inc
(bad)
in
and
int3
dec
or
mov
push
xchg
dec
push
xor
fnstcw
sub
std
lea
stos
pop
pop
stc
mov
adc
lods
stc
adc
stos
push
pop
sbb
aas
mov
out
push
fimul
adc
sub
pop
popa
xor
test
sub
out
dec
popa
ror
repz
test
jns
xor
sub
jl
jge
or
mov
push
mov
and
inc
mov
pop
aaa
mov
not
jne
sub
push
xchg
inc
aad
adc
sbb
and
in
(bad)
int3
mov
dec
mov
or
popf
jb
aas
std
call
pop
push
fsub
inc
push
and
std
sbb
adc
into
fst
jnp
xor
outs
pushf
(bad)
and
pop
jno
jae
xor
push
jb
xchg
int3
scas
repnz
mov
inc
jne
jle
pop
jp
je
jno
push
out
pop
push
shl
enter
popf
sbb
mov
xor
sbb
fimul
(bad)
stos
inc
dec
loop
xchg
clc
sub
xlat
sub
adc
clc
sbb
and
(bad)
push
xchg
popa
pop
sub
bound
int3
out
(bad)
mov
adc
or
cmp
jmp
xor
sub
adc
jns
dec
or
mov
push
mov
rcl
adc
fdecstp
xor
adc
push
cmova
icebp
xchg
in
or
stos
call
xchg
cdq
and
mov
fs
adc
cmc
adc
mov
xchg
jle
retf
xchg
ret
adc
xchg
add
outs
outs
retf
fldln2
jle
retf
retf
nop
push
inc
mov
and
cld
(bad)
inc
sar
bound
in
repz
popa
std
imul
cmc
push
inc
and
loopne
add
jb
ins
adc
(bad)
je
and
rcl
mov
dec
sbb
sub
sub
cld
pop
sub
mov
clc
inc
fdiv
xchg
stos
sub
xor
in
xchg
push
ret
in
cmp
aad
add
jl
mov
fadd
cmpxchg
lods
cmp
adc
aaa
mov
pop
pop
in
xchg
mov
cmp
adc
pop
lds
mov
cmc
push
add
and
daa
xor
mov
je
inc
gs
sub
pop
sbb
fst
xlat
mov
add
mov
popa
mov
push
push
jb
mov
popf
xor
jne
push
sub
cmp
data16
cmp
imul
cli
or
cld
das
stc
in
xchg
sub
xor
retf
pop
cs
mov
mov
and
imul
jg
and
xlat
int
cs
pop
lods
mov
sahf
adc
xchg
ror
imul
ficomp
(bad)
sub
sbb
push
sub
ins
in
xlat
mov
inc
pop
icebp
imul
fwait
xor
dec
mov
push
bound
pop
mov
ficomp
cmp
not
inc
add
pop
repz
or
or
call
fnstsw
mov
mov
mov
mov
or
call
in
ins
push
shl
data16
add
enter
xchg
jge
xor
mov
fadd
scas
push
xchg
inc
xchg
push
pop
mov
dec
push
mov
aaa
add
ss
fistp
dec
push
fidivr
push
dec
in
xchg
inc
in
pop
out
popa
retf
sub
aam
sub
xor
jae
(bad)
pushf
mov
ret
pop
add
popa
cmp
stos
js
sub
xor
jge
imul
add
or
jnp
in
and
jno
stc
cmp
scas
ret
mov
push
sub
mov
add
std
push
out
jl
sahf
and
je
cmp
mov
imul
movs
cmp
fadd
push
pusha
fld
xchg
int3
movs
int
repnz
cmp
ror
test
and
sbb
mov
cmp
jo
iret
int3
adc
das
jns
retf
adc
push
cmp
pop
in
xchg
ret
mov
or
or
push
or
test
xor
sub
daa
jle
cmps
js
stos
test
sub
xchg
cmp
push
push
push
mov
push
cmp
ret
push
mov
shl
imul
mov
cwde
pop
jecxz
loope
push
scas
cwde
pop
or
sub
je
ss
xor
ja
cmp
mov
test
mov
mov
xchg
ins
fs
or
or
fdivr
cmp
mov
ja
mov
sub
or
or
rcr
fcmove
(bad)
repz
pop
popa
mov
fild
cmp
test
dec
jbe
mov
pop
imul
inc
or
adc
sub
fiadd
mov
retf
jbe
fs
inc
or
xor
pushf
or
mov
mov
(bad)
sbb
xor
mov
pop
jle
(bad)
mov
pusha
push
xlat
cmp
(bad)
in
pop
add
add
sbb
push
leave
push
nop
mov
and
jne
dec
mov
lods
inc
mov
ins
sub
aad
out
pushf
sub
ds
loope
jno
retf
jnp
adc
inc
mov
dec
int
sub
or
push
dec
xchg
sbb
lds
pop
ret
jle
jmp
fnsave
sbb
(bad)
and
fsubr
js
inc
scas
mov
jmp
es
sub
push
gs
sti
xchg
ins
test
int3
sbb
shr
lods
jp
mov
cmp
fisubr
sub
xor
or
sbb
mov
adc
cld
mov
pop
into
rol
lea
jge
xchg
sub
push
fld
not
push
sbb
idiv
jae
je
(bad)
mov
imul
enter
add
shr
scas
popa
push
ja
mov
popf
outs
mov
clc
fnstsw
fld
mov
dec
or
xor
mov
pop
push
pop
cdq
loope
push
mov
enter
and
enter
cmp
and
mov
and
sti
iret
stos
sub
outs
mov
enter
enter
stos
cmp
push
hlt
jnp
shl
push
test
mov
dec
sbb
out
cmp
das
and
mov
dec
dec
sbb
test
mov
and
mov
push
push
sbb
jmp
lods
push
sub
jmp
(bad)
lods
enter
xchg
mov
cmp
out
add
(bad)
call
inc
movs
popa
mov
jp
fisub
xchg
std
loop
add
stc
cmp
aaa
and
add
push
mov
daa
fwait
mov
aad
xor
and
mov
or
dec
xchg
cld
ins
mov
lea
or
push
cld
imul
jb
sti
std
cld
fsubr
add
in
cwde
xor
sbb
cs
imul
cmp
mov
cmps
stc
ds
retf
fadd
push
retf
outs
stos
fwait
retf
xor
sti
pop
jno
xchg
mov
mov
loopne
add
mov
cmp
ret
dec
mov
sti
outs
outs
loopne
ja
ret
test
jmp
sbb
(bad)
fstp
int3
int
dec
cmp
mov
ins
iret
sub
adc
jl
pop
jns
xchg
adc
sub
mul
jb
mov
mov
(bad)
push
dec
std
pop
(bad)
js
je
scas
outs
push
adc
rcl
std
scas
sti
cmp
push
adc
mov
mov
mov
movs
imul
xchg
xor
pop
or
pop
jns
dec
fldcw
fs
and
out
add
ror
fs
mov
shr
xchg
mov
inc
addr16
mov
jge
mov
lahf
jb
jns
idiv
adc
cld
les
or
pop
out
mov
pop
loope
mov
sub
jae
mov
scas
cmp
pop
or
repz
test
addr16
outs
xlat
sbb
aaa
mov
or
dec
nop
out
out
icebp
jmp
das
pop
inc
dec
(bad)
mov
cld
or
frstor
sub
add
aaa
(bad)
cmp
jp
int
addr16
ffree
cli
call
add
movs
push
mov
push
sti
push
dec
test
mov
aam
jmp
mov
cmp
sar
call
pop
dec
ror
in
arpl
xchg
leave
neg
or
dec
daa
loopne
bound
xchg
sbb
adc
in
inc
or
iret
mov
push
xor
xor
jbe
scas
or
pop
mov
setp
mov
cld
jbe
xchg
cmp
sbb
xor
fcom
adc
mov
aaa
add
neg
mov
cmp
dec
dec
(bad)
add
sub
call
pop
je
pop
push
cs
pop
sub
dec
dec
mov
hlt
retf
fisubr
pusha
pop
cmps
ds
fmul
adc
xchg
jg
dec
lods
test
sar
push
inc
call
cmp
adc
out
fbstp
aad
jns
add
mov
mov
jmp
and
(bad)
(bad)
push
repnz
das
dec
adc
xor
call
lods
nop
enter
(bad)
cmps
retf
inc
ret
js
mov
call
jo
and
or
lods
xor
inc
and
mov
pusha
aaa
xchg
fwait
inc
repnz
jns
jmp
jmp
mov
inc
pop
adc
gs
repnz
cmp
ror
dec
movs
cmp
ins
and
in
scas
ins
mov
jle
popa
or
gs
je
pushf
sar
xor
repnz
add
jno
rcl
push
push
add
mov
or
and
js
scas
and
and
sbb
into
dec
inc
ss
cli
mov
mov
sbb
cmp
icebp
xchg
aam
scas
fstp
jae
cmp
or
add
mov
mov
push
idiv
inc
pop
outs
repnz
cld
mov
sti
(bad)
mov
loope
aam
lods
nop
movs
sbb
push
std
jmp
(bad)
cmp
fsubr
jns
lock
repnz
inc
pop
mov
clc
fcmovnu
frndint
int3
outs
jnp
and
xchg
call
pushf
test
dec
adc
lock
stc
cli
jge
out
dec
pop
cwde
mov
push
pop
push
mov
mov
sbb
rcr
das
ret
imul
cmp
shl
movs
std
or
mov
mov
dec
inc
jp
mov
test
lods
(bad)
clc
lods
sub
inc
cmc
pop
les
push
xor
sub
ficomp
fs
outs
sub
or
jmp
cli
mov
aam
iret
inc
push
fild
jae
xor
xchg
lods
pop
fcom
test
lods
(bad)
scas
daa
and
fist
adc
ins
sub
sub
mov
inc
push
pusha
add
xchg
loope
mov
cmp
pop
or
cld
mov
int3
sub
mov
jg
das
pop
mov
pop
adc
or
test
sbb
fild
daa
test
xchg
mov
inc
cli
cmc
jl
pop
pop
sbb
add
rcl
test
mov
sbb
inc
out
rol
add
je
pop
aam
std
xor
lahf
cmps
or
adc
push
inc
mov
jae
sti
outs
sub
pop
(bad)
xor
and
jg
and
sti
xchg
iret
sub
pop
fbld
lea
mov
adc
cmp
jnp
loope
sub
loope
loopne
adc
sbb
out
adc
fdivr
movs
pop
mov
fcmove
mov
aaa
adc
fmul
jbe
mov
shl
lea
mov
ins
fbld
aam
inc
inc
imul
fisttp
mov
xor
cld
mov
sbb
xor
adc
mov
dec
jl
popf
pop
fsin
dec
jge
fist
repnz
push
sbb
sub
clc
inc
mov
(bad)
aam
xchg
dec
lods
or
outs
mov
inc
jmp
repnz
cmp
mov
jb
ss
retf
test
cmp
icebp
sub
js
scas
xchg
test
into
mov
(bad)
(bad)
movs
push
pop
es
add
adc
dec
inc
pop
dec
pusha
pop
sti
xor
inc
jbe
xor
js
push
jle
push
adc
push
dec
dec
push
pop
icebp
sti
ds
lods
js
stos
inc
fdiv
pop
jmp
fcom
les
out
mov
aaa
sahf
in
sbb
pop
mov
enter
call
inc
int
repz
outs
retf
xor
pop
loope
or
jbe
push
jp
mov
xor
add
shr
popa
shr
and
inc
sub
xor
inc
rcl
pop
or
cmp
call
or
inc
mov
shl
jmp
sahf
in
mov
fild
inc
cmp
mov
enter
xchg
gs
fldenv
inc
test
shl
clc
sbb
cmps
dec
cmp
fstp
loopne
cs
mov
add
push
repz
or
jle
(bad)
or
(bad)
mov
jb
fsub
mov
pop
mov
fcmovnb
inc
add
shr
jl
nop
rcr
dec
leave
lock
push
push
ds
loope
(bad)
sub
dec
test
addr16
mov
pop
(bad)
sub
fbstp
lock
sahf
sub
add
dec
mov
dec
mov
inc
fmul
xchg
lds
into
push
cs
nop
xor
mov
popa
dec
mov
das
jne
in
pop
ins
cmps
aaa
fdiv
(bad)
adc
pop
fild
daa
xor
xchg
bswap
jmp
add
adc
fidivr
movs
je
popa
ror
lea
add
aaa
fs
lods
pop
cmp
aad
or
(bad)
mov
fld
sbb
lods
pop
cmp
out
push
lahf
pushf
cmc
xchg
mov
inc
xor
mov
mov
jmp
fdiv
call
in
std
mov
cwde
iret
push
mov
pushf
push
pop
mov
mov
sub
jmp
xor
cmps
ret
mul
mov
into
sub
mov
xlat
push
inc
xor
jl
jge
pop
jmp
pop
sbb
dec
dec
or
(bad)
cmp
xor
(bad)
(bad)
adc
(bad)
ficom
xor
lods
inc
pop
repnz
push
mov
test
sti
mov
mov
lods
cmps
and
retf
jmp
test
iret
mov
dec
movs
out
mov
retf
lods
push
(bad)
dec
dec
(bad)
pop
paddb
outs
dec
or
mov
dec
lock
imul
enter
mov
sub
aaa
pop
add
jmp
sub
sahf
adc
dec
(bad)
push
test
sti
data16
fdivp
inc
sahf
xchg
xchg
add
pusha
retf
add
inc
repz
xor
jnp
mov
inc
out
push
addr16
das
sub
and
mov
rcr
push
xchg
xor
inc
es
adc
(bad)
pushf
jo
adc
sbb
ror
ror
mov
fimul
push
stc
cwde
push
mov
call
and
fimul
ds
and
neg
push
inc
(bad)
jbe
fsubr
dec
popf
and
into
nop
std
call
imul
ss
dec
in
jg
pop
or
pop
hlt
xor
jmp
in
cmp
sar
pop
gs
dec
jmp
push
and
push
fdivr
imul
ret
pop
ret
daa
lds
add
mov
iret
xchg
push
leave
mov
xchg
push
add
imul
(bad)
mov
stos
loopne
add
and
in
sbb
rcr
cmp
sti
inc
sbb
aaa
cwde
or
shr
(bad)
mov
idiv
call
xchg
stos
pop
mov
test
shr
mov
mov
ret
dec
cmps
inc
jl
pop
jbe
push
xchg
jl
imul
pop
cmp
inc
and
cli
ds
nop
or
cmps
xchg
addr16
xchg
iret
xchg
inc
sbb
lods
int3
dec
(bad)
frstor
std
push
push
cmps
and
xchg
or
sbb
inc
pop
xchg
(bad)
adc
mov
daa
xor
mov
add
jl
gs
aaa
cmps
outs
inc
jo
loopne
xchg
aaa
in
push
retf
pusha
jno
(bad)
loope
pop
xor
and
or
push
or
xchg
repz
(bad)
test
cwde
sbb
popf
sub
out
pop
sbb
fcomp
or
outs
and
sub
bound
fidiv
cmps
cmp
mov
or
mov
and
jmp
mov
mov
iret
std
scas
(bad)
(bad)
push
bound
test
shr
hlt
ret
loop
int3
int
or
xor
or
(bad)
push
jmp
push
cmp
loope
sub
test
pop
std
sbb
push
mov
idiv
outs
jl
hlt
mov
cld
leave
(bad)
or
shl
gs
jge
mov
out
addr16
add
nop
sub
daa
xchg
or
fnstcw
not
xchg
pop
adc
ins
mov
pop
retfw
jae
in
mov
or
or
and
inc
cdq
inc
test
cmp
dec
out
not
add
jb
retf
pop
jle
mov
fld
test
fwait
imul
push
lock
xchg
cmps
shl
ret
hlt
outs
sub
(bad)
(bad)
jne
cmp
pusha
cmp
outs
mov
loope
inc
add
(bad)
dec
outs
pop
in
inc
cmp
hlt
fs
out
addr16
jp
test
pop
jmp
neg
sti
push
push
sti
outs
lock
or
cmp
mov
dec
in
dec
mov
pop
mov
jmp
out
sub
cmps
push
sbb
push
test
loopne
or
inc
arpl
call
cmp
sub
jle
cmp
ror
mov
jo
call
aad
ds
cmp
mov
dec
jo
cld
das
in
mov
push
popf
adc
test
ja
(bad)
sub
popa
retf
les
arpl
push
or
pop
test
scas
retf
shl
inc
adc
ret
fldcw
sub
cmps
xchg
movs
mov
arpl
and
shr
mov
add
(bad)
ss
es
outs
mov
pop
leave
xor
jecxz
push
jp
sbb
jmp
push
and
(bad)
aaa
sub
les
inc
jmp
test
test
xchg
(bad)
xchg
mov
hlt
pop
cmc
out
lds
lahf
pop
xor
lock
fisttp
test
dec
mov
pop
scas
add
mov
into
dec
jmp
movs
or
pop
sti
loop
sbb
add
pushf
leave
add
je
and
jbe
shl
push
inc
cld
and
leave
dec
fdivr
cmp
jne
sahf
push
repz
push
aam
xchg
call
fst
mov
repz
stos
std
push
sahf
jl
xor
mov
jno
loopne
xor
mov
leave
hlt
shl
mov
add
lea
js
test
cs
fistp
dec
aam
ret
and
loop
xor
rdtsc
fcom
pop
jg
push
rol
cdq
fwait
inc
xchg
sar
xchg
aad
scas
pop
ror
leave
dec
fisubr
ret
add
xchg
adc
cmp
lods
adc
(bad)
in
ins
rcl
cli
inc
push
(bad)
(bad)
out
rcr
jmp
gs
lahf
out
ja
sub
cmp
popa
jge
lods
stos
jne
adc
mov
sar
push
sbb
jno
int
mov
popf
fistp
push
ja
mov
inc
shl
or
ror
add
and
fcomip
inc
xchg
inc
mov
jecxz
lock
sbb
test
aam
dec
mov
cs
mov
fsubr
movs
scas
gs
and
clc
cmp
jecxz
adc
sar
clc
push
ds
mov
call
xchg
dec
cmps
retf
ss
jnp
imul
adc
fadd
test
pop
xor
xchg
adc
jp
lods
(bad)
imul
pushw
adc
mov
sub
xor
rdtsc
xchg
mov
xchg
lea
pop
sti
(bad)
pushf
daa
(bad)
xlat
fld
pop
(bad)
stc
daa
sbb
pusha
aad
fwait
jp
pushf
jb
mov
pop
bound
adc
xchg
xor
daa
jne
jmp
pop
pop
cmp
xchg
xor
mov
mov
call
in
cmp
mov
jb
pop
movs
fs
outs
and
shl
xchg
js
fimul
cld
add
inc
call
imul
and
aad
lods
inc
out
and
and
cmp
mov
inc
fidiv
movs
sub
cwde
jle
outs
or
sbb
push
addr16
scas
jmp
into
xor
mov
jno
jno
retf
or
cmps
pop
xchg
push
sbb
mov
push
cmp
out
jae
shr
jp
xchg
call
add
pop
xor
in
pop
clc
pop
lds
mov
jbe
xor
(bad)
(bad)
xor
fs
pop
push
retf
push
mov
(bad)
mov
sub
jge
push
mov
sbb
inc
aaa
mov
jmp
outs
ja
xchg
cmp
pop
aaa
mov
fsubr
les
aaa
mov
inc
cmp
bound
dec
pushf
push
jl
std
outs
adc
and
pop
(bad)
fwait
retf
mov
fisub
aas
popf
psadbw
xor
mov
fs
mov
ja
xchg
push
adc
pop
jbe
ret
pop
dec
mov
push
fwait
imul
xor
fcom
das
pop
mov
les
fs
mov
sbb
sahf
addr16
inc
rcr
mov
lea
and
pusha
sahf
ins
int3
je
add
out
cmp
dec
pop
scas
popf
or
cli
or
mov
inc
adc
(bad)
fld
jg
and
xlat
aaa
xor
or
add
mov
adc
inc
xchg
mov
xlat
mov
cmps
arpl
push
sbb
push
hlt
or
mov
mov
pop
retf
dec
dec
pop
not
lods
pusha
popf
push
push
or
dec
in
fmul
push
call
repz
ds
mov
js
xchg
(bad)
in
or
jns
dec
mov
cmp
lea
or
sbb
test
icebp
in
ret
inc
xchg
sbb
xor
add
mov
test
xor
and
ins
xchg
(bad)
fs
mov
popf
leave
and
(bad)
icebp
xor
sti
xchg
and
in
cmps
inc
sub
xchg
mov
addr16
(bad)
cli
iret
aam
xor
dec
add
shr
sbb
xchg
xor
jno
std
test
mov
in
outs
push
pop
inc
pop
jp
and
addr16
aaa
mov
pop
ss
pop
cld
add
cmp
push
mov
adc
fcmovne
mov
call
aas
jge
shr
stos
sbb
sahf
inc
jge
jmp
jns
jnp
mov
mov
pushf
lods
cmc
mov
mov
adc
cmp
dec
mov
adc
lahf
mov
sbb
jecxz
cs
jge
cmps
fcmovbe
dec
jns
cmp
mov
repnz
dec
mov
into
dec
aas
add
call
leave
leave
(bad)
data16
mov
pop
mov
(bad)
inc
jl
cdq
out
imul
cdq
mov
dec
jp
jne
(bad)
in
adc
cmp
mov
xchg
adc
adc
div
ja
in
and
sub
ret
pop
mov
pop
pop
xor
dec
retf
inc
out
cmp
cmp
fdivr
je
mov
and
fidiv
repnz
push
sbb
or
outs
inc
popa
ins
push
pusha
lea
shr
enter
popf
je
rcr
xchg
jae
jns
imul
sbb
es
and
mov
cmp
adc
pusha
jmp
mov
jle
jmp
sub
sub
jmp
loop
(bad)
mov
bound
xor
out
scas
adc
popf
sar
jg
cmps
sbb
or
adc
scas
mov
std
mov
std
sub
ds
mov
dec
(bad)
xlat
mov
cli
mov
ret
scas
or
fwait
push
push
(bad)
push
adc
add
out
movs
ins
jmp
outs
in
stos
inc
push
in
inc
mov
sbb
sbb
push
shl
dec
jmp
jp
dec
das
and
and
xchg
enter
retf
sub
in
mov
mov
lods
retf
xor
jmp
cmps
mov
or
int
fmulp
push
mov
xchg
stos
push
pushf
in
push
test
(bad)
adc
mov
adc
aas
sbb
or
test
out
xor
mov
outs
por
push
clc
lds
add
aas
push
das
or
push
xchg
les
lea
jg
inc
int3
pop
stos
sub
leave
sbb
jle
lahf
gs
ret
js
sbb
sbb
mov
(bad)
gs
push
sub
sti
pusha
xor
clc
mov
enter
mov
and
(bad)
jp
jmp
mov
sbb
hlt
mov
jecxz
retf
and
jmp
cmp
(bad)
iret
and
mov
dec
mov
mov
pushw
jmp
(bad)
out
(bad)
hlt
bndstx
loope
mov
imul
dec
shl
fisub
idiv
mov
(bad)
jmp
fcmove
sbb
pop
in
imul
cld
in
adc
xchg
push
jmp
cmp
jl
push
jmp
scas
inc
jge
lds
and
xlat
jo
push
jl
push
enter
jmp
mov
jg
xor
add
xor
sbb
stc
inc
jp
lock
imul
inc
adc
adc
sahf
mov
mov
repnz
cmps
in
retf
test
ja
sahf
and
xor
xor
xchg
loop
ret
or
jae
mov
xor
leave
mov
imul
dec
jb
cmp
jno
inc
rcl
xchg
mov
sbb
aam
bnd
dec
xor
in
ins
imul
arpl
adc
iret
inc
lea
or
and
bound
cs
cs
xchg
jns
dec
or
jecxz
mov
popf
push
inc
data16
out
inc
call
xor
inc
jae
call
daa
or
retf
stc
jb
sub
ror
cmp
add
xor
jb
lea
dec
sub
xchg
jecxz
in
mov
dec
pop
push
ror
pop
gs
stos
or
pop
push
push
sbb
dec
sub
outs
pusha
xor
mov
fs
xchg
adc
test
stos
mov
adc
jae
jbe
fcmovu
out
fsub
and
arpl
add
outs
out
(bad)
mov
jge
jmp
and
and
mov
mov
aaa
and
push
adc
inc
repnz
push
inc
scas
out
xchg
sti
shr
pop
fimul
xchg
lds
sbb
mov
fadd
add
jno
test
fist
jmp
js
xchg
fs
sub
enter
out
sub
nop
jne
jne
popa
movs
adc
mov
in
sub
pop
and
lock
jle
mov
pop
call
sub
xlat
movs
cmp
in
pop
sbb
mov
push
int3
clc
outs
jmp
popf
push
push
aaa
mov
cli
dec
or
jecxz
fistp
enter
js
out
mov
push
movs
mov
push
hlt
mov
fnsave
xchg
jb
lods
cwde
pop
loop
jnp
and
fimul
mov
and
outs
out
and
pop
push
mov
xchg
repz
cmc
lock
and
into
push
mov
mov
add
sbb
or
mov
scas
mov
push
ja
dec
shl
adc
fsubrp
dec
aas
pusha
(bad)
pushf
mov
mov
inc
sub
push
in
push
add
dec
xor
adc
jge
jae
or
jl
fisubr
mov
sahf
jb
aad
int3
pop
aas
fucomp
jbe
mov
mul
cwde
out
pop
jns
sar
call
mov
popa
mov
stos
push
enter
jmp
mov
loopne
cld
mov
and
sar
push
push
mov
mov
movs
jno
scas
jmp
sub
loope
(bad)
cld
mov
or
scas
stos
pop
sbb
inc
cs
and
and
ins
cmp
xor
sbb
sub
adc
pop
jge
jmp
lea
or
sbb
sti
in
jmp
add
jns
mov
jmp
pop
pusha
add
cmp
sar
and
aam
mov
cmp
fs
push
inc
mov
lock
sbb
mov
popa
test
pusha
push
(bad)
pop
stos
and
jmp
mov
jl
ret
ds
xchg
stos
jbe
bound
jmp
pop
pop
or
in
addr16
rcl
cmp
push
mov
scas
or
gs
push
scas
les
stos
aaa
stos
xor
sub
test
dec
inc
repnz
loope
movs
mov
pop
dec
adc
out
add
jecxz
out
hlt
adc
gs
and
or
fcomp
in
fsubrp
xchg
bound
and
push
ja
repz
pop
rcl
in
mov
jmp
jl
xchg
push
dec
repz
(bad)
loop
sbb
sub
dec
std
loop
sub
ds
adc
rcl
push
push
pop
sub
inc
sbb
adc
xchg
ins
mov
lods
xchg
mov
mov
dec
xchg
imul
xor
push
or
adc
pop
outs
inc
pop
xor
lds
arpl
ins
in
aam
jg
xor
mov
lock
sahf
mov
jl
lods
push
out
sbb
jp
sub
xchg
inc
(bad)
mov
or
and
push
inc
std
int
pop
popa
lea
add
mov
or
or
push
push
es
pop
pop
enter
shl
(bad)
call
dec
sub
imul
(bad)
push
xor
lahf
mov
cmc
mov
pop
mov
icebp
jge
adc
iret
pop
and
dec
out
xor
and
push
repnz
aad
jbe
or
jmp
mov
inc
jno
mov
ret
mov
sub
mov
cld
loop
mov
stc
jmp
mov
icebp
out
fsubr
ror
ja
icebp
(bad)
ds
xchg
fnsave
fidiv
clc
adc
cmp
jg
int3
cli
dec
and
adc
mov
add
push
add
mov
lds
(bad)
int
mov
lods
stc
stos
pop
data16
inc
test
out
int
add
aas
shl
div
shl
jg
ret
call
dec
popa
out
shl
mov
cmps
mov
inc
int
adc
or
push
xchg
add
sub
loope
dec
cmp
movs
and
push
inc
js
mov
jecxz
mov
sbb
cmps
adc
shl
push
mov
sbb
in
mov
push
aas
jmp
dec
sub
xchg
aad
or
out
adc
shl
bswap
fmul
xor
(bad)
fcomp
lea
xchg
test
js
xor
mov
jle
lds
and
call
out
cld
rol
and
adc
retf
adc
fnstcw
shl
or
jmp
xor
xchg
xor
xor
mul
ja
jae
xlat
xchg
xchg
sub
and
jmp
push
jns
sub
jmp
cld
or
push
pushf
mov
icebp
js
xchg
pslld
mov
mov
inc
pusha
leave
std
mov
inc
xchg
call
fcom
std
sub
push
outs
daa
jmp
add
dec
aad
inc
mov
(bad)
(bad)
cmp
pop
sar
mov
pop
(bad)
int
add
out
inc
test
mov
push
xchg
out
inc
or
jle
std
into
pop
push
sub
test
ja
out
sub
dec
push
cmp
or
jmp
mov
xchg
inc
aad
xor
xchg
mov
(bad)
inc
popa
dec
(bad)
popf
popf
test
paddsb
cmp
jge
xchg
test
and
add
push
lods
and
(bad)
mov
mov
call
push
popf
sahf
or
pop
sbb
push
into
(bad)
cld
or
test
fild
ret
outs
loopne
cmps
fs
imul
jge
fwait
push
jo
rcr
lds
(bad)
dec
push
adc
xchg
repnz
in
sbb
mov
jmp
sbb
add
loopne
out
daa
arpl
sbb
aaa
cli
jne
pop
and
rcl
lock
pop
outs
mov
sub
mov
out
sbb
sub
push
rcr
pop
add
aaa
call
scas
mov
test
aad
cli
sti
add
pop
add
cmps
jmp
fxtract
jg
or
mov
movs
sbb
clc
hlt
hlt
cdq
adc
lahf
xor
rcr
mov
inc
xor
push
bound
mov
mov
out
mov
loopne
jg
aaa
sub
je
sub
cmp
add
jmp
ja
(bad)
xor
sub
mov
out
add
div
cld
stos
ret
aad
fiadd
js
outs
rcr
movs
xchg
call
data16
adc
dec
out
sti
mov
cdq
scas
test
cwde
mov
fdivrp
cld
ss
loop
and
outs
(bad)
mov
sar
cwde
xchg
int3
scas
ds
into
and
add
lea
mov
or
ret
jmp
jl
mov
or
cmp
jmp
add
scas
sub
ss
ror
cld
enter
sub
add
fnsave
rol
mov
xchg
leave
pop
(bad)
(bad)
mov
scas
pop
xor
mov
jb
(bad)
pop
mov
pop
nop
inc
scas
and
push
outs
cmps
scas
xor
xchg
dec
push
mov
aam
ss
fst
iret
pop
dec
jbe
retf
xchg
jno
sub
or
in
loope
popf
leave
or
push
test
data16
movs
mov
cmp
xchg
mov
cmp
out
xchg
jne
add
cmc
xor
push
xchg
(bad)
mov
xlat
pop
lods
sbb
jo
push
pop
das
and
jns
cmps
cmp
jg
push
push
mov
clc
ds
push
and
mov
add
jmp
or
and
ficomp
cmp
test
sbb
and
cmp
sub
sub
test
cdq
arpl
out
or
dec
fcmovnbe
inc
aad
not
loopne
aas
lds
cmp
dec
sub
add
adc
xor
add
in
fld
mov
or
cmp
or
retf
das
imul
push
pushf
mov
setno
repnz
jno
mov
addr16
test
sub
out
call
jno
ins
das
jo
pop
cld
adc
mov
mov
mov
mov
popa
clc
jo
js
sbb
push
es
jle
jns
push
js
inc
inc
das
pusha
idiv
in
data16
les
dec
std
mov
pop
ret
mov
popa
movs
shl
push
movs
in
sbb
iret
hlt
int
out
into
(bad)
rcr
dec
ja
pop
inc
jge
test
in
jle
mov
clc
sbb
pop
imul
cmps
int3
jb
stos
sbb
pop
dec
xor
rcl
push
rcl
stos
adc
out
iret
aaa
add
or
shr
pop
adc
sahf
adc
fldenv
xchg
pop
and
(bad)
mov
adc
bound
cmp
aad
inc
dec
out
or
xchg
pop
int
fcmovne
ror
retf
and
mov
mov
out
ins
jg
inc
add
sahf
xchg
fs
aaa
push
sbb
dec
inc
ret
sbb
xchg
xchg
scas
mov
adc
retf
icebp
movs
push
cmc
cmp
mov
xchg
fwait
aaa
retf
mov
icebp
fst
pop
movs
rol
fld
cdq
ss
gs
fist
movups
jo
cmps
je
test
xlat
push
ds
dec
call
xchg
mov
cdq
pop
push
dec
xchg
mov
(bad)
mov
rcr
cs
ret
sub
int3
mov
cli
out
mov
sub
sbb
lea
outs
es
push
add
dec
enter
dec
movs
pop
out
ret
or
test
fldcw
ins
sbb
push
xchg
pop
out
aad
xchg
call
xchg
rcr
xor
in
mov
sub
jns
push
aaa
mov
mov
inc
out
dec
cmp
push
mov
ds
push
(bad)
push
or
xchg
mov
and
movs
arpl
sub
lods
xchg
out
retf
imul
bnd
pop
in
inc
jle
cmps
adc
adc
xor
stos
push
push
enter
jae
cmp
add
cwde
dec
mov
mov
rol
or
sbb
dec
xchg
inc
push
dec
dec
or
in
and
shl
sbb
mov
cld
in
sub
sub
fcomp
popf
and
cmps
cmp
or
mov
shl
hlt
or
ins
xchg
ds
xchg
cmp
popf
sub
push
pop
outs
mov
icebp
or
scas
int
scas
outs
xchg
and
getsec
sub
ja
mov
stos
xor
xchg
pop
in
test
test
daa
sti
sub
sub
daa
pop
add
fs
jmp
mov
std
xor
xor
mov
in
fdivr
mov
mov
sub
xor
int
mov
repnz
cmp
test
xor
popf
js
dec
or
inc
dec
icebp
test
xor
loop
cdq
push
sub
add
icebp
ror
or
pop
or
stc
jmp
int3
mov
loope
(bad)
daa
sbb
mov
rol
pop
(bad)
enter
inc
aas
es
jmp
or
fsubp
out
push
sub
stc
adc
call
test
push
sbb
mov
fs
push
adc
pop
rol
xor
add
movs
fwait
std
or
or
adc
inc
je
or
add
lahf
ins
jle
gs
sub
fnstsw
ds
popf
adc
mov
outs
jbe
xchg
jne
inc
sahf
and
mov
neg
sbb
jns
or
scas
pop
movs
mov
cmp
mov
aaa
pop
xchg
and
loope
aas
(bad)
loop
dec
or
in
jp
inc
add
and
popf
mov
and
sahf
fmul
sub
add
and
xor
add
sbb
mov
loopne
pop
call
ja
pop
push
xchg
push
mov
fs
stc
pop
mov
sub
add
jg
xchg
cmp
popf
mov
stos
sti
imul
xchg
fldcw
or
mov
pop
and
mov
xchg
add
mov
mov
popa
jmp
inc
rcl
cmps
aad
and
cmc
or
call
js
fimul
cmp
add
sub
psubd
test
adc
add
pushf
retf
cmp
into
jae
repnz
popa
out
out
pushf
not
jge
sub
inc
sub
push
and
dec
sub
loopne
push
mov
mov
push
jbe
xchg
mov
dec
mov
mov
pop
fadd
or
test
mov
or
dec
shr
or
sbb
leave
pop
push
shr
inc
or
xor
adc
xor
jge
and
mov
dec
cmp
jle
outs
sbb
jno
cli
daa
call
xor
push
fcmovnb
add
adc
ror
jb
cmp
call
xchg
cld
stc
adc
push
call
push
pop
test
adc
xchg
jp
push
jmp
add
adc
cs
and
mov
or
leave
mov
jae
inc
popa
inc
movs
jg
aam
mov
dec
das
cmps
dec
(bad)
xor
out
dec
push
lahf
mul
push
mov
adc
aam
xor
sbb
jo
dec
add
jb
adc
pop
inc
and
xchg
dec
inc
fistp
jne
enter
retf
xor
sub
and
add
sbb
stos
ret
jb
rcr
fistp
xchg
out
adc
push
sub
dec
dec
push
stos
xchg
jbe
jl
pop
fdiv
jne
jne
imul
daa
loope
jnp
mov
push
lea
es
xchg
div
ins
jmp
(bad)
xchg
cmc
jne
test
push
push
jmp
mov
dec
pop
pop
mov
mov
test
sub
fdiv
int
shl
xor
inc
jg
inc
lods
pop
into
push
xchg
aaa
shr
mov
xchg
pop
js
outs
shl
lods
xchg
sbb
fs
cmc
push
sar
cmps
pop
sub
in
sub
adc
out
adc
stc
xchg
pop
add
inc
lea
ins
jbe
mov
mov
jno
lea
out
sbb
mov
cmp
and
or
inc
sbb
adc
mov
in
ret
xor
cmp
adc
retf
dec
sub
jmp
sub
mov
sbb
adc
jmp
shl
(bad)
push
test
test
xor
mul
inc
div
test
push
jmp
mov
das
in
sub
dec
sbb
mov
jns
add
test
sbb
cs
inc
sbb
xor
push
ss
inc
sti
pop
test
cmp
adc
xor
add
out
and
push
xor
sbb
fst
cmp
pusha
das
cmps
dec
mov
or
pop
das
mov
xor
cmps
mov
or
in
inc
inc
jp
mov
lods
das
xchg
outs
xchg
jl
push
adc
pop
xchg
mov
push
in
es
aad
pop
cmp
xchg
(bad)
pop
jl
mov
sub
sub
lods
cmps
nop
add
outs
cmc
popa
std
pushf
rol
jae
lock
adc
test
lahf
push
pusha
pop
pop
mov
cmps
mov
add
sbb
push
dec
push
push
dec
dec
xchg
(bad)
xor
stos
cmp
push
sub
adc
and
and
scas
stos
cmp
out
mov
(bad)
cmp
rcr
or
scas
adc
inc
(bad)
mov
push
push
or
xor
push
lds
ret
pop
sbb
repnz
aas
inc
add
adc
arpl
sbb
xor
repz
pop
daa
test
retf
retf
pop
xor
mov
imul
ror
inc
shl
push
or
punpckhdq
jae
sub
stos
dec
sbb
push
xor
push
adc
dec
pop
out
mov
in
call
loope
add
inc
add
enter
mov
xor
or
outs
and
(bad)
test
retf
into
inc
iret
pop
inc
pop
xor
pop
cmp
or
inc
sub
lods
jae
push
xor
or
(bad)
aam
cmp
or
push
outs
jecxz
ror
push
popa
in
adc
dec
push
stos
fwait
movs
and
cli
pushf
xchg
test
xchg
sbb
inc
je
jo
arpl
dec
loop
les
aad
dec
dec
out
daa
adc
(bad)
sahf
pop
movs
mov
cmps
mov
ficomp
or
inc
retf
xchg
inc
mov
popf
das
lea
je
out
jae
fimul
dec
test
ss
and
mov
xor
mov
movs
pop
jns
and
enter
adc
sub
sub
leave
iret
popa
std
lea
dec
push
mov
sub
ret
call
(bad)
cmp
xor
pop
ret
rol
and
(bad)
mov
jne
jns
inc
cld
xor
pop
ins
xchg
xor
jle
jnp
push
inc
test
mov
pop
loop
icebp
cmps
xchg
das
cli
test
jmp
pop
jne
pop
lock
sbb
mov
cmp
pusha
outs
in
gs
or
cmp
adc
mov
add
retf
mov
in
cmp
mov
pop
cmp
sub
push
sub
imul
and
and
cld
jge
ja
icebp
stc
popa
cwde
popa
rcl
cmps
cmps
and
inc
cdq
mov
std
lahf
sbb
and
mov
test
jmp
inc
sub
cmps
jmp
mov
xchg
mov
dec
in
cld
sbb
test
cmp
mov
dec
dec
and
and
xlat
stos
pop
(bad)
test
dec
pushf
and
cmp
cs
and
jbe
pushf
mov
mov
neg
fst
stc
mov
and
imul
call
pusha
arpl
or
pop
add
push
xchg
adc
lock
(bad)
xor
jge
jmp
xor
jne
mov
xchg
adc
daa
push
sbb
cmp
xchg
dec
enter
mov
fs
sub
cdq
fmul
push
out
cmp
(bad)
fwait
dec
pop
outs
or
xor
nop
(bad)
(bad)
pop
inc
inc
into
xor
popa
sbb
repz
jnp
cld
inc
cdq
ficom
dec
mov
lahf
lahf
xchg
pop
fs
out
push
out
call
push
mov
je
dec
js
jno
inc
mov
xor
or
xchg
push
movs
sub
pop
inc
xchg
rol
scas
sbb
pop
sub
cmc
push
aad
repnz
sahf
das
inc
pusha
pop
lods
or
imul
push
mov
shl
fsub
dec
jp
and
mov
(bad)
xchg
add
xor
or
push
fisttp
mov
push
mov
jne
pop
xchg
fs
mov
push
pushf
fdivr
adc
sub
or
adc
imul
(bad)
rdmsr
xchg
cdq
push
fld
shr
inc
pop
out
mov
scas
cwde
aad
inc
add
fistp
imul
sahf
test
mov
mov
cdq
popa
outs
push
xor
cmp
popa
jbe
js
das
fsub
in
scas
jl
(bad)
popf
mov
aam
cdq
stc
jo
fmulp
inc
retf
rcl
inc
inc
adc
or
es
in
test
test
jmp
sbb
cmp
jae
mov
pop
push
mov
push
pop
push
inc
int3
sub
adc
mov
frstor
add
idiv
lds
inc
jno
enter
fdivr
mov
retf
test
fisttp
mov
or
push
jnp
ret
shl
retf
pop
fsub
test
mov
mov
sar
cmp
adc
inc
cmp
mov
push
leave
test
test
adc
inc
pop
arpl
push
pushf
test
adc
scas
fcomp
aas
sbb
mov
push
xor
std
fbstp
sbb
in
and
inc
jp
lods
xchg
mov
sbb
lods
aaa
fs
sub
cli
ret
xchg
in
mov
pop
dec
mov
mov
shr
mov
sub
cmp
inc
mov
inc
inc
out
pop
loopne
sub
xchg
or
push
mov
push
int
jns
pop
push
push
xor
mov
dec
es
adc
clc
int
sahf
sub
mov
cdq
xchg
mov
jmp
sbb
ss
or
lahf
xchg
add
leave
xlat
mov
mov
(bad)
sti
mov
sar
shr
stos
push
into
lea
movs
dec
rol
cli
(bad)
adc
in
mov
shl
repnz
inc
inc
jmp
sub
sar
stc
cmps
mov
or
loope
dec
aaa
out
fidivr
jl
jae
adc
adc
cli
mov
leave
fchs
rol
push
(bad)
pop
jmp
inc
neg
jb
xchg
add
lds
repnz
fdiv
mov
imul
ja
loopne
add
sbb
retf
cs
dec
xchg
lea
cmp
dec
sub
add
mov
jp
test
into
cs
jo
in
jae
push
loope
lods
stos
mov
lock
rcl
xor
xor
test
xchg
add
(bad)
cmc
sub
mov
pop
fisub
out
sar
pop
xor
mov
xchg
addr16
dec
jg
iret
push
push
in
test
cmp
lods
inc
(bad)
scas
mov
(bad)
add
mov
aaa
rcr
adc
mov
in
jmp
fcmovu
add
xor
cmp
push
sbb
mov
retf
adc
fsub
add
into
and
retf
mov
sub
xchg
adc
cs
push
pop
lea
aas
leave
cmp
das
xor
jns
call
sbb
clc
arpl
inc
mov
cmp
push
xchg
aas
fadd
jb
xchg
cmp
push
mov
mov
rcl
rol
jg
scas
stos
scas
push
and
adc
fs
not
rcr
dec
rcr
jmp
imul
inc
dec
pop
popa
int3
jo
mov
repnz
and
bnd
sub
push
push
cdq
jns
fs
dec
xor
ins
cmps
mov
in
fcomp
ja
and
(bad)
loope
int3
mov
push
movs
push
inc
adc
jg
xchg
inc
inc
xor
jnp
imul
(bad)
test
mov
mov
mov
scas
fstp
pop
adc
xchg
sub
jge
mov
mov
lea
mov
jle
jno
and
mov
fwait
mov
or
rol
mov
aam
cli
dec
div
jge
icebp
dec
sub
pushf
cli
std
ret
ds
dec
xlat
sub
jbe
jle
push
jl
pop
mov
pop
sub
rcl
sub
sbb
ins
fcom
out
cmp
out
test
std
xor
inc
mul
inc
push
repnz
fldenv
les
sbb
data16
add
lock
(bad)
aaa
jbe
cmp
mov
and
in
mov
out
das
sti
stos
movs
in
dec
in
fsub
test
in
and
frstor
(bad)
pop
xchg
popf
ins
lods
rcr
pop
push
and
xor
adc
xor
outs
adc
sbb
fld
inc
outs
(bad)
cs
in
aad
push
into
enter
mov
and
inc
scas
adc
cmp
xchg
fwait
xor
test
enter
outs
(bad)
arpl
jns
and
xor
rcr
pop
mov
and
ss
popf
jno
dec
mov
xchg
inc
out
pop
mov
mov
jns
sbb
outs
cmp
push
dec
jg
sbb
aad
int3
out
enter
out
adc
add
adc
lock
(bad)
sar
in
js
adc
mov
cmp
enter
sbb
inc
inc
dec
fisttp
mov
sub
adc
pop
cmps
xchg
jno
cld
stc
frstor
in
repz
test
jl
mov
int3
stos
push
mov
push
or
xchg
push
adc
jb
cs
mov
pop
inc
xor
push
push
jle
push
ins
mov
push
popa
pop
cmps
push
adc
out
pop
add
or
xchg
add
sub
push
add
arpl
sub
xchg
sub
inc
imul
inc
inc
inc
cmp
or
mov
mov
inc
dec
ret
cmp
test
jmp
push
push
pop
std
ret
mov
cwde
push
(bad)
jne
es
jmp
xchg
fidiv
les
ds
lahf
popf
lahf
into
outs
mov
aas
and
aam
cmp
ret
retf
(bad)
cmp
jecxz
and
mov
and
add
fwait
in
jecxz
dec
idiv
pushf
in
mov
mul
xchg
pop
ins
adc
inc
leave
popa
icebp
nop
call
leave
out
and
or
mov
fist
ss
mov
aam
and
mov
xor
dec
mov
sub
cmps
mov
scas
(bad)
iret
imul
adc
pushf
mov
jmp
add
xchg
mov
mov
leave
cli
movups
fs
mov
dec
rcr
mov
(bad)
js
xchg
or
dec
xchg
push
add
push
dec
mov
dec
out
retf
rol
fidivr
pop
stos
add
jg
jge
sbb
scas
arpl
jb
jb
inc
ss
dec
ins
xor
mov
lea
sbb
pop
pop
enter
mov
adc
and
setb
cmp
cld
ss
cmp
(bad)
call
fmul
sar
push
sub
(bad)
and
and
mov
pop
nop
out
ins
in
jmp
test
iret
or
cmp
arpl
or
mov
sbb
mov
adc
ins
mov
and
ja
jb
add
inc
clc
scas
cmp
lods
mov
jle
add
ins
call
mov
sub
sub
sar
popa
xchg
fsubr
jne
scas
and
pop
fwait
sub
xchg
mov
cdq
mov
add
cmp
dec
jmp
sub
adc
ins
ins
shl
jle
inc
dec
push
imul
lods
mov
repz
pop
std
jbe
ret
xchg
xor
adc
call
jp
loop
adc
pop
sbb
das
stos
stos
jge
mov
or
call
loop
loopne
pop
out
outs
adc
xbegin
in
or
pop
add
fwait
or
dec
lods
xlat
xor
xchg
ja
adc
jmp
mov
or
cmps
inc
ins
mov
sbb
mov
cs
jb
scas
ret
arpl
and
cmp
jmp
int
or
cmp
cmp
mov
ds
add
push
jae
nop
rcl
je
aas
ss
scas
inc
jae
mov
or
stos
aad
cmp
pop
pop
xchg
aaa
push
fdivr
pop
test
xor
adc
repnz
mov
add
push
pop
mov
mov
xchg
pusha
ror
jo
and
push
xchg
scas
(bad)
loop
mov
adc
or
jmp
fadd
jl
retf
test
retf
mov
pop
int3
cmp
jnp
pop
nop
add
fdivr
les
loop
sub
inc
xor
push
dec
xchg
push
push
js
add
jmp
jbe
jg
ins
stos
fs
in
outs
mov
lods
jo
gs
mov
jg
sbb
sbb
mov
ja
fimul
inc
push
mov
arpl
clc
ret
psubusw
jmp
pop
xchg
mov
mov
cmp
jae
pop
adc
inc
aam
mov
ins
push
mov
iret
ret
shl
push
jo
int3
fcom
xchg
imul
mov
movs
mov
repnz
add
jne
cmp
cmp
arpl
fnsave
sbb
cdq
sub
sbb
je
int3
jle
add
push
test
pop
rcl
int
inc
neg
and
in
sbb
fcom
push
mov
jb
outs
inc
dec
shl
mov
std
ins
ret
sub
mov
jno
(bad)
sub
std
push
je
xlat
xchg
push
push
jno
push
inc
push
jmp
(bad)
adc
sub
and
pusha
sbb
inc
push
sahf
adc
in
adc
push
jmp
lods
dec
add
js
icebp
out
dec
outs
lds
or
lods
cmp
add
call
cmps
popf
add
add
sbb
mov
lds
sahf
std
jecxz
pop
out
inc
adc
cdq
pop
mov
aaa
and
mov
inc
mov
ins
sub
pusha
jo
lods
sub
icebp
outs
dec
jnp
mov
popa
leave
adc
imul
shr
pop
or
loop
fs
fld
mov
scas
pop
stc
pop
data16
xchg
mov
stc
push
addr16
cmp
frstpm(287
xor
(bad)
inc
push
add
push
inc
xor
jo
std
aas
or
fs
pop
dec
mov
push
loopne
rol
cli
sahf
out
push
cwde
iret
test
inc
fist
dec
sbb
jle
out
jo
stos
mov
scas
cmp
adc
cmp
icebp
iret
add
shl
shl
out
and
hlt
aaa
jg
jmp
js
inc
dec
clc
mov
push
(bad)
sbb
xor
inc
pop
shl
fist
in
ins
xchg
ins
xchg
out
popf
(bad)
mov
jg
pop
in
push
add
ret
inc
rcr
push
mov
fcomp
out
vaddsubpd
popf
inc
mov
pop
add
pop
jmp
cmc
jecxz
rcr
dec
xchg
push
ins
and
mov
aaa
jb
mov
or
outs
daa
pusha
sbb
cmp
(bad)
and
js
retf
das
(bad)
imul
aam
bnd
scas
dec
push
rcr
test
ret
int
xchg
daa
push
dec
je
addr16
jno
push
push
push
lds
loope
shr
xchg
rol
dec
adc
ret
js
pop
mov
ins
mov
jp
cmps
pusha
mov
aaa
hlt
xor
loope
or
dec
or
fdiv
adc
mov
in
lea
xor
sbb
fmul
cmp
nop
shl
out
lea
ja
int3
out
mov
add
and
fstp
ss
sub
sbb
mov
mov
stc
(bad)
add
fmul
mov
dec
mov
sbb
mov
pusha
xlat
nop
lock
pop
or
out
popf
mov
pop
inc
pop
shr
ret
test
mov
movs
cmps
out
arpl
pop
jmp
sbb
mov
or
aas
mov
mov
jg
cmc
jno
mov
xchg
gs
jmp
in
pop
sbb
jb
inc
xchg
punpckhbw
push
mov
jge
cmp
mov
stc
jg
mov
inc
push
lods
push
add
sbb
test
ret
or
gs
aam
jmp
and
(bad)
xchg
push
std
call
adc
das
or
push
out
int3
mov
nop
ret
bound
sar
aaa
sbb
jecxz
add
test
dec
xchg
mov
lock
pop
sub
fadd
(bad)
out
xchg
ss
xor
cmp
mov
jb
ss
cmp
push
dec
icebp
or
pop
mov
mov
fistp
and
movs
imul
inc
mov
ins
out
mov
push
add
or
dec
mov
push
xor
not
retf
sbb
rcl
jecxz
cmp
mov
ins
xor
repz
and
test
out
imul
(bad)
pop
rcr
(bad)
gs
adc
movs
leave
std
(bad)
shl
ins
sar
(bad)
ja
mov
push
inc
out
or
mov
dec
sti
lahf
push
push
nop
add
or
jle
les
and
mov
std
fldenv
bound
(bad)
ror
test
add
shl
rcl
xchg
pushf
dec
loopne
arpl
inc
sub
das
outs
push
out
mov
stos
sbb
sub
mov
cmp
leave
lds
fisubr
retf
ficom
jb
imul
and
mov
fcmovnu
inc
pop
mov
or
or
xor
test
rol
fcomp
dec
sub
pushf
mov
jmp
movs
fidivr
(bad)
(bad)
mov
sub
push
adc
ds
fcomp
cwde
sbb
mov
sub
fwait
aas
retf
pop
mov
xlat
jge
xor
cmc
cmps
sub
(bad)
addr16
jp
stos
dec
pop
or
adc
test
call
inc
xchg
fbld
sub
push
stc
shl
mov
pusha
stos
xor
jmp
sbb
mov
dec
xchg
dec
jne
push
sbb
or
mov
sub
ss
sub
push
stos
jp
jne
lea
in
mov
adc
mov
mov
mov
and
fbstp
test
jae
xchg
jecxz
outs
enter
sti
sti
or
out
xor
mov
pop
add
ins
mov
push
shl
adc
shl
lds
cmp
retf
shl
shl
push
pop
and
daa
fdiv
adc
pop
xor
sub
jbe
out
imul
sti
les
test
sbb
dec
push
imul
sbb
sahf
xchg
cld
inc
sub
std
mov
scas
jmp
xlat
adc
and
sub
push
mov
pop
mov
leave
pusha
mov
dec
mov
sub
push
hlt
add
popa
mov
stos
mov
shl
xor
cli
inc
lods
xor
push
and
ja
mov
add
xor
mov
xchg
jge
mov
fxam
jle
popf
xor
push
jmp
popf
mov
mov
cmp
aaa
mov
add
and
ror
jp
push
xchg
push
mov
xchg
cmp
push
mov
mov
stos
and
xlat
xchg
dec
cmp
out
jl
fisttp
sti
repnz
jnp
stos
loop
cmp
xor
cli
push
sub
add
ins
sbb
cdq
and
fld
call
xor
sbb
mov
and
xchg
pop
lods
mov
fldenv
enter
adc
or
fsub
add
xor
cmp
mov
add
daa
div
dec
cmps
add
movs
xchg
popf
scas
xchg
dec
mov
sub
dec
mov
mov
scas
mov
inc
jo
mov
and
mov
xchg
js
dec
jb
loop
and
jge
push
cmp
mov
mov
test
popf
aam
lods
cwde
int3
jmp
mov
out
outs
jo
(bad)
xor
xor
mov
ja
inc
pop
add
jnp
mov
es
(bad)
inc
mov
and
ficomp
loope
jp
mov
mov
pop
int
jnp
mov
js
hlt
xchg
sub
sbb
sub
mov
int3
add
ficom
ss
addr16
xchg
ror
jmp
xor
in
in
or
add
fsub
or
mov
jmp
test
rcr
das
mov
cmc
dec
dec
(bad)
pop
iret
in
lds
in
sub
fistp
push
sbb
inc
xor
push
and
inc
or
lea
(bad)
adc
cli
dec
mov
stos
iret
(bad)
pop
in
test
ror
or
mov
dec
dec
mov
pop
iret
push
xchg
add
jecxz
mov
repnz
(bad)
pop
jl
call
ficomp
(bad)
dec
sbb
or
dec
fild
das
push
and
popf
pop
push
loope
repnz
leave
pop
lds
(bad)
xchg
lock
pusha
mov
xchg
pop
das
sti
mov
fbstp
outs
jmp
popa
lea
inc
add
pushf
jno
xor
in
xor
xlat
rcr
dec
popa
jns
inc
and
xor
popa
sub
sbb
and
hlt
inc
dec
rol
inc
xchg
ja
call
add
or
sub
jl
or
add
retf
cmp
xchg
adc
mov
pop
out
ins
movs
fidiv
fstp
scas
fcmovnbe
(bad)
das
mov
push
pop
in
aam
daa
and
pop
fcmovu
addr16
push
fisub
das
out
jecxz
adc
jecxz
add
xor
fcomp
adc
pop
call
and
cmp
mov
jae
in
mov
rcr
jmp
xlat
gs
fcom
push
repz
retf
rol
dec
ja
out
stc
dec
and
shl
neg
push
push
sub
leave
inc
push
mov
push
jns
add
jae
enter
dec
je
nop
xchg
xor
scas
push
pop
scas
in
test
out
cmovg
ret
xchg
out
mov
inc
jle
scas
xchg
and
jno
daa
retf
jl
stc
mov
cmc
movs
pop
mov
jmp
push
call
pop
adc
dec
and
mov
jbe
cmc
jmp
pusha
ins
jne
sar
aaa
aas
(bad)
pop
fistp
adc
jmp
repnz
test
sbb
iret
imul
mov
jecxz
ja
popa
sub
icebp
pusha
pusha
dec
shl
cmp
fsubr
jg
sbb
clc
lahf
cli
in
ror
add
repz
mov
push
cli
or
and
xor
pop
xchg
xchg
xchg
cld
xor
cs
adc
scas
add
jmp
push
pop
ja
mov
enter
adc
add
adc
and
push
(bad)
daa
and
inc
fsub
pop
out
mov
gs
fisub
ins
push
(bad)
push
mov
inc
loop
les
inc
sbb
mov
mov
mul
add
rcr
inc
out
pop
sub
xchg
xor
xchg
inc
pop
pop
xchg
jo
sahf
call
test
xchg
and
push
ret
dec
sbb
leave
jge
rcl
xor
lahf
push
mov
xor
or
arpl
shr
sbb
out
inc
hlt
outs
pop
xchg
sub
mov
test
retf
jbe
rcl
(bad)
nop
pop
int
cmp
out
call
dec
inc
xchg
inc
cmp
sub
pop
rcr
dec
mov
push
jmp
cmp
clc
pop
push
popa
out
movs
mov
js
retf
mov
xor
jae
imul
xor
xchg
mov
lods
xchg
js
in
add
xchg
ss
or
push
cmp
and
jns
dec
jae
and
lahf
pushf
inc
scas
repnz
mov
dec
dec
xchg
cmp
sbb
(bad)
test
fnsave
mov
adc
and
stc
cld
dec
jnp
scas
inc
adc
jl
sub
popa
scas
popa
sti
out
cmp
push
sti
fisttp
xor
jmp
sti
xor
je
ffree
in
adc
ss
aad
(bad)
out
adc
push
adc
inc
out
jl
mov
leave
or
xchg
outs
icebp
inc
data16
adc
xor
shl
ror
sar
repnz
mov
jl
or
inc
ins
push
xor
sub
clc
test
xlat
ins
jae
xchg
dec
pop
stos
pop
gs
lahf
mov
repz
xor
cmp
pop
fidivr
sbb
test
mov
xor
dec
jmp
sub
gs
sub
addr16
cmps
sub
loope
repz
mov
xor
int
aad
sub
push
mov
adc
stos
mov
movs
out
mov
jg
jne
mov
or
and
sub
xchg
push
fcmovne
outs
cli
add
repz
cld
add
jne
dec
push
adc
mov
mov
rcr
shl
movs
pop
ss
cmp
test
pushf
xchg
mov
jle
adc
(bad)
xchg
daa
adc
clc
add
test
inc
int3
(bad)
out
int
mov
repz
xchg
sub
mov
push
pop
or
push
push
jmp
add
or
nop
lahf
xor
jne
leave
sbb
pop
scas
fstp
dec
push
jae
sub
adc
addr16
inc
std
aad
mov
push
stos
cli
or
add
fucompp
mov
push
add
loop
outs
cli
inc
xchg
es
push
imul
repnz
mov
cmc
mov
mov
int3
fldlg2
jecxz
fstp
jge
mov
in
xor
and
push
xchg
and
pop
sub
xchg
pop
jmp
sub
dec
xchg
mov
pop
and
popa
or
add
push
ins
push
jge
leave
repnz
and
aam
cld
(bad)
loop
and
xlat
dec
rcl
in
neg
popf
jp
gs
push
fmul
repnz
push
jne
ins
ror
mov
cmps
jae
push
cmc
enter
or
jae
inc
repz
and
retf
add
ror
adc
mov
scas
xchg
ins
xchg
shr
mov
int
push
fnsave
cmp
test
xchg
int3
adc
jl
adc
test
inc
(bad)
fdivr
js
xchg
add
leave
or
call
dec
jmp
xchg
pop
lods
fist
and
js
xchg
addr16
push
cmps
inc
sbb
inc
ficom
pop
mov
movs
and
clc
sub
sar
mov
sub
ss
xchg
out
xor
push
mov
fs
fsub
dec
dec
call
xchg
aam
xor
pop
je
jge
fisttp
mov
jl
outs
xchg
(bad)
jno
test
lahf
mov
sahf
fsubr
test
dec
cwde
xchg
scas
ss
sahf
loope
popa
and
ja
or
fiadd
jle
pop
sub
stc
repnz
and
iret
call
lods
shl
enter
cmp
jp
out
mov
in
sbb
mov
pop
pop
cmp
es
jo
lea
fcom
pusha
sub
dec
mov
mov
pushf
jg
add
int3
xor
add
out
inc
pop
nop
fstp
call
popa
aad
pop
ds
adc
push
pop
sahf
xchg
inc
push
mov
sub
dec
dec
push
int3
div
sbb
cld
dec
cwde
lods
mov
mov
test
retf
mov
add
out
std
fcmovnu
push
pop
(bad)
jg
add
imul
add
scas
lds
mov
push
sti
(bad)
aas
stos
mov
js
or
test
enter
arpl
lods
or
repz
mov
pop
xchg
lods
aam
(bad)
repnz
mov
popa
xor
fisub
ret
xchg
mov
mov
iret
sbb
jmp
outs
sub
push
mov
aas
(bad)
std
push
test
scas
pop
int
cmp
jl
nop
jo
inc
clc
test
popa
dec
mov
or
jb
and
mov
mov
into
pop
mov
ds
or
xchg
cmps
jo
fmul
inc
cmp
scas
push
jg
mov
mov
mov
sti
or
dec
mov
rcl
pop
pushf
xor
add
jge
adc
sub
mov
sahf
mov
pop
in
add
mov
call
mov
jb
cmp
sub
push
jno
push
and
ror
sbb
das
dec
stos
nop
int3
lea
inc
mov
push
xor
(bad)
mov
ja
dec
or
jecxz
dec
adc
xchg
fcmovb
adc
pop
jns
add
aaa
xor
xlat
lock
mov
dec
(bad)
aad
rcl
mov
add
jnp
pop
stc
and
fdivr
stc
es
dec
sub
push
pop
sub
adc
fcmovne
imul
popf
adc
es
mov
adc
jge
test
lahf
mov
outs
aas
pop
imul
clc
clc
inc
out
jno
xor
sub
dec
aaa
mov
adc
mov
xchg
pop
mov
xor
inc
sahf
jnp
js
rcr
xchg
sub
addr16
pop
leave
mov
or
adc
jg
jmp
inc
inc
sbb
jns
cli
mov
dec
dec
mov
adc
popa
or
imul
mov
out
xor
jecxz
dec
pop
fdivr
(bad)
iret
mov
mov
(bad)
or
or
nop
cmp
jp
mov
ds
dec
pop
cld
shl
movs
loope
hlt
ret
mov
inc
cmps
ficomp
retf
xor
pop
mov
es
test
call
outs
outs
pop
lahf
add
sub
xchg
lods
mov
les
push
or
xor
inc
inc
cwde
js
shr
sbb
repnz
ins
add
mov
inc
mov
add
jae
sbb
icebp
cwde
pusha
lock
push
lods
adc
inc
push
popa
shl
jno
es
inc
add
fnsave
pop
(bad)
sbb
dec
lds
adc
daa
pop
pop
xlat
ret
fscale
jb
clc
mov
fiadd
sub
and
sar
fwait
jge
inc
(bad)
daa
push
sbb
fidiv
mov
add
dec
std
retf
outs
outs
cmp
xchg
cli
adc
jle
inc
rcr
xchg
add
xor
adc
or
das
adc
and
in
mov
pop
gs
popf
pop
jnp
inc
out
pop
outs
(bad)
fild
lock
neg
inc
jmp
mov
push
jg
lock
lock
dec
pop
loopne
sub
addr16
cmps
push
pop
es
outs
xchg
fisubr
add
fisttp
sub
add
lea
jbe
stos
or
fcom
pop
inc
mov
iret
(bad)
jmp
pop
mov
pop
lods
jg
dec
std
jge
mov
icebp
outs
push
dec
cmps
xor
jl
pop
cmp
(bad)
cmc
dec
mov
xchg
stos
div
ins
xor
fdiv
jmp
imul
jecxz
hlt
cmp
lods
push
sti
adc
inc
xor
pop
or
fmul
and
mov
xor
pusha
xchg
mov
xchg
ret
xchg
xchg
push
jno
xchg
jns
mov
adc
popf
inc
adc
mov
cdq
mov
push
push
dec
adc
rcl
hlt
cmp
pop
xlat
hlt
add
mov
fidivr
aad
or
sbb
pop
push
dec
aas
xor
or
test
aad
shr
in
test
jae
and
dec
fstp
fsubr
push
mov
mov
ret
or
inc
mov
aas
aam
and
xor
shl
pop
mov
dec
aam
xchg
xlat
xor
and
sub
add
sbb
stc
and
dec
or
dec
sub
test
lods
sbb
push
pop
shr
aad
scas
dec
and
xlat
lock
outs
pop
mov
lea
mov
inc
sub
add
pop
loop
stos
adc
or
sub
rcr
push
adc
out
(bad)
inc
mov
lea
mov
in
int
sub
test
js
int3
imul
xor
fbstp
(bad)
mov
push
adc
xchg
ins
(bad)
iret
jmp
or
adc
or
data16
mov
pusha
xor
stos
test
movs
sti
dec
xor
push
dec
xchg
jp
mov
jmp
lods
int
sbb
lea
(bad)
mov
sub
(bad)
mov
ds
add
fnstenv
xchg
pop
daa
es
xchg
dec
lea
outs
push
pop
mov
ins
nop
es
sub
or
inc
imul
jne
retf
xchg
jns
loopne
out
add
sub
xchg
call
pop
loop
sbb
les
jg
dec
mov
pusha
lahf
sub
sub
fwait
and
xchg
adc
inc
jb
addr16
fdivr
ret
cmp
es
xor
call
and
or
mov
adc
jmp
call
jmp
sbb
lods
xor
lds
mov
test
scas
movs
stos
add
test
sahf
or
pop
sub
imul
mov
xchg
dec
loope
lahf
jo
pop
rcl
aaa
sub
cmp
xchg
dec
(bad)
dec
cmp
mov
add
pop
shl
mov
sub
pop
out
sub
inc
fmul
jno
mov
aas
add
xchg
imul
sbb
mov
cld
adc
lock
test
cld
xchg
pop
mov
outs
in
mov
dec
add
in
pop
mov
les
adc
cmp
pop
enter
imul
div
or
jg
mov
jbe
dec
out
jg
into
and
int
in
or
daa
sbb
jb
sub
dec
or
out
jne
push
sbb
xchg
mov
cmp
jns
dec
push
push
stos
lahf
cli
popfw
pop
mov
popf
std
pop
loop
ret
dec
inc
xchg
test
pop
clc
lock
scas
jp
push
shr
into
push
popf
mov
dec
popf
out
inc
xchg
jg
into
imul
leave
push
sub
cmp
xor
jno
or
cdq
pop
cmc
jns
ror
pusha
jecxz
cmp
iret
out
cmp
in
popf
sbb
adc
jns
sbb
addr16
stos
repz
xor
mov
dec
pop
mov
rcr
shl
in
lea
or
das
out
or
push
cmps
pop
push
jl
mov
scas
jp
xor
addr16
les
sub
(bad)
push
mov
out
jmp
pop
jl
cmp
sbb
dec
jmp
daa
xchg
jbe
bound
xchg
test
in
sub
adc
mov
xor
push
test
xchg
in
fisubr
sub
sti
push
jne
fbld
dec
js
xchg
push
(bad)
int3
fwait
pop
ficom
dec
cmp
or
shl
shl
out
aam
fs
and
mov
push
jl
cmp
scas
lds
dec
cmps
retf
push
into
stc
sbb
cmp
(bad)
out
loop
inc
xchg
cmp
xchg
or
nop
ins
cmps
daa
dec
out
int3
jb
mov
mov
sub
mov
add
inc
or
xchg
int
push
jecxz
jge
or
sbb
loop
les
lods
in
dec
icebp
sar
xor
add
cmps
loope
dec
clc
in
jbe
test
xchg
imul
adc
rcr
adc
into
adc
lods
icebp
jmp
retf
fs
sub
popf
dec
out
add
sub
jo
jle
sub
in
imul
and
sbb
aas
mov
jle
mov
xor
dec
add
stc
ror
rdpmc
mov
jl
jge
shl
stos
jnp
xor
lds
sub
jge
pop
push
fucom
add
add
fadd
loopne
inc
scas
jae
mov
(bad)
arpl
lea
add
fbstp
adc
xor
imul
xchg
xor
sbb
push
mov
in
leave
cli
and
pop
cmp
add
jp
adc
push
dec
jle
push
cmp
rcr
pop
sti
aam
pop
jbe
xchg
data16
std
mov
push
test
repz
jp
arpl
adc
cld
sub
mov
push
or
rcr
cs
aaa
mov
ret
rol
and
mov
in
nop
icebp
mov
push
pop
test
cmc
lea
loop
lods
imul
add
and
add
cwde
stos
jo
mov
aam
ret
lock
adc
fild
popa
stos
adc
xchg
scas
xchg
dec
jl
das
sahf
pop
xor
and
sub
test
mov
pusha
mov
jo
inc
adc
mov
pop
mov
mov
test
out
ss
add
bound
push
aaa
jg
push
cmp
es
mov
(bad)
in
cld
lods
pop
stos
cmp
fsubr
popa
cld
outs
and
sbb
leave
daa
mov
js
mul
jno
rcl
mov
or
mov
dec
cli
pop
pop
shl
mov
outs
xchg
gs
ret
mov
imul
mov
mov
into
mov
push
xchg
das
ror
mov
cmp
xor
pushf
xor
rcl
mov
inc
pop
xchg
inc
mov
add
sub
xor
rcr
cld
dec
mov
shl
xchg
push
(bad)
shl
push
sti
cwde
pop
in
clc
adc
stos
in
adc
ins
mov
cli
sahf
test
pop
outs
cmp
mul
dec
push
mov
sti
adc
loope
push
test
fisub
xor
jmp
(bad)
aam
mov
push
add
xor
xchg
outs
mov
shl
xor
pop
call
adc
inc
mov
jb
xchg
pop
adc
fsub
ror
add
push
mov
pop
jb
inc
dec
lahf
jge
cmps
mov
test
push
adc
dec
push
xor
mov
sahf
jmp
daa
adc
mov
addr16
(bad)
xchg
push
cmps
or
adc
(bad)
sbb
pop
loop
or
xchg
jle
pop
mov
movs
fstp
cmp
push
inc
int3
into
pop
inc
sbb
scas
adc
iret
xchg
xchg
loope
ins
sub
test
inc
mov
in
adc
xor
mov
hlt
push
lahf
mov
adc
repz
icebp
cmp
push
mov
out
mov
cmc
nop
push
cmp
hlt
addr16
xchg
ret
sub
sbb
jb
in
ret
pop
addr16
sbb
sti
test
test
push
cmps
inc
push
out
mov
int
pop
push
in
ins
popa
pop
mov
mov
inc
je
push
mov
in
mov
repnz
mov
in
push
or
xor
test
rcl
or
dec
dec
stos
lods
jb
push
sbb
loop
adc
adc
xchg
sbb
sub
cmp
adc
sbb
cmp
ret
xchg
mov
cmc
xor
mov
sub
clc
je
lods
and
(bad)
pusha
or
or
jo
popa
xchg
cmp
shl
jl
rep
jo
test
stos
inc
mov
pop
jo
xchg
sti
(bad)
out
repnz
push
into
pextrw
sub
aad
(bad)
call
mov
fild
call
enter
std
retf
add
mov
push
jae
sub
cmps
push
xor
inc
cdq
pusha
sti
add
repz
sahf
ins
mov
fimul
xor
mov
inc
adc
mov
iret
push
xor
clc
rol
lock
data16
xchg
mov
add
sahf
mov
add
add
ret
sub
jmp
shr
fbstp
and
loop
shr
pop
scas
aad
fs
movs
outs
push
out
xchg
and
dec
and
pop
push
mov
shl
icebp
jge
movs
minps
fcomp
scas
dec
pop
jae
retf
mov
or
and
xchg
inc
ja
mov
sub
cld
mov
les
add
in
fiadd
xor
outs
mov
scas
imul
fisub
inc
pop
mov
in
cmp
sub
fmul
dec
lods
into
sub
sahf
rol
mov
adc
imul
hlt
rcl
in
js
inc
aaa
cwde
loope
fwait
dec
cld
add
sub
(bad)
int3
sub
pop
dec
cmp
xchg
sbb
sahf
ss
stos
sub
scas
aaa
xchg
cmp
push
mov
sub
adc
lds
xor
xor
mov
xor
fmul
xchg
xchg
pop
fs
test
mov
sti
call
sbb
fistp
cdq
dec
aas
mov
sub
inc
pop
cmp
mov
shr
ret
or
dec
lods
cli
xchg
mov
xchg
lods
test
cld
jns
imul
dec
adc
mov
arpl
rol
nop
fsubp
jmp
gs
sbb
xor
push
dec
inc
ja
push
xchg
neg
xchg
clc
mov
movs
aaa
movs
cmps
aas
loope
xor
inc
cwde
adc
xor
(bad)
std
mov
push
mov
jbe
jl
retf
fadd
pop
inc
mul
jae
xor
xor
add
sbb
retf
stos
xchg
adc
pusha
gs
push
pop
xor
dec
cli
mov
(bad)
cmp
jo
dec
dec
sub
jno
adc
fisttp
jmp
mov
leave
adc
nop
push
pop
scas
jle
cmp
repnz
inc
mov
xor
mov
dec
cld
out
call
pop
add
mov
ret
ret
mov
cdq
jg
arpl
add
pushf
jg
xchg
and
cmc
add
mov
sbb
das
fst
hlt
push
(bad)
call
popa
shl
jge
mov
test
sar
pop
(bad)
cwde
ret
sbb
dec
rdtsc
in
jp
lea
retf
push
outs
fmulp
test
add
inc
inc
cmp
icebp
out
and
cmp
imul
adc
and
push
mov
sbb
cmp
movs
mov
or
sbb
sahf
lahf
and
stos
pop
std
adc
and
jp
ins
and
inc
hlt
push
push
pop
or
push
pushf
(bad)
ficom
ds
inc
jg
xor
(bad)
gs
dec
or
sbb
xor
lods
lahf
and
pop
or
arpl
mov
not
xor
mov
adc
xchg
and
test
je
sub
movs
mov
in
mov
jns
jmp
jecxz
xchg
mov
sub
xor
push
cmps
mov
aaa
cmp
nop
inc
dec
adc
pop
cmp
aad
data16
xchg
ja
enter
daa
movs
and
out
cmps
mov
scas
mov
(bad)
xchg
cmc
push
movs
xchg
mov
popf
adc
retf
cmp
movs
(bad)
sub
iret
mov
sub
jle
mov
cmp
jle
call
shl
sub
fadd
daa
mov
mov
push
in
sti
dec
addr16
jmp
mov
loope
test
mov
dec
push
xor
sti
stos
aaa
bound
std
popf
pop
outs
dec
mov
mov
add
mov
not
aas
jb
or
xchg
into
xchg
cwde
loop
aad
lock
aaa
cmps
jge
jg
pop
cmp
pushf
(bad)
mov
mov
lds
jbe
sbb
sub
clc
div
in
movs
push
sbb
inc
sbb
int
aad
(bad)
imul
add
inc
or
out
repnz
pop
sbb
mov
fmul
sahf
fst
(bad)
sbb
cs
(bad)
jp
ficom
inc
cmp
mov
dec
into
stos
xor
mov
in
fs
arpl
sbb
rol
dec
ror
xchg
les
aam
xor
lods
mov
sbb
xchg
adc
ror
pop
pusha
mov
pop
lods
add
js
xchg
dec
stc
jns
inc
add
outs
int
push
shr
inc
cmc
jae
jmp
(bad)
sbb
cmp
das
pusha
dec
call
inc
loop
ja
cs
mov
pop
sbb
imul
adc
push
push
popa
(bad)
push
sti
ror
and
pop
in
shr
imul
or
sbb
loopne
shl
jmp
adc
fld
or
inc
sbb
in
ss
sub
(bad)
adc
iret
call
jle
ret
push
mov
hlt
es
ret
cmp
and
mov
shl
mov
enter
cmp
xchg
or
sub
outs
scas
mov
jns
sbb
push
retf
mov
push
pop
out
int3
jmp
adc
cmp
fisubr
add
fdiv
sub
lds
and
stos
je
xchg
fsub
(bad)
cmp
mov
mov
das
adc
mov
fwait
dec
pop
xchg
ins
aas
add
push
je
fcmovne
mov
mov
jg
xchg
inc
fsubp
lods
cld
sub
jnp
mov
add
push
mov
clc
push
or
xchg
push
cmc
xor
int
or
and
jo
gs
rcl
push
or
imul
sub
daa
push
dec
loop
dec
xchg
outs
push
and
ins
jmp
repnz
or
(bad)
xchg
mov
sbb
sbb
stos
jg
and
test
test
jle
mov
out
xor
xlat
dec
(bad)
cld
inc
or
sub
and
cmc
xor
sbb
xor
shl
das
mov
shl
ror
fisttp
adc
inc
ja
cmps
pop
jne
lea
imul
mov
cmc
bound
lods
jmp
fsub
sbb
xor
retf
inc
cmp
cmp
jb
(bad)
jmp
fwait
push
cmp
loope
jne
pusha
lea
fcmovnu
dec
dec
mov
xchg
out
aad
(bad)
movs
mov
xchg
imul
xchg
les
out
or
test
ret
jne
test
jmp
jl
fisubr
add
lods
mov
leave
test
lods
repz
jmp
mov
sub
push
xor
movs
pop
push
rcr
inc
sub
inc
xor
outs
dec
bound
add
dec
mov
pushf
ds
mov
pop
jg
(bad)
inc
popa
jbe
dec
mov
cli
arpl
cmps
xchg
test
ds
sbb
in
pop
sub
lods
xor
mov
jp
or
(bad)
hlt
adc
daa
rcr
jns
or
fidiv
xchg
outs
xor
in
aam
out
ficomp
push
jbe
inc
lods
rcr
call
scas
cwde
or
mov
lods
movs
push
xchg
gs
out
std
push
mov
sub
or
mov
pop
test
rol
pop
jb
pop
inc
jns
xchg
push
push
pop
dec
push
mov
dec
inc
in
pushf
push
jo
cmp
mov
sub
sbb
sub
mov
adc
in
cmp
les
jmp
sar
xchg
fild
repz
xchg
(bad)
aad
mov
xchg
data16
dec
lods
fisubr
fs
lea
aaa
stc
int
dec
sub
mov
xlat
bound
into
mov
sub
xchg
cdq
retf
ror
dec
lock
ins
and
and
arpl
sub
push
fisubr
scas
inc
push
push
or
and
xchg
pop
retf
pop
and
cld
xor
cs
dec
push
scas
push
mov
std
pop
test
dec
stos
clc
enter
jle
or
or
cs
in
push
sbb
addr16
sub
dec
jp
mov
mov
mov
cmp
(bad)
(bad)
daa
(bad)
push
and
ror
out
es
cmc
int
adc
mov
arpl
sub
adc
xor
cmp
in
jmp
cmps
dec
inc
rcr
add
adc
lods
fadd
(bad)
dec
shl
aas
jne
std
lods
rcr
ins
and
sbb
or
jmp
lock
adc
popa
cmp
jno
std
dec
cmps
sbb
mov
adc
pop
pop
and
icebp
cmp
xor
stos
xchg
movs
out
push
pop
inc
and
mov
sub
les
mov
push
jmp
mov
push
jge
aas
retf
gs
fld
imul
imul
add
(bad)
retf
sub
aas
cld
cmps
push
aam
pop
and
mov
mov
or
mov
push
std
or
pop
mov
test
fdiv
inc
xchg
xor
jp
and
imul
mov
in
xchg
xchg
(bad)
mov
scas
mov
xchg
or
out
movs
pop
popf
inc
push
xchg
fidivr
mov
push
loope
pop
sar
pop
mov
inc
xchg
sub
jmp
push
mov
mov
dec
fst
nop
call
push
mov
xor
nop
sub
outs
jg
xor
arpl
lds
les
or
cmp
loop
(bad)
pop
stos
cmps
lea
or
repz
xchg
neg
cwde
or
mov
vlddqu
adc
xchg
jns
push
iret
mov
push
out
pop
pop
xchg
test
push
or
icebp
mov
push
scas
lock
xor
(bad)
mov
mov
push
lock
xor
ins
sub
mov
mov
mov
lea
dec
ficom
fnstsw
adc
movs
daa
cs
sub
cwde
dec
mov
sahf
fld
cwde
bound
cmc
push
xor
mov
imul
dec
pop
push
and
xchg
adc
das
add
stc
(bad)
xor
jno
jecxz
adc
xor
leave
mov
aaa
(bad)
scas
or
icebp
push
cwde
pop
or
push
and
stos
sbb
jp
mov
sbb
mov
mov
sub
pop
add
jae
mov
cmps
push
jmp
cmc
adc
cs
adc
mov
rol
pop
shl
xchg
push
rcr
add
jno
lods
(bad)
mov
jbe
dec
adc
test
xchg
mov
xchg
mov
jecxz
dec
lahf
movs
mov
sbb
ret
ja
jbe
or
ja
fisub
test
test
int3
leave
cdq
cdq
jmp
jnp
cmc
ss
(bad)
jg
sti
push
xchg
dec
gs
push
inc
mov
inc
call
jnp
lds
test
mov
push
sbb
and
cmc
test
mov
sub
adc
es
ja
mov
les
je
mov
into
vpsubd
sub
sub
out
mov
mov
or
pop
mov
repz
and
into
inc
sub
js
into
inc
fadd
or
mov
loop
aaa
ins
xchg
pop
or
mov
pop
xor
(bad)
fild
adc
movs
or
cmc
jl
retf
fidiv
int3
lock
jp
(bad)
fild
xchg
jecxz
jbe
(bad)
jae
addr16
jle
cmps
rcl
push
scas
rol
cmp
test
mov
outs
add
inc
test
or
cwde
fbld
lods
test
push
ror
dec
jmp
popf
sbb
lea
call
cmp
inc
cmp
push
cmp
lahf
dec
pop
mov
xchg
outs
out
add
lods
(bad)
mov
lea
lds
shl
test
ret
adc
ins
es
scas
stc
xor
not
(bad)
int3
add
mov
adc
shl
or
adc
iret
in
cmc
xor
xchg
mov
sti
into
sub
pop
imul
and
push
fstp
dec
ins
mov
movs
adc
inc
cmps
fld
cmp
cmp
mov
(bad)
std
or
int3
shl
dec
aad
push
adc
jg
jle
daa
jns
test
ret
ins
mov
inc
xor
out
inc
sbb
jmp
fnsave
retf
sub
jae
sub
cmp
or
add
mov
mov
std
xchg
(bad)
sub
mov
sub
clc
jmp
jle
jnp
sub
cmp
xchg
jnp
push
(bad)
cmp
pushf
jae
int
les
sar
xor
arpl
ins
shl
mov
(bad)
sbb
jb
rdtsc
dec
dec
retf
fsubr
push
lea
mov
outs
push
and
mov
mov
dec
cmc
lds
dec
add
ins
fimul
stos
call
adc
mov
sbb
lods
les
retf
mov
dec
imul
cmp
shr
pop
sbb
in
mov
add
xchg
pop
ror
sbb
rol
cwde
icebp
pop
xchg
jg
pushf
xchg
and
mov
cmc
popf
dec
sahf
push
xchg
fist
(bad)
push
xor
inc
and
sbb
adc
dec
and
repz
aaa
add
push
js
data16
aad
daa
sbb
ds
jnp
lea
sbb
inc
jbe
cmp
fadd
iret
or
ret
sti
add
add
pop
pusha
mov
jnp
jmp
sar
out
leave
push
mov
pusha
retf
pop
jl
xor
add
xchg
xor
shl
mov
dec
stos
das
add
(bad)
jb
dec
movs
dec
es
jns
sbb
push
fs
dec
xor
pop
aas
push
cdq
mov
cld
mov
popa
cmc
push
rcl
xchg
into
jo
stc
jp
stc
into
jno
fisubr
call
push
jne
repz
call
loope
sub
push
daa
aad
adc
dec
gs
test
sbb
int3
xchg
ins
inc
adc
nop
add
mov
pop
cmp
cmps
call
(bad)
and
js
and
push
test
pop
cmps
xor
arpl
cli
cmp
push
ins
iret
dec
adc
and
and
pop
pop
xor
in
push
aaa
std
leave
bound
rsm
pop
hlt
sar
fimul
loope
fld
dec
aad
xchg
xchg
and
adc
push
or
dec
sbb
push
inc
gs
xor
into
retf
jmp
test
pop
call
sub
adc
movs
ss
jle
mov
sahf
out
pxor
inc
mov
inc
sahf
stos
aad
sbb
imul
pop
sbb
fstp
xchg
lahf
scas
push
dec
sbb
out
mov
push
test
and
(bad)
lds
loopne
or
test
mul
add
retf
xchg
lahf
mov
mov
or
cmc
xor
clc
dec
mov
pop
add
dec
mov
and
(bad)
mov
xchg
pop
pop
mov
jb
push
push
xchg
sub
mov
xor
mov
sar
mov
es
push
dec
mov
mov
or
pop
mov
push
repnz
dec
xor
pop
jnp
xchg
rcr
cmps
xchg
xchg
xlat
call
ss
xadd
push
lea
jge
icebp
xor
ins
or
push
ficom
mov
dec
repnz
pop
test
and
push
cmp
sbb
pusha
clc
adc
daa
pop
adc
stc
pop
and
lock
jnp
jb
dec
out
test
mov
or
adc
mov
outs
or
and
vmovshdup
mov
mov
mov
cmp
and
das
inc
adc
mov
cmps
mov
pop
stos
mov
mov
arpl
jno
sbb
repz
add
cld
leave
fadd
mov
ret
push
cmp
pop
sub
aad
mov
cdq
fild
xor
mov
jmp
dec
ins
ins
cmps
hlt
dec
call
shl
push
shl
cmp
in
cmps
push
sbb
std
xchg
sbb
and
das
cmp
or
add
or
sub
jo
push
jae
shl
dec
(bad)
lods
ja
std
cs
pop
add
mov
xchg
out
xchg
fsub
sbb
mov
popf
inc
sub
cdq
cmp
sbb
or
xor
xchg
retf
idiv
test
arpl
or
adc
sub
xchg
mov
sbb
mov
jge
loope
xchg
in
and
push
add
in
mov
sub
outs
pop
loopne
fbstp
icebp
pusha
inc
sbb
mov
jmp
sbb
lock
(bad)
fldenv
lods
or
ss
xchg
(bad)
push
js
das
pop
sbb
pop
adc
mov
int
adc
xor
(bad)
or
push
jo
sub
sbb
scas
stc
imul
push
and
fmul
push
in
daa
in
mov
push
sbb
nop
pop
cs
fld
mov
jnp
xchg
mov
and
dec
mov
cmps
ins
and
adc
adc
dec
dec
jbe
jmp
pop
push
pop
(bad)
xchg
xor
lock
lods
(bad)
outs
fimul
xchg
push
mov
stos
sub
and
mov
in
jp
cmp
mov
data16
ins
popa
mov
push
mov
shr
sub
push
adc
cmp
cmc
sbb
mov
pop
dec
push
mov
in
je
xchg
outs
inc
jne
clc
sub
stos
outs
dec
and
mov
fs
xchg
lods
repz
inc
in
sbb
lahf
and
cmp
cmc
in
and
hlt
mov
ins
ror
daa
shr
sub
lock
(bad)
adc
lods
sub
push
mov
ss
mov
push
inc
add
mov
out
inc
xor
pop
cs
sbb
scas
mov
daa
aas
jmp
xchg
push
push
aaa
leave
das
mov
ins
(bad)
push
retf
push
aaa
cmp
mov
or
movs
fistp
leave
mov
jb
dec
xchg
mov
ss
test
inc
in
cmp
adc
(bad)
out
dec
mov
stc
test
jbe
mov
fs
sar
into
xchg
loope
dec
int3
ss
icebp
pop
enter
pop
sub
jecxz
lods
dec
leave
jge
mov
dec
or
popf
push
mov
adc
aad
fcmovnu
jmp
xor
pop
aaa
pop
cmp
repz
pop
(bad)
sbb
xchg
inc
mov
pop
xchg
xor
mov
cmps
cmp
push
fisubr
dec
cmp
iret
or
fdivr
mov
inc
fxch
lods
inc
jg
and
inc
out
in
ins
lods
fld
mov
inc
ret
push
out
loope
out
in
mov
clc
(bad)
mov
push
lea
gs
push
es
add
cmp
pop
pop
and
ret
pop
sub
or
sar
push
rol
lea
xor
test
je
and
loope
div
and
or
repz
dec
mov
push
clc
sbb
cmps
inc
push
mov
cmps
add
xchg
jp
push
cmp
fisubr
call
mov
dec
in
mov
xchg
ret
out
push
outs
xchg
push
mov
xlat
scas
loop
(bad)
std
ret
jae
hlt
push
retf
xor
jmp
and
add
cmp
mov
rol
mov
or
mov
loope
jne
jnp
jae
fcom
and
adc
rcl
push
sub
cmc
popa
movaps
xchg
sub
outs
push
pushf
xchg
cmp
in
aam
shl
push
sbb
adc
aam
inc
pop
hlt
jle
or
pop
sti
push
icebp
popf
or
jb
scas
lock
mov
mov
jg
pop
and
int3
cmps
mov
test
inc
call
out
cld
inc
hlt
ja
fild
xchg
jmp
mov
cdq
xchg
push
mov
ja
arpl
mov
mov
cmc
out
shr
into
div
repnz
test
adc
sahf
cwde
(bad)
daa
test
xchg
fld
pop
pop
mov
mov
ror
shl
and
push
add
push
adc
lea
rol
imul
mov
pop
clc
and
or
inc
fiadd
jns
xchg
and
jmp
leave
add
adc
mov
ror
xchg
call
call
mov
jl
(bad)
gs
popf
sbb
jb
cmp
shr
out
dec
inc
loop
jl
into
je
fstp
iret
mov
mov
outs
cmp
lock
mov
adc
xor
(bad)
std
fcmovnb
and
stc
dec
mov
xchg
jbe
movs
movs
jge
rol
mov
pcmpeqd
xchg
push
mov
mov
out
jle
ror
aaa
jne
aaa
in
iret
xchg
dec
test
mov
sti
das
adc
pop
out
clc
out
mov
push
sbb
bound
or
sbb
jo
rcl
mov
shl
repnz
mov
sbb
inc
fistp
das
or
hlt
int
cmps
ret
add
retf
xor
sub
xchg
mov
bound
xchg
fild
or
clc
cmp
scas
iret
jp
or
jno
adc
arpl
cmc
xor
stos
movs
or
or
cs
stos
int
ins
push
inc
push
mov
ja
and
xchg
lea
in
fmul
or
movs
outs
mov
mov
shl
mov
leave
xchg
xor
repnz
repz
sub
in
rcr
mov
push
mov
push
dec
out
ins
xor
scas
jne
scas
stos
repz
sub
cmc
or
mov
pushf
cmp
pop
neg
rcr
jle
int3
in
mov
mov
push
or
iret
not
mov
push
push
pop
scas
push
sub
jbe
jmp
push
push
lock
fmulp
cmp
mov
sub
movs
mov
retf
or
inc
cmp
cmc
adc
push
inc
xchg
hlt
mov
jl
repz
loope
xchg
xchg
cli
(bad)
(bad)
call
lahf
arpl
inc
fcom
cmp
aad
mov
xchg
add
jb
daa
in
cmp
and
aas
and
fst
ja
pop
test
pop
dec
lods
mov
pop
mov
(bad)
xchg
sbb
sbb
aam
aaa
pop
into
or
ror
scas
pushf
push
sub
jb
mov
ds
int3
jge
les
mov
dec
sbb
je
xor
(bad)
hlt
cmp
aas
xchg
ins
cmp
sub
mov
(bad)
dec
daa
fnstenv
pop
mov
sbb
cli
jmp
fbld
out
jmp
out
mov
in
push
fist
aad
cld
adc
cmp
test
pop
xlat
arpl
aad
push
adc
loopne
or
jecxz
xchg
jne
xor
ret
bound
dec
shr
hlt
fisttp
imul
lea
(bad)
cld
sub
cld
xchg
push
jmp
retf
cmps
ret
test
add
mov
add
jecxz
sub
fs
hlt
retf
or
mov
pop
and
fdiv
stos
std
and
test
daa
mov
(bad)
jg
jb
adc
xchg
jo
cs
aas
js
sub
xor
jge
fsub
stos
or
jae
sub
and
loope
aaa
jae
mov
mov
fild
add
or
fsubr
xor
in
nop
ins
jae
pop
sub
mov
mov
nop
repnz
std
inc
jmp
mov
add
push
call
std
(bad)
and
in
retf
jne
cmp
dec
leave
lods
out
mov
jp
mov
sub
mov
ja
mov
mov
nop
outs
pop
mov
push
mov
enter
xor
stc
pop
mov
rol
jecxz
cmp
lahf
int3
ins
cdq
jb
arpl
jb
in
gs
xor
mov
and
ror
xchg
or
cmp
mov
call
retf
adc
sar
sar
dec
jbe
aad
cmp
fwait
stc
test
dec
dec
in
mov
ds
out
sub
add
pop
lahf
cmc
push
mov
and
sti
xchg
cmp
mov
jbe
test
adc
cwde
mov
aas
add
(bad)
(bad)
ds
cld
loope
cmp
fcomp
mov
lock
idiv
out
lahf
pop
fidivr
sub
or
mov
adc
jp
jmp
movs
sbb
or
icebp
into
xchg
push
jne
mov
mov
fstp
xchg
dec
rcl
outs
fadd
mov
mov
xchg
inc
idiv
rcl
out
jmp
or
xlat
mov
mov
iret
dec
xlat
xchg
shl
scas
dec
out
test
dec
fsub
mov
dec
jo
push
xchg
adc
cmp
out
push
ret
jecxz
inc
dec
inc
iret
push
call
popa
mov
push
push
mov
mov
jo
xchg
outs
or
jmp
loop
and
or
sbb
inc
push
test
inc
adc
mov
pop
inc
cmp
lds
loopne
stos
addr16
test
and
jne
and
xor
mov
sub
add
mov
bound
cs
sub
pop
jae
add
sub
clc
das
mov
xor
in
dec
dec
call
or
mov
push
lea
cmp
in
add
loop
out
scas
xchg
inc
in
pop
xor
jo
neg
pop
or
mov
push
dec
mov
std
cmp
cwde
outs
and
aas
pop
bswap
div
dec
es
mov
ja
retf
jmp
std
cs
and
pop
adc
repz
cmp
jnp
fs
jg
scas
xchg
push
icebp
jl
sub
pop
pop
rol
fwait
aaa
ins
call
daa
stos
mov
test
out
xor
stos
ds
cwde
jno
xor
fstp
aam
retf
les
fidiv
mov
movs
sub
dec
pop
dec
fcompp
es
out
daa
mov
ins
inc
jnp
xchg
sbb
movs
mov
mov
and
and
jbe
(bad)
dec
cmp
test
lahf
icebp
mov
sbb
xor
sub
pop
jo
into
pop
push
cs
pop
bound
stc
pop
scas
(bad)
sti
xchg
sbb
mov
daa
retf
xchg
fdiv
mov
adc
dec
inc
fist
lds
sbb
mov
mov
daa
jne
repnz
xor
mov
adc
fwait
mov
add
imul
fist
push
jae
jge
dec
push
int3
fsub
jbe
push
mov
dec
mov
in
fdivr
test
pop
ret
cmp
dec
repnz
mov
inc
dec
lea
mov
je
data16
xor
idiv
outs
fadd
add
fldcw
cli
shr
inc
pop
xor
sub
in
movs
es
retf
push
into
inc
cld
dec
and
fs
cmp
aaa
stos
in
fs
rcr
mov
cwde
and
movs
mov
fsub
and
sbb
pop
pop
jmp
rcr
xor
in
sar
push
repnz
mov
jecxz
push
jno
xchg
pop
pop
mov
push
stos
mov
sahf
in
or
xchg
bound
ins
pmullw
and
scas
pop
or
and
xchg
std
add
sub
repz
lds
ds
mov
push
jmp
cmp
adc
jmp
stos
mov
loop
fmul
sahf
push
int
inc
mov
push
rcl
ja
je
jne
or
fdiv
inc
inc
enter
and
mov
mov
js
pop
jmp
mov
lods
push
xchg
addr16
mov
rcr
xchg
cmc
ror
gs
leave
mov
xor
pop
inc
fist
push
inc
fdivr
mov
pushf
xor
call
ins
pop
js
(bad)
nop
push
ficom
movs
fs
dec
sub
push
sub
jnp
mov
gs
xchg
push
rcl
adc
pusha
scas
clc
aaa
mov
lea
scas
push
pop
jmp
push
mov
mov
loopne
inc
pop
inc
xlat
sub
cwde
mov
cmp
inc
push
sbb
xlat
sub
enter
imul
xchg
sbb
cmp
ins
xchg
ret
ret
cmp
inc
lods
sahf
xor
out
fld
ret
into
pop
push
lods
popf
rcr
cmp
jge
fs
cli
adc
icebp
inc
test
pop
int
jne
nop
xor
sahf
rcl
add
std
stc
add
mov
lea
rol
inc
mov
add
in
stos
cmp
orps
add
xlat
dec
pop
pop
adc
retf
sbb
aam
fld
push
mov
add
dec
push
or
jnp
sub
jmp
push
retf
test
jl
scas
data16
ds
jne
adc
sub
push
mov
pop
add
scas
sar
lods
pop
jge
xchg
in
scas
and
sub
inc
les
push
ret
pop
inc
movs
mov
sub
clc
xchg
cmp
mov
dec
cs
sub
mov
movs
lahf
in
pushf
add
sub
cmp
in
inc
xchg
fild
mov
repz
test
fnsave
jmp
ss
out
cmps
in
pop
cmp
sbb
aad
adc
rcr
xchg
pushf
ds
loop
jge
jge
add
xchg
into
in
sub
dec
inc
adc
inc
push
inc
inc
xlat
xor
out
jns
or
sub
jge
xor
in
stos
pop
outs
mov
add
ins
dec
cmp
pop
sar
inc
test
sti
xchg
sub
jbe
jne
out
pop
xchg
push
shl
xchg
adc
int3
xchg
popa
cmc
sub
es
xor
sub
push
add
shl
xchg
mov
or
push
push
dec
add
ins
sahf
pop
shl
fisttp
div
sbb
xor
add
mov
ret
lahf
pop
sbb
cmps
cs
cmps
aas
fdiv
pop
inc
inc
xchg
adc
cmp
push
fbstp
ja
lods
inc
mov
and
fmul
imul
cwde
dec
addr16
mov
movs
pop
movs
and
pop
sbb
nop
xlat
xchg
shl
ss
int3
bound
gs
cmp
or
outs
rcl
in
cmp
ret
ins
inc
dec
mov
ficomp
jg
lods
push
xor
aas
and
mov
movs
loope
adc
push
and
clc
neg
ret
arpl
sbb
rcr
push
adc
fidivr
xchg
arpl
fistp
push
(bad)
(bad)
dec
inc
add
or
rcr
pop
mov
jge
sbb
pop
sti
cmp
test
or
outs
mov
retf
rol
mov
sbb
push
adc
inc
shr
out
sti
cmp
bound
or
sub
and
mov
mov
jge
mov
sub
std
jo
pusha
dec
pushf
add
sbb
xor
(bad)
jmp
cmp
adc
in
out
stos
mov
add
push
mov
mov
sub
mov
imul
dec
jge
frstor
int
cmp
jmp
dec
inc
pop
std
fild
mov
or
fwait
lods
jne
les
add
sbb
pop
shl
popf
and
(bad)
enter
neg
fcomp
mov
cli
out
jns
dec
push
push
mov
addr16
mov
sub
jno
fmul
(bad)
sbb
jae
xchg
das
imul
and
push
sbb
add
retf
cmp
mov
dec
popa
cmc
stos
xchg
xchg
cmp
cmp
xor
inc
in
arpl
jmp
stc
push
inc
cdq
in
jae
outs
inc
jmp
mov
stos
bound
lock
test
xlat
pushf
and
xchg
stos
xchg
fldenv
ja
in
adc
popf
aas
xor
pop
mov
dec
sub
dec
and
ret
popa
mov
movs
xchg
in
jge
adc
xchg
(bad)
(bad)
and
and
and
mov
icebp
lea
aaa
popf
xor
dec
mov
adc
rcl
or
ret
jbe
mov
outs
xlat
inc
cmp
mov
js
mov
add
(bad)
fs
push
inc
xor
dec
mov
or
xchg
out
into
push
jnp
lds
outs
mov
scas
sub
inc
aad
push
add
sub
pop
xor
xor
fcmovnu
in
movs
mov
test
or
cli
or
cwde
or
and
add
adc
push
sub
push
pop
jo
jb
push
femms
fs
pushf
sbb
dec
add
sti
fs
jo
call
inc
xor
pop
sub
xchg
xor
fwait
cmp
push
inc
mov
sbb
cmp
cdq
dec
mov
pusha
sbb
jno
mov
jle
mov
test
iret
xchg
jnp
pop
inc
mov
sub
rcl
inc
shl
leave
or
jae
add
ret
sahf
xor
rcr
lods
mov
jbe
mov
cmp
call
jle
das
mov
add
pop
mov
or
lds
add
sbb
jo
out
retf
jg
or
cld
dec
mov
sub
movs
and
inc
arpl
out
xchg
jg
into
jecxz
inc
cdq
mov
xchg
scas
dec
aas
mov
out
gs
push
in
jmp
retf
pop
fsubr
jmp
jns
test
leave
pop
pop
hlt
mov
xor
cmps
jge
movs
inc
sub
cmps
push
push
pop
add
sets
mov
in
popf
jns
and
or
add
or
sub
sti
(bad)
xchg
push
push
fist
add
xchg
lahf
dec
movs
xor
pause
sahf
sbb
movs
retf
aas
vpcomw
sbb
sub
mov
xchg
xchg
lods
mov
xchg
xor
cmp
fild
pushf
pop
dec
out
pop
pusha
mov
movs
pop
jle
and
mov
pop
xor
test
push
sbb
stos
scas
popf
xchg
sub
and
loopne
sub
(bad)
call
xlat
inc
in
dec
movs
bound
mov
or
das
cs
(bad)
mov
rol
nop
and
ins
test
sbb
out
mov
ret
inc
test
ret
pop
sti
leave
push
adc
push
inc
mov
pop
enter
mov
cwde
pop
adc
jge
mov
aas
scas
jmp
or
jmp
push
lods
push
sub
fisubr
call
jno
dec
in
js
jp
xor
and
xchg
jg
jbe
jbe
inc
sbb
inc
bound
clc
sub
arpl
(bad)
icebp
sub
adc
lahf
dec
mov
popf
cmp
xor
jecxz
repnz
loop
xor
nop
popa
mov
add
bound
rol
fmul
daa
shl
push
cmp
push
xchg
cmp
repnz
cmp
jae
nop
xchg
push
cwde
jno
xor
or
lea
nop
mov
cwde
pushf
sub
pop
jmp
stos
xchg
mov
jmp
test
retf
(bad)
xor
xor
out
jo
jns
fimul
xor
cmps
ja
(bad)
mov
call
or
sti
mov
mov
rol
inc
push
cli
xor
call
int3
cmp
push
cmp
push
add
int3
cdq
ins
cmp
ins
out
es
jne
cld
ficomp
test
sub
ficom
jl
push
mov
enter
mov
jno
add
loope
mov
mov
(bad)
and
xchg
fwait
mov
jge
stos
nop
das
and
(bad)
or
or
ins
sub
les
int
mov
mov
ret
iret
sbb
xor
inc
dec
fwait
cmp
ret
sbb
(bad)
in
bound
pushf
cmp
ror
mov
(bad)
pop
aad
leave
cmps
add
sub
cmp
sbb
mov
outs
or
sub
ret
pop
cmp
andnps
(bad)
(bad)
mov
(bad)
rcr
stos
mov
pusha
mov
outs
test
(bad)
fucomi
call
lds
fdiv
(bad)
clc
jg
pop
cli
les
push
leave
rep
push
push
add
sbb
ror
add
mov
push
rol
mov
xor
pop
idiv
sbb
pushf
pop
test
ret
inc
xchg
push
push
rcl
inc
xor
mov
sub
inc
mov
xchg
icebp
push
test
xchg
xchg
push
data16
cmp
dec
or
ins
or
mov
and
jg
mov
push
mov
mov
movs
jno
mov
and
in
inc
popa
ficom
lods
dec
and
mov
int
fcmovnbe
imul
sub
cli
add
or
cdq
push
cmc
(bad)
sbb
fidiv
inc
pop
or
in
inc
jbe
ja
xor
cwde
(bad)
psrld
adc
sbb
cmp
cld
dec
adc
inc
(bad)
xor
test
repnz
xor
cmps
mov
stos
sub
pop
fldln2
(bad)
mov
imul
shr
inc
adc
and
mov
dec
pop
jmp
pop
into
popa
mov
clc
scas
jne
cmp
adc
lds
mov
pushf
jmp
push
clc
shr
pop
dec
inc
adc
and
jne
test
mov
daa
add
fnstcw
or
(bad)
pop
stos
shr
repnz
mov
jne
cmp
je
(bad)
fcmovbe
popa
push
ins
sbb
mov
jg
out
sub
std
les
cdq
and
into
xchg
inc
clc
or
mov
call
mov
test
xchg
pushw
jmp
cmp
in
movs
into
mov
xchg
adc
ins
pop
sbb
sahf
(bad)
xchg
and
or
or
push
mov
push
push
retf
dec
push
popa
inc
iret
push
ss
arpl
jg
mov
call
sub
rol
fistp
sub
sub
test
mov
dec
stos
in
mov
xchg
(bad)
test
mov
cdq
dec
adc
cmp
mov
xor
sti
mov
stos
mov
stos
sub
imul
push
fwait
push
pop
mov
in
adc
addr16
data16
bound
jnp
stos
xor
xchg
in
adc
mov
(bad)
in
push
(bad)
jmp
jle
jo
jecxz
cld
and
push
mov
nop
stc
test
dec
jg
loop
add
jno
lds
movs
enter
push
nop
jo
hlt
xor
(bad)
mov
out
pop
xor
or
rcr
neg
push
dec
dec
mov
fld
adc
hlt
push
xchg
and
xor
ret
pop
pop
mov
xor
lahf
icebp
jmp
or
paddb
add
out
jno
push
sbb
pop
xchg
xchg
loop
nop
das
lods
push
outs
pop
stc
ja
sub
push
cmps
sub
mov
jno
push
push
in
pusha
int
xor
test
(bad)
jmp
sub
push
push
push
leave
lgs
xchg
sbb
push
(bad)
daa
push
aas
mov
rol
mov
sub
fwait
scas
add
and
inc
fild
in
(bad)
push
cmps
outs
inc
push
sbb
inc
call
ss
cwde
pop
ret
(bad)
adc
jbe
xor
adc
leave
and
adc
mov
jb
and
jg
jae
in
lock
xchg
jne
in
jne
imul
dec
das
call
inc
pop
add
or
sub
sbb
jmp
inc
test
pop
mov
cmp
(bad)
add
cmp
out
sbb
ins
imul
sti
fdivr
test
push
xlat
data16
dec
add
test
movs
cmp
fisub
pop
das
int3
ret
cwde
(bad)
jp
repnz
sbb
jmp
push
scas
sub
jle
jmp
or
movs
inc
call
jle
xchg
xor
xchg
in
int
pop
daa
dec
adc
xlat
call
jmp
push
sub
xlat
mov
xor
outs
cmp
add
bound
and
push
mov
shl
jmp
mov
pop
dec
xor
imul
repnz
sbb
ror
fucomip
jecxz
or
or
mov
and
jno
gs
jb
mov
std
lea
ret
adc
lahf
enter
scas
cmp
cld
cli
xchg
inc
scas
(bad)
retf
and
sub
ins
sbb
jle
xor
outs
push
pop
fucomp
dec
xor
push
rcr
mov
mov
push
ror
xchg
sahf
xchg
lock
jns
jno
jg
daa
push
mov
aad
add
ds
stc
rol
aas
enter
je
jmp
pop
xchg
lods
dec
push
pop
pop
add
mov
mov
ja
adc
mov
outs
mov
retf
test
fxam
and
mov
loope
xchg
push
or
xchg
push
ins
pop
lods
je
mov
inc
jae
(bad)
or
mov
in
xor
out
adc
add
das
mov
sbb
gs
(bad)
fstp
jno
stos
or
fucom
dec
mov
(bad)
loope
jge
sub
sbb
iret
lahf
jecxz
mov
ins
jae
cmp
je
inc
jmp
ret
xor
stos
or
jmp
pop
aas
inc
nop
ret
adc
xor
inc
loope
addr16
ret
bnd
cmp
retf
adc
mov
inc
stos
sub
fs
mov
pop
scas
in
leave
xlat
imul
(bad)
cmp
sub
inc
shl
mov
jns
in
mov
adc
js
cmp
(bad)
shl
popf
aam
pop
push
les
repz
jne
or
cs
les
cmp
aaa
xchg
ins
cmp
(bad)
xor
mov
fnstcw
mov
push
add
ds
cmpps
jb
nop
cdq
jg
push
fisubr
enter
pop
cmp
dec
inc
jle
das
pop
push
pop
and
cmp
nop
lds
test
add
mov
ins
jno
mov
cmp
movs
xor
shl
les
dec
loop
adc
inc
adc
movs
mov
das
or
mov
mov
inc
push
jnp
push
cmc
sub
sti
aam
cmp
ficomp
dec
mov
ds
push
(bad)
push
movs
inc
cmp
mov
push
out
push
(bad)
movs
test
lock
mov
pop
or
xchg
daa
clc
outs
pop
into
xor
(bad)
loopne
std
lds
jb
adc
adc
pusha
into
dec
in
loop
sub
(bad)
aam
iret
aad
ss
ror
xchg
xchg
sub
or
fwait
retf
icebp
in
adc
sub
push
shr
call
jne
(bad)
inc
loopne
dec
cmp
das
xor
xchg
aad
push
sbb
addr16
jae
ss
(bad)
(bad)
dec
mov
mov
ins
adc
pushf
cmp
mov
not
cdq
out
imul
adc
xchg
ret
movs
mov
jl
in
fistp
scas
dec
adc
add
pop
mov
int
call
pop
call
mov
jmp
fadd
mov
cmp
ficom
cmp
mov
bound
dec
cs
imul
stc
out
aas
dec
push
mov
lock
or
jmp
daa
imul
mov
lds
pop
hlt
jns
jnp
xor
mov
cmp
xchg
adc
mov
sahf
or
ret
mov
xlat
xor
mov
cmp
jmp
in
xchg
pop
jo
dec
jns
lds
pop
dec
push
adc
pop
int
jae
in
dec
retf
lods
dec
ficom
imul
sbb
dec
mov
xchg
in
mov
cmps
pop
aas
sbb
test
mov
pop
xlat
ins
cmc
hlt
into
scas
mov
ror
or
cmp
cmp
(bad)
lods
popf
mov
(bad)
call
ss
mov
sub
jge
or
std
jl
inc
stos
pop
mov
inc
pop
add
(bad)
call
sbb
mov
repz
push
adc
(bad)
call
xor
repz
inc
leave
in
std
inc
inc
sbb
and
pop
sub
out
fsub
jg
(bad)
retf
cdq
inc
push
adc
popf
addr16
mov
les
sub
cmp
jbe
into
mov
rol
mov
movs
std
jmp
mov
inc
mov
cmp
cmp
mov
adc
mov
mov
xchg
mov
lds
arpl
or
xchg
cmp
mov
jecxz
lock
jmp
pop
mov
retf
xchg
sti
or
cmps
or
lahf
xchg
pop
xchg
ficom
sti
pop
ret
xor
or
cli
lea
imul
xor
loope
and
jo
lea
jle
(bad)
lods
nop
jae
sub
and
and
js
jb
adc
push
test
xor
sahf
test
pop
icebp
and
adc
retf
xor
ror
enter
xlat
adc
loop
sar
sub
cli
js
(bad)
xchg
repz
int3
int3
jge
mov
cmps
jnp
test
inc
mov
ins
jp
inc
bound
adc
mov
mov
push
ds
sub
sbb
fwait
ret
mov
jns
aad
les
icebp
adc
mov
shl
popa
popa
push
aad
and
xor
mov
mov
inc
pop
xchg
jmp
fst
movs
cmp
push
mov
push
add
mov
jg
push
sub
lahf
fwait
int
fisttp
xchg
mov
push
dec
and
(bad)
add
int
xor
jnp
rol
popf
xchg
(bad)
xor
ret
popf
cmp
retf
add
(bad)
jbe
add
test
xchg
jno
hlt
pop
mov
jmp
cmp
pop
cli
arpl
in
hlt
adc
es
in
mov
xor
xchg
mov
sub
arpl
fisub
mov
icebp
jp
jmp
sub
and
hlt
aas
cmp
dec
mov
fcomp
in
mov
out
xchg
repz
aam
add
into
hlt
pop
icebp
xor
ja
push
pop
cli
add
cmp
adc
add
das
sbb
fucomip
mov
pop
sbb
mov
lods
mov
xchg
fldenv
or
rol
aam
fwait
push
mov
jbe
pop
sbb
ficom
aad
ret
push
popf
xlat
pop
dec
cmps
mov
ins
cli
dec
adc
sbb
adc
aas
in
lods
xchg
add
dec
cli
pop
daa
js
addr16
jae
mov
test
xchg
or
xor
mov
sahf
jmp
stc
jg
cs
jg
pusha
mov
or
mov
mov
in
mov
jae
nop
xchg
adc
pop
int
repnz
sub
scas
lock
ja
add
mov
xlat
push
dec
dec
fist
fsincos
test
push
jne
xor
mov
cmp
int3
ret
aas
out
loope
aam
dec
(bad)
ins
jno
call
in
and
(bad)
fs
sahf
je
(bad)
ja
cld
push
pop
data16
cmp
xchg
ret
scas
sbb
repnz
jge
mov
push
(bad)
sub
cmps
in
cmp
pop
fidivr
jecxz
xchg
pop
and
(bad)
mov
daa
leave
xor
mov
sub
cmps
push
out
fstp
jne
add
adc
inc
das
call
ficom
aad
xor
enter
(bad)
in
mov
xor
add
jmp
adc
adc
pop
sub
jno
pop
mov
sahf
outs
arpl
out
xchg
dec
jecxz
dec
add
aam
sbb
jmp
mov
or
scas
dec
mov
cmc
in
popa
xchg
sub
icebp
(bad)
into
int3
mov
cdq
not
jp
test
hlt
push
inc
xor
fsub
div
sar
cmps
xor
frstor
sub
dec
neg
ja
ret
xor
push
mov
cmps
cmp
fst
or
test
mov
ss
push
popa
aam
mov
cmp
dec
out
out
add
pop
mov
(bad)
fs
dec
push
sub
loop
push
mov
dec
mov
add
leave
sub
movs
mov
xor
rol
pop
outs
push
mov
ret
add
ret
dec
dec
ja
jmp
(bad)
bound
icebp
call
fnsave
mov
push
and
pop
enter
jae
sub
movs
imul
outs
movs
sub
cmps
and
aad
and
retf
out
dec
icebp
sub
add
or
into
stos
adc
sbb
mov
pop
add
jmp
jne
arpl
jb
mov
dec
or
inc
xor
icebp
js
mov
fdiv
retf
ror
add
or
xchg
into
popf
inc
add
(bad)
mov
pop
stos
int
mov
cmp
add
fiadd
push
cmp
ret
dec
hlt
sub
pop
adc
ficom
cmp
push
(bad)
or
and
cmp
les
jmp
rcl
fisubr
mov
add
aam
iret
popa
or
mov
std
jo
(bad)
movnti
ret
cmp
pop
imul
neg
mov
loopne
inc
cmp
sbb
cmp
sub
iret
scas
xor
ror
mov
iret
std
test
adc
push
repnz
xchg
xor
cs
adc
push
push
dec
aas
aad
imul
repnz
addr16
mov
push
mov
mov
pop
pop
jne
nop
mov
popf
scas
and
xor
aad
jbe
mov
mov
mov
push
xchg
jae
out
movs
out
mov
add
mov
inc
fisttp
test
(bad)
pushf
cmp
push
shr
aaa
jle
pop
lahf
in
jge
mov
mov
shl
(bad)
jno
jmp
lds
dec
jmp
add
(bad)
cld
inc
add
add
fcmovnbe
rol
lss
ja
mov
dec
cmp
scas
jecxz
dec
lock
sahf
nop
lock
cmp
xchg
rol
sbb
xchg
cmp
dec
xlat
pop
ins
pop
mov
retf
or
pusha
stos
xor
push
mov
sbb
sbb
jae
mov
inc
test
jmp
mov
xchg
int3
je
push
mov
cmp
cmp
adc
loope
adc
sbb
(bad)
dec
aam
sbb
or
addr16
scas
or
outs
and
fld
pop
out
xchg
pushf
call
xchg
cwde
es
pusha
mov
xor
xor
gs
(bad)
popa
fild
inc
test
xchg
repz
call
mov
jmp
sub
shl
test
add
mov
jmp
rcl
in
in
jge
add
popa
or
and
retf
cdq
adc
out
dec
or
call
movs
add
stc
inc
pop
jne
jne
hlt
pop
pop
push
adc
xor
adc
sbb
fs
sahf
ds
inc
add
adc
adc
pop
mov
in
ret
in
cs
addr16
xlat
jo
and
pusha
pop
push
test
and
data16
push
xor
(bad)
in
push
mov
mov
mov
push
fild
aad
jns
sbb
jnp
add
add
or
cdq
and
sbb
or
div
int3
jae
add
sub
push
in
and
mov
es
add
push
shl
outs
lods
add
stos
add
call
add
jbe
pop
and
sub
push
or
shr
ret
cmp
shl
jbe
ins
mov
jno
popf
fcomp
adc
je
push
icebp
sbb
sbb
jmp
nop
xchg
pop
dec
(bad)
setbe
jne
mov
in
das
aaa
inc
push
xlat
imul
jno
cmp
test
repz
mov
jle
icebp
lahf
stc
ror
mov
push
pop
cmp
xor
call
cmps
cmps
xlat
int3
ds
fbld
in
pusha
mov
xlat
cmp
imul
arpl
sbb
es
sub
test
sub
jge
inc
sub
xchg
or
jmp
clc
and
mov
mov
neg
enter
in
iret
cmps
xor
loop
movs
sbb
inc
and
mov
jg
in
or
scas
jmp
jae
dec
dec
in
clc
out
in
inc
add
adc
ja
out
popf
mov
push
and
(bad)
shl
or
shl
dec
push
and
cli
cli
imul
lahf
aam
xor
arpl
xchg
or
sub
or
xor
shr
in
cmc
mov
iret
xchg
or
fild
xchg
jbe
outs
std
push
mov
out
sar
nop
cmp
adc
xor
pop
xor
call
mov
dec
pop
out
inc
rol
imul
dec
xchg
sub
mov
and
cmp
out
dec
add
add
imul
mov
mov
cmp
push
pusha
jmp
inc
xor
push
inc
scas
out
push
lods
stos
jg
xor
xchg
pop
inc
mov
pop
jle
adc
and
adc
push
out
mov
out
push
cs
ins
jle
jg
jge
cmp
test
clc
add
xor
daa
clc
(bad)
push
lods
call
fld
fld
and
aam
dec
div
jae
outs
inc
call
daa
jg
mov
rcl
fst
ins
lahf
in
arpl
(bad)
or
mov
cmps
xor
jge
mov
dec
bts
mov
(bad)
cmp
aad
adc
loop
js
lods
push
std
test
iret
ja
mov
inc
inc
mov
add
aaa
cld
add
or
pop
enter
test
int3
mov
and
mov
enter
xor
and
or
aas
push
pop
jmp
inc
sar
inc
push
cli
cmp
rcr
jbe
fs
stos
pop
pop
ds
(bad)
dec
ret
pop
lock
pop
hlt
outs
outs
jg
sbb
ss
iret
sub
inc
adc
mov
cli
(bad)
fld
clc
rcr
repnz
inc
push
mov
dec
in
xchg
(bad)
movs
sbb
arpl
enter
idiv
cmp
sbb
push
pop
das
sub
sti
push
dec
enter
cmp
or
xor
and
cdq
mov
mov
lock
add
dec
lea
jl
out
pop
fst
cld
mov
xor
push
lahf
dec
or
stc
xor
xchg
lods
sbb
je
cmc
cmp
into
and
cmp
test
loopne
xchg
mov
fstp
retf
xor
int3
mov
test
movs
(bad)
jmp
mov
cdq
inc
jle
push
lahf
xlat
sbb
xor
jmp
push
lea
push
vmread
cdq
pusha
jmp
imul
pop
cmp
jno
mov
push
xchg
cmp
stc
dec
pusha
push
add
clc
leave
mov
mov
and
pop
shl
jge
cmp
fs
loopne
(bad)
std
sub
stc
mov
dec
jnp
loop
out
mov
adc
adc
cmc
das
or
adc
pop
ins
rol
pop
mov
mov
sub
jo
mov
ret
inc
mov
leave
inc
xor
lds
aad
mov
sar
xchg
and
mov
stos
mov
fiadd
bound
loopne
out
cmp
adc
sar
sub
push
icebp
nop
xchg
(bad)
cmp
push
sub
std
xchg
call
aas
aad
fs
and
out
mov
dec
mov
add
jb
jns
mov
pop
sub
loope
add
lods
in
add
std
stos
sub
push
inc
pop
inc
cmp
mov
cmc
adc
adc
cmp
xor
int
mov
popf
push
enter
xlat
jge
or
pop
bound
mov
popf
scas
cmp
inc
sbb
repnz
outs
jecxz
mov
mov
jns
push
gs
inc
data16
cdq
or
jne
mov
add
or
test
jne
dec
sub
mov
mov
mov
jmp
jns
std
jbe
dec
push
dec
cmps
push
(bad)
fwait
test
mov
jle
xor
paddd
mov
aas
or
bnd
clc
lods
jp
daa
(bad)
adc
xlat
dec
loop
xor
sub
pop
test
popa
add
mov
pop
test
mov
ret
pop
push
sub
or
pop
stos
test
pop
loop
ffree
retf
inc
dec
push
je
pop
xchg
dec
sub
stos
xor
jmp
sti
push
push
sub
xchg
mov
mov
fstp
mul
mov
adc
and
retf
or
cmc
div
push
in
xor
inc
jno
dec
lock
jns
and
je
and
push
mov
jnp
sahf
addr16
sub
repz
sbb
jl
pop
cmps
cmps
mov
pop
mov
mov
outs
loop
jmp
sbb
imul
mov
out
pslld
xor
push
pop
or
in
adc
cmps
cwde
dec
sbb
push
je
sbb
ja
frndint
outs
scas
popf
add
ds
cmp
sub
jae
and
pop
adc
ins
mov
addr16
arpl
imul
fsubr
mov
sub
sub
jno
dec
pusha
or
dec
mov
cmp
pop
push
jns
dec
bound
out
inc
or
and
add
mov
jo
dec
mov
mov
sbb
in
jmp
jl
mov
(bad)
out
jmp
mov
jnp
dec
push
hlt
jae
push
add
ret
cmp
mov
pop
pop
lds
sbb
data16
xchg
hlt
push
mov
pop
mov
ins
mov
jge
mov
(bad)
mov
cli
into
mov
ret
repz
(bad)
(bad)
jnp
mov
inc
xchg
and
outs
jmp
mov
in
xchg
ja
call
inc
repnz
call
xor
jg
test
cmps
pop
dec
(bad)
jns
loope
cdq
adc
cdq
jnp
mov
and
push
mov
inc
inc
sbb
fiadd
cmp
repnz
sub
lock
mov
ds
mov
mov
cdq
mov
sub
sbb
jb
call
pop
pop
pop
cmp
dec
jmp
inc
inc
(bad)
retf
fbstp
add
cmp
imul
pop
pusha
out
mov
pushf
fdiv
out
mov
dec
pushf
(bad)
out
fwait
test
aam
mov
pop
inc
lea
and
sub
mov
std
xor
pop
xor
mov
adc
cmps
ja
loopne
fnstcw
add
nop
cdq
add
cmp
sub
int
xchg
clc
xor
nop
addr16
cld
cmp
bound
scas
push
push
xor
(bad)
fcomp
rol
inc
or
(bad)
push
fstp
icebp
pushf
bnd
loope
aam
outs
ret
cmp
cmp
into
ss
and
jbe
js
push
mov
mov
xor
push
pop
arpl
fcmovu
adc
mov
int3
push
adc
call
dec
adc
add
shl
mov
in
pop
cmp
mov
ficomp
jl
mov
mov
xor
cwde
enter
repz
pop
mov
inc
outs
call
loopne
adc
not
jge
dec
push
push
rcr
ss
outs
sbb
xchg
add
ja
sbb
xor
(bad)
sub
xchg
xchg
push
in
mov
cmp
mov
push
cld
iret
jno
xchg
or
inc
loopne
repnz
jne
clc
sub
xchg
cmps
cmps
out
das
movs
sbb
rol
inc
addr16
popf
std
sbb
adc
pop
sub
xchg
into
out
push
(bad)
fmul
or
retf
and
xchg
push
loope
sub
add
and
cmp
ins
cmps
and
sub
xchg
xchg
pop
jns
xchg
xchg
pop
ret
push
sbb
jp
call
sub
or
pusha
sbb
pop
stos
sbb
mov
jno
xlat
loop
lds
mov
repz
push
(bad)
xchg
inc
adc
ja
jecxz
fld
pushf
mov
sbb
je
js
add
inc
jne
fstp
in
mov
dec
fstp
mov
loopne
push
(bad)
mov
lock
fmul
dec
jg
and
mov
es
test
leave
jne
pusha
sar
mov
or
pop
cmc
push
adc
mov
inc
fcom
and
ret
inc
jmp
ret
loopne
adc
add
mov
cdq
shl
sbb
add
xchg
dec
int3
sub
sub
(bad)
in
mov
js
mov
jecxz
add
adc
jge
clc
nop
or
xor
pop
fbstp
jae
inc
sar
cld
nop
mov
push
jge
lods
mov
sub
jmp
mov
add
mov
jle
rol
fbld
ja
outs
mov
jb
add
sub
cmps
js
mov
aad
enter
xor
cdq
imul
add
cmps
(bad)
jo
or
cmp
int
push
loop
call
ror
pop
test
aam
fstp
sub
mov
sbb
out
test
dec
cmps
(bad)
call
lods
(bad)
cmp
retf
dec
mul
push
mov
nop
fadd
fild
es
shl
cmps
fnsave
fild
pop
repz
sub
lock
shr
cmp
inc
arpl
fld
gs
or
out
stc
or
inc
outs
sar
ret
mov
sbb
(bad)
pop
stc
cdq
idiv
xchg
mov
or
cmp
mov
add
js
ins
push
xchg
xchg
test
popf
xchg
or
loope
push
jp
add
or
pushf
pop
xchg
pop
repnz
xchg
add
cmp
xchg
and
(bad)
jp
pop
hlt
add
shl
and
sub
inc
mov
inc
and
cdq
int
dec
sbb
jp
arpl
and
pop
ror
sub
adc
dec
and
inc
gs
or
pop
cmps
mov
push
cmp
jp
cmps
js
mov
rcl
jmp
outs
lods
inc
ficomp
enter
mov
xor
mov
les
sbb
jae
daa
push
mov
je
xchg
xchg
out
jne
xchg
or
push
cmps
into
jmp
cmp
imul
lods
adc
shl
dec
cli
pop
mov
adc
repnz
sbb
icebp
mov
stos
sub
ins
retf
sub
mov
retf
xor
mov
aas
mov
imul
dec
fistp
mov
adc
ds
jnp
jo
adc
fs
jmp
jecxz
loop
(bad)
loope
retf
cmp
sar
xor
inc
xchg
js
rcr
stos
int
out
mov
jg
(bad)
sbb
add
sub
jge
in
and
jmp
jmp
je
push
dec
push
mov
test
jno
test
shr
in
sar
jp
inc
or
shl
push
std
clc
and
stos
fimul
popf
int3
sub
pop
retf
cmc
dec
pop
out
and
leave
sub
xchg
stos
leave
jae
in
add
sbb
jbe
push
mov
push
mov
dec
push
mov
repnz
test
pop
nop
mov
jmp
xchg
xchg
ror
push
mov
pop
into
jb
xor
hlt
push
les
mov
and
push
jns
test
movs
jge
cmp
fidivr
cmp
mov
ds
in
in
push
xlat
dec
cmp
jge
sar
sub
test
fdivr
and
adc
mov
sti
push
jmp
imul
in
mov
popf
mov
test
aad
arpl
icebp
jno
lock
outs
movs
popa
xchg
test
out
mov
mov
lock
popa
cmp
lahf
enter
outs
bound
mov
retf
or
add
test
mov
js
push
aad
out
out
mov
sbb
lods
mov
iret
call
test
and
push
pop
shl
in
bound
call
pushf
jb
out
mov
xlat
loope
paddsb
inc
inc
sbb
fwait
clc
xor
out
leave
sub
outs
sar
or
outs
dec
pusha
sub
adc
mov
nop
jecxz
not
dec
mov
mov
mov
mov
ss
xchg
add
push
jns
popf
ror
loope
out
xor
std
mov
add
xchg
jae
fcomp
leave
aam
inc
mov
adc
sbb
retf
sub
je
stos
jmp
aad
push
dec
dec
sahf
or
xor
into
arpl
sbb
pop
dec
mov
out
jns
mov
leave
xchg
pusha
or
mov
or
jl
jmp
mov
pop
push
cmc
call
xchg
loopne
ret
mov
(bad)
scas
and
mov
pop
xor
lds
or
int
leave
int3
xchg
shl
test
mov
cld
dec
cld
cmp
movs
lods
inc
hlt
or
jmp
scas
cmc
add
jmp
out
adc
xor
adc
lock
xchg
push
fiadd
(bad)
xchg
push
cmps
or
int3
fwait
push
jge
cmps
aas
push
loope
mov
push
jle
add
xchg
fprem
pop
push
mov
(bad)
fimul
js
movs
sub
pop
jmp
xor
cmp
mov
ret
push
push
or
outs
jmp
js
fwait
mov
jle
and
mov
adc
je
enter
(bad)
(bad)
outs
popa
jae
in
stc
imul
dec
inc
jmp
xchg
and
mov
loope
popw
stc
in
mov
sahf
(bad)
imul
xchg
mov
ret
dec
out
push
call
fcomp
xchg
daa
cmps
mul
mov
mov
xor
or
mov
cwde
fild
aas
jecxz
inc
(bad)
jmp
sysexit
neg
pop
or
lods
or
jbe
and
pushf
jns
jmp
scas
push
ss
mov
sub
add
or
jl
movs
loop
sahf
xchg
arpl
leave
in
sbb
xlat
mov
(bad)
pusha
outs
fsub
(bad)
inc
or
dec
fmul
shl
xor
mul
stos
stos
ror
mov
xor
int3
push
or
cwde
aad
test
ss
inc
(bad)
mov
or
icebp
fdecstp
call
jmp
mov
fistp
jp
dec
jge
ins
imul
int3
retf
add
mov
sub
mov
int
sub
adc
add
and
(bad)
sahf
sub
call
loopne
rcr
mov
call
xor
and
pop
sub
retf
add
jb
aas
pop
icebp
adc
mov
fwait
sbb
lahf
popa
inc
arpl
jbe
fs
push
dec
int
sahf
daa
or
lea
imul
sbb
sahf
retf
or
sti
out
fist
fdivr
fsubr
jle
xor
mov
data16
mov
sbb
mov
repnz
mov
into
inc
idiv
jns
stc
retf
test
rol
mov
dec
cmp
push
pushf
xchg
jne
mov
xchg
sbb
fild
push
sbb
sub
jne
pop
jo
pop
or
pusha
pop
add
push
inc
jge
push
xlat
adc
jbe
dec
push
mov
outs
and
push
xor
mov
jp
pop
pop
push
retf
push
cmp
mov
cmp
fidivr
add
add
les
hlt
pop
or
aam
in
mov
repz
cmps
jp
xor
sahf
adc
cmp
mov
mov
jne
mov
(bad)
and
adc
gs
dec
nop
pop
xchg
pop
out
xor
mov
outs
repnz
out
loop
push
pop
sbb
sub
mov
fmul
je
mov
in
jmp
pop
loope
inc
pop
sahf
pop
stos
cmps
push
sub
jno
or
inc
imul
cwde
ret
sbb
dec
xlat
out
fst
cmp
cmp
add
pop
arpl
rcl
jno
call
pop
xchg
ins
xchg
xor
sbb
cdq
or
dec
ret
pop
adc
sub
call
repz
mov
int
lods
sbb
add
xor
gs
adc
cs
pop
mov
retf
or
cli
scas
ins
fstp
sahf
js
(bad)
out
jl
icebp
into
cs
jecxz
inc
adc
xchg
jns
stos
dec
test
dec
arpl
shr
(bad)
pusha
mov
scas
xchg
retf
cwde
mov
xor
cmp
mov
mov
xchg
or
lods
adc
leave
pop
xchg
mul
mov
xor
ficomp
popa
push
pop
test
add
add
cmp
push
(bad)
data16
aas
(bad)
call
mov
xlat
adc
add
shl
in
sbb
jle
xor
out
xor
push
sub
xchg
(bad)
repnz
cmp
pop
(bad)
cdq
scas
adc
outs
mov
rcl
cmp
cmp
inc
xchg
lods
sbb
scas
cmp
and
in
sbb
dec
add
aad
fdivr
scas
pop
push
push
pushf
mov
or
mov
push
fwait
repz
mov
lahf
es
mov
enter
fcomp
jo
lods
imul
pop
push
mov
mov
sub
loope
lea
movs
jl
into
cs
add
test
fild
lods
in
dec
or
push
xchg
push
push
adc
dec
dec
push
mov
pop
xchg
fadd
add
mov
mov
push
xor
jnp
and
cmps
loop
and
xor
push
add
cmp
add
inc
arpl
aaa
mov
jg
cmp
in
adc
inc
in
adc
and
bound
hlt
xchg
lea
or
dec
hlt
and
(bad)
lods
lds
jo
imul
push
inc
loopne
test
and
and
sbb
mov
fdiv
loopne
dec
daa
fdivr
mov
mov
push
push
and
dec
or
fstp
mov
lahf
(bad)
and
out
pop
std
test
ja
(bad)
mov
std
mov
mov
inc
and
lock
xchg
iret
outs
imul
mov
xchg
dec
lods
cld
mov
pop
nop
sbb
and
dec
mov
sub
scas
into
sub
and
rol
cmp
xor
dec
jl
jl
sti
add
mov
gs
aam
cdq
xchg
cs
jecxz
cmps
adc
lea
mov
cmps
nop
les
iret
jg
cmps
jg
push
jmp
ss
add
(bad)
loope
adc
aas
pop
adc
loop
sar
and
mov
jae
sahf
nop
hlt
cs
stc
cmp
mov
mov
icebp
cs
shl
pop
hlt
inc
cmp
aaa
push
jmp
call
sbb
cs
add
(bad)
sub
fstp
(bad)
(bad)
or
daa
in
adc
ffreep
pop
xchg
test
jmp
sub
(bad)
mov
adc
adc
arpl
cmc
outs
arpl
pop
stc
or
shr
data16
lea
fneni(8087
ret
aas
outs
jns
inc
mov
xchg
xchg
cwde
adc
daa
jo
int3
sub
xchg
mov
movs
dec
adc
add
lds
test
push
(bad)
inc
mov
mov
xchg
fimul
pop
xchg
test
adc
bound
mov
out
xchg
repz
je
stc
sub
push
push
xchg
aam
test
shr
int3
jno
lods
mov
mov
pop
push
cs
add
xchg
mov
rcl
daa
mov
movs
sub
addr16
scas
sbb
cwde
adc
mul
call
mov
xor
pop
mov
lea
mov
mov
mov
lock
sbb
imul
xchg
add
jne
cmp
cmps
pop
add
imul
add
adc
pop
xchg
push
adc
dec
sub
outs
sub
and
bound
mov
mov
cmp
fistp
fstp
rcr
je
or
ret
dec
sbb
add
test
mov
pop
hlt
jnp
push
cmc
add
daa
pop
lahf
push
sub
xchg
mov
mov
lods
inc
xor
sahf
inc
jecxz
sub
les
cmp
stc
arpl
mov
dec
dec
pop
loopne
inc
xor
mov
jnp
ins
sar
xchg
bound
mov
sbb
std
daa
jae
pop
les
dec
dec
rcr
cmp
imul
lea
xor
ret
dec
aaa
cmp
add
inc
pop
pop
xor
mov
cmp
clc
pop
mov
mov
in
mov
icebp
shl
jbe
aaa
cmps
mov
mov
mov
test
icebp
sub
cmp
popa
movs
push
sti
std
xor
or
in
(bad)
(bad)
arpl
mov
les
mov
sahf
push
mov
inc
loop
pop
jmp
or
cdq
fild
sub
fdivr
fsubr
sahf
adc
or
dec
inc
loopne
je
mov
or
mov
mov
mov
shl
fldlg2
xchg
paddusb
call
lds
xor
mov
mov
push
cld
or
and
bound
mov
retf
jge
jmp
or
sbb
and
or
mov
jae
xchg
or
js
push
out
dec
jb
hlt
add
call
inc
(bad)
mov
sahf
add
(bad)
sti
push
and
jae
jae
cld
(bad)
das
push
ret
jge
shl
pop
nop
fsubr
mov
ins
inc
xor
mov
push
aaa
adc
sub
dec
imul
clc
mov
mov
sub
call
cmp
jle
mov
adc
sbb
hlt
or
push
pusha
cdq
cmp
push
shl
xchg
scas
popf
(bad)
scas
outs
hlt
retf
jne
lock
cmc
add
pop
movs
and
jge
mov
mov
retf
call
jb
cmc
out
pop
jmp
sti
pop
lahf
pop
lods
mul
add
and
cmc
ja
dec
mov
cmps
adc
scas
jne
int3
or
repz
outs
aam
icebp
rcr
mov
jecxz
add
mov
push
mov
pop
jl
cmp
dec
imul
movs
push
dec
mov
inc
rol
jo
outs
push
jl
mov
adc
mov
push
adc
loope
push
jo
sub
and
inc
ror
movhps
mov
fcmovne
mov
iret
(bad)
clc
icebp
pop
fcom
bound
loopne
cmp
rcr
sbb
xor
mov
sbb
mov
(bad)
dec
sbb
dec
ins
jbe
cmps
ud2
mov
add
ins
or
mov
jp
out
fs
and
movs
test
mov
pusha
adc
dec
gs
xchg
lds
mov
or
mov
hlt
daa
pop
xchg
cmp
sub
clc
pop
or
das
xor
cmps
xor
std
push
loopne
and
mov
test
xchg
mov
(bad)
xor
sbb
jg
push
pop
movs
adc
not
lock
enter
mov
and
cmp
sub
ret
push
xor
ror
js
shr
addr16
bound
out
pop
std
pop
dec
mov
sub
arpl
push
push
and
lock
pop
mov
movs
xchg
mov
lea
clc
mov
cmp
out
and
mov
in
sahf
ins
ss
fwait
xor
lods
push
mov
adc
test
addr16
dec
xchg
sbb
sbb
add
int3
rcl
inc
fucomi
push
inc
adc
or
ds
and
shr
mov
lods
push
sub
stc
push
push
scas
lods
push
mov
cwde
dec
and
sti
dec
clc
sbb
das
enter
movs
sub
adc
ret
sub
mul
lahf
cmp
ds
push
repz
mov
jle
add
popa
push
aaa
xor
mov
mov
xchg
into
fcmovb
mov
test
fld
js
and
arpl
mov
or
adc
std
sub
adc
movs
sub
push
bound
mov
(bad)
out
add
mov
stos
fmulp
adc
test
pop
dec
sar
xor
into
mov
push
inc
sub
sbb
stos
out
sbb
clc
mov
mov
push
repnz
aaa
push
dec
lods
cmc
arpl
and
ret
aad
lea
je
cs
sub
inc
test
test
push
aaa
xchg
adc
test
mov
push
inc
lds
fsubr
xor
ficomp
inc
push
or
es
xor
mov
and
int
mov
inc
sub
lds
xor
add
cmp
sub
call
mov
dec
adc
or
fwait
not
stc
fldcw
add
cmp
xchg
xor
aas
pop
mov
out
retf
dec
jge
cmps
bound
jae
test
hlt
int
retf
mov
mov
data16
dec
lods
movs
in
ror
cmp
call
xchg
inc
mov
fist
in
mov
je
pop
push
jg
daa
adc
xchg
jns
mov
test
daa
clc
cwde
daa
(bad)
adc
jg
ret
sbb
outs
mov
ja
test
addr16
add
push
sbb
into
and
movs
call
xor
in
out
and
cmp
mov
adc
popf
mov
lods
xchg
bound
test
faddp
xchg
and
out
popf
mov
loope
push
pop
mov
call
jo
xchg
or
mov
cmp
aaa
outs
sti
pop
clc
xchg
aam
adc
push
pusha
xchg
xchg
or
push
sub
sbb
sbb
sub
jmp
loope
lea
cmp
lods
adc
(bad)
mov
push
pop
sub
arpl
jnp
inc
cmp
jge
mov
scas
dec
mov
or
sub
mov
(bad)
dec
jns
push
and
scas
push
xchg
icebp
mov
shl
sub
adc
sub
pop
stos
(bad)
sub
mov
cmp
inc
cmc
rcr
(bad)
cmp
jo
out
retf
das
pushf
dec
xlat
and
mov
add
popf
rcl
cs
dec
dec
popf
lea
jp
loop
dec
xor
cmc
call
pushf
xchg
loopne
cld
cmps
into
int3
or
out
loop
add
add
retf
dec
imul
das
mov
fstp
fwait
pop
das
movs
add
sbb
xchg
or
xchg
mov
ins
jae
cmp
cmp
sar
icebp
aas
dec
cmp
mov
call
sbb
movs
fcomp
jg
jl
cmc
adc
adc
(bad)
mov
clc
aam
or
or
adc
bnd
pop
cs
mov
inc
ja
icebp
inc
jmp
out
mov
inc
jecxz
adc
cmp
pop
cmc
mov
out
arpl
bound
push
sub
in
ins
lock
push
mov
sbb
pop
push
fsub
int
es
mov
(bad)
cmp
sub
test
pushf
xor
sub
ror
call
shr
ss
dec
fimul
test
sar
jg
inc
aaa
push
cdq
pop
movs
dec
inc
mov
in
push
xchg
cwde
pusha
mov
(bad)
shr
test
push
out
cmp
cld
retf
into
fwait
push
inc
jbe
out
jge
dec
dec
inc
in
push
add
ror
daa
mov
(bad)
(bad)
sbb
lods
adc
mov
hlt
nop
imul
or
dec
ret
xchg
pushf
mov
scas
ror
sbb
scas
xchg
cdq
dec
pop
call
push
sub
push
ret
(bad)
out
pop
mul
js
mov
je
sbb
mov
dec
shl
or
xor
jl
call
mov
mov
ficom
stos
cmp
fistp
sbb
imul
mov
movs
mov
(bad)
fsubr
adc
cmc
popf
jo
and
lods
call
xchg
inc
xor
inc
xchg
fs
out
xchg
(bad)
and
mov
frstor
ret
add
cmp
xchg
fs
shl
test
out
dec
ret
cdq
ss
loope
fidiv
sub
and
mov
aad
in
mov
jp
xchg
pop
pop
sub
push
fistp
pushf
int
loop
leave
ja
fist
test
fist
scas
or
aas
jmp
lock
xchg
repnz
dec
imul
aam
xchg
mov
movs
hlt
or
jnp
clc
jecxz
pop
sbb
sub
imul
fist
xchg
popa
xchg
gs
cdq
push
inc
fdivrp
mov
cmp
fistp
bts
les
add
push
xchg
adc
xchg
hlt
(bad)
mov
push
jae
stos
sbb
jno
out
loopne
ror
fsub
push
cld
retf
mov
repz
shl
rcr
scas
or
inc
sbb
xor
div
in
xchg
mov
(bad)
call
mov
(bad)
add
inc
popa
ds
xor
enter
lods
xchg
push
mov
xchg
cwde
pop
sub
movs
mov
push
movs
jne
loope
xchg
push
jp
ret
cmps
push
jns
mov
mul
jp
mov
fwait
xchg
(bad)
(bad)
sbb
or
or
xchg
les
push
test
sti
inc
sub
mov
and
adc
add
out
dec
push
fimul
mov
inc
mov
sbb
movs
cdq
mov
xor
jnp
shl
push
stos
mov
cmp
ds
cmp
int3
sub
pop
jnp
arpl
movs
sbb
sbb
xchg
hlt
sub
pop
and
xor
leave
fwait
test
dec
rcr
sbb
out
ficom
fs
int3
ins
das
mov
repnz
pop
jmp
inc
lods
xor
lea
fidiv
or
shr
into
dec
inc
std
push
dec
pop
mov
sbb
jno
inc
sub
mov
inc
xchg
dec
int
mov
iret
sbb
shl
mov
mov
repz
rcr
rcl
int
pop
sbb
call
mov
jge
movs
mov
iret
outs
popf
pop
push
and
ror
clc
sbb
or
mov
loop
sbb
or
mov
pop
and
inc
ins
xchg
xor
out
cmp
dec
add
sub
test
out
sub
cmp
xchg
add
rol
and
sub
(bad)
nop
dec
data16
mov
hlt
mov
fld
jecxz
xor
sti
pop
rol
adc
add
xor
dec
push
(bad)
pop
xchg
(bad)
cmc
cld
jnp
outs
and
stos
xor
dec
and
rol
mov
jo
cmp
pop
arpl
jecxz
jne
loope
arpl
push
inc
in
add
int3
xor
rcl
dec
mov
push
add
stos
jb
call
ja
clc
or
in
bound
gs
push
inc
pop
jne
(bad)
xor
aam
inc
cmp
sbb
mov
xor
mov
sub
jmp
mov
mov
xor
ja
pusha
gs
ss
popf
cmc
ds
scas
dec
cmp
adc
cmp
mov
cdq
fwait
cmp
cwde
bound
pop
iret
mov
popf
jge
retf
sar
dec
(bad)
in
jnp
sub
xor
adc
xchg
test
or
lods
mov
cmp
dec
sbb
add
mov
(bad)
adc
jmp
pop
inc
sub
adc
xchg
cwde
push
or
arpl
add
sar
fadd
push
lds
pop
dec
sbb
push
cdq
ins
and
jae
cmp
jecxz
mov
fs
call
add
sub
or
inc
push
mov
xchg
sub
(bad)
mov
call
movs
push
mov
jns
push
rcl
(bad)
cs
sbb
lea
xchg
jecxz
cmc
push
dec
xchg
or
les
in
dec
mov
test
add
aas
ja
mov
scas
sahf
inc
retf
and
pop
inc
movs
adc
push
sub
cmp
xchg
lahf
xchg
add
sub
xor
xchg
popf
fs
out
jae
cmps
jecxz
inc
retf
xor
or
adc
push
inc
push
rcr
icebp
movs
inc
sub
mov
into
fcmovnb
jp
push
or
mov
(bad)
xchg
xor
std
pop
mov
and
fwait
(bad)
mov
xor
sub
(bad)
cmp
or
xor
xor
xchg
and
lahf
fild
out
inc
std
nop
fld
adc
dec
mov
ja
and
pop
and
add
es
mov
cmp
mov
sbb
dec
cmp
test
lea
mov
mov
push
cmp
pop
inc
std
(bad)
(bad)
stos
lock
nop
ds
dec
add
inc
das
inc
pop
shl
inc
dec
movntq
in
inc
ins
gs
dec
jl
add
in
in
and
mov
xor
loope
add
mov
pop
pop
and
xchg
ins
lahf
aaa
inc
outs
arpl
rcr
lea
lea
push
jg
or
sub
ins
into
pushf
test
and
cs
out
xchg
(bad)
daa
or
imul
es
stc
push
(bad)
sub
push
ins
add
xor
les
repz
loope
xchg
adc
jl
(bad)
lock
dec
sub
sbb
xlat
sub
mov
int
repz
fxch
cwde
into
mov
sbb
mov
mov
mov
jnp
jge
pop
clc
in
gs
or
add
int3
mov
inc
xor
push
mov
cwde
add
mov
push
fisubr
jae
sub
jmp
pop
pop
cld
push
int
cdq
sub
ja
cmp
(bad)
out
stos
and
stos
cmp
jl
cmp
fstp
std
aas
fcmovb
icebp
test
sbb
in
mov
inc
mov
pop
cmp
fnstcw
or
adc
jb
scas
xchg
movs
dec
xchg
jge
loopne
and
or
cwde
jecxz
add
cs
test
outs
cwde
cmps
jne
lea
mov
xor
fcomp
sub
add
add
fst
jo
pop
ret
add
sub
pmuludq
dec
xchg
mov
scas
int
mov
and
push
rcr
sub
xchg
mov
jecxz
arpl
repz
jne
push
and
fild
sub
adc
out
jl
xchg
cmp
mov
dec
arpl
repz
bound
mov
aaa
out
jl
pop
nop
retf
les
push
ss
and
aaa
push
cli
adc
movs
pop
out
dec
push
pop
or
in
xchg
push
push
xchg
mov
sbb
sti
lods
dec
add
call
loope
xor
loopne
mov
mov
push
cmc
les
mov
imul
stos
imul
leave
in
ins
(bad)
mov
push
outs
inc
jg
out
jae
push
inc
or
xor
nop
or
lock
rol
loop
pop
jp
jmp
and
sti
sar
or
in
pop
inc
repz
jg
xlat
ret
xchg
xor
cmps
nop
rcl
or
mov
test
add
lods
and
sub
jnp
push
inc
xlat
pushf
popa
movs
int3
add
jnp
push
fmul
dec
in
inc
add
popa
jge
stos
or
js
ficom
and
(bad)
ss
not
bnd
not
xchg
cmc
mov
sar
loopne
add
imul
imul
mov
retf
sbb
sub
cli
(bad)
fucomi
add
frstor
mov
mov
loope
adc
scas
mov
jecxz
pop
sbb
xor
leave
jecxz
add
mov
retf
(bad)
hlt
cmps
inc
loopne
xchg
retf
call
fsubr
and
icebp
dec
retf
xchg
gs
aam
(bad)
retf
lods
popa
or
or
push
retf
icebp
ret
dec
pusha
imul
pusha
arpl
xor
inc
cmc
fnstcw
xor
sar
inc
test
xor
outs
ret
sub
sar
xchg
outs
push
(bad)
aad
push
shl
xchg
cld
rol
jp
xor
sbb
cmc
inc
or
lahf
sbb
je
stos
in
jmp
or
cmp
and
ret
sub
and
push
test
push
and
imul
addr16
cmps
push
stos
mov
ss
xor
out
xor
mov
sub
in
clc
pop
scas
call
mov
mov
adc
mov
mov
inc
cmp
pop
dec
ret
and
pop
inc
call
mov
dec
ror
xlat
dec
scas
push
xchg
inc
popf
adc
nop
js
mov
add
xor
fcom
nop
or
add
mov
mov
imul
jp
add
add
jno
cli
mov
dec
mov
jnp
lods
retf
add
popf
xchg
icebp
jg
mov
call
mov
in
mov
dec
or
hlt
xchg
retf
cs
jo
fmul
pop
jbe
ja
add
inc
gs
cmps
sub
and
mov
and
retf
mov
adc
mov
imul
pop
sub
gs
stos
shr
cmp
cmp
enter
mov
in
and
aam
push
mov
mov
sub
icebp
push
daa
xchg
pop
jo
call
test
mov
ins
loopne
or
lea
mov
adc
(bad)
in
push
scas
lea
mov
or
lock
(bad)
pusha
les
and
in
pop
add
sbb
pop
push
mov
dec
xchg
out
loop
ficom
mov
mov
std
out
leave
mov
jle
xchg
mov
test
in
fisub
sti
lds
sbb
int3
shl
gs
fiadd
pop
jmp
sub
xchg
call
push
rcr
fsubr
addr16
jp
stos
and
test
and
push
les
test
xor
rcl
mul
add
push
dec
xor
or
int3
(bad)
iret
mov
outs
fwait
mov
fistp
ret
sbb
mov
mov
xchg
inc
jo
mov
pop
pop
jae
mov
mov
push
imul
pop
or
sub
ror
xchg
lods
call
cli
fwait
pop
repnz
push
push
sub
test
fisttp
movlps
xor
xor
aam
add
movs
push
shl
imul
in
xor
jno
ret
inc
icebp
ja
inc
and
test
int3
cmp
icebp
sub
fst
and
and
dec
or
(bad)
outs
jge
adc
das
jge
addr16
shl
dec
sbb
inc
dec
jae
lods
idiv
fwait
lds
add
mov
int
repnz
js
xor
or
and
stos
adc
mov
mov
pop
ror
mov
or
xor
and
mov
arpl
sub
sbb
rcl
ins
xchg
push
fcom
jmp
xor
add
mov
mov
scas
dec
push
scas
nop
movs
outs
add
and
dec
push
mov
jns
sub
rol
je
and
mov
je
outs
call
or
daa
test
or
dec
mov
mov
sbb
frstor
pop
retf
dec
push
data16
xlat
push
pop
not
and
retf
push
dec
jbe
pop
out
(bad)
adc
mov
adc
mov
icebp
adc
push
pop
push
movs
data16
xor
lahf
jnp
jae
mov
stc
push
push
out
jle
arpl
jl
mov
aas
jp
add
add
pop
or
xchg
mov
jne
mov
push
cwde
mov
cmp
mov
out
mov
jmp
pop
or
shl
inc
cmp
or
inc
fiadd
and
pop
dec
out
mov
fadd
mov
stc
jb
repz
jo
mov
jo
ss
xchg
jno
pop
lock
(bad)
cs
xchg
hlt
pop
out
inc
ja
sub
pushf
add
dec
test
or
mov
mov
push
jo
ffreep
out
or
cmp
imul
xchg
push
mov
or
fbld
add
pop
lds
mov
xchg
push
test
aad
mov
scas
pop
mov
mov
ins
adc
fadd
into
and
mov
test
hlt
inc
mov
push
loopne
out
aam
call
lock
(bad)
xchg
jae
cmp
outs
and
mov
ret
pop
outs
mov
push
lds
ins
leave
mul
cmps
int3
dec
jmp
lock
xchg
or
adc
enter
pop
pop
push
aad
iret
movs
push
mov
imul
or
xlat
icebp
pop
or
jp
or
mov
fist
test
cmp
mov
cmp
pop
fwait
lods
jno
shl
cdq
imul
retf
push
cmps
push
dec
adc
cmp
xchg
loope
in
sbb
push
(bad)
test
mov
inc
repz
test
dec
iret
push
cld
xor
imul
in
add
shr
jmp
adc
dec
pop
cmp
mov
jae
stos
jne
pop
pop
pop
hlt
icebp
js
push
(bad)
dec
out
ins
sbb
xor
adc
xchg
aas
imul
fldcw
mov
lods
scas
jnp
inc
(bad)
mov
movs
sar
push
shl
fmul
adc
pop
pop
add
dec
push
movs
gs
cdq
into
out
mov
sahf
enter
ja
test
dec
sahf
mov
push
push
mov
and
stos
jecxz
push
jmp
test
push
cmp
mov
hlt
call
test
fisub
dec
pop
push
cmp
push
or
fadd
add
mov
inc
push
int
test
in
xor
xchg
sub
cmps
xor
call
jnp
inc
int
add
xchg
outs
cmp
inc
stos
dec
xchg
inc
jns
ret
popf
pop
movs
jmp
stc
sbb
std
mov
xor
adc
les
and
xchg
sbb
jae
in
fst
mov
in
outs
enter
aas
in
inc
das
scas
repnz
mov
dec
lock
cmp
or
pusha
fnstcw
in
mov
xchg
adc
sbb
mov
test
cmp
mov
ficom
push
mov
mov
inc
xchg
jge
jb
shl
xchg
fs
mov
push
inc
cmp
imul
pop
cmp
pop
div
inc
and
push
stos
ja
inc
push
retf
mov
(bad)
xor
mov
inc
sbb
dec
mov
sub
ss
int
into
jne
test
das
(bad)
pop
add
jg
hlt
sub
xor
ins
in
outs
imul
dec
pop
gs
mov
sbb
adc
out
outs
bound
xor
sbb
add
xor
add
out
cwde
and
cld
add
aad
dec
sbb
xor
adc
pop
fnstsw
mov
shr
lahf
pop
movs
daa
push
out
les
add
shl
fwait
sbb
cmps
mov
sub
jl
daa
jge
xlat
scas
jae
fwait
cmp
test
and
sti
stos
call
adc
cmc
dec
mov
pop
xchg
cld
(bad)
pop
std
or
mov
xchg
mov
arpl
push
aad
daa
dec
shl
cmp
add
xchg
(bad)
jno
jnp
popa
fdiv
cmp
clc
call
pop
sbb
fisubr
mov
cmps
push
pop
clc
sbb
sub
data16
mov
movs
jo
mov
cmp
cmp
push
xchg
sub
sub
sbb
dec
push
call
(bad)
stc
sti
pusha
mov
pop
bound
cli
int3
jnp
loopne
and
sahf
dec
(bad)
lea
dec
push
(bad)
mov
std
sbb
ja
hlt
jo
fwait
xchg
pop
jmp
jne
sub
movs
or
push
and
sub
or
inc
out
fisub
push
jmp
push
jne
cmp
or
xchg
mov
iret
jo
push
sub
or
js
xchg
nop
cmp
out
fld
mov
sbb
ret
or
loop
push
in
(bad)
clc
xchg
adc
push
sbb
inc
cdq
adc
and
push
adc
xchg
inc
int3
imul
cwde
and
jae
jb
mov
(bad)
les
ror
and
or
aaa
mov
pusha
pop
adc
dec
cmc
mov
push
dec
pusha
adc
popf
loop
mov
mov
cmp
push
cmps
dec
cmp
xchg
(bad)
les
mov
dec
cmp
pop
test
ret
aam
sub
push
jnp
lods
adc
gs
sti
test
stos
jge
movs
and
movs
mov
test
mov
dec
shl
sub
jo
or
mov
out
pop
fcomp
rcr
jb
fmul
cmps
stc
(bad)
addr16
push
push
xchg
pop
mov
shl
cld
js
ins
fnstenv
loope
data16
cdq
xchg
jns
jns
cwde
movs
cwde
outs
inc
fwait
xor
and
or
inc
mov
dec
mov
xor
ins
xchg
jl
lods
push
mov
push
sahf
inc
mov
pop
shl
imul
add
push
inc
stc
push
push
cli
fcmovu
sbb
add
mov
je
ss
adc
xchg
mov
xlat
das
retf
(bad)
les
popf
or
cli
jge
xchg
xchg
mov
mov
rep
push
loopne
pop
mov
or
jge
retf
popa
in
icebp
repz
cmps
fdiv
sub
ficom
inc
push
ret
dec
sbb
js
sbb
cmovs
fsubr
inc
nop
popf
pop
ss
aaa
cmp
push
mov
mov
inc
data16
xchg
and
mov
pop
push
fdiv
inc
adc
adc
(bad)
or
outs
add
lea
dec
fs
pop
cdq
adc
test
(bad)
jae
inc
iret
mov
adc
mov
xchg
dec
cdq
xor
hlt
cmp
dec
inc
fild
sahf
fldcw
xchg
push
and
ins
sub
in
xchg
icebp
pop
sbb
out
add
aam
out
mov
(bad)
icebp
jo
arpl
and
sbb
js
retf
or
or
dec
outs
inc
mov
xor
loopne
mov
pop
(bad)
and
add
pop
sub
sbb
pop
inc
and
cmp
xchg
mov
dec
rcr
repnz
xor
push
xor
mov
fldcw
sub
push
mov
test
xor
mov
mul
jns
or
fnsave
cmps
mov
push
jo
mov
xchg
jmp
add
jno
xor
push
out
std
ja
sub
dec
out
push
retf
mov
sub
in
hlt
mov
dec
cdq
add
and
daa
and
sbb
xlat
sub
jl
aad
xchg
cmp
pop
xor
aaa
cmp
push
loope
fild
xchg
ins
xor
mov
retf
pusha
stc
push
push
push
bound
(bad)
gs
and
dec
mov
les
sub
mov
jp
sar
enter
(bad)
je
pop
cmps
dec
out
or
ja
xor
mov
mov
xor
ret
jp
shr
inc
sbb
shl
icebp
jne
and
pop
jns
or
retf
repz
jae
mov
jg
sbb
jnp
lods
call
pusha
push
adc
push
xor
mov
ret
out
or
adc
movs
(bad)
mov
ja
xor
iret
mov
in
mov
xor
(bad)
push
out
xchg
cmp
rcr
out
idiv
mov
jnp
imul
inc
xchg
int3
add
fcom
dec
jge
add
and
inc
imul
ret
test
inc
and
retf
je
fist
repz
add
add
bound
(bad)
mov
ret
cmovae
ins
popf
cdq
popa
scas
ja
loop
mov
adc
dec
lods
js
fcmovnb
loope
enter
lock
or
vxorps
jbe
stc
lods
mov
fucomip
std
jbe
fld
(bad)
sub
add
(bad)
sbb
xor
cmp
ss
mov
outs
sbb
rcl
push
scas
ror
pop
mov
jl
lea
dec
or
inc
rcr
rep
dec
aas
sub
add
sub
outs
xor
jne
pop
les
dec
data16
stos
fadd
push
fadd
lds
pop
and
adc
and
sbb
shl
pop
std
and
cwde
mov
add
push
inc
pop
jle
mov
push
xor
cmp
sub
iret
inc
dec
jnp
ficomp
mov
ja
mov
jnp
movs
pop
loop
xchg
or
mov
retf
or
push
lahf
pop
lahf
ret
cmp
ret
jbe
popf
neg
jno
xchg
fsub
shr
push
or
retf
or
int
pop
pop
iret
sbb
xchg
cmp
shl
fild
imul
jne
movs
rcr
cmp
or
mov
push
test
lock
in
fs
push
adc
out
adc
adc
sbb
inc
cmp
and
icebp
inc
(bad)
test
inc
pop
sahf
pushf
and
xchg
(bad)
or
cmps
mov
sub
mov
dec
mov
cli
sbb
sbb
ins
push
sbb
or
int
mov
cmp
jg
es
cld
add
add
sbb
mov
mov
xchg
ds
les
inc
xor
fwait
adc
jno
mov
(bad)
iret
popa
das
jbe
enter
movs
lea
into
xor
dec
xchg
inc
pop
jl
stc
mov
cmp
shr
pop
ret
and
imul
jne
in
jl
adc
rol
test
jmp
sbb
pop
mov
leave
dec
push
lahf
movs
adc
sbb
push
inc
mov
ror
arpl
jbe
pop
or
sbb
inc
sub
add
(bad)
dec
jo
fbstp
test
mov
sub
cmps
(bad)
sti
push
scas
mov
xchg
mov
dec
ins
mov
or
and
jne
in
loop
cmps
sub
in
inc
lds
fimul
in
push
xor
imul
push
adc
outs
imul
in
inc
mov
sbb
ds
xchg
cmp
loop
test
mov
aam
out
inc
cwde
push
ss
mov
pop
in
out
in
(bad)
jb
and
arpl
or
adc
mov
add
jnp
or
jg
fs
cmps
fld
(bad)
adc
mov
popa
(bad)
cs
fstp
push
sub
into
and
fs
and
sub
lods
cmps
cwde
cmp
mov
pop
push
jge
movs
mov
into
shrd
xchg
in
imul
fs
jge
adc
test
into
imul
adc
and
cmp
ret
inc
addr16
sub
adc
mov
sahf
mov
cli
lock
fld
add
add
push
adc
aaa
jecxz
push
mov
jp
or
pop
sub
add
jns
das
adc
std
mov
dec
mul
out
iret
or
mov
pusha
pushf
test
int3
fild
in
in
shl
jmp
mov
cmps
mov
or
adc
mov
icebp
ins
or
adc
cwde
ret
(bad)
xor
out
mov
loop
jl
cmp
cmp
sbb
cmps
dec
xchg
into
xor
mov
ds
in
call
ss
js
cmp
imul
rol
pop
mov
into
sub
pop
sub
push
dec
sbb
adc
movs
or
out
dec
sbb
(bad)
cld
sub
xor
add
(bad)
adc
push
mov
int3
scas
jl
mov
fdiv
sub
mov
push
in
cmps
mov
or
stos
push
add
retf
out
push
push
dec
jns
sbb
ret
retf
sbb
nop
push
cs
mov
xchg
mov
and
pushf
sub
push
and
mov
jg
rol
dec
mov
mov
or
fcmovnb
sbb
push
in
(bad)
mov
(bad)
mov
test
xor
xchg
or
(bad)
mov
push
pushf
test
mov
ds
fwait
push
pop
out
leave
add
out
jbe
xchg
jge
push
fs
xor
or
in
push
mov
pop
cmp
inc
das
imul
rcr
rcr
jnp
cmps
fs
dec
sbb
xchg
je
hlt
push
push
ins
hlt
pop
or
call
or
(bad)
fnstcw
cmps
jmp
or
and
push
push
mov
retf
inc
addr16
xor
std
adc
inc
(bad)
out
and
int
call
cmp
fimul
and
clc
mov
sub
jae
(bad)
pop
aad
jle
inc
nop
outs
fsub
sbb
cli
mov
sar
in
js
daa
fistp
mov
push
pop
scas
mov
aad
xchg
jl
pop
and
inc
xor
repz
mov
hlt
out
xor
mov
mov
pop
(bad)
adc
sbb
cmp
mov
jae
addr16
jl
mov
enter
fsubr
inc
in
sbb
les
stos
pushf
mov
push
mov
or
xchg
ret
sub
rcl
inc
lods
dec
cmps
int
retf
inc
(bad)
loopne
ja
pushf
dec
je
push
retf
and
cmp
fstp
dec
add
movs
ror
xor
out
repz
loopne
pushf
not
push
out
(bad)
(bad)
nop
arpl
xchg
cmp
adc
add
hlt
xchg
neg
add
(bad)
mov
in
nop
and
mov
mov
test
cmp
into
in
test
dec
ror
(bad)
push
jge
gs
sub
add
std
dec
and
std
and
aam
push
(bad)
fsubr
(bad)
xor
mov
and
jo
pop
retf
push
jns
imul
stc
xor
fistp
xlat
xor
cmp
mov
mov
cwde
push
sub
sub
fimul
or
cmp
push
mov
mov
jno
imul
mov
xchg
cmp
test
and
je
pop
xor
cwde
mov
sub
or
scas
jmp
call
jl
rcr
loop
imul
or
xchg
stc
jb
mov
pop
mov
loope
fst
cs
lock
jge
test
fidivr
loopne
hlt
retf
push
pushf
mov
inc
pusha
nop
jl
cmc
je
lock
sub
inc
stc
lods
out
test
pop
cmp
jmp
or
mov
fsub
imul
lds
xchg
daa
cmp
pop
retf
movs
mov
add
dec
movs
mov
loopne
aas
pusha
cdq
sti
lods
jbe
and
(bad)
fsub
jmp
clc
nop
inc
mov
inc
or
jnp
pop
xlat
push
jae
call
rol
cmc
dec
inc
test
inc
jns
sti
movs
movs
lods
idiv
icebp
xchg
jnp
cmc
add
lea
sbb
cld
lahf
add
jg
mov
das
cs
fild
je
jge
cmp
xor
xchg
in
xchg
or
xchg
xchg
mov
popa
stc
sub
adc
add
jl
int
shl
cmp
cmp
push
cmps
stos
lock
and
sti
pop
scas
cmp
push
leave
mov
mov
(bad)
sbb
mov
dec
xchg
loope
xlat
xor
test
cmp
dec
xor
push
sub
mov
movs
ss
mov
push
in
lock
(bad)
(bad)
and
sub
xor
sub
in
lock
fs
scas
in
and
jno
daa
loope
sub
push
sbb
or
push
xor
xor
push
push
fdiv
push
outs
add
mov
jl
rol
add
adc
dec
dec
int
cmp
push
jmp
inc
add
adc
push
(bad)
push
jmp
xchg
cmp
stc
pop
and
int3
and
and
jmp
cwde
movs
sbb
(bad)
mov
lods
test
push
pop
(bad)
pop
int
jle
arpl
jmp
mov
fs
push
mov
es
and
jb
in
sub
out
out
pop
cli
ins
cmc
add
lock
pop
out
std
push
cli
jo
mov
mov
retf
adc
sub
test
adc
push
inc
sub
or
jb
stos
mov
fild
cmp
add
add
out
sar
jno
out
aaa
jmp
out
and
stos
cwde
bound
jmp
mov
(bad)
adc
push
xor
loopne
sub
push
rcl
adc
rcl
dec
stos
xchg
fwait
bound
cmps
out
rol
xor
adc
push
fwait
(bad)
out
add
call
sbb
xchg
loope
fist
push
fdiv
jmp
std
ja
loope
or
sbb
int
sub
test
mov
test
push
test
jbe
(bad)
sahf
cld
adc
mov
sbb
repz
lea
lods
sub
call
imul
cli
xor
ficom
hlt
repnz
pop
cmp
lds
sahf
push
jmp
cmp
mov
test
adc
popa
mov
push
ret
and
jge
sbb
imul
es
adc
mov
repnz
es
mov
push
ret
(bad)
sub
pop
cmp
xchg
or
je
mov
outs
push
loopne
test
adc
jnp
sbb
loop
arpl
test
cmps
jmp
int
(bad)
popf
and
test
add
fs
fmul
push
out
mov
ss
or
aaa
jmp
das
(bad)
(bad)
(bad)
cmps
mov
xchg
cmp
mov
jnp
out
nop
and
aas
out
fistp
icebp
cmp
sub
push
shl
cs
and
test
cmp
add
and
xchg
sti
ja
icebp
add
jecxz
mov
cmp
mov
stos
hlt
inc
pushf
call
das
in
push
sub
std
dec
push
mov
or
fild
pop
pop
(bad)
cdq
aam
mov
fldcw
push
clc
(bad)
es
lods
in
jecxz
sub
cmp
sahf
push
ins
inc
lea
shl
hlt
sahf
pop
xor
sub
mov
scas
adc
cmp
fwait
movs
retf
stos
retf
std
or
cmp
(bad)
out
lods
dec
add
xor
xor
push
pop
and
and
mov
dec
sbb
in
imul
scas
movs
sub
jbe
mov
jo
test
xor
sar
outs
push
fbld
in
jbe
aad
dec
aam
mov
scas
movs
dec
cmps
adc
sar
add
outs
sar
push
(bad)
jae
jecxz
jns
xchg
xchg
pop
mov
cli
cmps
jg
sar
pop
test
stos
test
push
jns
xchg
outs
(bad)
movs
scas
jecxz
not
ret
outs
mov
daa
ret
sar
mov
mov
inc
daa
bswap
mov
mov
jp
add
lock
cmps
ins
xlat
mov
test
leave
sub
dec
pop
xchg
mov
mov
ret
pop
outs
js
rol
(bad)
(bad)
or
aam
call
sub
shl
add
xchg
pop
ror
adc
inc
jb
push
arpl
xor
ins
(bad)
ret
jno
(bad)
and
cmp
aaa
and
or
mov
repnz
pop
adc
rcr
mov
(bad)
rol
sbb
jno
mov
push
aad
lods
(bad)
movs
(bad)
cmp
mov
loopne
ret
xor
push
sbb
inc
cmp
xchg
inc
pop
adc
mov
fistp
(bad)
loopne
push
cmp
int3
cli
jmp
mov
dec
mov
adc
mov
fild
xchg
push
mov
test
sub
push
cmps
adc
div
int
call
ror
mov
outs
push
cmps
pusha
inc
outs
movs
call
icebp
fdivr
fwait
setns
push
mov
xchg
xchg
imul
nop
xchg
loopne
into
push
hlt
jecxz
push
call
rcr
jbe
clc
test
dec
in
retf
je
mov
scas
into
into
inc
mov
push
call
xchg
fist
movs
call
shl
and
fldcw
mov
inc
stc
xor
cmp
xor
sbb
fdivrp
pop
sti
mov
fidivr
and
push
inc
push
xor
shl
call
ds
inc
mov
and
mov
xchg
das
call
into
mov
pop
mov
adc
loope
sbb
dec
stc
(bad)
sti
rcr
lea
cmp
cmp
into
xchg
jp
cmps
and
push
xor
push
push
stos
shr
rcr
add
cmc
jecxz
dec
cmp
jle
inc
aad
mov
sahf
jmp
sahf
pop
push
inc
leave
cmp
adc
arpl
cs
mov
jno
dec
out
movs
inc
ins
out
dec
add
jl
inc
out
stc
push
mov
adc
push
sbb
inc
mov
adc
mov
add
sub
fs
and
sub
mov
out
mov
adc
outs
pop
add
retf
int3
xchg
dec
data16
shl
cmp
dec
mov
repnz
aas
jnp
fldl2t
aaa
fisub
jge
ret
xor
in
push
add
out
sahf
mov
or
mov
aaa
add
pop
jmp
cmp
and
fstp
add
sub
adc
mov
inc
mov
or
dec
stos
xor
add
fs
gs
and
jecxz
pop
and
hlt
jmp
(bad)
das
jmp
cmc
std
jbe
in
mov
pop
das
loope
jbe
mov
xchg
mov
or
jmp
jbe
pop
push
dec
mov
add
jb
mov
into
xchg
pop
cmc
dec
xchg
scas
cmp
jbe
jo
lods
int
dec
inc
out
mov
(bad)
mov
sub
lds
in
mov
sbb
in
fldenv
jo
xchg
add
fisttp
outs
les
fistp
ins
movs
out
pop
ins
lahf
stos
xor
aaa
test
dec
call
pop
jmp
adc
pop
test
mov
cs
loopne
mov
aam
sub
repnz
adc
jl
dec
pop
push
cmp
int3
push
ins
mov
jle
in
icebp
(bad)
mov
and
xchg
inc
mov
jge
bound
push
and
movs
inc
pop
test
mov
xchg
pop
or
retf
pop
out
dec
in
push
cmp
inc
or
in
into
sbb
push
in
mov
ins
lds
jae
inc
and
jns
pop
cli
lea
mov
mov
pop
and
jmp
aas
pop
outs
push
xor
adc
sar
xor
mov
sub
or
pop
xchg
stc
sbb
neg
adc
or
sbb
repnz
cmp
icebp
adc
jo
xchg
sbb
add
xor
ror
push
imul
or
mov
adc
iret
dec
aam
(bad)
hlt
jae
sti
xor
and
retf
mov
fucomp
imul
test
add
mov
push
sub
push
lahf
sub
or
xor
test
or
mov
pop
adc
nop
jp
push
push
jae
lods
ja
or
jge
jae
sub
mov
jmp
iret
xchg
sar
(bad)
adc
jge
fnstenv
ffreep
adc
sbb
push
call
ffreep
xlat
scas
dec
inc
sub
cmp
mov
jge
std
adc
outs
xor
mov
push
test
adc
stos
jnp
pop
ins
sbb
es
add
nop
mov
clc
add
into
pop
dec
cmps
not
mov
and
mov
sub
and
fdivr
and
sub
inc
and
push
pop
lods
data16
pop
inc
loop
jecxz
int3
out
inc
push
push
cmp
push
xchg
jle
jecxz
mov
inc
fisubr
jo
movs
outs
inc
inc
dec
dec
xchg
(bad)
dec
push
and
push
and
and
aaa
dec
test
int
outs
neg
xor
push
sub
sub
dec
xchg
movs
cmp
jmp
mov
pushf
test
ds
push
mov
ja
mov
into
loopne
leave
retf
inc
inc
push
lods
push
ret
int3
push
mov
retf
aas
jle
ins
repz
retf
iret
daa
push
jbe
jo
hlt
sbb
sub
lahf
push
inc
mov
and
jge
repz
cmps
dec
add
imul
sahf
mov
and
ja
mov
and
mov
scas
sub
sub
jp
daa
test
cmp
arpl
cdq
in
(bad)
stc
mov
and
and
jmp
jb
adc
cs
or
imul
dec
or
icebp
(bad)
cmp
out
inc
es
(bad)
jnp
sahf
mov
iret
push
pop
jo
dec
mov
push
scas
dec
rcr
cmps
int
jmp
imul
xchg
xor
pop
and
jb
mov
add
cmc
aam
call
push
mov
push
aad
data16
lods
mov
jmp
sar
shl
les
dec
mov
xor
scas
fisubr
stos
push
fwait
ins
aas
out
outs
inc
scas
ror
rol
inc
arpl
ret
iret
inc
movs
(bad)
or
int3
lods
inc
es
inc
pop
lods
mov
add
aad
sbb
loopne
push
dec
mov
sub
sar
push
aad
in
push
mov
add
cdq
out
aam
inc
mov
and
push
dec
push
jnp
gs
jg
cmp
xor
scas
push
dec
outs
stos
cmps
fstp
pop
cmp
xchg
clc
xchg
lods
mov
push
bnd
test
jl
es
lea
adc
lea
sub
mov
push
ror
call
imul
jle
out
and
mul
jge
dec
xlat
ins
popf
std
enter
jge
test
cmp
fcomp
(bad)
dec
fimul
push
push
pop
push
push
jmp
push
loope
icebp
test
(bad)
arpl
jno
xchg
add
or
mov
pop
rcr
mov
xchg
shr
push
pop
shl
mov
mov
addr16
(bad)
mov
in
mov
js
mov
sbb
jo
in
inc
addr16
movs
cli
ja
loopne
xor
aam
and
(bad)
in
movs
lods
push
or
xor
xchg
push
hlt
push
sub
stos
scas
scas
add
mov
retf
sub
cmp
in
add
jp
pop
fist
or
(bad)
adc
mov
(bad)
mov
push
inc
pop
xor
cmp
mov
xchg
inc
dec
dec
pusha
sbb
xlat
adc
cli
fsub
aad
push
mov
or
lods
(bad)
jmp
pusha
pop
dec
ret
(bad)
repz
sti
xor
sub
jecxz
jnp
pop
and
mov
or
dec
adc
sub
lds
cdq
xchg
out
dec
jno
xlat
ret
adc
popf
jg
movs
mov
(bad)
mov
push
or
sbb
es
call
push
mov
aad
pop
mov
jp
ins
repnz
xchg
sbb
pop
xor
pusha
add
inc
dec
mov
sbb
and
inc
push
mov
push
fnstcw
call
shl
and
xchg
inc
ja
inc
jmp
fldpi
cld
jmp
loope
sti
cmps
leave
stos
fiadd
xlat
and
jl
jmp
lock
test
fist
inc
popf
outs
mov
outs
(bad)
stc
int3
sbb
mov
mov
pop
push
cmps
or
in
loop
cmp
add
cli
add
sbb
fsubr
hlt
jb
fimul
mov
and
aas
pop
sbb
pop
shr
xlat
mov
call
imul
inc
sub
and
sbb
test
call
and
mov
(bad)
cmps
cmp
sar
outs
mov
xor
add
adc
das
pop
pop
jl
add
xchg
or
sub
(bad)
push
pop
sub
or
outs
jo
xchg
adc
out
push
xlat
ja
bound
pop
sbb
cdq
lods
addr16
movs
repz
in
mov
(bad)
aaa
jae
pop
cmc
adc
push
into
xchg
jns
jmp
push
out
into
mov
jne
shl
mov
jge
push
pushf
aad
jl
stc
add
and
sar
rcr
movs
cmp
cdq
(bad)
fiadd
std
and
dec
imul
mov
mov
pushf
pop
pop
bound
adc
jns
sbb
pop
adc
cs
loop
add
addr16
mov
(bad)
retf
jne
cmps
data16
push
lds
jns
mov
mov
mov
mov
cmp
and
in
cmps
jge
test
jb
adc
gs
cmps
jmp
clc
xchg
(bad)
outs
and
and
mov
mov
iret
pop
cdq
jp
addr16
pop
dec
test
mov
sti
das
xchg
in
movs
jbe
data16
push
dec
out
cmc
and
pop
jmp
movs
cli
ror
cmp
std
cdq
sahf
push
sti
dec
repnz
scas
adc
scas
push
shl
fs
push
addr16
pop
dec
test
(bad)
mov
pop
mov
(bad)
xchg
out
xchg
sub
je
dec
adc
push
sbb
(bad)
ins
pop
sub
cmp
pusha
push
retf
dec
loopne
adc
sbb
fistp
mov
(bad)
cdq
adc
push
sbb
pushf
push
inc
cmc
sbb
in
inc
stos
jge
inc
lahf
les
add
imul
push
adc
rol
sbb
jl
inc
outs
sub
addr16
out
lods
repnz
popf
push
xor
outs
sub
outs
pop
jge
xchg
inc
fidivr
add
pusha
or
push
mov
sar
push
daa
sbb
jge
hlt
sub
popw
dec
inc
loope
mov
xor
cmp
in
jne
shr
out
cwde
add
xchg
gs
and
cwde
data16
mov
lods
push
imul
mov
xchg
adc
and
cmps
fldenv
dec
int
ja
pmulhw
stc
pop
mov
jbe
imul
dec
push
xchg
jno
or
lea
popf
mov
cmp
cmp
adc
enter
jmp
xor
sti
push
jl
cdq
jae
stos
push
dec
shr
stc
sub
aas
xor
jg
call
pop
add
ja
jg
adc
and
mov
vpmuludq
pop
dec
inc
movs
jno
inc
mov
add
aaa
ret
lods
mov
jmp
or
out
xchg
cli
cwde
pop
and
and
fimul
mov
push
adc
out
xchg
sbb
clc
cmp
and
or
std
ror
aam
ins
leave
ss
jle
mov
jle
aas
sbb
sbb
mov
adc
loope
inc
lock
adc
scas
or
jns
sbb
ror
cmp
fwait
mov
and
stc
int
aam
mov
push
loopne
xchg
cs
stos
mov
add
gs
xchg
aas
not
push
loopne
mov
push
fisttp
push
mov
xchg
cs
dec
pop
aam
and
xlat
xchg
popa
nop
popf
lahf
mov
or
xchg
push
ret
xor
icebp
ret
push
aaa
jno
xchg
mov
gs
jae
mov
or
(bad)
xchg
add
cld
push
mov
dec
add
in
dec
pop
iret
or
sub
xor
rcl
sti
adc
cmps
pop
push
inc
xor
mov
adc
mov
dec
dec
js
inc
fistp
les
dec
cmpps
cmp
in
pop
push
mov
sahf
inc
aam
mov
mov
pop
int
ds
sub
movs
jb
rol
add
add
aaa
jecxz
dec
sbb
push
mov
and
sbb
inc
and
sbb
and
inc
adc
enter
xchg
mov
cmp
fstp
test
sbb
mov
aas
or
es
lock
je
sbb
daa
pop
test
cmps
outs
in
jbe
in
mov
xchg
jo
arpl
stc
sub
not
mov
sbb
inc
push
(bad)
psubsw
cmc
jb
xor
lds
jno
push
push
ret
sub
clc
movs
and
xchg
push
adc
xchg
rcl
jns
rol
bound
rol
arpl
jge
test
mov
add
ja
xchg
push
mov
es
lea
and
test
loope
jl
inc
add
mov
adc
outs
xchg
cmp
lods
ret
pop
js
les
jle
inc
test
sub
pop
outs
push
addr16
xor
dec
sub
xchg
(bad)
adc
aam
ja
imul
jmp
int
out
mov
out
mov
sub
aas
push
test
add
adc
das
popa
sbb
push
(bad)
rol
push
cmc
loop
xchg
mov
xor
dec
inc
adc
xlat
add
jbe
imul
popf
jnp
mov
push
fimul
lock
mov
mov
rcl
jp
lock
mov
cld
dec
out
push
inc
pop
movs
movs
inc
jne
mov
jo
mov
mov
xchg
cmps
rcl
adc
fcmovnbe
push
mov
rol
inc
movs
es
test
inc
cmps
pop
push
leave
mov
xchg
(bad)
int3
pop
jns
hlt
push
lahf
jp
jne
jl
mov
movs
mov
movs
mov
cmp
inc
add
and
ins
pop
outs
(bad)
push
push
fistp
sbb
pop
(bad)
mov
shr
sahf
movs
inc
pop
in
nop
daa
das
pop
sbb
sbb
mov
out
and
jle
sub
adc
push
gs
inc
les
aam
cmp
mov
pop
pushf
out
test
outs
scas
xchg
mov
push
(bad)
push
jae
ja
pop
xchg
sbb
dec
shl
iret
sub
cdq
cmps
dec
popa
inc
jb
fnop
repnz
adc
pop
inc
sbb
dec
mov
es
pop
adc
in
fs
cmp
push
jbe
inc
jae
out
(bad)
div
loop
mov
push
fs
arpl
add
xchg
ss
adc
cmps
rol
outs
xor
inc
xor
pop
sub
sub
mov
xlat
dec
fadd
jg
jecxz
cmp
dec
mov
fcmovbe
xor
test
aam
xchg
lods
aad
and
dec
push
cmp
lods
imul
addr16
add
pop
dec
rol
push
call
sbb
adc
mov
(bad)
jecxz
pop
js
call
push
adc
scas
mov
mov
bound
xor
mov
jle
inc
pop
xor
pop
add
imul
cs
mov
adc
fsubr
sbb
ja
cs
aad
mov
cs
push
push
test
mov
xor
cmp
jno
jno
imul
das
dec
ja
aas
loop
or
test
adc
out
mov
mov
loope
sub
repz
xchg
or
data16
adc
adc
ret
or
sbb
hlt
mov
mov
call
push
mov
and
jns
xchg
daa
ret
movs
arpl
push
int3
ins
mov
out
ins
add
xor
stos
fild
movs
aam
mov
inc
sbb
adc
fnstcw
mov
jmp
and
cwde
jns
inc
out
push
or
cmp
and
add
sbb
or
es
cmp
cmp
out
xor
call
xchg
cmp
pop
das
cmc
mov
xchg
lods
cmp
mov
aaa
ret
lea
nop
sub
mov
cmp
push
jl
inc
push
push
in
push
rcl
imul
dec
ins
mov
test
loop
int3
lock
(bad)
mov
in
fidivr
hlt
fild
jmp
aaa
outs
(bad)
sar
fwait
xor
push
jbe
mov
push
fiadd
sbb
lds
xchg
dec
and
adc
adc
inc
sar
cdq
(bad)
call
ins
stos
out
sub
cdq
div
jae
enter
leave
psubw
mov
inc
fstp
xchg
ret
dec
xchg
(bad)
bound
sar
push
scas
call
adc
fild
aas
xchg
inc
fiadd
jg
(bad)
mov
inc
in
(bad)
mov
jmp
or
push
jp
dec
sti
popa
mov
mov
mov
lods
iret
lahf
neg
lds
ret
mov
pop
sub
js
or
jmp
cwde
pop
jmp
sub
loope
(bad)
iret
imul
mov
pusha
adc
arpl
outs
cmp
cs
mov
adc
aad
leave
scas
sub
mov
jp
inc
xchg
jg
mov
mov
pop
jmp
mov
or
dec
add
sub
adc
pop
cmc
test
test
xchg
call
aad
cld
icebp
xor
idiv
fcomp
inc
or
jg
mov
icebp
xor
mov
mov
mov
jne
xchg
push
shr
aas
icebp
or
call
mov
scas
fwait
jge
sti
pop
mov
pop
push
lods
rol
clc
inc
add
stos
push
xchg
add
xchg
jo
dec
push
inc
dec
stos
dec
push
xchg
lock
add
popa
xor
ins
(bad)
sub
stc
add
sub
rcr
cmp
shl
cmp
sub
cwde
jnp
out
js
push
pop
xchg
add
mov
hlt
jle
mov
repnz
xlat
push
lods
pop
sbb
fdivr
shl
jno
test
inc
sbb
adc
mov
xlat
cmps
inc
add
pop
sbb
fdiv
out
test
js
sub
mov
inc
mov
cdq
adc
xchg
ret
or
out
cmp
retf
gs
xlat
xchg
mov
out
xor
imul
sbb
icebp
dec
or
cmp
sub
pop
aaa
cmp
cmps
clc
add
in
dec
push
mov
pop
daa
jl
rol
jne
mov
or
dec
je
out
xchg
jl
fwait
call
jno
xchg
cmps
jno
dec
dec
push
call
addr16
pusha
adc
call
fiadd
sar
aam
cmc
dec
pop
jnp
push
retf
test
lahf
push
xchg
aaa
sbb
add
icebp
pop
inc
dec
in
jnp
pop
jo
imul
add
mov
repz
sti
jb
push
or
ins
je
inc
pop
test
int3
dec
xor
xor
lea
xor
dec
bound
pop
jns
(bad)
xchg
(bad)
push
xor
out
scas
mov
adc
pop
icebp
jo
adc
scas
mov
dec
xor
cmps
mov
mov
lahf
fnstenv
out
jnp
(bad)
sbb
xor
popa
cmp
fcmovu
cmp
mov
pop
add
out
cmps
ror
shl
and
lea
stos
ja
sar
outs
adc
ds
xor
jge
fsub
xchg
iret
add
mov
inc
cmp
mov
cmp
(bad)
push
jno
or
ret
loop
std
imul
cmc
ins
pop
dec
jbe
inc
cmp
jb
inc
pop
pop
pop
loope
retf
cmp
inc
jecxz
cmp
scas
mov
xor
add
jnp
push
and
mov
call
xor
jne
push
int
imul
js
loop
push
push
mov
adc
popa
cmp
in
mov
mov
and
cwde
daa
inc
mov
test
loop
push
jmp
stos
push
cmps
jle
pusha
jns
(bad)
push
adc
inc
pop
(bad)
dec
aad
xor
mov
or
pop
cdq
adc
or
(bad)
jmp
jns
push
retf
add
mov
shr
addr16
inc
mov
loopne
xchg
inc
clc
out
fmul
ret
sub
cwde
mov
xor
mov
rcl
(bad)
test
or
ror
and
jbe
or
ins
mov
cdq
scas
pusha
xchg
sbb
push
jbe
sbb
pop
jl
sbb
add
div
add
sub
ret
push
loop
lea
fidivr
sbb
mov
cmp
or
mov
xchg
pop
iret
cmp
cmp
push
mov
mov
mov
adc
neg
jno
or
or
cmp
arpl
shl
jmp
jbe
adc
fisttp
out
and
pop
shl
jo
or
stos
imul
call
push
retf
sti
ins
cmc
or
jne
pop
mov
pop
lea
xchg
pop
pushf
mov
out
bound
mov
push
xchg
mov
adc
xchg
xchg
leave
push
sub
test
sar
mov
(bad)
lds
jmp
or
push
dec
(bad)
iret
leave
fs
pop
push
sbb
mov
xor
retf
pop
cmp
sub
cwde
iret
sub
and
scas
xchg
inc
scas
popf
adc
lods
lods
jno
test
adc
(bad)
cmp
pusha
ret
fwait
sub
mov
pop
int3
call
outs
test
jle
cld
hlt
cmps
in
mov
sbb
inc
pop
push
fistp
or
mov
fs
or
into
pop
fst
mov
rcl
mov
fsubr
cmp
add
call
inc
in
adc
and
or
mov
push
xor
mov
mov
jle
sub
dec
and
push
int3
push
xor
inc
or
inc
sub
adc
xchg
xchg
push
jp
lea
sar
mov
pop
push
fwait
cmp
imul
mov
icebp
sbb
or
hlt
jmp
nop
add
fucomip
stc
or
mov
pop
js
retf
push
and
cmp
popf
xlat
outs
mov
xlat
call
jne
pop
jb
or
add
pop
cmp
ja
or
aas
addr16
and
xor
(bad)
jp
mov
mov
dec
add
aam
or
in
rcl
inc
or
sbb
das
mov
pop
arpl
push
hlt
data16
xchg
scas
adc
gs
repnz
out
xor
scas
int
int
xchg
ret
add
ss
and
scas
pop
or
loope
adc
icebp
in
scas
xchg
iret
fs
mov
mov
gs
loope
inc
leave
sbb
and
aaa
ins
push
retf
adc
inc
xchg
and
lea
jno
mov
sbb
rcr
jg
push
dec
inc
(bad)
jl
stos
jl
movs
adc
xchg
inc
mov
dec
xchg
jo
pop
stos
daa
iret
jg
lds
or
arpl
ds
jl
call
pusha
sbb
stos
shl
inc
push
iret
cwde
hlt
repz
clc
cmc
cwde
cmps
add
leave
add
imul
mov
dec
jle
iret
idiv
mov
cld
data16
cwde
sub
adc
mov
push
mov
fcmovbe
std
ins
cmp
lahf
sbb
cmp
(bad)
fld
cs
retf
iret
mov
aad
push
ret
int3
or
(bad)
pop
and
mov
mov
loope
ss
push
dec
add
int3
outs
dec
loopne
ret
sbb
cwde
mov
ds
jnp
lds
and
mov
(bad)
and
cmp
add
aad
mov
mov
jg
inc
lds
inc
jmp
jne
or
ret
push
lods
xor
xchg
fist
cmp
sub
xchg
dec
pop
cld
hlt
mov
xchg
adc
dec
dec
inc
pushf
mov
fcmovne
int3
add
adc
xchg
not
aad
sub
sti
dec
and
inc
fnsave
sub
int
jmp
in
(bad)
jno
xor
out
cdq
sbb
push
adc
sub
xchg
popf
sbb
dec
clc
pop
fstp
inc
add
es
jb
ins
loope
(bad)
scas
sbb
mov
retf
mov
shl
(bad)
fimul
fdiv
inc
pop
or
mov
push
fst
jl
cmps
inc
test
stc
jp
mov
jo
sbb
sahf
outs
je
nop
sahf
inc
imul
into
(bad)
xor
inc
movs
xor
repz
add
sub
rcr
sbb
mov
std
push
sti
sub
adc
les
jmp
mov
dec
and
aas
inc
or
cdq
sbb
mov
inc
xor
stc
jns
fsub
shl
xchg
inc
out
stc
mov
les
in
icebp
mov
imul
xor
in
jmp
jbe
jnp
in
imul
sub
hlt
int
test
xchg
dec
cmp
xor
adc
xchg
cwde
adc
sar
xchg
nop
int3
mov
dec
out
fcomp
jmp
xlat
fild
jae
adc
xchg
or
fs
push
mov
or
out
scas
xchg
test
daa
mov
xchg
int
sbb
dec
mov
pop
aad
adc
mov
mov
xchg
mov
dec
push
mov
mov
mov
xor
pop
cmp
std
xchg
xor
add
sub
fcmovne
outs
add
push
lds
push
test
sub
push
add
add
popf
popa
fidivr
dec
daa
jb
xchg
mov
(bad)
cmp
xchg
xchg
mov
sbb
pop
jae
push
mov
and
mov
test
mov
adc
push
test
jmp
ret
inc
pop
xchg
dec
lods
xchg
jb
and
aad
scas
into
lahf
mov
pop
imul
cmps
aas
pop
popa
mov
test
cmc
dec
jmp
retf
mov
mov
cmp
mov
sbb
dec
hlt
(bad)
test
int
loopne
add
pusha
jmp
pop
das
jae
sub
cmp
jno
add
mov
je
ins
jo
ja
hlt
push
xchg
xchg
jne
pop
cld
loopne
data16
sbb
gs
xor
les
test
inc
sub
or
lds
aaa
stos
cmps
cmc
jno
lock
in
mov
adc
pop
mov
(bad)
xor
xor
or
inc
and
test
fistp
push
mov
rcl
pop
jmp
dec
mov
hlt
xor
xor
lods
xchg
aad
sbb
loopne
(bad)
mov
loope
inc
mov
mov
fst
or
pop
(bad)
je
sbb
dec
push
cmp
and
ja
aam
adc
fiadd
or
popf
sub
ja
jle
sahf
arpl
je
add
jecxz
out
int
ret
pop
das
adc
sahf
cs
lock
cmc
in
push
cmp
push
pop
ja
(bad)
mov
cmp
push
sub
pusha
sub
sbb
xor
cmp
adc
add
inc
jmp
ds
test
mov
or
add
jns
enter
xor
int
add
dec
or
(bad)
imul
push
jge
xchg
cli
mov
loope
pop
add
xlat
arpl
adc
lahf
fidiv
inc
aas
jb
in
add
dec
int
pinsrw
sub
mov
call
sub
loope
cmc
add
jbe
repz
lds
lods
movs
inc
(bad)
pop
cs
and
mov
dec
mov
mov
and
aaa
or
mov
inc
or
cmp
push
inc
mov
pop
xor
push
sub
push
int
or
call
imul
dec
sub
in
dec
sbb
je
pusha
sahf
jp
out
mov
in
std
mov
and
fldenv
pop
or
in
pop
data16
push
add
aaa
fwait
adc
sub
les
sub
xor
xor
loope
sahf
jle
xchg
das
mov
icebp
ds
(bad)
mov
cwde
xor
jge
mov
add
(bad)
and
mov
jb
cmps
outs
mov
mov
xchg
pusha
jecxz
out
mov
scas
push
mov
xchg
shl
and
inc
outs
fcom
or
or
pop
test
je
pop
nop
or
xor
fsub
adc
inc
test
popf
pop
pop
aaa
jne
xor
mov
jmp
shl
and
xchg
xor
mov
xchg
inc
pop
and
cmp
and
or
daa
mov
jmp
mov
fist
call
cli
fs
adc
pop
addr16
cld
pop
sbb
cmc
ins
and
or
pusha
pop
jne
pop
mov
(bad)
push
push
push
inc
pop
test
mov
rol
loope
cdq
add
or
adc
dec
push
jo
xlat
jl
ror
adc
cli
call
test
mov
fdiv
lds
pushf
xor
xchg
shl
mov
push
inc
mov
aas
mov
pop
outs
jge
sbb
neg
add
hlt
stos
pusha
and
pop
jo
xor
push
mov
xchg
push
adc
js
xchg
clc
ror
push
aad
push
xchg
xor
outs
fwait
loopne
cs
mov
das
mov
sub
in
pop
sar
sar
or
scas
int3
push
jnp
or
stc
xor
popa
ja
pop
aas
fimul
call
xor
cmp
and
shl
fst
std
or
je
popa
xlat
mov
pop
loope
sub
pusha
mov
push
(bad)
ins
les
idiv
jecxz
loopne
fstp
lea
pusha
xchg
int3
jbe
sbb
adc
scas
pop
addr16
daa
inc
ins
addr16
and
xor
(bad)
sub
test
lahf
add
mov
xor
sbb
fstp
sub
mov
shl
mov
gs
sub
arpl
adc
ins
xor
xor
in
mov
mov
or
daa
sub
pop
push
or
mov
or
daa
cmps
daa
movs
adc
add
data16
adc
mov
inc
ins
cmc
dec
push
in
bound
stos
sub
xchg
ins
and
imul
arpl
mov
inc
daa
pop
xor
cmps
dec
jmp
cmps
push
les
shl
aaa
setnp
mov
pop
xchg
mov
pop
cmps
jne
cli
adc
pop
xchg
inc
ret
fs
data16
cli
lea
adc
pop
jp
das
jge
repz
fcom
sub
jne
retf
sbb
(bad)
ins
and
fidivr
(bad)
adc
mov
inc
ror
mov
sbb
sub
xchg
aad
inc
aas
dec
sti
mov
call
int3
icebp
cdq
test
ss
pop
cwde
mov
adc
and
or
dec
retf
push
push
nop
jecxz
cld
(bad)
repnz
stos
mov
mov
and
jbe
mov
(bad)
gs
js
xor
hlt
xchg
adc
outs
mov
into
mov
mov
leave
out
(bad)
shr
popa
inc
daa
mov
les
add
adc
into
adc
jge
add
mov
stos
retf
in
cli
mov
inc
out
fwait
or
ds
push
jl
fbld
xor
leave
push
mov
aam
cmp
sbb
std
icebp
out
inc
data16
sbb
push
ror
stos
add
mov
das
and
popf
stos
lds
gs
add
js
cdq
lea
pop
sbb
inc
ficom
sub
jle
mov
mov
lods
bound
cmp
pop
jecxz
(bad)
mov
push
(bad)
xchg
and
sub
enter
push
inc
mov
cmp
ret
pushf
data16
fsubrp
retf
stos
pminub
mov
(bad)
movs
mov
pop
push
mov
pop
rcl
popf
push
shl
sbb
jns
imul
test
test
or
jecxz
ins
cmp
cmps
pop
std
fwait
les
int3
sub
out
loopne
ins
js
xor
pop
adc
push
aad
add
popa
imul
adc
jmp
aam
adc
es
pop
xchg
jnp
xchg
aas
outs
add
pop
and
cld
jmp
sbb
mov
retf
(bad)
ss
daa
enter
push
mov
dec
inc
mov
cdq
aad
jbe
jmp
pop
adc
jmp
pushf
mov
adc
xchg
dec
popf
sti
test
loope
pop
fbstp
jecxz
mov
mov
das
dec
push
pop
addr16
mov
and
inc
push
dec
dec
mov
sbb
jmp
mov
mov
(bad)
int3
pop
cmp
ret
and
jp
mov
inc
push
mov
pop
mov
cli
(bad)
fld
dec
add
dec
sahf
mov
xor
fld
cli
jnp
jb
stos
sbb
retf
hlt
and
jmp
inc
mov
aas
mov
fbld
dec
mov
ror
jmp
push
repz
cmps
out
cmps
mov
adc
add
xlat
outs
and
and
sub
adc
sub
xchg
jle
push
outs
test
pop
jb
cdq
(bad)
mov
lea
dec
mov
sub
inc
ficom
ror
adc
inc
out
jmp
pop
pop
xchg
push
inc
mov
hlt
mov
loope
jmp
xor
sub
sbb
add
add
bound
and
test
xor
dec
add
and
jnp
lds
repnz
(bad)
mov
push
mov
clc
and
ins
pop
hlt
mov
mov
mov
ins
pop
stos
inc
gs
sbb
mov
add
cli
dec
arpl
xor
inc
jo
ficomp
adc
cli
sbb
and
(bad)
lods
cli
mov
cmp
mov
add
xchg
sbb
aaa
push
and
dec
(bad)
and
sub
mov
sbb
xchg
or
dec
inc
jg
rcr
into
sar
rcl
aam
(bad)
cmp
mov
add
mov
lods
adc
out
jp
push
or
and
adc
shl
jmp
cmp
push
sub
jb
jl
in
retf
adc
mov
xchg
(bad)
xchg
pop
sbb
fwait
cmp
fsub
mov
xor
sbb
fldenv
jmp
fst
(bad)
sti
xchg
sbb
push
int
sbb
mov
jg
push
inc
push
or
push
adc
popa
mov
scas
pushf
pop
push
and
xchg
and
push
and
xchg
lds
fcomp
fstp
call
sbb
mov
lods
test
adc
mov
test
dec
pop
and
cmp
jle
cmp
repz
icebp
pop
int3
mov
in
cld
sub
js
out
mov
add
jo
cmp
xor
(bad)
fwait
jmp
jo
mov
ins
adc
fistp
xchg
or
sbb
xchg
pop
push
pop
mov
adc
inc
mov
(bad)
or
xchg
add
mov
push
mov
sub
rcr
jmp
mov
add
and
inc
sub
inc
jne
cmc
retf
pop
outs
les
cmp
bnd
rcr
push
fist
sbb
popa
dec
fsub
(bad)
sbb
fisub
jns
jg
jmp
inc
into
ins
mov
aad
xor
adc
mov
stos
cwde
cmp
mov
mov
stc
movs
ss
pop
jmp
xor
stc
or
jp
mov
jp
popa
jl
retf
dec
jg
cmp
cmp
test
jle
cmc
pop
sub
leave
int3
and
bound
add
jle
xor
pop
jmp
sub
sub
out
xor
mov
(bad)
mov
leave
jb
fcomp
and
jle
fmul
retf
xchg
or
popf
jnp
cmp
or
mov
cdq
pop
sbb
fisub
test
xchg
add
lock
cli
push
mov
fnstsw
xor
mov
rcl
mov
loope
outs
xchg
xor
out
add
mov
jbe
add
jb
inc
loop
fstp
jns
test
adc
adc
mov
call
outs
mov
inc
in
in
jg
stos
xor
sub
jecxz
mov
mov
and
ret
mov
mov
push
sub
js
xchg
push
(bad)
mov
cwde
stos
mov
jp
sti
mul
push
scas
jb
call
daa
cmps
test
leave
loop
cmps
sbb
daa
and
mov
iret
add
add
xchg
loop
cmp
lock
cwde
in
push
call
xor
push
daa
sbb
mov
dec
out
fsub
or
xchg
inc
(bad)
ret
fst
in
jecxz
popa
(bad)
jecxz
xchg
mov
in
imul
out
sub
mul
mov
inc
adc
and
cmps
dec
pop
mov
sub
out
and
inc
xchg
lahf
jge
and
mov
xchg
cmp
mov
inc
stos
pop
repz
(bad)
fidiv
pop
jge
out
mov
ins
mov
mov
xchg
fnstsw
cmp
cmp
xchg
mov
repnz
jb
push
jae
das
xchg
pop
sub
and
jl
sub
sbb
test
xchg
nop
mov
and
int
push
sbb
repnz
cmc
and
lock
iret
and
popf
and
cmp
jmp
mul
pop
and
call
xchg
push
mov
popa
cmc
mov
push
and
push
popf
mov
in
imul
fisttp
cld
call
clc
cmp
(bad)
mov
enter
mov
push
add
ja
cmp
push
cmp
jg
retf
(bad)
xchg
and
popf
fiadd
ds
or
pop
mov
jle
dec
add
push
push
jbe
adc
(bad)
(bad)
stos
(bad)
int3
or
mov
jecxz
inc
icebp
loopne
int3
pop
cmp
mov
sub
cwde
test
call
retf
ret
cdq
add
data16
je
mov
mov
push
dec
and
cmp
addr16
push
dec
xchg
shl
cmp
or
inc
aad
inc
test
jne
and
cmp
ja
add
stos
mov
ja
test
mul
add
les
pop
sub
movs
pop
cmp
icebp
mov
or
xchg
sub
push
clc
pop
lds
jbe
mov
dec
ins
mov
adc
cmp
idiv
test
mov
aad
and
push
mov
icebp
xchg
dec
in
push
add
int3
push
pop
push
mov
sar
xchg
cmps
push
push
fs
(bad)
popa
nop
mov
mov
jl
push
mov
dec
out
idiv
and
inc
adc
fcomp
ss
sar
mov
ja
cmp
movs
mov
add
cmps
add
mov
and
mov
enter
movs
aam
pop
and
push
cdq
jo
ins
push
pushf
cwde
inc
jns
sub
dec
pop
fcomi
xchg
mov
and
js
adc
repz
jno
loopne
inc
jns
cmp
cmps
(bad)
leave
pusha
test
ret
pop
mov
dec
mov
cmp
or
xchg
or
xchg
arpl
sahf
inc
cmp
scas
cmps
ins
in
ret
nop
jp
push
sahf
sbb
call
cmp
sub
dec
repnz
cmc
dec
loopne
stc
xchg
jmp
mov
mov
scas
cmp
or
dec
sbb
dec
push
loope
lea
sub
fadd
inc
mov
aam
adc
xchg
scas
jecxz
scas
jnp
mov
add
repnz
int3
mov
out
pop
mov
xchg
pop
lahf
pop
push
cli
movs
xor
jp
cmp
dec
loop
jmp
aaa
in
inc
jae
pushf
rcr
dec
cmps
xchg
push
mov
ss
movs
movs
and
cwde
push
and
jb
add
cs
out
retf
test
aad
ret
(bad)
push
adc
mov
movs
inc
cmc
xor
mov
outs
adc
imul
adc
dec
clc
out
sbb
sub
ins
cmp
fadd
outs
scas
bound
call
mov
sbb
xor
cli
jb
test
jne
int3
or
dec
into
cmc
and
dec
or
in
jo
and
pop
cmps
inc
mov
or
fidivr
cmp
test
and
imul
jne
in
adc
cld
mov
daa
pushf
mov
xor
fs
lock
dec
and
push
and
jne
xchg
adc
hlt
dec
or
and
sub
xchg
psubb
(bad)
loopne
mov
mov
es
add
inc
sub
stos
loopne
(bad)
into
xchg
cmp
retf
xor
pop
xor
(bad)
fwait
adc
hlt
adc
adc
inc
jmp
clc
fwait
mov
fst
and
call
sbb
pop
(bad)
mov
mov
or
jmp
mov
inc
cmp
and
push
sbb
xchg
mov
sub
push
rcl
sahf
fadd
jg
sub
lds
scas
dec
fsubr
and
mov
inc
mov
out
adc
mov
mov
inc
pop
xor
and
fst
cld
mov
jno
dec
or
xor
xchg
dec
sub
shr
aad
sub
jle
aad
push
cli
data16
es
pop
inc
push
adc
stos
push
test
pushf
push
mov
int3
or
popa
jb
push
outs
fsubr
inc
add
cmp
jno
add
xchg
jp
mov
movs
jmp
or
sbb
adc
(bad)
mov
cmp
add
in
lods
call
cmp
retf
sub
cli
xchg
aaa
jl
mov
cs
or
mov
xor
call
mov
pushf
mov
mov
movs
sbb
mov
test
or
jo
sub
mov
lds
ficomp
inc
adc
leave
mov
fdivr
add
data16
add
or
sti
cli
sahf
ins
out
test
stos
cmp
jle
dec
sti
xchg
sub
xchg
ret
call
dec
add
xlat
mov
ror
test
mov
loopne
sbb
inc
mov
sbb
mov
cli
inc
inc
xchg
loop
jle
movs
jle
sbb
in
in
cmp
add
movs
xchg
and
dec
or
xor
mov
loopne
ss
ds
jne
mov
das
mov
enter
mov
clc
jl
adc
out
sub
adc
test
dec
rcl
test
mov
push
xor
add
in
fadd
pop
lods
(bad)
cmps
imul
pusha
sbb
jmp
mov
push
inc
in
inc
sub
icebp
(bad)
cmp
imul
popa
outs
inc
inc
mov
int3
inc
cdq
inc
jle
retf
hlt
jb
rcl
jmp
pop
mov
jae
in
jmp
pop
inc
jle
dec
rol
xor
mov
jo
mov
ins
sbb
inc
pop
sub
adc
shl
inc
add
jecxz
sbb
sub
sbb
shl
dec
xor
sbb
(bad)
popa
mov
or
mov
pop
mov
std
push
and
dec
and
inc
sub
(bad)
jno
or
cmp
addr16
dec
inc
inc
cmps
sar
cmp
int
xchg
retf
push
or
mov
xchg
cmp
(bad)
dec
(bad)
call
lock
dec
lods
out
push
and
push
scas
sub
or
test
xchg
(bad)
xchg
in
cmp
pop
pop
mov
push
xor
shl
pop
and
clc
aaa
stos
ins
pop
popf
stos
inc
mov
mov
adc
or
std
fcom
mov
inc
test
cmp
sbb
add
inc
sub
inc
dec
lahf
push
std
aam
jg
inc
loopne
inc
call
lods
loop
jge
jge
adc
fincstp
jne
jo
and
mov
sbb
and
movs
or
inc
add
(bad)
cmps
mov
mov
(bad)
mov
shl
lahf
sbb
jle
popf
js
out
into
and
cwde
loop
call
ins
xchg
fdiv
test
loop
sbb
mov
mov
pop
inc
jge
retf
iret
ror
ds
shr
push
mov
sub
xor
jmp
stc
jg
loop
in
gs
imul
loopne
into
sbb
ins
sub
loopne
js
mov
sub
jecxz
bound
xchg
jle
pop
pusha
mov
xchg
cmp
push
push
pop
push
pop
out
lods
out
fisubr
jmp
push
(bad)
(bad)
xchg
pop
inc
outs
dec
dec
cwde
(bad)
imul
pop
pushf
mov
sahf
call
lods
xor
cmps
and
arpl
jno
mov
retf
and
or
xchg
push
test
mov
and
repnz
sub
out
leave
or
inc
mov
mov
ins
xchg
mov
push
jo
xchg
fsub
ins
push
and
and
test
push
pop
xlat
sub
lods
jg
fdivrp
push
pop
std
pop
lahf
cmc
sub
mov
or
push
cwde
jge
sbb
push
aas
xor
jns
pop
push
sbb
fdiv
inc
pusha
ss
sbb
call
sbb
push
pop
dec
rol
cmp
lds
mov
leave
and
cmps
test
inc
lods
ds
loop
mov
jmp
inc
and
mov
mov
jmp
lods
les
ret
cdq
sar
push
icebp
sub
pop
push
loope
nop
scas
inc
out
xchg
and
shl
jnp
shr
cli
repz
cmc
inc
mov
ja
out
mov
dec
(bad)
adc
jmp
ss
xchg
sbb
stos
rcr
shr
bound
mov
sub
lea
int
xor
ret
repz
fwait
jp
hlt
xor
cmps
jmp
xchg
adc
mov
ds
mov
push
loopne
push
test
cmp
inc
inc
mov
out
mov
adc
lods
aas
bound
cmps
mov
aas
test
aam
aam
stos
add
mov
stos
sub
iret
imul
add
jmp
xacquire
popf
es
sub
mov
xchg
enter
or
into
gs
mov
ds
mov
addr16
cmps
out
cmp
lock
cmps
push
test
jmp
in
enter
mov
cmp
test
push
cwde
mov
ret
inc
mov
pop
test
lock
pusha
out
pop
xor
xchg
test
movs
test
das
retf
call
cmp
cmp
or
js
jmp
loope
das
xchg
sub
out
xchg
or
test
pop
fimul
xchg
push
test
mov
jmp
mov
ja
inc
cmp
jae
cmp
repnz
out
call
test
mov
inc
push
bound
mov
inc
and
adc
clc
fstp
mov
imul
mov
in
add
pop
call
sub
dec
or
push
dec
adc
repnz
mov
leave
xor
push
mov
xor
push
jne
mov
adc
mov
mov
call
push
jmp
mov
repz
fld
sub
fs
jbe
mov
(bad)
enter
mov
or
xor
pop
jmp
mov
icebp
daa
pop
(bad)
(bad)
repnz
dec
mov
sub
adc
adc
jp
cmps
imul
cmc
aam
sbb
cwde
pop
pop
out
inc
hlt
pop
mov
xor
adc
cmp
ds
mov
inc
ficom
dec
dec
ins
inc
loop
jns
scas
dec
das
sub
imul
movs
retf
clc
lea
(bad)
jmp
std
cli
cs
mov
xlat
div
or
push
xchg
adc
xor
push
inc
mov
call
shl
jb
scas
sbb
test
push
xchg
cmp
mov
call
jo
inc
inc
sbb
pop
mov
push
lock
movs
leave
aam
and
shr
push
imul
aad
icebp
ret
fwait
cli
test
add
mov
jno
int
mov
nop
ja
retf
out
lods
sub
mov
adc
or
out
mov
pop
call
in
sub
cmp
lock
sub
xchg
or
sahf
fistp
mov
pop
push
test
add
xor
cmp
push
push
mov
ss
jmp
sbb
movs
push
push
inc
mov
leave
dec
lods
cli
push
popf
sbb
stos
xlat
ret
mov
in
or
dec
adc
nop
mov
cwde
lods
jle
jl
inc
call
push
rol
mov
mov
lahf
pushf
adc
mov
sar
imul
sbb
enter
sbb
dec
push
xor
(bad)
pop
or
or
imul
and
cld
mov
mov
scas
fiadd
retf
movs
dec
adc
in
xchg
shl
rcr
jge
push
les
neg
ds
in
inc
sbb
jmp
xor
movs
cli
lea
xchg
(bad)
imul
daa
sub
add
(bad)
cmp
imul
lahf
inc
cmp
fstp
jp
mov
call
aam
or
sbb
mov
(bad)
daa
sub
pop
ins
movs
cmp
dec
dec
pop
and
and
dec
jp
imul
retf
or
ja
ret
and
mov
sbb
xor
sbb
aam
cld
neg
fs
cdq
mov
int3
jp
pop
and
cld
icebp
stc
mov
je
xchg
jne
or
pop
(bad)
imul
(bad)
mov
pop
xor
(bad)
fld
dec
xchg
cmp
sahf
adc
arpl
int3
sub
shl
(bad)
sar
sbb
repz
sub
mov
mov
inc
ss
fs
(bad)
vpcmpeqw
inc
and
and
imul
lods
sahf
jge
nop
cmp
and
les
jl
loope
ins
js
and
rcl
ror
cmp
xor
and
shr
sbb
cld
clc
scas
mov
xor
aad
mov
ficomp
test
inc
ja
sti
(bad)
fld
jg
in
outs
imul
sub
jg
jae
xchg
mov
mov
movs
xchg
pop
test
pop
adc
(bad)
mov
xchg
aas
in
pop
lds
icebp
(bad)
daa
arpl
scas
dec
ret
xor
cwde
gs
aam
jno
call
nop
aad
rcr
out
fcom
mov
sar
pop
sub
adc
inc
jnp
xchg
cs
jg
into
inc
into
lods
gs
das
add
or
sub
mov
push
mov
mov
push
xor
sub
xor
loope
psubusw
pop
push
inc
pop
jp
lods
pop
lea
fdivrp
loope
icebp
mov
add
pop
add
xchg
test
jne
cmc
sub
(bad)
hlt
not
mov
push
mov
(bad)
dec
sbb
jbe
je
test
adc
dec
shl
jmp
rol
push
jmp
loopne
sub
fwait
jb
iret
out
dec
mov
dec
enter
jne
int
lods
lock
aad
mov
dec
inc
push
into
or
inc
inc
cld
mov
lods
ds
jo
jmp
and
inc
add
cmp
icebp
scas
mov
int
scas
fild
add
pop
out
int3
ret
jmp
push
out
data16
push
dec
imul
std
jne
jb
adc
retf
loopne
add
out
neg
arpl
fld
xchg
(bad)
les
cmp
sbb
jecxz
fidiv
xor
add
aas
jbe
iret
cmp
inc
ins
test
fistp
xchg
xchg
les
addr16
sbb
test
jno
ret
mov
movs
mov
retf
mov
fisubr
test
sub
scas
loope
and
into
and
inc
and
xor
jmp
in
add
mov
mov
jg
movs
lds
add
mov
enter
fldcw
mov
push
vphaddwq
ja
int
jmp
cmps
mov
sbb
sub
dec
jnp
xchg
ret
fsubr
scas
xchg
test
test
mov
ja
mov
popf
push
cld
or
pop
cmp
cmp
mov
mov
xchg
xor
xor
repz
or
(bad)
dec
jb
sub
or
(bad)
cli
jne
push
test
bound
scas
hlt
in
add
xchg
mov
scas
shl
mov
in
movs
pop
push
loopne
xchg
rcl
dec
jns
ror
push
and
mov
dec
imul
or
shl
xchg
xchg
jge
scas
push
inc
sub
xor
test
mov
es
rcl
out
pusha
jl
pop
daa
mov
repnz
mov
out
jno
mov
inc
pop
imul
sbb
or
sbb
(bad)
inc
or
mov
xor
jae
iret
test
cmp
mov
int3
jmp
(bad)
xor
int
jnp
push
int
icebp
push
xor
rcr
lahf
xor
xchg
mov
(bad)
jmp
add
push
sub
add
cmp
mov
and
cmps
adc
jb
sub
cmp
mov
mov
aam
dec
out
mov
jmp
mov
scas
jge
jbe
fsub
test
scas
hlt
xor
stc
out
pop
and
test
nop
push
or
imul
push
sbb
iret
in
xor
push
call
stos
inc
ror
or
jl
push
mov
pop
mov
popa
cmc
xchg
xor
scas
dec
ror
jp
push
retf
enter
sbb
sbb
sub
ror
adc
xchg
jne
mov
(bad)
sub
std
sub
dec
dec
xchg
ss
shr
in
sar
push
leave
dec
mov
sbb
adc
xor
sub
cmp
or
jecxz
inc
mov
ins
out
pop
dec
test
test
rcl
mov
repz
and
je
and
mov
cli
popa
shl
cmp
adc
inc
inc
out
std
sbb
scas
push
dec
mov
xlat
pop
aad
cmp
popa
mov
stos
out
xor
out
xchg
(bad)
sar
aam
xchg
ror
out
xor
inc
lods
lods
jge
scas
adc
adc
stos
mov
fstp
fisttp
inc
add
or
call
dec
rcl
cmp
sbb
xchg
and
mov
in
mov
jg
sub
push
lods
lods
clc
imul
arpl
inc
stos
or
mov
ret
les
ins
push
ss
shl
or
dec
inc
sub
in
pop
mov
sub
cld
push
mov
mov
movs
mov
data16
fwait
out
pop
in
(bad)
mov
mov
jl
aaa
jns
(bad)
xchg
mov
imul
or
sub
sbb
daa
inc
mov
push
lds
mov
adc
xor
dec
xchg
aad
cmps
inc
dec
pop
sti
mov
or
sub
mov
mov
inc
and
jl
fild
adc
jno
sub
retf
inc
ds
jae
jne
aas
dec
sub
cli
je
sbb
sbb
in
pop
jmp
dec
pop
mov
retf
call
popa
in
bound
ds
push
mov
into
or
int
mov
div
stos
out
add
jecxz
sbb
pop
cmps
int3
arpl
and
dec
xor
out
mov
fsubr
push
cmps
mov
add
sbb
(bad)
inc
aam
enter
inc
lea
and
mov
jo
sbb
push
addr16
imul
mov
adc
pop
xchg
jae
adc
pop
fidivr
fmul
inc
stos
(bad)
jl
fist
test
push
rcl
xchg
cmp
sqrtps
and
jmp
out
(bad)
leave
gs
inc
dec
arpl
les
dec
je
xor
fdivr
aad
into
cmp
dec
pop
inc
ins
ret
pop
pushf
push
push
adc
movs
xchg
pop
repz
rcr
ret
ret
cdq
rol
nop
mov
jmp
mov
inc
mov
pop
sub
jns
jle
mov
add
mov
jmp
test
mov
mov
popf
out
bnd
mov
add
pop
mov
xor
pop
js
in
fnstsw
sbb
dec
std
bound
cmp
jbe
mov
jne
(bad)
adc
nop
mov
sbb
xor
shr
add
pop
shl
jns
inc
scas
push
adc
fld
xor
fcomp
js
xor
and
mov
and
retf
shr
mov
data16
xchg
cmp
cmp
retf
add
lahf
popa
dec
mov
out
and
pop
nop
outs
ror
pop
in
lods
imul
das
fld
mov
fst
test
mov
rol
iret
dec
out
push
in
add
aaa
push
cdq
push
out
push
call
lods
pop
cmp
sbb
popa
div
xchg
bound
or
xchg
leave
stos
stos
scas
mov
pop
out
dec
leave
(bad)
hlt
mov
mov
dec
jbe
add
int3
fistp
mov
les
js
sub
loope
mov
arpl
or
jmp
sbb
test
fbld
xchg
ffree
(bad)
pop
(bad)
jmp
mov
sub
stos
das
dec
mov
mov
and
scas
and
mov
popf
scas
std
inc
daa
lods
arpl
aad
fdiv
jne
mov
test
jae
aas
sbb
cmp
sbb
cdq
dec
mov
nop
clc
and
test
dec
scas
ins
les
lahf
inc
scas
loopne
stc
inc
and
dec
fs
add
retf
mov
stc
in
pop
sub
inc
inc
and
sub
cs
and
pop
daa
jmp
cmps
push
jmp
or
xor
mov
push
dec
inc
outs
imul
jge
icebp
pop
int
or
scas
shl
outs
xchg
ins
call
out
mov
imul
test
test
(bad)
fs
lahf
push
and
jo
cmp
jmp
or
jbe
or
and
aas
stc
mov
mov
push
xchg
jmp
mul
(bad)
adc
dec
cmp
xchg
jbe
mov
enter
xor
das
push
js
sub
out
xchg
ds
add
popf
js
adc
pop
out
mov
push
js
(bad)
(bad)
out
aaa
and
shr
or
add
pop
mov
ss
push
addr16
(bad)
mov
les
fimul
add
sbb
sbb
cld
(bad)
fistp
inc
cmp
inc
(bad)
mov
ret
jb
fsqrt
jae
sbb
es
gs
push
push
in
(bad)
xchg
daa
adc
(bad)
pop
lahf
dec
lods
fiadd
test
push
(bad)
idiv
and
jecxz
mov
icebp
xor
fwait
retf
(bad)
pop
xor
js
clc
xchg
xor
loope
lahf
push
sub
cmp
jae
pusha
pop
sbb
pusha
sub
cs
out
and
pop
icebp
mov
loope
cmp
mov
add
gs
jle
mov
push
cmp
dec
cld
mov
(bad)
aas
aam
sub
mov
pop
scas
pop
jecxz
lods
cmp
jg
inc
and
mov
mov
stos
stos
or
xchg
and
(bad)
jns
pop
cmp
xlat
data16
mul
fidiv
fldenv
cmp
jbe
mov
stos
shr
xchg
or
add
fist
xchg
bswap
pop
leave
mov
call
jmp
push
jo
(bad)
out
scas
mov
jns
leave
or
push
into
and
jp
int3
sub
and
aad
and
mov
dec
and
adc
out
cmps
loope
xchg
loope
sahf
movs
cld
mov
fcmovnbe
imul
stos
push
adc
cmc
and
out
sub
shl
aaa
inc
pop
pusha
cwde
movs
or
xor
pop
push
inc
jbe
or
popa
movs
jbe
jmp
pop
push
ja
ror
stos
leave
push
pop
mov
loop
dec
rcr
outs
(bad)
out
lea
sub
inc
je
mov
jae
pop
call
fsub
push
out
push
aad
xchg
mov
adc
sbb
inc
lods
cmc
jne
stos
push
jns
shr
mov
lods
push
scas
pop
push
mov
cmp
push
fmul
xor
fmul
sbb
pop
test
cmp
aam
sbb
pop
sub
aas
and
mov
enter
sbb
lods
push
repnz
imul
mov
sbb
imul
imul
dec
test
jp
(bad)
dec
mov
cmp
shr
sub
jge
fsubr
(bad)
mov
gs
ret
push
push
(bad)
jbe
adc
int
mov
add
mov
ffreep
or
stc
mov
mov
mov
retf
jo
das
lea
inc
inc
ins
aas
aaa
add
fild
pop
jnp
je
jl
fcmovbe
loop
sbb
push
sbb
je
or
shl
mov
adc
sbb
or
push
sahf
pop
aas
popf
push
cmp
sbb
push
inc
sub
out
xchg
push
imul
xchg
mov
sub
dec
fs
mov
rol
push
lds
loopne
cmc
pop
add
fwait
sbb
add
fld
(bad)
jo
lock
push
(bad)
into
mov
sub
call
xchg
inc
je
xchg
std
mov
popf
dec
and
pop
shr
sti
cmp
mov
(bad)
leave
movs
aas
adc
out
mov
mov
inc
shl
into
ror
inc
fcmove
xchg
jo
inc
test
pop
leavew
repnz
dec
mov
cwde
cmps
test
sbb
ficom
stos
inc
cmp
sub
dec
pop
into
dec
push
out
outs
push
(bad)
mov
jbe
jle
sub
test
imul
jge
add
and
jb
inc
sub
xchg
jae
pop
ds
cmp
inc
iret
adc
xor
xchg
cmps
xchg
inc
push
(bad)
cdq
cli
and
int3
adc
push
inc
adc
imul
(bad)
js
fs
das
aad
lahf
push
sub
(bad)
jecxz
xchg
in
inc
js
jbe
int3
or
xchg
or
outs
cmp
inc
popf
mov
movs
ret
ss
jl
das
jae
inc
and
imul
aaa
sbb
(bad)
in
add
pop
int
pushf
ret
xchg
fsubr
clc
and
in
fsub
cdq
cmp
mov
rol
in
mul
daa
retf
mov
into
cmps
repnz
mov
jnp
dec
mov
xchg
cmc
out
dec
and
int3
into
out
mov
pop
je
shl
mov
add
jecxz
cmp
xchg
retf
fimul
mov
push
inc
xchg
inc
fcom
test
daa
sti
lock
mov
punpckldq
mov
adc
jnp
(bad)
mov
mov
jmp
push
mov
in
dec
fisub
jmp
retf
aas
dec
sbb
xor
ins
mov
idiv
pop
cld
(bad)
sbb
adc
mov
xchg
aam
aaa
popf
lahf
jl
or
cmp
jo
mov
inc
xchg
jecxz
xchg
mov
mov
jo
and
dec
js
pop
and
jae
repz
sub
push
mov
retf
mov
int3
sub
pushf
inc
or
(bad)
ins
jmp
int3
xchg
mov
imul
inc
jp
sbb
ret
out
jg
sahf
fucom
mov
ins
or
dec
inc
xchg
sub
js
pop
adc
push
stos
mov
shl
jmp
mov
jl
test
mov
out
dec
pop
sbb
fcomp
gs
das
pop
push
fild
lods
test
addr16
sbb
bound
daa
inc
fcmovu
dec
js
jae
test
(bad)
sub
dec
lea
scas
ficomp
mov
mov
pop
js
(bad)
jmp
(bad)
mul
inc
mov
mov
xor
clc
out
shr
fwait
movs
xor
js
loopne
ficom
sub
xor
lock
and
and
mov
adc
sti
ds
fdiv
ficomp
add
imul
sbb
mov
jg
mov
push
jecxz
aam
sahf
imul
sti
xor
adc
xchg
lds
or
jbe
(bad)
sub
sbb
push
jmp
ds
je
div
sbb
ret
pop
sub
add
das
pop
jb
je
adc
jns
and
and
(bad)
fist
mov
fs
mov
xchg
movs
cmp
jnp
sub
add
es
push
sbb
mov
enter
std
out
sbb
adc
in
sub
add
mov
jge
jo
add
fs
and
mov
retf
mov
dec
aam
sub
call
jg
mov
cli
xchg
test
fisttp
into
dec
push
sbb
xchg
sub
sbb
leave
and
ficom
addr16
outs
loopne
pop
fisubr
fld
test
js
sub
mov
add
inc
mov
nop
sbb
inc
shr
pop
jle
sub
or
(bad)
call
sbb
add
shl
mov
push
in
in
arpl
pop
lea
aam
adc
cs
mov
fisub
xchg
jecxz
jle
push
test
cmp
inc
stos
test
jg
fistp
ja
jb
sbb
mov
sahf
leave
fs
push
fwait
inc
cdq
pop
neg
adc
gs
xchg
push
sbb
and
adc
mov
ror
ret
jmp
pop
in
daa
xlat
mov
jnp
add
jmp
sti
or
cmps
icebp
pop
popf
add
movs
aam
push
xor
call
retf
mov
or
and
test
ret
jg
lahf
cmps
test
out
bnd
clc
loope
fld
sbb
jbe
inc
mov
leave
mov
pop
add
(bad)
jns
cmp
call
mov
sbb
out
xchg
push
and
in
jo
je
imul
jb
test
cmp
int
xor
dec
retf
adc
adc
in
mov
ins
(bad)
dec
and
xor
add
out
inc
fidiv
sbb
lods
jmp
xor
sbb
jg
and
mov
push
xchg
hlt
sbb
jnp
sahf
push
jg
loop
sub
fnstcw
adc
imul
xchg
mov
test
or
(bad)
loopne
sbb
and
arpl
in
jp
xchg
test
or
mov
push
and
shl
jns
imul
xchg
rcr
icebp
psraw
mov
inc
mov
jne
cmp
cmps
aad
out
jmp
in
jge
adc
lods
pop
push
xchg
neg
in
dec
sbb
xor
ds
or
stos
pop
stos
pop
ins
xchg
xlat
out
jno
mov
jne
cmp
dec
jno
xor
mov
push
(bad)
mov
sbb
cmp
sub
iret
inc
dec
fdivr
loop
fbstp
pop
fidiv
sub
inc
xor
outs
inc
retf
dec
jns
xchg
das
sahf
pop
pop
loop
shl
push
jl
add
xchg
dec
push
push
(bad)
push
in
enter
xchg
aam
jae
cdq
adc
pop
pop
push
xchg
xor
fnsave
test
mov
outs
jmp
cmp
mov
pusha
test
retf
in
xchg
or
(bad)
repz
fstp
cwde
mov
xor
enter
(bad)
mov
jo
mov
call
jmp
mov
mov
sahf
and
scas
scas
or
or
fidivr
pushf
popa
inc
sub
dec
iret
dec
sub
int
int3
scas
sub
jno
or
cwde
adc
mov
out
pop
add
fcmovnbe
dec
sbb
in
push
pop
aam
sbb
dec
push
scas
mov
add
pop
stc
or
jno
mov
fcmovnu
mov
cmp
xchg
sub
sub
jne
call
loop
xchg
push
sub
imul
rcl
in
cmp
sbb
inc
jl
fs
pop
pusha
add
xchg
test
lahf
outs
mov
xchg
std
sub
jns
ds
inc
mov
enter
pushf
add
scas
movs
das
adc
adc
mov
or
dec
xchg
or
sub
test
enter
adc
xor
push
leave
pop
ins
retf
dec
pop
in
mov
cmps
arpl
retf
push
dec
gs
xchg
adc
imul
or
mov
jo
and
xchg
mov
popa
jecxz
push
inc
jnp
dec
xor
add
inc
aaa
xor
repz
mov
push
pop
xchg
test
xchg
pop
imul
xor
inc
and
(bad)
(bad)
jbe
and
cli
jmp
call
jle
mov
pop
(bad)
in
sbb
sbb
enter
lea
sub
pop
pop
mov
jl
(bad)
pop
push
repz
mov
fsubrp
mov
push
daa
sbb
outs
call
pop
adc
dec
jbe
aas
or
xchg
test
rcl
arpl
or
sub
jp
or
cmc
(bad)
lea
mul
lods
scas
leave
mov
push
jae
stos
daa
(bad)
imul
fistp
or
jl
add
stc
jae
into
int
daa
xchg
call
xor
mov
and
pop
pusha
nop
das
call
push
add
add
sbb
call
arpl
mov
push
leave
in
xchg
jecxz
bound
sbb
je
ins
mov
fld
(bad)
sar
cmp
or
inc
mov
or
mov
cs
jp
fcom
call
push
inc
xchg
loop
repnz
or
mov
cli
xlat
dec
inc
mov
inc
fld
xchg
(bad)
jbe
es
cmp
enter
mov
adc
add
inc
and
pop
je
pop
aam
adc
lock
inc
mov
sar
js
outs
or
cmc
fs
push
gs
test
add
dec
leave
(bad)
call
call
sub
imul
pop
push
(bad)
mov
push
pop
xchg
in
jl
and
loop
sbb
(bad)
push
xlat
in
ins
jp
idiv
push
xchg
inc
test
sub
and
mov
cmp
push
xor
div
mov
mov
loop
sub
seto
xchg
inc
dec
or
loopne
mov
adc
xchg
aas
or
in
adc
pushf
cmp
dec
xor
and
pushf
sar
stc
adc
and
in
sbb
sub
push
out
xchg
adc
dec
cmp
rol
and
add
xchg
xor
add
out
test
iret
inc
gs
lock
sbb
out
adc
dec
jae
or
jmp
bound
xor
call
mov
jb
inc
pushf
dec
mov
push
je
out
push
outs
test
inc
cmps
push
out
xor
inc
push
cmp
mov
dec
pop
add
std
aam
ss
sub
mov
test
stos
xor
call
fdiv
in
pop
mov
xor
push
sti
mov
mov
(bad)
pushf
repnz
sbb
gs
xor
fst
push
dec
mov
dec
mov
cmp
ror
ins
rcl
js
or
fimul
jg
loop
dec
push
pop
icebp
jb
jae
loop
jae
lea
adc
xchg
sar
in
xor
std
fidiv
mov
icebp
dec
jbe
rcr
inc
add
sbb
jecxz
outs
push
enter
pop
enter
frstor
jge
mov
ret
enter
cmp
pop
in
pushf
sub
and
cmc
cmps
and
or
inc
jno
add
test
out
mov
xchg
fchs
rcl
pop
fs
data16
sbb
mov
mov
pop
dec
int3
cmp
mov
test
frstpm(287
push
mov
lock
not
jbe
pushf
push
dec
and
icebp
sbb
adc
arpl
adc
fcomp
rcr
adc
loop
push
cmp
repnz
dec
adc
pop
out
ins
xchg
add
sahf
inc
je
dec
ins
sub
xchg
adc
enter
pop
add
inc
cs
xchg
mov
jp
test
sub
mov
or
movs
pop
cmp
mov
adc
cmc
addr16
loopne
dec
xor
adc
dec
dec
ret
in
(bad)
clc
add
nop
xor
jmp
enter
add
fwait
jae
bound
movs
ret
add
mov
mov
repz
test
jnp
lea
pop
mov
adc
adc
or
scas
fcom
cmp
mov
imul
xchg
pop
daa
jmp
(bad)
jmp
dec
sar
push
loope
xor
mov
push
hlt
ret
cmp
cmp
jnp
scas
das
dec
xchg
mov
in
push
jo
adc
mov
inc
fld
or
push
adc
mov
jbe
xor
push
fstp
loopne
mov
into
jmp
aas
dec
jmp
mov
aam
cmp
rcr
nop
xor
mov
push
ret
enter
cdq
dec
in
dec
js
cwde
cmp
pushf
push
sbb
sbb
scas
add
das
cmp
push
pop
pop
div
sub
mov
mov
xlat
stos
gs
xchg
sbb
scas
popa
fld
mov
std
inc
ret
xchg
dec
imul
xor
push
pop
lods
xor
fimul
sbb
xchg
mov
outs
jo
xor
xchg
inc
push
loop
adc
fsubr
retf
sub
push
loopne
popf
(bad)
outs
ins
stc
push
in
xor
jae
adc
out
and
and
xchg
adc
dec
into
jl
mov
push
test
cmps
push
loop
mov
adc
test
lods
xor
dec
scas
ins
sub
movs
jmp
das
pop
loopne
loopne
arpl
out
and
mov
imul
addr16
adc
pushf
dec
push
es
mov
pop
repz
fs
scas
lds
in
retf
lods
sub
nop
jp
dec
xor
mov
out
dec
imul
ja
or
push
jle
loopne
dec
or
into
sbb
adc
icebp
loopne
outs
neg
mov
repnz
xchg
cmps
fwait
xchg
gs
loop
lods
and
pop
and
nop
xchg
lods
and
pop
jmp
clc
sub
push
dec
jae
push
jmp
(bad)
and
(bad)
xchg
jb
and
mov
push
clc
jmp
push
sbb
and
cmc
mov
or
cmp
dec
jmp
outs
jecxz
xchg
(bad)
in
int
xlat
xchg
(bad)
(bad)
cmp
jns
ficomp
sub
clc
sub
mov
nop
inc
(bad)
sbb
nop
mov
mov
inc
mov
daa
dec
push
lahf
sub
fnstcw
arpl
pop
xor
pop
jl
xor
pushf
inc
loope
xchg
mov
int3
jmp
aaa
sar
loope
ins
aam
push
pop
lahf
test
adc
sbb
cli
push
loope
sbb
mov
(bad)
mov
popf
mov
in
jnp
push
xchg
lds
(bad)
adc
enter
xlat
add
out
jg
pop
push
push
sbb
add
cmp
stc
push
jnp
add
clc
xor
xchg
and
addr16
pop
mov
push
dec
std
push
fnstsw
ret
hlt
inc
in
emms
sub
mov
fcmovb
mov
push
add
or
repnz
jge
retf
int3
int
push
sub
jae
adc
jmp
imul
push
sbb
mov
clc
xor
xchg
int
jbe
mov
push
div
adc
retf
push
sbb
add
mov
int
dec
in
leave
iret
push
sub
push
add
push
jno
dec
js
jmp
rcr
xchg
add
adc
sub
into
or
out
jb
out
ror
inc
and
pusha
es
push
inc
jg
scas
mov
and
icebp
bound
(bad)
pop
fwait
aad
test
sub
mov
pop
cld
leave
pusha
out
outs
cmp
jmp
jl
les
(bad)
cmp
push
rol
push
mov
xchg
and
and
mov
mov
inc
fbstp
sbb
or
xor
sar
popa
mov
push
retf
inc
mov
and
shl
inc
fcomp
add
shr
out
leave
xor
sub
xor
shl
nop
scas
iret
push
cmc
arpl
dec
push
sti
fcom
call
dec
xchg
in
dec
and
inc
mov
dec
or
adc
stos
add
nop
jae
imul
adc
(bad)
sahf
dec
in
push
and
inc
loopne
repnz
mov
leave
or
inc
or
nop
fcomp
push
jmp
ja
aas
cdq
xor
xchg
arpl
test
cmp
mov
xchg
sub
jae
outs
bound
mov
imul
fld
xchg
lods
jmp
sbb
lea
push
push
add
push
cld
retf
jmp
mov
arpl
lods
and
jl
lahf
cli
std
push
mov
push
lods
jae
lods
push
and
(bad)
retf
lods
inc
sub
fwait
push
stos
movs
or
sbb
fidivr
adc
push
cwde
out
divps
mov
sahf
shl
pop
pop
ins
out
xlat
dec
jnp
mov
loopne
xor
mov
pop
jnp
mov
add
mov
and
mov
xor
(bad)
jmp
jmp
push
fstp
hlt
lds
mov
xchg
mov
out
mov
xchg
sub
stc
ja
test
xlat
imul
(bad)
inc
xchg
(bad)
mov
mov
push
popa
pop
(bad)
repz
sub
xchg
mov
jnp
add
sbb
jg
aaa
jbe
inc
add
mov
and
xlat
into
xchg
and
movs
ins
xchg
mov
test
add
mov
mov
div
in
push
repnz
mov
js
(bad)
xchg
pop
cmp
lock
clc
mul
stos
or
call
test
inc
mov
jecxz
mul
outs
push
loope
xor
jns
stos
jo
shl
cmp
call
movs
pmaxub
jmp
pop
and
cmp
jbe
cmp
fwait
mov
dec
inc
ins
sub
fild
int3
push
xchg
int3
daa
and
inc
sbb
adc
adc
mov
loopne
push
add
stc
add
in
in
cmp
enter
rcl
in
dec
mov
dec
test
dec
pop
push
imul
hlt
shr
xchg
jp
sbb
push
push
xor
pushf
dec
addr16
mov
xchg
int
adc
jnp
leave
xchg
and
mov
push
dec
jae
adc
xchg
nop
xor
ror
mov
imul
push
pop
in
movs
dec
es
aas
or
(bad)
mov
stc
test
out
pusha
jnp
bound
push
or
cmp
cmp
mov
imul
sub
mov
or
xchg
aaa
stos
mov
mov
aad
mov
or
mov
xchg
xor
or
mov
test
fmul
in
(bad)
clc
bound
ds
les
inc
xlat
lods
(bad)
movs
ins
ds
movs
or
(bad)
(bad)
aad
jl
mov
add
(bad)
bnd
inc
or
std
mov
scas
pusha
adc
out
(bad)
push
adc
jo
bound
rcr
ror
ret
dec
mov
add
jo
dec
mov
int3
cmc
enter
call
gs
and
imul
adc
into
mov
mov
loopne
mov
pop
sub
cld
sbb
out
arpl
stos
or
and
jb
jmp
shl
and
mov
cmp
mov
mov
mov
pusha
pushf
call
ret
repnz
cmp
fs
jno
jecxz
nop
daa
jmp
adc
das
out
loope
(bad)
mov
cmp
cmps
cld
gs
fcmovnb
pop
ret
or
push
cmps
add
sbb
(bad)
in
je
or
sar
xchg
sub
xchg
les
mov
jmp
lock
jno
pop
add
mov
mov
shr
sar
and
aas
(bad)
jnp
icebp
popf
sar
xor
and
data16
inc
adc
jl
pop
retf
inc
dec
into
test
cmp
dec
fidivr
mov
imul
and
pop
icebp
stos
scas
jbe
mov
jp
in
in
inc
loop
ins
sbb
sbb
std
inc
mov
pop
push
cmc
ds
mov
push
test
repnz
and
ins
lods
dec
push
jg
jmp
sbb
aam
cmp
mov
faddp
pushf
into
ss
aad
pop
mov
sbb
jl
call
mov
fwait
mov
inc
fsubr
mov
fdivr
inc
movs
cmc
cmc
(bad)
(bad)
movs
jo
dec
sub
sbb
push
mov
pop
fwait
js
cmp
or
enter
call
sub
fadd
sbb
jg
ror
xchg
lds
dec
xor
sub
inc
sub
call
mov
xor
xchg
movs
xchg
in
push
out
(bad)
cmp
cld
mov
mov
mov
sbb
jns
ss
jmp
xchg
pop
sbb
rcl
popf
sub
leave
mov
sub
rcl
mov
retf
stos
cmp
or
test
enter
lea
jge
ins
jae
pop
sar
pop
xchg
clc
iret
pop
dec
shr
outs
inc
sar
in
(bad)
(bad)
ins
xchg
push
adc
outs
xchg
in
pop
and
adc
ja
jmp
xor
retf
neg
mov
clc
loop
lods
mov
push
adc
inc
push
mov
push
inc
(bad)
fs
pop
cmp
mov
stos
aad
adc
pop
in
pop
sar
(bad)
pop
pop
pop
fsubrp
inc
pop
mov
(bad)
and
cmps
dec
ss
pop
ret
mov
cmps
push
int
and
mov
add
in
pop
dec
xchg
add
cli
cmp
shl
add
mov
xor
pusha
mov
lods
dec
sub
arpl
dec
adc
sub
outs
cmps
das
xchg
add
push
mov
dec
loop
call
js
pop
and
leave
call
cmp
pop
lahf
mov
std
pop
push
push
int3
(bad)
jnp
mov
sti
and
(bad)
les
(bad)
lods
mov
sub
mov
cmp
mov
ins
mov
inc
inc
or
bound
jae
cmp
fistp
out
sbb
aad
jg
pusha
sub
addr16
or
inc
sub
and
data16
call
in
pop
push
cmp
dec
jb
xor
shl
out
popf
dec
mov
jge
in
push
jmp
push
cdq
pop
fild
xchg
(bad)
jecxz
mov
je
loop
mov
push
ds
rol
test
and
dec
(bad)
in
push
sbb
shl
jb
inc
shl
dec
pop
add
outs
imul
xchg
jl
mov
and
mov
les
and
add
sub
loopne
popa
inc
lahf
stos
xchg
out
mov
fcom
mov
inc
push
jne
add
setno
and
clc
xchg
out
(bad)
icebp
cmp
js
inc
cmp
addr16
jecxz
xchg
into
adc
cmp
inc
lea
mov
shl
push
shl
jnp
pop
movs
or
mov
mov
popf
in
rol
dec
jmp
das
jnp
(bad)
out
xchg
inc
fidivr
push
shl
mov
mov
xor
sbb
push
dec
sbb
adc
loopne
mov
mov
inc
xlat
push
mov
sub
cmps
mov
dec
fwait
sub
push
push
inc
test
iret
xchg
xor
jge
mov
or
into
jne
jmp
ficom
imul
sub
pusha
popf
fs
hlt
xchg
adc
xor
rol
in
adc
retf
dec
out
repz
add
rcl
fldenv
push
test
dec
arpl
into
fwait
and
cmp
movs
add
cs
ins
lock
data16
push
jbe
clc
fsub
mov
inc
adc
push
fisub
icebp
push
bound
sar
in
test
fcom
bound
xor
pop
mov
mov
mov
and
and
imul
push
rol
repnz
pop
std
adc
jb
pusha
pop
xchg
cmp
jp
jmp
sbb
cmp
jnp
sbb
mov
out
popa
out
ficomp
stos
je
cli
les
daa
test
jge
or
imul
cwde
mov
adc
nop
int
popf
xor
dec
add
cmps
inc
daa
dec
xchg
sub
sahf
or
xor
(bad)
cmc
add
xchg
dec
shl
or
mov
or
bound
lods
dec
repz
out
and
sbb
neg
out
popf
cli
stos
ds
std
push
cld
in
mov
jg
sahf
xchg
call
inc
addr16
repz
in
add
sbb
sub
cdq
mov
sbb
pop
mov
jmp
pop
pushf
mov
pushf
loopne
dec
imul
icebp
lods
inc
sar
push
pop
aam
or
(bad)
pop
(bad)
mov
jg
verr
dec
lds
jmp
adc
dec
xor
es
xchg
pushf
ret
es
xor
mov
cdq
xlat
movs
cli
cld
stc
outs
(bad)
jp
add
cli
test
xor
push
pop
retf
jg
div
arpl
stos
pop
arpl
mov
or
xchg
jle
lds
loope
or
cmc
in
call
repnz
push
pusha
adc
adc
push
cwde
popf
xor
inc
test
jae
jp
popf
rcr
in
outs
into
fnstenv
jae
ds
inc
into
addr16
daa
in
mov
sub
imul
adc
ret
mov
cli
push
leave
gs
mov
or
sbb
xor
mov
dec
test
xchg
mov
sub
push
jecxz
retf
scas
test
sub
ja
xor
cmps
xchg
or
push
lea
(bad)
jmp
jle
mov
jbe
fld
mov
cwde
sub
mov
mov
ins
aas
sbb
ret
adc
sar
sbb
cwde
jl
nop
xchg
call
mov
adc
in
aad
sbb
dec
das
mov
inc
addr16
inc
inc
mov
jecxz
imul
(bad)
sub
retf
mul
(bad)
xchg
dec
xor
nop
call
imul
movs
inc
mov
jnp
inc
or
daa
lahf
test
xor
loope
movs
sbb
and
pop
into
repnz
pop
enter
push
sub
sub
sbb
sub
xchg
mov
cld
aas
jb
dec
sti
in
push
aad
inc
inc
rcl
sbb
push
cmps
xchg
push
mov
push
jmp
lods
call
or
sub
inc
setl
fwait
out
mov
pop
xchg
fnstsw
ret
xchg
pusha
jns
lods
sbb
push
sbb
outs
stos
cli
adc
gs
mov
push
push
scas
lea
xor
jae
jb
dec
mov
sbb
adc
aad
mov
fdiv
jns
pop
inc
add
repz
aad
int3
dec
sti
cmp
es
mov
adc
adc
or
or
stc
sti
lods
mov
dec
dec
inc
rol
mov
mov
add
jmp
retf
je
xchg
inc
mov
sti
lock
xor
cmp
or
jp
test
int
adc
pop
xchg
imul
jne
loope
jb
test
mov
ins
xor
xchg
movs
mov
pusha
aam
movs
popa
add
adc
shl
inc
popa
mov
js
int
and
je
test
xchg
and
add
sub
imul
mov
repz
in
jle
rcl
div
(bad)
pop
push
int3
or
xabort
sub
cmp
loopne
stos
cmp
add
mov
mov
mov
pop
adc
clc
loopne
jmp
jge
ret
hlt
hlt
sbb
xor
and
mov
ds
dec
jmp
rol
daa
fwait
mov
or
xchg
and
cmp
jecxz
rol
inc
cdq
add
add
in
mov
retf
std
or
inc
fidiv
int
cmp
mov
push
add
popa
xor
mov
adc
out
push
cdq
or
xor
rol
popf
xor
adc
dec
mov
(bad)
or
lahf
jge
movs
add
cmp
outs
repnz
mov
sar
jae
mov
jbe
sbb
setae
test
inc
(bad)
mov
imul
mov
push
jae
mul
mov
xchg
adc
and
scas
mov
and
pop
loopne
and
adc
lahf
inc
add
xor
adc
jge
or
fstp
sbb
ret
sbb
push
mov
test
daa
mov
dec
iret
loopne
loop
inc
lahf
pop
iret
lahf
push
div
or
cs
loop
cmps
pop
add
sub
pop
out
sub
adc
dec
jp
call
push
mov
dec
mov
jns
push
mov
jl
pop
xchg
mov
rcr
pop
push
outs
ret
(bad)
jp
or
pop
out
sub
push
xchg
push
fidiv
pop
mov
iret
push
and
push
aam
pop
adc
lock
add
mov
rcl
movs
je
xchg
shr
enter
xlat
add
ret
ror
mov
jp
mov
sub
ds
jecxz
and
push
push
int
in
mov
cdq
stos
cli
lahf
fsubr
bound
pop
js
push
inc
sbb
mov
xchg
inc
ror
pop
fidivr
clc
sub
xor
movs
inc
mov
push
xor
aam
and
cmps
dec
loopne
test
cmps
xchg
dec
test
mov
mov
arpl
mov
dec
cmp
inc
leave
fisttp
jne
in
retf
out
xchg
jmp
mov
rcr
clc
pop
push
lods
mov
push
int3
jmp
lock
xor
in
repnz
fmul
dec
pusha
push
xor
aam
int
mov
out
pop
iret
push
test
cmps
arpl
test
fnop
stos
fmul
lea
add
mov
and
pop
lods
loope
pop
sub
mov
lods
inc
dec
cmps
(bad)
inc
and
mov
(bad)
cmp
jp
bound
dec
mov
ins
mov
sbb
(bad)
mov
xchg
int3
aad
sub
dec
mov
fs
adc
cwde
push
movlps
push
sub
sub
stos
scas
mov
movs
cwde
les
dec
loopne
jmp
xor
push
es
inc
imul
mov
or
sar
sub
mov
les
jbe
adc
xchg
mov
hlt
mov
xlat
imul
movmskps
inc
loopne
and
stos
jo
lods
sbb
sub
add
push
dec
push
clc
(bad)
out
lods
lea
mov
or
shr
dec
aas
push
cmp
fdivr
xor
(bad)
popf
(bad)
loopne
sbb
mov
mov
mov
adc
jo
pop
sub
out
lds
xor
or
in
push
call
daa
pop
(bad)
mov
jnp
stos
jecxz
jnp
cdq
ins
jo
scas
inc
push
dec
xchg
fisttp
daa
xor
add
cli
adc
jmp
out
outs
stos
enter
jno
xor
cld
sub
and
inc
pop
jle
inc
mov
ror
xchg
push
icebp
jbe
add
inc
mov
cmp
sbb
sub
bound
push
adc
add
xor
mov
pop
push
sbb
bound
dec
jg
adc
cmc
adc
dec
mov
sub
std
pop
es
sar
mov
push
(bad)
adc
adc
mov
cli
nop
and
movs
mov
pop
and
pop
mov
adc
pop
(bad)
retf
sub
ret
inc
jge
arpl
add
and
scas
jmp
fcmove
push
sub
dec
(bad)
push
add
sub
xor
mov
outs
fldcw
jnp
inc
cld
dec
inc
inc
shl
or
mov
or
or
xor
dec
sub
pop
pop
xor
lock
test
push
outs
pusha
sti
lahf
push
fmul
imul
(bad)
scas
ficomp
leave
fsub
aam
inc
cs
and
in
push
or
adc
sar
(bad)
sub
lds
cmp
jb
arpl
sbb
ficomp
xor
add
hlt
jbe
pop
shr
cmp
movs
mov
cmp
(bad)
adc
cdq
cli
std
iret
shl
mov
test
cli
mov
lds
pop
ffree
sub
inc
mov
mov
test
cld
jg
push
aam
lahf
imul
xchg
or
in
movsx
fnstcw
test
cmp
xchg
mov
mov
mov
imul
int3
cs
(bad)
(bad)
dec
addr16
mov
mov
and
inc
and
cld
sbb
imul
mov
mov
or
push
jge
mov
rcl
call
push
jl
clc
js
push
ins
xor
mov
pop
cmc
and
xor
repnz
pop
mov
jno
hlt
int3
xchg
les
inc
dec
inc
iret
das
pop
push
fiadd
les
cdq
and
shr
xchg
adc
retf
sbb
es
addr16
call
jae
sbb
xchg
das
call
jge
(bad)
bound
push
ins
xor
mov
jne
sub
pop
inc
push
mov
addr16
retf
mov
shl
fisub
cdq
arpl
jecxz
loop
jne
out
xchg
push
jnp
cmps
adc
inc
cmp
mov
cmp
aaa
fwait
xor
dec
sub
dec
fs
or
jmp
ins
shr
mov
rcr
mov
xchg
fdivr
ror
mov
dec
stc
dec
lods
mov
cwde
push
ja
fnstenv
jecxz
jnp
cwde
iret
xchg
pop
rcr
jge
lock
pushf
or
ror
(bad)
mov
iret
loope
das
push
cmp
push
jae
push
add
dec
inc
jmp
arpl
(bad)
stos
push
xchg
cmp
xchg
icebp
or
lods
pop
or
add
addr16
in
adc
xchg
jo
dec
and
sbb
inc
dec
pop
retf
test
mov
pop
mov
test
push
in
gs
xchg
dec
out
out
and
or
imul
pop
sub
push
fwait
push
pop
pop
and
jb
clc
xor
pop
jnp
jmp
in
and
aas
pop
pop
shl
(bad)
fwait
fwait
call
outs
nop
inc
hlt
icebp
jl
pop
xchg
js
cmp
push
das
cmp
in
imul
mov
push
jle
int3
adc
lea
and
loope
or
das
outs
mov
nop
cld
(bad)
push
inc
ror
les
xor
sub
add
dec
inc
imul
pop
xchg
inc
jb
mov
mov
rcr
push
push
add
test
sbb
and
mov
mov
mov
adc
pusha
pop
cmp
cmp
retf
sahf
ss
test
jmp
dec
rcr
mov
fild
and
sbb
stos
xchg
in
into
fs
retf
cwde
xchg
js
mov
jl
sbb
sar
cmps
movs
int
adc
mov
xor
sbb
or
movs
mov
sub
xchg
mov
loopne
pusha
scas
ss
add
inc
fwait
dec
xchg
loope
pop
jae
dec
jno
push
fs
jg
hlt
xor
cmps
ins
jbe
mov
mov
mov
mul
cmp
mov
dec
push
mov
cmp
adc
sbb
jnp
pusha
mov
ins
push
add
push
xchg
lahf
mov
jle
cmp
pop
dec
push
xor
pusha
add
mov
(bad)
jno
aas
lods
retf
mov
das
aas
sub
das
(bad)
inc
mov
fsubp
ins
inc
cmp
sbb
mov
jno
mov
mov
sub
sub
adc
mov
mov
push
dec
inc
retf
dec
jle
mov
(bad)
cmp
pavgb
adc
clc
dec
sbb
adc
cs
aam
mov
add
jmp
in
jecxz
movs
dec
sti
mov
shr
adc
sbb
or
and
sub
xchg
adc
pusha
pop
xchg
out
mov
cmp
cmp
mov
mov
jle
in
xor
inc
into
sub
out
(bad)
mov
and
bound
ja
dec
fldcw
repz
retf
popf
mov
xchg
push
jmp
loop
or
mov
adc
int3
ja
jmp
(bad)
outs
adc
add
ins
mov
leave
loope
xchg
xchg
int
pop
sbb
sbb
lahf
xor
in
jp
icebp
dec
clc
push
jns
inc
jnp
mov
icebp
scas
cmp
fdivrp
test
mov
fnstsw
dec
xchg
mov
mov
lock
push
ja
dec
adc
not
scas
gs
test
ret
mov
inc
adc
push
sbb
sub
leave
fidivr
dec
cmps
js
jmp
jle
sub
(bad)
fsub
lds
stc
mov
pop
or
bsr
(bad)
lahf
(bad)
jecxz
pop
adc
mov
sti
in
out
stc
lods
das
xchg
cwde
cli
dec
pushf
sub
enter
cwde
dec
sub
sbb
(bad)
inc
imul
push
push
arpl
inc
push
in
inc
enter
out
inc
jns
lods
inc
sbb
loop
dec
in
cwde
pop
cmc
clc
jecxz
lahf
ffree
jnp
(bad)
pop
or
ror
out
cmps
stos
sub
xchg
(bad)
dec
sbb
stc
pop
pop
imul
xor
popf
xlat
ja
aam
pop
ror
pop
repnz
sub
add
mov
gs
and
popf
inc
movs
ret
sar
(bad)
adc
shl
fcom
int3
cmps
icebp
fcmovne
sub
pop
dec
jle
call
and
sbb
and
push
xlat
xchg
mov
jmp
jns
inc
loope
mov
pop
jo
xchg
add
in
inc
aam
(bad)
jmp
fidiv
mov
cmp
call
add
in
test
in
dec
add
and
das
mov
imul
mov
fadd
stos
push
cmps
and
int
je
mov
mov
mov
xor
shr
outs
out
ins
adc
fwait
iret
inc
in
adc
cmp
cmps
sub
mov
lahf
or
sub
stos
cli
jp
ret
int
test
rol
test
adc
int3
pushf
out
add
xor
cli
pop
cld
int3
sub
mov
je
ret
popf
sbb
daa
cli
scas
dec
lds
js
push
sub
aas
jecxz
stos
lods
(bad)
lea
sahf
fstp
adc
nop
ret
push
pop
adc
mov
imul
mov
pop
sub
mov
and
add
pop
repz
outs
cmps
cdq
aad
sar
pop
pushf
xchg
scas
repz
das
(bad)
iret
outs
jge
cmp
lahf
arpl
nop
or
adc
shr
mov
js
adc
in
dec
jmp
mov
in
mov
mov
jecxz
and
xchg
xchg
push
dec
jge
jmp
adc
and
push
add
jl
mov
into
mov
mov
and
shl
pop
imul
cmc
jno
lahf
add
ror
inc
sbb
(bad)
jp
cmc
sbb
cmps
sbb
sbb
xchg
test
jmp
mov
inc
(bad)
jb
and
(bad)
cld
fisubr
or
inc
gs
shl
sub
(bad)
lock
sbb
in
xor
(bad)
adc
lods
push
jb
xor
xchg
inc
inc
int
retf
clc
out
out
gs
adc
dec
mov
cld
mov
cs
pop
popf
inc
inc
nop
cmps
or
ror
jo
add
cmps
adc
les
cmp
repz
pop
hlt
push
or
sub
mov
or
mov
mov
pop
or
mov
les
cmp
xlat
int
aam
cld
movs
xchg
cmp
stos
ret
mov
fadd
and
mov
sbb
les
mov
push
sub
jmp
loopne
lods
sbb
lock
xchg
lea
rcl
sub
or
jbe
aaa
pop
mov
add
ror
xor
jl
push
enter
mov
adc
iret
pusha
dec
sub
push
imul
push
sbb
adc
and
push
xchg
icebp
xchg
enter
jne
xchg
cmp
dec
push
mov
es
loope
shl
xchg
retf
xor
data16
sbb
jns
fbld
xchg
(bad)
cmc
xchg
addr16
and
imul
mov
xchg
mov
push
cmp
xchg
mov
movs
sbb
loop
call
xchg
xor
inc
push
stc
ja
popf
push
dec
shl
sub
stos
inc
cmps
push
jmp
lods
rcl
cwde
in
cmp
lock
sub
cmps
add
sahf
cwde
iret
and
out
mov
in
fld
fdiv
repnz
repz
femms
ja
vcvttpd2dq
mov
adc
adc
lahf
push
int
outs
call
aad
and
and
xchg
div
mov
in
js
push
int3
ins
xor
cmp
dec
mov
stos
ins
not
pusha
shl
popa
enter
outs
arpl
enter
mov
pop
pop
add
ret
jnp
(bad)
mov
call
jns
xchg
pop
jl
loop
sar
or
or
adc
mov
and
lods
rcr
in
adc
add
mov
mov
fbld
mov
enter
pop
rcl
test
pop
lea
out
repz
mov
cwde
fnstcw
int3
and
push
inc
or
sub
sahf
mov
adc
push
push
in
cdq
sbb
pcmpeqd
push
dec
stos
popf
xchg
mov
push
retf
xor
enter
cld
or
pop
sbb
push
pop
sub
popf
push
cmp
enter
inc
mov
inc
stc
out
pop
cmp
pop
lahf
out
adc
lds
cmps
add
or
ins
add
or
pop
mov
stos
jno
lock
mov
cli
mov
leave
add
retf
jp
outs
fwait
mov
stos
lods
(bad)
aam
push
inc
push
and
mov
loope
ins
out
mov
cmp
scas
ret
sti
fmul
jg
lods
enter
sub
sub
mov
hlt
mov
ss
je
inc
add
es
mov
push
mov
sub
jl
push
sbb
adc
jo
mov
add
mov
dec
gs
aad
icebp
inc
loope
in
enter
sbb
out
mov
addr16
add
cmp
loope
push
and
int3
jmp
sbb
cmps
sbb
in
cmps
imul
and
push
jnp
das
mov
das
lods
mov
daa
add
lock
call
adc
clc
push
(bad)
ret
inc
movs
mov
leave
les
sub
xchg
loop
mov
xor
mov
repnz
imul
bnd
aaa
mov
je
stc
lock
aam
out
push
pop
mov
mov
adc
pushf
mov
inc
out
pop
push
ror
fcomp
mov
add
aaa
pop
inc
sub
pop
add
addr16
cmp
mov
xlat
and
stos
imul
gs
fadd
pop
sbb
ja
or
dec
arpl
bound
sysenter
out
test
cmp
dec
adc
sub
mov
dec
lods
jnp
(bad)
xor
jb
and
lods
hlt
adc
leave
scas
movs
mov
aas
push
fucomi
jmp
sub
data16
mov
cmp
clc
xchg
neg
sub
movs
cmc
jae
in
ss
xchg
xchg
pop
bound
xor
mov
ror
adc
test
scas
push
sbb
es
mov
xor
jmp
test
mov
(bad)
hlt
jne
add
cmp
out
push
out
add
pop
jb
arpl
sub
mov
push
clc
jnp
leave
mov
jnp
mov
mov
mov
out
fild
sbb
dec
imul
cmc
sub
add
fld
(bad)
enter
cmp
sbb
cmp
(bad)
in
push
mov
cs
jnp
dec
adc
outs
rol
(bad)
push
cli
sub
fidiv
fisttp
popf
cmp
jno
push
sub
rcl
popa
cmps
(bad)
push
mov
mov
mov
sub
adc
aas
jmp
xchg
ins
icebp
leave
scas
std
jg
dec
inc
mov
pop
fsubr
pop
inc
cwde
adc
lds
sub
int3
mov
add
fsubr
xor
jae
(bad)
aam
jb
aam
mov
adc
xchg
adc
jl
and
mov
test
jnp
dec
stc
std
xchg
cs
fs
inc
cdq
movs
mov
adc
jae
adc
outs
cmp
mov
fcom
jmp
xor
add
and
inc
add
xchg
loopne
push
sbb
pop
dec
jno
pop
or
mov
cmp
push
imul
aam
and
jb
test
(bad)
jne
cmp
jo
aas
sbb
cmp
dec
ss
aas
cmp
pop
stc
and
mov
and
aaa
retf
mov
pop
das
sbb
shl
(bad)
mov
mov
mov
jne
pop
pushf
and
and
pop
stos
cmp
mov
loope
in
adc
icebp
dec
mov
mov
fisttp
dec
div
mov
stc
pop
pop
xchg
mov
pop
sub
cli
(bad)
jb
xchg
leave
(bad)
rol
sub
xchg
inc
mov
imul
retf
lea
pop
dec
fist
mov
mov
mov
or
imul
iret
add
cmp
mov
aam
pop
and
je
enter
mov
mov
es
jns
xchg
(bad)
(bad)
and
(bad)
pop
aaa
ins
into
and
ja
das
js
into
or
cmps
or
push
and
mov
jns
and
dec
aad
xchg
mov
sbb
inc
xchg
aas
sbb
idiv
mov
sbb
loope
fdivr
sub
(bad)
aam
xchg
jp
enter
add
(bad)
cmps
jmp
ss
aad
cmp
cs
cmp
in
call
jb
dec
aas
push
sbb
dec
fisub
mov
stos
jle
mov
scas
jge
sbb
pop
nop
repz
jg
les
(bad)
dec
fimul
adc
push
push
movs
mov
cmp
ja
(bad)
imul
dec
pop
mov
mov
lods
lock
aas
cmps
mov
mov
xchg
xchg
add
bnd
sti
ret
ins
xchg
shl
and
push
cmc
(bad)
cwde
dec
xchg
scas
scas
dec
xchg
adc
and
pop
and
dec
xor
inc
fcom
sub
adc
fist
arpl
jb
ror
es
xor
cdq
stos
xchg
aad
mov
mov
add
mov
in
xlat
cdq
setno
daa
clc
out
and
pop
sbb
xchg
jmp
fist
jmp
jecxz
xor
rcl
pushf
hlt
xor
mov
adc
mov
pop
inc
push
mov
loop
sbb
scas
mov
inc
mov
aas
shl
aam
ja
push
js
aas
je
push
cli
sbb
mov
cwde
rcl
cwde
mov
je
sahf
je
ins
test
jns
pop
je
in
mov
add
imul
cmp
jbe
cmp
in
fs
lods
int
mov
push
ss
les
jno
xchg
push
test
rcr
or
rcl
cmp
(bad)
fwait
xchg
std
out
xor
xor
dec
ins
jp
lock
adc
enter
inc
dec
or
mov
cmp
hlt
rep
jmp
pop
fsubr
xchg
movs
mov
fldenv
mov
adc
jl
fdivr
jb
inc
jmp
popf
inc
dec
or
pop
icebp
dec
jo
outs
loop
fcmovnb
ja
push
add
shl
add
add
or
sahf
xchg
aad
or
hlt
inc
xchg
dec
add
mov
and
push
rol
imul
inc
jbe
aaa
fs
pop
xor
mov
jbe
mov
arpl
cli
add
jo
mov
inc
int3
pusha
jg
repnz
jmp
adc
or
test
mov
bound
pop
shl
pushf
imul
or
jb
add
lods
retf
sbb
repnz
sbb
push
jno
hlt
fld
jno
sbb
imul
xchg
xchg
inc
stc
inc
les
ins
add
push
fnstsw
xchg
jnp
add
cmps
sbb
fcomp
mov
sbb
int3
add
stc
sahf
add
pop
retf
pop
adc
mov
jmp
push
jle
sub
sub
sahf
jmp
mov
popf
stos
push
mov
ficomp
jno
mov
test
aaa
pushf
dec
lds
xchg
pop
sbb
addr16
adc
or
retf
lods
pop
or
inc
leave
loopne
out
lods
fnsave
sub
and
and
arpl
sbb
mov
jo
sti
xchg
xchg
jno
jg
je
(bad)
pop
push
push
std
movs
js
cmps
and
int
mov
cmp
mov
and
and
out
ins
out
mov
xchg
cmp
push
pop
xchg
mov
test
pop
fistp
push
lock
push
sub
mov
icebp
pop
xor
mov
pushf
lods
fwait
xchg
add
fisttp
sbb
(bad)
cmp
and
loop
in
jmp
scas
jg
pop
push
repz
(bad)
fidivr
adc
(bad)
jns
aaa
push
mov
mov
jg
outs
adc
inc
jmp
mov
and
mov
jge
movs
pop
imul
and
xchg
or
into
mov
jnp
test
leave
mov
push
imul
xor
push
scas
sbb
jbe
pushaw
add
enter
cmp
jmp
movs
jb
mov
out
xor
imul
or
ja
pop
mov
inc
mov
sub
hlt
(bad)
fcomi
inc
ins
push
shl
fsubrp
inc
jbe
test
and
push
cmps
dec
outs
sub
push
pop
cwde
inc
mov
cmp
mov
scas
mov
push
mov
lods
xchg
cmp
mov
movs
xchg
pop
out
gs
jle
jns
sti
data16
or
out
mov
sub
stos
retf
rcr
or
ins
(bad)
test
fist
movs
repz
xor
rol
cmc
scas
in
retf
int
movs
loopne
arpl
xor
cdq
ret
stos
push
fwait
std
jge
add
add
push
sub
mov
(bad)
in
xchg
cmp
cmp
movs
into
or
add
daa
test
push
cld
add
mov
shl
push
sahf
mov
mov
ja
in
xlat
xor
adc
stos
push
outs
adc
pop
push
cli
stc
add
jmp
mov
or
repnz
pop
xchg
pop
sbb
add
mov
adc
fsub
adc
jle
lods
test
out
ror
cmps
cmp
dec
setns
out
xchg
cli
mov
inc
pop
inc
push
sar
mov
sub
and
mov
mov
jge
stos
lock
das
aad
pop
add
xchg
dec
inc
dec
pop
sub
push
out
repnz
ror
mov
jbe
retf
js
inc
mov
neg
jge
ret
inc
cmp
dec
inc
dec
push
push
shl
adc
pop
inc
into
out
fmul
xchg
cmp
ds
mov
dec
xor
test
push
ret
sahf
adc
imul
icebp
or
jne
push
lahf
push
fs
fs
mov
mov
mov
xchg
mov
or
or
mov
mov
sub
retf
lds
lahf
lock
xor
jae
repnz
inc
retf
mov
inc
push
retf
shl
ret
jmp
or
jp
sbb
(bad)
mul
outs
xor
dec
stos
int
mov
xchg
or
dec
inc
xor
test
push
xchg
jge
outs
call
xor
cli
(bad)
mov
or
jno
ins
pop
lahf
loop
xchg
xchg
mov
loop
scas
or
test
punpcklbw
sti
fdiv
pop
dec
call
and
out
ins
jecxz
loopne
rol
nop
dec
addr16
push
rcl
jmp
xor
xor
jno
aam
hlt
mov
mul
pop
in
loope
adc
cmp
(bad)
jbe
shr
mov
shr
cmp
jno
imul
(bad)
and
inc
enter
mov
in
mov
mov
jns
ds
ror
in
retf
popa
fwait
adc
das
push
and
push
repnz
(bad)
adc
int3
rcl
nop
(bad)
adc
cmp
sbb
jp
or
adc
test
inc
pop
lods
loope
jae
movs
sub
inc
ins
push
sbb
xchg
cmc
and
loope
popf
lea
add
aad
loope
mov
mov
cdq
jo
(bad)
repnz
lods
xchg
fmul
jl
popf
lods
fcmovne
inc
lods
aam
cmps
and
sti
gs
retf
iret
pop
mov
mov
jge
int
dec
add
dec
sbb
outs
cmovns
bound
and
xor
inc
cmp
pop
imul
mov
gs
aam
fdivr
dec
inc
je
jecxz
les
and
adc
jne
pop
gs
and
pop
add
scas
stos
aas
cli
mov
jmp
and
repnz
es
adc
out
inc
jno
mov
and
push
inc
and
arpl
ja
xor
scas
sbb
sub
imul
and
(bad)
movs
jbe
sub
into
push
icebp
outs
out
and
shl
jne
push
pop
inc
mov
or
dec
psraw
push
pop
push
addr16
or
repnz
pop
jo
retf
inc
mov
cmc
sbb
mul
repz
mov
test
mov
out
imul
ins
cmps
inc
test
mov
xor
mov
pop
fs
or
cmps
mov
clc
adc
outs
pop
mov
out
out
mov
movs
fist
mov
outs
fs
int3
sub
sbb
stc
push
push
hlt
daa
mov
in
stos
shl
xchg
mov
pop
cld
sbb
push
mov
jbe
or
ja
mov
cli
and
rcl
push
cmp
mov
scas
lods
push
jae
mov
int
xchg
adc
add
mov
sbb
lods
add
mov
xor
out
sahf
test
xchg
test
scas
dec
stos
cs
hlt
add
add
dec
pop
or
jmp
fcom
add
clc
sub
jbe
loopne
xchg
inc
xchg
or
sbb
test
sub
push
test
sub
adc
dec
fisub
mov
mov
xchg
xchg
or
in
inc
popa
pop
cmp
xor
ja
lock
sahf
mov
data16
call
pause
cmp
(bad)
cs
pop
es
iret
data16
pop
mov
clc
ret
mov
xlat
inc
icebp
cmp
xor
test
dec
inc
and
movs
lds
rcl
int
pop
jmp
or
les
int3
lock
call
ret
cmp
or
(bad)
ins
adc
arpl
add
push
inc
into
aaa
mov
jmp
movs
dec
jecxz
add
dec
neg
lds
sub
loop
adc
xchg
in
and
and
(bad)
xlat
cwde
xor
add
je
bound
test
repz
repnz
jb
mov
sbb
aaa
lock
stc
mov
cld
adc
aaa
jmp
or
sub
int
lds
mov
loope
xlat
jno
adc
xchg
mov
and
jge
call
jmp
mov
icebp
loope
jmp
stc
sti
in
rcl
jns
mov
cmp
mov
xchg
pop
push
loope
aas
jmp
in
ret
data16
xor
rcl
(bad)
push
les
sub
mov
xor
gs
push
push
xchg
add
movs
popf
pop
xchg
add
int3
hlt
and
inc
scas
fild
ins
push
sub
mov
cmp
lahf
xor
sbb
push
inc
push
(bad)
shl
xchg
jmp
aam
xchg
cmp
mov
cld
or
adc
scas
mov
ins
mov
sahf
push
jecxz
xchg
pop
int3
ins
jno
push
push
xor
push
mov
fmul
daa
in
aas
or
xor
and
test
inc
mov
aas
mov
jns
cld
cmp
mov
es
jb
inc
push
iret
loope
sub
inc
xor
add
fisub
ret
cmp
jns
sbb
mov
inc
xor
sbb
mov
(bad)
loop
hlt
cmovs
mov
mov
jmp
xor
mov
sub
lock
sub
sahf
add
in
test
jns
pusha
es
cli
cmp
mov
xor
xor
hlt
test
cmps
daa
out
repz
jae
sub
pop
mov
or
(bad)
or
dec
xchg
jp
repnz
jp
push
cmp
test
fwait
and
loopne
neg
leave
outs
pop
sbb
cmp
cmp
jmp
and
xchg
out
mov
dec
test
sbb
xchg
test
xlat
pop
test
mov
push
add
adc
movs
imul
xchg
jb
mov
icebp
mov
pop
cli
mov
or
pop
ret
mov
xchg
jg
xchg
imul
sub
cs
dec
test
push
jo
and
mov
sbb
sbb
std
test
xchg
fcmove
ss
test
ins
imul
hlt
sbb
int
jg
inc
mov
mov
jle
daa
and
cmps
rol
cmp
or
jno
outs
pop
js
sub
out
dec
mov
dec
dec
mov
sbb
xchg
inc
dec
push
loopne
(bad)
lds
dec
lock
xor
scas
int
aad
je
cmps
repnz
sbb
push
xchg
xor
dec
int
mov
scas
ret
(bad)
mov
in
cmc
cmp
ret
push
popf
inc
fisttp
sbb
or
push
mov
mov
inc
cmp
call
adc
fnstenv
xchg
inc
ins
adc
inc
xor
inc
dec
dec
sbb
lahf
daa
cmp
jbe
movs
pusha
inc
(bad)
in
jl
jmp
sub
(bad)
aad
or
test
push
jmp
ss
jno
push
leave
xor
dec
pop
lods
stos
pushf
cmps
or
mov
es
leave
aad
sub
nop
sahf
push
leave
xchg
and
sub
push
jle
aaa
ins
adc
cmps
push
mov
push
inc
cli
xchg
ss
fwait
xchg
sub
push
mov
and
dec
dec
fucomip
sbb
jecxz
stos
pop
frstor
fild
aam
jne
scas
xchg
fisttp
shl
cmp
jle
scas
inc
pop
das
hlt
jg
test
jl
aaa
retf
aaa
dec
mov
sbb
sbb
inc
hlt
imul
pop
xchg
or
sbb
nop
stc
jmp
es
(bad)
jge
jmp
je
scas
jl
add
push
outs
mov
mov
mul
add
imul
sub
push
test
fucomp
test
icebp
sbb
jo
or
sbb
sub
xchg
adc
or
data16
out
sub
pushf
or
ss
or
out
sub
ss
or
fidiv
and
xchg
jmp
rcl
and
pop
retf
adc
or
push
inc
sbb
ins
out
cmp
leave
in
mov
mov
xchg
pop
push
pop
loope
and
xchg
out
push
cmp
mov
pop
sahf
idiv
lods
std
mov
out
jnp
xor
jns
xchg
cmp
ds
xor
add
adc
or
into
stc
shl
xchg
pop
retf
ror
jl
je
(bad)
pop
jno
retf
imul
inc
jle
mov
inc
xor
add
iret
and
pop
(bad)
cs
fsubr
(bad)
adc
cmp
into
(bad)
adc
cmp
pop
add
cwde
sub
push
sub
mov
loop
adc
(bad)
or
stos
or
int3
inc
pusha
fs
imul
pop
or
or
cmps
sub
mov
sub
adc
or
xchg
xchg
out
push
pop
adc
cmp
jle
dec
push
dec
jmp
iret
dec
pop
popa
arpl
nop
sub
jmp
cmp
cmp
arpl
cmp
enter
jns
call
cmps
pop
mov
shr
aam
pop
sbb
daa
pop
jb
rcl
adc
fwait
adc
xchg
add
sar
jecxz
sbb
add
mov
cmp
pop
jmp
dec
enter
fucomip
test
mov
pop
cli
xor
and
pop
pop
mov
mov
jmp
mov
lods
inc
jp
jmp
mov
jo
mov
push
inc
inc
jns
stos
mov
jo
mov
cmps
shr
sbb
fidiv
les
into
mov
add
push
aas
inc
and
dec
jb
pop
fmul
jmp
pop
dec
pop
sub
sub
(bad)
mov
adc
jo
out
mov
mov
sub
jmp
popa
jge
test
inc
cmp
sti
fst
stc
push
xchg
outs
mov
or
or
loope
jne
pop
and
pop
push
pop
or
xchg
jns
loope
cmp
add
enter
das
pop
pop
test
stc
lods
lock
add
pop
jo
popa
push
dec
ja
push
cmp
iret
xor
loopne
jecxz
(bad)
repz
pop
mov
out
cmp
xor
dec
sbb
mov
adc
mov
push
push
test
xor
retf
jo
shr
push
and
inc
pop
xlat
add
jmp
and
inc
sub
fs
rcr
arpl
rcl
inc
jbe
in
(bad)
out
loop
loop
or
not
jbe
mov
push
sub
sbb
ret
lods
popf
lock
xor
leave
mov
xchg
call
rol
call
sahf
push
pushw
jp
popa
test
jmp
dec
inc
dec
xor
cli
inc
mov
ins
clc
pusha
sbb
sub
cmp
pop
cmp
push
in
jle
sti
add
or
mov
scas
test
xor
sbb
lods
mov
add
pushf
pusha
cmc
xchg
and
jae
dec
outs
xlat
cmp
test
sahf
ds
test
cld
pop
jg
out
mov
sbb
push
mov
adc
xor
mov
daa
mov
add
mov
push
(bad)
fsubr
dec
sbb
mov
lods
xchg
mov
add
inc
add
mov
cwde
mov
xor
add
fwait
aam
adc
stc
cdq
add
imul
(bad)
jbe
(bad)
(bad)
(bad)
mov
push
jnp
jmp
pop
push
push
pop
icebp
inc
sbb
mov
dec
add
or
addr16
push
sub
into
fadd
lds
cmp
jmp
in
or
aad
inc
in
inc
pop
pop
sub
mov
mov
and
loop
(bad)
cmps
adc
or
jnp
es
dec
cli
jb
stc
add
push
daa
stos
scas
test
hlt
add
mov
jg
out
out
mov
and
ret
inc
sub
pusha
mov
out
jge
aam
out
add
rcr
stos
inc
lock
sbb
sbb
sub
adc
cmp
sub
add
mov
cdq
sbb
jmp
mov
mov
xchg
cmps
mov
fdivr
popf
mov
adc
nop
fwait
lock
mov
in
push
xor
dec
xor
mov
das
xchg
jnp
cmps
jecxz
or
shl
mov
pusha
sbb
push
push
hlt
dec
call
dec
call
out
xchg
icebp
pop
and
loope
xor
lahf
cwde
inc
arpl
cmc
leave
std
inc
push
jle
mov
ret
jg
xor
and
jle
mov
and
pop
mov
stos
iret
test
movs
neg
pop
sbb
pushf
push
pop
in
push
xor
retf
push
(bad)
push
gs
xchg
or
int
sar
out
sbb
popa
ds
xchg
cmp
test
push
jle
mov
mov
jnp
inc
popf
push
and
cmc
cmp
es
bound
out
push
mov
aam
inc
call
jp
sbb
mov
jne
xchg
and
fwait
mov
mov
mov
or
aas
test
scas
xchg
rcl
mov
cdq
loopne
xor
dec
xchg
ret
xchg
jnp
std
ins
addr16
cmp
leave
mov
xchg
enter
fwait
add
dec
or
ins
aad
dec
mov
test
loop
mov
pop
mov
mov
mov
lea
push
aam
mov
mov
mov
rcr
jb
sbb
pop
lea
je
inc
outs
sub
mov
ficomp
xchg
push
adc
adc
cmp
stos
push
arpl
jae
inc
fdivr
or
adc
mov
outs
stc
mov
mov
xor
adc
(bad)
pop
repnz
jmp
xchg
rcl
pop
push
and
rcl
xchg
je
mov
dec
mov
outs
dec
int
clc
pop
dec
out
xor
xchg
std
fdivp
push
or
ret
mov
or
rol
fcom
pop
fwait
movs
cmp
retf
std
test
cmp
push
mov
dec
imul
icebp
inc
ret
mov
fild
nop
mov
mov
jns
cmps
mov
aam
mov
(bad)
cdq
push
je
fadd
jp
xor
out
or
mov
push
aas
movs
aam
mov
ja
sub
adc
dec
cs
dec
lods
mov
mov
mov
mov
(bad)
inc
xchg
sub
mov
mov
in
mov
add
cmp
push
mov
cwde
data16
rol
out
arpl
cli
cli
cmp
xchg
xchg
outs
push
jb
and
or
loope
pop
push
idiv
bound
adc
pop
mov
dec
mul
pop
jmp
mov
inc
push
mov
mov
jb
call
sub
mov
cs
fwait
jo
jmp
out
add
aam
cmps
mov
ret
sub
push
in
mov
ins
mov
cmp
retf
jl
xor
mov
lahf
std
lods
sbb
lods
shl
mov
push
ret
and
and
in
push
inc
mov
xor
lods
xchg
les
mov
push
add
add
cmp
dec
inc
stc
loope
or
int3
test
(bad)
or
add
sub
xor
fdivr
enter
ja
jne
cmp
outs
cwde
and
std
mov
mov
les
push
pop
cmp
sbb
mov
shr
pop
mov
xor
or
leave
dec
pop
test
xchg
dec
aad
imul
and
std
cmps
push
mov
stc
movs
retf
push
(bad)
iret
adc
(bad)
or
fcmovu
ins
fcomp
lods
cmp
cli
mov
or
fsub
sub
inc
outs
mov
out
loope
imul
sub
hlt
pop
cmp
mov
mov
retf
xor
mov
jge
push
pop
xchg
mov
dec
sti
cmp
add
leave
lea
mov
ins
test
dec
frstor
in
fcmovnu
pop
imul
cmp
std
mov
dec
data16
mov
je
adc
cld
ins
call
push
sbb
push
xchg
xor
pusha
mov
adc
aas
sti
pushf
retf
scas
movs
lods
outs
call
cwde
mov
aas
iret
push
add
or
les
cmp
and
pop
mov
jg
push
mov
mov
popa
cwde
in
mov
and
cld
mov
das
lahf
push
mov
shr
mov
aaa
cmp
stc
pop
daa
and
mov
jecxz
jo
mov
mov
pusha
clc
nop
mov
imul
js
push
jmp
les
retf
pop
mov
pop
lods
pop
dec
aam
(bad)
out
rcr
stc
push
pop
add
sbb
adc
popa
repnz
sbb
les
(bad)
into
mov
ds
xchg
fldcw
pop
pop
out
mov
cmp
cld
in
outs
outs
xchg
cmp
pop
nop
inc
rcl
jae
ret
dec
shl
int3
mov
jge
out
jnp
aaa
fadd
pop
fcmovu
sbb
mov
loopne
xor
cmp
jmp
jns
and
xor
in
rcr
cs
mov
add
int3
sub
push
jge
mov
inc
in
scas
adc
mov
dec
dec
and
mov
(bad)
or
mov
adc
bound
clc
enter
fwait
shl
mov
and
and
inc
jecxz
xchg
jae
fdivr
add
mov
lods
cmp
out
dec
cmp
(bad)
call
ret
cmp
cmp
mov
jo
sbb
pop
js
dec
push
scas
mov
lahf
push
mov
adc
xchg
pusha
dec
popf
dec
sub
xor
inc
sub
in
test
add
sub
jmp
test
out
or
jg
stos
(bad)
xchg
repnz
lahf
push
inc
adc
ds
mov
lds
cld
iret
add
aad
mov
jmp
(bad)
loop
cmp
ror
adc
add
jae
scas
daa
int3
repnz
fmul
(bad)
xchg
mov
js
test
xchg
xor
mov
imul
ret
xchg
add
imul
ds
xor
mov
cwde
loope
sbb
not
push
(bad)
and
aaa
pop
jge
sbb
adc
sti
popf
int3
push
xchg
or
push
retf
retf
pop
scas
cmp
pop
jno
mov
lods
or
inc
sbb
in
sub
in
or
ret
aad
sahf
popf
fst
xor
add
retf
mov
rol
sub
sahf
xchg
inc
inc
add
jnp
sahf
sahf
(bad)
call
ins
mov
or
and
loopne
sahf
jle
ffree
push
scas
sti
adc
push
mov
lds
(bad)
out
jp
push
sbb
jle
push
sub
mov
pop
pop
mov
movs
xchg
mov
mov
jo
push
mov
mov
je
fistp
cli
sub
es
push
sbb
pop
iret
or
xor
rcl
xor
mov
adc
outs
xchg
push
dec
iret
jae
ins
cdq
sbb
hlt
popf
aas
mov
std
retf
clc
cmps
cli
popf
pop
or
xchg
mov
adc
inc
call
sub
push
je
jmp
leave
fwait
shr
fist
loopne
dec
push
ret
into
in
xchg
and
cmc
push
clc
pop
ins
cmp
inc
push
lods
bsr
fsub
jp
rcl
mov
jle
sbb
pop
mov
imul
aaa
mov
inc
test
loope
lea
add
and
push
push
retf
movs
push
ret
ins
je
xor
fidivr
mov
xor
rol
sbb
rol
imul
and
sub
fucomip
adc
not
mov
das
inc
cld
fcomp
call
rcl
xor
imul
loop
pop
aas
nop
dec
and
into
dec
mov
cmp
sbb
into
nop
mov
cmp
add
adc
xchg
cmps
ins
(bad)
(bad)
adc
or
or
mov
popa
dec
(bad)
lock
cld
fisttp
mov
jp
ja
or
scas
xchg
mov
jno
dec
in
add
fiadd
and
mov
cmps
xchg
cmp
xor
xor
mov
sbb
inc
xor
xor
ss
pop
cdq
test
ins
outs
mov
add
and
sbb
cld
les
pop
out
cmp
dec
or
cwde
push
sub
adc
sar
or
or
dec
xchg
fcom
stos
xor
das
stc
cmovnp
mov
mov
push
dec
shl
dec
pop
in
pop
fcom
fild
pop
fiadd
mov
sahf
jns
out
and
cmps
add
(bad)
pushf
mov
ror
sub
push
pop
repnz
enter
sub
and
(bad)
pop
adc
pop
xor
inc
xchg
mov
pop
in
call
add
daa
push
(bad)
jecxz
xor
loope
mov
fwait
(bad)
arpl
test
fwait
jo
dec
push
into
das
or
inc
int
sahf
cmp
dec
mov
sub
aas
xlat
mov
mov
push
xor
fidivr
sar
outs
scas
aas
fcmovnu
inc
xchg
mov
(bad)
mov
adc
add
in
pop
xlat
push
popf
(bad)
add
sahf
mov
and
call
sub
jo
ja
and
push
in
or
inc
div
jle
adc
jmp
in
or
xor
inc
lds
mov
fcom
fnsave
sahf
addr16
add
data16
in
ins
push
ret
push
sahf
in
push
mov
shl
xor
dec
bound
jns
nop
mov
imul
mov
idiv
mov
jbe
pop
fild
iret
pop
movs
xor
add
adc
clc
mov
and
js
xor
ja
add
mov
cmps
pusha
sub
cdq
mov
hlt
push
dec
gs
inc
jb
clc
push
mov
mov
mov
jnp
fxam
pop
cmp
(bad)
ins
sbb
out
into
dec
stc
cmp
mov
cmp
scas
xchg
lods
xchg
pop
(bad)
cmc
sub
or
aas
mov
jno
push
shl
jmp
mov
adc
jbe
fidivr
mov
test
int
lock
lahf
xchg
inc
dec
xor
mov
add
pusha
xchg
push
lea
xor
test
push
xor
and
nop
or
push
fs
pop
cdq
dec
sbb
pop
xchg
outs
inc
loop
aas
cmps
sub
mov
ins
sub
mov
stc
(bad)
aas
dec
in
sub
xor
cmp
mov
pop
inc
outs
call
jno
out
and
xor
popf
out
(bad)
leave
sar
int3
imul
inc
mov
inc
mov
popa
mov
test
and
mov
xor
lods
push
push
lock
call
cmp
jo
mov
outs
pop
adc
nop
test
mov
(bad)
repnz
pop
mov
push
cs
es
sub
in
lods
xor
ins
(bad)
jge
icebp
stc
pop
movs
or
jae
cdq
dec
(bad)
push
test
xor
loop
aam
push
out
out
mov
cdq
dec
pusha
xchg
pusha
push
repz
push
fld
cmps
nop
and
mov
xor
int
and
push
in
mov
ja
lahf
xchg
test
cld
push
ins
mov
pop
xor
mov
lods
push
xor
pop
out
inc
fisub
push
test
(bad)
out
fsub
pop
ds
sub
adc
xchg
mov
push
push
ins
scas
shl
movs
lds
into
or
push
ins
aaa
xchg
js
jo
or
xchg
sub
fidiv
gs
adc
xchg
leave
retf
xor
aaa
sbb
das
xor
mov
jns
xor
loopne
mov
loop
(bad)
(bad)
ret
in
jb
lahf
or
lahf
mov
xor
outs
ja
jmp
aad
(bad)
cmps
push
dec
xchg
pop
jge
sbb
pop
imul
add
push
rcl
mov
jbe
sub
mov
add
jecxz
dec
jnp
adc
xchg
or
jb
mov
test
add
fistp
pextrw
xor
loop
aas
leave
(bad)
push
ins
stc
pop
add
retf
idiv
imul
test
sbb
inc
movs
mov
mov
pop
mov
xor
pop
xlat
xchg
add
pop
jmp
sbb
sub
pop
ss
push
shl
pop
test
(bad)
adc
shl
call
rcl
xchg
sub
xchg
into
(bad)
retf
and
int3
mov
shr
push
dec
sbb
int3
out
xor
mov
xchg
mov
clc
(bad)
in
mov
dec
jae
mov
rcl
and
sub
sti
test
dec
dec
dec
dec
jp
jmp
mov
std
sbb
or
pop
cmp
test
loopne
adc
jo
pop
push
push
cmp
or
inc
lods
les
aam
adc
loop
inc
movs
imul
sbb
and
push
in
pop
xchg
daa
jnp
je
mov
jno
sub
jecxz
test
inc
add
push
in
adc
push
or
mov
test
dec
out
in
jno
push
mov
stos
cmp
pop
lea
sbb
pop
sub
pop
sub
pop
loop
hlt
(bad)
push
cmps
inc
pop
outs
adc
mov
mov
sbb
mov
dec
out
shr
mov
inc
xchg
jb
xchg
sub
or
cmp
ret
sub
sub
(bad)
push
jmp
and
cmps
dec
cmps
lods
sbb
xor
daa
jbe
xchg
xchg
fldcw
arpl
xchg
in
stos
das
jne
jge
push
movs
jo
call
out
lock
into
arpl
mov
movs
adc
leave
xchg
retf
lea
sub
xchg
(bad)
sahf
or
and
pop
push
cs
test
enter
fst
pop
pop
and
mov
add
adc
cmp
pop
add
push
ins
sub
shr
add
js
xchg
push
hlt
dec
mov
fisttp
or
jno
jo
mov
push
cs
jmp
pop
enter
cmps
xchg
lods
(bad)
jo
jae
pop
repz
mov
ds
and
nop
(bad)
idiv
imul
lods
stos
fcomp
dec
xchg
adc
shr
and
(bad)
call
inc
sub
pusha
mov
pop
fstp
pusha
adc
pop
fsub
xchg
xchg
mov
(bad)
fstp
cmp
daa
jns
icebp
mov
jmp
iret
adc
sbb
leave
add
retf
jnp
pop
(bad)
jge
or
ja
loopne
fisttp
dec
sti
fs
sub
and
rcl
adc
cli
adc
jo
jnp
pop
fwait
or
fist
les
fst
int3
jge
xor
xchg
xchg
ins
fadd
mov
cmps
pop
les
sti
fadd
xor
out
adc
je
mov
dec
ins
cmc
(bad)
xor
inc
and
inc
jge
or
stc
mov
jmp
icebp
jb
add
push
in
pushw
inc
push
adc
stos
jl
jb
scas
mov
cs
sar
pop
(bad)
fxch
out
pop
or
ret
push
jmp
fsubr
cs
call
(bad)
cmps
cdq
into
(bad)
cld
mov
cmp
jge
in
pop
xor
mov
cmp
ja
or
je
mov
add
inc
mov
fistp
mov
push
in
and
pop
fidiv
cld
sbb
(bad)
stos
sbb
sub
popf
stc
push
jl
mov
mov
dec
add
add
mov
jle
nop
sbb
cmp
adc
gs
lea
stos
shr
out
in
pop
mov
stos
dec
mov
ds
add
sahf
aas
dec
mov
adc
jecxz
mov
fbld
fistp
jnp
mov
imul
inc
mov
out
lahf
sub
pop
call
sti
enter
in
mov
out
pop
jns
das
test
mov
shr
scas
lds
cmp
sub
popf
daa
rol
lock
mov
and
push
or
pandn
repnz
jo
inc
xchg
mov
iret
sub
mov
sub
dec
pop
dec
mov
retf
in
and
mov
repz
mov
imul
mov
jo
cmp
rcl
fnsave
pusha
movs
pop
and
(bad)
icebp
std
aas
jle
or
lods
sbb
push
sbb
jecxz
or
or
call
xchg
int
imul
cmp
je
loope
nop
adc
xchg
stos
call
mov
sub
inc
loope
mov
add
sbb
jnp
stos
stc
sub
cmc
lods
loopne
jecxz
xor
or
mov
mov
cmp
ds
(bad)
retf
xor
mov
pop
sub
xchg
icebp
cmc
cs
lahf
pop
imul
fmul
ja
into
lock
sub
push
out
jnp
add
add
and
jne
out
imul
jns
mov
into
and
int
adc
and
mov
sub
dec
xlat
loope
fprem1
xor
hlt
and
cmps
push
sub
cmps
cld
mov
gs
out
mov
push
mov
and
test
mov
mov
inc
pop
inc
(bad)
(bad)
retf
jp
mov
mov
pop
ja
and
add
outs
inc
iret
cli
rcl
jl
shr
sub
xchg
es
movs
mov
xor
sbb
adc
jnp
popf
dec
xchg
dec
scas
inc
je
pop
int3
test
sub
nop
aam
xchg
adc
xor
pop
and
scas
mov
into
lods
lods
lods
neg
popa
mov
jnp
pop
or
adc
cmps
push
dec
ins
inc
jl
aam
repz
mov
and
xor
inc
fwait
sbb
call
mov
push
inc
imul
sti
adc
not
cmp
mov
jne
imul
fmul
sub
ins
dec
repnz
fisub
sbb
xchg
lock
jo
mov
xor
stos
push
icebp
jl
push
and
into
hlt
add
dec
push
adc
test
adc
cmp
test
stos
adc
sti
iret
mov
adc
xchg
aaa
aaa
xchg
xchg
mov
dec
mov
mov
sbb
push
jecxz
jae
cmp
cmp
cs
cld
sbb
in
jae
or
(bad)
fmul
xchg
cs
pop
cmp
arpl
ret
bound
lea
sub
aad
mov
cld
push
xchg
rcl
and
push
push
mov
std
mov
iret
popf
add
push
pop
daa
or
in
fstp
xchg
jae
(bad)
adc
or
bound
mov
mov
aad
mov
iret
test
dec
push
aas
add
add
rcr
scas
cli
outs
cmc
cmp
xor
cmp
jbe
jbe
pop
call
dec
repnz
jmp
(bad)
push
mov
mov
cli
stos
mov
iret
out
movs
mov
pushf
xchg
ret
sbb
sahf
cmp
mov
xor
dec
clc
lds
xlat
sub
jg
movs
(bad)
push
add
icebp
ret
retf
out
jae
jecxz
sub
push
sub
aad
add
jmp
push
sub
jecxz
iret
adc
loopne
cwde
xor
dec
inc
sbb
(bad)
test
rol
js
and
out
stc
fst
mov
lods
jns
mov
xor
xor
mov
iret
enter
arpl
pop
jmp
shr
or
out
fcomp
sbb
dec
scas
and
xchg
push
imul
out
xor
scas
lock
sahf
xlat
xchg
mov
std
inc
jg
adc
lods
pop
sbb
push
push
call
scas
lahf
es
adc
(bad)
push
mov
push
cdq
lock
loope
or
inc
shl
dec
rcr
xchg
(bad)
push
fimul
add
retf
cmp
mov
in
adc
int
xchg
push
push
push
lahf
das
fst
fidiv
add
xchg
inc
cmp
(bad)
in
popa
retf
and
iret
push
(bad)
ins
imul
mov
mov
dec
std
mov
jnp
fnstenv
sbb
imul
(bad)
push
jmp
adc
(bad)
lea
out
pop
addr16
sub
scas
xor
aaa
inc
aas
out
fwait
lea
and
sbb
mov
jns
cmp
or
int
ror
(bad)
xor
mov
cs
shr
sbb
dec
pop
ss
aam
push
jl
shl
mov
adc
fsubr
mov
jmp
in
sbb
pop
movs
jl
test
mov
(bad)
mov
mov
jmp
or
mov
pop
inc
mov
cmp
cmp
int
ss
push
jae
(bad)
(bad)
enter
fcomp
fild
fcmovnbe
sub
push
push
inc
sti
mov
inc
mov
dec
mov
jge
pop
loop
add
and
lods
xchg
arpl
add
dec
cdq
sbb
adc
jo
outs
fisttp
jecxz
inc
test
and
shr
jle
shl
out
add
cld
pop
xchg
mov
cmc
movs
jmp
dec
fidiv
dec
ds
push
shl
pop
sub
test
xchg
movs
repnz
adc
add
les
hlt
rol
int
cmp
add
call
dec
sub
int
cmps
and
bnd
(bad)
stc
rcl
adc
mov
fs
pop
cld
fwait
leave
jg
aaa
jbe
popa
in
(bad)
pop
shl
in
sub
pop
pop
or
stos
inc
mov
sbb
call
jmp
test
addr16
aaa
pop
(bad)
iret
rcr
jmp
mov
xchg
outs
std
mov
int
add
mov
retf
jb
sbb
sti
stos
xor
sbb
mov
rcr
xchg
cmp
jo
push
hlt
in
pop
add
inc
mov
call
cmp
mov
xor
xchg
cwde
lods
cmps
adc
gs
push
sub
cmp
sbb
jmp
sub
icebp
out
and
push
mov
or
dec
mov
and
out
pop
mov
dec
hlt
and
addr16
fwait
or
out
sbb
inc
data16
mov
das
jb
jbe
loopne
fs
dec
fs
xchg
jecxz
lea
jl
pop
mov
in
imul
jnp
fidivr
out
les
push
mov
dec
out
in
adc
pop
mov
popf
xchg
(bad)
shl
das
push
jbe
int3
repz
pop
sbb
jp
adc
mov
imul
xor
retf
push
add
mov
pop
xchg
and
scas
adc
xor
and
push
xchg
cmps
xchg
sbb
cmp
fild
fisttp
push
es
xor
repnz
ret
int3
push
jmp
cmps
pushf
sahf
in
dec
ret
lock
jle
xchg
mov
js
pop
dec
sub
mov
mov
scas
inc
xor
data16
not
and
shl
std
jecxz
fiadd
xchg
movs
pop
dec
js
cli
cmp
mov
add
or
cdq
cwde
xchg
lods
daa
test
and
sbb
stos
push
sti
jo
pop
les
pop
ror
retf
fidiv
fwait
sahf
mov
jns
shl
and
mov
and
inc
mov
mov
push
neg
(bad)
adc
(bad)
jle
or
mul
or
loop
xchg
jae
in
push
mov
pusha
jns
push
push
movs
pop
jmp
adc
pop
test
xchg
xchg
in
inc
es
xchg
mov
js
sub
jne
popa
mov
cmp
sti
push
sbb
(bad)
(bad)
inc
and
loop
pop
test
inc
jns
pop
dec
movs
ins
mov
gs
aad
icebp
arpl
or
mov
push
js
cwde
cmps
leave
mov
test
xor
and
lahf
inc
ins
jno
hlt
into
outs
lahf
sub
(bad)
mov
test
(bad)
mov
cmps
std
push
jo
inc
mov
imul
cmps
ja
or
fld
adc
repnz
push
sbb
loopne
pop
push
mov
push
pop
cmp
fidivr
or
mov
push
jmp
ret
test
or
cmp
inc
mov
or
retf
cld
cmp
imul
adc
dec
pop
imul
retf
leave
cmc
push
outs
ficomp
xchg
pop
imul
test
cmp
push
sub
(bad)
ins
cmp
push
les
add
ret
loope
(bad)
imul
sbb
dec
or
xchg
adc
fs
or
loop
fimul
clc
mov
mov
std
scas
mov
adc
ds
jle
add
test
pop
jecxz
dec
mov
fidivr
cmp
loopne
fcmovnb
aam
push
arpl
adc
add
in
retf
popa
ins
in
jmp
xor
movs
sbb
jmp
xchg
out
stos
or
jp
popf
mov
xchg
mov
lock
fistp
lds
test
mov
and
call
cmp
outs
push
ret
inc
test
ja
xor
push
xchg
fadd
jno
xchg
jge
mov
inc
idiv
lock
sahf
cmc
lahf
loop
cwde
dec
sbb
adc
sub
cdq
lock
ins
adc
mov
push
mov
aad
call
cld
gs
arpl
sti
push
imul
ja
add
pop
int3
and
stos
dec
loope
mov
mov
int
pop
sub
cmp
out
and
ins
cdq
mov
push
sbb
jbe
or
ret
sbb
pop
retf
dec
aad
outs
into
sub
mov
sti
sub
mov
push
mov
xchg
mov
sub
inc
adc
add
out
cdq
xor
aad
test
ins
dec
repnz
or
or
fs
or
loop
cmps
scas
or
cmp
adc
mov
ret
shl
mov
jne
mov
inc
minps
sbb
cli
clc
add
fwait
bound
out
xlat
(bad)
jge
mov
dec
sub
xchg
repz
jg
mov
xor
call
sub
mov
fisub
or
loope
xchg
int3
imul
imul
push
(bad)
imul
loope
mov
cmp
push
mov
pop
imul
dec
(bad)
mov
call
pop
mov
dec
(bad)
out
mov
fs
(bad)
loope
sub
cmp
aas
ror
cdq
ja
call
ins
(bad)
(bad)
sbb
mov
repz
out
sub
pop
rol
inc
pop
sbb
sbb
fs
inc
and
xchg
push
call
sti
or
aad
push
cmp
stc
out
sbb
fldcw
pop
loop
jmp
clc
ret
jbe
lahf
lds
ja
add
dec
(bad)
sub
pop
jl
(bad)
cmps
dec
addr16
cmp
sbb
or
mov
ds
jmp
sub
out
sahf
nop
ja
mov
jne
sbb
xlat
cdq
vpcmpeqw
xor
sbb
loopne
mov
bound
xchg
mov
sub
mov
out
enter
mov
push
aaa
mov
jbe
je
sub
nop
jmp
adc
adc
dec
retf
jecxz
(bad)
cmovp
pop
adc
stc
push
xchg
push
inc
jge
stos
cmp
and
call
mov
pop
fistp
neg
cmp
pop
inc
push
xor
mov
mov
mov
pop
sub
adc
ret
jne
dec
movs
mov
mov
cwde
sti
sbb
xlat
mov
add
or
mov
rcr
sbb
cdq
call
aas
sbb
cmp
push
mov
pop
push
fst
xor
pop
rcr
jns
mov
and
pop
xor
scas
dec
adc
lahf
xor
clc
pop
xchg
dec
push
sbb
mov
int3
jbe
mov
jae
out
xor
cmp
jns
xlat
mov
lahf
jb
add
sbb
jo
inc
adc
(bad)
sub
cmps
mov
inc
(bad)
mov
pop
mov
mov
push
cmc
arpl
adc
cli
mov
test
div
or
or
sbb
and
adc
inc
imul
mov
popf
int3
outs
fsubp
inc
lea
gs
test
iret
sbb
sub
inc
retf
jge
jge
outs
and
das
mov
mov
mov
into
mul
mov
adc
dec
push
mov
mov
adc
mul
push
push
hlt
xchg
add
dec
mov
stos
lods
mov
adc
mov
pop
ins
inc
sar
or
and
popa
mov
adc
mov
in
int
(bad)
cmps
shl
pop
cli
pop
ins
pop
mov
push
sub
dec
inc
mov
cmp
xor
vmovshdup
push
sub
jns
rcr
fimul
cmp
cld
xchg
fist
fstp
mov
jecxz
sar
pop
shr
inc
push
or
sub
dec
dec
cmps
cmp
pop
leave
and
xchg
add
pop
outs
cdq
jge
cmps
cwde
call
mov
xlat
lahf
mov
(bad)
into
js
int
das
xor
add
fstp
test
push
jnp
fdivrp
jge
mov
xchg
fnstsw
je
in
loop
mov
shl
sbb
rcr
mov
in
fbld
push
les
mov
jne
add
xchg
xchg
loop
dec
je
not
sbb
push
aaa
pop
pop
daa
ss
add
cld
call
cdq
and
aas
add
sbb
add
movups
xchg
rcr
shl
push
add
test
in
xor
imul
call
popa
stc
inc
cmps
cmp
mov
into
sub
in
add
in
add
rcr
repz
mov
test
push
in
ss
xchg
arpl
push
jmp
pop
sbb
inc
xor
push
mov
pushf
dec
stos
xchg
sbb
popa
mov
cmps
push
adc
or
jg
bound
cli
scas
cs
xchg
stos
cli
dec
mov
mov
fisubr
jo
and
test
data16
jl
nop
lahf
jne
cld
hlt
add
dec
push
addr16
xchg
mov
push
xor
jno
(bad)
push
imul
out
popa
popf
xchg
inc
cli
or
aaa
xor
and
xor
test
imul
lahf
cmp
jae
add
repz
adc
and
aas
push
aas
mov
pop
aad
add
xlat
outs
daa
cvtpi2ps
lss
std
add
mov
(bad)
mov
into
stos
ss
sar
jecxz
fild
imul
xchg
sub
ds
xlat
or
jp
test
out
fistp
jb
dec
lds
add
lahf
mov
aas
xchg
movs
jmp
sbb
adc
or
aam
loope
hlt
inc
pop
mov
fldcw
sbb
pop
adc
ja
div
xchg
push
cmp
pop
dec
mov
and
adc
cmp
popa
ins
sahf
xlat
dec
ss
mov
jno
xchg
push
mov
add
jge
sub
push
sub
cmp
mov
es
loop
jno
jmp
enter
jbe
psadbw
xchg
sar
jecxz
adc
fldenv
mov
or
add
or
iret
loopne
adc
jecxz
xchg
pop
mov
adc
pop
aaa
cmp
stos
sub
jb
add
aam
pop
adc
lods
not
xor
pop
xchg
and
push
mov
mov
inc
xor
addr16
xor
pushf
jno
cmp
or
mov
enter
popf
mov
pop
mov
addr16
mov
jl
and
pushf
idiv
sbb
adc
movs
pop
cmp
aam
cmp
sti
jle
and
add
ins
pop
and
leave
call
xchg
push
jle
sub
aam
cmp
add
loopne
scas
pusha
jg
sbb
sub
scas
pusha
jns
xor
jnp
out
icebp
ficomp
js
cs
test
cmp
jge
int3
das
xchg
cmp
sub
or
cwde
in
sar
bound
jmp
and
sub
repz
dec
inc
pusha
nop
add
test
call
div
imul
sub
icebp
sub
and
cwde
mov
out
jecxz
sbb
mov
jecxz
loopne
pusha
push
jo
adc
cmp
icebp
push
cmp
sbb
push
xlat
add
loopne
push
mov
repz
inc
aaa
and
push
mov
and
enter
fcom
jnp
(bad)
repnz
(bad)
cld
jecxz
xchg
add
aas
pop
ss
(bad)
lods
inc
jo
jl
ins
mov
xor
repz
dec
jmp
sahf
stc
aas
xchg
outs
pushf
aas
mov
fistp
jnp
pop
or
inc
xchg
push
add
jl
scas
xchg
shr
cmp
jns
xor
pop
xor
ret
imul
adc
sti
xchg
jnp
(bad)
out
rcl
ficom
rol
stos
xor
add
test
or
out
add
add
push
lods
stos
iret
push
inc
jge
dec
loop
xchg
mov
pop
cmp
sub
xchg
adc
sbb
sub
and
xor
dec
imul
add
xchg
xchg
cmp
mov
xchg
sahf
sub
sub
push
sbb
mov
in
(bad)
loopne
enter
test
adc
sbb
jge
pop
cld
xor
xchg
in
lea
add
mov
sub
iret
js
mov
inc
not
pop
gs
xor
bound
xchg
outs
and
push
xchg
ins
sub
je
mov
inc
cli
cmps
mov
xchg
icebp
outs
neg
shr
sub
xor
push
xchg
outs
je
popf
movs
test
cmp
retf
jle
xchg
xchg
ins
loopne
test
hlt
push
ror
mov
and
cmp
(bad)
xchg
push
sub
jno
and
imul
test
or
into
mov
icebp
push
(bad)
cmc
and
aam
pop
shl
cmp
mov
dec
call
add
xchg
inc
push
outs
pop
sub
jp
fs
sub
and
add
or
and
xor
sub
sbb
xor
mov
push
frstor
xor
pop
jecxz
fnstsw
push
dec
sub
mov
add
and
aam
je
xchg
(bad)
push
loopne
xor
aad
outs
inc
aad
push
stos
cmp
lock
push
mov
call
mov
(bad)
hlt
je
xchg
mov
leave
cli
std
adc
sbb
push
ins
and
xchg
into
jo
rcr
call
dec
mov
cmp
mov
shr
mov
stos
lahf
ret
icebp
jmp
jns
push
adc
movs
push
jmp
mov
loopne
(bad)
rol
push
sub
retf
sub
clc
xor
cmp
retf
outs
(bad)
jge
inc
cmp
sbb
addr16
pusha
loopne
sub
or
push
sbb
(bad)
test
(bad)
ins
xchg
inc
adc
dec
push
pop
push
aas
xchg
push
push
jnp
mov
or
mov
mov
rcl
or
sub
xor
ret
push
cmp
jecxz
push
imul
test
add
imul
test
jno
and
dec
enter
xor
(bad)
jp
mov
cmp
pop
xor
sar
xor
inc
in
pop
xchg
pop
(bad)
aam
mov
push
sub
lods
xor
jbe
cs
mov
and
(bad)
dec
push
loope
xchg
(bad)
jp
loope
sar
add
bound
repnz
push
push
mov
aaa
ret
popa
loop
or
push
pop
addr16
into
shl
xchg
popa
out
jno
sti
and
mov
xchg
mov
loop
outs
and
in
stos
inc
add
sti
fcomi
fiadd
daa
inc
sub
lahf
push
mov
in
mov
dec
cld
adc
lods
int
js
add
shl
mov
xor
ds
xchg
rcl
inc
xchg
xchg
rol
mov
add
fmul
test
shl
retf
popa
stos
fmul
inc
mov
mov
in
je
push
cs
xchg
xor
cmp
ret
inc
scas
sub
inc
ror
(bad)
and
jae
jmp
loop
mov
(bad)
push
div
sub
clc
push
xchg
outs
dec
lea
jmp
jp
fnstenv
sahf
es
(bad)
dec
xor
(bad)
pop
sbb
je
cs
mov
stos
pop
push
dec
sbb
test
adc
mov
fisubr
sbb
je
scas
mov
xor
sub
dec
and
sbb
push
jge
cld
retf
cwde
adc
js
mov
(bad)
adc
popa
pop
repnz
or
ja
sub
(bad)
hlt
dec
aas
pop
imul
jle
add
les
test
xchg
data16
ja
cmp
and
stos
push
gs
jmp
arpl
adc
loopne
dec
test
lea
push
inc
les
inc
int3
or
dec
add
call
push
cs
mov
out
sub
jmp
(bad)
mov
rcl
inc
stos
test
dec
add
add
xor
inc
jns
jp
push
add
pop
xor
dec
and
push
and
sbb
pop
sub
das
cmp
inc
adc
loopne
sbb
xchg
retf
mov
cmp
lods
int
iret
cmc
mov
jg
push
cmps
sub
fst
int
cdq
int
and
(bad)
add
sub
sub
adc
fnsave
inc
and
sub
ret
sub
retf
stos
sub
mov
sub
dec
shl
jbe
arpl
lea
repz
xchg
retf
pop
sub
cld
in
fst
inc
jge
adc
jnp
outs
and
packuswb
enter
mov
jb
jle
add
sbb
imul
outs
dec
sub
cmc
push
dec
and
sahf
xchg
retf
std
jle
rcl
aaa
add
mov
cmps
arpl
in
scas
or
ds
cmc
sub
sbb
ret
xchg
mov
jb
cmp
dec
xor
lahf
jl
dec
pop
pushf
mov
xchg
add
fld
add
repz
dec
lock
test
test
push
cld
test
cmps
and
int3
xor
hlt
lds
xchg
(bad)
and
shl
sti
stos
cwde
push
dec
lods
outs
loop
xor
jmp
pop
out
mov
pop
mov
mov
xchg
xor
or
mov
mov
pop
cdq
mov
clc
push
(bad)
(bad)
out
push
scas
jl
in
imul
mov
fnstenv
or
mov
pop
lock
mov
xor
inc
jb
adc
ins
push
in
test
sbb
mov
jg
mov
(bad)
sub
push
cli
out
aas
dec
mov
retf
imul
mov
push
out
outs
mul
sub
(bad)
xor
into
xor
jbe
std
movs
push
xchg
push
cld
sbb
xchg
dec
popf
mov
push
ret
pusha
push
jl
jle
push
dec
into
inc
sub
sub
movs
jecxz
push
js
or
sub
mov
sbb
push
mov
or
ds
and
lahf
shr
xchg
xchg
mov
xchg
lea
fstp
sti
sbb
cli
push
pop
pushf
enter
or
jecxz
arpl
sub
and
push
cli
imul
dec
mov
dec
push
add
xlat
adc
out
ret
into
inc
xor
hlt
add
daa
mov
and
mov
pop
adc
add
or
sbb
(bad)
jecxz
sub
aaa
or
sahf
out
imul
test
ret
dec
cmp
lock
jns
pop
sahf
xchg
hlt
sti
es
popf
push
ja
ins
push
sti
movs
mov
outs
ror
cmc
mov
(bad)
enter
cs
mov
sbb
fdiv
ins
cmp
cmp
dec
arpl
dec
pop
fiadd
cld
out
sub
xlat
push
pop
adc
mov
push
jmp
sbb
icebp
xchg
jb
popa
loopne
pop
fst
call
mov
iret
std
enter
outs
fadd
loop
mov
cmp
pusha
js
inc
inc
mov
scas
std
jmp
test
pushf
jg
shr
xchg
lea
fcomp
adc
fwait
sub
outs
or
jae
adc
push
sbb
and
push
mov
jb
mov
movq
cwde
push
inc
mov
hlt
test
jae
mov
arpl
and
movs
cld
and
fcomi
jb
cmp
es
sti
mov
jbe
fstp
sbb
push
in
test
dec
or
out
jb
sub
jae
and
pusha
hlt
sbb
xchg
and
shr
mov
mov
iret
ficom
dec
gs
mov
retf
movs
jle
cmp
xchg
push
mov
test
(bad)
mov
das
xchg
push
xchg
lahf
call
out
rcl
bound
stos
mov
rol
in
jne
outs
inc
retf
and
mov
cmps
outs
popf
sbb
dec
jae
and
mov
xlat
(bad)
icebp
out
scas
dec
cmp
mov
add
jnp
xchg
sub
adc
inc
sbb
mov
cmc
xchg
jnp
fstp
stos
sahf
enter
push
push
sub
xchg
sbb
xlat
test
and
push
push
imul
shl
call
cmps
dec
sbb
mov
ins
cmp
sbb
sub
push
push
cmp
sahf
pop
cmc
inc
(bad)
scas
das
aaa
cmc
aad
inc
out
sub
inc
ret
or
es
es
fdiv
imul
inc
call
inc
popf
daa
sbb
ds
aam
dec
sbb
loopne
hlt
mov
rcr
xor
xchg
loop
adc
mov
xchg
sub
loop
xor
adc
push
(bad)
pop
dec
push
test
nop
jb
cmp
mov
inc
and
out
mov
jo
fistp
pop
mov
sbb
dec
mov
xchg
push
and
fcmovbe
pop
rep
push
fidiv
arpl
ret
rcl
ret
and
cmp
ror
scas
outs
and
and
pushf
adc
cmps
(bad)
in
out
imul
mov
int3
lods
popa
fld
cmp
repnz
ss
std
(bad)
pop
jb
inc
dec
test
xchg
cmp
ret
xlat
add
jo
push
in
pop
sub
cmp
xor
aam
sar
shl
mov
rcl
jmp
mov
invd
jmp
sub
push
push
push
dec
pop
scas
movs
aas
inc
imul
mov
xchg
xchg
(bad)
add
jbe
fdivr
fcom
outs
outs
mov
adc
cs
push
xlat
sub
add
ret
and
out
aad
repnz
add
jle
mov
inc
dec
iret
adc
(bad)
test
int
sub
xchg
test
dec
ficomp
adc
imul
test
add
out
sub
imul
push
inc
lds
imul
or
cmovp
leave
cli
mov
loope
push
mov
loopne
sub
xlat
xor
leave
out
aaa
sahf
mov
lahf
and
inc
lahf
mov
xchg
dec
nop
fisttp
xor
mov
xchg
sahf
pop
mov
stos
sbb
mov
jno
mov
popa
inc
inc
cmp
imul
or
fisubr
and
jb
sub
xchg
shl
lods
aas
fwait
pop
ins
xchg
out
sbb
jle
imul
push
sub
out
lods
aaa
mov
imul
add
adc
fdivr
fwait
ja
in
or
movs
movs
(bad)
adc
sub
mov
cmp
stc
scas
iret
push
rcr
sub
pop
dec
and
(bad)
mov
into
test
movs
mov
mov
xchg
mov
mov
aas
jle
xor
popf
pop
mov
movs
je
push
sbb
fstp
sub
xchg
mov
push
leave
sbb
jnp
stc
sbb
mov
(bad)
addr16
pop
out
or
rcr
and
and
cli
pop
stos
sbb
aas
jmp
cwde
sbb
div
pop
psrld
dec
and
push
pushf
xor
call
into
push
mov
lods
sbb
xchg
xchg
std
jmp
add
shl
inc
(bad)
int3
or
aas
std
div
jle
dec
lock
stos
ins
jge
dec
pushf
mov
cmovae
outs
ins
popa
fdivrp
push
or
movs
or
and
int
ins
in
rcl
xchg
cmp
or
add
pop
xchg
mov
cmp
daa
pop
pop
int3
mov
lea
rcl
imul
push
mov
sbb
xchg
popa
dec
mov
or
loopne
cmps
ja
push
movs
pop
sub
xor
adc
mov
jb
(bad)
fadd
and
adc
push
ss
xor
cli
test
and
add
daa
retf
out
inc
jg
out
push
xchg
test
pop
in
pop
popa
jbe
(bad)
adc
jl
data16
or
movs
or
and
(bad)
adc
gs
mov
nop
pushf
retf
pop
jp
stos
or
sbb
and
jmp
shl
in
inc
icebp
jecxz
add
test
out
mov
lock
mov
jle
sub
stc
mov
into
xlat
aaa
mov
call
inc
or
nop
out
loop
and
stos
in
inc
(bad)
scas
jle
lahf
lds
in
arpl
push
push
or
fnstcw
inc
fbstp
or
sub
adc
psubusb
adc
xor
and
leave
test
jge
dec
jg
and
pop
pop
leave
into
jb
dec
rcr
clc
add
jb
movs
cmps
out
or
dec
xchg
jle
cmps
sub
stos
and
outs
shr
push
push
mov
mov
adc
mov
sub
add
repnz
adc
mov
sbb
prefetch
mov
sub
sbb
adc
jbe
fisubr
xlat
rol
adc
xor
mov
sbb
inc
movs
push
(bad)
xchg
mov
xor
cmp
pushf
add
sbb
shr
cli
mov
fst
xchg
push
mov
(bad)
inc
stos
xchg
jg
call
aam
mov
clc
sub
pushw
jecxz
dec
mov
sub
mov
retf
xor
jl
mov
cwde
out
xor
sahf
fild
rcl
and
into
or
scas
add
jae
ret
push
div
add
cmp
in
push
sbb
push
sub
fnsave
add
jo
pushf
fnstenv
adc
jmp
dec
mov
js
push
adc
dec
je
pop
in
xor
ds
cmp
inc
call
imul
mov
xor
daa
sbb
jmp
adc
fsubp
ret
mov
cmps
mov
mov
adc
cmp
stc
es
shr
aaa
in
sub
xor
cld
pop
loop
into
jmp
stos
xchg
adc
neg
dec
out
xor
scas
retf
fild
jge
inc
pusha
sbb
fst
adc
mov
and
mov
data16
rcl
push
pop
repnz
sub
and
int
test
fbstp
enter
sub
push
xchg
leave
push
jge
enter
je
push
lods
ret
fistp
sar
mov
add
jne
out
pop
sbb
or
test
sbb
mov
adc
fisubr
jmp
adc
rcr
and
dec
jo
(bad)
jmp
or
push
push
in
(bad)
clc
cwde
inc
mov
sbb
lea
dec
and
mov
jae
adc
inc
mov
and
imul
sbb
sahf
sub
pop
dec
lea
cmps
(bad)
jle
cmp
sub
into
cmp
mov
inc
sbb
rcl
outs
bound
les
jle
outs
or
sub
pop
push
push
les
outs
sub
(bad)
mov
cdq
push
shl
push
scas
je
push
repz
pop
gs
lods
sub
sbb
inc
dec
xchg
popa
out
repz
stos
push
adc
or
dec
outs
xlat
mov
xchg
sub
mov
mov
push
clc
inc
ret
lahf
test
mov
cmp
cld
cmps
jge
adc
jns
mov
or
jnp
call
mov
mov
add
dec
mov
fsubr
test
xor
and
lahf
inc
fcomp
retf
imul
mov
xor
pushf
out
ret
scas
mov
cmp
imul
push
dec
push
jg
mov
cmp
sbb
xor
aas
and
mov
jmp
out
adc
enter
jge
fisubr
movs
outs
dec
or
icebp
repz
cdq
dec
ds
xchg
xchg
es
or
icebp
repnz
jnp
mov
mov
jle
fs
into
mov
add
pushf
es
(bad)
xchg
adc
mov
push
idiv
mov
inc
call
inc
sub
jg
dec
cmp
xor
jb
mov
cmp
cmp
sub
sub
push
jne
push
dec
mov
(bad)
cmp
aam
arpl
in
jecxz
mov
cli
add
inc
and
(bad)
ja
fwait
and
hlt
out
dec
push
adc
push
mov
pop
sub
lea
push
jmp
ins
adc
cwde
push
dec
and
inc
daa
dec
loope
(bad)
sub
mov
sub
(bad)
icebp
mov
inc
loopne
cmps
mov
ja
ret
mov
dec
loop
out
int
push
xor
xchg
and
fldenv
xchg
(bad)
dec
movs
in
adc
ins
retf
mov
rcl
sub
lock
cmp
mov
sub
push
ins
add
test
icebp
jnp
call
in
rol
mov
(bad)
js
lock
test
mov
and
sbb
push
(bad)
inc
mov
add
mov
add
cmp
xchg
xor
ficom
sbb
loopne
or
daa
mov
nop
hlt
adc
(bad)
lock
mov
jmp
jg
test
fcomi
aaa
mov
retf
loope
enter
push
cmc
dec
mov
movs
xor
cmp
jae
fs
inc
sbb
cmp
or
xchg
and
mov
jle
push
dec
add
or
add
fiadd
jbe
(bad)
inc
mov
les
sbb
cmps
inc
gs
js
push
or
in
div
jb
outs
(bad)
push
cmp
jecxz
jge
mov
mov
ins
push
jbe
fcomp
sub
scas
gs
lods
mov
and
jns
jo
jmp
xor
mov
pop
cmps
jo
dec
imul
rcl
cli
adc
shl
into
mov
ss
mov
xor
xor
push
pushf
ins
shr
out
ror
or
mov
xor
xchg
mov
inc
adc
jmp
jp
add
cmp
cmps
push
add
push
push
sub
push
and
pop
out
xor
push
fild
jge
mov
sti
or
fidiv
iret
mov
shl
adc
pop
iret
ins
std
in
pop
das
aad
inc
outs
movs
jl
scas
in
dec
push
in
jb
push
je
pop
retf
jns
int3
jns
icebp
cmps
test
int
mov
lock
or
sub
cld
jne
xchg
into
ja
push
mov
(bad)
xchg
xchg
sbb
iret
shr
out
xor
imul
mov
sahf
popa
cwde
sub
mov
xchg
xor
dec
rcr
int3
(bad)
pop
pop
jmp
adc
(bad)
aaa
call
or
dec
sar
sbb
shr
inc
cld
sbb
pop
mov
mov
cmp
nop
ds
dec
sbb
out
dec
mov
popf
lods
push
fild
or
popaw
arpl
pushf
dec
fcomp
dec
ror
push
pop
push
mov
int3
scas
xor
jg
cmps
sar
test
mov
das
mov
dec
dec
mov
repz
cmp
sbb
std
bound
ins
inc
and
retf
xchg
add
sub
jl
pusha
lea
daa
out
cmp
dec
(bad)
push
adc
xchg
cmc
lahf
scas
jmp
mov
add
daa
pop
sub
lds
xchg
(bad)
test
leave
mov
imul
dec
sahf
ss
and
xchg
(bad)
jae
fsubr
hlt
adc
sub
pop
sbb
in
out
repnz
in
inc
pop
cmps
mov
cld
or
mov
mov
jmp
call
dec
and
fstp
dec
jo
adc
iret
jge
bound
mov
jge
cwde
je
inc
add
cmps
pop
aam
scas
ss
inc
arpl
sbb
inc
fcom
xor
mov
out
mov
sub
push
mov
imul
ins
int
in
rol
cld
dec
in
adc
pusha
pop
pminsw
and
adc
outs
mov
in
enter
aaa
lods
in
sahf
inc
push
in
cwde
ret
imul
ss
push
add
pop
repnz
(bad)
out
popf
add
jle
in
test
ss
ret
xor
jnp
ret
(bad)
ss
loope
jmp
pop
mov
push
push
sub
cmp
dec
enter
add
imul
lods
gs
jo
xchg
mov
xchg
fldcw
sub
movs
cmps
add
jmp
iret
rcl
xor
jae
jg
call
shl
push
push
ret
and
mov
mov
inc
rcr
in
jle
jecxz
sbb
mov
cmps
cmc
xor
out
aas
cmp
outs
sbb
and
jnp
cmp
in
in
pop
cmp
xchg
lds
sub
retf
xchg
cmp
popf
in
inc
ficomp
std
retf
sti
fs
sbb
xor
cmps
mov
test
mov
pop
lock
jmp
or
fdiv
shr
push
ror
shl
pop
add
pop
movs
xchg
mov
scas
or
dec
pop
pop
xor
pop
and
push
or
dec
xor
adc
data16
add
movs
pop
nop
call
cmc
movs
fimul
dec
adc
sub
(bad)
out
aad
je
into
jmp
std
addr16
repnz
jbe
arpl
sbb
xchg
hlt
or
mov
xor
cld
sub
sub
dec
clc
adc
add
mov
or
bound
add
ret
jmp
inc
mov
cmps
lods
xchg
test
jge
and
rcr
clc
aam
add
mov
je
addr16
and
dec
(bad)
and
cmps
inc
sbb
add
ret
or
stos
jo
mov
setge
pop
adc
jmp
push
mov
mov
adc
mov
or
vaddsubpd
cmp
mov
repz
pop
lods
push
xor
push
(bad)
xchg
aad
pop
adc
dec
cmp
inc
or
out
ins
and
mov
push
mov
and
sar
jns
out
stc
aas
cwde
pop
push
dec
pop
daa
xor
and
mov
sbb
ror
jo
xor
fdiv
dec
sbb
jo
or
cs
inc
or
pushf
pop
inc
add
fistp
cli
outs
icebp
push
stos
xor
aam
mov
pop
push
in
lds
sub
pusha
push
retf
scas
stc
hlt
cmps
(bad)
adc
mov
mov
bound
mov
rol
das
push
into
out
int3
mov
dec
cmp
and
mov
call
xchg
mov
pop
xor
std
pushf
pop
xor
mov
idiv
int3
imul
in
fidiv
repnz
cmp
xchg
not
shl
lock
je
int3
adc
ror
jbe
push
cld
icebp
mov
stc
mov
adc
fnstsw
pop
sub
outs
adc
adc
std
test
retf
jae
shr
bound
inc
ja
xor
out
jnp
out
retf
fnstsw
into
or
or
cli
pop
mov
test
cmp
pop
xchg
ds
aad
mov
mov
sbb
xor
xchg
mov
bound
cmc
pop
pop
xor
or
int3
dec
jmp
cwde
lods
mov
mov
sub
mov
fdivr
add
mov
sub
std
dec
jg
push
cmps
add
in
imul
retf
dec
nop
mov
inc
sub
mov
test
or
ret
movs
sbb
sbb
inc
arpl
inc
jg
scas
cmc
ins
les
inc
push
not
je
loope
sub
cmp
cs
dec
rol
mov
ja
and
jl
fdivp
scas
xchg
scas
es
dec
or
pop
mov
imul
xchg
pop
sbb
mov
xchg
xor
dec
add
push
movs
dec
sub
pop
sbb
ror
lock
jae
setle
sbb
push
test
js
cmp
sbb
push
cld
push
sti
jno
in
and
fisub
jle
lods
mov
mov
add
loop
pop
daa
imul
lahf
jl
pop
mov
outs
shl
popf
push
dec
mov
sti
retf
test
push
jge
jb
inc
jecxz
call
rcr
pop
xchg
mov
in
sbb
xchg
xchg
push
add
push
mov
int3
getsec
or
mov
fdivr
push
cmps
ror
sbb
scas
pusha
fld
dec
dec
xchg
popf
mov
pop
data16
and
pop
test
cmc
mov
adc
pop
xchg
addr16
adc
cmp
mov
scas
ret
retf
cmps
inc
(bad)
pop
mov
sbb
mov
loopne
jo
push
rcl
repz
bound
push
lods
sbb
je
outs
test
push
and
jb
arpl
loope
sahf
xchg
push
jmp
pop
lea
xor
xor
jo
mov
jns
inc
inc
jecxz
ja
cmp
jno
addr16
in
cwde
daa
mov
xor
popa
repnz
mov
dec
cwde
and
jae
ret
psubb
rcr
push
or
xchg
cs
sar
fisub
gs
test
jge
js
dec
push
add
scas
xchg
xor
hlt
xor
dec
adc
(bad)
jbe
inc
cmc
lahf
mov
adc
iret
xchg
adc
jmp
jb
add
jae
adc
mov
fiadd
nop
mov
test
mov
je
cmp
scas
add
in
fdecstp
repnz
aas
or
test
add
ror
jl
mov
push
popa
push
mov
mov
call
shl
and
adc
push
loope
(bad)
mov
test
sub
push
mov
in
xchg
pusha
push
inc
stc
lea
xchg
add
xor
ficomp
aad
aas
mov
loop
push
bound
sti
jnp
push
ins
in
push
mov
sub
aaa
icebp
fs
push
adc
sbb
addr16
mov
dec
icebp
sub
shl
stos
add
(bad)
fstp
je
mov
sub
mov
bnd
or
mov
clc
es
sbb
cmp
or
mov
(bad)
mov
das
(bad)
cmps
inc
xchg
ror
inc
adc
cmp
fs
test
fsubp
jp
adc
mov
push
xchg
test
clc
dec
sbb
pop
imul
sub
xchg
mov
repnz
outs
add
scas
(bad)
in
jno
xor
cmps
gs
or
adc
push
call
pop
clc
pop
add
in
ins
fistp
jmp
sub
into
je
mov
sub
sbb
stos
mov
fcomp
xor
daa
xchg
push
fld
(bad)
push
mov
pop
cmp
shrd
in
imul
adc
xor
xor
fdivr
scas
fld
ret
cld
movs
xchg
cmp
pushf
js
aam
pop
cmc
or
retf
push
(bad)
mov
cs
xchg
repnz
pop
inc
jno
test
push
sbb
hlt
scas
sbb
jb
out
push
or
dec
lods
xor
mov
das
iret
cmp
push
dec
fs
ret
ins
add
jle
and
and
int
xchg
and
in
cmp
mov
and
push
xor
cmp
mov
cmp
cmp
fwait
test
fsubr
loopne
cmps
fld
sbb
push
cmps
test
ror
xlat
popf
jo
or
pop
sbb
(bad)
push
xchg
scas
or
xlat
inc
div
scas
cmp
dec
dec
or
or
movs
pushf
pop
xchg
out
dec
ja
ins
xchg
mov
(bad)
cmp
mov
int3
mov
cmp
mov
sar
push
cmp
sbb
pop
gs
mov
pop
mov
inc
or
retf
mov
shr
gs
pop
(bad)
ror
fs
xchg
xor
arpl
mov
push
xor
(bad)
mov
shr
(bad)
push
or
xor
sub
cmp
dec
push
pop
sub
jp
int
aaa
push
retf
and
std
adc
out
test
imul
enter
(bad)
shr
and
jp
xchg
add
sbb
aad
sub
imul
xor
pop
dec
sbb
mov
shl
sub
pusha
lahf
out
add
pushf
pop
sahf
sub
inc
and
jno
mov
leave
jno
and
fldcw
call
lea
jmp
ins
enter
in
aam
pop
mov
sub
loope
repz
cmp
and
mul
mov
inc
movs
scas
and
(bad)
sbb
test
dec
sub
cs
(bad)
icebp
xlat
xchg
je
les
fdivrp
aaa
cmc
pop
mov
add
movs
(bad)
lds
sub
mov
loop
pop
cmp
jae
fs
ja
push
xchg
dec
scas
iret
outs
fs
push
add
(bad)
jp
ins
in
adc
mov
mov
xor
movs
iret
ret
loop
mov
sbb
pop
hlt
outs
ficomp
dec
cmp
cld
pop
scas
cmps
sar
or
jge
iret
jp
push
jp
push
aad
xor
sbb
dec
fmulp
ret
xchg
dec
jg
ds
ret
popa
shl
adc
fmul
cmps
jge
jb
jns
sbb
and
pop
rdpmc
and
lock
pop
pusha
fidiv
and
js
mov
lock
test
jo
mov
mov
mov
fidiv
imul
in
push
sub
ret
movs
pop
add
push
in
inc
xchg
mov
scas
fisubr
sbb
xchg
mov
and
and
mov
xor
jno
popa
sahf
jecxz
(bad)
push
mov
mov
mov
push
pop
inc
cmp
jne
or
aad
fucomi
jns
jp
fnsave
mov
cmp
pushf
in
jns
bound
dec
leave
ins
and
out
mov
add
(bad)
js
jmp
fisttp
daa
arpl
in
out
mov
mov
xchg
or
test
sbb
sbb
lods
and
push
or
ja
test
pop
mov
in
xchg
add
outs
int3
sub
rcl
push
xor
js
xchg
lods
sbb
cs
inc
retf
pop
cmps
mov
adc
enter
ja
fisttp
xchg
sbb
aaa
or
mov
ss
hlt
inc
jle
pusha
xor
in
daa
jns
movs
popa
dec
unpckhps
call
pushf
or
popa
fdiv
xchg
shr
popa
pop
xchg
or
cmps
dec
jb
cwde
in
cmp
mov
aad
imul
je
dec
mov
and
sub
fild
ret
jne
mov
cmp
mov
xchg
push
movs
inc
push
out
les
out
fnstenv
cli
push
inc
jmp
lds
pop
cwde
stc
retf
mov
mov
push
dec
push
cs
pushf
ins
cmp
and
ins
mov
aas
xchg
rcr
sbb
jo
dec
loope
pop
sub
pop
fidiv
cmc
scas
and
and
push
ret
sbb
cmc
lahf
xchg
add
jnp
call
cmps
nop
shl
add
add
fwait
xchg
loop
mov
jg
mov
call
cdq
lock
add
xor
inc
into
rcr
mov
lds
xchg
scas
jbe
(bad)
xor
jne
das
adc
out
inc
(bad)
xchg
hlt
fcmovu
push
jmp
mov
jge
jmp
push
pop
sbb
mov
aas
test
mov
xchg
repnz
and
and
(bad)
sbb
es
cmp
daa
mov
(bad)
sbb
jae
sub
sub
test
das
jo
dec
movd
or
sbb
add
cwde
mov
adc
fimul
adc
scas
jo
jle
mov
jecxz
pop
sbb
aad
mov
add
inc
clc
mov
(bad)
mov
mov
push
cli
pop
xor
cmp
repz
sbb
mov
not
retf
mov
jmp
jne
xchg
div
adc
ss
xchg
mov
inc
js
jge
jge
sbb
popf
lock
xchg
aam
pop
sub
call
jae
enter
pop
stc
mov
mov
aas
(bad)
call
imul
and
inc
and
pop
xchg
xchg
fisttp
adc
in
outs
aaa
int3
shr
sahf
pusha
fimul
and
mov
xchg
push
cs
sub
jb
aas
ss
jns
aad
pop
cmp
jo
jmp
jno
mov
shl
test
or
fst
ficom
sbb
or
adc
jmp
addr16
xchg
gs
loopne
and
sbb
xchg
xchg
sub
scas
aas
pop
push
pop
clc
ins
pushf
push
inc
xchg
jns
in
cmp
lods
push
dec
sub
dec
xchg
lahf
or
push
cld
pushf
cmps
shl
ret
(bad)
jnp
push
jo
adc
imul
retf
lods
shl
repz
lea
cmp
outs
in
iret
inc
ins
pop
das
xor
lods
pop
pushf
inc
sbb
mov
rcl
or
fucomi
je
cmp
popa
popf
adc
mov
ja
hlt
(bad)
pop
jle
arpl
icebp
movs
or
cmc
inc
loop
add
int3
and
leave
mov
std
xchg
popf
mov
dec
or
inc
ret
ja
jae
pushf
mov
inc
loope
mov
sbb
cmp
enter
mov
push
jo
mov
fs
pop
pop
dec
adc
mov
ret
adc
(bad)
stc
in
sahf
xor
inc
sbb
mov
jbe
retf
sbb
rcr
jle
into
mov
movs
cmp
scas
mov
cmps
out
push
and
jg
(bad)
ds
pop
push
call
dec
loope
out
jge
jne
std
xchg
xor
imul
pop
add
push
enter
or
imul
add
int3
sbb
jge
push
daa
mov
pop
mov
std
mov
and
mov
inc
mov
push
jecxz
xor
xchg
jmp
es
mov
mov
scas
and
stos
adc
mov
sbb
lods
into
adc
movs
hlt
stc
pop
(bad)
fild
int3
adc
cmp
or
out
test
in
jmp
cmp
sbb
popa
leave
fmul
push
leave
sbb
mov
pop
ret
cmps
aam
in
adc
call
push
rcl
in
ja
or
sbb
lods
jae
loope
cmp
pop
add
jp
mov
mov
movs
popa
push
inc
mov
or
xor
test
popa
scas
mov
imul
pop
or
push
cwde
fsincos
inc
dec
loope
mov
jae
jle
test
mov
lods
jne
iret
cmp
std
clc
add
pop
mov
jnp
xchg
or
add
lock
mov
aas
add
push
aas
clc
sti
sbb
shl
sbb
(bad)
ins
dec
sub
sahf
cld
push
xor
dec
fcomip
xchg
dec
lock
fs
repnz
inc
mov
nop
and
and
push
or
aam
add
in
mov
ins
adc
fwait
stos
adc
mov
dec
sbb
adc
(bad)
dec
lahf
scas
xchg
cmps
(bad)
xor
lahf
fisttp
mov
push
mov
inc
lods
ss
add
jo
icebp
(bad)
pop
sbb
sub
icebp
xchg
mov
add
pop
out
jecxz
ds
adc
push
(bad)
jns
add
jae
retf
cs
or
js
pop
cmp
mov
mov
retf
outs
mov
mov
dec
inc
leave
push
adc
cmps
jns
cmp
pop
cmp
fdiv
cmp
and
test
js
iret
cmp
xchg
jo
movs
hlt
xchg
and
into
cwde
add
scas
dec
js
mov
in
mov
std
push
(bad)
cmp
ins
sub
mov
jo
mov
dec
adc
adc
adc
jo
add
dec
xchg
mov
js
packsswb
(bad)
int
imul
add
sub
retf
pushf
cs
mov
(bad)
xchg
dec
lds
add
xor
add
or
mov
stos
popa
call
push
sub
es
pop
imul
xor
xor
mov
test
push
aas
pusha
(bad)
mov
sbb
jae
shl
or
fnstenv
inc
push
jge
cmp
lods
mov
rcr
repnz
in
test
lods
sub
(bad)
mov
call
ret
mul
addr16
pop
fcmove
sbb
mov
mov
sbb
pop
adc
sahf
leave
shl
in
and
pop
outs
fstp
js
push
mov
dec
mov
adc
(bad)
lahf
test
fbstp
test
arpl
cs
xchg
dec
in
push
jo
enter
sub
cmp
not
jno
adc
dec
mov
sbb
push
cwde
sub
repz
(bad)
and
stos
xchg
imul
and
or
and
test
and
jle
aam
mov
push
icebp
inc
jg
sti
add
jmp
jmp
out
add
packuswb
stos
mov
or
mov
js
mov
bound
push
dec
pushf
xchg
add
cwde
dec
sub
fstp
xor
dec
mov
push
loop
cdq
xchg
gs
mov
sar
mov
shr
enter
ins
stos
inc
xor
(bad)
fstp
es
push
mov
iret
xchg
lea
call
imul
arpl
call
xchg
lea
adc
add
and
mov
and
or
push
cli
ret
cs
out
pop
mov
inc
daa
dec
mov
call
arpl
call
(bad)
mov
pop
adc
jb
inc
add
xchg
sub
test
js
and
loopne
test
adc
inc
xchg
lods
lahf
jmp
mov
xchg
jne
out
and
xchg
imul
es
mov
outs
aam
aad
cmp
and
in
mov
sahf
movs
jb
mov
inc
inc
sbb
scas
cmp
stc
or
popf
jp
cli
xchg
pop
mov
mov
or
(bad)
fs
pop
daa
and
pop
sub
imul
xor
xchg
adc
test
push
inc
dec
pop
push
xor
jp
adc
cs
mov
cmp
iret
push
sub
dec
dec
mov
call
aad
sbb
dec
enter
retf
xor
leave
daa
shl
aaa
ja
pop
jg
ret
iret
inc
fisubr
pop
xchg
push
mov
sbb
jp
mov
mov
mov
(bad)
push
(bad)
aaa
sbb
int3
add
sbb
dec
sub
mov
mov
dec
dec
(bad)
xchg
mov
cmp
mov
movs
xchg
mov
in
call
xchg
outs
jecxz
sbb
jle
mov
pop
jecxz
test
js
mov
cmp
dec
imul
push
ficomp
push
movs
sbb
sbb
lahf
jns
cs
les
mov
ret
push
dec
dec
dec
shr
data16
shl
mov
loope
mov
loop
in
jb
and
clc
xchg
mov
enter
dec
sub
test
mov
mov
push
cmp
and
fist
jle
arpl
and
ins
clc
jns
mov
xor
cmc
add
pop
aaa
push
mov
adc
call
mov
cmps
adc
or
nop
arpl
ret
in
jne
xchg
jns
sub
ficom
xchg
int
aam
popa
pop
lea
loop
int3
imul
xchg
adc
outs
(bad)
push
xor
fs
fwait
add
dec
movs
pop
or
cmps
in
addr16
cld
xor
cmp
pushf
jns
lea
sbb
cmp
jns
sub
lahf
xor
push
adc
rcr
popf
into
cmp
addr16
lahf
in
dec
clc
popf
pop
pop
or
fwait
scas
lds
cmp
out
dec
popf
scas
adc
pop
popa
pop
repz
ret
and
xor
(bad)
add
imul
movs
and
add
mov
mov
xlat
sti
das
pop
inc
dec
cmps
sub
jle
loop
adc
cdq
in
inc
pop
stos
in
xchg
add
push
jmp
das
ror
dec
mov
std
push
mov
retf
push
int3
dec
mov
jle
int3
mov
je
mov
push
add
icebp
mov
inc
call
jb
cmps
arpl
sub
imul
inc
fnsave
(bad)
mov
dec
pop
mov
mov
test
rol
cdq
dec
pop
lods
lds
mov
popf
nop
cmp
sub
sub
cmps
mov
cmp
ins
push
aaa
push
pop
push
jge
repnz
adc
push
push
cmps
jg
data16
push
imul
mov
jle
mov
push
test
ins
dec
int
data16
sbb
mov
sbb
mov
mov
das
xor
aad
fs
push
lods
xor
jb
retf
pop
in
jl
inc
movs
and
push
cli
inc
ret
ja
popf
aam
lods
pop
add
(bad)
fldcw
inc
xlat
push
or
(bad)
jmp
xchg
shl
mov
inc
enter
inc
ja
dec
xor
rcl
dec
mov
inc
loopne
fsubr
jle
repnz
xchg
inc
test
shl
imul
mov
push
push
in
stos
std
int
or
nop
xchg
add
mov
dec
stc
push
inc
call
je
mov
sub
jnp
mov
and
and
xchg
lds
and
call
ret
cmp
pop
mov
jle
test
daa
inc
aas
inc
push
cmp
cmps
jnp
inc
mov
jmp
cli
sub
push
jmp
sbb
fwait
mov
mov
fidiv
cmp
lock
mov
and
jmp
push
movs
mov
hlt
cmp
rol
or
repz
jecxz
adc
scas
sbb
or
sbb
mov
add
addr16
lods
adc
inc
and
cmp
nop
xchg
push
jo
adc
lds
add
lods
add
jo
out
outs
outs
out
sub
enter
aad
push
push
and
loopne
cmps
fadd
cwde
imul
ret
hlt
jecxz
cs
fidiv
mul
cmp
or
rol
in
push
jb
pop
and
stos
mov
dec
or
ds
jecxz
push
loop
sub
nop
jmp
cmp
sbb
or
sub
mov
jl
pop
sub
mov
ins
adc
cwde
loop
les
outs
pop
sbb
mov
js
dec
xor
mov
ja
je
hlt
adc
xor
push
cmp
(bad)
fs
repz
xor
ds
ins
mov
repnz
loopne
pop
push
mov
jae
cmps
and
aad
repnz
xlat
adc
pop
push
arpl
int
fnstenv
lahf
in
adc
fisubr
test
stos
rol
dec
shr
cli
aad
cmps
fs
push
pop
ja
iret
xchg
sbb
outs
mov
adc
and
adc
fwait
add
sbb
xchg
cli
or
call
pusha
pusha
push
jns
inc
mov
das
sbb
push
mov
dec
inc
shr
mov
push
mov
add
jnp
sbb
push
mov
inc
inc
mov
gs
ins
xchg
ins
std
cwde
outs
sti
pop
cmp
cmp
xor
sbb
jl
cmp
add
cld
sub
pop
imul
adc
mov
push
jmp
leave
mov
ret
movs
das
jo
lods
loope
xchg
(bad)
cwde
ror
and
cmp
jp
sbb
mov
dec
xor
pop
fxch
ins
mov
in
mov
inc
call
cmc
movs
push
hlt
sub
mov
inc
jnp
inc
daa
pushf
push
dec
in
ja
stc
sbb
or
sbb
lea
xor
cmp
les
lock
int
hlt
repz
(bad)
out
mov
fidivr
popf
loop
ins
sbb
mov
adc
adc
fcom
addr16
dec
sbb
push
stc
mov
loope
mov
xor
mov
addr16
push
in
sbb
push
out
std
xor
mov
ins
xor
(bad)
xchg
imul
pop
enter
cmc
shl
ja
aas
mov
sbb
leave
sub
xchg
test
in
test
or
iret
dec
(bad)
push
adc
dec
or
pop
mov
push
cmc
call
loope
or
cld
out
mov
jl
hlt
or
aas
inc
mov
movs
out
cwde
pusha
inc
or
xchg
dec
xor
pop
inc
das
loop
daa
repnz
repz
sub
sti
or
stc
cmp
pop
add
push
sbb
popa
lock
lock
sti
ss
scas
pop
cmp
mov
dec
scas
pop
xchg
cli
sti
ins
jnp
aad
jbe
dec
nop
cmp
mov
mov
out
retf
adc
cdq
das
movs
xchg
cmps
pop
sbb
fcomi
das
arpl
addr16
mov
mov
int
mov
dec
pop
and
pop
retf
mov
mov
out
jns
les
dec
and
outs
dec
xor
sahf
xlat
sub
lods
xchg
cli
add
arpl
test
nop
les
out
pop
xor
push
add
jo
adc
dec
pop
mov
retw
pop
sbb
lea
arpl
icebp
pop
ss
loop
push
int
ficom
add
mov
jmp
inc
add
pop
imul
pushf
mov
int
in
in
xor
adc
sbb
ins
jmp
cmc
mov
inc
jle
mov
lea
repnz
popa
xchg
rol
xchg
fild
add
cmc
cs
mov
mov
fimul
and
in
loope
jnp
dec
in
xor
mov
test
clc
out
test
jae
lahf
fidiv
and
push
mov
mov
cld
dec
bound
stc
std
iret
mov
(bad)
adc
aas
mov
test
adc
or
cmp
imul
inc
(bad)
mov
add
test
retf
jae
xchg
fnstsw
xchg
call
das
retf
xlat
ds
push
imul
or
or
pusha
ror
push
jmp
pop
lahf
sar
adc
js
mov
lea
sbb
cmc
mov
mov
mov
(bad)
and
cmp
in
jle
(bad)
mov
mov
add
pop
call
add
int3
mov
in
sahf
ss
dec
push
mov
scas
xchg
sbb
inc
mov
push
xchg
in
and
inc
add
out
xchg
dec
pop
ror
mov
lds
sbb
push
popa
fistp
retf
stos
and
add
mov
push
pusha
xchg
add
or
sub
mov
dec
int3
fs
xchg
adc
mov
cmp
aas
sbb
or
and
xchg
or
test
hlt
rep
sbb
adc
cmc
loope
test
test
test
pop
pusha
sbb
out
and
xlat
stc
in
jo
aaa
mov
call
pop
nop
sbb
mov
push
mov
or
dec
xor
sbb
out
data16
xor
repz
ja
sub
push
cmps
adc
inc
mov
stos
cmp
(bad)
mov
nop
test
das
ja
or
fcom
lahf
fwait
mov
pop
(bad)
loope
mov
push
aaa
inc
push
(bad)
clc
repz
push
bound
xchg
xor
loope
add
shl
pop
add
dec
hlt
repz
sub
mov
call
test
nop
and
repz
ja
adc
js
test
repz
cmps
fwait
push
sub
jmp
mov
and
adc
dec
out
push
ins
and
inc
test
test
test
mov
inc
dec
shl
shr
dec
movs
mov
cli
xor
mov
or
addr16
hlt
push
push
mov
push
adc
mov
mov
in
sub
test
lock
pop
call
in
js
jmp
imul
dec
jns
lods
fwait
or
jmp
dec
lds
mov
cmps
jb
sti
dec
ror
pop
iret
add
cld
dec
test
out
mov
lahf
aaa
ds
sub
scas
fdiv
add
and
xor
out
push
xor
jb
inc
xor
adc
fld
imul
cmp
pop
sub
enter
adc
push
add
das
cmp
fbld
jmp
sub
push
and
in
leave
push
push
loope
xor
and
aam
retf
loopne
xor
sar
mov
mov
rdpmc
sbb
sub
cld
add
mov
cmp
mov
lock
cmp
xchg
(bad)
mov
and
jb
fucom
mov
imul
or
aaa
lds
jl
leave
out
(bad)
dec
xchg
jnp
inc
retf
mov
push
test
(bad)
and
pop
fld
ret
fmulp
test
pop
hlt
adc
pushf
jle
and
add
inc
sub
jns
(bad)
mov
adc
bound
push
add
mov
loope
pop
mov
jge
cmc
sti
pop
push
pop
cs
leave
test
pop
nop
and
mov
mov
mov
pop
stos
mov
dec
call
test
mov
mov
push
xchg
add
aas
stos
ja
test
jmp
fcmovu
js
lods
ja
ficom
mov
cmp
mov
adc
mov
and
jge
jp
scas
cmp
mov
add
add
iret
inc
loopne
add
add
(bad)
sbb
mov
retf
xchg
movs
arpl
cmc
rcr
ss
shr
aam
iret
das
punpckhdq
stos
into
sbb
aaa
stc
jbe
xchg
pop
loop
ja
stos
xor
mov
push
push
inc
vcvtss2sd
or
and
pop
mov
cmps
stos
not
pop
cs
xor
sbb
shl
mov
push
jo
aam
jb
mov
pushf
add
shl
or
cmp
and
shl
sbb
jne
test
mul
frstor
fild
pop
and
pop
fdiv
sahf
cmp
push
adc
sbb
mov
sub
loop
cwde
pop
nop
adc
sti
pop
les
dec
mov
sbb
retf
in
push
sub
lods
push
(bad)
in
jecxz
(bad)
retf
retf
cld
sub
(bad)
mov
jg
inc
aam
or
pop
clc
sub
scas
popf
sub
and
jns
outs
cmps
push
add
inc
mov
stos
push
sahf
sub
movs
clc
lods
movs
and
xchg
sbb
mov
jae
mov
xchg
imul
xchg
bound
push
push
mov
jno
push
fisubr
push
std
sub
or
(bad)
xor
cli
jmp
push
fidivr
out
adc
dec
mov
cmp
std
or
inc
xchg
mov
mov
out
xor
push
shr
xor
(bad)
dec
dec
loop
les
push
push
sub
(bad)
or
(bad)
jg
repnz
bswap
frstor
lock
or
mov
xchg
sbb
ins
aaa
sbb
dec
inc
(bad)
loope
xor
and
ffreep
jp
shl
(bad)
pop
push
outs
adc
shr
pop
es
jl
scas
addr16
sub
test
xor
cmp
cmp
pushf
test
in
adc
cmp
stos
push
pop
movs
jne
mov
push
inc
cmc
cmps
call
fsubr
sub
jmp
xchg
or
xlat
xchg
cmp
mov
mov
rol
dec
nop
cs
loope
mov
ins
dec
add
aas
retf
neg
sub
mov
cmps
fyl2x
sbb
arpl
inc
outs
ja
nop
mov
cld
sbb
fistp
repnz
sbb
and
sbb
repz
cmc
retf
in
not
mov
repz
loopne
or
shr
add
dec
popa
mov
(bad)
mov
dec
inc
push
xchg
daa
ins
sahf
add
mov
add
pop
popa
add
adc
hlt
inc
sub
out
out
add
sub
std
(bad)
in
push
das
lea
mov
mov
aas
arpl
jle
mov
retf
xor
imul
xchg
push
pushf
xchg
xchg
std
mov
and
mov
pushf
pop
xchg
shl
jmp
cmps
jmp
push
add
sbb
out
and
(bad)
(bad)
daa
xlat
loopne
sbb
push
ja
and
add
call
ror
lahf
xor
cmp
adc
cmp
ficom
sti
fcom
pushf
mov
outs
pop
jl
movs
jg
mov
mov
add
mov
mov
sub
and
ds
outs
ins
loop
cmps
mov
sub
lea
mov
mov
or
les
mov
nop
push
ja
sub
dec
pop
(bad)
in
pop
mov
add
dec
leave
outs
inc
inc
clc
jno
push
out
icebp
jne
ror
push
xchg
dec
or
jnp
imul
scas
pop
std
push
mov
mov
adc
sub
or
bound
inc
cmps
xchg
lea
push
xchg
dec
in
aas
fimul
cvttps2pi
shr
sub
fnstenv
push
xor
call
shl
call
and
movs
sub
mov
rcl
loopne
jb
(bad)
icebp
adc
inc
mov
sub
xchg
jecxz
xchg
or
mov
mov
out
push
xor
cmp
fdivr
mov
clc
push
push
adc
jle
adc
pop
mov
xor
ja
out
fs
add
mov
ins
call
mov
iret
push
xchg
fidivr
dec
xchg
cmp
pop
fnstenv
arpl
dec
pop
push
inc
aam
bound
xchg
cmps
es
rcr
fisttp
mov
lods
das
xor
iret
ins
repz
jge
and
xlat
fmul
mov
bound
xor
out
sbb
adc
xor
push
mov
es
mov
inc
mov
stc
mov
or
(bad)
xor
fld
into
jg
sub
jecxz
jmp
ret
call
stc
movs
repnz
imul
icebp
xchg
push
fisttp
push
add
pop
add
fwait
ds
fiadd
jl
(bad)
jp
leave
mov
push
stc
adc
inc
sbb
push
daa
aad
dec
les
add
(bad)
jns
pop
add
(bad)
repz
pop
retf
xchg
mov
imul
(bad)
sub
push
adc
cmp
xchg
add
call
jmp
div
add
fld
push
mov
(bad)
nop
jae
push
ss
neg
or
loope
sub
add
fs
cmps
sar
mov
and
outs
inc
fcomip
add
cmp
and
inc
scas
xchg
xchg
or
and
jb
xchg
imul
cmp
ss
jmp
(bad)
stos
dec
pusha
mov
xchg
cmp
mov
or
or
xchg
adc
pop
sub
or
(bad)
cmps
int3
jle
pop
add
push
pop
jmp
jecxz
jb
mov
rcr
ins
pop
sbb
push
dec
sbb
in
mov
inc
jmp
sahf
aas
mov
or
inc
add
push
test
rol
jecxz
sub
xchg
cmps
ret
mov
call
mov
mov
add
fsubr
or
cld
test
std
sbb
and
je
fbstp
pop
js
xor
dec
fdivp
sar
push
or
inc
add
mov
jae
and
inc
sub
or
jg
fsubrp
outs
sbb
mov
and
sub
xchg
daa
sbb
mov
jmp
push
fimul
jp
ret
loop
mov
pop
push
inc
pop
ret
add
fwait
mov
dec
retf
push
and
scas
adc
mov
(bad)
lds
push
sbb
fld
jbe
int
fdivrp
mov
rcr
inc
lods
lods
dec
ins
add
mov
inc
in
sbb
fcomp
jae
enter
jecxz
test
popa
push
out
push
sbb
cdq
xor
push
xchg
adc
inc
push
push
mov
not
(bad)
(bad)
and
inc
xchg
mov
pop
dec
push
lds
xchg
pop
push
pop
xchg
sbb
mov
fwait
movs
pushf
xchg
fbld
push
out
dec
ss
ins
inc
js
fcmovb
sbb
jmp
add
sar
cmp
mov
stos
idiv
push
fnstsw
adc
xor
in
call
mov
push
push
pop
mov
leave
xchg
push
add
fbstp
adc
jbe
iret
imul
jp
xchg
mov
fdivp
in
inc
cmp
dec
sahf
mov
shr
xchg
jae
pusha
rcl
or
(bad)
cld
jl
sahf
mov
ret
out
adc
enter
xchg
(bad)
pop
adc
lods
(bad)
jmp
mov
jp
cmps
push
daa
in
arpl
pop
(bad)
lock
je
push
pop
jge
or
aad
aas
aad
gs
cmps
pop
icebp
jg
sbb
sub
fisttp
movs
add
ds
out
mov
mov
mov
xor
ins
cmc
movs
push
xor
into
sub
jle
inc
jge
add
push
repnz
push
loopne
cmp
mov
popa
sub
sub
add
jo
test
sbb
add
push
in
ficom
inc
(bad)
loopne
xlat
(bad)
jb
imul
xchg
cwde
cmp
sub
cli
sti
mov
pusha
and
jle
pusha
pop
cmps
dec
test
mov
inc
lods
dec
test
cld
pop
cmc
adc
addr16
call
dec
cvtdq2ps
sbb
bound
sbb
pushf
mov
inc
xor
mov
fs
jle
sub
clc
out
xor
lock
sahf
out
mov
mov
(bad)
movs
mov
mov
cld
pop
aam
(bad)
jmp
mov
xchg
adc
popf
test
lahf
xor
(bad)
movs
call
sbb
mov
xchg
mov
pop
xchg
pop
dec
sbb
mov
lock
out
fs
adc
cdq
jl
data16
xlat
push
xor
pop
jnp
pop
xchg
xchg
add
xor
das
push
pop
mov
lock
test
mov
jle
scas
adc
scas
or
in
call
out
xchg
sub
sub
enter
xchg
add
inc
test
cs
adc
xchg
cmc
push
stos
fcom
or
stc
add
mov
ins
out
xchg
sub
lds
cwde
mov
sub
bound
mov
(bad)
loopne
fsubr
sbb
ret
mov
scas
into
sti
ins
imul
fucomp
pop
mov
and
adc
(bad)
sbb
inc
xor
xchg
out
xchg
in
inc
ret
xchg
pop
ins
xor
popa
fstp
out
mov
sbb
pushf
sub
mov
ins
in
jmp
repnz
adc
div
into
shl
fiadd
repz
les
sbb
dec
pop
mov
pop
dec
in
mov
mov
jmp
push
cld
sahf
repz
xor
mov
bound
pop
fistp
jp
or
je
aad
sub
(bad)
scas
sar
push
add
in
jnp
retf
pxor
fsub
es
scas
mov
xor
xchg
ret
mov
mov
mov
mov
mov
sbb
pop
cmps
jns
sbb
mov
mov
loopne
mov
rcr
pop
(bad)
in
jmp
outs
or
call
xchg
xchg
faddp
cmps
test
stos
or
mov
pop
xor
test
push
jecxz
shr
sbb
mov
sbb
mov
out
fst
and
cmp
xchg
cmc
xchg
jmp
lods
and
jp
fdiv
or
xchg
imul
popf
mov
jns
outs
mov
jbe
js
xor
stos
mov
test
mov
mov
fidiv
pop
sub
inc
sahf
jnp
pop
iret
or
cdq
push
inc
xor
cli
mov
mov
push
pop
mov
jle
fimul
mov
xor
pop
ret
aad
cdq
clc
mov
or
pushf
sbb
xor
jge
jae
mov
(bad)
mov
push
mov
cmp
or
inc
retf
pop
dec
aas
imul
addr16
xlat
mov
pop
jb
inc
and
gs
in
mov
jb
sbb
dec
pop
out
mov
inc
data16
neg
xchg
popf
push
mov
fwait
mov
cmp
(bad)
lock
jne
pop
jp
cmp
xchg
call
mov
cmps
mov
mov
sub
add
or
jle
fistp
add
mov
xchg
in
lahf
mov
(bad)
sahf
nop
mov
(bad)
loope
xchg
lds
or
popa
mov
xor
int
movs
mov
xor
mov
or
aam
out
data16
in
jnp
aas
jg
daa
jp
out
sbb
fbstp
add
adc
jecxz
fsubrp
test
push
xor
cmp
cmp
dec
out
xchg
ins
out
adc
mov
adc
xchg
push
mov
mov
cmc
adc
pop
rcr
std
push
sti
xor
fsubr
(bad)
push
push
pop
or
loopne
mov
jge
mov
mov
sub
mov
inc
push
in
cmp
jmp
mov
push
das
or
add
xchg
adc
add
(bad)
dec
jb
dec
pop
in
adc
mov
test
cmc
outs
retf
call
in
jae
inc
dec
sub
xchg
ss
sbb
adc
dec
inc
mov
sbb
add
sbb
loopne
ss
stos
aaa
fisttp
inc
clc
xor
or
loope
(bad)
push
mov
inc
mov
mov
loope
scas
push
mov
aaa
xchg
(bad)
in
std
and
sbb
mov
je
ja
mov
jp
cmp
cmp
xchg
xchg
cmp
jl
or
jmp
neg
push
int3
cli
jl
scas
loopne
push
xchg
jmp
jle
jg
mov
imul
jo
push
fwait
pop
pop
scas
and
pop
sbb
test
das
in
add
jo
nop
inc
or
imul
and
(bad)
outs
mov
leave
stc
cwde
in
push
ins
mov
imul
and
pop
stos
xchg
jg
jo
test
(bad)
enter
push
imul
add
(bad)
mov
adc
jl
dec
hlt
jl
mov
movs
dec
mov
(bad)
not
icebp
xchg
mov
popf
(bad)
daa
adc
mov
test
or
jge
push
jmp
cmp
cmps
aam
xor
mov
nop
jo
jmp
cmp
mov
xor
imul
and
fild
outs
into
push
sbb
jne
mov
push
iret
or
dec
cmp
and
jne
icebp
and
repnz
jo
and
fistp
daa
pushf
sub
mov
mov
push
jo
pop
int
pop
ins
(bad)
scas
push
jge
ja
call
test
dec
mov
add
inc
cdq
fistp
mov
sar
sub
mov
xor
pop
lea
push
mov
das
inc
out
scas
rol
mov
(bad)
cmp
js
xor
(bad)
dec
js
bound
cdq
loope
or
sub
xor
inc
mov
xor
call
bound
rcr
push
inc
sub
mov
xlat
(bad)
ret
in
mov
mov
rol
dec
mov
sub
jb
mov
mov
out
and
pop
(bad)
imul
retf
push
repz
cli
cmp
mov
in
in
jb
sub
fs
in
arpl
les
mov
cmp
jns
or
adc
push
aaa
push
js
jge
dec
and
les
push
ret
inc
xor
xchg
jns
jb
adc
aad
mov
dec
xchg
xchg
and
dec
mov
xlat
mul
pop
cmp
xor
or
cmps
sti
(bad)
mov
popa
jg
imul
push
pop
sbb
fcmovnb
xchg
das
inc
jle
xor
push
inc
add
mov
pop
pop
xchg
mov
mov
xor
and
cli
int3
sub
imul
inc
aaa
fsubr
ret
nop
and
test
add
inc
lods
mov
xor
leave
sub
stos
pop
jmp
push
xchg
and
xchg
iret
mov
sbb
loop
mov
out
data16
aaa
cli
aam
lods
stos
cld
xor
call
or
pop
xor
xor
inc
xor
shr
repz
adc
fild
push
into
cs
retf
cmp
fs
jnp
lahf
fist
mov
push
rcr
shl
pop
ss
mov
mov
jns
imul
dec
nop
shl
aas
cmps
js
pop
dec
and
movs
dec
out
movs
pusha
jl
js
push
push
stc
fist
fwait
ins
or
clc
mov
lock
ud0
lods
in
jae
in
int3
mov
not
xor
dec
dec
push
mov
sar
xor
dec
sub
sub
pop
xor
mov
cmps
sub
adc
pop
cmp
inc
push
imul
fstp
popf
rcl
dec
pop
addr16
pcmpgtb
jecxz
cmp
(bad)
hlt
loop
daa
pop
push
sbb
ret
sbb
(bad)
mov
imul
xchg
adc
push
add
pop
jo
jecxz
mov
cmp
or
pusha
jmp
sub
fs
and
cmp
add
jo
in
dec
ret
push
jno
push
inc
(bad)
cmp
xchg
sbb
sub
sbb
or
ror
ret
outs
lods
add
(bad)
sub
mov
xchg
push
sub
pop
and
data16
jmp
test
mov
mov
sbb
in
sar
and
fcmovne
pop
xor
dec
es
mov
(bad)
(bad)
push
mov
dec
aaa
mov
out
xor
adc
and
lock
cmp
or
fiadd
pushf
push
mov
mov
push
test
aad
popa
(bad)
xchg
push
(bad)
pop
or
dec
cmp
ret
xchg
ins
lods
stc
dec
mov
mov
(bad)
loope
xlat
fninit
push
or
(bad)
stos
sub
add
or
fs
(bad)
rcl
test
rol
sub
neg
dec
and
mov
add
gs
mov
xor
ds
jno
and
jecxz
sub
mov
jecxz
je
ficom
xlat
xchg
fild
push
cmp
fsubr
mov
mov
push
fcomp
(bad)
loopne
xor
data16
fild
push
(bad)
int3
popf
shl
into
sub
xchg
jae
scas
push
shl
sub
sbb
in
int
(bad)
(bad)
ret
mov
or
dec
xlat
cmc
adc
les
dec
jae
enter
xlat
jle
cmp
xchg
mov
or
loop
mov
and
ins
(bad)
push
test
mov
retf
pushf
stos
xchg
fwait
test
jmp
push
fs
push
mov
(bad)
ins
jnp
retf
cwde
sbb
push
xchg
pop
jge
sbb
cmp
add
push
sbb
call
retf
sub
int3
xor
aas
arpl
jnp
stc
addr16
data16
dec
cli
aam
(bad)
mov
mov
adc
pop
pushf
or
jmp
nop
in
jg
add
sbb
mov
sub
ss
outs
call
xchg
push
sub
(bad)
mov
imul
outs
popa
shr
sub
inc
repnz
push
add
cmp
mov
mov
sub
imul
mov
push
lea
inc
xor
cmp
outs
jmp
inc
mov
cmp
aas
mov
in
adc
out
mov
test
nop
psubb
pusha
out
outs
shl
(bad)
stc
pop
push
pop
jle
sub
leave
je
arpl
pop
jle
xor
enter
jb
jno
sbb
out
test
add
js
push
push
cwde
push
sar
jmp
adc
or
push
les
add
std
xchg
xlat
sub
push
je
movs
cmp
enter
jae
loopne
inc
sub
lahf
xbegin
aad
mov
unpckhps
mov
pop
adc
pop
ja
test
and
mov
cs
pop
inc
ret
cmp
ret
pusha
inc
and
jnp
fimul
(bad)
mov
bound
lock
inc
cmp
retf
mov
(bad)
loopne
or
sub
mov
mov
push
popf
jae
pop
scas
(bad)
pop
cmp
mov
push
push
ins
xor
int3
pop
xchg
ins
pop
sub
inc
outs
add
adc
sbb
and
repnz
lods
or
imul
icebp
pop
and
scas
dec
sbb
xlat
stos
lds
lahf
(bad)
fwait
push
mov
aad
push
inc
ins
add
xlat
push
ja
dec
aas
dec
push
std
adc
call
fs
test
mov
pop
ins
mov
mov
cmp
adc
inc
push
push
jl
loopne
je
cmps
xor
test
mov
xchg
mov
push
in
outs
fisttp
cli
dec
sub
sbb
sub
sbb
pop
out
rol
ret
mov
xchg
jmp
mov
in
mov
push
jno
sbb
xor
scas
xchg
cmps
fisub
jle
pushf
test
and
repz
loop
out
out
add
scas
movs
mov
sahf
dec
fld
sbb
(bad)
lock
pop
inc
ds
daa
sub
enter
mov
adc
and
loope
or
pop
fidivr
or
pop
push
fisubr
pusha
xor
shr
add
ins
inc
sbb
loope
std
sbb
ror
in
push
cwde
push
cmp
and
or
ret
inc
xchg
or
(bad)
out
call
in
inc
xlat
int
sub
lahf
mov
fdivr
cs
jmp
inc
add
inc
std
scas
leave
mov
psrld
adc
cmp
xchg
dec
lods
xchg
movs
xchg
xor
ret
inc
mov
popf
push
cmp
(bad)
push
in
loop
(bad)
in
lods
in
hlt
adc
push
dec
mov
movd
shr
test
adc
or
imul
rcl
mov
pop
pop
or
add
jmp
add
inc
pusha
sub
mov
(bad)
dec
mov
scas
pop
inc
(bad)
mov
cmc
lods
arpl
add
in
push
xor
add
push
push
mov
dec
push
pop
lea
dec
sub
sub
push
push
daa
out
sbb
jnp
xchg
sbb
pushf
in
xor
call
jo
in
jl
ds
jb
lock
sbb
je
loop
fidiv
test
iret
leave
mov
mov
inc
mov
add
cld
and
inc
jno
and
mov
test
inc
sub
es
push
mov
mov
mov
(bad)
adc
dec
jmp
mov
cdq
pop
mov
push
add
jae
call
mov
leave
je
sub
pop
mov
cwde
ficomp
ror
aam
mov
inc
mov
out
imul
inc
scas
(bad)
popf
mov
adc
mov
mov
mov
dec
inc
(bad)
jge
iret
sbb
test
movs
cmps
sub
push
cld
push
mov
xchg
jp
mov
mov
add
push
mov
push
retf
cld
sahf
mov
cmp
cmp
sbb
jmp
and
mov
div
fimul
dec
mov
hlt
pusha
(bad)
push
add
dec
inc
pop
jp
sbb
sbb
xor
pop
sbb
sbb
and
hlt
pop
push
sti
sti
push
sub
cmp
pop
data16
xor
mov
cmp
rcr
pop
ins
stos
pop
or
arpl
inc
mov
or
std
mov
add
add
jbe
jns
xchg
pop
xchg
jnp
push
pop
not
test
mov
adc
das
pop
push
cmp
jle
movs
push
push
(bad)
cmps
mov
lahf
mov
call
cdq
repnz
nop
fs
retf
stos
clc
xor
bound
dec
inc
call
push
xchg
jne
cmp
add
ds
nop
mov
inc
jl
es
fs
dec
(bad)
jo
adc
cmp
lds
jb
sahf
inc
mov
adc
adc
data16
and
wbinvd
jae
test
aad
cwde
xor
ret
mov
test
ins
(bad)
dec
or
mov
cmp
xor
clc
adc
cmps
pop
jnp
das
jae
push
je
or
add
(bad)
dec
arpl
sub
xor
cld
retf
xchg
and
and
sbb
add
xchg
jmp
mov
je
call
xchg
repnz
rcr
adc
popf
nop
jge
lea
jp
hlt
movs
mov
mov
imul
inc
(bad)
es
dec
xchg
pop
fstp
aaa
ja
inc
ins
leave
push
mov
jno
add
test
pop
test
lea
mov
and
sti
pop
cli
cwde
add
xchg
pop
and
jb
(bad)
aas
add
and
jb
jb
pop
jp
mov
mov
adc
mov
retf
push
fnsetpm(287
jge
pop
sbb
or
out
pop
iret
dec
add
ins
push
je
jp
idiv
pop
enter
cmp
jmp
leave
outs
and
shl
sub
sub
sbb
add
stc
sar
rol
adc
dec
dec
idiv
(bad)
out
(bad)
iret
gs
gs
cmp
xchg
push
or
sub
call
sub
ja
int
mov
xor
pop
cmp
call
sar
out
shl
daa
add
test
lock
sub
xchg
aam
dec
mov
aad
mov
inc
sub
mov
mov
xchg
and
xor
outs
mov
cmp
stos
stc
popf
test
inc
and
dec
ret
inc
cs
pushf
or
aam
mov
ss
outs
xchg
add
stos
jns
ds
add
cmp
xchg
mov
sub
call
mov
jle
pop
popf
ins
dec
ss
aas
sbb
psrad
mov
jo
jecxz
xchg
inc
mov
lock
loope
add
xchg
adc
out
adc
cdq
sbb
lods
xor
cmp
es
(bad)
cmp
mov
or
mov
scas
push
cwde
aam
call
dec
(bad)
or
and
push
xor
mov
shl
scas
push
aaa
mov
scas
imul
mov
loopne
in
adc
push
pop
add
(bad)
jne
push
ds
pop
ficom
test
add
pop
cdq
clc
std
call
sti
jmp
daa
aas
outs
scas
adc
addr16
pop
adc
mov
lods
push
and
test
cmovl
lods
xchg
and
mov
mov
rcr
shl
adc
dec
popa
sbb
repnz
sahf
dec
std
cmp
sub
dec
aas
and
rcr
and
adc
or
cmp
ret
pop
xchg
ret
push
lea
test
js
into
pop
dec
inc
(bad)
xchg
and
add
mov
and
and
pop
push
lea
and
pop
and
add
push
push
or
ja
(bad)
mov
sub
repnz
sbb
inc
sbb
push
inc
mov
js
sahf
mov
aas
les
lea
mov
or
adc
pop
inc
shl
leave
fisttp
lock
call
pop
ret
ins
sbb
rol
mov
sbb
ds
dec
out
mov
ins
inc
pop
push
xor
lds
dec
and
cmc
and
fwait
iret
mov
sbb
cmp
or
outs
sbb
and
sbb
mov
pop
jp
call
bound
pop
lahf
mov
jne
xor
lea
mov
mov
inc
mov
inc
pop
sub
inc
cwde
outs
xlat
sgdtd
mov
mov
movs
xor
inc
retf
loopne
add
push
sub
cmps
adc
hlt
sbb
lds
push
jns
fwait
stos
int3
not
icebp
mov
add
adc
push
xor
xor
outs
xlat
in
call
das
pop
xchg
xchg
jae
fbld
stos
mov
sub
xchg
inc
mov
and
mov
or
jle
pop
mov
pop
sbb
rcl
cld
xchg
adc
sub
sbb
out
xchg
outs
add
cmp
and
jmp
mov
and
(bad)
mov
mov
scas
(bad)
popf
push
and
mov
xor
mov
pushf
ret
ror
mov
mov
clc
arpl
aad
aas
and
es
jbe
push
in
cmp
fs
cs
cs
or
xchg
ret
out
push
mov
or
fdiv
add
fdiv
mov
add
add
test
fistp
mov
outs
mov
pop
fdivr
movs
rcl
push
ja
pop
in
leave
or
aam
and
or
dec
mov
inc
sub
daa
jle
jp
mov
cmps
sub
lahf
data16
les
inc
add
inc
push
pop
push
mov
aam
dec
scas
loopne
fiadd
retf
xchg
inc
and
je
jmp
inc
or
sub
outs
adc
sti
dec
pushf
leave
pop
das
retf
mov
jmp
dec
inc
mov
daa
call
xchg
test
cmc
cwde
jge
push
lods
retf
mov
mov
in
jb
idiv
fwait
in
imul
add
gs
pop
rol
add
xor
adc
mov
sti
retf
clc
jbe
mov
jno
push
adc
addr16
push
loope
xchg
mov
jmp
or
dec
inc
pop
pop
xchg
fisttp
out
jp
aaa
fimul
cld
dec
push
shl
mov
xor
push
pop
loopne
or
sbb
cwde
inc
daa
int3
cmp
jmp
jle
iret
and
iret
fidivr
gs
jb
(bad)
sub
mov
aas
fcom
jge
jl
jg
fs
jecxz
adc
cmp
xchg
lds
int
mov
mov
dec
loop
push
push
(bad)
push
xchg
push
jae
pop
iret
cmp
mov
(bad)
jbe
cwde
cwde
dec
dec
pusha
lods
out
rcr
ja
jo
mov
stc
shl
dec
mov
es
jmp
not
test
retf
pop
mov
gs
iret
pop
mov
add
pop
jbe
outs
clc
sar
mov
add
(bad)
mov
push
push
push
push
mov
and
fist
add
xchg
mov
cmps
mov
inc
nop
mov
ja
adc
test
mov
lahf
clc
jmp
mov
mov
add
mov
or
jmp
push
out
mov
inc
cmps
pop
retf
fiadd
gs
test
in
in
sub
push
loop
stos
test
enter
or
adc
mov
mov
pop
loop
add
paddq
pop
push
ins
and
sub
jmp
jbe
int
mov
rol
repz
dec
movs
jbe
pop
das
stos
and
aas
add
lea
mov
mov
mov
inc
cmp
pop
fucom
and
sbb
fisub
stc
aas
pop
int
mov
(bad)
cmps
jo
jle
movs
cs
out
arpl
sbb
xlat
pusha
(bad)
lahf
div
ret
pop
in
pop
mov
sub
dec
and
dec
ror
test
dec
pop
in
inc
sbb
lea
mov
clc
in
dec
jns
(bad)
in
(bad)
ins
adc
jmp
ins
arpl
sbb
cmps
sar
xchg
cli
jg
adc
xor
push
jg
repz
xchg
pop
adc
xor
int3
xor
and
jmp
mov
fimul
cmp
lahf
add
push
adc
jb
sahf
les
aaa
sub
ins
dec
(bad)
mov
or
dec
or
inc
adc
jle
add
aaa
ja
addr16
inc
stc
pop
xor
cdq
das
clc
sub
cwde
sahf
sbb
cld
add
repz
cwde
mov
and
into
inc
mov
mov
inc
pop
adc
leave
inc
push
push
test
and
sahf
jno
sbb
push
pop
dec
jl
movs
daa
test
mov
or
gs
add
or
and
and
iret
or
mov
lock
pop
or
out
mov
cmps
mov
sbb
ror
xor
outs
ins
add
(bad)
ds
js
add
test
pop
popf
fs
movs
pushf
fisttp
bound
xchg
cli
cs
or
call
and
es
mov
outs
lea
jmp
loope
jns
and
arpl
pop
jne
xchg
push
mov
dec
sbb
imul
push
lods
(bad)
inc
jmp
inc
fsub
adc
or
les
pushf
cmc
cmp
fwait
mov
dec
jnp
fisttp
popf
jmp
data16
xchg
fs
stos
or
xor
pop
sub
cmps
sub
popf
(bad)
push
je
jl
out
add
in
mov
lock
inc
xor
sahf
xchg
push
nop
enter
add
or
std
je
mov
stc
jbe
pop
xor
jmp
int3
sar
inc
xlat
sub
add
fs
xchg
lods
cld
mul
mov
icebp
pop
add
mov
cmp
sbb
sbb
es
and
xor
ds
fcom
jl
leave
std
sub
scas
cmp
push
cmp
into
outs
lds
fwait
jmp
cld
sbb
imul
loopne
lods
rcl
rcr
retf
mov
cmp
dec
(bad)
fsub
or
hlt
add
fmul
or
(bad)
lock
and
xchg
stos
jecxz
dec
out
inc
call
imul
loop
add
sub
xchg
mul
aaa
push
scas
call
frstor
das
sub
mov
(bad)
jle
les
mov
jo
dec
jnp
mov
cdq
xor
loop
aas
xlat
adc
aad
xchg
cmp
mov
lods
fstp
xchg
and
mov
neg
and
lods
mov
mov
imul
aas
pop
std
inc
sub
std
mov
adc
mov
add
xor
pop
sub
cwde
(bad)
mov
jno
cmp
add
jl
jge
out
fnstsw
push
test
sub
add
and
mov
mov
or
pop
les
fcmove
fnsave
mov
iret
adc
mov
mov
inc
das
daa
mov
test
mov
bound
dec
in
cmp
cli
es
ds
push
push
xor
aad
adc
cmps
mov
fs
sbb
adc
leave
mov
mov
cli
inc
aam
sbb
dec
arpl
or
dec
pop
ins
push
dec
lds
out
cmp
or
cmc
and
jne
mov
push
aam
cs
pop
inc
lahf
xor
mov
mov
test
outs
rcl
jns
or
pushf
sub
aas
fcomp
add
pop
jmp
xor
fsubr
sti
cmp
shl
into
int
arpl
and
mov
sub
not
dec
in
sub
mov
sbb
inc
jmp
fcom
enter
cmp
pop
xchg
cmps
sbb
mov
dec
inc
fcom
retf
(bad)
xchg
mov
jno
xor
stc
adc
mov
lds
loopne
push
icebp
jne
cmp
xchg
fwait
ja
sub
out
mov
inc
out
arpl
test
mov
cmp
xchg
int3
dec
daa
xor
or
scas
pop
sbb
shl
xor
and
xor
mov
mov
in
sub
inc
sar
dec
(bad)
rol
pop
(bad)
daa
lahf
lahf
out
sbb
push
fistp
inc
fcmovu
cmp
dec
or
dec
ror
add
popa
les
lea
ins
ret
xchg
popa
mov
out
hlt
pusha
movs
pop
fdivr
pop
nop
and
jl
les
pushf
mov
jo
loopne
cmp
sbb
mov
idiv
sbb
movs
enter
xchg
data16
mov
scas
movs
push
shl
shl
jle
push
dec
or
inc
fdivrp
cmp
loop
fstp
cmps
outs
stos
in
xor
(bad)
int3
jo
or
push
iret
loope
imul
pop
jmp
xchg
adc
sbb
inc
unpcklps
jp
ja
loop
test
aam
push
inc
aas
fs
xchg
mov
mov
daa
adc
cs
imul
mov
daa
fs
push
xchg
(bad)
or
jp
scas
or
jecxz
jno
stos
inc
jmp
adc
cmp
inc
call
jno
ret
popa
push
scas
push
mov
dec
sbb
pop
dec
cmp
cdq
mov
arpl
jge
pop
dec
(bad)
adc
inc
fimul
outs
xchg
or
xor
je
mul
sbb
and
push
xor
cs
(bad)
lods
jae
or
dec
repz
nop
adc
cmp
mov
call
adc
mov
mov
mov
jle
mov
lods
dec
pop
lea
pop
pop
xchg
lods
(bad)
fsub
and
loopne
in
mov
lods
movs
scas
pmullw
fsub
dec
or
scas
jo
gs
inc
in
cmp
cmp
mov
fistp
sbb
mov
jns
jne
(bad)
fdivr
pushf
push
add
in
data16
mov
cwde
pop
xchg
pop
aaa
sar
sbb
inc
int
(bad)
ja
lds
jo
fdivr
(bad)
jp
leave
xor
pop
cmp
sar
js
cdq
mov
call
xlat
jmp
mov
mov
mov
das
lods
pusha
or
inc
push
scas
int3
add
jo
pop
and
imul
nop
fld
or
ins
jg
add
in
gs
mov
fild
data16
dec
stc
or
mov
adc
xor
xchg
sbb
pop
pusha
or
or
aam
cmp
sub
and
fdiv
movs
jg
mov
adc
out
push
retf
adc
aas
inc
loope
outs
mov
sbb
retf
mov
ds
xchg
and
inc
and
(bad)
cmp
and
push
jbe
arpl
push
mov
lea
je
sahf
xor
rcl
xchg
mov
scas
mov
bound
lahf
cs
nop
fs
xchg
xchg
push
jle
movs
cmc
xor
sub
inc
jne
or
arpl
jb
sbb
(bad)
xchg
sbb
inc
adc
in
(bad)
retf
bnd
ror
inc
push
into
aas
out
push
sahf
and
xchg
and
shl
mov
pop
jg
or
hlt
inc
or
lods
in
icebp
mov
outs
mov
mov
sub
add
loope
dec
push
cld
imul
cmps
sbb
and
pop
cmc
xor
and
ins
sbb
out
adc
or
shr
movs
ds
push
aad
mov
sbb
jmp
call
mov
pop
in
add
sub
shl
push
jp
adc
xor
pushf
(bad)
out
cmc
mov
cmp
inc
leave
loopne
jmp
daa
pop
and
daa
inc
jb
je
pop
enter
out
sbb
xchg
ja
lea
aaa
imul
jecxz
or
jno
rol
and
inc
sbb
add
cwde
push
jo
pop
ss
mov
cli
aad
aam
push
cmp
rcl
or
mov
ds
mov
or
rcl
and
mov
sub
je
stc
cmp
xchg
jp
out
loope
cmps
push
inc
jo
mov
add
cdq
ficomp
data16
out
test
add
in
jmp
jmp
sbb
xchg
leave
push
and
push
call
sbb
movs
inc
not
pop
xor
ss
pop
or
and
retf
xor
dec
sbb
inc
jl
call
ret
and
out
cld
cdq
out
das
inc
ja
pop
push
pop
push
lea
ss
inc
sbb
mov
lea
pop
add
aad
ds
jmp
cli
push
mov
push
push
inc
pushf
mov
dec
pop
push
sti
jbe
pusha
mov
sub
out
mov
jns
imul
call
not
lods
inc
div
jns
inc
xor
daa
repnz
pop
ss
sub
dec
dec
mov
jg
xor
shr
jmp
dec
dec
std
dec
jmp
push
pop
xchg
and
shl
inc
sti
test
test
ret
mov
(bad)
or
add
or
gs
fiadd
test
(bad)
pop
xchg
(bad)
mov
popa
xor
jnp
xlat
pop
aas
mov
mov
pop
jb
inc
fld
(bad)
lock
adc
pusha
cmp
(bad)
jae
xchg
sub
test
mov
xor
stos
or
sub
(bad)
popf
mov
push
in
lods
push
xchg
xor
dec
and
xor
test
mov
in
bound
jbe
hlt
push
push
mov
xchg
pop
sbb
jno
leave
push
sbb
jge
outs
dec
bound
xchg
gs
leave
inc
and
fwait
lea
repz
sbb
or
out
fyl2xp1
mov
cwde
nop
mov
pop
jle
mov
lods
shl
ins
test
mov
dec
ds
aaa
xchg
dec
sub
in
ja
stos
cmp
mov
cmp
inc
lds
mov
mov
pop
jns
fcom
lds
jle
std
std
cmp
jg
(bad)
imul
pop
jne
bound
imul
xor
outs
cmp
in
mov
and
xor
cmps
mov
add
loope
and
sub
and
leave
or
mov
pop
push
call
shl
jge
sbb
das
cld
lahf
pop
jecxz
and
mov
push
ficom
push
cmps
imul
ja
sub
jnp
and
pop
mov
sti
xchg
loop
outs
jl
and
imul
dec
popf
daa
jl
jecxz
jne
sub
cmp
aas
pop
adc
movq
mov
add
dec
pop
push
rcl
xchg
jns
(bad)
out
mov
adc
les
shr
mov
out
cmova
lds
or
out
addr16
cld
outs
fldenv
ja
jnp
jno
(bad)
icebp
xchg
cdq
lahf
into
mov
pop
jle
dec
neg
ja
sbb
aas
cmc
rol
mov
(bad)
icebp
leave
out
pop
inc
jg
and
les
xchg
and
mov
(bad)
aad
pusha
jecxz
rol
inc
dec
pop
shr
mov
mov
add
ss
lahf
mov
add
(bad)
xchg
sbb
rcl
mov
cmp
push
xor
adc
push
sub
dec
aam
or
test
popf
test
jae
cs
jmp
push
rcr
aas
jae
fild
jp
ffree
movs
jmp
(bad)
std
inc
leave
mov
clc
cmp
sbb
lock
push
cvtps2pi
rol
aad
mov
nop
sar
xchg
mov
stc
adc
mov
ror
stos
aam
pop
jmp
mov
cld
push
pop
add
inc
cli
enter
pop
mov
inc
push
idiv
int
inc
fbstp
lds
imul
test
inc
(bad)
arpl
enter
dec
ret
and
ins
mov
cmp
mov
push
jnp
stos
popa
lock
daa
imul
inc
jecxz
or
aam
neg
call
pop
mov
push
into
mov
test
aam
ins
je
or
pushf
fdiv
iret
aaa
imul
push
in
popf
sbb
sbb
pusha
fidivr
dec
jae
jl
bound
imul
push
fisubr
jno
sbb
jmp
retf
mov
jmp
jae
stos
ret
mov
mov
xchg
jge
pop
sbb
mov
mov
aaa
add
xchg
mov
stos
jns
xchg
dec
and
inc
pop
and
pop
cli
add
fyl2x
and
pop
pop
inc
mov
xchg
jge
jge
mov
test
cmp
retf
cmps
pop
mov
call
cmp
sub
mov
dec
xchg
fstp
mov
leave
sti
mov
pop
icebp
push
cld
imul
push
or
in
add
test
or
xor
mov
push
jmp
adc
lock
mov
pusha
xor
mov
jp
cwde
jo
push
cmps
push
mov
sub
(bad)
jmp
movs
adc
cld
dec
inc
cmp
or
cmps
inc
dec
into
mov
dec
mov
pop
dec
mov
dec
ins
sub
es
stos
test
cmps
or
xchg
sbb
dec
test
vmovsd
aad
scas
loope
sub
sbb
in
cmps
push
inc
push
daa
std
daa
scas
(bad)
imul
adc
shl
in
sahf
dec
dec
(bad)
xor
add
leave
mov
shl
inc
lea
outs
push
in
sbb
std
add
push
inc
jnp
mov
sahf
inc
cdq
mov
mov
out
and
mov
fnstenv
or
fwait
ss
shl
out
pop
jp
mov
add
call
mov
and
add
mov
das
mov
scas
dec
adc
(bad)
popf
test
fucom
jge
and
jmp
stos
sbb
pop
aad
cmp
jecxz
int
xor
add
sbb
lds
add
pop
shr
int
(bad)
mov
sbb
hlt
xor
popa
xor
movs
add
call
push
dec
sbb
loope
xor
or
nop
sti
and
and
mov
sar
jns
lar
inc
pop
shl
xchg
(bad)
adc
mov
bnd
jno
jge
int
pop
push
ret
push
mov
pop
add
scas
iret
adc
jp
imul
dec
pop
pop
inc
hlt
push
arpl
pop
loop
les
mov
and
ss
inc
jo
in
(bad)
jnp
jns
test
add
add
and
sub
sub
repnz
and
xlat
int3
xor
test
jmp
adc
jne
call
fld1
lods
inc
xchg
xlat
pop
dec
or
push
in
mov
loop
pusha
or
imul
mov
sub
inc
mov
dec
xchg
idiv
outs
leave
push
fucomip
test
push
je
dec
scas
test
into
data16
dec
xchg
mov
mov
in
loop
jg
jo
jg
loopne
mov
cli
mov
mov
loope
or
jmp
gs
pop
adc
in
push
add
cdq
fcmovne
stos
test
ret
and
inc
xchg
(bad)
out
pop
mov
add
push
or
int
push
cs
dec
ret
adc
push
aaa
pop
sbb
adc
fcmovbe
mov
es
cmc
(bad)
cmp
cdq
cmp
dec
adc
fcmovu
ror
fstp
aas
push
jp
cmp
or
(bad)
sbb
(bad)
push
call
outs
lahf
xrelease
jmp
std
ins
adc
adc
stos
les
int
xor
(bad)
retf
mov
cmp
(bad)
outs
mov
sahf
sti
jg
xor
imul
stos
mov
(bad)
aad
rol
pop
xchg
cmp
popf
test
xchg
add
pop
loopne
test
int3
and
sbb
(bad)
push
jge
loope
leave
lock
in
mov
adc
sub
push
cli
and
in
add
imul
aam
push
push
inc
(bad)
cdq
or
jg
in
xor
inc
mov
mov
push
sub
xchg
retf
in
mov
sahf
push
xor
and
jae
push
add
inc
aam
sub
imul
loop
mov
lahf
jle
push
xchg
stos
xchg
mov
and
adc
pushf
pop
adc
xchg
mov
xor
cdq
shl
mov
cwde
mov
(bad)
dec
pop
cmps
(bad)
mov
in
cmp
dec
xchg
pop
les
pop
sbb
hlt
pop
(bad)
out
ja
mov
scas
sbb
stos
rcr
inc
adc
mov
inc
xchg
je
xor
and
dec
ja
or
pop
sti
stc
cmp
outs
jge
add
arpl
arpl
fwait
cvtps2pi
call
xchg
ins
mov
jnp
xchg
push
rcr
dec
dec
xor
sbb
call
scas
aam
fs
mov
sahf
pop
inc
sbb
xchg
(bad)
(bad)
fiadd
add
mov
shl
xchg
jbe
cmc
mov
pop
push
in
psllq
or
sub
in
mov
retf
cmp
cdq
loopne
adc
repz
(bad)
sub
sub
je
and
repz
xor
add
ret
push
(bad)
sbb
xchg
in
or
mov
xor
pushf
dec
jnp
pusha
mov
js
ss
push
xchg
sub
test
stos
mov
rol
lds
ror
sti
ja
push
add
pop
test
add
cdq
cmp
sbb
jmp
les
xor
pop
and
test
js
jnp
mov
or
out
lea
sub
imul
mov
mov
int
mov
mov
retf
(bad)
xlat
sub
push
loop
or
repz
add
test
jecxz
sahf
and
dec
rcr
lods
fidiv
dec
cmp
sub
push
(bad)
push
sahf
xchg
call
sbb
ret
rsm
inc
cdq
jne
mov
lea
xchg
loopne
iret
not
mov
fdivr
in
dec
jmp
ret
data16
cmps
cmp
jnp
dec
stc
push
adc
adc
jecxz
mov
pop
test
jno
fld
jle
ins
cmp
pop
mov
mov
leave
dec
cmp
xchg
jmp
scas
ins
or
and
sbb
add
sub
adc
mov
repnz
jl
repz
mov
das
hlt
jge
jo
loop
dec
add
mov
lahf
(bad)
gs
fsub
ins
xchg
xchg
or
mov
test
ss
jge
sar
daa
jl
rcl
lods
hlt
call
or
hlt
inc
sbb
iret
xchg
repnz
out
shr
jns
xor
cmc
mov
jmp
jno
pop
inc
pop
jne
nop
sar
sub
mov
out
ret
push
jae
shl
cmp
cmp
call
out
sbb
hlt
test
add
in
mov
sub
add
and
sub
mov
pop
dec
frstor
fidiv
xchg
in
adc
pusha
adc
jge
or
mov
sub
sub
xchg
add
lods
xor
test
mov
pop
or
ret
pop
outs
jge
lahf
mov
rcl
rcr
scas
xor
sahf
cmp
leave
push
adc
std
mov
jmp
leave
leave
mov
push
adc
(bad)
xor
xchg
xor
inc
sub
je
mov
movs
ja
dec
nop
xchg
cmps
test
imul
icebp
jne
xor
push
xlat
clc
pop
push
jle
sti
sub
dec
ins
out
in
mov
adc
inc
mov
dec
cdq
add
mov
inc
dec
push
addr16
mov
vpcomud
adc
push
test
mov
gs
mov
mov
fimul
xor
cwde
int3
jle
push
jmp
out
movs
push
cmp
ins
dec
addr16
mov
test
or
jns
inc
cmp
dec
pop
stos
neg
mov
jp
xlat
xor
push
(bad)
push
lods
iret
mov
jb
pop
cmps
mov
enter
xchg
icebp
test
loope
xchg
(bad)
sti
dec
fimul
inc
mov
shl
mov
fdecstp
mov
ja
sbb
inc
imul
lock
in
cmps
test
mov
push
mov
jnp
xchg
dec
out
(bad)
push
rcl
loop
clc
enter
pop
sbb
and
int3
jne
pop
loope
push
mov
test
shl
arpl
add
jb
jo
jp
mov
scas
sub
jp
bound
sbb
scas
cld
je
aas
out
or
outs
mov
pusha
mov
xor
inc
sub
ret
gs
adc
cmp
adc
addr16
mov
fadd
lea
jne
cmps
push
push
out
add
aad
xchg
xlat
fwait
cld
pushf
jmp
xchg
cmp
clc
and
dec
clc
js
mov
xchg
ins
dec
jae
leave
pop
xor
pop
mov
fmul
xor
inc
nop
gs
sti
push
pop
faddp
xlat
mov
mov
fnstcw
mov
mov
frstor
push
pusha
sub
sbb
test
mov
rcl
in
adc
retf
push
lahf
cmp
pop
call
pusha
mov
xchg
ins
mov
scas
pop
je
pop
xor
adc
mov
push
pusha
shl
repz
or
bound
repz
pop
xlat
or
mov
push
mov
mov
mov
jnp
in
fwait
sar
xlat
mov
adc
call
hlt
or
ds
inc
imul
ss
sbb
jb
icebp
test
adc
loope
xchg
cmp
pusha
xchg
ins
sbb
mov
cmp
adc
pop
jo
jle
inc
xchg
lahf
xor
sub
loopne
push
push
icebp
pop
push
sub
into
sub
or
and
xchg
and
fnstcw
jae
xor
sti
mov
inc
loopne
pop
inc
mov
lds
das
jmp
pop
xor
pop
mov
sbb
adc
jmp
and
mov
gs
mov
dec
ror
inc
xor
adc
outs
ins
cdq
ins
and
jmp
and
imul
and
sub
dec
adc
jle
leave
retf
and
or
fs
xchg
push
xor
gs
and
mov
or
(bad)
jno
aam
ins
mov
mov
sub
xor
sbb
rol
std
iret
call
mov
ins
jp
add
push
mov
aad
daa
call
sub
inc
adc
ds
stos
sub
cld
jecxz
scas
push
xor
mov
cmps
or
test
push
xchg
inc
scas
jp
cmps
mov
jecxz
jecxz
mov
xchg
mov
cmp
mov
jge
sahf
pop
sub
dec
push
mov
and
sub
test
xchg
or
sub
or
stos
add
mov
fidivr
pop
dec
jl
dec
je
mov
xor
mov
sbb
inc
shl
mov
mov
in
adc
or
fcom
mov
and
xchg
rcl
jmp
xor
retf
adc
inc
inc
ss
sahf
mov
or
xchg
enter
fcom
sbb
fs
sbb
sbb
cld
sub
mov
icebp
jo
dec
push
mov
sub
scas
cdq
cmc
test
mov
dec
les
dec
mov
or
xor
add
jle
call
xchg
pop
jle
shr
xchg
or
inc
mov
aaa
and
sbb
fmul
cs
fwait
dec
dec
jle
mov
dec
sti
jbe
std
push
cwde
fistp
repz
mov
mov
jecxz
jne
arpl
jg
pushf
out
jg
and
or
ins
xor
push
cmp
and
imul
push
pop
fldenv
stos
icebp
xor
adc
cmp
mov
hlt
nop
aad
das
add
outs
in
cmp
jle
jno
lods
retf
push
div
imul
xchg
push
popaw
and
es
mov
push
out
enter
adc
jl
les
cmp
mov
enter
fisttp
xchg
out
mov
jp
inc
jg
test
std
mov
shr
aaa
in
dec
jp
push
mov
mov
xchg
jno
mov
xchg
enter
pop
add
or
jnp
(bad)
dec
add
sub
dec
push
mov
xor
push
mov
xor
add
test
sub
out
mov
mov
into
cmp
(bad)
sar
mov
aas
sub
rcl
adc
add
es
icebp
in
sbb
dec
sub
inc
lahf
cmp
adc
pop
xchg
out
push
mov
call
scas
retf
nop
iret
pop
aad
out
test
pop
cmp
lods
adc
mov
into
adc
and
mov
test
add
xor
adc
leave
js
xor
fdivr
dec
test
das
ss
dec
fisub
lods
cmps
aaa
xchg
push
in
pop
inc
adc
mov
xlat
dec
cmp
mov
mov
imul
int
inc
(bad)
out
xchg
fdivp
fs
out
or
(bad)
cmps
lods
sub
or
iret
pop
pushf
fmulp
xor
icebp
stos
dec
add
cmp
ftst
shl
in
cli
dec
jae
mov
xchg
add
push
ja
ret
fdivr
inc
mov
cmps
mov
enter
and
add
jg
mov
mov
lea
adc
pop
xor
sub
enter
ret
lock
sub
jne
imul
test
push
inc
sbb
sub
fbld
iret
jmp
and
mov
inc
or
ja
enter
jmp
mov
ret
mov
xor
xor
ror
fstp
out
sub
or
movs
mov
dec
or
ins
jnp
imul
ss
es
mov
ja
lods
aad
push
(bad)
pop
sbb
mov
mov
lahf
lds
bound
mov
mov
add
ret
mov
pop
jmp
and
inc
pop
in
xor
add
mov
arpl
add
dec
aad
push
mov
arpl
test
inc
add
das
adc
shl
pusha
imul
gs
frstor
and
dec
or
lds
cdq
mov
adc
push
cmp
pop
cdq
mov
shl
ins
or
mov
mov
sbb
push
shl
test
dec
sub
mov
jbe
mov
mov
je
inc
cmp
(bad)
mov
sub
and
adc
iret
imul
xor
mov
inc
mov
pop
jb
fld
push
stos
cmc
lock
adc
mov
xchg
mov
push
sti
ror
stos
sub
jp
jge
adc
cmp
popa
sub
mov
hlt
add
jnp
or
and
mov
cmps
xlat
xor
add
in
jae
pop
iret
xchg
inc
mov
dec
mov
out
mov
jg
inc
iret
cs
add
pop
mov
mov
inc
pop
push
addr16
adc
xchg
fldlg2
xor
pop
cmps
inc
imul
adc
retf
dec
cmp
adc
jge
or
in
and
loopne
call
xor
daa
call
cld
dec
jecxz
push
xor
and
call
cmp
ret
pop
leave
push
pop
xor
dec
retf
fcomp
push
mov
aam
mov
xchg
(bad)
loope
push
adc
lds
fst
je
pop
ds
in
cmps
repnz
and
jmp
push
jo
test
(bad)
in
jmp
std
pushf
inc
out
mov
push
inc
mov
xchg
mov
push
lea
push
popa
or
pushf
test
and
aaa
sub
nop
jmp
(bad)
bnd
mov
loopne
retf
mov
pusha
cmp
dec
cld
dec
pushf
stos
cmc
(bad)
mov
retf
fcos
adc
mov
mov
sbb
icebp
inc
fld
add
cmp
mov
enter
cmp
pusha
add
data16
test
pushf
pop
ins
xchg
sub
mov
aam
into
or
(bad)
push
pop
or
mov
mov
lds
mov
dec
ror
je
stos
mov
clc
stos
push
cmps
clc
pop
shl
mov
lahf
mov
test
mov
jl
dec
or
ret
mov
sbb
pushf
loope
inc
inc
xchg
jne
sahf
pop
lock
ret
fsubr
jmp
mov
cli
push
sub
push
inc
fidiv
aaa
inc
inc
dec
add
sub
add
sbb
fcomp
ss
sbb
jg
(bad)
dec
sahf
nop
cmp
lds
inc
enter
retf
jp
pop
ja
repnz
or
out
mov
mov
jnp
daa
xor
in
icebp
push
rcl
jmp
push
loop
and
cmp
stos
add
push
ss
pop
sti
cwde
mov
push
mov
in
sti
test
and
add
fbstp
test
cwde
or
clc
call
stos
and
mov
mov
ins
jb
cmp
jmp
cmp
add
cmps
stos
cmp
ror
fmulp
push
jns
aad
sbb
fmul
jbe
inc
jle
dec
push
xlat
ret
and
fbld
dec
adc
push
mov
shl
sbb
scas
pushf
je
mov
xor
adc
jg
pop
mov
or
scas
arpl
mov
pop
or
dec
add
repnz
mov
sahf
mov
xlat
sbb
push
iret
or
push
cwde
(bad)
out
sbb
retf
popf
scas
or
popa
cwde
ins
push
lods
ins
jno
gs
sub
cmp
xchg
fisubr
and
sahf
xchg
retf
pop
and
xchg
mov
aas
cwde
cdq
sub
divps
out
rol
inc
dec
clc
jmp
xchg
mov
pop
fldcw
rcr
(bad)
adc
fmul
jno
addr16
fst
jg
out
lea
ss
mov
outs
or
fcomp
fimul
fnsave
jns
mov
jnp
fstp
sbb
ror
sbb
je
ja
mov
dec
mov
jp
scas
rcl
sbb
push
or
jae
scas
mov
inc
into
and
loope
ret
sub
and
dec
lds
dec
(bad)
jmp
sbb
mov
fwait
add
aam
jns
pushf
mov
(bad)
out
inc
int
or
ins
mov
es
mul
test
imul
retf
ja
popa
adc
xchg
jmp
pop
aad
jmp
mov
scas
lea
inc
lahf
push
cmp
mov
sub
jg
xlat
dec
push
or
xor
mov
js
sbb
pusha
push
popf
pushf
aam
sbb
in
jns
cmps
cld
in
adc
pop
pop
jo
cwde
mov
retf
je
adc
inc
in
mov
mov
xchg
or
bound
sbb
cmps
cmp
and
cmp
stos
adc
aad
inc
call
sub
mov
sbb
xchg
push
xchg
mov
data16
nop
loop
or
aam
add
cmp
in
mov
ds
pop
xchg
loop
test
or
mov
push
xor
dec
jnp
in
fcmovbe
or
xor
mov
nop
jb
add
pop
scas
jecxz
test
push
inc
stc
pop
add
in
dec
lock
std
push
add
leave
inc
dec
push
xchg
icebp
dec
or
xchg
mov
push
repz
ror
pop
inc
inc
in
adc
adc
jo
add
je
das
retf
push
inc
(bad)
push
and
inc
pop
adc
xor
in
mov
or
lods
pop
add
not
dec
pop
call
arpl
cmps
jo
sbb
lods
inc
inc
dec
dec
inc
and
ja
xchg
mov
or
and
lar
sbb
add
sbb
in
leave
fild
inc
les
jae
add
call
jmp
push
ret
mov
push
leave
dec
jge
pushf
fadd
or
xor
and
mov
call
ins
mov
xchg
test
(bad)
movs
add
jmp
mov
dec
xchg
test
push
xlat
jo
sub
and
jp
add
outs
mov
sub
add
inc
add
xchg
icebp
clc
loope
cld
ret
int3
xchg
hlt
push
cwde
and
xor
test
arpl
mov
xor
mov
push
es
add
mul
sbb
ins
jbe
stc
pop
in
or
mov
aad
adc
xchg
cmp
xchg
push
lods
add
pop
sub
iret
movs
cmp
push
mov
push
fild
inc
(bad)
out
out
xor
push
xlat
dec
(bad)
dec
mov
sub
sub
inc
mov
add
mov
dec
adc
push
mov
(bad)
rcr
bound
push
in
(bad)
pop
lea
push
shr
jb
xchg
cld
cli
cs
lock
mov
test
and
push
add
mov
mov
movs
daa
xlat
adc
(bad)
add
xor
inc
mov
test
popa
arpl
sub
or
mov
ss
int3
mov
fs
inc
mov
inc
cmp
push
(bad)
fisub
inc
repnz
jmp
lods
loopne
dec
(bad)
jecxz
cmps
aas
retf
dec
ret
les
clc
(bad)
jl
or
mov
dec
or
xchg
arpl
mov
out
mov
pop
jnp
or
fadd
mov
add
test
sub
repz
dec
adc
shl
hlt
shl
dec
sub
lock
ins
cmp
fs
mov
idiv
cs
mov
mov
nop
sub
cld
ja
inc
cmps
out
daa
xchg
jl
inc
mov
mov
(bad)
movs
or
retf
jns
mov
mov
fwait
cmp
jl
ja
test
mov
push
(bad)
pusha
sub
repnz
cmp
push
call
adc
push
push
cs
mov
or
mov
movs
shr
xor
mov
ret
push
dec
ficom
shl
jo
xor
ds
push
mov
push
push
push
jb
push
(bad)
lock
adc
repz
gs
loopne
rcr
push
ret
fs
and
(bad)
enter
xchg
mov
lds
sbb
mov
div
sbb
pop
push
jmp
sbb
mov
(bad)
mov
data16
add
aaa
or
push
mov
imul
out
pop
dec
mov
lahf
adc
jecxz
sbb
or
cld
sbb
mov
es
stc
inc
div
(bad)
and
into
fcmovu
jne
jns
mov
or
cmps
ins
das
pop
mov
jbe
es
imul
or
sahf
rcr
(bad)
jae
xchg
test
pop
mov
push
hlt
cmps
mov
test
sbb
sbb
xor
xor
or
sub
(bad)
lods
popf
push
pop
sar
cld
sbb
push
mov
mov
and
mov
fld
gs
push
xor
jmp
xor
inc
(bad)
fnstsw
xchg
not
push
clc
jmp
mov
cdq
bound
pop
call
rcl
and
fisubr
pop
or
mov
(bad)
xchg
cmc
and
pop
sbb
repnz
xlat
mov
adc
stos
test
int
scas
das
popf
nop
test
add
cmp
std
nop
stos
dec
(bad)
nop
and
lods
sub
dec
aaa
(bad)
or
push
sbb
icebp
dec
int
mov
(bad)
xchg
das
sub
cs
or
mov
adc
jle
mov
mov
pavgw
fucomp
imul
sbb
cli
add
push
inc
push
ss
repz
xor
xor
adc
dec
icebp
push
sbb
gs
pusha
int
adc
or
cld
xor
lods
stos
cmps
jnp
bound
(bad)
mov
stos
inc
mov
mov
xchg
in
jl
xchg
in
mov
dec
mov
out
jns
adc
jmp
mov
fwait
mov
sbb
jo
inc
sbb
into
mov
push
xchg
mov
movs
mov
imul
dec
push
cmp
pop
in
jmp
add
rcl
fadd
sbb
(bad)
push
retf
mov
fwait
inc
rol
xor
int3
sub
dec
cmp
sahf
mov
sub
pop
ficomp
mov
push
mov
test
movs
push
adc
loope
push
mov
sbb
adc
and
lods
iret
pushf
jmp
loop
lahf
jl
pusha
enter
addr16
pop
out
cmc
enter
push
push
jp
adc
xchg
das
aad
mov
rcr
nop
sbb
enter
push
add
mov
outs
mov
popa
lock
sbb
inc
xchg
add
cmps
lods
mov
scas
jmp
dec
(bad)
out
mov
cwde
outs
out
and
adc
pop
lahf
lea
mov
mov
mov
cmp
test
ja
xchg
sub
xchg
sub
xchg
paddd
xor
into
ins
(bad)
add
pop
ret
loope
sahf
sub
cmp
xor
pop
int3
popa
retf
push
sub
rol
mov
jg
repnz
add
pop
fsub
mov
sbb
fmul
je
pop
stos
ror
cmp
int3
ror
pop
mov
jno
ffree
jg
out
stc
loope
(bad)
clc
rol
adc
push
push
inc
shl
add
or
lods
imul
shl
xchg
inc
and
sbb
and
jmp
jo
sbb
jmp
pop
in
dec
jo
xchg
test
sub
adc
and
xchg
jnp
adc
fwait
mov
(bad)
imul
inc
xor
enter
push
nop
xchg
dec
jo
or
call
fs
mov
js
add
mov
sbb
pop
sti
ret
sbb
jno
movs
adc
mov
or
inc
not
fnstsw
iret
sbb
ret
scas
adc
aam
mov
and
jge
enter
cmps
jle
pushf
rol
addr16
iret
push
pop
jecxz
jns
not
addr16
popf
or
ins
fidivr
arpl
cdq
mov
adc
mov
add
pop
xchg
cli
jbe
imul
cmp
iret
mov
xlat
lds
and
ret
lods
push
jmp
lea
leave
adc
dec
and
inc
inc
repz
call
pusha
jno
ja
sbb
or
(bad)
in
scas
hlt
add
pushf
jne
ret
ss
nop
mov
fld
icebp
aam
gs
sub
enter
sbb
cmp
ss
sbb
xchg
je
push
int3
rol
and
push
rcr
out
xor
into
movs
or
mov
sbb
je
jbe
sub
xchg
out
iret
cmps
iret
dec
push
leave
mov
fs
mov
icebp
loope
pop
hlt
dec
pop
cli
dec
addr16
lods
nop
fsubr
fwait
or
inc
std
fisttp
adc
sbb
idiv
cmps
mov
fwait
leave
mov
jmp
sahf
pop
fstp
arpl
lea
es
loop
inc
repnz
fsub
xchg
cs
sub
cwde
mov
dec
push
pop
in
or
cmp
mov
stc
jl
sub
ror
out
inc
mov
cmps
mov
add
sbb
imul
push
mov
mov
jo
enter
ret
sti
xor
in
in
ins
inc
xlat
or
imul
xchg
inc
loopne
call
sub
sbb
inc
add
inc
imul
dec
sub
and
bound
xchg
inc
mov
pop
lods
mov
fadd
mov
sub
mul
clc
pop
sub
xchg
cwde
inc
test
mov
imul
dec
jnp
mov
push
icebp
stos
sub
fcom
pop
je
xchg
pop
push
or
test
dec
bound
mov
stos
int
inc
fnstenv
inc
adc
arpl
lea
lock
lea
shr
jg
ins
ins
(bad)
pop
out
inc
js
(bad)
(bad)
test
rcl
push
xchg
sub
repz
sti
jo
(bad)
cs
call
inc
jnp
lods
ins
outs
test
push
cmc
stos
adc
cs
aaa
fild
cmps
mov
aad
(bad)
rol
movs
mov
ja
popa
scas
out
sbb
(bad)
sub
cmp
mov
fnstenv
push
push
cmps
xchg
aaa
xchg
sub
and
out
lods
jo
sahf
iret
sub
and
xor
in
xchg
sub
xchg
mov
adc
(bad)
fwait
ret
sbb
lock
in
(bad)
(bad)
or
xchg
sub
ds
and
cmp
pushf
pop
add
stos
test
inc
sbb
inc
add
adc
push
sbb
cmp
in
test
xchg
test
jo
xchg
inc
int
aas
aaa
mov
lock
xchg
js
retf
int3
xchg
addr16
dec
xlat
lods
mov
adc
xchg
xchg
bound
arpl
ror
movs
movs
mov
xor
stos
inc
push
add
into
push
dec
stos
std
idiv
addr16
mov
sbb
dec
cmps
push
jmp
cmps
out
ins
ds
sbb
loope
in
jl
aad
inc
mov
rol
jmp
add
inc
call
mov
push
inc
push
rcr
ins
or
xor
xchg
and
fild
or
jecxz
xor
fisub
mov
es
popf
add
add
jle
cmp
add
dec
jp
pop
jg
es
and
int3
mov
retf
inc
inc
out
mov
leave
pusha
test
push
daa
xlat
out
les
fbstp
xor
repz
dec
out
stos
add
sub
dec
stc
sub
fild
dec
enter
jno
rep
idiv
les
push
sub
pop
stos
push
lods
inc
and
icebp
sub
jnp
dec
loop
cmps
cmps
mov
push
mov
mov
(bad)
aaa
cwde
dec
jns
dec
test
(bad)
sbb
dec
into
cmps
add
fs
mov
xor
sub
ret
xchg
sbb
(bad)
sub
sub
daa
fcom
imul
inc
hlt
loopne
xchg
in
fdivr
(bad)
jne
sti
xchg
test
jg
adc
popa
sbb
and
and
cld
sbb
xchg
sbb
dec
loope
mov
ja
mov
cmc
dec
mov
mov
sbb
jp
jns
or
dec
dec
or
das
pop
imul
arpl
ins
in
(bad)
push
dec
inc
xor
xor
outs
xor
cmp
icebp
out
or
mov
dec
in
shl
dec
mov
mov
push
inc
retf
jo
js
and
fild
xor
pushf
adc
pop
in
push
pop
loope
shl
sub
pop
mov
stc
daa
mov
je
jmp
scas
pop
push
sahf
adc
mov
jne
mov
push
jbe
inc
mov
data16
mov
cld
mov
(bad)
adc
fisubr
cmp
sbb
cmp
mov
in
pushf
(bad)
pop
scas
js
add
int3
pop
add
add
in
mov
pop
outs
or
xlat
add
push
ja
push
dec
rcr
ror
adc
add
sbb
lds
aas
pop
sar
mov
inc
imul
test
arpl
aas
fst
sbb
call
mov
gs
data16
pushf
cmp
iret
cmp
js
cdq
(bad)
fnstcw
mov
pop
pop
xor
xchg
dec
outs
daa
outs
pop
xchg
fwait
xor
mov
rol
test
mov
movs
pop
cmc
push
sahf
xor
std
data16
push
jnp
fwait
retf
sub
dec
and
dec
stos
cmp
jne
inc
ins
loope
xchg
ror
xor
out
iret
add
fld
sub
das
loop
cmp
ins
cmc
call
repnz
sub
lock
call
aas
mov
jmp
push
call
push
cli
mov
jg
and
mov
dec
push
pusha
pop
xchg
stos
mov
jecxz
and
mov
mov
push
xor
call
push
int3
cli
pop
push
enter
aaa
pop
pop
js
pusha
push
push
mul
(bad)
xor
jl
adc
cmps
dec
push
ror
xchg
cmps
out
cmp
jnp
cmc
mov
push
cmp
lahf
cdq
mov
aas
ds
xor
sub
jle
jbe
xor
xchg
retf
adc
push
les
int
cmp
sbb
pop
mov
cmp
stos
sub
mov
fisub
retf
push
sub
outs
push
inc
mov
ror
retf
aad
xchg
test
jns
mov
mov
test
mov
imul
ins
mov
or
mov
(bad)
cli
adc
and
mov
inc
pop
popa
sahf
push
mov
(bad)
mov
retf
sbb
fadd
popa
leave
in
pushf
mov
inc
test
out
sbb
mov
mov
push
ret
lahf
sbb
hlt
mov
iret
xchg
mov
neg
outs
cli
pop
jmp
jp
mov
fbld
mov
add
shl
jge
xlat
and
push
into
sbb
cmp
push
pop
outs
les
mov
xchg
cmc
outs
mov
pop
pop
fldcw
add
in
int3
(bad)
xchg
pop
jnp
(bad)
and
sbb
mov
rcr
aam
pop
sbb
push
xchg
(bad)
fistp
in
mov
jb
mov
adc
and
inc
outs
fwait
mov
mov
pop
and
cmp
iret
aaa
push
nop
fadd
test
cmc
ja
nop
f2xm1
adc
sub
das
push
cmp
movq
and
mov
lahf
and
inc
xchg
adc
cmp
sbb
mov
out
inc
and
and
xchg
add
cmp
lods
sub
or
int3
nop
sahf
pop
xchg
lods
and
pop
mov
(bad)
scas
jb
inc
movs
fnstenv
bound
loop
jmp
xchg
movs
mov
sub
mov
leave
inc
xor
inc
and
push
cmp
mov
ret
push
lahf
mov
push
pop
mov
int
jb
pop
jmp
fdiv
mov
pop
in
xor
std
mov
pop
xrstor
jmp
mov
cmp
pushf
mov
int3
mov
and
jbe
in
push
sub
test
js
std
(bad)
mov
xchg
in
ret
das
cli
pop
(bad)
cmps
add
sbb
or
sbb
cmp
movs
xor
xchg
push
scas
in
mov
lock
sbb
xchg
and
stc
imul
jb
loop
inc
mov
(bad)
inc
fcomi
push
sbb
movs
add
xor
daa
fidivr
sub
xor
pop
pop
dec
imul
loop
lods
sbb
push
mov
mov
adc
mov
das
addr16
clc
call
xor
test
and
popa
dec
adc
xchg
(bad)
loopne
retf
push
push
sub
outs
rcl
dec
push
ins
loop
pop
xchg
or
neg
add
mov
ds
adc
std
and
ins
aam
pop
push
jmp
jns
dec
mov
fimul
ds
cmp
bound
scas
dec
or
popa
xchg
(bad)
fcom
cmp
add
ja
dec
cmp
stc
pop
fwait
mov
test
dec
loop
sub
mov
inc
adc
dec
and
int3
and
outs
loope
daa
hlt
add
ret
test
mov
mov
adc
pusha
sub
ins
inc
idiv
repz
adc
xchg
sbb
jp
jns
hlt
push
xor
pop
inc
xor
movs
add
stc
js
and
test
dec
push
mov
test
jecxz
fld
mov
adc
xor
cmc
aam
aaa
(bad)
mov
mov
pop
add
add
(bad)
test
mov
scas
dec
xchg
idiv
int
and
jmp
btc
out
hlt
das
xchg
and
popa
inc
mov
hlt
pop
sbb
scas
(bad)
push
jne
stc
xor
mov
movs
or
mov
jmp
push
repz
add
mov
ror
mov
inc
retf
lahf
sbb
xchg
adc
mov
(bad)
fnstenv
xor
lods
clc
sub
sar
dec
movs
cmp
lahf
test
xchg
xchg
mov
aam
inc
fcmovu
outs
pop
fs
daa
sbb
push
pop
xor
ret
mul
out
call
cld
add
jp
repnz
add
mov
jg
aaa
sub
inc
mov
out
pop
xor
aas
sub
cmp
outs
or
mov
xor
pop
bndldx
push
lods
lahf
dec
dec
mov
jp
inc
xchg
or
(bad)
jb
mov
out
xchg
shr
mov
mov
std
dec
imul
inc
aaa
sub
js
pop
adc
mov
xor
je
sahf
mov
dec
xor
adc
repnz
push
les
je
push
test
dec
movs
sbb
cmp
std
cmp
jl
jmp
mov
push
push
mov
sbb
jge
scas
(bad)
int
cmp
outs
retf
mov
push
das
(bad)
xchg
and
sbb
mov
ja
iret
and
sbb
adc
adc
cmp
shl
dec
in
inc
adc
fldenv
pop
sub
je
repnz
and
dec
jmp
cmps
jnp
adc
pop
mov
dec
into
push
mov
mov
add
cmps
cmp
popa
xchg
mov
mov
in
cmc
cmp
jl
outs
mov
cmp
xchg
outs
push
test
mov
cmp
push
lods
xchg
or
ror
push
aam
test
neg
mov
or
inc
mov
sbb
scas
or
movs
mov
les
and
add
stos
mov
movs
in
add
loope
es
mov
das
push
in
add
xchg
loopne
stos
(bad)
jo
mov
scas
xchg
sbb
shr
add
ret
ins
push
hlt
stos
jmp
cmp
or
inc
pop
pop
sbb
in
xor
mov
sbb
ret
jmp
sbb
sub
or
sbb
dec
sahf
xor
cmp
cwde
mov
jp
jecxz
in
cdq
cmp
popf
or
sub
xchg
sbb
pop
push
xchg
fsubrp
fdivr
(bad)
mov
mov
sub
adc
hlt
push
(bad)
jmp
fidivr
and
push
mov
aam
jnp
pop
call
les
and
adc
lods
repnz
mov
sub
popa
pushf
mov
mov
jge
aam
inc
jne
add
lahf
adc
mov
mov
pop
mov
xlat
jne
mov
stc
inc
push
pusha
loope
ficom
cdq
jmp
and
dec
mov
mov
mov
lds
mov
imul
in
or
sbb
inc
xchg
scas
xor
jmp
imul
jecxz
jbe
test
cmc
test
inc
outs
ins
ins
aaa
in
xchg
adc
pusha
inc
out
lods
add
pop
xchg
int3
cmp
xchg
ret
add
fwait
inc
cli
int
or
popf
jnp
or
mov
and
scas
shl
sbb
xor
xor
pop
xchg
scas
aas
fbstp
fcmovu
out
sub
xchg
cld
rcl
inc
add
fucom
add
out
cwde
sbb
add
and
pop
xchg
ror
mov
pusha
fs
out
in
jmp
mov
dec
loop
outs
ins
and
fwait
mov
add
sub
mov
cmp
ja
je
(bad)
dec
pop
mov
xchg
out
int
dec
lahf
inc
call
shl
loop
movs
or
push
cmp
ins
or
dec
popf
popw
arpl
xor
jge
call
mov
push
mov
retf
sub
pop
das
mov
arpl
push
ds
les
mov
and
or
rol
hlt
mov
xchg
(bad)
adc
and
and
sub
mov
fild
fxch
(bad)
scas
push
xchg
fiadd
xlat
adc
push
repnz
mov
scas
mov
scas
popf
or
out
cmps
clc
stos
cmc
test
pavgb
repz
in
xor
sbb
jg
mov
fcomp
sbb
dec
out
pop
mov
cdq
add
or
xchg
cmc
arpl
inc
sub
mov
fs
xor
nop
push
iret
mov
sahf
push
jmp
cmp
mov
cmps
scas
mov
aam
mov
inc
shl
aas
gs
push
or
dec
cmp
xchg
(bad)
mov
inc
sahf
mov
cmp
aam
or
mov
rol
in
add
mov
xchg
out
retf
data16
rcl
pop
jp
fld
pop
or
sahf
sub
dec
aad
and
jge
mov
cdq
out
or
sbb
jmp
ret
call
aaa
outs
xchg
hlt
xor
add
or
and
mov
shr
stos
sahf
sub
pop
repnz
push
jecxz
fwait
xchg
sbb
pop
pop
fs
loopne
dec
dec
sub
neg
sbb
dec
mov
mov
cmp
hlt
cmp
dec
mov
loopne
int3
dec
test
dec
int
imul
mov
shr
leave
daa
jge
lahf
cmp
shl
fadd
pop
es
sub
dec
clc
mov
sub
in
jge
jg
jnp
and
(bad)
aas
mov
in
inc
mov
and
ins
pop
mov
rcl
cmp
inc
out
or
les
(bad)
add
push
sub
cmp
std
imul
test
add
sbb
jns
int
lds
cmps
dec
and
lock
adc
mov
add
xor
jmp
cmp
or
repnz
mov
push
iret
jp
or
ficomp
inc
jbe
xchg
jb
fst
jmp
adc
inc
in
mov
(bad)
in
ror
cmps
ficom
push
jo
aam
jae
test
push
lock
mov
cdq
retf
xor
bound
mov
mov
scas
add
retf
nop
(bad)
pop
pop
jno
and
inc
pop
sbb
adc
adc
aaa
ss
sbb
cmp
mov
xchg
sub
(bad)
mov
sub
icebp
and
and
push
(bad)
(bad)
(bad)
fcomp
adc
mov
lods
(bad)
call
mov
mov
sti
in
call
cmp
jae
ja
sbb
jp
leave
es
mov
lds
ret
jmp
sub
and
sub
mov
scas
jmp
ins
and
mov
js
mov
ret
inc
jno
sbb
stos
add
inc
cld
popa
out
push
or
loope
push
popf
pop
mov
mov
mov
jno
lahf
(bad)
fstp
jle
xor
je
pop
add
pop
xor
add
pop
jecxz
je
div
adc
pusha
adc
mov
mov
ror
pop
fmul
mov
or
inc
(bad)
inc
pusha
gs
sub
lods
or
xor
push
jbe
mov
mov
xchg
jne
mov
pusha
mov
nop
es
mov
jl
enter
pop
fsubrp
out
es
mov
enter
push
ret
push
(bad)
aas
into
into
dec
add
ret
jmp
or
adc
ss
xor
mov
push
and
adc
scas
shl
inc
test
cmp
sbb
pop
rcr
add
pop
(bad)
icebp
cmp
ds
ja
jp
rcr
cld
cld
je
sbb
push
xchg
xchg
and
out
add
arpl
(bad)
test
in
clc
jle
ins
mov
(bad)
pop
mov
test
adc
push
add
xchg
mov
push
enter
and
jmp
sahf
push
cmp
mov
mov
mov
jne
imul
shl
xchg
cmp
clc
repnz
jae
cs
scas
ins
cwde
dec
aam
cld
stos
iret
cmp
loopne
bound
(bad)
cmp
fld
push
jnp
dec
dec
or
mov
(bad)
mov
int
mov
adc
jnp
mov
fst
lea
outs
adc
out
in
adc
mov
adc
ss
mov
inc
out
lahf
adc
xchg
out
xchg
inc
icebp
lea
sub
jno
pop
add
pop
xor
or
inc
inc
cmp
imul
je
(bad)
int3
repnz
sbb
pop
bound
sub
cs
dec
les
sti
push
and
je
movs
fwait
hlt
ja
inc
adc
not
jb
cmp
clc
ficom
js
test
data16
dec
movs
inc
repz
enter
jmp
cmc
cli
scas
fiadd
in
fidiv
fst
jno
je
sbb
sar
dec
fist
mov
pop
retf
ficom
mov
adc
ret
cmps
xchg
(bad)
jo
jge
pop
lods
jecxz
sbb
jle
sub
sbb
jp
fidivr
ins
aam
jmp
fs
movs
mov
push
cmp
fwait
(bad)
aaa
cmp
ret
out
push
and
xor
ss
icebp
mov
mov
pusha
sub
xchg
dec
add
int
pushf
adc
mov
push
aad
ins
jns
xchg
jb
int3
push
(bad)
rcr
and
test
aas
cmp
es
jb
enter
enter
sub
sbb
aas
xchg
mov
jns
hlt
and
arpl
jge
jg
jmp
(bad)
and
push
xchg
mov
fcomp
cmp
cmp
repz
sub
ja
push
gs
adc
jg
into
test
out
cmp
mov
mov
mov
sbb
ror
mov
mov
xor
and
pop
arpl
dec
sub
stc
in
mov
into
push
cmc
cwde
pop
mov
stos
movlps
dec
add
in
arpl
pop
pop
in
mov
jecxz
sub
sbb
cmp
adc
mov
sub
sar
pop
(bad)
fst
(bad)
in
rcl
test
nop
mov
cmps
cs
inc
cmp
je
dec
jbe
mov
xchg
call
addr16
fldcw
adc
hlt
xor
test
mov
jmp
ins
imul
cmp
xor
cmp
out
jmp
adc
cmps
mov
and
shr
mov
aam
imul
fbld
cmps
pop
jnp
mov
mov
pushf
fs
ror
out
jno
inc
xchg
gs
sub
scas
sar
fincstp
dec
pushw
fs
cmps
in
xchg
or
fcomp
fstp
ret
fadd
xor
shl
xor
xor
retf
test
xor
(bad)
sbb
shr
loop
cmp
jle
inc
jnp
sub
push
fcom
call
and
cmp
mov
fisubr
test
ss
or
aam
cld
int3
sti
add
jl
push
pop
pop
mov
mov
add
sbb
bound
lea
aaa
mov
bound
mov
add
arpl
push
and
mov
dec
xlat
mov
and
in
mov
cmp
dec
add
mov
add
mov
js
sbb
call
mov
add
ins
repz
cmps
xchg
out
idiv
shl
jae
fdivr
rcr
mov
inc
jo
xchg
sbb
dec
ja
test
and
pop
jbe
pop
sub
mov
sub
mov
popf
mov
cmp
ds
sbb
ds
outs
cld
leave
dec
or
adc
or
sub
or
xor
loope
fmul
fidivr
mov
scas
in
cmp
bswap
mov
lea
(bad)
xchg
out
lea
je
xor
add
sbb
cmps
sub
mov
sbb
int3
jb
sub
cmp
stc
mov
pop
jnp
xchg
jmp
cmps
or
xor
mov
mov
xchg
out
addr16
push
or
push
sbb
sbb
cmps
cdq
jmp
cwde
mov
cmp
es
mov
push
mov
ds
aas
jno
loope
call
jbe
stc
mov
sub
js
repz
mov
mov
cmp
mov
jns
ret
pop
dec
xor
xchg
out
(bad)
xchg
xor
test
addr16
fidivr
jle
aam
stos
call
mov
jg
cwde
sub
sub
ret
mov
sahf
and
sbb
pop
cmp
jne
(bad)
xchg
inc
sub
call
pusha
(bad)
jnp
std
enter
loop
pop
lds
cmp
xor
scas
sub
adc
or
pcmpgtw
lea
xchg
add
adc
ds
jnp
js
fadd
mov
mov
ficomp
jbe
stos
shr
xchg
mov
lods
mov
lock
(bad)
mov
cmp
movs
imul
sbb
push
(bad)
(bad)
pop
xchg
icebp
inc
jbe
cwde
jecxz
mov
pop
jae
xchg
jmp
xor
add
and
jb
es
cmp
jnp
pop
fmulp
ficomp
cld
fidiv
stc
inc
push
std
xor
jmp
shr
mov
xor
lea
adc
std
jecxz
loope
pusha
js
pop
(bad)
dec
sub
xor
in
dec
sbb
add
adc
jae
and
xchg
pop
mov
cmps
scas
sbb
cmp
out
sbb
mov
popf
xchg
movs
inc
jno
add
sub
sub
ror
adc
or
sti
inc
or
mov
fwait
aad
loopne
cmp
sbb
jbe
add
cdq
jae
jmp
or
ja
out
jno
dec
arpl
jmp
out
or
imul
movs
in
jbe
mov
dec
sbb
sbb
xor
inc
push
inc
and
pop
push
mov
xchg
(bad)
rcr
ret
fwait
push
adc
mov
sub
adc
in
or
aas
shr
and
aas
xor
je
arpl
imul
adc
inc
jmp
or
jbe
cmp
mov
add
and
rcl
in
stos
int3
loopne
push
mov
cmp
jne
out
retf
out
test
jp
push
dec
add
sbb
sub
mov
push
fwait
(bad)
scas
stos
pop
popa
push
ja
cmp
out
and
ins
imul
js
mov
push
cmp
rol
cmp
mov
sub
xchg
lods
cmc
adc
dec
jnp
scas
hlt
sbb
mov
fs
int
out
inc
(bad)
xchg
ins
inc
sub
(bad)
sbb
jg
push
sub
dec
test
sub
hlt
xor
imul
shl
loop
mov
and
jae
enter
jo
jns
xor
push
jb
retf
lods
retf
les
push
sar
out
je
mov
into
jp
mov
arpl
inc
sbb
mov
xchg
mov
mov
mov
sbb
jmp
xchg
push
cmp
pop
daa
mov
jnp
sub
push
(bad)
sub
jmp
bound
ficom
jp
into
mov
into
sbb
cmc
mov
and
mov
pop
xor
inc
mov
xchg
xchg
inc
cs
idiv
loop
aaa
and
test
mov
mov
inc
xchg
inc
sbb
(bad)
jmp
mul
ret
mov
sbb
adc
jmp
pop
test
cmp
cli
add
addr16
pop
mov
jl
mov
inc
add
mov
neg
movs
imul
test
dec
dec
mov
xchg
inc
sbb
dec
cmp
jle
cs
xchg
inc
addr16
sbb
or
pusha
jmp
dec
(bad)
jbe
int3
shl
(bad)
loopne
js
dec
repnz
and
push
daa
aam
not
jb
sub
stos
push
lods
and
push
fiadd
mov
sub
inc
or
and
jge
stos
dec
lds
push
outs
into
or
dec
xchg
xchg
inc
push
inc
mov
out
ja
(bad)
(bad)
(bad)
push
or
popa
xchg
pop
(bad)
dec
dec
add
add
mov
push
fdivr
mov
cld
movs
stos
xchg
pop
or
pushf
mov
pop
push
cmp
adc
les
mov
loope
sbb
daa
out
xor
fnstsw
or
push
jecxz
and
cmc
lods
cmp
jmp
jl
fnstsw
div
inc
sub
inc
jmp
xchg
cmp
mov
rcr
dec
dec
pop
mov
and
fstp
xchg
sbb
int
add
pop
mov
loope
outs
push
sbb
and
mov
ret
loop
push
mov
mov
pop
loop
in
xchg
sbb
lods
iret
xchg
call
shl
and
and
fld
cmps
pop
pop
add
int3
push
dec
sbb
ss
ss
dec
jnp
out
gs
jmp
cmc
mov
test
mov
pop
nop
adc
dec
aas
mov
xchg
movs
mov
sbb
sub
jbe
fisttp
sbb
inc
pop
xchg
les
sbb
scas
popf
mov
(bad)
pop
sti
pop
repz
mov
in
xor
add
jecxz
lods
rcl
jmp
sub
or
and
neg
hlt
cli
push
fs
mov
test
inc
lahf
sub
xor
es
stos
leave
shl
cmc
mov
jmp
adc
pop
sbb
jl
sub
mov
add
mov
xor
mov
addr16
loop
lods
popa
add
lahf
sub
pop
cmc
popa
xor
repz
cmp
(bad)
cs
aaa
in
ja
in
loope
fstp
in
and
popf
inc
mov
inc
dec
jne
cmc
mov
cmp
dec
xchg
xchg
mov
test
addr16
iret
mov
pop
icebp
test
adc
xor
mov
xchg
xchg
fidiv
push
in
dec
(bad)
pop
repnz
pop
ds
loope
sbb
push
mov
xor
fild
xchg
ins
fidivr
arpl
add
outs
gs
adc
sub
aaa
push
mov
pop
mov
push
test
les
xchg
add
adc
mul
jo
jne
jp
xlat
cli
dec
sub
dec
loopne
rcl
pop
and
jecxz
jle
or
and
and
inc
dec
stos
pop
push
into
or
cmp
pusha
rcr
cmc
mov
data16
adc
push
dec
sti
movs
not
or
jmp
pop
std
jl
jo
sub
pop
mov
hlt
pop
call
retf
push
xchg
jmp
lock
ins
inc
ret
sar
outs
mov
js
mov
jle
pop
jae
in
pop
jmp
lock
sub
cmp
inc
sbb
push
xadd
test
mov
div
ss
xchg
gs
scas
mov
fs
mov
loope
jne
or
mov
mov
adc
mov
mov
in
(bad)
pusha
fisub
addr16
(bad)
out
rcl
and
fwait
push
cmps
sbb
retf
xor
add
enter
mov
(bad)
mov
cmp
cmps
loop
test
icebp
int
nop
mov
sbb
aas
pop
push
push
cdq
mov
dec
xlat
in
arpl
jg
mul
fstp
shl
(bad)
push
adc
out
inc
inc
jb
mov
arpl
test
xchg
dec
loop
test
fnstenv
lahf
xchg
pop
popa
cdq
and
int3
pop
jno
sbb
push
call
in
lock
icebp
or
movs
push
ret
xchg
jmp
in
inc
outs
or
in
fsub
mov
or
jns
jns
push
sbb
(bad)
bound
pop
je
imul
and
jmp
mov
movs
dec
mov
test
push
adc
sbb
and
and
retf
sbb
addr16
sub
sub
es
xchg
inc
jp
inc
mov
popa
sbb
cmp
rcr
mov
and
imul
cmp
xor
fisttp
aas
xchg
xor
mov
push
jne
out
es
icebp
add
outs
cmp
call
sbb
fist
lods
and
div
mov
ds
cmp
popa
pop
dec
js
push
ds
std
dec
fs
inc
(bad)
cmp
(bad)
xor
in
cmps
inc
push
sbb
push
scas
inc
leave
sti
pop
sub
fsubr
into
mov
pop
mov
push
loope
cmp
dec
and
(bad)
loopne
call
sti
inc
push
cmp
test
cli
sub
mov
imul
in
push
arpl
mov
in
fld
(bad)
lds
mov
cmp
fistp
or
and
and
xchg
bound
sbb
repz
cdq
sti
jge
test
fbstp
dec
or
icebp
sub
push
mov
stc
cmp
loopne
sbb
jae
adc
jae
dec
mov
xchg
lea
mov
xor
mov
mov
int
push
jecxz
jae
iret
and
daa
(bad)
push
retf
push
fidivr
loop
mov
mov
add
fisubr
push
xchg
push
mov
xchg
push
inc
sahf
pushf
inc
aam
ins
push
idiv
les
loope
jmp
push
xchg
jl
in
cli
enter
inc
in
push
and
mov
ffreep
aad
out
pop
add
(bad)
lods
sbb
inc
clc
push
and
sbb
(bad)
push
or
push
push
mov
or
lahf
std
dec
std
lods
push
jbe
stos
(bad)
enter
push
jge
jo
jae
cmps
test
mov
push
bound
sbb
push
popa
maskmovq
test
iret
in
fcmovb
push
cld
mov
dec
(bad)
sbb
aad
mov
enter
pop
and
stos
into
rol
lods
pushf
xor
repz
sbb
ret
cmp
nop
in
cmp
lods
lds
sub
add
(bad)
jns
clc
bnd
cmp
jns
(bad)
jg
(bad)
(bad)
jmp
push
vmulps
sub
xor
xchg
jmp
or
xor
adc
retf
xlat
in
leave
ret
dec
cmp
aas
cmp
into
dec
cmp
adc
daa
loope
push
imul
ss
les
shr
xor
loop
stc
mov
mov
pop
pop
pop
ficom
cmp
add
lods
push
es
jmp
mov
and
cmps
push
shl
cmp
or
mov
mov
aad
sub
xchg
out
push
jns
mov
mov
stos
push
loope
call
scas
mov
call
shr
pcmpeqd
xor
jae
(bad)
jecxz
cmp
out
push
inc
mov
and
jns
fnstsw
(bad)
mov
or
sbb
je
or
das
cmp
into
xor
test
cld
test
add
xchg
sub
add
dec
or
mov
add
stos
fwait
jns
mov
adc
and
test
and
sub
sar
daa
push
xor
fist
xchg
inc
shl
sbb
jl
hlt
mov
data16
clc
in
adc
sub
sbb
lahf
pushf
fwait
(bad)
(bad)
sbb
in
test
ds
lea
dec
lods
mov
clc
int
scas
loope
and
mov
jmp
cmp
xchg
add
aaa
pop
inc
or
aas
out
neg
daa
jg
mov
mov
add
mov
sub
lods
jmp
inc
inc
jne
not
sub
ret
jnp
repnz
(bad)
int3
ins
sub
in
push
mov
sub
(bad)
fucomip
mov
mov
iret
jmp
mov
int
pop
and
popa
aas
cli
fwait
lods
dec
add
cmc
ds
xchg
leave
and
pop
call
ret
mov
cmp
cmp
rol
mov
mov
lods
cmp
into
jle
sub
imul
test
repz
pop
icebp
cmp
pop
ja
ins
or
(bad)
push
bound
add
shl
push
mov
stos
jbe
(bad)
and
xlat
jge
xchg
lock
xchg
push
mov
icebp
or
adc
push
dec
adc
enter
mov
inc
adc
imul
aam
add
inc
rcl
fwait
xchg
push
arpl
(bad)
fdiv
add
mov
movs
outs
add
mov
aad
cmp
imul
mov
test
and
sbb
push
or
jmp
jae
jmp
xorps
push
or
xor
das
mov
pop
add
xlat
adc
scas
pop
in
leave
aad
dec
add
push
jnp
nop
mov
mov
int3
ja
and
inc
xchg
and
fcomp
cmp
dec
retf
jbe
fsub
shl
inc
adc
push
cmp
aas
xor
add
inc
imul
or
out
lds
jmp
jne
rcl
inc
add
and
add
(bad)
cmp
gs
leave
mov
xchg
mov
push
pop
mov
fnstenv
loop
faddp
aam
and
outs
(bad)
sbb
into
adc
mov
ror
jno
and
push
xlat
inc
fadd
dec
mov
lds
loop
pop
xchg
mov
lods
out
retf
pop
imul
(bad)
mov
jl
jo
jecxz
fs
push
inc
(bad)
mov
nop
sbb
xchg
dec
jnp
add
jge
push
pop
push
mov
lock
mov
xor
fld
ins
fs
retf
cmp
cmp
mov
cld
mov
loope
mov
call
pop
cmp
mov
dec
add
cwde
popa
push
popa
test
cmps
mov
push
sbb
mov
repz
fld
xchg
sub
popf
rol
xor
outs
loope
and
pop
scas
jl
in
pop
pusha
jp
(bad)
cli
imul
sub
and
sub
and
jl
cmp
sub
mov
cmc
lods
push
jae
mov
test
and
or
cmps
mov
mov
test
pop
push
pop
push
mov
add
cmp
ret
sbb
add
add
xchg
inc
popa
pop
in
pop
test
test
and
cmp
cwde
ror
lods
sar
mov
popf
scas
cmp
inc
sub
rcr
mov
int
adc
sbb
mov
(bad)
mov
out
mov
ja
fcomip
int3
sbb
mov
mov
clc
mov
stc
inc
movs
mov
aad
dec
lods
nop
sbb
pop
sub
inc
pop
push
jb
or
sbb
adc
inc
(bad)
adc
mov
mov
and
mov
push
icebp
fcmovne
sbb
ins
mov
mov
lods
dec
cmp
lea
sbb
inc
or
or
jae
jle
cmp
jae
push
jp
jb
test
arpl
push
mov
shr
shr
fnstsw
mov
jne
(bad)
push
xchg
xor
xchg
scas
ins
mov
xchg
pop
pusha
sub
and
test
retf
rcl
xor
jno
fstp
dec
inc
push
adc
sub
or
mov
test
fmul
jmp
cld
loope
loop
push
sbb
pop
gs
push
sub
jbe
or
test
loopne
aad
inc
inc
ins
inc
add
not
inc
push
mov
mov
jae
xor
jno
jg
mov
cwde
fs
popf
push
or
in
js
add
mov
add
ret
dec
lock
adc
std
inc
inc
pop
fwait
out
leave
arpl
in
clc
in
fild
add
push
retf
xor
cli
enter
sbb
cmp
and
fst
xor
mov
mov
inc
dec
mov
or
psrlw
push
retf
inc
and
push
xchg
and
pusha
push
mov
out
dec
jp
outs
sbb
pop
push
mov
mov
int
sub
sbb
out
add
pop
es
mov
jne
jge
dec
out
xor
xchg
or
mov
int3
jno
jp
pusha
pusha
jns
cmp
or
adc
pop
gs
lods
ja
shr
movs
jmp
fwait
imul
movs
fnstenv
sbb
ja
xor
push
push
pop
xchg
cld
push
repz
xor
mov
mov
ret
xchg
dec
shl
les
movs
xchg
pop
jge
sbb
jp
fsubrp
lods
sub
lea
mov
and
test
or
fsub
mov
or
mov
mov
xchg
data16
rcr
pop
adc
jno
pop
fisub
movs
jge
cwde
mov
lods
icebp
in
iret
data16
push
cs
xchg
hlt
mov
sbb
push
pop
repz
mov
int3
daa
test
and
xchg
test
and
xor
ffreep
scas
retf
inc
jb
cmp
shl
stos
call
fist
and
cmc
popa
xor
frstorw
dec
and
push
(bad)
push
icebp
cmp
xor
cmps
and
cmp
ja
out
cli
enter
xor
scas
pop
jecxz
inc
push
pop
xlat
push
fisttp
sub
cwde
xchg
mov
adc
pop
xor
sub
retf
adc
ins
or
adc
ss
sbb
mov
jns
imul
push
mov
bound
scas
mov
aad
jge
adc
adc
mov
jmp
mov
dec
dec
loope
cld
(bad)
std
cmp
in
rcr
jl
lods
or
cmp
arpl
and
cld
or
mov
jl
xor
push
push
iret
(bad)
sti
xor
push
mov
lods
cwde
jmp
mov
xchg
(bad)
add
mov
js
mul
in
mov
icebp
cdq
jle
cmp
repz
stc
xchg
das
fxtract
imul
push
jo
ror
sbb
pop
cwde
loopne
mov
stos
jp
mov
aam
and
pusha
xor
ss
sbb
sub
xor
jno
pusha
push
js
add
clc
mov
(bad)
jns
sbb
clc
cmp
xor
cmps
les
arpl
sbb
xchg
xor
push
mov
mov
or
add
xor
xchg
and
mov
daa
push
mov
mov
add
inc
shl
inc
imul
xor
inc
mov
dec
xor
mov
mov
or
xchg
daa
mov
inc
fldenv
cmps
aaa
and
leave
push
sub
cmps
jne
dec
add
mov
(bad)
cmp
xor
push
adc
xor
fcomp
pop
mov
cmp
and
adc
pop
in
fsub
shr
aad
xchg
pop
shr
adc
mov
sub
gs
cwde
jbe
adc
xchg
push
and
cmps
jge
fs
xor
cli
sti
push
sbb
mov
jg
movs
icebp
rcl
ror
jbe
adc
push
int3
int3
xor
ret
push
mov
(bad)
not
gs
es
add
fwait
jo
jl
ja
cld
xchg
idiv
inc
add
push
lods
pop
bswap
hlt
cwde
xlat
jbe
xor
test
aad
loop
mov
sub
ds
xlat
je
imul
dec
xchg
std
mov
jns
push
inc
aas
call
inc
dec
(bad)
in
movs
mov
not
pop
mov
push
sbb
pop
and
cmc
popa
fdiv
jns
jbe
mov
and
gs
test
scas
pop
test
clc
jmp
fdiv
mov
ret
sahf
out
mov
push
call
mov
cdq
bswap
mov
(bad)
out
mov
pop
adc
cld
aas
test
adc
int3
sub
or
sti
sbb
xchg
adc
icebp
lods
pop
(bad)
das
dec
sub
repnz
mov
cmp
arpl
push
push
pop
mov
xchg
xchg
sub
movs
mov
mov
jnp
mov
sbb
das
loop
bound
or
dec
jno
push
pusha
adc
and
mov
sbb
xchg
rol
test
cwde
ror
inc
or
or
fisub
ds
add
adc
sbb
xchg
nop
ficomp
mov
adc
add
add
add
push
jl
imul
xor
ret
mov
mov
jbe
cmp
pop
cmp
icebp
(bad)
rcl
cmovne
or
es
inc
cmp
(bad)
loopne
jmp
adc
in
into
sub
les
test
lods
cmp
(bad)
int
xchg
mov
jle
add
fwait
xchg
push
pop
loope
int
(bad)
push
cmp
(bad)
stos
add
ss
cmp
cs
mov
sbb
bound
dec
and
pop
test
mov
outs
push
je
jg
sbb
inc
nop
inc
pop
mov
data16
mov
je
xchg
mov
mov
push
push
retf
frstor
sbb
inc
scas
or
inc
adc
js
(bad)
mov
cmp
fs
cmp
mov
xchg
xchg
inc
je
aam
test
or
mov
call
pop
(bad)
mov
push
sbb
pop
jmp
loope
daa
jno
xchg
xchg
xor
(bad)
in
push
in
push
xchg
imul
clc
jae
ss
or
int
js
cwde
xchg
imul
repz
xchg
aaa
cmp
mov
fidivr
push
xchg
(bad)
gs
push
(bad)
clc
adc
mov
mov
pop
mov
jb
xchg
cmp
test
mov
jp
dec
shr
test
cld
(bad)
(bad)
in
mov
jb
clc
fld
fst
in
fiadd
xchg
cmp
or
clc
sbb
cld
test
in
outs
fdiv
cmps
dec
sub
fsub
xor
ins
fdivr
inc
shr
ds
stos
cmp
dec
iret
sbb
mov
and
aad
xchg
jmp
inc
sub
(bad)
add
mov
push
mov
aad
(bad)
sub
inc
out
dec
jge
mov
xchg
or
retf
jmp
adc
sbb
les
ins
enter
cdq
dec
push
stos
in
fucom
pop
jg
rcr
mov
mov
or
sub
retf
fs
pop
je
inc
jmp
scas
pop
dec
add
inc
sub
xor
and
adc
loopne
imul
mov
cli
push
jmp
mov
jmp
imul
cdq
dec
add
xor
pop
add
jne
std
rcl
mov
sub
popa
rcl
mov
jbe
nop
cmps
push
repnz
rcr
adc
nop
mov
lahf
jp
loope
ficomp
add
loope
mov
mov
dec
sbb
jbe
sub
enter
xchg
adc
in
je
xlat
or
inc
mov
cmp
sbb
or
int3
fld
popa
ins
inc
scas
test
or
or
addr16
push
cs
add
cmp
pop
pop
cli
test
(bad)
xor
fdiv
push
cmp
dec
mov
sbb
rol
cmps
addr16
loop
aam
mov
xor
aas
and
nop
call
scas
and
stc
int3
in
or
test
into
add
mov
arpl
and
dec
clc
push
pop
lahf
push
sub
sbb
ja
addr16
mov
add
sti
cmp
add
cli
sbb
push
mov
lods
and
sub
ret
(bad)
test
aad
(bad)
xchg
inc
and
jmp
rcl
jecxz
sbb
retf
dec
loop
sub
cmps
outs
adc
je
inc
es
inc
enter
js
pop
cmp
popa
adc
add
fidivr
sub
clc
call
or
sbb
jmp
js
test
add
and
add
mov
pop
fwait
and
bound
lods
fcomp
jno
sub
sbb
dec
and
and
push
jmp
add
adc
cmp
aam
int
mov
inc
leave
push
lods
jnp
dec
push
(bad)
in
out
add
leave
mov
and
mov
cs
mov
xor
xor
scas
push
cli
or
xor
or
add
popf
lods
mov
jae
test
and
lods
loope
(bad)
in
xor
sbb
mov
push
sbb
xchg
or
dec
xchg
mov
aas
sbb
outs
imul
or
sub
(bad)
add
mov
pop
in
cwde
daa
mov
movs
sub
pop
inc
ficom
out
cmp
push
mov
ins
iret
out
outs
fs
cwde
sbb
shr
inc
or
jbe
ins
int
mov
sbb
jmp
adc
div
or
inc
fwait
xchg
dec
dec
push
fst
(bad)
cld
and
mov
jbe
test
xchg
cwde
div
sbb
jl
int3
aam
leave
mov
adc
int
(bad)
arpl
jo
repz
es
cwde
ss
ror
and
(bad)
push
rcl
dec
jle
jo
shr
and
sar
test
and
ins
pop
idiv
mov
mov
std
arpl
pop
inc
xchg
xor
repz
lods
push
add
dec
jbe
stos
imul
sbb
dec
repnz
dec
cwde
stos
and
sub
sbb
xor
inc
out
push
jmp
push
pushf
xor
dec
int
retf
mov
mov
inc
fistp
pop
test
dec
adc
(bad)
pop
icebp
js
arpl
std
mov
loop
scas
inc
dec
inc
fimul
sbb
(bad)
mov
daa
push
mov
add
es
iret
sahf
fwait
xchg
rcr
addr16
sbb
xchg
dec
mov
stc
adc
push
sbb
or
xchg
jmp
cwde
mov
into
in
inc
outs
inc
cmps
popf
fcomi
daa
idiv
push
sar
push
jl
mov
jmp
jg
jle
fwait
push
mov
popa
push
pop
sub
push
sbb
xor
xchg
mov
or
sbb
mov
sub
add
int3
mov
test
push
mov
arpl
sub
fidiv
leave
ds
ss
pushf
arpl
cmp
dec
push
rol
xchg
in
(bad)
pusha
stc
mov
adc
jmp
pop
sbb
sar
xchg
or
xchg
mov
shl
or
aad
pop
adc
scas
shld
lea
push
xchg
add
pop
adc
or
xchg
dec
push
sub
and
or
dec
mov
xchg
sub
es
sbb
out
ss
xor
inc
cmp
jp
sbb
push
stos
int
or
and
rcl
mov
aad
xchg
xchg
mov
int3
cwde
(bad)
sub
leave
mov
jmp
inc
ret
push
shl
push
cmp
mov
or
or
test
adc
push
mov
cwde
rol
inc
mov
inc
fmul
movs
cdq
pop
push
or
push
mov
sub
popa
xchg
sahf
or
jns
xchg
pop
cmps
dec
icebp
sub
pop
out
je
daa
pop
xchg
dec
ret
cwde
mov
xor
imul
sub
stos
adc
push
sbb
movs
push
dec
fisubr
mov
ss
jl
push
(bad)
jae
adc
sub
xchg
xchg
jno
adc
mov
inc
or
aas
les
rcl
or
in
and
adc
add
dec
into
out
xchg
imul
ret
in
test
cmc
nop
dec
stc
gs
out
dec
dec
mov
psubq
jb
(bad)
ins
xor
mov
sbb
lock
jb
mov
sub
in
add
push
or
pop
pop
fwait
in
xchg
shl
sub
mov
pop
jmp
out
or
sub
cmps
xchg
into
adc
sub
daa
pusha
lahf
cli
movs
nop
inc
movs
push
inc
imul
pop
sub
imul
in
mov
clc
push
fistp
rcl
inc
push
stc
mov
sti
push
inc
sbb
add
lods
popa
cmc
in
test
out
add
add
rcr
das
mov
jmp
in
and
div
dec
bound
lahf
fimul
(bad)
jge
mov
mov
gs
not
sbb
mov
push
sub
xor
or
pop
inc
shr
in
ror
cs
mov
cmp
out
mov
and
mov
push
aaa
and
adc
fdivrp
adc
push
or
cmp
ja
add
push
ja
cli
adc
cmp
push
ja
fs
scas
jp
xlat
ss
inc
pop
jb
sbb
sub
retf
test
scas
sbb
add
arpl
mov
(bad)
lahf
int
sbb
mov
shr
les
inc
and
jns
(bad)
ja
pop
pop
fidiv
popa
xchg
xor
lock
cs
mov
mov
leave
sbb
mov
(bad)
mov
(bad)
dec
pushf
test
pop
xor
pop
sub
pop
jp
outs
jae
out
mov
loop
in
ret
test
adc
mov
stos
push
nop
jbe
jmp
mov
hlt
nop
xor
pop
fistp
ret
push
stos
xchg
add
je
mov
cmp
add
in
add
and
fld
push
mov
or
and
mov
jle
aas
adc
shl
hlt
jb
mov
pop
mov
pusha
dec
pop
cmps
repz
test
dec
and
jmp
cmp
mov
loop
push
out
rol
pusha
adc
ins
jle
and
add
jp
or
adc
inc
xor
adc
(bad)
cmps
sbb
cmc
mov
jb
xor
cld
sti
mov
sti
push
stc
sub
aas
dec
pop
ins
xor
fwait
and
shr
movs
add
sub
cld
aam
fisttp
retf
aas
pop
pop
push
cmp
into
push
mov
cmp
jl
sub
pop
mov
(bad)
repz
and
jg
or
adc
mov
stc
fisubr
popa
test
fwait
call
enter
retf
fbstp
scas
jle
push
mov
sbb
sbb
retf
mov
gs
leave
je
repnz
pop
pop
leave
hlt
les
lods
pop
push
cmp
in
jmp
loop
lds
jnp
xchg
cdq
sbb
inc
dec
out
jmp
aad
sub
inc
cmp
xor
xor
xchg
cmp
cmc
iret
and
clc
add
add
loopne
jp
dec
sub
push
fiadd
shl
outs
xchg
add
jle
js
fld
ret
fstp
adc
pop
inc
in
fsubr
pop
push
mov
cs
xchg
in
push
dec
cmps
mov
lea
sti
mov
mov
pop
iret
movs
push
inc
xlat
in
sub
add
js
aad
inc
xor
jnp
cmp
jle
test
pop
in
add
sar
mov
loopne
push
in
mov
add
mov
loop
clc
or
add
repnz
or
imul
pop
add
int
dec
pop
daa
push
mov
mov
loopne
mov
outs
sub
bound
push
adc
adc
cmps
shr
cmp
out
(bad)
les
or
and
fistp
jo
gs
push
icebp
sahf
or
iret
mov
or
or
mov
sub
mov
xchg
dec
xor
jne
and
cmc
add
inc
cwde
push
adc
jl
xor
movs
mov
cmp
cmp
xor
cmp
int
jo
add
in
mov
pop
addr16
mov
xchg
jno
(bad)
jnp
test
fwait
cmp
mov
pusha
xchg
or
shl
in
lahf
pop
lea
test
fistp
add
push
sahf
mov
int3
fstp
fsub
mov
hlt
ret
pop
cmp
xor
pop
sub
cmp
pop
mov
push
out
sbb
imul
push
add
mov
cmp
xchg
and
(bad)
or
cmps
out
cli
mov
push
ret
pop
int
arpl
sbb
sub
pop
neg
sar
js
dec
(bad)
mov
mov
cmp
pusha
lods
dec
adc
mov
imul
cmp
cmp
and
jmp
call
jg
stos
pop
cmp
mov
jl
pop
mul
gs
sub
adc
stc
imul
sub
or
dec
sub
cmps
push
test
dec
jmp
fld
mov
inc
push
mov
mov
outs
jge
push
dec
push
ss
(bad)
sti
add
cs
rcr
xchg
mov
inc
xchg
in
sub
cwde
into
mov
inc
xchg
das
outs
pop
cdq
not
das
daa
sar
add
sbb
inc
cmp
xor
dec
jmp
jp
aam
xor
xchg
xchg
pop
sub
clc
dec
mov
test
cmps
fsubr
dec
or
jne
xor
jo
mov
sbb
(bad)
dec
pop
and
pushf
addr16
lds
std
mov
push
icebp
sub
pop
add
(bad)
fcomp
movs
aas
cld
loop
jno
popa
jmp
add
test
or
xchg
out
cld
(bad)
and
fadd
xchg
mov
jg
call
in
mov
int
push
xor
aaa
cld
inc
stos
ror
aam
ret
pop
mov
pushf
xor
pcmpgtd
popa
test
push
scas
inc
and
mov
or
mov
das
push
xchg
mov
out
adc
gs
into
xor
sub
in
xchg
inc
add
sub
adc
mov
bnd
or
mov
rcr
in
jecxz
push
enter
lods
cmc
and
add
jno
inc
mov
lods
mov
mov
push
ret
jmp
imul
cld
fisubr
xor
cmps
jle
out
arpl
jne
test
aam
jmp
dec
push
cmp
retf
call
mov
mov
arpl
push
test
inc
imul
outs
test
pop
push
imul
cmps
ins
div
pop
jns
sbb
ja
out
mov
iret
push
ss
in
out
xchg
dec
aaa
retf
leave
movs
cmp
ins
adc
imul
aad
sbb
(bad)
rcl
xchg
sbb
mov
div
sbb
aad
push
mov
pop
ja
xor
sub
repnz
test
fsubrp
mov
jmp
or
and
cmps
sbb
pop
dec
fdiv
pop
rol
xchg
out
neg
mov
int3
enter
add
lahf
in
aaa
adc
jmp
mov
outs
(bad)
fcmovnb
retf
das
scas
mov
push
sub
dec
lods
arpl
test
mov
xchg
rcl
sbb
inc
cmp
mov
or
cmc
cwde
push
add
mov
call
xchg
int
cwde
jg
mov
mov
add
or
cld
call
arpl
sbb
dec
sti
or
dec
jmp
mov
inc
jnp
lds
in
icebp
cmp
sahf
dec
pushf
(bad)
mov
push
fidiv
ja
popf
pusha
stos
dec
hlt
loopne
call
and
loope
or
cmp
xor
das
push
mov
scas
mov
pusha
mov
push
push
fwait
jnp
int3
inc
jge
repnz
sbb
xor
inc
pop
cld
movups
cvtdq2ps
dec
aad
and
icebp
dec
mov
xchg
nop
dec
inc
push
mov
movs
lea
mov
(bad)
arpl
fldenv
mov
adc
(bad)
pop
test
stos
xor
rol
push
add
int
lahf
push
jbe
push
dec
cmp
mov
pusha
or
adc
jb
inc
mov
pop
dec
mov
enter
shr
call
pop
mov
cmp
pushf
pop
out
fs
xchg
lahf
pop
add
iret
push
stc
neg
iret
das
push
sbb
sub
inc
(bad)
mov
add
dec
pushf
sub
test
or
jb
pop
ret
ret
mov
js
sub
jmp
repz
sbb
mov
mov
mov
sahf
xchg
push
das
mov
adc
push
mov
ret
rol
das
enter
inc
add
in
push
into
lahf
call
shl
pushf
push
leave
mov
adc
add
push
(bad)
iret
mov
fld
pushf
adc
add
pop
call
leave
into
popf
ds
sbb
cmps
fild
leave
inc
push
lahf
outs
.byte
fmulp
