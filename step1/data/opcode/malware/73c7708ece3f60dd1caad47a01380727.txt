test
in
inc
xor
add
add
dec
push
fndisi(8087
call
inc
xchg
push
sahf
lods
sub
dec
loop
cmp
dec
cwde
cmps
mov
loop
push
adc
arpl
fcom
aad
cdq
pushf
pop
pusha
jns
out
sbb
pop
cmp
xchg
and
pop
jg
xchg
jecxz
sub
clc
mov
shl
gs
and
add
test
jb
les
mov
daa
(bad)
or
mov
mov
xchg
push
sub
lds
setge
ja
lahf
push
xchg
sbb
cmps
pop
add
mov
xchg
lea
and
xchg
mov
scas
jne
jge
xchg
jbe
mov
jmp
cmps
add
jno
sbb
(bad)
leave
xlat
out
into
cmp
xchg
pushf
bnd
inc
and
(bad)
sahf
mov
jo
sbb
jge
xor
fadd
(bad)
push
adc
jbe
out
arpl
lea
xor
mov
fsubp
std
xchg
bound
mov
pavgw
popf
add
enter
(bad)
call
dec
mov
xor
ds
icebp
jns
jae
jp
pop
fsincos
sahf
dec
xor
add
dec
and
(bad)
adc
mov
dec
jmp
jae
jno
es
leave
clc
add
(bad)
push
retf
ret
pop
hlt
sub
jb
movs
sub
icebp
(bad)
sar
cmp
and
jmp
not
pop
jbe
jecxz
xchg
cmps
ins
mov
fmul
pop
or
mov
out
push
sbb
inc
shr
jb
(bad)
movs
jl
ret
pop
out
sub
mov
test
inc
stc
cmp
mov
(bad)
xor
call
push
in
inc
not
dec
sbb
mov
popf
mov
ret
mov
pop
cs
retf
mov
add
rcl
mov
in
sub
lods
stc
pop
adc
dec
add
ins
ficom
add
jnp
dec
mov
ror
jmp
xor
(bad)
jae
or
es
xchg
ja
bound
mov
iret
out
int
push
dec
xlat
pop
mov
nop
ror
into
sub
imul
push
pop
cs
xchg
scas
pop
stos
aaa
adc
leave
mov
enter
outs
jno
aaa
(bad)
repnz
(bad)
sbb
sub
mov
sti
jns
xchg
mov
cld
hlt
ins
mov
inc
aaa
sbb
pushf
mov
sub
lea
push
xchg
jb
pause
xchg
jo
xchg
in
add
sub
int
jae
cli
fs
adc
jl
(bad)
movs
jg
inc
(bad)
imul
sbb
mov
cmp
int
jmp
ins
in
adc
sar
jge
iret
cmp
jnp
data16
and
sub
ror
mov
dec
stos
inc
cmc
adc
mov
je
cmps
xor
pop
ss
dec
fstp
in
adc
add
sub
cmp
mul
(bad)
pusha
fst
mov
mov
push
sbb
loopne
and
jmp
movs
dec
loopne
int
cmp
fs
push
sbb
call
xchg
aam
sbb
in
adc
fdivr
neg
call
xchg
sbb
outs
xchg
arpl
leave
mov
sbb
ja
push
and
test
cld
ficomp
jae
or
test
jecxz
test
push
and
hlt
ret
mov
jmp
mov
jmp
rcl
mov
adc
daa
mov
push
mov
cs
push
and
inc
cwde
mov
gs
(bad)
mov
xor
pop
inc
test
jb
jg
test
in
add
push
add
cmp
call
nop
mov
xchg
push
pop
and
psraw
movs
lds
sub
and
inc
sar
dec
jp
mov
adc
adc
xchg
or
or
in
or
push
faddp
mov
stos
and
mov
loopne
sbb
call
shl
xchg
dec
test
fidivr
aaa
fistp
daa
adc
jb
cmp
adc
add
movs
repnz
(bad)
ret
scas
gs
adc
clc
jecxz
dec
in
push
or
ja
scas
mov
stos
mov
enter
cwde
xor
and
push
dec
sub
sbb
gs
jae
xchg
retf
ins
test
push
pop
mov
xor
arpl
test
test
call
mov
cmp
push
stos
jecxz
xor
ss
adc
fwait
adc
(bad)
or
cwde
sbb
pop
xchg
mov
pop
fst
fadd
pusha
stos
shr
ret
ret
clc
fsubr
adc
mov
mov
ins
jo
cmp
fwait
xchg
shl
cwde
in
shl
mul
xchg
dec
out
into
mov
jnp
sbb
call
push
mov
mov
jp
push
test
inc
pop
imul
scas
inc
cmp
sub
dec
xchg
cs
sbb
(bad)
repz
or
ret
ins
int
in
aad
es
xchg
dec
dec
mov
xchg
(bad)
sbb
fldcw
dec
jns
sbb
int
lock
call
mov
or
push
or
in
ror
jl
in
mov
jno
xor
cmp
retf
icebp
mov
cmp
inc
mov
scas
dec
inc
bound
and
xchg
bound
(bad)
rcl
mov
out
xlat
mov
pop
mov
popa
xor
shr
dec
scas
pushf
stc
ret
test
iret
mov
ror
jge
popf
cli
js
std
mov
shl
jae
dec
xchg
jbe
xor
xchg
sbb
jle
shl
jmp
retf
gs
stc
mov
add
inc
jl
xchg
enter
mov
scas
push
xchg
test
clc
push
cwde
fwait
arpl
pop
lahf
scas
or
dec
mov
jmp
mov
mov
nop
jge
sbb
scas
loopne
mov
pop
fcom
xchg
and
clc
push
jmp
rol
xor
test
test
loopne
add
pop
or
(bad)
rol
fwait
dec
ins
jmp
jl
sti
in
rol
jae
inc
int3
xchg
lahf
pop
ror
xchg
pusha
jo
data16
cli
cli
ss
mov
jae
in
push
jb
sub
cmc
cli
mov
dec
mov
add
ror
push
(bad)
sub
sti
fs
das
scas
jbe
pop
mov
ficom
nop
fadd
jl
imul
or
add
mov
mov
aas
cli
movs
mov
aaa
(bad)
xchg
dec
pop
xchg
cmc
cmp
out
cld
mov
add
jne
fstp
xchg
rcr
out
xchg
xchg
imul
adc
in
xor
je
out
add
dec
cmp
xor
pop
test
ret
xlat
push
inc
adc
test
call
xchg
in
shl
test
jle
xlat
pop
in
and
lock
aam
shrd
int
aad
aas
ins
inc
mov
fs
and
cmps
sub
and
es
and
clc
movs
push
sub
push
sbb
xlat
lea
shl
push
push
pop
pop
add
jp
xor
cld
gs
test
mov
jmp
add
pop
cmp
repz
pop
lods
cmp
push
sbb
repnz
scas
push
scas
sub
xor
mov
and
outs
in
dec
pushf
xchg
test
inc
sub
arpl
out
xor
inc
add
sub
ficom
or
xor
scas
push
xchg
or
mov
loopne
jo
out
mov
retf
cwde
jge
icebp
adc
adc
bound
jp
lods
jmp
dec
adc
addr16
mov
mov
pop
aaa
sbb
or
push
mov
ret
xlat
push
xor
adc
int3
jmp
sub
mov
fcmovu
xchg
xlat
fisub
mov
sti
push
or
scas
adc
lods
(bad)
and
dec
test
stos
push
and
test
je
sub
fwait
add
mov
adc
push
shl
mov
push
inc
push
xor
push
mov
push
jbe
(bad)
sbb
pusha
mov
lea
mov
iret
push
jbe
adc
cli
jno
cmp
lds
cli
mov
scas
and
loopne
test
xor
popa
(bad)
push
jl
int
cwde
gs
mov
jge
or
gs
mov
icebp
leave
cmp
mov
sbb
jp
fs
scas
push
shl
push
test
mov
mov
std
and
xchg
shl
cmp
sub
dec
mov
jp
fst
daa
aas
mov
out
push
lahf
dec
loope
mov
aad
adc
mov
xchg
shr
pop
cwde
loope
push
(bad)
(bad)
fdiv
cld
xor
mov
mov
xor
sbb
retf
sub
push
cmps
cmp
lock
dec
cdq
cmp
idiv
retf
aaa
xchg
inc
sub
jno
and
cdq
(bad)
push
mov
fucompp
loopne
call
movs
or
sar
fadd
cli
(bad)
fidiv
sbb
push
pop
mov
clc
mov
lods
add
jmp
int3
ins
push
mov
add
pop
pop
in
cmc
pusha
mov
or
push
jmp
push
mov
jns
shr
jo
dec
mov
adc
mov
fld
lods
bound
and
mov
mov
pop
test
pop
xor
mov
das
mov
in
sub
push
fs
jp
xor
mov
movs
out
iret
mov
push
jmp
pop
or
cmp
add
ins
fcomi
mov
repz
push
adc
sbb
pusha
in
int3
sub
sub
sbb
cmc
jbe
stc
mov
pop
es
sub
cs
fxch
jmp
(bad)
sbb
jnp
cmc
mov
jg
(bad)
aad
mov
lods
retf
mov
mov
mov
dec
stc
dec
pop
jle
sbb
cwde
scas
mov
mov
ins
(bad)
aam
(bad)
test
push
lahf
icebp
dec
sbb
std
push
call
mov
pop
out
pop
test
mov
cmps
and
jb
in
sahf
jmp
push
sub
ret
pusha
mov
xchg
popa
ins
push
push
lods
daa
stos
mov
push
stos
cmp
mov
add
stc
sar
add
adc
push
neg
sub
and
push
cmps
out
aad
jl
icebp
dec
push
(bad)
fwait
inc
sti
mov
cdq
jle
cli
mov
out
fwait
xchg
in
jb
inc
xacquire
and
pop
xchg
push
mov
fbld
mov
scas
inc
aas
sub
cdq
mov
cwde
cld
mov
jle
lds
cmp
adc
lahf
leave
scas
add
cld
mov
or
jno
add
outs
sbb
fild
jge
in
out
std
xor
and
jmp
scas
add
mov
popa
movs
mov
hlt
mov
jge
push
pop
aam
(bad)
push
ins
std
hlt
adc
loopne
scas
jo
xor
push
xor
loope
(bad)
mov
jecxz
inc
les
dec
data16
les
pop
retf
sbb
sbb
(bad)
iret
sub
sub
sbb
in
mov
aaa
sub
mov
fnstcw
cmc
sbb
push
int
out
pop
aaa
mov
ret
mov
js
(bad)
movs
cmp
xchg
push
mov
jnp
or
imul
arpl
dec
xor
imul
mov
pop
inc
ss
dec
call
mov
pop
inc
loopne
jle
add
fild
aas
push
jecxz
ucomiss
ror
or
or
mov
push
mul
sbb
fwait
push
es
retf
enter
(bad)
push
popf
fist
out
xchg
or
call
pop
mov
jae
cld
inc
adc
add
push
lahf
sbb
stc
xchg
adc
test
pop
inc
add
fs
shr
add
inc
xchg
jb
sub
jg
xchg
shl
xor
mov
ds
or
sub
push
rcr
jns
sub
mov
xor
push
sbb
xor
stc
inc
mov
bound
jbe
and
pop
dec
les
outs
mov
dec
dec
push
mov
add
jl
mov
in
and
lods
call
mov
shl
je
rcr
mov
pop
add
fst
push
in
lods
repz
hlt
push
jno
xor
mov
mov
xchg
cdq
pushf
lods
adc
fs
and
mov
cmps
ret
ret
(bad)
cmps
ret
sub
cdq
stc
xchg
aas
aad
pop
dec
jns
loop
outs
nop
sub
jb
pop
xor
xlat
fidivr
xor
xchg
test
(bad)
hlt
mov
popf
and
or
sbb
movs
ss
fdiv
popf
out
push
push
mov
pop
lods
jb
xor
inc
movs
inc
inc
mov
xchg
or
jmp
mov
mov
cmps
push
int
or
icebp
dec
scas
int3
je
loope
cmps
push
push
mov
scas
xchg
add
adc
retf
xchg
xlat
hlt
or
push
xchg
and
and
ins
or
push
sub
dec
pop
call
pop
sahf
into
and
stc
into
ror
mov
retf
jle
xchg
mov
out
clc
pop
popa
aam
jo
mov
jmp
mov
dec
lea
das
cmp
mov
jg
pop
(bad)
clc
push
sub
dec
xchg
and
cmps
push
js
call
ss
sbb
fstp
add
loopne
add
out
stos
sar
mov
clc
sub
das
movs
sub
test
mov
xor
xchg
sbb
xor
cdq
add
popf
and
(bad)
cmp
mov
(bad)
add
adc
dec
stos
cdq
add
or
jbe
aas
add
test
or
pop
stos
popa
int
fstp
daa
in
frstor
cmp
and
js
les
adc
rol
sbb
or
sbb
out
jl
or
and
cmps
stos
enter
dec
sar
jb
int
stos
push
rcr
ror
ja
adc
jg
addr16
push
pop
call
inc
inc
stc
pop
mov
or
xor
shr
repz
(bad)
std
scas
or
lock
stos
mov
add
sbb
or
xchg
adc
shr
cmp
std
rcl
mov
mov
les
loop
pop
sbb
push
or
(bad)
in
and
daa
sbb
dec
jno
pop
scas
mov
add
inc
mov
push
movs
xor
bound
ins
into
pop
xchg
xchg
fiadd
js
adc
mov
daa
xchg
in
mov
js
push
shl
add
pop
out
nop
jge
dec
aaa
ret
jle
inc
cld
call
inc
pop
into
fidivr
call
in
sub
sbb
jne
mov
fs
mov
mov
(bad)
setns
push
fwait
loope
adc
adc
and
mov
and
or
ficomp
lahf
push
icebp
mov
ror
movlps
jb
mov
stc
std
popw
nop
pop
nop
cmp
xchg
sar
(bad)
xchg
mov
xor
mov
loop
sti
sub
stos
sub
push
clc
jae
push
popa
or
push
or
cwde
fcmovne
xchg
or
lds
and
nop
push
xlat
ret
sbb
pop
es
or
add
rcr
mov
mov
sub
xor
aaa
adc
scas
arpl
mov
test
adc
mov
and
adc
stc
pop
(bad)
xchg
sbb
mov
mov
sti
dec
push
int
adc
mov
lods
add
ret
dec
add
gs
sar
nop
fwait
ja
push
inc
imul
je
inc
dec
dec
pop
shl
rcl
dec
cmps
xor
mov
daa
adc
bnd
movs
add
aad
mov
pop
arpl
pop
sar
mov
pop
sbb
jg
int3
inc
add
(bad)
push
mov
mov
mov
and
out
in
xchg
adc
sbb
ret
scas
push
fsub
repnz
retf
pop
add
lea
adc
jge
xor
in
xchg
mov
dec
and
cmp
adc
mov
adc
xchg
in
std
rol
xor
xchg
add
xchg
mov
cmps
outs
mov
ret
xor
add
push
jle
add
ret
fs
(bad)
pop
or
pusha
cwde
data16
pop
bound
sub
out
fs
(bad)
ins
sbb
mov
jb
in
outs
fidivr
cwde
ins
add
push
dec
dec
loopne
cmp
jmp
add
clc
arpl
rcr
bound
enter
lea
jecxz
loopne
daa
cmps
stc
int3
clc
fstp
jmp
or
(bad)
and
sbb
(bad)
push
xor
je
or
fcomp
fimul
pop
aas
fwait
test
pushf
shr
retf
xor
retf
jnp
ror
jo
jmp
es
repz
sub
add
xchg
and
cmp
mov
stc
call
dec
and
cmc
push
addr16
lahf
in
out
add
mov
dec
popf
sbb
pop
xchg
jmp
lods
sub
cmp
and
sub
enter
mov
jmp
test
popa
sub
mov
psubq
pop
pop
pop
out
push
ss
cld
cwde
fcom
and
xchg
add
addr16
daa
bound
adc
cmp
mov
xchg
stos
pop
xor
ret
repnz
or
inc
stc
mov
mov
sub
jl
and
in
scas
cld
inc
cmps
xor
mov
adc
cwde
mov
fiadd
shl
mov
pop
push
push
cli
clc
test
dec
loop
pop
ss
rol
(bad)
(bad)
dec
pop
xor
mov
jecxz
and
cmp
dec
mov
jns
in
outs
mov
das
dec
mov
pop
loop
xchg
enter
(bad)
adc
inc
mov
xor
std
push
(bad)
xchg
icebp
iret
mov
out
ja
mov
push
or
and
sub
scas
add
xor
es
in
adc
frstpm(287
and
cmp
inc
out
test
outs
arpl
inc
sub
(bad)
mov
fsub
repz
pop
push
adc
xchg
(bad)
outs
mov
addr16
js
stc
in
jb
mov
iret
outs
sahf
mov
push
or
and
enter
cmp
fldenv
(bad)
in
dec
div
mov
lods
xor
sbb
aad
or
dec
add
or
cmp
inc
mov
out
mov
sbb
mov
fsubr
mov
push
cmps
pop
cdq
fsub
fbld
ds
aas
stc
pusha
das
jno
aas
inc
jns
mov
xchg
shl
inc
pop
fwait
jno
mov
or
in
jecxz
ret
test
mov
push
shl
jno
inc
outs
cmps
popf
pop
push
(bad)
imul
add
inc
fwait
cmp
inc
and
mov
out
mov
pop
cdq
enter
xchg
jge
dec
in
(bad)
(bad)
mul
shr
shl
inc
cmp
jno
cmps
imul
adc
mov
jne
stos
mov
out
or
pmullw
xor
xor
bound
dec
or
jb
adc
and
xor
call
jae
xchg
sbb
or
das
into
pop
je
leave
and
mov
imul
mov
scas
fidivr
inc
dec
mov
pushf
xchg
xor
(bad)
push
pusha
sbb
ss
or
xchg
mov
js
daa
jg
push
mov
mov
lods
out
inc
retf
jge
gs
add
fmul
sbb
imul
test
jnp
sub
lods
and
mov
rcr
(bad)
mov
dec
cmc
mov
push
pop
push
ds
cwde
icebp
stos
data16
xor
call
push
sti
mov
inc
dec
adc
in
xor
gs
adc
ins
test
fnsave
and
mul
ins
lods
xor
rcr
add
movs
sub
lods
pop
mov
daa
xor
add
xor
in
add
xor
push
jne
or
mov
inc
mov
sub
or
inc
push
(bad)
push
add
and
in
mov
aaa
mov
movs
dec
xchg
scas
outs
scas
adc
dec
or
loopne
out
popa
inc
sub
pop
inc
(bad)
push
pop
xchg
inc
test
xlat
test
aam
into
int3
daa
out
hlt
sbb
inc
inc
idiv
fwait
mov
or
push
retf
lods
stos
loope
js
add
js
mov
xchg
or
pop
mov
iret
xor
add
add
inc
sub
add
mov
push
sub
push
add
and
inc
sub
push
mov
push
movzx
inc
push
add
call
mov
push
lea
mov
add
sub
xor
and
add
add
mov
xor
add
mov
sub
mov
mov
sub
add
sub
mov
mov
lea
test
je
movzx
sub
add
mov
add
mov
inc
sub
mov
inc
mov
mov
sub
inc
add
sub
repnz
mov
add
sub
jmp
sub
inc
mov
mov
add
sub
sub
add
mov
sub
inc
sub
sub
mov
sub
add
sub
mov
pop
mov
or
pop
ret
sub
inc
mov
and
sub
mov
mov
mov
dec
mov
dec
add
xor
sub
push
lea
push
sub
inc
mov
add
mov
inc
mov
pop
sub
pop
inc
sub
cmp
jne
sub
push
mov
mov
sub
sub
push
sub
add
push
mov
xor
add
xor
movzx
xor
movzx
mov
push
mov
xor
add
mov
sub
mov
sub
movzx
sub
mov
add
add
add
add
xor
movzx
mov
mov
inc
sub
mov
imul
cmp
jb
add
xor
mov
mov
push
inc
sub
pop
sub
add
mov
add
sub
add
mov
mov
inc
sub
inc
add
add
mov
add
mov
dec
sub
mov
add
dec
cmp
jb
mov
xor
movsx
inc
movzx
add
mov
sub
sub
movzx
mov
xor
mov
xor
dec
pop
imul
add
test
jbe
add
add
xor
sub
sub
push
mov
inc
add
pop
sub
sub
add
mov
push
jmp
push
mov
call
mov
add
add
lea
mov
mov
sub
lea
sub
mov
mov
sub
mov
lea
mov
mov
sub
movzx
lea
mov
mov
mov
call
mov
add
mov
add
call
inc
add
call
sub
mov
add
call
imul
add
mov
push
mov
add
dec
or
mov
mov
movzx
add
inc
mov
mov
inc
dec
call
sub
mov
mov
pop
inc
xor
movzx
add
sub
pop
lea
pop
sub
movzx
pop
add
add
mov
pop
and
inc
pop
add
sub
push
lea
push
movsx
and
mov
movzx
add
ret
mov
sub
sub
dec
mov
mov
inc
add
push
xor
push
sub
lea
push
xor
dec
push
sub
add
push
mov
mov
inc
inc
push
add
pop
jmp
push
sub
xor
lea
inc
sub
sub
push
add
mov
push
mov
push
sub
push
inc
imul
mov
call
mov
push
sub
call
dec
pop
add
mov
sub
mov
cmp
je
sub
test
je
imul
add
add
int3
mov
sub
add
inc
sub
mov
inc
sub
add
sub
mov
movzx
sub
imul
add
mov
add
inc
movzx
sub
mov
add
add
sub
mov
mov
inc
sub
sub
mov
lea
sub
movsx
add
mov
mov
add
add
inc
add
lea
sub
or
sub
mov
mov
inc
dec
and
sub
lea
sub
inc
inc
sub
mov
movsx
add
add
sub
mov
and
movzx
add
sub
mov
movzx
sub
add
mov
mov
and
xor
sub
mov
mov
sub
inc
xor
add
lea
add
imul
imul
sub
mov
movzx
dec
sub
sub
mov
jmp
inc
xor
sub
and
add
lea
mov
movsx
inc
movzx
sub
mov
add
mov
and
add
inc
mov
add
sub
mov
mov
mov
inc
pop
add
dec
dec
add
mov
mov
sub
nop
jne
and
mov
dec
sub
mov
sub
add
xor
add
mov
mov
add
inc
add
add
lea
mov
dec
sub
test
jbe
dec
add
lea
xor
imul
lea
add
add
mov
dec
add
push
dec
sub
xor
mov
pop
sub
inc
xor
xor
mov
mov
mov
movzx
sub
add
movsx
add
and
add
mov
mov
add
inc
movzx
add
mov
mov
mov
mov
sub
dec
movzx
sub
add
add
mov
and
add
movzx
and
mov
and
mov
xor
mov
add
dec
sub
add
inc
mov
dec
jne
add
mov
xor
dec
mov
pop
mov
pop
dec
sub
pop
add
sub
lea
add
xor
add
add
add
ret
push
push
lea
inc
dec
add
add
mov
dec
push
push
sub
xor
push
sub
push
mov
add
add
sub
sub
lea
movzx
mov
sub
push
dec
add
xor
mov
push
sub
sub
push
add
sub
push
mov
mov
sub
mov
call
movzx
or
add
mov
add
movsx
pop
jmp
push
dec
push
sub
mov
sub
inc
je
lea
dec
dec
imul
mov
add
add
mov
mov
mov
add
add
lea
sub
mov
cmp
jne
lea
add
sub
add
add
add
mov
sub
lea
jmp
mov
push
sub
mov
dec
sub
test
je
sub
mov
dec
inc
add
add
mov
repnz
inc
add
pop
add
jmp
mov
pop
lea
add
dec
sub
movsx
add
mov
mov
inc
add
add
dec
jne
inc
pop
mov
pop
jmp
push
mov
lea
xor
or
movzx
push
sub
mov
push
mov
push
add
call
pop
pop
jmp
and
(bad)
fild
push
xchg
xchg
in
arpl
push
xlat
jge
xchg
add
jmp
dec
enter
stos
(bad)
in
in
fdivrp
ins
dec
test
inc
dec
stc
pop
pop
ins
xchg
or
xchg
xor
adc
mov
fistp
or
ds
ja
dec
sbb
xor
mov
add
leave
rcl
hlt
loop
cld
repnz
xor
fwait
mov
push
xchg
xchg
shl
rol
jg
es
add
sti
pop
stc
xchg
in
dec
mov
test
jp
inc
push
outs
mov
sbb
mov
out
pushf
stc
pop
inc
sahf
cmps
mov
in
xchg
jo
data16
dec
dec
in
es
ret
mov
push
xchg
(bad)
and
sti
hlt
scas
sbb
pop
push
test
stos
pusha
ss
or
jns
adc
sbb
cmp
and
iret
retf
cmp
loop
mov
xchg
mov
int3
mov
outs
push
icebp
inc
mov
(bad)
or
push
xchg
dec
mov
push
les
fs
pop
push
mov
jb
dec
xchg
and
or
inc
cwde
cld
inc
and
inc
(bad)
loop
dec
or
inc
fwait
push
jmp
outs
(bad)
dec
fcom
pop
bound
ret
rcl
cmp
inc
fs
cmp
imul
add
sti
sub
mov
mov
adc
xor
pusha
test
and
and
int3
out
in
jge
mov
out
jecxz
jbe
gs
and
loope
popf
jne
add
lahf
add
pop
jb
pop
bswap
and
and
dec
or
jns
jmp
pop
jecxz
mov
add
add
call
lods
repnz
sub
scas
jmp
invd
mov
mov
mov
test
inc
adc
pop
test
lahf
or
push
xchg
pop
mov
pop
lock
and
nop
fadd
dec
hlt
xchg
ins
or
xchg
jmp
or
cmp
nop
les
ins
and
mul
(bad)
in
pop
fsub
ret
pop
inc
scas
xchg
adc
cmp
dec
xor
jge
fiadd
xor
lss
test
mov
fs
imul
retf
call
and
sub
mov
(bad)
xchg
push
imul
mov
aam
stc
xor
push
or
push
cwde
inc
rcr
jle
in
sub
jbe
cmp
push
sub
jno
lahf
retf
js
push
pop
xor
mov
cmp
and
mov
pushf
loopne
mov
xchg
pusha
jp
xor
xor
push
movs
frstor
add
or
jne
out
stos
mov
push
icebp
popa
inc
nop
adc
pop
(bad)
int
dec
cmp
test
inc
add
pop
add
cmps
xor
cmp
sub
inc
sub
je
mov
mov
mov
xor
in
dec
mov
ins
pop
push
ins
mov
std
movs
jb
add
jge
and
and
mov
cmp
lock
sub
fidivr
cmps
cmp
add
add
sar
fistp
sbb
pop
out
xchg
jns
cmp
push
pop
adc
sar
pop
mov
cld
scas
into
(bad)
and
(bad)
jge
jae
xor
dec
push
out
hlt
mov
fs
add
ins
lods
sbb
jmp
loop
push
cld
jle
adc
add
pop
arpl
sahf
pop
mov
pop
cwde
repz
pop
gs
mov
int3
jo
cmp
mov
add
lods
add
repnz
mov
icebp
inc
enter
jl
scas
div
mov
adc
les
ja
add
pusha
cdq
in
pop
inc
sbb
xlat
and
jae
sbb
out
pop
rol
test
test
mov
xchg
and
xor
clc
pop
(bad)
cwde
pop
mov
cmp
xor
jb
pop
stos
inc
mov
cmp
inc
sub
arpl
pop
push
(bad)
icebp
adc
outs
imul
lea
xor
pop
mov
mov
inc
cmp
imul
sub
push
iret
fiadd
mov
pop
sahf
fsub
(bad)
repnz
pop
adc
cmc
and
mov
popa
mov
fnsave
jbe
add
sub
inc
fnstenv
fsqrt
jns
lods
lea
mov
pop
mov
mov
addr16
push
outs
xchg
cmc
mov
pop
mov
ins
sar
cmp
repnz
fcom
aaa
cli
sub
pop
test
sub
inc
iret
mov
retf
cmp
cmp
das
mov
xchg
xlat
mov
sub
pop
xchg
fisubr
cmp
mov
stos
gs
int
test
cli
xor
imul
add
daa
inc
retf
out
xchg
fstp
pop
clts
pushf
les
pop
rcr
ds
in
pop
or
daa
add
imul
mov
dec
sbb
cmp
sahf
clc
push
adc
arpl
or
lea
xor
mov
mov
mov
out
loopne
ret
or
cmps
into
call
shr
outs
enter
and
jle
dec
cmps
ret
popf
pop
rcl
inc
jg
rcl
das
sbb
push
xchg
(bad)
icebp
into
mov
pop
or
push
ins
jmp
cmp
das
jnp
inc
ja
sub
inc
fild
adc
cmps
sub
push
std
and
inc
out
mov
cmps
mov
dec
sub
arpl
outs
jp
adc
mov
sbb
xchg
test
cwde
xor
bound
add
dec
mov
xchg
fwait
cmp
arpl
hlt
icebp
(bad)
xlat
(bad)
mov
sahf
icebp
jg
sub
fcomip
and
(bad)
adc
lods
mov
enter
or
xor
sub
or
repz
sbb
pop
jl
mov
jmp
mov
or
cli
xchg
push
dec
push
dec
xor
sub
ins
clc
arpl
mov
cmp
(bad)
inc
push
xchg
movs
sbb
(bad)
pop
sbb
dec
jb
cmp
sbb
fisttp
fidivr
sub
repnz
dec
aad
pop
jge
(bad)
stc
imul
lods
pop
mov
lahf
pop
push
dec
cmp
cmps
stos
mov
pushf
add
outs
sub
cmc
repz
or
fcmovu
mov
pop
add
test
xchg
or
push
sbb
sub
int3
outs
mov
bnd
ret
(bad)
adc
in
fcmovnu
repz
outs
xchg
aad
retf
mov
sbb
repnz
sbb
add
push
cmp
enter
ror
sub
push
push
pop
out
jge
dec
leave
inc
and
xor
(bad)
rcl
int
sub
hlt
sbb
(bad)
pop
adc
mov
call
xor
push
cmp
mov
test
fdivr
stos
sub
jo
imul
push
(bad)
mul
jb
iret
cmp
inc
dec
and
lea
out
pop
movs
adc
xchg
pop
xor
sbb
mov
mov
ss
outs
leave
dec
adc
push
pop
cdq
xchg
gs
outs
mov
les
jge
lods
out
pop
sbb
add
imul
sbb
mov
mov
mov
and
dec
out
int3
ss
mov
xchg
mov
cmc
xchg
into
xor
xor
scas
lods
push
mov
int
sbb
test
dec
adc
iret
push
cmps
dec
add
cmps
or
outs
aaa
adc
push
iret
mov
test
mov
pop
xlat
sbb
push
repz
xchg
add
xchg
or
outs
fnstenv
sbb
push
xor
loope
arpl
rol
xlat
mul
xchg
add
fsub
pusha
je
lea
lahf
mov
mov
pop
clc
pop
push
push
inc
aas
inc
mov
dec
into
repnz
scas
jns
stc
sub
push
cmps
sti
in
push
sbb
sbb
mov
dec
add
hlt
pop
fmul
das
mov
fidivr
sub
jns
int3
and
inc
jl
pop
jns
(bad)
cs
aam
mov
sbb
inc
mov
pop
cli
sbb
push
addr16
cmp
sti
and
and
out
(bad)
add
pop
add
push
ins
mov
fwait
push
cmp
push
or
(bad)
(bad)
inc
push
int3
mov
faddp
gs
mov
sbb
arpl
or
into
and
mov
dec
and
fcomp
cmp
cmp
mov
sti
std
das
(bad)
push
arpl
xchg
mov
repz
aam
jbe
sidtd
scas
cmp
ficom
(bad)
mov
enter
fistp
ja
push
mov
ins
sub
repz
retf
cmp
xchg
test
add
pushfw
aam
icebp
pop
jns
(bad)
jmp
cdq
ret
sbb
cmp
sub
mov
sub
add
adc
push
jnp
aas
jl
xchg
fwait
cvtps2pi
cwde
mov
mov
xlat
jmp
mov
add
rcr
cmp
or
stos
push
add
cdq
into
and
(bad)
mov
mov
push
mov
aam
mov
sbb
clc
mov
test
fwait
scas
sbb
mov
sub
inc
mov
or
sbb
push
pop
mov
jne
mov
add
leave
push
ins
ja
in
sub
sbb
or
stos
pop
push
mov
sub
or
pop
jo
mov
vphaddudq
cld
cli
add
and
and
test
les
jns
js
and
pop
repnz
or
popf
pop
shl
call
xchg
pop
out
mov
out
and
(bad)
repnz
jns
adc
ds
sbb
frstor
adc
adc
out
iret
mov
gs
daa
and
cmp
push
push
cmps
push
push
pop
adc
lods
mov
add
(bad)
sti
push
adc
mov
add
lods
jg
xor
sub
adc
sbb
dec
iret
stc
in
pop
jmp
ss
test
adc
aam
cmp
mov
dec
cmc
fsub
sub
adc
add
out
mov
fisubr
jge
mov
add
xchg
cli
call
push
pandn
fstp
and
inc
sahf
cmp
lods
push
add
inc
nop
mov
push
pop
fstp
pop
enter
mov
dec
bound
jns
aam
sbb
push
sbb
cmps
ins
xchg
data16
fs
movs
adc
add
inc
fld
into
fwait
out
lahf
fistp
shl
sti
xor
mov
mov
mov
int3
mov
xchg
ret
arpl
jg
shl
xor
leave
xor
push
pop
arpl
out
gs
int
inc
jne
push
cmps
push
ins
ror
les
inc
test
rcl
lahf
mov
add
in
mov
loope
lods
jg
aad
call
sub
mov
jmp
sub
lods
mov
adc
add
fsubr
add
jns
mov
pop
rcl
xchg
icebp
jmp
cmps
xlat
retf
jl
sahf
stos
jp
mov
sub
push
add
dec
rol
aas
mov
clc
or
adc
inc
or
out
sub
dec
mov
mov
pop
mov
pop
jge
sbb
fidivr
xor
aad
dec
dec
and
data16
dec
push
jp
(bad)
cmp
outs
push
inc
add
out
xchg
cs
les
mov
add
repz
cmp
(bad)
push
jbe
sub
adc
leave
outs
xor
stc
xor
arpl
addr16
mov
sbb
mov
add
adc
mov
ret
out
push
inc
(bad)
or
add
js
inc
adc
push
(bad)
ins
add
sbb
loop
cld
lahf
push
leave
ds
mov
push
rcl
fmul
jae
jo
xor
les
ja
je
pop
fidivr
iret
pop
aad
fsub
mov
sub
adc
daa
jmp
xchg
in
cwde
inc
jns
mov
add
adc
xor
jae
dec
push
pop
cmp
jmp
mov
jne
sahf
arpl
jo
push
jle
shr
scas
sub
pcmpgtb
push
mov
lock
shr
push
cmp
inc
inc
repnz
aam
xchg
lahf
test
xor
xor
mov
es
push
xor
fdiv
jg
popf
dec
or
cld
cmp
cmps
jg
jle
pushf
aad
jae
sbb
mov
cdq
aaa
test
sti
sbb
inc
ins
sub
adc
sbb
push
cmp
mov
mov
cmp
xchg
fs
cmovns
loopne
ret
mov
jle
add
int
rol
int
je
outs
pop
ficom
mov
ins
xchg
in
jno
sub
xchg
out
push
mov
xlat
out
out
xchg
mov
dec
mov
das
add
repz
leave
mov
sub
pop
test
fisttp
xor
and
inc
repnz
lea
mov
xor
lds
stos
mov
pop
pop
pop
call
or
lods
in
xor
add
xchg
and
pop
sbb
ins
inc
pop
syscall
aad
ins
ds
leave
call
es
pop
mov
enter
je
faddp
and
aas
and
and
aam
in
popa
mov
pop
sbb
icebp
or
mov
bound
aas
add
icebp
xor
fwait
mov
(bad)
lods
in
movs
sub
cmp
imul
ret
out
iret
ins
xor
out
inc
mov
stos
lahf
cmps
or
sub
retf
in
pop
pop
xor
sbb
mov
test
fadd
mov
and
aaa
clc
or
adc
adc
aas
bnd
test
nop
jae
mov
push
sbb
sub
mov
test
push
js
arpl
push
movs
adc
inc
jns
cmp
idiv
test
xor
add
call
dec
xlat
jb
les
es
mov
pop
push
js
lahf
or
mov
lods
push
adc
sbb
je
sahf
push
xlat
loope
mov
jge
mov
ret
mov
mov
(bad)
jge
inc
ror
jl
push
ss
sbb
call
into
fsub
jb
dec
cmp
cmp
ja
add
fucom
(bad)
movs
mov
mov
xor
jl
jns
adc
xchg
(bad)
aaa
je
mov
jo
std
dec
call
movs
cmp
shufps
sub
and
in
iret
test
fdiv
cmp
pop
xor
inc
sub
push
inc
pop
in
iret
pop
xchg
fadd
lds
mov
popa
mov
daa
xchg
popa
lods
xchg
fnstcw
add
cs
and
rol
push
pop
and
mov
jmp
sbb
das
push
cmp
jmp
or
call
mul
jmp
int3
push
out
ja
cmps
jbe
or
xchg
mov
push
xchg
call
or
pop
sub
fucomi
ds
or
sub
pop
sti
dec
mov
aam
enter
scas
ins
in
push
(bad)
out
aad
cmp
loop
mov
xchg
call
mov
int3
std
jae
cli
inc
jae
push
dec
mov
push
pop
fadd
cs
std
xchg
pusha
sub
mov
movs
rol
lahf
(bad)
push
push
push
in
xor
mov
sbb
mov
mov
fstp
xchg
retf
xor
sahf
retf
sbb
mov
aaa
pusha
out
xor
jle
call
loop
and
add
loope
std
aaa
jp
add
jg
cs
adc
loopne
xor
imul
xchg
cdq
fbstp
push
rcl
fwait
sub
xor
mov
out
mov
jmp
mov
pop
dec
xor
cmp
cmp
inc
shl
mov
into
jne
and
iret
push
mov
inc
mov
dec
stos
mov
ret
add
mov
pop
mov
push
daa
push
mov
(bad)
outs
into
add
sub
dec
test
or
xlat
(bad)
xor
int3
shl
adc
lds
les
sub
les
push
dec
repnz
mov
mov
mov
xor
ror
sbb
inc
fisttp
stc
iret
jo
xor
xchg
repz
xchg
push
jl
and
cmps
xchg
mov
outs
sbb
aaa
stos
mov
and
sub
mov
jmp
dec
push
pop
xor
test
xchg
test
fst
(bad)
push
lods
and
xchg
popa
inc
dec
cmps
ins
(bad)
js
jp
and
stos
call
xchg
mov
ror
(bad)
mov
ins
lahf
retf
icebp
fsubr
div
movs
xchg
inc
.byte
pusha
