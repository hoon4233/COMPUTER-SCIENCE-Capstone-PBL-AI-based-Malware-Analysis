xchg
xor
in
xor
mov
or
movs
xor
adc
or
pushf
xor
mov
or
xor
or
lods
xor
les
or
push
xor
mov
xor
jle
or
int3
xor
in
or
popf
xor
fdiv
or
(bad)
xor
add
add
(bad)
xor
add
add
and
or
add
add
and
or
add
add
inc
xor
add
add
inc
xor
add
add
xor
add
add
add
or
add
add
mov
or
add
add
mov
or
add
add
lods
xor
add
add
lods
xor
add
add
imul
gs
xor
cs
ins
add
in
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
gs
xor
fs
ins
add
mov
add
add
dec
gs
popa
addr16
outs
js
add
popa
fs
jo
xor
cs
ins
add
enter
add
push
gs
jo
outs
dec
gs
js
add
arpl
arpl
xor
fs
ins
add
nop
and
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
jae
gs
ins
xor
cs
ins
add
push
add
add
push
push
bound
je
add
ins
jae
outs
jb
gs
ins
add
add
outs
jb
js
dec
popa
imul
add
add
add
add
add
xchg
hlt
call
add
adc
add
sub
add
lods
add
or
add
je
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
or
inc
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
movs
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
popa
add
ja
jae
js
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jno
popa
add
ja
jae
js
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
in
inc
or
xchg
add
out
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
jbe
cmp
jae
ins
bound
or
add
add
add
add
add
add
add
movs
add
or
cmp
add
fsub
cmps
inc
xchg
mov
shl
jmp
pop
push
push
dec
mov
dec
shl
shl
enter
out
std
jnp
les
scas
sub
test
cmp
add
icebp
jecxz
aas
stc
and
sbb
shl
stos
jae
std
dec
sbb
(bad)
mov
and
es
imul
or
push
mov
popa
out
adc
dec
je
mov
jbe
retf
repnz
add
or
jle
xor
xchg
(bad)
jmp
xor
dec
inc
push
sbb
fsubr
call
out
sbb
jne
xchg
push
mov
mov
sub
shl
fnstenv
js
stc
pop
dec
add
pop
bound
pop
cdq
inc
sti
idiv
ds
mov
cmp
pop
in
jmp
mov
(bad)
enter
mov
dec
push
and
fcmovu
popf
adc
test
fs
mov
sub
pushf
pop
retf
shl
add
add
iret
mov
push
jmp
vmovhps
add
jmp
mov
mov
jb
jno
jmp
(bad)
or
jmp
call
dec
call
push
repnz
or
add
jne
jmp
out
push
jmp
or
mov
jmp
cmp
add
dec
stc
mov
jmp
sbb
pop
jmp
(bad)
into
ins
mov
gs
jmp
add
sbb
add
jmp
test
(bad)
(bad)
jmp
imul
add
jmp
mov
mov
cmp
jge
add
add
inc
sbb
adc
adc
add
inc
sbb
add
mov
jmp
sub
loope
add
(bad)
in
and
and
jmp
mov
add
and
add
mov
cmp
add
popa
pop
jmp
inc
add
add
push
jmp
repz
rcl
leave
jmp
mov
jmp
add
and
jmp
ror
add
(bad)
jmp
mov
add
add
add
jmp
mov
push
add
add
sahf
pop
add
jmp
mov
inc
add
add
add
jmp
repnz
add
jmp
and
mov
add
imul
mov
jno
loope
inc
lock
ror
push
hlt
jmp
test
jmp
or
inc
mov
xor
jno
imul
shl
jmp
jmp
or
add
iret
sub
retf
aaa
sub
jmp
call
add
add
pop
jmp
sub
xchg
add
add
jbe
add
adc
adc
add
sub
sbb
jmp
mov
add
add
cli
mov
jmp
sbb
and
jne
jmp
xchg
add
call
mov
jmp
call
add
jmp
test
fmul
and
rcl
add
add
mov
jmp
adc
and
add
jmp
mov
add
fadd
les
jmp
jmp
jmp
enter
jmp
sub
mov
fdiv
add
shr
jmp
jns
aam
add
and
shr
add
add
add
dec
nop
shr
jmp
add
and
and
jmp
cmp
add
add
add
mov
jmp
call
ret
pop
add
add
mov
jmp
mov
add
add
pop
pop
jmp
adc
mov
mov
jmp
mov
jmp
sub
add
jno
pop
sub
test
add
jmp
rol
(bad)
jmp
mov
jmp
sar
push
mov
add
mov
jle
jo
mov
jmp
mov
mov
add
mov
add
jmp
mov
or
add
test
(bad)
(bad)
jmp
jmp
mov
add
add
mov
jmp
push
(bad)
jmp
fisubr
jmp
sbb
add
push
add
jmp
and
das
xchg
ja
jmp
nop
jmp
mov
jno
mov
jmp
cmp
dec
sbb
add
jmp
fisttp
jecxz
add
jmp
jmp
test
jmp
push
xchg
(bad)
(bad)
(bad)
jmp
jmp
sub
mov
add
add
add
jmp
fild
and
enter
ins
add
jmp
sub
jmp
test
lds
inc
sub
jmp
mov
add
jmp
nop
jmp
sub
add
jmp
shl
jae
mov
jmp
or
jp
xchg
add
iret
jmp
and
add
outs
and
jae
mov
jmp
jnp
aam
add
fisttp
retf
dec
clc
jmp
mov
std
(bad)
(bad)
jmp
jmp
ror
jmp
and
adc
jmp
bts
sub
add
jmp
adc
mov
jmp
repnz
xchg
sbb
xchg
add
add
add
jmp
sbb
dec
lock
adc
ins
jbe
jmp
call
add
call
lea
jmp
or
sub
add
mov
jmp
jno
jmp
sbb
jmp
cmp
add
add
jmp
push
add
mov
jmp
xor
jmp
mov
jmp
sub
jno
cmp
xchg
add
add
xchg
(bad)
call
inc
add
sub
call
(bad)
jmp
jmp
mov
add
add
adc
add
popa
pop
jmp
imul
and
add
pusha
push
jno
mov
jmp
add
add
arpl
mov
ret
jmp
mov
jmp
aad
in
jmp
cmp
in
or
add
mov
mov
jmp
jo
jmp
add
jmp
add
jae
adc
test
jns
(bad)
(bad)
jmp
sbb
pop
push
mov
jmp
sbb
in
or
add
mov
push
jmp
add
add
test
jmp
or
sti
(bad)
(bad)
jmp
mov
mov
fisub
jo
icebp
cmc
adc
(bad)
jmp
les
popa
outs
stos
call
ss
cmp
pop
inc
mov
or
inc
cli
repz
jmp
jae
lods
scas
test
cmps
retf
lahf
mov
sub
mov
xor
lahf
sub
outs
mov
pop
dec
xor
cmps
ds
sbb
lahf
mov
mov
lock
int3
call
outs
adc
jae
mov
jg
pop
sub
pop
in
(bad)
sub
test
push
sti
jbe
call
jbe
xor
test
data16
and
push
pop
call
shr
test
sbb
pop
or
push
xor
popa
push
(bad)
push
ins
fcomp
pop
jmp
dec
or
mov
xor
retf
aam
xchg
das
arpl
xchg
mov
dec
movs
xchg
ins
xchg
btr
out
sbb
pop
aaa
push
aas
jns
call
cmp
cmps
movs
call
adc
ins
daa
jae
xor
pop
push
adc
dec
add
rcr
pop
add
sbb
enter
fdivr
enter
lods
iret
or
adc
pushf
xchg
stos
and
pop
les
pop
loope
push
in
jle
div
test
hlt
jp
pop
mov
push
aam
das
or
mov
in
imul
cmp
jmp
iret
repnz
loop
fs
mov
xor
leave
leave
push
push
cmp
sub
and
(bad)
cld
ins
xor
aas
outs
push
int3
sbb
dec
cmp
in
xor
jo
add
pop
adc
pop
and
out
movs
cmp
sbb
xchg
or
or
and
out
fisub
popf
xlat
dec
add
xchg
mov
xchg
xlat
cmp
jmp
fist
stos
sbb
and
movs
and
sbb
mov
out
shl
cli
jle
push
cmp
daa
adc
ffreep
(bad)
popf
int
or
sub
inc
ror
outs
fidiv
cwde
mov
add
retf
js
adc
adc
lahf
inc
jbe
idiv
inc
aam
sbb
int3
pop
cmp
push
pop
js
lods
xchg
(bad)
arpl
pop
js
mov
mov
sub
mov
aaa
jge
sub
pop
pop
fdiv
mov
sbb
dec
in
repz
loopne
push
xor
aas
xlat
imul
jno
xor
pop
adc
cmc
xchg
xor
or
push
popa
pop
sbb
int
add
pop
mov
(bad)
jp
fisubr
mov
sub
fxch
fimul
jmp
jl
sbb
adc
push
sahf
call
cmps
(bad)
jb
push
mov
in
push
je
lods
sbb
cdq
fist
retf
cmps
dec
movs
xlat
inc
(bad)
test
xlat
hlt
and
das
std
lods
jo
inc
ins
push
push
rcr
popa
add
push
dec
inc
sbb
fucomp
mov
mov
not
sar
inc
pop
out
mov
hlt
std
lahf
push
movs
cs
mov
into
loop
arpl
inc
sub
push
mov
push
add
cmps
push
pop
sbb
sub
sbb
ret
adc
jl
wrmsr
fld
dec
push
fs
sbb
leave
shl
icebp
test
mov
and
outs
adc
nop
int3
cmp
loopne
test
and
cmc
call
push
inc
test
xchg
popa
sub
outs
retf
repz
pop
mov
push
and
xor
mov
push
xor
fsubr
mov
mov
xor
sti
in
dec
inc
cmps
pop
aam
add
mov
push
sbb
out
loopne
fsubp
ret
push
xchg
jbe
xchg
push
aad
xor
dec
pop
retf
out
sar
cmp
jmp
clc
jge
gs
jmp
xchg
or
sub
xor
xchg
add
or
loop
cdq
dec
mov
test
push
adc
fld
dec
rol
in
xor
mov
fadd
retf
sub
adc
add
mov
mov
lods
adc
or
xor
clc
xchg
push
xchg
dec
jnp
dec
or
loop
icebp
dec
lahf
iret
test
enter
sbb
sub
mov
icebp
retf
rcl
jge
xchg
add
jg
inc
cli
mov
cld
mov
in
(bad)
sub
xlat
lock
scas
add
or
icebp
les
xor
xchg
cmp
lea
test
cld
push
push
jge
jns
aam
mov
mov
xor
stos
and
scas
push
dec
mov
loop
aam
aam
add
push
sub
ja
push
mov
bound
mov
cli
push
(bad)
pop
aaa
aaa
imul
loop
xchg
jl
jns
push
cmp
aad
xlat
mov
cmps
fstp
push
adc
cmp
push
push
sbb
mov
cmp
lock
ja
stos
nop
jecxz
push
sub
mov
xchg
jmp
scas
iret
sbb
mov
mov
inc
dec
aas
xor
or
mov
test
push
lahf
pop
jnp
sbb
mov
jecxz
arpl
fdivr
lahf
out
mov
mov
xchg
sbb
mov
sub
aaa
mov
(bad)
or
push
fiadd
outs
sub
and
retf
in
cmp
sbb
xchg
fucomi
jno
fidivr
fisub
(bad)
test
inc
(bad)
sub
cli
idiv
or
add
jne
mov
sub
lahf
and
mov
inc
leave
xchg
cld
mov
es
mov
adc
add
imul
jle
mov
and
leave
inc
ins
jo
rol
or
(bad)
iret
out
retf
sub
mov
adc
popa
and
xchg
test
xchg
je
jecxz
add
imul
(bad)
mov
call
inc
inc
arpl
adc
jbe
mov
gs
or
int
push
jmp
std
sahf
jge
and
cld
inc
xlat
xchg
push
mov
mov
stc
inc
lahf
sbb
jl
test
ss
mov
ror
jns
dec
pop
idiv
nop
daa
cwde
inc
mov
aam
jl
and
xor
or
push
xchg
mov
ldmxcsr
sub
adc
pop
jle
std
ret
pop
add
add
jecxz
arpl
stc
test
push
std
and
sub
xor
mov
retf
enter
ins
dec
fild
xchg
les
pushf
idiv
test
loope
jecxz
xor
shr
(bad)
ror
pop
add
push
cwde
sub
pop
xor
in
jmp
js
mov
cmps
cmps
stc
dec
fisttp
test
and
dec
mov
mov
out
sub
add
imul
mov
mov
ret
mov
mov
sub
jl
xor
ret
xchg
adc
fbstp
jnp
xchg
imul
mov
jle
cmp
inc
cmp
add
ret
dec
cmps
imul
mov
and
or
jge
sbb
scas
xor
inc
cmp
call
out
aad
ret
jecxz
mov
cmp
cmp
imul
dec
cmp
cld
fcom
cmps
dec
rol
das
enter
pop
fsub
jae
rcr
clc
inc
mov
inc
js
push
iret
shl
pop
inc
adc
mov
std
pop
loope
clc
and
aas
int
movs
loope
push
mov
mov
push
loope
mov
xlat
data16
add
in
jecxz
nop
cmp
mov
cmps
outs
mov
shr
sbb
stc
mov
cmps
dec
aaa
xor
arpl
pusha
cmp
mov
jle
pusha
jl
push
je
and
sbb
test
jb
(bad)
js
cdq
inc
dec
out
movhps
mov
shl
cmp
mov
jecxz
out
jnp
push
shr
icebp
add
sub
pop
and
xchg
mov
dec
mov
cmp
jmp
pop
pusha
lahf
mov
add
test
mov
div
enter
cmp
retf
sbb
icebp
push
push
sbb
dec
iret
mov
mov
sbb
add
add
shr
mov
mov
add
ret
sub
(bad)
sbb
push
call
and
out
cwde
mov
add
mov
icebp
mov
outs
xchg
push
jmp
fwait
mov
inc
repz
dec
pop
js
mov
push
or
popf
mov
xor
push
js
sbb
enter
pop
push
dec
mov
cmp
xor
push
mov
in
loopne
enter
or
add
push
add
cmp
in
mov
repnz
adc
dec
gs
test
push
add
cld
iret
push
stos
xchg
pusha
push
jg
test
adc
xor
ins
movs
and
xchg
iret
ret
and
dec
push
inc
popf
ds
retf
xchg
push
fadd
mov
imul
test
add
fistp
cmps
sti
rol
rol
push
inc
shl
dec
and
mov
or
imul
ja
ret
sbb
in
inc
adc
mov
cli
xchg
lds
dec
pusha
fsubr
sbb
pop
push
and
jne
lds
into
lock
arpl
imul
pop
cmps
pop
inc
sub
popf
sub
mov
and
ss
rcr
inc
jle
mov
stos
mov
or
fcomp
mov
lds
sub
inc
cmp
jae
iret
push
mov
ins
xchg
fcmovnbe
xchg
arpl
std
and
push
loop
fstp
mov
mov
xor
gs
rcr
inc
into
std
hlt
std
mov
std
aam
push
hlt
movs
jl
adc
lods
xor
adc
sub
out
loopne
mov
ror
daa
fnsave
sbb
mov
in
nop
inc
cmc
adc
pop
mov
mov
out
inc
test
sub
jle
in
pushf
rdpmc
pop
inc
and
mov
adc
sub
mov
cmc
xchg
fwait
pop
aas
pop
mov
jmp
xor
jb
jnp
clc
stos
je
mov
lods
fs
and
pop
cmp
int
lahf
jg
pop
out
dec
cwde
jo
lahf
scas
ins
mov
js
neg
(bad)
cmp
push
adc
dec
inc
dec
mov
mov
xor
and
(bad)
pop
mov
or
hlt
ds
and
stos
dec
cmp
cmps
mov
inc
or
push
pushf
ret
push
test
and
push
pop
loopne
out
xchg
inc
aad
cmp
stos
dec
inc
test
out
adc
push
pusha
in
cdq
add
push
jmp
xor
push
sub
movs
lds
jmp
movs
xchg
out
dec
das
mov
loope
xlat
in
mov
ret
mov
xlat
cwde
mov
push
cli
jl
fwait
xor
add
(bad)
xor
loopne
ins
das
push
pop
sti
pop
adc
in
icebp
std
(bad)
cmp
jg
xlat
clc
and
ins
push
jnp
jp
aas
adc
lods
dec
and
sahf
addr16
push
js
and
xchg
pop
xlat
das
adc
and
addr16
mov
dec
loope
std
sub
cmp
adc
or
add
into
sti
hlt
mov
xchg
ror
xchg
sub
xchg
fidiv
in
dec
icebp
jmp
loope
bound
mov
sub
rcr
out
pop
push
push
adc
sbb
fisttp
jmp
add
cmp
pop
loop
lea
and
jo
jne
cmc
mov
sbb
mov
pop
(bad)
int
bound
aaa
mov
mov
scas
sub
js
pop
sub
push
add
test
inc
cdq
lods
clc
rcl
das
push
and
xchg
les
scas
push
and
jp
mov
(bad)
imul
outs
jp
in
scas
hlt
stos
jns
mov
loopne
mov
imul
mov
pop
(bad)
xchg
std
leave
or
out
imul
pop
loop
jne
cmp
and
mov
or
in
out
xchg
and
imul
lds
pop
jmp
mov
(bad)
lahf
cli
(bad)
sub
es
clc
xor
rol
je
sub
jno
sbb
call
ffree
arpl
adc
fs
dec
mov
jns
pop
xchg
pusha
and
xor
into
inc
mov
sbb
gs
mov
test
frstor
stos
mov
cmp
test
lods
push
inc
in
cmp
test
outs
add
call
sti
fld
cli
pop
mov
mov
or
cmp
push
sub
pop
push
icebp
pop
add
pop
mov
das
or
int
rol
popa
test
ins
je
or
aas
mov
sbb
push
mov
(bad)
call
jns
out
iret
bound
jns
les
aam
loopne
imul
inc
jnp
cli
shr
mov
inc
mov
add
ror
outs
dec
xor
outs
mov
cmp
sahf
movs
inc
retf
mov
mov
or
fisub
fwait
mov
dec
stos
(bad)
stc
xor
sub
pop
int
cmp
pop
dec
(bad)
dec
gs
fild
rcr
cmp
push
test
sbb
cmp
loopne
pop
jbe
sahf
inc
aaa
and
adc
and
daa
inc
inc
test
hlt
cdq
fwait
out
(bad)
push
cmp
enter
pop
call
ror
lods
xchg
mov
je
(bad)
aam
in
shrd
out
call
cld
xor
mov
push
test
xor
cmc
mov
mov
cmps
mov
mov
jne
pop
aas
movs
mov
pop
dec
and
pop
xor
pop
cdq
mov
mov
push
mov
mov
mov
push
inc
pop
push
in
or
(bad)
cld
xor
inc
add
push
mov
push
call
ror
ins
fisub
fbld
pushf
not
js
in
jmp
pop
jb
(bad)
call
jge
xor
and
aam
xor
aas
or
fsubr
cmp
scas
xchg
add
test
or
dec
jns
aam
fdiv
xor
test
sbb
dec
dec
dec
jge
inc
sub
loopne
cmp
sbb
adc
jle
into
fst
lea
not
jo
stos
mov
mov
das
adc
nop
(bad)
and
jmp
jge
adc
outs
dec
lods
hlt
mov
pushf
arpl
xor
mov
imul
push
push
mov
(bad)
cli
sub
dec
int3
push
cmp
xchg
and
mov
mov
mov
adc
jmp
jb
mov
mov
cwde
lock
push
adc
and
pop
test
mov
xor
je
inc
sub
dec
cmp
pop
jmp
shl
cmp
sub
or
fadd
fdivr
sti
stos
enter
push
jne
pusha
(bad)
aaa
sti
test
jne
push
xor
or
mov
xor
repnz
xor
mov
or
mov
enter
add
popf
cli
ins
out
ret
dec
pop
pop
faddp
xor
jnp
push
jbe
fs
and
ficom
jno
popf
inc
in
xor
dec
pop
push
mov
in
mov
daa
mov
xlat
imul
fimul
aas
add
lea
getsec
fmul
dec
(bad)
enter
cmp
shl
cdq
sti
and
aaa
and
inc
mov
(bad)
icebp
jbe
sbb
add
pop
mov
push
pop
inc
adc
sbb
and
imul
int3
adc
mov
sub
sub
aaa
bound
xchg
sti
xor
dec
lods
xlat
xchg
dec
pop
in
icebp
out
add
sbb
jp
es
inc
cmp
pop
nop
sub
stos
push
adc
arpl
inc
xchg
jns
out
lods
cmp
jo
xchg
mov
in
push
sub
fadd
or
sete
rcr
sbb
sahf
jp
call
jo
jb
xor
push
test
int
mov
out
cmp
jle
adc
call
mov
xor
fnstsw
inc
adc
mov
sbb
outs
xor
arpl
jns
ret
out
arpl
dec
fild
test
push
shr
lods
int3
jbe
dec
add
cwde
and
mov
stos
or
jbe
cmp
jne
shl
shl
retf
aas
adc
ret
loopne
fisubr
sub
std
loop
sub
ss
xor
scas
xlat
out
scas
cmc
sub
popf
or
je
and
in
jle
xchg
pop
inc
xchg
clc
dec
mov
push
in
dec
imul
mov
jp
nop
dec
pop
jne
xchg
jl
add
jmp
in
adc
jno
jge
push
(bad)
pop
cwde
push
int
das
popf
add
pop
movs
add
imul
gs
ds
arpl
mov
pop
sar
xchg
push
jge
jecxz
rcl
inc
sti
pop
mov
mov
lock
ret
aad
shr
inc
jge
je
das
mov
(bad)
adc
in
inc
push
test
mov
or
test
adc
popf
inc
(bad)
pop
mov
sbb
xor
mov
loope
mov
in
lahf
jnp
pop
pop
lods
sub
imul
push
ss
addr16
cmps
lods
xchg
mov
shl
out
jbe
test
mov
jns
sub
(bad)
int3
sbb
jb
leave
call
adc
test
int
sub
adc
or
xchg
ins
sub
scas
xor
jmp
ds
aas
add
test
and
retf
int3
sub
dec
pop
ins
fdecstp
cmps
outs
adc
int
sbb
jp
pusha
test
and
xchg
xchg
add
daa
movs
push
pop
inc
pop
int
repnz
sbb
cmp
cmp
aam
and
hlt
in
cs
mov
popf
nop
aad
mov
sti
in
mov
out
(bad)
sbb
add
add
add
ret
cmp
sub
mov
xchg
cdq
lods
bound
ins
arpl
jno
inc
xor
out
dec
in
jno
fdiv
cmp
add
sar
aaa
and
aam
pop
cs
or
lea
and
sub
(bad)
jo
dec
and
ret
or
push
and
es
lea
das
sbb
adc
mov
or
ror
mov
or
jp
lahf
sub
dec
jl
fst
push
sub
lods
fcomi
nop
sti
pushf
aaa
sbb
mov
daa
sbb
lds
out
jge
mov
sahf
jl
(bad)
xor
test
pop
mov
inc
fsubrp
pop
bound
mov
xchg
call
sar
fistp
xor
(bad)
cli
add
jbe
dec
int3
aas
mov
ds
jb
pop
and
and
fucompp
pop
xchg
mov
mov
lock
pusha
loopne
mov
ins
push
xchg
inc
cmps
jp
into
jp
out
call
xchg
pushf
dec
fldenv
in
lods
sub
stc
lock
cmp
push
mov
(bad)
push
cmps
movs
pop
add
in
pushf
sbb
lea
push
cmp
sub
or
(bad)
jg
call
pushf
ret
mov
pop
mov
jecxz
dec
(bad)
push
in
and
ret
sub
ins
xor
fidivr
(bad)
cld
adc
fbstp
mov
xor
mov
stos
pop
inc
out
xchg
cmovle
int
add
enter
jns
pop
and
iret
and
sahf
enter
das
adc
nop
int
bound
add
xor
pop
imul
arpl
add
jg
xchg
loopne
dec
(bad)
stos
mov
push
xcrypt-ofb
cmps
stos
xor
xor
xabort
icebp
fisttp
retf
and
sbb
cmp
jecxz
(bad)
sbb
mov
lds
mov
loope
out
sti
jle
dec
daa
jo
enter
stos
fild
and
push
cmp
test
push
out
xor
push
inc
xor
mov
jne
(bad)
aam
imul
daa
bound
shl
add
xor
push
rcr
cmc
add
xchg
push
jne
shl
jmp
dec
pushf
aam
or
xchg
fdivrp
aaa
xor
dec
push
test
cmp
push
mov
inc
and
(bad)
or
xor
aam
arpl
mov
int3
push
inc
dec
xor
mov
sub
std
out
jb
jb
jnp
mov
sti
push
cwde
cli
mov
stc
outs
fwait
adc
daa
mov
or
add
mov
xchg
in
jbe
sub
jne
mov
cmp
xchg
sbb
popa
sbb
sub
jg
push
popf
dec
jbe
setbe
(bad)
es
pop
movs
cmp
xchg
cdq
stos
jle
das
add
dec
movs
pop
outs
mov
xor
pop
int3
xchg
xchg
sahf
out
cdq
ins
int3
mov
popf
das
(bad)
fcmovnbe
fs
scas
rol
cmp
pushf
and
movs
test
ss
xor
push
cmp
pop
call
sub
lods
mov
adc
xchg
sub
push
aaa
in
add
jns
mov
in
ja
sar
sbb
enter
arpl
enter
stc
leave
fsub
adc
push
imul
loop
mov
xchg
lods
jp
in
fmul
enter
and
pop
xor
jo
mov
push
or
cmps
fstp
jmp
das
or
ss
stc
shr
cmp
dec
add
adc
push
xchg
outs
adc
mov
arpl
ins
and
bt
dec
inc
mov
(bad)
or
aad
adc
sub
call
xor
pop
pop
fimul
mov
repz
mov
jl
push
cmp
lds
fsubr
xchg
stc
cmp
sub
lea
jmp
fidivr
shr
sbb
in
fild
adc
(bad)
fisttp
jns
adc
pop
mov
cmps
xor
pop
sub
xlat
dec
add
cmp
dec
mov
in
data16
sbb
mov
inc
push
gs
dec
pop
mov
mov
adc
lds
daa
stos
inc
loopne
and
cmps
fwait
shr
mov
sub
xor
gs
aad
fcomp
jecxz
sbb
test
mov
mov
call
retf
ret
pushf
pop
xor
popa
rcr
aaa
ss
or
mov
sub
div
daa
dec
or
popa
test
enter
test
loopne
push
add
push
jge
dec
cdq
sub
div
sub
pop
jo
idiv
gs
sub
pop
push
cdq
mov
out
push
adc
bound
shr
cmp
jg
adc
pop
adc
cli
loopne
pop
jmp
inc
call
leave
imul
das
in
clc
jp
xchg
sti
mov
cdq
cwde
stos
cmc
inc
mov
call
mov
fwait
mov
ds
mov
cmp
test
(bad)
leave
inc
xchg
das
jnp
mov
sub
xor
cmp
leave
scas
mov
push
or
cwde
retf
xor
add
dec
pusha
mov
and
fbld
xlat
int
test
(bad)
push
pop
movs
or
mov
hlt
mov
cli
dec
outs
fs
test
mov
mov
pushf
cmp
mov
dec
jmp
jmp
jo
push
enter
ror
lods
inc
fnstsw
in
sbb
push
add
in
jnp
mov
aaa
test
cmp
js
test
fimul
dec
sbb
sub
(bad)
sahf
mov
cwde
mov
arpl
sbb
pop
iret
sbb
jp
sahf
inc
adc
es
(bad)
rcr
fild
popf
sub
test
ss
scas
cwde
imul
fild
sub
in
jbe
mov
cs
dec
popa
mov
jno
int3
adc
mov
adc
rcr
ret
adc
pop
enter
push
pop
in
(bad)
ins
add
xchg
icebp
lods
push
loop
xor
add
mov
bnd
repnz
sbb
enter
adc
shr
sub
scas
xchg
icebp
or
imul
dec
or
loope
mul
nop
inc
jo
xchg
mov
(bad)
jp
and
fsin
xchg
js
mov
push
adc
sahf
daa
cs
adc
and
leave
push
adc
push
push
fs
xor
sbb
mov
mov
lods
js
movs
fwait
sub
ins
xchg
jae
cdq
stos
inc
int3
fst
nop
cmp
aas
cli
sbb
hlt
adc
daa
pushf
ja
push
lea
icebp
sub
cmp
sbb
pop
sbb
add
loop
pop
and
xchg
(bad)
pop
sbb
(bad)
xchg
adc
iret
jno
(bad)
daa
addr16
lea
mov
push
mov
data16
cmps
pop
arpl
fs
cmp
xor
dec
clc
add
out
and
mov
and
push
rol
pop
out
mov
pusha
mov
stos
icebp
and
and
scas
int3
adc
xor
leave
xor
adc
xor
pop
sbb
fs
mov
push
cmp
fist
dec
pop
mov
lea
xchg
push
mov
cs
test
mov
bt
and
ins
xlat
xchg
popf
stos
sbb
in
repnz
je
sar
out
loope
xchg
push
fwait
call
mov
pop
or
out
cld
icebp
add
inc
loope
cmp
push
aam
mov
int
cdq
xchg
sbb
jmp
inc
out
cmc
sar
push
int3
push
and
mov
retf
out
cmp
jne
sbb
bound
sub
or
mov
jo
add
push
pop
cli
dec
pop
scas
inc
pop
lds
add
in
mov
sub
addr16
cmp
int
and
sub
in
xchg
enter
and
jae
fadd
fs
fstp
stc
(bad)
xlat
add
ficom
into
arpl
and
push
push
test
mov
hlt
rcl
mov
xor
loop
or
xor
add
mov
outs
pop
lea
shr
pop
xor
iret
fst
loopne
pop
add
push
pop
ins
cmc
mov
sbb
cmp
pop
push
sub
and
push
jmp
fwait
clc
arpl
les
sar
adc
pop
and
mov
pop
sbb
add
jle
mov
cmps
xchg
pop
push
jbe
push
stc
in
out
clc
add
ins
ret
loop
out
xchg
push
inc
jnp
mov
mov
mov
sbb
lods
xchg
jle
mov
sbb
sub
jae
mov
add
dec
shl
arpl
mov
lock
inc
lahf
jecxz
movs
xor
sub
fs
sbb
(bad)
jmp
mov
xor
push
and
add
clc
sbb
dec
mov
les
pop
retf
sub
cmp
and
cdq
mov
nop
sub
sub
lods
repz
add
lods
les
add
int3
loop
outs
sbb
pop
addr16
inc
pusha
ss
std
mov
(bad)
mov
popf
(bad)
stos
dec
xor
mov
xor
and
or
or
mov
sub
hlt
mov
ja
(bad)
add
and
shl
aam
cs
ja
dec
dec
bound
mov
and
test
dec
xor
xlat
push
inc
js
(bad)
je
mov
mov
fs
mov
mov
or
outs
(bad)
xor
das
jne
sti
aaa
pop
les
jmp
inc
push
retf
icebp
sub
pushf
loopne
mov
cmp
mov
cld
jmp
push
xor
mov
rol
push
mov
mov
jmp
shl
xor
add
(bad)
jns
dec
arpl
fwait
add
call
and
repnz
jo
adc
cmp
hlt
aam
cmp
sub
cmp
inc
add
dec
ret
lock
adc
retf
add
mov
xlat
leave
leave
mov
out
(bad)
retf
push
mov
push
or
or
lods
xchg
lds
sub
mov
fstp
xchg
xchg
ror
add
mov
push
hlt
popa
mov
jg
mov
ror
nop
lea
icebp
bound
inc
or
das
jnp
inc
push
pushf
xchg
lock
fwait
or
int3
and
jle
mov
push
jle
mov
push
arpl
hlt
mov
jae
jne
les
lds
push
fcmovnbe
jp
push
ins
stos
mov
xor
xchg
(bad)
rol
mov
push
aad
inc
fidivr
nop
bound
div
add
jmp
movs
fcom
mov
into
fcomp
scas
js
cdq
rcr
push
cmps
rcr
out
fldln2
bound
push
jmp
or
ja
cmps
jl
mov
inc
xacquire
repnz
xor
aam
sbb
push
pop
xchg
cwde
daa
loop
lods
stos
retf
cmc
retf
pushf
in
mov
dec
cwde
xchg
scas
imul
sbb
jmp
imul
not
fild
inc
push
mov
test
sbb
xchg
sbb
pop
aad
scas
adc
and
shl
pop
dec
push
mov
mul
or
jl
lea
shl
push
clc
push
adc
sahf
mov
push
sti
sbb
pop
inc
dec
mov
jae
and
call
adc
outs
xchg
gs
sub
sahf
inc
mul
jecxz
mov
push
fmul
aad
xor
sub
jo
sti
xor
inc
add
inc
xchg
movs
adc
mov
jle
mov
add
stos
mov
add
add
cmp
loopne
aas
jle
dec
mov
pop
sub
inc
clc
mov
(bad)
jg
adc
fistp
or
xor
add
lea
retf
sbb
inc
mov
movs
cmp
push
es
icebp
scas
js
out
dec
jae
mov
mov
loope
mov
test
dec
shr
cmps
mov
iret
in
cmps
mov
pop
pushf
cmp
int3
add
dec
mov
and
mov
push
enter
outs
retf
mov
and
aas
and
in
lock
dec
xlat
call
or
mov
das
push
ins
xchg
xchg
xor
in
mov
jno
adc
cwde
inc
cld
cmp
cmc
and
mov
mov
call
mov
std
std
test
out
mul
cmp
mov
pop
jns
xchg
sahf
lds
mov
and
push
test
inc
push
call
mov
(bad)
aam
es
cmp
mov
inc
or
call
add
mov
aaa
out
aaa
addr16
call
nop
pop
pushf
ret
clc
scas
inc
mov
push
sub
std
dec
mov
sub
or
sub
pop
imul
jo
cmp
or
int3
out
test
adc
add
pop
jle
xor
stc
iret
sbb
iret
les
jle
sbb
or
cs
mov
jo
nop
xor
fimul
cmp
fistp
inc
jle
rol
popa
or
mov
ret
mov
sbb
loop
adc
mov
outs
or
jns
mov
cmp
sahf
cmp
or
and
and
push
jecxz
push
push
sbb
cmps
aad
mov
rol
mov
in
(bad)
xchg
lea
fiadd
mov
jb
mov
push
push
call
neg
loope
pop
scas
stos
inc
std
adc
std
cmp
fdiv
ins
dec
bound
iret
retw
mov
mov
cdq
jae
push
mov
xchg
ror
xor
cdq
pop
jbe
mov
xor
jle
push
xchg
cmc
pop
mov
std
dec
dec
sysret
xchg
dec
call
cli
lods
sbb
call
cmps
aam
add
int3
adc
nop
sub
lahf
bound
pop
je
cmp
cmp
in
mov
out
rcl
mov
xor
pushf
pusha
jge
pushf
cli
sbb
xchg
mov
push
sbb
sub
jo
cmp
or
dec
xchg
repnz
push
sub
cmc
out
add
add
push
das
or
xor
retf
xchg
jle
inc
jb
jns
(bad)
aad
test
sbb
push
ret
or
sub
push
pop
or
ret
fdiv
call
sbb
cmc
ficom
mov
aam
or
inc
push
mov
push
cdq
outs
inc
dec
xchg
pop
movs
and
loope
lea
mov
push
je
fisub
fidiv
adc
mov
mov
cmc
int
pop
sbb
in
xor
ins
xchg
rcr
dec
out
mov
pop
shr
inc
add
ja
mov
jmp
inc
out
xlat
or
les
mov
or
jo
imul
and
mov
mov
xchg
push
cmc
jg
lds
pop
fnsave
(bad)
(bad)
xor
sbb
or
xchg
test
cmp
cmps
jmp
lods
dec
cmp
xchg
fstp
dec
and
and
psllw
inc
shl
das
xchg
jmp
mov
rsqrtps
js
mov
movs
nop
out
pop
in
gs
or
test
ins
or
shr
xchg
stos
pop
aam
pushf
add
inc
dec
sbb
fistp
push
jno
push
or
jmp
ror
adc
jae
pop
fsub
shl
sbb
ds
(bad)
mov
mov
xchg
dec
sub
push
cmp
mov
aas
cmp
pop
mov
push
pop
mov
rcr
jae
pushf
inc
sbb
dec
aas
mov
dec
inc
fstp
mov
fwait
xlat
xlat
xor
stos
sti
call
jno
mov
cmc
test
icebp
xchg
or
adc
cld
inc
sbb
add
imul
sbb
pushf
lock
fstp
call
pop
inc
cmp
xchg
and
gs
iret
mov
cdq
std
mov
adc
(bad)
adc
xchg
dec
fwait
cmp
mov
lods
pop
aad
jge
push
icebp
xchg
(bad)
ror
lods
push
inc
and
push
pop
push
shl
inc
mov
pop
push
add
jge
addr16
pushf
mov
cmp
addr16
out
pop
mov
push
jle
addr16
dec
dec
mov
out
inc
scas
out
add
or
popa
sti
jne
sub
mov
pop
jecxz
add
aad
mov
xchg
xchg
cmc
out
push
mov
cmp
xchg
push
mov
cmp
or
idiv
dec
push
aaa
cmp
ds
fstp
pusha
(bad)
rcr
jecxz
pushf
es
jg
mov
hlt
mov
sbb
ins
test
push
pop
sub
jl
adc
(bad)
cwde
in
mov
pop
push
fisttp
jnp
(bad)
cmp
and
imul
inc
and
add
mov
or
(bad)
cli
xor
xor
pop
shl
fsubr
sub
xchg
mov
jecxz
mov
mov
jp
xor
push
push
inc
and
mov
in
jg
pop
dec
or
mov
sbb
ret
jbe
mov
dec
and
test
push
scas
les
(bad)
scas
add
pop
pop
data16
fstp
lods
cmp
xor
cmp
fs
inc
cmp
mov
adc
jge
ins
call
and
aad
call
pop
push
cmp
and
jmp
rcr
rcl
fistp
xor
ds
in
int
aas
inc
(bad)
adc
xchg
sbb
ret
adc
jle
pop
push
dec
stos
jg
push
sbb
adc
fidivr
ret
ss
push
and
dec
pop
mov
std
ror
adc
mov
xor
arpl
add
les
ins
ja
cmc
(bad)
sti
pop
fwait
ss
and
jp
jmp
ds
inc
jo
xor
retf
in
imul
or
and
(bad)
add
aaa
mov
ds
pop
and
out
lock
mov
and
xor
xor
mov
in
dec
les
movs
mov
jecxz
or
inc
mov
or
inc
nop
or
dec
adc
mov
into
push
sbb
lods
sbb
xor
inc
push
pop
sub
iret
std
or
out
xor
iret
cld
test
enter
dec
loopne
pop
lahf
dec
mov
jg
xor
retf
pop
pop
shl
and
mov
test
movs
mov
outs
stos
cmp
dec
push
cmp
dec
sbb
cmc
push
rcr
pop
mov
imul
sub
(bad)
push
add
jg
pop
pop
(bad)
jmp
jmp
es
push
popf
and
add
pop
les
or
js
pop
sbb
sbb
sbb
jnp
sub
sub
std
mov
pop
repnz
ins
and
stos
cmp
dec
add
sub
es
int
add
and
rcr
loopne
dec
jl
inc
data16
dec
inc
push
inc
pushf
or
leave
xchg
push
xchg
adc
shr
daa
ins
pop
sbb
push
scas
inc
or
xchg
adc
xor
(bad)
mov
sbb
push
jne
pop
pop
loope
mov
(bad)
mov
es
rcr
jmp
and
call
jmp
aaa
fs
out
fcomp
das
jl
(bad)
std
scas
test
jb
cmp
jae
mov
(bad)
das
or
retf
ret
mov
adc
or
pop
sub
mov
push
sbb
jne
stos
push
xchg
xchg
jo
pop
xchg
and
pop
es
xchg
in
sub
movs
daa
int3
int3
cwde
cmp
cmp
outs
stos
aas
mov
mov
mov
(bad)
ret
jmp
cs
mov
cmp
mov
(bad)
icebp
mov
pusha
sbb
aad
daa
retf
cmps
mov
jecxz
jnp
jmp
shl
loopne
fld
or
pusha
repz
test
mov
and
xchg
cmp
gs
out
inc
pcmpgtb
mov
push
sahf
adc
mov
lods
sti
mov
mov
dec
xchg
inc
push
push
imul
jge
push
push
(bad)
push
add
mov
mov
and
mov
and
sbb
jle
mov
cmps
push
pop
add
mov
push
add
aad
mov
and
pop
mov
pop
sub
push
xor
adc
dec
sahf
retf
test
gs
xor
jp
(bad)
xor
movs
cmp
daa
or
sbb
jmp
jmp
pop
mov
cwde
pop
xchg
ins
xchg
mov
push
inc
jge
pop
je
add
adc
dec
xchg
jo
jg
pushf
pop
dec
cmp
sbb
sbb
je
inc
pop
push
outs
retf
pop
sahf
add
add
stos
in
adc
mov
jmp
mov
cs
ficom
mov
jp
stos
jb
and
fadd
rcl
ins
aas
(bad)
ins
xor
xchg
xor
sbb
retf
or
adc
dec
mov
pop
add
xchg
hlt
xlat
ret
popf
vpor
push
addr16
adc
xor
push
xchg
call
sub
cmp
jle
mov
out
pop
enter
lock
mov
adc
nop
inc
fdiv
mov
icebp
dec
add
sub
or
sub
addr16
and
pop
xchg
cmp
mov
cmps
ds
mov
mov
pop
push
inc
(bad)
push
pushf
mov
fwait
retf
shld
adc
mov
inc
and
adc
xor
sahf
dec
mov
in
cmp
out
loop
pop
mov
sahf
dec
sub
jae
ret
cmps
adc
or
jnp
mov
push
mov
cmp
jo
sub
and
mov
pop
mov
js
jecxz
fisttp
mov
ret
xor
in
dec
aaa
sub
cmp
cmp
xor
test
mov
popf
jecxz
sbb
icebp
fbstp
mov
(bad)
push
movs
ret
sbb
push
pop
mov
mov
add
mov
arpl
shl
out
xor
mov
sub
or
addr16
xor
iret
js
mov
loopne
or
sbb
jo
dec
xchg
sahf
hlt
popf
rol
add
loopne
cmc
pop
push
add
mov
inc
ret
mov
pop
int
mov
ins
in
loopne
movs
pop
dec
pop
and
scas
pop
dec
cmp
xor
mov
adc
push
inc
push
mov
jmp
mov
(bad)
sbb
push
mov
das
lock
out
xor
push
loop
fs
in
or
stos
repz
jnp
push
loope
xchg
bound
adc
mov
inc
cld
lea
dec
adc
(bad)
mov
not
sub
pop
mov
pop
mov
fidiv
push
rcl
aad
mov
mov
mov
aam
jno
fdiv
mov
jecxz
call
mov
lahf
jle
sahf
test
dec
inc
ret
in
and
push
dec
xchg
xor
pushf
cs
pop
cmp
sbb
or
ss
and
retf
ror
pop
fdiv
add
xor
test
mov
push
mov
div
test
test
push
int3
add
mov
fidiv
mov
push
jg
rcr
adc
and
das
pop
push
xor
shl
mov
(bad)
fnstcw
leave
shl
push
mov
mov
xchg
(bad)
repz
ins
sahf
inc
mov
movs
sti
loop
sub
jns
dec
movs
outs
out
fist
lea
push
xchg
jle
bound
push
dec
mov
or
sbb
add
jg
repnz
sbb
mov
mov
sub
movs
cmp
out
sub
jl
mov
inc
cmp
mov
lock
push
sar
pop
xchg
call
loopne
call
xor
pushf
or
mov
cwde
sub
cmp
daa
out
mov
inc
mov
mov
mov
jae
and
popa
mov
adc
and
into
into
sbb
push
lods
xchg
cmp
add
push
mov
pop
cmp
pop
jg
not
es
cmp
dec
bound
lods
rol
cdq
iret
pop
ret
cmp
add
cs
sub
outs
push
nop
sbb
pop
adc
xor
sub
and
sub
xchg
dec
stos
push
adc
push
in
rcr
dec
cmp
pop
and
mov
ror
or
jle
pushf
jo
mov
jnp
test
jmp
mov
adc
dec
adc
mov
stc
pop
inc
xor
pop
pop
fwait
xor
jne
stc
xchg
cmp
sbb
test
dec
imul
and
and
xchg
mov
adc
leave
frstor
rcl
or
cli
push
stos
pop
leave
push
and
ins
icebp
push
xchg
fucomip
fsub
dec
movs
loope
push
arpl
clc
push
stos
mul
cld
and
mov
scas
mov
out
mov
adc
mov
fdiv
idiv
mov
retf
pop
and
loop
bound
cli
ja
loop
xor
je
out
cmp
icebp
add
xor
mov
test
fmul
add
nop
mov
loop
sub
jl
mul
fild
mov
cmps
shr
clc
inc
push
push
sub
dec
xchg
bound
or
aas
or
daa
mov
xor
adc
pusha
lods
mov
cmp
test
and
xor
pop
mov
sbb
hlt
into
mov
cmp
test
enter
imul
cmps
mov
out
sub
popf
mov
or
dec
sbb
mov
pop
sub
arpl
jbe
or
push
or
arpl
imul
std
adc
xchg
mov
test
leave
cdq
(bad)
iret
bnd
movs
pop
in
pop
sahf
mov
mov
dec
dec
jmp
outs
jmp
dec
push
out
push
sub
xchg
(bad)
retf
and
retf
leave
ret
jl
mov
mov
outs
and
push
pop
imul
sbb
xchg
mov
in
push
mov
add
(bad)
fstp
jb
repz
icebp
ret
mov
xor
cmp
xchg
movs
sub
mov
and
gs
mov
xchg
retf
mov
fisttp
push
cmp
mov
xchg
mov
cmp
les
sub
in
mov
ret
ficomp
(bad)
xlat
dec
test
dec
mov
or
mov
pop
ins
rol
and
je
inc
loopne
adc
int3
sub
rcr
and
test
(bad)
out
mov
cmp
sbb
cmc
ins
imul
scas
lods
bound
ror
jg
fbstp
jbe
inc
and
mov
movs
xor
jmp
fld
pop
stos
push
cmps
repnz
jp
fstp
push
xchg
push
mov
mov
mov
add
movs
or
ret
xor
(bad)
jge
mov
shl
adc
lahf
int
inc
call
jns
idiv
std
pop
mov
call
and
sahf
mov
and
fimul
jle
xor
out
in
fild
outs
mov
fimul
mov
adc
xor
dec
or
cmp
pop
imul
in
inc
jo
es
pop
sub
or
xchg
ret
cdq
and
movs
je
bound
sbb
dec
sub
cmp
arpl
jb
or
jbe
pusha
stos
inc
mov
sbb
iretw
addr16
mov
xchg
sbb
xchg
(bad)
jp
les
sbb
jmp
inc
(bad)
xor
jge
mov
in
(bad)
cmp
into
lods
mov
mov
dec
fscale
ss
bound
movhps
jle
aaa
lods
(bad)
leave
fidiv
adc
pop
je
out
jmp
inc
sahf
cmps
stos
pushf
icebp
movs
or
aam
adc
(bad)
jno
imul
dec
stc
lahf
mov
pop
stos
xor
stos
cmp
out
aad
out
aam
(bad)
xchg
call
js
into
ss
lods
xchg
add
imul
aaa
dec
aaa
test
inc
outs
cmp
mov
test
jns
popa
call
setg
aam
(bad)
dec
mov
mov
cmp
cmp
push
push
xchg
lods
xor
jne
and
jb
mov
scas
sbb
add
ret
(bad)
fst
out
retf
pop
sbb
dec
cmc
or
pop
mov
inc
out
adc
ds
jg
mov
push
add
sub
sahf
in
ins
test
outs
call
push
das
push
cmc
push
sub
cmp
or
jge
(bad)
mov
mov
add
push
(bad)
adc
sub
push
outs
cmp
adc
retf
xchg
lods
xchg
mov
test
call
jge
jno
aad
aaa
inc
inc
mov
push
add
ins
xor
xor
in
pop
ret
mov
cs
sub
call
les
cmp
cmp
add
mov
mov
xchg
mov
xor
pop
test
xchg
pop
add
dec
inc
push
retf
push
dec
fild
test
sub
arpl
lods
shr
xchg
xchg
xlat
mov
ror
mov
jns
in
mov
es
cmps
lods
adc
inc
push
xchg
inc
cmp
jne
jnp
movs
shl
stos
(bad)
mov
mov
das
or
div
ins
dec
pop
push
frstor
ret
mov
dec
popf
mov
push
imul
inc
stc
add
imul
pusha
ins
mov
add
imul
fs
mov
fidiv
scas
xchg
cmp
je
jnp
cmp
mov
das
call
rcr
xor
js
mov
int3
inc
daa
dec
inc
mov
or
(bad)
loop
sar
jbe
leave
mov
jns
jecxz
fnstcw
and
fild
jmp
xor
rol
lods
pop
inc
ss
je
adc
in
push
inc
mov
mov
test
adc
adc
adc
aaa
jno
or
ja
fisttp
sahf
inc
cmps
sub
shr
mov
jp
mov
imul
or
lods
ss
sbb
test
push
mov
adc
repnz
mov
mov
mov
xor
mov
stc
push
daa
shl
mov
adc
test
popa
daa
adc
aam
sbb
jb
cmp
dec
popa
arpl
adc
pop
jle
not
movs
adc
jmp
push
adc
outs
push
pusha
cmp
xchg
mov
fdivr
xchg
inc
dec
xor
rcr
add
pop
loope
push
imul
adc
pop
aas
out
jl
imul
repz
adc
ds
les
inc
ret
sbb
add
repz
mov
jl
loopne
sbb
(bad)
mov
test
xor
add
cmp
repz
dec
and
scas
std
add
jge
adc
gs
out
cmps
xchg
jl
jo
mov
into
pop
and
ret
push
push
adc
pop
rcr
(bad)
mov
mov
fsubr
push
jmp
and
adc
or
fstp
cmp
jle
call
aaa
adc
mov
pusha
mov
xchg
xor
xor
sub
jnp
cmps
dec
xor
mov
cli
dec
mov
mov
add
ds
cmps
stos
cmps
inc
mov
idiv
lea
stos
mov
aam
sub
es
hlt
pushf
iret
xchg
cld
rcr
fwait
popa
or
mov
mov
jnp
mov
dec
jo
shl
mov
jp
lods
mov
adc
clc
jbe
add
jne
pusha
addr16
xor
imul
mov
ret
sub
pop
jo
in
dec
cdq
es
pop
push
mov
adc
xor
sub
jno
test
test
hlt
cld
sub
xchg
lods
lods
aad
cld
cdq
and
leave
jg
push
loop
xor
jno
cmp
fidivr
pop
ror
dec
pushf
je
pop
inc
or
loopne
xor
loope
aad
ins
je
rcr
stos
sub
sbb
or
xchg
mov
pop
add
adc
push
xor
loopne
mov
stc
loope
mov
inc
sbb
in
leave
mov
cmp
fwait
mov
out
jae
xchg
jnp
mov
xor
pop
repz
dec
dec
int3
aaa
adc
dec
add
push
lds
or
sub
sub
pop
imul
scas
ja
pop
pop
es
sub
mov
rcr
cmp
out
adc
aaa
rcl
sahf
mov
add
pop
add
cmp
dec
xor
mov
jo
mov
mov
fbstp
sbb
and
xchg
mov
data16
inc
lahf
mov
dec
retf
xchg
in
inc
gs
lea
pusha
fcomip
rcl
sbb
enter
jnp
(bad)
stos
enter
frstor
xchg
add
adc
dec
out
xor
das
rcl
xor
test
in
(bad)
std
pop
fisub
(bad)
sbb
lds
retf
rcr
scas
out
jne
lods
mov
mov
sbb
inc
xor
xlat
lock
cmps
add
or
test
int
and
jl
pop
in
sbb
or
fadd
movs
outs
jbe
xor
push
les
cld
fiadd
iret
ds
pop
push
adc
push
add
pusha
popa
fisubr
xchg
jge
mov
(bad)
fldl2t
fdivr
xchg
cmps
mov
or
and
sbb
cmp
mov
idiv
pop
(bad)
jnp
loopne
push
fisttp
mov
std
and
jns
add
inc
stos
lmsw
es
jae
dec
and
mov
or
lds
sub
(bad)
push
mov
xor
iret
jg
add
in
jecxz
jae
mov
cmps
test
popa
xchg
mov
ret
fsubrp
iret
mov
add
dec
add
jle
std
outs
jne
outs
or
cmps
psrlw
rol
not
pop
sbb
sbb
add
in
mov
jb
push
rcr
cli
sbb
addr16
lahf
jp
retf
jae
lock
cdq
shr
bnd
inc
mov
test
adc
data16
out
sub
pop
lock
adc
sbb
sahf
sub
add
pop
push
iret
(bad)
fstp
sub
cmp
sub
(bad)
adc
or
fmul
mov
jae
fstp
mov
jne
mov
or
mov
retf
adc
add
mov
dec
add
int
mov
je
lds
iret
push
push
movs
sti
mov
cmp
add
aam
dec
jmp
dec
mov
adc
dec
and
out
call
fsub
stos
inc
js
popa
repz
stos
fld
pop
xchg
adc
iret
jnp
mov
or
les
mov
repnz
jl
sar
inc
sub
or
stos
inc
sbb
fldenv
out
jno
hlt
push
es
(bad)
test
dec
aaa
or
popf
add
hlt
icebp
xchg
inc
sbb
fdivr
jbe
pop
mov
inc
xchg
mov
fild
retf
mov
test
cs
(bad)
in
jg
mov
out
icebp
scas
add
mov
add
jnp
repnz
mov
add
test
outs
xchg
inc
or
xor
ins
in
pop
push
xchg
mov
call
shr
lods
hlt
jns
jmp
jecxz
hlt
jle
lods
sub
sub
bound
or
loope
gs
(bad)
jbe
in
xchg
ds
jle
out
scas
fidivr
sub
(bad)
xchg
push
aaa
adc
pushfw
stos
cwde
add
sbb
sbb
and
push
mov
pop
fs
push
test
dec
repz
adc
enter
and
push
outs
fidivr
(bad)
jne
dec
lods
adc
leave
ins
xchg
mov
mov
ficom
add
or
loopne
push
cmp
xor
outs
test
and
pop
test
add
pop
scas
cmps
or
data16
clc
loopne
pop
mov
in
or
mov
je
or
and
aam
mov
fbstp
mov
lahf
popf
fidivr
bound
push
mov
(bad)
cmp
push
jno
pop
pop
pop
mov
jle
pop
call
stc
test
icebp
movs
stos
push
push
sub
fldcw
xchg
xchg
push
mov
push
arpl
adc
call
out
fs
repnz
push
frstor
call
ror
xchg
bound
dec
sub
in
and
add
sbb
sbb
adc
or
or
add
or
cmp
lds
mov
pop
inc
fsqrt
sub
xchg
mov
sbb
cdq
mov
ret
jae
(bad)
and
pop
push
pop
jae
stc
jmp
test
stc
mov
pushf
aaa
inc
retf
jmp
ret
sub
aaa
test
mov
mov
and
jnp
inc
test
popa
fdiv
sti
pushf
inc
inc
pop
xchg
mov
dec
cmp
xor
sbb
sbb
(bad)
sub
mov
enter
outs
push
shl
pop
dec
stos
mov
mov
movs
frstor
and
or
mov
icebp
inc
or
pop
aam
pop
inc
in
add
rcr
int3
mov
test
cdq
adc
xchg
sar
jbe
pushf
in
in
lds
push
mov
sub
dec
jge
hlt
dec
popf
leave
rcl
xchg
mul
mov
mov
jbe
push
sub
pop
je
retf
mov
add
cmps
scas
and
hlt
push
stc
mov
xchg
inc
sbb
popf
in
stc
mov
imul
mov
sub
rcr
or
mov
test
and
int
push
mov
ja
mov
xchg
pop
lods
and
inc
xchg
shr
xchg
movs
and
xor
mov
push
test
xchg
cmp
dec
(bad)
adc
and
jl
pop
cmp
in
sub
push
mov
inc
aaa
jbe
jecxz
mov
lds
cmp
mov
fsubrp
aam
xlat
sbb
dec
(bad)
mov
sub
(bad)
jae
dec
aas
push
retf
push
sub
pusha
mov
sbb
mov
lods
xchg
rol
jp
mov
mov
jmp
inc
(bad)
push
jl
sbb
mov
pop
std
addr16
fimul
pop
lahf
in
mov
out
push
stos
loop
inc
xor
rcr
in
add
es
jmp
jle
imul
inc
push
xchg
mov
(bad)
repz
clc
dec
xchg
in
imul
jmp
fdiv
out
mov
jg
es
stos
not
mov
or
inc
sbb
into
sbb
or
popa
xor
ja
cli
xor
push
dec
xor
test
or
push
push
call
repz
dec
aad
ror
dec
inc
push
cmp
pop
test
xchg
lea
pusha
fld
cmp
addr16
gs
neg
cmps
jns
je
fidiv
(bad)
fsub
scas
cvttps2pi
mov
pop
mov
dec
imul
stos
xor
je
pop
and
xor
xchg
xor
addr16
jl
aad
xor
sbb
mov
pop
dec
xor
dec
idiv
dec
ds
mov
inc
xor
cmp
jne
sbb
push
push
pop
xchg
movs
fadd
hlt
loopne
adc
cmp
sbb
jne
stos
inc
out
je
leave
add
cdq
inc
pop
stos
pop
mov
mov
push
ins
dec
imul
leave
dec
inc
je
push
jbe
es
bswap
sti
div
cs
enter
adc
out
sti
or
jnp
sbb
sti
mov
sub
mov
cmp
jo
in
push
scas
ss
sub
xor
cmps
xor
sbb
pop
inc
pop
stos
or
mov
jnp
xchg
gs
ret
sahf
repz
(bad)
hlt
inc
ja
sub
xchg
push
jae
fiadd
or
xor
test
push
call
xchg
cmp
add
ds
or
loope
sets
bnd
leave
sub
imul
dec
and
mov
sub
fwait
mov
and
inc
lods
fld
sar
ds
imul
ins
nop
or
push
test
jno
xchg
xchg
call
fsub
in
or
xchg
cmp
lods
jecxz
sbb
xor
or
mov
cmp
sbb
pop
xor
into
mov
pop
out
adc
push
outs
je
mov
dec
pop
add
fadd
rcl
add
loop
loope
push
pusha
js
ror
add
mov
xlat
js
dec
cdq
fs
pop
jp
push
inc
xor
mov
mov
out
fimul
or
ret
xchg
jo
mov
xor
test
push
push
stos
test
sub
neg
push
pop
(bad)
sar
adc
jmp
(bad)
(bad)
lea
or
(bad)
mov
and
fidivr
cmp
jns
scas
aas
dec
dec
scas
mov
cmc
or
repnz
out
pop
cmp
(bad)
adc
outs
(bad)
fnstsw
xchg
inc
push
pushf
das
and
movs
pushf
mov
push
fdiv
lods
neg
mov
jecxz
or
dec
inc
xchg
add
test
fs
or
into
movs
out
inc
test
mov
pop
pop
call
mov
in
sub
cmc
cmp
mov
loopne
push
jle
ret
xchg
popa
adc
dec
ret
rcl
div
cmp
cdq
mov
mov
pusha
push
cdq
fwait
or
mov
out
cmp
mov
sahf
test
(bad)
inc
mov
dec
test
ds
cdq
push
cdq
push
push
sbb
fwait
sar
mov
test
sub
test
cmp
inc
mov
cld
(bad)
xchg
aad
bound
ds
jge
push
jo
mov
pushf
mov
outs
js
cmp
or
movs
retf
pop
pusha
jl
sbb
int
outs
inc
jmp
jbe
xchg
inc
dec
aas
fwait
cmps
pop
dec
inc
mov
xchg
jns
xor
jp
popa
movs
(bad)
and
retf
adc
and
cld
into
fcmovnbe
push
daa
push
mov
add
leave
sub
sub
ficomp
cmp
iret
cmp
aas
add
scas
ds
ror
nop
les
lahf
test
mov
sub
retf
(bad)
in
mov
popa
adc
xchg
sbb
push
and
iret
add
lock
sub
lock
jb
jl
and
and
add
stos
(bad)
icebp
ret
hlt
add
(bad)
aad
stos
jecxz
mov
addr16
fsub
mov
daa
lahf
adc
je
pop
jmp
add
outs
(bad)
mov
mov
cmp
(bad)
jg
sar
xchg
movq
sbb
in
sub
xor
mov
ins
jp
pushf
std
fistp
in
pop
sbb
cmp
pop
(bad)
jmp
push
test
cs
mov
ins
xchg
out
cli
call
aas
stos
mov
fstp
sbb
out
sar
fld
mov
sbb
imul
push
mov
es
xlat
push
dec
push
cmp
repnz
mov
inc
dec
cmp
pop
rol
fs
stos
xchg
adc
inc
mov
mov
dec
iret
mov
out
push
push
and
xchg
jg
push
shl
enter
mov
mov
sub
nop
cmc
or
data16
jns
out
bound
repz
cmp
jmp
retf
loop
cmps
mov
lahf
xchg
pop
mov
pop
push
hlt
cmp
sub
ror
pop
in
arpl
cdq
mov
ss
xchg
sbb
int
sbb
inc
retf
push
jo
mov
outs
les
lahf
mov
lods
jecxz
sub
mov
jge
jb
inc
cmp
ret
neg
cmove
sub
aam
dec
or
xor
clc
fs
movs
test
xor
enter
sub
pushf
lea
ins
inc
inc
push
les
in
or
xchg
sub
mov
pop
dec
add
pop
loope
push
jno
int
dec
cli
(bad)
sbb
mov
mov
or
jmp
xchg
inc
sar
pop
jo
xor
xor
sbb
je
and
(bad)
clc
pusha
fdivr
or
push
dec
fcomp
outs
sub
ss
or
stc
mov
sbb
loope
sub
xor
movs
mov
cmp
sar
(bad)
out
in
popf
fwait
jae
int
xor
cmp
push
xlat
lods
inc
in
sbb
test
xor
jg
and
loopne
ret
adc
jno
clc
bswap
enter
mov
enter
push
mov
mov
(bad)
ja
inc
in
xor
in
adc
pop
push
shl
shr
enter
rcr
inc
pop
xchg
push
push
fiadd
xor
mov
js
fidivr
push
pop
mov
or
jmp
rcr
out
pop
fnstcw
fstp
sub
jnp
(bad)
icebp
mov
aam
and
fld
sbb
gs
ror
gs
lods
je
mov
iret
inc
jo
loop
imul
fisub
xor
ds
adc
mov
adc
mov
fist
mov
sbb
stc
jle
fcmovnb
es
xchg
sbb
mov
sub
call
scas
movs
call
dec
ret
mov
jo
mov
fnstcw
cmps
sbb
or
xor
arpl
sbb
mov
scas
mov
in
mov
pop
sub
jmp
mov
hlt
sub
dec
mov
(bad)
stc
(bad)
mov
(bad)
test
stos
cmp
iret
xchg
loop
and
dec
repnz
mov
jne
pushf
xchg
in
ds
add
cld
jo
sub
xchg
xchg
test
or
and
add
adc
shr
xchg
dec
jmp
(bad)
(bad)
jge
aam
jmp
movs
push
pop
sbb
xchg
adc
ins
call
pushf
mov
jae
iret
icebp
xor
cs
and
dec
jmp
push
mov
pop
and
jmp
scas
xchg
inc
mov
ss
sar
cmps
out
mov
mov
sub
adc
xchg
lock
sub
neg
jecxz
cmps
pusha
mov
add
bound
jge
(bad)
cmp
or
iret
mov
les
in
push
daa
enter
adc
imul
cmp
shl
sub
(bad)
call
pop
adc
mov
scas
pop
jbe
dec
cwde
add
cmps
mov
outs
sub
out
dec
sti
ds
xchg
jno
dec
fisub
xchg
pop
(bad)
cmovae
call
dec
pop
and
pop
mov
scas
inc
test
inc
jbe
cld
stos
xor
mov
or
sub
fwait
stos
retf
xchg
repnz
xor
je
rcr
test
jno
sbb
daa
inc
xor
jne
inc
imul
aaa
add
push
mov
stos
iret
ds
push
and
cmp
xchg
fbld
pop
cmc
addr16
lock
out
retf
rcr
ret
clc
cmps
rol
test
pushw
lahf
jl
data16
and
jno
sar
add
jns
sub
aas
mov
(bad)
mov
int
out
(bad)
push
nop
ret
jmp
(bad)
fcomp
xchg
inc
mov
test
inc
mov
les
pushf
stc
jl
gs
rol
in
std
test
out
cld
(bad)
es
test
cmps
scas
pop
adc
ret
mov
jo
and
mov
(bad)
ins
inc
outs
gs
iret
adc
loop
stc
sbb
add
arpl
adc
enter
mov
sbb
jnp
dec
or
inc
push
mov
xchg
inc
(bad)
jbe
rol
loope
sbb
cmp
cmp
(bad)
ss
mov
cdq
mov
lods
subps
call
lock
call
cmp
fwait
(bad)
loopne
mov
cmps
cmp
and
movs
cmp
dec
popf
push
adc
cmp
push
neg
push
mov
sbb
pusha
mov
add
push
mov
cmp
shr
mov
sar
stos
or
loopne
jbe
jle
jb
xchg
or
sbb
mov
mov
lahf
rcr
cmp
mov
or
loop
stos
es
sub
fs
mov
sub
cmp
pop
xchg
int3
test
jno
push
mov
jg
jmp
fs
push
xchg
into
(bad)
mov
jo
mov
push
xchg
sar
(bad)
je
out
icebp
fstp
jnp
jne
std
mov
jbe
mov
or
or
repnz
xor
sbb
push
cmp
mov
push
rol
or
clc
xor
xchg
outs
rcr
ds
test
jo
jmp
fcom
mov
inc
mov
js
push
sub
pop
and
hlt
adc
mov
call
xor
stc
sbb
push
and
xor
xor
xchg
dec
iret
inc
push
jecxz
xchg
add
es
dec
cmps
nop
xor
lea
push
lahf
imul
out
pop
xlat
clc
cmp
retf
test
xchg
mov
mov
cmp
jp
push
sahf
je
shl
add
sbb
cmp
fcom
pop
inc
addr16
xchg
and
shufps
dec
add
inc
sub
adc
push
ins
jbe
das
mov
push
fs
ret
push
mov
adc
sbb
mov
in
shl
iret
sub
fimul
push
sbb
push
nop
lock
pop
(bad)
fxam
scas
shl
call
sub
inc
sbb
push
mov
or
mov
jp
pop
cmp
adc
sub
jle
or
das
aas
mov
daa
hlt
cs
and
lods
mov
imul
and
jae
mov
xchg
mov
stc
mov
arpl
inc
daa
or
in
das
movs
mov
pushf
mov
dec
mov
adc
(bad)
stos
add
scas
outs
mov
movs
inc
mov
mov
mov
mov
mov
pop
test
out
aad
daa
inc
fisub
pusha
(bad)
mov
fmul
iret
pop
int
popa
pop
cwde
retf
ja
inc
ror
clc
ficomp
and
push
and
pushf
or
adc
repnz
pop
div
push
fiadd
mov
and
pop
in
xor
(bad)
pop
push
dec
retf
add
movs
outs
scas
(bad)
cmc
xor
dec
xchg
push
sbb
mov
pusha
xlat
fwait
popf
add
neg
aad
mov
or
push
repz
xor
int
jmp
test
in
mov
inc
jne
sub
push
cmp
daa
stos
ret
daa
cmp
adc
dec
mov
mov
(bad)
mov
cdq
mov
pop
bound
push
call
mov
inc
mov
clc
sub
ins
or
out
dec
mov
mov
xlat
movs
or
pop
pop
sbb
push
je
mov
jl
jbe
lock
jl
add
cmp
adc
scas
xchg
dec
inc
pop
mov
sub
in
push
sub
add
mov
ds
(bad)
test
retf
adc
pop
xor
sbb
sbb
xchg
and
out
or
xor
sahf
jb
push
mov
fcmove
lahf
add
retf
pop
int
mov
jo
out
and
pop
dec
and
add
jns
jo
jecxz
std
enter
push
js
sahf
wrmsr
enter
jl
int3
fcmovbe
or
xlat
repnz
lock
repnz
lock
add
xchg
imul
sub
mov
fstp
xchg
push
and
jo
dec
cmp
into
sbb
dec
stc
jecxz
add
jnp
add
add
neg
imul
pusha
mov
not
mov
outs
mov
mov
xor
cmp
nop
xor
mov
inc
mul
iret
fidivr
mov
push
call
les
push
xchg
(bad)
jecxz
pop
lahf
or
add
xchg
sbb
(bad)
shl
jecxz
xchg
sti
icebp
icebp
push
(bad)
mov
jmp
dec
sti
push
pop
pop
(bad)
movs
inc
ins
jle
sub
data16
nop
stos
sahf
pop
push
jb
or
mov
dec
dec
hlt
test
idiv
add
(bad)
and
sub
dec
mov
fadd
ja
fiadd
sbb
js
add
pop
xchg
aaa
lea
sub
sub
adc
push
add
movs
xor
mov
out
jbe
jl
sub
retf
mov
loop
sub
fild
stos
jno
lahf
mov
in
cmp
xor
mul
scas
cmps
ror
lds
mov
jg
mov
jmp
stos
fnsave
iret
sahf
frstor
cmp
xchg
inc
cli
or
int
es
ret
cmp
pop
fiadd
sub
(bad)
mov
pop
adc
movs
nop
sub
jmp
gs
dec
out
push
pop
popf
in
sub
ins
call
push
repz
jmp
repnz
ret
fcom
mov
scas
bound
dec
jnp
lods
or
push
xor
push
xchg
scas
scas
data16
fld
mov
popa
dec
psraw
jg
clc
mov
push
dec
sbb
bound
fst
loope
scas
inc
in
dec
adc
call
sahf
push
scas
fisttp
dec
imul
adc
adc
and
inc
fdiv
pop
scas
or
loop
mov
dec
xlat
push
int
call
inc
inc
and
sbb
push
aas
mov
repnz
mov
bound
jbe
jns
std
xor
or
mov
adc
movs
int3
(bad)
sub
jmp
repz
outs
out
mov
aas
add
adc
inc
jg
mov
imul
add
sbb
es
mov
adc
imul
add
mov
pusha
ss
inc
dec
push
aaa
mov
out
cdq
lahf
cmps
test
bound
jg
std
adc
adc
icebp
in
sub
mov
test
dec
es
push
sbb
imul
fstp
stos
mov
adc
xchg
push
pop
sar
mov
aam
loopne
repz
jbe
(bad)
pop
xor
js
push
(bad)
cmp
and
and
pop
xchg
sbb
push
movs
pushf
in
jbe
add
sti
xor
aad
pop
mov
fs
push
mov
(bad)
(bad)
jecxz
xchg
add
adc
xor
sahf
jle
stc
scas
or
pop
push
inc
cdq
dec
add
lahf
retf
(bad)
xor
pop
into
add
in
mov
mov
jmp
lock
jmp
lods
cmp
sti
push
lahf
mov
push
or
fstp
push
sub
xor
test
je
call
push
pop
cmp
mov
push
xor
ins
mov
movs
push
mov
in
call
pusha
test
cmp
into
inc
add
mov
xor
cmp
sub
pop
pop
xchg
rol
pop
sbb
push
mov
push
scas
jecxz
test
jmp
pop
cmc
fild
jecxz
jnp
sbb
lock
jmp
aam
retf
inc
(bad)
shr
aaa
inc
movs
add
lock
xor
stos
xchg
adc
ja
and
fisttp
rcl
sub
mov
xchg
shr
push
pop
adc
(bad)
js
jo
dec
push
inc
lock
cmp
cmp
retf
gs
iret
sbb
xchg
nop
imul
sub
stc
aad
push
imul
or
arpl
inc
scas
in
and
sahf
sub
test
or
dec
adc
mov
inc
stos
jl
pop
arpl
xchg
cmp
loope
daa
pop
and
mov
shl
das
fwait
jle
pop
aam
adc
push
stos
std
mov
aas
cld
inc
xor
mov
xor
mov
mov
fs
test
gs
(bad)
in
add
into
sub
pop
jmp
sub
add
push
xchg
in
(bad)
cmps
ins
hlt
jne
inc
lock
jp
or
imul
mov
idiv
sar
ret
out
add
ins
jmp
rcl
popf
mov
sub
add
leave
sub
retf
aam
rcl
or
dec
ja
lea
je
test
mov
cld
pop
cld
cs
iret
cmp
xor
out
lods
and
pop
fwait
inc
outs
jne
enter
ja
out
adc
int
cmp
sub
gs
inc
adc
add
or
pop
iret
das
sbb
pop
mov
pop
popa
repnz
sbb
xchg
out
aaa
repz
pop
mov
xor
xchg
cld
retf
inc
arpl
sbb
push
lods
xchg
pop
adc
add
jb
sbb
cs
loopne
mov
push
test
fimul
imul
cdq
retf
push
sub
outs
sbb
cld
pop
jge
inc
inc
aas
jl
iret
aaa
push
push
and
mov
sti
sbb
dec
add
test
add
dec
es
xchg
mov
push
repnz
push
mov
shr
push
jl
pop
ja
or
push
imul
aam
xor
outs
test
popf
pop
hlt
and
inc
cmp
sbb
add
dec
push
adc
sub
or
mov
jb
(bad)
pop
sub
outs
and
mov
pop
pop
mov
mov
test
idiv
mov
dec
xor
scas
cmp
jno
mov
test
arpl
mov
adc
inc
push
pop
add
fimul
dec
ja
add
or
add
repz
mov
call
pop
dec
mov
fisubr
aaa
leave
push
dec
in
mov
add
mov
out
aaa
or
pop
movs
inc
(bad)
and
mov
sahf
pop
loopne
cmp
outs
sar
sub
je
mov
jne
call
enter
fwait
shl
pop
not
inc
or
xchg
jbe
es
dec
in
mov
hlt
xor
add
inc
shl
sub
xchg
and
cmps
mov
daa
data16
cmp
push
sub
xlat
mov
dec
jnp
fs
lods
pop
mov
jl
xor
jge
mov
ret
mov
and
add
out
add
push
xor
pop
jae
push
sbb
mov
stc
jb
sub
movhps
adc
xchg
ror
push
in
inc
std
(bad)
mov
fadd
fisttp
les
mov
lea
fimul
mov
ss
jne
inc
or
dec
pop
push
fmul
mov
int
cmp
xlat
jae
push
jno
lock
push
xchg
pop
and
gs
aad
test
arpl
and
in
div
sub
scas
dec
mov
adc
mov
fild
push
and
test
push
stos
dec
mov
jnp
xchg
dec
shl
cmp
or
fs
inc
cld
jno
ins
mov
in
sbb
cld
pop
scas
adc
in
pushf
add
xlat
in
lods
adc
into
add
jmp
retf
lahf
sbb
aad
jb
aas
push
mov
cld
popa
std
jb
shl
cli
in
mov
test
or
in
retf
inc
or
in
push
dec
or
movs
lahf
inc
and
pop
jmp
mov
mov
sub
retf
jbe
mov
mov
cdq
sub
xor
jecxz
mov
mov
add
enter
lock
cmp
fwait
in
into
loopne
ja
jecxz
mov
les
neg
cmp
sbb
movs
popf
int
mov
out
out
fadd
adc
xlat
pop
cs
dec
xchg
adc
xchg
daa
popf
mov
imul
fwait
mov
xchg
dec
stos
cli
call
jo
push
adc
sbb
shl
fs
add
(bad)
cmp
mov
pop
sub
pop
test
sbb
push
ins
xor
jo
dec
jecxz
sbb
dec
mov
mov
xchg
jmp
jno
mov
add
mov
jmp
xor
sahf
mov
inc
jmp
ficomp
div
mov
adc
sbb
jecxz
push
dec
ins
rcr
mov
mov
or
(bad)
enter
lds
xchg
mov
dec
pop
mov
jmp
xlat
push
dec
aaa
and
jbe
test
outs
mov
cmps
mov
rcl
cli
and
imul
jmp
sbb
push
jnp
aas
mov
outs
int
jae
push
popa
jge
mov
sar
sub
inc
sbb
lahf
dec
lock
or
or
in
movs
mov
fisttp
mul
jmp
or
outs
push
into
scas
mov
sti
mov
fcomp
ds
inc
retf
gs
movs
pop
push
imul
faddp
cmp
icebp
in
jns
shl
cmp
enter
out
jge
loopne
inc
outs
clc
adc
push
inc
adc
icebp
jecxz
and
je
cld
popa
mov
jns
outs
dec
mov
mov
call
outs
sub
push
lods
dec
cmp
add
(bad)
fisttp
lahf
jbe
pop
dec
fbstp
cmp
ja
clc
movs
xor
cmps
test
ja
jo
fmul
test
mov
hlt
pop
push
sub
bound
aam
nop
sar
popf
cwde
test
pop
js
mov
out
inc
cmps
gs
and
xchg
mov
retf
sbb
mov
jne
fcmovnbe
add
cmp
inc
fdivr
xchg
adc
loopne
retf
ret
sub
push
xor
aad
enter
mov
mov
jo
ja
sar
push
cmp
mov
mov
(bad)
jno
fsub
(bad)
cmp
push
aad
xor
cvtpi2ps
cmp
test
cmp
add
sbb
push
push
out
retf
retf
mov
hlt
adc
rol
jns
or
shl
adc
repnz
pop
movs
push
mov
and
je
call
(bad)
ins
addr16
mov
in
jge
fisubr
lds
sbb
xchg
fisttp
ss
cmps
cmc
sbb
cli
mov
mov
mov
adc
xchg
add
add
cmp
gs
sahf
mov
fsubr
inc
adc
cmp
iret
mov
push
gs
fild
test
lahf
neg
or
mov
cmp
inc
in
xchg
mov
xchg
dec
das
test
sub
add
cmovnp
pop
inc
and
push
out
lahf
add
jl
mov
mov
mov
(bad)
movs
mov
jno
pop
mov
aad
in
push
popa
inc
dec
sar
mov
push
cs
fdivr
jmp
sbb
mov
cmp
sahf
and
jl
pop
mov
das
fsubrp
jle
(bad)
ror
retf
das
outs
cli
dec
ins
pop
fisttp
mov
mov
das
adc
test
pop
pushf
jae
in
data16
inc
mov
xchg
data16
call
cmp
pusha
pushf
pop
jmp
mov
fistp
pop
lahf
add
mov
(bad)
int
jno
lahf
out
xchg
imul
dec
sti
lea
add
pop
out
push
aaa
leave
mov
aad
pop
mov
fimul
sbb
and
mov
int
dec
jo
inc
sbb
push
cmc
xchg
mov
addr16
mov
ror
dec
iret
jbe
xchg
cld
and
dec
xchg
xor
inc
loope
pop
jne
ss
aad
mov
cmp
jo
and
rcl
daa
arpl
and
and
push
xor
movs
lds
xchg
sub
push
in
mov
mov
cld
pop
nop
es
imul
repz
lods
(bad)
xor
int
cs
pop
add
jo
adc
adc
sar
mov
push
leave
std
shl
les
xchg
imul
dec
rcr
push
pop
shr
xchg
cs
hlt
cmps
in
fidiv
shl
popf
mov
adc
and
mov
inc
cmp
xor
out
addr16
lea
les
mov
repnz
nop
mov
stos
add
imul
and
pop
enter
xor
adc
clc
out
(bad)
loopne
and
(bad)
movs
adc
mov
nop
aas
test
in
mov
lods
retf
ds
inc
ss
xor
jo
outs
and
pop
mov
das
daa
push
sbb
pop
scas
push
jo
scas
xchg
lock
pusha
adc
pop
dec
add
and
retf
and
nop
call
and
retf
nop
imul
inc
adc
add
or
jmp
popf
mov
cmp
es
inc
dec
(bad)
int3
add
lods
xlat
sub
mov
mov
add
xor
movs
mov
mov
imul
or
ins
xor
sahf
dec
cmp
and
mov
dec
(bad)
dec
mov
(bad)
push
dec
movs
popf
fcmovnb
cmp
jae
imul
xlat
test
loope
ss
lods
fcmovnu
sbb
cmps
test
aam
jge
mov
add
out
fs
add
and
cmp
xchg
test
inc
sub
xor
or
stc
jg
pop
mov
pop
sub
and
out
cmp
sahf
or
inc
pop
mov
cmp
les
sbb
lods
dec
or
push
(bad)
fild
and
push
imul
mov
hlt
inc
push
xchg
dec
arpl
jmp
mov
or
clc
ins
xchg
popa
leave
fild
callw
(bad)
adc
popa
inc
inc
into
jle
cmp
mov
cld
push
mov
or
sbb
fnstenv
hlt
vmovntps
add
cmp
aas
mov
sbb
imul
into
mov
push
(bad)
adc
stos
pop
push
mov
mov
movs
pop
pop
mov
push
out
in
mov
xor
(bad)
adc
mov
push
lahf
das
cmp
cmps
jbe
and
xor
shl
jnp
lods
jg
outs
jg
les
pop
add
aad
add
ficomp
mov
movs
lds
pop
popf
sti
das
pop
pop
xchg
je
lahf
ret
mov
movs
mov
(bad)
rcl
adc
inc
jnp
dec
mov
pop
in
sbb
sub
aas
cmp
call
pop
jb
shl
sub
lds
fldcw
bound
loop
mov
rcl
ds
jo
(bad)
and
add
xor
or
imul
shl
xor
mov
cmc
cmps
cmp
jge
lods
lods
or
ins
nop
xchg
fiadd
repz
sub
in
jb
inc
and
push
adc
adc
jecxz
not
sbb
xchg
xchg
aas
jl
push
inc
jmp
das
std
(bad)
push
dec
retf
cmp
dec
add
int
mov
pop
mov
mov
mov
mov
(bad)
sub
jmp
dec
xchg
or
lahf
mov
jne
jmp
mov
test
push
mov
bound
sub
daa
pop
jno
inc
sub
pop
sub
cmp
mov
xor
ins
mov
xor
test
sbb
push
push
add
push
ja
stos
jmp
movs
lds
add
mov
fsub
retf
scas
mov
ror
movs
sub
xchg
mov
mov
dec
mov
mov
adc
pop
(bad)
sub
sub
call
push
pop
out
jmp
add
mov
fist
scas
lea
mov
mov
les
dec
hlt
in
and
out
or
out
jo
dec
mov
sbb
sub
stos
inc
or
ret
push
inc
jmp
mov
mov
add
sahf
adc
jns
xchg
ja
add
call
fsubr
push
leave
cs
mov
or
sub
xor
jo
xchg
inc
sahf
push
ins
xor
and
scas
pop
stos
xlat
push
clc
mov
dec
mov
push
mov
mov
and
mov
mov
out
hlt
popf
mov
call
leave
es
jge
stc
movs
mov
fcmovnb
int
mov
fadd
test
sbb
dec
rcr
and
int
mov
jg
add
push
nop
lods
les
inc
je
mov
lds
imul
(bad)
add
sar
mov
(bad)
mov
xor
adc
push
xchg
xor
inc
jnp
jg
xor
adc
shr
and
aam
pop
mov
mov
mov
cmp
mov
sbb
pop
ins
xor
xchg
out
mov
dec
lea
cmp
retf
or
ss
xchg
hlt
or
mov
cmc
xor
das
test
push
mov
test
loop
arpl
pop
sbb
cmp
imul
popa
lods
(bad)
(bad)
add
or
xchg
push
jno
mov
aas
(bad)
sub
adc
imul
dec
(bad)
enter
test
outs
push
mov
call
push
hlt
retf
lea
imul
add
hlt
pop
jb
shr
mov
lods
enter
inc
and
sub
pop
pop
jg
and
call
outs
stos
leave
into
jle
dec
aad
(bad)
jmp
(bad)
in
shl
aad
mov
es
lods
cmp
xchg
dec
jo
inc
xor
jle
popa
or
jnp
inc
sbb
pop
mov
fwait
inc
shr
ret
imul
sub
(bad)
cmps
fwait
in
mov
in
movs
ret
mov
es
mov
add
addr16
aad
js
shl
xor
pop
bound
push
sbb
leave
sbb
fstp
lea
inc
lds
add
movs
mov
jbe
scas
retf
inc
jmp
and
pop
push
jg
repz
or
pop
mov
arpl
jne
and
mov
or
out
cld
inc
and
aad
mov
add
mov
int
push
out
pop
(bad)
jmp
push
add
adc
imul
dec
pop
or
nop
cmp
fidivr
sbb
push
and
clc
pop
push
imul
inc
mov
push
outs
ret
popf
aaa
jp
xchg
sbb
sbb
aam
jmp
pop
mov
and
leave
dec
js
cmp
inc
dec
(bad)
mov
sub
adc
repz
add
mov
sub
jp
fstp
mov
sar
fst
std
out
xacquire
ja
fstp
sbb
icebp
out
add
jnp
adc
lahf
xor
and
jmp
mov
lods
push
jp
cdq
mov
or
ins
adc
retf
mov
movs
mov
mov
rcpps
rcr
mov
jle
xor
mov
inc
aad
or
adc
imul
jae
inc
mov
mov
pop
fidivr
sbb
sub
out
sub
xchg
sbb
fild
xchg
into
int
sbb
shl
inc
repz
sbb
mov
or
imul
xor
lea
ja
inc
cmp
mov
cdq
jle
xor
xchg
and
test
xchg
inc
test
or
loope
mov
mov
or
sahf
and
aas
and
js
cwde
neg
dec
and
push
or
gs
xchg
xor
test
test
pop
mov
and
arpl
repnz
aaa
leave
add
push
mov
jno
stc
enter
jmp
sub
pop
or
cmp
and
neg
mov
xchg
nop
cs
jp
shl
add
pop
dec
push
addr16
retf
cmp
mov
stos
out
dec
out
xor
xor
jecxz
rcr
bound
movs
mov
ja
push
and
push
adc
jne
fisub
(bad)
ror
sub
xchg
mov
loopne
fdivr
ja
xlat
xchg
jl
mov
cmc
pop
cmc
loope
pusha
fistp
daa
cmp
inc
or
repz
in
retf
xchg
add
pop
dec
arpl
retf
and
icebp
lock
mov
lea
jle
std
xor
sbb
imul
add
or
nop
je
push
push
arpl
pop
in
mov
int3
scas
sub
data16
dec
push
xchg
inc
mov
jl
dec
les
in
fmul
cmp
xchg
sub
jmp
popf
dec
sbb
outs
std
mov
push
pop
jns
mov
std
and
outs
hlt
and
in
or
add
cli
outs
xor
fld
push
pop
pop
dec
into
cmp
jp
pop
add
icebp
mov
sahf
pop
pop
cmp
test
add
icebp
push
add
shl
mov
mov
pop
imul
shl
push
pop
loope
popf
inc
xchg
int
push
in
jmp
push
dec
xchg
adc
cdq
and
shr
add
out
cld
(bad)
dec
out
cmp
repz
mov
adc
xor
clc
jl
inc
push
call
lods
xchg
mov
push
jbe
clc
pushf
or
push
fidiv
js
je
daa
ret
push
push
unpcklps
nop
popa
xor
xchg
clc
cmp
std
ins
cdq
stos
xchg
aam
stc
(bad)
retf
aaa
cwde
jp
add
cmp
or
shl
and
in
mov
fist
cmc
fsubrp
xchg
in
inc
inc
aas
ins
fwait
retf
lds
pop
adc
aad
sub
mov
sbb
pop
ss
fwait
pop
mov
xchg
icebp
mov
jecxz
test
sti
call
or
arpl
inc
fistp
add
jb
or
movs
mov
mov
test
mov
adc
and
cld
dec
arpl
sub
push
or
adc
and
mov
adc
out
imul
scas
add
(bad)
adc
cmp
mov
dec
xchg
mov
shl
lahf
fldcw
mov
fsub
push
ja
rcr
sub
out
shl
pop
stc
mov
push
jb
in
push
gs
repz
mov
daa
out
int3
add
imul
push
shl
hlt
out
cmps
mov
jmp
jmp
or
mov
inc
add
xor
enter
sbb
pop
add
xor
sbb
fsubr
adc
pop
(bad)
movs
ins
dec
jp
adc
das
gs
mov
mov
jmp
jl
dec
jns
dec
add
inc
inc
and
pop
cmp
aad
stos
dec
(bad)
int3
shl
sahf
cdq
std
push
xchg
mov
(bad)
mov
sahf
sbb
sub
outs
dec
arpl
test
mov
(bad)
xchg
fsubrp
pop
add
test
pop
ret
jae
frstor
fnstcw
inc
enter
(bad)
lods
imul
aad
push
xchg
cmp
sbb
arpl
and
inc
mov
fsub
dec
add
add
jg
daa
test
xchg
pop
cmps
xor
dec
pop
cmps
mov
(bad)
ds
push
ror
adc
sub
sahf
ret
scas
stc
and
std
movs
cmc
and
jnp
dec
xlat
xor
fstp
adc
push
ds
jns
pop
enter
mov
sti
xor
push
int
(bad)
loop
in
lea
and
loope
loop
sub
pushf
pop
adc
pop
inc
ss
(bad)
(bad)
pop
call
push
cld
cwde
stos
mov
or
inc
out
jo
arpl
push
inc
clc
mov
adc
cli
sahf
dec
push
cmps
leave
push
icebp
jns
out
sbb
(bad)
mov
add
shr
lock
push
sub
not
push
pop
jnp
in
add
inc
out
pop
xor
push
(bad)
ins
mov
add
mov
enter
clc
mov
into
test
mov
pushf
loope
mov
add
mov
add
jne
call
push
mov
movs
inc
xchg
pop
jns
lahf
jnp
imul
and
mov
inc
inc
cmc
or
call
es
repnz
jle
cld
das
dec
xchg
add
imul
lahf
add
fisttp
xchg
cdq
inc
ror
dec
sahf
add
lock
jmp
stos
imul
dec
fsubp
or
call
mov
fcom
sbb
pop
or
sub
jnp
inc
mov
dec
mov
stos
popf
add
sub
stos
fistp
in
mov
cmovnp
ds
nop
(bad)
adc
mov
mov
dec
mov
push
data16
lods
sbb
or
add
cld
sti
jnp
inc
outs
fdivr
mov
sub
fwait
and
inc
jle
jb
retf
test
aaa
mov
in
test
mov
aaa
mov
movs
ficomp
fyl2x
cmp
jns
inc
jo
imul
inc
xor
add
rcr
push
adc
mov
fwait
aad
adc
or
inc
enter
test
clc
rol
(bad)
xchg
sbb
jnp
cmc
clc
mov
retf
add
sub
inc
jle
jno
aaa
xlat
push
cmc
(bad)
stc
repz
fs
mov
pop
dec
adc
jge
xor
inc
out
push
les
mov
fldcw
lds
add
ins
inc
mov
(bad)
jle
leave
repz
jno
popa
push
jp
sbb
mov
aam
imul
push
mov
cdq
jmp
ss
push
inc
mov
lods
sbb
sub
push
adc
mov
xor
jge
lahf
into
and
popf
mov
cmp
xor
ja
mov
xchg
pop
xchg
add
dec
pop
dec
into
(bad)
imul
rcr
popf
mov
pusha
jae
and
mov
xor
inc
and
jo
sub
pop
and
xor
or
test
jno
sub
or
sti
in
xor
push
xchg
das
push
ret
(bad)
mov
jp
inc
jne
test
das
cs
pushf
xchg
stos
inc
js
iret
imul
xor
jo
ins
pop
cli
push
adc
xchg
stos
cwde
push
add
mov
adc
xor
fsubp
sbb
mov
or
mov
and
pop
push
push
pusha
xchg
aad
pop
jmp
and
(bad)
test
mov
jb
add
sbb
mov
cdq
xchg
push
movs
outs
jne
adc
(bad)
retf
shr
and
std
test
fist
mov
std
int
dec
add
or
mov
cmc
xlat
push
lods
cli
repnz
jmp
les
stos
mov
popf
cmp
or
test
push
pop
gs
rcl
or
add
inc
shl
inc
mov
xchg
xchg
mov
daa
jbe
shr
jmp
mov
inc
call
mov
stos
loope
fisttp
or
xchg
mov
fcomp
xchg
adc
jo
adc
inc
add
mov
call
fs
jecxz
push
xchg
cmps
jecxz
pusha
in
push
hlt
add
cmp
lock
add
add
jg
cdq
cmp
test
arpl
test
cmp
rcl
nop
sbb
jo
xchg
sbb
push
mov
test
mov
inc
push
or
inc
ret
ins
cli
and
stos
push
sub
call
or
sbb
fidivr
cwde
outs
mov
(bad)
lock
mov
lahf
imul
scas
pop
push
scas
push
sti
ins
inc
jmp
adc
call
sar
cmp
jo
js
div
clc
xor
jne
mov
in
mov
jne
cmp
(bad)
and
and
mov
mov
xchg
dec
mov
inc
sahf
shl
cmp
add
or
aaa
ret
mov
idiv
cmp
jmp
popf
jnp
xor
push
cdq
fwait
and
push
(bad)
scas
jl
mov
inc
aaa
scas
xor
jl
xchg
ror
add
ins
mov
cdq
fldcw
lods
inc
loopne
sub
imul
int
dec
(bad)
ror
and
push
sub
dec
mov
and
fucom
sub
cmp
fimul
pop
daa
movs
mov
pop
std
(bad)
ficomp
sub
out
inc
add
repnz
dec
mov
out
(bad)
cmps
popa
adc
inc
dec
into
loope
into
inc
pop
imul
add
sbb
push
test
jbe
ret
dec
cmp
fidiv
pop
push
or
scas
cmp
mov
or
test
out
pop
(bad)
ret
not
je
push
scas
in
popa
mov
loopne
shl
in
inc
sbb
aaa
test
add
mov
xlat
cmp
lea
sub
movs
loopne
jmp
out
mov
sar
pop
inc
(bad)
test
ror
mov
addr16
jb
scas
xchg
cmp
aas
lea
ds
in
and
icebp
mov
mov
add
enter
xlat
sti
adc
aas
pushf
xchg
movs
jo
jmp
inc
lock
dec
add
add
out
out
cli
loop
call
movs
xor
xchg
sbb
pop
out
or
dec
jae
scas
sub
fsub
push
inc
sub
shl
(bad)
repnz
dec
sar
mov
iret
popf
push
jnp
mov
jg
inc
jg
setl
cmp
mov
(bad)
idiv
in
cwde
add
addr16
nop
pop
cwde
nop
or
push
inc
adc
adc
mul
mov
fild
jnp
ins
test
mov
mov
jge
sub
call
(bad)
aad
fimul
int3
dec
push
cmp
dec
dec
stos
mov
pushf
xchg
xchg
cdq
movs
outs
dec
repz
(bad)
pusha
outs
scas
and
sti
jl
(bad)
pop
loope
sbb
add
mov
push
mov
inc
ret
add
cmp
enter
dec
cmps
lahf
mov
jl
adc
and
xchg
push
dec
cmp
daa
stc
call
ins
dec
push
jg
jge
xchg
jo
jbe
aad
sar
out
(bad)
enter
mov
add
cmp
cmp
rcl
dec
dec
jns
adc
mov
clc
into
shl
iret
scas
jns
cwde
sbb
cmp
idiv
xchg
test
jmp
mov
inc
xor
or
out
cmp
xor
pop
xchg
fmul
enter
xchg
or
xor
jp
adc
cdq
fdiv
ret
push
imul
ss
jo
add
jb
ins
(bad)
fsubr
jle
ja
xchg
dec
mov
xor
cmp
inc
jl
or
cdq
int3
loope
lea
xchg
jmp
test
loop
(bad)
repz
sbb
cli
xor
fstp
sub
mov
pop
repz
jb
adc
or
sbb
enter
mov
rol
repnz
or
(bad)
hlt
int
out
inc
push
xchg
xor
sbb
pop
repz
xchg
and
aad
add
mov
rol
sahf
mov
ror
add
dec
out
xlat
adc
outs
ret
in
cmps
mov
(bad)
sbb
or
push
mov
add
mov
loopne
add
jo
dec
aad
jg
push
mov
je
jae
loopne
sahf
call
pop
xor
xchg
sti
movs
popf
in
int
inc
mov
sub
cmp
and
lock
enter
gs
or
mov
push
mov
retf
std
and
adc
mov
in
add
scas
(bad)
xchg
(bad)
(bad)
mov
cdq
inc
sbb
inc
mov
mov
(bad)
out
xlat
cmc
sub
out
push
xor
dec
sbb
cli
jecxz
and
mov
jo
pushf
repz
adc
aaa
and
sbb
enter
repz
cmp
iret
jl
aas
(bad)
jl
fucomip
les
dec
std
cmp
cmp
retf
sbb
jecxz
(bad)
jnp
jno
inc
xchg
cmp
cwde
or
push
idiv
jns
xor
popa
xor
dec
iret
movs
stos
(bad)
sub
hlt
jmp
pop
adc
icebp
xchg
sbb
mov
xor
out
mov
cmps
cmp
xchg
xor
jnp
xchg
adc
pop
mov
cld
popa
jg
jns
out
icebp
lock
ficomp
add
pop
mov
loopne
mov
cmp
jmp
or
out
(bad)
aad
jge
xor
retf
(bad)
cwde
mov
fisub
sub
ins
jl
aas
inc
outs
mov
sub
enter
popa
into
fbld
neg
add
aaa
mov
test
fild
inc
test
cld
inc
arpl
xchg
test
cli
xor
xchg
push
stos
stos
ret
into
pop
(bad)
cmp
cmovle
push
cmp
jp
lds
in
lock
mov
inc
sub
sti
sahf
xor
fcomp
xchg
ror
add
xor
mov
sbb
shl
adc
add
(bad)
fisub
adc
and
inc
sub
dec
jns
sub
cmp
mov
cdq
inc
xchg
mov
mov
mov
sar
and
xor
stos
mov
out
cwde
sysenter
aam
je
jne
ss
xor
push
cmps
ret
sub
fmulp
mov
js
or
dec
sar
mov
mov
std
ins
push
sbb
add
cmc
stc
out
out
fnstsw
ja
mov
lods
adc
lods
call
dec
mov
in
popa
xor
pop
enter
lahf
adc
xchg
mov
push
rcr
stos
lock
in
or
mov
ja
shl
fwait
test
push
loope
pushf
add
mov
add
push
push
mov
sbb
mov
aas
mov
push
add
stc
dec
test
mov
out
dec
aas
cwde
cwde
ret
dec
push
sub
xchg
repz
xor
sbb
inc
in
mov
ret
cmp
test
mov
adc
mov
call
popf
jno
xor
clc
fs
xchg
into
adc
ja
jae
shl
imul
dec
push
(bad)
cmp
outs
jle
int3
imul
push
out
cmps
sbb
or
in
push
pop
mov
fist
push
pop
xchg
adc
gs
fcom
sub
dec
mov
pop
enter
pop
mov
sbb
push
sub
sub
popf
mov
push
sbb
and
cmp
(bad)
out
clc
ins
retf
cmps
test
or
mov
(bad)
fsubr
stos
jne
jns
push
call
cmc
test
inc
lods
xor
add
lds
xchg
ins
out
jmp
xor
mov
jb
icebp
sbb
sti
fiadd
out
pop
nop
out
fdivr
sbb
(bad)
mov
adc
jmp
dec
jge
push
fadd
jmp
(bad)
(bad)
push
test
push
or
ds
xor
dec
mov
cmp
cmps
or
loope
xor
stos
jnp
(bad)
mov
inc
stos
icebp
xchg
inc
and
xchg
mov
jg
mov
sti
std
popa
jp
xor
leave
rcl
inc
push
xchg
sbb
out
cmc
loopne
push
cmp
mov
sub
dec
imul
adc
sbb
xor
mov
mov
in
sbb
adc
dec
shl
push
vpabsb
or
sbb
push
sub
not
mov
scas
adc
sar
jg
jl
pop
mov
mov
mov
repz
ds
pop
mov
push
xor
mov
xor
in
jne
(bad)
dec
push
test
sbb
inc
je
sub
enter
jl
jbe
push
adc
sub
sub
in
inc
in
pop
mov
dec
dec
clc
(bad)
pusha
mov
jbe
js
jne
pop
sub
jmp
mov
or
push
outs
xchg
lea
stos
fst
ja
dec
xchg
sub
int
and
sti
inc
test
loope
out
mov
mov
loope
movs
or
push
xor
repnz
icebp
loop
shl
mov
fld
imul
movs
mov
cmp
out
fcomp
cs
addr16
jl
mov
scas
repz
jno
out
xor
xor
jb
adc
or
pop
(bad)
jge
fdivp
and
aad
mov
cmp
mov
cmp
cmps
stc
cmp
(bad)
mov
jge
fisubr
in
loope
push
cmps
stos
fsubr
dec
(bad)
pop
adc
lea
(bad)
add
hlt
out
pop
ins
sub
cmp
das
fdivr
dec
mov
mov
cdq
sub
push
test
rol
mov
add
(bad)
loopne
jb
in
in
jne
mov
movs
imul
xchg
mov
xor
je
jnp
(bad)
sbb
jns
call
sbb
in
packssdw
xor
shl
aam
aas
push
das
sub
jb
out
jne
into
dec
out
cld
and
mov
or
sub
adc
fwait
and
movs
pop
shr
xor
and
jne
add
inc
and
mov
ret
clc
cmp
jp
popa
and
shr
inc
call
adc
add
xchg
into
cmp
aad
dec
aam
lea
mov
dec
push
lods
(bad)
cdq
dec
jns
jmp
call
out
call
mov
(bad)
mov
lods
std
not
mov
sub
outs
test
xchg
jge
sub
repz
mov
push
push
ror
add
loopne
(bad)
rcr
retf
jnp
retf
xchg
leave
push
mov
mov
add
aad
jp
fwait
mov
mov
scas
jg
rcl
xchg
imul
aas
imul
or
or
in
pop
push
xchg
cli
es
movs
pop
adc
push
pop
pop
xor
and
sbb
xchg
jg
loop
cmp
adc
push
pusha
pop
mov
in
ss
mov
mov
cmp
push
mul
mov
mov
cdq
pop
and
retf
cld
sbb
repnz
or
inc
cmp
adc
xor
in
int
push
jo
mov
data16
inc
or
or
xchg
or
dec
(bad)
or
inc
(bad)
fwait
jl
pop
inc
pop
inc
aas
inc
shr
jns
(bad)
(bad)
ss
imul
and
std
scas
les
cmc
loope
lds
fs
cdq
jp
mov
push
imul
into
in
pop
fcomp
xchg
xor
add
mov
xlat
inc
mov
add
cli
aam
mov
popf
cmp
xor
test
(bad)
stc
xchg
addr16
add
addr16
mov
(bad)
scas
or
out
inc
mov
sahf
rcr
sub
dec
ins
push
ret
push
mov
retf
retf
push
aam
mov
sub
rol
mov
jmp
cli
ret
mov
cmc
jg
pop
movs
mov
cmp
jne
jns
iret
mov
jb
and
shl
outs
xor
shr
stos
add
fcmovne
loopne
ror
test
not
pusha
dec
js
dec
fwait
nop
adc
outs
repnz
stos
add
test
xchg
ins
mov
das
cwde
outs
xchg
sub
cmc
add
test
fcom
push
sar
clc
ret
lods
movs
ja
or
aad
sub
imul
sti
nop
test
mov
out
xchg
push
mov
je
or
cmp
cs
ds
es
in
outs
leave
push
rcr
in
mov
sbb
push
and
push
add
add
out
sub
inc
mov
adc
fadd
test
das
xchg
lahf
add
mov
xlat
and
or
or
into
mov
call
push
mov
and
(bad)
xchg
rol
push
jp
dec
enter
das
or
adc
rcr
stc
cmp
fistp
inc
dec
clts
sub
cld
and
xor
pop
mov
mov
mov
sbb
lock
mov
pop
inc
pop
cmp
rol
arpl
push
vmovd
movs
and
jecxz
pop
push
push
or
(bad)
pop
push
stos
push
sbb
cli
pop
inc
aad
fimul
mov
lds
clc
mov
mov
xchg
ja
mov
push
cmps
push
loopne
lock
adc
sahf
idiv
pop
mov
jl
retf
fs
mov
sbb
cmp
loope
jle
mov
sahf
ret
dec
sbb
gs
sub
pop
mov
push
jecxz
xchg
sbb
inc
or
jo
ja
dec
sahf
test
test
xor
stos
ret
outs
inc
imul
call
pop
bound
xchg
pusha
out
add
xchg
or
xchg
mov
pop
scas
movs
cli
addr16
push
movs
jmp
push
(bad)
enter
(bad)
xor
mov
push
sbb
or
pop
xchg
or
sub
push
sahf
cmp
mov
sbb
jl
stos
addr16
inc
ret
pop
jl
idiv
and
sub
loop
call
xchg
push
fwait
mov
jg
(bad)
call
sub
dec
push
mov
in
mov
in
aad
shl
fdiv
mov
test
mov
xor
lahf
(bad)
retf
adc
jmp
in
stos
repnz
mov
aad
(bad)
fild
mov
jnp
shl
pop
xor
xchg
push
out
cdq
dec
fnstsw
mov
clc
sbb
xchg
dec
aaa
data16
call
mov
clc
push
push
pop
lds
cmp
fdivr
inc
cld
rol
repnz
int
mov
cmp
xchg
lock
jb
inc
loop
int3
dec
leave
push
clc
mov
aaa
jl
leave
lahf
cmc
lds
sti
cmps
rcr
add
jp
and
int3
mov
sbb
sub
add
out
in
test
clc
addr16
or
hlt
arpl
xchg
or
xor
and
scas
fidiv
mov
adc
sar
lahf
or
enter
stos
xchg
loop
dec
loop
aaa
icebp
jmp
mov
push
int
or
push
pop
pop
in
push
lods
cmps
mov
xchg
cmp
loopne
ins
adc
test
inc
outs
pop
cwde
push
es
jae
stos
lock
inc
mov
out
and
daa
call
(bad)
mov
cmp
lods
cdq
(bad)
inc
sbb
shl
adc
xchg
mov
pop
cmp
jne
mov
call
cmps
adc
icebp
jbe
mov
inc
xlat
arpl
sbb
mov
xchg
popa
pop
sub
add
in
std
mov
push
in
in
ins
inc
cmp
xchg
pusha
std
push
jmp
or
mov
(bad)
and
and
je
and
hlt
arpl
inc
inc
outs
out
aam
test
and
xor
imul
cmp
dec
adc
jle
cmp
adc
jp
fsub
ret
scas
pop
mov
aaa
test
fisttp
mov
fist
sahf
sbb
push
jae
aam
cmc
(bad)
cli
cmp
xor
push
sub
ror
(bad)
not
test
sbb
jnp
jne
mov
pop
sti
(bad)
fld
or
test
xchg
mov
sub
jle
mov
jl
les
out
aaa
mov
xchg
daa
add
je
mov
repz
repnz
push
in
in
jle
mov
xor
ins
stos
pop
pmuludq
test
in
shl
add
addr16
and
out
cmp
or
in
sub
int
xor
std
arpl
and
xchg
call
xor
jb
cwde
push
outs
mov
sub
sbb
mov
xor
xor
jl
mov
fcom
push
inc
sbb
xlat
int
ret
jmp
cmps
pop
pushw
inc
fadd
hlt
push
dec
sbb
out
fwait
loope
je
mov
daa
mov
ss
and
or
or
or
cld
cmc
das
cmp
mov
mov
adc
push
sbb
jo
shl
in
(bad)
leave
and
and
leave
(bad)
loop
dec
loop
xor
in
cli
int3
jmp
cwde
and
sbb
pop
pop
test
outs
jmp
ja
sbb
in
test
out
(bad)
cmp
add
sub
push
xor
cmp
mov
xchg
std
sbb
jmp
pop
jmp
mov
xchg
in
outs
fs
cwde
vsubss
leave
imul
inc
aas
jmp
pop
test
or
nop
inc
mov
ja
jno
lods
int3
cmp
xchg
mov
or
fdivrp
push
stos
nop
lock
outs
fsub
push
sar
outs
loop
mov
fist
pop
jg
cwde
test
lock
mov
popf
(bad)
push
in
add
cmp
les
(bad)
test
in
loop
mov
mov
daa
test
shr
add
(bad)
clc
rcl
push
sbb
sti
pop
and
cmp
cmp
lods
fcom
in
cdq
push
inc
push
dec
dec
fbld
pop
into
and
inc
inc
int3
xor
or
xchg
fisub
in
push
mov
jne
mov
jmp
cmps
jp
lods
and
call
or
ret
pop
sti
add
repnz
add
push
addr16
or
mov
jmp
push
mov
or
pop
xchg
xor
lahf
mov
test
mov
push
jg
and
mov
cmp
movs
loop
fs
jecxz
inc
or
leave
adc
les
in
bound
stos
dec
idiv
retf
nop
sub
lahf
sti
pop
retf
in
or
xchg
out
fidiv
jae
retf
daa
and
mov
mov
add
push
aaa
(bad)
sbb
add
int3
add
(bad)
std
xchg
jnp
push
ror
add
push
dec
xchg
inc
add
jbe
movs
lods
xor
repz
mov
stc
jge
idiv
sbb
or
pop
adc
lods
jne
in
div
jmp
test
mov
fild
cmp
test
cmp
sub
shl
scas
xchg
xchg
cmp
jge
push
pop
mov
scas
xlat
xchg
lock
in
xchg
sub
es
clc
inc
popa
es
mov
dec
in
loopne
jg
mov
bound
cwde
push
int3
jl
fisubr
mov
pop
inc
pop
lods
inc
xor
in
js
add
fild
shl
data16
xchg
xchg
out
sub
pusha
add
(bad)
popf
cmp
cmp
test
cmp
cmp
shl
xchg
cmc
aas
inc
cli
sub
fiadd
cmps
and
add
and
retf
div
enter
mov
inc
popf
sub
inc
mov
shr
cmp
push
popf
pop
test
cli
iret
aaa
call
ja
outs
cmc
mov
imul
lahf
dec
nop
rcl
in
sahf
out
add
neg
sbb
or
ins
jle
inc
jl
jnp
rcr
pop
vsubpd
or
sbb
jp
xor
aad
push
iret
aad
sbb
and
jmp
xchg
xor
test
inc
or
push
inc
mov
call
xor
push
add
cwde
fnstenv
add
inc
bound
iret
adc
test
gs
stc
leave
jle
repz
mov
ins
cmc
je
je
mov
adc
cmp
pop
jmp
data16
mov
adc
daa
shr
dec
lock
cli
pop
(bad)
mov
dec
sub
stc
int
dec
pop
ror
cmp
pop
mov
std
mov
std
sbb
(bad)
adc
sti
mov
mov
adc
ins
int
jecxz
inc
and
sub
mov
cld
push
inc
cs
call
jg
pop
(bad)
out
xchg
mov
lods
movs
jmp
jle
jg
sar
xchg
pop
in
(bad)
test
adc
scas
pop
jge
clc
and
jnp
pop
and
scas
retf
sub
jne
mov
jns
icebp
push
dec
into
adc
js
and
adc
sar
cmps
pop
fadd
jmp
es
lods
add
adc
inc
push
xor
push
xor
mov
in
fsincos
pop
or
mov
mov
jne
imul
push
mov
add
push
ja
scas
push
fcmovb
iret
push
lods
mov
jo
mov
fcom
push
sti
xor
test
adc
add
fiadd
fwait
and
rol
sbb
jo
fist
pop
push
cld
mov
popa
xchg
(bad)
mov
dec
es
outs
jmp
leave
shr
ficomp
bound
std
dec
lds
push
scas
xor
out
mov
mov
adc
pop
push
mov
xor
loopne
out
lahf
jmp
jle
xchg
or
iret
push
shl
mov
or
and
retf
dec
mov
or
push
(bad)
test
jg
adc
sti
int3
(bad)
jmp
out
jg
outs
aas
hlt
(bad)
popa
sti
out
jae
mov
pop
gs
cmp
les
pop
pusha
repnz
mov
cs
imul
push
pop
mov
jp
mov
cwde
inc
push
dec
sbb
dec
mov
mov
xchg
mov
ror
fs
sbb
dec
lods
rcl
cwde
fst
sbb
retf
mov
pushf
dec
cmp
ret
loop
mov
aaa
add
push
outs
mov
sub
xchg
icebp
inc
lods
sub
ret
lock
adc
std
daa
inc
test
dec
ror
retf
out
je
out
loop
aaa
or
stos
cwde
inc
and
dec
lods
mov
dec
or
scas
cmp
sub
mov
jmp
cmp
cmps
imul
(bad)
(bad)
shr
jne
mov
in
scas
inc
iret
(bad)
xchg
xchg
cs
jle
in
add
call
cmps
out
add
add
and
in
pop
in
adc
and
mov
out
jg
jg
add
aas
mov
sbb
ret
cld
xor
les
inc
movs
pop
cmp
inc
mov
sbb
pop
inc
pop
icebp
push
push
test
stos
add
sub
ins
fbstp
cmp
icebp
pop
push
cmp
and
push
mov
fist
imul
leave
lods
fs
xor
push
dec
xor
lods
and
retf
stos
add
xchg
add
ja
jne
cs
mov
es
movs
jp
jl
sub
hlt
lds
bound
out
mov
cwde
aas
push
je
jmp
outs
dec
lds
ret
retf
mov
sbb
cdq
sub
mov
jns
(bad)
loop
or
xchg
lods
aam
jl
inc
jnp
cs
pusha
aad
inc
(bad)
in
cld
sbb
pop
mov
stc
sbb
mov
(bad)
fs
cli
or
jbe
push
mov
aad
adc
nop
je
repz
aad
jae
inc
inc
test
sbb
mov
repz
inc
in
imul
hlt
test
sub
out
mov
jnp
js
xchg
mov
pusha
inc
mov
cmps
addr16
push
enter
(bad)
scas
jne
imul
in
adc
fisttp
mov
mov
push
adc
stos
mov
dec
clc
sub
pushf
or
xchg
xor
hlt
nop
lea
in
mov
pop
jno
cld
add
push
jl
and
xor
pop
lods
(bad)
ret
fwait
or
mov
loope
xor
sbb
and
mul
movs
test
ins
jl
mov
cmp
pop
inc
jbe
pop
xor
and
fwait
xchg
cmc
into
dec
shl
jl
add
adc
int
repnz
push
scas
jno
push
jnp
in
in
or
xchg
inc
enter
inc
push
jmp
ror
popa
in
adc
iret
sub
aas
aam
icebp
add
pop
cmp
add
jo
jge
mov
inc
sub
stc
fwait
fs
mov
push
in
jnp
in
sbb
call
stos
xchg
repz
jbe
idiv
jmp
rol
push
cmp
mov
mov
adc
mov
dec
or
aas
jae
pusha
aas
pop
lock
push
fidivr
mov
or
mov
mov
pop
or
out
push
retf
push
daa
jnp
jg
sbb
stc
imul
cwde
fwait
sub
pop
add
xchg
cmp
movs
retf
and
sub
fisub
xor
add
leave
push
cwde
inc
stos
(bad)
mov
dec
pop
and
mov
pop
js
ss
mov
in
aam
imul
jns
outs
gs
iret
lahf
push
in
cmc
push
xor
jno
sub
cmp
sbb
lods
or
and
mov
cmp
cmps
rcl
out
loop
es
push
out
data16
pushf
scas
pop
mov
mov
jb
mov
add
imul
or
push
out
sub
and
pop
cs
retf
push
push
test
ja
mov
icebp
imul
ds
cmp
sub
or
rol
push
bound
ret
xchg
aas
stos
jmp
jae
inc
mov
not
dec
jae
cwde
cmps
mov
sti
(bad)
and
mov
mov
sar
jno
jmp
xchg
sbb
call
pop
pushf
pop
js
je
test
ins
and
and
sub
stc
outs
mov
movs
xchg
(bad)
jge
ds
push
push
xchg
jmp
xor
pavgb
sub
imul
ja
pop
retf
mov
sub
sub
into
push
popf
xor
in
sbb
mov
jmp
cmp
pop
cwde
out
add
pop
paddsw
and
or
xor
das
adc
addr16
jmp
aaa
jns
outs
aam
nop
rol
retf
add
add
(bad)
cmp
test
test
pop
mov
jb
cmp
test
fbld
loop
dec
xor
cmc
frstor
sti
call
mov
xchg
xchg
sub
or
xchg
mov
cmp
(bad)
fwait
in
mov
mov
sbb
fidivr
or
fcmovne
enter
les
sbb
cmp
add
and
pop
cs
pop
xchg
xor
lods
movs
push
pop
adc
sub
push
inc
jecxz
jo
movs
(bad)
xor
lods
sub
ss
fimul
jbe
pop
sub
repnz
call
out
cdq
or
(bad)
cs
pop
mov
sub
xor
les
scas
xor
jmp
fistp
cmp
jl
repz
cwde
cmp
adc
mov
iret
into
es
sbb
xor
cmp
fst
out
jo
fdiv
pop
(bad)
xchg
cld
xchg
enter
or
pop
push
into
xchg
and
ja
mov
mov
cs
xchg
xlat
nop
xor
push
fcmovb
shr
mov
adc
mul
sbb
arpl
hlt
imul
mov
jle
inc
dec
push
push
push
addr16
sub
jnp
and
cld
sti
and
fadd
ret
inc
push
jmp
dec
xchg
sbb
add
or
xlat
retf
mov
sti
test
mov
sbb
call
inc
pop
mov
mov
or
mov
ret
cmp
xor
sbb
es
aad
mov
scas
push
cmp
dec
out
mov
gs
lds
cmp
jge
mov
je
push
mov
adc
lea
cli
push
stos
(bad)
not
leave
cmp
sbb
or
jne
cmp
fadd
ins
shr
mov
push
mov
ds
lahf
mov
add
ins
pop
lock
jbe
test
dec
inc
hlt
pop
xchg
or
in
das
sbb
mov
movs
inc
cmp
xchg
mov
or
sub
retf
mov
imul
pop
fst
xor
add
or
jecxz
pop
sbb
inc
sbb
js
inc
rol
dec
aad
and
dec
push
test
mov
fwait
scas
sbb
xor
sti
inc
adc
push
fbstp
inc
inc
mov
fisttp
xlat
popa
lods
mov
sbb
inc
test
out
pop
cmps
(bad)
sbb
xchg
add
sub
cli
xchg
dec
clc
pop
sub
ss
mov
xchg
sub
add
repz
fadd
xchg
jp
add
test
rcr
jmp
ds
push
cld
aam
pop
(bad)
push
inc
retf
add
movs
test
int3
stos
jo
loop
sub
std
xor
cmp
sbb
mov
sub
fwait
jl
aas
out
clc
add
daa
mov
pop
ins
push
adc
or
retf
unpckhps
shl
sbb
call
test
loope
and
or
scas
mov
repnz
jne
dec
xchg
inc
mov
cdq
xchg
leave
ss
mov
or
(bad)
adc
hlt
lahf
repnz
lods
pop
adc
bound
push
or
inc
addr16
mov
cmp
inc
lods
add
cmp
dec
or
rcr
cs
adc
repnz
push
jb
or
gs
in
add
mov
mov
or
nop
jb
cmp
inc
pop
call
jo
sbb
or
cmp
push
and
repnz
shr
(bad)
mov
fld
arpl
pop
sbb
pop
jmp
ret
dec
jae
mov
out
inc
cli
imul
iret
loop
xchg
fisttp
arpl
pop
cli
ja
xchg
fld
lahf
lahf
jae
sub
scas
or
add
mov
or
popf
mov
sub
adc
add
push
mov
mov
pop
movs
cld
adc
jae
jl
out
or
sub
or
inc
aad
and
jae
mov
mov
(bad)
adc
sub
aad
pop
out
xlat
dec
pop
arpl
add
mov
(bad)
pop
(bad)
xlat
scas
dec
hlt
js
push
mov
ret
adc
push
sub
das
repz
repz
iret
mov
int
adc
add
femms
enter
adc
pop
cli
mov
xor
sar
mov
out
lea
inc
sti
push
and
and
jno
pop
lds
jecxz
and
xchg
dec
sahf
mov
mov
cmps
gs
fdiv
mov
push
inc
pushf
mov
into
mov
xchg
cld
mov
or
inc
lods
add
in
push
(bad)
shr
or
and
jge
jl
(bad)
xor
add
or
mov
test
cmp
mov
icebp
pop
cmps
sub
add
cli
add
ret
xlat
xchg
ds
ror
inc
cdq
adc
cwde
sub
movs
and
jns
test
hlt
ja
fiadd
(bad)
fxam
icebp
sub
inc
add
neg
add
dec
xchg
sbb
xor
cmps
push
xor
mov
or
dec
ins
ret
mov
sub
pop
and
gs
in
call
mov
fucomi
pop
test
sbb
dec
mov
or
pop
cmp
pop
adc
pop
xor
out
cmp
(bad)
iret
js
cdq
rcr
and
nop
push
mov
or
movs
jmp
fld
outs
leave
and
scas
jns
xadd
adc
inc
push
dec
pop
push
add
mov
out
lods
mov
sbb
hlt
mov
fwait
jns
xor
cs
dec
add
cmp
fwait
xchg
loop
xchg
outs
mov
cmp
dec
arpl
retf
clc
xor
adc
adc
ds
loop
je
push
add
cmps
sbb
adc
test
push
scas
nop
xchg
mov
bound
sar
lahf
cmp
into
xchg
sub
inc
inc
fcom
(bad)
dec
jne
test
outs
xor
xor
cmp
mov
xchg
fcomp
into
data16
adc
aaa
(bad)
sub
rcl
ja
push
inc
int
xchg
push
pushf
ja
xchg
push
cdq
scas
add
movhps
add
mov
pop
mov
pop
fidiv
cmc
cmp
fmul
sbb
push
int
out
aad
xor
imul
adc
sbb
and
dec
dec
pop
pushf
out
mov
mov
or
xor
or
(bad)
add
sbb
fwait
lock
fist
jmp
inc
outs
pop
sub
bound
jg
inc
clc
pop
jle
div
retf
imul
mov
rcl
out
mov
inc
adc
mov
sub
data16
aad
mov
fsub
stos
(bad)
and
pop
imul
mov
or
adc
sahf
leave
in
repnz
xchg
xor
lock
pop
push
and
shl
xchg
push
imul
loopne
in
adc
jnp
fcmovnu
and
jp
dec
dec
ret
pop
sahf
xchg
daa
shr
test
push
ret
mov
cdq
popf
dec
dec
fnsave
xor
push
(bad)
das
dec
xlat
cmp
lods
sbb
add
bound
jae
test
aaa
shl
inc
mov
and
shl
jp
call
test
sti
ss
pandn
movs
dec
loopne
inc
add
jmp
or
call
sub
cmp
xor
dec
sub
inc
out
imul
leave
std
xor
sbb
pushf
mov
mov
push
adc
mov
(bad)
pushf
call
adc
imul
fldenv
xchg
ret
mov
pop
ds
xor
and
cmp
ja
inc
data16
retf
push
sbb
(bad)
mov
xchg
push
ret
mov
push
shr
sbb
dec
stos
push
jle
mov
lea
jl
cmps
call
jmp
popf
repz
mov
mov
mov
not
xor
mov
dec
call
stc
xor
into
int
mov
(bad)
adc
mov
xlat
cmp
shl
sub
movs
out
jge
gs
jp
jmp
bound
dec
cli
cmps
fwait
or
dec
mov
mov
(bad)
ret
(bad)
add
mov
rol
mov
sub
jecxz
xchg
out
mov
inc
xor
cmp
ret
xchg
retf
jge
pop
jp
dec
jmp
sbb
div
jle
adc
dec
jns
adc
or
and
push
add
rcl
movs
pop
fadd
mov
dec
add
call
push
es
outs
adc
lea
stos
mov
cli
mov
xchg
dec
out
inc
test
inc
out
into
or
mov
dec
cmp
ds
call
pop
mov
je
lods
fdivr
fidiv
in
test
and
popa
stos
mov
aad
stos
jns
pop
ins
sbb
outs
movs
hlt
cmps
xchg
sahf
cmps
leave
jb
bound
ins
ret
inc
jb
cmp
jne
ficomp
std
lea
or
repnz
(bad)
repz
scas
and
sbb
sbb
rcl
enter
and
dec
pop
or
ss
xchg
out
cmp
jmp
rol
push
push
hlt
sbb
sbb
add
movs
out
sar
push
jnp
add
rcl
dec
xchg
mov
daa
mov
ret
mov
(bad)
xlat
data16
rcr
nop
int3
(bad)
fsub
add
mov
sub
cmp
addr16
xchg
inc
arpl
jbe
pop
sbb
iret
aaa
cmp
enter
ss
sbb
sti
repz
mov
and
mov
stos
es
sar
imul
sahf
push
mov
loope
sbb
loope
pop
shl
test
fwait
push
xor
push
pop
into
inc
push
xor
cmp
aaa
jp
xchg
mov
hlt
adc
fld
push
add
cmps
dec
mov
lods
and
and
nop
or
push
adc
cmp
clc
ja
or
out
cmp
jle
push
or
jnp
(bad)
pop
(bad)
fisttp
jo
js
aas
or
mov
ret
aas
jno
int
mov
pop
sbb
sbb
sbb
cmp
repz
outs
mov
outs
and
xchg
pop
adc
sar
(bad)
push
xchg
push
push
scas
adc
(bad)
sub
mov
in
adc
add
outs
outs
mov
sti
cmps
and
ins
enter
jne
cmps
ins
ins
popa
out
add
cmps
sub
jmp
add
add
retf
jo
call
(bad)
fstp
out
add
aam
inc
out
sti
std
gs
ins
cwde
popa
scas
push
dec
pop
and
test
repz
dec
sbb
dec
ret
or
aam
cmp
fistp
std
adc
sub
outs
mov
les
jne
pop
mov
jmp
rcr
dec
stos
rcl
jo
repnz
sub
outs
fistp
enter
jmp
and
call
mov
(bad)
jmp
inc
jle
imul
xchg
inc
or
jnp
data16
aam
mov
xor
in
(bad)
push
mov
xchg
jo
dec
or
retf
ret
lock
fwait
jl
mov
jae
jge
push
js
and
adc
jmp
pop
push
sahf
ins
mov
jecxz
mov
sar
outs
jl
pushf
lahf
dec
xchg
fldcw
jecxz
jb
test
jo
dec
addr16
(bad)
jae
test
dec
pop
fptan
ret
dec
push
adc
data16
push
in
sub
mov
push
jecxz
mov
mov
sub
xor
imul
js
sbb
ins
mov
mov
add
(bad)
cld
neg
jp
cmp
cmp
aaa
add
mov
add
loope
in
(bad)
mov
or
mov
pop
mov
jle
xor
icebp
and
daa
sbb
ins
jae
(bad)
loop
cs
push
mov
add
mov
xor
mov
cmp
repz
inc
sbb
sub
push
push
or
pop
in
outs
add
movs
mov
dec
push
js
mov
push
jns
fdivr
sbb
cmc
pop
ja
add
mov
call
cmp
sbb
push
pop
mov
add
adc
dec
out
pop
cmps
outs
pushf
cmc
sub
pop
out
push
dec
out
and
cmp
and
fmulp
cmps
pop
mov
jbe
pusha
aas
nop
mov
loop
push
je
sbb
mov
div
cs
pop
mov
sub
push
dec
rcl
jecxz
stos
shr
movs
test
loope
pop
pop
xchg
ins
jns
add
out
cli
sub
push
daa
fnstenv
std
fcom
(bad)
stos
mov
loopne
lock
adc
out
add
in
xchg
fsub
fidiv
fs
fwait
mov
aad
das
adc
out
stos
ffree
jns
adc
stc
or
(bad)
jecxz
or
push
mov
icebp
jns
aaa
sti
pop
mov
test
sub
(bad)
leave
sbb
fdiv
ds
adc
shl
sbb
ins
daa
cmps
pop
sbb
push
aad
out
into
push
cs
pop
xchg
loopne
aam
and
outs
xchg
cmp
imul
cmps
shl
(bad)
(bad)
stos
data16
es
mov
or
(bad)
out
dec
fisttp
neg
les
movs
jno
jg
xchg
icebp
(bad)
(bad)
dec
mov
or
mov
jae
jg
push
sbb
addr16
fucom
mov
adc
sti
je
icebp
xchg
pop
mov
push
push
sub
bswap
lea
add
jnp
add
pop
sub
cmp
or
fild
cwde
movs
ss
int3
pop
push
xchg
ja
mov
mov
outs
jle
ins
call
cli
rcr
jl
sbb
dec
fbstp
mov
jns
fcmovnb
jmp
stos
aam
pushf
fld
(bad)
mov
push
rcl
push
cmp
push
ror
and
scas
xchg
arpl
mov
sahf
pop
sahf
adc
dec
test
push
pop
inc
add
mov
pusha
add
js
push
loopne
or
adc
in
or
xchg
mov
outs
test
loopne
xchg
shl
mov
int3
outs
fyl2xp1
cmc
push
ins
pop
fidivr
add
and
scas
jp
(bad)
clc
and
into
cmc
sbb
pop
sahf
ds
fdiv
mov
inc
aad
aam
xor
inc
adc
bound
fnstsw
adc
push
fisubr
retf
jge
sbb
lock
mov
test
or
mov
inc
jnp
daa
jl
test
push
cs
popa
sub
or
outs
sbb
sti
push
pop
cmp
(bad)
retf
(bad)
inc
popa
inc
jno
sahf
xchg
rcl
mov
pop
cs
dec
aad
xchg
pop
pop
pop
mov
sub
cli
xlat
mov
cmps
rcr
fldenv
aad
xor
fsubr
into
push
iret
and
ret
jne
jae
sbb
into
xchg
dec
popf
push
xor
and
sub
push
les
rcl
adc
inc
inc
cmp
in
aas
(bad)
xchg
and
stc
sbb
ins
lock
ret
jge
imul
lods
rcr
pusha
add
(bad)
(bad)
xchg
sti
and
mov
add
pop
jp
inc
jmp
jmp
ds
test
into
repz
data16
aam
gs
shl
jecxz
sbb
(bad)
mov
loope
fwait
pusha
movs
test
push
leave
cmp
mov
jge
add
jmp
jecxz
mov
jmp
push
sbb
mov
daa
(bad)
mov
jb
mul
dec
in
ins
lods
push
jl
retf
(bad)
jmp
sbb
hlt
das
test
out
je
into
icebp
push
rcr
mov
fsubr
call
pop
mov
push
push
fsubr
dec
lea
sub
mov
sar
test
pushf
inc
xor
loop
pop
out
jnp
xlat
and
shl
dec
cmps
adc
jecxz
push
fild
mov
mov
(bad)
fst
loop
jb
add
mov
ret
xor
ret
adc
ds
mov
sub
cld
std
xor
xchg
movs
leave
dec
cmp
mov
daa
xchg
add
mov
adc
aas
mov
inc
loopne
inc
loop
mov
fidiv
lods
pop
sub
icebp
mov
add
pxor
mov
mov
jle
ret
dec
sbb
xchg
ret
pop
jb
retf
add
jae
add
pop
mov
mov
cmp
adc
add
sub
loopne
xor
scas
sar
fdivr
dec
and
push
fst
pushf
push
jp
test
mov
sub
popa
jle
mov
aam
mov
nop
aad
aaa
sub
sub
add
aad
xchg
sub
in
shl
in
stos
(bad)
adc
sub
retf
repz
test
aaa
fidivr
xor
mov
and
jle
xchg
dec
push
xchg
push
sbb
and
fsubr
pushf
out
cwde
mov
out
cmp
fcomp
adc
sbb
retf
clc
not
jnp
das
cmp
or
call
cmp
clc
stc
aad
dec
ret
mov
xor
scas
dec
stos
xor
push
imul
mov
jne
lods
sub
or
pop
ja
lods
adc
push
push
sti
mov
cmp
in
scas
push
lods
mov
inc
xor
iret
push
xchg
jl
jecxz
push
adc
cmp
jmp
icebp
jg
push
jmp
mov
test
mov
outs
jb
int3
sub
inc
out
jmp
mov
and
jne
mov
sahf
mov
loop
mov
cs
fisttp
xchg
jb
mul
jbe
mov
test
push
(bad)
ror
jp
jno
xchg
push
sub
test
mov
cs
pop
shl
mov
mov
ds
dec
mov
pop
movs
adc
adc
daa
pop
mov
(bad)
cmp
fld
jae
dec
inc
mov
push
jp
mov
dec
lods
mov
loope
xlat
push
mov
mov
test
or
das
jl
retf
repnz
dec
and
sbb
jo
test
and
(bad)
loop
pop
fwait
out
pop
sti
cdq
cmps
inc
js
adc
sbb
das
dec
lods
stos
pop
mov
jle
cmp
fcmove
jne
push
arpl
jns
lds
inc
and
xchg
sub
movs
add
sar
lods
push
jmp
daa
clc
add
(bad)
pop
sbb
jge
popa
jle
xchg
mov
(bad)
mov
mov
rol
stos
jb
mov
cmp
dec
shl
(bad)
pop
std
shl
jbe
adc
mov
jmp
ins
mov
ins
inc
stos
into
inc
add
mov
mov
dec
xor
addr16
xor
addr16
sahf
cmp
shr
cs
mov
inc
out
dec
out
es
popa
inc
cmps
movs
or
cli
fld
inc
dec
shl
sbb
ins
add
xor
xchg
aas
sub
jnp
dec
sti
fiadd
jmp
rol
mov
pop
pop
scas
mov
lahf
rol
mov
ja
arpl
ret
outs
add
mov
mov
pop
(bad)
(bad)
mov
mov
push
mov
pop
mov
pop
xor
push
aaa
xlat
jecxz
inc
dec
fnsave
popf
push
outs
lahf
fbstp
dec
popa
and
ror
mov
cmp
(bad)
(bad)
inc
and
cld
xor
mov
fwait
(bad)
repz
cdq
or
mov
dec
sub
cli
ret
cmp
out
lods
xchg
pop
sbb
cdq
sbb
inc
mov
bound
mov
inc
xchg
scas
repnz
mov
fisubr
repz
(bad)
lods
js
test
pop
cmp
sbb
aad
pop
dec
pop
js
mov
dec
nop
xchg
add
mov
cdq
xchg
out
jo
lock
lods
cmp
pop
test
and
push
mov
(bad)
jg
sbb
(bad)
int3
lock
std
out
cwde
daa
mov
fist
cdq
jne
stos
sbb
pop
adc
lods
out
retf
mov
imul
xchg
in
arpl
ja
out
movs
fiadd
test
xor
jecxz
mov
sub
repnz
push
inc
sub
sti
ss
pop
mov
(bad)
les
lock
jno
cmp
pop
and
mov
(bad)
daa
push
jge
call
jmp
inc
pop
jp
ret
ret
push
add
div
addr16
mul
mov
ret
pop
movs
daa
and
mov
iret
mov
dec
cmp
rcr
sbb
cdq
inc
ret
movs
clc
(bad)
gs
inc
iret
push
or
jle
pop
push
xlat
adc
dec
out
addr16
xor
js
or
sbb
(bad)
xor
sub
push
pop
add
enter
or
jp
mov
aas
or
jmp
stc
(bad)
adc
daa
adc
mov
dec
dec
adc
fs
(bad)
in
push
mov
xchg
popa
imul
je
mov
out
push
jbe
mov
mov
(bad)
outs
mov
mov
mov
push
adc
fnstsw
repz
adc
sub
out
cmp
stos
daa
fldcw
mov
sub
inc
je
call
lods
push
fimul
pop
mov
mov
rcr
call
adc
cmps
in
or
inc
outs
clc
jge
mov
test
fiadd
push
pop
in
fisubr
push
xlat
sbb
mov
adc
stos
mov
(bad)
shl
mov
aam
loopne
int3
push
(bad)
in
shr
je
iret
ror
xlat
xchg
daa
daa
ret
pushf
cmps
sbb
xchg
push
mov
mov
imul
push
stos
fild
ror
push
fild
das
fist
jp
sub
mov
push
fdiv
jns
in
push
jne
out
sbb
lods
stc
popa
es
mov
xchg
neg
xor
loop
mov
jmp
retf
push
add
ins
iret
sub
ja
add
ret
jbe
push
movs
stc
sub
add
pop
mov
adc
ficomp
inc
leave
jmp
or
dec
inc
dec
ja
sti
mov
(bad)
sub
out
jecxz
stc
test
or
outs
test
ss
and
mov
xchg
data16
daa
jnp
iret
adc
sbb
movs
adc
jbe
cmp
lods
dec
and
lods
and
hlt
xlat
cmps
inc
test
push
sub
or
sub
jmp
movzx
into
fnstcw
sub
and
das
push
dec
mov
clc
in
jl
pop
mov
rep
pop
loopne
aas
aaa
cli
sub
jle
iret
inc
mov
or
in
mov
inc
shr
and
aaa
imul
mov
mov
popa
repz
outs
xor
cmp
das
rcl
or
pop
(bad)
outs
out
add
repnz
sbb
mov
fwait
ds
cs
dec
jg
push
or
mov
xor
pop
or
add
jecxz
jecxz
(bad)
mov
xor
sub
retf
rcl
add
clc
pop
pop
sbb
sar
add
sbb
inc
popa
in
ins
int3
nop
cmps
xchg
inc
lods
imul
mov
xchg
add
into
sbb
nop
inc
push
mov
sti
enter
pop
sar
seto
push
inc
fcomp
pop
push
pop
leave
cmp
(bad)
cmp
push
addr16
jle
adc
add
xchg
in
sub
hlt
sub
pop
mov
jg
mov
fincstp
inc
mov
inc
jae
xor
mov
mov
lahf
lea
lock
mov
push
mov
mov
sbb
sbb
push
or
mov
popf
mov
arpl
cli
add
daa
mov
and
rol
test
xor
push
mov
sub
ins
ins
cmp
jmp
cmp
xor
mov
mov
xchg
sub
sub
xor
out
mov
sub
cli
xor
loop
sub
sbb
lods
addr16
popf
lea
ret
sub
add
retf
mov
icebp
adc
ret
loop
push
loop
loopne
adc
mov
xor
mov
fist
cmp
and
adc
test
mov
mov
sbb
icebp
push
daa
cmps
pushf
push
cmps
adc
and
adc
dec
inc
xor
imul
ins
fistp
(bad)
mov
pop
dec
out
cmp
jmp
xor
dec
jmp
mov
ins
(bad)
sub
aad
inc
ret
xor
and
leave
sar
pop
or
mov
or
and
xchg
pop
lods
int
(bad)
fiadd
frstor
das
(bad)
stc
into
mov
sbb
in
and
das
aaa
xchg
push
sbb
cld
jne
leave
jmp
mov
inc
test
test
rcl
movs
mov
aaa
lds
hlt
xchg
cs
adc
rep
xor
pop
sahf
cli
pusha
mov
adc
mov
inc
or
imul
into
push
adc
inc
(bad)
cmp
in
xchg
xchg
pop
push
mov
stos
push
ret
pop
or
retf
jmp
dec
lods
dec
std
daa
(bad)
pop
sub
fcmove
add
mov
xchg
aad
mov
iret
iret
mov
cmp
pop
cmps
stos
loop
mov
xchg
push
adc
stos
fs
cmps
addr16
daa
jnp
cwde
fbld
inc
jg
sub
mov
lahf
sbb
rcr
mov
mov
and
adc
dec
mov
enter
imul
in
mov
mov
jmp
mov
jo
adc
mov
aas
mov
lea
inc
out
mov
cdq
in
out
cmp
cmp
cmp
stos
dec
sbb
adc
jl
mov
push
cmp
xor
jae
out
adc
pop
jp
jge
add
iret
sti
scas
push
xchg
cmp
or
test
xchg
mov
pop
pop
data16
mov
mov
cmps
pop
cmps
dec
sub
iret
js
sub
retf
xor
xchg
pop
into
daa
mov
outs
gs
mov
in
pop
aad
push
in
jo
out
inc
fidivr
enter
sbb
movs
xlat
push
sbb
test
loope
ins
bound
ins
mov
cmp
test
in
clc
(bad)
mov
jp
mov
sahf
out
jae
or
adc
pop
jno
in
mov
dec
inc
push
cld
ss
push
sbb
fbstp
ins
xor
add
imul
add
jne
ss
push
jne
cmp
mov
dec
mov
in
push
cmc
or
xchg
sub
sub
and
pop
add
nop
sbb
pop
sub
add
dec
(bad)
cmp
jle
sbb
push
pop
es
xchg
sub
lock
jne
or
jmp
test
mov
cld
add
push
jnp
aam
pop
aam
popf
jl
push
inc
sti
in
add
jns
or
xor
lea
imul
push
(bad)
sti
cld
jge
and
jb
bound
or
or
sbb
pop
adc
adc
sub
popa
enter
imul
mov
fcomp
sub
xchg
sbb
cmp
js
mov
pop
js
xchg
out
out
cmps
mov
ret
repz
je
fadd
data16
(bad)
movs
push
sub
movs
cmp
cmp
push
push
or
and
xor
nop
aad
push
add
rcr
mov
ds
scas
lods
into
sub
cli
(bad)
mov
int
push
xchg
jmp
pop
mov
mov
mov
ins
fwait
fs
das
and
pop
xor
or
pop
adc
and
hlt
jecxz
push
xchg
jle
xor
movs
inc
ror
ret
cmp
je
pop
ret
pop
mov
adc
or
cmc
pop
and
jle
mov
ss
mov
add
inc
push
push
lods
dec
ins
mov
in
fdivp
cmc
jge
fst
addr16
sbb
mov
inc
cdq
loop
pop
icebp
cdq
jmp
and
popa
mov
call
sbb
mov
push
das
mov
mov
out
hlt
xor
xor
cmc
pop
sahf
into
sub
popf
ss
xchg
lods
ins
add
loope
adc
xor
jnp
icebp
push
retf
xchg
rol
imul
add
mov
adc
mov
push
mov
ins
inc
add
jmp
leave
dec
sub
push
sbb
cmps
xchg
scas
stos
cmp
cmp
xchg
test
mov
enter
dec
jp
ins
loop
jp
cmp
or
test
or
data16
fisttp
adc
push
sub
xor
in
and
xchg
mov
loop
xchg
js
adc
jle
rcl
cwde
mov
fbld
jecxz
mov
int
fcom
mov
aam
cld
into
stc
or
or
pop
xchg
adc
pushf
push
xchg
out
test
xor
inc
mov
xor
fnstsw
add
mov
push
(bad)
cmp
inc
jo
inc
cmps
xor
(bad)
cmps
pop
sub
inc
sbb
idiv
sbb
leave
dec
jp
mov
jp
sar
movs
mov
jg
xchg
out
or
(bad)
mov
jl
add
mov
call
inc
mov
fnstenv
mov
les
cmp
jno
(bad)
ins
pop
dec
loopne
iret
mov
ret
aad
adc
loop
sbb
imul
pop
(bad)
or
sub
xor
pop
xchg
test
pop
icebp
push
sub
cmp
ret
or
outs
imul
(bad)
loope
movs
inc
in
jmp
pop
movs
retf
icebp
dec
pop
cmp
inc
test
xor
popf
dec
cld
xlat
xchg
dec
push
cs
pop
daa
jmp
adc
repz
and
ficomp
aas
ret
out
mov
or
imul
jp
or
push
mov
stos
pop
dec
ret
push
xchg
inc
and
xor
jge
inc
mov
add
mov
push
pop
mov
into
retf
add
out
ds
and
sbb
lock
fs
cld
or
dec
and
sub
xor
test
fs
call
bnd
xor
cli
xchg
dec
dec
retf
push
xchg
call
idiv
jbe
inc
int
ja
scas
push
mov
mov
sbb
fsub
sbb
outs
dec
sbb
sbb
push
outs
mov
into
out
imul
or
and
sbb
dec
leave
add
mov
add
sbb
cld
mov
xchg
sbb
pusha
cmp
retf
mov
sub
push
xor
mov
sub
retf
stos
loope
mov
test
xor
daa
mov
cmp
jae
int
mov
pusha
hlt
xchg
inc
popf
pop
inc
and
mov
fst
cmp
jp
into
scas
push
inc
dec
cmp
xchg
xlat
mov
add
pop
mov
data16
dec
ds
mov
aas
cmps
loope
sub
rcr
in
mov
dec
inc
jle
stos
ins
jl
xchg
mov
aas
jmp
add
cwde
into
xchg
mov
mov
clc
mov
scas
add
add
xlat
in
adc
jo
(bad)
dec
inc
in
xor
in
sub
cmp
scas
imul
push
jmp
push
js
mov
fstp
jge
sub
fimul
sbb
ror
sar
cli
hlt
(bad)
mov
vpcmpgtw
push
(bad)
jg
cmc
dec
xchg
ds
test
clc
adc
pop
and
test
mov
mov
scas
dec
and
aas
jae
cmp
(bad)
(bad)
fadd
dec
neg
xlat
adc
ins
adc
xchg
add
cmps
stos
leave
push
(bad)
inc
xor
sbb
clc
cmp
jb
jl
inc
addr16
sbb
hlt
test
repz
iret
arpl
fistp
repz
mov
push
pop
aam
addr16
mov
nop
mov
xchg
lods
(bad)
cli
ret
addr16
out
inc
les
test
les
ret
pusha
sbb
aad
repnz
sbb
mov
mov
hlt
cli
scas
popa
stos
xor
test
repz
int3
push
je
sbb
nop
ja
jecxz
dec
mov
int
push
pop
addr16
inc
add
cli
lods
cmp
jb
(bad)
iret
and
jp
sub
es
(bad)
jecxz
lea
mov
mov
in
jns
stos
or
dec
pop
std
adc
das
inc
arpl
aam
cmps
pop
xchg
fidivr
inc
xor
adc
(bad)
push
dec
push
push
aam
in
and
(bad)
ss
inc
aas
push
adc
xchg
xor
cli
push
jo
mov
mov
pushf
or
mov
cdq
out
inc
les
sbb
sahf
cmp
call
ret
fs
es
adc
push
sbb
stc
sti
call
xor
mov
inc
or
push
call
jae
scas
cmc
push
scas
inc
jge
xchg
add
xchg
sbb
mov
lea
jno
ja
push
fisttp
aam
push
cs
and
mov
mov
out
test
pushf
cmp
push
xchg
xchg
ins
retf
into
mov
jp
xor
fisub
icebp
lods
std
mov
mov
out
(bad)
rol
jbe
dec
push
inc
and
lahf
cdq
clc
stos
jo
stos
daa
les
imul
pushf
scas
dec
jle
leave
fcom
sar
out
imul
jle
cld
into
adc
and
push
dec
and
(bad)
mov
loop
mov
inc
mov
inc
xor
iret
iret
lahf
cdq
push
xchg
jecxz
popf
mov
xchg
inc
jg
stos
jo
xor
sub
mov
jmp
fwait
add
or
int3
mov
push
call
lds
mov
or
push
jno
mov
jge
xchg
sbb
add
inc
sahf
(bad)
aam
ins
cmps
mov
je
dec
mov
mov
inc
and
xor
push
add
sar
mov
aaa
scas
pop
mov
jnp
inc
mov
push
jmp
adc
jge
cdq
int3
mov
mov
pop
pcmpeqd
inc
adc
cmp
cmp
pop
pop
mov
jl
pop
loopne
adc
xchg
in
gs
or
outs
inc
mov
fcomp
inc
cdq
xchg
aas
xchg
hlt
ds
ja
and
inc
sbb
or
pop
retf
add
sar
daa
sar
mov
xchg
stos
dec
xor
dec
movs
int
push
jle
xor
mov
xchg
bound
mov
push
aas
inc
pop
push
mov
dec
movs
and
adc
xor
aas
jg
test
dec
sub
xor
jae
dec
ret
push
cs
mov
sbb
int
fld
pop
xor
rcr
add
adc
pop
sub
rol
dec
addr16
push
ja
(bad)
sbb
ss
xchg
push
out
and
aad
lea
xchg
fild
repz
stos
jle
jo
push
(bad)
loopne
xor
js
dec
dec
and
push
jo
mov
call
imul
test
data16
push
retf
dec
and
jg
xchg
rcr
push
data16
xor
mov
dec
xor
adc
pop
loope
adc
adc
cli
xor
xlat
xor
(bad)
xor
pop
dec
in
mov
in
ss
push
cmps
psubq
cwde
sbb
imul
ds
pop
movs
(bad)
loopne
mov
shr
sbb
pop
fwait
push
fstp
and
mov
dec
js
mov
mov
out
cdq
sub
inc
inc
shl
(bad)
lods
icebp
add
add
mov
cli
inc
je
jmp
int
shl
out
jb
and
push
shl
and
adc
mov
cmp
inc
xchg
pop
cmp
and
sub
mov
out
push
pop
xor
adc
(bad)
cdq
int3
stos
xor
or
mov
mov
pop
stc
xchg
mul
push
fcmovnbe
les
mov
add
cwde
imul
or
ss
data16
(bad)
loope
lahf
es
clc
leave
fiadd
mov
jae
xchg
dec
push
mov
and
mov
cmp
jmp
inc
cmp
into
leave
into
fwait
mov
stos
cmp
push
jge
cwde
lock
jmp
ds
xchg
add
stos
pop
aam
bound
movs
aaa
pop
ret
pop
ficom
push
jg
add
rcl
out
mov
sbb
inc
shl
add
imul
ins
movs
inc
mov
adc
shl
paddb
or
shr
fmulp
vphsubdq
mov
ror
arpl
cmp
fcomp
js
iret
mov
std
push
mov
into
jns
cwde
jne
inc
sbb
out
xlat
int
pop
lock
xchg
dec
popf
xor
imul
test
loopne
and
sbb
daa
pop
xchg
cs
xor
scas
pop
or
loopne
mov
out
push
cmp
xchg
adc
pop
push
out
aad
pop
std
outs
jnp
out
jecxz
or
xchg
mov
call
call
ja
jp
jge
ret
cmp
sub
xor
xor
xor
push
mov
sub
jmp
clc
cmc
add
pop
pop
pop
adc
sub
add
mov
lods
fisttp
mov
sub
cli
stos
outs
repz
test
int3
aas
xchg
inc
fcom
das
ds
and
ins
fadd
xchg
inc
lods
xchg
ins
fbstp
pop
or
or
push
int3
cmps
pushf
push
mov
sbb
sub
das
sti
jmp
repnz
dec
xchg
sbb
imul
mov
xchg
jns
(bad)
adc
and
inc
clc
mov
adc
jmp
imul
cs
fistp
stos
fsubr
or
ins
call
and
mov
idiv
aas
jns
mov
or
mov
stos
sbb
sbb
ret
sbb
xchg
movs
and
out
imul
adc
dec
adc
imul
and
jl
jmp
mov
pop
int
test
jp
sbb
hlt
pop
fadd
mov
sbb
xchg
cli
lea
and
test
dec
add
and
(bad)
cmp
mov
out
movs
aam
cmp
lahf
jge
xchg
lock
cmp
push
sahf
call
rcr
mov
outs
sub
ret
mov
ja
xchg
cld
sbb
stos
xor
cmp
mov
es
sub
add
sbb
xor
mov
jnp
leave
ficomp
scas
mov
fcmovb
mov
push
mov
mov
iret
aaa
mov
push
dec
jbe
mov
(bad)
jge
dec
jno
xchg
rol
test
mov
repz
xchg
jmp
cmp
in
fistp
hlt
sub
xchg
add
test
mov
push
dec
cmp
add
cmp
pop
dec
and
inc
dec
adc
data16
inc
repz
fbld
dec
aam
mov
jns
fwait
add
ficom
std
pusha
jg
mov
mov
inc
add
cmps
mov
int3
jne
jmp
sbb
pop
lds
xor
cmps
lahf
lahf
mov
aaa
mov
fwait
hlt
int3
xchg
jl
and
call
add
push
fadd
inc
enter
out
or
movs
pop
dec
fnstsw
sti
push
(bad)
hlt
mov
out
jns
xchg
cmp
aad
test
mov
sbb
pushf
cdq
xor
nop
mov
iret
mov
ret
gs
cmps
add
xchg
add
adc
repnz
jmp
nop
push
push
adc
stc
mov
push
dec
jge
pop
lock
pop
lea
pop
add
mov
cmp
stos
jg
mov
in
test
xchg
push
jns
sbb
je
enter
xchg
call
or
je
mov
stc
fadd
nop
mov
sub
out
es
movs
cmp
sub
sub
cs
push
repz
test
mov
shr
pop
pop
mov
aas
sbb
ret
jne
mov
or
in
inc
stos
in
outs
in
into
jnp
outs
jne
mov
and
pop
mov
inc
(bad)
dec
jne
sub
cmp
outs
sub
(bad)
ror
mov
adc
xor
pop
mov
pop
push
loope
cdq
pop
adc
mov
(bad)
mov
jb
fidiv
jmp
lea
iret
cmp
sbb
jp
pushf
sbb
cmp
scas
outs
fnstcw
(bad)
lock
mov
cwde
and
out
mov
cmps
popf
jmp
add
shl
js
cmp
mov
mov
retf
pop
mov
push
mov
jns
mov
(bad)
outs
int3
cmc
mov
in
jmp
mov
fistp
ds
xchg
das
pop
mov
nop
aaa
pop
or
or
in
icebp
movs
jmp
jecxz
cdq
jns
cmp
enter
and
mov
retf
push
add
mov
lahf
lds
and
push
cmc
lock
daa
or
out
jno
leave
and
xchg
inc
sub
dec
mov
pop
lahf
imul
push
ror
mov
xlat
(bad)
(bad)
loop
xor
mov
mov
gs
cdq
ja
push
adc
or
push
out
cmc
(bad)
jle
inc
jo
jmp
pop
test
js
pop
push
or
add
push
or
inc
mov
sbb
inc
dec
rcr
test
stos
mov
push
pop
fimul
and
shr
inc
sbb
data16
adc
jge
add
mov
or
sub
push
or
mov
outs
pop
sbb
cmp
mov
cwde
or
adc
cmc
cmc
daa
mov
mov
pop
ret
(bad)
ds
xor
out
pop
mov
inc
test
pop
dec
sub
inc
xchg
daa
cmp
loop
in
or
icebp
add
add
loope
push
aas
ret
loope
jle
mov
aas
movs
out
or
ret
out
(bad)
mov
cmp
xor
das
dec
stos
cld
or
aas
jne
stos
jbe
jo
sbb
cs
shr
outs
mov
sub
push
xor
cmp
pop
int
arpl
aam
add
adc
daa
mov
mov
fmul
rol
adc
iret
mov
xor
mov
mov
out
jae
mov
(bad)
push
sbb
inc
fcom
iret
adc
into
xchg
adc
jge
es
and
ins
call
in
popf
push
sahf
lds
std
ja
xchg
jl
mov
push
lock
shr
push
push
repz
(bad)
xchg
cli
sub
sub
imul
xchg
jecxz
das
xor
imul
mov
pop
lock
cmp
xor
add
jno
adc
repz
jle
add
(bad)
dec
ror
adc
push
sub
push
pop
jne
bound
inc
mov
jge
xchg
retf
xor
out
icebp
fs
pop
mov
scas
ins
xchg
dec
mov
pop
mov
pop
idiv
push
and
aad
dec
and
inc
jae
mov
fwait
xor
push
xchg
int
movs
test
jl
shl
int3
shr
xchg
push
and
js
rcl
mov
inc
daa
idiv
retf
imul
or
mov
jno
mov
lock
js
daa
xchg
clc
dec
call
(bad)
out
jbe
pop
sub
push
lods
loope
dec
jge
xor
repz
inc
outs
iret
add
inc
cmp
adc
mov
call
cli
mov
mov
inc
adc
dec
sub
aad
jp
loope
lock
loop
mov
jmp
or
mov
lea
or
mov
jns
xchg
test
scas
inc
shl
mov
cmp
daa
call
shl
call
jnp
mov
adc
in
ror
jb
jle
pusha
test
in
inc
sbb
jmp
mov
fbld
retf
cmp
dec
sub
xor
xor
test
aas
jg
sub
add
(bad)
ficom
ror
inc
lods
ja
push
jle
jne
shr
pop
mov
push
inc
out
xor
test
test
xchg
test
push
pop
inc
push
add
mov
jle
rcl
cs
stos
pop
mov
adc
(bad)
call
lds
push
fcmovu
cli
mov
jae
pop
scas
lds
stos
pop
mov
div
cs
sub
inc
pop
popf
stos
xchg
and
lods
and
push
pop
jmp
out
push
or
xchg
adc
cmp
sub
dec
lock
and
sub
lahf
rcl
icebp
jo
aaa
mov
(bad)
jecxz
or
aad
push
mov
fstp
pushf
and
lds
loop
xor
xor
cmp
mov
cs
xor
xor
nop
dec
fld
cdq
sbb
jl
cwde
add
push
sub
push
rol
test
xchg
fadd
pop
inc
addr16
in
cdq
ret
outs
inc
ss
mov
cwde
mov
xchg
jp
push
sbb
out
stos
dec
les
ja
cwde
pop
leave
loop
push
sbb
pop
jbe
push
pop
cld
xchg
pop
shl
mov
retf
push
imul
lock
mov
sub
mov
imul
mov
fs
int3
aaa
retf
lock
jnp
pusha
stc
into
adc
inc
jo
push
ficomp
jbe
jmp
adc
xchg
xchg
xchg
push
dec
cld
mov
push
xlat
push
or
sub
sub
repnz
loopne
inc
pop
gs
jns
jg
pop
adc
xchg
lods
mov
inc
mov
sub
xchg
ficomp
popa
push
imul
cmps
js
sbb
dec
ins
sub
mov
hlt
push
ja
ret
jp
jmp
in
and
inc
jbe
sbb
das
in
icebp
xchg
(bad)
lods
mov
or
add
dec
pop
pop
mov
fwait
mov
(bad)
push
add
call
(bad)
cmp
imul
jns
or
das
xchg
cmp
pop
test
icebp
and
out
movs
jmp
and
in
sub
jno
ins
shr
xchg
pop
push
adc
push
sub
stos
adc
fistp
and
adc
ds
sub
sahf
in
sbb
(bad)
test
mov
cld
or
out
xlat
rcr
pusha
popf
sar
stc
je
inc
(bad)
loopne
mov
dec
daa
in
ins
xchg
xchg
test
mov
loopne
mov
icebp
mov
das
clc
adc
dec
sbb
mov
movs
jb
mov
mov
mov
mov
jge
shl
xor
ror
inc
dec
xchg
dec
add
push
mov
jp
or
mov
mov
not
jmp
jnp
mov
inc
loop
pushf
fcmovnb
imul
xchg
sub
sti
aam
and
(bad)
pop
jno
movs
(bad)
and
sub
mov
mov
or
xor
push
fld
jp
int
cmp
inc
cmp
sbb
mov
sbb
push
stos
dec
les
(bad)
nop
loopne
into
pop
mov
inc
sub
push
fistp
bound
and
lods
and
pop
sbb
es
mov
add
mov
arpl
add
mov
xchg
xchg
nop
in
test
mov
bound
jmp
sbb
ins
mov
sbb
ins
neg
xor
sub
cmp
push
xchg
jl
hlt
clc
outs
mov
jle
or
(bad)
call
cmp
or
jecxz
in
jle
xchg
mov
(bad)
ins
movs
lods
sub
in
pop
ja
push
xchg
and
idiv
mov
ret
(bad)
jo
(bad)
lods
fcmovne
pop
push
xor
xor
jmp
mov
hlt
fisubr
mov
mov
sub
div
(bad)
in
sub
inc
xchg
aad
sbb
pusha
ss
xchg
mov
sti
retf
lea
out
dec
add
mov
add
jp
add
mov
js
enter
fld
push
aas
shl
cmp
retf
sub
jg
cs
jnp
das
dec
adc
sub
jmp
call
cmps
lods
pusha
je
pop
add
(bad)
lock
inc
push
test
cli
jle
and
or
nop
xor
push
(bad)
cli
loop
cmp
dec
shl
ja
and
loope
pusha
dec
add
adc
mov
test
imul
das
ret
mov
fidivr
adc
xor
es
inc
dec
fnsave
dec
leave
sar
pcmpeqd
in
push
mov
push
aad
and
mov
push
dec
inc
cs
cmps
push
cmp
out
adc
or
or
stos
into
(bad)
jl
and
and
mov
adc
sub
mov
sbb
shr
sub
jge
add
(bad)
adc
cdq
fadd
jl
ret
dec
pop
movs
pop
(bad)
xor
pop
mov
ror
shl
sub
jb
mov
or
xchg
jmp
mov
pop
ret
nop
leave
les
mov
mov
dec
aas
mov
rcl
retf
shl
push
rol
mov
add
xchg
out
pop
push
imul
cld
in
call
fwait
or
mov
(bad)
repnz
and
mov
cmp
into
out
jbe
xchg
ffreep
xchg
jno
jp
pusha
push
mov
jmp
dec
jo
mov
mov
dec
jo
sub
ror
xchg
loopne
xchg
les
ret
stos
xor
pop
scas
cmp
imul
add
sub
jmp
push
mov
sub
mov
jns
adc
xlat
or
dec
cmp
in
or
mov
mov
lock
pop
or
cmc
or
xor
retf
dec
fmul
pop
addr16
push
(bad)
sub
xchg
pop
outs
ss
fwait
loopne
fadd
cmp
mov
data16
nop
rcr
loope
loopne
push
cld
cmc
and
ret
sub
adc
ja
add
xchg
in
enter
retf
sbb
sbb
stos
dec
mov
mov
hlt
or
xchg
inc
and
xchg
jl
add
push
dec
js
mov
stos
and
(bad)
xchg
iret
push
sbb
loopne
xor
cli
frstor
lahf
xchg
cmc
or
or
mov
retf
icebp
es
xchg
mov
in
fld
jecxz
leave
movs
in
and
gs
stc
jnp
sbb
retf
pop
xchg
in
adc
call
mov
nop
jg
and
inc
mov
cmp
dec
into
xor
jne
mov
jnp
jbe
and
mov
ret
add
adc
retf
adc
push
inc
shl
cmc
in
inc
fxch
enter
rol
popa
pusha
cmp
xchg
ins
jae
ds
jecxz
xor
ss
sahf
ins
movs
push
mov
add
add
push
cmp
push
dec
xchg
jge
popa
ds
mov
and
faddp
daa
push
dec
sub
push
push
sbb
sub
aaa
ret
xor
in
cdq
pop
mov
xlat
js
dec
dec
(bad)
xchg
dec
xor
push
adc
push
add
rcr
mov
in
mov
es
xchg
pop
lods
adc
adc
imul
(bad)
cmps
rcr
sub
ss
pop
sbb
retf
popf
or
int3
dec
mov
sahf
inc
sbb
fsub
stos
dec
ror
push
loope
ret
sub
aaa
xchg
dec
loop
loopne
sub
adc
shl
retf
mov
dec
outs
mov
stos
xor
mov
fisub
mov
pop
xor
or
xchg
retf
and
sbb
add
test
xor
mov
daa
push
mov
lock
(bad)
mov
sub
pop
int3
add
adc
xor
(bad)
fsub
push
adc
stc
(bad)
pop
jmp
sbb
lods
gs
cmc
imul
inc
dec
aam
jo
mov
xchg
push
and
outs
imul
pop
xchg
xor
sbb
jno
in
pop
mov
mov
leave
call
add
xor
mov
out
inc
jno
cmc
or
cmp
mov
fcmovu
xchg
adc
and
cmp
int3
sahf
jmp
sbb
test
aaa
jge
adc
adc
inc
aas
cmp
addr16
pop
xchg
pop
jnp
add
retf
(bad)
cmp
rol
xor
jo
mov
push
(bad)
cmp
adc
xchg
xor
in
mov
cmp
mov
icebp
dec
xchg
mov
cmp
xor
jl
and
jo
mov
mov
mov
add
push
push
stc
test
and
mov
call
lods
lds
inc
loope
inc
test
ror
das
inc
xor
sub
sbb
xchg
sbb
xchg
gs
aam
fistp
cmp
lea
xor
stos
test
xor
mov
jbe
adc
test
ds
jns
push
mov
loope
jecxz
and
push
popa
loop
rcr
or
mov
ret
fistp
cmp
sar
dec
jp
push
popf
fadd
jb
sub
imul
mov
xchg
sub
cld
lock
or
les
dec
jmp
sbb
xchg
fcom
lods
push
out
pop
jne
xchg
fimul
dec
xchg
in
push
xchg
inc
or
jo
repnz
cmp
mov
cmp
retf
pop
dec
adc
and
lea
(bad)
adc
dec
test
test
shl
pop
out
dec
pop
mov
sbb
fsub
icebp
jg
and
pop
sbb
xor
popa
sbb
cmp
adc
pusha
cmp
jg
mov
popf
out
cli
push
sub
pop
xlat
aad
sub
dec
lea
call
fild
or
or
push
rcl
jae
inc
xchg
sahf
(bad)
mov
jecxz
pop
repz
pop
dec
pop
mov
jp
push
jne
fisubr
mov
retf
int3
ror
sub
inc
fwait
ror
push
test
and
setb
or
sbb
mov
or
pop
cmp
mov
aaa
hlt
xor
dec
test
xor
fs
iret
sbb
ret
push
setb
movs
sbb
adc
and
pop
xchg
fwait
adc
(bad)
(bad)
xchg
int3
(bad)
popf
add
test
cwde
lods
pop
and
and
je
into
mov
cmp
(bad)
pop
mov
and
fisub
cmp
aam
popa
inc
sub
xor
(bad)
sbb
jno
cmc
js
add
jle
lea
push
and
inc
cwde
daa
jmp
xor
adc
aad
popa
idiv
jl
inc
adc
in
dec
and
jp
mov
xor
sti
loope
mul
push
inc
cmp
loopne
pop
fmulp
fstp
sti
hlt
imul
inc
adc
or
and
mov
inc
addr16
dec
push
mov
mov
ja
iret
lock
sar
jmp
pushf
popa
bound
inc
push
pushf
add
cmc
mov
add
jnp
enter
shr
add
cmp
jl
pop
cld
clc
mov
mov
cmp
jne
pop
ja
pop
sbb
sbb
mov
pop
cmp
push
aas
pop
cmps
lods
mul
push
rcr
mov
xor
arpl
fsub
lds
and
add
or
mov
mov
fild
mov
adc
add
imul
(bad)
pop
sub
fcom
sub
xchg
fsubrp
sbb
xchg
mov
out
sbb
mov
popa
or
std
or
imul
push
das
sbb
cmps
out
in
iret
test
or
add
jns
mov
push
popa
jo
fcom
popa
cmps
xlat
mov
dec
ins
sub
hlt
mov
outs
dec
(bad)
sbb
je
dec
loopne
pop
arpl
popw
push
push
sbb
int
mov
ss
add
imul
dec
ret
aam
sahf
cmp
fadd
loopne
out
test
jge
add
xchg
mov
or
dec
in
dec
or
ds
jae
adc
or
mov
mov
imul
test
cmps
jmp
repz
push
cdq
xlat
lods
int3
jg
mov
sar
nop
into
(bad)
mov
popf
jbe
dec
fdiv
js
mov
jge
fisttp
clc
add
sar
dec
test
inc
stos
cmp
pusha
dec
sub
test
test
sub
pop
in
xchg
jle
out
inc
inc
ja
mov
xchg
hlt
lods
nop
fisubr
inc
clc
mov
xor
js
cli
mov
pop
js
sbb
mov
test
sub
imul
ret
xlat
push
outs
mov
cmp
data16
pop
pop
scas
(bad)
push
sahf
ins
iret
sbb
add
aaa
loopne
pop
(bad)
ret
ret
mov
lock
pop
pop
ja
aam
adc
inc
push
je
push
cmp
fwait
aad
pushf
xlat
jbe
push
mov
lds
(bad)
xlat
pop
or
push
jne
int
stos
clc
(bad)
xchg
jo
pop
mov
ficomp
dec
hlt
shl
mov
ror
lahf
pop
mov
sbb
mov
pop
cld
mov
pop
in
movs
add
xor
or
inc
xor
adc
stc
jmp
aas
jne
stos
lock
inc
out
sub
call
lds
xchg
jbe
stc
adc
fcom
retf
mov
fstp
loope
cmp
add
xchg
lock
inc
mov
and
and
fild
test
or
in
push
sti
jp
or
shl
sbb
push
push
cmp
in
jo
cmp
test
sbb
mov
xchg
inc
cmp
cmp
sar
lds
adc
cmp
adc
das
cmp
aam
int
mov
(bad)
in
mov
pop
pop
pop
and
es
imul
xor
push
out
clc
sbb
mov
cmp
jl
push
fcomp
ror
push
daa
stos
lea
ja
int
mov
jmp
jge
in
mov
xchg
adc
inc
hlt
dec
les
ror
mov
mov
popf
xor
lods
js
jmp
push
popf
enter
xor
enter
adc
add
fsub
imul
sbb
and
lahf
fimul
retf
pop
nop
cmp
dec
mov
icebp
loopne
arpl
icebp
imul
jns
sbb
push
pop
leave
sbb
sahf
or
mov
(bad)
xchg
xchg
ins
arpl
mov
mov
(bad)
mov
mov
inc
scas
add
stc
jb
mov
mov
xchg
mov
addr16
pop
xchg
jno
pusha
out
jno
imul
stos
push
or
rsqrtps
mov
push
cmps
jp
inc
call
sub
leave
sbb
addr16
dec
or
out
jo
xchg
pop
xor
aam
push
ret
mov
mov
out
push
(bad)
xchg
scas
outs
sahf
aas
les
push
je
pop
pop
in
pop
xchg
sbb
arpl
mov
fsub
sbb
addr16
mov
fucomp
out
add
push
std
(bad)
in
xchg
leave
lds
xor
or
shl
jmp
test
sbb
mov
rcr
mov
pushf
xchg
xor
out
push
or
mov
push
push
pop
sub
aas
and
addr16
sub
aad
push
inc
dec
push
retf
shr
shl
push
loop
add
adc
add
adc
dec
popf
stos
scas
mov
inc
xor
cmps
data16
lea
sahf
xor
aad
push
add
cmps
cs
add
aad
or
adc
cli
cmps
mov
mov
jnp
rcl
sub
aaa
popa
ja
in
into
data16
scas
push
lods
xlat
lods
sbb
pop
mov
push
mov
rcl
pop
jge
sbb
mov
loope
dec
call
and
mov
inc
mov
pop
mov
stos
lods
dec
inc
repnz
jp
ret
xchg
pop
ins
xor
movs
inc
mov
xor
test
aaa
in
mov
je
fsubr
fucomi
mov
int3
cmps
mov
pop
dec
jno
jbe
popa
adc
add
retf
jb
sti
lods
adc
repz
jl
add
retf
cld
das
sbb
dec
aam
shl
mov
cmp
leavew
cmps
repz
(bad)
fstp
cmp
add
mov
mov
mov
fcmovnb
pop
cmp
pop
push
sub
gs
inc
jmp
stos
movs
inc
addr16
xchg
mov
xor
cs
(bad)
rol
push
imul
push
cwde
(bad)
call
jmp
out
pop
(bad)
or
aam
in
pop
xchg
fwait
pop
in
test
fsubr
sub
movs
and
cmovno
cwde
scas
xlat
lods
push
ja
and
xor
mov
pop
push
push
push
mov
lods
sbb
sbb
pop
imul
or
add
inc
scas
fisubr
pop
adc
jnp
je
xor
add
jl
push
scas
ds
daa
fldl2t
loopne
out
xor
dec
sbb
clc
ror
sbb
fwait
pop
pop
fsub
xchg
mov
scas
icebp
xchg
shl
sbb
test
xor
sbb
cli
xchg
or
push
cmp
mov
popf
and
jg
dec
or
or
sub
cmp
inc
shr
dec
sti
and
jmp
cmps
inc
iret
inc
movs
cmc
imul
imul
adc
inc
mov
lea
adc
add
inc
retf
outs
lds
adc
ins
rcr
dec
out
rcl
cmp
nop
imul
adc
sub
test
pop
aaa
or
mov
pop
cmp
je
xchg
in
push
aaa
(bad)
fldenv
pop
pop
dec
icebp
dec
jge
shr
enter
test
loope
call
jmp
add
mov
jge
ror
lods
dec
(bad)
jmp
stos
push
mov
ret
int3
cdq
mov
xchg
sbb
fprem
nop
dec
mov
out
push
cmp
pop
test
mov
pop
mov
dec
sbb
popa
fcmovnb
call
pop
cmp
retf
mov
imul
in
and
push
mov
mov
mov
not
repnz
test
out
outs
cmp
imul
ret
cmp
push
aas
add
mov
mov
xor
fs
sbb
xchg
push
cmc
and
mov
cmp
mov
xor
dec
xchg
xor
xor
cs
cld
pushf
outs
xchg
cmp
jne
xor
lea
es
pop
xchg
push
pop
iret
push
sub
movs
jne
mov
inc
xor
jno
xor
(bad)
scas
lods
push
into
ja
inc
dec
or
mov
aad
mov
push
pop
or
cmp
(bad)
in
xchg
inc
into
aaa
cmps
(bad)
fcom
adc
push
mov
retf
inc
retf
nop
in
nop
imul
mul
push
mov
sub
xor
mov
jns
lods
xlat
sti
sub
xor
icebp
es
sar
cwde
int
mov
in
retf
aaa
imul
add
sbb
and
xchg
cmp
(bad)
int
push
and
mov
add
mov
rcl
add
xchg
pop
mov
test
cmps
xchg
mul
mov
inc
push
stos
fild
outs
pop
push
mov
sbb
push
push
adc
and
inc
in
scas
jne
cmp
sbb
cmc
cli
pop
(bad)
push
adc
ins
inc
xchg
rol
in
fld
sbb
sub
adc
adc
xor
data16
add
pop
icebp
and
mov
test
dec
mov
or
mov
repz
push
test
sub
pop
mov
sub
inc
xor
rol
xchg
shr
out
cmp
jae
jge
scas
cmp
dec
jbe
cmps
out
and
or
stos
and
mov
xor
(bad)
pop
shl
mov
scas
sbb
push
push
jne
sub
fldenv
sbb
stc
adc
mov
sbb
outs
ins
sbb
inc
xchg
repz
or
push
(bad)
cmp
(bad)
push
cmps
test
xor
xor
ret
out
add
shr
fsub
gs
jecxz
lods
mov
shl
into
pop
test
sbb
mov
xchg
inc
pop
mov
cs
scas
xor
(bad)
hlt
push
sbb
mov
mov
add
lods
xchg
or
fisttp
outs
push
push
hlt
or
inc
or
mov
shl
sbb
mov
std
lea
xor
stos
cmp
loop
mov
pushf
(bad)
jg
cmp
jno
cmp
dec
add
stos
cmp
and
sbb
dec
fstp
sti
in
dec
cmp
sub
cli
jne
js
inc
inc
out
push
popa
int
add
pop
aam
sbb
mov
inc
or
pop
mov
and
jnp
jecxz
inc
mov
mov
call
inc
jns
in
mov
pop
sub
lahf
ins
inc
jb
pop
cmp
cld
ja
or
xchg
xlat
xchg
xor
xchg
sbb
push
scas
pop
pop
xchg
(bad)
jo
popa
sbb
or
fimul
add
ret
nop
jge
mov
mov
sar
sbb
mov
call
pop
test
push
rep
and
in
nop
fdivr
cld
mov
push
into
cmp
push
icebp
out
and
or
sti
mov
out
inc
(bad)
mov
repz
popa
sti
add
je
jmp
and
push
scas
and
push
arpl
pop
(bad)
fdiv
push
push
xor
ret
repnz
mov
jb
out
stc
sbb
jecxz
cmp
mov
xchg
mov
xor
jbe
push
lahf
loop
add
jecxz
pusha
pop
cmp
loope
call
popf
xchg
je
add
int3
sahf
aas
ss
fidivr
fmul
dec
xor
daa
sub
sbb
jmp
adc
cmp
push
add
jb
bound
jl
sub
leave
aam
jg
jae
xchg
inc
cmp
pop
retf
pop
xor
sub
push
in
inc
loopne
jns
shl
test
hlt
nop
scas
xor
xchg
jp
loopne
addr16
ret
cmps
data16
lock
repz
out
add
mov
xor
xor
out
ficom
dec
push
test
cmc
adc
sbb
mov
xchg
leave
loop
mov
sahf
cmps
loop
lds
xor
loopne
pushf
shr
call
jae
lds
int3
push
inc
and
jo
sbb
jmp
inc
shl
xor
in
loope
ret
jge
int3
sbb
sar
and
inc
loop
retf
in
sar
iret
je
push
inc
mov
and
sub
mov
shl
mov
(bad)
fild
xchg
cli
sub
push
inc
sub
sub
xchg
leave
iret
xchg
fidiv
jbe
sub
(bad)
aam
push
pop
mov
xchg
ror
cmp
sub
or
and
(bad)
movs
lods
fist
das
hlt
sub
test
mov
sub
mov
int
push
add
les
lock
add
inc
cmp
or
or
inc
pop
arpl
sbb
dec
cwde
push
ret
push
mov
sti
test
adc
ja
daa
cmp
push
xchg
mov
xchg
xor
arpl
in
and
cs
mov
or
mul
push
cdq
aad
pop
and
mov
pop
inc
adc
mov
les
sub
jne
pusha
pop
jne
fadd
dec
push
into
or
lds
and
mov
and
sbb
add
repz
sub
xchg
mov
push
xlat
pop
or
test
fnstenv
add
jae
cmp
icebp
cmp
fild
fst
outs
lods
rcl
imul
cmp
outs
dec
cli
push
popf
test
mov
push
int
xchg
imul
mov
pop
aad
repnz
sub
shr
inc
pop
sbb
fistp
or
jmp
xchg
aad
sbb
adc
inc
and
arpl
sbb
aas
cld
std
and
pop
and
test
or
lahf
int3
cmp
jb
fcomp
mov
(bad)
or
test
inc
pop
mov
jns
int
daa
cmp
xor
jo
jg
sti
jb
mov
push
ins
mov
movs
dec
int
mov
(bad)
cmps
cmp
in
popa
pop
push
adc
jmp
(bad)
xchg
in
push
aad
jl
xchg
adc
cmps
jo
int
sub
inc
inc
or
icebp
or
rol
clc
or
or
sahf
mov
inc
cli
ret
push
mov
not
sbb
push
xchg
add
sbb
(bad)
test
lods
out
mov
ret
(bad)
retf
out
aas
lock
daa
enter
inc
mov
or
add
xchg
not
icebp
and
and
adc
fsub
out
add
out
repnz
cmp
sbb
ror
mov
mul
fild
mov
ror
xchg
in
stc
push
cdq
jmp
and
out
sahf
nop
call
xor
jmp
push
fimul
les
movs
je
sahf
das
repz
das
bound
cmps
pop
push
mov
sub
add
push
add
mov
jno
sbb
pop
jns
inc
jns
and
fmulp
cmovp
push
push
rcl
cmps
sbb
cmc
jb
fidiv
mov
xchg
icebp
inc
push
lea
push
xor
mov
int
lock
mov
clc
call
mov
outs
inc
jnp
inc
push
mov
or
ja
mov
jnp
arpl
xchg
cmp
ret
push
mov
and
jne
and
rcr
rol
push
out
out
or
dec
jno
loop
or
lahf
mov
jmp
add
jb
(bad)
fs
movs
add
rcl
movs
xchg
rcl
js
leave
out
cmp
mov
das
lods
in
mov
sar
push
gs
and
std
loope
or
lods
push
pop
mov
retf
scas
xchg
icebp
jg
shr
sar
aad
clc
sbb
repz
sub
xor
adc
cmps
ret
adc
shl
jl
pop
fsub
es
adc
in
movs
adc
stos
mov
(bad)
push
xchg
ror
and
jge
cmp
xchg
lea
(bad)
mov
outs
push
jo
(bad)
or
sti
scas
fcmovne
pop
mov
out
xchg
imul
gs
pusha
dec
arpl
xor
dec
stc
repnz
rcl
xchg
ins
ins
or
adc
push
adc
cmp
mov
xchg
mov
pop
mov
ret
xchg
dec
mov
push
mov
sub
mov
mov
xchg
imul
jmp
stos
std
add
loop
xor
push
ret
mov
rcl
aas
xor
retf
jl
mov
dec
mov
aam
(bad)
aas
popf
test
or
jmp
sbb
mov
ficom
and
mov
es
loope
das
sti
and
push
dec
bound
mov
jb
xor
sbb
lods
cld
xchg
lock
repnz
xchg
jle
cdq
xlat
lods
mov
and
adc
push
jo
mov
aam
scas
test
push
retf
mov
pop
jle
and
div
jp
(bad)
jge
jmp
xchg
fisubr
inc
popa
leave
mov
shr
sbb
nop
mov
adc
mov
push
add
mov
dec
xchg
jmp
sbb
inc
int3
jb
lods
mov
ins
xor
pop
cld
pop
mov
and
(bad)
stos
inc
xchg
arpl
xchg
in
and
stos
je
pusha
mov
not
sub
mov
call
std
pusha
add
in
scas
imul
mov
nop
bound
inc
jb
mov
(bad)
pop
outs
jle
pop
pop
push
fimul
mov
dec
push
inc
mov
fild
cdq
mov
push
data16
mov
or
repnz
ror
dec
leave
cmps
adc
cmp
mov
mov
jbe
push
jmp
imul
pop
ret
adc
and
cli
stc
mov
jno
nop
test
push
or
lods
popf
cli
ss
sub
ins
mul
inc
jge
xchg
pop
cli
push
xor
dec
pop
and
lods
or
cmp
mov
leave
ja
fstp
push
stos
pop
outs
loope
test
mov
ss
loop
xor
pushf
ret
stc
fcmovnu
loopne
push
and
mov
stos
add
cwde
xchg
ja
cld
popf
jbe
mov
inc
icebp
out
add
fs
icebp
lea
addr16
inc
sub
mov
pop
sub
rcl
bound
push
xchg
pop
mov
pop
pop
xor
or
mov
mov
repz
mov
mov
std
stos
int
add
(bad)
test
pop
shl
jmp
cmp
jne
xlat
xor
jge
mov
retf
inc
xor
test
mov
aaa
inc
or
or
jo
or
jp
je
pop
mov
adc
rcl
mul
into
xchg
hlt
scas
cwde
gs
pop
ins
cmp
repnz
dec
push
adc
adc
and
cmp
in
outs
inc
clc
shl
into
ds
mov
mov
popa
mov
shl
sbb
cmc
push
mov
movs
jmp
int
and
push
stc
pusha
jge
(bad)
jle
cmp
in
(bad)
adc
pop
add
pop
idiv
inc
(bad)
jae
leave
ror
and
adc
cmps
pop
out
dec
adc
sub
scas
mov
call
or
inc
jmp
and
push
sar
add
cmp
fnstsw
dec
out
and
sbb
mov
enter
or
test
imul
and
out
sub
mov
es
xlat
pop
out
scas
push
or
test
dec
into
cmps
mov
test
mov
add
cmp
jns
out
mov
push
cmps
(bad)
in
lods
xchg
cmp
iret
jmp
movs
int
and
add
cmc
pop
or
push
or
mov
add
mov
ins
loopne
mov
lea
push
(bad)
fsubrp
push
and
les
add
jle
(bad)
mov
cs
fbstp
mov
add
and
jp
fucomi
jmp
mov
pushf
shr
pushf
sub
enter
test
push
jmp
push
inc
jo
push
pop
and
dec
pushf
ficom
mov
enter
fstp
(bad)
fwait
adc
(bad)
aad
int3
es
push
dec
jge
cmp
dec
jmp
sti
add
xor
pop
add
dec
shl
retf
nop
push
jecxz
scas
iret
adc
add
aam
fs
xor
sbb
cli
jnp
cmp
sahf
scas
(bad)
out
mov
or
xor
ss
xor
pop
inc
pop
mov
jmp
sub
pusha
sub
sbb
push
mov
inc
sbb
jbe
rcl
sub
xchg
jmp
mov
stc
jns
sar
es
loop
or
adc
ret
outs
je
mov
jg
sahf
pop
stos
lahf
in
add
push
jle
lock
adc
icebp
sbb
push
retf
push
push
in
sub
int
js
test
sub
iret
int
xchg
cmps
lahf
pop
and
cmp
mov
fcmovnbe
adc
rcl
das
test
pop
mov
out
out
add
sbb
inc
adc
push
or
mov
sbb
jmp
or
add
mov
cmp
and
loopne
sahf
push
dec
push
lea
jle
push
data16
outs
retf
daa
shr
repz
push
inc
dec
xchg
lods
cmp
ret
and
adc
or
add
data16
xchg
cmc
out
imul
mov
pop
adc
mov
in
mov
adc
popa
xchg
int
cmp
xor
rcr
clc
sar
and
xor
cli
xor
repnz
je
(bad)
popw
dec
popa
mov
mov
sub
popf
test
adc
shl
stos
pop
ja
mov
scas
mov
mov
(bad)
cld
cld
je
repz
lahf
loopne
shl
inc
lea
cs
dec
fsubr
sar
cmp
jae
xchg
jecxz
ja
push
data16
dec
rcl
fild
test
leave
inc
dec
addr16
mov
std
pop
imul
cmp
jae
inc
sub
out
adc
xchg
adc
mov
push
adc
ss
pop
test
push
ja
inc
aad
mov
fnstsw
xchg
dec
fldenv
cdq
cdq
jmp
inc
jns
mov
(bad)
cwde
fisttp
dec
jbe
pop
fs
add
or
daa
div
hlt
outs
call
addr16
js
mov
and
int3
cmp
mov
cwde
vpcmpeqb
dec
sub
mov
add
push
out
(bad)
fcmove
cmp
mov
add
loopne
push
cwde
dec
in
pop
test
imul
nop
xchg
or
push
int3
cmp
add
jb
inc
jo
mov
imul
mov
and
xlat
test
nop
xchg
test
ret
pop
cld
daa
cmp
mov
inc
dec
cmp
outs
scas
mov
rol
push
rcl
mov
pop
in
fptan
mov
out
or
dec
pop
jg
jo
cmc
out
xor
ret
sti
scas
repnz
pop
push
add
cmp
pop
mov
add
inc
scas
test
jne
mov
xchg
fwait
sbb
mov
scas
in
nop
mov
xchg
(bad)
ret
repnz
movs
pop
jp
push
sub
inc
fsub
jno
fiadd
pop
test
jp
jl
pop
inc
inc
or
in
arpl
sbb
cs
ds
mov
(bad)
lahf
add
push
nop
jle
or
cmps
cmps
popf
push
jmp
adc
mov
fiadd
int
mov
mov
cdq
mov
in
int
into
cwde
lds
arpl
or
test
retf
out
push
mov
jne
xor
ret
and
add
lds
mov
cmp
jnp
fdiv
mov
xchg
out
test
push
nop
nop
adc
mov
pop
call
mov
dec
retf
clc
daa
stos
aas
adc
adc
inc
push
mov
xor
pop
or
jp
in
pop
mov
push
xchg
aaa
test
or
(bad)
es
cmps
fnstcw
dec
sbb
stos
pop
ins
sbb
ds
jg
push
xchg
enter
xor
and
test
fisttp
push
sti
mov
inc
xchg
pop
cmp
mov
out
fst
mov
xchg
lahf
and
inc
xchg
nop
in
aad
add
into
adc
mov
ss
jo
std
and
add
push
mov
jb
mov
inc
mov
lods
stc
and
mov
mov
std
dec
pop
sub
xchg
jno
in
cld
xor
adc
and
aam
xor
adc
(bad)
sti
push
add
(bad)
fxch
inc
xchg
dec
sub
pushf
pop
es
dec
test
xor
scas
test
jb
adc
mov
adc
nop
lock
mov
inc
mov
jmp
aaa
cwde
pusha
sbb
aad
or
push
aam
fcomp
mov
xchg
jp
inc
sar
xchg
icebp
and
inc
mov
cs
fidivr
ret
mov
rol
out
aad
pop
in
mov
xor
div
loop
sbb
ss
jno
(bad)
mov
ss
xor
pusha
mov
xchg
popf
sub
ss
int3
sub
mov
(bad)
js
xchg
jmp
mov
cli
jne
pop
shl
in
adc
ficom
ret
shr
imul
cs
rcr
or
adc
xchg
ss
inc
sti
pop
push
jmp
and
mov
(bad)
fs
dec
xchg
mov
add
das
jg
and
mov
push
hlt
sbb
fdiv
sbb
mov
cdq
icebp
push
test
mov
stc
push
das
(bad)
push
mov
pusha
in
xchg
into
ss
mov
pop
out
cmp
retf
jae
aaa
out
aas
sub
mov
jae
xchg
pop
fwait
inc
sti
jg
rol
jne
or
sti
mov
inc
mov
mov
inc
add
xor
loopne
xchg
mov
leave
jl
mov
(bad)
movs
stos
out
jg
inc
mov
pop
jae
mov
jns
push
dec
sahf
xor
push
cmps
push
sbb
jecxz
push
push
cmp
inc
xchg
or
ror
shl
mov
mov
daa
and
mov
or
aad
aaa
jge
rcl
xchg
jge
into
aas
pop
push
icebp
xchg
mov
addr16
vpackssdw
ins
gs
jge
daa
mov
ficom
xor
popf
out
mov
push
shufps
mov
pop
add
nop
imul
push
mov
stc
sahf
movs
adc
loope
jno
jnp
add
shr
xor
ins
sub
xor
sbb
lods
or
push
add
adc
pushf
aad
push
fcmovnbe
jl
and
dec
in
jle
pop
and
and
das
fwait
dec
or
pop
jb
push
fbld
jne
sub
xchg
test
daa
shr
sub
add
push
jns
(bad)
cmp
sub
pop
movs
adc
jo
add
mov
inc
addr16
pop
xor
xchg
add
sbb
ret
jmp
cmp
mov
outs
pusha
call
ror
push
loop
adc
sub
pushf
fidivr
pop
ds
pop
test
add
scas
pop
jno
es
mov
out
pop
add
add
aaa
push
mov
and
out
mov
into
outs
in
in
cmps
scas
mov
hlt
mov
aas
push
test
jae
enter
(bad)
pop
mov
or
cmc
add
inc
rcl
mov
movs
loope
jg
mov
(bad)
out
jmp
sub
dec
jge
lea
icebp
(bad)
icebp
das
out
jns
out
pause
adc
xor
out
mov
jge
mov
ficom
inc
sar
or
mov
pop
xlat
and
nop
jmp
xor
mov
mov
in
loop
inc
loope
dec
shl
retf
inc
jne
mov
movs
dec
xor
xor
test
xor
add
jp
cmp
fdivrp
mov
push
add
int3
in
repnz
mov
das
nop
fscale
dec
scas
dec
mov
sbb
mov
fsub
jge
movs
inc
outs
mov
mov
cmps
sbb
fimul
adc
mov
stos
jl
push
in
inc
pop
fs
jns
mov
dec
add
pop
xlat
mov
jmp
mov
cvtpi2ps
out
in
lock
movsx
fwait
out
mov
and
dec
adc
mov
mov
cmps
pusha
pop
cmp
pushf
ret
(bad)
inc
add
call
mov
push
add
adc
rcr
or
jge
jp
sbb
mov
push
dec
ror
sub
psubd
inc
pop
test
jecxz
xor
jmp
mov
mov
or
fiadd
cli
xchg
jp
sub
mov
ins
inc
mov
push
lds
retf
pop
inc
movs
add
int
inc
ffree
jmp
mov
jno
xchg
ins
or
mov
mov
mov
mov
repnz
push
pusha
sti
cwde
sub
xor
aas
adc
popa
std
cdq
dec
out
mov
and
sub
in
fwait
inc
imul
and
in
sahf
or
adc
sbb
les
pop
into
lea
in
rol
xchg
ins
retf
sub
jno
mov
and
scas
pop
and
lock
test
xchg
inc
push
ret
jg
push
mov
push
retf
push
and
imul
fist
inc
test
je
int
daa
loopne
jo
mov
dec
cmp
stc
xor
pop
mov
retf
into
xor
fld
mov
xor
jmp
sbb
stos
dec
mov
or
nop
fmul
cdq
repz
xchg
xchg
cmp
pop
adc
xor
adc
pop
xor
cmp
ror
jnp
jns
cmps
repnz
lahf
lods
sahf
sbb
es
daa
movs
and
mov
ins
lock
cmp
mov
adc
loop
mov
outs
jle
ficomp
cmps
mov
push
jbe
or
dec
aas
lods
jl
fstp
cmps
cld
jno
pop
or
js
cli
push
(bad)
push
mov
movs
add
dec
sbb
sahf
xor
xchg
shl
loope
add
dec
sbb
scas
or
enter
jmp
xor
mov
pop
scas
jno
add
out
fsub
loopne
je
call
fisttp
jae
mov
pop
clc
xor
inc
inc
pop
pop
rcr
test
into
popa
xor
sahf
pop
mov
out
mov
scas
jp
cs
int3
daa
sub
mov
in
sub
cmp
scas
mov
mov
jmp
cmp
sub
in
pop
pop
mov
xor
scas
mov
ins
je
out
addr16
inc
pop
or
test
enter
sahf
dec
dec
repz
mov
fild
inc
add
out
call
dec
or
or
(bad)
xlat
sbb
push
into
outs
and
popf
cmp
jecxz
dec
retf
int
sbb
inc
fadd
fstp
shl
and
jp
jnp
int
xchg
lds
inc
xchg
push
mov
push
jp
lods
push
add
fs
mov
and
pop
xchg
std
rcr
sbb
inc
xchg
ja
ds
ret
or
std
inc
ds
fstp
iret
(bad)
cdq
call
gs
shl
xchg
sub
fstp
xor
pop
mov
retf
cmc
ins
dec
int
xchg
jns
inc
xchg
sub
call
xor
cwde
mov
jbe
dec
xor
xor
mov
jg
rcr
cmps
mov
sub
add
call
mov
or
imul
mov
stos
mov
repnz
mov
mov
pop
scas
pop
shr
jl
test
xchg
rol
mov
mov
adc
(bad)
xor
inc
push
and
fmul
pop
or
and
push
stos
arpl
jle
cmc
pop
stos
mov
fcomp
mov
mov
and
add
dec
or
test
movs
inc
icebp
aad
dec
xchg
push
dec
add
loop
mov
sbb
out
xchg
add
out
dec
into
pop
push
pop
cmps
bound
jle
sbb
cwde
or
in
cs
out
inc
outs
and
imul
mulps
jns
loopne
push
(bad)
mov
pop
call
jnp
int
mov
pop
pop
adc
mov
(bad)
aam
out
mov
pop
and
xchg
pushf
add
add
mov
xor
outs
fild
fstp
popa
shl
mov
(bad)
pusha
xor
mov
imul
imul
aad
loope
fadd
mov
adc
call
stc
shl
cld
cmps
into
(bad)
icebp
(bad)
ret
xlat
jmp
movs
es
test
mov
aad
jb
pop
jmp
ja
xchg
sar
xor
xor
cmps
(bad)
js
dec
inc
sub
in
sbb
mov
imul
xlat
pop
pop
dec
scas
popf
cmp
jno
mov
xor
dec
loop
test
cmp
mov
jb
in
cmp
out
lea
xor
das
out
add
rcl
sbb
pop
mov
or
pop
jg
cdq
fist
inc
sub
retf
test
ins
mov
jno
or
repz
xchg
(bad)
lods
out
ret
adc
xchg
and
lea
or
mov
inc
mov
test
push
mov
and
xchg
push
fsubr
sbb
or
xlat
stos
jmp
jmp
sbb
imul
bound
cmp
popa
jne
ret
scas
das
popa
stos
shl
sub
mov
or
test
add
stos
dec
movs
jle
pop
mov
fwait
pop
jno
enter
mov
dec
pop
sub
push
or
xor
pop
out
inc
(bad)
shl
repz
and
xchg
(bad)
fistp
pop
xor
pop
shl
lock
cs
mov
xor
xchg
data16
call
jmp
sub
cdq
pop
adc
mov
or
clc
dec
push
mov
(bad)
xchg
mov
mov
ds
inc
mov
je
(bad)
enter
mov
out
sbb
in
push
aaa
aam
mov
repnz
retf
add
cmps
or
pop
outs
mov
add
out
sub
hlt
mov
test
scas
fisttp
shl
add
mov
mov
cdq
inc
push
cwde
scas
addr16
out
cmps
(bad)
or
stos
and
outs
or
in
mov
adc
xchg
rcr
inc
add
xchg
idiv
inc
jmp
call
jae
mov
jp
cmp
hlt
adc
adc
mov
jnp
rcl
xor
retf
fwait
aaa
xor
int
(bad)
dec
push
add
test
jb
ss
pop
mov
adc
cmp
adc
mov
in
xchg
in
mov
mov
hlt
aaa
rol
dec
push
sub
es
cmp
and
test
test
cmp
pop
mov
ins
ror
call
div
push
jo
mov
lock
in
mov
paddd
or
stc
in
jb
pop
bound
test
stos
mov
sbb
cmps
nop
and
sub
jecxz
dec
sub
rcl
push
dec
xchg
mov
mov
dec
cli
sub
(bad)
(bad)
cmp
in
sbb
add
lahf
inc
(bad)
pop
lods
pop
or
mov
imul
stc
sahf
xchg
push
and
lea
mov
mov
pop
mov
push
outs
and
xor
popa
and
push
cs
nop
xor
aas
cmps
aad
xor
cmp
shl
sar
cli
xchg
inc
adc
call
jp
addr16
(bad)
out
dec
cmc
stos
push
rcr
push
(bad)
repz
push
lods
addr16
push
test
mov
or
push
retf
dec
add
(bad)
je
push
cli
xchg
inc
cwde
push
aad
repz
inc
mov
add
popf
or
cmp
(bad)
mov
or
xor
add
sub
and
pop
inc
gs
or
mov
jmp
mov
jge
pop
pop
mov
mov
(bad)
jle
addr16
xor
mov
jmp
pop
cmc
retf
inc
dec
cmc
pop
adc
sbb
bound
jecxz
test
mov
mov
scas
movs
gs
mov
fsubr
mov
jnp
mov
xlat
or
movs
ffreep
mov
inc
mov
sbb
pop
xchg
pop
mov
cmps
shl
aad
sbb
mov
cmp
inc
ds
jno
ja
stc
push
mov
xor
mov
leave
ror
push
inc
cdq
fsub
cmc
and
repz
jo
fsubr
jno
xor
mov
ja
fdivr
dec
movs
pop
inc
sub
cdq
add
outs
test
(bad)
cmp
push
loope
bound
(bad)
cmps
popf
jecxz
mov
sub
lahf
test
dec
or
ss
inc
cwde
out
adc
daa
or
not
shr
std
cli
cmp
dec
(bad)
loopne
es
pusha
adc
jmp
stos
into
jp
ds
mul
cmp
neg
mov
push
mov
in
mov
xor
(bad)
jp
adc
sbb
rcr
mov
daa
or
xor
adc
cmps
dec
jns
movs
cmp
jno
ja
sub
outs
je
cmps
push
aam
inc
sbb
cmp
ror
mov
push
pusha
or
push
in
adc
pusha
rol
ret
inc
les
in
inc
hlt
cmp
fcomi
nop
xlat
mov
jno
dec
cmps
imul
fimul
cli
xchg
mov
out
mov
js
ret
pop
cmp
cwde
and
mov
and
xor
jg
and
mov
paddd
nop
clc
mov
mov
mov
loop
and
clc
xor
push
aas
adc
sar
out
into
mov
jmp
loop
mov
stc
(bad)
lds
xchg
add
test
test
sbb
inc
repnz
cmp
sbb
xor
addr16
stc
inc
bound
mov
iret
bound
adc
pop
pop
mov
ret
fsub
ins
sbb
xor
jo
xchg
pop
ss
ds
and
movs
cmp
push
xchg
pop
scas
data16
mov
aas
mov
or
call
jmp
and
int
xlat
jmp
in
getsec
adc
cmps
xchg
(bad)
jo
iret
jg
in
pop
ins
dec
aam
add
std
aad
mov
and
imul
push
adc
sar
ja
adc
(bad)
fcmovbe
and
std
jnp
jecxz
mov
sbb
push
mov
inc
push
mov
xor
push
movs
leave
bound
xchg
mov
dec
mov
mov
cmps
jns
push
retf
push
xchg
or
jbe
dec
fs
add
pop
loope
fnstenv
test
jg
jmp
sub
add
outs
fidiv
jns
clc
mov
test
dec
dec
or
cmps
mov
movs
loope
test
rcl
fsub
or
pop
ds
mov
fwait
jle
add
fisttp
pop
shl
xchg
adc
retf
stos
lahf
jne
mov
es
inc
sbb
int
(bad)
lahf
sub
inc
mov
fs
lods
cld
in
(bad)
jecxz
nop
(bad)
idiv
inc
push
retf
cmp
ficomp
push
or
xchg
mov
sbb
pop
mov
js
pop
icebp
jle
mov
xchg
sub
popa
inc
mov
mov
sbb
(bad)
dec
pop
jns
inc
rol
loope
fucomp
pop
adc
push
popa
xchg
inc
test
push
mul
cmc
fs
lods
in
cmc
loope
shl
loop
cmps
xchg
pushf
mov
fwait
stos
mov
inc
aad
fsub
stc
ds
jmp
dec
(bad)
out
das
mov
int3
sub
mov
movs
mov
cmp
adc
mov
ror
div
stos
and
mov
jle
movs
pop
dec
jge
imul
lods
stos
clc
es
mov
mov
test
and
push
and
mov
or
xor
(bad)
xor
(bad)
fbld
push
inc
retf
stc
fld
out
push
mov
add
faddp
or
aam
dec
scas
cmp
add
mov
sub
enter
lods
ret
popw
shl
lahf
xor
cmc
ret
lods
jbe
jbe
and
icebp
pop
dec
ins
or
ds
xchg
xchg
loop
mov
lea
ins
into
push
xchg
and
lods
int3
stos
popa
mov
out
sti
push
cld
hlt
shl
neg
cmp
or
xchg
aas
inc
out
push
add
popf
outs
jl
cld
xchg
push
mov
inc
inc
sahf
clc
mov
and
clc
jg
dec
mov
adc
loop
sahf
jb
scas
mov
fisub
in
and
jp
push
dec
ja
test
bound
pop
xor
cmc
and
sub
cmps
xor
xor
push
fld
pop
popa
movs
nop
push
xor
enter
pop
and
adc
outs
xchg
and
into
xor
cmp
scas
cmps
mov
xlat
mov
jnp
(bad)
and
or
das
cmp
sub
scas
shl
sbb
adc
cmp
inc
push
js
loope
xor
cwde
inc
lock
arpl
inc
es
nop
out
fwait
call
push
and
aaa
out
mov
les
sub
mov
mov
push
rcl
ret
lods
xor
add
or
add
ficomp
loop
add
popf
mov
cmps
or
mov
cmp
and
cwde
shl
sub
push
ror
sub
add
dec
sahf
fs
mov
cmps
and
es
test
aam
push
ret
out
jge
cdq
push
jnp
jae
aas
dec
pushf
cld
jp
arpl
mov
(bad)
cmp
lea
xchg
dec
push
sub
xor
aad
stos
int
push
(bad)
int3
ss
add
idiv
mov
(bad)
sub
mov
jl
sub
pop
std
imul
add
stc
hlt
cmps
pushf
mov
sbb
cli
or
lock
jbe
push
pop
sbb
adc
cmp
jecxz
mov
jbe
ss
pushw
push
jg
add
lock
shl
icebp
jmp
and
jmp
inc
outs
mov
cs
sbb
dec
fcomp
jb
gs
push
adc
vpackuswb
mov
jbe
sub
mov
cmovge
(bad)
lods
add
ror
mov
setl
cmp
pop
rcl
rcl
clc
retf
mov
out
stos
inc
dec
cmp
or
mov
repnz
in
mov
scas
mov
xchg
jle
pop
xor
jnp
imul
push
mov
cdq
in
lock
dec
movs
call
je
in
push
cs
ja
cmovg
in
jo
inc
and
xchg
xor
mov
pop
xor
inc
pop
call
mov
inc
hlt
lock
sbb
xor
fdiv
dec
inc
cmps
push
or
jne
retf
sbb
(bad)
jns
cmp
popf
(bad)
add
mov
jnp
cmp
js
jnp
out
gs
in
pop
popf
dec
push
enter
arpl
xor
adc
jns
icebp
jle
imul
ss
stc
int3
xor
fstp
in
cmp
addr16
je
in
scas
xchg
jns
arpl
jmp
or
(bad)
out
repz
sub
ds
fwait
cli
dec
icebp
push
xchg
cli
outs
imul
sti
jbe
stos
mov
iret
retf
cmp
mov
sbb
stos
gs
iret
in
mov
(bad)
mov
jge
ss
cld
loopne
(bad)
std
je
pusha
dec
iret
sbb
adc
push
imul
push
xor
test
mov
mov
lods
inc
(bad)
and
dec
push
mov
mov
jae
mov
xor
mov
test
mov
(bad)
add
jo
gs
mov
xor
loop
movs
into
sub
add
ret
ror
cmc
inc
je
push
mov
outs
mov
push
repz
dec
(bad)
xchg
mov
push
es
ins
pop
call
dec
jno
mov
and
or
(bad)
das
push
movs
lods
(bad)
sub
push
fwait
sub
cmps
jle
(bad)
xor
scas
lods
sbb
fs
test
(bad)
fwait
inc
movs
test
sub
jge
mov
icebp
or
cmp
leave
ficomp
jb
call
mov
pop
aam
cs
cdq
(bad)
push
push
xchg
and
sbb
repz
sbb
rcr
mov
ins
jbe
push
pop
xchg
ins
xor
cli
push
dec
out
and
sub
mov
popf
jmp
scas
add
in
(bad)
(bad)
fild
ins
nop
dec
sub
mov
dec
push
je
pop
pop
cdq
ins
fidivr
aad
(bad)
adc
or
or
out
ja
and
in
pop
push
mov
add
pop
jbe
outs
arpl
sbb
scas
iret
xor
xor
lds
xchg
pop
int3
xor
cdq
mov
fmulp
out
leave
(bad)
jle
retf
and
(bad)
into
push
xlat
push
mov
xchg
rcl
hlt
shr
ret
xor
int3
sub
fldenv
sahf
mov
scas
inc
cmps
add
pop
and
mov
dec
inc
dec
ret
cdq
inc
out
push
mov
sbb
cmp
ss
cwde
add
jge
dec
add
inc
push
inc
push
or
dec
sub
add
jl
call
les
les
stos
repz
pop
rcl
lock
push
cmp
xor
mov
push
xchg
cmp
into
mov
pop
inc
shl
loopne
add
call
fst
and
pop
loope
adc
push
dec
inc
(bad)
ja
mov
dec
ja
(bad)
(bad)
std
push
ins
adc
dec
mov
stc
into
or
mov
mov
sbb
inc
je
into
jbe
inc
or
fisubr
shl
jl
inc
add
or
aaa
xchg
and
dec
mov
sbb
pop
mov
test
xlat
movs
mov
xchg
push
and
repz
add
lods
jae
sti
cmp
add
(bad)
in
mov
jae
(bad)
jmp
movs
retf
pop
sub
xor
sbb
out
loopne
stos
adc
cmp
inc
ret
pushf
scas
adc
sub
ja
(bad)
das
or
pop
jb
ds
aad
aaa
xchg
or
addr16
mov
pop
xor
shl
rol
test
pusha
repz
stc
mov
je
adc
in
pop
out
sub
sar
mov
aad
iret
mov
das
dec
aaa
sar
daa
lock
test
xchg
out
bound
std
jmp
fnstenv
out
rol
mov
retf
pop
dec
jb
mov
push
and
cmp
or
pcmpeqw
push
push
push
sub
or
sub
or
and
popf
retf
mov
loope
aad
in
push
lea
sahf
jl
mov
imul
pop
enter
pop
fmul
push
scas
dec
nop
mov
xor
scas
or
xchg
cli
jmp
sbb
out
test
xor
ret
jbe
xor
mov
sbb
jae
rol
fcom
scas
outs
out
lods
push
adc
mov
lea
shl
mov
pop
call
mov
mov
lods
mov
pop
jl
das
(bad)
mov
add
adc
popf
stos
pop
test
or
js
ins
mov
fdiv
mov
pop
loope
ins
pop
pop
enter
dec
mov
xor
and
inc
sti
inc
mov
out
push
add
dec
or
jno
fnsave
adc
cmps
fisub
sub
cdq
sbb
aam
loop
or
xor
mov
push
push
mov
add
sub
adc
shl
outs
push
push
mov
jmp
pop
push
call
cld
adc
test
push
mov
bound
adc
mov
mov
bound
not
out
out
push
jnp
or
xchg
jge
sbb
lods
push
int
or
or
sub
mov
xor
add
adc
out
scas
xor
ja
out
movs
leave
mov
enter
jo
jns
mov
loope
arpl
push
(bad)
cmc
sbb
ins
(bad)
cld
aam
inc
push
aaa
imul
mov
xchg
sbb
jle
pushf
popf
inc
cli
aas
repnz
test
call
push
movs
movs
addr16
sub
mov
inc
push
cmp
fimul
and
stos
adc
sub
aaa
dec
xchg
dec
jmp
stos
mov
dec
test
inc
pop
push
dec
adc
xchg
pop
lock
or
pop
call
ret
and
inc
or
arpl
lds
ror
or
adc
adc
std
stos
fnstsw
cmps
sahf
add
mov
pop
mov
add
(bad)
in
lods
mov
in
adc
(bad)
sub
sub
or
in
push
lea
(bad)
fndisi(8087
push
dec
loope
sbb
pop
add
pop
iret
mov
adc
push
das
mov
lock
xor
les
inc
stos
cmp
xchg
inc
aam
xchg
das
jns
push
cld
and
test
add
inc
pop
fisubr
ss
xor
fwait
loopne
inc
icebp
mov
cli
add
cmp
jbe
ins
shl
lods
test
sar
dec
lahf
fisub
mov
add
or
leave
icebp
add
dec
mov
lock
inc
adc
cmp
mov
ror
int3
jnp
mov
out
ficom
call
popf
xlat
sbb
sbb
js
mov
stc
mov
dec
or
cli
movs
sub
jno
xchg
mov
aam
xchg
push
or
cmp
xchg
imul
clc
cmp
xchg
outs
add
mov
inc
xor
test
stc
inc
cmp
call
pusha
and
add
push
loopne
adc
leave
aad
test
push
sub
xor
(bad)
movs
cmp
add
dec
mov
iret
popa
cmp
ja
mov
dec
imul
rcl
leave
cdq
daa
ret
push
or
and
or
pop
sbb
rcl
pop
push
inc
push
in
pop
cmp
mov
rcl
adc
inc
mov
mov
mov
ret
adc
aas
lock
fst
and
dec
dec
clc
loop
shl
or
xor
or
fsubr
outs
push
in
or
mov
add
and
mov
test
movs
push
jmp
mov
pop
aad
mov
cmp
scas
mov
push
adc
icebp
cmp
lea
retf
pop
ficomp
sub
xchg
scas
les
and
pop
lea
xor
sar
std
sub
enter
scas
sub
push
fcom
sahf
fldcw
add
mov
mov
das
or
in
pushf
pop
adc
test
pop
push
cmp
(bad)
xchg
or
pop
dec
mov
jne
shl
mov
xor
cmps
and
aam
adc
seta
fdivr
imul
add
xchg
cmps
ror
xchg
xchg
mov
inc
sub
(bad)
test
clc
lahf
adc
and
dec
(bad)
sahf
scas
fwait
mov
xlat
pop
cmp
xchg
pusha
and
pop
xchg
mov
fs
mov
mov
ja
lods
xchg
nop
mov
lahf
sar
mov
jg
mov
fdivr
mov
nop
xchg
repz
(bad)
jmp
xchg
stos
inc
pop
cmp
mov
dec
retf
sbb
jge
jns
xchg
cmp
retf
in
xchg
mov
test
ds
sbb
sub
add
adc
sti
and
cmp
mov
sbb
add
dec
cmc
shl
sub
xchg
aas
xor
scas
mov
cmc
inc
xchg
das
xchg
mov
frstor
inc
cmp
cmps
stos
or
xchg
arpl
movs
shr
sub
outs
call
shr
mov
mov
xor
adc
ret
es
aad
(bad)
(bad)
adc
bound
jl
adc
mov
inc
push
(bad)
into
dec
push
pop
lahf
jne
fs
popf
pop
test
loopne
jo
aaa
fbstp
imul
inc
cmps
jbe
or
sub
mov
mov
fst
out
jge
rol
cwde
popf
in
lahf
fsubr
jbe
fist
stos
dec
hlt
leave
hlt
sub
ja
mov
stc
jle
retf
pop
sub
xor
mov
(bad)
repnz
clc
push
jecxz
fimul
mov
repnz
xor
outs
dec
cmp
(bad)
retfw
inc
sub
test
rol
adc
fadd
fld
add
cmp
pop
dec
pop
push
out
pop
in
adc
ror
ret
repz
jo
lds
repz
mov
xchg
pushf
stos
sub
lock
jne
fnsave
les
sub
movs
xchg
mov
or
mov
aaa
stos
loop
jmp
or
pop
mov
mov
xor
pop
adc
lahf
sti
push
adc
pop
cwde
inc
mov
pop
loopne
xor
repz
mov
and
in
jne
lock
cmp
in
ins
and
inc
cmc
ret
pop
inc
mov
jae
sbb
jnp
mov
hlt
sbb
jnp
push
adc
or
sbb
cmc
pop
test
test
xchg
aas
out
mov
inc
movs
test
lsl
scas
outs
and
stos
in
fidivr
lods
fst
sbb
inc
jmp
retf
mov
adc
loopne
adc
dec
xor
aaa
jle
movs
cmp
mov
xchg
dec
mov
xor
and
and
or
jge
push
sbb
stos
and
or
dec
stos
mov
push
inc
movs
mov
in
test
ins
jns
xchg
jge
xor
rol
push
xor
sbb
inc
push
jl
inc
test
push
mov
retf
and
aad
and
and
push
pop
nop
adc
test
call
ror
out
mov
repnz
dec
jno
ds
cmp
jl
mov
scas
pop
xor
cs
scas
or
outs
and
sub
mov
out
shl
leave
loope
dec
xchg
in
loop
push
cmp
shr
mov
jl
pop
call
mov
add
cwde
dec
dec
xor
xor
cdq
adc
push
xchg
add
jo
jne
(bad)
out
jp
nop
cmps
arpl
and
out
inc
dec
arpl
sub
add
(bad)
mov
mov
adc
ins
stos
mov
daa
push
test
clc
jg
(bad)
pop
jle
pop
outs
push
dec
mov
push
mov
dec
scas
mov
xchg
push
sub
push
or
pop
jecxz
jmp
js
pusha
(bad)
sub
cmp
xchg
or
(bad)
test
adc
sbb
ins
or
sbb
ja
stos
mov
jle
jns
sbb
sbb
fcmovnbe
inc
xor
gs
test
push
mov
sub
pop
(bad)
cld
xchg
mov
retf
adc
mov
sbb
mov
adc
fs
push
cmp
dec
push
in
cmp
jne
and
jae
repz
cmp
leave
pop
jne
push
mov
pusha
add
aas
or
in
inc
sub
sti
push
pop
adc
aam
jecxz
jmp
pop
loop
dec
(bad)
sub
(bad)
lods
in
jge
les
push
pop
mov
sahf
dec
movs
cmp
mov
sbb
and
pop
in
mov
inc
in
push
mov
mov
jbe
add
test
and
lods
pop
cli
mov
movs
pop
jb
adc
in
int3
jge
mov
and
mov
cmp
aad
xchg
rcl
shr
js
loopne
jg
sahf
fist
clc
mov
popf
pop
xor
push
pop
stos
fdiv
inc
xchg
xor
sub
adc
xor
dec
int
pushf
mov
fidivr
loope
inc
xor
add
dec
sbb
in
cmp
es
(bad)
pusha
dec
fs
bound
into
jo
adc
and
push
xor
sbb
aad
sbb
fnstcw
arpl
mov
sub
mov
cli
or
or
imul
adc
iret
and
xor
ret
mov
enter
jno
cmp
js
arpl
mov
loop
mov
repz
aaa
pop
mov
jne
(bad)
int
lods
leave
gs
dec
aad
inc
(bad)
lds
not
and
in
pop
cld
aad
sub
in
push
push
and
and
test
xor
mov
rcr
icebp
ficom
loop
scas
push
int
daa
fld
inc
jns
leave
dec
out
push
mov
aaa
dec
jb
push
or
outs
inc
push
mov
outs
xor
push
push
sub
fmul
daa
cmp
push
xchg
xchg
adc
imul
pop
data16
es
lods
ret
pop
or
dec
jecxz
sahf
cmp
fwait
jg
fdivr
jo
cli
inc
dec
jp
(bad)
shr
cmp
ins
pop
push
into
cmp
(bad)
sti
jnp
lahf
call
(bad)
call
adc
sahf
scas
aaa
mov
dec
pop
ret
mov
mov
mov
outs
xor
xchg
enter
mov
jecxz
test
xchg
std
sahf
push
repz
jns
scas
push
sbb
xchg
push
fwait
mov
cld
push
add
xchg
sar
data16
test
rcr
cmc
push
and
push
dec
sub
sub
cwde
sbb
(bad)
mov
daa
jle
and
rcl
cmp
ds
dec
std
setp
dec
lods
push
frstor
xchg
retf
and
push
inc
aaa
int3
pop
fdivr
pop
(bad)
sti
jg
adc
cmp
imul
mov
retf
fwait
or
loopne
adc
pop
pop
xchg
sub
cmp
mov
xor
and
in
inc
aaa
and
fcom
push
scas
xchg
xchg
add
imul
sbb
xor
or
xchg
outs
mov
mov
cmp
or
mov
pop
test
push
adc
(bad)
retf
cmps
lock
mov
xchg
dec
mov
ins
fs
int3
and
retf
and
dec
add
inc
adc
dec
adc
add
rcr
jb
call
aad
stos
jg
rcr
xor
hlt
adc
push
fsub
xlat
push
cdq
lds
ficomp
ja
in
cmps
mov
mov
ins
dec
or
ins
cli
push
ror
(bad)
inc
xor
je
cmps
mov
push
retf
std
ja
mov
mov
xor
push
jae
enter
je
cmc
push
adc
inc
sub
cmc
movs
movs
xchg
rol
mov
rcl
pushf
into
js
xchg
stos
jbe
mov
mov
pusha
mov
mov
adc
jbe
retf
call
outs
cmc
or
xor
dec
imul
xchg
mov
dec
data16
jl
jnp
call
sbb
sbb
inc
imul
xchg
mov
push
pop
popf
push
mov
(bad)
cmp
std
add
div
add
push
(bad)
mov
add
ret
xchg
outs
cli
add
mov
das
mov
in
mov
inc
loopne
xchg
xchg
gs
push
inc
rol
ror
fnstenv
cmp
cmp
cmp
loop
outs
out
in
inc
fld
sahf
inc
dec
add
cmp
add
dec
clc
or
or
push
test
pop
xchg
adc
adc
jle
inc
pop
add
ja
aas
(bad)
adc
mov
pop
and
into
adc
sbb
fcom
sub
xchg
mov
cli
pop
add
inc
jge
dec
jne
nop
test
loopne
les
hlt
mov
sbb
push
jge
sbb
adc
in
sub
loope
scas
cmp
mov
mov
cmp
dec
out
mov
data16
mov
and
push
in
jbe
push
mov
addr16
call
lods
call
push
push
add
aas
ins
in
sti
js
and
add
(bad)
mov
sbb
pop
pop
sub
int3
sub
sbb
lahf
push
das
in
mov
add
out
and
fnop
mov
adc
add
inc
mov
pop
nop
ds
inc
xchg
das
mov
in
(bad)
in
pop
mov
ret
push
xchg
sub
and
jbe
xor
sbb
mov
(bad)
popf
aam
dec
ins
push
aad
xchg
stos
inc
stc
pop
sbb
sub
fsubrp
sbb
push
rcr
sysenter
sub
lods
icebp
jo
push
cmps
xor
inc
push
cmc
rcr
(bad)
(bad)
lods
pusha
pop
ja
cmp
mov
xchg
lds
xchg
movs
(bad)
fiadd
fstp
adc
(bad)
sbb
fdivr
aam
mov
(bad)
sub
not
in
push
inc
pop
mov
mov
out
jae
dec
and
xchg
xor
out
popf
pop
call
fnop
push
scas
mov
loope
mov
(bad)
int
rol
mov
lea
add
sub
out
xlat
out
inc
sbb
pop
sbb
and
dec
es
sbb
inc
sbb
xor
loopne
aaa
cmp
pop
es
popf
xlat
pop
repz
ret
xor
sar
pusha
into
movntq
mov
std
push
cmp
call
and
or
fucom
ret
sbb
xchg
or
rcl
dec
xchg
and
leave
push
outs
pop
sbb
cmp
outs
ret
(bad)
adc
ret
xchg
xchg
xchg
sub
jp
test
lods
je
js
add
xchg
jp
leave
mov
sbb
lahf
arpl
out
xchg
jb
stc
jnp
pushf
fdiv
mov
push
add
push
inc
adc
enter
dec
inc
inc
pop
or
mov
mov
das
in
ror
fmul
nop
xor
ins
scas
xchg
cmp
cld
sub
and
fstp
lds
mov
rol
lahf
(bad)
into
pop
fidivr
jecxz
add
call
jmp
or
ds
clc
popa
pop
call
fs
pop
outs
es
mov
mov
jno
inc
adc
or
cmp
push
imul
ins
rcr
xor
mov
mov
shl
stos
inc
mov
mov
out
lahf
mov
test
jecxz
sub
push
xor
xor
adc
jecxz
push
push
fild
popa
mov
(bad)
repnz
data16
fmul
sbb
ins
mov
push
jecxz
out
adc
js
sub
fwait
or
lea
jge
outs
lds
mov
or
icebp
ret
dec
jg
rcl
fidivr
pop
mov
(bad)
add
xchg
cmc
rcl
daa
dec
xor
inc
mov
(bad)
mov
(bad)
mov
popf
lods
punpckldq
jecxz
addr16
mov
mov
xor
movs
in
jbe
and
fst
int
dec
add
jp
add
adc
mov
scas
jg
or
cdq
arpl
ror
push
movs
scas
repnz
mov
push
(bad)
cmps
cdq
cmp
sbb
popf
pop
iret
retf
pusha
out
add
hlt
xchg
dec
jmp
push
cmp
or
es
int
jmp
adc
mov
and
popf
lods
leave
bswap
xor
out
das
(bad)
pop
gs
popa
fcom
mov
mov
and
add
or
sub
in
int3
and
pop
fcom
out
mov
shl
adc
nop
fist
push
and
adc
adc
mov
jl
test
mov
xchg
pop
ins
popa
test
pop
(bad)
sti
inc
in
jmp
mov
xchg
dec
sbb
in
add
ss
xor
cmp
lds
ret
call
xchg
lods
(bad)
cmp
sbb
(bad)
fsub
push
rcl
outs
mov
adc
xchg
arpl
sub
adc
dec
aad
call
clc
(bad)
xchg
jbe
mov
jo
std
pop
xchg
gs
and
call
retf
pop
cmp
retf
pusha
fisub
stos
(bad)
call
loopne
cmp
xor
les
sti
test
repz
and
cmp
cwde
in
(bad)
movs
stc
xchg
jb
fcomp
hlt
inc
pop
sub
inc
mov
movs
ret
inc
or
push
dec
enter
and
push
pop
xchg
jmp
(bad)
mov
jmp
jns
data16
stc
pop
dec
fiadd
add
arpl
fmul
xchg
mov
cmps
pop
cmp
inc
or
out
sub
sti
rcl
jl
ds
push
jmp
mov
mov
mov
sbb
and
cmps
jl
mov
dec
and
mov
(bad)
aam
xor
cmp
scas
mov
call
(bad)
mov
cli
push
mov
movs
out
aas
xchg
and
add
mov
lock
xchg
sub
ins
shl
ror
das
and
into
push
add
mov
mov
stc
cmps
cs
fisub
(bad)
outs
xor
inc
repz
mov
add
jle
jbe
sar
mov
add
fmul
adc
inc
sub
jae
mov
dec
cld
add
vphaddudq
loopne
popf
dec
fistp
ja
cmp
add
jle
push
(bad)
cld
mov
cmp
mov
or
jl
test
sbb
addr16
push
cld
push
lods
jmp
or
popf
dec
xchg
rcl
in
cli
in
not
xchg
pop
jno
push
or
cmps
push
jo
lods
mov
in
es
push
cdq
iret
dec
js
icebp
mov
cmps
jae
stc
daa
or
cwde
dec
mov
sbb
xchg
cmp
aad
or
cmc
and
(bad)
jne
jg
enter
imul
xchg
xchg
ror
neg
dec
pop
(bad)
jp
mov
out
dec
or
out
jb
jmp
les
icebp
cmp
pop
ret
cmp
fsubr
sub
rsqrtps
xor
dec
(bad)
sub
or
cmp
mov
cmp
fucom
dec
mov
mov
popa
pushf
mov
popa
sbb
int
add
daa
jl
and
fdivr
add
and
rcr
lods
xchg
pushf
and
jae
imul
fsubr
sbb
ret
jno
das
cdq
inc
xor
adc
push
inc
ins
dec
movs
and
mov
cmp
jno
jl
ret
jg
dec
std
nop
sbb
xor
cli
cmp
js
daa
aaa
call
jl
pop
sbb
pop
xchg
js
outs
mov
add
xor
in
outs
mov
loopne
movs
pop
and
jecxz
push
adc
and
xor
xor
mov
je
mov
enter
jbe
outs
sub
int3
dec
cmps
sub
loopne
iret
rcr
aam
jns
(bad)
cmps
jno
loope
shl
int
repnz
sbb
stc
daa
pop
cmp
dec
test
mov
movs
loop
icebp
ja
enter
pop
not
movs
cmps
mov
mul
xchg
fadd
int
retf
jg
imul
fidivr
push
retf
je
mov
loope
dec
xchg
in
rcr
loope
pop
or
dec
and
sbb
out
(bad)
adc
in
fdiv
push
jae
jg
data16
fs
shl
sub
out
adc
fwait
cmp
mov
push
in
mov
mov
sbb
xor
fidivr
xchg
jl
aad
xchg
dec
scas
iret
lds
sub
es
lea
je
in
jns
jecxz
or
dec
dec
aas
(bad)
mov
and
in
cld
test
cli
je
lock
dec
push
neg
lods
or
xchg
cld
test
inc
sbb
cmc
movs
retf
popf
test
ja
aad
mov
call
retf
out
jge
pop
cmp
push
xor
test
je
sub
sub
jl
stos
jmp
mov
xlat
sub
mov
and
mov
jno
dec
pop
ss
push
push
or
cmp
inc
inc
mov
shl
in
retf
inc
adc
cmps
popa
mov
adc
cmp
dec
mov
mov
dec
(bad)
jns
mov
test
ds
cdq
jo
call
push
push
loopne
pop
rcl
fisub
jg
adc
shl
mov
stc
lods
push
xchg
enter
lods
or
jne
xchg
daa
jle
push
stos
add
int3
xchg
mov
jge
mov
je
push
stos
inc
inc
gs
imul
ins
aas
or
push
push
shl
clts
pop
and
(bad)
retf
cmp
(bad)
cld
mov
xchg
cmp
xchg
ds
or
xchg
sub
add
xchg
call
mov
fadd
or
adc
jge
sub
das
scas
idiv
js
stos
shr
in
test
clc
cmp
test
fwait
mov
arpl
imul
mov
mov
movs
mov
dec
add
cs
test
sbb
sub
test
sub
inc
mov
push
pop
add
movs
jl
mov
mov
dec
sub
pop
mov
mov
jl
cmp
mov
pop
mov
cmp
iret
or
(bad)
(bad)
ds
push
(bad)
jp
push
mov
sbb
arpl
retf
jnp
jnp
jge
mov
leave
jmp
pop
jle
adc
out
mov
or
or
mov
(bad)
push
fcom
xor
pop
cmc
pavgb
lea
xchg
push
mov
inc
aam
aas
jne
mov
sub
stos
int3
popf
gs
and
and
(bad)
dec
mov
(bad)
aaa
xchg
idiv
cld
out
inc
xchg
xchg
(bad)
cmc
mov
stc
popf
add
iret
xchg
in
mov
stos
sbb
pusha
pop
movs
aam
loopne
pop
in
xchg
sar
dec
(bad)
loopne
les
cmp
js
mov
mov
push
mov
inc
aas
aad
(bad)
(bad)
push
ja
mov
lods
xchg
push
addr16
xor
xchg
mov
sub
stos
push
xchg
inc
fwait
les
pop
push
mov
xlat
cmp
js
or
aaa
lds
adc
adc
lea
mov
bound
pop
mov
mov
dec
push
and
out
popa
cdq
and
in
xchg
mov
and
scas
imul
rcr
stos
lahf
mov
idiv
shl
mov
cwde
nop
clc
lods
inc
add
push
fmulp
aad
ror
jecxz
jne
popa
pusha
or
xchg
into
sub
div
inc
scas
shr
push
push
inc
sub
(bad)
mov
xor
push
xlat
hlt
in
scas
pop
xchg
push
repnz
cwde
add
sbb
js
test
imul
inc
sar
test
out
mov
rol
add
add
cmp
add
loope
lahf
or
pop
cmp
add
add
mov
retf
stos
inc
push
dec
or
retf
and
int
sub
jnp
dec
push
icebp
daa
fdivrp
iret
push
jp
xor
lods
fidivr
pop
jne
mov
jo
jp
fsubr
and
stos
stos
pop
ret
inc
cli
fs
outs
lods
add
jns
cmp
arpl
enter
cmp
adc
out
cmp
or
push
push
sahf
or
imul
in
mov
stos
jmp
pop
mov
pop
cmp
inc
cmp
sbb
addr16
je
enter
(bad)
inc
gs
ds
pop
loope
mov
ja
jmp
pop
cmp
jge
lods
aam
stos
cmp
inc
sub
jnp
shr
fcom
imul
jo
pop
mov
adc
test
mov
stos
adc
in
dec
pop
jae
add
pop
rcr
or
cmp
mov
ret
adc
sub
rol
out
dec
mov
pop
pop
out
std
fwait
out
cmp
xchg
(bad)
and
or
data16
popa
inc
lods
jmp
test
in
adc
mov
fs
sub
mov
leave
shrd
fbstp
mov
jl
or
les
mov
jg
or
inc
xchg
ret
sbb
ja
daa
and
jl
je
sub
adc
gs
jno
lods
sbb
or
jmp
mov
xchg
outs
pop
add
inc
stos
in
jp
aas
xor
ins
popa
aad
inc
mov
push
popa
pop
pop
jl
or
bound
(bad)
mov
pop
(bad)
ffreep
cmp
add
adc
and
and
sbb
imul
fwait
std
push
inc
or
out
repnz
sub
sbb
movs
aam
pop
dec
shr
pop
mov
test
test
popf
lahf
jl
jge
fldcw
das
push
(bad)
jne
lods
idiv
dec
jl
dec
dec
or
sbb
cmp
ror
mov
(bad)
push
inc
je
retf
ins
or
push
jae
lock
mov
push
pop
es
data16
in
mov
inc
ins
cmc
es
and
or
addps
pop
xor
icebp
sti
adc
movs
push
rcl
out
jg
xchg
pop
mov
mov
push
jmp
sub
ficomp
jmp
adc
mov
xor
jnp
repnz
cwde
add
rol
mov
shl
xor
inc
in
call
call
jae
sub
jne
out
and
ror
cld
push
adc
cmp
xor
or
lods
nop
or
xor
push
(bad)
lock
and
pusha
cmps
xor
xor
ss
lock
data16
fstp
dec
or
in
cs
sbb
or
aaa
xchg
pop
lds
ss
mov
inc
add
ss
stos
div
outs
mov
nop
jge
(bad)
mov
outs
cmps
mov
inc
cmp
mov
dec
mov
xchg
imul
out
aas
inc
rcr
mov
ins
jno
retf
mov
cmp
fwait
cmc
dec
dec
or
and
loopne
mov
outs
mov
cld
adc
cmps
inc
test
xchg
and
out
dec
daa
es
repz
bound
adc
imul
in
pop
dec
rcr
mov
out
mov
xchg
mov
cli
and
in
cmp
pop
call
jae
adc
sbb
xchg
int
or
push
lods
fiadd
jae
xchg
(bad)
fninit
push
stos
xchg
fst
sub
add
xchg
pop
in
add
in
push
js
pop
mov
push
ins
pop
jle
loopne
fnstenv
int
ja
mov
addr16
ja
mov
sbb
(bad)
in
pop
sbb
add
push
xor
mov
movs
add
push
jmp
call
fisttp
lock
jge
aad
aas
sbb
xchg
inc
add
or
iret
inc
addr16
lods
cld
jmp
xchg
jle
repz
in
cmp
nop
mov
pop
shl
loope
push
ja
and
and
adc
shr
aam
addr16
cmp
push
jbe
loope
test
mov
addr16
mov
adc
jp
xchg
sbb
jno
test
int
jmp
add
test
mov
call
push
mov
inc
mov
xor
(bad)
jnp
dec
sti
sti
scas
pop
sub
fs
dec
lods
or
pop
push
pop
gs
sbb
jecxz
stc
pop
add
ds
xchg
lea
mov
lock
loope
push
daa
cmp
sub
or
adc
or
cmp
or
mov
push
xor
(bad)
push
xchg
inc
(bad)
add
cdq
retf
imul
aam
xchg
xor
mov
pop
in
xor
push
xlat
mov
mov
(bad)
pop
push
rcl
es
ret
scas
imul
ret
in
popa
push
dec
xchg
push
jno
jnp
fsubr
(bad)
and
int
sub
scas
pop
jne
sub
imul
(bad)
data16
xchg
cmp
ret
idiv
sbb
jge
rcr
inc
xor
mov
call
ja
jns
movs
in
retf
repz
jge
lahf
mov
dec
pop
lahf
sub
and
xchg
ss
pop
xchg
mov
jno
imul
pop
int
pushf
xor
pop
sub
jecxz
pop
movs
sbb
bound
jo
(bad)
xor
sahf
jnp
xchg
sub
and
sbb
pop
sbb
xor
test
sar
sbb
xchg
xchg
and
push
mov
add
jnp
loop
call
and
dec
mov
mov
jno
test
push
push
jmp
outs
or
xchg
(bad)
adc
push
jg
loope
fldcw
imul
lods
ret
out
bswap
mov
mov
data16
out
or
nop
sub
scas
cmp
das
and
jbe
dec
out
dec
dec
dec
out
jb
cmp
lds
xchg
push
xchg
or
adc
dec
movs
js
cmp
and
cmc
inc
cmp
ror
pop
fld
push
jp
sub
push
adc
cmp
in
push
xchg
repz
repnz
ret
loope
mov
dec
jns
sbb
mov
jl
pop
add
sahf
mov
movs
cld
mov
pop
lods
xchg
inc
dec
mov
cld
(bad)
mov
test
fwait
xlat
dec
push
fdivr
mov
movs
ss
dec
dec
setns
mov
aas
call
repnz
cld
mov
outs
shl
push
mov
test
cli
cdq
pop
dec
jmp
jae
(bad)
(bad)
enter
xchg
pusha
mov
repz
jmp
xor
pop
adc
inc
sub
int
cld
mov
fist
cwde
call
add
lods
pop
xor
sub
xor
ss
xchg
push
jns
mov
jmp
out
imul
std
retf
push
push
jnp
cmp
nop
cmp
mov
cmp
and
sbb
cmp
dec
cwde
(bad)
pop
adc
inc
in
cmps
sub
sahf
mov
fdiv
xchg
mov
(bad)
leave
retf
inc
std
out
mov
cmp
pop
(bad)
push
clc
inc
or
push
je
loop
mov
add
cmp
jge
inc
adc
sbb
mov
pop
sub
xor
and
outs
ret
ins
inc
push
ror
das
movs
aam
inc
mov
push
mov
sbb
sahf
or
in
fistp
jl
jno
nop
jg
xor
jns
mov
mov
push
icebp
ss
stc
adc
stos
cmps
or
int3
mov
jg
push
pop
jecxz
lods
aaa
sub
mov
or
push
push
add
jns
mov
es
fwait
dec
rcl
shl
push
jo
mov
in
jns
mov
mov
data16
iret
sub
or
xor
xor
push
data16
cmp
in
jbe
jmp
imul
pop
clc
(bad)
push
out
and
mov
loope
jge
and
jge
inc
ds
fdiv
movs
jge
es
pop
into
daa
pop
out
xlat
and
fcom
or
lea
loop
idiv
xchg
xchg
pop
sub
xchg
out
jl
nop
pusha
jns
sbb
adc
icebp
pusha
lds
or
lds
arpl
add
out
jle
cmp
outs
push
addr16
sbb
arpl
xchg
dec
in
pop
(bad)
adc
pop
dec
pop
into
pop
mov
sub
out
pop
sbb
or
cwde
and
sbb
sbb
or
push
(bad)
xlat
adc
cmp
cmps
cmps
and
in
add
ins
inc
mov
sub
mov
ret
mov
fadd
fistp
loopne
fild
pop
sar
outs
ror
fidiv
in
arpl
iret
xor
pop
mov
iret
fldenv
cli
inc
and
js
pop
push
out
popf
sub
mov
mov
inc
stos
stc
sbb
add
jg
aam
pop
dec
mov
out
mov
fld
jbe
jns
movs
aas
mov
mov
mov
rcl
cmp
push
int3
retf
push
inc
mov
test
enter
jns
sbb
repz
cmp
rcl
add
lahf
pop
mov
dec
dec
stos
retf
xchg
pusha
loope
or
pusha
pop
mov
jb
push
and
retf
cli
lea
push
xchg
sti
test
and
sbb
inc
jo
mov
jbe
pop
mov
and
inc
push
sbb
inc
(bad)
call
ins
ret
pop
cmp
std
in
jp
dec
sub
in
mov
mov
mov
or
fnstcw
jmp
fst
enter
lds
in
mov
(bad)
push
push
retf
inc
sub
and
adc
pop
test
out
mov
sahf
repz
sub
dec
aad
in
movs
fstp
jl
pushf
pop
lock
mov
lock
mov
pushf
loop
pop
mov
js
jbe
xchg
push
dec
jno
cmp
cmps
add
push
pop
mov
call
cmp
pop
dec
mov
ss
loope
stc
inc
js
cmp
rcr
shr
movs
cdq
mov
jl
ins
mov
sub
fwait
or
cmp
push
fwait
test
fimul
jp
in
int3
icebp
dec
pop
imul
jae
repz
and
and
mov
stos
pop
cmps
shl
nop
or
cmp
out
test
lods
in
sub
sbb
adc
and
push
pop
inc
rcr
inc
lds
add
pop
jae
jo
cs
cmp
dec
into
(bad)
jo
push
xor
lods
push
mov
ds
addr16
push
test
(bad)
test
mov
jmp
cmp
jle
outs
pusha
dec
stos
mov
push
cwde
shl
sbb
call
add
add
sub
pop
nop
mov
jae
je
mov
ror
jnp
add
test
push
xchg
sbb
mov
push
adc
xchg
pop
ss
ins
mov
pop
jns
mov
les
mov
arpl
daa
pop
stos
sar
ins
inc
xor
imul
push
shr
sbb
sub
adc
sub
jne
xchg
retf
mov
and
push
jl
or
xor
cmp
push
xor
xchg
sahf
mov
jp
mov
jns
in
loopne
pop
mov
stc
scas
push
pop
cmp
in
sar
dec
jo
add
cmp
dec
inc
mov
xchg
test
xchg
mov
mov
cdq
div
addr16
and
cmps
xor
xchg
xchg
inc
adc
cmc
pop
push
adc
arpl
xchg
pop
cmp
xor
mov
jnp
cmc
lahf
dec
push
mov
jo
pop
out
or
push
mov
xor
adc
fimul
addr16
test
test
add
hlt
jno
cmp
int
nop
imul
add
mov
mov
jbe
jnp
das
and
inc
in
cli
int
cwde
aas
cld
(bad)
xchg
mov
fcomp
and
jmp
imul
js
outs
cs
mov
ss
dec
mov
xor
shr
inc
cmps
jmp
outs
xchg
outs
cs
sub
icebp
test
adc
jmp
xcrypt-cfb
cmps
in
push
std
jmp
cld
mov
jmp
push
(bad)
cmps
xlat
inc
ins
pop
or
sbb
cmps
pop
ins
ret
idiv
jne
mov
xchg
and
out
jne
daa
jb
mov
and
push
(bad)
jmp
sbb
sub
cmc
xchg
xor
sub
xor
pop
int
mov
test
bndstx
jl
push
mov
loop
mov
mov
pop
inc
sub
adc
sahf
inc
xor
xor
int3
mov
sbb
imul
ret
add
dec
lahf
arpl
sbb
pop
sbb
jb
(bad)
loopne
icebp
jmp
loope
inc
dec
push
stc
jne
mul
inc
sbb
gs
sbb
mul
(bad)
cmp
pop
into
fwait
lahf
(bad)
sti
jp
or
pop
in
push
outs
push
arpl
mov
retf
leave
nop
xor
div
sbb
retf
cmp
jle
xor
imul
leave
loope
cmp
inc
mov
mov
movs
push
cdq
in
into
aaa
dec
push
je
sahf
dec
push
cmp
int
inc
ja
mov
mov
ins
sbb
into
icebp
mov
push
icebp
popa
retf
icebp
mov
cmp
mov
stos
stos
test
daa
ret
es
fwait
inc
pop
test
call
push
test
xchg
test
ss
call
xchg
call
mov
lahf
idiv
jmp
lods
add
add
lods
add
cmp
shr
mov
adc
inc
mov
add
and
or
adc
mov
add
cld
dec
data16
mov
mov
push
nop
fdiv
fnstenv
fnstcw
cdq
inc
pop
inc
movs
test
lods
inc
jae
xor
icebp
dec
mov
jmp
mov
xchg
xchg
retf
in
out
cmp
jno
in
hlt
rol
adc
cmc
push
mov
fst
jnp
(bad)
push
xchg
dec
retf
inc
xchg
out
je
js
pop
jns
pop
adc
test
jne
fdivp
nop
xor
jo
cmp
xchg
add
jo
or
sub
jb
inc
and
lea
dec
cld
push
mov
(bad)
shl
cwde
ror
fidivr
mov
adc
and
xchg
jae
shl
add
pop
jno
xor
and
jmp
arpl
stos
popa
mov
mov
data16
psllq
adc
(bad)
cmps
(bad)
jb
ds
push
jmp
add
dec
sti
jmp
adc
pop
cli
iret
cmps
fdiv
dec
xor
mov
aam
or
dec
lock
scas
in
cmc
cmp
pop
inc
jmp
mov
xchg
and
inc
out
push
ins
mov
movs
loope
add
dec
sub
jecxz
pushf
in
add
jle
test
int
fcomip
push
test
xchg
push
data16
cmp
xchg
leave
xchg
push
lods
js
or
loop
mov
and
xchg
dec
aad
jge
ins
je
mov
push
add
pop
(bad)
cmp
aad
in
mov
das
push
lods
inc
jp
retf
push
pop
or
mov
lods
fsubrp
jge
dec
cdq
and
sub
mov
(bad)
dec
(bad)
shr
mov
pusha
and
ret
outs
data16
cwde
or
mov
mov
mov
or
in
push
imul
mov
or
dec
stos
xor
xor
dec
pop
enter
(bad)
mov
jno
jmp
movs
push
in
popf
popa
dec
xchg
jo
push
xor
add
or
in
push
es
inc
add
jne
mov
out
mov
repnz
outs
and
sbb
ret
or
es
dec
sub
mov
sub
aam
xchg
xor
pop
inc
out
push
add
shl
call
gs
retf
shr
mov
adc
rcl
mov
xor
leave
xchg
ins
scas
pusha
cli
inc
jg
stc
pusha
mov
retf
cmp
xor
xchg
inc
ja
ds
jno
mov
sbb
loop
cdq
call
mov
jmp
push
inc
das
loope
dec
jb
pop
xlat
daa
(bad)
cmc
repnz
cmovnp
mov
inc
shl
in
outs
push
out
xor
mov
pop
and
jl
push
call
push
cmc
mov
in
(bad)
test
bswap
add
outs
and
jmp
enter
cmp
jo
icebp
sub
popa
mov
xchg
mov
daa
pop
cmp
mov
jp
iret
imul
jmp
cmps
jle
and
jae
leave
add
retf
dec
ins
and
lock
mov
sbb
sbb
mov
pop
inc
jnp
lds
(bad)
lahf
gs
inc
inc
push
push
mov
and
lods
add
push
xchg
or
inc
and
pop
(bad)
or
test
out
iret
jg
mov
sub
out
inc
or
cli
jle
cld
mov
sti
cmp
adc
sahf
outs
xor
xor
mov
out
aaa
jbe
jmp
and
call
(bad)
cmp
scas
mov
sub
xor
pop
xor
jne
sti
xor
dec
fs
mov
(bad)
sbb
jnp
xor
cmp
imul
mov
push
sti
fwait
jae
mov
stc
nop
dec
add
test
out
mov
cdq
out
push
jmp
jne
cmp
or
pop
test
xor
ins
inc
nop
repz
fisttp
div
sbb
in
inc
imul
pop
fst
cld
jns
cmp
pop
push
(bad)
cmp
ja
jp
aam
popa
pop
retf
add
sbb
xor
scas
fisub
or
popf
fcom
pop
xchg
iret
or
pusha
in
and
fimul
mov
or
(bad)
int
xor
jo
mov
xchg
das
mov
arpl
aad
sbb
or
in
inc
std
movs
addr16
cwde
nop
fadd
inc
mov
enter
les
lods
sub
inc
pop
xchg
mov
(bad)
ss
push
adc
cs
jo
call
sub
cld
xchg
mov
mov
inc
push
not
dec
ins
shl
adc
push
(bad)
aas
mov
inc
js
aad
add
cs
sub
lahf
sahf
jmp
jl
pop
sar
ds
lea
xchg
in
(bad)
lahf
mov
out
pop
enter
test
cmc
adc
ds
bound
(bad)
xor
xchg
mov
in
hlt
(bad)
das
sub
out
pop
arpl
cmp
inc
sbb
je
pop
or
cwde
retf
pop
mov
or
shr
xor
outs
xchg
sbb
xchg
shl
and
loopne
data16
out
sub
pusha
std
mov
and
push
mov
fwait
adc
lods
aaa
lods
sub
inc
sti
loop
xchg
test
push
in
mov
adc
jmp
out
push
dec
mov
push
mov
pusha
jecxz
xchg
mov
sahf
inc
stc
mov
jmp
repnz
cmp
pop
and
idiv
push
adc
inc
loope
dec
ret
jle
shl
mov
cli
xchg
hlt
inc
test
stc
jge
adc
movs
rcl
add
dec
and
cmc
adc
mov
cmps
xchg
imul
mov
popf
pop
mov
and
dec
loop
push
cmp
sub
arpl
in
mov
ret
out
sub
cld
pusha
cwde
dec
mov
mov
sbb
repz
les
repnz
sbb
imul
setle
mov
cmp
lahf
pop
loopne
push
lahf
fidivr
ss
das
lds
adc
mov
xlat
ror
nop
xchg
aas
push
xor
xor
mov
lock
adc
test
mov
mov
in
lods
movs
adc
nop
mov
into
dec
and
xor
sbb
xor
inc
ret
mov
or
cmc
(bad)
mov
fwait
mov
ja
inc
pop
movs
add
fidiv
out
mov
aad
adc
and
jb
into
test
out
outs
jns
pop
hlt
test
cmc
and
fisubr
stos
imul
push
push
cld
mov
test
jbe
test
xchg
(bad)
dec
or
mov
rcl
sar
inc
inc
arpl
jo
(bad)
jns
out
cmp
icebp
mov
(bad)
movs
(bad)
pop
dec
push
outs
xchg
imul
xchg
push
arpl
or
aad
sbb
ins
xor
retf
movs
ret
cmps
pop
ins
cld
rol
call
jecxz
lods
sbb
lods
fsubr
dec
push
loope
popf
test
dec
dec
mov
(bad)
sub
jbe
fcmove
movs
cmps
into
in
(bad)
push
cmp
loopne
dec
int3
call
out
hlt
(bad)
ja
lods
adc
cmp
xchg
cmp
inc
mov
ins
add
js
add
mov
iret
pop
movs
xchg
cmp
xor
xchg
inc
mov
jmp
push
aam
and
scas
scas
mov
xor
xchg
daa
mov
or
mov
xchg
mov
bound
fcom
std
jg
inc
aaa
loopne
jo
cwde
mov
call
movs
cwde
in
pop
scas
jp
pop
push
jno
repnz
xchg
loop
jno
call
push
stc
xchg
jb
pop
popa
inc
test
data16
jp
dec
ins
loop
sbb
imul
ja
out
jae
xchg
jle
jb
dec
pop
cwde
das
sub
jae
push
(bad)
lods
mov
pop
div
stos
aas
inc
aas
mov
pop
fadd
or
inc
sbb
ss
data16
sbb
mov
push
into
mov
xchg
fwait
retf
retf
je
test
sub
stos
mov
popf
or
in
cdq
adc
inc
pop
inc
sbb
pop
mov
mov
cs
in
fistp
retf
xchg
ss
and
mov
pop
or
push
out
outs
jno
inc
or
aad
jp
fwait
push
mov
jns
dec
scas
mov
inc
jmp
in
psubb
dec
aas
xchg
cmps
stos
xor
fdiv
adc
jmp
out
adc
pop
lods
jb
pop
jg
ret
cwde
imul
cs
dec
fist
pop
or
cmps
mov
mov
in
retf
jmp
in
or
lods
xchg
xchg
mov
test
pop
bound
pop
outs
into
imul
mov
cmc
je
lods
lds
push
inc
retf
cmps
xor
jo
mov
enter
(bad)
ins
cld
push
test
pop
push
inc
or
int
cs
nop
fs
in
sub
sub
push
jae
or
jg
leave
and
sti
fist
lds
mov
fsqrt
sub
mov
clc
sbb
inc
test
mov
pop
inc
stos
jne
movs
mov
shl
clc
pusha
ret
or
and
lds
pop
pop
sub
inc
popf
pop
dec
scas
xorps
pop
mov
jmp
push
iret
cmp
mov
iret
sub
push
(bad)
dec
dec
inc
not
jne
push
fs
popf
fs
inc
movs
mov
cld
(bad)
adc
int3
cmp
push
pop
pop
mov
sub
xchg
mov
stos
xchg
mov
mov
mov
inc
jg
pop
lods
(bad)
pop
inc
mov
cmp
data16
mov
es
mov
xchg
(bad)
fild
add
xor
push
sub
push
(bad)
nop
sbb
pushf
sub
call
popf
int3
inc
xor
mov
and
mov
aas
fs
cmp
adc
sub
imul
add
jle
ret
out
loop
mov
mov
inc
push
xchg
or
test
pop
pop
lods
repnz
lds
mov
sbb
cmc
mov
lods
jmp
inc
in
fimul
jns
mov
ds
mov
dec
push
not
cmp
pop
fstp
xor
mov
dec
mov
jnp
mov
dec
pop
mov
sub
sbb
ror
jp
cmc
push
pop
sub
mov
mov
inc
pop
pop
call
sbb
out
outs
outs
push
test
and
retf
or
cmp
and
ret
(bad)
rcr
pop
mov
ins
push
sar
mov
sahf
mov
(bad)
in
push
jo
(bad)
sbb
sbb
outs
xchg
and
or
jmp
aaa
pushw
dec
xor
dec
xor
(bad)
scas
and
sub
test
stc
test
or
addr16
push
repnz
icebp
xchg
mov
mov
dec
sbb
inc
fcomp
inc
pusha
mov
fcom
jns
add
repz
xor
mov
sub
inc
hlt
out
enter
push
and
cmp
push
xor
gs
loop
loope
imul
sub
push
or
js
mov
imul
xchg
jae
xor
loopne
adc
lock
push
or
push
xchg
ret
jnp
sub
fiadd
dec
rcl
ret
icebp
ror
lock
dec
ror
lahf
sahf
pop
fstp
sahf
stc
ret
mov
and
dec
push
aad
xchg
lods
lock
das
ror
mov
out
push
cli
in
outs
push
mov
dec
jae
jnp
xchg
xor
pop
lods
jmp
call
fadd
sub
in
or
add
mov
push
mov
mov
adc
ret
dec
jnp
push
movs
movs
(bad)
imul
add
jmp
mov
mov
sbb
ins
sbb
loop
sub
push
or
aam
aad
sub
mov
xchg
loop
add
hlt
loope
mov
push
cmp
and
mov
(bad)
sub
ret
shr
cmps
ror
in
ret
rcr
and
ins
sar
mov
jmp
cwde
jmp
dec
jb
mov
(bad)
xor
add
and
aam
inc
dec
neg
mul
jae
add
es
xchg
vmovlpd
int
mov
shr
or
sbb
lahf
jl
inc
cld
inc
adc
sub
(bad)
lock
imul
jne
cmps
clc
(bad)
scas
pop
add
lea
pop
pop
pop
das
and
cmp
test
or
repz
in
push
jl
sbb
aas
bswap
xchg
in
in
pop
xor
call
lods
jae
sti
inc
sub
dec
mov
mov
mov
jnp
sar
and
pop
dec
pop
dec
mov
addr16
xlat
ins
(bad)
or
xchg
and
sub
(bad)
add
sub
sbb
das
push
js
ficom
jnp
gs
mul
loop
mov
test
sub
sbb
inc
inc
int
xchg
das
outs
add
jg
out
push
xor
out
mov
pop
ds
cwde
xor
mov
lahf
xor
adc
pop
rcr
imul
aam
fld1
push
fidiv
inc
push
dec
pop
cwde
icebp
sbb
ins
std
cwde
mov
ficomp
mov
mov
add
or
repnz
imul
sub
dec
int
jne
sbb
xchg
cmp
mov
add
lock
xchg
bound
(bad)
push
pop
xor
fcomip
iret
mov
xor
push
jbe
and
addr16
das
movs
fmul
push
cli
rcr
aad
(bad)
fild
mov
mov
imul
(bad)
icebp
inc
and
inc
cmc
mov
ja
jmp
sbb
fwait
inc
(bad)
adc
dec
in
push
push
iret
or
test
cmp
inc
inc
mov
(bad)
xor
mov
mov
outs
iret
dec
cmps
or
ins
add
dec
icebp
mov
xchg
loop
sbb
jne
(bad)
push
and
seto
cmps
fcom
je
jecxz
dec
inc
test
xor
call
fiadd
nop
cmp
(bad)
mov
stos
imul
out
movs
and
xchg
mov
movs
xor
cli
lds
pusha
adc
mov
sub
mov
hlt
je
mov
xchg
push
mov
cmps
push
dec
add
in
pop
jnp
jecxz
cmc
ja
mov
loopne
scas
sbb
shr
test
js
es
lods
jmp
pop
sub
mov
pop
cmps
push
pop
pushf
sub
and
lods
mov
lds
and
(bad)
jmp
adc
sahf
cmp
es
jmp
pop
push
add
mov
cmp
mov
pop
shl
mov
stc
frstor
jno
add
adc
in
retf
add
xchg
xor
mov
mov
fnstcw
js
push
sub
pop
rcr
call
out
ja
dec
stos
mov
and
js
mov
inc
je
arpl
push
lahf
inc
icebp
test
fwait
jno
scas
cs
adc
pop
mov
jl
dec
mov
inc
nop
xchg
or
movs
add
jecxz
loopne
shl
pop
fwait
cmp
mov
leave
dec
push
push
add
dec
mov
sub
push
sub
xchg
out
arpl
mov
repz
ins
push
xchg
shl
or
add
rcr
(bad)
loopne
(bad)
and
fisttp
call
mov
or
pause
jl
inc
js
sbb
and
mov
lds
test
das
fs
gs
ds
ins
mov
cmp
adc
ret
or
mov
out
cmp
and
test
sub
pop
cdq
lea
fcom
jbe
rcr
cmc
adc
xchg
pusha
les
mov
adc
add
out
pop
call
out
fnstenv
sub
inc
pop
pop
in
mov
int
fst
rcr
js
aaa
jne
fidiv
movs
aam
cmc
stos
xor
mov
dec
cmp
push
cmp
sub
cmp
out
dec
out
fsub
sub
int3
push
xor
xchg
pop
aaa
mov
(bad)
mov
or
dec
xchg
das
add
mov
jecxz
sub
pop
cs
xor
xor
pop
repz
into
cmp
add
test
retf
cmp
arpl
mov
aaa
popa
gs
pop
daa
daa
imul
mov
mov
fpatan
jp
jg
outs
sub
jecxz
arpl
inc
xchg
add
hlt
mov
aaa
fnsave
push
imul
adc
sbb
fild
cmps
test
xor
pop
in
ins
loope
mov
ins
int3
ret
xcrypt-ecb
cmps
mov
sub
pushf
(bad)
jp
dec
pop
adc
das
clc
adc
inc
sub
sub
xor
mov
jne
cdq
cmc
icebp
inc
loopne
mov
lock
xchg
cs
fsub
popa
cmp
xchg
sar
cmp
mov
pop
out
iret
ss
ds
jg
jo
sbb
dec
in
push
lds
inc
enter
jmp
mov
ja
pop
xor
mov
jmp
add
xchg
test
mov
fild
fiadd
cmp
inc
iret
pusha
inc
cmps
out
loope
add
ss
out
xchg
sahf
sbb
call
pushf
nop
xchg
lahf
mov
ja
and
es
xor
push
pop
popf
sub
adc
aaa
jae
xor
xchg
lods
adc
cwde
sti
mov
sub
pop
push
lock
loopne
sub
add
and
jl
jb
daa
mov
mov
or
xor
jle
imul
and
sahf
(bad)
sub
pop
add
sub
(bad)
hlt
in
or
mov
sub
or
dec
or
adc
dec
and
jns
add
sbb
(bad)
and
mov
sub
sbb
loopne
shl
adc
sbb
xor
xchg
fdivrp
clc
(bad)
mov
stos
out
fisubr
sbb
or
jl
and
push
pop
mov
add
push
ret
ficom
hlt
dec
jg
ins
mov
xchg
arpl
call
enter
cli
cmp
fadd
jg
leave
imul
inc
call
mov
sub
dec
sub
adc
loopne
jmp
sbb
pop
sub
sbb
adc
mov
fs
ret
add
sbb
mov
neg
xlat
enter
daa
push
les
and
out
in
pushf
enter
in
push
inc
loope
adc
(bad)
mov
imul
or
sbb
test
jae
gs
xlat
push
(bad)
fidiv
addr16
sbb
fstp
ret
test
test
ds
cli
add
inc
loop
pop
add
lock
adc
or
movs
mov
imul
clc
inc
cld
cmp
dec
push
or
fs
xchg
mov
out
rcr
cwde
xor
xchg
lds
mov
mov
fwait
cli
dec
push
mov
mov
lea
fistp
push
mov
push
mov
jne
pop
mov
test
xchg
lods
jmp
(bad)
and
pop
scas
or
push
dec
sub
out
es
sbb
retf
mov
das
dec
int3
push
loop
sub
loopne
int3
imul
jb
daa
int3
mov
or
push
out
jb
xor
xchg
jmp
sbb
lahf
retf
add
jae
imul
jne
cwde
into
mov
(bad)
mov
pop
dec
out
fbstp
adc
shl
mov
fiadd
adc
jge
inc
pop
inc
push
(bad)
fdivr
rcl
jmp
ficom
mov
xor
jnp
jb
mov
push
cdq
mov
(bad)
or
sti
or
std
arpl
shr
push
push
push
add
movs
(bad)
fidiv
in
aaa
mov
fadd
popf
push
mov
cmp
adc
pusha
cmp
cmp
add
rol
adc
ins
(bad)
pop
or
mov
test
cmp
stc
mov
addr16
adc
pop
xor
stos
aad
call
mov
push
loopne
jno
fist
xchg
in
adc
sub
push
inc
inc
xchg
cmps
mov
pop
int3
cmp
fwait
movs
fbld
jecxz
sbb
dec
(bad)
mov
xor
int3
jns
push
xchg
fnstenv
inc
mov
mov
mov
adc
mov
out
je
lods
outs
(bad)
mov
xor
add
cmp
mov
cmp
test
lds
fwait
xor
aam
push
sub
sub
mov
call
xchg
or
jb
(bad)
gs
cmp
mov
sbb
stos
cmp
push
(bad)
pop
or
or
jne
mul
fbld
sbb
mov
icebp
sub
ins
inc
repz
dec
mov
retf
mov
adc
mov
cmp
push
aam
addr16
fwait
mov
sbb
pop
or
xchg
les
(bad)
push
sub
arpl
loope
imul
xchg
mov
add
push
and
jbe
in
sub
int3
shl
dec
add
sahf
neg
ret
sub
in
mov
xlat
push
xor
jl
into
sbb
shl
mov
sahf
push
and
lods
jp
pop
and
test
mov
cwde
data16
cmp
push
or
adc
pop
add
or
cmp
mov
rep
ret
sbb
cmp
cmc
sbb
(bad)
jmp
mov
stos
xlat
in
aaa
(bad)
mov
les
fild
and
xor
lock
imul
int
xchg
popf
fdivr
cmp
mov
cmp
push
sub
xchg
into
loopne
test
popf
jbe
std
pop
sub
fimul
or
outs
call
aad
and
fs
mov
fiadd
or
gs
xchg
adc
cmc
outs
add
dec
add
jno
movs
xchg
gs
(bad)
(bad)
outs
xor
pop
add
cmp
ins
xchg
mov
mov
and
push
ret
icebp
inc
addr16
mov
pushf
(bad)
cld
sbb
mov
mov
imul
push
push
fimul
retf
inc
dec
ss
mov
add
mov
adc
lock
jle
ja
sub
(bad)
push
test
mov
popf
(bad)
jns
xchg
movs
xor
mov
imul
xor
daa
mov
bound
ret
dec
or
mov
dec
add
mov
mov
push
mov
add
pop
mov
mov
add
cmp
std
fist
gs
xchg
aaa
scas
cwde
daa
fidiv
fidiv
mul
xor
push
and
jbe
inc
cmps
jg
or
dec
sub
or
and
add
rep
pushf
mov
mov
add
scas
(bad)
stos
movs
and
(bad)
sub
adc
sbb
fnstsw
fadd
push
movs
out
fdivr
jbe
test
in
xor
sub
and
add
pop
push
out
push
mov
jmp
ins
pop
inc
and
jno
leave
and
jl
sbb
mov
xor
mov
jne
clc
mov
stos
xor
jnp
loope
js
add
push
retf
(bad)
jae
int
pop
test
scas
arpl
arpl
sbb
mov
les
add
jb
xor
mov
lds
mov
(bad)
loopne
or
push
and
lods
add
sti
mov
int
lea
or
dec
sub
ja
shr
(bad)
ret
jge
dec
repz
sub
cmp
cmp
test
xchg
sbb
jge
sub
xchg
add
out
icebp
mov
push
shl
sub
sbb
cmp
bound
mov
fwait
scas
div
mov
not
in
jle
mov
pop
mov
neg
ins
adc
jmp
arpl
and
retf
and
stos
xor
push
xchg
or
jmp
mov
dec
std
sti
or
(bad)
adc
sbb
cmp
xor
fcmove
and
jo
jle
dec
loopne
ins
cdq
xor
jae
push
dec
ins
mov
mov
pusha
daa
aaa
cmc
mov
and
xor
mov
push
mov
clc
repnz
sbb
test
aas
aad
xlat
push
cmp
and
jl
sti
add
inc
sbb
pop
and
adc
in
xor
cs
stc
cli
pushf
cmp
sbb
aaa
mov
test
or
retf
cwde
adc
jmp
jns
rol
cwde
in
fldenv
repnz
ja
xlat
mov
mov
push
aas
pop
lahf
inc
mov
ins
out
cmc
inc
add
sbb
xor
or
push
jg
pop
mov
mov
cs
clc
xchg
mov
rcl
adc
sub
mov
int
es
movs
mov
xchg
xchg
add
xor
xchg
cmp
aam
add
mov
push
loopne
outs
jmp
retf
into
fisub
xor
fsubr
movs
mul
xor
push
xor
mov
inc
push
sahf
clc
test
cli
stc
inc
js
cwde
aam
xchg
stos
sub
pop
addr16
or
lods
(bad)
xchg
or
mov
clc
sbb
pop
or
jbe
sub
adc
cli
sbb
xor
adc
inc
rol
mov
mov
js
sbb
dec
dec
push
or
sbb
jne
iret
pop
shl
inc
sahf
mov
xchg
into
sub
dec
cmp
popf
mov
cmp
sub
in
fnstcw
xchg
fs
repz
xchg
fiadd
xchg
cs
sub
and
push
ficomp
sbb
xlat
add
inc
aad
in
test
fisttp
xor
je
psubd
mov
adc
cmc
loope
loope
sbb
mov
mov
add
hlt
mov
xlat
fld
mov
pop
adc
loope
sbb
es
xchg
in
pop
xchg
(bad)
sub
push
cwde
cmc
sar
ins
pusha
test
enter
xchg
aad
jae
fst
inc
add
cvtps2pi
mov
imul
mov
int
jp
pop
scas
inc
mov
movs
jge
mov
inc
loop
mov
add
pushaw
push
(bad)
mov
adc
mov
cmc
cmovbe
dec
loop
loopne
shr
adc
jmp
je
push
and
arpl
retf
shl
mov
ret
mov
cwde
add
pop
inc
inc
int
rol
xchg
cmp
repnz
stos
ror
push
pop
jmp
ret
ins
pushf
sbb
jp
mov
jle
push
mov
cmp
in
sub
shl
mov
std
inc
sbb
dec
retf
aaa
lea
shl
mov
jns
push
cmp
pushf
setle
arpl
sub
xor
or
mov
sbb
pop
mov
jge
shr
xor
ror
and
sti
movs
sbb
lds
push
aad
fsubr
pop
cmp
loopne
mov
adc
iret
cld
add
sbb
inc
and
jae
push
jg
jmp
xor
mov
xor
fucomi
jne
(bad)
mov
adc
push
pop
pusha
sbb
bound
leave
dec
into
rol
lea
ins
ret
inc
jle
test
dec
pop
xor
rcr
xor
lahf
test
out
hlt
in
mov
pop
std
lock
xchg
jns
jp
shl
jg
repz
stos
mov
rcl
and
inc
pop
ss
sbb
and
mov
adc
lahf
and
pushf
pop
adc
add
sbb
inc
jmp
push
push
les
(bad)
hlt
test
int
cs
mov
push
pop
mov
or
pop
lahf
cld
enter
sub
enter
test
pop
fldcw
inc
(bad)
ja
push
adc
addr16
jb
out
aam
fst
ss
xchg
popf
sub
and
daa
aas
xchg
jne
cmp
jnp
bound
jmp
rcr
sub
xchg
ror
movs
xchg
pop
loope
aaa
stos
aam
xchg
stos
dec
mov
icebp
hlt
daa
push
shl
repz
in
lock
adc
pop
ret
loope
adc
dec
out
test
push
repnz
in
push
loope
mov
sub
pop
pop
adc
fwait
lods
fadd
push
in
adc
ficomp
mov
adc
cwde
push
or
inc
and
(bad)
or
sub
sbb
test
jge
repnz
scas
xchg
and
fcomp
dec
movs
mov
xchg
enter
sbb
mov
bound
(bad)
es
adc
push
not
pop
adc
pop
adc
mov
addr16
(bad)
jp
in
lods
jecxz
jno
push
xor
shl
adc
add
mov
ja
int
or
rol
xchg
pusha
pushf
inc
pop
xchg
lods
sub
mov
test
fstp
add
jb
ret
cmp
ret
xchg
sub
repz
fs
shl
loope
jge
xlat
cmp
imul
dec
push
mov
std
imul
xchg
sar
and
test
fstp
push
mov
jo
xor
out
loopne
push
ret
mov
enter
rcr
sbb
dec
dec
push
sub
mov
shl
lods
test
pop
jp
movs
jo
lea
clc
mul
cs
idiv
fst
cmps
iret
fs
daa
jl
jne
cmp
sbb
hlt
xchg
push
adc
push
add
repnz
jae
gs
push
sub
lahf
ins
(bad)
sti
dec
add
sti
movs
pop
xor
mov
or
push
rcr
(bad)
aam
aam
repz
outs
sbb
mov
ins
or
xor
jecxz
jno
lock
xchg
adc
push
sbb
jmp
lock
xor
popf
jno
fdivr
mov
cmp
ror
jne
fstp
dec
clc
or
lea
cli
mov
(bad)
dec
or
mov
(bad)
or
inc
int
pop
adc
sbb
mov
adc
(bad)
xchg
push
add
pop
cmp
sbb
jo
std
cmp
cwde
push
push
retf
cmp
cld
xor
arpl
addr16
ss
inc
mov
push
adc
ins
adc
jo
pop
lock
iret
add
popa
loopne
sbb
xchg
mov
rcl
(bad)
jmp
jne
cmp
adc
sub
pop
int
sbb
aam
(bad)
sbb
xor
ret
lods
fsubp
in
mov
or
pop
(bad)
fs
inc
(bad)
int3
push
xlat
pop
mov
repnz
or
mov
ins
leave
ds
push
repz
push
in
mov
mov
movs
sub
mov
stc
clc
movs
xchg
je
sar
sahf
mov
cdq
stos
fnstsw
adc
outs
call
and
mov
call
popa
movs
pop
out
nop
pop
out
inc
mov
ret
xor
adc
jg
or
add
pop
inc
jl
in
push
loope
(bad)
dec
pop
pop
cmp
outs
sbb
sbb
jg
xchg
aam
sub
push
fwait
pop
mov
adc
sub
aad
dec
jmp
fs
or
pusha
dec
ss
out
imul
pop
mov
sar
cmp
or
inc
loopne
dec
inc
sbb
push
push
adc
(bad)
mov
cld
fsubr
cs
cbw
cmps
and
mov
pop
rol
mov
imul
pop
pop
push
jg
or
lock
fs
in
add
scas
jg
mov
push
inc
fst
in
or
dec
adc
sub
test
push
jp
mov
add
fdiv
xor
jne
add
mov
mov
shr
inc
(bad)
(bad)
shl
cmp
push
iret
push
pop
lahf
push
xchg
out
repnz
mov
sbb
mov
fnstenv
mov
out
adc
sub
inc
xor
mov
push
mov
(bad)
out
mov
loop
fcmovb
stos
or
jle
add
cdq
dec
pusha
sub
xchg
mov
mov
inc
pop
outs
scas
retf
cmp
mov
call
adc
fisttp
xor
(bad)
shl
sub
xchg
mov
iret
jb
add
iret
mov
ror
arpl
jecxz
inc
push
pushf
scas
inc
jb
lahf
sub
adc
inc
add
(bad)
pop
push
jg
arpl
das
pop
sbb
and
jno
xchg
push
in
call
inc
fisub
mov
enter
(bad)
shl
(bad)
mov
add
aam
mov
sub
pop
shr
pop
cmp
inc
mov
cmps
mov
push
inc
add
test
add
icebp
sbb
stos
je
jp
loop
int3
pop
push
data16
es
jmp
add
stc
jae
cmp
push
sbb
add
(bad)
jp
pop
iret
les
in
imul
call
mov
shl
test
mov
jmp
call
jns
in
or
push
sbb
movs
pop
(bad)
mov
sub
inc
cmps
(bad)
ins
cmps
daa
mov
fisttp
jge
jo
outs
out
mov
push
loope
pushf
imul
rcr
jmp
add
fnsave
(bad)
pop
sbb
push
(bad)
int3
outs
lock
dec
(bad)
cs
lds
adc
gs
outs
idiv
(bad)
lahf
inc
sbb
mov
ret
lods
mov
(bad)
push
pop
leave
ret
push
fnstenv
jae
(bad)
mov
std
pop
dec
test
movs
ss
outs
pop
test
jmp
repz
xchg
pop
test
jl
(bad)
imul
fisttp
dec
add
js
xchg
dec
jmp
and
fs
jmp
jp
js
loop
fs
cmp
test
sbb
sub
lock
lods
xlat
mov
test
xchg
stos
pushf
int
pop
mov
in
pop
adc
inc
adc
xchg
test
dec
aaa
add
mov
cwde
repz
sbb
cmp
add
inc
xchg
pop
sub
movs
iret
ja
lds
arpl
mov
out
rcr
push
cmp
mov
add
popa
mov
cs
inc
mov
sub
not
add
lods
fcmovnb
clc
punpckhwd
je
lods
sub
cld
inc
movs
dec
xchg
cli
dec
push
std
jge
(bad)
push
out
push
sub
cmp
mov
xor
cmp
test
stc
arpl
jo
mov
add
test
movs
call
push
in
cwde
out
les
mov
in
arpl
xor
fsub
rcl
mov
pop
(bad)
and
cmp
cmp
mov
sbb
or
bound
int
adc
sbb
xchg
sub
xor
or
scas
in
(bad)
stc
add
rol
std
xor
and
out
into
hlt
mov
mov
adc
ficom
mov
mov
loopne
lds
adc
sbb
mov
mov
or
cdq
push
aam
call
scas
pop
sbb
add
or
dec
jecxz
xor
(bad)
push
sub
clc
ja
adc
push
sbb
inc
(bad)
ret
ret
rol
sahf
mov
scas
inc
inc
jl
push
add
and
cmp
jg
pop
push
xchg
dec
mov
inc
leave
add
adc
(bad)
mov
and
cld
std
ret
cmp
cli
in
xchg
add
mov
sub
mov
push
jmp
ins
(bad)
arpl
dec
mov
mov
nop
daa
ins
sbb
rol
lods
sbb
add
int3
sbb
fld
mov
cmp
pop
je
sahf
fist
sbb
or
pop
mov
mov
gs
out
inc
jecxz
cdq
sbb
fdivr
in
aam
call
sbb
cmps
jle
call
hlt
sub
pop
not
ror
lods
pop
das
mov
xchg
mov
shl
mov
and
xchg
cs
scas
mov
mov
xchg
add
into
push
mov
push
iret
push
mov
iret
jbe
loopne
jmp
retf
adc
xchg
push
mov
fidiv
push
idiv
mov
stc
adc
sub
sbb
lods
jle
pop
xchg
aam
not
aam
adc
cmp
outs
dec
fwait
mov
lahf
(bad)
retf
out
push
call
ss
mov
pop
aaa
lahf
push
jae
idiv
xchg
stos
pop
int3
dec
repz
sub
inc
mov
dec
out
movs
cli
cmp
inc
pop
add
loopne
sti
cld
sbb
lods
cmp
jl
pushf
fisttp
jecxz
mov
sbb
pop
add
das
cmp
ficom
popf
data16
mov
mov
adc
add
fld
in
mov
or
mov
shl
ror
and
js
push
mov
adc
clc
arpl
fbld
shl
jnp
hlt
bswap
mov
cwde
int
fwait
mov
popa
leave
retf
jg
les
inc
push
push
inc
cmps
stos
jg
ins
inc
loopne
dec
cld
pop
pop
test
xchg
xchg
sbb
pusha
popf
pop
jecxz
add
(bad)
mov
jno
sub
push
out
mov
add
mov
sub
add
cmp
mov
dec
(bad)
ds
fdiv
lahf
iret
cmps
mov
loope
sbb
sti
mov
fsub
sti
mov
mov
dec
scas
sbb
push
jecxz
adc
or
push
(bad)
data16
mov
jbe
jns
pop
(bad)
in
adc
iret
fisubr
mov
xor
jp
sbb
fwait
jmp
cmp
ldmxcsr
mov
jns
sub
inc
jmp
add
ret
mov
stos
push
ret
fmul
(bad)
mov
jp
gs
cmps
mov
push
and
aad
inc
test
push
ret
mov
(bad)
aas
mov
std
push
cmps
je
adc
or
mov
sahf
into
push
jae
(bad)
mov
lahf
inc
imul
ja
xchg
jle
das
sbb
push
leave
xchg
pop
les
sub
mov
fnstenv
idiv
in
push
es
fist
xchg
push
fwait
mov
jbe
and
rol
sar
xchg
add
mov
or
adc
sub
loope
jg
scas
mov
rcl
and
jb
fsub
inc
fdivr
imul
and
xchg
sbb
xchg
rcl
pop
int3
popf
adc
or
and
daa
and
pop
push
add
mov
mov
mov
adc
dec
(bad)
je
jne
jae
dec
pop
std
inc
dec
sbb
(bad)
rol
jmp
lahf
iret
mov
pop
and
mov
shl
xchg
xor
or
fstp
cld
xrelease
aad
xchg
xlat
ds
jae
in
xchg
addr16
inc
int3
mov
dec
in
(bad)
and
mov
fisubr
iret
cmp
mov
into
cld
dec
out
or
mov
push
xchg
dec
imul
inc
mov
(bad)
jg
jmp
xor
mov
nop
xor
je
adc
push
xor
adc
stos
push
and
cmp
add
dec
adc
jl
sub
int3
mov
fild
inc
lods
enter
cmp
iret
fucom
icebp
aam
xor
adc
dec
or
rcl
fldcw
js
sub
int
mov
push
inc
outs
sub
sub
sbb
mov
fld
les
loop
mov
ins
lock
sub
mov
push
dec
cmp
pop
push
inc
std
xor
jns
cmp
xchg
sahf
pushf
push
adc
aaa
jbe
mov
fwait
ret
rcl
or
or
mov
cmp
adc
jge
push
xlat
mov
xor
(bad)
jle
cmp
stc
jae
icebp
call
fimul
pop
cld
mov
daa
mov
lods
fnstsw
repnz
fsubr
daa
sbb
pop
push
jl
mov
jb
sbb
xchg
int
leave
inc
ror
inc
mov
outs
clc
cwde
inc
clc
inc
cmp
adc
push
lahf
pop
mov
and
loopne
xor
xchg
shl
jo
call
bound
aas
mov
ins
sti
push
dec
xlat
cmps
cwde
aas
xor
ss
mov
xor
in
jb
mov
jae
jge
fisttp
pop
addr16
les
std
mov
test
(bad)
loope
ds
mov
(bad)
xor
shl
jp
or
xchg
and
jl
xor
jg
movaps
mov
imul
les
sahf
xor
cs
and
cld
and
sub
scas
sub
(bad)
ret
ret
test
pop
pop
xchg
inc
jp
movs
dec
ja
push
cwde
dec
shl
fsub
jo
adc
jmp
fcom
cmp
inc
imul
xor
inc
jecxz
sbb
div
mov
bound
push
pop
out
rcr
mov
push
and
mov
mov
or
test
mov
or
jns
shr
add
ret
mov
bndstx
fwait
adc
jbe
fstp
inc
lock
mov
ss
out
xchg
fadd
push
iret
cmp
push
mov
(bad)
lds
push
mov
lds
rcr
adc
adc
mov
mov
mov
jmp
loop
aam
push
(bad)
adc
outs
push
dec
scas
popf
dec
pusha
dec
ds
xchg
xor
imul
das
loopne
(bad)
imul
aam
push
push
adc
icebp
jbe
je
mov
xor
add
mov
mov
xchg
stos
adc
or
or
leave
or
push
xor
mov
add
xchg
(bad)
stc
sub
xor
mov
je
aam
sbb
xor
mov
sub
xor
cli
xchg
mov
add
pop
or
daa
fwait
cmps
push
and
mov
(bad)
idiv
sub
ficomp
mov
push
repz
imul
push
fst
imul
adc
push
and
stos
xor
mov
into
xor
pop
jbe
pop
fcomp
add
aam
push
outs
clc
rcl
out
aam
inc
in
bound
popa
jecxz
lods
jns
call
xchg
jl
fsub
std
dec
ds
loop
mov
lahf
cld
enter
fcom
mov
push
pusha
les
jecxz
pop
jmp
dec
push
pusha
xchg
nop
mov
addr16
stos
mov
xchg
push
xor
or
(bad)
call
cld
adc
sar
xchg
lahf
sub
push
adc
imul
mov
int3
dec
jno
pusha
stc
add
aaa
in
fild
ret
fstp
lock
cmp
stos
call
stos
lods
adc
rcr
pop
in
sbb
add
iret
adc
jne
mov
jge
push
dec
(bad)
mov
ret
push
sub
and
sub
and
dec
push
jge
fistp
test
add
mov
jmp
fs
xor
js
int3
pop
sub
dec
call
mov
imul
inc
jae
out
push
cmps
mov
or
add
mov
das
push
jns
mov
ss
mov
int3
cli
pop
rol
push
cld
hlt
pop
push
mov
adc
sahf
(bad)
(bad)
stc
stc
fwait
push
rcr
push
jae
cmp
mov
jns
adc
out
das
fiadd
jmp
pop
jmp
inc
scas
cdq
mov
mov
into
ficom
cmp
push
jae
nop
repnz
push
sbb
and
neg
sub
cmp
stos
bound
mov
lock
enter
inc
pop
test
retf
lahf
scas
mov
outs
jecxz
cmp
ja
int
push
in
ds
fdivrp
mov
pop
hlt
sub
fisubr
mov
xchg
push
call
mov
push
push
pop
xor
dec
repnz
in
pop
dec
ret
push
mov
(bad)
sub
pop
or
retf
pop
and
jae
addr16
jecxz
lahf
loop
inc
pop
shl
pop
test
sub
lahf
jg
aaa
loopne
cld
push
outs
xchg
ret
push
cs
cmp
call
jg
enter
(bad)
ins
test
mov
cdq
scas
mov
cwde
test
adc
push
rol
inc
sub
rep
lahf
add
push
scas
daa
stos
add
push
inc
and
neg
add
mov
jecxz
mov
jne
add
jecxz
sub
xchg
push
sbb
cmp
call
mov
lock
loop
or
xchg
mov
xchg
pop
fs
lods
fist
xlat
sub
out
adc
imul
jle
fistp
cdq
imul
pop
icebp
fcomp
xor
fisttp
(bad)
sbb
sbb
arpl
or
movs
mov
in
sar
arpl
push
ret
rcl
xor
out
mov
(bad)
loop
push
and
dec
aad
sub
seta
dec
lds
mov
out
dec
jnp
cwde
lock
cwde
das
jp
push
call
pop
dec
xor
push
mov
dec
out
mov
inc
or
adc
or
push
inc
nop
xchg
retf
adc
popf
movs
daa
aas
pop
ds
xor
call
inc
outs
pop
xchg
cmps
leave
pop
ret
jnp
jmp
test
inc
inc
cmps
out
inc
cmp
pusha
pop
rol
sbb
mov
aas
stos
pop
rol
sub
xchg
or
outs
mov
aaa
xchg
pop
(bad)
pop
inc
inc
stc
adc
jp
mov
leave
lea
pop
dec
push
pop
daa
aam
push
imul
ret
fild
pop
push
scas
cmp
adc
mov
inc
iret
mov
add
retf
call
mov
mov
scas
rol
iret
jbe
jmp
pop
ret
repnz
loop
lahf
cmp
into
test
ret
inc
jae
ror
cmp
cmp
jno
sti
cmp
cmp
inc
cmp
jns
clc
jno
imul
push
and
or
fs
test
fidivr
sbb
mov
sub
neg
jnp
xor
xchg
mov
idiv
jnp
push
outs
neg
add
sbb
movs
test
fiadd
jge
test
stos
pop
jns
inc
adc
ror
cmp
adc
and
lods
xchg
cmp
xchg
push
xor
push
dec
mov
mov
mov
push
ds
jmp
mov
test
xchg
icebp
adc
stos
xor
fisttp
ud1
int3
pop
(bad)
dec
push
imul
popa
cmp
sbb
aaa
out
jp
test
(bad)
data16
ins
(bad)
arpl
or
push
and
jge
cmps
dec
es
sbb
dec
(bad)
fcmovu
and
xor
lahf
(bad)
fidivr
mov
push
mov
leave
push
int
(bad)
out
and
mov
imul
leave
stos
pop
xor
lahf
push
jmp
push
push
or
mov
inc
cwde
jmp
aam
out
push
into
dec
loopne
ret
std
std
xchg
movs
das
test
or
out
jg
add
sbb
jle
inc
stos
push
lods
add
jbe
dec
xchg
sub
cli
push
sbb
pop
setge
lahf
jbe
sar
ins
cli
dec
xchg
dec
pop
aam
sbb
cld
out
push
adc
icebp
inc
push
mov
inc
mov
xor
je
xor
push
(bad)
mov
push
mov
jle
inc
jmp
mov
and
hlt
popf
xchg
retf
loop
dec
ja
js
push
pop
mov
or
jns
fstp
jo
inc
(bad)
outs
add
mov
adc
cmp
cwde
sub
mov
or
adc
pop
pushf
movs
mov
mov
movs
mov
inc
jb
ins
clc
popf
loop
jg
mov
inc
sbb
loop
xor
jbe
add
push
test
push
ds
sbb
out
push
inc
movs
xor
dec
(bad)
mov
test
inc
push
imul
or
aad
push
mov
sbb
xchg
retf
xor
jo
mov
mov
push
fisubr
adc
sub
sbb
inc
cmp
fnstcw
fcom
aad
add
lahf
inc
out
add
push
in
sbb
mov
sahf
in
dec
out
push
test
jmp
ss
sar
push
pusha
jo
retf
jge
ja
hlt
ins
scas
mov
and
adc
(bad)
push
lods
xchg
adc
sub
shl
call
lods
repz
add
pop
test
dec
jno
sbb
jg
test
adc
dec
loop
mov
jp
xor
or
in
pop
clc
mov
push
sahf
aam
das
je
(bad)
pop
fdiv
lahf
stc
inc
sbb
xor
adc
mov
mov
stc
ficom
popa
bound
jecxz
das
push
ja
mov
xor
outs
and
xlat
adc
and
mov
imul
pop
inc
mov
inc
arpl
inc
mov
jecxz
pop
stos
mov
ret
std
outs
imul
(bad)
mov
out
(bad)
repnz
cmp
daa
lea
orps
dec
cld
add
aaa
gs
nop
ror
out
sar
xchg
xchg
mov
adc
outs
aam
retf
mov
sti
rcr
pusha
xor
jmp
stos
adc
sbb
test
stos
sub
in
repnz
(bad)
cwde
shl
mov
xchg
call
mov
inc
and
test
pop
lods
add
mov
ja
mov
popf
adc
add
push
retf
arpl
hlt
xchg
ja
push
xchg
jbe
xchg
jmp
rcr
hlt
cmp
int3
shl
retf
(bad)
arpl
clc
faddp
jge
dec
sbb
les
adc
jl
push
(bad)
sbb
cmc
pop
clc
test
rcl
pop
fs
mov
out
inc
sub
lahf
arpl
ins
jge
rcr
push
cmp
(bad)
pushf
icebp
jecxz
mov
test
push
xor
mov
sbb
cmp
outs
push
inc
mov
or
inc
cmp
mov
push
jo
(bad)
not
les
xlat
sbb
fcomp
cmp
xlat
sahf
mov
jnp
mov
shl
and
jae
cmp
jle
jge
scas
adc
ret
or
ds
sbb
lahf
mov
gs
pushf
cwde
cmp
lock
ds
sti
(bad)
jne
dec
sub
fild
push
fsubrp
into
mov
std
pusha
or
jg
aas
pop
sub
rol
or
lahf
xor
ret
cmps
mov
call
rcl
dec
jl
cmp
out
dec
es
sub
push
push
test
inc
jb
push
or
in
mov
and
rcpps
xchg
clc
(bad)
outs
mov
popa
and
cmp
pop
test
sub
clc
scas
push
ins
pushf
test
les
imul
cli
mov
add
xchg
mov
iret
jg
or
stos
push
in
pop
xor
lds
sahf
add
daa
push
inc
sub
xor
sub
pop
nop
and
shl
sbb
(bad)
jbe
outs
lods
in
std
retf
cdq
mov
scas
sbb
int
movs
xchg
inc
addr16
cmp
xchg
dec
adc
test
imul
xchg
or
xor
mov
cmp
and
inc
pusha
push
mov
sahf
aaa
stos
not
mov
cmp
loope
sbb
cmp
xchg
jbe
adc
imul
sbb
jno
(bad)
dec
mov
inc
cdq
dec
pop
or
mov
das
fs
fisub
xor
adc
xchg
sahf
mov
mov
out
data16
mov
and
or
ins
push
leave
leave
adc
ins
and
arpl
aas
mov
popa
in
ins
cmps
aam
(bad)
in
mov
xchg
jmp
(bad)
repz
clc
dec
dec
cli
neg
rol
iret
mov
imul
cmp
inc
xlat
jecxz
push
fldcw
adc
nop
or
cmp
push
xchg
lods
push
xchg
daa
(bad)
mov
hlt
xchg
xor
aad
inc
loopne
pop
aam
sub
sbb
out
inc
sub
int
(bad)
fld
sub
jg
jge
or
and
aam
neg
loope
aaa
icebp
ja
retf
dec
xchg
dec
or
mov
jns
xor
loope
sub
iret
loopne
shl
and
ja
jno
and
outs
repnz
adc
fs
add
jmp
pop
ss
bound
rcl
scas
in
lods
lea
adc
mov
and
add
cmp
or
iret
fst
jmp
(bad)
dec
xchg
shl
dec
xor
leave
loopne
mov
xlat
sub
fcmovb
repz
popf
add
cmp
test
adc
iret
mov
mov
xchg
ds
xor
test
adc
xor
push
sub
sub
mov
or
aad
cld
(bad)
mov
pop
loop
sbb
(bad)
dec
ja
imul
in
xor
out
sub
adc
mov
ffree
fiadd
xor
and
popf
jmp
adc
or
push
pop
mov
aas
xchg
jp
and
lds
xchg
(bad)
push
out
xor
rol
mov
adc
jo
jnp
(bad)
adc
addr16
xchg
push
push
imul
cmp
inc
pop
cmps
mov
sbb
push
xchg
push
cli
lods
out
popf
(bad)
jecxz
mov
cmp
pop
jle
pusha
aas
data16
inc
std
gs
and
sti
inc
xor
push
int
jle
test
push
xor
sbb
enter
inc
ins
mov
ds
mov
enter
fs
ja
hlt
pop
inc
shrd
mov
pop
adc
popa
scas
(bad)
iret
inc
jns
adc
push
jp
fstp
mov
ror
mov
mov
push
mov
and
imul
inc
sar
push
test
fisttp
test
push
popa
in
ror
(bad)
cmp
pop
add
sub
test
movs
or
fnsave
add
sub
inc
mov
jnp
mov
or
mov
int
add
fstp
fldenv
dec
push
aas
(bad)
jge
pop
sbb
mov
mov
sbb
clc
(bad)
packuswb
fidiv
mov
(bad)
push
dec
ret
(bad)
cmp
xchg
cmc
mov
rol
push
sbb
jmp
add
out
and
add
test
iret
test
push
add
pop
push
lock
lsl
xor
xchg
push
sti
sti
or
mov
out
add
pop
cmp
retf
ror
or
mov
jge
mov
(bad)
lods
cdq
xlat
pop
mov
les
lods
cs
retf
jbe
jmp
sbb
ins
dec
out
pusha
push
stos
sbb
cs
sar
jecxz
xchg
mov
div
retf
jo
jle
mov
fisttp
clc
pop
dec
adc
popa
fild
xor
pop
jno
xchg
and
dec
mov
loop
mov
inc
sbb
jp
pop
dec
mov
and
adc
mov
mov
loope
xchg
cld
xlat
mov
mov
add
fdiv
gs
imul
xor
mov
sar
mov
and
add
add
ds
mov
adc
sub
daa
movs
mov
jecxz
xchg
daa
xchg
ss
ret
mov
fwait
retf
repz
inc
(bad)
hlt
pusha
sub
sbb
icebp
sub
repz
inc
push
inc
adc
(bad)
push
adc
or
inc
ret
pop
cld
sbb
xchg
cwde
pop
repz
adc
neg
shr
scas
jae
loope
xlat
pop
mov
jg
stc
mov
fwait
mov
pop
(bad)
cmp
jp
jmp
test
dec
rcr
lods
out
add
or
mov
int
loop
arpl
mov
push
mov
pop
stos
stos
pop
daa
lods
scas
in
cmp
jge
inc
sbb
jae
mov
dec
mov
mov
bnd
mov
movs
ja
retf
in
push
out
rol
call
and
ret
jmp
stos
or
add
adc
(bad)
retf
add
mov
rol
jne
pop
ds
icebp
pop
sbb
out
imul
mov
inc
ins
cmp
add
xor
cs
fidivr
inc
js
pop
sti
add
scas
pushf
jb
cdq
push
jbe
lock
mov
jl
xchg
and
push
sub
scas
add
pop
add
imul
inc
push
push
push
dec
std
add
jns
sbb
fs
out
adc
mov
ja
ror
enter
mov
ror
mov
add
aam
call
arpl
(bad)
push
sbb
xor
or
inc
(bad)
movsx
push
push
mov
adc
lahf
fneni(8087
enter
pop
int
ret
inc
mov
cmps
mov
jne
iret
jmp
cmps
leave
retf
ficomp
dec
xor
sbb
and
cmps
into
out
adc
lock
jb
repnz
jae
sbb
retf
stos
cmps
jbe
out
into
js
pop
cmp
adc
push
sbb
(bad)
fwait
push
pushf
cli
jp
mov
into
mov
xor
int
push
sub
xchg
jecxz
in
dec
push
bound
mov
add
das
aas
(bad)
and
ins
test
icebp
dec
pop
ja
out
das
pop
mov
sbb
shl
repnz
(bad)
adc
loop
mov
jle
lods
rol
jbe
or
hlt
sbb
inc
lods
jmp
cmps
push
rcr
sub
dec
jo
dec
push
popa
rcr
test
cmp
sub
aad
fst
out
ret
jmp
jnp
and
mov
cmp
es
test
into
out
jbe
mov
push
pusha
out
adc
xchg
jmp
mov
imul
sbb
dec
push
sbb
fst
pop
mov
les
nop
fwait
mov
xor
and
jl
mov
and
dec
xchg
in
mov
adc
sti
adc
pop
jge
jp
in
cmc
je
xchg
and
sti
sbb
push
lahf
jno
std
cs
cmc
xor
push
mov
jmp
inc
lahf
xor
mov
lods
mov
hlt
mov
dec
stc
jae
cs
and
inc
push
pop
jbe
push
dec
jmp
out
in
add
push
bound
bound
fld
push
push
add
clc
jmp
movs
sbb
stos
mov
pop
xor
aam
adc
arpl
push
mov
dec
loope
pop
jne
cdq
cmp
lock
retf
mov
xchg
sbb
in
pop
sbb
push
pop
cdq
lds
in
sbb
lods
add
mov
gs
fmul
or
pop
mov
mov
je
mov
adc
push
lahf
mov
cld
sub
jne
push
jle
cmps
(bad)
or
adc
xchg
jnp
push
inc
inc
fiadd
push
aam
(bad)
mov
xor
pusha
ret
inc
jno
dec
mov
jno
adc
xor
inc
dec
jg
dec
ret
mov
pop
and
lds
call
and
push
pop
adc
and
lds
or
dec
es
lahf
push
xchg
jl
jle
mov
jmp
retf
xor
mov
or
int3
mov
xlat
sub
or
add
stos
gs
call
pop
inc
sub
std
mov
mov
sbb
jns
mov
sti
jns
cmp
sbb
or
(bad)
dec
dec
sub
ficom
xor
outs
out
ret
sahf
aas
aaa
pop
and
jne
and
xchg
add
lahf
mov
(bad)
icebp
add
hlt
(bad)
and
mov
js
loopne
push
fs
ins
mov
push
pop
dec
sbb
mov
push
pop
and
iret
lahf
push
sbb
jo
outs
retf
or
and
movs
popa
xchg
pop
jbe
adc
sub
jg
ret
mov
ins
mov
xchg
sbb
xor
into
mov
int3
lahf
out
mov
aas
dec
test
(bad)
sub
sub
std
cmp
cmps
xchg
call
inc
push
add
push
call
adc
je
mov
int
rcl
nop
data16
imul
(bad)
imul
popf
jbe
inc
or
inc
out
dec
std
(bad)
daa
aaa
sbb
test
xor
in
sbb
repnz
push
imul
xlat
sub
retf
add
daa
push
hlt
dec
iret
loop
movs
imul
int3
xchg
xor
out
inc
repnz
push
mov
adc
xchg
push
jns
aas
push
mov
xchg
enter
call
sub
adc
jle
sbb
out
pop
das
(bad)
sub
fdivr
or
fnstcw
ret
sahf
leave
sbb
jle
inc
(bad)
adc
aaa
and
xchg
les
xchg
xchg
dec
hlt
mov
pop
adc
dec
sub
ds
sbb
movs
inc
xchg
mov
xor
sar
mov
or
pushf
inc
(bad)
xchg
aas
ds
test
or
dec
mov
push
clc
pop
mov
xlat
or
imul
cs
sbb
iret
push
add
pop
push
add
test
out
xchg
push
sbb
lods
(bad)
aam
pop
addr16
mov
loope
out
test
jl
mov
adc
jbe
and
xchg
outs
jo
fld
pop
push
nop
mov
int
cwde
test
fadd
call
dec
(bad)
or
cmp
gs
nop
pop
cmp
xchg
jp
imul
shl
lods
jmp
jmp
fs
ja
add
mov
cmc
or
jns
jecxz
fidiv
idiv
test
mov
push
inc
js
add
sahf
int3
mov
xchg
push
jp
imul
jne
xor
push
sub
dec
adc
mov
(bad)
push
mov
or
pop
and
dec
addr16
xor
cld
fld
in
mov
and
mov
jp
pop
ret
cmp
int
into
mov
mov
(bad)
shl
loope
mov
sub
int3
mov
fsub
mov
and
leave
loop
je
hlt
inc
add
push
shl
pop
mov
and
ret
outs
lods
push
clc
es
mov
add
test
xchg
pop
ret
or
push
fistp
std
inc
inc
fstp
jg
gs
jno
sbb
jno
fld
cmp
add
(bad)
inc
stos
nop
mov
scas
cdq
imul
fild
cmps
sahf
cdq
mov
fbstp
test
sub
sbb
retf
cmp
push
push
mov
push
sbb
std
mov
pop
mov
pop
dec
fcomp
push
or
sbb
out
or
out
nop
call
sub
adc
inc
mov
cmp
std
mov
icebp
adc
repz
(bad)
cmp
scas
push
ins
push
lea
mov
jp
and
lods
xlat
mov
rcr
call
sub
repz
in
addr16
imul
sbb
dec
adc
popa
mov
mov
das
jo
jae
test
sub
ret
out
push
out
sbb
sub
xlat
mov
(bad)
fldcw
outs
lock
leave
pop
div
pop
pop
shl
loop
pop
ret
mov
mul
out
xchg
out
xchg
jmp
into
pop
ds
mov
rcr
daa
mov
mov
leave
(bad)
ds
sub
pop
push
jg
mov
mov
scas
repnz
mov
(bad)
cli
mov
xor
cmp
mov
push
xchg
cmps
or
push
stos
push
popa
xor
pop
push
sbb
idiv
pushf
pop
ins
mov
ret
push
leave
push
mov
jg
daa
adc
cmp
shl
pop
sub
mov
call
mov
cmp
mov
xor
pop
add
cmp
cmp
mov
or
cli
mov
(bad)
mov
stos
pop
into
inc
or
dec
mov
push
ret
scas
pop
mov
lock
or
jp
ja
(bad)
sub
push
call
clc
push
sbb
lea
mov
ins
add
push
popf
jle
enter
ins
fs
cmp
cmp
mov
pop
jns
xchg
push
push
cmps
push
out
ja
lock
pushf
and
mov
push
mov
std
les
jne
xor
and
sub
sahf
lds
mov
cwde
fldlg2
or
mov
lods
stos
inc
lock
cmp
push
fstp
rsm
and
lods
leave
call
xor
call
add
ret
add
mov
xchg
dec
mov
push
xchg
in
stos
adc
pop
push
sbb
ret
fnsave
jg
test
fisttp
pop
mov
adc
cmps
push
sbb
scas
and
test
jp
test
inc
lods
pop
jnp
gs
adc
fild
int3
mov
mov
jbe
or
cwde
icebp
cmp
xchg
mov
add
es
pop
shr
xor
pop
imul
lock
push
xchg
sub
pop
push
inc
bnd
sar
sub
and
imul
pop
mov
test
aas
inc
ds
xchg
sbb
mov
sub
lods
adc
and
cdq
mov
fmulp
mov
pop
(bad)
loop
in
call
movs
test
out
fdivp
shl
and
aad
mov
repnz
fidivr
pop
iret
pop
adc
or
jnp
and
loope
in
call
pop
inc
jmp
sbb
mov
leave
add
mov
or
sub
or
cmps
sub
cli
add
and
or
jb
or
push
(bad)
sbb
jbe
sqrtps
dec
aad
es
jp
dec
xor
and
pop
mov
ss
dec
xchg
jmp
mov
pop
in
push
es
and
or
pop
test
ret
mov
jg
nop
mov
test
and
cwde
stc
pop
out
xchg
jne
cmc
shl
dec
int3
xchg
cmp
enter
fnstcw
std
mov
xacquire
fwait
imul
movs
jb
loopne
add
test
dec
cld
nop
fldcw
sub
call
add
fadd
sar
movs
(bad)
pop
stc
sbb
cmps
mov
fmul
std
mov
test
jmp
cmps
jmp
call
imul
stos
dec
or
mov
in
hlt
mov
mov
sub
fisttp
cwde
add
pop
fmul
ror
sahf
leave
xchg
(bad)
in
scas
(bad)
call
call
aam
in
pop
xchg
sbb
clc
hlt
test
fldcw
test
in
gs
ins
test
push
fwait
and
repnz
cmps
sub
add
es
pushf
adc
dec
mov
cmp
jmp
jl
or
pop
aad
or
mov
push
cmp
jbe
xchg
cmps
(bad)
addr16
idiv
pop
jmp
mov
push
inc
jp
jecxz
mov
sahf
mov
sbb
mov
rcr
mov
push
aas
xchg
or
mov
and
xchg
aaa
mov
cmp
retf
mov
sub
cwde
sub
jae
stos
cdq
cwde
jl
mov
jecxz
or
mov
jne
mov
mov
mov
lods
push
fisubr
pop
fbld
scas
add
ret
sub
xlat
je
cli
sbb
mov
imul
outs
leave
imul
lea
jmp
retf
adc
sbb
test
dec
sti
mov
call
inc
adc
add
add
pop
retf
pop
pop
loopne
push
mov
mov
mov
lock
repnz
enter
pop
leave
retf
mov
lock
adc
or
popf
lods
dec
xchg
mov
dec
and
xchg
(bad)
lods
fcomp
(bad)
out
cmp
jmp
adc
push
jns
inc
push
mov
rcl
adc
cmp
jmp
mov
add
push
sbb
and
call
xor
or
(bad)
pop
mov
and
int3
push
jno
cmp
xchg
inc
sbb
test
push
sub
sub
call
cmps
dec
nop
pop
aam
push
xchg
loop
add
or
das
inc
pop
mov
sub
mov
jbe
std
jns
sbb
cmp
cmp
cmp
daa
rol
std
mov
pop
and
mov
aaa
pop
dec
or
mov
mov
dec
out
or
pop
scas
adc
add
int
sbb
cmp
das
inc
sub
leave
jl
mov
in
jns
out
ja
sti
lea
fwait
add
out
sub
and
add
std
jg
ja
lea
mov
sbb
jo
int
(bad)
sbb
cmps
data16
push
fisttp
adc
dec
or
pop
rol
dec
test
call
xor
pop
add
dec
and
das
fs
dec
sbb
push
mov
jp
adc
test
cmp
dec
mov
jns
mov
pop
dec
push
fsubr
and
xchg
pop
mov
fcomp
dec
lahf
daa
fsubr
jmp
dec
sub
inc
pushf
cdq
ds
adc
adc
jb
sub
cli
(bad)
and
lock
pop
sub
stos
frstor
cmp
or
retf
cmps
or
sbb
adc
leave
jl
inc
sbb
adc
aas
gs
repz
mov
leave
inc
mov
sbb
dec
cmp
cmps
push
mov
mov
fwait
xor
mov
push
mov
ja
inc
push
test
lods
(bad)
in
loopne
push
js
jp
lahf
mul
shl
xor
test
aad
mov
daa
xlat
fld
out
scas
js
pop
mov
cmps
add
mov
jl
fcomp
sbb
adc
outs
pushf
dec
mov
jl
int
jno
loope
cld
out
out
shl
aas
(bad)
mov
seto
mov
cmps
retf
and
loop
xchg
xchg
inc
neg
pop
retf
or
lods
push
js
enter
and
cli
jmp
das
das
mov
gs
cmp
inc
lds
xchg
and
fwait
ins
pop
xor
ja
sbb
js
add
scas
je
les
rcl
jg
leave
pusha
push
mov
loopne
xchg
jnp
sti
lahf
xor
(bad)
lods
sub
jnp
adc
inc
rcr
xchg
jne
mov
imul
pop
xor
adc
or
pop
sub
mov
pop
and
cmps
mov
cmp
arpl
push
mov
out
iret
push
jecxz
adc
dec
add
jne
jne
scas
call
jno
mov
stos
loop
push
mov
and
pop
popf
cmps
das
push
xlat
sti
les
test
addr16
mov
jp
sub
icebp
cmovs
imul
pop
cmp
push
stos
popf
in
sbb
dec
jmp
cmp
push
daa
fs
nop
imul
js
mov
(bad)
xlat
lods
ret
add
or
add
movs
xchg
push
cmp
push
(bad)
jns
mov
push
mov
ins
call
fistp
daa
push
jmp
neg
repnz
mov
adc
sbb
inc
cwde
push
cs
pop
push
push
mov
xor
mov
xchg
cs
xchg
lahf
and
retf
push
mov
leave
scas
cmp
fsub
jl
mov
mov
add
push
and
aam
movs
scas
xor
jecxz
jno
out
sub
not
xor
xchg
imul
jl
mov
or
ds
sti
push
or
inc
shl
sbb
aas
loope
xchg
xlat
add
mov
dec
push
lods
and
adc
xor
retf
test
inc
fnstsw
pop
scas
cmps
jno
xchg
cwde
int3
js
push
ins
jnp
pop
test
xchg
fisub
out
(bad)
adc
(bad)
pushf
in
lock
push
add
xor
fnsave
push
adc
pusha
scas
sub
or
loopne
or
in
mov
ficomp
retf
mov
(bad)
aaa
cld
mov
pusha
sbb
and
inc
popf
sub
dec
mov
(bad)
xchg
ret
test
push
mov
adc
js
or
retf
push
xchg
test
enter
imul
jae
jne
or
(bad)
sbb
sub
push
xchg
and
mov
pop
call
adc
jbe
fsubr
jo
int
ins
and
mov
(bad)
or
pop
xchg
xor
xchg
adc
pop
pop
jl
cmc
ficomp
fcmovnb
mov
or
dec
xchg
movs
in
jne
add
xor
jp
stc
outs
dec
sub
scas
or
and
pop
daa
jge
int
push
(bad)
inc
scas
test
outs
jp
adc
call
cmp
stos
jl
xchg
and
jns
jno
lds
push
inc
jmp
fdivr
sub
xor
cmp
xchg
mov
mov
cs
and
cmp
cdq
adc
and
pop
inc
ret
pop
sbb
out
adc
or
pop
fiadd
mov
push
xor
mov
retf
dec
and
jno
xor
xor
xor
dec
adc
cmp
ret
mov
sub
out
mov
leave
stc
cmp
ret
or
stos
xchg
ins
pop
push
rol
rcr
call
sbb
cmp
sahf
or
je
mov
mov
jle
ins
sbb
push
shr
aas
and
mov
into
sti
push
cmp
push
test
sub
xchg
mov
mov
es
sbb
jbe
lds
clc
dec
push
clc
mov
jp
sbb
lods
cmp
sbb
push
outs
jle
add
pop
dec
(bad)
fsub
in
xor
retf
cs
adc
int
cmc
cmp
outs
push
in
or
push
mov
das
pop
aas
rol
inc
mov
out
sbb
xor
pop
dec
and
dec
mov
repz
jl
push
sub
inc
mov
or
dec
or
shl
jne
test
(bad)
jl
gs
pop
inc
iret
hlt
out
cmps
sbb
push
add
pop
push
cmp
cmps
cmp
xchg
sbb
fistp
or
test
jns
out
jecxz
ror
xor
repz
xor
mov
ficomp
das
mov
cmps
mov
enter
arpl
scas
xor
and
dec
and
test
push
pop
and
hlt
fldenv
iret
push
xor
nop
and
imul
pop
adc
(bad)
adc
push
leave
mov
xchg
int
aaa
add
add
(bad)
adc
mov
pop
loope
stos
jb
xchg
sbb
mov
stos
ss
push
stos
add
jecxz
int3
fcmovne
add
dec
add
add
jno
adc
repz
in
fst
test
not
sbb
sub
ins
loopne
mov
(bad)
fidiv
push
sti
jp
xlat
inc
cmps
ins
inc
push
mov
push
jnp
sbb
add
out
sub
cmps
bound
adc
push
daa
inc
cmc
add
dec
sti
out
and
loopne
daa
ins
push
xor
inc
fdivr
dec
sub
nop
jmp
(bad)
loopne
mov
pop
leave
sub
ins
data16
lods
mov
xor
sti
add
jmp
imul
retf
adc
call
jae
mov
repz
xor
dec
cmp
enter
cmp
or
adc
cmp
mov
sbb
test
jne
sub
pusha
sbb
and
pop
or
(bad)
cli
jns
dec
inc
rcr
iret
push
xchg
mov
aaa
int3
loop
or
push
in
pop
add
dec
xchg
adc
xor
mov
call
call
xchg
jmp
ins
mov
mov
mov
rcl
jo
push
push
ins
retf
pop
dec
xor
cmp
pop
hlt
je
xchg
inc
lea
sbb
call
stc
and
outs
push
popa
and
xchg
jns
jp
dec
aad
sbb
sbb
shr
mov
xchg
icebp
adc
mov
jge
scas
push
dec
jl
mov
xchg
push
lods
sub
xor
addr16
dec
fdivr
ret
adc
mov
sbb
imul
icebp
sbb
mov
push
gs
jne
xchg
test
inc
xor
push
(bad)
pop
div
(bad)
pop
scas
adc
xchg
xchg
jecxz
adc
inc
movs
xchg
pusha
mov
push
(bad)
cdq
int
enter
xor
pop
cmp
dec
ins
mov
leave
fsub
aad
call
mov
sahf
xor
push
loopne
inc
fcomip
mov
jle
(bad)
jno
mov
inc
das
out
xor
lods
dec
enter
arpl
test
cmp
daa
mov
(bad)
lock
jns
pop
dec
fld
sub
sbb
add
adc
mov
push
xor
clc
push
sub
jb
xchg
leave
lods
cli
jo
mov
push
cmc
(bad)
pop
(bad)
jnp
mov
loop
sub
cmp
inc
into
scas
and
daa
xchg
add
iret
or
add
sbb
call
pop
cmc
loopne
push
sbb
popa
sbb
mov
mov
icebp
sbb
in
mov
and
push
cwde
mov
add
push
sub
mov
pusha
addr16
fild
xor
push
repz
ds
sti
outs
inc
cmc
loope
and
cmp
push
lock
pop
iret
cdq
mov
adc
les
push
mov
xor
cli
mov
or
push
inc
test
push
add
adc
mov
(bad)
into
stos
stos
push
ret
out
xor
data16
xchg
or
and
jmp
jp
xchg
mov
adc
ss
scas
sbb
sahf
pop
jg
sub
jae
cli
lea
pop
lods
cld
jle
pushf
(bad)
xlat
cwde
rol
xor
dec
cli
xchg
xchg
push
scas
call
inc
xor
xor
pop
jns
js
rcl
sub
inc
pop
add
push
adc
out
sahf
daa
mov
xor
pop
mov
clc
(bad)
fisttp
lds
inc
add
xchg
and
pop
ret
mov
rol
test
aam
or
aam
and
out
sti
fld
inc
mov
aam
xor
retf
push
out
pop
jmp
mov
adc
dec
not
mov
xchg
fsubr
fsub
dec
lods
or
mov
or
adc
dec
xchg
add
jl
xchg
test
(bad)
scas
jl
adc
mul
ins
jmp
adc
pop
enter
lods
xchg
mov
cmc
pop
stc
push
sbb
xchg
adc
jae
adc
test
std
rol
mov
jb
in
sub
adc
outs
xor
daa
ja
lock
xchg
dec
add
sbb
cwde
mov
push
jecxz
out
sbb
mov
add
jae
rcr
shl
push
das
adc
mov
fisttp
in
mov
jp
iret
cmp
adc
mov
out
jecxz
add
pop
clc
sbb
add
dec
rol
out
dec
cld
and
stos
mov
push
inc
inc
add
lahf
or
shl
imul
(bad)
xchg
add
popf
jecxz
mov
pop
fisubr
scas
ds
add
jmp
dec
ficomp
xchg
cmp
pop
js
cmps
adc
cs
enter
addr16
xchg
in
call
repnz
sbb
pop
imul
icebp
ret
lds
sub
inc
pop
lds
inc
inc
aas
mov
inc
inc
pop
or
cli
pop
xchg
jae
push
inc
xchg
pop
xor
lods
cld
les
lods
ret
(bad)
lock
retf
ja
shr
fisttp
movs
sbb
jg
into
xor
repnz
cmp
movs
mov
cs
pop
cs
or
mov
lods
pop
es
dec
fwait
push
adc
test
(bad)
sub
xor
pextrw
ins
xchg
sub
and
jle
repnz
mov
pop
test
mov
inc
cs
in
iret
and
sub
sti
add
xor
inc
xchg
jnp
fild
and
xor
lahf
call
jp
imul
adc
daa
sbb
or
dec
inc
mov
mov
(bad)
cmc
repnz
mov
jmp
pusha
inc
xor
xlat
out
sbb
scas
cld
jbe
pop
mov
fiadd
sbb
outs
mov
shr
idiv
sub
xchg
loop
js
add
cmovbe
lahf
dec
int
add
jb
lds
mov
cmps
xchg
mov
jb
and
ret
aad
daa
sti
or
mov
adc
cmps
cmps
mov
fdivr
jbe
cs
xor
jmp
(bad)
sahf
sub
dec
and
cmp
sbb
dec
cmp
pushf
call
mov
addr16
cmc
dec
repz
jns
stc
and
mov
(bad)
sbb
pop
test
pop
inc
push
xchg
inc
jns
call
sti
pop
jnp
fs
or
loopne
pop
ret
repz
xchg
and
(bad)
push
mov
sub
sar
mov
mov
push
sbb
pop
das
fdiv
call
test
mov
jge
cmp
adc
cmp
and
ins
(bad)
mov
(bad)
sti
scas
out
push
push
mov
sbb
lock
push
push
test
rol
add
call
jecxz
jp
inc
xor
and
enter
pusha
test
cs
popa
lea
xor
bound
ret
arpl
inc
loop
inc
jns
xchg
fadd
cld
jae
mov
xchg
pushf
xchg
cs
icebp
pop
xchg
not
pop
retf
fbld
jb
nop
dec
sbb
mov
out
xchg
ds
xor
fdivp
jmp
inc
shr
jmp
adc
stc
stos
cs
in
mov
test
mov
and
add
(bad)
xor
jle
aas
stc
fbld
fisubr
jl
xor
loopne
ins
mov
in
mov
bound
shr
or
sub
add
das
or
dec
js
lods
xor
mov
sbb
and
jle
cwde
mov
pop
mov
sub
dec
out
(bad)
sub
out
mov
mov
jae
mov
ss
cmp
retf
push
mov
mov
lahf
sbb
sbb
sub
(bad)
loope
xchg
je
or
pop
movs
stos
and
push
leave
test
or
loope
sub
pop
cmc
mov
push
cmp
mov
push
int
mov
pop
aad
or
jmp
in
es
cmps
cli
retf
movs
in
or
lea
or
cmc
(bad)
and
ja
push
push
xchg
mov
pushf
cmp
fcmovnb
and
xchg
popa
jp
stos
sti
dec
xchg
xchg
ds
sbb
fidivr
jns
es
fwait
pop
icebp
daa
or
jnp
and
mov
dec
push
hlt
in
jno
repnz
lods
adc
mov
dec
mov
inc
gs
adc
xchg
ins
imul
mov
push
sbb
mov
bound
dec
ss
or
cli
push
fidiv
mov
clc
pop
popa
xor
(bad)
jmp
cmp
mov
adc
adc
push
and
xor
cmp
xor
inc
sti
xor
and
and
jge
rol
push
arpl
pop
(bad)
pop
test
leave
mov
jle
and
ins
(bad)
and
adc
dec
cmp
pop
mov
mov
daa
sub
in
sub
mov
mov
jecxz
dec
inc
sub
test
fstp
iret
rcl
imul
or
inc
arpl
int3
ins
add
cmp
cmp
(bad)
btr
or
in
es
cmp
aad
mov
dec
mov
in
idiv
rcl
add
ror
pop
jge
jl
fstsw
cld
cmp
sar
adc
xlat
or
xor
test
rcr
mov
sbb
loop
shr
adc
es
shl
sub
add
ret
std
or
stos
icebp
popf
jns
or
mov
xchg
adc
ret
pop
jmp
or
or
or
enter
retf
adc
inc
add
jle
movs
inc
pop
loop
addr16
pop
daa
call
xchg
or
mov
adc
mov
sar
mov
jmp
ss
aas
xchg
lea
clc
cmp
pxor
or
pushf
hlt
mov
and
xchg
add
jb
mov
push
sbb
sar
leave
sub
pushf
and
out
pop
or
push
into
inc
test
mov
(bad)
and
(bad)
sub
mov
add
dec
xor
xor
fst
mov
push
leave
mov
mov
lahf
aad
sub
arpl
push
xor
pop
mov
jb
fisub
jns
ja
mov
adc
ficomp
push
sub
sbb
sti
pop
das
and
jp
lds
(bad)
loopne
mov
push
out
push
pop
int
xchg
or
adc
push
or
xchg
adc
jge
pop
inc
test
out
mov
daa
je
cmps
mov
iret
mov
js
adc
pop
and
jne
int
dec
mov
ins
je
pop
sub
mov
fld
jp
mov
out
fst
adc
dec
stc
retf
fwait
xchg
pushw
xor
pop
icebp
or
ja
push
dec
fwait
mov
dec
cmp
dec
jecxz
lock
fucomp
or
stos
push
pop
jbe
cmp
xchg
repz
push
test
xchg
test
adc
out
jbe
add
lods
mov
xor
xor
adc
dec
xchg
pop
in
push
ins
mov
ins
dec
sbb
adc
pop
sbb
imul
pop
loop
pushf
adc
ror
cmp
iret
mov
aam
ja
je
sub
xchg
adc
lods
iret
sbb
daa
clc
cmp
idiv
stos
cdq
int3
jmp
retf
div
jecxz
or
fs
loopne
add
sti
ja
push
clc
mov
xchg
ret
ret
xor
and
add
mov
std
ja
pop
imul
adc
inc
icebp
or
xchg
and
xor
loop
ins
push
ror
lock
add
fs
adc
pushf
iret
adc
lea
or
jmp
retf
mov
int
pop
sbb
fadd
jo
icebp
aam
es
mov
outs
sbb
lods
xchg
(bad)
sbb
mov
jbe
stos
or
ds
iret
jno
loop
sub
imul
mov
inc
xchg
sbb
scas
mov
adc
sbb
pop
dec
cmp
mov
xchg
les
jmp
aaa
pusha
stos
pop
ret
mov
out
ret
xchg
and
daa
push
cmps
dec
adc
jb
cs
outs
push
retf
lods
enter
and
jmp
test
push
fisub
sbb
cmps
jmp
cmp
stos
dec
int3
xor
movs
or
dec
push
out
push
out
cs
lea
sbb
(bad)
repnz
(bad)
ds
jmp
bound
shl
(bad)
cmp
jl
shl
xor
sbb
xor
lods
cmps
pop
add
sti
aad
std
adc
sar
jbe
addr16
cli
in
and
(bad)
out
dec
cmp
mov
rcr
inc
in
ficomp
outs
mov
dec
or
xor
cmps
or
xor
mov
int
and
mov
(bad)
add
jns
daa
loop
xchg
sbb
sbb
ins
push
or
push
jp
addr16
xchg
xchg
leave
xor
das
xor
push
int
(bad)
out
cmp
add
loopne
pop
push
std
mov
enter
pop
mov
cmp
jmp
shl
add
jno
fnstenv
xor
xor
movs
xchg
and
not
fs
fbld
adc
xor
cmp
pop
(bad)
cmp
lea
inc
in
test
outs
leave
fsubrp
pop
cmp
leave
jecxz
xor
mov
cmp
outs
dec
xchg
push
mov
leave
popa
sbb
and
mov
adc
xchg
aaa
in
(bad)
ret
sbb
inc
cmp
fs
sub
sub
ret
add
das
ins
pop
sub
sbb
xor
mov
test
sbb
or
(bad)
mov
addr16
sti
(bad)
cli
lahf
shr
xchg
aad
in
out
mov
pushf
adc
pop
icebp
add
rcr
(bad)
loopne
and
push
fisub
fwait
pop
mov
addr16
cwde
mov
push
aam
mov
or
adc
pop
mov
sbb
pop
push
imul
hlt
js
push
retf
mov
stos
fiadd
loopne
retf
das
popf
js
(bad)
xor
mov
int
(bad)
push
scas
movs
xchg
mov
sbb
(bad)
std
rol
cwde
cmp
mov
addr16
and
mov
pop
movs
pop
cld
sbb
shr
sti
push
inc
dec
mov
push
pusha
mov
dec
add
inc
lods
xchg
ret
pop
int
xchg
fimul
sub
in
addr16
cmp
add
cmp
das
jp
cmp
push
sbb
stos
cmp
retf
xchg
mov
(bad)
and
stos
out
jmp
popf
icebp
je
int3
jecxz
outs
xchg
jnp
ja
jle
daa
lods
pop
cmp
mov
or
movs
jmp
mov
test
dec
adc
pop
jmp
add
vcmppd
or
loop
pop
cmp
std
or
repz
pop
bound
cmp
inc
mov
inc
inc
or
outs
push
(bad)
dec
das
ins
pop
scas
les
cdq
retf
push
adc
popa
cmps
dec
pop
mov
les
lods
fsubr
xchg
out
sub
cdq
(bad)
sar
repz
(bad)
mov
mov
lods
xor
xor
(bad)
jecxz
dec
or
sub
jns
or
fcomp
add
jae
pushf
or
out
push
inc
enter
pushf
xchg
les
xlat
jp
(bad)
imul
jmp
cdq
inc
jno
add
and
leave
jl
and
adc
pop
push
xchg
retf
xor
dec
jp
pop
inc
cmp
sbb
cmps
(bad)
mov
mov
cmp
sbb
mov
add
add
jnp
sub
pop
sub
mov
xchg
repz
jmp
cld
in
mov
xor
sbb
lods
sub
jecxz
sub
jg
in
scas
outs
or
inc
mov
call
adc
and
mov
nop
imul
out
add
or
loope
and
add
stc
xchg
lds
loopne
je
pop
xor
fwait
test
into
outs
mov
cmp
aad
inc
(bad)
test
cmp
pop
fwait
repz
push
jp
je
inc
mov
cdq
cmp
inc
shl
fwait
out
xchg
mov
xchg
xchg
mov
dec
repz
je
(bad)
icebp
sub
dec
mov
and
jmp
ja
fwait
fwait
mov
leave
sahf
cmps
mov
js
xchg
in
lods
pushf
mov
or
sub
adc
fldenv
(bad)
fimul
xor
(bad)
jne
push
mov
add
daa
or
jg
mov
stos
shl
ins
rcr
shr
xlat
sbb
(bad)
and
xchg
and
mov
xlat
ret
call
jge
or
adc
adc
mov
fs
or
fdiv
lds
xchg
in
xchg
in
mov
cli
cmps
aad
jg
jb
mov
daa
mov
sbb
sub
mov
xor
test
sub
lods
and
fcmovb
dec
or
sub
mov
(bad)
loopne
sbb
sub
call
adc
inc
inc
jge
xor
xlat
inc
xor
daa
sbb
sbb
fistp
adc
jne
sbb
in
or
adc
clc
jno
icebp
inc
push
dec
xchg
mov
sahf
pop
outs
scas
push
push
adc
sub
out
movs
dec
retf
loopne
jg
sbb
ror
sbb
adc
adc
jp
xchg
adc
push
aam
mov
into
adc
add
in
add
jns
je
arpl
outs
sub
ja
xchg
in
push
inc
pop
jns
aas
(bad)
lock
mul
and
sahf
jnp
js
cmps
push
sbb
loopne
hlt
mov
mov
push
nop
mov
xor
mov
cmp
repnz
sbb
pop
imul
(bad)
cmp
adc
xchg
mov
(bad)
cwde
rol
test
out
ja
jecxz
or
and
pop
cmc
arpl
in
jmp
push
(bad)
test
xor
xor
sub
jne
daa
and
lahf
push
ret
std
shl
call
cwde
jbe
fisub
outs
jp
and
aam
pop
xor
push
and
enter
mov
add
or
cmps
out
cli
cmc
mov
fwait
mov
lds
movs
jg
loopne
sub
ins
dec
add
sbb
jl
add
xchg
xchg
retf
cld
test
imul
add
(bad)
repz
dec
icebp
sbb
mov
test
mov
out
pop
pop
mov
pusha
jg
mov
mov
stos
xor
inc
xchg
test
sub
pushf
lods
scas
lds
pop
popa
in
cld
adc
and
mov
sub
xchg
adc
fisttp
jmp
xchg
scas
adc
and
popf
loope
je
push
inc
mov
mov
js
int3
jp
pushf
movs
ja
int3
mov
(bad)
adc
(bad)
fdiv
jmp
daa
ror
dec
test
cmp
icebp
daa
push
js
(bad)
clc
jmp
repz
or
sub
retf
fs
inc
fs
dec
cmp
or
and
stc
mov
and
cmps
in
push
inc
pop
lea
xor
mov
addr16
test
add
retf
xchg
add
xchg
xchg
out
pop
xchg
div
xchg
cld
lods
jbe
adc
icebp
dec
inc
shl
pop
in
das
mov
mov
outs
stc
imul
(bad)
in
lahf
dec
pop
nop
or
sub
std
cld
retf
stos
fst
mov
adc
leave
out
sbb
dec
call
neg
aam
mov
mov
adc
sbb
shl
ja
aaa
mov
outs
retf
add
pop
mov
or
shr
iret
mov
push
add
ror
sbb
hlt
cmps
out
es
inc
dec
push
cli
push
jae
pop
cmc
jns
(bad)
ret
imul
push
sahf
fdiv
and
sbb
xchg
enter
adc
(bad)
or
mov
or
fwait
sbb
repz
adc
mov
icebp
test
out
mov
cmp
push
push
add
mov
lock
pop
cmps
in
retf
je
pop
push
(bad)
retf
add
stos
retf
xchg
stos
push
test
inc
dec
ret
sti
and
inc
clc
iret
pop
scas
fwait
iret
rol
adc
add
adc
xor
cmp
xor
int
ds
movs
stos
xchg
loopne
cs
(bad)
sub
clc
cmp
lea
sbb
scas
push
imul
retf
cmp
pop
and
rol
je
xlat
xchg
add
jge
retf
test
xchg
ror
jnp
adc
sbb
outs
out
xor
aaa
add
xlat
repz
jecxz
xchg
sbb
rol
ret
cmps
pusha
pop
xchg
ret
sbb
dec
loopne
ret
sub
mov
iret
cmp
out
pop
rcl
jge
daa
imul
xor
fistp
(bad)
cmp
into
int3
push
mov
movs
jae
add
mov
or
jns
repnz
mov
push
push
in
pop
jne
rol
in
(bad)
cmp
neg
movs
stos
aaa
mov
ror
or
movs
out
xchg
or
jo
fist
les
in
jae
add
sub
retf
push
mov
sahf
xchg
out
jmp
mov
sub
xchg
int
hlt
ins
push
jmp
dec
jbe
out
js
movs
(bad)
jl
sub
dec
adc
popf
jl
popf
fnstenv
and
mov
sbb
inc
xchg
xor
mov
(bad)
cmp
repz
xchg
loopne
ret
xor
cmp
mov
lods
iret
add
xchg
push
retf
or
mov
mov
fcom
loop
inc
mov
ja
jge
xlat
sbb
dec
mov
(bad)
jmp
scas
inc
cli
fld
movs
cmp
mov
inc
push
mov
push
or
jmp
in
mov
pusha
sti
das
aaa
scas
fisub
push
add
jp
mov
lea
adc
adc
cmc
arpl
xor
das
daa
add
(bad)
hlt
call
in
mov
jmp
jb
fcom
call
dec
adc
jns
sub
mov
pushf
dec
or
jecxz
cmp
xchg
xor
mov
push
vmread
retf
add
dec
enter
cmp
stos
sub
iret
cwde
sbb
adc
inc
xchg
mov
fcom
inc
test
inc
adc
and
wbinvd
js
cmps
pop
mov
jle
lods
lods
fistp
ror
out
push
in
and
icebp
inc
xor
and
mov
je
popa
bound
fisubr
add
or
jns
xor
(bad)
in
xchg
enter
sub
fbstp
dec
pusha
outs
std
imul
(bad)
jmp
jb
add
loope
ins
popf
jnp
fild
or
rol
and
mov
mov
mov
ins
pcmpeqd
aad
xchg
adc
hlt
pop
inc
jo
fcom
fdiv
mov
ins
lahf
sahf
sbb
fcom
fwait
adc
xchg
repz
or
adc
call
jno
mov
dec
(bad)
inc
loope
test
push
sbb
cmpxchg
xchg
inc
std
xchg
jne
iret
rcl
or
xchg
inc
cmp
not
push
fisub
push
aad
xchg
test
into
add
shl
pop
dec
arpl
mov
cmp
and
ds
call
call
xchg
or
add
sub
push
pop
cmps
dec
cwde
or
in
xor
in
mov
hlt
jge
dec
dec
adc
inc
fdivr
push
or
stos
(bad)
mov
dec
repnz
test
pop
jle
xchg
or
mov
dec
pop
mov
mov
mov
fwait
inc
cmp
mov
mov
cmps
pop
mov
imul
aaa
push
mov
push
dec
dec
add
mov
sti
pop
(bad)
xchg
clc
stos
pusha
aaa
mov
mov
cwde
pop
imul
shr
dec
sbb
add
lods
leave
shr
out
sub
and
(bad)
lock
jl
dec
mov
push
jb
pop
push
sbb
inc
add
mov
popf
jp
outs
or
lods
test
cmps
inc
clc
stos
xor
xchg
dec
sahf
and
sbb
movs
outs
mov
sub
shl
xor
pop
stc
cdq
inc
neg
add
fnstsw
cwde
push
pop
call
rol
inc
and
cmp
pop
add
stos
xchg
sub
sub
test
xor
(bad)
aaa
jbe
inc
add
cmp
push
mov
push
imul
sbb
push
repz
iret
sub
fiadd
int
(bad)
jne
and
je
repz
stc
adc
fsubr
pop
adc
stos
test
mov
jo
xlat
(bad)
pop
jmp
cmp
or
sub
xor
push
pop
sub
stos
jae
cmp
cmp
push
and
js
movs
pop
jle
xor
cli
push
lock
outs
cmps
pop
pop
lds
xchg
aas
xor
jbe
sub
mov
jnp
ret
fldcw
icebp
inc
test
mov
push
clc
jmp
jne
cmp
inc
adc
jbe
lock
mov
pop
movs
xor
sub
xor
push
div
mov
inc
je
stos
pop
mov
mov
in
sbb
data16
sbb
pop
fs
pop
cmp
sti
shl
cmp
ds
lods
pop
sub
gs
jp
das
test
ds
mov
pop
add
mov
sbb
fisub
push
sub
adc
inc
xor
dec
xchg
pop
ins
mov
mov
and
mov
jmp
sub
jmp
mov
push
sub
sub
xor
aad
or
push
daa
lods
movs
add
repnz
mov
fnsave
ins
icebp
daa
push
imul
je
test
jno
or
jg
pop
lods
cmp
scas
push
test
addr16
dec
pop
daa
leave
jae
xlat
push
mov
inc
cld
lods
ret
fwait
out
mov
jns
sbb
out
dec
xor
or
cmps
add
cwde
ins
cmps
les
xlat
mov
in
mov
call
xchg
sbb
(bad)
or
xor
inc
dec
ins
inc
into
jecxz
dec
out
outs
inc
xchg
pop
and
stc
dec
rol
push
push
xlat
pop
pop
pop
jne
std
sub
xchg
lock
shr
(bad)
pop
sbb
xchg
jno
adc
xor
shl
lock
jle
push
cwde
dec
movs
adc
loopne
mov
pop
loop
xchg
or
pop
das
test
or
xchg
mov
adc
adc
mov
call
xchg
test
nop
xchg
movs
fs
adc
cmp
mov
cwde
push
lock
jecxz
fs
pushf
shl
retf
adc
cdq
cmp
(bad)
mov
(bad)
jg
mov
aad
sub
ins
pushw
mov
(bad)
mov
cdq
jae
ins
lods
mov
(bad)
pop
jecxz
and
mov
jge
xchg
fisub
pop
cwde
or
mov
mov
cld
sar
fisubr
mov
ins
mov
(bad)
jle
and
jb
mov
test
ret
in
retf
xchg
(bad)
ins
push
test
mov
(bad)
xchg
(bad)
xchg
retf
mov
pop
jg
ja
wbinvd
aaa
imul
sar
dec
mov
adc
jmp
dec
repz
aam
inc
jno
push
dec
sub
out
aaa
push
movs
add
xchg
shl
inc
sub
mov
test
adc
nop
sbb
stc
push
jno
fisub
push
or
into
adc
push
adc
cmp
pop
daa
repz
fisttp
xchg
jecxz
call
sbb
push
cmp
or
sub
jle
mov
pop
scas
pop
push
jp
sub
add
shl
pusha
enter
dec
loopne
xchg
or
jb
jmp
mov
mov
mov
cld
into
sar
pop
ret
xchg
das
popf
pop
xchg
xchg
gs
into
xchg
inc
jg
loop
or
aam
addr16
xchg
call
inc
xchg
xlat
sbb
in
icebp
imul
cmp
mov
or
dec
std
mov
mov
fist
mov
mov
cmps
movs
xor
xor
lahf
cwde
fcmovnb
sbb
mov
jnp
clc
test
add
in
ficom
sub
jbe
(bad)
sti
ret
xor
sub
test
or
adc
js
mov
pushf
xchg
sub
or
ins
mov
pop
aaa
adc
or
mov
addr16
sbb
sahf
iret
sbb
jns
je
pop
xor
outs
in
into
add
xor
sbb
sbb
adc
sbb
sbb
adc
xor
ins
add
hlt
mov
mov
pop
fsubr
(bad)
sbb
mov
nop
push
cdq
jecxz
mov
int3
pop
movs
aaa
push
repnz
mov
mov
adc
cmp
jno
or
cmps
mov
xchg
daa
lods
sub
xchg
inc
or
jno
daa
inc
cmps
xor
cmp
fnstcw
outs
cmp
fimul
fnstenv
mov
push
adc
repnz
pop
xor
xchg
bound
push
(bad)
cmp
cmps
mov
(bad)
cdq
mov
cmps
fsub
push
nop/reserved
sub
or
inc
test
push
in
mov
mov
out
std
cmp
jecxz
lock
shl
xchg
cmp
out
lahf
stos
pop
test
int
xchg
loop
(bad)
shl
inc
test
gs
jmp
loope
push
push
cmp
test
(bad)
xor
fs
cmp
clc
shl
add
or
add
add
push
sbb
mov
in
sbb
cmc
dec
dec
add
cmps
mov
aaa
into
add
loope
in
dec
pop
repnz
into
cmps
inc
add
pop
hlt
retfw
int
dec
xchg
jno
mul
aad
xor
mov
fisub
mov
lods
ds
(bad)
outs
mov
jmp
test
mov
dec
xlat
sub
popf
lock
mov
push
adc
fwait
ret
cmp
and
aam
dec
jno
sbb
xor
xchg
call
or
and
out
xchg
adc
inc
sub
aaa
inc
jns
sub
sbb
pop
idiv
rcl
lahf
mov
sahf
jnp
inc
cld
iret
mov
pusha
cs
pop
rcl
out
idiv
cs
lock
cmps
inc
add
rcl
push
inc
(bad)
mov
rol
xchg
or
dec
pop
lds
cmp
ins
jp
mov
dec
aam
lea
push
inc
mov
(bad)
fiadd
pop
adc
lock
mov
or
xor
sbb
movs
adc
cs
fsub
les
out
sub
pop
shr
add
xchg
jg
ins
add
mov
daa
sub
cmp
mov
cwde
in
(bad)
ds
and
mul
add
sar
cwde
pusha
jb
inc
pusha
xlat
dec
cmc
inc
fist
hlt
push
and
not
jg
shl
popa
scas
loop
fadd
cwde
jmp
jmp
xchg
inc
loopne
mov
bnd
jne
repnz
jge
ss
mov
lock
jg
push
cwde
bound
ins
call
push
mov
mov
jnp
std
xchg
mov
retf
js
sbb
mov
fxch
mov
xchg
test
jp
jl
neg
es
xchg
inc
jno
xor
addr16
adc
std
jg
imul
pop
repz
lds
or
or
mov
cli
vpcmpgtw
fdivr
adc
xchg
or
push
cmp
clc
retf
loope
ss
push
jle
pusha
cmp
fs
xor
std
jecxz
lea
loop
fiadd
inc
xor
pop
cwde
cmp
push
sbb
pop
add
push
mov
mov
(bad)
shl
(bad)
rol
aam
retf
adc
xchg
sub
inc
out
or
mov
call
dec
cmp
add
mov
mov
dec
xor
stos
sbb
cs
fwait
mov
xor
adc
fidiv
int3
add
pop
pop
mov
out
jb
gs
mov
xchg
xor
mov
daa
or
fwait
lds
cmp
push
inc
mov
jnp
rcr
add
jecxz
dec
or
out
and
xlat
out
sbb
stos
sub
imul
pop
test
cmc
stos
imul
xchg
nop
pop
or
clc
mov
cmp
aaa
add
xchg
mov
xchg
sbb
out
les
add
mov
mov
loopne
dec
jg
jmp
lods
inc
pop
push
push
mov
pop
or
cs
pop
outs
and
push
sbb
outs
popa
cmp
adc
xchg
leave
dec
int3
adc
push
movs
and
xor
adc
scas
jp
inc
jns
cmp
or
jg
jle
arpl
dec
pop
je
es
and
push
inc
jnp
inc
push
cmps
fwait
push
aas
inc
shl
pop
mov
push
out
sub
test
(bad)
arpl
retf
and
mov
or
jmp
scas
pushf
test
(bad)
or
sti
jo
addr16
ins
pusha
or
pop
ins
repnz
inc
mov
and
popf
lea
mov
mov
pop
mov
enter
dec
adc
lahf
and
mov
mov
fnsave
inc
or
sbb
sub
iret
repz
aam
push
cmp
mov
sub
push
mov
or
cmp
sbb
loopne
mov
leave
rol
cs
fisubr
ds
ficom
sub
sbb
(bad)
rcr
in
mov
ds
push
je
(bad)
sbb
ss
pop
ficomp
in
inc
movs
mov
xor
fisttp
jecxz
pop
sar
fiadd
(bad)
fs
ja
pop
mov
sbb
cwde
aas
inc
fcomip
mov
push
ja
xchg
sub
and
sbb
mov
pop
test
fcomp
push
stc
in
in
cmp
mov
add
out
imul
hlt
sbb
and
adc
(bad)
mov
mov
fs
repz
xor
push
fwait
xchg
fadd
xlat
retf
pop
je
add
adc
sub
ins
adc
mov
retf
sub
cmp
or
movs
out
xchg
aas
or
pop
jns
adc
popa
push
fcom
popf
jo
mov
std
or
adc
dec
mov
ror
xchg
mov
leave
pop
dec
mov
pcmpgtw
fisubr
mov
sti
and
(bad)
jmp
out
repz
mov
inc
dec
pop
call
jae
mov
test
mov
dec
jae
mov
sahf
cmp
loopne
mov
mov
jbe
addr16
mov
out
jl
dec
popf
inc
js
or
cmps
or
mov
sbb
icebp
test
or
lock
push
dec
js
fld
xchg
icebp
jg
mov
test
xchg
mov
xor
cmp
cwde
inc
sbb
pop
sub
enter
mov
scas
pop
add
inc
sub
lea
xchg
stos
jb
call
je
cld
jl
(bad)
cmp
ins
cwde
retf
rcl
fsubp
into
into
shl
dec
ins
xchg
sti
adc
std
in
ud2
into
lahf
popa
xchg
call
int
ror
adc
sbb
(bad)
cli
mov
or
xchg
or
push
sar
xor
arpl
mov
int3
sbb
cmps
xlat
sub
sti
mov
mov
xor
dec
mov
das
nop
pop
stos
cmp
fwait
jne
xchg
fdivrp
in
mov
push
stos
push
(bad)
aad
rol
xor
iret
add
cmp
pusha
push
in
sub
add
mov
or
mov
adc
xchg
mov
test
int
aaa
pop
jae
mov
jno
popa
fwait
outs
(bad)
dec
sbb
ss
cmc
jo
jp
sub
jp
cmp
and
mov
scas
into
dec
xor
stos
jae
push
mov
pusha
out
xor
sbb
and
jle
add
cli
add
push
or
int3
adc
add
xor
and
je
pop
les
cmps
or
fwait
xor
jns
int3
rcr
mov
jmp
ins
mov
jns
aad
mov
bound
(bad)
and
lods
aas
(bad)
je
outs
popf
sbb
xchg
or
dec
aas
and
std
inc
fistp
stos
or
rol
in
jg
jl
scas
call
add
fwait
xchg
outs
jmp
push
stc
test
aad
lock
pop
imul
lods
push
cmp
or
cmp
or
mov
xor
out
les
adc
and
mov
push
idiv
xor
inc
bound
jo
inc
lock
add
movs
push
ins
xor
test
mov
dec
ss
xchg
scas
cwde
dec
or
test
pop
or
in
out
and
fdiv
loop
test
cmp
fs
mov
jo
cdq
or
inc
(bad)
sub
mov
dec
pop
or
push
nop
ins
dec
and
sub
mov
in
sub
das
stc
pusha
fmul
xor
jnp
push
arpl
or
xor
int
loop
inc
add
mov
mov
adc
sbb
dec
addr16
aam
mov
dec
outs
mov
jae
out
jnp
push
repnz
and
int
mov
(bad)
xor
xchg
js
adc
pusha
mov
popf
sbb
and
pop
dec
stos
mov
mov
mov
cmc
mov
or
push
push
inc
in
out
pop
rol
xchg
stc
xor
xchg
test
js
mov
push
jnp
add
ret
fbstp
ss
loopne
imul
test
push
test
dec
mov
jmp
xlat
stc
adc
out
scas
xchg
fstp
out
out
clc
jb
add
mov
fsub
sbb
cmp
push
pusha
out
xchg
addr16
mov
mov
(bad)
add
(bad)
jne
pop
movs
or
push
(bad)
in
mov
xchg
jle
pop
sub
test
add
adc
fist
cmp
cmp
pop
push
adc
sub
xor
xor
or
ds
sbb
push
jmp
mov
rol
or
mov
and
mov
aad
pop
outs
push
scas
push
push
cs
inc
xor
fwait
push
aas
fisttp
inc
std
sbb
mov
(bad)
int
fs
sahf
(bad)
mov
fimul
push
cmp
nop
add
fadd
sahf
sub
ss
mov
in
mov
or
adc
and
adc
(bad)
movs
cld
xor
int
or
cmp
fwait
or
xchg
pop
xor
inc
les
jge
push
mul
push
shl
inc
div
in
add
frstor
cli
fimul
scas
and
jns
addr16
call
(bad)
pusha
push
push
bound
dec
aam
inc
mov
and
movs
mov
mov
outs
jecxz
pusha
rcr
out
sahf
(bad)
in
fwait
push
int3
mov
ins
push
pop
xor
dec
jmp
add
jnp
ins
dec
xor
xlat
mov
cmp
xchg
pop
fsubrp
in
fdiv
leave
xor
call
mov
jg
jnp
adc
sbb
sbb
push
jmp
adc
dec
xchg
loopne
push
test
aas
cld
rcr
retf
sbb
sub
adc
jge
ds
je
sub
xor
mov
data16
push
in
fdiv
and
xor
retf
xchg
enter
int
pop
out
and
nop
jb
pop
inc
push
jne
cmp
retf
pop
sub
push
ror
and
mov
mov
sub
cmp
(bad)
imul
cwde
sub
mov
push
and
fild
cmp
sub
loope
pop
stc
mov
push
sbb
add
inc
push
and
arpl
cdq
mov
mov
loopne
push
push
mov
cdq
cmp
mov
(bad)
out
aas
(bad)
movs
lock
cmc
pop
mov
ficom
push
je
retf
fs
cmp
mov
in
aas
xor
das
mov
mov
xor
mov
adc
and
imul
or
adc
and
mov
cmps
hlt
inc
sub
mov
mov
push
cs
mov
mov
sub
xor
mov
clc
and
inc
fist
push
jp
(bad)
std
jae
loope
adc
jp
xor
loop
jno
lods
push
jnp
xchg
out
(bad)
mov
out
jecxz
inc
mov
push
xchg
jae
or
nop
or
dec
imul
or
sub
(bad)
pop
push
int
inc
addr16
mov
fldln2
jecxz
sbb
cmp
mov
xchg
cmps
movs
ja
jl
hlt
pushf
int
fadd
cmp
aas
int3
push
out
sbb
sbb
out
cmp
in
retf
jecxz
mov
jmp
out
in
dec
push
fwait
inc
pop
and
(bad)
int3
daa
repz
sbb
lahf
sar
push
or
inc
or
inc
in
jnp
inc
inc
mov
jg
or
je
pop
or
mov
dec
and
fbld
or
sub
in
adc
dec
mov
sbb
mov
mov
mov
fmul
inc
xor
xchg
pop
mov
sub
sub
push
je
out
jo
sbb
loop
and
or
xchg
das
pusha
push
inc
sub
cmp
mov
add
rol
jmp
push
shr
pop
outs
into
push
xor
cmp
push
adc
int3
test
icebp
push
push
cmps
pop
int
xor
jecxz
sar
add
in
push
push
dec
dec
cmp
jne
push
jl
and
test
and
jns
clc
(bad)
xchg
rcr
jo
push
xor
pop
xor
ret
xor
fadd
out
int
push
add
mov
jge
jmp
dec
adc
xor
in
(bad)
xchg
inc
or
frstor
xor
dec
mov
jae
pop
ins
inc
cmp
and
fcomp
mov
jmp
xor
div
mov
sbb
push
sbb
in
mov
mov
or
inc
push
in
bound
bound
fcom
jmp
or
ss
iret
outs
sub
fnstsw
sbb
ins
or
xor
es
jo
sti
mov
push
ins
rcl
cwde
push
mov
sub
scas
mov
mov
jmp
jp
push
repnz
lea
mov
add
sti
or
pop
mov
je
stos
mov
fdivr
dec
jmp
mov
or
cmc
push
lods
mov
pop
mov
inc
mov
adc
jmp
outs
and
inc
aam
sub
mov
idiv
rol
scas
mov
add
mov
(bad)
or
dec
cmp
jmp
xchg
popf
push
shl
inc
lods
jle
sub
xchg
pop
std
shl
pop
repz
ror
adc
cmp
mov
mov
fisubr
bound
retf
and
addr16
xor
pop
call
jmp
js
cmp
rep
bswap
pop
jno
pop
ss
outs
sar
pop
or
push
aad
push
arpl
fild
push
mov
inc
ins
jp
cmp
ja
test
arpl
adc
idiv
nop
enter
jnp
aaa
dec
frstor
daa
out
jmp
jge
mov
cmp
mov
repz
hlt
pop
bound
lahf
or
cs
jo
sbb
jnp
xor
inc
cwde
fbstp
mov
jl
movs
jmp
icebp
xor
outs
rcl
sti
aas
mov
inc
xor
outs
pop
cs
fnstcw
outs
mov
shl
push
cdq
out
test
push
mov
loopne
gs
psrad
scas
ja
fimul
or
xchg
call
jnp
cmp
test
cld
(bad)
mov
dec
push
cld
xchg
xchg
repz
jno
sahf
push
inc
and
int
cmc
xor
pop
ins
imul
sbb
movs
ficom
(bad)
sbb
mov
test
fisubr
popf
xchg
lahf
mov
or
cli
sti
adc
jbe
shl
out
ins
mov
xchg
sbb
mov
sbb
cmp
mov
dec
test
push
fwait
jecxz
jle
push
jg
inc
into
fsub
inc
cmp
pusha
mov
fadd
call
add
call
movs
bound
enter
and
pop
sub
loopne
cli
psrad
mov
push
call
fwait
inc
fwait
fwait
add
mov
outs
mov
jmp
lock
mov
stos
push
rcl
and
inc
stc
jo
fucom
add
imul
mov
cld
sub
dec
pop
lahf
sbb
push
sub
rcr
add
push
xor
fiadd
cmp
dec
mov
ins
cmps
mov
out
mov
leave
ret
jnp
leave
push
mov
cwde
push
cmps
jo
fs
xchg
and
ss
ret
mov
sbb
jle
int3
dec
sub
mov
jae
jnp
loopne
stc
aam
dec
mov
mov
cmp
jno
cli
inc
dec
cmps
mov
mov
xchg
cmp
out
xor
sar
fisub
daa
lods
not
push
adc
adc
mov
jl
sub
sub
in
jg
push
pop
mov
sbb
(bad)
outs
pop
test
retf
push
aas
in
dec
into
inc
cmp
sbb
dec
lahf
jae
push
pop
cli
mov
xor
or
dec
inc
enter
mov
or
ins
ins
js
jp
movs
lods
mov
(bad)
jg
mov
add
scas
pop
xchg
or
jecxz
adc
dec
das
jb
push
ins
and
mov
jae
sti
out
xchg
ds
pop
in
push
js
and
in
cmps
mov
xor
sbb
sti
mov
ins
mov
jns
cs
xor
(bad)
fisub
sahf
pop
xor
cdq
cmps
sbb
and
ret
(bad)
jne
test
hlt
js
jle
xchg
call
(bad)
mov
mov
dec
add
mov
cmp
inc
fldenv
xor
sub
rol
and
adc
sbb
inc
loopne
dec
xor
aad
mov
out
push
dec
xchg
pushf
dec
or
dec
es
jns
inc
ja
inc
ret
ffree
jns
inc
cld
sbb
fptan
cmp
pop
cld
out
xor
and
adc
jns
mul
(bad)
sbb
inc
jp
aad
dec
test
xor
push
mov
push
into
add
mov
scas
mov
jge
shl
or
jne
mov
mov
clc
xchg
inc
ja
sahf
mov
(bad)
sti
or
test
les
sbb
xor
mov
scas
mov
loopne
adc
jmp
into
xchg
jb
cmp
mov
adc
mov
(bad)
jmp
inc
dec
or
cmp
and
cli
hlt
fnstsw
cmc
lock
dec
cld
xchg
jmp
lahf
popa
xor
call
scas
xchg
std
ds
out
xchg
pop
xor
adc
xor
mov
pop
mov
xor
shl
fs
sub
out
lods
rcr
imul
jbe
push
cdq
add
ret
jne
dec
lods
shr
aas
cmp
loope
inc
cmc
call
push
fwait
pop
sbb
xchg
push
cmps
push
test
jo
or
or
retf
(bad)
in
loope
ins
adc
cwde
mov
inc
test
mov
mov
sbb
inc
loope
out
repnz
sbb
(bad)
and
jl
ror
adc
in
push
or
sbb
push
mov
or
in
and
(bad)
retf
(bad)
xor
sbb
in
mov
out
ins
movs
lods
sbb
pop
push
data16
pop
add
add
stos
and
mov
pop
movs
cmp
xor
sub
inc
push
(bad)
or
adc
add
ja
fisubr
pop
inc
ins
rcl
cmp
bound
mov
mov
bswap
sub
dec
fcmovnb
cmp
aam
faddp
jmp
jns
sbb
aam
jns
xor
mov
sub
jbe
adc
aas
shl
std
adc
ror
cmp
call
out
pop
cmps
push
add
rcl
lea
push
fwait
push
scas
fistp
sbb
ins
out
pop
ror
(bad)
test
je
cmp
sbb
mov
outs
adc
dec
xchg
test
adc
fdivr
arpl
dec
and
clc
shl
out
adc
retf
push
cmp
scas
dec
adc
dec
push
pop
adc
mov
add
mov
test
cmp
xchg
cmc
mov
aaa
cdq
js
pop
xchg
push
xchg
and
(bad)
jmp
xchg
ja
mov
dec
mov
xchg
ss
jae
add
dec
or
fimul
xor
push
xor
lock
cmc
adc
call
call
shr
jmp
popa
inc
bnd
hlt
mov
push
movs
retf
or
jmp
push
xor
push
enter
(bad)
rcr
sub
push
gs
mov
lods
jg
stos
xor
inc
sub
and
jbe
ds
sub
add
pushf
jge
sar
jb
push
frstor
push
test
pop
lahf
mov
shl
pop
ret
aaa
push
inc
test
jae
cmp
imul
jmp
mov
xchg
xchg
hlt
dec
sbb
retf
out
test
inc
and
jge
xchg
std
pop
(bad)
stos
inc
in
xor
and
sahf
adc
xchg
hlt
mov
mov
jge
loopne
sub
xlat
push
or
pop
pusha
jns
lods
shl
mov
scas
mov
sbb
mov
loope
mov
ds
(bad)
rcl
mov
or
and
jmp
call
lock
cld
data16
imul
pop
dec
outs
ret
jns
jmp
xlat
(bad)
stc
cs
add
jg
jno
or
test
clc
ss
popa
mov
add
and
jae
in
js
js
or
or
inc
push
mov
inc
mov
scas
mov
pop
js
out
inc
xchg
pop
jg
sahf
(bad)
sub
push
or
inc
cmp
les
imul
lods
and
rcr
jle
jl
xlat
test
inc
dec
fadd
adc
fisttp
fidiv
mov
dec
mov
int
jecxz
cmp
adc
sbb
int
fiadd
push
cmp
fwait
pop
dec
ja
add
pop
not
shl
outs
push
sbb
xor
adc
imul
mov
xor
loopne
adc
dec
shl
fistp
or
cmp
xchg
fs
and
push
mov
fidiv
pop
mov
or
cmp
xchg
fcom
or
test
pop
ja
pop
fidiv
or
sub
add
sbb
movs
adc
or
adc
inc
jnp
(bad)
retf
pop
add
jb
adc
lea
gs
stos
and
and
jle
pushf
jmp
mul
and
loop
cld
sub
and
es
jle
push
pop
repnz
inc
xor
leave
mov
ins
pop
outs
test
(bad)
arpl
addr16
adc
pop
fwait
and
ins
sub
std
sub
clc
hlt
sub
adc
xor
lods
mov
xor
xor
pop
mov
(bad)
mov
mov
push
xchg
cmp
mov
test
ins
inc
mov
lahf
call
xor
outs
mov
movs
sub
fwait
xchg
sbb
stos
aam
stc
mov
out
and
sti
shl
pop
(bad)
mov
mov
out
inc
pop
test
lods
test
mov
and
jmp
int3
lock
fs
scas
lods
or
sbb
cs
fbstp
js
jno
(bad)
bnd
mov
retf
xor
(bad)
push
mov
pop
cdq
sti
mov
cmp
add
mov
adc
pop
sub
xchg
xor
outs
jnp
jecxz
push
stc
sub
jb
push
pop
xchg
(bad)
jecxz
mov
inc
inc
sub
lods
mov
dec
add
add
sbb
inc
les
push
imul
adc
pop
cld
loope
nop
pop
push
push
push
cwde
les
hlt
dec
dec
pop
push
data16
addr16
loopne
gs
sar
out
and
fadd
inc
cmp
movs
(bad)
mov
sbb
lock
add
mov
ror
hlt
mov
lahf
adc
je
shl
add
xchg
ret
cwde
xchg
in
js
outs
pop
mov
lock
jb
cmp
jnp
push
or
mov
repnz
mov
stc
xor
pop
nop
adc
push
icebp
std
xchg
jl
addr16
sti
out
fst
mov
add
pop
inc
jb
sbb
stos
(bad)
jmp
popa
dec
sub
jnp
cmp
iret
adc
push
or
push
push
sub
bound
mov
icebp
add
dec
fmul
or
lock
xor
adc
dec
adc
mov
sar
cwde
mov
cmp
jo
ror
xor
cmp
stos
sbb
fwait
xchg
mov
sub
push
iret
mov
repnz
pop
pop
test
jb
fld
mov
imul
out
jbe
(bad)
cwde
push
imul
fistp
sti
inc
or
pop
xor
sub
and
call
mov
cmp
pushf
sub
retf
and
mov
ds
xchg
mov
push
dec
jo
pop
into
pop
in
mov
jbe
mov
dec
sbb
test
call
xchg
xchg
aaa
sub
cmp
cmp
cmp
xor
or
inc
lods
jae
(bad)
xlat
mov
loopne
adc
into
adc
std
fiadd
jl
fisttp
push
into
popf
push
and
push
js
mov
push
jne
outs
pop
sbb
jns
retf
push
inc
mov
add
mov
cmp
sub
dec
xor
inc
addr16
jbe
adc
imul
daa
add
xlat
stos
jo
dec
pop
jecxz
cmp
push
xchg
add
or
or
into
jle
test
scas
dec
int
sub
dec
aas
or
hlt
popa
dec
call
sub
std
lods
xchg
push
sub
(bad)
pop
sub
inc
ret
add
sahf
jecxz
ret
cdq
hlt
(bad)
fs
and
jg
sahf
scas
xchg
push
or
fmul
adc
mov
or
add
mov
jae
loope
add
jbe
mov
(bad)
push
leave
iret
(bad)
sbb
lds
add
pop
ds
jb
ret
(bad)
jnp
add
ins
dec
jno
dec
or
(bad)
fsubr
push
enter
sar
adc
mov
call
dec
dec
mov
aaa
mov
(bad)
mov
scas
dec
and
pop
pop
pop
ret
retf
ja
sub
int
(bad)
pop
pop
fist
lods
pop
sbb
test
jg
aaa
stc
cmp
sub
push
outs
mov
paddq
imul
jle
fmul
popf
pop
out
xchg
inc
nop
sbb
iret
aaa
pop
out
jle
mov
sbb
sbb
add
sbb
pop
in
clc
(bad)
(bad)
call
dec
cli
inc
rcr
push
jmp
rcr
test
cs
push
sub
in
adc
jg
in
lods
mov
mov
xchg
push
sahf
retf
daa
lahf
into
add
cwde
mov
cmc
and
mov
mov
xor
pop
sbb
std
push
jo
scas
hlt
adc
lods
push
jne
mov
mov
inc
mov
aas
fstp
mov
mov
add
out
sahf
xchg
push
jmp
(bad)
xchg
enter
sub
xor
inc
mov
dec
(bad)
fist
fstp
inc
outs
push
sbb
push
and
push
adc
pop
popf
cdq
mov
mov
add
push
mov
test
mov
div
inc
inc
adc
loope
dec
xchg
jmp
xlat
jne
cmps
xor
mov
and
imul
ins
out
scas
(bad)
xchg
xor
and
jg
aad
js
and
add
push
in
pop
mov
inc
fst
jno
mov
ja
push
add
xor
bound
jg
cdq
inc
or
in
int3
lahf
icebp
(bad)
punpcklwd
sub
pop
loop
dec
outs
(bad)
and
test
mov
sti
jmp
pop
mov
jne
int3
adc
push
mov
fnstcw
push
aaa
cld
sti
xchg
adc
leave
sbb
sbb
das
enter
mov
mov
sbb
ret
call
add
mov
push
sub
iret
inc
sahf
jnp
ds
jg
jmp
sub
shr
pop
int
ins
mov
mov
lahf
xchg
test
lds
lea
xchg
inc
js
or
mov
jl
popa
sbb
add
std
ins
test
out
inc
add
pop
iret
sbb
lahf
cs
ins
xchg
repnz
pop
cdq
push
inc
std
cld
xor
xor
dec
cli
dec
mov
movs
push
retf
jbe
loop
pop
pop
mov
jae
scas
mov
mov
adc
shl
sub
pop
call
pop
fbld
fisttp
outs
push
repz
jmp
sbb
bswap
(bad)
sub
cdq
rcl
or
popa
xchg
cld
sar
inc
rcl
add
fcomp
mov
fld
mov
ror
sbb
xor
jbe
add
inc
scas
inc
cmp
jns
pop
mov
adc
imul
(bad)
adc
xor
aas
pop
int
aaa
dec
push
int
xchg
mov
pop
addr16
jle
or
clc
xor
cmps
sbb
cdq
jne
jmp
pop
jb
or
pop
mov
jbe
dec
adc
ds
mov
cmp
dec
sbb
mov
add
inc
sub
mov
jb
lods
mov
cmp
jns
mov
mov
mov
(bad)
cmc
out
icebp
sub
ss
sub
mov
add
jns
add
fimul
outs
out
adc
push
dec
cmp
fdivrp
jno
rcr
mov
sub
xchg
loopne
std
aad
jmp
inc
call
xchg
mov
mov
cmp
hlt
or
or
mov
add
test
adc
push
sub
jo
push
cmp
xor
jl
pop
cmc
adc
sbb
stos
dec
jecxz
mov
imul
ror
push
add
add
add
sub
outs
pushf
fcmovne
jp
popa
loop
test
xor
push
xchg
lods
adc
jae
std
or
jb
test
sbb
repz
pop
fwait
jp
cmp
(bad)
(bad)
out
shl
fs
retf
mov
lods
sti
dec
cmp
inc
push
arpl
sahf
mov
add
sub
and
mov
jge
sub
sbb
jle
dec
mov
fwait
cmp
and
mov
dec
inc
and
arpl
add
je
hlt
ja
bound
cmp
cmp
sbb
enter
mov
fwait
xor
int3
pop
add
sbb
fwait
in
lock
inc
and
mov
mov
dec
mov
and
enter
adc
aas
add
xor
jge
pop
mov
cmp
cmps
inc
hlt
fmul
jp
jmp
jno
daa
cmp
fs
ret
lahf
inc
push
lds
xchg
mov
enter
cmc
jbe
dec
retf
mov
mov
icebp
or
repz
bound
inc
hlt
jecxz
mov
xor
ficom
call
dec
loopne
loop
in
mov
and
dec
jp
jl
xor
dec
add
or
in
jge
jae
retf
test
sub
pop
ins
jge
and
inc
sbb
int3
mov
fistp
and
pop
add
add
pusha
aaa
fisub
mov
retw
sti
or
scas
mov
push
test
or
cdq
sub
jno
mov
xor
ret
repnz
jge
mov
sti
cmp
sbb
add
scas
adc
mov
fcmovb
pop
aaa
mov
je
stos
jns
gs
cmps
sbb
(bad)
push
imul
xor
pop
enter
call
fwait
jnp
mov
ins
mov
add
stc
(bad)
push
cmp
cmp
(bad)
ds
gs
fsub
pop
stos
ret
clc
pop
aam
sub
and
mov
mov
lahf
mov
in
sbb
(bad)
mov
fdivrp
push
pop
pop
fsubr
clc
push
pop
repz
pop
dec
cmps
outs
xchg
add
icebp
aam
jns
rcr
out
inc
sbb
rcr
xchg
mov
dec
adc
push
xor
add
shl
xor
adc
js
pusha
fadd
mov
jbe
fldcw
cmp
add
jnp
xchg
shr
sub
sbb
loop
test
pop
and
adc
int
call
iret
movs
aas
mov
jnp
jl
mov
aas
adc
setno
mov
js
cmp
movs
dec
cwde
js
(bad)
push
mov
xlat
cmps
nop
push
ins
adc
int3
call
mov
jmp
add
pop
loop
aad
sub
or
sbb
(bad)
cs
aad
imul
or
pop
imul
js
nop
cmp
test
test
dec
pop
stc
xchg
scas
pop
sbb
shl
cmp
push
sub
mov
push
leave
mov
data16
sbb
out
imul
cmp
push
test
(bad)
jne
add
fwait
mov
jae
mov
popf
jmp
imul
fst
in
mov
add
push
out
movntq
mov
mov
mov
adc
gs
hlt
idiv
xchg
mov
sbb
rcl
vmaskmovdqu
loope
pop
pop
pop
or
enter
mov
mov
std
inc
call
into
or
push
cmps
lods
repnz
or
cmc
fmul
mov
fsub
pop
mov
jge
lahf
xchg
(bad)
mov
sahf
pop
and
unpckhps
dec
not
sub
cs
jno
adc
aas
cs
sub
fcom
mov
mov
aaa
mov
test
or
push
adc
lods
subps
ins
add
lock
mov
dec
icebp
(bad)
stos
aas
add
xchg
xchg
gs
into
cmp
xor
add
stos
lock
(bad)
mov
adc
sahf
push
mov
cmp
xor
div
in
push
(bad)
adc
pop
dec
dec
inc
pop
(bad)
pop
jb
cmp
ror
xchg
xchg
jo
jo
mov
xchg
mov
movs
cmp
lock
pop
lods
das
mov
pop
in
gs
fimul
push
mov
psubb
scas
add
xchg
js
les
out
in
xchg
sbb
mov
call
push
test
out
imul
lods
sbb
movs
fs
stc
cmp
xor
leave
lahf
push
cdq
sbb
movs
mov
std
and
shl
int
or
popf
lea
cli
call
xor
cwde
int
adc
sbb
cwde
gs
repz
push
frstor
lods
out
pop
mov
pop
adc
jge
xlat
xor
pop
leave
leave
mov
(bad)
push
popa
cmps
xor
rcr
xor
push
test
dec
jp
jb
ins
jp
mov
cmp
aam
or
loop
ds
inc
test
pop
inc
inc
aaa
pop
call
dec
ss
mov
xor
sbb
mov
jne
jo
sbb
pop
dec
nop
mov
push
pop
jb
mov
mov
cmp
enter
pop
sbb
movs
ins
push
pusha
call
sub
cmp
repnz
lods
inc
xchg
mov
dec
mov
push
es
(bad)
push
add
xlat
jno
outs
push
mov
int3
mov
push
aad
std
adc
(bad)
shl
inc
std
frstor
bound
shl
rol
hlt
int
lock
sahf
sub
enter
loop
pop
test
les
and
neg
mul
(bad)
cmp
fist
push
push
call
push
sbb
push
mov
jp
add
jne
xchg
(bad)
xchg
lds
jae
fidiv
hlt
jno
rcr
shl
or
inc
mov
push
lds
push
sub
mov
push
arpl
ficom
mov
xchg
enter
adc
pop
clc
mov
pop
mov
mov
adc
arpl
xor
fdivrp
dec
repz
mov
mov
dec
inc
fimul
in
dec
xor
dec
mov
test
shr
mov
xchg
das
cli
loopne
push
sbb
out
mov
pusha
dec
les
mov
and
cmp
or
pop
ds
adc
fist
jo
fstp
pop
imul
rcr
cmps
stos
aam
jp
mov
push
mov
push
xchg
pop
cmp
mov
xor
pop
mov
xchg
call
pop
xchg
das
aam
xlat
cli
push
jb
add
xchg
push
fmul
dec
mov
aas
mov
jg
sub
cmp
sti
mov
shl
xor
inc
xor
sub
sub
(bad)
dec
xchg
dec
jg
stos
dec
neg
or
mov
push
pop
rcl
or
sar
scas
jae
in
movs
push
in
pop
pop
jns
(bad)
sub
fisubr
push
mov
imul
xor
push
xor
je
sbb
xchg
mov
mov
cs
pop
and
inc
call
inc
xchg
aas
faddp
and
inc
mov
or
add
sub
jecxz
mov
retf
push
or
mov
jmp
jbe
repnz
jne
cmps
fidiv
or
lock
push
fucomp
les
add
xrelease
or
stos
mov
cmp
mov
xchg
jg
mov
retf
(bad)
(bad)
jl
popa
les
pop
repnz
mov
ror
mov
sub
test
push
retf
jb
mov
jnp
movs
fwait
mov
xor
je
int
mov
add
xor
add
loopne
cs
jae
push
nop
out
sbb
fwait
cdq
inc
sbb
xchg
xchg
idiv
mov
adc
xor
mov
push
(bad)
cli
mov
xchg
movs
ror
fidivr
sbb
(bad)
imul
dec
add
dec
dec
(bad)
shl
pop
adc
(bad)
aas
jg
xchg
scas
mov
stos
pop
xlat
add
xor
pop
jl
shr
xor
cmps
lahf
sbb
scas
or
pop
mov
jmp
jne
(bad)
mov
test
test
aad
add
add
add
mov
js
shr
addr16
lods
xor
scas
arpl
mov
test
xchg
rol
dec
cmp
mov
movs
xchg
lock
ret
aam
jp
adc
cmp
adc
je
icebp
fprem
arpl
jae
sub
or
cmp
mov
mov
in
add
gs
add
xchg
inc
imul
jne
fwait
cli
sbb
fwait
call
int
push
dec
bnd
jae
mov
xor
mov
out
in
pusha
xor
jns
or
dec
dec
daa
(bad)
neg
jg
fisubr
loop
fbld
pop
sbb
arpl
mov
fstp
and
mov
test
push
lods
cld
int3
mov
mov
pop
dec
xchg
pop
xchg
js
fimul
sahf
xchg
push
push
inc
lods
or
xchg
mov
int
idiv
cmp
out
adc
mov
ror
mov
jle
stos
(bad)
ds
jle
adc
pushf
ds
test
test
jne
push
pop
sti
mov
jp
in
pop
push
inc
scas
cmp
and
jecxz
retf
stos
jno
or
ja
jmp
out
icebp
cmps
sbb
mov
pop
mov
movs
jmp
cmc
inc
out
aas
fcmovb
loop
movs
test
enter
jp
popf
jno
mov
loope
pusha
and
popa
std
in
mov
cwde
and
push
outs
push
and
ret
jg
sbb
sub
pop
test
mov
or
loope
or
mov
push
cmp
ror
stos
dec
test
mov
inc
mov
call
jmp
pop
adc
(bad)
ret
push
lods
test
push
gs
lods
out
das
sbb
imul
or
in
xor
adc
jp
mov
jge
shr
jp
mov
lods
rcr
mov
mov
inc
mov
out
ds
dec
ds
sub
push
pop
cmps
pop
(bad)
out
mov
xor
xchg
scas
fimul
push
pop
mov
jae
ror
dec
mov
pop
aad
cmp
in
lods
sbb
mov
pop
or
cmp
les
popa
(bad)
cli
lahf
cmp
sbb
ret
outs
xchg
inc
gs
mov
and
jnp
(bad)
cld
mov
mov
mov
push
ds
inc
jo
jle
cmps
hlt
adc
call
sbb
mov
inc
div
mov
xchg
lea
aad
int3
enter
inc
es
push
sub
hlt
movs
ret
pop
push
jns
js
aad
nop
lods
fsubp
mov
push
in
pop
jecxz
add
sub
aaa
mov
lods
dec
mov
adc
pop
lahf
(bad)
js
mov
jmp
test
cmp
ss
dec
pop
(bad)
aad
gs
sbb
add
xchg
pop
nop
or
cmc
push
xchg
xchg
mov
ds
mov
sub
arpl
pop
mov
xchg
ja
je
and
fstp
push
jle
or
ins
inc
add
push
cdq
add
xor
ja
mov
imul
es
nop
push
push
das
outs
fwait
jns
sub
jmp
cmp
pop
loopne
scas
sbb
in
mov
leave
enter
(bad)
into
hlt
not
jae
inc
jmp
sbb
mov
pushw
cld
cli
dec
loopne
pop
in
mov
push
add
cmp
icebp
inc
call
rcl
ins
xchg
pop
mov
hlt
ja
jmp
mul
sbb
std
inc
ins
xor
scas
sbb
sub
pop
push
into
sbb
xchg
mov
(bad)
dec
jb
retf
std
je
xor
call
add
adc
xor
inc
popa
(bad)
aas
sub
cmc
dec
clc
inc
adc
push
push
push
cmp
lods
mov
xchg
jle
or
data16
lods
push
sbb
ins
out
retf
pop
xor
and
shr
mov
sbb
pop
ret
mov
sbb
push
retf
bound
int3
pop
mov
push
dec
imul
add
xchg
outs
pusha
dec
or
xor
cmp
xchg
or
push
mov
cmp
mov
scas
dec
ret
pop
pop
ror
xor
nop
stos
jp
jecxz
adc
adc
fisub
mov
cmps
mov
call
and
add
dec
or
icebp
(bad)
mov
ror
hlt
mov
and
repnz
jnp
mov
icebp
mov
or
cmp
int3
in
scas
test
(bad)
adc
test
sbb
jo
not
aam
mov
cmp
fwait
jns
test
pop
icebp
clc
dec
or
jp
jecxz
iret
pushf
ins
mov
test
js
mov
add
or
cmp
rol
xchg
sbb
add
pusha
pop
dec
lea
push
enter
ja
shl
int3
sbb
sbb
xchg
add
xor
leave
(bad)
std
pop
pop
sbb
pop
dec
(bad)
jae
push
(bad)
push
ja
outs
leave
xchg
test
ja
call
stc
adc
xor
mov
shr
mov
in
(bad)
push
cdq
pop
out
xor
cmp
inc
aam
pop
mov
rcl
cmp
leave
out
xchg
mov
fwait
inc
adc
xor
xor
adc
push
push
outs
int3
clc
pop
sub
rcl
test
lods
adc
dec
mov
das
lods
bound
call
push
hlt
sbb
push
or
ret
mov
leave
sub
stos
cdq
mov
movs
adc
test
daa
retf
aas
or
rol
mov
mov
and
jae
mov
pusha
pop
mov
pushf
rol
mov
lods
ins
out
adc
test
sbb
cmp
or
aas
ret
and
dec
es
mov
push
dec
(bad)
jl
dec
ffreep
sub
not
(bad)
jmp
mov
inc
adc
shl
mov
mov
xor
xlat
adc
push
push
pop
ss
pop
add
loopne
imul
mov
out
mov
mov
std
hlt
inc
jne
(bad)
xor
adc
(bad)
jg
scas
push
dec
mov
lock
xor
inc
mov
mov
mov
int
pushf
ret
lea
mov
retf
mov
mov
sub
adc
into
jne
mov
mov
push
or
in
loopne
mov
imul
pushf
push
xor
inc
aaa
fwait
sbb
xchg
(bad)
cmp
cmp
pop
cmp
sahf
std
ja
fsub
mov
inc
or
inc
test
shr
jge
and
loope
js
retf
rcr
stc
ss
dec
xor
lock
push
shl
jmp
mov
popf
(bad)
mov
xchg
loopne
es
and
sbb
jecxz
pop
mov
xor
push
pop
aaa
xor
dec
or
pop
xor
mov
inc
je
mov
mov
out
pop
repnz
fist
fld
lock
or
mov
jmp
das
jae
push
mov
bnd
aaa
mov
in
cmps
mov
ins
jg
imul
dec
sbb
dec
jns
sahf
jae
lods
xor
inc
jae
inc
fcmovu
sbb
push
js
in
nop
repnz
xor
pop
hlt
or
or
lea
pop
add
idiv
imul
mov
push
adc
mov
adc
addps
jecxz
neg
sub
jbe
mov
xchg
icebp
out
or
mov
and
ds
dec
pop
out
(bad)
(bad)
dec
sub
jmp
bound
push
sbb
adc
cld
sub
mov
ret
push
sbb
(bad)
lea
add
int
not
int
fs
xor
imul
aam
jae
js
(bad)
std
cmp
dec
out
call
cmp
mov
repz
mov
jno
in
ins
inc
adc
or
xor
dec
add
packsswb
sbb
sbb
imul
adc
leave
fisubr
xchg
dec
mov
(bad)
dec
test
test
loopne
adc
inc
and
jp
sar
jmp
out
imul
pop
add
loopne
inc
mov
cdq
xor
into
inc
push
dec
adc
in
dec
mov
in
add
pop
inc
int
popa
lods
ret
fsubr
adc
out
jg
(bad)
pop
rcl
push
(bad)
adc
shl
scas
sahf
mov
js
ret
adc
dec
or
mov
loop
xor
or
mov
and
push
and
cdq
(bad)
addr16
add
and
out
mov
xchg
cmp
mov
jbe
test
jecxz
fstp
retf
clc
(bad)
shl
mov
call
clc
bound
pop
arpl
xor
xchg
ja
mov
call
(bad)
cwde
dec
fmul
aam
(bad)
fsub
inc
int
mov
dec
stos
popf
adc
xor
fbstp
stc
jo
call
adc
iret
mov
fincstp
shl
push
es
cmp
movs
pop
mov
jne
cli
pop
cdq
xchg
inc
fs
sub
cwde
neg
(bad)
push
adc
mov
sbb
arpl
mov
jmp
fsub
scas
aas
sub
imul
(bad)
mov
add
test
xor
loopne
and
in
dec
ja
std
fisttp
retf
adc
movs
jbe
inc
adc
(bad)
pop
(bad)
mov
jmp
or
pushf
push
jo
push
in
mov
mov
add
cmp
mov
pop
lds
rcr
or
es
icebp
jbe
mov
push
xor
lock
xlat
data16
xchg
adc
sahf
cmc
mov
push
add
sub
sbb
push
and
adc
cmps
pop
jp
mov
pop
popa
sahf
pushf
out
loopne
out
sbb
sub
sbb
cmp
add
mov
cwde
cmp
mov
xchg
pop
(bad)
ds
cmp
mov
call
(bad)
fbstp
push
or
sub
icebp
movs
pusha
stos
xchg
aaa
movs
cli
and
arpl
push
pop
cmp
into
jno
jo
dec
pop
jmp
mov
or
and
(bad)
aad
xor
clc
fadd
adc
call
push
adc
xor
fst
push
xor
sub
clc
stos
ss
rcr
and
xchg
inc
and
bound
imul
jns
push
push
push
test
test
(bad)
hlt
push
xchg
lds
mov
jp
call
mov
xchg
mov
ins
mul
xchg
outs
ds
call
inc
ds
inc
and
cmc
mov
mov
pop
hlt
cs
les
inc
jbe
mov
jnp
xchg
mov
inc
fnsave
jecxz
mov
js
fist
inc
push
sti
inc
sbb
mov
cmp
push
cmp
ss
ins
inc
lock
cmp
scas
cmp
aam
jg
es
mov
push
push
cmps
and
repz
jge
push
fstp
add
jge
or
sub
inc
push
xor
ss
mov
in
arpl
add
repnz
and
dec
(bad)
les
adc
ret
pop
out
mov
call
mov
popa
std
pop
sub
test
lahf
test
lock
outs
retf
mov
sbb
(bad)
jo
nop
jmp
mov
lods
dec
(bad)
fmulp
mov
and
mov
loope
pop
mov
jl
jge
outs
xchg
imul
inc
mov
pop
inc
adc
and
lea
mov
fsub
and
cmp
stos
fwait
aas
(bad)
jne
add
addr16
cmc
mov
popa
xchg
xchg
xchg
mov
adc
mov
das
repnz
push
loope
and
mov
xchg
popf
xor
push
mov
outs
gs
(bad)
xor
in
inc
out
dec
lods
mov
sub
sub
lods
sbb
(bad)
aas
adc
popf
idiv
pushf
sbb
clc
mov
mov
pop
jl
mov
int
nop
push
sbb
jge
sub
xor
(bad)
fstp
inc
test
cli
stc
cdq
xor
push
pop
pop
scas
stos
xchg
stos
cmp
loopne
xchg
inc
mov
mov
fnstenv
(bad)
mov
jle
shr
in
rcl
es
mov
cmc
adc
popa
or
lock
addr16
jle
mov
sbb
xchg
rcr
aad
fidiv
inc
test
test
cmps
mov
aam
arpl
pop
push
int
dec
inc
aaa
repnz
sbb
arpl
aas
jmp
inc
add
out
push
mov
addr16
inc
mov
mov
arpl
and
stc
ror
dec
xchg
scas
jbe
cs
dec
and
cmp
rol
cmp
and
int
cmps
cmp
out
fwait
or
xchg
jge
sub
lock
lahf
xor
xchg
xor
mov
inc
sbb
repnz
shl
ins
adc
jge
gs
popf
mov
xchg
daa
jne
aad
mov
arpl
call
mov
push
inc
mov
cli
pop
popf
call
jl
push
push
pop
xor
ror
loop
mov
std
mov
pop
mov
xor
jns
mov
mov
retf
cmp
dec
lds
and
mov
jmp
adc
mov
sub
pusha
cs
or
mov
xor
and
shl
into
mov
js
retf
cmp
xchg
push
mov
out
pop
dec
xor
aas
sbb
push
cmp
cmp
sbb
data16
out
in
lods
inc
push
clc
(bad)
mov
or
inc
mov
add
inc
fnsave
dec
scas
mov
ret
mov
rcl
adc
ja
mov
cmp
push
loopne
cmp
clc
ret
call
iret
shl
mov
mov
scas
daa
in
adc
cmp
pop
(bad)
add
inc
inc
mov
out
outs
mov
xchg
popf
fld
inc
in
and
add
leave
mov
mov
xchg
pop
enter
adc
retf
push
aaa
or
jmp
cld
out
push
pop
push
inc
xchg
es
jge
push
push
sbb
aam
repz
(bad)
xor
xchg
outs
fstp
and
pop
dec
aas
and
(bad)
mov
dec
test
jno
mov
mov
retf
imul
sub
cmps
push
pushf
jg
and
out
setno
xlat
sbb
call
sbb
pushf
cmc
dec
mov
or
push
call
imul
lds
mov
imul
cmps
fdivr
ss
or
pop
inc
ja
inc
and
test
pop
jmp
pop
xlat
icebp
adc
or
adc
xchg
repz
out
sbb
sbb
adc
jp
adc
mov
xor
add
push
or
xchg
ficom
mov
sti
inc
jb
test
sub
(bad)
iret
dec
out
aas
cmc
icebp
jb
or
(bad)
out
fist
arpl
in
stc
jmp
adc
test
jb
dec
jmp
ret
adc
aad
popf
push
xchg
mov
ret
or
sbb
sbb
icebp
or
and
push
xlat
movs
loope
and
je
inc
shl
inc
scas
loope
xor
pop
sbb
call
daa
adc
xchg
inc
push
test
out
sub
jbe
retf
imul
(bad)
arpl
dec
mov
pushf
rcr
imul
xor
jno
push
sbb
into
mov
(bad)
mov
std
adc
lea
inc
inc
cmp
call
adc
and
sub
sahf
cmp
xor
sbb
rol
fstp
(bad)
sub
aaa
fsubr
push
popa
mov
jmp
or
mov
mov
push
jge
bnd
movs
mov
out
cmp
pop
(bad)
rcr
jle
add
cdq
or
push
jmp
fadd
int
sahf
push
dec
sub
aam
int
sar
call
mul
bound
add
xchg
mov
dec
mov
shr
cmp
push
jmp
pop
and
mov
mov
popa
test
xchg
and
stos
sub
stc
cmp
xor
test
lock
pop
inc
cld
js
push
pop
in
xlat
cmps
std
mov
lods
push
cmp
outs
xor
dec
dec
test
xor
pop
dec
enter
movs
xor
fnstenv
sbb
mov
or
lock
dec
(bad)
push
gs
or
stc
mov
fs
fldcw
push
jb
jne
test
rcr
addr16
inc
arpl
pop
push
test
sbb
shr
enter
adc
lahf
sbb
jmp
fucomi
(bad)
out
pushf
out
scas
loope
iret
cwde
les
xchg
cmp
jo
in
clc
repz
xchg
mov
or
jo
jecxz
dec
and
mov
repz
xlat
push
mov
mov
or
and
cmp
not
rcr
sub
push
xlat
js
push
jmp
dec
clc
mov
in
retf
pop
push
stos
xchg
and
sbb
inc
dec
jnp
add
dec
adc
movs
jmp
enter
dec
out
ja
ret
inc
mul
jns
jge
xchg
inc
pushf
adc
xor
out
add
cmp
xor
loopne
or
lods
js
cmc
xor
pusha
adc
or
push
aaa
out
nop
(bad)
xor
jno
fs
push
add
or
inc
in
aad
imul
call
cmps
cmp
int
xlat
sbb
inc
(bad)
cmp
jle
mov
cld
adc
outs
retf
sbb
xchg
mov
(bad)
(bad)
and
mov
out
and
(bad)
bound
fcomp
adc
pusha
pop
adc
xchg
add
data16
jns
fldcw
inc
cmp
neg
mov
xor
popf
fcomp
pop
cmc
shl
les
inc
psadbw
stos
xchg
les
sub
inc
push
add
shr
dec
inc
jl
fimul
(bad)
jle
repz
outs
jnp
js
cld
in
in
xchg
std
xchg
adc
cmp
in
push
outs
(bad)
fs
mov
movs
icebp
adc
cmps
int3
cdq
jne
xchg
adc
iret
jo
cld
test
and
clc
cmps
push
and
into
mov
stos
lock
mov
js
push
les
sar
push
and
repz
call
sub
add
push
int3
and
(bad)
jl
mov
fcomp
inc
pop
xchg
or
inc
imul
push
movs
imul
cmp
jg
enter
sub
mov
sub
mov
xchg
ins
dec
mov
sub
jae
pop
imul
xor
add
mov
or
mov
add
sbb
retf
jmp
push
ja
inc
jmp
push
mov
xchg
cmp
das
movs
(bad)
dec
sub
jl
addr16
sbb
mov
mov
outs
jg
aam
add
ja
movs
mov
gs
aam
sub
int3
test
cmps
mov
ret
and
pop
jmp
cmc
and
in
fs
mov
mov
xor
dec
cmp
ins
mov
mov
out
push
mov
sbb
or
xchg
call
(bad)
aaa
mov
or
jg
scas
and
std
lods
shr
mov
out
jg
dec
les
ja
and
aaa
dec
push
jb
jp
mov
clc
arpl
jo
mov
pop
mov
sbb
daa
and
mov
ds
cmc
es
add
xor
cli
mov
outs
push
or
sbb
xor
xchg
arpl
xchg
jle
enter
ds
dec
dec
xchg
mov
jp
push
enter
mov
dec
pop
xchg
push
cmp
clc
dec
dec
inc
pop
out
outs
fistp
xor
retf
cmp
add
fstp
push
push
jle
repz
push
shl
in
enter
jp
sub
aam
push
sub
push
arpl
or
pop
shr
xchg
outs
call
int
cs
test
dec
inc
add
(bad)
mov
(bad)
rcl
ret
mov
mov
push
lock
mov
fdivr
pop
out
add
mov
loop
into
jecxz
xchg
cmp
pop
cmp
dec
jno
push
fistp
xchg
xchg
adc
sbb
xor
inc
shl
aaa
cmp
push
mov
add
imul
push
xchg
xchg
mov
jae
fwait
je
push
sub
xchg
cmp
lods
mov
xchg
inc
or
dec
pop
lods
fld
pop
imul
pop
add
pop
lds
cmp
dec
xchg
xchg
jae
mov
gs
cwde
bound
pop
out
shl
stos
retf
movs
sahf
push
push
mov
sub
leave
cmp
cs
test
push
daa
loope
ss
and
push
shr
ficomp
ret
push
outs
cmc
mov
xchg
fmul
sub
mov
out
mov
movs
dec
fstp
and
fldenv
xchg
xlat
ins
dec
inc
push
mov
jmp
xor
jecxz
xor
clc
mov
imul
lds
push
and
jl
pop
inc
retf
jge
jg
add
sub
cs
ret
cmp
dec
dec
add
cmp
(bad)
jnp
les
pop
enter
pop
add
push
push
push
cmp
pop
sbb
les
add
sbb
addr16
sbb
loopne
dec
sbb
or
mov
and
dec
dec
or
pop
ins
sbb
fdivr
test
xchg
adc
push
fcomp
leave
mov
nop
adc
cmps
cmps
ret
mov
dec
or
je
bound
push
pushf
add
inc
inc
add
call
hlt
call
jno
mov
jp
popf
inc
mov
repnz
scas
and
push
mov
fst
add
ja
inc
iret
in
fdiv
shl
arpl
inc
inc
(bad)
dec
jae
cmp
dec
push
dec
stos
movs
cwde
mov
test
jg
outs
mov
add
cmp
retf
arpl
pop
or
pushf
inc
or
cmp
(bad)
mov
adc
scas
in
mov
pop
dec
xchg
addr16
mov
inc
jbe
ja
dec
jo
push
pop
iret
arpl
pop
pop
push
nop
jae
pusha
push
shr
in
sbb
inc
leave
xor
add
jb
test
popa
data16
int3
gs
test
cmp
call
jno
(bad)
push
or
arpl
xchg
dec
xchg
aas
addr16
mov
jb
push
jnp
hlt
cmp
sbb
inc
int
cmp
push
cmp
sub
mov
mov
push
adc
xchg
mov
xchg
ins
(bad)
rcr
cmps
neg
call
cld
ror
aaa
and
call
inc
pusha
jecxz
loope
add
sbb
(bad)
sub
sub
stos
mov
(bad)
mov
sbb
sbb
mov
and
leave
jmp
sbb
lods
adc
aam
push
leave
ja
push
pop
sti
xor
cli
cmp
pop
in
jnp
repz
fmul
add
pop
in
mov
mov
sbb
push
cwde
mov
pusha
adc
cdq
lods
mov
mov
push
or
cmp
movs
scas
mov
mov
pop
int
adc
or
out
rcr
sti
sti
pop
ins
cld
mov
push
shl
pop
pop
popf
adc
ins
or
loopne
cmp
das
mov
das
test
int
(bad)
add
jbe
addr16
enter
cs
ds
imul
inc
shl
cld
pusha
cwde
je
add
mov
nop
xchg
std
rol
and
push
ret
loopne
dec
adc
xchg
clc
sahf
lods
or
mov
xor
enter
mov
stos
jmp
sti
xor
outs
add
cmp
out
add
loop
lock
test
aad
cmp
aaa
icebp
ds
cs
mov
cmp
mov
je
addr16
mov
sbb
rol
inc
unpckhps
mov
lock
adc
js
jb
aad
sbb
push
dec
shr
or
gs
lods
(bad)
cmp
cmps
in
shr
xchg
cwde
into
inc
stos
xlat
jbe
leave
mov
aam
(bad)
cmp
hlt
sub
push
pop
test
in
jno
call
mov
pusha
repnz
jns
mov
call
mov
pop
dec
pop
cmp
retf
mov
scas
call
mov
and
sub
push
mov
pop
mov
enter
imul
scas
ror
xchg
in
cwde
inc
cmps
and
push
popaw
int
lahf
push
into
movs
into
enter
sub
bound
sub
push
ret
sub
(bad)
inc
mov
mov
mov
mov
int3
and
xor
clc
jmp
and
(bad)
dec
dec
fmulp
les
xchg
(bad)
pop
in
pop
call
jecxz
xchg
loop
les
mov
(bad)
push
push
pop
pop
mov
pop
adc
push
xor
pop
add
cmp
sbb
or
mov
scas
xor
sub
xor
fdiv
je
fist
mov
xchg
fmul
sbb
sub
shl
sar
mov
dec
or
and
shl
xchg
aaa
test
sub
push
test
adc
scas
pop
pop
das
and
(bad)
sar
cmp
scas
aad
sbb
pop
cmp
addr16
inc
retf
xor
jg
jle
mov
sar
jle
adc
sub
loop
call
fcmovnu
cmp
sar
inc
in
push
push
int
xlat
or
adc
ficom
push
push
push
sub
push
inc
call
nop
mov
adc
aas
ins
inc
and
cmp
dec
mov
stc
and
push
and
cli
pop
loopne
or
mov
cmp
mov
mov
add
jecxz
mov
add
push
or
aaa
in
pop
imul
xchg
std
lods
mov
xor
pop
stos
test
scas
push
retf
js
mov
xchg
xchg
pop
fisttp
xchg
jo
xor
xchg
sbb
fbld
stos
fcmovb
into
jns
and
mov
out
sub
dec
jle
or
cwde
leave
std
mov
mov
pop
xlat
in
hlt
fdivrp
lds
xor
out
sahf
dec
movs
bound
scas
push
daa
neg
sbb
mov
gs
push
dec
ins
jmp
xchg
(bad)
dec
arpl
rol
fbld
inc
jmp
daa
cmc
dec
stos
fcom
pop
xlat
dec
sbb
cmp
add
loopne
daa
test
adc
repnz
mov
pop
xchg
out
int
inc
jmp
jb
or
js
jl
adc
jmp
ss
out
jne
sub
test
push
enter
call
add
push
cdq
xor
(bad)
in
fist
or
push
xchg
imul
repnz
lods
ret
xchg
push
mov
inc
addr16
xchg
sbb
mov
xchg
mov
xchg
test
lea
sbb
mov
std
popf
push
sbb
xlat
mov
push
dec
cmps
inc
popf
mov
pop
fsub
jae
xchg
dec
mov
push
xchg
cwde
out
push
iret
(bad)
or
add
xor
rol
aas
loop
or
pop
fbld
movd
bound
dec
into
shl
test
xchg
mov
out
aad
mov
xlat
je
popa
xor
push
mov
fwait
push
mul
cmp
pop
fimul
push
push
ins
xor
leave
cmps
sub
and
(bad)
pop
jge
and
xor
std
or
or
add
test
mov
les
(bad)
mov
jecxz
add
mov
out
xor
jge
mov
cmp
lds
mov
mov
mov
je
mov
ror
in
js
sbb
xchg
push
pop
sbb
mov
out
arpl
movs
cmc
popa
inc
cmps
addr16
xchg
cwde
push
cmp
les
ja
push
test
xchg
mov
inc
cmp
jecxz
neg
dec
dec
fidivr
jo
repnz
pop
je
xchg
or
in
or
mov
and
(bad)
sub
jnp
pop
sbb
lods
loop
repnz
mov
adc
jmp
(bad)
ficomp
sbb
cmovae
clc
push
add
or
mov
cld
outs
int3
imul
sbb
scas
out
jmp
cld
xchg
out
cs
sbb
es
dec
sub
adc
(bad)
cli
cmp
mov
adc
inc
sub
push
jg
(bad)
jae
es
enter
leave
push
push
clc
imul
ins
xchg
loope
cmc
outs
xor
ins
mov
mov
pushf
push
mov
mov
inc
adc
leave
mov
jnp
dec
pop
dec
sbb
(bad)
(bad)
xchg
fisub
push
repnz
dec
xor
fidivr
loop
les
inc
sbb
std
mov
dec
jmp
pop
std
je
add
(bad)
data16
out
xor
enter
jae
mov
test
mov
ss
iret
push
sub
pop
sbb
std
mov
icebp
xor
jmp
jno
xchg
sub
mov
aam
and
stos
iret
pop
inc
vmovsd
adc
fwait
into
nop
inc
inc
push
push
dec
arpl
push
mov
pop
popa
mov
dec
sbb
aaa
adc
int
outs
push
in
sbb
sbb
hlt
xor
loop
mov
mov
fs
in
popa
repz
inc
mov
add
fst
int
pop
aas
mov
mov
cmp
mov
fnstenv
or
jl
mov
and
ret
dec
jle
popa
std
sbb
hlt
dec
fstp
lahf
cmp
fmul
sub
out
inc
mov
(bad)
out
lahf
(bad)
stos
adc
mov
mov
in
adc
stc
cmp
mov
shl
rcr
fs
(bad)
jecxz
xor
test
jns
jmp
popf
pop
in
jle
addr16
xor
dec
xchg
lods
dec
pusha
into
(bad)
sahf
dec
js
pop
out
pop
loope
sub
ins
(bad)
in
mov
aad
movs
into
mov
adc
push
stos
adc
in
mov
jns
xchg
loope
sbb
xor
jbe
and
inc
sub
(bad)
jno
enter
(bad)
push
lods
mov
popf
xor
add
jnp
(bad)
(bad)
dec
mov
and
sbb
loop
call
or
and
in
and
inc
in
sbb
loope
push
pop
or
mov
cmps
sar
sub
fdiv
aaa
scas
sahf
out
jb
mov
(bad)
adc
in
loope
mov
cmps
jge
jg
mov
jl
out
push
std
adc
push
jno
push
mov
xor
add
lods
icebp
lods
pop
idiv
sar
inc
lods
pushf
cmp
popf
add
sub
in
sub
jbe
sbb
push
cwde
inc
imul
loope
dec
adc
scas
cld
cmp
into
pusha
sbb
mov
mov
ss
daa
pop
push
add
dec
xchg
repnz
frstor
shr
and
loop
outs
sub
push
movs
rol
cmp
stos
dec
push
mov
push
mov
js
fld
fcomp
inc
ins
dec
das
mov
mov
pop
test
mov
in
xchg
pop
int3
mov
and
int
icebp
pusha
or
mov
call
inc
rol
pop
dec
push
pop
inc
sub
jno
ficom
mov
pop
mov
out
sbb
push
pop
test
popa
addr16
mov
cdq
push
addr16
rol
xor
xor
shl
je
inc
int
jbe
dec
mov
pop
push
stos
movs
je
rcl
aad
popf
pop
xlat
emms
addr16
retf
push
and
ja
clc
dec
into
lods
mov
ins
adc
and
fiadd
jo
pushf
sub
jne
or
fisubr
call
int
sar
adc
sub
mov
out
push
dec
mov
fisub
pop
cli
inc
sar
mov
test
loopne
pop
xchg
adc
jle
and
test
call
enter
icebp
fisub
xor
push
cmovle
in
push
jg
hlt
fcomi
mov
dec
dec
jb
jecxz
mov
mov
adc
aam
pop
out
lahf
call
mov
fsub
outs
nop
sub
test
into
int3
in
pop
adc
ret
adc
add
or
push
pop
push
push
ins
call
sub
adc
dec
inc
cmc
das
sbb
jg
xchg
(bad)
jmp
mov
mov
pop
out
inc
sbb
lods
mov
call
cdq
(bad)
shl
sar
out
jae
and
mov
xor
stos
test
jne
fwait
push
repnz
pop
call
cmp
neg
(bad)
pop
mov
cmp
sbb
dec
addr16
out
(bad)
jmp
cmp
cmp
inc
fs
jg
xchg
mov
push
lods
mov
pop
push
je
cs
jmp
sbb
and
enter
enter
sbb
out
or
(bad)
rcl
add
addr16
repnz
xchg
(bad)
pop
mov
out
cs
out
fst
xchg
mov
dec
lds
push
ins
data16
xchg
not
pop
popa
in
out
cld
mov
ficomp
arpl
cdq
popf
dec
out
push
ins
inc
cmp
dec
jmp
inc
jb
pop
(bad)
sbb
test
int
daa
jne
inc
pop
sbb
neg
or
adc
lock
xchg
clc
sti
call
cwde
and
push
or
dec
add
mov
dec
pushf
scas
imul
test
mov
or
(bad)
mov
xor
and
xchg
sub
dec
stos
scas
mov
xchg
fld
dec
pop
cmp
fndisi(8087
push
stos
leave
(bad)
dec
add
and
pop
xor
mov
mov
or
(bad)
jge
or
pop
sub
mov
stos
in
sbb
rcl
jp
dec
retf
ja
sbb
xorps
cmp
pop
scas
ret
cmps
cmps
add
pop
push
adc
dec
and
and
xor
sbb
dec
jns
fdiv
test
sub
sahf
and
xor
fdiv
mov
mov
sbb
pop
inc
push
push
cwde
push
xor
or
imul
bnd
pop
rol
gs
gs
addr16
mov
mov
(bad)
xchg
test
jge
mov
push
add
add
or
and
mov
aam
(bad)
or
mov
pop
pushaw
dec
sbb
jmp
rcl
fiadd
retf
and
mov
int
loopne
(bad)
(bad)
jmp
aam
(bad)
movs
mov
repz
jle
mov
out
jbe
fidiv
test
pop
mov
adc
retf
sti
pop
jne
or
cmp
mov
jge
ffreep
or
push
iret
call
ds
mov
add
adc
fs
bound
mov
cmp
cbw
sbb
or
and
pop
inc
std
cmp
push
(bad)
mov
mov
inc
xchg
addr16
sub
repz
xchg
test
std
mov
pop
inc
hlt
popf
in
call
jb
adc
cdq
std
ss
add
ror
mov
pop
sub
(bad)
sti
mov
dec
ja
cmc
mov
and
sbb
jo
pop
add
add
test
addr16
(bad)
nop
ins
cmp
add
aaa
leave
adc
out
mov
or
fmul
ins
adc
jne
cld
lds
sar
mov
test
push
pop
or
inc
fist
adc
pop
push
jmp
cwde
dec
mov
cs
sub
pushf
pusha
cmp
mov
js
rcl
pop
in
xchg
imul
mov
mov
push
xchg
jo
cmp
(bad)
and
xor
pop
mov
fistp
xor
and
pop
int3
loopne
(bad)
xchg
out
xor
xchg
push
push
and
mov
xor
fcomp
add
repz
xor
jmp
and
mov
pop
sar
mul
cmp
hlt
pop
inc
jns
cmp
out
fst
fild
or
sbb
cmp
push
push
dec
popa
cdq
sub
ds
jmp
shl
cs
shr
add
ret
fwait
inc
repnz
rcl
xchg
popa
repnz
movs
sub
cmc
lahf
mov
push
mov
repnz
ins
pop
cmps
ror
push
sbb
jae
aas
pop
push
jmp
and
add
test
or
xor
xchg
sub
dec
ins
in
mov
sub
mov
jo
(bad)
or
pushf
adc
dec
repnz
test
(bad)
fs
add
inc
adc
fwait
sub
and
out
fist
or
cmp
or
addr16
sub
pop
sub
jg
jno
adc
mov
mov
mov
jne
les
mov
xor
(bad)
scas
xchg
out
out
xchg
ins
mov
shl
scas
jbe
add
sbb
test
retf
xchg
push
rcl
int3
sbb
clc
jmp
ret
ret
mov
jo
add
in
cmps
cld
stos
xor
ins
adc
push
cmps
jmp
sbb
mov
addr16
sub
ss
mov
xchg
pop
out
cmp
js
and
ja
adc
fwait
mov
cmc
mov
sbb
sbb
mov
and
data16
and
mov
and
push
ja
test
cmp
push
or
(bad)
inc
cmp
in
imul
int3
outs
push
cmp
jmp
dec
mov
test
repz
jp
push
pop
adc
(bad)
cmp
or
push
push
push
adc
(bad)
fidivr
fstp
mov
ror
mov
ret
jnp
inc
and
pop
push
in
sbb
mov
pop
mov
jne
ja
and
cmc
cdq
sub
repz
xor
test
sbb
sub
jl
push
call
sub
cwde
push
cmps
test
stc
and
and
hlt
aad
mov
mov
mov
mov
adc
xchg
iret
jno
adc
mov
pop
popf
dec
(bad)
in
dec
test
mov
scas
in
pop
sbb
pop
adc
mov
(bad)
ficom
nop
mov
in
retf
or
stos
push
mov
aam
mov
push
add
jmp
inc
pop
or
loopne
inc
or
jl
jb
sbb
xor
imul
ds
jo
jbe
js
pop
lea
(bad)
idiv
gs
call
add
pop
mov
(bad)
in
test
dec
mov
xchg
imul
dec
data16
call
leave
or
fmul
jmp
shr
or
pop
shl
outs
mov
and
retf
jbe
pop
jmp
jl
jnp
xor
or
das
push
pop
pop
push
ror
or
int
pop
ss
mov
add
xor
inc
pop
aas
nop
pop
xlat
sub
stos
fdiv
stos
fidivr
jb
dec
call
push
pop
sahf
pop
lea
mov
jp
(bad)
mov
push
xchg
test
ins
adc
mov
sub
cmc
pushf
jle
xor
fild
or
mov
mov
cld
push
mul
cmp
fcmove
les
div
pop
repnz
jmp
jmp
cmp
jle
int3
xchg
adc
mov
inc
dec
loop
mov
inc
mov
sbb
cmp
pop
les
dec
push
adc
fsub
ret
ret
adc
or
inc
popa
jmp
daa
sbb
aad
push
and
cmp
or
pop
gs
sti
mov
add
mov
sub
xchg
cli
cmc
out
jp
mov
pop
mov
xor
push
call
mov
movs
sub
into
ins
(bad)
fisub
out
ins
push
add
xor
in
imul
mov
sbb
int3
and
std
xchg
sub
mov
cmp
mov
jbe
jnp
(bad)
iret
neg
push
xchg
(bad)
je
ins
mov
inc
outs
mov
cmc
fs
mov
and
pop
push
arpl
xchg
pop
pushf
ds
loop
pop
rol
cs
mov
in
gs
inc
repnz
jg
sub
(bad)
mov
sub
test
or
xor
or
sub
mov
(bad)
hlt
add
jbe
and
imul
addr16
ficom
fstp
popf
movs
cld
les
pop
popf
cmps
and
imul
mov
push
inc
mov
rcl
mov
add
fldenv
arpl
mov
gs
pop
fidiv
cdq
gs
sub
jne
ja
(bad)
aaa
xchg
mov
add
mov
mov
jg
add
jle
(bad)
jl
or
cmp
ins
dec
xchg
loope
xor
adc
arpl
fsubr
pop
es
or
xchg
dec
add
xchg
dec
push
mov
inc
sbb
fwait
sub
(bad)
cld
lea
add
lods
xor
rcl
xor
mov
dec
add
mov
hlt
lods
lds
jo
stos
mov
test
cdq
out
and
test
inc
call
cmp
xor
xchg
jo
(bad)
mov
icebp
or
(bad)
or
sti
jmp
lahf
int3
pop
dec
cmp
cdq
jecxz
and
cwde
inc
in
hlt
add
and
sbb
pushf
mov
and
adc
(bad)
aas
aaa
sar
push
fcom
aaa
(bad)
pop
mov
mov
and
jbe
adc
mov
clc
vpshlb
stos
or
sub
adc
ret
cli
inc
fild
scas
jmp
dec
stos
mul
add
hlt
inc
daa
sysret
jg
mov
fstp
mov
into
fdivr
jnp
cmps
inc
lods
or
sbb
fs
ror
int3
xchg
fmul
and
mov
sub
int
femms
outs
fs
jb
dec
xor
hlt
adc
imul
inc
cmp
add
stc
je
mov
push
imul
mov
xchg
jno
xlat
xchg
cmp
(bad)
call
mul
iret
iret
out
cli
ds
cs
clc
jg
repnz
jo
je
and
pusha
xor
in
add
mov
hlt
cmp
and
pusha
inc
movs
adc
cmps
gs
pop
(bad)
mov
xlat
fisubr
lods
out
mov
fwait
mov
iret
fs
mov
add
jbe
mov
shr
rol
aam
push
sub
imul
xor
div
mov
clc
inc
xor
mov
stos
mov
div
imul
jp
call
ins
loopne
inc
wrmsr
or
xor
lods
dec
out
sub
mov
test
movs
mov
rol
sbb
jmp
jns
ss
mov
enter
push
cmp
add
stc
loopne
mov
xor
cmp
sub
shl
adc
jb
imul
and
push
ret
cdq
icebp
push
xchg
ins
fld
inc
aam
pushf
mov
pop
adc
pop
xchg
fcom
stos
je
movs
fldenv
mov
sbb
sar
adc
rol
sbb
and
push
retf
sbb
jbe
fild
mov
inc
push
icebp
mov
pop
(bad)
xor
in
dec
sub
rcr
lods
test
pop
lea
push
jecxz
push
ja
arpl
push
add
int3
in
xchg
call
jb
jno
jns
imul
pusha
test
std
cmp
fwait
and
(bad)
pushf
out
into
inc
lds
mov
add
arpl
rcr
lods
xor
inc
out
fnstsw
mov
dec
jnp
sti
jno
mov
mov
sahf
popf
pop
cs
aas
cmc
inc
jne
mov
shl
xlat
push
cmps
xor
xor
mov
add
xchg
adc
pop
dec
sar
scas
cmp
xlat
fidiv
lea
fs
bound
fs
adc
inc
ins
mov
sbb
in
sub
add
inc
ds
scas
pop
imul
pop
dec
jno
rol
add
lods
fs
fild
push
adc
xchg
daa
fwait
mov
lea
cmp
fucomi
call
pop
test
jecxz
sub
push
jno
ins
mov
push
jnp
out
adc
lds
cmps
sub
mov
xchg
out
adc
jl
pop
or
jae
pop
add
adc
cmp
sub
movs
pop
lods
cmps
test
and
movs
jp
mov
jg
inc
cli
inc
clc
int
popf
les
inc
stc
adc
pop
aas
imul
add
pop
(bad)
xor
in
jne
fild
mov
cmp
add
retf
mov
sbb
in
ja
dec
fadd
cs
loopne
cmp
cli
xlat
and
push
outs
loopne
mov
push
jnp
pop
adc
pushf
not
mov
xchg
sub
add
scas
cdq
inc
mov
in
cmp
jbe
inc
into
ds
(bad)
cld
push
push
mov
mov
dec
push
inc
or
xor
push
repz
enter
ror
inc
mov
cmp
mov
mov
dec
fwait
es
ins
dec
inc
inc
inc
inc
cld
dec
inc
xchg
clc
push
loope
xchg
mov
jmp
pop
pop
push
and
adc
cmps
imul
cmp
data16
lds
jmp
push
xchg
pop
(bad)
pop
test
xchg
and
mov
pop
fimul
stos
add
mov
arpl
lahf
pushf
cmps
pop
jg
inc
jbe
push
lahf
ins
stos
push
cs
(bad)
jecxz
jmp
pop
fistp
sbb
outs
mov
cld
add
inc
mov
and
pop
leave
outs
mov
fst
ror
fwait
ins
xchg
loopne
jecxz
loope
lahf
shr
jae
inc
pop
and
fst
inc
cld
mov
(bad)
fwait
push
fstp
dec
mov
xchg
(bad)
mov
pop
test
mov
(bad)
aam
adc
mov
and
push
xor
cli
fs
push
xor
stos
sub
jns
pop
mov
sub
or
fdivr
bound
daa
cld
push
xor
mov
jns
sbb
shl
jg
mov
aas
jae
cmp
leave
push
push
mov
xor
mov
daa
add
jbe
test
jg
and
cmp
in
sub
mov
das
xor
int
adc
push
call
inc
and
mov
fsub
or
push
aam
fnsave
sahf
imul
sar
dec
inc
rol
push
int3
rol
in
cmp
jo
adc
pop
mov
sbb
jo
cmp
inc
(bad)
in
xor
sub
mov
push
sub
fbstp
mov
mov
ret
sbb
xchg
push
lea
retf
sub
xchg
loop
jecxz
add
and
cmp
lods
stc
xchg
lahf
fcmovu
mov
cmp
sahf
add
out
or
sbb
xchg
xor
jns
jle
adc
repz
jae
adc
cmp
test
test
aad
sub
rol
dec
inc
mov
push
test
mov
cmp
addr16
pop
and
push
inc
cmps
and
pop
jp
call
fwait
pop
mov
cmc
aad
pop
or
loop
aaa
jge
or
sub
jp
xor
and
push
inc
(bad)
sar
pop
or
lea
iret
fs
add
in
xchg
in
call
pop
mov
fld
mov
or
out
ror
mov
jecxz
push
rcl
pop
cs
xor
mov
adc
addr16
fnstcw
add
out
std
shr
imul
pop
aam
xlat
aam
lock
iret
ret
repz
mov
cmp
in
xchg
sub
add
pop
ficomp
jge
enter
jl
xor
sbb
int3
push
mov
rcr
out
adc
in
pusha
pop
inc
scas
dec
or
sbb
xchg
or
je
push
in
push
fbstp
sub
daa
outs
and
outs
test
cmps
jns
push
and
ret
cli
dec
xor
push
cmp
jmp
cdq
mov
ins
xchg
pop
sar
call
retf
repz
aad
(bad)
aad
dec
mov
mov
lock
fidivr
jg
sub
or
outs
cwde
jge
xchg
(bad)
fwait
xchg
inc
outs
fwait
es
jbe
xor
(bad)
mov
mov
fsub
and
loopne
retf
dec
push
sub
aam
clc
fucomi
mov
fld
sbb
add
pop
pop
cmps
pop
out
rcl
jl
mov
test
xchg
add
cmp
sbb
and
mov
test
jns
mov
xchg
sbb
arpl
lea
adc
retf
stos
sbb
aas
(bad)
mov
leave
inc
lahf
(bad)
cmps
lahf
rcr
mov
dec
das
push
in
fldcw
test
jno
dec
inc
inc
or
jo
lods
mov
cmp
xor
inc
fimul
(bad)
idiv
mov
push
xor
push
lahf
mov
mov
pop
mov
dec
js
sbb
inc
scas
push
out
jg
and
sub
inc
xchg
imul
or
movs
or
pop
sbb
cmp
inc
lock
pop
das
lea
push
jecxz
pop
or
popa
inc
adc
push
cdq
or
sub
and
ret
dec
xor
jbe
and
xlat
ror
or
ss
sub
je
loop
add
inc
aaa
rcr
push
pop
xchg
mov
xchg
and
jp
jo
je
inc
xchg
mov
add
iret
xchg
sub
mov
pop
fsubr
aam
nop
pop
inc
inc
sub
neg
imul
and
enter
add
mov
fist
(bad)
fcmovu
int
es
mov
pop
jecxz
xchg
loope
shl
dec
in
pop
xchg
xor
lock
adc
hlt
jno
test
cmps
xchg
fwait
and
cmp
jmp
jmp
repnz
and
xchg
inc
pop
mov
gs
cmp
cld
push
ja
(bad)
cmp
daa
sub
out
gs
pusha
and
jbe
test
push
clc
pop
out
pop
xchg
retf
pop
aas
addr16
mov
ins
lea
jo
movs
iret
js
adc
fsub
cmps
scas
cmp
xchg
sbb
sbb
xchg
mov
lea
inc
xor
xchg
mov
cdq
cmp
mov
or
fdiv
cmps
ficomp
mov
in
lods
and
outs
outs
sub
inc
mov
gs
push
pop
mov
sub
shl
jl
addr16
add
lods
and
cs
sbb
mov
mov
enter
data16
repnz
(bad)
lods
in
xor
fild
mov
lds
sub
lds
shr
(bad)
mov
icebp
mov
call
sub
jne
ss
shl
aaa
jecxz
outs
jb
fidivr
push
add
add
fistp
cld
fadd
inc
fstp
rcl
inc
stc
in
jg
adc
push
xchg
ret
dec
pop
(bad)
inc
dec
adc
jo
clc
(bad)
imul
inc
xor
icebp
mov
ret
pusha
or
jg
push
cmp
and
xchg
ret
mov
and
movlps
mov
mov
and
dec
xchg
dec
outs
inc
call
push
in
lahf
test
pop
aad
test
cmp
jb
sahf
data16
fisttp
inc
cmp
push
mov
push
call
pusha
or
xchg
xchg
pushf
cmps
inc
jns
out
jbe
ss
jmp
or
stos
daa
pop
out
pusha
and
test
jp
xchg
test
push
or
push
ror
xlat
out
cmps
xchg
push
push
or
or
mov
fld1
out
or
inc
xor
ds
sub
imul
ja
or
sub
xor
into
and
sub
mov
jmp
ret
pop
mov
ror
inc
pushf
stos
jl
push
mov
repz
in
adc
pop
cmp
(bad)
repz
mov
dec
jle
sbb
sbb
nop
das
adc
lahf
(bad)
or
hlt
div
sub
cmp
sar
mov
(bad)
fisub
cmps
fistp
dec
xor
pop
pop
mov
movs
dec
ss
nop
cmp
mov
xor
imul
sub
and
sbb
push
(bad)
mov
call
xchg
mov
pop
stc
mov
push
sub
retf
mov
mov
pop
sbb
inc
ins
mov
and
mov
add
xchg
sub
mov
add
sbb
pop
pusha
punpckhwd
in
jbe
xchg
inc
cmp
jbe
ins
popf
inc
imul
inc
sbb
jecxz
sbb
mov
fstp
mov
xchg
stc
ja
add
mov
push
loopne
leave
movs
push
fist
push
ret
fs
retf
xchg
ret
out
push
mov
into
(bad)
nop
dec
aas
push
ja
fnstenv
add
arpl
es
add
jecxz
pop
aas
aad
shl
jp
jle
cwde
pop
je
je
sbb
add
xor
xor
cs
and
addr16
lock
mov
jns
ins
mov
add
pop
sub
pusha
js
or
xchg
stc
xor
mov
jmp
shl
(bad)
push
movs
lds
add
test
popa
mov
aas
stos
inc
pop
pop
test
cdq
pop
inc
cmc
out
sbb
stc
cmc
(bad)
mul
push
jbe
and
jne
inc
jecxz
mov
je
inc
cmps
and
adc
loope
push
adc
inc
sti
or
mov
ja
inc
xlat
dec
rcl
mov
add
mov
jg
mov
cmp
adc
cdq
ss
cmp
cli
cmp
xchg
enter
dec
jmp
cmps
call
(bad)
enter
(bad)
mov
and
push
das
lods
cs
or
fidiv
inc
test
mov
cmp
push
rcl
mov
retf
push
xchg
mov
call
and
test
sbb
xor
push
mov
xchg
lds
mov
repz
enter
sub
imul
inc
cmp
mov
adc
inc
and
mov
jbe
mov
mov
fsubr
fisubr
or
lods
aas
inc
inc
and
push
adc
call
into
je
ins
es
jp
inc
scas
inc
out
push
sbb
std
adc
lahf
inc
sbb
mov
retf
or
cs
cmps
in
cmp
sub
jge
outs
mov
lea
daa
xlat
jbe
jle
loop
lock
mov
mov
and
in
es
daa
mov
fbstp
push
ror
pop
fdivr
cmp
sub
ret
call
jns
lock
iret
fisub
fldenv
push
adc
push
cmp
mov
test
mov
fsubrp
test
into
xchg
cmc
test
icebp
nop
js
mov
inc
addr16
ret
div
mov
dec
sahf
push
mov
(bad)
jecxz
cmp
mov
mov
popf
push
lods
aam
inc
mov
mov
sub
outs
in
xchg
push
(bad)
jmp
fnstcw
je
xor
pushf
mov
or
mov
add
mov
sub
inc
mov
shr
sub
or
repz
adc
(bad)
call
and
sahf
adc
in
imul
mov
ss
jne
cld
pop
cmps
outs
or
cli
daa
pop
icebp
out
mov
adc
push
push
xchg
ror
retf
out
out
cmps
repnz
xor
mov
sbb
(bad)
fcom
call
mov
and
cmp
push
call
push
bnd
pop
out
into
lock
cmps
ins
in
out
push
inc
ss
sbb
dec
add
jae
popf
aaa
int3
mov
inc
adc
int3
lock
jge
outs
jg
pop
dec
(bad)
in
sti
mov
int
inc
add
pop
fst
and
lods
(bad)
outs
cmp
cmp
push
jb
les
add
sub
in
add
jno
sbb
jmp
lock
sbb
aaa
neg
sub
pop
(bad)
in
jns
std
sbb
bound
dec
jecxz
xchg
cmps
out
es
inc
xor
push
mov
jp
or
mov
push
stc
dec
dec
adc
int3
jl
movs
ror
sub
mov
ret
sbb
xor
mov
dec
stos
popf
out
inc
xlat
inc
mov
std
inc
mov
push
jle
jmp
outs
jo
sahf
push
inc
nop
dec
ds
xchg
jecxz
ja
cmp
mov
(bad)
jl
sahf
sbb
out
mov
lock
scas
adc
dec
in
rcl
mov
das
sar
sub
out
cmp
popa
mov
outs
imul
xchg
lahf
jge
jl
cmp
dec
xor
fistp
pop
add
or
jno
and
imul
adc
icebp
ds
clc
cwde
fld
ss
pop
pop
xchg
test
call
call
mov
loope
mov
xchg
(bad)
push
mov
pop
lds
push
pop
cmp
push
loope
sub
or
xchg
sahf
in
div
das
ficomp
lahf
jne
push
mov
out
call
mov
or
add
add
adc
dec
xchg
aaa
out
scas
push
xor
movs
in
lds
sub
cmp
inc
mov
xor
mov
adc
inc
xchg
ds
inc
out
mov
js
add
mov
call
xlat
push
lods
jmp
mov
daa
mov
scas
mov
and
and
or
add
cli
xor
add
mov
pushw
pop
add
outs
fadd
adc
xor
not
xchg
dec
dec
rol
test
mov
push
inc
xor
dec
inc
xchg
pop
xchg
push
out
ins
imul
aad
sub
ins
push
mov
les
rcl
xor
outs
inc
or
daa
pop
mov
out
mov
xor
push
push
pop
aaa
nop
cmps
xchg
(bad)
pop
mov
je
adc
push
mov
fldenv
aas
fld1
dec
loope
push
ficomp
xor
out
cld
gs
hlt
push
stc
loop
mov
push
aam
cdq
cmp
add
pop
in
jb
mov
loope
out
out
std
add
jp
cwde
bound
adc
mov
pop
shl
ds
fwait
jno
dec
loope
push
xchg
stos
data16
inc
push
data16
mov
outs
jg
push
call
sub
rcl
mov
retf
je
jg
popa
adc
int3
test
adc
div
fadd
mov
ja
sahf
jmp
(bad)
lock
shl
mov
pushf
stos
jo
cmp
pop
test
scas
add
push
pop
jle
push
cwde
aaa
daa
xchg
jmp
fild
pop
jge
inc
pop
movaps
push
push
(bad)
into
shl
cmps
cmps
icebp
ficomp
test
push
inc
cmp
rcl
popf
loop
add
sub
fwait
imul
cmp
les
int3
sbb
cwde
fidivr
fild
mov
sbb
stc
imul
mov
aaa
cli
pop
int
push
in
add
ins
add
test
cmc
push
data16
pop
mov
push
mov
repnz
repz
int
push
clc
pop
add
out
pop
dec
sti
xchg
push
jmp
mov
fstp
(bad)
pushf
inc
call
adc
clc
idiv
mov
pop
jno
test
mov
jae
jmp
adc
xchg
daa
pop
mov
test
mov
sub
into
and
fdivr
cwde
jg
jmp
pop
enter
test
push
aaa
cmps
jge
sahf
aad
inc
cld
das
cdq
gs
test
loope
scas
xor
cwde
and
rol
arpl
leave
aad
lds
out
sti
ds
or
sbb
inc
cmp
pop
push
fisttp
les
xchg
push
xor
test
pop
in
sbb
adc
ss
pop
in
mov
aaa
ds
pop
cmp
dec
in
dec
inc
fst
ins
jns
sbb
or
(bad)
mov
iret
cdq
cmp
stos
xor
push
gs
jp
sbb
ins
ror
icebp
ret
push
ss
pop
(bad)
sub
mov
or
cmc
push
mov
mov
fwait
ror
push
aam
pop
sar
popa
mov
rol
test
mov
and
fild
sbb
push
inc
pop
push
sbb
out
push
das
ret
mov
mov
clc
test
mov
inc
pop
cli
cmps
loop
outs
mov
lea
mov
outs
data16
and
fucomp
push
inc
dec
aas
fcomp
mov
(bad)
stos
mov
enter
and
in
mov
mov
sub
in
arpl
cmp
cmp
mov
xor
std
jmp
and
dec
fs
cmp
pop
retf
mov
outs
test
xchg
cmp
je
aaa
pop
push
addr16
call
sub
pop
pop
hlt
add
push
mov
sbb
mov
out
das
jg
sbb
jle
push
aam
inc
jbe
mov
repz
push
popaw
shr
retf
shl
das
fld
push
stos
outs
ret
outs
aad
nop
xor
mov
mov
pop
das
cmp
test
jecxz
and
push
iret
cmp
xchg
cld
clc
cmp
repz
dec
jp
popf
or
mov
dec
mov
in
arpl
aam
pop
pop
cmp
jb
cdq
dec
cmp
jmp
fimul
pop
aaa
inc
out
cdq
inc
movs
jle
mov
add
dec
retf
jp
repnz
push
xchg
xchg
pop
push
add
(bad)
cmp
xor
mov
mov
xchg
add
mov
add
mov
test
mov
loopne
pminub
inc
pop
mov
hlt
sub
mov
add
cmp
fsubr
or
sbb
or
hlt
stos
stos
sbb
add
pop
xchg
cmp
mov
rcl
int
dec
or
pop
loopne
(bad)
in
mov
mov
int3
pop
adc
jle
jl
loop
gs
out
inc
jno
dec
mov
retf
push
inc
mov
loope
sbb
push
cwde
ret
pop
add
bound
dec
mov
jmp
pop
int3
dec
inc
jo
adc
rcr
test
cmp
push
dec
jbe
(bad)
xchg
pop
ins
sub
xchg
in
cmps
add
lahf
aaa
int
xchg
aaa
mov
bound
xchg
fs
dec
ret
icebp
cmp
mov
rol
int
(bad)
xchg
mov
pop
repz
ds
cld
jae
mov
dec
sar
lahf
push
mov
(bad)
cli
add
mov
les
jmp
jnp
rol
sbb
jp
jns
xor
pop
imul
mov
push
push
jmp
and
in
xchg
jge
cmc
and
sub
adc
sbb
xchg
pop
adc
mov
bound
or
in
not
push
gs
and
pop
push
(bad)
lea
xor
rcr
call
pusha
jle
aaa
push
xchg
dec
push
sahf
mov
jmp
out
ins
(bad)
leave
jb
inc
scas
xchg
push
push
(bad)
imul
xor
jmp
adc
(bad)
daa
stos
inc
loope
shl
cli
cmp
(bad)
cld
mov
add
push
inc
imul
retf
jge
adc
lea
fnsave
pushf
ds
test
sub
fsubr
or
sub
mov
jp
loope
xor
out
shr
lea
mov
iret
push
stos
push
add
xor
push
push
push
clc
mov
out
mov
push
jbe
(bad)
dec
pusha
mov
ins
les
adc
jo
mov
xor
stos
aaa
imul
jle
aam
mov
push
loop
scas
test
xchg
dec
mov
cdq
ins
daa
push
das
push
mov
mov
aas
lock
inc
xor
fcomp
or
or
and
int
mov
loope
fnsave
js
xor
mov
cmps
sub
inc
cmp
fild
pop
jmp
in
xlat
lahf
pop
sti
inc
add
es
xor
adc
hlt
mov
loope
imul
inc
bound
adc
fcom
pop
mov
push
or
add
adc
jp
mov
or
push
push
fld
xor
addr16
xchg
mov
xor
int
dec
add
cmp
push
je
stos
clc
fisubr
dec
pushf
lock
sbb
mov
mov
jg
inc
xor
dec
sbb
imul
xchg
fadd
mov
pop
out
aaa
mov
popa
scas
out
jle
jle
jnp
cli
in
sbb
jg
test
adc
and
add
lods
pop
fiadd
mov
mov
xchg
adc
jns
push
add
popa
dec
sbb
jmp
mov
push
mov
jl
not
mov
add
jge
push
xor
pop
ret
pop
or
pop
sti
mov
mov
inc
jl
add
xchg
in
ja
mov
lods
fdivr
sub
cs
lahf
cmps
enter
jle
dec
cmp
push
pop
test
gs
jo
and
stos
out
fiadd
(bad)
sub
(bad)
bound
pushf
popa
pop
sti
and
mov
xchg
ds
pop
jo
test
jmp
iret
int3
inc
nop
cmp
cmp
arpl
les
jmp
je
hlt
rcl
hlt
xchg
inc
les
cs
pop
xor
mov
fwait
cmp
xchg
popf
arpl
xchg
jb
fidivr
sbb
test
push
in
and
add
iret
jge
lds
xor
scas
xor
adc
int
push
test
fild
mov
mov
fnstsw
pop
pop
sar
cs
sbb
jmp
xor
jp
pop
loope
jo
jnp
jg
pop
pop
push
rcr
lgs
loope
fadd
cli
movs
and
mov
mov
idiv
and
out
adc
lds
jo
je
out
inc
rcr
add
xor
outs
mov
imul
xchg
inc
add
imul
pop
cmp
pop
jmp
cmc
jo
inc
mov
in
push
in
test
cmp
test
and
sub
sti
dec
(bad)
push
iret
das
sbb
add
call
xchg
and
xor
and
cmp
push
and
cdq
stos
test
dec
js
iret
jns
mov
mov
sar
dec
pop
aas
je
mov
call
mov
cli
movs
leave
cld
call
stos
jae
ret
push
mov
nop
cmp
rcr
and
push
push
cmp
jle
cs
sub
push
cld
pop
stc
addr16
arpl
inc
jae
xchg
fdivr
cld
xor
sbb
and
and
xchg
fadd
add
std
xor
push
mov
aas
clc
pop
inc
and
jmp
jl
je
mov
mov
popa
mov
retf
cld
inc
and
int3
fiadd
imul
xchg
push
mov
mov
fsubr
xchg
cmps
(bad)
jnp
scas
in
cmp
adc
vphadddq
pusha
inc
lods
cmps
inc
dec
nop
cld
adc
outs
adc
movs
jmp
clc
bound
mov
das
nop
dec
xor
stos
mov
push
inc
das
sub
les
(bad)
mov
sbb
test
mov
sbb
data16
test
mov
jne
pop
in
lahf
pushf
mov
js
ins
arpl
cli
daa
clc
pushf
mov
scas
xor
mov
push
adc
pop
out
int3
in
fisttp
push
sub
sub
dec
ret
(bad)
sub
imul
(bad)
and
in
mov
sbb
outs
xchg
neg
mov
mov
mov
nop
(bad)
das
(bad)
(bad)
mov
fisttp
shl
or
inc
movs
jle
cwde
call
sbb
cmp
pop
fwait
int
add
repnz
sub
add
adc
jno
repz
fwait
hlt
or
push
mov
fist
mov
jne
adc
cmp
rcr
push
ins
enter
push
and
das
inc
cmp
lahf
pop
inc
push
adc
xchg
mov
sahf
stc
xchg
lea
dec
xor
xchg
(bad)
inc
and
sbb
add
sub
and
jmp
leave
cmp
dec
pop
lahf
lahf
scas
into
push
cmp
rcr
out
sbb
pop
pop
bound
sbb
scas
popf
sub
sbb
fadd
ins
mov
out
addr16
xor
hlt
cmp
aaa
jp
movs
loop
inc
jmp
mov
mov
enter
dec
xchg
xchg
std
push
xor
and
mov
clc
rol
leave
jge
lea
xchg
jo
test
xor
loopne
mov
fcom
sahf
enter
cmp
sti
push
arpl
loope
xchg
iret
aam
add
push
idiv
sub
dec
xor
lods
and
sub
mov
(bad)
(bad)
xchg
xor
shl
(bad)
(bad)
fst
cmc
sub
push
dec
les
dec
es
add
(bad)
jle
pop
pop
stc
call
sbb
push
xor
and
aaa
test
add
mov
in
xor
adc
enter
shl
dec
(bad)
push
mov
jmp
add
cmp
jmp
sbb
js
jae
out
jp
inc
jge
inc
and
ins
inc
les
cli
pop
dec
mov
mov
adc
add
cs
daa
in
sub
mov
jmp
pusha
dec
pop
jl
mov
and
ss
push
mov
sbb
es
and
cdq
sbb
jg
ja
sbb
dec
test
(bad)
sar
ret
jne
repnz
test
std
xchg
es
mov
sbb
mov
rcr
rol
ins
mov
mov
lods
push
(bad)
add
or
test
out
fidiv
dec
pop
int
sbb
sbb
sbb
hlt
jl
lock
dec
fs
call
scas
mov
jo
xchg
sbb
into
ja
ja
pop
(bad)
aas
adc
mov
test
sar
jb
or
out
ret
out
sub
mov
jge
(bad)
sub
(bad)
mov
cmp
pop
repnz
je
xlat
movs
jmp
movs
mov
jmp
sub
dec
inc
cmp
pop
nop
xchg
jne
(bad)
in
dec
aaa
mov
cmp
lds
data16
sbb
mov
das
fsubr
xchg
ror
cmp
movs
xlat
dec
mov
shl
sar
inc
dec
fld
stos
lds
cmps
out
fst
sar
sub
call
mov
stos
(bad)
jno
fsubr
push
pop
bound
sahf
mov
in
add
inc
fidiv
repz
adc
xor
stos
cmps
pop
pusha
scas
(bad)
retf
cmp
lea
cmp
dec
mov
(bad)
pop
cmps
push
mov
add
push
aaa
sbb
mov
jecxz
sti
aad
mov
(bad)
or
jmp
add
cmp
into
in
in
mov
xor
daa
sbb
adc
mov
xor
jo
daa
pop
lock
outs
xchg
sub
adc
aam
mov
ins
(bad)
jp
jo
or
mov
outs
test
cli
sub
fs
and
movs
or
pop
pop
pushf
movs
push
addr16
ins
icebp
xlat
sar
dec
aas
call
dec
repz
and
gs
fisubr
aam
push
fs
out
pop
rcr
shl
scas
or
push
mov
xor
cmp
pop
test
cdq
sub
add
add
leave
addr16
sbb
xchg
or
out
pop
cdq
jmp
test
sbb
mov
imul
imul
sbb
fs
inc
in
lods
outs
sub
lds
fsubr
jp
add
fwait
sbb
mov
je
movs
pop
or
repnz
lock
loopne
mov
inc
xor
xchg
mov
out
adc
mov
ror
repz
(bad)
fidivr
adc
mov
stc
mov
or
add
adc
jbe
or
mov
pop
test
mov
mov
(bad)
nop
popa
movs
cs
or
mov
lds
xchg
mov
pmaxub
into
imul
pop
jmp
xor
test
jl
jbe
add
xchg
mov
js
pop
push
aaa
enter
mov
jmp
ja
push
sahf
inc
cld
jae
repnz
enter
les
clc
xor
pop
iret
xchg
xor
sahf
xor
xchg
das
push
push
cmc
addr16
dec
jp
int3
sub
pusha
shl
add
loopne
add
mov
(bad)
iret
and
push
aas
jp
cmc
adc
jecxz
push
sub
push
popf
jmp
xor
loopne
dec
js
mov
int3
dec
in
and
scas
retf
push
inc
pop
loopne
mov
retf
xchg
mov
sbb
inc
inc
cs
push
pop
push
mov
mov
fisubr
pop
cwde
inc
push
loopne
mov
mov
stc
dec
sti
jns
cmp
xchg
into
sbb
in
arpl
cmps
xchg
sahf
jo
lahf
xchg
inc
or
in
stc
fdiv
adc
sahf
inc
(bad)
not
test
popa
mov
cli
pop
cdq
cwde
ds
fld
das
inc
ret
jmp
imul
mov
test
mov
fwait
ror
cmp
cmp
or
nop
cmp
adc
sbb
aad
leave
movs
arpl
mov
sub
mov
or
mov
push
(bad)
pop
or
test
push
xchg
das
xchg
push
mov
pusha
pop
sub
mov
sub
push
mov
mov
fild
das
(bad)
cwde
cmp
repz
sbb
js
push
mov
nop
ins
popa
shl
mov
push
mov
sbb
pop
out
outs
push
mul
pusha
arpl
aas
dec
test
into
aaa
add
stos
test
pop
mov
add
fist
adc
pop
movs
(bad)
cmpps
in
push
test
sbb
mov
mov
enter
gs
(bad)
cmp
xor
adc
add
loop
icebp
sahf
lods
mov
adc
(bad)
scas
add
dec
jb
push
addr16
repnz
test
cmp
ror
adc
xor
xchg
out
outs
(bad)
xchg
adc
push
cmp
and
(bad)
cmp
sbb
mov
cld
mov
and
nop
cmp
jns
cld
mov
xor
in
sbb
sbb
retf
jb
or
adc
push
mov
mov
rcr
or
jno
mov
jns
cld
xor
(bad)
aas
mov
loope
dec
(bad)
out
cld
loopne
pusha
mov
jmp
dec
mov
vmwrite
inc
xchg
inc
into
ficomp
mov
xor
movs
gs
and
out
and
out
mov
dec
xchg
das
push
icebp
mov
mov
push
xchg
outs
mov
xor
out
repz
mov
jo
leave
repz
(bad)
arpl
adc
aas
int
aam
(bad)
fnstcw
aaa
popf
lods
inc
and
test
loop
imul
jg
push
in
daa
pop
out
dec
jmp
add
or
pop
repz
mov
or
cmp
gs
xchg
add
mov
mov
cdq
ja
jg
shr
jne
jae
push
and
loope
daa
lods
push
lods
enter
lods
out
rol
es
sbb
ss
pop
fild
sar
sbb
test
lds
imul
sub
dec
mov
nop
js
stos
out
and
and
push
rol
movs
popf
jge
jg
mov
sub
cs
(bad)
lahf
add
arpl
and
rcl
pop
inc
mov
movs
sar
xchg
cmps
xchg
dec
cmp
dec
sbb
fwait
out
ins
dec
js
add
jb
test
neg
pop
repnz
lods
push
int
adc
scas
and
stos
push
adc
(bad)
rol
push
jle
mov
sub
pop
data16
enter
std
aas
mov
dec
xchg
call
sub
and
mov
ss
movs
frstor
or
in
out
cmp
rol
popa
cmp
add
hlt
mul
jb
cdq
mov
pusha
aad
pop
mov
xchg
mov
and
fiadd
mov
inc
ss
imul
out
(bad)
(bad)
jno
mov
xchg
adc
sub
jmp
cmp
int
mov
pop
mov
cmp
xchg
in
mov
ffreep
push
xor
shl
add
fldcw
daa
sub
cmp
jno
cdq
push
les
outs
pop
jmp
in
jbe
sbb
(bad)
dec
add
xor
xor
retf
fistp
inc
add
lea
pop
inc
mov
inc
cmp
jae
repnz
rcr
mov
into
push
mov
sbb
jns
jp
mov
add
jo
mov
(bad)
push
shr
jo
pop
jl
xchg
jge
push
xor
xchg
jge
jno
in
sbb
(bad)
addr16
sub
jl
pop
cmp
ds
xchg
rcr
loope
sbb
neg
arpl
div
sub
jbe
mov
stc
pop
sub
jo
ss
ins
adc
cmps
daa
fisub
pop
shr
(bad)
popa
iret
push
fisttp
(bad)
adc
lahf
push
pop
aam
add
sti
ins
(bad)
xor
loope
cmp
sbb
xchg
lods
scas
call
pop
mov
popf
mov
pop
xor
cmc
adc
and
aam
sbb
hlt
and
push
sub
fisttp
fwait
inc
lea
mov
pop
rol
pop
invd
fidivr
mov
fiadd
pop
adc
dec
es
daa
lods
push
cmp
movs
cmp
inc
dec
mov
leave
repz
dec
outs
sub
fcom
loope
and
outs
push
push
out
push
sbb
push
and
stos
lds
jmp
mov
lods
push
mov
mov
and
nop
push
xchg
xlat
or
pop
pushf
xchg
mov
xchg
loop
mov
adc
pop
jb
add
or
mov
cmc
or
mov
cmp
xchg
adc
push
inc
xchg
lea
fst
dec
jo
clc
imul
pop
hlt
add
loop
mul
rcr
pop
inc
lock
outs
sub
mov
popa
fwait
lods
xchg
test
clc
inc
pushf
(bad)
nop
and
mov
ret
(bad)
push
mov
jo
lsl
movs
cmp
xchg
sbb
int3
and
sub
(bad)
call
test
in
(bad)
iret
pop
xor
(bad)
dec
(bad)
stos
push
data16
push
mov
push
fcompp
in
loope
cmp
in
sub
aad
loope
stc
ja
(bad)
(bad)
jmp
or
scas
and
dec
mov
vmread
inc
push
adc
pushf
popf
or
adc
mov
inc
mov
sub
enter
push
cmp
mov
jb
cmps
lds
or
out
mov
cdq
push
or
data16
stc
xor
stos
xor
fcmovne
gs
or
clc
scas
pop
or
or
stc
sbb
mov
push
fstp
mov
sbb
(bad)
in
aas
xchg
fimul
cdq
hlt
test
mov
inc
jecxz
mov
jae
repnz
mov
push
les
sub
cmp
jl
jmp
mov
jbe
cmp
lahf
jns
dec
ins
(bad)
push
out
dec
mov
out
les
adc
xor
jno
jecxz
inc
sbb
adc
cmps
call
sbb
enter
push
inc
movs
xchg
cmp
js
dec
and
(bad)
daa
lds
xchg
rol
xchg
xchg
jo
pushf
movs
mov
jno
mov
jnp
mov
xchg
test
ds
shr
mov
jne
(bad)
jae
movs
test
stos
lahf
sbb
ins
mov
popa
stc
call
push
sbb
or
gs
jmp
or
jmp
jp
out
sbb
int
movs
or
out
pop
stos
int
and
xchg
outs
adc
into
xlat
add
xlat
je
addr16
mov
jae
mov
mov
test
out
lea
popf
call
cld
leave
xchg
dec
and
ja
dec
outs
scas
xchg
(bad)
mov
mov
mov
add
sbb
push
mov
fwait
mov
daa
icebp
lahf
jne
pop
xchg
ret
jnp
shr
lods
sbb
jecxz
inc
mov
xchg
push
imul
mov
mov
jne
rcl
icebp
xlat
xchg
mov
or
pop
xor
loope
xchg
aam
mov
test
call
jns
push
push
scas
and
add
jle
(bad)
jmp
and
js
and
in
and
test
repz
sub
leave
xchg
xor
cli
push
push
pop
inc
adc
xchg
adc
mov
mov
(bad)
icebp
sub
or
dec
pushf
movs
idiv
shl
fs
sbb
sahf
jecxz
sbb
push
jae
cmp
mov
jg
mov
ror
fnsave
cmp
cmp
lods
out
add
movd
fsubr
inc
push
or
xor
stos
jns
(bad)
lea
mov
in
jo
mov
xchg
lahf
test
and
or
mov
xor
pop
cmps
xor
xlat
push
(bad)
cdq
sbb
retf
mov
mov
push
dec
or
fstp
mov
ja
mov
mov
sbb
xor
cmp
pop
scas
add
adc
fincstp
jmp
pop
dec
cdq
inc
lds
sar
movs
xor
push
mov
sbb
lahf
sar
and
adc
fiadd
mov
out
ja
rol
ffree
mov
cmc
inc
sub
mov
fst
pop
rol
(bad)
aaa
dec
mov
adc
pop
add
iret
outs
or
jns
add
(bad)
sti
leave
mov
adc
and
inc
cmp
adc
mov
pop
sub
add
and
cmp
push
mov
adc
mov
cld
adc
bound
push
inc
inc
pushf
cmp
adc
mov
mov
mov
fstp
sbb
in
shl
mov
loopne
and
pop
jg
inc
push
jmp
pop
mov
mov
push
cli
adc
loop
dec
xor
inc
dec
fs
sub
xchg
adc
(bad)
out
add
fnsave
pop
jle
pushf
jl
fisttp
loop
push
daa
popf
xchg
mov
sti
aas
xchg
mov
call
pop
sub
pop
mov
mov
push
jbe
bound
out
sub
inc
dec
jecxz
pop
and
dec
test
push
in
pop
iret
inc
stc
or
ds
(bad)
jns
popf
popa
stc
mov
das
ja
(bad)
stos
idiv
jecxz
in
xor
sub
push
mov
arpl
xchg
or
mov
and
push
lods
and
jae
push
sbb
scas
mov
int3
popa
pushf
mov
int3
lds
rcr
arpl
xor
jno
loopne
mov
jae
pop
(bad)
cld
cs
cmp
dec
xchg
xor
sub
xchg
sbb
out
pop
xchg
loopne
pop
retf
pop
in
dec
loope
in
stc
dec
and
mov
mov
fidivr
mov
outs
pushf
adc
ins
dec
(bad)
imul
pop
fiadd
push
(bad)
aad
mov
or
pop
imul
xor
fwait
and
inc
cs
fidivr
mov
adc
std
ins
mov
sti
jmp
sar
pushf
mov
clc
mov
es
jmp
dec
fnstcw
sub
sbb
mov
sbb
es
stos
pop
dec
sbb
push
push
and
pop
push
not
sbb
mov
dec
fldcw
mov
jno
retf
mov
sbb
out
xor
mov
or
std
stos
loopne
and
mov
in
enter
jne
call
and
inc
xor
aas
es
mov
push
sub
jbe
pop
leave
xchg
cmp
(bad)
into
ret
cli
addr16
aas
loopne
jbe
add
mov
mov
imul
jnp
inc
or
nop
fnstenv
pop
mov
dec
dec
addr16
enter
sbb
js
jbe
sbb
ret
sahf
pusha
and
fisubr
add
cmp
sub
ds
lds
push
aad
xor
retf
scas
and
jg
sub
xor
and
add
sbb
test
adc
or
fld
test
lahf
jbe
adc
xchg
xor
cmp
mov
xor
jl
pop
mov
xor
or
push
pushf
iret
cmp
inc
mov
sub
push
hlt
cli
fcomip
retf
sub
push
pop
es
movs
push
jp
inc
je
jmp
cdq
(bad)
sbb
and
hlt
stc
push
out
jle
sar
lock
loop
cwde
pop
xchg
das
out
and
mov
push
movs
test
test
inc
sbb
test
mov
sub
xchg
jmp
xor
mov
clc
jne
(bad)
ffree
out
cmps
jge
pusha
inc
imul
cmp
xor
jl
xchg
test
xchg
xchg
in
pop
xor
inc
pop
fidiv
and
xor
sbb
ins
sbb
xchg
cwde
bnd
jle
shl
xor
push
rol
test
stos
out
sti
xlat
aaa
lods
dec
dec
in
push
iret
adc
stc
add
aas
daa
daa
adc
out
jbe
(bad)
aam
rcr
dec
cmp
(bad)
sbb
ins
mov
mov
jmp
fimul
dec
clc
inc
add
popf
adc
fsub
arpl
xchg
movs
iret
xor
pop
push
fsub
mov
ins
sub
adc
in
mov
cmp
xchg
cli
ret
dec
and
retf
xor
jecxz
push
add
pop
icebp
test
int3
push
mov
push
shr
ficomp
and
mov
adc
xor
out
icebp
or
mov
fsubr
push
mov
cld
sbb
cld
lds
in
jecxz
mov
bound
movs
push
mov
push
addr16
nop
lock
dec
daa
stos
push
stc
pop
pushf
pop
fwait
nop
(bad)
fild
mov
or
push
loopne
push
shl
shl
(bad)
xor
mov
fild
xchg
mov
addr16
add
pop
dec
daa
clc
sbb
test
std
ret
movs
adc
bound
or
mov
hlt
inc
xlat
jle
into
test
adc
push
retf
std
call
(bad)
mov
popa
xor
mov
xor
(bad)
popf
add
test
pop
xchg
int
or
call
fidiv
mov
sbb
(bad)
test
stc
sbb
in
neg
or
popf
cld
(bad)
aas
jnp
and
xor
jmp
out
xor
jle
in
xor
sub
mov
jns
test
cmp
sar
ins
or
dec
in
sbb
pusha
cmps
int
retf
fnstcw
dec
ret
xchg
pop
mov
xchg
adc
bound
mov
xchg
outs
(bad)
movs
xor
add
or
clc
ret
jg
test
sub
or
jno
cld
pop
cmps
jp
lock
sbb
stc
cdq
mul
and
inc
mov
inc
int3
fmulp
push
fisubr
and
mov
cmp
ret
add
sar
jne
shl
rol
jmp
aas
sbb
out
bound
push
bound
mov
aam
hlt
outs
or
jne
pop
mov
xlat
xchg
int3
sub
xchg
mov
jo
in
test
dec
out
cmp
mov
mov
mov
jmp
scas
push
call
inc
pop
lea
adc
jno
xchg
scas
es
pop
int3
and
(bad)
(bad)
adc
dec
jle
imul
sub
fldenv
shl
in
push
push
cmps
loop
ds
mov
jecxz
ds
(bad)
stc
mov
bound
mov
stos
push
xor
jo
or
imul
frstor
nop
dec
mov
outs
dec
sbb
retf
jmp
pop
push
in
idiv
inc
int
leave
or
mov
test
popf
pop
(bad)
mov
push
mov
sbb
cmp
mov
loope
xchg
dec
add
mov
push
xchg
test
sbb
push
inc
push
jno
fs
std
and
loop
sub
cwde
jns
push
test
jle
sbb
repz
dec
ja
sub
mov
in
jo
ins
mov
jo
out
mov
sbb
sbb
jmp
out
ss
iret
or
add
fadd
scas
inc
lgs
fadd
in
ins
mov
lods
xor
mov
and
xor
ss
ud1
jle
(bad)
jmp
cmp
mov
icebp
data16
shr
xor
sub
test
xchg
jg
pop
cwde
add
xor
add
pop
jno
mov
mov
mov
push
ror
push
and
pop
jno
call
or
fst
cmp
(bad)
mov
sub
jns
bound
dec
lock
jno
xchg
xor
sbb
push
cli
dec
loopne
or
xchg
or
xor
es
xor
cdq
mov
sub
and
sub
dec
ja
add
push
xor
adc
(bad)
pusha
repz
mov
xchg
clc
jo
xchg
and
xchg
xor
fidiv
jns
add
mov
pop
fcomp
loop
adc
data16
pop
jg
sti
fucomip
sbb
test
xchg
je
gs
xchg
dec
pop
sub
iret
pop
sub
in
out
cld
jge
int3
popf
sbb
push
out
je
jns
call
inc
(bad)
mul
scas
outs
out
inc
fsub
sub
sub
fcmovnu
cmc
mov
pop
out
xlat
es
retf
cmp
adc
mov
and
inc
mov
test
outs
xor
into
cmp
push
xchg
mov
imul
lock
sbb
test
addr16
xchg
push
jmp
or
mov
test
pop
shl
ins
pop
outs
pop
pop
sar
in
mov
or
jmp
add
and
icebp
add
shl
xchg
iret
movs
dec
jmp
shl
cld
adc
loop
jmp
mov
stc
les
or
jmp
shl
push
ds
mov
(bad)
in
mov
adc
add
shr
pop
sub
dec
mov
shr
xchg
arpl
sub
dec
and
bound
mov
jl
add
packssdw
sbb
(bad)
stc
stos
aas
or
fisttp
and
sahf
test
test
dec
arpl
inc
lods
movs
or
jmp
mov
in
pop
aaa
ds
mov
jns
mov
jl
outs
jne
lods
fisttp
push
das
call
xchg
add
xor
dec
adc
add
mov
and
iret
in
adc
sbb
imul
adc
jae
loopne
in
arpl
sub
dec
idiv
pop
cdq
call
out
fld
test
adc
dec
or
rcr
pop
xor
addr16
sbb
xchg
pop
lods
inc
sbb
pushf
mov
lea
cs
mov
in
mov
inc
loopne
xor
std
loopne
imul
jno
ins
cmps
push
pop
adc
jp
push
xchg
sbb
push
mov
cmp
arpl
jnp
hlt
sbb
sbb
shr
cmovs
imul
push
sub
and
out
in
adc
stc
add
ds
mov
pushf
(bad)
cdq
inc
and
into
mov
xor
sub
cwde
inc
xor
jl
hlt
sub
sub
rol
test
lahf
sub
aas
jns
mov
mov
clc
mov
mov
daa
loope
jl
bound
cmps
shr
stos
push
mov
fadd
cmp
shl
popa
push
or
cmp
mov
or
push
test
jle
inc
test
sub
nop
xchg
cmc
push
test
xchg
mov
pushf
fwait
cmp
ins
gs
inc
dec
stos
popf
mov
stos
scas
or
out
out
js
lea
retf
cmp
cs
scas
push
fsub
call
sbb
mov
imul
aad
xor
out
in
xchg
retf
retf
aam
shl
mov
aad
inc
mov
test
or
mov
stos
mov
jecxz
int3
adc
sub
mov
pop
pop
cli
shl
div
mov
add
(bad)
out
es
adc
push
fmul
psraw
mov
xor
lea
lea
mov
jbe
adc
(bad)
jb
lods
(bad)
loopne
inc
stos
pop
or
xor
movs
loop
dec
sub
out
loop
xchg
int
adc
outs
or
mov
mov
jmp
rcr
out
inc
push
xchg
mov
rcl
int
mov
push
in
dec
jb
push
(bad)
movs
mov
dec
imul
popf
xor
cwde
xchg
jl
cdq
sar
jl
std
mov
not
mov
cmp
clc
mov
fs
xchg
jecxz
pop
in
cmp
movs
dec
lea
imul
arpl
(bad)
jo
es
mov
mov
mov
call
push
stos
rol
scas
into
ss
les
mov
shr
add
test
adc
cmp
psraw
jb
int
dec
outs
icebp
sub
and
mov
into
fnstenv
ret
sbb
in
push
mov
sar
ret
(bad)
sub
mov
inc
adc
xchg
loopne
out
pop
loope
mov
adc
retf
mov
fst
jae
pop
sub
push
in
(bad)
mov
sbb
jae
jnp
xor
movs
rcl
dec
fcmovnu
pop
mov
mov
fadd
pop
inc
jnp
xchg
(bad)
dec
(bad)
int3
jecxz
bswap
push
jo
xor
fist
fild
fdiv
cmp
mov
jno
xchg
lahf
shl
in
add
call
loope
sbb
inc
mov
adc
cdq
xor
push
mov
xor
mov
pushf
push
aas
cmp
inc
ds
in
js
iret
jmp
test
nop
in
movs
jge
push
js
xchg
inc
repnz
add
jae
lahf
push
push
sbb
xchg
mov
or
push
jmp
push
ror
imul
lods
mov
dec
addr16
das
or
lahf
popf
out
jmp
jg
pop
mov
pushf
xchg
retf
mov
imul
je
or
xchg
(bad)
mov
stos
push
shl
mov
cmp
fwait
mov
inc
and
pushf
add
adc
or
pop
jns
loopne
inc
mov
inc
nop
test
aad
scas
ja
cli
leave
adc
daa
jnp
mov
sub
enter
mov
arpl
enter
fistp
lods
out
xor
lods
pusha
xchg
fiadd
out
adc
mov
mov
mov
dec
dec
add
in
imul
cmps
mov
stos
ins
call
push
push
sub
inc
test
lds
push
mov
int
scas
stc
mov
inc
mov
or
jne
xchg
in
add
test
lea
inc
repz
test
aam
shl
test
repnz
pop
fsubr
sar
out
push
xchg
lods
dec
int
std
adc
adc
aam
push
ja
inc
jge
lahf
jno
add
dec
sar
sbb
fwait
lods
rcr
inc
mov
mov
and
in
jb
xchg
scas
(bad)
retf
xchg
sahf
sub
lds
fdiv
mov
push
sti
jae
mov
jecxz
inc
idiv
loopne
mov
(bad)
jmp
jecxz
dec
cli
xchg
stos
divps
js
rcr
mov
sbb
push
or
arpl
int
ja
cmp
repnz
mov
sbb
(bad)
xchg
out
jg
loope
loope
mov
enter
mov
popa
dec
xor
paddb
sbb
ror
std
adc
loopne
ins
fwait
sbb
inc
mov
xchg
leave
fild
inc
ror
mov
mov
or
fsub
fucom
or
aam
sti
rcr
xchg
xchg
mov
mov
mov
add
push
push
daa
pop
aas
sbb
ds
add
xchg
dec
adc
pop
inc
popf
ret
addr16
pop
mov
inc
pop
fs
aam
popa
jg
stc
dec
sbb
sbb
out
xor
mov
mov
sar
mov
test
into
sbb
add
(bad)
pop
push
sbb
dec
dec
push
inc
test
and
gs
jb
mov
push
push
in
rol
xor
in
mov
sbb
daa
mov
call
and
mov
(bad)
leave
aaa
jns
fld
pop
inc
aam
push
retf
into
out
aaa
es
in
or
movs
fsubr
xchg
aas
mov
push
inc
mov
pop
stos
push
mov
dec
pop
stc
pop
inc
mov
inc
ror
shl
in
xchg
mov
jo
jne
sbb
addr16
lahf
xor
sub
sahf
dec
pcmpgtw
cmp
repnz
jmp
shr
xor
mov
imul
icebp
les
gs
cwde
sub
or
push
faddp
jmp
idiv
pop
fst
je
dec
sub
(bad)
into
shr
mov
or
xor
mov
ss
pop
jmp
call
dec
repz
fimul
push
mov
iret
cmc
dec
sti
in
and
pop
jbe
pop
xchg
mov
sub
jnp
and
ins
bound
pop
adc
or
add
jns
int3
cmps
or
push
ja
jae
push
inc
or
sbb
mov
jno
pop
xor
mov
iret
in
js
sub
hlt
add
fild
leave
xor
pusha
imul
xor
or
pop
lahf
ja
add
mov
mov
jecxz
bound
inc
(bad)
sar
ja
loop
fwait
in
repnz
push
add
loope
fiadd
pop
pop
sbb
ss
add
cmp
sahf
popa
in
cmp
rcl
and
iret
sub
aad
or
xchg
add
cmc
(bad)
cmps
add
xor
push
jno
xchg
rcl
es
and
add
mov
jns
retf
xchg
imul
or
cmp
xor
lods
retf
hlt
xchg
mov
rol
pop
mov
push
test
fadd
and
icebp
sahf
xchg
mov
movs
or
and
in
adc
lods
gs
test
daa
add
pop
pusha
aaa
xor
inc
dec
mov
stos
and
cmp
xchg
xchg
into
shl
mov
aad
adc
loope
mov
mov
mov
mov
adc
mov
add
xchg
jnp
call
dec
loop
call
aam
arpl
sub
retf
ins
test
not
mov
xchg
cmp
dec
cli
fnsave
xchg
push
fnstenv
jo
sub
xchg
scas
das
popa
loope
daa
inc
out
inc
add
scas
jl
dec
into
push
or
daa
pop
xchg
jecxz
lods
inc
push
outs
pop
jg
loop
mov
int
push
adc
sar
jae
int
movs
fnstsw
(bad)
sti
lods
fcomp
fadd
add
pavgb
xchg
std
ror
outs
or
les
aam
and
lahf
mov
fs
popf
push
xor
push
mov
jge
fsubr
loopne
jg
and
call
push
aas
clc
xchg
mov
or
adc
xchg
sbb
fadd
xor
add
js
fwait
mov
lods
fisubr
sub
retf
sbb
jle
inc
(bad)
jnp
jno
add
daa
int3
call
adc
shl
inc
inc
or
in
cmp
mov
je
or
test
mov
adc
retf
xor
retf
push
loop
jns
mov
pop
cwde
test
pop
sbb
outs
dec
cmp
test
sub
dec
jle
pop
sbb
xchg
add
jnp
jmp
jmp
jecxz
add
popa
in
mov
imul
jle
out
jae
sub
or
sub
lock
and
mov
lods
call
in
jmp
retf
enter
shl
push
push
add
imul
outs
pop
fcomp
cmp
push
lahf
mov
adc
aad
movsx
shr
jp
int
int3
dec
cdq
imul
inc
mov
sbb
and
(bad)
mov
adc
(bad)
loopne
mov
sbb
mov
shl
inc
pop
scas
imul
cmp
sar
push
sbb
out
jnp
pop
mov
mov
inc
fisubr
push
in
jne
sub
das
inc
inc
(bad)
movs
mov
data16
jno
xor
(bad)
pushf
dec
mov
push
retf
mov
pop
jne
fild
cmp
in
loop
pusha
ins
imul
fdivr
stc
int3
cmp
pop
hlt
adc
jo
in
jg
stos
pop
cmps
hlt
ins
xchg
in
cmps
sbb
gs
mov
ror
stos
sub
xchg
dec
cld
and
sub
sahf
push
mov
adc
ficomp
fisub
dec
xlat
leave
push
jg
mov
or
push
cmp
mov
jbe
ret
in
test
xor
add
cld
in
xlat
sub
retf
xor
int
pop
mov
inc
pop
push
dec
test
mov
shl
dec
mov
push
jnp
ss
call
cmps
pop
hlt
mov
push
int
loope
in
jp
lods
mov
(bad)
bound
into
leave
and
icebp
test
add
lea
inc
and
stos
jb
jns
(bad)
cmp
and
aam
add
lahf
sub
jmp
hlt
jp
shr
pushf
or
push
mov
and
repnz
out
scas
rcl
out
(bad)
mov
daa
jge
adc
inc
daa
ins
cmp
fisub
sub
adc
test
dec
in
sbb
sbb
dec
sbb
into
cmps
das
into
packuswb
pushf
ret
cmp
mov
(bad)
(bad)
out
test
icebp
addr16
mov
and
in
aaa
aad
(bad)
popf
fadd
jecxz
inc
call
push
sub
cmp
add
mov
push
cmp
fimul
in
pop
add
mov
in
push
adc
mov
cmc
mov
out
out
in
push
push
mov
mov
sti
cli
jns
outs
and
inc
mov
clc
xor
std
xor
mov
mov
js
xor
jns
mov
ret
(bad)
cmp
nop
jae
sti
popa
jmp
push
add
cmp
lds
push
sub
add
xor
push
popf
dec
loope
lahf
xchg
jnp
mov
outs
std
dec
shr
sub
das
hlt
mov
cmc
mov
inc
add
push
out
lods
xchg
addr16
mov
or
inc
imul
xchg
dec
adc
cmp
ins
jg
xchg
jg
mov
in
repz
imul
and
fsub
test
pop
mov
dec
shl
pop
jnp
inc
ret
dec
dec
or
icebp
shl
aas
mov
outs
sbb
aas
fcom
cld
adc
rol
mov
xchg
xor
in
shl
loope
test
jno
sub
push
jno
cld
mov
sub
push
xchg
ds
jp
sti
rcr
out
ror
dec
pop
xchg
jns
push
into
fcomip
mov
into
stos
test
mov
xchg
pop
sub
in
pop
and
mov
xor
out
test
cs
loope
jnp
sub
xchg
outs
daa
into
movs
enter
fs
ror
or
xor
fnstsw
call
and
mov
add
inc
sbb
pop
inc
aam
sbb
cmp
inc
sbb
pop
loope
in
push
add
push
dec
dec
jp
cli
and
mov
jl
mov
sbb
addr16
jecxz
test
clc
clc
hlt
lods
mov
sub
hlt
mov
push
xchg
mov
push
mov
js
push
cmp
cdq
(bad)
out
adc
sbb
ret
pop
sbb
into
not
les
les
pop
ror
int
xor
xchg
sub
call
cdq
jb
jnp
push
sub
add
sbb
outs
mov
dec
and
jno
sub
sahf
out
fisubr
add
(bad)
lds
lods
int
xchg
xchg
ss
aaa
and
sbb
das
pushf
or
mov
jecxz
imul
sub
iret
iret
ror
popa
xor
jo
sbb
sti
into
jle
sub
jmp
call
out
adc
push
add
add
cmps
jmp
mov
adc
shl
jno
pop
mov
adc
inc
mov
and
enter
sti
jecxz
retf
push
test
dec
hlt
dec
scas
jnp
add
cmp
repz
push
jmp
mov
sbb
xor
dec
mov
xchg
int3
out
mov
xor
dec
push
idiv
mov
and
add
call
mov
movs
pop
frstpm(287
sbb
stos
idiv
push
mov
mov
mov
out
xchg
pop
inc
gs
push
dec
or
lock
fimul
push
(bad)
cmp
retf
stos
xor
sar
mov
hlt
add
les
inc
mov
scas
aas
jp
cmps
je
test
and
or
and
ss
dec
cmp
cmps
jp
cmps
ret
mov
ror
dec
shl
add
test
sbb
and
sbb
sti
vmulps
mov
dec
cmp
cmp
addr16
nop
mov
jno
movs
lods
mov
repnz
retf
sbb
pop
cmc
jp
pop
(bad)
sbb
and
jl
cmc
int3
repz
aad
rcl
mov
and
pop
adc
mov
xor
ins
stc
or
cmp
sub
xchg
popf
mov
inc
movs
dec
lahf
adc
outs
cmp
shr
mov
cmp
imul
mov
or
jns
hlt
cs
out
and
loope
lock
(bad)
ficom
test
jns
inc
pop
inc
sbb
sbb
jp
es
lods
lahf
fs
icebp
jb
jne
jmp
add
inc
mov
cmc
aad
cmp
idiv
mov
and
jo
mov
repnz
dec
dec
or
call
push
adc
jmp
sbb
pop
jo
cmp
fisub
sbb
outs
es
pop
sub
and
mov
ja
pop
mov
jmp
jp
mov
xchg
in
cli
out
inc
aaa
cli
mov
mov
sbb
fdivr
or
and
scas
dec
push
addr16
xchg
es
mov
ret
adc
mov
add
jmp
in
mov
pop
test
gs
nop
jmp
or
mov
addr16
shl
fsubr
stos
xor
xchg
jnp
out
push
xlat
push
mov
xchg
loopne
arpl
rep
xchg
stc
shl
mov
xor
mov
out
push
pushf
ja
xchg
into
fst
outs
(bad)
movs
mov
push
aam
pop
cmp
out
xchg
fisttp
mov
push
test
push
mov
ret
push
(bad)
mov
in
sub
outs
aam
sub
adc
movs
lea
pop
sbb
sub
mov
imul
in
xchg
int3
scas
outs
fisub
add
and
jns
inc
cwde
in
ret
xor
outs
shl
iret
repz
sub
fwait
push
dec
cmp
adc
xchg
xchg
ss
sbb
push
test
push
lds
add
cmps
sub
mov
or
cmp
mov
mov
mov
in
sub
addr16
mov
std
cld
dec
(bad)
fmulp
data16
fucomp
leave
popw
cmp
cli
dec
dec
call
mov
jmp
or
xchg
pop
mov
sbb
rol
dec
ins
pop
xchg
fmul
mov
pusha
adc
inc
out
inc
fmul
out
and
adc
adc
lods
fld
xchg
repnz
shr
cmp
pop
sahf
test
shl
mov
or
xor
jo
sub
and
adc
sar
pop
mov
(bad)
popf
lock
std
test
mov
daa
adc
daa
xchg
rcr
ins
cld
lea
pop
stos
jle
xor
lea
aas
sub
lods
js
mov
rcl
loope
fild
shl
in
sub
xchg
sahf
leave
pop
(bad)
jle
xor
jo
in
dec
out
xchg
push
cmp
jae
pop
les
add
mov
mov
iret
mov
pop
jmp
out
mov
mov
mov
imul
loope
xchg
jnp
inc
mov
aam
pop
xchg
push
pop
xchg
sbb
dec
jmp
cmc
inc
cmp
loope
mov
sbb
mov
mov
mov
or
call
out
data16
shr
mov
or
inc
dec
mov
mov
call
inc
test
sti
sbb
mov
xor
jb
jnp
test
mov
lahf
stc
push
jmp
into
adc
and
call
mov
retf
mov
test
add
push
mov
mov
pop
cmp
pop
dec
fcomi
mov
pop
inc
adc
xchg
and
ret
out
xor
mov
pop
push
push
and
mov
call
in
dec
fcomp
call
loop
lods
mov
idiv
mov
aas
adc
ja
mov
sbb
out
add
dec
popf
aas
pop
test
jno
cdq
push
xor
sub
dec
pop
dec
inc
loopne
xchg
leave
jae
(bad)
dec
push
lea
xchg
jmp
cmp
xchg
out
fwait
test
loope
xchg
repnz
sbb
push
in
cmp
gs
sub
xchg
rcl
pop
call
neg
pop
dec
popf
mov
pop
mov
sbb
pusha
fnstcw
add
inc
movs
pushf
jecxz
stc
push
cmp
aam
jns
scas
push
sub
push
gs
jae
test
retf
sbb
add
lds
jmp
imul
sahf
mov
push
shr
icebp
out
ret
dec
mov
add
push
inc
ins
div
lock
cwde
mov
and
in
xchg
jp
sti
loop
aam
ret
in
ss
out
call
cmp
rcr
inc
mov
loopne
sbb
pop
sbb
dec
sub
je
lahf
sub
xchg
cmp
push
jge
out
popa
cdq
sbb
call
mov
pop
push
outs
mov
ja
xor
stc
jns
pop
loopne
jae
add
cwde
push
in
add
or
jmp
ror
mov
mov
sub
sbb
(bad)
fmul
movs
(bad)
xor
mov
mov
inc
ja
pop
mov
cld
mov
nop
adc
fnstsw
xchg
mov
test
mov
test
iret
push
push
mov
shl
movs
jae
daa
mov
xor
or
in
and
dec
inc
xchg
xchg
cmp
mov
retf
jno
adc
adc
jae
push
jecxz
ins
push
sub
jecxz
inc
aam
jp
cmps
in
push
and
jge
add
aaa
mov
jg
inc
mov
shr
jl
mov
mov
fistp
out
push
dec
push
addr16
cmp
lods
jne
pop
in
outs
ins
cmc
mov
arpl
out
(bad)
fisttp
outs
in
retf
jmp
fimul
test
pop
inc
dec
sbb
jmp
js
push
add
mov
in
mov
push
lock
mov
out
add
dec
pop
adc
push
dec
pop
int3
imul
xchg
test
sahf
jge
nop
push
sbb
in
push
loope
popf
pop
outs
inc
shl
clc
mov
nop
pop
fcomp
push
and
dec
cwde
xor
sub
xchg
sahf
ror
push
sti
inc
test
stos
xchg
pop
je
cwde
mov
imul
ja
iret
and
sbb
aam
neg
jo
into
icebp
lods
push
mov
sbb
imul
into
and
data16
mul
cmp
clc
fcomp
inc
jmp
mov
pop
push
aas
jl
dec
or
aaa
outs
push
nop
pop
mov
(bad)
push
icebp
mov
cmp
imul
outs
push
imul
pop
outs
pop
scas
int
ins
jbe
retf
jp
dec
push
add
jge
xor
or
pushf
(bad)
xor
mov
push
jge
add
movs
outs
xlat
ja
out
out
test
test
push
(bad)
and
xchg
pop
or
and
mov
mov
adc
cmp
pop
leave
push
ret
aaa
push
fmul
xor
fwait
lea
lock
jg
or
lea
repnz
add
ins
cmps
ss
and
repz
out
lods
cmp
ret
push
ds
icebp
(bad)
in
addr16
cs
jo
aad
mov
outs
and
xchg
or
mov
icebp
mov
mov
mov
add
mov
mov
clc
(bad)
jmp
ficomp
inc
mov
inc
(bad)
fimul
sahf
and
int3
pop
xor
into
call
dec
cli
inc
dec
jo
pop
mov
retf
sbb
fmul
lock
stc
je
jmp
and
pop
xchg
sbb
cli
in
inc
in
gs
fdivr
cmp
or
fstp
inc
test
push
dec
pop
adc
sub
fnstsw
sub
lods
neg
mov
in
pop
xchg
rol
fcom
pop
push
stc
stos
ret
cmps
in
push
(bad)
sub
pop
mov
mov
push
fs
ins
xchg
push
dec
jno
jbe
lea
xchg
mov
loop
bound
cdq
add
mov
xchg
mov
out
jnp
scas
test
jp
test
push
mov
cli
ret
dec
adc
mov
fldenv
ss
dec
dec
inc
inc
lods
aam
sahf
fcomp
jle
daa
das
jp
mov
int
stc
sbb
imul
out
mov
daa
mov
jp
xchg
xchg
jmp
lea
rcl
xor
cmp
out
xor
fidivr
and
mov
lea
inc
ins
mov
or
xor
call
pop
inc
test
sbb
mov
inc
xchg
dec
xor
mov
xchg
pop
dec
ss
sbb
pushf
or
sub
jp
mov
int3
pcmpeqw
push
jl
mov
icebp
aad
dec
cwde
loop
lea
int3
sbb
sahf
xor
test
and
ret
fiadd
enter
dec
repz
popf
imul
sbb
push
mov
xchg
inc
lahf
jg
jecxz
cli
sahf
or
lds
xor
and
and
out
in
lock
scas
inc
cmp
mov
js
mov
jnp
gs
pop
sub
cmp
cs
popf
(bad)
sbb
sub
cdq
rol
ins
jg
mov
add
outs
dec
idiv
popf
test
int3
das
dec
in
pusha
test
cli
ins
stos
ds
fcom
ret
xor
clc
jb
sub
ret
jae
pop
pop
pop
adc
lock
not
mov
cmp
cli
mov
out
mov
ins
ss
pop
push
push
loopne
xchg
test
pop
mov
pop
sti
out
mov
mov
or
loopne
fs
dec
das
icebp
mov
in
mov
ret
in
xchg
cmp
dec
dec
mov
ins
ins
jmp
les
ins
xchg
mov
outs
jmp
adc
mov
arpl
jmp
popa
test
adc
scas
cmp
pop
xor
fwait
not
mov
stos
jae
data16
fadd
sub
fld
loope
sbb
daa
push
dec
popf
pop
loope
jb
cmp
pop
add
ss
inc
and
cs
push
pusha
repnz
push
xor
je
inc
scas
iret
dec
jnp
pop
mov
mov
test
xchg
sbb
out
mov
add
(bad)
out
loop
sub
xor
movs
enter
push
adc
cdq
jmp
arpl
jne
and
data16
dec
xchg
xchg
out
sub
stos
cmp
sbb
dec
jo
ins
and
mov
sub
sahf
push
push
lahf
imul
into
or
call
cli
pusha
test
pushf
cmc
pop
and
add
mov
sbb
push
fild
jae
in
cmp
ret
aaa
hlt
shl
imul
xbegin
fwait
sbb
and
test
ffreep
mov
sbb
je
sbb
(bad)
cmps
(bad)
sub
fwait
ja
outs
test
mov
mov
and
repnz
pop
mov
nop
mov
mov
pop
inc
sbb
push
inc
(bad)
mov
ds
cmp
outs
xchg
jmp
lds
rcr
cmp
inc
ins
sub
loop
jnp
sbb
cli
or
iret
mov
or
adc
mov
mov
dec
xchg
and
shl
jle
ja
(bad)
mov
add
in
mov
mov
sbb
cwde
test
lock
rol
push
xchg
fs
pop
aad
mov
push
add
fiadd
fstp
popf
int
ins
sti
mov
es
out
rcr
or
pop
cwde
or
push
mov
mov
out
and
(bad)
or
scas
mov
iret
aam
add
push
je
and
es
jmp
movs
inc
pushf
shr
xchg
lea
push
pop
jb
es
dec
mov
pop
into
fistp
add
pusha
xchg
ja
in
sbb
repz
es
cmp
jle
jecxz
lods
lods
(bad)
aad
dec
push
dec
sub
loopne
xchg
je
or
out
cli
dec
and
ss
(bad)
adc
jmp
mov
scas
pusha
add
push
cmp
in
test
inc
lahf
icebp
and
int
jge
repnz
mov
add
mov
rol
sub
(bad)
push
nop
sub
inc
jno
call
test
mov
cmc
dec
icebp
mov
icebp
sub
cwde
sub
add
add
adc
and
mov
add
cmp
(bad)
mov
pop
out
sub
xchg
ins
xor
shl
jmp
mov
push
push
jecxz
dec
mov
std
inc
mov
lds
pushf
into
pop
mov
xchg
adc
nop
jge
gs
adc
pop
nop
or
pop
sub
inc
and
sti
clc
icebp
mov
push
popa
add
cmp
and
xchg
mov
loope
lods
rcr
push
inc
and
sub
push
sbb
stc
ds
sub
push
or
push
push
jle
bound
push
dec
xor
add
cmp
dec
cmp
xchg
mov
js
cmp
test
sub
xor
daa
scas
test
or
jne
daa
push
dec
mov
and
push
arpl
adc
xchg
pusha
mov
push
rol
pop
xor
mov
pop
mov
rcl
push
ror
dec
push
mul
(bad)
xchg
loop
into
out
hlt
pop
shl
mov
mov
ja
cli
shr
or
inc
mov
in
pop
xchg
pushf
xchg
punpckhdq
mov
and
pop
out
pop
call
repnz
pop
pop
adc
mov
or
jp
lahf
sbb
adc
lods
add
data16
mov
rcl
lea
test
sub
fnstsw
cs
push
rcl
aam
dec
data16
mov
pop
into
jne
mov
push
les
adc
mov
(bad)
pop
push
cmp
xchg
xor
mov
jp
sahf
cmc
jnp
movs
adc
gs
sbb
xchg
inc
popa
sti
cmps
jp
sbb
enter
xor
xchg
xchg
pop
mov
imul
mov
mov
imul
push
test
les
sub
ror
int3
pop
mov
fst
mov
jnp
or
(bad)
lods
push
and
pop
je
mov
out
aad
loop
mov
mov
jo
and
call
and
test
cwde
adc
leave
adc
gs
leave
jmp
je
mov
lods
clc
jmp
xchg
lahf
shl
rol
jnp
ja
jo
mov
inc
loope
leave
call
jp
cmp
imul
mov
lock
arpl
add
xor
(bad)
adc
sbb
inc
ret
jg
jg
lds
mov
jg
inc
push
push
and
rol
ret
cmp
sbb
xchg
jl
sbb
inc
mov
sub
xchg
mov
cmp
xor
fmul
ret
xor
mov
mov
cwde
adc
mov
xchg
retf
ret
lahf
inc
outs
jne
loope
sbb
sub
mov
movs
(bad)
cmps
leave
loopne
and
pushf
(bad)
push
cmp
xchg
adc
sub
sti
gs
ret
dec
call
dec
cmp
test
scas
cld
xlat
adc
sbb
fdivr
xchg
(bad)
loopne
fucomip
pop
add
sub
xchg
mov
movs
xor
or
pop
adc
outs
mov
test
mov
add
xchg
fwait
pop
sbb
gs
jmp
jg
nop
fcom
enter
movs
movs
adc
adc
inc
aas
sub
sub
sub
into
dec
sbb
loopne
fist
mov
ret
or
cmp
cdq
loop
push
sub
mov
mov
repnz
pushf
mov
inc
xchg
call
js
stos
fdivr
and
shl
lahf
adc
push
cli
add
xchg
in
or
idiv
addr16
xchg
cmp
or
jnp
sbb
lock
jmp
and
jb
(bad)
pop
pushf
ss
stos
aad
leave
mov
out
mov
fst
mov
push
add
and
dec
sub
enter
and
lahf
mov
mov
shr
lods
or
jb
mov
mov
jo
lahf
jbe
mov
dec
jb
dec
movs
dec
fxch
mov
int3
test
jmp
adc
(bad)
xor
jge
(bad)
movs
movs
pusha
ret
and
add
mov
repnz
rol
and
dec
jmp
jbe
pop
jecxz
(bad)
inc
push
movs
mov
pop
movs
enter
dec
push
cs
fcom
jecxz
arpl
and
sbb
cmp
imul
rcl
or
outs
outs
lods
xchg
inc
ret
imul
xchg
cs
adc
arpl
or
movs
cs
xor
pop
test
loop
push
pop
sbb
leave
lahf
icebp
fdivr
xchg
retf
xor
jb
jne
jo
adc
jnp
std
mov
or
cmp
inc
ja
imul
xlat
outs
cmp
repz
pushf
mov
sub
repz
loop
dec
mov
jmp
div
sti
popf
fadd
cmp
cmp
push
shl
push
ins
pop
mov
scas
mov
dec
loope
xchg
inc
int
xchg
pop
jl
jnp
push
inc
mov
(bad)
mov
mov
sbb
inc
shr
outs
fcom
ja
and
ja
pop
lock
clc
movs
js
pop
pushf
and
hlt
outs
int
icebp
xor
es
scas
test
xor
jmp
push
and
push
test
repnz
mov
xchg
addr16
loope
and
or
ja
jnp
aam
rcl
mov
mov
push
jne
in
mov
push
dec
push
or
inc
push
jmp
xor
fwait
(bad)
(bad)
arpl
stos
sub
retf
mov
and
in
shl
cmp
xor
dec
adc
pop
jl
stc
and
sub
or
cdq
gs
push
push
ins
neg
xor
loopne
and
nop
pusha
(bad)
nop
popa
retf
mov
sti
inc
lods
cmps
push
push
nop
call
push
mov
aaa
mov
lahf
(bad)
jne
inc
xor
lahf
and
in
mov
ror
sbb
mov
jnp
dec
movd
jl
sub
mov
arpl
push
sub
(bad)
mov
mov
arpl
mov
jb
dec
push
push
test
enter
shr
out
mov
mov
pop
pusha
jge
cmp
lahf
gs
cmp
test
clc
movs
imul
inc
jns
sbb
fiadd
stos
push
(bad)
icebp
retf
or
pusha
leave
loopne
sbb
jmp
push
shl
push
(bad)
push
shl
cld
adc
jno
out
jecxz
mov
push
push
fsubr
dec
inc
mov
(bad)
push
ins
or
xchg
movs
cli
cmp
sub
mov
sahf
adc
enter
les
adc
pushf
rcr
pop
cmp
sbb
hlt
(bad)
test
xchg
clc
cdq
into
nop
add
cdq
mul
clc
mov
(bad)
das
movs
add
std
add
xchg
ds
xchg
pusha
leave
cs
in
mov
pop
mov
rcr
fwait
mov
push
adc
(bad)
movs
(bad)
repz
and
(bad)
mov
rol
pop
gs
(bad)
fmul
fbstp
inc
jge
js
xchg
in
repz
sbb
ret
jo
lock
sti
push
mov
mov
push
lahf
enter
movs
mov
push
dec
dec
rcr
pop
mov
push
ins
cmp
ret
pop
retf
clc
jmp
inc
sub
pop
xor
iret
mov
inc
fldenv
or
dec
dec
mov
xchg
(bad)
outs
mov
cmp
ret
cmp
mov
dec
dec
jl
mov
or
xor
test
and
imul
pcmpeqw
sbb
lea
test
stos
(bad)
mov
sbb
or
pop
mov
out
jae
out
out
xchg
ds
imul
fsubr
mov
aas
and
fwait
jb
push
xchg
mov
add
or
xchg
nop
mov
sub
push
or
scas
loopne
stos
scas
cmp
(bad)
nop
inc
adc
ss
ja
sti
mov
push
cmp
inc
mov
xchg
inc
test
call
and
sub
clc
jne
cs
pminub
loopne
xlat
ss
lahf
mov
daa
fs
cdq
and
mov
adc
inc
in
xor
adc
inc
and
push
fimul
pop
nop
sub
mov
and
neg
pop
retf
inc
push
pop
add
mov
les
out
push
push
inc
(bad)
into
or
cmp
loopne
mov
jae
test
inc
jae
xlat
mov
push
sub
adc
pop
pop
stos
out
jns
nop
leave
mov
ja
retf
loopne
dec
mov
dec
stc
sbb
repz
jg
lds
imul
push
pop
imul
stc
ror
fisubr
int3
(bad)
fs
xchg
jge
xor
cli
jno
aas
sbb
dec
adc
adc
xchg
call
cdq
out
push
out
jbe
lds
push
mov
sub
in
mov
ret
fwait
mov
sub
add
out
enter
dec
push
mov
push
sbb
adc
push
movs
cli
dec
jnp
inc
int3
xchg
inc
pushfw
lods
je
pop
fdiv
add
lds
(bad)
leave
arpl
pushf
icebp
xchg
push
mov
loopne
mov
std
div
lods
mov
sbb
movs
jne
sub
imul
sti
movaps
inc
in
or
and
scas
test
loop
retf
cmp
add
mov
pop
retf
ficom
dec
loope
push
inc
and
mov
cmp
rol
test
arpl
dec
clc
lods
jmp
test
and
ror
aas
sub
pop
xor
pop
and
sbb
lods
stos
arpl
or
dec
mov
int3
into
ret
or
pop
jbe
call
ret
mov
push
sub
sub
pop
inc
and
in
rcr
out
int
and
popa
cwde
jns
jae
cdq
out
push
inc
cmp
movs
sub
imul
cli
xchg
test
int
ins
das
in
or
imul
sbb
inc
push
xor
adc
push
mov
adc
or
pop
dec
mov
xor
mov
lods
fwait
je
xor
xor
adc
stc
ins
dec
ret
loopne
xor
sub
sbb
add
pop
ret
sub
xchg
dec
push
cdq
cmc
mov
ss
jg
mov
xlat
std
ret
xor
push
push
cli
daa
mov
ret
or
mov
popf
push
mov
xchg
xor
shr
popa
je
push
loopne
mov
test
mov
jp
dec
inc
sbb
sub
jmp
dec
mov
mov
jns
mov
mov
adc
inc
imul
push
sahf
out
sub
mov
out
scas
loop
pop
mov
clc
xchg
add
dec
stos
je
cmp
sub
adc
je
es
xor
inc
push
scas
cdq
adc
mov
mov
xchg
cmps
sub
scas
jecxz
es
das
add
jp
into
in
cmp
ds
add
int
cli
(bad)
frstor
cmp
addr16
cmp
cmps
outs
iret
fmul
ins
push
scas
mov
xor
and
div
repz
movs
push
push
or
mov
push
xor
imul
sub
repz
popa
inc
sub
mov
and
sub
push
sbb
and
cmp
xchg
add
rol
mov
jg
sub
pop
sub
adc
adc
push
js
sub
push
jecxz
out
and
mov
cmp
fs
out
push
mov
aaa
push
pop
or
pop
leave
adc
add
mov
dec
test
loop
cmp
mov
push
xor
dec
rcl
xor
dec
xor
xchg
test
stos
dec
jnp
push
cdq
(bad)
mov
aaa
push
mov
test
jmp
jb
and
mov
cmp
inc
mov
arpl
rol
in
test
dec
ja
adc
inc
sar
sar
push
test
and
imul
hlt
mov
retf
rol
fwait
jge
sbb
stc
mov
add
jnp
ja
pop
pop
cmps
mov
nop
loopne
enter
stc
pusha
and
dec
xchg
repnz
xor
xchg
or
inc
fisubr
pop
mov
pop
adc
das
jl
test
dec
into
adc
adc
add
pop
pop
pop
sete
ins
push
(bad)
es
xchg
dec
inc
enter
out
pushf
dec
ins
inc
dec
cmps
fmul
dec
je
retf
inc
adc
mov
test
dec
mov
aas
and
sub
and
ins
push
jp
cmp
out
sub
cmp
xor
into
arpl
jbe
adc
sbb
fisubr
(bad)
pop
outs
lock
push
mov
pop
mov
push
ins
or
jmp
call
lock
stc
add
test
ror
pop
mov
cmp
adc
xchg
push
in
inc
sbb
fisub
adc
push
jbe
push
(bad)
into
loopne
mov
inc
hlt
icebp
mov
adc
and
inc
push
sar
jmp
lea
pop
(bad)
call
sbb
mov
adc
in
popf
mov
push
xor
shr
pop
adc
(bad)
cmp
mov
sar
loop
call
idiv
pop
add
imul
pop
stos
mov
shl
shl
pop
clc
mov
fild
cld
jmp
sti
call
nop
push
ss
or
pop
push
mov
stos
cmc
lods
add
xor
sub
lea
(bad)
pop
xor
stos
inc
sti
mov
fs
in
popa
mov
lds
out
jb
or
int3
es
hlt
mov
aas
pop
cmp
dec
cs
cmp
or
adc
aam
stos
mov
sbb
outs
sub
or
fwait
repnz
and
(bad)
mov
jae
add
add
mov
jge
jmp
in
ss
mov
and
jbe
inc
nop
fdiv
add
(bad)
push
xor
dec
lea
std
push
push
inc
jmp
std
add
jnp
popf
int3
pop
retf
cmp
sbb
adc
jae
popf
push
popf
test
cmc
mov
jae
or
inc
jge
mov
pop
sahf
iret
mov
adc
inc
or
dec
js
cs
retf
fsubr
jmp
xor
lea
sahf
add
sbb
les
adc
in
fimul
enter
add
gs
retf
sub
repnz
int
out
out
xchg
int
mov
add
and
mov
jbe
mov
sbb
int
cmc
data16
pusha
hlt
pusha
pop
repnz
sub
retf
movs
es
cld
add
xchg
out
jmp
scas
gs
xor
cwde
fidivr
retf
fcomp
mov
lahf
mov
pop
pop
imul
jl
nop
jb
in
pop
pop
popa
imul
dec
outs
out
neg
call
out
jb
test
out
mov
cmps
fbstp
(bad)
and
add
or
adc
jb
loop
jge
push
sahf
cmps
sub
fnstsw
xchg
mov
adc
ja
xor
sub
addr16
in
fist
cmp
xchg
js
or
inc
pushf
xchg
jne
enter
leave
paddusw
mov
nop
pop
sub
enter
not
cmps
jno
out
pop
add
xor
arpl
popa
xchg
dec
add
lock
pop
pop
or
js
add
sbb
and
jge
add
pusha
retfw
xor
aaa
jmp
pop
pop
dec
or
xor
pop
sbb
lahf
inc
dec
hlt
inc
mov
mov
adc
shl
push
push
inc
push
inc
rcl
mov
cmp
mov
mov
jns
jle
jb
sti
cmps
fmul
push
add
cmp
jno
or
push
out
stos
je
xor
gs
mov
fdiv
das
fisub
imul
rol
imul
pop
inc
pushf
sbb
test
cmp
jno
repnz
aad
je
dec
or
fsubr
pop
inc
mov
int
or
push
outs
xor
jo
mov
retf
scas
or
sub
je
popa
and
dec
into
inc
dec
ficomp
repnz
mov
mov
jg
sub
sub
pop
(bad)
adc
jmp
pop
mov
gs
xor
scas
in
mov
into
pop
adc
test
mov
mov
and
jae
stos
and
and
mov
movs
test
cmps
sti
lods
mov
ins
mov
(bad)
ja
mov
retf
jo
aam
xchg
gs
aaa
mov
add
outs
(bad)
jl
jbe
xor
add
adc
sbb
or
out
dec
add
rcr
mov
xor
add
js
sbb
fidiv
div
pop
ja
mov
addr16
leave
push
pop
cld
out
inc
or
dec
out
mov
xchg
jle
sub
push
and
push
xor
xor
adc
movs
xchg
inc
mov
ret
scas
aad
loopne
jge
call
daa
mov
sahf
sub
sbb
adc
test
lds
pushf
mov
cmp
cdq
mov
pushw
mov
add
(bad)
pop
ret
nop
mov
dec
out
pop
dec
cmp
push
sub
mov
fsub
jnp
nop
adc
subps
xchg
call
xor
adc
cmc
mul
pop
cmps
leave
xor
or
out
gs
mov
cwde
sbb
xor
sub
out
leave
xchg
add
and
add
jno
retf
push
cmp
(bad)
fstp
mov
aaa
push
adc
mov
mov
fisubr
(bad)
sub
in
xchg
int
xor
cmps
scas
es
retf
(bad)
dec
std
(bad)
std
popa
sar
and
nop
sub
adc
sar
fisttp
out
imul
jg
pop
mov
or
jnp
sub
inc
inc
arpl
mov
mov
call
or
mov
sbb
xor
test
xlat
loope
aad
dec
data16
mov
xor
fild
xor
push
mov
dec
stc
pop
in
mov
sub
fwait
cs
dec
cmp
inc
mov
(bad)
jb
mov
cs
xor
test
cwde
test
ja
cli
and
repnz
sbb
repz
inc
cmp
out
lahf
jae
clc
mov
retf
pop
fistp
sbb
sub
dec
pop
aas
scas
fdiv
sub
call
jo
je
scas
call
adc
xchg
dec
jg
mov
out
scas
inc
ds
imul
pop
cwde
lds
xchg
mov
push
adc
sbb
jmp
pop
cmp
mov
mov
cmps
xchg
cmp
loopne
loope
lods
enter
fild
pushf
mov
jmp
sti
lock
out
aaa
ds
test
mov
or
and
out
pop
xor
mov
je
mov
push
xchg
repz
bnd
jge
mov
mov
aam
out
aam
push
pusha
cmp
xor
das
scas
cld
add
push
jmp
dec
aam
aaa
push
push
jle
cmps
into
hlt
fsubrp
mov
in
push
cli
nop
jle
xlat
jno
mov
cld
and
mov
jns
sbb
dec
jae
mov
mov
or
aas
xor
ffreep
dec
inc
mov
jb
out
mov
test
sub
ins
inc
dec
loope
in
jbe
jb
rcl
xor
jle
jge
cwde
aad
ficomp
and
cmp
and
mov
sbb
jmp
add
adc
or
jb
in
push
loope
int
sub
sbb
xor
inc
rol
enter
pop
jbe
mov
adc
push
jnp
mov
lahf
rsm
jg
push
mov
out
push
pop
jle
cmp
dec
push
cld
ins
add
mov
jns
or
clc
ja
jmp
mov
xchg
sub
aad
jg
in
mov
xor
cwde
xchg
xchg
sbb
icebp
fs
push
test
jo
fs
cmps
sbb
xchg
sbb
or
clc
loopne
loope
stos
pop
lock
jl
push
push
out
sub
jmp
pop
pop
jno
sbb
int3
cmp
adc
ss
shl
sbb
dec
add
xchg
out
ins
(bad)
loope
cli
inc
xor
push
mov
dec
mov
jns
es
push
and
clc
cmps
in
cmp
sub
inc
fucomp
sub
xchg
sub
xor
mov
pop
jb
test
mov
jge
mov
pop
sub
push
outs
ja
pusha
mov
stc
jne
leave
or
sub
aam
sbb
pop
sub
adc
cmp
jle
cld
shl
inc
and
jo
int3
mov
sbb
hlt
mov
aas
cmps
outs
(bad)
push
pop
lods
(bad)
fbld
imul
cdq
sar
call
mov
and
neg
data16
push
lahf
jmp
lods
sub
jns
and
inc
add
inc
das
inc
daa
popa
mov
stos
mov
mov
mov
mov
xor
push
popa
repnz
or
stos
jns
cmp
mov
rcl
lds
lock
ins
movs
hlt
pop
div
jae
mul
xchg
xor
pop
mov
and
mov
cmp
inc
push
sbb
pushf
sbb
out
jg
or
dec
call
lock
movs
sbb
xor
sbb
mov
fistp
in
sub
loopne
or
add
jns
mov
ss
(bad)
adc
in
fwait
loop
(bad)
icebp
mov
pop
dec
inc
mov
(bad)
out
daa
push
in
mov
iret
xchg
das
aam
add
popa
xor
lock
test
stc
je
and
mov
test
add
pop
pushf
inc
cmp
test
or
ins
pop
cmp
adc
(bad)
lods
std
test
dec
xchg
jo
mov
lahf
push
or
ret
repz
push
cld
mov
push
xchg
shl
xchg
aam
cwde
call
mov
pop
arpl
inc
or
dec
adc
gs
jp
dec
sti
aam
dec
pop
leave
jmp
inc
cmps
inc
iret
rcr
cmp
add
outs
iret
lods
add
inc
sub
cmp
sbb
std
push
pop
xor
push
pop
add
lock
ss
jl
lea
xchg
xchg
add
jg
push
rcl
mov
mov
cmp
(bad)
sub
xchg
dec
mov
jle
sbb
popf
push
cmps
inc
xchg
fnstcw
fs
mov
out
fwait
nop
daa
and
push
jne
data16
sbb
pop
(bad)
xor
arpl
aam
mov
pop
and
int3
jno
inc
mov
not
add
popa
push
jae
bound
ret
xchg
cld
push
cmps
dec
push
pop
lahf
xor
hlt
scas
jne
xor
push
imul
pop
xchg
add
mov
adc
div
addr16
outs
mov
xchg
shr
cmp
cld
sbb
pushf
out
movs
inc
aaa
sahf
lock
xor
xchg
nop
dec
xor
push
icebp
pop
lds
fwait
ins
push
lds
inc
mov
push
sbb
cmp
inc
add
inc
add
push
cmp
mov
lock
or
jns
xchg
in
mov
mov
or
mov
mov
xchg
jp
cmps
jo
mov
and
rcl
xlat
bound
push
mov
add
and
xor
push
(bad)
jne
(bad)
shl
jl
retf
or
and
jne
out
sbb
adc
add
jbe
jo
sbb
pop
in
aaa
inc
ret
in
out
xlat
mov
or
dec
pushf
(bad)
ins
in
ins
(bad)
in
sub
inc
lahf
stos
mov
pop
push
data16
xor
cmp
adc
mov
stos
enter
loop
icebp
push
rol
call
ja
adc
add
loop
mov
not
xor
mov
rcr
or
mov
(bad)
and
mov
mov
icebp
imul
retf
push
test
retf
icebp
mov
push
retf
pop
xor
push
fild
adc
sub
fistp
jmp
pushf
push
fcomp
push
inc
fs
push
push
pop
int3
shr
sti
test
repnz
aam
cdq
pushf
or
lahf
stos
pop
retf
jecxz
and
shl
push
dec
repnz
pop
dec
aaa
dec
in
ror
sub
inc
cmps
test
lea
idiv
test
loope
xchg
lods
je
or
mov
(bad)
(bad)
mov
xlat
out
popa
ss
jl
nop
js
xlat
cmps
jmp
test
cmp
adc
(bad)
movs
dec
push
aas
push
out
push
sub
scas
leave
aas
shl
push
jnp
sub
test
cmps
out
fimul
push
pop
jecxz
data16
xchg
sti
xor
loope
sar
mov
push
out
mov
mov
sbb
xor
in
lods
mov
int
cmp
push
or
xchg
ret
loope
loop
push
shr
inc
cld
je
lods
mov
push
retf
adc
cmp
push
sbb
dec
fcmovnbe
mov
add
fisttp
pop
popa
inc
xor
sar
mov
mov
icebp
outs
push
repz
fs
call
xchg
xchg
repz
push
push
mov
mov
xchg
(bad)
ror
test
dec
sbb
jno
adc
sti
stos
ret
js
ja
cmps
push
sar
add
std
ret
mov
je
fdiv
inc
inc
cld
ret
stos
pop
rol
js
pushf
mov
int
mov
xchg
repz
stos
movs
sub
mov
ss
ret
cmp
stc
adc
jl
dec
mov
shl
xchg
add
fiadd
sub
push
ret
rcl
pop
fnstsw
fbld
jmp
xor
sbb
sub
jge
push
mov
outs
mov
mov
popf
movs
and
mov
or
mov
cmp
sub
xchg
loope
loop
push
inc
ja
sub
js
scas
jge
ds
ds
rcl
and
out
pop
ins
jno
(bad)
sub
jge
ins
push
adc
mov
xor
add
sub
gs
mov
mov
pop
or
or
scas
fld
es
mov
adc
(bad)
mov
mov
or
sub
jmp
ret
or
adc
rcr
rol
iret
dec
int3
mov
and
lods
ins
rep
fmul
mov
jecxz
js
xchg
cwde
int
xlat
cld
mov
rcr
fs
jge
out
movs
(bad)
loop
pop
pop
push
not
jmp
lods
adc
or
mul
cmc
sub
cmp
cmp
push
sti
mov
and
je
lea
mov
movs
icebp
xor
xor
lods
out
scas
icebp
clc
xor
push
dec
(bad)
not
mov
pop
cli
pop
cmp
call
mov
je
fsubp
adc
mov
xor
iret
dec
cmp
dec
leave
inc
jnp
jge
add
fild
(bad)
mov
fiadd
cmp
dec
daa
mov
cmp
popf
sbb
psllq
cmps
or
mov
(bad)
es
and
jno
leave
enter
out
xchg
mov
and
xor
pop
pop
dec
dec
push
neg
and
lea
add
fucomi
add
addr16
adc
add
push
push
(bad)
fidiv
ja
jbe
shr
mov
not
mov
cmps
in
cwde
aam
pushf
retf
jmp
push
cmp
mov
jp
xor
ds
fwait
sahf
jo
push
xchg
mov
lahf
cmp
sbb
pop
pop
mov
sar
mov
leave
jecxz
push
sub
add
int3
aaa
jns
cs
fild
ret
jmp
jns
dec
push
cmp
aas
pop
test
lods
lods
jg
add
dec
cmp
jge
inc
cmp
in
cmp
sub
xlat
mov
loope
(bad)
data16
cwde
lods
sub
enter
push
xor
cmp
btc
adc
popf
hlt
rol
mov
enter
scas
inc
pop
(bad)
ror
cwde
mov
jae
push
xor
jae
mov
ja
aad
dec
es
fadd
scas
cmc
js
les
push
jecxz
in
xor
cld
daa
cmp
pop
pop
nop
fst
stos
xlat
in
imul
lock
cmp
jnp
jle
mov
cwde
mov
jnp
sub
add
div
adc
cs
cmp
rcl
test
mov
adc
jns
xchg
mov
jae
mov
jbe
adc
or
mov
mov
sahf
mov
jge
ins
scas
push
cmps
test
xchg
dec
lahf
ins
or
ins
push
pop
fistp
dec
ja
out
call
inc
fisttp
inc
inc
jp
cmp
adc
jge
jg
push
fincstp
test
in
cld
movs
ss
test
test
adc
xor
adc
test
push
dec
fwait
into
lods
stc
int
js
sub
addr16
das
(bad)
cld
dec
inc
pmuludq
nop
not
pop
fst
lds
mov
push
loop
sbb
inc
jo
aam
cmp
mov
addr16
nop
call
cdq
cmp
imul
cwde
daa
mov
sti
ins
arpl
inc
sti
mov
mov
cmps
xor
lahf
pop
mov
aam
cld
xor
or
mov
or
adc
add
rol
and
cmp
pop
inc
jb
or
fild
and
cs
xchg
aas
fs
pop
loop
test
pop
push
jge
out
dec
mov
js
push
stos
ja
xchg
stc
sbb
pop
or
pop
and
gs
or
fwait
mov
shl
pop
xlat
data16
nop
shl
test
mov
ret
mov
out
(bad)
pushf
pop
sub
mov
add
inc
mov
sub
adc
loop
or
cmps
inc
clc
fs
dec
sbb
dec
out
test
xor
std
add
adc
stc
jno
hlt
ins
lods
adc
pop
stos
call
mov
hlt
mov
das
add
or
std
xchg
sbb
xchg
jge
shl
mov
mov
out
fnstenv
cmp
or
xor
and
xor
cmp
jmp
cld
cdq
ins
pop
dec
jmp
push
rcl
mov
les
add
cwde
and
cmp
dec
scas
push
mov
test
fs
xor
data16
mov
inc
sbb
mov
call
push
dec
jne
or
sti
arpl
sbb
ds
or
mov
(bad)
into
pop
(bad)
dec
ret
pop
adc
pop
inc
stos
call
loop
stc
movs
icebp
and
in
jnp
push
shr
shl
mov
das
int
ds
cmp
or
pop
inc
and
mov
push
scas
sub
inc
dec
inc
ins
imul
push
mov
mov
jno
mov
push
or
mov
call
and
or
movs
and
out
dec
or
jne
sti
pop
lods
jnp
sbb
push
mov
sbb
arpl
dec
or
ficomp
mov
jecxz
outs
pop
pop
xor
jbe
aaa
add
mov
pushf
push
pop
cmc
mov
adc
jmp
lds
cmps
addr16
pop
enter
push
stc
pop
dec
les
jae
ret
sar
mov
pop
fldenv
jae
mov
nop
jns
icebp
push
mov
mov
add
adc
mov
and
dec
mov
mov
sub
cmp
pop
pop
xchg
and
sbb
pop
mov
int3
ror
add
arpl
mov
aas
lea
mov
pop
xchg
cmps
scas
outs
jns
test
push
adc
shr
xor
mov
fldenv
aam
pop
js
xchg
inc
jecxz
pop
adc
cmp
push
push
jo
mov
push
dec
stc
jmp
test
js
xor
cmc
adc
adc
lea
outs
push
add
call
adc
inc
into
xor
pop
test
(bad)
jne
loope
fst
mov
lea
cmp
and
push
and
lds
in
sbb
test
cmps
lods
sbb
cmps
jnp
xor
outs
ds
je
in
imul
push
fdivr
fcom
add
test
jne
test
ins
inc
xchg
pusha
or
jge
test
push
cdq
in
out
dec
push
out
lds
or
js
xchg
test
ds
mov
(bad)
xor
pop
xchg
lea
sub
stos
(bad)
repnz
jmp
lea
and
xor
mov
push
fnstenv
rol
in
mov
cmp
(bad)
les
adc
pop
cmp
lea
adc
jno
lock
inc
nop
ja
enter
xor
inc
mov
aaa
push
and
loope
in
out
(bad)
pop
cmp
test
dec
retf
cmp
pop
shl
adc
push
jnp
push
fidivr
out
or
sub
loop
test
xchg
out
addr16
inc
sti
in
aaa
xor
out
out
xchg
cmp
in
adc
or
add
fisttp
mov
push
add
nop
jnp
iret
xchg
aas
inc
test
pop
stc
xor
stos
repnz
sub
mov
jo
(bad)
sub
cmp
into
es
jge
or
fwait
inc
imul
je
test
sbb
mov
jp
jno
and
xchg
ja
xchg
repz
cmp
inc
add
jmp
push
mov
xlat
add
add
cmc
stos
jb
inc
sar
pop
ins
add
jge
clc
adc
pop
movs
or
cli
pop
jg
stos
mov
adc
adc
sbb
and
clc
nop
(bad)
mov
push
sbb
int3
repz
lds
inc
push
adc
imul
mov
sbb
cld
cs
jle
mov
push
and
fadd
call
mov
dec
shl
xchg
mov
cwde
js
dec
out
stos
dec
push
add
shl
dec
adc
mov
aam
or
test
adc
js
(bad)
ins
mov
cmc
sti
push
xchg
aad
imul
mov
lock
add
leave
push
jp
ins
stos
div
xor
clc
push
je
icebp
int3
or
and
mov
pop
ret
ins
inc
push
mov
aaa
mov
addr16
ins
pusha
push
sti
out
outs
or
mov
aad
in
push
sbb
inc
jne
icebp
xchg
test
adc
lock
in
lds
in
mov
adc
dec
ret
jae
test
lds
stos
jmp
mov
ror
call
ror
(bad)
cli
aam
sub
pop
adc
icebp
test
mov
pop
xor
mov
popa
or
adc
jns
addr16
pop
inc
sbb
xor
test
test
inc
repz
outs
je
pushf
pop
into
inc
mov
lahf
and
or
add
aam
nop
push
gs
pop
inc
pop
xchg
adc
outs
push
xchg
mov
enter
jae
mov
(bad)
hlt
pop
xchg
pop
add
jp
jmp
push
push
xchg
scas
mov
sti
push
dec
or
adc
cmps
jnp
adc
mov
pop
mov
ss
call
in
mov
cmps
imul
cmp
ss
stc
or
and
lods
xchg
jno
add
mov
(bad)
stos
aas
mov
jmp
sub
push
fst
add
fcom
shl
mov
aaa
inc
js
clc
outs
add
mov
test
cmp
add
aaa
dec
fstp
ss
mov
popa
leave
mov
gs
adc
jne
mov
iret
or
scas
or
fwait
adc
mov
jmp
adc
mov
cs
sar
mov
mov
clc
pop
imul
jmp
adc
jp
hlt
clts
dec
sub
sub
pop
jnp
outs
shl
xor
adc
add
sub
xchg
mov
dec
into
inc
outs
mov
add
fistp
push
jge
cwde
mov
xor
inc
jb
mov
js
and
rcl
(bad)
inc
sub
adc
enter
jne
push
rcl
icebp
lods
(bad)
mov
lods
sbb
mov
push
enter
(bad)
push
out
cmc
dec
sub
test
jmp
jb
sbb
xchg
xchg
dec
imul
jmp
cmps
stos
sub
enter
sub
sub
push
leave
push
pop
shl
add
pop
popa
test
mov
jnp
shl
mov
ins
fadd
mov
mov
push
pop
jae
dec
or
aas
xlat
popf
outs
stc
or
inc
pop
fstp
cmc
jecxz
call
jb
test
push
adc
mov
push
and
daa
mov
cdq
(bad)
xor
sbb
mov
arpl
fsub
or
cs
sbb
aaa
sbb
into
push
xchg
sbb
sbb
mov
cmp
lock
pop
aas
push
pop
les
sub
mov
mov
cwde
mov
stos
mov
sbb
or
mov
xor
push
dec
scas
dec
out
mov
push
dec
adc
and
push
inc
hlt
out
icebp
adc
xlat
outs
push
pusha
xchg
inc
adc
ret
dec
in
xor
lock
push
(bad)
and
cdq
ja
fs
fisttp
push
sub
mov
cwde
cmp
sti
movs
leave
add
or
(bad)
cmp
inc
push
or
pop
or
in
mov
mov
xchg
push
adc
in
lods
mov
jmp
xchg
sahf
mov
pop
push
imul
(bad)
ret
mov
js
mov
push
movs
sbb
adc
lahf
add
sbb
xchg
mov
inc
adc
popa
xor
jns
mov
in
stc
imul
jecxz
dec
adc
xlat
mov
and
les
push
cmps
pusha
adc
cmp
sub
nop
jnp
in
push
push
sbb
icebp
cmp
iret
in
sub
pop
add
mov
pop
mov
retf
bswap
dec
enter
cmp
sub
xchg
rol
dec
xchg
inc
hlt
imul
xchg
xor
sbb
stos
sbb
aas
jp
add
pop
lods
sub
rcr
lds
clc
ins
movs
xchg
pushf
js
fisttp
ror
inc
mov
adc
(bad)
repz
fnstenv
or
fwait
adc
dec
push
jbe
xor
rcr
repz
(bad)
stc
int3
pop
and
lods
jmp
cmc
sub
and
dec
jb
outs
js
sbb
fnstcw
lock
sar
mov
arpl
sub
mov
dec
pop
sub
add
sbb
xor
test
jno
or
xchg
in
and
dec
cmp
cmp
inc
xor
dec
ins
jae
dec
push
fwait
(bad)
mov
pushf
lds
pop
mov
mov
rcr
ss
outs
dec
pop
push
xor
sti
mov
lds
or
push
cmp
cmps
sbb
inc
loop
push
nop
sbb
jne
fs
aam
pop
popf
mov
rcr
jle
ins
sbb
dec
and
mov
js
or
cwde
mov
inc
cld
sbb
and
inc
lock
pop
jbe
cmc
imul
and
mov
shl
push
(bad)
xor
inc
add
daa
sub
dec
out
mov
xor
and
es
ins
pusha
adc
sbb
rcl
jg
test
imul
jle
clc
cmps
inc
pop
pop
fadd
stos
aas
pop
shr
mov
cmps
sbb
in
add
retf
mov
fistp
int3
adc
cmps
adc
jp
mov
pop
in
(bad)
in
xor
push
fcom
imul
inc
xchg
sub
not
mov
in
jb
adc
jp
rcr
or
ins
jg
or
nop
dec
jecxz
add
pop
popa
push
call
jae
inc
push
cli
mov
mov
and
and
adc
stc
push
push
push
ret
mov
sbb
inc
faddp
cld
jo
push
sar
push
(bad)
jmp
inc
std
mov
xor
ror
sbb
sub
hlt
ja
cmc
cld
dec
push
pusha
adc
movs
xor
int3
add
mov
pop
jo
mov
sbb
xor
ret
pop
(bad)
jmp
mov
pop
(bad)
aam
in
clc
push
sbb
call
and
cmp
jmp
aas
push
mov
add
in
daa
call
push
sub
shl
lahf
sbb
pop
mov
inc
cmc
and
cdq
jp
stos
and
xor
jp
test
push
shl
daa
cwde
mov
add
xchg
or
or
lea
in
in
fstp
jmp
xchg
jo
test
sbb
lds
pop
jmp
jne
rcr
jg
push
sbb
mov
dec
inc
aad
xchg
movs
adc
and
pop
cmp
leave
cmp
push
jo
(bad)
(bad)
call
fst
and
icebp
pop
add
fwait
aam
js
or
aam
push
test
push
sub
push
outs
push
dec
mov
es
mov
sbb
adc
xor
loope
and
sub
fucomi
cdq
jb
mov
jg
mov
dec
mov
jge
fimul
xor
adc
call
xchg
fsincos
test
sar
jmp
jbe
jne
adc
pusha
cmp
cmp
test
movs
or
test
outs
jnp
xchg
push
mul
mov
cs
fcomp
mov
dec
jle
push
aaa
sbb
clc
sti
jmp
sub
cld
inc
ins
(bad)
outs
and
enter
cmps
mov
push
jbe
test
imul
inc
sbb
and
data16
mov
in
sar
shr
push
ret
int
imul
imul
repnz
add
in
inc
push
add
pop
or
popa
fdivr
push
inc
and
sbb
sti
les
jp
xor
mov
std
out
mov
fild
dec
xchg
cmp
push
add
xor
inc
mov
mov
jns
xchg
and
xchg
js
cmp
(bad)
dec
int
fidiv
repnz
imul
xor
pop
fwait
sub
mov
and
js
or
inc
push
call
loop
add
in
mov
sbb
and
sahf
sub
push
add
daa
mov
and
xor
adc
or
pop
(bad)
pop
pop
sbb
push
fcom
and
sub
dec
js
mov
dec
jno
popa
xchg
and
push
cli
js
fidivr
cmps
sahf
fwait
pop
adc
jp
shl
je
push
rcr
(bad)
dec
scas
push
lods
test
jge
repz
inc
fistp
hlt
add
add
shr
cmp
stos
aas
int3
ret
jp
adc
inc
or
inc
dec
ror
test
into
fistp
jmp
lea
cmps
jno
mov
int3
das
dec
pusha
sar
and
outs
push
loope
in
or
mov
xor
or
rcr
jb
mov
mov
pop
retf
xchg
push
push
retf
and
arpl
push
in
std
mov
add
sub
push
fadd
lods
add
ds
jns
out
or
push
adc
mov
dec
xchg
dec
fidiv
es
jp
cmp
ds
call
mov
bound
jno
mov
inc
mov
adc
sbb
js
mov
out
cdq
popa
and
les
retf
xor
imul
sub
sub
and
loop
aaa
jl
jl
cmp
mov
into
xchg
shr
cmp
sbb
sbb
mov
call
(bad)
lock
lock
lods
sub
mov
adc
test
push
sbb
lahf
mov
mov
inc
mov
push
inc
dec
ja
bound
stos
(bad)
mov
pusha
dec
push
rcr
sbb
in
inc
clc
(bad)
or
aaa
enter
scas
mov
nop
in
call
aaa
xchg
jno
pop
test
outs
imul
aad
push
push
jno
jo
and
mov
lock
xchg
and
mov
dec
lea
or
sub
sbb
cmp
(bad)
rol
std
mov
and
fistp
lods
ficom
xor
push
sub
cli
es
imul
push
js
out
cmps
enter
ret
mov
nop
arpl
movs
ss
popf
or
js
outs
or
pop
cmp
bound
sbb
push
mov
enter
jge
adc
and
cmps
jmp
daa
(bad)
fld
outs
mov
sbb
jle
rcr
aad
jno
sub
out
scas
sbb
div
jb
jle
ins
out
movs
out
cmp
cmps
outs
jns
(bad)
jns
clc
push
fisttp
aad
and
mov
icebp
add
push
dec
add
fld
pushf
sub
inc
pop
and
add
cdq
add
mov
push
cmp
jmp
inc
mov
push
sbb
ror
sub
mov
push
js
int
or
pop
and
inc
repz
retf
hlt
dec
xchg
mov
rol
mov
out
push
jle
call
sbb
add
retf
mov
pop
fwait
dec
add
mov
adc
sbb
out
push
scas
or
cli
and
fs
adc
ror
std
aaa
jmp
sub
clc
int
jge
add
imul
lds
retf
test
mov
mov
and
adc
fld
gs
lds
push
retf
movs
mov
in
add
sbb
ins
or
sbb
sti
in
clc
add
inc
mov
outs
cld
dec
xor
jle
push
push
imul
xor
inc
sti
mov
add
mov
xchg
xor
rcl
add
mov
mov
in
sar
mov
pop
sbb
cmp
call
js
jp
rol
je
stos
dec
push
mov
daa
mov
pop
out
sub
dec
dec
nop
fsubr
ins
adc
sti
xlat
dec
mov
sbb
adc
jl
movs
dec
pop
adc
lock
mov
ret
pandn
adc
cwde
mov
push
retf
mov
push
ins
mov
mov
lds
push
pop
jmp
push
movs
pop
cmc
int
push
add
nop
mov
popa
sbb
stc
test
adc
jb
fist
push
and
addr16
pop
sub
dec
push
hlt
mov
call
dec
dec
add
cld
lods
mov
mov
adc
jae
aam
mov
dec
adc
fist
or
xlat
push
xlat
mov
test
sbb
sahf
inc
retf
dec
push
sahf
test
adc
and
(bad)
xor
and
lods
sub
sbb
clc
stc
and
xchg
loopne
daa
ja
pop
div
xchg
mov
push
pop
out
popa
mov
and
cmp
pop
fild
sub
fiadd
out
mov
pop
push
aaa
jne
inc
and
test
inc
je
ds
les
je
sub
mov
cmp
cmp
mov
adc
pushf
sub
icebp
cmp
jns
cmp
lods
in
movs
cmps
and
pop
sbb
repnz
cmp
call
cmp
inc
sbb
int3
mov
adc
adc
cld
(bad)
stc
cmp
pusha
pop
or
mov
dec
adc
mov
mov
xchg
jg
add
ja
inc
fwait
sti
sbb
or
shl
push
pushf
xchg
adc
xchg
push
nop
retf
cmps
or
fnstenv
dec
mov
xchg
xchg
mov
outs
dec
iret
out
stos
sub
jg
inc
pop
cmps
jno
test
dec
adc
push
(bad)
sub
mov
and
cmps
add
sub
add
xor
ins
add
fwait
pushf
aad
xor
imul
jl
rcr
popa
sbb
sbb
in
loope
iret
test
pop
cmc
jmp
fs
fcom
pop
fdivr
jb
je
add
jecxz
jp
cmp
push
pop
inc
mov
jmp
dec
jg
xor
add
xchg
pop
in
ins
test
popa
dec
dec
dec
cmps
adc
rcr
add
sti
loope
dec
imul
jmp
or
jno
or
push
(bad)
out
push
mov
mov
call
retf
std
sbb
sub
fldenv
cdq
div
pushf
mov
out
push
aas
dec
dec
and
add
(bad)
push
enter
add
scas
cmp
mov
adc
mov
mov
cmps
push
add
mov
repz
jmp
retf
leave
xor
sub
outs
gs
lock
dec
jmp
adc
call
dec
adc
sub
shl
dec
daa
sub
out
lods
cmp
lock
dec
push
(bad)
gs
mov
or
xor
test
inc
cs
push
loop
and
mov
push
imul
or
adc
mov
scas
dec
fcom
pushf
and
cmp
push
ror
mov
movs
dec
test
les
jbe
jl
pop
mov
nop
ret
inc
fbld
cmps
out
or
sbb
scas
jnp
lds
xlat
stc
jp
adc
inc
mov
sub
dec
fld
xlat
fsub
inc
mov
bound
and
adc
add
in
movs
jae
lock
aam
jb
ret
pushf
pop
in
and
cld
loop
(bad)
movs
xchg
les
popa
mov
pop
stos
repz
mov
rol
imul
arpl
cmp
adc
inc
jne
into
shl
shl
push
pushf
ins
ror
xor
push
mov
scas
call
pop
mov
ins
repnz
mov
sbb
cdq
mov
adc
mov
sub
lods
sahf
(bad)
pop
push
(bad)
gs
(bad)
sbb
les
cs
xchg
pop
mov
push
or
shr
adc
pop
push
(bad)
movs
arpl
jecxz
xlat
out
stos
cmp
out
push
add
adc
push
sub
mov
xlat
jbe
in
lahf
and
and
or
and
cmps
test
sbb
xchg
lahf
sbb
xor
ins
lods
nop
(bad)
xchg
or
test
xlat
jno
mov
add
dec
pop
jo
addr16
ror
xchg
fbstp
inc
and
add
(bad)
sub
lods
in
rcr
mov
dec
jo
test
leave
cmps
out
mov
mov
leave
pop
outs
mov
push
test
inc
stos
out
or
shl
mov
mov
jmp
movs
jp
cmp
mov
xchg
ins
dec
lods
xchg
lea
dec
and
inc
or
sbb
pop
dec
pop
mov
pop
jmp
sbb
jae
push
shl
mov
ror
jge
ret
cmp
pop
xor
jbe
jp
adc
pop
and
lea
lods
inc
add
xor
fwait
scas
mov
cmc
retf
dec
cmp
shl
mov
aad
xor
enter
clc
gs
mov
inc
add
jno
call
fist
jg
push
(bad)
jmp
mov
je
ret
shr
mov
in
push
ds
mov
dec
mov
jg
pop
push
mov
into
cmc
idiv
push
jne
and
sbb
mov
fmul
jmp
fisttp
push
jg
sub
lods
push
fimul
(bad)
xlat
(bad)
cmp
nop
cmps
dec
rol
gs
and
pop
lods
pushf
cmc
scas
out
push
push
neg
mov
jle
call
adc
iret
fwait
outs
pusha
adc
adc
loopne
cmp
push
into
nop
aad
push
mov
int
cdq
adc
jecxz
sahf
pop
mov
pop
shr
sub
fsub
push
add
nop
or
out
aas
fld
push
mov
xchg
cld
repnz
inc
inc
int
push
mov
fs
cwde
inc
dec
shr
or
rol
mov
test
popa
xchg
fld
call
(bad)
(bad)
pop
cli
cmp
fwait
cmp
imul
mov
fs
into
xchg
or
movs
repz
push
scas
mov
jae
push
xchg
js
shr
iret
mov
xchg
push
add
and
int
retf
inc
xor
(bad)
and
jmp
rcr
jo
mov
fst
and
xor
enter
scas
sbb
jnp
pop
mov
scas
push
loope
mov
dec
je
jp
or
push
and
into
add
movs
xor
lock
add
inc
mov
xlat
(bad)
cmps
push
imul
outs
mov
sbb
imul
js
movs
out
xor
sahf
sbb
aaa
mov
jns
mov
sbb
(bad)
call
and
clc
sbb
clc
sbb
clc
mov
sub
mov
mov
cmps
lock
shl
mov
xchg
sbb
pusha
mov
mov
je
aam
pop
aaa
loop
imul
jle
inc
out
add
out
jnp
or
add
mov
dec
outs
jmp
xor
icebp
mov
mov
call
(bad)
ds
leave
into
cmp
jle
or
outs
xchg
sbb
cmps
mov
mov
add
iret
stos
icebp
(bad)
cmp
mov
shr
or
pusha
xchg
in
out
or
(bad)
fisub
clc
cmp
adc
shl
scas
aaa
ja
sbb
ret
cli
stos
test
and
jno
xor
xlat
dec
es
add
adc
ss
inc
repnz
stos
ins
leave
cmp
mov
lea
add
mov
jp
ins
inc
pop
(bad)
add
rep
add
cli
(bad)
cmp
cmc
push
retf
xchg
das
gs
or
xor
push
imul
sub
jbe
cmp
xor
mov
test
mov
fnstenv
adc
add
in
imul
fldcw
mov
mov
cli
out
push
cdq
add
cmp
mov
stos
(bad)
jmp
jle
push
xor
outs
add
das
mov
(bad)
hlt
xor
push
out
ins
gs
push
aas
add
mov
inc
movs
sbb
dec
(bad)
xor
push
xor
in
sbb
dec
ins
movq
sub
add
cmp
pop
imul
inc
inc
imul
mov
xor
and
shl
vandps
adc
push
pop
cs
aas
xor
cmp
jmp
jecxz
ret
or
leave
fwait
add
mov
mov
jae
dec
mov
inc
rep
sbb
xor
std
ins
add
fdivr
dec
add
fs
fwait
or
call
xor
fcom
ficom
mov
repz
or
mov
lahf
cli
aaa
jne
mov
(bad)
pop
inc
sub
xor
add
mov
imul
pop
cmp
add
jg
les
clc
daa
rcl
adc
in
retf
sti
aas
cmp
or
in
sbb
lods
jae
jno
ins
sub
in
xchg
inc
stc
jecxz
imul
pop
daa
inc
sbb
lea
dec
out
add
xchg
movs
rcr
int
cdq
mov
out
shl
jge
adc
mul
mov
jnp
xchg
jbe
and
sub
sub
push
jge
add
pop
shl
dec
(bad)
mov
xchg
xchg
and
and
movs
out
loope
js
dec
pop
cmc
out
stc
dec
stos
(bad)
aaa
fidivr
cli
sub
push
sbb
sbb
nop
js
outs
aas
or
nop
jmp
cmp
cmp
(bad)
xchg
out
movs
pop
push
call
cdq
mov
push
add
stc
pop
jae
push
or
xchg
lahf
and
inc
std
pop
mov
mov
int3
and
xor
jb
sbb
add
cmp
add
sbb
sbb
ret
daa
ret
cli
outs
test
push
push
xor
jo
push
test
hlt
pop
push
jmp
aad
sub
arpl
pop
mov
push
add
(bad)
xor
mov
mov
pminub
dec
fdiv
adc
push
aas
out
lds
ficomp
adc
stc
js
jmp
loope
out
inc
dec
aad
call
imul
add
pop
xchg
je
mov
sub
out
jnp
gs
addr16
les
or
cmp
(bad)
push
stos
cli
ret
std
jbe
adc
sbb
stos
jne
xchg
(bad)
clc
enter
inc
sti
mov
pop
sbb
pusha
ins
jnp
es
xlat
dec
js
jle
push
ja
jle
cmp
fdiv
xor
mov
or
cmp
push
adc
sti
adc
or
pop
xor
push
sub
jle
sub
push
call
sbb
pop
movs
pusha
mov
jnp
repz
add
dec
int3
fist
mov
movs
xchg
sbb
or
fiadd
lds
ss
pop
fadd
cmc
aam
mov
ds
inc
ins
stos
mov
sbb
dec
mov
and
fistp
mov
popa
inc
mov
pop
loopne
mov
shl
xor
pop
fldenv
fidivr
clc
push
push
out
stc
call
scas
test
cmp
lahf
mov
mov
dec
adc
adc
mov
in
push
pop
inc
ss
add
int
test
clc
and
xchg
cs
cmp
leave
aaa
cdq
ror
das
or
dec
outs
test
or
je
mov
popa
test
jl
rcl
mov
int
(bad)
push
pop
adc
xchg
add
fld
lock
xchg
arpl
adc
pop
ficom
sahf
retf
xor
imul
sub
jae
sub
repz
fmul
pushf
rcr
xchg
mov
or
mov
test
adc
add
push
cdq
ds
and
cmp
xor
add
scas
inc
inc
xchg
xchg
dec
xchg
sbb
jbe
cmps
pop
push
clc
fstp
ror
stos
ja
xlat
lock
data16
pop
outs
xlat
push
(bad)
data16
adc
stc
js
add
add
imul
js
inc
sub
int
ss
jmp
mov
lds
jb
xchg
mov
pop
imul
repz
cmc
cmp
cdq
out
outs
and
(bad)
bound
test
addr16
lock
xchg
stos
test
jmp
push
retf
stc
dec
out
mov
push
inc
jg
push
mov
sar
and
lds
push
cmc
add
push
popa
outs
mov
movs
inc
or
cmp
dec
push
lea
and
sub
fadd
icebp
mov
mov
pop
jne
in
xchg
(bad)
push
ja
adc
data16
inc
adc
stc
jns
sbb
sub
dec
lods
push
sub
pop
arpl
aaa
aaa
test
and
mov
cmp
out
shr
ds
mov
add
aaa
stos
and
dec
retf
jns
mov
and
fisttp
je
sti
push
into
bound
ret
and
cld
sub
lds
nop
pop
inc
das
outs
clc
shr
test
and
and
dec
cmp
fcmove
jg
pop
cld
test
jbe
dec
aam
xchg
lds
mov
inc
fcom
add
xor
push
mov
mov
mov
stos
addr16
arpl
out
adc
dec
loop
cmp
stc
je
mov
push
sbb
fwait
rcl
stc
xlat
jnp
rep
pop
sti
enter
test
cmp
jl
arpl
pop
clc
test
mov
jo
imul
sub
cs
or
mov
in
in
adc
pop
cmp
adc
(bad)
or
pop
daa
pop
pop
jmp
leave
mov
pushw
pop
jb
adc
pusha
sbb
call
fs
fist
pop
adc
js
cmc
sub
(bad)
or
outs
std
mov
(bad)
mov
xor
pop
popa
push
mov
icebp
add
mov
inc
mov
dec
xchg
test
or
dec
das
sbb
sbb
and
enter
or
pushf
cld
ins
icebp
(bad)
xchg
jo
dec
mov
lahf
and
leave
data16
call
sbb
(bad)
gs
mov
cmp
mov
je
nop
add
jnp
hlt
icebp
xchg
or
jns
adc
inc
mov
and
lds
xor
sbb
jl
hlt
ret
(bad)
daa
xor
test
out
ins
int
movs
in
(bad)
sub
aad
mov
dec
js
push
hlt
cmps
push
jge
cmp
js
shr
imul
loope
pop
ds
je
inc
xor
and
(bad)
xor
adc
icebp
(bad)
pop
cdq
cli
push
jbe
(bad)
ret
jle
jmp
dec
aad
sub
push
dec
xchg
clc
sahf
fisttp
pop
or
inc
scas
mov
xchg
fs
xor
jmp
sbb
(bad)
jmp
xor
out
aam
dec
cdq
jmp
push
sbb
lods
mov
stc
out
push
add
mov
push
jbe
inc
pushf
in
repnz
outs
jmp
dec
dec
(bad)
xchg
xchg
mov
fisttp
test
in
sar
and
rol
add
stos
mov
ins
lds
or
fdiv
xor
xchg
stos
fwait
jo
xchg
outs
fist
push
repz
daa
and
inc
inc
in
enter
mov
xor
cmp
jecxz
stc
(bad)
popf
bound
pop
and
imul
dec
lds
hlt
ror
fnstenv
sbb
or
pop
call
repz
in
and
xor
scas
cld
scas
inc
ret
cmps
sbb
leave
or
fsub
stc
stos
push
mov
ja
xor
enter
push
cmp
pop
shl
mov
in
jno
push
mov
in
scas
jmp
mov
ds
xchg
dec
fwait
scas
ss
pop
mov
xchg
scas
out
cdq
in
pop
or
or
lods
fistp
addr16
cmps
retf
cs
cmp
mov
movs
sub
xor
mov
xchg
ja
adc
cmp
jo
jge
cmp
gs
leave
sar
fucomip
movs
loope
stc
xrelease
test
push
push
mov
lds
push
out
xor
cmp
imul
adc
scas
inc
and
bnd
cld
das
cmc
out
xchg
sbb
adc
ss
push
ins
xor
push
daa
adc
push
or
add
mov
ror
mov
mov
xor
sti
loop
jecxz
inc
xchg
imul
(bad)
mov
push
pop
pop
les
sahf
loope
or
call
jbe
cli
fistp
xor
xor
xor
aas
cdq
add
stos
mov
push
out
in
gs
and
ja
(bad)
fnstcw
add
daa
xchg
jge
push
js
push
outs
aad
in
xor
pop
xchg
jb
inc
cmc
push
js
into
jmp
mov
mov
shr
push
div
pushf
inc
sti
and
test
in
jb
pop
mov
xor
arpl
add
ret
test
cwde
lods
int
push
xchg
jb
cld
jecxz
and
push
jnp
stc
sub
movs
mov
push
push
aaa
sub
ja
int3
out
int
inc
or
jno
pusha
mov
arpl
es
jl
pop
pop
cmp
mov
test
out
(bad)
loope
fisubr
jne
leave
mov
fwait
jecxz
das
add
xchg
pop
mov
push
gs
or
mov
jns
rcl
test
test
sub
jmp
inc
scas
xchg
jno
cdq
call
or
mov
xchg
hlt
mov
push
(bad)
out
popa
mov
das
je
fisttp
push
dec
mov
(bad)
fs
sar
mov
out
or
inc
in
ins
adc
sbb
mov
xchg
idiv
out
das
sbb
dec
xchg
push
(bad)
lods
fadd
int
push
test
xlat
scas
dec
and
retf
inc
cmp
test
inc
fld
xchg
mov
aam
ins
sbb
out
fcomp
push
push
dec
mov
loop
adc
jge
cmps
retf
(bad)
xchg
gs
cld
js
fmul
pushw
shl
shl
sbb
add
mov
leave
jecxz
jo
or
xor
dec
xchg
mov
or
xlat
add
(bad)
cmp
movs
inc
out
leave
lods
cs
sub
frstor
stos
(bad)
xor
(bad)
fsin
inc
add
addr16
mov
loop
sub
mov
arpl
shl
mov
dec
add
dec
mov
loopne
add
(bad)
lock
and
psubsb
push
inc
loope
push
fcom
test
(bad)
test
out
dec
fbld
and
adc
lods
scas
ret
test
out
ret
imul
(bad)
aad
and
mov
scas
sahf
pop
add
lods
or
cmps
fld
sub
adc
mov
adc
nop
cmc
retf
and
jbe
cs
dec
or
or
out
push
call
sbb
(bad)
mov
jmp
cmp
call
or
cmp
pushf
ret
shl
imul
inc
push
jno
out
sbb
and
cmp
push
loope
inc
and
retf
aaa
xchg
and
xchg
lea
into
push
rcr
mov
xchg
dec
mov
outs
pop
mov
pop
shl
xor
ins
mov
and
cmps
clc
out
icebp
adc
dec
jl
xor
cld
out
in
sub
hlt
sahf
mov
js
dec
jecxz
cs
push
adc
ss
bound
and
jmp
ror
push
outs
push
push
dec
(bad)
xchg
adc
push
adc
mov
in
out
fst
scas
xchg
movs
popf
cmps
ret
push
push
xlat
adc
jne
dec
add
(bad)
pop
pop
cmp
ja
mov
cmps
sbb
cli
jp
jle
std
(bad)
jno
lea
adc
gs
push
mov
xor
lahf
cmp
xchg
loope
sub
jle
dec
inc
fstp
mov
adc
xchg
cmps
mov
(bad)
mov
lods
cdq
cmp
sub
add
jae
dec
ss
ret
or
shl
out
push
clc
test
int3
mov
dec
sbb
fstp
imul
cs
xor
cmc
mov
and
jae
loopne
in
pop
ins
and
mov
add
or
repnz
vmwrite
jle
mov
mov
jae
pushf
sub
into
jb
mov
add
and
aam
ret
sbb
js
fcomp
cmp
push
or
into
(bad)
in
movs
mov
mov
dec
push
sbb
es
dec
aam
jp
fadd
jg
cwde
popa
pop
retf
ja
rcl
and
push
cmc
sbb
fsub
adc
dec
xchg
test
loope
cdq
and
rep
jne
or
ja
push
std
ss
inc
mov
setl
mov
mov
sbb
mov
ss
inc
out
shr
hlt
mov
popf
dec
mov
hlt
and
cdq
jecxz
mov
xor
jge
jl
stc
es
ins
lods
cli
and
lock
mov
ss
push
adc
lods
inc
jp
sub
sbb
lock
adc
or
fwait
pop
sub
fwait
movaps
xchg
or
ins
aaa
jnp
inc
xor
rol
repnz
push
ins
add
jge
jg
cwde
jmp
daa
inc
(bad)
pop
push
or
in
jecxz
jne
aas
adc
xchg
aaa
mov
inc
jb
xchg
ins
popf
sbb
mov
lds
add
add
sub
mov
add
push
adc
jge
and
or
(bad)
jbe
adc
(bad)
(bad)
push
inc
mov
fnstenv
push
xlat
push
gs
pusha
push
aad
ss
adc
xchg
js
lods
call
mov
xchg
pop
addr16
cmp
add
jmp
pop
dec
gs
movs
cwde
sahf
fidiv
(bad)
imul
scas
push
dec
pop
sbb
and
jbe
inc
push
mov
push
inc
lods
lods
sbb
sub
adc
fwait
mov
les
jmp
or
mov
cli
es
and
mov
in
xor
fmul
mov
cmp
fnsave
bound
inc
adc
fwait
jno
lods
in
mov
sar
movs
stc
rcl
lods
in
mov
adc
or
mov
ins
lods
mov
push
mov
hlt
add
adc
mov
push
mov
adc
jge
fidiv
push
scas
cs
jbe
push
jne
outs
(bad)
fimul
adc
(bad)
and
sahf
rcl
out
mov
cld
cli
inc
inc
push
mov
arpl
js
xchg
sbb
lods
jl
cmp
cmp
repz
inc
fstp
mov
push
or
inc
pop
xlat
aam
test
mov
mov
loop
xchg
leave
loope
retf
xor
or
adc
sbb
fld
gs
inc
lods
mov
gs
pop
sub
addr16
dec
jo
mov
test
stc
popf
call
je
xor
mov
in
aam
scas
pusha
shr
(bad)
retf
or
daa
inc
test
sub
mov
mov
(bad)
aas
popa
cmps
and
loope
aad
aam
call
jae
fsubr
sub
xchg
and
(bad)
mov
cmp
push
xchg
and
sti
loop
mov
sub
lea
(bad)
cmps
xchg
cld
sub
xor
int3
inc
mov
add
push
ja
ror
mov
adc
sub
and
mov
icebp
jnp
in
mov
sub
test
div
mov
pop
or
les
es
xchg
sahf
shl
ret
outs
cmp
mov
scas
pop
lods
ror
repz
jne
jg
in
jmp
shl
push
popa
xor
fmul
rcl
sub
retf
pop
cmps
pop
rcr
shr
mov
xchg
xchg
pusha
jns
movs
rcl
loop
out
jae
in
mov
mov
repz
xchg
jmp
xchg
shr
stos
test
or
adc
or
push
aam
pop
out
retf
arpl
and
add
dec
fsubrp
test
leave
xchg
hlt
cld
call
push
or
dec
popa
and
push
or
adc
daa
jo
(bad)
lahf
repz
push
mov
in
loop
jle
lea
jo
hlt
inc
or
sbb
loopne
xchg
jno
fdivr
pop
aam
mov
sbb
imul
and
mov
lock
dec
xor
pop
test
cmp
push
out
push
push
xor
(bad)
dec
sub
in
lock
ins
xchg
mov
jb
add
mov
loopne
and
mov
sbb
adc
sbb
inc
or
xchg
mov
pop
popf
xor
in
out
(bad)
cmp
ds
fwait
scas
lock
cmp
and
xchg
fdiv
imul
mov
pop
mov
fxch
jo
dec
xor
pop
mov
mov
cmp
inc
jbe
in
pop
lds
dec
test
dec
sub
or
and
shr
in
imul
dec
sar
push
inc
push
adc
mov
push
into
sbb
in
jns
ja
jecxz
or
lahf
mov
ja
pop
daa
inc
inc
dec
dec
sbb
mov
or
repz
cmc
xchg
xor
lock
fdiv
in
mov
cld
cld
lods
rcl
imul
sti
shl
jae
test
fstp
imul
sub
pop
fld
adc
xor
xor
sub
mov
gs
mov
jae
dec
sbb
push
test
jp
xor
mov
inc
dec
adc
xor
fsubr
sub
and
ins
add
jb
cmp
mov
xor
push
fmulp
lahf
sahf
popa
cmps
adc
push
das
sub
mov
aam
push
imul
jbe
push
test
and
sbb
jne
sbb
frstor
fsub
in
and
push
mov
mov
aas
adc
sar
xor
xchg
pop
inc
and
repz
inc
adc
push
pop
arpl
fsub
mov
sbb
aam
jb
cwde
jno
ret
pop
(bad)
fistp
push
sub
lods
rcr
(bad)
inc
sub
sbb
imul
ror
add
and
sbb
addr16
dec
repz
loopne
xchg
xchg
mov
xchg
dec
mov
push
and
scas
sbb
out
mov
jge
sub
dec
push
or
ds
cs
xlat
retf
(bad)
mov
clc
xchg
(bad)
pop
inc
xchg
mov
xor
cdq
jbe
clc
mov
in
adc
adc
push
mov
je
inc
dec
shr
std
sub
cli
push
out
xchg
or
ds
dec
and
push
and
sahf
cmp
pop
sub
dec
mov
or
out
mov
mov
jp
fmul
or
out
scas
in
imul
dec
imul
push
sub
ja
or
fmul
and
push
mov
out
xor
xor
add
cmp
js
jns
cmp
cmps
test
add
jno
pop
retf
jg
mov
dec
or
jno
and
adc
popf
fnstsw
push
pop
jg
icebp
into
lea
xchg
(bad)
in
or
(bad)
dec
lds
push
cmp
movs
sub
mov
xor
fidivr
push
popf
arpl
push
lds
xor
pop
cdq
out
inc
adc
dec
lea
mov
push
cs
call
dec
xor
sbb
cmc
call
gs
retf
mov
sub
lahf
ss
lds
gs
fidiv
pop
push
stos
inc
fwait
cmc
xlat
sti
push
cmp
ins
or
xor
out
cdq
pop
es
pop
jg
scas
push
adc
hlt
xor
sahf
clc
xor
bound
into
shl
push
mov
je
dec
mov
(bad)
cld
mov
daa
xor
and
ins
retf
or
cs
mov
xor
inc
inc
adc
ret
and
fwait
adc
(bad)
loop
push
les
loop
pop
and
or
pop
(bad)
rdpmc
add
stos
dec
fcom
out
aad
lods
adc
ds
pop
rcl
sahf
sub
(bad)
iret
mov
inc
mov
mov
pop
push
push
aaa
(bad)
jp
imul
push
xchg
push
sbb
cmps
fbstp
ins
push
or
and
cmps
fld
js
sub
push
ret
fdiv
jb
jge
lds
(bad)
fild
dec
bound
test
imul
jns
cld
and
fisubr
jb
push
xor
movs
ret
jbe
xchg
inc
enter
mov
cmp
mov
(bad)
test
jae
outs
pushf
pushf
jmp
call
es
mov
sbb
xchg
adc
leave
mov
xchg
sub
int3
sub
mov
pushf
enter
dec
and
cwde
clc
dec
rcr
pop
add
aad
jecxz
ja
stos
xlat
adc
xchg
add
inc
push
jns
loop
push
sbb
mov
cmovnp
cli
dec
call
xchg
sub
push
fwait
push
xchg
jle
retf
or
xchg
scas
daa
dec
es
mov
mov
sar
cmps
call
adc
fcomp
dec
outs
(bad)
mov
xchg
add
outs
sub
and
or
addr16
repnz
retf
je
fld
cmp
sub
pop
hlt
push
xlat
mov
je
inc
xchg
test
push
pop
addr16
sub
hlt
cdq
jb
mov
mov
xchg
pop
js
or
xchg
(bad)
dec
and
and
adc
mov
adc
sub
jae
pop
add
xchg
cmps
xchg
mov
lods
jmp
pop
mov
repnz
test
addr16
sti
or
movs
inc
push
das
loop
jmp
ins
ja
mov
loope
test
jle
inc
(bad)
jge
(bad)
mov
pop
in
mov
lds
and
out
std
in
mov
jnp
push
scas
mov
inc
inc
int
pop
xchg
xchg
xor
das
test
cmp
retf
cmp
lods
stc
jmp
dec
pop
pop
pop
cwde
dec
cmp
fisub
inc
sahf
imul
pop
and
push
ins
jmp
jae
sub
cmp
jmp
ret
nop
retf
stos
shl
sar
adc
imul
mov
dec
int3
mov
(bad)
repz
xor
push
push
mov
rcl
adc
cmp
mov
pop
sub
je
dec
jbe
ret
rcr
aaa
outs
lahf
mov
adc
dec
sub
sub
cmp
iret
xor
lods
pop
dec
jmp
cmp
sub
pop
cdq
inc
enter
sub
fndisi(8087
addr16
sti
loop
adc
cwde
mov
mov
neg
cmps
push
adc
neg
stc
inc
pop
pop
addr16
ret
push
in
ds
xchg
and
retf
jne
xchg
adc
popa
cmp
cmp
pushf
xchg
and
dec
out
cdq
xchg
fwait
aam
shl
xchg
lock
je
test
add
in
adc
jp
int3
or
cdq
test
cmp
dec
add
retf
jmp
sub
cmps
or
mov
jl
addr16
fmulp
ins
xchg
js
pop
mov
movs
fiadd
rcr
dec
cdq
daa
retf
mov
jp
je
movs
xchg
outs
dec
sub
rol
cdq
fild
movs
cs
xchg
imul
mov
pop
or
rcr
mov
mov
jmp
jb
xchg
push
test
lea
ins
ret
movs
cmp
inc
jne
int3
sahf
repz
or
mov
out
in
repz
addr16
xchg
lods
inc
mov
adc
inc
sbb
pusha
pop
inc
and
and
jne
dec
push
and
push
mov
stos
mul
mov
mov
leave
fisubr
add
movs
inc
aaa
sti
ds
shr
cmps
adc
mov
cdq
call
inc
inc
stos
in
leave
mov
add
xchg
lds
fisttp
pop
jp
std
xchg
mov
or
shl
jno
xchg
cmp
mov
cli
xchg
push
mov
xor
(bad)
jae
mov
fdiv
xlat
mov
or
or
mov
fmul
jns
retf
mov
test
enter
iret
xchg
lods
or
lds
and
call
into
xchg
and
jno
inc
adc
push
push
bound
int3
push
sbb
in
bound
sbb
dec
push
dec
stos
and
fidivr
in
mov
rcr
mov
imul
add
push
test
inc
mul
retf
das
cld
push
dec
out
mov
outs
ja
rcr
in
fidivr
mov
pop
stc
outs
stos
push
xchg
dec
and
nop
and
inc
push
jp
aam
adc
in
adc
xchg
pop
cmp
js
rol
test
call
push
mov
adc
stos
dec
shl
mov
mov
jl
pop
gs
add
and
loop
cwde
dec
fst
idiv
mov
cmps
xchg
pop
mov
push
out
push
int
xlat
mov
mov
leave
jns
in
xchg
hlt
mov
retf
lahf
xor
inc
pushf
jbe
inc
pop
lds
inc
push
add
pop
pop
ficomp
sub
fistp
out
sti
je
movs
add
add
mov
xchg
scas
mov
dec
ficom
out
xor
xor
aam
ja
stc
cmp
int
cwde
inc
sub
fdiv
mov
xor
mov
and
ss
add
das
xor
cdq
sahf
lock
fistp
mov
cmp
stos
xchg
push
test
push
cmp
push
push
dec
mov
mov
in
inc
rcl
sahf
mov
(bad)
rcr
pusha
out
int
xchg
loopne
mov
cmp
mov
jmp
xchg
inc
jno
jne
sar
test
mov
pop
pop
jle
sbb
cld
or
push
inc
or
shr
ins
arpl
jecxz
scas
ins
(bad)
(bad)
ja
cli
add
out
xchg
loope
mov
imul
fadd
inc
sbb
cmp
push
fdiv
fwait
inc
lahf
mov
jns
jg
lods
add
mov
mov
or
dec
xor
div
xchg
scas
stos
movs
push
adc
daa
out
adc
aad
or
fs
sbb
retf
pop
adc
mov
fist
ins
cmp
cli
arpl
aam
inc
sar
xor
and
push
push
push
jo
mov
add
addr16
test
repnz
mov
jbe
test
in
dec
add
and
push
mov
push
cmp
push
stos
fadd
jno
into
jp
in
xor
or
adc
inc
add
dec
sub
push
mov
shl
pop
loopne
pop
cwde
cmps
pop
pop
sub
es
enter
bnd
mov
idiv
test
mov
push
mov
stos
xchg
mov
adc
in
ret
retf
mov
jno
mov
call
(bad)
ja
stc
xor
adc
test
into
adc
out
adc
imul
sub
pop
or
push
loope
lods
bound
add
mov
inc
inc
mov
in
push
lods
pop
leave
push
push
mov
into
add
jge
loope
jo
pop
jns
or
pusha
in
test
and
inc
sub
pop
cmp
hlt
add
sub
or
clc
mov
inc
dec
dec
jp
cmp
xchg
ins
scas
ror
and
jecxz
ja
inc
add
imul
mov
cld
lods
push
lock
sub
gs
dec
fisttp
stos
int
xchg
cwde
cwde
dec
xor
mov
push
call
dec
push
das
cwde
xor
(bad)
fcmovu
jnp
enter
inc
pushf
jae
sub
xor
and
xor
je
inc
popf
or
or
and
xchg
xor
mov
idiv
movs
jbe
fcmovu
rol
cmps
inc
scas
ins
mov
cwde
dec
mov
ror
mov
mov
mov
div
movs
mov
push
cmp
ret
in
xchg
pop
ds
sub
or
lods
dec
sub
and
pop
outs
(bad)
jmp
sbb
data16
adc
cmps
dec
test
(bad)
push
jo
inc
ins
dec
sub
adc
pop
fwait
or
sbb
das
adc
jecxz
sub
fucomp
and
inc
(bad)
aaa
adc
(bad)
jge
in
stc
push
test
sub
cdq
pushf
xor
sti
leave
adc
xor
mov
retf
fidiv
popf
(bad)
inc
outs
js
test
bt
test
std
xor
arpl
(bad)
mov
jge
adc
daa
inc
cmp
xchg
mov
sub
dec
es
mov
mov
xchg
mov
bound
dec
cmp
cwde
and
inc
cmp
test
push
sbb
adc
lods
ja
in
push
or
jmp
outs
ret
sbb
or
adc
test
dec
aaa
mov
jge
add
sbb
mov
les
shl
shr
hlt
js
xor
inc
adc
shl
mov
mov
inc
in
add
pop
pop
pop
or
and
adc
jle
loope
test
ret
movs
mov
or
jno
into
out
inc
cmp
inc
and
mov
and
sub
and
cmps
imul
jmp
mov
push
or
pop
in
mov
pop
cmc
in
aaa
scas
out
leave
push
jae
mov
fs
fs
and
sbb
mov
adc
xor
popf
dec
mov
mov
outs
enter
push
fwait
dec
int3
aam
shl
add
dec
ficom
in
push
or
cmp
jns
fcmovnb
add
jo
adc
cs
movs
pop
jnp
dec
rol
add
ds
jno
ds
shl
cld
xchg
in
stos
cmp
out
repz
icebp
mov
xchg
movs
add
mov
cmps
mov
mov
(bad)
mov
in
(bad)
fimul
imul
push
out
cdq
or
aad
das
xchg
xchg
inc
fmul
mov
mov
mov
xor
jnp
cmps
xchg
imul
push
daa
lods
sahf
pop
cs
add
xor
or
and
pusha
dec
mov
in
ror
pop
frstor
mov
scas
and
sbb
es
stos
ror
mov
mov
cmp
push
inc
out
xchg
jae
inc
and
fldcw
aad
div
loopne
inc
shl
test
add
sub
xor
sub
cmp
adc
cmp
jmp
out
fcmovnb
test
push
mov
loopne
xchg
loope
ret
mul
lds
outs
scas
shr
int
rcl
cmp
add
mul
pop
imul
(bad)
aad
not
and
cli
mov
retf
std
pop
push
clc
mov
not
std
xor
scas
iret
and
jb
mov
mov
or
inc
cld
xchg
jecxz
mov
mov
adc
test
js
std
lods
jmp
jbe
pop
jno
jecxz
push
pop
cmp
out
xor
add
loop
into
and
or
add
dec
adc
mov
sub
cld
(bad)
fisubr
xchg
push
adc
arpl
stc
mov
push
aad
mov
loopne
inc
adc
(bad)
jmp
pop
repz
and
or
pop
add
lds
mov
pop
test
mov
xchg
sar
mov
xor
(bad)
es
mov
daa
jns
sub
cmp
shl
mov
inc
cmp
ret
ret
mov
mov
adc
jne
cwde
fstp
push
shl
adc
not
xlat
mov
cmp
mov
(bad)
cwde
scas
inc
ret
jno
mov
jns
or
popf
repnz
dec
sbb
rol
scas
xor
repz
mov
pop
push
shl
sbb
sbb
stos
push
fist
or
aad
mov
inc
jg
rep
mov
test
daa
cli
ret
jg
cmp
or
pusha
pusha
fdivrp
lods
arpl
data16
push
sub
cmp
cmps
loope
das
pop
mov
ds
xor
iret
xor
dec
std
mov
push
stc
mov
xchg
loop
push
adc
imul
mov
retf
sbb
mov
adc
pop
arpl
or
mov
push
stos
and
adc
lods
add
mov
push
psrlq
popa
inc
stc
bound
idiv
sar
pusha
push
jb
shl
jmp
sbb
fist
neg
out
mov
das
mov
fsubrp
(bad)
push
movs
fcom
ret
data16
sub
aad
mov
mov
aas
fild
cmp
or
loop
push
in
sub
mov
retf
cmp
sbb
nop
mov
test
dec
dec
aam
inc
js
call
stos
xor
push
movs
xchg
lods
in
(bad)
jno
or
je
ret
jecxz
retf
ss
(bad)
push
jne
shl
stc
scas
ret
les
push
mov
fild
call
ss
pop
cmps
rol
test
adc
popf
test
retf
(bad)
out
mov
adc
xchg
push
(bad)
sbb
jne
sub
dec
test
or
adc
push
nop
sbb
jnp
sub
mov
mov
push
sub
scas
pop
jmp
rcr
mov
mov
int
fmul
in
sub
enter
rol
fmul
movs
icebp
int
adc
sub
hlt
mov
pop
add
data16
fbld
add
cdq
addr16
lds
mov
mov
call
dec
mov
ins
mov
adc
test
xlat
xor
lahf
inc
loop
mov
out
aad
loope
inc
push
ret
dec
adc
leave
outs
add
dec
mov
mov
sbb
or
mov
aad
fs
rol
cdq
xor
imul
add
jne
xor
inc
retf
sbb
outs
cmp
arpl
mov
mov
or
sub
mov
and
idiv
xchg
clc
into
outs
repz
mov
or
mov
test
push
outs
ds
pop
lods
xor
imul
loopne
inc
mov
xchg
dec
pop
das
aaa
jle
test
jecxz
and
jo
scas
scas
fs
(bad)
xlat
mov
outs
ficom
loopne
cmp
add
out
mov
push
scas
xor
jmp
test
dec
push
scas
in
pop
adc
jl
jmp
sub
xor
pusha
hlt
or
popf
xor
sub
mov
popf
mov
wrmsr
adc
imul
pop
cli
test
retf
mov
adc
mov
mov
inc
push
and
mov
movs
and
(bad)
leave
or
sub
inc
mov
xchg
xor
ins
push
xchg
shl
xchg
out
hlt
cmp
rcl
scas
jo
sbb
test
cmps
icebp
fsubr
data16
push
rcr
mov
xor
push
gs
js
scas
ret
and
dec
in
xor
lods
repnz
test
add
or
(bad)
add
jbe
jl
xchg
sbb
xor
pop
xlat
pop
dec
jmp
lods
movs
add
mov
dec
in
mov
inc
enter
pop
mov
push
lahf
cmp
xchg
sub
dec
sbb
sub
mov
cmp
jae
jl
pop
dec
and
push
jo
jae
push
icebp
sbb
movs
in
movs
and
hlt
mov
mov
int3
call
mov
sbb
call
sbb
loopne
call
push
inc
jae
call
pop
dec
pushf
adc
add
xor
ret
ficomp
movs
mov
retf
lahf
dec
cli
adc
or
add
xlat
into
sbb
je
retf
js
aam
mov
out
inc
out
sbb
in
stc
push
fidivr
js
xchg
std
pushf
std
(bad)
int3
adc
(bad)
out
mov
out
push
es
xor
(bad)
pop
xor
mov
inc
xor
xor
dec
cmp
dec
fstp
add
push
dec
lods
ss
enter
inc
sub
pop
fmul
jmp
scas
mov
sbb
(bad)
aaa
ret
and
pop
push
jne
jl
movs
xor
xor
cmp
loop
out
sub
jae
fcom
mov
(bad)
sbb
or
pop
dec
fisubr
cwde
int3
sbb
pop
repz
pop
nop
inc
es
out
mov
fidivr
mov
(bad)
rol
push
shl
pop
mov
out
or
xlat
xchg
or
cmp
dec
cmp
inc
pop
out
mov
outs
cmp
std
aaa
lods
or
(bad)
aam
add
xor
add
ficomp
movs
sbb
hlt
jb
xchg
inc
adc
in
xchg
pop
icebp
jno
xchg
repnz
lds
sbb
in
cmp
cmp
mov
test
add
dec
xor
icebp
jp
fidiv
jge
cmp
mov
inc
(bad)
sub
add
mov
pushf
cmp
sub
mov
adc
dec
int3
jge
dec
adc
scas
mov
in
movs
sub
and
int3
cs
(bad)
mov
mov
xor
or
inc
push
ret
movs
out
cmp
jmp
sub
les
popa
fwait
loop
jo
jb
fstp
push
push
sbb
xor
ins
mov
adc
dec
push
aad
fisttp
je
push
pop
and
(bad)
pop
inc
icebp
inc
mov
mov
enter
mov
lods
retf
add
mov
add
sar
mov
pop
in
mov
dec
push
imul
or
push
pusha
retf
lds
aas
push
or
adc
xor
sub
pop
or
mov
inc
sub
fs
ds
add
mov
cmp
sbb
lods
gs
xor
outs
call
dec
push
sbb
and
fistp
in
or
daa
imul
shr
es
sbb
jecxz
and
repz
cmp
loope
xchg
and
loope
mov
mov
pop
ins
mov
inc
in
jge
and
call
xchg
inc
lahf
mov
pop
and
fld
pop
jae
jl
jo
pop
pop
inc
push
mov
or
mov
ja
sti
mov
cmp
outs
shr
cwde
adc
(bad)
sub
aas
push
and
call
mov
jmp
xchg
ror
xor
jl
jo
adc
sahf
mov
push
cmc
arpl
push
pop
mov
pusha
mov
fwait
and
add
push
ror
or
push
mov
test
popf
inc
sub
cs
int
out
lahf
hlt
imul
add
and
jp
mov
les
lods
(bad)
mov
test
mov
sar
cmp
not
out
dec
jl
loopne
std
out
jne
xor
mov
dec
cmp
ret
(bad)
xor
cdq
mov
call
icebp
retf
pop
stc
pop
jl
fdiv
and
and
dec
enter
adc
bound
gs
lds
call
out
stc
out
push
push
dec
jae
popf
in
inc
in
adc
das
push
icebp
xor
cmp
mov
xchg
sub
ret
jl
fwait
ins
mov
cmp
fild
ins
(bad)
dec
(bad)
jle
aaa
nop
inc
push
jmp
mov
sub
test
ja
test
mov
les
mov
pop
xor
outs
jg
push
fild
repz
pusha
movs
scas
das
dec
jp
mov
add
not
push
mov
pop
pop
imul
sub
retf
inc
pop
adc
xchg
lods
ins
fld
pop
call
jmp
call
arpl
repz
ja
sub
jo
cmp
mov
hlt
ja
lahf
mov
ss
(bad)
inc
adc
dec
ret
popf
jle
sbb
aad
test
or
dec
enter
(bad)
loopne
lods
popa
pop
pop
push
jns
aam
retf
add
mov
adc
mov
mov
mov
leave
pushf
jno
jle
mov
push
sub
add
call
pop
add
lods
(bad)
idiv
shr
test
inc
or
push
iret
cld
xchg
push
arpl
pop
test
fidiv
loope
sub
aam
inc
pop
ins
xchg
mov
dec
sub
and
les
mov
mov
push
sbb
jmp
in
mov
fiadd
xchg
mov
xchg
test
std
ror
jae
mov
inc
or
pop
add
inc
pop
in
cdq
mov
ss
add
or
div
cmps
mov
push
sub
push
push
daa
add
cmp
mov
scas
ja
cmps
cwde
cld
xchg
ror
rcl
mov
dec
leave
sbb
jno
out
jb
inc
mov
pushf
adc
mov
or
pop
cdq
add
dec
test
push
mov
and
pop
jle
or
jns
pushf
add
or
outs
fld
cmp
stc
dec
ss
xlat
mov
jbe
cli
push
data16
and
jle
test
int3
lods
or
xchg
in
out
pop
fcmovb
xchg
scas
adc
movs
sub
cmp
popa
sahf
inc
jmp
es
jnp
cmc
xchg
scas
int
dec
lahf
and
les
scas
das
mov
test
outs
jbe
sbb
xchg
mov
xchg
dec
sbb
mov
push
or
cmps
pusha
enter
nop
pop
and
test
mov
pop
push
std
idiv
xchg
jne
ja
cdq
push
jne
xchg
fwait
pop
mov
js
xchg
jmp
lahf
hlt
push
nop
jg
or
adc
in
clc
ror
xchg
and
jg
bound
stc
inc
lea
imul
sub
jmp
test
icebp
push
mov
xchg
retf
fistp
scas
mov
xchg
sahf
je
imul
or
or
es
jb
enter
dec
mov
les
cmps
jmp
pop
pop
and
das
out
test
scas
(bad)
inc
jge
ds
pop
jmp
call
lea
push
xor
jg
mov
(bad)
in
jno
push
std
dec
cwde
addr16
add
adc
push
je
xchg
cmc
sbb
xchg
add
inc
repz
mov
add
xor
push
in
loop
mov
cmps
add
iret
jmp
mov
mov
(bad)
xor
dec
mov
rcr
add
jbe
int
mov
(bad)
cmps
ror
lahf
and
test
call
ret
repz
mov
in
and
lock
adc
(bad)
and
int
call
adc
out
leave
sti
(bad)
ins
retf
mov
xchg
loopne
or
mov
cld
or
xchg
mov
int
adc
mov
mov
xchg
aam
push
xor
cmp
fsub
jae
push
push
fisttp
rcl
dec
in
enter
rcr
mov
fst
pop
(bad)
xchg
test
mov
inc
pop
inc
or
sbb
call
bswap
pop
adc
push
add
shl
inc
mov
mov
int
iret
sbb
push
jmp
idiv
(bad)
out
mov
fs
das
cmp
mov
jnp
ficomp
adc
mov
sbb
push
test
mov
test
pop
ins
jg
dec
and
je
jl
mov
dec
lods
cmp
sub
mov
push
ss
fidiv
mov
test
popf
jae
in
ja
(bad)
mov
jno
jmp
outs
ret
mov
push
push
push
mov
sub
aaa
(bad)
mov
cmps
xchg
cmps
xor
addr16
adc
cmc
ror
in
shl
inc
sti
call
jns
pop
dec
adc
sub
icebp
test
fs
push
pop
mov
cmps
nop
push
mov
or
dec
shl
push
or
and
sub
xchg
mov
frstor
jp
pusha
jmp
inc
mov
movs
cmc
idiv
inc
sub
xor
ja
jmp
pop
mov
pop
xchg
inc
scas
inc
add
js
adc
lods
lods
(bad)
xor
adc
mov
and
or
push
aas
jns
cmps
mov
fidivr
cwde
aad
repnz
jmp
ret
mov
dec
push
mov
dec
daa
cmp
dec
mov
jo
rdmsr
test
(bad)
(bad)
mov
int3
jle
clc
jle
sub
or
add
repnz
iret
ret
or
mov
push
xor
sbb
xchg
test
into
sbb
cld
jge
xor
inc
retf
pop
push
call
hlt
mov
sub
xor
ret
rcl
mov
and
test
test
mov
jmp
sbb
and
mov
fucomip
or
dec
push
xor
nop
add
jg
sub
push
adc
sbb
jbe
mov
pop
das
and
out
dec
dec
mov
dec
std
push
xor
and
cmp
jle
push
ret
mov
lods
xlat
mov
mov
popa
adc
sub
xchg
sub
sbb
and
sbb
pushf
cld
jge
mov
int
or
jmp
pop
adc
into
xchg
daa
jmp
adc
jmp
icebp
pop
mov
aaa
jmp
enter
ds
xchg
pusha
addr16
dec
icebp
mov
pop
mov
cdq
xchg
push
cmp
int3
loope
add
fwait
test
out
das
pop
jns
jae
xchg
xchg
(bad)
fstp
out
fnstsw
or
push
cmp
cmc
out
cmp
mov
cmp
adc
push
into
lods
iret
xchg
cli
add
pop
or
call
fs
popf
test
adc
outs
push
sbb
in
mov
or
out
mov
imul
sbb
in
(bad)
jo
pop
fnstenvw
fist
add
repnz
sub
or
std
jae
int
mov
and
push
push
xor
dec
add
pop
ret
(bad)
xor
dec
scas
test
lahf
cwde
xchg
pop
jecxz
mov
jg
cli
dec
jo
int3
fadd
pop
jae
retf
stos
cmp
mov
lock
jno
sbb
push
and
pop
pop
mov
dec
mov
sbb
add
nop
dec
aad
sub
cmp
push
jo
jo
ds
sub
retf
xor
or
push
jnp
test
in
hlt
push
sub
mov
pop
jb
dec
pop
sub
cli
ins
xchg
mov
rcl
cmc
movs
ret
push
and
cmps
and
mov
sub
bound
aas
pop
cld
inc
and
jmp
(bad)
movs
sbb
xor
mov
lds
stc
mov
(bad)
jecxz
leave
ror
inc
shl
(bad)
push
loopne
push
adc
mov
call
jo
arpl
loop
add
mov
popf
call
aam
add
xor
cmp
icebp
test
adc
jb
cmps
push
xlat
lods
cmp
pop
jns
xor
(bad)
cmp
inc
cmp
mov
push
loope
push
xlat
(bad)
mov
pop
ins
leave
mov
adc
cwde
inc
push
jecxz
inc
stc
ds
jecxz
sub
dec
addr16
lods
scas
pop
popa
jle
jne
or
jne
lahf
clc
jne
sbb
nop
pop
sub
fcmovnb
inc
ins
jb
jbe
es
inc
sbb
adc
jnp
lods
sbb
test
mov
ins
shl
xchg
(bad)
sub
sub
pop
sbb
jae
or
cmc
stos
xchg
ins
rcl
or
push
and
stos
and
pop
xchg
test
mov
ficomp
pop
mov
bound
movs
fs
add
jne
outs
jmpw
mov
pop
push
jp
ins
out
call
cwde
sbb
pop
sub
icebp
sub
xchg
jmp
and
jecxz
sbb
addr16
xor
test
repnz
lahf
retf
adc
outs
int3
mov
(bad)
loope
ins
loopne
js
stos
xor
and
js
jp
jmp
addr16
xchg
and
mov
rcr
mov
sbb
es
xor
jmp
pop
int
pop
pop
sub
cdq
lea
xchg
stc
clc
sub
ret
adc
sahf
sub
clc
dec
fidiv
(bad)
xchg
imul
aaa
push
(bad)
aas
mov
mov
mov
cmp
xchg
out
ja
mov
cmp
push
ja
mov
dec
shl
retf
jg
in
stos
sub
outs
adc
and
or
and
es
callw
xchg
lock
mov
pop
jp
int
mov
jns
in
mov
aaa
das
xchg
pop
jp
push
mov
mov
in
stos
and
mov
jno
test
adc
test
pushf
je
call
sbb
cdq
dec
leave
xor
xchg
sti
mov
sub
xchg
or
dec
outs
aas
into
adc
movs
sti
inc
xchg
out
push
fnstenv
lahf
retf
and
iret
mov
sbb
jp
std
add
sub
jge
test
jp
fisubr
out
cmp
lock
mov
xchg
aam
xor
leavew
iret
(bad)
fild
bswap
cmp
push
retf
fxch
push
or
fwait
sbb
jae
imul
and
inc
sub
pop
push
arpl
jno
(bad)
xchg
in
cmp
outs
jl
leave
mov
pushf
dec
lods
mov
or
push
jbe
push
(bad)
xchg
xchg
cmps
outs
cmp
xchg
xor
xlat
inc
mov
pop
xchg
jge
imul
sbb
adc
mov
cs
jne
xchg
push
pushf
daa
xor
ss
push
add
mov
aad
inc
movs
jb
sbb
aad
pop
xchg
sbb
adc
xchg
movs
dec
push
in
lods
mov
retf
cmp
pop
push
aas
out
scas
sbb
jne
hlt
lock
dec
jle
sar
push
icebp
cmp
push
mov
xchg
addr16
les
movs
in
cs
aam
cmp
xchg
cmp
je
popf
nop
in
jbe
dec
lea
cmps
clc
mov
sub
cmp
push
jnp
jae
(bad)
mov
mov
js
and
cmp
xor
inc
ds
pop
adc
addr16
movs
fidivr
xchg
cs
adc
inc
and
adc
aad
out
sar
adc
lea
leave
aad
lea
and
and
or
xchg
push
sar
cld
cmp
add
jg
fadd
shl
fmul
loope
cmp
test
jle
mov
call
or
cdq
xlat
cmc
xor
movs
jae
dec
gs
imul
ins
jno
lock
scas
mov
fstp
std
inc
push
sub
shr
or
hlt
call
aas
stos
fnstcw
bound
les
lds
mov
call
sub
ins
mov
ret
call
inc
rcr
mov
add
xor
rol
add
mov
dec
fimul
outs
inc
pop
adc
adc
fsub
xor
sahf
push
pushf
push
push
je
jmp
fs
fld
aas
or
ja
mov
dec
out
xchg
jle
and
fild
jb
fdivr
push
gs
adc
lds
xor
cmp
pop
lahf
add
clc
ja
push
push
daa
(bad)
iret
aam
sahf
mov
test
data16
jns
rcr
jp
punpckhwd
cmp
lods
test
mov
jecxz
xor
ds
cmp
sbb
add
nop
adc
add
and
pushf
xor
das
cli
mov
push
jbe
js
mov
popa
out
fimul
sub
(bad)
and
pop
je
xchg
add
repnz
mov
mov
sahf
xor
loopne
and
or
stos
leave
cmp
add
loop
test
push
and
fwait
in
inc
cmps
pop
xchg
add
aad
sub
mov
push
xlat
add
test
stos
jmp
data16
fld
les
scas
cmc
dec
sbb
adc
cmp
(bad)
ins
dec
adc
fistp
js
pop
adc
mov
(bad)
adc
or
faddp
mov
stc
mov
out
mov
in
sbb
shl
lods
fwait
mov
(bad)
mov
xor
inc
xor
test
in
add
cli
cmp
dec
push
cdq
sahf
jae
ror
jge
xchg
inc
pop
clc
fs
and
pop
cmps
jecxz
shr
sub
dec
cmps
push
int3
in
inc
repz
or
sub
jae
(bad)
out
adc
jnp
jg
mov
test
xchg
mov
pop
push
fldenv
icebp
push
pop
jb
xchg
outs
mov
sar
inc
xlat
enter
shl
call
xchg
sub
mov
rcr
hlt
les
dec
movs
es
sub
sub
mov
test
lock
dec
jno
inc
fcom
or
mov
mov
and
fisubr
xchg
std
aad
hlt
test
lahf
adc
stc
nop
add
scas
jne
inc
ror
ins
enter
rcr
pop
mov
inc
add
inc
sub
in
push
sbb
clc
(bad)
jns
xchg
dec
test
fwait
rol
dec
or
xchg
xchg
ret
loopne
not
jns
add
enter
xchg
sbb
inc
add
test
dec
movs
push
and
dec
adc
dec
fcom
sub
jmp
bound
sbb
in
sub
sbb
mov
mov
movs
retf
pop
push
mov
das
mov
xchg
xlat
dec
repnz
pop
or
pop
popf
and
adc
dec
sar
pop
cmp
pop
cdq
dec
dec
mov
xor
les
inc
or
jecxz
adc
outs
loopne
dec
or
push
in
cli
push
movs
sbb
inc
mov
jge
popf
popf
fstp
jbe
lods
sub
mov
sbb
push
push
gs
idiv
xor
int
fxch
jno
lahf
adc
outs
add
int3
(bad)
loope
push
js
popa
es
and
or
mov
or
xor
and
inc
jnp
xchg
sub
xchg
lea
jecxz
hlt
mov
adc
rol
push
clc
xor
or
and
mov
or
mov
jecxz
repnz
jmp
add
aaa
mov
jne
sbb
add
xchg
fs
leave
and
mov
ins
addr16
(bad)
movs
ja
data16
mov
dec
cli
test
push
pop
aad
mov
sub
(bad)
mov
xor
addr16
mov
(bad)
sbb
inc
jl
cld
jle
out
and
mov
clc
push
adc
or
out
test
popa
mov
popa
push
imul
xor
pop
sti
sub
sub
mov
cld
dec
cwde
pop
cmp
popf
push
jge
mov
jg
(bad)
sbb
dec
dec
adc
or
inc
pusha
pop
jmp
xor
stc
lods
push
test
out
cs
adc
arpl
ret
pop
lock
inc
mov
pop
retf
jne
mov
push
retf
push
cdq
rcl
vpsrlw
xchg
les
mov
mov
ret
test
adc
pop
cmp
inc
sub
inc
ds
std
or
jno
fldcw
push
pop
cdq
mov
movs
jo
jmp
xchg
cmp
outs
sbb
xor
xor
cmp
js
sbb
inc
jmp
jmp
xchg
aam
call
jle
cld
dec
jmp
out
adc
popa
call
add
xchg
(bad)
jne
or
retf
xor
inc
or
jle
imul
mov
in
cld
out
mov
imul
inc
cwde
dec
cmp
ja
mov
ins
xor
inc
(bad)
popf
ss
(bad)
adc
jg
jmp
ret
icebp
adc
xor
mov
cmp
adc
sub
das
inc
das
inc
(bad)
mov
jne
mov
stos
outs
movs
sti
jge
push
(bad)
mov
push
mov
xchg
add
xchg
out
mov
lods
mov
mov
fidiv
icebp
mov
mov
int
sti
test
push
dec
and
in
add
clc
xchg
mov
pop
cmc
pop
push
cli
call
jne
xor
jae
movs
ins
loop
leave
out
or
ret
adc
fild
dec
ja
push
mov
lods
xor
or
and
push
dec
add
add
(bad)
dec
cld
dec
out
pusha
inc
xchg
push
es
sub
jne
pusha
cmp
fidiv
pop
pusha
cmp
(bad)
cmp
lock
jg
imul
call
(bad)
es
push
xor
jmp
mov
popf
call
pop
push
xchg
inc
jle
imul
cwde
push
jl
shl
call
ins
cmc
(bad)
dec
mov
sbb
retf
sub
push
mov
inc
mov
scas
pop
in
inc
sar
jnp
jmp
mov
shr
repnz
aaa
push
out
call
push
adc
cmc
sub
inc
adc
mov
dec
jo
dec
int3
jmp
retf
mov
and
sub
es
or
cmc
(bad)
iret
rcl
out
cmp
and
jecxz
fwait
sbb
or
inc
(bad)
sub
clc
mov
(bad)
icebp
sar
js
lods
add
and
adc
int3
loopne
mov
mov
push
rol
mov
mov
rol
xor
xchg
or
pop
aaa
fstp
ins
gs
call
mov
(bad)
cmp
push
xchg
xchg
aaa
cmp
add
inc
xchg
inc
push
xchg
inc
int
out
lods
inc
popa
ds
test
imul
shl
es
jnp
and
(bad)
mov
icebp
mov
(bad)
cdq
xor
adc
sar
inc
test
push
sti
adc
and
jge
jecxz
call
dec
or
or
std
mov
cli
and
pop
push
lods
lods
dec
jl
adc
and
retf
das
pushf
xchg
push
js
add
enter
adc
and
repz
mov
out
ret
and
pop
lahf
retf
shr
dec
mov
xor
mov
lods
lods
scas
movs
mov
inc
and
enter
test
xchg
xchg
push
pop
jg
dec
gs
aas
fs
rcr
jle
dec
cmp
inc
jb
or
mov
inc
xchg
add
fisub
and
pushf
jbe
shr
adc
push
cli
add
push
test
pop
dec
jle
cmp
jb
retf
and
imul
mov
pushf
sub
or
stc
and
push
imul
jle
xlat
adc
hlt
cmps
or
cmps
add
(bad)
loope
cli
pop
pop
sub
xchg
sbb
cld
mov
push
jl
(bad)
cmp
sbb
jb
pop
mov
cdq
sub
xchg
mov
sahf
cli
and
xlat
push
cmp
lock
sub
mov
movs
ss
out
adc
test
ja
mov
dec
fiadd
loopne
das
in
cmp
pop
mov
enter
stos
stc
outs
push
mov
in
dec
mov
data16
movs
sbb
lahf
cmpxchg
sbb
jbe
cmp
pop
xchg
dec
outs
mov
in
call
popa
outs
lds
pop
lods
or
jp
jbe
in
scas
xor
arpl
xchg
adc
stos
jge
test
mov
(bad)
icebp
dec
and
sahf
dec
adc
cmp
jmp
adc
jne
jae
fsubr
sahf
cli
cld
pushf
fld
inc
inc
cld
repz
sub
movs
adc
jmp
popa
inc
pop
fisub
in
iret
popf
xchg
xchg
stos
jmp
adc
adc
pop
loope
mov
cmp
sub
in
rcl
call
push
lea
lods
xchg
xor
ret
imul
jb
shl
jno
dec
sti
sbb
ss
jecxz
(bad)
push
mul
cmp
enter
test
stos
imul
add
mov
pop
out
jmp
push
push
movs
cmp
dec
jmp
pop
jmp
jp
je
cmp
xor
inc
adc
sbb
xchg
and
(bad)
sti
cmp
sub
mov
xchg
jg
add
rcl
mov
jns
ins
xor
ins
sub
popa
xchg
fs
aaa
inc
stos
into
bound
jbe
xchg
loopne
jl
dec
imul
into
mov
repnz
cdq
dec
mov
loop
lock
stos
xor
jo
sbb
test
sub
es
cmp
jl
rcl
aas
ins
add
fisub
repnz
sub
xchg
sub
and
mov
movs
out
dec
addr16
mov
xor
in
adc
cmp
test
inc
iret
jle
xor
pop
popa
xor
push
pop
stos
out
ins
cmp
jae
adc
int3
or
xchg
sbb
pop
and
mov
pop
call
xor
or
xchg
stos
mov
call
test
arpl
cmp
(bad)
or
test
lahf
or
inc
sbb
inc
lods
and
pusha
push
xchg
movs
setl
push
movups
adc
out
mov
or
add
pop
adc
inc
xchg
(bad)
xor
ja
inc
les
sub
inc
add
das
pop
iret
loope
out
inc
xchg
sbb
sar
mov
inc
inc
(bad)
pop
jmp
xchg
xor
in
mov
into
pop
dec
lea
or
rcr
mov
inc
push
cli
aad
test
pop
pop
enter
arpl
repz
xlat
dec
pop
push
call
rcl
pop
daa
sub
sub
jno
ror
ins
dec
aad
add
adc
cmp
mov
push
bound
dec
add
into
push
add
xor
mov
jecxz
push
sub
shl
push
stos
movs
lods
not
mov
add
ret
movs
and
and
xchg
inc
push
cdq
loopne
out
sub
push
shl
xor
sbb
inc
and
add
and
mov
inc
ds
(bad)
sub
add
clc
and
jmp
(bad)
fld
sbb
mov
push
jno
add
fbld
and
sbb
test
loop
out
shl
add
xor
xchg
pop
sub
scas
add
xchg
out
ins
cld
jle
mov
inc
dec
dec
dec
add
and
dec
cmps
shl
rol
ja
bound
pop
mov
or
lock
popa
and
mov
add
cdq
paddusb
or
cs
push
and
cld
or
dec
inc
jp
dec
test
mov
xchg
outs
adc
sar
out
mov
cli
sbb
dec
adc
add
pop
push
jne
dec
mov
loop
test
mov
pop
push
idiv
add
dec
(bad)
mov
inc
mov
shl
std
dec
inc
mov
pushf
iret
and
fadd
sar
and
mov
ret
lods
xchg
mov
test
jno
and
sub
into
int
sbb
outs
mov
mov
sbb
push
cmove
xor
mov
xor
jb
dec
inc
xchg
dec
add
scas
adc
fidivr
into
pop
(bad)
loopne
shl
mov
mov
mov
sub
sub
ss
sahf
std
in
jne
and
std
fadd
xor
cmps
jecxz
ficom
mov
adc
mov
push
in
mov
mov
sahf
in
xor
enter
rcr
xor
cld
and
loope
jno
je
dec
adc
outs
dec
ret
push
icebp
loop
retf
sbb
lods
add
sbb
lods
scas
mov
lds
sbb
mov
push
push
ins
inc
cdq
and
lahf
sti
cmps
test
push
test
(bad)
test
shl
push
sbb
aas
sub
mov
test
sub
fnstsw
jnp
pop
jne
sbb
outs
test
aas
sbb
ss
cli
mov
iret
int3
pop
pop
xor
mov
lods
in
cs
adc
inc
pop
and
jbe
cld
movs
xchg
push
sbb
cld
cmps
cwde
mov
(bad)
mov
inc
in
cli
xor
xor
cmp
cmp
mov
test
scas
mov
inc
sbb
ja
(bad)
xor
and
cmps
and
std
idiv
jmp
lods
(bad)
mov
or
add
daa
scas
or
push
icebp
imul
pop
sbb
vpmadcswd
pop
mov
sbb
sbb
or
mov
imul
sbb
fs
icebp
shl
sbb
shl
jge
out
xor
cmp
sahf
sub
jg
cwde
push
sub
leave
cmp
mov
test
cmp
adc
xor
jmp
loope
mov
imul
gs
add
es
sub
add
pop
imul
push
sbb
push
es
enter
(bad)
sahf
nop
xchg
dec
mov
addr16
test
aad
mov
dec
xchg
adc
mov
mov
mov
loopne
mov
adc
adc
push
dec
mov
dec
test
fsubr
jae
nop
loope
enter
pusha
xor
push
xchg
je
and
mov
rol
fs
sahf
fild
stos
popa
xchg
iret
sahf
test
jle
adc
sub
pop
jp
jle
mov
iret
mov
shr
sub
sub
aaa
cmp
dec
ins
sbb
inc
or
adc
mov
xor
into
cmp
and
push
mov
cmp
sub
adc
aam
arpl
popf
cmp
sub
push
(bad)
dec
fld
push
sbb
in
mov
jge
inc
ret
call
clc
adc
cmc
test
in
sbb
inc
cmp
fs
mov
push
retf
pop
and
ds
add
arpl
ds
mov
cs
in
int3
cmc
rol
fimul
repz
xor
add
scas
in
ret
sub
jno
shr
push
mov
adc
ins
and
pushf
xor
imul
loopne
xlat
int
sbb
push
jg
adc
sbb
mov
push
pop
into
gs
fs
or
lock
mov
xlat
leave
add
mov
cmps
jp
adc
adc
retf
hlt
pop
xchg
ins
pop
adc
sbb
push
fs
lods
out
push
and
(bad)
(bad)
div
das
repz
fistp
jne
aaa
push
and
push
xor
in
int3
pushf
sbb
shl
lds
cmp
ja
sub
fld
mov
out
cdq
ins
push
call
mov
ret
mov
cmp
(bad)
ds
aas
push
neg
xor
icebp
dec
xchg
loope
repnz
xor
es
mov
adc
jmp
mov
jno
push
pop
and
push
fdiv
add
scas
call
das
mov
inc
sahf
pop
or
std
mov
test
and
out
sub
cwde
push
xor
out
mov
or
sbb
dec
ins
xchg
mov
mov
fisttp
aaa
retf
inc
and
adc
or
cmp
push
add
or
or
aas
scas
call
aam
(bad)
loopne
sbb
xchg
int
imul
jae
sub
movs
mov
les
lds
mov
sbb
jne
les
loope
cmp
in
add
(bad)
pusha
sti
mov
or
adc
jbe
cmp
pop
jmp
test
and
ins
sbb
xchg
retf
daa
or
jns
pushf
shl
call
sbb
cmp
call
ss
test
out
xor
sahf
add
fsub
fs
sub
cmp
mov
outs
aaa
lods
push
cmp
xlat
and
popf
mov
mov
mov
inc
pop
in
in
and
and
idiv
xor
cmp
rol
xor
or
das
inc
inc
push
retf
dec
sti
movs
test
scas
les
int3
push
pop
cdq
les
or
stos
dec
jmp
cmp
mov
je
inc
dec
jecxz
ss
push
stos
add
sbb
adc
cs
lea
outs
jnp
adc
and
mov
cmp
std
mov
mov
xchg
scas
scas
call
lods
cli
or
sbb
push
icebp
test
push
lahf
mov
mov
sahf
mov
std
mov
mov
shl
sbb
mov
sub
cmc
cmp
out
push
xor
jb
cmps
ror
and
cmp
in
jbe
and
mov
shl
mov
jbe
enter
mov
or
cmp
sar
mov
fld
or
xchg
cmps
xor
mov
leave
movs
xlat
pusha
mov
fmul
xor
es
sbb
repnz
leave
mov
rol
adc
hlt
sti
mov
mov
or
ja
sbb
adc
aad
push
adc
ins
neg
mov
test
adc
xchg
xchg
mov
mov
in
cdq
test
loopne
pop
aas
out
test
dec
out
pushf
icebp
punpcklbw
icebp
push
jbe
xchg
enter
add
mov
xchg
fistp
cdq
jns
jne
enter
cmp
mov
movs
rol
or
mov
push
cs
cwde
pop
cmp
xchg
enter
(bad)
xchg
or
sub
les
adc
sbb
mov
daa
or
fiadd
jno
xor
iret
loopne
mov
cld
loopne
and
sahf
in
cmp
clc
jb
adc
push
xor
xor
mov
cmp
neg
cmp
fiadd
sbb
in
add
jnp
add
mov
retf
mov
sti
jg
jg
loopne
mov
mov
sub
pop
adc
mul
xchg
push
add
sti
mov
mov
cmp
pop
dec
popf
fs
add
loopne
aam
add
repnz
push
or
adc
jmp
sub
aaa
bound
pop
out
cmp
(bad)
and
clc
clc
dec
xchg
adc
sub
push
push
sbb
jne
(bad)
cmp
fcmovnb
enter
xchg
shr
movs
test
out
push
adc
int3
lock
stos
call
xor
pop
mov
outs
mov
cmp
adc
cmc
fs
mov
lods
xchg
dec
jnp
cmp
mov
repz
xchg
or
shl
adc
push
or
leave
mov
lahf
jmp
xchg
lock
push
out
pop
rcl
or
push
jne
(bad)
push
(bad)
push
mov
sbb
inc
lods
shr
ret
jno
test
mov
push
hlt
cmp
sub
xor
das
test
lods
lahf
jo
out
mov
les
mov
ins
hlt
lahf
or
add
fldenv
lock
pop
xlat
lods
sub
and
sbb
sbb
pushf
mov
rcr
iret
(bad)
xlat
cwde
ror
lods
(bad)
ret
push
cwde
pop
mov
mov
dec
lahf
add
push
mov
xor
push
pushf
(bad)
rol
mov
repz
mov
enter
lds
cmp
(bad)
inc
cmps
xchg
fnstenv
fwait
inc
ins
cmp
add
inc
push
add
mov
mov
xlat
scas
shr
ror
fistp
je
push
repz
mov
mov
dec
add
cmp
retf
cwde
loop
out
imul
sbb
aad
test
pop
jecxz
sub
jg
cmps
sub
mov
icebp
stos
arpl
push
loope
loope
leave
cmp
cmps
shr
jno
popf
(bad)
icebp
int
dec
ins
mov
adc
or
ret
dec
fsub
loope
test
stos
adc
pop
jns
xchg
mov
fldenv
mov
call
int3
or
push
pushf
rcl
lods
inc
xchg
or
xor
stos
shl
cmps
cmc
push
fnsave
dec
mov
mov
outs
leave
mov
cmp
lods
(bad)
ror
movs
pop
out
jmp
test
ja
inc
enter
or
pop
and
pop
cmp
xor
sbb
rcl
rol
adc
sub
inc
popa
cwde
mov
aaa
and
arpl
or
jbe
xor
push
mov
(bad)
xor
xchg
mov
mov
dec
mov
shr
push
jg
push
jg
sar
movs
xor
out
dec
pop
stos
lods
lea
scas
add
test
add
mov
ret
cdq
rol
pop
xchg
fwait
sbb
push
and
iret
or
or
sub
ja
adc
cmp
jp
push
cmc
jp
mov
xchg
mov
push
or
push
cmp
nop
outs
vprotd
push
jmp
es
imul
mov
ins
adc
push
dec
(bad)
or
cmp
inc
push
xchg
sbb
dec
ret
fisubr
fidivr
loop
cmp
(bad)
mov
mov
dec
sbb
test
jp
jmp
mov
imul
pop
out
mov
xchg
mov
mov
dec
or
pop
(bad)
stos
xor
outs
or
and
jl
aaa
cmp
sbb
adc
inc
sbb
in
push
inc
xor
push
scas
cmp
pop
and
pop
test
ins
in
sub
pop
add
pop
and
xchg
mov
mov
pusha
stc
add
sbb
push
aaa
call
mov
push
mov
pushf
arpl
in
inc
mul
push
sbb
fiadd
outs
cmps
shr
rcl
pop
in
cs
sti
test
(bad)
stc
pop
jb
loope
pusha
or
fidiv
in
push
out
adc
cld
movs
jmp
test
pop
repz
jbe
(bad)
cmp
and
mov
mov
cmp
nop
ficom
and
push
loop
adc
pop
ror
mov
sbb
cmc
jno
pop
and
shl
xchg
inc
sbb
test
mov
dec
lods
xor
pop
pop
repz
lods
adc
xor
dec
pop
test
leave
(bad)
fmul
xchg
mov
out
jns
inc
mov
jmp
out
sbb
mov
aad
outs
(bad)
push
push
stc
dec
(bad)
pop
ret
std
mov
mov
out
dec
loop
(bad)
and
cmp
dec
cmp
out
inc
aaa
call
ror
inc
or
pusha
add
mov
fstp
mov
aam
sub
aam
jb
and
jge
xchg
js
fs
imul
movs
jbe
xor
stos
cmps
sbb
adc
mov
mov
fldl2e
mov
shl
aaa
adc
dec
cdq
push
dec
adc
sar
jge
in
in
test
pop
add
(bad)
cmc
jmp
mov
test
adc
je
xor
shr
dec
fdivr
sub
fadd
jno
mov
xor
inc
in
pop
jmp
fistp
dec
inc
push
pushf
lahf
mov
pop
cli
(bad)
cs
push
mov
inc
push
inc
push
call
push
xchg
add
pop
cmp
outs
out
inc
out
jg
mov
frstor
sbb
mov
mov
pop
mov
jmp
rol
pushf
xor
fidiv
xchg
pop
xor
dec
jns
mov
sahf
in
dec
push
fs
pop
ficomp
int
scas
pushf
pop
nop
sbb
ja
repnz
sbb
and
imul
add
push
mov
mov
jo
into
push
icebp
nop
test
pusha
jnp
stos
mov
sub
popa
sbb
cmp
sub
dec
sbb
and
xor
xor
sahf
jne
jno
and
leave
shl
mov
int
les
xchg
and
jns
ret
popa
push
ss
mov
mov
or
movs
xor
lds
pusha
push
mov
sbb
xor
mul
imul
retf
and
fsubr
mov
loope
cli
xchg
xchg
test
(bad)
lds
repz
mov
fsubr
ins
sbb
nop
dec
pop
(bad)
jg
push
jecxz
dec
repz
(bad)
mov
and
or
scas
icebp
into
mov
test
daa
sbb
and
in
or
pop
mov
mov
addr16
jmp
(bad)
in
adc
add
sbb
and
aad
popa
mov
inc
push
pop
mov
pop
mov
cmp
push
fwait
repnz
int
xor
dec
cmp
mov
mov
cmp
push
xchg
sub
(bad)
jmp
jno
fwait
or
lock
mov
sub
sbb
adc
xchg
xchg
pop
shl
add
or
cmp
mov
sub
cmp
lea
scas
je
in
mov
and
idiv
shl
(bad)
push
popa
sti
jl
lods
sahf
dec
inc
add
sbb
inc
call
jo
sub
push
(bad)
mov
shl
mov
jae
cmp
shr
cmps
test
fbstp
add
push
push
daa
arpl
pop
mov
inc
jge
cmp
clc
xor
mov
add
mov
(bad)
mov
xchg
jns
jbe
ret
push
xor
je
test
pop
jno
pop
xlat
outs
xor
pop
xor
(bad)
out
mov
std
pop
push
xor
cmp
lahf
pop
jmp
xchg
jl
mov
movs
or
cmp
dec
mov
push
jle
add
imul
push
shl
mov
movs
inc
out
shl
adc
call
adc
mov
mov
mov
and
cmp
jle
int3
lea
mov
inc
loopne
daa
cdq
jle
stc
jno
and
mov
int
in
scas
arpl
lahf
sub
xchg
push
shl
data16
xchg
add
rol
pop
test
ds
adc
add
ds
inc
(bad)
push
dec
test
std
adc
nop
clc
addr16
lea
rcl
js
push
ret
jno
cmp
adc
push
cmp
mov
cld
mov
in
xchg
push
retf
xor
fidivr
cdq
sbb
sbb
dec
(bad)
dec
mov
xor
cmp
je
enter
rcr
(bad)
retf
jne
dec
sbb
jb
ja
imul
xor
call
imul
outs
(bad)
mov
stos
mov
mov
int
(bad)
jmp
fbstp
(bad)
popf
lds
mov
sub
loop
stc
not
psadbw
mov
xchg
dec
test
push
cmc
pusha
sahf
adc
addr16
mov
xlat
jle
popa
mov
mov
sub
sub
jno
fsubr
cmc
test
push
dec
pusha
ins
out
jae
adc
sub
xchg
sub
inc
inc
fdiv
loop
jae
aam
mov
mov
add
int
repnz
sub
scas
pop
loopne
push
inc
mov
mov
retf
setle
outs
adc
movs
jp
leave
xor
(bad)
retf
aam
cmps
mov
xor
sub
push
js
das
sub
mov
pop
mov
stos
add
jmp
sub
es
xchg
xor
and
dec
ret
movs
sub
xor
jp
jbe
push
out
or
push
jbe
jae
xchg
cmp
and
mov
inc
xor
add
jmp
sahf
(bad)
mov
out
push
jp
adc
fnstenv
mov
scas
adc
mov
lods
in
ja
mov
xchg
push
in
shl
xor
xchg
pop
mov
mov
out
xchg
jmp
adc
stc
loope
(bad)
xor
or
mov
cdq
cmp
ret
xchg
out
inc
mov
cmp
and
setb
push
mov
jbe
dec
mov
xor
push
(bad)
push
cwde
jnp
mov
mov
xor
adc
xchg
movs
cmovo
lahf
add
test
jp
ret
(bad)
sub
addr16
int3
inc
inc
movs
pop
mov
jno
out
gs
pop
mov
arpl
cmp
fild
push
fst
nop
adc
adc
push
ins
hlt
push
push
push
in
call
mov
pop
mov
sbb
xchg
and
jmp
not
dec
cdq
lea
movs
push
adc
xchg
mov
loopne
and
push
sub
jno
lahf
outs
sbb
cdq
mov
out
icebp
test
mov
popa
mov
idiv
sbb
or
lahf
mov
imul
rcl
hlt
mov
into
and
daa
dec
mov
leave
shl
xchg
mov
push
dec
xor
retf
jecxz
in
in
outs
popa
add
fst
or
out
aas
mov
shr
pop
push
aas
popf
xchg
mov
sahf
mov
mul
stos
jbe
data16
or
outs
inc
jge
or
cmp
xor
test
in
dec
jae
cmp
fidivr
scas
inc
mov
mul
daa
arpl
out
add
adc
inc
mov
pusha
mov
call
add
jl
jae
out
pop
sub
pop
inc
jae
(bad)
pop
test
fdivr
jle
mov
sbb
xchg
sbb
cmp
mov
add
inc
js
in
mov
pop
aaa
cmps
cmp
and
fcmovne
loopne
mov
xor
lahf
cs
dec
scas
xor
adc
imul
dec
jl
movs
(bad)
cwde
sbb
(bad)
dec
scas
push
push
stc
ss
mov
cmp
mov
iret
lea
and
xor
or
dec
jg
test
dec
mov
xchg
sahf
in
cmp
stos
push
(bad)
cli
(bad)
lahf
mov
inc
mov
out
pop
xor
call
mov
icebp
scas
jecxz
loopne
pop
cmp
adc
(bad)
mov
fs
das
adc
test
mov
push
adc
rcr
sbb
jno
fcomp
dec
fcomi
(bad)
xor
pop
and
jb
inc
push
fs
in
aam
test
in
or
inc
mul
stc
pop
push
push
es
xchg
xchg
popf
cld
mov
enter
sub
sbb
cmps
mov
and
jecxz
mov
or
mov
sbb
call
mov
pop
leave
inc
dec
add
sbb
das
lds
cmp
add
push
adc
inc
push
xor
xchg
ins
inc
stos
push
pop
xchg
jmp
scas
inc
xchg
int
stc
push
in
call
(bad)
cs
cmp
jmp
dec
mov
lahf
mov
js
push
inc
xor
pushf
cs
inc
pop
mov
in
cdq
sbb
and
inc
mov
or
push
inc
fild
ror
retf
shl
lock
dec
mov
leave
push
mov
in
std
mov
pop
push
jnp
test
leave
stc
mov
sub
ficomp
push
or
adc
or
cmp
in
dec
je
std
jmp
stc
out
outs
loopne
sahf
jmp
lahf
nop
aad
je
jle
push
cmp
inc
icebp
and
push
adc
dec
int
jnp
mov
scas
cmps
retf
lahf
iret
push
call
sub
mov
jmp
add
in
pop
mov
shl
dec
imul
xchg
iret
in
mov
xchg
(bad)
(bad)
fbld
mov
data16
and
inc
les
xor
rol
mov
rcr
int
bound
outs
cli
push
mov
mov
push
and
or
add
out
push
pop
push
mov
call
daa
push
mov
mov
popa
arpl
loopne
cmps
pusha
rep
mov
mov
cmc
push
repnz
cs
out
xchg
iret
pop
push
sub
fs
popa
push
inc
push
xchg
es
movs
mov
int
jmp
and
gs
xchg
retf
popa
nop
mov
inc
(bad)
inc
add
mov
enter
in
and
test
sub
mov
clc
ins
and
out
sbb
ret
inc
pusha
or
call
pop
push
lods
add
mov
sbb
mov
cmp
inc
inc
(bad)
jno
cmp
add
dec
retf
xor
nop
(bad)
daa
test
mov
mov
rol
aas
jecxz
push
dec
xchg
sub
xlat
pop
cmps
and
sub
jbe
xchg
sbb
mov
and
mov
mov
imul
xchg
in
jne
xor
push
iret
dec
cmp
test
sub
or
ficomp
retf
aaa
push
mov
jle
sbb
sahf
stos
dec
jmp
scas
mov
cdq
test
or
sub
adc
(bad)
arpl
adc
int
(bad)
ins
leave
aam
mov
(bad)
xchg
pop
xor
aad
imul
sbb
sahf
pusha
adc
inc
xor
pop
std
jmp
dec
scas
aaa
in
repz
fiadd
mov
sahf
js
(bad)
ins
pusha
pop
xor
in
ret
pop
out
push
mov
sub
lahf
shr
iret
je
xchg
cmp
add
gs
rol
rcl
mov
adc
aam
and
xor
jb
fs
mov
test
sub
js
push
mov
cli
ins
jnp
hlt
jae
xchg
or
cmp
xlat
and
arpl
bound
inc
sbb
repnz
cmp
pop
or
jne
pop
fdivr
add
mov
lods
ins
cld
(bad)
sti
pop
imul
ror
imul
mov
stos
mov
loope
pop
dec
mov
and
mov
and
jns
in
pop
arpl
inc
test
adc
pop
fdiv
loopne
je
loope
sbb
retf
sub
hlt
(bad)
repnz
pusha
inc
fs
xchg
sbb
xor
call
cmp
inc
test
ficom
xor
out
test
push
fmul
jl
out
or
test
cli
cmp
add
sbb
jnp
rol
inc
pop
pop
mov
xchg
mov
inc
mov
sbb
mov
imul
push
mov
cmp
shr
jb
pop
loop
jb
imul
ror
stos
(bad)
mov
pop
jmp
xor
in
ja
popf
ficom
test
aas
inc
jle
xchg
pop
repz
fistp
bnd
cld
pusha
sahf
xchg
add
jb
pushfw
imul
in
addr16
cmp
push
sbb
pop
imul
sub
xchg
outs
stos
or
xchg
nop
add
lds
call
jecxz
adc
push
cli
jl
jns
fcmovu
sahf
inc
mov
pushf
add
call
dec
or
xor
iret
nop
add
jbe
ficomp
cld
inc
and
dec
lods
sub
aam
sar
lahf
xor
mov
cmp
outs
mov
icebp
pop
xchg
lahf
pop
ret
push
jge
shr
dec
outs
sti
mov
repnz
je
inc
scas
sbb
fs
mov
retf
xor
repz
int3
adc
ret
pusha
adc
mov
rcl
jo
mov
js
pop
cmps
mov
jg
leave
call
test
ror
lock
test
jb
xchg
xchg
lods
std
sbb
aad
mov
push
dec
xchg
sbb
lods
inc
mov
xchg
loop
inc
popa
sbb
shr
jmp
adc
mov
pop
inc
xor
jg
into
and
jne
add
mov
sub
sub
in
sub
ins
adc
jb
sahf
in
xchg
vminpd
mov
cmp
push
stc
fs
jb
jno
rol
pop
gs
mov
imul
(bad)
dec
retf
inc
std
mov
mov
mov
inc
addr16
icebp
lea
mov
ror
movs
adc
test
xor
cwde
(bad)
repz
lds
xchg
dec
xor
jp
mov
mov
push
mov
ss
fcom
movs
out
gs
cdq
pop
mov
arpl
xor
in
add
sti
out
ficom
cdq
mov
push
jne
xor
jmp
and
or
sub
fsubr
fs
test
pop
fistp
xchg
in
(bad)
adc
inc
mov
adc
sub
sub
or
rcl
mov
sub
push
dec
add
and
mov
ins
jne
lds
test
push
add
cmc
pop
lahf
rcr
dec
into
sub
pop
pop
fcmovne
sub
mov
xor
scas
aas
pop
jae
test
push
mov
retf
or
ret
push
es
pop
enter
sub
call
mov
or
ins
push
test
jge
sbb
push
mov
and
iret
rcr
mov
aas
jb
icebp
xchg
mov
in
sbb
add
jg
xchg
mov
idiv
pop
cmp
in
pop
pop
sub
cld
scas
out
inc
sbb
mov
or
out
cmp
cmp
out
push
sbb
xor
dec
mov
lock
pop
adc
sbb
and
sub
cmp
mov
clc
retf
movs
cmps
mov
inc
ja
dec
mov
sbb
mov
sahf
push
(bad)
mov
xor
mov
fcomip
lock
imul
jae
sub
mov
adc
cmp
outs
mov
pop
rol
push
aaa
test
cmp
fstp
icebp
jecxz
out
(bad)
push
dec
pop
(bad)
cmps
shr
std
iret
jno
jb
popf
mov
mov
nop
xor
and
repz
sbb
jne
jle
and
and
(bad)
mov
div
mov
mov
popf
jg
mul
inc
ins
jg
push
mov
cmp
pop
cwde
ds
mov
shl
pop
sub
and
daa
mov
dec
fdivp
dec
xchg
push
pop
mov
mov
movs
fneni(8087
jle
mov
test
test
add
dec
xchg
fst
aas
inc
jp
jmp
or
mov
cmp
inc
fsubrp
adc
(bad)
std
xor
cld
or
pop
jbe
cmps
push
sub
mov
or
xchg
inc
popa
clc
idiv
popf
stc
mov
or
les
jb
ret
sub
or
call
cmp
outs
outs
sbb
retf
or
push
sbb
movs
out
sti
hlt
std
sahf
aaa
cmp
dec
rcl
and
in
dec
arpl
scas
cmp
pop
push
(bad)
retf
es
(bad)
arpl
xlat
jecxz
xor
push
scas
int3
in
loopne
adc
arpl
add
jo
rol
ss
mov
movs
jns
or
mov
mov
push
dec
mul
fcomip
inc
jmp
push
add
mov
dec
cmp
inc
add
pop
cli
sbb
pop
inc
ret
(bad)
out
dec
cli
dec
ds
xlat
pushf
mov
sub
das
loopne
int
daa
sbb
or
aaa
push
jns
add
mov
bound
xchg
pop
pop
and
daa
push
push
vmovapd
pop
scas
js
mov
mov
mov
outs
cli
mov
mov
movs
fcmovnu
aaa
lods
scas
pop
sub
pop
adc
mov
rol
fucomip
rcl
lea
xor
jmp
sbb
push
sub
mov
mov
push
ret
xor
xchg
jg
cmp
and
add
scas
(bad)
or
scas
pop
cmps
ret
cld
dec
pop
lock
into
pop
imul
xor
inc
movs
retf
cli
mov
push
aas
jne
or
rcr
inc
test
inc
out
out
sub
jp
cld
ja
pop
xchg
data16
ja
jo
aas
mov
scas
aas
mov
(bad)
mov
imul
test
pop
iret
int
cdq
out
mov
cmc
das
call
outs
ss
in
leave
mov
pop
fiadd
adc
rol
in
sbb
outs
push
cs
mov
out
mov
pop
je
sar
cwde
mov
cmp
mov
retf
inc
dec
and
test
fisubr
add
cmp
in
jmp
add
int
mov
(bad)
into
int3
adc
(bad)
mov
or
stc
mov
jl
add
push
cmp
pop
dec
mov
ss
push
jne
jg
lods
(bad)
and
aaa
aaa
adc
lds
repnz
mov
mov
(bad)
fist
imul
mov
popa
shr
scas
xor
jl
and
xchg
add
cmp
call
pop
dec
sti
stos
cmp
cmp
sbb
pop
push
aad
ret
jecxz
mov
cmp
(bad)
sbb
mov
dec
mov
jg
add
aad
cdq
out
cmps
ins
imul
cwde
ror
add
out
cld
sub
adc
mov
add
sub
cmp
pop
daa
push
stos
ror
dec
loopne
mov
cmps
mov
mov
(bad)
sti
pop
xor
mov
sbb
inc
or
icebp
inc
pop
jo
mov
pop
ss
mov
jmp
add
leave
add
iret
xor
xor
aam
call
pop
sub
pop
stc
outs
mov
push
int3
pusha
enter
cld
out
push
xor
jecxz
retf
inc
rcr
cmps
mov
inc
punpckldq
cmp
mov
jne
nop
dec
gs
xor
(bad)
dec
pusha
or
mov
(bad)
fnstenv
into
dec
sbb
adc
dec
xchg
cdq
leave
les
xor
retf
sbb
sahf
cwde
add
mov
xchg
or
fs
ins
cmps
dec
mov
sar
xchg
sar
call
jae
cmps
cmp
inc
or
stos
(bad)
data16
mov
int
rcr
cmp
xchg
jo
adc
out
xchg
adc
call
cmp
jmp
cmps
fnstcw
ins
xchg
pop
cmp
and
push
mov
fdivr
les
and
in
push
pop
mov
ret
(bad)
dec
jnp
mov
push
int
lock
xor
stc
stc
dec
jo
in
fdiv
push
pop
dec
xchg
ret
aad
xchg
mul
cmp
outs
int
outs
ds
cld
cld
mov
push
push
or
pop
cld
xchg
mov
xchg
jno
sbb
rcl
push
mov
mov
cwde
jg
jbe
fld
adc
ja
cmp
fnstsw
rcl
mov
mov
int3
mov
sbb
out
in
mov
xchg
ds
leave
in
or
xor
(bad)
dec
xor
sub
mov
lods
ins
dec
movs
mov
fs
mov
outs
fist
push
lock
ss
jnp
mov
jmp
add
mov
jmp
cdq
jmp
sub
mov
fsub
inc
adc
or
imul
cmps
dec
push
jmp
xchg
jmp
cmp
ret
mov
adc
lods
jecxz
test
ja
pop
pop
cmp
inc
call
test
cmc
xor
pop
adc
loop
pop
mov
xor
mov
pop
mov
push
loope
xlat
and
in
setnp
adc
sbb
sbb
mov
das
pop
inc
lds
cmp
adc
push
aas
pop
mov
ds
jnp
pop
push
fmulp
mov
xlat
fisub
pop
or
clc
mov
adc
pop
sahf
nop
movs
push
inc
adc
adc
shl
mov
and
(bad)
add
add
sub
xlat
or
mov
jl
test
xchg
jne
mov
arpl
aad
jno
mov
retf
in
jnp
jmp
stos
pop
push
out
cmps
out
mov
push
(bad)
fmul
(bad)
mov
cmp
lods
jmp
iret
repnz
not
dec
mov
push
mov
(bad)
jnp
cmp
mov
push
cwde
sbb
out
xor
xchg
jg
mov
imul
mov
je
jns
(bad)
push
xor
pop
mov
div
nop
shl
push
mov
jno
xor
bound
ins
es
or
pop
test
iret
pop
adc
hlt
and
ror
stos
jg
repnz
pop
sub
test
inc
aam
sbb
inc
and
repz
outs
jmp
dec
or
add
dec
test
sbb
into
(bad)
mov
js
pop
add
fmul
inc
hlt
test
adc
loope
ins
(bad)
cmp
adc
sbb
add
push
test
in
imul
xchg
pop
jmp
fucomip
dec
inc
push
pop
cmp
(bad)
popf
jp
mov
cdq
push
jbe
pop
add
mov
call
jmp
push
add
(bad)
push
cmp
mov
scas
adc
nop
adc
cs
retf
daa
fiadd
sub
jg
or
retf
jne
sub
loop
in
sub
pop
fnsave
iret
in
ins
sbb
add
mov
or
inc
xchg
cmps
mov
cwde
(bad)
(bad)
movs
fist
shr
adc
retf
jns
mov
(bad)
out
test
test
jmp
jl
inc
stc
arpl
fcom
mov
addr16
or
sub
or
fwait
xchg
iret
xor
mov
add
mov
sbb
lea
jmp
pop
sbb
jae
aad
and
mov
outs
pop
or
repnz
jns
xor
cmp
lods
es
(bad)
popa
lahf
mov
test
cmp
aaa
push
push
inc
fistp
and
xor
(bad)
mov
inc
cmp
pop
sar
popf
inc
fsubr
mov
imul
xor
lea
mov
lods
in
cli
mov
push
addr16
pop
inc
push
cs
cmp
xor
mov
imul
out
aad
(bad)
(bad)
mov
dec
sub
stos
stos
push
jnp
cmp
and
ficomp
mov
divps
xor
jmp
xchg
or
ss
ret
dec
xchg
jl
(bad)
sbb
out
ds
sub
cwde
lds
out
xchg
push
pop
loop
adc
mov
xchg
jno
xor
rcr
(bad)
pop
mov
aaa
(bad)
sbb
lahf
stos
div
(bad)
out
pop
fnstcw
lea
pop
mov
sub
mov
or
pop
sub
cld
jmp
sbb
mov
ror
fwait
sar
jbe
int3
loope
jle
adc
daa
call
lock
or
icebp
cmp
xchg
jno
mov
cmps
test
add
sbb
mov
js
inc
cld
iret
mov
inc
nop
iret
sub
pop
or
out
cld
call
aad
popa
in
je
mov
inc
call
popa
pusha
pushf
push
stc
pop
adc
jne
mov
int
xchg
xor
pop
dec
jecxz
fldcw
inc
outs
sbb
jle
out
mov
lea
sub
out
sub
ror
test
ror
adc
push
repz
mov
les
arpl
(bad)
jo
in
adc
or
add
adc
xchg
mov
mov
iret
pushf
fidiv
pop
pop
aad
inc
push
movs
addr16
das
jle
mov
das
sub
fisttp
pushf
aaa
mov
or
jo
or
out
cmp
dec
adc
sbb
cs
push
inc
xchg
xchg
fidivr
push
jl
ret
xor
push
pop
stc
sbb
dec
cmps
mov
outs
xor
pushf
push
jl
mov
sbb
sti
(bad)
pop
cli
es
and
jb
xor
into
(bad)
xchg
or
retf
cmp
les
mov
pop
xlat
pop
xor
test
aaa
cmc
cmps
enter
movs
mov
push
sbb
xchg
cmp
fmul
repnz
ds
test
cli
xchg
and
pop
and
jno
push
pop
(bad)
mov
sbb
mov
popa
mov
loopne
sar
daa
ins
push
out
mov
arpl
repz
iret
(bad)
scas
xchg
cmp
jbe
pop
sar
call
pop
ror
dec
into
mov
pop
jge
popf
out
je
arpl
mov
aam
out
int
dec
test
es
test
out
jmp
in
mov
inc
int
sahf
mov
sub
mov
mov
mov
aad
mov
push
fidivr
push
inc
retf
add
sbb
xor
shr
ret
mov
jo
xchg
(bad)
rcr
in
cmp
mov
sub
mov
aas
fcom
mov
push
sahf
and
pop
outs
(bad)
imul
inc
(bad)
push
leave
lods
lods
push
test
adc
adc
pop
mov
add
shl
xor
popf
mov
outs
mov
ss
push
repnz
fsubr
call
mov
mov
sbb
repnz
out
push
idiv
retf
cmps
mov
pop
or
ins
out
les
jp
cwde
sbb
pop
cmps
cs
scas
cmp
stc
or
lods
and
imul
sbb
movs
pop
mov
js
ret
and
ret
and
inc
sub
jmp
stos
shl
sub
pop
xor
xchg
mov
push
or
dec
cmp
cmps
and
sahf
or
je
pop
adc
mov
add
pop
lahf
mov
(bad)
test
test
lock
or
hlt
sbb
stos
pop
jnp
fnstcw
leave
nop
(bad)
push
inc
es
lock
fcom
nop
pop
mov
sbb
div
cs
and
(bad)
sub
call
cdq
pop
(bad)
pop
inc
jnp
cmp
jecxz
sbb
push
cli
movs
inc
(bad)
jg
gs
mov
sbb
sbb
push
(bad)
push
jle
scas
dec
push
rol
(bad)
mov
jno
aas
fld
mov
and
mov
push
and
inc
add
xor
dec
test
xor
cmc
jnp
dec
fst
and
adc
mov
sbb
dec
jno
jbe
pop
add
xor
adc
mov
inc
xor
ja
xlat
xchg
inc
adc
imul
jb
pop
loope
mov
in
mov
test
bound
xor
aaa
(bad)
mov
dec
dec
mov
ror
pop
inc
push
jp
mov
xchg
mov
adc
imul
not
loope
sahf
shl
(bad)
or
cmp
fmul
mov
(bad)
cwde
(bad)
sub
push
mov
dec
sub
xlat
(bad)
aad
nop
repz
ret
xor
adc
fxch
das
ins
(bad)
dec
cs
xchg
lahf
push
ins
test
xlat
ror
dec
lods
iret
xchg
jle
pop
xrelease
rcr
pop
sub
pop
mov
jo
ins
leave
sub
repnz
mov
mov
add
or
mov
cmps
mov
mov
pop
jmp
ret
mov
and
and
sbb
sbb
jg
in
dec
pop
or
xor
pushf
mov
test
lods
xor
mov
xchg
push
jb
xchg
push
cmps
jle
pop
adc
pop
adc
test
stc
popf
adc
stos
pop
test
push
pop
push
sbb
std
xor
mov
mov
fsubr
jns
loopne
mov
mov
imul
mov
xor
cmps
xchg
inc
mov
xchg
mov
ins
cmp
shr
fcom
xchg
fimul
mov
jo
add
(bad)
xor
(bad)
mov
lea
xchg
or
div
(bad)
cmp
out
and
pop
ret
cld
arpl
sbb
stos
les
fisttp
lods
hlt
mov
fild
sbb
data16
je
xchg
ins
cmps
ret
or
aam
adc
lods
rcl
les
mov
fiadd
lea
std
sub
outs
pop
or
jno
xor
jae
lods
std
sar
sbb
push
dec
ds
pop
cdq
or
jbe
add
dec
mov
rol
(bad)
mov
push
and
pop
cmps
sub
mov
into
call
ins
sbb
sub
inc
mov
(bad)
out
in
mov
xchg
add
imul
aas
sub
pushf
in
dec
pop
xchg
or
fdiv
rcl
mov
mov
mov
adc
fbstp
test
and
into
mov
dec
adc
pusha
lods
sbb
fbld
cs
popa
retf
aaa
enter
test
cmc
jns
pop
jo
jge
cli
or
movs
movs
push
or
sub
push
addr16
aam
jbe
and
and
test
push
jmp
movnti
or
sahf
push
aaa
sub
pop
sub
jbe
mov
sub
add
or
and
pop
or
lods
cli
adc
dec
push
mul
ret
fidiv
outs
inc
xor
inc
push
(bad)
and
out
(bad)
out
mov
pop
push
mov
xchg
sahf
in
mov
inc
inc
xchg
jbe
fwait
mov
mov
in
(bad)
mov
push
loopne
sub
mov
xchg
iret
push
out
sub
dec
cmp
jecxz
fst
lods
jg
cld
pop
call
jns
ja
sbb
aam
ficomp
mov
bound
jmp
pop
jnp
(bad)
scas
outs
push
xchg
xchg
mov
test
hlt
ins
lea
mov
pop
or
test
xchg
pop
cmps
fimul
out
dec
xor
mov
sub
and
iret
push
lahf
xor
push
xor
aad
push
(bad)
dec
mov
fwait
cmp
icebp
int3
xchg
sbb
sbb
fldenv
adc
sbb
cli
mov
pop
mov
sbb
sub
mov
aaa
mov
dec
sub
test
cmps
mov
mov
repz
inc
icebp
sub
mov
mov
xchg
arpl
and
sub
xor
mov
and
retf
cmp
dec
stos
fdivr
js
xor
sub
jb
jg
jle
leave
sub
mov
stos
cmp
cli
enter
or
pop
in
int
xchg
push
cmp
cmc
into
call
dec
fwait
sahf
mov
push
retf
push
aad
shl
into
stc
sbb
fwait
mov
sub
jge
mov
aam
xlat
retf
mov
je
sti
inc
cwde
xlat
pop
sbb
arpl
mov
push
mov
popw
es
fnsave
xchg
xchg
push
adc
mov
mov
aas
xchg
xor
cs
fwait
and
fucomip
mov
push
aas
pop
xchg
mov
or
or
ja
push
jmp
xchg
sbb
adc
das
pop
fwait
gs
inc
sbb
or
cmp
mov
sbb
add
stos
xchg
adc
mov
je
cmp
(bad)
mov
dec
dec
push
popf
adc
in
jmp
add
inc
or
in
add
xor
and
xor
shufps
mov
out
adc
dec
scas
imul
jl
xor
xor
inc
lods
pushf
dec
push
ds
je
repnz
fimul
aaa
(bad)
xchg
xchg
mov
out
jmp
and
movs
jo
adc
mov
retf
shl
push
jle
xor
int3
lock
inc
fwait
lds
xor
dec
cmp
in
jle
(bad)
out
mov
shr
(bad)
mov
pop
outs
or
inc
mov
into
and
(bad)
push
add
pop
jmp
sbb
push
stc
(bad)
(bad)
add
loope
lods
fadd
rcr
repnz
addr16
xor
jo
mov
lea
jns
xchg
mov
test
adc
pop
aas
repz
jno
lock
cmp
shr
shl
inc
ret
imul
mul
stos
adc
movs
and
stos
dec
test
arpl
test
hlt
jae
sbb
rol
mov
jno
xor
stos
sar
into
mov
mov
jne
fcomp
sar
and
adc
xor
xor
sahf
mov
adc
adc
pop
div
test
pmulhuw
repnz
pop
jmp
inc
pop
lahf
jb
aad
pusha
jae
xor
and
jo
daa
arpl
ret
adc
dec
add
mov
(bad)
xlat
push
fisub
add
stos
jecxz
repnz
jge
adc
push
(bad)
sub
(bad)
dec
mul
call
push
hlt
repnz
outs
sub
mov
cmp
mov
jecxz
xor
push
mov
pop
cmps
cmp
adc
mov
test
or
repnz
jp
dec
push
add
scas
(bad)
je
xchg
push
push
test
sbb
push
pop
push
mov
mov
dec
leave
das
cmp
shr
mov
add
pop
jmp
in
pop
lods
or
xchg
sub
mov
push
or
scas
add
xor
call
fnstenv
(bad)
movs
aas
jl
(bad)
or
sub
gs
xchg
int3
inc
dec
popf
add
sub
push
dec
jnp
and
cmp
aaa
ds
pop
(bad)
sbb
mov
fcomi
and
out
sti
push
mov
adc
lods
adc
das
mov
sub
dec
pushf
stos
dec
xchg
bound
fs
mov
inc
add
mov
push
(bad)
mov
xchg
sar
xor
mov
retf
add
es
retf
inc
sar
dec
or
fst
gs
push
cs
icebp
mov
daa
xor
lahf
xchg
mov
cwde
xchg
in
(bad)
cmps
rol
dec
test
sahf
mov
dec
inc
call
jge
(bad)
sti
pop
sub
pop
fwait
clc
cmp
dec
pop
dec
rcl
inc
and
jle
loop
es
push
push
iret
push
sbb
push
fsub
fisubr
or
popf
vpunpcklwd
inc
and
and
addr16
nop
in
ins
mov
rcr
(bad)
push
int
mov
mov
pop
add
mov
cmps
mov
and
inc
mov
pop
xchg
lods
inc
mov
mov
add
movs
scas
psllq
frstor
call
cld
mov
popa
xchg
sub
xchg
repnz
std
inc
bound
out
ret
jnp
ins
cdq
lock
jmp
cmp
inc
dec
or
mov
add
adc
daa
xlat
test
outs
retf
push
cli
or
jg
bound
push
or
pop
test
dec
sub
xchg
sub
out
xchg
add
and
jge
push
or
and
pop
mov
jo
lea
xlat
retf
int
fisub
or
sbb
or
stos
xchg
lea
mov
stos
fist
ja
pop
rol
sub
jno
je
ret
and
pop
repz
mov
ds
mov
sbb
sub
and
pop
fwait
and
out
scas
jns
test
and
ror
sbb
jmp
mov
dec
sahf
call
sub
movs
movs
inc
mov
lods
jge
std
aad
clc
and
jns
cmps
push
and
jle
aad
lods
inc
sbb
mov
setae
jae
mov
fld
add
cli
(bad)
out
(bad)
or
sub
ret
sub
ins
aad
leave
jmp
pushf
pushf
gs
movs
addr16
in
add
jmp
jle
stos
adc
jle
xor
push
cmp
push
pmuludq
sbb
cmc
int3
int3
popf
movs
add
and
jge
aas
fsubr
inc
sbb
test
sbb
jp
sub
ror
js
or
cdq
xchg
jo
pop
cmps
mov
(bad)
scas
xlat
addr16
lahf
inc
dec
scas
xchg
lds
mov
out
leave
mov
cld
sub
fsubr
retf
ret
cmp
add
test
rol
imul
adc
std
xchg
(bad)
or
test
dec
cmp
stc
add
mov
mov
adc
int3
cmps
call
cmp
mov
in
call
inc
mov
scas
addr16
outs
xrstor
xlat
test
mov
and
pop
push
je
dec
das
nop
and
inc
push
and
das
sub
rcr
cmp
mov
pop
adc
in
in
sti
pop
dec
sub
push
stos
movs
or
xchg
fld
dec
in
lods
repnz
sbb
cmp
mov
ins
fwait
test
add
rcl
addr16
fcom
push
and
mov
or
mov
dec
dec
(bad)
push
lods
and
jge
adc
inc
jnp
ins
sub
jns
mov
fdivr
xchg
call
push
xlat
inc
jb
nop
(bad)
pop
sbb
clc
ss
mov
and
aas
mov
ja
pop
mov
xchg
sahf
(bad)
dec
cmps
xor
and
mov
add
xchg
push
inc
dec
addr16
adc
push
int3
setge
nop
clc
jns
sub
push
mov
sahf
cwde
pop
je
jmp
shl
pop
mov
cmp
retf
loop
out
pop
inc
out
adc
test
push
pop
sbb
xlat
(bad)
xor
or
add
repnz
rcl
xor
cld
dec
inc
fs
cmp
enter
int3
adc
inc
pop
(bad)
(bad)
cmp
or
push
sub
les
nop
sbb
sbb
jge
add
dec
sub
cmc
rcl
xor
adc
je
sti
imul
call
daa
fwait
cmp
bound
loope
jg
add
popa
mov
sbb
mov
jae
mov
jp
pop
jns
(bad)
daa
inc
pop
test
push
xchg
out
adc
xchg
cmc
mov
mov
adc
addr16
aas
or
mov
mov
cmp
addr16
pop
dec
imul
mov
shr
loope
mov
mov
cs
mov
mov
ds
aaa
in
arpl
jg
inc
aas
sbb
in
pop
cmp
or
sub
pop
mov
xor
jb
les
mov
into
mov
sbb
(bad)
out
and
sub
xor
and
sahf
ds
dec
stc
jp
mov
dec
push
cli
cmp
loop
sub
push
and
and
call
xor
and
popa
outs
add
retf
mov
xchg
jae
test
mov
outs
je
adc
sbb
ins
retf
mov
xchg
(bad)
jmp
mov
and
shl
std
ficomp
clc
push
cld
adc
add
xor
test
adc
jns
cmp
(bad)
cmp
rcr
cmps
ret
stos
into
out
clc
cmp
push
test
mov
add
movs
test
test
mov
fisub
jbe
jne
(bad)
jo
fmul
stc
call
inc
adc
and
aam
jl
xor
aaa
mov
pop
sti
mov
pop
fidivr
dec
(bad)
pop
push
(bad)
retf
jns
xchg
xchg
ins
ja
pop
pop
fstp
pop
jge
add
movs
stc
test
dec
cmc
jns
push
mov
dec
mov
jp
sahf
xor
(bad)
fwait
sahf
jg
ins
nop
aad
xor
iret
dec
fld
hlt
inc
cmp
jnp
mov
and
mov
or
jae
mov
sahf
ror
cmp
adc
and
push
inc
pop
cmps
sar
rol
pop
cmc
inc
out
jns
mov
lods
jo
jno
add
sbb
mov
in
mov
mov
not
(bad)
xchg
mov
inc
icebp
imul
mov
cmps
cs
jae
or
pop
push
dec
mov
push
adc
jl
sub
pop
push
jge
shl
outs
lods
mov
retf
push
sbb
enter
pop
data16
mov
xchg
cmps
icebp
scas
hlt
cmps
dec
repnz
repz
pop
dec
mov
out
jg
movs
jb
ror
pop
pop
jo
or
sub
imul
out
or
ja
repnz
rcl
cmp
cld
cmps
adc
not
icebp
cmc
ins
ret
sub
xchg
jne
out
add
jb
mov
push
outs
add
pop
movs
scas
test
pop
xchg
xchg
and
add
call
sti
mov
addr16
or
push
xor
adc
leave
sub
jno
jge
ds
adc
mov
mov
ss
aas
ins
fstp
cs
mov
xchg
lods
xor
fist
je
pop
pusha
cwde
jle
pusha
cdq
pop
imul
adc
pop
cli
sbb
jp
sbb
sub
pop
mov
call
and
pop
jbe
sbb
fsubr
add
enter
repz
push
xchg
mov
sub
pop
(bad)
(bad)
push
mov
mov
out
imul
add
sub
(bad)
mov
sbb
call
sahf
push
nop
xor
arpl
xchg
mov
outs
mov
shr
sti
pop
cmp
and
ds
outs
daa
adc
int
sbb
int3
push
jmp
scas
and
adc
mov
out
and
jge
cmps
cmp
cmc
fwait
inc
mov
jmp
or
in
xchg
push
push
inc
push
push
jle
mov
dec
retf
ror
cdq
ds
push
xchg
jg
int3
xor
and
lods
or
cdq
and
cmp
push
les
sub
push
or
pop
push
jle
jg
sub
(bad)
in
or
(bad)
mov
mov
retf
mov
cmp
ins
out
jmp
dec
xchg
clc
es
(bad)
movs
fsubr
cmp
aas
out
jae
into
jmp
adc
jo
lods
out
cmp
rcr
push
les
cmp
mov
adc
xor
cmp
cmp
pop
std
mov
mov
stos
inc
jae
push
xchg
inc
pop
and
and
cwde
sub
pushf
aam
aad
xor
or
or
cmp
std
sub
jae
es
adc
cmc
dec
jp
fst
inc
adc
rcl
aam
data16
push
sbb
mov
add
gs
mov
adc
mov
mov
mov
fbstp
cmps
and
xchg
lahf
dec
mov
and
ins
adc
adc
fidivr
jmp
test
imul
dec
sub
clc
lods
aam
dec
and
cdq
mov
or
push
adc
push
(bad)
icebp
cmc
xor
jb
aam
imul
or
cmp
loop
mov
aas
aas
int3
lahf
pop
stos
jmp
es
ds
arpl
pop
sub
cmps
mov
push
(bad)
lock
pushf
test
add
xchg
lods
push
xor
dec
pop
sti
aam
loopne
(bad)
iret
xlat
repnz
pop
push
jmp
(bad)
cmps
sbb
in
test
(bad)
lahf
pop
int3
mov
mov
sti
call
add
cmp
add
movs
mov
push
aam
clc
mov
lods
xchg
jge
shl
mov
jno
add
inc
dec
xchg
add
js
xor
sub
and
jmp
or
cmps
push
icebp
sbb
mov
cmps
and
jp
sbb
out
pop
and
mov
inc
jae
test
pusha
jmp
pop
push
sar
call
push
mov
xchg
ss
jp
imul
sar
or
cli
bound
mov
lods
cwde
push
xlat
push
dec
mov
and
push
imul
lods
pshufw
push
inc
cmp
pop
fcmove
iret
dec
adc
(bad)
jle
inc
pop
inc
pop
fistp
jmp
or
or
push
ret
cmp
dec
jle
and
push
mov
in
xchg
retf
push
(bad)
(bad)
inc
call
rcr
das
leave
mov
pusha
ins
sbb
ret
inc
cs
jmp
xor
mov
push
gs
leave
add
leave
pop
xchg
push
pop
xchg
pushf
pop
aam
mov
adc
mov
push
cmp
mov
mov
jg
and
jmp
loop
push
cmp
bound
shl
stos
bound
stos
mov
push
arpl
leave
xor
pop
ret
shl
sbb
mov
scas
lds
add
retf
ficomp
cmp
mov
pusha
ror
aam
ficom
out
loopne
jecxz
daa
aas
fisub
dec
cwde
mov
test
xchg
and
xchg
imul
rcr
scas
pop
or
jl
mov
mov
fild
sub
idiv
aam
test
ins
inc
xchg
cmp
jecxz
dec
push
stos
and
mov
dec
lahf
hlt
out
leave
movs
or
popa
fiadd
call
(bad)
js
jecxz
into
dec
in
clc
cmp
cli
jno
mov
std
mov
pop
push
push
rcl
dec
push
xchg
movs
dec
jl
js
dec
scas
and
push
sbb
mov
dec
push
mov
popa
(bad)
cwd
sahf
ret
test
dec
mov
and
inc
out
adc
xchg
bound
addr16
pop
les
shr
jo
rcr
mov
aad
ja
ss
fs
shl
mov
fldenv
and
sub
push
leave
data16
aad
int
icebp
push
stc
js
fs
inc
push
stc
fdivr
sub
dec
movs
or
jge
shr
out
pop
mov
push
mov
or
je
dec
and
jmp
jno
movaps
jl
outs
(bad)
dec
in
jae
mov
and
push
loop
stos
push
add
je
pop
shr
sti
jnp
add
cmp
push
push
push
iret
xor
mov
pop
add
icebp
or
pop
dec
sub
inc
aam
in
retf
ds
fwait
mov
retf
stc
mov
je
enter
xchg
not
xchg
out
mov
jmp
and
jecxz
pop
ins
call
sbb
jno
mov
lds
cmps
mov
sub
mov
out
outs
sbb
mov
int
scas
mov
test
mov
(bad)
jb
xor
cmps
push
das
(bad)
or
ins
sub
inc
sub
add
scas
xor
and
(bad)
push
movs
pop
xchg
scas
cmp
ins
or
aas
arpl
aad
iret
mov
adc
mov
das
cwde
mov
mov
sbb
add
cli
add
jns
mov
sub
repz
into
ins
or
sti
mov
inc
adc
dec
xchg
arpl
mov
pop
ins
stc
mov
into
mul
lea
(bad)
pop
cs
sbb
cmp
loopne
movs
in
jg
push
and
jno
ret
call
popa
mov
outs
clc
ds
xor
push
cmps
fnstenv
stc
and
push
push
or
cdq
call
sub
sbb
cmp
cmps
push
push
xor
fld
ins
push
push
jl
xchg
rcl
sbb
mov
or
fisttp
xchg
pop
inc
xor
and
rcr
lds
pop
(bad)
arpl
daa
cmp
pop
(bad)
out
lock
ret
xchg
xrelease
ins
mov
add
mov
ret
and
into
bound
jno
hlt
push
xchg
mov
js
add
out
push
mov
in
cmp
in
inc
inc
jecxz
fiadd
gs
add
test
mov
dec
inc
xchg
loope
sbb
jnp
jne
push
fsub
daa
jo
lods
loop
nop
jle
nop
mov
lock
cli
arpl
idiv
mov
adc
mov
gs
xor
mov
mov
xor
dec
jns
out
inc
fsubr
sbb
scas
idiv
mov
pop
(bad)
fisub
adc
push
mov
pop
cmp
mov
vhaddps
jns
ret
jp
je
neg
mov
add
icebp
gs
inc
nop
pop
pop
mov
add
xor
pop
test
mov
retf
add
daa
mov
or
das
xor
pop
mov
jnp
outs
jmp
pusha
mov
pop
popa
aaa
cs
ss
pop
cdq
mov
xor
inc
sbb
dec
sbb
sbb
add
jmp
add
and
nop
lea
cs
mov
xor
aaa
adc
fst
les
and
jmp
jg
push
addr16
scas
or
ja
inc
mov
push
xor
cmp
leave
lods
dec
mov
xor
xchg
ins
jnp
leave
int3
ins
add
mov
cld
popa
push
neg
ret
daa
std
shl
je
loopne
mov
aam
cmc
mov
inc
bound
cmp
(bad)
aas
cmp
jmp
mov
mov
jl
cwde
pop
in
push
mov
leave
aaa
lahf
cmp
int
std
cmp
xlat
cmp
cmp
aam
loope
sbb
sbb
into
jmp
mov
repz
dec
enter
(bad)
pop
ins
jecxz
xor
and
imul
ins
pop
out
push
sub
mov
std
das
js
repz
sar
into
inc
shr
loop
xchg
jg
lea
jns
retf
mov
fld
retf
leave
out
mov
cmp
adc
or
push
cmp
cmp
adc
cmc
pop
mov
aas
aad
push
pusha
in
inc
lods
aad
sahf
dec
stos
xor
xor
mov
cmp
inc
jle
xchg
or
aad
sar
iret
push
fist
pop
push
mov
out
push
out
jae
shl
dec
in
xor
das
pusha
jno
stos
or
fwait
jno
hlt
daa
and
mov
xor
stos
pop
shl
stc
jge
call
cli
push
xchg
dec
pop
dec
xchg
cmp
push
outs
sub
sbb
ror
pop
cmp
sbb
cmp
xor
sub
jg
mov
xchg
inc
les
inc
sti
jg
mov
push
or
ja
test
inc
adc
mov
sbb
push
dec
into
jo
ins
inc
jae
mov
(bad)
enter
(bad)
out
in
int3
lea
(bad)
std
jnp
sbb
cdq
lea
cdq
jbe
shr
mov
push
aas
xchg
ret
jae
fidiv
push
in
lock
inc
ja
cs
sbb
jge
dec
popf
div
fnsave
out
mov
cwde
dec
add
lods
jb
(bad)
mov
fadd
or
icebp
xchg
push
jg
or
xor
(bad)
lahf
push
loopne
pop
adc
hlt
xchg
inc
cmp
pop
jns
sub
pop
add
xchg
pop
add
xchg
pop
mov
inc
cs
inc
pushf
jle
movs
mov
or
add
sbb
xchg
cmp
scas
mov
fnstcw
jecxz
pop
ins
sti
test
pushf
mov
cld
arpl
ret
js
push
ror
cld
shl
xor
xadd
in
cmp
inc
mov
les
iret
mov
cmp
jb
aas
dec
fcomp
loope
lods
(bad)
jl
jo
jecxz
and
movs
call
ror
cmp
pop
addr16
repz
inc
enter
test
mov
fadd
js
pop
fs
cmp
cdq
test
inc
je
jne
mov
cli
push
test
and
xchg
sub
inc
add
lods
icebp
sahf
dec
lahf
mov
outs
push
sbb
jle
mov
jns
sub
xchg
mov
pop
add
mov
in
movs
into
jge
sub
and
pushf
cmps
mov
jno
arpl
outs
(bad)
or
sar
arpl
repz
nop
or
push
bnd
lods
call
ret
dec
mov
cmp
frstor
adc
push
and
mov
jge
int3
mov
push
mov
pop
add
hlt
push
cmp
(bad)
sub
call
mov
fimul
cmc
xchg
(bad)
fsubr
icebp
mov
pop
sub
mov
inc
test
fcmovb
clc
adc
stos
and
in
pop
push
mov
(bad)
es
push
mov
(bad)
xchg
fwait
push
out
in
push
mov
jmp
push
fstp
mov
add
bound
das
and
ret
adc
push
mov
push
pop
push
loope
pop
call
mov
ret
lahf
adc
repz
rcl
xor
jle
sbb
shl
dec
into
jnp
mov
out
jb
push
mov
repz
or
jbe
bound
xchg
sti
jno
mov
cmp
adc
pop
rol
out
mov
xchg
not
es
ror
and
cwde
push
cs
dec
fwait
mov
mov
fs
neg
ja
mov
test
sub
fst
clc
scas
dec
daa
xor
or
cwde
sti
cmp
push
cmp
xchg
mov
in
dec
xchg
push
and
pop
popa
mov
jb
jns
push
jmp
add
jmp
cli
rcl
scas
cmp
(bad)
out
data16
fld
cs
and
push
jo
leave
(bad)
out
xchg
mov
jne
nop
push
adc
xlat
inc
xor
dec
adc
and
retf
mov
cdq
sub
sbb
sbb
cwde
mov
in
inc
sub
xchg
add
mov
stos
pop
shr
jns
cdq
add
sbb
adc
loopne
jle
iret
icebp
mov
pop
sbb
inc
jge
cmp
pop
mov
stc
loop
movs
test
fnsave
pop
retf
lods
js
inc
mov
std
jp
inc
inc
test
je
fsubr
scas
jle
imul
and
jno
ja
repnz
cmp
add
les
pop
das
retf
adc
inc
mov
xchg
outs
test
mov
push
sbb
jnp
js
jbe
jb
cmp
sbb
leave
fistp
rcl
inc
ret
xor
imul
cmc
or
xor
mov
(bad)
dec
xlat
xor
mov
jg
cdq
cmp
lea
(bad)
adc
jmp
call
pop
scas
sub
fisub
loopne
cmp
stos
loope
retf
jno
add
outs
pop
sbb
mov
sbb
sub
mov
cmp
mov
mov
es
mov
mov
data16
push
jno
xchg
mov
cmc
pop
mov
and
cwde
mov
es
jmp
inc
adc
push
xlat
cs
adc
addr16
lahf
fwait
pop
repz
mov
ins
xlat
enter
sub
call
pusha
aaa
not
rcr
fmul
js
cmp
lock
inc
xor
jge
fisubr
shr
pusha
xchg
jo
shr
jmp
xor
ins
xchg
leave
cmp
push
loope
idiv
pop
jp
adc
inc
mov
jp
lea
dec
sahf
scas
sub
mov
xor
mov
sub
pop
lods
stc
jmp
loopne
ret
mov
mov
mov
xchg
push
push
shr
add
xor
mov
xchg
add
cmp
sbb
jo
and
sub
xor
enter
test
pusha
jno
push
jne
adc
push
pusha
dec
sub
pop
nop
cmps
out
daa
pop
adc
stc
sbb
pusha
inc
mov
mov
inc
imul
hlt
cmp
data16
lods
rol
adc
adc
push
cwde
mov
cld
jg
daa
mov
jb
push
in
fwait
push
mov
lea
jle
jmp
cmp
mov
repz
jge
inc
movs
fisub
call
movs
stc
push
pop
stos
adc
inc
popf
mov
jg
leave
div
mov
xchg
aam
adc
jns
(bad)
lods
ins
test
mov
mov
enter
mov
sub
mov
inc
lods
jecxz
push
shr
test
sbb
aaa
int3
jbe
scas
dec
mov
(bad)
rcl
xor
mov
mov
enter
stos
ss
movs
adc
outs
jnp
and
jbe
sar
ins
adc
jp
leave
pusha
pop
mov
fwait
aad
sbb
push
out
mov
sub
addr16
test
repz
sbb
out
shl
mov
cmp
mov
cmps
add
mov
ret
lock
mov
and
jbe
sar
jg
inc
ds
jmp
ret
ins
jmp
push
icebp
jg
cli
test
jmp
enter
dec
scas
je
mov
jmp
stos
pop
lahf
xchg
or
arpl
jb
pop
mov
(bad)
lahf
adc
jmp
movs
fsubr
sti
mov
jne
ret
or
push
xchg
xchg
ficomp
mov
mov
push
retf
aas
shl
cmp
loope
in
je
mov
inc
mov
loope
out
mov
clc
mov
xor
mov
addr16
aad
sub
mov
cdq
mov
or
outs
test
lea
jecxz
cmp
dec
mov
and
sub
aad
lahf
mov
mov
stos
(bad)
xchg
push
dec
mov
or
retf
sub
popa
xchg
mov
xchg
and
(bad)
xchg
jmp
iret
cmp
int3
retf
push
pop
das
out
iret
ror
movs
or
js
inc
xor
inc
outs
sbb
cmp
adc
icebp
push
iret
push
cmp
sub
clc
push
cmps
imul
fwait
into
and
mov
pop
pop
push
cld
(bad)
int
ret
mov
dec
jl
push
sub
push
adc
cmp
test
test
inc
push
cmp
cmp
shr
aaa
xchg
sub
ss
aad
imul
out
adc
mov
mov
push
call
hlt
push
push
mov
cwde
mov
and
ret
out
sbb
ins
mov
(bad)
sub
push
ret
inc
cmp
sbb
push
inc
loopne
adc
pop
sti
in
fstp
leave
xchg
in
xchg
jnp
ins
sub
stos
push
je
mov
das
xchg
mov
jb
sbb
add
sub
shr
xlat
jle
movs
cs
cli
inc
or
xor
inc
pop
loop
sbb
mov
push
xchg
bound
lahf
xchg
ror
jle
mov
stos
add
inc
stc
mov
loope
push
rcr
mov
adc
jne
imul
jle
jg
push
adc
test
fldenv
xchg
cmp
test
dec
jb
nop
test
adc
fbld
hlt
ror
fldcw
xor
xchg
pusha
scas
cmps
adc
jb
xor
and
into
xchg
shr
mov
pushf
xchg
jp
inc
and
or
sahf
and
jmp
arpl
ja
sbb
out
mov
mov
imul
aaa
loope
scas
nop
xchg
stos
push
xchg
std
cli
fadd
mov
stc
lock
fidiv
add
and
scas
inc
pusha
and
sub
in
ins
xchg
movs
cmp
inc
add
rcl
add
es
cli
push
dec
xchg
jge
pop
cdq
rol
dec
frstor
push
xor
cli
mov
das
xchg
imul
fbld
jno
dec
sar
in
ins
adc
ins
add
jecxz
retf
(bad)
dec
fs
pop
cmp
aam
pop
test
mov
mov
aam
(bad)
push
clc
mov
out
pop
pop
stos
mov
xor
xchg
push
xchg
inc
test
add
pop
adc
sub
pop
call
cdq
icebp
cmp
jo
bound
mov
cmp
adc
(bad)
lods
in
lods
imul
(bad)
(bad)
sbb
push
cmps
sbb
pop
xchg
jno
mov
mov
mov
das
test
push
popa
jno
add
inc
int3
sbb
iret
sbb
pop
dec
(bad)
daa
jnp
sbb
std
(bad)
dec
dec
mov
test
mov
mov
and
shr
sub
or
ret
in
mov
fs
pop
sub
dec
mov
leave
out
adc
dec
and
imul
mov
mov
inc
mov
aam
add
lods
daa
cmps
sbb
repnz
(bad)
std
push
jae
ss
mov
movs
int3
mov
add
(bad)
cli
push
push
inc
stc
add
les
jp
addps
or
ja
cmp
push
pop
adc
xor
out
mov
fldenv
mov
mov
mov
mov
inc
pop
imul
out
xor
mov
rcl
xchg
and
repnz
and
dec
mov
xchg
dec
xlat
scas
outs
test
aas
cmp
das
sbb
out
mov
stos
jb
sub
mov
outs
pop
retf
retf
mov
aam
xchg
dec
out
ds
or
push
imul
pop
push
test
mov
repnz
xor
sub
popf
push
xor
xor
out
(bad)
ins
in
loopne
mov
in
scas
jp
pop
add
test
adc
jecxz
fild
in
dec
mov
mov
lea
ja
pop
(bad)
sbb
cmp
sbb
test
xchg
movs
or
push
test
mov
loop
bound
les
in
cmps
fbstp
loopne
lea
xchg
into
pop
sbb
jbe
sub
pop
in
pusha
jg
stc
aam
sbb
pop
fs
sub
ins
icebp
mov
fidivr
outs
or
loop
and
mov
xor
sub
or
sti
ja
sbb
jl
jp
in
or
rol
xor
dec
icebp
jg
adc
movs
xchg
fdivr
std
fdivp
pop
and
(bad)
fs
mov
sub
push
fdiv
enter
push
data16
push
icebp
fsub
xchg
mov
push
jno
xor
lea
jge
loope
mov
adc
push
stos
loope
shl
xchg
dec
cli
inc
int
test
jbe
or
retf
mov
ss
shl
xor
aas
mov
gs
add
xor
sbb
push
jne
xchg
inc
cmp
cmp
in
inc
cmps
into
push
cmp
push
jne
stc
dec
add
lods
adc
sahf
jno
xor
call
je
sub
pop
jmp
add
retf
jp
jnp
jno
inc
and
call
and
and
and
inc
lock
dec
ins
xchg
jnp
cs
scas
fiadd
and
fistp
add
shl
je
mov
div
mov
leave
mov
(bad)
sbb
mov
neg
sub
jnp
or
jecxz
sub
sahf
test
xor
mov
xor
(bad)
(bad)
jp
jmp
(bad)
push
add
xchg
xlat
pop
push
adc
sub
movs
popa
call
mov
stos
ja
sbb
cwde
xchg
jle
inc
(bad)
pop
mov
mov
adc
ins
push
loope
lods
pop
adc
(bad)
ja
jle
mov
push
dec
int
out
pop
cmps
mov
iret
daa
dec
or
movs
jns
(bad)
or
cs
adc
(bad)
jmp
pcmpgtd
icebp
jmp
ret
xchg
std
add
cmp
cmps
std
call
sahf
cmp
add
adc
add
lods
push
xchg
pop
icebp
xchg
(bad)
jp
dec
jnp
in
sub
add
add
aam
pop
daa
sbb
pop
and
push
xor
popf
mov
cwde
add
mov
ror
xchg
inc
pop
jo
leave
dec
pop
xlat
imul
cld
out
xchg
cdq
(bad)
mov
xchg
inc
mov
js
test
hlt
push
outs
stos
movs
push
call
add
mov
outs
cmps
inc
call
(bad)
fistp
leave
int
adc
lea
mov
test
cmp
(bad)
repnz
mov
inc
rcl
fstp
or
addr16
inc
rcl
jbe
sar
mov
or
push
adc
inc
push
xchg
adc
pop
outs
sbb
jne
mov
mov
fwait
dec
sbb
adc
popf
mov
mov
pushf
xor
pop
sbb
and
jp
pop
cmp
mov
dec
int
xor
push
push
enter
xchg
(bad)
call
mov
jne
out
push
or
test
imul
jb
inc
(bad)
push
popf
inc
mov
stc
jmp
sbb
push
add
gs
mov
aas
(bad)
and
jmp
clc
jae
inc
or
lods
inc
loope
push
jae
rol
rcl
mov
mov
int
loope
jb
int3
jns
and
adc
rcr
dec
retf
stos
xchg
aad
xor
sti
mov
sub
popa
push
loopne
xor
rcr
mov
inc
dec
sbb
repz
popf
call
inc
sub
daa
xchg
pusha
inc
mov
cmp
(bad)
jns
sbb
sub
dec
jne
loope
fsub
mov
in
inc
in
inc
clc
pop
add
stos
adc
stos
out
cmp
pop
adc
jl
pop
inc
pop
sbb
jae
jns
cwde
and
leave
mov
pop
cwde
or
imul
out
sub
mov
xchg
cld
(bad)
or
jne
ficom
or
cs
cmp
jp
(bad)
sub
mov
(bad)
rcl
push
sbb
data16
cs
imul
ja
sub
xor
icebp
mov
push
jnp
and
pop
mov
ins
inc
iret
sub
mov
imul
data16
or
sub
dec
(bad)
pop
movs
iret
fdiv
out
mov
scas
aam
fst
cmps
sub
imul
mov
adc
icebp
mov
rol
cs
lea
jmp
ret
pushf
cld
inc
dec
or
(bad)
sbb
lods
stos
cmp
ss
fcomp
adc
test
pop
xchg
sbb
mov
fwait
sti
push
ja
xor
or
leave
cmp
fst
outs
outs
inc
add
jmp
cmp
mov
in
int3
data16
aam
add
xchg
pop
std
pop
or
inc
jo
sub
daa
std
add
push
mov
push
pop
int3
push
jmp
cli
out
mov
mov
xchg
pop
and
js
scas
mov
retf
ror
(bad)
fcom
pop
xor
sar
shl
mov
lea
out
sbb
gs
test
and
dec
xchg
sbb
loop
rcr
lds
jbe
rcr
je
enter
pushf
out
dec
call
mov
aaa
cld
mov
xchg
sbb
out
cmp
shr
test
mov
ret
sub
rcl
mov
xlat
xchg
or
sbb
mov
and
push
test
inc
push
scas
pop
dec
arpl
in
mov
pop
inc
loop
dec
repnz
jmp
pop
movs
cmc
cmc
pop
(bad)
xchg
jb
repz
jnp
retf
jns
mov
faddp
and
int3
cmp
push
and
lods
pop
sbb
adc
outs
jle
repnz
sar
retf
or
xchg
inc
jl
jno
mov
dec
popa
out
pusha
imul
(bad)
add
shr
dec
xchg
jne
js
or
cmp
dec
(bad)
mov
bound
cmp
sbb
je
mov
mov
jmp
and
into
shr
sub
adc
ja
sub
xchg
ret
adc
adc
es
sbb
movs
(bad)
mov
ds
and
xor
mov
sub
out
lea
int3
cwde
or
inc
sub
mov
jle
push
out
cmp
popf
cmp
jecxz
call
or
xchg
repz
(bad)
push
mov
in
je
es
mov
fadd
pushf
dec
arpl
add
imul
stc
jle
sub
xchg
test
icebp
jecxz
dec
and
int3
cmp
cmps
lea
or
rcl
push
sub
add
mov
xchg
push
fbld
push
push
or
dec
jg
dec
cmp
inc
fptan
adc
adc
push
imul
je
cmp
inc
fs
aas
test
add
shr
dec
rcr
mov
push
call
rcl
jge
mov
cmp
adc
in
xor
(bad)
adc
ret
stos
pop
int3
mov
repz
arpl
(bad)
mov
mov
push
add
sbb
adc
inc
je
cmp
test
aas
in
or
mov
imul
jmp
cmps
es
cli
(bad)
and
pop
cmps
jge
add
scas
push
mov
std
push
loop
pop
sub
and
sbb
cmp
or
mov
mov
xor
retf
add
lea
jb
jecxz
mov
fidiv
jo
sbb
add
loop
inc
cmp
mov
and
jecxz
out
and
(bad)
ficomp
xchg
leave
add
xchg
call
fst
lds
push
dec
pushf
(bad)
jge
add
call
pop
lock
sbb
jmp
mov
int
out
popa
nop
jno
inc
pushf
aad
pop
push
out
xchg
(bad)
in
mov
and
mov
aad
mov
mov
and
mov
movs
int
mov
daa
jnp
inc
test
sar
pop
stc
mov
sbb
std
call
jl
dec
test
rcl
inc
rol
scas
ss
jecxz
push
push
and
pushf
icebp
icebp
mov
and
fwait
bnd
(bad)
mov
mov
sar
sub
ja
scas
js
scas
out
fdiv
dec
ins
sub
aad
xchg
xchg
mov
cmp
sbb
into
dec
sub
int3
lds
ins
mov
sub
sbb
out
retf
jo
cmp
ret
cmp
(bad)
lods
mov
neg
fst
pop
shr
fisttp
sbb
test
cmp
and
jge
cmp
in
mov
lock
out
xor
hlt
cdq
pop
sub
pusha
cmp
inc
(bad)
sahf
aam
sub
jbe
mov
jmp
aam
mov
jne
jmp
push
sahf
mov
jle
ret
add
scas
retf
push
std
pop
pop
add
push
cmps
ins
stc
cdq
test
sub
sub
and
mov
pop
dec
adc
mov
pop
lahf
sbb
push
gs
loopne
fwait
sti
sbb
repnz
xchg
fsub
cmp
rcr
sar
and
xlat
xchg
fwait
stos
stc
jp
and
cmp
push
cwde
sub
jg
adc
or
jmp
pusha
mov
aam
sbb
rcr
outs
ins
pop
rcl
scas
mov
cmp
sbb
enter
or
ss
sub
pop
cli
in
cmp
xchg
push
xchg
popf
dec
lahf
sbb
jmp
pop
jle
test
(bad)
inc
pop
div
cmps
cmp
mov
mov
retf
sub
sub
xor
repz
pusha
or
xchg
pop
cmp
loopne
retf
mov
out
and
pop
pushf
loop
cmp
mov
xchg
xchg
jae
iret
mov
in
adc
bound
test
lock
jbe
sbb
loopne
push
cwde
lods
and
(bad)
jne
fs
adc
pop
cld
add
(bad)
scas
cdq
scas
sbb
xor
mov
xor
out
push
pop
add
sbb
sbb
push
out
jecxz
mov
xor
icebp
pop
fmul
add
cli
popf
out
mov
fsubr
pop
lods
xlat
loope
(bad)
lods
mov
xor
lds
call
dec
shr
cmps
bound
xor
mov
pop
icebp
out
cld
addr16
push
push
mov
jg
push
push
xchg
mov
pop
std
cwde
adc
stos
test
fdiv
pop
and
add
or
rcr
outs
cmp
in
mul
icebp
cs
aas
and
ins
je
jae
or
fcmovne
pop
pop
and
or
mov
jl
mov
test
sub
les
mov
xchg
cli
popf
sub
sti
add
dec
call
mov
fdiv
mov
ret
cmp
jg
pop
mov
push
mov
xor
xchg
(bad)
in
mov
inc
repz
das
xor
les
and
lods
xchg
xor
or
lods
jecxz
xchg
mov
jae
mov
push
sub
call
mov
gs
popa
cmps
mov
and
loop
and
dec
jae
xchg
loopne
in
sti
clc
das
std
outs
aad
sub
test
add
and
out
or
repnz
(bad)
and
mov
enter
dec
mov
jg
adc
sbb
add
add
out
(bad)
test
mov
das
mov
sub
repz
mov
add
xor
scas
or
(bad)
mov
xchg
imul
pop
out
push
push
cmp
xor
pop
addr16
adc
ficom
mov
add
or
pop
xchg
(bad)
pop
mov
jmp
mov
push
scas
lahf
xor
jmp
cmp
add
or
inc
adc
outs
dec
rol
ds
(bad)
out
inc
cmp
movs
movs
pop
mov
pop
cmc
inc
out
addr16
add
or
lds
jmp
aam
jp
(bad)
pop
test
js
(bad)
sub
mov
fxch
dec
mov
add
or
jae
mov
clc
imul
adc
mov
out
int3
inc
inc
leave
sub
or
sbb
inc
test
imul
or
in
xor
inc
outs
fmul
pop
or
jle
fs
loope
in
adc
mov
sub
mov
aad
jge
fistp
les
aad
push
push
icebp
js
jo
fs
xlat
add
jne
jg
mov
mov
sub
sbb
xchg
mov
jecxz
mov
outs
cmp
mov
push
jg
dec
adc
fnstsw
and
fdivr
in
mov
jns
stos
outs
bound
xchg
inc
or
dec
xor
nop
sbb
int3
mov
aaa
pop
ret
fwait
cmps
pop
bound
mov
scas
sbb
and
mov
jmp
aaa
dec
movs
adc
gs
adc
(bad)
mov
addr16
int
adc
push
fsubr
movs
mov
mov
xchg
pop
aas
add
lods
inc
(bad)
lock
data16
adc
xchg
and
cmp
add
int
mov
push
daa
mov
in
add
push
mov
adc
add
push
bnd
sub
ins
add
ins
hlt
sub
push
dec
int3
dec
and
xchg
push
push
dec
fnsave
inc
xchg
jnp
stos
out
scas
ret
in
mov
fwait
out
push
add
or
jns
and
pop
xor
push
mov
stc
addr16
jns
adc
xchg
outs
into
int3
pop
dec
jecxz
and
das
xchg
or
jb
jae
inc
movs
pop
lods
mov
xor
or
cdq
stos
xchg
and
xor
imul
sti
mov
and
pop
std
push
dec
fstp
add
add
cli
pop
xchg
mov
int3
call
call
dec
mov
jae
push
sub
xchg
cwde
les
out
(bad)
ss
in
cmps
xchg
call
sbb
dec
push
push
lea
adc
pop
sbb
fdiv
mov
fnstenv
sub
sbb
and
and
sbb
mov
sbb
pop
mov
ins
mov
or
into
sub
mov
ins
or
sub
inc
mov
push
xchg
dec
xor
xor
or
repnz
xchg
jne
inc
adc
add
jno
push
ds
call
enter
test
mov
std
std
sbb
out
popf
neg
mov
nop
lds
cmps
pushf
nop
fs
or
adc
mov
sub
jnp
xchg
cmp
cmc
push
aad
inc
or
add
iret
inc
add
outs
test
cmps
sbb
pop
test
or
pop
das
pop
out
out
push
and
pop
aaa
inc
rol
shr
fldcw
inc
ror
mov
jnp
das
or
add
cli
ror
xchg
stc
sub
mov
aad
mov
pushf
jmp
jle
and
test
das
xchg
dec
in
ins
icebp
mov
cmp
mov
jnp
pop
mov
push
fld
xor
(bad)
sbb
inc
mov
dec
retf
hlt
mov
fwait
mov
js
add
imul
shr
mov
gs
mov
(bad)
pop
pop
xor
cmp
cmp
cmp
push
pop
sbb
mov
sbb
xchg
in
clc
inc
push
mov
and
inc
push
push
pop
call
call
stos
inc
add
fiadd
adc
mov
xor
jmp
mov
movs
or
iret
mov
je
xor
cmps
add
in
push
and
(bad)
shl
lds
ret
dec
stos
xor
fmul
sub
adc
mov
arpl
pop
mov
add
fsub
mov
jb
mov
sbb
adc
retf
fwait
pop
add
adc
push
sbb
xchg
lods
stc
test
mov
nop
shl
jbe
repz
outs
fsub
mov
loope
dec
popf
cmp
add
es
mov
call
out
popf
push
bound
jnp
add
arpl
mov
ins
add
dec
in
lahf
imul
nop
push
xchg
fist
jmp
sbb
shl
xchg
dec
mov
nop
sahf
sbb
pcmpeqw
xor
std
jecxz
bound
hlt
mov
fld
push
lds
mulps
cmp
sub
mov
inc
out
adc
in
jl
inc
mov
test
xchg
retf
fsub
inc
repz
ins
xchg
sub
out
adc
fwait
jo
add
mov
sti
xor
scas
shr
ja
xor
dec
dec
in
lahf
repnz
adc
pop
movs
sub
mov
jbe
sbb
jmp
fldcw
cwde
jle
repz
loop
out
mov
inc
dec
in
sbb
xchg
jo
arpl
repz
aam
cwde
(bad)
call
cmp
repnz
ficom
xchg
test
rcr
in
mov
outs
repnz
or
ins
inc
loop
loopne
sbb
mov
(bad)
sub
mov
push
outs
repnz
pop
mov
push
mov
fwait
dec
or
cwde
jo
jo
jecxz
sbb
div
cmc
das
mov
jne
dec
fcom
pop
mov
mov
mov
add
out
mov
cmp
into
push
pop
jecxz
xor
lea
scas
xchg
cmc
mov
popa
(bad)
inc
add
call
sbb
dec
mov
mov
shr
jmp
pusha
cmps
out
push
add
retf
cmps
dec
mov
sbb
test
sub
lods
xchg
xor
into
lods
jmp
lods
sbb
pop
cmps
jnp
add
mov
std
clc
shl
cmps
push
idiv
outs
xor
(bad)
push
fsub
cmps
out
sub
xor
dec
mov
nop
inc
xchg
and
xor
or
sub
xchg
int3
cmp
dec
push
xlat
pop
add
retf
ins
(bad)
daa
mov
loopne
sub
sbb
stos
cmp
lods
jp
dec
xor
xchg
out
out
jb
daa
xchg
stos
imul
push
lods
daa
out
mov
xchg
push
cmp
push
dec
ret
inc
xchg
dec
mov
xchg
lea
mov
fisubr
jns
and
sbb
test
jb
mov
jo
nop
mov
aaa
sub
scas
loope
cmps
pop
fcomp
daa
cmp
xlat
inc
pop
lods
adc
push
dec
inc
cdq
or
cdq
enter
(bad)
dec
mov
inc
fxch
xor
mov
and
test
jnp
stc
and
in
dec
mov
retf
add
mov
in
inc
jo
inc
cmps
ss
add
ret
push
scas
sub
std
xchg
dec
pushf
das
pop
or
addr16
addr16
or
fwait
pop
push
add
pop
fisttp
sbb
sub
and
adc
enter
mov
mov
and
add
pop
retf
nop
(bad)
pop
shl
jmp
push
xor
mov
sub
mov
scas
repnz
iret
test
in
and
dec
scas
dec
mov
hlt
mov
aam
pop
das
shr
push
movs
mov
add
inc
jb
pop
inc
int
rol
push
shl
mov
mul
cmp
add
mov
arpl
dec
cli
sar
dec
retf
jb
lods
xor
pop
cli
fild
add
jp
aaa
pop
inc
xor
je
inc
test
jmp
sbb
mov
fcomp
mov
call
cwde
pop
aam
test
cmc
std
sbb
test
cld
clc
in
dec
add
cs
mov
je
sbb
cwde
add
fucomp
je
or
movs
sbb
or
test
(bad)
xchg
xchg
cmc
sbb
hlt
hlt
xor
push
cwde
and
dec
add
add
jbe
fmul
pop
and
lock
cs
pop
imul
int3
cmp
cmp
stos
ficomp
mov
leave
or
js
xchg
pop
aas
jmp
leave
div
xchg
mov
fiadd
cmp
loope
rol
add
xor
mov
hlt
xchg
xchg
add
mov
xchg
xor
jno
fwait
(bad)
dec
movs
cmc
sahf
je
mov
loope
xor
movs
mov
pushf
cmp
fs
or
adc
mov
fld
push
or
dec
mul
sub
jle
loop
sbb
test
aas
ficomp
jno
push
jo
pop
push
pop
cmp
es
int
imul
push
into
jge
xor
sbb
shr
xchg
scas
jnp
inc
stos
inc
jp
js
ja
scas
movs
rep
stos
adc
aaa
movs
mov
sar
jle
pop
or
sahf
je
xchg
xchg
bound
test
cmps
xchg
add
enter
out
jl
sbb
mov
mov
in
jo
push
xchg
push
pop
or
add
mov
(bad)
sbb
lods
clc
bnd
aad
mov
das
xor
iret
and
sub
mov
fild
shl
mov
out
and
mov
out
inc
adc
loop
dec
out
repz
sbb
dec
push
and
(bad)
mov
sub
pop
adc
test
imul
movs
jecxz
dec
mov
sbb
fnstcw
inc
retf
add
ret
or
xlat
movs
sahf
inc
mov
(bad)
push
ror
jmp
pop
out
xor
rcl
and
lock
repz
(bad)
cmc
or
and
xchg
cdq
aad
or
xor
(bad)
hlt
mov
inc
push
adc
sbb
dec
int
xor
sub
sbb
setns
cmc
cmp
pop
lods
divps
fld
jne
popf
adc
push
mov
fcomp
lods
shr
mov
js
jnp
push
stos
adc
xor
dec
lods
sub
and
icebp
mov
retfw
repz
pop
mov
xor
mov
cdq
stos
scas
scas
jmp
sub
sahf
outs
and
or
sahf
rcr
call
push
jle
or
jecxz
pop
dec
int
jno
and
and
xchg
iret
mov
push
jge
dec
mov
loope
jbe
(bad)
mov
dec
scas
jmp
adc
out
xchg
push
mov
adc
repnz
not
ror
jle
sahf
inc
inc
sbb
pop
jae
out
xor
mov
xchg
pop
xor
sub
push
inc
inc
pop
stc
pop
fimul
rol
xor
push
sbb
movs
dec
mov
cwde
sahf
cli
into
and
in
pop
jnp
and
movs
cdq
stc
dec
adc
int
xor
mov
cwde
adc
lea
ins
xor
fsubr
sbb
loopne
adc
mov
mov
push
inc
adc
pop
jo
lahf
xlat
cmp
repnz
jno
sbb
fldenv
jbe
pop
mov
jle
sbb
adc
sub
sbb
dec
inc
dec
adc
out
mov
test
and
sbb
(bad)
mov
or
lods
cld
push
inc
pop
mov
fisttp
jle
ret
es
test
or
cmps
imul
ins
jbe
ja
in
aad
mov
addr16
fmul
or
or
loope
(bad)
mov
add
sbb
daa
xchg
mov
mov
int3
enter
and
push
jl
cdq
push
push
pop
mov
push
cdq
push
pop
add
pop
ret
cmp
add
mov
dec
adc
xor
adc
clc
call
fidivr
cmp
or
mov
(bad)
mov
push
jnp
jne
cld
jo
mov
(bad)
adc
ja
jg
inc
xor
(bad)
scas
sub
push
jns
bound
fsubr
cwde
das
add
jecxz
movs
aad
ja
mov
jb
xor
mov
rol
dec
push
popa
sbb
std
cmc
test
js
ss
ret
mov
xchg
xor
sbb
xchg
fsubr
mov
inc
fidiv
aad
mov
es
xchg
mov
dec
pushf
push
aad
xor
ret
sub
(bad)
je
push
shr
ja
xchg
hlt
sar
push
xor
xchg
ins
mov
add
push
push
scas
xor
sub
stos
sub
add
lods
xor
rol
mov
pop
test
dec
fistp
push
fs
cmp
ror
fsub
jmp
or
iret
xor
call
push
outs
out
(bad)
sbb
retf
outs
test
mov
mov
aas
inc
fwait
inc
rol
dec
jns
shl
adc
adc
mov
add
push
ins
mov
in
and
std
add
add
mov
aaa
push
fld
mov
(bad)
lods
push
dec
mov
js
into
out
cmp
mov
xchg
mov
scas
push
add
test
xchg
dec
jle
es
test
loop
cmps
pop
sar
push
and
and
stc
add
sbb
push
cli
push
and
movs
jbe
int
retf
jge
or
dec
das
retf
inc
scas
pop
sbb
mov
aam
cmps
ja
sbb
cdq
repnz
cld
mov
out
add
jge
add
inc
push
add
lods
test
push
pop
adc
add
sbb
loop
mov
pop
xor
stc
loope
stos
enter
sbb
dec
dec
mov
cmp
inc
cmps
push
adc
pop
js
mov
cmp
outs
inc
es
add
sub
(bad)
rol
lock
movs
dec
in
outs
add
cmp
fld
push
push
fsub
lods
addr16
inc
mov
lods
dec
aaa
adc
adc
into
cmps
and
retf
jp
(bad)
jecxz
sub
jle
mov
fild
cmp
dec
test
pop
xchg
mov
repz
inc
mov
test
jle
jnp
mov
jmp
jb
xchg
sar
daa
ret
retf
or
xchg
xlat
mov
or
out
jle
push
mov
leave
or
dec
imul
mov
gs
loope
jns
ror
dec
loopne
mov
fwait
nop
pushf
sbb
cmp
mov
sbb
pushf
stc
pop
loop
cli
adc
add
enter
aaa
pushf
adc
xor
sbb
sub
inc
loopne
mov
lock
int
lds
jb
jno
xor
loopne
mov
pop
xchg
inc
and
loop
aas
scas
sub
lds
aas
das
xchg
add
les
iret
and
dec
fcmovne
(bad)
test
or
fwait
xchg
xor
retf
or
retf
daa
fsub
jecxz
and
pop
push
scas
lds
enter
fisttp
xchg
and
add
scas
push
mov
sub
pushf
pop
sbb
int
push
outs
sahf
mov
movs
pop
cmc
fst
fucomi
mov
adc
adc
aas
aam
and
imul
sbb
add
jb
or
inc
cmp
mov
daa
adc
mov
jo
leave
sbb
aas
mov
in
dec
and
(bad)
pop
inc
daa
inc
push
in
mov
pop
pop
sbb
push
sti
inc
sbb
add
fiadd
out
mov
or
mov
dec
ins
xlat
bound
sbb
pop
mov
pop
movs
pop
cmp
push
sub
inc
adc
cmp
push
popa
push
into
test
jmp
pusha
xchg
repnz
xor
aad
inc
cmovs
js
test
fidiv
jge
sub
cmp
in
mov
jae
retf
in
shr
jge
pop
sbb
dec
push
hlt
inc
je
ins
mov
sahf
inc
or
sbb
mov
jg
pop
jb
pop
cmp
xor
fcmovbe
xchg
in
movs
mov
push
outs
mov
clc
popa
jp
rcr
shl
shr
push
js
xchg
popf
mov
sbb
mov
mov
cmp
jb
aad
out
xor
mov
adc
mov
jne
in
outs
xor
cmp
pop
xor
jbe
cld
xor
jg
mov
push
fcom
std
add
xchg
ja
jo
aaa
cmp
adc
jge
dec
mov
loope
call
cs
cmp
repnz
test
dec
repnz
aad
repnz
(bad)
or
lea
scas
adc
pop
(bad)
mov
push
add
mov
repz
pop
enter
(bad)
add
push
(bad)
dec
aas
scas
das
mov
xchg
or
sbb
inc
add
sub
dec
push
(bad)
jb
jle
not
push
or
mov
pop
mov
or
scas
in
popa
dec
and
mov
pop
sti
mov
(bad)
lock
(bad)
push
pop
add
fs
mov
inc
mov
xor
pop
mov
mov
mov
imul
inc
push
cmp
ds
push
(bad)
push
(bad)
fcmove
pop
jmp
addr16
adc
sub
loop
stos
out
lock
bound
inc
mov
xchg
bound
xchg
dec
imul
repnz
pop
jnp
or
fidivr
hlt
pop
and
hlt
retf
out
jns
inc
push
jmp
mov
dec
mov
xlat
daa
ret
mov
stc
cmps
sub
xor
cmp
inc
repz
cmps
pop
aam
add
(bad)
aaa
push
sbb
inc
fstp
cld
aam
sub
lods
aaa
mov
jge
dec
pop
mov
fs
xchg
mov
sub
push
adc
inc
mov
sub
dec
sahf
sahf
cmp
adc
les
push
pop
pop
inc
retf
fisub
sbb
pop
loopne
sbb
in
dec
shr
daa
pop
push
cmps
pop
fidiv
jno
mov
add
xor
stc
scas
std
shl
jmp
jne
cmp
sbb
out
and
movs
cmp
cmp
and
sbb
aam
icebp
or
pop
xchg
cs
add
repz
cmc
das
rol
ret
out
jmp
clc
cwde
outs
xor
ret
enter
cs
loopne
retf
mov
std
leave
sub
lea
ret
(bad)
xchg
ds
clc
pop
or
daa
push
adc
xlat
ret
out
sub
add
out
jbe
ficomp
stos
cs
sbb
daa
in
xchg
and
rcr
mov
in
iret
movs
clc
(bad)
jp
xchg
movs
jmp
dec
loop
stc
call
sbb
int3
mov
or
retf
xchg
adc
pop
mov
mov
pop
scas
and
xchg
dec
mov
jl
push
mov
maxps
ss
dec
lds
xchg
fisttp
xchg
xchg
loopne
imul
pop
pop
xchg
jno
mov
jb
jmp
sahf
adc
jp
rcr
pusha
dec
xchg
mov
aad
push
jns
out
dec
mov
sub
adc
mov
arpl
aam
pop
shl
xchg
fisttp
mov
icebp
push
sbb
cdq
idiv
add
into
dec
push
adc
and
xchg
js
xchg
mov
ror
push
jecxz
xor
icebp
cmps
les
xor
jns
test
in
xchg
push
daa
sbb
mul
ds
arpl
xchg
push
mov
je
pop
(bad)
jle
push
pop
daa
mov
popf
push
xchg
das
mov
xchg
mov
pop
pop
push
fbld
xchg
movs
sbb
xor
push
push
add
stos
mov
mov
push
sbb
add
adc
push
mov
fidiv
push
or
retw
jp
mov
push
cmp
dec
(bad)
scas
daa
es
fwait
ror
cli
jmp
ss
pop
cmps
inc
pop
sbb
popf
cmc
fs
sub
ins
sbb
inc
mov
sub
add
add
mov
jb
and
mov
retf
fs
inc
pop
jno
fstp
mov
call
inc
dec
xchg
xchg
into
es
stos
sti
mov
xor
mov
arpl
jbe
sub
clc
or
and
mov
dec
stos
add
cs
addr16
mov
inc
shr
test
xchg
pop
fsubr
or
fisttp
sbb
(bad)
jge
push
push
aam
popf
cld
or
or
sbb
test
cli
pop
jnp
sbb
popa
imul
fsubr
sahf
sub
xchg
dec
fimul
ret
push
inc
(bad)
adc
push
sub
ss
and
sub
or
aas
push
retf
out
arpl
push
test
aad
sbb
and
jmp
in
mov
outs
mov
outs
stos
push
dec
dec
outs
adc
(bad)
hlt
nop
loop
and
mov
and
fidiv
jle
mov
push
push
inc
mov
push
inc
pop
idiv
pminsw
iret
pop
and
lods
jmp
mov
clc
jg
and
sub
xchg
(bad)
cwde
mov
cmp
cs
pop
fidiv
outs
(bad)
loopne
adc
xor
sti
add
xchg
sub
pushf
dec
enter
pop
xor
push
mov
dec
mov
xlat
adc
cld
lds
fcom
mov
arpl
aam
push
and
inc
mov
mov
loop
ds
mov
add
retf
loope
cli
popf
push
mov
icebp
movs
mov
jl
enter
mov
jmp
xchg
inc
jg
ret
or
lds
idiv
retf
pusha
or
sbb
push
xor
cmc
mov
fucom
jae
pop
repnz
cmp
jb
push
movs
adc
sub
ds
cld
cmp
mov
cmp
jp
in
aam
push
test
jle
or
and
or
or
adc
add
adc
in
cmp
iret
cmp
popf
mov
sar
in
pop
ins
sar
cli
ror
inc
bound
popf
fstp
mov
push
push
retf
rol
lea
lds
(bad)
push
movs
ja
in
inc
rol
cmps
outs
ss
test
ds
mov
dec
mov
jo
bound
xor
sti
std
pop
out
pop
(bad)
jbe
(bad)
adc
fdivp
ret
jl
adc
push
pop
push
jecxz
aad
mov
dec
dec
sub
gs
scas
hlt
cmc
xlat
sbb
mov
and
in
pop
daa
pop
mov
dec
retf
dec
(bad)
adc
sbb
xor
cmp
inc
fild
add
cmp
int3
scas
aam
dec
cwde
mov
inc
jl
and
out
and
lods
push
int
pop
int
paddd
ficom
xchg
ins
(bad)
out
pop
test
or
aas
sbb
cmps
sbb
loopne
fimul
push
int3
loopne
(bad)
test
test
mov
jmp
outs
repnz
or
fxch
adc
jmp
rol
sti
mov
retf
push
out
adc
in
(bad)
push
xlat
(bad)
es
stc
imul
int3
dec
pop
rol
pop
rep
mov
xor
push
repz
lock
push
mov
aad
jo
mov
in
sbb
push
push
test
jmp
xchg
fild
sbb
push
sub
pop
daa
push
add
fmul
fild
or
retf
fstp
into
sub
int
cmp
jno
cmc
ss
and
jg
(bad)
aas
mov
mov
ja
push
xchg
iret
inc
div
test
adc
cmc
add
sahf
mov
sub
hlt
outs
push
xchg
cmp
fstp
xchg
add
fadd
cld
dec
push
pushf
fisubr
xchg
loopne
out
inc
xchg
scas
pushf
aas
mov
xlat
sti
in
and
hlt
jno
loop
jp
mov
pop
mov
add
jo
dec
daa
jmp
xlat
ins
cmp
gs
inc
je
loopne
aam
inc
outs
cmp
outs
xor
jg
popf
adc
movs
or
mov
test
repnz
jb
outs
bound
(bad)
cld
cmps
jno
jmp
pop
in
fbstp
repnz
push
or
fwait
mov
mov
scas
movs
imul
in
cmp
ror
sbb
jle
push
sub
jmp
sahf
cmp
sbb
cmovb
les
fidiv
mov
ss
push
ss
mov
inc
pop
outs
adc
adc
shl
xor
fdivr
cmp
jge
inc
sbb
jge
dec
mov
sbb
loopne
and
mov
loope
jae
sahf
mov
pop
jl
add
fs
push
pop
add
xlat
test
fwait
pusha
les
sbb
cmp
pop
push
fwait
call
xor
iret
or
and
jbe
cmp
mov
jmp
not
dec
pusha
sbb
outs
jge
jmp
inc
push
in
jmp
inc
push
cwde
sub
(bad)
loop
sub
cmp
loope
add
mov
cmp
loopne
xchg
mov
dec
je
jae
pop
pop
sbb
imul
cmps
fwait
retf
sahf
and
pop
pop
or
repnz
inc
pop
jp
and
jmp
movs
xor
scas
popf
xlat
cmps
data16
sub
add
xchg
sbb
and
rol
cdq
cwde
add
std
mov
int3
mov
ret
pop
xor
in
fisub
fsub
sahf
movs
xor
push
daa
fisub
test
movs
dec
adc
mov
cld
mov
sahf
add
push
daa
pop
mov
ss
mov
inc
and
popf
jp
jae
sahf
sbb
xor
push
outs
es
dec
add
ja
mov
pmulhuw
inc
invd
mov
xchg
sbb
xchg
inc
lds
outs
or
xor
mov
add
xchg
push
push
aaa
dec
aaa
xor
xchg
mov
(bad)
pop
mov
mov
fld
(bad)
fisubr
jae
sbb
jns
pop
fisttp
mov
mov
rol
mov
inc
sbb
jmp
icebp
and
adc
ins
scas
cmp
xchg
jnp
dec
add
adc
jg
stos
leave
icebp
xchg
ins
sbb
scas
lods
jns
and
adc
jnp
and
loop
mov
repnz
jecxz
mov
cwde
pop
xlat
cmp
pop
(bad)
inc
mov
push
pop
daa
rcr
neg
pop
scas
call
mov
in
(bad)
ret
(bad)
loop
or
push
inc
or
(bad)
pop
xor
cmps
inc
ins
sti
cs
add
mov
cmp
dec
test
nop
loop
ja
jns
retf
aam
sub
pop
inc
push
cld
std
pop
ins
fst
cmp
lods
xchg
or
call
or
pop
fwait
movs
sbb
inc
cdq
ins
mov
loopne
mov
xor
adc
fdivr
adc
push
sub
cmp
jmp
loope
clc
ins
pop
jecxz
jmp
in
fld
gs
std
jmp
movs
ja
imul
xchg
dec
shl
mov
cmp
or
inc
mov
test
jecxz
jl
mov
call
pusha
cmp
(bad)
cli
lahf
dec
mov
ja
in
fmul
jge
pop
xchg
push
fld
aad
or
cmp
ja
inc
xchg
jne
ret
jno
(bad)
popf
adc
jp
nop
fist
out
cmp
retf
fisub
gs
fs
xchg
fdivr
call
outs
adc
test
dec
mov
mov
and
cmp
outs
aaa
(bad)
jne
pop
push
les
jo
frstor
repnz
adc
and
mov
jb
das
inc
add
ds
pop
xchg
pushf
jmp
out
mov
add
inc
fnstenv
lock
mov
loopne
xlat
(bad)
hlt
add
cmp
out
(bad)
das
sub
loopne
sahf
rol
xchg
jmp
push
cli
cs
fist
std
jne
pop
pop
addr16
leave
lods
add
in
inc
push
mov
enter
sub
movs
dec
out
sub
mov
xchg
cs
or
sahf
movs
cmps
sub
xchg
sbb
mov
jno
and
sub
xchg
fstp
rol
cmp
aas
add
push
mov
pop
sti
sub
jge
adc
jp
inc
imul
sti
(bad)
xlat
int
call
dec
fdivr
cwde
std
jle
push
imul
and
fwait
xlat
dec
fst
frstor
ret
(bad)
lods
add
mov
xor
xchg
sbb
sbb
or
and
cs
je
sbb
mov
nop
add
pop
sub
(bad)
repnz
adc
lock
aaa
inc
and
mov
(bad)
imul
lds
into
mov
jg
mov
cmp
mov
jo
add
js
nop
or
jle
cwde
xor
mov
push
jmp
inc
mov
dec
pop
jl
push
enter
les
xlat
dec
pop
push
add
lahf
int
in
adc
jmp
int3
mov
call
sub
pop
mov
inc
push
cmps
out
and
push
inc
je
push
lea
mov
lods
cmps
cmps
mov
pusha
movs
mov
std
ss
ja
rcl
leave
loope
and
push
call
sar
sub
dec
xor
ret
in
mov
and
dec
jge
dec
loope
sbb
les
rcl
jg
and
pop
xchg
xlat
cld
add
pop
aad
sub
sub
adc
xchg
mov
pusha
mov
xor
div
mov
xor
popf
enter
jo
test
or
jg
mov
fcom
rcl
push
jecxz
fcom
xchg
mov
sbb
xor
outs
daa
sahf
sbb
mov
imul
mov
or
add
fstp
mov
mov
push
(bad)
and
sbb
jb
ja
xchg
fsubr
push
xchg
ds
sub
xchg
sbb
outs
jnp
xchg
aaa
xor
call
aad
or
pushf
hlt
ret
push
in
dec
mov
aam
mov
xchg
ja
mov
mov
sbb
lods
int
push
cmps
daa
ds
pop
out
int3
icebp
bound
lods
rcl
test
dec
and
push
in
jnp
ret
fmul
dec
sub
jle
push
adc
retf
xchg
ror
(bad)
mov
pop
jp
ret
repz
enter
or
iret
push
push
repz
das
aaa
daa
repz
mov
retf
mov
adc
in
punpcklbw
and
or
lea
loop
xor
mov
stos
in
aad
and
punpcklbw
aad
retf
cs
jns
out
dec
add
sub
pop
pop
lds
call
push
in
out
lods
xchg
aad
ja
lods
or
int3
rcr
push
add
pusha
test
icebp
inc
cmova
or
clc
ret
or
xchg
sub
and
or
jo
jmp
imul
mov
mov
push
popa
fwait
test
sbb
xchg
nop
call
aaa
out
and
lods
cs
or
std
or
add
repz
dec
xchg
jmp
pushf
jnp
stos
repz
mov
out
mov
repnz
pop
mov
mov
test
les
cmps
mov
dec
lods
xlat
pop
popf
pusha
jns
cwde
xor
popa
das
out
jbe
clc
adc
jno
pop
cwde
and
mov
sbb
cmp
inc
push
scas
jg
test
das
pop
test
xchg
lock
or
mov
mov
jo
loope
fdiv
test
cmp
mov
push
test
adc
lods
fadd
inc
cmps
das
mov
(bad)
ret
aaa
xchg
push
mov
push
sub
jecxz
jge
shl
fisubr
mov
sbb
inc
les
mov
pop
push
pop
adc
jp
nop
xor
mov
xchg
xchg
jmp
dec
lods
fnsave
cmps
ror
lahf
fldcw
pop
sub
mov
stos
sub
jmp
and
mov
out
add
je
mov
inc
int3
cwde
push
fldcw
dec
jae
call
xchg
rcl
cs
add
das
mov
or
mov
aas
js
retf
xor
mov
add
fs
sub
sbb
nop
push
sub
lds
add
aaa
arpl
les
jg
outs
sahf
jmp
sbb
and
jns
les
dec
sti
or
xchg
js
scas
xor
mov
xlat
(bad)
aam
mov
inc
ror
in
sahf
aaa
scas
push
xor
mov
outs
pop
aad
aaa
xor
dec
jmp
mov
cmp
test
add
xchg
je
adc
test
dec
dec
out
(bad)
popf
push
int3
je
test
ds
mov
call
ss
jmp
imul
mov
dec
mov
add
mov
add
add
xchg
xchg
cmp
mov
nop
sub
addr16
pushf
cmp
or
pop
pop
(bad)
xchg
(bad)
mov
sub
xchg
pop
lahf
movs
repz
jmp
dec
jmp
mov
sub
xor
leave
push
mov
xor
xchg
jne
das
into
cld
imul
xlat
cmps
mov
mov
fidiv
rcr
pop
mov
mov
fisttp
in
cld
pop
popa
(bad)
jge
inc
and
push
fwait
in
mov
xchg
adc
adc
sub
push
bound
pop
ret
ja
jmp
(bad)
shl
int
daa
shl
wbinvd
push
aaa
cdq
sub
push
mov
aad
cmp
inc
cmps
xchg
cmp
clc
adc
mov
call
sbb
(bad)
mov
dec
pop
data16
push
into
adc
sub
mov
mov
hlt
add
add
aad
clc
cdq
xchg
add
mov
call
adc
sbb
rol
cmps
push
sbb
cmc
mov
idiv
test
mov
sub
sub
xchg
outs
pop
jmp
out
sbb
test
loope
dec
add
sub
jnp
sbb
xor
imul
scas
or
cmc
xchg
mov
enter
xchg
inc
push
ins
push
ins
mov
dec
cmp
fild
shl
xor
xchg
in
and
aaa
repz
mov
loopne
icebp
add
ffree
outs
jecxz
sub
aad
push
test
pop
(bad)
rol
lea
mov
shl
cmp
in
jp
jae
cs
push
add
mov
sub
fist
xchg
jmp
pop
cmp
arpl
cdq
rcl
stc
adc
jp
aaa
jl
daa
sub
xor
iret
jns
(bad)
imul
lods
stos
mov
(bad)
or
pushf
mov
sbb
pop
daa
mov
mov
das
scas
mov
sub
std
nop
mov
or
aaa
xchg
push
cmp
push
aas
loopne
push
into
dec
or
call
mov
fwait
data16
repnz
sub
leave
mov
adc
je
aaa
in
jb
push
adc
pop
pop
push
jmp
ins
stos
lods
sub
scas
shl
add
mov
(bad)
jecxz
sbb
in
push
retf
fucomip
(bad)
jmp
sub
jb
inc
test
ins
adc
in
fadd
call
push
sbb
shl
push
jl
pop
jg
sahf
cmps
les
je
sbb
mov
jecxz
mov
jae
sbb
push
test
dec
xor
(bad)
jo
fadd
sub
adc
inc
in
pop
add
push
cdq
push
mov
jecxz
movs
adc
sub
dec
test
mov
dec
enter
or
fst
in
mov
out
std
jo
mov
or
into
scas
leave
lods
push
push
mov
adc
adc
ins
mov
arpl
fstp
ret
dec
sbb
int
shl
mov
xchg
inc
fidivr
dec
sti
call
lea
inc
(bad)
pop
and
les
sub
pop
sub
lods
test
jmp
iret
cmp
nop
int
inc
stos
cdq
mov
sub
cmp
push
fsubr
inc
cdq
shl
aam
dec
pop
xor
jmp
pushf
adc
and
ins
sub
test
dec
repnz
push
test
scas
sub
cmp
jl
cmps
adc
sub
jns
sbb
sbb
xrelease
lahf
mov
rol
xchg
mov
sbb
mov
mov
dec
lea
aad
pop
or
into
add
movs
xchg
stos
push
adc
push
out
mov
jbe
jmp
and
sub
cld
gs
data16
sbb
dec
sub
add
jmp
arpl
inc
adc
jnp
jae
xor
in
pop
adc
pushf
dec
and
lods
idiv
test
sbb
xchg
stos
cmp
or
loopne
jp
xchg
fs
loopne
mov
jg
fs
xor
pop
call
xchg
adc
xor
test
mov
pop
sbb
jnp
out
(bad)
mov
in
mov
sub
or
xor
xchg
inc
mov
mov
lods
cmp
das
pop
xchg
leave
cs
push
and
repnz
cld
pop
dec
push
inc
push
mov
sahf
and
jae
push
lea
icebp
dec
sbb
not
in
jno
bsf
dec
push
pop
fidiv
pop
hlt
xor
adc
jmp
or
(bad)
rcr
add
jo
sti
int
xor
sbb
fiadd
ret
jno
test
daa
in
daa
and
jp
(bad)
jle
ret
mov
in
xor
push
test
dec
retf
sub
scas
call
jns
mov
ss
out
mov
js
lahf
jp
dec
push
fwait
popf
loope
add
inc
out
add
frstor
cld
xor
(bad)
sbb
test
cld
adc
add
ret
rcl
btr
inc
mov
adc
sbb
mov
hlt
sahf
outs
xor
daa
les
push
lea
fstp
cwde
dec
jge
test
dec
ficomp
dec
int
jns
iret
adc
pop
lock
and
dec
scas
push
fwait
xor
xchg
icebp
pusha
adc
jb
dec
fild
jle
je
popa
loop
dec
sub
cmp
cwde
adc
sub
aad
and
cmps
in
sbb
rcr
pop
push
pop
mov
sub
dec
sti
adc
rcl
(bad)
cwde
xchg
ror
fwait
shrd
add
sahf
gs
popf
jmp
xor
or
lods
ja
adc
or
mov
call
adc
call
pop
sbb
jle
sar
pop
nop
out
pop
cld
jns
xchg
push
or
lahf
push
lea
ins
int
ffreep
mov
imul
loop
sbb
and
cwde
and
dec
pop
jge
adc
aas
jb
xchg
setno
and
mov
jb
(bad)
int
imul
into
xchg
hlt
add
xor
std
movs
sbb
imul
scas
dec
call
sar
or
xor
in
mov
jg
push
(bad)
out
mov
xchg
xchg
jb
adc
cmp
cmps
adc
jg
jmp
mov
data16
ret
clc
add
xor
mov
adc
sbb
lock
lock
cwde
fild
stos
test
fist
iret
fidivr
fisubr
cmp
or
dec
push
jmp
sbb
aas
mov
retf
jle
sub
call
mov
(bad)
shr
fld
test
outs
cmc
mov
movs
adc
adc
enter
mov
xchg
adc
or
push
sub
dec
jne
icebp
stos
pop
or
js
cmps
outs
mov
scas
out
ins
and
int3
xor
popa
jno
mov
outs
mov
scas
outs
int3
mov
jns
nop
fild
(bad)
cmp
xchg
ins
mov
sub
cmp
push
adc
data16
and
rcr
xchg
loop
or
sbb
cmp
fs
xor
jge
xor
mov
ret
in
es
stc
clc
mov
add
repz
popa
(bad)
and
rcl
mov
jg
xlat
push
bound
push
jo
mov
not
test
shr
pop
xor
mov
adc
mov
jae
lea
idiv
mov
inc
mul
sub
std
daa
mov
pop
les
jg
out
dec
(bad)
rcl
jnp
lahf
cmp
ins
fmul
jnp
push
add
pop
cmp
jle
rcr
push
stos
xchg
add
ja
dec
dec
or
fmul
es
inc
shl
push
data16
cmp
add
icebp
mov
inc
pushf
cdq
adc
mov
test
mov
and
mov
cmp
shr
retf
push
stos
cmp
jns
dec
scas
pop
sbb
popf
ret
mov
movs
mov
xor
pop
push
add
leave
inc
xchg
xchg
cmp
mov
xchg
cmp
add
fwait
jb
cmc
movs
cmp
dec
dec
ja
test
inc
fwait
outs
pop
sbb
pop
daa
cvtdq2ps
mov
loop
fwait
push
jl
mov
cmp
pusha
pmovmskb
sub
mov
icebp
adc
loopne
mov
stc
lock
jge
scas
cs
std
mov
ja
loop
into
cld
adc
dec
pop
xchg
dec
inc
push
pop
cli
imul
and
sahf
imul
out
fst
dec
les
adc
xchg
cmp
xchg
push
inc
jl
cli
pop
test
sub
xchg
(bad)
ss
mov
xor
add
mov
pop
es
jae
sub
stc
retf
and
stos
and
or
dec
hlt
mov
and
dec
push
test
mov
mov
int3
movs
cmp
xor
and
cmc
inc
mov
cmc
lods
sbb
xchg
cdq
cwde
idiv
pshufw
jmp
mov
pop
push
imul
imul
xor
lock
dec
add
daa
sub
(bad)
fs
mov
xchg
mov
shl
int3
sar
sub
gs
les
js
jo
and
push
and
pop
or
xor
popa
loopne
test
and
ins
adc
mov
and
adc
in
retf
(bad)
(bad)
mov
inc
icebp
adc
clc
fwait
dec
mov
in
dec
mov
iret
pop
iret
in
outs
cmp
pop
scas
mov
jns
(bad)
int3
jbe
repnz
test
mov
out
xor
pop
or
mov
inc
xchg
fs
push
ja
lea
or
test
jbe
jne
xchg
xchg
inc
gs
ins
cs
cmp
and
ins
push
dec
icebp
inc
fsubrp
add
cmp
jne
xchg
add
repz
enter
inc
in
push
cmp
cmp
idiv
cmp
mov
push
aaa
data16
adc
movs
dec
out
sub
add
hlt
mov
(bad)
nop
adc
push
ret
clc
clc
jbe
mov
mov
xor
pop
push
loope
dec
mov
and
add
pop
rcl
sub
aam
sti
dec
std
inc
xchg
sub
icebp
mov
xchg
leave
sbb
les
mov
in
cmp
popf
fcmovnbe
pop
cld
xchg
or
aas
adc
xor
sub
mov
or
jno
jns
jns
popf
xchg
mov
sub
aad
adc
out
out
xor
addr16
(bad)
or
test
call
(bad)
xchg
cli
sbb
dec
jnp
js
das
jno
int
and
sub
cmp
jecxz
mov
call
mov
push
ret
bound
enter
push
sbb
out
xor
mov
ficom
sub
out
mov
xchg
xchg
adc
cmp
jo
inc
stc
inc
scas
push
ret
in
xor
aad
or
adc
inc
out
sbb
pop
push
mov
mov
jmp
popa
and
cmp
adc
fwait
daa
arpl
cld
sti
push
call
pop
retf
sub
aaa
aam
add
in
cmp
loop
dec
pop
mov
popa
ja
jle
retf
cwde
lahf
jo
stos
(bad)
jnp
and
popa
ja
or
add
inc
dec
inc
aad
fistp
bound
retf
mov
push
pop
inc
in
xchg
fcmovnbe
sub
aad
iret
cmp
pop
rol
cmp
rcr
movs
aam
dec
push
adc
int
lods
fisttp
or
dec
mov
ret
bound
jg
xor
jbe
mov
fstp
mov
sub
loope
mov
lea
and
mov
sub
leave
sbb
aad
dec
(bad)
mov
test
cmp
dec
jb
sub
push
xor
outs
jns
xor
in
shr
xchg
je
jno
retf
inc
addr16
inc
or
sbb
fidivr
out
mov
(bad)
call
mov
mov
call
jno
fsubr
mov
xchg
or
aam
leave
pop
push
lahf
fild
bound
rcr
test
fdiv
add
pop
xor
sub
or
bswap
and
sbb
xor
push
bound
pusha
sub
data16
mov
and
cmp
fild
popa
sub
out
and
jecxz
adc
sub
adc
push
stos
daa
cmp
and
push
in
stos
mov
shl
in
rcl
push
ficomp
adc
xchg
mov
jno
mov
sbb
jl
or
neg
sub
jecxz
mov
mov
jae
xchg
nop
not
jg
lea
and
pop
mov
jg
pop
adc
xor
add
jge
lds
bound
cmp
mov
and
imul
adc
inc
inc
xchg
test
clc
sub
cmp
inc
jg
push
dec
adc
mov
mov
or
dec
mov
sub
jp
adc
popf
imul
jmp
icebp
mov
mov
jnp
ficom
adc
mov
call
dec
dec
push
ins
jno
cmp
pop
cmp
daa
push
mov
neg
in
mov
mov
and
(bad)
clc
pop
nop
jg
shr
xchg
xor
cmp
test
mov
hlt
aad
mov
arpl
cli
push
pop
rol
and
jnp
pop
or
dec
test
(bad)
jle
and
sub
enter
(bad)
loope
stc
ret
je
movs
jae
out
addr16
and
cli
xor
loopne
popf
cmps
or
gs
fwait
push
push
lds
sti
sub
lahf
dec
pop
sub
adc
pop
mov
js
aam
xor
bound
ds
xor
ins
std
push
ret
int3
or
mov
xchg
add
mov
push
ffree
jo
leave
and
mov
pop
mov
xchg
pop
nop
lea
das
dec
sub
and
inc
sbb
sub
xchg
cwde
sbb
arpl
cmp
out
add
jnp
dec
stc
sub
mov
cwde
fucomi
arpl
mov
call
xor
iret
adc
icebp
fs
mov
(bad)
aas
je
fist
inc
mov
push
shl
xor
add
mov
sub
sti
div
data16
cmp
ror
mov
jp
je
jmp
stc
aam
fistp
icebp
jo
mov
xor
out
cmp
mov
outs
dec
cmp
daa
aas
jg
mov
push
add
inc
test
lock
add
add
jns
inc
push
jbe
push
call
add
iret
call
cld
or
out
mov
adc
sbb
mov
inc
mov
ret
jl
adc
cmp
push
adc
es
pop
ja
mov
idiv
mov
inc
loop
mov
pusha
cmp
xor
mov
fs
lods
pushf
out
cwde
test
call
stc
cmps
and
or
inc
ror
pop
ja
retf
mov
invd
nop
adc
lods
inc
cmp
daa
xchg
sub
stc
xor
mov
mov
pop
adc
xchg
fstp
popf
stos
repz
repz
les
bts
leave
into
dec
aad
out
fnstsw
mov
cld
push
inc
sub
jecxz
cmc
push
xor
xor
stos
mov
mov
and
call
sub
sub
pop
sub
outs
xchg
bound
mov
js
pop
inc
test
pop
into
int
jg
nop
out
add
pop
call
xor
pop
int3
loop
imul
fs
and
xchg
push
out
mov
pop
xchg
cmp
sbb
or
cwde
call
push
add
and
mov
and
retf
sub
ror
xchg
pop
pop
jl
pop
movs
test
cmps
test
je
out
and
loop
cmp
imul
(bad)
popa
push
out
xchg
std
test
mov
sbb
mov
movs
mov
bound
and
mov
jmp
dec
push
xor
addr16
push
sub
fsubr
ret
fisttp
mov
ucomiss
test
cmc
sub
sub
ror
ret
sar
mov
mov
adc
test
lods
cmp
test
lea
hlt
push
xor
fwait
cwde
push
jns
ds
repz
mov
sbb
or
(bad)
sbb
lds
inc
sbb
cmp
cmp
addr16
cmp
inc
inc
rcl
or
dec
xor
js
pop
dec
pop
rcl
stos
ins
int
pop
stc
aad
sub
and
jg
repz
lods
cmps
(bad)
in
jp
ret
fcom
xor
add
aad
inc
and
pop
pop
push
fsub
jle
(bad)
inc
js
mov
scas
div
pop
adc
pop
and
xor
std
js
push
ss
neg
ja
inc
lock
xor
pop
pop
cdq
(bad)
cmc
xchg
leave
outs
lods
sbb
adc
xchg
push
xor
scas
and
jns
sbb
mov
sbb
xchg
cmps
(bad)
daa
mov
leave
mul
add
mov
push
dec
mov
mov
(bad)
push
das
mov
pop
out
into
sbb
mov
lods
push
push
es
jl
xor
bound
rcr
fisub
(bad)
cli
shl
aad
mov
ror
mov
cmc
test
sub
pusha
sti
push
sub
mov
inc
and
and
retf
pushf
cmps
test
inc
push
or
not
out
jl
int
aas
jmp
aad
xor
adc
pushf
or
inc
sub
mov
lea
xor
jo
mov
jnp
push
mov
lds
and
mov
outs
pop
out
jmp
nop
push
outs
push
sub
cmp
into
movs
aaa
push
cmps
cs
lahf
jnp
sub
inc
adc
fisubr
mov
jae
lahf
add
xchg
dec
or
and
imul
push
loop
outs
add
mov
aaa
out
pop
xor
ds
movs
push
(bad)
stc
inc
pop
push
xchg
ss
dec
or
(bad)
add
popa
fwait
ss
out
dec
mov
adc
iret
pop
fsubp
mov
xchg
and
push
add
push
sub
cmp
nop
add
push
inc
sbb
fnstsw
stos
aaa
je
dec
fstp
test
stc
adc
test
retf
inc
fwait
loop
retf
gs
in
(bad)
call
jl
aam
pop
mov
nop
stos
xor
add
mov
mov
jecxz
(bad)
aad
lods
pop
cmp
and
ret
lahf
mov
inc
ss
out
gs
bound
fucomp
fcmovne
sbb
dec
jecxz
loope
nop
mov
call
ss
rol
push
mov
mov
adc
es
mov
addr16
out
test
xchg
or
fmul
rol
imul
mov
mov
push
cmc
xchg
in
xlat
mov
pop
cmps
fs
not
movs
xor
mov
lock
(bad)
sbb
or
xchg
jno
dec
xchg
sbb
arpl
(bad)
imul
mov
neg
jo
jmp
xlat
inc
jl
mov
out
sub
retf
mov
pusha
dec
js
outs
sub
aas
push
cs
fstp
enter
jmp
xchg
dec
add
mov
arpl
outs
outs
dec
mov
sbb
dec
pushaw
call
aam
rcl
and
leave
xchg
test
outs
into
xor
ret
ror
mov
adc
jae
pop
(bad)
imul
mov
adc
mov
cmps
pop
mov
stc
retf
xchg
adc
or
fadd
stc
fwait
clc
movs
sbb
pop
lock
jo
in
add
lods
mov
jmp
cdq
nop
repz
jne
push
or
cwde
ficom
mov
pop
outs
or
mov
in
xchg
loope
pusha
inc
cmp
xchg
stos
xchg
cs
dec
add
push
ja
fist
test
ds
out
arpl
inc
aaa
daa
mov
push
adc
push
test
pusha
sbb
jl
les
mov
jl
test
cs
icebp
push
cmc
mov
idiv
sti
data16
fild
dec
fs
xor
and
scas
pushf
adc
repz
cmp
sub
in
cdq
jmp
jo
inc
sub
cmp
jl
call
ror
xor
ret
adc
jb
sub
addr16
cmp
popa
sbb
retf
add
jg
push
mov
jmp
mov
dec
(bad)
inc
call
xchg
mov
mov
fisttp
mov
pop
xchg
adc
xor
stc
std
(bad)
xor
cmp
js
cli
rcr
call
inc
xchg
xchg
rcr
or
mov
imul
inc
popa
and
(bad)
inc
std
mov
inc
inc
adc
test
mov
xor
inc
(bad)
or
outs
mov
scas
add
sub
retf
inc
(bad)
(bad)
fdiv
repz
fnstsw
lea
mov
xchg
sub
sbb
loopne
push
gs
or
xor
mov
js
mov
rcl
add
push
push
adc
mov
mov
js
push
jmp
(bad)
jns
dec
mov
cmp
xor
std
mov
add
mov
and
mov
add
addr16
imul
shr
mov
(bad)
sbb
inc
out
jmp
pop
dec
ja
xor
lods
shl
or
fnstenv
scas
pop
or
test
out
pop
lods
outs
inc
dec
jns
xchg
mov
dec
call
jp
jmp
jl
xor
xor
sti
cli
repz
cdq
cmp
jmp
add
jge
jb
nop
push
pop
sub
movs
int3
inc
mov
ret
fwait
aaa
outs
repz
xor
aad
sub
ret
mov
jmp
xchg
adc
xor
adc
mov
mov
std
sub
adc
into
cwde
hlt
mov
call
or
jge
iret
dec
test
shl
out
xchg
push
lea
rcl
adc
fst
dec
scas
xlat
jbe
jmp
mov
xchg
pop
mov
lods
in
test
imul
cmps
mov
mov
sub
arpl
call
das
mov
mov
adc
xchg
fistp
fidiv
or
pop
sti
xchg
loopne
push
mov
test
pop
jnp
add
mov
je
mov
sub
mov
xor
push
mov
push
sub
cwde
daa
jge
int3
test
push
test
call
mov
shl
mov
xchg
jg
cdq
stos
popf
jnp
mov
les
or
cmp
dec
sbb
std
std
mov
jne
enter
jecxz
push
dec
stos
xchg
repz
icebp
adc
cmp
xchg
dec
cmova
out
dec
pop
jbe
xor
jbe
inc
loop
pusha
cli
push
retf
and
mov
test
(bad)
xchg
call
shl
loopne
sbb
les
into
cmp
sub
loope
loope
inc
lods
std
xchg
les
mov
inc
pop
pusha
sahf
dec
rol
loope
scas
xchg
sbb
push
sbb
mov
push
xor
(bad)
mov
test
inc
push
xchg
mov
mov
stc
movs
pop
push
movs
fadd
xchg
adc
sbb
push
xchg
daa
pusha
adc
push
dec
or
xor
nop
and
and
cmp
(bad)
jecxz
jl
ja
dec
push
sbb
std
fmul
push
rcr
mov
bswap
mov
(bad)
cmp
scas
dec
lea
xchg
popf
pop
add
mov
and
test
dec
(bad)
or
cmovo
xor
lods
ds
sub
mov
push
sti
push
jne
test
aas
pop
scas
pop
push
je
jmp
jmp
lahf
jne
outs
inc
pop
sbb
dec
push
sbb
repnz
sub
push
aad
xor
jp
push
and
out
push
je
push
mov
xor
cmp
add
inc
sub
cld
dec
sbb
and
aas
fst
push
cmp
jmp
xor
push
sbb
mov
xor
adc
mov
imul
mov
retf
movs
in
repz
pop
rol
mov
cmp
in
cmp
add
sub
dec
and
push
test
neg
(bad)
xchg
mov
cmp
lods
cmp
hlt
xchg
sub
push
jae
pusha
sub
jmp
mov
in
pop
jbe
cmp
outs
aad
mov
daa
mov
cmp
or
in
sbb
adc
mov
js
aam
adc
jmp
push
inc
(bad)
mov
ins
dec
movs
pop
xchg
mov
mov
rcl
or
inc
mov
or
jmp
push
test
xor
mov
test
test
jecxz
xchg
cmp
test
mov
cmp
(bad)
and
sti
cwde
cld
mov
out
mov
adc
inc
or
pop
and
and
mov
jnp
aaa
stc
std
in
sar
add
sub
or
neg
xchg
xchg
adc
jg
mov
or
sub
xchg
xor
pop
les
sbb
pop
stos
pop
sub
sub
das
sbb
addr16
or
(bad)
loop
cs
cmp
mov
xchg
cmp
push
xor
clc
pushf
(bad)
shr
push
xor
xor
push
add
into
push
ss
inc
mov
pushf
mov
fs
xor
loopne
add
cmp
xor
test
frstor
or
(bad)
sahf
jl
ret
lods
ss
shl
pop
(bad)
mov
rcr
retf
xor
lods
push
loopne
pop
loopne
cmps
pop
movs
ins
and
cmps
push
rcr
retf
dec
pop
es
push
mov
jecxz
aam
sub
mov
ret
xor
mov
aaa
shr
out
ins
out
xor
call
fild
dec
add
(bad)
sub
jne
jmp
jbe
test
clc
lds
and
mov
mov
bnd
fsub
(bad)
cmp
sbb
fcom
fdivr
adc
adc
or
hlt
mov
imul
enter
aas
mov
pushf
cdq
bound
and
push
enter
or
add
stos
pop
icebp
cmp
pusha
das
cmp
stc
sbb
push
and
hlt
(bad)
mov
sar
adc
enter
cmp
mov
ret
call
sub
dec
test
and
add
pop
enter
imul
aaa
sti
push
adc
scas
mov
push
lods
mov
test
push
stos
pop
cmp
fdiv
fld
push
mul
sub
sub
sbb
push
push
retf
jle
xchg
imul
push
and
scas
xchg
js
cmp
jmp
jp
mov
es
mov
mov
in
and
fs
test
pop
xchg
mov
cmps
and
in
or
lea
scas
retfw
dec
(bad)
ds
out
mov
ss
xlat
les
adc
or
fmul
and
or
sub
mov
gs
jge
fdivr
push
mov
enter
mov
xor
dec
pop
cmps
rcl
xchg
mov
loopne
cmp
mov
mov
call
in
or
cmp
sub
sub
fwait
sahf
clc
pop
pop
out
shl
adc
and
mov
ins
fisub
(bad)
scas
sbb
sti
loop
imul
xchg
jge
jnp
xchg
lock
dec
shl
loopne
cmp
jecxz
add
in
inc
inc
mov
jno
xchg
fimul
stc
shl
mov
inc
imul
add
cdq
(bad)
or
inc
xchg
leave
adc
xor
aad
test
sub
mov
or
stc
out
addr16
sub
mov
repz
push
and
cmps
jo
add
or
loope
sub
sbb
adc
out
inc
mov
add
mov
inc
(bad)
cmp
or
movs
aaa
aam
cmp
cld
frstor
push
dec
mov
mov
(bad)
mov
adc
adc
stos
add
nop
cmp
(bad)
popf
jge
clc
sbb
std
sub
push
in
fcomp
cmps
sub
mov
xor
push
dec
jo
ret
call
jge
add
push
cmc
sub
push
xlat
pop
and
add
and
inc
(bad)
sti
lods
adc
mov
xor
add
jmp
fiadd
bound
adc
dec
and
pop
mov
fsub
loop
sbb
push
and
sbb
add
xor
sbb
inc
inc
jl
js
lahf
into
adc
push
gs
pop
inc
idiv
ss
hlt
into
out
icebp
sub
add
jbe
scas
adc
out
cdq
cli
dec
adc
mov
push
dec
repnz
jae
xchg
lea
push
mov
xor
nop
pop
ret
je
(bad)
jns
das
fldenv
mov
sub
cmp
jl
into
das
aas
jle
movs
sub
push
into
or
inc
popf
sbb
and
rol
sub
ja
xchg
add
or
jae
fild
pop
xchg
xchg
call
ret
cmovo
dec
add
gs
cli
test
cmp
add
mov
sub
or
or
pop
pop
or
inc
mov
xor
or
movs
cwde
stos
xlat
pand
dec
push
jle
cmp
mov
jg
xor
pop
sbb
(bad)
(bad)
arpl
jb
jbe
and
ins
jmp
ins
cmps
mov
inc
or
adc
push
popf
push
out
rcr
sbb
add
xchg
xchg
rol
xchg
(bad)
cld
or
jnp
sub
test
mov
pop
mov
iret
imul
jbe
mov
cdq
les
retf
mov
cmps
cmc
(bad)
jge
leave
stos
rcr
mov
fimul
dec
mov
sbb
cmp
mov
xchg
div
cmp
xor
or
imul
cmp
into
inc
sahf
add
push
daa
mov
mov
fwait
sub
iret
pop
jg
movs
int
adc
ds
push
mov
cmp
add
push
cmp
add
ja
leave
(bad)
fist
dec
rcr
fild
in
fbstp
mov
cmp
jl
rcr
std
and
add
stos
dec
add
rcl
adc
aas
cmp
sub
sub
and
jle
mov
fs
test
mov
std
popa
or
in
or
aam
test
jp
or
sub
mov
lds
sbb
cdq
jmp
sti
sub
lea
pop
jne
mov
test
retf
sbb
mov
fisub
sar
fisttp
call
lods
or
push
(bad)
xchg
xchg
lds
imul
cli
push
and
lea
in
imul
xor
dec
mov
or
lea
mov
into
jp
sahf
inc
outs
ins
enter
lea
cdq
xchg
mov
mov
xchg
ins
adc
pop
test
mov
popf
cmc
xchg
push
sahf
adc
or
sub
xchg
stos
sbb
out
dec
fadd
pushf
push
and
sbb
int3
ror
sbb
xchg
jmp
jne
push
mov
jge
fidivr
or
mov
xchg
sub
out
mov
xor
ret
xchg
shl
xchg
jo
neg
scas
pop
cwde
(bad)
xchg
add
adc
and
data16
dec
nop
cmp
enter
mov
imul
bound
mov
jg
rol
js
pop
add
sar
cmp
into
loope
outs
dec
sub
cmp
das
push
in
rol
mov
pop
retf
call
mov
fild
(bad)
add
sahf
pusha
fbld
mov
mov
out
mov
repnz
add
push
pop
imul
push
ins
dec
cmps
pop
mov
loope
pop
add
adc
mov
xor
push
daa
pop
aad
jmp
xlat
push
adc
add
push
call
stos
shl
mov
in
push
in
adc
xchg
mov
fldcw
and
in
mov
xor
(bad)
inc
sub
sub
std
into
mov
jnp
mov
mov
dec
clc
test
jne
fadd
je
mov
in
fist
pop
add
das
lock
packuswb
pop
inc
xchg
or
jae
xor
dec
adc
mov
in
pop
lock
inc
add
mov
push
in
mov
jo
ret
xor
dec
push
sbb
(bad)
mov
das
ror
xor
adc
adc
(bad)
push
loope
inc
dec
gs
push
in
cmp
jb
sti
daa
ins
xor
xor
sar
push
stc
leave
retf
aas
stos
daa
push
(bad)
xor
xor
jmp
imul
ins
mov
xchg
in
in
(bad)
imul
jmp
sub
jp
xchg
daa
mov
stc
jnp
rcl
movs
iret
(bad)
sbb
cmps
push
test
sub
call
neg
or
dec
sti
xchg
movs
arpl
and
push
sbb
loop
add
jl
loop
xor
es
repz
and
jmp
(bad)
retf
lahf
jmp
push
clc
pushf
cmp
add
xor
enter
jg
lods
push
adc
xchg
adc
pop
mov
sbb
pop
and
sub
shl
mov
mov
mov
jmp
cs
mov
mov
jbe
sub
(bad)
mov
jl
and
jbe
test
out
sahf
and
pusha
xor
xor
sbb
xchg
xor
jmp
dec
fcomp
out
leave
loop
add
mov
dec
adc
clc
mov
adc
movs
inc
push
push
sbb
add
shr
cdq
xchg
mov
les
movs
bnd
mov
pop
loop
vaddsubps
adc
sbb
push
and
xchg
pop
cmp
fwait
sbb
out
inc
pushf
pop
add
xchg
fld
sti
(bad)
push
stc
arpl
cmp
adc
aam
shr
cmp
sub
add
xlat
xor
xor
jge
imul
add
push
or
dec
xor
push
arpl
mov
add
out
mov
mov
jnp
ret
mov
inc
stos
adc
adc
adc
jo
repz
cmp
pop
in
sub
cmp
fiadd
dec
loop
ins
dec
mov
cmp
out
(bad)
or
stos
imul
xchg
fidiv
sub
push
and
stos
mov
ficom
in
pop
rsm
mov
add
xchg
adc
into
dec
dec
loope
out
(bad)
lds
inc
pushf
cmp
fadd
pushf
jmp
test
dec
jne
sub
or
mov
jmp
cld
sbb
or
in
(bad)
sub
jno
inc
cli
pop
out
aaa
pushf
sub
push
lock
push
mov
cdq
stos
leave
pushf
xchg
fidivr
sbb
popa
bound
add
aas
rcr
mov
movs
or
sbb
mov
xchg
dec
into
and
addr16
mov
shl
bswap
data16
jp
add
jne
arpl
push
push
scas
loop
icebp
or
vandnpd
mov
test
shr
repnz
lea
faddp
imul
inc
pop
loopne
pop
fcom
mov
ret
cmp
xlat
jmp
push
popa
xor
or
jl
test
lock
aam
lods
(bad)
jl
dec
outs
inc
arpl
sbb
lea
test
cmc
in
lds
inc
(bad)
clc
push
mov
out
call
inc
jno
out
sbb
xlat
push
and
pop
xchg
cdq
enter
jns
cmp
mov
fist
(bad)
outs
jmp
mov
es
push
call
pop
push
inc
fst
or
mov
into
pusha
mov
xor
sbb
outs
jno
cmps
adc
sahf
fsubr
sub
cmp
icebp
add
ret
jb
mov
dec
(bad)
lods
mov
inc
mov
adc
push
cmc
jns
add
test
mov
sbb
pop
nop
mov
dec
push
ins
xchg
and
sahf
mov
pop
xor
cmp
inc
add
pusha
mov
outs
xlat
loope
std
pop
and
sub
inc
push
and
fisub
adc
addr16
xchg
ret
sbb
hlt
push
ss
xchg
repnz
sbb
adc
push
out
mov
loope
push
leave
mov
retf
(bad)
out
push
or
push
sahf
popf
sub
cmc
fld
adc
clc
out
and
dec
jne
pushf
cmp
mov
inc
push
(bad)
out
adc
inc
fs
pop
fld
outs
adc
test
or
sub
jne
sar
enter
xchg
cmps
add
cs
jae
push
mov
ror
inc
pop
xchg
add
sbb
push
jbe
or
inc
pusha
out
dec
ins
push
aad
(bad)
nop
iret
(bad)
aam
sub
fwait
out
bnd
inc
sbb
adc
bound
js
adc
pop
cmp
or
push
xchg
sub
jg
push
ret
repnz
jo
test
dec
call
lds
aas
fisttp
scas
jmp
xor
mov
mul
(bad)
cdq
or
cwde
xor
mov
mov
mov
cmp
cmp
adc
xchg
push
sahf
ret
mov
xchg
pop
sub
xor
xchg
mov
lock
std
retf
pop
pop
pop
xor
mov
and
xor
sub
sbb
jle
cmp
push
adc
stc
push
mov
cmp
stos
in
ss
sar
cmps
sbb
xchg
mov
xchg
les
aam
mov
mov
ret
jl
jl
ins
mov
xchg
outs
(bad)
stc
leave
adc
popf
and
mov
add
and
iret
mov
jmp
sbb
and
mov
enter
dec
enter
adc
aam
in
dec
outs
xor
xor
mov
stos
imul
mov
test
fistp
pop
sti
stc
and
test
ins
cmps
je
and
mov
push
pop
pop
xchg
into
or
dec
les
pop
sbb
(bad)
jb
push
lods
pop
jl
ret
jne
xlat
aaa
adc
mov
jge
ja
push
rcr
and
pop
out
sbb
nop
jl
mov
in
cwde
jno
mov
cmp
inc
push
xchg
fidiv
mov
repz
dec
int
fs
sar
and
movs
ins
in
test
cmp
xchg
jmp
sub
sub
adc
push
cmp
je
mov
scas
jb
xchg
movs
sbb
pop
aad
mov
dec
(bad)
xlat
int3
lahf
das
jbe
imul
stc
cs
nop
movs
cmp
adc
fisubr
xlat
xor
stc
xchg
and
popf
jp
aas
repz
mov
pushf
retf
and
adc
mov
mov
stos
hlt
xor
arpl
movs
jo
je
repnz
mov
xchg
dec
mov
pusha
fstp
repnz
add
push
idiv
jns
xor
xchg
xchg
jp
cmp
jle
sbb
cli
add
add
add
xor
jbe
inc
mov
lea
(bad)
ss
stc
dec
cmp
mov
push
inc
cli
pop
loope
arpl
clc
call
ss
leave
jb
lock
mov
into
out
dec
fucomp
fisubr
cmc
popa
pop
test
sub
or
xchg
mov
add
jns
adc
xchg
ins
xchg
or
mov
xchg
stc
xchg
fdivr
and
hlt
pop
loop
pop
pop
popa
jmp
jmp
shl
scas
sti
sti
loop
mov
dec
into
and
xchg
inc
movs
pop
jmp
div
int
mov
mov
mov
mov
xchg
add
adc
sbb
fdivr
cmps
and
xor
ins
inc
mov
inc
push
test
lea
jg
jmp
xlat
(bad)
(bad)
jecxz
jecxz
call
jno
mov
mov
add
mov
add
int
and
fcom
mov
add
gs
xchg
mov
mov
outs
ror
xchg
lea
add
xor
sub
and
shl
cmp
xchg
mov
cmc
jge
loopne
cmp
loop
add
xchg
push
cmp
cwde
or
mov
cld
call
inc
imul
sti
xchg
nop
(bad)
sub
mov
cld
popf
push
sbb
adc
jno
jmp
adc
dec
or
xor
fwait
jl
or
xchg
or
icebp
jne
add
mov
jnp
stos
mov
push
push
mov
cmp
inc
(bad)
(bad)
ret
xor
pusha
add
xlat
push
mov
xchg
int
test
(bad)
(bad)
sbb
data16
pop
mov
fsubr
aaa
out
or
cmp
mov
push
or
inc
mov
xchg
shl
jnp
imul
and
xchg
pop
out
fbld
xchg
in
shl
sub
cwde
daa
adc
xor
sbb
(bad)
xchg
inc
fmul
(bad)
mov
mov
fwait
pop
je
clc
cmp
shl
mov
xor
dec
push
ds
adc
lods
in
jl
shr
push
shr
test
imul
popa
es
ja
push
fcomip
jne
dec
outs
jg
mov
mov
push
cld
or
jge
adc
stos
out
ins
xchg
inc
adc
push
sub
pop
cmps
fisub
hlt
movs
mov
xchg
jnp
lea
pop
retf
leave
push
lods
es
punpckhdq
dec
shl
sub
sub
sbb
xchg
dec
xor
dec
mov
por
jmp
es
xchg
sub
xchg
lea
inc
mov
add
ja
mov
fisttp
mov
inc
fsub
sub
cdq
pop
jle
and
inc
jle
lods
xchg
lock
(bad)
sbb
fmul
or
mov
int3
dec
imul
(bad)
push
sub
fadd
xchg
add
push
imul
(bad)
icebp
push
add
mov
sahf
call
addr16
jl
push
sti
psrld
stc
cmps
imul
addr16
jo
or
lock
pop
dec
ins
(bad)
inc
mov
or
inc
imul
inc
mov
xor
inc
cmp
std
in
sbb
sbb
push
ret
xchg
add
push
cmp
test
jle
in
xchg
pop
or
sub
lds
cmp
das
fisubr
mov
fs
jp
adc
xchg
vpmacswd
repz
icebp
lock
mov
dec
imul
(bad)
xor
jo
push
add
or
pop
dec
es
mov
fild
(bad)
xor
ret
and
div
push
push
jns
mov
ret
pop
std
das
xchg
(bad)
into
int
call
repz
mov
out
add
ins
xlat
cmc
sti
cwde
adc
into
xchg
enter
retf
fmul
xchg
pushf
jns
dec
loop
dec
sahf
mov
outs
add
add
cmps
and
or
push
iret
aaa
dec
inc
mov
test
push
dec
pcmpeqb
add
dec
rcl
push
add
and
gs
sar
shl
pop
pop
jmp
out
sbb
adc
(bad)
jno
call
addr16
enter
test
imul
inc
lods
sahf
jl
lock
or
push
jae
sbb
mov
push
das
sbb
add
jo
fwait
adc
popf
sub
dec
addr16
add
mov
hlt
retf
lock
leave
mov
div
xchg
pop
cmp
(bad)
xor
mov
retf
mov
fld
push
scas
lahf
js
test
out
pop
mov
push
jo
test
loop
fistp
hlt
std
inc
xor
adc
push
adc
test
outs
and
pushf
enter
cwde
or
scas
(bad)
pop
out
imul
adc
or
out
test
lea
loopne
fcomp
inc
add
inc
jge
and
outs
jno
or
les
int
xchg
mov
add
fcom
pop
mov
cvtpi2ps
das
aad
add
call
inc
imul
sbb
aas
xchg
sub
pushf
popf
xchg
cmp
mov
fidiv
mov
xchg
(bad)
xchg
ret
xor
push
loop
clc
shr
cmp
and
stos
sbb
dec
sbb
mul
fs
push
(bad)
out
ret
dec
xchg
stos
or
imul
and
rol
out
xchg
(bad)
jmp
or
jmp
lods
sahf
test
enter
iret
jmp
jp
sbb
stc
and
pop
fistp
sbb
test
xchg
lock
rol
cmp
sbb
nop
aad
bound
adc
cli
fcos
push
inc
test
sahf
mov
call
xchg
mov
sub
test
inc
adc
mov
mov
sub
nop
fdiv
inc
sub
std
les
pop
int3
fld
shl
or
mov
repnz
mov
aas
fcmove
sub
repnz
jp
sub
jo
jmp
pop
or
sbb
stos
mov
jb
pop
jmp
or
pop
(bad)
fdiv
sub
pusha
mov
test
int3
cmp
dec
test
mov
jecxz
int
mov
add
mov
or
adc
pop
mov
push
or
movs
gs
gs
jb
hlt
fcmovbe
jmp
es
adc
outs
out
and
and
std
and
inc
mov
inc
retf
dec
inc
shl
into
inc
dec
ss
rcl
cmps
retf
dec
jle
movs
mov
and
gs
jbe
movs
hlt
adc
jge
test
int3
jns
jns
cmc
aas
sub
enter
jmp
mov
fcmovb
stos
cmps
add
inc
cmpxchg
xlat
scas
mov
loop
nop
adc
dec
xchg
leave
add
ss
adc
inc
jg
in
aad
call
aam
xor
pusha
in
js
jno
out
inc
test
or
ror
sahf
push
aaa
or
icebp
jecxz
in
les
mov
mov
jns
shl
sbb
movs
mov
test
pop
xchg
and
test
push
arpl
pop
data16
rcl
pop
push
and
pop
push
inc
push
(bad)
shr
cli
jbe
push
mov
adc
int3
jns
mov
jno
icebp
xchg
jle
mov
xor
stc
fcmovbe
jp
or
scas
mov
out
test
sbb
bound
jnp
mov
sbb
leave
mov
push
add
or
retf
call
aaa
mov
pop
shl
push
jp
in
(bad)
cmp
ins
mov
dec
rcr
xchg
frstor
jecxz
fnstcw
sti
inc
jb
and
fstp
cmp
bound
pop
test
inc
and
adc
cmp
jmp
test
in
fisub
fbstp
lods
(bad)
xchg
inc
mov
jg
out
jb
shr
jmp
sar
mov
outs
mov
push
dec
fild
test
push
inc
mov
vphaddubw
test
stc
or
gs
jmpw
push
pop
jp
mov
push
mov
or
jecxz
mov
pop
dec
test
or
xor
jo
xor
mov
ror
sbb
lea
es
rdpmc
sub
dec
call
(bad)
cmps
lods
sbb
pop
mov
ins
push
jge
cli
inc
or
out
lock
test
and
xadd
popa
imul
fnstcw
mov
or
cmp
stos
shr
test
shl
icebp
jecxz
adc
pushf
xchg
ret
sub
aam
jnp
xchg
mov
pop
jecxz
lods
sub
and
sub
xchg
test
test
xchg
mov
xbegin
call
outs
iret
dec
xor
mov
cmps
jg
or
stos
xor
add
stos
sub
pop
mov
jle
rcl
and
cmps
cs
pop
cdq
test
mov
jmp
into
pop
inc
xchg
jo
inc
cdq
out
mov
lock
dec
ins
repz
xchg
cli
hlt
or
mov
ss
sbb
(bad)
(bad)
cmp
mov
adc
std
xchg
mov
xor
inc
xchg
ins
call
inc
mov
jno
mov
mov
clc
add
rep
pop
test
arpl
outs
idiv
adc
dec
jb
push
scas
mov
(bad)
jb
enter
stc
pop
bound
pushf
sbb
test
xchg
iret
cmc
adc
xor
fsubr
loopne
pop
inc
pop
jae
outs
jp
jmp
scas
xor
lds
push
stc
arpl
test
pop
mov
or
dec
loopne
(bad)
push
xchg
je
jl
add
aam
inc
cdq
rcl
push
cmps
test
sub
mov
push
inc
mov
imul
loopne
sub
repnz
inc
ins
mov
sbb
mov
push
adc
xlat
xlat
sbb
mov
or
sbb
imul
sub
jp
sub
int3
bound
shl
rol
jge
xchg
lods
sub
cli
and
in
(bad)
test
sti
push
outs
dec
loop
shr
aam
mov
ffreep
(bad)
adc
sbb
sbb
shl
out
adc
add
cmp
xchg
sub
mov
jle
call
ss
(bad)
frstor
jmp
push
dec
mov
jl
cmps
mov
and
imul
stos
ins
mov
pop
mov
mov
shl
lods
div
sar
rcr
ret
out
inc
dec
sub
mov
iret
dec
mov
pop
or
cmps
dec
(bad)
adc
cli
or
fldcw
imul
xchg
loopne
mov
or
clc
lods
jmp
rcr
cli
scas
cmp
aam
lea
or
sbb
les
mov
test
test
pop
and
(bad)
movs
fist
mov
mov
mov
jbe
xchg
mov
daa
movs
inc
mov
test
inc
add
add
pop
addr16
dec
cmp
dec
adc
jecxz
xor
jno
scas
inc
jmp
cmps
push
aam
mov
loopne
xor
and
lods
jbe
test
call
dec
pushf
xor
pop
inc
xchg
jo
cwde
cmps
jmp
mov
das
inc
dec
repz
into
in
jmp
xchg
gs
jge
xor
and
sub
loope
(bad)
adc
or
push
mov
pop
in
push
aad
push
pusha
js
and
push
xchg
jbe
xor
xchg
fsub
aad
pop
or
ds
add
inc
mov
cdq
inc
sub
addr16
fcmovnu
cmp
add
test
adc
repz
push
push
les
idiv
out
push
repz
ja
jmp
jecxz
push
inc
movs
es
inc
data16
sbb
or
imul
mov
dec
cwde
dec
pop
rcr
in
add
pop
or
push
xor
repz
sub
lock
push
dec
jmp
xlat
loop
and
sahf
pop
in
or
sub
ds
adc
push
nop
(bad)
aas
ins
push
lea
mov
sub
aaa
jae
dec
or
push
cs
shr
sub
out
cmp
and
lea
test
push
mov
adc
stc
mov
xchg
mov
xor
pop
adc
in
xchg
icebp
mov
out
sub
test
test
or
mov
cdq
in
je
int3
fld
cmp
movs
mov
dec
push
out
mov
mov
fidivr
lahf
jmp
lds
adc
retf
sbb
pusha
lock
mov
xlat
xlat
loop
fdivr
stos
sbb
movs
loope
dec
or
imul
stc
popa
add
test
mov
out
cdq
cmp
mov
mov
push
mov
sbb
inc
xor
(bad)
cmp
add
bound
add
(bad)
movs
adc
sub
dec
movs
div
adc
sub
sahf
inc
retf
int
hlt
cmp
adc
cmps
jb
outs
arpl
cmp
xor
and
push
sti
cmc
sahf
xor
mov
and
int
jp
rol
cmp
in
(bad)
fsubrp
push
pop
test
loope
cld
mov
call
sub
jae
xchg
jno
sbb
or
and
in
jb
aad
loop
xchg
les
sbb
les
and
jmp
shl
add
mov
loopne
pop
cmps
push
add
lock
adc
xchg
aam
stos
fwait
(bad)
(bad)
popa
cmps
rcr
call
fst
test
div
out
jo
imul
mov
mov
mov
in
in
ds
sub
mov
push
add
arpl
xchg
(bad)
xor
icebp
out
push
(bad)
imul
adc
mov
mov
jb
inc
jle
in
pop
(bad)
xchg
in
sbb
imul
movs
adc
dec
cli
mov
inc
sub
sub
loopne
push
mov
xchg
mov
(bad)
or
lahf
rcl
ret
mov
jns
aad
fcom
xchg
mov
movs
retf
xchg
test
cs
fadd
xor
stc
mov
rol
fadd
cmps
int
add
shl
js
jecxz
cs
pop
in
clc
jno
and
sbb
cli
cmc
(bad)
repnz
pop
addr16
mov
ss
adc
sbb
push
cmp
imul
mov
adc
sbb
jge
sub
sub
repz
pop
sbb
lds
les
and
add
out
xor
push
inc
cmp
loopne
jmp
sbb
aas
sbb
mov
pop
jecxz
sbb
mov
lods
push
test
out
push
icebp
loopne
adc
xchg
xchg
mov
fld
and
mov
pop
sub
shl
inc
cdq
rcr
pop
movs
fs
pop
cmps
mov
fnsave
test
xchg
or
add
push
es
sbb
out
push
or
outs
adc
sub
cdq
pop
ret
imul
cmps
and
or
(bad)
cmc
cmp
mov
je
pusha
cli
aam
jge
sahf
lock
test
loop
(bad)
mov
sub
pop
pusha
jmp
add
jg
out
mov
fwait
daa
jno
in
push
and
ins
cld
or
aaa
adc
outs
popa
mov
loope
add
in
jbe
lea
push
inc
pop
xlat
lock
adc
aad
(bad)
or
ret
mov
push
enter
and
lods
das
popf
imul
icebp
sahf
sub
xor
scas
in
imul
loope
pop
xor
or
imul
fld
adc
aad
cmp
adc
inc
xor
jmp
add
(bad)
jmp
lahf
out
(bad)
and
push
and
int3
fsubr
in
out
mov
adc
(bad)
push
retf
cs
jmp
nop
sbb
pusha
lods
gs
xchg
mov
dec
repnz
xchg
and
mov
enter
xchg
inc
xor
dec
pop
adc
in
ret
cmp
push
mov
adc
push
sub
mov
stos
into
test
mov
inc
add
cld
mov
mov
in
inc
popa
cmps
outs
ss
(bad)
sbb
adc
adc
sti
adc
out
(bad)
xchg
sti
mov
add
xchg
fidivr
xor
aas
dec
push
push
sub
fnstcw
fcmovbe
xor
xchg
fsubr
jmp
cmp
pusha
dec
and
and
jl
lahf
mov
repnz
bound
jg
ret
dec
(bad)
xchg
mov
xchg
scas
xchg
ficom
add
jo
dec
leave
lds
mov
scas
call
jns
jmp
xchg
mov
loope
mov
cmp
sbb
fild
aaa
push
jmp
repnz
or
pop
push
movs
ret
out
je
ds
jmp
lods
arpl
movs
xchg
data16
xchg
xor
sti
movs
push
aam
das
mov
stos
or
ins
mov
out
cmp
sub
xor
call
or
mov
adc
inc
xor
ror
adc
push
push
push
in
sbb
ins
mov
sbb
sbb
jae
xor
int
mov
pop
inc
push
jecxz
int3
out
add
call
into
lods
pushf
repz
push
lock
ins
int3
and
test
popf
dec
lods
dec
mov
mov
mov
out
pandn
mov
nop
movs
add
cli
addr16
(bad)
in
(bad)
pop
jmp
jmp
cmps
(bad)
stos
add
cmp
lock
icebp
lahf
in
stos
jge
(bad)
je
push
inc
js
xor
sbb
mov
into
popf
lea
lods
clc
mov
mov
aad
into
retf
adc
mov
inc
jmp
in
stos
or
add
in
jmp
sbb
fadd
jl
movs
or
dec
push
dec
punpckhwd
mov
mov
or
mov
push
mov
retf
ret
cmp
pop
idiv
or
or
sub
jnp
mov
xor
scas
mov
js
fdivp
xchg
retf
(bad)
adc
(bad)
adc
or
adc
sub
cwde
push
xchg
push
jno
shr
push
(bad)
(bad)
in
(bad)
dec
jb
in
movs
aaa
push
mov
sbb
cmps
xchg
pop
test
(bad)
sbb
xchg
je
call
in
add
cmovb
xchg
inc
cmp
adc
mov
push
and
cld
test
(bad)
movs
xchg
mov
pushf
std
jnp
xchg
xchg
mov
sbb
mov
jl
pushf
daa
ins
jg
xor
jmp
xchg
leave
scas
jmp
cmps
movs
hlt
iret
fbstp
mov
out
adc
push
fsubr
dec
in
and
les
xchg
or
mov
fsub
add
jo
hlt
in
push
push
jmp
sub
add
cdq
call
cmp
int3
movs
outs
retf
ds
adc
sahf
inc
mov
out
jns
ja
mov
sub
adc
stos
mov
fnstsw
mov
imul
dec
rcr
push
sub
cmp
inc
mov
stos
jecxz
sub
pop
fsub
lea
cmp
popa
out
jo
cld
jae
repz
jb
movs
sbb
xor
cld
retf
sbb
mov
mov
popa
hlt
mov
sbb
repnz
(bad)
pusha
push
dec
push
sub
ss
movs
cs
je
mov
pop
xchg
outs
(bad)
(bad)
enter
mov
pop
sbb
in
mov
dec
test
push
jmp
jb
sub
xchg
sub
jg
xchg
aas
sub
push
or
call
test
rol
sub
or
adc
pushf
mov
sub
sub
int3
or
loopne
js
shr
inc
test
cmp
adc
pusha
cmp
pop
scas
push
pop
aad
ret
mov
inc
call
jae
test
cmp
inc
jecxz
fwait
scas
pop
push
mov
in
fdiv
jno
xchg
jle
sti
repz
out
jg
sub
ret
repnz
sar
push
mov
cmc
jmp
inc
shl
aaa
push
inc
or
jle
push
push
pcmpgtd
mov
icebp
int3
loopne
shl
jns
mov
cmp
mov
movs
jbe
pop
adc
outs
xchg
repz
push
sahf
in
dec
sbb
pop
out
inc
dec
mov
pop
jecxz
add
mov
mov
jno
cdq
mov
sbb
lock
aas
repnz
inc
cdq
jp
call
xchg
jno
mov
or
aaa
jo
jge
push
mov
xchg
cmp
das
aas
jne
xchg
loope
mov
ja
nop
imul
inc
les
das
psrad
mov
mov
mov
cmps
(bad)
mov
daa
inc
hlt
lock
(bad)
dec
mov
imul
outs
mov
cmp
push
das
push
iret
in
add
pop
push
cmp
inc
xor
xor
inc
test
out
je
retf
xor
fidiv
pop
pop
add
jae
cmps
push
getsec
in
test
mov
adc
mov
iret
int3
mov
mov
retf
(bad)
aam
inc
in
and
xchg
rcr
mul
adc
ficom
and
adc
out
into
mov
inc
dec
push
outs
pop
dec
out
dec
scas
in
stos
stc
loopne
ss
cmp
dec
jg
cmp
outs
jge
cmps
mov
xchg
jnp
mov
retf
jne
dec
mov
lea
movs
and
adc
mov
sub
cmp
pop
rol
icebp
mov
or
fisttp
mov
and
(bad)
jns
dec
enter
aaa
aas
ror
stc
jae
loope
fwait
repnz
sbb
nop
pusha
sbb
sub
out
cmc
fs
sbb
or
dec
sub
and
xor
mov
cmp
cmc
repz
mov
fsubrp
sahf
mov
shl
jo
jbe
xor
xchg
movs
sub
add
cmps
pop
std
(bad)
in
and
repnz
inc
in
or
retf
push
jl
test
call
popa
add
nop
pop
xor
push
mov
push
or
repnz
imul
pop
stos
mov
push
pop
popa
stos
mov
mov
test
dec
(bad)
fst
dec
repz
cmp
sbb
add
(bad)
mov
stos
not
adc
cmp
fldenv
daa
outs
jo
mov
jb
inc
nop
pop
sahf
scas
sub
sbb
pop
loope
inc
fdivr
push
mov
sbb
aam
sub
sub
hlt
and
or
cmp
xor
dec
jno
push
jge
test
inc
xchg
xchg
imul
cmp
mov
push
sbb
rol
xchg
mov
push
dec
loop
inc
dec
jnp
cdq
dec
adc
mov
repnz
jmp
leave
mov
je
push
xchg
dec
mov
mov
xchg
sbb
call
cmps
and
jg
inc
inc
jmp
mov
rcr
dec
dec
movs
mov
jp
or
mov
or
enter
cmps
mov
pop
and
pop
(bad)
dec
(bad)
stos
mov
xchg
call
ja
cld
fld
and
mov
pop
aam
push
inc
push
gs
push
fild
(bad)
push
mov
mov
cwde
repnz
lods
mov
push
test
fnstenv
cmps
leave
cmp
pop
das
mov
shl
inc
jno
shl
(bad)
test
dec
xor
test
or
pop
xchg
inc
and
sub
add
fnstenv
stc
xchg
push
rol
fild
xlat
sbb
and
cmp
dec
or
mov
call
mov
retf
aam
mov
push
(bad)
pop
inc
bound
retf
adc
add
xor
call
retf
shl
dec
loop
xchg
fnstenv
out
mov
mov
jle
jp
inc
movs
hlt
cdq
out
jmp
je
fbstp
mov
and
push
cmp
repnz
bound
push
call
dec
leave
pop
and
in
push
adc
ja
push
xchg
int
jae
(bad)
movs
int3
out
adc
sub
inc
loopne
xor
and
push
int
jae
call
movq
or
mov
inc
mov
mov
mov
and
dec
int3
xchg
sub
retf
jl
test
lea
dec
dec
cmp
pusha
stos
add
bound
adc
sbb
push
xchg
jge
into
jno
xchg
repz
push
pop
or
aas
cld
add
(bad)
xlat
sbb
and
adc
mov
shl
outs
jecxz
pop
adc
xlat
(bad)
xchg
ror
les
(bad)
mov
or
(bad)
jns
stos
nop
clc
cmc
ja
or
pop
int
pusha
or
xchg
fisubr
lods
aam
xor
dec
or
and
rcl
out
lea
cwde
mov
mov
enter
cmp
dec
mov
lahf
mov
xlat
cli
mov
add
xchg
aaa
into
dec
push
mov
shl
xor
scas
ret
enter
or
sub
and
out
aam
xor
push
in
aam
and
aaa
xchg
cdq
(bad)
dec
out
cld
test
imul
xor
pop
sbb
in
aad
sbb
or
imul
mov
xlat
fwait
outs
cmc
inc
cmp
adc
nop
xchg
shl
jl
xchg
js
add
xchg
mov
stos
mov
and
ret
aaa
inc
pop
mov
dec
imul
stc
dec
mov
in
mov
ret
and
adc
cs
push
test
pop
aam
jne
xchg
mov
dec
pop
dec
push
jns
into
fwait
push
stc
shl
(bad)
fnstenv
pop
mov
dec
dec
pop
push
and
lahf
pop
or
cwde
sbb
js
mov
je
push
aaa
leave
mov
mov
js
add
repz
dec
sbb
out
js
jg
add
mov
pop
mov
movs
sub
loopne
test
adc
popf
fist
and
les
add
imul
pop
fdivr
push
inc
jnp
and
and
add
inc
fbld
push
outs
jbe
add
shr
sub
sbb
and
dec
movs
push
rcr
jae
arpl
pop
aam
ret
xor
inc
cmp
sti
imul
and
loope
enter
outs
or
jg
(bad)
pop
mov
sti
test
clc
inc
stos
push
cdq
aas
test
xor
ret
pop
mov
add
scas
sbb
(bad)
lds
push
dec
in
xchg
into
(bad)
sbb
jle
clc
pop
push
mov
inc
clc
fsubr
stc
mov
xchg
aas
mov
jnp
or
and
ret
push
mov
dec
mov
mov
pusha
out
loopne
or
out
sub
leave
and
idiv
add
adc
cmp
fwait
push
fnstenv
rcr
pop
jmp
or
out
loopne
mov
fisttp
sub
loop
inc
retf
daa
pop
iret
inc
xchg
add
test
(bad)
or
enter
aam
(bad)
jl
fldenv
dec
sbb
jg
lahf
std
test
jle
pop
add
cmp
mov
xchg
sbb
jg
shr
ret
stos
pop
retf
mov
test
vcvttps2dq
add
imul
pop
inc
and
sub
les
ror
push
es
inc
cmc
or
stc
imul
jp
ins
and
push
cwde
ficom
shl
add
mov
push
jb
lods
add
and
mov
xchg
scas
repnz
mov
push
mov
jae
xor
rol
pop
stc
aad
xchg
cmp
mov
jg
ret
lods
stos
sub
cmps
lods
jb
popf
bnd
cld
lea
sahf
sar
jge
les
push
shrd
and
inc
dec
jnp
sbb
js
hlt
test
mov
test
sub
adc
sbb
(bad)
or
mov
jne
and
push
xchg
inc
or
mov
ins
icebp
(bad)
arpl
movs
xchg
jecxz
in
push
fiadd
int
dec
inc
call
sahf
and
pop
sub
dec
push
test
push
xchg
in
cmp
and
ret
mov
call
and
push
pop
daa
jnp
mov
push
push
fs
out
push
mov
test
inc
arpl
enter
in
jb
cmp
mov
mov
dec
add
jecxz
aas
ins
lods
(bad)
sub
or
mov
pop
aad
pop
int3
inc
push
or
fsub
pop
les
mov
push
adc
xor
imul
mov
scas
and
loopne
or
and
sahf
inc
fsubr
mov
xchg
inc
test
jne
clc
sbb
ret
or
xchg
xor
or
lods
lock
stos
or
bound
inc
inc
xor
inc
pop
jo
cmp
outs
aad
sbb
push
shl
nop
mov
push
dec
leave
icebp
test
mov
pop
xchg
pop
loopne
aas
gs
stc
adc
or
fiadd
retf
lahf
sub
rol
inc
xchg
stos
or
xchg
pop
movs
retf
xchg
cs
das
les
cmp
in
cmps
fisub
dec
mov
fwait
outs
push
mov
jo
or
sbb
aam
sbb
pop
cmc
(bad)
enter
xchg
imul
add
sti
je
xchg
add
add
fld
mov
mov
ror
or
mov
loop
imul
mov
cmps
dec
rcl
fxch
imul
pusha
ficom
sbb
xchg
(bad)
xor
cmp
pop
pushf
pop
out
xchg
sbb
into
mov
pop
shl
(bad)
mov
int
lds
cmp
dec
nop
pop
push
data16
xor
dec
neg
aam
adc
mov
push
sub
pop
adc
enter
jg
or
stos
dec
lahf
std
shl
xchg
ret
sub
int3
idiv
pop
fcomp
mov
mov
(bad)
scas
pop
inc
addr16
(bad)
int
xchg
test
add
dec
inc
iret
fstp
jo
adc
ret
sahf
nop
cdq
push
repnz
sbb
test
jp
sbb
dec
in
pop
or
in
mov
push
call
add
movs
sub
or
mov
out
mov
call
xor
cmp
ins
aam
or
ins
lods
cmps
fistp
jb
pop
ins
outs
cmp
clc
int3
cmp
stos
cmp
mov
retf
push
mov
pop
push
mov
inc
pop
out
sub
data16
nop
inc
or
outs
cli
and
dec
cmc
mov
std
ror
cld
xor
cmp
push
add
adc
push
retf
xchg
xchg
add
mov
xor
jno
xchg
jle
in
cdq
jb
fwait
in
sub
stos
mov
cmp
add
mov
test
lock
das
retf
cld
cmps
and
jmp
jecxz
sti
jne
lods
push
out
pop
dec
inc
pop
fbstp
xor
inc
adc
push
pop
pop
and
out
mov
pop
dec
and
jcxz
mov
test
xchg
xor
jmp
sbb
xchg
test
sub
retf
ror
jle
dec
push
xchg
and
imul
pop
xchg
clc
movs
(bad)
aaa
setne
inc
lods
xor
in
inc
jge
xlat
fisttp
adc
xor
(bad)
xor
jge
mov
cwde
int3
ins
jne
in
jmp
mov
repnz
call
mov
into
std
adc
popa
lock
xor
mov
aam
sub
push
mov
push
adc
dec
mov
std
fsub
lock
mov
pop
adc
test
adc
jecxz
scas
sub
fs
mov
or
scas
outs
fimul
mov
lods
mov
retf
adc
pop
out
test
lods
dec
out
dec
xor
push
test
fistp
aas
xchg
sub
lds
add
cmp
imul
movs
sub
push
lds
call
dec
test
inc
lahf
dec
or
add
jp
cld
movs
loope
inc
cwde
imul
inc
xchg
(bad)
and
lds
pusha
jp
xlat
cmp
push
and
mov
xchg
rcr
sub
mov
add
dec
sbb
push
pop
add
in
into
xchg
cli
outs
int
inc
mov
or
data16
ins
aas
gs
clc
mov
cdq
aaa
adc
cmp
cmp
xor
mov
cmps
or
jge
sub
nop
adc
das
sbb
outs
jmp
push
pop
fwait
ret
jmp
jmp
fwait
cwde
dec
and
mov
leave
(bad)
and
repnz
jmp
das
or
outs
stos
and
call
cld
test
mov
nop
inc
ds
pop
test
jp
push
jno
pop
cmp
or
(bad)
cwde
or
pop
ins
jae
mov
mov
fcomp
mov
pop
scas
inc
fcom
mov
arpl
sti
cmp
into
into
jl
mov
mov
aad
push
and
jge
xor
fld
into
sar
inc
sub
mov
cmp
in
jle
dec
push
cld
loope
sub
mov
mov
pop
pop
sub
(bad)
rcr
xchg
or
and
sbb
jge
cmp
jae
push
xchg
popa
ret
mov
icebp
int3
lds
mov
xchg
in
bswap
inc
scas
sub
stc
hlt
sbb
push
inc
lock
inc
test
sbb
daa
inc
stc
mov
retf
adc
test
cld
dec
xor
inc
fcmovnbe
adc
mov
mov
add
cmp
sar
(bad)
mov
das
fcmovne
mov
leave
into
repnz
xor
xchg
arpl
jmp
adc
sbb
sub
iret
jb
mov
push
adc
inc
mov
clc
mov
dec
jae
cmp
shl
cmp
daa
test
gs
or
hlt
dec
xchg
sahf
mov
adc
jg
sar
xor
stc
add
fsubr
leave
sti
outs
xchg
ret
sub
pop
xor
mov
mov
test
frstor
in
mov
xchg
stos
mov
movs
pop
dec
adc
xor
cld
int3
into
int3
mov
rol
cmp
mov
sti
adc
fs
or
pop
sbb
mov
test
(bad)
fbstp
adc
scas
fcomp
and
ja
jg
cwde
retf
out
mov
pop
add
ins
add
xchg
fwait
push
inc
xchg
pop
push
pop
sub
scas
arpl
lahf
hlt
push
dec
scas
or
jo
adc
pop
cmp
dec
fcom
pause
addr16
les
cmp
stos
push
pop
iret
dec
mov
or
mov
lods
fisttp
fmul
pop
movs
sub
jne
mov
inc
mov
push
cli
push
lods
(bad)
inc
lock
push
mov
mov
sub
mov
dec
xchg
aaa
fdivr
stc
sti
push
inc
callw
in
push
loopne
mov
mov
stos
aad
push
(bad)
and
sub
sbb
ds
xor
nop
xor
lea
cmp
jbe
jecxz
dec
nop
adc
push
ja
ret
jp
hlt
xchg
imul
sti
scas
test
sub
xor
sbb
aas
push
inc
sbb
xlat
cld
pop
leave
call
js
scas
std
xchg
xchg
pop
sbb
out
jecxz
push
xchg
ret
daa
xor
sar
sub
jne
sbb
adc
retf
scas
mov
jne
mov
xchg
xchg
arpl
aam
push
(bad)
and
aad
pop
or
scas
clc
pop
or
and
pop
mov
push
int
and
loopne
sbb
mov
ror
mov
inc
aam
jge
mov
jno
mov
jp
lock
fadd
mov
arpl
mov
sar
jmp
jns
inc
ficom
data16
xchg
sub
cmp
into
(bad)
aam
icebp
push
adc
sti
sub
sub
sub
call
inc
sar
jmp
mov
ss
jg
es
lock
mov
and
add
inc
in
adc
cmp
jg
mov
jae
arpl
outs
nop
xchg
fisubr
or
mov
pop
ins
aas
loopne
adc
mov
sbb
hlt
or
cwde
int3
and
fbld
sbb
push
(bad)
lahf
repz
xchg
fdiv
loop
and
fcmovb
or
jbe
cmp
mov
in
push
cs
sub
sub
div
mov
stos
sub
shr
sbb
mov
push
pop
scas
pop
mov
lahf
xchg
popf
loop
and
mov
cmps
ins
inc
mov
stc
push
pop
shr
mov
outs
iret
out
mov
inc
mov
jne
test
mov
jns
jp
cmps
adc
pop
push
mov
dec
aad
stos
mov
sub
stos
or
ror
xchg
xor
mov
add
mov
or
je
cmps
sbb
cdq
sbb
add
dec
in
loop
push
fld
xor
sbb
rcl
dec
popa
pop
adc
sub
shl
xchg
into
and
icebp
shl
cmps
xchg
mov
pop
mov
push
(bad)
dec
xchg
imul
into
pop
ss
push
aad
rcr
dec
lods
imul
ds
add
sub
push
and
and
sub
xchg
(bad)
jne
add
and
hlt
xor
pop
mov
xor
daa
jecxz
lea
dec
cmc
arpl
mov
je
in
rcl
mov
aaa
clc
(bad)
cwde
stc
adc
inc
jle
push
les
sbb
outs
sbb
mov
and
fcmove
(bad)
push
pop
jg
pop
inc
add
in
ror
lods
ds
jae
cmc
into
imul
repz
dec
aas
fs
adc
iret
mov
push
push
and
lods
out
test
(bad)
das
in
js
mov
ret
cmp
clc
pop
mov
inc
in
sbb
fld
loope
dec
xor
addr16
sbb
inc
call
or
mov
inc
out
mov
mov
enter
enter
sub
into
inc
or
adc
cmps
dec
xor
sub
leave
int
push
pop
ins
movs
enter
je
mov
inc
test
ds
pop
add
ins
mov
nop
imul
fcomip
neg
jp
xchg
(bad)
mov
daa
stc
fisub
test
mov
repz
addr16
xchg
push
les
inc
call
push
dec
loope
push
in
inc
xchg
cmc
dec
dec
sti
shl
sahf
or
or
ss
or
mov
mov
or
not
pusha
dec
les
dec
aaa
lahf
mov
cmp
in
call
xchg
nop
rcl
sar
loope
sub
mov
mov
sub
aam
scas
jmp
push
out
pop
inc
pop
jbe
fld
xor
rcr
(bad)
rol
xchg
loopne
sahf
ret
sub
ds
add
cwde
test
in
or
(bad)
mov
xor
or
add
add
sbb
cs
fistp
cmp
lods
xor
inc
lea
neg
fild
cs
pop
iret
adc
inc
movs
xor
and
sbb
int
and
push
dec
js
lahf
ret
cs
pushf
call
out
ret
push
loop
xchg
cmp
cs
jp
dec
std
fdivr
(bad)
push
cmp
mov
dec
xchg
in
popf
or
xchg
ins
mov
dec
dec
and
outs
mov
jno
aaa
jge
(bad)
dec
mov
push
or
fcomp
jmp
aaa
adc
das
xchg
mov
fadd
xor
push
es
or
inc
aaa
dec
sub
cmps
adc
loop
je
mov
xor
gs
or
xor
dec
in
shl
sar
out
sbb
cpuid
leave
pop
cmp
add
leave
in
adc
mov
dec
retf
pop
inc
pop
adc
jecxz
mov
mov
imul
rcl
jae
push
dec
ss
xlat
adc
sub
mov
adc
out
rcr
xor
or
xchg
pop
lods
(bad)
fs
into
xchg
rcr
xor
xrelease
pop
mov
nop
in
mov
dec
cmp
aas
add
dec
adc
out
loopne
rcl
movs
jne
and
xor
add
inc
xchg
and
xor
jae
test
xor
sbb
jmp
jbe
jg
popa
or
push
mov
or
add
mov
adc
scas
pop
xchg
ret
sub
mov
ror
mov
jno
pop
mov
sub
pop
pop
inc
inc
ficom
cmp
fisubr
shr
inc
ret
mov
fcompp
cmp
cmps
mov
push
or
xor
fwait
sbb
push
cwde
fsub
xchg
outs
lock
cmp
iret
add
mov
arpl
push
sahf
and
ins
dec
pop
pop
mov
xchg
and
call
mov
xor
test
test
jle
sbb
test
jne
fidiv
cmp
xchg
adc
and
aas
ds
inc
sbb
popf
(bad)
and
add
inc
adc
jg
pop
imul
ins
push
loope
test
sub
push
fist
movs
imul
and
xchg
sar
xor
fs
int
mov
fist
mov
and
xor
mov
mov
jns
inc
ror
adc
xlat
dec
fbstp
push
sub
push
jle
push
ror
into
cmp
jno
mov
rol
(bad)
cld
xlat
retf
nop
and
pop
test
ins
cwde
cmc
mov
ror
fld
dec
xchg
jle
in
inc
sbb
movs
scas
fiadd
and
inc
fld
add
daa
mov
leave
inc
and
movs
and
jge
mov
hlt
mov
and
mov
pushf
push
dec
loop
outs
jge
div
sahf
sub
movs
fdivr
pushf
dec
sub
(bad)
repnz
pushf
lahf
mov
lods
sub
out
dec
sbb
cld
retf
test
mov
mov
push
popa
bound
mov
jno
fisttp
xchg
dec
into
jo
aam
stc
scas
pop
push
mov
(bad)
into
(bad)
sbb
(bad)
jp
movs
dec
(bad)
cli
xor
jb
mov
lods
mov
test
fs
pop
int
pop
repnz
mov
mov
pop
loopne
es
popa
push
pop
test
dec
inc
sub
retf
sbb
adc
adc
mul
in
ins
inc
les
cs
scas
add
push
jecxz
push
out
xchg
push
mov
jmp
dec
sub
outs
jecxz
pop
repnz
jmp
mov
out
jp
push
inc
sub
sub
into
(bad)
(bad)
push
mov
or
jle
std
mov
xchg
adc
adc
sub
stc
pop
shl
cli
(bad)
(bad)
xor
frstor
shl
ins
adc
jno
mov
in
sub
inc
dec
leave
mov
ins
ja
test
jo
aas
popa
clc
ss
push
ret
stos
inc
in
fdivr
and
test
in
pop
pop
cwde
daa
xor
or
test
sub
adc
xor
cwde
dec
pop
cmp
sub
sub
pop
jg
sub
sar
sbb
mov
mov
push
lods
mov
inc
enter
mov
andnps
out
dec
(bad)
loopne
adc
xchg
cld
frndint
pop
enter
adc
daa
push
mul
sub
addr16
(bad)
sbb
pop
or
jno
(bad)
pop
lods
xor
sahf
imul
out
jmp
fbld
and
sbb
jecxz
mov
out
jg
cld
int
cmp
xor
ja
(bad)
bound
call
fwait
in
push
push
mov
jmp
mov
cld
jge
ja
jmp
cwde
fldenv
shl
imul
jg
push
loope
test
adc
inc
push
ret
rcl
jmp
jno
int
cmp
add
(bad)
retf
cmps
data16
xor
cld
sbb
jno
sub
pop
stc
lea
cli
shr
mov
sub
mov
pop
sub
jle
je
mov
sbb
dec
push
fidiv
iret
mov
stc
popf
jae
dec
xor
cmp
sub
and
xor
cmps
mov
stc
push
cmp
nop
into
cmps
inc
or
dec
dec
cmp
enter
add
ja
cmp
mov
ss
adc
aas
(bad)
in
in
icebp
outs
add
jns
dec
mov
jecxz
fild
mov
sub
or
int3
cmp
ret
dec
enter
sar
or
sbb
cmc
mov
jno
test
jnp
and
sub
push
adc
sbb
adc
dec
imul
call
cmp
mov
inc
test
ret
xchg
std
mov
retf
jl
sahf
aaa
cs
in
lea
in
loop
mov
imul
mov
mov
sti
xor
stc
push
xchg
inc
int
ror
and
jmp
adc
mov
fadd
jge
jb
aad
(bad)
lock
out
cmp
call
ret
jmp
imul
and
dec
shr
int3
fcomi
mov
popa
xlat
loopne
sbb
ret
push
adc
inc
cwde
out
jl
icebp
dec
cmp
out
repz
pop
and
adc
jecxz
repz
dec
or
mov
ds
fisubr
popa
lds
call
and
pop
fstp
fst
ins
fsub
inc
xchg
leave
mov
pushf
cdq
xchg
pop
cld
push
mov
shl
inc
inc
mov
je
mov
xor
movs
ins
gs
stc
sti
inc
jbe
mov
bound
ret
mov
test
and
sbb
je
(bad)
sbb
mov
adc
push
clc
and
bts
call
pop
mov
out
adc
enter
push
bound
push
mov
fnsave
xor
dec
stos
jge
sbb
int
mov
dec
xchg
jo
mov
out
dec
mov
mov
fsub
add
cmp
mov
ror
sahf
fadd
popf
fwait
sbb
fdiv
loop
push
or
xor
pop
out
(bad)
mov
sub
sahf
aad
push
fnsave
xor
mov
push
sti
mov
aam
adc
jge
loope
stos
cmps
and
pop
je
push
mov
mov
or
adc
stos
sbb
jbe
rcr
mov
mov
adc
mov
sub
outs
add
inc
cwde
daa
mov
jmp
or
mov
lods
adc
pop
test
dec
adc
dec
inc
add
xchg
inc
cld
mov
movs
les
xchg
push
or
cs
or
push
int
mov
dec
xor
inc
repnz
popa
pminsw
shl
pop
sub
xor
push
sub
das
out
or
or
rcl
mov
adc
mov
fstp
add
sahf
rcl
(bad)
jns
shufps
mov
(bad)
rcl
in
stos
into
bnd
dec
je
out
fisubr
mov
cmp
jg
(bad)
jae
(bad)
fiadd
and
lock
jg
in
cmp
ror
cs
adc
pop
push
xor
push
mov
movs
rcr
test
jo
cmp
retf
cmp
mov
or
jmp
mov
push
and
hlt
dec
jmp
lahf
xchg
dec
or
call
out
dec
xchg
fbld
outs
stos
jmp
in
cli
fwait
or
leave
jae
sti
push
in
jecxz
push
retf
retf
xor
sahf
push
bound
loopne
push
fs
(bad)
adc
mov
pop
mov
mov
enter
loop
mov
arpl
fs
stos
leave
call
sbb
das
(bad)
scas
ds
lds
scas
test
xchg
in
sub
cwde
jno
(bad)
adc
push
cmps
push
mov
inc
or
adc
outs
inc
pop
jnp
jp
dec
sub
xchg
push
jmp
or
add
dec
cld
cmp
or
jmp
pop
add
pop
js
pop
call
mov
jns
xchg
dec
push
daa
test
inc
sbb
je
push
jns
pusha
push
jg
xor
jmp
jl
xchg
pop
icebp
test
inc
mov
call
test
mov
stos
stos
xor
push
pop
stos
(bad)
aad
push
aad
pop
sar
stos
nop
sub
pop
inc
sbb
out
jmp
xor
bound
xchg
ins
mov
data16
cmp
or
sti
mov
pop
inc
sub
ins
shl
mov
mov
mov
minps
mov
stc
mov
sbb
movsx
push
cs
xchg
scas
(bad)
adc
test
xchg
lea
cmp
inc
and
ret
fwait
sbb
pushf
jo
frstor
xor
ror
fild
fnstcw
sbb
int
add
sub
lods
shr
jge
jmp
sbb
xchg
cmp
sub
mov
mov
jg
xchg
mov
jg
dec
aad
xor
cmp
push
shl
shr
push
imul
dec
sti
mov
mov
in
int3
adc
mov
(bad)
cdq
in
xor
les
shl
jmp
sahf
jnp
pop
cs
sbb
xlat
and
(bad)
das
jg
adc
pushf
sbb
and
mov
retf
mov
cdq
lea
mov
jbe
and
jge
pop
mov
fucomp
test
jl
push
into
div
add
or
mov
jmp
jo
lods
out
sbb
sti
into
push
xchg
hlt
mov
mov
out
aaa
fwait
inc
sbb
into
lods
sub
push
cmps
or
push
xchg
and
mov
mov
cmp
popa
mov
or
and
icebp
fcom
in
imul
dec
dec
mov
and
out
pop
xor
(bad)
mul
sub
pop
ret
add
rcr
or
scas
mov
and
icebp
les
mov
fdiv
xchg
imul
cmps
cmp
xor
xor
mov
sub
lods
pop
(bad)
sub
cmp
popf
xor
cmc
out
jae
cdq
push
adc
jb
test
popa
sub
sti
and
pop
(bad)
push
mov
aad
not
daa
jp
pop
mov
mov
jmp
jns
cdq
mov
aas
lea
lea
mov
aas
push
adc
(bad)
inc
pop
rep
push
cwde
push
add
or
dec
and
clc
jnp
xchg
daa
repnz
in
inc
loopne
inc
adc
movs
sbb
push
push
rcl
fst
ds
loop
or
lods
ds
jno
jp
jmp
mov
adc
rcl
cwde
sbb
out
mov
scas
fs
xchg
jg
out
lea
inc
sub
sub
ror
test
ja
cwde
or
push
pop
jnp
imul
data16
sub
jge
fwait
cmp
ret
iret
rol
xchg
inc
into
cdq
or
jecxz
cmps
in
fbstp
mov
xchg
mov
daa
or
jb
loop
imul
mov
das
dec
cmp
clc
mov
retf
fistp
mov
std
add
pmulhuw
mov
xchg
push
out
dec
imul
sub
fnstenv
dec
cs
push
xchg
pop
(bad)
jecxz
iret
in
loope
fistp
xchg
test
pop
xor
push
mov
adc
clc
xchg
sub
or
push
mov
sti
sub
fsubr
test
push
jg
or
push
cmp
mov
(bad)
push
sbb
pop
or
inc
dec
mov
dec
add
and
mov
push
mov
mov
not
lahf
(bad)
pop
mov
xor
sahf
sar
mov
clc
inc
leave
push
repz
mov
nop
movs
fimul
jge
cmovge
jmp
sbb
mov
xor
sub
push
nop
stc
adc
inc
scas
mov
pushf
ja
in
mov
test
out
fmul
mov
(bad)
daa
jl
xchg
pop
push
or
outs
test
or
sar
fisttp
mov
sub
adc
arpl
dec
mov
in
icebp
iret
sub
call
cmps
idiv
test
xchg
xchg
sahf
or
out
shl
(bad)
mov
push
mov
pop
scas
(bad)
ffreep
dec
dec
test
mov
inc
and
xor
sahf
imul
nop
dec
int3
shr
sbb
imul
mov
nop
and
and
fisttp
ins
iret
mov
jmp
sbb
aad
movsx
fild
popf
push
in
sar
shr
mov
xor
popf
(bad)
jne
sub
or
fwait
cmp
shl
and
jmp
jle
mov
adc
or
sub
mov
in
dec
sahf
push
outs
dec
outs
cli
clc
xor
adc
fisttp
cmp
mov
inc
xor
mov
mov
out
xor
pop
lock
mov
jmp
add
xchg
inc
and
push
push
aas
out
les
imul
push
lds
mov
xor
cdq
rcl
inc
(bad)
xchg
loop
mov
data16
lods
inc
loope
and
into
enter
(bad)
pop
bound
push
(bad)
clc
cmp
(bad)
jmp
cmp
dec
retf
inc
cmp
push
mov
icebp
mov
dec
(bad)
sub
pop
xchg
add
stc
add
retf
and
and
xchg
fist
out
pop
mov
popf
ficomp
(bad)
fadd
jmp
dec
lock
jmp
sahf
jl
adc
rcr
dec
xchg
test
jmp
das
jecxz
test
inc
mov
jmp
and
xchg
push
inc
mov
jl
test
xchg
out
adc
rol
and
jmp
ja
jo
fwait
sub
into
xor
rol
mov
repnz
enter
js
arpl
inc
in
jle
xchg
dec
inc
push
dec
mov
(bad)
popf
lods
sbb
sbb
pusha
push
xchg
push
test
ds
mov
push
addr16
mov
push
inc
and
jo
and
cmp
mov
xlat
xchg
iret
push
jp
push
dec
fisttp
inc
loop
mov
add
pop
jp
adc
lock
out
sub
mov
xor
sub
cdq
dec
xor
cmp
les
xchg
movs
aam
xor
imul
lds
dec
clc
aad
inc
adc
pop
mov
sub
inc
cmp
and
jmp
pop
pop
pop
(bad)
repz
mov
retf
dec
push
test
jmp
aas
and
ret
lods
push
jae
in
dec
lods
clc
mov
push
dec
or
pop
sbb
movs
mov
cmp
(bad)
jae
(bad)
adc
pusha
retf
es
xor
(bad)
icebp
mov
retf
jmp
mov
loopne
and
xor
js
mov
gs
or
pop
int
sub
and
lock
sub
xchg
mov
mov
pop
bound
(bad)
sbb
pushf
xchg
sbb
sub
mov
dec
mov
mov
mov
inc
adc
imul
jmp
and
icebp
mov
stos
dec
inc
arpl
inc
repnz
in
inc
bound
into
enter
jnp
push
pusha
stc
xor
or
add
(bad)
push
inc
cwde
mov
dec
popa
push
adc
cli
dec
mov
arpl
lahf
(bad)
loop
(bad)
mov
cmp
out
ret
adc
mov
add
mov
outs
ficomp
repz
mov
push
hlt
fcomp
push
push
sub
dec
inc
rcl
fmul
dec
in
mov
sbb
sbb
push
pop
jp
mov
push
mov
adc
data16
jbe
mov
mov
pop
mov
fcom
movs
adc
cmp
jge
dec
out
adc
xor
xor
jle
pop
and
adc
(bad)
hlt
cmc
and
shl
aam
icebp
sub
and
aam
add
inc
les
and
pop
sbb
iret
ret
les
out
and
push
mov
test
repz
mov
clc
and
and
pandn
xchg
fucomip
cmp
mov
and
inc
shr
xchg
jns
mov
addr16
xchg
mov
sub
aad
daa
test
in
sbb
cmp
pop
repz
xchg
and
mov
mov
xor
or
xor
mov
pop
jae
pop
and
(bad)
packssdw
pop
pop
mov
cli
xchg
lods
jmp
and
cmp
xchg
int
inc
xor
fcom
push
mov
fidivr
cmp
sub
adc
xor
rol
mov
jmp
push
xchg
stc
rol
push
aad
jl
call
mov
test
lods
ror
sub
and
add
dec
adc
dec
imul
mov
lahf
hlt
bound
mov
aad
sbb
push
ss
je
add
ins
dec
inc
cmp
push
sub
(bad)
aaa
mov
cmps
xor
add
imul
and
pop
push
paddusw
mov
int
xchg
ficomp
dec
inc
xchg
shl
mov
sub
mov
xor
inc
repnz
cmp
mov
pop
pusha
mov
or
fmul
pop
pop
stos
sbb
loopne
fsub
je
mov
jns
orps
fld
push
fsubr
shl
shl
jecxz
test
mov
idiv
fsin
stos
data16
ror
push
lods
cmc
add
push
es
and
fmul
sub
scas
inc
inc
sbb
clc
adc
test
(bad)
test
aaa
cmp
sub
fld
dec
cmps
add
mov
xchg
inc
xchg
or
adc
and
push
sar
in
bound
out
lock
icebp
(bad)
pusha
add
inc
sbb
cdq
cli
mov
inc
movs
push
(bad)
push
imul
pop
jno
xlat
shl
sub
mov
in
sbb
sar
test
in
rcl
jae
mov
xor
mov
imul
cdq
loop
adc
mov
xlat
in
push
sbb
add
cmp
jnp
ins
lods
cmp
sub
or
cmp
xchg
pop
and
(bad)
retf
btr
fsubrp
call
(bad)
sub
daa
movs
rcl
sbb
xor
mov
stos
dec
adc
mov
ret
js
push
pop
test
out
push
dec
cmp
enter
push
pop
push
popa
push
sbb
xchg
sub
dec
xor
or
mov
push
out
push
xor
popa
pop
movs
pop
jns
sub
sahf
mov
or
dec
add
inc
push
popf
xchg
adc
dec
push
outs
repnz
add
clc
jmp
in
int
mov
and
jns
adc
(bad)
neg
pop
(bad)
mov
repnz
call
dec
jmp
enter
jne
xor
xchg
mov
push
bound
mov
mov
aam
push
pop
fisub
std
in
cmps
mov
xor
adc
movsx
sub
pop
xor
les
arpl
xchg
out
es
pusha
(bad)
cmp
cdq
ins
mov
cdq
aam
addr16
imul
xor
adc
ret
popa
lock
gs
iret
mov
adc
ds
dec
stos
xor
add
cli
in
out
push
adc
mov
push
push
call
adc
movs
popf
fxch
xor
sbb
xchg
push
push
(bad)
xor
jle
xor
and
jecxz
dec
push
push
lahf
icebp
gs
shr
fadd
test
clc
mov
xor
pop
xchg
in
addr16
inc
lods
jae
inc
mov
pusha
and
scas
lods
inc
cvttps2pi
cld
dec
movs
xchg
cmp
test
dec
test
in
mov
mov
(bad)
sub
ds
lea
pop
out
scas
inc
push
retf
adc
cli
adc
and
das
bound
sub
mov
cmps
xchg
mov
sbb
xchg
mov
push
jg
imul
fld
fdivp
seta
fs
iret
jle
sub
pop
loope
arpl
nop
loopne
rcl
fidiv
cwde
and
dec
mov
aad
stc
fcom
sbb
sbb
cwde
cmc
mov
fst
xor
(bad)
leave
sbb
scas
test
mov
div
(bad)
xor
sbb
sub
test
mov
xor
add
call
pop
scas
or
imul
push
add
cmc
and
xor
in
or
es
xor
das
call
sub
jmp
cmc
xchg
ret
jmp
pop
mov
inc
xor
jns
ss
div
sti
cmp
xor
sub
dec
lahf
jl
mov
test
mov
add
ins
mov
cmps
mov
add
outs
sti
call
cs
(bad)
mov
pop
hlt
ss
aas
dec
scas
(bad)
int3
lea
iret
sub
mov
and
cmc
repnz
sbb
repnz
add
call
pop
sbb
mov
out
ins
pop
gs
mov
add
pop
fistp
jge
dec
fnstsw
push
loopne
mov
push
in
xchg
dec
and
ins
inc
les
(bad)
pop
dec
ds
lods
fcom
mov
push
fwait
cmp
adc
mov
lods
js
add
mov
aam
cmp
lods
sub
inc
push
pushf
outs
out
aad
dec
push
iret
imul
xor
fsub
jle
retf
and
shl
push
mov
sti
retf
call
out
outs
xchg
cld
push
fisubr
mov
pusha
mov
and
mov
pop
hlt
pop
(bad)
(bad)
add
push
cmps
mov
push
add
mov
shr
ret
ins
xchg
adc
jne
stc
or
sahf
lock
repz
movs
nop
call
sub
sbb
mov
je
push
mov
movs
sbb
xchg
push
add
mov
inc
mul
cmc
sub
ins
call
sub
call
call
repnz
hlt
sub
and
jb
sbb
add
jns
xchg
or
aad
mov
xchg
shl
je
aam
push
sti
push
aam
xor
aam
dec
fsub
(bad)
mov
dec
les
jbe
push
les
shr
pop
(bad)
fcom
push
aam
xor
frstor
aas
repnz
or
cmp
sub
fistp
inc
jo
xor
aad
mov
or
arpl
push
ja
xchg
sbb
xchg
popf
pop
aas
cmp
adc
outs
mov
mov
sub
xor
in
aam
in
popf
rcr
jns
ins
test
popa
add
adc
fxch
sbb
ret
and
jns
lahf
pop
sbb
and
mov
fistp
ret
das
jle
lds
fstp
clc
or
xor
jp
outs
cs
cld
daa
clc
test
nop
dec
sub
xchg
out
jbe
mov
ins
and
sbb
jo
scas
es
pop
pop
mov
sahf
lods
push
aas
dec
aas
add
xchg
mov
or
out
ficom
lods
cmp
mov
retf
pop
jo
jns
xchg
xchg
in
adc
pop
ins
hlt
mov
jmp
stc
icebp
out
and
mov
cmc
adc
pop
imul
add
es
and
data16
cmp
ins
mov
addr16
gs
mov
xlat
cmps
mov
pop
or
add
inc
cmp
or
mov
gs
(bad)
jo
xor
shl
jp
in
jo
sar
push
push
jg
gs
shl
pop
leave
out
add
push
(bad)
call
adc
push
push
add
mov
mov
add
adc
dec
xchg
mov
call
rcl
outs
call
sbb
ret
sbb
mov
mov
or
pop
dec
aam
cmp
or
jno
sbb
iret
repz
mov
xor
xor
ret
sbb
push
aad
cvtdq2ps
data16
icebp
clc
std
movs
sub
sbb
xchg
or
movnti
pop
push
dec
int3
dec
and
retf
sbb
ror
xchg
sbb
xor
add
imul
lea
hlt
ins
sbb
cmp
add
add
ins
ffreep
repnz
mov
jecxz
xchg
mov
sbb
dec
cmp
xor
pop
mov
jecxz
and
shl
out
sub
lds
sbb
push
sbb
mov
xor
jo
add
addr16
enter
cwde
mov
std
xchg
idiv
xchg
into
and
push
pop
mov
loope
lds
fwait
loop
scas
cli
sbb
and
je
push
sub
xchg
pop
dec
cld
and
and
mov
aam
std
push
aad
dec
sbb
fdiv
pop
mov
xor
xchg
mov
fwait
add
inc
pop
cmp
pop
adc
sar
nop
or
ficom
mov
lods
adc
leave
lock
call
out
jo
jecxz
sbb
push
cmp
push
test
dec
call
movs
xchg
not
push
arpl
cmp
jp
and
sar
add
stos
in
loopne
fsub
ret
mov
sahf
out
inc
adc
mov
lock
jecxz
mov
pop
mov
and
cmp
xchg
aaa
mov
inc
pop
mov
inc
vcvtsd2ss
mov
adc
scas
fidiv
sbb
dec
push
lods
pop
and
enter
outs
xor
nop
(bad)
(bad)
lea
bnd
adc
rcl
out
or
into
xor
(bad)
lock
loopne
jecxz
cmps
pop
xchg
mov
(bad)
jmp
xchg
pushf
push
ins
retf
js
jnp
in
int
dec
cli
mov
in
fs
pop
dec
ja
mov
push
add
arpl
lahf
sub
lea
out
mov
lock
xchg
pop
push
or
cmp
xor
add
out
and
xlat
sub
repnz
jmp
jmp
(bad)
mov
fs
stos
cmp
shl
add
adc
pop
into
sub
mov
mov
pop
jb
push
clc
jno
mov
addr16
daa
rcr
es
dec
jle
iret
ret
cmp
or
jns
adc
and
jle
xchg
sub
mov
sbb
sub
imul
lahf
mov
inc
pop
xchg
xchg
inc
inc
scas
lahf
dec
test
sub
(bad)
inc
enter
fstp
clc
pop
adc
loopne
jecxz
and
lea
push
jnp
jo
mov
stos
das
js
mov
adc
mov
test
or
gs
(bad)
arpl
jge
sti
gs
jns
mov
mov
xchg
das
ss
daa
cmc
iret
stc
(bad)
mov
fcomi
push
mov
or
mov
push
jge
pop
add
pop
jnp
ret
jno
cmps
mov
unpcklps
cmp
jmp
mov
popa
in
mov
lahf
sbb
push
aad
mov
mov
outs
rcl
stos
jecxz
clc
popa
xor
test
jo
adc
rcr
sub
dec
rcr
and
sar
xor
pusha
pusha
outs
shr
(bad)
mov
adc
int3
push
mov
inc
sbb
cmc
mov
test
test
popa
call
mov
cmp
xchg
add
push
push
push
or
or
(bad)
xchg
ins
jge
push
pop
pop
and
fadd
(bad)
fmul
inc
mov
int
sbb
mov
pop
cmps
bound
adc
jmp
xchg
scas
cmps
mov
pop
cmp
mov
pusha
rol
int
call
stc
pop
test
jnp
jp
mov
xor
jecxz
jmp
sub
ins
xor
inc
cmps
popa
mov
push
cli
pop
push
shl
ret
sub
sbb
rcl
lock
inc
(bad)
xchg
xchg
cmp
pop
mov
mov
xor
retf
jnp
in
pop
outs
fnop
xor
cld
adc
xchg
dec
mov
pop
dec
outs
add
mov
dec
mov
mov
into
sub
dec
dec
mov
ins
fmul
stos
aas
leave
xchg
repnz
inc
ja
jecxz
jno
(bad)
jg
fild
sub
adc
cmp
pop
and
pop
pop
imul
in
int3
dec
push
sbb
mov
mov
jnp
jnp
pop
push
imul
popa
stos
push
mov
pop
mov
push
sbb
add
dec
and
sub
lods
leave
jl
xor
or
pop
test
adc
mov
adc
invd
clc
xor
outs
inc
out
mov
inc
pop
sub
dec
adc
psllw
or
push
adc
inc
popa
sub
in
fldenv
add
lock
icebp
test
sub
aaa
(bad)
cld
stos
jnp
and
xor
sub
pop
push
inc
xchg
push
xor
movs
repnz
sub
movs
(bad)
(bad)
xor
push
pop
add
(bad)
or
adc
add
pop
pusha
fwait
pop
pop
(bad)
sbb
push
mov
fcomip
cmps
or
popa
fcmovne
neg
fdiv
mov
sti
add
std
xchg
addr16
pop
je
ins
stos
ror
dec
js
fadd
pop
jecxz
push
pop
push
dec
push
mov
cmp
pop
pusha
sub
shl
dec
fcomp
ret
aas
push
jo
mov
mov
lock
or
jmp
add
inc
sub
jl
sub
and
ins
dec
and
pop
xor
leave
addps
scas
adc
aam
mov
xchg
push
push
dec
cmp
call
mov
adc
xchg
and
and
sbb
out
cli
mov
or
jne
stos
dec
mov
sub
xchg
test
jne
add
dec
(bad)
pop
push
dec
dec
push
pop
or
lods
adc
es
aad
pop
fst
or
dec
retf
sub
or
xlat
add
pusha
jmp
push
ins
pop
(bad)
jne
(bad)
icebp
mov
fild
cld
scas
dec
(bad)
mov
imul
jg
stos
lahf
les
mov
and
add
scas
in
data16
mov
loop
in
xor
bound
dec
mov
sti
mov
xor
test
sbb
mov
dec
pop
add
dec
jp
mov
rol
and
adc
push
arpl
push
repnz
fisttp
sbb
mov
xchg
push
sbb
inc
inc
xor
inc
jle
jp
ins
ss
push
or
xchg
les
dec
xchg
aam
test
push
adc
div
std
mov
lds
dec
sbb
test
jbe
push
add
sti
movs
fisubr
lea
add
jmp
push
adc
fs
icebp
sti
cmp
in
fld
mov
mov
das
dec
dec
gs
and
icebp
(bad)
gs
repnz
inc
inc
adc
add
push
(bad)
hlt
dec
ror
js
fisttp
enter
pop
out
setb
xchg
enter
pop
test
xor
push
push
jno
test
jle
ret
icebp
push
mov
fwait
popa
neg
cmp
adc
mov
mov
call
push
(bad)
jge
movs
cli
mov
rcl
test
and
int3
mov
scas
mov
or
xlat
clc
das
mov
add
clc
mov
xor
jl
push
mov
sub
jp
mov
xor
sub
aam
mov
add
sbb
push
cs
xor
(bad)
(bad)
or
sbb
and
mov
push
test
sub
inc
lahf
jb
std
pop
inc
pop
mov
push
jne
test
cmc
pop
cwde
mov
xchg
popf
jle
cmp
fcom
mov
pop
add
cwde
xor
loopne
xchg
mov
test
(bad)
jp
cdq
or
xor
jl
add
mov
xchg
(bad)
call
add
jg
hlt
pop
push
inc
test
xchg
xor
stos
repz
rol
dec
dec
fdiv
in
mov
das
mov
jl
push
push
ins
jbe
push
sbb
mov
scas
jmp
cdq
jns
mov
push
and
mov
out
mov
fwait
pushf
stos
add
outs
and
dec
add
repz
fwait
dec
xor
test
cmp
jmp
cmp
pop
pop
sbb
mov
adc
aad
inc
inc
and
push
jmp
mov
pop
xor
aas
call
fimul
test
mov
push
int
sub
jge
enter
rol
icebp
pop
push
sub
mov
mov
dec
and
clc
pop
push
inc
mov
jbe
jo
adc
jmp
ins
dec
mov
movs
xchg
bound
mov
fisttp
dec
mov
clc
call
inc
(bad)
imul
pusha
les
cmovl
adc
retf
cld
in
pop
iret
ins
and
fisttp
and
sti
cmp
pop
push
adc
lods
mov
xchg
jge
fstp
jne
stos
lea
adc
aas
cdq
scas
lea
push
call
dec
popf
mov
adc
jns
adc
inc
sbb
iret
pop
(bad)
mov
sbb
sbb
test
sub
xor
mov
cli
ret
jle
mov
pop
std
jo
add
jge
and
xor
push
push
sbb
or
stos
not
push
and
movs
push
cmp
cli
cmp
pop
and
dec
adc
adc
out
cli
adc
xchg
inc
fidivr
push
pop
imul
out
repz
jg
lods
test
imul
xchg
imul
add
dec
adc
ror
push
retf
cld
mov
push
or
mov
ins
push
cvtpd2dq
mov
sbb
mov
clc
das
adc
inc
fwait
cmp
nop
leave
cmps
imul
jbe
sub
call
std
adc
cmc
xor
sub
jo
loopne
test
mov
and
inc
lods
mov
hlt
loopne
cmp
pop
(bad)
cmp
loopne
bswap
inc
sbb
pop
sub
lds
hlt
mov
jp
and
clc
xlat
or
dec
mov
and
jo
mov
popa
or
xchg
inc
cmp
ss
xor
mov
adc
jnp
mov
dec
in
cs
inc
pop
cmp
leave
dec
inc
pop
retf
add
or
mov
xor
pop
sub
imul
fld
or
inc
pusha
aaa
push
fs
xor
pop
leave
xchg
jecxz
das
cmp
loopne
cmp
jae
inc
aad
adc
jmp
popa
popa
add
fdivr
push
sub
mov
jae
sub
pop
sub
(bad)
fcmovu
adc
push
fist
ss
dec
cmp
imul
sti
inc
ja
pop
add
pop
out
cmp
sub
add
jmp
into
pop
sub
pop
mov
popa
test
xchg
and
cmp
movq
leave
cmp
cmc
sbb
jmp
add
ins
mov
push
mov
mov
cmp
pop
jmp
xchg
call
(bad)
pop
or
shl
lds
mov
and
pop
imul
leave
dec
xlat
test
or
test
pop
sub
aaa
mov
icebp
xchg
cmp
xor
pop
cmp
dec
stos
mov
pop
ret
mov
fisub
adc
mov
or
ss
or
xlat
hlt
dec
cmp
ins
aad
mov
and
pop
push
xchg
adc
or
les
std
aam
mov
add
inc
div
clc
sbb
mov
dec
and
je
outs
js
xchg
sub
cld
(bad)
(bad)
arpl
sahf
push
shl
xchg
(bad)
(bad)
(bad)
mov
mov
push
mov
xor
out
fwait
jns
xchg
hlt
pop
jno
xchg
mov
cs
(bad)
(bad)
dec
or
jge
inc
inc
scas
arpl
xchg
mov
and
sbb
scas
dec
jne
mov
fsub
dec
in
js
popf
shr
ror
adc
mov
xlat
push
mov
mov
shl
add
and
jle
(bad)
sahf
popf
sub
add
aam
adc
out
or
clc
mov
movs
and
fstp
pushf
(bad)
lea
pop
mov
ror
das
das
aad
test
and
push
xor
pop
inc
cmc
and
neg
inc
fsubr
sbb
lahf
ins
adc
add
or
inc
inc
xor
sub
mov
pop
shl
xchg
fst
rcl
shl
and
xor
mov
lds
cmps
xchg
test
int3
gs
es
(bad)
not
lods
pop
fs
dec
inc
sbb
dec
adc
jnp
adc
add
in
cmp
cmps
pop
inc
sub
inc
sub
and
stos
retf
pushf
inc
mov
cwde
in
(bad)
test
faddp
in
loopne
pop
dec
and
loope
test
aad
mov
faddp
int
icebp
mov
cmps
xor
pushf
add
(bad)
in
push
xchg
test
aaa
or
adc
aaa
pusha
rcl
mov
movs
add
push
enter
imul
add
inc
jne
lea
je
jae
lock
test
push
and
test
ror
aam
cmc
aad
cmp
lods
movs
jmp
cs
imul
jmp
sahf
out
xchg
jne
jg
add
or
pop
fbld
cmp
adc
pop
mov
and
mov
inc
cmps
or
sbb
mov
lea
push
xor
jmp
or
sub
imul
cmp
add
leave
adc
neg
sqrtps
neg
xchg
das
sub
add
xor
fbld
jno
test
ficom
js
jge
stos
das
pop
pop
ss
(bad)
mov
test
out
adc
jo
mov
pop
test
rol
add
xchg
int3
xchg
out
(bad)
pop
ins
or
jmp
inc
jecxz
leave
inc
inc
(bad)
movs
jmp
ret
inc
inc
push
les
cmp
(bad)
xor
lock
mov
xchg
pop
jge
dec
les
xchg
adc
into
pushf
cmps
adc
out
sahf
shl
xlat
sub
pop
sub
ds
stos
repnz
call
std
jmp
push
and
push
inc
aam
push
xor
scas
cmp
xchg
test
int
jl
add
(bad)
(bad)
(bad)
xchg
jb
xchg
scas
add
lahf
cmps
ja
rcl
enter
hlt
dec
adc
icebp
ds
(bad)
(bad)
and
fiadd
xchg
lahf
adc
xor
leave
stos
ret
adc
retf
test
addr16
repz
arpl
out
ret
lahf
stos
xlat
xchg
mov
push
int3
test
sbb
mov
repnz
ret
ja
loope
add
xor
cmp
fwait
in
cdq
lds
idiv
movs
je
jns
xlat
pop
xchg
loop
pop
(bad)
mov
scas
(bad)
push
int3
cli
xor
add
and
sbb
push
shl
cmps
div
aad
mov
mov
sub
inc
mov
adc
or
rcr
div
ficomp
fs
imul
sub
sub
mov
outs
sahf
cmp
(bad)
syscall
push
outs
mov
and
mov
xchg
ret
add
and
in
fcom
loope
xor
sub
std
loope
mov
sub
retf
stos
fbstp
adc
pushf
lock
mov
pop
out
xchg
push
pop
std
add
cli
sub
test
lahf
pop
clc
into
lods
hlt
and
and
loop
or
stc
out
mov
inc
call
xor
xor
add
push
fdivr
stos
mov
pop
pop
cmc
pop
inc
popa
or
push
jo
dec
sub
mov
dec
xor
lods
jnp
nop
shl
pop
push
lock
outs
les
mov
aaa
xor
call
xor
(bad)
nop
lea
out
xchg
xor
mov
cmp
pop
pop
mov
(bad)
ins
imul
or
sub
cmp
call
call
or
lahf
xor
inc
lods
test
in
xchg
(bad)
fldl2t
in
pop
outs
inc
jg
xchg
xor
sar
jge
stos
add
fcmovne
pop
(bad)
aad
mov
mov
into
mov
pop
pop
cli
jmp
idiv
pop
test
pop
adc
cmps
movs
push
xlat
xor
xchg
jg
shl
pop
aad
iret
add
xor
adc
cmps
push
xchg
adc
lds
mov
mul
outs
cli
nop
xor
add
ss
xor
je
and
pop
push
(bad)
rol
or
or
mov
jmp
sub
shr
inc
dec
add
mov
lahf
shr
aad
mov
mov
push
shl
lods
mov
mov
fiadd
push
mov
push
push
inc
movs
jb
push
xchg
call
data16
popa
jcxz
js
mov
retf
xor
fist
dec
add
mov
pop
or
ss
sub
xchg
dec
ins
jp
inc
xchg
push
inc
adc
push
sub
movs
adc
push
outs
mov
pop
cli
dec
push
cmc
std
or
fnsetpm(287
cmp
and
div
imul
lods
adc
enter
cmp
jb
nop
push
push
cdq
(bad)
adc
jl
sbb
pop
and
not
es
and
xor
scas
outs
loope
cmp
int3
jmp
or
pushf
not
jmp
mov
add
lds
sbb
or
xchg
inc
add
mov
mov
in
aas
mov
fsubp
and
mov
mov
xchg
sub
cwde
inc
or
sub
dec
ss
(bad)
and
fsubr
cmp
ins
vunpckhpd
pop
jmp
push
aam
mov
jae
push
sbb
sbb
fs
fsubr
gs
push
sbb
clc
push
scas
aas
mov
lock
aas
into
jns
and
adc
pop
dec
jnp
imul
cmp
out
repz
mov
test
aaa
dec
mov
sbb
test
xlat
dec
ja
inc
sar
and
and
dec
mov
(bad)
adc
ror
and
fwait
out
pop
shr
fcomi
(bad)
xor
add
cmp
jns
push
(bad)
add
add
sar
jle
lea
jmp
sub
in
fimul
mov
jp
jmp
shl
push
fdivrp
sub
adc
mov
pop
loop
push
addr16
addr16
(bad)
ds
push
jns
sub
test
mov
mov
aaa
pop
adc
icebp
jmp
push
adc
add
inc
xchg
imul
shr
and
pop
iret
dec
sub
cvtps2pd
addr16
fs
push
leave
mov
xchg
cmp
rcpps
xchg
pop
loopne
mov
icebp
das
imul
movs
lea
(bad)
lds
xchg
stc
and
push
js
mov
movs
mov
test
sub
popf
push
std
push
retf
jno
mov
xor
jb
ss
add
inc
adc
xor
xchg
aaa
fidiv
arpl
mov
push
inc
in
xchg
push
cmp
and
push
aaa
int
out
daa
loope
mov
stc
loopne
adc
out
push
push
add
clc
stos
test
jnp
sbb
xchg
mov
mov
jle
or
pop
jnp
mov
(bad)
or
and
iret
push
sub
dec
iret
fisubr
fld
mov
in
push
jmp
cmp
push
inc
or
jmp
(bad)
cli
and
ror
inc
push
mov
push
hlt
xchg
jp
fsub
jl
stc
cmp
and
outs
aaa
jle
push
and
adc
pop
xor
std
mov
push
xor
movs
mov
scas
and
icebp
nop
ds
popa
sar
movlhps
data16
mov
mov
cmc
ins
lds
jmp
jo
sbb
ror
(bad)
loopne
cmp
clc
dec
cmp
jmp
jae
pop
pop
push
outs
sub
add
fcomi
pop
out
add
fidivr
adc
cmp
adc
adc
jo
and
data16
int
push
das
or
dec
aad
scas
xchg
or
inc
ins
cmp
dec
in
inc
add
jo
stos
lahf
fcomp
shr
xchg
addr16
das
adc
mov
sbb
dec
mov
cmp
inc
pusha
push
push
fisubr
push
dec
ss
in
sbb
shl
fisttp
xchg
arpl
fldcw
rcr
adc
xchg
das
sahf
mov
out
jp
cmps
adc
xchg
mov
rcl
popw
inc
ror
out
pop
add
movs
dec
das
fistp
pop
neg
stos
inc
adc
xchg
loope
and
push
cli
in
and
dec
xchg
push
cmps
pop
adc
mov
test
and
xchg
dec
mov
mov
jb
and
mov
or
xchg
push
ret
in
jecxz
dec
xor
ins
ret
mov
add
test
sbb
into
push
stos
loopne
adc
sub
es
movs
(bad)
cmp
mov
pop
and
mov
gs
mov
xchg
sub
fmul
imul
nop
ret
dec
sub
inc
xchg
mov
cwde
call
fwait
js
cmc
jb
xor
or
daa
dec
dec
mov
mov
xor
push
mov
cmp
fs
sub
and
repnz
jae
xchg
aad
jp
mov
aas
scas
sub
ja
mov
xchg
adc
loop
pop
push
jg
and
jmp
xor
ja
sti
and
inc
jl
(bad)
pop
pop
stos
jl
test
int
pop
jp
jg
push
retf
mov
inc
mov
and
sbb
mov
rol
shr
pop
xchg
(bad)
mov
call
add
mov
inc
push
in
sub
mov
cwde
call
jg
xchg
jnp
jbe
push
add
jp
sbb
stos
fnstenv
fcmove
xlat
push
jnp
shr
mov
inc
mov
jecxz
call
push
sbb
gs
and
mov
xor
push
daa
in
jmp
jo
xchg
lea
inc
ret
test
mov
fdivr
clc
je
mov
icebp
push
xchg
inc
mov
aaa
je
ins
sub
jnp
xchg
jns
adc
(bad)
cmp
push
and
mov
fwait
imul
(bad)
add
cdq
inc
add
imul
std
inc
lods
inc
stos
add
loop
xlat
inc
ja
add
retf
xchg
js
fnstcw
cwde
in
cmp
lea
jb
mov
xchg
popf
test
mov
jne
ja
jbe
or
bound
int3
sbb
scas
fbstp
cmp
pop
icebp
mov
cdq
fnstenv
ins
jae
and
int
mov
nop
sub
mov
fcmovb
mov
fnsave
outs
push
in
rcr
stc
cli
gs
das
pushf
int3
stc
fsub
push
cmp
and
cmps
xlat
arpl
push
aam
loop
mov
sub
loopne
or
cmc
ss
lea
mov
adc
mov
(bad)
dec
mov
mov
mov
call
xchg
cmps
dec
pop
cmp
mov
popf
es
cs
arpl
mul
cld
(bad)
sub
scas
sbb
cli
(bad)
in
adc
adc
mov
mov
outs
push
retf
add
xor
ja
pop
(bad)
jmp
ds
test
mov
ffree
cli
jle
sbb
loope
jb
fstp
lock
pop
(bad)
hlt
fisubr
clc
int3
ins
shr
lods
jne
(bad)
lock
adc
es
aaa
lahf
cld
cmp
sbb
mov
cmp
xchg
ss
movs
inc
stos
jle
aaa
neg
cld
push
je
inc
imul
sub
or
(bad)
inc
rcl
nop
ret
xor
jmp
push
int3
dec
mov
cli
xchg
pop
mov
arpl
inc
pop
pop
(bad)
adc
repnz
mov
xor
or
dec
inc
ret
(bad)
test
xor
jne
in
add
sahf
mov
xchg
sub
stc
inc
jl
call
aam
rcr
jmp
das
and
out
int
cmp
out
sub
pop
pop
and
in
bound
xchg
outs
ficom
test
ds
addr16
mov
ds
pop
push
test
push
icebp
adc
loope
sub
push
push
push
out
mov
icebp
add
and
shl
jne
stos
xor
xor
stc
mov
(bad)
ror
arpl
daa
daa
loope
stc
mov
mov
jge
ret
lock
jecxz
push
dec
inc
in
fild
xor
xor
gs
lahf
cdq
mov
cmps
mov
int3
and
sti
jg
push
cli
cmps
mov
daa
sbb
mov
pop
cs
repnz
scas
cmp
imul
xlat
jb
mov
ret
(bad)
mov
das
xchg
adc
addr16
add
inc
mov
xchg
add
in
ins
bound
mov
inc
push
je
jp
sbb
sub
or
aaa
pusha
inc
adc
gs
imul
mov
sbb
xchg
fidivr
clc
int
data16
mov
cmp
mov
icebp
outs
cmp
stc
pop
fdivr
adc
xor
and
popa
add
cdq
imul
and
fnsave
ss
pop
and
stc
outs
ds
hlt
push
test
pop
or
add
hlt
lea
mov
jae
pop
pop
xchg
test
fs
pop
and
sub
push
je
jecxz
mov
xchg
push
push
inc
mov
and
jl
mov
das
mov
arpl
sub
mov
mov
aam
bound
inc
out
mov
sub
adc
add
dec
lock
jno
inc
push
gs
jg
or
mov
arpl
enter
jne
and
pusha
xchg
ins
push
imul
clc
jecxz
popa
add
loope
dec
sbb
mov
jns
xchg
es
dec
hlt
lock
shr
xchg
bound
cmp
in
inc
leave
jecxz
clc
adc
es
dec
add
xor
xchg
sbb
in
lahf
aas
pop
bound
and
sbb
mov
cmp
leave
dec
sub
sbb
cld
jo
cmp
dec
arpl
outs
aas
arpl
into
mov
or
cmp
sbb
adc
mov
and
jnp
(bad)
das
push
call
adc
mov
and
xor
into
stos
sbb
fwait
xchg
mov
add
adc
call
mov
(bad)
mov
mov
jp
int3
fild
(bad)
lea
xchg
pop
add
mov
fdiv
aad
mulps
xlat
push
jns
and
mov
neg
xchg
jmp
imul
aaa
push
jnp
and
xchg
xor
stc
xor
mov
mov
sub
(bad)
xchg
data16
out
or
fidiv
lds
pslld
and
cmps
mov
in
xor
mov
cld
sbb
retf
stos
in
xchg
aas
pushf
or
ja
dec
sub
sti
fst
icebp
aaa
xor
and
push
(bad)
dec
pushf
mov
add
pop
and
js
in
or
pushf
xchg
aam
xchg
out
or
cmc
clc
jne
mov
xchg
mov
fs
add
call
inc
mov
pop
ret
inc
dec
and
or
aam
pop
into
fstp
xchg
hlt
ret
and
sbb
dec
gs
ja
sbb
and
call
fisttp
js
mov
fild
jge
sahf
sbb
mov
sti
fcomp
mov
add
push
sbb
lds
adc
pop
push
pop
sub
jp
push
adc
jo
rcl
xchg
test
scas
cs
jge
imul
jecxz
shr
int3
mov
jmp
pop
jnp
sub
add
sar
cmp
jb
gs
sub
xor
sbb
mov
dec
mov
mov
xlat
sub
iret
inc
daa
sub
jecxz
or
(bad)
mov
inc
xchg
iret
xchg
fs
jl
xor
test
push
mov
ins
nop
enter
inc
mov
cmp
inc
inc
data16
lock
xchg
mov
pop
mov
data16
xchg
cld
mov
sub
sub
in
aaa
sbb
cdq
and
sub
xchg
rcr
push
and
add
lds
(bad)
lock
sub
fwait
push
dec
out
stos
xor
ror
pop
sbb
add
mov
xchg
scas
push
xor
mov
jnp
and
dec
mov
push
push
xchg
arpl
xor
pop
hlt
mov
push
jle
dec
jl
imul
scas
pop
sub
(bad)
out
icebp
xchg
repz
mov
test
(bad)
and
sbb
dec
scas
mov
ja
outs
lds
hlt
jl
inc
or
pop
je
imul
cmp
mov
push
and
dec
lea
stos
stos
pop
out
call
mov
xor
sbb
inc
mov
fwait
(bad)
icebp
int3
das
lods
xchg
out
mov
pushf
aam
aam
inc
push
jnp
jae
pusha
pusha
or
dec
les
pop
nop
xlat
int
aas
add
es
ficom
test
ins
ret
stos
dec
mov
and
inc
lahf
repz
xchg
xor
xlat
xor
shr
jg
fadd
push
imul
push
popa
(bad)
adc
fisub
fcomi
loope
mov
sbb
mov
ds
or
scas
mov
loop
xchg
call
daa
in
cmp
dec
sbb
int
and
repnz
pusha
in
loopne
test
fucom
add
pop
or
pop
add
add
ficom
outs
push
xchg
dec
sbb
mov
call
push
xor
inc
cmp
lods
int3
scas
cmp
push
xor
mov
mov
jmp
arpl
std
loop
jge
and
xchg
jns
(bad)
xor
sub
mov
push
mov
sahf
sbb
punpcklbw
pusha
inc
xchg
pop
and
mov
imul
test
int3
or
cmps
mov
add
push
pushf
aam
cmps
ja
int
test
and
inc
push
lods
ret
call
jecxz
mov
std
sti
push
retf
fst
push
jle
inc
push
xchg
and
leave
xchg
shr
and
out
mov
(bad)
and
or
loopne
retf
hlt
push
inc
outs
aas
xchg
test
push
sahf
jmp
push
sbb
push
fdiv
pop
test
fcmovnb
jnp
cmp
fcom
ror
mov
mov
mov
xor
popa
push
enter
sar
xor
pop
out
xchg
fwait
aaa
inc
dec
adc
ins
sahf
pop
imul
and
(bad)
std
jmp
popf
pop
fst
or
lds
shr
dec
adc
mov
pop
jb
jge
xor
scas
stos
lahf
jne
push
aam
xchg
scas
call
cs
jge
sub
stos
jg
shr
pop
pushf
(bad)
lfs
leave
sub
push
fiadd
dec
and
rcr
addr16
pop
adc
dec
and
jae
rol
ret
fidivr
xchg
shl
pop
or
gs
movs
daa
add
xor
mov
sbb
or
mov
cmp
aad
pop
mov
popa
call
loope
scas
push
outs
or
and
neg
or
or
adc
inc
cmp
mov
test
loop
push
nop
cli
mov
test
push
add
jl
jno
cmp
in
retf
cdq
mov
hlt
sbb
jbe
lds
add
or
enter
cmp
outs
push
cmp
cmp
cld
and
pop
aam
inc
jg
call
fldcw
mov
inc
out
bound
or
shr
pop
dec
jle
dec
outs
call
mov
sub
dec
fld
ds
je
mov
add
adc
sub
dec
cli
std
inc
cmp
lahf
mov
ror
or
or
push
cmp
fiadd
push
mov
in
pop
(bad)
ror
mov
jbe
cmp
fldenv
inc
shl
hlt
push
mov
inc
sub
mov
retf
(bad)
fucomi
jno
es
push
cli
pop
sbb
push
ja
test
pop
mov
rol
pop
pop
test
push
retf
mov
std
out
fdivrp
loope
test
jmp
or
sbb
ret
inc
push
popa
jne
push
sahf
ds
loope
cmp
add
inc
cmp
into
push
fmul
jb
push
adc
jns
sub
nop
cmp
mov
sahf
xchg
mov
pop
call
stos
outs
push
ror
rcl
movs
arpl
xchg
test
ret
unpckhps
daa
and
cmps
test
cmp
pusha
popf
je
xor
mov
push
cmp
imul
nop
xor
ret
out
push
xor
mov
jge
dec
jns
xchg
add
or
popa
sar
mov
jo
add
adc
mov
inc
or
ja
mov
imul
dec
inc
jp
cmps
xlat
stos
or
mov
ret
mov
push
jnp
and
clc
dec
in
movs
scas
jmp
jno
mov
sbb
xor
sahf
push
mov
je
into
jo
xlat
pop
mov
cmp
(bad)
mov
retf
adc
rcl
retf
in
inc
popa
es
mov
push
and
into
clc
es
dec
stos
jae
pop
arpl
xor
push
pop
pop
mov
mov
inc
jb
cld
pop
mov
cmp
add
sub
outs
cli
or
jno
adc
add
xchg
jno
rcr
loop
sub
iret
and
jmp
int
add
add
mov
dec
xchg
xchg
mov
xlat
adc
adc
cmp
out
add
aam
shr
add
ja
mov
fcom
push
sub
jb
rcr
movs
call
inc
lods
dec
push
cmc
pop
and
jg
xchg
xchg
cmp
(bad)
xor
mov
jb
pop
fdivr
jmp
adc
cwde
mov
push
cmp
xchg
xlat
xchg
pop
stc
mov
ffree
cmps
push
jge
movs
jno
not
cmp
imul
out
ffree
cmc
test
div
bound
imul
jecxz
inc
and
cmc
bound
(bad)
arpl
jg
or
pusha
imul
ror
xlat
mov
dec
leave
dec
mov
and
nop
test
adc
ss
test
out
out
and
lods
cmp
adc
in
shl
aas
inc
or
and
dec
movs
sub
pop
sub
dec
jbe
(bad)
fdiv
xchg
push
xchg
pop
jecxz
loop
test
xlat
cmps
je
push
mov
xor
daa
pop
(bad)
in
xchg
dec
pop
icebp
in
cwde
cwde
out
push
aaa
mov
pop
cli
(bad)
imul
add
xchg
sub
shr
pushf
mov
ret
aaa
adc
fidiv
fs
push
jo
call
sub
(bad)
push
xor
je
aaa
enter
mov
adc
je
int3
cli
xchg
ss
aad
inc
push
xchg
popf
ror
push
(bad)
mov
jecxz
mov
fcom
cwde
sti
outs
icebp
push
jp
mov
xchg
js
fisttp
or
mov
push
xchg
jg
jo
retf
pop
push
pop
das
(bad)
gs
mov
call
or
sub
ja
pop
stc
sub
adc
add
push
loopne
xchg
in
mov
addr16
jb
ins
leave
add
dec
or
inc
jmp
inc
(bad)
iret
cmp
push
outs
sahf
(bad)
and
push
in
std
inc
mov
in
jg
sbb
xlat
cdq
ja
mov
out
loope
mov
lds
push
out
or
pop
ret
es
push
inc
cli
mov
mov
fnstcw
xor
mov
call
out
sar
dec
jb
push
add
jge
into
xchg
fldpi
or
test
ins
ret
hlt
mov
movs
lea
(bad)
rcr
xchg
fst
push
xor
adc
leave
pushf
dec
lods
(bad)
pop
cmps
xchg
stos
adc
add
frstor
popf
and
test
call
push
in
push
cmp
test
lods
jmp
cmp
mov
adc
xor
dec
push
jge
add
jecxz
popa
mov
pop
and
dec
cmp
clc
xor
push
inc
repz
icebp
out
sbb
scas
arpl
into
mov
push
cdq
mov
out
inc
dec
movs
add
add
addr16
push
movs
ret
wrmsr
std
in
jmp
fwait
cmp
(bad)
and
mov
mov
dec
push
jp
pop
xchg
das
or
test
lods
test
jnp
(bad)
lods
ins
(bad)
mov
outs
rcr
or
and
or
in
add
iret
cmp
mov
cs
aas
or
stos
scas
or
pop
std
lahf
or
mov
mov
movs
jg
push
int3
sub
shl
loope
test
in
add
call
mov
cmc
mov
inc
push
fwait
cld
cdq
lods
mov
jns
outs
out
lahf
cmp
cmp
es
mov
pop
mov
or
cwde
lea
xchg
mov
aad
adc
out
stos
scas
adc
loope
jmp
adc
pop
mov
sbb
and
movs
cmp
or
cmp
popa
or
out
repz
dec
xchg
inc
js
les
fadd
add
cdq
loope
dec
cmp
iret
and
cmp
mov
mov
mov
aaa
ficom
dec
in
rcl
call
je
pop
push
push
add
or
pop
cmp
stos
or
icebp
mov
add
or
jle
cmp
mov
and
outs
pop
add
cwde
jbe
ss
inc
mov
rep
daa
mov
int
mov
mov
push
pop
sub
jg
dec
adc
retf
mov
mov
es
cwde
fild
mov
xchg
repz
inc
mov
xor
imul
or
ja
dec
scas
mov
add
mov
xor
lods
sub
jle
jnp
sbb
inc
mov
mov
dec
jmp
push
nop
sub
push
test
adc
mov
je
fs
push
or
movs
pop
add
out
sub
inc
lock
outs
and
pop
inc
cmps
das
ret
adc
retf
pop
fs
pop
or
push
cmp
ins
repnz
sbb
rcr
and
leave
(bad)
in
pop
dec
push
gs
cmc
add
fild
jle
dec
and
mov
retf
cmp
dec
adc
dec
imul
sub
jle
jle
arpl
pushf
(bad)
mov
jecxz
retf
sub
fisub
retf
push
ins
je
adc
mov
(bad)
adc
retf
or
inc
jb
fcmovnu
(bad)
and
fwait
mov
cmp
loopne
repz
cwde
sar
jl
xchg
imul
pushf
mov
push
mov
mov
ins
pop
movs
sub
aam
jmp
shl
mov
stos
movq
sub
ss
fstp
cmp
aaa
push
jl
mov
jmp
es
aaa
nop
cmp
jmp
lahf
leave
mov
fwait
mov
loopne
xchg
les
movs
fwait
add
inc
dec
in
popf
sti
cmps
nop
push
jo
cli
cmc
and
xchg
mov
in
cli
and
fs
ss
push
sub
pop
data16
push
je
test
cmp
icebp
sbb
js
pop
lea
ja
scas
cli
repz
xor
jge
xor
or
loope
pusha
pusha
dec
or
pop
sbb
mov
sub
cli
xor
neg
adc
pop
iret
mov
jl
jmp
shr
cmp
pop
(bad)
xor
cli
jle
add
dec
test
ja
movs
push
or
dec
push
jle
leave
mov
stc
mov
pop
dec
inc
nop
pushf
inc
(bad)
pushf
loop
call
add
rcr
push
mov
cmp
jge
sub
push
sub
imul
out
xchg
in
dec
sahf
jbe
or
hlt
pop
adc
daa
popa
out
jp
(bad)
fwait
jmp
and
pop
(bad)
loope
in
pop
lahf
retf
mov
dec
pop
cmps
ins
cmps
cmp
mov
daa
mov
add
rcl
xchg
cs
adc
icebp
ror
jmp
addr16
pop
cmc
jns
or
adc
pop
jecxz
mov
cmp
cmp
fwait
inc
xor
push
cwde
inc
aas
xchg
les
or
jl
xlat
les
xor
es
xchg
fwait
out
mov
fbld
sahf
out
sbb
in
push
lock
aam
movs
outs
mov
icebp
fisttp
lea
fldenv
fisub
sahf
mov
dec
rol
retf
pop
lea
jae
push
or
fdivr
shr
cmc
mov
outs
inc
inc
add
inc
and
sti
jmp
aam
repz
shr
addr16
mov
aad
(bad)
loopne
mov
sbb
xor
sbb
xchg
sti
pop
jg
std
dec
or
arpl
push
pop
(bad)
mov
test
inc
repz
fwait
pop
sub
add
push
(bad)
and
nop
sbb
cmp
pop
fnstenv
test
pshufw
push
mov
mov
or
mov
ficomp
push
pop
sub
sbb
stos
not
das
lock
sbb
mov
cmp
lods
inc
int
and
pop
cmp
shl
sbb
mov
xchg
leave
add
push
add
div
les
addr16
xchg
enter
ficomp
ja
inc
push
xor
out
and
sub
push
rcr
jns
cwde
lds
mov
in
fmul
movsx
int3
adc
sahf
addr16
add
jp
loopne
mov
cli
or
mov
jo
ins
push
je
ds
jae
mov
sar
mov
mov
and
add
push
xor
or
outs
ja
sbb
mov
mov
repnz
add
inc
xchg
pop
push
add
cmp
pop
sbb
cmp
(bad)
sbb
std
addr16
test
ja
mov
pop
call
mov
jne
dec
jae
inc
fsubr
mov
bnd
fist
lods
inc
cmps
ds
mov
out
mov
mov
xor
stos
out
xor
popf
movs
xchg
(bad)
jecxz
jp
mov
out
xchg
xlat
sbb
adc
(bad)
fcom
pop
xchg
scas
xlat
pusha
loopne
int3
in
retf
in
(bad)
ds
jmp
scas
mov
pushf
or
clc
lahf
fstp
mov
lea
push
push
or
ficom
mov
adc
xchg
xor
fsubrp
mov
add
std
(bad)
sbb
(bad)
xchg
xor
scas
adc
mov
or
and
dec
mov
cld
imul
test
shl
pop
cmp
stc
mov
xor
in
or
ret
hlt
dec
popa
mov
sub
mov
or
ins
or
(bad)
ror
xchg
xor
push
cld
popa
std
fild
push
jg
sbb
inc
push
enter
sub
dec
jbe
shl
mov
or
pushf
aad
ret
push
push
mov
(bad)
fld
xor
and
icebp
imul
popa
cmp
ss
mov
dec
sti
sub
or
adc
jge
mov
jne
mov
shr
cmp
loope
dec
pop
pushf
cmp
fadd
movs
dec
sti
sub
sahf
iret
outs
and
shr
lock
or
fld
jns
mov
jnp
mov
jle
xor
idiv
fs
(bad)
js
adc
add
dec
dec
xlat
les
dec
xor
cwde
jo
add
inc
sub
mov
sub
xchg
xchg
ins
push
cmp
and
pop
clc
pop
cli
out
loopne
ror
ror
mov
imul
add
push
jmp
mov
outs
push
mov
addr16
(bad)
lss
ja
ja
inc
adc
cmp
fs
out
adc
xlat
sbb
xchg
fmul
loopne
jecxz
xchg
fild
push
inc
mov
dec
xor
sbb
inc
sar
sahf
push
mov
test
adc
inc
xchg
add
xlat
lods
rcl
fwait
xor
xor
fmul
enter
dec
loope
inc
ret
and
pop
cs
adc
pop
neg
push
jmp
std
or
int
xor
dec
ss
jnp
sbb
retf
(bad)
in
bound
(bad)
sub
add
mov
xor
lods
ja
jns
or
imul
jmp
push
test
mov
clc
popa
and
xchg
retf
jbe
lods
adc
xchg
push
sbb
retf
push
fpatan
out
adc
scas
sbb
cmp
xor
retf
aam
sub
out
aam
push
aam
fst
test
aam
mov
mov
repz
mov
hlt
repz
pop
xchg
pop
ins
or
sub
sbb
outs
out
inc
sbb
les
lahf
pop
ds
test
mov
sbb
add
xor
outs
daa
ds
jp
neg
hlt
repz
mov
push
xor
ins
mov
mov
loopne
shl
inc
inc
pop
xchg
sub
es
sbb
sub
push
test
in
cdq
test
add
mov
popf
lahf
push
pop
loopne
xchg
xchg
pop
jbe
aam
aaa
fmul
jge
inc
xchg
add
sub
or
jge
cs
cwde
jle
and
sub
push
push
and
sub
push
daa
jbe
jmp
leave
xlat
pop
int3
imul
jnp
jecxz
mov
pop
push
sbb
jb
push
movs
fwait
adc
inc
aaa
cwde
push
cs
push
lock
mov
or
mov
mov
out
pop
inc
mov
jmp
lock
iret
int
(bad)
mov
pop
push
add
scas
adc
fistp
das
adc
or
popa
adc
cmp
test
inc
mov
popa
adc
push
pop
lods
lahf
inc
jge
jns
out
mov
pop
cmps
xchg
pushf
leave
out
xor
xchg
pop
xchg
inc
clc
std
cli
pop
and
xchg
in
and
pop
cmp
dec
out
dec
nop
jb
cli
lock
jl
hlt
mov
fimul
add
adc
xchg
fmul
inc
adc
popf
inc
pushf
imul
fld
lods
and
loop
into
call
cld
and
xor
fsubr
xchg
inc
inc
fadd
neg
lods
repnz
push
add
sbb
lods
aaa
out
hlt
cmp
repz
inc
bound
jae
inc
jle
stos
add
mov
icebp
out
(bad)
dec
cmp
jl
imul
push
mov
sbb
xchg
scas
mov
pusha
cmps
dec
xlat
shl
pop
sub
or
idiv
ins
daa
dec
fdiv
cmp
jae
sbb
mov
xor
fsubp
fcomp
pop
fld
ins
sub
jmp
test
sahf
push
pop
fild
xor
out
leave
arpl
and
call
add
jo
inc
popa
retf
cmp
or
add
outs
jns
jb
test
lods
jne
jnp
mov
xchg
mov
shl
push
icebp
and
repz
add
in
add
dec
mov
xchg
jle
js
jecxz
xor
sub
push
jnp
jbe
mov
adc
and
sahf
aaa
mov
scas
sub
sub
sbb
retf
dec
and
mov
stos
es
fstp
scas
mov
or
jmp
cdq
in
cs
hlt
stc
enter
mov
imul
addr16
int
dec
pushf
hlt
pop
mov
movs
scas
(bad)
sub
and
add
fnsave
inc
js
out
call
or
rol
and
mov
test
cs
js
mov
(bad)
mov
leave
jg
das
mov
push
(bad)
mov
mul
dec
mov
sti
push
jle
pop
arpl
mov
daa
scas
xchg
cmp
iret
jge
sub
and
cmp
sbb
ins
leave
or
mov
in
out
arpl
test
test
cli
int
scas
sar
aas
ret
pop
in
push
dec
inc
mov
cmp
sbb
inc
cli
fdiv
push
jmp
cmp
sub
dec
dec
jno
lea
pop
dec
xchg
ins
loopne
pop
das
inc
sar
aaa
nop
fst
imul
mov
sbb
inc
popf
jo
cmp
push
loop
stc
fidivr
or
xor
repnz
push
inc
enter
cmp
repnz
icebp
adc
das
xor
scas
pop
clc
mov
retf
dec
xchg
push
outs
mov
inc
or
fidiv
pop
push
lock
cs
adc
mov
in
rcr
inc
cs
and
or
xchg
popa
dec
cwde
arpl
fild
push
(bad)
ja
pop
iret
in
inc
das
adc
in
mov
std
xor
push
xchg
mov
add
fxtract
dec
pop
das
dec
mov
mov
pop
shl
sub
icebp
bound
pop
not
mov
movs
ret
jge
lods
pop
fs
fisttp
retf
shl
cmps
xchg
dec
into
pop
jo
xchg
sub
outs
mov
retf
pop
movs
(bad)
jno
cmps
mov
jns
dec
cdq
inc
sub
(bad)
lock
ficom
xchg
fcmovbe
sub
cmps
push
pop
repnz
push
repz
popa
and
ins
ds
loopne
mov
adc
and
sbb
inc
mov
dec
cmps
fisttp
movs
inc
sbb
mov
sbb
xor
pop
in
mov
mov
test
fmul
xor
dec
mov
sub
push
pop
mov
xlat
jnp
fucomp
loope
mov
pop
cmp
repz
mov
ins
adc
test
dec
cmp
fimul
fld
fs
xchg
sbb
sub
(bad)
ror
mov
in
rcr
loop
mov
jnp
sbb
mov
sub
movs
scas
lods
mov
cmp
push
pop
jno
push
inc
and
int
je
in
out
adc
scas
add
imul
mov
jb
iret
out
popa
cmp
in
ret
pop
aam
into
pop
dec
outs
daa
ins
or
(bad)
ss
push
pop
inc
cmp
xor
xchg
clc
mov
pop
adc
fsub
test
push
cdq
loope
fidiv
push
jne
push
dec
rcl
inc
and
mov
mov
cmp
jl
push
rol
jmp
and
jge
(bad)
cmp
leave
jns
pop
ret
out
jnp
xchg
mov
rcl
sub
lds
loope
cmp
pop
aad
add
xchg
push
and
int
pusha
cmp
pop
inc
add
fld
jmp
pusha
out
jecxz
les
jp
mov
inc
xlat
mov
push
mov
sbb
push
ret
pop
jmp
(bad)
push
sub
xchg
ja
push
dec
popa
idiv
cld
call
mov
in
lea
repz
xor
push
jo
in
jg
lods
scas
cmps
xchg
mov
cmp
jo
pop
out
sub
shr
push
out
pop
call
imul
mov
lock
shl
sbb
inc
test
sbb
cmps
aam
pop
les
mov
or
and
mov
adc
jmp
sbb
cmp
cmp
retf
sbb
sub
or
les
adc
in
hlt
out
or
add
out
ins
and
cmp
add
xchg
or
(bad)
fstp
bswap
xor
mov
(bad)
push
push
pop
movs
push
sahf
xchg
pop
cmp
js
shr
or
out
mov
repnz
jbe
test
cmps
les
dec
and
add
je
pusha
clc
jnp
outs
(bad)
jge
push
sub
xchg
lods
cmp
imul
cmp
aam
mov
mov
dec
inc
(bad)
cmp
push
leave
adc
fimul
out
int3
sbb
loopne
sti
jmp
pop
jo
les
sbb
outs
jae
cmp
mov
lods
aad
ins
stos
mov
pop
mov
ja
mov
pop
sbb
push
out
nop
add
lods
sbb
push
jno
jl
sbb
sbb
pushf
push
jmp
cwde
cmp
or
pop
pop
test
mov
jmp
in
and
or
dec
sub
or
call
ins
rol
je
clc
push
and
pop
loope
jne
cmp
les
push
fld
stos
xchg
pop
mov
leave
pushf
cmc
jmp
loopne
(bad)
fs
inc
call
popa
mov
cwde
mov
xchg
cmp
mov
and
out
mov
jo
int3
push
jnp
popf
push
loope
or
xor
mov
repnz
movs
cmc
out
mov
inc
pop
xchg
inc
mov
jae
xchg
pop
add
push
mov
sub
sbb
add
sahf
addr16
icebp
jmp
fimul
cwde
lds
popa
fs
adc
js
jo
pop
mov
(bad)
inc
into
mov
and
test
sahf
push
jge
cmp
fild
fist
retf
pop
or
dec
mov
adc
jb
mov
push
jge
push
dec
fcmovne
leave
mov
push
jmp
iret
stos
lock
nop
add
xor
push
das
mov
push
mov
fcomp
jg
fwait
sysexit
loope
push
push
jnp
enter
loop
jg
mov
cmp
rol
sbb
inc
test
arpl
lea
fwait
ret
xor
inc
and
test
and
mov
call
ds
xor
popf
xchg
push
inc
or
adc
adc
mov
add
out
jmp
gs
xor
xchg
and
push
fist
inc
lods
retf
mov
or
loope
scas
add
jp
inc
or
gs
fld
xor
nop
dec
sub
in
jg
mov
jo
push
jmp
push
mov
cmp
mov
outs
les
cmp
jle
jnp
aad
pop
fcom
das
mov
mov
icebp
jne
lock
xchg
lods
or
push
cmp
cmps
and
mov
add
add
mov
imul
or
add
mov
mov
ret
in
inc
retf
mov
or
mov
cmp
in
mov
lds
hlt
shl
jbe
imul
push
seta
dec
movs
(bad)
mov
push
add
scas
sub
xchg
fs
daa
sahf
mov
mov
hlt
(bad)
nop
cmps
adc
mov
(bad)
loop
and
lea
je
mov
std
data16
or
shl
sub
mov
dec
inc
sbb
mov
inc
add
inc
add
add
loope
movs
scas
inc
pop
shr
sahf
jp
mov
cmps
popa
loop
rcr
mov
sti
push
pop
lock
popf
inc
mov
shl
movs
outs
int
out
xor
inc
popf
je
lds
jns
test
mov
lods
fs
xchg
dec
js
mov
cmp
in
mov
pop
stc
inc
repz
inc
das
cmps
mul
pusha
(bad)
retf
push
jp
fstp
mov
push
cs
scas
xor
inc
ror
stos
dec
rcr
call
pop
add
movs
in
inc
xchg
and
jns
and
out
ror
jmp
shl
lods
pop
enter
lock
inc
pop
mov
jle
movs
cmp
cmp
out
and
into
add
movhps
push
jl
pop
jmp
loopne
cpuid
xor
mov
jnp
inc
stos
mov
lock
ret
dec
sbb
outs
arpl
xchg
pop
fstp
or
cwde
ss
jg
mov
outs
int3
mov
jge
mul
xchg
cwde
cwde
inc
cmps
add
sub
(bad)
rcr
(bad)
jmp
inc
jbe
xor
jns
fsub
mov
and
add
jno
inc
inc
add
out
jo
clc
inc
fdivp
loop
sub
xchg
jmp
cmp
stc
mov
pop
(bad)
loope
jmp
xchg
xchg
xor
mov
fistp
call
mov
mov
retf
repnz
push
rcl
sbb
sbb
ins
inc
adc
and
aas
sbb
sub
fsub
inc
jge
inc
out
mov
jnp
(bad)
jb
sbb
icebp
xchg
and
movs
out
pop
fdivr
fistp
repnz
xchg
gs
ins
mov
fbstp
add
ja
leave
ret
xor
popf
out
sti
xor
xchg
fidivr
pop
mov
inc
cmp
adc
xchg
test
out
fdivr
cmp
mov
jmp
mov
jp
lahf
or
imul
fistp
fst
outs
inc
xchg
sub
dec
xor
fstp
and
mov
dec
mov
cmp
push
lods
mov
imul
aaa
out
dec
aaa
ds
imul
movs
mov
sar
pop
push
sub
xchg
rcr
push
cmp
lea
mov
add
cmp
sbb
add
adc
mov
enter
cwde
cwde
push
sub
repz
jnp
pop
add
out
enter
fld
je
popa
(bad)
adc
mov
add
popa
adc
gs
repnz
into
in
jmp
imul
fcmovb
repz
jo
aaa
jbe
(bad)
sub
or
mov
jg
cmps
mov
loopne
or
test
dec
sbb
jo
cmp
lock
in
call
sub
data16
outs
hlt
rcr
fnstcw
movs
pop
icebp
dec
add
fstp
or
mov
xor
pop
add
inc
ds
mov
stos
xchg
aaa
in
add
ins
cwde
or
mov
sub
or
imul
mov
jns
cmp
cmp
push
leave
adc
ret
sub
inc
outs
das
retf
push
jecxz
popf
xor
add
cdq
push
imul
fcomip
jno
push
lahf
rcr
adc
or
push
or
dec
pop
inc
adc
cmp
pop
inc
mov
push
retf
and
pop
inc
push
repnz
mov
clc
inc
je
jecxz
fisttp
sahf
test
lahf
into
push
jae
aad
leave
mov
cld
or
add
adc
mov
cdq
mov
(bad)
jg
dec
xchg
cmps
xlat
test
shl
pslld
fld
lahf
jg
js
inc
pushf
movs
push
aad
(bad)
xor
push
sbb
mov
call
jae
jge
sub
or
div
dec
les
cmc
lods
mov
fbld
ficom
stos
popf
inc
inc
imul
loop
mov
call
pop
pop
push
cli
mov
inc
or
pop
mov
mov
fmul
mov
add
jb
jecxz
aam
dec
mov
xor
rol
push
fidivr
jae
cs
mov
xchg
add
scas
inc
and
inc
sub
add
sar
repnz
cld
jne
inc
mov
pusha
sbb
mov
addr16
das
and
arpl
xor
add
test
adc
sub
cmp
mov
inc
mov
xchg
ss
rcl
add
jecxz
scas
sbb
(bad)
cmp
std
jle
cmps
sahf
dec
cwde
dec
jnp
push
add
imul
adc
pop
fadd
or
sub
cmp
lods
push
and
mov
(bad)
(bad)
das
push
in
je
int
sbb
dec
addr16
out
dec
adc
int3
nop
sahf
ds
addr16
jne
movs
arpl
inc
xor
pandn
xchg
push
jns
gs
cmp
push
shl
(bad)
inc
(bad)
enter
cdq
cmc
les
add
in
rol
js
xor
bound
leave
xor
cld
push
mov
icebp
and
shl
push
inc
jno
das
ret
test
(bad)
jae
sbb
fnstenv
arpl
xlat
xor
ud0
imul
fisubr
imul
push
push
inc
push
ins
inc
stos
pop
xchg
inc
in
and
mov
mov
mov
and
pop
jns
and
jge
inc
xchg
and
xor
(bad)
mov
add
push
(bad)
or
cs
movs
push
pushf
xchg
mov
dec
je
daa
sub
cmps
sbb
stos
lock
dec
pushf
rol
bound
enter
pop
outs
movs
das
jmp
jae
adc
mov
scas
jl
push
into
push
xchg
fcomp
scas
ror
gs
xor
addr16
jo
sti
inc
xchg
jb
mov
repnz
sahf
pop
xchg
lods
sub
icebp
movs
mul
inc
xchg
or
jns
lods
push
add
ds
dec
leave
retf
test
push
push
xor
dec
or
iret
pushf
cld
neg
cmp
pop
jle
mov
sub
das
sub
aaa
pop
aad
pop
inc
ret
loop
ins
add
sbb
outs
pusha
test
push
mov
dec
loope
stos
jbe
ret
adc
aaa
pop
xor
dec
ins
dec
sbb
retf
mov
inc
jne
jl
enter
js
pop
(bad)
shl
mov
dec
bound
not
xor
xchg
pop
and
int
mov
sub
cmc
mov
mov
pop
fnstsw
retf
cmc
or
jl
loopne
push
pop
sbb
adc
dec
pushf
not
lods
and
jle
sub
adc
jecxz
(bad)
test
mov
mov
sbb
iret
adc
jns
pop
call
mov
int
jecxz
movs
hlt
repz
in
fistp
push
xor
test
push
push
add
mov
inc
es
mov
mov
or
cmp
mov
adc
push
xor
xor
bound
push
xchg
sub
pop
call
gs
cmp
sub
dec
jg
cmp
(bad)
aas
jecxz
fadd
bound
pusha
sub
outs
lods
pushw
cmp
cld
pop
gs
xchg
dec
pop
test
js
jg
push
bound
jl
pop
and
xor
sbb
adc
lods
sub
stos
mov
stos
jmp
outs
scas
lods
pop
jo
inc
js
sti
inc
inc
test
retf
movs
mov
(bad)
dec
iret
int3
les
int3
jnp
les
jmp
push
inc
xchg
mov
cmps
mov
popa
ss
not
stc
(bad)
sti
dec
call
mov
sub
mov
pop
jb
xchg
mov
fs
cmp
jg
out
ror
repnz
adc
inc
mov
pop
sbb
int
inc
pop
and
sbb
xchg
pusha
sub
clc
jno
loopne
dec
inc
and
out
shr
ror
xor
pusha
mov
or
push
fcom
test
jno
xchg
cmp
outs
dec
stc
inc
and
jle
xchg
xor
or
pop
in
cmps
inc
sub
psubusb
js
and
nop
ror
jo
lahf
lods
pop
iret
pop
add
ret
push
(bad)
mov
xchg
retf
sar
or
xor
aam
cs
mov
and
adc
xor
clc
adc
das
mov
jne
cwde
and
pop
xchg
dec
and
xchg
sbb
test
popa
jge
in
mov
pushf
in
sbb
dec
jb
xor
jb
loope
pop
xchg
adc
xchg
add
cmp
jmp
jg
push
xor
(bad)
and
rcr
push
or
shl
jmp
mov
cmp
pop
cli
imul
sub
test
fnstsw
jmp
and
xchg
mov
outs
div
or
lea
sub
call
lock
pop
mov
loopne
mov
les
jge
call
sub
jnp
div
lods
sbb
jp
dec
and
movs
jb
imul
jmp
das
out
push
cmp
pusha
cmp
xchg
jbe
scas
mov
and
add
add
retf
sbb
dec
fdivr
jo
bts
aaa
mov
cmp
popf
sbb
adc
pop
mov
mov
adc
mov
aad
sar
sbb
xchg
xor
sbb
mov
fdiv
dec
xchg
xor
fnsave
lods
ds
mov
pop
loope
mov
mov
xchg
cmp
in
dec
inc
dec
movs
jo
cs
push
add
push
ins
movs
bound
sbb
into
dec
fistp
mov
jns
es
frstor
jle
xor
fs
push
pop
in
adc
(bad)
jmp
in
cmp
mov
cmps
xchg
pop
dec
xchg
mov
pop
xlat
call
retf
arpl
sbb
jno
aas
mov
jmp
outs
aad
scas
shl
push
mov
adc
xchg
aas
scas
pushf
(bad)
sub
xchg
mov
in
leave
(bad)
mov
mov
aad
jno
sub
hlt
nop
and
and
ins
inc
mov
xor
xchg
xor
jo
out
retf
sbb
ds
add
movs
rcr
loop
jnp
xor
loope
mov
push
pop
or
aas
pop
test
dec
inc
push
inc
cli
inc
push
cmc
xor
pusha
fdiv
xor
sub
int
in
in
idiv
mov
popa
dec
sub
mov
add
das
xchg
cmc
ins
xchg
das
xor
sub
push
mov
(bad)
jb
(bad)
sub
fwait
les
(bad)
push
add
cmp
add
aam
into
stos
jbe
js
mov
jb
pop
add
or
and
sahf
xchg
and
add
xrelease
(bad)
or
fbstp
(bad)
pop
mov
je
and
mov
nop
push
jb
or
mov
daa
mov
imul
cwde
test
fst
test
outs
inc
out
out
dec
sbb
clc
mov
aaa
xlat
push
data16
push
fst
ret
enter
out
push
and
sbb
mov
xor
mov
push
rol
addr16
loopne
into
ins
mov
mov
(bad)
ror
mov
popw
nop
(bad)
push
push
retf
in
ins
lods
sbb
mov
test
in
adc
mul
jnp
pushf
pusha
aaa
(bad)
mov
mov
jle
sub
push
dec
imul
arpl
xor
or
dec
add
popa
cwde
xchg
xor
arpl
repz
xchg
stos
jmp
add
sti
jbe
popa
lods
adc
test
dec
adc
cmc
gs
clc
push
and
dec
mov
cmp
jmp
mov
(bad)
addr16
mov
std
inc
pushf
add
cmp
push
jno
les
mov
call
stos
sbb
sbb
lds
cmc
aam
xor
cmp
in
or
in
imul
xchg
in
dec
jno
mov
push
mov
lock
test
aam
sub
test
out
cdq
ins
mov
pop
fs
jns
fwait
mov
xor
loop
xchg
mov
fsub
mov
sbb
movs
mov
sub
jbe
add
enter
sti
aaa
inc
clc
sbb
out
lock
jecxz
adc
push
dec
add
int
adc
and
test
std
mov
clc
(bad)
cmps
popf
push
imul
fdivr
out
sbb
outs
stos
xchg
es
jle
inc
loopne
dec
dec
and
jle
out
test
dec
lods
dec
int3
jp
sbb
loop
mov
bswap
xor
(bad)
nop
jmp
out
and
xchg
pop
mov
pop
pushf
and
loope
dec
addr16
push
stos
xchg
gs
dec
out
pop
cs
int
stos
inc
arpl
leave
pop
xor
jmp
add
jmp
cmps
xor
pop
lock
mov
fimul
xor
fs
mov
stc
mov
out
mov
movs
adc
or
rol
inc
enter
inc
stos
aam
dec
into
mov
adc
xchg
outs
arpl
jmp
lods
call
nop
into
mov
nop
fimul
adc
out
adc
mov
xor
jp
mov
add
add
mov
xlat
cmp
xchg
out
call
jnp
push
or
fist
ins
push
inc
dec
retf
test
cs
nop
cmp
in
mov
push
cmp
dec
inc
push
push
pop
pop
push
jg
repz
push
out
out
cmp
cwde
mov
fild
xor
gs
and
xor
adc
mov
sbb
call
dec
lock
xchg
jg
dec
jns
pushf
adc
jb
cmps
lock
xchg
arpl
mov
pop
add
ret
mov
cmp
cmp
loope
push
mov
lea
jns
arpl
(bad)
loopne
stos
cmp
ret
mov
outs
pop
dec
cmp
sub
xchg
cmp
xchg
retf
ss
mov
stos
mov
jg
pop
cdq
rcl
outs
js
or
pushf
or
xlat
sbb
shr
sti
pushf
jnp
ret
test
sbb
les
or
and
mov
mov
ss
lahf
aaa
pushf
xor
or
and
loop
and
retf
add
fld
rcr
jg
jle
mov
mov
push
out
add
or
mov
add
and
loope
lahf
pop
push
sbb
or
mov
ret
loop
adc
jp
lock
fptan
mov
lds
lea
shr
les
and
pushf
push
lock
pmaddwd
out
sbb
mov
push
stos
and
movs
fcom
xchg
imul
jg
popf
sub
push
fwait
inc
jb
in
mov
cmp
outs
jo
nop
arpl
cmp
push
mov
aaa
out
pop
test
cwde
pop
jbe
lods
out
mov
sbb
adc
and
fidiv
adc
mov
pop
jno
ins
je
jmp
mov
pushf
mov
das
loope
inc
repnz
out
cmp
pop
pop
fisub
adc
dec
pop
mov
retf
inc
rol
loopne
ins
cmp
xor
call
fld
pop
jb
inc
mov
inc
pop
mov
jnp
(bad)
xor
mov
aas
outs
test
pop
mov
ss
sub
dec
xor
scas
jb
cmps
or
jae
fwait
movs
xor
pop
shl
arpl
jle
ja
movs
add
inc
mov
mov
adc
lods
stos
sbb
jbe
jo
push
das
sbb
fnsave
and
dec
bound
xchg
lods
sub
and
adc
push
xchg
jmp
push
xor
jl
add
mov
pop
mov
addr16
cmp
stc
leave
mov
adc
or
aad
stc
sbb
jmp
cmps
xchg
mov
cmp
cmp
loopne
jge
dec
add
sahf
jnp
push
inc
into
mov
bound
adc
jb
sub
addr16
pop
in
retw
xchg
xor
int
test
pop
inc
mov
or
sub
dec
adc
shr
retf
pop
push
mov
push
imul
data16
pop
int3
jmp
lods
out
repz
cld
xchg
fmul
mov
ins
retf
or
mov
push
sbb
cdq
add
mov
shl
and
cwde
sbb
into
ret
xor
cmc
mov
(bad)
stc
xchg
pop
mov
fdiv
js
std
or
inc
sub
xchg
cmp
jp
fild
std
mov
in
ror
sub
pusha
and
mov
mov
xchg
xor
sub
repnz
jo
mov
mov
jecxz
pushf
or
jo
ja
fldlg2
adc
adc
sbb
or
mov
je
repz
sahf
cld
pop
cs
dec
lods
push
addr16
mov
aam
out
imul
outs
int3
sbb
mov
rcr
js
xchg
jmp
push
ficomp
jge
cwde
pop
call
sbb
push
(bad)
add
fnstsw
test
call
dec
mov
jmp
or
push
aas
call
jno
push
and
loope
movs
pop
sti
bound
push
push
cld
add
dec
cmp
mov
push
(bad)
fsub
mov
push
mov
leave
mov
scas
dec
std
pop
or
or
mov
push
or
xchg
sbb
adc
or
push
mov
inc
std
xor
test
(bad)
pop
pushf
addr16
sub
std
lock
mov
and
or
cmps
fistp
dec
xchg
and
inc
into
aad
test
pop
mov
cdq
xor
dec
cmp
mov
ss
mov
xchg
ins
or
cmp
ds
pop
push
pop
or
push
and
in
retf
pop
pop
enter
inc
mov
inc
fcmovu
(bad)
mov
mov
xchg
bound
jp
pop
mov
adc
pop
push
xor
aaa
(bad)
mov
pop
hlt
fdiv
stc
pop
xor
daa
dec
mov
sub
movs
inc
jmp
push
pop
push
xchg
add
leave
call
fld
ins
mov
fistp
cmp
mov
mov
pusha
icebp
xor
jp
fisubr
jno
jns
loope
add
dec
add
mov
jbe
xchg
ja
pop
iret
push
movs
mov
stos
mov
sar
sub
sti
test
test
outs
outs
jge
and
bndstx
or
pop
push
dec
addr16
jl
push
aam
mov
fcmovbe
repz
jae
stos
clc
jecxz
aas
cli
pop
mov
mov
fld
cs
(bad)
mov
repnz
add
lds
mov
leave
arpl
dec
pop
pop
cli
test
jnp
dec
jbe
sbb
add
mov
(bad)
aas
xchg
loope
push
pop
rol
nop
cmp
fistp
jg
in
mov
ror
add
mov
and
mov
xlat
add
jbe
into
int
cs
mov
jp
das
fiadd
or
jle
ror
and
pop
popa
xchg
pop
xor
xor
add
xor
or
into
xchg
int
cmp
mov
out
icebp
sbb
(bad)
push
xchg
and
test
mov
jns
add
jmp
stc
sub
test
or
sbb
cmp
sbb
xchg
loopne
test
push
and
mov
fmul
xchg
mov
inc
ror
mov
inc
cmp
loopne
inc
shr
sub
out
popf
(bad)
into
leave
frstor
add
pop
rcl
into
push
in
cld
and
stos
mov
inc
(bad)
mov
repz
movs
cmp
in
inc
cmc
or
pop
dec
lds
fnstsw
jp
push
mov
imul
in
cli
add
imul
push
inc
aam
test
pop
push
pop
popf
mov
xchg
out
inc
stos
cmp
mov
xchg
repz
push
adc
inc
push
and
add
mov
and
cmp
pop
pop
xchg
jecxz
fcmovne
nop
mov
out
fimul
call
cmp
jno
cli
pop
ret
test
cmp
push
pop
inc
adc
xor
retf
mov
mov
stos
adc
mov
push
sbb
cmc
lds
bound
xchg
cmps
dec
xor
fist
clc
scas
mov
std
lods
mov
mov
add
or
add
push
add
inc
add
ror
xchg
dec
aas
clc
ret
(bad)
in
dec
mov
mov
imul
adc
dec
xor
fisttp
jbe
pop
pop
fadd
das
or
sti
test
sbb
jnp
jge
jnp
fiadd
inc
repnz
ins
jp
xor
pop
adc
(bad)
cmc
mov
mov
inc
mov
icebp
ret
cli
fcomp
popa
mov
and
jo
cmp
imul
out
mov
inc
cmp
pop
dec
(bad)
in
jmp
xchg
clc
pusha
mov
xor
push
aad
xchg
jae
and
stos
and
xchg
sub
cwde
jnp
adc
or
cwde
out
adc
inc
inc
movs
pushf
mov
shr
mov
push
xchg
ss
sub
dec
sbb
(bad)
pop
jge
mov
add
jne
cwde
cs
inc
sbb
jmp
in
dec
pop
outs
int
sub
lea
iret
ret
push
or
cwde
imul
push
test
mov
sub
clc
dec
pop
icebp
(bad)
into
jmp
mov
mov
and
and
imul
lahf
loope
sub
jmp
mov
es
add
or
cmps
dec
xchg
int3
or
push
xchg
pop
js
or
pop
imul
sub
ret
add
mov
out
ins
cmp
push
xchg
loopne
dec
mov
ret
xor
push
cwde
sub
ds
cli
lock
add
test
cli
repz
mov
pusha
(bad)
fstp
mov
popa
jmp
jns
jbe
jge
ins
add
retf
sub
and
scas
inc
in
pop
mov
sbb
sub
leave
lea
ins
repz
(bad)
in
or
sub
jp
add
pop
daa
cs
les
pop
and
cmps
jae
and
call
test
inc
fimul
cmp
xchg
sub
out
dec
dec
xor
mov
pop
and
xchg
clc
dec
xchg
cmp
rcl
pop
mov
dec
jae
xchg
jmp
dec
adc
test
call
adc
outs
and
scas
dec
pop
add
dec
and
xchg
mov
cmp
xchg
sbb
mov
mov
enter
inc
sub
loope
lods
(bad)
push
adc
lea
xchg
fwait
dec
stc
push
cs
or
(bad)
sbb
(bad)
mov
push
adc
retf
enter
mov
sub
sbb
test
adc
in
xor
add
addr16
sbb
(bad)
xchg
pop
cmp
test
js
sbb
sbb
sar
adc
test
lds
push
mov
je
mov
mov
dec
jae
push
pop
dec
movs
pop
imul
mov
adc
and
xor
retf
inc
(bad)
push
mov
inc
add
in
jae
or
icebp
cmp
loope
fwait
in
mov
ficomp
xor
xor
inc
jbe
ins
jnp
fsub
mov
mov
icebp
mov
sub
mov
ds
cwde
outs
add
test
pop
jns
(bad)
fbstp
(bad)
and
mov
add
push
sti
test
xor
mov
or
addr16
and
int3
jb
jle
cmp
push
fdivr
iret
mov
(bad)
into
add
jp
pop
test
mov
movs
in
rcl
ret
test
push
xor
jnp
in
das
sbb
inc
add
sar
push
retf
aam
xor
adc
add
or
add
mov
(bad)
jns
call
xchg
ss
jo
aas
and
cmp
jnp
xor
ss
test
pusha
fldenv
nop
jb
fbld
jl
outs
stc
mov
dec
mov
fwait
xchg
repnz
cld
test
mov
sar
pushf
push
add
jbe
leave
dec
mov
mov
xchg
and
loope
sub
dec
jns
test
push
sbb
out
inc
fcomp
lods
xor
div
xchg
ror
or
test
je
sar
cmp
adc
inc
hlt
sub
movs
test
in
mov
nop
mov
add
cmp
lds
ret
scas
das
scas
mov
or
or
leave
and
mov
daa
add
enter
les
out
int3
fsub
shr
pop
xchg
cs
xchg
ret
out
fsubr
pcmpgtb
sub
cmp
inc
fstp
test
sub
jae
jp
mov
cdq
xchg
xor
mov
aam
in
jne
mov
cmc
inc
ja
rcl
std
sbb
and
shl
jbe
in
pop
enter
js
add
rol
push
mov
push
xor
or
cmp
mov
mov
sti
add
jl
jb
and
mov
add
aaa
cmps
leave
mov
cmp
addr16
jnp
mov
adc
push
lods
lods
cld
push
jne
sbb
fs
fs
pop
daa
(bad)
out
push
fstp
shl
xor
push
inc
stos
inc
mov
sbb
test
push
push
mov
adc
fwait
icebp
push
lahf
xor
(bad)
out
into
call
xchg
or
adc
test
fcmove
js
sub
and
dec
aam
fadd
jge
repz
imul
into
js
data16
jae
jns
xchg
sbb
xor
mov
fcomp
jo
sbb
xor
add
cmp
je
jo
call
mov
hlt
repnz
cli
pop
push
or
sti
xchg
push
push
or
test
sbb
mov
popf
pop
cdq
icebp
adc
push
sub
xchg
lods
data16
pop
sub
mov
inc
jmp
push
in
ds
dec
cwde
mul
and
sbb
mov
mov
fcom
(bad)
js
loopne
push
jle
xchg
sub
cwde
cmp
dec
push
(bad)
mov
mov
sub
das
outs
sti
dec
mov
cwde
imul
xor
push
jno
pop
cmp
rol
ins
bound
pop
loope
dec
stos
push
cmp
xchg
enter
ja
ret
xchg
inc
inc
iret
mov
fnsave
sub
pop
jmp
push
sti
add
outs
sar
pop
rol
ins
fbstp
sub
xchg
cs
and
je
ret
in
dec
dec
sbb
out
and
cmpxchg
add
push
jge
in
cmp
xchg
jl
test
mov
je
repz
sahf
dec
sbb
pop
addr16
sub
sti
test
popa
aas
lea
sub
mov
ss
xchg
xor
cmc
mov
bound
lods
shr
or
jp
sub
mov
jo
adc
lods
lds
not
loope
xchg
daa
jne
int3
loop
push
jae
pushf
les
pop
nop
cmc
popa
cmp
sub
ds
or
cld
xchg
sbb
aas
adc
popf
mov
outs
mov
(bad)
div
mov
push
data16
pop
sub
sub
or
in
mov
dec
dec
xor
xchg
cmps
pop
aam
adc
(bad)
aam
mov
mov
dec
jle
pop
in
inc
jo
mov
jg
mov
adc
xor
loopne
push
pop
pop
fmul
test
mov
push
push
sub
mov
in
mov
ret
push
cli
imul
aad
ss
ins
pusha
or
jae
jns
rcl
inc
into
dec
bound
mov
mov
leave
xchg
xor
loop
mov
nop
test
repz
jge
or
cmc
jo
pop
mov
xor
xor
push
sar
inc
clc
icebp
ja
sbb
ret
sub
pop
adc
in
inc
outs
push
ja
cwde
fdivr
mov
inc
push
test
outs
pop
fiadd
add
icebp
aam
push
mov
in
sub
popf
aas
dec
(bad)
out
movs
mov
outs
push
aam
leave
push
stos
push
cli
adc
fist
xchg
add
fs
jg
jno
retf
bound
dec
hlt
or
mov
add
das
imul
add
imul
scas
ins
call
les
out
and
bsf
int
cmp
add
mov
mov
jae
or
(bad)
xor
mov
adc
mov
inc
ins
popa
out
add
xchg
inc
lock
pop
xor
and
mov
mov
sub
fdivr
mov
cmps
cli
fimul
ss
hlt
ror
pushf
bound
cmp
add
outs
pop
pop
mov
ror
inc
sbb
loop
sbb
sbb
fwait
cmp
aam
fistp
pop
xchg
mov
inc
or
mov
sub
pop
inc
mov
push
out
dec
mov
mov
sub
sbb
(bad)
stos
out
mov
jl
dec
dec
out
in
jmp
push
out
clc
xchg
es
pop
movs
in
adc
cmp
sti
call
fisub
jp
sbb
xchg
xlat
pop
push
mov
loop
das
jle
ret
in
add
dec
inc
aas
cwde
js
push
call
fs
iret
lods
push
jmp
inc
sahf
gs
xchg
pop
mov
enter
enter
cmp
(bad)
out
in
test
retf
pop
inc
pop
or
dec
push
fmul
lods
(bad)
lahf
jmp
mov
dec
mov
int
vphaddbq
cld
sbb
iret
lea
fiadd
xor
and
xor
icebp
sbb
fadd
and
xchg
and
dec
repz
ins
xchg
aas
push
in
and
pop
out
fwait
cwde
ins
mov
fisttp
dec
hlt
rol
je
rcr
sub
pop
addr16
shr
push
retf
test
mov
sti
xchg
mov
fsubr
loopne
xchg
sbb
or
cmp
ins
sbb
neg
imul
inc
je
call
inc
add
int3
cmp
inc
adc
mov
sub
mov
inc
dec
pause
cmp
sti
sbb
push
aad
inc
retf
inc
mov
aam
gs
in
pop
call
jle
iret
mov
ret
cld
mov
leave
dec
and
int3
cmp
mov
fmul
mov
push
jl
push
push
lods
in
leave
fcmovnb
mov
stc
push
test
add
jmp
lahf
sub
adc
sbb
jg
inc
xor
into
arpl
mov
and
push
fild
xor
gs
push
cmp
xchg
dec
nop
or
xchg
sti
jl
enter
movs
cmp
xor
lock
cld
lods
retf
cs
ret
pop
ins
cmp
xchg
outs
mov
mov
fstp
xor
fs
push
pmaxub
sar
inc
add
mov
das
dec
fstp
fldenv
std
and
push
mov
test
(bad)
push
push
popa
mov
jmp
add
jmp
rcl
leave
ins
loope
mov
jnp
dec
ds
push
fldenv
pop
sub
push
jecxz
sbb
pop
dec
push
out
mov
pop
pop
stos
imul
dec
test
retf
mov
mov
cmp
inc
inc
or
(bad)
push
cmp
(bad)
xor
pop
mov
fsubrp
mov
cwde
popa
cmp
or
xor
or
and
xor
sub
xchg
and
in
mov
add
sub
pop
xlat
adc
adc
sbb
in
and
shl
inc
retf
dec
ins
and
lds
dec
cmp
gs
jge
mov
ins
iret
xor
sub
test
xor
dec
stc
ins
jnp
dec
add
sar
mov
push
int
dec
rol
xor
out
std
iret
cmp
daa
repnz
fcomp
fwait
jle
(bad)
and
push
or
add
pop
pop
push
movs
pushf
pop
adc
xlat
sub
sbb
cmp
or
push
push
imul
lods
fsubr
ror
mov
mov
cli
cli
ja
stos
dec
loope
adc
sub
lock
fsubrp
push
das
retf
cmp
jbe
sbb
retf
mov
das
inc
stc
ret
ret
jae
add
push
and
or
jp
(bad)
mov
pop
xchg
or
ss
or
sbb
sbb
mov
pop
int
pop
test
push
push
ins
sahf
je
lock
mov
out
pop
hlt
adc
sbb
lahf
adc
mov
push
xchg
mov
cmp
lods
in
test
jl
lods
jne
xor
ds
jno
xchg
movs
clc
fild
add
movs
outs
shl
call
adc
mov
mov
mov
xchg
ror
add
fld
pop
(bad)
rcl
popf
aas
jnp
push
rcr
adc
clc
std
xchg
shl
(bad)
loopne
popf
dec
call
popa
mov
cmc
bound
mov
into
xor
mov
ds
clc
cmp
ins
xor
scas
cs
aaa
stc
push
adc
xchg
mov
adc
cmc
rcr
dec
daa
mov
popa
jnp
or
(bad)
mov
add
fsubr
call
cmps
add
fcmovb
mov
cmp
sub
cmps
mov
or
lock
int3
and
std
imul
pop
dec
stc
mov
add
stc
xor
xor
cli
scas
shl
dec
xchg
mov
gs
movs
inc
or
out
sbb
xor
fwait
cmp
inc
repz
daa
xor
lock
dec
push
into
pop
clc
nop
inc
jge
ds
inc
jbe
repz
push
hlt
movs
mov
ror
cmps
out
repz
jg
sbb
test
mov
outs
jle
dec
xchg
call
dec
mov
xor
add
rcl
jecxz
sbb
adc
das
les
mov
mov
unpcklps
dec
stc
mov
dec
or
pusha
out
sahf
mov
cwde
sub
mov
clc
xor
cmp
lea
mov
mov
sub
lahf
fsub
out
aas
dec
and
inc
sub
test
call
xchg
cwde
or
cmp
and
movs
dec
sbb
icebp
call
(bad)
ja
jg
jmp
adc
dec
int
dec
jb
out
or
loope
fsub
pusha
cmps
aad
sub
leave
adc
inc
mov
mov
(bad)
or
popa
inc
xor
movs
pop
mov
daa
sub
xchg
std
pop
mov
movs
not
or
mov
jmp
lods
ret
(bad)
cmp
inc
mov
jns
(bad)
out
js
fcomp
jns
pop
xchg
rcr
adc
popf
add
mov
push
cmc
inc
retf
sbb
sbb
and
jge
jae
inc
int3
push
lods
mov
in
pop
ins
pop
xlat
aam
mov
iret
lods
or
dec
sbb
pop
fisub
ror
sbb
pushf
outs
mov
rol
daa
push
lock
cmp
sub
scas
dec
cmc
cs
int
jp
imul
or
call
lahf
mul
out
dec
mov
cdq
sar
sub
lahf
pop
mov
add
cmp
mov
mov
(bad)
fiadd
(bad)
out
mov
xlat
xor
int3
add
add
scas
loope
mov
daa
mov
cdq
xor
inc
add
adc
retf
stos
cwde
inc
aas
mov
and
adc
stos
sub
cmp
sub
lods
mov
dec
jp
xchg
inc
pushf
std
adc
and
xor
sbb
std
mov
push
jecxz
jmp
sbb
retf
neg
pop
std
mov
je
in
xor
js
ret
mov
mov
aad
hlt
xchg
mov
and
cmps
arpl
add
jbe
int
js
imul
out
mov
sar
push
aas
mov
aas
sahf
and
jns
shr
dec
adc
mov
mov
inc
scas
push
cmp
jo
sub
or
pop
pushf
xchg
sub
ret
cwde
inc
adc
or
cmp
jecxz
xchg
xchg
clc
fdivr
pop
mov
fxch
pop
cmp
aas
inc
ret
pushf
sbb
dec
les
(bad)
mov
pusha
arpl
cmp
push
xchg
cdq
cdq
(bad)
out
push
jl
mov
neg
adc
(bad)
gs
dec
mov
xchg
pusha
and
jbe
mov
sub
sbb
mov
push
nop
ins
sbb
sub
gs
aad
das
adc
fidiv
jno
stos
inc
cwde
jge
ja
mov
mov
or
stos
int3
cwde
mov
out
sbb
fs
adc
add
into
sbb
cdq
lock
inc
mov
lods
leave
sysenter
mov
xlat
and
xlat
in
sub
add
push
dec
sub
jne
shr
rcr
xor
in
lods
mov
adc
sar
sub
pop
and
jne
inc
(bad)
add
clc
push
push
int
fs
iret
loope
imul
or
es
pop
push
cld
inc
les
pop
mov
stc
shl
sahf
mov
sub
inc
mov
icebp
fimul
xchg
inc
inc
dec
shl
movs
sar
dec
movs
fsub
sti
out
int
push
mov
mov
imul
sub
test
hlt
cmps
clc
loope
xor
ficomp
dec
xchg
mov
xchg
sub
xchg
or
out
out
das
(bad)
ja
mov
and
in
mov
fdivp
ret
cmp
xchg
mov
mov
scas
fnsave
inc
jo
jb
repnz
data16
inc
leave
push
lea
push
repnz
in
push
push
jae
and
pop
das
pop
xchg
and
mov
jmp
imul
add
iret
(bad)
jl
push
cmp
mov
mov
push
sbb
mov
imul
and
aaa
bound
retf
cmp
(bad)
sbb
fsub
jae
inc
push
(bad)
out
in
pop
test
jecxz
fidiv
jp
sti
js
out
lock
arpl
inc
adc
xor
mov
xchg
paddw
mov
jge
shr
or
call
mov
ret
pop
sbb
inc
rcl
push
sub
jno
cli
sbb
sub
cmp
mov
inc
sti
add
iret
int
cs
cmps
dec
sahf
jne
sbb
imul
mov
xchg
lods
sub
or
fdivr
mov
jbe
cli
mov
mov
mov
ins
hlt
ins
and
cmp
outs
popa
sub
xor
dec
inc
(bad)
ficomp
aam
jmp
sub
stc
mov
es
retf
in
(bad)
add
jmp
scas
xor
(bad)
jg
push
cmp
es
cmc
loopne
pop
out
div
(bad)
int
dec
stc
in
movs
jno
ja
and
cwde
gs
push
ficomp
mov
xchg
int3
lea
pusha
inc
int3
inc
cmps
inc
test
push
fwait
add
xchg
mov
sub
cmp
bound
daa
jmp
jno
xor
or
mov
xor
jl
pop
jmp
push
imul
cli
scas
out
aaa
idiv
mov
inc
xlat
mov
popf
pop
add
stc
(bad)
fucomi
xchg
les
dec
pop
ja
and
test
jnp
push
test
or
test
sub
pop
jbe
jno
mov
stc
dec
mov
and
out
jg
cdq
dec
pop
retf
push
inc
in
movs
dec
sbb
ret
neg
out
bound
das
movs
pop
outs
les
pop
sbb
rcr
inc
ins
dec
or
pop
rcr
popf
sbb
jg
sbb
sbb
ss
lds
push
xchg
mov
test
jmp
call
(bad)
mov
push
je
add
pop
std
cmc
ins
push
cmp
in
scas
and
or
lods
in
pop
cmps
and
repz
and
mov
sub
jl
push
cmp
fucomip
rcr
mov
hlt
dec
mov
fisubr
aaa
xchg
cmps
mov
xchg
popf
xor
sbb
pushf
pop
or
test
cmps
xor
sbb
mov
lock
stc
inc
jae
push
lock
fld
retf
or
sahf
xor
lea
stc
sbb
sub
mov
enter
test
mov
rol
push
cld
xchg
push
movs
cmp
retf
call
ins
and
iret
inc
je
pop
jno
pop
sub
mov
unpckhps
out
popa
dec
pop
imul
push
xor
popa
mov
int
xor
imul
and
int3
push
nop
out
in
add
sub
in
add
xor
repz
gs
out
bound
sbb
push
xchg
cmp
aam
mov
mov
dec
pop
mov
pop
xlat
mov
push
ins
push
imul
aaa
(bad)
(bad)
ja
call
cmp
je
loop
add
popa
add
inc
in
out
(bad)
hlt
inc
inc
mov
push
andnps
mov
in
mov
or
mov
pop
jnp
hlt
pop
adc
lds
lahf
xor
sti
es
mov
leave
aaa
into
jl
or
push
inc
dec
sti
add
dec
(bad)
xlat
fld
ficomp
sar
jno
adc
sbb
hlt
cmp
cs
dec
jge
rcr
mov
scas
aas
or
add
or
xor
pop
js
aaa
les
jl
xchg
xchg
mov
inc
imul
sbb
js
mov
in
pop
xor
pop
push
add
jle
adc
in
push
(bad)
in
retf
(bad)
fsubr
mov
pop
jb
or
loopne
fwait
mov
retf
adc
and
mov
mov
sbb
test
mul
daa
ss
sub
in
add
inc
push
add
iret
fs
(bad)
out
cmp
mov
jae
pop
sub
call
adc
xor
jo
std
ret
arpl
repnz
push
xchg
dec
dec
mov
test
dec
cmp
stos
mov
nop
xor
loope
dec
push
pop
cwde
jle
cmp
(bad)
mov
cmp
test
dec
or
push
cmp
mov
mov
rol
add
pushf
jge
mov
mov
jo
or
lods
lock
sub
mov
jnp
lock
adc
inc
sbb
das
mov
pop
dec
movs
push
mov
sbb
cdq
inc
sbb
movs
mov
(bad)
jnp
pop
cmps
repnz
pop
mov
cld
pop
(bad)
pushf
in
lea
mov
jb
dec
jecxz
fmul
test
lahf
fcomip
scas
or
ds
inc
aam
jno
fwait
fwait
and
adc
fdivr
inc
fcmovu
sub
inc
inc
push
(bad)
cld
in
ds
cld
int
push
pand
xor
shl
dec
lds
inc
fwait
js
sahf
ret
mov
ftst
or
pushf
hlt
test
test
jecxz
dec
xchg
cwde
jge
mov
cdq
pop
push
test
xsave
out
pavgw
bound
lods
jmp
sahf
dec
jl
add
push
push
fsubr
cmp
adc
jge
test
(bad)
aam
out
aam
pop
stc
add
lods
es
data16
xchg
(bad)
or
inc
out
repz
dec
xchg
shl
ror
cmp
ror
leave
pop
scas
sub
add
mov
jp
ficom
and
xor
xlat
call
xchg
dec
cmp
sbb
mov
jno
mov
jmp
xchg
lahf
sub
ficom
aas
popf
mov
retf
and
sbb
scas
imul
sbb
push
daa
push
(bad)
adc
lds
push
and
xor
jo
pop
xor
xor
lods
mov
push
aam
ror
push
mov
xor
dec
in
push
movs
add
mov
sbb
fsub
arpl
movs
into
xchg
outs
loope
cli
dec
xor
mov
mov
or
jmp
ror
inc
pop
or
mov
(bad)
fsubr
sbb
or
lahf
imul
xchg
or
call
(bad)
sub
stos
les
les
cli
add
and
neg
test
sub
popf
adc
arpl
test
clc
sti
pusha
int3
cmc
pop
popa
adc
aad
pushf
xchg
retf
movs
jmp
ror
mov
sub
das
inc
or
call
pop
retf
adc
(bad)
mov
mov
xor
sbb
xor
(bad)
mov
popa
sbb
ja
cmp
loop
xlat
jle
and
jns
mov
call
xchg
aas
cmp
pop
retf
add
and
ins
ror
in
popf
sbb
fadd
and
adc
in
jmp
jg
cdq
ins
jbe
leave
aas
xchg
getsec
dec
lods
mov
dec
stc
or
add
int3
mov
push
add
sub
jnp
imul
jae
xchg
sar
clc
std
outs
jmp
std
jg
ins
fisub
mov
cmp
inc
xor
loopne
sub
loopne
inc
rcl
out
test
pop
push
lea
push
test
bound
pop
ins
mov
dec
sub
jp
sub
sti
ss
(bad)
leave
nop
stos
sub
pop
push
pop
out
outs
fwait
cmp
lods
pop
cmp
xchg
dec
pop
push
inc
icebp
jmp
ins
jbe
jne
cld
fst
scas
outs
rcr
xor
(bad)
and
(bad)
(bad)
and
push
mov
mov
shl
jge
ror
and
outs
mov
mov
xchg
pop
adc
pop
jns
popf
sbb
xor
mov
movs
mov
jecxz
ss
cmps
and
add
repz
(bad)
out
repz
shl
mov
dec
inc
cmp
xchg
jmp
scas
js
pop
int3
call
out
mov
fnsave
movs
and
mov
sar
clc
test
xchg
mov
pop
dec
pop
jp
cmc
pop
sbb
mov
test
(bad)
push
adc
and
icebp
btr
xlat
lahf
mov
aam
(bad)
push
leave
inc
lods
scas
adc
mov
ror
cld
mov
test
or
mov
push
push
and
shr
les
adc
dec
or
xchg
xlat
xchg
inc
daa
xchg
cmps
mov
and
sbb
shr
push
jns
mov
sbb
test
bound
xor
call
loop
push
pop
(bad)
xchg
push
mov
test
mov
lahf
cmps
fadd
jmp
into
jnp
stos
gs
shl
shl
inc
(bad)
pushf
adc
ffreep
(bad)
fdivrp
dec
stos
or
in
(bad)
repz
mov
cmp
imul
and
(bad)
mov
bound
jecxz
push
fwait
retf
repz
fisttp
or
enter
dec
mov
aaa
adc
inc
jne
mov
mov
push
(bad)
push
out
movs
jecxz
ss
pop
add
or
lahf
pushf
add
sub
dec
shr
(bad)
push
and
pushf
and
mov
pop
sub
inc
fisttp
and
jae
sub
imul
sub
js
push
jge
int
mov
data16
push
or
and
ins
in
leave
hlt
repz
cmc
sub
aaa
xchg
and
push
xor
es
adc
mov
cmp
ins
jne
(bad)
mov
inc
sbb
adc
out
sub
sub
cmps
adc
das
mov
xchg
adc
sub
jp
push
xchg
xchg
xor
sar
aas
pop
sbb
lods
sti
mov
jno
sbb
(bad)
mov
inc
dec
popa
rcr
inc
(bad)
addr16
adc
mov
add
cmc
add
add
push
push
xor
and
mov
pavgw
int
mov
dec
adc
dec
add
dec
punpckhdq
pop
out
jns
shl
retf
adc
inc
cmp
sub
shl
or
mov
sbb
addr16
cmp
popa
fld
or
inc
rcl
test
addr16
mov
inc
cmp
jns
xor
jnp
fiadd
(bad)
loopne
cs
inc
fld
xchg
daa
pop
les
rcl
scas
and
sbb
shl
jmp
les
xchg
push
push
shl
test
dec
jnp
xchg
repz
icebp
into
popa
out
push
ror
loope
stc
and
rcl
add
sub
jg
cmps
sbb
out
sahf
fcomp
cmps
loop
fsubr
cld
imul
mov
dec
js
mov
cmp
pop
out
(bad)
ja
and
(bad)
lahf
xchg
rcl
lods
nop
mov
nop
mov
pop
inc
xchg
pop
bound
lds
arpl
pusha
imul
mov
pop
cmp
out
xchg
hlt
xchg
adc
jl
cld
pop
push
push
inc
pop
bound
mov
ror
mov
pop
mov
retf
ss
xor
jl
fwait
aaa
add
sbb
add
repnz
and
loope
(bad)
xor
popa
sub
push
sub
call
neg
outs
cdq
lea
fcmovne
jmp
mov
inc
test
xchg
cdq
retf
sbb
(bad)
movs
je
pop
push
mov
and
mov
push
mov
arpl
scas
icebp
xchg
loope
pop
cmp
cdq
data16
sbb
xor
sbb
(bad)
icebp
mov
lahf
xchg
sub
adc
push
inc
es
push
jecxz
call
or
sub
or
sar
cli
xor
fnsave
jo
sbb
mov
sbb
aam
jmp
in
adc
xchg
(bad)
aam
fcomp
cwde
int3
xor
fild
dec
add
mov
sub
pop
xchg
movs
fwait
mov
mov
or
jo
ins
mov
fimul
cmp
iret
push
mov
int3
loopne
jns
inc
mov
imul
cmc
mov
fs
cli
pushf
shl
add
sbb
push
(bad)
mov
imul
(bad)
cmp
(bad)
push
and
pushf
loopne
outs
mov
cmps
sub
adc
nop
loop
data16
fsubp
cmp
xchg
jmp
push
xchg
pop
or
mov
test
mov
mov
and
jp
mov
(bad)
cmp
aam
mov
fs
movs
inc
je
cli
adc
(bad)
sbb
movs
ror
xor
movs
or
jne
je
out
test
lds
ds
(bad)
in
retf
sub
mov
xor
push
out
push
mov
lock
rcl
call
jnp
dec
scas
mov
sbb
jmp
int3
cmp
xor
or
(bad)
ins
cmp
enter
out
test
es
dec
addr16
sbb
push
test
dec
pop
call
loop
push
xor
(bad)
jnp
fwait
add
sub
dec
and
dec
jns
adc
test
xchg
jmp
nop
clc
pop
and
cdq
jo
mov
(bad)
rol
mov
add
(bad)
outs
xchg
outs
add
mov
dec
leave
js
in
gs
cdq
repz
(bad)
push
jne
sbb
push
movs
dec
dec
(bad)
cwde
in
std
mov
or
mov
jecxz
push
dec
dec
adc
in
jns
lods
ror
fwait
mov
dec
shr
nop
pop
push
les
cdq
and
dec
push
out
in
push
jge
call
mov
and
push
aam
pop
cmps
aad
inc
cmp
xlat
and
and
or
(bad)
sbb
cmc
jl
mov
adc
fwait
pop
(bad)
jbe
xor
mov
leave
out
xor
jbe
sbb
jb
inc
(bad)
mov
jae
rcr
sub
movs
cmps
out
xchg
mov
pushf
mov
int3
jmp
add
jno
and
add
in
out
inc
xor
pop
or
sub
ss
pushf
xchg
push
pop
sub
jbe
shl
sub
out
les
jp
jp
nop
jp
sbb
cmp
cmp
(bad)
je
div
cmp
pop
aas
inc
(bad)
sbb
stos
jl
js
mov
add
push
mov
outs
mov
dec
ds
js
loope
cmps
std
push
ror
inc
popa
xchg
enter
fs
repnz
pop
xchg
jae
mov
sub
xchg
pop
scas
cmps
mov
in
pusha
pop
dec
mov
popa
loop
xor
pushf
sbb
aam
sbb
push
mov
mov
mov
mov
inc
jle
std
int
retf
inc
mov
in
out
jmp
aad
adc
cli
sub
shl
dec
sbb
mov
out
stos
aad
ins
shl
add
clc
mov
xchg
std
or
pop
scas
cs
sbb
gs
sbb
in
loop
lds
fisttp
rcl
aas
mov
dec
sar
or
(bad)
dec
scas
(bad)
js
xor
sbb
add
or
pushf
push
or
cmp
imul
bound
shr
mov
movs
icebp
or
adc
pop
inc
jg
nop
sahf
lock
jmp
mov
aam
popf
scas
adc
jne
jg
mov
bound
(bad)
clc
dec
in
sbb
push
sbb
fimul
out
and
std
jecxz
pop
cmp
sub
call
mov
xchg
mov
shl
(bad)
(bad)
xchg
adc
add
fadd
adc
mov
sub
and
retf
fnstcw
les
loope
push
rol
mov
rcl
push
jne
inc
sbb
inc
std
and
loope
sub
iret
scas
fucom
adc
jo
mov
mov
scas
cmp
nop
mov
lock
jmp
mov
out
cmp
inc
bound
pop
dec
and
mov
or
lock
out
inc
cmp
adc
or
and
mov
sub
add
mov
sub
push
jno
push
mov
pop
inc
jns
xchg
ss
mov
pop
lahf
mov
add
sbb
addr16
icebp
pusha
cmp
sub
xchg
mov
call
xor
outs
call
cs
retf
pop
xchg
cmp
and
test
adc
mov
add
xor
sbb
call
ins
sahf
inc
mov
sub
in
adc
rol
ss
pop
sub
imul
rcl
enter
push
into
or
push
push
in
inc
xchg
jae
and
pop
adc
pop
gs
cmp
hlt
mov
outs
fild
or
movs
repz
out
push
repnz
out
popf
int3
dec
fs
sub
aad
sub
mov
adc
push
push
xchg
(bad)
jmp
inc
stos
fisttp
scas
sbb
pusha
call
std
pop
cmp
(bad)
push
mov
sbb
daa
ins
inc
and
jne
adc
hlt
(bad)
loope
out
inc
xchg
pop
ds
dec
add
loope
or
ins
cmp
std
pop
repz
mov
outs
or
ds
or
arpl
cmps
jge
(bad)
mov
push
jb
xchg
and
cmp
add
in
mov
fnstenv
jb
iret
dec
or
out
adc
pop
add
mov
or
mov
xchg
clc
or
les
mov
int3
and
mov
sbb
add
aam
xlat
and
add
rcr
mov
mov
add
xor
and
mov
mov
sub
inc
mov
ja
(bad)
xchg
pusha
xor
jae
and
call
mov
adc
add
cmps
mov
and
xlat
dec
clc
sbb
cmp
fimul
cmp
push
push
out
push
shl
sahf
retf
out
jp
adc
retf
cmps
loop
iret
out
mov
ret
push
je
(bad)
enter
ins
jge
add
aad
jmp
(bad)
adc
cdq
stc
test
push
icebp
push
into
into
mov
int3
cwde
lods
jmp
pop
in
mov
dec
xlat
or
xchg
pop
popf
fidiv
sub
in
add
out
or
or
loop
push
adc
xchg
mov
push
push
sbb
test
dec
xchg
cwde
lock
jne
test
mov
adc
popf
push
pusha
fisttp
adc
pop
pop
xchg
jle
dec
ret
mov
cmp
pop
imul
in
sbb
(bad)
and
dec
stos
sub
fs
aaa
enter
ja
and
sbb
cmps
and
sub
sbb
clc
pushf
adc
ficom
popa
cmp
xchg
call
pop
and
shl
mov
push
stos
int3
pop
jo
push
imul
cld
xor
sub
std
fadd
inc
pusha
js
popf
(bad)
in
movs
fsub
lock
sbb
adc
stc
mov
pusha
lea
or
ins
jno
fs
xchg
clc
or
inc
xor
dec
add
mov
sub
mov
add
fdivr
or
sbb
jmp
or
and
addr16
ja
addr16
or
in
adc
push
mov
(bad)
jmp
outs
mov
or
mov
jl
jg
cmps
fwait
mov
(bad)
mov
and
cwde
xchg
(bad)
pop
push
js
mov
jg
mov
adc
or
je
mov
sub
sub
inc
xchg
js
mov
fsubp
jl
xor
aam
mov
test
jno
test
fistp
stos
loop
adc
pop
xor
jecxz
shr
loop
mov
aas
push
xor
lock
in
dec
sub
xor
stos
rcr
stos
pop
(bad)
dec
test
mov
dec
ret
xor
fldz
dec
es
jnp
jmp
or
inc
and
in
mov
push
sub
adc
das
int3
cs
xchg
jno
lahf
add
push
mov
repz
ret
lock
scas
xor
add
or
dec
clc
out
jne
gs
dec
dec
mov
add
cld
cld
adc
out
xlat
mov
push
cld
mov
dec
push
retf
adc
inc
xlat
xchg
mov
cmp
xchg
out
mov
xchg
inc
fwait
jle
stos
lock
and
mov
push
fisub
sbb
sub
pop
out
int3
cdq
(bad)
int3
mov
fs
rcr
ins
cld
imul
inc
or
adc
push
out
sbb
inc
stc
(bad)
push
dec
inc
inc
push
movs
retf
leave
rol
fsubr
adc
jbe
cwde
cli
push
sub
dec
(bad)
ret
and
in
sub
mov
jb
sbb
scas
cmps
or
mov
pop
fld
push
test
sbb
int
jl
lahf
arpl
test
lds
lea
dec
xchg
xchg
test
data16
push
xlat
(bad)
leave
test
imul
pop
xor
add
out
push
cmp
push
les
jmp
add
pushf
in
pop
inc
push
lds
push
and
push
adc
das
xor
mov
mov
sbb
not
xchg
xlat
bound
pop
push
nop
sbb
aaa
inc
aas
ins
dec
mov
in
out
stos
fs
ins
xchg
mov
and
add
cmps
out
add
fwait
inc
xor
pop
sub
cmp
mov
cmp
je
in
retf
sbb
cmp
in
cwde
xor
ins
pusha
test
push
dec
mov
cwde
hlt
icebp
scas
loopne
test
dec
js
shr
mov
call
mov
data16
jb
imul
je
test
rol
fdivr
int
cmp
dec
jb
jo
cmp
(bad)
out
lahf
add
sbb
enter
repnz
(bad)
xchg
dec
xchg
pop
clc
adc
sar
test
mov
int
mov
fwait
std
jge
lock
mov
ins
pop
jno
loope
movs
je
pop
dec
sbb
sub
sahf
movs
cmp
sbb
dec
mov
lock
mov
cmp
add
push
aad
inc
sysexit
mov
test
mov
ins
das
mov
fadd
push
sti
or
jecxz
push
lods
out
sbb
retf
(bad)
and
mov
cmc
sbb
mov
jns
xchg
cmp
xor
ja
scas
aad
dec
test
ret
aaa
mov
xchg
sar
jbe
scas
cmp
push
pop
or
test
(bad)
jmp
add
cmps
dec
les
cmp
cmp
repnz
mov
cmp
pop
retf
test
mov
adc
sahf
or
pop
stos
inc
cmps
push
les
xchg
mov
pop
push
dec
pop
ja
ret
daa
stos
mov
jmp
mov
ror
cmps
outs
out
jnp
movs
mov
outs
xor
jbe
jmp
lods
icebp
sbb
call
jb
mov
and
push
xlat
sbb
adc
mov
or
test
in
retf
ins
cmps
hlt
ds
adc
push
fwait
ror
int
add
fmul
imul
out
mov
or
mov
ins
outs
adc
mov
pop
add
or
push
adc
add
jp
fsub
cmp
dec
dec
push
cmp
jmp
or
mov
mov
(bad)
pop
out
and
shl
cmp
lods
cmc
dec
cmp
or
(bad)
sti
mov
cli
add
mov
push
aam
sub
ret
rcr
(bad)
call
xchg
in
inc
retf
add
jb
sub
sub
(bad)
cmp
fidiv
fwait
and
shl
xchg
out
dec
jle
data16
add
movs
inc
sub
sbb
and
aas
repnz
(bad)
lea
bound
icebp
xchg
mov
int3
(bad)
mov
aaa
pop
loopne
retfw
in
aam
mov
nop
and
push
xor
fidiv
mov
pushf
push
bnd
mov
push
mov
mov
mov
arpl
mov
cmp
ja
adc
adc
mov
or
pop
adc
in
inc
pop
push
pminub
xchg
adc
mov
mov
mov
in
or
pop
push
pushf
fiadd
lods
bnd
pop
inc
(bad)
movs
popa
mov
add
xor
call
cli
push
(bad)
lahf
pop
inc
xor
mov
mov
ds
retf
sbb
in
in
jno
jp
stos
js
mov
sbb
test
jg
xchg
sbb
int
mov
add
addr16
pop
dec
mov
in
ret
xchg
push
pop
adc
fs
xchg
test
mov
pop
iret
sbb
push
ror
inc
fdivp
cli
enter
movs
mov
in
and
jmp
mov
hlt
mov
cmp
push
loop
sbb
mov
cli
mov
dec
mov
mov
push
xor
ins
out
jg
dec
mov
adc
mov
pinsrw
push
push
enter
aam
sti
add
rol
popf
lock
push
cwde
imul
stos
mov
and
ja
je
jp
enter
sbb
mov
in
xchg
xchg
arpl
or
call
shr
nop
push
add
pop
popa
xor
enter
fstp
mov
adc
mov
out
push
add
jg
mov
ds
xor
cmp
jmp
cmps
and
in
jo
aas
mov
jns
dec
aaa
(bad)
sub
fisttp
rcl
mov
sti
mov
xchg
into
mov
sahf
pop
in
outs
jb
test
cmps
icebp
in
jmp
lods
cmp
adc
pop
daa
outs
push
pop
add
clc
inc
inc
pop
(bad)
xchg
addr16
push
test
jno
lea
sahf
mov
mov
das
test
mov
push
cmp
mov
imul
mov
ins
jmp
mov
shl
fwait
stos
(bad)
sub
sbb
cdq
loopne
fwait
loopne
lahf
sbb
int
or
outs
inc
aas
cmp
dec
retf
popf
aad
xchg
and
pushf
xchg
jmp
arpl
mov
inc
and
call
adc
sti
test
push
mov
stos
jmp
data16
das
cld
arpl
sbb
lds
repnz
cmp
(bad)
cmps
xchg
mov
mov
test
xchg
push
xchg
mov
rcl
loop
fwait
inc
inc
xchg
in
push
mov
ds
fs
cdq
jns
mov
add
(bad)
sub
stos
leave
lahf
mov
cmps
mov
inc
xchg
push
add
xchg
ds
sub
sti
xchg
cmp
inc
fisubr
pop
gs
rcr
or
xor
aas
rcl
and
pop
and
ss
mov
push
push
mov
and
or
shr
xchg
in
stos
sub
popa
push
dec
iret
push
mov
gs
add
sbb
mov
xor
ds
xlat
aam
mov
ins
das
or
daa
shl
add
adc
aas
std
jno
or
xlat
sahf
(bad)
addr16
pop
jbe
mov
cwde
out
or
jnp
mov
test
dec
repz
mov
mov
stos
mov
push
enter
and
pushf
shl
mov
js
cmp
and
fdiv
sub
lods
call
pop
mov
(bad)
and
mov
xchg
ja
sub
jg
cmp
fbld
inc
pop
outs
adc
push
pop
or
mul
xor
cmp
pop
rcr
std
pop
xchg
and
xchg
pushf
push
test
dec
cmp
loope
not
dec
mov
push
mov
outs
dec
pop
add
xchg
mov
cli
(bad)
cmc
push
test
mov
cmps
fld
mov
dec
and
out
or
jb
pop
push
jne
jne
mov
test
(bad)
mov
dec
mov
add
push
mov
loopne
pop
xchg
scas
stos
mov
inc
iret
ja
jl
pop
mov
adc
sbb
scas
pop
lock
loopne
pushf
add
inc
pop
sbb
int3
jl
push
mov
pop
push
xchg
or
xor
mov
test
xchg
push
mov
movs
lods
sbb
push
jmp
fnsave
adc
(bad)
enter
jge
and
cli
lahf
dec
dec
adc
iret
inc
xchg
aam
jecxz
mov
jb
pop
(bad)
outs
cmp
data16
das
push
mov
mov
mov
int
and
sbb
scas
add
inc
ins
mov
sti
(bad)
add
outs
mov
dec
fs
sahf
cld
adc
addr16
pop
pop
xor
and
hlt
pop
(bad)
pop
popf
fwait
add
mov
out
es
pusha
and
repnz
jecxz
cmps
fcomp
cwde
and
mov
lea
clc
jmp
sub
aas
scas
push
pop
mov
outs
mov
dec
dec
int3
in
ins
xchg
lds
lahf
ja
out
xchg
fsubr
outs
xchg
sahf
cmp
jmp
(bad)
push
fistp
jp
push
arpl
ss
ins
or
movs
inc
daa
mov
out
sub
dec
popa
or
daa
std
sbb
out
dec
mov
jmp
inc
jb
fucom
and
stos
aaa
jb
nop
cdq
sub
jle
fbstp
mov
push
sub
cdq
retf
sub
dec
or
jb
sar
stc
std
pop
adc
outs
cmp
pop
fcomip
and
add
cmc
mov
jno
fs
rcr
or
xchg
(bad)
sub
push
fdiv
ror
inc
push
push
push
push
lods
movs
movs
cwde
sub
pushf
cwde
dec
inc
pushf
pop
push
iret
jmp
add
imul
outs
js
or
cld
daa
mov
shl
add
cmp
scas
jae
sub
push
call
sub
ja
shr
cmp
ins
jl
dec
mov
clc
sub
inc
imul
mov
xchg
mov
mov
or
cld
inc
mov
sub
adc
scas
out
pop
outs
mov
mov
jp
sahf
mov
adc
push
int3
or
icebp
(bad)
fistp
mov
imul
push
jmp
inc
(bad)
hlt
xchg
xchg
fdivp
mov
mov
sub
sub
adc
fsubr
sub
retf
xor
(bad)
cli
xlat
mov
mov
dec
sbb
out
add
add
pop
cmp
push
or
inc
inc
push
call
jbe
(bad)
sbb
imul
cmps
jmp
jmp
in
enter
scas
adc
shr
mov
push
add
add
call
pop
out
pop
sub
outs
ds
popf
stos
clc
add
(bad)
or
cdq
dec
ins
and
mov
xchg
arpl
xchg
and
or
cdq
xchg
inc
mov
popf
sbb
inc
ror
not
mov
xchg
cmps
mov
and
int
cmp
call
or
lock
(bad)
shl
xchg
xchg
jnp
imul
mov
jae
pop
mov
push
mov
ss
test
push
in
cmp
ret
(bad)
lock
ret
mov
mov
cmp
pop
xchg
sbb
pop
clc
(bad)
out
and
hlt
pop
xchg
pushf
cmp
call
mov
jg
retf
jecxz
push
shr
fld
test
cmps
arpl
fistp
mov
adc
aas
and
daa
aaa
test
std
pop
dec
jmp
ror
(bad)
or
mov
scas
dec
xchg
call
xchg
inc
stos
jmp
inc
mov
or
xchg
dec
adc
dec
push
lods
xchg
dec
loop
mov
hlt
call
sub
mov
xor
fist
bound
(bad)
sbb
stc
outs
or
(bad)
cmp
xor
out
sbb
ret
and
mov
push
mov
pop
mov
fadd
mov
fimul
adc
mov
sbb
inc
mov
test
adc
std
test
leave
cwde
ficom
cmp
lods
pusha
jmp
cwde
mov
adc
xor
add
push
dec
sub
into
pop
addr16
jp
call
inc
or
jno
jne
jge
mov
addr16
sti
scas
dec
mov
add
rcr
not
and
xchg
test
retf
loopne
sub
scas
das
lea
bound
adc
add
lahf
and
inc
push
sbb
mov
and
mov
aam
jb
pop
cwde
in
loope
leave
jnp
or
push
icebp
jmp
dec
push
inc
pop
pop
cmp
jle
pop
xchg
xchg
jl
mov
xchg
mov
sbb
sar
lods
int
lods
dec
mov
add
out
movs
fldcw
and
sbb
pop
mov
arpl
pop
outs
or
das
clc
mov
repz
push
in
das
pop
je
mov
mov
aad
stc
aaa
push
jae
jae
and
data16
mov
mov
pop
mov
retf
movs
inc
fist
cmp
push
call
(bad)
xchg
(bad)
dec
mov
and
or
and
icebp
push
dec
dec
mov
loope
mov
aad
push
mov
lds
(bad)
div
sbb
movs
(bad)
mov
mov
cs
cmp
and
movs
sub
icebp
inc
push
jecxz
dec
sbb
bound
inc
and
mov
mov
push
xchg
push
jno
sub
sbb
adc
test
lock
push
xchg
pushf
jecxz
repnz
mov
push
test
xor
scas
sub
cwde
rcl
mov
mov
call
dec
mov
mov
or
mov
mov
lahf
test
dec
ins
ror
mov
and
xor
and
(bad)
clc
mov
adc
mov
js
sbb
pop
stos
ins
shr
jbe
sub
out
mov
iret
lahf
and
cdq
(bad)
out
icebp
cli
push
icebp
add
retf
hlt
dec
jne
xor
imul
and
int3
mov
std
mov
lea
inc
int3
adc
icebp
sbb
ficomp
jns
mov
or
dec
std
sub
push
inc
and
in
cmp
mov
in
xor
xchg
test
fstp
mov
rcr
shl
xchg
cmp
push
mov
push
pmaxsw
out
rcl
mov
in
and
dec
out
data16
lods
xor
lahf
js
push
adc
or
push
arpl
ret
stc
pop
mov
push
fldcw
push
scas
lahf
lock
dec
jp
mov
sub
lods
push
xchg
call
ret
js
nop
inc
mov
test
add
mov
mov
icebp
jne
daa
inc
inc
mov
clc
and
fst
cmc
add
mov
in
ins
aad
add
out
xor
in
xchg
hlt
int
(bad)
jo
les
cmps
div
mov
xchg
mov
xor
cmps
je
sub
ds
ficomp
sub
out
adc
jl
xchg
push
cmp
retf
les
(bad)
shl
das
push
jo
(bad)
pop
ror
cmp
sbb
sub
xlat
js
jmp
jae
dec
sti
adc
sub
pusha
sar
out
or
cmc
inc
pop
adc
mov
push
mov
out
mov
addr16
inc
or
xor
imul
std
xor
call
dec
or
mov
push
scas
and
push
mov
sti
xchg
sub
mov
jnp
mov
jo
mov
shl
cmps
test
push
repz
int3
test
push
test
mov
test
outs
cmp
jmp
jne
fdivr
retf
and
lods
lea
std
lahf
addr16
imul
fst
mov
xchg
xchg
mov
mov
fidiv
loop
pop
mov
popa
ins
iret
pop
jno
mov
rol
adc
fs
push
gs
inc
dec
test
sbb
add
retf
cld
mov
test
bound
push
xor
call
cmps
sbb
aam
inc
loope
sahf
scas
sar
mov
das
into
sbb
cmp
jmp
js
jg
sub
call
xor
adc
aad
test
sbb
push
mov
stos
js
retf
es
in
dec
push
ficom
adc
(bad)
test
push
popf
ret
mov
push
div
adc
movs
ja
jmp
push
bound
xchg
adc
popf
dec
or
cmc
(bad)
fnstsw
out
pop
jle
nop
scas
test
inc
mov
adc
and
loopne
popa
mov
mov
cs
nop
fst
out
or
fcom
(bad)
mov
fwait
adc
cmps
mov
and
retf
in
dec
popa
or
cmp
push
sbb
mov
or
and
cmp
loope
cmp
in
lahf
lahf
in
dec
or
leave
test
mov
enter
daa
xor
clc
mov
ret
retf
cwde
xchg
mov
imul
cmc
imul
or
dec
push
or
fwait
cli
mov
lods
psubusw
fwait
call
repz
xor
lds
shl
mov
pop
pop
xchg
mov
add
adc
sbb
and
lea
or
(bad)
icebp
stos
ins
mov
call
jbe
fst
jmp
mov
cld
nop
jg
xchg
imul
sbb
jmp
push
popa
das
data16
lds
aaa
pusha
pop
pop
mov
scas
cmp
jb
push
xlat
pop
sbb
pop
fist
inc
mov
nop
and
xchg
mov
jnp
inc
mov
sub
les
out
je
or
xor
xchg
shl
cmc
add
xchg
daa
inc
das
scas
arpl
sub
icebp
dec
pop
fs
jae
dec
bound
les
push
adc
(bad)
mov
jo
test
mov
and
adc
ss
push
int3
gs
mov
or
mov
mov
nop
imul
mov
fs
pop
jo
mov
add
mov
test
and
or
adc
shl
fstp
mov
popa
cmp
sbb
add
stos
and
imul
js
mov
cmc
les
mov
xchg
mov
mov
imul
dec
adc
xchg
idiv
repz
jge
(bad)
je
cmc
push
not
mov
std
mov
iret
sbb
movs
mov
xchg
fdiv
into
fisub
mov
js
cmp
in
inc
xor
scas
retf
xchg
xchg
out
add
mov
or
lock
stos
inc
retf
cmp
sub
ret
dec
sar
push
hlt
xchg
leave
push
mov
pop
mov
lods
das
mov
cmp
outs
jne
jae
dec
cmp
dec
or
pop
lods
dec
or
push
mov
icebp
popf
add
shl
mov
scas
sahf
mov
xchg
xor
rcl
sbb
hlt
mov
mov
mov
xor
dec
pop
cmp
je
sbb
adc
cdq
add
jp
add
or
in
xchg
pop
inc
add
jo
ficom
sub
adc
or
icebp
stos
jmp
sub
es
inc
outs
cmc
std
mov
retf
stc
sub
nop
cmp
mov
jnp
test
in
(bad)
loopne
cmp
fmul
pop
test
xchg
push
jae
add
and
inc
movs
inc
pop
inc
std
xor
fwait
sbb
cli
sbb
xchg
icebp
sbb
mov
jmp
mov
mov
add
sbb
(bad)
pop
jno
and
jg
cld
jmp
sbb
mov
addr16
jp
jmp
popf
popa
je
cld
repz
adc
(bad)
or
movs
pop
dec
mov
retf
mov
movs
add
mov
and
or
pushf
pop
or
xor
retf
mov
and
xchg
lea
icebp
pop
in
inc
add
les
sbb
ss
pop
sub
movs
or
mov
xchg
and
rcr
mov
dec
inc
mov
movs
ja
push
repnz
sub
xchg
mov
and
pusha
ins
fdivrp
jl
sbb
push
dec
jmp
icebp
mov
mov
adc
push
pusha
std
sahf
jmp
and
clc
sbb
add
add
stc
jne
(bad)
lock
pusha
popa
sbb
sbb
fst
inc
pushf
mov
aad
add
cmp
inc
cmp
adc
arpl
add
test
adc
scas
jno
movs
xchg
push
int3
sbb
fnstsw
(bad)
adc
push
sbb
lea
fwait
push
mov
lahf
dec
aad
mov
loope
inc
cmc
ficomp
(bad)
xchg
cmp
cmp
dec
aam
je
cdq
xchg
call
push
neg
retf
fstsw
inc
rcr
cdq
inc
ret
std
push
nop
push
imul
hlt
ins
out
ja
inc
rcl
or
shl
ror
push
call
add
mov
xor
dec
mov
adc
int3
aad
gs
dec
call
inc
mov
(bad)
fldenv
test
loope
xlat
sub
push
call
or
or
sub
mov
int
sbb
mov
out
fidivr
adc
fs
into
les
enter
clc
stos
mov
(bad)
and
cmp
lds
outs
mov
dec
inc
out
add
scas
fld
test
icebp
out
or
or
sub
adc
and
adc
call
push
cmps
mov
xchg
sub
xchg
out
int3
cmp
xchg
std
adc
mov
xchg
push
mov
sub
jle
call
xor
jne
push
inc
sub
dec
repz
pop
movs
pop
test
hlt
pop
call
ss
icebp
inc
sub
pop
(bad)
scas
jecxz
pop
cdq
push
pop
(bad)
into
mov
sbb
imul
inc
(bad)
fdivp
push
dec
imul
movs
jb
(bad)
retf
push
cli
push
test
cmc
ds
out
cld
push
(bad)
adc
movs
in
sub
mov
cdq
xchg
shr
sti
add
pop
inc
gs
(bad)
xchg
das
test
out
mov
push
cmp
cmp
out
xchg
cmp
repnz
popf
sub
sbb
mov
inc
or
pop
adc
mov
jnp
popf
inc
mov
inc
ja
mov
mov
xchg
xor
push
jle
sub
inc
pop
or
repz
adc
into
and
mov
sti
lahf
test
jnp
out
cld
cwde
adc
sub
arpl
cmps
sbb
rcr
sub
xchg
sahf
xchg
jbe
mov
cmc
cmps
(bad)
loopne
movs
scas
inc
js
jo
ins
es
jl
sbb
lods
jp
pop
xchg
sub
jle
loop
mov
dec
scas
or
ret
xor
adc
mov
and
(bad)
(bad)
retf
push
popf
in
gs
stos
and
dec
or
jmp
xor
mov
mov
inc
rcr
pop
icebp
adc
fs
or
sar
mov
dec
inc
adc
jb
retf
jl
hlt
test
test
out
iret
inc
and
jle
ret
pop
loop
es
imul
sbb
mov
pusha
stc
add
cmps
sub
retf
pusha
les
xchg
sbb
fwait
mov
jns
pop
inc
lds
pop
cmc
mov
clc
call
mov
(bad)
mov
int
jg
mov
mov
and
(bad)
xor
aad
xchg
pop
dec
mov
sub
fstp
inc
xchg
shr
lock
(bad)
fwait
call
adc
(bad)
pop
dec
jecxz
stc
mov
adc
daa
dec
mov
xchg
retf
pop
mov
imul
mov
push
push
or
jb
mov
aas
out
or
stos
cmc
xchg
xor
mov
ret
xchg
ret
cdq
in
sbb
ret
scas
(bad)
int3
push
jno
popa
cmps
pop
cdq
jle
jo
jg
ss
pop
fnop
imul
dec
and
shr
dec
(bad)
fiadd
outs
neg
sub
movs
and
(bad)
daa
jno
mov
jno
cmp
or
inc
xchg
(bad)
adc
ret
test
int3
ret
add
ret
and
mov
inc
out
fisub
jb
or
pop
jl
movs
xchg
call
dec
sbb
push
jne
std
cli
jne
inc
push
mov
cmp
dec
xchg
pop
sub
and
outs
jbe
shl
outs
test
idiv
or
or
and
dec
mov
in
jge
xor
add
jmp
push
mov
int3
mov
push
and
shl
pop
xchg
and
loop
mov
shr
push
dec
data16
pop
pop
push
sbb
cwde
and
into
mov
jge
mov
lock
out
das
bound
repnz
dec
imul
xchg
stos
leave
add
sub
pop
jg
and
mov
xlat
and
das
rcr
stos
call
(bad)
fcom
mov
pusha
add
cmps
and
mov
in
mov
cmps
mov
jl
push
repz
jno
ja
xor
mov
and
fsubr
dec
push
mov
dec
pop
arpl
(bad)
xchg
cdq
mov
jo
int3
fcmovb
jb
loope
xchg
in
cli
mov
xlat
cld
out
xchg
icebp
test
or
stc
out
and
popa
mov
jge
jecxz
loopne
lods
adc
div
push
mov
jbe
loop
cmps
sub
(bad)
test
or
add
jl
cdq
push
int
movs
mov
ds
jo
shl
cmp
mov
jle
and
cmp
out
push
icebp
fisub
sbb
out
hlt
in
xor
cwde
and
stos
jns
xchg
mov
pop
fcomp
cmp
cmp
popa
and
push
pop
fcomp
or
pop
je
jae
aaa
loopne
test
cld
jecxz
dec
add
lahf
jl
lock
arpl
mov
xchg
ret
push
sbb
or
push
clc
test
std
push
es
xor
ins
es
rcr
adc
imul
dec
in
mov
mov
and
cwde
pop
test
rcr
retf
mov
cmps
lock
icebp
pop
mov
mov
push
sub
mov
xor
int3
push
adc
cld
scas
dec
in
jnp
inc
fsub
sbb
(bad)
mov
out
icebp
shr
or
cdq
xor
mov
xor
mov
arpl
addr16
and
sub
or
push
sub
push
popf
push
jns
fadd
mov
mov
rcr
ss
sub
cmp
aas
fs
xchg
repz
mov
xchg
and
outs
aam
mov
jge
retf
mov
das
sbb
add
arpl
add
aaa
int3
cmp
test
outs
cmc
dec
imul
push
aad
loop
mov
mov
pop
cmp
jo
jl
jbe
pop
jecxz
jle
inc
xor
mov
(bad)
and
mov
scas
adc
(bad)
bound
aam
pop
mov
jmp
pop
inc
in
ret
push
aaa
call
mov
xor
sbb
lock
pop
or
or
xchg
cmp
xchg
cmps
mov
dec
js
inc
xchg
fmul
outs
push
loop
or
cmp
(bad)
fsub
sbb
test
mov
arpl
fisubr
or
push
fucom
push
popf
fwait
cli
jecxz
push
out
or
pop
inc
inc
sub
leave
in
adc
lds
ja
xor
(bad)
fdiv
repz
or
out
into
mov
sahf
pop
sti
ret
stos
stc
fwait
repz
jb
inc
jl
jbe
cmp
inc
and
js
out
mov
sbb
jmp
(bad)
in
xor
cmps
ja
fisubr
lods
or
jmp
cld
inc
push
cdq
inc
cli
hlt
sahf
nop
fs
test
cmps
sahf
nop
lods
mov
and
outs
adc
jg
mov
xor
sub
push
fwait
mov
das
out
inc
outs
scas
sbb
and
xchg
add
xor
pop
sbb
(bad)
ffreep
cmc
xlat
mov
push
stc
retf
in
pop
(bad)
loop
stos
in
(bad)
ss
outs
mov
ss
push
dec
xchg
inc
nop
pop
mov
cdq
es
pop
pop
(bad)
push
shl
inc
outs
jp
push
dec
pop
ss
int
fisttp
scas
inc
add
inc
mov
sbb
hlt
inc
repz
sbb
into
sub
jb
inc
loopne
mov
push
(bad)
xchg
test
jae
cmc
push
mov
call
xor
retf
mov
sar
mov
nop
(bad)
fucom
push
cmp
fisub
js
icebp
xchg
mov
cmps
pop
pop
sar
and
adc
imul
jmp
scas
in
cmps
add
cmp
add
mov
and
(bad)
(bad)
push
test
mov
in
daa
dec
fwait
call
push
sbb
jno
mov
push
adc
xchg
dec
add
mov
xchg
pusha
out
mov
cmp
push
add
mov
stc
scas
sub
push
inc
xor
adc
fidivr
or
test
sub
movs
gs
(bad)
add
adc
xchg
xor
xchg
lods
cmp
imul
add
mov
jge
sub
call
mov
dec
int
mov
jo
pop
cwde
cmc
ins
inc
xchg
adc
push
sbb
cmp
ins
pop
pop
mov
sar
sbb
cmp
jb
outs
fimul
fcom
jp
test
out
movs
imul
ret
adc
xor
mov
adc
stos
push
arpl
pop
out
out
jb
lds
xchg
pushf
dec
jge
lods
jb
test
xchg
cmp
fs
ret
pop
clc
push
sub
ins
es
push
dec
xchg
(bad)
sub
xadd
push
dec
or
inc
push
sbb
and
imul
ins
mov
(bad)
dec
(bad)
shl
inc
pop
jle
adc
lea
or
or
lahf
jp
stos
gs
sbb
cmp
out
btr
fstp
or
fdivr
add
inc
nop
or
ins
push
lahf
loopne
cmp
std
jg
xor
cli
sbb
fnstenv
add
stos
into
aad
or
(bad)
fiadd
cwde
sahf
and
or
xor
sbb
mov
sbb
sub
mov
xchg
rol
aad
cli
add
test
mov
psrlq
fnstenv
out
ror
test
push
mov
outs
rol
or
hlt
stos
stc
jns
pop
fcom
jge
out
popf
lahf
push
rcr
shl
push
enter
adc
and
cmp
add
test
(bad)
jecxz
mov
mov
das
(bad)
lahf
imul
fisub
dec
mov
idiv
inc
mov
sbb
repz
mov
sbb
mov
(bad)
rcr
push
loop
fwait
push
sub
movs
xchg
das
(bad)
retf
adc
mov
jbe
call
in
jmp
xchg
add
push
icebp
mov
mov
pop
mov
cmp
fadd
pop
jbe
dec
mov
fbld
shl
pop
retf
or
lods
or
enter
push
aam
add
sbb
sub
xchg
(bad)
pop
pop
pop
cmps
push
lds
cs
retf
std
outs
or
mov
clc
xchg
in
mov
es
sub
out
aas
int
pop
add
jge
xchg
mov
mov
retf
and
push
in
pushf
and
jne
xchg
mov
mov
loope
adc
jmp
rcr
pop
dec
cmps
in
ror
cmp
pop
loopne
cdq
mov
(bad)
push
push
cmp
call
repnz
jge
cli
mov
sub
imul
or
ret
(bad)
loop
push
lods
int
retf
push
cmc
push
push
ret
in
mov
sbb
ret
mov
and
ss
cmp
gs
pop
dec
push
and
mov
ja
pop
cwde
loopne
jp
push
jp
addr16
in
jg
mov
loope
add
jp
inc
cmc
lea
pushf
or
in
mov
and
cdq
fidivr
mov
sbb
in
dec
mov
cmps
sti
and
and
sub
push
test
inc
mov
sbb
inc
mov
(bad)
mov
push
retf
pop
mov
std
jmp
outs
jo
mov
out
or
daa
(bad)
ins
lahf
aad
and
xor
(bad)
stos
add
push
inc
or
jne
push
or
push
mov
mov
das
push
xchg
loopne
(bad)
in
call
shl
outs
(bad)
jle
(bad)
cmp
loop
rcl
cmp
cmp
add
clc
jl
outs
jno
xchg
inc
aas
in
into
mov
sti
sub
pop
pop
sbb
call
ins
jg
xor
sub
push
add
xor
clc
add
mov
retf
and
mov
retf
mov
jmp
nop
mov
adc
or
ds
cmp
jecxz
jbe
loopne
sub
mov
mov
push
outs
loop
cmp
sbb
mov
pop
out
mov
cmp
jbe
pop
rcl
not
mov
(bad)
stos
fdivr
(bad)
repnz
out
frstor
test
sbb
push
mov
push
jg
cmp
pop
lods
js
mov
xchg
or
fucomi
jb
movs
add
dec
retf
shl
imul
fs
pop
dec
pop
or
in
and
test
dec
loope
xor
sub
and
fiadd
fwait
mov
leave
fidivr
ds
cmp
xchg
pushf
out
loope
or
in
push
retf
cli
(bad)
xchg
sahf
imul
ds
jle
mov
into
jno
push
inc
div
push
xor
push
xlat
(bad)
dec
in
sbb
out
inc
fadd
hlt
inc
shr
fstp
sbb
xlat
dec
int
dec
hlt
ret
add
and
pusha
ja
stos
jecxz
mov
sub
pop
ja
test
loopne
leave
ja
add
add
jb
pop
and
aad
fcomp
lock
cmp
xchg
jae
add
inc
xor
outs
fdiv
es
mov
mov
(bad)
jmp
int
dec
dec
imul
mov
imul
pop
scas
leave
fwait
sbb
scas
or
call
fisttp
mov
pop
push
int
xor
jae
mov
push
cmp
fs
rol
mov
imul
je
fdiv
mov
jo
ret
neg
sar
inc
push
and
mov
xchg
pop
stos
pushf
scas
out
jae
xor
mov
pop
cmp
push
pop
xchg
jg
icebp
dec
pop
mov
dec
aas
sub
(bad)
stos
loop
jae
(bad)
cmp
rcl
jecxz
inc
xchg
adc
mov
or
into
mov
es
jmp
lods
out
xor
dec
pop
inc
lods
adc
retf
xor
inc
xor
dec
xchg
fnstsw
mov
pop
sub
mov
retf
pop
jno
and
mov
retf
lea
push
mov
pop
mov
and
jle
mov
jne
call
cmc
sbb
push
mov
sahf
ss
push
jo
inc
ror
icebp
jnp
mov
shr
loopne
in
fsubr
push
xor
sub
out
cmp
movs
rcl
cmp
loopne
jb
xchg
pop
pop
xor
and
add
or
aas
out
lahf
push
lea
aad
int
idiv
and
retf
mov
in
call
pop
(bad)
mov
cmps
ror
sbb
in
xor
test
mov
push
(bad)
or
daa
mov
lods
sbb
scas
popa
pop
in
push
imul
or
fwait
(bad)
pop
call
div
push
xor
mov
pop
pop
retf
jmp
jbe
inc
pop
sbb
ds
mov
pusha
nop
rcr
or
addr16
mov
pop
sub
and
mov
add
ror
pop
sbb
cwde
movs
add
cs
imul
(bad)
leave
mov
vpshlb
inc
hlt
sbb
inc
xor
or
xor
and
cmc
and
sbb
pop
cmp
pop
mov
pop
out
movs
dec
out
repz
bound
mov
nop
add
add
inc
(bad)
inc
ja
int
out
sub
xlat
js
nop
test
jge
les
sub
mov
aas
mov
in
dec
mov
mov
or
scas
mov
shl
shl
adc
aad
inc
addr16
pop
dec
stos
and
cmp
xchg
xchg
xchg
ret
dec
xchg
mov
mov
sub
dec
and
mov
in
int
fmul
add
inc
dec
mov
imul
mov
popa
mov
sub
jnp
es
pop
(bad)
fstp
sahf
call
push
outs
loopne
aaa
adc
and
adc
add
rcr
dec
lahf
adc
jle
popa
push
cli
sbb
or
xchg
jl
pop
aam
xchg
cmp
cmps
mov
cmp
adc
push
stc
dec
ins
cmc
jecxz
mov
mov
loop
sar
bound
lahf
mov
mov
sbb
lahf
push
cld
pop
outs
push
xchg
jg
cmp
fcomp
jg
clc
adc
outs
in
or
xor
les
mov
jae
fsub
cli
sbb
mov
dec
(bad)
push
push
inc
movs
jmp
lods
jne
inc
jo
sub
cmp
movs
mov
jae
fisub
jno
pop
in
imul
(bad)
(bad)
ss
adc
add
pop
mov
dec
or
mov
pop
mov
test
inc
cmp
sub
xchg
arpl
in
movs
inc
adc
push
pop
fidiv
inc
push
fwait
aad
out
fidivr
shr
jmp
jb
or
sbb
and
or
pop
clc
dec
scas
jo
stos
(bad)
adc
test
xor
adc
pop
enter
ins
dec
cld
cld
rcr
inc
loopne
mov
addr16
pusha
stc
lahf
push
add
out
(bad)
or
in
lahf
jns
sbb
dec
jge
dec
sub
out
adc
cmps
stos
int3
daa
in
ja
addr16
dec
arpl
mov
lea
push
ret
lods
add
dec
mov
dec
and
rol
and
or
sub
repnz
data16
pop
iret
lahf
mov
loop
push
pop
outs
iret
(bad)
adc
jecxz
aas
push
xor
rcl
or
mov
mov
sbb
frstor
sbb
shl
std
push
jecxz
cmc
nop
xor
aas
push
cmc
movs
ss
xchg
lods
inc
or
cli
or
fiadd
into
mov
inc
ficomp
push
mov
cld
cli
out
fadd
mov
push
xchg
push
and
sbb
imul
and
mov
push
and
mov
cmp
sub
rcr
adc
or
adc
add
and
xchg
cmp
ins
dec
lea
and
jp
fsubr
push
lods
jmp
cdq
or
retf
out
mov
dec
dec
es
or
push
jmp
mov
mov
retf
lds
sar
sahf
nop
cmc
stc
push
mov
cmp
sbb
test
fsub
sbb
inc
fldenv
test
outs
sti
cli
inc
div
outs
sbb
and
lea
and
adc
sbb
pop
and
adc
cmp
ret
sub
jp
mov
retf
mov
lock
dec
xchg
add
push
push
(bad)
cmps
rcl
cmp
sti
jp
xchg
mov
scas
mov
popa
or
adc
gs
xchg
inc
repz
jecxz
cmc
nop
mov
scas
xor
arpl
movs
add
loopne
push
fidiv
(bad)
adc
scas
stc
scas
test
call
fdivr
push
sub
inc
push
loop
adc
add
xlat
xchg
pop
sub
lods
int
jg
mov
sub
test
sbb
mov
xchg
mov
out
pop
sub
xchg
mov
mov
rcr
test
scas
in
mov
in
or
push
push
mov
xchg
inc
or
popf
mov
mov
test
xor
push
gs
int
sahf
nop
xchg
jbe
out
pop
call
data16
pushf
aad
ret
dec
loopne
pop
hlt
test
cmp
cmp
(bad)
out
add
mov
rol
jno
into
fdiv
(bad)
std
push
xchg
or
dec
imul
jae
in
inc
pop
test
push
and
push
lods
cli
mov
dec
dec
les
mov
lods
xor
scas
sbb
mov
nop
outs
fwait
cmc
(bad)
in
icebp
or
dec
fwait
adc
mov
mov
inc
sub
sbb
or
stc
shr
icebp
stc
jmp
xchg
mov
mov
std
or
sbb
fdivr
xchg
sar
lahf
mov
xor
inc
rcl
xchg
addr16
ins
mov
fistp
xor
sub
das
sti
addr16
inc
sbb
clc
xlat
xchg
adc
add
add
mov
lods
pop
fcomip
push
repnz
pop
loopne
mov
ror
inc
mov
push
xor
fdivr
in
jl
repz
sbb
mov
mov
fs
add
loopne
xor
in
sub
in
sahf
cmps
add
jno
(bad)
lds
add
popf
mov
add
in
and
jbe
mov
dec
push
add
sbb
mov
pop
hlt
pop
sub
cli
lods
loop
repz
(bad)
nop
mov
test
scas
or
pop
dec
mov
call
and
test
and
pop
mov
out
repnz
or
sbb
int3
ins
int3
mov
or
xchg
hlt
xchg
(bad)
pop
adc
out
add
jo
cmps
ja
add
pop
cdq
adc
cld
retf
lods
and
push
sbb
out
imul
cmps
ret
xchg
or
cmps
into
dec
pop
and
mov
xchg
loopne
mov
scas
xlat
out
(bad)
jae
loope
mov
(bad)
int
jb
cmp
cmp
add
cli
pop
xor
stos
shl
(bad)
or
dec
mov
shr
mov
popf
adc
ret
jae
dec
sub
sbb
fdiv
pop
jmp
test
je
or
xchg
pusha
jp
cld
xchg
imul
jle
inc
xor
push
scas
cdq
lds
cs
out
ficomp
daa
or
jb
mov
xchg
dec
cwde
retf
daa
je
inc
mov
fcomp
jns
add
cmp
stos
mov
ret
sub
xor
mov
add
scas
cld
mov
mov
dec
test
in
clc
add
je
push
adc
sub
idiv
jne
or
jl
je
cdq
test
and
push
(bad)
cli
xchg
jge
xchg
mov
sti
mov
sub
cmp
loop
sbb
mov
adc
sub
push
loop
xor
in
sbb
and
xor
push
jmp
loope
sbb
dec
jl
fst
or
inc
inc
sub
div
mov
ss
mov
adc
ret
push
adc
add
xor
dec
ja
sbb
shl
cmp
push
pop
not
ret
fldenv
pusha
push
mov
cs
ret
fadd
adc
jmp
inc
cmp
dec
push
out
jno
mov
adc
xlat
push
xor
adc
das
(bad)
push
or
test
mov
pop
xchg
scas
lods
push
clc
push
je
hlt
or
ret
mov
sar
mov
or
mov
stos
push
fisubr
ror
in
adc
jbe
push
js
leave
sbb
jae
rol
mov
scas
cmp
fiadd
int3
ret
add
movs
inc
pop
rcr
loope
xor
(bad)
iret
push
shr
fcomp
movs
add
fidiv
ficomp
daa
cmp
fdivr
js
arpl
in
mov
addr16
pop
jb
jl
mov
int
std
mov
add
stos
std
inc
pop
movs
push
rcr
ds
je
push
pushf
mov
xchg
or
adc
dec
fst
and
aas
cmp
push
ds
(bad)
iret
xchg
and
mov
cwde
(bad)
outs
adc
mov
add
sub
movs
pop
xor
ds
inc
cmp
fbld
out
sub
add
mov
dec
(bad)
sti
cdq
jns
sub
ffreep
aas
out
mov
clc
sub
call
fdiv
into
daa
icebp
adc
leave
inc
mov
push
jp
dec
add
xlat
xchg
mov
jmp
xchg
jne
cwde
outs
jge
xor
sub
pop
adc
fiadd
xor
xor
pand
dec
cmps
inc
movs
dec
fstp
les
xor
add
jp
jmp
cmc
popa
adc
in
in
pop
(bad)
jg
sbb
cmp
mov
jg
dec
jns
gs
push
mov
ret
sub
push
mov
xchg
es
sub
(bad)
mov
retf
fldenv
jo
add
mov
nop
scas
in
push
push
jl
xchg
adc
jne
jae
xlat
pop
ins
hlt
xchg
wbinvd
jle
stos
test
push
cli
(bad)
adc
icebp
pop
mov
je
scas
mov
jo
push
jae
cmp
daa
scas
or
pop
std
lock
lahf
sub
or
sub
mov
sar
jge
mov
fs
sub
adc
or
add
popf
(bad)
retf
jne
cli
push
mov
pop
lahf
sbb
ins
(bad)
aad
jle
mov
mov
out
js
inc
mov
rcr
add
jb
sub
aam
or
add
sbb
push
xchg
lahf
adc
mov
lods
loopne
adc
sub
stos
clc
adc
xchg
dec
(bad)
pop
ret
je
movs
jle
inc
inc
call
mov
mov
sub
mov
jecxz
mov
retf
or
inc
(bad)
fdivr
mov
outs
test
or
cmc
imul
scas
inc
pushf
adc
adc
sbb
cdq
clc
mov
in
inc
fsub
xchg
(bad)
push
lock
dec
in
fs
mov
mov
push
outs
push
cmp
loopne
push
cs
push
mov
popa
xor
loope
mov
dec
or
mov
mov
call
mov
nop
inc
imul
or
xor
mov
shr
cwde
inc
xor
xor
sbb
adc
push
fidivr
dec
add
jns
push
adc
jp
mov
movs
mov
cmp
(bad)
sahf
std
pop
loop
mov
nop
jns
sbb
mov
loope
sti
pop
scas
sbb
ds
into
(bad)
fidiv
hlt
xor
shl
rcl
pop
hlt
fisub
xor
mov
or
adc
cmp
es
inc
lea
ret
imul
les
inc
retf
xchg
arpl
and
cmps
xchg
fdiv
push
sbb
mov
ds
stos
add
repnz
cmp
popa
jle
addr16
pop
loopne
fsubr
and
mov
out
add
sbb
jmp
push
dec
and
jns
sub
cmp
jmp
fdiv
mov
or
jge
push
jmp
or
sbb
inc
pop
lds
scas
ror
pop
shl
pushf
inc
std
rol
outs
sub
and
pop
addr16
lea
loope
dec
jmp
xor
sbb
jmp
push
clc
mov
cmp
xor
push
imul
leave
or
movs
jne
push
into
ja
popa
cwde
sub
arpl
repnz
inc
shl
adc
xchg
and
out
dec
cmp
std
pop
in
test
mov
cwde
mov
(bad)
mov
mov
dec
popa
cli
neg
rcr
not
in
inc
jbe
mov
out
dec
cli
xchg
fucomi
cmp
pslld
sahf
sub
mov
stos
xchg
aam
dec
adc
ins
pop
xor
xor
out
jo
xor
xchg
rcr
sub
push
add
jb
leave
mov
and
pushf
or
aam
push
push
inc
dec
xor
xor
and
repnz
leave
mov
cmp
mov
and
ficom
sbb
int3
sti
dec
lds
daa
leave
das
fwait
pop
dec
retf
aaa
inc
pop
push
push
lods
add
rcr
xchg
adc
ss
stos
xor
pusha
xchg
icebp
sti
(bad)
ficom
fs
call
fild
popf
fistp
jns
mov
ret
scas
jg
movs
in
adc
mov
inc
inc
xor
jmp
ret
pop
ja
jge
and
sub
sub
in
icebp
xor
add
xor
mov
jnp
xlat
and
movs
icebp
sahf
sub
stos
xchg
into
sub
dec
pop
or
ins
and
add
push
inc
call
inc
pop
push
lds
pushf
inc
dec
and
call
fidivr
test
gs
arpl
(bad)
fild
es
jmp
ds
mov
shl
lods
xchg
fcom
mov
imul
inc
movs
outs
pusha
mov
dec
cmp
movs
and
ins
or
add
repz
(bad)
ds
push
dec
push
add
or
jbe
ss
loope
and
mov
jae
fld
inc
je
rcl
nop
xor
xor
mov
push
jl
repz
mov
jg
and
(bad)
dec
mov
and
xchg
xchg
leave
cmp
and
fimul
jl
cmp
pop
clc
in
xor
(bad)
dec
cli
fwait
shl
xchg
int3
je
xchg
das
pop
mov
shl
retf
scas
gs
mov
into
fwait
add
scas
or
stc
sbb
ins
sar
ins
mov
xlat
stos
retf
cmps
inc
(bad)
mov
or
lods
add
test
pop
add
inc
xchg
xchg
adc
inc
mov
push
jmp
inc
aas
inc
imul
jae
xchg
dec
lahf
scas
lds
push
iret
sbb
sub
jp
mul
sub
pop
or
jge
dec
div
lods
jmp
xor
mov
(bad)
(bad)
sti
jno
or
inc
pop
sar
popf
push
jp
jge
push
push
shr
jl
jbe
xor
cwde
ins
dec
movs
lods
sbb
dec
imul
loopne
mov
and
fistp
push
xor
popf
out
dec
jb
pop
push
mov
jl
int
pop
pop
xchg
inc
xchg
fs
pop
arpl
jle
(bad)
test
cmp
xor
aaa
jne
and
jae
jl
sar
push
cld
push
mov
popw
int3
stc
ret
xor
dec
jne
pop
jg
sub
scas
pop
mov
inc
or
in
cli
aam
shr
xchg
fnsave
pop
sbb
mov
cmps
and
mov
ss
in
push
nop
jb
mov
retf
pop
scas
xchg
out
xor
scas
in
icebp
mov
dec
stc
inc
inc
out
add
int
and
push
test
or
shl
out
cwde
repz
into
jne
jg
cmp
outs
dec
pop
add
xchg
xchg
add
ds
loopne
icebp
pop
fcomp
call
or
stc
pop
enter
popf
dec
or
test
dec
mov
and
jne
psrad
dec
push
add
ins
fnstenv
ror
mov
push
mov
push
sub
pop
(bad)
shl
int
and
aad
push
ja
adc
retf
mov
ins
cmp
push
mov
jae
iret
jbe
gs
cmps
sahf
retf
jecxz
fstp
jp
enter
fcmovb
ret
movs
stos
aad
cmps
xor
jp
mov
fimul
mov
out
add
aas
mov
out
sub
pop
jmp
mov
jge
mov
leave
mov
mov
pop
inc
sub
inc
pushf
dec
out
xchg
adc
sbb
sbb
sub
jle
ja
movs
or
loope
push
dec
inc
fwait
jle
mov
popf
dec
sbb
push
into
in
sti
inc
aam
pop
dec
rcl
cmps
mov
mov
mov
add
mov
outs
add
scas
cmp
sahf
out
ins
cmp
adc
jecxz
hlt
mov
inc
sti
call
jne
xor
dec
add
rcr
jne
jns
es
jno
jl
outs
dec
cld
pop
jmp
cmc
sub
fidivr
add
dec
xor
ds
or
adc
les
ja
cmps
scas
fwait
movs
pop
push
nop
call
adc
dec
or
and
inc
gs
(bad)
(bad)
mov
ins
mov
xchg
call
retf
out
pop
mov
daa
mov
les
cdq
push
mov
pop
mov
cmp
mov
sub
add
sbb
cmp
inc
or
add
mov
sahf
(bad)
fimul
sub
sbb
cmp
icebp
jg
pusha
pop
or
dec
sar
xor
stos
or
loop
loopne
dec
jo
stc
fsub
mov
sti
icebp
pop
sahf
or
jae
sub
xor
mov
or
jnp
jno
adc
xchg
sbb
jnp
xor
sub
mov
sub
and
fsub
or
pop
fs
jnp
xlat
fiadd
inc
fnsave
(bad)
pop
push
out
cmp
test
into
inc
push
fst
mov
jo
and
mov
imul
fidivr
pop
mov
nop
dec
inc
ret
rcl
or
mov
xchg
pop
cmp
in
adc
dec
mov
mov
adc
xchg
call
test
mov
dec
imul
mov
mov
jae
(bad)
fcmovne
(bad)
and
sbb
adc
sbb
loop
mov
push
and
lods
bound
jl
ja
xchg
ret
fwait
out
outs
cmp
int
xchg
test
subps
xchg
movq
cwde
int3
mov
sub
addr16
dec
inc
and
repnz
int
hlt
xor
mov
retf
jle
test
push
mov
push
loop
in
and
xchg
and
popf
mov
pop
arpl
push
xchg
dec
push
stos
or
sti
jb
push
xor
inc
popa
lahf
mov
adc
fadd
ret
mov
fsubr
mov
push
int3
lods
sahf
adc
inc
(bad)
dec
and
cmp
pop
mov
jbe
fadd
cmp
ss
dec
(bad)
jbe
das
movs
adc
ret
xor
and
cs
xchg
shr
dec
adc
pop
call
or
and
(bad)
repz
dec
pop
in
and
sti
shl
pop
pop
push
int3
add
mov
or
shr
popa
retf
pop
out
rcr
shr
ror
and
pusha
call
or
dec
out
and
pusha
cmp
fist
cdq
mov
push
std
jno
mov
jmp
daa
mov
pop
pop
enter
call
pop
dec
ds
iret
pop
mov
test
cld
xchg
cwde
ds
lods
xchg
xchg
jmp
idiv
popf
loopne
loope
stos
lea
push
sbb
xor
dec
ins
ins
cmp
push
pop
call
or
pushf
(bad)
xchg
in
jle
fidiv
popa
mov
das
hlt
sbb
push
mov
cmp
call
and
push
enter
out
outs
aad
mov
adc
sub
xlat
xchg
adc
mov
jnp
xor
(bad)
(bad)
xchg
push
cli
retf
cmps
pop
aad
cmp
das
jae
sbb
inc
sub
iret
xchg
cmp
lods
sbb
ficomp
mov
mov
jp
adc
xchg
jae
gs
ret
and
sbb
push
mov
fdiv
popf
cld
dec
jno
dec
ret
lods
push
jne
daa
or
xchg
mov
mov
adc
fwait
push
es
push
adc
sub
ret
imul
(bad)
arpl
pop
or
outs
or
imul
sub
lock
cmps
movs
or
repnz
inc
add
in
adc
call
imul
or
mov
adc
dec
cld
test
and
aam
jbe
outs
adc
xor
or
sub
or
or
movs
mov
sbb
mov
cs
mov
daa
pop
pop
fwait
dec
stos
mov
xchg
movs
xchg
cmp
rcl
mov
push
xchg
arpl
sub
jo
sub
shr
scas
push
dec
or
repz
aad
sub
dec
pop
pop
imul
xchg
add
mov
sbb
pop
push
mov
aam
xor
mov
xor
pop
movs
addr16
das
xlat
jne
push
pop
push
in
jl
pop
push
stos
and
and
xchg
call
aam
addr16
push
outs
xor
inc
pop
mov
cmp
test
sahf
jl
adc
mov
pop
sub
push
out
push
and
pusha
lock
jae
xchg
jecxz
jne
ja
mov
push
xchg
cmps
cmp
and
inc
inc
add
into
imul
daa
xor
cld
popf
mov
rcl
mov
jb
add
pop
aas
xchg
push
retf
repz
sbb
add
in
(bad)
sbb
ficom
sbb
dec
repnz
test
shl
and
scas
sti
in
js
and
aam
xor
idiv
push
outs
lahf
lahf
ja
cld
cs
and
cli
lods
call
ja
mov
jg
add
jg
xlat
sar
cs
scas
xlat
lods
and
(bad)
mov
adc
jnp
popa
cld
ds
loope
scas
test
sbb
pop
push
repz
test
jo
and
mov
sub
inc
push
push
in
xchg
fsub
jo
ds
shl
xor
dec
sub
imul
daa
les
dec
ss
mov
out
jae
xchg
sbb
inc
adc
pop
jp
not
test
xchg
xchg
test
mov
test
cmps
or
(bad)
and
fisubr
jno
jecxz
loop
lahf
(bad)
fmul
mov
fcomip
or
mov
pushf
jne
scas
and
dec
mov
jmp
add
jp
ja
mov
repnz
lods
inc
out
test
ja
dec
js
fwait
or
rcr
dec
in
sub
gs
out
test
mov
mov
js
out
stos
pop
stos
adc
(bad)
push
cmp
stc
dec
imul
sub
xor
inc
fnsave
jne
out
inc
sti
pop
dec
ins
pop
mov
or
mov
out
test
jmp
push
add
(bad)
fcom
dec
jo
jecxz
cmps
jae
aaa
cmp
sbb
clc
and
out
or
pushf
dec
ins
dec
adc
and
fcmovnbe
cli
aad
rcr
repnz
inc
xchg
stos
inc
in
mov
jmp
std
pusha
(bad)
fs
hlt
ds
mov
sahf
cmp
push
jbe
outs
push
sbb
je
push
imul
xchg
addr16
dec
call
mov
(bad)
mov
(bad)
or
ins
(bad)
push
dec
sbb
pushw
popa
xor
cmp
cli
fstp
and
test
test
push
inc
dec
xchg
sti
and
inc
adc
test
das
retf
ret
lds
fs
call
sub
or
fisub
aaa
mov
mov
jnp
jecxz
out
mov
push
cmps
pop
loope
xlat
lea
leave
andps
sbb
(bad)
mov
(bad)
out
jnp
or
retf
aam
xlat
and
adc
cmp
mov
cmp
ret
call
sub
lods
add
repnz
and
mov
or
dec
cmps
addr16
icebp
mov
arpl
adc
dec
push
(bad)
aad
inc
inc
sbb
sub
jmp
sub
mov
lock
mov
sub
add
xchg
pop
daa
pop
inc
pop
xlat
lahf
mov
add
fimul
fist
setle
xor
sbb
addr16
hlt
loop
fbld
fiadd
cld
push
add
or
adc
icebp
test
rol
mov
jo
cli
xchg
inc
lahf
and
in
into
add
pushf
xchg
ror
mov
cld
mov
cmp
adc
ss
mov
dec
daa
hlt
mov
aas
hlt
mov
inc
push
dec
push
bswap
loop
mov
retf
es
mov
loope
jae
mov
(bad)
adc
cmp
mov
jbe
cmp
ret
sar
sbb
out
pop
xlat
sub
pop
or
push
(bad)
jp
movs
out
cdq
movs
adc
jno
pop
cmp
mov
pushf
dec
sbb
fisubr
shr
iret
pop
mov
cmc
fcomp
pop
xchg
data16
loope
mov
cmp
out
mov
push
sti
sbb
hlt
test
fisubr
push
lds
in
enter
mov
or
(bad)
out
les
cmps
daa
sahf
cmp
(bad)
add
gs
adc
out
pop
paddsb
sub
pop
push
and
daa
cdq
pushf
inc
pop
in
clc
jnp
div
cdq
popf
es
pop
dec
xchg
sbb
daa
fwait
mov
in
add
movs
lds
mov
iret
jbe
test
xor
push
pop
add
mov
out
cmp
rcr
(bad)
mov
sbb
jle
dec
loopne
jmp
sub
push
mov
xchg
push
or
sub
push
and
sub
int3
test
mov
jg
icebp
xor
mov
call
sbb
mov
cmp
and
iret
(bad)
ja
scas
gs
cmp
loopne
mov
sbb
dec
in
cmp
or
adc
dec
shl
hlt
loop
std
aas
rol
les
adc
addr16
mov
or
jmp
inc
test
in
jg
test
shl
inc
sub
aam
das
mov
adc
adc
adc
dec
jmp
stos
cmp
es
lods
mov
mov
aas
jns
mov
in
out
lods
retf
adc
add
jl
dec
mov
or
mov
outs
leave
cmp
dec
hlt
call
out
pop
inc
cmp
out
jbe
loopne
popf
scas
inc
lahf
push
mov
pushf
push
push
(bad)
fisttp
retf
push
jmp
nop
and
in
sub
repnz
mov
out
or
cdq
jge
sub
sub
jae
sahf
fstp
enter
push
ins
cmps
stc
sub
mov
lahf
cmps
gs
mov
sti
pop
xlat
mov
(bad)
int3
iret
ss
and
push
sahf
ins
xchg
test
mov
dec
adc
push
lea
add
loop
jp
test
push
cmp
pop
daa
xor
cli
mov
stos
fisubr
push
push
daa
in
pop
mov
or
sub
aam
stc
inc
cld
mov
jle
rcr
jo
jae
sub
pop
rcl
(bad)
in
mov
cld
lea
inc
adc
jns
mov
pop
arpl
out
xchg
outs
sub
jns
inc
sub
cmps
(bad)
xor
and
loopne
push
ja
xor
lods
fidivr
xchg
or
push
cmps
pop
or
jle
pop
inc
(bad)
sti
adc
pop
sbb
push
xchg
loop
or
ds
and
pop
cs
jp
btr
fidivr
aad
xor
push
enter
in
push
xchg
dec
cwde
fwait
nop
out
in
out
pop
fs
jecxz
repnz
push
fwait
pop
sbb
hlt
xchg
add
sbb
popf
xchg
aam
cmp
test
stc
stc
mov
jg
sbb
cmp
mov
sbb
jb
mov
mov
loopne
adc
add
push
dec
rol
adc
aaa
xchg
(bad)
daa
xchg
xchg
loop
test
lods
out
jbe
outs
xor
popf
jo
retf
push
dec
test
sahf
loope
jb
neg
cld
pop
enter
js
cmp
stos
cmp
pop
mov
lahf
fild
test
imul
into
je
mov
add
xor
lea
and
add
jae
push
enter
bound
cmp
push
imul
dec
sub
std
mov
sbb
mov
dec
das
mov
ds
pushf
imul
call
dec
rcr
(bad)
dec
inc
or
dec
inc
ja
retf
(bad)
xchg
int3
cmps
dec
mov
pop
sub
sub
imul
xor
mov
mov
loope
test
fcmovu
and
pop
add
hlt
xor
sahf
xor
inc
inc
daa
pop
dec
or
push
adc
sbb
dec
in
jmp
lds
or
cmp
dec
jne
mov
sbb
inc
sub
and
ins
sahf
inc
xor
mov
gs
and
repnz
dec
push
or
and
les
test
movs
jno
ror
cmp
dec
aam
rcl
dec
lock
jbe
aaa
popf
sub
int
inc
xor
dec
fsub
push
cmp
and
ss
nop
aad
mov
mov
cmp
jo
test
into
aaa
clc
xchg
and
xchg
sub
cmc
inc
inc
xchg
int
push
lods
pop
and
mov
mov
push
fstp
xchg
or
cmc
xor
icebp
cmps
adc
cmp
push
and
sub
dec
jl
adc
bound
jno
push
and
jnp
pop
mov
sbb
push
lock
loope
outs
(bad)
pop
hlt
or
and
shr
mov
pop
int3
add
add
mov
sub
ficom
dec
pop
mov
inc
pop
xchg
mov
adc
ins
jecxz
fstp
dec
or
sub
sbb
mov
and
rcr
and
dec
mov
adc
pop
push
adc
dec
mov
xchg
push
cmp
jae
into
fisub
loop
or
xchg
inc
(bad)
cld
push
add
xor
and
movs
sbb
mov
adc
ret
lahf
xor
xor
outs
fnsave
pop
sti
pop
pushf
sbb
dec
fs
fisttp
xor
pop
mov
push
out
jg
in
cmps
ror
outs
fild
clc
shl
jge
xor
stos
or
stos
lods
push
hlt
jo
xor
cmp
loopne
ja
push
pop
test
cmp
jae
movs
inc
jne
sub
cmc
fisttp
(bad)
popf
ins
scas
xchg
xor
dec
dec
in
sub
lods
mov
arpl
sbb
retf
jmp
and
or
retf
jl
lds
mov
sub
in
mov
ret
test
in
sub
jae
sub
adc
jmp
mov
jne
jbe
pusha
dec
outs
in
jmp
mov
sbb
hlt
arpl
fisubr
(bad)
push
aas
fld
mov
(bad)
inc
mov
stos
pop
xor
ret
xor
push
adc
lock
xor
dec
in
fdivp
jge
pop
mov
push
ds
loopne
repz
or
dec
fs
ret
or
dec
sub
mov
shl
cmp
mov
mov
inc
test
mov
clc
push
rcl
mov
jns
mov
fidiv
ret
lahf
stc
pop
push
out
mov
addr16
mov
mov
imul
dec
dec
aad
jg
mov
mov
jl
xor
mov
(bad)
pop
out
and
call
pop
lds
in
mov
jge
loop
sub
and
sbb
adc
xchg
push
loope
ins
(bad)
cli
jl
adc
mov
mov
les
xor
stc
adc
xchg
ss
xor
sub
int3
rcl
or
mov
int3
imul
loope
ins
add
jmp
jmp
jecxz
fisubr
out
stc
aaa
test
ss
popf
movs
pop
popa
xchg
jb
enter
pop
aad
aam
pop
daa
std
and
jae
retf
dec
fcomp
adc
(bad)
out
push
jl
mov
repz
loopne
or
xor
loopne
fistp
icebp
mov
test
cmp
sbb
xchg
dec
mov
test
std
into
sbb
mov
inc
adc
and
sahf
push
out
dec
adc
movs
cmp
lds
lds
shl
mov
iret
and
push
jmp
adc
cdq
push
mov
add
dec
add
sbb
mov
iret
not
push
and
(bad)
clc
movs
out
cmc
in
ss
sub
jns
adc
xchg
pop
and
push
pop
inc
fs
jge
xchg
daa
sub
rol
push
mov
sahf
not
push
dec
adc
fiadd
pop
mul
ja
dec
fimul
adc
mov
ins
lods
jecxz
jne
fistp
dec
sub
cdq
xor
imul
sub
lahf
inc
push
cmc
(bad)
mov
stos
pop
movs
hlt
(bad)
mov
fcomip
pop
pop
mov
sub
mul
mov
pop
inc
sub
fisub
cmc
cmps
or
outs
and
ficomp
inc
mov
ffreep
pop
aaa
add
rcl
ins
sub
xchg
jae
xor
or
sti
nop
cmps
dec
aaa
mov
mov
(bad)
cld
mov
xor
push
mov
adc
xchg
add
mov
add
clc
and
std
mov
(bad)
movs
pop
sub
xchg
fcom
sbb
inc
nop
call
(bad)
fwait
out
dec
test
cmp
das
add
cwde
push
gs
(bad)
lods
jnp
bound
adc
lods
lods
pop
stos
inc
xchg
pop
sbb
push
pop
jmp
retf
inc
ins
xor
and
dec
jge
xlat
lahf
jmp
fdivr
push
adc
retf
out
cmps
xor
stc
push
jmp
mov
getsec
mov
pop
cs
sub
pand
int3
mov
mov
dec
jae
sbb
out
es
out
mov
add
jo
fsubr
mov
adc
inc
push
test
pusha
sti
jbe
sub
loope
and
sub
out
pop
loopne
loopne
adc
std
pop
add
sub
lds
cli
icebp
cld
jle
mov
jge
(bad)
sub
adc
pop
hlt
dec
(bad)
cmps
clc
mov
jmp
adc
push
repnz
int
lds
xor
repz
test
pop
clc
or
mov
mov
or
mov
inc
cwde
(bad)
sub
mov
iret
mov
mov
cmp
loope
xor
sbb
xchg
push
pop
mov
jle
dec
sub
out
dec
and
mov
push
sub
imul
cmp
xchg
xchg
icebp
pop
out
xor
rol
leave
movs
xor
in
inc
cs
sbb
retf
loopne
outs
inc
(bad)
(bad)
mov
ret
leave
sbb
stc
ret
mov
mov
mov
mov
dec
sbb
cmp
ins
imul
icebp
push
cmp
sub
sti
push
lods
mov
sahf
push
sub
dec
pop
pop
mov
push
clc
push
das
sub
imul
and
jmp
and
lods
inc
test
int3
outs
or
cmp
loopne
xor
cwde
add
and
pop
adc
sbb
inc
cld
add
mov
popf
cmc
fdiv
add
mov
movs
push
xlat
gs
sti
pop
nop
pop
mov
hlt
daa
lds
ret
or
stos
stc
or
sub
push
adc
cld
mov
jmp
cmp
dec
cwde
test
and
jecxz
jge
dec
lock
icebp
ret
jae
popf
mov
xchg
lea
jp
or
xchg
and
daa
or
jg
add
pushf
nop
add
sub
js
repz
xchg
mov
leave
mov
cwde
push
xchg
xchg
adc
push
and
nop
xchg
sbb
fisubr
xor
push
sub
mov
jns
inc
cmp
cmp
xchg
pop
ss
movs
inc
sti
enter
mov
sbb
sub
and
inc
dec
pop
aam
repz
inc
ret
or
mov
in
cmp
pop
mul
adc
adc
and
sub
fcomp
jge
mov
jmp
add
shl
js
dec
push
aad
sub
adc
and
push
jp
and
ja
xchg
push
jb
and
in
sbb
or
shr
in
ja
ja
sahf
push
popa
test
pushf
movs
out
loopne
xchg
fstp
jns
test
es
xchg
cmp
fcmovnbe
addr16
std
jno
sahf
loop
enter
js
in
pop
iret
xlat
pop
jg
mov
lea
mov
ins
imul
ret
sbb
inc
add
cwde
icebp
std
into
mov
add
cmps
pop
scas
pop
xor
mov
lds
mov
mov
mov
aas
arpl
dec
cwde
test
fld
movs
ds
shr
movups
jo
mov
arpl
ja
jle
push
loopne
jecxz
loope
repz
sti
(bad)
mov
popa
pop
xor
push
jae
add
inc
pop
ss
add
mov
add
aam
push
pushf
lds
jmp
loope
xor
pop
xchg
push
push
add
ror
cmp
xor
cwde
pop
xor
fwait
test
adc
mov
adc
xchg
push
xor
sbb
enter
sub
xor
jecxz
jecxz
js
arpl
xor
xlat
push
es
xor
sti
dec
sbb
push
push
ds
pop
(bad)
inc
inc
adc
idiv
and
adc
pop
sbb
mov
push
das
std
adc
pop
ror
pop
fs
outs
xor
ret
cmp
adc
aas
xchg
and
shr
or
into
and
xchg
xor
loop
mov
outs
shr
xchg
mov
neg
cmp
jp
(bad)
(bad)
sbb
out
mov
in
push
push
and
and
nop
test
mov
pop
jno
clc
les
cmps
pop
mov
lahf
inc
inc
ret
mov
dec
and
aas
int
xchg
mov
jno
pushf
inc
inc
test
mov
sub
fisub
push
mov
add
sub
xor
clc
loopne
ds
jecxz
aaa
lock
add
add
movs
scas
add
add
adc
in
in
jp
sub
inc
pop
mov
in
fadd
ins
sbb
xor
cmc
repnz
mov
or
ins
inc
adc
mov
jge
inc
out
jb
jnp
rol
xchg
push
aas
jmp
shl
popf
xchg
sub
push
jp
and
pop
sub
fild
psraw
ror
mov
ins
in
dec
dec
push
out
test
into
movs
jbe
push
sub
sbb
sub
ds
push
fidivr
int
xchg
arpl
ficomp
test
cwde
cmp
das
sbb
test
in
sbb
inc
cs
inc
push
sqrtps
xlat
mov
mov
mov
and
sub
fisttp
jmp
and
cs
pop
inc
imul
push
clc
(bad)
jne
ins
mov
fimul
cmp
ja
rcr
shr
outs
xor
xchg
jne
int
inc
xor
jg
push
add
iret
mov
xchg
loopne
pop
mov
pop
popa
adc
push
repz
pusha
and
rcl
gs
ins
sbb
xchg
lds
lea
push
push
cmps
pusha
add
mov
es
pop
cmp
out
add
mov
call
ss
ss
push
or
std
call
das
xor
pushf
in
aas
mov
mov
scas
adc
addr16
pop
aas
inc
ror
jge
adc
loope
ret
loopne
jg
inc
lods
push
and
or
push
push
mov
cmp
add
mov
dec
inc
shr
rcr
dec
stos
adc
pop
cmp
inc
aad
ja
push
lods
mov
arpl
xchg
pop
xchg
mov
xchg
daa
test
stos
cmp
mov
or
sub
lea
jno
mov
ret
lds
adc
inc
jnp
je
cli
xor
into
xor
xchg
ins
push
cmp
out
lods
daa
pusha
cmps
fistp
(bad)
loope
mov
retf
out
cmp
xor
movs
ins
pop
jne
and
mov
lods
shl
or
es
(bad)
in
dec
outs
pop
lods
jmp
add
arpl
jmp
fwait
mov
neg
mov
sbb
adc
mov
in
pop
outs
mov
jne
jo
aas
and
push
retf
mov
in
push
sub
cmp
sub
push
in
js
inc
lahf
cdq
ins
sti
jl
in
in
cmp
js
jmp
jg
loope
or
int3
stos
cmp
dec
or
jl
ucomiss
jecxz
xchg
call
push
push
ss
mov
(bad)
and
jo
out
aas
xor
xor
jmp
cmps
and
mov
add
mov
in
mov
pop
and
ss
adc
xor
sbb
inc
clc
call
inc
outs
and
pushf
mov
add
daa
shl
(bad)
lock
fwait
mov
loope
push
scas
dec
mov
jecxz
test
jle
xor
pop
add
aas
or
xchg
retf
push
mov
mov
mov
sbb
pop
cmps
data16
xor
(bad)
(bad)
je
ret
pop
es
xchg
cmps
add
xchg
arpl
rol
sub
sbb
dec
imul
fadd
dec
stos
jo
add
loopne
mov
pusha
ins
xor
or
xor
mov
cmp
add
pushf
jge
xchg
xchg
xor
pusha
mov
ret
dec
daa
stos
pop
out
movs
pop
or
or
or
cmp
popf
mov
mov
and
ret
ror
xchg
push
ror
or
add
mov
pop
fild
or
xor
lahf
cld
mov
add
ja
mov
jbe
pusha
ds
outs
fmulp
sbb
hlt
or
movs
xor
es
push
das
shl
leave
push
fcmovnu
jge
mov
xlat
int
xor
xchg
pop
imul
xlat
cs
out
sti
jp
sbb
mov
push
push
push
push
sub
dec
cmc
int
jmp
mov
int
mov
repnz
iret
test
sti
mov
mov
sbb
pop
inc
push
mov
sbb
xor
cdq
je
fadd
jbe
push
popa
mov
mov
or
xchg
sbb
sbb
es
inc
js
jecxz
aaa
mov
mov
cwde
adc
test
ins
out
xor
lods
data16
pushf
xchg
xchg
cwde
or
not
sbb
cmc
add
and
jno
scas
cmp
call
aaa
xor
mov
in
jb
outs
sti
ret
mov
adc
mov
popf
and
popf
hlt
jo
xchg
jle
fadd
jl
ds
dec
mov
push
cmc
sbb
addr16
stc
push
aas
sub
imul
jp
pop
xor
neg
pop
ins
lods
xor
pop
mov
into
and
es
fiadd
add
test
inc
movs
(bad)
xlat
sti
sub
or
push
jo
add
ficom
add
mov
fimul
sub
pushf
mov
or
mov
cmp
cwde
sbb
clc
fnstsw
mov
lock
icebp
int3
fld
fwait
push
ficom
retf
sbb
jbe
pop
jg
mov
jmp
cmp
add
mov
inc
xor
test
or
popa
addr16
mov
aad
add
pop
mov
rcr
fiadd
fwait
pop
lahf
or
mov
into
fs
inc
sub
fnstenv
fadd
enter
cmps
sub
setge
lea
jae
lods
aad
inc
mov
scas
or
sub
stos
loopne
mov
jns
sub
iret
and
call
loop
aad
xchg
mov
(bad)
mov
mov
jne
adc
jae
mov
stc
sub
fild
push
sub
lods
out
scas
push
adc
mov
dec
dec
xchg
and
add
xor
jb
cli
push
adc
pop
add
icebp
lahf
mov
sub
cmp
ins
mov
test
xor
pop
xchg
xor
mov
mov
out
ret
rol
mov
aad
and
jno
pusha
ins
fiadd
adc
and
das
adc
pop
mov
mov
inc
(bad)
sbb
in
shl
and
add
cli
nop
(bad)
add
rcr
pop
cmp
fstp
sbb
and
adc
push
movs
ja
jns
sbb
cmc
sub
hlt
cmp
mov
add
add
daa
movs
scas
or
loopne
sub
out
push
sbb
shl
lds
jno
repz
fistp
int
pop
rcl
retf
jle
add
or
cmp
mov
xchg
ret
stc
sub
sbb
aas
cmp
add
mov
fistp
push
or
stos
or
adc
cmp
(bad)
lahf
xor
cwde
sbb
mov
cmps
cmp
out
jbe
or
and
mov
pop
shl
push
jl
jo
jl
mov
xchg
pop
bound
daa
rcl
sub
adc
sub
(bad)
jmp
sub
imul
dec
xchg
jo
movs
aad
hlt
jl
sub
jp
cmp
sub
nop
movups
loope
outs
ficomp
aaa
(bad)
push
and
dec
(bad)
test
push
outs
push
mov
jae
dec
mov
add
push
add
pop
or
(bad)
aad
mov
int3
iret
xor
gs
sub
outs
test
dec
xchg
fwait
pop
movs
fild
dec
loopne
retf
or
(bad)
fstp
mov
sbb
mov
and
(bad)
mov
out
jge
nop
sahf
mov
loopne
int3
cwde
arpl
mov
jmp
ret
and
xor
inc
and
mov
je
ficom
(bad)
mov
sub
ds
jno
mov
fwait
inc
or
push
push
add
imul
(bad)
cdq
cmps
xor
mov
inc
scas
fidiv
mov
jo
push
lock
fs
(bad)
mov
jp
ficom
push
cmp
call
push
jle
mov
jge
xchg
(bad)
shl
mov
(bad)
(bad)
gs
xor
jno
std
mov
mov
mov
pop
jb
mov
sti
ds
dec
(bad)
lods
xchg
add
inc
and
or
stos
cmps
imul
xchg
mov
or
sti
xchg
mov
int
mov
fstp
ins
mov
(bad)
and
shl
jg
mov
push
leave
dec
int
jmp
push
rcr
adc
add
prefetch
cs
jmp
xchg
inc
sbb
add
(bad)
call
fwait
sbb
jle
sbb
push
sar
rcr
imul
ja
out
out
div
adc
icebp
loop
mov
sbb
and
daa
mov
mov
jb
mov
sub
repz
mov
sub
and
lods
push
ins
add
inc
ror
sub
adc
mov
jne
dec
dec
not
adc
and
cmp
fnstenv
jmp
imul
test
in
pop
lods
jno
cmp
std
sub
push
lahf
inc
mov
mov
inc
xlat
dec
hlt
or
(bad)
push
jp
loope
adc
mov
into
shl
dec
push
(bad)
lock
pop
sbb
mov
mov
lods
into
neg
cwde
dec
or
std
mov
retf
sbb
lock
scas
(bad)
outs
jmp
fwait
test
out
push
shl
xchg
fist
sub
loope
data16
sub
and
sbb
shl
popa
sbb
movs
in
push
xchg
jo
mov
in
push
and
pop
ins
add
pop
cmc
rcr
es
retf
repz
inc
rcr
cmc
fadd
sub
inc
cmp
mov
and
das
loop
outs
cmp
not
or
mov
inc
sub
(bad)
jecxz
inc
clc
ins
cmp
inc
xor
enter
add
call
fistp
xchg
scas
popa
pop
add
and
lods
test
inc
dec
ja
and
and
ds
aad
push
rcl
idiv
push
or
iret
je
xchg
test
test
cmp
dec
xchg
sti
adc
adc
jbe
stc
sub
cwde
cwde
sub
pop
sbb
mov
retf
pusha
jp
mov
push
push
leave
adc
sbb
adc
xor
sub
scas
xchg
or
jbe
inc
jo
jmp
cwde
dec
sbb
lds
cmp
cmps
mov
clc
mov
fwait
add
sahf
movs
jno
addr16
jge
or
dec
daa
pop
sub
fiadd
cdq
ret
dec
loope
sub
fadd
fmul
cmp
test
or
(bad)
sbb
jg
addr16
in
jbe
test
push
jb
cmp
add
inc
jbe
test
lea
pop
fstp
inc
jno
cmp
ins
ret
nop
scas
cdq
push
pop
pop
int3
idiv
daa
dec
or
jg
call
push
push
inc
cmp
(bad)
out
cmps
scas
or
inc
mov
hlt
add
(bad)
xchg
shl
mov
xchg
int
outs
pop
in
aaa
out
dec
and
jg
sub
jmp
adc
sbb
xchg
xor
mov
push
test
js
test
test
pop
int3
test
inc
jp
jmp
enter
and
pop
dec
in
inc
cmp
scas
(bad)
inc
jecxz
add
xchg
daa
ret
jg
iret
mov
xor
cmps
fadd
mov
mov
and
adc
loopne
dec
lahf
(bad)
jae
in
and
adc
out
loope
(bad)
nop
cwde
inc
aam
jb
mov
jge
jbe
inc
scas
neg
adc
inc
shl
out
jmp
in
jbe
xchg
fwait
jne
cli
xchg
inc
cmp
cmp
ret
shr
adc
popa
test
ror
scas
ss
fld
inc
mov
push
inc
inc
les
adc
arpl
adc
xchg
mov
cmps
pop
and
loop
outs
movs
xchg
mov
push
and
aam
and
(bad)
lods
pop
(bad)
cs
fimul
imul
or
inc
xor
sub
aad
repz
jno
out
xor
push
cld
idiv
(bad)
icebp
out
fdecstp
(bad)
iret
mov
cmp
sbb
and
cmp
jns
neg
cmp
mov
cmp
jg
lods
popa
jbe
retf
nop
rep
mov
inc
daa
das
inc
xor
(bad)
repnz
into
xchg
gs
not
pushf
pop
icebp
cmp
mov
outs
mov
cwde
inc
sub
xor
in
cld
(bad)
cmps
sub
inc
fistp
lods
jno
stos
je
std
sar
mov
test
inc
sar
nop
repnz
fwait
xchg
in
dec
lock
push
popa
outs
or
push
sub
imul
in
lock
fs
inc
dec
inc
or
xor
inc
jle
test
pop
out
icebp
(bad)
(bad)
(bad)
xor
in
fld
enterw
cmps
out
or
push
das
xchg
cs
xor
fs
neg
mov
out
xor
loope
sar
or
fwait
test
cmovne
scas
or
adc
inc
call
ins
int3
aas
int3
pop
cmc
(bad)
stc
sahf
adc
add
lock
xor
sbb
(bad)
movs
xor
movs
fisttp
test
(bad)
call
pop
cmps
jmp
and
cld
mov
out
lock
mov
lds
lock
mov
mov
jg
scas
into
xchg
fsubr
sbb
add
sub
pop
push
mov
(bad)
jnp
popf
lds
xchg
in
fmul
xlat
je
or
adc
int3
dec
lods
mov
adc
js
jecxz
pop
xchg
sub
jns
mov
pushf
adc
stos
repz
sti
popf
shl
add
mov
jp
test
fsubr
jle
cmp
mov
inc
push
or
xchg
fstp
icebp
add
addr16
test
ror
push
jecxz
sub
fdivr
sbb
mov
adc
push
sbb
push
cmp
push
pop
in
dec
(bad)
hlt
push
mov
mov
dec
xchg
addr16
xor
pop
aad
jbe
in
in
lahf
mov
sti
and
das
xor
dec
inc
mov
mov
push
(bad)
out
and
jbe
sub
retf
xor
jns
xchg
pop
sub
and
mov
(bad)
jbe
ret
mov
cmp
jno
mov
or
and
pop
xchg
jl
or
loop
dec
add
ja
adc
adc
add
bound
or
mov
leave
sbb
popa
xor
push
jle
xor
push
pop
enter
mov
dec
mov
mov
xchg
sub
aaa
pop
mov
adc
fsubr
mov
js
or
sub
push
outs
fcomp
jmp
mov
sub
imul
xor
inc
fldcw
pushf
mov
push
push
aas
out
mov
in
dec
jp
dec
adc
les
and
scas
in
mov
push
test
xchg
stos
xor
push
cmps
push
imul
jmp
cmps
and
sub
cmp
and
xchg
fnstcw
int
aad
sbb
cmc
xchg
xor
ss
rol
ror
imul
cs
out
sbb
enter
add
lods
bound
rol
or
jbe
adc
pop
add
mov
popa
icebp
(bad)
inc
sub
mov
jmp
mov
xchg
xchg
push
add
cmp
sub
mov
arpl
repz
ins
mov
cdq
pop
ret
pop
adc
repnz
imul
sub
nop
xchg
clc
mov
adc
repnz
xchg
aad
mov
clc
iret
and
jge
adc
dec
scas
jo
sbb
(bad)
jp
mov
js
lods
(bad)
fcmovu
imul
jo
sbb
iret
pop
mov
inc
fadd
push
sub
cmp
lods
jmp
test
mov
pop
inc
outs
jbe
cmp
sub
mov
inc
imul
mov
push
js
js
or
popf
adc
pushf
fwait
(bad)
jmp
mov
dec
cmp
std
(bad)
sahf
push
ins
setl
(bad)
inc
push
pop
loope
or
mov
cmc
stos
lds
cmp
pop
xchg
cmp
fld
mov
out
add
jo
outs
(bad)
nop
xor
xor
inc
ret
int
retf
retf
dec
add
mov
ins
(bad)
sub
cmp
jae
test
arpl
lods
es
rcl
popa
movs
xchg
push
sub
retf
add
ret
cmp
icebp
test
leave
add
xchg
(bad)
test
pusha
cmp
dec
pop
fisttp
mov
mov
idiv
idiv
push
inc
jne
test
pop
sti
out
arpl
popf
loope
mov
ins
(bad)
adc
mov
ins
mov
dec
xchg
jne
(bad)
push
dec
xchg
adc
outs
bound
cmps
out
fwait
add
in
mov
fsubr
push
stos
sar
test
push
push
lahf
mov
jae
push
std
push
push
push
(bad)
bound
sub
pop
iret
sub
xor
fistp
shl
cmps
leave
lods
cs
movs
pop
stos
hlt
sbb
xor
iret
inc
int3
ins
mov
out
push
fld
fstp
sub
arpl
push
cmp
nop
push
arpl
pushf
(bad)
ds
daa
xchg
loopne
(bad)
or
adc
cmps
and
movs
inc
adc
retfw
add
loop
icebp
not
bound
xlat
pop
pop
arpl
jno
lock
add
cmps
jmp
out
rcl
jmp
xor
(bad)
sti
mov
neg
clc
xchg
into
in
rol
mov
fwait
jns
addr16
xchg
lods
and
push
call
cmp
fdivrp
jl
and
or
mov
in
xchg
and
sbb
inc
in
jecxz
dec
test
and
mov
div
std
jb
cmps
pop
(bad)
jle
rcr
adc
mov
cwde
int
ret
mov
sub
call
lds
movs
push
sub
ficom
pushf
xor
faddp
test
aas
out
sbb
xor
movs
sti
shl
adc
jl
(bad)
ficomp
push
popa
daa
nop
cwde
imul
adc
xchg
rcr
cld
xor
outs
fsub
(bad)
jmp
ins
sbb
sbb
or
nop
loopne
xor
cmp
out
into
push
or
mov
jp
mul
addr16
sar
ret
pop
cdq
mov
or
ret
add
mov
and
stos
xchg
fimul
sbb
cs
sbb
pop
aam
push
sub
xchg
rol
in
mov
fs
ja
cmp
arpl
ins
xor
repz
jb
cdq
js
lods
push
jo
push
lods
xchg
mov
sbb
mov
ss
inc
aam
mov
scas
sti
ss
out
sahf
les
pop
xchg
push
test
into
inc
lock
jbe
jne
ds
sbb
repnz
push
fistp
push
aad
js
lods
sti
pusha
mov
lea
mov
xchg
js
ds
and
push
aas
jb
mov
add
push
dec
mov
mov
test
in
shr
and
(bad)
stos
data16
mov
out
pop
rcr
ss
loope
mov
dec
push
cmps
xchg
ja
lods
inc
dec
mov
cmp
(bad)
xchg
xor
push
ss
ins
adc
jb
push
push
dec
aam
dec
mov
iret
cmp
cwde
mov
pop
(bad)
mov
call
fcmovu
test
lock
jg
push
or
push
fmul
mov
add
cmp
adc
hlt
ja
mov
lahf
das
xor
jne
lea
cmp
jo
inc
adc
pusha
test
mov
into
das
pop
rol
cmps
cmp
push
jns
ror
out
adc
jg
mov
or
or
jl
dec
and
lea
aad
mov
out
ins
jmp
sti
xchg
(bad)
into
inc
jnp
sub
ds
sahf
je
das
outs
fisttp
fldenv
sub
or
sub
jbe
mov
pop
fs
ror
cmp
lock
sbb
dec
jb
xchg
xor
(bad)
cmps
lock
xchg
mov
adc
es
mov
and
ja
data16
retf
dec
(bad)
mov
in
sahf
sub
jmp
mov
mov
jo
stc
xor
shr
jbe
and
xchg
push
or
sub
bound
test
jo
sahf
neg
cmps
repz
push
push
out
ret
push
out
cmp
push
vpmulhw
xchg
adc
mov
inc
ret
int3
mov
sbb
ret
frstor
push
in
jae
mov
mov
mov
jns
rol
loopne
mov
sub
(bad)
mov
xchg
out
dec
(bad)
xchg
mov
xor
movs
movlps
loope
mov
nop
std
out
cli
push
adc
les
push
fidiv
cmc
call
jmp
pop
dec
and
or
xchg
ja
xchg
jb
and
mov
out
cmp
sub
cld
dec
inc
in
fld
mov
icebp
jge
ss
add
xor
adc
xchg
rol
(bad)
retf
push
aad
sbb
inc
pusha
add
mov
fdivp
cmp
cmp
or
(bad)
dec
sbb
pushf
mov
dec
fnsave
dec
and
and
or
(bad)
fnstenv
push
aam
inc
push
push
into
xchg
push
test
movs
aam
jle
dec
mov
in
test
stos
jne
mov
add
ror
xlat
mov
dec
jns
mov
arpl
sti
mov
lock
push
or
and
mov
lea
adc
adc
cli
mov
push
fisttp
dec
mov
adc
jo
cld
push
gs
popa
jecxz
sti
cmp
ins
scas
adc
xchg
mov
xchg
inc
mov
in
lods
fadd
push
xchg
jmp
and
inc
cmps
inc
adc
shl
cwde
jno
loope
fidiv
mov
sbb
fidivr
push
or
pop
sar
push
adc
(bad)
(bad)
scas
push
pop
loop
jbe
inc
cmp
test
test
mov
xchg
scas
mov
pop
inc
sub
ret
loope
ror
out
movs
dec
inc
xor
sub
(bad)
inc
jae
xchg
ss
mov
ja
aam
ins
out
pop
push
mov
jmp
loope
jnp
adc
std
cmp
aas
retf
pop
mov
lea
and
mov
ins
outs
pop
mov
jns
push
lods
inc
push
fwait
adc
das
rep
(bad)
test
sub
sahf
mov
call
stc
adc
inc
hlt
or
stos
ret
lock
sub
cld
addr16
aad
sub
mov
jl
dec
call
std
clc
loope
arpl
pop
add
bound
out
lahf
or
push
and
out
rcr
mov
jne
test
inc
lahf
dec
repz
mov
(bad)
cmp
test
jbe
mov
and
dec
jb
sub
aaa
ja
retf
adc
add
cmp
pop
cdq
cmps
pop
adc
push
sub
jl
fcomp
sar
out
jno
cmp
cmp
jb
push
sub
test
pop
mov
out
cmp
mov
(bad)
cmp
int
mov
dec
mov
cmp
sub
mov
fld
xchg
repz
adc
int3
fstp
inc
std
outs
call
enter
mov
adc
test
scas
mov
or
out
in
in
jmp
or
pop
xchg
loope
jmp
jge
push
hlt
xchg
movs
dec
xchg
lock
xlat
or
das
add
(bad)
jmp
dec
fs
dec
aas
lahf
(bad)
cmp
fstp
packssdw
jmp
adc
cmps
or
mov
fdivr
in
in
pusha
mov
add
dec
or
jno
enter
(bad)
cmp
or
xchg
fstp
push
repnz
add
pop
pushf
pop
imul
jo
adc
adc
pop
pop
and
push
(bad)
dec
lods
mov
mov
pop
cmp
push
rcl
outs
dec
inc
jno
aaa
shr
xchg
dec
inc
stos
mul
enter
cmp
inc
push
ret
inc
sbb
cld
xchg
jmp
xor
pop
jg
add
mov
test
dec
inc
sbb
or
cli
or
xchg
push
pop
mov
gs
pop
call
or
loopne
adc
iret
and
jmp
stos
sub
and
inc
fild
push
mov
cwde
xchg
outs
int3
inc
(bad)
jbe
push
jecxz
aas
outs
sub
arpl
push
add
mov
fsubr
leave
adc
push
xchg
retf
push
and
xchg
and
mov
test
cld
inc
and
dec
and
fwait
std
out
xchg
mov
jle
push
push
inc
sub
cli
push
int
retf
ja
cmc
sbb
rol
lock
aaa
(bad)
push
(bad)
aam
icebp
dec
jl
lds
clc
add
adc
inc
jmp
mov
mov
mov
movs
mov
jp
fcom
std
sbb
and
jge
je
aam
pop
retf
lahf
mov
mov
aad
xchg
mov
cmp
les
cwde
leave
stc
ja
sahf
das
(bad)
xchg
pop
(bad)
cli
cmps
mov
mov
dec
(bad)
out
push
cmp
mov
jecxz
in
leave
sar
or
mov
mov
daa
mov
add
inc
push
jl
outs
push
xor
pop
scas
sub
cld
popf
pusha
mov
sub
test
cmp
or
loopne
dec
mov
shr
mov
cmp
cwde
out
pop
sahf
imul
mov
sbb
push
dec
inc
sbb
pop
mov
mov
push
or
fdivr
(bad)
scas
ret
ret
xchg
pop
mov
sub
sbb
sbb
pop
addr16
fnstenv
push
fnstenv
ins
rcl
add
dec
jb
scas
dec
sbb
stos
push
stos
scas
add
xchg
ins
and
adc
lods
sti
or
sbb
or
call
dec
jmp
dec
ja
lods
das
xor
(bad)
inc
test
cld
or
data16
sub
inc
pop
iret
in
(bad)
dec
int3
cmovg
xchg
lock
xor
stos
test
mov
mov
mov
dec
sahf
dec
cmp
xor
push
or
inc
or
sub
dec
addr16
pop
bound
mov
inc
add
pop
adc
adc
push
cdq
jb
push
ss
mov
(bad)
cwde
xchg
mov
push
xor
dec
inc
xlat
(bad)
or
ret
fstp
mov
clc
mov
std
int3
jae
ins
add
and
ds
and
ins
js
add
movs
pop
into
add
sbb
add
add
std
aad
mov
leave
pop
sahf
popf
fst
mov
je
or
nop
jl
xor
sbb
ss
in
sbb
sbb
and
and
jecxz
push
shr
xchg
addr16
add
outs
cmp
inc
dec
shl
in
xchg
mov
test
mov
xlat
push
into
es
inc
call
sub
(bad)
dec
mov
dec
les
dec
js
mov
ret
adc
test
cmc
fs
inc
aaa
pop
inc
enter
arpl
add
das
std
int3
mov
pop
sbb
and
sub
sbb
int3
(bad)
out
jb
movs
and
nop
mov
xor
and
imul
or
mov
pop
sbb
movs
fs
add
sbb
mov
fdiv
repz
and
(bad)
movs
scas
mov
push
mov
mov
stc
mov
call
mov
inc
pop
les
retf
push
or
mov
jmp
movs
add
addr16
jne
les
arpl
leave
jns
ret
and
adc
sub
jp
inc
mov
lods
jns
nop
aaa
cs
mov
cs
jecxz
push
xlat
add
push
sti
mov
pop
jle
(bad)
sbb
dec
adc
mul
sbb
(bad)
fisub
repnz
or
not
out
ins
stos
jne
in
pop
mov
imul
cdq
pop
fwait
bound
cmp
repnz
cli
int3
pop
push
add
mov
inc
ror
sub
add
lods
cs
call
inc
push
xchg
out
adc
loope
jp
xlat
sub
mov
loope
cmovs
jl
mov
cmp
mov
push
repnz
jp
popf
xchg
add
dec
imul
adc
adc
in
shr
sbb
xchg
inc
ret
daa
out
inc
push
clc
mov
popa
mov
push
data16
fcmovu
pushf
ins
pop
rol
es
in
das
cmps
adc
sub
add
rcr
add
test
mov
inc
pop
sbb
add
stos
adc
cmp
rcl
lock
push
mov
jae
lods
mov
sub
mov
adc
mov
jns
or
pop
and
push
adc
dec
sti
lock
pop
inc
mov
cmp
mov
sbb
push
popf
in
(bad)
ins
call
inc
retf
jns
outs
cmp
jo
jmp
cmps
mov
push
sbb
push
add
cmps
ins
daa
test
das
adc
ss
leave
mov
jnp
std
sbb
adc
pop
pop
jbe
movs
call
scas
xchg
inc
sbb
xchg
jo
aad
or
xor
jp
adc
sbb
add
and
cwde
dec
or
adc
inc
gs
test
push
sbb
fld
repnz
sahf
fbld
test
adc
ret
cli
and
inc
dec
push
inc
push
shr
and
jbe
loop
out
cdq
sub
sub
fcom
movs
daa
xchg
sahf
repnz
call
xchg
test
pop
stos
mov
jge
jno
cmps
inc
fcom
std
or
jne
mov
push
jg
add
xor
or
stos
cmps
jmp
mov
fld
cmp
pop
outs
js
loop
dec
and
inc
adc
imul
push
stos
mov
push
mov
pusha
bnd
into
test
arpl
pushf
icebp
pushf
hlt
int3
cvtdq2ps
and
popa
inc
and
sahf
out
mov
and
movs
jae
ret
mov
mov
jbe
mov
fwait
mov
cmp
jl
jo
jo
ja
sbb
loop
(bad)
int
inc
cmp
pusha
adc
mov
jecxz
inc
xchg
shl
push
sub
leave
mov
mov
inc
mov
adc
hlt
jmp
adc
inc
mov
or
sbb
repz
jl
mov
mov
retf
idiv
cmps
mov
mov
imul
fcmovnb
push
imul
repz
jp
or
imul
pop
cli
neg
push
inc
cmp
out
div
push
pop
sar
lods
into
movs
xor
mov
and
jns
dec
loopne
(bad)
aad
sub
cmp
(bad)
jnp
aas
cmps
xchg
js
adc
(bad)
push
adc
cmps
icebp
xchg
push
sbb
aam
daa
mov
pop
xor
pop
xor
cmp
lods
xor
sub
shl
pop
jmp
test
sub
inc
mov
fwait
sbb
imul
and
mov
sub
adc
jecxz
nop
sbb
aad
inc
in
stc
loopne
add
daa
icebp
test
call
mov
sar
add
pushf
out
push
les
jne
lahf
and
icebp
aas
enter
mov
addr16
jp
mov
dec
mov
outs
aas
add
out
push
pop
jbe
mov
sbb
aad
dec
pop
pop
ret
fmul
cmp
aam
pushf
mov
pop
(bad)
rcl
cs
rcr
inc
aam
fist
mov
push
shl
retf
and
inc
add
sub
add
out
ret
mov
int
iret
cmp
xchg
retf
sub
adc
xor
fild
pushf
pop
aaa
and
mov
shl
lea
jecxz
into
(bad)
shl
arpl
and
lahf
xchg
ss
adc
cdq
ja
in
xor
mov
fmul
fbld
cmc
dec
imul
lods
sbb
mov
xchg
jg
mov
mov
mov
fwait
test
or
mov
out
test
mov
fwait
mov
adc
retf
out
xor
in
pushf
lock
cld
sbb
push
std
pop
cli
fwait
and
fmul
xchg
ror
xor
push
hlt
sbb
test
idiv
call
mov
mov
xor
pop
or
jp
inc
jb
leave
push
sub
jecxz
jecxz
ins
xchg
mov
(bad)
sub
jmp
cmp
dec
repz
hlt
fist
push
adc
pop
pop
stos
pop
xchg
and
in
push
adc
dec
sub
fnstenv
cli
aaa
fdiv
xchg
jb
sar
dec
adc
xchg
push
cmc
scas
or
frstor
ins
xchg
jbe
push
mov
pop
cmp
mov
dec
fwait
jle
out
ins
mov
mov
gs
lock
test
sbb
div
xchg
cmp
inc
ret
jns
int
cmc
inc
xor
xchg
sub
out
les
dec
(bad)
cmp
imul
xor
lea
outs
pop
dec
call
fcmove
bound
mov
cmp
ror
test
adc
enter
test
popa
xor
mov
stos
ja
das
mov
pusha
xor
repz
push
xchg
imul
out
ja
mov
pop
dec
mov
cmp
ins
icebp
sbb
ja
das
outs
int3
xchg
inc
add
addr16
sbb
out
dec
cli
mov
fnsave
inc
fwait
out
aaa
int
mov
sar
xchg
ficom
jl
jmp
pop
sti
call
loopne
in
and
cmp
or
sbb
pop
push
js
dec
sub
call
(bad)
pop
(bad)
mov
jns
popa
xor
pusha
in
es
cwde
push
xchg
enter
pop
jo
jmp
mov
lods
xor
cmps
push
inc
pop
daa
ret
sbb
pop
test
push
in
push
xchg
inc
sbb
and
add
xchg
and
lds
cmp
sub
inc
jmp
aas
xchg
sbb
and
push
jbe
ror
pop
test
sbb
ficomp
mov
sbb
sbb
sbb
fwait
xchg
pop
movs
js
push
mov
out
mov
push
shl
pop
sbb
mov
daa
lock
aad
jecxz
cmp
les
vandnpd
rcr
ja
and
sbb
fimul
jle
retf
jle
jmp
push
mov
jecxz
fidivr
inc
ret
not
aas
sbb
adc
arpl
cmps
jmp
ret
icebp
adc
push
daa
xchg
sub
les
loope
repz
xor
mov
fbstp
in
aam
call
sub
jnp
gs
leave
cmp
sbb
jmp
pop
pop
pop
push
cli
retf
inc
int
jno
mov
mov
push
leave
(bad)
addr16
rol
cmp
mov
xchg
les
ins
xor
rcl
jno
cli
in
and
enter
out
push
xor
sar
jmp
mov
enter
lds
test
call
mov
mov
push
jb
(bad)
aaa
jl
les
aaa
daa
pusha
or
push
dec
jo
jnp
and
out
nop
enter
inc
out
call
xchg
mov
cld
stos
mov
movs
mov
jecxz
xor
adc
add
fbstp
ins
dec
mov
cwde
xor
les
mov
mov
ret
repz
sbb
(bad)
pop
cmps
dec
int3
js
aad
jmp
dec
outs
xor
in
inc
inc
in
or
lds
cmp
push
imul
loope
and
mov
mov
dec
enter
mov
stos
pop
pop
stos
fist
push
inc
aas
sbb
popf
not
mov
inc
xor
test
adc
dec
adc
pop
sub
push
lahf
ds
jle
call
fs
add
inc
ja
sar
fidivr
cs
xor
int3
jb
xchg
test
pop
xchg
mov
cmp
dec
pop
add
daa
and
add
out
dec
or
mov
jge
sub
mov
inc
in
and
push
ror
adc
adc
loopne
inc
fcmovnb
loope
inc
inc
fsub
mov
inc
iret
jg
jae
cli
cmp
jae
push
xchg
mov
fnstenv
push
test
cli
push
xchg
push
inc
mov
xor
dec
jmp
pop
sub
push
sbb
inc
aad
and
dec
fcomp
das
sbb
and
fiadd
and
sbb
and
out
sbb
xor
or
movs
(bad)
leave
sub
ret
pop
xchg
and
das
ror
repz
inc
sbb
adc
call
dec
push
stc
movs
dec
mov
add
xor
(bad)
and
xor
enter
pop
cmp
call
lods
xor
sbb
mov
not
pushf
jbe
fsub
outs
inc
ss
pop
mov
out
sahf
pop
pop
adc
and
mov
fsubp
or
push
pop
int3
push
clc
arpl
xor
mov
sbb
or
stos
jl
pushf
add
ret
(bad)
or
adc
pop
mov
mov
xor
clc
xchg
ds
in
rcl
arpl
imul
imul
xor
xchg
mov
lahf
fisttp
xor
(bad)
mov
sbb
or
inc
jns
push
adc
(bad)
cli
cwde
and
out
fisttp
dec
mul
in
mov
pusha
inc
test
popa
icebp
xor
retf
lods
scas
mov
das
in
jo
push
leave
aaa
jae
dec
lock
nop
out
adc
fsubr
inc
or
imul
jns
test
(bad)
out
lea
mov
cmc
ror
cmp
jnp
mov
dec
cmp
ror
imul
add
pusha
scas
aad
ins
inc
jg
in
test
inc
leave
adc
dec
xchg
arpl
icebp
stos
jae
enter
sub
mov
pop
cmp
popf
adc
push
mov
es
jl
cmps
push
mov
and
scas
xor
scas
inc
inc
pop
push
sub
ja
pop
push
repz
xchg
sar
xchg
fcmovnb
sub
and
pop
xor
push
mov
sub
jp
sbb
shl
call
call
adc
lea
out
shr
xor
xchg
dec
in
and
les
and
outs
pop
or
pushf
xchg
iret
(bad)
xchg
cmp
repnz
cmps
xchg
mov
inc
or
in
jne
mov
mov
mov
call
push
es
scas
cld
in
gs
retf
push
out
test
(bad)
das
outs
sbb
adc
xchg
mov
jbe
sar
lods
gs
aam
int3
call
stc
mov
aaa
dec
jle
xor
ficomp
outs
xchg
mov
add
pop
cmps
repnz
or
sub
outs
loopne
pop
adc
mov
inc
lahf
push
ret
pop
out
ins
outs
in
aad
mov
mov
lock
(bad)
add
dec
iret
ror
mov
test
and
sbb
jmp
adc
pop
mov
xchg
outs
push
mov
push
or
push
and
xchg
outs
int
lahf
mov
ds
hlt
push
shl
xlat
je
mov
mov
jb
or
mov
jecxz
xchg
mov
int
adc
and
pop
inc
mov
jnp
hlt
jle
pop
int3
out
loop
push
neg
mov
cmp
addr16
inc
movs
outs
or
push
mov
push
pop
xor
xchg
xchg
cmp
dec
jmp
add
ja
inc
push
(bad)
dec
cmp
fsub
ins
xchg
sub
repnz
std
shl
out
dec
pushf
xchg
sti
test
mov
pop
popf
push
inc
and
into
mov
mov
iret
sub
movs
stos
mov
ret
pop
sbb
add
retf
daa
sahf
mov
dec
das
gs
loopne
xor
push
retf
lods
les
repnz
and
lock
and
add
cs
xor
fld
arpl
imul
(bad)
sbb
into
jo
cwde
mov
push
adc
ins
add
pop
movs
outs
scas
jle
imul
mov
mov
dec
mov
cli
adc
push
call
stos
dec
mov
jmp
shl
in
ins
or
ret
pop
test
adc
addr16
cmp
bound
icebp
jne
push
paddsb
sti
or
int
movs
xchg
cld
dec
sbb
and
xchg
jg
cmps
std
lds
je
cld
fmul
stos
sub
lock
sar
sub
push
jae
cdq
mov
adc
cmp
cmp
dec
sbb
ins
jns
cmc
inc
cdq
dec
stos
push
dec
enter
xlat
push
imul
sub
adc
(bad)
out
(bad)
jecxz
stos
add
fwait
inc
out
sbb
stc
push
jmp
inc
test
mov
adc
aam
ja
movs
inc
dec
iret
xchg
ret
or
jecxz
xchg
and
or
add
inc
sub
mov
push
push
or
inc
das
retf
sub
xchg
add
fisttp
data16
jne
push
test
fmulp
push
inc
mov
retf
push
xchg
mov
cmp
mov
dec
or
arpl
lods
cmp
(bad)
cld
pop
test
or
cmps
cli
mov
aam
punpckldq
push
fisttp
je
ret
(bad)
scas
loop
mov
push
xchg
dec
in
ds
popf
ret
adc
enter
or
jecxz
scas
xor
add
gs
cmp
xchg
pusha
push
call
call
or
(bad)
test
mov
ret
inc
shl
and
mov
(bad)
xchg
mov
shl
mov
mov
movs
mov
fistp
jl
adc
loop
jmp
xor
xor
sbb
dec
in
mov
fucomp
pop
xchg
cwde
out
xchg
(bad)
cmp
test
push
into
outs
xchg
into
push
push
fnsave
sbb
cmp
fwait
and
pop
jb
push
add
dec
pop
out
and
sub
movs
mov
ret
inc
movs
popa
addr16
jl
aas
je
or
fsubr
out
pop
lods
sub
xor
mov
out
test
in
dec
dec
ds
repz
push
sbb
sbb
(bad)
ja
inc
inc
dec
xchg
rcr
shl
pop
out
push
sbb
loop
mov
out
adc
scas
test
lods
imul
data16
sbb
int3
sub
imul
lds
jmp
jle
test
bound
xchg
pop
mov
sbb
out
mov
xlat
out
mov
xchg
xor
int3
xor
jecxz
and
sbb
or
mov
cli
mov
out
sub
outs
in
and
dec
or
pop
inc
ins
xchg
test
sbb
(bad)
or
cld
(bad)
or
cmp
test
nop
inc
fidiv
mov
loope
(bad)
cmp
adc
outs
mov
jmp
lds
aad
mov
retf
in
in
in
xlat
stc
stos
rcl
test
test
fiadd
push
mov
inc
test
fist
cmp
push
mov
push
(bad)
mov
aas
mov
sbb
adc
dec
ds
push
inc
(bad)
jne
lahf
cld
std
inc
mov
jo
gs
ret
cmp
retf
fucom
icebp
and
pop
loope
rcl
xor
addr16
out
or
pop
xchg
inc
sbb
add
push
fidiv
jo
(bad)
(bad)
rol
mov
rol
outs
std
jnp
int3
xor
jecxz
cmp
cwde
cmp
mov
icebp
mov
or
in
jmp
dec
(bad)
loope
daa
mov
int
aad
adc
imul
rcr
mov
or
stos
pop
mov
add
clc
dec
and
dec
lock
cwde
jbe
int
mov
dec
ins
sub
cwde
adc
mov
xor
(bad)
imul
mov
ror
dec
bound
xor
hlt
sub
cwde
fmul
adc
imul
mov
mov
mov
mov
mov
jg
cmp
ins
and
lock
lock
ins
addr16
icebp
sub
es
les
sub
repnz
sbb
add
xchg
clc
pusha
sub
jge
jecxz
repz
mov
gs
push
cmc
and
mov
in
lods
call
push
scas
in
push
push
stc
or
push
xor
adc
mov
in
or
ficom
pusha
int3
mov
frstor
out
dec
jae
outs
pop
push
enter
dec
test
pop
dec
cmp
out
push
cmc
pop
mov
sub
outs
das
inc
(bad)
daa
stos
fstp
loop
es
pop
cmp
inc
mov
adc
cmc
inc
jle
in
jl
dec
xchg
aas
mov
sbb
cmc
sahf
mov
push
mov
test
rol
je
dec
cwde
fcom
idiv
movs
add
leave
pop
dec
fld
inc
mov
loopne
sbb
jnp
and
inc
(bad)
fs
inc
fwait
mov
xchg
inc
adc
imul
sbb
cmc
imul
aas
(bad)
not
xor
aad
xchg
(bad)
shr
mov
jmp
test
add
adc
into
bound
shr
push
and
cwde
ins
xlat
test
mov
dec
inc
sub
mov
(bad)
js
xchg
pop
mul
repz
test
les
retf
mov
push
push
pop
mov
test
dec
pusha
in
xor
xchg
loope
xor
and
ror
dec
out
mov
dec
push
addr16
shl
xor
stos
pop
mov
in
xchg
xchg
sahf
int3
push
xor
xor
je
or
sub
test
fwait
xor
sub
fcom
sar
retf
aaa
xchg
add
mov
cmc
push
fidiv
xlat
jge
js
fwait
pusha
xchg
pop
push
sub
test
jge
fisub
xor
shl
cmp
dec
jge
mov
in
loopne
pop
jle
std
cmp
xchg
xchg
push
mov
adc
inc
call
fld
inc
shr
stos
mov
or
clc
jae
jno
in
add
jb
into
test
mov
or
jb
or
xor
shl
xor
movs
inc
scas
and
cmp
inc
hlt
push
mov
xor
cmp
out
mov
cmp
pushf
jns
cmp
sbb
xor
dec
push
xor
or
mov
shl
inc
xor
jecxz
in
jge
mul
xchg
push
scas
mov
sub
ds
adc
xlat
iret
fistp
sub
sbb
or
jle
and
out
call
mov
mov
movs
fs
repnz
xor
jnp
stc
lahf
and
dec
scas
jmp
shl
cli
fsubr
add
pop
jp
lods
inc
xchg
jge
mov
xor
push
pop
dec
(bad)
mov
adc
mov
in
popf
push
fild
pop
sub
nop
jmp
in
daa
jno
cmp
dec
inc
outs
in
add
adc
lock
ja
jecxz
add
cmp
ss
mov
pop
js
sub
pop
jns
cmp
test
(bad)
call
clc
cs
not
or
leave
lods
xchg
sbb
mov
push
aaa
cmp
sbb
sbb
in
cdq
fstp
test
mov
mov
cmps
mov
xchg
jmp
daa
pusha
jmp
repz
popf
sub
mov
mov
dec
dec
sbb
push
add
mov
xor
adc
shl
xor
mov
mov
sub
ret
sub
xor
inc
in
(bad)
sub
mov
jp
mov
retf
sbb
xor
inc
push
mov
int
scas
push
jbe
aaa
dec
stos
sbb
or
mov
pop
push
mov
iret
stos
xchg
aas
and
ret
adc
shl
push
js
mov
jns
or
xor
loopne
popf
sar
mov
xor
aas
xchg
pop
(bad)
(bad)
pop
push
dec
aad
mov
mov
cs
mov
cmp
enter
inc
or
jns
sti
inc
enter
mov
pop
lds
popa
dec
shr
dec
into
fs
cmp
jae
mov
jecxz
dec
sbb
shl
adc
sbb
xchg
inc
arpl
pop
dec
mov
mul
or
mov
jle
sbb
cli
pop
fnstenv
add
push
sahf
aam
dec
int3
fmulp
in
cmp
pop
test
in
test
(bad)
xor
hlt
sbb
fisub
cmps
cmp
lahf
add
jmp
and
popa
fwait
test
mov
repnz
rcl
clc
push
sbb
mul
pop
cmps
adc
pushf
xchg
in
scas
es
mov
xor
test
sti
mov
or
cmps
dec
xor
inc
fisubr
hlt
jo
xchg
call
aaa
xchg
(bad)
stc
adc
push
ret
cmps
sti
cdq
push
xor
and
push
mov
mov
mov
xchg
int3
loope
(bad)
mov
outs
mov
icebp
fs
retf
lds
pop
stc
mov
push
ins
add
ds
data16
or
outs
fs
cmc
ds
xchg
loope
or
add
cmps
pop
loop
test
mov
lds
lahf
xor
adc
mov
sti
jns
push
out
mov
in
or
sub
lods
adc
jbe
shl
pop
dec
sub
mov
and
cld
sub
push
inc
loopne
dec
call
sub
or
and
xchg
sub
(bad)
retf
icebp
xchg
mov
push
retf
call
or
sub
mov
scas
std
pop
icebp
nop
fidivr
add
lea
pop
pop
iret
pop
imul
add
dec
or
jo
jnp
cli
sub
inc
xchg
mov
outs
jmp
daa
in
sub
xchg
sbb
outs
(bad)
mov
or
sar
or
cmp
ss
loope
mov
adc
aad
out
stos
xor
inc
cmp
out
stc
mov
cmp
call
fmul
sub
mov
rol
and
mov
cli
push
inc
fwait
adc
push
loop
jl
stos
lods
(bad)
mov
clc
add
adc
cmp
cmps
dec
mov
int
jl
je
and
mov
mov
sbb
pop
ss
(bad)
ficom
aad
or
sahf
fstp
pusha
movs
cmc
or
shr
es
push
xor
shl
push
xor
jle
retf
(bad)
or
stos
and
je
in
pop
or
hlt
movs
test
lds
lea
push
scas
cmc
aaa
repnz
inc
in
ror
js
sahf
xchg
jge
(bad)
out
in
and
sbb
and
cwde
mov
cmp
mov
nop
xchg
pop
ins
add
ret
cmps
add
pop
mov
inc
or
mov
ins
cmp
mov
push
imul
fstp
fidivr
fdiv
xchg
mov
inc
sbb
cmp
(bad)
sbb
stc
int
adc
ins
imul
ds
fidiv
mov
sub
inc
rcl
lock
cmps
aaa
sub
mov
int3
ror
jmp
dec
adc
fsubr
add
outs
and
movaps
mov
ror
mov
inc
sub
movs
jbe
sbb
das
fimul
inc
retf
mov
test
inc
xchg
shr
fucomp
push
mov
cdq
and
xor
inc
call
fmul
jmp
pop
mov
jle
mov
sub
add
leave
push
mov
js
scas
xor
push
cmp
and
dec
aad
cli
mov
rol
dec
outs
and
movs
mov
adc
fs
jbe
jl
sbb
div
mov
pop
mov
dec
adc
scas
jae
into
mov
adc
jmp
fdivrp
data16
push
pop
lea
cmp
sti
sahf
dec
add
mov
sbb
and
cmps
test
sbb
mov
out
and
jg
push
es
loopne
pop
repnz
popf
ss
push
cdq
retf
pop
cmp
popf
test
(bad)
aam
or
push
jbe
lahf
pop
and
movs
mov
dec
mov
jmp
cmp
pop
scas
test
cmp
push
adc
xor
lds
outs
ficom
pop
push
jge
sbb
mov
iret
imul
sbb
int
mov
jb
iret
and
sbb
mov
mov
pop
add
mov
rcl
or
pusha
add
and
xchg
mov
cli
nop
mov
sti
into
popf
and
inc
jmp
jecxz
loopne
sahf
xchg
xchg
inc
fist
js
retf
add
imul
xchg
push
adc
mov
inc
sub
ret
or
cmc
sar
push
xchg
mov
cmps
and
pusha
or
enter
call
popa
and
push
mov
sar
outs
mov
adc
jno
sub
shl
ret
cmps
sti
xor
ficom
fs
stos
dec
sets
(bad)
xchg
out
or
and
push
xlat
jmp
mov
ins
mov
mov
inc
popf
call
inc
dec
stos
adc
fwait
test
int
inc
mov
xchg
or
inc
lock
push
lea
popa
sbb
into
rol
push
repz
fdiv
adc
inc
sbb
xchg
dec
(bad)
ret
test
cli
outs
mov
pmaxub
xor
ret
cmp
cmp
test
adc
xchg
out
pop
sbb
les
mov
int3
xchg
sahf
cwde
ror
repz
test
or
ins
or
xchg
mov
repnz
pop
push
mov
daa
xchg
call
sbb
out
cwde
mov
pop
ins
addr16
mov
push
inc
aad
rcl
cmp
add
aas
pop
shr
mov
stc
mov
aaa
fwait
and
je
pop
lods
cli
lock
adc
out
nop
idiv
and
pop
mov
shr
adc
dec
cmps
mov
dec
fistp
ja
jle
fisubr
push
sbb
add
(bad)
js
ins
dec
stos
push
mov
pop
stc
inc
adc
retf
lahf
pop
out
ins
add
repnz
mov
inc
xchg
scas
ret
test
add
(bad)
into
sbb
mov
xchg
and
or
mov
outs
sbb
repnz
ret
add
dec
scas
lds
lock
push
ret
jnp
pop
pop
inc
test
pusha
push
out
movs
and
cmp
dec
sti
mov
mov
sub
jno
mov
daa
jle
jmp
mov
shr
xlat
imul
mov
xchg
lds
cmp
outs
clc
xchg
xchg
push
sub
cmc
jp
jl
mov
jmp
shl
dec
push
test
add
nop
jg
adc
push
sar
cmp
pop
push
mov
mov
sbb
xchg
or
fcmove
mov
push
push
push
jmp
sti
(bad)
sar
and
mov
cli
and
pop
mov
clc
inc
aas
repz
add
push
mov
test
inc
dec
dec
jmp
inc
mov
ja
cld
jo
sub
jae
mov
jno
movs
fistp
xor
gs
cs
cld
shl
lock
fucomi
xchg
pop
and
test
cmp
or
pop
lea
imul
pop
(bad)
in
add
aad
ds
mov
enter
cmp
dec
cwde
xchg
test
fld
mov
adc
gs
pop
call
mov
data16
push
and
in
add
fdiv
push
jmp
inc
push
jne
jg
push
out
stos
loope
add
into
push
pop
js
mov
push
xlat
pop
sub
jae
lods
inc
fidivr
jb
push
push
ret
xor
ret
test
stos
push
ins
test
movs
jnp
sar
sbb
loop
dec
lock
je
aad
into
(bad)
daa
mov
stos
stos
mov
imul
push
or
sbb
rol
push
test
dec
or
cdq
retf
push
pop
ret
xchg
cdq
lds
cmc
cmp
cmp
mov
mov
add
rcl
adc
(bad)
cld
jnp
mov
sbb
xlat
jl
ins
stos
sbb
mov
inc
add
adc
xchg
and
dec
push
fnstsw
or
jne
ins
mov
cld
or
mov
fisttp
mov
mov
lock
fistp
mov
rcl
ret
ret
xchg
lods
mov
inc
jb
mov
add
or
push
sti
dec
mov
call
(bad)
adc
adc
and
popf
aaa
cli
mov
fwait
cmc
mov
push
sbb
shl
push
pop
or
mov
pop
scas
ins
aaa
int
aas
sbb
add
push
push
jne
pop
xor
inc
inc
xchg
and
jae
and
retf
pop
and
xchg
inc
jge
aaa
je
pusha
aam
lods
retf
aas
jmp
test
dec
and
sub
push
sub
mov
cdq
jl
les
in
mov
xchg
in
aaa
and
and
and
ja
call
jmp
xor
and
aad
jecxz
mov
lock
fdiv
pop
(bad)
add
fild
sbb
dec
cmc
add
jge
js
cmp
adc
je
xchg
pop
or
dec
jmp
outs
mov
adc
inc
ins
mov
inc
and
mov
out
mov
(bad)
push
jno
out
out
call
xlat
mov
xchg
push
inc
repz
cmp
leave
mov
push
push
call
xchg
into
ins
pop
retf
imul
std
xlat
sahf
ds
xlat
gs
ja
das
push
movs
out
rcr
jge
sub
xchg
or
jl
xlat
dec
(bad)
repnz
jbe
pop
inc
ins
add
imul
pop
push
sti
xchg
std
aad
ins
test
call
(bad)
pop
sub
push
(bad)
sbb
jne
cli
jecxz
psubq
mov
fwait
and
fwait
xor
ins
or
fsubr
xchg
jb
cmps
sub
and
ss
xchg
jno
xchg
pop
cs
cdq
repnz
jg
test
add
das
cld
and
(bad)
xor
lods
fcmovu
(bad)
cmp
pop
pop
pop
push
inc
cmc
xlat
test
imul
jb
in
ss
ss
push
iret
or
cmp
enter
dec
in
sbb
adc
push
sahf
in
xchg
ins
test
sbb
dec
mov
inc
add
adc
jp
ret
retf
push
dec
arpl
xor
out
pop
and
daa
mov
jmp
pusha
lods
xchg
or
cmp
dec
sub
scas
adc
add
cmp
cdq
leave
scas
sbb
psubd
ss
pop
sub
fwait
mov
leave
dec
xor
sbb
push
(bad)
sbb
jg
test
xlat
stc
xor
jg
adc
jl
adc
fwait
pop
mov
xor
dec
mov
cmp
fwait
jmp
inc
icebp
and
inc
nop
mov
lahf
fwait
mov
int
dec
xlat
mov
hlt
fsubrp
fistp
aaa
or
jecxz
pop
sbb
add
mov
push
sub
sub
xor
repnz
mov
mov
add
mov
push
xor
in
jns
jno
hlt
adc
shl
mov
mov
or
ss
adc
xor
icebp
int
dec
call
and
js
lea
push
test
pop
fild
cmp
sub
and
ins
cld
out
add
lods
iret
or
dec
add
test
pop
(bad)
jae
xchg
mov
mov
xchg
xchg
mov
jmp
mov
or
xchg
jl
xor
outs
jae
retf
xor
jl
pop
int
div
xor
xlat
int
jg
leave
push
mov
jle
push
cdq
call
inc
push
ins
xor
inc
cmps
xor
jmp
rol
push
ins
jno
adc
and
pusha
leave
push
adc
push
inc
retf
in
jbe
inc
int3
xor
push
scas
rol
pop
pop
ret
sub
dec
or
pop
in
and
and
jg
pop
xchg
mov
sbb
aam
push
movs
and
fcomp
xor
adc
hlt
jb
mov
inc
cmp
dec
or
nop
ss
add
es
jne
arpl
leave
hlt
mov
jecxz
or
popa
in
mov
outs
cmp
ret
(bad)
int3
aam
jmp
cmp
push
mov
adc
pushf
jo
xor
xchg
pop
cmp
jg
adc
je
(bad)
cmc
out
ja
mov
xlat
sub
mov
dec
inc
test
adc
adc
push
push
dec
and
call
mov
imul
stos
jbe
xor
pop
or
and
push
add
cmp
sub
mov
cwde
ins
retf
xchg
(bad)
sbb
push
cli
les
jno
icebp
xor
bound
int
int
adc
mov
mov
jecxz
in
fst
inc
mov
setne
jmp
and
popa
bound
sbb
inc
test
int
or
loop
(bad)
xchg
loope
adc
aam
pop
jo
data16
rol
pop
and
mov
test
test
push
ss
shr
push
out
ins
sbb
imul
les
sbb
xlat
int3
neg
mov
test
out
sahf
lahf
stc
leave
hlt
fwait
jp
jae
jne
je
addr16
pop
cld
gs
jns
and
arpl
or
pusha
xchg
mov
ss
xchg
shr
fisubr
mov
xor
sbb
push
leave
rol
clc
xlat
test
js
sub
xchg
push
dec
leave
push
int3
push
xor
cmp
sbb
syscall
sbb
xor
fnsave
sbb
arpl
or
sbb
(bad)
fwait
test
lods
dec
and
jae
sub
sub
movs
arpl
xor
xchg
(bad)
cld
daa
mov
pop
movs
mov
cmp
je
stos
les
or
jle
aad
inc
cbw
pop
sbb
cwde
cmp
call
fcomip
xor
ins
enter
mov
xchg
jl
lods
sub
push
std
push
adc
jmp
lods
sbb
push
jl
arpl
add
or
push
std
iret
shl
or
ins
adc
fcmovnu
repnz
mov
mov
(bad)
mov
cmp
aas
(bad)
mov
xchg
dec
je
cmp
jp
or
fwait
or
inc
movs
sub
les
adc
push
push
and
sahf
scas
call
inc
hlt
movs
lds
data16
retf
mov
das
leave
jg
ror
shl
enter
adc
add
pushf
nop
ins
into
int3
out
and
cmp
imul
gs
(bad)
jg
pop
add
pop
and
cmp
dec
outs
cmc
and
scas
rcr
icebp
add
(bad)
pop
jmp
fcomp
pop
mov
pusha
jmp
push
mov
inc
mov
xchg
jl
lock
ss
stos
pop
and
xor
inc
out
dec
mov
pop
add
mov
sbb
push
lods
pushf
out
add
dec
gs
pop
cdq
pop
(bad)
gs
dec
jmp
shl
cdq
test
lea
rcl
stc
push
xor
sbb
outs
push
dec
push
fs
sub
push
xor
out
add
or
mov
lods
adc
xchg
dec
fcom
add
imul
cmp
mov
sub
cld
hlt
push
adc
test
adc
test
shl
jnp
ja
js
ins
dec
push
push
pop
jmp
or
fcom
sub
rol
jo
sub
in
retf
or
sub
(bad)
lea
(bad)
fs
jno
dec
mov
sbb
mov
fdiv
hlt
in
loop
dec
lods
cmc
mov
pop
cmc
xchg
in
push
mov
daa
sbb
push
sub
sar
rcr
xor
pop
inc
push
push
inc
sub
pop
call
leave
inc
test
test
push
data16
int3
(bad)
jmp
push
jge
scas
and
lods
jmp
hlt
cmp
inc
mov
movs
mov
jae
in
inc
pop
cmp
lds
cmps
aad
popf
ins
int3
sub
sahf
sbb
jg
cmp
cmp
scas
pop
popa
movs
lahf
push
push
cmps
repnz
call
shr
cmps
jno
fwait
xchg
sub
fwait
jae
fs
out
pop
out
ret
add
mov
mov
retf
jne
stos
retf
sar
push
inc
cli
cli
mov
push
jp
ss
mov
xor
icebp
gs
ds
ret
xchg
push
nop
mov
pop
leave
or
mov
xor
xor
in
lahf
and
dec
lods
lds
mov
movs
jecxz
aaa
adc
enter
loopne
mov
repz
pusha
xor
xchg
(bad)
addr16
inc
(bad)
aas
mov
movs
and
jb
jae
or
xchg
cld
and
in
sbb
pop
mov
dec
pop
xor
ja
mov
xor
(bad)
(bad)
pushf
ss
inc
xor
xor
or
fistp
jl
js
jns
xor
mov
mov
jp
daa
sub
push
mov
and
mov
cmps
cld
xchg
cmp
mov
or
lods
add
inc
movs
out
int3
sbb
sbb
cmp
mov
aas
mov
inc
mov
movs
mov
inc
loopne
in
adc
lds
mov
in
aas
xchg
cmp
and
mov
cmps
add
pop
dec
cmp
std
cmps
xchg
repz
or
repnz
pop
xlat
or
cmp
and
out
inc
ficomp
mov
stos
je
or
jecxz
je
test
sbb
mov
ror
fiadd
lea
fld
mov
mov
daa
dec
sbb
sbb
xchg
xchg
mov
js
inc
mov
fs
(bad)
adc
pusha
mov
(bad)
clc
pop
int
sub
inc
and
imul
cld
scas
gs
add
les
and
inc
xchg
and
add
popa
push
xor
jmp
data16
jns
loope
daa
mov
inc
pop
inc
sbb
push
in
and
fsubr
cmp
retf
push
or
jne
mov
cmp
xchg
inc
inc
sbb
test
nop
push
int3
fiadd
mov
rcl
scas
in
cs
popa
jp
shr
mov
cli
push
imul
mov
arpl
cmp
xor
and
test
mov
cmp
jnp
inc
jmp
cmp
arpl
lea
mov
or
hlt
xchg
pop
dec
xlat
jnp
mov
call
mov
cmp
int3
pop
adc
sbb
pop
dec
(bad)
ds
aas
pop
ror
adc
pop
ja
mov
or
add
(bad)
enter
out
sub
outs
xchg
xchg
(bad)
or
add
test
fistp
and
lds
les
inc
push
ret
mov
xchg
imul
aam
loope
inc
cli
sub
in
fwait
nop
mov
ficom
lahf
stos
into
xchg
inc
repnz
out
test
js
or
loop
or
lahf
xchg
adc
aam
mov
jle
cdq
je
push
jbe
outs
ins
and
adc
lds
cs
ja
or
push
out
enter
shr
xor
or
cmp
push
push
push
gs
add
sar
outs
pop
dec
inc
cli
pop
div
aaa
mov
nop
or
add
pop
add
stos
push
daa
jp
sub
xor
sub
xor
stc
inc
movs
out
test
fwait
test
mov
mov
rcl
jne
mov
add
sub
mov
and
push
mov
or
and
hlt
out
ret
(bad)
aas
pop
cmp
test
adc
jo
cwde
push
jns
les
js
popa
xor
xlat
adc
mov
adc
mov
js
pop
out
sbb
push
push
add
test
shl
call
mov
or
jmp
sbb
xchg
pop
fcmovbe
mov
popa
outs
(bad)
inc
push
jne
aas
stc
adc
mov
cmc
add
shr
pop
dec
dec
jmp
(bad)
adc
icebp
hlt
push
sub
cli
pop
lahf
cmp
(bad)
mov
ror
and
clc
push
fs
adc
pushf
popf
inc
popa
sub
out
and
repz
js
fld
mov
jl
ja
dec
sbb
jecxz
loopne
jl
and
xchg
jg
mov
(bad)
inc
push
icebp
mov
cmp
mov
inc
ss
pop
push
(bad)
test
mov
arpl
mov
mov
out
jg
mov
mov
rcl
hlt
(bad)
xchg
dec
mov
outs
stos
(bad)
ins
xor
into
mov
repnz
jmp
push
fdiv
(bad)
daa
pushf
inc
cwde
ror
pop
mov
in
int3
int
pop
ds
dec
addr16
stos
cld
cmps
push
movs
cmps
imul
pop
ret
into
sar
popa
(bad)
(bad)
aas
mov
cmp
mov
mov
cmps
mov
(bad)
cwde
inc
cmp
xchg
cmp
ja
push
lock
retf
pop
loop
cmp
ret
out
cs
push
shl
test
ret
stc
js
pop
jne
inc
push
pop
out
cmp
push
jnp
lock
adc
add
(bad)
lock
xor
jno
jno
pop
mov
jg
cmps
into
repz
mov
leavew
add
mov
lods
fcomp
jo
adc
or
(bad)
je
and
(bad)
xor
xor
mov
or
sbb
call
dec
and
mov
int
int3
addr16
cwde
jge
enter
dec
add
inc
hlt
pop
and
pop
adc
and
adc
push
in
mov
xchg
fisttp
and
test
(bad)
gs
cmp
arpl
retf
fwait
div
xlat
call
retf
jp
sahf
test
adc
adc
inc
ds
mov
add
rol
xchg
lods
sahf
sub
imul
mov
ins
xchg
orps
aaa
mov
retf
test
xor
inc
sti
lahf
(bad)
popa
sbb
xor
sub
mov
pop
test
jecxz
add
imul
fwait
rcl
push
aad
inc
push
imul
ficom
jno
aas
call
stos
pop
lods
in
xchg
or
into
out
imul
mov
cmp
mov
dec
leave
mov
icebp
and
call
mov
and
inc
dec
push
sti
repz
push
sahf
mov
je
test
mov
cmp
stos
jb
mov
ins
addr16
leave
pop
sub
mov
inc
add
jno
repnz
pop
mov
jmp
pop
ret
adc
mov
sbb
adc
(bad)
xor
push
sub
dec
adc
sub
jae
mov
xor
jecxz
int3
cmp
jmp
(bad)
dec
xor
add
test
push
in
adc
or
mov
mov
mov
test
addr16
aas
test
xor
inc
mov
xchg
inc
sub
ret
retf
xchg
ret
outs
push
imul
js
jnp
ret
addr16
and
pop
out
xchg
xchg
fadd
mov
dec
jo
fadd
xchg
aam
jl
pop
adc
cmp
mov
cdq
test
jg
push
inc
fist
mov
inc
ss
sbb
xor
add
jmp
jmp
rcl
clc
aaa
cmp
inc
repnz
push
push
shr
cmp
or
sbb
or
jb
iret
and
div
pop
imul
test
jo
retf
jmp
call
fnsave
cmp
out
aad
xchg
cs
sti
adc
(bad)
push
push
inc
test
inc
inc
sub
xchg
pusha
ds
xchg
or
mov
test
mov
outs
leave
add
js
and
test
ins
mov
hlt
and
xor
call
lea
icebp
xchg
pop
lea
mov
inc
iret
inc
mov
xchg
push
cdq
imul
in
mov
ret
fmul
and
inc
and
pop
cs
arpl
and
or
sub
sub
xchg
aad
pop
icebp
int
idiv
push
dec
mov
(bad)
hlt
into
xchg
dec
cli
fistp
sti
cld
add
movs
jge
push
int3
pop
lahf
cli
adc
jno
and
aas
mov
inc
xchg
mov
jle
fld
jno
mov
sub
mov
rcl
push
icebp
mov
enter
inc
scas
paddsb
cmp
sub
div
popa
(bad)
jmp
jnp
fs
ins
pusha
retf
mov
dec
movs
inc
aas
(bad)
je
inc
dec
rol
test
xchg
xchg
out
dec
test
mov
mov
xchg
loope
push
push
call
aas
inc
aas
or
sbb
pop
nop
cmp
and
lds
or
mov
or
jne
pushf
sbb
push
mov
mov
inc
(bad)
stc
push
(bad)
jmp
(bad)
xor
aam
fistp
out
xchg
and
mov
loopne
ins
push
stos
sar
repz
sub
repz
jnp
xchg
ret
loopne
cmp
cmp
add
movs
jno
jmp
dec
push
outs
fs
popa
leave
lds
sbb
xchg
js
daa
cmps
push
retf
gs
add
enter
out
sub
aaa
movs
mov
sub
xchg
daa
mov
or
jo
ins
outs
jns
mov
jg
sub
pop
jmp
mov
bound
jnp
retf
pop
jo
inc
popa
sub
push
pop
cmp
daa
push
cwde
push
stos
jle
xchg
mov
or
sahf
stos
or
repz
add
aaa
imul
jle
push
fs
dec
fsubp
add
push
fs
and
cmps
test
push
jo
lods
lds
(bad)
imul
xor
jno
mov
mov
gs
push
mov
mov
ds
jnp
mov
fdiv
loope
jne
mov
adc
mov
dec
or
cmp
pop
call
mov
or
shl
ins
call
adc
ret
mov
cmp
pop
jb
dec
das
and
bound
inc
je
call
or
and
ss
dec
imul
xor
push
int
in
(bad)
stc
push
sbb
pop
loope
icebp
cdq
cmp
pop
es
jp
js
mov
sub
fimul
push
push
ret
pop
push
popf
jno
call
sub
pop
mov
sbb
test
add
popa
xchg
xlat
mov
adc
sti
ss
mov
outs
push
mov
call
rcl
push
dec
sub
lods
repz
(bad)
lds
inc
shl
int
lock
push
adc
imul
jbe
jns
adc
push
leave
cmp
push
daa
push
pop
pavgw
pop
shr
add
push
shl
shl
push
sub
pop
dec
inc
mov
xchg
out
shl
movs
adc
pop
push
jae
mov
jbe
retf
push
pop
lds
mov
jbe
sbb
dec
and
fidiv
shl
mul
add
or
adc
push
pushf
sub
jne
cmc
and
pushf
adc
(bad)
pop
clc
or
je
cmp
lods
sub
sbb
pop
ds
div
das
pop
mov
aam
jo
inc
mov
xchg
mov
add
push
sbb
xchg
call
cmc
inc
cli
cld
pop
(bad)
push
das
mov
jmp
cs
in
add
jo
(bad)
push
mov
cmps
mov
cld
(bad)
pop
sar
adc
xor
dec
jecxz
mov
imul
add
or
mov
stos
mov
or
dec
ficomp
cli
mov
in
push
xchg
or
pop
movs
or
retf
imul
mov
pop
fs
test
add
pop
icebp
iret
sbb
xchg
div
pop
dec
xchg
push
out
out
sbb
dec
and
push
push
push
leave
je
xor
cli
push
or
arpl
sti
js
test
add
pop
xchg
fist
int3
cmp
ret
mov
imul
daa
adc
lock
pop
out
mov
jne
outs
je
mov
cmps
call
push
stc
mov
mov
call
in
xchg
pop
inc
xor
ja
xchg
call
or
dec
fmul
pop
inc
sbb
mov
or
pop
out
sbb
cs
push
movs
mov
mov
data16
mov
(bad)
hlt
fdivr
std
ror
fistp
lods
pop
pop
les
inc
call
mov
sub
add
out
inc
and
dec
jno
adc
mov
cmp
mov
or
adc
fdivr
in
inc
mov
pop
rol
test
addr16
and
mov
push
into
push
std
ds
mov
mov
sbb
jge
xchg
sar
fmul
inc
cmc
add
push
cmp
ror
es
fbld
inc
adc
sub
adc
mov
mov
or
push
add
inc
fild
mov
sti
sahf
mov
leave
mov
add
scas
ret
rcl
les
hlt
(bad)
cs
jo
movs
add
repz
hlt
aam
test
cli
hlt
loopne
add
mov
cmps
stos
clc
add
adc
sar
add
sti
xor
xor
jne
mov
pop
cdq
xchg
or
add
xchg
leave
popf
or
xchg
mov
out
aad
pop
add
inc
popa
inc
add
push
pop
mov
pop
push
mov
jecxz
jmp
(bad)
xlat
mov
movs
arpl
or
icebp
sbb
pop
cmps
pusha
outs
mov
push
leave
iret
adc
jmp
jno
shl
dec
inc
pop
adc
xor
mov
out
cmp
cmp
mov
dec
xchg
cmp
jbe
sub
and
stos
mov
adc
aad
sahf
fisubr
xor
and
sub
adc
add
pop
pop
jp
xchg
xchg
ficomp
inc
gs
inc
jbe
outs
jbe
xor
xchg
mov
xor
xor
adc
clc
xlat
mov
ud2
adc
sbb
push
dec
stos
test
push
push
das
mov
pushaw
sahf
inc
mov
scas
fimul
xchg
pop
(bad)
xchg
ins
or
xchg
bound
xor
repnz
out
mov
sub
push
scas
ret
add
shl
mov
jo
retf
mov
push
shr
stos
movs
in
sub
mov
shr
mov
pop
daa
pop
fisubr
bound
cmp
(bad)
lahf
out
sbb
repz
das
inc
mov
cli
cmp
add
outs
fs
rcr
dec
jnp
ins
in
jno
outs
shl
enter
push
in
jb
pop
adc
outs
dec
add
out
adc
ja
sbb
adc
fsub
add
jmp
(bad)
ja
pop
or
mov
js
jmp
cmp
call
fucomi
push
sub
inc
mov
repnz
cmp
es
fwait
mov
in
imul
jecxz
add
adc
or
xchg
jbe
push
rcr
pusha
mov
sub
ret
call
inc
ficomp
repz
or
dec
sbb
out
ins
(bad)
push
retf
mov
and
test
ss
(bad)
fisubr
jbe
mov
popf
or
ret
cdq
fnstsw
jmp
popa
cmps
adc
addr16
ins
(bad)
xlat
jns
push
mov
rcl
lahf
sbb
cmp
push
xchg
pop
add
xchg
mov
ret
cdq
leave
pop
mov
cmps
nop
jg
in
pop
cmp
scas
test
out
cmp
outs
scas
jbe
inc
ror
inc
call
rol
add
cmp
xor
std
(bad)
leave
ins
loope
enter
mov
int
mov
and
aas
xor
fmul
and
inc
xchg
push
xchg
inc
or
(bad)
test
add
push
cmp
xchg
dec
mov
xchg
aam
mov
test
pop
sar
ins
sbb
inc
adc
push
in
(bad)
data16
in
xlat
stos
jnp
jno
adc
retf
rcl
mov
dec
add
lahf
aad
cmp
imul
aaa
cld
aam
xor
ds
cli
push
imul
cli
fsubr
in
sbb
imul
stos
stos
pusha
out
into
xor
sub
mov
fs
push
sbb
cli
fwait
fs
cmp
push
jmp
cmp
cmp
push
stc
jle
sub
adc
jecxz
ror
mov
xchg
mov
ret
stc
xlat
xchg
sbb
dec
(bad)
mov
retf
inc
data16
sub
int3
dec
pusha
(bad)
lock
jb
fiadd
and
(bad)
adc
dec
imul
or
mov
jbe
outs
out
(bad)
(bad)
lahf
adc
or
mov
jo
aad
fwait
mov
dec
cmp
push
dec
jmp
arpl
push
ret
push
mov
cmps
cmp
pop
cld
cdq
(bad)
sahf
cmps
std
mov
sub
jmp
dec
jbe
dec
idiv
pop
pop
shl
cmp
out
or
(bad)
or
add
push
jno
test
inc
jne
fndisi(8087
or
imul
inc
mov
add
inc
retf
add
mov
test
or
mov
inc
in
xchg
xor
rcl
pop
inc
or
dec
jp
(bad)
jle
dec
and
(bad)
push
inc
pushf
loopne
mov
mov
shl
dec
int3
xchg
lods
push
adc
sti
shl
gs
jno
push
add
cmps
not
inc
test
div
push
movs
sahf
xchg
sbb
out
imul
add
movs
jle
cmp
inc
push
enter
(bad)
cmc
pop
sub
or
cmp
fbstp
in
xchg
jmp
add
mov
in
dec
(bad)
sbb
out
test
cmps
xchg
jle
cs
dec
(bad)
adc
cwde
cdq
push
xchg
leave
loop
jle
jecxz
jne
not
push
xlat
jo
(bad)
movs
outs
mov
or
xor
ins
or
ja
fld
in
fcmovu
out
int3
mov
dec
xlat
rcl
inc
imul
fld
push
mov
and
and
add
fs
mov
xor
add
pop
dec
lock
leave
lock
pop
aas
jnp
ds
dec
and
xor
cmp
cmp
stos
push
mov
inc
mov
inc
addr16
das
icebp
inc
jmp
push
dec
mov
pop
jb
inc
cmp
sub
add
mov
push
xchg
and
arpl
xchg
sbb
icebp
ds
jmp
sub
and
xor
cs
out
sub
jo
ss
ins
lods
pop
daa
inc
scas
dec
cmp
pop
shl
and
nop
or
pusha
cs
xlat
mov
sub
imul
xchg
(bad)
(bad)
(bad)
(bad)
jo
bound
lods
das
mov
leave
repnz
mov
push
imul
add
stos
xor
mov
lods
mov
jecxz
stos
xchg
adc
arpl
or
fcom
jns
ror
pop
fwait
xor
(bad)
out
pop
adc
mov
pop
pusha
fwait
mov
mov
test
mov
sbb
into
jns
idiv
add
push
sub
inc
jno
inc
int
dec
shl
inc
lods
or
dec
cli
test
(bad)
scas
stos
lock
ins
jp
fadd
arpl
mov
lock
mov
mov
xor
cmps
enter
inc
jb
pop
lock
nop
adc
jne
call
data16
fcmovbe
(bad)
int
data16
mov
sar
sbb
pop
jns
mov
in
dec
outs
retf
jmp
pop
daa
or
or
clc
adc
retf
inc
push
push
add
sbb
jge
popf
dec
imul
div
jne
mov
push
sub
cmp
scas
adc
(bad)
mov
loope
psubsb
mov
loop
cmp
aad
mov
nop
ss
ins
loope
push
cmp
(bad)
leave
sbb
mov
xor
fnstenv
lahf
push
push
lods
js
push
mov
jg
(bad)
mov
aaa
out
dec
sub
icebp
or
xlat
jo
repz
pop
sbb
xor
xor
jmp
daa
xlat
pop
jle
jg
cmp
pop
fadd
mov
std
repz
shr
inc
nop
pushf
mov
sub
sub
aam
not
mov
stos
push
sbb
out
inc
icebp
sub
xchg
pop
enter
cmp
jp
sub
push
mov
xor
pop
or
std
or
add
mov
ins
fmulp
call
(bad)
pushf
aaa
sahf
imul
shl
push
mov
(bad)
shl
mov
dec
out
xchg
out
out
imul
push
es
push
out
imul
push
and
xor
inc
mov
pop
ins
jnp
imul
shl
movmskps
dec
lahf
add
lahf
jmp
sbb
repz
in
out
out
pop
xor
dec
xchg
das
in
sbb
cmp
sub
(bad)
add
rcr
push
jmp
jp
xor
(bad)
fdiv
mov
pop
jle
xor
jmp
mov
mov
call
popf
clc
cmps
inc
and
mov
sub
es
imul
mov
jl
fisub
das
cmp
cmp
inc
test
and
repnz
mov
sub
adc
jo
xchg
ins
mov
dec
(bad)
popa
stos
push
in
sub
add
mov
xor
mov
mov
pop
sub
call
pushf
push
fdivrp
or
sub
imul
out
popa
pop
sub
leave
push
jp
adc
mov
pushf
fcmove
xor
adc
push
test
mov
iret
scas
and
mov
stos
cmc
add
repz
mov
mov
sub
(bad)
cld
and
xchg
out
jae
cdq
scas
leave
shr
movs
pop
(bad)
dec
jno
cmp
int
mov
pop
arpl
js
cmp
mov
xchg
jecxz
popf
mov
inc
sub
inc
or
push
cli
cmp
jmp
pop
shl
sbb
mov
sbb
adc
stc
rcl
sbb
fisttp
adc
cli
aad
ficomp
mov
lahf
outs
outs
mov
xor
loopne
xchg
mov
xor
rcr
shr
shl
test
inc
cs
mov
ja
pop
add
mov
jns
pop
cwde
pop
push
jg
mul
jle
lahf
mov
mov
aad
jbe
sub
and
xchg
jns
out
jne
ins
inc
xchg
mov
sub
cwde
inc
cmc
(bad)
and
jl
test
test
dec
(bad)
rcr
cmp
push
dec
cmp
dec
adc
adc
sbb
mov
mov
mov
or
bound
aas
out
int
out
fdivr
lea
pop
fadd
arpl
lods
mov
xchg
and
pop
jae
dec
mul
cmp
push
int3
int3
jge
xlat
ins
test
cmp
xchg
test
jl
xchg
popa
dec
addr16
iret
(bad)
loopne
inc
or
ror
dec
cmp
push
cmc
and
add
fmul
je
dec
push
mov
pusha
nop
xchg
xchg
cmp
pop
test
out
mov
out
pop
mov
call
scas
loopne
mov
cs
push
stc
sbb
(bad)
dec
fistp
cs
(bad)
popf
and
das
iret
mov
cmp
or
or
mov
pop
pop
add
pop
mov
inc
stos
mov
sti
inc
xchg
mov
mov
jae
jg
test
(bad)
rcl
mov
mov
inc
mov
stc
pop
and
push
cmp
or
mov
rcl
rol
jecxz
jmp
inc
in
push
sub
mov
xchg
adc
mov
jno
rcl
mov
outs
call
adc
pusha
movs
cli
sahf
sub
outs
loope
or
or
loop
mov
neg
loopne
cdq
add
push
mov
sub
push
addr16
loope
ins
mov
push
sbb
arpl
fstp
adc
inc
and
in
mov
repnz
mov
(bad)
(bad)
add
and
mov
fs
jb
into
push
int
cmp
dec
leave
xor
daa
adc
sub
xchg
faddp
stc
xchg
arpl
sbb
loopne
std
fsubr
and
adc
jb
fiadd
int3
mov
das
jg
inc
jmp
(bad)
jecxz
cmp
rcl
dec
pushaw
aad
sar
jmp
fistp
(bad)
push
cmp
jo
repnz
mov
add
pop
or
add
or
sar
jbe
sub
jne
mov
arpl
int
cdq
jle
and
inc
xchg
xchg
in
cli
leave
data16
cli
pop
mov
inc
inc
sub
mov
stos
cmp
inc
mov
and
shr
xor
cmp
push
add
cmp
mov
sub
loop
test
cwde
push
lea
inc
test
sahf
aas
mov
and
and
inc
imul
std
inc
imul
sub
arpl
or
fsubr
dec
ins
cmc
mov
push
aaa
clc
push
xor
out
dec
add
and
mov
aad
imul
repnz
aas
ins
cmp
jp
pushf
push
xchg
jae
pushf
and
mov
bound
mov
adc
call
lods
std
loop
scas
test
(bad)
out
mov
mov
(bad)
aam
sbb
mov
xchg
sub
ins
test
and
fisttp
mov
std
lods
mov
stos
and
sub
adc
loop
cmc
jle
push
lahf
lods
inc
outs
jbe
xchg
clc
lds
cmc
xor
push
aaa
iret
retw
enter
cmp
movs
add
mov
ret
and
cdq
les
pop
and
test
xor
mov
push
stos
mov
les
mov
movs
sar
test
mov
or
fst
in
in
outs
inc
xor
cmp
iret
cmp
arpl
popa
iret
inc
push
xor
das
test
inc
jnp
test
out
mov
sub
jl
scas
push
inc
inc
int3
fist
imul
mov
in
ins
push
mov
cmps
jl
pop
fmul
mov
or
outs
push
dec
sbb
and
mov
xor
mov
push
inc
lods
popa
and
out
(bad)
mov
lds
(bad)
sbb
popa
jge
ret
xor
aad
xor
movs
inc
dec
cmp
pop
out
fwait
mov
sub
adc
mov
je
mov
pop
cmc
or
int
scas
inc
and
lahf
fidiv
movs
mov
enter
mul
dec
mov
push
jmp
jns
and
rcl
sahf
and
pop
imul
cmp
ins
sar
inc
addr16
adc
mov
ror
js
shr
shr
in
and
sub
in
xchg
arpl
sbb
call
ss
or
jno
in
mov
test
scas
in
pop
cmp
xchg
(bad)
add
movs
gs
push
out
pop
pop
jb
sub
fstp
sbb
mov
xlat
adc
scas
add
cmc
lods
jp
fld
setno
or
rcr
adc
movs
icebp
dec
mul
(bad)
inc
cmp
dec
sub
aam
out
sub
into
mov
sbb
pop
repnz
imul
fstp
add
addr16
push
hlt
out
mov
inc
imul
fdivr
mov
sbb
dec
pusha
push
cmp
(bad)
mov
dec
xor
push
out
icebp
retf
pop
je
aas
xchg
dec
stos
fwait
cmp
push
xor
addr16
les
mov
dec
stc
popa
or
ja
(bad)
or
inc
add
or
movs
es
cvttps2pi
mov
xchg
aam
repz
xor
mov
pusha
adc
mov
loop
cmc
cmc
les
ror
mov
movs
push
inc
fsub
fadd
or
dec
sbb
add
xlat
inc
fdivr
jle
dec
(bad)
push
repnz
(bad)
pop
dec
sub
popa
dec
push
pop
jge
jb
fcmovbe
pop
or
xchg
sti
in
ret
shl
jge
(bad)
inc
pusha
pop
cs
cdq
adc
arpl
in
jnp
fwait
sar
aam
repnz
movs
aaa
leave
mov
pop
hlt
add
jns
mov
ret
xor
rcr
das
mov
cmp
aas
inc
mov
lahf
dec
ss
popa
cld
mov
and
popa
test
inc
cmp
loope
and
pushw
not
xor
and
mov
mov
stos
jo
add
sub
and
xchg
or
ret
push
xchg
ins
fimul
mov
mov
or
enter
mov
(bad)
sub
sar
xor
sbb
leave
and
in
ficomp
lods
adc
add
pop
add
rcr
inc
jb
ret
mov
push
clc
fwait
xor
pop
xchg
xchg
cdq
adc
pop
and
jmp
push
pop
movs
call
in
icebp
cmp
dec
das
jmp
and
out
call
rol
push
mov
dec
cmps
les
lods
mov
xchg
mov
cli
mov
bswap
test
sub
ret
out
ins
mov
in
and
aam
mov
(bad)
in
pop
lock
(bad)
jle
call
sub
jl
daa
mov
mov
push
xchg
imul
out
sub
cmp
hlt
mov
dec
test
xchg
lea
test
sbb
add
call
jnp
sub
ins
push
loopne
sbb
adc
sbb
jmp
pop
rol
or
dec
movs
xchg
mov
push
aaa
cwde
xor
adc
push
sub
ret
stos
mov
adc
or
add
je
sub
aas
dec
ret
shl
(bad)
push
sahf
add
in
popa
retf
shl
push
push
aam
sbb
pop
std
xor
imul
fcom
mov
iret
jmp
pushf
pop
inc
mov
xor
lods
xchg
lds
or
aad
mov
push
sbb
dec
into
and
mov
adc
std
mov
cs
push
int3
retf
test
push
sbb
mov
xor
pop
push
sbb
mov
mov
and
int
cwde
dec
cmp
mov
pop
jle
lock
mov
sti
popa
cmp
nop
push
je
push
sub
in
or
inc
in
lods
call
lock
fld
ror
xor
stos
xchg
cmp
jmp
push
jp
add
sub
xchg
scas
push
mov
pop
icebp
inc
inc
bound
jl
dec
push
(bad)
sti
sahf
inc
mov
arpl
ins
xchg
mov
pop
mov
popa
movs
jg
in
es
leave
pop
popa
mov
cwde
(bad)
xor
dec
out
in
mov
outs
hlt
ins
fisub
fidiv
add
test
ds
enter
icebp
rcl
lar
aad
add
in
ins
cmp
pop
jbe
(bad)
mov
js
mov
lods
dec
daa
daa
xchg
enter
or
(bad)
out
cs
fcomp
in
mov
bound
push
xchg
fcomp
int
or
jb
inc
arpl
mov
adc
adc
daa
mov
std
jmp
sahf
(bad)
cmp
push
push
jp
inc
mov
or
or
mov
(bad)
out
cmp
adc
pop
push
gs
ss
push
into
jp
cli
mov
je
and
push
sar
mov
fldenv
inc
sbb
aaa
fild
aas
mov
or
in
in
cwde
in
test
xchg
add
mov
addr16
test
push
lds
cvtps2pi
in
push
sub
shr
test
mov
lds
lods
shl
(bad)
jno
cdq
and
ds
repnz
sub
jo
jae
imul
(bad)
nop
cmp
jp
inc
iret
bound
call
scas
dec
std
(bad)
mov
inc
cdq
cmp
mov
sti
retf
loope
mov
sahf
or
mov
mov
push
mov
test
mov
pop
sub
push
aas
jns
jo
mov
mov
xor
cmp
mov
and
mov
repnz
clc
jg
pop
push
outs
xchg
lods
sti
es
dec
imul
xor
inc
lds
pop
cdq
xchg
shr
mov
sub
mov
jge
sub
call
aad
fucom
das
dec
cmc
cmp
pop
dec
adc
mov
add
jmp
push
adc
ss
sbb
jl
aas
cli
mov
add
mov
ds
cld
adc
xor
push
or
or
js
jno
dec
ins
mov
mov
add
(bad)
lea
lods
xchg
out
sbb
push
out
ret
adc
inc
jmp
in
gs
cmp
(bad)
test
inc
jmp
adc
retf
and
in
int
retf
fistp
daa
sub
int
add
int
clc
inc
add
movs
fdivp
pop
mov
icebp
pop
loope
xchg
and
test
shl
mov
inc
or
cli
mov
cmp
outs
mov
inc
add
pop
(bad)
mov
fs
add
in
mov
pop
xor
and
xchg
cmps
and
and
retf
ret
mov
arpl
das
psubusw
sbb
or
mov
stc
ds
clc
or
jmp
hlt
leave
retf
xchg
push
mov
xchg
or
loop
add
fs
adc
sub
pop
outs
scas
retf
xor
pop
jne
retf
jns
mov
dec
mov
movs
es
pop
cmps
cmc
or
mov
ret
xor
popa
imul
mov
sbb
out
mov
adc
mov
ss
lock
dec
add
add
scas
stos
ss
ficom
adc
imul
lods
nop
xchg
mov
or
imul
in
inc
fs
je
rcr
fnstsw
loop
ds
int3
xor
ds
add
fs
or
loope
aam
mov
pop
push
push
sbb
mov
push
sbb
imul
adc
aad
scas
push
xchg
mov
pop
mov
lods
pop
sub
xor
gs
xlat
xor
mov
cmp
rcl
pushf
mov
pop
addr16
in
ins
loop
jecxz
or
sub
call
repnz
lock
daa
dec
mov
mov
pop
xchg
or
test
in
adc
(bad)
ss
int
loopne
into
ret
pusha
xchg
inc
test
xchg
cmp
sbb
loope
movs
mov
loop
jne
push
aad
xchg
xchg
sbb
cmp
xchg
xchg
sub
push
nop
ja
sbb
mov
mov
mov
or
add
in
iret
adc
daa
pop
fs
sbb
mov
sub
in
jb
xchg
xor
inc
dec
xor
lods
push
arpl
push
fdivrp
mov
sub
in
cmps
inc
push
mov
push
outs
push
daa
sbb
adc
add
add
adc
mov
hlt
and
pop
(bad)
jb
stos
pop
mov
sub
ins
and
call
cli
cld
inc
std
imul
push
hlt
fdivr
sub
sbb
pusha
adc
je
ins
jl
outs
or
rol
int
ins
or
addr16
repz
sbb
add
sahf
cli
dec
jno
pop
push
test
mov
sub
add
and
int3
inc
fwait
call
sbb
ret
push
cmp
scas
jl
cmp
or
(bad)
pop
dec
mov
inc
jbe
jecxz
sub
mov
jecxz
mov
lds
lahf
mov
enter
movs
adc
stos
jmp
mov
mov
or
lods
sahf
arpl
sbb
xor
aam
in
sbb
loop
fdivr
mov
popf
lea
jmp
cmp
(bad)
adc
cmp
ror
hlt
mov
pop
lds
ss
into
bound
mov
dec
not
cmp
inc
ds
dec
cmp
sub
jae
inc
add
sti
mov
jns
dec
add
stos
cmp
add
fidiv
loopne
loope
add
std
xlat
test
xchg
daa
test
mov
fild
push
push
ds
aam
push
xchg
add
ds
(bad)
jge
mov
in
stos
cmp
in
daa
out
adc
mov
int3
xchg
xchg
mov
pusha
scas
sub
push
cmp
mov
xor
adc
jmp
push
pushf
dec
push
dec
bound
call
neg
cmp
inc
add
repnz
sbb
sbb
test
xor
rcr
lds
scas
cmp
scas
pop
inc
je
push
pop
mov
cmp
(bad)
pop
cmovb
mov
adc
(bad)
retf
jg
xchg
cld
xchg
cmc
jns
cli
ret
xor
outs
cmp
push
cmp
sub
in
daa
iret
jnp
into
popa
aas
sbb
repz
mov
call
mov
sub
push
sbb
movs
pop
mov
nop
mov
test
pop
xchg
shl
pusha
xchg
adc
cdq
fsubr
mov
xchg
dec
mov
movs
dec
or
pop
ins
data16
push
js
ret
pop
push
and
repnz
pop
rcl
loope
cmp
and
es
add
mov
test
cmps
test
data16
std
xchg
fdivr
sti
(bad)
pop
arpl
dec
mov
mov
or
sub
xor
adc
cwde
int3
enter
ja
(bad)
and
je
jle
push
pushf
mov
jns
mov
in
rol
mov
fld
xchg
outs
aas
adc
int
adc
xchg
cmc
pop
push
inc
xor
and
out
jge
int3
sub
xchg
mov
sahf
movs
popa
push
add
sbb
jns
inc
sar
jmp
jle
or
or
jb
pop
sbb
xchg
jnp
or
in
inc
xor
stos
outs
leave
and
pop
pop
mov
loop
aas
mov
jo
imul
mov
fadd
pop
loopne
jae
jbe
xchg
gs
add
lods
cs
mov
pushf
dec
lahf
into
cmp
jge
lods
push
push
inc
cdq
idiv
scas
stc
into
popa
mov
cmps
xor
or
(bad)
jae
in
pop
adc
pushf
pop
hlt
pop
fldcw
add
sbb
sub
sub
(bad)
fist
sar
mov
mov
jl
xlat
dec
call
ins
adc
mov
arpl
push
inc
and
mov
repnz
jbe
cs
push
xor
(bad)
jmp
test
loop
and
xor
mov
(bad)
adc
iret
test
aas
jecxz
sbb
jnp
retf
lahf
sub
dec
mov
fsub
mov
push
sub
jae
leave
gs
push
ds
cs
adc
cmp
es
jne
fld
out
jecxz
push
push
cwde
mov
mov
adc
jmp
mov
scas
jb
lea
dec
loop
hlt
add
pop
add
jge
xor
dec
mov
arpl
not
xchg
call
es
mov
dec
xabort
mov
xchg
repnz
(bad)
pusha
ret
pop
xor
push
int3
pop
pop
and
sahf
cld
lods
add
fsubr
mov
sahf
mov
and
sbb
dec
pop
cmp
test
pop
fidiv
ret
ja
sahf
push
mov
adc
cmp
jg
inc
or
xchg
ret
loope
ret
lock
test
loopne
pop
mov
jl
fnstsw
sbb
das
gs
aas
adc
clc
pop
mov
sbb
sbb
add
gs
mov
sbb
adc
ror
push
pop
test
mov
adc
xchg
xor
lea
loop
out
out
loopne
lea
dec
div
cmp
push
fst
int3
mov
(bad)
rol
xchg
pop
and
repnz
and
push
aaa
pop
test
fisub
lds
xlat
pop
int3
ds
sub
mov
inc
adc
xor
fxam
stos
pushf
sbb
pop
pop
lods
mov
sub
push
retf
imul
stos
std
pop
and
mov
ins
jns
push
retf
inc
mov
mov
cwde
add
popf
aas
pop
mov
add
sub
or
jnp
cmp
(bad)
loopne
xor
lods
push
push
pop
lods
cwde
xchg
out
pop
xchg
ins
and
je
push
popf
mov
mov
fidivr
cmp
bound
ins
shl
pop
inc
xor
stc
inc
mov
adc
mov
or
or
mov
mov
mov
sbb
and
sti
xor
mov
and
fwait
xchg
fiadd
and
push
push
push
div
loopne
std
adc
mov
mov
mov
mov
aad
ret
xor
out
fld
push
push
imul
sub
scas
aas
mov
xchg
jo
cdq
lods
popa
xchg
dec
xor
jb
ins
pop
pop
xchg
retf
xchg
dec
clc
mov
neg
pop
aas
jle
or
sub
dec
mov
cld
and
pop
call
xchg
into
ins
push
adc
aas
test
enter
xchg
cmc
push
xor
int3
scas
retf
pushf
scas
or
jmp
xlat
push
fst
mov
enter
and
or
inc
pop
add
push
mov
jmp
js
jae
and
mov
aad
gs
sti
mov
jmp
shl
rol
sub
stc
mov
daa
bound
(bad)
int
lds
xor
cli
xor
retf
and
cmp
icebp
(bad)
adc
inc
ins
xor
sub
dec
xor
mov
aaa
ja
add
out
xor
xor
sub
sbb
jg
jno
xchg
(bad)
std
or
cmp
stc
je
sti
jge
mov
out
pop
stos
push
cmps
or
mov
adc
aam
mov
sbb
inc
push
push
out
dec
push
popf
les
sbb
cmps
mov
cmps
loope
fist
or
mov
or
lahf
mov
loop
imul
in
and
lea
dec
fs
inc
cld
js
test
out
jmp
xchg
push
mov
and
es
or
sbb
daa
adc
mov
xor
bound
cld
xchg
pop
addr16
mov
outs
arpl
xchg
cmc
out
cwde
(bad)
push
add
aad
fs
adc
push
fs
mov
mov
mov
test
dec
das
pop
cmp
dec
mov
scas
icebp
sbb
push
and
stc
cmp
cmc
or
or
mov
inc
cmp
fadd
dec
adc
inc
retf
or
lahf
mov
inc
xchg
pop
lods
in
pop
repz
mov
nop
daa
js
inc
add
dec
jge
les
xchg
stos
jno
jle
adc
or
inc
js
hlt
push
pop
jns
xor
imul
jmp
(bad)
dec
pop
shl
out
jns
stos
jbe
and
mov
mov
es
stos
and
out
mov
clc
mov
(bad)
push
xor
fmul
push
clc
mov
data16
mov
addr16
rep
and
sub
ds
add
xor
inc
mov
pushf
shl
mov
jns
in
sbb
loope
stos
mov
test
xor
mov
mov
jb
jb
xor
mov
bound
push
or
stos
mov
out
mov
pop
aad
pop
test
in
lods
pop
movs
push
and
movs
(bad)
fdivrp
dec
and
pop
imul
or
stos
mov
jnp
pop
rcr
aam
test
in
push
out
es
inc
ja
pop
or
xlat
gs
mov
and
mov
push
ja
out
jecxz
or
loope
icebp
pop
jp
out
inc
pop
out
adc
enter
jne
retf
push
in
sub
popa
xchg
mov
add
pop
inc
jo
mov
ins
es
and
pop
cdq
lock
xlat
mov
retf
lock
cmps
sbb
add
lock
inc
inc
mov
mov
jecxz
into
mov
and
push
and
mov
or
lods
dec
es
adc
push
icebp
aaa
xlat
fsubr
add
jmp
jg
cmp
and
mov
add
repnz
sahf
or
daa
(bad)
aad
push
jo
into
sar
retf
xchg
mov
jp
leave
das
xchg
add
jge
mov
aad
into
inc
xchg
mov
or
int
fdivr
out
les
inc
xor
and
add
fstp
fidivr
push
sbb
test
aas
jmp
jge
push
js
pop
clc
loop
sbb
mov
mov
xchg
adc
xor
or
outs
jmp
pop
dec
jmp
push
xchg
dec
pop
mov
lea
sar
loopne
int
push
mov
fistp
ror
mov
xor
xchg
adc
pop
xor
sub
in
pop
cmp
fs
test
pop
jb
pop
into
lods
xor
in
(bad)
jb
lahf
pop
fnstcw
push
or
push
xor
mov
sub
and
xchg
xor
daa
sub
ja
mov
mov
xor
ja
hlt
jnp
push
jns
xor
rcl
or
push
and
les
and
add
imul
ror
aad
mov
fucomp
lods
retf
aaa
pop
out
inc
push
xor
push
lods
ins
in
call
jp
mov
retf
aam
inc
bound
sbb
aas
push
cmp
xor
inc
ins
int
rcr
xchg
fwait
jnp
inc
xchg
gs
add
push
pop
jns
sbb
inc
mov
bound
mov
and
mov
inc
mov
out
std
es
mov
dec
data16
stos
lea
call
dec
sub
jp
cli
sbb
mov
add
and
test
es
ja
into
imul
das
sahf
aad
cmp
mov
sbb
das
mul
and
or
cdq
jns
mov
addr16
pushf
sbb
push
jno
mov
in
dec
sahf
xchg
pop
(bad)
jnp
sub
pop
fidivr
pusha
push
add
shr
cmp
cmc
push
in
mov
mov
fbld
jne
out
setne
add
aad
pop
cs
aas
add
(bad)
ja
xchg
sub
dec
(bad)
pop
xchg
pop
or
mov
ins
rol
leave
and
mov
xor
add
adc
fst
push
xor
xchg
test
add
out
cmp
adc
cwde
ja
jmp
jne
dec
pop
or
pop
add
mov
dec
push
pop
mov
add
inc
xchg
es
cld
push
xchg
dec
mov
xor
rcl
and
mov
sti
mov
dec
inc
dec
sub
loopne
pusha
retf
cmc
inc
sbb
jl
lea
mov
xchg
inc
loop
daa
xchg
sar
dec
add
inc
xchg
inc
bswap
mov
fwait
cmp
xor
sub
imul
in
push
inc
jo
(bad)
sbb
int3
add
cli
xchg
push
pop
stos
cli
inc
fsubrp
popa
dec
adc
ins
pop
jge
mov
aas
sbb
test
call
jns
xchg
outs
push
addr16
in
push
mov
fisttp
pop
or
add
imul
shl
mov
sub
mov
push
xchg
inc
out
mov
(bad)
adc
sub
mov
inc
sub
nop
pop
adc
dec
push
xor
popa
imul
xor
jecxz
push
xlat
xor
inc
mov
mov
sub
inc
int3
fs
paddsw
or
push
mov
stc
int3
jb
sub
or
inc
jge
inc
push
inc
in
call
fmulp
mov
dec
or
mov
add
lock
sub
cmps
mov
cwde
pusha
daa
mov
adc
sahf
ins
and
jle
xor
pop
jmp
cmp
cmp
xchg
mov
call
in
pop
call
dec
ret
xlat
loopne
cmc
repnz
adc
xor
and
push
jno
sahf
imul
pushf
mov
jb
out
pop
jl
xchg
data16
or
fild
dec
mov
rcr
add
out
xchg
jle
mov
das
scas
mov
xchg
mov
jns
shl
push
int3
mov
sub
sahf
mov
pusha
mov
(bad)
not
aaa
das
dec
aad
aaa
pop
movs
rcl
(bad)
xor
sub
shl
mov
out
adc
inc
mov
in
jno
cmp
dec
and
xchg
xchg
mov
sbb
sahf
xor
fs
pop
imul
sub
push
push
call
aaa
pop
mov
idiv
sbb
cld
cld
and
aas
stc
retf
retf
cld
mov
mov
and
in
jp
xchg
mov
cld
test
cmp
rcl
stos
dec
lea
add
int3
int
lock
cmp
xor
bound
pop
out
(bad)
push
ret
jle
in
mov
fidivr
jg
sbb
adc
dec
jmp
jae
adc
lock
shr
(bad)
(bad)
pop
xor
scas
cmc
rol
jle
(bad)
dec
push
jl
mov
ret
cmps
cmc
daa
xchg
outs
jmp
pop
ror
gs
mov
mov
lahf
ficomp
ins
xchg
mov
out
cmc
cmp
repz
aaa
aaa
dec
cmp
push
stc
cmp
ins
mov
sub
mov
ss
mov
stc
and
fidiv
lahf
mov
sub
pop
dec
pop
adc
shr
std
call
shl
outs
and
pop
mov
mov
das
ins
(bad)
out
ss
in
mov
int3
and
out
pop
push
shl
add
popa
out
ficom
in
sbb
pushf
pusha
idiv
push
push
inc
mov
(bad)
leave
push
xor
repz
add
(bad)
pop
and
loopne
or
test
(bad)
call
mov
jae
mov
movs
ss
xchg
cmps
int
fcmovnbe
idiv
xor
cmp
inc
cld
or
jp
add
cmp
fcom
fwait
cmp
out
test
stos
les
int3
fisttp
das
bnd
add
int
in
xchg
mov
aas
ret
pop
or
mov
or
mov
mov
ins
mov
inc
inc
and
jno
ror
sub
and
cld
and
cdq
sbb
jbe
pop
mov
mov
out
inc
stos
add
mov
mov
icebp
clc
xor
repnz
and
or
ss
mov
sub
xchg
les
cmps
aas
loopne
pop
sbb
rol
jl
xlat
pop
mov
dec
aad
push
arpl
mov
cmc
dec
imul
outs
xchg
xlat
fwait
popa
cmps
dec
mov
mov
rcr
sub
add
push
add
or
retf
jge
add
daa
xor
xchg
call
jg
jnp
inc
lds
cmova
std
stos
sbb
jg
cmp
out
mov
int
and
mov
jle
mov
pop
add
jmp
pop
aam
mov
retf
add
das
loope
clc
dec
adc
test
ds
cld
mov
xchg
retf
movs
in
lahf
mov
shr
push
sbb
cmc
add
pop
adc
pop
ds
mov
sub
aam
jbe
push
adc
add
clc
dec
jecxz
(bad)
jle
inc
jno
xchg
cmp
mov
mov
(bad)
in
sub
in
in
aad
mov
sbb
lods
jp
and
loopne
inc
cwde
sub
(bad)
hlt
mov
div
lahf
cmp
dec
xor
stc
xor
gs
mov
aaa
mov
popf
pop
push
push
jl
fcomp
ror
pop
jecxz
jge
test
mov
mov
test
adc
cmp
or
arpl
mov
fisub
fstp
fist
popa
(bad)
xchg
hlt
jns
mov
pop
xor
fcomi
pop
setg
xor
scas
sub
xchg
cdq
out
pop
retf
ins
je
retf
sub
movs
mov
xchg
stc
push
aaa
jmp
ja
inc
xor
mov
outs
out
sub
mov
ss
jns
in
push
jbe
out
mov
pop
stc
add
ins
outs
aam
ret
push
jnp
popa
retf
mov
xchg
(bad)
(bad)
loope
xor
loope
jecxz
push
arpl
movs
ins
xor
enter
xchg
add
lods
mov
xchg
sbb
(bad)
aaa
div
aaa
loope
xchg
cs
push
push
mov
rcr
sti
dec
jne
adc
mov
dec
mov
out
dec
out
dec
inc
fidivr
outs
js
sbb
inc
jno
cmp
retf
arpl
ret
popa
xchg
out
xchg
jb
test
mov
push
js
imul
jge
scas
lahf
dec
jg
stos
mov
hlt
xor
cmp
pop
adc
test
adc
in
in
dec
imul
dec
xchg
xor
fdivrp
mov
mov
pusha
in
adc
out
fcomp
fwait
mov
jmp
dec
jmp
fld
mov
into
test
push
sub
cmc
jp
pushf
das
mov
por
sub
gs
add
arpl
cli
xor
(bad)
std
cdq
and
xor
(bad)
dec
xchg
(bad)
fcomp
mov
outs
dec
mov
jmp
int
adc
add
push
jmp
nop
shl
cmp
cmps
sub
push
hlt
jb
add
loopne
(bad)
ror
pop
mov
pop
std
inc
xchg
sbb
(bad)
jo
mov
ins
xlat
adc
xchg
mov
pop
push
pop
inc
dec
retf
fisttp
fdivr
ss
mov
or
ins
jg
cmp
push
sub
sbb
iret
std
je
jle
push
and
ss
mov
or
or
call
push
(bad)
pop
xchg
mov
xchg
pop
inc
sar
adc
movs
gs
test
push
push
gs
adc
inc
js
sbb
jmp
xchg
or
xor
push
int
cwde
xlat
arpl
div
cmp
fdiv
test
das
push
sti
push
or
test
test
in
sub
retf
push
imul
push
cmps
jae
retf
in
lea
mov
or
push
or
push
mov
sbb
push
stos
sbb
mov
jno
dec
cmp
mov
jle
(bad)
ss
sbb
and
les
xor
lahf
xor
push
test
mov
push
jmp
mov
mov
inc
je
and
sub
cld
aam
shl
adc
inc
popa
fisubr
jns
out
adc
add
pop
jb
xchg
push
pop
outs
or
mov
or
mov
inc
mov
and
inc
dec
push
test
cmp
fs
cmp
mov
stos
jle
add
pushf
loop
mov
imul
xchg
fidivr
bound
pusha
inc
fs
mov
icebp
fidiv
mov
adc
dec
retf
xor
mov
jne
mov
sub
lahf
bound
not
mov
jmp
xchg
mov
mov
in
aas
shl
out
pop
js
fneni(8087
sub
in
xor
rcr
mov
mov
add
stos
in
jnp
pop
mov
and
pop
cmp
imul
lock
pop
mov
or
xor
push
and
test
sbb
setne
xchg
shr
push
xchg
bound
mov
mov
and
adc
(bad)
aaa
xchg
sub
inc
jp
stos
mov
cs
mov
mov
out
fistp
cmp
jg
add
lods
mov
arpl
not
mov
mov
jb
jbe
jmp
nop
stc
cmp
dec
idiv
ins
push
stos
daa
xchg
jmp
xchg
pop
lods
sti
jl
test
lds
stc
xchg
sbb
lahf
mov
dec
jmp
and
in
inc
hlt
ret
mov
dec
out
retf
jg
retf
xor
(bad)
cld
and
sbb
in
push
and
pop
fistp
call
or
jbe
push
std
cmp
adc
jae
repnz
(bad)
jecxz
sti
mov
arpl
(bad)
out
mov
add
push
xchg
adc
jae
sahf
pop
jb
cmp
retf
inc
inc
mov
cwde
sbb
pusha
pop
scas
adc
imul
xchg
push
inc
and
ret
test
daa
push
sub
adc
cmp
xor
clc
out
adc
ins
push
scas
das
pop
fs
adc
pop
mov
dec
in
adc
xchg
cmp
adc
mov
rol
cdq
test
push
mov
mov
push
mov
sbb
mov
(bad)
leave
outs
dec
(bad)
jle
iret
add
mov
sbb
lahf
in
mov
js
xchg
sub
mov
push
(bad)
mov
test
xchg
in
rcr
fistp
jne
dec
xchg
add
jmp
int3
sub
aam
mov
inc
retf
mov
cs
jmp
outs
in
call
mov
inc
ficomp
jno
push
aas
nop
jg
in
add
(bad)
pop
or
inc
push
pusha
sbb
push
sbb
adc
test
bound
cld
inc
int
not
fs
loop
lds
iret
and
mov
fnstenv
sbb
pmullw
xor
div
inc
mov
inc
fnstsw
and
add
push
lea
stos
std
mov
mov
imul
movs
call
inc
stos
jle
test
cmc
jne
jno
xchg
mov
arpl
cmp
cs
fist
adc
repnz
sub
ds
xchg
inc
retf
cmp
mov
dec
push
shl
bound
jle
add
pop
or
xlat
sbb
pop
fist
arpl
inc
stc
sahf
push
mov
shr
ins
imul
jecxz
out
cmp
inc
sbb
shr
dec
inc
lea
mov
mov
rcr
adc
popf
cmp
nop
fisubr
mov
mov
das
fsubr
and
addr16
or
retf
in
fcmovb
inc
mov
mov
ret
cdq
retf
mov
add
or
fstp
inc
cs
fstp
retf
loope
push
outs
ins
ja
dec
fnstcw
inc
cmp
addr16
sub
mov
dec
dec
rol
je
int3
not
mov
sub
iret
sbb
push
iret
retf
clc
aaa
mov
jecxz
leave
sti
pop
dec
or
jge
add
pop
iret
xchg
out
scas
clc
push
(bad)
mov
fwait
repnz
mov
out
jae
adc
ror
adc
shl
mov
imul
and
paddq
lock
or
scas
cmp
repz
xchg
test
mov
xor
pop
push
in
pop
dec
jl
jg
in
jecxz
pop
adc
cmps
or
sti
dec
out
push
xor
in
jp
push
imul
jne
mov
enter
(bad)
fidiv
stos
fldcw
mov
inc
fidiv
(bad)
jo
add
and
fwait
jecxz
mov
daa
dec
add
xchg
fimul
lock
lock
mov
gs
dec
pop
sub
jb
(bad)
push
imul
sub
scas
inc
add
jb
fwait
pop
xchg
pop
scas
mov
aaa
mov
sar
movs
repnz
xchg
lock
xchg
sbb
jae
ret
les
mov
mov
and
fsub
shl
jl
aad
leave
or
mov
dec
jg
icebp
or
lea
outs
dec
jmp
call
rcl
dec
stos
inc
inc
movs
push
pop
jecxz
pop
push
jp
adc
loope
les
push
dec
add
jnp
push
cmp
xchg
ja
je
fsubr
daa
outs
dec
push
in
push
push
inc
sbb
movs
mov
push
jno
(bad)
push
shr
add
loopne
stc
cwde
(bad)
xor
imul
adc
mov
jle
jg
mov
push
loopne
xor
cld
mov
in
mov
cmp
lods
loop
scas
rcl
int3
or
jnp
mov
pop
idiv
int3
or
xchg
loope
dec
repnz
add
add
pop
popf
fiadd
shl
shl
in
je
shr
xchg
xchg
lea
enter
xor
scas
sub
fnstcw
sahf
pop
sbb
pop
jmp
ja
or
call
adc
mov
mov
mul
jno
pushf
pop
test
push
test
mov
stos
and
lahf
inc
icebp
nop
lods
imul
enter
hlt
jbe
pop
mov
aaa
jl
cs
test
mov
sub
out
bound
pop
in
or
jno
pushf
cwde
xchg
jnp
push
mov
sbb
stos
jb
fidiv
mov
and
add
(bad)
(bad)
loopne
stc
je
rcl
lods
mov
test
mov
in
das
mov
mov
(bad)
stc
add
enter
and
aam
rol
cmps
add
jecxz
aam
mov
sub
cdq
popf
in
mov
ds
pop
imul
jnp
mov
and
movs
inc
gs
cmp
jmp
inc
xchg
test
mov
jne
sub
mov
idiv
(bad)
loope
in
and
sub
nop
lock
push
in
call
dec
dec
test
stos
mov
push
inc
mov
xchg
and
pop
jmp
mov
cmp
inc
cmp
dec
mov
mov
sbb
pop
fwait
test
push
scas
mov
cmp
dec
jge
jb
pop
cmp
call
dec
popf
addr16
sar
cmp
in
push
jmp
adc
xlat
xor
mov
push
in
pop
aaa
add
ja
fidivr
xchg
ja
sbb
(bad)
xor
dec
push
mov
sub
xchg
enter
loopne
int
cmp
jmp
paddd
mov
xchg
xchg
jae
inc
push
mov
mov
and
into
pop
idiv
xchg
or
scas
and
fstp
cmp
mov
das
adc
mov
clc
pop
xchg
leave
and
pop
scas
ins
xchg
imul
xor
adc
xor
in
adc
call
and
mov
push
add
jmp
xor
shl
es
aas
cmp
aad
jno
mov
fld
aad
call
psllw
jmp
out
mov
add
jecxz
jecxz
hlt
xor
mov
in
fiadd
popf
ss
cmps
loopne
test
mov
and
jne
call
outs
or
or
xchg
sbb
dec
test
cmp
mov
sahf
push
mov
mov
lods
push
das
sbb
stos
fxch
stos
mov
out
mov
xchg
shr
push
sbb
retf
out
mov
push
div
fldlg2
repz
mov
out
xor
inc
add
add
push
xor
inc
push
out
push
jg
and
jmp
(bad)
pop
sti
adc
xor
pop
out
movs
int3
call
xor
cmc
inc
test
loop
sub
and
cmps
out
shl
sbb
mov
(bad)
out
fdivr
add
js
xor
jl
lea
pusha
mov
inc
cmp
xor
jne
pop
pop
xor
mov
lds
ins
shr
rcr
jns
retf
jecxz
cdq
scas
cli
mov
mov
mov
push
aaa
pop
cdq
(bad)
ss
(bad)
dec
outs
mov
test
ins
enter
mov
sub
lds
std
xor
retf
btc
add
mov
push
mov
xor
push
mov
xchg
js
bound
aas
pop
test
sahf
das
fstp
cwde
dec
js
ja
xchg
stc
or
sti
into
pop
cmp
call
xchg
sub
push
repnz
pop
cmps
cmp
fist
adc
aaa
pushf
mov
cmp
(bad)
movs
loopne
fs
sub
fs
ror
sti
(bad)
fldenv
jb
sbb
ffreep
(bad)
popa
xchg
out
cli
cld
xor
jno
or
push
stc
aam
mov
cmp
mov
sbb
pop
mov
cld
lahf
push
in
pop
pop
pop
popa
adc
das
test
jne
adc
das
into
outs
(bad)
dec
out
popa
cli
mov
ret
ja
add
bound
test
cld
(bad)
(bad)
jp
inc
mov
shl
stos
or
dec
cli
mov
mov
ret
aaa
push
mov
dec
xchg
test
pusha
pop
test
mov
mov
fnsave
sbb
fldl2t
pop
out
mov
add
xor
inc
fsub
imul
fwait
xchg
or
outs
stos
pop
(bad)
stc
push
dec
xchg
jmp
imul
add
jp
jmp
test
je
sbb
mov
lds
xchg
jne
xor
stos
jb
test
scas
lock
mov
adc
or
push
sbb
leave
dec
xchg
mov
mov
or
mov
push
pop
cmp
push
mov
jg
loopne
pop
mov
cmp
mov
std
(bad)
jmp
push
mov
xchg
cmp
shl
mov
pop
mov
lods
or
leave
dec
rol
fdivr
stos
je
das
inc
ss
push
scas
ror
popa
std
lods
in
inc
cmp
ja
push
mov
jg
ja
cmp
cmp
sbb
pop
mov
lods
test
dec
(bad)
test
adc
sahf
and
jns
ds
dec
loope
clc
retf
jae
ret
fadd
jmp
pop
retf
div
addr16
sbb
dec
clc
and
jg
out
cmp
jne
push
push
les
adc
fistp
gs
js
rcr
ds
inc
mov
adc
or
add
mov
push
sbb
shr
push
icebp
and
cmp
(bad)
cmp
pusha
push
push
xor
mov
xchg
pop
dec
cmps
xor
mov
icebp
jecxz
data16
jge
fs
xor
loop
mov
pop
mov
cmp
jae
mov
ins
sbb
mov
xchg
mov
fsubr
mov
and
push
cld
out
loopne
or
adc
mov
adc
xor
jmp
fadd
pop
cdq
and
xor
out
mov
and
mov
mov
test
repnz
dec
rol
pop
lea
mul
retf
adc
xor
xchg
inc
pop
or
adc
pop
xchg
xlat
xchg
jg
cmp
adc
push
mov
push
std
jge
je
shl
fimul
xor
and
je
sub
scas
lods
syscall
pcmpeqd
sbb
push
push
and
add
and
ins
(bad)
mov
inc
fadd
cmp
js
stc
and
adc
xlat
scas
sub
jg
xlat
fs
fldcw
(bad)
and
fldenv
ins
dec
sbb
or
cmc
int
or
xor
loopne
push
xor
iret
jb
inc
pop
addr16
push
xor
cmps
popa
xchg
push
jne
ror
dec
jo
xchg
and
ja
dec
imul
gs
xor
adc
ror
mov
inc
fsubr
jle
xlat
sbb
pop
mov
mov
pusha
ins
mov
ss
lahf
and
in
xor
jne
(bad)
fdiv
pop
add
hlt
jnp
mov
iret
push
sahf
and
sbb
dec
cli
pusha
daa
(bad)
js
fist
mov
jne
fsub
leave
inc
sub
or
std
add
sbb
(bad)
mov
pusha
sub
add
mov
jnp
ins
cmps
scas
dec
out
pop
lock
cmps
jno
lods
out
enter
xor
or
int3
cmp
push
jmp
cwde
out
aas
pop
xchg
mov
jae
repz
shl
cmp
jmp
jge
popf
lea
pop
sahf
loopne
iret
out
jne
imul
inc
rcr
ror
sti
clc
dec
pop
je
movs
ds
jo
pusha
outs
mov
out
mov
(bad)
cmp
enter
in
inc
icebp
fs
mov
and
retf
retf
inc
aas
inc
adc
or
(bad)
adc
adc
mov
sub
clc
stos
inc
in
cli
inc
mov
ins
(bad)
shl
(bad)
aam
call
jno
int3
mov
loope
les
xchg
pop
dec
pusha
dec
inc
cdq
cmc
mov
jbe
xlat
dec
call
and
cld
jg
adc
out
shl
xlat
sbb
js
daa
fnstsw
neg
mov
cdq
pop
cs
imul
mov
xchg
add
cld
popa
cmp
xchg
daa
push
lahf
ins
cmp
test
xchg
je
out
mov
je
sub
jle
sbb
fiadd
ror
adc
retf
cmps
mov
cld
mov
retf
push
pop
cmps
inc
jmp
cmp
jae
das
test
les
fimul
sbb
push
mov
jle
mov
mov
ins
push
jg
cmp
mov
cmp
ss
popf
push
daa
movs
(bad)
cld
sub
inc
pushf
outs
inc
or
loopne
dec
pop
stos
mov
adc
mov
ret
pop
mov
or
daa
sahf
mov
pop
or
iret
push
inc
rcr
pusha
scas
lds
push
into
push
(bad)
int3
sti
mov
xchg
inc
in
mov
mov
movs
stc
(bad)
adc
cmp
mov
cmc
sub
jge
test
into
pop
popa
add
push
aam
icebp
fiadd
pushf
push
cwde
cdq
push
(bad)
mov
sub
icebp
mov
cmp
xor
fwait
ins
sub
scas
push
adc
lahf
pop
int3
rcl
clc
jge
outs
cmp
(bad)
mov
and
push
ret
jge
cld
mov
inc
xor
dec
sub
retf
rep
(bad)
mov
jns
push
inc
sub
cli
inc
dec
das
xor
sub
inc
sbb
js
dec
dec
arpl
xchg
jl
jmp
bswap
jno
push
dec
ret
add
dec
mov
icebp
sbb
mov
mov
sbb
add
mov
mov
mov
sub
aad
gs
sbb
idiv
in
adc
mov
xor
mov
pop
pop
xor
fdivr
sbb
xor
inc
aas
jl
adc
lea
or
mov
lock
stc
test
clc
loop
push
pop
mov
(bad)
or
daa
fld
int3
mov
loope
sbb
push
xor
or
lods
sub
in
test
inc
xchg
push
inc
sub
pop
xchg
shl
jle
inc
mov
cmc
mov
hlt
aas
adc
movs
or
aad
xor
xchg
mov
jns
xchg
repnz
cmp
jo
aas
sub
mov
mov
xchg
sbb
sub
test
cli
repz
fst
adc
add
jecxz
fld
ret
mov
pop
jo
push
repnz
or
xlat
mov
mov
imul
xchg
test
adc
fidiv
jbe
jp
jmp
add
out
int3
inc
add
push
mov
cld
jge
shl
pop
test
cmc
iret
in
pop
push
mov
pop
add
jmp
xor
push
test
jg
sbb
in
test
fld
dec
sbb
out
xchg
popa
and
mov
int
or
mov
sub
add
inc
sub
mov
jne
cwde
sbb
pop
mov
pusha
xchg
add
jnp
pop
xchg
nop
mov
mov
popf
push
out
jmp
cmps
xchg
daa
inc
add
aad
inc
icebp
jne
add
shl
jge
dec
add
mov
and
sub
sbb
cmps
mov
mov
mov
cmps
push
aaa
pop
xchg
mov
daa
xchg
pop
and
cmp
xchg
push
es
and
repz
sub
push
ins
xchg
push
mov
sub
cmp
(bad)
sub
mov
inc
cmp
xor
mov
(bad)
pop
xor
xor
test
inc
mov
cdq
sub
nop
sbb
mov
test
jae
js
pop
gs
nop
or
pop
dec
fiadd
mov
xor
mov
jb
mov
sbb
(bad)
push
mov
inc
(bad)
aam
sbb
jo
dec
cmp
jg
push
jmp
or
push
shr
push
xchg
sbb
fbstp
or
aaa
push
sar
mov
call
pop
sub
(bad)
movs
test
jmp
aas
ret
xor
in
xor
push
jle
push
jge
push
dec
inc
sub
jne
xor
jno
retf
outs
clc
ret
mov
nop
cmp
dec
leave
nop
inc
into
adc
cmp
leave
int3
cwde
mov
daa
jmp
xchg
mov
dec
cld
mov
int
mov
xchg
xchg
stos
cmp
mov
xchg
push
sbb
out
mov
lods
push
aam
mov
std
sahf
xchg
cmps
lods
mov
or
div
popa
rcl
push
mov
sahf
xor
out
mov
push
mov
iret
test
mov
stos
xor
rcr
cmp
and
and
repz
fcomp
loop
mov
or
xchg
arpl
mov
bound
pop
push
sbb
shr
mov
fidiv
dec
push
xchg
and
in
arpl
add
fld
cmp
and
mov
popf
and
aad
out
pop
es
cmc
jae
xchg
ret
ja
fiadd
and
sub
sbb
push
and
push
call
or
data16
mov
jno
fwait
add
xchg
cmp
bound
add
outs
(bad)
lea
cld
sub
fldenv
fidivr
push
sbb
dec
stos
and
test
xchg
jle
out
sub
std
ds
inc
mov
in
push
lahf
gs
cmps
mov
dec
push
lock
push
push
fld
sti
xchg
or
in
sub
jne
ds
sbb
mov
fs
retf
or
inc
or
movs
adc
and
xor
sbb
aas
mov
popa
out
pushf
cmps
inc
push
ja
(bad)
arpl
loope
ins
clc
jae
push
into
or
inc
cmps
stc
pop
mov
test
int3
arpl
pop
push
sbb
mov
push
add
jb
mov
mov
sti
pop
int3
inc
inc
lea
push
les
push
mov
mov
outs
pop
js
and
call
lock
fisttp
mov
mov
push
out
test
sahf
lods
addr16
mov
mov
data16
arpl
or
cld
ins
inc
add
repnz
pop
(bad)
push
or
sbb
cmp
add
or
mov
cmps
adc
test
in
rcl
push
into
push
inc
dec
loop
sahf
pop
xlat
neg
lahf
imul
sub
mov
jnp
hlt
sbb
pop
popf
adc
cmp
fisub
xchg
mov
xchg
(bad)
jecxz
loopne
cmovo
test
push
sti
mov
pushf
lahf
or
icebp
inc
mov
movs
mov
lea
xor
shr
dec
xor
sahf
lahf
je
mov
jmp
(bad)
scas
mov
fxch
xchg
cli
sub
out
sbb
jbe
neg
popa
stos
mov
xor
add
(bad)
adc
lods
push
leave
mov
fisub
inc
les
xchg
add
and
js
or
sbb
rcl
xchg
inc
xor
pop
daa
dec
push
inc
cmp
cmps
cmp
cmp
fdiv
sbb
out
adc
aad
xchg
je
jo
pop
lock
xor
xchg
cmc
push
sbb
mov
adc
or
pop
adc
nop
jb
adc
(bad)
pop
nop
imul
mov
ret
loopne
push
fild
xchg
mov
fidivr
inc
push
shr
inc
mov
test
movs
dec
adc
and
pop
sar
mov
jp
mov
add
fnstenv
mov
xchg
out
add
je
jl
je
icebp
dec
call
daa
xchg
rcl
inc
shr
adc
and
or
add
stc
out
daa
push
ficomp
xor
(bad)
clc
xor
mov
jno
jbe
jne
(bad)
jl
or
pop
and
adc
dec
sbb
daa
test
fidivr
or
dec
cwde
pushf
loope
retf
loope
jo
dec
ficom
test
dec
cmc
dec
shr
xchg
push
loope
pop
mov
xchg
imul
iret
mov
mov
scas
dec
cmp
out
adc
scas
jle
adc
jo
fldcw
xchg
adc
in
xchg
(bad)
push
in
cwde
cmp
cmps
movs
and
fild
arpl
jnp
mov
cmp
push
xchg
dec
mov
cmp
cld
push
ffree
jmp
mov
xchg
xor
inc
inc
push
pop
jo
(bad)
sbb
add
(bad)
repz
cwde
inc
std
push
jmp
cmp
jp
movs
ret
jne
add
fidiv
lea
pop
jle
sbb
cld
xlat
dec
mov
dec
sbb
retf
xor
xlat
call
fstp
stc
inc
js
and
add
je
stc
xchg
xchg
(bad)
sti
outs
data16
das
repnz
xchg
das
aad
jno
mov
mov
retf
cdq
rcr
add
pop
push
jge
aas
jo
jns
dec
jne
add
adc
jno
and
addr16
gs
xchg
jle
inc
mov
mov
or
add
loop
(bad)
push
ss
cwde
addr16
outs
jge
sub
(bad)
stc
dec
and
xor
add
rcr
(bad)
fild
and
sub
clc
push
pop
sub
jmp
pop
pop
daa
push
pop
daa
bswap
jecxz
addr16
mov
gs
jge
xchg
cmp
stos
xchg
and
jb
mov
outs
mov
xor
jg
cli
hlt
mov
fwait
in
push
dec
bound
adc
jp
inc
add
rcl
mov
cmp
sti
sbb
push
scas
test
xor
jne
inc
nop
retf
neg
sti
dec
dec
mov
mov
scas
sahf
loopne
or
clc
pop
mov
bound
and
xchg
xchg
sbb
lahf
mov
leave
sbb
dec
mov
cdq
jp
mov
cli
mov
dec
fist
add
pop
and
sub
mov
out
xor
test
xchg
mov
inc
or
pop
dec
movs
lods
not
mov
enter
popa
sub
pop
pop
sub
mov
int3
out
fst
jo
jle
sub
and
xchg
pop
sbb
stc
stc
push
sbb
mov
and
cmp
aaa
pop
cmp
ja
call
xchg
pop
cs
pop
mov
aam
cmp
pop
mov
cmp
adc
add
xor
call
xchg
(bad)
pop
xchg
fs
sbb
add
or
dec
push
sbb
xchg
sub
jnp
dec
retf
xchg
pop
pop
mov
xchg
add
in
inc
push
sbb
fild
shl
xor
test
mov
mov
cwde
dec
lods
stos
adc
inc
cmp
dec
mov
call
pop
mov
add
mov
mov
aad
ret
aad
ins
pop
gs
fistp
mov
ja
xchg
sbb
sub
inc
mov
xor
xor
xchg
ds
imul
adc
(bad)
mov
xor
outs
mov
sub
push
sbb
inc
xchg
jp
adc
pop
cld
xchg
dec
push
cmp
cmp
leave
sbb
dec
mov
xchg
out
les
scas
fmul
scas
xchg
(bad)
addr16
retf
mov
mov
in
and
test
push
jp
js
fcmovnu
inc
shl
and
xchg
xchg
in
add
xchg
lea
(bad)
sub
jp
adc
in
add
jae
std
jp
jns
shl
and
mov
inc
test
fucom
sbb
mov
sar
and
mov
xchg
cld
pop
inc
jnp
ds
rol
sub
sti
int3
and
inc
sub
xchg
cs
push
retf
(bad)
cmps
and
loop
in
jecxz
jl
adc
dec
into
push
sbb
pop
lea
pop
(bad)
or
sbb
fs
stos
fistp
mov
sahf
jecxz
xchg
mov
mov
sub
into
lahf
push
ret
movs
fcom
(bad)
mov
aam
retf
mov
(bad)
cmp
test
cmp
push
cmp
lds
fldcw
sub
cmp
call
rcr
pop
scas
hlt
iret
push
mov
or
or
fisub
sbb
sub
in
mov
push
inc
es
cmovno
xchg
test
retf
hlt
aaa
shl
repz
mov
adc
adc
test
or
addr16
pop
jnp
popf
mov
ds
xchg
pop
xchg
in
dec
nop
mov
push
adc
jno
mov
test
pop
or
neg
mov
adc
xchg
mov
mov
push
rol
pop
pop
mov
bnd
push
and
cmps
ficomp
int
pop
hlt
mov
cmp
cmp
ds
loop
lds
mov
retf
cdq
xchg
sub
xchg
push
(bad)
push
repz
cld
lahf
pop
aaa
retf
adc
inc
sub
(bad)
cmps
mov
fistp
shr
xchg
add
adc
xor
xor
retf
xor
std
(bad)
das
fmul
in
pop
mov
dec
das
mov
(bad)
aas
cmp
mov
mov
xchg
mov
jnp
sar
ror
dec
icebp
lods
sbb
movs
jns
ffreep
xlat
cmp
cmp
jo
sbb
inc
(bad)
cmc
or
retf
inc
jae
push
push
cmp
imul
in
mov
sbb
xchg
dec
addr16
add
adc
retf
test
ins
dec
pop
sub
lds
cmp
push
and
loope
cmc
pop
mov
ins
retf
movs
cdq
sbb
jb
out
inc
jmp
scas
loope
es
repnz
xor
mov
fs
scas
in
mov
jmp
shr
mov
(bad)
sub
sahf
hlt
mov
pushf
(bad)
repnz
or
imul
fwait
add
int
lock
loop
test
or
mov
ss
fs
popa
pop
xchg
sbb
push
xchg
aam
pop
adc
dec
stos
xchg
fnstenv
addr16
or
pop
aam
jmp
int3
xor
cmp
sti
jae
inc
and
rcr
fimul
call
cmps
mov
pop
inc
clc
stos
sbb
pop
or
rcl
dec
push
inc
mov
test
add
test
cmps
jp
int
fistp
inc
in
mov
ss
stc
mov
add
adc
mov
bound
adc
movs
aad
stos
mov
sub
xor
lea
retf
cmp
sub
(bad)
hlt
xor
(bad)
mov
cmp
push
mov
or
xchg
outs
push
inc
repnz
push
movs
push
lea
in
retf
jp
or
cmp
fsub
das
hlt
es
je
clc
rcr
mov
je
push
retf
popf
loope
test
dec
int
and
mov
ret
pop
or
mov
hlt
add
and
pop
mov
or
fldcw
fcom
mov
xchg
xchg
aaa
mov
lar
pop
das
call
in
imul
loope
jp
lea
dec
pop
test
addr16
neg
xchg
cmc
lock
aaa
push
sti
out
xchg
inc
add
push
push
fmul
dec
inc
cmps
inc
sbb
lea
repz
ja
and
mov
push
call
push
addr16
(bad)
imul
xchg
pop
mov
js
lods
cs
push
aas
mov
xchg
xchg
jecxz
push
stc
xchg
xchg
test
sbb
or
movs
and
mov
xlat
dec
es
xchg
div
inc
jns
and
sbb
aaa
cs
ss
mov
int
pop
pop
je
test
rol
jg
es
retf
sub
push
and
sub
fstp
dec
dec
xchg
jne
mov
or
pop
sub
or
or
push
loope
out
pop
pop
shl
mov
mov
adc
mov
repnz
cmps
int3
scas
pop
or
mov
cdq
fistp
jbe
sub
add
dec
push
pop
xchg
jae
and
imul
icebp
loopne
rcr
pop
mov
mov
jl
mov
leave
and
xor
scas
call
(bad)
call
push
dec
fist
ret
mov
xchg
lock
add
call
lea
xor
jl
adc
add
out
cmp
and
jmp
repnz
stc
sbb
lods
cld
inc
pop
sub
pop
movs
sbb
movs
dec
imul
outs
pop
inc
mov
clc
shl
inc
fwait
mov
and
std
mov
test
jl
fisttp
ja
daa
xor
mov
in
pop
das
mov
lods
hlt
dec
out
popf
js
loopne
mov
inc
cmp
out
xor
dec
scas
push
xchg
clc
fisub
loope
push
retf
arpl
and
fsubrp
sub
ja
pop
xor
dec
unpcklps
push
retf
adc
das
mov
stos
out
or
jl
(bad)
sar
lea
lock
adc
mov
sbb
arpl
mov
sbb
pop
dec
mov
enter
popf
sbb
dec
mov
movs
xor
adc
fild
push
cmp
xchg
pop
call
sub
loopne
inc
ds
retf
jo
xchg
mov
(bad)
mov
adc
push
pop
cmp
push
jo
ins
(bad)
aad
sahf
aad
sub
push
sbb
and
test
cli
rol
movs
retf
(bad)
pop
shl
int3
(bad)
std
daa
mov
stos
dec
jmp
adc
retf
popa
aaa
xor
sbb
daa
(bad)
jl
cli
lds
in
(bad)
clc
arpl
pop
rcl
cwde
xchg
push
repz
test
mov
mov
push
out
loopne
or
imul
test
sbb
mov
push
sub
push
imul
jns
call
sbb
mov
aad
cmp
int3
inc
(bad)
adc
jnp
mov
aad
cmp
sbb
xchg
dec
add
out
adc
pop
inc
or
add
(bad)
push
les
push
add
test
jb
xor
xor
sahf
sahf
shl
(bad)
dec
sbb
into
shl
xor
xor
movntps
(bad)
xor
aas
lock
push
and
cwde
(bad)
adc
inc
add
add
pushf
xchg
lea
adc
cmp
mov
push
fst
add
repz
mov
std
cmp
fistp
pusha
push
cli
cld
inc
xor
cmp
inc
mov
lea
into
pop
jo
lods
adc
into
jge
mov
dec
cmp
add
sub
std
arpl
pop
lahf
push
in
cmps
mov
ds
sub
(bad)
cmp
mov
add
popf
adc
(bad)
ins
cmp
nop
mov
xchg
pop
(bad)
ins
xor
stos
cwde
sbb
dec
or
and
in
data16
sar
out
or
jl
lds
out
loope
mov
(bad)
loope
push
push
mov
iret
fs
aam
push
pop
cwde
daa
imul
mov
sub
cdq
cmp
pusha
and
dec
pop
loopne
push
or
es
add
or
loopne
mov
and
mov
out
jmp
jg
jnp
add
ret
mov
loopne
push
shl
add
cs
test
imul
xor
into
push
push
inc
(bad)
pop
or
test
add
repnz
push
pop
jp
xor
jmp
out
out
test
jb
retf
mov
add
cmp
push
and
out
xor
aaa
std
xchg
scas
adc
push
and
dec
pop
jae
shr
mov
jbe
add
mov
jl
out
js
test
inc
ret
and
mov
dec
xor
fdiv
sbb
out
addr16
test
xchg
push
into
cmc
push
stc
mov
pusha
adc
cmp
test
pop
and
fisub
or
(bad)
jnp
call
sub
pop
std
push
xchg
in
mov
in
fadd
jecxz
push
pop
lahf
pop
mov
inc
or
icebp
mov
aad
push
dec
add
ret
hlt
add
jns
push
mov
xchg
loop
mov
out
mov
pop
xor
movs
add
jbe
sar
cmp
loopne
and
dec
adc
in
dec
gs
repz
fnstsw
das
and
stos
push
pop
push
or
movs
cmc
or
cli
mov
sti
add
popf
aaa
loopne
xor
push
mov
push
xor
hlt
iret
(bad)
loopne
mov
add
cmp
fwait
loop
mov
xchg
ins
xchg
dec
sub
inc
out
inc
mov
adc
dec
mov
xchg
iret
fstp
xchg
xor
xchg
dec
cmp
lock
lock
movs
lahf
jo
lds
add
dec
or
jmp
push
mov
addr16
frstor
repz
inc
push
sub
fsub
cmps
(bad)
dec
mov
push
aas
pop
xchg
sub
imul
(bad)
fcmovu
adc
adc
cmp
mov
sbb
shl
add
sbb
ds
mov
inc
xor
stos
js
clc
sbb
xchg
cmps
sbb
push
xchg
ja
sub
stos
fdiv
mov
aas
popa
dec
push
push
jb
inc
jge
loopne
mov
in
mov
mov
lock
or
cmp
add
inc
jmp
shl
xchg
dec
push
imul
mov
enter
xchg
test
mov
mov
mov
push
out
cmps
xor
call
leave
sbb
mov
mov
int3
mov
jge
adc
xchg
lods
push
jmp
(bad)
stos
add
cmp
orps
dec
fdiv
push
movs
push
and
and
out
sbb
xchg
rcr
push
sub
mov
ss
outs
inc
and
mov
std
add
mov
or
add
adc
addr16
int
xchg
adc
push
cmp
mov
xor
pop
pusha
mov
dec
add
inc
stc
add
pop
loop
lock
add
push
or
sbb
inc
int3
addr16
push
dec
and
jle
pop
push
sub
aad
popa
mov
mov
mov
fldcw
add
dec
sbb
xchg
jl
ret
int3
test
sbb
js
aas
mov
mov
test
pop
cmp
bnd
das
lods
mov
mov
dec
xlat
add
sti
popf
xor
fist
nop
adc
(bad)
loopne
jle
dec
ins
cmc
fcompp
into
popa
sub
jbe
jne
and
push
call
ds
lock
test
in
iret
dec
cmc
add
sbb
lods
in
inc
lods
mov
or
jmp
data16
push
dec
aad
out
popa
push
scas
and
test
out
mov
xchg
sub
add
cmc
xor
int3
shl
je
into
push
and
cmc
jl
cmps
dec
aam
sbb
and
jmp
cmp
test
into
add
out
dec
enter
and
cmp
out
sub
addr16
inc
rcr
sub
aaa
sub
test
jmp
stos
aad
push
stos
movs
or
cld
mov
inc
jmp
mov
repz
jne
test
add
gs
mov
int
dec
push
pop
lea
lods
mov
fcom
shl
inc
mov
addr16
test
adc
rcl
mov
push
(bad)
sar
repz
mov
and
gs
cmp
scas
jmp
ja
clc
mov
or
ror
pop
loopne
add
cmp
mov
xchg
mov
cld
and
or
sbb
shl
jbe
shr
cwde
push
mov
test
popf
xor
enter
dec
std
cwde
jo
sbb
pop
fisttp
add
loop
xor
mov
stos
sub
leave
shr
ins
push
pusha
push
hlt
mov
dec
in
out
jbe
hlt
sbb
scas
mov
gs
inc
fnsave
adc
test
jae
idiv
push
adc
(bad)
pushf
ss
xchg
bsf
dec
mov
dec
out
xchg
jae
std
std
and
shl
cs
and
add
(bad)
out
icebp
or
sti
push
add
in
test
cmps
push
(bad)
pop
pop
popf
or
(bad)
int3
popa
fst
cmp
adc
xor
pop
push
pushf
dec
dec
mov
scas
or
pop
je
jecxz
adc
inc
lods
sub
xor
inc
xchg
fisubr
enter
fcomip
pop
iret
dec
sbb
cmp
ret
xchg
xor
rep
iret
xor
pop
mov
inc
jecxz
or
or
xchg
adc
mov
sub
test
pop
xchg
stos
xchg
scas
call
mov
icebp
int
xchg
cld
push
inc
test
repz
xor
in
jmp
nop
inc
cmc
jno
jp
mov
adc
in
loopne
and
test
ror
jns
mov
ret
mov
cmp
or
shl
jne
sahf
in
push
loopne
lds
int3
cmps
sub
and
inc
stos
xchg
test
stos
mov
dec
adc
outs
rcr
ficomp
fdivr
add
and
fdivr
fcom
je
in
fcomi
sbb
fdivp
xchg
loopne
pop
loopne
mov
mov
sbb
(bad)
imul
(bad)
out
mov
(bad)
int3
lods
ins
jmp
iret
lods
xlat
inc
cwde
jb
mov
sub
fsub
dec
loope
sti
repz
hlt
aad
sub
add
fs
neg
dec
jns
jecxz
mov
push
mov
fld
(bad)
bnd
lds
ficomp
jl
cwde
out
inc
pop
or
push
push
sbb
adc
fiadd
lods
call
sub
sub
gs
scas
loop
pop
mov
push
or
gs
outs
mov
jo
dec
push
mov
out
and
cli
and
sbb
popf
mov
pushf
sbb
or
dec
push
or
pushf
pop
mov
push
inc
mov
xchg
test
jp
ja
jmp
inc
ja
aas
(bad)
jb
xor
fisttp
jb
cdq
pop
push
cs
popa
fstp
add
xor
bnd
cmps
push
pushf
dec
dec
jmp
arpl
ds
dec
retf
out
dec
cmp
paddq
mov
jo
push
addr16
jne
mov
leave
sbb
inc
(bad)
adc
and
cmc
jecxz
movs
repnz
shr
mov
or
push
daa
sbb
cwde
jge
add
lock
and
arpl
or
repz
(bad)
adc
or
sub
sub
jnp
jmp
into
pushf
ret
xchg
xor
sub
sub
adc
fcmovnbe
movs
and
mov
cmps
dec
jle
hlt
add
bound
mov
inc
sahf
iret
inc
and
cmps
push
pushf
aam
ds
jecxz
jns
sub
pop
rol
pop
jge
add
cld
pop
hlt
not
sub
popf
push
dec
jg
popa
inc
push
neg
add
aaa
fisub
iret
mov
repz
jp
scas
push
push
dec
sub
sbb
push
jbe
jb
clc
cmps
mov
cmp
iret
fmul
xchg
xor
out
cmp
sahf
mov
sahf
mov
(bad)
es
add
adc
int
rcl
push
call
push
ror
adc
cmp
in
push
rol
jae
xlat
inc
cmp
jmp
add
mov
std
xchg
imul
push
cmp
push
xor
sub
out
push
inc
pop
ret
adc
or
mov
test
(bad)
loop
dec
cmp
lods
popa
inc
or
pusha
or
mov
jmp
adc
xor
xchg
mov
or
lds
mov
inc
ins
cmp
stos
cli
fstp
imul
jnp
cwde
lods
into
push
cdq
mov
aas
ss
loope
dec
fild
clc
(bad)
popf
(bad)
es
bound
test
xchg
(bad)
adc
jne
cmp
sub
hlt
int
cvtps2pi
cmc
mov
sti
adc
jno
call
lea
adc
add
loopne
add
pop
adc
inc
jbe
dec
push
push
mov
cmp
mov
add
jle
sbb
xor
cdq
cmc
push
aam
dec
dec
adc
iret
retf
ins
cmc
jecxz
pop
add
or
jbe
jle
lods
cmp
mov
fs
mov
mov
std
adc
mov
jle
ins
and
xchg
pop
call
and
xchg
pop
xor
dec
and
stc
mov
cmp
imul
inc
sub
es
xchg
sbb
pop
mov
push
inc
and
sub
mov
stos
jecxz
mov
pop
pop
(bad)
pop
adc
push
mov
mov
push
pop
cwde
enter
sbb
jge
sub
dec
jp
mov
mov
scas
push
pop
sbb
cmps
test
jnp
adc
sbb
pop
cs
sub
into
mov
pop
out
rcl
pop
jmp
cmp
add
pop
mov
xchg
jno
ins
ins
mov
or
and
xchg
push
into
cdq
pusha
cdq
sub
test
mov
dec
movs
or
aam
mov
loop
fimul
fistp
mov
sub
push
or
sbb
ss
test
mov
jge
push
call
cmps
call
out
into
out
xchg
mov
gs
and
fcmovnu
mov
inc
jnp
sar
aaa
repnz
sbb
mov
aaa
or
int
(bad)
cdq
arpl
adc
mov
(bad)
cmps
or
mov
icebp
loop
outs
loop
sbb
mov
sub
add
add
xchg
adc
jnp
into
je
inc
arpl
jmp
loop
push
push
add
xor
xor
dec
mov
popf
pusha
and
jle
cmp
fldenv
js
xor
sbb
loopne
cs
into
and
xor
push
mov
ins
jecxz
dec
xor
xchg
das
enter
jbe
jne
fbstp
icebp
or
or
fdiv
mov
sti
xor
adc
stc
sbb
stos
cli
add
gs
ror
sti
pop
cwde
retf
dec
jp
enter
sbb
jbe
scas
and
dec
imul
mov
jb
lock
jnp
pop
xor
movs
ja
jle
add
test
mov
cs
stos
sub
sub
xchg
xor
and
push
or
outs
sub
clc
adc
test
inc
mov
inc
push
pop
pop
inc
xor
jno
jnp
shl
dec
cwde
test
sbb
std
lods
jnp
retf
cmp
call
push
mov
add
ss
inc
cld
lea
scas
aad
mov
addr16
gs
push
mov
das
and
xor
test
dec
and
adc
mov
mov
add
or
nop
les
adc
(bad)
or
addr16
mov
dec
in
inc
and
iret
imul
sar
pop
jb
fild
jns
sbb
and
movs
sbb
push
cmp
jns
xchg
xchg
data16
mov
outs
outs
outs
xor
cwde
jmp
add
and
call
mov
add
daa
cmp
ret
add
xor
test
mov
stos
mov
mov
push
fld
test
push
mov
cmp
xor
inc
pop
mov
pop
out
jae
loope
jl
out
cmp
push
mov
loope
jae
mov
adc
retf
js
inc
ss
sbb
outs
xchg
jne
or
into
xchg
cmc
pop
(bad)
mov
imul
push
(bad)
xchg
xor
dec
rcr
popf
jle
sti
and
or
adc
adc
sub
pop
add
push
vcmpsd
repz
test
fs
(bad)
mov
pushf
sbb
aad
add
lods
pop
xchg
inc
loop
or
cwde
cmc
ja
or
sbb
cmps
paddusb
and
test
pop
mov
cmps
pop
int
sub
cdq
jge
mov
cmps
sub
push
ds
idiv
cmc
mov
outs
sbb
and
shr
in
xor
arpl
pop
call
pop
inc
shr
rcl
cmps
int3
pushw
xor
pushf
sahf
(bad)
sub
sub
not
call
sbb
push
cdq
jno
leave
ret
mov
mov
adc
pop
sbb
pop
movs
inc
cdq
pusha
push
(bad)
sti
push
arpl
pop
jbe
movs
in
(bad)
sbb
xor
push
inc
imul
add
jne
inc
and
inc
mov
xor
pushf
inc
in
mov
or
jge
fadd
lea
add
bound
inc
dec
xchg
adc
test
lahf
mov
jl
cmps
clc
push
bound
pcmpgtb
push
push
in
pushf
retf
enter
sub
dec
int3
test
inc
cmps
cld
add
div
mov
das
aaa
dec
pop
fidiv
clc
test
cmp
out
adc
mov
cmp
dec
ja
lods
int
adc
call
xor
add
sub
pop
test
rcl
mov
jecxz
pusha
daa
daa
dec
push
and
leave
loope
add
outs
cmp
mov
xchg
adc
dec
stc
push
cwde
cmp
push
in
aad
dec
jecxz
mov
add
xor
xor
bound
lods
or
xlat
adc
movs
ins
xor
cli
inc
sti
loope
lock
in
je
rol
fadd
scas
sbb
jg
pop
jo
or
lahf
out
jbe
jmp
int3
pop
pushf
fdivp
icebp
sub
pop
pusha
adc
mov
loop
push
push
test
or
clc
mov
mov
cmc
jae
push
jl
adc
adc
retf
mul
inc
cmps
xlat
loope
jno
jle
add
xchg
or
sub
mov
js
jae
pop
mov
ret
mov
test
fs
imul
in
or
test
nop
test
xchg
(bad)
mov
jp
cmps
jo
push
aad
mov
mov
retf
jnp
xchg
test
mov
test
popf
das
adc
push
and
sub
xchg
cmp
xor
mov
repz
push
in
fiadd
cdq
or
dec
pop
push
cmps
sar
dec
iret
nop
fidivr
mov
jge
xchg
je
jae
mov
loop
das
jb
jmp
lods
or
inc
dec
cwde
rcr
xor
mov
fild
inc
add
add
add
jo
jmp
inc
(bad)
xchg
mov
out
ja
sub
(bad)
xchg
inc
inc
leave
adc
sub
cmp
jmp
cmp
mov
pop
js
mov
adc
pop
lds
inc
adc
(bad)
push
lods
xchg
fisubr
jmp
movs
and
mov
test
or
dec
mov
and
mov
lods
inc
shl
inc
sbb
dec
sbb
cmps
add
test
and
xor
bound
test
push
sub
xor
ins
cdq
movs
add
sub
in
mov
inc
lods
push
ret
xchg
stos
cmp
inc
leave
xchg
fiadd
add
outs
inc
cmp
scas
jb
push
add
jae
or
pop
movs
pop
mov
mov
iret
lods
neg
leave
push
(bad)
push
xor
cmps
fcomp
pop
loop
add
xor
push
ins
inc
icebp
loopne
xor
pop
stos
add
cdq
adc
ret
cld
fild
xchg
sub
movs
dec
test
pop
dec
pop
push
mov
div
xor
out
lds
hlt
outs
test
lods
arpl
push
shl
(bad)
ret
and
mov
sub
pop
gs
or
cmp
dec
or
sub
push
sub
xor
or
in
test
rcl
mov
xchg
loope
jo
fist
jb
pop
inc
xchg
lods
mov
inc
sbb
pop
jecxz
in
mov
sbb
push
push
mov
pop
mov
push
dec
push
jl
outs
loope
and
test
mov
jp
inc
sti
outs
xor
fucomi
cmp
inc
jp
jg
data16
iret
xor
sub
daa
fcomp
xchg
lods
mov
mov
rcl
pop
cmp
lds
xchg
pop
jl
jo
mov
inc
call
add
stos
pop
dec
rcl
jmp
or
daa
adc
xchg
push
stos
sar
mov
jp
loope
mov
push
neg
(bad)
rcl
lds
adc
mov
sub
clc
popf
popf
and
repnz
mov
xchg
add
(bad)
daa
in
imul
cmp
jo
sub
adc
jo
test
retf
xor
hlt
jp
and
and
dec
mov
xor
sbb
jns
add
aam
sti
pop
or
fild
fisub
and
inc
sbb
cmc
and
les
inc
pusha
pop
push
shl
fs
sbb
pop
addr16
xchg
popa
ror
xchg
sbb
test
push
lahf
mov
and
mov
fcom
ds
dec
neg
adc
add
mov
icebp
sub
xchg
dec
pusha
aaa
aam
(bad)
adc
inc
mov
mov
mov
mov
lds
mov
lea
imul
pop
out
(bad)
cdq
idiv
sub
or
loopne
icebp
pop
xor
pushf
lods
addr16
pop
xor
cmp
push
movs
jp
push
sahf
dec
add
popa
adc
into
mov
(bad)
stc
(bad)
aam
or
ret
push
mov
pop
ret
mov
scas
ins
(bad)
and
test
xor
mov
into
sbb
xchg
cmp
xchg
cli
sbb
inc
fwait
lods
or
and
test
nop
les
xchg
adc
gs
xor
cmp
mov
(bad)
in
cmps
xchg
in
adc
test
inc
pop
push
mov
in
js
cmc
ror
xor
ins
pop
call
mov
dec
pop
cmp
or
dec
lods
xor
jmp
push
or
pushf
jge
sar
call
mov
test
fmul
aam
in
jmp
ins
push
pop
jne
jae
repz
mov
iret
jmp
push
sbb
fs
cmp
dec
aam
push
iret
mov
jge
mov
xor
rol
cld
add
inc
mov
jb
ror
fiadd
dec
div
je
mov
clc
push
(bad)
mov
push
jg
cmp
fwait
xchg
and
test
mov
ds
and
mov
loop
cmp
push
jns
adc
pop
push
imul
dec
aaa
aaa
and
cmp
xor
test
cwde
daa
xor
cmps
xor
sub
inc
xor
xor
call
cmp
lods
idiv
cwde
nop
stos
daa
xor
iret
daa
rcl
push
lahf
movs
pop
lds
jo
sti
mov
fsub
inc
fsubr
call
out
test
push
inc
adc
mov
outs
cmp
js
into
aaa
ins
popf
push
add
sub
in
out
push
pop
pop
ja
fnsave
add
pop
pushf
daa
inc
sbb
jne
int3
test
mov
dec
push
pushf
repnz
push
mov
pop
mov
inc
daa
sbb
test
push
loopne
repnz
(bad)
and
pop
movs
adc
or
movs
repz
popf
fmul
add
push
inc
enter
ret
push
mov
in
rol
cmc
ret
and
call
xchg
or
lods
mov
sbb
test
and
add
xchg
nop
dec
cmovae
cmc
in
lea
sbb
mov
fs
test
pop
fwait
add
xor
cmps
sbb
and
pop
sbb
imul
shl
push
in
mov
mov
jmp
dec
push
push
and
and
ja
leave
enter
stc
les
lods
cmp
mov
dec
scas
add
clc
ret
push
out
cli
int
ret
mov
stos
movs
push
retf
fstp
mov
jbe
aaa
in
imul
sub
call
les
aas
stc
stc
xchg
outs
inc
mov
sar
retf
sub
icebp
push
pop
mov
es
movs
out
leave
jae
sbb
xor
(bad)
leave
xchg
out
jecxz
frstor
(bad)
mov
adc
js
bound
cwde
rol
fistp
cmp
movs
bound
push
xorps
cwde
cli
mov
(bad)
call
xchg
jno
and
inc
adc
into
pop
lods
push
out
into
sub
lds
es
mov
fistp
push
sbb
jmp
stos
les
add
jg
push
fldl2t
xchg
leave
lods
fwait
pop
out
add
mov
xchg
xchg
mov
cmp
mov
jecxz
mov
pop
cmc
ins
ret
cwde
(bad)
call
das
fsub
mov
fcmovne
cmp
mov
pop
jp
cmc
add
jno
cld
xor
out
aas
sbb
arpl
(bad)
mov
push
cmps
xchg
xchg
mov
push
jne
cmp
mov
std
fsub
sbb
and
jmp
(bad)
or
mov
mov
dec
mov
fldenv
jle
dec
ins
cmp
jae
or
es
adc
or
cmc
fs
add
sub
push
push
arpl
xlat
xor
mov
cli
std
mov
ins
nop
adc
scas
xchg
xchg
jbe
xchg
sub
dec
aam
or
dec
xchg
shl
or
stos
push
pop
lods
mov
mov
inc
cmc
mov
cwde
or
stos
adc
hlt
aam
push
adc
xchg
jns
jb
jmp
mov
ror
sbb
mov
xchg
pop
sub
xchg
mov
loopne
mov
pmullw
pop
call
fistp
push
pusha
icebp
pop
or
stc
mov
imul
inc
(bad)
imul
push
ret
imul
fild
dec
mov
pop
ret
inc
xor
mov
add
sub
or
int3
and
stos
je
icebp
cmp
jae
push
adc
dec
call
inc
hlt
add
and
int
xor
add
sbb
fmul
movs
lahf
pushf
ins
mov
pop
icebp
and
add
retf
cld
ins
je
out
xchg
sub
fadd
addr16
jmp
sub
addr16
inc
sbb
xor
xor
ins
mov
shl
mov
fisub
or
jmp
jl
ins
xlat
arpl
test
bound
dec
dec
sub
xchg
xchg
mov
shl
into
scas
out
pop
addr16
jge
mov
retf
and
mov
in
mov
pop
sub
les
or
mov
cmps
xchg
bound
xor
lds
xchg
mov
ror
jmp
mov
inc
mov
mov
push
push
lea
mov
push
mov
cmp
jmp
into
ret
cmp
cmp
(bad)
push
dec
sub
nop
lods
aam
jg
call
clc
movs
ins
retf
jp
xor
xchg
xchg
aam
ins
and
aaa
inc
aam
xor
xchg
stc
cmps
movs
repnz
pop
ret
mov
ret
je
test
les
gs
out
nop
fnsave
cs
lea
jne
shl
bound
sub
dec
push
xchg
in
and
cmps
movs
(bad)
add
sbb
leave
daa
enter
ds
cwde
ds
mov
cmp
push
inc
mov
inc
xor
pop
mov
fdiv
clc
push
fwait
push
lahf
repz
fsub
dec
in
data16
xchg
(bad)
xlat
out
icebp
ret
nop
jecxz
mov
and
and
push
test
xor
movs
arpl
int
dec
mov
and
idiv
stos
inc
mov
les
xchg
mov
arpl
pushf
lock
sub
mov
ins
cli
inc
add
dec
cmps
shl
mov
pop
xor
retf
add
shl
popa
mov
popa
jbe
push
nop
push
xchg
xchg
push
into
mov
lea
aad
pop
xor
gs
mov
jno
push
test
cli
mov
loope
jo
ins
adc
ret
sbb
in
cld
jno
pop
cli
(bad)
dec
shl
pop
daa
add
push
scas
inc
cmp
repnz
mov
push
jmp
and
xor
cld
outs
loope
add
call
icebp
test
cmp
mov
push
pop
mov
inc
add
clc
cmp
sar
push
or
in
ins
mov
mov
test
mov
mov
cmp
inc
addr16
pop
sub
shr
pop
inc
xor
dec
dec
or
repz
not
mov
cmp
out
sub
xor
out
popf
ss
mov
popa
sbb
pop
stc
xor
cli
movs
push
imul
cld
xchg
pop
in
xor
nop
jle
cmps
xchg
js
loop
cld
shl
push
and
mov
lahf
fwait
inc
mov
out
or
inc
sahf
test
pop
adc
jp
lock
pop
out
push
neg
lahf
cmps
inc
mov
cld
cmc
ret
icebp
fwait
mov
aas
shr
mov
sub
cli
gs
push
cmp
push
cmp
push
test
cs
sub
pop
inc
(bad)
call
sahf
ds
or
out
fst
je
inc
loopne
mov
rsqrtps
iret
nop
or
mov
lea
fs
mov
cmps
dec
dec
mov
cwde
repnz
xchg
xchg
jmp
ds
cmp
in
sbb
cdq
pop
add
inc
frstor
sub
js
bound
cwde
sbb
fmul
arpl
fisub
or
pop
(bad)
ja
popf
and
enter
jl
movs
hlt
cmp
in
jp
jl
push
pop
sbb
mov
aad
mov
jmp
cmp
jecxz
retf
(bad)
sub
add
int3
cwde
jmp
mov
jecxz
mov
or
adc
in
fwait
test
pop
mov
push
es
int
in
and
jns
inc
cmp
fisttp
fmul
dec
and
lea
push
test
cmp
mov
lods
jp
lods
jo
xor
out
retf
pop
xchg
push
icebp
cli
outs
rcl
push
inc
pop
mov
inc
btc
js
jp
fwait
xchg
pop
shr
mov
cmp
ins
push
into
mov
push
mov
mov
or
stos
icebp
xchg
cs
popf
add
push
test
cmp
xchg
xor
fcom
aaa
and
call
xor
rcr
mov
fldenv
out
mov
inc
sub
dec
cmp
inc
popa
pop
loopne
mov
jmp
fist
xchg
and
ds
test
xor
mul
push
cmp
rcl
aaa
add
gs
dec
jg
daa
das
jmp
xchg
fwait
mov
ins
xor
and
mov
cmp
pop
out
dec
nop
aad
dec
stos
(bad)
inc
addr16
dec
or
mov
bound
sar
xchg
cmps
or
mov
cmp
test
adc
adc
mov
stos
mov
ins
popf
scas
dec
ins
test
ins
push
cmp
push
leave
je
call
push
pushf
cmps
(bad)
jecxz
mov
scas
push
dec
(bad)
push
adc
(bad)
jns
and
inc
or
ja
add
aad
jno
or
rcl
mov
mov
dec
xor
out
xor
cmp
call
mov
push
jnp
(bad)
faddp
pop
jns
repnz
std
pop
xor
push
jle
loope
fild
adc
mov
cmc
add
mov
rol
test
dec
sub
cmp
leave
pop
fiadd
cmps
cmc
xchg
out
mov
loopne
fwait
aam
les
pop
stos
add
sbb
ss
push
xchg
std
ror
push
mov
and
mov
inc
or
pop
retf
adc
mov
das
push
adc
cmps
in
and
adc
sbb
nop
icebp
sub
cld
jmp
adc
mov
fidivr
mov
and
mov
xor
shr
imul
imul
stos
mov
cld
rcl
call
cmc
mov
add
aam
xor
mov
je
xor
int3
xor
retf
xor
popa
shl
mov
pushw
mov
es
fidiv
ins
pop
mov
les
inc
inc
push
cmp
aad
mov
lock
imul
fwait
xor
jno
outs
hlt
aas
outs
lock
call
pop
add
mov
es
jg
stc
loopne
jns
in
cwde
push
es
mov
movs
nop
adc
ins
cmp
mov
cld
adc
and
cld
inc
adc
add
mov
mov
jg
and
pop
sbb
(bad)
enter
daa
arpl
(bad)
adc
pop
call
clc
push
shr
outs
sbb
or
or
arpl
jns
ror
fidiv
inc
sub
popf
xchg
push
mov
jmp
cmps
and
mov
mov
jbe
pop
xor
xchg
inc
ret
cwde
in
mov
jnp
and
fsub
stos
mov
xor
push
movs
jge
xor
data16
add
and
pop
jmp
jnp
xchg
neg
pop
leave
push
scas
mov
jns
lods
mov
clc
xchg
adc
cwde
add
mov
pop
adc
stos
test
add
fadd
(bad)
mov
ret
cmp
das
dec
mov
out
xchg
sbb
rcr
inc
sbb
inc
add
rcr
mov
cmps
bound
push
imul
stc
sbb
loope
int
fld
mov
add
ins
iret
retf
inc
call
stc
cmp
mov
xchg
repz
ss
pop
outs
dec
inc
xor
sbb
enter
addr16
pop
inc
mov
mov
ins
imul
or
xor
test
stos
std
xchg
sbb
stos
je
cmp
mov
ins
xchg
fwait
popa
sub
add
mov
xchg
(bad)
neg
pop
inc
test
add
das
gs
in
dec
dec
pop
cwde
mov
xchg
lods
enter
out
rol
push
mov
iret
jnp
inc
sub
iret
sub
loope
pop
xlat
bound
xchg
mov
adc
cmp
bnd
retf
cmp
jno
pop
shl
add
inc
sahf
dec
cmp
sbb
push
push
or
pop
dec
fs
test
xchg
bound
out
xor
imul
ins
pop
and
cmp
xor
pop
inc
je
jb
aaa
repnz
xor
out
jmp
sbb
mov
int
jle
bound
push
data16
in
(bad)
mov
push
repz
adc
push
inc
mov
dec
fist
pusha
inc
jbe
jo
js
int
mov
cs
sar
inc
pop
add
xor
inc
or
outs
push
inc
les
stos
test
push
cs
sti
push
fmul
stos
dec
mov
imul
frstor
jg
mov
xor
ja
retf
mov
mov
cmc
add
retf
adc
sti
fcmovbe
neg
pop
stos
xchg
push
popa
xchg
mov
xchg
and
push
scas
rcl
mov
rcl
push
pop
add
or
in
mov
test
sahf
loop
push
mov
stos
test
(bad)
or
bound
xlat
test
adc
and
dec
mov
movs
push
hlt
test
and
sbb
mov
add
cld
lock
adc
cmp
outs
dec
dec
pop
dec
call
test
pop
add
(bad)
pop
cwde
push
xchg
out
popa
xchg
pop
aaa
sbb
cmc
loope
dec
mov
cli
ret
push
cli
int3
or
leave
or
pop
mov
push
lock
fwait
mov
dec
push
std
aas
cmp
inc
fist
xchg
pop
lods
fsub
push
add
cmp
or
xchg
pop
xor
gs
(bad)
dec
add
xor
in
ins
push
ret
dec
jp
mov
mov
mov
cmp
cmp
or
rcl
and
cmp
jne
push
mov
inc
je
xchg
mov
test
push
add
out
push
xor
repnz
add
mov
mov
arpl
icebp
imul
dec
mov
and
(bad)
hlt
movs
jg
stc
fnstcw
data16
mov
rcl
jno
out
(bad)
in
in
js
mov
mov
jae
rcr
mov
je
les
mov
mov
and
push
sbb
pop
ror
mov
ins
xchg
adc
sbb
in
shr
inc
mov
sub
mov
dec
das
test
out
or
icebp
xchg
scas
movs
dec
adc
clc
add
stos
je
push
shl
push
pop
pop
sahf
sahf
arpl
sub
aam
inc
outs
ins
xchg
call
ins
sub
stc
pop
fwait
clc
cli
xor
mov
xchg
xor
pop
inc
adc
scas
out
ror
pop
imul
pop
or
ret
sbb
arpl
stos
cmps
pop
and
dec
mov
add
inc
inc
sbb
mov
cmp
loop
lds
imul
dec
jge
jae
data16
adc
mov
test
mov
out
cmc
imul
jp
ret
push
cld
sbb
cmp
push
dec
mov
rol
shr
dec
cmp
test
ja
jo
mov
cwde
mov
pop
out
adc
cmp
mov
and
lds
cli
xchg
scas
stos
sbb
mov
add
loopne
mov
add
call
movs
repnz
sbb
jmp
and
add
inc
in
daa
pop
jne
pop
mov
xchg
test
sbb
cdq
sbb
xchg
fnstcw
sbb
mov
add
scas
push
test
(bad)
sti
es
cmc
repz
iret
jmp
les
jns
scas
jg
xor
adc
push
call
and
jmp
sti
shl
mov
jmp
pop
adc
div
sub
aas
int
lods
mov
sub
pop
sbb
cs
cmp
aad
out
fst
nop
push
mov
mov
imul
adc
pop
(bad)
fild
out
rcr
stc
mov
xchg
stc
out
(bad)
dec
mov
daa
out
cmps
pop
mov
(bad)
loopne
add
add
add
pop
aad
aaa
clc
jp
xlat
inc
xor
cmps
push
push
scas
(bad)
retf
aas
mov
xchg
out
adc
sub
jecxz
sub
jne
xor
xchg
mov
inc
daa
rcl
sbb
jnp
mov
sub
mov
mov
div
pop
dec
xchg
xchg
ret
out
jmp
cld
jb
pop
rcl
push
mov
rcl
push
mov
xchg
fist
test
idiv
mov
ret
cmc
push
inc
mov
cmp
and
push
push
mov
lods
mov
js
pop
lods
fild
pop
dec
xchg
(bad)
scas
(bad)
(bad)
sub
add
pop
adc
cwde
push
mov
xor
ja
ret
adc
push
sbb
aad
les
mov
cmp
jl
rcl
mov
mov
pop
aas
and
mov
jge
mov
(bad)
dec
jle
pop
add
adc
cmp
fdiv
scas
mov
mov
add
adc
or
xchg
div
mov
jge
int3
outs
xchg
cmp
test
loop
movs
jae
xor
add
add
xor
mov
ror
adc
daa
clc
jle
adc
jmp
mov
psrlq
jb
cmp
xchg
cwde
mov
mov
xchg
cmp
aaa
adc
fwait
cdq
xchg
fadd
jne
and
add
shr
aas
mov
lods
inc
dec
fst
add
xor
sahf
mov
jae
out
ss
ret
jb
push
mov
cmp
adc
cmp
jmp
ror
push
sbb
aaa
test
scas
or
imul
pop
sub
ja
pop
sbb
dec
out
dec
or
pop
(bad)
mov
out
int3
sub
mov
fldcw
scas
sbb
push
pop
cmc
nop
inc
ins
loop
pop
test
fdiv
jecxz
retf
out
sahf
adc
int
mov
cdq
dec
push
inc
lods
je
mov
stos
or
fcomp
sub
jle
pop
inc
pop
ins
xchg
jecxz
hlt
xor
jl
push
sbb
sbb
das
mov
push
xchg
repnz
pushf
(bad)
push
imul
movs
cmp
imul
(bad)
pop
dec
lods
jl
mov
push
cli
jmp
nop
jmp
fnstcw
and
ret
xchg
sub
outs
jle
ins
push
xchg
adc
out
lods
mov
mov
ins
add
xor
jg
leave
stc
loop
mov
fcmovbe
dec
sub
stos
mov
retf
call
sti
push
(bad)
ror
je
dec
imul
scas
xchg
sub
dec
dec
xchg
popf
jae
aas
cwde
xor
into
cs
test
push
mov
jmp
and
test
cmp
cmp
mov
cs
xor
out
mov
imul
retf
adc
xor
xlat
jno
jno
sbb
sub
mov
push
and
imul
xchg
push
mov
inc
rol
jb
adc
aaa
popf
neg
inc
loop
adc
inc
cmps
mov
popa
hlt
add
mov
dec
sub
xor
(bad)
xor
into
(bad)
fstp
or
jmp
out
xor
fldcw
data16
fcomip
xor
dec
mov
fcom
enter
movs
jo
in
mov
lods
retf
sahf
aaa
cmp
adc
xchg
xor
in
sub
stc
mov
sub
fcomp
aam
repz
pusha
js
ins
iret
jmp
loope
icebp
fstp
pop
and
cmp
sub
jmp
test
stos
pop
jmp
movs
repnz
pop
push
in
cdq
ret
add
scas
and
mov
jbe
xchg
stos
movs
(bad)
test
dec
mov
xlat
aam
and
mov
ret
test
jp
sbb
xor
loop
movs
pop
mov
call
ja
enter
inc
inc
outs
xchg
out
imul
mov
mov
pop
(bad)
jno
cmps
test
xchg
gs
jbe
push
int
imul
fnstcw
adc
sub
mov
into
lods
inc
and
fwait
jl
shr
ror
stc
sbb
movs
inc
fisubr
add
sub
sbb
inc
ds
int
dec
xor
sub
das
mov
push
adc
add
ficomp
loop
xchg
dec
stos
daa
xor
pop
movs
cmc
movs
push
outs
fwait
in
sbb
pop
cli
sar
aaa
aas
popa
mov
call
cmps
scas
dec
mov
sbb
or
clc
retf
call
mov
pusha
or
fstp
pop
popa
push
dec
je
ins
loop
mov
mov
pop
and
push
and
pop
shr
lods
sbb
shl
sbb
and
movs
xor
mov
jg
or
fild
pop
mov
sbb
xor
dec
cld
cmp
ret
rol
cmp
fcmovb
adc
adc
pusha
sbb
push
int3
push
int
xor
inc
ja
add
mov
pop
jge
fstp
jl
push
dec
clc
int3
shl
xchg
jbe
repnz
jbe
pop
cmovp
or
mov
or
dec
fst
lock
or
xor
adc
jnp
popf
push
test
loopne
sub
cwde
sub
xlat
ror
or
fnstcw
loope
jno
ss
push
sbb
(bad)
ficom
jb
popf
xor
xor
add
jae
adc
sub
ss
mov
add
(bad)
cmp
ins
and
call
icebp
add
out
hlt
mov
(bad)
mov
test
ror
push
cmps
rcl
rep
in
cmp
call
mov
sbb
lds
jmp
pop
jbe
(bad)
jmp
mov
lock
push
out
mov
loope
sahf
sub
(bad)
jecxz
dec
sbb
sub
nop
in
push
or
gs
sahf
into
cmps
dec
and
les
js
xor
xchg
mov
out
push
popf
sub
retf
addr16
lds
mov
sub
out
retf
lahf
repz
push
push
mov
pop
ficom
inc
fstp
xchg
push
cmc
ja
mov
pop
addr16
xor
push
loopne
xchg
jmp
jnp
xchg
xlat
mov
jmp
aam
daa
jmp
jmp
adc
lea
mov
std
inc
mov
fstp
jo
fwait
dec
lock
scas
dec
aas
loop
inc
adc
xchg
xchg
jne
dec
movs
fs
(bad)
mov
cmps
(bad)
cdq
and
sti
out
cli
jns
cmp
bound
enter
daa
sahf
inc
cmp
pop
dec
repz
or
adc
push
cmc
and
fisub
mov
dec
pusha
pop
pop
inc
icebp
xchg
rol
out
cmp
fiadd
jae
emms
jbe
and
lods
xchg
and
mov
mov
mov
xor
mov
data16
lods
or
mov
cmp
inc
xchg
push
ins
(bad)
adc
xor
(bad)
lods
pop
and
inc
xchg
mov
loop
aad
out
inc
test
popf
lea
push
inc
out
push
xchg
cmp
int
push
xchg
ret
clc
xchg
jmp
arpl
jmp
sub
gs
pop
scas
enter
mov
add
fbstp
push
loopne
lds
xor
gs
lea
test
add
and
add
in
mov
add
inc
rol
and
mov
retf
pop
adc
fs
cmp
ins
cmp
out
sar
ins
add
inc
pop
push
push
pop
scas
mov
mov
cmp
mov
stos
jmp
fstp
push
sbb
push
sar
cmp
mov
popf
xchg
loop
(bad)
lock
outs
sub
cmp
pop
cmp
jns
or
mov
lahf
xor
cmp
pop
in
jmp
pop
jb
outs
es
loopne
cmps
out
mov
dec
inc
pusha
xchg
idiv
push
push
out
ret
les
or
inc
adc
neg
mov
push
gs
outs
jne
adc
sti
enter
mov
pusha
sti
cmps
pop
call
scas
scas
mov
pop
mov
jmp
push
ja
mov
fdivr
retf
pop
aam
mov
xchg
pop
popa
push
lods
(bad)
xchg
push
in
mov
mov
sbb
push
mov
adc
mul
in
sub
ja
jns
xchg
cmp
out
lods
pop
xchg
xchg
xor
cmc
and
xor
test
leave
(bad)
(bad)
std
scas
push
scas
inc
data16
int
sbb
scas
sub
mov
(bad)
(bad)
in
mov
inc
cmp
sub
aas
neg
push
not
lods
ins
inc
inc
sub
lods
fsub
inc
(bad)
shl
sub
xor
pop
call
inc
es
fisub
cmps
and
repnz
or
repz
add
xchg
fbld
mov
push
and
popf
retf
cld
out
cmp
ror
xor
test
jne
push
xor
mov
les
pop
stos
mov
cmp
push
and
push
push
or
add
dec
jg
cmps
das
cwde
add
add
mov
jns
pop
and
push
aam
sub
scas
sbb
pop
call
leave
xchg
iret
xchg
dec
loope
stc
pushf
test
(bad)
jl
mov
stc
pop
mov
push
mov
push
sbb
int
imul
push
or
sub
cmc
out
into
sbb
aas
inc
(bad)
into
push
in
xor
sub
popf
dec
push
out
iret
cmp
rcl
jp
xchg
push
jge
in
pop
in
mov
movs
std
sub
adc
push
and
icebp
outs
dec
xchg
push
test
mov
fwait
dec
adc
jl
stos
push
lahf
xor
cmps
cmps
stc
(bad)
popf
xchg
xchg
(bad)
clc
fcmovbe
lock
mov
nop/reserved
retf
cmp
pop
mov
shl
pop
test
es
inc
jle
fisubr
shr
inc
movs
test
movs
cmp
push
jno
jne
ins
fucomi
das
nop
icebp
pusha
sbb
ret
adc
data16
cmp
call
test
mov
add
outs
dec
lods
les
mov
jno
inc
sbb
add
sbb
push
push
lods
pusha
arpl
mov
in
and
cli
pop
pop
addr16
cmc
pop
mul
test
and
stos
dec
ja
(bad)
sub
out
lds
fldcw
push
cli
clc
sti
fdivr
(bad)
and
aad
mov
mov
les
pop
cmp
adc
xchg
bound
ja
aam
and
sub
push
sbb
mov
jle
and
push
or
cwde
jns
popf
stos
and
sub
cmp
(bad)
fninit
xchg
jb
dec
sahf
test
cld
dec
movs
xchg
push
test
test
cli
fcomp
mov
push
jge
push
sub
bound
dec
ja
pop
mov
arpl
and
pop
pop
mov
xchg
push
cli
xor
sbb
jnp
enter
int3
sub
clc
fldenv
push
fs
adc
shl
xor
pop
and
scas
dec
mov
xlat
jge
call
mov
fucomp
ins
adc
pop
int
inc
fs
xor
enter
call
mov
lahf
lock
or
pop
stos
xchg
add
push
std
mov
ja
ffreep
pop
call
(bad)
xchg
and
push
mov
dec
pop
xor
popw
jb
pop
enter
xor
mov
mov
inc
and
lahf
or
test
push
sub
es
jns
and
stos
retf
xor
inc
push
and
daa
cmp
aas
pop
daa
in
jo
push
adc
mov
jo
imul
inc
cmp
lahf
(bad)
(bad)
cmp
not
inc
fstp
sbb
popa
mov
test
adc
mov
hlt
xchg
pop
sbb
into
repnz
pusha
fsub
out
xor
sub
arpl
pop
je
ror
and
or
mov
mov
pop
call
jp
shl
xor
sbb
sbb
imul
xchg
enter
popa
sub
imul
outs
imul
inc
cmp
dec
pop
iret
mov
gs
jmp
test
or
add
push
inc
mov
sbb
add
ins
dec
jmp
mov
movs
inc
jbe
xor
test
in
(bad)
movs
sub
adc
adc
scas
daa
stos
jo
daa
loope
fist
ror
(bad)
gs
pop
(bad)
ss
std
je
cmps
iret
sub
js
dec
bound
push
add
jo
xchg
mov
clc
es
shl
jnp
inc
mov
sbb
clc
cli
jge
(bad)
inc
mov
out
xchg
pusha
xor
push
push
das
sahf
xlat
popf
stos
leave
push
stos
outs
jmp
xchg
xor
imul
sahf
std
jno
sub
in
or
xor
test
(bad)
popa
out
addr16
sub
sti
cmps
enter
mov
jmp
cli
outs
sbb
in
loope
shl
nop
loopne
ins
fsubr
push
retf
loope
fwait
aaa
int3
lods
xchg
push
mov
loope
pop
pop
(bad)
in
leave
adc
ror
inc
sqrtps
stos
jae
lds
lods
push
sar
sub
cli
or
mov
adc
dec
lods
jmp
xor
arpl
popf
push
in
fcom
push
mov
jbe
ret
test
imul
fld
jg
aam
clc
pop
imul
cli
js
inc
cmps
cmc
repz
sub
ss
enter
jmp
mov
cmps
les
sub
pop
nop
out
mov
lds
push
mov
test
inc
into
pop
mov
popf
outs
jle
ss
arpl
clc
fmul
dec
push
stc
push
cmps
ja
mov
jb
sub
imul
xor
jns
sub
aam
pop
or
mov
push
scas
and
sub
neg
leave
sahf
jp
outs
mov
or
sub
sbb
mov
dec
test
pop
popa
daa
aam
stos
mov
addr16
icebp
inc
xor
or
test
stos
test
and
sub
xor
pop
leave
lds
pop
dec
retf
xchg
jg
sbb
sbb
lahf
sub
mov
add
cs
xchg
cmp
mov
cwde
jae
push
pop
xor
push
mov
mov
out
push
and
(bad)
repnz
mov
cmp
mov
in
add
cmps
bound
imul
mov
and
lods
dec
test
test
call
cmp
push
rol
or
aaa
mov
not
idiv
addr16
scas
aas
ds
call
int3
imul
(bad)
jb
data16
mov
adc
int
or
push
xor
mov
mov
sub
mov
fcomp
leave
pop
inc
popa
dec
mov
sbb
add
test
mov
aas
imul
(bad)
push
jge
sahf
lds
cdq
into
out
int
cmp
iret
xchg
les
imul
fist
push
pop
daa
rol
xrelease
imul
sahf
(bad)
aam
jnp
(bad)
in
jmp
pop
fwait
or
sub
sti
rcl
mov
in
xlat
aaa
mov
dec
cmp
or
mov
lds
push
call
dec
jmp
fstp
push
inc
mov
inc
mov
xchg
pushf
add
movs
pop
mov
cmp
mov
xor
dec
dec
xor
rcl
sub
stos
or
dec
retf
shl
call
pusha
aad
mov
push
pop
into
dec
cdq
arpl
in
and
daa
pop
push
sar
icebp
sbb
cmp
cmc
and
xor
gs
sbb
jae
out
pop
lahf
fucomp
adc
pop
cli
ret
and
sahf
cmp
dec
jno
sahf
xor
test
cmps
stos
shr
imul
outs
mov
call
(bad)
iret
stos
stos
xchg
push
movs
and
and
into
sahf
fnstcw
mov
push
cmps
dec
cmp
mov
sar
jb
repnz
mov
mov
pop
jp
adc
pop
and
nop
xchg
test
inc
enter
and
pop
sbb
adc
fnstcw
sahf
push
sub
(bad)
jb
add
pop
inc
add
jp
mov
sbb
dec
adc
js
test
jo
js
dec
mov
push
pop
mov
add
xchg
mov
inc
or
jnp
and
(bad)
push
ret
in
or
push
jae
or
in
xor
je
enter
and
sbb
int
cmps
or
dec
mov
repz
pop
call
aad
into
repz
and
clc
dec
fmul
into
mov
test
shl
test
fidiv
dec
rol
adc
jae
cmp
jo
arpl
add
pop
push
daa
mov
xchg
arpl
adc
mov
data16
add
inc
je
mov
jp
cld
into
stos
mov
mov
mov
xor
jmp
loopne
or
or
and
lea
scas
out
ins
add
adc
iret
js
push
sahf
js
mov
js
xchg
les
pop
cdq
dec
pop
(bad)
lods
rol
xchg
es
inc
or
into
pop
push
cmp
xchg
inc
pop
push
xchg
es
leavew
scas
and
push
adc
out
lods
data16
fist
fild
sub
push
inc
pop
dec
add
dec
fld
lahf
dec
or
pop
or
inc
cld
dec
push
(bad)
cmp
sub
scas
test
daa
xchg
mov
push
and
mov
ret
repz
sti
mov
sub
push
ins
arpl
push
add
mov
in
rcr
icebp
xchg
call
and
outs
fild
mov
aad
idiv
sbb
in
outs
nop
(bad)
sbb
scas
xor
xor
stos
adc
sbb
sub
popa
sar
cmp
pop
jmp
pop
mov
outs
imul
es
out
mov
sub
pop
sbb
or
mov
inc
inc
jbe
jnp
nop
fsub
pop
jmp
or
aas
mov
fwait
adc
sar
pusha
hlt
js
cmps
outs
scas
sbb
mov
push
or
retf
or
xchg
ss
or
(bad)
loope
jnp
push
sub
add
lahf
xor
(bad)
cli
pop
adc
xlat
jns
mov
xlat
push
and
pop
mov
ds
adc
(bad)
popa
(bad)
pop
inc
je
vmwrite
(bad)
nop
push
test
ins
mov
scas
xchg
movs
add
inc
xchg
dec
xor
mov
mov
inc
xor
sub
mov
sub
xchg
pop
cmps
cs
inc
jno
push
pop
mov
or
aam
les
sbb
sub
test
adc
mov
pop
ss
push
sbb
repz
jo
in
cmc
mov
fist
(bad)
ficom
jp
push
push
ins
or
and
or
add
sub
mov
movs
loop
and
bnd
fldenv
and
into
mov
nop
leave
leave
aaa
test
shl
test
cmp
push
sbb
fst
pop
fidivr
daa
mov
mov
rol
lds
mov
xlat
dec
rcl
mov
(bad)
cli
sub
sti
pop
retf
test
jae
js
imul
out
or
xor
cmp
jbe
lahf
out
pop
fsubp
lahf
add
mov
jo
add
sbb
cmp
mov
adc
sub
inc
and
and
nop
sbb
pop
pop
inc
jmp
mov
dec
sti
icebp
out
and
push
std
int
jb
or
xchg
mov
fidiv
pop
(bad)
aam
fcomp
pop
cmp
in
and
add
mov
retf
add
inc
in
test
jbe
or
lods
or
imul
aad
int
jb
(bad)
cmp
daa
jle
sub
das
jle
mov
ror
mov
lea
xor
and
nop
xchg
inc
pop
mov
xchg
mov
cmp
in
jbe
xor
mov
rcl
scas
push
xchg
ret
push
mov
repz
jmp
jno
mov
retf
mov
push
inc
mov
mov
jg
fs
push
cmp
hlt
push
fs
mov
push
mov
mov
fcomp
scas
mov
adc
and
pop
sbb
and
add
jo
and
out
ficom
in
in
stos
adc
jne
xlat
dec
fwait
shr
scas
cmp
scas
cmps
xor
mov
gs
adc
xchg
mov
das
in
pcmpgtd
adc
push
dec
xchg
loope
in
mov
inc
sub
scas
add
loop
sbb
push
cmp
int
das
outs
sbb
add
in
stc
add
retf
dec
sub
pop
les
popf
add
iret
pusha
shl
add
jp
(bad)
icebp
ror
out
xchg
cmp
mov
fbld
jg
jb
pushf
pushf
es
je
xchg
pop
mov
jg
fsqrt
fadd
add
outs
or
cmp
inc
cmp
jns
cmp
sub
jns
outs
sub
div
pop
mov
add
or
(bad)
cmc
sbb
fisub
lahf
das
es
jbe
mov
pusha
jmp
call
sar
lods
push
xor
ror
in
mov
push
inc
mov
mov
fbstp
aad
or
sbb
dec
xchg
mov
sub
xchg
int3
repz
je
js
add
inc
popf
mov
iret
jmp
shl
loopne
and
pop
sub
xor
mov
(bad)
push
cmps
cmps
scas
sub
jmp
gs
xor
sbb
jae
scas
push
cwde
xlat
sbb
stc
push
retf
daa
push
std
dec
pop
outs
call
arpl
lds
push
push
jp
or
out
cdq
adc
je
(bad)
loop
jnp
adc
bound
cmp
mov
cmp
xor
adc
and
daa
and
outs
sbb
sub
or
sub
neg
cli
fadd
xchg
test
xor
xchg
sbb
sub
pop
ror
jp
dec
outs
pop
ss
cmp
xor
mov
pop
test
sub
xchg
call
mov
cmp
repnz
outs
xchg
je
sub
jl
or
sub
mov
fs
sahf
aad
mov
jmp
jns
jl
pop
xchg
sbb
adc
int
jmp
jle
inc
leave
cmp
out
lods
push
movs
stos
sub
xchg
and
out
pop
into
in
jns
push
and
fist
xchg
and
mov
(bad)
lock
cwde
jg
pop
loop
ins
cmps
std
popf
adc
hlt
das
xchg
cmps
inc
or
adc
fcmovne
jne
sbb
xor
into
inc
int
rcr
xor
xchg
jmp
fldenv
sub
inc
(bad)
lods
mov
popf
push
or
mov
jb
outs
sub
scas
push
loope
cmp
fistp
pop
mov
cmps
fdivr
pop
pop
cmp
push
in
cmc
xchg
jl
int3
loopne
xor
jl
push
push
mov
pop
cli
sti
pushf
daa
xchg
cmpps
mov
xchg
add
clc
outs
adc
cmp
lods
adc
sub
jp
or
cmp
mov
xlat
add
jb
push
ins
lods
jns
fxch
das
and
call
imul
lods
test
cmp
push
popf
scas
je
xchg
xchg
stos
cmp
xor
jnp
jmp
dec
in
test
aaa
push
inc
arpl
and
adc
mov
jnp
mov
lock
xchg
cs
push
int3
call
es
inc
xchg
and
das
mov
shl
push
mov
mov
dec
push
scas
sbb
pop
pand
arpl
sbb
cmp
adc
add
mov
add
mov
mov
into
pop
rcr
es
mov
xchg
sbb
push
cmps
mov
push
and
je
clc
cmp
sub
mov
dec
fild
inc
sub
and
mov
xor
jge
or
retf
lods
inc
cmp
sbb
mov
cmp
fiadd
(bad)
into
jecxz
mov
sub
sub
loopne
jbe
jb
dec
call
inc
int3
push
fnstenv
or
daa
icebp
sbb
dec
(bad)
sbb
test
xchg
jbe
adc
dec
mov
push
mov
push
sub
mov
or
sub
add
dec
pop
nop
ins
jg
call
mov
popa
pop
sbb
test
add
add
test
push
retf
xchg
loop
shl
pop
sbb
jecxz
pushf
mov
mov
dec
(bad)
jge
mov
(bad)
add
xchg
or
dec
mov
movs
sub
out
je
test
ja
push
jns
jb
or
rcr
cmp
ficom
mov
jns
daa
pop
scas
lahf
cmps
xchg
scas
int
fstp
cdq
cmp
sub
mov
push
dec
cli
add
mov
call
push
in
push
sbb
cmps
sar
pop
in
lea
sti
xor
mov
mov
inc
sbb
fldenv
rol
adc
call
and
mov
cld
(bad)
mov
mov
pop
cmc
mov
stc
and
dec
cdq
mov
push
ret
movs
sahf
xchg
je
push
or
cli
imul
sbb
ror
imul
dec
movs
add
imul
cld
ficom
xchg
inc
cmp
xchg
fsub
xor
into
sub
sub
inc
push
mov
fst
and
imul
sub
rol
ins
in
mov
ror
sub
and
sub
arpl
pusha
je
(bad)
das
aam
jmp
nop
cli
call
icebp
or
in
mov
add
loop
enter
pop
jl
push
aas
addr16
aaa
gs
push
sbb
and
mov
jmp
dec
sbb
test
inc
(bad)
clc
mov
popf
push
movs
es
dec
add
in
xor
push
sbb
ret
lds
int3
push
pop
push
sbb
cmp
mov
clc
aaa
push
or
add
int
rcr
shl
add
push
call
sub
mov
adc
jno
stos
adc
inc
bound
fstp
rcl
cmp
fcmove
xor
mov
or
out
leave
adc
retf
cmps
shl
outs
ret
loope
push
fiadd
xor
and
cmps
(bad)
cld
pop
test
bound
dec
std
imul
(bad)
mov
sub
xchg
or
retf
pushf
or
mov
cs
hlt
cld
adc
lock
pop
jge
adc
and
dec
sbb
enter
add
cmps
xchg
aas
lods
outs
mov
or
das
and
pop
(bad)
fisttp
cmp
enter
push
scas
xchg
sub
fs
pushf
pusha
cmc
push
lods
inc
add
sub
aad
int
js
adc
xor
and
aas
ins
outs
dec
jne
mov
in
sbb
stc
jb
mov
(bad)
stos
add
inc
pop
in
imul
push
addr16
mov
movs
popa
sbb
adc
xchg
and
xchg
mov
xchg
std
test
imul
mov
and
add
clc
jns
mov
jo
inc
sbb
jecxz
dec
mov
adc
push
stc
fnstsw
mov
pop
fidivr
rcr
sbb
inc
dec
bnd
adc
pop
add
xlat
lds
and
mov
mov
dec
push
sub
push
jge
test
push
into
lods
jl
mov
mov
mov
leave
retf
xor
cmps
ret
repz
(bad)
adc
retf
pop
xor
test
and
popf
cmps
cmp
loopne
out
cmp
xchg
mov
clc
test
jl
pop
push
adc
cwde
push
call
fimul
cmp
icebp
push
in
fcomp
leave
test
mov
clc
das
out
div
jno
dec
sahf
sub
and
pop
mov
fwait
sub
cmps
out
mov
loope
loope
cmp
stos
pop
xor
pop
cmc
sbb
ds
xlat
jmp
cld
lea
or
not
dec
mov
cs
mul
xlat
ror
jge
add
int3
in
push
mov
sub
aaa
or
xchg
dec
xchg
popf
mov
jmp
xor
or
loop
jnp
inc
mov
xlat
clc
jb
xor
cmp
into
pop
adc
xchg
cld
jmp
aas
adc
xor
pop
add
mov
scas
out
int
adc
lea
adc
push
cmp
dec
test
pop
push
lods
adc
out
(bad)
nop
or
xchg
jne
pop
jle
fdiv
or
xchg
push
add
xchg
out
push
jo
adc
call
dec
cmp
jp
push
loope
sub
addr16
jmp
pop
or
sub
cmps
in
sub
cld
test
sub
mov
pop
or
inc
push
mov
adc
push
xor
ins
push
mov
push
cmp
cmps
ret
les
push
test
jo
loop
loop
or
mov
mov
jne
repz
jns
cdq
sbb
mov
xor
fsub
sar
lahf
scas
sub
xor
adc
sbb
test
loopne
aad
repz
fiadd
xchg
add
mov
test
fild
jo
mov
rcl
and
clc
scas
xchg
retf
cld
bswap
mov
psllq
and
lds
call
and
aaa
pop
or
fsubr
aaa
cmc
fldenv
loope
pusha
cmc
jl
sahf
and
das
scas
dec
ja
sti
push
(bad)
cs
xlat
imul
movs
or
sar
cmp
ins
xor
ins
inc
movs
push
int3
(bad)
push
mov
imul
push
aam
xor
mov
es
aas
sbb
xchg
jns
shl
xor
retf
call
dec
ja
fs
fidiv
out
cwde
popf
push
addr16
loope
mov
jo
ja
loopne
(bad)
movs
loop
sub
mov
cmp
cli
(bad)
sub
jno
sbb
push
and
icebp
pusha
fidiv
jb
push
(bad)
sar
push
sbb
pop
pop
sti
push
out
dec
jno
dec
dec
xchg
(bad)
ss
adc
add
sub
aad
popf
hlt
pop
mov
pop
mov
shr
hlt
mov
or
push
frstpm(287
jae
add
mov
int
sub
pop
outs
out
scas
neg
cmps
xor
gs
xlat
and
(bad)
mov
dec
dec
push
lahf
xchg
mov
jecxz
iret
sub
psllq
cmps
push
cwde
loop
pusha
push
sub
es
ja
shl
mov
inc
outs
out
pop
setl
add
cmp
lock
shl
(bad)
test
mov
adc
or
mov
retf
mov
mov
out
lods
out
xchg
cmp
mov
jbe
cmps
sub
inc
push
out
jno
cmp
stc
jmp
pop
arpl
mov
xor
push
mov
or
mov
test
lahf
outs
data16
cmp
pop
mov
sub
mov
cld
pop
hlt
call
outs
addr16
inc
(bad)
push
(bad)
ins
xchg
call
xlat
push
fwait
xchg
les
mov
jns
inc
inc
jnp
ds
adc
pop
(bad)
mov
or
retf
fisub
adc
mov
jns
call
jl
or
sbb
pusha
dec
cdq
pop
dec
fimul
popf
repnz
loopne
stos
into
cmp
and
push
in
gs
jp
cmp
sub
aam
outs
jg
cli
xlat
fnstenv
jecxz
je
and
mov
jo
sub
(bad)
jecxz
dec
ins
mul
dec
enter
mov
cli
sahf
enter
xor
shr
pavgb
(bad)
xchg
shr
(bad)
into
aas
lods
rol
aad
jo
lds
ins
(bad)
shl
push
outs
cmp
out
popf
scas
adc
jg
lods
add
mov
sahf
fwait
arpl
dec
xchg
test
lods
or
sub
mov
mov
ins
sti
push
scas
loop
sbb
inc
mov
sti
adc
cmc
jecxz
xor
mov
(bad)
jp
mov
dec
mov
jns
out
jmp
mov
jo
jo
call
push
test
xor
fnstcw
adc
and
cmp
mov
les
dec
pusha
aas
mov
shl
inc
adc
inc
xchg
adc
xchg
xchg
sahf
in
das
jecxz
pop
div
push
xlat
mov
call
mov
mov
in
push
not
test
call
mov
inc
loope
xchg
pop
in
loope
adc
out
rol
jnp
xchg
test
pop
adc
mov
rep
jecxz
sub
fnstcw
retf
stos
add
dec
jecxz
ins
sub
push
push
mov
sub
lds
fnstcw
bound
adc
arpl
in
xchg
or
mov
xchg
mov
and
aad
sbb
ror
dec
je
pop
(bad)
jg
cmp
cwde
lea
lock
fild
inc
retf
aaa
cmp
inc
dec
in
stos
dec
mov
out
mov
mov
add
pushf
mov
imul
nop
add
adc
xor
jg
repnz
ins
mov
xchg
loope
aaa
(bad)
bound
ins
dec
ret
bound
add
pusha
in
sub
or
or
stos
or
mov
loopne
hlt
inc
fidiv
shr
mov
inc
into
xchg
adc
repnz
rol
mov
enter
ss
dec
jo
jg
and
mov
and
cdq
push
mov
mov
inc
or
inc
sbb
inc
dec
and
das
jne
and
in
pusha
mov
push
mov
(bad)
ficomp
call
xor
sbb
or
pop
shl
repnz
fcmovb
psadbw
ficom
jne
loop
inc
fs
cmp
ins
mov
fcom
enter
pop
jecxz
and
aam
mov
fcos
not
xchg
cmc
repnz
and
ret
div
gs
inc
mov
mov
nop
(bad)
or
xor
outs
add
stos
push
outs
inc
icebp
inc
test
xchg
and
sbb
test
cwde
inc
imul
xchg
stos
daa
sub
cld
dec
cmps
push
push
jecxz
ins
aaa
add
mov
cmp
or
movs
cmp
inc
pop
or
call
imul
mov
and
cmp
out
sub
push
jmp
fistp
xchg
mov
lods
movs
and
and
pushf
or
arpl
gs
in
dec
stc
jno
mov
push
repnz
je
pop
xor
push
dec
lahf
jb
outs
xchg
pusha
pop
lock
pushf
shr
test
add
mov
mov
ja
or
ret
(bad)
int3
stos
sti
or
cmps
pushf
dec
mov
xlat
scas
test
mov
(bad)
fst
jp
repnz
mov
dec
out
xchg
(bad)
inc
outs
addr16
xchg
sar
jno
lahf
mov
push
into
lock
mov
dec
jbe
repnz
enter
cld
(bad)
hlt
aam
repnz
mov
adc
mov
lahf
sbb
data16
fidiv
add
out
in
scas
out
inc
sahf
push
or
jp
adc
add
sbb
ss
push
xchg
out
jbe
mov
(bad)
jmp
ret
lods
pop
or
sbb
jl
push
push
aas
jns
push
sti
(bad)
lods
les
inc
xor
ins
pusha
(bad)
jno
jne
sub
lods
das
xchg
jg
movs
mov
jl
cs
jbe
cld
fnsave
cs
mov
cmp
ds
loopne
xor
aaa
loop
adc
xor
scas
cmps
mov
outs
mov
les
dec
rcr
jae
das
xchg
mov
or
stc
mov
sti
mov
stos
ret
push
retf
ret
popf
xchg
aas
pop
inc
inc
cmps
addr16
arpl
(bad)
std
scas
movs
pusha
pop
inc
ds
retf
sti
or
inc
adc
pop
shl
xchg
sbb
mov
mov
in
mov
cmp
popa
out
inc
(bad)
ja
xchg
sub
imul
mov
(bad)
push
jne
loop
or
ja
fsubp
in
ficom
or
test
inc
fdiv
cmp
add
lods
inc
inc
sub
mov
cmps
or
retf
inc
push
mov
cs
lock
iret
and
mov
int
jae
sub
jne
outs
imul
popf
sbb
xor
inc
pop
mov
iret
rcl
cmp
cmp
enter
xchg
mov
sti
and
and
cwde
addr16
retf
sar
push
mov
pop
inc
loop
fs
dec
in
push
into
popf
dec
add
sub
add
aaa
fadd
sub
into
xchg
adc
fdiv
cmp
imul
ret
(bad)
pusha
and
or
(bad)
adc
xor
popf
pop
pop
dec
inc
sbb
inc
jns
jl
sbb
in
fdivr
pop
adc
pop
pop
xor
xlat
mov
pop
inc
repnz
pop
cmp
pop
mov
jmp
test
call
repz
mov
movs
sbb
inc
cmc
outs
inc
push
int3
mov
sbb
pop
imul
push
dec
adc
es
rcl
adc
repz
sub
sub
cdq
stos
push
mov
clc
imul
stos
jg
stc
or
xchg
in
cmp
push
jle
rol
lar
xchg
test
jnp
add
pop
nop
repnz
sbb
push
xchg
dec
sbb
mov
jge
(bad)
sti
mov
arpl
daa
add
bound
jecxz
adc
ins
movs
daa
sbb
push
cmp
in
leave
jb
push
mov
mov
std
pusha
push
call
fnsave
pop
xchg
add
(bad)
mov
sahf
pop
popa
leave
ss
scas
push
(bad)
jp
push
pop
and
lods
push
and
sbb
les
sahf
pop
les
add
data16
call
out
mov
and
aad
idiv
add
mov
fmul
fwait
rol
std
cmp
das
adc
cdq
iret
adc
jno
cs
jae
cmp
or
mov
sub
and
mov
dec
mov
and
inc
pop
push
(bad)
fdivp
test
mov
jp
imul
mov
push
push
test
aad
div
fsubr
shr
xchg
jb
cdq
mov
push
shl
dec
xor
xchg
dec
fdivr
push
mov
fsub
xchg
shr
pop
or
in
mov
sub
out
out
push
aaa
xor
(bad)
pop
xor
xchg
je
adc
dec
mov
in
shr
xchg
movs
adc
out
scas
call
outs
xor
fsub
and
push
idiv
adc
aaa
test
pop
or
aam
test
test
shl
add
pop
pop
jg
sbb
out
sahf
sub
mov
mov
into
add
xchg
mov
sbb
aas
nop
xchg
dec
loope
scas
or
mov
dec
jbe
test
retf
jns
in
inc
out
cmp
jmp
stc
jnp
jg
lahf
sub
xchg
mov
in
mov
div
ds
les
outs
xchg
xchg
fs
pushf
jno
push
mov
iret
cld
test
dec
loope
and
inc
dec
mov
sub
std
int3
sbb
cmp
retf
aam
xchg
call
mov
adc
les
es
retf
inc
test
cmp
sbb
pusha
fiadd
mul
call
bound
scas
adc
dec
(bad)
psllq
xor
mov
jae
retf
jg
or
call
add
add
dec
mov
dec
das
aaa
mov
rcl
push
pop
(bad)
pushf
push
mov
dec
pop
call
cld
cs
stos
xchg
inc
ja
out
mov
aam
outs
xchg
(bad)
or
xchg
imul
adc
adc
pop
adc
clc
add
cmp
cli
inc
dec
movs
ret
inc
or
xchg
ss
ret
scas
pop
mov
push
add
adc
xchg
enter
mov
into
adc
test
and
pop
test
sbb
adc
lods
inc
retf
lock
cli
iret
dec
add
lock
xchg
(bad)
scas
push
movs
lock
pushf
sar
xlat
inc
data16
pop
ja
xchg
inc
xchg
call
fs
sub
pop
(bad)
push
fldenv
xor
and
aad
add
xlat
and
inc
jo
inc
movs
stc
int
and
inc
jne
pushf
xchg
push
sub
lfs
mov
popa
shr
idiv
pop
push
in
or
fbld
pop
(bad)
data16
pop
sub
addr16
mov
stos
inc
aad
ss
or
fiadd
icebp
lods
xchg
xor
ret
outs
mov
and
inc
add
repnz
xor
into
or
mov
enter
in
sub
pop
dec
loopne
cmp
sbb
repnz
aam
daa
mov
sub
pop
and
fsub
scas
inc
add
cmps
test
jecxz
mov
sub
sti
push
dec
pop
push
dec
ss
xor
adc
sub
repz
mov
mov
inc
scas
nop
sub
mov
xor
mov
dec
xchg
lods
in
lods
mov
sub
pushf
jb
sbb
xchg
fisttp
mov
gs
pushf
retf
xor
jmp
inc
rol
sbb
push
fisttp
mov
imul
mov
inc
imul
call
rol
or
pop
mov
idiv
movs
mov
inc
or
js
aas
push
add
shl
cmc
test
pop
or
lds
mov
adc
(bad)
rcpps
movs
sahf
xor
fcom
dec
pop
daa
dec
dec
test
xchg
mov
jne
push
dec
sbb
jns
mov
sti
(bad)
mov
adc
or
push
mov
call
out
cmp
push
mov
cmps
xchg
lock
stos
mov
xor
push
and
rcl
mov
cmp
fwait
addr16
(bad)
and
cmp
cwde
cwde
cmp
xchg
pop
and
fidivr
mov
shr
js
das
es
push
cmps
xchg
out
daa
xchg
add
jo
(bad)
aas
jle
add
leave
lds
cli
retf
cmps
pop
(bad)
jb
mov
cmp
mov
cmp
push
xor
pop
mov
into
or
cli
jb
mov
push
mov
sbb
(bad)
out
pushf
mov
pop
mov
mov
xor
aam
inc
call
jge
aas
fisttp
into
lea
xor
cmp
(bad)
cmp
stos
pop
add
(bad)
xchg
inc
int3
rcl
and
push
or
stos
xor
and
lods
pop
push
icebp
inc
iret
mov
in
lods
into
dec
jns
call
imul
sbb
jno
loop
xor
les
jge
test
jmp
cmp
mov
int3
inc
fs
mov
fincstp
jbe
pmulhuw
imul
cmp
cmps
movs
inc
addr16
scas
adc
inc
add
or
fwait
cmps
inc
lea
mov
mov
das
push
pop
out
js
fmul
call
arpl
or
call
sti
mov
add
mov
cli
cmp
fmulp
scas
retf
push
cld
fdivr
cmc
lds
xchg
lea
outs
mov
cmp
mov
xlat
jae
repz
in
icebp
in
into
xor
sbb
cmp
paddd
jae
pop
or
mov
sbb
pop
(bad)
int
and
sbb
or
(bad)
iret
xchg
maskmovq
neg
xchg
adc
(bad)
xor
stos
and
adc
shl
cmp
xchg
jae
bt
icebp
out
sbb
xchg
mov
add
fwait
dec
pop
lea
loopne
retf
jl
sub
sub
add
inc
dec
xor
jno
and
jle
popf
lods
shl
jne
and
scas
les
cmp
sar
mov
movs
mov
mov
mov
pop
sub
daa
in
test
cwde
cmp
mov
test
aad
sub
dec
and
pop
rol
jae
dec
inc
aam
idiv
adc
mov
jmp
or
jb
repz
fimul
jb
xor
shl
jb
mov
ins
pop
xchg
jp
std
mov
xchg
cwde
xchg
addr16
retf
jg
scas
or
lock
jp
cmps
jl
add
fistp
daa
mov
sahf
sbb
xor
mov
ins
mov
push
mov
jmp
add
jae
mov
and
aaa
gs
mov
mov
and
mov
cdq
sub
fs
adc
fsub
sar
sbb
push
push
adc
push
hlt
xchg
in
in
push
std
movlps
sub
xchg
ins
das
int
(bad)
dec
or
push
fldcw
and
aas
xor
pop
lds
adc
repnz
mov
loopne
sbb
or
leave
iret
mov
and
imul
das
and
daa
mov
loope
mov
data16
std
sub
shl
data16
test
hlt
es
dec
iret
add
xchg
rol
sbb
mov
sub
sub
fbstp
or
mov
cmp
scas
mov
leave
cwde
push
pop
jae
dec
arpl
stos
xchg
inc
mov
sub
pop
test
cmps
or
cmps
cdq
lods
sub
pop
fcomi
mov
pop
in
rol
sub
adc
into
outs
push
xor
adc
pop
xor
xchg
cli
(bad)
xchg
push
pusha
jmp
lds
mov
jnp
push
or
mov
mov
adc
nop
inc
lds
aaa
pop
xchg
dec
dec
shl
lods
pop
xchg
xchg
push
push
addr16
xor
ss
fs
(bad)
leave
inc
push
popa
xor
and
xchg
and
jmp
push
add
dec
cs
mov
test
fidiv
leave
push
leave
mov
pop
or
out
xor
xor
mov
popf
jl
mov
jne
(bad)
(bad)
test
loopne
test
repz
mov
pop
and
data16
aas
jno
int
push
xchg
push
or
inc
inc
jns
mov
fmul
or
test
mov
jno
xchg
les
ret
xchg
ds
sahf
inc
test
scas
lahf
mov
fst
or
movaps
rcl
add
mov
scas
xchg
or
div
pop
mov
mov
push
adc
mov
lea
mov
add
sahf
or
cs
pop
shl
and
inc
rcl
cli
sbb
fist
push
jecxz
push
push
xor
push
jge
(bad)
mov
dec
dec
jae
pop
shr
xchg
dec
hlt
test
in
out
out
mov
jbe
adc
cmp
push
mov
mov
xchg
mov
jbe
mov
mov
xchg
xor
pop
xchg
mov
pop
xor
jbe
(bad)
leave
mov
sub
sbb
shr
cmp
pop
mov
inc
in
xchg
in
sar
(bad)
mov
mov
jae
in
cmp
mov
sbb
mov
daa
addr16
cmps
xlat
cwde
stc
push
clc
addr16
aad
nop
movs
mov
adc
iret
fdivr
and
inc
sbb
cwde
fadd
bnd
je
lds
sub
psllq
mov
repz
pop
jle
jmp
popf
push
out
pop
(bad)
loopne
js
jo
sbb
ret
jo
or
es
das
or
test
shl
es
cmps
push
adc
xor
inc
dec
add
mov
or
out
mov
dec
pop
sub
clc
leave
mov
adc
push
or
sbb
outs
jae
cld
and
mov
push
sub
push
je
shr
adc
(bad)
in
cmp
fdiv
mov
aas
pushf
sbb
clc
aas
mov
and
xor
cmp
and
mov
pop
pop
sub
mov
adc
sahf
xchg
jmp
(bad)
xor
bound
mov
gs
mov
pusha
popa
jl
addr16
ud0
and
outs
lds
imul
mov
xchg
cwde
call
hlt
dec
xor
gs
xchg
sub
test
fwait
jg
xchg
mov
cmps
nop
cmp
fnsave
loope
daa
icebp
(bad)
sbb
iret
pop
mov
sbb
sbb
neg
pop
loope
push
add
sub
sti
es
cmc
stos
mov
(bad)
xlat
test
mov
jns
inc
dec
iret
popa
fistp
nop
jnp
sub
dec
cmp
shl
adc
push
mov
pop
imul
inc
xor
or
adc
push
xchg
mov
dec
sub
sub
(bad)
adc
cmp
fs
add
std
jmp
iret
mov
jmp
and
cmps
sbb
fld
mov
aaa
and
pop
dec
nop
imul
xchg
or
fstp
retw
cmp
jae
retf
dec
cmc
push
fwait
shl
fiadd
arpl
ja
sbb
ja
nop
pop
dec
es
and
nop
jb
lea
add
outs
xlat
das
shr
lea
jmp
arpl
lock
xchg
sub
cmp
call
sub
cmps
hlt
jl
aas
lock
dec
data16
imul
in
arpl
cli
jns
sti
cmp
jb
aad
clc
mov
push
cmp
xchg
lahf
das
adc
dec
inc
push
cli
push
push
mov
adc
dec
(bad)
push
jno
shl
xchg
pop
clc
mov
outs
jbe
dec
sub
pop
push
mov
hlt
sub
pop
ficom
dec
stos
cmp
cmc
mov
pop
mov
mov
out
jmp
dec
add
mov
stc
(bad)
jb
adc
scas
daa
popa
fisub
push
mov
out
or
pop
xor
dec
in
xchg
and
jle
rol
rcr
fbld
xchg
shl
in
add
and
or
pop
sete
sbb
imul
mov
dec
fadd
in
pop
push
inc
imul
pop
or
sbb
sub
xchg
lea
popf
mov
ins
xchg
add
test
rcr
addr16
cmps
cmc
sti
dec
mov
sub
inc
dec
mov
cmp
imul
xchg
int3
pop
sub
cmp
jecxz
xchg
inc
sahf
mov
leave
mov
and
(bad)
inc
ja
cmp
inc
cwde
inc
aam
xchg
sbb
mov
shl
sub
inc
mov
mov
sub
mov
es
sub
aaa
pop
xchg
add
pop
dec
(bad)
fmul
jecxz
repnz
push
lock
int3
mov
outs
add
mov
or
adc
ins
inc
pop
jbe
sub
mov
outs
pop
test
clc
out
inc
cld
sub
mov
retf
popf
sub
(bad)
xor
in
lea
fdivr
or
retf
jecxz
sti
pop
adc
mov
out
fisub
(bad)
das
lea
jge
xchg
jne
xlat
inc
push
push
add
loopne
(bad)
xchg
lea
fisttp
cmp
scas
xor
or
jle
and
enter
fcomp
test
enter
inc
xchg
xor
lods
cmpps
push
(bad)
push
and
dec
and
sub
data16
jecxz
push
xchg
dec
inc
into
push
adc
imul
and
cmp
xchg
into
pop
xor
sub
test
out
les
cmp
or
call
mov
lods
rcl
or
xor
popa
dec
push
cmp
jae
push
test
cmp
lods
inc
pop
scas
in
js
mov
in
out
dec
push
add
sbb
inc
mov
or
xlat
mov
add
push
jmp
cmp
mov
ror
rcr
mov
mov
add
xchg
add
sbb
add
fiadd
in
(bad)
jbe
mov
jns
jb
mov
mov
outs
pop
rep
ja
outs
in
imul
ret
shr
ja
scas
pop
aaa
into
and
ror
fnstenv
and
ja
ret
call
sti
or
(bad)
jecxz
or
adc
scas
pop
sub
push
mov
mov
jbe
mov
pop
sti
rep
cmp
mov
fdivr
jp
mov
sbb
xor
shl
cld
movsx
jmp
sbb
arpl
cmp
aaa
bound
pop
or
xor
mov
and
aaa
and
movs
icebp
(bad)
and
push
mov
iret
xchg
push
push
push
iret
sti
or
nop
xor
popa
add
add
jl
sub
sub
xor
cmps
mov
push
pop
mov
jmp
push
ins
and
arpl
and
push
xchg
cmp
push
cmp
out
dec
jns
fimul
inc
test
cmps
(bad)
fcomi
ja
je
xchg
cmp
mov
lahf
dec
stos
mov
xor
jno
dec
add
jp
push
xchg
add
cmc
lahf
mov
call
mov
mov
jl
and
loope
pop
aas
int
inc
pusha
ins
movs
movs
or
stos
popa
sbb
mov
inc
loopne
pop
cwde
mov
and
in
mov
dec
jmp
cmp
sbb
dec
cmp
cdq
and
mov
leave
sbb
pop
mov
push
out
sub
pusha
sbb
rcl
xchg
fisttp
adc
mov
mov
cmp
cli
aas
jle
repz
test
xor
inc
adc
cs
and
pop
xchg
sar
inc
sub
or
jp
cmp
add
(bad)
sbb
cmp
jge
push
and
repnz
xor
fwait
xor
std
cli
scas
movs
(bad)
jmp
dec
test
(bad)
xor
cli
(bad)
mov
jecxz
retf
mov
adc
sbb
jbe
mov
push
scas
out
add
es
xchg
bound
push
sbb
mov
mov
leave
mov
hlt
cld
iret
jp
aaa
push
push
mov
pop
stc
pop
jmp
dec
loop
adc
push
mov
ins
out
dec
mov
(bad)
cmp
fdivr
add
dec
jge
xchg
jmp
jp
dec
xor
cmp
add
daa
jne
add
aam
into
mov
xchg
bound
xor
mov
and
aaa
test
sbb
adc
sub
push
cmp
inc
pop
fstp
dec
movs
adc
push
outs
mov
cmc
daa
ret
cmc
xchg
retf
inc
sbb
lods
loop
ret
cmp
fwait
popa
mov
xchg
clc
fcmovb
std
sub
jp
pop
pop
mov
aas
in
dec
out
push
dec
add
leave
mov
aaa
ds
jg
jmp
lahf
shl
mov
rcr
add
mov
jb
jnp
mov
ret
mov
movs
push
adc
out
inc
mov
aam
lahf
fwait
mov
ins
mov
mov
je
cmp
or
add
xlat
data16
js
mov
jmp
mov
dec
xchg
stc
add
adc
add
ins
les
pop
cs
push
adc
in
xor
xor
loop
sub
inc
dec
inc
mov
aam
inc
scas
out
fs
dec
inc
jecxz
mov
sar
add
out
ja
jge
sbb
jne
call
cwde
jle
arpl
and
jb
jp
xchg
add
fdivr
addr16
mov
push
inc
push
xchg
das
nop
and
test
cld
aas
movs
sub
fwait
(bad)
fidiv
adc
mov
aas
sbb
imul
out
and
outs
xor
mov
inc
sbb
scas
mov
or
or
add
pop
cs
push
and
push
imul
dec
mov
je
lea
leave
dec
pop
test
pop
cmp
daa
cmps
cwde
les
(bad)
fild
scas
xor
retf
dec
adc
inc
add
xchg
in
or
cs
cli
popa
repnz
inc
jmp
(bad)
pop
pusha
sbb
(bad)
out
add
iret
movs
xchg
das
dec
cmp
out
jbe
mov
xor
jge
fdiv
dec
push
xlat
(bad)
mov
xchg
push
loopne
imul
dec
add
xor
xchg
pop
(bad)
and
or
xchg
aaa
fsub
mov
fldcw
mov
xchg
xchg
int3
dec
ja
ror
jne
sti
out
and
jmp
test
scas
in
mov
imul
stos
std
or
jmp
cmps
xchg
scas
push
jb
add
jp
fstp
jmp
lds
pop
in
js
add
outs
popa
cmp
bound
mov
sbb
lock
pop
sbb
test
jmp
loop
repz
fwait
sub
or
daa
cmp
cmp
std
sub
and
push
js
ins
pop
sbb
pop
push
shl
shl
pop
loope
add
fimul
adc
mov
call
aaa
aam
pop
jb
push
imul
inc
inc
add
icebp
or
scas
mov
rcl
mov
aas
jecxz
sub
sub
cmp
imul
dec
jbe
aam
add
stos
icebp
push
repz
test
imul
dec
cmps
dec
test
and
xor
je
mov
imul
loop
stc
mov
int
ins
aaa
add
adc
pop
retf
je
mov
sbb
ss
add
sbb
push
jl
rol
push
add
call
arpl
cmp
enter
adc
or
inc
hlt
imul
imul
pop
rcl
cmp
int
cmp
jne
mov
imul
(bad)
out
adc
xor
leave
add
in
daa
test
bnd
pop
mov
mov
fmul
mov
or
mov
jbe
push
adc
inc
ficom
retf
mov
test
jmp
dec
(bad)
fidiv
ds
push
and
pop
es
push
and
fisubr
(bad)
cwde
sbb
or
js
mov
cmps
mov
cmc
jmp
pop
mov
repnz
mov
scas
xor
mov
sbb
jo
repnz
sbb
push
inc
push
jge
imul
xchg
lds
std
and
std
push
ss
shl
pop
push
lock
sub
and
push
jg
or
mov
test
sbb
sar
mov
ins
dec
sbb
pop
push
fdiv
(bad)
mov
icebp
lods
xchg
sub
push
fsubr
stc
pop
test
add
ss
jne
sub
adc
gs
mov
mov
aas
mov
push
ret
clc
ds
xlat
jns
fwait
int
mov
jmp
jne
pop
outs
and
lahf
xchg
fld
add
bnd
and
cwde
icebp
sbb
jmp
sti
dec
mov
jnp
jbe
outs
and
cdq
add
sub
aad
mov
cmps
pop
or
sbb
sub
les
jb
rcl
adc
stos
mov
call
mov
lds
fincstp
clc
imul
loop
lock
cwde
push
ins
cmp
loopne
call
sub
jne
xor
jl
jmp
inc
dec
dec
cld
lock
lods
int
add
dec
xchg
loopne
movs
xchg
xchg
lods
in
dec
adc
add
cmp
in
dec
iret
mov
mov
add
xchg
add
push
ins
cmp
(bad)
ja
ror
xchg
lock
iret
idiv
lea
lods
test
sbb
xchg
mov
sbb
(bad)
push
ficomp
mov
push
fwait
mov
mov
and
sub
int3
push
shl
mov
adc
dec
call
adc
call
rdpmc
jg
popa
jecxz
mov
xchg
sub
and
mov
mov
push
cmp
ja
xchg
mov
add
push
cmp
adc
mov
cmc
jmp
xlat
xchg
daa
dec
xchg
ret
mov
mov
retf
inc
sbb
cmps
adc
out
popf
out
adc
enter
cmp
add
mov
idiv
push
clc
not
and
je
pop
(bad)
out
fsubr
loop
shl
(bad)
adc
outs
cld
push
test
or
cmp
shl
add
mov
rcr
ds
in
aam
nop
test
fs
or
loope
mov
int3
jle
sahf
mov
sub
repnz
scas
js
lds
xchg
loope
jns
and
adc
mov
xlat
or
and
sbb
clc
jl
pushf
or
(bad)
sub
adc
xor
ins
scas
xor
xchg
clc
push
and
adc
pop
adc
xchg
fucomi
loope
sbb
cmp
shl
xchg
mov
(bad)
mov
test
retf
in
cmp
aas
mov
or
cdq
sbb
stc
repz
lods
mov
call
mov
sub
mov
(bad)
call
dec
fimul
cmp
(bad)
xor
pop
pop
dec
push
je
out
jae
cld
dec
jmp
fwait
outs
ja
out
loope
fnstenv
mov
add
sahf
mov
xor
mov
sub
adc
stos
pop
cwde
mov
mov
sub
cmp
and
jae
(bad)
mov
cmp
in
imul
nop
inc
movs
fist
retf
rcl
ret
pop
jp
mov
mov
push
inc
std
pop
rcr
outs
mov
test
or
push
fnstsw
xchg
fs
jle
outs
pushf
pop
(bad)
mov
mov
rcr
sbb
loopne
pop
hlt
rcl
fucom
xchg
cmp
lods
cmove
dec
push
sub
or
mov
jmp
adc
enter
imul
and
rcr
xchg
adc
test
js
cmp
sub
jp
out
fbstp
mov
lods
push
bound
mov
cmps
(bad)
cmp
cdq
mov
idiv
in
sub
and
push
mov
ret
push
push
mov
push
jg
mov
pop
out
popf
sub
push
mov
or
cwde
sub
push
fistp
mov
iret
hlt
adc
cmp
mov
dec
imul
imul
pop
rol
(bad)
fisubr
(bad)
in
fldcw
push
inc
mov
adc
es
xor
pushf
cmp
cli
inc
mov
inc
pushf
mov
lock
cmp
mov
inc
iret
(bad)
les
sti
and
dec
mov
adc
test
adc
add
fld
neg
stc
xor
shl
push
outs
push
or
(bad)
sub
imul
ror
sub
or
ror
mov
jle
push
or
push
stos
push
daa
imul
and
xor
mov
out
dec
sbb
call
inc
imul
fmulp
cwde
enter
ror
enter
ds
div
cmps
cli
and
sbb
mov
or
xor
cmc
add
lods
imul
xchg
call
lahf
cld
dec
and
pop
pop
sub
sbb
mov
inc
out
sub
ins
scas
mov
sbb
mov
lahf
xchg
jp
cld
aaa
retf
cmc
popf
pop
stos
mov
push
jne
fdiv
xor
imul
xchg
jmp
ds
shl
retf
cld
fidiv
leave
jl
into
stos
dec
repnz
mov
imul
xchg
js
pop
aaa
adc
and
adc
(bad)
mov
(bad)
ret
ins
pushf
pop
es
adc
popa
mov
push
movs
(bad)
pop
xchg
xchg
aas
mov
gs
push
pop
xchg
loop
sbb
cli
adc
loop
std
mov
jecxz
(bad)
xchg
cmps
int
lods
and
out
sbb
in
pop
fsin
scas
mov
dec
xchg
mov
int
mov
scas
dec
repnz
sbb
xor
hlt
ret
mov
cs
add
gs
out
aad
mov
jl
add
push
push
jle
inc
add
sbb
xor
jne
xchg
loop
cmp
je
inc
in
repz
(bad)
xlat
xchg
pop
fwait
jno
sub
and
fadd
(bad)
push
sbb
jb
dec
das
movs
lds
inc
rcr
nop
sub
in
mov
test
js
dec
or
and
and
imul
movs
mov
sub
add
mov
ucomiss
jmp
ss
out
mov
aad
stc
popf
dec
fisttp
shl
pushf
pop
pop
in
add
into
cmps
in
xchg
sub
outs
das
idiv
push
clc
sahf
adc
ss
pop
xchg
mov
pop
add
ret
clc
shr
ror
dec
xchg
out
mov
out
jns
cmp
stc
mov
or
ins
stc
sub
mov
aas
pop
xchg
pop
dec
xchg
shr
inc
pushf
out
sbb
popf
xchg
ins
cld
and
inc
addr16
mov
push
mov
push
cs
mov
and
mov
lahf
clc
pop
push
test
push
out
sub
inc
inc
ds
fucom
popa
push
sub
push
dec
jp
je
push
int
xor
pop
jnp
xor
sbb
movs
sbb
idiv
mov
stc
imul
mov
jg
add
lahf
loopne
stos
adc
pop
stos
dec
ret
repz
test
aaa
mov
mov
sbb
push
stos
out
xlat
lods
shl
outs
aad
cmp
mov
jecxz
neg
clc
scas
jl
sub
or
sti
shr
out
inc
or
dec
mov
jmp
mov
es
mov
dec
add
lock
push
loop
ins
call
(bad)
fdivr
out
and
repnz
jp
stc
sbb
adc
add
add
fdivr
enter
push
dec
fdivr
pop
retf
gs
cld
ins
jno
mov
mov
add
hlt
xchg
dec
stos
mov
jmp
push
push
and
push
sub
xchg
rcl
popa
mov
dec
(bad)
sub
rcl
lods
mov
dec
ins
daa
cmc
scas
pop
(bad)
ficomp
and
xchg
mov
xchg
adc
push
lahf
mov
xchg
jle
push
les
push
xchg
cmp
mov
pop
ins
popf
out
leave
inc
pop
dec
pop
(bad)
ror
dec
pop
mov
in
cs
(bad)
fcom
sbb
fmul
in
and
pop
inc
mov
or
push
cmp
in
cmps
mov
out
lea
out
push
sti
xor
out
outs
retf
(bad)
xchg
dec
mov
dec
jne
cs
sar
mov
dec
adc
sbb
xor
movs
ret
nop
pop
xor
xchg
retf
outs
psllw
call
mov
ja
xor
sbb
out
dec
pop
mov
std
sub
(bad)
push
mov
aam
and
mov
sub
or
loop
dec
dec
leave
ss
shld
jmp
(bad)
cmp
in
nop
or
mov
mov
or
pusha
push
out
adc
adc
adc
pusha
jb
mov
push
popa
dec
or
push
fsub
(bad)
out
adc
dec
adc
(bad)
fcmovne
dec
rol
mov
ins
push
dec
pusha
push
dec
ret
addr16
xor
push
dec
(bad)
ja
ds
sub
sub
into
sub
sbb
dec
cmp
push
aaa
je
sar
pusha
pop
mov
daa
shr
addr16
pop
sbb
clc
dec
ja
pushf
popf
jmp
dec
adc
and
in
loopne
aas
mov
jge
sub
es
(bad)
int3
idiv
jmp
add
out
call
pusha
daa
jg
cld
fild
xor
mov
sbb
and
aad
aaa
inc
ins
and
push
dec
and
jno
out
fsub
lods
and
lock
jmp
push
mov
dec
xor
xor
pushf
gs
cmp
(bad)
mov
jns
es
in
fwait
dec
ret
push
and
ret
jo
in
repnz
(bad)
out
add
in
lock
(bad)
retf
ret
sbb
cmp
in
fcom
push
add
imul
fs
fiadd
ret
popa
xchg
in
div
cmc
lds
ins
(bad)
cld
xor
stc
icebp
add
sub
mov
jge
mov
inc
inc
pusha
jno
loope
xor
sbb
dec
pop
jb
inc
ror
es
scas
or
xchg
test
shl
mov
cli
fimul
test
in
scas
push
add
mov
dec
ror
dec
xchg
iret
rol
dec
cdq
sub
hlt
pop
cmp
test
(bad)
and
adc
lahf
lods
inc
mov
fnstenv
call
xchg
xlat
jg
and
cmp
mov
retf
rcr
or
sub
ror
mov
cmc
ins
hlt
shr
jae
dec
outs
sbb
sub
je
push
cmp
popf
push
sub
sar
mov
pop
ins
arpl
outs
aas
push
and
fs
adc
lods
int3
mov
xor
xor
(bad)
(bad)
xchg
js
pop
and
scas
lock
test
cmp
repz
sub
sti
and
aaa
mov
lds
pop
scas
test
movs
adc
loope
adc
icebp
pop
pop
out
add
shl
fs
add
jl
add
mov
sbb
xchg
sub
out
sbb
fs
in
or
scas
or
pushf
imul
arpl
xor
outs
and
sbb
sbb
gs
test
xchg
clc
dec
ret
jo
mov
mov
add
xchg
pusha
and
loope
cmpxchg
inc
dec
jecxz
jbe
inc
adc
dec
std
inc
hlt
sub
mov
and
and
int
(bad)
mov
and
pusha
push
ret
out
js
mov
in
sahf
mov
icebp
aad
add
xor
and
jg
loop
jo
sub
fs
loopne
addr16
or
xor
adc
fist
repnz
aad
pop
ins
lods
retf
rcr
ficomp
push
aam
jmp
lock
sub
outs
aam
cs
add
jmp
call
fwait
out
xchg
mov
jecxz
clc
pop
dec
adc
and
mov
clc
xor
call
jge
xchg
and
arpl
iret
imul
cmps
or
int
cdq
sub
add
test
fcmovu
cmc
scas
mov
lds
in
mov
xor
fcmovnbe
xchg
in
dec
loopne
mov
addr16
cdq
or
call
sub
jb
stc
or
mov
adc
sar
xlat
idiv
icebp
xchg
mov
cmp
mov
jns
loop
fs
cli
push
dec
sbb
mov
test
jmp
jp
cld
pop
pop
xchg
sbb
out
mov
jae
cmp
in
or
imul
leave
imul
mov
gs
shl
in
in
pop
xor
mov
jmp
xchg
dec
stc
loopne
sbb
mov
aas
fstp
dec
lahf
push
cmps
mov
pop
ins
mov
sar
movs
jecxz
jmp
and
ret
mov
pop
gs
addr16
lods
jno
or
mov
xchg
push
cmps
sbb
cmps
sub
xlat
clc
jne
push
mov
ret
addr16
and
inc
push
mov
and
mov
mov
fisub
jle
in
mov
outs
mov
and
jbe
sub
mov
pop
push
mov
cmps
idiv
pop
imul
ret
or
xchg
mov
mov
or
les
fild
pop
mov
leave
push
mov
push
mov
bound
repnz
mov
pop
inc
outs
cdq
xchg
popf
cmc
mov
pushf
ffree
stos
jnp
fsub
and
cmp
ss
cs
fldcw
jge
(bad)
fcomp
aam
mov
in
es
dec
repz
inc
pop
aad
jmp
mov
ins
in
(bad)
dec
aas
es
int
push
inc
dec
sub
test
mov
inc
push
std
icebp
leave
push
bound
pushf
inc
movs
cli
dec
retf
arpl
in
jnp
sbb
dec
gs
retf
pushf
aaa
les
outs
mov
dec
out
inc
ds
pusha
sbb
jns
xchg
and
sahf
pop
or
xchg
or
scas
mov
adc
adc
loop
mov
sbb
pop
mov
addr16
add
(bad)
or
test
fs
jmp
adc
push
push
xor
jne
xchg
add
(bad)
inc
mov
push
sub
add
icebp
sbb
cli
mov
cmp
xchg
cmp
mov
add
cmc
jne
dec
fadd
cmp
pop
(bad)
mov
fldenv
ins
add
mov
jns
push
xor
cmp
push
mov
mov
jg
lahf
sahf
dec
(bad)
cmp
xor
lldt
sbb
sbb
ficom
mov
mov
mov
leave
pop
cmp
movs
push
repz
sub
push
jb
pop
inc
sbb
(bad)
(bad)
pusha
int
dec
int3
int3
xchg
aas
fistp
xchg
hlt
sub
xlat
adc
adc
jne
out
and
call
mov
inc
mov
sbb
sti
cwde
pop
push
push
and
inc
test
add
sbb
lea
mov
repnz
inc
xor
jle
outs
jns
movs
inc
or
jne
cmc
dec
or
ds
cmp
xchg
ja
frstor
jl
ficomp
int3
pop
out
test
cmp
mov
mov
and
test
pop
jne
xlat
and
clc
aam
mov
mov
push
add
or
adc
and
inc
adc
les
bound
xor
xchg
mov
jge
jmp
sub
and
cmp
jo
fcom
inc
ss
sub
sub
mov
jg
push
fist
mov
push
push
xchg
add
sahf
or
(bad)
test
xchg
jl
xor
jo
ss
test
movs
sti
js
adc
ds
pop
(bad)
push
sti
out
xchg
sub
cdq
es
xchg
xchg
or
or
push
xchg
fdivr
mov
popf
(bad)
not
dec
fcom
imul
call
push
mov
cli
cmp
ret
in
test
cmc
lahf
lahf
or
cmp
and
scas
mov
jae
jge
scas
mov
neg
xchg
les
xor
les
ds
xchg
and
mov
repz
out
jbe
or
mov
mov
xchg
mov
(bad)
daa
dec
add
outs
repz
sub
dec
mov
or
jle
mov
ins
sar
and
sub
dec
mov
mov
out
(bad)
mov
dec
bound
inc
shl
lea
ins
xor
push
push
mov
pop
xchg
mov
dec
or
rcl
pop
jns
ret
fiadd
push
je
rol
xor
dec
cmps
dec
scas
test
inc
aam
imul
push
and
idiv
jmp
pop
xor
es
xor
rcl
int
inc
les
fsubr
mul
test
push
leave
les
jbe
repnz
jno
adc
les
js
jmp
out
mov
dec
add
jmp
jmp
(bad)
cmp
out
push
push
pop
cmps
pop
fwait
push
aam
gs
sbb
lea
xchg
inc
test
dec
out
sbb
fcomp
inc
test
mov
out
retf
pop
mov
and
pop
jmp
inc
shl
repnz
push
inc
gs
je
fucom
adc
lea
cmp
lods
sbb
out
out
ja
mov
clc
dec
add
(bad)
lock
push
out
xor
inc
pop
not
call
fwait
test
dec
add
ret
xchg
(bad)
xchg
dec
jb
and
adc
out
dec
fwait
xor
dec
(bad)
dec
or
out
outs
ret
gs
mov
cmp
and
cmp
mov
mov
sub
lds
push
repz
cmp
xchg
sub
out
jmp
call
adc
mov
daa
jmp
xchg
pushf
daa
sbb
out
push
movs
push
sbb
jbe
and
je
push
sar
push
mov
into
sbb
push
ja
lea
in
inc
sub
pop
push
xchg
adc
mov
cmp
xor
sub
movs
cli
fnsave
stc
jbe
cmp
and
(bad)
xchg
mov
push
fist
fcomp
push
scas
cli
jae
mov
repz
push
pop
fbld
or
push
xchg
rcr
rcr
aaa
and
jns
jae
popa
xchg
mov
daa
jbe
add
pop
imul
cmc
scas
enter
push
dec
(bad)
std
repz
icebp
push
jo
sub
stos
pop
mov
idiv
fdiv
sar
bound
inc
jp
push
mov
outs
mov
(bad)
in
sti
fnstcw
(bad)
ficomp
mov
xchg
sbb
push
test
outs
addr16
retf
sub
inc
sti
pop
dec
cmp
dec
mov
pop
sub
in
jle
pop
inc
jnp
cld
and
xor
rol
or
in
inc
add
out
adc
mov
add
ins
cmps
xor
test
repnz
fsub
aad
and
dec
iret
mov
pushf
lahf
pop
inc
pop
add
js
pop
jnp
mov
or
cmps
enter
adc
test
pop
mov
call
js
popa
jecxz
jnp
ss
test
sbb
push
rcr
inc
adc
stc
repz
rcl
ins
add
sbb
push
xchg
push
das
jle
popf
sbb
pop
push
and
cwde
sub
scas
jmp
ins
ins
mov
pusha
gs
test
ret
jl
shl
shl
call
inc
cs
jae
sahf
add
hlt
xchg
sbb
loopne
sbb
rcl
cs
cld
fist
pop
bound
inc
dec
ftst
mov
sbb
cdq
and
sbb
add
and
cld
xchg
cdq
sbb
xchg
das
push
mov
cmps
inc
inc
call
es
dec
cmp
add
dec
add
sub
or
jne
dec
fld
stos
outs
xor
std
sbb
pushf
cli
inc
jnp
and
add
ins
outs
inc
into
mov
xchg
ins
or
mov
mov
enter
mov
inc
cmc
mov
int
jp
or
movs
cmp
movs
mov
stc
adc
lods
sbb
mov
test
dec
mov
in
loop
xchg
std
int3
out
jno
sub
jb
mov
pop
scas
jbe
out
aam
or
dec
lds
xchg
dec
loop
int3
xchg
imul
jge
jmp
jmp
sub
mov
cdq
xor
adc
stos
or
outs
dec
cmp
sub
pop
pop
inc
scas
call
adc
call
or
loop
mov
sti
data16
jns
xchg
push
loope
mov
pop
pop
cmc
(bad)
shl
lahf
jle
pop
mov
inc
aaa
push
lods
pop
daa
mov
push
mov
loop
sub
mov
adc
mov
push
mov
bound
cmp
sub
scas
mov
add
inc
sub
push
jnp
in
and
lods
bound
(bad)
in
dec
ins
jmp
(bad)
sub
popa
je
mov
xlat
mov
xchg
inc
push
inc
sbb
pop
stc
movs
int
rcl
cs
adc
pop
shr
mul
cmc
test
dec
jl
xchg
push
push
sub
rcl
sahf
add
pop
out
ret
add
inc
lahf
loope
scas
in
(bad)
lock
xchg
dec
adc
xor
out
popf
out
jl
out
lods
mov
lods
iret
jns
out
lahf
add
lahf
(bad)
and
lahf
mov
xchg
mov
sub
push
scas
daa
pop
and
sub
jp
push
push
sub
push
cld
lahf
pop
nop
test
xor
pop
cmp
adc
adc
aad
shl
mov
(bad)
test
out
jle
loopne
(bad)
jge
mov
xlat
cmps
fsub
test
inc
(bad)
xor
pop
mov
xchg
xor
mov
pop
cmp
ds
ret
es
repnz
xor
push
xor
ins
test
out
fwait
jp
xchg
lods
xchg
pmaxsw
(bad)
sbb
inc
into
cmp
imul
cdq
push
push
scas
clc
xchg
and
leave
mov
cs
jbe
mov
retf
mov
lds
xor
and
imul
xor
sub
add
in
mov
pop
dec
loope
out
shr
add
ror
mov
fcom
mov
add
add
loop
dec
push
pushf
xor
jecxz
inc
ins
(bad)
sbb
fwait
sub
mov
loop
sar
imul
cmp
xchg
jecxz
popa
jbe
(bad)
lods
inc
arpl
bnd
mov
xlat
fs
fyl2xp1
lahf
int
stos
xlat
not
std
aad
inc
ins
cwde
in
mov
mov
cld
jbe
neg
adc
popf
jb
sbb
or
or
cmps
in
rol
and
cmp
or
cmp
jecxz
leave
cwde
jmp
retf
sbb
jle
adc
iret
push
fdivr
jle
adc
push
push
test
xor
mov
imul
and
add
xor
xchg
add
lods
or
stc
jae
int3
jno
daa
fldenv
push
ror
rol
lds
push
and
push
test
shr
fsubr
dec
hlt
das
mov
lock
jnp
pop
popf
add
mov
mov
cmps
cs
push
out
add
sub
int3
rol
lods
and
mov
addr16
aas
fwait
gs
dec
out
lar
std
push
outs
in
dec
mov
je
(bad)
popa
setb
lods
mov
push
jns
add
jo
push
jle
jge
mov
fcmovu
cmps
lock
xchg
push
jle
lea
xor
stos
lahf
shr
stc
add
fwait
mov
push
xlat
std
push
pop
jmp
cmp
ret
leave
nop
dec
sbb
dec
push
jns
push
std
adc
push
mov
shl
call
mov
sbb
or
adc
out
and
loopne
push
or
rcr
sar
out
xchg
into
icebp
rcl
push
(bad)
push
xchg
pop
test
fcomp
mov
nop
jmp
es
loop
push
xchg
fwait
mov
lods
add
xchg
stc
sbb
xchg
push
lahf
mov
ins
daa
or
inc
xchg
cld
clts
sub
(bad)
ds
jmp
adc
mov
shl
add
or
jnp
mov
dec
pusha
outs
enter
jbe
out
fstp
inc
mov
sub
xor
sub
xchg
sahf
pop
daa
movs
dec
or
js
add
inc
call
add
out
ja
pop
jle
fild
mov
dec
mov
adc
int3
mov
pop
cmp
pop
stos
(bad)
int
outs
cld
add
rcl
sub
mov
jb
jbe
or
mov
mov
ss
jmp
sbb
cmp
int3
adc
pop
in
mov
mov
scas
enter
add
ss
clc
call
lock
cmpxchg
inc
aas
sbb
ins
add
pop
add
xlat
stc
popf
imul
cwde
pop
lods
ins
mov
out
mov
cmp
jbe
imul
mov
outs
push
xchg
jle
jmp
aaa
stc
xchg
ja
pop
add
push
cld
aam
popf
out
xchg
sbb
sbb
inc
(bad)
sar
pop
ins
das
pop
dec
sbb
xchg
loope
rol
lock
pop
cld
out
out
xchg
mov
jl
inc
adc
mov
in
push
aaa
mov
cmps
pop
pop
sbb
and
mov
lods
fld
and
outs
retf
push
rcr
xor
adc
sbb
cdq
sub
or
or
mul
jbe
pop
stc
ja
stos
adc
mov
clts
iret
push
jo
push
jmp
jb
mov
mov
out
retf
cmp
scas
sbb
cld
cli
mov
and
imul
fnstsw
clc
xchg
sub
sti
movs
adc
cwde
mov
scas
or
mov
add
push
loopne
sbb
inc
js
dec
mov
mov
pop
dec
shr
jl
sub
cdq
dec
outs
cdq
sbb
rol
push
sbb
pop
xchg
jo
ret
push
je
pusha
fdiv
sbb
xlat
xchg
rcl
and
mov
sbb
inc
retf
outs
pop
inc
xor
(bad)
or
sahf
push
jl
rol
mov
icebp
adc
out
movs
and
jns
pop
and
jl
data16
sbb
mov
aad
cmp
call
out
jp
jge
shl
pop
push
or
ds
scas
mov
jmp
js
adc
popf
cmp
cmps
(bad)
scas
xor
and
inc
jle
imul
jmp
lds
aad
test
cmp
mov
inc
jae
cwde
stos
inc
adc
inc
lods
push
fistp
jo
xchg
adc
loop
je
sub
sbb
cli
or
cli
loop
scas
mov
aaa
sbb
sbb
mov
jbe
pop
ja
adc
test
int3
jg
adc
out
pushf
cmps
pop
cmp
mov
or
dec
mov
mov
xchg
stos
bound
or
mov
int
shl
fcmovnu
ins
sub
test
cmp
loope
xchg
and
jge
sbb
ss
mov
xor
ins
mov
cli
pop
cmc
pusha
or
xor
in
or
xor
xchg
xchg
imul
sbb
shr
or
mov
xchg
inc
inc
rcl
pop
mov
cwde
or
xchg
loop
aaa
imul
shr
outs
pusha
cmps
jae
adc
(bad)
jmp
leave
xor
imul
push
fimul
jo
(bad)
imul
cli
test
push
push
add
mov
arpl
ds
jne
dec
mov
cld
mov
shr
xor
cmc
push
movs
add
popa
dec
test
fidiv
cld
and
adc
rol
or
mov
(bad)
ret
add
ds
movs
(bad)
cmp
inc
mov
pop
mov
dec
ins
(bad)
cmp
loope
sahf
mov
push
and
mov
xor
push
push
pusha
lods
inc
clc
cmps
xor
cmp
lahf
and
icebp
sbb
ds
push
test
movs
ins
in
push
mov
hlt
das
jp
mov
dec
jno
push
inc
mov
or
mov
jge
jns
mov
and
pop
inc
push
ror
test
fmul
cli
mov
xor
xor
stos
mov
in
inc
or
xchg
xchg
ins
xor
jmp
mov
xchg
pop
push
fbstp
aas
xor
mov
imul
cmps
arpl
fmul
mov
push
repz
jne
and
mov
jmp
jmp
clc
sub
ins
dec
and
stc
xchg
mov
mov
sub
js
pop
hlt
(bad)
pop
xchg
je
mov
sub
sub
cmp
jge
in
jp
stos
outs
data16
call
dec
mov
es
xor
jmp
stos
std
ror
cmp
jb
and
jbe
ja
pop
sahf
rcl
out
scas
xlat
retf
shl
xor
out
sti
(bad)
(bad)
(bad)
les
prefetchw
or
mov
sub
nop
push
and
out
in
or
dec
es
daa
sbb
cmps
add
mov
cmp
sbb
mov
das
jge
mov
cli
cld
arpl
aas
add
xchg
jmp
mov
dec
pop
or
xchg
es
scas
pusha
xor
mov
adc
push
ret
adc
and
dec
mov
jno
shl
mov
sub
sar
xor
stos
mov
movs
fidiv
loop
inc
push
mov
mov
pushf
cmc
rcl
stos
jmp
pop
aam
in
jno
sub
mov
adc
dec
pop
jnp
mov
and
mov
das
or
aas
mov
aad
cmp
cli
cld
cmp
mov
sbb
repz
bound
(bad)
dec
mov
sub
out
sbb
iret
xchg
cmp
push
push
movs
fadd
inc
jo
ss
cmc
ja
lock
test
sub
es
lahf
pop
inc
fcmovb
xchg
fwait
pinsrw
repnz
lock
mov
jae
cwde
test
pop
pop
pop
addr16
jle
aas
adc
adc
inc
xchg
sbb
(bad)
jmp
cmc
inc
or
mov
gs
je
jns
xor
mov
shl
jne
inc
jp
xlat
cmp
push
inc
and
lds
pop
sub
fldenv
mov
mov
xor
mov
and
imul
jb
dec
shr
fadd
inc
(bad)
xchg
mov
nop
stos
mov
out
mov
dec
cmc
addr16
or
fs
stos
inc
sar
mov
pushf
inc
jb
inc
fdivr
jns
ja
xchg
pop
xor
dec
cmp
add
jmp
cmp
dec
xor
jge
bnd
outs
dec
xor
in
dec
lahf
cmp
ds
not
sahf
stos
cmp
mov
int
cmps
inc
rcl
fdivr
data16
pop
stc
test
pop
test
(bad)
mov
cli
mov
push
add
push
push
dec
or
jecxz
repz
sub
xchg
sbb
mov
mov
movs
jb
hlt
out
xor
sub
stos
ja
cld
hlt
(bad)
xchg
aaa
aaa
sub
pushf
lahf
inc
pushf
mov
pusha
sub
bound
stos
sti
cmp
mov
xchg
adc
mov
aaa
pop
mov
iret
movs
add
dec
popf
call
mov
sbb
repz
rcr
jmp
retf
mov
adc
mov
mov
jmp
iret
ins
les
into
packssdw
jmp
sub
jne
push
pusha
sbb
fistp
popf
cmc
sub
out
pop
js
pop
cld
call
and
sbb
lods
pop
es
and
sti
imul
push
test
mov
imul
pop
pop
push
retf
cmp
out
inc
add
mov
jmp
fstp
aam
mov
mov
aaa
or
enter
in
fdiv
ror
sub
xor
xor
fsub
jo
lods
ins
pop
dec
shr
ja
imul
popa
mov
sub
out
sbb
std
jo
enter
dec
(bad)
xor
mov
push
mov
push
imul
aas
aas
xchg
mov
push
std
scas
or
ins
shl
(bad)
js
or
mov
jmp
fbstp
popf
jae
mov
push
and
inc
ja
repz
stos
ret
or
ja
(bad)
rcr
fwait
test
pop
xor
push
inc
xlat
(bad)
fadd
imul
jg
ins
enter
iret
das
mov
aaa
bnd
push
pop
outs
xchg
pusha
lods
jbe
ret
cmp
loop
adc
xchg
(bad)
pop
jmp
call
sbb
and
cmp
test
(bad)
daa
addr16
pop
cdq
gs
jns
cwde
add
jge
sub
ins
outs
fild
cmps
mov
and
aam
out
retf
cmps
xchg
xchg
pushf
repz
repnz
xlat
xor
dec
fld
test
popa
dec
int3
jnp
mov
pop
cmp
cld
or
mov
outs
inc
popf
fs
or
out
mov
rcl
xor
popa
sbb
test
lahf
mov
in
cmps
dec
pop
push
fcom
push
stos
ds
sub
(bad)
or
stos
jnp
inc
inc
add
xor
(bad)
retf
xlat
and
popf
jo
push
mov
pop
jge
mov
clc
xor
std
jne
jmp
push
or
xchg
jl
mov
mov
mov
dec
sbb
add
fwait
popf
into
movs
or
cmp
add
sub
dec
push
rcl
jmp
add
(bad)
push
jb
dec
icebp
mov
fwait
daa
dec
and
fistp
aad
jle
inc
inc
arpl
jp
rcl
mov
push
xor
sti
ja
pop
ret
mov
psubsw
pusha
retf
jae
add
inc
ret
adc
aaa
push
inc
mov
ja
outs
jae
pop
mov
add
sub
or
cmp
add
push
add
fisub
addr16
dec
or
(bad)
enter
in
mov
xchg
test
inc
and
and
adc
enter
into
cmp
std
scas
mov
outs
sbb
sub
sbb
inc
out
test
add
xor
mov
xchg
push
retf
sub
into
jecxz
pop
pop
add
inc
std
popf
sub
mov
(bad)
lea
ins
or
or
lea
mov
and
test
mov
dec
inc
aam
xchg
enter
jl
push
adc
xor
sbb
push
dec
std
ins
mov
inc
movs
jp
inc
and
jg
pushf
inc
pop
add
push
in
mov
sbb
xchg
jp
nop
push
sbb
lea
add
rcl
fcomi
sub
mov
cmp
imul
call
cli
std
sub
and
cdq
fcomp
push
cmp
sub
stc
mov
imul
retf
test
fnstsw
mov
mov
add
ja
mov
stc
mov
or
in
in
dec
cmp
aas
popf
xor
push
stos
xchg
inc
jl
clc
inc
scas
sbb
imul
in
outs
inc
or
xchg
xor
loope
or
push
mov
mov
loopne
jno
mov
inc
jnp
dec
dec
ja
sar
in
clc
xchg
mov
pop
inc
jne
inc
jae
push
aaa
int3
aam
test
adc
mov
popa
push
fwait
scas
es
xchg
lock
push
mov
inc
ficom
ds
add
ds
retf
inc
jo
(bad)
and
sbb
pushf
dec
inc
lahf
into
push
xchg
inc
jno
std
dec
shl
movs
dec
mov
mov
cmc
call
sub
mov
fwait
push
jnp
mov
or
dec
mov
adc
repz
adc
sub
(bad)
arpl
repz
iret
test
inc
mov
adc
outs
daa
sbb
and
retf
xor
cli
push
(bad)
mov
retf
cmp
scas
(bad)
jg
sti
mov
outs
clc
aas
sub
pop
jge
mov
das
xor
pop
das
scas
and
sub
gs
in
in
and
jmp
mov
lock
and
xchg
push
adc
pop
stos
and
xchg
adc
mov
jmp
adc
inc
pop
cld
jo
xchg
aas
sub
adc
popf
push
call
rcl
test
pop
cmp
push
xor
jg
sti
xchg
fistp
dec
out
mov
aaa
ja
(bad)
mov
jp
leave
aam
in
mov
add
mov
fadd
jp
xchg
mov
pusha
std
or
cmps
xchg
mov
add
jne
test
and
je
stos
jbe
add
addr16
mov
sub
push
mov
lods
inc
sub
jnp
pop
outs
mov
outs
adc
frstor
cli
data16
repz
mov
mov
lock
dec
nop
and
xchg
mov
scas
mov
mov
scas
punpckhbw
or
stos
mov
popf
sbb
jo
inc
retf
test
aaa
jb
sub
retf
jmp
ret
dec
call
outs
popf
add
inc
out
jmp
xchg
pusha
cld
adc
mov
push
jmp
cdq
or
add
mov
outs
scas
and
mov
jae
mov
fcmovb
jl
pop
shr
fld
rol
jnp
push
mov
adc
push
in
adc
sub
in
push
fidivr
out
rcl
pop
sub
movs
push
enter
jnp
into
leave
mov
cmp
jmp
inc
dec
push
lock
push
dec
pop
jne
mov
mov
dec
xlat
xchg
mov
pusha
push
add
mov
cmp
jae
mov
mov
pop
ret
or
jle
into
jno
les
lea
mov
pop
call
mov
fisub
pop
dec
hlt
dec
(bad)
cld
xchg
pop
movs
add
and
enter
and
call
cwde
lea
mov
fadd
or
jnp
jae
retf
push
and
retf
mov
mov
stos
test
(bad)
scas
jo
pusha
stos
adc
cmps
scas
retf
xchg
xor
cs
in
ins
movs
adc
jmp
or
xlat
outs
fcmovnbe
mov
fcom
mov
add
mov
int3
lahf
lahf
xor
and
xchg
lea
int3
push
imul
aaa
pusha
jmp
enter
mov
pop
movs
bound
data16
seta
mov
mov
scas
sub
mov
repnz
mov
or
jb
mov
rcr
inc
imul
adc
xchg
popf
pop
lock
add
jae
call
sbb
jb
loopne
pop
xchg
(bad)
push
pop
test
pop
scas
shr
inc
push
sbb
arpl
cmp
mov
jo
stos
mov
clc
test
xor
sub
sub
into
dec
clc
pop
xchg
xchg
retf
enter
into
icebp
movs
xchg
mov
arpl
test
mov
or
lds
and
aam
dec
sbb
pushf
(bad)
cmp
lds
and
mov
loop
inc
das
fcomi
sub
and
and
imul
mov
push
push
xchg
jle
adc
jo
jo
push
jecxz
fs
dec
xchg
add
cmc
pop
cmc
cmps
fdivr
inc
mov
mov
add
shr
stc
mov
sar
or
or
repnz
sub
test
test
cld
stos
popf
scas
sub
fisttp
loop
mov
jne
or
shl
pop
xchg
jmp
jbe
push
daa
cwde
ja
xor
xlat
pop
dec
mov
sti
push
add
inc
ss
jo
xor
mov
inc
jmp
loope
gs
test
push
and
mov
jp
stos
cld
mov
stos
lahf
movs
inc
fs
leave
fbstp
es
addr16
aam
push
movs
retf
mov
enter
mov
gs
cmps
inc
test
adc
lock
(bad)
(bad)
movs
stos
test
js
mov
cmp
aaa
mov
aam
jbe
clc
fadd
ins
fistp
popa
mov
out
jo
xor
jbe
les
(bad)
(bad)
jno
push
fstp
or
adc
dec
push
es
xchg
or
jne
and
idiv
lds
lahf
xor
sbb
ins
xor
jno
call
popa
push
inc
imul
fcomp
push
in
ins
pop
mov
mov
inc
imul
mov
mov
scas
daa
pushf
dec
mov
add
call
push
pop
jnp
sub
(bad)
pop
rcr
hlt
popf
push
cmp
cs
fwait
sub
jmp
fwait
(bad)
fidiv
imul
pop
lea
sub
mov
fs
push
or
or
and
mov
call
adc
call
test
jp
xchg
mov
enter
ret
sbb
iret
sbb
call
mov
push
xlat
mov
sbb
push
pop
sub
jbe
mov
js
ror
cld
sub
or
ins
and
mov
dec
xchg
and
push
pop
add
or
fdiv
stos
cmp
mov
std
addr16
or
pop
jmp
adc
shr
adc
sbb
and
push
jno
push
jne
inc
push
jns
fld
jnp
mov
dec
push
sahf
mov
or
out
ret
test
mov
mov
cmps
imul
fmul
scas
xlat
jb
addr16
into
ja
jmp
test
mov
rcr
mov
sti
xchg
sub
(bad)
and
and
jns
sub
dec
add
ins
mov
sti
dec
ds
inc
sti
leave
inc
mov
push
aaa
lahf
test
shl
sbb
inc
xor
cwde
hlt
mov
out
pop
scas
adc
fistp
adc
js
inc
loope
stos
test
test
xchg
or
leave
mov
(bad)
ins
and
fdivr
call
dec
mov
inc
jp
pop
and
add
aaa
cmc
je
push
mov
mov
ret
xor
cmp
in
loop
dec
mov
mov
scas
repz
inc
pop
shr
xchg
in
nop
repz
push
mov
xor
dec
rcl
sub
rcl
mov
inc
sub
xor
cld
call
pop
clc
out
sub
xchg
mov
bound
test
les
stos
or
xchg
adc
mov
scas
and
out
lods
cmc
retf
rcl
push
in
dec
stos
cmps
test
mov
dec
cwde
loopne
adc
push
sbb
add
cmp
jbe
dec
es
mov
rol
sub
iret
jge
fisttp
xchg
add
int3
pop
sub
rcl
mov
movs
movs
sbb
icebp
sbb
clc
movs
xor
daa
or
mov
mov
iret
gs
ins
les
adc
xor
xchg
jl
mov
xchg
jecxz
push
dec
cmp
daa
mov
test
mov
adc
fcomi
dec
mov
mov
pop
sbb
push
xchg
xchg
arpl
xlat
xchg
xchg
xchg
cwde
jo
or
inc
mov
enter
push
sub
fwait
dec
push
cwde
cmp
js
xchg
loopne
and
out
dec
ins
(bad)
fcomp
jnp
mov
push
jns
fmul
fisttp
fmul
cld
fucomp
jg
movs
(bad)
lds
rcr
ss
das
test
xor
repnz
movs
xchg
scas
dec
out
ja
push
jl
pop
inc
xor
clc
retf
cmps
sbb
popf
mov
sub
jb
sbb
pop
int3
mov
in
sbb
or
sbb
fs
and
inc
cli
out
stc
push
mov
movs
ficom
fs
dec
mov
cli
mov
int3
push
test
inc
or
push
inc
mov
push
aam
sub
mov
lods
pop
xor
inc
pop
dec
pop
mov
sub
std
ja
ret
jmp
and
scas
sub
lahf
arpl
and
jns
push
bound
pop
sub
xchg
sbb
xchg
xchg
push
adc
jmp
hlt
mov
aad
cmp
int
inc
cmovbe
push
and
adc
dec
out
mov
adc
aas
cs
sub
xchg
xor
xor
fidiv
xor
xchg
int
dec
out
mov
jecxz
jle
lods
pop
mov
add
bound
jb
enter
mov
outs
mov
push
aad
icebp
ror
inc
cmp
push
mov
sub
imul
mov
xchg
shl
cmp
mov
arpl
out
xchg
push
fist
xchg
dec
and
pop
scas
dec
sub
mov
sub
sub
in
sub
jp
outs
out
sub
lock
mov
or
jb
xor
fnsave
push
out
js
aad
xchg
(bad)
sub
dec
std
push
xor
pop
jecxz
(bad)
inc
push
add
hlt
lods
loopne
ins
inc
stos
pop
(bad)
fcom
into
enter
pop
into
movs
mov
jmp
lock
xor
pushf
inc
out
mov
inc
mov
pop
fistp
jp
push
sahf
push
imul
mov
mov
dec
pop
push
dec
pop
inc
hlt
scas
xor
int3
add
out
ret
fnsave
adc
lods
dec
mov
mov
and
mov
jecxz
in
sbb
lods
fcmovnb
in
mov
mov
adc
sub
jge
fnstenv
cld
jmp
sar
aad
mov
or
xor
fs
jo
fucom
inc
jns
pop
ds
inc
jb
sbb
cmp
xchg
pushf
cmps
aaa
sbb
xchg
adc
fs
movs
mov
stos
leave
(bad)
xlat
(bad)
push
adc
xchg
push
dec
or
fs
jecxz
nop
adc
gs
fstp
fisubr
sub
mov
push
inc
loopne
sub
jp
retf
xor
mov
adc
pop
mov
sti
movlps
leave
jo
adc
push
rol
sub
jle
inc
mov
add
adc
std
jmp
mov
scas
mov
outs
pop
data16
in
xor
(bad)
cwde
rcr
repz
xchg
pop
mov
adc
loopne
cld
and
fdivr
cdq
jnp
je
fnstsw
cmp
push
jg
call
xor
xor
inc
(bad)
jbe
cmps
sar
mov
inc
mov
push
sahf
sub
pop
dec
adc
adc
cmc
sbb
push
cmp
fdiv
ss
imul
fdivr
mov
add
pop
or
xor
in
scas
mov
mov
xchg
mov
nop
sar
clc
ds
mov
dec
cmp
mov
stc
(bad)
cmp
dec
sbb
pop
xchg
or
dec
push
push
jno
push
outs
xchg
sbb
daa
daa
mov
cmps
test
and
dec
mov
xchg
jl
aad
aad
jp
jno
pushf
cli
or
sub
jge
pushf
ret
aam
xor
cld
inc
xor
outs
mov
mov
into
jecxz
push
outs
inc
retf
fldcw
lahf
outs
xchg
movs
stos
xchg
nop
stos
sbb
adc
loop
xchg
inc
fisub
stc
mov
xchg
(bad)
mov
test
cld
dec
mul
xchg
les
add
sbb
xor
jb
sub
adc
cwde
sub
dec
mov
dec
ret
loop
mov
dec
lods
sub
inc
not
add
hlt
jne
out
nop
jg
jo
cwde
add
test
xchg
test
rol
and
inc
icebp
mov
mov
hlt
lea
movs
add
cs
je
sbb
jmp
mov
inc
sub
push
in
lods
mov
rcr
cmp
dec
sbb
sbb
sub
stos
lahf
fld
fstp
(bad)
imul
push
jecxz
mov
pop
les
push
fld
xor
movs
mov
ror
fnstenv
setg
mov
inc
aam
shr
cwde
cs
or
inc
dec
leave
out
ss
hlt
push
xchg
jg
sar
mov
push
pop
push
jp
lds
out
jg
or
fwait
movlps
(bad)
jle
sbb
dec
imul
arpl
jno
xor
gs
add
cmp
dec
push
daa
xor
cmp
cli
mov
cmps
pushf
sti
scas
mov
push
push
mov
inc
xor
add
std
(bad)
fnstenv
sbb
out
movs
clc
fdivp
mov
push
ins
and
jnp
adc
pusha
mov
adc
and
je
or
add
sub
fst
hlt
jmp
jp
in
into
retf
pop
dec
aaa
xor
pop
hlt
inc
jnp
(bad)
xor
mov
test
ret
(bad)
mov
inc
popf
jmp
dec
jl
sti
xlat
jl
inc
adc
pushf
mov
ror
and
addr16
call
sahf
sbb
sub
ds
icebp
loope
xor
in
mov
rol
sbb
repnz
out
shl
shl
iret
lds
je
test
fisub
or
mul
mov
and
imul
ss
in
hlt
jns
add
mov
je
test
stos
dec
cmp
dec
mov
lahf
sub
out
adc
fst
and
inc
leave
jp
mov
out
out
rcl
dec
int
bts
das
pop
imul
jb
arpl
imul
inc
sub
out
mov
mov
out
pop
push
or
jge
jge
aaa
(bad)
xor
pop
pop
daa
ficom
cmp
in
push
xchg
pop
std
push
cmp
add
jne
pop
pop
jmp
and
cwde
mov
and
pop
add
adc
dec
out
(bad)
sub
rol
loope
clc
xchg
add
adc
mov
les
stos
out
xchg
test
mov
rcr
ins
bound
sub
ret
or
adc
sub
std
xchg
icebp
loop
fild
adc
and
imul
ror
mov
mov
sti
(bad)
push
push
imul
ror
in
lods
repz
int3
mov
cld
jg
scas
mov
arpl
(bad)
ins
xchg
int
fld
inc
pop
jle
and
ins
in
push
loope
inc
fs
dec
inc
outs
movs
mov
cdq
pusha
fmul
nop
adc
(bad)
in
lahf
dec
xor
adc
into
js
adc
fwait
jle
sub
fwait
pavgw
add
aad
hlt
pop
aam
rcl
lods
iret
into
mov
ins
fst
xchg
jae
movs
dec
sbb
fwait
or
mov
cs
cli
push
xor
ja
pop
shr
rol
mov
dec
mov
imul
cs
cdq
cmc
arpl
aas
inc
fadd
push
or
push
test
push
out
pop
dec
inc
rcl
jmp
jp
push
cmps
cmp
add
icebp
cmc
xchg
xchg
and
push
jno
jmp
das
sbb
(bad)
push
dec
jmp
adc
out
pop
xchg
mov
stos
sub
hlt
add
ror
in
jl
pop
cli
idiv
inc
bnd
imul
pop
cwde
inc
fwait
xchg
jne
xor
lds
dec
movs
popa
jmp
retf
aad
and
pop
aad
mov
mov
sahf
sub
repnz
loope
or
aad
std
cli
and
dec
icebp
mov
fidiv
or
mov
add
xlat
cmp
das
adc
sub
loope
adc
push
mov
mov
add
jmp
int3
out
fwait
std
aaa
dec
shl
push
test
push
push
push
fldenv
jns
xchg
pop
lock
mov
fdiv
xchg
mov
loop
or
mov
dec
adc
cmp
add
retf
ss
cli
or
and
push
pop
scas
xor
bound
push
inc
daa
sub
stos
or
mov
shr
stos
jmp
sti
shl
in
inc
mov
sbb
cmp
loop
sti
jg
in
sbb
jo
div
sbb
cwde
retf
(bad)
(bad)
cmp
sub
cmc
mov
and
daa
inc
mul
xor
leave
iret
hlt
mov
dec
xor
push
mov
sbb
sub
and
fsubrp
xchg
add
mul
cmp
fnsave
xchg
ins
mov
dec
mov
add
add
in
int
outs
hlt
inc
in
ret
test
clc
(bad)
or
mov
inc
mov
xchg
popa
js
cli
cmc
out
and
adc
inc
lock
sbb
ret
add
add
das
retf
add
jae
rcl
jno
idiv
pop
mov
mov
out
into
jnp
xchg
fcom
or
and
jmp
fistp
call
iret
dec
in
cmp
aam
push
jne
mov
xchg
pop
aad
sub
rcr
sti
scas
xchg
mov
ins
ja
out
pop
push
jecxz
mov
fist
fucomi
cmp
addr16
ror
jg
pop
mov
sbb
ins
dec
mov
sbb
scas
add
call
xor
mov
adc
push
leave
jns
or
cmc
xchg
imul
(bad)
push
sti
add
xchg
push
sub
shl
pop
sub
xor
out
jbe
mov
fdiv
push
or
sbb
push
mov
outs
pop
jmp
inc
int3
ins
bound
pushf
xchg
stos
cmp
push
repnz
test
hlt
xor
retf
sub
push
jne
mov
ins
inc
mov
cld
dec
inc
scas
retf
shl
pop
es
es
imul
bound
bound
push
jno
ror
into
mov
stc
(bad)
out
inc
ins
div
retf
add
sbb
jecxz
repnz
mov
daa
or
xlat
out
cmc
add
xchg
vmovapd
and
mov
dec
mov
clc
sub
(bad)
out
rcr
mov
dec
fist
and
test
dec
xchg
cmc
xchg
push
scas
repnz
mov
shr
xchg
pop
add
cli
scas
cmps
ja
inc
mov
aam
sub
test
loopne
dec
and
shr
jne
mov
dec
sub
fidiv
and
inc
inc
lds
push
int
(bad)
xlat
mov
pxor
not
cld
psllw
pop
mov
cmps
adc
pop
ins
sbb
addr16
and
pop
sti
mov
sub
inc
pop
xor
cmp
add
cmp
mov
mov
les
mov
and
mov
jae
xor
icebp
jmp
mov
jl
outs
pop
js
movs
loopne
cmp
outs
pop
bnd
adc
push
or
int
mov
punpckhbw
jmp
call
cmp
int3
cmp
cmp
jl
stos
and
xchg
icebp
jnp
pushf
add
cwde
pusha
rcr
mov
mov
into
add
push
mov
mov
cmp
push
mov
jle
xchg
dec
add
je
(bad)
jb
cdq
dec
or
shr
jg
mov
rcl
sbb
pop
test
mov
push
cmps
and
push
int3
cdq
retf
pop
cmp
js
xchg
sahf
jle
inc
sub
clc
bound
add
cmps
jge
jl
inc
add
xor
mov
dec
out
cmps
shl
xor
lahf
jg
mov
cmp
outs
in
or
in
push
hlt
fs
or
in
push
or
xlat
jno
mov
push
dec
sbb
test
ja
scas
jae
dec
pop
mov
adc
ror
int
popf
shr
and
push
mov
fs
dec
lds
loope
fmul
cmps
out
jae
stos
adc
inc
add
push
xchg
sub
mov
jmp
aad
push
mov
and
sbb
out
add
and
frstor
pop
dec
sbb
jnp
retf
push
xor
cmp
outs
or
loopne
mov
jecxz
push
and
add
ss
jmp
in
xor
mov
xchg
fstp
shl
sbb
push
bound
out
jl
cmp
stc
inc
pusha
inc
ret
push
sub
jo
jmp
jmp
xchg
cdq
mov
stc
cdq
loop
add
mov
popa
adc
push
sbb
mov
or
pusha
mov
in
mov
add
and
and
sbb
pop
adc
xchg
jecxz
pop
int
mov
sub
cmp
xor
in
push
addr16
mov
fisubr
fcmovb
mov
dec
dec
jmp
jmp
mov
pop
mov
mov
inc
nop
mov
lods
mov
push
mov
pop
jecxz
out
and
push
dec
sti
and
add
and
jo
leave
and
or
jge
dec
push
out
push
and
imul
or
mov
call
cmp
sbb
and
push
scas
xor
lsl
dec
inc
cli
(bad)
adc
ficomp
movs
add
jmp
test
sub
cmc
in
mov
jmp
(bad)
hlt
rol
sar
jne
push
fdiv
jp
jae
push
adc
sbb
mov
xor
div
ds
pop
lods
ret
out
loop
jge
add
cmc
or
arpl
outs
xchg
(bad)
(bad)
sbb
iret
add
loope
jb
and
cmp
or
mov
daa
idiv
pop
xor
icebp
jae
mov
cmp
rcr
scas
repnz
sub
sbb
mov
jl
sub
xchg
add
cld
(bad)
test
rsm
(bad)
sbb
sti
dec
stos
jo
stos
cmp
je
cmp
jno
sbb
imul
jno
mov
xor
dec
pop
mov
push
div
and
xchg
ret
inc
fisttp
ret
pop
hlt
sbb
(bad)
clc
push
fcom
cmp
inc
aad
mov
add
jne
xchg
fnstcw
fidivr
std
lahf
lds
jb
enter
sbb
les
in
(bad)
xchg
cmps
adc
fisubr
ins
(bad)
daa
adc
adc
and
push
push
push
fistp
jg
push
outs
mov
mov
gs
dec
pop
inc
dec
aas
jle
fldenv
adc
push
pop
mov
or
out
call
push
add
test
and
popf
pop
xchg
jmp
push
sbb
out
outs
push
fistp
mov
jmp
pushf
call
loope
stos
pop
(bad)
jmp
loope
ror
into
add
xor
jae
in
mov
jnp
je
stos
add
les
jecxz
pop
mov
add
lds
mov
jbe
ror
sub
xor
in
dec
mov
addr16
mov
cmc
out
xchg
mov
fnstenv
cmp
cmp
jne
popf
pusha
pop
fs
adc
mov
adc
aas
sub
cmp
sbb
ss
push
bound
out
mov
cwde
aaa
add
jae
add
repnz
push
add
xor
loopne
fcom
adc
adc
ins
cdq
lds
out
stos
adc
sub
test
sbb
loope
adc
cmp
inc
and
sbb
and
inc
test
(bad)
cmp
test
inc
pushf
cmp
or
mov
adc
test
push
gs
adc
aaa
inc
not
push
jne
adc
ret
jno
inc
add
(bad)
popa
ins
push
inc
pop
add
push
nop
ja
(bad)
rcl
inc
pop
pop
hlt
pop
mov
xor
and
adc
test
xlat
cmc
pusha
retf
inc
cwde
cdq
stc
xlat
xchg
adc
pop
inc
and
es
dec
pop
lahf
jecxz
sti
mov
aas
enter
sahf
add
or
icebp
xchg
js
pop
xor
xor
xchg
add
inc
adc
adc
int
jl
and
test
add
addr16
push
mul
xor
jl
and
popf
imul
mov
xor
adc
in
sub
aad
mov
cmps
std
ds
mov
mov
pop
neg
gs
popf
xor
aad
(bad)
das
ja
mov
mov
pop
ret
lahf
fcom
xchg
sub
fs
imul
xor
into
jl
jnp
or
outs
dec
rcl
ficom
and
cmps
out
xchg
pop
xor
scas
sbb
jnp
gs
pop
mov
iret
outs
add
mov
sub
adc
mov
push
or
in
rep
xchg
dec
sbb
push
addr16
pop
sub
xor
push
and
add
(bad)
sar
pusha
xor
sbb
out
pop
xchg
xor
sub
pop
pop
sbb
rol
enter
movs
ret
fdivr
das
mov
repz
sbb
pop
pop
mov
xchg
and
test
mov
int3
stc
xor
mov
pop
aad
ins
jno
cli
jns
jno
push
push
and
jmp
mov
pusha
ss
cmc
pop
push
add
div
xchg
call
int
jb
and
mov
xor
pop
icebp
(bad)
das
jo
icebp
push
jmp
out
cwde
sbb
fwait
clc
nop
and
dec
add
pop
sbb
and
sti
jl
retf
push
push
mov
es
sbb
scas
dec
xchg
jb
or
mov
pop
clc
ds
repz
das
icebp
push
cmc
push
inc
and
add
ror
int
les
lods
cmp
mov
test
jp
nop
fadd
push
cs
and
xor
mov
push
mov
dec
xor
jle
loope
int3
or
movs
cld
xchg
test
cmps
in
sbb
mov
mov
sub
popf
push
inc
sahf
in
sbb
mov
mov
jmp
(bad)
jl
mov
inc
or
enter
hlt
sub
fst
ret
fwait
inc
inc
sbb
cmc
dec
cs
rcl
cmp
scas
push
hlt
mov
ret
repz
rcl
repnz
add
retf
sub
cdq
imul
lods
cwde
push
aas
test
and
pop
or
popf
fistp
inc
mov
push
xchg
or
push
adc
scas
sbb
popa
mov
mov
mov
mov
dec
mov
jmp
scas
(bad)
mov
int3
ror
pop
popf
push
pop
jns
mov
adc
mov
or
jle
cdq
(bad)
mov
hlt
sbb
fs
jne
pop
or
cld
mov
xchg
push
sbb
sahf
loope
adc
push
add
xchg
sub
add
repnz
push
xor
(bad)
not
nop
dec
pop
mov
inc
fs
xchg
add
loope
fwait
leave
int3
add
cwde
mov
sbb
lods
fsubr
int3
sub
push
push
push
push
movs
pop
cvtdq2ps
sub
add
sar
out
sti
cmp
inc
aas
or
sbb
push
jmp
enter
mov
in
aaa
(bad)
adc
outs
(bad)
sub
movaps
mov
dec
js
mov
repnz
(bad)
mov
js
sahf
pusha
jmp
cdq
cmc
mov
call
pop
push
inc
lahf
addr16
sub
mov
add
xchg
cld
repnz
xor
adc
mov
call
(bad)
push
scas
or
pop
inc
lods
add
outs
cld
into
adc
cmp
jge
jo
dec
repz
jp
push
and
pop
xor
cmp
test
test
jecxz
retf
or
mov
jmp
movs
(bad)
cmc
test
push
jp
push
cmc
or
test
in
mov
adc
xor
imul
rcr
cli
mov
dec
xchg
inc
lods
dec
mov
ret
adc
lods
jne
add
mov
cwde
int3
mov
sbb
jmp
out
and
add
jne
sar
sahf
xchg
mov
ret
ins
dec
or
mov
outs
add
daa
ret
inc
push
jae
ins
fdivr
imul
pushf
ja
sbb
dec
inc
mov
inc
jno
daa
xor
scas
test
dec
inc
call
pop
ins
dec
test
scas
xor
push
inc
mov
mov
(bad)
add
xor
scas
cmp
and
inc
(bad)
sub
cld
xchg
aas
sbb
mov
inc
or
xor
jp
adc
dec
push
ja
lock
and
adc
jl
adc
hlt
popf
lahf
ror
jg
fsubr
pusha
les
xor
and
mov
test
cwde
fs
sbb
and
test
or
jp
adc
mov
add
xor
adc
push
test
or
dec
and
loopne
cwde
outs
dec
fistp
mov
out
inc
lds
push
adc
push
stc
shl
inc
and
mov
std
mov
leave
inc
mov
js
dec
mov
fs
inc
jnp
aas
mov
dec
ins
icebp
mov
adc
sub
arpl
fisubr
mov
enter
int
mov
sub
data16
dec
ret
gs
jle
std
lock
rcl
dec
and
push
repnz
out
sti
jmp
mov
shr
aad
or
xchg
push
lahf
cld
fwait
adc
xchg
jle
outs
push
jne
inc
dec
ds
jecxz
into
dec
jl
pushf
pop
sbb
movs
ds
cli
jge
outs
ins
fisttp
imul
std
cmp
add
test
call
ja
fisttp
pusha
mov
and
movs
ss
int3
jae
inc
pop
sub
mov
popa
ins
aad
xlat
cmps
inc
sbb
inc
(bad)
mov
shr
xchg
push
fld
mov
test
xor
jnp
mov
neg
pop
sahf
mov
jne
jecxz
in
dec
mov
pop
push
and
ret
fwait
loope
cld
imul
xchg
mov
cmp
pop
add
mov
pop
arpl
mov
dec
jecxz
test
or
sti
mov
std
movs
out
xlat
jns
stos
and
out
sbb
(bad)
out
push
sbb
adc
(bad)
inc
inc
jne
push
fdiv
imul
cmp
inc
ds
test
call
mov
mov
sbb
sbb
xor
jg
dec
dec
inc
in
dec
add
push
xchg
cs
push
xchg
fcomp
xchg
loop
xlat
xlat
dec
(bad)
adc
xchg
and
rol
or
test
(bad)
adc
cdq
mov
mov
loope
test
sub
(bad)
in
push
aas
cmp
repnz
(bad)
loop
loope
idiv
or
and
addr16
mov
xchg
out
mov
cmps
push
retf
or
mov
xor
aaa
and
pshufw
dec
mov
inc
push
(bad)
cmp
sbb
cmps
ins
dec
inc
outs
or
sub
ins
cli
js
push
jle
jne
xchg
or
aas
test
or
lods
ss
test
and
jmp
into
inc
std
xor
into
mov
(bad)
pop
retf
imul
pop
cdq
retf
mov
cmp
js
clc
or
or
inc
stc
pop
cmovnp
mov
sti
push
cmp
(bad)
pop
pusha
add
bound
mov
mov
cwde
mov
rcl
mov
sbb
jg
add
(bad)
repnz
or
pop
fs
or
lea
jp
cmp
loope
rcr
lds
movs
imul
pop
mov
xchg
dec
aas
sub
push
mov
sub
add
sub
mov
xchg
imul
xchg
push
inc
mov
push
fild
dec
dec
or
hlt
adc
pop
pop
or
call
mov
mov
push
mov
lock
mov
mov
mov
daa
in
and
sti
xor
leave
pusha
pop
xchg
jg
std
int3
leave
push
outs
adc
or
pop
sub
dec
dec
inc
mov
cmc
movs
ret
push
jns
sbb
cli
mov
shl
retf
rcr
xchg
push
xchg
xlat
ins
push
xchg
je
std
adc
pop
sbb
jle
shl
lods
(bad)
sub
fdiv
call
js
loop
mov
retf
imul
mov
jns
retf
sub
push
add
jae
cmp
push
mov
jl
in
fsubr
push
xchg
aad
or
push
and
(bad)
js
loope
out
sbb
jb
lock
or
push
mov
iret
dec
das
out
xchg
test
popf
or
stos
test
xchg
bound
ret
arpl
(bad)
jns
ror
mov
sbb
rcl
xor
sbb
xlat
mov
cmp
(bad)
jnp
add
inc
lods
sti
inc
and
mov
ret
out
or
fisttp
in
out
ja
int3
sbb
aam
fistp
test
loope
rcr
xchg
sahf
sbb
inc
leave
add
pop
xchg
ja
sbb
adc
adc
ror
movs
fisub
or
jbe
js
pusha
rcl
dec
or
movs
fwait
out
dec
ret
ficom
xchg
add
jp
aas
jmp
(bad)
test
mov
cs
rcl
mov
repnz
jno
mov
movs
int
das
adc
dec
or
xchg
pop
sar
in
cld
push
push
clc
jl
or
outs
sub
jno
test
out
test
into
push
mov
stc
test
clc
outs
cmp
pop
and
or
add
and
add
or
add
mov
test
(bad)
or
out
test
pop
push
mov
mov
test
inc
jbe
(bad)
lods
dec
cmp
test
mov
mov
sub
xor
aas
cmp
cmc
pop
sbb
pop
les
jne
lahf
(bad)
cmp
retf
popa
sub
bound
xchg
(bad)
repz
xor
std
mov
mov
scas
ja
nop
xchg
mov
and
xchg
in
cmp
hlt
(bad)
in
or
ss
sbb
gs
xchg
out
mov
fcom
rcl
cmps
mov
mov
ror
jne
rcr
ja
or
xchg
mov
jnp
ror
mov
arpl
mov
mov
ins
test
pop
sub
(bad)
jle
hlt
inc
inc
neg
sub
xor
es
cmps
dec
xchg
jb
ret
cmc
dec
dec
mov
cmps
push
dec
ss
jns
inc
and
(bad)
cs
cmp
or
cli
rcl
jl
out
fild
xchg
jno
fs
je
adc
inc
pop
sar
jmp
sub
dec
mov
dec
cmp
inc
aaa
jbe
ss
scas
push
dec
fcomp
ins
sbb
push
outs
sbb
mov
xchg
add
jns
test
aas
fnstcw
call
mov
mov
imul
xor
daa
ret
or
pop
mov
lea
fisttp
jl
jb
jl
sub
daa
fisubr
adc
and
test
(bad)
sub
imul
loopne
cwde
cmp
loope
ins
and
cmp
outs
ins
inc
jb
popa
xor
push
jmp
scas
lds
icebp
mov
aad
dec
sbb
xchg
push
jl
imul
push
scas
mov
xchg
pop
or
pop
mov
popf
jno
sub
popf
xchg
mov
ret
(bad)
pop
jmp
xchg
pusha
xor
mov
pop
rcl
xor
icebp
(bad)
inc
mov
stc
push
pop
sbb
lods
rol
adc
pop
cmp
retf
shr
je
rcr
inc
leave
adc
sbb
clc
lods
jns
adc
adc
retf
out
scas
and
push
sub
and
std
xor
mov
sub
dec
dec
inc
adc
xor
lock
loopne
fwait
loop
add
clc
ins
test
rol
add
cs
out
retf
add
push
pop
inc
scas
adc
(bad)
clc
dec
(bad)
fld
jp
es
daa
call
imul
xor
ds
add
dec
jmp
mov
jno
mov
cmp
mov
loopne
gs
leave
rol
adc
jo
mov
in
mov
mov
push
add
scas
xchg
pop
not
(bad)
aad
mov
ja
dec
add
in
cwde
mov
dec
mov
add
cmp
xchg
add
loope
imul
jae
fs
je
sbb
adc
sbb
push
pop
aam
sti
mov
mov
cmp
adc
adc
and
(bad)
mov
and
dec
iret
inc
pusha
sub
sub
mov
mov
fwait
add
test
jns
sbb
jp
mov
neg
xor
add
rol
dec
sub
fnsave
cmp
icebp
mov
jno
fwait
sub
js
mov
sti
mov
arpl
mov
(bad)
inc
popaw
mov
test
push
push
dec
pmaxsw
mov
cmp
sti
test
adc
aaa
jle
(bad)
lock
neg
ror
outs
loope
xchg
retf
mov
or
xor
pushf
inc
mov
loop
adc
scas
xchg
sub
ret
and
retf
int3
rol
fbld
ss
mov
call
pop
aad
sbb
std
bound
(bad)
fadd
fcmovu
mov
out
or
mov
movs
nop
fld
cmp
ret
call
sbb
sar
sar
push
clc
test
test
imul
mov
in
add
sub
mov
lahf
fcomp
inc
xchg
neg
xchg
add
xchg
jl
pop
sbb
pop
pop
push
aad
outs
frstor
xchg
sbb
aas
ds
mov
(bad)
mov
ffreep
mov
add
fistp
mov
js
fcom
pop
sbb
adc
lock
daa
mov
cmp
cmp
push
mov
or
nop
adc
sbb
sub
mov
sbb
in
cmp
mov
cmp
scas
aam
popf
pusha
jbe
leave
pop
jne
stos
adc
jg
inc
aad
ret
ins
daa
sbb
mov
lds
int3
jmp
push
mov
mov
push
sbb
dec
mov
cmp
mov
adc
add
jmp
pop
mov
pop
lods
enter
push
jmp
mov
loope
mov
xchg
sbb
cld
xchg
cs
in
sub
mov
adc
cmps
jl
adc
lahf
cmp
xchg
sub
fs
inc
out
xor
or
loope
or
popf
add
jns
sub
mov
out
jne
mov
push
push
repnz
xchg
aas
jp
rol
pop
mov
test
mov
jmp
aad
xor
loope
fdivr
ins
into
pop
jb
push
mov
cld
pop
mov
lock
fld
mov
or
sub
sub
fistp
(bad)
sti
push
iret
pop
pop
pop
xchg
jns
outs
cmps
fst
xlat
lods
jmp
inc
push
mov
addr16
or
(bad)
mov
sbb
aas
mov
pusha
inc
mov
jmp
out
out
repz
inc
sub
call
fs
mov
push
out
mov
(bad)
je
inc
leave
outs
xor
lds
jle
into
sbb
add
and
retf
cmp
rcl
dec
in
out
xor
imul
pop
addr16
xor
cs
aam
push
sbb
mov
mov
lods
pop
mov
mov
ret
cmps
jne
hlt
mov
mov
xor
pop
or
xchg
gs
add
repz
fsub
mov
(bad)
fnstenv
out
(bad)
and
(bad)
and
fwait
push
xchg
sbb
cwde
sbb
xlat
mov
loopne
js
into
dec
pusha
xchg
sbb
ret
pop
mul
ja
cmc
aas
ficom
xor
retf
ins
hlt
cld
mov
push
jno
test
test
lock
jle
cmps
ja
std
(bad)
inc
jae
loopne
xchg
loop
sbb
xchg
cmp
jecxz
nop
out
add
mov
out
mov
popa
out
movs
out
add
and
mov
les
stc
adc
sar
loop
mov
leave
pop
or
add
psllq
mov
mov
(bad)
push
fidiv
and
or
inc
ret
jnp
popa
mov
push
scas
mov
stc
or
sub
ret
stos
xchg
fisttp
lods
xchg
mov
cmc
mov
and
adc
mov
ja
fld
test
jno
pop
mov
cmp
adc
fimul
mov
imul
ins
pushf
mov
inc
or
cs
sti
aas
jmp
pop
jbe
and
shl
push
enter
adc
pushf
pop
add
add
(bad)
mov
dec
stc
daa
test
add
mov
shr
cmp
inc
pop
add
or
dec
xchg
xor
pop
in
ror
xor
sbb
aaa
loop
sub
out
mov
imul
loop
sahf
int3
imul
movs
push
lods
mov
scas
xchg
add
nop
dec
fadd
add
push
jo
inc
mov
mov
call
mov
pop
inc
sub
sbb
mov
or
or
loopne
or
ror
addr16
pop
pop
hlt
sbb
fist
mov
mov
add
sahf
movs
out
push
push
push
cmc
hlt
call
pop
pop
or
retf
lods
jns
xchg
sahf
sar
jbe
loopne
fwait
cli
(bad)
popa
pop
inc
sub
jmp
push
test
movs
sbb
mov
test
loope
out
xchg
dec
or
jl
push
dec
jo
push
stos
rol
mov
ret
out
int
daa
idiv
std
pop
inc
xor
je
and
sub
(bad)
sub
ret
adc
pushf
push
frstor
addr16
bound
cmps
psrad
add
push
jbe
stos
xchg
aaa
stos
imul
push
outs
inc
(bad)
dec
cwde
fimul
sbb
mov
pop
pop
pop
pusha
push
ins
push
dec
or
es
(bad)
in
or
shr
sub
pop
test
mov
push
xlat
xor
ins
push
push
dec
mov
xchg
cmp
dec
ins
xor
xchg
xchg
mov
iret
jp
mov
lea
mov
cld
mov
or
test
ficom
jbe
xchg
(bad)
mov
inc
mov
leave
clc
cmps
cs
imul
cdq
pop
add
clc
fist
push
arpl
loope
(bad)
aas
add
test
xlat
jecxz
dec
je
mov
pusha
cli
dec
lods
mov
inc
mov
or
jg
dec
pop
mov
mov
mov
sahf
mov
mov
pop
xor
mov
mov
js
or
popa
add
jl
inc
ds
cmp
into
mov
adc
jo
popa
fsub
cmp
xchg
cmp
push
sbb
and
mov
loop
hlt
sub
push
ret
push
mov
jnp
(bad)
and
xchg
push
mov
in
adc
xchg
sub
nop
or
jmp
add
jmp
dec
fisub
mov
jg
push
sahf
retf
loopne
cmp
inc
mov
pop
xor
cmps
cs
xor
jbe
xor
push
enter
inc
das
pop
mov
xor
fild
gs
mov
xchg
jns
test
mov
repnz
mov
cwde
lds
data16
and
push
aas
rol
jmp
push
mov
(bad)
jecxz
cdq
dec
mov
mov
dec
outs
mov
xor
mov
bt
xchg
ret
mov
lds
adc
xor
scas
fbld
(bad)
ror
push
test
sub
into
fldpi
jo
fwait
retf
sbb
std
test
dec
sub
cmp
cmp
das
lock
sub
push
cli
scas
dec
cmp
push
or
push
stc
sub
add
xchg
shl
push
in
nop
xlat
ds
ss
enter
dec
enter
test
dec
test
push
xchg
arpl
jne
js
inc
repz
pop
dec
push
stos
jb
lock
pop
into
ror
mul
cmps
clc
daa
fisttp
lea
(bad)
ror
in
and
mov
fmul
mov
sbb
gs
shl
pop
mov
outs
add
icebp
dec
inc
jnp
loop
(bad)
jecxz
pop
shl
(bad)
sbb
stos
iret
jno
sbb
shl
in
adc
test
mov
adc
xchg
repnz
jno
aas
(bad)
fcmovne
inc
mov
hlt
pop
addr16
mov
test
lods
mov
or
jmp
stos
mov
cmp
jae
sbb
inc
retf
pop
dec
xor
loop
inc
pop
iret
sub
loopne
js
push
adc
sbb
adc
sar
inc
cdq
movs
mov
sbb
xchg
aam
mov
cmp
mov
in
mov
aam
push
rep
xchg
cmps
in
mov
sub
mov
sub
xchg
ror
adc
push
and
cmps
je
stc
test
adc
jecxz
jmp
outs
mov
iret
add
es
and
fwait
je
gs
out
add
lea
dec
leave
mov
pushf
cmp
arpl
sti
fbld
or
popf
xchg
xchg
push
and
test
or
in
xchg
and
xor
je
ret
push
ror
lahf
xor
popa
inc
or
nop
das
mov
sbb
adc
test
xchg
ds
enter
adc
xchg
and
(bad)
test
jmp
jo
xor
or
mov
test
add
(bad)
cmc
retf
fnsave
xchg
jo
xor
xchg
ds
cld
add
inc
rol
dec
fldenv
cs
inc
lds
in
cmp
out
sbb
cmp
leave
dec
test
in
or
add
cmp
movs
ret
lea
push
inc
or
xchg
xor
cmps
or
and
mov
fsubr
pop
and
dec
gs
aad
and
and
sub
jbe
sbb
lods
int
scas
rsqrtps
inc
nop
sbb
push
out
inc
(bad)
sbb
in
add
adc
jmp
mov
mov
mov
bound
pop
xor
jmp
(bad)
std
cli
in
std
ins
lock
lods
sbb
push
fadd
inc
xchg
push
push
(bad)
cmc
dec
fmul
pop
xchg
std
push
jge
or
(bad)
cwde
cmp
sbb
js
test
mov
lahf
push
mov
cmp
pop
jnp
cdq
mov
adc
or
mov
test
std
mov
sti
(bad)
sub
mov
outs
ins
movs
iret
jnp
cli
mov
test
jge
sub
clc
xor
xchg
cmp
pop
inc
or
or
fimul
in
ins
into
add
outs
mov
mov
mov
push
test
adc
cdq
dec
cmps
leave
add
(bad)
jge
aam
ds
lds
jl
bound
cmp
imul
sbb
test
sahf
cwde
mov
in
xchg
push
sub
inc
cmp
jo
in
push
daa
push
mov
jmp
test
rcl
stc
hlt
mov
ja
pop
nop
fild
test
sbb
mov
fsubrp
sar
sbb
add
inc
adc
test
inc
std
lock
pop
xchg
adc
nop
fadd
movs
push
int3
mov
cmp
fimul
push
push
pop
sbb
add
lea
inc
(bad)
fcomp
mov
retf
mov
retf
mov
xor
fs
push
ror
clc
xor
inc
cmp
jg
and
fs
movs
loopne
shr
mov
loope
ret
push
daa
ss
adc
or
cmp
lahf
fsincos
sub
mul
inc
add
push
test
or
mov
pop
shl
int3
mov
cld
mov
aas
jmp
test
cmc
add
fidiv
or
je
jge
and
and
mov
lahf
xlat
pop
dec
cmp
sbb
cmps
clc
repz
clc
retf
rcl
outs
imul
out
and
iret
popa
popa
cmps
ret
jge
mov
(bad)
aas
aaa
push
fimul
retf
daa
lds
hlt
cmp
jle
add
push
xchg
add
sub
fucomi
jno
sbb
xor
pusha
dec
call
xchg
inc
xchg
or
cmps
ss
inc
jnp
movs
pop
pop
sbb
movnti
fsub
inc
addr16
push
push
inc
cmp
or
rcl
(bad)
jnp
ds
aas
mov
ins
push
mov
aas
es
and
jmp
(bad)
cld
inc
dec
adc
ret
xchg
mov
cmp
cs
cmps
call
jo
adc
xchg
jns
jae
xchg
jae
lods
jle
adc
jno
mov
fistp
and
add
test
out
rcr
push
pusha
popa
jle
fidiv
(bad)
cmps
outs
push
iret
(bad)
in
mov
cmp
jmp
repnz
dec
add
add
mov
shr
mov
adc
and
aaa
out
xor
push
cmp
mov
imul
jmp
adc
pop
into
jo
lock
xor
mov
js
dec
inc
cmp
mov
es
sbb
ds
and
jnp
jb
mov
out
jle
scas
xor
pop
push
cmp
adc
icebp
mov
imul
pop
mov
mov
sbb
push
mov
or
repz
sbb
xchg
adc
fwait
stos
addr16
dec
pop
sahf
jne
jmp
inc
ja
and
jno
in
cmp
xor
mov
bound
shr
jl
mov
scas
push
mov
sti
adc
jae
push
loop
shr
fdiv
lds
fs
or
jle
and
stos
test
ss
sub
leave
std
out
xor
cwde
aam
sbb
fisttp
ins
call
cdq
outs
xor
(bad)
adc
lods
cmp
imul
lds
loop
push
jle
xchg
int
std
push
hlt
in
mov
cmp
loopne
ins
mov
or
jns
mov
sub
dec
or
outs
in
fisttp
fiadd
retf
mov
cmc
sub
push
adc
ins
gs
push
cmps
jg
arpl
dec
cmps
mov
bound
mov
xchg
pop
retf
inc
mov
je
adc
imul
inc
sub
test
int
mov
pop
mov
lahf
jbe
das
push
ret
ds
push
loope
xor
and
in
xor
adc
mul
xchg
sub
in
pop
loope
jbe
add
addr16
sbb
lods
retf
jecxz
fiadd
cdq
xlat
mov
jp
mov
sbb
popa
or
mov
pop
lods
and
int
movs
adc
dec
ins
push
or
sbb
daa
jb
sub
jo
add
jmp
out
pusha
sbb
popf
mov
sub
outs
xchg
aaa
js
mov
dec
push
xchg
cmps
xchg
popf
or
inc
lods
fsubrp
jle
outs
sub
mov
pop
cmp
and
dec
imul
in
in
adc
jle
inc
cmc
test
or
into
movs
gs
mov
daa
cs
shl
mov
cmp
mov
shl
rcl
test
mov
inc
jmp
rol
in
cmps
mov
dec
cmovnp
(bad)
movs
or
push
inc
dec
in
jmp
ins
cmp
xor
lds
adc
push
rcl
adc
xor
bsr
imul
inc
cld
aad
popa
rcr
mov
xchg
es
push
and
(bad)
jo
test
pop
repnz
jno
sub
cmp
in
fisttp
xchg
adc
fmul
mov
jecxz
(bad)
dec
dec
cmp
in
pop
movs
dec
cmp
aaa
mov
cmp
or
shl
add
xchg
pop
adc
cmps
xchg
jo
in
test
xchg
ror
ss
dec
and
mov
sti
ret
inc
in
jnp
and
fimul
or
pop
xchg
stos
sti
push
(bad)
int3
(bad)
lock
popa
sti
bound
inc
sub
into
ret
xchg
inc
out
stos
sahf
sub
mov
jno
test
inc
jl
xchg
xor
out
outs
mov
sbb
jns
ins
mov
adc
outs
pop
xchg
cmp
sub
in
or
mov
add
sbb
sub
lock
mov
inc
mov
jmp
popa
push
xor
adc
mov
sbb
adc
sub
mov
dec
pusha
push
sahf
jne
and
push
jl
imul
test
shl
sub
in
lds
lock
adc
dec
sbb
mov
xor
xor
out
jecxz
jmp
jne
daa
or
fldcw
mov
cmp
ret
bound
cmps
fdiv
mov
cmp
cmps
int
jmp
cmps
fidivr
arpl
pop
pop
push
shl
xchg
pushf
push
add
jmp
ins
add
lods
inc
cmps
fimul
push
or
sti
mov
imul
popf
ins
movs
lods
(bad)
jmp
sbb
adc
imul
xor
(bad)
jo
sbb
retf
sbb
cld
mov
jmp
xor
clc
push
xor
je
add
cmp
dec
inc
sub
mov
mov
aaa
inc
or
imul
arpl
repnz
test
das
arpl
and
and
pop
fsubr
sbb
test
mov
shl
cwde
leave
jmp
push
std
test
sbb
mov
cmp
jg
mov
movaps
sub
das
mov
xor
mov
mov
idiv
je
hlt
movs
aas
std
push
sbb
imul
add
jg
sub
dec
xchg
in
push
retf
pop
into
lahf
sbb
mov
lahf
scas
xchg
sub
das
minps
mov
xchg
push
arpl
pop
mov
push
int
jae
xor
cli
sbb
pop
sub
push
fdiv
imul
adc
xchg
mov
pop
scas
jmp
cmp
repz
test
mov
jnp
scas
sbb
mov
dec
lock
and
sbb
adc
jg
adc
inc
sbb
lods
sbb
mov
hlt
movs
xchg
test
xchg
or
cmp
mov
sub
inc
iret
and
inc
fisttp
aam
inc
sti
jp
lea
lea
mov
in
je
cmp
and
adc
pop
daa
or
es
scas
and
add
pushf
hlt
mov
mov
mov
shr
fsub
out
and
aad
(bad)
sti
cdq
cmp
or
inc
adc
retf
aam
adc
test
sub
mov
into
arpl
xor
data16
lahf
and
call
fdivr
xor
xchg
adc
jmp
or
mov
leave
rol
inc
pop
(bad)
and
dec
xchg
stos
cwde
(bad)
call
fidiv
jo
jns
or
or
clc
mov
cmps
stos
pop
mov
shr
addr16
into
clc
lods
xchg
or
cmc
mov
pop
popa
xchg
sub
shr
fnstsw
mov
mov
xchg
xor
add
push
ror
xchg
inc
adc
fprem
adc
ror
and
inc
hlt
mov
daa
out
push
xor
adc
dec
(bad)
push
arpl
pushf
fnstsw
(bad)
aad
je
movs
push
mov
out
call
lds
mov
pushf
mov
enter
adc
fild
imul
in
mov
mov
dec
fmul
and
out
in
cld
mov
es
(bad)
out
adc
push
call
mov
push
sahf
mov
mov
(bad)
test
xor
jns
(bad)
aas
pop
(bad)
cli
std
fild
pop
sbb
leave
fld
jmp
sbb
adc
cmps
xor
shl
in
mov
sar
lods
ss
int3
jg
or
jle
dec
lds
push
int3
mov
cmp
inc
or
out
mov
xchg
add
aaa
push
icebp
les
mov
xor
dec
scas
adc
cdq
(bad)
jns
mov
xchg
in
dec
sub
retf
inc
iret
add
(bad)
std
mov
jg
or
lock
push
aam
pop
fs
and
xchg
mov
add
clc
add
hlt
pop
push
(bad)
mov
fidiv
push
lds
push
and
imul
mov
stc
cld
shl
inc
and
jge
addr16
aaa
jle
add
leave
xor
pop
mov
inc
stos
push
cmp
mov
int3
movs
mov
fbld
fistp
stc
jns
add
out
sub
xchg
retf
bswap
int
daa
aaa
xor
inc
outs
or
sub
lds
cwde
mov
cmps
sub
lock
in
mov
in
push
dec
inc
(bad)
and
push
lahf
xor
mov
je
into
fidiv
sbb
test
pop
sub
or
outs
or
xchg
mov
inc
das
mov
xlat
sbb
cmps
push
jnp
adc
pushf
icebp
mov
icebp
mov
mov
stos
out
outs
sbb
jge
and
sti
out
aad
ret
jnp
jno
mov
lods
cld
add
fsub
ins
push
mov
jns
aad
int
fwait
mov
xchg
repz
sbb
xchg
pop
push
jmp
leave
xor
stos
bound
inc
sbb
adc
jecxz
sub
and
in
pushaw
mov
add
jecxz
xchg
xlat
add
xor
mov
xor
sub
adc
loop
lahf
rcl
fimul
push
call
ror
jle
mov
add
in
paddw
mov
icebp
repnz
jmp
jg
cmp
fmul
neg
xchg
jne
pushf
add
mov
(bad)
bound
jbe
ret
stc
mov
xor
inc
call
push
jo
jg
cmp
out
mov
xchg
rol
sar
je
mov
es
or
ror
mov
mov
fsub
and
cmpps
(bad)
fist
in
in
xchg
pop
std
adc
inc
pop
mov
mov
jno
push
aas
imul
cwde
push
int
jl
add
adc
outs
push
pop
sbb
into
ins
inc
aaa
mov
inc
mov
sbb
fmulp
sub
push
mov
imul
add
ficom
sar
pop
push
lods
loopne
xchg
in
push
xlat
mov
fxch
sub
mov
and
sbb
mov
lods
jb
inc
inc
push
adc
subps
mov
scas
leave
push
push
ror
mov
sti
fcmovb
mov
xor
mov
aad
xchg
call
mov
mov
add
dec
xchg
add
cmps
ds
leave
stos
pop
xor
mov
pop
sbb
test
cs
(bad)
mov
inc
xor
jne
outs
aas
xor
mov
xchg
xchg
or
or
inc
outs
fidivr
dec
mov
clc
(bad)
mov
outs
pop
and
fsub
in
outs
mov
shl
jne
call
je
push
stos
xchg
xor
aas
add
fist
les
mov
adc
push
xor
add
and
lock
mov
lods
cmc
outs
cld
jnp
dec
add
leave
inc
xchg
cmp
pusha
ins
or
mov
dec
mov
sar
xchg
push
mov
jae
hlt
popa
xchg
mov
call
mov
or
mov
mov
fsub
push
inc
or
mov
fidiv
sbb
add
enter
sbb
mov
pop
iret
push
sub
aas
cmc
mul
popa
jmp
nop
cmp
inc
and
mov
push
ds
or
outs
sbb
mov
jmp
not
cmps
rol
sub
jl
lock
xchg
mov
mov
js
sbb
enter
adc
shr
pusha
pop
xor
push
mov
adc
scas
jecxz
push
xlat
movs
daa
movs
mov
push
inc
adc
pop
in
push
pop
xchg
outs
sar
daa
ds
cs
push
aad
sub
cmp
xchg
add
mov
sub
mov
sub
lock
sbb
fiadd
jbe
popa
pop
or
sub
movs
dec
jle
push
cmp
adc
(bad)
xor
and
push
sahf
mov
outs
push
mov
sub
pop
loopne
(bad)
out
add
xchg
pop
repz
adc
jae
stos
fisttp
push
jbe
pop
mov
inc
jg
div
(bad)
stos
fisubr
xor
push
add
cli
scas
fld
daa
retf
test
ins
mov
add
xchg
sub
iret
sbb
aad
dec
iret
gs
xor
xor
call
in
out
mov
mov
cwde
adc
adc
mov
xor
loope
xchg
jo
mov
xchg
mov
test
and
imul
xchg
outs
xor
out
imul
jle
hlt
addr16
sub
add
xchg
neg
(bad)
pop
test
iret
stc
(bad)
fcomi
sub
js
rcl
add
sub
inc
(bad)
cmp
push
ins
stc
mov
test
pushf
out
imul
mov
mov
cmp
pop
add
sub
jp
push
add
jl
fwait
(bad)
int3
cld
daa
or
push
pop
mov
adc
int
jmp
mov
outs
movs
pop
clc
jg
jb
pop
mov
and
imul
mov
movs
pop
and
mov
stos
mov
fisub
lods
sub
sahf
(bad)
lods
mov
mov
aam
push
xchg
lods
push
push
or
cmp
pop
cmp
stos
call
fwait
fwait
scas
fisttp
les
shr
dec
fild
outs
imul
les
jmp
hlt
mov
mov
pop
and
or
retf
les
out
xchg
fmul
sub
cld
ret
inc
fcmovne
retf
out
ret
aam
loop
loopne
rcl
sbb
std
inc
ror
cmc
jmp
hlt
pop
pop
pop
xlat
(bad)
ja
aaa
mov
(bad)
xor
dec
test
mov
sub
xchg
dec
leave
cmp
movs
in
(bad)
jbe
mov
std
int
(bad)
(bad)
adc
repnz
pop
xchg
mov
aaa
cld
int3
jo
jnp
push
ds
dec
xor
jae
aad
(bad)
addr16
add
and
adc
data16
mov
sub
icebp
mov
and
test
jecxz
pop
xchg
mov
jo
add
pmaxub
push
loope
jbe
in
movs
popa
ror
mov
inc
mov
and
movs
ins
mov
sahf
leave
add
jmp
dec
fimul
and
and
mov
sub
xchg
pop
xlat
imul
mov
popf
ds
push
xchg
mov
jg
push
adc
jmp
test
sub
pop
and
mov
push
mov
clc
int3
shl
xchg
out
pop
pushf
push
idiv
(bad)
out
jae
inc
mov
dec
fcmovnb
cmp
xchg
ja
nop
(bad)
test
aas
and
rol
lods
xchg
cld
adc
hlt
inc
and
mov
mov
sbb
(bad)
popa
xor
in
fsub
push
dec
sbb
push
int3
pop
les
inc
pop
call
xor
stos
mov
or
lods
fs
cdq
loopne
jnp
bound
mov
pop
rol
out
jmp
cmp
fwait
call
clc
fwait
mov
cmp
out
cmp
out
pop
rcr
loop
scas
inc
pop
ret
jmp
push
cli
ss
jecxz
cmp
xor
cwde
adc
enter
sub
out
xor
shl
xor
mov
pop
leave
(bad)
fbld
icebp
cmp
retf
mov
aam
push
sbb
xchg
jle
mov
dec
or
call
xor
xlat
jae
mov
int3
mov
dec
fidiv
jne
jecxz
adc
nop
xchg
fs
fild
hlt
out
rcr
mov
lods
div
(bad)
jle
test
ins
mov
das
ret
int
adc
test
retf
pop
mov
in
cmps
xchg
cmp
and
leave
call
xchg
cmp
das
pushw
pop
mov
push
rol
cmp
pop
mov
lds
pop
push
pop
pop
mov
(bad)
jae
cli
pop
push
or
add
ds
out
int
xchg
dec
jb
int
push
sahf
push
dec
adc
ror
jo
mov
pop
push
or
pop
fisttp
add
retf
inc
mov
adc
jmp
pop
pop
push
cmovo
sbb
ja
xlat
push
mov
push
sbb
and
xor
das
mov
or
int3
xchg
jae
xchg
push
call
neg
xchg
and
es
loop
cmp
push
mov
jae
pop
inc
mov
(bad)
(bad)
cmps
pop
and
je
jle
cmc
out
cmps
mov
in
into
jb
push
sub
test
mul
xchg
mov
fiadd
out
mov
pop
jp
out
fs
aad
test
scas
dec
mov
fbstp
xchg
add
dec
jmp
in
pusha
adc
mov
mov
xor
shr
stc
je
xor
jae
pop
iret
cmp
or
xchg
lods
sahf
cli
sbb
cwde
mov
inc
jns
aaa
or
mov
add
lods
xchg
pop
rcl
xchg
addr16
and
inc
xor
or
test
call
mul
stos
test
das
cmp
mov
je
sbb
adc
enter
inc
push
in
and
add
stc
gs
and
outs
push
(bad)
xor
jnp
push
fs
mov
sbb
int
call
inc
pop
xchg
es
dec
and
xchg
adc
xchg
les
movs
sub
aam
xor
jmp
outs
or
pushf
ins
fnstenv
and
or
sbb
loop
dec
fdiv
cmc
cld
daa
xor
add
jno
push
cwde
fnstcw
cld
ins
push
pop
push
out
addr16
or
imul
arpl
std
je
sti
fst
jmp
mov
and
ret
test
in
jbe
ins
xor
dec
xchg
mov
sbb
xlat
cmc
cld
dec
jb
xchg
lds
cmp
sub
popf
lahf
xor
aaa
outs
mov
stc
das
jns
or
mov
fcom
test
mov
icebp
fisttp
js
test
sub
or
fist
stos
sti
jae
sub
mov
or
mov
ret
test
xchg
ins
dec
mov
outs
mov
imul
inc
xchg
and
cmp
xchg
nop
test
pop
dec
adc
loopne
xchg
sbb
jb
cmp
fwait
mov
mov
pop
out
lahf
push
and
repz
push
clc
pop
cwde
or
stos
(bad)
dec
out
or
add
jo
adc
rcr
js
pop
dec
mov
mov
xor
cmps
mov
sub
xor
aaa
jnp
mov
mov
mov
stc
add
ja
fwait
mov
inc
xor
pop
paddd
jecxz
cmp
retf
jbe
dec
nop
hlt
repz
popf
fwait
mov
mov
add
cmp
lock
enter
jg
push
sub
inc
jecxz
stc
movs
push
jbe
xor
jmp
je
clc
mov
jp
lahf
aam
repnz
(bad)
stos
jecxz
retf
out
int3
and
js
xchg
mov
call
dec
fcmovu
cmps
adc
lock
mov
ins
ret
in
daa
xor
mov
add
mov
call
shr
push
addr16
dec
shl
fwait
mov
sahf
mov
push
adc
jl
and
outs
(bad)
js
aam
arpl
cmp
inc
(bad)
imul
pop
test
inc
push
mov
dec
sbb
mov
pop
and
xor
clc
cmp
mov
pop
xchg
test
out
or
mov
retf
inc
je
retf
lss
sub
jae
iret
mov
fst
add
mov
pop
mov
or
ret
jecxz
(bad)
in
pop
xor
mul
inc
jle
movs
fs
mov
fdiv
dec
jecxz
dec
dec
mov
(bad)
movs
fdivr
cwde
fisttp
outs
xor
lods
data16
push
(bad)
add
bound
(bad)
enter
icebp
add
fimul
push
dec
inc
pop
push
add
iret
sbb
pushf
mov
out
aas
xchg
cmp
popa
lock
xchg
(bad)
jns
and
sbb
add
sbb
ja
dec
adc
out
push
(bad)
push
nop
ins
or
jg
mov
push
mov
mov
mov
xchg
jne
sbb
or
pop
enter
jmp
inc
rcl
in
loopne
push
sub
dec
arpl
es
sub
inc
sbb
push
imul
gs
adc
inc
jae
test
jb
ss
mov
popf
cmp
lds
dec
xor
jns
repz
addr16
imul
or
fmul
js
iret
ret
jmp
int3
dec
jge
mov
inc
in
inc
push
pop
(bad)
rcl
sbb
and
and
mov
sbb
punpcklwd
fstp
int
ja
xchg
aad
lods
cmps
shl
les
mov
cmc
xchg
dec
ja
jl
or
dec
push
clc
push
test
pop
sti
(bad)
cmp
aam
add
push
sub
cmp
stc
jmp
sub
and
or
jne
lods
loopne
mov
ds
pop
(bad)
sub
sub
lea
ins
in
out
inc
ror
in
sbb
fwait
jno
in
inc
(bad)
shl
jmp
or
jg
inc
sub
pop
adc
xor
and
aam
inc
jnp
out
pop
mov
(bad)
mov
dec
sub
mov
(bad)
mov
addr16
loop
cdq
loopne
pop
ss
xchg
out
mov
ret
fisub
jge
mov
xchg
fiadd
sbb
aam
mov
dec
out
or
cmovno
(bad)
sub
mov
icebp
jge
daa
sbb
(bad)
mov
outs
retf
jae
mov
lods
or
mov
aad
adc
sub
or
daa
data16
xor
pop
out
fst
ret
push
leave
inc
test
push
sbb
inc
sar
mov
cmp
jmp
adc
lds
js
jns
ror
cmps
retf
push
add
in
pushf
sub
xor
test
leave
sti
daa
mov
int3
sbb
stos
mov
cld
cmp
cmp
ret
das
hlt
jb
xchg
dec
sar
mov
shl
das
outs
call
lods
ins
fst
push
add
into
jns
push
xchg
jmp
imul
inc
pop
sub
mov
fcom
mov
ficomp
push
pop
jmp
outs
daa
add
pushf
xor
sbb
jecxz
jg
hlt
gs
mov
and
repz
dec
std
test
add
movs
out
ss
xor
imul
icebp
mov
mov
shl
fstp
sar
pushf
mov
mov
ss
ret
push
pop
icebp
pop
dec
jno
dec
test
jae
inc
cmp
and
push
sub
icebp
fcmovnu
mov
ins
inc
hlt
push
inc
jne
aas
cmp
pop
setl
sbb
popf
popa
mov
mul
loop
sbb
scas
repz
mov
xor
shl
inc
scas
dec
shl
ins
add
dec
xor
sub
mov
(bad)
push
mov
(bad)
and
(bad)
sbb
or
fldenv
std
or
mov
or
popa
in
test
xor
cmp
mov
cmp
sahf
adc
xchg
ret
mov
dec
xchg
mov
sbb
xor
ins
sti
(bad)
lods
and
inc
les
or
movs
scas
jnp
div
loop
lods
pop
(bad)
lods
add
movs
adc
leave
xchg
jp
sbb
push
in
cmps
daa
je
punpckldq
dec
and
loopne
add
sbb
mov
mov
xchg
inc
push
mov
shl
mov
xchg
lea
fidivr
dec
data16
dec
dec
aas
push
jae
fst
sub
jae
add
sub
adc
and
mov
sbb
mov
mov
inc
pop
(bad)
cmp
loop
loop
mov
jnp
in
cmp
jmp
dec
leave
jge
clc
push
outs
fdivr
dec
cmp
out
jns
add
jno
call
out
mov
push
test
dec
pop
mov
sar
pop
mov
mov
xchg
xchg
out
pop
push
inc
aam
das
repnz
xchg
scas
jbe
mov
aas
inc
inc
xor
adc
add
std
call
push
pop
repz
pop
fldenv
idiv
out
sbb
mov
mov
cmp
or
cmp
ret
(bad)
and
je
mov
push
jmp
cmps
mov
ficomp
jno
nop
mov
xor
mov
jno
popa
int3
jg
mov
and
int
in
xor
test
retf
into
pushf
push
lods
ret
cwde
fdiv
pop
int
cs
push
xchg
xlat
mov
dec
pop
jmp
push
sahf
adc
fst
pop
ficom
xchg
add
sub
out
cmp
add
or
pop
add
out
shr
lods
(bad)
(bad)
js
out
ds
xchg
jbe
mov
leave
jbe
xor
aas
mov
jns
jecxz
xchg
jno
xor
adc
push
(bad)
sti
rcl
aad
shl
jb
ins
mov
mov
adc
fst
mov
mov
add
inc
sub
dec
xor
rol
jecxz
test
push
cwde
xchg
stos
dec
pushf
adc
push
xor
mov
dec
push
push
(bad)
imul
fcmovnbe
add
sub
inc
cmps
xchg
inc
mov
retf
pushf
dec
mov
push
inc
mov
inc
pop
jl
ret
lds
sbb
xor
and
pop
pop
mov
ret
mov
movs
ret
ficomp
fs
xlat
cmp
mov
test
retf
(bad)
cmc
ja
pop
sbb
mov
movs
xchg
xchg
call
and
mov
or
push
mov
adc
shr
(bad)
push
pop
cmc
mov
in
dec
cmp
xchg
leave
or
popa
neg
mov
(bad)
adc
das
and
xchg
cmps
cmps
inc
mov
ss
sbb
xor
or
and
mov
lea
inc
addr16
test
and
push
fwait
aaa
lahf
aas
pusha
cdq
mov
std
aaa
xchg
push
aas
pop
fisubr
adc
cli
xor
sbb
into
mov
mov
sbb
outs
or
dec
jmp
out
out
call
test
sub
add
inc
inc
gs
or
cmc
cmp
(bad)
jmp
jb
les
jmp
xor
(bad)
and
shr
and
aam
test
fldenv
in
shrd
mov
cmp
pop
inc
mov
pop
(bad)
ret
xchg
xlat
jne
and
(bad)
pop
mov
out
sbb
jg
test
add
inc
aam
pop
mov
ds
fwait
xchg
mov
xchg
mov
mov
call
adc
xlat
test
add
ficom
push
cmp
in
adc
mov
in
loopne
xor
push
sbb
mov
lea
fbld
sbb
jbe
scas
cmc
jns
lds
add
ror
and
push
int3
scas
dec
pusha
or
ins
push
sub
sbb
hlt
jo
ror
push
cmp
push
int3
mov
(bad)
das
lahf
cli
add
mov
pop
movs
pop
mov
imul
xchg
retf
xchg
jle
icebp
fild
jmp
(bad)
sbb
fistp
mov
push
push
cmp
push
lock
mov
pop
scas
enter
test
pop
out
fwait
or
cli
fadd
movs
addr16
add
xor
and
or
cmc
sub
push
xchg
adc
sbb
add
add
mov
dec
enter
(bad)
int3
ret
push
aaa
scas
nop
or
les
repnz
mov
xchg
scas
aam
jmp
mov
jb
iret
push
icebp
bound
movs
data16
cmp
mov
jl
cdq
add
popf
icebp
iret
add
inc
pop
jne
inc
mov
push
pop
xchg
cmp
push
repnz
mov
popf
push
sub
aas
sbb
mov
add
push
xor
sti
cmps
add
cmp
int
ss
mov
pop
pop
fsub
fdivr
ret
nop
rol
test
adc
push
fisub
in
dec
repnz
sti
test
dec
ret
xchg
jl
cmp
jp
cs
push
inc
cli
repnz
retf
cdq
inc
mov
ss
cmps
pop
jmp
push
push
jnp
lods
jae
loope
xor
xor
sub
inc
mov
add
mov
adc
test
jl
sbb
mov
inc
mov
retf
adc
js
icebp
add
lock
cmp
ror
les
fucomip
das
jl
cdq
in
dec
inc
xchg
cli
popf
ret
add
test
dec
and
xchg
data16
scas
xchg
mov
lods
mov
cmps
imul
nop
mov
sub
mov
xchg
xor
and
sahf
cmp
ja
mov
sbb
shl
and
adc
cmps
pop
fisttp
jno
mov
enter
loop
xor
ins
xchg
sub
dec
mov
pop
push
add
dec
stos
push
ja
vmovshdup
stos
xchg
jo
ret
in
and
jns
mov
mov
dec
or
pop
cdq
push
add
addr16
and
fsubr
adc
ins
sub
cli
les
xor
cs
test
fidiv
push
sub
sub
popa
mov
cld
push
and
mov
call
xchg
lods
daa
dec
pusha
add
lahf
scas
inc
push
and
aaa
or
sub
dec
cmps
not
mov
out
jp
mov
mov
pop
int
je
and
dec
nop
fs
imul
pop
hlt
cmp
dec
sti
xchg
sahf
and
jns
adc
out
fsub
adc
adc
bound
pop
inc
pop
lahf
sub
jmp
mov
loopne
cmp
bound
push
and
popf
je
repz
es
mov
adc
leave
cdq
add
fs
sysenter
pop
push
mul
(bad)
std
sbb
hlt
adc
dec
cmp
fs
push
ret
mov
mov
gs
in
cld
in
shl
sub
xchg
inc
in
pushf
pop
ins
or
xor
out
push
arpl
pop
pop
popf
mov
and
lock
or
mov
mov
push
into
pop
jle
aam
shl
xchg
sbb
inc
(bad)
xchg
pusha
rol
adc
scas
inc
fldenv
push
xor
les
add
aas
add
push
sub
add
jmp
mov
add
div
sub
and
mov
mov
sub
mov
sub
sbb
dec
lods
add
or
cmp
mov
sub
adc
mov
dec
mov
xchg
ins
ret
cli
xor
inc
jbe
test
xchg
popa
sar
push
mov
int3
adc
(bad)
mov
inc
and
adc
xor
add
mov
inc
dec
lods
xor
lods
mov
xlat
movs
mov
dec
mov
out
mov
cmc
pop
add
jae
movs
jge
inc
aaa
push
inc
mov
jmp
cmp
je
xchg
add
push
(bad)
jp
mov
add
in
add
cmp
push
push
and
add
lods
inc
push
sbb
pop
cld
das
imul
or
(bad)
inc
xchg
and
lock
shr
mov
inc
fiadd
jg
mov
xchg
ins
ficomp
xor
loopne
cmp
imul
not
cmps
mov
sar
xchg
cmp
arpl
mov
adc
push
sbb
cli
cmp
add
int3
dec
fild
fwait
mov
mov
add
shr
inc
aaa
mov
aaa
jne
and
push
mov
addr16
aaa
dec
leave
pop
sub
jg
pop
xlat
add
ds
loope
sub
ss
lea
pop
jmp
lds
ds
pop
or
stc
xchg
and
jmp
mov
loopne
xlat
jbe
or
(bad)
movs
movs
sub
das
in
(bad)
inc
push
mov
mov
call
xlat
jnp
mov
mov
dec
lds
shl
outs
pushf
jb
inc
fxch
push
or
mov
or
loop
(bad)
stc
loopne
(bad)
ficomp
lds
xor
mov
mov
inc
inc
and
xor
dec
fdiv
and
aad
movs
in
fnstsw
mov
mov
ds
inc
pop
aas
icebp
call
mov
ret
scas
mov
and
lea
pop
shr
std
mov
push
lods
inc
mov
cmp
jno
lds
cmp
push
inc
scas
add
imul
add
into
mov
lahf
scas
les
push
add
clc
jo
pop
jbe
jg
xchg
pushf
ret
sbb
repz
inc
inc
icebp
mov
cli
mov
and
mov
pop
jecxz
mov
inc
adc
and
sub
cli
inc
add
retf
dec
mov
mov
das
sbb
adc
xor
dec
push
sub
fistp
cmp
cwde
sbb
sub
fwait
adc
test
loop
sub
xchg
push
aaa
xchg
cld
push
pop
fmul
cmp
inc
push
jns
not
jae
and
(bad)
in
fsub
mov
data16
int3
jmp
push
pop
push
pushf
xchg
push
push
mov
punpckhdq
sub
pop
fnstenv
int
mov
in
mov
retf
enter
into
repz
stos
sbb
popf
lds
call
loope
nop
cmp
dec
in
adc
(bad)
js
push
push
(bad)
sbb
adc
pop
adc
idiv
fld
xor
enter
in
int3
add
stos
cs
fisttp
add
mov
scas
fdivr
lods
nop
jmp
stc
xchg
inc
pop
popa
cli
rol
inc
mov
add
mov
popa
mov
sub
jecxz
clc
jae
adc
or
(bad)
mov
js
pop
pop
pop
hlt
cmps
pusha
sahf
pop
inc
call
loopne
sub
out
cmp
adc
fisubr
ss
add
fadd
mov
not
mov
xchg
fdivr
xchg
mov
inc
jg
scas
cdq
daa
clc
in
or
nop
in
aaa
stos
(bad)
push
scas
jp
(bad)
push
(bad)
push
hlt
pushf
repz
rol
sar
ret
pop
mov
xor
jae
bound
adc
or
pop
leave
mov
sub
fadd
call
dec
icebp
adc
sbb
(bad)
mov
sub
pop
arpl
out
jo
es
mov
mov
es
ret
popf
ret
and
dec
mov
jns
mov
mov
add
fst
mov
rol
inc
lahf
mov
jae
push
loopne
xchg
xor
or
mov
jns
lds
mov
mov
and
addr16
mov
xlat
pop
in
jg
xor
mov
ins
stos
mov
inc
ficomp
xchg
jne
addr16
(bad)
xchg
fisttp
ficomp
adc
pop
push
pusha
lock
mov
(bad)
shl
in
mov
mul
mov
pop
push
addr16
push
or
sbb
pop
jl
xchg
mov
adc
jg
sar
push
xchg
ins
and
pusha
ror
aam
sub
addr16
arpl
cmc
scas
xor
fist
cmps
call
cmp
push
in
imul
stc
push
push
dec
sub
mov
in
shl
in
adc
enter
fisub
and
inc
add
fwait
mov
daa
fdivr
out
xor
ret
inc
inc
pop
icebp
and
movs
pop
(bad)
fmul
push
pop
(bad)
add
sar
mov
enter
lds
je
aaa
dec
scas
pusha
adc
cmps
fcom
repz
rol
inc
lahf
jmp
cmp
sub
fmul
dec
xchg
arpl
(bad)
popf
fadd
push
call
mov
jmp
push
mov
popf
jnp
shl
call
push
jbe
inc
popa
test
push
pop
test
mov
dec
mov
(bad)
adc
mov
xchg
bound
xor
jb
dec
sbb
or
aas
das
lods
fwait
daa
cmp
stc
stos
mov
ficomp
clc
loopne
inc
pop
aad
fst
add
dec
rcl
sbb
ja
jns
mov
lods
imul
mov
or
push
dec
aaa
push
pop
and
xchg
lahf
dec
push
dec
(bad)
jae
cmp
mov
fsubr
(bad)
retw
or
sub
retf
cmp
inc
fdivr
adc
dec
mov
jg
mov
cmp
out
aam
push
inc
(bad)
mov
outs
mov
adc
hlt
mov
dec
jge
shl
add
mov
call
pushf
inc
sub
(bad)
mov
or
std
jl
int
icebp
or
stos
mov
adc
addr16
inc
mov
cli
and
stos
adc
addr16
cwde
xor
or
add
inc
stos
or
jge
pop
ficomp
jmp
imul
sub
out
and
mov
xor
inc
push
add
jno
sbb
test
aas
fnstsw
ds
mov
jbe
sti
dec
fstp
mov
dec
xchg
xor
inc
pop
and
pushf
sub
jmp
setnp
fidiv
push
sti
sti
and
jle
jmp
add
mov
stos
cdq
mov
xchg
push
jne
cmp
xchg
es
cli
mov
cmc
or
ds
jmp
arpl
jbe
push
cmp
in
sti
dec
sub
out
add
enter
shr
(bad)
sbb
sub
mov
cmp
add
lea
add
stc
sbb
call
sbb
jmp
movs
sub
pop
enter
xchg
or
bound
dec
enter
ficom
popa
push
or
rcr
mov
adc
sub
add
mov
ins
std
aad
pop
and
fidiv
test
mov
shr
pop
and
xor
jno
clc
sub
xor
in
js
mov
add
xchg
out
in
xor
pop
std
xchg
add
mul
mul
push
shl
fdivr
inc
ret
ja
imul
jo
and
shr
xchg
xchg
loopne
push
fldcw
out
rol
sahf
jmp
call
movs
inc
mov
lods
jg
fisttp
ret
mov
loope
adc
std
fwait
bound
aas
ins
repnz
sub
test
outs
pop
das
xchg
scas
sbb
data16
shl
js
push
pop
jmp
(bad)
out
sti
imul
je
pop
fnstsw
popf
and
sahf
fwait
repnz
movs
sub
jb
mov
push
cmps
xor
sbb
nop
js
push
scas
xchg
push
xchg
and
adc
mov
adc
(bad)
out
pop
xor
int
jg
jnp
lds
jmp
dec
pop
jo
ss
sub
cmc
mov
cmps
cmp
xchg
out
mov
mov
fsubr
fldenv
call
or
and
lahf
pop
gs
jno
cmp
addr16
not
xchg
scas
fimul
add
jno
addr16
rcl
dec
mov
xchg
push
jne
sbb
popf
adc
call
sbb
dec
fild
(bad)
jns
cmp
push
cs
in
push
cmc
mov
xor
dec
jge
sbb
fs
ret
xor
cmc
in
pop
mov
xchg
cmp
adc
stos
ja
dec
add
dec
arpl
call
inc
std
loop
and
sub
or
inc
cwde
cmp
retf
mov
jl
movs
inc
xchg
dec
nop
jecxz
pop
in
je
jge
sub
jb
push
rcr
fs
jo
stos
call
scas
xchg
cmp
pop
cld
popf
cs
sti
cmp
xchg
dec
out
xchg
jg
cmovge
mov
push
mov
fnstcw
push
jnp
push
mov
mov
loop
stos
cld
pop
sbb
mov
std
mov
xchg
pop
mov
mov
popa
fist
add
jg
and
xchg
inc
adc
es
push
mov
push
aas
jmp
sbb
pusha
lods
retf
dec
mov
scas
ja
mov
pop
out
aam
mov
scas
shr
pop
cmps
mov
neg
out
mov
ds
jle
lds
js
shl
push
adc
xchg
enter
cs
in
adc
pusha
cmc
mov
in
fcomp
pushf
dec
imul
mov
dec
(bad)
movs
pop
xchg
jno
mov
fs
pusha
dec
sbb
addr16
enter
(bad)
xchg
in
cld
pushw
cwde
mov
sub
hlt
popf
cmp
mov
scas
in
cmp
sbb
retf
movs
(bad)
out
jno
and
pop
mov
faddp
out
enter
dec
mov
mov
push
inc
hlt
jae
fbld
xor
sti
jnp
xor
out
outs
sahf
icebp
fist
push
cs
cmps
xor
mov
inc
inc
loop
daa
(bad)
shr
aad
pop
push
cmps
fmul
jno
dec
jno
mov
inc
xchg
loopne
ror
xor
inc
add
mov
sbb
push
adc
mov
push
sub
fld
jns
cmps
leave
scas
mov
add
(bad)
or
cmp
inc
data16
lods
(bad)
cld
mov
xchg
cdq
data16
shl
add
inc
mov
ins
add
pop
sub
jmp
ja
scas
sub
sub
fidiv
mov
pop
test
sbb
jp
out
repnz
mov
repz
mov
adc
sbb
mov
inc
fwait
push
(bad)
sub
lea
add
add
nop
mov
inc
xor
aaa
inc
cwde
xor
mov
test
clc
out
push
lahf
cld
sti
mov
imul
sbb
pop
or
rcr
add
push
and
push
pop
fucomp
mov
fcom
fnstcw
add
rcl
rol
loop
out
mov
fisttp
push
rcr
stos
(bad)
sbb
in
cmc
mov
dec
xchg
outs
(bad)
pop
dec
sar
out
sub
adc
scas
dec
imul
sti
fdivr
mov
cmp
add
or
test
push
test
adc
jge
in
pop
int3
dec
sbb
iret
out
mov
out
scas
push
jle
std
adc
sti
(bad)
(bad)
mov
jl
push
imul
or
addr16
outs
jg
and
or
inc
dec
jge
call
outs
fld
adc
ror
mov
stos
and
lods
arpl
add
cmps
ret
sub
inc
aad
retf
in
push
add
imul
jb
xchg
out
xchg
outs
cmc
test
inc
adc
fwait
mov
jge
push
test
fst
add
push
cmp
jge
xchg
mov
clc
ja
out
jmp
jecxz
je
cmp
mov
aaa
xchg
push
test
jbe
lds
xchg
and
mov
xor
mov
mov
test
mov
je
sbb
in
cdq
in
xchg
sbb
pop
push
fld
push
xchg
stos
xchg
pusha
inc
(bad)
arpl
out
dec
ret
movs
in
push
fist
loop
sub
outs
int3
out
xor
inc
mov
(bad)
cmps
pushf
mov
adc
push
sar
xchg
fisubr
mov
js
jnp
mov
or
int3
cli
push
sahf
gs
outs
dec
xor
test
loope
in
pushf
pop
dec
xchg
lods
js
inc
mov
cmp
int3
or
jmp
xor
mov
xor
sub
sbb
fnstenv
mov
adc
cld
and
xchg
dec
add
mov
jmp
aas
test
inc
adc
retf
rol
jle
push
mov
inc
cs
add
cmp
in
jg
dec
add
dec
aam
aas
bound
jns
rcl
fsubr
mov
les
mov
mov
hlt
push
fist
xor
sub
movs
lds
pop
pusha
not
shl
jmp
mov
bound
scas
sbb
je
cdq
ror
das
loopne
fcom
adc
jmp
inc
jno
mov
xor
sub
push
lods
dec
in
imul
push
loop
sub
js
adc
popa
lea
dec
lock
aam
jbe
arpl
retf
and
or
cdq
push
aas
faddp
jae
mov
sub
add
xchg
sti
cmps
dec
int3
hlt
into
fmul
cmps
add
inc
adc
xchg
inc
lahf
xor
jmp
xchg
sub
inc
mov
xlat
test
imul
mov
and
mov
adc
sbb
fsub
push
inc
lahf
push
jg
sub
push
retf
out
(bad)
es
lds
cmps
sbb
sti
sub
dec
icebp
or
cdq
jl
cmp
shl
mov
pop
test
(bad)
repnz
sub
shl
mov
mov
and
movs
adc
fstp
stos
out
es
inc
(bad)
sub
mov
(bad)
je
cmp
xor
cmps
mov
stc
clc
mov
out
push
pop
push
shr
xchg
adc
neg
and
or
cmp
cmc
adc
mov
jnp
(bad)
pop
ja
sub
rcl
push
xor
ret
xchg
mov
(bad)
sbb
xor
push
push
dec
push
dec
mov
push
mov
push
sub
ins
xor
dec
cmp
jne
jae
jmp
aas
cmp
mov
sub
arpl
push
test
jb
pop
push
scas
loop
xchg
sub
loope
xchg
xor
stos
test
xchg
dec
in
das
fdivr
sub
push
cdq
sbb
movs
mov
gs
mov
pop
mov
and
dec
pop
jo
mov
or
and
adc
js
loopne
and
pop
mov
rol
outs
cmp
ret
ficomp
mov
aaa
inc
lods
les
adc
movs
and
sub
fisttp
sub
int
mov
or
inc
mov
xor
mov
scas
pusha
sub
xchg
fiadd
call
loopne
imul
(bad)
enter
movs
movlps
xor
aas
ja
sti
add
cmp
popf
mov
aaa
mov
pop
call
or
add
sub
pushf
push
add
loopne
mov
cdq
test
outs
stos
hlt
mov
cmp
clc
loop
test
ror
pop
inc
hlt
push
and
push
cmp
or
(bad)
stc
out
stos
aad
fnstenv
dec
test
push
and
pop
jne
fnstsw
mov
clc
sahf
jp
movs
mov
enter
jmp
fistp
pop
push
jp
mov
push
and
in
fwait
xchg
lds
jns
lods
sbb
sar
xor
add
adc
pushf
gs
shl
in
add
mov
sbb
ja
in
jl
rcr
jnp
sbb
leave
cld
pop
leave
add
je
mov
cdq
mov
loop
ds
adc
mov
loop
and
mov
dec
mov
mov
xchg
outs
pushf
out
aaa
or
daa
adc
into
sbb
push
mov
or
pushf
ins
or
stos
cs
push
out
xor
cmps
mov
and
mov
pusha
fcom
push
sub
int
(bad)
icebp
inc
add
bound
fisttp
ret
std
pop
loope
xor
sbb
add
push
jnp
int
out
ja
(bad)
popa
ja
movs
xchg
xchg
mov
dec
push
and
retf
clc
fldcw
adc
out
xchg
arpl
adc
retf
scas
inc
jo
fild
mov
jb
pop
mov
ret
popf
jbe
cmp
xchg
jno
jmp
adc
or
inc
mov
cmps
add
rcr
mov
mov
xor
sub
test
or
xor
stos
in
fisubr
das
push
aaa
(bad)
xchg
cmc
lahf
inc
push
ins
jg
aaa
lds
retf
push
popa
mov
xlat
sub
mov
mov
cmp
mov
test
inc
inc
mov
test
pushf
push
jg
lods
fild
sub
adc
and
pop
and
movzx
pop
scas
inc
pop
xor
adc
pop
adc
rcr
inc
inc
sub
push
and
aad
mov
and
mov
loop
stos
cmps
push
jo
pop
and
bound
push
xchg
dec
loopne
cmp
ret
dec
mov
rcr
icebp
test
dec
cmps
jno
mov
sub
push
mov
hlt
lock
push
mov
iret
push
test
add
mov
sbb
cmp
push
sbb
lods
fisttp
stos
rol
sub
(bad)
sahf
mov
(bad)
jae
in
imul
fs
std
cmp
mov
mov
or
push
out
retf
arpl
xor
mov
gs
or
scas
call
inc
dec
imul
fisttp
repz
les
sbb
jb
sub
aam
lods
add
xchg
adc
int3
cmc
or
jnp
cld
out
push
repnz
xor
idiv
leave
inc
adc
mov
iret
rcl
dec
cmp
and
jl
and
rcl
shr
jno
inc
inc
in
lahf
jecxz
std
jmp
in
je
inc
jmp
movs
adc
repnz
or
cmp
jge
and
data16
out
jno
or
pop
not
mov
lods
xor
aam
fmul
jecxz
xor
(bad)
jp
mov
nop
dec
xchg
inc
xchg
adc
mov
push
cmps
repz
sub
and
xor
shl
cmp
or
fld
mov
inc
div
add
mov
test
add
fwait
cs
loopne
daa
mov
xor
pop
adc
cmps
inc
cwde
jmp
add
movs
cmp
ja
out
pop
mov
popa
inc
xor
fild
mov
mov
das
xlat
ror
cmc
xor
add
push
mov
stos
out
pop
dec
or
or
sub
shl
fstp
mov
cmp
jg
mov
leave
mov
ret
jne
aad
pop
(bad)
sbb
dec
mov
sub
aad
pop
aad
xchg
daa
call
push
xor
js
mov
popa
out
jbe
cmp
pop
js
out
lods
xchg
cmp
loop
dec
add
rcl
out
mov
in
jbe
adc
icebp
pop
fiadd
sti
(bad)
pusha
movs
mov
test
push
jnp
jne
push
je
cs
dec
xor
pop
cmp
sbb
sti
pop
xchg
xchg
pop
stc
popa
jecxz
jo
test
cdq
les
aad
lds
or
(bad)
(bad)
jge
(bad)
outs
and
and
pop
mov
fmul
mov
jle
das
jbe
push
lock
inc
push
aam
push
aaa
shl
repz
jmp
pop
icebp
loopne
sub
pop
pop
lea
and
sub
pop
cmp
pop
or
out
mov
outs
mov
push
stc
retf
cmc
sbb
xlat
sub
or
sub
call
fwait
push
lods
xlat
adc
pop
jnp
mov
lea
jecxz
mov
cmp
xchg
mov
jmp
add
xchg
mov
pop
je
cdq
in
add
jecxz
mov
cli
jbe
cmp
int
pop
ret
cmc
inc
dec
xchg
(bad)
jmp
push
adc
sbb
retf
bound
xchg
push
inc
pop
sbb
mov
mov
dec
repz
scas
or
adc
sbb
pop
jle
or
call
sbb
out
dec
push
jmp
xchg
xchg
adc
call
cmp
mov
inc
scas
push
pop
hlt
and
mov
pop
out
push
mov
and
sub
jg
add
retf
or
mov
push
test
adc
add
pop
mov
ficom
and
clc
je
iret
and
outs
leave
icebp
stos
cmp
adc
int3
fmulp
sbb
(bad)
(bad)
movs
xchg
xor
add
in
nop
jl
cmc
aaa
mov
loop
das
xor
xor
psrld
and
aas
out
scas
sbb
xor
fcom
cmp
leave
je
lods
int
sub
out
jl
call
push
loopne
jno
test
sbb
xchg
mov
stos
jmp
dec
push
pop
jns
in
imul
cmp
pop
shl
push
rsm
sub
das
ror
or
or
ror
mov
loopne
xor
fdivr
mov
test
shl
push
movs
mov
add
or
pop
test
push
cmc
pusha
out
jmp
and
xchg
ins
mov
gs
imul
jmp
inc
ror
mov
out
cdq
and
mov
movs
call
jne
in
sub
push
repz
dec
cmp
ficomp
or
or
pop
xchg
call
sbb
push
scas
push
lsl
hlt
and
(bad)
adc
and
push
ins
adc
xchg
push
cmps
xchg
push
rcr
xor
push
adc
or
fsub
or
mov
sub
or
cli
or
out
push
nop
(bad)
pop
mov
jle
dec
xlat
jne
ret
leave
adc
imul
fnstenv
and
cmp
pop
outs
cs
outs
js
(bad)
dec
inc
outs
sub
lock
fcom
fstp
mov
test
push
push
pop
addr16
adc
shl
and
sub
pop
nop
mov
mov
jecxz
push
bound
dec
and
push
shl
movs
mov
sti
out
movs
or
mov
outs
out
and
es
fstp
retf
aam
sub
and
iret
enter
sahf
(bad)
repz
mov
cmp
lahf
sub
std
or
js
sbb
(bad)
push
ret
inc
scas
cmp
fs
cdq
push
xchg
adc
sub
sbb
std
and
cld
fisubr
(bad)
out
xchg
jnp
mov
xchg
ds
mov
push
sub
mov
mov
mov
inc
sub
dec
mov
push
xchg
pushf
out
pop
mov
push
cmp
fdivrp
xlat
sahf
mov
mov
sbb
jp
ror
scas
js
mov
inc
jmp
loop
jl
push
pop
mov
push
lea
std
or
not
stos
mov
sub
stos
push
cmp
jp
iret
push
and
aas
jmp
add
xchg
dec
icebp
and
add
add
enter
inc
lds
into
call
push
cld
mov
sbb
daa
and
push
sub
cmp
mov
fs
inc
test
aaa
cmc
pop
jecxz
shr
cmp
fisubr
cdq
mov
mov
cmp
imul
popa
inc
icebp
cmp
fwait
sub
(bad)
mov
leave
inc
mov
aaa
adc
call
nop
aam
test
add
sub
ins
(bad)
fild
cmp
dec
lea
jecxz
out
bound
inc
aad
sahf
push
dec
and
ror
xchg
call
dec
dec
inc
outs
or
add
ds
dec
or
mov
in
mov
lods
test
or
mov
sbb
fsubr
cld
mov
xor
pop
enter
dec
add
mov
mov
(bad)
xor
push
push
dec
cmps
retf
sbb
hlt
imul
cs
adc
pop
lds
repz
mov
gs
add
in
sub
je
jmp
inc
push
imul
lock
push
scas
(bad)
pop
mov
mov
out
push
adc
sbb
stc
call
mov
mov
arpl
mov
fimul
mov
iret
ds
in
cmp
pop
lahf
(bad)
adc
and
dec
push
in
dec
push
pop
pop
ds
shl
pop
cwde
sub
adc
xchg
cmc
mov
fcomp
adc
add
cmp
mov
js
stos
push
or
repz
jmp
sbb
idiv
mov
pop
push
push
clc
sar
or
and
cwde
push
(bad)
test
add
addr16
push
rcr
fsub
rcr
sub
les
xor
popa
inc
push
sbb
ins
pop
lods
in
jb
call
mov
mov
jns
and
sar
pmulhw
std
(bad)
pop
jb
sar
popf
ret
ror
ret
xchg
sub
in
out
mov
enter
jle
imul
dec
add
push
sbb
daa
mov
lods
mov
mov
add
loop
add
shl
and
adc
mov
jmp
(bad)
jecxz
pop
adc
repz
pop
cmc
dec
jo
out
loopne
and
jnp
scas
push
jb
in
daa
jbe
(bad)
in
test
in
cmp
adc
ror
arpl
mov
or
pop
out
xor
pop
cld
mov
inc
rcl
loope
adc
mov
test
std
jl
sti
iret
test
add
cmps
jno
push
pop
cwde
cmp
lea
int
stc
xor
mov
les
pop
pop
rol
sub
and
cmp
int
mov
lock
inc
jae
mov
jno
adc
inc
xchg
outs
sbb
cmps
nop
and
mov
xchg
sti
mov
rcr
ret
fmul
mov
div
fwait
call
dec
mov
pop
xor
adc
loope
div
or
fwait
dec
aam
jg
pop
movs
fst
into
popf
cli
out
adc
push
retf
aad
jp
xchg
push
push
sbb
sub
sbb
mov
add
gs
out
outs
rol
inc
xchg
cmp
xor
aam
int3
xor
mov
add
lea
sub
jle
leave
mov
adc
adc
retf
int
push
pop
aas
adc
mov
sbb
mov
cmp
jb
lods
push
sub
lods
mov
mov
mov
pop
xor
(bad)
cmp
xchg
call
mov
lea
shl
js
sbb
push
and
cmp
ja
mov
add
stos
aaa
imul
pop
dec
in
mov
retf
retf
or
loopne
or
xchg
push
pop
(bad)
mov
adc
mov
push
push
sbb
ret
add
popf
dec
xchg
test
fistp
rol
in
dec
retf
(bad)
je
and
pop
jg
lahf
test
in
add
(bad)
ins
retf
(bad)
out
adc
and
mov
mov
adc
inc
fst
iret
add
movs
pop
fistp
inc
or
push
lds
ret
xor
icebp
or
ret
mov
aas
int
aas
push
test
frstor
in
fst
add
push
(bad)
and
sub
gs
jg
or
cs
ret
jmp
mov
cwde
or
imul
adc
sub
into
outs
call
xchg
and
mov
icebp
je
xor
shl
stos
lock
jbe
pop
add
xchg
fsub
into
dec
outs
cmp
(bad)
out
sbb
repnz
mov
ss
in
popf
xchg
ficom
xchg
sub
pop
lahf
movs
sub
xor
fsub
inc
test
int
sub
je
fldcw
aam
call
icebp
add
mov
adc
jns
loopne
jb
cmps
test
dec
leave
jno
mov
cmp
iret
mov
repnz
icebp
push
and
jmp
jbe
stc
jb
movs
push
cwde
sub
out
fnstsw
xlat
jle
fcomp
push
addr16
mov
xchg
pushf
icebp
cmps
cmp
or
pop
das
repz
(bad)
push
inc
add
(bad)
mov
enter
out
adc
and
dec
imul
in
cmp
call
ds
loop
fs
mov
xchg
cs
aad
int
ja
(bad)
pusha
fimul
sub
repnz
mov
mov
test
lods
xlat
outs
mov
sbb
fist
cs
clc
je
retf
xor
sbb
iret
ror
loopne
push
loopne
outs
repz
aas
out
pop
dec
rcl
push
jmp
jmp
outs
lea
fwait
cs
sti
enter
mov
movs
sub
inc
nop
adc
movs
(bad)
cmp
adc
add
sub
xchg
fucom
int
cmps
ins
mov
sar
mov
movs
and
call
test
add
(bad)
pop
cmps
not
jecxz
jmp
std
movs
ins
push
push
and
jmp
mov
rcr
inc
(bad)
ja
(bad)
loopne
push
push
fld
scas
add
adc
sbb
or
aam
enter
push
(bad)
jno
ja
and
push
mov
aad
enter
mov
xchg
mov
xchg
ror
jae
mov
in
adc
sbb
jns
mov
dec
or
ret
inc
cmps
or
push
add
xchg
aam
push
or
or
imul
out
mov
ja
xor
in
mov
iret
jb
mov
cdq
xor
push
rol
out
call
add
dec
and
aam
out
cmps
outs
pop
xor
jmp
jl
fmul
and
mov
imul
push
pop
xchg
pusha
je
cld
fnstcw
retf
fidivr
push
ins
ja
rcr
sub
xlat
outs
pop
pop
movs
cli
stos
jg
jb
jmp
outs
jnp
psubw
push
(bad)
jmp
cmp
cmps
mov
jl
sub
dec
daa
scas
shl
outs
adc
sbb
inc
loope
enter
test
cmp
sbb
movs
arpl
fs
mov
cli
fadd
clc
dec
loop
addr16
push
xchg
sar
sub
ret
mov
fwait
pop
mov
pop
mov
and
cmps
test
fsubr
jns
popf
repz
and
cmp
out
pushf
dec
and
sub
sub
aas
mov
inc
inc
pop
lahf
stos
cli
data16
xor
jno
sbb
aam
cld
mov
add
fisttp
div
dec
pop
cmps
in
outs
mov
mov
inc
xchg
cli
or
or
dec
mov
sub
dec
mul
add
or
outs
pop
fcom
dec
mov
sti
dec
pop
or
aam
call
mov
xchg
out
adc
rcr
push
mov
pop
imul
and
stos
jmp
mov
pop
(bad)
pushf
jae
mov
push
movs
add
sbb
mov
dec
les
mov
push
repnz
repz
rep
push
call
pop
add
ss
push
adc
pop
sub
jmp
ret
sbb
sbb
hlt
ror
aam
sub
mov
sub
cwde
scas
popa
gs
mov
inc
icebp
xchg
lea
hlt
(bad)
mov
or
and
fisttp
pop
loopne
ds
retf
inc
sub
xlat
stc
out
sub
xchg
jg
je
ret
or
into
jbe
popf
stc
lods
add
xchg
adc
sub
pop
dec
pop
sub
mov
push
das
jg
mov
daa
fwait
sahf
lods
neg
loop
mov
js
iret
xchg
aas
out
int
or
and
add
stc
xor
pop
add
ja
data16
arpl
data16
sbb
repnz
addr16
mov
mov
in
xor
(bad)
push
call
ret
sub
in
mov
lock
dec
mov
clc
js
into
nop
cdq
pop
out
icebp
retf
mov
push
popa
cmp
sahf
lock
jge
sbb
add
pushf
sahf
in
data16
fcomp
and
cmp
jp
dec
in
ins
xchg
pop
jmp
mov
cmp
cmp
pop
sbb
jb
mov
addr16
or
mov
and
fld
xchg
loop
jp
mov
enter
sub
mov
mov
cs
push
mov
xor
adc
pop
mov
xor
jecxz
mov
test
dec
int
push
mov
sbb
sbb
pop
cmp
das
mov
pop
cmc
inc
adc
xor
lods
xchg
int3
push
mov
es
xchg
mov
shr
lea
sbb
jmp
sar
mov
in
or
scas
fcmovnbe
mov
mov
push
movs
xchg
pop
aad
rol
jl
mov
sbb
scas
sub
pop
jne
fcmovb
or
xchg
jp
mov
sbb
cwde
sbb
dec
daa
push
in
pop
sub
mov
sahf
rcr
(bad)
dec
test
mov
scas
xchg
sub
inc
mov
sbb
adc
sti
js
mov
pop
repnz
dec
dec
xchg
dec
out
es
push
inc
inc
push
sub
jp
das
cmc
aad
sbb
push
cmp
hlt
and
jl
mov
stos
pop
icebp
mov
sbb
sub
dec
push
sahf
xchg
mov
out
enter
dec
(bad)
enter
popf
repz
adc
aad
fdiv
add
sbb
jl
or
mov
push
popa
(bad)
loop
es
pop
or
cmp
dec
sub
aaa
in
jnp
daa
loopne
iret
xchg
into
sbb
xor
sbb
imul
cmp
fs
xchg
dec
ja
cmp
pusha
mov
js
xor
fisttp
and
mov
movs
into
pop
fs
cli
jmp
movs
jge
repnz
scas
xchg
dec
add
cdq
xchg
repnz
inc
dec
test
sub
pop
test
sbb
pmulhw
xchg
fadd
mov
add
jns
jg
cli
pop
xchg
jecxz
pop
cmp
and
call
mov
sbb
mov
add
outs
pop
and
into
cwde
hlt
test
push
sub
adc
(bad)
mov
xchg
jge
xor
stc
pop
and
in
pop
or
loop
add
(bad)
jecxz
sbb
into
xor
xor
add
fwait
add
cmp
pop
sub
stos
jmp
xchg
fbld
shr
push
sar
inc
or
cdq
and
mov
inc
imul
stc
and
push
or
lods
adc
repnz
xor
test
add
dec
or
and
neg
push
mov
inc
daa
(bad)
imul
add
dec
add
add
cmp
jecxz
and
fist
test
pushf
rol
ja
scas
cwde
jae
xchg
sti
jb
xchg
mov
xchg
loop
cmp
jns
add
adc
stos
aam
mov
imul
cmps
in
xor
shr
mov
and
add
movs
or
push
sbb
stos
inc
and
aam
lds
stc
data16
lods
xchg
retf
ret
jl
test
cmp
shl
cmp
lea
mov
popf
cdq
pop
adc
adc
mov
lahf
adc
dec
sub
jo
sbb
pop
iret
mov
aam
(bad)
cmp
sahf
sub
leave
or
or
push
aam
push
ror
cmp
outs
sbb
push
or
fwait
out
mov
jl
mov
pop
xchg
scas
loopne
add
enter
xchg
into
xchg
inc
mov
inc
pop
(bad)
hlt
xor
add
movs
std
xchg
mov
addr16
pop
int
inc
repnz
mov
imul
out
shl
sar
lahf
add
sbb
cmp
cwde
pop
stos
cmp
inc
retf
call
repnz
imul
bound
sub
pop
and
cwde
lods
or
fdiv
fld
rcr
jmp
aad
push
push
sahf
dec
jnp
xchg
and
or
(bad)
les
mov
(bad)
fidiv
jmp
inc
mov
mov
xchg
mov
call
shl
leave
dec
(bad)
lock
into
or
push
das
mov
mov
repz
dec
test
sub
sbb
and
dec
shl
or
rol
cld
out
add
xor
push
test
(bad)
jmp
or
xor
sub
push
ret
push
mov
xchg
mov
pop
test
pusha
xchg
leave
push
call
push
out
dec
data16
out
xchg
mov
lahf
xor
outs
push
stos
cmps
ins
loop
(bad)
mov
dec
leave
retf
and
dec
cmp
sbb
push
cs
je
mov
mov
mov
jne
in
mov
popf
and
fcomip
outs
pusha
xchg
ror
inc
int3
sti
ds
add
ds
mov
jmp
or
pop
sahf
retf
push
clc
xchg
stos
pop
rcr
lds
jne
daa
or
aam
push
jmp
cmps
(bad)
lahf
mov
cmp
scas
mov
fistp
scas
pop
pop
call
jnp
adc
popf
cdq
dec
loope
dec
das
dec
dec
sub
imul
cs
cmp
loope
pop
inc
out
call
xor
(bad)
fstp
jns
int3
ret
enter
mov
mov
dec
add
std
xchg
das
and
dec
aam
push
mov
jo
data16
or
(bad)
push
or
push
pop
mov
lods
push
mov
in
inc
fnstsw
mov
cli
sbb
imul
dec
jo
in
pusha
xchg
icebp
xor
enter
das
fdivr
inc
cmps
sub
mov
or
jae
pop
cmps
je
mov
mov
ja
(bad)
adc
shr
(bad)
mov
cmps
mov
fcompp
add
fucom
(bad)
frstor
cmps
sahf
or
shl
lea
je
repz
xchg
rcr
mov
jmp
adc
cld
adc
mov
icebp
dec
inc
xor
jmp
push
(bad)
pop
dec
icebp
lock
pop
mov
jbe
js
dec
sbb
mov
lahf
iret
fiadd
(bad)
pop
mov
jae
mov
xor
mov
clc
push
data16
jg
cwde
and
jecxz
mov
add
jns
or
fwait
mov
mov
add
icebp
stc
inc
loopne
rcl
repnz
xchg
std
pop
imul
mov
leave
loopne
(bad)
and
pop
outs
in
aaa
fmul
xor
gs
add
inc
int3
mov
inc
mov
jecxz
int3
xchg
xor
out
sub
jmp
sub
retf
xor
pop
and
stos
in
pop
fsubr
add
inc
aam
push
ficom
stc
aas
in
mov
sub
mov
loope
xlat
ficomp
(bad)
mov
jmp
and
ja
xchg
sahf
icebp
scas
int3
mov
xor
mov
cmp
test
lds
rcr
jae
cmp
jmp
adc
sbb
sar
test
xlat
popf
cld
or
std
or
inc
ret
xchg
movs
mov
push
fidiv
inc
pop
out
arpl
jns
rcl
and
xchg
or
cmp
mov
sbb
(bad)
mov
shr
cdq
adc
push
pop
add
dec
inc
(bad)
push
or
pop
shl
mov
or
add
jno
mov
jl
mov
hlt
adc
mov
add
nop
lock
ficom
cmp
xor
xor
fstp
test
xor
add
out
test
ins
dec
xchg
inc
pop
ror
dec
stc
xchg
jmp
sbb
test
int3
out
mov
jl
into
lahf
pop
pop
lods
(bad)
sbb
(bad)
cmps
clc
fisubr
repnz
test
cmp
or
nop
cmp
xchg
mov
loopne
cwde
fs
imul
daa
mov
mov
sbb
and
mov
sbb
xor
pop
sar
rcr
adc
test
inc
xchg
fdivr
xor
movs
push
dec
iret
fnsave
add
cld
sbb
ret
call
mov
cmp
sti
iret
jne
jo
fdivr
inc
mov
call
jmp
not
mov
inc
dec
inc
xchg
or
cmp
cdq
cli
test
xchg
es
or
sub
push
stos
daa
sti
cmc
xchg
inc
push
nop
cmps
or
push
add
mov
movs
add
es
(bad)
xor
in
xchg
sbb
add
out
retf
sub
push
mov
dec
das
loopne
inc
inc
mov
nop
cwde
jmp
lea
and
nop
mov
popf
inc
movs
adc
stc
mov
jle
jmp
mov
stos
jmp
xor
out
shl
in
jns
xor
out
add
in
rcl
shl
lea
or
mov
(bad)
mov
jne
jb
shr
cld
test
xor
imul
ret
dec
loop
lock
in
pop
xor
popa
and
cmp
cmps
push
out
shl
mov
mov
test
jb
inc
loope
rol
add
sub
test
xchg
clc
xchg
mov
add
inc
lods
add
jl
(bad)
adc
xor
(bad)
ret
pusha
sbb
push
push
xor
cmp
adc
or
push
xor
retf
adc
cdq
mov
jno
aas
mov
sbb
repz
out
mov
push
sub
adc
or
loope
inc
in
out
(bad)
cmc
(bad)
xchg
(bad)
retf
xor
outs
sub
dec
pusha
pop
cwde
outs
rol
sbb
jnp
sub
aaa
adc
jp
fwait
push
xlat
mov
sub
push
data16
fnstenv
iret
pop
(bad)
retf
fidivr
daa
cli
jo
int
sbb
adc
int3
sub
inc
div
mov
fnstenv
test
sbb
jno
rol
push
jp
add
std
enter
pushf
loope
adc
push
and
(bad)
cdq
xor
cdq
add
or
add
mov
daa
repz
push
or
mov
pop
inc
cmp
(bad)
fld
or
add
xchg
xor
sub
push
mul
ret
leave
sub
(bad)
ud1
pop
sbb
not
or
add
push
mov
push
jg
pop
jmp
mov
out
and
sub
xchg
and
cmp
xchg
jl
movs
adc
(bad)
stc
bound
add
inc
push
sub
ds
adc
jae
push
lods
ins
sbb
lock
mov
out
fsubr
mov
nop
xor
cmp
inc
dec
cli
and
out
outs
icebp
jbe
(bad)
xlat
test
push
push
fdiv
and
and
mov
sub
imul
lods
popf
sbb
in
in
push
(bad)
or
cmps
jg
jno
add
or
jle
mov
dec
pop
jecxz
fisub
nop
addr16
push
js
fcmovu
popa
jmp
ret
or
(bad)
stc
and
ja
ror
push
sub
in
fsubr
leave
iret
cmc
pop
es
popf
sub
push
add
ror
fs
sub
jmp
in
lahf
movs
mov
fs
xor
(bad)
or
push
loopne
mov
ret
sbb
std
je
mov
xchg
shl
(bad)
mov
test
(bad)
call
outs
add
pop
js
add
fadd
and
in
pop
and
pop
pop
(bad)
test
dec
ins
and
sub
loope
add
imul
sub
pop
mov
push
popa
test
lahf
icebp
les
les
imul
xor
es
jl
mov
mov
jae
sub
popa
push
(bad)
jmp
push
lea
xor
jae
jg
out
cmp
xchg
test
xchg
call
repnz
and
rol
add
dec
sbb
gs
int3
imul
mov
sub
xor
sbb
inc
pushf
mov
jb
add
mov
add
sub
push
mov
lahf
outs
inc
iret
daa
pushf
movs
js
jecxz
adc
rol
mov
lds
cmc
mov
loopne
call
cmc
sbb
sub
lock
mov
xchg
rol
xor
sub
pop
cmp
call
mov
pop
sti
push
push
out
jnp
nop
mov
or
sbb
add
dec
adc
scas
mov
pop
repnz
mov
mov
pop
jb
mov
xchg
jmp
xor
nop
xchg
mul
push
mov
dec
pop
mov
(bad)
stos
push
retf
cmps
fcom
(bad)
daa
fbld
jle
das
cld
loope
fcom
pop
test
cs
pop
jb
cwde
lahf
jns
pop
aas
idiv
xchg
adc
(bad)
xchg
(bad)
(bad)
fst
sub
js
or
(bad)
xchg
lea
push
adc
lock
mov
(bad)
lock
clc
or
(bad)
popf
jmp
push
rol
icebp
mov
inc
pop
in
and
fidiv
pop
mov
frstor
ds
jmp
xchg
fstcw
push
mov
pop
adc
cmp
push
stos
jbe
addr16
mov
mov
sbb
cmp
rcr
pop
in
mov
sahf
pushf
sbb
mov
(bad)
cmp
dec
sub
ror
inc
lds
loopne
sub
neg
sti
jo
xor
mov
push
mov
mov
ficom
arpl
sbb
adc
pop
movs
xchg
or
fwait
stos
sbb
cmp
mov
push
xlat
add
sub
call
xchg
test
mov
in
push
shl
cmp
sbb
mov
stos
fprem1
inc
jecxz
fcom
add
add
cmp
cmp
jnp
cmp
pop
and
popf
scas
dec
ins
sar
in
mov
xchg
xchg
mov
mov
mov
stos
sub
(bad)
adc
sti
and
scas
dec
adc
fild
loopne
xor
stc
lods
cmp
cmps
sahf
shr
out
div
enter
xor
popf
std
push
sbb
cs
fst
ror
pop
sbb
nop
dec
mov
inc
jbe
(bad)
nop
mov
into
out
jbe
jns
inc
daa
push
out
gs
dec
or
mov
inc
mov
cdq
dec
pop
push
fnsetpm(287
lds
jmp
mov
push
test
aaa
jae
adc
dec
adc
push
mov
test
pop
inc
inc
mov
in
nop
das
pop
inc
xchg
clc
sbb
mov
aam
out
cmps
xor
pop
xor
mov
scas
fcmovne
jl
(bad)
imul
mov
inc
paddusb
push
push
inc
cmps
bound
out
jbe
sub
push
inc
imul
movs
jb
and
lock
pop
mov
mov
fsub
inc
jmp
clc
div
lods
jmp
add
or
ins
push
mov
mov
xchg
in
mov
cmp
mov
xchg
sbb
js
int
into
mov
xchg
push
aaa
mov
push
xor
pop
adc
call
push
cmps
adc
(bad)
sub
imul
xchg
mov
dec
add
push
das
cdq
xor
xchg
in
ins
les
(bad)
or
dec
cmp
xor
or
adc
adc
mov
lock
cwde
and
add
add
xchg
(bad)
fs
push
jns
jmp
outs
out
fcmovnbe
sbb
(bad)
push
push
mov
pop
pop
pop
or
and
inc
test
arpl
(bad)
adc
sbb
mov
mov
xchg
cmp
dec
jecxz
push
or
inc
lea
add
jne
mov
mov
push
leave
das
addr16
add
in
pop
cmp
sub
fwait
call
stos
pop
cmp
add
xchg
(bad)
sti
(bad)
xchg
mov
mov
push
or
ret
cmp
pop
mov
mov
mov
sbb
inc
test
cwde
in
xchg
jle
loopne
stc
mov
add
jbe
jg
movs
inc
xchg
cmp
stos
xor
inc
push
sbb
mov
mov
jns
pop
adc
jns
mov
add
in
push
mov
mov
xor
adc
cli
and
mov
stos
inc
popa
pop
lods
in
adc
bound
push
lods
rcl
out
mov
ret
or
mov
adc
in
fidivr
jb
cld
pop
repz
push
or
pop
les
and
inc
daa
sub
and
pushf
push
test
pop
cmp
cmp
mov
aas
cmp
sar
ror
mov
test
int3
fadd
mov
js
and
add
aaa
cmp
adc
sub
in
hlt
mov
mov
dec
mov
aam
mov
icebp
jl
scas
adc
cmp
add
lds
in
add
cs
loop
or
out
loope
cmp
cmps
test
js
xchg
mov
pop
jmp
add
gs
jbe
fild
repnz
or
push
push
loop
sahf
pop
ins
dec
cmp
stos
and
xor
lods
rcr
es
sub
adc
mov
inc
ret
add
jp
aad
aad
shl
mov
push
stc
pop
jecxz
jns
inc
sar
mov
xchg
push
or
mov
push
rep
and
mov
sub
out
xchg
shl
xor
inc
cmc
or
xchg
mov
popf
jmp
jbe
push
xchg
lahf
jno
xchg
dec
push
and
in
enter
dec
and
dec
fwait
mov
movaps
inc
nop
xor
pop
enter
iret
movs
xor
mov
loope
xchg
jbe
ret
and
push
mov
icebp
shl
(bad)
pop
shl
ficom
jmp
cld
pop
mov
pop
in
dec
add
jmp
lahf
add
sbb
mov
ret
cmp
int3
rol
mov
add
and
lods
inc
(bad)
sub
jmp
rcl
fcom
adc
retf
movs
fwait
in
lea
nop
dec
jns
xchg
sbb
xchg
nop
add
sub
out
scas
sbb
mov
pop
loop
cmp
scas
adc
dec
sbb
clc
int3
jbe
dec
icebp
les
rcl
(bad)
push
out
jecxz
out
jbe
cmp
mov
sub
sbb
pop
dec
mov
xor
cmp
inc
mov
and
push
movs
imul
scas
cmp
lock
(bad)
ja
fcomp
mov
pop
jns
or
call
xchg
sbb
jbe
and
dec
cmc
lea
js
out
inc
cmp
movs
outs
into
inc
or
test
scas
adc
pop
rcr
sbb
mov
add
aad
popa
cwde
mov
test
ret
in
out
adc
ficom
outs
rcr
xor
xchg
dec
pusha
push
mov
add
(bad)
fldenv
enter
sub
enter
xchg
(bad)
jmp
clc
ins
mov
dec
add
push
das
jge
aad
faddp
jnp
and
pop
pop
mov
xor
repz
pop
mov
test
mov
inc
sbb
cmps
and
addr16
jmp
adc
xchg
xchg
outs
xchg
pop
push
out
add
jae
mov
lea
adc
jle
jecxz
cmp
dec
not
jbe
xchg
out
ret
adc
lods
xchg
mov
xchg
inc
dec
xlat
mov
sub
pop
ins
lods
dec
mov
or
xor
mov
xchg
sbb
pusha
(bad)
ret
enter
mov
and
pop
retf
cmps
enter
adc
cli
popa
mov
test
fild
jo
fidiv
ja
jg
xchg
(bad)
inc
iret
mov
mov
jae
lahf
xor
into
in
sbb
jg
jnp
xor
pop
or
clc
(bad)
(bad)
fist
pushf
idiv
pop
push
mov
movs
lds
mov
pop
outs
lahf
sar
pusha
test
int3
jmp
das
out
pop
nop
fadd
sub
dec
cwde
pop
mov
and
daa
std
ret
adc
pop
repz
pop
pop
pop
leave
jg
lods
xor
or
cmp
iret
retf
mov
and
mov
add
push
rcl
ins
daa
xor
fwait
pop
popa
dec
mov
imul
sub
jb
or
fild
jecxz
and
stos
or
add
xchg
lea
jae
pop
jg
sbb
sub
push
popf
mov
test
push
pop
push
cmp
sti
int3
push
push
test
sub
imul
push
shl
mov
scas
add
bound
sub
sub
mov
in
loope
neg
adc
add
retf
xor
jmp
inc
adc
cld
fwait
lds
and
mov
shr
movs
das
ss
jae
jae
pop
inc
fs
retf
aas
add
mov
in
mov
mov
jg
int3
jge
dec
or
dec
mov
test
ins
jbe
(bad)
jmp
enter
lahf
mov
aaa
cmc
cmp
jg
sub
gs
shl
jmp
aaa
jecxz
out
ins
out
pop
xchg
js
iret
ror
inc
xlat
ins
xor
ret
jp
retf
pop
scas
sti
std
mov
pop
das
adc
inc
sub
stos
push
mov
mov
outs
cmp
int
jmp
pop
add
push
cmp
sub
jne
push
mov
jmp
inc
fwait
addr16
out
(bad)
jl
adc
sub
gs
lahf
mov
ret
xchg
popf
ret
sub
daa
dec
mov
adc
jmp
(bad)
cwde
mov
loopne
adc
leave
xchg
jb
jno
fs
int3
aas
dec
cmps
add
in
and
jno
test
cmps
and
icebp
push
inc
xchg
stos
mov
jno
push
fsub
pop
cmc
rcl
movs
push
jge
mov
mov
jle
mov
push
dec
xlat
fadd
adc
in
mov
mov
jnp
scas
push
sbb
jg
cs
sti
dec
sub
sbb
clc
sbb
int
call
cmp
pop
mov
push
sbb
mov
je
and
ja
arpl
push
shr
dec
pop
aam
xor
push
inc
or
stos
xchg
shr
fs
inc
outs
pop
jbe
test
mov
sub
cdq
push
add
dec
out
in
cmc
pop
js
cmp
bound
xor
inc
sbb
aaa
xchg
sbb
movs
mov
sub
xchg
mov
adc
lea
mov
stos
fild
add
pop
or
adc
adc
fadd
xchg
push
push
sbb
cmp
int
fisub
sub
(bad)
inc
bound
mov
mov
dec
push
lods
mov
repnz
jo
cmps
retf
xchg
sbb
ss
cmps
sti
dec
mov
fdecstp
pop
inc
mov
enter
add
scas
mov
mov
stos
sub
aam
push
lea
xor
push
add
dec
pop
push
lds
in
cmp
imul
add
rcl
lock
or
sahf
leave
inc
push
lods
add
out
inc
inc
retf
mov
daa
sub
or
outs
cmps
ins
pop
inc
mov
js
loope
or
ins
test
inc
das
and
hlt
jae
test
es
inc
rol
sbb
leave
(bad)
loopne
mov
mov
je
push
xchg
pop
fs
inc
add
sbb
fsubr
inc
inc
inc
inc
in
add
sub
inc
sbb
jle
outs
fmul
hlt
adc
xchg
mov
mov
in
add
jnp
add
or
fdivr
and
push
je
dec
das
test
xchg
adc
popa
push
mov
mov
jno
xchg
inc
add
aam
fsub
lock
clc
popf
int3
xor
fistp
sahf
cdq
push
mov
sub
jmp
jmp
or
scas
mov
pcmpeqw
jge
pop
xchg
aas
ss
push
sub
(bad)
retf
jnp
fnstsw
not
pusha
imul
ret
jg
or
sub
cmps
popa
cmp
jb
scas
dec
ja
sub
add
(bad)
mov
ins
xor
(bad)
sar
loopne
nop
icebp
popa
and
xchg
mov
jno
(bad)
inc
stos
aaa
aam
jg
daa
lods
jge
mov
dec
jle
imul
pop
and
lods
pushf
cld
and
mov
imul
mov
pop
js
stc
cmp
popa
inc
std
jg
cld
imul
ret
(bad)
das
inc
adc
rcl
and
les
dec
push
loope
arpl
push
ret
adc
mov
mov
fidivr
imul
sbb
and
dec
leave
mov
mov
leave
out
sbb
add
out
xor
scas
push
xchg
adc
sbb
stc
pushf
clc
leave
mov
ss
jmp
jb
add
sbb
dec
hlt
fdiv
pop
jbe
jbe
scas
cld
jae
shr
ins
into
push
scas
enter
cmp
xor
push
fbstp
jnp
cmps
xor
cdq
bound
into
int
or
fistp
mov
push
inc
dec
(bad)
pop
scas
inc
mov
test
and
loopne
xlat
bound
loopne
or
sbb
and
pop
jae
xor
loop
(bad)
movs
push
push
sub
fidiv
loop
fdivrp
mov
and
mov
xchg
movs
mov
pop
and
imul
and
repnz
les
ret
jl
dec
add
push
adc
xor
pop
mov
ins
inc
pop
pop
xchg
pop
adc
mov
ds
stc
test
aaa
pop
mov
xor
ss
daa
repz
jecxz
(bad)
xchg
ror
add
ja
fst
pop
xchg
mov
sbb
jne
cmps
shl
push
mov
xor
adc
pcmpeqw
mov
jae
xchg
mov
ss
push
dec
(bad)
push
xor
stc
cwde
jne
sti
mov
xchg
or
mov
fisub
push
pop
adc
imul
mov
js
dec
shl
sti
mov
arpl
aad
loope
mov
(bad)
adc
xchg
mov
shr
out
scas
outs
inc
sub
pop
ins
(bad)
dec
mov
in
(bad)
(bad)
(bad)
pop
push
dec
(bad)
push
push
and
outs
adc
push
outs
xchg
popf
dec
jmp
pop
sahf
jo
mov
call
xchg
add
int3
pop
popf
mov
jge
fs
xchg
and
inc
cdq
cs
pop
ficomp
push
push
cmp
mov
mov
rcr
pop
jp
rcr
js
xchg
inc
dec
push
dec
mov
lahf
and
data16
ds
add
jo
mov
hlt
mov
push
(bad)
aad
inc
out
mov
jl
ret
jno
cmp
and
push
cmp
cmps
in
lods
repnz
pusha
outs
(bad)
xlat
in
jo
stos
pop
mov
nop
std
jmp
or
clc
pop
push
xchg
test
jno
add
ror
fwait
adc
retf
sar
hlt
scas
loopne
stc
rcl
jnp
xchg
cdq
push
sar
rol
scas
ror
enter
mov
test
scas
aam
xchg
dec
sub
dec
xlat
sbb
movs
inc
sbb
jns
push
in
mov
pop
mov
jp
jnp
xor
(bad)
xchg
cld
push
xor
lds
lea
mov
add
xchg
shl
ins
ss
sbb
popa
outs
push
out
mov
jl
jae
push
push
stc
lods
fdivr
retf
sbb
call
adc
repz
xlat
inc
es
or
pop
ds
pushf
inc
pop
popf
xchg
out
mov
pop
jg
sub
and
jmp
push
fild
mov
test
cmc
cdq
xchg
mov
loop
xor
out
call
or
ins
mov
scas
fs
int3
pop
or
cmp
inc
mov
sub
dec
aas
retf
pushf
mov
pop
icebp
push
push
sahf
jns
repz
cmp
and
fs
int3
cmp
rcr
jecxz
aad
in
mov
sar
mov
popf
outs
lods
inc
mov
mov
inc
mov
not
cli
mov
pop
add
sbb
dec
pop
jecxz
shl
or
pop
xlat
mov
or
ins
test
in
les
dec
shr
stc
and
sti
pop
scas
pop
sub
add
test
ret
in
inc
jno
aas
sub
mov
mov
or
int3
push
clc
inc
pop
sbb
or
jp
test
and
mov
ds
(bad)
sub
sub
xlat
cmc
test
mov
mov
dec
pop
leave
or
pop
(bad)
sti
daa
push
jmp
mov
sub
inc
push
test
pop
test
sahf
scas
sbb
lahf
jnp
or
mov
in
push
mov
leave
or
ins
(bad)
fistp
jno
loop
in
in
loopne
and
inc
add
adc
cmp
sbb
daa
or
repz
int3
shl
mov
pop
(bad)
fnsave
rcl
mov
mov
div
adc
out
jmp
shr
iret
in
inc
or
gs
sbb
es
add
dec
jle
test
mov
mov
fstp
pushf
fs
push
pop
push
xor
xchg
lods
xor
popa
fs
stc
jmp
iret
sub
xchg
repz
push
pop
inc
addr16
and
xlat
push
push
and
(bad)
iret
bnd
mov
ret
push
rcr
lock
bound
mov
pop
mov
fs
aaa
jae
push
rcl
aas
and
mov
rol
(bad)
push
fisub
and
pop
pushf
in
lea
add
(bad)
mov
sub
sbb
jns
cmp
or
pusha
mov
or
iret
pop
pop
xor
xlat
(bad)
rol
pop
push
jb
pop
jl
cmp
ret
jnp
ins
(bad)
out
inc
or
mov
add
fidiv
nop
mov
cmp
call
jnp
and
sub
(bad)
jg
jbe
cmp
retf
hlt
mov
xor
stos
fwait
aaa
lods
inc
imul
dec
mov
out
div
or
shl
mov
arpl
into
sahf
xor
pop
push
xlat
add
icebp
adc
popa
mul
adc
mov
test
clc
xor
clc
or
sbb
popa
xchg
mov
add
inc
mov
xlat
sbb
jl
push
xor
xor
or
iret
inc
lds
clc
dec
xor
mov
pop
pop
sub
rcr
enter
cwde
aam
ds
jnp
add
cmps
fucomi
and
js
adc
in
mov
or
das
mov
repnz
pop
stos
hlt
lea
dec
jbe
movs
call
cmp
je
jb
jl
jecxz
mov
jne
dec
cmp
and
or
shr
js
push
rcr
rcl
mov
out
pop
mov
std
loope
xlat
(bad)
loope
sbb
xor
pop
and
in
retf
pushf
lea
pop
cmc
mov
dec
aas
and
and
test
adc
sbb
mov
out
sub
lock
xchg
ss
mov
mov
jno
test
sub
das
test
inc
aam
xchg
adc
lahf
out
sub
cmp
jl
and
stos
popf
fmul
push
addr16
(bad)
adc
push
aas
cmc
pop
push
pushf
fsub
in
or
(bad)
mov
xor
sbb
mov
iret
call
aad
mov
mov
sbb
xchg
outs
iret
cmps
in
ret
cli
cmp
hlt
jbe
inc
je
sahf
add
xor
xor
sbb
es
addr16
or
inc
in
sahf
xor
mov
adc
stos
sub
hlt
sar
ret
repz
and
rol
cdq
inc
or
fdivr
sbb
xchg
cli
mov
jmp
jl
push
adc
push
outs
or
imul
aad
outs
sbb
clc
fcom
aam
or
fbld
xlat
ret
in
(bad)
cmp
adc
mov
xchg
sbb
add
add
sbb
push
dec
jle
pushf
mov
mov
sub
mov
adc
add
call
jecxz
inc
scas
or
xchg
ins
repz
(bad)
cld
leave
ret
xlat
popa
push
out
sbb
int
shl
inc
in
push
sub
lods
cdq
(bad)
push
stc
adc
jmp
sti
stos
add
xor
sub
sahf
add
mov
push
pop
bound
(bad)
les
mov
and
add
xchg
add
ja
shr
jns
mov
or
hlt
cmp
popa
push
rol
shr
pushf
cmp
xor
fisttp
cmps
ror
fld
loopne
mov
scas
sbb
cmp
or
cwde
xchg
arpl
sbb
push
dec
pop
mov
arpl
nop
mov
out
call
in
pop
inc
pop
cs
repnz
and
fsubr
mov
rol
ret
fld
aaa
inc
int3
push
mov
out
jbe
(bad)
dec
add
push
add
inc
mov
test
mov
aam
arpl
xchg
sub
push
or
inc
add
push
pop
loop
in
dec
in
(bad)
fiadd
(bad)
icebp
in
sub
adc
outs
lock
jecxz
push
lahf
test
popa
xchg
add
sub
xchg
adc
jmp
cmps
ret
data16
push
jmp
fstp
or
mov
(bad)
int
mov
sub
(bad)
(bad)
sbb
add
daa
popa
cmp
add
inc
adc
jo
mov
in
mov
ror
repnz
xchg
dec
daa
pop
dec
scas
cli
movs
pop
add
jo
aad
mov
add
dec
inc
icebp
mov
xor
retf
mov
scas
retf
xchg
xlat
lea
cmps
iret
fld
add
fisub
cmc
xchg
or
mov
je
idiv
shld
pop
(bad)
loop
push
inc
jge
xor
xor
push
mov
cwde
ins
inc
add
sub
rol
mov
jne
jo
lds
inc
sbb
es
pop
xor
js
lods
bound
cld
pop
sti
gs
ret
push
xor
fincstp
in
out
sahf
adc
in
out
xchg
clc
call
fistp
add
movs
dec
lods
push
ficom
mov
shl
cmps
je
gs
push
jp
rcl
call
lods
push
pop
and
iret
mov
retf
mov
jb
jbe
imul
arpl
inc
sub
pop
push
popa
adc
mov
cmps
jb
mov
sti
jg
leave
(bad)
popa
aam
xchg
jge
jno
gs
(bad)
lods
fidivr
push
aam
mov
ret
arpl
and
pop
stc
fidivr
sbb
sahf
pop
test
mov
fcom
nop
pop
(bad)
xor
push
add
movs
pop
inc
mov
imul
jae
fsubr
dec
fistp
pop
(bad)
call
and
mov
jecxz
rcr
add
sub
push
(bad)
mov
mul
mov
mov
cmp
add
mov
pop
stos
xchg
(bad)
sub
jecxz
add
mov
pop
or
rcr
mov
imul
out
leave
cwde
ins
iret
jno
pop
mov
cmc
and
test
mov
jg
sbb
inc
int
mov
cs
dec
cld
xchg
fst
sbb
xor
jge
dec
cmp
icebp
mov
add
call
iret
dec
test
hlt
test
lods
dec
cdq
jmp
cmp
aad
push
mov
inc
popf
fiadd
or
pop
xor
push
push
lea
mov
pop
adc
popa
loop
mov
movs
xchg
aad
call
fs
mov
rcl
and
sub
dec
(bad)
mov
inc
adc
imul
stc
add
mov
push
lods
add
mov
ss
aam
sbb
push
(bad)
pop
adc
cmps
je
jne
shr
fs
sbb
inc
repz
mov
sar
mov
cld
ins
popa
mov
adc
fs
mov
ret
inc
movs
shr
jecxz
sbb
xor
out
and
xor
add
dec
inc
cmp
xchg
jns
xor
rcl
es
stc
fwait
scas
xor
std
outs
inc
loopne
icebp
mov
and
dec
xor
mov
mov
jo
jbe
cdq
jle
repnz
imul
out
inc
fsubrp
movs
add
mov
outs
dec
inc
popf
ins
pop
cdq
iret
popf
pop
rol
jmp
xchg
xor
inc
rcr
nop
jecxz
test
mov
retf
movs
lods
xchg
inc
iret
addr16
add
cdq
inc
mov
les
mov
push
sbb
jmp
dec
xchg
stos
mov
out
add
into
retf
js
xor
lods
outs
rcr
(bad)
dec
cmps
sbb
and
jmp
mov
push
aaa
mov
push
outs
jb
sbb
sub
data16
(bad)
(bad)
dec
(bad)
div
push
cmps
aas
xchg
in
pop
test
sbb
retf
icebp
in
aad
lods
loope
xor
adc
mov
push
mov
xchg
or
icebp
enter
adc
cmps
mov
(bad)
xor
imul
xchg
jmp
fs
add
push
push
xchg
rol
cmp
push
and
cmc
stos
daa
adc
mov
leave
adc
inc
(bad)
jmp
in
mov
cmp
lea
(bad)
jp
out
mov
add
sub
scas
repz
ins
jae
add
pop
std
push
das
dec
dec
sub
sub
push
xchg
addr16
hlt
xor
lods
inc
loop
adc
movs
and
loopne
jo
std
xor
movs
xor
inc
idiv
icebp
pop
xor
and
dec
ret
stc
sahf
jbe
xchg
mov
add
mov
inc
movs
into
cmp
aad
movs
(bad)
ins
test
pop
aad
leave
pop
sbb
mov
pop
pop
mov
int3
xchg
repnz
adc
movs
out
scas
fmul
rol
into
sbb
data16
cwde
dec
jl
les
xor
cmp
les
inc
and
dec
repnz
add
jae
rcr
add
mov
and
pusha
push
mov
ficom
xchg
push
mov
lods
aas
(bad)
jo
push
sub
call
sti
fidivr
sahf
push
push
ins
jo
mov
(bad)
xchg
add
or
dec
ja
pusha
mov
fcom
or
push
push
pop
lahf
inc
add
js
push
lods
jns
in
xchg
dec
(bad)
and
hlt
sbb
jae
imul
and
lds
test
shl
or
imul
xchg
retf
fadd
lock
sub
repnz
dec
jb
push
rcl
test
shl
pop
mov
out
jmp
loop
xchg
nop
cmps
es
mov
data16
in
call
cs
dec
adc
sub
por
xchg
add
inc
pop
push
or
mov
pop
add
jmp
mov
push
inc
and
mov
inc
jo
push
cmps
mov
pusha
mov
push
hlt
sbb
pop
mov
lea
mov
push
ror
push
mov
dec
sub
sub
mov
gs
jns
mov
iret
cli
(bad)
(bad)
mov
mov
or
int3
sbb
sbb
sbb
dec
mov
or
es
repnz
cmp
adc
add
nop
cdq
push
pop
and
sub
lods
call
xor
xor
or
mov
push
or
imul
cwde
lods
fwait
les
mov
push
adc
(bad)
xor
fstp
ins
jnp
sbb
and
cmc
out
xor
das
ficom
jmp
scas
lds
out
push
div
jl
gs
in
sbb
aas
dec
jp
sahf
xor
jmp
mov
mov
and
or
scas
xchg
fnsave
jb
neg
inc
cli
sub
pop
mov
mov
mov
sbb
push
leave
adc
cld
mov
dec
sti
inc
inc
retf
inc
ret
hlt
mov
push
pop
repnz
int3
mov
cs
movs
mov
or
adc
pop
lock
dec
xchg
push
popa
sahf
in
sbb
pop
inc
mov
xchg
das
popf
xor
retf
mov
jmp
cmps
aas
fild
push
lds
mov
pop
pusha
std
aad
inc
jb
add
inc
mov
adc
lods
sbb
mov
or
jns
cmp
mov
xchg
or
fidiv
xor
hlt
lds
fwait
nop
in
or
cmps
push
ror
in
add
ins
sbb
ror
lahf
scas
dec
pop
(bad)
jne
pushf
inc
fmul
jle
jns
cmp
push
ret
outs
dec
sahf
pop
popf
mov
pop
mov
aam
push
call
in
sbb
mov
adc
xor
sahf
ret
stc
into
ja
inc
repz
sub
push
ja
pop
addr16
repz
adc
mov
sahf
pop
mov
cmp
pop
or
add
scas
popa
int
ret
dec
addr16
into
inc
mov
sub
aam
mov
add
push
add
push
or
gs
adc
add
and
call
mov
xchg
jnp
test
and
stos
or
jmp
dec
xchg
xchg
fnsave
mov
into
mov
adc
sbb
dec
popf
jns
popa
out
push
adc
pxor
pop
stos
sub
fs
cmp
add
mov
inc
pop
mov
in
lods
cmps
mov
sbb
pop
data16
pop
sbb
push
push
ret
mov
push
sub
adc
cwde
std
test
in
jle
loopne
stos
or
sub
les
inc
jo
retf
shl
sahf
jbe
xchg
add
fidiv
cmp
js
add
pop
jl
out
daa
push
adc
inc
in
fimul
mov
add
xor
cs
jnp
sub
test
(bad)
fist
sub
out
movs
push
ja
cmc
or
xor
pop
stc
sbb
jg
ja
and
sbb
(bad)
mov
add
mov
and
push
icebp
imul
and
bound
push
xor
push
pop
scas
push
mov
mov
js
pop
rcr
sbb
push
sub
popa
dec
sbb
and
leave
jle
mov
out
shr
sbb
sub
jne
sbb
cwde
mov
push
out
les
(bad)
cmp
add
out
int3
mov
icebp
cmp
in
push
aad
mov
arpl
mov
frstor
(bad)
fst
pop
jp
inc
jmp
mov
jb
add
sub
push
out
adc
sub
pop
pop
and
sbb
into
lahf
lods
xor
bound
mov
imul
xor
mov
daa
jo
inc
sbb
movs
cs
inc
loopne
cdq
(bad)
fsub
xchg
out
and
push
hlt
lods
(bad)
dec
dec
mov
xchg
aaa
inc
cmp
xchg
adc
ds
sti
jo
cmps
int
rcr
shr
clc
jo
push
pop
cli
adc
adc
sub
xlat
jl
jecxz
(bad)
or
scas
int
nop
xor
adc
cmp
adc
imul
call
inc
stos
movs
xchg
fdivr
push
mov
(bad)
cli
jecxz
pop
xchg
sub
adc
stos
jnp
repz
call
lahf
adc
sbb
hlt
out
inc
dec
add
into
sub
jbe
popa
mov
movs
sar
mov
sub
cwde
mov
retf
outs
hlt
mov
push
js
mul
cli
inc
daa
(bad)
std
daa
dec
mov
loopne
sub
call
cmp
(bad)
mov
in
cdq
sub
dec
cli
mov
cwde
jecxz
cmp
je
test
das
lods
sbb
js
call
data16
xchg
jecxz
mov
jmp
and
mov
mov
stos
hlt
jnp
sbb
outs
ret
pop
xchg
inc
sub
inc
jg
inc
mov
repnz
jg
xor
stc
or
mov
stos
mov
and
gs
sti
lds
adc
jge
inc
fild
pop
out
or
mov
push
jo
retf
and
nop
clc
mov
in
(bad)
gs
jecxz
push
outs
jne
sbb
jno
adc
lods
stos
adc
bound
pop
(bad)
or
jae
ret
popa
inc
lods
xor
sub
das
or
mov
int3
scas
shr
cmp
pop
les
mov
enter
jle
and
clc
add
(bad)
xchg
movs
sti
push
mov
inc
xchg
xor
fisub
fldenv
or
dec
fild
fmul
sub
push
js
mov
jns
sar
push
and
ror
mov
(bad)
cli
cs
gs
adc
out
cmp
mov
test
mov
cmp
les
sbb
jb
pop
fdivr
cli
or
aad
xchg
mov
dec
imul
sub
(bad)
into
push
sti
jge
pop
push
in
xchg
xor
std
pop
cmp
or
data16
xor
pop
dec
mov
mov
sbb
movs
pop
retf
aad
repz
fcom
jbe
(bad)
ds
or
xchg
daa
xor
pop
aaa
sbb
inc
mov
rol
inc
xlat
push
out
dec
inc
shl
inc
fs
daa
push
or
pop
xor
in
call
add
mov
ret
or
adc
cmp
mov
and
mov
adc
das
data16
pop
shl
mov
add
inc
sbb
xor
aaa
cwde
jecxz
push
xchg
push
adc
push
es
push
enter
rcr
sti
jno
pop
sub
push
imul
sub
mov
xor
cmp
in
or
jge
bound
rcl
neg
push
shr
adc
aaa
mov
jbe
jo
xchg
ja
je
repz
aaa
aaa
xchg
callw
in
es
add
pop
les
mov
cwde
cmps
adc
mov
inc
hlt
push
cmps
int
fs
(bad)
leave
popa
cmp
mov
ret
repnz
sub
scas
(bad)
jg
push
sar
leave
dec
sti
pop
dec
sbb
dec
arpl
dec
mov
dec
call
dec
push
mov
mov
adc
(bad)
mov
jae
je
xor
cmp
mov
inc
adc
mov
push
lea
xlat
in
loope
and
cmp
mov
xchg
aad
cmc
sbb
add
jmp
rcl
rol
pushf
stos
ret
scas
ins
push
test
mov
sub
inc
(bad)
dec
imul
sahf
mov
xchg
out
jge
jnp
test
cmps
dec
lds
jb
icebp
xor
dec
mov
clc
fwait
push
scas
ss
xchg
int
cmp
push
jb
stos
loope
dec
cmc
jl
push
xchg
xchg
lahf
mov
inc
add
lods
push
loop
in
scas
mov
mov
dec
sti
and
sbb
mov
js
push
jmp
mov
aaa
push
inc
mov
lock
scas
fdiv
xchg
std
inc
gs
pop
cmp
inc
das
aam
mov
fbld
and
stos
pop
rol
fimul
ret
jp
add
iret
ins
retf
retf
das
jmp
adc
icebp
ja
(bad)
and
xchg
adc
or
out
imul
mov
fcom
and
test
mov
mov
out
jb
push
int3
xlat
scas
dec
xchg
sub
ins
imul
xor
in
add
push
pop
mov
out
sbb
mov
push
push
out
pop
xchg
out
retf
pop
push
call
ins
cld
out
sbb
mov
sub
xchg
lds
idiv
inc
stos
and
mov
push
dec
sbb
mov
test
out
int
pushf
mov
push
mov
bound
mov
inc
mov
fild
mov
mov
and
daa
pop
or
push
addr16
retf
or
dec
lahf
jno
cmp
out
cmp
(bad)
in
(bad)
adc
scas
dec
mov
(bad)
js
lods
or
pop
sub
adc
mov
and
dec
cmp
xor
sub
gs
imul
shl
dec
and
mov
addr16
inc
sub
jg
ss
(bad)
hlt
jl
int3
repnz
xchg
dec
imul
and
ds
mov
add
add
js
shl
sbb
jle
fwait
sub
ss
retf
add
imul
test
fist
(bad)
hlt
clc
xchg
and
sub
(bad)
fdiv
lds
movs
sbb
or
retf
mov
ret
je
inc
xchg
jb
fadd
cld
inc
mov
dec
vunpckhps
sti
and
xor
aam
bound
loopne
mov
inc
out
inc
ds
jne
es
inc
pop
hlt
inc
loopne
or
popa
or
inc
out
mov
out
rcr
imul
xchg
xchg
sub
jle
je
dec
mov
adc
js
ja
imul
xlat
sbb
lock
jb
bound
hlt
lahf
and
stos
sbb
xor
dec
mov
shr
leave
fld
aam
(bad)
jae
adc
add
adc
cs
enter
aad
mov
icebp
(bad)
add
xor
mov
pop
repnz
jns
sbb
or
mov
test
inc
cdq
stc
lahf
xor
push
mov
cmp
xor
loopne
or
cs
cli
cwde
pop
and
inc
lea
push
mov
jno
mov
ficom
jno
mov
lods
sub
or
loope
push
adc
fnstsw
daa
mov
(bad)
push
call
push
in
sbb
cmp
and
scas
inc
pop
adc
cmp
jne
mov
adc
cwde
pop
icebp
les
xchg
add
or
pop
adc
jecxz
div
cmp
movs
ficom
sub
pop
rol
and
ret
mov
stc
lea
(bad)
sbb
and
mov
or
push
in
js
fisttp
lahf
and
or
lds
sub
xor
(bad)
adc
cmp
jge
daa
movs
call
push
lea
push
in
into
xchg
js
(bad)
daa
cmp
and
sti
lods
xchg
jmp
mov
loope
ror
jne
or
jle
sub
call
in
push
or
outs
jp
jmp
cmps
nop
in
je
das
cdq
mov
jmp
hlt
xchg
jae
and
out
lea
xchg
and
loopne
mov
loope
mov
std
xlat
test
(bad)
retf
mov
or
sbb
sbb
xor
xor
fbld
out
dec
jne
pop
leave
mov
or
das
imul
xchg
push
mov
(bad)
dec
inc
enter
mov
dec
les
test
addr16
and
sub
clc
jmp
jne
jmp
mov
or
fcomi
jae
retf
cli
cmp
mov
dec
jns
cmp
push
pop
repz
add
pop
clc
cmp
pop
jae
jae
xchg
dec
pusha
inc
pop
mov
adc
jle
ret
ds
std
stc
xchg
in
stos
adc
pop
jae
sbb
pusha
or
in
jbe
jae
or
(bad)
jge
aad
rcl
shl
cmp
imul
repz
enter
xchg
adc
inc
stc
xlat
add
(bad)
mov
(bad)
outs
pop
bound
ret
cmps
push
scas
aad
test
rcr
xlat
jecxz
outs
scas
icebp
call
mov
popf
push
xchg
xor
mov
dec
add
ret
jmp
in
in
sub
idiv
pop
or
dec
das
test
fbld
rcl
or
mov
xor
mov
mov
push
aad
push
movs
ficom
ja
and
fcmovu
mov
retf
imul
cmp
cs
sahf
cmp
push
pop
imul
inc
(bad)
pop
jne
pop
mov
sbb
sbb
push
test
scas
mov
repnz
sub
pop
cli
cmp
lods
test
jp
mov
outs
push
pop
jae
and
dec
mov
ins
call
adc
pop
lea
cli
imul
adc
lahf
repnz
pop
cmps
sub
outs
ret
je
sbb
cmp
clc
bound
push
cmp
pop
loope
jb
into
mov
mov
mov
rcl
ins
sub
sub
sub
and
popa
jne
repnz
xchg
cmps
out
adc
push
inc
add
fsub
sti
rcr
xor
cli
outs
stos
sbb
push
xor
mov
adc
mov
mov
dec
push
in
test
shl
fiadd
clc
ja
(bad)
jg
ss
and
jne
and
or
fistp
add
inc
outs
addr16
mov
(bad)
jbe
int3
stos
sbb
int
stc
js
inc
ds
fdiv
pop
push
aam
xor
addr16
lods
cmps
jns
ds
fld
dec
add
ins
mov
dec
mov
mov
pop
repnz
mov
push
outs
out
mov
(bad)
pop
aam
sti
stos
cdq
inc
in
or
pop
pusha
daa
fsubr
xor
stc
mov
add
outs
ret
inc
add
imul
daa
gs
addr16
mov
std
into
out
cmps
(bad)
xor
cmp
cdq
jg
scas
clc
mov
stc
push
out
inc
sbb
xchg
test
cmp
pop
shl
sbb
and
mov
std
add
sub
push
jmp
dec
pop
pop
pop
xor
(bad)
sub
add
repz
leave
inc
pop
xor
adc
dec
scas
and
(bad)
push
push
jmp
arpl
not
sti
mov
ror
jmp
mov
push
fld
jle
push
cmp
sbb
inc
test
stos
cmp
stos
mov
xor
mov
addr16
and
cmc
mov
mov
inc
jo
adc
xchg
fdiv
in
xor
lock
inc
jnp
(bad)
sub
push
mov
add
clc
mul
sbb
mov
add
call
imul
rcl
clc
daa
cmc
sbb
mov
out
imul
cld
nop
loope
or
out
jmp
icebp
ror
sar
outs
mov
push
mov
sub
push
test
cmpxchg
inc
jle
in
push
cdq
cmps
dec
sbb
in
cs
sbb
mov
xor
test
les
lock
jo
lds
cli
fxch
rcr
jecxz
cmp
xchg
mov
xor
sbb
aaa
dec
fistp
in
push
into
push
xchg
lods
and
outs
mov
shr
jns
jne
int3
mov
movs
adc
mov
int3
mov
mov
sbb
imul
push
push
(bad)
in
cwde
movs
out
stc
mov
cwde
jle
and
jle
push
and
add
xor
sbb
or
dec
loop
jns
fwait
jp
mov
popf
fisttp
xor
jmp
sbb
mov
sub
pop
or
mov
mov
push
stc
pop
(bad)
lds
pusha
mov
push
fs
aam
mov
and
dec
lds
scas
rcl
call
das
hlt
lds
mov
in
cli
stc
pop
imul
clc
popa
lods
out
ins
pop
outs
dec
ret
stos
push
jmp
adc
jo
adc
fstp
push
sahf
xchg
test
sub
mov
or
aad
das
mov
jbe
and
fldcw
push
or
sbb
fcom
sub
add
int3
pop
jb
pop
mov
sbb
fcom
inc
pop
push
mov
sahf
test
mov
dec
or
imul
sub
daa
sahf
fisttp
scas
movs
fcmovnb
push
lods
or
push
aam
xor
adc
mov
shl
inc
push
add
pop
cmps
mov
dec
mov
inc
xor
push
mov
shl
cmp
jp
mov
retf
add
iret
pop
push
jnp
adc
stc
sbb
(bad)
sbb
sbb
xor
ret
mov
(bad)
(bad)
jg
lea
loop
add
repz
mov
sbb
lods
gs
dec
cli
jecxz
into
in
dec
sbb
adc
inc
(bad)
adc
call
jb
fiadd
sub
xchg
test
cli
loopne
xor
mov
in
hlt
inc
shl
add
dec
dec
sti
in
xchg
sahf
cli
(bad)
xchg
dec
imul
sbb
inc
cmp
mov
cmps
adc
push
cli
mov
mov
adc
retf
test
push
imul
jne
mov
and
shl
adc
sbb
imul
add
outs
lahf
iret
dec
mov
mov
in
ret
addr16
add
mov
mov
rsm
ds
or
xlat
adc
dec
pusha
rcl
add
push
shl
push
mov
data16
cld
mov
outs
mov
add
js
jbe
arpl
cmp
xchg
or
popf
ss
lahf
adc
fnstenv
jp
inc
dec
(bad)
clc
push
mov
mov
ss
inc
js
fimul
mov
push
add
pop
addr16
imul
pop
xor
add
clc
inc
stos
daa
ret
inc
in
(bad)
in
mov
leave
mov
xor
jg
mov
jmp
jbe
jae
pop
xchg
retf
inc
xchg
mul
inc
mov
in
test
cli
jle
fwait
mov
pop
mov
xchg
and
mov
ret
dec
fprem
mov
daa
sbb
xor
addr16
scas
jbe
push
mov
mov
push
xchg
sbb
jno
jmp
fs
push
adc
dec
shl
mov
xchg
jne
mov
sub
inc
sar
pop
dec
and
dec
push
cmc
mov
aad
jle
bound
aam
ucomiss
xchg
cmps
ret
repz
ins
(bad)
dec
je
pushf
jecxz
repnz
div
and
test
test
into
cmp
(bad)
pop
xlat
mov
sbb
pusha
lods
cld
(bad)
rol
inc
push
mov
mov
(bad)
aas
or
cs
cld
fisttp
mov
push
dec
adc
mov
mov
jo
adc
jnp
jno
idiv
sub
fs
mov
movs
ins
xchg
inc
(bad)
pop
mov
cs
pop
arpl
sbb
loopne
adc
cli
mov
loopne
arpl
int
(bad)
dec
hlt
pop
push
dec
jne
pushf
mov
fldcw
sbb
dec
(bad)
sbb
dec
outs
loopne
ins
dec
or
mov
xchg
fbld
dec
rcl
add
or
mov
std
dec
cmc
and
stos
sub
fisubr
and
push
xor
dec
lods
fcmove
xchg
push
sahf
push
xchg
lock
loop
xor
loope
in
cmp
pop
cmp
or
fidivr
mov
inc
xchg
ret
(bad)
adc
and
or
and
(bad)
sub
std
cmp
sahf
add
xchg
pop
jp
add
stc
dec
xor
pop
cmp
sub
call
mov
add
js
adc
xor
ja
jge
inc
cmp
arpl
xor
xlat
mov
je
cmp
cdq
push
mul
leave
mov
fcmovnbe
or
dec
mov
imul
mov
and
jae
sub
popf
xchg
push
xor
outs
push
fld
xchg
inc
mov
mov
inc
mov
jae
lods
stc
push
icebp
iret
jne
mul
mov
ss
or
les
mov
ja
retf
bnd
out
and
data16
pusha
xchg
xor
xor
mov
cli
daa
dec
stc
lock
popf
xchg
(bad)
jp
dec
outs
push
xchg
stos
sbb
outs
in
stos
inc
jns
int
xchg
rcl
add
mov
mov
fsub
fld
loopne
xor
test
ins
add
adc
jmp
popa
es
push
jo
mov
mov
inc
enter
sbb
dec
xor
jge
arpl
push
(bad)
mov
std
mov
push
stc
adc
std
cmp
push
sub
fdiv
repz
arpl
fcmovu
repz
test
fcomp
mov
hlt
ret
and
retf
add
cmp
outs
fmul
xor
loopne
ds
sbb
fistp
xor
add
addr16
adc
jmp
cdq
and
std
pop
xchg
mov
int
push
enter
mov
push
jne
sub
xchg
ffree
sbb
cli
mov
cmp
xchg
cmp
or
retf
stc
dec
mov
fwait
xor
movs
cmp
ss
cdq
fdivrp
lods
dec
pop
lock
cmps
xchg
addr16
cmps
inc
mov
mov
ret
lsl
xlat
loop
push
push
jno
xlat
push
cmc
rcr
call
je
mov
xor
(bad)
jge
xor
push
jg
popf
in
repz
mov
mov
jge
mov
push
mov
jno
mov
adc
retf
sub
mov
bound
imul
pop
mov
nop
fcom
push
or
gs
outs
xchg
aad
out
shl
jne
mov
(bad)
xchg
push
das
jns
pop
in
popa
adc
inc
add
mov
mov
in
mov
sbb
jo
push
rcr
lock
out
sbb
xchg
dec
ret
dec
jp
shl
repnz
cmc
shl
cmps
mov
push
lods
jle
(bad)
push
jne
lock
cmp
push
bound
movs
jg
add
mov
int
push
xchg
xor
fwait
sub
mov
not
sub
jo
sub
test
cdq
push
jecxz
or
cmp
das
loope
stos
and
jp
sbb
mov
fs
bound
mov
xor
or
xchg
icebp
popf
pusha
int3
aad
rcr
int
push
pop
dec
bound
mov
jmp
and
mul
jb
xchg
mov
(bad)
and
mov
rcr
out
sbb
mov
pop
and
jge
xchg
mov
pop
pop
or
test
xchg
loope
cmps
call
das
cmps
sub
sub
and
mov
daa
add
in
popf
jge
mov
pop
es
pushf
adc
jne
dec
nop
cli
pop
lahf
add
push
ja
xlat
cmc
hlt
push
lods
adc
(bad)
je
dec
inc
lock
repnz
xor
jbe
pop
sbb
(bad)
pop
aad
push
arpl
adc
or
jnp
and
sti
pop
lock
push
mov
mov
pop
pop
inc
mov
movs
xor
js
rcr
mov
loopne
fwait
lods
(bad)
mov
mov
xchg
je
inc
scas
ss
inc
mov
rol
retf
cmp
pop
adc
add
fidiv
les
sar
or
mov
ret
mov
pop
daa
dec
jl
xchg
push
xor
mov
(bad)
scas
sti
sbb
inc
dec
pusha
or
movs
push
mov
ins
sub
cmp
sub
jg
dec
mov
(bad)
fs
ret
arpl
inc
fsubp
cmps
ja
hlt
or
mov
pop
shr
and
mov
inc
rcl
push
jle
pusha
and
outs
fsubr
or
cli
adc
inc
jg
xor
xor
mov
into
cmp
mov
in
pop
mov
sbb
or
aaa
pushf
lahf
jno
retf
pop
fsub
pop
pop
and
js
adc
cmp
fwait
retf
in
scas
inc
ficomp
js
mov
or
add
inc
clc
dec
mov
retf
ins
in
addr16
loopne
add
jbe
mov
jae
inc
shr
(bad)
out
int
leave
pusha
hlt
pop
jne
bound
cmp
call
or
or
leave
sub
cld
cmp
jbe
adc
adc
lea
add
movs
into
ins
fxam
add
dec
or
inc
call
sub
scas
scas
out
and
mov
fisub
inc
jle
sti
lea
push
xor
inc
cmps
push
lahf
inc
add
int3
push
nop
add
cmc
pop
scas
xlat
mov
mov
es
adc
or
repnz
jbe
out
imul
inc
lods
sub
dec
dec
out
pop
or
shl
sar
and
mov
cld
sar
rcr
sub
push
dec
jbe
cmp
inc
xchg
add
xchg
fiadd
jge
out
jne
xor
stos
cmp
cmp
shl
das
mov
mov
mov
in
jmp
xchg
sahf
fld
ss
dec
cmp
fisub
add
adc
adc
stc
pop
test
(bad)
ret
stos
push
add
jg
mov
sbb
cld
out
scas
int
adc
pop
shl
enter
icebp
test
js
sbb
cmp
outs
popf
mov
outs
or
mov
mov
lods
xchg
sbb
cmp
pop
clc
xchg
add
sub
lock
pop
xor
ror
pop
push
cmps
bound
adc
sbb
in
ins
daa
scas
test
loopne
xchg
outs
pop
sbb
and
sub
nop
or
mov
add
repnz
mov
inc
enter
(bad)
mov
push
in
mov
outs
(bad)
adc
jb
jl
popf
daa
es
mov
mov
sub
mov
ins
fadd
and
popf
mov
dec
xor
es
pusha
mov
mov
in
inc
es
xchg
sub
mov
push
das
popa
jmp
sbb
inc
add
pusha
jbe
out
push
cli
mov
inc
pop
ror
dec
xor
(bad)
push
dec
cdq
daa
jmp
movs
lods
push
mov
jecxz
jle
inc
push
stos
jmp
jb
fisub
cmc
mov
adc
pop
iret
addr16
jg
rol
xor
adc
imul
loop
and
xchg
add
(bad)
hlt
xor
xor
sub
jp
icebp
jp
jbe
aaa
movs
data16
mov
jl
(bad)
add
jne
dec
scas
or
or
dec
pop
outs
dec
test
sub
and
adc
sub
test
mov
pop
fsub
jg
inc
aam
retf
lods
or
cmp
iret
inc
jns
xor
mov
in
out
loop
jmp
aas
nop
dec
fidiv
std
stos
dec
mov
ja
sub
fimul
xor
scas
popf
sar
jge
mov
dec
(bad)
cmp
inc
call
lds
repnz
inc
out
mov
ins
mov
jecxz
into
ror
inc
mov
pop
dec
inc
cmps
xor
xchg
lea
xlat
push
mov
mov
dec
push
shr
push
xor
movs
sub
mov
pop
lods
push
sbb
popf
into
dec
add
out
adc
fwait
xchg
out
jmp
in
imul
mov
add
fs
bound
leave
pop
jge
add
sub
ror
xchg
xchg
xchg
je
xchg
xchg
pop
fisub
sbb
pop
push
rcl
adc
(bad)
or
mov
movs
rcl
jbe
(bad)
into
push
and
pushf
add
inc
xlat
inc
in
out
aas
dec
push
jbe
mov
mov
dec
mov
adc
pop
jbe
mov
dec
popa
in
xor
xor
movs
fld
inc
pop
scas
loopne
xchg
je
lock
mov
dec
ret
cli
push
mov
movs
cdq
push
mov
fsubr
es
xlat
(bad)
jo
das
mov
ret
test
ja
pop
shr
ja
or
jo
imul
das
and
pop
leave
pop
je
sbb
jp
pop
loop
movs
cmps
push
jns
inc
int3
jg
leave
sti
mov
call
or
iret
jp
icebp
pop
int3
or
jbe
div
sub
mov
pop
iret
dec
adc
mov
pop
rcl
xchg
dec
call
pop
jge
int3
dec
loope
inc
jb
mul
mov
lds
dec
(bad)
xor
fcomip
shl
dec
push
add
popf
jne
mov
pop
ja
xchg
scas
dec
and
mov
mov
pop
shl
cli
in
pusha
aam
daa
imul
call
xchg
sahf
push
cmp
je
push
es
xor
mov
call
jnp
inc
pop
hlt
add
add
cmp
jne
adc
or
xor
add
shl
push
xchg
cwde
push
add
mov
mov
mov
xchg
xchg
mov
scas
jl
pushf
fsubr
nop
push
arpl
sub
xchg
jmp
inc
int
add
push
jge
inc
retf
into
pop
into
repz
add
add
mov
dec
or
mov
les
cmp
data16
and
mov
sbb
inc
pop
xchg
and
fst
sbb
cmp
xor
mov
fnstenv
shr
sbb
sti
repnz
cs
jb
test
cwde
fsub
push
mov
sub
inc
movs
mov
pop
push
out
or
div
jns
mov
loopne
sbb
dec
jae
jb
and
push
or
dec
int3
add
jle
jmp
ss
test
lock
or
or
xor
ss
mov
xor
xor
jo
lds
mov
test
into
add
repz
mov
or
fdivrp
aaa
in
dec
sub
adc
shl
jecxz
mov
inc
jae
mov
es
fwait
mov
and
enter
jbe
mov
inc
mov
jne
fdivr
sub
push
mov
xchg
les
add
sbb
push
jp
int3
into
shl
(bad)
les
dec
dec
scas
cs
inc
jmp
xchg
mov
xor
push
pop
outs
ins
sbb
and
out
sub
push
push
jnp
(bad)
push
cmp
mov
out
lahf
das
shr
cmps
xor
shl
xor
inc
rcl
xor
jnp
sub
xchg
loop
neg
es
xor
fiadd
je
dec
mov
jle
add
imul
jge
jmp
dec
iret
out
xor
cmp
inc
iret
jle
inc
cmp
xor
and
rcl
adc
inc
push
dec
dec
loopne
iret
add
rcl
or
(bad)
out
cmp
pusha
dec
add
jmp
addr16
add
jo
fwait
retf
fstp
je
cmp
push
cdq
lock
inc
mov
jmp
(bad)
mov
mov
adc
dec
gs
test
aad
clc
push
aas
retf
inc
out
repz
mov
into
int3
das
hlt
ficomp
adc
aam
jg
push
repnz
shr
les
addr16
pop
cmps
lock
out
scas
(bad)
fiadd
cmp
xor
fs
nop
inc
sbb
movs
out
or
rcr
sub
loopne
int3
mov
fs
push
cmc
mov
in
jmp
xchg
xchg
out
retf
push
cld
pop
xchg
jmp
and
sub
imul
aaa
sbb
pmuludq
mov
mov
jmp
mov
add
test
inc
daa
sbb
shl
dec
adc
xchg
cmp
call
jge
xchg
or
fild
push
sbb
lods
mov
mov
enter
jae
jmp
add
xor
test
cmp
jnp
paddsw
inc
lahf
cmp
fldenv
fistp
cmp
sbb
ins
mov
lods
and
xor
retf
clc
push
not
push
xchg
dec
jne
(bad)
(bad)
xlat
icebp
mov
xor
rcr
mov
push
loop
inc
push
fild
cs
ins
inc
xchg
mov
repnz
xor
outs
or
loopne
sbb
dec
lahf
dec
cmp
push
add
add
mov
jg
or
sbb
xchg
sbb
push
jno
rcr
xchg
rcl
aaa
sub
sbb
or
xchg
paddsw
ds
iret
pop
es
cwde
imul
cmps
and
inc
push
mov
inc
xor
int3
sub
and
push
pop
push
push
shl
add
adc
jl
push
js
xchg
cmp
dec
pop
cmp
or
dec
dec
es
call
push
movs
(bad)
fdivr
(bad)
fisubr
cmp
lahf
fnstsw
sbb
in
pop
loope
xchg
mov
scas
jnp
add
in
push
popf
push
imul
pop
or
aas
xlat
bound
loope
xor
in
sbb
inc
outs
fiadd
jle
inc
jmp
inc
or
int
sbb
jle
shl
fmul
cdq
adc
repnz
or
adc
out
mov
js
push
fld
(bad)
mov
clc
in
mov
(bad)
push
js
mov
test
mov
mov
jle
add
ret
jge
pushf
pushw
mov
test
int3
in
mov
lahf
jmp
out
inc
add
scas
fistp
aad
imul
mov
inc
fwait
cmp
jle
ficom
in
push
jg
add
push
popf
add
dec
or
and
in
jmp
mov
pop
(bad)
fldenv
xchg
inc
dec
add
xchg
ja
mov
ins
and
or
(bad)
fisub
cld
lds
add
inc
scas
adc
ret
inc
popa
pop
rcr
mov
repnz
inc
(bad)
(bad)
pop
outs
dec
xchg
fmul
pop
and
in
or
pop
shr
pusha
lods
ja
neg
sar
pop
enter
in
(bad)
imul
jmp
mov
and
sbb
cmp
mov
inc
bound
sbb
push
cmp
cmp
inc
pop
and
std
inc
cmps
(bad)
call
xor
ds
lahf
mov
cmps
pusha
xor
adc
xchg
pop
mov
jae
push
repz
lea
pop
out
ret
inc
mov
std
pop
inc
add
push
ja
popa
(bad)
push
call
call
scas
ret
push
sub
mov
mov
push
cmp
dec
jecxz
repnz
jnp
adc
test
inc
repnz
xor
add
sbb
inc
fcmovb
popf
frstor
jl
inc
push
rol
add
mov
mov
(bad)
jae
xlat
inc
or
stos
and
pop
test
dec
mov
test
in
inc
or
aad
mov
push
xor
test
jmp
retf
repz
ins
cmp
enter
mov
out
add
and
aas
add
sub
cmp
stos
bound
sahf
lods
dec
sahf
pop
inc
cmps
xor
xchg
or
xchg
add
adc
ss
fadd
sti
mov
jne
push
ror
loop
and
pop
xchg
and
(bad)
int3
mov
add
or
fld
(bad)
out
cmp
or
xor
cld
xor
sub
xchg
pop
out
xor
std
es
xor
gs
out
fbstp
or
out
std
neg
lahf
jmp
dec
imul
or
stos
pop
push
aad
in
jle
dec
pusha
pop
cmp
or
jae
dec
pop
sub
mov
add
pop
aam
push
sub
xchg
cdq
or
sub
xchg
and
lds
stos
add
es
sbb
les
mov
cmps
jne
jl
rol
retf
aam
add
fwait
in
inc
jo
cmp
xor
cwde
dec
(bad)
call
mov
push
xor
sub
sub
ret
nop
jbe
cmp
movs
cmps
cmps
pop
sbb
push
jnp
mov
and
enter
pop
xlat
call
jnp
lods
test
out
mov
mov
adc
in
out
cmp
(bad)
push
pop
fst
call
cmp
or
mov
push
add
mov
fisubr
fist
dec
lahf
mov
mov
std
outs
mov
push
cli
push
mov
(bad)
or
or
inc
adc
sbb
cmp
retf
neg
cmc
lea
fsubrp
xchg
std
fimul
loopne
sbb
loop
mov
out
fld
dec
xchg
mov
test
cmp
pop
fidiv
nop
push
dec
es
adc
inc
xchg
or
push
dec
xchg
gs
out
fwait
mov
leave
add
dec
push
out
xlat
ror
scas
cld
cmpps
imul
xor
bound
mov
dec
pop
sbb
add
inc
push
adc
jo
test
and
xchg
cmp
xor
mov
and
pop
mov
pop
pandn
xchg
cmp
fwait
cmc
outs
cmps
movs
loopne
mov
xor
jle
in
xchg
or
lahf
mov
add
push
and
ja
retf
aas
push
stc
xchg
jbe
test
add
icebp
mov
adc
sbb
sti
xor
mov
sub
addr16
and
mov
and
test
jbe
jmp
mov
adc
cmps
arpl
cmp
jle
sub
fcmovnbe
scas
pop
das
cmp
clc
xchg
cwde
inc
and
imul
shl
rol
jmp
sub
mov
push
xchg
cwde
loopne
inc
int
mov
and
push
jp
cmp
and
cmp
js
fidiv
neg
je
xor
shl
sbb
call
adc
call
and
adc
dec
arpl
loopne
enter
sbb
mov
daa
push
dec
mov
cld
test
cmps
into
cs
ror
sub
mov
stos
jl
push
not
cmp
rol
(bad)
mov
mov
xor
movs
div
enter
nop
pop
pusha
sbb
in
pusha
cs
push
div
inc
div
mov
cmp
repz
adc
nop
sbb
in
retf
repz
lods
div
mov
push
into
xchg
ror
pop
mov
push
outs
out
ja
mov
loopne
lea
and
adc
and
scas
cwde
jge
lahf
pop
adc
fwait
scas
sar
(bad)
mov
retf
inc
push
in
xchg
imul
fldenv
xor
stos
lds
cmps
xor
and
rol
push
add
ror
push
jne
pop
add
and
mov
jl
lahf
xlat
adc
add
adc
movs
jo
mov
ret
shr
pushf
inc
retf
or
sbb
in
dec
xor
fnsave
data16
test
xchg
adc
fcom
loopne
mov
jg
inc
push
js
sub
dec
jg
fsubr
repnz
or
ins
in
repnz
imul
push
lods
fsubr
in
fwait
repnz
push
mov
dec
sti
jmp
mov
sub
sbb
hlt
and
inc
sbb
mov
cmc
inc
dec
xchg
cld
xchg
sbb
repnz
repz
adc
xchg
nop
and
ror
loope
js
push
mov
(bad)
inc
aad
jmp
mov
cmp
sub
arpl
in
and
movs
fcmovne
mov
vmwrite
xchg
or
retf
ret
retf
push
add
jbe
jno
mov
xchg
or
gs
mov
retf
xchg
xchg
scas
pop
cmps
sbb
mov
ds
push
pusha
or
mov
xchg
test
mov
leave
movs
scas
add
stos
pop
push
in
pop
sub
addr16
pop
dec
sti
out
sub
loop
and
pop
call
imul
jmp
jb
dec
jno
enter
mov
ja
repnz
adc
pop
sbb
loop
ins
inc
adc
or
inc
xlat
mul
in
push
adc
cld
cmp
lock
xlat
mov
pusha
xor
xchg
mov
or
lahf
xor
mov
xor
ja
jl
xor
add
push
fild
xlat
rcr
lods
movs
push
lock
pop
pop
mov
pushf
jp
push
imul
cmps
push
mov
mov
(bad)
std
(bad)
mov
xor
movs
sub
je
cmp
mov
xchg
jmp
mov
xchg
out
cmp
(bad)
push
int3
xchg
in
adc
mov
iret
cwde
add
outs
in
pop
jno
arpl
and
js
and
mov
out
fdivrp
lds
pop
dec
xor
mov
mov
fucom
ins
movs
fisub
movs
mov
push
movs
pop
call
(bad)
cwde
ficom
cwde
retf
or
mov
pop
or
(bad)
fbstp
repz
adc
not
push
jle
ja
add
inc
icebp
mul
into
cdq
jnp
(bad)
jmp
data16
jge
cli
mov
add
jae
xor
retf
test
pop
lock
jns
(bad)
dec
mov
das
ins
mov
jge
int3
mov
xchg
call
call
aad
lods
dec
js
push
mov
push
adc
xor
push
dec
addr16
nop
jns
cmps
mov
or
imul
mov
or
fs
and
push
cmp
pop
retf
(bad)
aas
sub
pop
sbb
(bad)
cmps
dec
mov
adc
ins
xchg
call
inc
sar
lds
sub
xlat
repz
(bad)
icebp
fldln2
mul
add
jmp
add
call
mov
sub
xchg
cmp
int
mov
cmc
leave
test
jmp
mov
dec
int3
dec
imul
pop
and
enter
adc
add
adc
mov
fbld
xchg
xor
push
shr
push
loope
shl
(bad)
sti
mov
mov
mov
shr
jle
sbb
mov
jg
sbb
mov
rcl
arpl
cli
mov
lods
xchg
sub
cdq
into
pop
dec
clc
pushf
push
loop
and
and
push
or
mov
frstor
jb
fwait
ja
xchg
cmps
mov
cmp
jno
scas
imul
mov
mov
in
sbb
loop
scas
push
fsub
movs
sub
fsub
cdq
add
jmp
xchg
lds
gs
pop
push
cld
inc
ror
push
retf
mov
and
mov
enter
mov
in
(bad)
jmp
sub
pop
cmp
(bad)
out
xor
ror
imul
push
inc
cld
mov
aas
jno
seta
xchg
hlt
mov
mov
mov
sub
xchg
and
cmp
jns
xchg
xor
add
mov
mov
xor
int
cmc
arpl
xor
es
stc
mov
lods
das
mov
ss
fucomip
sbb
repz
push
cmc
jmp
ds
movs
ss
sbb
dec
mov
jbe
neg
arpl
scas
mov
xchg
jl
mov
call
and
dec
xor
dec
pushf
clc
push
cmc
js
ret
add
mov
adc
fisub
jbe
stos
push
mov
xor
fsub
hlt
jne
mov
or
pop
and
ss
inc
in
add
daa
and
jns
les
fdivr
jmp
adc
or
inc
aam
mov
cmp
arpl
out
(bad)
int
jp
(bad)
pop
jle
pushf
jns
in
mov
call
and
fdivr
dec
outs
fcmovne
dec
pop
fwait
outs
in
cld
and
das
in
cmps
xor
lock
(bad)
in
fcomp
sub
repz
xor
cmp
ret
mov
push
dec
out
daa
dec
test
imul
mov
pop
mov
outs
and
(bad)
int
mov
sub
fidivr
(bad)
popa
movs
call
mov
and
dec
ss
(bad)
jmp
xor
out
sub
enter
neg
stc
test
mov
retf
inc
not
inc
retf
mov
mov
mov
lea
mov
lahf
imul
adc
mov
pop
and
xor
(bad)
nop
adc
push
and
ins
jg
int3
adc
shr
inc
mov
repnz
cmp
jmp
push
not
ss
pop
ret
mov
enter
sub
leave
rol
ja
ss
push
jle
mov
pop
cmp
cmp
mov
sub
or
pop
pop
sti
or
fwait
jg
inc
push
test
mov
or
mov
test
pop
retf
int
mov
je
fisubr
push
pushf
int3
jecxz
fsub
and
sbb
mov
ret
mov
ret
mov
std
pop
sub
movs
mov
pop
cmp
and
inc
loopne
xchg
adc
(bad)
xor
sbb
or
jae
iret
mov
stc
and
inc
or
jns
push
fisubr
jle
outs
xor
movs
aaa
mov
ret
mov
jns
movs
mov
and
adc
fisubr
mov
xchg
cmp
stos
adc
sub
xor
adc
shl
inc
dec
stc
jne
push
in
push
out
mov
push
sbb
(bad)
out
test
inc
sar
inc
retf
shl
xchg
test
dec
push
add
in
std
test
add
add
(bad)
call
lahf
in
fisub
arpl
inc
gs
lahf
mov
pop
mov
push
mov
pop
mov
dec
or
add
test
push
ins
cmps
lock
aam
and
add
cmps
popa
adc
fbld
adc
fistp
out
pop
out
cmp
in
inc
push
fcomp
sbb
retf
in
stc
ja
sub
(bad)
(bad)
ins
xor
inc
add
or
cmp
cmp
mov
ret
xor
test
push
loop
es
lock
fcomp
push
test
scas
mov
xchg
push
sub
shr
and
and
loopne
in
add
xchg
adc
pop
push
jns
adc
pop
ins
test
dec
mov
imul
leave
lahf
push
sub
mov
xor
icebp
fild
adc
add
or
xor
jmp
adc
fcmovne
ror
inc
push
ds
add
js
xchg
jns
je
push
fwait
sar
pusha
and
test
cmps
xchg
rol
mov
pop
cmps
xor
xor
add
pop
mov
pop
jmp
pop
push
mov
jmp
repz
push
into
cmps
pop
movs
push
(bad)
dec
retf
xchg
fnstenv
xchg
nop
add
inc
(bad)
cmp
xchg
push
jmp
add
push
jnp
call
inc
in
nop
jb
inc
mov
jle
(bad)
inc
mov
xor
mov
cmps
loopne
and
and
add
pop
rcl
loope
jmp
sub
pusha
mov
neg
mov
mov
test
xchg
pop
jnp
jmp
push
ins
pop
sub
into
ins
sbb
mov
jns
cdq
cdq
inc
and
sbb
pop
pop
shl
fs
ins
jge
enter
mov
call
jg
in
sahf
mov
cmps
push
mov
fwait
xchg
mov
jne
xchg
inc
and
out
mov
inc
fistp
int3
mov
jb
xor
pop
fisub
push
and
call
mov
and
xchg
call
bound
jl
stos
push
lock
cmps
sbb
cs
mov
pop
sub
push
dec
es
add
into
movs
sbb
inc
enter
test
push
pop
repz
call
mov
cmp
and
repnz
xchg
imul
or
cmp
lods
sbb
in
inc
cmp
mov
mov
and
cmp
mov
imul
push
(bad)
cmps
push
mov
dec
lahf
pop
sbb
and
mov
popf
retf
inc
sbb
mov
loopne
dec
je
iret
mov
mov
and
add
scas
xor
push
jp
mov
jge
repnz
jbe
data16
ficomp
adc
fidiv
push
mov
movs
sbb
push
xor
adc
jle
mov
jl
ja
adc
out
test
or
mov
fadd
pop
sbb
jmp
sub
shl
jbe
mov
sbb
pop
adc
imul
outs
arpl
repnz
cmp
pop
xor
mov
pusha
pop
adc
mov
push
and
fwait
(bad)
jle
adc
mov
add
arpl
mov
mov
cmp
push
jne
cmp
xor
call
jns
push
rol
lods
stc
mov
xor
es
bnd
daa
jb
push
mov
in
pop
cmp
push
test
test
and
lds
cmp
scas
movs
or
add
push
mov
pop
sub
mov
mov
jg
inc
cs
push
sbb
iret
fidiv
fwait
div
jecxz
ror
and
push
or
sbb
push
dec
sbb
ret
dec
adc
or
out
adc
xchg
shl
retf
loope
sbb
cld
jne
aam
movs
sbb
mov
pushf
sub
scas
mov
xchg
mov
inc
xor
into
sbb
lock
push
int3
mov
push
aaa
cwde
fs
jns
dec
(bad)
retf
sub
add
pop
leave
or
enter
bound
shl
lods
or
in
shl
mov
adc
ror
xor
mov
lds
(bad)
jo
jno
jg
sub
mov
ins
sahf
out
pop
dec
ss
or
std
mov
jmp
push
es
test
cmp
rol
inc
shr
fidiv
and
sahf
xor
fwait
jne
push
(bad)
dec
add
out
ror
in
pop
leave
lar
mov
mov
pop
or
dec
sub
or
mov
mov
push
mov
xchg
pop
adc
popf
xchg
jg
inc
xchg
ss
mov
cld
jnp
push
in
int
sahf
mov
mov
and
inc
pop
mov
inc
xor
ss
sub
je
cs
mov
int
(bad)
shr
cmp
cmp
jno
mov
mov
xchg
popa
cmp
jp
xor
std
out
mov
pop
and
pop
mov
pop
and
adc
int
test
jge
ins
je
rol
movs
push
call
xchg
mov
pop
fwait
or
test
icebp
mov
psadbw
push
imul
cld
icebp
xchg
gs
es
(bad)
movs
jmp
jb
shr
or
add
fdivr
xlat
(bad)
and
loopne
xor
xor
push
hlt
ins
dec
sub
mov
sub
push
mov
push
(bad)
cmp
popf
push
push
sbb
add
sahf
fwait
jbe
xchg
jmp
leave
call
xchg
aaa
test
push
fwait
pusha
lock
imul
jo
dec
mov
std
lods
and
mov
mov
mov
push
or
out
jne
out
cld
pushf
ins
push
mov
mov
call
movs
push
into
imul
inc
jmp
xlat
jmp
jl
into
pop
mov
pop
gs
push
pushf
sbb
loopne
mov
cmps
inc
mov
xor
lahf
ins
mov
sub
jl
push
cld
sbb
popf
xchg
sbb
das
mov
sbb
test
xor
popa
rol
add
add
retf
mov
addr16
sub
inc
mul
cmc
ss
fidivr
sbb
dec
adc
(bad)
xor
enter
add
add
cmp
icebp
mov
fs
push
test
(bad)
and
ds
ins
pop
mov
cmps
sti
mov
iret
mov
sub
mov
xchg
mov
std
mov
repz
mov
adc
and
sti
shr
(bad)
pop
(bad)
(bad)
lock
adc
rol
popa
cld
mov
mov
cmp
out
and
xor
jecxz
xchg
jne
and
sbb
xor
outs
stc
fstp
and
mov
fld
ret
push
jp
add
push
movs
and
fsubr
dec
mov
add
push
data16
leave
xlat
cmp
adc
jp
xchg
shl
pop
xor
out
shl
aaa
dec
cmps
mov
jo
cmc
xchg
int3
mov
dec
sub
or
push
add
aam
xchg
xchg
out
inc
mov
hlt
push
cmp
mov
fbld
adc
pushf
test
cmp
cmp
push
xchg
jbe
mov
loopne
mov
std
ret
cmps
(bad)
out
jecxz
adc
push
das
es
cmp
push
xchg
dec
lahf
jne
fisttp
outs
pop
addr16
dec
mov
in
lods
ror
popf
daa
int
js
stc
sbb
ss
into
push
and
or
daa
data16
push
clc
or
cld
fs
cld
imul
in
add
mov
outs
inc
in
push
sahf
int
sahf
sahf
sbb
xor
mov
add
sahf
jbe
mov
mov
cmp
pop
lods
mov
mov
xor
or
adc
bound
retf
cld
rcr
inc
fnsave
rcl
adc
and
cld
aad
jb
daa
mov
pop
and
push
clc
pushf
sub
pop
jns
cmp
(bad)
push
adc
bound
jmp
sahf
xchg
add
test
out
sahf
int
daa
mov
dec
hlt
lahf
mov
retf
adc
clc
mov
cmp
stc
mov
push
jmp
(bad)
cmp
push
sbb
(bad)
jle
cmp
mov
lods
sub
and
add
mov
sbb
cld
dec
icebp
cmp
addr16
mov
cwde
mov
leave
adc
loope
or
fwait
mov
mov
les
mov
addr16
data16
inc
jp
iret
xor
ds
mov
push
fwait
sbb
stc
pushf
(bad)
pop
jmp
or
int3
inc
loopne
shl
test
dec
jno
psraw
mov
mov
adc
call
push
sub
addr16
xlat
sar
sub
pop
xchg
jnp
je
sbb
push
lahf
nop
mov
fs
push
aas
test
sbb
lods
test
xor
dec
(bad)
pop
sbb
retf
fisub
or
lahf
jmp
mov
xor
pop
push
mov
push
neg
aaa
add
test
jo
out
or
out
xchg
push
inc
jp
int
mov
dec
inc
dec
inc
leave
inc
pusha
iret
aas
outs
dec
push
xchg
sub
(bad)
cmp
inc
in
and
push
call
fidivr
and
je
int
inc
push
sbb
sbb
aas
fdivp
and
aas
repnz
jg
lock
xchg
push
push
in
jg
mov
or
xchg
mov
mov
or
xchg
repz
gs
push
enter
test
mov
sbb
dec
and
jo
test
repnz
sub
pop
and
shl
mov
push
add
shl
lock
dec
mov
cmp
cmp
inc
jnp
mov
iret
xlat
sti
pop
mov
(bad)
cmp
jg
xchg
xor
add
mov
loope
std
cmp
mov
mov
xor
mov
mov
add
inc
mov
jmp
fmul
add
pop
pop
fsub
add
cmc
sbb
dec
leave
in
(bad)
(bad)
or
outs
ins
sub
daa
stos
cld
cmps
sbb
mov
pop
outs
add
shr
sbb
stc
mov
and
test
and
pop
jmp
push
jae
loop
push
outs
push
mov
sub
push
sbb
push
test
push
lea
out
sbb
or
or
ror
sbb
frstor
(bad)
in
mov
fild
nop
mov
fmul
test
lods
shl
mov
jo
fild
mov
sbb
push
sbb
call
sti
jecxz
daa
mov
cmc
mov
mov
je
aam
popa
or
(bad)
pop
imul
dec
jmp
fidiv
rcr
mov
cs
mov
sub
lods
cld
jmp
inc
adc
sbb
es
shr
sbb
or
sub
loope
(bad)
mov
xchg
ins
mov
cmps
or
jp
or
jo
sub
call
cmp
xchg
and
jmp
dec
imul
xlat
int3
jno
(bad)
in
arpl
and
or
ss
daa
mov
test
xchg
and
push
xchg
inc
test
sahf
cmp
(bad)
mov
aam
jp
loope
(bad)
jle
ja
test
std
and
cwde
pop
xor
mov
mov
adc
pop
or
inc
loop
retf
mov
test
mov
ss
mov
std
enter
jnp
pop
aad
addr16
ins
sub
pop
push
adc
jo
cmp
shrd
mov
ret
or
pop
call
sbb
mov
fst
(bad)
imul
pop
icebp
mov
push
push
cmp
xor
icebp
mov
inc
dec
adc
pop
test
mov
pop
adc
fiadd
jle
pop
imul
gs
cmp
loope
mov
into
in
gs
sbb
cmp
test
lea
cmps
cmps
jne
jae
inc
iret
jp
cmps
stos
sbb
ret
xchg
ret
(bad)
retf
and
jmp
sub
inc
pop
and
push
repnz
inc
sbb
mov
pop
sbb
ss
iret
jl
loop
je
je
pushf
jmp
mov
shr
(bad)
sbb
xchg
push
cwde
xor
iret
push
mov
adc
pop
out
pop
ror
and
xchg
stc
and
mov
ins
ds
add
jae
jmp
push
add
fwait
cmp
sbb
aad
jg
(bad)
cld
ror
scas
fisub
xchg
(bad)
jnp
out
fcmovnbe
lock
and
or
adc
sub
adc
cmp
add
mov
mov
rol
push
pop
xchg
mov
les
jnp
clc
and
push
lahf
push
ins
fstp
test
jns
scas
xchg
and
cwde
adc
pusha
mov
jne
mov
inc
mov
rcl
je
pop
mov
in
push
cmp
fcom
int
std
call
push
dec
in
lods
js
mov
push
and
cmp
and
inc
cmp
(bad)
clc
dec
mov
push
adc
pop
push
push
jnp
add
lea
test
mov
and
jae
enter
std
add
jns
jb
cs
gs
icebp
retf
fisub
stc
lods
in
mov
stos
lock
push
rol
fidivr
or
adc
mov
ret
int3
dec
or
mov
clc
int
push
push
dec
outs
nop
mov
and
call
cmp
mov
test
push
mov
ror
jl
or
xchg
test
ror
into
xchg
or
mov
inc
push
leave
movs
xor
jg
sti
lods
and
mov
(bad)
mov
xchg
ficom
imul
fld
cdq
out
adc
or
ror
ffree
push
pop
fmul
je
(bad)
jnp
ret
cmps
(bad)
xor
dec
lods
mov
test
sbb
fcmovb
enter
mov
push
repz
jmp
mov
cli
mov
xor
sub
les
and
call
add
mov
das
push
bnd
pop
xchg
mul
call
lea
mov
or
mov
push
mov
cmp
push
repz
adc
cs
bound
sbb
push
retf
mov
sar
add
js
enter
mov
sar
dec
cld
test
mov
retf
cmc
mov
and
retf
imul
add
call
xchg
xchg
in
add
int3
or
sahf
and
shl
aad
or
pushf
fsub
jo
push
(bad)
xchg
test
jne
enter
mov
fcom
or
outs
xchg
and
out
xor
xchg
jecxz
fidivr
adc
and
rol
mov
xchg
xor
inc
cli
jp
mov
sbb
hlt
push
mov
arpl
mov
retf
xor
add
push
xchg
sbb
std
or
nop
cwde
loop
sub
xor
pop
mov
mov
push
test
lds
shl
xor
(bad)
hlt
mov
out
inc
xor
out
addr16
enter
std
mov
into
movs
scas
add
push
mov
xor
(bad)
dec
dec
enter
mov
out
xor
mov
fadd
add
xchg
stc
rep
push
cwde
jo
mov
in
cmp
xor
retf
xchg
cmp
jle
inc
inc
push
cld
push
jle
ja
and
pop
push
push
lahf
or
jno
dec
lock
pop
jge
mov
pushf
inc
and
sub
inc
mov
or
xor
mov
cmp
test
mov
popf
fisttp
mov
call
adc
test
loop
dec
(bad)
iret
add
mov
lods
cmp
cwde
cmp
xor
ret
xchg
xchg
jle
push
lea
adc
pop
jmp
inc
xchg
sahf
add
cdq
sub
(bad)
and
xchg
jge
inc
jnp
mov
sub
or
jle
icebp
xchg
xor
loopne
lahf
mov
jmp
icebp
push
in
in
cwde
aad
pop
mov
pusha
mov
out
pushf
jmp
jb
dec
and
mov
dec
ret
jl
adc
pop
mov
ret
movs
mov
pop
adc
std
clc
out
jo
jecxz
sbb
data16
and
cmp
mov
jae
jno
retf
pop
test
popf
and
add
sbb
int
pop
sub
mov
cmp
adc
loopne
lds
in
xchg
sbb
ret
adc
pusha
sbb
sbb
mov
(bad)
fdivr
xchg
push
sub
or
rcl
cmps
sbb
arpl
mov
pusha
movs
scas
mov
jle
lods
cmps
jmp
add
imul
or
mov
cmc
sub
mov
add
das
gs
(bad)
jbe
icebp
sbb
sbb
add
dec
push
leave
and
pop
inc
ja
inc
jb
pusha
mov
jno
inc
mov
jge
(bad)
push
mov
adc
stos
inc
xor
sbb
mov
ss
mov
push
outs
push
xor
xor
mov
dec
jmp
mov
mov
sbb
jns
lea
dec
or
out
cmp
add
dec
stos
(bad)
(bad)
test
xchg
xchg
inc
pop
cs
into
and
cwde
dec
mov
ins
call
or
test
xor
pusha
fadd
sbb
adc
aaa
out
mov
movs
rcl
imul
pop
repz
pop
xchg
and
adc
xchg
mov
push
pop
lock
pop
push
inc
(bad)
jnp
test
pop
test
popf
cwde
pop
shl
push
mov
and
sub
mov
scas
mov
ret
adc
and
daa
lahf
je
mov
adc
push
inc
jmp
ja
mov
fst
dec
jno
call
inc
pop
add
test
les
fistp
sub
cmp
adc
push
sbb
mov
cli
fwait
icebp
cmps
jne
fimul
das
nop
int3
repz
imul
sub
sbb
push
mov
push
outs
fadd
aas
addr16
pop
inc
rol
sbb
push
xchg
pop
pusha
cmps
lea
fs
add
xlat
sub
ss
jae
cs
xchg
xor
push
inc
outs
fild
push
pusha
cmps
fsub
mov
push
sub
jo
test
iret
scas
ffree
loopne
mov
daa
push
lock
and
inc
xor
inc
xchg
hlt
sub
imul
mov
les
sahf
sub
icebp
or
mov
jne
out
dec
pop
call
and
push
js
mov
(bad)
loop
add
xchg
jb
mov
test
cwde
lea
and
outs
aas
jle
pop
out
adc
call
je
or
inc
ss
loop
fwait
jle
je
push
cmc
push
sbb
mov
nop
rol
retf
test
jo
sbb
aam
out
jecxz
in
or
pop
scas
hlt
pusha
adc
jle
xchg
mov
in
cdq
mov
lods
enter
out
mov
scas
jge
jbe
ds
iret
mov
mov
(bad)
lods
pop
ret
pop
pop
in
movs
pop
pop
test
xor
sar
bnd
ds
push
mov
inc
(bad)
loope
outs
xor
lock
dec
pusha
push
retf
aad
test
xor
pop
push
imul
jle
popf
sbb
test
xchg
pusha
mov
es
aad
push
bound
cmp
loopne
iret
(bad)
arpl
and
std
adc
mov
stc
adc
addr16
xor
mov
mov
mov
test
jns
jo
repz
rcl
es
add
adc
lock
jmp
arpl
and
xor
add
push
mov
enter
stc
ret
add
mov
not
fs
dec
mov
jns
jmp
daa
push
xor
add
mov
popa
push
out
sub
sahf
xchg
in
in
pop
sti
or
lods
and
or
mov
xchg
sub
mov
neg
fbstp
push
sub
mov
adc
or
int3
stc
dec
clc
lock
in
add
cmp
push
mov
fsub
and
sub
push
mov
jmp
enter
cmp
test
mov
call
mov
ror
jnp
fist
ror
inc
mov
cld
push
cmc
jg
not
test
les
cdq
sbb
sahf
lea
jmp
sub
and
inc
loopne
sbb
shl
je
shr
sub
ds
jmp
mov
out
dec
xchg
out
sbb
adc
hlt
scas
cmp
iret
stc
xor
jmp
loopne
dec
in
jmp
je
add
mov
adc
mov
add
scas
push
cld
add
mov
mov
pushf
adc
shl
mov
test
jmp
repnz
mov
xchg
cwde
cwde
(bad)
xor
std
lea
arpl
mov
lods
mov
and
int
hlt
test
sbb
in
add
and
mov
fs
addr16
lea
or
inc
scas
lds
stos
into
aas
dec
mov
pop
ins
xchg
pop
inc
add
cmps
xor
mov
mov
sub
pop
ss
aas
call
cmp
mov
pusha
pushf
adc
mov
jmp
mov
inc
out
lock
xchg
dec
cmps
hlt
or
js
jbe
jnp
es
movs
sahf
add
jmp
dec
inc
mov
dec
ins
retf
pop
or
xchg
xchg
push
aam
xchg
mov
mov
outs
lock
mov
adc
mov
sub
push
dec
xchg
cmps
pushf
ret
pop
bound
sub
mov
pop
cmp
mov
mov
je
(bad)
call
mov
mov
pop
or
jmp
cmp
lods
jecxz
jg
sbb
jmp
mov
jne
add
call
cld
les
pop
repnz
dec
sti
fwait
mov
jge
mul
mov
cs
inc
pop
push
mov
jmp
push
fdivr
push
fsubr
scas
popa
mov
addr16
mov
cld
sti
out
mov
add
pop
leave
rep
xchg
sbb
scas
push
mov
movs
jne
imul
sbb
rcl
stos
sar
xchg
push
stc
daa
movs
popf
inc
aam
mov
push
xchg
mov
push
mov
and
pop
and
cli
push
idiv
pop
jecxz
sub
xlat
inc
push
aas
xchg
lds
clc
push
je
and
mov
adc
mov
pop
shl
shl
jmp
fldcw
(bad)
sub
push
cmc
jmp
push
jnp
pop
mov
push
dec
sbb
cmp
fwait
test
ror
fist
add
retf
xchg
or
loope
or
aam
mov
jae
inc
(bad)
int
pop
push
mov
rcr
mov
inc
not
outs
fstp
ficomp
loop
mov
add
stos
(bad)
fiadd
pop
inc
add
sar
jmp
push
mov
pop
jae
out
retf
lds
js
and
test
ret
jecxz
sbb
sti
loope
pop
pushf
mov
jmp
out
lahf
mov
out
mov
stc
xor
and
add
ss
ja
adc
push
mov
in
lds
cmp
mov
jmp
jp
idiv
xchg
nop
mov
or
push
or
sbb
lahf
scas
call
ret
popa
test
xchg
ja
dec
std
ins
jne
jbe
jle
imul
iret
xor
outs
popa
pop
in
jb
add
jae
arpl
xor
mov
mov
les
cdq
mov
and
cmp
push
clc
ds
idiv
xchg
cmps
mov
xlat
and
pop
adc
jmp
or
cmp
cmovl
jmp
in
add
xchg
inc
or
xchg
cmp
pop
sub
xor
js
push
sahf
inc
out
std
fstp
stos
aad
adc
pop
mov
push
and
xor
shl
clc
sbb
add
and
in
sub
xlat
jae
xor
scas
ins
aad
mov
pop
imul
comiss
mov
mov
in
int
ins
or
(bad)
xchg
inc
leave
jecxz
dec
pop
aas
icebp
mov
fild
nop
mov
add
sbb
push
nop
stc
test
fbstp
or
repz
mov
xor
in
sahf
inc
cmp
xchg
jbe
push
jmp
jmp
xor
movs
fsubr
mov
inc
pop
call
push
sahf
loopne
mov
or
cdq
and
jno
sahf
push
sbb
stos
inc
jmp
lods
(bad)
xor
fwait
pop
sub
(bad)
out
in
xchg
fwait
cwde
jns
fwait
push
jne
cmp
retf
or
xchg
rol
into
and
lahf
add
xchg
mov
sbb
mov
ss
shl
inc
cmp
xor
mov
out
sti
addr16
icebp
cmp
push
dec
sbb
loope
sub
rol
(bad)
cdq
pop
scas
inc
xor
pop
scas
push
mov
popa
jmp
dec
inc
xor
lds
loop
int
sbb
(bad)
pop
je
xor
jl
ret
push
add
mov
xchg
push
jmp
pop
jnp
aas
in
adc
fld
loope
add
data16
cmc
repnz
into
add
inc
ins
fs
loopne
std
shl
sub
mov
push
out
mov
inc
push
inc
cmps
mov
sbb
int
repz
iret
jecxz
das
ins
mov
jp
das
cwde
stc
sub
popa
jmp
adc
scas
cmp
lock
mov
lds
rcr
jl
loopne
cmc
push
cmc
pop
shl
ret
mov
std
cmp
mov
inc
fisttp
fstp
rcr
fimul
js
fwait
call
repz
adc
cmps
jnp
outs
test
jo
js
fstp
jmp
mov
jns
mov
xor
cmp
mov
inc
and
pop
pop
adc
mov
fcomp
rol
out
cmp
mov
leave
cmp
gs
sbb
in
push
inc
sti
inc
es
or
test
int3
cdq
sbb
sub
leave
sub
add
inc
clts
fcmovbe
add
xor
or
dec
stos
xor
pop
inc
sbb
and
jmp
pop
add
mov
daa
dec
das
(bad)
int
add
xor
fbstp
mov
add
mov
fsubr
cmp
adc
outs
test
cmp
dec
xchg
test
sub
or
pop
adc
addr16
dec
push
popf
dec
cmp
xor
jl
lods
aas
stc
out
addr16
pusha
push
jbe
or
mov
neg
movs
add
pop
cwde
mov
or
mov
add
movs
je
nop
add
icebp
ret
xchg
jg
and
fisttp
aam
jecxz
(bad)
into
out
sbb
scas
push
ret
das
outs
push
jae
outs
pop
test
adc
enter
arpl
fucomp
xor
sbb
icebp
scas
push
hlt
das
jp
lods
xor
call
inc
stos
jecxz
retf
lock
jmp
add
fcomp
shl
fwait
mov
jns
sbb
xor
aaa
dec
cmps
jnp
fisttp
rcr
cmp
xor
push
mov
pop
adc
cmp
jb
cmp
shl
jle
add
inc
in
xchg
loope
cli
mov
test
fidivr
test
push
cmc
cdq
mov
inc
js
fwait
stos
call
ret
icebp
repnz
(bad)
and
test
mov
iret
fwait
aas
cmp
and
dec
sti
fs
std
add
les
inc
inc
mov
xor
mov
je
in
lock
outs
scas
pop
xchg
js
jle
jnp
mov
cli
mov
inc
fwait
mov
push
xor
mov
sub
adc
data16
fild
mov
lahf
out
rcl
mov
jb
mov
inc
xchg
jge
adc
push
xlat
adc
js
or
mov
sti
mov
aaa
pop
loopne
out
inc
add
pop
dec
out
lock
push
ret
jmp
push
sub
push
call
dec
jb
fcom
cli
sar
and
(bad)
jo
pop
ins
and
jecxz
mov
mov
mov
jbe
rol
addr16
push
dec
leave
lock
dec
fsubr
rcl
pop
ds
push
adc
xor
call
mov
call
xor
push
je
int3
jl
(bad)
xor
mov
das
and
aam
daa
sbb
push
rcr
test
dec
inc
mov
cmc
xchg
movs
sbb
bound
pop
sti
xchg
add
or
stos
(bad)
nop
shr
pop
iret
xchg
fld
pop
ins
lahf
icebp
sub
fadd
arpl
add
int3
out
jge
adc
and
addr16
inc
jns
cmp
mov
(bad)
mov
add
in
dec
mov
shl
add
mov
std
adc
xchg
movs
inc
test
out
pushf
inc
mov
retf
cmps
sbb
pop
mov
test
retf
adc
and
jl
les
pop
push
jbe
inc
cli
or
iret
mov
add
in
jne
aaa
scas
popa
dec
jle
sub
loop
pop
xor
mov
in
jmp
cmp
loope
stos
sbb
scas
out
dec
sbb
mov
ja
mov
ss
jl
hlt
jne
test
fucomi
mov
clc
pop
mov
dec
cmps
loopne
int3
dec
leave
push
clc
push
pop
inc
daa
add
mov
int3
adc
and
gs
cld
push
adc
sbb
jge
dec
pop
lods
sbb
pop
xchg
inc
retf
pop
xchg
cwde
std
icebp
pusha
mov
nop
lgs
or
mov
mov
icebp
push
mov
add
jl
adc
(bad)
cmc
sahf
and
(bad)
(bad)
mov
sub
les
mov
or
(bad)
mov
add
lods
add
cli
(bad)
jnp
sub
leave
mov
xchg
cmp
call
das
repnz
lods
and
(bad)
inc
mov
dec
fidivr
lods
mov
pop
iret
dec
push
and
ss
jbe
int
pushf
repz
jl
xor
aad
mov
(bad)
fnstsw
jne
popa
cmp
dec
jl
sahf
jmp
fdiv
mov
cmp
fidivr
inc
(bad)
ins
pop
fs
jb
mov
ds
pop
ror
ret
cmp
test
out
nop
js
in
cmp
add
scas
push
rcr
mov
scas
addr16
xchg
mov
pop
xchg
pop
ins
in
(bad)
dec
fisttp
cmp
pop
je
dec
pop
rcl
aad
sub
aas
cmc
outs
ins
fwait
xchg
xchg
in
or
test
aad
xchg
lods
imul
jnp
ret
sub
and
js
xor
cli
push
pusha
jge
cmp
popa
das
xor
jg
or
call
cs
jp
mov
lds
mov
inc
and
or
mov
daa
dec
aaa
adc
xor
push
xchg
jge
add
sub
cmp
mov
push
enter
push
outs
int
mov
mov
and
leave
pop
sbb
loop
dec
jb
xor
jg
mov
ret
retf
sub
std
rol
movsx
jmp
or
shr
xor
test
xchg
jbe
or
movs
push
loope
sub
(bad)
sub
add
pop
jne
and
loop
or
dec
add
dec
into
(bad)
in
jecxz
test
sub
xchg
mov
fidivr
jg
popa
add
(bad)
sub
mov
mov
lds
or
fadd
ins
mov
pop
std
jne
adc
adc
and
pop
das
pop
pop
push
stc
inc
and
jmp
iret
lods
aaa
mov
in
ror
mov
push
dec
or
rol
mov
xlat
adc
xor
cmps
cmp
out
das
mov
(bad)
(bad)
out
pop
and
sbb
addr16
stos
xor
outs
mov
sub
(bad)
adc
inc
nop
mov
push
xor
movs
inc
mov
(bad)
movs
or
xchg
aam
lock
jmp
pusha
mov
clc
adc
(bad)
ret
sahf
dec
in
test
push
sbb
jp
mov
pop
xchg
in
mov
outs
addr16
inc
lock
adc
sti
ins
daa
sub
push
mov
adc
rcl
dec
push
dec
pop
xchg
mov
pushf
hlt
mov
jnp
and
stos
cs
mov
cmc
cwde
into
add
pop
sub
inc
ror
ss
clc
les
in
enter
xchg
stos
leave
mov
sbb
int
outs
dec
jge
pop
adc
cmp
add
enter
and
xchg
xchg
fsubr
cmp
cs
mov
ret
inc
cmps
push
sbb
aam
dec
bound
cmps
sub
mov
add
mov
mov
outs
pop
rcr
fcom
xor
pop
mov
shr
xlat
sar
fucomip
dec
pop
mov
add
pop
add
xor
rcl
push
pusha
ss
es
jmp
push
push
adc
mov
dec
xchg
dec
push
popa
jmp
mov
sbb
xor
jl
out
dec
pop
or
dec
adc
ins
(bad)
or
or
clc
adc
test
jecxz
hlt
and
fistp
dec
dec
mov
fnstenv
cmp
sub
cdq
outs
or
jg
sub
pop
adc
cmp
jmp
inc
lds
mov
outs
sub
ds
and
ror
push
pop
fst
inc
cli
out
inc
call
ret
cdq
adc
inc
ins
mov
xor
pop
adc
and
push
les
test
mov
sti
lea
jbe
jecxz
pop
mov
dec
and
mov
push
cmp
mov
inc
or
fcom
call
mov
sbb
inc
mov
pusha
or
sbb
fucomp
stos
push
js
hlt
lea
dec
jo
int
inc
dec
push
imul
dec
sbb
and
popf
jmp
jecxz
pop
add
mov
leave
jp
adc
fwait
xor
mov
dec
pop
pop
pop
icebp
xchg
lods
inc
not
fucom
mov
push
dec
inc
or
lea
adc
cmp
fld
ror
loop
mov
mov
es
inc
repz
add
idiv
or
aad
out
inc
mov
(bad)
mov
test
xchg
into
mov
mov
jbe
jmp
shl
sar
in
mov
icebp
adc
and
in
shl
mov
imul
(bad)
and
inc
in
and
add
fld
mov
push
xchg
ret
rol
(bad)
cmp
sub
call
icebp
out
cmps
mov
and
jmp
sbb
sub
xchg
and
fisubr
xor
push
cwde
sti
pusha
adc
ds
inc
loop
fsub
fldpi
mov
jo
cmp
xchg
in
jl
jl
ror
mov
mov
ret
push
add
and
mov
popf
jecxz
out
and
pop
mov
push
cld
aad
or
mov
xlat
stos
mov
sar
mov
std
xor
rcr
jb
add
pop
shr
movs
out
push
call
retf
ins
push
lods
arpl
mov
cmc
add
retf
xor
cdq
xor
xor
mov
or
jmp
lock
mov
cs
rcr
loopne
(bad)
pop
idiv
loope
push
mov
jae
mov
fmul
sub
adc
fimul
jge
not
mov
cmp
mov
scas
push
mov
aam
add
push
sahf
shl
pop
dec
ret
cmp
test
xchg
cmc
aam
call
rcr
dec
jbe
push
xor
daa
imul
dec
shl
inc
xor
ds
push
dec
shl
leave
push
sbb
retf
mov
test
ficom
fmul
fwait
push
mov
sub
or
gs
fist
inc
push
fcmovb
mov
adc
shr
repz
mov
(bad)
jmp
add
je
xor
add
popf
or
rcl
imul
cwde
pop
mov
jmp
pop
inc
not
mov
jbe
xor
mov
or
jmp
jecxz
pop
jmp
pusha
sub
push
jecxz
sub
or
fstp
push
sub
inc
mov
je
adc
retf
mul
mov
mov
and
or
rol
push
mov
repz
pop
cmc
adc
push
adc
call
or
pop
int
dec
fcomp
adc
(bad)
leave
es
out
into
aad
dec
jmp
movs
jmp
fwait
or
fdivr
push
pop
or
scas
and
jo
dec
pop
push
arpl
pop
pop
jmp
jl
xor
arpl
jbe
mov
adc
lock
mov
pop
ret
xor
seto
shr
mov
add
add
cmp
stos
lahf
inc
push
sbb
lock
arpl
cmps
inc
mov
loope
(bad)
adc
retf
cmp
stos
and
in
xchg
push
cmc
and
fsub
test
pop
mov
mov
cmp
fcmovnu
cmp
pop
mov
xchg
sahf
fsub
fimul
ss
imul
les
stos
jg
or
mov
fist
push
ja
pop
pop
inc
arpl
xor
or
xor
adc
mov
xchg
out
fisttp
mov
add
out
pop
pusha
jno
pop
push
pop
es
scas
outs
aaa
fistp
sub
sbb
mov
(bad)
or
mov
pop
jmp
or
jbe
in
jecxz
push
xchg
imul
or
gs
and
mov
sub
and
and
fcom
jmp
jg
mov
jmp
push
lds
sahf
inc
adc
jle
out
jmp
cmps
add
mov
push
mov
dec
mov
adc
mov
repnz
stc
mov
jmp
sub
nop
popa
and
pop
pop
test
xchg
mov
int3
add
aas
imul
pop
scas
das
add
mov
in
test
test
ins
push
or
addr16
and
lahf
adc
ret
sub
mov
(bad)
loopne
cwde
(bad)
out
inc
dec
jle
in
jno
pop
movs
mov
(bad)
mov
mov
ja
mov
mov
xchg
push
outs
icebp
sub
pusha
jg
or
pop
inc
jmp
push
mov
xor
out
xor
ss
add
pusha
mov
ins
mov
popa
cmps
add
dec
cmps
mov
(bad)
adc
gs
ins
std
xor
jecxz
pop
mov
fscale
pop
cmp
fwait
clc
sbb
or
loopne
jge
cs
inc
mov
inc
push
imul
lods
call
xor
loope
mov
xor
push
outs
and
dec
sub
out
(bad)
jmp
stos
jg
cmc
lods
stos
shl
inc
pusha
sti
sahf
push
push
mov
pop
movs
je
not
fs
xchg
mov
or
dec
cmc
les
xor
xor
rcl
inc
test
xor
jp
add
push
xchg
(bad)
push
mov
add
mov
adc
pop
inc
push
xchg
push
pusha
or
cli
sub
add
mov
jmp
inc
inc
cmp
imul
mov
imul
inc
or
sbb
inc
test
xor
add
jnp
lahf
xchg
stc
adc
out
jno
push
adc
jp
arpl
add
pushf
pop
dec
mov
xchg
loope
mov
and
je
adc
sub
dec
push
cwde
aad
aad
or
jl
or
mov
test
loop
cmp
mov
and
add
mov
inc
movs
stos
adc
movs
mov
popf
addr16
cmp
into
push
jmp
fwait
cmp
pop
dec
lods
mov
dec
add
push
lock
pop
mov
mov
into
test
xchg
mov
or
dec
cmp
sbb
sahf
adc
inc
xchg
pop
movs
ds
aad
mov
icebp
ret
xor
into
fsub
jns
retf
aaa
jb
data16
loope
dec
lods
cdq
movs
pusha
scas
cmp
gs
loopne
mov
push
lea
fwait
xor
call
dec
fldenv
dec
jb
loop
mov
and
rcr
push
shr
neg
outs
push
test
out
iret
pop
push
sub
add
cmp
add
iret
push
mov
xor
(bad)
mov
nop
cmps
mov
and
dec
mov
xchg
mov
adc
setb
mov
sti
add
imul
mov
sar
add
ds
dec
lock
inc
mov
mov
outs
dec
stos
cwde
ret
sub
pop
rcl
push
lds
inc
sar
sbb
push
mov
fstp
mov
push
jecxz
sub
and
push
(bad)
fnstsw
test
sub
mov
dec
(bad)
jmp
dec
pop
xor
mov
add
lds
mov
movs
sbb
ja
cmps
cmps
push
test
dec
cmp
pop
test
xor
lahf
sub
data16
push
mov
adc
or
or
stc
mov
lods
inc
cmps
add
cmp
xlat
into
jle
cmp
adc
pop
fimul
sti
jp
mov
popa
adc
mov
add
mov
pushf
ret
sub
push
pop
jne
xlat
add
ret
aad
ret
(bad)
mov
das
inc
clc
outs
icebp
dec
popf
adc
sub
or
mov
adc
ficomp
jmp
fisubr
mov
cmp
mov
xor
aas
mov
loopne
fidiv
push
cmp
adc
das
push
adc
in
inc
xchg
push
out
push
(bad)
cli
sbb
sbb
mov
pop
and
and
and
mov
repz
cdq
in
in
mov
daa
inc
mov
in
movs
loop
mov
cs
lods
xor
test
ror
adc
jecxz
add
push
(bad)
outs
aaa
adc
push
rcl
out
push
push
cwde
mov
or
dec
sbb
mov
push
mov
outs
sti
(bad)
bound
das
push
sub
loope
into
lock
push
push
nop
mov
add
shr
imul
ss
fstp
xchg
adc
jg
call
neg
xchg
xor
adc
pusha
mov
mov
sbb
xlat
jp
add
popf
adc
mov
adc
or
mov
les
xchg
adc
dec
pop
daa
xlat
repnz
jmp
xchg
pop
xor
ins
imul
daa
enter
fadd
pushf
pop
push
mov
stos
inc
push
or
mov
pop
xlat
sub
lahf
ds
dec
repnz
in
stos
or
repz
push
aad
xor
push
aas
inc
movs
rol
movs
and
inc
loop
rol
daa
cmp
mov
or
or
sbb
cmc
push
rol
mov
mov
scas
popa
pop
mov
or
and
sbb
cmp
ret
push
aas
push
mov
xchg
pop
jb
jmp
jg
sti
xchg
(bad)
jmp
jb
adc
sbb
adc
iret
pop
faddp
mov
fimul
sub
add
mov
sbb
xchg
inc
cmp
fnstenv
das
push
push
mov
cmp
mov
push
pop
std
add
pop
aas
push
sub
popf
add
ins
scas
add
jp
sub
fst
jne
shl
inc
sub
leave
fwait
ret
add
or
arpl
fimul
sar
pop
mov
ja
cwde
fist
mov
sub
adc
fisttp
lahf
retf
(bad)
dec
cs
and
sub
push
xchg
repz
pusha
add
js
ret
iret
xchg
push
lds
or
jns
retf
stos
dec
into
jp
push
xchg
std
(bad)
adc
ja
jecxz
push
push
mov
mov
je
jl
cs
sub
xor
pop
ficomp
shl
xchg
or
sahf
in
inc
ret
ins
jnp
in
sub
sub
in
mov
adc
aad
lods
stos
push
dec
or
stos
mov
sub
jmp
es
jnp
jne
sar
retf
int3
lods
push
push
enter
add
mov
push
sub
sbb
popf
push
cmp
cmp
sub
loope
pushf
sub
mov
lgs
retf
es
adc
loop
bound
wrmsr
shl
mov
dec
stos
xchg
rol
movs
sbb
jo
xor
call
cmp
hlt
push
push
test
int
adc
shl
cwde
loop
xor
dec
ficom
ss
cmp
sbb
xchg
or
push
ret
cli
dec
ins
or
jmp
mov
outs
lods
add
popa
sub
iret
sbb
mov
jl
pop
fld1
or
ss
leave
mov
sahf
jnp
movs
retf
test
add
ins
out
in
jmp
fld
pop
pmullw
stos
sub
mov
ins
ror
mov
lahf
hlt
leave
cdq
lea
shl
or
sub
adc
mov
jge
sbb
in
mov
cmp
push
cmp
sahf
daa
cmps
rcl
cmc
scas
or
xor
loop
xlat
sub
push
js
pop
call
adc
xor
test
sbb
pusha
mov
(bad)
pmaddwd
jg
or
inc
aad
hlt
or
repnz
lahf
int
fucomip
lock
cmps
push
dec
ja
push
(bad)
jno
or
adc
mov
sub
ret
adc
imul
adc
jnp
iret
data16
pop
mov
imul
push
pusha
bnd
mov
xor
inc
or
movs
and
repz
dec
cdq
add
mov
sub
jle
or
cld
jecxz
and
jmp
mov
popa
mov
shl
sbb
in
dec
fs
(bad)
rol
push
ds
mov
cmp
adc
mov
push
outs
div
int3
inc
movs
sub
mov
cmp
fsubr
push
shl
xchg
pop
sub
fld
loop
mov
rol
retf
adc
pop
int3
xchg
mov
inc
mov
cli
mov
loop
scas
mov
and
mov
(bad)
mul
cdq
jle
pop
lahf
aaa
push
retf
pop
lahf
enter
icebp
rcr
out
dec
popf
fbld
push
fisttp
lea
and
shr
or
cmp
mov
loope
jmp
popa
mov
pop
xchg
pop
and
mov
jne
sbb
cmp
pushf
and
jb
cmp
scas
fild
mov
jg
mov
push
jmp
and
aad
xor
imul
mov
jne
xor
sti
pop
lods
cmp
ja
stos
repz
and
aam
xchg
imul
jb
cmps
xlat
and
cmp
addr16
imul
inc
or
adc
pusha
xor
arpl
mov
shl
inc
pop
test
ds
out
mov
jge
test
sbb
ds
mov
data16
fsub
pop
jne
pop
cmp
mov
leave
ja
jg
pop
and
push
in
add
imul
jmp
fistp
(bad)
fistp
dec
dec
jecxz
sub
jno
adc
inc
sub
lods
stc
shl
cmc
cmp
lods
sub
jmp
imul
dec
fld
movs
ins
jecxz
xchg
(bad)
pusha
mov
es
je
mov
inc
sub
ins
(bad)
xor
mov
sbb
out
cmc
push
fsub
or
retf
fmul
push
xor
or
sbb
sub
adc
xchg
and
leave
dec
ret
pop
(bad)
mov
aaa
mov
mov
xor
push
outs
pop
leave
data16
add
xchg
sub
rcr
fld
adc
stos
cmp
jp
out
pop
js
adc
stos
imul
mov
and
xchg
mov
stos
xchg
push
out
sub
ficomp
and
addr16
push
xchg
enter
dec
xor
mov
out
pop
dec
or
fwait
call
jno
in
js
xor
call
jmp
sub
dec
jmp
inc
push
fsub
test
fst
and
push
sbb
cmp
arpl
mov
fist
movs
ficom
cmps
mov
je
sbb
or
frstor
or
add
jnp
cmps
inc
fldenv
or
sbb
shl
lea
inc
and
cmp
xchg
imul
mov
mov
sub
retf
jg
pop
sahf
movs
aam
xchg
pop
pusha
push
scas
cli
jno
mov
pop
push
adc
call
adc
jmp
push
das
mov
std
push
lock
or
and
sbb
push
test
add
(bad)
cdq
add
call
cmp
or
sub
adc
cmps
outs
std
jne
jnp
cli
xchg
popa
cdq
sub
in
jbe
dec
fsub
mov
push
mov
cmp
dec
in
jle
adc
lea
fcmovne
dec
xchg
xor
fdivr
outs
clc
xor
dec
movs
mov
jne
mov
dec
arpl
and
ss
inc
cld
lds
mov
add
xchg
xchg
xchg
cmp
fsub
jecxz
je
pop
popf
adc
dec
shr
addr16
fld
out
test
jg
ja
mov
loope
pop
cmp
and
jns
sub
mov
mov
mov
mov
mov
sub
mov
pop
xchg
jo
xor
inc
xchg
sar
int
repz
cmp
xchg
imul
aaa
adc
arpl
in
inc
test
loop
sbb
push
pop
int
loopne
sahf
ret
pusha
stc
pop
and
cli
movs
dec
fcmovne
cdq
int3
lods
repz
std
jl
imul
dec
cdq
test
arpl
adc
sbb
out
out
aad
fisub
cmp
sub
cmp
outs
fcom
mov
and
jbe
xor
mov
cli
dec
call
mov
stc
inc
cdq
loop
repz
arpl
jns
or
push
and
dec
mov
cwde
cmp
jle
jne
push
cmp
fidiv
jle
inc
xlat
push
xchg
retf
jle
movs
(bad)
shl
ror
add
push
cmp
jg
xchg
das
xchg
xchg
push
push
cdq
scas
or
test
div
pop
prefetch
or
and
aas
pop
sti
xor
dec
push
outs
fstp
push
cs
cmps
je
test
popf
inc
cmp
cmp
jg
bsf
cmc
ret
call
dec
cdq
xor
push
retf
jo
and
aad
mov
std
stos
imul
sub
dec
test
xlat
sub
adc
add
fld
mov
mov
jne
inc
int3
adc
jl
mov
sbb
push
ja
sub
mov
push
cli
and
pop
dec
mov
pop
cmp
retf
mov
das
ss
or
dec
add
mov
mov
call
pop
push
out
out
mov
mov
cwde
pop
sub
push
cmp
or
jp
pushf
int
sar
jnp
int
or
inc
jae
mov
mov
or
arpl
xor
sub
push
inc
ficom
xchg
in
iret
xchg
std
shl
mov
add
arpl
aam
push
test
adc
inc
cmp
not
mov
jmp
xchg
jge
rcl
and
xchg
cmp
hlt
fs
ret
pop
(bad)
push
mov
loopne
call
cmp
dec
dec
push
mov
mov
mov
pushf
xor
iret
pop
out
sbb
xchg
scas
(bad)
enter
ins
or
jmp
clc
mov
test
mov
xor
inc
repnz
sbb
cli
xlat
aaa
shl
sbb
cmp
out
push
and
scas
int3
pop
aas
rcl
fdiv
sahf
xor
pop
shl
mov
stos
cdq
mov
ret
jmp
push
cld
fld
movs
daa
adc
enter
push
and
pop
mov
jge
xchg
pop
xor
rcr
jg
jne
bound
jo
or
push
repz
add
adc
les
inc
inc
es
push
adc
fisub
outs
iret
push
bound
inc
or
sub
cld
loope
ret
jne
repnz
sub
cwde
repz
(bad)
cli
dec
jmp
icebp
dec
or
cmp
cmp
bound
jne
sub
loopne
push
mov
lds
cmp
int3
xor
(bad)
jmp
sub
retf
shr
fdiv
add
add
gs
outs
mov
loopne
adc
mov
push
dec
cld
fistp
je
sar
adc
ins
arpl
mov
stos
jbe
in
pop
push
ret
inc
or
sahf
(bad)
adc
nop
push
out
inc
vpmulhuw
push
sbb
mov
scas
cli
movs
inc
adc
shr
and
inc
lods
mov
push
ins
(bad)
sbb
adc
in
not
dec
push
lea
popf
lock
mov
bound
mov
dec
imul
icebp
cmp
ins
cmp
jmp
mov
xor
cwde
adc
xchg
out
nop
movs
inc
lods
into
enter
and
inc
push
mov
sahf
jo
(bad)
std
cld
dec
ret
add
push
jecxz
jmp
mov
mov
aad
out
xchg
cmp
aam
jmp
add
or
mov
inc
xchg
sbb
push
push
es
in
adc
out
sbb
test
cmps
cmps
xor
pop
mov
sub
mov
adc
dec
rcl
jmp
xchg
and
js
test
aam
pop
shl
pop
xor
push
imul
in
cmp
adc
aam
repnz
mov
sbb
cld
bound
jmp
nop
add
stos
pushf
ror
pop
xchg
jns
cmp
rol
jp
mov
in
lods
mov
loopne
sbb
mov
scas
pop
add
cmps
lea
pop
je
jle
dec
inc
popa
test
cmp
cmp
sub
adc
pop
push
lea
sub
test
or
movs
xchg
hlt
push
pop
dec
clc
out
add
int
add
jge
inc
popf
loopne
mov
lods
into
pop
add
mov
mov
in
(bad)
inc
clc
dec
fisttp
adc
retf
push
pop
mov
or
lods
mov
mov
xor
mov
arpl
(bad)
ins
je
fs
mov
lock
adc
stc
push
mov
dec
(bad)
push
dec
fnstsw
fsubr
inc
pop
jmp
jnp
xchg
add
clc
cli
ins
cld
or
rcl
or
out
jb
retf
ins
int3
sub
or
stos
push
retf
adc
fsub
cwde
xchg
scas
test
je
mov
pop
push
pop
daa
sbb
adc
out
fist
jecxz
jns
or
pop
mov
cmps
lea
add
cmp
mov
push
xchg
aas
mov
xchg
xor
push
retf
retf
imul
or
arpl
cs
rcl
ss
pushf
and
jmp
pushf
dec
popf
les
ret
bound
jns
pop
shl
mov
xor
scas
les
adc
push
mov
inc
push
pop
mul
in
inc
punpckhdq
repnz
iret
inc
(bad)
sub
mov
test
fnstcw
out
jno
cwde
jle
cwde
icebp
dec
push
in
fst
retf
std
fistp
out
fcomip
outs
pop
std
stos
int
add
cmp
int3
jecxz
mov
stos
call
out
mul
sub
(bad)
pop
loopne
xor
push
pop
in
push
or
jnp
cmp
lods
loope
nop
(bad)
ds
into
fisub
cmp
js
sbb
(bad)
mov
(bad)
pop
jno
out
sbb
cmp
mov
rcl
dec
outs
lea
pop
xchg
jle
pop
jne
and
aaa
jecxz
cmp
lods
aam
or
add
push
mov
adc
sbb
gs
icebp
rcl
not
sbb
aas
faddp
cs
test
xor
cmps
ins
add
aaa
sub
cmps
xchg
mov
pop
cmp
rol
je
cld
nop
hlt
(bad)
jne
aad
test
jbe
mov
add
xchg
aaa
call
push
mov
outs
inc
mov
mov
ror
adc
jns
inc
push
mov
xchg
lods
ret
rcr
into
jmp
fsubr
push
mov
or
lahf
adc
xchg
cmc
leave
push
dec
in
mov
fwait
cmp
stc
mov
inc
mov
inc
mov
fimul
push
gs
add
adc
pop
enter
xchg
mov
rol
mov
xor
fiadd
add
push
cmc
loopne
xchg
push
mov
xor
movs
in
js
mov
test
xor
repz
push
test
and
cs
push
cmp
xchg
sbb
jae
movs
or
or
sahf
das
mov
lar
push
fucomip
fcomp
adc
fistp
dec
or
out
std
mov
data16
jmp
movs
sbb
cdq
ror
jle
inc
mov
xchg
mov
enter
sbb
or
sub
test
dec
inc
or
dec
or
js
lea
sbb
jbe
inc
xchg
jne
jmp
iret
add
jbe
jo
xchg
nop
inc
or
icebp
fwait
popf
fcmovb
xchg
cmp
inc
dec
push
shr
or
rcl
push
mov
int3
pusha
inc
jmp
push
or
push
addr16
pop
shr
sbb
sbb
push
cmp
retf
cld
sti
pop
cwde
pushf
std
mov
and
(bad)
push
sbb
or
jne
jl
inc
push
inc
ja
pusha
mov
fnstenv
dec
(bad)
cmp
mov
test
outs
scas
jbe
test
les
mov
mov
into
enter
push
in
push
(bad)
icebp
popf
jbe
repnz
or
xchg
ss
in
(bad)
in
dec
nop
or
xor
inc
xchg
push
mul
call
cmps
shr
shl
xlat
sub
dec
sub
pop
movs
inc
adc
cdq
std
repnz
enter
in
dec
fwait
add
sub
cmp
jge
adc
inc
out
pop
sbb
sbb
inc
inc
pusha
mov
sub
mov
xchg
sti
das
pop
dec
fs
mov
sti
mov
pusha
add
sbb
inc
sti
cmp
xchg
mov
xor
mov
mov
xchg
neg
and
pop
pop
test
pop
or
jl
retf
(bad)
lods
nop
push
inc
das
in
rcr
loopne
cdq
scas
cs
add
popa
jg
push
pop
scas
mov
push
jp
addr16
fwait
js
cmp
ss
dec
inc
pop
pusha
aam
jmp
imul
and
cmp
clc
push
ret
iret
mov
rcl
out
push
mov
push
out
stos
xchg
dec
imul
xchg
fwait
push
mov
bound
push
jmp
cmp
adc
div
fucom
das
xchg
or
clc
das
dec
push
jne
test
and
jo
jo
lods
aam
fsubr
cmps
jge
xor
(bad)
add
xor
leave
clc
fcom
or
cmp
popf
je
or
mov
mov
push
xchg
cmc
cmps
aas
add
pop
cwde
out
call
aaa
xchg
adc
xlat
gs
out
cmp
cmc
xor
push
mov
jl
mov
stos
rcr
inc
(bad)
pop
or
xor
scas
ret
and
loope
ja
nop
imul
hlt
jb
into
das
push
ret
movs
and
mov
push
inc
sub
stos
fcomp
fsqrt
pop
xchg
mov
ins
pop
sbb
int
icebp
ds
fcmove
mov
test
mov
mov
pop
fcomp
pop
jmp
sub
rcr
cmp
push
xchg
xor
lock
inc
ss
(bad)
int
sbb
retf
cdq
mov
fld
mul
adc
sub
push
test
push
inc
in
inc
in
pop
outs
call
lods
mov
loope
and
sahf
sbb
mov
mov
pop
rcl
cs
xor
pop
sbb
in
cmp
mov
mov
std
daa
mov
pop
mov
jb
cmp
xor
mov
sbb
sbb
gs
loope
add
pop
ret
jo
mov
or
or
xlat
daa
addr16
data16
cmc
leave
imul
dec
cmp
cmp
push
adc
xchg
rol
pushf
mov
fisubr
fimul
sub
and
ss
and
ror
jae
pop
push
inc
adc
gs
add
sub
mov
cmps
out
outs
add
loopne
cwde
iret
shr
mul
or
mov
dec
jp
leave
je
jo
(bad)
dec
xchg
jns
pushf
xlat
popa
push
cdq
outs
fcomip
fisttp
les
call
imul
and
adc
into
mov
pop
xchg
je
sbb
sub
mov
sub
mov
xor
hlt
xchg
sbb
(bad)
jmp
fld
mov
int3
call
jne
popf
sub
sub
mov
into
pop
dec
outs
jbe
adc
ins
and
lods
xchg
fidivr
dec
pop
jg
fsubp
dec
push
dec
inc
mov
xchg
xchg
(bad)
in
fcomp
fcom
fnstsw
dec
dec
stc
inc
sub
xchg
inc
nop
cmc
push
push
inc
jbe
xor
push
pop
test
inc
jmp
inc
scas
push
push
out
sub
push
sub
cmps
xlat
lahf
test
mov
cmp
stc
outs
or
mov
into
in
xor
xor
jg
mov
and
nop
mov
adc
fisttp
cdq
or
add
mov
mov
jecxz
mov
adc
scas
inc
jmp
imul
js
shl
pop
test
inc
in
in
inc
dec
pop
or
call
int3
and
aam
inc
(bad)
push
xchg
xor
ja
and
sbb
test
mov
push
push
ret
mov
stos
push
push
(bad)
nop
or
push
push
sti
push
outs
mov
mov
jge
in
push
loop
cmps
sbb
addr16
movs
push
cmp
ins
mov
nop
inc
and
(bad)
repnz
stc
push
aas
mov
(bad)
nop
retf
in
out
cwde
shl
cmp
xor
jbe
or
push
inc
dec
sti
int3
outs
adc
xchg
and
sub
xchg
add
adc
cmp
daa
(bad)
shr
icebp
shl
inc
jnp
jo
and
mov
out
pop
call
les
or
inc
retf
sbb
pop
fstp
lds
inc
pop
pusha
(bad)
int3
and
pop
cmp
sbb
popf
ss
enter
fcmovu
retf
xchg
dec
arpl
cmps
xchg
fs
mov
mov
mov
(bad)
push
cmp
idiv
sbb
retf
mov
(bad)
lea
dec
inc
inc
jmp
adc
jl
jl
loop
repz
mov
dec
jg
inc
sbb
das
jae
cmp
fidiv
xchg
pop
std
or
push
in
pop
and
frstor
mov
je
jns
test
pusha
or
(bad)
icebp
stos
mov
xchg
add
popf
sub
test
xor
test
push
movs
(bad)
jae
ror
jle
inc
sub
sbb
(bad)
sbb
cs
inc
pop
and
mov
cmp
xchg
fdivp
fdiv
mov
add
inc
mov
loop
in
outs
jge
aas
scas
jg
loopne
mov
cmp
fisttp
mov
pop
jle
cmps
call
push
and
mov
mov
int
test
and
ret
jne
mov
gs
cmp
jmp
cdq
(bad)
aam
cmc
sbb
hlt
xchg
std
inc
dec
fldenv
(bad)
xor
sbb
or
ins
mov
or
jns
pop
push
push
test
fisttp
cmp
sbb
lds
aam
pop
call
(bad)
pop
js
cwde
push
arpl
add
movs
mov
aas
inc
cmp
jnp
pop
sub
or
jno
hlt
jno
sti
test
mov
(bad)
in
mov
pop
shr
mov
jae
lock
test
cli
lahf
xchg
adc
jg
ret
popf
scas
leave
sbb
hlt
fsub
mov
cld
xchg
mov
(bad)
sub
mov
xor
push
cli
pop
or
lds
rcr
int3
mov
jmp
add
and
mov
je
add
fstp
jnp
sbb
dec
fmulp
cmc
test
push
push
push
cmps
int3
fwait
ds
ins
mov
fwait
mov
and
imul
push
lea
int3
push
xchg
jne
cdq
add
cli
(bad)
stos
adc
test
bound
xor
inc
loopne
add
sbb
xor
add
pop
or
out
shl
fisttp
les
or
arpl
ds
ins
xchg
das
in
mov
pop
sub
mov
imul
xor
xor
jmp
lds
out
scas
push
and
mov
push
sbb
jle
xlat
xor
push
fimul
inc
mov
lods
cs
popa
ins
not
mov
out
jp
aas
jns
and
jle
fild
fisub
fisub
pop
adc
mul
sub
fcomp
and
cmp
pop
leave
shr
jp
xor
cmp
lea
jae
dec
stc
or
xor
mov
dec
mov
pop
jae
jo
cmp
cmps
(bad)
popf
xchg
push
dec
fisttp
enter
push
(bad)
pop
add
cmc
test
fstp
fisttp
or
inc
xor
neg
or
pop
or
mov
jo
mov
mov
jnp
fnstenv
or
add
scas
mov
jno
cmps
stos
mov
xlat
adc
sub
dec
test
add
sub
in
test
(bad)
pop
adc
xchg
pop
sti
mov
lahf
or
and
out
jo
call
cmp
dec
pop
jae
pop
xchg
outs
mov
cmp
sbb
ds
in
xchg
adc
cmp
(bad)
in
sbb
xchg
hlt
ss
cmp
in
cs
fxch
and
loopne
cmp
cmp
stos
cmp
or
loopne
mov
push
pop
cs
retf
int
fnstcw
mov
xchg
or
les
xchg
cld
in
jbe
fisub
lock
mov
mov
cmps
ficomp
imul
out
idiv
shl
and
fdivrp
ins
cdq
in
int3
leave
(bad)
in
dec
fdivp
stc
retf
test
add
ins
fnstsw
gs
call
jns
enter
cdq
mov
xor
lahf
cmp
push
adc
sbb
mov
inc
icebp
add
sbb
xchg
inc
push
mov
jl
clc
lea
sbb
mov
fisub
fcmovnu
mov
jl
fidivr
in
outs
pushf
and
dec
xor
push
imul
jg
sar
into
cdq
mov
xor
mov
xchg
cwde
mov
jne
ja
rol
adc
(bad)
pop
add
mov
sub
imul
(bad)
lahf
lods
sub
cmc
adc
jne
adc
lock
mov
push
ds
sar
lea
adc
arpl
fstp
or
push
mov
xchg
into
inc
mov
mov
dec
add
movs
and
lock
add
xchg
stos
inc
xor
sbb
mov
mov
xchg
out
add
fsubr
leave
movs
pop
call
les
cmp
fptan
push
mov
(bad)
sahf
pop
inc
cmp
xchg
push
sti
enter
outs
cmp
dec
pop
out
xor
out
dec
sahf
push
push
fild
jle
test
aas
out
sub
adc
ficom
cli
nop
cli
adc
pop
xor
cmp
mov
or
adc
cwde
sub
inc
imul
pop
mov
scas
(bad)
mov
fs
and
cmp
dec
nop
(bad)
icebp
xchg
pop
(bad)
sbb
jmp
dec
lahf
inc
xor
fcom
cmps
xor
jbe
xor
ds
mov
popf
mov
cmp
test
daa
mov
(bad)
cdq
cmp
mov
leave
push
mov
aad
jns
inc
push
xchg
mov
mov
addr16
cmps
js
rol
test
and
mov
pop
push
jae
jge
dec
mov
xor
xchg
inc
neg
hlt
in
jmp
(bad)
jecxz
push
leave
mov
pushf
test
movs
dec
sub
stos
imul
mov
iret
leave
pop
ret
dec
out
or
call
fwait
pop
(bad)
cli
lea
sub
inc
jnp
mov
cmc
rol
fcmovnb
mov
xor
(bad)
stos
xchg
add
stc
out
pushf
mov
shl
and
jp
fild
xchg
sbb
jle
scas
enter
mov
in
sub
push
js
outs
cli
sar
imul
loop
aas
neg
scas
mov
out
shl
sub
call
sets
cmp
xchg
cwde
bound
arpl
sti
add
jge
xor
ja
jo
cmp
or
adc
or
pop
jecxz
sub
mov
pop
dec
cdq
es
inc
push
pop
inc
repz
loop
dec
dec
jmp
inc
pop
cmp
sbb
cwde
(bad)
mov
mov
adc
pop
cli
clc
and
mov
stos
lods
clc
movs
inc
xor
aas
inc
mov
jp
call
data16
sub
ret
icebp
mov
fcomp
sbb
in
retf
movs
adc
push
cmp
mov
(bad)
mov
mov
xchg
add
mov
sub
push
test
xchg
inc
sub
or
mov
xchg
push
pop
xchg
dec
lock
dec
push
sub
mov
pop
stos
sbb
sub
sub
cdq
mov
jmp
dec
daa
loopne
dec
sti
aas
push
cs
stc
stos
and
gs
add
sub
lds
jg
and
movs
adc
pop
jg
sbb
inc
adc
aaa
dec
repz
jg
ja
sub
fisub
addr16
inc
fmul
fs
dec
sub
ret
clc
sti
pushf
loop
mov
cmps
mov
mov
pop
nop
dec
fbld
out
jne
lea
in
jle
adc
inc
cdq
(bad)
cwde
je
cs
mov
daa
std
or
popa
fld
add
call
push
add
sub
sub
mov
into
xor
or
mov
and
add
aaa
(bad)
push
dec
inc
loope
lahf
xchg
popa
ss
mov
xchg
mov
(bad)
(bad)
cdq
mov
push
jmp
fisubr
xor
xchg
mov
test
add
add
add
jns
inc
pop
es
xchg
pop
hlt
lods
cdq
mov
dec
push
inc
cmp
scas
cwde
mov
mov
dec
daa
cmp
mov
pop
push
das
jge
push
pop
sbb
mov
push
cmp
push
call
sub
in
sbb
pop
aaa
(bad)
jns
dec
call
jo
push
dec
push
sbb
xor
mov
xchg
push
or
aas
cmp
neg
push
dec
xor
popf
mov
cmc
push
aam
and
lea
movs
jmp
mov
add
adc
imul
outs
jo
mov
mov
mov
lahf
xor
add
mov
cmps
inc
lea
nop
cmps
mov
test
sbb
shr
lahf
data16
jmp
inc
cli
xor
add
aas
mov
cmp
outs
jmp
rcr
or
in
mov
(bad)
shr
rcl
jne
retf
sbb
shl
add
retf
adc
mov
add
leave
and
jle
mov
test
mov
aad
cmp
cmps
dec
lods
xor
mov
xchg
adc
fs
push
or
cdq
dec
and
inc
lahf
movs
cmps
inc
and
adc
inc
(bad)
in
mov
inc
xchg
push
fsubr
mov
xor
xchg
xchg
fist
push
mov
sub
aam
pop
and
test
pusha
sub
jge
repnz
sub
sti
sub
xor
jl
pop
shl
daa
popa
daa
mov
enter
pop
cmc
in
fisttp
out
dec
pop
mov
add
stc
mov
aas
into
les
push
cli
ds
fld
ror
adc
dec
int
xchg
dec
xlat
jne
dec
fadd
icebp
stos
test
fbstp
push
loopne
(bad)
mov
adc
push
mov
jo
mov
shr
jecxz
inc
cmps
aam
repz
sub
adc
in
and
mov
cmp
sub
and
push
call
mov
test
push
(bad)
push
ret
sub
cmp
clc
jnp
es
adc
fs
aad
jns
and
push
ins
idiv
and
sbb
call
outs
out
push
mov
and
mov
adc
inc
in
mov
jmp
sti
inc
lock
add
ret
fnsave
and
gs
mov
push
les
loopne
or
(bad)
xor
xor
aad
and
adc
int
cmp
jns
stos
outs
mov
fmul
in
sbb
int
jb
in
push
out
aad
cld
pushf
xchg
push
out
outs
std
cmp
cld
das
cmp
xchg
jae
xor
adc
test
pop
add
inc
and
push
out
xchg
jmp
xor
ret
pushf
sbb
jp
add
das
je
neg
mov
jge
fistp
adc
mov
push
ret
retf
jg
push
ret
push
inc
mov
fidiv
out
or
das
test
push
shl
jle
sar
adc
and
mov
test
dec
mov
into
rol
repz
cmp
or
mov
adc
aas
xchg
add
xchg
hlt
mov
push
bound
jmp
or
cld
fadd
nop
mov
adc
loop
ror
push
xor
fs
lds
hlt
cmps
out
into
pop
xchg
cld
inc
loopne
jns
cld
adc
mov
inc
pusha
mov
mov
aas
loop
pop
inc
push
mov
add
pop
sbb
leave
addr16
sbb
mov
or
and
sub
mov
mov
or
or
(bad)
fs
cmp
repz
loopne
sub
mov
lahf
xor
and
xor
es
xchg
cmp
not
mov
inc
inc
fdiv
not
out
ja
es
outs
xchg
or
and
cld
pop
bound
in
int
outs
xchg
mov
xchg
pop
test
ret
cmp
retf
push
neg
je
ds
ins
mov
ins
bswap
mul
push
xor
push
jno
aad
mov
loop
xor
pop
push
or
div
stos
mov
cmp
sub
hlt
dec
retf
mov
call
push
rcl
repnz
mov
adc
push
sbb
retf
cmp
out
cmps
mov
or
out
mov
inc
dec
aaa
fnstenv
mov
jg
cmp
ret
jmp
jnp
inc
call
or
mov
add
(bad)
in
xor
cmp
(bad)
jg
or
loopne
adc
add
mov
out
ret
cli
and
movs
call
pop
push
ror
push
and
ret
stc
sub
inc
arpl
lds
mov
pop
jle
aaa
mov
fldenv
xchg
fsubr
cmp
test
retf
jecxz
adc
mov
repz
mov
icebp
jb
out
call
push
xchg
lea
and
fcmovnbe
leave
test
pusha
pushf
test
add
jmp
pop
daa
or
rol
retf
shr
jle
mov
call
movs
data16
pop
sbb
in
lods
or
cmp
or
jne
cmc
mov
push
out
cmp
xchg
dec
cmps
pop
and
jo
mov
sbb
in
in
mov
inc
fucomi
jno
and
mov
push
mov
xchg
gs
cmp
gs
out
and
test
outs
pop
mov
sub
inc
xor
cmp
sub
inc
addr16
shl
push
pop
jp
ds
(bad)
mov
mov
nop
test
das
test
sti
stc
les
arpl
(bad)
in
inc
push
mov
push
mov
lock
push
aaa
add
or
div
lds
dec
pop
cli
pop
cmp
(bad)
int3
mov
mov
popf
mov
js
mov
or
pop
popa
pop
fstp
scas
push
ss
sbb
adc
aaa
inc
pop
div
push
inc
fwait
daa
inc
jmp
(bad)
jle
mov
pop
push
pop
jb
pop
das
pop
dec
sub
fld
js
stos
inc
mov
mov
(bad)
cmp
cmp
pop
sub
mov
jp
xchg
out
je
mov
sbb
jae
(bad)
mov
fucomip
sbb
push
xchg
clts
cmps
rol
sub
into
push
js
aad
xchg
cwde
sti
push
mov
inc
add
sti
nop
push
xor
idiv
and
lock
int
ds
and
cmp
retf
aam
adc
jb
xor
mov
cmps
push
cwde
aaa
inc
ins
add
pushf
and
xlat
cmp
sbb
loope
sbb
aaa
repnz
scas
and
add
lds
int3
test
scas
(bad)
popa
and
or
adc
rcr
push
sub
ins
jb
outs
or
adc
std
in
cwde
pop
sti
inc
jnp
pop
ja
idiv
add
mov
push
mov
adc
mov
xchg
mov
lock
test
retf
inc
mov
fdivr
lock
icebp
inc
mov
fstp
mov
(bad)
xchg
rcr
mov
push
(bad)
(bad)
call
pop
es
xchg
xor
ss
sahf
ret
repz
adc
cdq
les
mov
in
xchg
add
cmp
xchg
pop
jb
jmp
stc
cmp
jo
xchg
xchg
test
pop
arpl
ficom
sbb
jge
xchg
or
aam
add
add
bound
fisttp
add
aas
jae
adc
fimul
pushf
push
leave
rol
ret
inc
mov
mov
lock
addr16
cmp
(bad)
scas
dec
retf
xor
repnz
pop
cmp
inc
mov
sub
mov
xor
sbb
mov
cmp
xor
fwait
nop
ss
push
dec
in
add
mov
nop
push
xor
outs
sub
scas
cmp
or
lds
fwait
push
(bad)
and
(bad)
lock
fdivr
fwait
adc
cmp
pusha
cli
mov
aam
aaa
ins
out
push
call
xchg
pop
cmp
sub
xlat
sbb
push
shl
cdq
mov
mov
lods
std
mov
cmp
or
and
fstp
push
mov
adc
sub
pop
or
sbb
add
popa
ds
sub
pop
inc
cmc
push
mov
outs
inc
mov
cmp
mov
lock
and
sti
or
lock
(bad)
fbld
push
lods
cmp
mov
je
jge
rcr
dec
jg
aas
ds
fist
sub
and
rol
add
dec
mov
inc
in
dec
nop
cld
xchg
mov
and
adc
add
or
rol
and
sub
cmc
xchg
jb
inc
call
dec
ins
xchg
dec
mov
push
mov
pop
aad
je
mov
cmp
jne
sub
or
enter
ins
sbb
ffree
jl
ret
sub
mov
jb
mov
lods
xlat
stos
shl
leave
fild
mov
ret
sub
ret
loope
ins
inc
out
in
xchg
loop
fisubr
les
inc
out
loop
adc
xor
dec
dec
xchg
(bad)
das
in
or
pop
xchg
rcl
les
sahf
and
adc
test
mov
jnp
cmp
(bad)
jg
jecxz
push
or
out
and
ds
mov
inc
dec
icebp
adc
mov
add
xchg
mov
pop
repnz
push
movs
(bad)
sub
dec
sub
jmp
jns
pop
fwait
cmp
inc
test
and
push
(bad)
mov
(bad)
in
add
inc
movs
in
push
mov
enter
enter
aam
sahf
jmp
cmps
and
push
push
lahf
xor
push
lods
in
aam
push
out
neg
xchg
xchg
movs
mov
inc
pop
rcl
xor
push
fisub
ror
ret
es
call
xchg
int
cld
xchg
sub
push
daa
sub
mov
hlt
push
sub
cmp
cwde
gs
push
adc
mov
push
test
add
jb
xor
dec
mov
sub
fs
dec
jge
jmp
sbb
nop
ins
lahf
jb
mov
test
mov
(bad)
dec
cmp
retf
adc
push
xor
jle
xor
pop
outs
stos
test
fistp
pushf
mov
mov
mov
inc
and
pusha
jecxz
imul
xchg
sub
test
mov
cmps
xlat
test
nop
lods
inc
pop
adc
(bad)
jmp
pop
pop
push
and
jmp
stos
loope
bound
sub
std
sub
adc
dec
(bad)
push
(bad)
and
adc
ds
jbe
mov
jnp
outs
cmp
add
shr
adc
and
sbb
mov
jmp
test
cwde
add
loop
shr
imul
jl
inc
jg
test
xor
and
xor
imul
dec
cmp
and
cmc
mov
test
dec
jnp
loope
jg
cmc
shl
mov
jo
pop
mov
ins
lods
mov
dec
and
jecxz
pop
ret
retf
aaa
jg
int3
cmc
cld
push
fcom
jno
(bad)
test
int3
iret
cs
and
sbb
cwde
hlt
mov
adc
(bad)
adc
adc
sbb
les
mov
add
inc
jp
sub
lea
and
pop
push
push
or
adc
xchg
pusha
mov
or
push
adc
imul
mov
ins
repz
sub
cmp
in
mov
movs
popa
stc
dec
sbb
push
mov
les
fs
gs
ins
loop
imul
mov
adc
add
cmc
pop
sbb
(bad)
pusha
int
mov
(bad)
iret
rsqrtps
jae
add
shl
xchg
xchg
push
xor
or
or
std
retf
cld
(bad)
lahf
(bad)
xor
dec
jmp
(bad)
adc
pop
(bad)
push
shl
mov
pop
push
xchg
scas
rcr
stos
xchg
shr
ja
and
ret
jns
xchg
retf
jg
or
dec
sbb
xor
inc
jnp
mov
xor
xor
pop
xor
xor
sub
jae
xor
dec
push
ins
mov
imul
in
pushf
adc
clc
cmps
dec
xor
pop
jb
imul
sub
test
test
jl
xchg
push
dec
dec
dec
sub
mov
cmp
pop
or
pop
adc
loop
ds
mov
stos
pop
(bad)
adc
add
sub
or
pop
stos
and
mov
cmp
movs
dec
adc
mov
shr
fcomp
sar
sub
dec
shl
dec
cli
pop
adc
or
icebp
hlt
xchg
icebp
and
adc
push
stos
test
jg
mov
lahf
les
loop
icebp
or
arpl
test
lock
xor
stos
adc
dec
in
mov
push
lea
popf
sub
adc
jbe
aad
(bad)
nop
adc
or
xchg
and
mov
adc
jge
scas
mov
add
and
mov
dec
sbb
sar
repnz
lds
xor
pop
mov
push
push
(bad)
gs
call
jge
xchg
imul
dec
out
je
adc
xor
ds
ins
or
(bad)
pop
outs
ror
daa
(bad)
sbb
add
or
ins
cmp
out
xor
sbb
add
std
push
aas
scas
in
xor
fld
or
push
jg
dec
sub
ins
mov
sbb
mov
and
jo
sub
cli
fdiv
jne
aas
in
test
jle
test
adc
xchg
shl
ret
dec
das
es
sar
nop
cli
imul
jb
jne
inc
xor
sahf
fwait
or
mov
icebp
jb
sub
mov
sub
mov
loop
pop
in
aam
mov
mov
pop
enter
outs
enter
std
and
jns
mov
jmp
imul
jno
mov
pusha
mov
add
jo
(bad)
icebp
(bad)
jnp
push
jp
fcom
ins
cmp
hlt
mov
movs
and
(bad)
out
lock
adc
int
hlt
xor
or
cld
(bad)
call
mov
add
xor
cld
inc
push
pop
ret
push
das
sti
enter
xor
mov
adc
inc
loop
dec
lock
cmp
jnp
adc
jae
jne
loop
cmp
xor
jp
jmp
fdivr
adc
sub
aas
mov
and
dec
shl
xlat
dec
ins
lods
outs
xchg
cmp
pop
sbb
and
xor
dec
loop
fs
mov
sahf
inc
xor
mov
faddp
dec
dec
inc
pop
inc
mov
es
addr16
(bad)
pop
or
xchg
outs
jmp
jnp
and
push
repnz
push
pop
scas
stos
std
inc
popf
xchg
fadd
push
std
fist
jg
movs
inc
mov
ficomp
inc
out
mov
pop
shr
xor
fimul
(bad)
push
subps
jo
mov
mov
add
cmc
inc
jns
adc
sbb
out
mov
int
inc
lods
fisttp
dec
movaps
in
mov
icebp
pop
into
dec
push
xor
xchg
sub
retf
inc
xchg
js
push
das
test
xchg
push
cs
lds
jp
push
(bad)
and
sub
pop
es
out
or
mov
idiv
and
xor
cmps
cmp
sbb
hlt
stc
mov
mov
bnd
mov
bound
adc
addr16
and
mov
movs
icebp
xor
inc
mov
pop
adc
mov
loope
fimul
das
dec
retf
ins
add
cld
leave
xchg
pop
lock
sbb
jecxz
sbb
test
push
mov
push
mov
fidiv
rcl
mov
add
jmp
(bad)
shl
jge
sub
cs
sbb
stos
and
dec
push
push
inc
pop
or
xor
mov
mov
jge
int3
fs
cmovo
lock
repnz
push
fs
push
mov
in
ss
jns
daa
dec
ror
neg
dec
shr
xor
cs
xchg
mov
cmps
mov
call
movs
pop
fs
ror
jle
lock
fisub
mov
fsub
stc
stos
xor
mov
push
int
sub
push
enter
leave
daa
rol
jb
in
push
sar
sub
xchg
cmp
in
sub
sbb
out
pop
test
pop
xor
push
aam
pop
movnti
mov
retf
pop
adc
sub
xchg
xor
loop
ins
push
xlat
ins
or
mov
dec
mov
push
mov
scas
or
or
shl
shl
add
js
fst
repz
dec
dec
je
popf
adc
aas
push
lods
add
push
mov
ror
stc
fidiv
push
inc
or
out
and
jle
adc
fild
mov
test
sahf
mov
fldz
inc
pop
loop
mov
xchg
fsub
push
xor
clc
inc
rcl
sub
inc
shr
cmp
push
push
jns
mov
in
imul
dec
jb
mov
jnp
sar
sub
mov
mov
retf
mov
daa
or
cld
jae
out
xor
fisubr
jle
fsub
cli
push
and
lea
jnp
fimul
sbb
loop
jne
dec
outs
je
adc
add
outs
pop
push
or
add
dec
xor
std
push
test
pushf
scas
inc
adc
out
inc
icebp
mov
fisubr
add
xor
sahf
ds
ins
in
(bad)
jle
cmp
adc
push
or
inc
xor
xchg
imul
daa
leave
in
ja
dec
inc
lahf
xor
retf
movs
fsub
ins
lods
dec
out
push
fst
aam
stc
movs
mov
xor
retf
mov
cmp
shl
je
mov
arpl
mov
cmc
mov
cld
ss
jmp
jl
ins
hlt
int
push
iret
xor
xor
jnp
test
push
daa
ret
adc
or
sbb
ss
repz
shl
xchg
lods
cmp
push
add
ds
stc
or
sub
push
mov
sub
ds
lods
mov
dec
mov
xor
rol
movs
sbb
push
call
shl
sub
imul
sub
push
aam
(bad)
jae
dec
sbb
sub
leave
cmp
scas
mov
icebp
daa
(bad)
xchg
lods
(bad)
js
mov
push
pop
lea
add
and
dec
pop
jmp
int
jno
mov
sbb
outs
mov
stos
jbe
mov
pop
sar
retf
add
sbb
imul
jns
int3
stos
retf
push
ss
icebp
test
mov
cmc
sbb
xchg
fist
and
inc
les
mov
adc
mov
dec
imul
mov
test
icebp
cmp
rcr
test
mov
fmul
arpl
dec
pop
dec
mov
add
ja
sub
adc
paddusb
adc
mul
xchg
mov
jl
rol
pop
mov
add
shr
loopne
lea
cmp
ins
adc
(bad)
fidivr
or
jmp
mov
cs
popf
pop
mov
shl
pop
cmps
or
mov
std
retf
stos
inc
jmp
cdq
mov
js
dec
sbb
out
pop
mov
jne
stc
repnz
in
rcl
js
(bad)
imul
imul
inc
dec
rcl
sub
mov
fmul
or
cdq
test
mov
or
nop
jp
and
push
ss
aas
xchg
hlt
bound
sahf
sub
mov
mov
ror
iret
bound
lods
push
xor
(bad)
aad
push
adc
push
clc
sub
test
inc
mov
pop
retf
jne
xor
frstor
pop
xchg
mov
mov
pop
lods
inc
imul
mov
das
pop
cmc
lahf
xor
pop
inc
sub
adc
push
xor
pop
mov
sbb
or
push
xlat
push
push
test
mov
mov
and
mov
outs
inc
cld
adc
jecxz
xor
repnz
rep
retf
or
add
xor
xchg
outs
push
test
pop
jge
and
dec
test
jl
pop
sub
loop
adc
cmp
push
pusha
adc
scas
dec
mov
mov
jbe
pop
mov
rcr
pop
addr16
cmp
sbb
xchg
push
xor
mov
dec
js
sub
les
jo
cld
stc
call
mov
rcl
jle
aaa
push
jle
stmxcsr
test
push
adc
pop
mov
repz
push
jne
mov
mov
mov
inc
mov
pop
cmps
push
rcl
add
(bad)
adc
dec
call
mov
push
jmp
loope
sbb
lods
lods
loop
mov
ss
popf
lock
push
cmps
and
jmp
popa
sbb
inc
lea
enter
in
mov
pop
dec
cmps
push
jns
fnstenv
loope
lods
mov
out
cmp
dec
cmp
xchg
and
xchg
push
cdq
test
test
or
daa
fld
outs
out
lds
and
in
mov
ins
mov
mov
imul
add
inc
xor
adc
sti
(bad)
fldl2e
loope
xor
sub
dec
mov
aam
mov
in
add
push
in
and
ret
inc
pop
std
dec
loop
mov
les
ret
gs
push
add
push
or
mov
dec
pop
out
test
mov
aad
jge
sbb
dec
jl
or
dec
dec
push
dec
das
xlat
sub
pop
xchg
mov
xor
imul
lea
pop
in
xlat
clc
push
or
jne
xor
(bad)
jle
and
sub
(bad)
push
inc
mov
sbb
jp
imul
sar
push
inc
jge
sahf
call
mov
aam
add
aaa
cdq
push
(bad)
arpl
enter
fcomp
xor
cmps
nop
lock
inc
push
popf
cmp
mov
lods
ror
sbb
xor
mov
dec
dec
xchg
clc
cwde
cmp
sbb
in
pop
mov
xor
or
pop
call
mov
mov
rcr
scas
xor
ins
mov
mov
jne
or
ins
pushf
sub
call
cmp
out
cli
sub
mul
sar
arpl
push
ror
mov
sbb
fild
adc
pushf
out
mov
mov
jp
pop
rol
and
cmps
cmc
or
sub
sbb
mov
cli
bound
rol
outs
sbb
mov
jecxz
mov
aaa
jo
jmp
pop
mov
and
sbb
jae
xor
shl
jmp
imul
int3
lds
mov
mov
adc
(bad)
call
cld
pop
push
inc
pop
cmps
sbb
jp
shl
into
repnz
jp
mov
xchg
repz
hlt
mov
fwait
mov
mov
fst
aas
mov
int
sbb
int
es
dec
or
sbb
(bad)
loop
add
bound
dec
aad
jmp
lods
push
sbb
xchg
jle
in
scas
movs
mov
fidiv
jmp
or
call
ins
pop
mov
jmp
int
shl
add
inc
lock
(bad)
and
leave
push
(bad)
sbb
push
push
xor
pushf
pop
gs
loope
and
call
leave
scas
retf
(bad)
retf
sbb
mov
mov
bound
xor
out
int3
fdiv
dec
imul
ret
pop
jo
in
(bad)
jle
dec
push
aam
stos
xchg
mov
mov
fld
shl
add
add
pushf
iret
push
cmp
xchg
scas
lods
lahf
add
in
scas
mov
cmp
cmp
lds
pop
sub
cwde
loopne
and
cld
jo
and
retf
pop
clc
push
icebp
in
inc
in
je
repnz
cmps
cmp
jno
jns
or
popf
mov
loope
mov
pop
das
imul
and
xor
repz
push
sub
mov
fadd
ror
mov
mov
int
add
idiv
dec
mov
pop
push
in
cwde
lds
test
dec
pop
xor
(bad)
dec
scas
mov
pop
fbstp
and
inc
and
aam
das
std
cli
sti
push
add
(bad)
pop
push
xchg
ja
sbb
add
pop
(bad)
xchg
pop
mov
in
data16
fmul
(bad)
pause
push
mov
mov
popa
sbb
and
jg
pushf
mov
mov
cs
clc
push
mov
mov
push
loopne
dec
(bad)
sub
out
inc
int3
outs
mov
(bad)
pop
cmp
outs
cmp
fcom
push
ret
add
inc
outs
jae
mov
pop
adc
scas
enter
add
sti
jl
sahf
fcom
xchg
sbb
sub
outs
cmps
aaa
sub
add
inc
hlt
adc
call
mov
mov
aas
xor
daa
sub
push
xchg
iret
jno
xchg
sub
pop
mov
lock
cmps
scas
mov
mov
retf
jae
push
sub
jecxz
in
test
movs
cmps
jmp
aad
xor
mov
(bad)
mov
out
push
stos
aad
pop
lds
adc
pop
repz
jl
leave
(bad)
fld
mov
rcr
outs
inc
test
das
imul
sbb
mov
pop
es
push
inc
das
cmp
mov
cwde
inc
xor
adc
mov
and
xor
fwait
outs
and
or
(bad)
pop
and
lea
jb
inc
jnp
cmp
mov
sbb
add
inc
fs
push
cmp
cmp
sub
popa
in
jo
cmps
pop
jmp
mov
(bad)
loop
push
or
mov
(bad)
fdiv
(bad)
cld
loope
icebp
clc
push
repnz
xor
add
mov
cmp
or
adc
stc
loope
mov
out
jno
shl
inc
cs
add
adc
movs
cmp
mov
ins
adc
sub
sub
sub
out
loope
mov
adc
sbb
int3
push
add
inc
push
add
test
sbb
or
inc
aas
int
add
cld
data16
sub
dec
sbb
lds
push
int3
aad
mov
mov
cld
sti
(bad)
jmp
add
cmps
(bad)
gs
(bad)
(bad)
push
and
int
fidivr
std
fadd
lods
cmp
loope
jle
mov
xchg
iret
mov
mov
shr
jmp
ja
vpunpckldq
cli
mov
scas
das
dec
cmp
mov
xchg
inc
mov
in
mov
push
push
xor
xchg
mov
fdiv
clc
adc
(bad)
dec
data16
lahf
ret
cdq
retf
jle
aam
setle
div
mov
adc
mov
dec
movs
pop
iret
cmp
addr16
cmp
jp
jmp
or
push
imul
lea
and
and
jo
push
pusha
jns
inc
fsubr
xchg
je
xchg
jecxz
adc
xlat
xchg
push
xchg
jg
std
call
add
imul
push
loope
push
push
out
pop
out
xor
sub
add
xchg
dec
hlt
int
pusha
push
pop
inc
cmovl
mov
dec
ret
fwait
xchg
dec
jl
pop
nop
stos
mov
repz
mov
jb
inc
add
dec
mov
dec
and
sahf
or
jns
sbb
mov
das
jns
or
jmp
adc
and
adc
mov
ins
iret
int
sbb
or
cmp
pop
in
mov
jo
je
sbb
aaa
add
fist
sub
cs
movs
stos
pop
lahf
push
out
and
mov
les
jmp
out
dec
jg
or
jmp
ret
ja
push
shl
shr
mov
lds
loope
dec
out
pop
fld
xor
sbb
push
inc
jl
sub
jecxz
cmp
mov
sbb
(bad)
(bad)
popf
jo
mov
jl
sbb
imul
test
mov
scas
xchg
mov
movs
inc
ret
sub
dec
mov
and
popa
ss
mov
mov
xor
xchg
movs
xchg
ss
push
popf
push
inc
pop
int
cmps
jae
fimul
mov
xchg
mov
ficomp
adc
rcl
xchg
jbe
cmp
pop
leave
in
sbb
ror
ja
ret
daa
test
xor
mov
mov
jl
inc
mov
mov
fdiv
and
inc
jns
add
in
and
pop
into
test
inc
mov
sub
xor
mov
cmps
adc
push
add
cmp
xchg
in
stos
mov
dec
cmp
fidiv
mov
jne
mov
leave
std
hlt
or
cld
cdq
jp
and
xchg
dec
mov
test
xor
xor
xor
and
mov
inc
sbb
hlt
and
inc
addr16
or
pop
fiadd
adc
adc
scas
mov
pusha
inc
jmp
das
dec
dec
sbb
sar
dec
xor
int3
cs
inc
cmp
(bad)
cmp
(bad)
js
push
psubw
repnz
jmp
sti
repz
mov
cmp
test
pop
pop
adc
push
dec
mov
retf
test
out
clc
mov
outs
cmc
adc
jmp
xor
push
cdq
test
ja
cmp
int3
xchg
cld
neg
iret
hlt
imul
push
and
cmp
clc
mov
jl
pop
adc
xor
cdq
sbb
jne
lgs
jmp
mov
rcr
jne
mov
jbe
gs
test
add
adc
loop
hlt
scas
push
loop
arpl
retf
dec
push
ficomp
or
retf
add
xchg
xchg
mov
pop
pop
in
mov
in
ins
dec
mov
out
movs
ins
stc
pop
arpl
add
int3
jg
cmp
adc
push
int3
adc
cmc
(bad)
dec
mov
sti
imul
lds
push
pop
leave
out
clc
popa
popa
sub
jge
inc
(bad)
clc
and
mov
mov
icebp
xchg
stos
inc
push
pusha
inc
pop
cmp
scas
jle
retf
test
test
sbb
in
in
and
shr
inc
sbb
clc
retf
inc
push
inc
sbb
retf
stc
leave
xor
push
xor
xchg
push
and
fcmovnu
cmp
mov
inc
cmp
neg
jae
pop
pop
mov
mov
jns
jb
push
mov
outs
mov
or
xchg
mov
dec
ins
push
stos
inc
xchg
or
sbb
push
jno
lock
pop
out
mov
inc
mov
pusha
push
int
xchg
dec
mov
cmps
mov
mov
sub
pusha
test
jl
dec
sahf
jae
in
pop
retf
pop
pop
jae
in
inc
xor
or
sub
sbb
shr
mov
lods
cmp
jo
cmps
mov
gs
xchg
mov
aam
hlt
sub
adc
call
arpl
(bad)
mov
rcl
xchg
jns
fdiv
scas
jns
loop
cdq
mov
push
scas
mov
aad
inc
xlat
mov
stc
loope
stos
pop
mov
aam
jl
ss
test
mov
jecxz
imul
add
and
xor
cmps
daa
(bad)
push
into
aam
cld
(bad)
outs
push
fs
mov
cdq
push
jb
mov
mov
push
xchg
out
add
or
inc
retf
dec
icebp
into
push
ret
cmp
xchg
std
aas
pop
sub
shl
push
push
jp
loope
or
add
jo
imul
clc
fdiv
inc
jle
push
push
inc
mov
das
icebp
xchg
xchg
adc
gs
aad
ds
fidivr
loope
fsub
(bad)
jl
push
push
mov
ficomp
dec
xor
aas
ret
xchg
adc
add
sbb
or
inc
dec
pop
and
scas
movsx
repnz
mov
lods
das
fmul
adc
(bad)
arpl
movs
mov
into
add
fcomp
push
stos
mov
mov
gs
jg
push
jmp
mov
cmp
cmc
(bad)
aam
mov
aam
je
fisttp
cmp
and
test
mov
jbe
vdivss
std
pop
int3
jb
pop
add
ror
mov
xchg
sub
sub
fwait
pop
push
loopne
mov
call
push
mov
or
das
cmps
xchg
sub
cmp
mov
dec
int
pop
dec
mov
push
dec
mov
adc
or
in
adc
pop
icebp
lods
cmp
std
movs
sub
retf
enter
popf
cmps
dec
jbe
ud1
addr16
lds
inc
shr
jae
aam
cmp
ret
mov
xor
mov
mov
leave
xchg
out
mov
aad
dec
mov
mul
daa
aam
iret
mov
mov
add
jbe
sti
sub
outs
(bad)
xchg
cmp
call
repz
or
sbb
or
inc
stos
xor
cmp
cmc
sbb
sbb
xor
add
mov
jae
aad
mov
jbe
mul
pop
mov
stos
cmp
mov
pop
fld
fisttp
or
je
test
cmp
xor
ror
mov
outs
out
jg
movs
or
std
or
pushf
sahf
std
jbe
push
sub
in
mov
push
fidivr
sub
mov
call
mov
add
lods
mov
out
cli
imul
in
push
sub
daa
push
hlt
xchg
cmp
aas
jns
mov
es
or
in
adc
push
mov
out
rcl
xor
inc
std
xchg
call
xor
jl
lahf
stos
mov
scas
call
mov
mov
(bad)
adc
add
adc
mov
inc
fldenv
call
les
mov
popa
retf
jg
dec
or
sbb
retf
and
mov
test
mov
mov
mov
sub
jnp
not
push
cmp
sub
add
aad
ss
jb
jecxz
inc
addr16
popf
cmp
push
cli
cmp
sbb
fild
aaa
aas
shl
retf
mov
mov
(bad)
test
aad
ret
dec
adc
sti
dec
cmp
jl
jmp
mov
mov
scas
push
push
and
inc
outs
sub
pop
jl
jmp
mov
data16
and
into
sti
xor
fist
xchg
or
xor
imul
push
in
(bad)
jecxz
inc
jmp
repz
mov
imul
xor
dec
sub
sti
xchg
mov
rol
repnz
in
push
fnstcw
leave
pop
and
imul
jo
loop
out
aaa
aam
fs
jge
scas
pop
sub
pusha
sbb
daa
sbb
repz
out
dec
push
psubb
jg
sbb
cld
jno
mov
jno
sbb
xchg
mov
mov
leave
add
add
loopne
jecxz
std
mov
js
cmp
rcr
push
(bad)
cmp
out
bound
int3
or
dec
jp
inc
add
(bad)
cli
cld
sbb
fwait
sub
js
xchg
mov
ss
pop
mov
push
add
pop
pop
and
mov
out
cli
cmc
shr
xor
dec
rcl
xchg
add
cmp
jne
arpl
xor
sbb
out
push
add
into
jae
jmp
dec
aad
arpl
add
pop
test
jae
jnp
fadd
adc
ins
push
push
xchg
pop
arpl
rcl
sub
adc
mov
xor
mov
inc
mov
mov
out
push
dec
jge
adc
or
out
sub
pop
lods
cmp
jecxz
mov
mov
out
and
test
and
dec
sub
mov
std
mov
jp
sbb
(bad)
out
sbb
stos
push
outs
mov
add
mov
xor
out
mov
jmp
dec
add
xchg
add
jge
fldcw
dec
cmp
adc
mov
sub
out
cli
js
add
mov
xchg
cmp
rcl
mov
add
cmp
sub
mov
mov
and
outs
scas
pushf
add
cmp
mov
call
dec
test
std
retf
daa
stos
test
inc
sub
sub
xchg
dec
mov
movs
in
mov
mov
add
xchg
mov
add
xchg
test
push
sahf
push
dec
jp
mov
lea
pusha
cmps
nop
xor
inc
adc
xor
gs
imul
(bad)
cmp
sti
xor
jge
jg
cwde
stos
cmp
pop
cli
inc
iret
cli
add
sbb
mov
jmp
mov
jne
mov
sar
fist
mov
popf
iret
xor
scas
ret
cmc
dec
pop
mov
shl
out
adc
pop
jg
movs
int3
lods
adc
rol
or
add
cmps
data16
dec
pop
fwait
into
leave
(bad)
push
nop
imul
iret
pop
imul
xchg
ins
add
sbb
call
(bad)
xor
loopne
out
sets
neg
xchg
rcr
addr16
xor
test
mov
mov
pop
or
scas
mov
xchg
cmps
jle
retf
ins
ds
pop
mov
fs
ins
cmp
mov
mov
test
or
push
repz
push
pop
push
aas
cmp
sbb
mov
das
repz
pop
rcr
jp
mov
clc
imul
xchg
std
movs
mov
and
mov
push
sub
mov
mov
shl
or
jle
retf
mov
adc
push
sbb
pop
mov
dec
pop
cwde
mov
dec
or
mov
pop
mov
or
lds
cmc
sar
push
outs
cmp
mov
jg
xchg
sub
xor
push
adc
in
cmp
stos
push
sbb
jae
shl
add
(bad)
hlt
or
test
adc
jle
mov
std
cmp
ss
dec
inc
xchg
add
jns
jmp
movs
loop
mov
add
xchg
shr
(bad)
imul
test
mul
mov
cmc
pop
mov
out
(bad)
int
nop
xchg
cmp
add
and
push
lock
fmul
and
xchg
imul
cmp
pop
aaa
jmp
push
or
cmp
test
push
cli
dec
or
test
adc
arpl
cmp
cmp
lds
and
neg
cmp
mov
das
pushf
jno
imul
fcom
xor
cli
sub
ja
movs
pavgb
push
adc
jge
je
mov
cmp
iret
jns
inc
hlt
fild
pop
adc
loope
add
inc
push
sar
add
aam
iret
pop
stc
push
das
and
daa
adc
arpl
xor
ror
push
iret
into
int3
mov
pop
push
add
hlt
repnz
add
(bad)
inc
or
hlt
pop
movs
(bad)
in
push
aam
and
sub
fwait
xchg
adc
cli
push
mov
xchg
std
push
cdq
jmp
add
add
mov
push
(bad)
add
pop
sub
test
fstp
into
(bad)
cli
dec
outs
test
push
push
mov
movs
mov
xchg
retf
je
or
or
lods
dec
or
adc
(bad)
fld
fucomp
mov
call
or
enter
sbb
sbb
test
ja
out
jge
cmps
enter
stos
ret
ror
xchg
bound
int
push
sub
sub
cbw
rcr
cmp
cmp
push
into
movs
pushf
stos
cmp
cs
push
add
sub
mov
pop
ins
xor
or
dec
cmp
or
mov
sub
ficomp
popa
and
and
mov
ret
jmp
out
loope
bnd
test
xor
xchg
cmps
data16
pusha
mov
mov
sub
or
mov
rcl
test
sbb
jl
mov
or
cmps
inc
mov
add
(bad)
lock
push
xor
les
pop
xor
ins
movs
mov
sbb
pop
push
and
sub
mov
popa
cmp
fs
jb
repz
and
mov
mov
sar
jbe
xor
mov
and
adc
jecxz
mov
or
ror
cli
mov
out
adc
cmp
mov
xor
call
mov
mov
(bad)
into
mov
repnz
or
jne
xor
and
or
fidivr
mov
pop
dec
xor
movs
adc
inc
or
xor
pop
lahf
and
adc
loop
xor
jecxz
xor
into
mov
pop
loope
cmc
lahf
cmps
xor
(bad)
mov
js
xchg
xchg
ss
and
mov
jle
fst
sub
loopne
je
sbb
mov
pushf
jno
xchg
ds
(bad)
out
int
dec
sub
cmp
retf
nop
jg
jbe
sub
inc
xlat
jnp
mov
sub
mov
mov
sbb
add
pop
mov
scas
xchg
cmp
test
push
cmp
xchg
sbb
sar
(bad)
lock
jae
fnstsw
in
pop
mov
push
sahf
push
push
push
push
mov
fnstcw
sar
sub
add
inc
cmp
mov
mov
sbb
add
xor
stos
xchg
pop
inc
pop
cdq
lods
pop
rcr
sub
or
(bad)
call
mov
rcl
or
jg
xchg
sub
mov
add
out
int
add
or
adc
adc
xchg
stos
mov
add
add
sbb
inc
push
xchg
inc
ss
clc
test
jo
adc
iret
push
xor
in
call
sbb
rcr
cdq
sbb
xor
xchg
inc
dec
sbb
jp
adc
mov
mov
popf
mov
dec
int
fcom
fnsave
sbb
jo
or
xchg
js
jo
iret
sbb
sbb
fcom
inc
loop
mov
dec
(bad)
xlat
nop
loope
les
jo
push
sbb
inc
popf
and
mov
shl
cdq
xchg
cld
push
jae
sub
mov
jo
sub
pop
xor
hlt
popa
push
cld
jne
xor
cmp
add
xchg
mov
push
add
xor
sub
and
cmps
rcl
mov
movs
vmaxpd
loope
imul
push
dec
fisttp
lock
mov
push
in
fwait
or
jmp
pop
nop
mov
sbb
jmp
pop
imul
clc
mov
mov
ror
mov
sub
jg
pop
mov
mov
mov
mov
movs
fild
jmp
sub
call
dec
jl
ins
popf
add
inc
imul
stos
ja
mov
push
ds
imul
je
jmp
jmp
jbe
push
gs
xor
mul
push
push
inc
xchg
loope
jmp
cmp
movs
test
inc
mov
inc
lea
inc
add
jl
sbb
(bad)
repz
shl
imul
addr16
ds
push
sub
shr
mov
jmp
ins
push
stc
push
push
adc
jg
rcr
pop
icebp
dec
stos
test
adc
mov
repz
sub
push
dec
mov
movs
pop
jne
jl
cmp
cmp
sub
dec
les
je
xor
jnp
mov
jo
iret
jl
(bad)
cmps
icebp
xor
push
shl
rcl
das
sub
(bad)
movs
mov
mov
fisub
stos
pop
pusha
scas
jmp
dec
lahf
mov
and
aad
ds
jl
leave
iret
mov
dec
jecxz
outs
jmp
in
inc
xchg
xor
push
adc
inc
repnz
scas
jb
repnz
jl
fld
mov
xor
pushf
pop
sbb
cmps
inc
xchg
jecxz
and
mov
cdq
or
ret
into
adc
dec
mov
ds
in
mov
pop
mov
sub
inc
pusha
jmp
(bad)
fimul
xchg
cmp
nop
push
fmulp
mov
adc
ror
xor
or
inc
push
xor
jmp
dec
mov
repz
sub
(bad)
sub
mov
data16
addr16
repz
push
leave
mov
push
ret
popa
retf
pop
push
xchg
fstp
fmul
dec
sub
xchg
inc
push
sub
in
ret
aaa
out
dec
fisubr
and
out
mov
dec
xor
sbb
mov
pop
inc
icebp
push
xor
cmp
cld
ss
dec
or
ins
out
adc
add
mov
add
aaa
pop
mov
mov
lahf
or
aam
outs
rcl
jns
loope
icebp
cmp
stos
(bad)
jno
or
leave
test
int3
retf
push
pop
pop
cwde
call
xchg
shl
push
leave
dec
sub
adc
push
ret
in
lods
in
or
jecxz
(bad)
fmul
xchg
and
inc
sbb
xor
mov
mov
ins
ss
ins
push
or
lahf
ins
xor
enter
fld
pop
adc
push
es
cmp
arpl
jmp
arpl
loopne
push
jl
adc
push
retf
dec
cmp
mov
cwde
pop
jnp
shl
ror
adc
rcl
jmp
cmp
dec
xchg
clc
jle
pusha
sbb
outs
out
xor
xchg
int
jp
mov
mov
mov
adc
add
sub
inc
pop
idiv
xchg
push
push
movs
pop
ins
popf
and
dec
add
dec
sub
scas
push
and
mov
imul
mov
mov
xor
fld
ds
mov
mov
btr
mov
fnsave
xor
or
inc
int3
push
mov
stos
call
popa
leave
mov
mov
push
xchg
imul
cwde
jecxz
mov
push
test
in
inc
push
mov
mov
push
shr
(bad)
js
jmp
fld1
sub
dec
(bad)
test
arpl
push
mul
mov
mov
cmp
mov
push
dec
pop
dec
loop
push
jl
add
fidivr
xor
inc
test
(bad)
cmp
shl
daa
retf
pop
push
arpl
jg
loopne
fnstenv
test
sub
cmc
mov
xor
out
pop
test
ins
je
push
inc
or
mov
xor
jmp
pop
push
mov
fistp
(bad)
lock
nop
(bad)
xor
jbe
test
enter
repz
push
(bad)
mov
xchg
mov
cmp
pop
scas
and
jmp
movs
mov
inc
inc
push
pop
and
or
push
jae
inc
or
and
(bad)
mov
ret
or
add
pop
sbb
imul
out
pop
sub
inc
rep
jae
ins
fld
ret
jne
sbb
add
pushf
gs
sbb
cmp
leave
daa
sbb
inc
adc
inc
push
hlt
fist
fcom
stc
inc
ret
adc
iret
xchg
fst
rol
or
or
(bad)
jmp
test
push
sbb
mov
push
mov
cmp
repz
mov
(bad)
ins
jbe
fisttp
mov
pusha
ja
fisub
bound
retf
cmp
sbb
shl
retf
inc
xchg
popa
or
push
add
dec
imul
and
cmp
in
sar
mov
xor
pop
or
(bad)
mov
push
sub
mov
dec
or
repnz
ret
rol
pop
pop
les
sbb
xor
pop
xchg
pop
mov
inc
lahf
mul
push
(bad)
pop
jecxz
lock
push
adc
xor
ja
ror
push
cli
jecxz
arpl
jns
pop
in
push
add
aaa
dec
xchg
mov
(bad)
(bad)
and
(bad)
repz
xor
or
pop
fld
cmp
push
pop
cmp
pop
push
out
mov
std
into
inc
movs
cmp
inc
add
arpl
pushf
mov
ins
ja
add
cmp
retf
out
fldenv
sahf
mov
out
loope
pop
xchg
mov
(bad)
adc
popf
es
jae
iret
repnz
add
ficom
cmp
mov
xchg
leave
stos
add
push
mov
xor
call
pop
sub
or
fdivr
or
fwait
lds
scas
cdq
push
aad
xchg
mov
mov
jmp
loop
adc
or
int3
dec
dec
jmp
aas
repz
cli
pop
pop
cmc
dec
in
add
aas
adc
out
xchg
push
int
push
adc
jnp
outs
dec
push
dec
fsub
(bad)
call
out
add
or
cmps
out
fdiv
je
scas
sbb
lods
and
mov
(bad)
jns
imul
ins
inc
int3
xchg
addr16
or
pop
cmp
mov
mov
xchg
or
jno
icebp
jmp
cmp
mov
(bad)
jno
(bad)
repnz
std
jbe
js
addr16
pop
sub
pop
aaa
or
push
xor
cmp
mov
or
inc
jae
lods
and
jns
mov
inc
ins
fst
sub
cmps
inc
dec
and
mov
stos
and
cmp
ror
lahf
inc
mov
dec
cmp
ins
lock
cmp
adc
and
rcl
pop
pop
or
out
or
sub
or
xchg
aad
sub
xchg
and
and
sub
jmp
cs
push
mov
scas
jmp
push
imul
add
inc
jmp
cmp
stos
rol
jmp
hlt
push
in
cs
int3
jmp
mov
arpl
cmp
sbb
rol
aam
and
ja
ss
ds
sbb
push
leave
xor
arpl
stc
adc
sub
hlt
or
sbb
out
and
neg
adc
add
add
dec
fnstcw
xor
sahf
mov
jmp
pop
ja
sub
mov
mov
mov
cld
cmp
jbe
popf
dec
mov
sub
push
(bad)
in
aam
(bad)
pop
shr
nop
fld
cmp
sub
fcom
xor
pop
ret
adc
sbb
inc
jge
adc
je
or
push
push
or
pop
dec
ret
or
mov
add
inc
pop
movs
call
sub
imul
pop
pop
add
call
fstp
sar
test
in
sbb
enter
mov
push
sub
mov
mov
pop
jb
sbb
pop
jle
inc
dec
lods
adc
outs
and
mov
aad
sbb
xor
push
adc
loopne
xor
dec
push
pop
and
stos
(bad)
iret
cmp
jae
popf
jmp
sbb
sub
add
push
mov
fisttp
cmp
rcr
xchg
retf
cmp
or
inc
and
push
lahf
lahf
add
push
dec
and
jmp
sbb
mov
jno
adc
sar
fimul
pushw
(bad)
pop
movs
dec
dec
call
mov
nop
retf
(bad)
xchg
retf
sbb
mov
ret
mov
push
inc
xchg
imul
sbb
inc
stos
pop
fiadd
jnp
test
mov
jle
or
shl
mov
jne
sahf
push
rcl
add
or
movs
pop
or
jns
mov
(bad)
mov
lds
imul
and
enter
pusha
popf
and
dec
add
leave
clc
mov
ret
movs
enter
(bad)
push
and
sbb
dec
shl
push
out
mov
std
push
mov
adc
arpl
popf
xor
dec
dec
xchg
or
loop
arpl
jbe
pusha
xchg
(bad)
aaa
or
add
nop
mov
xlat
popa
jp
cmp
dec
out
sar
push
(bad)
fwait
repnz
mov
push
imul
aas
push
jge
retf
fisubr
jno
ds
test
aam
mul
mov
sub
cs
mov
add
int3
leave
inc
and
pop
fisttp
xchg
pop
add
add
xlat
dec
xlat
mov
loope
or
adc
jmp
shl
dec
mov
and
and
mov
dec
pop
mov
and
loope
add
fs
outs
dec
jb
in
add
cmps
sub
mov
mov
xchg
loop
cmp
pusha
inc
mov
test
cmp
fidiv
jl
shl
push
mov
xchg
sub
mov
mov
jne
repz
dec
and
(bad)
cli
loop
je
into
xchg
dec
push
push
push
mov
loop
(bad)
jo
test
dec
repz
push
shl
xchg
loope
movs
jge
sub
jl
adc
dec
xchg
lock
mov
bound
retf
cmp
dec
inc
dec
pop
pushfw
ret
fwait
scas
mov
xchg
dec
mov
ja
inc
dec
or
(bad)
fstp
sti
lds
movs
cmp
dec
inc
dec
das
dec
push
xlat
add
aad
dec
mov
jbe
jl
sbb
je
cmp
pusha
fist
jle
out
and
inc
retf
neg
ret
fmul
jmp
sub
shl
sbb
mov
push
xlat
pop
fld
loopne
push
mov
mov
sbb
mov
cmp
adc
mov
xor
add
mov
out
test
out
sar
stos
cld
or
fnstsw
or
mov
sub
pop
jbe
xchg
push
mov
or
hlt
sbb
and
mov
paddsw
xor
fld
out
xlat
shl
or
xor
dec
in
shr
or
dec
arpl
push
inc
dec
(bad)
out
jb
push
add
enter
push
(bad)
lods
jbe
mov
mov
cmp
sub
(bad)
push
mov
or
sub
outs
je
or
out
push
into
mov
jmp
xor
in
mov
xchg
jne
xlat
pop
mov
or
mov
push
cli
pop
stc
xor
jle
fmulp
push
or
data16
xchg
inc
jnp
out
xchg
mov
rol
popf
movs
fiadd
std
enter
inc
stos
stos
ret
(bad)
cmc
jo
(bad)
int3
outs
adc
lods
pop
mov
sbb
sahf
xor
push
push
stc
xchg
jmp
test
xor
loop
(bad)
fisub
imul
xchg
sub
fdivrp
or
mov
retf
sub
aas
pop
xchg
leave
aad
inc
add
std
mov
(bad)
(bad)
test
je
mov
push
and
or
retf
dec
sub
call
inc
jp
test
ret
mov
cmps
fwait
cdq
aas
or
push
out
sub
stos
in
repz
mov
sbb
data16
dec
jbe
cmps
ret
aas
movs
jnp
ficomp
jo
xchg
popa
pushf
pop
int3
test
hlt
sti
loop
ins
popf
aaa
dec
sbb
pop
scas
sti
popa
ss
movs
aaa
int3
das
pusha
xlat
dec
(bad)
jp
(bad)
repz
pop
retf
(bad)
test
mov
jno
jge
push
cwde
xlat
inc
outs
fnstenv
sub
pop
adc
in
push
push
push
adc
arpl
pop
inc
hlt
push
jno
in
enter
or
outs
mov
xor
lock
dec
or
xchg
jl
in
jge
ret
xor
mov
lea
clc
js
fsub
aad
jp
pop
pop
sar
daa
cmps
xchg
and
sti
sub
retf
das
test
add
(bad)
int3
imul
add
jge
push
jb
sbb
and
dec
hlt
xor
loope
aaa
and
add
test
push
pop
fcom
dec
jne
or
xor
fist
aad
lahf
pop
and
and
inc
inc
fcom
jae
fwait
push
jbe
cmp
imul
sbb
or
mov
mov
xchg
sbb
in
adc
dec
mov
sbb
loop
dec
cmp
pop
aad
mov
fcomi
push
mov
mov
and
sub
sbb
xchg
sub
mov
mov
xor
call
les
and
and
cmp
repz
in
enter
stos
test
xchg
jecxz
lods
adc
jmp
(bad)
jno
outs
lahf
leave
sbb
xchg
in
push
(bad)
adc
repz
xchg
xchg
outs
inc
stc
push
stos
adc
fsubr
mov
aam
nop
mov
jmp
mov
fsubr
cmp
lods
push
and
inc
mul
(bad)
sbb
dec
inc
sub
adc
inc
mov
aam
test
mov
fcomp
pop
adc
inc
xchg
ja
pop
xor
das
sub
xor
dec
xchg
gs
or
call
pop
cs
mov
sub
inc
out
cs
cmp
xchg
adc
sub
cmp
(bad)
dec
or
push
or
mul
sbb
add
(bad)
(bad)
sbb
jge
iret
fnstenv
dec
inc
dec
int3
pushf
js
add
sahf
ins
fwait
push
sahf
sub
inc
test
pusha
mov
push
or
fld
xchg
sbb
popf
bound
xlat
fsub
xchg
xchg
(bad)
xor
out
out
movs
retf
inc
mov
adc
push
xchg
(bad)
(bad)
outs
bound
out
mov
dec
and
push
fidiv
movs
xor
sbb
aas
dec
ret
or
and
outs
ret
(bad)
sti
movs
mov
popf
jl
stc
push
int
add
inc
mov
xchg
scas
sub
cmc
adc
sub
out
adc
addr16
in
aaa
out
or
and
lock
pushf
(bad)
xchg
or
int3
stos
sbb
or
push
lods
inc
or
inc
ret
mov
sub
fldcw
inc
stos
aas
xchg
xor
cmps
test
pop
pusha
sbb
mov
test
mov
call
xor
sti
jo
loope
dec
xchg
inc
enter
xchg
stc
sub
test
repz
dec
loop
in
into
xchg
call
sub
ja
ja
dec
fadd
sbb
sub
stos
mov
loopne
dec
xchg
pop
ss
ja
push
(bad)
icebp
sbb
leave
lock
mov
push
mov
and
out
fsub
add
push
jno
std
ror
push
mov
test
mov
aad
jmp
ss
sbb
ss
test
dec
mov
or
int3
xchg
(bad)
xchg
sete
or
and
xor
shr
les
in
in
lock
mov
xchg
pop
idiv
mov
cmps
movs
stos
mov
mov
pop
add
stos
and
pop
mov
mov
jle
out
popf
dec
rcr
sbb
bound
mov
mov
mov
and
inc
jbe
stos
or
out
mov
jae
push
cmp
jbe
and
cmc
xchg
call
jmp
in
sub
(bad)
push
lods
cdq
jo
and
pop
sar
adc
sub
repz
and
test
movs
mov
outs
daa
add
lahf
ror
xor
ss
xchg
sbb
jb
adc
retf
retf
je
jl
pop
jnp
out
and
cmp
sahf
sahf
mov
out
lods
test
shl
xchg
cmp
sub
test
mov
inc
cld
out
or
rcl
and
inc
test
(bad)
xor
xchg
arpl
jl
rcr
cmp
and
mov
and
mov
stos
fsubr
sbb
lods
(bad)
aad
push
jl
and
stc
cmp
inc
fdivp
adc
push
jne
lods
inc
cmp
rcr
or
popa
cmp
xchg
dec
inc
cmps
rcl
and
fdiv
jg
xchg
rol
popf
mov
fst
test
pop
test
mov
popf
stos
pop
cmp
pop
gs
inc
in
iret
rol
mov
movs
jnp
dec
ror
daa
retf
test
push
retf
cli
sbb
aas
ret
inc
xchg
cmp
(bad)
fsubr
out
xor
loopne
iret
sti
and
cmps
dec
shr
add
jo
xor
push
loopne
sbb
std
fsubr
push
(bad)
fwait
data16
jbe
(bad)
(bad)
ror
and
stos
mov
jmp
scas
jnp
out
or
push
jne
fistp
pushf
rol
jne
rcr
repz
sbb
je
(bad)
out
mov
jge
push
inc
arpl
shl
add
mov
or
xor
lea
xchg
iret
jo
mov
inc
push
push
adc
mov
ins
icebp
dec
mov
call
mov
cmps
dec
push
test
stos
mov
sbb
retf
sahf
jnp
jmp
movs
adc
add
pop
(bad)
test
adc
aad
and
test
mov
push
or
sbb
(bad)
push
pop
cmp
inc
in
ss
out
push
imul
push
nop
fld
and
out
test
and
mov
cld
stc
jmp
out
fwait
es
(bad)
cmp
hlt
sbb
or
mov
add
push
and
(bad)
sbb
lea
ficom
jno
push
xchg
cli
cld
fild
call
xchg
ins
fs
dec
ins
les
stos
ret
out
mov
inc
cmp
gs
mov
addr16
sbb
mov
inc
mov
cmp
scas
mov
fadd
hlt
pop
mov
div
fsub
dec
pusha
leave
and
push
out
outs
sbb
jp
in
and
ret
and
lock
and
test
ja
add
mov
in
test
sbb
jne
fdiv
aaa
inc
in
xor
out
loopne
ins
inc
sub
sar
js
mov
dec
push
scas
xchg
jno
mov
and
push
xchg
xor
push
and
pop
ds
in
mov
sar
in
dec
arpl
mov
xor
inc
xor
pop
push
fist
mov
shr
xchg
sub
js
retf
inc
jg
and
inc
push
nop
cmp
mov
out
stos
cmp
ins
test
add
hlt
nop
fsincos
repnz
lods
ins
hlt
push
int3
test
loope
and
fisttp
rcr
xor
push
sub
push
popf
mov
cmps
jmp
test
pusha
lea
outs
cmp
(bad)
cmp
sahf
push
ins
retf
xlat
push
add
sahf
aas
xchg
cs
aaa
loop
pop
out
test
jmp
cmp
daa
and
mov
pop
popa
ins
sbb
movs
and
cmc
sbb
sar
popa
aad
cli
mov
push
cmp
add
xor
mov
sbb
in
loope
adc
gs
not
cmp
adc
cmp
sub
sub
ret
inc
mov
ficomp
xor
nop
scas
sub
xchg
loope
es
in
jle
fwait
(bad)
ja
jne
stos
add
daa
inc
jge
adc
jmp
mov
mov
inc
stos
jb
test
mov
cld
std
fidivr
mov
retf
clc
outs
adc
adc
loop
out
sub
sbb
pop
xchg
stos
cmc
addr16
out
test
js
enter
ret
ror
xchg
scas
dec
movs
outs
adc
stos
aas
shl
shl
cmps
jmp
icebp
jge
in
cmp
mov
sub
icebp
das
ret
add
sar
test
jae
pop
clc
push
cmp
fwait
push
les
(bad)
enter
sub
mov
mov
(bad)
pushf
arpl
pop
dec
pop
push
nop
push
loop
(bad)
aad
outs
iret
dec
cmc
pushf
or
xchg
cdq
xchg
addr16
dec
jno
dec
pop
ds
xchg
push
fistp
(bad)
pop
or
xchg
enter
ins
xchg
xor
in
pop
xor
std
fldenv
ins
adc
sub
in
ror
gs
rcr
shl
push
xchg
jno
std
push
inc
repz
scas
push
inc
push
or
push
xchg
movs
out
(bad)
ja
push
mov
arpl
js
xor
push
mul
sbb
(bad)
push
push
sub
adc
dec
movs
fild
cld
call
adc
xchg
repnz
pop
fmul
clc
jae
add
xor
fnstsw
(bad)
test
pusha
(bad)
mov
push
add
cwde
xchg
das
add
jmp
es
stc
xlat
mov
mov
inc
hlt
push
sub
push
or
push
xchg
and
jmp
add
xor
gs
les
sub
sub
dec
imul
in
in
arpl
lea
sub
repnz
jb
dec
adc
sbb
pop
add
scas
(bad)
sar
(bad)
fwait
xlat
shr
sub
adc
sbb
or
js
imul
shl
clc
xor
pop
fstp
jecxz
jmp
js
ds
sub
xchg
sbb
jl
addr16
xor
int3
or
inc
mov
dec
scas
fdiv
adc
outs
fbstp
pusha
cmp
mov
jle
bnd
out
fisubr
dec
test
mov
pop
sub
xchg
scas
pop
sar
in
adc
mov
ins
jbe
xchg
mov
ficom
loopne
or
sar
mov
push
pop
and
xchg
mov
sbb
cdq
dec
xchg
ins
test
aad
dec
aas
(bad)
in
fisubr
mov
adc
mov
mov
xor
or
int3
fs
(bad)
dec
icebp
test
mov
push
aad
(bad)
sub
js
push
lock
push
jns
adc
lahf
add
out
scas
lock
push
cmps
hlt
(bad)
adc
mov
mov
mov
rcr
cmp
js
push
vmaxss
out
jne
iret
pop
cwde
dec
push
lea
pusha
sub
ins
jb
sub
xchg
iret
test
push
stos
int
or
test
les
jle
inc
loopne
add
mov
mov
stos
mov
outs
push
movs
xor
adc
xor
into
jp
mov
test
vmovups
inc
xor
aad
fabs
lods
jge
fld
mov
daa
jl
mov
hlt
repnz
jb
test
out
push
and
dec
mov
sub
movs
lods
dec
test
dec
mov
test
push
jno
fiadd
dec
push
pop
mov
popa
int3
cmp
fwait
and
dec
xor
cmc
fsubr
int
arpl
push
xchg
jp
dec
push
in
xor
push
popa
stc
icebp
hlt
add
and
les
push
xchg
aaa
pop
add
xor
cmps
pop
xchg
popw
and
sbb
and
pop
adc
arpl
mov
adc
je
xor
push
rol
sti
ror
xchg
in
in
push
adc
jmp
adc
int3
cmp
sub
jle
cmp
push
das
das
fwait
and
xor
fs
mov
or
sbb
jbe
arpl
cmp
xchg
mov
fwait
inc
inc
push
jo
loope
pop
fs
jl
pop
ror
pop
mov
xchg
cmp
ret
jecxz
dec
push
lea
pop
push
ss
jne
lds
int
cdq
add
mov
push
pushf
inc
push
hlt
pop
xchg
loope
jge
popf
xchg
data16
add
jmp
or
int
sbb
lods
dec
mov
xor
imul
movs
fstp
in
pushw
jecxz
loope
into
repnz
jae
xor
xor
test
in
fndisi(8087
nop
sub
push
aas
sbb
xor
in
cmps
sub
and
xchg
dec
cmp
ins
adc
jp
bound
mov
mov
and
push
add
inc
fst
jae
(bad)
int
xchg
jmp
leave
jge
sbb
mov
jno
call
cs
mov
fs
stc
adc
cwde
or
cmp
sbb
xor
test
neg
out
(bad)
loopne
scas
shl
jbe
loopne
inc
xchg
cli
mov
xor
sbb
ds
mov
jg
push
dec
fild
sbb
shr
mov
sub
jmp
push
mov
loope
dec
mov
pop
fs
jge
cmc
mov
mov
or
sbb
mov
pop
push
inc
(bad)
or
das
daa
jg
inc
loope
and
test
sub
xor
inc
pushf
jae
dec
push
mov
ss
sbb
push
test
pop
enter
ds
sub
push
dec
fcomip
or
push
cmp
pop
jge
mov
adc
rol
cmp
cmp
xor
loop
movs
mov
imul
cwde
mov
add
outs
xchg
or
jne
stos
(bad)
enter
iret
mov
jl
mov
sub
and
push
add
fmul
mov
push
push
inc
in
mov
push
aas
sbb
or
outs
data16
mov
inc
push
xchg
xchg
sbb
repnz
das
inc
movs
and
or
sbb
pusha
test
xor
sbb
je
les
push
mov
shr
jbe
nop
es
mov
test
(bad)
xchg
xor
fisubr
and
mov
nop
jmp
es
fs
cmc
cli
mov
push
cmp
test
mov
cmp
movs
mov
mov
mov
popf
inc
mov
xor
popf
dec
je
inc
test
push
sub
jne
jg
push
jb
loop
ds
sub
pop
add
mov
in
mov
mov
or
push
pop
into
and
cli
int3
xlat
pop
inc
(bad)
dec
mov
in
std
xor
adc
std
out
inc
outs
xor
out
jne
sub
mov
(bad)
push
pop
pop
dec
mov
not
mov
ja
pop
outs
test
xchg
fwait
xchg
xchg
jbe
int3
cmc
ins
pop
outs
pop
mov
jg
stos
rcr
jnp
push
aam
into
dec
jmp
sub
loop
test
add
sbb
icebp
sbb
mov
pushf
iret
icebp
xor
or
call
xor
jl
adc
cmp
dec
enter
push
pop
mov
in
xor
sub
popf
add
js
aas
pop
and
mov
cmc
dec
and
fidiv
xor
adc
jno
mov
ret
lods
stc
test
enter
ror
test
jno
pop
mov
mov
test
and
mov
lods
cmp
pop
jno
xor
fisubr
inc
in
pop
aas
mov
(bad)
mov
push
sbb
sub
cmp
xor
jmp
adc
or
mov
xchg
cmps
and
icebp
pop
or
or
ins
add
jae
or
jg
daa
fs
mov
sub
ja
and
cmps
cmp
call
ss
aad
pusha
mov
sub
lods
xchg
sub
imul
or
retf
jg
vmovss
in
js
and
jp
push
imul
sbb
jns
lahf
(bad)
jo
aad
imul
(bad)
sub
(bad)
mov
mov
xor
fbld
dec
mov
cmp
enter
pusha
movs
xor
mov
adc
popf
adc
mov
mov
lahf
push
out
test
push
xor
leave
fsubr
pushf
jnp
addr16
jo
adc
fidiv
sbb
pop
vmovaps
cli
std
mov
mov
ss
xor
out
lock
mov
dec
or
push
inc
dec
stos
loope
mov
das
or
push
mov
repz
jg
fst
push
mov
pop
jb
or
dec
les
out
fistp
adc
shl
inc
xchg
repz
inc
inc
push
sub
and
mov
outs
ret
repnz
push
fild
mov
mov
or
repz
arpl
test
inc
pop
inc
in
sub
xchg
out
mov
js
ficomp
jb
into
jns
push
cmp
inc
adc
ins
cmp
mov
in
sbb
pop
and
lock
pusha
call
cmp
inc
add
xlat
test
cli
fisttp
in
daa
xchg
aam
adc
sub
sbb
(bad)
in
stos
mov
push
inc
xchg
ins
test
mov
and
retf
mov
aad
fs
inc
sti
mov
nop
and
js
and
out
sbb
and
push
push
add
outs
call
xor
push
or
or
or
jo
(bad)
retf
stc
aas
xor
pop
fidivr
lahf
cli
mov
push
mov
add
sbb
in
aam
xlat
xchg
mov
adc
pop
mov
fdiv
sahf
add
jmp
and
into
pop
call
inc
xor
cmp
mov
daa
xchg
sub
cdq
hlt
cld
aam
shl
push
sub
fnsave
cwde
(bad)
sbb
jge
in
jmp
je
ds
cmp
mov
ret
push
xchg
xchg
pop
cli
dec
int
lods
(bad)
int3
mov
add
sbb
mov
pop
inc
push
jno
lds
int3
cmp
cld
dec
addr16
test
push
data16
dec
shr
ret
mov
mov
cmp
sbb
rol
hlt
cwde
call
fild
pop
das
outs
xchg
and
xor
rol
lahf
lea
push
loopne
repnz
jnp
repnz
or
sbb
std
mov
mov
jo
test
movs
cli
inc
cld
jmp
lods
cmp
arpl
(bad)
jle
pop
xor
pop
fwait
mov
lods
xchg
rcr
inc
jecxz
popf
xor
aaa
shr
or
and
add
out
mov
xor
add
jp
xor
dec
cs
stc
lods
stos
(bad)
jno
call
mov
in
shr
sub
retf
pop
sbb
iret
fiadd
sahf
outs
cwde
jg
cmps
cmp
test
and
test
add
and
mov
shl
inc
xor
dec
bound
jae
xchg
jae
sub
fsub
retf
push
retf
dec
mov
sbb
fbstp
js
sub
loopne
movs
cdq
sub
mov
sub
push
dec
cmp
push
dec
jp
clc
cmc
das
test
imul
les
push
test
push
or
dec
retf
scas
inc
pop
dec
paddsw
dec
test
sti
lds
leave
dec
mul
cmp
mov
dec
shr
inc
jb
mov
sub
das
or
outs
add
push
jbe
loopne
xchg
pop
push
mov
add
lods
xor
pop
cmp
(bad)
xchg
int3
int3
in
mov
inc
arpl
or
adc
mov
imul
push
dec
(bad)
(bad)
test
mov
daa
jmp
outs
addr16
sti
cmp
push
(bad)
jg
jl
enter
dec
cld
inc
sti
mov
in
sbb
fcomp
daa
fcom
and
mov
sbb
fld
or
inc
call
aam
xor
sub
cdq
sar
xor
and
mov
jp
sbb
jge
int3
or
inc
loopne
xor
pop
fcomp
sub
or
mov
xor
sbb
test
mov
xchg
popf
sbb
push
mov
sub
add
mov
jmp
adc
jno
scas
fbstp
adc
inc
mov
jp
pop
test
lods
loop
cmps
inc
sahf
pop
pushf
loope
mov
(bad)
fstp
(bad)
std
sbb
adc
jmp
sub
xchg
cs
aas
xlat
inc
jnp
pop
ror
cmp
dec
xchg
push
rol
push
jmp
(bad)
dec
movs
push
or
nop
sub
arpl
pop
aad
cwde
cdq
push
daa
xor
test
jb
and
icebp
pop
pop
test
push
imul
(bad)
push
xchg
push
sti
xchg
inc
dec
pop
jns
mov
popf
inc
dec
mov
cmps
pop
pusha
lsl
sbb
les
cmp
jle
mov
cmp
mov
sbb
fldenv
push
hlt
enter
sti
imul
ins
add
jecxz
pop
imul
cmp
xor
mov
mov
ret
stc
and
retf
jbe
cli
adc
lods
xchg
test
pop
and
jp
jmp
mov
mov
sub
ret
test
scas
pcmpgtb
inc
in
pop
pop
out
push
mov
xchg
(bad)
aaa
sbb
js
jecxz
xchg
out
dec
add
daa
mov
(bad)
push
mov
pop
popf
add
div
mov
jg
out
xchg
xchg
gs
fisub
dec
icebp
sub
dec
ss
mov
xchg
lea
cli
dec
in
pop
xchg
jae
adc
jle
test
dec
fmul
mov
retf
pop
retf
mov
add
sub
sbb
sbb
leave
test
sub
jne
push
fwait
dec
ret
push
fst
rcl
xchg
fldcw
clc
pusha
imul
inc
cs
dec
into
fmul
outs
adc
jns
cmc
cmp
xchg
inc
push
cmp
cdq
cld
jns
scas
(bad)
ffreep
xlat
cmps
inc
mov
movs
bound
frstor
adc
push
xor
push
sub
shr
inc
xor
mov
mov
add
xor
imul
pop
sti
push
and
jp
aaa
sti
mov
cmps
jmp
xchg
or
mov
js
sub
and
movs
adc
adc
jg
shl
out
xchg
xor
mov
jae
push
xor
es
(bad)
lahf
repnz
pop
adc
popa
inc
fwait
or
es
fs
xor
fs
xor
sub
mov
nop
lods
push
mov
xor
sub
bound
pop
stos
enterw
sbb
pop
or
fisub
gs
popf
lock
in
jae
inc
mov
cmp
lea
es
push
inc
push
or
inc
or
dec
sub
pop
jg
icebp
enter
call
fstp
sbb
mov
aaa
pop
clc
daa
gs
popa
mov
scas
loope
mov
dec
pop
out
(bad)
movsx
push
cmp
pushf
pop
and
jbe
sbb
icebp
lods
into
add
jp
ret
push
jb
sbb
sub
ret
xchg
les
add
gs
in
cwde
fs
dec
mov
ins
cmp
inc
sbb
mov
push
mov
jmp
mov
or
dec
loope
jmp
and
xchg
stc
pop
inc
ficomp
sub
call
in
pop
jmp
add
pop
adc
into
rcl
hlt
jg
std
fld
cmp
pop
push
mov
dec
pop
outs
sub
bound
pushf
add
stos
push
fsubr
lea
in
add
dec
cmc
inc
pop
mov
fadd
scas
xor
cli
push
lock
enter
fs
and
in
imul
shr
ret
xchg
pop
lods
imul
arpl
push
dec
mov
add
push
sub
retf
or
pop
cmc
test
cli
inc
out
pop
std
cli
loope
icebp
fwait
and
xchg
adc
pop
js
push
add
add
sahf
mov
out
sbb
jmp
sbb
cmc
add
xchg
add
ror
lock
sub
lods
and
arpl
test
fidivr
daa
scas
sbb
fadd
div
test
or
sbb
aaa
loopne
cli
outs
dec
and
aaa
test
xchg
jo
add
xchg
test
cli
jnp
repnz
and
imul
sbb
ins
sub
imul
xlat
inc
out
dec
lods
push
pop
dec
aaa
sbb
inc
sub
xor
addr16
fmul
rol
call
fnstcw
jb
cmp
mov
xlat
push
int3
pop
ret
sub
popa
repnz
adc
add
cmp
pop
mov
add
imul
push
cmc
jnp
jge
jb
jne
arpl
gs
jmp
arpl
scas
xchg
cmp
push
jle
push
add
xor
retf
or
mov
mov
int3
aad
xor
push
fld
leave
sbb
xchg
mov
sub
xchg
sbb
add
(bad)
in
lea
jmp
fidivr
adc
popa
pop
pop
sub
mov
test
pop
dec
or
xor
mov
test
bnd
push
mov
int
mov
dec
(bad)
loopne
xor
out
mov
xchg
arpl
les
jecxz
into
dec
dec
sub
add
fwait
arpl
loop
fldcw
inc
mov
stos
retf
xor
das
(bad)
jns
fisub
dec
lock
mov
inc
xor
aaa
imul
out
pop
lods
jecxz
xor
ret
imul
push
ins
add
cmc
mov
in
or
cmps
xchg
idiv
push
push
in
mov
push
out
cmp
inc
rcr
inc
mov
and
add
test
sbb
test
retf
xchg
xor
pop
push
sbb
pop
nop
sub
xsha256
cmps
push
stos
mov
xchg
scas
(bad)
mov
jo
jns
sbb
push
cmps
addr16
jge
cmp
push
adc
inc
out
sub
int
xor
and
ins
mov
push
sbb
push
add
aad
push
dec
inc
fs
lds
bound
jo
popa
in
lods
out
mov
ins
xchg
xor
sbb
mov
jne
xor
outs
cmps
js
or
cmp
mov
sbb
(bad)
jle
les
popa
cmp
and
and
adc
or
add
pusha
jl
adc
lea
add
jmp
pop
rcl
rsm
hlt
rcr
inc
inc
xchg
push
jno
pop
pop
fnstenv
mov
jl
mov
sbb
scas
mov
inc
mov
add
jp
sub
jmp
cmp
bound
lahf
loopne
loop
pop
jmp
sub
aaa
cwde
das
leave
jns
retf
lds
dec
stos
stos
and
repz
add
and
xchg
sub
cmps
push
retf
mov
shl
sti
add
cwde
gs
in
xchg
sar
sub
sbb
mov
pop
lds
aad
pushf
cld
mov
arpl
and
inc
adc
arpl
scas
pop
sti
mov
test
add
jbe
repz
xchg
inc
add
ins
adc
inc
add
mov
scas
lds
imul
repz
adc
aad
lahf
and
fs
ins
and
cli
fcmovu
imul
jb
pop
ds
js
mov
popa
jno
mov
inc
sahf
add
ret
sbb
cmp
mov
mov
mov
add
sub
xor
call
aas
push
shl
movs
cdq
mov
xor
(bad)
fucom
(bad)
mov
dec
jle
addr16
dec
aad
jns
dec
mov
ror
clc
(bad)
scas
dec
sbb
jno
rcl
mov
pushf
sub
xor
add
mov
ins
shl
inc
in
cmp
sahf
popf
sub
bound
and
sub
out
xor
ins
cmc
or
push
jge
jb
push
scas
fwait
xor
add
push
cmp
mov
xor
sbb
rcl
push
adc
xchg
cmps
cld
xor
mov
sbb
test
push
fnstsw
test
shl
inc
xor
outs
mov
or
dec
lods
in
sbb
shl
or
pop
xchg
popf
pusha
inc
mov
addr16
jno
inc
out
adc
jg
(bad)
pop
adc
mov
test
in
or
mov
lods
ret
push
imul
mov
repz
xor
add
mov
sbb
jp
xor
(bad)
jns
stc
stos
lahf
adc
push
add
sbb
or
in
cld
xchg
mov
mov
push
das
and
xchg
push
cmc
aaa
(bad)
test
mov
mov
push
or
jo
scas
mov
xchg
jmp
mov
jbe
aas
ret
pop
sbb
(bad)
add
call
shl
inc
cli
leave
inc
stos
and
jo
mov
dec
push
imul
sub
jmp
push
frstor
lea
inc
push
sub
xchg
xor
test
sub
leave
push
test
xchg
mov
dec
sub
push
pop
and
mov
fbld
push
aaa
jp
push
and
mov
sub
lods
sbb
adc
mov
test
jo
jge
pop
and
and
aas
push
push
add
jp
scas
in
push
pop
pushf
pop
pop
and
and
and
pop
(bad)
add
inc
mov
xchg
push
xor
lods
mov
bound
call
mov
sub
inc
ret
ficom
mov
mov
pop
pushf
push
movs
enter
loop
adc
push
pop
inc
out
(bad)
shr
push
(bad)
cwde
loop
pop
xor
mov
lods
dec
jg
pop
dec
js
mov
xor
rol
inc
dec
mov
popa
mov
cmps
aas
or
cmp
sub
xchg
and
xor
mul
retf
jb
jmp
xor
push
ret
int
scas
cld
pusha
in
ret
xor
xor
int
xchg
dec
test
inc
mov
pop
cs
les
outs
jp
jno
xchg
test
or
dec
pop
mov
mul
dec
jmp
or
mov
dec
int3
mov
loope
pop
cmp
add
neg
and
sub
(bad)
into
popa
adc
not
fistp
inc
sbb
sbb
mov
sub
fsubr
(bad)
inc
push
mov
(bad)
outs
mov
pusha
imul
adc
or
push
out
jp
lock
xor
mov
xchg
jbe
hlt
repz
rcr
sub
or
mov
ret
pop
(bad)
push
or
mov
js
pop
jle
mov
in
or
add
pushf
stos
aas
xor
xchg
xchg
clc
leave
jne
push
shl
push
and
mov
mov
adc
push
pop
movs
mov
jl
jle
push
test
jnp
mov
dec
jp
xchg
add
aas
jge
mov
xlat
jns
movs
jle
sbb
lds
call
cmps
cmp
iret
pop
inc
aaa
fcmove
mov
add
mov
pop
xor
aad
mov
sbb
xor
mov
js
cmp
stos
xchg
dec
jae
(bad)
out
icebp
mov
mov
mov
sahf
xchg
push
dec
mov
in
rol
jmp
xchg
sbb
cs
adc
fld
ins
cmp
hlt
or
pop
dec
cmp
retf
mov
inc
dec
dec
sbb
stos
mov
adc
xor
cdq
adc
fidiv
outs
stc
and
aad
push
adc
shl
sbb
iret
les
dec
jle
jmp
mov
es
data16
shl
rol
test
sahf
jb
sbb
add
mov
mov
mov
hlt
inc
lods
sbb
cmp
addr16
fstp
adc
aad
xor
push
xor
ds
or
mov
inc
dec
push
clc
mov
xor
std
ffreep
mov
sbb
repz
ret
dec
inc
mov
lock
or
dec
in
hlt
mov
pop
pop
push
ficomp
imul
mov
loop
pushf
cmp
inc
jne
out
push
mov
xchg
add
call
jmp
js
adc
call
pop
mov
push
repnz
(bad)
movs
cdq
movs
cmps
push
mov
ss
call
jl
adc
call
into
movs
jle
sbb
cdq
sub
lea
imul
popa
mov
ds
(bad)
xchg
push
mul
mov
sbb
clc
mov
int
push
xor
in
xchg
repz
sbb
xchg
sbb
add
aas
jnp
int3
pop
add
sbb
xor
mov
jb
outs
inc
push
int
mov
retf
adc
push
mov
cwde
push
loopne
test
inc
mov
mov
outs
jno
gs
ror
(bad)
dec
push
aas
sti
sbb
inc
repnz
jns
lods
xchg
or
mov
ror
jnp
mov
sub
jbe
jo
aas
add
jb
ret
lock
xor
pop
pop
js
imul
cmps
clc
or
stos
int
push
jp
pop
shl
movs
mov
(bad)
sbb
add
fstp
out
pop
(bad)
fmul
add
sub
push
movs
push
sub
sbb
pusha
push
stos
stc
or
push
sahf
dec
adc
(bad)
out
inc
pop
jne
dec
push
inc
icebp
pop
pop
adc
mov
lahf
(bad)
addr16
sbb
push
xlat
mov
adc
rcl
jp
ret
popf
mov
(bad)
or
inc
rcr
xchg
call
data16
or
ds
(bad)
hlt
fsub
outs
mov
fs
aas
ds
adc
in
std
adc
test
std
rcr
jmp
or
inc
pop
ja
push
call
sub
sub
and
push
jle
xchg
dec
mov
aas
outs
mul
mov
loope
xlat
and
push
js
test
mov
fcomp
jp
(bad)
jo
jo
adc
enter
xor
and
sar
push
cmp
sbb
sbb
jns
loopne
out
sbb
push
pop
pop
test
sub
dec
aas
int
push
jns
and
dec
mov
mov
lea
pusha
adc
jae
adc
jns
sbb
(bad)
std
sbb
loopne
sbb
popf
add
xchg
adc
and
out
mov
nop
stc
rcl
jb
push
sub
ret
jecxz
cld
mov
pop
aas
xchg
ret
and
cmp
ret
daa
xchg
lahf
sub
push
inc
dec
imul
jecxz
dec
ret
mov
dec
and
pop
not
mov
sub
push
je
dec
inc
fsubr
and
or
xlat
(bad)
cmp
adc
adc
cmps
cmp
(bad)
mov
movs
add
push
add
adc
les
addr16
outs
shl
cli
ror
or
push
cmp
lods
jmp
mov
test
or
cmps
cmp
dec
scas
mov
dec
test
inc
and
iret
mov
or
adc
aad
mov
addr16
or
aaa
jp
scas
daa
sbb
add
std
jnp
add
add
add
add
add
add
add
adc
fnstsw
int
mov
js
jbe
sar
mov
sbb
sub
xor
into
shr
mov
cmps
cdq
jp
mov
(bad)
mov
jg
dec
dec
fild
ret
inc
inc
push
add
fwait
xlat
ss
in
or
pop
xor
test
or
test
pop
pop
imul
adc
ret
push
out
mov
push
add
or
add
add
icebp
pop
add
push
pop
imul
xchg
add
add
add
add
add
mov
add
ins
add
data16
popa
add
xor
add
add
add
add
or
jmp
add
add
add
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
adc
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
jg
sbb
cmp
je
cmp
jg
cmp
jp
xor
jle
aas
nop
je
push
(bad)
jo
cmp
sub
nop
je
cmp
je
mov
nop
je
or
nop
je
push
out
arpl
nop
je
push
out
arpl
nop
je
cld
xchg
jb
cmp
jo
cmp
arpl
nop
je
push
inc
add
dec
add
add
push
in
loopne
push
and
add
add
cmp
add
push
add
add
add
xchg
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
jo
or
repnz
add
add
add
or
jnp
add
add
add
jno
add
push
or
sub
add
cs
js
add
add
cmp
add
adc
add
cmp
add
add
add
add
pusha
cs
popa
je
add
bound
add
push
or
add
add
or
inc
add
inc
cs
je
add
add
mov
add
mov
add
pop
add
add
add
inc
add
shr
js
popa
je
add
add
add
add
add
add
lock
inc
add
shr
jae
arpl
add
test
add
add
add
add
or
inc
add
inc
cs
ins
outs
arpl
add
add
add
xchg
add
outs
or
add
add
add
add
add
add
jmp
push
mov
sub
cmp
mov
mov
jb
cmp
ja
push
mov
push
push
mov
xor
xor
push
push
push
push
call
cmp
jge
add
jmp
add
mov
xor
push
inc
push
push
push
call
mov
mov
or
jne
mov
mov
dec
inc
test
mov
jg
mov
pop
pop
pop
and
jmp
and
leave
ret
push
mov
sub
and
push
mov
push
push
mov
mov
lea
push
push
push
push
call
add
inc
push
mov
push
inc
push
push
inc
call
mov
mov
or
jne
mov
lea
mov
add
dec
dec
dec
test
mov
mov
jg
mov
pop
pop
pop
and
leave
ret
push
mov
push
mov
pop
mov
push
push
call
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
test
jg
jl
test
jae
mov
inc
neg
adc
neg
push
pop
push
push
call
pop
ret
push
push
push
lea
pop
mov
and
shr
cmp
jge
add
jmp
add
mov
dec
dec
jne
and
pop
pop
ret
push
mov
push
push
mov
push
push
push
or
mov
test
mov
jne
xor
jmp
push
cmp
pop
jne
mov
cmp
jne
mov
mov
mov
xor
cmp
jmp
mov
movzx
movzx
mov
sub
push
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
dec
mov
mov
shr
and
cmp
jne
mov
mov
mov
lea
movzx
lea
sub
mov
movzx
mov
push
call
mov
push
mov
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
pop
pop
pop
leave
ret
push
cmp
mov
jne
xor
jmp
mov
shr
mov
cmp
jne
mov
jmp
push
pop
shl
dec
and
pop
ret
push
mov
sub
mov
push
push
push
mov
mov
test
jne
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
pop
lea
jmp
push
cmp
pop
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
xor
push
test
pop
jne
dec
mov
mov
shr
test
je
push
mov
pop
sub
mov
mov
shr
mov
and
mov
mov
jmp
mov
mov
movzx
movzx
sub
push
mov
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
dec
mov
mov
shr
and
cmp
jne
mov
mov
mov
lea
movzx
lea
sub
mov
mov
movzx
push
mov
call
mov
push
mov
mov
call
mov
jmp
mov
mov
xor
mov
movzx
dec
add
mov
mov
shr
test
jne
dec
dec
jmp
push
mov
pop
lea
rep
mov
mov
sub
mov
dec
push
mov
mov
add
mov
shr
mov
lea
and
mov
mov
sub
mov
and
pop
mov
sub
mov
sub
mov
push
mov
pop
mov
rep
mov
jmp
mov
lea
cmp
mov
jne
mov
mov
jmp
xor
lea
mov
mov
shr
test
jne
mov
dec
shr
test
je
mov
mov
mov
shr
sub
and
mov
shl
mov
mov
lea
sub
mov
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
sub
mov
dec
sub
mov
mov
push
mov
mov
lea
mov
pop
mov
rep
mov
call
xor
pop
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
mov
jne
xor
jmp
movzx
push
call
mov
cmp
jne
call
cmp
jne
push
push
lea
push
push
lea
push
push
push
push
call
mov
cmp
je
cmp
jg
lea
mov
push
call
lea
push
push
lea
push
push
push
push
call
mov
jmp
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
mov
mov
inc
inc
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
push
push
push
push
mov
mov
mov
mov
inc
inc
inc
inc
cmp
je
mov
call
mov
mov
call
cmp
jb
ja
test
je
jmp
or
jmp
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
cmp
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
pop
leave
ret
mov
push
push
mov
lea
cmp
je
lea
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
push
call
xor
pop
mov
mov
mov
pop
ret
push
call
ret
mov
mov
dec
push
push
call
ret
mov
mov
sub
push
push
call
ret
mov
cmp
jne
push
cmp
pop
jl
mov
shr
jmp
cmp
jl
push
pop
add
push
call
ret
push
mov
push
mov
push
mov
push
cmp
je
cmp
jb
lea
push
push
mov
call
mov
xor
mov
imul
mov
div
cmp
je
lea
push
push
mov
call
xor
test
jbe
push
call
mov
pop
test
jne
lea
push
push
mov
call
mov
cmp
jl
mov
mov
imul
push
push
push
call
add
push
call
pop
mov
mov
pop
pop
pop
pop
ret
push
call
ret
mov
mov
mov
sub
imul
push
mov
imul
imul
add
add
push
push
call
add
ret
push
mov
call
mov
mov
push
inc
push
call
inc
pop
ret
push
mov
push
mov
mov
mov
lea
cmp
jle
sub
mov
test
jle
lea
push
push
mov
call
sub
pop
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
mov
push
and
push
push
mov
call
test
jl
mov
mov
mov
add
push
call
mov
jmp
mov
push
mov
and
and
and
call
mov
pop
leave
ret
cmp
je
mov
mov
mov
call
test
jne
push
pop
jmp
xor
ret
push
push
mov
xor
cmp
jle
mov
push
mov
call
test
jne
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
mov
push
xor
cmp
mov
jne
mov
mov
cmp
jne
mov
push
call
mov
jmp
push
mov
push
mov
mov
mov
mov
call
mov
pop
leave
ret
push
mov
push
and
push
push
mov
call
test
jl
mov
push
mov
call
mov
jmp
mov
push
mov
and
and
and
call
mov
pop
leave
ret
mov
call
sub
cmp
push
push
push
je
add
mov
call
push
lea
call
and
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
push
lea
mov
push
push
call
mov
mov
mov
call
push
test
sete
and
call
test
pop
jne
lea
call
mov
lea
dec
mov
push
push
push
call
test
je
mov
lea
push
call
and
lea
call
jmp
push
call
pop
mov
jmp
and
lea
call
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
push
pop
ret
push
push
mov
xor
push
mov
mov
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
mov
jmp
or
test
jl
cmp
je
mov
mov
and
mov
sub
push
push
lea
mov
push
call
mov
and
push
call
push
call
pop
mov
mov
jmp
mov
mov
inc
mov
mov
mov
call
test
jne
mov
cmp
jge
mov
mov
mov
mov
mov
call
test
je
push
mov
call
inc
mov
cmp
jl
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
lea
call
lea
mov
push
mov
mov
call
test
je
lea
push
mov
lea
call
push
mov
or
call
push
call
pop
pop
jmp
inc
mov
mov
mov
inc
cmp
mov
jne
push
pop
jmp
xor
jmp
push
mov
inc
push
push
call
test
je
push
lea
call
mov
push
lea
mov
call
push
mov
lea
mov
call
push
mov
lea
mov
call
push
call
push
call
push
mov
call
add
lea
mov
push
push
push
call
mov
mov
mov
call
push
mov
call
test
pop
je
xor
push
call
pop
mov
jmp
mov
mov
add
jmp
push
call
push
call
pop
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
xor
ret
push
pop
ret
push
mov
push
push
mov
push
push
mov
and
mov
mov
and
and
lea
mov
mov
and
mov
cmp
jge
mov
mov
mov
mov
call
test
je
push
mov
call
inc
jmp
cmp
je
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
mov
inc
cmp
mov
jne
mov
mov
call
test
je
inc
mov
jmp
mov
mov
mov
inc
cmp
mov
jne
cmp
jge
mov
mov
mov
inc
cmp
mov
mov
je
push
mov
call
mov
jmp
mov
jmp
xor
pop
pop
pop
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
and
push
push
push
mov
push
lea
call
and
push
lea
call
mov
lea
push
lea
push
lea
mov
mov
call
push
mov
neg
sbb
inc
call
push
or
call
pop
test
pop
jne
push
lea
call
push
lea
mov
call
lea
lea
push
lea
push
mov
mov
call
push
mov
neg
sbb
inc
call
push
or
call
pop
test
pop
jne
lea
push
push
push
mov
call
test
jne
xor
jmp
mov
mov
mov
call
test
je
inc
jmp
mov
cmp
jne
cmp
je
push
pop
jmp
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
lea
mov
push
push
push
call
mov
mov
and
call
test
push
sete
or
call
test
pop
je
push
mov
mov
push
call
test
mov
jge
xor
jmp
mov
add
mov
mov
mov
call
test
je
inc
mov
jmp
mov
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
mov
xor
mov
mov
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
push
mov
mov
and
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
add
mov
mov
inc
inc
test
jne
mov
pop
add
mov
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
xor
mov
lea
cmp
mov
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
mov
mov
add
mov
mov
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
push
push
push
mov
mov
test
jne
mov
jmp
mov
mov
cmp
jge
xor
test
jle
lea
cmp
jge
mov
mov
add
mov
mov
cmp
jne
inc
cmp
jl
cmp
je
inc
cmp
jl
or
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
mov
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
push
push
mov
lea
cmp
je
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
push
call
test
pop
jne
mov
push
mov
lea
push
call
pop
ret
push
call
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
je
cmp
jl
push
lea
call
mov
mov
inc
push
push
push
push
push
push
call
cmp
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
push
lea
cmp
jl
push
lea
call
lea
mov
mov
push
lea
inc
push
push
push
push
push
push
push
call
cmp
mov
pop
setne
cmp
mov
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
push
and
lea
push
push
push
mov
push
call
mov
pop
leave
ret
push
push
mov
mov
xor
mov
mov
mov
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
push
pop
call
xor
or
or
inc
jmp
test
je
mov
pop
pop
pop
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jb
cmp
ja
movzx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
inc
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
mov
push
xor
mov
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
je
lea
mov
mov
inc
cmp
jae
cmp
je
movzx
mov
inc
inc
inc
inc
inc
jmp
cmp
jb
push
pop
cmp
jb
inc
cmp
jl
movzx
movzx
sub
cmp
je
mov
mov
inc
cmp
jb
cmp
jae
movzx
sub
shl
or
dec
jne
mov
cmp
jae
cmp
je
jmp
sub
cmp
jae
cmp
je
mov
and
shr
sub
sub
mov
mov
add
add
add
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
lea
mov
and
xor
and
push
and
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
mov
push
push
push
xor
mov
cmp
mov
mov
je
mov
movzx
inc
inc
inc
cmp
mov
jae
mov
test
je
mov
inc
jmp
cmp
jb
cmp
jae
mov
cmp
jae
cmp
je
movzx
inc
inc
inc
cmp
mov
jb
cmp
jae
add
add
shl
or
add
push
pop
push
pop
push
pop
shl
cmp
jb
add
inc
cmp
jb
mov
test
je
lea
mov
shl
shr
add
mov
lea
inc
shl
dec
sub
cmp
je
mov
mov
shr
mov
and
add
mov
inc
test
jne
mov
mov
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
pop
leave
ret
mov
xor
cmp
je
push
mov
inc
inc
inc
cmp
jne
pop
and
mov
ret
mov
xor
cmp
je
inc
cmp
jne
and
mov
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
push
call
push
call
pop
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
lea
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
add
mov
pop
ret
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
push
push
mov
push
mov
mov
mov
lea
cmp
jle
mov
sub
test
jle
lea
mov
imul
add
lea
push
lea
lea
lea
push
push
call
add
sub
mov
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
sub
push
mov
push
mov
push
mov
lea
xor
mov
mov
cmp
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
lea
mov
mov
mov
mov
inc
inc
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
ret
push
push
call
test
setne
ret
push
mov
xor
call
test
jne
pop
ret
push
call
test
setne
pop
ret
push
push
mov
mov
cmp
jg
push
call
push
push
call
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
ret
push
push
mov
mov
push
mov
cmp
mov
jg
push
mov
call
push
push
push
push
call
mov
mov
call
mov
pop
pop
pop
ret
push
push
mov
call
push
mov
mov
call
mov
test
je
push
lea
call
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
pop
ret
mov
call
neg
sbb
push
inc
mov
pop
sete
pop
ret
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
pop
ret
push
mov
call
push
call
pop
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
mov
push
and
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
mov
push
mov
push
mov
lea
mov
cmp
jle
mov
sub
test
jle
mov
push
lea
sub
inc
push
lea
add
push
push
call
add
sub
pop
mov
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
and
push
mov
push
call
mov
pop
pop
ret
push
push
mov
push
mov
xor
mov
mov
and
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
leave
ret
jmp
push
mov
push
mov
call
test
je
push
push
push
push
push
push
push
call
xor
cmp
setne
mov
mov
pop
pop
ret
push
mov
mov
cmp
je
push
call
test
jne
xor
pop
ret
or
mov
pop
ret
push
push
push
push
push
call
ret
mov
push
neg
sbb
push
and
or
push
push
call
ret
push
push
call
ret
push
mov
push
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
mov
cmp
jbe
mov
push
push
push
call
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
call
ret
xor
cmp
setne
inc
push
push
call
ret
push
mov
push
mov
cmp
jbe
mov
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
push
mov
push
mov
and
lea
and
push
mov
push
push
call
mov
add
test
je
test
je
add
sub
je
jmp
xor
jmp
mov
pop
pop
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
mov
call
push
and
mov
call
test
mov
jne
cmp
je
mov
push
mov
lea
push
call
mov
pop
pop
ret
push
mov
push
push
push
mov
call
mov
and
push
mov
call
mov
pop
lea
push
push
call
test
mov
jne
mov
push
mov
lea
push
call
xor
movsx
mov
mov
inc
cmp
jbe
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
call
mov
mov
neg
sbb
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
call
ret
cmp
jl
cmp
jle
cmp
jne
and
and
xor
ret
push
mov
push
call
mov
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
push
call
pop
ret
cmp
jl
cmp
jle
cmp
jne
push
push
push
call
add
xor
jmp
push
mov
mov
call
test
jl
push
push
push
call
and
add
xor
pop
ret
push
mov
call
test
jge
mov
mov
pop
ret
push
mov
push
mov
push
call
test
jge
cmp
jne
mov
push
mov
lea
push
call
mov
mov
pop
pop
ret
mov
call
sub
push
mov
mov
push
lea
call
push
and
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
call
cmp
mov
jbe
mov
cmp
jne
push
lea
call
add
dec
jne
cmp
jne
mov
lea
call
push
lea
mov
call
mov
push
call
pop
mov
lea
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
push
push
push
mov
push
xor
pop
lea
and
mov
mov
mov
rep
push
lea
pop
push
push
stos
call
lea
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
and
cmp
push
mov
jae
push
call
jmp
mov
mov
call
mov
pop
leave
ret
mov
call
sub
push
mov
mov
lea
push
call
mov
and
mov
call
push
call
pop
mov
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
jbe
push
mov
mov
push
pop
shl
test
je
cmp
je
push
lea
call
push
lea
call
not
and
add
dec
jne
pop
cmp
je
cmp
je
push
lea
call
mov
lea
call
push
lea
mov
call
mov
push
call
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
mov
lea
push
call
mov
and
mov
call
push
call
pop
mov
mov
leave
ret
push
push
mov
xor
push
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
add
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
add
mov
pop
pop
pop
ret
push
mov
sub
lea
push
call
mov
leave
ret
push
push
shr
push
call
neg
sbb
neg
ret
push
mov
push
push
lea
push
push
lea
mov
push
mov
push
call
test
jne
cmp
sbb
and
add
mov
xor
jmp
movzx
movzx
shl
add
mov
mov
pop
pop
leave
ret
xor
add
push
push
adc
push
push
mov
push
call
mov
mov
pop
ret
push
push
push
mov
push
push
push
mov
call
mov
xor
add
mov
adc
mov
cmp
ja
jb
cmp
jae
and
jmp
sub
push
sbb
push
push
push
call
test
ja
cmp
jbe
or
xor
jmp
mov
mov
pop
pop
ret
push
mov
sub
push
mov
mov
mov
and
and
cmp
jb
cmp
jae
cmp
jb
cmp
ja
cmp
jb
cmp
ja
cmp
ja
cmp
ja
cmp
ja
push
lea
mov
xor
mov
push
div
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
div
sub
mov
imul
add
shr
add
test
jne
mov
xor
div
test
jne
mov
mov
div
test
jne
mov
dec
push
pop
mov
je
movzx
add
inc
cmp
jb
mov
mov
add
push
push
push
lea
lea
push
call
xor
add
push
push
adc
push
push
call
xor
add
pop
pop
adc
mov
mov
mov
jmp
xor
pop
leave
ret
push
mov
sub
lea
push
mov
push
call
lea
push
push
call
pop
leave
ret
mov
cmp
jae
mov
inc
mov
ret
mov
call
sub
push
push
mov
push
lea
mov
mov
push
push
call
xor
cmp
jne
xor
cmp
jbe
lea
call
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
jne
cmp
jne
mov
lea
mov
mov
mov
call
mov
lea
push
push
push
push
call
cmp
jne
cmp
jne
push
lea
call
jmp
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
mov
lea
push
call
lea
mov
call
or
push
call
inc
pop
cmp
jb
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
lea
mov
call
push
call
pop
mov
jmp
jmp
mov
call
sub
push
xor
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
cmp
mov
setne
mov
jmp
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
push
call
pop
ret
push
mov
push
and
cmp
push
push
push
mov
jbe
mov
mov
mov
mov
mov
call
test
je
inc
add
mov
cmp
jb
xor
cmp
je
cmp
jbe
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jb
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
pop
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
mov
push
push
push
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jb
test
je
mov
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jb
jmp
push
mov
call
jmp
mov
push
call
mov
jmp
xor
pop
pop
pop
pop
ret
mov
call
push
push
mov
and
push
push
push
mov
test
mov
jbe
mov
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
jmp
cmp
jne
inc
add
cmp
jb
jmp
call
jmp
call
cmp
mov
je
mov
push
call
jmp
cmp
push
jne
mov
call
jmp
mov
call
test
setne
test
jne
mov
test
je
mov
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
jmp
cmp
jne
inc
add
cmp
jb
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
call
test
je
cmp
je
cmp
jne
cmp
jne
push
mov
push
jmp
push
mov
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
call
test
je
cmp
je
cmp
jne
cmp
jne
push
mov
push
jmp
push
mov
push
push
push
call
test
jne
cmp
je
mov
cmp
je
push
call
pop
mov
xor
cmp
mov
je
mov
call
mov
mov
or
push
call
mov
lea
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
push
and
push
push
lea
push
and
push
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
and
push
and
and
push
lea
mov
push
push
push
push
call
and
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
and
mov
mov
ret
push
mov
mov
push
and
push
mov
cmp
jne
xor
jmp
lea
mov
and
cmp
jne
xor
jmp
lea
mov
push
push
push
mov
call
mov
pop
pop
pop
ret
cmp
je
cmp
je
cmp
je
test
je
push
pop
cmp
je
mov
ret
xor
ret
push
pop
ret
push
pop
ret
push
pop
ret
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
pop
pop
test
pop
jne
xor
jmp
push
pop
call
pop
ret
mov
mov
mov
xor
mov
mov
mov
mov
ret
push
mov
push
mov
mov
test
je
push
call
test
mov
je
xor
jmp
and
add
mov
adc
pop
pop
ret
sub
je
dec
je
dec
je
sub
je
sub
je
mov
ret
mov
ret
mov
ret
mov
ret
push
pop
ret
xor
ret
mov
mov
and
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
neg
sbb
pop
pop
and
pop
pop
ret
push
mov
push
push
mov
push
push
mov
xor
mov
sub
je
dec
je
dec
je
push
pop
jmp
push
jmp
push
pop
push
mov
lea
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
neg
sbb
pop
and
pop
pop
leave
ret
push
mov
mov
call
and
pop
ret
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
push
push
mov
cmp
jne
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
mov
mov
mov
mov
test
lea
pop
mov
je
mov
inc
mov
jmp
mov
xor
pop
leave
ret
mov
and
mov
ret
mov
cmp
je
mov
inc
mov
ret
jmp
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
cmp
jne
mov
mov
push
mov
sub
push
call
test
mov
jne
add
adc
mov
pop
mov
mov
pop
ret
mov
and
mov
ret
mov
mov
inc
cmp
mov
jne
jmp
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
cmp
je
xor
jmp
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
test
pop
je
mov
lea
push
push
call
mov
mov
mov
add
test
mov
sete
xor
mov
test
sete
mov
pop
leave
ret
push
mov
call
test
jne
add
adc
or
pop
ret
mov
mov
inc
mov
pop
ret
mov
call
push
push
mov
mov
call
or
xor
mov
lea
mov
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
jmp
push
mov
cmp
jne
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
push
and
call
push
call
pop
pop
lea
call
mov
mov
call
push
call
pop
pop
mov
mov
leave
ret
or
xor
mov
mov
mov
mov
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
jmp
cmp
jne
push
lea
mov
mov
mov
call
lea
mov
call
test
jne
push
call
pop
jmp
lea
mov
push
push
push
call
test
je
mov
push
push
lea
call
test
je
push
or
mov
call
pop
lea
lea
push
push
push
call
test
jne
xor
jmp
push
mov
mov
call
mov
mov
add
adc
xor
cmp
sete
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
cmp
jae
sub
cmp
jb
mov
mov
push
push
add
push
call
mov
mov
add
push
call
add
sub
add
add
mov
adc
push
mov
push
call
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
call
test
je
mov
or
xor
xor
test
jbe
mov
mov
push
call
test
jne
push
mov
or
call
mov
mov
cmp
je
or
push
and
lea
call
test
jne
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
cmp
ja
jb
cmp
jae
lea
lea
push
push
push
call
test
je
cmp
je
push
mov
mov
call
test
jne
push
mov
mov
call
add
mov
adc
cmp
jb
ja
jmp
mov
jmp
mov
or
lea
call
mov
jmp
or
lea
call
mov
cmp
jne
cmp
lea
jne
cmp
jne
xor
jmp
push
mov
mov
push
mov
mov
push
push
call
test
mov
jne
test
je
and
mov
jmp
test
je
mov
xor
pop
pop
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
jne
lea
push
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
push
pop
push
push
push
call
add
test
jne
mov
mov
mov
mov
push
call
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
pop
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
cmp
je
mov
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
push
call
test
jne
add
adc
pop
pop
ret
push
mov
push
push
mov
push
mov
call
test
jne
mov
xor
test
setne
test
mov
je
mov
mov
mov
mov
cmp
je
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
sub
mov
add
mov
lea
push
call
test
jne
mov
add
mov
push
push
mov
push
call
mov
cmp
jae
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
test
jne
mov
test
je
mov
lea
push
push
push
call
test
jne
xor
cmp
jae
mov
mov
mov
inc
inc
jmp
mov
jmp
xor
jmp
test
je
push
mov
push
call
pop
pop
pop
pop
ret
xor
mov
mov
mov
mov
push
mov
call
ret
push
mov
push
and
lea
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
push
push
push
mov
test
je
and
cmp
jbe
mov
jmp
mov
mov
mov
sub
cmp
jae
mov
add
push
push
push
call
sub
add
test
je
add
mov
mov
add
add
mov
push
push
push
call
test
mov
je
cmp
ja
mov
push
push
lea
call
test
jne
xor
cmp
jae
mov
mov
mov
mov
inc
inc
jmp
cmp
mov
ja
xor
pop
pop
pop
pop
ret
mov
jmp
cmp
je
mov
jmp
mov
call
push
mov
push
mov
test
je
mov
push
push
mov
push
call
mov
mov
cmp
jae
mov
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
cmp
je
mov
jmp
push
mov
lea
push
call
test
jne
and
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
push
call
or
mov
mov
test
je
mov
push
call
mov
jmp
xor
mov
pop
pop
mov
leave
ret
push
mov
push
xor
mov
mov
lea
mov
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
mov
test
je
and
push
push
mov
test
jbe
mov
mov
cmp
jne
xor
cmp
jae
mov
add
mov
mov
mov
inc
lea
cmp
jb
mov
and
and
mov
add
mov
sub
mov
mov
lea
push
call
test
jne
mov
add
mov
mov
push
push
mov
push
call
test
mov
jne
mov
test
je
mov
jmp
mov
cmp
jae
mov
mov
and
inc
mov
cmp
jb
push
mov
push
mov
push
call
jmp
mov
mov
sub
cmp
jb
mov
mov
push
add
push
push
call
mov
add
add
test
je
add
xor
pop
pop
pop
ret
push
mov
push
mov
push
mov
push
call
ret
mov
push
mov
push
mov
call
ret
mov
mov
push
mov
call
ret
mov
push
mov
push
mov
push
call
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
xor
xor
push
mov
mov
sub
mov
mov
sbb
cmp
ja
jb
cmp
jb
mov
xor
test
jbe
mov
lea
push
push
push
mov
push
call
mov
add
adc
test
jne
mov
mov
pop
pop
pop
test
je
mov
leave
ret
push
mov
mov
test
je
and
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
push
sbb
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
mov
add
pop
adc
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
xor
add
adc
add
adc
pop
pop
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
cmp
jne
mov
push
pop
shl
call
mov
lea
and
mov
xor
mov
mov
mov
mov
call
add
adc
xor
add
adc
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
sub
mov
lea
mov
mov
lea
sub
lea
cmp
jae
mov
cmp
jne
mov
push
pop
add
shl
add
inc
inc
cmp
jl
mov
mov
sub
mov
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
cmp
jbe
mov
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
xor
add
adc
add
adc
sub
pop
pop
pop
leave
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
mov
mov
mov
push
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
add
jmp
mov
mov
add
adc
mov
cmp
jne
mov
cmp
je
and
mov
mov
mov
test
je
mov
mov
xor
pop
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
je
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
push
push
call
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
and
push
mov
push
test
push
je
and
mov
mov
xor
mov
mov
cmp
jb
ja
cmp
jbe
or
jne
cmp
mov
jne
mov
jmp
test
je
mov
xor
jmp
mov
mov
mov
test
je
mov
lea
push
push
push
push
call
mov
mov
sub
sbb
test
je
mov
mov
pop
pop
pop
leave
ret
mov
call
push
push
mov
push
lea
push
mov
call
mov
push
push
and
push
mov
push
push
call
test
jne
push
mov
push
mov
push
push
call
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
call
ret
push
mov
push
lea
push
mov
push
push
and
mov
push
push
push
call
mov
mov
add
adc
pop
test
je
mov
leave
ret
push
push
push
mov
call
mov
cmp
jb
mov
cmp
jb
mov
xor
imul
mov
div
cmp
jne
call
test
mov
je
push
mov
pop
cmp
jbe
mov
add
inc
mov
mov
add
cmp
jb
and
mov
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
mov
call
and
and
pop
ret
mov
test
jne
ret
mov
mov
ret
mov
test
je
mov
mov
mov
ret
push
mov
cmp
push
mov
jbe
mov
jmp
push
mov
call
test
jne
mov
jmp
sub
add
mov
call
push
mov
mov
call
pop
pop
ret
push
push
mov
push
mov
mov
cmp
jbe
mov
jmp
push
push
mov
call
test
je
cmp
je
sub
shr
add
jmp
xor
jmp
mov
pop
pop
pop
ret
push
mov
lea
call
mov
call
pop
ret
push
mov
push
lea
push
call
mov
call
push
mov
call
mov
pop
pop
ret
cmp
push
mov
je
push
lea
push
call
push
mov
call
push
call
cmp
pop
je
lea
call
pop
ret
push
mov
mov
test
jle
mov
push
push
mov
call
mov
call
jmp
and
and
pop
ret
push
mov
push
call
mov
call
pop
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
test
mov
ja
test
jbe
jmp
mov
mov
xor
cmp
mov
ja
jb
cmp
jae
mov
cmp
jge
mov
push
mov
mov
call
test
jne
mov
sub
sbb
inc
test
ja
jb
cmp
ja
xor
pop
pop
pop
leave
ret
mov
jmp
mov
push
mov
push
mov
mov
mov
push
mov
shl
push
call
mov
and
pop
pop
ret
push
mov
mov
test
jle
push
dec
mov
push
call
mov
call
jmp
and
and
pop
ret
push
mov
push
push
push
mov
push
push
mov
mov
push
mov
call
mov
mov
mov
xor
xor
cmp
mov
mov
mov
jle
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
push
call
jmp
push
mov
push
call
mov
push
and
mov
add
pop
adc
inc
cmp
jl
mov
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
sub
and
and
mov
push
push
push
push
mov
pop
lea
mov
and
cmp
movzx
jae
add
jmp
add
mov
dec
dec
push
dec
mov
pop
call
mov
and
cmp
movzx
jae
add
jmp
add
dec
dec
dec
push
mov
pop
call
mov
mov
or
jne
lea
mov
push
call
mov
pop
pop
pop
leave
ret
mov
call
sub
and
push
push
mov
push
mov
test
mov
mov
mov
je
mov
mov
cmp
jne
test
je
cmp
jne
test
jne
mov
mov
test
mov
jb
ja
cmp
jbe
xor
add
cmp
mov
ja
jb
cmp
jae
cmp
jae
add
xor
mov
mov
shr
cmp
jb
ja
cmp
jb
mov
mov
and
mov
and
lea
mov
push
push
push
call
xor
cmp
jne
cmp
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
pop
mov
mov
mov
mov
shl
add
push
call
pop
mov
test
mov
je
push
push
lea
push
push
push
mov
call
mov
mov
jmp
xor
and
mov
mov
mov
cmp
jge
mov
mov
lea
push
call
mov
lea
shl
add
push
mov
call
cmp
je
cmp
jne
cmp
jne
mov
cmp
jae
mov
inc
mov
mov
jmp
and
mov
lea
push
push
push
mov
call
mov
push
push
mov
push
push
call
mov
mov
test
mov
je
mov
push
call
cmp
mov
je
mov
push
call
test
je
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
and
lea
call
mov
or
test
je
mov
push
call
xor
jmp
mov
test
je
push
call
push
push
call
mov
and
and
ret
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
lea
mov
mov
call
mov
push
push
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
cmp
push
mov
jne
mov
mov
add
adc
lea
mov
push
push
mov
push
push
push
call
mov
test
je
mov
push
sub
mov
sbb
mov
mov
pop
pop
pop
ret
mov
push
mov
mov
add
mov
mov
adc
push
push
push
call
pop
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
mov
mov
push
push
mov
xor
push
mov
sub
sbb
add
adc
cmp
pop
pop
pop
jbe
mov
add
adc
ret
push
mov
push
push
push
push
mov
push
mov
mov
cmp
jb
mov
sub
mov
xor
cmp
mov
je
mov
push
add
push
push
call
add
add
mov
cmp
je
lea
mov
mov
push
mov
push
add
push
push
call
mov
mov
add
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jbe
mov
add
mov
mov
pop
adc
pop
pop
leave
ret
push
mov
mov
cmp
je
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
call
test
je
mov
lea
push
push
call
leave
ret
push
mov
push
lea
call
mov
pop
ret
push
mov
lea
call
and
and
mov
call
and
and
pop
ret
push
mov
push
lea
push
call
mov
call
pop
ret
push
mov
push
mov
mov
lea
push
mov
push
mov
call
test
jne
push
mov
call
xor
pop
pop
ret
push
mov
sub
push
push
mov
push
cmp
je
push
mov
push
mov
push
push
call
jmp
mov
test
je
and
cmp
je
mov
cmp
jge
mov
mov
mov
mov
add
mov
sub
cmp
jae
mov
push
push
push
call
add
test
je
add
add
sub
add
mov
call
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
cmp
jne
inc
and
jmp
mov
push
mov
mov
mov
mov
push
mov
mov
lea
push
xor
cmp
setne
inc
inc
push
call
sub
je
dec
je
dec
jne
mov
lea
call
push
mov
call
mov
mov
cmp
jne
mov
jmp
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
test
je
mov
add
jmp
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
mov
mul
mov
add
adc
pop
ret
push
mov
mov
xor
cmp
je
mov
cmp
jne
mov
jmp
push
mov
push
push
push
push
call
jmp
cmp
jne
mov
or
je
mov
pop
ret
cmp
jne
mov
or
jne
mov
mov
push
mov
cmp
je
call
mov
mov
xor
pop
jmp
push
mov
mov
cmp
je
mov
test
jne
mov
jmp
push
mov
push
push
call
jmp
mov
mov
mov
mov
xor
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
lea
xor
mov
mov
call
lea
call
mov
cmp
jle
mov
push
push
mov
call
push
push
lea
call
dec
jne
push
mov
mov
mov
mov
mov
call
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
mov
mov
shl
xor
push
mov
mov
mov
mov
mov
call
pop
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
mov
and
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
lea
add
push
push
push
call
mov
jmp
xor
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
lea
test
je
mov
push
call
and
push
lea
mov
call
mov
push
push
push
mov
call
mov
pop
mov
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
add
adc
mov
test
je
mov
mov
add
adc
cmp
je
mov
test
je
mov
lea
push
lea
push
push
call
test
jne
mov
mov
add
adc
add
adc
cmp
je
cmp
lea
jne
lea
mov
push
push
mov
call
jmp
xor
pop
leave
ret
mov
push
push
push
call
ret
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
call
ret
push
push
mov
pop
call
test
jne
xor
lea
call
test
jne
xor
lea
call
pop
ret
push
mov
lea
call
lea
call
and
and
pop
ret
mov
call
push
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
push
push
mov
test
mov
jbe
mov
lea
call
test
jne
mov
cmp
jae
mov
cmp
jbe
push
push
push
call
add
add
sub
jne
mov
call
mov
call
mov
test
je
mov
add
adc
xor
pop
pop
pop
ret
add
jmp
push
mov
push
push
push
push
mov
mov
test
jbe
mov
mov
mov
call
lea
call
mov
push
mov
mov
mov
lea
push
push
push
call
test
je
push
pop
jmp
mov
test
je
mov
xor
pop
pop
leave
ret
add
jmp
push
mov
push
mov
xor
push
cmp
je
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
jb
ja
mov
cmp
jbe
mov
jmp
mov
push
sub
mov
cmp
jbe
mov
mov
push
add
push
push
call
add
add
adc
test
je
mov
xor
pop
pop
pop
pop
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
xor
lea
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
call
and
and
pop
pop
ret
push
mov
push
mov
mov
cmp
jbe
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
add
cmp
jbe
mov
push
push
call
pop
test
pop
jne
xor
jmp
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
add
cmp
jb
push
lea
call
test
jne
xor
jmp
mov
add
pop
ret
push
mov
push
mov
push
mov
call
push
push
push
call
add
pop
pop
ret
push
mov
push
push
test
je
and
mov
test
je
mov
push
mov
call
test
jne
mov
jmp
push
push
push
call
add
add
test
je
mov
xor
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
mov
push
push
add
push
call
mov
add
add
test
je
mov
pop
test
pop
jne
cmp
je
mov
jmp
xor
pop
ret
push
mov
lea
push
mov
push
push
mov
push
mov
push
call
mov
mov
add
adc
pop
test
je
mov
pop
ret
push
mov
mov
call
mov
and
call
and
pop
ret
mov
push
mov
push
mov
push
lea
cmp
jae
push
pop
shl
mov
test
je
cmp
je
call
mov
call
test
mov
je
mov
mov
test
je
cmp
je
call
push
mov
pop
shl
mov
call
test
mov
jne
xor
jmp
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
pop
mov
mov
and
and
mov
mov
shl
xor
test
jbe
push
mov
or
or
inc
cmp
jb
pop
ret
push
mov
push
push
mov
test
je
and
cmp
push
push
push
je
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jbe
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
cmp
je
mov
mov
mov
mov
call
mov
push
mov
pop
shl
mov
mov
dec
and
mov
shl
mov
mov
shl
add
mov
add
mov
cmp
jne
mov
cmp
je
mov
mov
mov
call
mov
mov
sub
mov
push
sbb
pop
shl
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
push
push
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
push
pop
mov
shl
lea
and
sub
cmp
jae
mov
add
push
push
push
call
mov
add
test
je
add
add
add
adc
sub
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
push
mov
mov
cmp
je
test
push
jbe
push
call
mov
mov
test
pop
jbe
cmp
jb
mov
push
push
push
call
add
jmp
xor
push
call
pop
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
mov
mov
and
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
mov
add
add
sub
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
push
mov
lea
mov
push
call
test
jne
cmp
setne
pop
pop
ret
push
mov
push
mov
lea
mov
push
call
test
jne
mov
sub
neg
sbb
and
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
add
sub
test
jne
cmp
jne
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
mov
push
cmp
lea
jne
mov
call
test
jne
cmp
lea
jne
mov
call
test
jne
mov
call
mov
call
and
cmp
lea
je
xor
jmp
push
mov
call
pop
pop
pop
ret
push
mov
mov
call
cmp
jne
mov
mov
call
lea
call
jmp
xor
pop
ret
and
add
jmp
push
push
mov
push
cmp
lea
mov
mov
je
mov
call
mov
lea
test
je
call
mov
call
lea
call
pop
mov
pop
pop
jmp
mov
cmp
jae
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
inc
mov
ret
push
mov
sub
push
push
mov
push
mov
lea
movs
movs
movs
push
lea
push
push
movs
and
call
add
test
jne
mov
mov
test
jbe
mov
mov
cmp
je
inc
add
cmp
jb
or
pop
pop
pop
leave
ret
mov
call
push
push
push
push
and
mov
push
push
push
call
mov
push
neg
push
push
sbb
inc
call
add
neg
sbb
inc
test
jne
test
jne
mov
jmp
mov
call
test
jl
mov
test
je
call
jmp
mov
test
jne
mov
jmp
call
mov
push
mov
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
xor
cmp
mov
mov
jb
mov
jmp
mov
mov
mov
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
add
push
call
mov
cmp
mov
je
mov
jmp
mov
push
lea
call
jmp
cmp
setne
jmp
mov
jmp
mov
cmp
je
push
jmp
mov
lea
movs
movs
mov
push
movs
movs
mov
lea
jmp
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
call
ret
mov
mov
mov
xor
ret
cmp
jne
mov
mov
call
mov
push
pop
ret
push
mov
sub
lea
mov
push
call
test
je
cmp
jne
push
pop
leave
ret
xor
leave
ret
push
mov
push
mov
push
push
and
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
jmp
push
push
push
call
pop
pop
ret
call
xor
ret
push
mov
sub
push
push
mov
mov
mov
push
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
movzx
movzx
shl
xor
or
push
pop
mov
shl
cmp
je
inc
cmp
jl
or
cmp
mov
jl
cmp
jg
movzx
movzx
shl
or
push
movzx
shl
or
movzx
shl
or
mov
pop
cmp
jne
inc
cmp
jl
jmp
mov
jmp
mov
jmp
lea
mov
shl
cmp
mov
jbe
mov
push
lea
call
test
jne
inc
cmp
jb
and
and
mov
push
lea
call
test
jne
lea
lea
push
lea
push
call
test
je
cmp
jne
mov
cmp
mov
ja
jmp
mov
cmp
jne
mov
mov
add
cmp
jb
mov
mov
cmp
jbe
mov
sub
mov
mov
lea
push
pop
mov
rep
lea
call
push
pop
cmp
jbe
mov
push
lea
call
test
jne
inc
cmp
jb
inc
mov
cmp
jne
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
movzx
xor
push
mov
mov
shl
or
movzx
shl
or
mov
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
lea
push
lea
push
call
add
push
add
push
push
call
add
mov
jmp
xor
pop
pop
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
dec
je
sub
je
sub
jne
mov
push
pop
mov
shl
push
jmp
mov
xor
mov
mov
call
push
push
lea
call
jmp
mov
or
cmp
jge
mov
lea
lea
lea
call
mov
mov
mov
call
test
je
mov
mov
call
test
je
test
jl
push
mov
call
pop
jmp
mov
push
mov
call
pop
inc
jmp
test
jl
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
xor
mov
cmp
je
push
lea
call
inc
cmp
jl
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
mov
xor
call
push
push
lea
call
jmp
mov
mov
jmp
lea
lea
call
cmp
mov
jne
lea
mov
call
lea
lea
push
call
lea
lea
call
mov
mov
mov
call
cmp
jne
push
lea
call
cmp
je
push
lea
call
lea
lea
push
call
push
lea
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
call
add
adc
inc
jmp
mov
push
push
push
mov
call
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
and
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
lea
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
xor
call
add
mov
mov
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
push
mov
mov
mov
mov
mov
xor
call
push
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
mov
xor
mov
and
push
push
mov
push
mov
mov
mov
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
mov
and
push
push
lea
mov
push
mov
mov
mov
mov
lea
mov
xor
mov
call
push
push
mov
mov
xor
call
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
jmp
mov
jmp
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
push
mov
cmp
push
push
push
mov
jae
push
pop
jmp
mov
movzx
cmp
ja
mov
mov
cmp
jne
mov
lea
mov
mov
mov
mov
mov
mov
sub
lea
mov
lea
push
call
test
jne
add
mov
add
lea
sub
push
lea
mov
call
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
call
xor
cmp
mov
jbe
mov
mov
inc
cmp
mov
je
push
lea
call
cmp
jb
push
pop
push
call
pop
pop
mov
mov
pop
pop
mov
leave
ret
mov
lea
push
mov
call
jmp
push
mov
cmp
push
push
push
mov
jae
push
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
test
je
cmp
jb
mov
mov
movzx
mov
push
sub
lea
lea
mov
call
test
jne
add
mov
add
lea
sub
push
lea
mov
call
pop
pop
pop
pop
ret
push
mov
mov
mov
push
mov
lea
mov
push
call
test
jne
cmp
je
and
lea
push
push
call
xor
pop
pop
ret
push
mov
push
push
mov
push
push
and
push
pop
lea
push
mov
push
call
test
jne
movzx
test
mov
je
cmp
jbe
lea
push
push
mov
call
add
lea
push
push
mov
call
test
jne
mov
lea
lea
add
mov
adc
call
mov
cmp
je
lea
push
push
mov
call
mov
xor
pop
pop
pop
leave
ret
push
mov
push
push
lea
push
mov
push
call
test
jne
cmp
jne
cmp
jne
push
mov
call
pop
leave
ret
lea
push
push
mov
call
push
mov
push
push
push
mov
xor
lea
mov
push
call
test
jne
cmp
je
mov
test
je
test
jne
mov
lea
push
lea
push
push
call
test
jne
inc
jmp
xor
pop
pop
leave
ret
push
mov
push
push
mov
push
push
mov
lea
xor
mov
push
mov
mov
call
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
lea
mov
push
call
cmp
jne
cmp
jne
push
pop
jmp
push
lea
lea
push
call
cmp
jne
mov
call
pop
pop
leave
ret
mov
call
sub
mov
push
push
xor
mov
push
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
lea
mov
push
mov
call
cmp
jne
mov
cmp
jb
mov
call
test
jne
mov
lea
lea
push
push
push
call
add
mov
mov
mov
cmp
je
mov
cmp
ja
jb
mov
cmp
ja
mov
mov
sub
lea
mov
lea
push
call
cmp
jne
mov
add
cmp
jb
lea
test
mov
jbe
cmp
je
cmp
jae
inc
jmp
cmp
je
mov
lea
sub
call
test
jne
mov
inc
cmp
jb
add
adc
sub
add
push
push
push
call
add
xor
jmp
mov
jmp
push
pop
jmp
mov
xor
add
adc
mov
xor
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
cmp
push
jne
cmp
jne
movzx
add
cmp
jne
movzx
cmp
ja
lea
cmp
jb
cmp
jb
cmp
ja
cmp
ja
mov
pop
ret
xor
pop
ret
push
push
mov
mov
push
call
test
jne
cmp
je
and
push
mov
lea
push
call
test
jne
mov
call
test
jne
mov
xor
pop
pop
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
jne
mov
lea
lea
jmp
mov
lea
mov
call
jmp
mov
lea
mov
call
jmp
mov
lea
mov
jmp
mov
lea
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
test
je
lea
call
test
je
lea
push
lea
push
call
test
jne
and
and
lea
mov
push
call
pop
leave
ret
cmp
jae
movzx
mov
jmp
mov
push
mov
call
ret
mov
call
sub
cmp
push
mov
je
mov
push
lea
call
push
and
mov
call
push
call
pop
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
push
pop
sub
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
lea
call
jmp
call
push
jmp
push
jmp
push
jmp
cmp
sete
jmp
mov
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
jmp
mov
and
push
lea
call
jmp
sub
je
sub
je
dec
je
sub
je
dec
jne
test
je
push
push
lea
call
jmp
lea
add
call
jmp
mov
lea
call
jmp
mov
lea
push
call
jmp
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
test
je
cmp
je
xor
jmp
movzx
cmp
jne
or
ret
mov
call
sub
push
push
mov
push
push
mov
call
mov
xor
cmp
mov
mov
je
mov
lea
push
push
push
push
push
call
cmp
jne
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
lea
and
and
mov
mov
lea
lea
mov
call
test
jne
mov
test
je
mov
lea
push
push
push
call
test
jne
lea
call
and
lea
push
lea
push
lea
call
test
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
cmp
je
lea
lea
push
call
mov
push
push
push
push
mov
push
call
test
jne
mov
cmp
cdq
mov
mov
mov
mov
mov
mov
je
mov
push
cdq
pop
idiv
test
jne
mov
push
push
push
mov
call
test
mov
jne
push
or
call
push
call
pop
pop
lea
call
jmp
mov
jmp
xor
push
call
push
call
pop
mov
pop
jmp
and
lea
push
push
call
push
call
push
call
mov
pop
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
call
push
call
pop
pop
pop
ret
mov
call
push
push
push
push
mov
mov
push
and
mov
push
mov
push
call
test
mov
jne
push
lea
call
xor
jmp
mov
mov
ret
mov
mov
and
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
add
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
xor
xor
cmp
mov
mov
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
inc
jmp
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
mov
lea
mov
push
push
push
mov
mov
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
push
mov
push
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
and
mov
mov
push
mov
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
lea
mov
call
mov
test
je
mov
push
call
and
or
xor
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
test
je
jbe
cmp
jbe
cmp
jne
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
call
mov
push
mov
lea
push
push
push
push
push
call
mov
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
call
mov
jmp
push
pop
jmp
push
mov
mov
push
push
push
push
push
call
mov
test
mov
jne
mov
mov
add
xor
mov
cmp
jne
mov
cmp
je
push
pop
jmp
mov
cmp
jne
push
jmp
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
jmp
mov
not
sub
neg
sbb
and
test
je
mov
push
call
xor
mov
jmp
mov
mov
push
push
mov
call
mov
mov
test
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
inc
add
mov
mov
mov
mov
push
adc
add
pop
adc
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
jmp
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
push
xor
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
add
jmp
push
mov
push
call
push
call
pop
pop
pop
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
call
test
pop
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
mov
push
call
mov
lea
push
push
mov
push
push
push
call
test
jne
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
xor
mov
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
call
push
mov
lea
push
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
and
cmp
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
xor
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
push
mov
lea
mov
push
push
call
test
mov
jne
cmp
jne
cmp
je
mov
mov
push
call
test
je
mov
push
call
xor
mov
cmp
jne
xor
jmp
cmp
jne
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
lea
and
push
sub
pop
sub
xor
cdq
shr
sub
mov
sbb
add
mov
mov
adc
mov
mov
mov
mov
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
push
pop
cmp
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
je
mov
or
lea
jmp
cmp
je
or
lea
call
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
or
lea
call
mov
jmp
mov
mov
or
lea
call
mov
mov
cmp
jne
mov
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
cmp
jne
mov
cmp
jb
push
pop
jmp
cmp
sbb
inc
inc
push
push
mov
push
push
push
xor
push
call
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
mov
mov
mov
push
push
call
xor
cmp
jne
mov
lea
push
push
mov
mov
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
mov
mov
call
cmp
mov
mov
lea
je
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
call
lea
mov
call
lea
mov
call
mov
push
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
lea
call
call
xor
mov
cmp
mov
mov
jle
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
call
lea
mov
push
mov
push
mov
call
push
mov
mov
call
cmp
pop
jne
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
push
call
mov
pop
jmp
push
call
mov
pop
jmp
mov
push
call
pop
mov
jmp
push
mov
or
or
mov
call
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
mov
mov
push
mov
mov
lea
mov
push
call
test
jne
mov
mov
mov
add
adc
xor
pop
pop
ret
push
mov
push
movzx
mov
cmp
jb
lea
push
push
mov
call
mov
inc
mov
leave
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
mov
push
mov
lea
mov
push
push
push
push
push
call
test
jne
push
mov
call
xor
pop
pop
ret
push
push
mov
push
xor
mov
mov
mov
call
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
mov
shl
add
inc
cmp
mov
jl
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
mov
jle
cmp
jge
mov
call
mov
inc
cmp
jl
mov
and
lea
call
pop
pop
leave
ret
push
mov
push
push
push
mov
lea
call
test
je
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
pop
leave
ret
push
mov
push
push
mov
lea
call
mov
mov
mov
pop
mov
cmp
je
test
je
xor
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
push
push
mov
and
push
mov
mov
lea
mov
mov
mov
lea
push
push
push
mov
call
test
jne
cmp
jne
and
mov
mov
cmp
jne
cmp
jne
mov
jmp
xor
cmp
jne
cmp
je
test
je
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
push
mov
pop
mov
mov
and
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
and
mov
movzx
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
add
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
mov
and
add
mov
mov
lea
call
mov
add
jmp
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
push
lea
pop
push
push
push
call
add
test
je
push
lea
push
push
call
add
test
je
xor
jmp
mov
test
mov
je
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
lea
mov
push
mov
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
mov
mov
mov
lea
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
mov
mov
lea
call
mov
add
jmp
push
lea
push
push
call
add
test
jne
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
and
lea
push
push
mov
mov
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
and
lea
push
push
mov
call
test
je
lea
mov
push
push
call
test
je
mov
mov
mov
lea
push
push
call
test
je
lea
mov
push
push
call
test
jne
push
pop
jmp
mov
mov
lea
call
mov
add
test
mov
je
cmp
jae
cmp
jl
push
mov
call
mov
mov
lea
push
push
push
mov
call
test
jne
mov
cmp
jne
mov
call
push
mov
push
call
pop
test
pop
je
mov
mov
xor
jmp
mov
pop
pop
pop
leave
ret
test
mov
je
movzx
xor
mov
shr
or
mov
ret
mov
lea
test
je
inc
jmp
ret
push
mov
push
mov
push
mov
push
mov
lea
push
mov
xor
mov
and
mov
and
or
je
add
mov
adc
and
mov
jmp
mov
push
push
call
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
cmp
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
push
push
call
mov
cmp
jne
push
lea
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
call
lea
call
lea
lea
push
lea
push
mov
call
push
pop
cmp
jne
push
call
pop
jmp
cmp
jne
cmp
jne
push
mov
call
cmp
pop
jne
mov
mov
cmp
je
mov
push
call
mov
jmp
push
lea
call
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
lea
push
call
push
lea
push
push
call
mov
cmp
je
cmp
je
mov
lea
push
push
push
call
mov
cmp
jne
mov
mov
push
mov
pop
cdq
idiv
test
jne
mov
cdq
mov
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
cmp
jne
push
mov
call
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
jbe
cmp
jbe
cmp
je
cmp
jne
push
lea
call
jmp
mov
cmp
je
lea
call
lea
lea
push
call
jmp
push
lea
push
call
jmp
mov
lea
and
cmp
sete
push
call
jmp
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
add
mov
adc
and
cmp
jne
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
xor
add
mov
adc
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
xor
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
mov
mov
lea
xor
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
inc
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
mov
and
push
mov
push
push
mov
mov
mov
xor
mov
mov
push
add
push
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
push
mov
push
push
push
push
mov
mov
add
mov
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
mov
call
test
mov
jne
test
je
cmp
lea
jb
cmp
ja
cmp
ja
cmp
jbe
mov
mov
test
mov
je
cmp
jb
cmp
jae
push
lea
push
call
mov
mov
add
call
add
cmp
jb
add
sub
jne
mov
mov
cmp
jge
mov
inc
mov
push
mov
mov
push
push
call
test
jne
inc
cmp
jl
xor
jmp
push
pop
pop
pop
pop
leave
ret
call
and
sub
neg
sbb
inc
ret
test
je
xor
mov
mov
ret
movzx
ret
test
je
movzx
xor
and
mov
or
movzx
movzx
shl
and
or
shr
or
ret
mov
and
ret
mov
test
je
and
ret
and
shl
ret
test
je
mov
movzx
and
and
shl
or
movzx
movzx
shl
and
and
or
shl
or
shl
ret
mov
shr
and
ret
push
mov
sub
push
push
push
mov
mov
push
lea
mov
call
xor
cmp
jne
lea
lea
push
call
test
je
test
je
mov
cmp
jb
cmp
ja
cmp
jbe
jmp
mov
lea
push
push
push
push
push
call
cmp
jne
cmp
ja
mov
cmp
ja
push
push
mov
mov
push
push
push
call
cmp
jne
mov
call
cmp
mov
jne
mov
jmp
lea
push
push
push
call
mov
mov
sub
add
mov
lea
push
add
mov
call
cmp
jne
mov
cmp
jae
push
pop
jmp
add
cmp
mov
je
push
jmp
mov
mov
test
je
mov
mov
call
cmp
je
push
lea
call
test
je
mov
lea
dec
push
call
push
push
push
mov
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
push
mov
push
call
add
test
jne
mov
cmp
je
cmp
je
xor
jmp
mov
jmp
and
mov
test
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
mov
add
push
add
push
push
call
add
mov
pop
pop
ret
mov
call
sub
and
and
push
mov
push
push
mov
mov
mov
mov
mov
lea
add
mov
mov
call
add
xor
test
jbe
cmp
je
inc
cmp
jb
mov
test
lea
mov
jge
mov
xor
dec
push
lea
mov
mov
mov
mov
call
cmp
mov
jl
push
lea
call
mov
mov
add
mov
mov
mov
mov
lea
add
mov
mov
call
add
xor
test
jbe
cmp
je
inc
cmp
jb
sub
push
push
push
call
add
test
jl
dec
mov
mov
jmp
mov
mov
and
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
mov
mov
add
mov
call
mov
cmp
jb
mov
mov
call
add
shr
lea
cmp
ja
cmp
mov
je
movzx
add
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jae
xor
jmp
sub
mov
mov
mov
pop
pop
pop
pop
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
call
and
pop
ret
push
mov
and
lea
call
mov
test
je
mov
push
call
and
mov
and
mov
and
call
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
lea
mov
push
call
jmp
mov
test
je
push
jmp
mov
test
je
push
jmp
mov
push
add
push
lea
push
call
add
lea
mov
push
jmp
mov
test
je
push
jmp
sub
je
dec
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
lea
mov
push
mov
push
push
pop
call
jmp
mov
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
mov
mov
call
mov
mov
sub
je
sub
je
dec
je
dec
je
sub
jne
mov
mov
call
push
lea
call
jmp
cmp
jne
lea
mov
push
push
call
test
je
push
jmp
cmp
jne
mov
mov
call
jmp
push
lea
call
jmp
push
lea
mov
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
push
push
mov
push
xor
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
mov
mov
call
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
mov
mov
lea
add
or
jne
mov
lea
jmp
cmp
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
cmp
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jb
cmp
ja
mov
sub
mov
mov
add
push
mov
mov
lea
mov
mov
mov
call
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
cmp
jne
mov
mov
call
add
adc
xor
cmp
jne
cmp
jne
mov
mov
cmp
jne
xor
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
add
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
add
mov
call
test
jne
mov
mov
call
add
adc
inc
xor
jmp
push
mov
push
mov
push
call
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
jmp
and
xor
mov
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
lea
mov
push
push
lea
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
mov
mov
mov
add
mov
call
test
je
mov
push
mov
push
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
jmp
mov
mov
call
add
mov
mov
lea
push
push
adc
mov
call
test
je
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
call
cmp
jae
and
and
mov
and
mov
lea
lea
mov
push
push
push
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
cmp
jne
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
push
pop
cmp
je
mov
test
je
test
je
mov
push
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
mov
test
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
and
test
je
mov
push
call
mov
jmp
mov
mov
lea
xor
cmp
jne
mov
cmp
jne
test
jne
and
jmp
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
mov
and
push
mov
mov
mov
mov
mov
lea
add
mov
mov
call
test
je
mov
jmp
mov
mov
call
mov
lea
shr
mov
mov
mov
call
mov
cmp
jae
xor
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
lea
cmp
ja
and
mov
cmp
jae
mov
mov
cmp
lea
je
movzx
add
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jb
cmp
ja
inc
mov
jmp
push
pop
jmp
push
call
xor
pop
cmp
je
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
push
mov
mov
add
push
mov
mov
mov
call
test
jne
and
test
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
call
mov
mov
xor
jmp
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
mov
jmp
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
mov
and
test
pop
je
mov
push
call
or
lea
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
push
sub
push
push
xor
pop
sub
cdq
shr
sub
mov
sbb
add
adc
add
pop
pop
adc
ret
sub
jmp
push
mov
push
push
push
mov
push
push
mov
lea
push
push
mov
push
push
push
call
test
jne
push
lea
mov
call
test
jne
add
push
adc
push
lea
push
call
add
test
je
push
pop
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
push
and
mov
mov
lea
mov
mov
mov
mov
lea
mov
push
call
test
jne
cmp
jne
add
push
lea
lea
adc
call
and
lea
push
mov
call
mov
call
mov
call
mov
xor
test
jle
mov
cmp
jb
inc
cmp
jl
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
add
lea
push
push
pop
call
test
jne
push
pop
jmp
mov
mov
xor
pop
pop
leave
ret
push
xor
cmp
mov
jle
sub
mov
test
mov
je
inc
inc
cmp
jl
pop
ret
push
mov
push
push
lea
push
call
test
je
mov
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
leave
ret
push
mov
sub
push
mov
mov
push
lea
call
and
xor
cmp
pop
jne
inc
cmp
je
lea
lea
call
mov
mov
mov
mov
mov
cmp
je
test
je
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
push
lea
call
and
xor
cmp
pop
jne
inc
cmp
je
lea
lea
call
mov
mov
mov
mov
mov
cmp
je
test
je
xor
jmp
push
pop
leave
ret
push
mov
push
push
lea
push
call
test
je
mov
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
leave
ret
push
mov
push
mov
push
mov
push
push
mov
call
test
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
cmp
jne
push
push
mov
call
push
jmp
xor
pop
pop
pop
ret
mov
add
push
mov
mov
push
mov
push
add
adc
and
push
push
push
call
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
mov
push
xor
mov
or
mov
mov
push
lea
mov
call
cmp
jne
lea
call
mov
cmp
je
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
cdq
mov
mov
push
push
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
lea
call
lea
lea
push
lea
push
mov
call
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
mov
push
call
push
pop
jmp
cmp
jne
push
mov
call
pop
push
lea
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
mov
mov
lea
lea
push
call
push
lea
push
call
cmp
je
mov
lea
cdq
mov
mov
push
push
push
mov
call
cmp
mov
je
push
call
mov
pop
cmp
mov
je
mov
push
call
mov
jmp
push
mov
call
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
je
sub
jne
mov
lea
push
push
call
jmp
mov
mov
cmp
jl
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
cmp
je
lea
call
lea
lea
push
call
jmp
push
lea
push
call
jmp
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
je
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
jmp
test
je
mov
push
call
jmp
mov
mov
mov
add
mov
push
adc
push
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
mov
and
push
push
push
mov
mov
mov
push
mov
mov
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
mov
push
and
mov
push
push
mov
mov
mov
mov
push
mov
add
push
mov
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
push
mov
mov
mov
mov
push
call
test
jl
cmp
je
push
call
mov
jmp
sub
mov
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
test
je
mov
push
call
test
jl
test
jne
mov
jmp
xor
push
call
mov
mov
test
jne
test
je
sub
mov
mov
sub
push
push
call
pop
pop
pop
ret
mov
call
sub
push
xor
push
lea
mov
mov
mov
mov
call
push
lea
mov
call
push
lea
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
mov
mov
mov
cmp
je
test
je
push
call
jmp
sub
jmp
or
pop
ret
sub
jmp
mov
cmp
jne
push
pop
cmp
jne
cmp
sbb
inc
mov
cmp
jne
cmp
jb
push
pop
jmp
cmp
sbb
and
add
mov
cmp
jne
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
ret
mov
call
sub
push
push
mov
call
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
push
mov
mov
mov
mov
mov
pop
jne
push
pop
mov
push
lea
mov
push
lea
push
push
call
lea
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
or
cmp
push
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
cmp
jne
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
or
lea
push
push
lea
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
mov
jmp
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
xor
mov
mov
cmp
mov
jle
push
mov
mov
lea
add
push
call
test
jge
push
lea
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
lea
lea
mov
pop
rep
mov
mov
mov
mov
lea
lea
mov
add
adc
mov
mov
add
adc
inc
inc
add
mov
cmp
jl
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
cmp
mov
mov
jle
push
mov
jmp
xor
cmp
je
push
lea
call
mov
mov
mov
mov
mov
add
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
lea
push
call
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
jne
mov
cmp
jmp
mov
mov
or
je
mov
jmp
xor
push
lea
call
cmp
je
push
lea
call
push
lea
push
call
lea
lea
push
call
push
lea
call
push
lea
call
push
lea
push
call
push
lea
mov
call
push
and
call
test
pop
je
push
lea
call
push
lea
push
call
push
lea
mov
call
push
and
call
pop
inc
add
mov
cmp
jl
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
mov
and
mov
push
test
push
mov
ja
jb
cmp
jae
xor
jmp
test
ja
jb
cmp
jae
push
pop
call
push
jmp
cmp
ja
jb
cmp
jae
push
pop
call
push
jmp
push
pop
call
push
pop
push
lea
push
call
xor
cmp
je
lea
inc
inc
inc
cmp
jne
add
mov
mov
and
lea
push
call
mov
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
cmp
mov
je
cmp
jne
mov
xor
xor
cmp
jge
mov
mov
mov
cdq
add
adc
inc
jmp
push
push
lea
call
jmp
push
lea
call
mov
lea
mov
call
mov
mov
cmp
jge
mov
lea
push
call
inc
jmp
lea
lea
push
call
push
lea
mov
call
push
call
pop
lea
mov
call
lea
mov
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
mov
push
push
mov
lea
push
mov
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
movzx
mov
xor
or
movzx
shl
or
movzx
shl
or
movzx
mov
movzx
shl
or
movzx
shl
or
movzx
movzx
shl
movzx
or
xor
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
movzx
shl
or
movzx
shl
or
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
movzx
shl
or
xor
or
or
cmp
jne
cmp
jne
test
ja
jb
cmp
jae
mov
or
je
cmp
ja
jb
cmp
jae
mov
add
adc
cmp
ja
jb
cmp
ja
mov
push
push
push
mov
push
push
call
test
jne
mov
lea
cmp
lea
jl
push
mov
call
mov
mov
push
mov
call
test
jne
and
mov
xor
cmp
je
inc
cmp
jne
and
mov
lea
call
and
push
lea
call
test
jne
push
pop
jmp
mov
mov
call
test
jne
mov
lea
push
call
lea
lea
push
mov
call
push
and
mov
call
test
pop
jl
mov
push
lea
mov
call
push
lea
mov
call
lea
lea
push
mov
mov
call
push
mov
call
push
and
call
pop
test
pop
jl
mov
push
lea
mov
call
push
lea
mov
call
lea
lea
push
mov
mov
call
push
mov
call
push
and
call
pop
test
pop
jl
mov
and
mov
mov
cmp
jle
mov
mov
push
mov
lea
call
lea
mov
push
mov
call
push
mov
neg
sbb
and
inc
call
test
pop
jne
lea
call
xor
push
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
call
push
mov
call
cmp
pop
pop
jne
push
lea
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
add
lea
lea
push
call
push
lea
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
mov
add
xor
push
call
mov
lea
push
mov
call
push
mov
mov
call
push
call
push
mov
call
mov
pop
cmp
pop
jle
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
mov
jl
movzx
lea
xor
mov
mov
shl
or
movzx
shl
or
cmp
mov
je
cmp
je
movzx
movzx
xor
xor
mov
mov
mov
mov
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
push
or
or
pop
call
movzx
mov
xor
mov
xor
mov
mov
mov
mov
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
push
or
or
pop
call
movzx
movzx
mov
mov
xor
xor
mov
mov
mov
mov
shl
shl
or
or
movzx
movzx
shl
shl
or
or
xor
xor
or
or
mov
xor
mov
mov
mov
movzx
movzx
xor
sub
mov
mov
push
shl
or
movzx
movzx
shl
or
shl
shl
or
xor
or
xor
or
or
mov
pop
lea
mov
mov
rep
lea
call
mov
mov
add
lea
cmp
jle
mov
lea
push
lea
call
cmp
jle
push
lea
call
and
lea
call
inc
mov
cmp
jl
mov
xor
mov
mov
test
jle
mov
mov
cmp
je
mov
add
mov
or
je
and
inc
add
cmp
jl
xor
xor
cmp
mov
je
cmp
jle
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
mov
lea
mov
add
adc
add
adc
inc
cmp
jl
xor
or
lea
call
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
jle
mov
xor
cmp
jge
mov
mov
inc
mov
call
test
jl
mov
inc
cmp
je
mov
cmp
jl
cmp
jl
test
je
mov
mov
shr
shl
or
mov
inc
cmp
jl
test
je
mov
mov
shr
shl
or
mov
inc
cmp
jl
test
je
mov
shl
or
mov
inc
mov
cmp
jl
mov
pop
pop
pop
leave
ret
cmp
jl
cmp
jg
movsx
sub
ret
cmp
jl
cmp
jg
movsx
sub
ret
cmp
jl
cmp
jg
movsx
add
ret
cmp
jne
push
pop
ret
cmp
jne
push
pop
ret
xor
cmp
sete
dec
ret
mov
call
sub
and
push
push
push
mov
push
pop
mov
mov
cmp
jle
mov
mov
mov
push
mov
lea
call
and
lea
push
mov
call
test
je
lea
mov
push
call
mov
mov
mov
mov
call
test
push
sete
and
call
test
pop
je
mov
mov
push
mov
call
test
je
mov
jmp
xor
push
or
call
test
pop
jne
inc
inc
mov
cmp
jl
or
mov
pop
pop
pop
mov
leave
ret
mov
inc
jmp
push
mov
push
and
push
push
mov
push
mov
mov
mov
call
test
jl
mov
push
mov
call
jmp
and
and
and
push
mov
call
mov
pop
pop
leave
ret
jmp
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
push
and
call
pop
lea
call
push
mov
call
pop
pop
mov
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
je
push
pop
jmp
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
mov
and
pop
and
xor
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
jne
mov
mov
mov
push
lea
call
lea
lea
mov
call
push
lea
call
push
mov
call
jmp
lea
call
lea
mov
call
push
lea
mov
call
lea
lea
push
call
cmp
mov
je
push
lea
call
push
call
pop
lea
mov
call
lea
mov
call
jmp
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
push
push
lea
call
jmp
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
push
jmp
mov
mov
mov
push
lea
call
push
lea
push
mov
call
lea
lea
push
call
push
pop
push
pop
cmp
jge
lea
shl
inc
jmp
cmp
jge
lea
mov
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
xor
push
lea
mov
mov
mov
call
lea
push
push
mov
mov
call
mov
test
jl
mov
inc
add
mov
cmp
jne
sub
jmp
test
jne
or
test
jl
sub
lea
push
lea
push
push
call
push
lea
mov
call
push
mov
call
pop
push
push
lea
call
test
jl
push
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
lea
call
lea
call
xor
cmp
je
mov
mov
call
cmp
jne
push
jmp
push
call
jmp
mov
mov
call
cmp
jne
push
jmp
mov
mov
call
cmp
jne
push
jmp
mov
mov
call
cmp
jne
push
lea
call
push
lea
mov
mov
mov
call
lea
lea
mov
call
push
lea
call
lea
lea
push
call
push
mov
jmp
push
lea
mov
mov
mov
call
lea
lea
mov
call
cmp
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
push
lea
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
push
push
lea
push
mov
mov
call
test
je
lea
push
mov
call
test
jne
mov
jmp
push
mov
call
push
mov
call
push
mov
call
mov
call
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
jb
ja
cmp
jbe
mov
cmp
jb
ja
mov
cmp
jbe
mov
test
je
mov
sub
cdq
add
adc
mov
mov
mov
lea
push
lea
push
push
call
mov
test
jne
add
adc
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
sub
mov
sbb
mov
test
je
and
xor
inc
cmp
ja
jb
cmp
ja
xor
test
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
push
mov
call
inc
cmp
jb
jmp
mov
cmp
jb
mov
call
test
je
mov
mov
mov
inc
test
mov
mov
je
and
add
cmp
jb
mov
call
test
je
mov
mov
mov
inc
mov
movzx
jmp
and
movzx
mov
shr
add
and
movzx
shl
add
xor
cmp
ja
jb
cmp
jae
xor
cmp
ja
jb
cmp
ja
mov
push
push
call
add
push
pop
adc
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
jmp
or
lea
call
mov
jmp
push
pop
jmp
mov
mov
sub
cdq
add
adc
mov
cmp
jne
mov
cmp
jne
mov
and
call
mov
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
sub
dec
cmp
jb
cmp
je
mov
cmp
jae
add
mov
push
mov
sub
cmp
jbe
mov
sub
cmp
jbe
mov
lea
add
add
mov
mov
mov
inc
inc
dec
jne
jmp
xor
jmp
cmp
jne
xor
mov
mov
mov
mov
inc
mov
inc
cmp
jne
mov
call
dec
jne
mov
pop
pop
pop
ret
mov
mov
push
mov
mov
inc
mov
pop
cmp
jne
call
ret
push
mov
cmp
je
mov
add
call
mov
lea
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
mov
call
sub
push
push
push
mov
mov
push
mov
and
push
push
push
push
push
call
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
ret
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
mov
mov
xor
cmp
mov
jae
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
xor
jmp
add
mov
adc
mov
inc
jmp
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
push
push
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
mov
test
jne
push
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
lea
mov
call
mov
xor
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
lea
mov
add
mov
adc
inc
xor
jmp
mov
mov
mov
mov
mov
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
add
adc
mov
mov
add
mov
mov
adc
mov
mov
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
lea
mov
lea
mov
add
mov
lea
mov
adc
cmp
jne
mov
cmp
je
mov
mov
test
je
mov
push
call
and
mov
push
mov
push
call
mov
mov
test
je
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
push
mov
call
pop
mov
jmp
mov
mov
mov
push
mov
push
mov
mov
add
adc
mov
push
push
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
mov
mov
and
and
and
and
mov
mov
mov
mov
lea
mov
mov
push
mov
and
and
mov
mov
mov
mov
test
mov
pop
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
mov
push
push
push
push
push
call
test
mov
jne
mov
mov
cmp
jne
cmp
je
mov
jmp
mov
push
mov
push
push
push
push
push
call
mov
jmp
push
mov
push
mov
push
jmp
mov
cmp
jne
mov
cmp
je
mov
jmp
mov
jmp
mov
and
or
je
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
add
adc
mov
mov
or
jne
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
or
je
test
ja
jb
cmp
jb
mov
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
jmp
mov
mov
mov
inc
mov
jmp
lea
call
lea
mov
call
mov
inc
add
mov
adc
mov
add
mov
adc
xor
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
or
test
pop
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
jmp
or
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
push
mov
push
xor
test
je
mov
mov
mov
lea
cdq
sub
sar
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
or
pop
pop
pop
pop
ret
push
push
push
push
mov
xor
mov
test
je
mov
lea
cdq
sub
mov
sar
mov
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
mov
push
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
add
mov
pop
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
and
and
mov
call
mov
and
mov
mov
mov
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
push
mov
mov
push
push
mov
mov
add
push
call
test
jle
and
mov
mov
sub
add
push
pop
mov
rep
mov
call
add
dec
jne
pop
pop
mov
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
push
push
push
mov
push
mov
pop
movzx
dec
je
dec
jne
mov
jmp
mov
movzx
dec
je
dec
jne
mov
jmp
xor
mov
cmp
jne
mov
push
mov
mov
mov
pop
cmp
jne
inc
cmp
jl
movzx
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
je
xor
jmp
cmp
mov
je
lea
call
mov
mov
mov
lea
call
mov
mov
add
jmp
lea
call
mov
mov
lea
mov
call
mov
mov
add
mov
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
pop
pop
pop
pop
ret
test
je
xor
mov
mov
ret
mov
ret
test
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
ret
mov
ret
push
mov
test
je
movzx
xor
xor
mov
mov
mov
mov
push
movzx
shl
or
movzx
movzx
shl
or
pop
shl
shl
or
xor
or
xor
or
or
pop
ret
mov
mov
pop
ret
mov
test
je
cmp
je
test
jne
cmp
jne
push
pop
ret
xor
ret
push
push
movzx
push
mov
mov
mov
mov
call
cmp
mov
mov
lea
je
call
mov
lea
mov
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
jmp
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
pop
pop
pop
ret
push
mov
sub
cmp
push
push
push
mov
jb
push
lea
call
test
je
mov
mov
xor
cmp
ja
jb
cmp
ja
movzx
movzx
cdq
mov
mov
mov
mov
cdq
push
push
mov
push
push
mov
call
mov
add
adc
xor
cmp
ja
jb
cmp
ja
cmp
ja
mov
and
add
cmp
mov
mov
mov
jle
mov
lea
push
mov
push
push
call
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
cmp
je
push
call
test
pop
je
push
lea
pop
mov
rep
mov
jmp
xor
push
lea
call
movzx
inc
add
movzx
cmp
mov
jl
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
jne
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
lea
call
push
push
lea
call
jmp
mov
push
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
mov
cmp
je
push
lea
call
jmp
mov
mov
jmp
lea
mov
push
mov
movzx
push
push
pop
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
mov
push
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
mov
mov
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
add
movzx
adc
cdq
add
mov
pop
adc
pop
mov
pop
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
je
sub
je
dec
je
sub
je
sub
je
sub
je
dec
jne
push
push
lea
call
jmp
lea
push
mov
push
push
pop
call
jmp
push
push
jmp
lea
push
mov
push
push
pop
call
jmp
push
push
jmp
push
push
jmp
push
lea
push
call
lea
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
mov
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
lea
mov
call
cmp
jne
add
push
push
mov
mov
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
lea
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
push
mov
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
push
mov
lea
mov
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
push
push
mov
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
xor
and
push
push
mov
push
mov
mov
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
add
mov
mov
mov
adc
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
mov
cmp
jne
cmp
jne
movzx
sub
je
dec
dec
jne
cmp
jne
movsx
inc
inc
jmp
movsx
add
movzx
call
cmp
jl
cmp
jg
mov
movzx
call
test
mov
jl
mov
mov
mov
add
mov
mov
test
mov
je
mov
cmp
mov
jb
cmp
ja
mov
test
jne
cmp
jl
and
mov
jmp
cmp
jl
movzx
and
push
lea
pop
shl
movzx
dec
test
jne
lea
lea
shr
mov
movzx
test
mov
jne
mov
mov
jmp
cmp
je
mov
add
mov
cmp
movzx
mov
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
cmp
mov
jae
mov
mov
cmp
jne
mov
push
mov
mov
mov
pop
cmp
jne
inc
cmp
jl
add
cmp
sete
mov
mov
mov
mov
test
je
movzx
imul
movzx
mov
add
mov
mov
add
cmp
mov
jb
sub
mov
shr
mov
mov
cmp
jae
cmp
je
cmp
push
sbb
pop
and
add
shl
mov
dec
and
mov
jmp
cmp
jne
lea
cmp
mov
ja
mov
call
cmp
ja
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
movzx
movzx
shr
imul
pop
inc
shl
shr
lea
shr
ret
push
mov
sub
push
mov
and
push
mov
lea
shr
and
lea
push
push
call
mov
mov
shr
mov
inc
and
lea
push
push
lea
call
test
jne
or
mov
add
lea
and
call
mov
pop
pop
leave
ret
push
push
mov
mov
push
push
push
call
add
cmp
je
xor
test
jle
mov
cmp
jl
cmp
jg
add
mov
inc
cmp
jl
lea
test
jl
cmp
jne
dec
jns
pop
inc
pop
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
lea
mov
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
push
and
cmp
je
push
mov
call
jmp
push
call
mov
leave
ret
push
mov
sub
and
cmp
je
push
mov
call
jmp
push
lea
push
lea
call
mov
and
lea
call
mov
leave
ret
mov
push
mov
push
movzx
mov
push
push
xor
call
push
push
push
call
pop
pop
ret
push
push
mov
xor
mov
lea
mov
mov
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
call
mov
test
je
mov
push
call
and
pop
ret
push
mov
push
push
push
mov
cmp
jne
xor
jmp
cmp
je
push
push
mov
call
mov
xor
shl
movzx
mov
mov
sub
xor
call
add
mov
adc
lea
mov
mov
mov
push
push
push
call
pop
pop
test
jne
mov
add
push
push
mov
push
call
pop
leave
ret
push
mov
push
push
push
mov
test
jne
xor
jmp
mov
add
cdq
push
lea
mov
mov
mov
push
push
call
pop
leave
ret
mov
call
sub
push
push
mov
and
mov
mov
mov
lea
push
mov
call
and
mov
test
jl
mov
mov
lea
push
mov
call
push
mov
lea
mov
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
and
call
add
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
cmp
mov
jge
cmp
jg
mov
push
pop
xor
mov
mov
shl
cmp
mov
je
cmp
jge
mov
push
shl
mov
mov
mov
call
cmp
jne
mov
lea
push
call
push
lea
mov
mov
mov
call
or
or
mov
mov
mov
cmp
jne
cmp
mov
jne
mov
call
cmp
jne
cmp
je
mov
cmp
ja
cmp
jb
cmp
jae
mov
lea
shl
mov
add
push
call
cmp
jne
mov
mov
mov
lea
test
jne
mov
push
or
mov
mov
mov
inc
pop
shl
lea
add
adc
jmp
mov
jmp
mov
inc
cmp
jae
push
mov
mov
call
cmp
jne
mov
mov
lea
mov
cmp
je
cmp
jne
cmp
jg
jmp
mov
mov
and
cmp
jne
cmp
ja
cmp
jne
mov
and
je
shr
and
cmp
mov
jge
cmp
je
mov
jmp
cmp
jne
cmp
jne
dec
cmp
jne
push
lea
lea
call
push
lea
mov
call
push
lea
mov
call
lea
lea
push
lea
call
push
lea
mov
call
push
mov
call
cmp
pop
je
movzx
mov
movzx
cmp
jne
jmp
cmp
jg
push
lea
mov
mov
mov
call
push
lea
push
push
mov
call
add
cmp
jl
xor
xor
mov
mov
and
shl
add
shr
add
inc
cmp
jl
movzx
cmp
jne
lea
lea
push
call
xor
cmp
jne
mov
mov
mov
cmp
mov
mov
mov
mov
movzx
mov
jbe
movzx
shl
or
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
lea
lea
push
call
mov
jmp
push
lea
push
push
call
add
test
je
push
lea
push
push
call
add
test
je
test
jne
mov
push
mov
pop
shl
xor
xor
dec
add
adc
not
not
and
and
add
adc
lea
lea
push
call
mov
or
or
mov
mov
push
mov
call
pop
add
jmp
mov
jmp
mov
mov
cmp
mov
jge
mov
mov
test
je
mov
inc
push
mov
push
push
call
cmp
jne
mov
inc
cmp
jl
xor
push
call
pop
mov
jmp
push
pop
jmp
push
call
pop
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
test
mov
jle
mov
mov
test
je
cmp
je
mov
inc
inc
inc
inc
dec
jne
and
pop
ret
push
push
push
mov
mov
push
call
push
mov
pop
sub
lea
sub
mov
mov
inc
lea
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
call
mov
and
mov
lea
push
call
xor
cmp
jne
lea
mov
push
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
cmp
jne
movzx
push
mov
call
mov
push
lea
call
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
cmp
mov
sbb
inc
test
mov
jne
mov
mov
mov
mov
mov
mov
shl
push
call
pop
mov
push
mov
call
cmp
jne
mov
call
push
mov
call
cmp
jne
mov
cmp
jne
push
lea
call
mov
mov
cmp
jbe
sub
mov
mov
cmp
mov
jbe
mov
mov
movzx
push
mov
pop
shl
lea
shr
shl
mov
push
call
test
jne
add
lea
mov
adc
mov
cmp
lea
je
test
jbe
mov
mov
mov
add
and
mov
add
dec
jne
jmp
push
pop
jmp
xor
test
jbe
mov
mov
mov
add
and
mov
add
lea
shr
add
dec
jne
mov
add
add
test
jne
cmp
mov
sete
push
call
test
jne
mov
cmp
jb
jmp
movzx
movzx
shr
imul
push
inc
pop
shl
shr
lea
lea
shr
shl
lea
add
push
adc
call
mov
mov
push
mov
call
test
jne
mov
cmp
mov
mov
jne
test
jbe
mov
mov
mov
movzx
inc
mov
inc
add
dec
jne
jmp
and
test
jbe
and
mov
add
shr
movzx
mov
and
shl
shr
and
inc
mov
add
cmp
jb
cmp
jne
xor
test
jbe
mov
mov
add
dec
shr
add
dec
jne
mov
xor
push
mov
call
cmp
jne
mov
mov
cmp
je
push
pop
jmp
push
mov
push
push
call
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
cmp
jne
mov
test
je
and
mov
jmp
xor
movzx
cmp
jbe
xor
mov
movzx
imul
add
ret
mov
call
push
push
mov
mov
push
push
push
mov
xor
mov
mov
mov
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
lea
mov
call
mov
mov
shl
push
xor
mov
and
movzx
mov
mov
mov
and
movzx
pop
shl
mov
xor
add
movzx
adc
sub
sbb
call
lea
push
call
mov
mov
mov
test
mov
jne
test
je
and
test
je
mov
push
call
jmp
mov
push
pop
shl
mov
cmp
jb
cmp
jae
lea
lea
push
call
mov
mov
mov
cmp
ja
cmp
jbe
test
je
mov
and
test
je
mov
push
call
push
pop
jmp
mov
call
mov
test
je
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
xor
jmp
sub
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
push
mov
mov
shl
xor
add
adc
mov
mov
mov
call
pop
pop
ret
xor
pop
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
mov
mov
mov
shl
movzx
add
jmp
mov
movzx
mov
jmp
push
xor
pop
lea
mov
mov
mov
lea
rep
stos
mov
movzx
call
lea
lea
push
call
jmp
mov
cmp
je
lea
xor
push
mov
call
jmp
mov
push
pop
mov
jmp
sub
je
dec
je
dec
je
sub
jne
mov
mov
cmp
je
push
lea
call
jmp
mov
cmp
je
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
mov
push
pop
mov
shl
push
jmp
mov
movzx
mov
xor
call
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
lea
call
test
je
lea
push
lea
push
call
test
je
push
xor
push
push
push
imul
push
call
add
mov
adc
xor
add
lea
adc
mov
push
mov
mov
call
pop
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
test
jne
mov
push
mov
pop
shl
xor
xor
dec
add
adc
not
not
and
and
push
push
lea
call
jmp
test
jne
push
lea
call
jmp
mov
lea
shr
and
push
call
jmp
push
lea
push
add
call
push
lea
mov
call
push
mov
jmp
movzx
push
jmp
sub
je
dec
je
dec
je
sub
jne
lea
mov
push
call
push
lea
mov
call
push
mov
call
pop
jmp
mov
lea
push
xor
jmp
movzx
lea
xor
push
shl
jmp
movzx
mov
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
lea
mov
call
lea
mov
call
mov
test
je
mov
and
push
call
mov
jmp
mov
push
mov
call
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
call
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
test
jne
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
cmp
jne
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
mov
mov
test
mov
je
mov
push
call
and
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
mov
push
call
jmp
and
xor
mov
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
mov
push
push
mov
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
jmp
test
je
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
jmp
test
je
mov
push
call
jmp
mov
mov
push
mov
mov
pop
shl
xor
xor
push
dec
add
adc
not
not
and
and
add
pop
adc
add
adc
xor
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
cmp
jne
mov
push
lea
mov
call
mov
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
lea
push
add
push
mov
mov
push
call
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
push
mov
mov
push
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
call
mov
jmp
mov
mov
add
xor
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
call
mov
push
mov
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
mov
mov
mov
pop
ret
mov
call
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
mov
mov
mov
call
push
lea
mov
call
push
call
mov
and
pop
test
pop
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
push
mov
push
call
lea
lea
movs
movs
movs
movs
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
je
cmp
jne
push
lea
call
jmp
cmp
movzx
jne
mov
jmp
mov
mov
lea
mov
inc
cmp
je
mov
mov
inc
jmp
cmp
jne
mov
lea
call
mov
lea
shr
and
mov
call
test
mov
jne
mov
lea
call
test
mov
jne
mov
lea
call
lea
jmp
push
lea
push
call
jmp
cmp
je
cmp
movzx
jne
mov
jmp
mov
jmp
cmp
mov
je
mov
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
call
sub
push
push
xor
push
mov
mov
mov
mov
mov
mov
mov
push
pop
lea
push
mov
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
test
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
cmp
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
jne
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
mov
call
cmp
jne
cmp
ja
cmp
jbe
push
pop
jmp
mov
cmp
je
mov
lea
push
push
push
call
cmp
jne
mov
push
push
push
push
push
call
cmp
jne
mov
lea
push
mov
call
xor
cmp
jbe
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
cmp
jne
mov
mov
sub
cmp
mov
jb
mov
mov
push
mov
lea
call
cmp
jne
add
cmp
jb
push
or
cmp
pop
lea
rep
jbe
mov
mov
mov
lea
add
cmp
ja
mov
movzx
mov
xor
mov
mov
shl
or
cmp
jb
movzx
xor
mov
mov
shl
or
jne
lea
mov
mov
lea
cmp
mov
ja
movzx
lea
xor
add
mov
mov
shl
or
movzx
shl
or
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jge
mov
cmp
mov
jne
shr
and
jmp
mov
push
mov
call
pop
jmp
and
shr
mov
xor
movzx
lea
mov
cmp
jge
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
lea
call
mov
mov
cmp
mov
je
mov
push
call
jmp
mov
mov
mov
cmp
je
and
mov
add
inc
sub
lea
mov
lea
movs
movs
movs
call
mov
mov
cmp
jb
xor
mov
xor
mov
mov
cmp
sete
mov
cmp
jle
jmp
mov
push
call
pop
push
pop
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
mov
mov
mov
mov
add
cmp
je
cmp
je
mov
mov
shl
sub
push
mov
call
and
jmp
mov
mov
add
push
call
mov
lea
push
push
push
call
add
cmp
mov
setne
dec
and
inc
mov
mov
inc
mov
mov
cmp
jl
xor
mov
cmp
mov
jle
mov
jmp
push
mov
jmp
mov
mov
mov
add
mov
movzx
mov
mov
mov
mov
add
mov
cmp
je
add
sub
mov
push
push
mov
add
push
call
add
add
add
inc
mov
cmp
jl
xor
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
jmp
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
mov
push
call
test
mov
jne
push
lea
call
jmp
mov
mov
ret
mov
and
cmp
je
mov
push
call
push
pop
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
xor
xor
push
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
mov
push
mov
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
call
mov
test
jne
and
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
mov
mov
push
mov
mov
call
mov
test
je
mov
mov
jmp
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
push
mov
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
push
push
add
mov
mov
and
and
mov
mov
call
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
pop
ret
sub
jmp
push
mov
sub
push
push
mov
call
mov
push
lea
mov
call
test
jne
cmp
jne
mov
cmp
mov
je
push
pop
jmp
mov
mov
mov
mov
mov
mov
test
mov
mov
je
lea
mov
call
test
jne
movzx
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
lea
mov
call
test
jne
mov
call
neg
sbb
neg
pop
pop
leave
ret
mov
test
jne
xor
ret
push
pop
sub
shl
cmp
setb
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
xor
push
cmp
mov
mov
jbe
push
lea
push
mov
call
mov
inc
cmp
jb
pop
mov
call
neg
sbb
pop
pop
pop
neg
ret
push
mov
test
jbe
push
push
lea
mov
push
mov
call
dec
jne
pop
pop
mov
call
neg
sbb
pop
neg
ret
push
push
push
push
push
mov
mov
xor
mov
lea
push
mov
call
mov
mov
call
test
jne
movzx
mov
add
shl
or
cmp
jl
xor
pop
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
push
push
push
mov
xor
push
mov
mov
mov
and
cmp
jbe
push
lea
call
mov
mov
call
test
jne
cmp
je
push
mov
call
inc
cmp
jb
push
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
mov
call
neg
sbb
neg
pop
leave
ret
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
xor
pop
leave
ret
push
mov
sub
push
mov
mov
push
mov
lea
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
test
je
mov
mov
mov
inc
push
call
test
jne
xor
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
lea
mov
call
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
mov
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
jmp
mov
cmp
je
push
lea
call
jmp
mov
mov
cmp
je
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
lea
call
jmp
mov
cmp
je
push
push
jmp
mov
test
je
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
push
mov
mov
push
lea
mov
xor
push
push
push
push
mov
push
mov
call
test
jne
mov
lea
push
push
call
test
mov
jne
mov
lea
push
push
push
push
push
call
mov
mov
sub
mov
mov
sbb
add
mov
adc
test
mov
jne
push
lea
call
push
lea
mov
call
jmp
mov
mov
ret
mov
and
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
mov
and
push
mov
mov
lea
mov
push
call
mov
push
add
push
mov
call
mov
push
call
push
lea
call
mov
mov
call
mov
mov
jmp
mov
mov
ret
mov
and
cmp
je
mov
lea
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
test
jne
mov
jmp
cmp
je
lea
call
and
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
mov
lea
push
call
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
lea
call
lea
mov
call
cmp
mov
je
cmp
je
push
lea
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
neg
sbb
and
mov
jmp
mov
push
or
mov
mov
and
mov
mov
push
push
mov
push
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
neg
and
shr
add
lea
mov
push
call
test
je
push
jmp
mov
not
cmp
jne
mov
mov
sub
mov
cmp
jne
lea
mov
call
jmp
push
pop
lea
mov
call
mov
test
je
mov
push
call
xor
mov
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
cmp
push
push
push
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
mov
lea
lea
push
call
cmp
mov
mov
mov
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
mov
lea
mov
mov
lea
mov
call
test
mov
lea
je
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
push
lea
call
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
inc
lea
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
lea
call
push
lea
mov
call
push
call
cmp
pop
je
or
push
call
pop
lea
mov
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
cmp
jne
cmp
je
mov
mov
lea
jmp
cmp
je
mov
lea
call
lea
call
mov
jmp
lea
mov
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
call
jmp
mov
lea
mov
mov
mov
mov
call
add
mov
push
push
push
lea
push
call
jmp
cmp
je
mov
jmp
cmp
jne
mov
jmp
mov
cmp
mov
mov
je
push
lea
call
mov
mov
add
adc
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
push
call
mov
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
xor
mov
mov
push
mov
mov
mov
push
call
cmp
jne
mov
lea
push
push
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
push
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
mov
push
push
mov
mov
call
lea
push
call
mov
xor
push
mov
cmp
lea
mov
mov
sbb
and
add
mov
call
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
neg
sbb
mov
and
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
not
mov
mov
mov
mov
lea
mov
call
mov
cmp
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
mov
push
push
mov
call
cmp
mov
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
and
lea
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
add
push
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
or
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
jmp
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
push
mov
lea
call
xor
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
mov
pop
shl
add
dec
and
shr
mov
pop
ret
push
mov
cmp
jb
push
push
lea
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
jmp
or
inc
mov
push
movzx
pop
mov
sub
add
shl
or
movzx
mov
mov
shl
or
cmp
mov
jae
pop
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
mov
mov
push
mov
mov
lea
mov
push
call
test
jne
mov
mov
mov
add
adc
xor
pop
pop
ret
push
mov
push
mov
lea
push
push
push
call
test
jne
cmp
setne
pop
pop
ret
mov
call
sub
mov
push
push
push
and
lea
push
lea
mov
push
push
mov
call
test
jne
cmp
je
cmp
je
cmp
jne
cmp
je
lea
mov
push
lea
push
push
call
test
jne
cmp
je
xor
cmp
setne
jmp
mov
lea
push
push
lea
push
call
add
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
lea
ja
jae
movzx
cmp
jb
lea
mov
push
lea
push
call
test
jne
mov
lea
call
cmp
jne
movzx
lea
cmp
ja
push
lea
call
jmp
movzx
movzx
shl
or
lea
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
push
call
test
jne
mov
lea
sub
add
cmp
ja
mov
inc
lea
mov
mov
call
xor
cmp
je
mov
cmp
jb
cmp
jne
movzx
mov
cmp
jb
sub
mov
mov
mov
mov
mov
lea
push
push
mov
call
cmp
jne
add
lea
movzx
push
call
movzx
mov
push
push
call
cmp
jne
lea
lea
push
call
mov
lea
push
push
call
cmp
jne
lea
lea
call
push
or
mov
call
cmp
pop
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
pop
jmp
push
mov
mov
call
pop
mov
jmp
mov
mov
lea
ret
push
mov
push
push
push
mov
push
xor
mov
mov
mov
mov
and
cmp
jbe
mov
test
mov
je
push
mov
call
inc
cmp
jb
mov
pop
add
pop
pop
leave
ret
push
xor
xor
test
jbe
add
inc
cmp
jb
pop
ret
push
mov
push
mov
push
mov
lea
push
mov
mov
push
push
mov
push
push
push
call
test
jne
add
adc
mov
cmp
jne
mov
cmp
je
mov
jmp
xor
pop
pop
pop
pop
ret
push
xor
mov
push
mov
pop
test
je
xor
shr
dec
jne
mov
inc
inc
inc
cmp
jb
pop
ret
jmp
jmp
mov
push
push
mov
mov
test
mov
jbe
push
movzx
movzx
xor
xor
mov
mov
xor
inc
dec
jne
pop
mov
pop
pop
ret
push
mov
push
mov
push
mov
test
jne
mov
xor
mov
jmp
lea
mov
push
push
push
push
call
mov
push
lea
push
call
mov
test
je
mov
mov
mov
pop
pop
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
push
jmp
push
jmp
mov
call
push
lea
call
jmp
lea
mov
push
call
push
mov
lea
mov
call
mov
lea
mov
call
push
call
push
mov
call
mov
pop
cmp
pop
je
mov
cmp
jne
dec
push
push
lea
call
push
lea
call
push
mov
call
pop
jmp
lea
mov
push
call
cmp
je
mov
lea
call
jmp
mov
lea
call
cmp
je
lea
push
lea
push
call
test
jne
mov
mov
lea
lea
push
call
jmp
sub
je
sub
je
dec
jne
mov
call
jmp
add
push
lea
push
push
mov
call
add
lea
push
lea
call
jmp
movzx
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
and
push
mov
push
call
mov
pop
pop
ret
push
mov
call
test
je
cmp
jne
push
pop
pop
ret
xor
pop
ret
push
mov
call
test
je
cmp
jne
push
pop
pop
ret
xor
pop
ret
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
xor
ret
push
mov
push
call
test
jge
cmp
jne
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
xor
test
jle
mov
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
mov
jmp
mov
call
sub
and
lea
push
mov
push
call
and
push
push
lea
call
mov
test
je
mov
cmp
je
push
lea
call
lea
mov
push
call
mov
push
lea
mov
call
push
call
push
call
mov
pop
pop
pop
mov
mov
leave
ret
push
mov
push
mov
and
push
push
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
test
jge
mov
push
mov
and
and
and
call
mov
jmp
mov
jmp
mov
push
mov
call
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
xor
cmp
mov
jbe
mov
mov
cmp
mov
je
push
lea
call
inc
cmp
jb
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
and
push
xor
test
push
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
pop
test
jge
push
mov
call
jmp
mov
jmp
mov
push
mov
call
mov
leave
ret
xor
mov
cmp
je
add
inc
cmp
jb
mov
ret
mov
ret
mov
call
sub
mov
push
push
xor
push
mov
lea
mov
mov
call
mov
cmp
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
push
push
call
mov
cmp
jne
push
lea
call
mov
cmp
jne
lea
call
lea
lea
push
lea
push
mov
call
push
pop
cmp
jne
mov
lea
call
push
call
pop
jmp
cmp
je
mov
jmp
cmp
jne
lea
mov
call
push
mov
call
mov
pop
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
jmp
push
lea
call
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
push
mov
lea
call
push
lea
push
call
mov
cmp
je
cmp
je
mov
lea
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
push
pop
mov
mov
cdq
idiv
test
jne
mov
cdq
mov
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
cmp
je
mov
jmp
lea
mov
call
push
mov
call
pop
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
jmp
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
setne
xor
xor
cmp
mov
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
inc
jmp
mov
push
push
push
mov
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
mov
mov
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
call
cmp
je
mov
push
push
mov
call
mov
cmp
jne
mov
push
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
lea
push
push
push
mov
push
mov
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
xor
lea
mov
mov
mov
cmp
jne
mov
mov
cmp
je
jmp
mov
call
cmp
je
cmp
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
call
cmp
je
movzx
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
je
xor
jmp
push
jmp
push
jmp
push
jmp
push
pop
mov
lea
mov
push
mov
push
push
push
mov
push
push
call
mov
cmp
jne
mov
jmp
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmp
lea
je
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
jmp
call
lea
mov
call
mov
inc
add
mov
mov
mov
mov
push
adc
add
pop
adc
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
and
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
push
mov
call
test
je
cmp
je
mov
call
test
je
cmp
jne
cmp
jne
push
pop
pop
ret
xor
pop
ret
push
mov
call
test
je
mov
cmp
jb
cmp
ja
mov
pop
ret
xor
pop
ret
push
call
test
pop
je
mov
call
ret
xor
ret
jmp
mov
jmp
push
mov
cmp
push
mov
jne
xor
jmp
push
xor
xor
cmp
jle
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
mov
jmp
or
test
jl
mov
mov
inc
inc
cmp
jl
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
push
mov
mov
add
mov
and
and
lea
push
mov
call
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
and
movs
movs
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
and
cmp
push
mov
je
mov
mov
xor
cmp
setne
add
xor
mov
mov
inc
cmp
jl
mov
cmp
mov
mov
mov
jae
cmp
jae
mov
mov
mov
and
cmp
je
cmp
ja
jb
test
jae
add
call
test
je
push
pop
jmp
xor
pop
ret
mov
push
pop
push
pop
shl
cmp
je
push
pop
shl
cmp
je
inc
cmp
jle
xor
cmp
sete
mov
ret
mov
ret
mov
call
push
push
push
mov
push
xor
cmp
lea
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
push
mov
mov
call
cmp
je
cmp
lea
jne
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
push
push
call
cmp
jne
mov
or
cmp
je
mov
push
call
mov
jmp
mov
or
cmp
je
mov
push
call
mov
push
mov
lea
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
add
push
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
cmp
ja
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
je
or
mov
jmp
mov
or
test
je
mov
push
call
and
cmp
mov
sete
cmp
je
mov
lea
push
push
mov
push
call
mov
test
jne
mov
jmp
push
mov
push
call
mov
test
je
or
mov
test
je
mov
push
call
mov
jmp
mov
jmp
mov
mov
and
cmp
je
push
pop
jmp
xor
push
neg
sbb
and
push
push
mov
call
cmp
mov
je
and
mov
lea
push
push
mov
push
mov
call
mov
test
je
mov
push
call
test
jne
mov
mov
push
mov
call
test
jne
mov
mov
mov
test
je
mov
push
call
test
je
mov
or
test
je
mov
push
call
mov
jmp
mov
or
test
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
cmp
mov
je
mov
lea
call
mov
lea
call
xor
cmp
je
inc
cmp
jne
mov
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
jmp
mov
cmp
je
mov
mov
mov
and
cmp
je
push
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
push
mov
xor
push
pop
shl
cmp
je
inc
cmp
jle
push
mov
test
jne
shr
add
jmp
mov
pop
jmp
test
jne
shr
mov
mov
mov
call
xor
cmp
je
inc
cmp
jne
add
mov
and
pop
pop
ret
xor
cmp
je
inc
cmp
jne
add
mov
mov
inc
inc
test
jne
ret
push
mov
sub
push
push
mov
push
mov
lea
mov
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
mov
lea
push
lea
push
call
test
je
xor
cmp
setne
cmp
je
push
pop
jmp
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
pop
pop
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
and
mov
mov
push
mov
push
lea
push
push
lea
mov
call
test
mov
je
lea
mov
call
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
mov
cmp
setne
add
mov
lea
push
lea
push
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
lea
push
lea
push
call
test
je
push
and
lea
lea
push
push
call
cmp
mov
jne
mov
mov
test
je
mov
push
call
xor
mov
mov
push
mov
push
call
lea
mov
mov
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
mov
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
and
push
mov
mov
push
lea
mov
call
mov
lea
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
push
call
test
pop
je
push
mov
call
ret
xor
ret
jmp
mov
jmp
jmp
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
sub
push
mov
and
cmp
push
mov
push
mov
mov
mov
mov
mov
jb
movzx
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
cmp
ja
cmp
ja
cmp
ja
push
pop
cmp
jbe
mov
mov
and
sub
add
cmp
je
add
sub
mov
sub
mov
xor
cmp
mov
jae
mov
cmp
mov
jbe
cmp
jb
mov
mov
call
mov
lea
mov
call
mov
cmp
mov
jb
mov
cmp
je
cmp
jne
xor
cmp
setne
dec
and
add
cmp
mov
jb
cmp
mov
lea
jne
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
jmp
call
and
mov
lea
mov
call
and
mov
lea
mov
call
and
mov
lea
mov
call
and
mov
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
lea
push
push
lea
push
call
push
call
add
test
je
lea
mov
movs
movs
movs
movs
mov
mov
jmp
xor
push
lea
call
mov
mov
lea
call
cmp
mov
ja
test
jne
mov
and
dec
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
pop
je
push
lea
pop
mov
rep
mov
mov
jmp
xor
push
lea
call
jmp
xor
cmp
setne
dec
and
add
mov
mov
and
lea
mov
sub
cmp
jb
cmp
mov
lea
jne
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
and
mov
mov
lea
jmp
call
mov
and
lea
mov
call
mov
and
lea
mov
call
and
mov
mov
lea
call
cmp
mov
jne
and
and
jmp
mov
mov
mov
mov
push
lea
push
push
call
add
push
lea
push
push
call
mov
push
dec
mov
call
add
test
je
push
lea
pop
mov
rep
mov
jmp
xor
push
lea
call
mov
add
dec
jne
mov
mov
cmp
jne
mov
sub
add
inc
mov
cmp
jb
sub
cmp
mov
jne
xor
cmp
jne
push
pop
jmp
xor
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
jne
lea
mov
push
mov
push
push
pop
call
jmp
mov
lea
push
call
jmp
mov
lea
push
push
call
jmp
lea
mov
push
mov
push
push
pop
call
jmp
mov
mov
jmp
mov
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
je
cmp
je
cmp
jne
push
push
lea
call
jmp
cmp
jne
mov
lea
call
lea
mov
mov
call
push
mov
jmp
push
push
jmp
push
mov
push
jmp
mov
mov
mov
lea
call
cmp
mov
jne
mov
lea
call
push
lea
mov
call
push
mov
call
pop
lea
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
and
push
push
lea
push
mov
push
call
and
add
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
mov
and
mov
mov
and
mov
push
push
lea
call
and
and
push
push
mov
lea
call
cmp
mov
je
push
lea
call
lea
lea
push
call
lea
mov
push
call
push
call
push
call
pop
mov
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
push
xor
push
push
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
mov
pop
push
mov
call
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
push
pop
jmp
xor
mov
jmp
xor
jmp
mov
jmp
mov
and
mov
lea
push
lea
mov
call
test
jne
mov
mov
mov
mov
add
mov
push
push
call
neg
sbb
inc
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
push
mov
lea
mov
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
push
push
mov
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
xor
and
push
push
mov
push
mov
mov
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
add
mov
mov
mov
adc
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
sub
and
and
and
push
mov
push
lea
call
movzx
movzx
and
and
shl
lea
or
call
push
lea
call
movzx
lea
call
push
lea
call
mov
lea
and
call
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
sub
push
mov
lea
call
lea
mov
push
call
pop
leave
ret
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
mov
push
cmp
push
push
mov
jge
cmp
jge
push
lea
pop
push
push
push
call
add
add
dec
jne
mov
lea
push
call
mov
mov
push
xor
pop
call
mov
add
mov
adc
cmp
jb
ja
cmp
ja
mov
push
push
push
push
mov
push
call
test
jne
mov
push
mov
call
test
jne
cmp
jne
cmp
jne
and
lea
add
push
mov
call
test
je
inc
add
add
cmp
jl
mov
inc
test
mov
je
and
lea
mov
mov
test
je
mov
mov
mov
mov
cmp
lea
je
cmp
jne
mov
lea
cmp
jb
mov
cmp
jge
mov
inc
push
push
push
mov
push
call
cmp
je
test
jne
cmp
jb
or
mov
sub
cmp
jb
push
lea
push
push
call
lea
lea
movs
mov
add
movs
cmp
movs
movs
jne
cmp
mov
sete
mov
jmp
mov
mov
mov
mov
mov
add
add
mov
add
cmp
jae
and
sub
mov
mov
mov
mov
add
cmp
jb
push
push
push
push
mov
call
push
mov
mov
call
test
pop
je
push
lea
pop
mov
rep
jmp
xor
push
lea
call
mov
inc
add
cmp
mov
jl
xor
jmp
push
pop
pop
pop
pop
leave
ret
mov
push
mov
push
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
jne
mov
jmp
mov
test
je
cmp
je
xor
jmp
test
jbe
test
jbe
mov
call
test
jg
mov
test
jbe
or
sub
cmp
jb
push
pop
jmp
xor
pop
pop
ret
push
push
movzx
push
push
mov
mov
movzx
and
shl
movzx
or
movzx
mov
and
shl
or
cmp
jb
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
cmp
setne
mov
test
jne
and
and
cmp
jae
or
jmp
xor
cmp
setne
pop
pop
pop
pop
ret
mov
call
sub
push
mov
push
push
mov
mov
xor
push
mov
call
mov
lea
push
push
mov
push
push
push
call
cmp
jne
push
push
push
mov
push
call
cmp
jne
cmp
jne
push
pop
jmp
mov
mov
add
push
mov
pop
xor
mov
add
mov
call
cmp
mov
mov
ja
jb
cmp
jae
push
lea
push
push
call
mov
mov
sub
push
mov
sbb
and
mov
mov
call
add
test
je
push
lea
pop
mov
rep
jmp
xor
push
mov
call
mov
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
and
and
push
push
mov
and
dec
jne
mov
or
xor
mov
test
jle
mov
mov
cmp
je
test
jge
mov
inc
add
cmp
jl
jmp
or
test
jl
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
sub
jne
cmp
je
movzx
lea
call
movzx
lea
call
cmp
jl
lea
mov
cmp
je
mov
push
lea
call
jmp
push
push
jmp
push
lea
mov
mov
mov
call
lea
mov
mov
call
cmp
je
movzx
call
push
lea
mov
call
cmp
mov
jl
lea
mov
cmp
je
mov
push
lea
call
push
lea
call
push
mov
call
pop
jmp
push
push
push
push
call
push
push
lea
call
jmp
sub
je
dec
je
dec
jne
cmp
je
lea
lea
push
call
jmp
cmp
je
lea
lea
push
jmp
cmp
je
mov
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
xor
mov
cmp
je
add
inc
cmp
jb
or
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
mov
push
push
mov
push
mov
call
push
push
mov
push
mov
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
mov
and
push
push
push
mov
mov
mov
push
mov
mov
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
mov
mov
push
mov
xor
mov
mov
mov
push
push
push
push
push
push
call
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
push
and
mov
call
lea
pop
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
lea
cmp
jle
sub
mov
test
jle
push
mov
shl
mov
mov
mov
push
call
add
dec
pop
jne
pop
mov
push
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
jne
mov
lea
push
push
call
jmp
mov
lea
push
call
jmp
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
mov
push
lea
mov
call
cmp
jne
push
lea
push
push
call
add
test
jne
mov
cmp
mov
jbe
push
pop
jmp
mov
lea
push
push
push
push
push
call
cmp
jne
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
mov
mov
lea
push
push
push
mov
call
cmp
jne
cmp
jne
push
lea
call
mov
mov
cmp
je
mov
cmp
jne
dec
push
push
lea
call
mov
test
mov
jne
mov
mov
cmp
jae
push
lea
call
mov
mov
push
mov
mov
lea
push
lea
mov
call
mov
cmp
jl
mov
sub
cmp
jne
lea
push
push
lea
call
mov
mov
mov
call
push
test
sete
call
cmp
pop
je
push
mov
mov
call
mov
pop
xor
cmp
jb
cmp
jae
movzx
push
lea
lea
call
push
lea
mov
call
push
call
pop
push
call
pop
lea
mov
call
mov
and
cmp
je
mov
push
call
push
lea
call
xor
jmp
push
mov
call
inc
mov
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
mov
and
pop
and
xor
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
push
mov
push
call
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
push
push
push
mov
push
push
mov
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
lea
call
push
lea
mov
call
cmp
jne
lea
mov
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
push
call
lea
call
lea
push
push
lea
mov
call
cmp
jne
mov
push
mov
lea
push
call
cmp
mov
jne
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
lea
mov
mov
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
lea
mov
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
push
mov
push
mov
push
mov
sub
cmp
jb
xor
test
jbe
mov
mov
mov
mov
inc
cmp
jb
add
mov
pop
pop
pop
ret
xor
test
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
mov
mov
inc
inc
cmp
jb
jmp
mov
jmp
push
mov
mov
call
lea
mov
push
push
push
push
xor
push
mov
push
mov
call
add
cmp
mov
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
or
cmp
mov
jbe
cmp
jae
mov
cmp
jb
mov
call
test
je
mov
mov
inc
test
mov
mov
je
mov
and
inc
test
mov
mov
jne
mov
push
lea
call
test
jne
test
jne
mov
mov
sub
cdq
add
adc
and
mov
mov
mov
lea
mov
push
lea
push
push
call
test
jne
jmp
cmp
jb
mov
call
test
je
mov
mov
mov
inc
mov
movzx
mov
and
and
add
movzx
shl
or
mov
add
and
cmp
ja
mov
add
cmp
ja
mov
and
jmp
mov
mov
and
inc
inc
mov
mov
mov
and
mov
jne
mov
push
lea
call
test
jne
test
jne
mov
sub
cdq
add
adc
mov
mov
and
mov
lea
mov
mov
push
lea
mov
push
push
call
test
jne
dec
jne
mov
shr
cmp
ja
cmp
jae
jmp
push
pop
jmp
mov
and
push
lea
call
pop
pop
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
push
call
mov
pop
test
je
mov
push
call
pop
ret
jmp
mov
jmp
push
mov
push
mov
mov
and
cmp
jle
mov
sub
push
push
push
call
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
inc
shl
add
cmp
je
cmp
jbe
cmp
ja
push
lea
push
call
jmp
cmp
je
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
sub
je
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
push
mov
sub
push
push
mov
push
mov
xor
lea
mov
mov
push
push
push
push
push
call
cmp
jne
lea
lea
push
mov
mov
call
cmp
jne
push
pop
cmp
jb
movzx
movzx
shl
or
movzx
shl
movzx
or
movzx
shl
or
xor
mov
mov
or
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
ja
lea
lea
cmp
jb
cmp
mov
mov
mov
jbe
lea
lea
jmp
xor
movzx
xor
mov
mov
mov
movzx
shl
or
shl
mov
xor
mov
or
mov
mov
movzx
movzx
shl
or
and
shl
mov
xor
mov
or
mov
mov
movzx
shl
or
movzx
shl
or
movzx
mov
xor
mov
and
mov
shl
or
movzx
shl
or
xor
mov
mov
mov
and
movzx
shl
or
movzx
shl
or
mov
cmp
mov
jae
and
cmp
jae
cmp
ja
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
inc
mov
add
add
cmp
jb
mov
xor
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
mov
sub
mov
mov
sbb
cmp
jb
ja
mov
cmp
jbe
lea
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
sub
mov
sbb
mov
mov
mov
xor
jmp
push
pop
pop
pop
pop
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
and
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
xor
cmp
push
mov
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
shl
mov
mov
add
adc
inc
jmp
mov
push
mov
push
push
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
lea
mov
push
push
push
shl
add
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
cmp
je
mov
push
push
mov
call
jmp
mov
mov
push
push
add
mov
mov
adc
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
mov
mov
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
inc
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
mov
and
push
shl
mov
mov
push
mov
add
lea
mov
push
mov
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
call
test
pop
je
mov
and
and
mov
mov
ret
xor
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
jmp
mov
jmp
sub
jmp
push
push
mov
push
mov
cmp
jne
cmp
jne
movzx
sub
je
dec
dec
jne
cmp
jne
push
lea
push
push
call
add
test
jne
movzx
call
cmp
jl
cmp
jg
mov
movzx
call
xor
cmp
jl
mov
push
add
mov
pop
cmp
jne
inc
cmp
jl
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
movzx
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
jae
push
pop
jmp
xor
jmp
xor
pop
pop
pop
ret
push
mov
xor
push
mov
pop
shl
cmp
je
inc
cmp
jl
or
pop
ret
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
movzx
lea
cmp
pop
jbe
xor
jmp
add
push
lea
call
mov
ret
push
mov
push
push
push
mov
mov
mov
cmp
jl
push
mov
call
mov
test
jbe
mov
mov
sub
mov
mov
mov
inc
inc
dec
jne
and
mov
call
pop
pop
pop
pop
ret
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
mov
ret
push
mov
cmp
push
push
push
mov
jb
mov
mov
cmp
mov
jne
push
pop
jmp
cmp
jb
mov
cmp
mov
ja
mov
mov
movzx
movzx
test
je
lea
cmp
ja
lea
push
lea
call
cmp
je
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
cmp
mov
mov
mov
mov
je
cmp
jb
mov
mov
mov
mov
sub
jmp
cmp
jb
movzx
mov
mov
cmp
ja
cmp
ja
mov
sub
cmp
jb
push
lea
call
mov
push
add
push
push
call
mov
add
jmp
xor
pop
pop
pop
pop
ret
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
adc
mov
mov
mov
shl
cmp
mov
lea
jne
mov
cmp
jne
cmp
ja
jb
test
ja
mov
call
cmp
jbe
jmp
mov
mov
mov
inc
dec
test
je
movzx
mov
and
mov
je
cmp
ja
cmp
ja
lea
mov
movzx
cdq
mov
lea
test
mov
mov
jl
mov
push
pop
movzx
cdq
mov
mov
mov
mov
call
or
or
dec
mov
mov
jns
mov
mov
mov
mov
or
je
mov
sub
mov
mov
sub
sbb
cmp
jb
ja
cmp
jb
mov
shr
cmp
mov
ja
cmp
ja
test
mov
mov
jne
cmp
je
or
or
jmp
movsx
lea
cdq
mov
lea
test
mov
mov
mov
jl
mov
push
pop
movzx
cdq
mov
mov
mov
mov
mov
call
mov
or
or
dec
mov
mov
jns
mov
mov
sub
mov
mov
add
adc
mov
mov
cmp
mov
ja
jb
cmp
ja
mov
mov
sub
lea
mov
mov
movs
movs
movs
movs
call
mov
add
mov
adc
cmp
ja
mov
or
or
mov
mov
sub
lea
mov
mov
mov
movs
movs
movs
movs
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
xor
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
cmp
je
sub
sbb
mov
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
cmp
jb
ja
cmp
jb
push
push
push
call
mov
mov
add
add
adc
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
or
jne
mov
mov
mov
call
mov
mov
and
mov
mov
mov
lea
cmp
mov
jne
mov
cmp
je
mov
push
mov
mov
pop
shl
mov
mov
call
mov
mov
xor
sub
mov
mov
not
sbb
and
and
mov
mov
mov
not
and
mov
cdq
sub
mov
sar
je
mov
shl
add
cmp
ja
jb
mov
cmp
jae
mov
jmp
mov
mov
mov
add
cdq
sub
sar
cmp
jne
mov
mov
and
add
mov
adc
mov
test
mov
je
mov
cmp
mov
jge
shl
add
mov
cmp
ja
jb
mov
cmp
jae
mov
and
cmp
je
inc
add
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
inc
shl
add
mov
cmp
ja
jb
mov
cmp
ja
mov
inc
add
cmp
jb
jbe
and
cmp
je
mov
cmp
mov
jge
shl
mov
add
mov
cmp
ja
jb
mov
cmp
jae
mov
and
cmp
jne
inc
add
mov
cmp
jge
jmp
mov
and
mov
mov
cmp
mov
mov
jge
mov
mov
mov
add
mov
mov
mov
and
cmp
je
mov
mov
cmp
ja
jb
cmp
jae
mov
sub
sbb
add
mov
adc
call
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
mov
mov
sub
mov
sbb
mov
add
mov
adc
cmp
jb
ja
cmp
jbe
mov
mov
sub
sbb
mov
mov
mov
shl
mov
mov
push
mov
add
call
test
jne
add
mov
mov
adc
add
mov
adc
add
inc
add
mov
cmp
jl
mov
mov
push
add
pop
shl
mov
mov
mov
mov
mov
call
mov
sub
mov
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
push
mov
mov
shl
push
push
add
mov
call
mov
mov
cmp
mov
mov
mov
jae
push
push
push
call
add
cmp
jne
jmp
mov
push
pop
mov
shl
lea
and
sub
cmp
jae
mov
shl
push
add
add
push
push
call
mov
add
mov
add
adc
jmp
mov
mov
shl
add
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
sbb
add
adc
cmp
mov
jne
cmp
je
mov
mov
mov
mov
call
test
jne
mov
lea
shl
add
mov
mov
cmp
jb
ja
cmp
jbe
mov
xor
sub
sbb
not
not
and
and
mov
call
mov
mov
cmp
jb
ja
cmp
jbe
mov
mov
sub
sbb
mov
mov
xor
cmp
jb
ja
mov
cmp
jbe
mov
mov
xor
cmp
je
push
push
push
call
mov
add
jmp
mov
mov
lea
shl
add
mov
mov
call
sub
mov
sbb
mov
mov
jmp
push
pop
jmp
mov
lea
push
push
mov
push
push
call
mov
mov
add
adc
mov
test
je
mov
xor
add
adc
sub
mov
sbb
pop
pop
pop
leave
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
jbe
cmp
jb
mov
test
jne
mov
movzx
test
je
sub
mov
inc
and
inc
inc
cmp
mov
ja
sub
test
jne
mov
cmp
jne
mov
push
add
push
push
call
add
add
add
mov
jmp
add
cmp
ja
test
jne
xor
mov
xor
mov
dec
movzx
or
inc
cmp
mov
jbe
jmp
mov
test
jbe
test
jne
cmp
jae
mov
mov
mov
inc
mov
inc
inc
mov
dec
jmp
cmp
jb
mov
movzx
inc
inc
dec
dec
mov
lea
shr
test
je
inc
jmp
mov
mov
sar
and
add
lea
cmp
mov
ja
push
pop
sub
shr
cmp
jae
mov
or
sub
mov
add
test
jbe
mov
mov
mov
inc
dec
jne
add
mov
shr
cmp
ja
test
ja
add
mov
cmp
jb
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
mov
push
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
add
jmp
mov
mov
add
adc
mov
cmp
jne
mov
cmp
je
and
and
mov
mov
mov
test
je
mov
mov
xor
pop
pop
ret
push
mov
xor
push
cmp
push
je
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
je
mov
jmp
sub
sbb
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
push
add
push
push
call
add
test
je
mov
add
adc
xor
pop
pop
pop
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
xor
lea
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
lea
call
xor
lea
push
push
call
mov
cmp
jle
push
mov
inc
cmp
jge
mov
mov
mov
mov
mov
call
test
jne
inc
cmp
jl
mov
lea
sub
push
push
call
mov
cmp
jl
pop
pop
pop
ret
mov
call
push
push
push
mov
push
mov
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
sub
lea
mov
mov
push
call
and
sub
lea
mov
mov
push
call
or
call
test
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
jne
xor
jmp
push
pop
mov
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
mov
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
jge
or
cmp
je
mov
push
call
mov
jmp
cmp
jge
mov
and
mov
lea
mov
lea
cmp
jge
mov
sub
mov
lea
mov
cmp
je
inc
add
dec
jne
mov
mov
cmp
mov
jne
cmp
jne
add
lea
push
call
xor
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jne
mov
test
je
cmp
jne
push
call
pop
mov
test
mov
je
mov
call
mov
jmp
xor
and
mov
test
je
mov
push
call
mov
lea
push
mov
push
mov
add
mov
push
lea
push
mov
push
call
test
mov
je
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
and
mov
movzx
push
call
mov
test
je
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
or
mov
mov
test
je
mov
push
call
jmp
or
test
je
mov
push
call
push
pop
jmp
push
push
mov
xor
mov
push
cmp
push
mov
je
add
push
pop
shl
lea
push
call
mov
mov
push
add
pop
mov
shl
lea
push
call
or
or
lea
lea
movs
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
je
mov
call
mov
mov
mov
call
pop
pop
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
call
pop
ret
push
mov
sub
and
and
or
or
push
push
push
lea
sub
mov
mov
mov
movs
movs
movs
mov
mov
movs
call
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
add
mov
mov
adc
call
cmp
jne
cmp
jne
mov
push
pop
shl
dec
cdq
and
and
or
jne
mov
cmp
jge
mov
mov
mov
mov
movzx
push
push
push
push
call
test
je
inc
cmp
jl
jmp
mov
mov
xor
xor
mov
test
mov
jle
mov
mov
lea
mov
and
cmp
je
mov
mov
sub
mov
sbb
call
add
mov
adc
mov
add
add
dec
jne
cmp
je
add
cmp
jne
cmp
je
push
pop
pop
pop
pop
leave
ret
cmp
jne
cmp
jne
xor
jmp
mov
xor
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
push
mov
lea
mov
call
mov
mov
test
je
mov
push
call
push
mov
mov
call
push
mov
call
pop
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
mov
push
xor
push
cmp
jl
mov
mov
lea
mov
mov
lea
cmp
mov
jge
push
mov
sub
lea
mov
cmp
je
inc
add
dec
jne
xor
pop
mov
cmp
mov
jne
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
push
push
call
test
je
xor
jmp
mov
lea
or
lea
call
mov
jmp
xor
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
cmp
mov
je
cmp
jbe
cmp
je
xor
jmp
push
pop
jmp
movzx
movzx
test
jne
mov
push
pop
lea
shl
dec
dec
cmp
ja
test
je
mov
lea
cmp
jne
mov
cmp
mov
jbe
lea
mov
mov
mov
shl
cmp
lea
jne
mov
inc
add
cmp
mov
mov
jb
mov
mov
mov
cmp
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
jb
mov
cmp
jne
mov
shl
cmp
mov
jae
test
jne
cmp
ja
cmp
jne
mov
lea
call
mov
mov
and
sub
add
push
push
lea
call
test
je
cmp
jb
add
mov
or
cmp
je
sub
je
sub
je
sub
je
mov
test
je
lea
push
call
jmp
lea
lea
push
jmp
lea
call
push
lea
mov
push
call
test
je
lea
lea
push
call
push
call
pop
jmp
push
lea
push
call
test
je
lea
mov
call
mov
cmp
jb
mov
jmp
lea
mov
call
jmp
push
call
pop
mov
jmp
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
lea
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
call
push
call
pop
pop
pop
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
mov
mov
push
mov
movzx
push
mov
push
push
call
push
push
push
call
pop
pop
ret
push
mov
lea
call
lea
call
pop
ret
push
mov
call
mov
test
je
mov
push
call
and
pop
ret
mov
call
sub
push
push
mov
and
mov
mov
mov
lea
lea
push
call
and
and
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
and
cmp
jne
test
je
test
jl
mov
shr
mov
mov
mov
mov
cmp
jne
push
lea
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
inc
pop
cmp
pop
jl
lea
mov
push
mov
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
lea
push
call
jmp
lea
mov
push
jmp
mov
push
push
push
mov
mov
push
mov
and
xor
test
je
mov
mov
lea
cdq
sub
mov
mov
sar
mov
mov
cdq
cmp
jne
cmp
je
cmp
ja
jb
cmp
jae
mov
jmp
lea
cmp
jne
or
pop
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
call
mov
push
lea
call
xor
cmp
jne
lea
mov
push
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
movzx
mov
mov
call
mov
cmp
ja
jb
mov
cmp
jb
push
mov
push
call
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
push
call
mov
cmp
je
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
call
movzx
mov
cmp
mov
jge
mov
and
cmp
jmp
push
sub
pop
mov
push
shl
mov
push
push
push
push
lea
mov
call
test
je
cmp
jne
lea
call
cmp
je
lea
mov
push
push
movzx
push
push
push
push
lea
call
mov
cmp
jne
cmp
jne
push
pop
jmp
mov
mov
movzx
mov
mov
mov
mov
mov
mov
call
push
mov
mov
pop
mov
mov
call
cmp
jb
ja
cmp
ja
mov
mov
mov
call
test
mov
mov
ja
cmp
jbe
and
mov
jmp
mov
test
je
mov
lea
push
lea
push
push
call
mov
test
je
mov
and
test
jmp
mov
push
pop
mov
mov
shl
cmp
jbe
mov
and
test
je
mov
push
call
mov
jmp
push
lea
call
push
lea
call
and
and
mov
test
je
mov
cdq
mov
mov
and
xor
or
jne
mov
lea
push
lea
push
push
call
mov
test
jne
mov
mov
sub
mov
sbb
mov
jne
cmp
jae
mov
mov
cmp
jb
mov
mov
push
call
mov
test
jne
mov
add
adc
cmp
ja
mov
mov
mov
shl
lea
add
call
mov
lea
mov
mov
sub
neg
sbb
not
and
lea
push
push
movzx
push
push
push
call
test
je
lea
lea
push
call
lea
mov
call
mov
inc
lea
shl
cmp
jbe
mov
jmp
mov
and
test
je
mov
push
call
or
lea
call
mov
jmp
and
cmp
jle
mov
mov
mov
mov
mov
mov
or
je
mov
mov
and
xor
cmp
ja
jb
mov
cmp
ja
mov
shr
mov
cmp
jne
mov
or
jne
mov
jmp
xor
mov
and
je
test
je
test
je
jmp
test
jne
test
je
xor
test
je
push
mov
call
inc
mov
cmp
jl
xor
xor
cmp
jle
mov
mov
call
inc
cmp
jl
cmp
mov
jle
mov
mov
mov
cmp
jne
mov
or
jne
xor
cmp
mov
mov
jle
mov
mov
mov
cmp
je
mov
push
pop
mov
cmp
jle
cmp
jle
mov
mov
inc
shr
test
je
lea
call
lea
lea
push
mov
call
mov
or
mov
mov
mov
mov
mov
mov
or
lea
mov
lea
push
call
push
mov
call
pop
and
cmp
jle
lea
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
cmp
jne
mov
mov
call
test
je
push
lea
call
push
lea
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
inc
push
mov
call
inc
pop
mov
cmp
jl
inc
mov
cmp
jl
lea
call
inc
mov
cmp
jl
mov
and
test
je
mov
push
call
xor
or
lea
call
mov
jmp
mov
and
test
je
mov
push
call
jmp
lea
mov
call
mov
and
test
je
mov
push
call
or
lea
call
push
pop
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
mov
lea
push
lea
call
add
lea
push
call
mov
call
mov
call
pop
pop
pop
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
push
call
pop
ret
mov
call
push
mov
mov
push
push
mov
mov
push
lea
mov
mov
push
and
mov
push
mov
mov
push
movzx
push
push
push
call
mov
mov
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
xor
mov
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
dec
jne
xor
cmp
jge
mov
mov
cmp
jne
push
lea
mov
mov
mov
call
mov
lea
mov
push
cdq
sub
mov
mov
sar
call
push
lea
call
push
mov
call
pop
jmp
inc
jmp
mov
push
pop
jmp
mov
push
pop
shl
lea
push
call
jmp
push
push
lea
call
jmp
movzx
mov
mov
call
push
push
jmp
push
lea
call
mov
xor
cmp
jge
mov
mov
cmp
jne
mov
mov
push
push
lea
call
test
je
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
push
mov
jmp
inc
jmp
cmp
je
push
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
lea
push
call
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
test
je
cmp
jne
mov
xor
jmp
cmp
je
mov
mov
jmp
mov
mov
push
push
lea
call
jmp
test
je
cmp
je
mov
mov
jmp
test
setl
push
lea
call
jmp
push
lea
add
push
call
test
mov
jne
mov
jmp
cmp
jae
mov
test
je
lea
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
push
mov
call
pop
jmp
push
lea
push
jmp
mov
sub
je
dec
je
sub
je
dec
jne
test
je
push
movzx
push
mov
push
push
call
push
lea
call
jmp
push
jmp
push
lea
push
jmp
push
lea
push
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
lea
mov
call
lea
mov
call
mov
test
je
mov
and
push
call
mov
jmp
mov
push
mov
call
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
call
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
mov
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shr
test
jne
mov
mov
mov
mov
mov
call
add
adc
inc
jmp
push
mov
push
mov
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
shl
lea
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
mov
mov
test
mov
je
mov
push
call
and
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
mov
xor
cmp
jge
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
push
push
call
mov
mov
test
mov
jne
test
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
push
lea
call
mov
test
je
mov
push
call
and
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
push
movzx
push
push
push
push
call
push
mov
pop
cmp
jne
mov
jmp
test
je
mov
mov
test
je
mov
push
call
jmp
cmp
je
push
mov
mov
push
push
push
push
push
call
test
mov
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
test
mov
je
mov
push
call
mov
jmp
and
mov
mov
test
je
mov
push
call
mov
test
jne
mov
xor
jmp
cmp
je
mov
mov
jmp
mov
mov
add
adc
test
je
mov
mov
jmp
mov
xor
add
mov
adc
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
mov
call
pop
mov
jmp
test
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
cmp
je
mov
mov
jmp
mov
xor
mov
ret
mov
mov
mov
mov
xor
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
push
mov
push
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
mov
call
mov
pop
test
mov
je
mov
push
call
lea
mov
mov
mov
mov
call
and
mov
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
jmp
mov
jmp
push
push
push
mov
call
mov
mov
shl
add
lea
movs
movs
movs
movs
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
lea
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
lea
push
call
lea
xor
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
pop
mov
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
lea
push
lea
call
lea
lea
push
mov
call
push
add
lea
pop
rep
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
cmp
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
push
mov
mov
dec
push
mov
mov
sub
push
push
pop
mov
call
cmp
jg
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
push
push
push
mov
mov
lea
mov
mov
cmp
jg
jge
push
lea
lea
mov
lea
call
test
jle
mov
push
lea
lea
call
test
jge
mov
mov
mov
shl
jmp
mov
mov
pop
pop
pop
leave
ret
mov
call
push
mov
mov
mov
call
test
jge
or
jmp
mov
mov
call
mov
neg
sbb
neg
push
call
push
call
pop
mov
pop
pop
mov
mov
leave
ret
sub
jmp
mov
mov
mov
mov
mov
ret
mov
cmp
je
xor
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
mov
movzx
cmp
je
cmp
jne
mov
cmp
mov
mov
mov
mov
mov
mov
sete
mov
mov
test
mov
je
mov
mov
jmp
mov
xor
mov
mov
mov
lea
mov
mov
mov
lea
push
call
lea
lea
push
call
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
neg
sbb
and
add
mov
mov
add
mov
lea
cmp
je
xor
jmp
cmp
mov
jbe
lea
add
cmp
jae
push
mov
call
inc
add
mov
add
cmp
jb
mov
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
mov
mov
lea
call
and
push
mov
call
push
call
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
cmp
mov
jg
push
lea
call
push
mov
push
push
push
call
mov
mov
add
xor
cmp
pop
je
inc
cmp
jne
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
lea
inc
inc
cmp
jae
sub
push
call
mov
mov
mov
mov
inc
mov
mov
and
inc
pop
ret
push
push
mov
mov
cmp
jne
push
call
push
pop
mov
mov
lea
inc
inc
cmp
jae
sub
push
call
mov
mov
mov
add
pop
pop
ret
mov
call
sub
cmp
push
push
push
mov
jb
mov
mov
cmp
mov
jae
lea
cmp
ja
test
jne
mov
lea
lea
push
call
test
je
mov
cmp
ja
cmp
ja
movzx
add
push
lea
lea
push
call
test
je
movzx
and
add
cmp
mov
jbe
mov
add
sub
lea
call
mov
and
add
cmp
ja
push
lea
call
mov
mov
add
mov
cmp
jbe
mov
lea
lea
push
call
push
or
call
movzx
inc
add
cmp
pop
jb
mov
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
push
mov
push
push
push
mov
test
je
lea
call
lea
mov
push
call
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
mov
ja
je
cmp
ja
je
dec
je
sub
je
dec
dec
je
sub
je
dec
dec
je
dec
jne
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
cmp
jne
push
lea
call
jmp
mov
lea
mov
call
jmp
mov
mov
cmp
jl
push
lea
call
jmp
mov
push
jmp
sub
je
dec
je
sub
je
dec
je
dec
je
dec
jne
mov
lea
lea
jmp
mov
lea
movzx
movzx
mov
mov
lea
jmp
mov
push
jmp
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
push
jmp
mov
lea
lea
jmp
lea
cmp
ja
jmp
mov
lea
lea
call
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
call
jmp
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
ret
adc
repnz
div
add
loopne
add
jmp
add
mov
add
add
add
sbb
add
aaa
repz
dec
repz
pop
repz
push
add
jnp
add
mov
call
sub
lea
push
mov
push
call
and
mov
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
movzx
call
mov
movzx
and
lea
call
push
mov
lea
mov
call
mov
push
mov
mov
call
push
call
push
call
push
call
mov
mov
add
mov
pop
pop
leave
ret
push
mov
sub
and
push
mov
push
pop
mov
push
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
test
push
push
mov
je
xor
push
lea
mov
mov
mov
call
lea
mov
push
mov
and
mov
push
call
test
jne
mov
cmp
jne
mov
push
call
jmp
cmp
jle
mov
cmp
jne
cmp
jne
add
lea
push
lea
push
push
call
push
lea
mov
call
push
mov
call
pop
mov
lea
push
call
push
call
pop
jmp
push
or
call
pop
mov
lea
call
mov
lea
push
call
mov
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
lea
lea
push
call
and
push
lea
call
cmp
jne
push
lea
mov
push
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
cmp
jl
mov
cmp
mov
je
cmp
jbe
cmp
ja
push
push
jmp
push
lea
mov
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
jmp
mov
cmp
jge
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
dec
je
jmp
push
push
jmp
push
push
lea
call
jmp
lea
call
jmp
cmp
je
mov
jmp
mov
lea
call
jmp
sub
je
sub
je
dec
jne
cmp
je
push
lea
call
jmp
cmp
je
lea
push
push
mov
push
pop
call
jmp
push
jmp
mov
lea
shl
add
sub
je
sub
je
dec
jne
push
push
jmp
mov
push
add
push
jmp
push
lea
mov
push
call
mov
mov
cmp
jae
mov
cmp
je
push
lea
call
jmp
push
lea
push
mov
call
push
lea
call
push
lea
mov
push
call
cmp
je
mov
cmp
jne
push
jmp
cmp
jne
push
lea
call
push
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
and
mov
xor
mov
cmp
je
push
mov
xor
pop
div
mov
mov
imul
cmp
jne
cmp
ja
cmp
mov
jle
mov
mov
mov
mov
mov
mov
cmp
jae
mov
add
mov
add
cmp
jbe
inc
add
mov
cmp
jl
jmp
mov
sub
add
mov
cmp
jne
xor
jmp
xor
mov
mov
mov
push
lea
mov
call
mov
mov
mov
push
mov
xor
push
push
push
push
call
test
je
mov
jmp
push
mov
mov
call
test
jne
xor
cmp
jle
push
lea
call
cmp
je
lea
call
mov
lea
mov
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
mov
pop
mov
mov
pop
mov
mov
mov
mov
mov
mov
add
cmp
lea
mov
jbe
mov
lea
push
lea
call
mov
mov
push
add
and
call
pop
inc
cmp
jl
xor
push
mov
call
pop
mov
jmp
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
push
pop
mov
test
mov
jne
mov
cmp
jae
sub
mov
cmp
jb
mov
add
shr
movzx
cmp
mov
jb
mov
push
xor
inc
mov
inc
mov
cmp
mov
jbe
jmp
mov
mov
lea
mov
mov
push
call
inc
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
push
test
mov
jne
mov
cmp
jae
sub
cmp
mov
jb
mov
call
mov
add
movzx
movzx
mov
add
add
mov
shr
cmp
jb
lea
lea
push
push
call
test
je
and
add
test
mov
jbe
mov
add
add
mov
mov
mov
cmp
mov
sbb
neg
shr
cmp
jne
push
mov
mov
push
call
inc
cmp
jb
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
xor
cmp
push
push
mov
jle
mov
mov
mov
and
mov
shl
mov
shr
add
mov
test
jne
or
inc
inc
cmp
mov
jl
mov
pop
pop
pop
ret
xor
jmp
cmp
jb
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
ret
mov
call
sub
test
push
push
push
mov
jne
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
cmp
jne
cmp
jge
xor
mov
mov
mov
mov
mov
lea
lea
push
mov
call
push
or
mov
mov
call
pop
mov
mov
mov
mov
lea
shl
xor
mov
mov
sub
cmp
jb
mov
movzx
inc
inc
test
je
mov
lea
sub
cmp
jb
mov
lea
lea
call
lea
push
call
and
pop
test
mov
jbe
mov
mov
mov
push
call
inc
mov
cmp
jb
mov
push
call
test
jbe
mov
mov
mov
push
call
inc
inc
dec
jne
mov
push
call
mov
push
call
inc
cmp
jl
xor
cmp
sete
mov
pop
pop
pop
mov
leave
ret
xor
jmp
mov
call
sub
push
mov
mov
push
mov
push
mov
mov
mov
cmp
mov
ja
mov
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
cmp
jne
mov
push
push
push
push
mov
push
call
cmp
jne
push
lea
call
xor
cmp
jbe
cmp
mov
mov
je
mov
lea
push
push
mov
push
call
cmp
jne
mov
mov
sub
cmp
mov
jb
mov
mov
push
mov
lea
call
cmp
jne
add
cmp
jb
push
lea
call
push
lea
call
mov
lea
mov
push
push
mov
call
cmp
je
mov
jmp
cmp
mov
mov
mov
mov
jle
mov
mov
test
lea
mov
je
mov
mov
mov
mov
mov
mov
lea
and
push
push
mov
mov
call
mov
cmp
jne
cmp
mov
jle
mov
mov
test
lea
je
mov
mov
mov
mov
mov
lea
mov
push
mov
and
mov
push
call
cmp
jne
mov
cmp
mov
mov
mov
mov
mov
jle
mov
cmp
jge
mov
mov
lea
mov
test
jne
mov
cmp
jae
sub
cmp
jb
mov
add
mov
mov
mov
mov
mov
mov
cmp
jne
test
je
cmp
je
mov
mov
lea
shl
cmp
je
and
mov
and
mov
mov
sub
cmp
jbe
mov
lea
cmp
jbe
mov
cmp
jb
mov
cmp
ja
sub
cmp
jb
mov
add
cmp
jne
push
mov
lea
call
mov
jmp
cmp
jne
push
mov
lea
call
jmp
cmp
jne
cmp
je
push
push
push
mov
push
call
mov
sub
lea
mov
push
pop
mov
rep
lea
call
inc
mov
cmp
jl
xor
lea
mov
call
inc
mov
cmp
jl
and
lea
call
inc
mov
cmp
jl
cmp
je
cmp
je
xor
cmp
jle
xor
mov
add
cmp
jne
and
inc
add
cmp
jl
cmp
mov
jle
mov
mov
mov
cmp
je
or
mov
mov
mov
sub
lea
mov
mov
movs
movs
lea
movs
call
xor
inc
mov
cmp
jl
push
lea
call
mov
push
pop
push
pop
shl
cmp
je
inc
cmp
jle
or
cmp
jl
push
pop
shl
mov
dec
lea
not
and
mov
cmp
jae
cmp
ja
lea
call
mov
mov
cmp
mov
jae
mov
cmp
jne
inc
cmp
jb
cmp
jne
mov
mov
push
mov
add
mov
mov
add
mov
sub
mov
lea
mov
mov
call
lea
lea
push
mov
mov
call
push
call
pop
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
pop
jmp
push
pop
jmp
mov
jmp
push
pop
lea
mov
call
and
lea
call
or
lea
call
mov
jmp
lea
mov
call
and
lea
call
or
lea
call
push
pop
jmp
mov
push
push
mov
lea
shr
push
call
push
push
push
call
add
pop
pop
ret
push
mov
sub
push
push
mov
mov
push
push
lea
call
test
je
mov
test
jge
neg
mov
mov
mov
cmp
ja
cmp
jg
cmp
jne
cmp
ja
cmp
jne
cmp
jne
movzx
push
call
mov
and
lea
mov
sub
push
mov
mov
pop
jmp
xor
pop
pop
leave
ret
mov
imul
add
shr
add
shr
imul
shl
ret
push
mov
sub
push
push
push
mov
push
lea
push
call
test
je
mov
test
jge
neg
mov
cmp
ja
cmp
jg
push
pop
cmp
jne
cmp
jne
movzx
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
test
jne
cdq
sub
mov
sar
cmp
mov
ja
cmp
jg
mov
push
mov
call
mov
mov
push
mov
call
add
xor
cmp
jae
mov
mov
shl
mov
and
and
and
lea
push
mov
mov
mov
pop
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
or
mov
mov
push
lea
mov
call
mov
mov
push
mov
pop
push
mov
call
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
lea
mov
call
cmp
jne
add
push
mov
push
call
test
je
lea
mov
push
push
call
cmp
jne
cmp
je
lea
call
push
lea
mov
call
mov
mov
mov
mov
lea
add
mov
mov
cmp
jbe
mov
lea
lea
push
call
push
and
call
pop
cmp
je
mov
mov
and
je
mov
push
sub
mov
push
push
mov
push
push
call
cmp
jne
push
call
lea
mov
mov
mov
call
mov
mov
lea
mov
push
mov
call
cmp
jne
mov
xor
cmp
jbe
mov
cmp
jne
inc
cmp
jb
cmp
jae
cmp
jae
add
jmp
mov
add
test
je
cmp
jae
mov
mov
cmp
jbe
cmp
jb
cmp
jae
lea
call
push
lea
mov
call
mov
mov
mov
push
lea
push
shl
mov
mov
xor
xor
add
adc
push
push
push
call
cmp
je
mov
jmp
push
lea
mov
call
cmp
jne
cmp
jb
push
pop
push
call
pop
jmp
mov
mov
add
lea
mov
mov
mov
mov
add
cmp
jbe
mov
lea
lea
push
call
push
and
call
pop
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
xor
cmp
jb
ja
cmp
ja
cmp
ja
jb
cmp
jb
mov
mov
lea
push
lea
call
push
push
lea
mov
call
mov
mov
cmp
mov
mov
mov
jle
mov
mov
mov
cmp
jbe
lea
call
mov
push
sub
lea
mov
mov
mov
mov
mov
mov
call
mov
inc
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
lea
push
call
push
mov
mov
call
pop
mov
mov
add
cmp
jb
cmp
jb
mov
inc
mov
cmp
jl
mov
lea
mov
call
and
lea
call
xor
mov
cmp
mov
mov
mov
mov
mov
jle
mov
mov
cmp
mov
mov
mov
je
mov
mov
call
test
jne
cmp
jne
push
mov
push
push
call
xor
cmp
jne
mov
lea
call
push
lea
mov
call
push
and
call
cmp
pop
mov
jle
mov
mov
add
cmp
je
mov
or
mov
mov
cmp
je
cmp
jbe
mov
mov
xor
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
ja
cmp
jb
mov
mov
sub
lea
mov
lea
movs
movs
movs
call
mov
inc
add
mov
cmp
jl
mov
mov
cmp
jbe
mov
mov
mov
push
pop
shl
cmp
je
inc
cmp
jle
or
test
jl
push
pop
shl
dec
add
not
and
cmp
jbe
lea
call
mov
and
add
push
mov
mov
mov
add
sub
lea
mov
mov
mov
mov
call
and
lea
push
lea
mov
call
push
and
call
pop
jmp
mov
jmp
cmp
jne
mov
call
or
or
cmp
je
mov
mov
xor
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
lea
mov
lea
movs
movs
movs
call
inc
mov
cmp
jl
cmp
ja
cmp
jb
push
push
push
push
call
cmp
ja
jb
cmp
jae
or
xor
xor
cmp
jle
mov
add
cmp
jge
cmp
jge
mov
mov
mov
mov
mov
call
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
xor
jmp
push
pop
push
mov
call
pop
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
lea
push
mov
mov
call
test
mov
jne
mov
test
je
and
mov
mov
mov
mov
cmp
ja
add
cmp
jae
mov
sub
and
mov
inc
dec
jne
xor
test
jbe
movzx
add
mov
shr
add
and
inc
inc
mov
cmp
jb
add
cmp
jne
jmp
push
mov
call
mov
pop
jmp
mov
mov
push
add
mov
mov
mov
call
pop
xor
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
push
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
lea
call
lea
call
push
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
mov
call
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
xor
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
lea
lea
mov
cmp
jl
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
add
jmp
lea
shl
add
mov
add
add
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
cmp
mov
je
mov
cmp
jne
mov
push
push
mov
mov
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
lea
push
mov
add
push
call
mov
cmp
sete
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
lea
mov
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
and
push
mov
lea
mov
mov
push
push
push
call
mov
test
jne
mov
mov
lea
mov
lea
mov
mov
mov
mov
test
jl
mov
cmp
mov
mov
mov
jne
cmp
je
mov
push
mov
push
call
mov
test
jne
mov
test
je
mov
push
jmp
mov
test
jge
mov
xor
cmp
mov
mov
jne
cmp
je
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
xor
and
push
push
mov
push
mov
mov
mov
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
add
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
test
je
mov
push
call
and
cmp
je
mov
neg
sbb
and
add
jmp
and
jmp
lea
shl
add
mov
add
cmp
mov
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
mov
sub
cmp
jb
mov
cmp
ja
sub
cmp
jb
mov
test
je
mov
test
je
push
lea
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
mov
lea
call
mov
test
je
mov
mov
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
mov
inc
add
mov
mov
push
pop
adc
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
mov
push
mov
xor
push
mov
mov
lea
push
mov
mov
cmp
lea
mov
mov
mov
jge
cmp
jge
mov
push
push
push
mov
push
call
jmp
push
call
pop
xor
cmp
je
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
xor
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
mov
test
jl
mov
mov
lea
push
call
mov
push
mov
mov
push
push
call
add
jmp
mov
mov
lea
lea
mov
shl
add
mov
mov
sub
cmp
mov
jb
mov
cmp
ja
mov
sub
cmp
jae
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
push
pop
jmp
mov
test
jne
push
call
xor
pop
cmp
je
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
push
and
and
add
lea
mov
mov
mov
call
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
add
push
mov
lea
call
mov
push
lea
mov
push
push
call
mov
mov
push
mov
mov
add
add
push
push
call
mov
add
mov
push
mov
call
mov
and
test
mov
mov
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
push
lea
mov
mov
call
push
call
push
lea
mov
call
lea
add
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
push
mov
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
push
push
mov
call
mov
push
pop
lea
lea
shl
add
rep
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
push
push
mov
mov
add
mov
mov
lea
mov
push
mov
and
and
mov
call
mov
mov
pop
pop
ret
mov
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
push
push
mov
cmp
ja
mov
lea
cmp
jae
lea
push
call
pop
pop
ret
mov
call
push
push
push
mov
sub
mov
mov
push
call
and
sub
mov
mov
push
call
or
call
mov
mov
pop
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
push
lea
lea
mov
call
test
je
or
jmp
lea
lea
call
neg
sbb
inc
mov
push
call
push
call
pop
mov
pop
pop
mov
mov
leave
ret
mov
push
mov
cmp
jb
jne
mov
cmp
jb
xor
pop
ret
push
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
push
pop
ret
xor
ret
sub
jmp
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
lea
call
test
jne
cmp
jne
mov
mov
mov
mov
movzx
mov
and
inc
movzx
mov
mov
shr
and
inc
mov
mov
shr
shr
cmp
mov
mov
ja
cmp
jb
and
cmp
jbe
push
pop
jmp
add
lea
cmp
jl
push
mov
call
mov
push
mov
push
mov
call
and
mov
mov
add
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
jne
push
lea
call
mov
lea
mov
mov
add
push
call
push
mov
lea
call
push
mov
lea
call
push
lea
call
cmp
jb
mov
cmp
je
push
mov
lea
call
push
lea
call
push
mov
jmp
mov
lea
mov
call
cmp
je
lea
lea
push
call
jmp
mov
lea
push
call
jmp
mov
cmp
je
push
lea
push
call
jmp
mov
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
push
call
mov
lea
call
lea
mov
push
call
pop
leave
ret
mov
push
add
push
mov
call
ret
mov
call
push
push
push
push
mov
and
push
mov
mov
lea
mov
push
call
lea
lea
push
push
call
mov
jmp
mov
mov
ret
mov
and
cmp
jne
push
lea
call
jmp
mov
lea
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
xor
div
xor
mov
mov
mov
div
pop
ret
mov
push
mov
imul
imul
add
sub
mov
call
pop
ret
push
mov
mov
mov
lea
xor
cmp
jb
cmp
jae
neg
and
mov
mov
call
mov
shl
movzx
shl
or
shl
mov
jmp
pop
ret
mov
cmp
je
mov
inc
mov
ret
jmp
shr
mov
push
mov
push
mov
xor
div
cmp
jae
push
xor
call
xor
jmp
mov
mov
sub
push
call
push
pop
pop
pop
ret
mov
call
mov
call
push
push
xor
push
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
push
mov
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
lea
call
mov
lea
push
mov
call
test
jne
and
lea
call
mov
or
cmp
jmp
mov
mov
mov
mov
mov
call
mov
test
mov
je
push
call
pop
mov
test
mov
je
mov
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
push
lea
mov
call
test
jne
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
mov
push
pop
cmp
mov
je
cmp
jne
cmp
ja
cmp
mov
mov
mov
jne
lea
call
jmp
push
lea
call
mov
lea
mov
mov
xor
and
mov
mov
mov
mov
mov
lea
push
call
test
je
cmp
jne
xor
cmp
jne
mov
sub
cdq
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
jne
mov
lea
lea
call
cmp
mov
jne
test
jl
mov
mov
inc
cmp
mov
jb
jmp
xor
mov
lea
call
cmp
mov
jne
test
jl
mov
mov
inc
cmp
mov
jb
add
mov
mov
mov
adc
sub
xor
cdq
add
mov
adc
add
adc
mov
test
mov
je
push
mov
call
mov
test
jne
xor
cmp
jl
mov
sub
cdq
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
cmp
jmp
cmp
sete
test
je
mov
mov
cmp
je
mov
jmp
mov
test
je
mov
push
call
and
push
mov
push
call
mov
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
lea
call
mov
lea
mov
call
lea
call
mov
pop
ret
push
push
mov
mov
mov
lea
call
mov
lea
pop
pop
jmp
mov
push
shl
cmp
jne
add
call
jmp
add
call
neg
sbb
neg
ret
cmp
mov
jne
mov
add
call
jmp
mov
add
call
neg
sbb
neg
ret
push
mov
push
push
and
and
or
pop
mov
call
mov
movzx
shl
or
dec
mov
jne
cmp
pop
sbb
pop
neg
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
and
mov
mov
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
jmp
mov
jmp
sub
jmp
push
mov
sub
push
push
mov
push
lea
call
test
jne
lea
push
push
lea
push
call
mov
push
movzx
mov
mov
mov
xor
mov
or
movzx
mov
xor
mov
or
mov
lea
push
lea
push
call
movzx
xor
add
mov
or
movzx
mov
xor
mov
or
lea
mov
call
test
je
cmp
jb
cmp
push
pop
je
cmp
jne
mov
lea
push
push
push
push
push
call
jmp
cmp
jne
lea
mov
call
test
jne
lea
call
test
je
mov
mov
shl
add
lea
push
push
push
push
push
call
test
jne
mov
xor
and
or
je
mov
lea
push
mov
push
mov
push
push
pop
call
add
adc
push
push
push
push
call
sub
sbb
push
push
push
call
pop
test
jne
lea
mov
call
test
jne
lea
call
test
je
mov
shl
add
cmp
jne
mov
jmp
mov
lea
push
push
cdq
push
push
push
call
jmp
push
pop
pop
pop
leave
ret
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
xor
ret
cmp
jne
cmp
jne
cmp
jne
push
pop
cmp
je
xor
ret
push
mov
sub
push
mov
push
lea
call
test
jne
lea
push
push
push
call
movzx
movzx
shl
or
add
movzx
shl
or
movzx
shl
or
movzx
mov
movzx
shl
or
movzx
shl
or
movzx
shl
or
mov
xor
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
jne
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
mov
push
call
mov
mov
call
test
jne
mov
lea
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
sbb
mov
mov
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
xor
mov
mov
cmp
mov
je
cmp
jbe
cmp
ja
mov
lea
push
push
call
jmp
mov
cmp
mov
je
xor
mov
mov
inc
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
jmp
cmp
jne
cmp
jne
cmp
mov
je
mov
xor
cmp
je
inc
cmp
jne
lea
mov
mov
inc
inc
cmp
jne
lea
lea
push
call
push
lea
call
or
lea
call
mov
xor
pop
mov
leave
ret
mov
call
push
push
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
push
push
push
mov
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
mov
call
cmp
mov
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
push
mov
mov
push
and
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
call
test
pop
je
mov
and
and
mov
mov
ret
xor
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
jmp
mov
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
je
sub
jne
mov
push
jmp
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
mov
cmp
je
mov
mov
push
mov
mov
call
mov
lea
push
push
mov
push
mov
call
cmp
je
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
push
lea
mov
mov
mov
call
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
pop
jmp
cmp
je
lea
mov
call
push
call
pop
jmp
push
lea
call
lea
mov
call
mov
cmp
je
mov
lea
cmp
jne
sub
sar
mov
jmp
cmp
jne
or
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
cmp
mov
jl
inc
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
lea
lea
push
call
lea
lea
push
call
mov
mov
call
lea
call
lea
mov
call
and
push
pop
lea
push
push
lea
mov
call
mov
mov
mov
call
push
cmp
sete
mov
call
test
pop
je
mov
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
mov
test
sete
call
test
pop
je
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
cmp
jne
mov
xor
cmp
mov
je
mov
push
call
lea
lea
push
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
sub
push
lea
push
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
lea
pop
push
push
lea
call
push
lea
mov
call
push
mov
call
mov
pop
mov
mov
cmp
jge
push
lea
call
jmp
dec
lea
push
lea
push
call
push
lea
mov
call
push
call
pop
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
mov
mov
lea
mov
call
add
push
lea
push
adc
call
mov
xor
cmp
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
cmp
je
push
call
push
call
push
call
push
call
push
call
push
call
add
jmp
lea
lea
push
call
mov
mov
lea
push
mov
push
mov
push
call
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
jne
mov
mov
cmp
je
mov
push
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
xor
jmp
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
mov
mov
lea
mov
call
add
push
push
lea
adc
call
lea
lea
push
call
mov
test
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
test
je
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
lea
mov
call
push
mov
call
pop
xor
jmp
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
push
pop
jmp
dec
dec
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
cmp
mov
mov
je
mov
dec
cmp
jl
mov
mov
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
jmp
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
jns
lea
lea
push
mov
call
mov
push
mov
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
inc
cmp
je
cmp
jne
test
jne
push
mov
call
xor
cmp
setne
dec
and
mov
and
add
mov
mov
and
inc
test
jle
push
lea
call
dec
jne
jmp
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
dec
cmp
jl
mov
mov
cmp
jne
lea
add
push
lea
call
push
lea
mov
call
push
and
call
cmp
pop
jne
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
dec
jns
jmp
lea
inc
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
push
mov
lea
call
lea
call
xor
pop
ret
mov
xor
cmp
mov
setne
mov
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
je
cmp
jbe
cmp
ja
mov
lea
push
push
call
jmp
mov
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
push
push
mov
push
push
mov
mov
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
add
adc
inc
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
call
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
mov
jmp
mov
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
and
cmp
mov
je
mov
push
call
mov
mov
cmp
jge
and
mov
lea
mov
mov
push
call
mov
mov
mov
lea
mov
mov
lea
push
call
mov
mov
test
je
mov
push
call
inc
jmp
mov
call
mov
mov
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
xor
xor
xor
cmp
mov
jle
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
add
mov
push
push
push
push
push
call
test
jne
inc
mov
cmp
jl
xor
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
push
xor
mov
lea
mov
mov
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
mov
test
je
mov
push
call
push
call
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
mov
mov
mov
mov
sub
je
dec
jne
mov
cmp
je
push
push
jmp
mov
push
mov
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
push
mov
push
mov
lea
push
call
test
jne
push
lea
call
xor
pop
ret
push
push
mov
push
mov
lea
push
call
lea
push
mov
mov
call
mov
test
jne
push
mov
call
test
je
push
lea
call
jmp
push
pop
pop
mov
pop
pop
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jae
push
pop
jmp
xor
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
mov
push
push
call
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
and
mov
mov
mov
mov
mov
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
mov
mov
lea
mov
mov
mov
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
test
je
mov
xor
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
test
mov
mov
jne
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
mov
call
push
mov
add
pop
adc
add
adc
mov
mov
mov
test
je
mov
push
call
and
mov
push
mov
push
call
test
mov
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
push
pop
cmp
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
je
mov
or
lea
jmp
cmp
je
or
lea
call
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
or
lea
call
mov
jmp
mov
mov
or
lea
call
mov
mov
push
push
lea
push
call
jmp
cmp
je
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
mov
push
push
push
push
push
call
cmp
je
jmp
mov
push
lea
call
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
xor
mov
mov
push
mov
mov
mov
push
call
cmp
jne
mov
lea
push
push
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
jne
mov
push
lea
call
mov
cmp
je
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
test
je
mov
cmp
jne
cmp
jne
cmp
mov
jae
mov
mov
push
lea
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
call
mov
cmp
je
add
jmp
xor
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
add
mov
adc
cmp
jne
cmp
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
push
push
call
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
lea
push
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
call
test
pop
je
mov
call
jmp
xor
lea
neg
sbb
and
ret
jmp
mov
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
lea
push
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
cmp
jae
mov
cmp
je
push
jmp
mov
push
push
lea
call
jmp
lea
call
lea
push
call
pop
lea
mov
mov
call
lea
push
lea
call
push
lea
call
or
lea
call
mov
xor
pop
mov
leave
ret
push
mov
push
call
ret
push
mov
push
push
mov
push
push
xor
mov
cmp
mov
jbe
cmp
jne
mov
mov
cmp
jb
call
jmp
mov
inc
mov
mov
mov
mov
cmp
jbe
mov
mov
movzx
shl
or
sub
mov
jne
jmp
mov
sub
mov
mov
movzx
shr
mov
mov
mov
shl
mov
or
mov
mov
mov
shl
dec
and
mov
mov
pop
pop
pop
leave
ret
mov
call
sub
push
mov
mov
push
lea
push
push
mov
call
test
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jae
lea
call
and
push
lea
call
test
jne
mov
jmp
push
lea
call
lea
call
and
and
lea
push
lea
mov
call
mov
lea
push
call
push
lea
call
push
lea
call
push
lea
call
lea
call
lea
call
lea
mov
call
and
and
lea
call
movzx
mov
and
shr
cmp
mov
mov
jne
lea
call
mov
mov
test
je
sub
xor
cdq
add
adc
add
adc
add
mov
adc
mov
jne
cmp
ja
cmp
jge
mov
mov
mov
mov
lea
mov
push
mov
call
push
and
mov
call
mov
pop
mov
push
mov
mov
lea
mov
call
push
mov
lea
push
call
cmp
jne
cmp
je
mov
mov
mov
add
adc
cmp
jb
ja
mov
cmp
jb
mov
cdq
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
test
jne
mov
mov
mov
mov
jmp
sub
cdq
add
adc
add
mov
adc
xor
mov
or
lea
call
mov
jmp
or
lea
call
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
push
xor
mov
xor
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
mov
add
shl
or
cmp
jge
jmp
lea
push
push
mov
call
pop
mov
pop
pop
leave
ret
push
mov
push
push
push
push
xor
mov
xor
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
mov
add
shl
or
cmp
jge
jmp
lea
push
push
mov
call
pop
mov
pop
pop
leave
ret
push
mov
call
pop
ret
mov
call
push
push
push
push
and
mov
push
push
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
ret
mov
push
push
lea
call
ret
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
push
mov
mov
call
xor
xor
and
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
and
push
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
jmp
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
push
mov
mov
add
mov
and
and
lea
push
mov
call
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
test
je
xor
mov
mov
ret
movzx
ret
test
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
ret
mov
ret
test
push
je
movzx
xor
push
mov
mov
shl
or
movzx
shl
movzx
or
xor
mov
xor
mov
mov
movzx
shl
or
pop
shl
or
xor
or
or
jmp
mov
mov
mov
pop
ret
push
mov
cmp
push
mov
push
push
mov
mov
mov
jb
mov
mov
call
cmp
je
mov
and
shr
mov
mov
mov
shr
movzx
mov
mov
and
jmp
mov
and
shr
mov
mov
mov
and
movzx
mov
mov
shr
or
xor
movzx
mov
mov
mov
mov
cmp
mov
mov
jne
mov
cmp
mov
je
shr
movzx
mov
and
jmp
and
movzx
movzx
mov
shr
mov
mov
cmp
je
cmp
je
xor
jmp
push
jmp
dec
push
movzx
mov
pop
cdq
idiv
shl
add
mov
cdq
idiv
lea
cmp
mov
jne
cmp
jb
mov
lea
call
mov
mov
and
lea
call
mov
and
mov
mov
shr
mov
dec
test
je
inc
lea
jmp
cmp
jne
cmp
jb
mov
lea
mov
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
test
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
push
jmp
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
push
push
mov
push
mov
mov
jb
mov
mov
mov
call
test
je
mov
shr
mov
and
jmp
mov
and
mov
shr
mov
movzx
mov
movzx
mov
mov
cmp
jne
cmp
jb
mov
lea
call
mov
and
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
and
mov
mov
shr
cmp
jne
mov
dec
test
je
inc
lea
jmp
or
xor
mov
mov
cmp
mov
mov
jne
cmp
jb
mov
lea
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
test
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
lea
mov
mov
call
mov
test
movzx
je
shr
mov
and
and
jmp
and
mov
and
shr
lea
mov
call
mov
and
cmp
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
mov
lea
call
movzx
push
xor
test
pop
jbe
lea
cmp
ja
mov
movzx
lea
cmp
ja
inc
cmp
jb
jmp
cmp
je
cmp
je
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
cmp
je
cmp
je
xor
jmp
push
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
push
push
mov
push
mov
mov
jb
mov
mov
mov
call
test
je
mov
shr
mov
and
jmp
mov
and
mov
shr
mov
movzx
mov
movzx
mov
xor
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
cmp
jb
cmp
jne
cmp
jb
mov
lea
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
lea
mov
call
mov
test
movzx
je
shr
mov
and
and
jmp
and
mov
and
shr
lea
mov
call
mov
mov
and
lea
call
movzx
push
xor
test
pop
jbe
lea
cmp
ja
movzx
lea
cmp
ja
inc
cmp
jb
jmp
cmp
je
cmp
je
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
cmp
je
cmp
jne
push
pop
jmp
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
and
push
jmp
cmp
jb
mov
lea
call
mov
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
push
pop
mov
push
call
push
push
push
push
call
xor
add
adc
cmp
ja
jb
cmp
jbe
xor
pop
pop
pop
leave
ret
mov
push
mov
push
cmp
jne
mov
xor
and
dec
and
or
je
push
pop
jmp
xor
movzx
mov
mov
call
mov
mov
mov
pop
cdq
add
adc
mov
mov
pop
ret
push
mov
mov
push
push
push
push
pop
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
mov
mov
je
cmp
je
cmp
jne
cmp
jb
mov
push
mov
mov
movzx
cdq
mov
mov
movzx
mov
pop
jmp
cmp
jne
push
pop
cmp
jb
mov
mov
mov
mov
mov
mov
movzx
movzx
cmp
mov
jbe
lea
cmp
ja
mov
lea
cmp
ja
cmp
ja
inc
cmp
jb
jmp
movzx
add
cmp
ja
movzx
jmp
cmp
jb
mov
mov
mov
lea
cmp
jb
cmp
jbe
jmp
push
pop
cmp
jb
cmp
jb
add
cmp
jb
jmp
cmp
jne
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
push
call
push
push
push
push
call
xor
add
adc
cmp
ja
jb
cmp
jbe
xor
pop
pop
pop
pop
ret
repz
pop
add
sub
adc
add
add
add
add
add
add
call
push
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
mov
call
mov
lea
push
mov
mov
call
mov
lea
push
mov
call
mov
mov
lea
push
mov
call
mov
lea
mov
call
lea
mov
call
lea
push
mov
mov
call
mov
mov
lea
push
mov
mov
call
mov
lea
push
mov
mov
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
jmp
xor
push
lea
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
add
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
lea
push
mov
push
mov
call
mov
pop
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
lea
mov
call
pop
mov
lea
call
lea
mov
call
mov
mov
test
pop
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
and
lea
call
push
mov
call
pop
pop
mov
mov
leave
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
je
mov
mov
mov
mov
cmp
movzx
je
mov
push
lea
call
cmp
jne
xor
cmp
push
push
sete
inc
push
mov
mov
push
push
mov
call
cmp
jne
cmp
jne
mov
cmp
jae
push
lea
call
pop
mov
push
mov
mov
call
mov
mov
mov
push
call
cmp
jne
mov
cmp
jne
push
mov
call
cmp
jne
mov
jmp
mov
mov
mov
lea
push
push
lea
mov
mov
call
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
add
jmp
cmp
jne
cmp
lea
jne
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
or
lea
mov
mov
push
mov
call
mov
push
lea
call
mov
lea
add
push
push
push
mov
call
cmp
jne
mov
mov
cmp
mov
mov
jb
ja
cmp
ja
mov
mov
lea
push
mov
push
push
push
push
push
call
cmp
jne
mov
mov
mov
add
mov
adc
cmp
jne
cmp
jmp
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
push
push
mov
push
push
push
push
call
cmp
jne
mov
mov
call
mov
add
adc
cmp
jne
cmp
je
push
pop
jmp
push
mov
sub
mov
push
mov
push
mov
mov
mov
push
push
mov
mov
and
and
mov
test
mov
mov
pop
je
movzx
cmp
jbe
inc
sub
dec
cmp
sbb
inc
cmp
ja
cmp
ja
sub
sub
mov
mov
inc
inc
dec
jne
mov
cmp
jb
movzx
inc
dec
cmp
mov
jb
movzx
mov
dec
shr
and
mov
inc
lea
mov
shr
inc
jmp
cmp
jae
cmp
jne
test
jne
push
pop
test
je
movzx
inc
dec
test
jne
add
jmp
add
add
cmp
ja
cmp
ja
push
sub
sub
pop
mov
mov
inc
inc
dec
jne
jmp
movzx
dec
push
mov
mov
shr
inc
cmp
lea
pop
jne
push
add
pop
jmp
cmp
mov
sbb
mov
and
add
and
jne
mov
test
je
movzx
inc
dec
test
mov
jne
add
jmp
add
inc
inc
cmp
jb
movzx
movzx
sub
mov
shl
shr
add
mov
inc
inc
cmp
jae
test
je
and
shl
lea
inc
cmp
ja
sub
cmp
jb
mov
sub
sub
add
mov
mov
inc
dec
jne
and
jne
mov
mov
push
pop
jmp
mov
cmp
ja
cmp
ja
mov
mov
sub
sub
xor
mov
inc
inc
cmp
mov
jbe
mov
mov
inc
inc
cmp
mov
jbe
mov
mov
inc
mov
inc
jmp
sub
mov
sub
mov
mov
mov
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
mov
shr
and
or
cmp
mov
ja
mov
push
lea
call
xor
cmp
jne
mov
lea
call
movzx
mov
shr
not
and
cmp
je
and
cmp
ja
mov
mov
add
cmp
ja
cmp
mov
je
mov
push
push
push
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
cmp
je
jmp
mov
push
call
cmp
jne
mov
jmp
mov
push
mov
call
cmp
jne
mov
add
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
push
cmp
mov
jb
ja
cmp
jb
mov
sub
sbb
cmp
ja
jb
test
jae
sub
push
push
mov
mov
push
mov
push
push
call
xor
cmp
jne
mov
cmp
mov
je
mov
push
lea
call
mov
push
mov
lea
call
cmp
ja
mov
mov
sub
mov
lea
push
call
test
jne
mov
xor
cmp
mov
ja
jb
test
jae
add
cmp
jne
mov
mov
push
lea
call
mov
push
call
xor
jmp
push
pop
pop
pop
pop
pop
ret
mov
call
sub
cmp
push
push
push
mov
ja
mov
xor
test
je
mov
lea
cdq
sub
sar
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
or
test
jl
mov
mov
shl
mov
add
cmp
jb
mov
mov
mov
cmp
je
lea
cdq
sub
mov
sar
lea
mov
cmp
je
jae
mov
jmp
lea
jmp
or
mov
test
mov
jl
shl
add
mov
mov
cmp
je
cmp
je
xor
jmp
mov
and
mov
test
je
mov
add
cdq
sub
mov
sar
lea
mov
cmp
je
jae
mov
jmp
inc
mov
cmp
jne
or
test
jl
mov
mov
mov
add
cmp
jb
mov
cmp
ja
mov
mov
sub
cmp
lea
ja
cmp
mov
jb
cmp
jb
add
mov
xor
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
ja
cmp
jb
movzx
mov
call
cmp
mov
je
and
jmp
shr
add
sub
jmp
cmp
jne
cmp
jb
movzx
inc
dec
jmp
cmp
jb
mov
add
sub
mov
call
add
sub
mov
inc
mov
mov
je
mov
test
je
mov
cmp
ja
mov
jmp
xor
cmp
setne
dec
and
add
mov
cmp
jb
mov
cmp
jae
mov
test
je
cdq
mov
mov
and
xor
or
jne
mov
push
lea
push
push
call
mov
test
jne
mov
mov
mov
sub
cmp
mov
mov
jae
call
cmp
movzx
mov
je
shr
mov
and
jmp
and
mov
shr
mov
movzx
jmp
call
mov
lea
movzx
mov
call
mov
lea
mov
call
movzx
mov
sub
add
inc
mov
cmp
jb
add
sub
mov
sub
lea
mov
mov
lea
movs
movs
movs
call
sub
lea
mov
lea
movs
movs
movs
call
inc
mov
mov
cmp
jb
cmp
jne
xor
mov
mov
sub
cmp
jle
mov
lea
inc
mov
mov
shl
mov
mov
add
mov
add
push
mov
push
push
push
mov
add
push
call
test
jne
inc
add
mov
add
cmp
jl
xor
jmp
push
pop
jmp
or
lea
call
mov
jmp
mov
jmp
xor
or
lea
call
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
call
push
push
mov
push
mov
push
lea
call
xor
cmp
jne
lea
lea
push
mov
call
test
je
mov
cmp
jbe
cmp
ja
cmp
ja
movzx
cmp
jle
cmp
jg
push
lea
call
mov
cmp
je
cmp
ja
lea
push
call
mov
mov
mov
mov
push
cmp
pop
mov
push
sbb
pop
neg
sub
mov
shl
mov
lea
shr
lea
mov
shl
lea
push
call
mov
push
push
push
mov
push
push
call
test
jne
mov
mov
push
call
xor
cmp
je
mov
jmp
mov
cmp
mov
mov
jbe
jmp
mov
mov
mov
test
je
lea
call
mov
jmp
lea
call
mov
xor
mov
push
push
push
push
mov
push
call
test
jne
mov
mov
and
lea
push
mov
call
test
jne
mov
mov
cmp
mov
je
mov
dec
cmp
jne
mov
lea
shl
and
cmp
jne
mov
and
mov
mov
jmp
mov
mov
cmp
jae
mov
mov
test
je
call
mov
mov
mov
mov
lea
call
add
add
mov
jmp
call
mov
and
mov
mov
lea
call
add
add
mov
sub
lea
mov
lea
movs
movs
movs
movs
call
cmp
mov
jb
inc
mov
cmp
jb
mov
cmp
je
push
mov
call
pop
jmp
push
pop
push
mov
call
pop
mov
jmp
push
or
mov
call
pop
xor
push
lea
mov
push
push
push
push
call
cmp
jne
push
lea
mov
push
push
push
push
call
cmp
jne
mov
mov
push
pop
call
cmp
mov
jb
ja
cmp
jae
mov
push
xor
lea
mov
mov
call
push
lea
call
mov
lea
inc
push
call
cmp
mov
mov
jbe
jmp
xor
movzx
mov
mov
add
sub
dec
je
dec
je
dec
lea
push
push
push
lea
je
call
jmp
call
jmp
lea
push
push
push
lea
call
jmp
lea
push
push
push
lea
call
cmp
mov
je
mov
mov
cmp
jb
push
lea
call
mov
inc
cmp
jae
mov
push
lea
call
sub
lea
push
pop
mov
rep
lea
call
mov
add
inc
mov
mov
cmp
jb
xor
push
lea
call
cmp
je
push
pop
jmp
lea
mov
push
mov
and
push
push
push
push
call
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
neg
mov
mov
and
mov
je
mov
push
lea
call
test
jne
cmp
jbe
cmp
jne
inc
cmp
jb
cmp
jne
xor
add
adc
mov
mov
xor
jmp
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
mov
and
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
ja
push
mov
call
jmp
cmp
je
xor
jmp
push
mov
call
mov
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
cmp
ja
jb
cmp
ja
mov
mov
cmp
ja
jb
cmp
ja
mov
cmp
ja
jb
mov
cmp
ja
mov
cmp
jb
cmp
jae
push
pop
mov
shl
cmp
je
xor
pop
pop
ret
push
push
push
mov
mov
lea
mov
mov
call
mov
xor
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
lea
movzx
mov
call
mov
mov
movzx
mov
mov
mov
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
mov
mov
mov
mov
mov
mov
jb
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
mov
jne
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
ret
mov
call
sub
and
and
push
mov
push
mov
push
mov
mov
mov
mov
lea
mov
mov
lea
mov
add
cmp
jae
movzx
jmp
mov
lea
call
movzx
lea
mov
cmp
ja
push
pop
jmp
xor
cmp
setne
dec
and
add
mov
add
xor
xor
cmp
jbe
cmp
je
inc
cmp
jb
mov
cmp
lea
mov
jge
mov
push
dec
lea
mov
mov
mov
mov
call
and
cmp
jl
push
lea
call
mov
mov
add
mov
mov
lea
mov
mov
add
cmp
lea
jae
movzx
jmp
mov
lea
call
movzx
lea
mov
cmp
ja
push
pop
jmp
xor
cmp
setne
dec
and
add
mov
add
xor
test
jbe
cmp
je
inc
cmp
jb
sub
push
push
push
call
add
test
jl
dec
mov
mov
jmp
mov
mov
and
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
xor
mov
push
mov
call
mov
mov
push
lea
call
mov
push
push
push
push
push
mov
call
cmp
jne
mov
push
mov
mov
call
cmp
mov
mov
je
mov
push
call
mov
jmp
push
lea
call
xor
jmp
mov
push
mov
call
xor
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
push
mov
call
mov
lea
xor
cmp
je
mov
push
call
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
push
lea
call
mov
mov
pop
mov
mov
mov
mov
pop
pop
xor
pop
ret
push
mov
push
call
and
and
pop
lea
call
lea
call
pop
ret
push
mov
sub
mov
push
push
push
mov
mov
lea
and
and
mov
lea
mov
mov
mov
mov
mov
add
mov
shl
add
mov
lea
mov
movzx
cmp
mov
je
cmp
je
mov
or
je
push
mov
call
cmp
mov
je
lea
call
lea
call
push
lea
push
call
mov
cmp
ja
mov
mov
add
test
jbe
mov
mov
mov
mov
call
cmp
movzx
je
mov
lea
shr
not
and
push
call
cmp
je
and
add
adc
cmp
je
push
lea
push
call
add
dec
jne
jmp
cmp
ja
push
pop
jmp
cmp
jne
push
jmp
cmp
jne
mov
cmp
sbb
and
add
add
xor
xor
mov
cmp
mov
jb
ja
cmp
jbe
mov
mov
mov
lea
call
cmp
mov
je
shr
not
and
lea
push
call
mov
and
cmp
ja
add
adc
cmp
je
push
lea
push
call
add
adc
xor
cmp
jb
ja
mov
cmp
jb
xor
mov
cmp
je
cmp
jae
cmp
jne
mov
shl
mov
and
cmp
jbe
xor
jmp
add
adc
jmp
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
dec
je
sub
jne
mov
lea
push
call
jmp
push
lea
call
mov
mov
cmp
je
push
lea
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
push
mov
call
pop
jmp
mov
cmp
je
mov
jmp
mov
mov
cmp
jae
movzx
mov
push
lea
call
jmp
mov
mov
cmp
je
lea
call
lea
lea
push
call
jmp
mov
lea
mov
push
call
jmp
sub
je
dec
je
dec
dec
jne
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
sub
sbb
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
shl
add
mov
cmp
je
cmp
je
and
jmp
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
je
sub
je
sub
jne
test
je
cmp
jae
mov
movzx
and
mov
or
push
lea
call
jmp
movzx
dec
je
dec
je
dec
je
dec
jne
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
mov
mov
pop
lea
mov
add
add
mov
call
mov
mov
call
lea
lea
push
call
jmp
cmp
jne
lea
push
push
push
call
test
je
push
push
lea
call
jmp
cmp
jne
cmp
je
cmp
jne
xor
xor
jmp
mov
mov
push
push
jmp
push
lea
call
jmp
lea
push
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
sub
push
push
and
mov
push
mov
mov
mov
shl
add
cdq
cmp
mov
ja
jb
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
adc
jmp
mov
cmp
je
mov
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
and
xor
cmp
jne
push
push
push
call
jmp
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
push
push
mov
push
mov
mov
mov
push
mov
push
call
xor
cmp
jne
mov
and
mov
mov
mov
test
mov
je
mov
mov
mov
lea
and
mov
mov
push
mov
mov
lea
push
push
lea
push
push
push
mov
call
cmp
je
mov
jmp
mov
mov
test
mov
je
jmp
mov
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
jbe
push
pop
jmp
push
mov
add
push
push
call
add
xor
pop
pop
pop
leave
ret
mov
call
sub
push
xor
cmp
push
mov
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
lea
mov
shl
add
mov
cmp
je
cmp
jne
xor
xor
jmp
mov
mov
add
adc
inc
jmp
mov
push
mov
push
push
call
xor
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
jne
mov
mov
mov
lea
push
mov
mov
lea
mov
shl
add
lea
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
cmp
jne
push
mov
push
call
mov
test
jne
mov
push
push
call
jmp
mov
mov
add
mov
lea
push
push
push
adc
call
test
je
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
mov
and
mov
lea
add
push
push
push
mov
mov
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
push
pop
cmp
je
test
je
test
je
mov
push
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
jmp
push
mov
mov
push
push
push
push
push
call
mov
test
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
mov
push
call
mov
jmp
mov
add
mov
cmp
jne
mov
cmp
jne
test
jne
and
mov
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
cmp
jne
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
jmp
mov
jmp
test
je
mov
push
call
mov
mov
mov
inc
mov
jmp
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
mov
lea
and
mov
push
mov
lea
mov
mov
mov
shl
add
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
add
mov
mov
or
je
cmp
je
cmp
je
lea
push
lea
push
push
mov
call
test
jne
push
pop
jmp
mov
mov
mov
mov
cmp
je
xor
push
mov
mov
mov
mov
lea
call
push
call
pop
xor
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
push
movzx
pop
mov
cmp
jb
lea
sub
mov
push
push
call
test
jne
and
mov
test
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
push
call
mov
mov
xor
jmp
push
call
xor
pop
cmp
je
mov
mov
mov
mov
xor
mov
cmp
je
mov
push
call
xor
mov
mov
cmp
je
cmp
jne
mov
cmp
ja
push
pop
jmp
cmp
ja
push
jmp
xor
cmp
setne
dec
and
add
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
push
lea
call
mov
mov
jmp
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
jmp
mov
jmp
push
push
push
mov
call
mov
push
shl
add
pop
lea
rep
mov
pop
pop
lea
mov
pop
ret
sub
jmp
push
mov
sub
mov
and
cmp
jae
push
jmp
lea
call
lea
push
mov
call
mov
leave
ret
push
mov
push
push
push
mov
push
call
add
test
je
xor
jmp
movzx
xor
xor
mov
mov
mov
mov
push
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
xor
xor
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
mov
mov
movzx
movzx
shl
or
movzx
shl
or
xor
shl
or
movzx
shl
or
xor
or
or
mov
mov
movzx
xor
push
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
lea
push
lea
push
call
mov
add
mov
mov
push
push
mov
call
pop
pop
pop
ret
push
push
push
mov
xor
xor
test
jbe
movzx
add
inc
cmp
jb
lea
cmp
jae
movzx
add
inc
jmp
lea
xor
not
mov
mov
movzx
movzx
shl
or
pop
shl
or
cmp
pop
pop
jne
mov
cmp
jae
cmp
jne
inc
jmp
xor
jmp
mov
ret
push
mov
push
push
mov
push
push
push
mov
push
call
add
test
jne
mov
xor
mov
mov
movzx
mov
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
xor
mov
mov
shl
or
movzx
shl
or
xor
mov
mov
mov
movzx
shl
or
movzx
shl
or
call
cmp
mov
jl
cmp
jg
movzx
xor
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
jne
lea
push
push
lea
push
call
add
mov
add
cmp
jg
push
mov
call
mov
lea
mov
mov
xor
mov
mov
inc
mov
inc
inc
inc
dec
jne
and
mov
call
push
push
mov
mov
call
jmp
xor
pop
pop
pop
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
push
mov
xor
cmp
je
mov
call
cmp
jne
or
mov
mov
mov
mov
mov
push
sub
pop
shl
lea
add
shr
and
push
call
push
push
mov
call
pop
pop
ret
push
mov
mov
push
push
mov
mov
xor
push
mov
add
mov
adc
cmp
jb
ja
cmp
jbe
push
pop
jmp
cmp
jne
cmp
je
push
mov
push
mov
mov
call
test
jne
mov
mov
mov
push
call
add
adc
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
mov
ja
jb
cmp
jb
mov
mov
mov
lea
push
push
mov
sub
sbb
push
push
mov
call
cmp
jne
lea
lea
push
mov
call
test
je
add
adc
mov
cmp
je
cmp
jne
lea
push
push
push
push
mov
call
test
jne
lea
push
push
lea
push
call
add
test
jne
lea
push
push
mov
push
push
call
test
jne
lea
lea
push
call
test
je
mov
cmp
jae
mov
mov
mov
or
jne
test
jmp
mov
sub
sbb
call
add
adc
xor
cmp
jne
cmp
je
push
pop
jmp
lea
push
call
mov
cmp
jae
lea
push
xor
push
cdq
push
push
push
push
call
add
mov
adc
push
push
call
cmp
jne
movzx
lea
xor
mov
mov
movzx
shl
or
shl
or
cmp
je
inc
push
lea
call
mov
cmp
jae
add
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
cmp
je
mov
mov
mov
call
push
mov
pop
mov
shl
mov
mov
lea
and
sub
cmp
jae
mov
xor
cmp
mov
jne
mov
cmp
je
mov
push
push
push
push
push
call
test
jne
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
mov
mov
add
mov
adc
pop
pop
pop
leave
ret
push
push
push
call
add
jmp
push
xor
pop
call
cmp
mov
mov
je
mov
mov
push
push
push
mov
push
call
test
jne
mov
mov
push
xor
xor
push
add
adc
add
adc
push
push
mov
call
xor
cmp
jne
cmp
jbe
mov
mov
and
mov
sub
sub
cmp
mov
jb
mov
mov
mov
shr
mov
and
sub
mov
shr
mov
shr
test
jne
mov
xor
cmp
je
push
push
mov
xor
add
mov
adc
push
push
push
call
test
jne
mov
push
mov
lea
call
test
jne
jmp
mov
add
cmp
jbe
cmp
jne
inc
cmp
jb
add
add
cmp
jb
jmp
push
pop
jmp
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
dec
je
sub
je
sub
je
dec
jne
mov
mov
cmp
jne
push
lea
call
jmp
lea
call
lea
push
jmp
mov
lea
push
lea
call
cmp
mov
jne
push
lea
call
lea
cmp
je
cmp
jne
mov
jmp
cmp
jne
push
lea
call
jmp
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
push
mov
jmp
mov
lea
mov
call
jmp
push
jmp
xor
cmp
jge
mov
lea
movzx
call
inc
jmp
mov
lea
jmp
sub
je
sub
je
sub
je
dec
jne
mov
lea
cmp
setne
push
call
jmp
mov
cmp
jne
lea
push
lea
call
push
lea
mov
call
push
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
push
pop
shl
push
lea
call
jmp
mov
lea
mov
call
lea
lea
push
call
lea
mov
call
lea
call
mov
lea
shr
call
push
lea
call
lea
lea
push
call
push
lea
call
mov
lea
and
call
lea
lea
push
call
push
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
cmp
je
cmp
jne
cmp
je
push
lea
call
lea
lea
push
call
mov
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
xor
add
push
push
adc
push
push
mov
push
call
mov
lea
push
lea
push
mov
call
lea
mov
push
call
pop
leave
ret
push
mov
push
pop
mov
shr
cmp
jb
cmp
ja
mov
inc
sub
jns
and
pop
ret
push
push
inc
pop
mov
and
shr
cmp
jae
add
jmp
add
mov
dec
dec
jne
pop
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
call
push
lea
call
cmp
jg
mov
call
xor
cmp
jne
mov
cmp
je
lea
push
add
push
push
call
add
test
jne
cmp
jne
mov
mov
lea
push
push
mov
push
mov
call
test
je
mov
or
cmp
je
mov
push
call
push
pop
jmp
mov
mov
mov
lea
mov
mov
push
push
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
mov
inc
push
push
push
push
call
mov
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
lea
mov
call
and
pop
lea
call
push
call
pop
pop
mov
mov
leave
ret
push
call
pop
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
mov
call
push
push
push
push
mov
xor
mov
push
mov
push
lea
mov
push
push
call
mov
cmp
jne
xor
jmp
mov
push
mov
call
mov
jmp
mov
push
mov
call
xor
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
and
and
mov
lea
test
je
mov
push
call
and
mov
add
test
je
mov
push
call
and
pop
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
dec
dec
jne
mov
lea
mov
call
jmp
mov
lea
call
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
cmp
je
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
mov
cmp
jne
cmp
jne
cmp
jne
xor
jmp
mov
push
push
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
mov
lea
push
push
mov
lea
push
mov
call
push
mov
pop
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
push
mov
push
push
call
cmp
mov
jne
mov
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
xor
mov
mov
cmp
mov
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
push
push
push
push
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
jmp
mov
cmp
je
cmp
jne
lea
cmp
jne
mov
cmp
je
jmp
add
cmp
mov
je
mov
push
call
mov
mov
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
xor
jmp
mov
ret
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
lea
push
push
push
push
push
mov
call
cmp
jne
push
lea
mov
call
cmp
jne
movzx
movzx
movzx
shl
or
xor
mov
or
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
jne
movzx
movzx
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
xor
xor
or
or
movzx
movzx
mov
mov
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
ja
cmp
jae
mov
mov
mov
add
adc
add
mov
adc
inc
mov
add
cmp
jl
push
mov
call
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
mov
mov
mov
mov
push
push
mov
mov
push
push
push
mov
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
mov
add
xor
mov
cmp
je
inc
cmp
jne
mov
mov
add
mov
lea
call
mov
lea
add
mov
push
call
test
je
push
lea
call
lea
lea
push
mov
call
test
je
cmp
mov
setne
cmp
je
mov
push
mov
call
cmp
pop
jne
mov
push
lea
mov
mov
call
mov
lea
push
mov
call
push
mov
neg
sbb
inc
mov
call
cmp
pop
je
mov
lea
jmp
mov
mov
push
lea
call
test
mov
lea
jne
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
push
pop
mov
pop
pop
pop
mov
leave
ret
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
jmp
mov
call
sub
push
push
mov
push
mov
cmp
je
mov
mov
mov
call
test
jne
lea
call
mov
and
mov
mov
push
lea
mov
mov
call
lea
mov
push
lea
push
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
push
lea
call
lea
mov
push
lea
push
mov
call
push
mov
call
pop
mov
mov
call
test
jne
mov
jmp
mov
mov
call
test
jne
and
push
lea
call
lea
mov
push
mov
call
mov
mov
push
call
test
pop
jl
cmp
jne
mov
mov
mov
mov
lea
push
mov
call
test
je
lea
mov
push
mov
call
test
je
lea
mov
push
mov
call
test
je
lea
mov
push
mov
call
lea
mov
push
call
lea
mov
push
mov
call
mov
mov
push
call
test
pop
jl
mov
mov
cmp
je
push
lea
call
lea
mov
push
lea
push
mov
call
push
mov
call
cmp
pop
jl
push
lea
call
push
lea
lea
mov
push
call
mov
mov
mov
call
test
push
mov
sete
call
test
pop
je
push
lea
lea
push
call
push
lea
mov
call
mov
push
call
lea
mov
call
push
lea
lea
mov
push
call
mov
mov
mov
call
test
push
mov
sete
call
test
pop
je
push
lea
lea
push
call
push
lea
mov
call
mov
push
call
pop
mov
mov
call
test
jne
push
lea
call
push
mov
call
pop
lea
lea
push
call
push
call
pop
push
mov
call
pop
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
lea
mov
push
call
push
call
push
or
call
push
call
add
xor
cmp
jle
mov
push
mov
mov
call
test
je
inc
cmp
jl
jmp
push
call
push
call
push
call
add
xor
jmp
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
lea
call
and
lea
push
lea
push
mov
call
push
mov
call
pop
lea
mov
call
mov
push
mov
mov
sub
mov
cmp
sete
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
push
lea
call
lea
xor
push
lea
push
mov
mov
call
push
mov
call
cmp
pop
jl
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
mov
push
mov
push
push
push
push
call
test
je
push
push
push
push
call
mov
mov
jmp
xor
push
call
pop
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
push
mov
mov
lea
call
mov
mov
mov
sub
sub
pop
neg
sbb
pop
inc
leave
ret
mov
call
sub
push
push
mov
push
push
lea
call
lea
xor
push
mov
mov
call
or
mov
push
call
cmp
pop
jl
mov
push
lea
mov
call
lea
mov
push
lea
push
mov
call
push
mov
call
pop
mov
mov
call
cmp
jne
lea
mov
push
call
cmp
mov
jne
xor
mov
lea
mov
call
test
je
mov
lea
mov
call
test
je
mov
mov
cdq
shl
or
sub
mov
sar
inc
inc
mov
cmp
jl
mov
push
call
push
call
pop
mov
pop
jmp
push
call
push
call
pop
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
mov
mov
ret
xor
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
je
push
pop
jmp
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
mov
and
pop
and
xor
ret
mov
mov
mov
inc
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
cmp
jbe
cmp
ja
mov
cdq
push
push
lea
call
jmp
push
lea
call
jmp
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
cmp
jne
push
push
jmp
cmp
jne
push
push
jmp
mov
lea
push
call
jmp
mov
mov
mov
push
lea
call
mov
mov
mov
lea
mov
push
call
cmp
mov
jne
push
lea
call
cmp
jne
lea
lea
push
call
jmp
push
lea
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
push
mov
mov
call
test
pop
jge
xor
push
lea
mov
mov
mov
call
lea
lea
mov
call
test
je
push
lea
call
push
call
push
mov
call
pop
pop
jmp
push
lea
push
jmp
sub
je
dec
je
sub
jne
mov
mov
mov
push
lea
call
cmp
mov
je
lea
lea
call
test
je
push
lea
call
push
mov
call
jmp
push
lea
push
jmp
push
lea
push
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
mov
or
pop
je
mov
lea
push
mov
call
pop
ret
mov
call
sub
xor
cmp
push
mov
push
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
cmp
jne
mov
cdq
add
adc
jmp
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
push
push
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
push
call
cmp
pop
je
xor
mov
mov
mov
mov
mov
jmp
xor
xor
mov
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
and
xor
mov
cmp
setne
cmp
je
mov
jmp
mov
mov
mov
mov
lea
push
push
mov
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
cmp
jge
mov
mov
cmp
je
mov
push
push
mov
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
jmp
test
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
jmp
mov
push
lea
call
mov
test
je
mov
push
call
and
mov
and
cmp
jne
mov
and
and
and
add
mov
call
and
mov
and
and
cdq
mov
mov
mov
mov
mov
push
call
mov
test
je
mov
mov
jmp
mov
cdq
mov
mov
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
push
adc
mov
mov
push
mov
mov
mov
mov
push
push
mov
push
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
jmp
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
xor
mov
mov
mov
and
and
mov
mov
cmp
je
mov
mov
call
test
je
mov
mov
call
test
jne
mov
jmp
mov
mov
call
test
jne
mov
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
test
je
push
mov
push
push
push
push
push
call
mov
test
je
mov
mov
or
jne
cmp
jne
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
cmp
jne
mov
cmp
jne
mov
mov
or
jne
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
cmp
je
lea
mov
push
call
add
push
lea
push
push
call
add
test
je
mov
jmp
mov
mov
lea
call
mov
push
mov
push
call
mov
mov
test
je
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
mov
jmp
lea
call
mov
mov
inc
add
mov
mov
adc
mov
add
mov
adc
xor
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
or
test
pop
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
push
mov
call
and
lea
push
lea
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
pop
rep
mov
mov
mov
pop
mov
pop
pop
mov
leave
ret
mov
jmp
mov
jmp
jmp
jmp
mov
call
push
push
push
mov
push
mov
mov
lea
mov
mov
mov
mov
call
xor
lea
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
mov
add
neg
sbb
pop
and
lea
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
cmp
mov
je
cmp
je
cmp
jne
mov
mov
lea
or
je
push
push
lea
call
jmp
mov
cmp
jne
push
push
jmp
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
mov
mov
lea
or
je
push
push
jmp
mov
mov
lea
or
je
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
and
mov
mov
ret
push
mov
lea
mov
push
push
push
mov
call
mov
pop
ret
mov
call
mov
call
push
mov
push
mov
push
push
lea
call
push
lea
pop
call
lea
lea
mov
call
push
lea
call
mov
lea
push
xor
push
push
push
push
call
cmp
jne
mov
push
push
push
mov
call
cmp
jne
lea
call
lea
lea
push
push
push
lea
lea
mov
call
cmp
mov
jne
cmp
jbe
mov
cmp
jne
mov
lea
sub
mov
sbb
call
push
mov
pop
lea
mov
mov
mov
mov
mov
call
mov
push
mov
push
mov
mov
push
push
push
call
cmp
mov
je
mov
lea
call
mov
jmp
push
lea
call
lea
lea
call
cmp
jne
lea
lea
push
lea
push
lea
call
cmp
jne
cmp
jne
mov
and
inc
cmp
jle
lea
mov
mov
lea
call
mov
lea
mov
call
push
mov
call
add
dec
pop
jne
mov
lea
lea
call
mov
lea
mov
call
push
mov
call
mov
pop
or
je
jmp
mov
mov
push
push
push
push
push
call
cmp
mov
je
mov
lea
call
mov
jmp
push
lea
call
lea
lea
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
pop
jmp
mov
call
cmp
je
mov
jmp
push
lea
call
push
lea
call
mov
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
mov
xor
cmp
jne
cmp
jne
push
lea
call
add
cmp
jb
cmp
jne
push
lea
pop
push
push
call
lea
lea
push
call
cmp
jbe
push
lea
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
movzx
lea
call
push
lea
mov
call
mov
push
call
pop
jmp
cmp
jne
cmp
jne
cmp
jne
movzx
inc
lea
call
push
lea
mov
call
mov
push
jmp
push
lea
call
xor
cmp
jbe
mov
lea
call
inc
cmp
jb
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
mov
shr
call
mov
push
call
mov
and
call
mov
push
call
pop
pop
ret
cmp
movzx
jae
add
ret
add
ret
push
mov
sub
and
push
mov
mov
lea
mov
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
xor
and
mov
mov
jne
mov
cdq
sub
mov
sar
add
call
jmp
push
lea
mov
mov
mov
call
mov
or
cdq
sub
mov
mov
sar
inc
shl
cmp
mov
jle
shr
lea
call
push
lea
mov
call
mov
push
call
pop
mov
jmp
lea
call
push
lea
mov
call
mov
push
call
pop
mov
push
mov
lea
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
cmp
je
push
call
push
mov
call
pop
pop
ret
mov
call
sub
mov
push
xor
push
mov
cmp
push
mov
mov
jbe
mov
mov
push
and
pop
shl
add
or
dec
jne
push
lea
mov
mov
mov
call
mov
xor
mov
mov
mov
shr
test
je
push
lea
mov
mov
mov
call
mov
mov
cmp
je
push
lea
call
jmp
mov
lea
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
lea
lea
call
mov
push
call
pop
add
inc
cmp
jbe
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
call
push
and
push
push
mov
push
mov
mov
mov
push
call
push
mov
push
call
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
mov
push
call
mov
mov
add
cmp
je
mov
push
call
mov
pop
pop
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
je
push
mov
push
call
mov
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
test
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
xor
mov
mov
mov
mov
mov
lea
mov
call
test
mov
jne
mov
call
mov
mov
call
cmp
mov
je
test
jne
mov
jmp
mov
cmp
jne
mov
and
lea
and
mov
push
push
push
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
sub
mov
mov
sub
mov
lea
push
xor
cmp
sete
push
lea
push
mov
add
lea
push
push
mov
lea
lea
call
mov
mov
mov
add
add
add
adc
add
adc
test
jne
test
je
cmp
jne
and
jmp
mov
cmp
je
cmp
je
mov
test
je
test
jbe
mov
push
call
mov
test
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
je
mov
cmp
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
jne
cmp
jne
lea
call
test
je
mov
sub
mov
sbb
xor
mov
test
je
mov
push
call
and
mov
push
push
mov
call
mov
mov
test
lea
je
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
push
pop
cmp
je
cmp
je
cmp
jle
cmp
jle
mov
call
mov
mov
lea
jmp
push
jmp
push
pop
jmp
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
call
mov
pop
jmp
mov
call
sub
push
push
push
lea
push
call
xor
cmp
jne
lea
call
mov
call
jmp
push
pop
cmp
jne
mov
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
cmp
jne
cmp
je
mov
or
lea
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
jne
cmp
je
mov
jmp
push
mov
push
push
call
cmp
je
mov
or
lea
call
jmp
or
lea
call
lea
call
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
cmp
mov
jle
mov
mov
push
mov
lea
push
call
mov
call
test
je
and
cmp
jle
mov
mov
mov
lea
push
mov
lea
call
test
mov
jne
inc
mov
cmp
jl
inc
mov
cmp
jl
xor
mov
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
or
test
je
mov
push
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
lea
lea
push
lea
push
push
lea
call
cmp
jne
mov
push
push
call
jmp
mov
call
cmp
mov
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
push
mov
and
push
push
push
lea
mov
mov
call
xor
cmp
jge
mov
mov
shl
add
push
mov
push
call
test
jne
inc
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
push
call
pop
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
add
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
lea
push
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
xor
mov
push
push
push
push
push
mov
call
test
jne
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
mov
lea
push
push
mov
mov
push
push
push
call
test
jne
mov
mov
sub
push
sbb
sub
mov
sbb
mov
lea
call
xor
jmp
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
mov
mov
add
push
push
mov
adc
push
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
push
lea
mov
call
mov
lea
lea
push
push
push
call
cmp
je
mov
push
pop
jmp
mov
mov
mov
mov
push
push
mov
push
push
push
push
call
cmp
mov
jne
push
pop
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
push
push
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
call
test
pop
je
and
and
mov
ret
xor
ret
jmp
mov
jmp
sub
jmp
sub
jmp
mov
call
sub
push
push
push
mov
push
mov
lea
call
push
lea
xor
pop
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
mov
call
mov
lea
push
mov
call
mov
mov
xor
mov
mov
cmp
mov
jle
mov
lea
mov
mov
add
mov
mov
add
inc
cmp
jl
and
cmp
jbe
push
mov
call
push
lea
call
inc
mov
cmp
jb
mov
xor
cmp
jbe
push
mov
call
push
lea
call
inc
cmp
jb
mov
mov
and
and
mov
mov
dec
mov
js
jmp
mov
mov
mov
and
mov
sub
lea
sub
test
mov
jbe
mov
shl
mov
mov
mov
mov
add
mov
mov
mov
add
mov
inc
mov
mov
inc
cmp
jb
mov
mov
and
cmp
jbe
mov
shl
mov
mov
mov
mov
add
mov
mov
mov
add
inc
mov
mov
inc
cmp
jb
mov
mov
dec
mov
jns
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
push
mov
push
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
dec
js
mov
push
mov
lea
push
mov
call
jmp
mov
dec
js
mov
mov
mov
lea
mov
mov
mov
push
push
mov
call
jmp
xor
cmp
jle
mov
mov
mov
push
mov
call
inc
cmp
jl
xor
cmp
jle
mov
mov
mov
push
mov
call
inc
cmp
jl
pop
pop
pop
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
push
mov
mov
mov
lea
pop
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
push
mov
mov
mov
add
push
call
xor
test
jle
mov
mov
push
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
call
xor
mov
mov
mov
mov
push
lea
pop
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
call
ret
push
push
mov
push
lea
mov
call
lea
call
xor
cmp
jbe
mov
cmp
lea
je
mov
lea
mov
mov
mov
mov
push
call
inc
cmp
jb
xor
cmp
jbe
mov
cmp
lea
je
mov
lea
mov
mov
lea
mov
push
call
inc
cmp
jb
mov
test
je
push
mov
mov
push
mov
push
mov
push
mov
push
push
call
jmp
push
mov
push
mov
push
push
push
push
push
push
call
xor
mov
cmp
jle
mov
mov
mov
test
je
mov
push
call
and
inc
cmp
jl
xor
cmp
jle
mov
mov
mov
test
je
mov
push
call
and
inc
cmp
jl
pop
pop
pop
ret
push
mov
mov
push
lea
lea
push
call
push
mov
lea
lea
push
call
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
call
mov
test
jbe
push
mov
mov
test
je
mov
test
je
push
mov
push
call
mov
mov
lea
push
jmp
push
push
mov
call
push
mov
call
add
dec
jne
pop
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
push
mov
lea
call
lea
mov
call
xor
cmp
mov
jle
mov
mov
mov
push
mov
call
cmp
pop
je
push
lea
pop
mov
rep
mov
xor
jmp
xor
push
mov
call
or
lea
call
mov
mov
mov
call
cmp
jne
inc
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
push
call
lea
mov
call
lea
mov
push
call
lea
mov
call
lea
mov
push
call
lea
mov
call
add
mov
push
call
mov
pop
pop
pop
ret
push
mov
lea
call
lea
call
mov
pop
jmp
mov
call
sub
push
mov
mov
mov
push
lea
lea
push
call
and
lea
push
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
and
mov
call
or
mov
add
neg
sbb
and
call
mov
pop
pop
mov
leave
ret
push
mov
call
mov
mov
push
mov
add
call
pop
ret
push
mov
call
mov
mov
push
mov
add
call
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
call
inc
cmp
jl
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
mov
mov
test
jle
jmp
mov
mov
mov
mov
lea
lea
call
and
cmp
jbe
and
and
lea
push
lea
call
mov
or
test
je
mov
push
call
inc
mov
cmp
jb
add
mov
call
and
cmp
jbe
and
lea
mov
push
mov
call
mov
or
test
je
mov
push
call
inc
mov
cmp
jb
inc
mov
cmp
jl
xor
cmp
jle
mov
lea
lea
lea
push
lea
push
push
call
lea
lea
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
mov
call
and
and
mov
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
mov
test
je
cmp
je
mov
mov
push
push
push
call
mov
push
push
mov
push
call
mov
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
inc
cmp
jl
xor
cmp
jle
lea
lea
mov
push
lea
push
mov
push
call
mov
mov
push
mov
mov
mov
mov
mov
call
inc
cmp
jl
xor
cmp
jle
lea
lea
mov
push
lea
push
mov
push
call
mov
mov
push
mov
mov
mov
mov
mov
call
inc
cmp
jl
mov
pop
pop
xor
pop
mov
leave
ret
push
mov
mov
push
push
and
cmp
jbe
mov
mov
mov
mov
cmp
jb
sub
inc
mov
cmp
jb
lea
push
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
push
push
and
cmp
jbe
mov
mov
mov
mov
cmp
jb
sub
inc
mov
cmp
jb
lea
push
push
mov
call
mov
mov
pop
pop
pop
ret
mov
push
xor
push
test
jle
mov
mov
mov
cmp
je
inc
add
cmp
jl
xor
pop
pop
ret
push
mov
mov
push
mov
push
cmp
jne
mov
cmp
jne
push
mov
push
call
xor
cmp
jle
cmp
je
mov
mov
call
test
jne
inc
cmp
jl
xor
cmp
jle
cmp
je
mov
mov
call
inc
cmp
jl
mov
mov
push
mov
call
xor
cmp
jle
cmp
je
mov
mov
mov
call
inc
cmp
jl
push
mov
call
test
jne
push
mov
call
test
jne
mov
xor
test
jle
mov
mov
mov
test
je
cmp
je
cmp
jne
inc
add
cmp
jl
push
mov
call
test
jne
mov
xor
test
jle
mov
mov
mov
test
jne
inc
add
cmp
jl
xor
jmp
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
mov
test
je
mov
push
call
push
call
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
neg
lea
sbb
and
lea
push
call
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
and
test
mov
je
mov
push
call
mov
lea
mov
mov
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
test
jne
mov
jmp
lea
mov
push
push
push
push
call
mov
add
mov
adc
pop
test
je
mov
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
call
cmp
je
mov
jmp
push
push
push
call
add
test
je
mov
mov
mov
push
lea
mov
call
mov
mov
mov
lea
mov
inc
push
push
push
call
add
mov
and
mov
test
je
mov
cmp
ja
jb
mov
cmp
ja
lea
mov
push
mov
mov
sub
push
mov
add
push
push
call
test
jne
add
cmp
mov
je
cmp
jb
sub
push
pop
inc
mov
je
jmp
mov
mov
mov
mov
cmp
je
cmp
jae
inc
mov
jmp
cmp
je
push
add
push
push
call
add
test
je
inc
cmp
jb
mov
add
adc
sub
push
add
push
push
call
mov
add
jmp
push
mov
call
pop
push
pop
jmp
mov
push
mov
call
push
mov
call
pop
mov
pop
jmp
push
pop
jmp
mov
push
add
pop
push
mov
adc
call
pop
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
lea
push
mov
push
push
mov
push
push
call
mov
mov
add
adc
cmp
jbe
test
jne
mov
mov
mov
push
call
mov
mov
test
je
mov
mov
mov
pop
pop
pop
ret
push
mov
push
mov
lea
push
mov
push
push
mov
push
push
call
mov
mov
mov
mov
add
push
adc
call
mov
mov
test
je
mov
mov
mov
pop
pop
pop
ret
push
mov
xor
cmp
jne
mov
or
jne
mov
push
or
mov
mov
mov
push
push
mov
push
push
call
jmp
mov
pop
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
push
push
xor
mov
cmp
mov
jne
push
mov
mov
mov
call
jmp
lea
call
mov
mov
mov
cmp
jne
dec
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
test
jne
xor
pop
ret
mov
push
add
push
push
push
call
xor
cmp
pop
sete
mov
ret
push
mov
cmp
jne
xor
jmp
xor
xor
cmp
push
push
jle
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
test
jl
mov
inc
inc
cmp
jl
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
xor
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
cmp
mov
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
ja
jb
cmp
jae
mov
jmp
mov
mov
add
adc
cmp
jb
ja
mov
cmp
jb
inc
mov
mov
mov
add
cdq
sub
sar
jmp
mov
mov
mov
mov
sub
sbb
cmp
mov
mov
lea
mov
jne
cmp
je
mov
push
push
push
push
mov
push
call
test
jne
mov
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
lea
push
push
mov
push
push
call
mov
xor
add
adc
add
mov
adc
test
je
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
mov
push
xor
mov
test
je
lea
mov
push
push
push
push
call
mov
cmp
je
push
mov
mov
call
mov
mov
mov
add
adc
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
push
xor
mov
test
je
lea
mov
push
push
push
push
call
mov
cmp
je
push
lea
push
call
mov
mov
add
adc
test
je
mov
mov
pop
pop
pop
ret
jmp
mov
mov
ret
mov
push
lea
mov
call
test
jne
mov
mov
call
test
jne
xor
pop
ret
push
pop
pop
ret
mov
call
neg
sbb
inc
ret
mov
call
sub
push
push
mov
push
mov
cmp
jne
push
lea
call
mov
call
test
je
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
mov
sbb
inc
cmp
sbb
and
add
cmp
jae
mov
and
mov
mov
mov
mov
and
lea
push
push
pop
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
mov
call
lea
mov
call
and
mov
mov
lea
mov
push
push
pop
mov
call
lea
mov
call
push
lea
call
lea
mov
push
push
pop
mov
call
lea
mov
call
mov
and
mov
mov
lea
mov
push
push
pop
mov
call
mov
lea
jmp
add
mov
call
test
je
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
jb
push
pop
jmp
cmp
sbb
and
add
cmp
mov
sbb
and
inc
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
jmp
mov
mov
call
test
je
push
pop
cmp
jb
push
pop
jmp
cmp
sbb
inc
inc
cmp
jb
mov
jmp
cmp
sbb
and
add
and
mov
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
lea
mov
call
mov
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
jmp
mov
mov
call
test
je
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
jb
push
pop
jmp
cmp
jb
push
jmp
cmp
sbb
and
add
and
mov
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
push
mov
call
test
jne
mov
mov
call
test
jne
xor
pop
ret
push
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
xor
mov
mov
push
lea
mov
mov
call
lea
mov
push
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
call
cmp
jge
mov
jmp
lea
lea
mov
cmp
mov
je
cmp
je
cmp
je
mov
mov
mov
mov
cmp
jne
mov
push
jmp
cmp
jne
mov
lea
call
test
je
push
lea
call
jmp
mov
lea
mov
mov
call
cmp
jne
push
lea
call
jmp
push
lea
call
mov
sub
lea
mov
movs
movs
movs
lea
movs
call
test
jne
and
lea
call
or
lea
call
mov
jmp
and
lea
call
xor
jmp
mov
lea
call
mov
cmp
jne
push
lea
call
mov
lea
push
call
xor
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
cmp
push
mov
jne
lea
mov
push
call
jmp
cmp
jne
cmp
jne
cmp
ja
push
mov
call
jmp
cmp
jne
lea
lea
call
test
jne
push
mov
call
mov
jmp
xor
pop
leave
ret
push
push
push
mov
xor
mov
mov
mov
call
test
je
add
inc
cmp
jb
or
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
mov
push
push
lea
call
mov
mov
xor
lea
mov
call
cmp
jle
mov
push
mov
lea
call
push
pop
cmp
jle
mov
push
lea
mov
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
lea
lea
push
mov
mov
call
lea
mov
push
lea
push
push
call
push
mov
cmp
jne
call
push
mov
call
inc
pop
cmp
pop
jl
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
call
push
call
pop
mov
pop
lea
mov
call
or
lea
call
mov
jmp
mov
call
sub
push
push
mov
push
mov
mov
call
xor
lea
push
mov
mov
mov
call
mov
mov
cmp
je
mov
jle
mov
mov
mov
cmp
jne
mov
lea
push
call
mov
mov
mov
jmp
push
lea
call
inc
cmp
jl
mov
lea
push
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
push
mov
mov
push
call
mov
test
jl
lea
push
push
mov
call
and
push
mov
call
or
push
call
pop
inc
lea
push
push
mov
call
mov
push
mov
call
push
jmp
mov
xor
test
jle
mov
mov
cmp
jb
cmp
jbe
inc
cmp
jl
push
mov
call
mov
pop
pop
pop
mov
leave
ret
lea
push
push
mov
call
push
mov
mov
call
or
push
call
pop
lea
push
push
mov
call
mov
push
mov
call
push
call
pop
jmp
mov
call
sub
push
push
push
mov
push
lea
call
mov
xor
mov
call
cmp
mov
jle
mov
lea
lea
mov
lea
mov
call
mov
cmp
jne
mov
inc
cmp
jne
mov
jmp
sub
sar
add
mov
cmp
je
mov
inc
mov
movzx
sub
je
sub
je
dec
je
sub
je
dec
dec
jne
push
jmp
push
jmp
push
pop
call
mov
mov
mov
mov
cmp
jl
jmp
test
ja
jb
cmp
jae
push
xor
pop
mov
mov
jmp
push
jmp
push
jmp
push
call
pop
mov
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
movzx
cmp
je
cmp
je
cmp
je
mov
jmp
cmp
setne
jmp
push
lea
call
lea
lea
mov
call
push
or
mov
call
cmp
pop
jne
push
lea
call
lea
mov
push
mov
call
push
mov
call
pop
mov
jmp
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
call
or
or
and
mov
mov
pop
ret
mov
call
sub
push
push
push
mov
push
lea
call
mov
xor
mov
call
cmp
jne
mov
jmp
mov
mov
cmp
jne
push
push
lea
call
lea
push
mov
jmp
cmp
jne
push
push
lea
call
cmp
jne
push
mov
call
mov
jmp
mov
cmp
jne
lea
mov
push
call
jmp
mov
call
cmp
jne
add
push
push
lea
mov
call
push
mov
lea
call
jmp
lea
lea
call
mov
lea
push
push
lea
call
cmp
mov
jne
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
test
pop
je
lea
push
push
lea
call
mov
push
push
mov
mov
call
push
mov
call
cmp
pop
jne
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
mov
call
cmp
je
mov
jmp
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
lea
call
cmp
je
mov
jmp
mov
jmp
mov
mov
call
cmp
jne
mov
lea
call
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
cmp
jbe
mov
jmp
mov
cmp
jae
mov
jmp
mov
sub
cmp
jg
lea
lea
call
mov
lea
mov
call
lea
mov
push
mov
call
lea
mov
call
inc
cmp
jle
mov
mov
xor
mov
cmp
mov
jne
mov
cmp
jne
push
lea
call
lea
mov
push
push
mov
call
push
mov
call
cmp
pop
je
jmp
lea
call
cmp
jl
lea
mov
mov
lea
mov
mov
cmp
mov
je
cmp
je
cmp
je
lea
call
cmp
jl
mov
sub
mov
lea
movs
mov
lea
movs
movs
mov
mov
lea
movs
call
test
jne
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
mov
xor
cmp
je
inc
inc
inc
jmp
lea
push
push
lea
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
je
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
push
lea
call
mov
cmp
ja
mov
mov
mov
lea
push
call
lea
mov
call
xor
push
call
pop
push
call
pop
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
and
push
push
push
mov
mov
push
lea
call
push
and
lea
mov
push
call
mov
mov
mov
call
test
push
sete
and
call
test
pop
jne
push
or
call
inc
add
cmp
pop
jb
or
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
add
mov
push
lea
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
mov
jne
cmp
jne
mov
jmp
test
jne
cmp
je
push
mov
lea
mov
call
mov
mov
sub
pop
sar
cmp
jne
mov
mov
xor
jmp
mov
pop
leave
ret
mov
call
sub
push
push
push
push
mov
lea
call
mov
and
call
mov
lea
mov
call
mov
sub
sar
je
mov
lea
cmp
jg
cmp
jne
test
ja
cmp
jae
push
mov
pop
shl
mov
xor
jmp
mov
movzx
sub
je
sub
je
dec
dec
jne
test
ja
cmp
jae
shl
jmp
test
ja
cmp
jae
shl
jmp
cmp
jb
ja
test
jae
mov
jmp
mov
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
cmp
jne
mov
cmp
jne
mov
cmp
jae
push
pop
shl
mov
mov
xor
jmp
cmp
jne
push
lea
push
call
mov
and
lea
call
mov
push
call
pop
mov
pop
jmp
mov
jmp
mov
call
mov
mov
leave
ret
push
mov
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
call
test
je
mov
mov
call
test
je
mov
mov
call
test
je
xor
jmp
and
jmp
mov
mov
pop
pop
ret
mov
call
sub
movzx
push
mov
test
je
cmp
je
cmp
je
mov
jmp
cmp
setne
mov
jmp
push
lea
call
and
mov
lea
call
neg
push
sbb
and
add
mov
call
pop
mov
jmp
mov
xor
mov
pop
mov
leave
ret
push
mov
push
push
mov
push
mov
lea
mov
call
test
ja
cmp
jbe
and
xor
jmp
mov
mov
sub
sar
pop
pop
leave
ret
push
mov
push
push
mov
cmp
jne
cmp
je
lea
call
test
jne
cmp
je
mov
jmp
push
pop
mov
mov
jmp
mov
jmp
lea
mov
call
cmp
je
mov
jmp
mov
mov
mov
xor
pop
leave
ret
push
mov
lea
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
sub
push
push
mov
mov
push
mov
call
test
jne
mov
jmp
mov
xor
lea
mov
call
mov
lea
mov
mov
call
push
lea
mov
call
mov
mov
cmp
jle
mov
mov
jmp
mov
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
lea
push
mov
mov
mov
mov
mov
mov
add
mov
mov
adc
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
inc
mov
mov
add
cmp
jl
mov
lea
mov
mov
call
lea
mov
call
lea
mov
mov
call
mov
cmp
je
lea
lea
call
neg
sbb
inc
mov
je
lea
call
mov
lea
cmp
je
mov
push
call
mov
cmp
je
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
push
mov
mov
mov
call
mov
cmp
je
add
jmp
xor
mov
mov
lea
push
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
cmp
mov
jle
mov
mov
mov
mov
mov
mov
lea
push
push
lea
mov
mov
push
mov
push
push
call
cmp
mov
jne
mov
cmp
mov
jne
cmp
jne
mov
cmp
je
push
lea
call
cmp
je
push
mov
call
jmp
cmp
je
push
lea
call
cmp
je
push
mov
call
lea
lea
push
call
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
push
call
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
inc
mov
cmp
jl
lea
lea
push
call
mov
mov
mov
call
cmp
mov
mov
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
cmp
mov
ja
push
mov
mov
push
push
call
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
cmp
je
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
push
call
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
cmp
je
mov
mov
lea
push
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
push
lea
mov
mov
call
mov
lea
mov
lea
push
call
cmp
mov
jle
mov
mov
mov
add
mov
mov
xor
inc
mov
mov
mov
mov
cmp
jl
mov
push
push
mov
push
call
push
mov
cmp
jne
call
push
mov
call
pop
pop
push
call
mov
cmp
mov
je
mov
push
call
mov
add
mov
push
lea
mov
call
mov
mov
push
lea
mov
call
mov
push
lea
mov
call
push
lea
call
mov
cmp
jbe
mov
mov
lea
lea
push
call
inc
dec
jne
cmp
mov
jbe
mov
mov
xor
cmp
jle
mov
cmp
je
inc
add
cmp
jl
jmp
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
mov
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
mov
jmp
or
cmp
jl
mov
mov
mov
jmp
mov
xor
cmp
jle
mov
cmp
je
inc
add
cmp
jl
or
cmp
jl
mov
lea
lea
push
call
inc
mov
inc
cmp
mov
jb
mov
push
mov
mov
push
mov
push
call
lea
mov
call
lea
mov
call
inc
cmp
mov
jl
mov
jmp
mov
jmp
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
call
push
mov
call
pop
pop
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
lea
call
or
lea
call
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
lea
lea
push
lea
push
mov
push
call
cmp
je
mov
mov
mov
cmp
jne
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
lea
call
or
lea
call
mov
jmp
lea
call
push
lea
mov
call
xor
cmp
jle
mov
lea
mov
push
call
inc
cmp
jl
push
mov
lea
mov
mov
push
push
push
push
mov
push
push
push
call
lea
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
call
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
call
lea
call
xor
cmp
jle
mov
push
mov
lea
push
lea
call
inc
cmp
jl
xor
cmp
mov
mov
jle
mov
mov
mov
mov
mov
mov
push
push
call
push
mov
push
lea
call
test
jbe
push
mov
call
test
jge
mov
push
lea
call
inc
dec
jne
inc
mov
cmp
jl
mov
xor
cmp
jle
add
mov
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
call
lea
call
lea
call
lea
call
pop
ret
mov
xor
test
push
jle
mov
add
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
push
push
push
mov
push
mov
mov
cmp
je
xor
jmp
xor
test
jle
mov
mov
mov
shl
add
add
call
test
je
inc
cmp
jl
mov
cmp
jne
xor
test
jle
mov
shl
mov
add
add
call
test
je
inc
cmp
jl
mov
xor
test
jle
mov
mov
sub
mov
cmp
jne
mov
cmp
jne
inc
add
cmp
jl
mov
cmp
jne
mov
cmp
sete
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
push
pop
ret
xor
ret
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
lea
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
push
xor
mov
mov
lea
mov
call
push
lea
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
mov
push
mov
call
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
call
lea
mov
call
add
mov
push
call
mov
pop
pop
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
call
pop
mov
xor
cmp
mov
je
mov
call
jmp
xor
or
push
lea
mov
call
mov
lea
push
lea
mov
call
cmp
jne
cmp
mov
jle
mov
mov
mov
lea
call
lea
lea
push
mov
mov
call
push
mov
call
mov
pop
mov
mov
mov
mov
mov
mov
and
and
mov
lea
push
push
lea
mov
mov
push
mov
push
push
call
mov
test
jne
mov
test
jne
mov
test
je
test
mov
je
mov
push
call
and
mov
lea
push
push
push
mov
call
mov
test
je
push
mov
push
call
test
mov
jne
mov
test
mov
je
mov
push
call
mov
push
mov
call
xor
mov
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
push
mov
push
call
cmp
mov
jne
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
mov
mov
mov
lea
add
mov
push
mov
call
xor
cmp
jle
mov
mov
mov
mov
xor
mov
mov
mov
inc
cmp
jl
mov
push
mov
push
mov
push
call
test
mov
jne
push
mov
mov
call
pop
xor
cmp
je
push
mov
call
jmp
push
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
inc
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
jmp
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
call
mov
pop
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
push
mov
call
pop
ret
mov
call
sub
push
push
push
mov
call
test
jne
cmp
jne
push
mov
push
push
call
test
jne
mov
lea
mov
call
lea
call
mov
and
lea
call
mov
push
lea
pop
mov
call
mov
mov
mov
mov
mov
cmp
mov
jle
lea
call
push
lea
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
inc
cmp
jl
mov
cmp
jle
push
call
test
pop
je
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
mov
lea
mov
mov
mov
lea
push
call
push
call
test
pop
je
mov
jmp
xor
push
lea
call
mov
mov
test
je
mov
push
call
inc
cmp
jl
xor
xor
cmp
jle
mov
push
add
push
push
mov
call
inc
cmp
jl
cmp
jne
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
lea
lea
push
lea
push
mov
push
call
cmp
je
push
lea
call
mov
mov
mov
xor
mov
cmp
jbe
cmp
jne
push
jmp
push
lea
call
mov
mov
inc
cmp
jb
mov
push
push
add
mov
push
call
lea
mov
call
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
mov
mov
call
push
lea
call
and
and
push
lea
call
mov
push
lea
mov
call
mov
push
lea
mov
call
push
lea
call
push
pop
cmp
jle
mov
lea
mov
push
call
inc
cmp
jl
mov
and
test
jle
mov
mov
mov
shl
mov
and
mov
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
mov
test
je
mov
push
call
and
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
cmp
je
push
call
test
pop
je
xor
mov
mov
mov
mov
mov
mov
jmp
xor
test
mov
je
mov
push
call
and
mov
push
push
mov
mov
call
mov
mov
add
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
inc
mov
cmp
jl
mov
mov
push
pop
cmp
jle
mov
mov
mov
mov
mov
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
jne
mov
add
inc
mov
cmp
jl
mov
push
mov
push
mov
push
push
mov
push
push
push
push
call
mov
test
je
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
sub
lea
mov
mov
push
call
mov
lea
call
push
mov
mov
push
call
push
pop
cmp
mov
jle
mov
mov
push
mov
mov
call
test
mov
jne
push
mov
mov
push
call
inc
mov
cmp
jl
mov
xor
cmp
jle
mov
and
test
jle
mov
mov
mov
mov
mov
cmp
je
inc
add
cmp
jl
jmp
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
mov
jmp
or
test
jge
mov
jmp
mov
mov
mov
mov
mov
push
mov
push
lea
call
mov
inc
cmp
jl
mov
lea
test
jl
sub
lea
mov
mov
mov
mov
mov
mov
add
mov
push
add
call
add
dec
test
jge
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
xor
lea
call
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
push
mov
push
push
lea
mov
call
lea
push
mov
call
mov
push
push
push
mov
call
and
and
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
mov
call
lea
mov
call
lea
call
cmp
jle
mov
push
mov
lea
push
lea
call
inc
cmp
jl
and
cmp
jle
mov
and
and
mov
mov
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
and
mov
push
call
inc
pop
mov
cmp
jl
xor
cmp
jle
mov
mov
push
call
inc
cmp
jl
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
lea
push
push
mov
call
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
push
and
call
pop
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
push
call
lea
mov
call
lea
mov
push
call
mov
add
mov
mov
push
lea
mov
call
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
cmp
jne
mov
cmp
jne
cmp
jne
lea
push
push
mov
call
cmp
je
lea
push
push
mov
call
lea
call
push
lea
pop
lea
push
mov
mov
mov
mov
mov
call
push
lea
pop
push
push
pop
push
call
push
lea
call
push
lea
call
lea
mov
mov
lea
mov
call
or
lea
call
jmp
cmp
mov
mov
mov
jle
mov
mov
cmp
mov
mov
mov
mov
jne
dec
cmp
jge
mov
push
add
lea
push
call
jmp
lea
push
mov
call
mov
mov
mov
mov
push
pop
cmp
mov
jbe
mov
mov
add
lea
push
call
inc
cmp
jb
add
add
push
push
lea
call
mov
inc
cmp
jl
xor
mov
cmp
je
and
test
jle
and
mov
xor
add
mov
test
jbe
mov
add
add
dec
jne
mov
mov
add
xor
test
jbe
mov
add
add
add
dec
jne
mov
lea
add
push
push
call
inc
mov
add
cmp
jl
xor
cmp
jle
mov
xor
test
jle
mov
add
cmp
je
inc
add
cmp
jl
or
cmp
jne
push
lea
call
inc
cmp
jl
xor
cmp
jle
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
or
cmp
jne
push
lea
call
inc
cmp
jl
cmp
jne
lea
push
push
mov
call
mov
mov
lea
push
lea
push
push
lea
call
mov
xor
test
jbe
mov
add
add
add
dec
jne
mov
xor
test
jle
mov
add
cmp
je
inc
add
cmp
jl
or
test
jl
mov
mov
jmp
mov
jmp
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
jmp
mov
lea
push
push
mov
call
push
mov
call
mov
mov
cmp
je
mov
xor
test
mov
jle
mov
mov
add
push
lea
push
call
inc
cmp
jl
lea
call
xor
test
jle
lea
mov
mov
push
lea
call
mov
push
and
pop
lea
mov
mov
lea
mov
push
mov
call
push
lea
pop
push
push
call
mov
lea
add
push
call
mov
lea
mov
call
or
lea
call
inc
cmp
jl
mov
dec
test
jl
lea
mov
mov
mov
push
push
call
dec
jns
push
call
pop
mov
mov
test
mov
je
lea
push
call
jmp
xor
or
lea
push
mov
mov
call
mov
mov
pop
pop
xor
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
mov
mov
test
je
mov
call
push
call
pop
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
and
and
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
and
and
lea
push
mov
call
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
lea
push
call
mov
and
mov
mov
lea
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
push
mov
mov
push
push
mov
mov
add
push
call
test
jle
and
mov
mov
sub
add
mov
mov
movs
movs
movs
movs
call
add
dec
jne
pop
pop
mov
pop
pop
pop
ret
sub
jmp
mov
call
sub
push
xor
cmp
push
push
mov
setne
mov
mov
cmp
mov
mov
je
mov
push
call
cmp
mov
mov
mov
sete
cmp
je
mov
mov
mov
cmp
jne
mov
and
cmp
je
mov
push
call
jmp
lea
call
mov
xor
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
jne
push
push
lea
call
push
lea
mov
call
lea
mov
call
mov
inc
xor
mov
jmp
mov
cmp
je
mov
mov
cmp
je
or
lea
mov
call
mov
mov
lea
lea
push
mov
call
lea
mov
call
mov
mov
call
mov
mov
mov
add
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
ja
sete
push
lea
call
inc
jmp
push
mov
push
mov
push
call
mov
cmp
je
mov
mov
lea
call
lea
mov
call
mov
and
cmp
je
mov
push
call
jmp
push
lea
call
push
mov
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
jmp
cmp
jl
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
push
mov
mov
mov
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
test
mov
mov
mov
je
mov
push
call
mov
mov
lea
mov
cmp
jne
mov
mov
mov
mov
cmp
setne
push
lea
push
push
push
push
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
mov
test
je
mov
push
call
jmp
mov
mov
mov
push
shl
mov
mov
mov
call
mov
mov
mov
mov
mov
shl
mov
add
mov
adc
and
mov
mov
mov
test
je
mov
lea
push
push
push
call
mov
mov
mov
push
mov
lea
push
push
push
mov
mov
add
push
add
push
push
push
push
push
push
push
lea
push
call
mov
cmp
jne
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
cmp
jne
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
test
je
mov
push
call
mov
mov
test
je
mov
push
call
jmp
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
lea
call
lea
mov
call
mov
and
test
jmp
mov
mov
mov
cmp
je
push
call
mov
mov
test
je
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
lea
call
lea
mov
call
mov
jmp
mov
jmp
mov
push
call
test
mov
je
mov
ret
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
ret
mov
lea
call
lea
mov
call
mov
inc
add
mov
mov
mov
adc
mov
add
mov
adc
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
jne
xor
pop
pop
leave
ret
lea
test
jl
push
mov
call
test
jl
dec
jns
lea
push
push
mov
call
mov
mov
mov
jmp
mov
mov
shl
push
push
mov
mov
xor
mov
xor
mov
test
jle
mov
push
lea
mov
mov
add
adc
add
dec
jne
pop
mov
pop
pop
ret
mov
call
push
mov
push
push
mov
mov
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
je
push
mov
call
push
mov
call
mov
mov
pop
pop
mov
leave
ret
add
jmp
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
and
test
je
mov
push
call
add
mov
lea
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
test
je
mov
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
lea
call
mov
and
mov
mov
lea
mov
call
lea
call
lea
call
and
and
pop
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
cmp
jae
mov
mov
lea
push
mov
mov
mov
push
push
call
mov
cmp
mov
je
cmp
jne
mov
push
inc
lea
call
mov
or
mov
mov
mov
mov
cmp
jne
mov
push
push
mov
call
mov
cmp
jne
push
push
lea
call
cmp
lea
sete
push
call
mov
call
mov
or
cmp
je
mov
push
call
jmp
mov
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
lea
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
add
mov
not
push
call
ret
push
mov
push
mov
push
mov
call
test
jne
mov
call
and
and
push
lea
call
push
lea
push
call
mov
call
xor
pop
ret
push
mov
push
push
mov
test
je
and
cmp
jbe
mov
cmp
je
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
jne
mov
call
test
jne
jmp
mov
cmp
jae
mov
call
jmp
test
je
mov
add
adc
xor
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
and
mov
and
test
jl
mov
mov
mov
cdq
mov
mov
cmp
ja
jb
cmp
ja
cmp
jge
mov
mov
mov
mov
jmp
cmp
jne
push
pop
jmp
mov
mov
mov
mov
xor
jmp
mov
pop
pop
pop
leave
ret
sub
jmp
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
and
and
mov
mov
mov
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
mov
mov
mov
cmp
je
xor
cmp
setne
mov
jmp
mov
mov
push
mov
lea
add
mov
push
mov
mov
mov
add
push
push
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
lea
call
mov
mov
or
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
cmp
jge
mov
cmp
jne
cmp
jne
mov
mov
push
mov
push
call
or
mov
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
mov
call
and
inc
mov
push
mov
push
call
pop
ret
mov
mov
add
mov
mov
xor
cmp
jne
cmp
je
cmp
je
push
mov
mov
not
cmp
pop
je
push
pop
jmp
xor
push
call
ret
push
mov
mov
mov
cmp
jge
mov
add
mov
mov
mov
mov
or
jne
mov
call
test
jne
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
push
mov
test
je
and
mov
test
je
mov
jmp
mov
cmp
je
xor
cmp
ja
jb
cmp
jae
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
je
add
sub
sub
sbb
test
je
add
mov
or
jne
mov
call
test
jne
mov
call
jmp
mov
call
test
jne
mov
mov
cmp
je
mov
call
test
jne
cmp
jne
jmp
test
je
mov
add
xor
pop
pop
pop
ret
mov
mov
mov
push
and
and
mov
cmp
jl
push
pop
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
pop
ret
push
mov
mov
mov
cmp
jge
cmp
je
push
mov
call
test
jne
jmp
mov
call
test
je
jmp
xor
pop
ret
push
push
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
pop
ret
sub
jmp
sub
jmp
mov
call
push
push
push
push
mov
push
mov
lea
mov
mov
add
mov
call
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
lea
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
add
neg
sbb
and
lea
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
pop
mov
leave
ret
add
jmp
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
call
push
lea
xor
pop
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
lea
pop
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
lea
push
mov
call
mov
push
mov
pop
mov
mov
mov
mov
lea
push
mov
mov
call
mov
lea
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
call
lea
mov
call
mov
lea
mov
mov
call
lea
mov
call
lea
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
sub
je
dec
dec
je
sub
je
dec
jne
mov
push
push
jmp
mov
push
push
jmp
mov
lea
push
call
jmp
mov
mov
mov
mov
or
je
push
push
lea
call
jmp
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
lea
test
jl
mov
lea
push
call
dec
jmp
inc
xor
jmp
cmp
jge
mov
push
lea
mov
mov
mov
xor
mov
mov
mov
call
mov
lea
push
lea
push
mov
push
call
cmp
jne
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
cmp
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
inc
jmp
push
lea
call
lea
mov
call
push
mov
call
pop
jmp
mov
xor
cmp
jge
mov
cmp
jbe
mov
jmp
inc
jmp
and
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
mov
cmp
je
mov
mov
call
jmp
xor
ret
mov
dec
js
mov
lea
mov
cmp
jne
cmp
je
dec
sub
test
jge
xor
ret
mov
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
cmp
mov
ja
je
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
jne
lea
lea
push
jmp
lea
lea
push
jmp
cmp
je
push
jmp
mov
mov
cmp
je
mov
cmp
jne
push
lea
call
push
jmp
push
push
jmp
push
push
jmp
mov
jmp
cmp
je
lea
lea
call
push
lea
mov
call
push
mov
jmp
lea
lea
push
call
jmp
cmp
ja
je
sub
je
sub
je
dec
dec
jne
cmp
jge
mov
cmp
je
push
pop
jmp
xor
push
lea
call
jmp
cmp
je
push
jmp
push
mov
call
jmp
mov
mov
cmp
je
mov
push
mov
lea
mov
mov
mov
mov
call
mov
mov
dec
mov
cmp
jl
mov
cmp
mov
je
push
lea
call
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
mov
lea
push
lea
push
mov
push
call
test
jne
push
lea
push
call
push
lea
mov
call
push
mov
jmp
lea
lea
push
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
mov
lea
movzx
inc
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
lea
mov
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
movzx
mov
and
shr
add
or
shl
lea
mov
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
push
lea
mov
call
movzx
lea
call
push
lea
mov
call
push
mov
call
lea
mov
call
mov
lea
mov
call
push
lea
mov
call
push
mov
call
pop
xor
jmp
cmp
jne
cmp
jne
cmp
jb
mov
lea
mov
and
mov
call
push
lea
mov
call
push
mov
call
pop
cmp
je
push
lea
call
lea
lea
push
call
jmp
cmp
jbe
push
lea
call
xor
mov
cmp
jae
cmp
jbe
lea
cmp
jae
push
lea
call
push
lea
call
push
call
push
mov
call
dec
mov
mov
pop
pop
xor
jmp
mov
lea
mov
call
inc
jmp
push
lea
call
push
mov
call
pop
jmp
cmp
je
cmp
je
cmp
jbe
cmp
ja
mov
mov
cmp
je
mov
mov
shl
cmp
mov
jne
mov
lea
cmp
jle
mov
mov
mov
add
mov
push
jmp
push
push
lea
call
jmp
cmp
lea
jge
mov
cmp
je
mov
mov
push
push
jmp
mov
mov
cmp
je
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
cmp
jge
mov
cmp
je
mov
mov
mov
lea
mov
mov
push
mov
call
leave
ret
push
mov
sub
and
push
mov
push
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
push
mov
xor
push
mov
mov
pop
push
pop
shl
cmp
je
dec
jns
push
lea
mov
mov
mov
call
test
mov
jne
mov
lea
shr
call
push
lea
mov
call
mov
push
call
mov
jmp
mov
mov
call
jmp
test
mov
jne
shr
lea
call
push
lea
mov
call
mov
push
call
mov
jmp
lea
call
push
lea
mov
call
mov
push
call
mov
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
mov
shr
call
mov
push
call
mov
and
call
mov
push
call
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
lea
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
push
lea
mov
push
call
cmp
mov
je
lea
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
jmp
and
lea
push
lea
mov
mov
mov
call
mov
push
push
lea
lea
mov
push
push
push
lea
call
mov
test
je
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
call
mov
call
mov
call
push
lea
call
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
mov
call
xor
jmp
mov
push
mov
call
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
mov
mov
mov
mov
pop
ret
push
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
call
pop
pop
ret
mov
call
push
push
push
and
push
mov
mov
push
lea
mov
call
mov
lea
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
mov
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
push
push
and
push
push
push
mov
mov
mov
test
je
mov
mov
add
cdq
sub
mov
sar
lea
mov
mov
cmp
jne
cmp
je
cmp
ja
jb
cmp
jae
mov
jmp
inc
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
jmp
mov
mov
ret
mov
call
sub
push
push
mov
push
mov
push
lea
push
push
call
xor
cmp
jne
add
mov
call
lea
mov
push
call
cmp
je
lea
call
mov
mov
lea
mov
call
lea
mov
call
push
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
lea
lea
push
call
lea
push
push
mov
push
call
push
mov
cmp
mov
je
call
pop
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
call
pop
lea
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
cmp
mov
jne
lea
call
mov
and
lea
call
mov
mov
test
je
mov
push
lea
call
lea
mov
push
call
or
lea
call
and
and
cmp
jle
jmp
mov
mov
mov
push
mov
lea
push
call
mov
mov
lea
call
test
je
mov
lea
call
lea
mov
push
lea
push
lea
push
push
lea
mov
call
test
je
lea
call
push
lea
call
mov
lea
push
call
cmp
jne
xor
xor
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
je
inc
add
cmp
jl
jmp
mov
push
pop
xor
call
mov
cmp
mov
ja
jb
cmp
jae
mov
mov
mov
lea
mov
mov
lea
mov
call
or
lea
call
inc
mov
mov
cmp
jl
cmp
jne
cmp
jne
and
and
mov
xor
mov
pop
pop
pop
mov
leave
ret
lea
mov
mov
lea
mov
call
or
lea
call
mov
jmp
mov
call
sub
push
push
mov
push
xor
mov
cmp
mov
mov
je
lea
mov
lea
call
mov
mov
mov
mov
mov
cmp
jae
cmp
jne
mov
lea
mov
call
and
lea
call
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
mov
je
mov
lea
mov
call
and
lea
call
mov
jmp
lea
call
cmp
mov
mov
mov
setne
cmp
mov
mov
mov
setne
and
cmp
mov
je
mov
cmp
je
cmp
jge
mov
mov
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
mov
jmp
and
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
cmp
mov
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
cmp
mov
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
mov
xor
cmp
je
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
push
call
pop
mov
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
mov
mov
mov
lea
mov
call
lea
mov
push
lea
push
mov
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
lea
mov
push
lea
push
mov
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
mov
lea
push
lea
push
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
push
lea
call
lea
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
cmp
mov
setne
mov
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
cmp
setne
mov
lea
mov
call
cmp
je
and
and
and
and
mov
mov
cmp
jne
cmp
je
mov
shr
and
mov
cmp
je
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
mov
mov
mov
or
mov
je
cmp
je
lea
mov
call
push
call
pop
mov
mov
lea
call
and
lea
call
mov
jmp
lea
mov
call
lea
lea
push
call
push
mov
call
inc
pop
jmp
lea
call
lea
mov
call
lea
lea
push
lea
push
mov
call
cmp
mov
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
mov
lea
push
lea
push
push
mov
call
mov
cmp
je
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
jmp
cmp
setne
cmp
je
push
lea
call
push
mov
call
jmp
and
mov
and
mov
test
je
cmp
je
mov
jmp
mov
test
mov
mov
je
mov
lea
push
lea
call
cmp
jae
xor
cmp
lea
mov
jne
cmp
jne
and
jmp
lea
mov
mov
test
je
cmp
je
mov
jmp
and
cmp
lea
sbb
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
call
and
mov
lea
push
push
mov
push
mov
call
push
lea
mov
mov
push
lea
push
lea
push
push
lea
push
lea
push
mov
push
push
call
mov
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
lea
call
and
lea
call
mov
jmp
lea
call
mov
lea
push
lea
push
lea
push
push
push
call
mov
mov
test
mov
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
mov
lea
mov
call
xor
mov
mov
mov
mov
mov
push
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
push
mov
xor
push
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
mov
push
push
mov
xor
cmp
mov
mov
mov
jne
xor
jmp
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
xor
xor
or
or
mov
mov
mov
mov
jmp
cmp
je
mov
or
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
push
call
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
lea
mov
call
lea
call
cmp
jge
mov
lea
push
call
mov
mov
call
cmp
jne
mov
jmp
mov
mov
shl
add
cmp
jne
push
push
lea
call
lea
lea
call
mov
test
jne
sub
lea
mov
mov
movs
movs
movs
lea
movs
call
push
and
call
mov
pop
jmp
push
push
lea
call
test
je
mov
push
call
pop
mov
jmp
push
and
call
pop
inc
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
mov
lea
lea
push
call
test
jne
mov
cmp
je
mov
jmp
push
push
mov
call
lea
mov
push
mov
call
test
jne
mov
neg
sbb
and
pop
pop
ret
push
push
mov
mov
and
call
test
je
push
push
mov
call
mov
cmp
jne
push
push
mov
call
mov
mov
call
test
jne
mov
jmp
push
push
mov
call
xor
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
cmp
jg
cmp
jg
push
lea
call
mov
mov
mov
xor
lea
lea
mov
call
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
mov
lea
call
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
or
lea
call
push
xor
pop
lea
rep
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
cmp
jbe
push
lea
call
inc
mov
cmp
jb
cmp
mov
jbe
push
lea
call
inc
mov
cmp
jb
inc
mov
cmp
jl
xor
cmp
jle
mov
mov
push
mov
lea
pop
mov
mov
lea
mov
mov
shl
or
inc
cmp
jl
xor
lea
mov
call
or
lea
call
lea
mov
mov
lea
mov
mov
push
pop
shl
test
je
or
mov
inc
add
cmp
jl
add
dec
jne
lea
push
mov
pop
shl
test
jne
inc
add
cmp
jl
mov
jmp
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
call
mov
push
call
test
jle
push
mov
call
dec
jne
pop
pop
ret
cmp
jb
mov
ret
mov
lea
mov
mov
ret
push
mov
cmp
je
mov
call
and
pop
ret
push
mov
push
lea
mov
call
cmp
je
mov
mov
mov
mov
pop
pop
ret
push
mov
call
push
mov
mov
push
call
mov
pop
ret
push
mov
sub
push
push
mov
push
call
test
pop
je
push
lea
mov
movs
movs
movs
pop
jmp
xor
lea
push
mov
call
mov
mov
pop
mov
mov
mov
pop
and
mov
mov
mov
leave
ret
mov
push
push
push
call
ret
push
mov
push
push
mov
call
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
jl
cmp
jl
call
mov
mov
push
push
call
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
lea
push
call
push
mov
mov
cmp
jb
call
mov
mov
mov
inc
mov
pop
ret
push
mov
mov
sub
cmp
jbe
call
xor
cmp
jbe
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
ret
mov
push
mov
push
mov
xor
mov
sub
cmp
jb
ja
cmp
jbe
call
add
pop
pop
ret
push
mov
call
push
push
mov
call
pop
ret
push
mov
sub
push
push
mov
push
mov
cmp
jb
call
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
test
je
cmp
jb
call
mov
mov
mov
movzx
cdq
call
or
or
shr
add
inc
cmp
lea
mov
jl
mov
mov
pop
pop
pop
leave
ret
movzx
movzx
dec
and
mov
cdq
shl
call
add
adc
jmp
push
call
test
mov
ja
cmp
jbe
call
mov
pop
ret
push
mov
mov
add
cmp
jbe
call
mov
mov
mov
add
mov
pop
ret
push
mov
mov
add
cmp
jbe
call
mov
mov
add
add
mov
mov
mov
pop
ret
push
mov
push
push
push
mov
push
push
mov
mov
sub
mov
add
pop
shr
shl
mov
je
cmp
jne
cmp
je
inc
inc
cmp
mov
jb
cmp
jne
call
shr
js
lea
cmp
je
call
mov
cmp
jl
push
call
mov
mov
test
jle
mov
mov
mov
inc
inc
inc
inc
dec
jne
mov
pop
and
mov
add
mov
add
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
push
lea
pop
push
mov
call
test
jne
mov
call
test
je
xor
jmp
xor
mov
mov
mov
push
lea
mov
call
mov
push
push
push
mov
mov
call
mov
mov
add
mov
test
je
mov
mov
sub
sbb
cmp
ja
jb
cmp
ja
mov
mov
mov
lea
push
mov
sub
push
mov
add
push
push
call
test
jne
mov
add
test
je
cmp
jbe
mov
xor
add
mov
test
mov
jbe
jmp
mov
mov
mov
cmp
je
cmp
jae
inc
mov
jmp
cmp
je
add
call
test
jne
inc
mov
cmp
jb
mov
mov
add
adc
sub
push
add
push
push
call
add
jmp
mov
jmp
push
pop
jmp
mov
mov
add
push
push
lea
push
call
add
add
mov
push
mov
pop
adc
add
mov
mov
push
push
adc
push
push
push
call
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
sub
mov
lea
cmp
jne
inc
cmp
jl
push
lea
pop
call
sub
neg
sbb
inc
pop
pop
ret
xor
jmp
push
push
mov
xor
sub
mov
lea
cmp
jne
inc
cmp
jl
push
lea
pop
call
cmp
jne
mov
jmp
push
pop
cmp
jne
inc
cmp
jb
cmp
jne
cmp
jne
xor
jmp
xor
jmp
push
pop
pop
pop
ret
push
mov
push
and
and
call
mov
lea
push
push
mov
push
push
push
call
test
jne
push
mov
push
call
test
jne
push
mov
call
xor
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
push
mov
mov
call
or
je
mov
call
jmp
pop
ret
mov
call
sub
push
push
mov
push
mov
call
mov
mov
mov
call
push
mov
call
and
and
test
jbe
mov
and
and
mov
mov
and
lea
push
mov
call
push
or
mov
call
mov
pop
mov
mov
mov
call
mov
mov
and
mov
push
lea
push
call
mov
cmp
jle
call
mov
xor
cmp
mov
mov
jle
mov
lea
mov
mov
mov
mov
movzx
cdq
call
or
or
dec
add
dec
jne
mov
test
mov
mov
mov
je
mov
call
mov
mov
call
jmp
push
pop
mov
test
mov
je
mov
call
push
lea
mov
call
push
mov
push
call
test
je
call
mov
add
mov
add
dec
jne
mov
lea
dec
mov
mov
call
push
mov
call
mov
test
jbe
mov
mov
call
mov
mov
call
push
mov
push
call
dec
jne
mov
cmp
jae
call
sub
lea
mov
push
call
cmp
jne
xor
cmp
jbe
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
or
test
jl
inc
cmp
jb
jmp
mov
push
call
cmp
je
call
jmp
test
jbe
mov
call
mov
push
call
dec
jne
mov
pop
pop
pop
mov
leave
ret
push
mov
mov
call
cmp
jne
cmp
je
or
jne
call
mov
call
jmp
pop
ret
push
mov
push
push
mov
push
push
mov
push
push
mov
call
mov
call
mov
push
call
xor
test
jle
mov
xor
cmp
je
mov
mov
call
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
mov
call
mov
mov
mov
mov
call
push
push
mov
mov
call
mov
call
mov
push
call
test
jbe
mov
mov
call
mov
push
push
call
dec
jne
mov
mov
call
mov
or
je
cmp
jne
test
jne
push
mov
push
push
call
jmp
mov
call
jmp
cmp
jne
mov
mov
call
mov
push
call
mov
call
test
jbe
mov
push
call
dec
jne
pop
pop
pop
pop
ret
mov
call
sub
push
push
xor
push
push
mov
push
call
mov
call
and
mov
push
lea
mov
push
call
mov
mov
call
push
mov
call
mov
cmp
jbe
mov
lea
call
push
mov
mov
call
and
lea
call
mov
mov
push
mov
call
dec
jne
or
lea
call
push
push
mov
call
cmp
mov
jbe
jmp
xor
mov
mov
and
mov
mov
test
jle
mov
mov
mov
add
mov
add
inc
cmp
jl
add
push
mov
mov
call
test
jbe
mov
call
mov
push
push
call
dec
jne
inc
mov
cmp
jb
xor
mov
call
mov
or
je
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
call
xor
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
inc
cmp
mov
jb
xor
lea
mov
call
or
lea
call
jmp
mov
call
jmp
mov
pop
pop
pop
mov
leave
ret
push
push
pop
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
mov
call
sub
push
mov
mov
push
push
mov
call
mov
mov
push
call
mov
call
mov
cmp
mov
mov
jne
xor
cmp
jne
xor
cmp
jle
mov
call
mov
push
call
inc
cmp
jl
jmp
xor
cmp
jne
cmp
je
cmp
jne
cmp
je
or
je
mov
call
jmp
mov
cmp
jne
xor
cmp
jle
mov
push
call
inc
cmp
jl
xor
mov
xor
mov
cmp
jle
mov
mov
cmp
je
cmp
mov
mov
jbe
dec
mov
cmp
jne
cmp
jne
mov
call
mov
mov
mov
push
push
call
add
mov
adc
mov
xor
dec
jne
mov
mov
call
sub
mov
sbb
push
push
call
mov
xor
inc
cmp
mov
jl
cmp
jne
cmp
jne
mov
call
mov
mov
mov
xor
mov
mov
cmp
mov
jle
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
inc
cmp
jl
xor
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
call
xor
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
push
call
push
mov
call
jmp
test
jbe
mov
mov
mov
mov
mov
push
call
mov
mov
push
mov
call
inc
dec
jne
inc
cmp
jl
and
lea
call
or
lea
call
mov
jmp
or
je
mov
call
mov
call
mov
mov
jmp
mov
cmp
jne
mov
call
mov
call
mov
test
jle
mov
push
call
dec
jne
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
call
test
mov
ja
cmp
jbe
call
mov
sub
je
sub
je
dec
je
dec
je
call
jmp
push
mov
push
push
push
push
call
jmp
push
mov
push
call
jmp
push
mov
push
push
push
call
jmp
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
call
mov
mov
push
call
and
xor
test
jle
test
jne
mov
call
mov
mov
mov
mov
test
setne
push
call
shr
dec
jne
pop
pop
pop
pop
ret
push
mov
push
mov
mov
call
test
jne
push
mov
push
call
jmp
mov
call
mov
mov
push
call
test
jle
mov
push
call
dec
jne
pop
pop
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
push
call
and
push
xor
lea
mov
push
call
push
mov
call
cmp
jle
mov
xor
xor
cmp
je
mov
call
push
push
mov
call
inc
cmp
jl
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
lea
call
mov
and
push
lea
call
mov
mov
push
lea
call
mov
mov
lea
mov
call
mov
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
lea
mov
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
mov
mov
call
and
push
lea
call
mov
mov
add
adc
and
cmp
mov
jle
mov
mov
and
and
mov
mov
mov
mov
mov
lea
push
mov
call
push
mov
mov
call
mov
pop
mov
mov
mov
mov
mov
call
mov
xor
mov
cmp
jne
cmp
je
call
push
mov
call
push
call
xor
pop
cmp
je
mov
mov
mov
test
mov
je
mov
push
call
mov
xor
push
push
push
mov
mov
mov
push
mov
mov
mov
push
mov
push
mov
push
lea
mov
push
lea
push
push
push
push
push
call
test
mov
jne
mov
cmp
je
mov
mov
mov
call
mov
cmp
je
call
mov
and
cmp
jle
mov
mov
shl
inc
mov
mov
add
adc
add
adc
inc
mov
mov
cmp
jl
test
mov
je
mov
push
call
inc
mov
cmp
jl
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
xor
lea
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
test
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
mov
jmp
mov
call
sub
push
push
push
mov
mov
call
mov
cmp
mov
mov
jne
xor
cmp
jne
lea
mov
push
call
mov
call
mov
mov
jmp
xor
lea
call
mov
cmp
mov
jne
cmp
jne
push
lea
lea
mov
push
push
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
mov
mov
add
adc
mov
call
mov
mov
xor
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
cmp
mov
jne
cmp
jne
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
mov
call
mov
mov
add
adc
mov
call
mov
mov
jmp
cmp
mov
jle
push
lea
call
mov
mov
mov
mov
call
push
push
lea
call
mov
lea
push
call
push
lea
call
inc
mov
cmp
jl
xor
lea
call
mov
or
jne
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
lea
call
or
lea
call
mov
jmp
cmp
jne
cmp
je
call
mov
call
push
lea
mov
call
mov
cmp
jbe
mov
lea
call
push
lea
mov
call
push
mov
call
dec
pop
jne
push
lea
push
call
cmp
je
push
push
lea
call
cmp
jbe
cmp
je
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
je
mov
call
mov
cmp
mov
mov
mov
mov
ja
jb
cmp
ja
mov
add
cmp
ja
jmp
and
lea
lea
push
push
mov
call
cmp
jle
mov
mov
mov
add
push
call
inc
cmp
jl
lea
mov
call
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
and
lea
lea
push
push
mov
call
cmp
jbe
mov
mov
mov
mov
mov
test
mov
je
mov
call
mov
mov
inc
cmp
jb
lea
mov
call
lea
mov
call
xor
push
lea
push
call
jmp
lea
mov
push
push
call
mov
xor
cmp
jbe
mov
cmp
je
inc
inc
cmp
jb
mov
lea
call
mov
lea
call
jmp
lea
jmp
lea
push
mov
push
call
jmp
push
lea
jmp
push
lea
jmp
push
lea
jmp
push
lea
push
lea
push
mov
call
jmp
cmp
mov
mov
jb
ja
cmp
jbe
mov
call
test
je
call
add
adc
mov
cmp
jb
ja
mov
cmp
jb
jmp
push
push
call
cmp
ja
cmp
jbe
mov
mov
sub
cmp
jne
cmp
je
call
jmp
xor
cmp
mov
mov
mov
jbe
mov
cmp
je
inc
inc
cmp
jb
xor
cmp
jbe
mov
mov
cmp
mov
sete
test
mov
je
and
mov
mov
and
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
jmp
mov
mov
cmp
sete
mov
mov
mov
inc
and
mov
mov
mov
mov
cmp
je
push
lea
call
inc
cmp
jb
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
imul
add
pop
xchg
add
leave
xchg
add
rcl
add
test
xchg
add
xor
add
not
mov
xor
push
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
pop
ret
push
push
push
mov
push
lea
mov
call
push
mov
call
xor
xor
cmp
jle
push
mov
call
mov
mov
add
inc
cmp
jl
pop
pop
pop
pop
ret
push
push
push
push
push
mov
push
lea
mov
call
push
mov
call
xor
xor
cmp
mov
jle
push
mov
push
call
mov
mov
add
mov
adc
inc
cmp
jl
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
lea
mov
call
push
mov
call
lea
mov
call
push
mov
call
xor
xor
cmp
mov
mov
jle
jmp
xor
mov
mov
mov
cmp
sete
cmp
je
cmp
jne
push
lea
call
jmp
cmp
jne
cmp
jl
call
push
mov
call
mov
cmp
jne
inc
jmp
push
lea
call
cmp
jne
inc
mov
mov
cmp
jb
inc
and
inc
mov
cmp
jl
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
cmp
mov
je
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
pop
call
xor
cmp
jne
mov
or
jne
mov
or
jne
cmp
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
mov
mov
mov
mov
sub
sbb
mov
jne
cmp
jae
sub
mov
mov
lea
push
mov
mov
push
neg
cdq
push
push
push
call
test
jne
mov
push
lea
call
test
jne
lea
test
jl
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
dec
jns
test
jl
mov
sub
cdq
mov
mov
mov
lea
cdq
mov
mov
sub
mov
sbb
add
adc
call
push
push
push
mov
mov
push
mov
push
call
test
je
jmp
cmp
je
call
mov
mov
mov
add
adc
mov
mov
mov
or
jne
xor
jmp
cmp
ja
cmp
ja
test
jg
jl
test
jae
push
pop
jmp
mov
push
push
push
mov
push
push
call
xor
cmp
jne
mov
mov
mov
push
mov
lea
call
push
mov
mov
call
test
je
mov
jmp
mov
mov
add
mov
adc
add
adc
mov
mov
add
mov
adc
add
adc
mov
mov
mov
call
cmp
je
call
and
lea
lea
push
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
test
je
cmp
jne
test
je
call
push
lea
mov
push
push
lea
push
push
push
push
push
call
test
je
mov
mov
jmp
cmp
jne
mov
mov
xor
jmp
cmp
jle
call
lea
call
mov
lea
push
push
call
mov
call
cmp
jne
test
je
call
push
mov
mov
mov
push
mov
mov
push
push
push
call
mov
mov
mov
lea
call
lea
mov
call
and
lea
call
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
and
mov
push
push
push
push
push
call
jmp
mov
ret
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
xor
cmp
mov
je
push
mov
mov
mov
mov
call
mov
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
je
mov
push
call
add
dec
jne
pop
push
mov
push
call
pop
pop
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
lea
lea
push
mov
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
mov
call
ret
push
mov
push
mov
push
push
test
mov
mov
jbe
or
cmp
jae
mov
mov
lea
push
push
push
push
call
test
jne
cmp
je
add
sub
jne
xor
pop
pop
pop
pop
ret
mov
jmp
push
mov
push
push
push
push
lea
push
mov
push
call
and
add
lea
mov
push
push
mov
call
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
lea
push
call
push
lea
push
call
mov
lea
call
push
lea
pop
call
mov
lea
call
lea
push
push
mov
call
pop
pop
leave
ret
xor
mov
inc
shr
cmp
jl
ret
mov
push
push
mov
xor
mov
push
mov
pop
inc
call
cmp
mov
jl
pop
pop
ret
push
push
push
mov
call
push
lea
mov
call
xor
cmp
jne
mov
lea
push
push
mov
push
call
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
call
cmp
jne
mov
push
push
push
mov
push
push
call
pop
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
push
mov
xor
cmp
je
mov
add
jmp
cmp
je
push
mov
push
xor
cmp
jbe
mov
lea
push
call
inc
cmp
jb
push
mov
mov
call
pop
mov
pop
jmp
push
lea
push
call
pop
pop
ret
push
mov
push
mov
push
mov
mov
mov
sub
cmp
jbe
lea
push
push
mov
call
add
push
push
push
call
add
add
pop
pop
pop
ret
push
mov
cmp
je
inc
jmp
cmp
push
je
lea
call
mov
movzx
mov
and
xor
shr
mov
xor
mov
jmp
lea
call
pop
ret
push
mov
mov
cmp
jne
lea
push
push
mov
call
mov
push
mov
mov
inc
pop
pop
ret
push
push
push
mov
pop
push
mov
call
shr
dec
jne
pop
pop
ret
push
mov
push
push
push
mov
pop
push
mov
call
mov
mov
push
pop
call
dec
mov
mov
jne
pop
pop
pop
ret
push
mov
push
push
and
push
push
push
push
mov
mov
xor
pop
push
mov
pop
xor
call
cmp
jb
ja
cmp
jb
or
add
shr
inc
cmp
jl
jmp
mov
mov
mov
shl
call
or
push
mov
call
test
jle
push
mov
call
mov
mov
push
pop
call
dec
mov
mov
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
cdq
push
push
call
and
cmp
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
or
je
add
inc
cmp
jb
mov
dec
test
jl
jmp
mov
mov
mov
dec
push
mov
pop
mov
call
cmp
mov
mov
jge
mov
push
pop
and
cmp
jne
cmp
je
xor
test
sete
cmp
mov
sete
dec
and
cmp
sete
dec
and
or
or
push
mov
call
push
lea
mov
push
call
cmp
je
push
mov
push
call
push
mov
push
call
cmp
je
push
mov
push
call
push
mov
push
call
inc
mov
cmp
jl
xor
cmp
jle
mov
mov
push
push
lea
call
mov
push
push
call
inc
cmp
jl
mov
cmp
jle
xor
test
jle
mov
mov
push
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
and
push
push
mov
push
xor
cmp
mov
mov
jle
mov
cmp
je
or
shr
jne
push
mov
call
and
mov
inc
cmp
jl
cmp
je
push
mov
call
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
mov
xor
test
mov
jle
mov
cmp
je
inc
inc
cmp
jl
test
je
push
mov
call
cmp
jne
push
mov
call
jmp
push
mov
call
push
mov
call
mov
xor
cmp
jle
mov
cmp
je
mov
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
xor
mov
cmp
je
push
call
push
mov
push
call
mov
mov
cdq
push
push
call
push
mov
call
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
push
mov
push
call
push
mov
call
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
cmp
mov
je
push
call
push
mov
call
mov
mov
cdq
push
push
call
push
mov
call
xor
cmp
jle
mov
mov
push
call
inc
cmp
jl
mov
push
call
cmp
mov
jle
jmp
xor
mov
mov
mov
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
inc
mov
cmp
jl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
lea
mov
push
call
push
lea
call
inc
mov
cmp
jl
mov
lea
push
lea
push
call
mov
push
call
and
lea
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
push
mov
call
mov
xor
xor
mov
cmp
jle
mov
cmp
jne
inc
add
cmp
jl
jmp
mov
push
call
xor
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
xor
cmp
mov
mov
jle
mov
mov
xor
cmp
lea
jbe
inc
cmp
mov
je
cmp
je
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
inc
cmp
lea
jb
inc
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
shl
mov
cmp
jne
mov
mov
cmp
je
inc
jmp
cmp
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
push
lea
call
inc
dec
jne
inc
mov
cmp
jl
mov
lea
push
lea
push
call
mov
push
call
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
ret
push
mov
push
mov
push
push
mov
mov
mov
cmp
jne
xor
jmp
add
shr
push
push
push
cdq
push
push
call
push
mov
xor
mov
add
adc
add
adc
push
push
call
lea
mov
push
mov
call
push
mov
call
push
push
mov
call
mov
mov
pop
cmp
jne
push
mov
call
jmp
push
mov
call
push
mov
call
push
mov
call
pop
pop
leave
ret
push
push
push
pop
push
pop
push
mov
pop
xor
call
cmp
jb
ja
cmp
jb
add
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
mov
xor
xor
test
jle
mov
cmp
je
inc
inc
cmp
jl
test
je
mov
push
push
lea
push
push
call
xor
cmp
jle
mov
cmp
je
mov
mov
push
push
call
inc
cmp
jl
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
mov
mov
mov
mov
call
mov
mov
push
mov
push
mov
mov
mov
push
lea
push
lea
push
push
push
mov
push
push
call
mov
cmp
je
lea
mov
call
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
call
lea
mov
call
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
xor
cmp
mov
mov
jle
mov
mov
mov
mov
add
adc
inc
mov
mov
add
cmp
mov
jl
mov
push
mov
mov
mov
mov
call
mov
cmp
jle
push
mov
call
lea
mov
push
lea
push
push
push
push
call
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
cmp
je
push
lea
push
call
mov
lea
mov
push
call
mov
lea
push
call
inc
mov
cmp
jl
lea
mov
push
lea
push
lea
push
lea
push
lea
push
call
push
mov
call
lea
mov
call
lea
mov
call
or
lea
call
cmp
je
push
mov
call
mov
mov
cdq
push
push
call
mov
mov
mov
mov
mov
push
lea
mov
call
cmp
mov
mov
jle
mov
mov
mov
cmp
je
push
lea
call
jmp
push
lea
call
inc
inc
mov
cmp
jl
cmp
jle
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
push
lea
call
cmp
mov
mov
mov
jle
mov
mov
mov
mov
cmp
jne
cmp
lea
sete
push
call
mov
cmp
jne
inc
mov
cmp
jge
mov
mov
cmp
jne
mov
push
lea
call
cmp
je
inc
inc
mov
cmp
jl
cmp
jbe
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
cmp
jbe
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
mov
cmp
je
inc
mov
inc
add
cmp
lea
mov
jl
cmp
jle
inc
xor
push
push
push
call
inc
mov
inc
push
call
push
mov
call
xor
mov
push
push
call
push
mov
call
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
jl
jmp
mov
mov
mov
mov
mov
push
mov
call
xor
mov
mov
push
call
inc
mov
mov
cmp
jle
inc
mov
cmp
jl
mov
cmp
je
lea
push
push
mov
call
mov
cmp
je
lea
push
push
mov
call
mov
cmp
je
lea
push
push
mov
call
lea
push
push
mov
call
mov
mov
mov
mov
mov
push
lea
mov
call
cmp
mov
mov
jle
mov
mov
mov
lea
mov
mov
push
call
cmp
je
inc
inc
mov
cmp
jl
cmp
jle
push
push
push
lea
mov
push
call
cmp
mov
jle
mov
mov
mov
cmp
je
push
mov
call
inc
mov
cmp
jl
or
lea
call
push
mov
call
push
mov
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
call
test
jne
mov
jmp
mov
call
test
je
xor
xor
xor
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
xor
cmp
mov
je
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
lea
push
mov
call
mov
call
mov
mov
or
mov
lea
mov
push
push
push
mov
mov
call
cmp
je
mov
mov
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
jmp
lea
call
mov
mov
mov
add
mov
push
lea
call
cmp
mov
jne
lea
push
lea
call
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
mov
push
push
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
push
mov
call
pop
mov
jmp
cmp
mov
jne
lea
push
push
mov
call
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
lea
push
mov
push
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
push
mov
call
mov
cmp
jle
mov
mov
mov
mov
mov
add
adc
mov
add
dec
mov
jne
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
or
mov
call
pop
lea
call
cmp
jne
mov
lea
not
call
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
mov
push
call
cmp
jne
lea
mov
push
call
mov
pop
pop
pop
mov
leave
ret
xor
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
mov
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
push
pop
ret
xor
ret
push
push
mov
push
mov
mov
mov
push
call
lea
xor
cmp
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
xor
mov
mov
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
jge
mov
cmp
je
push
pop
jmp
xor
pop
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
mov
lea
mov
cmp
jl
push
lea
call
jmp
mov
mov
push
mov
lea
call
pop
pop
pop
pop
ret
push
push
mov
mov
cmp
jl
push
lea
push
mov
call
cmp
jge
pop
mov
mov
test
mov
je
cmp
jl
push
push
mov
call
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
lea
mov
call
add
lea
push
call
push
xor
pop
lea
mov
call
push
lea
pop
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
lea
mov
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
mov
pop
call
push
mov
pop
call
push
mov
pop
call
push
mov
pop
call
or
lea
call
mov
pop
pop
mov
leave
ret
push
push
push
push
mov
push
xor
mov
mov
test
jle
mov
mov
xor
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jl
jmp
push
push
mov
call
mov
mov
push
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
xor
test
jle
mov
xor
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jl
jmp
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
push
mov
test
jle
mov
mov
cmp
jne
mov
xor
cmp
je
inc
add
cmp
jl
jmp
mov
push
push
mov
call
push
mov
call
mov
mov
pop
pop
mov
pop
and
leave
ret
mov
mov
mov
mov
xor
ret
push
mov
mov
mov
cmp
jge
mov
push
push
call
cmp
jne
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
pop
ret
xor
mov
mov
cmp
jne
mov
cmp
je
add
inc
cmp
jl
or
ret
push
mov
lea
push
mov
push
push
mov
push
mov
push
call
mov
mov
add
adc
pop
test
je
mov
pop
ret
mov
mov
test
jne
mov
jmp
push
mov
push
push
push
call
ret
push
push
push
mov
lea
mov
call
push
mov
mov
call
test
jl
cmp
jge
test
jge
inc
jmp
mov
pop
pop
pop
ret
push
push
mov
push
call
mov
mov
push
call
cmp
jg
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
call
push
lea
push
call
mov
pop
leave
ret
push
push
mov
push
push
pop
mov
inc
test
je
cmp
je
mov
mov
inc
test
jne
test
je
cmp
je
cmp
jne
mov
inc
jmp
inc
test
je
cmp
je
mov
inc
jmp
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
lea
mov
call
and
and
mov
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
mov
call
pop
ret
mov
call
push
push
push
push
mov
xor
mov
mov
mov
mov
cmp
je
lea
jmp
mov
mov
lea
mov
mov
mov
push
add
call
or
test
je
mov
cmp
je
mov
push
call
mov
or
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
mov
call
and
inc
pop
ret
push
mov
push
mov
mov
add
mov
mov
mov
call
xor
cmp
jne
cmp
je
mov
mov
not
cmp
je
push
pop
pop
pop
ret
push
mov
mov
mov
cmp
jge
mov
add
mov
mov
mov
mov
or
jne
mov
call
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
push
mov
test
je
and
mov
test
je
mov
jmp
mov
cmp
je
xor
cmp
ja
jb
cmp
jae
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
je
add
sub
sub
sbb
test
je
add
mov
or
jne
mov
call
test
jne
mov
call
test
jne
jmp
mov
call
test
jne
mov
mov
cmp
je
mov
call
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
mov
and
push
mov
mov
mov
push
lea
push
push
push
push
push
mov
mov
lea
push
lea
mov
push
push
push
push
push
call
mov
jmp
mov
mov
mov
ret
mov
or
cmp
jne
mov
mov
mov
sub
neg
sbb
and
mov
mov
call
mov
pop
pop
mov
pop
leave
ret
mov
push
call
mov
mov
neg
sbb
and
add
ret
mov
call
sub
mov
push
mov
mov
push
push
mov
mov
mov
push
or
mov
pop
jne
mov
mov
mov
cmp
je
mov
mov
jmp
xor
xor
cmp
ja
cmp
jbe
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
push
lea
call
mov
push
lea
mov
call
mov
and
mov
cmp
mov
mov
mov
mov
mov
je
push
lea
call
xor
cmp
jle
push
lea
call
inc
cmp
jl
xor
xor
cmp
jle
mov
mov
mov
cmp
je
mov
mov
inc
cmp
jl
cmp
mov
jle
mov
mov
shl
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jbe
mov
lea
mov
sub
mov
jmp
mov
mov
cmp
je
mov
inc
test
jl
mov
mov
mov
cmp
jne
mov
inc
add
mov
adc
mov
add
cmp
jb
cmp
je
mov
mov
mov
mov
mov
mov
mov
dec
test
jl
mov
lea
mov
cmp
jne
cmp
je
dec
sub
test
jge
and
mov
call
mov
movzx
call
sub
lea
mov
mov
movs
movs
lea
movs
call
mov
cmp
jne
push
mov
call
add
adc
jmp
mov
jmp
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
cmp
je
mov
inc
mov
cmp
jl
push
push
lea
call
mov
xor
mov
mov
cmp
mov
mov
jle
mov
mov
cmp
je
mov
mov
add
adc
cmp
jne
cmp
je
add
adc
jmp
cmp
jb
ja
cmp
jbe
mov
mov
xor
inc
add
cmp
jl
mov
cmp
jb
ja
mov
cmp
jbe
mov
mov
mov
cmp
mov
ja
jb
cmp
jae
mov
mov
push
mov
push
mov
push
call
cmp
je
mov
jmp
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
test
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
lea
call
cmp
mov
je
push
lea
call
lea
call
lea
push
call
lea
call
mov
test
jne
lea
call
mov
push
mov
pop
lea
call
lea
lea
push
mov
call
lea
mov
call
dec
jne
mov
mov
mov
mov
cmp
jne
cmp
je
and
mov
and
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
or
je
and
cmp
je
lea
mov
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
test
jl
inc
push
lea
push
call
mov
mov
call
mov
mov
push
call
pop
movzx
mov
call
mov
push
mov
mov
call
mov
inc
mov
cmp
jl
and
cmp
je
push
call
mov
pop
mov
test
mov
je
mov
and
lea
call
mov
jmp
xor
push
lea
mov
mov
call
mov
mov
cmp
je
add
lea
push
call
jmp
mov
test
jne
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
and
mov
lea
push
push
mov
call
test
push
mov
je
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
call
mov
push
call
mov
xor
push
push
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
jmp
mov
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
call
test
je
lea
push
mov
mov
mov
call
jmp
mov
lea
push
call
mov
call
test
je
cmp
jne
mov
test
je
add
lea
push
call
mov
jmp
mov
and
and
and
lea
lea
push
call
mov
mov
cmp
jge
lea
shl
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
shl
cmp
jne
push
mov
call
mov
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
adc
push
mov
push
mov
call
test
mov
jne
mov
add
mov
adc
mov
mov
and
mov
mov
mov
cmp
jle
mov
shl
mov
mov
mov
add
push
push
call
inc
mov
mov
add
cmp
jl
mov
push
lea
call
jmp
lea
call
lea
mov
call
test
mov
jne
and
and
lea
lea
push
lea
push
mov
call
lea
push
call
mov
mov
and
mov
mov
mov
test
mov
mov
jbe
shl
mov
jmp
mov
mov
and
mov
cmp
je
mov
inc
mov
test
jl
mov
mov
mov
cmp
jne
mov
push
lea
call
mov
add
cmp
jb
push
lea
mov
push
mov
push
push
call
test
mov
jne
mov
test
je
mov
push
call
and
push
lea
call
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
adc
mov
mov
mov
mov
lea
lea
mov
call
mov
lea
mov
mov
call
mov
push
push
lea
mov
mov
push
lea
push
lea
push
push
push
push
push
call
test
mov
jne
mov
call
cmp
jne
mov
mov
cmp
jge
mov
mov
mov
add
adc
mov
inc
cmp
jl
mov
lea
call
add
lea
push
mov
adc
lea
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
push
mov
lea
call
mov
mov
and
mov
mov
test
mov
jbe
lea
call
lea
mov
push
lea
push
push
mov
call
cmp
je
mov
inc
mov
test
jl
mov
mov
mov
mov
cmp
jne
cmp
je
lea
call
mov
lea
push
lea
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
push
call
pop
mov
lea
push
lea
push
call
push
mov
call
mov
inc
cmp
pop
jb
inc
add
mov
cmp
jl
mov
mov
test
mov
je
push
lea
call
mov
push
lea
mov
call
cmp
ja
cmp
jbe
mov
jmp
and
and
test
jle
mov
mov
push
mov
mov
mov
mov
mov
push
push
lea
call
sub
mov
push
pop
mov
rep
lea
call
inc
mov
cmp
jl
mov
mov
lea
lea
push
push
call
lea
push
call
mov
push
lea
mov
call
test
jle
and
mov
mov
mov
push
lea
call
add
dec
jne
and
test
jle
jmp
mov
xor
push
lea
mov
mov
mov
mov
mov
call
and
cmp
mov
jge
mov
mov
cdq
cmp
ja
jb
cmp
jae
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
cmp
ja
jb
mov
cmp
ja
cmp
je
lea
push
call
cmp
mov
jne
lea
lea
push
call
jmp
mov
mov
call
test
jne
push
mov
call
pop
inc
mov
mov
add
cmp
jl
jmp
push
mov
call
pop
cmp
jge
mov
push
call
pop
mov
test
mov
je
mov
call
jmp
xor
test
mov
mov
mov
je
mov
push
call
mov
push
mov
mov
mov
mov
shl
add
push
push
call
lea
call
mov
push
push
mov
mov
lea
mov
mov
mov
push
lea
push
lea
push
push
push
push
push
call
test
mov
jne
mov
mov
cmp
jge
mov
mov
mov
add
adc
mov
inc
cmp
jl
mov
lea
call
add
lea
push
mov
adc
lea
call
xor
cmp
mov
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
cmp
lea
push
je
mov
lea
call
jmp
lea
mov
push
mov
push
call
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
or
mov
je
inc
mov
mov
jmp
and
and
mov
lea
push
lea
push
call
push
mov
call
add
inc
cmp
pop
mov
jl
mov
push
lea
call
mov
lea
add
mov
mov
call
mov
mov
test
je
mov
push
call
push
mov
call
cmp
pop
jl
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
inc
cmp
jl
mov
cmp
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
mov
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
push
call
pop
mov
lea
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
push
call
pop
mov
lea
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
add
or
jmp
mov
cmp
je
mov
mov
cmp
jne
push
lea
call
inc
mov
cmp
jl
push
push
lea
call
and
cmp
jle
mov
mov
mov
mov
mov
mov
lea
call
cmp
lea
mov
push
je
lea
mov
call
jmp
lea
mov
push
push
call
mov
lea
push
lea
push
call
mov
push
call
inc
pop
mov
cmp
jl
lea
mov
call
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
xor
and
lea
call
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
ret
push
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
call
pop
pop
ret
mov
call
push
push
push
push
xor
push
push
push
push
mov
mov
push
mov
push
call
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
mov
je
mov
push
call
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
cmp
jl
xor
cmp
setne
test
jne
mov
mov
mov
mov
mov
mov
mov
call
test
jne
cmp
jge
or
jmp
xor
cmp
setne
pop
pop
ret
push
push
push
push
mov
mov
mov
mov
cmp
jl
xor
cmp
setne
mov
test
jne
xor
test
jle
mov
mov
mov
mov
call
test
jne
inc
cmp
jl
mov
mov
cmp
jge
or
jmp
xor
cmp
setne
mov
test
jne
xor
test
jle
mov
mov
mov
shl
add
add
call
test
jne
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
push
mov
push
mov
cmp
jb
xor
cmp
setne
test
jne
mov
mov
cmp
jb
cmp
setne
test
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
je
push
pop
jmp
add
add
call
pop
pop
pop
ret
push
mov
push
push
mov
push
cmp
jae
or
jmp
xor
cmp
setne
test
jne
xor
test
jbe
mov
mov
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
inc
cmp
jb
xor
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
jb
xor
cmp
setne
test
jne
mov
mov
cmp
jae
or
jmp
xor
cmp
setne
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
cmp
jne
test
mov
je
cmp
jne
mov
mov
call
neg
jmp
cmp
je
neg
sbb
and
dec
jmp
mov
mov
call
ret
mov
call
sub
mov
push
push
push
mov
mov
xor
cmp
mov
mov
mov
mov
mov
je
add
mov
call
cmp
jl
lea
jmp
xor
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
cmp
jge
cmp
jge
lea
mov
mov
push
lea
push
call
cmp
mov
je
mov
call
push
lea
mov
mov
mov
call
xor
cmp
mov
jle
mov
mov
cmp
jae
push
lea
call
inc
cmp
jl
cmp
jne
mov
call
mov
jmp
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
je
neg
sbb
and
dec
jmp
mov
mov
call
neg
jmp
mov
cmp
je
mov
mov
cmp
jl
xor
cmp
setne
mov
test
jne
mov
mov
mov
lea
mov
lea
call
test
jne
mov
mov
mov
lea
mov
lea
call
test
jne
mov
test
jne
cmp
jne
test
je
cmp
je
test
je
cmp
je
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
jmp
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
je
push
pop
jmp
mov
mov
call
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
test
je
add
cmp
jb
xor
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
push
mov
mov
call
xor
cmp
je
lea
call
push
lea
pop
mov
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
lea
mov
push
call
lea
mov
push
call
mov
mov
mov
sub
mov
lea
lea
mov
movs
movs
movs
mov
movs
call
sub
lea
mov
mov
mov
mov
movs
movs
movs
movs
call
sub
lea
mov
mov
mov
mov
movs
movs
movs
movs
call
or
lea
jmp
lea
call
push
lea
pop
mov
push
push
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
mov
mov
movs
movs
movs
lea
movs
call
or
lea
call
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
sub
push
push
push
mov
mov
lea
lea
call
xor
push
lea
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
or
je
push
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
push
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
push
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
push
push
xor
test
jle
mov
mov
mov
cmp
mov
jne
test
je
cmp
jne
test
je
inc
add
cmp
jl
xor
pop
pop
ret
mov
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
call
pop
ret
mov
and
ret
mov
shr
and
ret
mov
neg
sbb
xor
and
test
setne
add
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
test
je
mov
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
ret
mov
call
push
push
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
or
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
mov
cmp
mov
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
lea
mov
mov
lea
movs
movs
movs
mov
lea
mov
push
movs
movs
push
dec
movs
push
lea
mov
sub
movs
movs
push
mov
pop
movs
call
cmp
jg
pop
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
push
mov
sub
push
mov
cmp
mov
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
lea
mov
mov
push
pop
lea
rep
mov
push
lea
pop
mov
dec
rep
push
sub
pop
lea
push
mov
rep
push
mov
push
push
pop
call
cmp
jg
pop
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
lea
movs
movs
lea
mov
cmp
mov
movs
jg
jmp
mov
cmp
jge
push
lea
lea
lea
lea
lea
call
test
jle
mov
mov
push
lea
lea
lea
mov
call
test
jge
mov
mov
mov
lea
shl
lea
cmp
movs
movs
movs
jle
mov
mov
lea
lea
lea
movs
movs
movs
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
lea
push
push
lea
lea
cmp
pop
lea
mov
mov
rep
jg
jmp
mov
cmp
jge
push
lea
lea
lea
lea
lea
call
test
jle
mov
mov
push
lea
lea
lea
mov
call
test
jge
mov
mov
push
mov
lea
shl
cmp
lea
pop
rep
jle
mov
mov
lea
push
lea
lea
pop
rep
pop
pop
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
push
mov
cmp
jne
mov
call
mov
xor
cmp
pop
setne
ret
push
mov
mov
mov
call
mov
test
je
mov
push
call
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
mov
push
mov
push
push
mov
cmp
je
mov
test
je
mov
inc
mov
mov
inc
and
dec
test
mov
jne
and
lea
movzx
mov
add
shl
xor
inc
cmp
jl
jmp
mov
shr
mov
dec
test
je
inc
movzx
inc
xor
mov
or
inc
movzx
shl
or
inc
movzx
shl
or
inc
xor
dec
jne
mov
mov
and
je
mov
mov
inc
mov
mov
inc
and
dec
mov
jne
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
push
mov
lea
mov
call
cmp
jne
lea
call
lea
mov
call
mov
lea
movzx
mov
call
mov
movzx
mov
mov
cmp
je
mov
mov
push
call
cmp
jne
cmp
mov
mov
mov
mov
je
cmp
jne
cmp
jb
mov
push
lea
call
test
jne
cmp
jne
cmp
jne
lea
dec
push
push
lea
dec
call
mov
mov
sub
cmp
jb
test
je
add
mov
lea
mov
push
call
test
jne
mov
push
add
lea
push
call
mov
add
cmp
je
push
pop
jmp
mov
lea
mov
call
cmp
jne
xor
jmp
mov
mov
mov
shl
or
xor
cmp
setne
or
xor
test
setne
mov
pop
pop
pop
leave
ret
mov
push
xor
mov
test
jle
push
lea
movzx
shl
sub
xor
inc
cmp
jl
pop
pop
ret
mov
push
xor
push
xor
mov
mov
inc
mov
movzx
shl
add
or
cmp
jl
pop
pop
ret
mov
push
xor
push
xor
mov
mov
inc
mov
movzx
shl
add
or
cmp
jl
pop
pop
ret
push
mov
push
push
test
je
and
mov
test
je
mov
mov
test
je
cmp
jae
mov
mov
push
add
push
push
call
add
sub
add
test
je
mov
pop
pop
xor
pop
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
jne
mov
push
lea
call
jmp
mov
xor
xor
cmp
jge
mov
mov
add
inc
jmp
push
jmp
push
lea
mov
mov
mov
call
push
lea
mov
call
mov
mov
xor
mov
cmp
jge
mov
mov
cmp
jge
mov
lea
mov
mov
and
mov
lea
push
call
inc
jmp
inc
xor
jmp
xor
cmp
jge
mov
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
cmp
mov
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
inc
jmp
push
lea
call
lea
mov
call
push
mov
call
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
pop
lea
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
dec
je
sub
je
sub
je
sub
jne
push
lea
call
push
lea
call
jmp
push
mov
call
mov
mov
mov
and
mov
cmp
jge
mov
jmp
mov
push
lea
call
cmp
mov
je
cmp
jne
push
lea
call
movzx
cdq
push
push
push
lea
pop
call
lea
lea
push
call
push
lea
call
push
mov
call
jmp
mov
lea
call
test
je
lea
push
lea
push
call
test
jne
and
and
lea
lea
push
call
jmp
movzx
and
push
lea
call
jmp
push
jmp
mov
lea
shr
and
push
call
jmp
xor
push
lea
mov
mov
mov
call
mov
mov
shr
test
je
lea
mov
call
jmp
push
mov
lea
call
push
lea
mov
call
push
mov
call
pop
lea
lea
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
cmp
je
cmp
jne
xor
jmp
cmp
jne
mov
dec
jmp
movzx
ret
push
mov
push
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
add
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
push
mov
call
lea
mov
call
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
mov
je
mov
push
call
xor
mov
mov
mov
cmp
je
lea
call
mov
push
lea
mov
call
lea
lea
push
push
call
mov
test
mov
jne
mov
test
je
test
je
lea
jmp
xor
mov
mov
mov
cmp
jne
movzx
mov
neg
sbb
and
dec
add
movzx
cmp
je
mov
cmp
jne
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
push
pop
jmp
mov
neg
sbb
and
lea
push
push
lea
call
jmp
cmp
je
mov
lea
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
jmp
test
je
lea
mov
call
lea
mov
call
jmp
mov
mov
push
cdq
add
mov
mov
adc
lea
push
push
call
mov
test
je
mov
jmp
push
lea
call
xor
test
jne
mov
mov
test
je
lea
jmp
mov
test
jne
mov
mov
mov
mov
shr
test
je
lea
test
je
push
lea
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
test
je
cmp
je
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
and
lea
call
mov
jmp
test
je
push
call
pop
lea
mov
call
xor
jmp
push
mov
mov
call
pop
jmp
cmp
jne
lea
mov
call
mov
call
test
jne
mov
jmp
mov
mov
ret
mov
cmp
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
jmp
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
lea
call
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
push
push
mov
mov
lea
call
and
lea
call
and
and
mov
and
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
jmp
push
mov
push
call
push
call
push
call
push
call
add
pop
ret
mov
lea
call
xor
ret
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
and
dec
mov
push
mov
push
call
pop
ret
mov
neg
sbb
and
inc
inc
push
call
ret
mov
call
sub
push
push
mov
push
cmp
jne
mov
mov
mov
and
mov
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jge
mov
add
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
test
je
cmp
jne
mov
mov
mov
cmp
je
inc
inc
mov
add
cmp
jl
mov
sub
mov
jne
mov
and
cmp
jle
mov
test
je
mov
cmp
jbe
call
and
mov
call
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
je
xor
cmp
setne
mov
jmp
jne
cmp
je
mov
mov
mov
cmp
jne
xor
mov
mov
add
lea
push
mov
push
push
push
mov
call
mov
cmp
jne
mov
cmp
jne
mov
push
push
mov
call
mov
cmp
jne
inc
mov
mov
call
mov
or
cmp
je
mov
push
call
cmp
jne
jmp
mov
or
push
call
mov
jmp
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
mov
mov
lea
add
push
mov
push
push
call
test
jne
cmp
jne
cmp
jne
mov
mov
push
mov
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
cmp
jne
mov
mov
cmp
jge
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
test
je
mov
push
call
and
test
jne
mov
push
push
mov
call
test
jne
inc
mov
mov
cmp
jl
xor
pop
pop
ret
mov
jmp
mov
call
sub
push
mov
push
xor
push
cmp
mov
mov
mov
mov
je
mov
cmp
je
cmp
je
mov
cmp
jb
mov
xor
test
jbe
cmp
jne
and
mov
test
je
and
mov
lea
push
push
push
push
call
mov
mov
cmp
je
mov
test
je
mov
push
sub
push
add
push
call
add
mov
add
test
je
mov
mov
add
sub
sub
add
mov
adc
test
je
mov
jmp
test
jne
mov
call
xor
cmp
jne
cmp
je
mov
call
inc
mov
cmp
mov
jne
mov
cmp
je
mov
cmp
je
mov
sub
push
call
mov
cmp
jne
cmp
je
cmp
je
push
mov
call
jmp
mov
call
cmp
jne
cmp
je
mov
jmp
and
cmp
ja
mov
jmp
mov
mov
mov
cmp
jge
mov
mov
add
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
mov
jmp
cmp
jb
ja
cmp
jbe
mov
sub
cmp
jb
mov
add
test
je
mov
mov
add
sub
add
adc
cmp
jne
cmp
jne
mov
call
test
jne
inc
mov
mov
jmp
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
sub
push
mov
push
mov
xor
lea
rep
mov
mov
sub
sbb
mov
or
je
mov
test
ja
jb
cmp
jb
mov
and
lea
push
push
push
lea
push
mov
call
test
jne
mov
mov
sub
sbb
mov
or
jne
xor
pop
pop
leave
ret
push
mov
mov
mov
cmp
jge
mov
call
cmp
je
test
jne
mov
test
je
mov
push
call
and
mov
push
push
mov
call
test
jne
inc
mov
mov
cmp
jl
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
cmp
mov
mov
mov
setne
xor
xor
cmp
mov
jae
cmp
jne
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
shr
test
jne
push
mov
lea
call
cmp
je
add
adc
mov
mov
mov
xor
xor
add
adc
mov
inc
jmp
add
adc
mov
push
mov
push
push
call
xor
push
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
and
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
mov
mov
call
test
jne
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
lea
call
mov
mov
mov
mov
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
inc
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
shr
test
je
xor
cmp
setne
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
mov
push
push
call
mov
test
jne
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
jmp
push
lea
call
test
mov
jge
xor
cmp
setne
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
jne
mov
push
push
call
mov
test
je
mov
mov
jmp
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
je
jmp
mov
mov
mov
lea
mov
mov
call
cmp
jge
push
lea
call
inc
jmp
push
lea
call
mov
inc
xor
xor
mov
mov
add
adc
mov
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
shr
test
jne
push
lea
call
cmp
jne
mov
cmp
jge
push
lea
call
inc
jmp
push
lea
call
mov
mov
inc
xor
xor
add
adc
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
push
call
test
pop
je
xor
mov
mov
mov
mov
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
mov
mov
call
push
mov
push
mov
lea
mov
push
push
push
push
mov
add
push
call
mov
and
mov
and
sub
je
dec
je
dec
je
dec
je
mov
call
mov
test
jne
mov
mov
add
mov
adc
mov
test
je
mov
push
call
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
push
call
jmp
xor
push
lea
mov
mov
call
movzx
mov
push
call
mov
test
je
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
mov
call
movzx
mov
mov
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
mov
mov
mov
xor
mov
mov
push
mov
mov
mov
call
and
and
mov
mov
mov
mov
sub
sbb
or
je
mov
mov
cmp
jge
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
mov
push
lea
call
mov
shr
test
je
movzx
jmp
xor
mov
push
movzx
mov
mov
mov
xor
add
push
mov
adc
push
push
push
call
mov
test
je
mov
mov
jmp
mov
mov
movzx
cmp
jne
inc
and
and
jmp
inc
and
cmp
jne
and
lea
push
lea
push
call
cmp
mov
je
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
cmp
sete
cmp
jne
mov
mov
add
mov
mov
push
adc
add
pop
mov
adc
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
mov
mov
sub
sbb
mov
mov
jne
cmp
jbe
mov
xor
mov
mov
mov
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
and
sub
je
dec
je
dec
je
dec
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
push
mov
push
push
push
push
push
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
jmp
cmp
jne
mov
call
mov
test
jne
mov
mov
sub
sbb
or
je
mov
call
mov
test
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
lea
add
mov
mov
adc
call
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
call
push
push
mov
mov
mov
mov
mov
and
lea
call
and
lea
call
mov
and
mov
mov
mov
mov
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
and
call
and
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
push
mov
mov
lea
cmp
jle
sub
mov
test
jle
push
mov
shl
mov
mov
mov
push
call
add
dec
pop
jne
pop
mov
push
push
call
pop
pop
leave
ret
mov
call
push
push
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
or
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
push
push
push
mov
xor
mov
test
je
mov
lea
cdq
sub
mov
sar
mov
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
mov
push
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
test
mov
je
mov
push
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
mov
lea
mov
mov
lea
push
mov
mov
call
mov
mov
mov
mov
and
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
and
add
push
lea
call
add
lea
push
mov
mov
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
push
push
mov
mov
add
mov
push
call
xor
test
jle
mov
push
mov
call
test
pop
je
mov
mov
mov
mov
jmp
xor
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
mov
mov
cmp
jb
call
test
je
mov
mov
inc
mov
pop
leave
ret
lea
push
push
mov
call
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
mov
call
cmp
mov
je
push
lea
call
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
lea
push
mov
push
call
mov
and
push
mov
call
push
or
call
pop
lea
push
mov
call
push
lea
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
push
mov
mov
dec
test
je
push
lea
mov
call
dec
jne
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
call
mov
xor
push
push
push
push
push
call
cmp
jne
mov
push
push
mov
push
call
cmp
jne
mov
mov
mov
add
push
push
mov
adc
push
push
push
call
cmp
jne
push
mov
call
test
jne
mov
jmp
push
mov
call
mov
call
mov
call
mov
mov
call
test
jne
mov
call
mov
mov
call
test
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
cmp
mov
ja
mov
call
mov
mov
call
mov
mov
shr
test
je
mov
call
mov
mov
call
mov
mov
call
mov
mov
movzx
push
call
test
je
lea
mov
push
call
mov
shr
test
je
lea
mov
push
call
cmp
mov
jbe
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
movzx
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
lea
call
movzx
inc
cmp
jl
mov
mov
xor
add
mov
push
adc
push
push
push
push
call
cmp
jne
push
mov
call
mov
call
cmp
mov
jbe
push
lea
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
or
mov
mov
call
mov
lea
push
mov
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
cmp
jge
lea
lea
push
call
push
or
call
movzx
inc
pop
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
push
pop
jmp
push
mov
xor
lea
mov
mov
mov
call
lea
call
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
lea
mov
mov
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
jne
push
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
push
lea
call
lea
call
lea
call
xor
cmp
mov
jle
mov
mov
mov
mov
mov
call
test
je
mov
dec
jmp
mov
push
lea
call
mov
call
add
and
cmp
jle
push
lea
push
call
inc
mov
cmp
jl
inc
cmp
jl
push
push
lea
call
push
pop
cmp
mov
jle
lea
mov
push
push
call
test
jne
mov
mov
shl
mov
inc
mov
mov
mov
inc
cmp
jl
push
lea
call
xor
cmp
jle
mov
mov
lea
push
call
cmp
jl
push
lea
call
inc
cmp
jl
pop
pop
pop
leave
ret
mov
push
xor
test
jle
mov
mov
mov
cmp
je
cmp
je
inc
add
cmp
jge
jmp
mov
pop
ret
xor
pop
ret
push
mov
call
test
je
dec
mov
pop
ret
push
push
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
mov
and
shr
and
test
je
test
jne
jmp
test
je
test
jne
push
pop
jmp
push
mov
call
mov
push
mov
call
cmp
jl
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
cmp
setne
test
jne
mov
mov
cmp
jl
cmp
setne
mov
test
jne
mov
mov
cmp
jge
or
jmp
xor
cmp
setne
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
mov
pop
cmp
jle
mov
mov
mov
call
test
je
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
inc
cmp
jl
xor
mov
cmp
mov
mov
mov
mov
jle
mov
mov
lea
mov
push
call
cmp
jge
mov
mov
mov
mov
mov
mov
mov
shr
test
jne
push
mov
call
cmp
je
mov
jmp
mov
xor
cmp
ja
jb
cmp
jae
cmp
jne
mov
xor
add
adc
cmp
jne
cmp
jne
mov
mov
xor
xor
add
mov
adc
mov
mov
inc
mov
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
pop
ret
push
mov
cmp
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
push
mov
mov
mov
push
mov
mov
dec
mov
push
mov
push
mov
pop
mov
sub
call
cmp
jg
pop
pop
pop
ret
mov
call
push
push
push
call
mov
pop
mov
xor
cmp
mov
je
mov
lea
mov
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
add
jmp
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
cdq
push
push
jmp
mov
test
je
mov
jmp
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
jne
test
je
push
push
lea
call
jmp
mov
or
je
push
lea
call
jmp
mov
cmp
je
mov
cmp
sete
test
jne
mov
mov
mov
or
jne
push
lea
call
jmp
mov
cdq
cmp
ja
jb
cmp
jae
mov
mov
mov
lea
push
call
push
lea
mov
call
push
mov
jmp
push
push
jmp
mov
cmp
jne
and
jmp
mov
cmp
sete
mov
push
lea
call
jmp
push
lea
mov
mov
mov
call
lea
lea
mov
call
test
je
cmp
jne
cmp
jle
mov
cmp
jne
push
push
lea
call
lea
lea
call
push
lea
mov
call
push
call
pop
push
mov
call
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
add
push
push
push
push
call
push
push
push
push
call
jmp
xor
xor
pop
pop
ret
mov
call
sub
push
push
push
mov
and
mov
mov
lea
test
je
mov
push
call
and
lea
mov
call
add
lea
push
mov
push
push
call
mov
test
je
lea
mov
call
mov
jmp
push
mov
call
lea
mov
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
mov
call
mov
call
mov
test
je
mov
push
call
and
pop
xor
pop
ret
xor
mov
mov
mov
add
mov
mov
jmp
push
mov
lea
mov
call
lea
call
pop
ret
mov
push
push
mov
lea
mov
call
mov
and
and
mov
pop
ret
push
push
push
mov
xor
push
mov
mov
mov
cmp
je
xor
cmp
setne
mov
jmp
push
pop
mov
lea
cmp
je
mov
push
call
mov
mov
mov
add
push
mov
push
push
push
call
cmp
jne
cmp
jne
cmp
jne
push
pop
mov
push
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmp
jne
mov
cmp
jge
mov
mov
add
mov
mov
mov
mov
mov
add
or
jne
mov
call
mov
mov
test
je
mov
push
call
and
test
jne
mov
push
push
mov
call
test
jne
inc
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
push
push
push
push
mov
xor
mov
cmp
mov
je
mov
cmp
je
jmp
mov
cmp
je
cmp
mov
ja
jb
cmp
jb
mov
cmp
jbe
cmp
jne
and
mov
cmp
je
lea
mov
mov
push
push
push
push
call
mov
add
test
je
mov
mov
add
sub
xor
sub
sbb
add
adc
add
adc
test
jne
mov
or
jne
mov
test
je
mov
push
call
and
mov
mov
neg
mov
sbb
and
inc
inc
push
push
call
test
jne
and
cmp
ja
jmp
mov
cmp
jge
mov
add
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jb
ja
cmp
jbe
mov
sub
mov
sbb
xor
cmp
ja
jb
cmp
jb
mov
mov
add
test
je
mov
mov
add
sub
xor
add
adc
add
adc
cmp
jne
cmp
jne
mov
call
test
jne
inc
mov
mov
xor
cmp
jne
mov
call
pop
pop
pop
leave
ret
mov
jmp
push
mov
push
push
push
call
ret
push
mov
sub
push
mov
push
mov
xor
lea
rep
mov
mov
mov
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
mov
sub
mov
sbb
mov
jne
cmp
jb
mov
and
lea
push
push
push
lea
push
mov
call
test
jne
cmp
je
mov
mov
cmp
jb
jbe
xor
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
xor
cmp
mov
mov
sete
cmp
je
cmp
je
mov
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
cmp
push
mov
mov
setne
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
mov
mov
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
lea
mov
call
cmp
je
xor
xor
cmp
je
mov
cdq
mov
push
push
push
mov
call
and
mov
cmp
jae
mov
and
mov
mov
and
mov
mov
mov
mov
mov
mov
call
mov
test
jne
and
cmp
mov
setne
cmp
mov
je
mov
jmp
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
adc
inc
jmp
mov
mov
mov
mov
lea
push
push
mov
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
cmp
jne
mov
test
je
mov
mov
push
call
mov
test
jne
mov
push
push
mov
call
jmp
mov
cmp
mov
mov
mov
mov
mov
jne
cmp
jne
mov
jmp
mov
push
push
mov
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
or
je
mov
push
mov
jmp
cmp
je
mov
push
mov
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
cmp
jmp
mov
mov
add
push
mov
push
mov
adc
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
and
mov
mov
mov
mov
push
mov
push
push
push
mov
push
push
call
mov
test
je
mov
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
mov
inc
add
mov
mov
adc
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
or
or
xor
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
sete
test
jne
mov
mov
mov
or
je
or
jne
mov
add
adc
inc
mov
mov
jmp
mov
mov
mov
mov
mov
call
test
je
mov
push
mov
mov
lea
mov
call
cmp
mov
mov
jne
cmp
jne
add
adc
mov
push
mov
call
mov
mov
mov
cmp
ja
jb
mov
cmp
ja
push
push
push
push
call
add
adc
add
adc
jmp
push
mov
push
mov
push
call
mov
test
jne
xor
mov
mov
mov
mov
push
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
mov
lea
push
push
mov
call
mov
test
jne
cmp
je
mov
jmp
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setne
mov
mov
test
je
mov
cmp
sete
test
je
xor
mov
push
mov
lea
mov
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
cmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
mov
mov
mov
call
test
jne
and
push
mov
lea
mov
mov
push
push
push
call
mov
test
jne
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
jmp
mov
mov
mov
add
test
mov
jne
push
call
pop
xor
cmp
je
mov
mov
mov
mov
jmp
xor
mov
push
lea
mov
call
push
mov
add
mov
push
mov
push
call
cmp
jne
push
call
pop
mov
mov
test
mov
je
push
call
jmp
xor
push
lea
mov
mov
call
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
adc
mov
mov
cmp
je
cmp
jne
xor
cmp
jg
push
pop
shl
cmp
jb
lea
jmp
inc
jmp
xor
mov
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
lea
mov
call
push
lea
call
mov
lea
push
push
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
push
push
push
push
call
push
mov
mov
push
push
push
call
push
mov
mov
mov
add
push
mov
adc
mov
push
push
mov
call
push
mov
mov
mov
lea
mov
call
push
mov
mov
push
push
push
call
cmp
mov
mov
mov
mov
mov
jne
inc
cmp
mov
jne
mov
cmp
jne
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
push
call
cmp
jne
cmp
jne
inc
mov
cmp
jae
push
lea
call
jmp
push
lea
call
mov
mov
mov
mov
mov
mov
or
je
mov
mov
add
adc
mov
mov
mov
push
lea
mov
call
inc
mov
mov
jmp
mov
mov
sub
sbb
cmp
ja
jb
cmp
jae
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
xor
mov
lea
mov
mov
mov
mov
push
mov
mov
push
mov
call
mov
lea
add
mov
mov
mov
mov
push
adc
push
sub
sbb
push
push
call
and
mov
mov
cmp
jae
mov
mov
sub
lea
push
sbb
add
adc
mov
mov
mov
push
mov
call
test
mov
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
xor
add
adc
mov
mov
cdq
cmp
mov
jb
ja
cmp
jb
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
push
push
push
mov
call
mov
mov
sub
mov
sbb
mov
cmp
mov
jb
ja
cmp
jbe
mov
mov
mov
mov
push
push
mov
mov
mov
add
mov
mov
adc
push
mov
push
push
call
test
mov
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
and
cmp
mov
mov
push
lea
seta
push
push
mov
push
mov
push
mov
push
call
test
mov
je
cmp
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
lea
push
push
mov
call
inc
jmp
push
mov
push
call
test
mov
je
mov
ret
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
ret
mov
mov
mov
mov
add
mov
adc
mov
cmp
jne
mov
cmp
je
lea
call
add
mov
adc
jmp
and
push
mov
lea
mov
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
je
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
cmp
jne
mov
or
je
mov
mov
add
mov
push
push
adc
mov
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
and
mov
mov
mov
mov
push
mov
push
push
push
mov
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
add
mov
cmp
jne
mov
cmp
je
mov
mov
test
je
mov
push
call
and
mov
push
mov
push
call
mov
test
je
mov
mov
jmp
mov
mov
add
mov
mov
adc
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
mov
push
mov
cdq
cmp
mov
jb
ja
cmp
jb
xor
jmp
push
push
mov
xor
mov
mov
mov
mov
mov
add
adc
cmp
jb
ja
cmp
jb
mov
mov
sub
mov
sbb
mov
mov
jmp
mov
add
mov
mov
sub
mov
sbb
mov
mov
pop
mov
pop
pop
leave
ret
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
add
push
push
push
push
call
mov
mov
add
push
push
adc
sub
sbb
push
push
call
jmp
xor
xor
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
cmp
je
push
pop
jmp
cmp
je
mov
jmp
mov
mov
mov
xor
ret
jmp
dec
dec
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
push
lea
mov
call
mov
lea
call
push
lea
pop
push
call
mov
lea
call
push
lea
call
mov
lea
call
push
lea
call
mov
lea
call
mov
lea
call
push
lea
call
push
pop
mov
lea
call
inc
cmp
jl
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
push
mov
shr
call
mov
push
call
mov
and
call
mov
push
call
pop
pop
ret
push
mov
xor
push
mov
mov
call
mov
mov
pop
pop
jmp
push
push
mov
mov
shr
call
mov
mov
pop
pop
jmp
push
mov
mov
call
test
je
mov
pop
ret
mov
mov
call
pop
ret
mov
push
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
sub
pop
lea
sub
mov
cmp
jne
inc
lea
cmp
jl
mov
pop
ret
xor
pop
ret
mov
jmp
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
mov
call
test
je
push
lea
call
mov
cmp
je
cmp
jne
mov
xor
push
pop
shl
cmp
jae
inc
cmp
jle
xor
lea
call
lea
lea
push
call
jmp
add
jmp
push
push
lea
mov
mov
mov
call
mov
mov
call
test
je
push
lea
call
jmp
lea
mov
push
call
push
lea
mov
call
push
mov
call
cmp
pop
jbe
push
lea
call
xor
cmp
jbe
mov
lea
mov
call
inc
cmp
jb
lea
lea
call
push
mov
call
pop
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
cmp
je
xor
ret
mov
mov
jmp
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
mov
mov
call
test
jne
push
lea
mov
mov
mov
call
lea
lea
mov
call
test
je
lea
lea
push
call
push
lea
call
push
mov
call
pop
xor
cmp
jle
cmp
je
push
lea
call
mov
mov
lea
push
call
push
lea
mov
call
push
mov
call
inc
pop
cmp
jl
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
cmp
lea
jb
mov
call
test
je
mov
mov
inc
mov
pop
leave
ret
lea
push
push
mov
call
mov
push
mov
mov
dec
test
je
push
lea
mov
call
dec
jne
pop
pop
ret
push
xor
cmp
push
mov
jbe
mov
call
mov
mov
inc
cmp
jb
pop
pop
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
push
push
push
xor
xor
mov
xor
mov
call
movzx
cdq
mov
call
add
or
or
cmp
jl
mov
pop
pop
mov
pop
pop
ret
push
mov
push
push
push
push
xor
xor
mov
xor
mov
call
mov
and
movzx
cdq
or
or
cmp
jb
push
mov
pop
mov
call
inc
mov
cmp
mov
jl
lea
push
push
mov
call
mov
mov
pop
pop
pop
leave
ret
push
push
mov
call
mov
mov
mov
call
mov
mov
call
mov
add
push
push
mov
call
pop
pop
ret
push
mov
push
push
mov
push
mov
mov
mov
and
and
mov
dec
test
je
mov
call
test
mov
je
push
mov
call
jmp
push
mov
call
pop
pop
pop
pop
ret
push
push
mov
push
mov
mov
mov
and
and
mov
dec
test
je
mov
call
test
je
push
mov
call
jmp
lea
mov
push
call
pop
pop
pop
ret
mov
call
push
push
xor
push
mov
push
push
push
mov
mov
push
push
call
cmp
jne
push
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
push
mov
lea
mov
mov
call
mov
call
or
cmp
je
mov
push
call
xor
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
lea
call
and
mov
call
mov
or
je
test
ja
jb
cmp
jae
lea
push
push
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
lea
call
xor
jmp
push
pop
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
push
call
pop
ret
push
mov
sub
push
push
push
mov
call
cmp
jne
mov
call
test
je
cmp
jne
mov
call
mov
call
lea
mov
push
call
lea
mov
push
call
xor
mov
call
mov
mov
mov
call
mov
mov
add
cmp
jl
mov
call
push
mov
push
mov
mov
mov
push
push
push
call
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
mov
call
mov
call
mov
cmp
mov
jb
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
call
lea
mov
push
call
mov
call
mov
call
mov
call
mov
call
and
cmp
jbe
mov
mov
sub
cdq
add
adc
mov
mov
call
cmp
jne
mov
call
mov
cmp
mov
ja
cmp
jb
mov
call
mov
call
mov
call
and
sub
xor
mov
sub
cdq
sub
sbb
add
adc
cmp
ja
jb
cmp
ja
cmp
jne
cmp
je
push
mov
call
test
jne
inc
jmp
mov
mov
add
push
call
mov
call
movzx
cmp
jne
mov
jmp
lea
mov
push
call
inc
mov
cmp
jb
xor
pop
pop
pop
leave
ret
push
pop
jmp
mov
call
sub
push
push
push
mov
call
push
pop
cmp
jne
mov
call
cmp
jne
mov
call
cmp
je
mov
jmp
mov
call
lea
mov
push
call
xor
xor
mov
call
mov
mov
mov
call
mov
mov
add
cmp
jb
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
mov
cmp
jb
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
call
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
cmp
je
cmp
jne
mov
call
mov
mov
add
adc
mov
mov
mov
call
mov
call
mov
push
add
mov
push
adc
push
push
push
mov
call
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
mov
cmp
mov
jb
mov
call
mov
call
mov
call
mov
call
mov
mov
call
cmp
mov
jbe
mov
mov
sub
cdq
add
adc
mov
mov
call
cmp
jne
mov
call
cmp
mov
ja
cmp
jb
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
sub
mov
mov
mov
sub
cdq
sub
sbb
add
adc
xor
cmp
ja
jb
cmp
ja
cmp
jne
cmp
je
mov
cmp
je
mov
call
mov
cmp
je
push
lea
mov
mov
mov
call
lea
mov
push
mov
movzx
push
call
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
call
push
lea
mov
call
lea
mov
call
push
lea
call
mov
call
mov
mov
mov
add
mov
adc
or
je
mov
call
lea
mov
call
jmp
mov
lea
lea
push
mov
call
push
mov
call
push
call
push
or
call
mov
pop
pop
xor
jmp
push
mov
call
cmp
jne
inc
jmp
mov
mov
add
push
call
mov
call
movzx
mov
cmp
jne
cdq
cmp
ja
jb
cmp
ja
sub
mov
sbb
jmp
lea
mov
push
call
inc
mov
cmp
jb
mov
or
jne
xor
jmp
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
call
test
jge
push
pop
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
add
mov
adc
push
push
push
mov
call
pop
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
push
mov
xor
cmp
jle
mov
mov
mov
cmp
jl
mov
cmp
sete
test
je
cmp
je
push
lea
call
inc
cmp
jl
pop
pop
ret
lea
add
push
push
call
ret
mov
push
mov
push
mov
mov
mov
push
push
mov
mov
mov
mov
call
mov
mov
call
cmp
je
test
jne
jmp
test
je
cmp
jne
jmp
mov
mov
cmp
mov
ja
jb
cmp
jae
jmp
cmp
jne
cmp
jne
mov
mov
cmp
mov
ja
jb
cmp
jae
jmp
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
jmp
cmp
jne
cmp
je
push
pop
jmp
mov
mov
cmp
jge
or
jmp
xor
cmp
setne
pop
pop
pop
pop
ret
mov
test
jne
xor
ret
mov
xor
cmp
sete
mov
ret
push
mov
sub
push
push
push
xor
xor
cmp
mov
mov
mov
mov
jle
mov
mov
mov
mov
mov
mov
or
je
mov
call
test
jne
mov
mov
cmp
jne
cmp
je
xor
mov
mov
xor
jmp
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
add
adc
cmp
jb
ja
cmp
jb
mov
inc
mov
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
mov
call
sub
push
push
push
mov
push
lea
mov
call
mov
and
lea
mov
push
push
push
call
push
or
mov
call
test
pop
je
mov
jmp
mov
call
mov
call
and
movzx
test
jle
lea
call
lea
mov
call
mov
mov
call
mov
xor
push
lea
mov
mov
mov
call
lea
mov
push
mov
movzx
push
call
mov
call
test
jne
lea
lea
call
test
je
lea
lea
push
call
push
call
pop
lea
mov
call
push
or
call
inc
pop
cmp
jl
push
pop
cmp
mov
jle
mov
mov
mov
lea
lea
call
push
lea
lea
mov
call
push
mov
mov
call
push
mov
mov
call
cmp
pop
jl
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
call
cmp
mov
je
push
lea
lea
call
push
push
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
xor
mov
and
or
jne
mov
push
pop
call
cmp
jl
test
jle
mov
lea
call
lea
mov
push
mov
call
lea
lea
push
call
lea
mov
call
dec
jne
jmp
push
call
pop
mov
lea
call
push
call
jmp
push
call
pop
mov
jmp
lea
call
mov
lea
movs
movs
movs
lea
lea
push
mov
movs
call
lea
mov
call
mov
mov
push
lea
lea
call
push
push
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
and
cmp
jle
mov
mov
mov
mov
call
mov
mov
call
test
je
cmp
jb
mov
call
cmp
jne
mov
call
cmp
mov
je
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
sub
mov
dec
test
je
mov
lea
mov
call
dec
jne
jmp
mov
lea
shl
push
mov
call
push
mov
mov
push
call
inc
mov
cmp
jl
mov
push
lea
lea
call
push
push
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
call
and
mov
mov
cmp
jle
mov
mov
mov
mov
call
test
je
lea
mov
push
call
push
lea
lea
mov
call
push
mov
lea
mov
call
push
mov
push
mov
push
call
push
mov
call
push
call
push
mov
call
add
cmp
jne
mov
mov
xor
cmp
ja
jb
cmp
jae
or
jne
mov
or
jne
mov
mov
mov
mov
mov
mov
jmp
mov
call
cmp
je
cmp
jne
mov
call
mov
mov
call
cmp
jne
mov
call
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
cmp
jne
test
jne
push
add
mov
call
cmp
jbe
mov
mov
mov
call
push
push
mov
call
dec
jne
inc
mov
cmp
jl
mov
push
call
push
or
call
inc
pop
mov
pop
cmp
jl
mov
call
mov
call
mov
call
neg
sbb
inc
mov
pop
pop
pop
mov
leave
ret
push
pop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
pop
push
call
pop
push
call
pop
mov
jmp
push
call
push
call
pop
pop
push
pop
jmp
mov
call
sub
and
push
push
mov
push
mov
push
lea
call
mov
push
and
lea
call
push
mov
lea
mov
call
push
mov
mov
mov
call
push
call
push
call
push
call
mov
add
mov
mov
pop
pop
pop
leave
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
and
lea
call
push
mov
call
pop
pop
mov
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
call
mov
call
mov
push
xor
push
mov
push
push
push
call
cmp
jne
mov
add
push
mov
mov
call
test
jne
mov
jmp
push
mov
call
mov
call
xor
mov
or
xor
mov
mov
mov
xor
or
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
cmp
ja
jb
cmp
jae
mov
mov
mov
mov
cmp
jb
mov
call
test
je
mov
push
mov
inc
mov
movzx
cdq
mov
xor
shl
mov
mov
pop
mov
mov
call
mov
or
mov
or
mov
mov
mov
sub
cdq
add
adc
mov
jne
cmp
jb
cmp
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
jmp
mov
mov
push
sub
pop
push
cdq
add
push
adc
mov
sub
mov
sbb
add
adc
cmp
je
call
cmp
jne
cmp
je
xor
jmp
call
cmp
jne
push
mov
push
mov
call
cmp
jne
mov
call
jmp
cmp
jne
mov
jmp
mov
ret
jmp
mov
sub
cdq
add
adc
cmp
jb
ja
cmp
jbe
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
push
push
and
mov
push
mov
push
mov
push
call
lea
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
call
push
push
call
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
fs
.byte
