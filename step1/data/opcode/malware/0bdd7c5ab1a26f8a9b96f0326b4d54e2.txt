cs
lods
push
cmp
daa
pop
pop
shr
xchg
pop
sub
dec
xor
sbb
cmps
in
dec
icebp
lods
pop
cmp
daa
maxps
daa
pop
pop
ret
pop
cmps
daa
pop
xchg
loop
aas
xchg
(bad)
das
xchg
outs
stos
movs
loope
rol
and
add
add
stos
xchg
xchg
push
sub
push
stos
movs
arpl
jae
pop
dec
idiv
mov
movs
fist
stc
jns
fdiv
scas
cli
dec
lock
jne
dec
pop
ja
aaa
pop
pop
pop
push
pop
test
inc
das
retf
inc
fcomp
xchg
cli
and
jo
xchg
sti
sub
in
xchg
add
out
pop
push
sbb
cmps
daa
pop
adc
fwait
pop
pop
cmps
scas
pop
out
bound
xchg
jecxz
mov
xchg
jecxz
xchg
pop
pop
lods
ins
adc
fcom
fwait
push
daa
pop
pop
sub
imul
dec
sete
retf
xchg
pop
sub
gs
xchg
repz
xchg
sbb
cmps
lods
pop
sbb
jno
dec
pop
xor
pop
cmps
stos
and
gs
xchg
xchg
adc
pop
cmps
aam
xchg
fwait
sbb
pop
cmps
scas
and
gs
inc
stc
jns
dec
sub
inc
inc
sub
push
aaa
addr16
lods
fs
cmc
iret
xor
(bad)
je
fcomp
loopne
bound
xchg
adc
lods
sbb
repnz
xchg
(bad)
xchg
adc
lods
sub
pop
push
fcomip
xlat
jb
je
dec
loopne
dec
mov
loopne
movs
fist
int3
daa
fcomp
mov
pop
pop
lods
daa
pop
pop
int3
sub
les
daa
pop
pushf
bound
push
(bad)
push
jne
popa
and
(bad)
daa
pop
pop
cmps
daa
jne
dec
out
pop
cmps
movs
fist
scas
out
sbb
es
pop
cmps
int3
cmp
fsubr
pcmpgtd
test
pop
loopne
aaa
fistp
iret
arpl
mov
daa
inc
inc
clc
jl
repz
in
and
push
sbb
dec
iret
mov
jne
fdivr
inc
push
es
pop
cmps
int3
enter
pop
pop
cmps
jb
cli
int3
fdiv
gs
ja
aaa
pop
pop
test
cmps
daa
pop
pop
and
jo
jp
ja
and
daa
sbb
mov
pushf
(bad)
dec
aaa
(bad)
daa
ja
gs
ja
out
pop
dec
mov
sub
gs
loopne
add
pop
cmps
fsubr
aas
gs
xchg
xor
pop
cmps
iret
xor
mov
fisttp
or
jnp
cmps
daa
pop
pop
gs
dec
xchg
inc
movs
repz
jno
xchg
shr
movs
in
mov
jle
(bad)
xchg
fcomp
mov
pop
pushf
ret
rcr
pushf
ret
fistp
hlt
shl
mov
pop
loopne
mov
pop
cmps
push
loopne
cdq
lods
pop
out
fist
movs
sub
push
fcomp
das
(bad)
pushf
xlat
pop
addr16
and
(bad)
push
fcomp
sub
shr
sub
scas
(bad)
push
jle
fcomp
(bad)
pushf
xlat
pop
addr16
and
loopne
scas
pop
(bad)
out
jecxz
xchg
fisub
sbb
pop
rcr
es
pop
push
cdq
cmps
pop
fcomp
pop
dec
and
pop
stc
jns
(bad)
gs
cli
push
aaa
pop
push
cmps
iret
cmps
mov
daa
dec
dec
icebp
lods
push
sub
fneni(8087
loope
nop
push
jge
lods
call
push
fst
pop
fcomp
mov
pop
xchg
jecxz
xchg
fisub
sbb
pop
rcr
es
fstp
cmps
int3
push
xchg
push
int3
or
xchg
repz
xchg
or
loopne
loope
shl
call
fnstsw
loope
scas
call
fnstsw
loope
scas
call
fneni(8087
loope
scas
(bad)
ss
loope
sbb
stos
call
cmps
mov
pop
fchs
jg
daa
pop
inc
clc
jl
fdiv
scas
cli
dec
div
sub
fstp
jg
pop
sahf
jb
cmp
pop
cmps
push
jmp
lods
cmps
daa
xchg
bound
aaa
dec
xchg
addr16
ficomp
out
push
aad
jbe
xchg
frstor
adc
js
leave
cmps
pushf
push
pop
push
inc
jecxz
jecxz
xchg
pop
pop
lods
pop
pop
pusha
and
pop
stc
jns
(bad)
gs
cli
and
jo
inc
stos
loopne
jecxz
add
cmp
cmps
sar
das
(bad)
out
jecxz
cs
adc
pop
xchg
fld
movs
int3
jmp
cmovle
out
cmc
fstp
ficomp
ss
test
xor
pop
lahf
stc
arpl
sub
fst
xor
pop
pop
sub
aas
pop
cmps
fldenv
pop
push
inc
jecxz
jecxz
xchg
pop
pop
js
inc
outs
in
xchg
inc
jbe
dec
lock
push
lods
inc
or
jecxz
rcl
sahf
retf
fistp
cmps
daa
loopne
xor
pop
pop
das
shl
add
and
xchg
pop
push
in
xchg
jmp
adc
shl
cs
int3
or
clc
arpl
push
loopne
pop
cmps
sar
das
(bad)
out
jecxz
cs
jns
(bad)
gs
cli
div
dec
icebp
lods
push
sbb
cmp
daa
pop
loopne
mov
pop
cmps
fsubr
into
test
pop
cmps
jno
and
fsub
xchg
jecxz
xchg
inc
stos
fs
ja
aad
pop
lock
aaa
loop
fmul
sti
fistp
iret
shl
pop
fcomp
pop
sar
xchg
jecxz
xchg
fdivr
jns
(bad)
gs
cli
cmc
jno
xchg
sti
sub
sahf
dec
inc
and
pop
dec
cmps
mov
cmps
scas
fnstenv
dec
pop
ja
cmp
pop
cmc
jno
push
dec
pop
jne
iret
daa
mov
daa
xchg
out
fist
pop
das
xlat
inc
inc
std
jp
dec
das
ret
icebp
lods
push
sbb
pusha
mov
cmps
call
pushf
fwait
out
pop
cmps
daa
imul
fistp
ja
pop
pop
je
xchg
loopne
loopne
mov
das
xchg
out
fist
sub
iret
dec
mov
daa
inc
inc
std
jp
dec
das
ret
xor
push
pop
mov
das
fistp
out
loopne
cmp
scas
fcomp
iret
pop
mov
daa
xchg
pop
push
ja
dec
push
gs
not
pop
das
in
out
fist
les
retf
push
(bad)
jnp
ja
aad
pop
int3
and
sub
dec
dec
call
les
cmp
xchg
pop
dec
fild
scas
out
pushf
and
inc
aad
pop
sub
aaa
loopne
mov
pop
pop
cmps
scas
fsub
push
rcl
les
cmp
xchg
pop
inc
fild
push
fistp
xor
call
das
loopne
not
loopne
call
fild
jl
fdiv
scas
cli
cmps
xchg
daa
push
pop
dec
cmp
sbb
cmps
in
leave
loope
pop
mov
lahf
bound
adc
pop
push
pop
cmps
lods
pop
adc
scas
(bad)
ss
fcomp
daa
imul
out
pop
cmps
ja
das
pop
jno
pushf
and
pop
cmps
daa
xchg
(bad)
(bad)
call
pop
cmps
stos
call
push
adc
pop
mov
pop
int3
es
push
gs
xchg
and
loopne
pop
ja
sub
fsub
pushf
bound
and
pop
daa
pop
push
movs
cmp
gs
pop
dec
xor
(bad)
cs
fcom
jecxz
xchg
pop
mov
jo
xchg
jecxz
pushf
bound
adc
and
mov
pushf
jp
daa
sahf
in
adc
pop
int3
daa
test
ss
das
in
fsub
(bad)
sbb
xchg
jecxz
xchg
pop
push
ja
push
movs
(bad)
shl
add
dec
sub
scas
pop
jecxz
(bad)
call
loopne
fcom
pop
shl
fbld
pop
ja
aam
pop
sub
pop
loopne
fwait
daa
pop
pop
cmps
scas
pop
jecxz
out
sub
(bad)
call
loopne
fcom
loopne
fmul
out
pop
imul
pop
cmps
scas
pop
jecxz
out
adc
bound
es
loopne
pop
push
and
movs
and
gs
pop
shr
fbld
pop
dec
sub
fcomp
sub
fist
popf
sahf
fsub
loopne
add
(bad)
daa
pop
xchg
jle
cld
xchg
and
loopne
pop
scas
fadd
jl
fdiv
scas
cli
dec
div
sbb
frstor
cld
daa
pop
xchg
pop
sar
xchg
jecxz
xchg
fmul
daa
jne
int3
and
int3
daa
ja
cmps
daa
pop
loopne
das
not
pusha
dec
sbb
dec
dec
call
das
out
xlat
pop
addr16
and
in
pop
sub
dec
cmc
fsubr
lock
aas
mov
daa
sahf
lock
pop
pop
int3
daa
xchg
pop
pop
ja
sbb
cmps
jno
sbb
daa
pop
dec
dec
push
mov
cmps
js
inc
outs
in
xchg
inc
lahf
cmps
pop
movs
daa
div
push
daa
pop
dec
lock
jno
mov
pushf
dec
push
fstp
cmps
dec
aaa
in
in
mul
daa
pop
xchg
and
loopne
pop
stos
call
jmp
push
fild
daa
xchg
(bad)
(bad)
call
mov
mov
shl
pop
fmul
and
loopne
pop
ja
jp
fsub
pushf
bound
sahf
hlt
retf
pop
and
daa
pop
imul
inc
cmps
daa
call
loopne
fcom
loopne
fmul
out
pop
imul
pop
pop
fild
scas
(bad)
call
pop
fchs
xchg
gs
call
sub
cmps
lods
call
pop
loopne
fwait
daa
pop
pop
cmps
scas
pop
jecxz
out
call
call
loopne
fcom
fsubr
mov
dec
mov
imul
pop
pop
fist
and
scas
and
loopne
data16
loopne
inc
in
pop
movs
fist
das
loopne
xchg
sbb
loopne
pop
lods
call
xchg
daa
int3
and
daa
xchg
call
(bad)
in
dec
xchg
sahf
fmul
das
(bad)
call
call
and
push
pop
cmps
cmps
mov
pop
test
daa
jne
into
test
pop
cmps
stos
call
and
loopne
movs
fist
das
loopne
xchg
sbb
(bad)
push
jle
fcom
adc
and
pop
daa
pop
adc
cld
pop
pop
cmps
sub
loopne
ja
call
scas
and
imul
daa
pop
pushf
bound
adc
pop
loope
sbb
mov
fcomp
cmps
daa
sahf
in
stos
js
pop
int3
adc
pop
stos
sbb
outs
out
pop
test
out
not
sub
loopne
daa
pop
imul
loopne
into
xchg
loop
fcomp
jle
(bad)
xchg
sub
loopne
mov
xchg
adc
movs
xlat
loopne
cmps
and
cmps
push
out
adc
fst
or
loope
rcr
mov
fchs
adc
mov
lahf
and
daa
adc
sub
dec
ja
test
dec
and
loopne
movs
fist
daa
in
push
daa
fstp
cmps
into
add
cmps
daa
sahf
fdiv
pop
pop
das
jmp
(bad)
das
in
call
call
pop
loopne
cli
scas
pop
jecxz
out
call
jnp
cmps
daa
xchg
call
call
pop
loopne
xchg
adc
and
fcomp
cmps
add
xchg
call
pushf
mov
cmps
movs
mov
push
test
daa
sahf
hlt
push
xor
call
loopne
mov
cmps
daa
pop
xchg
and
xchg
call
call
pop
loopne
mov
daa
pop
xchg
and
loopne
pop
ja
retf
push
gs
xchg
and
xchg
daa
pop
xor
pop
cmps
daa
pop
xchg
jecxz
push
fild
daa
xchg
call
call
pop
loopne
jbe
pop
pop
das
(bad)
pop
pop
push
les
loopne
in
bound
adc
sub
dec
xchg
and
loopne
pop
ja
daa
pop
jo
xchg
jecxz
push
fild
daa
cmps
inc
cli
daa
pop
call
pop
fchs
xchg
gs
cmp
pop
ja
call
daa
loopne
pop
xchg
pop
pop
scas
(bad)
ss
fcomp
xchg
sbb
cmps
cmps
hlt
xor
daa
pop
xchg
and
loopne
pop
ja
call
daa
loopne
add
adc
je
pop
cmps
scas
(bad)
call
pop
fchs
xchg
movs
mov
pop
pop
xchg
out
pop
fdiv
cmp
xchg
and
loopne
pop
ja
call
bound
pushf
mov
cmps
into
in
sbb
dec
xor
inc
scas
call
fsubr
xchg
and
loopne
pop
ja
add
xchg
and
loopne
pop
ja
in
(bad)
pop
pushf
bound
xchg
(bad)
cmps
call
lahf
pop
fchs
sbb
pop
fchs
xchg
and
call
xchg
lahf
loopne
fcomp
mov
adc
and
sahf
sbb
cmps
daa
in
mov
pop
fmul
cdq
fmul
das
(bad)
cld
xchg
and
loope
scas
fcomp
push
pop
cmps
movs
mov
pop
das
push
(bad)
das
in
call
fucomi
in
xchg
call
daa
loopne
sbb
pop
cmps
daa
xchg
pop
pop
fist
and
sbb
ss
fcom
pop
ja
call
daa
loopne
dec
xchg
pop
pop
fist
and
push
pop
cmps
movs
mov
pop
dec
sahf
push
pop
cmps
dec
pop
test
(bad)
push
jle
fdivr
mov
sbb
(bad)
das
in
call
ja
pop
fcom
loopne
stos
stos
jg
fchs
pushf
dec
aaa
xchg
clc
pop
and
pop
cmps
aam
xchg
adc
loope
movs
(bad)
shl
add
dec
sub
scas
pop
jecxz
out
call
imul
fcomp
xchg
jle
(bad)
xchg
gs
call
xchg
in
pop
cmps
lods
call
pop
loopne
fwait
daa
pop
pop
cmps
scas
pop
jecxz
out
call
imul
fcomp
adc
retf
pop
pop
cmps
stos
call
daa
loopne
push
fsub
loopne
mov
dec
xchg
sahf
fmul
das
(bad)
cld
xchg
and
loope
scas
fcomp
lahf
pop
pop
cmps
inc
pushf
mov
scas
sub
pushf
sbb
loope
daa
adc
sub
dec
loopne
jg
loope
iret
add
pop
fcomp
das
call
in
pop
pop
es
(bad)
loopne
out
pop
fchs
push
cmps
daa
pop
loopne
xchg
loope
stos
call
xor
pop
cmps
stos
call
idiv
(bad)
in
or
daa
xchg
xchg
pop
fsub
loopne
out
loopne
sbb
pop
rcr
xchg
call
push
loopne
fcom
loopne
lods
call
and
loopne
fmul
lock
and
repz
cmps
movs
mov
pop
shl
sahf
(bad)
xor
pop
sub
fmul
xchg
fmul
pop
mov
xchg
call
mov
popf
xchg
fchs
loopne
mov
dec
xchg
xchg
fmul
daa
aam
sub
fsub
loopne
lods
das
loopne
das
loopne
dec
fsub
loopne
mov
es
jecxz
pop
fcomp
cmps
push
sbb
and
loopne
pop
daa
xchg
(bad)
xchg
call
loopne
fmul
xchg
fmul
and
fcomp
imul
loopne
sub
cmps
fdivr
daa
pop
pushf
sbb
loopne
pop
daa
imul
mov
dec
xchg
xchg
fmul
sub
fmul
xchg
fmul
sub
fmul
xchg
fmul
daa
in
add
inc
fsub
loopne
lods
das
loopne
das
imul
fsub
inc
clc
jl
fdiv
scas
cli
jne
dec
(bad)
(bad)
daa
ja
mov
pop
jnp
daa
pop
pop
cmps
ja
xchg
and
pop
cmps
movs
repz
cmc
jno
xchg
ret
iret
fcomp
cmp
pushf
mul
pop
pop
popa
(bad)
pop
sahf
rol
push
add
daa
pop
div
pop
pop
and
shl
loopne
pop
sti
xchg
pop
sar
xchg
jecxz
xchg
bound
(bad)
sti
and
daa
pop
push
int3
sub
jecxz
loopne
pop
fdiv
xor
call
cmps
daa
pop
xchg
jecxz
fcom
aaa
push
xchg
mov
fucomip
clc
das
(bad)
(bad)
xchg
(bad)
xchg
bound
sbb
fneni(8087
loopne
fadd
std
mov
pop
push
inc
mov
mov
sbb
repz
cli
dec
div
mov
das
fucomip
clc
das
(bad)
push
into
idiv
mov
stos
dec
mov
lods
add
pop
pushf
bound
ja
gs
jne
dec
pop
ja
pop
pop
pop
int3
daa
jne
dec
push
pop
cmps
scas
fst
jecxz
xchg
fdiv
iret
dec
mov
outs
in
xchg
inc
jno
mov
das
fbstp
out
loopne
and
pop
pop
cmps
push
sbb
data16
and
lahf
bound
imul
adc
outs
fcomp
call
pushf
pusha
es
ja
mov
adc
pop
sbb
and
push
out
popa
lahf
push
pop
cmps
daa
inc
inc
sti
in
xchg
inc
jbe
dec
lock
inc
stos
cdq
gs
and
cmps
push
daa
pop
call
das
loope
sbb
out
pop
and
fsubr
dec
mov
fmul
inc
lahf
sti
cmp
daa
call
xchg
pusha
les
push
loopne
mov
in
dec
lods
push
cvtps2pi
xchg
mov
movs
fcomp
daa
loope
sub
daa
xchg
in
div
xchg
repz
fstp
es
hlt
mov
daa
pop
xchg
push
push
out
xchg
pusha
cmps
icebp
cmp
daa
pop
inc
clc
jl
fdiv
scas
cli
cmps
bound
pop
dec
sbb
je
dec
sbb
cmps
in
imul
mov
pop
cmps
cmps
in
fldenvw
pop
sahf
push
fimul
pop
cmps
cmps
hlt
fild
mov
pop
cmps
cmps
hlt
out
daa
pop
pushf
add
loopne
pop
daa
xchg
mov
sub
cli
(bad)
daa
cmps
sbb
scas
(bad)
call
pop
fchs
xchg
lods
pop
pop
das
mov
pushf
mov
cmps
lahf
jp
cmps
daa
call
jecxz
fcom
pop
cmps
iret
arpl
jle
loope
scas
out
fwait
and
pop
into
shr
pop
cmps
fsubr
mul
pop
das
mov
push
(bad)
aas
loopne
jle
loope
dec
sbb
scas
(bad)
cs
fsubr
data16
dec
sbb
fsub
loopne
mov
jne
int3
daa
jne
sub
dec
pop
mov
loopne
fcom
mov
pop
push
push
pop
loopne
jmp
loope
iret
iret
and
out
or
push
(bad)
xchg
lods
pop
jmp
daa
xchg
pop
pop
scas
(bad)
push
jg
aam
popw
xchg
pop
das
mov
xchg
call
pop
jne
fsubr
pop
mov
jecxz
fcom
imul
loopne
fdivr
retf
loopne
fdiv
fisub
retf
cmps
fcomp
mov
pop
xchg
jle
(bad)
xchg
lods
call
scas
pop
jecxz
out
xchg
cmps
scas
call
hlt
push
pop
cmps
stos
call
mov
dec
jne
fsubr
loopne
and
pop
scas
pop
out
mov
pushf
mov
ret
push
push
inc
xchg
and
loopne
pop
lods
pop
xchg
jecxz
xchg
(bad)
(bad)
(bad)
xchg
aam
out
xchg
cmps
scas
call
out
loopne
pop
fmul
xchg
jecxz
xchg
pop
push
lods
pop
xchg
jecxz
sahf
fcom
out
xchg
cmps
scas
call
shl
mov
loope
das
(bad)
out
jae
pop
pop
daa
in
push
cmps
daa
xchg
pop
push
lods
pop
xchg
jecxz
sahf
hlt
(bad)
xor
and
fchs
xchg
and
jne
sub
dec
jne
fsubr
pop
mov
jecxz
fcom
push
jle
fcomp
daa
xchg
(bad)
(bad)
call
loope
fmul
and
jne
pop
xchg
and
fsub
mov
fabs
loopne
(bad)
out
and
mov
jnp
and
(bad)
sbb
sub
scas
(bad)
call
pop
fchs
xchg
lods
pop
jecxz
out
xchg
cmps
scas
call
mov
mov
pop
fchs
xchg
jecxz
sahf
hlt
pop
pop
pop
pop
dec
mov
loopne
fcomp
mov
pop
xchg
jecxz
xchg
pop
das
(bad)
cld
xchg
and
loope
scas
fcom
lods
pop
xchg
and
call
daa
xchg
call
call
daa
loopne
push
fmul
xchg
jecxz
pushf
mov
cmps
scas
(bad)
call
pop
fchs
xchg
lods
call
scas
pop
jecxz
(bad)
push
(bad)
das
in
pushf
fild
scas
jecxz
pop
stos
call
mov
dec
jne
fsubr
loopne
scas
jecxz
pop
scas
pop
out
mov
sahf
mov
dec
and
pop
shl
push
(bad)
sbb
sub
scas
(bad)
push
jg
aam
data16
xchg
pop
das
mov
loopne
push
fsub
loopne
mov
loopne
fcom
loope
fsub
call
pop
fchs
xchg
lods
pop
jmp
daa
xchg
pop
pop
cmps
fadd
daa
pop
pushf
cmp
pop
fdiv
sub
dec
xchg
and
loopne
pop
ja
pop
pop
push
jmp
xor
pop
out
(bad)
jmp
cmps
scas
pop
jecxz
(bad)
push
(bad)
das
in
pushf
fisttp
cmps
jecxz
pop
dec
pop
xchg
and
loope
ja
call
call
daa
loopne
push
fmul
xchg
jecxz
xchg
pop
push
lods
pop
xchg
jecxz
sahf
in
push
add
pop
and
scas
call
stos
call
mov
dec
xchg
and
loopne
pop
ja
stos
ds
loopne
mov
dec
xchg
and
loopne
pop
ja
pop
pop
push
jmp
xor
loope
scas
pop
out
and
pop
cmps
daa
pop
jne
stos
call
loop
pop
cmps
lahf
inc
xor
mov
xchg
fmul
daa
push
pop
cmps
dec
pop
xchg
and
idiv
es
pop
int3
daa
xchg
call
pop
(bad)
loope
and
scas
pop
jecxz
in
push
cmps
daa
jne
into
fcomp
pop
cmps
stos
call
fsub
push
iret
outs
in
fcom
and
scas
pop
jecxz
daa
ja
cmps
daa
pop
xchg
and
jne
pop
push
jecxz
in
fucom
loopne
daa
ja
cmps
daa
pop
xchg
and
jne
pop
xchg
xchg
pop
fdiv
xor
pushf
bound
stos
dec
fsub
loopne
retf
cmps
fild
movs
mov
pop
shl
idiv
daa
pop
jne
dec
cld
out
in
xchg
call
sub
pop
fcomp
cmps
daa
adc
int3
es
push
gs
xchg
sbb
test
sub
loopne
daa
pop
adc
add
repz
fchs
lahf
fldenv
pop
adc
xor
sbb
movs
daa
pop
lahf
fldenv
adc
daa
sbb
ja
fcomp
pop
sub
dec
loopne
xlat
loopne
pop
fsubr
imul
loopne
int3
es
push
gs
xchg
and
div
bound
and
pop
daa
pop
adc
rcr
pop
cmps
dec
sbb
pop
sub
dec
imul
into
loopne
and
fcomp
pop
sar
jne
into
cli
out
pop
cmps
stos
call
push
mul
pop
movs
fist
pusha
mov
loopne
das
call
(bad)
das
in
call
pop
jecxz
fcomp
pop
cmps
daa
pushf
mov
cmps
int3
and
cmps
mov
loopne
push
ss
and
loope
dec
mov
fchs
adc
and
loopne
fsubr
fbld
fcomp
adc
out
call
pop
jecxz
fcom
jmp
arpl
loope
push
scas
sahf
and
cmps
stos
call
mov
dec
ja
(bad)
pop
pop
pop
push
pop
mul
pop
and
das
xchg
call
pushf
xlat
pop
addr16
and
xchg
and
pop
fcom
bound
daa
loopne
jb
loope
daa
int3
cmps
and
into
cli
out
pop
cmps
stos
call
stos
mul
pop
movs
fist
fsub
pop
cmps
push
add
dec
ret
daa
xchg
call
outs
neg
pushf
fld
fabs
loopne
movs
mov
pop
dec
add
es
sbb
pop
fchs
pop
shr
xchg
call
sbb
pop
fchs
xor
pop
jecxz
fcom
jmp
arpl
loope
push
aam
and
loopne
pop
ja
call
aam
in
loopne
scas
iret
out
cmps
daa
pushf
(bad)
daa
pop
xchg
jecxz
xchg
call
pushf
xlat
pop
addr16
and
xchg
pop
jecxz
fcom
bound
scas
fsub
adc
loopne
pop
iret
(bad)
loopne
xor
pop
pop
dec
imul
pop
scas
(bad)
push
jle
fcom
out
loopne
sbb
pop
rcr
xchg
pop
pop
fsubr
mul
pop
pop
das
(bad)
call
jecxz
fcom
das
in
call
inc
(bad)
gs
cli
daa
retf
sbb
daa
dec
dec
sub
or
out
loopne
sbb
out
pop
daa
sar
loopne
dec
xchg
push
movs
fist
imul
loopne
dec
fiadd
frstor
pop
adc
popa
sbb
jecxz
fcomp
xchg
and
jecxz
pop
ja
xlat
push
gs
xchg
and
loop
pop
ja
adc
daa
pop
loopne
mov
pop
cmps
sub
test
and
dec
xchg
and
jecxz
pop
ja
mov
daa
pop
xchg
pop
push
out
popa
sub
sbb
loopne
cmps
stos
call
mov
dec
ja
(bad)
pop
pop
sub
dec
neg
pop
pop
and
(bad)
loopne
movs
xlat
loopne
cmps
and
cmps
push
out
pusha
movs
fstp
shr
jns
(bad)
aas
adc
(bad)
or
gs
xchg
stos
daa
cmps
pop
cmps
lods
fwait
sbb
loopne
and
jns
(bad)
adc
(bad)
adc
mov
loop
fsub
iret
fdiv
sahf
lock
nop
call
fcmovnu
pop
cmps
fcomp
out
gs
cs
adc
fild
out
loopne
sbb
out
pop
stc
jns
(bad)
movs
repz
jno
xchg
sti
das
mov
sahf
push
mov
sbb
jbe
pop
pop
push
rcl
cmps
das
pop
pop
int3
neg
pop
mov
pusha
and
ja
(bad)
pop
pop
dec
jp
pop
cmps
scas
fcomp
cmps
dec
mov
test
(bad)
fistp
daa
pushf
cmp
pop
pop
cmps
lahf
push
stc
das
(bad)
jmp
pusha
dec
pop
ja
or
pop
into
fcomp
pop
cmps
dec
pop
jne
fmul
icebp
iret
ret
mov
sub
xchg
mov
pusha
and
pop
out
pop
ror
loopne
cmps
lahf
pop
pop
dec
xor
call
das
loope
out
gs
inc
clc
jl
fdiv
scas
cli
pushf
dec
pop
dec
dec
icebp
lods
pop
or
scas
pop
or
lahf
movs
dec
cmps
daa
call
xchg
fcomp
mov
pop
jne
dec
pop
jne
dec
pop
jne
dec
pop
pop
cmps
out
push
iret
pop
mov
scas
(bad)
cs
fdiv
fsubr
dec
mov
out
jb
xchg
and
loopne
cmps
daa
dec
jne
iret
(bad)
xchg
fldenv
jmp
(bad)
das
in
pop
sub
dec
pop
push
out
pop
push
out
mul
pop
pop
pop
and
(bad)
imul
and
cs
pop
cmps
lods
pop
adc
out
xlat
pop
addr16
and
in
xchg
repz
loopne
xor
pop
pop
das
(bad)
call
xchg
jecxz
xchg
fsub
(bad)
pop
cmps
daa
pop
fsub
(bad)
pop
pop
cmps
daa
hlt
dec
sub
and
push
lods
pop
jmp
sbb
daa
aam
xor
stc
dec
jne
lods
pop
(bad)
cmps
xlat
dec
loopne
sub
fadd
loopne
bound
push
(bad)
sub
fsubr
and
hlt
retf
lods
pop
jmp
sbb
and
call
fcomp
call
push
pop
call
mov
pop
pop
das
push
(bad)
das
in
test
stc
dec
loopne
sub
cmps
xlat
dec
idiv
pop
pop
and
(bad)
xchg
pop
pop
and
jecxz
and
adc
jecxz
jle
(bad)
xchg
lods
pop
out
(bad)
fldenv
fld
loopne
xor
test
js
dec
or
xor
pop
popf
pop
(bad)
dec
scas
(bad)
cs
fsub
jecxz
adc
push
sub
loopne
mov
pop
cmps
dec
pop
xchg
jecxz
dec
loopne
fist
pop
push
out
not
das
mov
and
pop
pop
push
out
div
mov
pop
stc
jns
(bad)
gs
cli
div
mov
daa
loopne
jb
daa
loopne
xor
pop
pop
das
fild
out
loopne
pop
pop
ja
and
fsubr
pop
push
pop
neg
mov
pop
into
fcomp
pop
cmps
fsubr
int3
es
pop
push
pavgb
fcomi
pusha
xor
pop
loopne
fcomi
dec
xor
pop
cmps
cld
push
pop
pop
push
rcl
outs
in
xchg
inc
movs
repz
cwde
adc
xchg
out
rcl
mov
scas
out
pop
scas
fcom
cdq
daa
adc
int3
daa
loopne
stos
fsubr
dec
mov
cmps
fsubr
pop
push
pop
xchg
jecxz
dec
jne
fsubr
pop
push
jecxz
test
pop
pop
push
std
bound
cmps
sar
xchg
jecxz
xchg
fcomp
jecxz
inc
mov
pop
sub
lahf
mov
clc
das
(bad)
(bad)
fdiv
scas
cli
sahf
dec
outs
push
pop
cmps
je
dec
sbb
mov
call
xchg
popa
iret
mov
fldcw
fbstp
out
loopne
movntps
dec
lock
fwait
mov
mov
pop
out
test
std
pop
fcomp
cmps
daa
adc
das
fistp
out
loopne
pop
jp
dec
test
sti
and
daa
pop
adc
cmps
pop
pop
cmps
lods
pop
test
push
jne
lock
pop
mov
(bad)
cmp
xchg
jecxz
xchg
fmul
sub
div
pop
out
dec
shr
push
push
push
pusha
(bad)
enter
jne
lock
sti
mov
(bad)
enter
enter
hlt
sahf
dec
loop
pop
cmps
dec
push
pop
cmps
daa
jne
into
es
js
daa
pop
ja
daa
push
pop
int3
es
movs
daa
pop
dec
dec
jb
pop
cmps
fcomp
mov
pop
xchg
jecxz
xor
jp
lea
cmps
daa
push
sub
(bad)
and
cmps
daa
pop
imul
and
es
pop
test
daa
xchg
pop
dec
or
call
sub
xchg
jecxz
xor
jp
pop
push
cmps
daa
adc
das
(bad)
(bad)
sahf
popa
dec
inc
pop
cmps
scas
push
int3
and
loopne
pop
pop
das
loope
bound
imul
dec
not
loope
out
fist
jne
jno
cmp
daa
pop
xchg
pusha
loope
int3
cmps
int3
adc
jno
or
daa
pop
xchg
pusha
cmps
pop
int3
cmps
lods
pop
int3
call
push
pusha
(bad)
int3
pop
dec
sub
lock
out
mov
(bad)
int3
push
sub
int3
and
ja
pop
cmps
dec
adc
dec
into
mov
cmps
cmps
(bad)
out
in
call
(bad)
push
and
push
pop
cmps
jno
fdiv
sub
xchg
pop
es
popa
dec
pop
push
cmps
daa
xchg
call
imul
pop
xchg
jecxz
dec
dec
dec
push
mov
cmps
stos
pop
fcomi
fsubr
dec
dec
mov
cmps
movs
(bad)
(bad)
cmps
push
or
sar
xchg
and
fcomp
fsubr
sti
(bad)
jne
fsubr
sub
(bad)
dec
xchg
jecxz
xchg
dec
inc
push
fisttp
jb
xor
out
dec
xor
jecxz
ja
daa
pop
dec
sub
dec
ja
(bad)
pop
pop
int3
daa
not
daa
pop
xchg
jecxz
cmps
mov
scas
call
dec
push
div
(bad)
fbstp
ja
das
pop
push
mov
pop
pop
push
fcomip
lods
mov
pop
int3
daa
jne
into
xlat
pop
pop
cmps
jno
nop
xor
push
push
jne
dec
push
ja
daa
pop
pop
pop
push
mov
pop
das
fild
out
loopne
pop
int3
es
cmps
daa
pop
dec
dec
inc
mov
cmps
dec
pop
dec
dec
stos
mov
cmps
fsubr
pop
adc
stos
in
div
xor
pop
sahf
popa
cmp
cmps
js
inc
outs
in
pop
icebp
cwde
adc
cs
fsub
and
pop
push
gs
ja
(bad)
pop
pop
into
jae
pop
cmps
dec
push
pop
cmps
cmps
imul
pop
fsub
sahf
push
or
pop
cmps
dec
pop
out
in
ja
push
gs
ja
(bad)
pop
pop
into
es
pop
es
enter
loopne
xor
pop
pop
into
arpl
pop
cmps
dec
jmp
in
ja
push
gs
ja
daa
pop
lahf
dec
lahf
in
pop
cmps
call
ja
(bad)
pop
pop
into
(bad)
out
pop
cmps
dec
add
push
cmps
daa
lahf
idiv
fsub
loopne
jecxz
inc
gs
cli
div
mul
mov
cmps
fldenv
pop
pop
push
rcl
(bad)
fsub
loopne
fild
out
loopne
leave
mov
jne
dec
mov
sub
pop
pop
dec
lea
cmps
js
fdiv
scas
cli
pushf
dec
sub
lods
pop
or
scas
pop
or
hlt
pop
jp
scas
out
pop
scas
fsub
mov
dec
sbb
jecxz
dec
not
mov
pop
and
int
pop
cmps
fcomp
sbb
pop
(bad)
rcr
sahf
popa
and
cmps
sub
inc
cs
call
sahf
popa
sbb
cmps
loope
out
sub
pop
pop
daa
pop
ficomp
xchg
in
cs
adc
bound
cmp
pop
pop
cs
loopne
popa
sbb
pop
cmps
fcomp
sbb
pop
jne
dec
adc
xchg
jecxz
loopne
mov
daa
sahf
call
xchg
out
inc
std
out
fmul
ret
movs
es
not
stos
pop
pop
cmc
jno
xchg
fld
xchg
push
pushf
ss
cmc
ins
pop
pop
daa
in
push
cmps
daa
jne
dec
mov
pop
cmps
jle
mov
cmps
cmps
hlt
arpl
daa
pop
pushf
sbb
loope
pop
ins
or
mov
loope
fsub
call
mov
pop
fsub
pushf
sbb
loope
pop
ins
or
mov
loope
fsub
call
mov
pop
fsub
loopne
and
pop
cmps
scas
(bad)
ss
fcomp
daa
pushf
mov
out
or
xor
jecxz
pop
fcomp
xchg
sbb
pushf
mov
out
or
xor
jecxz
pop
fcomp
xchg
adc
pushf
mov
cmps
scas
(bad)
call
pop
fchs
xchg
movs
mov
pop
aad
xchg
mov
loopne
pop
mov
xchg
mov
pop
movs
mov
pop
aad
xchg
mov
loopne
pop
mov
xchg
stos
xor
loop
pop
fcomp
sbb
pop
xchg
jle
(bad)
xchg
movs
mov
pop
popa
mov
jnp
cmps
daa
sahf
in
int3
pop
pop
pop
sub
dec
xchg
and
jecxz
pop
ja
call
call
and
pop
xchg
and
loope
pop
ja
test
fwait
or
pop
pop
sub
dec
dec
dec
jmp
and
pop
ja
fcomp
pop
sub
dec
dec
dec
adc
pop
fsub
pushf
pop
fsubr
icebp
iret
fist
ins
ja
pop
xchg
out
mov
mov
movs
mov
pop
shl
test
fisttp
push
pop
cmps
lods
call
and
jecxz
fcomp
loopne
and
pop
cmps
dec
pop
dec
sub
dec
dec
dec
into
xchg
pop
cmps
movs
out
sar
dec
test
retf
ss
cmps
sar
xchg
and
jecxz
pop
scas
fsubr
data16
es
cmps
daa
xchg
call
test
data16
xchg
xor
loop
pop
jne
imul
adc
int3
daa
ja
pop
daa
pop
xchg
and
jecxz
pop
ja
not
lods
pop
pop
das
mov
pushf
out
push
add
es
pop
cmps
lahf
cmp
cld
das
mov
xchg
fcom
daa
pop
pushf
sbb
jecxz
pop
daa
push
pop
and
fsubp
daa
dec
div
pop
pop
daa
in
sbb
xchg
pop
pop
cmps
fcomp
sbb
pop
xchg
and
jecxz
pop
loope
sbb
loope
cmps
scas
(bad)
cs
fdiv
fsubr
xchg
and
jecxz
pop
ja
div
loopne
mov
not
lds
pop
cmps
push
fcomip
enter
pop
fsub
dec
lock
dec
xchg
cmps
daa
push
(bad)
add
sbb
adc
pop
cmps
sar
xchg
and
jecxz
pop
scas
fmul
jle
pop
cmps
push
fistp
sbb
pop
sub
dec
dec
dec
cmp
imul
pop
xchg
jle
(bad)
xchg
gs
fistp
xor
hlt
pop
fsub
cs
adc
and
jecxz
pop
scas
fadd
jl
fdiv
scas
cli
pushf
dec
xor
sub
sbb
jg
cmps
daa
loopne
mov
pop
pop
sbb
sbb
push
int3
daa
jne
into
(bad)
out
pop
cmps
fsubr
dec
jbe
pop
cmps
int3
push
jne
dec
pop
ja
xlat
pop
pop
pop
push
sbb
cwde
scas
pop
pop
push
pop
jns
cmps
sar
xchg
jecxz
xchg
fcom
and
fsubp
daa
cmps
add
daa
pop
call
das
loopne
sbb
(bad)
jmp
cmp
scas
pop
call
pusha
(bad)
out
push
mov
pop
cmps
sar
xchg
jecxz
xchg
fmul
and
dec
sub
dec
dec
es
pop
cmps
movs
fist
sub
imul
int3
daa
jne
sub
dec
pop
push
sbb
fs
pop
pop
daa
enter
daa
cs
jns
fdiv
scas
cli
dec
sbb
dec
mov
out
pop
scas
fsub
mov
sub
push
iret
adc
fld
fcomp
sbb
pop
xchg
pop
push
out
popa
js
fdiv
scas
cli
dec
cmc
jno
xchg
shr
mov
sahf
push
inc
add
sbb
pop
lahf
fsub
out
scas
out
pushf
bound
push
mov
jecxz
mov
fild
fcomp
sbb
pop
xchg
pop
push
out
popa
dec
push
dec
dec
pop
loopne
pop
movs
fist
daa
loopne
aas
cmps
daa
cs
int3
jge
jecxz
xchg
pop
stos
lods
pop
xchg
cmps
scas
pop
addr16
adc
test
lock
test
out
pop
scas
hlt
adc
loopne
test
(bad)
addr16
pop
push
ins
sub
push
jne
inc
addr16
loopne
sbb
out
pop
test
xchg
dec
imul
scas
inc
arpl
js
inc
outs
in
xchg
inc
jbe
dec
icebp
lods
push
sbb
shl
daa
pop
loopne
and
pop
cmps
jno
add
loopne
int3
and
int3
and
pop
xchg
and
fcomp
movs
daa
sahf
lock
cmp
pop
test
iret
aaa
cwde
cmps
daa
xchg
fadd
scas
sbb
cs
pop
pop
pop
and
fsubp
daa
sahf
fdiv
xchg
out
mov
ja
test
dec
neg
imul
pop
xchg
pop
sar
xchg
jecxz
xchg
fmul
es
test
jecxz
xchg
pop
push
out
popa
push
fistp
ds
mov
loopne
xor
daa
jne
lock
imul
scas
push
fild
jl
fdiv
scas
cli
sahf
dec
aas
push
pop
cmps
je
dec
sub
and
daa
sar
daa
cmps
daa
fstp
cmps
scas
out
inc
scas
call
fcomp
sbb
pop
pushf
add
loope
pop
daa
sahf
fcomp
pop
pop
pop
and
fcomp
mov
and
fsub
loopne
fndisi(8087
loopne
lods
dec
sbb
mov
pop
pop
fsub
fsub
shl
loopne
and
pop
cmps
movs
mov
pop
sub
dec
jne
dec
pop
xchg
and
loope
pop
ja
push
dec
inc
cdq
pop
cmps
fcomp
sbb
pop
sahf
popa
xor
cmps
stos
call
push
sbb
adc
imul
jne
sub
dec
loopne
and
cmp
daa
pop
sahf
dec
into
sub
cmps
int3
add
pop
cmps
scas
out
pop
scas
fcomp
loopne
push
pop
cmps
daa
fcomp
es
pop
cmps
sub
loopne
sub
call
pop
fsub
xchg
popa
js
inc
outs
in
xchg
inc
lahf
cmp
cmps
daa
test
lock
inc
scas
loopne
out
cmp
adc
(bad)
out
mov
sbb
fcomp
sbb
pop
dec
dec
hlt
loope
pop
scas
fst
pop
scas
fnsave
fs
dec
out
iret
mov
fld
push
fstp
pushf
jp
daa
dec
test
lods
(bad)
dec
mov
movs
(bad)
mov
fist
dec
pop
dec
pop
ja
sub
pop
sub
dec
loopne
and
dec
and
pop
data16
daa
pop
xchg
fcmovnb
xchg
sub
and
pop
cmps
aam
loopne
and
pop
cmps
lahf
loop
cmps
daa
call
ret
das
(bad)
out
dec
fs
pop
je
and
loopne
fs
dec
pop
cmc
iret
sub
(bad)
je
sahf
jecxz
lods
add
fchs
loopne
jecxz
xchg
fs
dec
pop
es
pop
push
sar
movs
es
pop
pop
movs
push
or
pop
pop
fsub
pushf
bound
fisttp
pop
pop
cmps
fcomp
sbb
pop
xchg
jecxz
xchg
fst
lods
pop
pop
call
add
das
dec
div
jecxz
cs
mov
cmps
daa
xchg
pop
pop
scas
(bad)
fs
dec
out
xchg
fs
rcr
ficomp
call
pop
cmp
pop
cmps
je
mov
das
in
dec
loop
fs
movs
push
pop
adc
fs
pop
das
(bad)
jmp
fcmovnbe
xor
loopne
jmp
daa
pop
pop
popa
(bad)
pop
hlt
mov
imul
fsub
inc
sub
scas
dec
add
fcomp
sub
(bad)
pusha
arpl
pop
cmps
cmps
push
cmp
pop
pop
cmc
iret
push
loop
fcom
dec
dec
fs
pop
movs
fist
das
in
dec
rcr
sbb
addr16
pushf
fstp
pop
imul
pop
push
shl
fisttp
adc
std
out
fmul
ret
icebp
lods
push
sbb
pop
mov
xchg
daa
pop
loopne
and
pop
cmps
movs
and
shl
loopne
dec
push
pushf
pop
cmps
scas
out
pop
scas
fcomp
fsubr
dec
jp
pop
cmps
movs
popa
pop
cmps
push
pop
loopne
das
not
daa
pop
pushf
fsubr
pop
imul
pushf
pop
cmps
scas
out
pop
scas
fcomp
daa
imul
lahf
pop
cmps
daa
idiv
and
and
pop
cmps
movs
jns
cmps
push
fcomip
stos
lahf
je
cmps
daa
call
xchg
popa
js
(bad)
gs
cli
div
dec
icebp
lods
bound
sbb
or
lea
(bad)
shl
pop
jle
sbb
xlat
cs
das
loope
fsub
mov
pop
adc
pusha
arpl
ficomp
jns
mov
xchg
pop
fisubr
pop
xchg
push
es
xchg
pusha
fcomp
sbb
pop
jne
scas
out
and
pop
pop
neg
push
pop
cmps
fild
sub
push
dec
pop
jmp
out
mul
pop
pop
das
xlat
cs
das
loope
sbb
pop
mul
pop
scas
out
das
pop
and
fsubp
daa
xchg
out
(bad)
xlat
xchg
fldcw
fsubr
int3
jnp
mul
shl
loopne
jecxz
cmps
jle
pop
pop
push
rcl
data16
pusha
daa
leave
mov
cmps
daa
loopne
mov
nop
pop
arpl
fsubr
int3
jge
div
jecxz
fsub
fisttp
pop
cmps
daa
xchg
pop
pop
ja
out
mov
pop
cmps
ja
push
cmps
daa
xchg
pop
stos
movs
out
rol
xchg
out
cmps
xlat
xchg
fstp
sbb
in
adc
cmps
ja
adc
pop
xchg
sub
xchg
jo
mov
bound
fisttp
xchg
out
push
rcl
clc
jl
fdiv
scas
cli
pushf
dec
sub
cwde
out
adc
out
fist
pop
cmps
sar
xchg
jecxz
xchg
fsubr
sub
loopne
scas
fst
mov
loopne
sbb
fucom
loopne
jecxz
xchg
fs
dec
loopne
pop
pop
sbb
pop
sahf
call
pusha
(bad)
call
idiv
loopne
jmp
pop
call
dec
dec
pop
jne
dec
shr
in
loopne
mov
daa
dec
test
scas
fcomp
and
fsubp
daa
xchg
out
fist
out
fadd
push
cmp
shl
loopne
es
pop
pop
lock
mov
fld
ficomp
pop
cmps
daa
call
xchg
popa
movs
in
ror
dec
idiv
loopne
jmp
fild
fsubr
pop
push
adc
dec
jmp
pop
movs
fist
pop
push
sbb
pusha
cmps
pop
pop
das
fbstp
out
loopne
test
cmps
fdiv
jl
frstor
movs
repz
jno
mov
das
fbstp
out
loopne
sbb
add
stos
in
pop
jne
dec
push
jne
iret
pop
sahf
cmps
daa
mov
jns
(bad)
out
pop
scas
fdiv
iret
xchg
lahf
cmps
daa
xchg
pop
push
sub
pop
test
lahf
cmps
daa
xchg
ffree
scas
dec
icebp
int3
aaa
xchg
pop
dec
ja
sub
push
lahf
pop
cmps
dec
sbb
xchg
and
lahf
cmps
daa
push
(bad)
aas
fstp
scas
out
pop
movs
scas
out
inc
scas
pop
sti
das
loopne
(bad)
into
jecxz
cmps
daa
loopne
mov
fucomip
clc
das
(bad)
sti
xchg
popa
loope
pop
addr16
push
das
fild
out
loopne
fsub
fstp
pop
dec
aas
adc
add
pop
pop
and
addr16
pop
shr
jns
jecxz
adc
cmps
daa
pop
arpl
and
adc
pop
shr
pushf
cmp
pop
pop
cmps
into
mov
out
fist
(bad)
daa
pop
xchg
jecxz
dec
adc
(bad)
pop
pop
cmps
stos
sbb
xchg
pop
pop
neg
sub
push
gs
not
pop
pop
pop
das
loope
call
and
fcomp
sbb
pop
adc
(bad)
pop
pop
cmps
scas
sub
mov
nop
pop
loope
idiv
sbb
sub
mov
mov
das
iret
out
dec
jne
stos
sbb
cmps
neg
test
out
jne
int3
daa
imul
scas
out
pop
scas
fmul
sahf
pop
cmps
into
add
inc
std
out
fstp
cmps
jb
cli
and
lods
pop
pop
shr
in
std
lahf
mov
daa
call
xchg
popa
fcomp
sbb
pop
sahf
push
pop
aaa
pop
cmps
inc
xchg
pop
scas
inc
mov
fldenv
daa
jne
into
daa
mov
iret
out
idiv
daa
pop
pushf
bound
loopne
mov
enter
daa
xchg
pop
pop
ja
pop
int3
daa
ja
out
pop
jne
dec
pop
test
fist
sahf
cmps
daa
loopne
mov
fbstp
out
loopne
pop
dec
(bad)
fwait
pop
cmps
jle
and
push
mul
mov
scas
out
inc
scas
pop
jmp
loopne
test
cmps
js
(bad)
gs
cli
and
lods
inc
pop
pop
mov
pop
xchg
fsubp
mov
scas
rcr
sahf
out
lds
pop
and
daa
pop
pushf
add
cmp
pop
pop
cmps
loopne
addr16
daa
pop
cmps
xlat
dec
pop
pop
push
(bad)
xchg
pop
pop
scas
(bad)
mov
and
pop
cmps
scas
out
pop
sub
mov
adc
and
cdq
out
push
fild
daa
and
cmps
daa
pop
adc
pop
sbb
call
mov
iret
and
mov
in
fbld
sbb
adc
out
pushf
inc
and
jecxz
push
sbb
mov
sbb
mov
popw
pop
push
and
adc
pop
sbb
pop
and
push
shr
mov
push
mov
int3
sbb
mov
cmps
out
push
aam
pop
div
and
sbb
fistp
rcr
mov
popw
psrld
fisttp
sbb
cmps
cmps
out
test
mov
pop
cmps
aaa
mov
mov
dec
adc
loopne
rcr
mov
popw
sbb
and
fisttp
sbb
cmps
scas
xlat
push
outs
scas
ficomp
cmps
and
or
mov
das
imul
out
out
daa
pop
xchg
outs
push
xlat
xchg
cmps
adc
push
daa
cdq
pop
cmps
test
stc
pop
fsub
jmp
cmps
imul
out
shl
xlat
xchg
cmps
adc
popa
and
out
sbb
movs
pop
fsub
jmp
cmps
and
idiv
outs
xlat
xchg
cmps
adc
popa
and
cdq
out
sbb
out
xchg
add
pop
dec
scas
loope
pop
fcomp
mov
pop
loopne
add
mul
pop
lahf
stos
mov
pop
cmps
not
cmps
daa
pop
mov
cmps
and
into
retf
call
das
out
adc
test
pop
out
clc
pop
cmps
daa
mov
pushf
and
add
pop
pop
cmps
xchg
cdq
out
push
sbb
pop
pop
dec
jecxz
pop
cmps
xchg
out
push
sbb
mov
pop
pop
cmps
fcomp
mov
pop
pushf
mov
and
pop
sahf
dec
stos
add
cmps
movs
sbb
dec
mov
pop
cmps
push
fcomip
jns
pop
pop
sub
sahf
addr16
arpl
cmps
scas
out
pop
sub
mov
adc
and
(bad)
jge
out
pop
sbb
and
lahf
cmps
daa
pop
arpl
sbb
pop
cmps
daa
pusha
pop
pop
add
lahf
stos
mov
pop
cmps
addr16
and
mov
in
hlt
sub
pop
xchg
pop
cmps
sbb
mov
sbb
xor
pop
dec
scas
ficomp
cmps
addr16
adc
daa
pop
sahf
dec
sbb
cmps
fcomp
mov
pop
jmp
cmps
adc
pop
pop
das
xlat
pop
xchg
cmps
test
mov
(bad)
out
xchg
fisubr
gs
cmp
pop
pop
cs
call
mov
mov
xchg
pop
call
cmps
sub
lahf
fcmovnbe
pop
push
fcomp
(bad)
(bad)
sahf
push
mov
pop
cmps
sub
pop
cmps
daa
push
pop
call
(bad)
(bad)
pushf
fwait
call
or
pop
call
bound
push
and
daa
sbb
jmp
stos
mov
pop
cmps
cmps
xchg
xlat
cmps
out
xchg
fisubr
xlat
pop
xchg
cmps
test
out
adc
cmps
movs
call
cs
jmp
push
cmps
(bad)
call
mov
and
pop
and
daa
pop
hlt
mov
xor
(bad)
out
xchg
pop
and
out
popw
loopne
iret
bound
xchg
(bad)
out
sbb
pop
pop
aam
xchg
xlat
push
(bad)
xchg
pop
push
scas
ficomp
daa
hlt
pop
das
xlat
pop
xchg
mov
bound
lods
pop
xchg
mov
daa
loopne
dec
pop
pop
pop
pop
add
(bad)
ins
jge
sbb
push
push
(bad)
mov
xchg
out
hlt
mov
scas
fiadd
out
fmul
ret
icebp
cwde
mov
fmul
jp
pop
pop
and
xchg
pop
test
loope
mov
dec
pop
arpl
cmps
test
lock
pop
pop
into
lahf
fstp
jno
jl
daa
pop
mov
into
jmp
fisub
pop
mov
into
cld
fstp
jno
pop
fisub
pop
mov
das
fucomip
clc
das
(bad)
icebp
ftst
daa
dec
test
inc
(bad)
gs
cli
daa
retf
lahf
pop
cmps
daa
dec
dec
icebp
pushf
pop
push
dec
and
pop
ds
fsub
mov
dec
or
in
xchg
pop
push
ja
or
xchg
popa
(bad)
test
jle
cld
xchg
jecxz
xchg
fsub
bound
pop
push
addr16
pop
cmps
lahf
pop
jle
daa
call
xchg
movs
jp
cmps
movs
jp
cmps
fcomp
mov
pop
pushf
ret
neg
xchg
jle
(bad)
xchg
movs
jp
cmps
loopne
(bad)
cmps
daa
pop
pop
popa
(bad)
pop
sahf
dec
inc
pop
pop
cmps
stos
sbb
popa
gs
xchg
jecxz
loopne
xor
pop
pop
popa
bound
xchg
jle
cld
xchg
jecxz
xchg
fsub
stos
push
cmps
daa
pop
pushf
ret
lahf
pop
xchg
jle
cld
xchg
jecxz
xchg
fsubr
pop
mov
sbb
stos
pop
div
dec
pop
pop
mov
ja
or
stos
pop
pop
push
fwait
imul
jecxz
xchg
fsubr
bound
pop
add
pop
int3
daa
jne
int3
and
push
iret
mov
daa
xchg
pop
push
ja
push
stos
pop
scas
test
cmp
pop
pop
pop
and
pop
pop
push
mov
jne
dec
sbb
rol
imul
pop
sahf
gs
pop
pop
cmps
fsubr
dec
repnz
cmps
fcomp
mov
pop
xchg
jecxz
dec
loopne
xchg
xchg
pop
inc
ja
or
stos
pop
pop
sub
lahf
ret
outs
cmps
daa
call
xchg
gs
inc
outs
in
xchg
inc
movs
repz
jecxz
(bad)
inc
ds
retf
fisttp
and
scas
pop
out
sub
fistp
das
jb
xchg
jecxz
jne
int3
daa
jne
sub
dec
sub
dec
pop
push
out
cmps
stos
pop
jmp
dec
loopne
shr
loopne
push
mov
jmp
mov
pop
jecxz
(bad)
sti
xchg
jecxz
call
ret
das
(bad)
xchg
cli
icebp
cwde
xor
mov
fist
(bad)
daa
loopne
scas
dec
loopne
mov
nop
pop
cmps
cmps
lock
daa
pop
inc
sti
in
xchg
inc
movs
repz
jno
xchg
shr
xchg
inc
stos
fcomp
mov
pop
cs
sub
pop
cmps
daa
push
test
sbb
pop
cmps
daa
push
test
sbb
pop
cmps
daa
push
test
sbb
pop
cmps
daa
push
test
sbb
pop
cmps
daa
adc
sub
and
xchg
mov
xchg
or
sub
sbb
sub
adc
mov
pop
cmps
scas
in
test
in
call
pushf
cmc
movs
sub
push
scas
in
dec
and
test
ror
out
iret
sbb
adc
sbb
dec
daa
pop
pop
sar
test
test
out
pop
pop
test
data16
daa
adc
mov
or
(bad)
out
pop
pop
hlt
ja
pop
fbld
pop
xchg
jecxz
pushf
xlat
pop
lods
dec
movntps
sbb
push
iret
sbb
fistp
sub
and
push
pop
movs
neg
sub
and
pop
cmps
daa
hlt
aas
test
out
lahf
call
imul
sub
pop
fsub
sbb
out
pop
sbb
sbb
jae
out
cmps
and
mov
movs
neg
shl
out
iret
sbb
call
pushf
dec
and
test
shl
pop
imul
lahf
and
call
mov
dec
daa
mov
out
xchg
mov
daa
lahf
and
fist
call
pushf
dec
and
push
das
fistp
movs
push
pop
xchg
pop
movs
neg
test
iret
pop
pop
cmps
push
sbb
dec
daa
pop
pop
ror
pushf
xlat
pop
lods
dec
movntps
sbb
push
iret
push
jle
neg
das
(bad)
out
jecxz
xchg
pop
movs
and
out
iret
sbb
es
pop
cmps
cmps
and
cmps
push
dec
xchg
pop
outs
lahf
and
fistp
cmps
push
and
sbb
push
rcl
out
iret
sbb
adc
sbb
fwait
push
adc
pop
daa
pop
pop
shl
and
cmps
daa
pop
push
iret
jg
cmps
daa
xchg
dec
mov
dec
or
es
dec
and
pop
cmps
pusha
sahf
loopne
and
pop
test
fadd
std
out
fmul
ret
stos
je
dec
pop
and
push
int3
add
pop
int3
sbb
scas
pusha
sahf
loopne
and
pop
rcl
sahf
loopne
and
pop
aad
pop
xchg
jecxz
xor
movs
daa
pop
es
push
(bad)
test
pop
and
mov
pop
cmps
sub
sbb
(bad)
cs
out
jle
test
and
test
cmps
daa
pop
imul
imul
inc
jecxz
dec
sub
xchg
mov
xchg
or
daa
imul
iret
hlt
cmp
add
mov
(bad)
out
push
lds
jbe
in
jl
iret
xchg
jecxz
xchg
pop
mov
scas
nop
movs
in
aam
pushf
xlat
pop
scas
in
push
jl
iret
xchg
pop
lds
jbe
neg
das
(bad)
out
mov
cmp
xchg
repz
(bad)
daa
pushf
xlat
pop
push
out
repnz
push
jbe
neg
das
(bad)
out
mov
es
pop
cmps
je
adc
jb
fiadd
sub
iret
imul
fcomp
outs
in
xchg
inc
lahf
inc
cmp
daa
pop
dec
lock
retf
pop
fsub
fldenv
(bad)
shl
daa
div
daa
pop
lahf
aad
fstp
cmps
loope
in
dec
fsub
pop
pop
and
mov
cmps
push
push
adc
mov
lahf
and
imul
fcomp
imul
loopne
sbb
out
outs
gs
sbb
test
fsub
xchg
xor
aad
sub
adc
outs
gs
dec
dec
mov
mov
mov
daa
adc
pop
dec
aad
sub
adc
gs
dec
lds
xchg
xor
sub
inc
mov
push
cmps
lods
mov
mov
daa
lahf
call
test
loopne
out
lahf
call
adc
push
loopne
loope
in
dec
fsub
pop
test
fsub
fiadd
and
daa
adc
test
fsub
fiadd
or
scas
mov
jns
loopne
mov
cmps
mov
pop
test
daa
imul
and
shl
fcomp
mov
pop
xchg
xor
shl
scas
int3
fimul
fdivrp
mov
(bad)
sbb
mov
cs
push
ja
mov
pop
dec
dec
xchg
cmps
scas
fstp
scas
stos
mov
loope
fcomp
mov
pop
and
shl
loopne
push
enter
shl
ja
dec
shl
pop
loopne
mov
pop
cmps
movs
mov
pop
dec
stos
pop
pop
cmps
dec
loopne
cmps
daa
loopne
dec
enter
xchg
mov
pop
fsub
pushf
bound
xchg
pop
pop
fild
movs
mov
pop
sub
fdiv
pop
xchg
fcom
fiadd
dec
pop
lods
sub
adc
push
loope
loopne
mov
cmps
loopne
movs
daa
pop
ins
test
aaa
pop
pop
das
mov
hlt
push
daa
in
(bad)
daa
sahf
in
xlat
pop
pop
rcl
or
pop
fadd
and
lock
daa
pop
push
cmps
lods
call
fcomp
pop
lahf
mov
adc
pop
and
stos
jle
loopne
dec
push
imul
into
pop
sbb
daa
adc
pop
out
sbb
(bad)
xchg
xor
lock
movs
mov
pop
sub
fcomp
std
movs
scas
(bad)
fimul
fdivrp
movs
and
jecxz
sub
xchg
sub
test
push
enter
lds
sbb
jmp
push
aad
sub
lock
cmps
mov
pop
mov
fcomp
mov
pop
lahf
sbb
shl
daa
push
into
leave
(bad)
pop
cmps
iret
(bad)
ins
cmps
daa
xchg
call
sbb
mov
scas
mov
fs
sbb
das
mov
xchg
call
xchg
pop
fcomp
and
call
mov
loopne
and
xchg
and
call
repz
scas
call
stos
call
xchg
ret
rcr
test
daa
pop
xchg
and
shl
push
call
lods
call
xchg
shl
es
(bad)
shl
daa
push
into
daa
pop
sbb
xchg
shl
out
adc
lods
mov
dec
sub
stos
daa
push
pop
pop
mov
rcr
test
mov
in
adc
pop
out
sbb
pop
fdiv
jb
loopne
das
sub
out
daa
popw
adc
mov
lock
fcomp
std
movs
lods
or
push
pop
pop
pop
das
mov
lock
fdiv
mov
pop
dec
dec
push
ins
pop
cmps
scas
call
sub
lahf
fld
pop
adc
sbb
call
daa
and
cmps
daa
pop
imul
fwait
and
es
pop
sub
fcom
cmps
movs
cmc
loopne
arpl
rcr
call
mov
jns
loopne
sub
fcom
pop
ror
xchg
out
and
daa
push
das
xlat
pushf
mul
xor
lahf
sahf
daa
push
das
xlat
pushf
mul
cs
hlt
imul
mov
pop
adc
mov
rcr
std
movs
scas
stos
or
std
loopne
mov
push
adc
and
mul
lods
sbb
cmps
daa
pop
pop
and
pop
sbb
pop
int3
popf
xchg
push
int3
adc
es
push
lods
or
inc
clc
loopne
aam
lahf
mov
stc
loopne
cmps
sub
loopne
lds
lds
fstp
cmps
cmps
and
cmps
daa
pop
pop
cmps
push
aaa
lahf
call
push
cmps
and
movs
daa
pop
pop
cmps
push
or
cmps
daa
pop
push
cmps
and
mov
push
sbb
dec
out
adc
pop
fbld
cmps
bound
cmps
push
add
adc
dec
loopne
sti
shl
fsubr
not
fsubp
loopne
jecxz
lahf
sbb
shl
daa
imul
jmp
pop
fcomp
xchg
xor
lock
out
sbb
movs
out
sbb
and
test
mov
call
shl
loopne
daa
sbb
cmps
push
iret
loopne
mov
pop
cmps
into
xor
pop
fcomp
loopne
sub
loopne
out
lahf
call
adc
or
loopne
js
inc
outs
in
xchg
inc
jbe
dec
sub
bound
mov
daa
enter
daa
loopne
xor
pop
pop
test
out
loopne
and
imul
daa
pop
xchg
jecxz
adc
mov
cmp
mov
pop
pop
cmps
fcomp
mov
pop
adc
bound
je
xor
cmps
es
test
out
pushf
and
imul
sar
xchg
jecxz
xchg
fdivr
out
fmul
ret
icebp
lods
pop
pop
shr
inc
mov
daa
call
xchg
popa
fcomp
mov
pop
adc
bound
je
xor
sub
iret
outs
jb
daa
xchg
pop
pop
fcomp
mov
pop
adc
bound
je
xor
cmps
daa
imul
nop
pop
pop
int
or
mov
daa
push
pop
cmps
daa
hlt
adc
out
pushf
and
imul
es
popa
js
fdiv
scas
cli
pushf
dec
sub
jecxz
jns
jecxz
mov
xchg
pop
sar
xchg
jecxz
xchg
fcomp
mov
in
pushf
and
push
sbb
dec
push
xchg
out
fist
pop
rol
xchg
cmps
scas
out
pop
scas
fdiv
and
pop
int3
daa
ja
shl
test
jecxz
xchg
jecxz
dec
jne
dec
pop
ja
jb
pop
int3
daa
jne
dec
push
outs
pop
cmps
test
cmps
in
cmps
xchg
jmp
pop
call
das
loopne
pop
dec
shr
cmps
jle
and
pop
pop
cmps
push
cld
loopne
mov
pop
cmps
sub
pop
stc
out
fmul
ret
mov
jnp
pop
daa
loope
cmp
daa
loopne
xor
pop
pop
xchg
fdiv
fwait
cmps
daa
pop
cmps
mov
pop
pop
push
rcl
mov
pop
pop
cmps
push
adc
imul
fcomp
mov
pop
xchg
push
sar
xchg
jecxz
xchg
fstp
xor
pop
cmps
sar
xchg
jecxz
loopne
mov
iret
add
daa
cmps
or
scas
pop
out
pop
adc
or
popw
mul
xor
pop
cmps
sar
xchg
jecxz
pushf
cmp
daa
xchg
out
xchg
xlat
xchg
fstp
xor
pop
cmps
sar
xchg
jecxz
pushf
cmp
daa
pop
pushf
pop
inc
adc
into
neg
pop
cmps
dec
pop
ja
push
pop
pop
dec
inc
ins
pop
cmps
movs
fist
daa
shl
daa
loopne
mov
mov
movs
cmp
ins
gs
pop
daa
ror
sub
adc
cmps
in
idiv
aas
cmps
pop
cmps
iret
cmp
daa
loopne
xor
pop
pop
stc
jns
fdiv
scas
cli
pushf
dec
add
cwde
push
jnp
outs
xchg
out
fist
imul
and
int3
and
pop
mov
das
fild
out
loopne
fsub
retf
sbb
repz
dec
dec
inc
je
cmps
scas
fdivr
jp
pushf
ret
xlat
pop
sahf
popa
sbb
pop
cmps
dec
setb
retf
dec
loopne
and
pop
cmps
iret
pop
je
daa
ja
cmps
daa
pop
loopne
and
pop
cmps
iret
inc
je
daa
xchg
pop
inc
fild
loope
fild
gs
sbb
cmps
sar
xchg
jecxz
xchg
fmul
loope
pop
into
icebp
pop
cmps
daa
fstp
xchg
cmps
loopne
div
enter
daa
loopne
xor
pop
pop
sub
dec
sub
dec
pop
adc
aad
daa
test
sar
fstp
pop
dec
add
test
fnstenv
movs
and
mov
pop
pop
cmps
push
adc
imul
cmps
lock
daa
pop
jns
(bad)
adc
(bad)
arpl
pop
and
pushf
fcmovnu
jnp
mov
idiv
pop
xchg
pop
sar
xchg
jecxz
xchg
fmul
adc
mov
sub
mov
pop
pop
push
hlt
xor
cmps
sar
xchg
jecxz
xchg
fadd
lods
pop
loope
nop
iret
je
xor
mov
daa
loopne
xor
pop
pop
sub
dec
int3
daa
adc
mov
sbb
mov
pop
pop
test
out
jne
int3
daa
not
mov
sub
lock
pop
pop
stc
jns
(bad)
gs
cli
and
jo
push
cwde
loopne
leave
jp
fcomp
add
pop
pop
and
adc
adc
cld
push
pop
pop
and
xor
pop
push
rcl
jecxz
pop
loopne
mov
pop
cmps
stos
push
test
sbb
pop
rcr
dec
xchg
repz
pop
pop
das
fbstp
out
loopne
push
into
test
pop
cmps
stos
pop
test
iret
jnp
pop
fcomp
pop
fcomp
pop
shr
loopne
and
pop
pop
and
push
jne
into
in
pop
cmps
stos
pop
test
iret
daa
movs
pop
fcomp
mov
das
pushf
xlat
pop
into
inc
push
cmps
daa
xchg
out
rcl
shl
loope
daa
hlt
or
jae
sbb
ss
or
sub
inc
fcmovb
sahf
fcom
jne
pop
int3
es
push
gs
dec
dec
(bad)
movs
loopne
movs
fist
das
in
xchg
repz
dec
shl
loope
daa
hlt
or
jae
push
sub
ss
or
sub
inc
fcmovb
xchg
out
fist
mov
dec
mov
fist
das
in
xchg
repz
test
fstp
sbb
fcom
pop
and
push
into
cli
out
pop
cmps
jno
ins
sbb
loopne
bound
xchg
ffree
scas
dec
xchg
fsub
pop
cmps
push
sbb
out
loopne
sub
enter
daa
adc
mov
mov
pop
imul
test
ds
pop
das
cmps
ja
fmul
daa
pop
inc
das
bound
xchg
jecxz
xchg
fsub
cmp
sub
dec
pop
push
or
sbb
pop
pop
and
bound
xchg
pop
push
out
popa
fcomp
mov
pop
dec
dec
cmp
cmps
scas
fcom
popa
les
lahf
loope
pop
fdiv
or
fbstp
out
loopne
sbb
out
pop
sub
lods
pop
inc
clc
jl
fdiv
scas
cli
cmps
retf
pop
dec
or
cmps
je
dec
sbb
scas
(bad)
call
pop
fucom
xchg
fcomp
mov
pop
xchg
jle
(bad)
xchg
gs
fcomp
cmps
daa
xchg
(bad)
push
les
loopne
in
mov
sub
push
aad
daa
cmps
adc
add
call
fcomp
mul
pop
pop
das
call
(bad)
das
in
mov
cmps
lods
pop
pop
and
mov
push
pop
cmps
daa
cmps
aas
(bad)
daa
pop
call
pop
fucom
xchg
gs
call
pop
jns
lods
pop
pop
pop
pop
imul
daa
pop
loopne
mov
pop
cmps
dec
pop
neg
dec
pop
pop
dec
ja
fcomp
pop
sub
dec
xchg
jecxz
loopne
dec
dec
js
cmps
scas
call
inc
pop
pop
das
mov
pushf
mov
cmps
push
add
jecxz
adc
pusha
fnstsw
loopne
dec
pop
div
pop
pop
das
push
(bad)
das
in
mov
pop
sub
xchg
and
in
pop
sbb
cmps
daa
imul
imul
cmps
push
sbb
loopne
pop
pop
shl
xchg
pop
scas
sub
pushf
pop
fsub
inc
int3
daa
not
daa
pop
loopne
mov
pop
cmps
lods
pop
pop
and
mov
pushf
addr16
imul
mov
pop
fcomp
cmps
daa
push
das
mov
cmps
sub
call
mov
in
scas
fsub
adc
loopne
pop
stos
call
mov
dec
div
pop
and
fnstsw
loope
loope
sbb
loope
cmps
into
test
cmps
daa
jns
sbb
loopne
pop
daa
adc
sub
pushf
xlat
pop
addr16
and
mov
xchg
(bad)
(bad)
call
loopne
fcom
loopne
stos
call
pop
jae
cmps
movs
fist
sub
fcomp
fwait
mov
daa
jns
jecxz
pop
pop
dec
cmp
test
fst
loopne
fcom
jecxz
scas
mov
push
fsub
loopne
fcomp
test
nop
mov
pop
(bad)
es
int3
sahf
gs
test
push
fsub
loopne
mov
push
jns
mov
imul
movs
daa
pop
loopne
mov
pop
cmps
iret
and
daa
xchg
bound
das
xchg
stos
xor
in
das
call
(bad)
das
in
loope
and
pop
test
fcom
stos
ja
cmp
loopne
int3
daa
imul
shl
xchg
jle
(bad)
xchg
gs
sbb
pop
fdiv
call
fld
xchg
pop
scas
sub
loopne
out
xchg
sbb
pop
pop
shl
loope
daa
hlt
or
mov
loopne
fchs
xchg
xor
xchg
pop
fdivr
jecxz
adc
pop
fsub
loopne
stc
sahf
in
movaps
pop
shl
loope
daa
hlt
or
mov
jmp
(bad)
xchg
xor
loopne
pop
fdivr
jecxz
adc
xor
loopne
pop
push
iret
arpl
fcomp
daa
pop
hlt
xchg
test
pop
sub
loopne
out
into
sub
sbb
and
loopne
pop
fdivr
jecxz
adc
pop
fsub
loopne
hlt
adc
pop
and
out
fchs
xchg
and
loopne
pop
scas
(bad)
call
pop
fsubp
xchg
gs
fcomp
cmps
daa
xchg
call
sbb
pop
fchs
pop
int3
es
push
gs
xchg
and
loopne
pop
ja
cmp
fsub
pushf
bound
and
pop
daa
pop
imul
loopne
shl
neg
scas
daa
pop
loopne
mov
pop
cmps
loope
in
pop
fchs
push
test
fchs
dec
into
mov
pop
cmps
stos
call
ret
pop
movs
fist
fsub
pop
cmps
sub
adc
mov
dec
ja
xlat
pop
pop
sub
dec
neg
xchg
loopne
and
fcomp
pop
ror
and
loopne
pop
inc
xchg
pop
pop
int3
adc
(bad)
adc
mov
loopne
fcom
mov
scas
mov
push
fsub
loopne
fcomp
test
nop
mov
pop
fchs
sbb
fnstsw
loope
push
iret
arpl
call
out
pop
fdivr
and
loopne
pop
into
pop
jecxz
fsub
call
pop
fucom
xchg
cmps
call
sbb
loopne
fcomp
mov
pop
fldenv
aam
loope
and
sbb
adc
mov
push
(bad)
and
call
call
mov
in
sub
loopne
dec
mov
in
xchg
call
out
stos
pop
fcomp
das
pop
loope
pop
add
pop
push
les
loopne
in
test
fldenv
loopne
daa
pop
adc
aad
pop
cmps
sub
loopne
ja
mov
gs
xchg
and
loopne
pop
ja
mov
fsub
pushf
bound
xchg
fadd
scas
mov
sahf
dec
jmp
test
push
fsub
loopne
fsub
pop
cmps
push
adc
inc
xchg
call
call
and
loopne
fcomp
adc
(bad)
xchg
sub
loopne
pop
fcomp
cmps
daa
push
das
loopne
fsub
fst
loope
jo
test
aad
loop
stos
mov
loopne
iret
div
daa
pushf
fld
scas
fcom
adc
adc
pop
sub
xchg
loop
push
jns
mov
adc
pop
sbb
out
fchs
imul
loope
pusha
mov
loopne
mov
push
cmps
jp
pop
pop
push
les
loopne
in
rcr
loopne
sbb
adc
int3
and
pop
xchg
and
loopne
pop
ja
test
fsub
pushf
bound
xchg
fadd
scas
mov
sahf
mov
test
push
fsub
loopne
fsub
pop
cmps
push
adc
adc
fstp
pop
daa
xchg
xchg
pop
fsub
loopne
out
loopne
sbb
pop
rcr
xchg
call
mov
in
xchg
call
xchg
call
call
es
cmps
dec
push
ja
xlat
pop
pop
sub
dec
neg
jecxz
xchg
popa
inc
xchg
bound
daa
adc
mov
xchg
fsubr
fsub
pop
cmps
push
cs
(bad)
aas
pop
cmps
int3
or
adc
xchg
xor
sbb
pop
fcom
loope
inc
loopne
pop
sub
out
fchs
pop
lahf
mul
int3
es
push
gs
xchg
and
loopne
pop
ja
enter
pushf
bound
xchg
fadd
scas
(bad)
(bad)
das
in
test
fldenv
loopne
daa
pop
imul
push
ja
aad
pop
test
mov
loopne
dec
sub
das
loopne
fsub
loope
das
(bad)
call
in
fcom
test
fst
test
shl
loope
scas
ficomp
ja
mov
pop
fsub
loopne
mov
loopne
fchs
jns
(bad)
adc
(bad)
loopne
pop
gs
(bad)
jne
into
lods
out
pop
cmps
stos
call
bound
adc
loopne
xchg
fcmovnu
cmps
fdiv
daa
pop
call
pop
fucom
xchg
sub
loopne
daa
imul
loope
es
push
gs
adc
(bad)
xchg
and
loopne
pop
fmul
mov
jecxz
xchg
popa
movs
fcomp
pop
fchs
sahf
push
and
cmps
int3
adc
(bad)
adc
mov
loopne
fcom
mov
scas
mov
pop
fsub
loopne
fcomp
test
mov
loopne
fcomp
jbe
iret
xchg
sub
loopne
pop
movs
xlat
loopne
cmps
and
cmps
push
out
and
loopne
pop
fcomp
mov
pop
jne
stos
call
mov
dec
neg
jecxz
xchg
jle
cld
xchg
and
call
loope
leave
pop
fneni(8087
pop
int3
es
push
gs
xchg
and
loopne
pop
ja
inc
pop
fsub
pushf
bound
and
pop
daa
pop
imul
pop
pop
sub
dec
mul
xchg
loopne
and
and
loopne
fcomp
jne
dec
pushf
out
in
xchg
call
cmp
stos
sbb
loopne
daa
imul
fcomp
pop
cmps
daa
loopne
dec
fsub
loopne
mov
dec
xchg
and
in
pop
ja
call
push
dec
aas
jmp
mov
pushf
out
push
sbb
call
mov
(bad)
push
cmps
daa
xchg
call
push
dec
fistp
pop
cmps
movs
fist
daa
aam
pop
cmps
daa
pushf
mov
pop
push
or
es
pop
sub
dec
loopne
das
test
bound
xchg
pop
scas
sub
pushf
push
fsub
inc
int3
daa
not
daa
pop
xchg
jle
(bad)
xchg
fcomp
mov
pop
pushf
sbb
loopne
pop
daa
adc
int3
es
call
call
jbe
loopne
movs
fist
das
mov
xchg
(bad)
push
les
loopne
in
xchg
jp
jecxz
and
sbb
pop
rcr
xchg
stos
pop
fsub
loopne
xchg
out
pop
fcomp
daa
int3
sub
in
neg
stos
fistp
loopne
les
pop
and
cli
in
pop
movs
xlat
loopne
cmps
and
cmps
push
out
popa
movs
fcomp
cmps
call
cmps
call
in
fcomp
cmps
daa
push
sub
sbb
pop
fsub
loopne
loope
xchg
sbb
loopne
pop
jo
bound
pop
xchg
sbb
in
pop
jo
mov
daa
pop
pushf
bound
loopne
xor
pop
pop
int3
and
int3
and
pop
xchg
fld
xchg
pop
mov
scas
fdivr
mov
sbb
fistp
loopne
dec
call
das
call
dec
fsub
loopne
mov
jne
sub
dec
xchg
jecxz
loopne
mov
daa
xchg
call
out
pop
fcomp
imul
mov
cmps
daa
xchg
call
push
dec
inc
sbb
cmps
movs
fist
daa
int3
or
daa
loopne
xor
pop
pop
sub
adc
cs
movs
fistp
int3
daa
test
jle
cld
xchg
and
call
movs
mov
pop
sar
sbb
out
pop
das
jmp
(bad)
das
in
xchg
jnp
in
and
sbb
pop
rcr
jne
imul
loopne
sub
and
pop
sti
daa
pop
xchg
and
mov
loopne
aas
mul
daa
pop
and
sub
dec
cs
cmps
movs
fistp
dec
mov
loopne
dec
pop
loopne
das
ja
ret
jne
dec
pop
div
iret
cmp
daa
pushf
mov
cmps
sub
loopne
mov
pop
cmps
scas
(bad)
ss
fcom
pop
movs
xlat
loopne
cmps
and
cmps
push
out
cmps
ja
mov
icebp
lods
bound
pop
adc
fdivr
daa
pop
xchg
and
mov
loopne
mov
imul
std
daa
pop
and
mov
jne
dec
pop
jge
cmps
movs
fistp
dec
sbb
int3
daa
loopne
pop
fsub
loopne
mov
dec
xchg
jecxz
loopne
mov
daa
xchg
call
mov
in
pushf
out
sub
test
adc
pop
cmps
sub
jne
iret
xor
daa
inc
hlt
pop
js
inc
outs
in
xchg
inc
lahf
add
mov
daa
pop
dec
lock
cmp
pop
inc
sahf
sub
cmps
fcomp
mov
pop
xchg
jle
(bad)
xchg
movs
mov
pop
and
fcomp
pushf
add
loopne
pop
daa
sahf
hlt
repz
pop
pop
shl
jecxz
(bad)
pop
cmps
loopne
jecxz
daa
pop
pop
sub
dec
into
pop
jns
lods
pop
pop
pop
push
sbb
or
pop
pop
pusha
mov
pop
loopne
mov
pop
cmps
dec
pop
test
pop
ja
fcomp
pop
sub
dec
xchg
jecxz
loopne
mov
daa
xchg
pop
pop
iret
out
inc
cmps
daa
xchg
fldcw
fcom
(bad)
or
jecxz
aam
pushf
bound
push
sub
adc
jns
loopne
jle
pop
scas
movs
push
mulps
test
and
bound
imul
bound
pushf
sahf
daa
push
sub
adc
or
loopne
jle
pop
scas
movs
push
mulps
neg
jnp
pop
push
fmul
cmps
sar
xchg
and
loopne
pop
scas
fcomp
cmps
loope
and
loope
and
loope
and
loopne
pop
lods
pop
pop
test
iret
(bad)
repz
fadd
sbb
loopne
pop
daa
push
sub
xlat
loopne
pop
scas
dec
mulps
mov
in
jne
dec
cmp
cmps
cmps
in
stc
mov
pop
adc
mov
push
fild
daa
cs
sub
loop
scas
fwait
and
in
loope
(bad)
fcmove
xchg
(bad)
push
les
loopne
in
loopne
sub
jecxz
scas
fwait
and
loop
loope
test
pop
fsub
loopne
loopne
stc
xchg
fdiv
add
pop
(bad)
xchg
pop
fst
pop
fcom
loop
pusha
and
pop
pop
(bad)
adc
mov
sbb
pop
scas
pop
jecxz
loopne
jecxz
(bad)
pop
cmps
cmps
in
call
fstp
pop
daa
loopne
xor
pop
pop
and
fcomp
push
dec
push
ja
xlat
pop
pop
sub
dec
imul
loopne
and
fcomp
pop
shl
imul
movs
daa
pop
jne
dec
mov
call
ja
pop
fcom
pop
cmps
sar
xchg
and
loopne
pop
scas
fdiv
dec
ins
out
in
xchg
call
pop
mov
fcomp
pop
fneni(8087
sahf
pop
fsub
pop
cmps
push
dec
and
pop
pop
shr
test
fneni(8087
loop
int3
add
loopne
fcom
fwait
mov
loopne
pop
scas
fwait
and
jecxz
loope
test
pop
fsub
loopne
(bad)
(bad)
adc
mov
sbb
pop
inc
xchg
call
loop
pop
cmps
in
pusha
lea
pop
xchg
jle
(bad)
xchg
fsubr
sub
dec
xchg
and
loopne
pop
ja
ins
stc
daa
pop
loopne
fist
loopne
iret
pop
inc
cmps
daa
loopne
xor
pop
pop
int3
es
push
gs
xchg
and
loopne
pop
ja
test
loopne
bound
and
pop
daa
pop
push
scas
(bad)
call
pop
fneni(8087
xchg
gs
pop
loopne
fist
loopne
lods
pop
pop
pop
pop
mul
(bad)
daa
pop
xchg
and
loopne
pop
movs
out
shl
mul
daa
pop
and
sub
inc
pop
cmps
jle
mov
adc
dec
dec
xchg
cmc
loopne
jle
pop
dec
cs
pop
cmps
dec
push
ja
xlat
pop
pop
sub
dec
test
cmps
fcom
pop
fsub
pop
cmps
push
or
ins
daa
pop
pop
sub
and
pop
fchs
and
pop
sbb
pop
jecxz
dec
scas
loope
mov
fwait
sub
loope
call
sbb
rcr
arpl
pusha
mov
loopne
das
jmp
(bad)
das
in
(bad)
loope
ja
inc
clc
daa
pop
xchg
and
loopne
pop
dec
push
ja
xlat
pop
pop
sub
dec
test
sahf
hlt
or
pop
pop
int3
es
push
gs
xchg
and
loopne
pop
ja
nop
psubusb
pushf
bound
xchg
call
loopne
cmps
daa
imul
mov
xchg
dec
pop
push
in
jbe
neg
das
mov
hlt
add
pop
fcom
pop
fneni(8087
push
jbe
neg
pop
fsub
sbb
out
pop
dec
xor
call
xchg
pop
pop
es
fsubr
sub
dec
xchg
jecxz
loopne
dec
mov
cmps
scas
call
fsubr
dec
ret
cmps
sbb
cmps
daa
push
int3
inc
div
daa
pop
inc
dec
out
xchg
pop
pop
es
jle
pop
sub
das
loopne
xor
pop
pop
dec
mov
into
and
mov
xchg
fdivr
jns
(bad)
gs
cli
cmc
jno
xchg
shr
xchg
pop
mov
xchg
pop
mov
cmp
jnp
fdiv
pop
pop
pop
pop
and
sahf
(bad)
mov
shr
ja
dec
gs
dec
dec
pop
inc
pop
cmps
movs
fist
das
fild
out
loopne
sahf
(bad)
(bad)
push
shr
ja
dec
gs
dec
dec
inc
inc
pop
cmps
movs
fist
das
(bad)
pushf
xlat
pop
addr16
and
daa
dec
dec
sub
iret
test
pop
pop
pop
stc
jns
inc
gs
cli
daa
retf
or
icebp
cdq
lds
inc
sahf
icebp
dec
jae
pop
daa
and
pop
cmps
daa
xchg
add
pop
pop
das
xlat
call
loop
fcom
pop
cmps
popf
int3
push
les
dec
xchg
addr16
ficomp
out
push
aad
jbe
xchg
fsub
scas
mov
pop
fsub
xchg
push
es
xchg
pusha
loope
loopne
int3
xor
adc
pop
test
hlt
push
jge
jbe
ficom
fsubp
mov
in
xchg
iret
jmp
xchg
mov
cmps
pop
loopne
lods
pop
loopne
das
imul
pop
fcomp
neg
jnp
pop
das
in
frstor
and
loopne
adc
call
out
push
push
scas
fst
pop
ja
call
pop
pop
sub
dec
idiv
jnp
pop
int3
daa
jne
int3
and
ja
cmps
daa
pop
xchg
and
loop
pop
ja
adc
daa
pop
xchg
and
loop
pop
fsubr
push
out
pop
cmps
ja
xor
daa
pop
xchg
push
es
xchg
pusha
dec
pop
xchg
and
loop
pop
ja
push
mov
in
pop
pop
pop
xchg
jmp
pop
fdiv
mov
daa
pop
loopne
shl
loopne
iret
fisttp
daa
loopne
xor
pop
pop
cmc
dec
(bad)
in
xchg
call
sti
inc
cmps
daa
sahf
fnstcw
pop
pop
sub
dec
ja
leave
pop
pop
sub
dec
ja
daa
pop
lahf
dec
arpl
pop
cmps
fcomp
mov
pop
ja
leave
pop
pop
into
xchg
icebp
pop
cmps
stos
call
daa
pop
pop
es
cmp
cmps
daa
xchg
out
xchg
xlat
xchg
fprem1
dec
dec
icebp
in
ja
dec
gs
ja
daa
pop
lahf
dec
das
pop
pop
cmps
movs
fisttp
jns
(bad)
gs
cli
and
jo
push
cwde
add
adc
pop
pop
and
out
fist
pop
sub
dec
sub
dec
int3
daa
ja
cmps
sub
jne
dec
pop
jne
fsubr
pop
push
pop
mul
jge
pop
das
fistp
out
loopne
out
and
sbb
pop
rcr
xchg
pop
pop
fsubr
lock
push
jne
fsubr
pop
push
jecxz
call
fucomip
clc
das
(bad)
jmp
jecxz
xchg
fcomp
jecxz
mov
pop
pop
stc
jns
(bad)
gs
cli
div
dec
icebp
lods
push
sbb
jp
mov
call
xchg
popa
lahf
sub
clc
das
(bad)
out
popa
dec
loopne
cmps
daa
dec
jne
iret
outs
dec
cmps
daa
xchg
out
and
sbb
pop
rcr
xchg
fmul
lahf
and
arpl
push
cmps
int3
sbb
fcomp
pusha
dec
js
inc
outs
in
xchg
inc
jbe
dec
icebp
cwde
adc
mov
sahf
lock
pop
pop
das
fild
out
loopne
pop
into
cmps
pop
pop
cmps
dec
sbb
dec
pop
ja
daa
pop
fistp
pop
not
loope
loope
push
sbb
data16
daa
xchg
pop
es
popa
dec
sbb
dec
dec
jb
pop
cmps
dec
pop
xchg
jecxz
dec
loopne
aaa
loopne
stos
jno
fdiv
daa
pop
dec
dec
fimul
cmps
push
fistp
cs
out
rcl
clc
out
fmul
ret
mov
dec
dec
sbb
push
in
scas
out
pop
scas
fdiv
dec
lahf
pop
cmps
daa
jne
int3
daa
jne
into
daa
pop
pop
fsubr
dec
out
pop
cmps
scas
fstp
pop
adc
shl
xchg
pop
stos
movs
aas
pop
push
(bad)
cmps
sar
xchg
jecxz
xchg
fcom
daa
dec
div
jb
pop
das
in
fbstp
dec
pop
cmps
scas
pop
jecxz
fucomip
clc
das
(bad)
jmp
popa
dec
pop
pushf
fld
pop
imul
out
hlt
mov
(bad)
out
loopne
xlat
dec
loopne
fisttp
shl
daa
enter
daa
dec
mul
jb
pop
sub
scas
out
pop
scas
fadd
jl
fdiv
scas
cli
dec
div
sbb
out
pop
scas
fsub
push
rcl
cmps
dec
lahf
pop
cmps
daa
jne
int3
daa
jne
into
daa
pop
pop
data16
dec
and
cmps
scas
fstp
out
dec
int3
and
dec
test
xchg
pop
stos
scas
ficomp
es
push
scas
fdiv
stos
dec
jecxz
je
push
jno
cwde
lock
pop
jne
stos
pop
jecxz
dec
sbb
pop
lock
imul
dec
test
enter
daa
cmps
push
cmps
daa
pop
inc
clc
jl
fdiv
scas
cli
pushf
dec
pop
dec
dec
icebp
pushf
dec
inc
pushf
jnp
fcomp
pop
pop
shl
std
cmps
daa
pushf
jp
daa
pushf
jp
daa
pushf
jp
daa
xchg
bound
sub
movs
daa
pop
pop
push
sbb
es
nop
and
jecxz
pop
pop
sub
addr16
ss
call
(bad)
das
in
test
loop
out
pushf
cmp
pop
dec
cmps
(bad)
loopne
push
sbb
push
(bad)
xchg
cmps
jb
cmps
cmps
(bad)
loopne
push
into
xchg
jecxz
adc
pop
int3
ss
gs
jb
cmps
sub
pop
mov
es
mul
pop
loope
shl
pushf
jb
and
xchg
fsub
dec
loope
es
loope
shl
xchg
pop
stos
sub
adc
xor
jb
cmps
daa
adc
fs
sti
push
stos
aas
pop
cmps
sar
xchg
jecxz
xchg
fsubr
or
repz
(bad)
xchg
pop
jle
pop
sti
sub
sbb
adc
test
mov
push
jecxz
xchg
pop
stos
sub
pop
test
neg
pop
inc
scas
(bad)
call
das
in
pop
inc
int3
push
xchg
jle
cld
xchg
jecxz
xchg
fdivr
jns
(bad)
gs
cli
and
jo
inc
scas
loopne
out
pop
fnsave
daa
(bad)
out
out
pop
(bad)
fcomp
xchg
fcmovnb
xchg
sub
ss
pop
cmps
aam
xchg
jecxz
xchg
fisttp
stos
(bad)
retf
push
stc
in
cmps
adc
stos
(bad)
sub
inc
stc
in
cmps
sbb
cmps
jb
test
push
fs
pop
pop
es
pop
pop
scas
pop
xlat
das
(bad)
fucomi
ret
out
xchg
pop
data16
pop
out
(bad)
call
sbb
xchg
dec
call
shl
lahf
pop
pop
and
adc
es
call
push
ins
push
jmp
cmps
daa
xchg
sbb
xchg
dec
jmp
test
daa
lahf
pop
pop
cmps
fld
daa
pop
call
outs
scas
pop
out
xchg
pop
push
fwait
out
pop
cmps
pop
inc
adc
fs
cmp
pop
pop
and
cmps
pop
loopne
sub
pushf
inc
and
pop
and
and
cmps
pop
loopne
cmps
jb
mov
xchg
pop
push
push
fs
(bad)
sub
shl
lahf
pop
pop
and
test
cmps
daa
pop
and
daa
pop
pop
shl
lahf
pop
pop
and
test
cmps
daa
push
push
fs
daa
shl
lahf
pop
pop
and
pop
cmps
cmps
pop
jmp
test
fsub
(bad)
rcr
hlt
mov
sbb
adc
and
mov
int3
adc
lahf
fcmovnbe
sbb
lahf
inc
bound
scas
pop
xlat
das
(bad)
out
adc
pushf
cmps
daa
pop
push
cmps
pop
loopne
sub
inc
outs
in
(bad)
ss
(bad)
push
daa
maxps
addr16
(bad)
pop
and
jbe
mov
fbstp
mov
(bad)
ror
(bad)
(bad)
ss
pop
ss
(bad)
out
(bad)
(bad)
ss
(bad)
ss
(bad)
out
(bad)
(bad)
ss
(bad)
ss
(bad)
lahf
dec
lds
mov
(bad)
push
daa
fistp
mov
or
pop
(bad)
pop
sub
out
(bad)
mov
fbstp
mov
(bad)
sar
(bad)
(bad)
ss
pop
ss
(bad)
and
mov
(bad)
ss
(bad)
ror
(bad)
(bad)
ss
(bad)
ss
pop
into
xchg
out
pop
fcomp
jg
mov
(bad)
ss
neg
cmps
daa
pop
inc
ss
(bad)
and
xor
push
pop
pop
lods
pop
(bad)
ss
xchg
out
and
pop
ss
cs
(bad)
(bad)
movs
fcomp
ss
es
mov
(bad)
ss
repz
ss
pushf
sub
pop
ss
push
mov
(bad)
ss
(bad)
(bad)
ss
js
xchg
out
jecxz
daa
maxps
and
jbe
daa
fistp
xor
pop
cmps
sub
out
(bad)
in
(bad)
ss
(bad)
push
daa
maxps
mov
(bad)
stc
mov
(bad)
ss
out
mov
(bad)
shl
(bad)
ss
iret
popa
addr16
(bad)
das
dec
fidiv
mov
(bad)
xchg
cmc
(bad)
(bad)
ss
(bad)
ss
(bad)
das
out
(bad)
(bad)
ss
call
aaa
mov
(bad)
ss
(bad)
ss
(bad)
sbb
push
jbe
mov
das
ss
(bad)
cmps
fisttp
in
ss
(bad)
push
daa
fistp
mov
out
mov
(bad)
shl
(bad)
ss
or
pop
(bad)
das
dec
fidiv
mov
(bad)
xchg
cmc
(bad)
(bad)
ss
(bad)
ss
(bad)
das
out
(bad)
(bad)
ss
call
aaa
mov
(bad)
ss
(bad)
ss
(bad)
sbb
ds
(bad)
mov
das
ss
(bad)
cmps
fisttp
in
ss
pop
mov
(bad)
ss
neg
in
xchg
inc
movs
repz
jno
xchg
jecxz
jns
jecxz
movs
fsub
push
(bad)
xchg
gs
xchg
jecxz
xchg
fcom
rcr
pop
dec
lds
pop
cmps
lods
pop
pop
cmps
xlat
dec
test
fcom
pop
dec
scas
fcomp
mov
int3
xor
pop
das
(bad)
mul
sbb
pop
pop
cmps
sub
ss
call
pop
dec
mov
xchg
dec
pop
lods
pop
pop
sub
sbb
(bad)
push
or
fst
xchg
jecxz
push
out
out
test
loope
in
xchg
cvtps2pi
adc
and
and
pop
shl
xchg
pop
scas
es
pop
test
push
ss
scas
setbe
(bad)
xchg
gs
pop
ja
daa
pop
pop
sub
dec
dec
retf
cmps
sub
pop
scas
es
dec
sub
adc
jb
push
jbe
neg
hlt
daa
pop
jne
stos
pop
jmp
cmps
xlat
dec
not
jne
pop
and
sar
xchg
jecxz
xchg
fsub
(bad)
jmp
adc
push
lahf
loope
popf
mov
loopne
stc
jns
(bad)
gs
cli
and
jo
mov
push
sbb
pusha
iret
or
movs
adc
out
cmc
cmps
in
fsubp
stos
out
add
scas
fst
shl
pop
pop
and
daa
pop
push
push
fcomip
sti
and
mov
cmps
daa
xchg
pop
inc
ja
push
iret
dec
out
fcomp
data16
adc
pop
lock
xchg
or
or
and
rcr
lock
xchg
fcmovne
cmps
iret
popf
daa
pop
call
das
loope
adc
pop
lock
loopne
fwait
dec
stc
pop
cmps
scas
rcr
stc
pop
cmps
jo
cld
mul
pop
jne
dec
pop
xchg
jle
sbb
jecxz
dec
idiv
pop
and
rcr
(bad)
fld
and
jecxz
xor
(bad)
(bad)
sbb
scas
stc
pop
cmps
and
xchg
inc
gs
es
ins
mov
stc
pop
cmps
scas
pop
out
xor
xchg
mov
stc
pop
cmps
push
setle
jno
cmps
movs
pop
out
xchg
sbb
rcr
(bad)
out
jg
xchg
dec
cmps
daa
xchg
pop
jle
lahf
dec
cmps
daa
xchg
bound
test
das
in
test
out
imul
xchg
and
rcr
inc
dec
pop
cmps
scas
pop
retf
dec
jp
pop
cmps
lods
(bad)
retf
test
sub
push
jno
and
push
push
out
xchg
pusha
dec
pop
ja
rcr
call
rcr
iret
pop
dec
cmps
daa
pushf
fld
daa
xchg
pop
push
int3
or
cmps
scas
(bad)
sbb
rcl
xchg
aaa
pushf
pop
push
and
sbb
stos
stc
pop
cmps
push
pop
jmp
(bad)
mov
xchg
jecxz
hlt
add
push
lods
or
mov
out
call
das
loope
pop
push
and
sbb
mov
pop
out
aam
xchg
shl
adc
sub
gs
xchg
stos
mov
pop
cmps
scas
adc
cmps
sar
xchg
jecxz
xchg
fldcw
clc
sbb
and
pop
pop
test
lds
cmps
lods
adc
stos
sbb
push
and
nop
pop
div
scas
(bad)
sbb
mov
neg
bound
xchg
out
xchg
xlat
xchg
fxch
daa
jne
int3
and
ja
cmps
daa
pop
loopne
das
idiv
jmp
pop
xchg
jecxz
sahf
icebp
cmp
pop
int3
daa
xchg
pop
dec
ja
push
je
push
iret
rcl
daa
loopne
inc
iret
jecxz
cmps
daa
sahf
icebp
mov
iret
mov
(bad)
js
inc
outs
in
xchg
inc
jbe
mov
daa
loopne
jl
daa
pushf
and
push
pop
xchg
pop
es
popa
lods
pop
pop
add
dec
pop
daa
cmps
daa
jne
dec
push
push
pop
cmps
test
cmps
in
xchg
out
fist
dec
int3
daa
ja
adc
pop
ja
pop
pop
pop
int3
daa
jne
dec
pop
push
pop
cmps
ja
xchg
in
daa
pop
inc
outs
in
xchg
inc
jbe
mov
das
fbstp
out
loopne
and
sub
loopne
imul
push
cmps
daa
jns
jecxz
pop
pop
dec
dec
sahf
call
test
out
push
cmps
daa
xchg
or
sbb
test
fnstenv
xchg
pop
pop
sub
daa
loopne
movs
iret
xchg
push
cmps
daa
adc
xchg
pop
pop
sub
daa
pushf
arpl
sub
aas
cmps
daa
pop
xchg
mov
cmps
pop
cmps
fsubr
mov
daa
jns
jecxz
adc
xchg
pop
nop
loopne
das
cmps
pop
cmps
iret
mov
cmps
daa
sahf
fadd
pop
pop
and
daa
pop
inc
outs
in
xchg
inc
jbe
cmps
(bad)
jns
ds
out
xlat
das
out
and
push
sbb
loopne
loope
daa
hlt
aas
test
out
push
cmps
daa
xchg
or
sbb
test
fxtract
push
rcr
loope
nop
pop
loope
fild
call
das
out
xlat
pop
out
fmul
ret
cmc
jno
xchg
fld
mov
xchg
push
sar
xchg
jecxz
xchg
fstp
pop
dec
dec
mov
fist
and
imul
dec
xor
test
fstp
pop
test
and
inc
rcr
loope
iret
jmp
cmps
daa
adc
(bad)
sahf
jmp
test
cmps
and
cli
push
dec
dec
into
ja
pop
cmps
jo
sub
daa
pop
pushf
bound
hlt
pop
shl
loope
daa
hlt
or
sbb
inc
shr
adc
mov
(bad)
add
test
in
ret
das
xlat
cs
das
loope
test
fst
call
pop
pop
outs
fstp
mov
out
fmul
ret
jo
sub
loopne
bound
lahf
pop
pop
cmps
push
cmp
das
dec
retf
cmps
dec
aas
push
cmps
daa
jne
pop
push
pop
mul
pop
pop
and
lods
pop
pop
cmps
dec
sbb
cmps
daa
neg
es
popa
js
fdiv
scas
cli
pushf
dec
pop
dec
dec
icebp
cwde
rcl
or
inc
pop
pop
popa
(bad)
pop
sahf
push
push
daa
pop
cmps
lods
add
adc
pop
xchg
pop
es
popa
dec
pop
daa
cmps
daa
jne
pop
adc
cmps
in
idiv
jmp
pop
jne
dec
push
jne
iret
jecxz
cmps
daa
mov
pushf
ret
rcr
cmps
sub
pop
pop
push
rcl
popa
(bad)
out
sbb
adc
dec
mul
pop
pop
das
in
xchg
repz
movntps
dec
pop
adc
lods
in
div
loopne
pop
sahf
popa
jns
pop
cmps
dec
sub
pop
cmps
iret
arpl
daa
jne
int3
daa
xchg
pop
push
ja
mov
bound
xchg
out
fist
dec
sub
dec
pop
adc
lods
in
idiv
jecxz
pop
xchg
pusha
cmps
lock
daa
pop
pushf
pop
fcom
fwait
sub
pop
pop
dec
sahf
loop
pop
scas
fcomp
in
push
cmps
daa
xchg
or
adc
xchg
popa
stos
pop
div
dec
pop
jbe
pop
push
pop
cmps
and
pop
push
gs
dec
into
mov
pop
jne
iret
sub
daa
dec
mul
outs
pop
pop
into
imul
cmps
dec
fdivr
cmps
daa
pop
xchg
mov
cmps
pop
cmps
stos
pop
btr
jmp
sbb
iret
lahf
pop
cmps
daa
jne
int3
daa
xchg
pop
push
ja
or
daa
pop
pushf
bound
xchg
out
rcl
neg
loopne
stc
jns
(bad)
gs
cli
daa
retf
pop
push
cmps
daa
dec
dec
icebp
cwde
mov
lock
pop
sub
and
and
loope
pop
ja
sbb
daa
pop
pushf
bound
xchg
out
fist
pop
dec
cmp
test
mov
or
test
mov
loopne
es
loopne
sub
dec
test
xchg
push
lahf
loope
ror
and
dec
gs
xchg
and
loope
pop
ja
fdiv
fsub
xchg
pusha
inc
xchg
stos
pop
fchs
loopne
and
dec
gs
xchg
and
loope
pop
ja
mov
fsub
xchg
pusha
inc
xchg
stos
pop
fchs
loopne
ror
cmps
daa
adc
pop
loope
sbb
loopne
cmps
sub
loopne
mov
loopne
das
fild
out
loopne
call
push
dec
jb
pop
cmps
stos
call
mov
loope
fcom
test
sbb
loopne
fistp
out
loopne
call
mov
pop
fsub
xchg
loop
push
dec
dec
loop
pop
cmps
movs
(bad)
das
in
sbb
loopne
xchg
mov
adc
xchg
out
pop
fcom
test
out
pop
scas
rcl
test
js
inc
outs
in
xchg
inc
cmps
repz
jo
mov
or
jae
daa
call
loope
fcom
lahf
sahf
or
int3
es
call
pop
adc
ja
pop
pop
fsub
pushf
bound
cmps
fninit
daa
pop
call
pop
fsub
xchg
popa
stos
call
or
cmps
loope
sbb
loopne
cmps
int3
es
stos
call
bound
pushf
cmp
ins
fsub
loopne
push
adc
pop
ja
pop
dec
gs
xchg
and
loope
pop
ja
dec
in
daa
pop
pushf
bound
xchg
out
fist
loope
fmul
bound
pop
das
loope
fsub
es
das
aam
hlt
ja
dec
xchg
cmp
loope
pop
je
cmp
daa
pop
jne
dec
lahf
pop
cmps
daa
jne
int3
daa
jne
into
daa
pop
pop
es
call
repnz
pop
cmps
scas
fst
popa
movs
loope
ror
pop
imul
pop
pop
int3
daa
dec
ja
leave
pop
pop
sub
iret
lahf
pop
cmps
daa
xchg
out
fist
out
fist
div
bound
pop
test
in
xchg
sbb
loopne
iret
stos
push
cmps
daa
pushf
fld
scas
fcom
pop
ja
and
daa
pop
jne
ja
mov
icebp
lods
bound
pop
adc
xor
daa
pop
dec
dec
push
pop
cmps
js
inc
outs
in
xchg
inc
cmps
repz
out
inc
je
xchg
out
fist
fsubr
or
int3
es
call
pop
adc
ja
mov
bound
sahf
fdiv
sbb
jecxz
pop
fmul
je
pop
pop
pusha
mov
loopne
dec
push
jne
sub
dec
xchg
jecxz
pushf
fistp
fsub
loopne
sub
loopne
dec
pop
icebp
in
xchg
call
jecxz
cmps
daa
pushf
fstp
daa
pop
jne
stos
call
inc
pop
pop
cmps
fild
stos
call
add
pop
cmps
stos
call
out
push
pop
cmps
movs
fist
das
fistp
out
loopne
call
dec
pop
cmps
daa
jne
imul
loopne
sub
iret
pop
pop
cmps
daa
hlt
add
sbb
pop
cmps
iret
das
pop
cmps
daa
jne
test
in
xchg
push
fsubr
test
daa
inc
inc
outs
in
xchg
inc
cmps
repz
cwde
mov
out
rcl
das
loopne
push
sub
dec
xchg
jecxz
pushf
fistp
fsub
xchg
pop
push
out
popa
fsubr
sub
dec
ja
leave
pop
pop
sub
dec
test
fndisi(8087
loopne
ja
mov
daa
pop
xchg
and
loope
pop
scas
fstp
push
or
pusha
div
into
inc
jno
stos
pop
fchs
loopne
iret
jmp
cmps
daa
pushf
mov
mov
sub
pop
ja
fsub
daa
pop
push
push
inc
ja
leave
pop
pop
dec
dec
pop
pop
cmps
dec
pop
dec
into
cmp
push
pop
adc
jl
daa
pop
xchg
pop
push
out
popa
int3
dec
xchg
and
loope
pop
ja
je
daa
pop
push
push
cmp
leave
pop
pop
dec
push
pop
pop
cmps
dec
pop
dec
into
cmp
push
pop
adc
xor
daa
pop
xchg
pop
es
popa
int3
cmp
pop
dec
xor
cmps
dec
pop
dec
into
aaa
icebp
pop
cmps
lods
push
pop
adc
adc
daa
pop
sahf
push
or
inc
(bad)
gs
cli
daa
retf
or
cmps
daa
dec
dec
icebp
cdq
mov
das
xchg
out
(bad)
xlat
xchg
fldenv
es
call
pop
pop
and
mov
out
call
pop
fsub
xchg
pusha
fsubr
sub
dec
ja
leave
pop
pop
sub
dec
mul
jecxz
xchg
and
loope
pop
ja
push
popa
scas
fstp
push
or
pop
div
into
inc
jne
mov
loopne
hlt
iret
(bad)
pop
cmps
daa
jne
into
cmps
pop
pop
cmps
dec
sbb
ja
daa
pop
pop
sub
dec
imul
pop
pop
das
(bad)
push
into
aaa
icebp
pop
cmps
iret
pop
pop
cmps
daa
jne
test
in
xchg
dec
scas
fsubr
pop
dec
pushf
pop
pop
cmps
lahf
aam
cmps
daa
call
loope
fcom
pop
cmps
iret
or
daa
jne
test
in
xchg
dec
scas
fsubr
pop
into
daa
lahf
pop
cmps
dec
pop
test
pop
into
daa
lahf
pop
cmps
je
pop
scas
fsubr
dec
mul
pop
cmps
scas
fsub
push
rcl
das
loope
loopne
and
mov
pop
xchg
jecxz
dec
dec
cmc
fsubr
dec
mov
int3
mov
outs
mov
daa
sahf
icebp
jo
pop
pop
into
shl
pop
cmps
iret
xchg
jne
test
in
xchg
bound
sbb
pop
cmc
iret
addr16
cmps
daa
loopne
pop
iret
mov
jmp
stc
jns
(bad)
gs
cli
daa
retf
or
cmps
daa
dec
dec
icebp
lods
inc
pop
sbb
fstp
scas
out
pop
scas
fsubr
pop
scas
fcom
push
sub
jmp
fsub
dec
sub
iret
out
jmp
stos
cmps
fsub
pop
xchg
and
loope
pop
ja
add
daa
pop
fldenv
and
loope
fcomp
hlt
cwde
dec
push
xchg
and
loope
pop
ja
(bad)
and
cdq
jmp
call
pop
fsub
xchg
popa
fsubr
sub
dec
ja
leave
pop
pop
sub
dec
neg
jecxz
jne
dec
lahf
pop
cmps
daa
jne
int3
daa
jne
into
daa
pop
pop
es
call
retf
cmps
scas
pop
out
fnstsw
push
dec
psllw
daa
idiv
cmps
ja
cmovs
loopne
iret
mov
jns
daa
pop
call
pop
fsub
xchg
popa
into
mov
push
dec
gs
neg
gs
pop
int3
daa
dec
ja
leave
pop
pop
pop
adc
ins
cwde
daa
pop
xchg
pop
push
out
popa
dec
pop
lahf
cmps
daa
jne
dec
bound
cmps
scas
fnstenv
stos
pop
jecxz
dec
pop
lahf
cmps
daa
dec
loopne
fcomip
pushf
out
pop
xchg
pop
sar
xchg
and
loope
pop
scas
fcomp
dec
pop
loopne
fisttp
aad
div
daa
pop
xchg
pop
es
popa
int3
fneni(8087
aad
idiv
retf
dec
cs
pop
cmps
dec
pop
dec
into
shl
pop
cmps
fsubr
movs
sbb
pop
das
fucomip
clc
das
mov
xchg
fdiv
iret
call
daa
loopne
pop
iret
adc
daa
inc
inc
std
out
fmul
ret
movs
es
neg
sbb
pop
cmc
jno
movs
mov
jp
push
outs
push
pop
cmps
sar
xchg
and
loope
scas
fcomp
cmps
stos
mov
xchg
xchg
lahf
stc
pop
cmps
sahf
adc
cmps
daa
in
mov
cmps
daa
ja
dec
gs
imul
popw
pop
int3
daa
dec
ja
retf
sub
iret
fwait
and
mov
dec
xchg
jecxz
pushf
fistp
fsub
pushf
bound
sahf
hlt
leave
push
adc
sar
xchg
call
std
repnz
xchg
call
mov
fld
sub
loopne
dec
pop
icebp
in
xchg
call
fwait
pop
cmps
daa
pushf
(bad)
daa
pop
pushf
fld
pop
push
dec
retf
repnz
neg
out
pop
jne
ja
retf
dec
gs
xchg
fld
loopne
mov
daa
hlt
sbb
scas
loope
fcomp
xchg
and
loope
pop
ja
call
inc
and
fabs
loopne
pop
adc
test
daa
pushf
out
sub
xchg
and
xchg
call
pop
and
pop
pop
pop
sub
dec
adc
mov
dec
adc
mov
dec
adc
mov
dec
adc
call
movs
stos
mov
loopne
fsubr
xchg
sbb
loope
pop
movs
clc
seta
pushf
loopne
sub
loop
fdiv
(bad)
loopne
movs
fdiv
icebp
dec
mov
in
xchg
mov
icebp
iret
mov
fild
scas
fcom
pop
ja
cmp
daa
pop
jne
ja
mov
icebp
lods
bound
pop
push
sbb
mov
mov
dec
loopne
mov
loope
iret
(bad)
and
mov
sahf
hlt
jns
pop
pop
sub
dec
xchg
and
loope
pop
ja
push
fwait
daa
pop
xchg
and
loope
pop
ja
test
popf
loope
pop
ja
test
lahf
loope
pop
ja
test
xchg
loope
pop
ja
test
xchg
loope
pop
out
sbb
pop
fchs
dec
pop
xchg
jmp
pop
fcom
and
movs
loopne
test
push
loop
pop
dec
mov
sub
mov
pop
cmps
stos
mov
dec
dec
(bad)
pop
pop
cmps
movs
fstp
daa
in
adc
push
fabs
loopne
iret
jg
cmps
daa
jne
imul
loopne
sub
and
dec
popf
daa
pop
not
xchg
mov
pop
fdiv
lods
call
xchg
lods
pop
pop
pop
push
sbb
sbb
pop
pop
into
shl
pop
cmps
iret
aas
and
dec
jmp
bound
sbb
pop
stc
jns
(bad)
gs
cli
daa
retf
or
cmps
daa
dec
dec
icebp
lods
push
sub
jbe
push
push
adc
clc
xchg
and
loope
pop
scas
fsub
push
rcl
das
loopne
push
sub
dec
xchg
push
movs
fild
test
in
pop
fcomp
test
daa
lahf
cmps
or
call
sbb
pop
cmps
daa
xchg
call
mov
cmps
daa
pushf
out
pop
sbb
data16
push
push
cmps
daa
sahf
lock
and
pop
das
xlat
pushf
fistp
daa
pop
xchg
fs
xchg
dec
pop
int3
pop
adc
(bad)
add
rcl
xchg
out
fist
loope
mov
loopne
int3
daa
xchg
out
and
mov
dec
neg
loopne
and
daa
pop
pop
daa
enter
daa
jns
jmp
adc
fst
pop
pop
cmps
cmps
and
ror
lahf
cmps
daa
imul
pop
dec
into
out
out
pop
cmps
stos
call
inc
pop
pop
cmps
movs
fist
push
cld
or
cmps
sar
xchg
and
loope
pop
scas
fdiv
jecxz
fs
pushf
push
add
out
pop
cmps
stos
call
adc
cmps
movs
fist
daa
loopne
push
cmps
daa
hlt
cmp
pop
fsub
dec
into
test
pop
cmps
stos
call
ss
pop
cmps
movs
fisttp
das
fild
out
loopne
call
arpl
daa
pushf
out
push
cmp
pushf
cmp
and
loope
pop
ja
and
loopne
bound
xchg
out
fist
hlt
movs
push
fild
jl
fdiv
scas
cli
pushf
dec
xor
lods
push
sbb
(bad)
loopne
out
pop
scas
fdiv
dec
push
jne
iret
inc
cmps
daa
xchg
pop
mov
daa
pop
jne
dec
pop
xchg
jecxz
dec
test
jecxz
jns
(bad)
out
sbb
pop
scas
fcom
adc
dec
dec
(bad)
daa
pop
cmps
scas
fdivr
jp
xchg
push
movs
fist
test
daa
cmps
daa
xchg
pop
push
dec
setb
xlat
dec
loopne
and
mov
fsubr
and
sub
push
jno
pop
pop
fsub
pushf
bound
pushf
bound
push
cmovns
out
pop
movs
fist
daa
loopne
popa
cmps
daa
pushf
bound
push
cmovns
call
pop
dec
ds
dec
gs
test
dec
ja
leave
pop
pop
pop
adc
mov
shl
idiv
daa
pop
xchg
pop
sar
xchg
jecxz
xchg
fdivr
jns
(bad)
gs
cli
daa
retf
add
cmps
daa
dec
dec
icebp
lods
inc
pop
sbb
int
fcom
pop
es
popa
lahf
jle
cmps
daa
call
in
fcom
pop
cmps
iret
push
and
dec
gs
loopne
dec
bound
pop
cmps
dec
pop
ja
and
pop
sub
dec
loopne
iret
pop
daa
cmps
daa
xchg
fldcw
fbstp
out
loopne
jmp
pop
push
sbb
out
loopne
jle
fwait
xchg
daa
jecxz
pop
daa
xchg
call
(bad)
mov
in
fcom
call
jne
sub
dec
xchg
and
in
pop
ja
loopne
daa
pop
jne
dec
addr16
xchg
call
and
mov
daa
imul
es
dec
gs
xchg
and
jecxz
pop
ja
add
fsub
pushf
bound
fstp
pop
daa
sahf
lock
pop
int3
es
dec
gs
xchg
and
jecxz
pop
ja
in
fsub
pushf
bound
and
pop
daa
pop
imul
pop
pop
sub
dec
idiv
loopne
and
and
jecxz
fcomp
xchg
and
in
pop
sbb
jecxz
adc
fnstcw
icebp
arpl
adc
jbe
pop
cmps
pop
ds
jo
adc
daa
adc
fwait
push
pop
xchg
fwait
cmp
and
pop
fwait
jae
dec
jecxz
fwait
xor
sbb
jmp
pop
dec
inc
sbb
cmps
sbb
bound
fwait
ins
and
sbb
cmps
sbb
hlt
jae
inc
(bad)
and
jae
adc
xchg
pop
cmps
pop
mov
jae
dec
test
daa
div
mov
dec
dec
test
daa
test
daa
pop
and
outs
dec
dec
test
daa
pusha
setnp
dec
repnz
neg
pop
pop
fwait
je
dec
repnz
test
pop
int3
and
dec
gs
xchg
and
jecxz
pop
ja
lock
loopne
bound
and
pop
daa
pop
imul
sbb
retf
sub
dec
div
loopne
jecxz
and
pop
pop
shr
call
call
push
out
loopne
scas
pop
pop
daa
enter
daa
xchg
call
(bad)
pushf
sub
and
pop
pop
and
retf
dec
xor
dec
into
dec
repnz
cmps
fsubr
test
pop
pop
dec
pop
sbb
cmps
dec
psllw
daa
imul
lahf
daa
pop
jne
ja
cmovs
loopne
iret
out
sub
fist
pop
cmps
cmps
adc
daa
pop
lahf
sbb
jecxz
pop
or
es
imul
loopne
dec
xchg
es
cmps
scas
call
lahf
js
cmps
loopne
neg
sbb
lods
call
movs
fstp
sub
or
pop
fsub
xchg
xor
pop
jecxz
fsub
call
sti
in
fsub
call
lahf
mov
cmps
push
adc
dec
pop
dec
dec
aam
loopne
movs
fist
dec
xor
loopne
out
dec
int3
daa
dec
idiv
loopne
and
push
out
popa
into
test
fs
daa
imul
mov
pushf
fbld
iret
test
fld
daa
pop
div
and
adc
shl
xchg
call
sbb
and
loopne
and
es
popa
into
jne
cmps
daa
xchg
call
sbb
iret
int3
out
fcomp
in
(bad)
pushf
cmp
std
retf
sub
dec
test
aas
pop
cmps
stos
call
mov
pop
cmps
dec
pop
dec
sub
dec
loopne
iret
mov
push
movs
daa
pop
ja
leave
pop
pop
dec
scas
daa
pop
cmps
dec
pop
dec
into
sbb
pop
cmps
fsubr
and
pop
pop
dec
aam
pop
cmps
cmps
mov
pop
rol
xchg
call
sbb
iret
push
in
pop
fcomp
cmps
daa
call
in
fcom
pop
cmps
dec
psllw
daa
mul
daa
pop
jne
ja
cmovs
loopne
iret
sub
cmps
daa
idiv
sbb
jecxz
pop
daa
imul
mov
pushf
fbld
enter
jecxz
sahf
dec
add
cmps
into
popa
push
cmps
daa
ja
dec
gs
not
pop
pop
int3
daa
dec
ja
leave
pop
pop
pop
adc
lock
daa
pop
test
pop
pop
das
fbstp
out
loopne
push
dec
gs
div
pop
int3
daa
dec
ja
retf
pop
adc
aam
daa
pop
sahf
dec
adc
pop
cmps
into
sub
cmps
daa
ja
dec
gs
test
daa
dec
ja
retf
pop
adc
mov
dec
arpl
into
or
cmovs
imul
pop
pop
int3
daa
dec
ja
leave
pop
pop
pop
adc
pushf
xchg
daa
pop
cmps
push
pop
pop
pop
push
rcl
das
loopne
cli
cmps
daa
pop
xchg
jle
fild
test
in
xchg
call
stos
cmps
daa
pushf
fld
daa
call
in
fcom
in
fmul
xchg
adc
pop
int3
daa
dec
xchg
xor
in
pop
jne
sub
push
sub
cmps
into
test
cmps
daa
ja
dec
gs
div
dec
ja
retf
pop
adc
adc
daa
pop
sahf
dec
jns
pop
cmps
int3
xchg
and
jecxz
pop
movs
fistp
div
dec
fsub
pushf
bound
sahf
call
dec
jns
mov
out
add
xchg
pop
pop
dec
jmp
into
push
repnz
cmps
fsubr
pusha
adc
ja
dec
gs
not
pop
pop
int3
daa
dec
ja
retf
pop
adc
mov
daa
pop
sahf
push
(bad)
jge
cmps
int3
push
ja
retf
dec
mov
pop
cmps
dec
pop
dec
into
and
pop
cmps
fsubr
sub
pop
pop
das
fild
out
loopne
and
clc
jl
fdiv
scas
cli
dec
div
sbb
adc
daa
call
xchg
popa
fsubr
int3
daa
jne
dec
dec
sub
cmps
scas
fst
jecxz
xchg
fsubr
out
add
pusha
adc
pop
das
in
div
adc
pop
das
push
sbb
fistp
out
loopne
inc
std
out
fmul
ret
(bad)
and
dec
mov
daa
loopne
add
scas
out
pop
scas
fdivr
mov
pop
pop
das
fucomip
clc
das
mov
xchg
fsub
loopne
sbb
gs
test
fndisi(8087
pop
fdiv
dec
gs
dec
dec
fisubr
cmps
scas
fcomp
cmps
dec
shl
in
loopne
(bad)
fchs
loopne
ret
cmps
scas
call
retf
pop
pop
pop
xchg
fndisi(8087
pop
fdiv
rcl
out
loope
pop
les
push
fcomip
bound
pop
pop
daa
rcr
pop
int3
and
iret
loope
fcomp
call
pop
pop
into
mov
pop
cmps
fsubr
dec
dec
sub
cs
scas
fsubr
jge
push
(bad)
sar
xchg
call
stos
iret
pop
fsub
loopne
jmp
loopne
fild
int3
dec
xchg
and
loope
pop
ja
stos
jbe
loopne
pop
mov
loope
fcom
(bad)
sbb
out
fist
loopne
icebp
loope
pop
stos
call
xchg
jmp
pop
fcom
test
icebp
loope
pop
ja
ja
retf
pop
pop
lock
dec
sub
scas
out
pop
scas
fdiv
aaa
fsubr
mul
fild
out
loopne
stos
(bad)
fchs
loopne
shr
call
inc
(bad)
gs
cli
push
sub
cmps
daa
dec
dec
icebp
lods
bound
sbb
aaa
cmp
scas
fldcw
jge
jmp
pushf
ret
fistp
jne
iret
sub
sahf
dec
mov
cmps
movs
and
test
daa
xchg
pop
pop
ja
push
cmps
daa
push
(bad)
cs
bound
push
pop
cmps
push
or
xor
daa
pop
xchg
push
push
out
xchg
pusha
dec
pop
xchg
jecxz
dec
jne
dec
pop
jne
fsubr
dec
inc
sub
cmps
fist
and
(bad)
jne
stos
pop
jecxz
dec
pop
jne
dec
pop
loopne
aaa
neg
pop
xchg
push
push
out
xchg
pusha
movs
(bad)
xchg
cmps
daa
pop
cs
jne
sub
dec
into
daa
pop
pop
cmps
stos
call
cld
imul
pusha
loopne
int3
push
xchg
loope
xchg
call
out
pop
fdiv
or
daa
pop
xchg
push
sar
xchg
and
pusha
loopne
scas
fst
pop
ja
call
xlat
sub
push
jecxz
and
mov
sub
xor
cmps
scas
out
push
push
scas
fldcw
jge
or
adc
add
daa
pop
hlt
lods
cmps
icebp
cld
mov
fchs
loopne
jns
(bad)
and
dec
das
ret
stos
je
dec
sub
aaa
mov
xchg
pop
push
out
popa
jno
dec
xchg
daa
pop
es
sbb
data16
and
and
xchg
jecxz
xchg
out
fist
pop
pop
push
adc
or
pop
cmps
movs
fist
xchg
cmc
es
test
fist
add
mov
clc
xchg
jecxz
xchg
fsubr
jl
fdiv
scas
cli
sahf
dec
sub
pop
cmps
je
dec
sub
pop
cmps
gs
fbstp
out
loopne
call
lock
retf
sbb
daa
inc
push
push
push
loopne
iret
jae
cmps
daa
dec
mul
cmp
cmps
daa
sahf
call
sub
dec
jne
jno
js
addr16
jne
dec
pop
imul
pop
test
das
cmps
daa
xchg
out
fist
pop
mov
daa
jecxz
pop
ja
sub
xor
cmps
scas
call
fsubr
scas
out
and
not
daa
pop
jne
stos
call
and
dec
gs
loopne
das
test
adc
pop
push
rcl
das
loopne
neg
and
pop
call
fcomip
aas
es
pop
sub
fcomp
fwait
mov
daa
xchg
out
rcl
das
loopne
(bad)
xchg
and
jecxz
pop
ja
or
daa
pop
pushf
bound
push
(bad)
adc
out
pop
jne
iret
jmp
cmps
daa
xchg
fdiv
iret
cli
in
fadd
pop
es
popa
je
in
xchg
daa
pop
jne
ja
loopne
iret
out
xor
daa
pop
xchg
pop
push
out
popa
dec
sbb
retf
pop
pop
sub
dec
div
fchs
loopne
jecxz
push
data16
xchg
xor
jecxz
pop
jne
lods
xchg
daa
pop
pushf
pop
and
xchg
imul
pop
and
fcomp
xchg
pop
push
out
popa
stos
call
mov
call
and
pop
adc
pop
and
fnsetpm(287
loopne
daa
push
into
push
repz
cmps
iret
jae
cmps
daa
jne
test
in
loopne
dec
inc
xor
cmps
cmps
lock
daa
pop
test
pop
pop
daa
enter
daa
loopne
pop
fsub
loopne
call
push
(bad)
sub
pop
das
mov
in
fdiv
adc
xor
in
xchg
mov
loopne
pop
xchg
jmp
pop
fsub
stos
pop
fsub
loopne
inc
repz
cmps
stos
mov
pop
fsub
dec
dec
dec
sub
cmps
movs
fisttp
sub
dec
not
pop
pop
int3
daa
dec
xchg
xor
jecxz
pop
jne
sub
xor
cmps
int3
cs
pop
es
popa
stos
call
imul
pop
cmps
dec
pop
xchg
xor
in
pop
jne
xchg
xor
jecxz
pop
jne
imul
sbb
pop
dec
and
loopne
js
inc
outs
in
pop
repz
cli
pushf
dec
pop
dec
dec
icebp
cwde
mov
(bad)
aad
pop
call
das
loopne
out
loopne
xlat
cmps
daa
pop
jne
dec
setns
daa
div
sub
call
das
loopne
sbb
es
dec
push
xor
cmps
scas
fcomp
push
out
popa
sub
sbb
inc
xchg
dec
dec
inc
fcomp
and
pop
repz
lea
pop
push
push
or
xor
cmps
scas
out
inc
scas
pop
ret
das
loopne
fisttp
pop
pop
cmps
dec
sbb
xor
cmps
scas
out
pop
scas
fcomp
jecxz
nop
rcl
jecxz
dec
xchg
jecxz
dec
dec
dec
inc
xor
cmps
scas
fstp
daa
pop
pop
push
inc
jecxz
jecxz
pushf
and
daa
imul
(bad)
adc
jecxz
push
push
dec
dec
outs
xor
cmps
int3
inc
xchg
pop
sar
xchg
jecxz
xchg
fcomp
xor
pop
cmps
sar
das
(bad)
retf
xchg
xchg
and
cdq
out
xchg
out
rcl
jecxz
dec
jne
lahf
or
cmps
daa
call
shr
and
mov
pop
dec
into
xor
jne
iret
fwait
xor
or
pop
das
fucomip
clc
das
(bad)
xlat
xchg
popa
into
dec
loopne
fadd
std
out
fstp
cmps
jb
cli
div
mov
daa
enter
daa
xchg
pop
pop
ja
pop
pop
push
pop
ja
mov
pop
int3
daa
jne
dec
data16
cmps
ja
push
mov
pop
cmps
sbb
pop
push
rcl
outs
in
xchg
inc
movs
rep
cmc
jno
xchg
shr
mov
sahf
popa
dec
pop
pop
cmps
scas
out
pop
scas
fcomp
cmps
loopne
scas
stos
daa
pop
pop
popa
bound
pushf
ret
xchg
pop
jne
stos
pop
scas
imul
out
pushf
sub
ror
pop
pop
das
fbstp
out
loopne
pop
sub
dec
das
xlat
pushf
fild
ja
inc
mov
pop
jne
stos
pop
scas
imul
out
pushf
data16
dec
mul
or
pop
int3
arpl
sub
dec
dec
out
pop
cmps
movs
fist
daa
loopne
push
cmps
daa
fcomp
arpl
pop
cmps
lods
pop
mov
(bad)
out
jecxz
xchg
pop
pop
scas
out
inc
scas
pop
(bad)
das
loopne
pop
or
neg
cmps
daa
pop
jns
(bad)
pop
mov
stos
pop
mov
cmps
dec
aas
jne
dec
pop
jne
movs
and
sub
pop
sbb
in
retf
pop
pop
dec
and
pop
cmc
dec
pop
test
imul
bound
lock
pop
pop
push
xchg
nop
or
pop
pop
push
mov
mov
pop
pop
daa
enter
daa
loopne
or
aas
xor
iret
pop
xor
daa
push
xchg
out
push
daa
enter
daa
cs
js
inc
outs
in
xchg
inc
jbe
dec
sub
jle
xor
fbstp
out
loopne
imul
iret
ret
xor
daa
loopne
mov
retf
xor
daa
sahf
fadd
jle
pop
int3
es
mov
daa
loopne
mov
daa
jne
int3
daa
dec
neg
pop
pop
and
sar
xchg
jecxz
xchg
fdivr
jns
fdiv
scas
cli
dec
sbb
out
pop
scas
fsub
shl
test
ja
push
fsubr
pop
push
adc
shr
imul
cmps
daa
pop
pushf
bound
inc
inc
gs
cli
icebp
cwde
shl
xchg
out
fist
sbb
bound
dec
pop
push
pavgb
sub
push
iret
sbb
cmps
daa
pushf
fstp
scas
cli
pushf
dec
sub
adc
pop
das
fbstp
out
loopne
fdivr
pop
pop
sub
dec
sub
dec
int3
daa
ja
cmps
and
pop
jne
fsubr
pop
push
pop
div
or
pop
scas
out
sbb
push
pop
loopne
xor
push
dec
pop
loopne
aaa
loopne
pop
iret
ja
cmps
daa
push
(bad)
sub
push
iret
daa
xor
xor
call
das
loopne
push
iret
aas
xor
js
fdiv
scas
cli
pushf
dec
xor
sub
aas
jns
jecxz
mov
sahf
popa
adc
pop
cmps
scas
out
pop
scas
fcomp
mov
rcl
jecxz
dec
ja
daa
sbb
push
fsubr
dec
(bad)
xor
cmps
fild
push
fcomip
lahf
stos
pop
pop
div
pop
int3
daa
loopne
mov
push
dec
div
pop
cmps
fild
fsubr
dec
mov
pop
cmps
push
fcomip
mov
push
dec
xchg
pop
cmps
scas
out
inc
scas
pop
repz
loopne
test
aas
inc
inc
outs
in
xchg
inc
jbe
dec
icebp
cwde
xchg
ds
sahf
fcom
idiv
in
pop
imul
dec
mul
pop
das
(bad)
out
pop
push
out
popa
xchg
stc
in
es
pop
push
sub
data16
push
daa
loopne
pop
cmps
daa
jne
into
loopne
pop
cmps
dec
pop
jne
dec
pop
ja
retf
pop
pop
dec
push
xor
cmps
test
stc
in
xchg
out
ficom
sbb
adc
stc
in
idiv
pop
xchg
jecxz
cmps
add
scas
pop
out
loopne
pop
pop
js
(bad)
gs
mov
test
pop
pop
sub
xor
in
xchg
dec
scas
in
xchg
inc
je
dec
sub
push
sub
xlat
ss
das
loope
bound
sbb
push
scas
out
ss
scas
fst
in
xchg
jl
fisttp
push
maskmovq
or
pop
and
mov
out
jecxz
xchg
dec
mov
sbb
sti
daa
pop
xchg
pop
movs
fistp
call
adc
sbb
push
scas
out
sbb
mov
pop
pop
daa
sar
cmp
addr16
sub
call
stos
ja
int3
mov
pop
xchg
popa
cmps
jmp
push
pop
push
add
jle
pop
adc
fsubr
dec
out
cmp
cmps
lods
pop
adc
xlat
ss
das
loope
(bad)
jns
inc
gs
cli
and
jo
inc
scas
loopne
out
js
and
push
xor
pop
cmps
sar
das
(bad)
dec
neg
or
out
jecxz
xchg
pop
dec
scas
pop
sti
push
inc
not
push
lods
(bad)
out
rcr
bound
pop
cmps
scas
pop
jmp
shl
or
xlat
outs
push
push
adc
pushf
push
push
xchg
sbb
push
cli
sahf
rcl
cdq
and
fstp
pop
dec
outs
adc
call
pop
cmps
mov
pushf
fld
jno
out
cmp
push
repz
std
addr16
xchg
repz
xchg
enter
dec
sub
or
pop
cmps
jo
push
mov
pop
pushf
bound
jns
jecxz
adc
pop
push
mov
jecxz
inc
inc
std
out
fmul
ret
cmps
and
pop
pop
cmc
jno
mov
das
xlat
push
out
das
loope
mov
cmps
movs
mov
pop
das
xlat
call
loopne
fcom
loopne
fmul
shr
test
bound
xchg
fsubr
out
enter
pushf
sbb
loopne
pop
daa
push
cmc
iret
jnp
cmps
daa
fisttp
sbb
cmps
fsubr
dec
jp
pop
cmps
scas
call
daa
pop
pop
push
and
pop
fcom
loopne
call
jp
loop
xchg
lods
mov
pop
(bad)
xchg
sbb
dec
jne
iret
getsec
cmps
daa
xchg
call
pop
pop
cmps
sar
xchg
and
loopne
pop
scas
fchs
shr
ja
cmps
daa
pop
div
add
pop
daa
loope
bound
scas
call
movs
xlat
loopne
cmps
and
cmps
push
out
popa
dec
pop
xchg
xor
loopne
pop
es
dec
xor
pop
movs
fist
into
add
pop
cmps
fsubr
dec
push
pop
cmps
movs
fist
pop
push
pavgb
add
dec
gs
ja
int3
pop
pop
pop
xchg
out
pop
fdiv
adc
daa
pop
pushf
bound
ja
dec
gs
loopne
xor
test
in
dec
test
or
sub
pop
cmps
loopne
rcr
loopne
cmps
daa
pop
test
pop
daa
leave
push
data16
daa
fstp
cmps
movs
mov
pop
dec
push
xchg
call
xlat
loopne
fsub
pop
fsub
loopne
push
sahf
icebp
jmp
loopne
fcomp
outs
fsub
loopne
xchg
and
fbld
xchg
pushf
ffree
jne
out
cmp
push
repz
std
addr16
xchg
xor
loopne
pop
scas
enter
dec
xchg
sbb
pop
loopne
jo
xor
pop
xchg
sbb
pop
loopne
jo
push
mov
pop
pushf
bound
loopne
outs
fsub
loopne
call
cmps
daa
adc
pop
xchg
jmp
pop
fsub
push
stos
call
mov
dec
ja
int3
pop
pop
test
xor
mov
daa
call
loopne
fcom
loopne
fcomp
call
jecxz
pop
fsub
call
adc
pop
fcom
loopne
sbb
pop
cmps
lods
pop
add
mov
sahf
fst
and
pop
cmps
cmps
mov
pop
test
daa
sahf
fld1
add
add
cmps
out
pop
pop
lahf
mov
adc
mov
xchg
call
pop
lahf
sahf
dec
imul
push
outs
rcl
movs
daa
imul
or
int3
pop
pop
sub
dec
test
jecxz
sahf
dec
push
dec
pop
cmps
stos
xchg
out
pop
(bad)
pushf
outs
fcomp
call
jns
call
cmps
daa
loopne
imul
test
dec
fsub
loopne
mov
loopne
dec
repnz
cmps
cmps
fld
test
xlat
loopne
pop
ja
adc
loopne
bound
xchg
call
xchg
call
call
xchg
and
loopne
pop
fsubr
loopne
aas
loopne
push
fsub
loopne
mov
dec
ja
int3
pop
pop
test
aaa
cmps
daa
pushf
fstp
scas
fchs
adc
loopne
pop
iret
inc
cmp
fsub
loopne
mov
dec
loopne
fneni(8087
loope
je
rcr
bound
xchg
call
adc
into
hlt
cmc
pop
cmps
fsubr
test
jecxz
xchg
push
push
out
xchg
pusha
dec
pop
jne
dec
sbb
ja
daa
pop
pop
pop
push
pop
neg
sti
loopne
fsub
stos
pop
fsub
loopne
sar
pop
cmps
dec
pop
xchg
sbb
loopne
pop
jo
loopne
fnstsw
loope
fsubr
imul
pop
pop
das
xlat
ss
das
loope
stos
inc
fsub
loopne
sar
cmps
fsubr
not
add
pop
das
xlat
push
out
das
loope
test
repz
fdiv
sbb
rol
cmps
daa
inc
inc
std
out
fmul
ret
scas
es
pop
icebp
cwde
ret
sbb
(bad)
fist
pop
dec
pusha
xchg
out
rcl
das
loopne
test
sub
pop
pop
sub
dec
mul
pop
pop
int3
daa
ja
dec
gs
xchg
and
loope
pop
ja
push
cmps
daa
lahf
mul
jecxz
sahf
push
stos
jo
cmps
cmps
pop
loopne
lods
pop
loopne
and
int3
daa
ja
dec
gs
ja
int
pop
into
es
pop
es
(bad)
call
push
gs
ja
into
pop
pop
into
leave
neg
dec
sbb
cmps
cmps
test
pop
dec
pop
pop
stc
out
fmul
ret
cmp
dec
mov
das
fbstp
out
loopne
mov
cmps
scas
out
pop
scas
fcom
sub
xchg
and
pop
pop
sub
daa
pop
xchg
and
push
pop
cmps
daa
call
loop
fcom
pop
scas
scas
fstp
add
pop
sub
and
mov
out
rcl
das
loopne
not
add
pop
das
mov
loopne
push
(bad)
loopne
inc
cmp
cmps
lods
dec
pop
sub
fcom
dec
movs
es
xchg
xor
neg
daa
pop
xchg
and
loopne
fsubr
not
mov
loopne
ds
loopne
add
pop
cmps
lods
dec
pop
sub
fcom
xchg
retf
loopne
jae
push
sub
push
in
mov
popa
jmp
in
idiv
mov
loopne
scas
out
pop
scas
fdiv
dec
pop
xchg
and
not
daa
pop
test
daa
ja
cmps
daa
pop
xchg
and
ja
dec
gs
ja
into
pop
pop
into
and
or
fild
jno
mov
sbb
xchg
out
fist
loopne
dec
sbb
cmps
daa
xchg
call
call
out
aas
pop
cmps
fsubr
loopne
mov
loopne
fsubr
loopne
scas
loop
pop
fsubr
loopne
xchg
loopne
jno
call
push
pop
fcomp
pop
fsub
push
push
or
dec
push
cmp
cs
scas
fsubr
data16
sbb
dec
gs
xchg
and
loope
pop
ja
test
es
popa
stos
call
mov
dec
mul
pop
pop
dec
ret
pop
scas
call
(bad)
pop
cmps
dec
pop
jne
stos
call
sub
pop
cmps
movs
fild
daa
loopne
dec
cmps
daa
fcomp
loop
pop
pop
popa
mov
push
pop
cmps
daa
jns
and
loope
pop
daa
pop
sahf
push
jl
pop
cmps
movs
mov
pop
sar
jns
and
loope
pop
es
xchg
pop
push
out
popa
stos
call
das
call
call
call
daa
jne
int3
pop
jne
int3
daa
jne
sub
dec
jne
iret
cmp
test
daa
loopne
push
(bad)
loopne
pop
aas
pop
cmps
lahf
cmp
das
mov
xchg
fcomp
mov
pop
fdiv
dec
gs
ja
into
pop
pop
sub
dec
mul
add
pop
and
dec
loop
pop
daa
hlt
xor
loopne
and
fchs
loopne
dec
arpl
in
neg
daa
pop
xchg
gs
dec
neg
daa
imul
daa
pop
lahf
and
pop
es
call
ins
xlat
scas
cld
imul
addr16
cmps
iret
inc
cmps
daa
sahf
call
and
fcomp
imul
and
es
pop
sub
dec
dec
dec
repnz
cmps
dec
push
ja
into
pop
pop
sub
dec
imul
adc
pop
fcomp
pop
ror
mov
cmps
scas
out
pop
scas
fdiv
mov
fsub
pop
das
fistp
out
loopne
adc
fcomp
sahf
dec
dec
ja
cmps
stos
call
push
ds
cmps
jno
pop
xchg
pop
xchg
pop
es
popa
dec
pop
loopne
and
pop
iret
sar
cmps
daa
loopne
add
loopne
dec
jle
pop
cmps
lods
call
scas
out
pop
scas
fadd
jl
frstor
movs
repz
cmc
jno
xchg
sti
xor
xchg
pop
sar
xchg
jecxz
xchg
fsub
push
pop
not
pop
das
in
xchg
repz
push
iret
sti
aas
cmps
daa
xchg
ffree
scas
dec
jecxz
push
maskmovq
div
pop
pop
das
in
xchg
repz
pop
dec
scas
fmul
aas
pop
cmps
scas
fnstsw
jb
adc
(bad)
adc
jb
push
jbe
test
push
es
adc
jb
xchg
loop
aaa
dec
int3
daa
neg
pusha
push
fistp
out
pop
dec
scas
sbb
cmps
dec
sbb
push
addr16
idiv
add
adc
shr
xchg
out
and
push
add
cmps
scas
out
pop
scas
fsub
shr
adc
mov
jp
pop
cmps
fsubr
test
arpl
sbb
arpl
sbb
cmps
daa
dec
adc
(bad)
xchg
loop
sbb
adc
push
jbe
test
push
stos
pop
shld
cmp
fisttp
cmps
jno
ss
addr16
jne
dec
pop
idiv
xchg
out
fist
mul
pop
sub
dec
lock
fild
cmps
daa
dec
imul
fistp
out
loopne
pop
pop
js
inc
outs
in
xchg
inc
lahf
push
add
daa
pop
dec
lock
inc
scas
cwde
call
out
fist
fsub
mov
add
rcl
das
loopne
call
call
dec
neg
iret
out
cmps
daa
xchg
fldcw
daa
pop
pop
das
fbstp
out
loopne
loopne
jecxz
loopne
iret
jae
cmps
daa
pushf
fld
fsubr
loopne
sub
jl
daa
pop
cs
jns
loopne
jge
daa
fcomp
out
pop
pop
daa
shl
call
call
iret
mov
(bad)
or
jecxz
loopne
iret
pop
cmps
daa
pushf
fld
fsubr
loopne
sub
adc
push
out
popa
push
fistp
sub
mov
out
sbb
enter
daa
inc
inc
std
out
fmul
ret
xchg
pop
mul
pop
pop
cmc
jno
xchg
shr
mov
xchg
pop
es
popa
push
out
popa
jno
sbb
cmp
pop
push
adc
pop
cmps
sar
xchg
and
shl
scas
fcom
out
and
cmps
push
out
fs
pop
xchg
push
es
dec
dec
jmp
loopne
movs
fist
into
add
pop
cmps
jno
sbb
das
loopne
stos
fsubr
into
jecxz
pop
cmps
dec
ret
daa
xchg
call
fstp
cmps
daa
pushf
(bad)
scas
fdiv
dec
pop
jne
dec
pop
jne
dec
pop
pop
cmps
addr16
not
cmp
pop
das
in
fcomp
mov
dec
test
clc
loopne
lock
stos
cmps
(bad)
loopne
lock
adc
daa
pop
dec
dec
sbb
pop
cmps
cmps
lock
pop
cmps
cmps
daa
pop
pop
dec
xor
xchg
call
jmp
pop
fcom
(bad)
gs
cli
daa
retf
lahf
sbb
cwde
cs
jle
call
and
fcomp
xchg
pop
push
out
popa
push
jmp
fcomp
pop
cmc
iret
cmps
add
stos
dec
sbb
pop
fsub
xchg
pop
push
out
popa
iret
jecxz
cmps
daa
dec
imul
call
cmps
daa
call
in
fcom
pop
cmps
iret
xor
cmps
daa
xchg
call
push
out
loopne
bswap
daa
xchg
call
mov
cmps
daa
ja
cmps
daa
pop
xchg
and
ja
dec
gs
ja
into
pop
pop
into
and
mov
fild
out
pop
cmps
dec
sbb
cmps
daa
xchg
call
call
push
add
ss
scas
fsub
adc
xchg
call
ds
fcomp
and
mov
call
outs
add
inc
pop
pop
sub
dec
xchg
and
loope
pop
ja
dec
mov
xlat
loopne
das
mov
sahf
call
int3
arpl
sub
dec
test
xchg
pop
push
out
popa
loopne
cmps
pop
fsub
pop
cmps
daa
pop
fsub
ret
loope
pop
es
pop
cmps
movs
mov
pop
rol
jns
and
loope
pop
es
cmps
cdq
push
pop
pop
push
rcl
das
loopne
call
cld
out
pop
fadd
and
xchg
call
pop
jne
dec
aas
jne
dec
pop
jne
stos
call
daa
mul
mov
sub
loopne
(bad)
loop
pop
iret
dec
add
xchg
fist
loop
fdiv
dec
gs
ja
into
pop
pop
sub
dec
test
jecxz
fldenv
movs
in
pop
daa
hlt
xor
shl
call
arpl
in
div
daa
pop
xchg
pusha
fild
dec
neg
daa
test
in
pop
es
call
ins
xlat
scas
rcl
fwait
test
daa
out
pop
cmps
iret
daa
add
daa
ja
cmps
daa
pop
xchg
and
dec
imul
pop
pop
daa
loopne
jb
daa
jne
into
push
neg
stos
call
fidiv
pop
movs
fist
fsub
pop
cmps
sub
xchg
and
dec
div
fsub
loopne
jecxz
push
data16
jne
fsubr
xchg
and
div
mov
mov
loopne
xor
loopne
dec
pop
fsub
pop
scas
fst
popa
fsubr
imul
cmp
pop
into
cmc
neg
iret
add
daa
dec
ja
iret
pop
pop
lock
scas
add
fild
dec
int
in
mul
mov
mov
hlt
and
push
je
stos
xor
loopne
dec
xchg
fucom
pop
movs
fist
dec
cmp
and
fsubr
div
in
loopne
jecxz
xchg
pop
push
out
popa
jno
lods
mov
es
popa
loopne
sbb
push
cmps
daa
pop
xchg
and
neg
mov
push
out
popa
dec
pop
loopne
and
pop
iret
aas
add
xchg
fist
loop
fdiv
mov
and
inc
inc
outs
in
pop
repz
cli
pushf
dec
xor
lods
inc
pop
sbb
out
pop
scas
fsubr
inc
scas
pop
out
loopne
imul
cmp
jmp
shr
mul
mov
rcl
jne
iret
add
cmps
daa
xchg
fprem1
jno
sub
push
add
adc
jae
push
hlt
iret
cmp
cmps
daa
xchg
out
fist
or
ja
pop
lock
sub
int3
daa
not
daa
pop
xchg
pusha
dec
loopne
dec
sahf
push
pop
cmps
lahf
lods
cmp
(bad)
out
xchg
popa
stos
pop
jecxz
jno
mov
daa
pop
dec
dec
fimul
pop
cmps
lods
pop
jecxz
sub
call
das
loopne
inc
std
out
fmul
ret
cmc
jno
mov
daa
shl
cmps
daa
xchg
pop
stos
movs
out
ror
out
push
add
fisttp
push
fsubr
dec
out
add
call
das
loopne
data16
daa
test
xchg
loopne
iret
(bad)
or
daa
lahf
ins
(bad)
dec
(bad)
in
imul
pop
ja
iret
pop
pop
test
or
scas
out
pop
scas
fdiv
dec
xor
pop
int3
es
loopne
fbstp
cmp
ja
mov
push
pop
movs
fist
dec
cmp
push
fsubr
pop
push
adc
shr
test
lahf
nop
ins
cmps
daa
call
xchg
popa
js
inc
outs
in
pop
repz
cli
dec
cmc
jno
xchg
shr
mov
sahf
push
inc
and
cmps
scas
in
sahf
push
std
adc
cmps
jno
enter
xchg
repnz
xchg
repz
jl
loopne
movs
fist
scas
out
or
daa
dec
test
div
mov
pop
sahf
popa
outs
cmp
inc
outs
in
pop
repz
cli
pushf
dec
pop
dec
mov
daa
shl
jl
daa
xchg
pop
scas
test
(bad)
out
test
mov
iret
jg
cmps
daa
cmps
dec
call
scas
pop
jmp
loopne
pop
inc
ja
dec
mov
dec
pop
jne
stos
pop
sti
test
push
cmps
daa
push
(bad)
call
fmul
in
pop
repz
cli
cmps
into
cmp
pop
dec
push
or
cmps
je
dec
sbb
mov
scas
out
push
push
scas
fstp
cmps
cmps
fld
daa
pop
sahf
dec
aad
pop
cmps
lahf
rcr
das
mov
xchg
fldenv
daa
pop
into
xor
mov
pop
sahf
push
outs
cmp
cmps
iret
push
or
cmp
call
daa
xchg
call
sbb
cmps
iret
cmps
push
cmps
daa
pushf
fld
fsub
pop
shl
fisttp
sbb
cmps
iret
sbb
popw
xchg
and
call
lods
mov
pop
cmps
in
jl
pop
push
rcl
das
loope
xchg
push
shl
loopne
out
loopne
sbb
pop
rcr
xchg
fsub
sbb
call
cmps
dec
pop
ja
iret
pop
pop
into
mov
pop
cmps
stos
call
xchg
sbb
pop
jmp
mov
sub
pop
test
mov
jmp
dec
gs
xchg
and
out
pop
ja
nop
mov
push
out
xchg
pusha
dec
pop
xchg
and
out
pop
ja
inc
sbb
loopne
bound
xchg
call
adc
xchg
cld
sahf
(bad)
jecxz
pop
cmps
cmps
mov
pop
test
daa
lahf
mov
test
call
dec
ret
daa
xchg
call
pop
jnp
fcomp
das
call
stos
adc
pop
test
fsub
and
pop
pop
test
daa
adc
pop
loope
sbb
loopne
cmps
stos
adc
outs
fcomp
call
pushf
popa
and
(bad)
xchg
out
xchg
mov
icebp
iret
aaa
jns
fcomp
test
daa
jns
and
test
cmp
loopne
sub
loopne
sub
dec
div
xor
pop
daa
loope
pop
cmps
daa
xchg
call
call
push
or
cmps
int3
imul
sbb
pop
pop
es
and
pop
cmps
loope
loopne
fsub
pop
daa
leave
rcr
daa
xchg
call
mov
in
xchg
call
jnp
cmps
daa
pushf
fld
fsub
pop
ror
idiv
daa
pop
movs
gs
jge
scas
fsubrp
dec
out
sbb
add
ins
scas
iret
inc
das
loopne
and
(bad)
loopne
sub
sahf
pusha
sbb
out
sub
pop
sbb
mov
(bad)
loopne
ja
enter
cmps
prefetch
pop
push
rcl
das
loope
call
xchg
mul
daa
xchg
call
iret
or
gs
xchg
and
out
pop
ja
cld
mov
pop
pushf
bound
hlt
pop
into
daa
sbb
cmps
stos
call
test
scas
out
cs
scas
fst
pop
ja
ins
dec
gs
xchg
and
loope
pop
ja
xchg
mov
pop
ja
iret
pop
pop
sub
dec
idiv
xor
pop
and
fndisi(8087
loopne
ja
xor
daa
pop
cmps
and
pop
push
rcl
das
loope
call
sbb
mov
dec
ja
iret
pop
pop
sub
dec
neg
pcmpeqw
fsub
dec
dec
mov
pop
cmps
cmps
fst
dec
dec
mul
daa
xchg
call
cmp
fcomp
and
pop
cmps
stos
call
and
add
pop
pop
jmp
loopne
pop
sub
cdq
jmp
pop
pop
and
daa
pop
into
xor
mov
pop
loopne
(bad)
loopne
dec
jmp
dec
gs
xchg
and
out
pop
ja
test
daa
pop
pushf
bound
sahf
jmp
into
xlat
lods
pop
cmps
stos
call
outs
push
pop
cmps
stos
call
or
pop
cmps
scas
call
lods
call
and
loope
fdiv
push
lods
call
and
loope
fcomp
hlt
test
fsub
pushf
sbb
push
out
fcom
loopne
dec
daa
mul
daa
xchg
call
and
cmps
daa
pushf
(bad)
scas
fst
pop
ja
fdiv
mov
loopne
stos
mov
dec
dec
xchg
or
cmps
lods
mov
xchg
fisub
cmovs
not
pop
xchg
and
out
pop
cmps
icebp
pop
mov
pop
xchg
and
out
pop
ja
stos
push
fnstsw
loopne
mov
pop
cmps
stos
call
push
or
cmps
stos
mov
dec
sub
fcom
test
mov
dec
jne
fsubr
ja
mov
int3
daa
jne
dec
jle
pop
cmps
ja
js
daa
pop
xchg
push
push
out
xchg
pusha
stos
call
fsubr
neg
loopne
and
fist
and
jecxz
pop
fsubr
mul
add
inc
std
out
fstp
cmps
jb
cli
div
jmp
push
push
inc
pop
cmps
movs
sbb
ja
mov
in
loopne
xor
pop
pop
daa
enter
daa
xchg
pop
pop
ja
pop
int3
daa
ja
or
jne
dec
pop
div
pop
pop
test
(bad)
daa
inc
(bad)
fs
pop
dec
das
ret
loop
pop
pop
lock
ds
pop
js
cdq
adc
xchg
call
push
out
loopne
sbb
jmp
loopne
ja
sub
pop
pop
dec
stos
nop
scas
fdiv
dec
lahf
pop
cmps
daa
jne
int3
daa
jne
int3
daa
xchg
call
xchg
push
cmps
daa
xchg
fldcw
(bad)
out
int3
daa
jne
lock
pop
(bad)
daa
xchg
pop
push
ja
pop
pop
ja
test
xor
pop
push
rcl
das
loopne
pop
inc
ja
pop
push
ja
xchg
test
bound
pop
cmps
stos
pop
iret
test
(bad)
daa
cmps
ror
scas
call
dec
push
xchg
jecxz
dec
xchg
jecxz
dec
imul
pushf
loopne
and
or
mov
mov
inc
xor
mov
xchg
fmul
ja
adc
ja
iret
pop
pop
into
cmp
push
pop
cmps
cmps
neg
fsub
xchg
pop
push
out
popa
dec
iret
mov
dec
gs
ja
(bad)
pop
pop
into
es
pop
es
cmp
pop
fcomp
fs
pop
dec
das
ret
mov
pop
pop
cmc
jno
mov
das
fistp
out
loopne
clc
das
mov
xchg
fmul
daa
pop
sbb
hlt
aaa
pop
pop
das
loope
call
into
xor
pop
cmps
dec
jmp
dec
gs
xchg
and
loope
pop
ja
mov
mov
das
into
cmp
out
pop
pop
and
not
loopne
das
(bad)
addr16
cmps
sub
pop
cmps
and
out
pop
fmul
cmps
pop
loopne
and
xlat
xchg
pop
cmps
es
lock
aaa
addr16
fcom
pop
pop
ja
pop
cmps
and
out
pop
fmul
jb
loopne
and
push
out
popa
jno
fsubr
mov
pop
cmps
das
into
cmp
out
pop
pop
and
sbb
(bad)
neg
dec
adc
in
ja
cmps
daa
lahf
imul
jecxz
push
push
sbb
sar
xchg
and
loope
pop
scas
fdiv
fsubr
into
mov
pop
cmps
dec
(bad)
xchg
out
ja
sub
(bad)
loopne
ja
dec
dec
fsub
pushf
bound
xchg
fldcw
dec
adc
adc
pop
ja
daa
pop
lahf
dec
das
cld
loopne
movs
fisttp
das
fucomip
clc
das
mov
xchg
fsub
daa
pop
into
xor
mov
pop
sahf
push
pop
js
cmps
js
inc
outs
in
xchg
inc
lahf
dec
cmps
daa
neg
daa
pop
dec
icebp
cdq
jmp
and
fnstcw
pop
pop
and
daa
pop
into
xor
mov
pop
sahf
dec
add
pop
cmps
loopne
daa
dec
fsub
(bad)
daa
pop
xchg
push
push
out
xchg
pusha
dec
and
push
pop
pop
dec
inc
or
pop
scas
out
fwait
das
es
pop
daa
loope
xor
daa
ja
shl
xchg
and
jmp
mov
cdq
stos
call
adc
pop
das
xlat
ss
das
loope
call
mov
cmps
daa
xchg
out
cmps
xlat
xchg
fldcw
mov
dec
test
jmp
enter
das
mov
adc
pop
jo
test
shr
loopne
jo
test
shr
loopne
jo
call
cmps
xchg
cs
xchg
xchg
ja
cmc
xchg
outs
es
pop
and
out
push
iret
dec
pop
adc
(bad)
sub
adc
sbb
adc
sbb
ja
leave
pop
pop
sub
fcom
loopne
jo
mov
icebp
iret
inc
push
cmps
daa
xchg
out
push
rcl
das
loope
call
pop
pop
sub
dec
neg
jecxz
pop
fmul
ins
sub
pop
int3
sub
loopne
jo
in
fsub
sahf
dec
(bad)
es
cmps
stos
call
mov
dec
idiv
nop
loopne
int3
daa
jne
into
neg
dec
sbb
in
xchg
call
call
dec
repnz
movs
(bad)
mov
sahf
fnstenv
pop
pop
sub
dec
imul
pop
pop
and
fcomp
imul
pop
sahf
push
cmp
cmps
push
fistp
sub
cmps
scas
out
push
push
scas
fldcw
data16
(bad)
gs
cli
daa
retf
adc
mov
cmps
add
fucomip
clc
das
mov
xchg
fmul
mov
jmp
dec
gs
xchg
and
loope
pop
ja
js
daa
pop
xchg
and
loope
pop
ja
out
adc
aam
loopne
jecxz
xchg
pop
es
popa
js
frstor
jbe
mov
daa
sar
cmps
daa
xchg
pop
pop
ja
pop
int3
daa
ja
adc
jne
dec
pop
div
pop
pop
test
adc
daa
inc
(bad)
fs
pop
dec
das
ret
sbb
repnz
out
pop
scas
fcomp
das
into
cmp
out
pop
pop
and
cmp
pop
ja
push
xor
cmps
fsubr
out
adc
mul
loopne
inc
cmps
daa
ja
adc
ja
push
add
into
out
pop
cmps
fsubr
out
adc
test
jecxz
int3
daa
jne
into
stc
mov
cmps
dec
pop
jne
iret
inc
adc
sub
pop
das
fistp
out
loopne
sbb
xlat
stos
pop
cmps
iret
fist
cmps
daa
inc
(bad)
gs
cli
daa
retf
mov
dec
icebp
pushf
inc
jp
pop
xchg
(bad)
xchg
call
xor
daa
pushf
sbb
out
pop
scas
idiv
mov
pop
loopne
mov
pop
cmps
dec
sbb
cmps
daa
xchg
call
pop
not
pop
das
call
(bad)
das
in
pop
sub
dec
xchg
and
loope
pop
ja
fsubr
fistp
movs
daa
pop
jne
fsubr
dec
mov
pop
jne
scas
fstp
fcomip
adc
daa
pop
xchg
jle
(bad)
xchg
gs
pop
xchg
and
loope
pop
ja
sbb
mov
dec
loopne
fcomip
movs
lods
daa
pop
lahf
sbb
loope
pop
or
out
xor
cs
das
in
mov
daa
pop
sahf
push
jb
pop
cmps
lods
call
(bad)
pop
push
out
nop
sub
jne
das
in
dec
pop
jne
push
iret
mov
push
dec
pop
div
loopne
call
sbb
sub
dec
xchg
jecxz
pushf
mul
fcomip
pop
lods
daa
pop
cs
int3
pop
adc
and
push
push
adc
cdq
sbb
and
adc
jecxz
pushf
mul
movs
sbb
ja
mov
in
loopne
xor
pop
pop
das
ficomp
cmps
daa
push
das
in
frstor
push
pop
pop
dec
repnz
cmps
movs
fist
das
(bad)
call
loope
fcom
das
in
adc
sbb
pop
rcr
xchg
arpl
out
loopne
sbb
pop
rcr
xchg
frstor
dec
lahf
xchg
out
test
out
loopne
sbb
pop
rcr
xchg
arpl
dec
pop
pop
sub
pushf
xlat
pop
addr16
and
in
frstor
xchg
pop
pop
dec
jp
pop
cmps
movs
fist
sub
pushf
xlat
pop
addr16
and
pop
sbb
dec
dec
adc
cmps
scas
fnstsw
xor
adc
sbb
pop
rcr
xchg
arpl
cs
pop
dec
bound
pop
cmps
scas
fnstsw
xor
adc
sbb
pop
rcr
xchg
arpl
out
loopne
sbb
pop
rcr
xchg
frstor
dec
(bad)
xchg
out
div
stos
daa
pop
pushf
bound
xchg
(bad)
push
les
loopne
mov
xchg
fsubr
sub
cmps
daa
push
sub
push
sub
pushf
xlat
pop
addr16
and
in
frstor
xchg
pop
pop
dec
mov
pop
cmps
movs
fist
sub
pushf
xlat
pop
addr16
and
pop
sbb
sub
pushf
xlat
pop
addr16
and
in
frstor
xchg
dec
pop
adc
cmps
movs
fist
daa
in
and
out
loopne
sbb
pop
rcr
xchg
arpl
sub
pop
and
out
pop
das
push
(bad)
das
in
adc
sbb
pop
rcr
xchg
arpl
sub
pop
and
out
pop
sub
pushf
xlat
pop
addr16
and
pop
sbb
daa
in
cmp
daa
dec
neg
pop
and
out
pop
pop
xchg
out
loope
fdiv
shr
daa
sub
cmps
fsubr
dec
rcr
pop
cmps
movs
sbb
ja
mov
in
loopne
xor
pop
pop
stc
jns
(bad)
gs
cli
daa
retf
repz
cdq
mov
out
(bad)
xlat
xchg
(bad)
sbb
cmps
iret
repz
ja
pop
dec
push
sbb
cmps
dec
xchg
in
jne
into
es
add
daa
xchg
call
imul
out
pop
cmps
scas
out
call
pop
fsub
xchg
pusha
iret
or
cmps
daa
loopne
jbe
loopne
dec
push
sbb
cmps
dec
push
neg
and
pop
das
xlat
call
jecxz
fcom
pop
cmps
dec
jmp
mov
push
out
xchg
pusha
iret
sbb
mul
sub
pop
into
and
pop
cmps
stos
call
adc
(bad)
out
test
dec
jmp
jb
loopne
test
dec
pop
fcomp
and
pop
cmps
movs
sbb
push
out
pop
pop
cmps
sar
mov
pop
xchg
and
in
pop
test
adc
out
pop
das
xlat
call
in
fcom
pop
cmps
popf
int3
push
les
xchg
ficom
fsubp
mov
in
xchg
enter
xchg
pop
scas
xor
fsub
xchg
push
sar
xchg
and
in
pop
scas
(bad)
and
jecxz
pop
es
das
dec
out
pop
cmps
sub
loopne
hlt
push
jge
scas
fsubrp
dec
out
sbb
add
ins
scas
int3
pushf
gs
xchg
sbb
call
mov
and
shl
fstp
cmps
iret
lahf
adc
push
in
push
loope
sub
loopne
pusha
mov
sub
xchg
pusha
stos
call
(bad)
lods
pop
cmps
dec
call
call
jg
cmps
daa
jne
sub
dec
xchg
and
loop
pop
ja
xchg
mov
or
loopne
ja
ins
adc
loopne
push
sar
xchg
and
in
pop
scas
fst
pop
ja
icebp
or
loopne
bound
jne
sub
dec
idiv
pop
pop
das
xlat
call
in
fcom
les
xchg
pop
pop
into
into
clc
pop
cmps
dec
scas
and
div
scas
daa
pop
sahf
dec
ficomp
cmps
stos
sbb
inc
gs
xchg
jecxz
mov
xchg
jecxz
xchg
sbb
mov
das
(bad)
out
xchg
pusha
dec
pop
pusha
cmps
daa
jne
dec
cli
sbb
cmps
scas
pop
out
and
inc
out
popa
(bad)
jmp
cmps
daa
pop
xchg
push
es
xchg
pusha
loopne
(bad)
movs
daa
pop
pop
and
inc
sti
pop
daa
loope
and
ja
aam
daa
pop
sahf
mov
pop
sbb
cmps
fcomp
mov
pop
jne
fsubr
sti
(bad)
jne
dec
pop
jne
dec
push
ja
daa
pop
lahf
into
daa
pop
pop
es
pop
pop
imul
pop
ja
rcr
daa
test
xchg
pop
pop
into
mov
pop
jne
iret
push
sbb
rcl
das
loope
call
sbb
or
daa
pop
ja
rcr
daa
imul
stos
sbb
daa
xchg
out
xchg
xlat
xchg
fxch
pop
clc
pop
cmps
dec
lahf
xchg
out
test
into
xlat
lods
pop
cmps
iret
(bad)
sbb
daa
ja
inc
gs
ja
stos
pop
pop
dec
cmps
sbb
cmps
scas
out
ss
scas
fnstenv
rcr
daa
test
sbb
daa
ja
inc
gs
ja
xchg
dec
jp
pop
cmps
loopne
jmp
pop
mov
es
xchg
pusha
dec
call
mov
lods
pop
pop
add
iret
sbb
pop
fdiv
je
daa
pop
xchg
popa
inc
xchg
and
out
pop
daa
loope
inc
cmps
daa
test
inc
xchg
and
out
pop
into
daa
push
pop
cmps
stos
call
sar
pop
cmps
dec
in
in
ja
cmps
daa
lahf
imul
(bad)
loopne
and
push
push
jne
stos
call
sub
pop
cmps
jmp
xchg
and
loope
pop
ja
(bad)
sub
ja
rcr
mov
pop
cmps
iret
movhps
popw
ja
rcr
(bad)
pop
cmps
dec
sbb
add
loopne
bound
hlt
push
sub
dec
ja
stos
pop
pop
dec
stos
sbb
sbb
out
pop
test
mov
adc
cmps
ja
std
daa
fsub
sahf
dec
push
jno
cmps
iret
sub
test
pop
ja
xchg
pop
pop
into
xor
(bad)
pop
fsub
dec
dec
xchg
pop
cmps
scas
out
ss
scas
fst
pop
ja
push
mov
dec
pop
jne
dec
pop
neg
test
cmps
dec
(bad)
daa
ja
lea
pop
loopne
xlat
stos
pop
cmps
iret
mov
cmps
daa
sahf
jmp
into
push
lods
pop
cmps
dec
fistp
scas
daa
ja
aam
pop
loopne
xlat
stos
pop
cmps
iret
imul
daa
xchg
out
cmps
xlat
xchg
fxch
daa
jne
int3
daa
jne
dec
cmp
loopne
fsubr
stos
gs
imul
xchg
jno
daa
loopne
push
out
pop
dec
inc
retf
movs
fstp
stc
jns
(bad)
gs
loopne
cmp
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
add
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
or
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
adc
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
sbb
pop
ss
pop
cmps
daa
loopne
data16
pop
ss
pop
cmps
daa
loopne
bound
pop
ss
pop
cmps
daa
loopne
outs
and
pop
ss
pop
cmps
daa
loopne
push
pop
pop
ss
pop
cmps
daa
loopne
jbe
pop
pop
ss
pop
cmps
daa
loopne
jb
pop
pop
ss
pop
cmps
daa
loopne
jle
pop
pop
ss
pop
cmps
daa
loopne
jp
pop
pop
ss
pop
cmps
daa
loopne
dec
and
pop
ss
pop
cmps
daa
loopne
dec
and
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
push
and
pop
ss
pop
cmps
daa
loopne
pop
and
pop
ss
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
dec
xchg
inc
jbe
div
lahf
and
out
test
sbb
scas
pop
jecxz
out
ss
loopne
hlt
cmps
pusha
lahf
and
pusha
adc
mov
aam
push
loope
mov
sbb
dec
pop
neg
es
jne
ja
jb
fsub
inc
outs
in
sahf
dec
daa
nop
daa
call
daa
ins
hlt
(bad)
jecxz
sbb
daa
xchg
dec
sub
fistp
fsub
loopne
mov
(bad)
xchg
out
fcom
fiadd
sbb
add
cmp
fs
pop
pop
cmps
daa
loopne
and
pop
ss
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
xchg
and
mov
pop
cmps
daa
loopne
xchg
and
mov
pop
cmps
daa
loopne
sahf
and
mov
pop
cmps
daa
loopne
call
pop
cmps
daa
loopne
out
pop
pop
ss
pop
cmps
daa
loopne
loop
pop
pop
ss
pop
cmps
daa
loopne
out
and
mov
pop
cmps
daa
loopne
jmp
pop
cmps
daa
loopne
mul
pop
pop
ss
pop
cmps
daa
loopne
repnz
mov
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
cli
and
mov
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
ret
pop
ss
pop
cmps
daa
loopne
into
and
mov
pop
cmps
daa
loopne
retf
pop
ss
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
shl
pop
pop
ss
pop
cmps
daa
loopne
fisub
pop
pop
ss
pop
cmps
daa
loopne
fisub
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
and
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
sub
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
xor
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
cmp
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
add
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
or
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
adc
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
sbb
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
bound
pop
pop
ss
pop
cmps
daa
loopne
outs
and
mov
pop
cmps
daa
loopne
push
pop
pop
ss
pop
cmps
daa
loopne
jbe
pop
pop
ss
pop
cmps
daa
loopne
jb
pop
pop
ss
pop
cmps
daa
loopne
jle
pop
pop
ss
pop
cmps
daa
loopne
jp
pop
pop
ss
pop
cmps
daa
loopne
inc
and
mov
pop
cmps
daa
loopne
inc
and
mov
pop
cmps
daa
loopne
dec
and
mov
pop
cmps
daa
loopne
dec
and
mov
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
pop
and
mov
pop
cmps
daa
loopne
pop
and
mov
pop
cmps
daa
loopne
cmps
and
mov
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
loopne
scas
and
mov
pop
cmps
daa
loopne
stos
and
mov
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
loopne
xchg
and
mov
pop
cmps
daa
loopne
xchg
and
mov
pop
cmps
daa
loopne
sahf
and
mov
pop
cmps
daa
loopne
call
pop
cmps
daa
loopne
out
pop
pop
ss
pop
cmps
daa
loopne
loop
pop
pop
ss
pop
cmps
daa
loopne
out
and
mov
pop
cmps
daa
loopne
jmp
pop
cmps
daa
loopne
mul
pop
pop
ss
pop
cmps
daa
loopne
repnz
mov
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
cli
and
mov
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
ret
pop
ss
pop
cmps
daa
loopne
into
and
mov
pop
cmps
daa
loopne
retf
pop
ss
pop
cmps
daa
loopne
(bad)
and
mov
pop
cmps
daa
loopne
shl
pop
pop
ss
pop
cmps
daa
loopne
fisub
pop
pop
ss
pop
cmps
daa
loopne
fisub
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
and
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
xor
pop
pop
ss
pop
cmps
daa
loopne
and
mov
pop
cmps
daa
loopne
add
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
or
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
adc
pop
pop
ss
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
sbb
pop
pop
ss
pop
cmps
daa
loopne
data16
mov
pop
cmps
daa
loopne
push
pop
pop
ss
pop
cmps
daa
loopne
jbe
pop
pop
ss
pop
cmps
daa
loopne
jb
pop
pop
ss
pop
cmps
daa
loopne
jle
pop
pop
ss
pop
cmps
daa
loopne
jp
pop
pop
ss
pop
cmps
daa
loopne
inc
and
mov
pop
cmps
daa
loopne
inc
and
mov
pop
cmps
daa
loopne
dec
and
mov
pop
cmps
daa
loopne
dec
and
mov
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
push
and
mov
pop
cmps
daa
loopne
pop
and
mov
pop
cmps
daa
loopne
pop
and
mov
pop
cmps
daa
loopne
cmps
and
mov
pop
cmps
daa
loopne
mov
mov
pop
cmps
daa
loopne
scas
and
mov
pop
cmps
daa
loopne
stos
and
mov
pop
cmps
daa
loopne
mov
pop
pop
ss
pop
cmps
daa
