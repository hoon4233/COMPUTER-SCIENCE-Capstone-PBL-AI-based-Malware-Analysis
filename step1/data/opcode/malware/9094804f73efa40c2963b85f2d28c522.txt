ret
add
add
add
add
add
add
es
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
jle
add
add
add
loop
add
enter
test
add
cwde
add
add
and
add
cmp
add
dec
push
add
fs
add
js
add
mov
add
xchg
push
add
mov
push
add
retf
add
pop
add
fiadd
add
clc
push
add
or
add
add
add
inc
std
add
add
add
call
cld
add
fdivr
add
add
add
in
add
pusha
std
add
js
add
mov
add
mov
std
add
enter
loopne
add
in
std
add
cli
std
add
adc
add
inc
add
add
pusha
inc
add
add
(bad)
inc
add
inc
add
inc
add
add
pop
inc
add
add
inc
inc
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
outs
add
add
add
call
add
add
add
add
pop
add
add
add
cmp
add
push
add
add
add
inc
add
jmp
add
add
add
add
pushf
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
and
add
cmp
add
push
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
add
shl
jnp
add
add
add
add
and
add
inc
js
add
add
sahf
mov
push
push
hlt
adc
std
gs
test
cmps
out
es
jns
mov
loope
mov
cmp
mov
aaa
xchg
mov
dec
pushf
repnz
or
ja
sub
jb
stos
xor
xchg
scas
cmp
ja
test
fs
jl
xchg
or
test
pop
add
mov
test
mov
js
cmp
sbb
cwde
push
cmp
mov
adc
pop
popf
dec
std
push
jg
cmps
jl
add
mov
dec
inc
out
and
xor
jnp
aaa
fistp
mov
neg
int
movs
push
add
out
je
jae
mov
jns
cmc
xchg
mov
xchg
gs
xor
add
repz
or
arpl
adc
mov
push
(bad)
mov
lods
ror
push
pushf
or
mov
push
mov
sahf
scas
jle
sbb
mov
mov
sbb
scas
das
shr
mov
adc
jp
mov
mov
pop
push
(bad)
cdq
sahf
in
ja
pop
mov
popf
femms
rcl
inc
ins
and
lods
out
dec
jmp
ret
cmp
mov
dec
das
xchg
out
mov
dec
sbb
fwait
lock
imul
fiadd
sub
daa
mov
sbb
les
xchg
outs
mov
sub
push
add
fisttp
dec
dec
shr
mov
daa
inc
xchg
inc
jl
inc
sahf
ins
int
push
add
push
movs
sub
pop
jl
or
mov
je
stos
and
mov
shr
adc
mov
sub
push
sbb
xor
test
sub
shl
dec
inc
lods
xlat
loop
and
push
mov
cmps
add
cmp
aad
mov
mov
iret
inc
es
cdq
sahf
xor
dec
push
sbb
mov
pusha
push
and
test
in
or
call
xchg
popf
pop
repz
in
cli
ds
in
xchg
cdq
cmc
stc
fdivrp
xchg
test
sbb
shl
hlt
call
cmc
push
lods
pop
push
mov
shr
in
sub
jl
sar
aad
jp
cli
jp
ret
mov
(bad)
xchg
pop
fdivr
xor
scas
dec
sbb
mov
or
mov
sbb
adc
mov
or
mov
pop
(bad)
sahf
mov
jno
test
scas
xor
js
call
jns
mov
push
bound
push
aas
push
mov
outs
and
sub
xchg
add
pop
xor
mov
lods
outs
xchg
xor
rcl
adc
arpl
xor
jno
add
test
nop
xchg
lahf
jno
jl
mov
adc
xchg
jo
sub
mov
cmp
mov
fdivr
test
cmc
cmp
and
cmp
inc
shl
js
inc
imul
mov
cmps
jne
fmulp
test
mov
push
shl
push
dec
jg
(bad)
out
adc
das
pop
jmp
cmc
imul
dec
arpl
sbb
int
in
sub
sbb
outs
dec
or
jns
jb
dec
inc
jnp
mov
aaa
and
(bad)
cmp
ret
sbb
dec
push
ins
fidivr
sub
jne
push
cs
mov
and
lods
pop
mov
shl
jmp
pop
dec
mov
ds
mov
pop
scas
adc
push
xchg
mov
daa
pop
mov
sbb
xchg
aas
inc
push
aas
xchg
ret
inc
pop
test
mov
test
pop
xor
sar
loope
ins
ins
push
mov
inc
mov
lea
adc
mov
xlat
iret
sbb
cmp
xchg
cli
clc
fwait
lock
xchg
mov
paddusb
mov
sub
fist
push
in
clc
out
mov
shl
and
call
stc
xor
(bad)
xor
outs
gs
ss
call
outs
pop
inc
inc
mov
scas
jae
imul
add
sub
movs
fistp
or
adc
add
mov
je
xchg
rol
das
in
imul
rcl
adc
adc
fwait
jle
ss
pop
inc
xchg
(bad)
cmp
test
in
xor
xchg
cli
ja
sbb
mov
clc
pop
lock
lds
outs
sub
mov
pop
into
outs
shl
into
(bad)
std
xor
ins
cdq
sbb
sti
aas
xlat
jbe
aaa
sbb
mov
jns
imul
xchg
daa
push
pop
pop
cmps
gs
sahf
or
fwait
mov
cmp
jl
jmp
(bad)
test
push
das
or
push
pop
ds
lods
mov
push
leave
das
fstp
shr
ror
pop
aas
inc
xchg
(bad)
or
jns
popa
add
stos
inc
adc
mov
or
(bad)
and
xchg
jo
jmp
pop
mov
repnz
jg
xor
es
inc
or
loop
das
call
mov
ror
inc
sub
and
sub
fsubr
jno
push
nop
dec
into
lahf
out
pop
jae
mov
sbb
adc
and
push
mov
paddusw
or
and
push
add
in
and
cld
int3
clc
adc
test
neg
add
movs
ret
jmp
lods
add
lock
push
sbb
or
cmp
stos
sub
mov
lahf
xchg
imul
jnp
mov
aad
aaa
mov
mov
movs
scas
pop
or
fwait
pop
scas
ror
mov
leave
ss
jbe
sbb
stc
dec
cmp
nop
fisub
push
cmp
rol
sub
push
repz
push
movs
mov
in
push
rcl
addr16
add
sbb
cli
rol
inc
adc
and
mov
in
shl
mov
or
cli
mov
fs
add
out
push
pop
dec
scas
xchg
mov
(bad)
or
scas
xor
outs
push
push
pop
pushf
inc
pop
cmps
out
repnz
mov
scas
inc
jns
or
rcl
jnp
dec
jl
mov
and
nop
xchg
and
and
jns
jae
dec
call
mov
aad
aaa
ja
pop
or
pop
mov
out
dec
xor
fwait
icebp
cld
fisttp
jecxz
lods
dec
stc
imul
pop
loop
fnstsw
retf
push
mov
int
xor
jg
mov
push
cmc
sbb
jae
call
in
sub
jae
rcr
push
retf
mov
stc
mov
jp
sub
and
mov
adc
cmp
and
and
push
jb
and
mov
cmps
xor
test
pop
jecxz
jne
fwait
push
jp
xchg
les
mov
fist
ret
aam
ins
repnz
cmp
not
jecxz
mov
stos
sub
cmp
test
or
fsubp
and
fnsave
jbe
frstor
push
push
(bad)
fild
int
push
in
(bad)
ficomp
mov
scas
cmps
imul
jbe
sbb
and
sbb
and
xchg
pop
in
fst
fpatan
pop
pop
shr
and
aad
push
xor
ds
xor
xchg
sub
mov
popf
adc
mov
adc
mov
or
les
outs
rcl
(bad)
cmp
out
mov
retf
bound
rcr
arpl
sub
pop
push
fld
fisttp
int
mov
sti
test
daa
(bad)
push
mov
or
lea
push
dec
mov
je
push
fs
lock
push
xchg
sub
in
pop
(bad)
and
inc
mov
mov
push
xor
push
jne
pop
jae
dec
mov
push
or
imul
push
xlat
js
inc
lods
movs
lods
jb
mov
mov
leave
lods
mov
xchg
sti
xchg
pop
cmp
shr
dec
mov
pop
leave
pop
add
into
xchg
cmps
dec
xchg
push
push
mov
neg
fld
int
scas
xor
(bad)
out
xchg
retf
out
pop
out
add
mov
pop
int
fidivr
ins
add
test
aad
arpl
data16
mov
cmp
jl
gs
bound
push
mov
add
push
aas
mov
mov
cld
xor
jnp
adc
mov
add
adc
sbb
pushf
dec
or
sbb
adc
sub
imul
sub
(bad)
push
in
fist
mov
aas
adc
cmc
inc
cmc
bound
jbe
jp
cmc
es
jp
mov
idiv
aad
pushf
pop
and
adc
adc
xor
sbb
call
out
stos
pop
into
data16
xor
xor
bnd
xor
add
and
das
(bad)
jo
dec
test
jecxz
sbb
adc
push
pusha
mov
imul
fwait
xchg
add
xchg
ins
lds
push
dec
jmp
(bad)
fidiv
mov
gs
pop
mov
sahf
cs
and
sbb
mov
or
and
and
xchg
test
xor
sub
push
cld
cmp
pop
cmp
push
shl
jae
cmp
mov
out
(bad)
jmp
jnp
loop
dec
sub
(bad)
push
out
ins
outs
pop
lods
mov
mov
call
push
adc
add
imul
fs
push
test
push
cmp
clc
fsubr
dec
or
inc
shl
ficomp
or
pushf
or
mov
hlt
popa
sar
mov
ds
dec
das
push
(bad)
sub
repnz
jp
test
loopne
clc
dec
gs
jmp
outs
add
mov
jmp
rcl
jle
or
addr16
mov
(bad)
inc
jmp
retf
bound
and
imul
dec
movsx
or
and
xchg
loopne
mov
rcl
jp
stc
inc
push
lds
push
and
mov
test
add
push
jo
ficomp
inc
cmp
fdivr
in
xchg
sub
xchg
mov
repnz
ja
sbb
and
addps
pop
add
and
leave
mov
sbb
in
popa
test
in
loop
inc
sub
adc
fsubr
or
jmp
lods
xlat
xor
hlt
sar
inc
(bad)
leave
xchg
xchg
cld
mov
xchg
aas
add
sub
daa
(bad)
xor
xor
jmp
mov
test
lock
sub
ja
ds
and
in
ret
in
jno
cmp
cmp
and
and
pop
adc
mov
pop
jae
hlt
mov
and
and
jb
stos
sub
mov
out
rcl
sahf
cli
pop
mov
adc
nop
adc
push
lea
inc
test
cmp
inc
add
stos
bound
pop
test
mov
fs
inc
shr
das
lods
jp
leave
jmp
arpl
repz
adc
add
push
adc
in
add
push
mov
or
adc
xchg
add
push
cmps
push
cmp
add
call
cld
and
mov
dec
sub
jg
sti
add
cmp
dec
push
aaa
add
jmp
xor
pop
jge
fstp
test
mov
jne
mov
or
xchg
outs
test
and
test
(bad)
es
mov
aas
add
and
jmp
inc
mov
xchg
jg
loope
sub
pop
mov
sbb
sbb
js
mov
xor
repnz
fstp
dec
sbb
add
test
jae
in
dec
(bad)
aas
stos
xor
sub
(bad)
adc
sbb
jne
imul
imul
jmp
xor
xchg
xor
mov
inc
fbld
pop
fbstp
inc
test
push
sar
push
iret
dec
das
pop
mov
hlt
xor
jmp
dec
(bad)
adc
sub
popf
jmp
mov
adc
jns
jge
mov
retf
xor
not
xchg
push
xchg
push
dec
jo
cmp
push
(bad)
xor
out
pop
dec
ror
popa
lods
scas
xchg
imul
outs
(bad)
test
add
enter
out
add
pop
mov
daa
nop
xchg
add
gs
aas
xchg
ja
aad
pop
aam
mov
sbb
addr16
test
jo
scas
fsubp
push
inc
syscall
cmp
ja
sbb
lods
imul
aad
in
cli
aam
add
das
or
imul
mov
push
inc
rcpps
inc
and
mov
pop
and
sub
sub
inc
xor
sub
mov
sbb
iret
js
mov
mov
sub
out
mov
push
mov
ror
(bad)
push
dec
mov
adc
sahf
adc
adc
and
out
loope
rcl
dec
aad
test
dec
mov
mov
(bad)
mov
mov
dec
in
xor
or
jp
inc
mov
leave
push
cmp
and
lahf
repz
xchg
lods
or
xchg
lds
sbb
es
pop
push
jno
sbb
mov
adc
mov
adc
sub
sub
aad
pop
add
ins
imul
stos
mov
call
sar
xchg
xor
push
sub
ret
dec
std
nop
jmp
fnstsw
xor
xor
cwde
xchg
inc
(bad)
pop
cmps
fcom
inc
mov
and
cmps
pop
inc
push
pop
jns
aad
jnp
stos
out
aam
or
jl
jbe
sahf
clc
mov
cmp
add
or
inc
dec
cdq
mov
pop
sti
xchg
mov
cli
push
inc
add
mov
sbb
xor
fcmovnb
ror
cld
ror
bnd
das
mov
xchg
mov
mov
sub
inc
xchg
mov
jns
lods
mov
xlat
sbb
scas
mov
cdq
fstp
loope
mov
lods
jle
idiv
add
inc
rol
mov
test
dec
and
or
mov
ins
(bad)
mov
add
mov
(bad)
jmp
call
dec
sbb
(bad)
imul
pop
je
imul
jne
adc
stc
cmps
pop
dec
inc
xchg
xor
fist
push
fmul
inc
xor
jnp
mov
jg
dec
dec
call
fnstcw
icebp
fnstenv
push
dec
fadd
and
call
mov
or
and
rcl
fs
ins
pop
cmp
pop
inc
mov
fs
shl
ins
(bad)
pusha
xor
xchg
mov
dec
cli
cmp
outs
mov
aas
sub
sahf
mov
cmp
dec
mov
jo
and
pop
aad
lods
rcl
and
add
cmp
add
add
cmp
and
gs
inc
pop
push
cwde
sbb
inc
inc
inc
pop
adc
fadd
sbb
adc
outs
sub
ds
jmp
jl
(bad)
mov
pop
jl
or
js
(bad)
retf
lahf
or
lods
movs
movs
jp
es
icebp
pop
cs
adc
inc
xchg
je
fsub
retf
jo
rol
(bad)
shl
jns
leave
arpl
jp
add
cmp
es
out
mov
test
and
xchg
fwait
arpl
inc
xchg
ds
(bad)
adc
fdivr
fnsave
inc
cmp
mov
jb
sahf
pop
xor
daa
push
pop
inc
dec
mov
xchg
push
or
aad
hlt
xchg
xor
(bad)
out
ss
push
inc
cmps
xor
sbb
mov
hlt
dec
xchg
adc
mov
mov
adc
in
ror
mov
push
sbb
pop
xlat
bound
mov
sar
pop
and
pop
imul
jo
push
into
call
xor
scas
pmulhw
je
iret
stos
adc
mov
xor
dec
int
cmp
stos
call
fsub
or
movs
ror
add
xchg
cmc
(bad)
xchg
das
ds
addr16
push
add
push
push
out
dec
lods
xchg
cmp
dec
inc
ins
pop
xchg
pop
test
js
mov
or
xchg
xchg
lods
sbb
pop
adc
xchg
and
sub
cli
out
pop
sbb
aad
ret
add
into
and
push
pop
fs
sbb
pop
inc
repnz
mov
mov
inc
push
mov
adc
lea
lock
nop
ins
imul
add
in
sub
iret
jl
mov
fbld
pop
sub
loope
xor
or
and
in
xor
enter
(bad)
(bad)
mov
cmps
mov
mov
movs
scas
sbb
adc
xchg
cmps
and
push
mov
xor
jge
jl
retf
jo
push
icebp
test
sub
test
xchg
repnz
sti
cmpps
add
push
repz
jo
push
mov
jae
push
mov
ds
ror
mov
pop
inc
cmp
scas
repz
movs
pop
test
out
mov
call
xchg
(bad)
push
stos
bound
mov
or
jecxz
loopne
xchg
cmc
lds
(bad)
loop
cmp
cdq
retf
cmp
add
leave
ficomp
add
or
add
jmp
sbb
mov
in
xchg
retf
lods
leave
jns
pop
or
out
(bad)
jns
lea
jnp
stos
mov
unpcklps
mov
add
sti
and
cmp
sbb
cld
enter
cmp
mov
call
hlt
xor
cmp
loop
inc
sbb
cmc
shl
es
xchg
xchg
xchg
shl
in
(bad)
int3
adc
push
cdq
rcr
stos
(bad)
repnz
test
shl
aad
ja
test
popf
pop
push
fild
xchg
fdivr
dec
sub
pop
or
fist
(bad)
in
sbb
iret
stc
imul
and
xchg
xor
jp
pop
fwait
mov
cmp
cmp
inc
push
mov
jl
lods
movs
popf
jns
or
mov
or
outs
clc
and
ins
cdq
std
mov
fsubr
xchg
(bad)
or
dec
imul
aas
push
mov
std
mov
mov
mov
repnz
mov
stos
pop
je
jle
aas
xchg
int
jge
test
jns
mov
push
cmps
call
aam
pop
jb
test
push
mov
mov
xchg
mov
inc
sbb
pop
xchg
fwait
mov
add
sti
out
xor
push
jno
push
jnp
imul
inc
ins
enter
jo
mov
(bad)
fdiv
cli
movs
es
aas
pop
xor
in
fcomp
add
aaa
pop
push
repnz
mov
sbb
xor
stos
adc
inc
lods
mov
daa
sub
pop
sbb
pop
ins
mov
mov
sbb
neg
shl
mov
mov
xchg
jmp
and
dec
push
call
inc
std
and
ja
gs
aaa
dec
sub
call
inc
not
rcr
mov
(bad)
not
outs
(bad)
pop
not
dec
push
addr16
fdivr
cmp
repz
adc
xor
test
sub
ja
daa
xor
mov
cli
jge
cli
or
or
adc
sub
in
pop
mov
daa
cli
xlat
cmp
or
ja
imul
in
and
and
jno
mov
stos
aad
xchg
pop
pop
ds
or
fucom
jb
shl
daa
std
mov
fiadd
cmp
jp
shl
mov
fmul
cmc
mov
jns
cmps
or
int3
jnp
xchg
pusha
loopne
cwde
arpl
inc
dec
xchg
push
stos
inc
aad
cmp
sub
mov
aam
xor
mov
pop
loopne
lock
cmc
ret
push
ins
arpl
outs
jmp
(bad)
fisttp
dec
sbb
jo
adc
fcomp
loop
lea
dec
ja
in
jmp
cmp
cwde
or
stos
rcl
inc
or
adc
xor
ret
movs
ss
pusha
bound
sub
inc
std
sbb
and
aaa
jne
and
out
sub
dec
mov
lock
jb
mov
mov
or
into
cdq
aad
cmps
dec
bound
jmp
shl
inc
xchg
test
mov
sbb
mov
xchg
(bad)
or
push
xor
out
jmp
ror
mov
mov
enter
pop
loope
fwait
jge
out
pop
cmps
jp
(bad)
out
bound
(bad)
ins
or
dec
and
ins
push
dec
ret
cmp
push
repnz
mov
aas
cwde
shl
sbb
ret
adc
sub
das
add
mov
addr16
test
lahf
fs
lock
sbb
cli
jmp
sub
mov
enter
data16
and
adc
or
rcpps
mov
in
ins
iret
jb
lods
fisttp
ja
mov
scas
cmps
js
int3
call
sub
scas
inc
mov
xor
cli
push
retf
fisttp
inc
lahf
into
out
mov
or
mov
cmps
mov
fist
xor
outs
mov
push
dec
adc
push
and
mov
mov
cmp
adc
clc
hlt
mov
(bad)
aad
call
add
fwait
xchg
xchg
fisttp
mov
cwde
cmps
sbb
jmp
(bad)
ins
mov
pop
ficom
inc
mov
(bad)
fst
dec
mov
add
or
fsubr
es
iret
jmp
push
ins
dec
adc
cmp
xchg
inc
test
xlat
pop
in
call
add
mov
xchg
icebp
or
jmp
push
lds
shl
aas
adc
mov
fwait
xchg
in
test
xor
lea
or
retf
dec
jo
xchg
imul
test
xor
sub
test
mov
sub
xor
sbb
popf
adc
xor
fsubr
jb
aaa
ret
adc
dec
push
sbb
ret
lods
imul
(bad)
pop
or
push
fnsave
cdq
pop
sub
mov
(bad)
aaa
xchg
push
aam
inc
pop
es
push
in
scas
push
add
(bad)
cmc
cmp
cmp
dec
imul
sahf
add
rcr
mov
int
test
cmc
dec
and
loopne
gs
mov
sahf
iret
inc
jmp
jge
mov
push
jmp
sbb
out
popa
xchg
imul
stos
pushf
inc
sbb
xchg
pop
pop
adc
aaa
push
inc
in
dec
sbb
loope
push
lods
ss
div
pushf
retf
push
push
cmc
cmp
retf
retf
push
mov
js
test
pop
jns
pop
dec
add
sub
(bad)
adc
aam
imul
ror
mov
mov
jmp
and
mov
ret
rol
out
outs
pusha
test
ret
fs
push
adc
and
push
push
sbb
vmovlps
xor
retf
mov
jmp
mov
repz
pop
jecxz
hlt
xchg
push
call
mov
jmp
mov
jp
dec
mov
out
add
test
inc
cmp
iret
out
daa
scas
xchg
push
shl
rol
or
cs
lea
cmp
inc
xchg
jb
int3
pop
mov
jg
jg
test
ds
sbb
imul
rol
imul
daa
jb
test
pop
pop
add
cmps
ins
xor
sbb
addr16
pushf
data16
ror
lods
aam
mov
retf
mov
cli
ins
cdq
rol
ror
in
dec
mov
mov
ja
mov
push
call
push
jno
sbb
sahf
leave
adc
enter
cld
fstp
xchg
rol
dec
push
adc
test
and
in
test
fwait
shr
mov
push
cwde
daa
mov
mov
and
(bad)
das
jo
in
inc
pushf
dec
test
jo
or
iret
rol
push
mov
es
add
loop
stc
outs
inc
add
sar
or
ss
adc
pop
dec
fbstp
out
jns
(bad)
fsubr
pushf
sar
fwait
jmp
imul
push
jnp
out
int3
imul
jle
and
sbb
jbe
lods
mov
xchg
fucomip
mov
inc
dec
mov
dec
in
and
cmps
cs
out
inc
jnp
pop
sub
fild
xor
xor
cwde
stos
scas
idiv
and
or
ins
jp
cmp
pop
pop
adc
in
mov
jb
add
jmp
out
cmps
pushf
shl
pop
mov
cmp
test
call
ins
adc
ror
push
inc
rcl
out
test
dec
scas
ins
pusha
pop
xchg
mov
out
fsubr
adc
jns
jb
ds
in
push
mov
xchg
xchg
bound
adc
pop
into
cmp
jno
or
retf
xor
xchg
jo
mov
pop
retf
mov
loopne
push
add
pop
mov
sar
in
cmp
push
stos
retf
xchg
cmps
aad
std
push
out
and
pop
bound
inc
nop
aaa
sub
(bad)
dec
inc
dec
stc
rcl
ret
lahf
sub
arpl
sbb
nop
ret
mov
loop
pop
int3
xor
sbb
jb
imul
jno
push
fcom
inc
mov
popa
in
add
(bad)
dec
xor
das
retf
inc
ret
lods
std
adc
aam
push
cmp
jge
outs
or
and
and
dec
fwait
add
std
mov
mov
jecxz
mov
inc
and
push
jmp
push
and
lock
dec
mov
(bad)
cmp
sub
inc
fsub
test
rcl
stos
xor
sbb
fld
and
push
push
rol
js
ja
fnstenv
mov
sar
push
push
les
pushf
fisttp
mov
adc
dec
retf
xor
adc
cwde
lahf
jmp
icebp
imul
inc
push
shl
vmovdqa
cmp
scas
outs
or
jp
add
sbb
test
mov
jbe
cdq
or
sbb
xchg
das
test
jno
mov
mov
loopne
mov
xchg
pop
sub
cs
add
cdq
(bad)
mov
cwde
xchg
inc
mov
and
and
push
add
dec
xor
shl
or
mov
cwde
mov
call
hlt
and
push
aaa
xor
adc
in
push
and
in
xchg
xchg
xchg
sar
or
lds
enter
dec
enter
aas
jbe
xchg
add
and
aam
in
stc
loop
fld
lahf
outs
mov
arpl
cmps
repz
add
xchg
mov
jae
shr
bound
sbb
jmp
dec
iret
and
out
je
fcmovnb
jmp
std
bound
inc
sub
mov
jmp
mov
xor
fiadd
dec
std
add
rcl
shl
jge
sti
dec
movs
lock
add
add
adc
xor
dec
mov
mov
sbb
sbb
sar
aaa
inc
adc
int
out
inc
xlat
jns
stos
xchg
and
inc
mov
sahf
ficomp
jl
cmp
lea
add
lods
mov
add
sub
fs
fucomp
inc
pop
dec
in
pop
pop
mov
xor
fidiv
leave
xchg
shl
dec
push
jmp
fld
push
pop
inc
pop
ins
lahf
and
lods
push
sub
retf
ds
repz
lock
sub
cwde
fucomip
sahf
in
aas
nop
scas
mov
repnz
imul
pop
and
jg
mov
in
adc
enter
shr
mov
pop
stc
cwde
inc
mov
lock
or
add
jmp
pop
xchg
push
shl
jno
inc
das
popa
xor
mov
lahf
dec
pop
ds
adc
pop
inc
scas
sbb
and
jb
mov
fmul
test
push
pop
in
inc
mov
sub
adc
ss
xor
mov
mov
push
mov
cmps
dec
xor
aad
shr
outs
jns
outs
movs
hlt
inc
sbb
mov
(bad)
iret
push
mov
jg
mov
(bad)
fisub
push
jg
pushf
jns
sub
adc
cmp
in
xor
mov
cmps
xchg
(bad)
cmp
pop
and
mov
sti
push
ficomp
mov
in
in
scas
lods
sbb
sbb
inc
dec
and
add
(bad)
and
sbb
xlat
mov
or
sub
lahf
xchg
cmp
jge
mov
mov
pop
dec
jb
pop
adc
stc
dec
and
daa
ret
sub
push
scas
scas
fs
jo
sbb
push
jmp
mov
(bad)
sub
lea
pop
dec
sahf
jge
cli
mov
scas
xor
and
cmps
add
imul
in
idiv
pop
push
cmp
or
xor
loopne
ret
sub
aas
test
ins
nop
cli
out
and
mov
push
inc
cmp
cmp
bnd
push
je
jg
dec
mov
(bad)
js
std
je
ret
out
mov
cwde
pop
stos
xchg
or
rcr
lea
loop
cmp
or
(bad)
leave
fisttp
and
push
hlt
or
and
cld
icebp
(bad)
pop
(bad)
aam
jmp
push
or
fs
dec
cmp
pushf
mov
call
adc
movs
pop
mov
movs
xchg
movs
shl
ds
aam
mov
fnstsw
(bad)
mov
dec
ds
inc
in
sbb
sahf
pusha
mov
ds
jg
retf
out
sbb
aas
cwde
pop
jmp
mov
and
out
xor
das
outs
jnp
mov
int3
dec
mov
imul
jl
inc
sti
enter
out
test
mov
mov
pop
xchg
gs
aas
in
test
pop
in
aaa
sbb
xchg
push
bound
mov
push
dec
les
xchg
inc
adc
lea
cmps
pop
out
cmp
or
inc
(bad)
pop
mov
daa
and
xlat
les
aas
inc
xor
cmp
xchg
pop
loopne
nop
out
imul
jno
push
(bad)
dec
jo
push
jbe
int3
out
fadd
repz
mov
mov
sahf
mov
jmp
test
pop
ja
or
inc
pop
mov
sti
fcmovu
repnz
inc
(bad)
in
mov
jne
adc
mov
inc
xor
push
fadd
loope
and
mov
xlat
hlt
and
popf
mov
dec
lahf
test
cdq
push
mov
jl
call
jmp
shl
enter
lea
mov
mov
lock
cs
add
dec
call
lods
or
scas
add
dec
mov
fcom
xor
mov
pop
sahf
je
add
fs
shl
shl
aad
adc
jl
push
retf
push
ss
in
xchg
and
inc
sbb
cmps
into
mov
clc
(bad)
mov
or
mov
mov
lock
or
push
fwait
sub
push
ret
pavgb
dec
add
or
fisub
dec
(bad)
mov
sub
popa
push
adc
je
xchg
jmp
sti
inc
data16
cmp
cdq
test
jne
dec
cwde
mov
mov
jge
dec
sub
inc
xchg
mov
test
bound
pushf
sbb
and
jp
repz
jb
mov
and
addr16
jno
out
(bad)
call
out
fiadd
push
call
out
push
ret
fild
mov
mov
xchg
add
mov
fld
into
out
and
cmp
jbe
daa
stos
neg
jp
shl
mov
mov
test
add
adc
pop
inc
setl
dec
fxch
mov
hlt
int
adc
jg
mov
arpl
(bad)
cmp
scas
repz
dec
xlat
ret
test
jmp
out
or
mov
mov
pop
push
fcomp
inc
inc
sbb
xchg
push
test
add
xchg
cmp
hlt
sub
movs
jae
das
imul
out
add
call
loope
sub
sbb
mov
cdq
sar
stc
in
sbb
sahf
mov
iret
pusha
int
push
adc
dec
rcr
mov
outs
xchg
(bad)
cmp
xchg
scas
rol
sbb
mov
inc
pushf
push
call
xor
jo
and
in
inc
aas
push
sub
add
adc
and
pop
inc
movs
sbb
movs
jmp
in
push
stos
inc
loop
cs
scas
or
fs
neg
(bad)
dec
int
xchg
mov
pop
ins
test
pop
sbb
push
sbb
adc
inc
xor
and
(bad)
jg
cs
mov
xchg
scas
pop
sbb
xlat
(bad)
and
adc
sub
push
mov
xor
sbb
inc
imul
or
sbb
cmp
adc
adc
test
retf
ins
pop
fstp
inc
push
sbb
out
adc
out
mov
test
lock
pop
lea
cmps
push
pop
push
std
jb
fild
xchg
cmp
xchg
push
aad
test
out
sti
add
mov
mov
int
jb
xchg
sub
adc
sbb
fidivr
adc
sub
in
bound
and
lahf
ficom
jle
cmp
pusha
cdq
ret
aam
cli
mov
dec
mov
cmp
push
js
sub
ror
call
or
inc
ficom
mov
adc
sbb
fstp
jmp
jne
mov
outs
outs
xlat
and
pusha
scas
scas
test
inc
outs
push
or
adc
add
and
scas
pop
fs
scas
inc
retf
stc
out
cmp
cld
sbb
leave
sbb
pop
mov
rcr
jl
(bad)
add
or
mov
inc
pop
jb
sbb
sbb
inc
xchg
fadd
jnp
adc
je
rol
mov
ret
xchg
retf
adc
and
loop
mov
les
test
clc
mov
hlt
stos
sub
das
and
std
cli
jns
jle
clc
sti
adc
mov
xchg
arpl
je
test
sbb
inc
and
inc
cwde
iret
sub
push
daa
(bad)
mov
mov
add
retw
dec
xor
pusha
daa
test
adc
push
hlt
jmp
jb
scas
addr16
push
jb
test
sahf
out
nop
xchg
shl
cmps
mov
cmp
jmp
in
inc
add
lock
jae
outs
push
xor
fwait
das
mov
cdq
inc
or
cmp
std
pop
push
sbb
push
dec
pushf
cmp
xor
sub
icebp
pop
pop
jae
sbb
dec
jno
jmp
xchg
mov
mov
test
in
popa
sbb
xchg
push
cmp
mov
jmp
cwde
adc
movs
retf
mov
jmp
ja
dec
idiv
in
lods
cmp
test
xchg
js
cmc
popa
mov
or
mov
mov
sahf
cmp
xor
ins
jecxz
les
xchg
int
push
push
xchg
gs
mov
sahf
push
and
and
push
mov
mov
test
inc
xchg
ins
push
or
cmp
ja
push
xchg
adc
pop
inc
adc
or
rcr
mov
iret
or
xchg
mov
retf
imul
adc
test
sub
inc
pop
mov
pop
add
mov
xchg
adc
lods
mov
int
repnz
test
ja
pop
sub
mov
repnz
ss
iret
mov
xchg
cmps
pop
or
xor
add
out
jg
sbb
fs
add
push
cmp
push
icebp
test
dec
or
or
mov
add
jb
jecxz
out
push
into
sub
add
ret
cmp
mov
jns
lahf
outs
xlat
sub
pop
stos
mov
sbb
shl
mov
inc
stos
shr
(bad)
scas
mov
xlat
loop
imul
fdivr
dec
xor
loopne
les
test
inc
adc
aas
xchg
jmp
sti
imul
nop
or
push
lock
mov
rcr
jp
data16
or
or
repz
gs
jbe
call
mov
enter
xchg
xchg
and
add
out
lods
shl
cmp
repz
out
test
lods
std
xor
lea
jg
mov
retf
mov
jnp
aaa
and
ds
sub
cmp
imul
pop
fst
xor
or
and
xor
mov
or
inc
pop
repz
sbb
out
xchg
rol
mov
das
mov
add
pop
adc
mov
xchg
shr
loopne
inc
inc
das
es
das
pushf
shr
xchg
stos
cmps
fnstenv
xchg
inc
inc
mov
sub
mov
cmp
adc
and
fsub
dec
fistp
sbb
xchg
xor
mov
psrlw
mov
ins
test
in
jg
jns
pop
inc
shl
test
add
mov
and
jl
stos
test
pop
or
data16
jne
xchg
xchg
jg
mov
push
cmp
movs
ins
in
(bad)
fdivp
xchg
aas
inc
rcl
stos
iret
lahf
and
test
mov
jnp
push
int
push
mov
cmp
popf
jmp
sub
repz
addr16
or
xor
ret
in
pushf
xor
pusha
popf
pop
add
cmp
(bad)
mov
cld
iret
(bad)
lds
adc
fidivr
sub
xchg
adc
jbe
ror
xlat
rcr
and
dec
movs
jnp
loop
clc
mov
fst
iret
adc
int
or
fist
div
and
cmp
mov
jle
sbb
sbb
mov
daa
pop
pop
adc
mov
data16
sti
dec
mov
push
sub
inc
or
and
add
adc
outs
lock
loop
cmc
cmp
sar
or
in
or
je
xor
jge
cmps
(bad)
loopne
or
(bad)
pop
inc
inc
(bad)
jmp
and
daa
pop
hlt
jmp
out
inc
add
sahf
fs
and
fst
xor
add
jp
fldcw
les
xor
jmp
cmc
dec
xlat
(bad)
pusha
cld
push
cmps
pop
fcomp
into
dec
push
cmps
add
xchg
jecxz
(bad)
xchg
bound
mov
retf
scas
pop
das
jge
mov
lds
adc
mov
and
vpmacsww
ret
inc
mov
and
movs
imul
mov
push
cld
hlt
or
mov
sub
lods
pop
stc
push
in
push
sbb
sbb
clc
aam
lahf
in
(bad)
xor
mov
mov
cwde
nop
(bad)
stos
sub
pop
(bad)
push
xor
hlt
xor
test
push
inc
je
fcomp
std
fisttp
aam
fist
cli
sbb
mov
jge
inc
fdivr
sub
mov
mov
mov
or
and
ja
pop
push
dec
add
xchg
stos
or
sbb
sar
xor
jns
popa
jl
cmp
xchg
hlt
pop
(bad)
adc
ds
push
sbb
fs
lahf
and
push
xor
daa
jbe
dec
pop
pop
inc
lods
sbb
mov
popf
xor
mov
mov
cmp
and
mov
rol
(bad)
lods
xchg
mov
mov
mov
scas
jb
jmp
int
or
xchg
pop
cmp
mov
jl
nop
dec
pop
pushf
pop
cmp
movs
les
retf
pushf
cmp
pop
ror
or
cmp
rcr
cmc
jp
cmps
xchg
repnz
mov
test
cmpxchg
std
xchg
pushf
jmp
fadd
out
dec
out
fdiv
shr
mov
add
and
push
cmp
cmp
das
jne
call
cdq
arpl
imul
sahf
and
push
cwde
(bad)
loope
cdq
lahf
or
icebp
sbb
pusha
adc
xor
push
shl
adc
popf
popf
jg
add
jecxz
mov
(bad)
retf
adc
jae
sub
jmp
xor
mov
mov
and
test
in
ja
retf
movs
ret
(bad)
popa
loope
int3
push
xor
cmp
stos
(bad)
push
loopne
aaa
pop
mov
cmp
lock
mov
jmp
mov
xchg
cmps
push
jge
cwde
iret
and
dec
xor
fs
jns
stos
std
fs
sbb
inc
xchg
addr16
add
add
inc
ss
jbe
sahf
cmp
mov
pusha
mov
in
shl
pop
(bad)
iret
and
sub
movs
mov
jae
mov
shr
mov
mov
stos
addr16
addr16
pop
sbb
retf
add
in
fadd
call
jne
lahf
ds
rcl
pop
dec
and
bound
outs
ret
pop
jns
iret
jb
jae
sti
cld
sbb
xchg
fs
adc
fdiv
jno
ins
scas
lods
cmp
dec
xor
xor
pop
clc
mov
mov
cmp
(bad)
mov
pusha
push
sub
mov
xchg
test
mov
popf
jno
jmp
mov
add
or
pop
or
enter
xlat
data16
fcomp
mov
mov
iret
sbb
scas
retf
jecxz
jge
std
sahf
sub
pop
pop
mov
popf
jge
retf
clc
in
adc
jge
mov
retf
in
mov
pop
movs
mov
rcr
jno
test
inc
std
test
fwait
xor
sub
mov
rcl
cmps
or
mov
push
pop
sub
jmp
push
cdq
inc
sub
repnz
cmc
push
xor
retf
mov
or
ins
(bad)
pop
mov
pop
outs
add
aaa
and
jecxz
fsub
jge
jp
fnstcw
mov
sub
dec
(bad)
push
mov
lods
js
daa
test
dec
les
xchg
inc
dec
add
push
and
fwait
stos
push
dec
xor
outs
cmps
fsubrp
cld
jne
hlt
clc
cmp
pushf
leave
dec
pop
mov
push
les
cmps
inc
ret
pop
adc
lahf
mov
push
mov
jecxz
sbb
(bad)
out
dec
mov
cmp
push
and
xor
fisttp
dec
pop
in
inc
xchg
or
(bad)
cli
inc
mov
loope
xlat
add
adc
fstp
inc
dec
retf
jns
std
push
in
lea
sub
push
ret
sbb
sbb
idiv
ja
test
mov
cdq
es
push
sti
add
cmp
jne
in
mov
xlat
xchg
lahf
jp
jno
xchg
sub
cs
dec
(bad)
xchg
aam
cmp
inc
pushf
push
mov
cmp
pop
cmp
push
push
mov
fsubr
jle
enter
rol
adc
dec
mov
stos
call
fwait
aam
or
pop
ins
jnp
sub
push
scas
out
jbe
add
repz
leave
mov
jmp
das
pusha
or
loope
aam
(bad)
lock
fadd
inc
retf
ret
aad
inc
jne
xchg
fisubr
dec
out
cli
cmp
jle
ins
icebp
sub
pop
ins
and
sbb
lea
sub
inc
jae
jl
fisubr
sti
mov
test
inc
sub
mov
cmc
jns
inc
pop
pop
(bad)
push
cmp
imul
inc
xchg
loop
daa
or
mov
jnp
adc
adc
pop
in
mov
inc
add
cmc
pop
pusha
les
inc
or
in
pop
cdq
pop
sub
fiadd
cli
xchg
cmp
hlt
(bad)
mov
repz
aas
repz
gs
rol
dec
enter
aad
lds
push
xor
lods
xlat
jmp
lock
outs
or
fadd
popf
xor
cmp
popa
or
mov
lods
rcl
inc
sbb
xor
ffreep
fcom
jmp
in
in
call
popa
sub
jecxz
movs
aad
add
fcom
fnsave
or
cmp
sbb
add
lds
or
loopne
jbe
push
mov
mov
stos
mov
sbb
push
out
stos
out
sar
mov
xchg
ja
call
cmp
in
ror
dec
sar
test
in
hlt
and
xchg
clc
adc
jb
mov
cli
or
int
(bad)
mov
push
pop
mov
sub
lods
scas
xrelease
cmp
in
fist
loopne
retf
sub
fcmovu
mov
xchg
mov
mov
and
popa
shl
inc
div
pop
mov
cmps
add
push
mov
xchg
aas
out
ins
ds
or
(bad)
add
sahf
rcr
push
repnz
xchg
adc
bound
mov
dec
add
adc
dec
fiadd
push
jle
(bad)
(bad)
lods
test
stos
ror
fiadd
sahf
enter
or
icebp
mov
dec
stos
les
push
sar
sub
xchg
hlt
dec
inc
inc
push
add
jno
and
jb
jp
pop
aad
mov
jl
sti
jnp
add
jnp
xor
test
xor
out
es
movs
retf
loope
xchg
pop
shl
out
(bad)
int
and
(bad)
mov
mov
mov
sbb
mov
cdq
popa
shl
xor
ja
adc
retf
mov
adc
mov
mov
mov
jp
push
xchg
popa
jl
outs
dec
(bad)
pop
das
ret
repnz
and
dec
ins
add
int3
enter
mov
xchg
in
mov
mov
xchg
and
rol
and
mov
add
or
sub
je
add
arpl
shl
pushf
fld
lds
imul
sbb
outs
and
xor
in
push
add
movs
push
stos
cmp
lock
and
add
xchg
lahf
fwait
pop
mov
sti
das
lds
into
pop
jae
inc
outs
cmp
outs
lahf
push
mov
dec
outs
mov
or
sbb
pop
lods
mov
aad
mov
stos
popa
mov
loopne
xchg
jecxz
mov
xchg
jnp
out
or
imul
ret
xchg
stos
push
xor
mov
pop
enter
cmp
and
aad
jle
xlat
lds
pop
jge
adc
xor
aas
xchg
cdq
shl
mov
(bad)
xor
cmp
sub
cli
loope
fistp
and
addr16
push
ja
add
add
or
ffree
pop
mov
adc
mov
sbb
aam
xchg
hlt
cmps
shr
cmp
pop
ds
inc
mov
push
jo
xchg
push
nop
(bad)
mov
sub
adc
hlt
fisttp
jno
push
xchg
jo
push
mov
(bad)
fcom
dec
popa
or
stos
sub
inc
xchg
add
adc
rcr
pop
pop
ret
into
or
cld
loop
gs
hlt
add
arpl
jg
test
pop
push
(bad)
push
adc
aam
jmp
inc
movs
add
movs
fdivr
and
arpl
rcl
fsubr
jecxz
cmps
xchg
mov
call
in
mov
sbb
loopne
loope
adc
imul
add
inc
pushf
or
mov
fadd
push
mov
in
mov
lds
cdq
(bad)
pop
sub
jbe
jae
sbb
add
retf
shl
jle
mov
fistp
mov
mov
add
das
fwait
mov
gs
jmp
cwde
xor
idiv
rol
out
aaa
enter
movs
or
fisttp
fwait
inc
jl
int
inc
mov
ja
jge
test
jne
adc
inc
or
or
xchg
push
or
pusha
adc
xor
inc
mov
sbb
adc
fcmovu
xchg
movs
xlat
mov
jmp
push
fdiv
les
dec
movs
hlt
pop
add
mov
lock
cli
imul
lds
(bad)
push
pop
add
cmp
aas
add
pop
lea
or
pop
sbb
jns
scas
inc
ins
dec
pop
(bad)
xor
or
pop
sub
push
push
popf
int
(bad)
jecxz
pop
nop
leave
jmp
hlt
test
movs
sub
mov
mov
lods
mov
aad
xor
xchg
rcl
push
pop
xor
cmc
sub
or
out
push
popa
mov
dec
stos
sbb
sub
cli
push
push
or
cwde
pop
xchg
jmp
mov
mov
mov
not
iret
pop
cmp
jne
outs
movs
fdiv
adc
sbb
fnstcw
ror
sbb
jbe
pop
popf
ins
xchg
inc
inc
pop
fstp
sbb
sbb
jmp
mov
in
xlat
mov
cli
ins
sub
cmp
and
push
jl
lods
test
jmp
and
pusha
dec
mov
jno
dec
xor
pop
iretw
mov
pop
cmp
pop
mov
xchg
mov
lods
stos
aas
ror
stos
outs
aad
call
push
int3
and
dec
jo
mov
(bad)
jae
jle
stos
pop
stos
mov
cmpps
adc
jle
push
aaa
or
fwait
jnp
cmp
call
in
fisttp
dec
les
daa
pop
stc
or
cmp
add
mov
adc
movs
jnp
xchg
fild
mov
pop
bound
inc
fist
outs
int
xor
pop
or
fcomp
jge
shr
ret
test
scas
mov
or
test
je
sub
ret
scas
test
xor
dec
in
jmp
icebp
ja
dec
cmp
add
xchg
xor
dec
jle
pop
cmc
adc
stc
cs
mov
mov
in
mov
mov
sbb
adc
call
mov
jl
inc
mov
mov
int
in
outs
sbb
mov
jno
sub
adc
icebp
adc
xchg
sbb
jge
popa
dec
int
or
mov
out
out
lods
js
std
inc
ret
lock
sub
sub
xchg
out
mov
mov
mov
dec
mov
dec
mov
jns
cmc
push
js
popf
pop
in
add
push
mov
les
cmp
fadd
fbstp
push
loopne
jle
ds
loopne
aaa
mov
jmp
xchg
xchg
stos
scas
pop
ds
sbb
ins
mov
inc
call
mov
std
ss
icebp
adc
sub
and
dec
cs
(bad)
aaa
sti
pop
into
arpl
(bad)
idiv
movs
ins
dec
adc
jle
pop
cwde
cmps
fstp
test
push
(bad)
dec
adc
je
or
arpl
push
pusha
lods
shr
xchg
ins
xchg
ficom
hlt
imul
add
pop
sahf
xor
stos
(bad)
cli
retf
int
cs
or
stc
jecxz
mov
icebp
xchg
mov
dec
bound
xchg
pop
sar
pop
repz
int3
push
cmovs
int
jnp
je
cmp
sbb
cmp
fs
jmp
mov
inc
pop
mov
mov
popf
jnp
popf
xchg
sub
nop
mov
push
add
adc
stos
adc
or
out
mov
test
retf
lds
and
mov
addr16
cmp
adc
push
(bad)
sbb
lds
je
les
cld
pop
or
sub
mov
xor
lea
pop
(bad)
popa
shl
inc
(bad)
test
repnz
bound
ins
not
in
push
ficom
or
cmps
mov
mov
loope
pop
out
sub
xor
sub
inc
inc
mov
mov
xchg
adc
inc
loopne
xchg
adc
fdivp
addr16
leave
popa
push
jo
pusha
sub
sbb
pop
push
aaa
xor
jae
pop
imul
daa
ror
push
(bad)
sbb
shr
add
pop
push
cmp
movs
(bad)
mov
adc
stos
inc
xor
sar
xchg
xchg
inc
scas
xchg
pop
cmp
push
push
stos
lods
fs
sbb
call
mov
in
push
cmp
cmp
fimul
mov
rcl
popa
inc
and
or
pusha
ret
test
rol
mov
stos
(bad)
dec
outs
rcl
cmp
mov
push
shl
inc
repnz
scas
outs
jo
sub
mov
lods
dec
dec
fstp
and
lock
sub
dec
int
test
pop
xchg
sbb
in
add
jl
fnstcw
mov
fwait
iret
pop
inc
xlat
adc
cmp
test
loop
push
xlat
sub
(bad)
cmps
adc
xchg
add
gs
test
ja
mov
aam
add
das
test
xchg
ret
mov
repz
les
xchg
movs
fisubr
jmp
dec
xor
lahf
cmp
loope
retf
push
ss
xor
inc
push
xor
jecxz
xor
ss
push
jle
in
mov
sbb
ss
shl
dec
out
push
out
inc
cmps
nop
jge
jmp
xchg
jbe
push
push
dec
out
mov
out
addr16
xor
sar
scas
rol
push
xchg
test
shl
std
mov
int
sbb
sbb
int3
pusha
jne
fistp
inc
jno
jg
xor
jae
sbb
push
fs
jno
mov
imul
xor
xchg
fsubr
mov
jmp
pop
icebp
sub
movs
leave
ficomp
xor
ror
sti
push
enter
sub
or
imul
push
mov
stos
es
enter
xor
inc
xor
add
cwde
addr16
or
enter
test
inc
mov
mov
push
inc
out
xchg
int3
mov
cmps
je
ds
lds
jmp
aas
cs
cmps
sub
aad
pop
mov
cmp
adc
jo
xor
loope
inc
sub
stc
rol
hlt
iret
jle
pop
out
out
adc
cdq
mov
pop
(bad)
outs
test
mov
gs
jmp
mov
mov
dec
test
dec
xchg
js
out
je
mov
iret
or
mov
dec
xchg
adc
popfw
jne
js
imul
push
xchg
or
and
retf
dec
popa
stos
or
sar
cmp
push
popa
movs
neg
mov
test
add
addr16
iret
add
xchg
out
xchg
xchg
out
sbb
add
add
jno
and
jmp
pop
(bad)
jle
or
fbstp
xchg
fistp
lods
out
sahf
fucom
rol
xchg
mov
mov
jne
xor
nop
xchg
loope
cld
outs
scas
dec
dec
outs
push
dec
rcr
and
jge
pop
stc
test
inc
mov
int
push
and
pop
xchg
mov
hlt
aas
nop
pop
jle
ret
push
or
pop
lods
inc
clc
mov
mov
stos
ds
dec
std
scas
mov
inc
fiadd
sbb
jns
push
inc
idiv
jl
int
xchg
or
cmp
sub
ins
mov
sub
xchg
push
(bad)
imul
pop
fdivr
push
or
add
jns
(bad)
xchg
inc
mov
add
pop
cmps
add
js
xchg
jb
fs
repz
add
fisttp
pop
inc
retf
pop
mov
sar
loope
scas
add
loope
adc
test
xor
stos
xchg
cmp
or
or
push
mov
jb
stos
sbb
test
mov
cmps
dec
pushf
enter
inc
(bad)
(bad)
sbb
xchg
mov
rcr
push
and
mov
fist
xor
inc
hlt
repz
xlat
hlt
sti
cld
fmul
cld
push
rcl
ja
mov
retf
cmp
cmp
fdivr
push
jo
inc
dec
pop
jno
sar
inc
stc
adc
adc
rcr
pop
xor
add
jmp
xor
fild
(bad)
mov
pop
add
and
dec
scas
dec
hlt
jp
push
cli
cdq
inc
mov
aad
push
dec
dec
scas
div
daa
(bad)
int3
xchg
dec
int
lock
cdq
movs
daa
xchg
inc
iret
dec
push
and
(bad)
int3
and
iret
pop
dec
dec
pusha
adc
movs
movs
jo
xor
imul
lods
sbb
cmp
mov
jnp
loop
push
xor
dec
push
dec
or
jg
push
shl
in
dec
dec
push
sbb
cmps
sub
or
scas
pushf
mov
jne
inc
ror
fimul
inc
mov
ja
mov
and
stos
mov
shl
xchg
xchg
sti
mov
pop
cmp
mov
not
xor
stc
rcl
adc
or
outs
sub
test
xor
mov
fs
out
scas
xor
inc
or
imul
pop
dec
std
add
mov
int
mov
enter
push
fbstp
xor
js
test
test
jg
xchg
sub
into
mov
ins
jecxz
inc
rol
dec
retf
mov
addr16
pop
mov
inc
pop
add
and
xlat
jno
movs
push
ret
iret
rol
adc
push
ret
jne
jge
add
fwait
imul
lods
adc
inc
adc
imul
mov
cmp
dec
xchg
mov
aas
daa
and
outs
mov
ficom
inc
xchg
cwde
mov
adc
add
xchg
jnp
jne
mov
shl
dec
out
sub
inc
ins
inc
(bad)
int3
sar
lods
inc
xchg
bound
jl
cmps
sahf
xchg
mov
neg
lahf
repz
lahf
(bad)
ret
adc
stc
addr16
pop
or
mov
cvtpi2ps
lahf
popf
adc
xchg
nop
or
jne
nop
clc
inc
lods
jmp
repnz
ins
(bad)
(bad)
dec
mov
and
pop
xor
sti
cmc
mov
in
xchg
cld
fimul
es
push
or
cmp
cld
loop
(bad)
ja
shl
jno
mov
imul
repnz
dec
pop
mov
aad
outs
shr
xchg
outs
dec
xchg
scas
lahf
(bad)
xchg
rol
push
imul
popf
push
xlat
cmps
das
inc
push
(bad)
fdiv
loope
or
adc
test
push
pusha
pop
in
ror
inc
mov
aaa
lds
nop
cmps
add
inc
adc
(bad)
mov
sbb
cmp
jg
mov
jae
inc
push
jg
fwait
ja
gs
dec
loop
lahf
cmp
aaa
jo
jne
je
push
ds
xchg
dec
xchg
stos
or
sbb
aas
js
dec
js
pop
(bad)
sub
es
dec
test
enter
retf
daa
dec
adc
xchg
lock
push
cdq
mov
inc
mov
push
xchg
sahf
adc
or
add
push
cmp
dec
inc
dec
sbb
adc
push
mov
movs
push
inc
pop
dec
xlat
pop
leave
loope
fwait
mov
cmp
ins
(bad)
enter
or
fcomip
mov
mov
or
push
dec
sub
mov
jne
xchg
mov
jmp
call
push
sub
inc
xchg
add
(bad)
js
xchg
push
rcr
fmul
push
inc
mov
repnz
or
cmps
xchg
adc
mov
jmp
dec
fild
cmc
push
(bad)
daa
fist
and
cmp
dec
cdq
jns
fild
jmp
lock
sbb
mov
dec
retf
cmp
cli
push
xchg
and
push
jb
mov
fsub
in
cmps
dec
pop
(bad)
add
jne
mov
sbb
fistp
mov
jo
fadd
dec
nop
daa
inc
sar
mov
cmps
int3
and
hlt
loope
inc
mov
mov
call
push
adc
jne
xlat
fs
inc
push
dec
mov
jmp
mov
push
push
pop
dec
out
jl
dec
mov
push
repz
out
and
or
clc
or
mov
dec
imul
ds
add
pop
xchg
cmp
mov
ins
rol
addr16
dec
rol
jb
mov
or
dec
nop
push
jg
scas
adc
and
sbb
retf
inc
push
jbe
fldcw
dec
ficom
push
add
lock
push
pop
pushf
mov
dec
jo
inc
shl
out
add
mov
in
in
dec
ret
fild
aad
iret
adc
popa
jbe
xor
sub
rcl
pusha
jmp
call
mov
fnclex
das
cli
lahf
dec
int
push
xor
aas
cmp
xchg
and
not
ins
js
push
pop
imul
inc
sbb
push
add
out
(bad)
mov
hlt
mov
loope
jne
popf
nop
fbstp
xchg
pop
jge
cmp
ror
dec
adc
pop
call
inc
pop
fs
test
mov
dec
mov
ins
sub
cmp
dec
jle
ds
push
mov
xor
mov
jmp
popf
sub
jne
jecxz
or
dec
int3
(bad)
push
int3
push
nop
mov
pushf
jo
stos
add
cs
push
dec
(bad)
sub
jge
or
or
fsub
dec
das
mov
pop
cmp
pop
scas
(bad)
dec
scas
sub
dec
ds
shr
sbb
xchg
dec
aad
xchg
enter
and
inc
enter
scas
hlt
cmp
bound
lahf
dec
arpl
stos
ss
jne
ret
add
xchg
inc
lods
push
jl
dec
scas
inc
outs
xor
jne
fld
dec
xor
push
sbb
pushf
rol
push
dec
push
les
mov
mov
lods
push
shl
xor
test
pop
adc
push
jne
(bad)
js
jecxz
cmp
dec
push
inc
loop
or
push
inc
inc
adc
loopne
and
inc
dec
das
mov
cmp
(bad)
adc
xchg
aad
jp
xchg
inc
add
das
push
pop
sbb
xor
cmp
dec
and
dec
and
jecxz
jne
dec
sbb
iret
dec
test
adc
nop
and
push
popa
scas
mov
dec
popa
cdq
or
mov
mov
mov
and
push
cmp
rcl
sub
mov
cdq
or
mov
adc
mov
test
jp
ja
call
je
mov
push
shl
fcom
stc
jnp
xchg
add
mov
mov
(bad)
std
leave
push
and
out
sub
add
jne
sub
or
push
pop
dec
cmovbe
xor
loop
stos
dec
js
clc
lods
xlat
mov
add
mov
and
into
cmp
(bad)
popa
stc
in
inc
jnp
mov
or
sbb
loop
pusha
dec
add
mov
js
ret
iret
cmps
jg
mov
bound
xchg
dec
and
jp
add
dec
fwait
imul
lds
xchg
and
lea
push
hlt
mov
rcl
cmp
fimul
jns
sub
or
xor
mov
test
sbb
fsub
xchg
xchg
idiv
arpl
lock
mov
xor
repnz
pushf
or
dec
adc
push
add
and
jne
mov
mov
icebp
adc
mov
add
mov
dec
stos
test
add
dec
addr16
pushf
cmp
cs
pushf
jb
in
jle
and
push
inc
ss
push
hlt
pop
pop
fisub
add
lea
ins
mov
jne
adc
enter
pop
dec
popa
fstp
inc
bound
jmp
idiv
inc
dec
scas
jmp
dec
pop
les
sbb
inc
or
and
inc
call
sbb
xor
retf
adc
repz
nop
dec
test
xor
in
push
pop
inc
mov
fsubr
lea
(bad)
fldcw
cmp
dec
mov
cmp
and
push
(bad)
cli
push
pop
ds
cwde
adc
bound
or
mov
and
sti
dec
dec
aam
push
lds
inc
inc
cmps
sub
pop
lods
dec
popf
xchg
nop
mov
jge
dec
je
inc
dec
dec
and
inc
dec
dec
and
dec
jne
inc
dec
dec
and
dec
jne
inc
dec
dec
and
dec
je
inc
dec
dec
and
inc
dec
dec
and
inc
dec
dec
and
cmp
dec
and
lds
and
jbe
jge
push
jl
jl
jg
push
xor
jbe
jge
test
rcl
or
jle
test
cmps
daa
inc
sub
push
jge
jle
dec
jg
test
dec
push
or
and
jno
jl
hlt
sbb
jg
jg
and
dec
test
jns
add
and
jp
or
inc
xor
push
scas
or
in
pop
cli
sub
mov
stos
xor
sbb
test
jb
stos
js
pushf
sbb
test
pop
and
outs
test
cmps
lods
rol
pop
sbb
dec
test
dec
lods
data16
dec
pop
cmps
test
test
cld
lods
or
test
push
test
push
mov
js
scas
ja
add
cwde
mov
jg
xchg
inc
mov
pop
clc
test
test
dec
xchg
mov
scas
pop
jg
dec
pop
push
test
push
mov
lea
test
xchg
xchg
mov
pop
or
xor
lea
xchg
addr16
jns
mov
data16
pusha
xchg
imul
mov
ds
and
xor
push
push
mov
mov
lea
jbe
mov
test
jne
enter
push
ins
jne
inc
cmps
mov
jl
dec
jge
xor
jbe
dec
push
stos
jl
jl
jg
and
jbe
jge
push
jl
jl
jg
push
xor
cmp
jne
pop
and
jge
dec
ja
jle
test
stos
push
mov
dec
jle
test
dec
push
outs
jle
jle
add
cdq
push
sbb
(bad)
js
jg
test
jbe
pop
arpl
mov
cdq
pop
cmps
jg
jg
dec
or
jmp
pop
jg
adc
xchg
and
xor
adc
push
pop
(bad)
dec
test
iret
xchg
pop
mov
enter
pop
out
and
pop
mov
stos
(bad)
sub
pop
cmp
addr16
jge
test
test
inc
jge
jge
enter
jle
test
mov
pop
xchg
xchg
and
das
test
xor
scas
jbe
push
xchg
push
xchg
in
mov
sub
mov
es
cmp
ss
xchg
mov
inc
(bad)
retf
mov
add
test
aad
movs
mov
test
mov
push
mov
mov
mov
sbb
test
mov
xchg
dec
test
adc
jae
fwait
jl
dec
jge
and
push
int3
pushf
mov
jbe
jge
push
jl
jl
jg
push
inc
dec
movs
popa
popa
xor
scas
push
ja
mov
jge
dec
jle
test
cmps
fdiv
dec
push
or
xor
test
cmps
inc
ja
jg
push
jle
jle
xor
add
jg
test
cmps
iret
inc
adc
jle
dec
jg
test
push
jns
popf
pop
nop
jg
pop
pop
mov
cmp
dec
test
jns
and
gs
addr16
test
pop
lock
or
mov
dec
cmc
addr16
cmp
xor
ret
dec
stos
jmp
sbb
sub
dec
test
mov
lods
mov
lds
test
adc
test
mov
fidivr
dec
xchg
and
jp
pop
push
xchg
xchg
mov
pop
sub
xor
ror
mov
dec
sub
int
es
inc
mov
mov
push
mov
jecxz
dec
mov
imul
push
mov
aas
mov
push
dec
jne
inc
dec
dec
and
ja
(bad)
push
mov
repnz
jbe
sbb
jl
dec
jge
test
xor
dec
push
pop
jle
jle
cmp
ret
and
push
sub
js
jg
xchg
cmps
cmc
xchg
adc
mov
sti
add
add
dec
pop
bound
movs
and
jnp
sub
and
cmps
dec
movs
mov
test
pop
xchg
pop
mov
jnp
lea
mov
mov
mov
jle
jg
push
mov
mov
mov
push
push
jne
neg
push
ins
jl
dec
jbe
jge
add
xchg
dec
sbb
jns
dec
pop
cmp
sbb
stos
lods
jnp
and
add
mov
adc
outs
dec
jge
test
xchg
xchg
pushf
outs
mov
scas
in
cld
xchg
std
mov
pop
dec
dec
scas
lahf
xor
pusha
or
dec
nop
stos
mov
inc
mov
bound
mov
jle
mov
mov
sahf
movs
xchg
fdiv
pop
pushf
aad
inc
imul
inc
jg
push
out
dec
xor
cmp
mov
dec
adc
jbe
jge
jecxz
gs
jbe
jle
test
push
push
sbb
inc
jge
dec
jle
test
xchg
js
pop
pop
mov
inc
or
and
test
sbb
fbld
mov
stos
fild
call
adc
jne
movs
or
stos
mov
rol
sub
add
dec
stos
and
push
mov
xor
inc
dec
neg
rol
pop
scas
out
jg
dec
pop
cmp
mov
xlat
or
jmp
xchg
arpl
mov
or
jne
sbb
sub
xchg
or
mov
mov
or
jmp
adc
mov
inc
mov
mov
test
arpl
mov
shl
dec
mov
inc
iret
dec
and
dec
jg
push
mov
jne
jbe
jge
adc
lock
xchg
jle
jle
cs
test
fs
push
jbe
(bad)
jg
or
dec
test
and
and
stos
fs
and
test
pop
pop
xor
mov
dec
jns
mov
add
inc
out
adc
sbb
pop
pop
adc
mov
test
test
lods
bnd
test
mov
out
mov
pop
jne
xchg
mov
scas
dec
aas
mov
xchg
xchg
dec
mov
xchg
dec
fst
lods
mov
mov
mov
nop
dec
xor
and
mov
mov
adc
outs
fs
ret
mov
mov
(bad)
dec
push
and
jbe
jle
xchg
jge
push
out
dec
xor
stc
je
xlat
jg
iret
js
push
and
cmps
cmp
dec
jle
push
jle
jle
sub
js
jg
test
xchg
sbb
and
inc
push
jge
sub
dec
test
jl
jl
jg
lea
fstp
jmp
sbb
or
and
xor
(bad)
jle
test
cmp
sbb
dec
ja
pop
aad
int
stos
adc
fiadd
cmps
add
adc
test
add
mov
cmp
inc
xchg
cmp
test
jns
lds
jg
jg
or
add
and
or
push
test
imul
dec
mov
test
and
inc
outs
dec
inc
push
imul
outs
dec
inc
push
dec
xchg
dec
gs
ins
and
gs
ins
and
xor
add
add
add
xor
xor
xor
sub
xor
xor
xor
add
dec
jp
push
push
add
push
add
add
push
push
inc
push
gs
and
push
inc
aaa
inc
mov
lods
ror
add
ins
outs
arpl
cs
bound
add
in
in
sbb
or
push
or
clc
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
add
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
sub
mov
mov
mov
jmp
mov
add
mov
jmp
mov
add
pop
ret
nop
push
mov
sub
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
jle
mov
add
mov
mov
mov
mov
movsx
imul
mov
shr
add
add
mov
mov
add
mov
jmp
mov
add
add
pop
ret
data16
push
mov
sub
mov
mov
mov
cmp
je
lea
mov
mov
mov
mov
call
add
mov
mov
mov
mov
add
pop
ret
nop
push
mov
call
pop
ret
nop
push
mov
push
call
mov
mov
mov
add
pop
ret
nop
push
mov
push
mov
mov
mov
movzx
add
pop
ret
data16
push
mov
push
mov
mov
mov
mov
add
pop
ret
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
call
add
add
mov
mov
cmp
je
lea
mov
call
lea
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
shl
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
add
pop
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
mov
call
shl
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
add
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
mov
mov
call
cmp
jne
mov
movzx
mov
jmp
mov
add
mov
mov
add
mov
jmp
cmp
jne
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
call
mov
call
lea
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
jae
mov
mov
movsx
mov
mov
mov
xor
div
movsx
mov
sub
mov
mov
mov
mov
add
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
call
sub
cmp
je
mov
jmp
lea
mov
call
lea
mov
mov
call
cmp
je
xor
mov
mov
call
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
add
pop
ret
data16
push
mov
sub
mov
mov
mov
cmp
jne
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
cmp
je
jmp
add
pop
ret
data16
push
mov
sub
mov
lea
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
jle
mov
jmp
mov
cmp
je
mov
jmp
lea
mov
call
mov
mov
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
div
imul
mov
sub
mov
jmp
mov
mov
add
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
call
mov
mov
cmp
jae
lea
imul
mov
add
movzx
mov
imul
add
mov
mov
mov
mov
cmp
jae
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
add
movzx
mov
sub
mov
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
mov
movzx
cmp
je
jmp
mov
mov
add
mov
mov
mov
mov
mov
add
pop
ret
xchg
push
mov
push
push
sub
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
sub
mov
movzx
add
mov
mov
mov
movzx
sub
mov
movzx
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
movzx
add
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
xor
add
mov
mov
add
mov
movzx
add
mov
mov
mov
mov
movzx
cmp
jge
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
pop
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
add
mov
mov
cmp
seta
and
movzx
cmp
setg
and
movzx
and
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
sub
shr
mov
mov
mov
add
mov
cmp
je
mov
movzx
shr
mov
mov
movzx
and
mov
mov
sub
mov
jne
jmp
mov
add
add
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
add
mov
jmp
mov
mov
mov
sub
mov
mov
mov
add
mov
jmp
mov
movzx
and
add
pop
ret
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
add
add
add
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
call
sub
mov
cmp
jne
jmp
mov
cmp
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
cmp
je
mov
mov
mov
and
cmp
je
mov
mov
mov
and
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
jmp
mov
add
mov
mov
add
mov
jmp
lea
mov
call
cmp
jne
call
mov
cmp
jne
jmp
jmp
mov
add
mov
jmp
lea
mov
call
cmp
jne
call
mov
jmp
lea
mov
call
cmp
jne
call
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
cmp
jae
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
mov
cmovne
cmp
setne
and
mov
mov
and
cmp
mov
cmovne
cmp
setne
and
mov
mov
and
cmp
cmovne
cmp
setne
and
mov
mov
test
je
mov
test
je
mov
test
je
test
jne
test
jne
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
add
mov
add
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
lea
mov
lea
mov
call
sub
lea
mov
mov
call
mov
mov
lea
mov
mov
call
sub
mov
mov
sub
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
movzx
cmp
jne
mov
mov
add
add
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
lea
mov
call
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
mov
mov
call
add
mov
call
mov
add
pop
ret
data16
push
mov
push
sub
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
ret
nop
push
mov
sub
mov
mov
cmp
jge
mov
and
mov
sub
mov
mov
je
jmp
mov
sub
mov
jne
jmp
mov
mov
mov
mov
call
sub
mov
mov
or
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
or
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
add
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
add
pop
ret
data16
push
mov
push
call
mov
call
mov
add
pop
ret
nop
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
data16
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
pop
ret
bound
dec
and
add
pop
add
add
add
add
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
popa
xchg
aaa
cs
mov
jmp
jo
aam
nop
test
sbb
shr
or
inc
jns
inc
aad
loop
mov
lock
cld
pusha
into
pop
stos
rcl
lds
cdq
mov
cs
inc
call
test
call
jge
cmp
mov
imul
xor
dec
adc
push
jo
loope
not
mov
xor
sub
in
jmp
mov
ja
pop
push
clc
je
jmp
and
(bad)
(bad)
fnstenv
pop
ins
xchg
xchg
nop
pop
es
jg
push
jnp
call
xor
gs
popa
ins
mov
jbe
loop
fnsave
xor
add
xor
and
sbb
pusha
xor
and
jno
fimul
and
sub
inc
cwde
call
fisttp
or
aas
or
or
icebp
je
mov
jecxz
daa
call
sar
retf
stc
add
mov
les
scas
xor
cmp
sbb
xchg
cmp
std
cmp
ja
cmp
cli
mov
out
sub
push
mov
or
add
inc
cmc
lods
mov
pusha
sbb
xor
adc
push
(bad)
fcomp
es
jno
loope
push
pop
xor
or
push
jmp
out
nop
sahf
mov
outs
imul
mov
ins
xchg
sub
aas
add
test
dec
and
sbb
pop
sar
pop
xor
imul
sub
pop
cmp
fld
and
lock
push
popa
es
scas
in
imul
adc
sbb
ins
ret
or
pop
stos
pop
test
hlt
cmp
or
add
shl
jg
loop
scas
adc
js
sub
sahf
shl
sub
dec
adc
jmp
imul
loope
add
cld
pop
pop
je
pop
mov
mov
pop
mov
dec
aaa
add
fwait
out
je
push
dec
in
fs
mov
add
icebp
gs
add
jecxz
push
mov
scas
out
icebp
cwde
push
(bad)
jle
mov
enter
xchg
xchg
dec
pop
dec
pop
fist
mov
sbb
cmp
(bad)
pop
pop
jge
call
adc
mov
popaw
dec
stc
pop
dec
out
sbb
iret
or
mov
mov
(bad)
lods
scas
ror
ins
sub
xchg
ds
lahf
pushf
loope
sbb
(bad)
inc
out
xor
mov
cmp
push
gs
movs
leave
test
or
inc
bound
sbb
pop
jmp
fistp
out
sub
repz
mov
(bad)
aas
xchg
outs
adc
lahf
and
into
mov
or
scas
popf
mov
push
mov
mov
mov
mov
fsubr
inc
push
adc
stos
mov
cdq
and
sbb
cmp
test
ret
cmp
scas
bound
cld
push
mov
dec
aam
mov
leave
adc
out
std
jmp
inc
add
in
stc
out
into
xchg
push
cld
xchg
mov
outs
pop
sbb
adc
div
dec
dec
repnz
cmps
xlat
and
mov
xchg
pop
or
leave
dec
sahf
enter
ins
arpl
sbb
(bad)
pop
fstp
push
cmp
cmp
pop
in
mov
xchg
mov
cmp
mov
pop
in
cmps
adc
cli
clc
jge
(bad)
sbb
mov
jl
push
test
jbe
test
xchg
mov
push
aas
pop
inc
dec
in
cmp
mov
out
cmp
inc
sub
sub
push
pop
pop
call
sbb
mov
mov
xor
aas
call
sbb
cmp
outs
or
ins
cmp
jno
les
ss
test
les
movs
ss
dec
(bad)
scas
jbe
lock
leave
dec
rol
das
xchg
outs
stos
xchg
cld
xor
push
mov
cmp
aam
xchg
scas
aam
mov
cdq
and
pop
push
mov
icebp
and
dec
jno
jl
xor
push
mov
in
mov
rcl
test
sub
test
popa
pop
mov
stos
lahf
(bad)
jmp
jae
or
sti
and
sbb
xchg
pop
fmul
js
dec
in
xchg
xor
push
jno
in
iret
jmp
or
mov
shld
adc
(bad)
mov
sbb
sti
and
inc
int3
pop
mov
mov
out
mov
adc
sbb
cs
pusha
sbb
hlt
in
aad
addr16
jo
popa
cmp
inc
dec
(bad)
loop
jecxz
(bad)
mov
add
jmp
mov
and
aam
out
test
jne
popf
call
and
jns
sub
scas
mov
dec
jb
sbb
and
dec
mov
adc
cmp
sbb
mov
pop
dec
lods
pop
pop
aas
pop
les
and
lea
adc
cmp
cmp
dec
nop
call
push
jecxz
mov
jg
and
jns
or
ja
or
cli
add
mov
xor
leave
or
rcr
cmps
icebp
addr16
idiv
movs
cmp
pop
bound
push
jbe
sub
test
mov
or
les
daa
scas
out
jmp
pop
jle
inc
inc
mov
mov
xchg
shr
xchg
cmp
pop
lods
mov
(bad)
cmp
imul
pop
jmp
adc
mov
mov
mov
pop
jl
into
dec
mov
jae
imul
outs
dec
jecxz
sbb
dec
push
sub
sub
jl
fst
xor
mov
and
jecxz
hlt
xor
mov
movs
clc
mov
fadd
mov
lea
call
adc
mov
mov
push
cld
mov
pop
out
fucom
popa
fidiv
out
xor
xor
sbb
iret
out
imul
mov
pushf
or
pop
dec
outs
xchg
jb
dec
inc
bound
mov
imul
cmp
and
push
(bad)
stc
shr
out
in
inc
rol
(bad)
push
dec
(bad)
cld
mov
aas
int3
push
imul
jl
mov
sbb
xchg
rcr
and
rcr
sbb
mov
test
mov
(bad)
jecxz
xchg
sbb
cmp
or
rcr
lods
mov
mov
loopne
mov
(bad)
mov
mov
adc
sub
push
repz
mov
stos
ss
push
pop
mov
jmp
out
inc
and
(bad)
cmps
push
adc
cmp
dec
push
dec
aas
or
cmp
pop
stc
ds
mov
pop
xchg
int
add
(bad)
not
xor
inc
fwait
pop
call
div
sahf
scas
daa
pop
mov
int
mov
xchg
data16
inc
scas
outs
gs
mov
mov
mov
outs
cmp
pushf
pusha
and
fisttp
sub
cdq
(bad)
sbb
loope
or
jge
in
sub
push
or
adc
mov
out
pop
xor
sti
adc
icebp
cli
xchg
ret
scas
mov
movs
fidivr
movs
push
cmp
push
dec
pop
dec
es
xchg
and
mov
mov
movs
mov
repz
sbb
call
(bad)
push
jbe
les
stc
jle
sbb
das
push
ins
cmps
mov
sbb
fst
push
push
and
push
mov
std
ret
add
sub
div
push
in
dec
cmp
mov
test
int3
sub
retf
std
out
jge
xor
dec
stc
fistp
loop
sub
jle
pop
arpl
mov
dec
dec
in
addr16
mov
int
xchg
sti
ja
push
or
(bad)
pop
pop
shl
jnp
je
add
ror
dec
(bad)
jmp
out
jge
nop
out
iret
in
xchg
fwait
mov
in
mov
sbb
out
movs
pop
adc
lods
jp
clc
jns
cld
xchg
loopne
scas
dec
pop
jmp
daa
jmp
jno
mov
arpl
xchg
dec
push
shl
rcl
xchg
add
sub
jl
aad
into
(bad)
pop
jl
inc
mov
jbe
inc
push
mov
mov
movs
jb
aam
stc
dec
pusha
fnstcw
push
inc
mov
adc
xchg
test
pop
stc
lock
xor
fs
mov
cmp
mov
mov
inc
and
sahf
jnp
cmp
mov
call
adc
push
sbb
jmp
mov
xor
cmp
mov
inc
ret
mov
cld
gs
xchg
sbb
jg
jae
retf
push
popf
xor
dec
lea
cli
push
fadd
mov
and
lea
test
dec
popf
push
dec
aas
pop
sub
xor
sub
mov
fwait
out
pop
clc
and
leave
mov
sbb
jecxz
mov
fist
sbb
push
icebp
in
(bad)
push
es
or
xor
push
mov
sub
out
retf
or
push
pop
stos
scas
mov
or
pusha
movs
fld
xor
call
push
jg
push
xor
and
sbb
sub
jae
(bad)
mov
stos
repz
jp
push
xor
push
mov
inc
mov
mov
rcl
retf
leave
push
and
mov
out
retf
push
fbld
mov
xchg
loopne
fimul
adc
imul
aam
cmc
or
ffreep
xlat
and
popa
sbb
add
cmp
hlt
cmp
sub
mov
push
mov
dec
nop
cmp
pop
pop
outs
and
(bad)
in
pop
cmps
sub
fdiv
sbb
xor
inc
xor
push
ret
daa
adc
pop
push
mov
ins
push
aaa
xchg
inc
mov
in
cmps
or
or
push
gs
mov
out
mov
sub
jae
inc
adc
mov
and
xchg
out
jns
xlat
push
push
adc
stos
mov
add
shr
xchg
movs
jae
cmp
mov
aad
aam
sbb
cmps
fidiv
fcmovbe
in
imul
sbb
lods
push
lds
sahf
cmp
sbb
mov
xor
repnz
or
and
sub
mov
cld
popf
test
popa
mov
popf
push
or
call
leave
xor
sahf
ffreep
out
mov
lods
pop
xchg
pop
adc
or
xchg
pop
push
out
xor
pop
in
inc
and
xchg
adc
(bad)
sti
das
mov
dec
hlt
mov
sub
sub
fwait
add
enter
out
mov
inc
jp
repz
sub
pop
xchg
test
pop
adc
inc
cdq
fimul
adc
mov
mov
dec
mov
test
cmp
ret
lods
sub
push
es
dec
out
adc
mov
adc
fld
aam
and
add
test
pop
sub
add
loopne
int
fiadd
outs
sbb
adc
jae
mov
icebp
test
or
sub
pop
mov
xchg
sub
(bad)
cld
push
repz
xlat
xchg
sub
bnd
mov
push
adc
push
mov
les
mov
sbb
mul
lock
imul
iret
pop
in
inc
mov
xchg
cmp
cmps
dec
pop
retf
dec
lock
sub
(bad)
mov
sub
daa
lea
mov
inc
and
bound
out
repz
or
inc
and
push
retf
(bad)
int3
stos
or
sub
or
and
push
bound
enter
aam
sbb
int3
and
cmps
movs
je
sti
add
jb
mov
jne
(bad)
jnp
and
ret
or
inc
add
popf
fsub
push
xor
xor
and
movs
cmp
sbb
sub
addr16
dec
xchg
dec
push
adc
scas
lock
mov
pop
loope
popf
(bad)
mov
add
cli
push
call
(bad)
jo
jg
push
add
xchg
jae
cmp
in
sbb
inc
jo
movs
mov
pop
sbb
(bad)
rol
in
push
ss
mov
sar
mov
adc
stos
sub
sub
cmc
sub
cwde
(bad)
pop
sbb
adc
in
inc
mov
xor
jae
imul
mov
push
and
gs
mov
add
mov
and
not
sbb
fbstp
and
xchg
xchg
(bad)
jmp
lock
pusha
add
dec
mov
fcom
repz
xlat
and
cmp
in
xchg
enter
sti
(bad)
in
in
in
leave
push
xchg
dec
je
adc
xchg
add
pop
jbe
xor
or
test
aad
jo
pop
jne
sub
fistp
(bad)
sbb
sbb
add
sbb
sbb
add
dec
(bad)
scas
xchg
sbb
sbb
loope
ficom
(bad)
leave
rcl
add
adc
push
jg
add
enter
cmc
scas
pop
fdiv
dec
in
hlt
mov
pop
sub
test
ins
fnsave
push
push
sub
rol
push
xor
loope
add
mov
mov
mov
pop
test
loop
add
jmp
jb
pop
mov
mov
mov
push
or
nop
mov
iret
aas
xchg
mov
nop
psrlq
dec
and
loop
push
ret
repnz
les
and
lods
int
scas
mov
ds
xchg
das
dec
adc
arpl
adc
fs
add
xchg
sbb
dec
(bad)
jns
mov
and
jns
aaa
icebp
inc
xchg
popa
sbb
js
and
push
pusha
sbb
add
ret
jp
ror
not
call
sahf
mov
dec
sub
mov
call
inc
pop
fucomp
loopne
inc
or
outs
mov
push
aaa
sub
fldenv
jne
lods
(bad)
lock
test
mov
xor
push
add
and
add
scas
rcl
mov
xchg
jbe
movs
push
pop
mov
movs
push
mov
dec
jae
ret
call
xor
lahf
cmp
push
or
push
mov
adc
movs
adc
aad
pusha
(bad)
fucomip
and
and
repz
xchg
movs
jge
(bad)
jmp
mov
mov
inc
imul
xchg
dec
stos
or
shr
repz
xor
mov
hlt
and
mov
mov
jp
inc
pop
cmp
loopne
mov
scas
arpl
mov
mov
call
sahf
cs
out
pusha
jne
inc
outs
xor
and
sub
jge
xchg
jnp
test
and
shl
add
fwait
sub
push
jbe
or
and
rol
jne
xchg
test
pop
aam
(bad)
mov
add
dec
loopne
push
nop
stos
cwde
sub
dec
stos
jns
(bad)
imul
xor
iret
lahf
xlat
add
sbb
mov
in
stc
jb
ins
xchg
mov
out
ret
repz
mov
ret
mov
mov
pusha
cmp
mov
push
xchg
nop
push
enter
mov
xor
fs
mov
aas
(bad)
(bad)
pop
les
mov
cli
and
ss
dec
xchg
ss
pop
jecxz
stos
mov
(bad)
sbb
push
inc
repnz
pop
sub
xor
cmps
adc
mov
das
sub
lock
clc
pop
sbb
push
into
jp
shr
cwde
dec
pushf
push
or
cmp
xchg
inc
ins
xor
xlat
dec
sbb
mov
mov
xchg
jno
jb
sub
cmp
inc
push
sbb
cld
lea
ret
jecxz
pusha
xor
adc
aam
and
xchg
pop
je
inc
dec
cmp
dec
sub
and
add
xor
add
(bad)
or
test
adc
pop
mov
sub
jecxz
jns
sar
in
(bad)
sub
inc
call
dec
sbb
fsubr
jns
loop
pop
cmp
cmp
xor
add
cmps
add
mov
inc
fwait
xor
daa
fsub
pop
arpl
(bad)
fild
loope
adc
fild
fwait
mov
mov
jae
sbb
sub
idiv
adc
jbe
jnp
in
sbb
cmp
inc
ret
lea
add
dec
cmp
call
mov
ds
sar
inc
ins
xor
jge
jle
jae
sbb
xchg
mov
mov
out
sbb
inc
(bad)
and
int3
pop
pop
in
loop
or
pop
jns
out
or
stc
add
or
mov
add
sar
movs
fcomp
cli
adc
adc
pop
(bad)
cmps
out
sti
into
loope
cmp
mov
and
fcmovne
je
push
test
popa
gs
cmp
inc
ins
arpl
hlt
test
mov
mov
cmc
cmc
and
push
addr16
jbe
retf
sub
outs
add
imul
mov
std
es
sbb
sub
clc
or
into
stc
test
push
add
xchg
shl
daa
retf
(bad)
sahf
lods
into
call
pop
dec
shl
in
mov
push
mov
je
add
xlat
dec
shl
or
adc
ret
fwait
stc
adc
movs
sub
fs
gs
adc
stc
ja
loop
and
sub
in
mov
bound
js
xchg
adc
and
xchg
hlt
imul
dec
imul
sub
or
mov
outs
mov
xchg
jne
xor
jp
repnz
push
xor
mov
(bad)
add
aam
push
xchg
repnz
sub
stos
fidivr
pop
(bad)
mov
mov
hlt
dec
loop
test
jb
scas
jg
imul
adc
add
xor
mov
idiv
stos
rol
inc
retf
mov
sti
mov
into
inc
push
xchg
xchg
ret
data16
jae
fwait
dec
in
cmp
cdq
mov
sbb
mov
sub
pushf
fisttp
mov
out
loope
sbb
and
sub
mov
jmp
rdmsr
cmps
and
addr16
iret
mov
mov
inc
mov
fldenvw
jb
inc
jnp
push
sbb
in
cmp
push
call
push
xchg
pusha
retf
dec
sbb
or
xlat
popa
cmp
dec
mov
test
mov
jmp
cmps
idiv
push
mov
(bad)
push
xor
push
jbe
int3
adc
xchg
mov
imul
pop
inc
push
mov
xchg
or
push
test
pop
adc
sub
or
push
push
rcr
repz
call
bound
loope
fucom
popf
icebp
retf
dec
push
jecxz
loop
aam
push
inc
inc
repz
leave
or
aam
dec
jnp
cmc
sar
loopne
or
stos
sub
sbb
mov
sub
cmp
xchg
jle
pop
ret
pop
icebp
mov
(bad)
not
push
aad
pop
xor
lea
ins
jno
pop
xchg
mov
data16
loopne
xchg
push
adc
fmul
mov
mov
fidivr
dec
arpl
outs
outs
push
pop
mov
data16
jns
ret
not
es
add
cdq
sub
add
sub
retf
fsub
xchg
add
(bad)
test
aaa
inc
xchg
mov
xchg
mov
rol
jno
dec
sub
or
gs
(bad)
in
mov
dec
jle
cs
mov
sub
out
call
out
lahf
cld
(bad)
pusha
data16
xor
push
push
add
ror
mov
lahf
loopne
rcl
mov
adc
popa
in
clc
adc
mov
(bad)
dec
mov
and
sub
test
and
inc
add
int
std
lock
adc
sbb
sbb
cmps
adc
cmp
push
icebp
fimul
fwait
or
dec
sbb
sbb
leave
xchg
sub
movs
xor
je
call
cmp
fwait
or
cli
aaa
dec
pop
pop
cmp
mov
(bad)
loope
xor
dec
sub
sub
adc
test
push
push
sub
mov
jb
mov
enter
inc
pop
pop
in
sbb
aam
jae
pop
adc
push
dec
inc
mov
lock
adc
js
rol
mov
fwait
jo
popf
(bad)
gs
xchg
or
test
fisub
lods
sahf
xchg
mov
jnp
je
sbb
xor
movs
jbe
sbb
mov
inc
pop
inc
jp
(bad)
fidivr
push
inc
hlt
das
test
sub
pop
mov
sbb
int3
lods
jne
movs
xchg
xor
adc
ins
pushf
(bad)
xor
dec
fistp
cmp
xchg
jne
sub
lahf
push
mov
jle
push
mov
stos
xor
fwait
enter
and
nop
xchg
fdivr
fwait
imul
fs
and
test
mov
out
add
je
fstp
clc
jg
in
pop
dec
test
or
push
movs
pop
and
mov
xor
addr16
mov
test
leave
sub
sbb
mov
xchg
adc
aam
movs
stos
or
jae
repnz
mov
xchg
sbb
jmp
das
(bad)
pusha
fwait
popf
and
mov
adc
sbb
inc
sti
enter
jnp
adc
cmp
mov
and
inc
or
(bad)
push
pop
mov
xchg
pop
jmp
mov
inc
and
sbb
aam
and
cmp
cmp
movs
or
or
addr16
icebp
sbb
cs
cld
xchg
dec
mov
pop
add
bound
das
fbld
enter
cdq
adc
(bad)
popa
sbb
xchg
into
dec
je
fs
test
adc
adc
ins
xor
cmps
(bad)
scas
pop
jo
sti
pop
inc
addr16
icebp
add
pop
(bad)
cmc
push
add
addr16
movs
test
sbb
xchg
mov
add
sbb
jl
fiadd
cmps
sub
jae
cld
inc
jg
mov
lahf
mov
pop
mov
dec
lods
retf
cld
scas
sbb
dec
sub
dec
ds
leave
cdq
std
leave
sub
jne
cmp
add
and
js
push
push
and
shl
or
imul
ret
and
frstor
or
nop
scas
mov
or
das
in
jl
or
pop
adc
mov
aaa
push
mov
sti
push
lods
test
(bad)
aam
push
fnsave
dec
retf
cmc
push
adc
fistp
lods
mov
jmp
shl
imul
leave
cmp
fimul
cmp
inc
bound
(bad)
xchg
(bad)
push
pop
adc
mov
pop
add
icebp
jnp
stc
inc
out
inc
cld
daa
mov
mov
push
dec
xor
jnp
in
inc
cmp
cli
xlat
mov
pop
pop
dec
dec
push
pusha
jnp
mov
adc
mov
lods
test
and
loopne
gs
movs
cmp
jmp
loopne
jp
imul
outs
popa
mov
das
cmps
add
xchg
xor
mov
daa
and
call
mov
fcom
mov
add
pop
loope
pshufw
scas
adc
lock
mov
dec
inc
daa
adc
je
cdq
mov
in
scas
xchg
call
les
jae
(bad)
bnd
fdiv
cmp
push
inc
mov
repz
lods
ds
(bad)
mov
jne
loopne
enter
mov
cmp
in
cmp
fstp
jle
push
fistp
inc
adc
sahf
xchg
idiv
(bad)
outs
std
cmp
and
fimul
call
scas
dec
fwait
sahf
xchg
ins
mov
xchg
jmp
push
push
sub
dec
cmc
xor
push
pop
not
pop
gs
pop
sub
ror
xor
xlat
fsubr
fs
ins
mov
mov
shl
fs
add
out
shl
mov
xor
push
dec
pop
xchg
lahf
into
jbe
movs
cmp
scas
rol
or
pop
rcl
pop
inc
inc
lods
ds
push
aaa
movs
gs
and
rcl
or
xlat
cmps
rcr
pop
stc
aas
(bad)
mov
bound
xor
sbb
push
pop
sub
xchg
ret
popf
test
fdiv
push
mov
jb
dec
repnz
aam
adc
pop
inc
neg
mov
jo
scas
or
mov
pop
fwait
pop
int
xor
hlt
test
sti
pop
sub
or
pop
pop
pop
pop
into
cmp
pop
in
jg
sbb
add
in
and
xchg
xor
(bad)
sbb
retf
push
call
dec
jbe
addr16
adc
fistp
cmp
stos
push
call
test
mov
dec
pop
dec
and
lds
pop
movs
call
jnp
mov
push
lods
mov
call
adc
aaa
cdq
iret
cmp
inc
in
push
mov
shl
rcl
lods
or
cmp
cmp
inc
fcomip
stos
ja
mov
push
pop
loopne
pop
not
or
mov
mov
xchg
mov
fiadd
pop
(bad)
stos
jg
pop
jg
addr16
adc
mov
(bad)
retf
popf
mov
stos
xchg
icebp
in
std
mov
fdivr
es
cld
inc
jl
pop
bndldx
mov
ret
call
idiv
xlat
cmp
and
push
xor
fdiv
cmps
lds
test
popf
sar
dec
popf
add
cmp
mov
push
enter
pop
push
aad
jbe
cmps
dec
fidiv
or
hlt
mov
outs
loop
adc
mov
aas
sbb
cld
push
out
push
stos
xchg
dec
pop
call
jb
mov
ret
pop
aad
int
cli
mov
add
and
and
outs
or
test
sbb
xchg
sub
push
sahf
stos
cmp
pop
sub
(bad)
sahf
cmps
sub
xor
pop
fwait
jg
xor
ror
pop
sahf
pop
add
mov
push
jle
cmc
push
or
movs
push
(bad)
mov
loope
mov
sub
add
jne
mov
ret
jg
jae
cmc
out
pop
sub
adc
movs
dec
cmc
clc
jb
(bad)
outs
inc
jg
hlt
xor
mul
inc
pusha
(bad)
fsubp
pusha
jno
(bad)
fisttp
(bad)
cmp
dec
pop
or
dec
aad
lea
aas
lahf
xchg
shl
and
fwait
mov
(bad)
jns
lds
inc
pop
or
cmp
stc
movs
inc
int
das
stos
inc
mov
mov
jbe
xchg
fnstsw
inc
arpl
cld
in
je
dec
out
call
loope
push
nop
ja
sbb
mov
jg
or
adc
lods
mov
lock
lods
jge
inc
push
add
sbb
pusha
mov
adc
div
push
mov
int3
in
out
add
mov
sbb
jne
mov
lds
xchg
or
dec
in
imul
popf
out
push
sub
das
mov
fwait
jne
cmp
aam
mov
(bad)
ds
lds
or
cmps
pop
adc
test
xor
out
inc
add
mov
fist
cmp
pinsrw
adc
and
in
call
inc
push
(bad)
arpl
das
aaa
(bad)
lds
mov
push
pop
outs
cmp
enter
xchg
icebp
sub
adc
shl
mov
dec
int
jp
cmp
mov
or
push
repnz
xchg
mov
mov
mov
and
pop
cmp
adc
fiadd
cmps
cmp
jmp
inc
(bad)
push
fwait
mov
jns
outs
dec
xchg
cmp
jbe
movs
pop
test
xlat
mov
int
dec
xchg
je
aam
rcr
int
xchg
or
mov
xchg
das
call
test
aam
or
sbb
mov
stc
fdivr
cmc
push
ins
shl
pop
shl
(bad)
sbb
sbb
call
pop
repz
call
movs
loopne
sub
ins
push
lods
or
mov
leave
addr16
or
lods
mov
sbb
mov
xchg
jns
mov
cmp
fwait
in
in
dec
mov
sub
stos
inc
test
mov
das
test
or
push
lea
stc
xchg
push
ins
hlt
push
sub
or
push
shr
mov
inc
jg
fbld
iret
add
add
aas
aas
in
push
idiv
movs
inc
je
rep
and
icebp
cmp
test
cmp
sbb
mov
mov
cmp
mov
scas
push
jo
sub
scas
test
(bad)
sbb
sbb
cmp
mov
cmps
push
outs
push
xchg
sub
inc
cld
lock
push
repnz
jne
xchg
inc
(bad)
mov
adc
gs
loopne
or
adc
dec
push
imul
test
cmp
mov
ret
ret
and
test
ss
mov
or
mov
je
xchg
movs
xchg
out
sub
xor
loope
adc
xor
cmps
sbb
add
dec
push
addr16
dec
push
jnp
sar
pop
inc
lahf
xor
jb
push
popa
cmps
call
xor
push
jae
mov
addr16
inc
sub
xor
pop
push
call
and
lahf
test
shl
xor
mov
or
pop
in
retf
rol
push
(bad)
mov
cmp
inc
popf
dec
sub
(bad)
cmc
adc
xchg
lds
mov
loope
and
mov
inc
stos
cmp
jae
xchg
adc
push
cmp
mov
jae
stc
push
mov
aas
retf
jnp
push
push
call
jmp
and
bound
rcl
fsubr
cs
rol
out
pop
sahf
loop
fimul
aam
push
call
mov
int
aas
retf
les
sub
pop
add
les
lock
dec
inc
adc
xchg
sbb
in
or
jle
sbb
fld
test
sub
mov
popf
mov
xor
bound
repz
movs
outs
jp
add
push
jl
hlt
xchg
sub
sbb
movs
mov
cmp
cmp
ret
or
das
mov
mov
pop
pop
ss
push
add
aaa
stc
mov
dec
inc
xchg
cmp
sbb
pop
stos
mov
adc
pushf
loopne
bnd
rol
mov
cmp
sbb
std
mov
sahf
sbb
cmp
rcr
sub
fist
retf
jge
(bad)
cmps
jle
call
fldenv
inc
mov
jb
and
repz
push
ins
xchg
fimul
mov
shr
sar
cmp
jbe
push
xor
lahf
jg
xor
mov
neg
pop
xor
int
cmp
push
and
jge
jmp
jnp
shl
stos
pop
mov
xlat
or
repnz
sbb
fs
adc
push
xchg
movs
les
mov
mov
inc
xchg
jne
int
or
add
fsubp
lea
push
lahf
mov
jmp
dec
gs
push
aad
pop
imul
loopne
movs
pop
mov
fld
(bad)
adc
scas
jmp
repz
jmp
jb
outs
es
gs
popa
push
adc
loopne
sbb
mov
daa
loopne
(bad)
jmp
mov
push
mov
es
mov
into
lahf
in
sar
adc
mov
outs
or
(bad)
dec
mov
inc
out
xor
pop
inc
xchg
inc
iret
mov
nop
aad
icebp
addr16
shr
cmc
dec
lea
xchg
es
inc
adc
in
js
inc
aad
xchg
leave
sub
rol
xor
in
popa
jmp
call
mov
in
ins
test
shl
push
push
mov
xchg
dec
jo
sahf
fstp
cli
jae
pop
outs
mov
sbb
dec
sbb
stc
cdq
mov
pushf
cmps
mov
xchg
aaa
pop
add
hlt
js
ss
cli
inc
in
dec
xchg
test
dec
add
adc
outs
and
jno
or
cwde
xchg
pop
mov
das
test
sub
hlt
cmp
cmp
push
xor
sub
jae
pop
ror
aas
imul
je
xchg
push
inc
jl
pop
mov
fs
leave
dec
rcr
jo
mov
aaa
dec
test
cdq
mov
ror
cmp
fisubr
aas
pop
adc
retf
push
dec
xchg
fwait
push
(bad)
pop
dec
(bad)
push
add
(bad)
xchg
inc
arpl
mov
in
jae
fxch
push
arpl
xor
ss
in
outs
or
cli
data16
mov
and
adc
cmps
lea
mov
cs
pop
dec
ficom
jp
pop
sub
mov
jg
les
pop
repnz
jo
sub
rol
test
ret
lahf
add
jp
mov
rcl
(bad)
xor
cmps
sub
xchg
jmp
pop
adc
adc
mov
(bad)
les
mov
mov
shl
je
pop
sub
or
pop
sti
mov
dec
mov
hlt
and
div
test
or
xchg
sar
cmps
mov
in
add
jo
scas
push
imul
aam
dec
mov
lock
imul
ds
movs
popf
fs
xor
push
pop
cmp
addps
and
xor
add
sub
and
rol
sub
rcl
imul
aam
sub
ja
jno
les
jno
retf
xor
jmp
mov
int
es
push
and
aaa
push
into
aaa
(bad)
(bad)
popa
lds
and
mov
dec
pop
push
pushw
mul
mov
ds
test
loope
inc
scas
push
pop
(bad)
cld
(bad)
pop
mov
fldl2e
sbb
add
test
xor
das
fisub
cmc
jmp
sub
mov
sub
and
xchg
xchg
(bad)
inc
xor
cmp
ror
test
lahf
sbb
shl
sbb
sbb
sbb
and
es
je
push
pop
repz
outs
pop
pop
aad
sar
cmp
jecxz
pop
inc
ins
sahf
addr16
js
repz
inc
mov
adc
ret
dec
loope
cmp
scas
and
fmul
push
aam
daa
fbstp
pop
(bad)
retf
out
sbb
sar
push
cs
dec
movs
and
pop
mov
or
out
imul
sbb
xchg
vmovd
sub
movs
pop
ja
or
nop
sub
loope
inc
dec
lea
adc
mov
stos
or
aas
das
std
out
ficom
jbe
adc
fsub
dec
(bad)
retf
and
dec
pmaxsw
mov
cld
sbb
cs
fs
ret
xor
inc
addr16
mov
outs
out
jecxz
xchg
inc
aam
dec
push
mov
js
inc
dec
cwde
cmp
cmp
sub
loope
movs
dec
inc
inc
mov
not
aam
js
pop
and
retf
mov
dec
mov
addr16
(bad)
mov
ret
nop
dec
push
lahf
and
sbb
retf
jmp
hlt
test
or
or
cmp
xchg
call
add
mov
ret
cs
jmp
call
add
pop
jcxz
sti
mov
push
dec
jno
xlat
jne
(bad)
daa
jmp
mov
sar
fistp
(bad)
cs
cmp
dec
mov
repz
dec
test
ss
pusha
aaa
mov
jmp
imul
push
xor
add
aaa
jno
or
or
adc
sbb
jnp
jno
retf
sti
inc
in
pop
pusha
push
inc
pushf
dec
jmp
cli
xor
out
js
repz
imul
or
fidiv
ret
jge
not
mov
call
jo
scas
jmp
cmp
dec
scas
push
mov
js
xchg
ret
mov
or
mov
jle
push
push
dec
add
fsubr
push
out
mov
(bad)
movs
mov
cs
int
xlat
xor
shr
stc
jae
or
(bad)
mov
xchg
dec
pop
outs
push
jns
xchg
out
pop
dec
push
cld
out
loope
jl
shr
prefetch
dec
adc
push
xchg
leave
or
cdq
cmp
jbe
in
sub
mov
cmc
xlat
imul
div
inc
add
jge
stos
dec
dec
mov
inc
xor
push
mov
stos
inc
mov
sbb
add
pop
ficomp
jae
popw
pop
popf
push
sahf
(bad)
loope
inc
lds
loope
pop
repnz
clc
adc
inc
pop
shl
mov
daa
aas
sti
cmp
jno
(bad)
sar
repnz
jl
or
loop
inc
add
inc
cmps
ins
lea
cmc
xor
jne
popf
mov
jmp
stc
sahf
or
mov
cmp
(bad)
data16
jmp
ror
fidivr
push
pop
inc
(bad)
in
or
adc
in
xchg
cmc
push
(bad)
in
in
dec
sbb
pop
cmc
aas
inc
mov
jne
or
and
shr
out
cmp
pusha
push
out
dec
mov
and
add
inc
add
add
push
cs
or
ror
jns
inc
pop
idiv
fistp
stos
inc
je
stos
mov
or
test
xchg
daa
mov
xor
cmp
ds
xchg
mov
push
xchg
mov
sub
test
jecxz
movs
rcr
data16
neg
jmp
hlt
sbb
iret
in
mov
push
arpl
shl
pop
je
fadd
add
pop
jecxz
ins
mov
mov
stc
sbb
dec
dec
cs
ss
inc
stos
jmp
sbb
lock
xchg
xor
jno
fs
sub
mov
les
movsx
pop
xor
xor
mov
sbb
rcr
fisub
js
in
sub
mov
aam
retf
push
push
jp
sar
fimul
(bad)
imul
rcl
test
cmp
(bad)
mov
and
adc
push
push
add
push
inc
mov
mov
jl
mov
bound
cmp
jae
(bad)
lock
sbb
jnp
adc
fwait
xlat
mov
retf
push
sbb
mov
pop
mov
lods
retf
cmp
mov
inc
or
rcr
sti
repnz
push
std
test
cmps
lahf
retf
stos
loop
stos
dec
inc
dec
or
adc
pop
mov
adc
and
rcl
lock
push
stos
scas
xchg
(bad)
stc
mov
dec
and
repz
mov
inc
div
aas
fist
lods
dec
fsubp
add
daa
mov
loope
shl
out
mov
aaa
push
and
xor
test
jae
inc
or
fs
sbb
pop
jge
pop
adc
(bad)
cwde
fcmovne
data16
mov
in
call
and
mov
xor
retf
inc
adc
mov
fwait
cmp
pop
out
push
adc
dec
retf
arpl
xor
sti
sbb
call
sahf
sahf
mov
repnz
jle
je
push
xchg
rcl
and
idiv
mov
jbe
push
iret
mov
int
jp
pop
scas
(bad)
es
iret
or
clc
lds
ds
push
in
or
sbb
xor
inc
mov
loopne
sub
sub
div
cmps
inc
mov
ds
sub
mov
out
mov
dec
in
mov
(bad)
sub
sub
add
popf
jmp
loopne
ins
jnp
pusha
mov
and
popa
jmp
mov
pop
(bad)
dec
inc
popf
adc
retf
xor
push
sbb
xor
lods
fs
dec
addr16
xor
inc
cmps
addr16
mov
out
(bad)
cs
push
push
sahf
sub
ja
fs
test
mov
lds
or
cmp
add
call
add
dec
sahf
xchg
mov
adc
mov
sub
test
xchg
and
ss
fisttp
repz
xchg
mov
imul
in
sub
mov
and
and
dec
xchg
adc
adc
push
mov
or
push
fs
mov
fistp
xchg
(bad)
mov
mov
pop
push
jne
movs
sub
or
int3
pop
int
cmc
not
idiv
mov
pop
dec
ss
ret
out
push
add
in
jb
jbe
add
outs
dec
mov
xchg
sub
adc
ja
jno
mov
out
xchg
adc
(bad)
ds
test
mov
adc
add
sbb
jl
inc
out
frstor
aad
xlat
ret
cmp
cld
or
sti
movs
cmp
cli
aaa
sti
cld
test
jne
adc
push
adc
enter
mov
(bad)
out
jle
push
adc
mov
fucom
xor
mov
stos
push
push
pop
and
pop
xor
sub
das
dec
adc
data16
mov
dec
loopne
add
lock
imul
test
jmp
or
add
push
pop
or
fiadd
fcomp
nop
mov
push
(bad)
jl
not
fwait
cmp
inc
bound
cmps
mov
les
mov
mov
aam
repz
lea
pop
cmc
mov
retf
mov
cwde
std
clc
jecxz
sbb
mov
dec
add
pop
sbb
ror
push
popa
stc
loop
in
stos
pop
push
mov
bound
mov
mov
pop
ins
pop
mov
sub
fld
hlt
call
imul
mov
in
xor
jl
jbe
out
mov
mov
or
fisttp
adc
sbb
fdiv
cmp
cmc
sbb
and
cmp
jae
int
fiadd
fdiv
call
aad
push
inc
inc
push
js
and
pushf
inc
xchg
pop
adc
jb
imul
popf
mov
inc
fisub
out
or
xor
clc
xor
jg
dec
push
and
std
pop
mov
out
mov
sub
movsx
sub
or
pusha
nop
dec
push
fcom
lds
rcr
mov
addr16
scas
pop
clc
or
inc
lock
js
test
inc
sbb
mov
dec
inc
aam
loop
pop
movs
ret
dec
fwait
jnp
jl
xor
dec
pusha
pop
iret
fist
cmp
mov
cmp
daa
jnp
inc
push
retf
mov
adc
xchg
jbe
ins
push
leave
les
sbb
cwde
fdivr
add
jb
outs
out
sub
stc
fnstenv
add
sbb
mov
sbb
(bad)
mov
sub
(bad)
xchg
dec
fisubr
push
cmp
stc
ins
lods
or
mov
movs
inc
xor
stos
add
das
or
loop
(bad)
outs
push
push
out
xchg
je
mov
int
int
xor
out
(bad)
jp
mov
mov
cmps
mov
push
sub
push
xor
jne
sub
loope
call
jl
shr
jbe
aas
test
dec
xor
fld
cmps
lock
pop
retf
and
mov
sub
rol
pop
adc
retf
pop
mov
jmp
out
cmp
gs
pop
repnz
js
(bad)
repz
adc
jns
xor
loope
dec
mov
ror
push
sahf
add
jl
sti
mov
xchg
sbb
mov
jbe
sbb
(bad)
stc
adc
push
test
cmp
mov
mov
neg
push
sub
imul
les
or
into
out
out
xchg
lods
iret
or
add
mov
lods
cmc
jae
bound
fsubr
fstp
adc
jp
jno
and
jmp
inc
loope
test
pop
and
ror
lahf
aad
cli
sub
xor
call
shr
dec
stos
mov
stos
jp
fsubr
arpl
nop
xor
dec
inc
inc
jb
jmp
mov
xchg
inc
test
xor
push
or
or
add
(bad)
jge
xchg
jg
das
aam
out
or
imul
sbb
inc
aad
stc
call
(bad)
and
imul
fs
add
ds
retf
in
ins
push
int
scas
loopne
push
ret
and
data16
adc
mov
add
cmp
pop
add
je
jbe
nop
arpl
or
pop
jg
jmp
jg
test
mov
sub
inc
(bad)
fistp
sub
and
loope
sbb
mov
mov
clc
mov
leave
shl
cld
push
inc
pop
das
mov
fbstp
xor
cmps
jb
mov
pop
adc
xchg
out
sub
jne
xchg
movs
sub
mov
jbe
dec
mov
and
das
call
inc
(bad)
inc
add
and
not
addr16
mov
sub
fld
into
fcomp
test
jp
fcom
jle
mov
fstp
jns
inc
or
js
cmp
cmps
sbb
mov
add
sbb
in
imul
and
inc
lods
movs
sub
mov
sbb
and
je
add
data16
adc
add
imul
lock
sbb
xchg
pop
pop
in
push
sbb
test
jecxz
dec
and
test
inc
iret
adc
xchg
std
fistp
gs
outs
mov
iret
pop
cdq
jmp
and
mov
in
or
shr
test
xor
add
jmp
cmp
stc
push
es
jnp
nop
dec
movs
jmp
mov
xor
lahf
mov
ret
sbb
out
lods
push
ins
adc
out
and
inc
mov
mov
ins
jo
mov
mov
xchg
fisttp
daa
inc
adc
sti
sbb
mov
out
cmp
sub
jmp
clc
jmp
retf
add
shl
sbb
add
out
ja
cdq
jmp
lea
mov
pop
(bad)
rcr
adc
mov
sub
inc
in
imul
dec
jne
jp
in
fnstenv
jo
mov
sbb
add
arpl
test
pop
cmc
cwde
push
pop
mov
or
hlt
pop
es
jle
add
nop
mov
fwait
sar
xchg
leave
pop
scas
jno
sub
cmp
leave
mov
into
inc
test
xor
test
cwde
test
mov
xchg
(bad)
mov
cwde
repz
dec
adc
mov
popa
popa
test
pop
dec
daa
dec
jecxz
cmps
pushf
push
jnp
leave
ins
sbb
pop
sti
dec
fwait
inc
jmp
iret
int3
adc
sbb
mov
jle
test
fdiv
rcl
data16
dec
out
jo
cdq
repz
test
push
adc
test
sub
ins
mov
jno
xchg
adc
add
mov
test
cmp
outs
fild
pop
dec
jae
(bad)
jns
mov
pavgb
xor
in
fsub
pop
lahf
jecxz
or
jo
inc
enter
cmp
mov
mov
push
mov
xchg
ins
fwait
bound
cmp
out
add
js
xchg
push
xlat
xchg
test
push
bound
rol
ins
pop
ficomp
les
xchg
jb
shl
shr
xchg
or
ret
imul
add
js
xchg
mov
push
and
push
push
jl
pop
fidivr
(bad)
xchg
and
mov
jno
push
cmp
push
push
mov
push
pop
mov
cmp
adc
push
scas
ins
(bad)
jmp
xchg
icebp
pop
(bad)
mul
push
in
mov
inc
inc
xor
add
call
ins
scas
out
sti
mov
dec
push
push
push
xor
adc
icebp
or
or
out
dec
lock
adc
mov
inc
and
xchg
mov
call
or
arpl
int3
push
ret
pushf
popf
and
stos
mov
nop
jmp
pop
call
jno
outs
jp
fadd
pop
ja
in
int3
jno
and
(bad)
icebp
adc
stc
fwait
adc
inc
xor
jge
add
sbb
sbb
push
adc
shl
aaa
mov
xlat
jo
sub
xor
or
mov
clc
lds
xchg
xchg
pop
pop
mov
or
sar
push
popa
add
retf
mov
enter
cmps
test
ins
mov
pop
pop
add
mov
xor
mov
cwde
sbb
rol
jmp
or
mov
adc
cmps
pop
retf
in
pop
int
test
push
jle
aad
arpl
fst
mov
jbe
inc
pop
lahf
cwde
jmp
test
js
xchg
xchg
int3
lds
loope
jae
cmc
add
pop
or
pop
xchg
stos
add
das
fist
jg
sub
leave
fiadd
cdq
jp
mov
xor
pop
lods
cmp
mov
xchg
add
out
(bad)
stos
sbb
aam
xchg
push
sbb
xchg
cwde
or
mov
mov
push
mov
inc
xor
jmp
out
mov
sub
cmp
pop
jns
push
test
call
mul
jae
ja
lods
aas
dec
push
ja
in
rcl
repnz
ror
jge
push
js
jp
fs
(bad)
outs
movs
mov
call
(bad)
fldenv
lock
out
mov
xchg
or
ret
add
iret
rol
pop
lock
movs
cmp
shl
retf
inc
cld
jge
cdq
push
loope
add
(bad)
mov
mov
inc
mov
mov
shr
push
ss
nop
mov
jns
fbstp
out
push
jge
push
in
mov
and
cmc
push
rcl
and
cmp
sbb
popa
(bad)
inc
fwait
je
xor
xor
and
test
loop
xchg
and
pop
xchg
das
sbb
imul
sbb
mov
cmp
dec
push
scas
(bad)
int
and
sbb
test
inc
cmp
stos
mov
cli
or
enter
mov
out
cmc
adc
mov
movs
leave
push
lods
mov
outs
or
xor
ins
mov
loop
xor
dec
sbb
sub
inc
mov
push
jo
sbb
ja
pushf
aas
jl
stos
adc
xor
enter
(bad)
imul
lea
arpl
repnz
push
inc
movs
jbe
and
xor
mul
sbb
cs
xchg
pop
mov
dec
ret
mov
lds
pop
sbb
dec
call
sbb
xchg
inc
repz
xlat
sbb
sub
xor
scas
ret
xor
mov
rdtsc
inc
xchg
sub
lock
sbb
push
adc
popf
dec
rol
adc
fwait
xor
inc
outs
xor
mov
jg
(bad)
and
stc
(bad)
sbb
xchg
lods
dec
popaw
cli
iret
mov
push
jo
push
fstenv
aas
cs
jecxz
lods
xor
mov
sbb
dec
fldl2t
fld
clc
cmp
mov
sbb
push
inc
or
movs
xor
call
pop
scas
ss
inc
outs
xor
pop
inc
cwde
hlt
jo
add
cdq
cli
jecxz
and
pop
fwait
retf
xchg
or
dec
sahf
inc
pushf
in
sti
test
or
stc
add
cmps
push
gs
jbe
or
bound
(bad)
ficom
mov
adc
ja
jo
push
lods
out
sub
dec
pop
mov
push
sub
xor
jmp
add
test
push
mov
(bad)
sbb
test
and
jmp
loope
aam
dec
or
rol
enter
jae
push
xor
mov
dec
inc
out
dec
inc
sub
(bad)
shl
push
jle
cmp
loopne
(bad)
pop
mov
or
sub
push
xlat
daa
js
stos
stc
std
scas
mov
into
jge
jo
nop
sub
loop
xor
jae
in
cld
adc
es
jmp
sub
and
jnp
mov
and
cmps
aas
or
out
and
dec
adc
ds
jge
push
scas
pusha
xchg
sub
lods
(bad)
aaa
ror
inc
mov
or
add
push
in
mov
xchg
xchg
xlat
dec
call
js
test
xchg
imul
(bad)
xor
inc
jmp
add
xor
enter
ins
adc
xor
or
dec
sbb
ror
pop
fnstsw
sbb
xor
or
fstp
std
repnz
jmp
jb
dec
rol
jnp
pop
add
int
adc
sbb
sbb
xchg
fiadd
pop
cmps
xor
cmps
repz
ret
jmp
adc
out
sub
repz
std
dec
jp
pop
or
adc
or
xchg
pusha
leave
add
fld
adc
pop
psrlw
shl
xchg
push
int3
sahf
(bad)
sub
push
add
mov
push
inc
xchg
push
sti
loop
imul
adc
sub
mov
adc
fdivr
push
cdq
dec
mov
add
or
adc
nop
mov
mov
int3
popa
gs
aam
xchg
rol
fst
test
ud0
mov
ror
cmp
fadd
sub
test
(bad)
out
xor
sub
cwde
movs
xor
sub
mov
cld
lea
mov
icebp
retf
ror
mov
push
fcmove
xor
cld
cld
(bad)
fcmove
jp
(bad)
js
aas
push
sbb
fs
xor
xchg
cdq
jo
pop
ins
and
inc
or
xchg
cmp
lock
adc
inc
arpl
aad
outs
fwait
push
arpl
pop
(bad)
mov
jmp
jge
cli
dec
mov
push
push
sub
mov
xor
cld
clc
repz
loope
aaa
iret
sbb
ret
sbb
(bad)
int3
pop
cld
pop
mov
mov
imul
repnz
pop
mov
into
out
mul
(bad)
pop
mov
inc
mov
sbb
add
stos
pop
adc
ret
cdq
cmp
outs
repnz
inc
(bad)
leave
in
add
jno
xchg
push
adc
(bad)
cwde
cwde
or
out
add
add
popf
and
push
inc
inc
(bad)
int
add
cmp
mov
or
jg
and
fisub
test
repz
push
or
mov
add
je
out
xchg
clc
mov
cmps
push
enter
outs
aas
or
arpl
ja
loop
sbb
call
pop
call
cdq
pop
lods
dec
rcl
ret
shl
int
cdq
xor
cmps
xchg
mov
daa
push
mov
dec
clc
les
sahf
push
je
mov
lock
sub
push
jns
inc
adc
aaa
jmp
mov
push
outs
or
dec
outs
imul
repz
dec
cmc
xor
mov
xchg
dec
ins
jmp
sub
cdq
dec
icebp
push
adc
xor
ins
xor
dec
jo
in
or
cmp
sub
jp
xor
pusha
add
pop
sbb
hlt
fisubr
pop
js
pop
dec
aad
add
sti
or
in
call
mov
cmps
mov
adc
cmp
mov
ret
dec
scas
push
mov
cmc
add
call
xchg
push
fistp
jae
inc
ficomp
retf
pop
movs
pop
mov
aam
or
lods
or
test
scas
sbb
(bad)
nop
and
xchg
mov
sbb
(bad)
addr16
retf
xlat
ror
push
bound
push
pop
jns
retf
imul
xor
and
push
stos
add
ret
retf
call
mov
aad
pop
mov
enter
cli
mov
loop
xchg
and
call
mov
jle
sbb
sub
arpl
sub
rcr
jno
pop
in
sbb
das
adc
mov
stc
(bad)
cmp
and
fidiv
gs
movs
sub
dec
inc
(bad)
cmc
add
sbb
mov
push
repnz
fiadd
pop
(bad)
xor
mov
cmp
adc
das
repz
fnstenv
mov
cld
pop
adc
rcr
mov
xchg
(bad)
jl
ss
fs
sbb
dec
fmul
pop
data16
mov
pusha
push
inc
aam
pop
xchg
sub
dec
and
sub
jl
arpl
sbb
ins
mov
stc
in
enter
lds
adc
test
xor
adc
cmp
or
or
jmp
or
xchg
push
leave
clc
cmp
jg
inc
jbe
test
inc
ss
popf
inc
int
xor
fidivr
push
xor
rcr
in
out
out
mov
fldcw
xchg
daa
mov
cmps
rol
lods
daa
xchg
not
leave
xchg
push
outs
(bad)
int
bound
cmp
inc
(bad)
into
and
rol
sbb
adc
sub
mov
test
mov
cwde
push
or
icebp
out
xchg
add
mov
ja
fs
mov
cmp
add
imul
cmp
dec
mov
adc
fcmovbe
addr16
add
add
dec
jo
pusha
addr16
pusha
push
in
ret
mov
popf
pop
outs
sbb
mov
adc
enter
movs
ss
jp
aaa
jb
or
mov
push
repnz
daa
icebp
movs
mov
(bad)
repz
dec
sahf
imul
js
out
sbb
push
retf
add
and
test
clc
adc
imul
ja
dec
dec
arpl
mov
mov
jecxz
or
aaa
cmp
mov
inc
mov
mov
(bad)
ffreep
cld
sbb
sbb
in
sub
aam
(bad)
loop
in
mov
pop
add
add
add
add
add
lods
adc
add
cld
add
cmp
add
add
add
push
add
add
add
add
add
movs
adc
add
add
add
add
add
adc
add
add
nop
add
add
add
mov
adc
add
cli
add
sbb
add
add
add
sub
add
xor
add
push
add
add
add
add
clc
add
add
add
es
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
jle
add
add
add
loop
add
enter
test
add
cwde
add
add
and
add
cmp
add
dec
push
add
fs
add
js
add
mov
add
xchg
push
add
mov
push
add
retf
add
pop
add
fiadd
add
clc
push
add
or
add
add
add
inc
std
add
add
add
call
cld
add
fdivr
add
add
add
in
add
pusha
std
add
js
add
mov
add
mov
std
add
enter
loopne
add
in
std
add
cli
std
add
adc
add
inc
add
add
pusha
inc
add
add
(bad)
inc
add
inc
add
inc
add
add
pop
inc
add
add
inc
inc
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
outs
add
add
add
call
add
add
add
add
pop
add
add
add
cmp
add
push
add
add
add
inc
add
jmp
add
add
add
add
pushf
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
and
add
cmp
add
push
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
add
add
add
pushf
add
je
jb
arpl
jae
add
mov
ins
jae
jb
jo
outs
inc
add
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
pop
add
je
jns
inc
outs
ins
outs
jb
leave
add
fs
outs
jne
aaa
add
je
outs
jne
je
ins
dec
outs
outs
push
add
push
push
inc
push
xor
cs
ins
add
imul
gs
gs
arpl
popa
jo
add
dec
xor
cs
ins
add
add
imul
gs
dec
outs
push
imul
inc
jae
popa
jo
arpl
ins
popa
inc
jne
fs
add
inc
jae
gs
imul
dec
outs
outs
add
inc
jae
imul
jae
add
push
add
gs
gs
imul
outs
inc
add
sbb
inc
jae
jb
gs
arpl
ins
popa
inc
jne
fs
popa
jo
add
push
add
outs
inc
imul
inc
jae
popa
imul
outs
inc
add
sub
inc
jae
imul
inc
outs
jb
gs
gs
add
sbb
inc
jae
jb
gs
jo
inc
jb
popa
jns
add
add
imul
inc
jae
gs
imul
inc
add
adc
inc
jae
jb
arpl
jo
push
add
inc
jae
gs
imul
add
add
imul
gs
dec
outs
push
imul
inc
jae
popa
imul
jae
ja
jb
inc
jb
fs
je
popa
ins
jae
add
cmp
inc
jae
jne
je
push
outs
push
popa
ins
jne
inc
add
adc
inc
jae
jb
gs
outs
ins
popa
imul
outs
ins
ins
gs
outs
outs
push
add
inc
jae
gs
outs
ins
popa
imul
outs
ins
ins
gs
outs
outs
inc
add
sbb
gs
outs
ins
popa
imul
outs
ins
ins
gs
outs
outs
push
add
inc
add
gs
imul
add
add
jb
gs
popa
jae
ja
jb
inc
jb
fs
je
popa
ins
jae
inc
add
gs
imul
imul
inc
push
pop
add
jb
je
inc
arpl
jne
je
jo
inc
add
dec
add
gs
imul
je
push
gs
add
push
add
outs
jno
outs
je
push
outs
push
popa
ins
jne
push
add
dec
push
inc
push
inc
push
dec
cs
ins
add
add
jb
jae
outs
fs
arpl
jbe
add
and
dec
pop
push
jo
inc
imul
outs
jno
imul
jb
outs
outs
add
add
arpl
push
gs
ins
imul
outs
arpl
gs
push
gs
gs
jae
push
jb
je
gs
jo
js
add
push
add
arpl
outs
imul
jne
push
inc
js
add
add
jb
jae
jb
popa
jb
push
ins
outs
jb
push
imul
dec
fs
outs
imul
data16
imul
dec
pop
push
jo
push
jae
outs
outs
je
gs
popa
ins
imul
gs
add
inc
outs
outs
outs
jb
popa
outs
je
je
jne
je
gs
outs
jb
push
imul
jo
inc
imul
outs
jno
jne
push
outs
je
js
add
lahf
add
jb
outs
outs
outs
jb
popa
outs
je
popa
jb
imul
jns
gs
outs
jb
push
imul
pop
push
jo
inc
gs
jne
data16
imul
je
add
push
jo
inc
jae
outs
arpl
imul
dec
popa
outs
fs
add
fwait
add
arpl
jbe
jb
push
outs
push
gs
inc
js
sbb
dec
pop
push
jo
inc
imul
outs
jo
add
add
push
jo
inc
jb
gs
jne
data16
leave
add
arpl
inc
gs
jb
jns
ins
imul
je
js
add
add
imul
jb
outs
addr16
add
dec
gs
outs
jb
dec
outs
jno
jb
je
gs
inc
add
push
push
inc
push
push
xor
fs
ins
add
aam
ins
push
outs
jo
popa
je
imul
ins
dec
popa
imul
jb
outs
je
add
gs
outs
outs
jb
xor
add
add
push
imul
jne
jbe
inc
add
push
gs
gs
imul
inc
gs
imul
jne
jbe
add
ins
push
gs
gs
imul
ins
inc
ins
jne
push
ins
push
ja
jo
jne
je
jo
gs
jne
data16
add
mov
gs
imul
ins
push
arpl
gs
hlt
add
push
gs
fs
imul
push
add
inc
popa
ins
ins
dec
imul
ins
push
gs
gs
add
dec
add
push
gs
gs
data16
adc
gs
outs
outs
jb
xor
add
jne
je
popa
je
imul
ins
inc
outs
ins
outs
jb
jae
add
jle
ins
inc
gs
gs
outs
jbe
jbe
rol
ins
push
outs
jo
ins
imul
jb
bound
push
add
push
gs
outs
outs
jb
xor
add
add
push
gs
outs
outs
jb
xor
add
add
inc
outs
ins
outs
jb
bound
add
add
push
jne
push
add
sbb
ins
push
gs
outs
outs
jb
xor
add
imul
add
mov
outs
jb
popa
ins
xor
adc
ins
push
gs
outs
outs
jb
xor
add
ins
inc
jbe
ins
inc
outs
outs
jb
xor
add
outs
popa
fs
popa
je
imul
ins
push
je
outs
arpl
dec
popa
jae
add
ja
ins
inc
gs
popa
jns
jb
popa
ins
gs
gs
outs
je
imul
ins
push
gs
popa
jb
ins
gs
jb
jbe
add
outs
fs
jbe
dec
push
inc
dec
inc
dec
xor
cs
ins
add
inc
add
je
ins
jne
je
jb
jb
jne
dec
gs
add
add
jne
je
jb
gs
outs
jb
dec
jo
outs
inc
outs
jne
add
add
jne
gs
ins
jne
je
jb
outs
fs
add
jne
je
jb
gs
jne
arpl
outs
outs
je
outs
ins
add
push
add
je
ins
jne
je
jb
gs
jne
arpl
je
je
add
inc
gs
ins
jne
je
jb
gs
jne
arpl
gs
outs
jb
dec
popa
ins
add
gs
ins
jne
je
jb
jne
jb
ins
push
gs
jne
arpl
add
dec
jo
outs
inc
ins
jne
je
jb
jb
jne
add
sbb
inc
ins
jne
je
jb
gs
outs
jb
inc
outs
jne
add
cmp
inc
jb
popa
je
inc
ins
jne
je
jb
outs
je
data16
outs
jb
add
add
gs
inc
ins
jne
je
jb
jb
jne
add
pop
add
jne
je
jb
gs
outs
jb
inc
outs
outs
je
outs
ins
add
add
arpl
jo
ins
jne
je
jb
popa
je
bound
add
dec
jo
outs
inc
ins
jne
je
jb
sub
inc
ins
jne
je
jb
gs
jo
outs
dec
gs
inc
add
je
ins
jne
je
jb
jb
ins
dec
outs
fs
add
imul
je
jb
outs
fs
aaa
add
gs
je
inc
ins
jne
je
jb
jb
jne
add
add
outs
inc
ins
jne
je
jb
gs
jne
arpl
push
add
jne
je
jb
gs
outs
jb
inc
ins
outs
jae
inc
outs
jne
add
jae
inc
ins
jne
je
jb
add
push
gs
outs
jb
inc
ins
jne
je
jb
popa
je
bound
add
xor
inc
ins
jne
je
jb
gs
jne
arpl
jns
gs
ins
outs
jae
inc
outs
jne
add
add
inc
push
inc
ins
jne
je
jb
gs
jne
arpl
jb
jne
add
adc
inc
ins
jne
je
jb
jb
jne
dec
jo
outs
inc
outs
jne
add
inc
dec
push
push
inc
push
dec
cs
ins
add
add
je
je
popa
arpl
popa
je
bound
xor
add
inc
gs
arpl
popa
je
bound
add
add
je
gs
jne
jb
outs
je
outs
fs
add
dec
gs
gs
imul
jne
outs
add
add
je
gs
gs
inc
outs
ins
jne
outs
add
push
gs
add
push
gs
xor
add
add
je
gs
gs
dec
outs
fs
add
dec
gs
gs
jns
je
ins
push
popa
jb
ins
gs
jb
cmp
dec
gs
gs
jne
jae
jb
outs
outs
add
cmp
dec
gs
gs
popa
je
bound
gs
imul
add
add
je
jb
popa
je
inc
popa
je
bound
add
dec
gs
gs
outs
fs
popa
outs
add
and
dec
gs
gs
gs
push
popa
bound
add
inc
dec
push
cs
ins
