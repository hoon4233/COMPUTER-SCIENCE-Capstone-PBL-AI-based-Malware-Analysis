sbb
sub
sub
cdq
xor
jo
jo
and
ret
enter
push
mov
xlat
int
push
ret
jne
ja
ja
ja
ja
ja
and
std
aad
fnstsw
push
fst
or
inc
inc
add
inc
add
sbb
cmp
pop
push
aaa
test
push
mov
mov
or
xor
xor
shl
pushf
dec
loop
out
adc
loop
cmp
nop
xor
adc
mov
push
push
jb
shl
scas
xchg
test
lock
mov
cmp
push
inc
xor
xor
xor
icebp
mov
mov
aas
(bad)
(bad)
mov
neg
mov
aas
jns
int3
(bad)
fist
movs
out
fldcw
jnp
sbb
mov
or
fisttp
mov
mov
jae
call
out
jbe
call
(bad)
lods
movs
dec
rcl
rcr
in
cmc
pop
into
retf
mov
je
cwde
call
pop
jl
mov
sahf
in
stc
pop
jg
mov
std
push
stos
mov
jle
hlt
push
pop
mov
jae
outs
mov
jp
dec
lock
das
fistp
call
(bad)
ja
dec
popf
scas
out
fbstp
(bad)
xlat
call
sar
iret
dec
mov
cs
aaa
fidivr
aas
movs
xchg
aas
pop
(bad)
lods
jmp
stc
cmp
xchg
inc
repz
in
inc
cmp
int3
cmc
iret
clc
in
cmp
(bad)
in
lahf
int3
cld
fnsave
das
mov
jle
iret
(bad)
mov
imul
gs
xchg
out
test
jle
icebp
cmp
arpl
dec
sahf
ja
popf
jmp
hlt
ficomp
jg
cmc
(bad)
(bad)
(bad)
btr
hlt
cwde
mov
hlt
enter
scas
push
mov
mov
scas
mov
cmc
jle
imul
stos
cmc
cld
je
xchg
retf
xchg
rcr
add
pop
and
shr
jae
aas
scas
in
out
sub
push
mov
mov
scas
stos
xor
cmc
mov
mov
xor
rcr
mov
aas
mov
mov
adc
das
adc
into
jmp
dec
xchg
ffreep
fistp
xlat
mov
in
imul
hlt
enter
int3
iret
cmc
push
push
cs
inc
stos
jge
clc
jnp
sti
scas
cmp
scas
(bad)
outs
mov
out
icebp
hlt
pop
in
ins
out
mov
into
out
xchg
mov
pushf
(bad)
std
dec
cdq
pop
lock
icebp
jmp
gs
push
cld
cmp
xchg
repz
sbb
popa
jecxz
(bad)
jmp
jg
fimul
aas
lods
repz
je
(bad)
arpl
clc
(bad)
call
push
lahf
retf
mov
aam
xor
jg
jg
repz
jmp
xlat
fidivr
jle
fwait
dec
addr16
movs
mov
call
jge
jle
sbb
clc
loope
fwait
shl
fwait
loop
cmc
pushf
xlat
test
ret
jo
sbb
std
cmp
cwde
fldcw
jge
das
lea
out
cmp
xor
jp
mov
mov
out
fldenv
shl
jae
xlat
fnsave
div
lahf
arpl
data16
sti
lods
(bad)
xchg
int3
jnp
jno
(bad)
pusha
jg
popf
retf
jg
fidiv
call
xchg
fild
out
mov
std
sub
aas
popa
movs
xor
xlat
imul
jmp
das
jle
sbb
dec
addr16
in
cmp
imul
scas
call
jns
jg
jge
call
mov
scas
ds
cmp
aas
jnp
in
cmp
leave
imul
jne
mov
(bad)
stos
dec
pop
gs
icebp
jmp
xchg
xchg
in
xor
out
push
jl
cmp
dec
out
jle
out
jecxz
ds
(bad)
scas
loop
jae
dec
icebp
fucom
into
fcmovne
repnz
xchg
jle
jg
mov
das
dec
mov
fstp
rol
out
mov
fisubr
imul
mov
iret
xor
cli
out
cmps
jae
cmp
stc
and
sbb
outs
xor
pop
pop
cdq
popf
call
lahf
in
mov
stos
mov
out
jnp
jl
bnd
int
inc
ja
jns
clc
fstp
shl
sti
pop
mov
gs
enter
inc
inc
dec
fwait
inc
mov
cmp
jne
(bad)
shl
cli
cmp
in
mov
ja
into
(bad)
gs
cld
ins
test
das
fsubr
lods
fisubr
pop
enter
xchg
sbb
sar
lahf
mov
stos
(bad)
mov
ins
clc
pop
cld
cmps
aam
jb
addr16
std
mov
mov
xor
mov
data16
arpl
inc
bnd
loope
mov
dec
mov
repnz
mov
(bad)
cmp
jb
dec
call
daa
pop
call
(bad)
jae
aad
fmul
cli
aaa
dec
into
jg
jmp
adc
clc
mov
jno
sub
pop
repnz
cmp
jmp
movs
fucom
gs
out
sti
out
inc
dec
mov
xchg
scas
shr
sahf
outs
bound
iret
addr16
push
ss
jae
outs
inc
out
mov
jecxz
xchg
xchg
jbe
rcr
ss
jg
adc
xchg
(bad)
cmp
into
jmp
jge
addr16
dec
jg
or
scas
sbb
test
add
cmp
and
cmp
push
(bad)
(bad)
cmp
out
call
jp
out
pop
pop
in
jbe
loopne
mov
mov
and
xor
push
icebp
popa
rep
add
cmp
mov
outs
stos
jg
fsubr
jne
pop
inc
enter
repnz
jmp
mov
adc
mov
loopne
push
sti
push
pop
jb
pop
retf
icebp
(bad)
mov
xlat
aaa
les
scas
call
outs
out
retf
cdq
cmp
cmp
jge
lods
cli
dec
cld
push
xor
(bad)
jne
sar
mov
shl
in
loopne
mov
ret
arpl
cmp
jmp
hlt
aas
pop
(bad)
rol
retf
mov
mov
aas
mov
sbb
movs
jmp
xlat
arpl
aaa
ds
outs
ds
frndint
cwde
push
(bad)
fsub
aad
jl
das
mov
cmp
outs
icebp
inc
jmp
das
push
mov
sub
out
js
jl
sbb
pop
sahf
(bad)
leave
jnp
aad
sti
or
out
(bad)
clc
retf
mov
int3
into
sub
test
xor
cmc
out
ds
jnp
mov
sub
in
jae
xchg
jecxz
sub
xchg
fild
iret
aas
repz
stc
test
jmp
xor
push
jo
fwait
test
scas
stos
idiv
iret
pop
repnz
xor
adc
pop
into
dec
ret
ins
fwait
mov
out
inc
into
push
lods
cmp
mov
int
fstp
mov
loope
std
outs
pop
and
dec
clc
jg
push
stc
push
mov
pushf
frstor
les
(bad)
jbe
xchg
(bad)
mov
test
movq
in
cld
fisttp
repz
cdq
hlt
scas
(bad)
(bad)
(bad)
ds
lahf
cli
xchg
mov
push
sar
push
mov
iret
hlt
adc
mov
inc
lods
icebp
out
mov
jg
(bad)
lock
popf
jmp
jg
mul
jp
jle
fst
(bad)
push
mov
data16
repz
cdq
loopne
outs
mov
lock
clc
pop
in
lock
jl
daa
cmc
mov
(bad)
out
not
std
inc
jnp
fild
(bad)
out
out
fmul
cmp
mov
ja
xchg
in
mov
aad
clc
mov
pop
jmp
int
mov
pop
jecxz
jl
cmc
out
aas
xor
imul
rcl
fdiv
aas
ins
(bad)
mov
call
aaa
gs
aaa
and
mov
xor
data16
je
sbb
scas
cwde
idiv
jmp
lahf
call
clc
popa
jae
pop
mov
out
xchg
mov
cli
fsubr
sub
sti
cdq
int
mov
dec
aas
arpl
aas
mov
sub
jno
(bad)
sahf
jp
mov
jmp
dec
cmc
cmp
(bad)
neg
jne
retf
(bad)
cmp
jge
stos
iret
sar
xchg
sbb
fstp
(bad)
jmp
xlat
dec
mov
data16
rcr
mov
fisttp
test
pop
neg
in
dec
outs
push
lds
arpl
iret
xchg
fincstp
fld
(bad)
(bad)
fist
scas
das
stc
into
jmp
or
mov
push
xchg
ret
gs
cmp
mov
aam
cmp
stos
ja
stos
mov
scas
mov
dec
mov
mov
bound
push
call
(bad)
fsub
je
fld
(bad)
arpl
(bad)
fmul
dec
div
ror
fdecstp
mov
hlt
ss
std
xchg
jbe
xor
push
xlat
repz
or
mov
call
leave
jg
lahf
(bad)
iret
pmullw
ds
aas
(bad)
pop
mov
mov
bnd
(bad)
shl
hlt
sti
jecxz
pop
retf
jle
rcr
in
push
add
outs
jnp
fidivr
fwait
fwait
out
addr16
sti
push
rcr
jnp
daa
or
cmps
jbe
mov
call
test
mov
or
sbb
mov
mul
es
shl
pusha
and
jbe
adc
in
mov
lea
xor
les
in
int
mov
jmp
push
es
por
mov
inc
(bad)
or
test
xchg
push
in
(bad)
vmovntpd
add
movs
(bad)
fisttp
inc
jnp
loopne
push
loopne
add
(bad)
lods
dec
mov
aaa
sub
sbb
dec
stos
inc
in
jg
jns
aas
mov
vpxor
dec
stc
cwde
adc
cdq
add
aas
paddq
inc
pusha
dec
xchg
ins
cmp
mov
leave
stc
xchg
pop
popa
jae
fst
cwde
inc
mov
loope
push
stc
jns
ret
in
(bad)
pop
gs
mov
sbb
cmp
push
lds
loope
mov
clc
inc
stc
rol
retf
in
(bad)
jnp
push
push
adc
or
jp
frstor
call
ins
xor
mov
inc
mov
mov
push
push
inc
pop
xor
cmp
add
add
inc
int
add
mov
fwait
test
hlt
jne
pop
xor
lods
inc
inc
ficom
in
pop
dec
outs
push
push
dec
push
jb
dec
fwait
adc
int3
test
scas
and
sbb
mov
mov
je
and
inc
gs
in
mov
pop
ret
jmp
call
js
dec
sbb
es
pushf
and
sbb
arpl
cdq
dec
gs
enter
call
pushf
sahf
sahf
or
loopne
and
popf
mov
fcmovne
rcl
jmp
fsub
or
mov
mov
imul
mov
mov
stos
adc
or
out
fwait
xor
movs
fld
stos
xlat
call
push
(bad)
or
retf
push
nop
sub
imul
and
inc
push
mov
or
mov
cmp
add
xor
push
int3
xchg
xor
mov
loopne
and
test
push
mov
sub
dec
sub
pop
jl
or
test
and
mov
xor
mov
movs
mov
mov
sub
sahf
pop
aam
ja
inc
in
popa
inc
push
cdq
int
jns
lods
pop
shr
test
xchg
and
je
xchg
mov
sub
jno
dec
adc
icebp
and
cmp
lock
ins
mov
mov
push
aad
cdq
sbb
nop
and
rol
test
or
loopne
fs
xchg
push
inc
arpl
add
aam
cmp
sub
pop
cwde
outs
add
xchg
enter
push
jmp
stc
pop
dec
jb
and
mov
inc
fwait
mov
sub
(bad)
sub
pop
push
les
mov
dec
mov
sub
jmp
cmp
lahf
pop
xchg
adc
mov
test
cmp
push
inc
xchg
popf
xor
leave
(bad)
push
dec
dec
lea
adc
loope
adc
test
es
mov
js
outs
mov
mov
add
in
(bad)
leave
movs
fld
mov
xchg
mov
xor
mov
sbb
leave
mov
test
and
sbb
push
push
push
fiadd
dec
fld
imul
pop
pop
xchg
push
pop
fs
fstp
sub
dec
add
xchg
cmps
ss
je
ins
arpl
(bad)
jmp
mov
xchg
icebp
fisttp
cmps
sbb
dec
push
test
sub
sahf
adc
and
data16
pop
xor
leave
dec
fs
xor
lock
fdiv
loopne
cmp
and
mov
scas
je
outs
into
test
fmul
rep
pop
xchg
mov
dec
(bad)
or
repnz
xor
mov
push
es
push
xchg
out
pop
mov
cmp
pop
dec
les
out
add
inc
stos
add
fmul
retf
int3
sub
mov
lods
test
xchg
scas
test
fs
xchg
add
mov
cld
adc
dec
mov
rcl
es
mov
push
mov
sub
adc
jo
push
xchg
sub
les
mov
adc
mov
adc
rcl
retf
loop
adc
add
mov
cmp
mov
imul
and
int3
pusha
or
sub
inc
ret
mov
or
adc
mov
jmp
pop
inc
mov
loope
leave
mov
cmp
or
cmp
loopne
adc
push
pusha
jns
pop
nop
aam
push
and
aam
hlt
adc
mov
gs
or
rol
mov
adc
loopne
sub
pop
aad
fadd
pop
jmp
test
sub
outs
aam
dec
cmp
mov
je
ins
rol
popf
dec
stc
sbb
arpl
ret
adc
xchg
scas
cmp
jmp
iret
mov
add
cmp
xchg
mov
icebp
out
fsub
push
jb
nop
in
add
sub
mov
ret
icebp
lds
rep
push
(bad)
retf
aam
xor
pop
rcl
mov
dec
sbb
jb
aam
outs
icebp
jp
and
inc
jns
jo
sahf
mov
sub
inc
movs
mov
popa
data16
inc
test
call
jns
adc
out
cs
cmp
test
xor
xchg
aad
pop
popa
mov
lea
pusha
into
popa
cmp
push
(bad)
adc
jecxz
sub
pushf
inc
dec
fmul
xchg
pushf
cmps
and
jbe
loopne
and
dec
add
dec
cs
pop
add
xchg
inc
rol
jl
fdivr
je
add
cmps
sbb
mov
(bad)
rol
sub
sbb
push
fild
dec
sub
loopne
sub
imul
add
pop
and
lock
(bad)
mov
mov
xor
gs
stos
jae
xor
push
cdq
jl
std
push
shr
stc
ds
stc
adc
cmps
lods
lods
dec
or
add
fisttp
ins
inc
adc
mov
bound
adc
shr
stos
add
int
data16
or
add
cmp
sub
xor
cdq
xchg
jne
or
jg
add
leave
xor
nop
mov
test
or
jbe
(bad)
daa
dec
out
cmps
adc
call
xchg
or
sub
xchg
mov
mov
dec
fisub
hlt
adc
adc
jae
rcl
push
cmp
xor
or
push
mov
add
cmp
mov
sbb
jl
and
mov
es
xor
dec
xchg
sbb
jnp
gs
pop
ret
push
(bad)
retf
push
daa
sub
dec
jmp
test
mov
les
lea
fld
or
retf
adc
fidivr
mov
or
adc
test
mov
mov
out
js
rcl
test
mov
imul
inc
shr
sub
xor
and
mov
sahf
cmp
cmp
push
data16
or
xchg
rcl
adc
xchg
push
nop
retf
mov
xchg
test
fdiv
dec
stos
retf
cmp
retf
test
jecxz
inc
jae
mov
add
inc
and
aas
inc
mov
test
fdivr
and
dec
add
push
push
xchg
call
int
nop
cwde
ins
xor
and
fstp
hlt
add
or
and
and
mov
mov
push
add
dec
loop
inc
test
bound
mov
cmp
in
pop
push
cmp
mov
ficomp
test
xchg
fnstenv
adc
imul
mov
or
cmp
sahf
stos
jne
sub
sub
les
cmp
add
(bad)
mov
gs
ror
mov
jecxz
push
push
xchg
pop
lods
xor
sahf
pushf
(bad)
cwde
jl
imul
or
sub
add
out
pop
cwde
pop
add
in
sbb
loopne
push
inc
in
out
fild
xor
adc
ret
lods
ret
pop
mov
adc
ret
push
inc
movs
cmp
mov
sub
add
int
sbb
aam
mov
push
aad
pushf
call
and
inc
cmc
pop
rcl
push
sub
sbb
mov
and
mov
out
or
aam
aad
jne
cs
sbb
test
push
and
add
xor
neg
popa
push
sar
outs
into
mov
and
fnstenv
sbb
int3
fld
jo
add
or
dec
xor
leave
or
inc
push
retf
ss
push
jge
pop
pop
cmp
or
and
(bad)
leave
mov
push
ins
aas
jno
dec
push
mov
mov
(bad)
push
inc
dec
xchg
mov
loope
jmp
inc
and
mov
inc
xor
sub
nop
imul
loope
dec
fcmovnb
int3
sub
aaa
push
push
mov
mov
pop
(bad)
rcr
pop
dec
add
mov
aad
retf
fwait
(bad)
ss
sbb
jl
cs
shl
jge
dec
dec
adc
fisttp
add
cs
pop
pop
loop
sahf
aad
les
sub
add
add
cmp
fisubr
pop
bound
addr16
jbe
lds
xor
bound
add
aad
sbb
cli
dec
sti
bnd
jbe
push
lds
mov
or
enter
pop
mov
mov
dec
pop
hlt
or
into
test
adc
jle
dec
iret
loop
push
xchg
out
enter
test
movs
shl
pop
stc
dec
cdq
cmp
cmp
retf
dec
inc
push
xchg
mov
test
mov
cmps
ins
push
vmwrite
lea
dec
pop
fistp
fs
test
les
fsubr
pushf
push
lea
ins
mov
das
push
shl
jge
add
js
repz
push
cwde
loopne
adc
push
push
add
mov
jge
adc
in
ins
int
adc
into
and
daa
mov
repz
push
add
dec
sub
xor
mov
nop
mov
jbe
xchg
fcom
js
loop
add
push
sbb
xchg
or
cld
mov
xor
xchg
mov
adc
mov
and
cmc
out
jle
inc
mov
inc
add
loopne
sbb
pop
mov
xchg
(bad)
mov
jno
jle
cmovle
aad
js
add
mov
fidiv
sub
and
adc
lea
out
sub
adc
mov
push
push
and
jo
mov
xor
shr
lahf
jbe
stos
push
daa
dec
push
cmps
add
(bad)
push
(bad)
jno
push
pop
add
ret
sub
hlt
aaa
stos
retf
lds
test
pop
outs
call
fdivr
push
push
aaa
mov
inc
jmp
sub
jmp
sbb
xchg
shl
add
inc
int3
ret
dec
add
sbb
mov
pop
sbb
cmc
adc
stos
mov
push
pop
add
or
jo
fidiv
cs
je
lods
inc
das
dec
lahf
les
loope
adc
stos
cmps
sub
inc
loope
sbb
or
push
mov
xchg
aam
sbb
not
push
lahf
or
xchg
dec
pop
mov
push
sbb
dec
push
pop
fadd
mov
aaa
pop
push
gs
aad
jnp
push
sbb
cmp
out
pop
xchg
add
mov
xor
cmp
mov
fnstenv
fld
and
xor
cmp
lds
in
dec
mov
sub
inc
push
stos
ficom
in
mov
sbb
inc
daa
and
xor
dec
retf
pop
sqrtps
(bad)
loop
inc
or
cmp
cmp
push
xor
xor
scas
sbb
jb
je
dec
mov
add
push
popf
inc
out
es
xor
inc
nop
mov
or
movs
neg
imul
into
and
nop
movs
cmp
sbb
cmp
jns
mov
sbb
sbb
xor
dec
cmps
adc
cmp
or
fstp
xchg
adc
test
iret
scas
mov
sbb
jnp
fs
xor
sbb
push
add
(bad)
mov
add
sub
stos
add
push
pop
jns
leave
sbb
and
call
cwde
mov
(bad)
cmp
in
dec
mov
adc
add
stos
xor
jae
adc
sbb
add
dec
cmovo
jae
or
adc
(bad)
es
sbb
dec
jno
jge
adc
sbb
arpl
xchg
xlat
cdq
pop
or
jmp
push
retf
mov
xor
jno
repnz
sub
adc
lea
in
sub
push
pop
cs
push
fldenv
in
and
ret
and
fsubr
dec
imul
lods
pop
cwde
imul
push
fcmovb
xchg
ins
or
sub
inc
inc
sar
repz
push
add
ror
xchg
test
mov
fsubr
lahf
push
repz
pop
xchg
cmp
xor
xchg
mov
lods
lods
imul
call
jecxz
ror
jb
je
lds
and
and
xlat
test
jle
sbb
cmc
ret
ins
mov
cwde
pop
(bad)
lods
jns
loopne
adc
jge
and
inc
inc
xor
mov
xchg
or
xor
sbb
and
or
or
xor
out
aad
sbb
jne
add
lods
and
test
movs
cmp
mul
je
and
mov
mov
lods
repnz
mov
or
(bad)
outs
push
aad
add
lock
or
dec
outs
fidiv
jns
loop
or
cs
adc
mov
cwde
popf
cmp
dec
push
lods
inc
cmps
push
pop
jecxz
mov
adc
loope
(bad)
shl
fwait
or
xchg
sahf
cmp
(bad)
push
jp
mov
scas
sbb
shr
dec
jne
fdiv
sbb
add
jne
and
inc
jge
jo
adc
add
inc
or
adc
movs
push
or
xchg
imul
push
cmp
hlt
add
cmp
cmp
in
sub
retf
or
les
or
out
sub
pop
mov
jp
xor
adc
cwde
mov
push
ins
sub
mov
das
mov
push
push
xchg
sti
or
imul
push
dec
fdiv
cs
scas
pop
jmp
cdq
outs
or
aam
jl
pushf
sbb
dec
and
add
mov
adc
repz
adc
repnz
(bad)
hlt
and
xor
shl
mov
test
test
dec
xchg
dec
dec
xchg
mov
sar
push
xchg
jno
xchg
push
xor
pushf
mov
hlt
mov
into
rcl
aad
xchg
dec
mov
mov
mov
xchg
pop
call
test
fisubr
xor
xor
mov
mov
mov
es
xchg
add
stc
or
mov
inc
fcomp
mov
aad
es
(bad)
data16
adc
pop
inc
int
ss
sub
adc
(bad)
test
push
mov
pop
dec
jle
retf
cmp
add
xchg
(bad)
or
and
pop
mov
(bad)
cmp
xchg
in
and
mov
sbb
into
mov
and
hlt
add
loopne
cwde
cmp
sbb
lods
inc
out
(bad)
mov
adc
or
add
in
rol
push
push
scas
aaa
xchg
mov
inc
add
and
lock
adc
xor
pop
pop
jo
adc
pop
cs
cmps
push
retf
ss
jne
cmp
xor
xchg
repz
aad
(bad)
pop
dec
and
cli
aad
mov
daa
jl
jb
jne
cmps
jg
jl
dec
in
xor
mov
rol
mov
or
in
add
in
stos
sbb
aas
movs
dec
mov
ins
das
and
lock
adc
adc
pop
loope
pop
mov
xchg
sbb
aad
retf
bound
push
mov
mov
stc
xor
test
or
and
adc
jle
xchg
mov
cmp
or
scas
dec
pop
out
adc
std
sub
inc
push
xchg
stos
int
gs
xchg
dec
lock
les
xor
mov
push
add
add
mov
cmp
mov
test
push
daa
out
xchg
or
es
aaa
sbb
cwde
pop
push
loope
cmp
cmp
sub
or
in
push
push
xlat
mov
push
aad
mov
fadd
inc
call
sahf
mov
add
les
aad
loopne
add
sub
mov
mov
pushf
mov
mov
in
mov
gs
push
retf
test
repz
dec
push
je
std
mov
imul
stos
sbb
and
xchg
xor
push
jno
push
leave
sbb
xchg
and
and
adc
push
std
dec
out
dec
inc
pusha
jne
add
mov
stos
push
sar
and
dec
adc
cwde
retf
rcr
adc
sbb
rol
ret
push
shl
(bad)
test
cmps
sbb
lods
test
and
cmp
or
xchg
loope
scas
inc
inc
adc
and
and
sbb
ins
dec
outs
adc
shl
movs
je
push
mov
retf
push
inc
(bad)
fisub
add
rol
cmps
pop
mov
xchg
aaa
and
adc
fisttp
mov
xchg
sti
or
inc
sub
fcmovbe
mov
fbstp
add
call
test
int
sbb
movs
ss
les
in
(bad)
ret
cmp
in
cmps
fisub
outs
adc
mov
inc
xor
adc
pop
call
call
add
cld
pop
sbb
stc
and
mov
adc
mov
fs
jb
add
adc
xor
cdq
dec
scas
sub
xchg
mov
icebp
daa
pop
mov
fdiv
cdq
dec
cmps
or
into
cs
not
(bad)
pop
mov
mov
lock
cli
and
jecxz
mov
pop
adc
xchg
test
inc
cwde
pushf
push
dec
and
jle
sub
mov
push
sbb
stos
je
loopne
adc
scas
adc
movs
adc
into
sahf
or
rcl
xchg
mov
jo
mul
inc
push
pop
out
adc
fdiv
pop
inc
xchg
imul
xchg
into
div
xchg
stos
psubq
xor
or
mov
mov
jp
sub
mov
sub
and
add
and
inc
cmp
and
fcmovnbe
jbe
pop
fcom
sbb
je
mov
xchg
pop
cmp
or
jge
mov
dec
popf
ss
push
or
test
fdiv
lock
push
scas
es
xor
in
mov
imul
jp
fcmovu
adc
mov
test
jnp
test
mov
lahf
mov
neg
and
stos
repnz
mov
scas
jecxz
aas
inc
mov
adc
and
cmc
mov
and
mov
pop
lods
pop
mov
push
cmp
not
iret
out
loope
movs
ds
in
mov
push
into
xchg
data16
mov
or
sub
jns
adc
xchg
adc
sub
lock
push
scas
cmps
jae
icebp
sub
inc
or
xchg
pop
aaa
enter
pop
outs
sbb
xchg
push
aad
addr16
aad
mov
sbb
jg
adc
push
and
and
sbb
das
push
out
xor
push
idiv
xchg
mov
and
scas
or
fdivr
pop
rol
addr16
xchg
dec
aaa
add
dec
addr16
test
push
or
fild
jge
out
jp
ja
add
les
or
mov
jecxz
addr16
add
push
sbb
push
mov
scas
loopne
test
add
leave
mov
and
clc
(bad)
lds
loopne
xchg
(bad)
icebp
out
push
jg
pushf
stos
push
adc
loop
das
sbb
cmp
in
(bad)
popa
xchg
sub
add
rcr
cmp
(bad)
fsubr
ins
dec
jo
in
hlt
imul
mov
sbb
ins
loope
mov
push
shl
and
jg
inc
cmp
mov
dec
es
sahf
push
jb
(bad)
ret
mov
inc
dec
aaa
in
mov
out
leave
xchg
mov
add
ds
fist
mov
test
fxch
sub
cmps
sahf
dec
adc
retf
lods
add
push
cmps
lds
and
pop
mov
jp
sbb
hlt
in
push
cmp
js
sbb
pop
or
sti
mov
scas
add
or
retw
mov
popf
ss
cdq
das
push
jg
sbb
mov
sahf
out
jmp
outs
sub
in
pop
or
xor
cmp
popf
sbb
sahf
int
jg
xchg
dec
(bad)
fimul
idiv
pop
push
(bad)
mov
push
(bad)
inc
xlat
shl
test
popf
popa
pop
dec
jmp
int3
fld
dec
mov
xlat
fld
cmc
sbb
mov
fs
push
xchg
(bad)
inc
pushf
(bad)
fcom
mov
data16
ret
mov
inc
jno
push
xor
(bad)
out
es
stos
or
mov
mov
add
push
add
sub
cmp
jp
dec
fst
xchg
and
rcr
shr
lea
std
(bad)
sub
mov
push
xchg
(bad)
or
push
mov
dec
mov
out
and
mov
push
pusha
(bad)
repnz
fsub
cmp
(bad)
retf
push
sbb
jae
rep
cmp
aaa
add
adc
mov
push
or
lds
mov
xchg
add
(bad)
mov
adc
mov
jnp
sub
xlat
lock
sub
pop
or
in
div
pop
pop
repz
daa
dec
arpl
or
pop
retf
int
sub
int3
inc
xor
inc
inc
or
xor
mov
fnsave
popa
jle
sub
sbb
mov
mov
cli
or
xlat
fbstp
mov
inc
cmp
loope
iret
xor
out
shl
xchg
(bad)
jo
add
jge
or
fs
xchg
fnstsw
daa
xchg
aad
aam
movs
cld
mov
inc
in
pop
cmc
cdq
(bad)
enter
ret
push
retf
retf
adc
xchg
call
cmp
xchg
push
mov
sub
test
inc
jmp
sbb
mov
add
jl
test
retf
xchg
add
or
rcl
aam
dec
jmp
lea
jp
mov
mov
js
push
adc
cmps
das
pop
dec
pop
mov
jnp
(bad)
push
push
mov
(bad)
cmps
bound
or
cmp
idiv
ror
mov
push
int
push
pop
cmps
rcr
mov
inc
push
push
jmp
mov
dec
inc
xlat
and
cmp
cdq
sub
cmc
repz
rcl
and
(bad)
xlat
or
frstor
push
adc
xchg
pop
ret
ins
bound
jno
adc
arpl
stc
xchg
xchg
or
imul
push
mov
sub
movs
clc
mov
shr
dec
push
mov
rcl
fdivr
jmp
loopne
in
sbb
or
or
fsubr
xchg
cld
jo
and
ficom
sub
div
adc
into
or
pushf
inc
fmul
inc
out
fs
lods
mov
retf
and
fisubr
jle
(bad)
(bad)
mov
mov
add
pusha
adc
and
push
jle
pop
stos
or
loopne
ins
mov
cmp
xor
adc
xor
xor
push
mov
cmp
inc
inc
push
pop
(bad)
movs
sbb
out
dec
pushf
les
cli
adc
push
sub
test
and
sbb
jae
or
ret
xchg
aam
ret
nop
add
punpckldq
lds
stc
loopne
test
loopne
test
pop
mov
dec
sub
in
or
mov
push
icebp
cmp
test
mov
jno
jecxz
jb
rol
pop
pop
add
ret
ins
jle
push
mov
popf
mov
gs
pop
or
ins
pop
dec
adc
jno
scas
or
jge
sbb
mov
push
cmp
pop
mov
stos
jo
pop
dec
xchg
addr16
stos
pop
test
jge
dec
loopne
ror
or
dec
jne
add
ret
fucom
sub
out
in
test
xchg
push
inc
stos
addr16
mov
mov
(bad)
jns
adc
cmps
mov
pop
xor
shl
mul
dec
xchg
pop
lock
jno
cli
loop
nop
outs
mov
dec
or
dec
popf
iret
inc
adc
sbb
ror
pusha
inc
cdq
mov
inc
mov
movs
retf
test
add
pushf
inc
mov
dec
scas
sub
(bad)
out
aaa
outs
cmp
mov
mov
in
sar
cli
add
shl
cmp
add
sub
fabs
and
sub
shl
push
xchg
rcl
mov
ret
fistp
add
es
outs
dec
in
inc
sub
mov
(bad)
mov
or
cli
adc
enter
sahf
adc
push
fstp
adc
sbb
fsubr
out
xchg
pushf
mov
call
inc
dec
repnz
push
inc
test
cmp
test
push
iret
push
icebp
int3
inc
pop
mov
mov
pop
push
pop
mov
maxps
pop
test
dec
cmp
and
rol
(bad)
inc
pushf
add
sub
enter
inc
cs
inc
pop
cmp
adc
adc
es
pop
mov
int
pop
add
sbb
nop
adc
pop
mov
sbb
xor
pop
xchg
in
inc
loopne
adc
inc
outs
and
pop
jge
or
shr
loopne
(bad)
les
lods
dec
repz
(bad)
fcom
sub
fldenv
cmc
cmps
mov
scas
shr
push
lock
int
xor
test
out
dec
dec
mov
cdq
sahf
mov
daa
mov
sbb
sub
sub
daa
adc
arpl
pop
jne
mov
lock
data16
push
call
mov
and
cmp
adc
inc
ss
inc
cs
call
ins
(bad)
setno
ja
mov
and
mov
pop
std
arpl
adc
mov
aad
adc
sub
js
add
cld
xor
sub
jb
adc
sub
ins
jns
test
mov
pushf
push
fs
push
call
push
sub
mov
loopne
in
xchg
or
in
sub
sub
add
push
pop
retf
cmp
xor
(bad)
js
int3
cmc
cmp
or
xchg
dec
xor
es
or
cdq
or
mov
lock
test
(bad)
aas
mov
cmp
pop
clc
adc
loopne
movs
mov
ret
(bad)
ror
js
cs
and
out
(bad)
ins
lock
mov
cwde
(bad)
cmp
jle
mov
(bad)
lods
adc
xchg
enter
into
adc
fsubr
iret
fmul
fiadd
ds
cmp
fisttp
inc
sahf
push
aaa
stos
repnz
pop
jecxz
lds
mov
clc
mov
shr
push
and
jge
shr
jb
loop
xlat
mov
ror
adc
fldenv
xor
or
stos
test
inc
stc
js
or
and
mov
stc
imul
push
idiv
xor
inc
fild
test
daa
imul
imul
dec
inc
fldl2e
xor
rcl
mov
jnp
or
pop
mov
ret
movs
mov
stos
pop
xor
and
das
cmps
es
or
jmp
call
mov
and
mov
sub
(bad)
push
jns
xor
sbb
jo
arpl
xchg
push
and
inc
mov
out
inc
dec
sti
ret
inc
push
jecxz
mov
push
sub
mov
jecxz
mov
push
jno
push
add
rcl
rcl
add
shl
lds
gs
dec
fild
imul
cdq
test
pushf
mov
ja
add
loopne
pusha
hlt
int3
dec
retf
mov
mov
inc
jbe
xchg
cmp
outs
movs
or
cmps
inc
push
repnz
fadd
dec
dec
nop
fwait
retf
jne
sbb
sub
jle
mov
xchg
dec
jae
(bad)
(bad)
push
and
aaa
mov
adc
lahf
icebp
in
fwait
pop
push
mov
xchg
(bad)
pushf
mov
jnp
lods
jmp
mov
test
cdq
mov
test
xor
sbb
pop
pusha
jge
mov
xchg
jge
sub
sti
xchg
jmp
jne
adc
mov
pushf
outs
dec
call
adc
pop
mov
std
mov
ret
pop
cmps
test
popa
xlat
push
jnp
es
jge
clc
stos
lds
jo
pop
cmp
mov
jmp
mov
push
add
test
inc
dec
ja
sub
mov
cmps
and
aad
inc
xor
adc
fcmovnb
mov
cs
jne
pop
jb
test
neg
jg
cmp
push
retf
cdq
popf
push
push
test
jo
dec
mov
test
mov
mov
or
pushf
gs
jae
xor
pop
mov
xchg
jae
jmp
cmp
mov
pop
xor
nop
jg
imul
mov
aad
sub
movs
daa
dec
out
adc
pop
rcl
js
push
call
jl
inc
(bad)
ror
sbb
jmp
out
(bad)
pushf
inc
js
or
mov
dec
xchg
cld
stos
xor
sahf
(bad)
push
jae
ins
mov
jo
mov
jae
shr
das
fs
and
xchg
scas
data16
cmp
aas
mov
dec
cmp
in
jmp
and
pop
sub
repnz
jae
inc
adc
sub
push
sub
mov
test
outs
push
adc
out
cld
cmps
or
imul
push
aas
icebp
mov
test
clc
and
imul
add
cli
xchg
pop
mov
mov
push
dec
push
cbw
or
mov
jnp
pushf
in
ins
xchg
imul
pop
inc
aad
popf
pop
ror
jae
lds
sbb
xchg
arpl
ins
enter
into
inc
int
add
outs
mov
shl
imul
out
xlat
jno
pop
push
shl
cmps
cwde
pop
jecxz
(bad)
and
jb
ret
dec
cli
xchg
xor
das
jp
add
fstp
jbe
sbb
sbb
stos
push
sti
clc
xor
sbb
mov
mov
cdq
sbb
stc
add
call
sahf
hlt
mov
mov
loope
call
jmp
lahf
bound
pop
or
popa
lods
cmp
outs
adc
push
push
jl
dec
add
clc
and
out
cmp
lds
add
adc
dec
(bad)
jmp
xor
int
sub
les
sub
and
ins
loope
fldln2
push
inc
in
in
movs
out
call
in
mov
jo
fistp
push
movs
mov
jle
lea
(bad)
cmc
sbb
pop
mov
aad
mov
add
and
pop
nop
add
in
push
movs
unpcklps
jg
jnp
xor
bound
xor
pop
lds
push
sub
sub
test
hlt
into
sahf
in
test
vmwrite
shl
bound
je
mov
xchg
and
mul
fild
adc
xchg
movs
nop
dec
xchg
mov
(bad)
cld
ds
push
lock
inc
js
push
push
imul
mov
(bad)
or
test
cs
mov
push
or
ret
xor
fcom
cmp
outs
(bad)
repz
cs
jle
shl
pusha
jne
xchg
adc
fs
mov
jge
or
int
out
je
stos
sub
sub
sbb
inc
jnp
pop
fstp
out
xchg
dec
ds
adc
in
shl
mov
inc
xchg
dec
pop
cmc
sub
pop
movs
imul
call
xor
(bad)
das
sar
jae
in
test
enter
mov
test
and
inc
lock
or
cmp
xor
arpl
(bad)
inc
popa
jp
jge
xchg
scas
add
test
les
in
xchg
loope
test
dec
mov
dec
mov
fcomp
and
sbb
jmp
sbb
jecxz
mov
and
cmp
push
push
ja
outs
out
jo
cld
aad
call
xchg
push
imul
inc
fcomp
aad
add
fnstenv
aaa
aaa
jge
pop
mov
cmp
adc
push
or
sar
fld
jb
mov
jb
sbb
or
pushf
dec
jle
rcr
xchg
jae
cmp
test
dec
sub
retf
mov
aas
sbb
xor
mov
mov
lock
mov
xor
loop
mov
push
push
adc
sub
and
std
fimul
retf
enter
adc
push
lea
mov
adc
jb
push
jmp
data16
out
rol
cmp
and
es
pop
and
adc
repnz
mov
jo
inc
lods
push
cli
sbb
lock
dec
ret
int3
rcr
adc
hlt
(bad)
jmp
mov
or
or
movs
fyl2x
sbb
fist
sub
aas
xchg
xchg
and
cmps
fdivrp
ret
cli
mov
jbe
rol
add
jae
ins
stos
or
sub
sbb
aad
dec
adc
jge
fcomp
pop
pop
std
pusha
sti
or
sub
pop
or
inc
and
lock
add
sahf
jno
dec
pop
fdiv
sbb
inc
fstp
outs
fmul
stos
data16
or
sub
mov
or
int3
jae
mov
push
mov
sar
sbb
(bad)
inc
adc
adc
sbb
pop
or
loopne
fs
mov
jnp
mov
popf
arpl
enter
test
or
mov
bound
sahf
aaa
test
out
inc
test
cmp
mov
hlt
mov
retf
(bad)
sahf
cld
pop
int3
mov
outs
in
imul
and
push
cdq
sbb
(bad)
movs
jne
adc
pop
jmp
lock
sub
pop
ja
push
or
adc
jle
mov
jmp
jno
pop
sub
dec
cli
cmp
ss
ins
scas
inc
je
lock
enter
retf
push
aad
(bad)
shr
cmp
sbb
cmp
es
xchg
adc
dec
sbb
popa
sbb
imul
stos
mov
(bad)
stos
js
and
adc
push
mov
mov
jno
dec
movs
aam
mov
movs
fldenv
pop
stc
sbb
lods
(bad)
retf
mov
mov
xor
(bad)
ja
test
(bad)
or
and
xlat
sub
jae
and
clc
xor
and
push
adc
xor
enter
add
or
inc
mov
les
adc
and
outs
gs
fcom
ja
ror
and
in
loop
sub
mov
leave
mov
cmp
inc
cli
fisub
push
pop
int3
outs
adc
push
aaa
sub
push
or
cmp
xor
or
lea
jecxz
jo
dec
test
fwait
loope
movs
cld
push
shl
mov
xlat
rcl
je
or
sbb
aam
xchg
popa
mov
cld
pop
test
addr16
xchg
mov
mov
retf
out
test
xor
jle
push
add
clc
dec
lahf
xor
sbb
mov
stc
mov
jecxz
lods
scas
push
enter
xor
and
mov
loope
xchg
pop
repz
pop
inc
jo
mov
fwait
movs
cmp
cmc
loop
or
jne
lds
inc
(bad)
in
adc
(bad)
retf
les
xchg
inc
loopne
xchg
jae
adc
lods
mov
pop
mov
add
cmc
mov
subps
inc
enter
stc
or
sbb
(bad)
pop
inc
jns
dec
dec
mov
ret
daa
into
mov
leave
xor
sbb
and
mov
xor
mov
sbb
sbb
xor
adc
sub
leave
out
mov
test
dec
sub
add
or
adc
sub
mov
in
loope
push
rol
mov
push
ja
enter
mov
gs
ins
les
fwait
data16
mov
scas
xor
jle
mov
mov
add
aas
adc
das
scas
test
mov
jmp
mov
or
sbb
loopne
bound
mov
shr
ss
add
rcpps
inc
stc
xor
push
push
lock
(bad)
in
mov
sbb
dec
daa
adc
or
les
movs
push
les
dec
or
jbe
cli
or
jle
sub
mov
cmp
clc
adc
or
jns
inc
pop
xchg
lfs
call
push
push
jl
iret
pop
xchg
pop
retf
inc
add
and
fadd
pop
pop
movs
mov
loope
xor
popf
test
jae
dec
fisttp
leave
pop
inc
int
xor
fst
xchg
add
push
push
mov
jmp
xchg
sbb
jo
and
in
jb
test
jae
mov
cmp
jnp
pop
test
mov
repz
sub
pushf
cmps
lock
push
lahf
mov
xchg
fcomi
rol
ja
cs
les
std
cwde
pop
je
jo
jb
xchg
add
iret
ss
adc
fdivr
aaa
test
xchg
and
jle
ss
push
jmp
test
cmp
ficom
mov
rcr
push
push
jge
outs
es
je
xchg
test
inc
xchg
call
dec
icebp
test
pusha
pop
mov
test
sub
js
pop
push
mov
dec
cmc
test
mov
call
push
call
gs
mov
or
jmp
out
adc
xchg
adc
fstp
adc
push
cwde
aas
add
fmulp
(bad)
int
inc
ss
dec
movs
bound
or
out
pop
add
fcmovbe
imul
or
or
and
xor
iret
inc
mov
icebp
stos
fld
sbb
out
(bad)
es
dec
jnp
cmp
adc
dec
ror
out
jecxz
or
jmp
xchg
add
outs
add
pop
and
(bad)
(bad)
fcomp
loopne
cmp
or
mov
mov
repz
pop
cmc
and
pusha
push
cmp
iret
or
cmp
popf
pop
js
dec
out
(bad)
sub
add
jns
clc
outs
xchg
mov
dec
or
aaa
or
loopne
(bad)
movs
sub
mov
cmc
adc
rcr
mov
imul
outs
jno
jg
mov
fs
call
adc
xor
cmp
jno
aam
jb
test
pop
sub
rol
xchg
push
enter
mov
sbb
neg
jne
cmp
sbb
mov
imul
jns
cmc
int3
lds
xchg
mov
xor
or
and
out
or
test
das
in
addr16
gs
ret
ret
jnp
jp
jae
push
jmp
out
jae
xchg
sti
inc
add
stos
dec
les
popf
add
mov
rcr
cld
adc
ss
cmps
jne
add
inc
xchg
push
bound
shl
into
popa
jne
das
mov
mov
out
movs
mov
mov
arpl
jo
in
adc
xor
imul
out
mov
lock
dec
inc
add
loop
pop
fidivr
mov
mov
loop
(bad)
push
jecxz
pop
pop
mov
cmovl
in
aaa
jge
ins
push
inc
xchg
xchg
mov
test
push
hlt
daa
mov
or
sub
xor
das
bound
in
cmc
(bad)
test
mov
add
xor
rol
hlt
pop
inc
stos
add
xchg
stc
retf
jmp
push
lea
mov
test
sbb
sahf
lahf
sbb
sbb
fisttp
ret
xor
adc
sub
(bad)
xchg
inc
xor
cld
(bad)
fcomp
aad
or
or
or
shl
les
mov
jmp
fistp
nop
push
mov
or
mov
push
and
scas
stos
add
sbb
dec
mov
xchg
cmps
cmp
fsubr
(bad)
aaa
adc
inc
jo
add
and
adc
fcmovnu
sti
pop
or
xor
jmp
push
mov
shl
jo
mov
jb
test
xchg
loope
stos
push
jmp
cmp
adc
dec
(bad)
or
push
leave
push
(bad)
fnstcw
mov
inc
xchg
es
ret
and
jne
scas
lea
je
add
sub
adc
dec
shr
aas
call
push
inc
shl
iret
ret
sub
inc
aad
(bad)
xlat
cmp
(bad)
jb
mov
retf
inc
out
mov
scas
push
lea
adc
dec
nop
jne
test
pop
mov
and
rol
(bad)
jmp
in
out
(bad)
test
mov
push
fwait
lods
mov
repz
jle
mov
ds
in
rcl
jns
in
dec
imul
cmp
xchg
ins
mov
movs
pop
ret
inc
cmp
ins
and
xchg
repz
ret
xchg
push
fwait
add
mov
retf
or
cmp
popa
cwde
sub
jmp
in
repnz
xchg
push
out
imul
add
mov
xor
fisub
jge
pop
fimul
outs
or
xchg
lods
push
xchg
fidivr
mov
xchg
outs
mov
and
pop
mov
inc
or
pop
push
arpl
push
or
and
mov
mov
ss
dec
sub
add
mov
(bad)
sti
cs
rol
das
cmp
pushf
inc
out
inc
lods
test
dec
adc
out
inc
sub
idiv
out
jae
mov
jp
mov
shl
ins
and
and
cld
sar
jae
dec
inc
lds
add
in
jno
retf
push
aad
add
push
mov
dec
xor
push
add
xchg
into
lock
xchg
daa
(bad)
sbb
sub
loop
xor
loopne
push
jg
(bad)
popa
cmp
mov
gs
dec
cmp
(bad)
icebp
push
add
scas
inc
fs
mov
jb
mov
test
mov
add
xchg
bswap
jb
mov
cmp
es
pop
mul
iret
fadd
add
cmp
jnp
stos
dec
xor
or
pop
or
push
push
cmp
repz
je
mov
or
mov
mov
mov
cs
sub
sbb
je
jb
xor
mov
fst
lahf
pushf
popa
dec
imul
sar
into
sub
mov
adc
or
gs
cmc
in
stc
sbb
(bad)
std
std
aad
jb
push
and
inc
push
cmp
push
ins
sbb
rol
and
retf
in
dec
hlt
cdq
popa
and
imul
sbb
sub
mov
pop
pop
jge
popf
push
pushf
cmp
or
outs
mov
push
sti
inc
sar
mov
sbb
mov
mov
dec
pop
sbb
sbb
jb
dec
mov
mov
push
sbb
jmp
in
aas
cdq
std
aas
mov
sbb
fist
mov
jns
pushf
push
mov
xchg
(bad)
jp
test
test
lahf
xchg
xor
bts
fnstsw
sub
and
test
mov
add
xor
cmp
popa
out
scas
dec
pop
jo
adc
cmp
out
pop
cld
scas
out
sbb
aaa
test
pop
mov
imul
int
in
aaa
ins
fst
fdivr
push
jmp
cld
jo
adc
dec
jge
jg
fadd
add
sbb
fdivr
xlat
inc
mov
addr16
sahf
std
mov
add
cmps
xchg
test
lods
ror
ds
xlat
cmp
lahf
imul
pop
clc
xchg
inc
inc
mov
and
mov
inc
xchg
add
jmp
dec
jae
aad
inc
or
imul
std
cmc
scas
(bad)
rcl
clc
xchg
hlt
cmp
ja
jae
out
add
int
mov
mov
movs
push
jae
add
add
pop
adc
mov
aam
movs
out
(bad)
dec
cmp
fnsave
fs
cli
add
xchg
sahf
jns
pop
sub
inc
inc
xchg
(bad)
rol
icebp
adc
aam
daa
sub
xor
inc
mov
clc
dec
and
mov
mov
retf
retf
push
(bad)
mov
mov
xor
push
lds
out
std
pop
clc
xchg
inc
jno
je
shl
mov
jnp
mov
adc
leave
sub
sbb
inc
lds
imul
sub
pop
pushf
jne
sub
sub
inc
std
ja
push
cmp
push
mov
sub
dec
jb
ins
jp
sub
jae
test
push
add
and
mov
stos
stos
pop
cmps
daa
fstp
add
mov
inc
int
hlt
cmp
mov
cmps
push
cmps
sub
cmp
(bad)
into
adc
ja
out
inc
push
test
mov
mov
push
inc
out
or
popf
pandn
xchg
cld
scas
dec
dec
sub
popf
xor
fmulp
retf
xchg
sar
test
xlat
adc
mov
push
add
sbb
arpl
or
loop
cmp
(bad)
jae
xlat
std
mov
push
(bad)
aam
leave
outs
sar
test
in
mov
add
mov
mov
stos
in
cld
loopne
les
fs
push
inc
mov
mov
mov
add
cdq
adc
aaa
out
or
cmp
xor
pop
es
inc
aad
ret
mov
ds
data16
add
gs
out
ss
xor
hlt
mov
add
call
imul
stc
adc
lds
inc
rcl
push
jnp
in
pop
ret
and
ret
and
jecxz
ins
jl
adc
dec
xchg
shr
dec
mov
inc
cwde
cmp
jbe
jge
mov
clc
arpl
sti
iret
push
mov
pop
pop
add
adc
and
add
in
ds
bound
inc
int3
lods
aad
sbb
mov
call
mov
adc
enter
(bad)
arpl
rcl
push
or
adc
nop
cmc
mov
jge
aas
pop
rcl
sbb
aad
mov
sbb
clc
rcl
in
xor
xchg
outs
dec
retf
mov
adc
ror
shl
stos
mov
fs
outs
push
jmp
int
(bad)
xor
adc
mov
mov
jae
in
cld
or
dec
sbb
arpl
in
pop
cmp
sbb
cmp
je
call
push
xor
and
loope
cmp
sub
mov
lds
mov
out
inc
dec
adc
xchg
xor
mov
fistp
fdivr
push
push
mov
xchg
dec
jb
test
mov
es
inc
outs
dec
sub
and
sub
fist
push
mov
add
sub
(bad)
cwde
icebp
mov
movs
ins
pop
rcr
mov
movs
ds
mov
ror
sub
xchg
sbb
int
mov
xor
sbb
adc
inc
add
ins
xchg
enter
xchg
add
stos
or
call
das
fwait
rol
into
adc
rol
mov
cmp
adc
dec
stos
mov
adc
push
push
mov
hlt
mov
or
cmp
outs
xchg
push
cld
mov
push
pop
mul
or
add
rol
push
in
sbb
jbe
xor
push
fcom
jbe
lock
aaa
stos
iret
ss
cld
int3
leave
test
xor
test
mov
sbb
push
js
mov
aad
inc
stc
sub
(bad)
jge
sbb
sub
sbb
ja
repz
ja
push
dec
sbb
leave
fist
ds
xor
retf
sti
push
gs
aam
ja
pop
outs
shr
lods
add
push
jmp
dec
fisubr
and
mov
idiv
adc
popa
mov
fidivr
dec
push
or
in
jnp
out
dec
mov
push
lea
popa
mov
dec
shl
imul
add
enter
or
adc
mov
daa
arpl
mov
in
dec
sahf
xchg
push
imul
mov
es
pop
jne
push
xchg
mov
push
pop
lods
mov
movs
push
pop
dec
mov
mov
inc
dec
iret
pop
sahf
ja
jae
in
jp
mul
stc
adc
xlat
jo
add
ds
jmp
sar
jae
cmp
mov
daa
sbb
inc
(bad)
daa
adc
add
ret
xchg
adc
cmp
lods
push
and
pop
xchg
fisub
add
dec
xchg
int
out
popf
adc
add
push
mov
push
cmp
aaa
push
iret
mov
cli
in
in
out
pop
nop
sub
inc
test
rol
es
ja
mov
pop
data16
xor
popa
das
mov
(bad)
cmp
lea
shl
sbb
or
test
pop
in
loope
outs
sbb
mov
xor
add
add
scas
lods
adc
jmp
mov
adc
js
xor
push
cmp
ja
icebp
lahf
out
scas
dec
adc
jo
add
lods
dec
mov
js
pop
daa
mov
jge
pop
mov
mov
mov
mov
inc
xchg
repnz
ja
clc
gs
xor
in
fwait
inc
test
in
pop
les
clc
iret
pop
inc
push
mov
mov
mov
dec
repnz
cld
scas
mov
inc
and
(bad)
enter
cld
dec
xchg
std
and
dec
push
out
je
iret
retf
jne
mov
push
ret
int3
cmp
or
pusha
jae
loopne
cdq
jno
ror
xchg
mov
xchg
fldenv
int
sar
push
mov
pop
cs
dec
int
jb
rcl
in
push
es
test
push
ins
sahf
xchg
jae
test
xchg
and
stos
int3
xchg
sub
int3
addr16
ror
inc
xor
stos
hlt
push
sbb
pusha
push
popf
mov
inc
add
inc
leave
or
cmp
sub
stc
and
int
or
outs
sub
push
sar
pusha
and
mov
ins
sar
repz
mov
dec
outs
movs
pop
jecxz
or
inc
icebp
or
jle
pop
jg
mov
(bad)
mov
dec
scas
xchg
shr
mov
jae
add
dec
mov
scas
into
lods
outs
mov
movs
test
(bad)
sub
sub
xchg
sti
xlat
jmp
xchg
lea
adc
leave
push
mov
out
in
sbb
sub
sbb
jge
and
(bad)
pop
mov
addr16
xchg
push
lea
fs
dec
push
cmps
mov
inc
ret
iret
jns
add
adc
mov
popa
mov
mov
int
jbe
sub
scas
shr
sub
xchg
xchg
mov
inc
addr16
rcl
and
sbb
aaa
sti
les
popf
inc
les
push
scas
and
iret
icebp
(bad)
out
jns
inc
xchg
cmp
jae
imul
pop
in
icebp
mov
bound
pop
or
cli
mul
test
dec
ficomp
jl
mov
aaa
xor
xchg
and
packssdw
fimul
push
pop
sub
cld
fstp
push
mov
sahf
jbe
xchg
(bad)
pop
xchg
jo
fwait
test
mov
iret
clc
ror
add
es
jmp
push
xchg
jb
pop
gs
pop
cmp
jnp
sbb
push
(bad)
pusha
sbb
mov
push
jle
test
pop
push
in
fsub
xchg
fmul
sar
dec
retw
sub
jno
xchg
ins
ja
adc
pop
aam
or
jl
fs
nop
dec
inc
add
mov
pop
iret
pop
out
cs
and
jns
sbb
push
dec
xchg
adc
cmp
mov
mov
add
pop
cmp
jb
cmp
fwait
call
mov
cld
dec
inc
add
ror
inc
adc
xchg
cmps
add
arpl
mov
mov
(bad)
sahf
pop
and
inc
inc
shl
sbb
cwde
push
sub
push
xor
ret
lods
inc
jecxz
cdq
aas
adc
ret
sub
fcmovbe
dec
add
data16
and
les
jmp
addr16
inc
inc
dec
sbb
and
clc
xor
out
ret
push
xchg
pop
cmps
cmp
out
mov
lods
loope
dec
mov
push
sub
dec
xchg
test
push
adc
mov
ja
lahf
add
inc
sbb
addr16
sbb
dec
ffreep
mov
pop
in
adc
sahf
pop
fwait
xlat
add
add
push
push
pop
sti
sub
daa
mov
xchg
fiadd
mov
scas
sbb
xor
sbb
aaa
jg
enter
and
mov
lods
cmp
pop
sbb
out
mov
mov
retf
xchg
fisubr
dec
dec
cmps
and
out
mov
inc
cmc
xchg
xchg
cmp
aam
je
dec
xchg
and
mov
lods
mov
add
(bad)
jns
fstp
push
add
sub
sub
pop
popa
lods
into
in
add
dec
mov
in
xchg
dec
jle
mov
lock
xchg
sub
pop
add
data16
mov
lock
push
sbb
loopne
mov
sub
sub
add
sbb
loopne
jp
xchg
in
sbb
xor
and
stc
aaa
cmp
pop
movs
sub
sub
cld
add
adc
pop
xchg
pushf
cmp
imul
int3
ror
ss
ins
test
xor
fisub
add
pop
mov
push
xchg
push
push
mov
call
int3
add
sub
mov
in
xor
sti
mov
or
aad
sub
xchg
cwde
test
jmp
xchg
cmp
test
add
adc
les
iret
mov
cld
jmp
stc
jns
out
popa
not
jge
lahf
jp
jge
jge
data16
inc
dec
jl
repnz
sar
mov
in
ss
cwde
das
sbb
dec
mov
cli
je
fisttp
data16
xlat
cld
and
test
mov
xor
xchg
lods
sub
(bad)
movs
inc
jp
dec
and
mov
and
mov
enter
xchg
loopne
rcl
verw
int3
mov
dec
mov
inc
rcl
in
pop
and
mov
sbb
outs
mov
lods
xchg
fild
cmps
dec
mov
xor
adc
mov
loop
retw
pop
adc
sbb
push
mov
fsubr
adc
and
retf
cld
movs
sbb
mov
jne
push
cmps
cmc
mov
add
into
out
xor
push
aas
out
loop
ficom
out
push
dec
fucomi
ffree
cmp
jae
in
js
cli
xchg
fnsave
js
(bad)
cmp
sub
xor
out
push
fisttp
jne
adc
mov
int3
mov
sbb
test
or
les
sbb
test
dec
cld
fwait
movs
xchg
imul
outs
aad
imul
push
lds
out
cmp
push
mov
out
sti
pop
mov
xadd
ret
mov
push
and
cmp
fisubr
stos
stc
sbb
jne
ds
je
iret
repz
xor
jmp
movs
add
aam
aam
stos
out
in
(bad)
in
cmp
xchg
sub
mov
into
adc
sbb
jp
(bad)
js
pop
jge
stos
mov
and
mov
sub
pop
pop
inc
cmc
mov
jp
aam
xchg
not
ins
push
enter
in
lea
call
es
mov
test
es
sbb
inc
(bad)
out
pushf
and
inc
into
cwde
inc
sahf
mov
fimul
ss
mov
mov
(bad)
mov
bswap
movs
movs
mov
jmp
sub
cli
mov
test
inc
xchg
xchg
sub
adc
sahf
adc
iret
loopne
mov
mov
or
lsl
jle
push
xor
push
imul
mov
js
icebp
sbb
stc
add
in
inc
pop
sbb
clc
jnp
push
mov
sahf
push
dec
xlat
jbe
sbb
mov
int
shl
and
push
ins
data16
iret
inc
fcmovu
loopne
pop
jl
mov
mov
or
scas
or
aas
mov
jmp
jne
not
jl
xchg
or
mov
cdq
sub
pushf
inc
dec
lahf
pop
mov
dec
and
out
and
mov
out
sub
outs
int3
mov
cmp
or
ds
icebp
or
dec
add
jp
jmp
mov
jmp
fist
add
div
mov
pop
pop
mov
xor
das
cmp
ret
test
in
jo
call
mov
mov
das
cmc
retf
add
movs
(bad)
stc
xchg
xor
sar
arpl
jne
mov
sub
inc
mov
ror
adc
dec
aam
dec
js
cmps
jmp
icebp
mov
mov
bound
fldenv
gs
mov
scas
cwde
push
sbb
outs
psubd
adc
jecxz
mov
in
push
jl
call
jl
dec
jne
fmul
mov
or
addr16
retf
das
mov
mov
jecxz
pop
sbb
nop
inc
jns
sbb
mov
call
push
add
aas
into
mov
pop
(bad)
mov
(bad)
jg
cdq
outs
push
pop
mov
adc
cmc
push
scas
or
cli
cmp
stos
outs
or
shl
into
pushf
pop
pop
jmp
push
and
sbb
or
dec
mov
xchg
aam
mov
jnp
jmp
outs
mov
ret
(bad)
fwait
into
inc
cmp
adc
mov
(bad)
xchg
scas
cld
push
inc
test
ins
fild
push
mov
pop
ret
std
adc
out
fxch
sub
aam
jg
mov
mov
das
test
jmp
inc
mov
enter
pop
stos
(bad)
adc
pop
addr16
retf
and
adc
jne
xchg
out
std
popf
cdq
std
cmp
jle
sbb
iret
and
cmc
sti
out
ret
test
out
ret
loopne
mov
movs
lahf
sub
sub
cli
xchg
mov
add
mov
sbb
test
sub
sbb
ror
fidivr
scas
mov
mov
test
push
jg
test
je
push
jno
aad
(bad)
out
xchg
push
sub
push
inc
aaa
std
pop
ret
repnz
(bad)
ins
pop
push
jge
fldln2
cmc
mov
out
sbb
cmc
out
movs
sar
les
add
idiv
fcomip
pop
int
cmc
mov
jle
aad
push
jp
(bad)
in
jmp
rcr
jmp
std
ret
(bad)
jo
push
cli
jmp
iret
arpl
fistp
cmc
fs
mov
in
in
std
adc
(bad)
neg
lea
iret
lods
inc
add
ret
push
cs
mov
mov
inc
outs
int
jo
outs
fst
pop
push
fstp
(bad)
aad
cld
add
shl
xor
retf
jmp
retf
jge
cli
mov
clc
pusha
mov
push
idiv
ja
das
xchg
jg
jbe
aaa
mov
fnstenv
jmp
lods
mov
hlt
(bad)
ja
scas
xchg
call
idiv
daa
mov
int
(bad)
cmp
cmp
ss
xchg
in
jle
test
call
inc
(bad)
cmc
xchg
or
push
fcompp
add
xor
jge
mov
inc
ret
js
jp
jge
leave
lock
adc
jne
sbb
jecxz
xchg
fs
jb
imul
cmp
xor
ficom
cmp
dec
cmp
push
sbb
lahf
ds
dec
data16
xchg
les
aam
inc
(bad)
push
mov
scas
ins
mov
mov
pcmpgtw
sub
pop
push
xchg
mov
xchg
xchg
adc
inc
shr
stos
dec
xor
xchg
sub
jmp
cmp
shl
ins
jnp
imul
cdq
pop
or
mov
or
sahf
jne
jnp
(bad)
int
setp
adc
jb
movs
xchg
jns
int
xchg
cmp
dec
neg
mov
adc
and
adc
add
pop
add
pop
sub
sahf
jns
popf
icebp
or
mov
xor
cs
jg
mov
jge
lock
fcom
nop
xlat
rol
ret
mov
icebp
push
pop
call
inc
xor
cmps
cmp
jg
cmp
stc
jbe
hlt
jbe
std
cmp
inc
pop
cmp
jp
(bad)
loop
retf
retf
and
out
mov
inc
mov
dec
clc
mov
adc
fstp
scas
jge
push
(bad)
xchg
jmp
jnp
fwait
aad
sub
iret
mov
repnz
lock
call
dec
arpl
xchg
sbb
ret
out
test
mov
fcmove
scas
and
add
(bad)
std
ds
in
(bad)
adc
cdq
pop
test
scas
enter
xchg
lods
xchg
xor
fldl2e
loope
dec
add
jo
xor
test
cmp
lahf
retf
icebp
out
jl
pop
xchg
push
lods
mov
outs
jae
bound
jmp
push
frstor
pop
adc
out
fisubr
or
add
push
into
sub
sahf
sub
jecxz
(bad)
jmp
movs
test
pop
xor
mov
popf
stos
dec
repz
sbb
cmp
sti
out
adc
or
in
add
push
je
pop
add
sub
mov
push
inc
cmps
mov
stc
cmp
pop
shr
je
(bad)
push
adc
pop
push
jae
add
mov
xchg
in
push
ja
add
mov
inc
gs
ds
imul
aas
inc
pop
jbe
pushf
dec
sahf
cwde
pop
pop
jns
xor
pop
xchg
push
iret
iret
fistp
scas
dec
scas
and
pop
out
int3
dec
mov
mov
hlt
pop
sbb
cli
aaa
rol
cmp
and
cmp
xchg
test
dec
lock
into
out
sbb
icebp
(bad)
dec
mov
cmp
popf
clc
int3
lods
inc
popa
dec
mov
jnp
or
jae
add
jnp
xchg
test
jne
mov
popf
aam
pop
out
cmp
cs
pusha
ror
repz
push
ret
(bad)
adc
adc
cmp
push
adc
pop
sub
jge
out
jl
xlat
fstp
xchg
sti
imul
xchg
out
mov
adc
in
pusha
sbb
std
jmp
add
retf
xlat
push
jo
sti
loope
call
cli
and
pop
inc
mov
push
mov
ret
jnp
scas
mul
pop
test
in
les
in
lods
mov
lods
mov
outs
jne
repz
sahf
hlt
and
scas
pushf
lods
xor
ficomp
jo
cmp
cs
call
jmp
push
push
aam
adc
and
push
jmp
jmp
(bad)
dec
aam
mov
lods
push
scas
data16
adc
jecxz
cmp
pusha
dec
sbb
cmp
xor
call
push
lock
xor
popa
(bad)
mov
jnp
jmp
ds
data16
(bad)
mov
daa
(bad)
mov
in
loopne
add
push
or
push
adc
fnstsw
shl
xor
and
sbb
xchg
shl
xchg
jb
ds
jl
mov
idiv
push
add
aam
adc
popa
cmps
pop
je
mov
jl
jle
mov
mov
inc
and
pushf
jg
pop
or
out
pop
fdivr
dec
ror
xchg
jo
sti
neg
in
shl
pop
and
mov
std
push
adc
pop
dec
pop
xchg
or
sbb
push
in
or
mov
sub
sbb
test
sub
pop
mov
mov
leave
je
or
aad
xchg
fld
sti
mov
fwait
push
mov
shl
cmp
mov
xor
call
push
mov
pop
test
push
xchg
ret
inc
pop
aas
cmp
leave
scas
jmp
sub
dec
cwde
xor
out
or
and
enter
mov
xchg
xchg
test
ror
pushf
and
sbb
lods
fs
xchg
cmps
pop
bound
cmps
das
cld
jle
push
outs
out
imul
(bad)
adc
inc
nop
not
jg
arpl
and
lahf
fst
sbb
lods
arpl
xchg
movs
mov
cdq
aaa
cmp
test
(bad)
popa
mov
inc
popa
lods
xchg
add
inc
mov
stc
ret
in
and
pop
pop
sti
bnd
add
xor
mov
shl
or
shl
shr
jmp
test
add
hlt
and
in
out
dec
mov
dec
sahf
(bad)
push
jl
xor
out
push
mov
and
jne
jns
xlat
xchg
stos
pusha
sub
adc
mov
add
jp
jne
mov
push
lock
clc
sub
add
push
adc
(bad)
adc
pusha
fwait
mov
dec
add
inc
out
les
dec
dec
nop
aad
into
pop
inc
push
dec
out
dec
rcl
mov
push
outs
adc
mov
mov
cmp
imul
js
and
push
scas
cmp
inc
mov
mov
lea
test
and
test
and
xor
mov
sub
inc
pop
mov
mov
popf
mov
ja
pop
outs
or
push
adc
mov
in
stos
(bad)
or
in
dec
sub
mov
jae
jnp
push
xlat
mov
test
std
adc
cmps
add
out
mov
jg
daa
xlat
test
adc
ins
inc
cdq
inc
mov
sahf
fcmove
inc
inc
sub
push
dec
aad
clc
xchg
not
stos
test
sti
push
xchg
fwait
repnz
outs
push
les
ret
icebp
xchg
repnz
mov
stos
pop
mov
ins
rol
(bad)
in
xchg
pop
mov
enter
call
sbb
add
cmps
mov
inc
or
pop
in
pop
jne
dec
sbb
out
inc
daa
and
(bad)
xor
ja
mov
movs
fbstp
xchg
mov
sbb
cld
jmp
shl
loop
jmp
dec
mov
jnp
mov
mov
es
pop
jo
clc
lea
pop
ret
xlat
xchg
pop
lods
cld
xchg
cmp
outs
aas
nop
addr16
stos
aad
xlat
popa
pop
pushf
sbb
js
xor
shl
pop
sbb
cwde
popa
jge
add
std
jg
dec
xlat
fstp
movs
push
xchg
pop
mov
jmp
mov
add
movs
push
repnz
cdq
out
or
jmp
ror
push
dec
inc
push
js
adc
arpl
call
jmp
ret
xor
mov
dec
push
push
out
ficom
jp
sub
pop
cmp
aad
das
sub
pop
cmp
jmp
push
loopne
push
mov
in
push
cmp
leave
fwait
jne
je
push
lock
cmps
cmp
pop
outs
cli
dec
pop
jmp
and
out
cs
jg
and
scas
inc
jl
lds
outs
stos
sbb
in
rcl
lods
push
xor
jmp
push
stos
xchg
mov
jo
movs
bound
mov
movs
push
popa
sbb
or
div
inc
les
inc
jo
icebp
mov
mov
test
or
dec
push
push
jp
adc
xor
sbb
xor
jmp
repnz
mov
shl
jge
jno
pop
lock
xchg
lea
enter
jl
sub
mov
xor
js
inc
mov
loop
mov
mov
frstor
adc
movs
mov
pop
push
inc
cmps
mov
movs
sbb
loop
push
fild
pusha
lock
cmp
test
ss
cli
or
aaa
push
rcl
jle
push
fisttp
push
and
xchg
inc
ror
cmp
pop
jmp
mov
aaa
jnp
cmp
aas
fisubr
mov
cmp
andnps
adc
js
sub
pop
sub
mov
fsubr
jp
std
jnp
out
mov
or
xor
and
sar
in
add
push
mov
dec
bswap
imul
shr
fstp
push
pop
dec
jae
or
pop
(bad)
cmp
ins
rcl
adc
(bad)
addr16
dec
add
pusha
outs
repz
stos
(bad)
jmp
push
pop
pop
cmp
scas
fcomp
jne
out
sub
sub
push
in
call
and
inc
je
cmp
aaa
pop
pop
scas
repz
nop
ror
sahf
sar
jbe
add
sti
mov
adc
(bad)
ror
fld
push
pop
aas
ficom
jg
push
jae
stos
pop
fwait
add
add
xchg
pop
mov
dec
add
(bad)
add
push
dec
call
std
dec
or
fwait
inc
inc
aam
nop
or
xor
shl
inc
mov
dec
push
fist
xor
out
in
dec
push
enter
sub
repz
in
mov
jae
push
mov
inc
cld
shr
and
mov
pop
cmp
dec
xor
lea
int
pop
dec
or
or
push
inc
and
repnz
(bad)
or
(bad)
mov
(bad)
mov
jbe
mov
sub
out
lods
pop
das
and
dec
inc
dec
lock
ret
fnstsw
retf
ja
icebp
and
mov
jnp
icebp
mov
adc
add
outs
gs
std
jae
fldenv
push
cmc
push
bnd
fcmove
xor
stc
popf
adc
or
sub
out
push
push
cdq
(bad)
xchg
neg
fild
xlat
mov
xchg
je
imul
call
js
(bad)
arpl
mov
out
call
or
ret
fcmovnbe
sbb
push
mov
xor
pop
mov
xor
in
inc
pop
cwde
pop
mov
inc
std
(bad)
in
jb
sbb
cmps
push
aam
daa
sbb
out
sti
sahf
xor
out
xor
inc
test
mov
test
dec
leave
les
push
mov
movs
or
fisttp
mov
or
hlt
jno
call
inc
dec
fidiv
(bad)
mov
xchg
stos
jo
xchg
arpl
mov
je
stos
mov
cmps
dec
and
xchg
pop
loopne
stos
gs
inc
and
(bad)
sub
and
jmp
icebp
xor
lahf
pop
(bad)
loopne
or
add
jg
fild
pop
mov
ficom
push
mov
lock
jg
aaa
mov
or
push
add
push
lods
les
int
addr16
cmc
movs
sub
jle
(bad)
mov
(bad)
mov
jb
not
sti
adc
mov
xor
push
aad
xchg
sbb
mov
push
jae
pop
cmp
test
jb
inc
pusha
(bad)
sti
arpl
(bad)
jp
jg
cwde
xor
hlt
sub
add
sub
or
push
lock
gs
(bad)
rcl
cmp
out
jbe
adc
aaa
fldenv
jp
ss
std
sub
retf
das
leave
pop
xor
inc
shl
bnd
(bad)
fcmovnbe
hlt
clc
or
mov
mov
push
add
mov
sahf
clc
push
push
ins
stc
ins
in
jge
pop
scas
sahf
(bad)
xchg
adc
retf
mov
or
and
xor
jae
inc
cmp
dec
mov
lea
push
adc
jmp
loope
or
adc
push
scas
stc
push
cmp
out
cmp
inc
mov
lahf
push
ja
mov
jb
scas
pop
je
cmps
ds
ret
sbb
std
mov
sbb
js
pop
jmp
and
cmp
fidiv
data16
lds
and
or
repz
out
add
mov
mov
jecxz
sub
(bad)
adc
mov
mov
mov
push
cmps
test
push
out
inc
aaa
idiv
repnz
jmp
or
repnz
repz
lods
or
scas
and
xchg
adc
xlat
ror
cmp
cmps
out
sub
sbb
cmp
out
xor
pop
mov
mov
add
out
xchg
push
aam
xor
jl
aad
inc
std
rcr
sub
mov
out
pop
jb
and
push
xchg
mov
(bad)
std
psubusb
scas
adc
add
dec
popf
sar
sub
cld
xor
xchg
xor
iret
std
push
push
mov
xlat
push
mov
mov
push
lods
lods
lds
ins
call
fs
daa
pop
and
sbb
dec
stc
mov
out
jl
movs
popf
das
dec
loop
cld
pop
loope
(bad)
jo
mov
xor
clc
scas
loop
fs
icebp
sbb
push
cwde
ss
ret
in
repnz
sbb
or
push
mov
rcl
sahf
test
mov
adc
push
dec
mov
stos
sub
add
pop
sar
jb
aad
imul
push
lahf
ficom
mov
cmp
popf
retf
fmul
push
cmc
xor
test
mov
or
mov
push
shl
test
adc
out
xchg
inc
imul
mov
xor
lock
push
xor
sub
jge
or
dec
or
mov
(bad)
icebp
inc
jb
fiadd
mov
mov
mov
ret
hlt
and
sbb
fld
ins
inc
xchg
push
dec
dec
push
sbb
xor
fwait
mov
adc
xchg
mov
xor
jb
(bad)
fcomp
mov
xchg
push
test
(bad)
fiadd
in
cmps
xchg
adc
popa
in
movs
pop
(bad)
pop
add
div
jecxz
loop
xor
mov
cmp
add
xchg
push
adc
hlt
call
lahf
pop
arpl
xchg
inc
test
adc
lahf
xchg
xchg
xor
mov
push
out
sbb
dec
enter
hlt
add
cmp
pop
mov
sub
jmp
and
inc
stos
cli
ds
adc
cmps
ret
cmp
nop
pop
jb
pop
hlt
pop
jp
cmc
pushf
in
out
or
into
xchg
jp
pop
test
mov
jle
in
mov
les
mov
cwde
je
push
and
mov
xor
inc
mov
and
and
mov
test
push
aas
aaa
mov
sbb
push
add
lahf
sahf
cmp
shl
pushf
or
pop
aas
ins
outs
and
xor
sbb
scas
add
(bad)
ins
add
add
mov
out
repz
fidivr
pop
push
xlat
cdq
mov
ret
mov
cli
adc
imul
idiv
dec
std
mov
or
cmp
(bad)
dec
add
xchg
mov
shl
scas
stc
retf
test
lods
lea
inc
mov
jns
movs
dec
mov
or
add
push
jle
test
cmps
and
fsubr
dec
mov
leave
cdq
fnstsw
pop
adc
mov
stos
push
(bad)
data16
dec
xor
popf
(bad)
aad
inc
neg
retf
xor
pop
lea
(bad)
push
mov
out
push
pop
mov
cmp
sub
or
cmp
and
dec
xor
lock
add
add
shl
shl
pop
repz
ins
push
in
mov
das
jl
popa
arpl
imul
pop
test
cmp
mov
aas
add
cmp
dec
inc
cdq
(bad)
ror
aad
scas
pop
pop
and
pop
mov
add
mov
popf
pop
fstp
mov
into
sahf
into
aas
mov
jle
sti
fsubr
jge
mov
mov
mov
ins
cdq
sbb
xor
jp
push
mov
movs
cmp
fmulp
dec
fnstsw
movs
jnp
push
movs
iret
lock
addr16
mov
push
push
ficomp
(bad)
adc
iret
mov
das
cmc
add
xchg
aam
retf
mov
fs
adc
sbb
inc
nop
pop
xor
and
pop
or
aad
jno
mov
dec
and
loopne
stc
(bad)
loope
stos
jmp
mov
mov
ret
leave
int
mov
shr
sbb
sar
cmp
mov
bound
or
sub
adc
pusha
rcl
loope
mov
imul
loopne
popf
cmc
adc
mul
in
pop
and
popf
mov
aaa
repz
inc
frstor
or
pop
fxam
test
mov
mov
and
sar
out
cmp
ret
sbb
inc
out
push
(bad)
cmp
les
mov
imul
inc
outs
cwde
add
js
push
aaa
jmp
xchg
ds
add
fs
movs
fnstcw
enter
sub
and
aas
out
cld
jbe
mov
mov
push
(bad)
sti
adc
jmp
pop
mov
sar
push
ins
jns
and
lods
mul
data16
push
fs
xor
mov
outs
inc
imul
mov
dec
retf
lods
or
pop
rcr
mov
inc
pop
dec
ja
ret
jg
or
pop
cdq
test
sub
mov
jnp
or
fist
inc
scas
cmp
pop
jmp
jbe
and
sub
lahf
adc
cmp
adc
jbe
mov
cli
ja
nop
hlt
dec
xchg
stos
leave
mov
cmp
neg
nop
sbb
ins
(bad)
push
adc
mov
push
jp
jmp
pop
add
jge
int
call
inc
xor
pop
fdiv
mov
ss
pop
inc
mov
adc
mov
add
xor
ret
mov
outs
inc
in
inc
jl
int
xor
pop
scas
loope
sbb
mov
push
cmc
cmp
mov
add
pusha
adc
lock
push
and
or
fldcw
add
inc
out
scas
rcl
inc
ins
lods
call
push
pop
sub
daa
add
loopne
std
jl
xor
jo
add
mul
xchg
sbb
outs
sbb
es
sti
and
stos
mov
iret
retf
pop
rol
out
mov
fst
xor
mov
adc
rcl
mov
pop
call
sbb
dec
xor
xor
movs
stos
xor
cmp
sub
loope
jle
lea
(bad)
adc
xor
leave
loop
add
dec
in
xchg
test
sub
js
outs
push
mov
in
or
les
dec
push
or
repz
sar
inc
xchg
in
xor
jmp
mov
js
loop
mov
retf
jmp
fwait
adc
es
mov
jmp
adc
fwait
pop
test
jae
jecxz
inc
fmul
push
sub
movs
std
cmp
stos
jmp
aas
in
inc
and
jb
dec
inc
dec
pop
out
mov
mov
pop
sbb
jp
mov
in
les
mov
aad
call
mov
test
pop
mov
out
mov
aaa
and
dec
sbb
icebp
iret
test
sti
mov
arpl
pop
hlt
das
mov
shl
xlat
pop
sub
loope
cmc
cmp
inc
jge
dec
push
out
mov
bound
dec
(bad)
popf
adc
imul
bound
add
rcl
bound
add
jmp
jg
cmp
mov
cmps
setae
adc
loopne
out
dec
bound
out
and
in
cs
adc
push
fist
gs
inc
or
xchg
mov
and
ins
(bad)
das
pop
cmps
dec
or
ja
mov
mov
inc
(bad)
std
mov
cmovns
mov
dec
mov
popf
hlt
adc
outs
aas
fdivr
dec
stos
push
pop
call
lahf
jecxz
mov
mov
sbb
popf
inc
and
and
xchg
icebp
or
out
jmp
scas
jbe
aam
xchg
dec
cmp
jno
mov
or
inc
in
push
xchg
inc
mov
or
clc
add
lock
in
(bad)
pop
ss
xchg
inc
dec
rol
mov
cmp
dec
pop
push
sbb
shl
jb
stc
test
push
dec
ja
sub
sub
xchg
call
xor
movs
push
outs
push
js
adc
xchg
sub
out
add
pop
fnstsw
pushf
arpl
not
xchg
add
ss
mov
stc
bound
mov
inc
fld
stos
ds
xor
call
(bad)
arpl
jb
pop
cmps
mov
or
sub
pop
data16
push
mov
jbe
push
cmp
retf
pop
or
clc
mov
mov
stos
cmps
mov
pop
inc
cdq
leave
movs
sub
jns
std
cmc
xchg
ins
or
lods
mov
push
jnp
sbb
imul
loope
(bad)
mul
out
dec
or
in
push
add
xor
mov
mov
lods
push
jno
fld
(bad)
jns
retf
ins
mov
cwde
dec
xchg
icebp
fnsave
jo
mov
nop
jae
inc
shr
mov
shl
pop
jnp
in
leave
add
enter
mov
or
repz
test
or
mov
imul
add
inc
mov
xor
cmps
lahf
adc
mov
aad
add
jecxz
ds
pop
int
aaa
ret
pusha
or
or
rcr
sbb
inc
add
xchg
mov
dec
dec
push
sub
ss
and
fild
imul
add
int3
sub
mov
dec
repnz
call
xor
rcr
fsubrp
lea
sbb
loope
ds
arpl
mov
adc
das
pop
mov
arpl
add
mov
pop
mov
ds
cmps
and
shr
sti
into
dec
stc
call
mov
dec
out
loope
jmp
mov
push
out
pop
mov
sbb
mov
pop
stos
mov
mov
hlt
sub
pushf
jmp
cmc
stos
dec
sbb
std
mov
push
sti
movs
fwait
ret
mov
fs
(bad)
std
leave
cmp
mov
shl
scas
jo
das
test
rcr
dec
rol
jle
clc
test
(bad)
adc
inc
rcr
sub
ins
pop
jmp
jae
clc
loopne
fldcw
or
dec
dec
push
or
iret
mov
movs
clc
or
call
ror
mov
cmps
je
cmp
je
mov
imul
int
jno
cmp
icebp
ret
and
cmps
mov
push
test
(bad)
loopne
arpl
aas
dec
cld
repnz
fist
outs
(bad)
es
loope
loopne
ret
pop
inc
js
jmp
cmp
mov
stc
xchg
pushf
mov
xchg
call
inc
sub
jo
push
fdivp
lock
jb
hlt
sahf
das
adc
outs
xor
jb
mov
push
daa
dec
jecxz
push
xchg
jmp
hlt
xor
ins
jmp
mov
xchg
aad
shl
outs
dec
and
std
xchg
sub
add
and
push
push
and
in
(bad)
mov
stos
and
ins
mov
jecxz
in
cmp
or
sar
mov
inc
inc
jb
dec
xchg
retf
pop
cmc
xchg
sub
into
push
jno
or
push
(bad)
or
test
xchg
jno
mov
add
fdiv
push
(bad)
xor
cwde
cmp
adc
ja
mov
xor
cmp
pop
push
push
fdiv
mov
popf
retf
(bad)
es
xchg
pop
les
in
xchg
jmp
jecxz
repnz
jmp
mov
xchg
inc
addr16
mov
jecxz
mov
xchg
cli
push
mov
pusha
fcomp
les
pop
and
pop
sbb
je
jns
jnp
and
cmp
mov
nop
inc
xchg
pop
imul
xchg
jns
dec
push
repnz
repnz
out
jmp
call
mov
jae
sub
sti
push
cmp
or
dec
fsqrt
pop
aam
test
add
cmp
pop
mov
mov
mov
rol
out
je
leave
dec
inc
dec
fwait
mov
stos
add
add
and
sbb
push
pop
aad
dec
jae
mov
sbb
nop
es
imul
aas
(bad)
addr16
(bad)
movs
inc
cmp
adc
out
in
(bad)
ss
ins
out
and
dec
in
and
push
jl
cwde
and
out
sub
adc
mov
std
adc
sbb
cmp
stos
push
(bad)
mov
mov
jmp
sub
jp
mov
jg
jae
pop
in
push
pop
add
in
cwde
jge
in
(bad)
mov
mov
add
xor
push
add
std
push
loop
dec
mov
ja
shl
lds
jl
pushf
jo
mov
jecxz
mov
test
jmp
mov
jns
sbb
push
pop
xor
push
loop
adc
clc
outs
dec
fwait
add
iret
push
ret
jle
lahf
sub
and
ficomp
xor
push
dec
cmp
aas
pop
sti
sub
(bad)
push
les
rol
enter
out
cli
cmp
adc
sub
push
psubsw
out
jge
std
in
dec
push
xlat
popf
and
push
(bad)
sti
sub
lods
sbb
or
xchg
gs
mov
cwde
push
sbb
dec
xchg
push
sub
jle
sbb
add
add
nop
leave
xor
cmp
inc
out
pop
jp
cmc
xchg
xor
or
xchg
mov
xchg
repz
push
sub
sar
mov
sbb
fucomip
loope
jmp
push
mov
cdq
inc
add
xchg
imul
(bad)
add
inc
(bad)
and
lods
inc
mov
pop
daa
xor
cmp
mov
add
or
add
ja
or
xchg
popa
cmp
mov
mov
mov
in
iret
inc
pop
lods
loop
and
mov
push
stc
or
pop
enter
fbld
xchg
lea
sar
loope
test
mov
sahf
cwde
leave
pop
jp
mov
push
inc
pop
jns
cs
mov
mov
jne
jbe
or
pop
in
loope
and
adc
pop
add
and
jo
cdq
add
out
xor
inc
inc
mov
pop
les
cli
push
or
mov
out
inc
lahf
xor
inc
inc
aaa
dec
mov
add
iret
mov
inc
shl
jo
cmp
pop
push
data16
push
cwde
pop
retf
inc
addr16
imul
repnz
pop
(bad)
(bad)
std
aad
xor
lock
push
test
jne
and
sub
sbb
xchg
sub
addr16
dec
fimul
in
shl
test
sub
mov
jp
push
popa
push
or
outs
jmp
sbb
(bad)
std
mov
sti
push
or
inc
lds
daa
lods
cmp
xchg
lods
push
(bad)
mov
xchg
pop
sbb
lds
int3
push
fwait
out
sar
sar
retf
pop
xchg
or
adc
outs
fidivr
push
rol
xchg
cmp
scas
and
mov
mov
or
and
fs
cwde
pop
fimul
mov
jnp
mov
or
push
mov
add
sbb
in
test
gs
mov
push
sahf
mov
leave
icebp
jg
jbe
and
rol
sbb
fs
push
jns
pop
sbb
dec
or
sub
sbb
hlt
xchg
pop
dec
push
pop
jb
loope
mov
or
mov
jbe
outs
(bad)
xchg
and
or
repz
inc
cmp
mov
mov
fimul
das
mov
mov
imul
stos
sub
es
mov
inc
jecxz
or
push
and
lods
shl
cmps
or
bswap
popf
imul
mov
nop
or
cmps
adc
adc
nop
mov
adc
push
mov
adc
pusha
mov
outs
not
add
jg
icebp
and
mov
mov
and
stos
mov
mov
test
imul
cmp
sahf
push
lahf
cmp
in
push
adc
retf
mov
mov
lahf
xchg
pop
xor
push
mov
xor
dec
hlt
inc
inc
inc
or
fild
jb
pop
xchg
push
dec
add
add
push
push
mov
pop
ret
fsubr
push
cld
lahf
or
lea
ss
jp
cdq
adc
xchg
retf
push
jecxz
push
mov
imul
fnstenv
fucomp
mov
(bad)
jmp
xor
mov
mov
dec
stc
aaa
sub
inc
rcr
dec
jp
push
dec
aaa
add
sahf
stos
or
inc
test
rcl
push
add
rcr
pop
repnz
aaa
lods
sbb
aam
pop
jle
lea
(bad)
aam
movs
pusha
jmp
pusha
test
sub
jl
sbb
xchg
dec
sbb
call
dec
rol
imul
shr
xor
icebp
jb
(bad)
(bad)
rol
mov
cmovge
add
in
cld
dec
jp
mov
rol
mov
outs
out
add
xchg
ss
inc
xchg
fisubr
mov
push
lods
and
push
daa
add
mov
lock
stos
mov
mov
and
adc
mov
push
mov
nop
movs
and
pop
pop
mov
fstp
xor
sti
adc
jno
push
out
fidiv
cli
dec
in
sbb
and
ret
repz
xor
xchg
sbb
push
mov
std
mov
xchg
call
xchg
je
mov
inc
inc
sbb
fsubp
icebp
add
sub
sub
push
jle
add
inc
dec
mov
stc
stos
(bad)
cmp
(bad)
mov
fwait
test
mov
ret
sbb
repnz
or
jp
mov
shl
inc
fcmovnb
imul
xor
lock
or
jl
xchg
loope
push
pop
xchg
push
ins
add
(bad)
scas
or
in
adc
and
jmp
cmc
dec
(bad)
nop
xor
push
jmp
mov
xchg
int3
or
sbb
ja
add
in
ret
push
loop
scas
out
imul
or
cmp
nop
or
push
dec
add
adc
push
adc
xchg
xor
mov
in
mov
fwait
mov
ret
push
lds
add
dec
mov
fld
std
std
jnp
sbb
jmp
push
mov
pop
shr
sub
push
push
sar
push
mov
ins
sbb
mov
xor
ret
add
icebp
int
sbb
in
lods
push
adc
jle
ins
mov
(bad)
cwde
shl
mov
sbb
popa
repnz
popf
dec
out
pop
sub
sar
inc
mov
test
stos
cmc
loop
js
addr16
rol
ja
mov
jmp
push
mov
ret
cmp
push
jecxz
push
repz
cmp
ja
retf
mov
nop
or
xchg
(bad)
mov
inc
ss
in
xchg
xchg
add
sti
inc
(bad)
ss
jae
push
inc
xor
fs
popa
mov
mov
sbb
inc
cs
lahf
mov
mov
and
hlt
xchg
bnd
xchg
pushf
loopne
mov
inc
inc
dec
repz
jo
daa
xchg
add
cmp
enter
jle
ficom
add
aas
mov
dec
data16
shl
push
lea
sbb
repnz
mov
cld
mov
add
add
cmps
in
mov
hlt
adc
arpl
repnz
(bad)
jb
adc
jle
or
push
stos
mov
mov
jmp
adc
push
sahf
xor
icebp
adc
bound
adc
mov
and
and
dec
enter
xor
rcl
(bad)
cs
mov
mov
ffree
xchg
xchg
sahf
ret
jg
lods
rcl
add
or
jnp
mov
adc
clc
mov
data16
ret
mov
xor
outs
test
sbb
pusha
scas
in
pop
pop
and
fisttp
cmp
jge
fwait
icebp
retf
xchg
sub
jne
inc
rol
or
ud0
sub
cmp
push
or
add
mov
repz
or
les
test
add
cmps
lods
out
stc
test
sar
retf
cmp
loopne
xchg
xor
xor
pop
mov
jp
aas
sub
outs
or
sub
cwde
out
js
and
and
(bad)
mov
or
in
repz
call
mov
push
push
jle
pop
cmps
adc
inc
gs
xchg
mov
add
mov
cmp
test
cli
hlt
cmps
or
xchg
xor
sub
shr
inc
test
out
(bad)
adc
shr
mov
xchg
inc
test
jmp
mov
push
stos
mov
add
cmc
mov
mov
xchg
leave
and
loope
(bad)
inc
sbb
addr16
mov
cld
div
enter
scas
mov
out
xor
pop
mov
sub
sub
or
out
dec
popa
dec
and
data16
push
and
push
cs
push
lds
mov
jo
add
xchg
sub
jmp
fdiv
in
cs
aam
stos
add
and
pop
fst
mov
test
call
repnz
out
repnz
push
push
cmovg
mov
jnp
inc
loop
dec
test
addr16
retf
ss
jp
dec
dec
push
(bad)
hlt
jb
xor
clc
(bad)
repz
pop
mov
mov
push
outs
push
lock
and
mov
pop
lds
(bad)
int
lgs
aas
pop
dec
lock
test
dec
pop
add
repnz
push
jmp
jecxz
cmp
movs
loope
and
add
cdq
arpl
cmp
pop
and
mov
adc
push
xchg
in
jmp
cmp
or
xor
inc
fadd
hlt
cdq
in
mov
pop
lock
and
ret
jmp
repnz
repnz
inc
rcl
movs
sub
ja
sub
jb
dec
pop
and
fst
xlat
jmp
hlt
push
add
adc
movaps
icebp
pop
jne
pushf
adc
push
test
or
xchg
daa
jbe
push
iret
and
ins
cmp
mov
ins
out
gs
aam
(bad)
iret
movs
mov
cs
sub
push
jb
fisub
imul
test
xlat
fnstcw
pop
(bad)
call
and
scas
rol
stos
xchg
repnz
imul
cli
(bad)
xor
dec
push
adc
in
test
ret
loope
cmp
push
out
pusha
add
int3
stos
pop
xor
mov
xchg
adc
mov
(bad)
cmps
sub
xchg
fidiv
fld
jg
sbb
adc
icebp
mov
bound
popa
fstp
sub
es
mov
inc
push
ret
xor
adc
into
jg
cmp
jle
div
jle
pop
adc
mov
mov
and
pusha
push
fiadd
cwde
cs
xor
jbe
frstor
add
or
lds
ret
cdq
pop
mov
sub
pop
gs
and
xlat
jb
mov
add
push
test
int
inc
enter
test
pop
adc
push
movs
jbe
inc
fadd
mov
cmp
pop
(bad)
mov
fistp
push
xchg
aam
inc
mov
inc
int
jmp
jns
loope
inc
ins
movs
xor
mov
dec
mov
sbb
arpl
ja
aam
xor
inc
mov
xchg
xor
lds
dec
pop
rcl
xor
or
stc
cwde
and
push
sub
xor
pop
mov
cmc
stos
xchg
cwde
dec
dec
nop
dec
outs
or
xor
ins
push
sub
aaa
inc
dec
add
hlt
add
enter
aam
jnp
pop
mov
push
out
loopne
xor
jae
lea
mov
fwait
jecxz
xor
sbb
les
or
fldcw
aad
or
or
leave
in
pop
push
jg
or
cld
loop
mov
mov
test
mov
sub
out
stc
dec
cld
lahf
in
mov
add
mov
ret
push
call
std
sar
cli
std
sub
jns
inc
into
das
cmp
or
jne
mov
jg
sub
cld
and
push
xchg
xlat
or
sbb
into
pushf
dec
sub
call
mov
jle
mul
adc
loopne
xchg
mov
ins
jle
mov
lahf
push
mov
and
adc
push
in
add
mov
push
mov
mov
repnz
inc
les
dec
mov
(bad)
(bad)
ror
ret
inc
inc
lods
cs
sub
xchg
fisttp
repz
push
mov
frstor
outs
leave
les
shr
aam
push
jle
test
mov
(bad)
push
push
int
jno
clc
adc
ins
mov
fiadd
icebp
xlat
mov
push
cmp
data16
fild
int3
inc
push
loop
retf
hlt
mov
fadd
cdq
add
mov
mov
sub
repz
mov
fs
pop
leave
iret
jnp
add
ror
cld
jae
and
xchg
in
push
out
cs
xchg
sub
fwait
xchg
aam
or
xchg
adc
cmp
cld
lahf
into
aad
ja
inc
pop
or
xchg
or
push
mov
pop
xchg
or
pop
ret
pop
add
fdiv
test
in
and
xchg
dec
movs
inc
xchg
cmp
add
add
mov
inc
and
cmps
hlt
loopne
loop
mov
(bad)
sbb
or
xchg
movs
bound
loop
aad
push
push
outs
adc
cmc
inc
std
xor
(bad)
in
retf
sbb
mov
out
jmp
pusha
mov
dec
xlat
jae
lods
push
sti
dec
sbb
mov
mov
fisttp
mov
(bad)
sbb
adc
scas
ja
xchg
pop
sbb
movsx
daa
andnps
jecxz
xor
ret
rol
into
mov
sbb
stc
mov
and
fcom
push
out
mov
and
js
jp
pop
lods
and
push
mov
stos
xor
int
ins
cmpps
push
and
cld
out
(bad)
fidiv
sbb
fsubr
cmp
cld
jne
movs
xchg
fistp
dec
sub
loop
cmovno
mov
popf
je
cmps
loop
add
push
fadd
cmp
or
push
imul
and
into
and
jo
das
imul
sub
fsubp
jge
cli
in
pop
jl
mov
xlat
cmps
cmp
jg
loop
jle
pop
jns
jb
add
pop
cmps
(bad)
and
push
push
xor
dec
cmp
mov
jge
push
cmp
stos
mov
outs
pop
and
iret
(bad)
mov
xchg
and
or
loopne
dec
mov
fwait
xchg
mov
inc
int3
sub
sub
mov
(bad)
stos
mov
lahf
xchg
sub
(bad)
loop
(bad)
xor
mov
pop
ins
inc
xor
aad
mov
nop
fs
imul
jg
cld
lock
xchg
jo
jns
(bad)
pop
jb
imul
xchg
nop
inc
push
mov
daa
test
xchg
jb
mov
ins
repz
push
xor
jo
xlat
ret
popf
jno
fnstsw
dec
mov
outs
xchg
jge
pop
jmp
add
shl
mov
dec
jmp
mov
mov
cld
(bad)
int
push
and
test
clc
loope
test
mov
imul
cmp
mov
shl
sti
dec
nop
les
(bad)
cmc
mov
sub
mov
mov
mov
ret
js
ds
sbb
xchg
cmp
gs
outs
test
jae
xlat
aad
or
adc
fild
sbb
xchg
loope
in
cmp
(bad)
std
aas
mov
scas
xor
stc
ja
loope
add
push
mov
adc
adc
ss
loope
cmp
add
ficom
inc
scas
rcl
daa
sub
icebp
fs
dec
cmp
mov
inc
aas
pop
mov
data16
ss
jle
cmp
dec
sti
popa
jnp
cld
push
jl
bound
test
addr16
mov
xchg
sti
cmp
out
sub
icebp
add
std
or
add
sar
stos
pop
push
jne
call
fcomp
inc
jmp
mov
mov
mov
aam
cmp
mov
(bad)
not
pop
ds
outs
jle
jg
aad
mov
push
xlat
dec
mov
mov
cmp
neg
inc
mov
sbb
mov
test
ret
iret
push
mov
adc
fs
jmp
lahf
jmp
repz
mov
inc
stc
daa
and
and
mov
imul
sub
data16
shl
loopne
jp
je
mov
mov
scas
mov
bound
jo
shl
inc
sub
jo
sub
mov
or
fist
cmp
in
sar
fisttp
scas
pop
jge
test
loopne
gs
leave
adc
sub
push
inc
push
rol
lods
outs
mov
rcr
sbb
adc
(bad)
sbb
jb
movs
mov
mov
pop
iret
and
lods
imul
mov
cli
adc
ins
nop
popf
mov
fist
cmp
add
loop
cmp
mov
aas
fst
aam
jl
lds
mov
push
mov
loopne
out
(bad)
xchg
jb
das
not
lock
pushf
add
pop
test
out
iret
(bad)
xor
retf
cmc
mul
stos
inc
xor
jne
push
lock
add
jmp
mov
pop
jbe
inc
inc
out
jmp
test
or
(bad)
mov
pop
test
call
sbb
mov
xchg
add
pop
mov
push
cdq
call
mov
sar
push
push
mov
push
jno
ficomp
into
scas
or
jbe
retf
xchg
(bad)
iret
dec
aam
es
cmp
sub
xchg
mov
int3
rcl
cmps
je
xor
add
jmp
mov
sti
retf
jbe
xor
xor
xchg
adc
call
rol
out
pushf
jnp
inc
sub
mov
jmp
jecxz
js
(bad)
xchg
xor
xchg
repnz
xchg
adc
sbb
daa
cwde
inc
js
mov
jb
dec
in
add
cmp
outs
jl
or
push
dec
fwait
mov
xchg
(bad)
and
lahf
ins
(bad)
jmp
cld
pop
cmp
dec
xor
pop
sbb
inc
mov
dec
cmc
ins
shl
mov
mov
fiadd
imul
arpl
cs
jle
sbb
inc
repnz
mov
jp
push
cli
leave
cmps
cli
xchg
es
scas
jle
dec
push
stos
jbe
cs
cld
add
shl
inc
adc
movs
call
dec
nop
sbb
imul
dec
mov
sbb
(bad)
imul
xor
test
aaa
test
jo
push
out
sub
shl
sbb
mov
int3
ret
adc
mov
(bad)
xchg
jae
push
sbb
jns
inc
adc
iret
pop
mov
mov
inc
pop
out
cld
outs
in
inc
retf
jb
or
out
(bad)
cmp
mov
pop
lds
(bad)
aas
push
lahf
xchg
rcl
ret
adc
sbb
fucom
fldenv
cs
test
push
mov
push
fwait
lock
mov
mov
push
xor
mov
push
mov
push
inc
jae
push
mov
add
or
xchg
or
pop
repz
add
sub
adc
in
shl
in
popa
(bad)
or
mov
scas
mov
sbb
retf
xlat
repnz
scas
(bad)
xchg
out
inc
inc
cdq
cmps
push
sbb
sub
fnstenv
es
pop
xlat
sar
add
call
mov
fild
(bad)
inc
mov
fisub
pop
dec
mov
clc
mov
push
push
fwait
mov
dec
sbb
sbb
inc
les
xchg
xor
inc
lock
jp
sub
xor
outs
add
dec
xor
dec
inc
push
out
cs
mov
mov
daa
or
sub
jp
dec
sbb
push
sbb
test
punpckhdq
les
mov
jmp
dec
or
stos
xor
pop
push
jns
cmps
xchg
addr16
sti
pop
push
inc
lods
scas
xchg
cmps
cmps
test
stos
pop
pop
inc
outs
xor
hlt
add
mov
repnz
adc
popa
push
mov
push
mov
cdq
fadd
push
xchg
leave
stos
cmp
and
sub
push
mov
bound
in
int3
rcr
rcr
jmp
loope
repnz
test
movs
sbb
push
pop
data16
pop
pop
inc
xchg
or
gs
push
jle
mov
mov
sbb
lods
cmp
and
in
hlt
add
gs
fidivr
push
dec
or
nop
aaa
out
adc
or
lea
pop
fiadd
sub
ins
ins
aas
popf
int
popa
dec
or
adc
aas
mov
mov
sbb
xchg
out
retf
push
jp
sub
arpl
or
loop
mov
xor
sub
pop
xchg
in
add
outs
push
dec
je
jns
(bad)
mov
movs
inc
ins
jbe
inc
loop
cmp
mov
cmps
out
jno
xlat
out
pop
enter
adc
mov
inc
cmps
add
vmptrst
ret
xchg
pop
retf
adc
jnp
aad
fnstsw
mov
add
(bad)
das
std
xor
scas
inc
mov
es
push
sar
cmp
sub
enter
inc
call
fwait
jp
shl
pop
add
mov
xchg
adc
and
dec
mov
shl
adc
sub
mov
cmps
aam
in
xor
sub
jae
mov
sahf
cmc
imul
les
or
sbb
and
push
dec
loopne
movs
mov
in
adc
std
retf
jno
sti
lock
call
ds
lods
inc
ds
push
je
and
pushf
inc
jp
cli
jecxz
xchg
pop
pop
push
cs
ja
lds
imul
les
fst
scas
push
xchg
ss
scas
cmp
pop
test
ins
ja
cs
aad
push
(bad)
ds
icebp
out
sub
sub
mov
sbb
push
jg
in
cli
aaa
mov
push
mov
and
pop
and
cwde
pushf
and
adc
js
mov
out
je
dec
pop
adc
jns
push
add
pushf
dec
adc
loope
jmp
xchg
or
push
sbb
push
push
cmovle
dec
xor
fisttp
loop
shr
mov
pushf
stc
aaa
aaa
mov
nop
fnstsw
xor
xchg
inc
xchg
mov
add
or
sub
xchg
stc
dec
xrelease
fiadd
test
mov
stos
dec
test
xor
sub
cmp
jb
push
add
sti
push
icebp
jo
or
out
pop
mov
fstp
ss
push
in
jg
xchg
sbb
sbb
movs
mov
mov
test
fcmovu
pop
in
fdiv
aad
out
and
imul
ja
mov
retf
jne
dec
rol
(bad)
lods
icebp
and
fisttp
mov
cmp
push
xchg
in
sar
xor
pop
mov
in
sbb
push
and
lods
scas
mov
cmps
push
jbe
jbe
shr
inc
xchg
mov
or
push
out
nop
scas
sub
cmp
adc
sub
xchg
inc
hlt
xchg
cli
sahf
xchg
mov
int
lods
leave
enter
mov
sub
fcmovnu
arpl
push
cli
pop
mov
mov
cmps
or
and
pop
pop
scas
add
cmp
mov
in
sub
inc
adc
jo
repz
xchg
scas
jp
jmp
xchg
sbb
cmp
xor
or
(bad)
jmp
mov
xor
jmp
adc
lahf
xchg
das
gs
je
movs
loop
xor
pop
xlat
cmp
(bad)
fcomp
cmp
and
fild
sbb
and
add
xchg
adc
inc
mov
ds
ins
movs
xchg
daa
sbb
ret
sti
mov
fwait
cmp
xor
ret
call
movs
xchg
(bad)
leave
nop
loope
push
sbb
push
sub
jmp
lods
cmp
dec
sub
int
inc
inc
fcmovb
loopne
mov
icebp
dec
inc
or
ror
jge
mov
arpl
clc
cmps
bound
xchg
daa
stc
mov
pop
dec
pop
fwait
inc
cli
cmp
push
mov
xor
fist
jg
and
jbe
fwait
lea
cmp
add
mov
pop
mov
mov
dec
xchg
retf
push
scas
pushf
jge
or
xchg
mov
xor
push
add
sbb
popf
inc
push
daa
aaa
shl
retf
stos
add
sar
sub
mov
inc
retf
cmps
loope
ficomp
add
add
scas
fucomi
mov
loopne
lods
(bad)
inc
je
ret
or
pop
cmp
lods
jnp
ror
pusha
sbb
fmul
adc
sub
aad
mov
outs
mov
cmp
mov
push
cmp
mov
pop
jg
jge
inc
ss
adc
mov
mov
ss
aad
nop
and
stos
inc
mov
push
adc
sub
push
call
hlt
jbe
mov
test
sahf
das
out
mov
cdq
lahf
dec
sub
xor
and
sbb
jp
xchg
inc
add
(bad)
pop
push
add
shl
in
and
mov
fadd
test
mov
cmp
rol
bound
or
mov
addr16
mov
fild
xlat
lods
call
cmp
cmp
add
jp
pop
adc
mov
inc
jbe
pop
jge
imul
push
aas
ret
test
fnstcw
jmp
mov
push
pusha
push
mov
icebp
aad
hlt
icebp
jmp
push
sbb
test
inc
dec
scas
retf
sbb
mov
mov
adc
leave
cmp
lahf
outs
inc
inc
scas
inc
hlt
add
cs
cmc
adc
or
xchg
push
cmp
cmp
fucomp
push
xor
cmp
and
or
neg
push
mov
lahf
xchg
dec
repz
shr
sub
fisub
cs
imul
sbb
je
outs
xor
or
fild
jmp
ins
or
add
aam
or
enter
xor
mov
pop
rcr
imul
cmp
sbb
push
mov
lods
(bad)
jl
std
or
or
hlt
xor
push
xchg
(bad)
in
sbb
jno
add
fst
std
sbb
push
stos
lds
push
mov
je
sub
cld
sbb
push
outs
std
mov
xchg
pop
dec
inc
push
leave
pop
push
dec
imul
add
inc
add
sub
ja
push
iret
shl
lds
xchg
xor
or
iret
fiadd
jg
dec
xchg
mov
(bad)
jmp
mov
jns
ret
jmp
push
fsubr
ins
loop
ret
test
cli
cmps
shl
mov
pop
dec
ret
stos
xchg
sbb
inc
fxch
push
pushf
jmp
cmp
cld
xchg
in
(bad)
(bad)
gs
in
sub
push
mov
xchg
js
and
pop
sti
adc
repnz
cmp
add
clc
out
xchg
aas
sub
ins
pop
pop
movs
jo
pop
mov
das
in
imul
repnz
cmp
sub
rcl
mov
push
inc
aaa
clc
mov
shl
outs
xchg
pop
push
repnz
fdiv
inc
sbb
stos
(bad)
out
push
std
out
pop
pusha
test
jne
fxch
sub
inc
or
cmp
mov
out
pop
add
xchg
lock
xchg
add
xor
adc
push
push
ds
addr16
pop
sar
cmps
fcmove
fst
and
lods
or
sub
xchg
fdivp
fistp
in
adc
xor
mov
xor
fsubr
jo
(bad)
scas
leave
mov
arpl
test
call
jl
or
mov
jo
retf
lods
shl
das
dec
push
hlt
jb
in
jecxz
mov
sar
leave
loope
mov
and
dec
stc
bnd
push
shl
add
in
sub
rol
jg
pop
mov
shl
jb
mov
loope
call
sbb
or
mov
push
cmp
pop
jae
dec
cmp
push
popf
out
pop
leave
xor
push
inc
jg
jbe
dec
lods
pop
cmp
cs
rcl
xchg
ds
jle
xchg
pop
pop
mov
lahf
test
mov
mov
mov
dec
enter
or
inc
cmps
fcomp
lahf
mov
hlt
leave
mov
sub
les
stos
in
out
in
xor
loope
mov
test
scas
push
xor
mov
enter
aad
push
sbb
inc
sub
cmps
pop
pop
leave
shr
cmps
mov
adc
icebp
push
pop
(bad)
jg
lods
inc
adc
mov
inc
outs
leave
inc
dec
lock
rcr
cmp
jmp
out
in
mov
popf
rcr
retf
sahf
lock
clc
shr
gs
jns
dec
mov
inc
jp
push
mov
mov
fadd
clc
aam
iret
pushf
stos
inc
jg
add
clc
or
mov
jle
mov
inc
test
icebp
in
ja
sahf
int
test
fistp
push
fwait
mov
pop
adc
cdq
pop
push
add
dec
mov
jmp
daa
fmul
enter
mov
mov
retf
mov
nop
lods
fcom
mov
leave
xchg
mov
mov
arpl
dec
ja
jecxz
mov
jge
sub
push
push
into
xchg
push
mov
mov
je
xchg
lahf
sbb
in
movs
mov
pop
dec
adc
push
in
repnz
push
sub
push
stc
xor
rcl
add
add
pop
cwde
sub
xchg
xchg
adc
call
push
shl
jecxz
jmp
aad
into
fidiv
leave
inc
mov
out
xor
pop
mov
mov
ss
and
sar
push
cmps
dec
pop
mov
pop
add
cmp
sub
jo
cmp
test
or
ja
js
adc
ret
jmp
scas
jp
and
add
(bad)
das
jns
jle
enter
lods
stos
sbb
pushf
mov
pop
jecxz
ds
cmp
inc
sbb
je
aaa
sub
adc
(bad)
xlat
in
mov
add
in
inc
dec
xchg
idiv
xchg
sub
inc
retf
les
cdq
inc
fdiv
pop
adc
or
push
loope
mov
rcr
mov
scas
ret
xchg
ins
ror
in
sub
jns
das
repnz
lea
push
adc
test
jns
jle
push
inc
std
pop
mov
pop
loop
test
js
fs
sti
mov
jecxz
push
sbb
(bad)
out
into
and
out
dec
out
push
outs
xchg
inc
mov
scas
cs
popa
push
inc
fisttp
inc
retf
mov
sbb
jmp
adc
rcl
pop
js
xor
sti
mov
jns
push
sbb
adc
or
vpunpckldq
xor
ror
lods
push
sub
pop
xor
clc
mov
adc
fadd
std
xchg
popf
hlt
xor
mov
pop
das
jnp
and
cmp
xchg
lock
mov
retf
or
cmp
xchg
cmps
mov
xchg
ja
and
or
dec
sbb
jl
loopne
adc
jmp
pushf
dec
nop
sahf
sahf
(bad)
push
(bad)
sbb
cmp
adc
or
aaa
or
(bad)
(bad)
xlat
adc
nop
daa
ss
jmp
nop
les
dec
add
or
cmp
repz
dec
sbb
popf
(bad)
imul
out
mov
(bad)
pop
imul
fisub
jge
fwait
or
mov
ret
cwde
out
sbb
(bad)
leave
adc
int3
push
int
inc
out
sbb
mov
jnp
sub
jmp
dec
or
fnclex
xchg
aas
dec
movs
push
leave
cmps
test
sbb
aad
and
stos
mov
aaa
(bad)
sbb
mov
adc
and
das
test
shl
shld
or
out
in
sbb
adc
in
inc
sub
hlt
push
inc
mov
mov
ins
adc
fidiv
in
ja
shr
hlt
rol
or
fbstp
mov
mov
cmp
ds
test
pop
adc
clc
push
or
jecxz
stos
xor
in
jecxz
add
mov
and
addr16
xor
dec
push
clc
pop
(bad)
sub
lahf
push
cs
push
outs
fcom
call
(bad)
imul
mov
xor
scas
xor
mov
jns
xor
jp
adc
fucom
fst
jnp
or
std
clc
sbb
movs
sub
sbb
js
mov
(bad)
cmp
sbb
in
dec
cmc
xchg
das
jns
xchg
sub
push
adc
ss
cmc
and
mov
movs
loopne
lds
jl
jl
xor
pop
dec
push
(bad)
cld
push
outs
sub
inc
add
mov
popf
pop
mul
(bad)
jo
xor
and
fstp
xchg
retf
cs
iret
add
or
test
cmp
inc
pop
add
fbld
pop
mov
retf
(bad)
out
fisttp
jmp
xor
rcr
jbe
ret
out
aas
xlat
(bad)
mov
jo
or
pop
das
push
(bad)
inc
stos
clc
mov
stos
leave
mov
fwait
retf
cmps
mov
push
cmp
not
adc
add
add
stos
iret
test
push
sbb
sbb
adc
lahf
(bad)
push
or
add
sti
int
loop
sbb
push
mov
add
push
pop
jg
rol
es
inc
xchg
in
fimul
push
dec
add
aaa
out
mov
mov
imul
sti
mov
lock
call
push
shl
pop
cmps
leave
movs
into
xlat
xchg
jge
cmp
pop
jl
mov
test
dec
(bad)
push
loope
xchg
popf
xchg
jae
cmp
xor
mov
mov
retf
pop
pop
add
sub
jmp
and
sub
ja
pop
cs
xor
dec
push
out
jb
mov
and
loopne
add
cmp
jp
adc
pusha
mov
loop
or
mov
jecxz
and
cmp
or
sbb
rcl
xlat
or
ret
in
cmp
(bad)
cdq
or
cmps
or
in
adc
popa
daa
mul
scas
test
add
ficom
mov
and
fisubr
sbb
add
pop
pop
out
ret
xchg
jbe
jnp
push
xor
xor
call
sahf
inc
xchg
les
retf
or
addr16
fnstcw
cmps
lock
mov
or
jmp
loopne
arpl
or
sahf
bound
idiv
(bad)
ja
sbb
jnp
in
call
dec
mov
mov
out
daa
and
clc
cmc
push
cmp
mov
xor
inc
and
jb
mov
ja
popf
lock
sub
mov
dec
sub
inc
scas
lock
mov
fcmove
pop
jmp
dec
adc
xor
adc
fbld
loope
sub
pop
pop
adc
fsubr
jge
js
push
imul
mov
mov
outs
and
xor
sbb
arpl
jno
sti
int
sbb
mov
pop
push
xor
dec
scas
outs
(bad)
leave
dec
sti
outs
or
stos
cmp
jno
movs
fidivr
mov
mov
cmp
xchg
ja
fisub
pushf
pop
loop
push
and
adc
pop
dec
jp
sbb
es
xchg
test
add
jmp
dec
jno
sub
adc
xchg
in
pop
ss
leave
adc
out
xor
pusha
sub
push
enter
push
cwde
or
pop
xor
cld
mov
pop
fnstenv
in
dec
hlt
into
ret
clc
in
popa
sub
ror
(bad)
push
sbb
jae
loopne
jno
push
push
cmps
stc
jle
inc
or
cwde
xchg
sub
sbb
mov
cmps
mov
mov
inc
cmps
and
std
jg
mul
lock
xchg
sub
xlat
cmp
std
repz
push
mov
or
enter
sub
add
test
lahf
call
int3
xor
pop
dec
mov
add
and
test
dec
fsubp
xchg
and
jle
jmp
mov
pop
mov
dec
pop
bound
(bad)
mov
add
aaa
out
call
lods
and
xchg
sar
in
or
sar
jns
jp
cdq
cmp
dec
pop
(bad)
scas
leave
fisttp
cdq
sub
shl
hlt
inc
(bad)
mov
dec
mov
adc
add
fwait
xchg
cmp
ret
in
jge
xor
aad
jge
mov
data16
scas
int
adc
xchg
imul
leave
adc
je
sbb
push
mov
sbb
xchg
add
sar
add
mov
call
pop
mov
mov
repz
retf
into
dec
loopne
shr
jge
lea
xchg
push
fucomip
push
jne
lock
mov
call
addr16
in
dec
xor
loop
sub
lds
and
mov
sbb
sbb
mov
add
sti
cwde
(bad)
and
cmc
imul
mov
rol
xor
xchg
jge
cmp
xor
shl
cmp
(bad)
aas
cmp
mov
test
leave
addr16
push
dec
inc
adc
pop
or
aaa
daa
pushf
pop
push
loop
pop
xor
push
ja
mov
xchg
and
xor
jge
mov
test
push
int
and
outs
fnstcw
cwde
mov
daa
movs
xor
push
xor
and
cmp
lods
cmp
fiadd
mov
mov
iret
cmp
cmps
cli
or
aam
mov
movs
push
les
xor
test
xor
stos
mov
mov
push
das
pop
pop
xchg
jae
sbb
inc
mov
mov
and
push
es
adc
outs
sbb
stos
shl
mov
fmulp
dec
ins
and
xor
in
cmp
dec
adc
inc
xlat
movs
leave
jne
(bad)
lock
push
fsub
in
mov
test
or
sahf
or
mov
fs
push
push
jg
push
mov
in
cs
int
in
(bad)
inc
xchg
lds
test
cmp
je
inc
fld
inc
and
cmp
sbb
(bad)
ret
mov
aad
ror
push
ret
in
push
adc
or
mov
pop
inc
dec
lods
adc
or
cmp
mul
pop
or
or
lea
cmp
or
push
sahf
adc
push
pop
mov
cmp
stos
loope
or
pop
push
test
xor
add
xchg
dec
or
sbb
fild
(bad)
adc
pusha
pop
or
cld
in
dec
push
retf
idiv
mov
add
cmp
inc
jecxz
xchg
fdivr
pop
push
lods
xchg
push
mov
mov
mov
mov
lea
aas
mov
inc
mov
xor
lods
outs
add
and
lods
jmp
nop
cmp
test
and
loopne
sub
push
cmp
scas
lahf
mov
mov
js
fwait
in
call
pushf
mov
push
(bad)
fdivr
imul
pop
mov
fdivrp
outs
push
jb
push
shl
iret
and
stos
js
aaa
test
inc
in
(bad)
in
xchg
movs
sub
sbb
dec
int
cwde
pushf
or
in
jle
xchg
dec
ret
jns
sub
test
rcl
test
push
mov
sub
aam
add
les
popa
lods
add
or
lahf
lods
mov
cmps
stos
or
into
cmp
cwde
cli
gs
mov
mov
les
stos
cmp
or
sub
mov
sub
(bad)
sar
cmp
jp
imul
xchg
or
add
dec
dec
mov
test
test
fimul
mov
je
push
add
pop
div
ror
push
push
mul
imul
test
and
dec
int
call
(bad)
outs
dec
std
out
mov
fs
out
outs
push
jmp
xor
not
xchg
mov
mov
ins
inc
jb
dec
pushf
fadd
xchg
xchg
and
gs
imul
mov
adc
int
cmp
mov
xor
loop
outs
das
ins
and
pop
fadd
in
lds
and
adc
cld
clc
adc
inc
in
jecxz
add
retf
fwait
out
ja
add
or
mov
fild
xchg
iret
add
sub
sub
jp
xor
jnp
fcom
mov
add
and
pop
loope
or
cmp
cmp
cwde
(bad)
es
and
and
les
cwde
ret
adc
(bad)
scas
loop
mov
rcl
aas
mov
dec
push
jo
aam
aaa
lods
adc
push
dec
aas
int3
xchg
cmc
pusha
mov
sub
imul
dec
sti
xchg
ins
mov
stc
mov
pop
ss
(bad)
lds
add
or
popa
arpl
ret
lds
or
fadd
lds
add
push
arpl
mov
xlat
call
lahf
mov
sub
out
jbe
or
jno
or
push
push
mulps
sbb
lahf
adc
adc
jb
and
ret
jnp
dec
mov
in
push
pop
arpl
ficomp
pusha
or
add
rcl
in
mov
mov
lods
add
shl
or
js
and
adc
fisubr
dec
gs
lods
pushf
test
daa
pop
aad
or
fisubr
out
cmp
shufps
sbb
out
jg
and
pop
bound
cs
and
pop
adc
test
fstp
xor
xchg
fs
cmps
fisubr
outs
sub
jmp
jle
les
test
out
dec
int3
add
sbb
dec
pop
xor
mov
or
lods
test
iret
or
stc
jmp
adc
pop
leave
repnz
mov
or
mov
cmp
or
mov
imul
and
mov
lahf
push
data16
(bad)
mov
repnz
mov
cs
jmp
mov
nop
pop
mov
loopne
mov
or
jbe
imul
movaps
js
sub
lods
push
test
mov
cmps
je
cwde
scas
jb
xlat
and
push
pop
jle
jno
xor
fsubr
sbb
fwait
and
out
sbb
test
mov
xchg
daa
xor
jo
fldenv
add
mov
(bad)
push
xchg
push
std
pusha
dec
sub
jns
push
pop
sub
cmp
nop
idiv
cwde
push
inc
and
cmc
adc
dec
dec
in
loope
add
xlat
inc
in
fucomi
sar
jae
fcmovnu
cmps
mov
ret
push
pusha
jne
repnz
es
cmp
mov
xor
mov
(bad)
out
lods
xchg
outs
popf
xor
or
mov
sub
cmp
fst
adc
pop
stos
xlat
xchg
cwde
dec
stos
popa
add
add
pop
aad
jg
xor
xchg
sub
scas
mov
shl
adc
or
scas
stos
es
cmp
fwait
gs
push
pmulhw
dec
jne
sub
std
pop
aaa
or
pushf
int3
repnz
lock
mov
xor
sbb
push
repnz
adc
push
mov
retf
adc
pop
mov
imul
xor
bound
or
dec
pop
shl
dec
cmc
sub
mov
pop
retf
jnp
imul
outs
arpl
pop
js
sub
rcl
mov
mov
loop
ins
pusha
aad
xor
pop
sub
fwait
xor
fisttp
sub
cmp
rcr
sub
fs
mov
add
xchg
pusha
jecxz
or
jb
out
mov
xchg
cmp
loope
leave
(bad)
xchg
dec
mov
pushf
dec
jo
push
cmps
cmp
loopne
jmp
mov
jne
xchg
sbb
jge
mov
out
jmp
dec
xor
add
pop
out
or
cmp
loope
xor
lods
jge
push
ret
adc
and
iret
xor
iret
int3
adc
ror
or
cdq
inc
mov
or
ins
jnp
mov
mov
cs
pushf
sub
into
add
mov
or
test
fcomp
ja
xchg
cld
mov
adc
mov
dec
xchg
clc
shl
int
js
aam
mov
cmp
js
out
imul
cmp
mov
or
pop
clc
inc
dec
mov
cmp
popa
fucomip
and
add
cli
jno
cmp
dec
enter
addr16
add
add
dec
test
out
rcr
push
shr
jno
out
in
push
mov
fsubr
js
shl
lods
cmc
cmp
cld
stos
push
and
jbe
push
sbb
stos
xchg
push
or
mov
jecxz
stos
fldenv
pop
aaa
add
and
into
data16
mov
loop
gs
mov
xor
mov
sti
int3
retf
retf
mov
shl
lds
push
std
xor
test
shr
lock
iret
cmp
sbb
stos
mov
push
mov
aam
cld
push
and
daa
lahf
data16
push
jb
pop
scas
and
mov
dec
fwait
not
dec
mov
adc
pop
push
jo
enter
(bad)
popa
ret
cmp
or
lahf
mov
mov
xchg
pop
inc
mov
dec
outs
sub
lahf
imul
dec
adc
push
stos
push
(bad)
fisttp
pop
mov
aam
cmc
call
loopne
arpl
das
or
test
xor
in
aas
popa
cmp
cdq
jb
scas
mov
std
dec
jo
xchg
pop
outs
mov
in
mov
push
enter
cmc
cwde
push
icebp
fisttp
mov
aad
or
sub
xchg
sbb
iret
pop
retf
add
in
mov
and
daa
xchg
or
jl
adc
mov
aaa
out
test
fdiv
inc
jne
pop
jecxz
adc
ins
dec
mov
inc
inc
sub
xlat
rep
mov
or
std
xchg
fdivr
repz
dec
test
repz
mov
shl
mov
loopne
jbe
aam
dec
xchg
aam
sub
push
mov
xor
test
pop
fisttp
sub
dec
xor
mov
or
push
pop
push
dec
fild
push
outs
nop
sub
inc
mov
push
pop
sbb
mov
sub
jecxz
cmp
arpl
jecxz
popf
sbb
add
inc
push
mov
dec
dec
inc
xor
(bad)
jge
sbb
lods
or
(bad)
popa
lahf
xor
lahf
sbb
or
and
(bad)
or
dec
inc
cwde
pop
es
cli
mov
sbb
(bad)
xlat
pop
and
sti
dec
enter
cmc
cmp
adc
push
and
jb
ror
(bad)
xlat
inc
add
inc
dec
push
repz
out
mov
inc
and
cdq
fisubr
add
mov
sub
movs
ss
movs
push
(bad)
sub
cwde
loopne
pusha
movs
xor
inc
cdq
neg
sbb
or
sbb
xchg
and
mov
add
pop
fistp
js
mov
jo
and
inc
in
sub
in
mov
xor
mov
test
cmps
push
add
jne
clc
std
cld
dec
mov
mov
push
jo
or
rep
push
or
push
push
fidivr
xchg
dec
push
out
xor
mov
ds
jns
adc
inc
cmp
xor
cmps
icebp
push
xchg
jle
xor
les
adc
cmp
cli
and
cmc
sub
scas
xor
xchg
cld
inc
dec
cmps
xor
lock
hlt
push
ds
xor
js
int3
jg
movs
pusha
iret
jbe
(bad)
pushf
push
sbb
pop
push
and
and
mov
fs
(bad)
add
iret
(bad)
in
bound
and
push
scas
cdq
movs
sahf
xchg
fwait
js
int3
in
push
inc
cmc
sub
dec
not
add
sub
aaa
mov
rcr
in
pop
xor
fsub
enter
ror
sbb
push
inc
xor
inc
mov
pop
out
mov
jle
or
scas
cmp
sbb
sub
or
fsubr
(bad)
imul
push
das
repnz
mov
or
movs
mov
(bad)
adc
sub
in
(bad)
mov
std
idiv
pop
popf
out
ficom
adc
pop
retfw
or
hlt
cmp
sub
xlat
and
fadd
mov
stos
std
mul
inc
xlat
aad
jp
mov
retf
dec
dec
js
push
add
aam
in
cwde
pop
add
pop
lock
dec
(bad)
mov
(bad)
ja
jbe
adc
frstor
dec
jle
push
mov
sbb
mov
xor
movs
sar
mov
ficom
or
aam
rcr
movs
pop
mov
jb
push
test
test
mov
add
mov
fidiv
mov
in
and
adc
sub
push
and
es
les
inc
inc
aaa
dec
sbb
mov
rcl
nop
(bad)
xor
xchg
test
dec
jae
and
mov
out
sub
xchg
movs
jl
imul
mov
pop
lods
test
xor
push
jne
das
aas
xchg
outs
xor
jmp
fistp
xlat
sahf
imul
shl
mov
ret
repz
jnp
outs
sar
ds
das
lods
jge
pushf
push
sar
add
stc
sbb
scas
mov
xchg
aad
adc
xor
sbb
mov
retf
add
inc
faddp
mov
out
ds
or
push
and
cmp
cld
div
lods
cmp
call
mov
mov
stos
dec
xchg
fwait
or
dec
push
xor
stos
cmp
sub
mov
pop
pop
mov
push
fstp
inc
leave
ret
(bad)
out
xor
dec
sbb
call
repz
scas
ror
mov
in
add
pop
xchg
loop
add
(bad)
adc
cmps
inc
add
jne
(bad)
mov
mov
mov
icebp
test
icebp
fsub
movs
sub
cmp
imul
inc
dec
sub
jg
bt
sub
inc
push
push
or
retf
call
add
add
mov
out
imul
mov
cmp
test
inc
dec
pop
stc
jb
retf
jle
loope
std
or
mov
clc
pmuludq
sbb
fistp
ins
data16
sbb
loope
movs
lds
mov
(bad)
(bad)
into
inc
pop
jmp
ret
push
dec
xchg
fs
jmp
pop
or
pop
jno
scas
cli
cmp
ins
mov
and
rcr
jbe
punpcklwd
je
mov
mov
add
cli
jp
pop
retf
mov
inc
mov
clc
(bad)
mov
push
mov
cmps
mov
aad
test
add
fwait
dec
ins
test
sub
scas
push
jl
mov
or
mov
mov
and
dec
or
jl
inc
push
mov
aaa
cdq
sbb
mov
imul
jno
or
mov
stc
mov
fwait
ja
das
xchg
mov
dec
push
mov
mov
enter
xchg
fisttp
into
mov
or
jns
adc
xchg
cs
fs
clc
test
xor
or
cmp
xor
inc
dec
pushf
popf
sbb
sub
out
std
dec
inc
pop
out
cmp
cdq
inc
or
jmp
mov
adc
xchg
test
stc
pop
xor
inc
bound
jge
out
xor
retf
lock
xor
mov
cmp
jecxz
sub
mov
sub
or
xor
and
inc
pop
aad
das
ret
xrelease
mov
pop
jecxz
push
adc
sahf
inc
mov
pushf
(bad)
repz
inc
push
fisubr
mov
pop
mov
das
out
in
dec
pop
fcom
push
(bad)
iret
xor
xor
sahf
adc
test
sub
neg
gs
movs
cmps
or
sbb
sub
mov
xor
inc
or
(bad)
in
or
fist
(bad)
mov
cmps
arpl
cdq
xor
mov
adc
pop
ds
and
fldenv
clc
sbb
push
push
fldenv
and
retf
jns
out
loop
sub
jge
mov
mov
loopne
lock
cmc
adc
mov
mov
outs
mov
repnz
ror
inc
test
ja
lods
gs
cmovge
dec
sbb
push
pop
jb
cld
aam
push
cdq
pmaddwd
cmp
test
aam
cmp
imul
call
iret
xchg
add
inc
cmp
xadd
stos
push
(bad)
int3
cld
cmp
sbb
dec
adc
dec
inc
in
cmp
int
jmp
mov
and
or
lahf
push
icebp
retf
loope
call
loop
sub
cmovno
sub
shr
arpl
mov
daa
inc
lods
aas
ret
jnp
aas
inc
je
lods
loop
sbb
mov
dec
sub
ja
shl
xor
(bad)
cmps
(bad)
stc
mov
push
mov
loopne
movs
adc
sbb
out
dec
adc
fisttp
jbe
test
test
mov
sbb
push
sahf
hlt
or
jp
fs
scas
lods
adc
rol
mov
loopne
std
loope
call
and
lods
adc
mov
push
jns
push
dec
push
cmps
dec
out
fistp
sbb
add
jg
outs
xor
je
add
jmp
jmp
imul
arpl
pop
push
adc
popf
iret
xor
inc
lahf
icebp
je
dec
shl
ret
scas
pop
icebp
xchg
inc
addr16
ins
push
std
or
outs
add
out
ficomp
fdiv
xchg
mov
push
adc
sahf
jb
out
imul
rcr
and
lds
mov
lods
add
fs
jecxz
push
pop
pop
dec
aad
adc
xor
aaa
push
cmc
out
xchg
xchg
mov
pop
and
mov
mov
or
repz
adc
pop
inc
jo
pop
int
pop
adc
aam
test
or
inc
ds
scas
lahf
pop
mov
fadd
jl
(bad)
lahf
adc
cmp
lds
shl
imul
push
add
mov
inc
jg
xchg
and
fs
fldenv
fisttp
pop
mov
xlat
inc
and
retf
jle
push
dec
inc
sbb
and
outs
mov
or
or
out
sub
add
divps
sbb
inc
jp
fistp
adc
call
repnz
in
push
sahf
add
inc
out
push
sub
sbb
jae
cmp
pop
dec
mov
adc
mov
outs
arpl
or
dec
leave
add
sbb
fiadd
mov
fisttp
push
inc
inc
sub
shl
aad
add
sbb
dec
mov
aas
xlat
sub
xchg
cmp
or
outs
xor
sub
inc
jp
cmp
jns
pop
add
aaa
retf
stos
arpl
fadd
in
sbb
iret
cmp
dec
int3
pop
xchg
out
cmp
call
push
popa
mov
sbb
sbb
xchg
adc
dec
fld
sub
or
add
mov
inc
push
pop
into
sbb
mov
call
sbb
retf
mov
loopne
xor
jp
pop
sti
add
or
not
mov
mov
clc
data16
fs
cwde
cmc
mov
cmp
cmps
xlat
(bad)
mov
inc
lahf
(bad)
fistp
retf
xor
or
jb
ret
fdiv
not
lahf
sbb
xchg
cmp
dec
fld
inc
pop
fs
aas
push
adc
mov
xchg
mov
loope
dec
retf
push
das
loopne
push
gs
in
aas
add
mov
add
daa
scas
cmp
pushf
test
stos
push
pop
call
shr
and
fiadd
xor
xrelease
mov
call
push
xchg
lods
icebp
rcr
int
mov
mov
dec
rol
scas
or
inc
push
pushf
add
and
bound
dec
jmp
or
hlt
bound
es
popf
mov
in
adc
movs
pop
mov
push
mov
cs
aad
into
scas
adc
adc
out
outs
nop
jecxz
stos
xor
mov
jbe
imul
cmc
rcr
mov
enter
fdivp
jecxz
mov
popa
or
mov
fcom
inc
sbb
push
xchg
cmp
jle
push
mov
and
das
in
shl
lahf
cli
add
pop
sub
inc
fiadd
push
and
cmc
inc
aad
xor
push
(bad)
hlt
or
xchg
push
aaa
stc
and
xchg
test
sbb
test
xchg
mov
inc
scas
jbe
or
push
add
xchg
aas
xor
aas
das
sti
xchg
mov
(bad)
sub
sbb
out
cld
or
inc
sbb
push
cmc
loopne
cmp
sbb
(bad)
push
xchg
dec
retf
or
ja
clc
adc
addr16
retf
ja
xchg
xor
xchg
stos
cs
jecxz
mov
xchg
rol
iret
loopne
inc
data16
lock
(bad)
pop
ja
addr16
(bad)
leave
jbe
neg
ds
jmp
cld
ret
es
add
hlt
jns
push
inc
push
mov
add
xchg
cmp
ror
cwde
cmp
xchg
leave
std
fs
shl
stc
mov
add
jmp
outs
out
arpl
xlat
ds
aam
fistp
jle
mov
mov
add
mov
icebp
xchg
adc
adc
cwde
jmp
loop
xchg
mov
or
inc
cmps
cwde
mov
cmp
cmps
jl
cmp
bound
sbb
and
dec
(bad)
sub
sub
arpl
and
mov
cmp
cs
inc
xchg
call
inc
mov
nop
test
mov
push
inc
(bad)
(bad)
ins
xor
cmp
inc
fstp
inc
cwde
mov
xchg
xor
pop
cmp
ds
sbb
sub
ds
je
cli
inc
dec
ja
fs
cmp
mov
into
adc
gs
and
loopne
ins
sub
or
mov
or
popf
mov
test
pop
mov
sar
mov
and
xchg
mov
mov
jmp
cmps
xor
mov
sbb
ds
cmp
out
pop
mov
sub
mov
std
call
push
xlat
je
inc
popa
in
div
adc
stos
cmp
cmp
pop
into
jno
push
jle
repz
or
in
mov
inc
xor
out
test
mov
test
mov
sahf
or
mov
inc
cmp
mov
ret
jle
stc
push
dec
fstp
vmovaps
push
call
or
cmp
enter
dec
jmp
clc
cmps
std
add
jbe
pop
jne
jl
adc
pop
inc
push
sub
push
in
push
out
sub
sbb
inc
ror
sbb
out
sbb
xor
sbb
ja
lods
test
mov
cli
xchg
lods
add
mov
imul
push
cmp
out
and
and
rol
into
out
xor
jb
stc
xchg
pop
sti
cli
or
int3
push
imul
push
rol
call
cmps
cmc
inc
push
ret
add
fistp
xor
(bad)
dec
push
(bad)
cmp
clc
retf
or
test
stc
lea
sbb
mov
test
mov
cs
rcr
pop
push
and
push
adc
fiadd
into
test
jo
sbb
dec
add
sbb
mov
dec
mov
cmps
xchg
mov
mov
inc
sub
es
push
push
or
inc
movs
xlat
jp
out
mov
mov
mov
imul
pop
jns
xchg
mov
fdiv
out
jp
cmp
pop
xor
retf
xchg
(bad)
lock
and
add
dec
mov
popf
xor
imul
(bad)
in
and
xlat
loopne
adc
imul
mov
sbb
shr
xchg
mov
cmp
gs
pop
add
test
lds
jmp
rcr
push
call
mov
mov
and
nop
pop
jmp
jmp
jno
pop
jl
lods
mov
fbstp
hlt
mov
or
rcr
aas
adc
aad
jo
jb
scas
mov
fmul
pop
dec
out
scas
pmaxsw
inc
loopne
sub
out
push
lock
cmp
leave
xor
fcomp
add
mov
mov
xchg
aam
arpl
xor
std
mov
mov
add
inc
adc
int
pop
jg
fwait
mov
jbe
cdq
cmc
test
mov
lds
mov
js
hlt
dec
xchg
add
inc
pop
xchg
out
aas
les
or
mov
mov
ja
sbb
in
dec
mov
cwde
ror
cmc
int
scas
fst
push
ds
sahf
xchg
adc
add
or
push
mov
mov
or
push
mov
ins
xchg
out
mov
mov
fnsave
sbb
sub
repz
pop
icebp
add
in
movs
jno
sbb
jae
mov
lods
pop
adc
lahf
xchg
ficomp
ja
pop
jnp
sbb
cmp
(bad)
pop
fsubr
pop
push
repnz
xchg
add
push
adc
jmp
jnp
add
mov
jne
cmp
fs
mov
mov
mov
lds
cmp
add
mov
mov
adc
enter
or
xor
cmp
push
mov
inc
add
dec
sbb
cmp
repz
retf
cdq
sbb
mov
int3
je
loopne
in
icebp
loop
aam
pop
jo
pop
lea
push
idiv
and
arpl
pop
sahf
call
shl
mov
mov
(bad)
ins
aam
in
rcr
imul
ret
fs
sub
fneni(8087
loopne
add
ds
arpl
xchg
in
mov
xlat
clc
mov
dec
dec
lods
stos
dec
mov
add
retf
in
outs
cld
pop
sub
stos
push
in
xchg
fwait
iret
movs
repz
and
adc
mov
lods
push
cmp
add
cmp
xchg
adc
mov
ds
daa
cld
pusha
inc
jmp
or
dec
sub
mov
fsub
cmc
sahf
retf
out
xor
cmps
or
mov
iret
xor
jg
cdq
loop
and
mov
inc
jne
test
pop
mov
into
jno
sbb
xor
data16
jns
pop
pop
iret
ss
cmp
enter
mov
sub
inc
mov
add
inc
and
loopne
test
imul
inc
mov
push
inc
popf
enter
ja
pop
jg
nop
cdq
(bad)
into
lods
and
icebp
lock
sbb
pop
dec
cld
cld
mov
push
pop
test
xchg
pop
dec
jle
sti
xchg
mov
into
push
pop
and
fsub
fadd
mov
mov
(bad)
mov
sbb
stos
push
enter
test
loopne
dec
and
ja
shl
xchg
out
rol
push
push
adc
add
pop
xor
dec
sbb
inc
gs
pop
and
aam
repz
std
xchg
pcmpeqw
add
ins
pop
loope
sbb
ret
and
jl
stc
cmp
stos
(bad)
mov
(bad)
push
lods
mov
pusha
std
and
ja
ja
xchg
inc
push
dec
adc
mov
mov
mov
shl
adc
ins
pop
inc
xor
xlat
test
ror
(bad)
mov
loopne
retf
fcomip
dec
test
aas
sar
iret
sbb
popf
ss
sub
outs
(bad)
scas
icebp
stc
fiadd
ffree
jmp
pop
call
xchg
daa
sbb
add
mov
rcr
xchg
mov
dec
stos
add
sub
mov
retf
test
jb
jae
and
xor
imul
outs
pop
fistp
xchg
div
cdq
jp
xchg
add
scas
fisub
cmp
fnstenv
mov
rcr
pop
arpl
xchg
je
daa
ins
xchg
and
movs
jmp
arpl
cmc
ja
xchg
shl
mov
pop
sub
outs
or
in
and
in
shl
out
sbb
jle
mov
pop
xchg
mov
shr
lods
xchg
sbb
pop
pop
add
dec
jle
retf
lods
adc
sar
ror
rcl
aas
idiv
push
inc
lahf
int
scas
lods
jge
into
xchg
xchg
push
sbb
inc
push
scas
call
aaa
jp
ins
dec
pop
inc
js
sub
repz
int
and
inc
repz
test
xor
pop
xor
imul
out
ror
ret
aas
mov
sbb
(bad)
mov
jg
adc
jl
repz
sub
lods
cmps
pop
dec
inc
ret
mov
jno
mov
xchg
cmp
cmp
xor
std
adc
fsubr
popa
sbb
adc
gs
jmp
retf
ins
cdq
stos
in
xchg
and
or
into
inc
sub
fbld
call
sub
jo
test
push
add
and
call
or
loopne
pop
fbld
cwde
sub
(bad)
mov
mov
(bad)
lock
sti
loopne
stos
(bad)
into
aas
call
enter
retf
in
std
mov
add
mov
sar
shl
aad
in
ss
test
xor
lahf
icebp
jmp
test
mov
jmp
test
cmp
add
add
addr16
int3
imul
gs
daa
xchg
push
jo
les
int
jae
fist
jbe
xchg
ficom
jl
jmp
ins
mov
daa
pop
mov
pop
das
(bad)
dec
out
jne
inc
mov
xlat
sub
jmp
std
jbe
mov
lock
push
lock
inc
fmulp
sti
loop
push
jmp
movs
xor
test
xchg
loop
scas
test
lock
test
mov
jo
dec
sbb
push
sub
mov
es
cmc
mov
jg
xchg
fnstsw
fiadd
cmc
add
xchg
bound
out
jecxz
cwde
xor
fld
hlt
in
test
addr16
cmp
jle
stc
call
nop
dec
ja
sbb
push
outs
int3
xchg
retf
xor
adc
adc
push
(bad)
popa
out
mul
or
add
sub
popa
dec
cmp
dec
mov
cld
jb
scas
or
enter
jo
add
dec
xchg
pop
mov
fdivr
pop
cmc
sbb
js
push
adc
cmp
lods
fidivr
jecxz
mov
jp
stos
jae
out
fadd
movs
xor
fisttp
inc
inc
cmp
loopne
mov
(bad)
in
pop
rol
iret
push
cmp
adc
xor
jbe
movs
mov
dec
das
fwait
outs
test
add
pop
and
pop
push
pop
cmp
sti
jge
loope
push
nop
jae
aaa
lds
bound
loope
mov
aam
jae
test
nop
and
ja
mov
fcomp
add
aas
in
pop
out
lock
push
mov
lods
mov
ja
dec
movs
mov
jns
out
xchg
dec
add
out
xlat
sub
mov
dec
addr16
jno
mov
fdivr
xchg
and
aaa
out
lds
inc
mov
pop
rcr
xchg
repnz
add
pop
pop
jmp
jnp
scas
adc
popa
xchg
sbb
mov
repnz
sbb
xchg
xchg
mov
mov
(bad)
aaa
ja
or
xlat
dec
cld
std
out
or
push
bound
movs
dec
outs
xchg
mov
sub
ds
stos
ss
xchg
push
loop
stos
enter
adc
popf
pusha
xor
hlt
repnz
data16
xchg
adc
mov
sbb
mov
jmp
sub
jno
call
dec
jge
jmp
aaa
mov
sbb
and
add
jae
and
dec
sub
fwait
add
xor
fisubr
ss
inc
add
std
push
stos
dec
xchg
out
icebp
pop
add
mov
sbb
cmp
hlt
jle
and
mov
xchg
mov
adc
ficom
cmp
(bad)
outs
push
xchg
pop
aam
ror
sti
mov
(bad)
(bad)
stos
mov
inc
lahf
(bad)
lock
daa
pop
loop
mov
pop
sti
mov
inc
push
fcmovb
pushf
outs
iret
jnp
cmp
jne
and
les
push
mov
and
add
sbb
sbb
sub
enter
pushf
fwait
xor
xor
push
repz
add
sub
lds
fsub
fwait
nop
xchg
sub
mov
aaa
scas
pop
daa
xor
cmp
in
mov
inc
mov
adc
mov
xchg
sbb
sbb
lock
cmp
into
push
rol
and
add
loopne
icebp
nop
test
ja
fstp
fs
pop
mov
pop
cmp
cmp
mov
rol
aam
push
sbb
aas
mov
sub
sub
sub
push
test
int
push
loop
cmp
inc
or
sub
xchg
mov
add
nop
xchg
mov
xor
popa
retf
sbb
mov
xchg
nop
jl
mov
imul
(bad)
pusha
add
in
sbb
fstp
test
pop
daa
add
sub
mov
(bad)
cli
cmc
rol
fbld
dec
sbb
mov
adc
mov
nop
push
fsubr
in
jle
adc
and
push
xchg
fistp
movs
stos
mov
movs
ret
mov
out
pop
stos
xchg
pop
retf
dec
ins
pop
ss
ds
div
add
scas
sbb
cmp
pop
test
adc
lods
adc
and
sbb
jne
(bad)
sar
imul
xor
add
xor
mov
bound
mov
arpl
punpckhdq
mov
push
push
sbb
js
sbb
mov
fcomp
mov
retf
mov
adc
jmp
pop
loop
jmp
aad
xchg
and
sbb
ins
das
aaa
cmp
hlt
scas
and
cmp
mov
sub
mov
and
xchg
mov
push
call
jae
ret
stos
sbb
sub
cwde
rcr
jecxz
outs
xchg
inc
or
mov
(bad)
push
and
cmp
and
imul
xchg
cli
lahf
ror
(bad)
out
outs
fcom
mov
sti
ins
mov
mov
int3
jno
ins
add
add
(bad)
clc
cs
lods
je
dec
jg
jl
cmp
or
and
dec
and
in
ins
ret
jne
xchg
ret
pop
mov
test
sbb
mov
jecxz
repz
rol
cs
icebp
aaa
inc
cmps
sub
push
or
xchg
push
or
mov
ja
popa
jbe
cmps
push
mov
pop
call
jmp
sbb
fcmovb
and
in
cmc
xor
std
outs
mov
add
lahf
mov
pop
adc
cmps
(bad)
adc
jg
inc
jne
or
(bad)
push
and
pop
push
fidivr
push
sbb
loopne
inc
das
mov
repz
popa
inc
inc
test
into
jle
in
or
sbb
add
sbb
movs
lods
push
inc
jp
retf
xor
loopne
out
adc
mov
arpl
test
leave
mov
jnp
jae
sub
mov
add
mov
shl
mov
jae
jns
ret
xchg
fimul
push
xchg
ja
sbb
cwde
test
(bad)
movs
sub
push
mov
stc
inc
and
sbb
fs
jg
loop
inc
shr
pop
jae
mov
and
aaa
cli
(bad)
dec
sub
mov
push
xchg
or
push
not
pop
test
add
out
jecxz
push
lahf
adc
dec
pop
clc
sbb
mov
push
push
scas
stos
gs
loopne
gs
cmp
or
inc
dec
jns
loop
out
cmps
sahf
push
cli
pop
ror
sub
shl
mov
aam
mov
add
adc
outs
xchg
push
or
(bad)
nop
fcomip
ds
pop
sbb
jae
jge
int
pop
sub
sbb
xchg
pop
and
xor
pushf
movs
push
jmp
mov
ret
sub
cmps
fnstenv
adc
xchg
inc
sub
xor
fidivr
cmc
mov
fwait
cmp
ror
mov
or
popa
int
ins
mov
pop
call
mul
pop
aaa
jle
int3
test
sub
outs
fistp
jg
dec
pop
mov
test
or
jg
and
sub
mov
cmp
mov
pop
push
xor
int3
xchg
cdq
jno
push
sbb
daa
(bad)
scas
adc
call
dec
push
pusha
mov
inc
add
cmp
sar
test
cdq
add
mov
inc
mov
jbe
inc
mov
push
rcr
cmp
push
push
int
mov
xchg
imul
ret
adc
shl
mov
out
leave
inc
sub
push
out
aam
ins
add
shl
popf
sbb
clc
jnp
mov
add
inc
xor
mov
sub
sub
adc
ja
loop
fmul
pop
jnp
sub
pop
imul
jns
fucomi
jae
pop
ins
repnz
sbb
imul
add
mov
fwait
mov
test
sahf
adc
mov
inc
push
ror
pop
lods
imul
in
adc
jecxz
inc
(bad)
pop
inc
adc
add
sbb
jl
fnsave
and
or
loope
(bad)
jo
es
sub
sbb
pop
mov
dec
or
mov
sti
xor
das
nop
popa
mov
adc
mov
mov
xor
xchg
mov
xchg
xchg
jns
push
inc
not
xchg
xor
mov
dec
pop
fcmovnbe
mov
mov
mov
pop
out
ret
pushf
cmp
xchg
jecxz
(bad)
aad
mov
sub
hlt
pop
xor
xor
dec
(bad)
xchg
fwait
scas
dec
inc
test
les
inc
(bad)
jecxz
sub
mov
into
outs
dec
jg
push
sbb
jmp
fs
(bad)
cs
sub
dec
mov
popa
cmps
aam
cmp
stc
test
inc
mov
arpl
(bad)
fwait
push
add
or
movs
or
inc
mov
cmp
cmp
mov
cmc
data16
mov
cwde
stos
lahf
xor
ins
popf
xlat
pop
out
or
jnp
inc
or
xchg
or
pop
sbb
jp
sub
jp
mov
mov
aaa
int
movs
cmp
sbb
xchg
(bad)
or
jo
sbb
cwde
push
and
xor
sub
pop
scas
test
sub
lds
inc
ror
movs
dec
imul
sub
xchg
sbb
jecxz
or
sub
lds
dec
enter
mov
or
int
pop
pop
loop
in
push
in
xchg
inc
out
xlat
out
ins
std
shr
js
sub
pop
inc
ror
dec
inc
test
push
fcmovb
iret
in
cmp
addr16
pop
jnp
fs
adc
cs
and
pushf
cmp
xor
and
cs
cmps
aaa
cs
xchg
mov
sbb
jle
out
test
xor
(bad)
pop
loop
adc
inc
add
or
das
repz
mov
imul
mov
int3
inc
push
jno
cmc
loop
es
xchg
test
lds
vphaddbw
das
push
xchg
sub
cmp
fwait
sti
inc
out
push
fld
add
shl
mov
adc
mov
loop
and
data16
mov
in
(bad)
outs
(bad)
das
int3
test
xchg
xor
ins
add
sub
pop
aas
icebp
sbb
nop
cli
jecxz
jnp
and
and
outs
jp
jl
fsub
pop
push
stc
mov
pop
or
pop
mov
push
push
mov
add
loopne
aaa
adc
lahf
adc
je
jns
and
and
lods
pop
xor
inc
in
fist
xchg
ds
fwait
cdq
adc
fwait
xchg
dec
jmp
cli
cmp
mov
xor
lods
les
mov
cs
aaa
call
adc
sub
mov
dec
dec
or
mov
adc
leave
jmp
movs
xchg
adc
cmp
gs
rol
ss
out
sub
jae
and
xor
fldenv
lods
pop
and
and
and
mov
mov
inc
mov
hlt
dec
adc
adc
cld
pop
jge
idiv
xor
out
xchg
stos
pop
cmc
xor
addr16
into
cwde
scas
stc
retf
ficomp
push
and
jb
sti
in
pop
add
arpl
lods
sub
xor
dec
dec
and
add
aam
stos
xor
push
jecxz
out
lahf
push
or
push
mov
and
out
push
cmc
cmps
sbb
sub
call
xor
xor
shr
mov
mov
mov
daa
out
mov
shl
dec
iret
fdiv
pop
call
mov
or
jp
fist
push
sbb
pop
fist
sub
sbb
jmp
loope
adc
movs
add
xchg
push
jg
dec
adc
sbb
mov
fmul
xor
inc
out
push
pop
in
(bad)
xchg
inc
push
aam
shl
pop
mov
lea
push
mov
cmp
fs
rcr
aas
jle
in
les
sar
inc
inc
pushf
sub
je
xchg
psubusb
adc
mov
inc
scas
dec
xor
or
int
repnz
pop
aad
pop
mov
inc
rcl
rol
pop
or
sbb
sahf
jp
sbb
push
movs
fsubp
cmp
pop
sbb
lods
or
pop
jno
sub
jo
xlat
cmp
or
ja
loopne
dec
or
into
iret
in
xchg
test
cli
push
cmps
or
test
repnz
in
adc
push
dec
fwait
sub
mov
push
jge
pop
fimul
or
loope
mov
(bad)
in
xchg
sub
ins
std
xor
out
add
out
into
push
xor
scas
out
pushf
ja
test
stc
jl
jmp
jmp
(bad)
int3
lds
or
xchg
jecxz
dec
in
mov
lahf
mov
rcl
fstp
in
in
stc
outs
jmp
sub
xchg
dec
push
xchg
mov
lea
seto
int3
xchg
stos
inc
push
lds
mul
xor
cmp
inc
mov
(bad)
mov
adc
movs
add
sub
in
or
jmp
add
(bad)
test
xchg
fucomip
pop
popa
jle
movs
pop
test
call
inc
or
push
jl
(bad)
leave
adc
xor
mov
outs
cmp
mov
mov
js
(bad)
jmp
cmp
or
xor
push
movs
fwait
in
xchg
(bad)
mov
adc
cwde
mov
outs
arpl
jb
loope
iret
into
push
mov
mov
in
in
inc
inc
frstpm(287
xor
adc
jne
jmp
lods
mov
in
repnz
les
jl
test
dec
les
lock
sar
shl
jnp
push
mov
stc
sub
or
cmp
add
nop
sti
mov
daa
dec
xchg
lahf
sub
pop
sub
jle
pushf
cmp
cmp
std
mov
addr16
mov
sub
fiadd
xor
pop
mov
jns
mul
scas
push
aam
je
mov
jns
dec
mov
jecxz
mov
arpl
xchg
add
lods
loopne
lods
mov
pop
adc
mov
sbb
pop
mov
mov
push
jge
je
jbe
and
enter
jmp
mov
test
retf
fsubr
mov
shl
sbb
cmp
and
fwait
movs
mov
lods
enter
fbstp
xor
xchg
pop
push
inc
push
inc
data16
push
icebp
mov
cmp
jnp
pop
test
push
pop
cmp
ss
lods
mov
inc
leave
jnp
ficomp
mov
dec
(bad)
retf
xchg
adc
fist
(bad)
and
addr16
mov
dec
loop
cmp
and
jge
mov
retf
pop
add
lods
shl
aam
nop
(bad)
jmp
mov
imul
clc
inc
jnp
repz
xchg
addr16
aam
pop
mov
jmp
sub
gs
mov
add
add
sub
or
dec
fdivr
ins
dec
pop
das
popf
adc
push
add
(bad)
imul
push
sbb
xchg
inc
jns
mov
lahf
cld
data16
(bad)
jmp
les
jmp
sub
jecxz
adc
test
xchg
repz
out
ret
sbb
dec
push
lahf
jecxz
mov
popa
out
sub
add
in
jbe
inc
jmp
movs
in
or
and
outs
jne
rcr
js
lock
dec
or
adc
xor
xchg
repz
ins
sub
scas
inc
cmp
popa
aaa
out
adc
dec
add
cli
adc
arpl
(bad)
mov
std
(bad)
jle
cmp
aas
mov
ja
imul
in
add
leave
jo
sub
xchg
cmp
inc
outs
jmp
push
add
retf
mov
add
fcmovb
sti
in
or
gs
mov
push
or
xor
leave
(bad)
push
cmp
adc
mov
sub
std
jp
sti
pop
pop
xchg
int
dec
cmp
add
daa
aam
es
sti
scas
xor
sub
adc
add
dec
jg
adc
cmp
cmc
cmp
pop
(bad)
test
in
call
jo
fadd
push
test
mov
fwait
sbb
ins
inc
fcomi
sub
(bad)
leave
dec
xchg
sub
scas
mov
adc
jmp
inc
push
push
imul
xor
adc
cdq
jl
mov
pop
cmp
mul
daa
loopne
sbb
xor
mov
push
push
push
and
aaa
mov
jbe
jge
retf
cmps
inc
mov
iret
mov
dec
push
lods
mov
daa
fidivr
xor
or
les
push
pop
mov
out
cli
addr16
adc
pop
pop
nop
xor
adc
gs
cwde
stos
sub
add
mov
cmp
mov
scas
add
cmp
mov
add
mov
pop
push
test
stc
add
sahf
in
icebp
mov
and
mov
lods
lock
jl
inc
mov
inc
retf
jle
daa
inc
xchg
test
mov
inc
mov
(bad)
mov
les
test
mov
je
test
cmps
lods
inc
sar
xchg
push
jmp
cmp
jns
ffreep
push
and
cmp
bound
pop
push
add
push
ror
jp
arpl
pop
mov
js
jo
jo
xchg
dec
jns
mov
cmps
mov
xor
xchg
mov
inc
jns
xor
ja
fwait
test
cmps
adc
out
or
dec
loopne
pop
mov
mov
xor
xchg
test
jmp
ror
outs
add
mov
adc
mov
sti
or
jo
push
(bad)
hlt
xor
(bad)
dec
jl
mov
cmp
call
xor
jns
mov
add
mov
ja
stos
or
retf
add
retf
inc
mov
arpl
jne
sahf
and
jmp
mov
mov
scas
pop
loop
dec
ss
and
pop
and
pop
jo
inc
fsubrp
fs
sbb
xor
repz
jge
push
into
mov
mov
repz
xchg
ds
test
push
outs
sbb
add
les
dec
jno
fadd
and
popa
xchg
arpl
sar
pop
fnstenv
gs
push
lahf
mov
loope
cmc
jne
jecxz
ja
adc
jno
cld
xchg
jecxz
push
mov
sar
dec
test
ins
jbe
push
jne
je
fdiv
loopne
add
inc
cmp
sbb
fild
aad
aas
clc
sub
ds
mov
lds
adc
xchg
add
sub
ret
das
retf
sbb
lock
pop
cmps
mov
push
out
(bad)
pop
lods
sbb
mov
sub
imul
cld
lods
pop
mov
add
imul
cmp
push
popf
stc
mov
es
cwde
adc
xchg
out
lds
inc
(bad)
cdq
jne
cmps
pop
mov
cwde
pop
pop
sub
inc
or
lods
sti
ret
push
inc
mov
mov
adc
xchg
pop
arpl
mov
jp
lea
pop
imul
push
add
(bad)
sti
fstp
add
imul
mov
add
xchg
out
loopne
fdiv
xor
xlat
daa
cmp
inc
stos
cld
push
scas
pop
fcomp
sub
ins
out
pushf
xchg
add
pop
jb
dec
out
mov
jbe
jge
mov
cmp
push
xchg
stc
xchg
push
inc
cwde
push
mov
push
loope
inc
pop
aad
loop
jmp
popf
add
xchg
loope
xor
fdecstp
mov
arpl
jp
es
or
test
mov
xchg
call
bnd
mov
jmp
int3
xor
std
add
icebp
outs
rcl
push
xor
or
sub
jg
icebp
lds
out
aaa
adc
fadd
div
scas
sub
sbb
es
mov
push
or
imul
xchg
and
out
lods
or
retf
stos
sbb
sub
fs
ss
data16
fistp
sbb
int
dec
dec
cs
pusha
cli
jg
mov
mov
pop
nop
movs
mov
inc
adc
inc
jne
push
mul
push
cli
sbb
or
sub
inc
mov
outs
dec
sti
int
or
xchg
inc
pop
dec
mov
push
retf
out
cld
test
into
lock
pop
fs
shl
pop
(bad)
imul
xor
inc
out
aas
pop
mov
(bad)
lea
inc
mov
aad
sub
(bad)
cdq
(bad)
pop
imul
repnz
sti
mov
push
imul
inc
mov
mov
js
jnp
ret
movs
fnstenv
int3
dec
movs
sbb
mov
packssdw
or
mov
pop
mov
ret
iret
push
dec
jbe
mov
in
push
mov
in
popa
lods
push
dec
aas
inc
in
cmp
out
pusha
addr16
inc
jmp
jb
stc
pop
ja
inc
int3
test
repnz
push
inc
or
lea
or
shr
mov
pop
and
adc
pop
add
inc
test
aad
lods
mov
add
mov
sar
ret
call
or
(bad)
xor
ret
inc
push
push
adc
movs
daa
mov
add
ja
inc
ja
ins
adc
inc
mov
out
cmps
lock
out
into
pop
fnstenv
retf
mov
leave
js
jge
rcl
imul
xor
cmp
nop
fwait
ins
sub
sbb
rcr
test
shl
push
rcl
xor
je
ds
ja
xchg
jno
jno
mov
mov
lds
jno
rcl
mov
cli
test
xchg
cli
sbb
dec
ret
sub
and
mov
jge
sub
push
mov
or
test
ins
pop
shl
dec
xchg
pop
(bad)
inc
ja
push
jno
or
cld
pop
mov
mov
push
repz
retf
push
add
sub
and
imul
fidivr
lahf
int
scas
pop
adc
sti
lea
arpl
mov
mov
lds
jp
pop
mov
or
sub
clc
jge
retf
mov
call
mov
test
sub
pop
lods
mul
jge
jecxz
xchg
jo
fisubr
cmp
(bad)
sub
ds
cdq
pop
out
retf
loopne
and
xor
jnp
cwde
out
jmp
xchg
or
out
mov
addr16
xchg
adc
xchg
push
adc
leave
sahf
bound
pop
imul
pop
in
sahf
aas
inc
adc
or
sub
lea
ret
or
retf
cmp
(bad)
out
enter
imul
xchg
sub
imul
sbb
ret
sub
push
fnsave
inc
xor
dec
or
add
sub
cmp
hlt
cmp
fist
bound
xchg
(bad)
in
push
jmp
neg
loop
or
push
fsub
xor
pop
ficomp
ins
cmps
mov
dec
stos
jle
add
mov
sbb
xchg
inc
cmp
(bad)
fdiv
jle
ins
jg
pop
xchg
dec
ja
pop
stos
enter
xor
fs
push
pop
inc
inc
out
daa
push
push
fld
mov
cs
inc
pop
jmp
enter
and
cs
pusha
add
lds
or
pop
out
cmps
cmps
ins
retf
scas
mov
popf
fwait
mov
addr16
xchg
in
jbe
sbb
cmp
xchg
add
ins
test
or
retf
and
dec
int
jno
jnp
scas
leave
mov
sar
cmp
in
imul
stc
push
fidiv
dec
ss
sbb
(bad)
adc
pop
ror
(bad)
sbb
inc
sub
jmp
or
or
rcl
dec
push
jmp
pusha
or
sbb
xchg
push
enter
loopne
je
mov
jp
or
cmp
sub
jmp
test
inc
cmc
mov
data16
les
push
pushf
adc
(bad)
mov
push
js
loopne
bound
and
fsub
push
sbb
hlt
fistp
add
mov
lds
add
popa
xor
aad
rep
cmp
jo
fcom
repnz
ds
cmps
movntq
out
push
dec
sar
movs
or
outs
mov
dec
enter
add
mov
sbb
lahf
pop
xor
push
(bad)
ds
xor
ins
mov
cdq
xor
xor
inc
inc
push
rcl
cmp
rcl
ins
ss
repnz
jo
js
and
or
sti
ss
and
das
push
mov
sub
and
lods
fs
ret
pop
mov
add
call
cmp
pop
mov
ret
call
or
push
push
cwde
and
or
sub
xchg
dec
cmp
test
clc
retf
cmp
sub
fs
shl
lods
stos
jg
cmp
iret
sub
xchg
xchg
stos
loopne
in
ror
inc
mov
cmp
ret
mov
inc
xchg
retf
lock
mov
jl
div
sub
cld
sbb
shr
movs
int3
sub
fwait
js
icebp
cmp
add
push
stc
bound
mov
or
nop
stos
push
mov
pop
stos
(bad)
(bad)
push
repz
in
iret
loop
mov
push
mov
push
in
xchg
or
mov
pop
enter
and
pushf
mov
or
popa
cmps
test
pop
add
sti
push
loopne
shr
or
ds
cmps
ret
add
sub
jmp
pop
loopne
sub
inc
jbe
cli
in
dec
jmp
pop
pop
addr16
pop
mov
dec
dec
pushf
std
pop
imul
push
sbb
shl
mov
int
xchg
movs
sub
iret
nop
test
stc
movs
mov
popf
test
jb
push
ss
adc
add
jl
inc
dec
jns
add
add
sbb
dec
fstp
or
jne
ja
inc
cmp
xchg
push
stos
cmp
dec
adc
ret
inc
inc
call
xchg
dec
pushf
mov
fcomp
xor
imul
mov
cdq
mov
outs
jl
mov
mov
or
cld
add
aad
and
pusha
arpl
sub
adc
je
ret
xor
adc
mov
xchg
mov
inc
fst
imul
mov
push
xchg
pop
bound
test
pushf
(bad)
or
or
add
dec
adc
cmps
icebp
cmp
dec
mov
mov
mov
pop
xchg
push
push
mov
(bad)
mov
mov
xchg
jno
or
xor
aas
mov
adc
dec
imul
loop
mov
sbb
xchg
mov
das
push
mov
outs
(bad)
push
loopne
and
loopne
jne
enter
popf
mov
repnz
aas
mov
cmp
lock
aaa
loope
pop
adc
add
add
mov
sub
pop
cld
test
sub
mov
xchg
xchg
int3
aad
lods
shl
mov
push
pop
add
int
pop
mov
mov
pop
or
jmp
push
outs
sahf
dec
mov
dec
repz
mov
repnz
aad
mov
fs
sbb
jae
push
out
ds
ins
xchg
sbb
fs
push
push
test
sahf
jbe
int
fbstp
cmp
push
dec
xchg
adc
mov
fwait
ret
pushf
loop
das
imul
ret
stos
mov
out
aam
cdq
out
push
mov
cmp
mov
ja
test
sahf
int3
sbb
ror
dec
bound
cmp
sub
push
mov
fisub
and
adc
daa
nop
add
popa
mov
aam
imul
push
pop
sbb
mov
into
hlt
ss
dec
jmp
in
pop
dec
cmps
ret
aam
or
jb
stos
or
int
xchg
jp
add
test
adc
aam
jmp
mov
sar
add
lods
lds
xor
jecxz
xchg
icebp
test
xchg
sub
jb
and
hlt
daa
mov
inc
sbb
mov
push
jnp
pop
test
add
gs
imul
fsubr
jno
sub
arpl
or
add
pushf
(bad)
sub
scas
test
and
cmps
lds
inc
or
test
pop
lods
and
push
sub
mov
jae
in
loopne
ins
call
jecxz
cmps
pusha
pop
cmp
sub
sahf
jl
jge
sub
mov
lock
dec
dec
push
mov
rcr
icebp
mov
jmp
inc
sub
xchg
sbb
jge
retf
pop
mov
mov
ror
pop
fwait
mov
mov
lock
nop
add
xor
sub
(bad)
(bad)
out
pop
dec
mov
repnz
lods
xor
cmp
aad
mov
inc
retf
hlt
shr
idiv
movs
(bad)
js
mov
(bad)
inc
outs
fistp
retf
push
push
jb
mov
and
inc
imul
inc
adc
cs
(bad)
(bad)
mov
cmp
or
sub
dec
and
jb
mov
out
jbe
and
xor
ret
stc
jae
fild
ins
jnp
jp
and
mov
and
cmp
xchg
hlt
xchg
and
mov
test
aas
cdq
ror
ror
call
aad
push
jne
push
jo
adc
jbe
leave
repnz
imul
pop
cmp
xchg
mov
cmc
dec
ds
push
mov
rol
xchg
outs
push
(bad)
xlat
arpl
stc
sar
inc
popf
mov
inc
test
dec
cdq
imul
std
dec
loope
mov
sub
(bad)
pop
adc
push
fs
mov
imul
movs
add
and
fcmove
jecxz
rcr
std
retf
loope
not
iret
repz
addr16
loopne
ss
add
inc
jne
jp
xchg
pop
in
mov
and
ror
in
dec
rol
mov
ror
mov
lock
mov
mov
fidiv
and
inc
and
inc
xlat
mov
imul
lea
cld
cmp
shl
or
mov
(bad)
fnstenv
(bad)
popf
sbb
fist
or
aam
jle
in
xchg
sub
lods
pop
or
repz
inc
imul
xor
lahf
mov
repz
pop
xor
or
call
mov
(bad)
pop
sar
jl
mov
sahf
inc
jae
int3
mov
inc
or
or
ret
push
sbb
add
mov
ret
arpl
test
add
fnsave
sub
hlt
xor
sbb
call
ret
in
fs
inc
loope
xlat
call
repnz
repnz
cmp
icebp
jne
xor
and
mov
loopne
call
push
jecxz
hlt
mov
pop
js
popa
mov
into
call
push
add
retf
jno
dec
push
lea
out
adc
mov
push
mov
ds
dec
call
dec
inc
cmp
cmp
inc
clc
xchg
push
in
xor
(bad)
ficomp
mov
out
cmp
sbb
push
lahf
lods
les
popf
mov
test
loopne
cmovae
jle
rcr
leave
push
xchg
(bad)
xchg
(bad)
jp
cmp
or
cmc
xor
hlt
inc
jno
test
out
and
movs
dec
pop
cmpxchg
cmps
push
cmp
imul
fbld
nop
imul
dec
std
dec
push
or
jl
test
scas
not
add
jns
pop
nop
imul
dec
dec
dec
cmc
stos
mov
inc
test
pushf
pusha
sbb
push
or
push
in
lea
add
outs
imul
call
stc
int3
ja
sbb
jge
ss
adc
adc
sub
rcr
shl
mov
jo
in
push
mov
add
rcl
(bad)
lods
cld
gs
outs
test
movs
xchg
cdq
pusha
movs
sub
movs
xchg
or
mov
xor
and
mov
xor
cmp
mov
(bad)
jecxz
jp
push
gs
icebp
push
mov
lea
idiv
ss
daa
xor
repnz
add
test
out
stos
jno
xor
push
outs
shl
mov
sub
adc
sub
dec
push
xchg
xchg
(bad)
cmp
ja
call
sbb
inc
adc
leave
inc
mov
out
mov
pop
loope
inc
push
movs
xchg
xchg
cli
jl
rcl
stc
or
adc
movs
int
mov
pop
sub
mov
sti
ror
(bad)
jmp
iret
add
or
sbb
cld
xor
push
aaa
sub
pop
pop
fadd
pop
dec
mov
mov
icebp
xor
ds
sbb
adc
xchg
jbe
adc
bnd
fisub
hlt
xor
and
shl
and
dec
push
cwde
imul
mov
mov
pop
retf
add
enter
cmps
jg
mov
int3
adc
aam
xchg
in
push
bound
rol
into
test
aas
mov
lds
mov
idiv
adc
sub
(bad)
push
sbb
mov
idiv
xor
das
ret
leave
(bad)
sbb
xchg
mov
sbb
xchg
sbb
inc
cmp
mov
cmc
xchg
xchg
sbb
xchg
(bad)
jle
cmp
aas
xor
or
std
mov
jp
daa
jp
cmp
mov
xlat
xlat
or
(bad)
and
in
jge
stos
sub
or
inc
call
sub
jo
out
lock
mov
neg
int
ret
data16
jp
mov
cmc
out
sub
cmps
pop
mov
arpl
dec
and
aad
scas
popa
fisttp
xchg
jl
xor
mov
mov
sbb
pusha
and
jbe
sbb
sbb
dec
cli
(bad)
cmps
xor
mov
aaa
loop
mov
inc
mov
dec
mov
mov
out
shl
inc
out
xchg
jg
out
sub
mov
sub
fstp
push
xor
cdq
pop
fwait
in
shl
iret
xchg
sbb
test
in
fwait
sbb
or
dec
xlat
div
pop
pushf
mov
andps
push
jnp
adc
leave
xor
dec
popa
dec
ss
pop
mov
(bad)
cs
test
adc
movs
and
add
fstp
ins
cld
hlt
jo
(bad)
outs
sbb
xchg
fwait
pop
xchg
ja
mov
fst
in
sub
mov
loope
sub
movs
cld
adc
das
dec
enter
xor
aad
pop
push
enter
out
jo
pop
std
repnz
jle
xchg
int3
sub
es
pusha
mov
dec
push
and
cld
jb
adc
jp
loopne
xor
sti
ret
jo
cmp
add
arpl
nop
jae
dec
xor
mov
cli
(bad)
or
dec
sub
xchg
jno
test
and
sub
daa
out
icebp
ror
push
mov
gs
ds
add
jns
rep
cld
sub
jb
mov
push
adc
iret
push
mov
adc
dec
movs
cmp
sti
inc
cmp
inc
cmps
pop
inc
in
add
jp
loop
pop
fidiv
sar
fdiv
jbe
inc
imul
xor
lods
or
repnz
hlt
mov
aas
xlat
loope
xor
jecxz
test
jb
out
nop
test
daa
movs
repnz
(bad)
lock
mov
ror
inc
shl
fwait
leave
repnz
sub
sar
int
rcl
push
xor
pusha
mov
test
mov
bound
(bad)
stos
cmp
push
leave
shr
icebp
or
es
and
push
sub
mov
xlat
cld
ins
dec
sbb
imul
inc
div
dec
mov
inc
loop
das
pop
jmp
pushf
adc
int
loopne
mov
mov
or
or
enter
jp
dec
repnz
and
dec
mov
pop
mov
add
jmp
out
in
std
je
lock
xchg
out
aas
repnz
test
je
sub
fild
in
and
and
test
add
jmp
pop
movs
aaa
(bad)
and
sbb
clc
ins
adc
loopne
outs
jl
pop
mov
das
in
sub
mov
cmc
(bad)
jbe
and
arpl
in
scas
push
es
ficom
xchg
push
mov
std
jb
jecxz
and
xor
cmp
xchg
aas
mov
ret
xchg
fsubr
popa
leave
or
inc
add
iret
imul
mov
push
je
xchg
mov
add
mov
jae
ror
pop
pop
mov
in
ret
ftst
lods
outs
daa
(bad)
loop
jne
adc
jp
cmp
mov
xchg
push
and
pop
repz
aas
or
pop
inc
xchg
loop
pop
cdq
fs
in
xor
add
cwde
inc
ret
xor
inc
push
leave
dec
dec
mov
xchg
lds
xchg
mov
clc
lods
jecxz
shr
scas
out
xchg
inc
sbb
jns
xor
ss
(bad)
xor
jl
and
xor
adc
test
aas
pop
sbb
(bad)
in
mov
pop
dec
sti
jg
or
daa
xabort
pop
sbb
(bad)
xchg
in
sar
mov
jp
inc
stos
cmp
mov
scas
ficomp
add
pusha
lods
push
xor
mov
nop
stos
scas
or
loop
inc
or
and
lock
or
jae
jo
mov
pop
lahf
mov
push
cwde
cmps
out
sub
dec
or
jne
ficom
dec
push
std
pop
add
stc
icebp
push
das
mov
pop
fst
xor
mov
xor
adc
test
or
pop
mov
in
imul
xor
in
jmp
or
xor
stos
pushf
sub
in
(bad)
iret
rcl
sahf
ins
push
rol
push
rcl
jmp
sbb
es
jmp
stos
sub
mov
sub
pop
sbb
xchg
outs
fs
sahf
aas
out
add
mov
push
pop
jns
cmp
imul
in
out
fcomp
sub
jp
jmp
bound
mov
add
lds
jecxz
mov
add
dec
jp
sub
inc
add
das
mov
fdivr
lea
into
mov
push
or
xchg
jae
loope
jge
lods
loope
inc
adc
ins
inc
shl
stos
ins
push
mov
cmp
jmp
and
push
mov
cmp
in
dec
xchg
sub
fdivr
ds
enter
gs
leave
inc
ret
mov
inc
mov
out
loope
outs
dec
cli
cld
loopne
mov
mov
sbb
popf
or
shr
cmp
add
cmp
jns
xchg
scas
push
mov
or
push
xchg
and
fisttp
sub
je
push
lock
xor
imul
fstp
test
xor
mov
clc
(bad)
fld
sub
test
push
and
sbb
add
push
mov
xor
jb
mov
enter
test
sub
push
fwait
mov
jnp
sbb
adc
xchg
fisttp
loopne
xchg
add
iret
test
push
mov
dec
lods
cmps
dec
dec
sbb
push
lds
leave
mov
xchg
add
adc
mov
mov
push
ins
daa
stc
sub
xchg
and
shl
addr16
push
cli
fdiv
adc
lea
repz
popa
rcr
std
cli
outs
cdq
lods
nop
and
jbe
mov
sub
push
jnp
loopne
(bad)
mov
pop
jecxz
dec
push
xchg
inc
out
rcr
xor
test
push
daa
(bad)
and
popf
aad
out
xor
mov
and
push
(bad)
call
mov
rcr
mov
outs
test
add
xor
inc
sub
pusha
pop
js
lock
push
xchg
test
sub
jo
dec
repz
sub
bound
aaa
stos
fisubr
mov
mov
(bad)
xor
jno
pushf
xchg
ins
mov
inc
nop
mov
test
push
(bad)
mov
rol
shr
push
in
cmps
pusha
rol
fld
outs
sub
test
pusha
pushf
mov
push
jae
test
cmps
fld
mov
cmp
jmp
inc
(bad)
out
push
mov
jnp
gs
imul
inc
jno
stos
sub
mov
jle
jno
aaa
test
jno
inc
(bad)
mov
mov
clc
mov
les
les
ins
pop
inc
jmp
mov
xor
inc
fcom
mov
cmps
push
jb
(bad)
clc
cdq
jo
cmp
outs
(bad)
jmp
sbb
inc
ins
cdq
nop
inc
das
push
sub
mov
jno
mov
xor
in
mov
add
shr
popf
or
pop
(bad)
sti
sbb
mov
cmc
jnp
in
imul
cmps
outs
mov
or
mov
mov
inc
(bad)
and
xchg
out
add
jnp
shr
lea
push
jle
or
or
pop
rol
sub
mov
push
adc
dec
in
out
cmps
mov
cmp
cwde
std
ror
outs
loope
cs
lock
mov
mov
je
xor
and
into
call
mov
test
mov
xchg
jnp
add
cmp
imul
and
adc
test
mov
cmp
jl
sub
sbb
arpl
mov
dec
scas
test
mov
add
lds
push
aad
add
cwde
popf
mov
retf
xchg
dec
mov
(bad)
adc
or
jbe
sbb
and
stos
jno
mov
jb
add
dec
aam
xchg
(bad)
jmp
sahf
out
pusha
(bad)
and
or
mov
add
mov
pop
das
clc
mov
scas
xchg
int3
mov
(bad)
(bad)
jmp
(bad)
pop
add
outs
jno
cli
in
call
jnp
add
pushf
hlt
mov
loope
fwait
xchg
cld
stos
and
ret
dec
loopne
in
into
or
xor
xor
push
xchg
(bad)
popa
mov
aad
rol
mov
lock
or
(bad)
lahf
(bad)
fsubr
loop
lock
test
retf
bound
jg
and
adc
mov
cmp
and
jnp
fsub
jns
pop
mov
out
test
rcl
mov
int
lea
pop
jl
cmp
inc
outs
add
sub
scas
sub
inc
arpl
in
mov
mov
retf
int3
cmp
sbb
fild
out
and
sbb
jmp
les
jb
or
and
popf
dec
loopne
mov
(bad)
outs
int3
cmps
dec
mov
nop
adc
loopne
push
inc
sub
bound
lahf
adc
adc
aad
pop
gs
jo
lods
ins
add
push
adc
test
pop
das
jno
jne
cwde
cmp
adc
xor
in
call
in
cld
call
sahf
leave
loop
mov
lds
lock
call
mov
xor
adc
jecxz
push
push
add
push
retf
pop
ret
push
sub
add
fs
xlat
pop
test
mov
inc
dec
push
inc
push
out
retf
xlat
stc
mov
lods
adc
pushf
xor
daa
sub
pop
rol
sub
sub
or
push
adc
xlat
call
ss
jno
xchg
jo
sbb
arpl
pop
jbe
repnz
sahf
gs
cs
(bad)
and
and
jle
mov
and
fnstsw
imul
add
cwde
daa
push
jl
push
test
and
or
bound
scas
jmp
test
pop
add
lods
sbb
mov
xchg
xlat
add
pop
fldcw
shl
xchg
jne
xchg
outs
mov
mov
fmulp
or
push
jg
repnz
or
pop
xor
jbe
inc
adc
fcom
adc
add
jae
xor
popf
mov
xchg
rol
mov
int
fmul
in
scas
adc
lea
shl
cdq
push
mov
xchg
pop
jb
mov
(bad)
inc
jb
out
pop
mov
push
in
sbb
adc
or
and
loop
pop
loop
xor
dec
dec
js
mov
add
xchg
ins
(bad)
xor
and
xchg
xor
cmps
fwait
or
sub
or
inc
mov
mov
mov
mov
mov
fs
pushf
(bad)
mov
call
repz
adc
lahf
sub
mov
mov
lea
cmc
lds
sbb
popa
cmp
lahf
dec
rcr
in
cmp
icebp
mov
ficomp
dec
ret
call
(bad)
jmp
popw
add
gs
dec
inc
and
adc
dec
addr16
jnp
adc
and
xchg
xchg
iret
sbb
jb
dec
sub
ins
not
lock
or
mov
and
(bad)
fstp
pop
mov
adc
inc
add
sar
pop
jg
mov
sti
sbb
stc
pop
leave
inc
and
(bad)
mov
sbb
mov
iret
lods
xchg
fmul
inc
mov
inc
(bad)
cmp
adc
stos
push
inc
rol
mov
(bad)
aas
jno
cmps
iret
or
mov
mov
addr16
dec
jo
test
dec
stos
call
cmp
jae
xor
les
xchg
push
addr16
ds
xlat
loop
xchg
and
add
add
add
outs
dec
sbb
and
out
popf
and
jge
adc
rdmsr
pop
outs
mov
and
sub
loop
cmp
mov
stos
das
fwait
inc
(bad)
loope
out
inc
dec
sbb
adc
stos
adc
and
mov
add
dec
xlat
add
shl
inc
or
adc
cmp
mov
(bad)
pop
retf
arpl
(bad)
shl
stos
jmp
and
sbb
dec
xchg
je
in
cdq
mov
ss
or
xor
retf
aad
add
pop
imul
mov
and
out
shl
cmp
sbb
pop
repnz
push
leave
push
sub
ins
sbb
hlt
jp
enter
jbe
scas
lock
xor
add
push
dec
add
outs
adc
stc
sub
mov
sub
or
cmp
mov
dec
cmp
add
fldenv
jl
(bad)
push
addr16
mov
sub
xchg
outs
inc
or
in
cmp
dec
mov
imul
xchg
sbb
lock
jns
mov
jg
push
xor
or
test
outs
test
pop
pop
push
xor
cli
pop
sub
retf
cmps
ja
mov
test
ins
test
movs
fnstsw
scas
es
sbb
sbb
mov
jnp
jno
stc
bound
xor
dec
scas
jecxz
into
jne
int
stc
(bad)
cmc
mov
xor
in
in
(bad)
push
xchg
cld
add
pop
xchg
cwde
(bad)
das
lds
ret
mov
dec
mov
or
pop
and
cmp
adc
fsubr
jnp
cmp
push
bound
push
ins
sub
mov
pop
in
lock
lahf
xchg
xchg
mov
and
gs
and
xchg
push
mov
in
retf
(bad)
ins
(bad)
aad
jo
repnz
jmp
ret
xor
sbb
sub
mov
sbb
or
gs
in
pop
cmps
sbb
jo
jno
test
sub
mov
sti
mov
xchg
jge
cmp
data16
push
gs
mov
pop
cmps
add
daa
aaa
add
lods
xor
dec
dec
mov
fimul
xchg
xchg
xlat
mov
test
scas
or
clc
inc
xlat
loope
pop
in
add
xor
dec
cld
sti
out
pop
pushf
test
push
aam
ss
xchg
in
mov
mov
dec
or
sub
inc
stos
xor
jne
jge
lock
pop
add
mov
leave
aas
pushf
outs
(bad)
int
jg
mov
call
or
loope
icebp
jb
sub
ja
xor
stos
stc
mov
jo
and
repnz
jle
cmp
(bad)
ins
mov
ja
jmp
or
jge
and
xchg
cmp
sub
aas
or
in
mov
jae
xor
pop
push
xlat
mov
pop
mov
sbb
stos
sub
mov
loope
retf
retf
lds
jl
loop
int3
loope
add
and
cmp
or
hlt
shl
cli
sbb
(bad)
inc
clc
ret
jne
lods
mov
mov
std
dec
out
xchg
sbb
mov
(bad)
fist
imul
mov
mov
mov
test
popf
test
(bad)
mov
mov
sbb
sub
adc
fmul
xor
dec
mov
add
scas
sub
js
add
addr16
adc
push
jns
shl
outs
aad
mov
pop
xor
jno
inc
icebp
sti
pushf
jmp
rcl
loop
pop
test
mov
xchg
jbe
push
and
mov
push
xor
or
mov
inc
jmp
aaa
adc
call
out
dec
repnz
push
cli
ficomp
sbb
mov
in
mov
inc
rol
fld
mov
lds
(bad)
mov
rol
scas
push
pop
xchg
in
and
jne
iret
dec
xchg
aad
enter
push
dec
shr
std
jl
int
mov
shr
popa
push
sti
movs
inc
adc
into
xor
dec
xchg
jmp
xchg
mov
sub
out
push
inc
push
aas
adc
jns
(bad)
pushf
push
sbb
xchg
pop
arpl
data16
or
out
mov
mov
mov
pop
ret
jo
jg
int
addr16
push
sahf
js
imul
cs
mov
sbb
pop
dec
test
adc
pop
ret
ret
jl
sub
and
fbld
mov
or
rcl
adc
cmps
int3
retf
xor
in
stc
inc
cmp
shl
loopne
nop
sti
and
movs
add
jl
montmul
cmps
xchg
std
or
dec
arpl
xchg
lock
xchg
loopne
fadd
add
and
push
ja
sbb
shl
sbb
xor
pop
sbb
and
ret
nop
cmp
push
das
cmp
call
popa
push
retf
repz
mov
sbb
ss
jno
pop
push
cmp
xor
mov
stos
in
movs
mov
inc
or
mov
and
das
dec
cmp
xchg
xchg
dec
(bad)
jmp
ja
pop
pop
adc
mov
xchg
adc
lods
or
pop
(bad)
jge
xor
xchg
lea
femms
xor
ds
aaa
mov
div
mov
cmp
aaa
and
jecxz
das
or
aas
pop
and
jo
jne
mov
mov
ret
fisttp
mov
inc
mov
xchg
sub
mov
ins
cmp
dec
pop
mov
test
jno
sti
jmp
xchg
test
push
mov
scas
mov
mov
mov
push
or
ds
aam
inc
pusha
add
pop
xchg
pop
xchg
aaa
jmp
repnz
daa
add
popa
rcl
mov
lds
push
out
ds
xchg
rol
push
das
loop
rcr
in
dec
mov
callw
inc
sbb
sbb
arpl
inc
push
nop
add
or
cmps
hlt
and
cmc
idiv
fadd
xchg
mov
(bad)
lock
repnz
ror
and
dec
shr
scas
mov
cdq
add
sbb
pop
dec
cmp
push
cwde
inc
adc
cmc
push
push
cmp
std
cmp
mov
jmp
mov
loope
xor
retf
xor
cmp
push
popf
mov
inc
cwde
push
in
ret
lods
sti
out
fs
scas
retf
movzx
cmc
scas
jae
ror
cs
gs
push
stos
sbb
retf
jb
sbb
adc
loope
aaa
leave
pop
sbb
mov
sub
sub
test
imul
mov
jle
ficom
jno
sbb
push
dec
pushf
mov
fmul
daa
call
popf
jmpw
push
(bad)
enter
add
sub
cli
jp
test
add
xchg
lds
xchg
cmp
sub
lds
das
mov
adc
inc
sub
call
inc
sbb
xchg
and
push
sbb
fisub
push
xchg
add
pop
je
in
push
ja
jmp
es
mov
aas
arpl
push
or
or
mov
lahf
test
in
pop
das
fadd
push
fstp
dec
xchg
repz
rcl
xor
mov
out
mov
and
pop
rcl
repz
cdq
icebp
push
adc
out
add
sar
lods
ror
inc
cmp
sub
pusha
xor
inc
arpl
xor
cmp
aas
cwde
sub
into
sub
movs
jmp
test
pop
(bad)
mov
(bad)
adc
fwait
jns
add
aaa
mov
inc
and
(bad)
cmp
aad
xor
and
and
(bad)
mov
mov
lahf
lahf
inc
add
outs
stc
cmp
js
pop
in
pushf
jmp
repnz
repz
les
into
imul
jae
jg
sti
scas
lock
mov
(bad)
jns
xor
adc
xchg
idiv
mov
dec
pop
mov
pop
fdecstp
(bad)
fstp
mov
out
add
mov
nop
jg
inc
aaa
pop
std
(bad)
sti
fcomp
fcomp
std
scas
sub
ret
gs
std
mov
xchg
rcl
xchg
fcomip
add
jl
jmp
addr16
aas
mov
add
jae
xchg
sub
push
jae
fwait
jne
xor
or
aaa
loop
aas
test
xor
cmp
mov
stc
xor
xor
imul
imul
lahf
push
cmp
rcr
ja
dec
add
pusha
ret
rol
loope
dec
(bad)
leave
add
test
inc
or
call
dec
sub
sar
inc
ret
or
mov
add
mov
int
int3
sbb
add
call
loop
shl
outs
js
pop
mov
add
lock
outs
jb
sbb
push
rcl
loop
mov
rcl
popa
push
rcr
add
jp
nop
mov
push
sbb
or
mov
add
fdivr
pop
test
ficomp
mov
xchg
outs
adc
and
test
ror
pop
les
imul
and
dec
sar
mov
dec
mov
cli
sbb
aad
mov
add
and
cmp
pop
pop
xchg
fadd
ret
or
xor
mov
xchg
dec
mov
in
je
stos
(bad)
les
push
jmp
and
push
sub
mov
pop
js
in
sbb
mov
popf
loop
push
aas
xchg
add
lds
pushf
fisttp
mov
jmp
or
and
cmp
and
repz
mov
mov
movs
popa
xchg
mov
jae
cld
pop
idiv
xor
(bad)
sub
iret
mov
mov
lds
je
jecxz
call
out
jo
lahf
add
dec
add
mov
jnp
scas
inc
mov
ins
inc
sub
mov
daa
pusha
jnp
cmp
dec
push
cmp
in
lods
inc
lods
imul
push
fild
pop
sahf
jp
jle
or
push
pop
cmc
outs
pop
sub
cs
ins
mov
mov
cli
cdq
or
sbb
vmread
mov
jge
outs
sar
pushf
leave
fiadd
bnd
jne
sti
adc
fwait
cmps
mov
and
mov
arpl
jl
mov
rcl
movs
mov
imul
inc
or
push
and
cs
mov
jno
enter
dec
add
pushf
cmp
retf
and
bt
int3
mov
mov
rol
jb
mov
call
ret
dec
inc
mul
xor
rcr
data16
or
ret
sbb
repz
fild
clc
fs
in
sub
mov
xor
xchg
sub
iret
adc
and
outs
imul
test
inc
xchg
fisttp
and
retf
add
xchg
cmc
push
sbb
mov
sub
sbb
add
cwde
cmp
cmp
inc
pop
loopne
retf
aas
jnp
loop
loopne
fnstcw
sub
mov
loopne
ret
jno
push
rol
mov
xchg
inc
inc
push
nop
mov
push
push
mov
fcom
out
mov
lock
sub
test
jo
push
mov
sar
inc
push
mov
shl
cmps
push
loope
dec
repz
adc
das
cld
jp
pop
(bad)
cwde
dec
cdq
lahf
shr
sbb
sti
call
ins
mov
int3
cmp
lds
cli
sbb
loop
mov
pop
repnz
gs
mov
retf
lock
ins
loopne
stc
pop
jno
arpl
push
cmps
mov
push
bound
xor
or
inc
mov
ret
(bad)
xchg
div
or
imul
ins
adc
sub
inc
xor
jno
add
sbb
and
arpl
sub
jecxz
call
call
mov
fwait
cmp
jb
movntps
xchg
imul
mov
dec
stos
jge
loop
in
ins
xchg
inc
aad
mov
xchg
je
stos
rol
ins
dec
into
gs
and
xrelease
and
pop
push
mov
fldcw
cmp
aaa
xor
jge
fst
sbb
pop
lods
ror
int
ins
push
les
imul
pop
pop
dec
daa
push
mov
ins
out
jnp
(bad)
in
pop
dec
adc
xchg
cmc
pop
(bad)
addr16
pop
push
mov
mov
sbb
icebp
dec
or
aaa
jmp
add
icebp
push
mov
fdiv
ret
das
mov
pop
push
sbb
jmp
jl
iret
fs
fwait
repz
jmp
icebp
in
mov
push
jp
xor
xchg
cs
ins
sbb
xchg
aaa
inc
cmp
xchg
inc
xchg
imul
(bad)
mov
aam
cmp
dec
gs
and
cld
pop
mov
dec
data16
sbb
leave
pop
inc
mov
mov
out
xor
not
test
imul
xor
stc
xlat
outs
pop
push
nop
test
arpl
inc
jbe
or
imul
cdq
xchg
pop
imul
das
mov
fwait
xlat
int3
pushf
pop
into
xlat
neg
repz
cwde
ret
movs
(bad)
or
push
repnz
mov
int3
bound
sub
ss
lock
or
aam
add
pop
adc
add
popa
xor
test
movs
adc
push
push
jmp
mov
and
mov
jo
jmp
sbb
data16
cdq
js
ss
das
popa
inc
iret
pop
xchg
ja
ja
(bad)
cmps
pop
call
add
test
mov
jmp
into
add
cli
int
inc
pop
jmp
retf
add
sahf
cld
adc
pop
fimul
in
and
loop
xor
mov
cmp
adc
push
inc
mov
dec
(bad)
push
fneni(8087
pop
xor
repnz
push
call
punpcklbw
pop
xlat
inc
xchg
ret
adc
out
(bad)
pop
jnp
sub
push
out
sbb
(bad)
inc
sbb
retf
mov
dec
push
cmp
mov
sbb
daa
enter
cmc
or
and
dec
cmps
xchg
adc
je
add
xlat
adc
aaa
inc
stos
dec
outs
fsubr
push
pop
int3
lods
and
jno
jmp
jg
sub
mov
div
jb
movs
(bad)
xchg
inc
mov
mov
lods
mov
jmp
jge
inc
or
fidiv
lahf
dec
mov
aaa
dec
mov
(bad)
or
add
and
jmp
cmpxchg
ret
mov
mov
popa
pop
inc
retf
sti
xchg
pusha
sbb
jnp
(bad)
pop
sbb
mov
inc
adc
lds
ins
jae
std
dec
fldcw
adc
cmp
dec
inc
cmps
ror
mov
cmp
in
mov
xchg
cmp
jge
loopne
mov
fidivr
int3
dec
stos
dec
in
or
adc
mov
retf
js
push
lea
(bad)
push
popa
test
test
and
adc
shl
add
add
mov
jns
dec
into
xor
cdq
push
test
xchg
mov
add
clc
pop
das
and
(bad)
aaa
push
xchg
les
mov
inc
adc
mov
or
mov
xor
xor
imul
inc
sbb
mov
push
dec
loopne
or
dec
fimul
stos
adc
lods
jle
push
cmp
sbb
xor
adc
fwait
ret
push
test
in
das
ds
pop
push
shl
dec
push
adc
dec
mov
inc
mov
enter
jecxz
add
rcr
das
push
repnz
pop
std
jl
shl
neg
ss
addr16
lahf
push
sub
sbb
xchg
cmp
fs
jp
cwde
mov
or
fldenv
hlt
pop
dec
push
dec
sub
imul
sbb
cmc
jle
xchg
rcl
mov
in
inc
retf
or
stos
daa
icebp
pop
and
movs
mov
mov
push
mov
add
call
je
xchg
cmp
call
test
or
add
imul
adc
or
lock
outs
js
jge
mov
xchg
clc
mov
sbb
data16
sub
mov
dec
and
cdq
jmp
cmc
xor
ins
mov
mov
loopne
push
mov
test
test
mov
stc
cmps
pop
xor
pop
or
sub
mov
mov
push
int
cmp
or
dec
and
movs
jns
dec
sub
es
dec
push
test
js
and
cmp
xlat
outs
adc
mov
inc
xor
mov
cld
sbb
and
pop
mov
dec
mov
stc
xchg
xchg
in
imul
sti
les
mov
lods
sar
dec
lock
push
push
dec
ins
jge
xor
stos
sahf
push
push
xor
adc
ja
cld
mov
jg
js
test
aam
mov
loope
mov
ret
gs
pop
dec
jno
mov
aas
mov
daa
lahf
aam
addr16
movs
pop
jge
stc
popf
mov
add
pop
add
pop
jbe
add
or
arpl
in
fld
retf
imul
fdiv
in
and
fwait
mov
sub
xchg
pop
jg
push
xchg
aaa
jle
inc
repnz
inc
sub
push
xor
jge
pushf
jae
leave
ror
add
pop
dec
sub
ds
mov
dec
(bad)
repz
int3
inc
add
iret
xchg
mov
xchg
xchg
mov
mov
push
out
push
mov
adc
aaa
or
mov
ja
mov
adc
les
pop
jno
mov
idiv
mov
icebp
call
mov
ss
mov
cmp
push
jno
cmp
call
dec
mov
movs
xchg
and
mov
mov
mov
enter
cmp
div
mov
jmp
mov
mov
jae
jmp
pop
ret
xor
mov
fiadd
hlt
ins
mov
stos
int
inc
imul
int3
ss
shl
jnp
test
mov
pop
xor
mov
call
and
(bad)
mov
stc
pusha
mov
not
adc
add
outs
sar
into
xchg
push
xchg
aas
nop
xor
or
jmp
mov
mov
test
mov
or
inc
push
jnp
imul
in
mov
xchg
cs
push
mul
pop
js
inc
pop
out
sbb
loope
das
call
xchg
clc
aam
rcr
push
cmc
mov
mov
pop
int
push
pop
ss
or
push
push
cmc
pop
push
ds
xchg
cdq
cmp
adc
sbb
mov
pop
int
ss
xor
imul
fcomp
out
mov
pop
inc
push
stos
xor
and
or
dec
adc
lds
mov
jne
push
lods
add
xchg
mov
adc
cwde
xchg
in
fs
pop
movs
mov
add
mov
dec
(bad)
cmp
sahf
int
fnsave
stos
in
mov
cmp
cmp
and
mov
push
sbb
hlt
dec
popf
xchg
jo
xchg
test
fistp
push
mov
xor
cmp
or
enter
cmp
enter
pop
cwde
outs
push
jno
inc
pop
fwait
loop
lock
push
jnp
jns
ja
pusha
test
mov
jmp
sbb
or
sub
pop
call
push
std
push
sub
jb
faddp
xchg
popa
test
inc
mov
pushf
pop
sbb
outs
mov
imul
rol
fld
inc
sbb
xor
pop
add
mov
lock
cmc
sbb
cli
idiv
jno
mov
rcr
sahf
jecxz
mov
cdq
dec
sub
outs
mov
cli
add
xor
xor
ja
mov
xchg
and
mov
out
cwde
fstp
outs
xor
mov
cmps
aas
add
fcom
push
inc
xor
push
xchg
popa
fwait
ins
add
fcom
mov
xor
imul
pop
rcr
pop
repnz
int
lahf
ret
lods
and
ret
jl
or
shr
js
aaa
shl
ret
sub
add
mov
cmps
sub
xchg
cmp
je
les
outs
imul
outs
sub
push
push
ror
inc
mov
sbb
push
sbb
cmp
lods
push
or
mov
cmp
(bad)
imul
cmc
xchg
(bad)
into
xchg
inc
pop
into
cmp
jecxz
sub
xchg
cld
or
mov
push
int3
mov
inc
add
shr
std
mov
or
retf
(bad)
adc
inc
sub
add
push
scas
aad
jl
les
jae
gs
mov
add
cmp
xor
imul
mov
xchg
call
pop
scas
test
lods
mov
outs
ror
dec
and
cmp
lods
fimul
stc
cmp
or
inc
xchg
xchg
add
add
or
out
retf
mov
sbb
push
push
xchg
lahf
dec
sar
rol
das
push
bound
pop
dec
int3
clc
dec
inc
dec
dec
fnstsw
push
mov
push
iret
inc
addr16
mov
std
pop
cmp
or
test
sbb
int3
cs
mov
jo
cld
fsub
hlt
sbb
outs
inc
inc
ret
mov
jnp
daa
lods
mov
mov
je
scas
sbb
arpl
imul
cdq
outs
ret
in
into
push
bnd
pop
loop
out
lods
mov
pop
xor
inc
sar
icebp
mov
fisub
std
sub
test
call
jg
push
lock
inc
call
inc
cli
fs
dec
in
fwait
es
int3
jb
pop
repz
xchg
mov
pop
inc
and
je
and
lods
(bad)
repnz
cmp
and
inc
xchg
adc
xor
mov
lods
push
idiv
sub
adc
fdiv
cwde
pop
add
jle
mov
push
ins
fcmovb
sub
movs
sbb
setne
imul
jnp
fs
dec
enter
xchg
adc
jns
mov
add
imul
sub
sar
and
xchg
dec
push
xor
das
mov
hlt
fiadd
and
js
dec
push
jne
sbb
ds
fwait
mov
fldenv
mov
shl
xchg
mov
loopne
dec
lds
dec
dec
popf
xchg
push
sbb
mov
test
rcr
jbe
cdq
vcvtps2dq
adc
push
mov
aas
imul
movs
bound
inc
pop
adc
jl
jno
scas
mov
movs
out
ds
and
xor
cld
dec
mov
push
xor
push
add
xor
sub
pop
or
jp
arpl
mov
cmp
cmps
(bad)
fcomp
lahf
loope
jcxz
cli
push
lods
movs
jae
pop
jecxz
mov
pop
retfw
dec
stc
push
pop
and
fisub
inc
les
inc
dec
js
mov
(bad)
push
outs
int
es
mov
stos
push
mov
push
imul
jg
xchg
inc
lds
inc
mov
xchg
mov
aam
in
fwait
mov
cmp
sbb
and
jl
push
mov
adc
hlt
pushf
(bad)
cmc
add
in
push
das
test
enter
xchg
(bad)
loop
sar
xor
mov
(bad)
popf
dec
jnp
imul
cmp
sbb
sub
bound
fst
push
test
test
sbb
adc
or
xor
adc
sbb
add
outs
adc
push
das
cmps
xchg
xchg
or
sbb
js
into
cs
jns
mov
div
ss
jnp
sub
or
pop
jnp
imul
jo
ret
pop
mov
adc
or
mov
pop
test
push
les
jbe
out
xor
sub
loopne
iret
push
lods
aad
loopne
sbb
add
inc
and
sbb
and
jnp
ja
pop
test
sub
mov
sar
stos
fwait
and
xchg
mov
enter
xchg
inc
xor
jl
inc
jecxz
xor
sub
xor
jge
dec
jne
pop
lods
sub
add
bound
mov
or
dec
or
clc
adc
push
add
into
cmp
push
mov
push
adc
call
push
icebp
add
mov
lock
cdq
sub
test
lds
loope
adc
jg
sub
stos
out
out
fld
fiadd
push
mov
aad
adc
movs
mov
sub
mov
sbb
hlt
jbe
mov
add
js
sub
test
ss
lds
mov
xor
inc
xchg
jecxz
div
sahf
mov
or
pop
jnp
mov
jle
jl
dec
outs
mov
add
mov
or
jae
and
cmp
cld
clc
mov
enter
mov
dec
fnsave
adc
in
popa
xor
movs
mov
das
mov
sbb
and
sub
imul
pop
inc
imul
pop
icebp
cmps
xor
retf
data16
pop
cld
test
xor
enter
icebp
xlat
test
in
jl
fmul
jl
jno
mov
out
mov
push
mov
push
jns
inc
ret
neg
pop
jmp
movs
adc
or
and
mov
dec
aad
ror
outs
mov
add
cmp
sub
daa
mov
call
cmp
adc
bound
inc
cmp
cwde
mov
jge
sub
(bad)
cmp
sahf
mov
stos
or
outs
jbe
stos
and
rcr
ret
popf
ficomp
mov
in
cli
enter
fild
push
(bad)
mov
mov
pop
pusha
daa
pop
sti
mov
rol
or
in
cmps
test
je
inc
jne
push
inc
ret
inc
mov
push
pushf
mov
pop
xor
cmps
add
xchg
xchg
mov
add
cwde
fadd
shl
mov
cmp
cmps
or
sub
xchg
mov
add
sbb
(bad)
xor
mov
stos
dec
sub
je
popa
shl
dec
push
mov
jge
fisttp
push
xor
push
cmp
shl
mov
mov
adc
push
js
mov
jmp
mov
movs
jge
mov
mov
cs
cwde
jo
push
push
pop
pushf
iret
xchg
sahf
adc
inc
lahf
pushf
jmp
fisubr
jbe
sub
or
lods
cmp
test
cmc
sub
cwde
jbe
stos
test
sbb
pop
cmp
int
aaa
jnp
inc
ret
or
sbb
mov
test
cmp
int3
mov
jnp
sub
out
mov
inc
sbb
xchg
inc
into
fwait
mov
mov
popf
mov
movs
mov
mov
jecxz
(bad)
sbb
or
ficomp
xor
sbb
fucomp
repz
lea
and
dec
repnz
call
shr
mov
mov
sub
xor
arpl
loope
test
cmp
sub
mov
mov
ins
mov
aam
fcomp
add
jmp
push
in
xor
into
mov
sub
fwait
cmc
cmp
das
mov
jle
xchg
test
dec
mov
cmc
dec
push
ret
push
cmp
xor
push
mov
je
out
jg
inc
add
mov
aas
xor
sub
cmp
dec
test
push
(bad)
or
xchg
loop
movs
hlt
xor
test
int
sub
lods
pop
adc
push
jmp
out
call
out
push
jecxz
mov
add
addr16
and
jge
jmp
arpl
and
jp
xchg
sub
push
or
push
dec
out
fs
add
inc
stc
add
push
mov
push
pop
loope
sbb
push
push
test
(bad)
xchg
stos
sbb
push
jge
mov
push
pop
ror
int
or
les
lahf
ja
cwde
and
ret
inc
pushw
hlt
in
ins
pop
out
or
mov
(bad)
xchg
dec
in
pop
mov
test
enter
loop
push
xchg
fstp
xor
or
or
out
add
bound
mov
imul
or
imul
fimul
es
add
lock
mov
jecxz
pushf
stc
in
sub
js
jg
or
nop
leave
out
mov
inc
(bad)
jg
mov
mov
sub
sub
cmc
(bad)
inc
pop
push
jmp
test
in
mov
xchg
add
scas
loop
and
inc
(bad)
jns
loop
mov
fst
ja
es
or
int
xor
dec
int
popa
push
mov
push
pop
arpl
fdivr
out
adc
bound
push
lock
ret
add
mov
mov
in
sub
ins
cmp
jae
dec
cli
(bad)
shl
jne
ins
test
std
mov
dec
mov
or
add
push
icebp
jmp
and
push
out
cmp
or
mov
dec
or
pop
lahf
outs
ins
push
movs
xchg
inc
and
cmc
clc
ret
cmp
adc
or
and
sbb
shl
or
ret
test
(bad)
aad
(bad)
push
xchg
dec
sub
iret
popf
adc
pop
mov
and
movs
inc
outs
add
xchg
data16
int
pop
pushf
cwde
out
test
push
test
mov
ins
inc
pop
movs
ja
jns
nop
xchg
xchg
cmp
jmp
enter
cwde
xchg
pusha
stc
stos
xchg
mov
fsubr
mov
clc
mov
stc
jmp
dec
outs
jecxz
adc
(bad)
popa
outs
or
rcr
xchg
xor
push
fisub
mov
pop
push
pop
call
mov
inc
and
dec
dec
jae
pop
clc
adc
cmp
sub
adc
dec
mov
mov
ds
xor
xor
not
xchg
add
push
or
in
rsqrtps
jl
pop
popa
scas
xchg
outs
and
call
mov
cdq
stos
xchg
xor
mov
pop
not
das
loop
sar
fadd
repz
and
or
js
xchg
loop
mov
imul
push
aad
pop
cmp
mov
jge
inc
inc
(bad)
jmp
jmp
jo
lea
int3
imul
ins
jno
retf
or
call
mov
and
je
mov
test
inc
pop
or
data16
fcmovb
int
mov
pop
dec
cmp
in
cdq
mov
xlat
adc
and
loope
movs
add
out
repz
sub
aad
movs
xor
loopne
cmc
push
and
push
outs
push
or
(bad)
cmp
dec
outs
jns
ins
dec
jp
rcl
or
dec
pop
sti
fcom
dec
dec
mov
pusha
movs
movs
ds
fnsetpm(287
mov
leave
out
les
mov
idiv
mov
rcr
cld
and
sbb
std
fsubp
adc
inc
xchg
les
mov
outs
xor
std
pop
jp
ffreep
adc
jae
(bad)
add
push
call
ins
jbe
in
push
shr
xlat
push
les
dec
lahf
les
loope
mov
and
das
xchg
pop
mov
clc
xor
stos
shr
mov
push
enter
add
movs
cmps
call
xchg
jecxz
sbb
mov
cld
call
mov
mov
(bad)
aam
mov
sbb
stos
jns
shl
dec
retf
mov
dec
imul
mov
fmul
sub
cmps
fcomp
(bad)
les
mov
adc
sub
imul
pusha
scas
jo
push
add
test
sub
rcr
gs
jl
popa
out
add
or
cdq
test
int3
adc
in
pop
repnz
leave
jo
scas
fwait
add
sbb
mov
das
adc
in
cld
retf
sbb
call
fist
leave
xchg
fdiv
adc
fld
add
jg
jmp
cdq
pop
and
xchg
popa
pop
inc
fldcw
mov
int
adc
mov
out
adc
ins
and
pushf
clc
std
adc
sar
(bad)
les
mov
ret
es
ret
or
push
hlt
mov
or
sbb
cmp
sub
jecxz
dec
and
pop
mov
sar
(bad)
call
popf
push
and
dec
div
mov
mov
xchg
outs
iret
mov
or
add
inc
sub
stos
pop
sar
and
cmp
lock
dec
adc
cdq
pop
out
fs
mov
jmp
xor
loop
adc
loope
les
xor
popf
je
sub
push
stos
push
inc
add
std
repz
je
out
dec
add
cwde
fxch
jbe
mov
sbb
push
jb
sub
add
jp
into
xchg
cdq
jl
cmps
xchg
call
test
daa
pop
jb
inc
icebp
cs
lds
sbb
fcomp
test
popf
cli
inc
(bad)
fimul
add
shl
and
mov
pop
mov
lds
push
cwde
xchg
js
int3
mov
xchg
xor
cmc
inc
into
push
sub
mov
dec
movs
ins
dec
ficom
and
xchg
(bad)
sub
cs
sub
fdivrp
mov
sbb
jmp
fldenv
and
out
jl
jmp
pop
adc
jnp
(bad)
sbb
adc
inc
call
int3
ret
jns
fucomip
imul
dec
neg
mov
lea
repz
jmp
xchg
rcl
imul
mov
ins
stos
cli
jo
jmp
pop
and
or
or
call
mov
xlat
mov
xor
xchg
cdq
fucomp
jecxz
push
retf
shl
xor
stos
xor
ss
xor
fistp
data16
sbb
jmp
dec
push
cmp
idiv
call
and
sahf
sub
sub
mov
mov
sbb
push
sub
jecxz
pop
sahf
push
arpl
push
cwde
dec
push
into
retf
cdq
xor
xchg
rol
sti
sbb
and
sub
sar
int
int
push
popa
ret
jns
and
ins
daa
dec
jnp
push
faddp
ds
loopne
pop
mul
lds
jle
pop
rcl
push
fcos
jnp
int3
in
rol
sbb
dec
pop
adc
leave
leave
mov
rol
sub
arpl
clc
fstp
fwait
leave
test
imul
dec
hlt
pop
xchg
into
cmp
ror
stos
adc
sub
mov
dec
cdq
ret
out
sbb
or
cmp
sbb
imul
aad
sub
or
mov
and
and
pop
or
xor
dec
add
iret
out
sbb
dec
cmps
cdq
retf
xchg
mov
fbld
mov
aaa
int3
dec
mov
loop
stos
sbb
lods
clc
cmps
in
fadd
dec
push
cmp
cmp
or
sbb
je
sub
dec
xchg
es
test
and
jg
push
pop
ror
cli
repnz
std
test
push
cmps
mov
jbe
loop
jge
mov
popa
xor
add
jno
inc
add
xor
and
retf
cmp
lock
push
or
mov
jae
call
cmp
ins
das
popa
je
movs
aad
cli
push
xor
les
push
xchg
(bad)
pop
dec
xor
fcomp
fldcw
imul
enter
inc
mov
fmul
into
jle
jns
inc
lods
fcomp
adc
cmp
js
adc
pop
jno
cmp
cdq
outs
mov
adc
test
xchg
add
cld
mov
aam
retf
hlt
push
int
icebp
cmps
aam
xchg
pop
and
pop
pop
ret
call
mov
jle
xchg
fs
pop
(bad)
(bad)
fs
mov
ins
aas
leave
lods
lds
outs
and
mov
test
fdiv
push
add
in
sbb
cmp
fistp
mov
nop
fdivrp
in
(bad)
cld
fst
add
pop
adc
lock
in
inc
mov
push
movs
fdivrp
popf
(bad)
xchg
mov
fstp
or
sub
or
inc
(bad)
cmp
xchg
or
push
sbb
in
jns
enter
fld
repnz
xor
cli
inc
cwde
pop
sbb
je
cli
test
icebp
and
pop
pop
push
ins
inc
into
pop
adc
jmp
rcl
cmc
rcl
(bad)
jmp
clc
push
push
cmp
cs
sub
mov
sbb
mov
inc
jno
int
xchg
test
push
push
dec
fwait
inc
and
mov
in
faddp
inc
les
or
inc
fdiv
dec
pusha
mov
clc
dec
jge
mov
js
jbe
xchg
and
(bad)
and
inc
sub
repz
xchg
sub
push
enter
in
into
jle
into
jecxz
sbb
in
dec
or
push
cmps
cvtpi2ps
jge
mov
sub
cmp
dec
xor
mov
pop
adc
push
stc
test
das
or
aad
push
ss
ret
or
(bad)
xchg
cld
mov
fst
pop
ret
std
add
das
in
retf
mov
les
pop
repnz
jnp
xor
pop
jp
xor
add
mov
mov
push
lds
in
inc
mov
out
xor
add
pop
push
jne
sahf
cli
ja
(bad)
test
cli
pop
outs
test
shr
jmp
pop
jecxz
pop
xchg
mov
enter
jmp
outs
xchg
dec
sbb
popa
shl
sbb
adc
xor
mov
cmc
mov
cmp
mov
jns
xchg
pushf
iret
repz
pusha
outs
add
test
mov
pop
mov
xchg
or
js
push
and
cmp
lock
js
inc
push
jo
outs
cdq
gs
pop
call
dec
je
cmp
xchg
adc
icebp
push
cmps
(bad)
sar
sbb
fbld
push
jno
cmp
lock
aaa
js
push
dec
loope
xor
aas
inc
data16
xlat
jnp
outs
push
sar
sbb
mov
cmp
retf
and
add
nop
pop
fdiv
mov
dec
loope
pop
mov
clc
xor
leave
dec
mov
retf
imul
(bad)
sub
out
cwde
lods
inc
xchg
clc
das
daa
rcl
push
sbb
sub
call
push
mov
movs
fbstp
sub
xchg
fstp
dec
sub
ja
in
cmp
pop
shr
pop
jmp
(bad)
jmp
xchg
cli
mov
jb
add
jno
(bad)
jmp
dec
jbe
add
xor
shl
imul
retf
mov
mov
test
mov
mov
sub
in
out
push
adc
dec
aad
sub
ins
pushf
jo
jecxz
call
inc
mov
jl
inc
imul
inc
sbb
cmc
xchg
xchg
sqrtps
pusha
add
xor
jbe
scas
jg
cmp
jb
mov
sbb
sub
jmp
cdq
adc
(bad)
pop
mov
xchg
ficom
adc
test
cwde
jg
mov
pop
cmp
nop
inc
div
ins
test
imul
sbb
cdq
mov
xlat
fnstcw
xchg
clc
cli
mov
test
call
arpl
jl
jns
adc
sbb
lods
or
or
hlt
mov
cmps
in
inc
fsub
adc
lods
and
repnz
ret
xchg
jb
dec
mov
pop
std
shl
mov
aad
test
push
dec
loope
jge
jbe
push
cmp
popf
ins
ret
mov
rol
mov
jns
in
shl
loop
fmulp
pop
jne
mov
(bad)
mov
mov
dec
je
das
adc
push
mov
xor
repnz
mov
sub
movs
(bad)
pop
push
je
adc
hlt
cld
stc
outs
(bad)
mov
mov
aad
mov
mov
add
aam
push
call
movs
or
std
clc
in
adc
push
xchg
(bad)
rcl
mov
sub
jns
mov
cmp
dec
je
push
inc
in
arpl
ins
jne
stos
aaa
fwait
in
xchg
fimul
sar
mov
dec
jmp
dec
nop
or
and
std
movs
xchg
(bad)
ficom
loop
bound
or
aas
inc
mov
add
jae
add
(bad)
(bad)
adc
mov
add
(bad)
ja
and
jo
xlat
pop
inc
pop
add
hlt
or
push
jmp
scas
ja
add
cdq
lods
repnz
(bad)
jb
hlt
stc
jno
jmp
xor
stc
ins
inc
hlt
sub
mov
mov
arpl
retf
out
fdiv
in
xor
jge
je
ror
mov
cmp
inc
call
pop
rol
xchg
jge
test
dec
jg
pop
popf
cmp
rcl
js
and
mov
enter
xchg
mov
cmc
push
fcom
pusha
mov
inc
xchg
push
mov
out
add
fidiv
or
add
movs
cmp
adc
mov
push
in
push
xchg
ror
adc
jb
ficomp
shl
add
shl
icebp
mov
jo
or
push
cmp
jo
mov
dec
mov
fdiv
addr16
inc
enter
mov
popa
inc
pop
fsubr
loop
jl
push
cmp
(bad)
dec
xchg
pop
cmps
inc
jg
cmps
aas
dec
push
ds
push
mov
dec
mov
jb
or
and
fstp
sub
jmp
cwde
push
push
bound
rol
ficomp
fdivr
shl
pop
pop
pop
je
pop
sbb
not
dec
and
xor
cmps
out
cmc
xchg
xchg
fdiv
out
arpl
push
mov
sub
not
inc
adc
in
adc
cmp
sub
add
pop
ds
cmc
les
fdivr
xor
push
dec
test
pop
mov
ss
push
inc
pop
test
pop
and
pop
adc
scas
inc
inc
pop
shr
mov
cmp
xchg
mov
test
mov
ss
adc
jns
xchg
movs
das
stos
retf
adc
mov
push
cmc
cmps
mov
push
push
inc
std
push
dec
aas
aaa
mov
ror
loopne
mov
jge
sti
add
iret
push
inc
je
or
ins
jns
fs
jbe
adc
and
mov
retf
cmc
scas
shl
and
and
out
add
push
jecxz
and
pop
les
push
dec
or
push
daa
jg
mov
test
test
pop
push
imul
inc
jle
adc
(bad)
fcmovb
push
test
loopne
inc
aas
mov
out
and
scas
div
ficom
aad
test
dec
popfw
inc
(bad)
cmp
xchg
xchg
cmc
mov
fnsave
push
cmp
push
fisub
mov
mov
xor
test
out
cmp
fsubr
repz
jp
xchg
jecxz
sbb
sbb
fist
inc
adc
(bad)
loop
adc
cmp
or
jmp
outs
pop
add
jle
inc
mov
push
rcl
fcom
sbb
mov
aad
mov
mov
add
aas
aam
adc
cld
pop
ins
in
and
daa
cmps
sbb
add
fs
aam
outs
loop
jae
xor
mov
mov
aaa
mov
inc
jno
push
jle
dec
add
pop
cmp
xor
add
inc
mov
leave
movs
(bad)
or
mov
mov
and
sub
lock
dec
jle
rcl
push
push
addr16
icebp
sbb
jecxz
stos
test
test
mov
loopne
cmps
jge
inc
sbb
movs
adc
into
scas
scas
push
mov
aam
mov
fdiv
dec
aam
lds
(bad)
lock
sub
mov
xor
icebp
or
pop
xchg
adc
popf
xchg
pushf
pop
pushf
or
imul
xor
loop
dec
mov
push
cs
fisttp
aam
add
(bad)
jl
sbb
ret
pop
ret
repz
ins
mov
fwait
cmp
in
xchg
dec
mov
scas
push
rcr
out
call
cld
arpl
out
nop
addr16
and
stos
jo
dec
imul
ror
jnp
iret
bnd
cmc
ins
int3
xor
out
add
push
ret
dec
std
mov
or
in
or
fldenv
or
bound
int3
xchg
and
sbb
popf
ds
repnz
sar
sbb
pop
fiadd
aas
mov
(bad)
fild
pop
inc
mov
in
or
adc
dec
shl
push
shl
pop
add
out
in
addr16
fsubr
mov
xchg
and
in
aad
xor
adc
or
loopne
dec
or
daa
retf
mov
shl
cld
add
push
dec
(bad)
fadd
(bad)
fbld
stc
(bad)
sti
shl
imul
lods
xchg
jg
loop
dec
lock
cmp
mov
xchg
sbb
idiv
dec
add
add
add
mov
jp
jecxz
and
aam
test
leave
aad
rcr
cmp
mov
inc
retf
add
movs
daa
dec
(bad)
fxch
mov
(bad)
mov
fimul
cmps
mov
lods
and
dec
(bad)
shr
mov
mov
ja
(bad)
into
and
loope
jecxz
pushf
mov
xchg
cwde
scas
stos
mov
scas
leave
aad
push
icebp
and
jmp
test
int
in
mov
pop
pop
cmc
cmc
xor
lock
ja
jb
inc
enter
and
mov
mov
rol
aad
pop
std
(bad)
jnp
xchg
movs
(bad)
push
pop
add
rcl
xchg
cmp
loopne
call
mov
and
cmp
pop
cld
rol
or
sub
arpl
jmp
and
mov
jp
(bad)
imul
fsubrp
lods
ret
repz
aad
add
and
pop
jecxz
(bad)
xchg
sbb
ss
push
jmp
xor
mov
add
call
jp
scas
cmp
retf
xchg
inc
out
cmp
push
push
push
clc
cmp
push
and
aas
hlt
mov
jl
sbb
inc
sar
cmp
xchg
jmp
pop
cmp
xchg
push
rcl
fimul
adc
xor
pop
mov
sub
int
fwait
ins
pop
mov
sbb
ja
mov
mov
sbb
scas
lock
jg
cld
dec
mov
add
ins
and
rcl
fdiv
loop
nop
pop
cld
inc
xor
mov
pop
lock
outs
(bad)
mov
aad
xor
jg
ss
add
sti
stc
outs
pop
pop
mov
pop
(bad)
shl
add
in
pop
jb
pop
das
add
(bad)
movs
add
lods
dec
jo
sbb
adc
loop
nop
es
jb
enter
cmps
rdtsc
inc
arpl
nop
cmp
mov
lds
push
xchg
mov
pop
les
dec
pusha
or
adc
jle
inc
cwde
fdivp
cmp
bound
sbb
mov
inc
jb
pushf
js
sbb
ja
ds
sbb
mov
cmp
inc
clc
repz
gs
mov
xor
cmps
jnp
lds
or
xchg
loope
shl
lods
addr16
sub
push
pop
clc
cmp
pop
rcr
pop
unpcklps
hlt
pop
in
push
pop
aad
ret
pusha
inc
jge
jl
mov
mov
mov
jno
in
test
pop
daa
(bad)
aam
jecxz
sub
mov
sti
mov
inc
xchg
xor
stos
repz
xchg
into
sub
sub
stos
pop
popf
sub
sub
adc
add
sbb
stos
pop
leave
push
jbe
xchg
dec
cmp
dec
(bad)
and
xchg
fs
pop
inc
sub
ret
ja
add
adc
mov
stc
pop
rol
in
adc
fild
push
inc
shr
sub
ja
mov
adc
mov
andnps
pop
push
cwde
adc
push
inc
out
ja
sahf
cdq
nop
mov
shl
cdq
cmp
fist
push
xor
test
mov
mov
mov
jge
mov
jle
enter
xchg
push
pop
clc
out
in
test
push
pop
pop
(bad)
test
cmp
loop
nop
push
inc
pop
int
pop
test
(bad)
in
add
mov
test
dec
mov
and
dec
shr
popf
mov
sbb
inc
icebp
sub
js
xchg
aas
dec
nop
in
dec
lea
lods
mov
out
ror
jle
cmp
xchg
pop
push
sub
sbb
push
sbb
push
jg
cld
pushf
shl
arpl
cmps
outs
(bad)
and
xchg
cmp
je
push
pop
icebp
pop
pop
out
lock
push
adc
cmp
test
pop
cs
mov
hlt
mov
stc
pop
xor
mov
sbb
pop
sub
pop
jb
inc
shr
mov
test
stos
sub
out
in
and
and
xor
sbb
inc
add
adc
retf
cmp
cmp
sub
in
jg
les
sub
fdiv
pop
aaa
mov
xchg
mov
xchg
popf
popf
mov
mov
jbe
xchg
cmp
dec
ret
inc
rol
pusha
inc
cld
clc
and
jo
mov
cld
mov
jne
pop
div
shr
xchg
push
lock
div
imul
sub
push
lds
cmc
push
inc
and
aad
add
jg
sub
push
pop
pop
dec
add
not
dec
dec
jbe
(bad)
int3
fld
adc
popf
mov
push
dec
mov
mov
syscall
pusha
pop
xor
pop
adc
sub
pop
retf
test
lods
push
xor
xor
jle
inc
popf
mov
pop
ret
into
sti
sbb
pop
pcmpeqw
outs
ins
arpl
(bad)
call
out
aam
in
xchg
fsub
inc
xor
lods
cmp
xor
jmp
loopne
adc
add
jmp
int3
scas
add
pop
jne
icebp
(bad)
dec
add
pop
lea
ffree
dec
lds
inc
push
fcomp
or
mov
sbb
adc
shr
lea
and
dec
or
aaa
add
jge
out
push
retf
mov
dec
out
repz
cmp
xor
enter
jmp
add
fadd
nop
mov
rcr
xchg
pop
mov
shl
(bad)
paddq
rcl
mov
jmp
adc
jp
xchg
out
shl
(bad)
push
ret
xor
or
mov
shr
in
pop
jns
xchg
add
lods
lahf
jg
mov
(bad)
popf
out
adc
aas
mov
sub
in
(bad)
jnp
dec
xlat
xchg
inc
and
jmp
ret
push
stc
dec
js
mov
mov
fs
cmp
out
xchg
sbb
sub
push
out
cld
gs
push
dec
fmul
xchg
mov
loopne
jmp
add
repz
cmps
add
dec
inc
les
push
sub
and
fisttp
xor
inc
retf
and
mov
jmp
sbb
scas
jl
ret
mov
pop
sub
or
mov
daa
cmp
lea
repz
cs
int3
jnp
test
repz
adc
jl
push
add
jo
lds
idiv
ficomp
mov
fyl2xp1
jmp
xor
fidivr
adc
inc
dec
test
leave
pop
or
ins
or
fs
std
or
jg
ret
push
xchg
cli
add
cmp
cmp
adc
repz
loope
into
aaa
cmp
adc
mov
mov
fcomp
xchg
dec
adc
mov
sbb
fisub
jp
pusha
jle
sub
pop
fdiv
jmp
cmp
gs
ins
and
and
pop
adc
ja
test
fisubr
push
hlt
sbb
fmul
out
cmp
call
rcl
push
lock
mov
push
test
jmp
fwait
test
pop
sar
add
xchg
pop
aas
in
mov
lea
pushf
inc
xchg
and
sahf
inc
sub
pop
push
aad
lods
in
das
(bad)
call
xchg
rcr
pop
(bad)
xor
je
scas
scas
shr
add
not
lods
mov
es
xor
inc
pop
adc
cld
adc
jae
outs
lds
arpl
jecxz
or
pop
xor
pop
jmp
xchg
sbb
mov
sub
and
cmp
push
dec
fild
(bad)
xlat
cdq
cmp
sbb
inc
fdivr
push
jmp
adc
retf
fbld
adc
and
aad
stc
fisub
cmc
int
fldcw
jg
pop
lods
add
fs
jmp
mov
loope
mov
jmp
xor
and
sub
sub
ins
sar
cmp
outs
push
sahf
(bad)
fwait
push
scas
xchg
test
rcl
cmp
or
cmc
jae
addr16
push
mov
cmp
mov
mov
sbb
push
cmp
and
inc
movs
pushf
or
lods
in
stos
jmp
addr16
fdivr
test
bound
mov
into
aaa
push
enter
mov
sbb
loop
into
pop
aas
push
ret
push
sbb
loopne
cmp
mov
(bad)
mov
pop
and
and
inc
pop
out
xchg
lock
jb
fs
xchg
push
or
mov
iret
idiv
(bad)
mov
movs
pop
sub
pop
add
xor
mov
lods
add
jmp
icebp
mov
sub
ins
dec
mov
add
pusha
and
fmul
pop
dec
sbb
sub
test
sub
sub
mov
mov
leave
and
jge
pop
int3
xchg
mov
repz
jnp
push
(bad)
or
cmc
xor
pop
xchg
pushf
in
add
into
jecxz
push
xor
es
call
movs
xchg
push
int
test
aam
jae
dec
mov
push
cmc
cmc
pop
sbb
addr16
cmp
mov
lods
lock
add
cmps
pop
xlat
icebp
les
lods
cmp
xchg
sbb
dec
pop
lock
mov
mov
xor
and
jnp
or
mov
xchg
xchg
in
(bad)
adc
stos
or
bndstx
push
pop
mov
and
sub
sub
inc
icebp
popa
push
dec
in
dec
dec
retf
shl
jecxz
popf
mov
ror
push
add
and
imul
outs
add
ret
ret
xor
mov
test
ins
cmp
loopne
sub
movq
ret
sbb
xchg
xchg
xor
push
pop
fadd
arpl
icebp
inc
pop
retf
and
dec
sbb
jecxz
cld
jmp
enterw
(bad)
jecxz
std
jns
pop
cmps
dec
inc
sbb
push
jl
pusha
dec
jbe
or
sbb
or
sbb
sub
cmc
xor
and
cmp
enter
cmp
pop
dec
imul
xchg
out
and
add
dec
rol
sbb
mov
fisub
ret
push
outs
adc
mov
mov
sub
jne
mov
rcl
nop
dec
dec
or
nop
sub
nop
push
cmps
scas
dec
lods
mov
inc
push
sub
rol
add
xchg
(bad)
fcom
jae
or
inc
ds
movs
add
xor
(bad)
xor
mov
add
pusha
ja
xor
fdivr
ror
adc
cwde
out
inc
cld
test
pop
rcl
repz
cmp
push
and
sahf
stos
call
lock
ret
and
xchg
mov
xchg
mov
loope
pop
xchg
into
mov
xchg
cmc
push
jl
dec
in
or
inc
in
inc
cld
pop
push
icebp
cmp
nop
or
jne
adc
or
mov
sbb
inc
mov
push
mov
add
test
and
push
and
pop
push
pop
repz
push
dec
in
xchg
movs
adc
jmp
dec
loop
(bad)
and
(bad)
ret
lock
push
clc
outs
pop
mov
lahf
adc
rcl
mov
sub
and
icebp
frstor
cmc
test
xor
in
lods
jp
in
pop
int
lock
cld
sub
(bad)
xchg
mov
sub
mov
cmp
mov
xor
mov
xchg
popa
in
mov
ins
pop
ins
add
rol
stc
in
sub
scas
sti
shr
mov
mov
fcmovne
pop
clc
scas
cmp
leave
movs
pop
jl
in
push
pop
sbb
jecxz
inc
fstp
or
push
jl
nop
pop
adc
inc
jg
lods
jmp
sbb
cmp
lea
xor
(bad)
and
in
mov
xchg
(bad)
loop
xchg
test
inc
lahf
jle
push
pop
movs
lea
xchg
sbb
(bad)
dec
push
push
cmp
rcl
test
pop
add
dec
mov
lds
lock
push
stc
fild
push
xchg
xchg
sbb
(bad)
push
pop
ins
inc
pop
lods
outs
bound
adc
mov
into
loop
pop
sbb
cmp
lahf
aad
sbb
dec
mov
add
adc
inc
rol
(bad)
jg
add
pmovmskb
adc
mov
dec
dec
xor
daa
push
out
cmps
jb
pop
aas
push
aaa
xchg
sbb
sbb
jns
std
push
ss
jmp
test
inc
and
pop
stc
dec
pop
sbb
sub
inc
mov
fcom
jnp
mov
pop
cmps
mov
adc
ffreep
pop
xchg
pop
sbb
push
js
adc
mov
mov
adc
or
xor
xchg
pop
dec
push
inc
gs
dec
repz
mov
(bad)
mov
popf
outs
xchg
inc
jp
inc
lds
mov
cld
sbb
xchg
sti
or
xor
push
stos
outs
rcl
pop
in
and
jge
mov
add
and
retf
gs
mov
push
cld
mov
mov
push
mov
imul
xchg
mov
mov
push
lock
mov
ror
cmp
mov
adc
mov
pop
cmps
jno
pop
into
mov
sub
out
rol
jae
popa
inc
mov
and
push
xchg
add
jmp
inc
inc
in
das
jo
cmp
pop
jge
clc
int3
outs
dec
sub
xor
in
dec
retf
rcl
push
test
xchg
std
sti
imul
bound
adc
sub
in
inc
adc
pop
inc
add
(bad)
pop
es
lock
adc
ja
xor
xchg
iret
jns
fstp
retf
lahf
imul
push
fisttp
fisub
jg
es
mov
test
push
inc
ds
ins
imul
sbb
call
dec
ret
or
(bad)
(bad)
pop
inc
xor
push
xor
seta
adc
jae
mov
(bad)
or
and
and
cmp
dec
pop
bound
push
pop
push
ficom
cmp
ret
jp
sub
and
cmp
aad
fwait
aad
jecxz
cli
jne
rol
mov
and
or
(bad)
dec
out
hlt
(bad)
lock
arpl
cmp
mov
xor
loop
sti
mov
loop
add
dec
xchg
xor
mov
push
mov
(bad)
movs
div
sar
bound
xchg
lods
adc
mov
movs
jne
jno
push
cmp
mov
cmc
adc
sbb
data16
add
mov
jo
or
sub
mov
enter
dec
stc
sub
jp
jge
dec
sub
xor
cmps
pop
xchg
aas
cdq
enter
push
dec
jmp
sbb
mov
(bad)
cdq
dec
aas
mov
and
mov
inc
and
add
aas
(bad)
idiv
je
or
mov
aas
aad
push
sub
test
and
mov
push
inc
sub
pop
xor
movs
out
out
bound
mov
fidiv
xchg
daa
fbld
mov
cmp
or
add
push
and
sar
mov
add
dec
outs
cmp
mov
dec
pop
mov
mov
xor
out
in
adc
cmc
mov
cld
mov
hlt
cwde
arpl
adc
test
pop
mov
cmps
sbb
sti
mov
retf
dec
test
add
dec
sbb
mul
dec
push
and
test
lods
and
cmp
int
sti
and
js
inc
mov
and
inc
push
push
call
cdq
add
cmp
and
cmp
fistp
and
xor
push
lods
sbb
adc
xchg
nop
test
inc
add
gs
and
add
popa
sahf
jns
sub
sub
cmp
cmc
in
rcr
fild
cmp
mov
sub
gs
add
int
retf
mov
push
push
stos
clc
mov
dec
addr16
add
jo
ins
imul
aam
iret
lods
fwait
add
mov
and
punpcklwd
into
hlt
sub
mov
cmp
ret
jl
mov
pop
and
push
jg
sub
ret
lods
adc
and
add
pushf
mov
jae
xor
jle
adc
in
lods
es
jns
in
(bad)
mov
inc
mov
and
ror
dec
jmp
mov
test
ss
and
popf
das
ret
icebp
jecxz
lahf
ins
dec
mov
push
lock
mov
jle
bound
stos
inc
fwait
xor
(bad)
jne
(bad)
mov
push
jns
inc
add
(bad)
fwait
jmp
leave
xor
jmp
call
add
call
and
into
std
test
jnp
jb
add
push
add
adc
test
fs
les
popa
je
iret
aad
jg
mov
xor
retf
fcom
mov
icebp
out
popa
fwait
neg
or
pop
xor
pop
lods
clc
pushf
dec
cmps
cmp
fiadd
cmc
scas
sbb
cli
cmc
out
xlat
movs
add
xor
cmp
(bad)
out
loopne
xor
sbb
jl
test
lahf
mov
push
mov
aas
out
mul
int
jb
bound
js
aad
das
adc
xor
out
rol
mov
inc
add
dec
cmp
jecxz
dec
mov
sbb
push
int
aam
push
adc
data16
pop
push
repz
je
pop
jecxz
sbb
xor
jbe
jnp
dec
jle
or
std
jl
dec
dec
js
scas
pop
push
sbb
leave
popa
popa
popa
out
repz
mov
test
pop
sub
sbb
xor
pop
sbb
mov
mov
jl
xor
int
push
fadd
cmp
pop
add
xchg
icebp
push
xchg
in
lds
mov
data16
loop
ins
mov
xchg
cmp
push
jno
push
retf
cmp
fild
jmp
call
and
add
push
add
xchg
pop
cld
inc
arpl
imul
inc
mov
mov
jl
outs
movs
add
or
dec
out
jecxz
inc
push
lock
fst
dec
lods
repz
xchg
pop
push
(bad)
pop
sbb
pop
mov
add
mov
jae
xchg
jge
pop
call
and
adc
iret
cmp
pop
add
cld
jb
xor
mov
xchg
int3
push
(bad)
and
mov
add
shl
daa
cmps
add
pop
sub
inc
sti
stc
jg
jp
mov
(bad)
enter
xor
mov
addr16
push
pushf
xor
pop
cdq
arpl
retf
dec
in
mov
jecxz
movs
jmp
out
retf
retf
jnp
and
push
neg
int3
push
push
ficomp
jmp
sbb
xchg
mov
loope
pop
cmps
dec
jne
js
sbb
aas
jo
loope
ss
fs
ja
mov
pop
jno
sar
in
sub
aas
mov
cmp
add
ret
or
mov
dec
jbe
mov
call
push
cmp
xor
pop
or
mov
or
or
add
ins
or
jns
test
(bad)
ror
push
je
dec
sub
(bad)
adc
ins
cmc
cmp
out
or
scas
sub
(bad)
and
inc
inc
inc
dec
jmp
rcl
int
js
ja
fsubr
mov
jo
xor
or
adc
sti
inc
clc
ds
xor
sbb
sbb
jbe
cmp
imul
mov
add
jmp
adc
test
sub
xor
cmc
push
push
inc
mov
aas
inc
jle
imul
add
add
and
leave
push
lods
je
mov
hlt
sub
jp
das
cld
mov
cli
dec
dec
ins
sbb
push
in
ins
or
sbb
cmp
jae
mov
add
sub
inc
cmp
stos
rcl
xchg
stc
mov
mov
arpl
cmc
mov
pushf
xchg
icebp
inc
cmp
cld
push
aas
sti
lds
cmp
push
sbb
mov
stc
pop
lods
test
sbb
jl
xor
iret
or
cli
fdivr
jg
jecxz
ret
push
loop
xchg
cmp
pop
or
push
int
or
inc
xor
mov
or
test
stos
pop
and
or
fs
push
add
es
lea
push
scas
inc
(bad)
(bad)
pop
jmp
xchg
jbe
lahf
aaa
or
popa
jae
adc
out
out
pop
ds
mov
lea
pop
push
pop
jmp
cmp
add
clc
nop
retf
idiv
sub
mov
add
pop
lods
mov
fs
ss
jo
pop
sbb
jecxz
or
xor
repnz
(bad)
adc
push
jae
and
mov
test
test
push
jns
leave
cmc
xchg
jo
test
iret
cdq
mov
repnz
push
xchg
dec
ret
xor
mov
inc
imul
pop
dec
gs
out
push
nop
sub
(bad)
sbb
(bad)
imul
push
ficom
cmp
ss
mov
fisubr
aad
int3
retf
jmp
(bad)
pop
(bad)
jge
xchg
inc
sti
and
shl
adc
fidiv
xor
cmovs
bound
loop
or
mov
push
pop
mov
sub
cmp
lea
cmp
cs
fist
jg
jbe
mov
loop
jecxz
add
adc
adc
xlat
xchg
in
test
cmp
mov
mov
cmps
cmp
inc
fisubr
or
sub
dec
loope
cwde
(bad)
sub
adc
in
lock
sub
mov
push
adc
lods
dec
jbe
(bad)
ss
dec
add
sub
cmps
imul
pushf
iret
call
pop
push
inc
inc
cmp
aas
adc
and
cmc
rcl
mov
mov
push
test
lods
push
sub
jnp
mov
lahf
inc
xchg
fst
mov
pop
jmp
or
jns
lock
rcr
jae
mov
inc
xchg
xchg
jg
or
mov
mov
pop
dec
jl
fst
mov
cmp
xlat
gs
pop
outs
xchg
or
inc
jne
lds
lock
xor
sahf
and
icebp
sub
in
inc
add
mov
pop
pop
sbb
or
add
ins
mov
xchg
xchg
sbb
xchg
ins
push
jmp
pop
call
sbb
jns
mov
inc
xchg
xchg
adc
dec
xchg
loope
mov
mov
popf
or
and
(bad)
push
or
adc
mov
jnp
push
shr
lock
ret
adc
xchg
imul
mov
xchg
add
xchg
shl
fild
(bad)
(bad)
sbb
fwait
push
inc
lds
jg
test
pusha
addr16
push
xor
arpl
popa
xor
add
idiv
xor
mov
sbb
pop
mov
add
mov
jb
loop
add
jnp
pop
jae
idiv
cmp
ins
xchg
jmp
mov
xrelease
and
push
mov
add
fwait
cli
mov
retf
arpl
imul
stos
cmps
or
in
push
aas
arpl
inc
and
and
add
dec
mov
jmp
dec
sbb
mov
cmps
fstp
push
imul
dec
shr
mov
push
setnp
sbb
test
sbb
enter
mov
fcomp
stc
stc
test
push
inc
retf
imul
loop
retf
mov
mov
mov
and
popf
fcmovnu
mov
jbe
jle
add
jae
pushf
movs
nop
jmp
fistp
popa
(bad)
int
test
enter
push
add
int3
sub
jbe
repz
ds
outs
retf
adc
adc
pop
inc
adc
jae
push
adc
cmp
add
or
popf
mov
popf
sbb
pop
vpandn
sbb
call
and
xlat
ja
mov
or
xchg
lea
xor
fidiv
cld
mov
(bad)
rcl
jo
mov
jl
pusha
lds
sahf
xor
sbb
pusha
retf
add
es
push
cmp
push
mov
add
mov
shr
pop
icebp
jnp
repnz
mov
push
push
fisttp
sub
div
mov
pop
jns
pop
data16
call
pop
fwait
jnp
lods
(bad)
xor
sbb
imul
jne
loope
inc
push
jg
je
and
sti
outs
xlat
retf
inc
dec
jno
xchg
push
add
stos
das
push
xchg
mov
mov
popf
mov
jg
jno
rcl
dec
push
mov
ret
mov
lock
cmc
(bad)
xchg
movs
mov
sbb
xor
and
push
int3
dec
out
(bad)
jmp
pop
mov
clc
dec
out
clc
xor
pop
iret
rcl
das
fdiv
stos
jb
jo
add
nop
sbb
xchg
js
enter
xchg
mov
xor
jae
xchg
fcomp
sub
aam
mov
out
mov
repnz
cmp
xchg
test
cmp
imul
xchg
push
jg
cmp
test
ficom
call
std
mov
mov
mov
imul
in
ret
mov
jmp
jle
xor
lahf
jl
or
scas
stc
mov
pop
popf
retf
mov
gs
scas
int3
out
into
gs
sbb
in
xor
sub
imul
vpaddsb
inc
mov
mov
inc
hlt
shl
call
mov
out
xor
stos
cld
xchg
xchg
inc
out
mov
push
jmp
mov
xchg
mov
jno
ret
and
mov
add
pop
fmul
icebp
pop
jae
jp
push
out
repnz
mov
pop
dec
xchg
mov
mov
sar
imul
fwait
mov
movs
arpl
cmps
imul
add
or
not
scas
loopne
mov
jae
clc
sbb
sbb
into
(bad)
mov
sbb
xchg
jo
iret
ja
jns
out
inc
fnstcw
repz
mov
jecxz
mov
lds
fs
fdivr
add
mov
cli
je
stos
ficom
gs
mov
enter
sub
add
jnp
std
add
leave
jo
pusha
iret
pusha
lea
daa
cmc
push
mov
sbb
and
test
xchg
or
ds
lahf
(bad)
je
inc
push
por
mov
push
jns
shr
push
or
jno
mov
xor
in
pop
jmp
inc
and
(bad)
mov
cmp
inc
dec
sbb
xor
push
mov
out
clc
outs
sbb
ss
jbe
mov
xor
mov
xchg
push
mov
cmc
mov
push
das
outs
jle
hlt
xlat
push
daa
bound
retf
les
pop
imul
pop
inc
stc
jmp
cmp
iret
scas
mov
cmps
xlat
(bad)
mov
add
jb
inc
mov
push
cmp
cmc
fst
mov
or
cmc
mov
jbe
stc
push
mov
jg
imul
xor
repnz
inc
dec
enter
mov
clc
cmp
in
repnz
pop
xlat
inc
mov
movs
add
pop
lahf
dec
adc
cmp
stc
push
jno
jle
stos
sti
sbb
repnz
adc
aam
adc
loope
dec
scas
sub
movs
sar
arpl
movs
xchg
fistp
push
mov
cmps
jne
and
out
ret
pop
push
push
daa
imul
stc
dec
movs
scas
push
mov
mov
enter
jns
mov
push
add
xchg
mov
jecxz
dec
dec
cwde
add
jl
pop
jecxz
cmp
cmp
or
(bad)
(bad)
cmp
inc
or
loop
mov
push
pop
test
sbb
sub
and
jecxz
lods
push
mov
xchg
jno
mov
pop
or
shl
fld
shl
lock
sbb
mov
xor
in
mov
pop
adc
add
lock
aas
cdq
push
jns
push
fsub
add
xlat
push
sti
push
xor
ds
std
aam
and
add
xchg
addr16
fwait
not
in
push
std
sti
mov
xchg
imul
jle
xchg
mov
jg
inc
dec
and
xchg
sub
mov
test
sbb
cmp
sub
xchg
mov
js
adc
sub
test
inc
jg
pop
fwait
xchg
add
dec
xchg
inc
jmp
pop
fadd
fisub
lahf
nop
popa
nop
xchg
pop
dec
cmp
push
dec
lods
sub
mov
fst
xor
add
inc
xchg
cmp
mov
pop
in
hlt
jmp
sub
adc
inc
jmp
sahf
add
sbb
or
inc
arpl
adc
mov
sbb
xor
jge
aad
hlt
push
or
mov
out
adc
enter
movs
xchg
inc
dec
mov
cmc
mov
push
ds
(bad)
jge
adc
out
stos
push
lods
xor
daa
mov
mov
or
loope
and
jno
xlat
adc
das
push
int
mov
adc
push
cmps
(bad)
shl
mov
jnp
cmp
aaa
jge
mov
cmc
ss
jp
or
(bad)
retf
(bad)
cmp
xor
rol
frstpm(287
pop
loopne
in
jge
nop
mov
into
dec
shl
jno
add
gs
pop
(bad)
cs
ds
sub
dec
addr16
int
mov
outs
je
mov
je
mov
ins
or
popf
jae
adc
fcmovnb
sbb
cld
fidivr
cmps
and
dec
ret
not
jne
loopne
jns
loopne
fwait
popf
popf
sub
push
cmp
dec
jg
and
mov
int
mov
test
ds
pop
fstp
jne
popa
les
mov
jmp
pcmpgtd
ret
test
xor
push
out
fldcw
push
lds
mov
in
movs
jo
(bad)
int3
and
movs
cld
sub
ret
imul
add
nop
mov
and
mov
stos
jge
mov
(bad)
nop
mov
and
or
jae
call
(bad)
adc
pop
xchg
and
int
or
jnp
bound
and
es
hlt
add
push
mov
jmp
cmp
jo
push
lahf
stc
inc
(bad)
sar
jle
ret
inc
outs
dec
ss
push
mov
and
ror
fmul
mov
mov
rol
sbb
mov
push
dec
fidiv
pop
sbb
popa
or
cmc
mov
int3
in
xor
push
mov
out
inc
test
xchg
or
pusha
idiv
mov
loopne
fist
imul
popf
stos
in
cdq
jg
adc
pushf
dec
mov
js
cmc
in
lods
in
pop
lahf
test
in
jns
add
daa
in
xor
shl
pshufw
add
ds
outs
and
rcl
mov
test
lods
lds
xlat
lods
pop
iret
in
cmp
pop
xor
sub
xor
cmp
(bad)
cli
shl
sahf
push
xchg
fsub
jg
dec
or
cmp
into
popa
mov
jp
mov
dec
(bad)
sbb
adc
fcomip
pop
(bad)
into
jle
add
shr
out
add
sahf
ss
pop
je
mov
(bad)
xchg
retf
out
aad
lea
push
jne
mov
cmps
sub
add
loope
add
push
mul
or
push
xor
mov
aaa
push
rcl
add
sub
sub
or
xchg
(bad)
mov
or
fistp
fnstsw
fs
jle
cmp
ins
(bad)
and
sbb
sub
inc
lahf
xchg
push
cdq
movs
out
xchg
xchg
mov
sar
ret
or
and
mov
pop
imul
loop
sbb
sahf
icebp
pop
push
scas
sub
jmp
adc
xor
fdiv
dec
mov
dec
or
fxch
inc
or
dec
out
cli
xlat
jp
mov
dec
into
fwait
movs
mov
inc
xor
xor
push
push
mov
xor
xchg
popf
dec
and
loop
stc
nop
imul
cwde
jmp
aaa
mov
imul
jns
(bad)
jae
les
push
pop
mov
sub
mov
or
dec
popa
jo
xchg
retf
push
push
jb
push
into
fs
cmp
sar
and
jmp
iret
or
gs
xlat
retf
jmp
out
push
test
cmp
pop
xlat
adc
test
ficomp
lds
jne
fdivr
cmps
inc
sub
adc
cmps
retf
xor
pop
xchg
xor
(bad)
sbb
xchg
or
inc
xor
cmp
out
sub
add
mov
imul
push
(bad)
test
inc
mov
scas
xchg
mov
loope
sbb
mov
icebp
mov
and
icebp
pop
add
call
pop
scas
test
scas
adc
lods
daa
adc
scas
mov
fldenv
cmp
shl
add
mov
jp
mov
sbb
jns
fisub
push
fwait
outs
sbb
mov
inc
out
movs
push
sahf
in
mov
jno
pop
mov
je
out
cmps
jnp
xchg
iret
enter
sub
mov
jno
js
sub
add
retf
jg
adc
mov
jl
inc
adc
lea
nop
hlt
out
pop
nop
and
int3
mov
pop
jp
lea
push
sub
jecxz
add
outs
test
stos
repz
stos
test
xchg
cmp
ret
jmp
mov
push
pop
xchg
mov
inc
loopne
jge
inc
or
hlt
fwait
jnp
gs
lahf
xchg
fstp
fmul
sbb
or
pusha
dec
dec
push
xchg
push
mov
fwait
retf
adc
stc
sub
mov
(bad)
push
jo
in
adc
xchg
shr
xchg
cmp
push
push
pop
xchg
std
push
ret
mov
push
jge
and
lods
jo
test
fcmove
sbb
lea
pop
mov
ds
cmp
out
xchg
stos
cmp
mov
shr
cmps
mov
lea
in
test
cdq
jae
dec
xchg
out
inc
dec
aam
call
iret
nop
test
cmc
push
pop
add
dec
inc
test
mov
mov
xchg
repz
popa
pop
xor
pop
pushf
clc
lods
jo
push
sbb
fwait
push
mov
daa
ds
xchg
sbb
or
sub
pop
lahf
ins
call
sub
(bad)
pop
mov
inc
sbb
retf
arpl
xchg
ret
sbb
gs
xor
mov
call
cmp
stc
xor
imul
sub
mov
mov
or
data16
dec
push
movs
shl
iret
lahf
sub
dec
and
popa
jmp
mov
cmp
jno
movs
adc
push
xor
cmps
add
and
jge
pop
pand
pop
addr16
mov
out
cmp
mov
mov
sbb
scas
nop
pop
into
lahf
test
pusha
pop
cmps
sbb
cmp
and
je
sub
dec
into
jae
outs
adc
jmp
adc
jp
(bad)
adc
in
test
mov
retf
out
in
gs
mov
push
xchg
test
(bad)
cli
sub
push
shr
push
cmp
and
mov
and
mov
push
shl
imul
xor
pop
push
test
or
inc
repnz
fld
mov
adc
or
js
jg
and
imul
cmp
sub
sbb
sub
lds
pop
das
mov
sub
dec
xor
in
sub
mov
fcomp
and
jmp
loopne
ds
loopne
pop
(bad)
dec
gs
or
je
or
repz
cli
and
test
fdiv
ret
mov
outs
je
jl
sub
test
mov
out
cmp
mov
and
(bad)
iret
aaa
dec
jne
int
pop
add
push
push
jmp
cmps
xor
fistp
or
mov
pop
cmp
arpl
dec
cdq
add
add
xor
pop
mov
mov
add
push
or
pusha
mov
mov
inc
inc
sub
dec
fisub
movs
jecxz
rcl
in
shl
mov
lahf
mov
gs
dec
xor
xor
sbb
sbb
mov
jmp
pusha
push
sbb
stos
inc
and
mov
test
pop
fsubr
xor
aaa
and
push
addr16
cmp
mov
inc
mov
mov
inc
xchg
cmp
pop
mov
xor
test
cmp
jnp
sub
xchg
mov
clc
mov
cmp
inc
and
adc
and
cmp
in
(bad)
icebp
in
stos
xchg
int
add
or
pusha
and
ret
mov
pop
add
mov
call
rol
push
dec
push
adc
sub
jg
jp
jne
pop
pop
fwait
into
xor
push
push
jne
pop
cmp
gs
js
cmps
test
inc
mov
xchg
dec
mov
mov
mov
add
xor
sub
add
push
dec
dec
aaa
cmp
or
into
cmp
enter
cmp
dec
cmp
scas
adc
in
cmp
fldenv
sbb
xchg
lods
jae
xor
shl
push
nop
lock
int3
hlt
mov
push
(bad)
out
mov
cmp
cli
retf
(bad)
xchg
mov
pop
mov
jo
call
shl
sti
ja
push
ret
aam
das
cwde
lds
fdiv
xchg
cmp
ret
movs
ret
jnp
xor
mul
shl
push
cmp
sbb
sahf
out
cmc
mov
inc
retf
test
add
pusha
xor
lds
push
scas
mov
retf
fwait
rcr
test
cmp
popf
lods
leave
or
mov
(bad)
xchg
stc
adc
add
lahf
xor
fcomp
dec
mov
in
mov
adc
mov
ins
leave
lods
fs
pop
loopne
push
sbb
pop
cs
jp
call
cmps
(bad)
jp
add
rcr
dec
lock
cmp
sbb
test
les
or
rol
inc
pushf
push
add
loop
push
shl
sub
imul
dec
and
popf
jne
neg
jo
add
(bad)
nop
stos
xchg
push
sbb
retf
dec
outs
adc
sbb
and
dec
aas
mov
pop
rcl
out
lods
in
popf
(bad)
dec
mov
jp
xor
hlt
pop
addr16
pop
lods
mov
(bad)
fnstcw
in
jbe
lahf
dec
sti
out
test
add
mov
xchg
mov
mov
repz
adc
jle
pop
icebp
ror
mov
jmp
xlat
pop
cmc
out
stos
in
mov
lea
sub
pop
bound
sti
jnp
add
xor
sti
or
out
inc
push
dec
stos
pusha
jno
retf
push
xor
sbb
xor
add
ins
xor
push
mov
(bad)
mov
jmp
fxch
(bad)
outs
push
mov
lds
jmp
sbb
xor
retf
xchg
xor
inc
mov
pusha
scas
push
scas
or
fiadd
and
jbe
pop
scas
push
(bad)
out
xlat
mov
jmp
and
pop
jnp
pop
inc
fst
cdq
cmc
sbb
stos
out
es
in
scas
pop
shl
cmp
add
mov
out
enter
div
mov
iret
add
inc
movs
mov
movs
sub
inc
jmp
mov
and
push
in
and
ins
jo
ss
dec
jg
retf
sub
or
call
in
cmp
adc
hlt
fistp
xchg
pop
xchg
fnstsw
punpckldq
or
or
out
pop
jg
bound
adc
dec
and
xor
fcom
lods
xor
dec
fst
into
sub
pop
int3
arpl
sub
dec
add
mov
jge
ja
inc
mov
mov
daa
cmps
fst
icebp
pop
mov
out
jg
adc
mov
hlt
mov
movs
ja
stc
loopne
pop
adc
ds
call
cli
inc
daa
std
arpl
push
add
fcmovne
call
add
push
mov
add
jl
mov
les
mov
xor
mov
in
pusha
les
scas
ja
xchg
loopne
sti
jmp
push
adc
paddusw
pop
adc
repnz
es
adc
cmp
mov
gs
popa
mov
xor
in
push
xor
inc
popf
imul
rcr
adc
jmp
pop
dec
mov
add
sti
jo
push
movs
out
ror
js
movs
jmp
jl
das
(bad)
mov
pop
cmp
pop
ret
sbb
(bad)
xlat
cmps
jns
xchg
fadd
xchg
mov
jg
pop
and
es
mov
mov
inc
jmp
loope
or
fwait
cmp
call
aas
aaa
xor
mov
xlat
ins
cwde
mov
sub
jmp
xchg
pushf
nop
sbb
adc
jnp
sub
dec
pushf
sub
mov
ror
std
stc
push
test
jnp
pop
cli
add
nop
pusha
scas
pop
mov
and
mov
mov
cld
std
mov
out
jmp
sbb
jbe
xor
cmp
lods
out
fsub
sbb
inc
cmp
cmp
pop
ss
pop
ror
push
cmp
outs
cs
das
or
jns
or
int3
popa
shl
xchg
lods
icebp
sbb
add
test
dec
and
ss
xchg
mov
push
ja
lods
and
mov
jmp
push
fs
pop
gs
adc
stc
pop
call
xchg
mov
jp
sbb
xor
ret
movs
dec
xor
adc
cmp
rcr
xchg
lea
dec
sti
movs
cmc
mov
inc
mov
dec
jbe
add
or
popf
lods
or
test
fs
pminub
add
dec
out
adc
xchg
mov
cmc
dec
fsub
cmp
out
sub
imul
fwait
js
sbb
mov
add
(bad)
push
in
loope
jg
inc
cs
add
jb
mov
xor
ret
add
movs
loope
mov
xchg
jne
pop
ror
icebp
popf
push
call
test
hlt
call
push
movs
mov
test
fadd
xor
sahf
lea
mov
add
std
aad
sub
adc
xor
mov
data16
cdq
mov
adc
imul
sub
pop
std
pop
jae
fstp
(bad)
(bad)
lahf
sbb
xchg
add
popf
inc
pop
or
inc
and
sub
push
in
xlat
jg
and
cwde
cmp
pop
inc
mov
mov
jae
mov
xchg
cdq
xor
xchg
idiv
lds
leave
ror
pop
jns
xchg
jle
iret
cmp
ud1
mov
(bad)
test
pop
neg
loop
sub
adc
xor
and
fstp
fimul
dec
inc
mov
loopne
arpl
xor
mov
test
pop
sbb
mov
mov
jle
jmp
scas
rcr
or
jns
mov
inc
pop
call
mov
mov
lods
loope
ret
lods
push
or
shl
push
sbb
aaa
jge
jmp
and
pop
test
and
aad
in
add
dec
cmc
inc
push
cmp
xchg
sahf
ds
imul
dec
imul
xlat
fild
ja
jb
sahf
jo
jecxz
mov
add
test
push
xor
sbb
fwait
hlt
ret
scas
push
es
xor
int3
mov
push
lea
jnp
xor
cs
ret
movs
je
fistp
lds
loopne
sbb
(bad)
outs
jp
mov
fisttp
cmc
inc
mov
lods
pop
cmp
in
ins
jnp
call
pusha
fnsave
mov
pop
out
jnp
ffreep
neg
push
enter
inc
sbb
dec
pop
mov
inc
sbb
lea
movs
push
xchg
fldenv
mov
jae
jecxz
out
cmps
or
out
lea
addr16
add
dec
cmp
call
dec
mov
dec
bound
cmp
out
out
leave
pop
xor
mov
cmp
mov
(bad)
imul
scas
adc
mov
dec
mov
movs
cli
xor
popa
xchg
out
int3
mov
loop
jbe
ja
jle
imul
push
imul
jae
jbe
xor
cs
call
jno
sub
sbb
(bad)
dec
adc
into
fist
lods
mov
(bad)
int
cmp
jp
jl
inc
fild
xor
jbe
pop
inc
popf
rcl
out
call
adc
nop
and
repz
in
fld
xor
or
mov
adc
jo
stos
push
mov
cld
out
das
or
jg
out
dec
adc
push
adc
mov
mov
sbb
and
or
cli
dec
gs
dec
cmc
mov
aam
mov
dec
mov
xchg
imul
dec
push
out
in
test
(bad)
int3
cmp
cmp
and
dec
pop
fld
retf
(bad)
imul
std
mov
mov
sbb
shr
enter
fcomp
enter
or
sbb
popa
lahf
jp
cmp
inc
hlt
push
test
nop
in
movs
and
nop
rcr
adc
push
add
sub
fwait
push
fcomi
adc
dec
mov
xor
mov
(bad)
aam
sbb
push
in
shr
dec
dec
sub
fadd
mov
and
div
jg
xchg
cmps
je
or
aas
dec
sbb
gs
xor
push
imul
stos
rcr
pop
sbb
daa
lods
cmp
inc
xchg
inc
daa
test
test
push
cdq
push
call
sbb
ror
sbb
inc
(bad)
add
fst
inc
and
push
mov
fidiv
fbld
in
push
(bad)
jle
inc
mov
stc
ret
inc
es
jnp
lahf
call
and
xor
jb
out
xor
pop
test
leave
stos
inc
dec
xchg
jecxz
fcomp
sbb
mov
add
add
add
xor
or
xor
pop
cmps
mov
pop
mov
or
push
mov
mov
mov
addr16
comiss
(bad)
test
mov
scas
cmp
and
pop
mov
jbe
ret
add
cmp
push
loopne
mov
xor
add
dec
mov
lods
mov
pop
add
jmp
jmp
and
mov
push
jg
mov
xchg
and
(bad)
cmp
jo
ror
fidiv
jp
pop
sub
in
mov
out
lds
out
jmp
cmp
mov
stc
mov
icebp
cld
mov
outs
sub
sbb
xor
shl
ficomp
repz
xor
mov
jb
ins
test
xchg
jnp
cmps
icebp
mov
sar
jae
xlat
popf
fwait
mov
test
push
dec
cmp
inc
xchg
mov
xchg
adc
sbb
inc
push
mov
xchg
jle
mov
bnd
(bad)
xchg
push
xchg
out
or
or
loope
gs
push
adc
push
dec
jg
xor
sub
aas
adc
and
and
call
push
inc
mov
xchg
fsub
aam
(bad)
outs
aaa
inc
push
fdivr
xchg
int3
out
(bad)
or
pushf
idiv
adc
cwde
add
adc
addps
les
pop
mov
jo
pusha
cdq
daa
sti
outs
mov
(bad)
mov
or
mov
enter
repnz
cmovb
ret
scas
sti
or
or
xor
lahf
cmp
sub
pop
jbe
nop
cmps
xchg
jmp
aas
push
mov
sti
aas
jo
xchg
inc
sub
or
and
mov
mov
xor
push
iret
cmp
ins
mov
outs
and
jmp
int
sti
mov
xchg
iret
popa
in
sbb
mov
sti
(bad)
inc
into
mov
inc
in
dec
jecxz
shl
push
or
das
jmp
mov
adc
and
jbe
sbb
sub
jnp
jno
mov
pushf
push
xor
mov
pop
dec
scas
xchg
(bad)
aaa
(bad)
push
imul
xchg
fld
and
pop
adc
mov
popa
add
push
jbe
or
xchg
dec
push
test
das
mov
jb
das
push
sbb
xor
xlat
jmp
add
fiadd
jnp
mov
adc
loopne
mov
test
outs
dec
call
sbb
xchg
mov
mov
js
jg
out
pop
xchg
(bad)
jbe
test
jns
mov
xchg
cdq
add
shr
retf
xchg
mov
pop
mov
add
add
enter
rcl
ss
sbb
mov
outs
shl
fldcw
add
fcomp
inc
dec
pop
sbb
out
cmps
or
imul
loopne
bound
sbb
push
mov
add
mov
xor
push
mov
ins
in
dec
mov
jno
aad
shr
hlt
aam
jp
fs
jp
xor
sub
(bad)
cdq
mov
pop
stos
and
cmp
mov
mov
iret
mov
mov
cmp
add
or
push
inc
outs
mov
popa
scas
mov
inc
add
scas
push
adc
inc
sbb
je
enter
add
mov
mov
aaa
inc
mov
pop
push
sbb
and
xlat
xchg
lds
in
adc
ret
imul
jge
or
fst
sbb
xchg
mov
xchg
cmp
mov
add
jl
ds
je
add
fisubr
adc
lods
pop
adc
jge
jo
je
inc
mov
xchg
mov
and
js
lods
pop
sub
popf
mov
in
fs
mov
lods
cmp
ins
rol
pushf
push
daa
dec
out
sbb
or
test
dec
sbb
push
sub
xchg
mov
mov
add
int
and
mov
xor
fist
jo
jno
sub
retf
ret
call
loopne
xor
mov
clc
or
push
cwde
pop
movs
popa
ins
xchg
xor
xor
xor
sahf
(bad)
or
mov
mov
xor
dec
sbb
push
fwait
pushf
or
xchg
cdq
jnp
call
(bad)
in
aas
enter
mov
icebp
or
add
loop
jmp
mov
inc
xchg
sti
dec
or
adc
lea
fild
cli
pand
pop
sahf
adc
ins
mov
out
xchg
sti
test
adc
or
test
fnstenv
xor
in
je
push
loop
mov
sub
fwait
or
fidiv
and
shr
imul
mov
xchg
mov
fwait
retf
scas
les
mov
dec
stos
cmp
mov
or
hlt
stos
xchg
shr
lahf
cdq
and
pop
and
pop
std
fnstenv
xchg
jmp
push
sbb
push
retf
xchg
enter
mov
pop
inc
fwait
adc
sub
mov
dec
jmp
sub
shl
int3
aas
add
push
retf
dec
add
jp
jne
xor
xchg
aam
dec
retf
bound
movs
inc
cmp
ficom
inc
dec
pusha
pop
cld
inc
push
in
out
fld
fcmovne
add
inc
cmp
(bad)
pop
push
and
pop
xor
push
cmp
pop
es
aas
sbb
inc
rcr
imul
cmps
and
loopne
cli
es
push
neg
cmp
and
dec
xor
mov
(bad)
mov
add
(bad)
push
xchg
and
outs
data16
lock
fucomip
(bad)
jg
mov
mov
mov
or
inc
xlat
lods
loope
cmps
leave
das
mov
dec
inc
dec
lods
les
(bad)
jns
call
xor
jae
out
cmp
jecxz
sbb
pushf
push
sbb
shl
dec
pop
scas
rcr
xor
pushf
jno
push
jno
sti
and
fidivr
xlat
or
shr
mov
aas
mov
cmp
push
fwait
inc
xchg
inc
scas
test
ds
int
test
out
(bad)
mov
xor
mov
or
cmp
sbb
or
inc
popf
pushf
daa
mov
retf
das
sbb
sbb
push
inc
dec
stc
cmps
xchg
inc
test
and
inc
nop
xchg
inc
cmps
cmp
xor
movs
mov
mov
adc
and
mov
jbe
rcl
mov
aam
enter
jno
or
push
adc
fs
sub
ds
and
(bad)
nop
bound
xor
xchg
pinsrw
adc
sub
xor
pop
mov
adc
pop
retf
fld
xchg
push
cmp
test
inc
dec
mov
dec
mov
pop
jo
sub
dec
or
adc
and
cs
and
into
addr16
(bad)
push
lea
inc
lea
sub
push
push
add
aad
cmp
and
shl
mov
test
ror
add
jmp
test
xchg
mov
or
jmp
mov
sar
push
fild
movs
movs
fisttp
fdivr
mov
sub
push
pop
ins
pop
push
clc
paddd
aad
jo
sbb
rcr
dec
add
(bad)
sbb
inc
jbe
jno
push
dec
mov
mov
stc
or
(bad)
loopne
outs
xor
jge
pop
jecxz
rol
mov
pop
(bad)
adc
fisttp
dec
imul
mov
jl
fsub
(bad)
ds
sub
mov
fcom
loopne
mov
sub
scas
mov
rcl
test
sub
push
push
imul
push
sbb
sbb
sahf
inc
or
lods
das
fiadd
push
jl
pushf
mul
aas
and
add
arpl
xor
inc
shr
adc
test
adc
push
pop
jl
pop
int
es
in
dec
inc
mov
pop
add
xor
ins
into
scas
pop
es
push
in
push
or
xchg
mov
adc
jp
mov
sti
jbe
ins
jmp
call
sub
cs
mov
in
pop
shr
popf
fisubr
jl
lods
inc
jne
jl
loope
stos
mov
mov
cmc
cmp
and
in
push
cmp
sub
jbe
std
xlat
inc
into
or
into
in
popa
mov
stos
sbb
jo
adc
(bad)
push
(bad)
cdq
push
lods
cmps
xchg
pop
ror
call
sub
test
leave
and
std
mov
iret
mov
mov
scas
dec
inc
(bad)
adc
icebp
and
stc
stos
call
int
scas
popa
addr16
dec
dec
add
and
jae
ficom
sahf
cmp
or
stos
into
cli
sti
dec
and
push
mov
rcl
push
cs
xchg
stc
and
mov
enter
test
in
add
push
(bad)
stc
pusha
ret
mov
sbb
sub
pop
int
out
mov
push
loopne
jge
ins
(bad)
movs
ja
xlat
imul
pop
iret
ror
popa
push
lods
push
test
sub
inc
ds
pusha
xor
jns
das
rcl
xor
aam
jae
cs
retf
loop
lea
cmp
mov
adc
mov
pop
das
push
popf
shr
push
mov
xchg
call
data16
sub
add
nop
mov
test
inc
pop
dec
icebp
retf
cmp
sbb
sbb
rcr
add
ja
jl
nop
jnp
mov
sti
int3
mov
nop
outs
sar
js
retf
xor
cmp
sahf
pop
arpl
push
sbb
loopne
add
and
sbb
add
adc
pop
test
pop
enter
nop
mov
and
pop
(bad)
cmp
xchg
add
aas
jmp
hlt
sar
(bad)
and
(bad)
or
sub
inc
pop
xor
imul
loop
adc
in
call
out
in
rcr
jns
mov
add
nop
jmp
(bad)
movs
jb
stos
xchg
ds
clc
js
repnz
mov
pop
cmps
rcr
cmp
cmp
pop
sbb
imul
dec
retf
jp
out
(bad)
retf
mov
push
sbb
jno
or
aam
push
fsub
aaa
dec
and
mov
dec
es
mov
mov
fsub
inc
dec
or
pop
inc
sub
imul
(bad)
ins
mov
rcl
sbb
ins
sbb
imul
cli
jp
xchg
adc
or
push
lods
dec
xchg
popa
xor
clc
fcmovne
and
mov
loope
jo
or
loopne
call
sti
popa
push
pop
(bad)
aad
sar
mov
stos
mov
cmp
leave
retf
imul
mov
jo
std
jmp
cmps
lods
xchg
call
add
hlt
cmp
jge
repz
ja
and
adc
test
adc
push
gs
out
ss
cmc
inc
outs
add
hlt
mov
in
jo
push
jp
cmp
push
leave
cmp
dec
inc
lock
adc
push
cmc
add
popa
adc
outs
out
inc
dec
jne
xchg
mov
loopne
stos
inc
js
add
in
ret
xchg
out
int3
or
dec
(bad)
pop
shl
jb
xor
lods
cmp
push
out
and
cmps
fidivr
stc
mov
inc
retf
pop
inc
add
mov
retf
adc
xchg
in
or
test
cmps
mov
daa
aas
jmp
and
push
mov
pop
lahf
loope
lds
dec
hlt
inc
push
jl
les
dec
cmc
fwait
pop
adc
fxam
fbld
fwait
mov
adc
pushf
out
cli
call
pop
cmp
jmp
mov
dec
repnz
add
xchg
add
push
into
pusha
jge
pop
in
pop
lock
and
sbb
push
add
mov
lods
outs
dec
ret
lea
or
or
adc
pop
sub
adc
rcr
dec
push
xchg
ret
(bad)
dec
js
repnz
es
shl
xchg
pop
fiadd
adc
mov
jno
into
push
mov
std
or
idiv
ret
je
ret
cld
lds
dec
sahf
enter
shl
jnp
out
mov
add
fisubr
je
mov
ror
mov
inc
cdq
stos
mov
int
jg
jg
adc
push
(bad)
pop
(bad)
loop
test
pop
out
scas
jbe
sbb
xor
cmp
mov
iret
fs
push
xchg
outs
mov
mov
lods
sbb
or
ins
xchg
lock
sub
in
inc
xchg
sbb
fsubr
and
mov
in
hlt
inc
jb
(bad)
in
int3
adc
je
mov
dec
mov
icebp
inc
xor
outs
jmp
fldcw
lods
mov
nop
adc
jecxz
shl
xor
mov
adc
movs
dec
fcmovb
pop
jnp
push
cs
cmp
mov
aam
xchg
ltr
add
enter
push
mov
mov
nop
into
mov
and
push
dec
ins
sar
or
gs
movs
jae
inc
jl
cli
sub
stc
(bad)
xor
cmp
xlat
repz
mov
mov
sbb
jmp
ror
fcomp
cmp
cld
ins
pusha
cmp
idiv
sbb
jb
sub
std
(bad)
fmul
sub
mov
pop
lock
test
rcr
shl
push
cmp
scas
das
repnz
mov
loop
fdivr
push
out
cmps
and
bnd
imul
xor
dec
enter
xor
and
in
js
add
mov
xchg
out
mov
loopne
repz
int3
pop
adc
cmovno
gs
out
test
cmp
or
jle
mov
imul
mov
iret
sahf
ret
retf
ja
xchg
dec
cld
sti
repz
das
outs
stos
push
mov
or
jmp
iret
(bad)
cwde
(bad)
in
push
adc
jecxz
mov
pop
mul
and
xchg
push
jg
xor
adc
jbe
push
pop
push
and
pushf
pop
test
int3
push
mov
cmp
(bad)
outs
imul
enter
sbb
xchg
stc
ret
scas
(bad)
pop
dec
push
lods
mov
xchg
gs
pop
mov
or
sbb
sub
jecxz
jp
shl
enter
js
test
je
jg
ins
and
cmp
lahf
adc
sbb
cs
in
pop
ja
ss
fwait
in
jl
cmp
movs
push
add
shl
leave
nop
in
xor
mov
repnz
push
mov
pop
push
and
or
bound
pushf
push
js
sbb
dec
push
xor
jne
and
or
ja
pop
sub
mov
inc
scas
jne
xchg
popf
jmp
out
fdiv
lods
das
cld
call
in
fiadd
mov
add
ret
pushf
popa
inc
stos
lock
lods
(bad)
popa
jo
push
pop
mov
pop
movnti
cmp
xor
fcom
cmc
pop
sbb
jae
push
cli
sub
xor
adc
sub
inc
sbb
mov
out
push
setno
cmc
or
imul
and
xchg
or
sbb
rcl
sti
cmp
jmp
or
pusha
mov
or
add
or
sub
pop
test
mov
cmp
and
mov
in
xor
mov
xor
std
mov
outs
cmp
ret
int3
retf
scas
sbb
and
sar
div
add
or
jl
adc
pop
jecxz
jbe
enter
mov
cmp
frstor
aas
sar
(bad)
jnp
(bad)
nop
scas
add
ret
in
mov
pop
push
and
sub
rcl
mov
sub
mov
jb
inc
icebp
inc
push
retf
push
lfs
aad
fcmove
stc
cmp
sub
stc
push
adc
popa
bound
mov
dec
sbb
mov
jns
icebp
ret
data16
pushf
mov
dec
xlat
stos
pop
mov
lea
mov
xchg
iret
and
outs
test
lock
lods
pushf
hlt
sub
push
or
aad
iret
ficomp
mov
test
aad
not
inc
nop
int
mov
in
mov
icebp
sbb
lock
mov
jnp
lods
hlt
outs
fiadd
add
cs
mov
cmp
mov
retf
sub
mov
cli
(bad)
setl
div
lds
icebp
sbb
ffree
cmc
mov
add
repz
fucomi
mov
pop
div
enter
sub
mov
shl
mov
movs
xor
cmp
pop
test
std
sub
enter
int3
push
rcr
out
scas
ficomp
rol
cmps
loop
xchg
repnz
pop
data16
mov
inc
pop
mov
mov
jle
jecxz
xchg
test
pop
jl
enter
mov
retf
imul
mov
cmp
or
and
je
int
adc
jl
push
shl
fild
das
pop
sub
inc
mov
in
fimul
push
(bad)
sub
pop
int3
loopne
push
cmp
mov
xchg
sub
sbb
out
lods
nop
lods
and
jo
mov
(bad)
aam
adc
jp
push
mov
cmp
mov
shl
push
cmps
mov
je
(bad)
xor
imul
jne
cmp
mov
ror
inc
les
push
les
adc
cmc
sahf
mov
imul
movs
pop
adc
loopne
sub
xor
je
or
pop
and
and
js
dec
stos
mov
jno
mov
mov
daa
das
or
clc
pop
popa
(bad)
in
inc
sub
inc
inc
test
mov
cmps
mov
xchg
sub
stos
adc
js
(bad)
pop
xlat
add
mov
mov
mov
jecxz
retf
cld
int3
xchg
rol
push
or
clc
aaa
loopne
push
pop
mov
sbb
imul
adc
mov
ins
repz
pop
inc
pop
lock
mov
cmp
sub
push
sahf
push
leave
fcomp
mov
shl
retf
gs
fstp
inc
jmp
mov
in
rcr
fidiv
add
in
xor
sbb
mov
jmp
adc
jmp
jmp
pop
cli
sahf
movs
popa
jne
cmp
mov
or
mov
add
data16
iret
mov
stos
add
lea
jb
(bad)
imul
jae
mov
mov
ins
loopne
adc
dec
gs
jmp
push
xchg
xor
aaa
inc
aad
stos
int3
cmc
cmp
aam
xchg
mov
out
adc
in
(bad)
in
pop
sbb
movs
cmp
in
sahf
sub
js
fld
adc
jmp
xchg
push
mov
aam
jae
lahf
fiadd
push
jns
pushf
jb
bound
fmul
neg
pop
mov
and
xor
addr16
aam
dec
jbe
sar
mov
xorps
add
push
and
pop
mov
xchg
mov
xor
mov
cmp
or
cdq
or
sahf
lahf
arpl
imul
popf
mov
fisubr
cmp
inc
dec
jge
jno
hlt
dec
shl
xchg
sub
je
stos
pop
dec
mov
or
(bad)
lahf
mov
and
and
aaa
dec
pusha
leave
dec
push
xabort
push
xor
mov
test
icebp
enter
xor
repz
inc
inc
je
xchg
sub
int3
rol
push
push
cmp
or
dec
push
jmp
fst
test
or
sbb
cmp
iret
outs
movs
adc
jne
iret
jle
and
frstor
(bad)
inc
pop
sbb
pop
imul
inc
(bad)
in
mov
movs
scas
cmp
mov
repz
outs
daa
(bad)
movq
mov
mov
or
adc
mov
pop
pusha
sbb
scas
push
mov
lea
xchg
fucom
gs
pusha
call
xchg
adc
movs
mov
mov
add
jo
xchg
adc
stos
push
or
inc
xor
jp
dec
xchg
repnz
xor
bound
add
mov
in
or
data16
ret
das
sbb
adc
loope
cmc
push
pushf
jo
pop
(bad)
push
loop
cld
xchg
and
loope
sbb
dec
dec
add
xor
out
lea
push
dec
out
mov
int3
push
adc
push
aas
dec
add
adc
add
and
ret
ins
pop
out
mov
ret
aas
movs
outs
cmc
iret
adc
nop
data16
lds
dec
daa
dec
dec
repz
jle
stos
rcl
add
(bad)
add
imul
nop
jecxz
cmps
adc
xor
jecxz
mov
push
xor
inc
inc
not
scas
loopne
xchg
cmp
cmps
and
sbb
div
sahf
push
xchg
sti
mov
xchg
mov
or
push
mov
js
or
out
loop
(bad)
ror
jmp
pushf
push
or
jp
jl
int
shl
add
out
mov
aaa
pop
dec
int
add
or
push
sgdtd
mov
mov
push
inc
mov
mov
neg
jecxz
sbb
sub
sub
push
(bad)
jle
fisttp
push
dec
fild
cwde
or
xchg
or
jl
mov
out
jmp
in
ins
mov
enter
and
and
push
repz
add
pop
push
sub
cmp
popa
and
add
aam
dec
sahf
jbe
(bad)
pop
pushf
mov
inc
daa
ins
xchg
or
dec
(bad)
out
inc
nop
add
add
fnstcw
sub
pop
(bad)
cmp
push
push
mov
adc
add
leave
test
lock
and
shl
adc
sbb
in
pop
mov
ror
or
mov
dec
cmc
inc
leave
rcl
loopne
mov
pushf
adc
push
clc
inc
int3
loopne
lods
or
xchg
test
rol
mov
mov
xlat
clc
mov
inc
jno
sub
repz
jmp
pop
pop
jecxz
std
mov
mov
push
ins
imul
adc
mov
xor
into
sbb
ins
or
or
xchg
dec
mov
fsub
pop
rcl
das
inc
mov
or
add
pop
push
arpl
push
ror
sbb
popf
sub
test
mov
mov
push
scas
dec
add
xchg
div
js
fst
jmp
mov
lea
or
inc
pop
cmps
ret
add
xchg
fdivr
scas
sub
fdivr
into
cmp
enter
popa
jmp
jl
mov
lods
adc
cmp
repnz
mov
mov
pop
or
sub
xor
push
mov
ins
movs
ss
rcr
aaa
sbb
inc
push
cmp
in
cli
fmul
inc
mov
inc
js
cdq
iret
or
cmps
inc
push
in
fdiv
push
add
jecxz
dec
or
retf
nop
cli
(bad)
out
pop
popa
sahf
or
test
daa
ret
jg
mov
repnz
in
pusha
lock
xor
sub
xchg
sbb
mov
dec
xchg
into
nop
and
ret
and
xchg
(bad)
xor
and
shl
loop
pop
loopne
les
mov
push
imul
and
es
mul
mov
xchg
sbb
inc
test
in
add
int3
fndisi(8087
cmps
shl
pop
push
cmp
test
mov
cmps
cs
jl
mov
and
jle
movs
mov
xlat
jno
ss
adc
push
jmp
pop
std
retf
or
imul
ret
xchg
inc
mov
bound
pusha
lods
or
aaa
retf
cli
jb
xor
add
cmp
push
shr
sub
adc
rcpps
arpl
pop
sbb
or
cmp
ficom
jp
(bad)
mov
retf
cmc
jp
dec
mov
pop
fs
mov
cmp
or
or
test
and
fwait
out
shr
and
pop
retf
retf
pop
lahf
pop
jns
arpl
push
mov
mov
ds
push
out
sub
ja
ds
add
in
jge
imul
pop
mov
xlat
sar
jmp
pop
jno
(bad)
pop
sbb
add
jno
test
nop
call
adc
sub
sub
or
gs
xchg
in
fwait
loopne
ins
inc
(bad)
or
out
shl
add
push
dec
retf
jle
push
jg
aaa
inc
sahf
dec
xor
iret
inc
das
sbb
xor
aas
xchg
adc
mov
adc
imul
xchg
in
(bad)
popf
arpl
loop
push
sbb
mov
xlat
pop
inc
(bad)
shr
jb
sub
les
add
loop
popa
jnp
lahf
jmp
popa
out
ja
cdq
addr16
ss
adc
mov
movs
jns
jg
or
jge
dec
ss
cld
mov
mov
into
out
ror
repnz
test
jl
push
imul
add
shl
mov
repz
pusha
(bad)
mov
xchg
stos
add
mov
cwde
or
xor
push
jmp
mov
sbb
fwait
add
inc
les
imul
repnz
cmp
mov
ds
mov
das
push
add
or
adc
clc
dec
mov
mov
test
popf
(bad)
lods
dec
and
mov
out
cs
int3
xor
dec
and
fidivr
clc
and
(bad)
fisttp
xchg
mov
and
aam
std
jne
leave
or
and
pop
sbb
cwde
in
jnp
fisttp
and
std
xor
or
(bad)
inc
shl
lods
dec
ja
je
sub
cmp
rol
mov
add
and
add
repz
call
ret
outs
mov
pusha
dec
clc
mov
loop
popf
dec
push
pop
and
leave
dec
push
adc
sub
jmp
adc
out
jge
push
(bad)
mov
mov
out
jg
enter
sbb
adc
das
push
pop
mov
out
inc
or
xor
mov
or
xor
add
jno
xchg
or
sbb
jmp
pop
xchg
xor
cmp
repz
sub
add
loopne
cdq
or
xchg
mov
inc
call
sbb
cmc
push
jns
arpl
add
mov
retf
dec
inc
ins
and
imul
lahf
call
es
push
push
mov
jl
in
lds
clc
push
hlt
les
lds
mov
ret
jge
jno
and
(bad)
inc
cmp
add
fs
push
jp
pusha
inc
mov
mov
mov
mov
inc
scas
repnz
xor
outs
ss
inc
mov
sbb
loopne
fistp
lods
retf
dec
(bad)
rcr
dec
mov
push
pop
lods
jnp
imul
scas
(bad)
xor
test
mov
dec
pop
popa
mov
inc
cmp
mov
or
popa
inc
mov
retf
(bad)
mov
push
xor
mov
call
shr
jmp
pop
rol
inc
sub
(bad)
jl
pop
sahf
in
dec
repz
and
es
lahf
popf
inc
cli
add
pusha
jae
sub
xor
push
and
pop
clc
mov
popa
mov
push
cmc
mov
sbb
push
lds
adc
xor
hlt
sahf
dec
and
lods
pop
out
and
retf
mov
icebp
adc
aaa
cli
jg
cmps
dec
ins
les
dec
and
sbb
pusha
dec
cmps
inc
jg
xlat
retf
aam
repz
mov
mov
mov
adc
mov
or
xor
mov
sbb
push
mov
cdq
xchg
iret
in
int
jnp
test
sub
les
data16
scas
repnz
push
cwde
xor
jne
out
push
in
std
dec
push
fimul
sbb
daa
inc
ds
loope
hlt
mov
in
add
push
out
jl
std
enter
push
jnp
retf
mov
jl
push
test
sbb
in
cmps
out
leave
pusha
adc
jbe
mov
jge
stos
add
jmp
mov
mov
int
jecxz
sub
xchg
scas
sbb
jo
(bad)
cmps
movs
jo
cmp
dec
cmp
mov
inc
fwait
nop
dec
push
cmc
xchg
sbb
mov
xchg
push
fmul
mov
rol
mov
iret
jno
adc
push
ret
xchg
xchg
jecxz
pop
aam
popa
add
xor
outs
cmp
push
popf
xor
popf
shr
lahf
test
in
pop
mov
xor
cmp
outs
cmp
jne
cmp
or
push
sub
test
mov
pushf
jecxz
lds
jo
shl
sub
fisubr
cmp
movs
test
sti
ret
sbb
cdq
jbe
or
adc
jmp
fcom
(bad)
pop
jnp
ror
in
inc
outs
push
xor
mov
cmp
adc
out
push
pop
(bad)
jno
sub
or
push
jns
out
push
xchg
ins
and
fsubr
pop
lods
dec
cmps
dec
(bad)
std
(bad)
push
pushf
mov
jb
xor
retf
ins
call
push
arpl
xchg
push
(bad)
sbb
icebp
add
fst
sub
fisttp
test
aaa
call
int
mov
in
mov
and
inc
cmp
inc
iret
dec
mov
jle
sub
sub
dec
jae
or
sbb
arpl
sub
out
add
pop
and
pop
cmp
xchg
mov
push
sub
stos
and
or
sar
mov
mov
dec
popa
cmp
pop
in
fidiv
push
push
sbb
ins
inc
pusha
jg
stos
jmp
inc
push
mov
or
or
out
and
ins
test
pop
std
sub
pusha
retf
push
ja
xchg
mov
mov
cmp
add
xchg
lock
shl
aam
leave
loope
push
inc
push
xchg
xor
cmps
clc
bswap
mov
lods
push
pop
xchg
(bad)
adc
aam
ins
(bad)
pop
fidivr
call
cmp
sub
sbb
cmc
ss
dec
or
imul
lods
jae
adc
int3
sahf
xchg
push
lea
mov
lea
mov
mov
xchg
dec
es
outs
nop
rol
in
jns
(bad)
es
enter
mov
stos
aam
gs
test
and
lahf
mov
ins
jns
mov
inc
inc
push
xor
dec
in
jmp
jmp
aas
in
add
and
cmp
push
jns
xor
push
push
sar
sar
inc
(bad)
call
lea
dec
jg
sbb
arpl
dec
sbb
jno
out
in
mov
cdq
sahf
lods
xor
pop
mov
imul
repz
push
(bad)
cmp
cli
ret
ror
test
out
dec
cmp
cmp
mov
mov
mov
mov
out
xchg
enter
fdiv
adc
sub
mov
fcmovb
or
mov
fbld
and
sub
dec
jo
mov
test
fistp
aas
loope
imul
dec
mov
imul
stc
pop
xchg
push
clc
xor
add
dec
rcl
add
loop
cli
in
ins
lods
cmp
jo
fld
mov
call
push
or
mov
xchg
sub
mov
and
cmps
sbb
cmp
in
in
(bad)
pop
pop
mov
or
and
repz
into
stc
(bad)
jo
bound
pop
adc
inc
inc
aam
jmp
test
dec
rcr
jg
(bad)
dec
add
test
stc
hlt
or
dec
fbld
cmp
dec
sub
das
shl
das
retf
pop
jns
pop
stos
jmp
xchg
jg
pop
inc
test
sbb
adc
jge
push
es
add
(bad)
cmp
sub
out
inc
je
out
ror
xor
hlt
scas
sub
inc
nop
test
aad
fsubr
adc
push
mov
jge
jns
add
jl
adc
pop
cld
inc
jne
enterw
pop
clc
mov
adc
inc
jbe
jle
les
mov
dec
cmc
push
fs
test
lods
fwait
das
lock
adc
jne
into
shl
cmp
xor
cs
ficomp
gs
test
ret
mov
out
scas
in
leave
push
dec
test
scas
pusha
in
xadd
push
outs
fwait
inc
push
and
cli
pushf
pop
cli
push
add
pop
ficomp
test
cli
stos
mov
icebp
sbb
add
mov
jmp
jno
pop
jle
jg
dec
retf
js
loopne
cmc
jae
mov
sbb
sub
scas
out
inc
inc
inc
xchg
xchg
aaa
xchg
fs
lods
xor
sub
shl
push
xchg
add
mov
test
cmp
jnp
and
sar
jmp
sub
adc
jmp
jno
sahf
sub
pop
sbb
int3
mov
push
and
(bad)
pop
sub
rol
inc
jns
lods
jge
gs
jg
stos
push
cmc
xchg
mov
and
dec
popa
lds
mov
stc
cwde
mov
lock
sub
lahf
scas
inc
nop
imul
loope
push
push
or
xchg
sbb
popa
pop
fmul
xchg
inc
sbb
pop
xor
in
cld
xor
or
jbe
fadd
mov
addr16
mov
push
retf
outs
daa
sub
mov
xchg
lods
pop
sbb
dec
push
int3
dec
mov
push
cmp
cmp
(bad)
push
in
ficomp
ret
scas
scas
push
ret
jle
ins
int3
loopne
or
xchg
or
imul
cmp
sbb
inc
push
mov
jae
adc
mov
popf
movs
mov
popf
into
ds
sbb
inc
loopne
xchg
sub
mov
xchg
fsubr
mov
movs
adc
(bad)
xchg
or
jns
pushf
cmp
add
xor
aam
xchg
neg
out
add
fdivr
push
dec
dec
jo
hlt
(bad)
out
inc
movs
out
inc
hlt
sub
shl
cmp
xor
pop
inc
mov
enter
sub
fdivr
enter
xor
pop
(bad)
sub
cmp
clc
jp
sti
push
xchg
cli
jae
out
pushf
cmps
push
sti
push
cmp
jmp
push
arpl
jbe
jg
jge
repz
int3
jbe
pusha
push
aas
sub
enter
(bad)
(bad)
rol
(bad)
es
aam
cmc
loopne
or
lods
out
jle
test
ja
mov
into
popf
mov
dec
(bad)
pop
cmp
jge
inc
mov
inc
jmp
(bad)
cld
or
rcr
pop
fld
inc
aaa
pushf
popf
mov
cmp
mov
adc
nop
jbe
jns
fsubr
pushf
sbb
mov
fld
daa
js
gs
pop
jmp
outs
cs
fstp
(bad)
mov
pop
or
es
mov
cmp
and
jecxz
ret
xchg
jp
in
xchg
ds
ret
mov
in
sub
imul
cmp
mov
call
mov
test
inc
std
stos
sbb
(bad)
sti
mov
pusha
mov
push
adc
xchg
les
repz
jmp
fimul
jg
adc
mov
cmps
arpl
iret
cmps
sub
sbb
cwde
push
popa
out
out
mov
xchg
adc
cmps
xchg
jmp
cmp
inc
mov
mov
xchg
xor
jmp
stc
out
leave
mov
loope
push
in
pushf
movs
jne
xchg
fcomp
and
pop
push
in
cmp
enter
imul
adc
jle
int3
call
enter
cdq
ficomp
sbb
loop
push
jbe
bound
mov
sbb
pop
jno
jns
mov
imul
adc
inc
cmp
push
dec
pop
loop
push
xor
cmp
add
fs
or
fwait
call
cdq
xchg
and
fidiv
pop
mov
jge
ds
pushf
into
icebp
and
std
mov
(bad)
in
jg
xchg
xchg
push
pop
ror
leave
add
int
adc
jns
mov
pop
mov
rcl
xchg
and
mov
mov
xor
int
bound
je
mov
cmp
push
add
not
out
ret
fimul
loope
mov
mov
mov
push
sbb
xchg
xchg
in
js
xchg
cmps
pop
inc
jl
(bad)
bound
mov
sahf
out
(bad)
mov
jmp
loopne
nop
cmp
fs
or
jecxz
xor
mov
imul
and
adc
xchg
popa
nop
xchg
adc
test
inc
pushf
sub
bound
mov
sahf
push
or
push
pop
mov
lea
dec
adc
add
pop
sub
sbb
and
adc
xchg
in
(bad)
fcom
lods
popa
ins
in
out
fst
mov
js
pop
stos
cmp
jmp
in
inc
sbb
ja
and
(bad)
loop
cmp
lea
mov
mov
and
nop
(bad)
stos
loop
xor
jnp
or
xchg
call
aaa
ret
call
and
int
sar
xor
jg
xchg
adc
js
loope
scas
repnz
and
xchg
out
sub
in
mov
dec
das
jmp
dec
inc
clc
ins
push
fdiv
addr16
push
dec
repnz
jecxz
and
repz
outs
sub
xchg
inc
xchg
push
add
mov
mov
or
in
lock
shl
pop
(bad)
push
jnp
cmc
mov
outs
sub
sar
daa
pop
add
or
test
icebp
xchg
sbb
mov
repz
xchg
lods
pop
fimul
cmps
push
xor
push
pop
cmc
sbb
and
sub
out
jne
enter
je
fcmovbe
imul
(bad)
ja
dec
cdq
or
mov
inc
mul
mov
xchg
xchg
ja
pushf
mov
out
xchg
mov
hlt
mov
add
pop
add
ffree
mov
js
push
nop
(bad)
and
xchg
dec
ja
test
lsl
fist
sbb
adc
jp
aam
sub
adc
adc
js
cmp
xor
adc
cmp
adc
icebp
pop
or
leave
add
mov
mov
jnp
test
retf
(bad)
mov
and
mov
jg
mov
sub
adc
repz
mul
fs
add
nop
into
xor
sar
pop
xchg
jo
shl
inc
jae
xor
lea
sbb
iret
push
inc
push
outs
add
dec
(bad)
mov
movs
inc
xor
mov
mov
ss
sbb
cmp
push
gs
jge
dec
adc
xchg
dec
add
jle
sbb
cmp
inc
repz
(bad)
fbstp
mov
inc
sbb
mov
loopne
pusha
clc
jle
xchg
cmp
fwait
retf
xchg
pop
push
daa
aas
cmp
ins
pop
outs
fidivr
xchg
daa
aaa
(bad)
jle
popa
mov
xor
in
push
test
(bad)
xor
or
stos
rol
push
je
jmp
outs
mov
sbb
inc
sbb
add
sub
nop
stos
push
xchg
(bad)
adc
enter
lock
inc
jg
leave
cmp
xchg
loop
ret
pop
cdq
gs
jmp
jge
push
pop
leave
test
jo
jmp
cli
adc
sub
xor
adc
mov
push
mov
pop
xor
sub
push
sahf
sti
in
xchg
scas
push
out
push
xor
jns
mov
rcl
jne
mov
ret
fcomp
out
lods
adc
add
fadd
sbb
dec
out
xchg
ret
lea
jb
pop
add
cmp
imul
adc
cmp
pop
lds
fisttp
adc
cmps
fcmovb
adc
fmulp
shr
movs
mov
jmp
out
adc
or
call
add
mov
push
mov
retf
push
test
inc
(bad)
jnp
xor
js
test
and
cdq
add
pop
ins
addr16
cmps
sub
mov
cmp
aas
imul
loop
mov
mov
mov
mov
mov
sbb
popf
adc
stc
push
or
cld
jle
inc
xor
pop
(bad)
mov
add
mov
cdq
xor
mov
popa
jmp
call
shl
int
outs
cmc
jmp
mov
pslld
test
xor
xor
mov
test
jbe
inc
repz
je
dec
add
test
xchg
sub
mov
jnp
or
pop
cmps
and
stos
(bad)
cmp
sub
inc
dec
mov
jb
stc
in
and
push
hlt
out
push
cwde
es
jo
inc
add
pop
daa
xchg
xor
jle
push
and
js
adc
sub
jg
and
fucomip
xchg
xchg
lahf
mov
sub
popa
and
sar
cmp
call
iret
hlt
inc
pop
xor
mov
imul
ins
pop
stos
lods
shl
ins
inc
add
jecxz
sub
cmp
fs
xchg
mov
mov
push
jp
lods
xchg
test
mov
dec
and
rcr
shr
dec
inc
fsub
sub
repnz
test
pop
mov
and
add
add
retf
dec
mov
test
push
les
pop
sub
lods
in
(bad)
ret
outs
ja
dec
push
dec
aam
loope
pop
ds
sbb
imul
jge
xor
adc
and
test
push
fisubr
es
cmp
add
inc
ja
js
inc
push
retf
sbb
not
sub
mov
mov
push
stos
add
test
fiadd
lods
inc
ds
movs
mov
(bad)
fld
jo
jo
call
xor
xlat
sbb
imul
pop
enter
arpl
fcomp
shl
jae
cmp
mov
inc
jmp
mov
loop
addr16
sbb
outs
imul
and
jo
push
jne
loope
ins
int
adc
push
scas
jp
sbb
lock
push
mov
je
cmp
adc
sub
dec
push
cmp
push
pop
das
nop
xor
call
xor
pusha
jnp
jmp
clc
add
fisttp
addr16
xchg
ret
push
repz
and
ds
cmp
mov
jns
iret
dec
cmp
pushf
push
test
jnp
cmps
adc
mov
imul
push
xchg
jbe
test
inc
mov
test
das
adc
add
(bad)
jmp
ins
inc
xor
sbb
js
or
mov
and
lods
test
imul
or
sti
or
add
dec
add
dec
lds
inc
cld
cmp
xor
shr
mov
fs
mov
xor
call
add
cdq
into
out
addr16
retf
gs
and
imul
add
fneni(8087
dec
daa
or
xlat
mov
sbb
loopne
sbb
out
sbb
inc
es
outs
cmp
and
inc
add
arpl
sub
mov
cmp
sbb
fistp
push
test
inc
and
inc
dec
ss
push
aam
adc
pusha
add
sub
popa
push
or
xchg
xor
fisubr
and
xchg
out
jb
jle
xchg
xchg
in
xchg
jno
ret
in
sub
dec
xor
dec
pop
sahf
repz
and
jmp
adc
dec
hlt
mov
or
jmp
and
ins
push
jo
(bad)
ins
jle
pop
jae
pushf
mov
add
pop
in
inc
ret
dec
out
dec
pusha
adc
ror
aaa
mov
inc
push
jle
imul
rcl
mov
mov
add
aam
mov
(bad)
push
mov
push
ins
fcomi
and
arpl
dec
fwait
out
nop
dec
jb
xor
push
and
xor
mov
add
or
xchg
and
les
mov
cmp
jecxz
mov
sbb
cmp
inc
adc
out
adc
hlt
xor
imul
jo
fstp
mov
mov
dec
pop
mov
jns
pop
cmp
cs
pop
pusha
lods
jbe
add
dec
push
shl
adc
cmps
add
lahf
dec
loopne
aad
scas
or
jge
mov
shl
outs
jo
sub
xchg
loope
popf
mov
xor
les
fld
aaa
add
adc
bound
add
ins
sub
sub
cs
xor
inc
jecxz
adc
or
cmps
pop
data16
mov
outs
xor
fdiv
push
push
mov
mov
xchg
adc
dec
mov
clc
lahf
sbb
jns
mov
and
stc
cld
sub
xchg
adc
pop
std
je
pushf
mov
call
mov
xchg
inc
mov
outs
jae
scas
mov
clc
out
jb
adc
or
mov
movs
xchg
(bad)
xchg
add
outs
js
test
movzx
test
retf
fadd
imul
(bad)
movs
sbb
mov
out
arpl
addr16
inc
mov
mov
jbe
sbb
imul
lock
nop
movs
xor
adc
xchg
push
add
cmp
mov
jbe
mov
mov
mov
sbb
(bad)
call
wrmsr
iret
cmp
int3
mov
jle
cmp
dec
adc
and
cmp
nop
in
add
xlat
cmps
popa
ss
push
cmp
inc
and
aas
shr
mul
outs
sub
mov
xchg
outs
jno
push
pusha
pop
inc
sbb
jns
jo
imul
(bad)
imul
pushf
push
xchg
shr
loopne
fincstp
(bad)
outs
es
sbb
push
xchg
sub
jns
dec
inc
scas
mov
mov
inc
and
dec
pop
pop
sbb
jo
inc
mov
jl
pop
(bad)
pop
pop
cmp
mov
bound
or
rol
mov
lods
mov
mov
mov
cwde
and
xor
mov
jnp
fisttp
xchg
popa
cmp
and
cdq
fmul
mov
adc
jae
pop
mov
sub
pop
ror
sbb
inc
ins
sub
leave
jns
pop
dec
push
xchg
out
cld
push
or
ja
leave
mov
sub
jno
jl
ror
mov
mov
mov
fdivr
ror
(bad)
lahf
scas
ret
cmp
add
aad
pop
popa
and
pop
adc
pop
mov
sub
and
movs
jne
adc
sbb
mov
push
mov
(bad)
mov
arpl
pusha
js
adc
push
call
ins
scas
loopne
xchg
repz
xchg
fs
(bad)
out
(bad)
les
sti
pop
pop
(bad)
stc
xor
(bad)
ins
sbb
ins
and
dec
mov
mov
push
sti
mov
cmp
xchg
cmp
jne
add
dec
dec
int3
mov
fld
add
scas
popa
lahf
shl
push
cmp
nop
or
sbb
adc
shl
sti
or
mov
nop
sub
nop
or
out
fdivr
icebp
sbb
fst
popf
mov
xchg
in
mov
aam
push
jecxz
dec
cmp
or
jns
add
jo
push
cs
adc
adc
or
xchg
jl
shl
pop
out
arpl
in
lock
inc
sbb
pop
jl
inc
adc
mov
xor
and
loopne
sub
adc
pop
fild
das
or
xor
xor
mov
mov
stos
or
adc
shr
and
mov
dec
mov
call
xchg
leave
iret
dec
mov
dec
in
jne
inc
imul
adc
pop
scas
push
test
jno
cmp
xchg
jg
jge
lea
adc
sbb
pop
es
in
jp
mov
call
bound
mov
call
mov
fnsave
nop
push
sub
dec
cld
push
(bad)
mov
xchg
inc
jmp
cmp
add
out
dec
or
retf
adc
scas
xchg
arpl
cmp
adc
inc
jnp
xor
cmc
aad
icebp
xor
scas
jg
mov
sbb
pop
popf
push
mov
mov
out
cmps
test
int
pop
mov
mov
adc
(bad)
scas
data16
fst
cmp
jbe
jp
test
addr16
xchg
mov
in
data16
sub
xchg
push
fld
mov
aas
mov
ja
adc
add
mov
test
xchg
pop
into
rol
out
(bad)
jmp
mov
shr
xchg
mov
mov
or
jno
inc
int3
and
sub
dec
shl
in
pop
sbb
aam
cmps
mov
bound
sbb
sub
rol
mov
shl
out
fst
add
jo
(bad)
cdq
ret
repz
lea
in
jnp
clc
stos
inc
inc
int3
push
jmp
gs
out
xchg
out
movs
add
cmp
pusha
xor
pop
jmp
pop
dec
dec
div
jecxz
clc
stos
pop
xor
dec
sahf
jge
jp
mov
ja
adc
dec
dec
sub
and
xor
imul
jnp
sbb
fldenv
sub
and
adc
lods
sub
lock
jecxz
jl
add
fist
(bad)
in
test
dec
jl
leave
dec
pusha
stc
rcr
aad
push
aas
push
pushf
dec
ret
xchg
ret
leave
imul
int3
repnz
icebp
xor
push
loop
into
outs
xchg
add
sub
mov
fsub
daa
(bad)
lock
sub
popa
outs
mov
pusha
mov
inc
adc
jne
ss
adc
xor
popf
sbb
mov
movs
lahf
dec
shl
sar
in
loop
and
lods
ja
mov
jb
pop
push
imul
push
not
imul
aad
mov
adc
aad
test
nop
out
ds
jb
mov
jb
cli
(bad)
nop
cs
imul
sub
pop
aam
sub
jp
nop
repz
aaa
inc
cmc
or
mov
push
sbb
or
cmp
mov
xor
xor
mov
stos
inc
sbb
fidivr
scas
fsubrp
cs
gs
inc
aaa
movs
or
movs
push
jno
xchg
in
fbstp
jo
(bad)
jns
adc
mov
sub
sub
cmps
popa
ror
add
dec
mov
push
xor
test
mov
push
xor
(bad)
call
push
out
pop
movs
xlat
ds
mov
sub
jl
xchg
pop
jbe
call
mov
test
nop
mov
lock
test
inc
mov
xor
xor
xor
cmp
and
call
mov
jb
lahf
out
jmp
out
mov
dec
xor
popf
mov
cmps
jns
mov
loopne
adc
adc
aam
(bad)
cmps
inc
js
mov
scas
add
jb
mov
push
pop
cld
fmul
call
in
and
jb
xor
movs
sti
not
inc
inc
mov
inc
(bad)
fisttp
push
xchg
add
clc
xchg
jb
mov
mov
or
std
cld
enter
pop
loop
push
sub
dec
in
outs
sbb
(bad)
leave
jbe
and
adc
pop
leave
push
and
fadd
sar
call
inc
mov
xchg
(bad)
cmp
aaa
out
sub
aaa
dec
mov
dec
stos
jge
or
mov
cmp
jns
repz
mov
ret
mov
outs
mov
push
jno
dec
mov
sub
shl
sti
mov
in
push
stc
pop
sti
in
inc
lods
test
in
mov
sub
int
mov
jns
push
ret
mov
dec
jmp
outs
arpl
pusha
clc
lods
or
push
daa
cs
jbe
inc
push
xchg
pop
inc
sub
fst
mov
push
xor
jno
(bad)
push
rcl
out
inc
inc
push
cmp
mov
sbb
cli
movs
mov
mov
cmp
xchg
mov
or
ficomp
repnz
mov
cwde
jmp
mov
das
aaa
mov
into
dec
je
adc
loop
add
mov
jl
(bad)
dec
lock
lock
or
test
ins
xchg
popa
xor
xor
fcomp
xchg
add
cwde
loopne
hlt
stc
imul
sbb
or
mov
sub
inc
popa
push
push
gs
mov
jmp
xor
aad
jno
and
xor
stc
jno
inc
inc
mov
sbb
jmp
(bad)
(bad)
push
out
jnp
or
int
inc
pop
fisubr
jbe
dec
add
push
xchg
xchg
fiadd
jae
cld
aam
push
dec
jle
fisub
imul
jns
xchg
in
dec
fs
mov
(bad)
test
jmp
gs
pop
int
outs
leave
movs
adc
out
jg
sahf
mov
push
fst
imul
dec
je
hlt
mov
shl
aaa
xchg
mov
or
inc
add
jp
jae
mov
pop
das
inc
pop
cmovno
mul
sub
movs
test
mov
inc
test
adc
inc
sbb
(bad)
cmc
pop
pop
daa
sub
ror
shr
(bad)
pop
pop
xchg
movs
out
iret
mov
(bad)
aam
lods
xchg
gs
lds
adc
ret
mov
dec
imul
mov
test
mov
xor
inc
mov
popf
mul
and
dec
xchg
mov
and
lds
pop
mov
popf
add
das
jns
cs
cwde
cmp
sub
xchg
popa
outs
jbe
push
push
gs
jmp
mov
cwde
bound
popa
pop
js
jl
fadd
dec
repz
mov
cs
or
mov
and
into
and
or
adc
ss
sub
pushf
jp
sub
stos
sbb
or
stc
fwait
inc
ja
cld
mov
icebp
in
mov
aam
dec
lea
mov
dec
rcl
adc
inc
aas
jecxz
arpl
enter
sub
pop
inc
loope
mov
push
fdivr
les
je
loope
test
rol
fistp
pop
cwde
push
xor
or
add
mov
and
sub
test
and
fstp
push
sub
xor
mov
mov
pop
pop
fst
daa
fwait
adc
ins
ja
ficomp
sub
jg
rol
dec
out
fst
cmc
or
mov
mov
leave
dec
cmp
ret
fstp
movs
jb
(bad)
data16
clc
shl
mov
pop
cmc
hlt
jecxz
push
sbb
cli
pop
mov
lods
jns
test
arpl
xor
out
loope
fisubr
fwait
or
jo
repnz
pop
sti
lods
jae
or
cmp
(bad)
jns
mov
dec
shl
jle
(bad)
mov
les
fcomp
lea
add
xor
mov
mov
ins
repz
fsubr
sbb
inc
sub
(bad)
lock
adc
in
jl
cmp
jbe
int
hlt
xor
jp
push
retf
sub
loope
jle
and
lods
rol
dec
sbb
or
xchg
aas
push
shr
je
xor
mov
jle
dec
outs
push
outs
xchg
pop
repz
test
daa
std
fstp
adc
mov
mov
jp
fxtract
pop
int
and
pop
loop
test
in
shl
fadd
aaa
movs
test
(bad)
and
es
hlt
jge
mov
lea
test
adc
and
in
cld
fist
push
fsub
cdq
loope
xlat
sahf
or
mov
loop
stos
cli
addr16
cmp
sar
xchg
test
jp
int
pop
or
xor
mov
adc
mov
outs
gs
xchg
mov
inc
sub
enter
inc
cli
push
pop
cs
xor
push
jecxz
push
(bad)
or
mov
arpl
sahf
inc
cmps
into
jne
aaa
dec
mov
and
cmp
cmp
into
pop
das
jae
push
mov
enter
fisubr
in
call
fnstsw
test
xor
inc
stos
hlt
jnp
lahf
dec
mov
sbb
add
and
arpl
bound
pop
shl
xor
mul
mov
mov
xchg
arpl
not
bound
es
pop
or
scas
setle
cmc
inc
fnstsw
sbb
pop
in
dec
jns
push
ja
sub
and
icebp
ins
and
mov
(bad)
cdq
mov
inc
sbb
loope
std
xor
movs
mov
rcl
addr16
dec
outs
mov
ror
sbb
xor
out
add
out
aaa
pop
or
inc
xchg
add
fild
(bad)
out
ret
scas
xor
bound
out
out
cmp
dec
mov
push
(bad)
ins
push
or
lahf
jb
xchg
fdivr
add
xlat
frstor
mov
mov
pop
dec
dec
sti
das
dec
xchg
in
call
inc
call
mov
xchg
sbb
lods
push
call
fwait
retf
push
fld
fbld
xor
jbe
lock
jo
inc
cs
add
mov
cld
push
jge
cmps
retf
cmc
mov
fcomi
fist
sub
jmp
mov
xchg
mov
(bad)
stc
sbb
add
sub
add
cmp
mov
mov
xor
or
dec
pop
cmp
out
mov
and
int
jmp
mov
jb
mov
(bad)
jg
lock
and
xchg
aad
div
addr16
or
stc
into
mov
mov
add
inc
jno
sub
lahf
push
xor
mov
inc
or
icebp
push
sub
out
push
ja
loopne
cmc
mov
es
jl
lds
sbb
arpl
mov
xlat
mov
scas
jae
mov
mov
and
outs
mov
jecxz
dec
repz
int3
add
mov
rol
sbb
test
add
movs
xchg
in
popf
mov
pop
or
mov
jge
push
push
popf
sub
sbb
(bad)
dec
inc
xor
jbe
ds
xor
(bad)
mov
push
push
inc
jl
fsubr
sbb
in
popf
push
or
mov
gs
or
or
daa
bound
aad
sub
pop
int3
inc
ins
stos
stos
mov
hlt
ret
cs
outs
jp
add
xchg
dec
outs
cmp
inc
(bad)
push
adc
sti
(bad)
sub
sbb
mov
cs
shl
ins
inc
cs
adc
adc
xor
mov
fsubr
out
xor
rcr
push
pushf
xchg
fiadd
clc
rcl
jns
in
dec
popa
pop
pop
xchg
(bad)
inc
aad
lahf
movs
mov
jmp
sub
xchg
mov
mov
outs
pusha
jne
sub
push
addr16
jmp
(bad)
pushf
les
xchg
call
mov
cs
push
cmp
cld
jmp
cmps
jg
ss
lahf
outs
push
out
lods
xchg
fistp
ret
adc
rcr
inc
xchg
mov
mov
dec
pop
xchg
sar
adc
mov
out
cmp
mov
in
pusha
xchg
cs
add
jge
pusha
scas
clc
iret
cs
popf
inc
sbb
outs
aam
push
push
sub
pop
stos
repz
fmul
jecxz
test
loopne
xlat
cmc
jnp
lock
or
dec
xchg
out
outs
push
jnp
ss
fcomp
mov
mov
std
or
out
mov
out
les
sbb
pop
daa
test
mov
jae
es
and
xor
push
dec
inc
jb
rcl
xchg
ins
sbb
repnz
cmp
mov
push
mov
movs
sbb
jge
and
sub
xor
stos
jnp
sub
xchg
in
push
js
xchg
and
ss
jbe
fcmovu
out
adc
pop
sahf
dec
scas
cmp
xor
and
xor
and
ds
int
inc
lock
aas
fwait
lods
(bad)
aam
sbb
(bad)
repz
jge
test
xchg
cmps
mov
ds
pop
fidivr
loope
xchg
out
mov
scas
mov
pushf
xchg
jle
xchg
sub
scas
es
iret
jns
into
addr16
cmp
cmp
adc
add
ror
mov
lock
jl
into
sbb
movs
stos
into
outs
rcl
mov
retf
and
in
cmps
(bad)
int3
cmp
cwde
xchg
or
test
jge
push
leave
jns
push
test
pushf
outs
dec
clc
mov
outs
xchg
dec
adc
mov
stos
mov
addr16
sub
jge
ret
push
daa
jecxz
and
sbb
(bad)
int3
mov
push
push
fiadd
clc
push
aam
and
sbb
fstp
adc
add
adc
scas
cmp
jge
mov
aas
push
test
icebp
jo
lahf
sbb
jo
jae
cs
mov
pushfw
ja
bnd
imul
lods
xor
xor
mov
ror
and
dec
mov
ss
shl
(bad)
retf
int3
jmp
mov
and
mov
cli
call
mov
xor
jne
add
xchg
lahf
mov
adc
retf
cmp
inc
pop
adc
add
lods
jbe
cld
call
sbb
mov
test
minps
fs
arpl
jp
jb
xchg
lahf
ds
jnp
xlat
fstp
jb
ds
imul
into
test
gs
daa
cmp
xor
outs
push
pop
xor
movs
sbb
or
inc
mov
test
test
sbb
out
inc
loopne
jl
jle
mov
les
stos
in
sar
mov
xor
iret
mov
aas
pushf
jnp
add
pop
call
sbb
or
fsub
in
fisubr
ins
adc
call
mov
pop
out
sub
or
lahf
call
(bad)
outs
hlt
and
adc
adc
sbb
adc
pusha
(bad)
jmp
push
das
pop
lock
js
repnz
inc
pop
pop
iret
inc
(bad)
loopne
or
xor
cmp
xlat
vmovhpd
popf
outs
mov
inc
out
mov
nop
aaa
bound
jbe
mov
and
(bad)
jbe
xor
test
mov
jbe
push
mov
int3
sub
pusha
adc
out
or
xor
cmp
adc
push
ja
push
push
popf
or
aaa
mov
inc
xchg
pop
or
push
sahf
jo
xor
mov
jp
call
nop
out
jl
dec
sub
setl
pop
(bad)
sub
jae
loop
and
jmp
ficomp
mov
scas
dec
dec
cmps
pop
cmc
lds
cs
jmp
out
hlt
xchg
rcl
(bad)
jo
cmp
xor
les
inc
mov
outs
dec
xor
shl
retf
clc
fwait
adc
inc
xchg
jno
push
(bad)
mov
jmp
into
and
dec
pop
jmp
mov
cs
stos
lock
js
inc
sbb
mov
ret
pop
sub
iret
xor
(bad)
movs
inc
sub
or
mov
out
sub
xor
mov
pop
in
jae
add
stos
mov
mov
je
xchg
(bad)
mov
and
inc
xchg
or
or
fild
xor
cmp
sub
mov
(bad)
mov
daa
dec
fsub
clc
sub
mov
inc
lods
dec
dec
addr16
add
pop
push
inc
repnz
xor
jp
mov
mov
adc
adc
es
movups
sub
push
cmps
stc
xlat
lea
dec
fld
sti
add
cmps
push
jecxz
repnz
fidiv
std
mov
xchg
adc
jle
lds
jb
push
call
iret
cwde
push
inc
xchg
(bad)
dec
adc
ret
sub
and
sbb
jg
jns
adc
xor
mov
stos
data16
xor
int
mov
into
inc
push
in
xchg
cmp
push
fnstsw
mov
pop
push
daa
icebp
push
sbb
call
push
mov
push
fs
outs
jmp
stos
push
lds
(bad)
js
cmps
shr
mov
test
ja
xor
mov
xor
cld
xchg
xlat
stc
mov
xchg
lds
jge
mov
push
scas
(bad)
xor
aaa
xrelease
mov
xor
dec
xchg
cmps
cmps
cmp
movs
xor
out
push
push
push
dec
cs
fnstenv
sbb
popf
lds
scas
sti
sub
(bad)
mov
xor
out
stos
push
mov
xchg
xor
cmc
lods
pop
or
push
(bad)
shr
(bad)
neg
mov
jl
out
xchg
sbb
(bad)
enter
jbe
inc
in
and
(bad)
dec
jb
mov
jb
ret
lea
add
mov
(bad)
jecxz
es
mov
out
leave
jle
xor
test
mov
inc
or
loop
stc
xor
and
cmps
jo
cmp
xor
retf
jp
sub
xchg
mov
out
gs
scas
fwait
jns
or
test
test
ret
sbb
aad
shl
jo
bound
in
xchg
and
ret
enter
or
fwait
loop
add
pop
xchg
repz
sti
cmp
arpl
and
mov
inc
fwait
test
test
inc
scas
fist
mov
mov
mov
rcl
xchg
and
or
mov
(bad)
icebp
xchg
dec
aaa
add
jno
ret
jmp
sub
adc
mov
sti
movs
int
int3
jecxz
sbb
sti
xchg
daa
jle
loopne
stos
(bad)
repz
retf
icebp
movs
mov
movs
dec
pop
sub
pop
inc
xchg
enter
mov
nop
add
adc
std
pop
sub
adc
mov
addr16
dec
and
aaa
sub
(bad)
stc
push
jo
dec
repnz
inc
loop
and
mov
scas
adc
adc
jg
or
cdq
inc
(bad)
xor
sbb
pop
and
lods
int3
push
retf
lock
jae
inc
jg
in
sbb
add
int3
je
sub
sub
bound
loope
xor
and
arpl
out
xor
add
or
sar
(bad)
jmp
mul
dec
sar
ficom
test
fstp
jmp
popf
push
outs
pop
and
adc
and
and
leave
xchg
push
cmp
retf
lds
dec
pop
aam
and
sahf
cmp
dec
cmp
(bad)
cli
or
mov
clc
out
mov
cmps
loopne
mov
loope
std
(bad)
das
push
mov
xor
jp
rcr
and
mov
ret
and
mov
sub
xor
jae
in
xchg
and
adc
add
cmps
sub
test
add
leave
(bad)
mov
xor
(bad)
out
jle
out
sbb
imul
pushf
daa
ror
(bad)
out
push
scas
push
out
push
pop
mul
cmp
mov
mov
mov
sti
fcom
cli
xlat
mov
retf
mov
je
icebp
or
and
pop
mov
data16
jo
in
xor
inc
not
xor
movs
mov
mov
xchg
jo
cmp
dec
movs
(bad)
cmp
rol
add
mov
aas
popf
mov
xchg
(bad)
int3
repz
(bad)
dec
inc
adc
mov
inc
pop
and
sbb
cli
in
rcl
neg
or
cli
pusha
push
mov
mov
add
rol
jne
adc
add
pop
mov
cld
jg
sub
and
mov
dec
cmp
arpl
mov
ja
ja
call
inc
sbb
mov
mov
test
scas
sbb
in
in
loopne
sub
sbb
and
shl
jl
and
adc
sub
xlat
jecxz
cdq
mov
mov
xchg
add
push
sar
push
jo
clc
jg
cmp
ins
dec
aaa
dec
adc
add
adc
in
stos
out
cmps
(bad)
fnsave
pop
pop
outs
cmp
movs
cwde
pushf
sbb
or
pusha
jnp
aam
es
mov
xchg
sbb
es
sub
stc
popf
clc
cmps
dec
stos
or
mov
pop
retf
sti
imul
rol
add
xchg
scas
ret
sbb
hlt
jg
imul
mov
(bad)
cmp
inc
mov
loop
pop
push
arpl
mov
popf
jnp
xchg
or
ss
push
ror
dec
cli
(bad)
push
push
and
data16
cmp
mov
add
sbb
xchg
rol
and
das
or
repz
arpl
xchg
inc
dec
cmps
dec
mov
xor
fldcw
cmp
fld
adc
cmps
inc
outs
dec
push
test
add
sub
popa
sbb
bound
lahf
xor
retf
push
jg
ins
imul
add
mov
loopne
retf
mov
mov
add
mov
cli
mov
mov
xor
adc
xchg
cdq
push
pop
sub
xor
sub
lods
cmp
sbb
and
push
mov
(bad)
add
cld
add
xor
inc
fbstp
push
fist
ret
jge
imul
mov
xlat
repz
out
ja
push
dec
jge
imul
inc
jnp
pop
inc
int3
scas
cmp
cmps
(bad)
hlt
pop
movs
in
xor
dec
scas
movs
and
mov
add
ror
dec
add
pusha
rcl
xor
leave
ret
or
mov
dec
cmps
mov
rcl
shl
and
and
xchg
add
rcr
test
arpl
sahf
xor
or
cli
gs
adc
mov
scas
xor
mov
sub
mov
aam
and
add
push
adc
lods
push
xchg
add
xor
mov
outs
adc
mov
adc
sbb
stos
fsub
clc
test
sub
push
leave
sbb
or
pop
fcmovbe
xchg
out
jns
test
or
xchg
mov
or
das
test
cmp
dec
cmp
push
das
neg
mov
ret
ror
or
cmc
popa
pop
pop
and
loopne
cmp
ins
das
add
push
mov
adc
pop
inc
xor
mov
enter
fdivr
or
sbb
imul
fist
fs
retf
push
ins
cmp
inc
clc
loopne
add
xchg
pusha
xor
imul
sbb
ret
in
adc
js
(bad)
sub
test
sbb
loope
sbb
or
sub
xchg
int3
pusha
xchg
int
call
and
cwde
dec
enter
jecxz
ror
call
call
xchg
mov
mov
pop
repnz
inc
add
sbb
cs
xor
push
call
jae
cmc
fsub
cli
or
xchg
jns
adc
popf
xchg
cmp
xchg
adc
out
adc
movs
add
jo
shl
jns
jl
mov
mov
fidivr
mov
mov
adc
sub
mov
push
xchg
shl
popa
inc
pop
jo
hlt
adc
push
out
movs
push
push
mul
fnstenv
lock
outs
and
jne
ss
xor
std
push
or
cmp
add
cmp
mov
cs
jo
das
out
or
ins
test
loopne
jecxz
daa
jnp
push
retf
jl
xchg
arpl
sbb
outs
(bad)
out
and
adc
call
test
sub
cs
xor
add
inc
push
int
dec
jae
mov
dec
rcl
retf
push
jg
sbb
(bad)
pop
call
jge
push
cld
pop
dec
xor
mov
stos
sbb
mov
dec
dec
pop
pop
xor
and
aaa
outs
hlt
or
rcl
test
mov
mov
into
arpl
sub
and
cmc
rol
in
sub
into
push
mov
add
cld
lahf
ja
xchg
fldenv
xchg
sbb
mov
xchg
inc
je
mov
int3
ja
pop
repz
scas
stos
jno
push
ins
call
and
(bad)
(bad)
cmp
jl
pusha
sbb
cmp
sub
fcmove
daa
fs
daa
rcr
jl
and
push
popf
add
mov
cmp
jo
stos
test
imul
cmp
call
(bad)
out
not
movs
xchg
shl
movs
aaa
mov
sbb
std
popf
cmc
popa
imul
cmps
adc
mov
xlat
push
mov
stos
pop
jbe
or
fistp
out
inc
imul
test
mov
sbb
fisubr
adc
popa
inc
or
imul
ds
cs
aad
(bad)
sub
cld
lea
and
(bad)
cmp
outs
add
stos
jmp
or
iret
mov
cmp
test
push
(bad)
mov
or
ret
mov
adc
or
xchg
push
ror
pushf
(bad)
je
jno
ds
mov
inc
pop
hlt
mov
inc
mov
shl
lds
pop
(bad)
mov
pop
pusha
mov
mov
into
repnz
jnp
mov
pop
mov
mov
push
leave
cmps
repz
push
aad
ja
call
fdiv
xchg
inc
pop
lahf
test
or
pusha
call
adc
sub
mov
sub
push
pop
mov
test
sub
add
mov
push
hlt
cwde
lods
(bad)
(bad)
in
xchg
in
inc
imul
mov
sub
pop
mov
push
cmp
add
adc
push
xor
mov
add
pusha
sbb
push
loopne
sbb
mov
addr16
ins
ins
add
les
popa
fbstp
in
test
lahf
and
pop
repnz
js
cmps
jl
lds
and
icebp
inc
or
jnp
nop
jle
int3
or
ss
sar
clc
stos
das
mov
cld
cmp
loope
inc
iret
jae
mov
icebp
test
outs
cmc
pop
dec
mov
jb
cwde
popf
(bad)
mov
or
push
movs
jnp
cmp
getsec
xlat
cmp
pop
outs
fistp
mov
push
sub
(bad)
pusha
mov
xchg
not
mov
dec
(bad)
stos
int3
or
jne
add
cmp
sub
xor
inc
ror
(bad)
xbegin
lods
inc
pusha
xlat
adc
aam
lock
dec
mov
mov
xor
push
or
and
xchg
out
in
dec
mov
and
in
into
lods
shl
sub
(bad)
fld
dec
push
cmc
repz
push
mov
stc
cmp
sub
in
sub
cmps
sub
xor
not
imul
jl
jmp
popf
cmp
outs
(bad)
cmp
popa
imul
lds
mov
or
xor
imul
cmp
ins
pushf
sub
push
mov
retf
les
and
jg
mov
xor
add
xchg
arpl
add
inc
ret
dec
cmps
sbb
adc
and
xchg
jle
js
stos
mov
xlat
ins
into
adc
push
xor
push
push
pop
dec
loop
ins
sti
dec
fst
les
psrlw
loopne
cmp
and
icebp
mov
xchg
push
sbb
mov
ja
fist
cli
je
and
xchg
mov
rcl
fucomip
xchg
(bad)
outs
imul
ins
or
out
jle
or
push
and
or
jmp
mov
mov
xchg
xchg
es
sub
pusha
sti
pop
lods
imul
sbb
aas
sbb
aas
pop
jbe
jmp
add
xlat
jg
mov
pop
shl
inc
mov
cmp
lods
and
aas
push
jmp
jmp
test
dec
pop
mov
mov
xchg
sahf
std
mov
fistp
jae
int
pop
mov
mov
push
xor
add
push
adc
sti
pop
not
cmp
enter
add
pushf
pop
gs
sbb
lahf
pop
inc
cwde
dec
stos
enter
jecxz
jge
push
push
mov
sbb
sahf
sar
retf
mov
ret
ins
and
inc
(bad)
sub
push
pop
add
les
pop
cmp
jl
aam
cmps
mov
cmp
(bad)
adc
add
or
or
movs
ret
sar
loop
adc
cmp
mov
push
movs
inc
enter
xchg
repz
fadd
mov
mov
in
xchg
rol
enter
dec
xchg
enter
call
cmp
xchg
sbb
ja
xchg
jle
jle
add
test
dec
int3
cli
xlat
add
add
jo
pop
js
push
or
repnz
jmp
(bad)
jnp
das
ror
add
ja
std
and
push
sbb
ja
pcmpeqb
pop
test
ins
sub
loop
in
fidiv
sub
inc
adc
nop
cmp
ja
fld
cmp
jecxz
loop
xchg
and
mov
mov
test
shl
pushf
adc
lock
sub
gs
sub
ins
retf
push
in
sub
and
xchg
lea
pop
xchg
adc
mov
inc
xor
xchg
inc
cld
and
sahf
in
outs
push
or
mul
sub
xchg
scas
dec
(bad)
cld
div
dec
mov
call
(bad)
inc
jae
mov
ss
jmp
nop
add
test
icebp
or
out
icebp
jle
rcl
inc
push
dec
(bad)
mov
and
test
retf
xor
pop
add
(bad)
xchg
nop
enter
data16
out
lods
push
pop
inc
jle
repnz
push
aad
outs
adc
cmp
xchg
xor
loope
mov
aaa
pop
mov
pop
icebp
shl
adc
test
iret
push
mov
pop
fmulp
sbb
test
cmps
fisttp
push
clc
addr16
shl
jno
cwde
or
add
mov
clc
xchg
mov
add
or
call
imul
(bad)
add
nop
out
ret
inc
int3
sub
js
scas
fsubr
pop
jnp
cmp
out
movs
dec
mov
cmp
popf
push
pushf
mov
sbb
imul
rcr
mov
cmps
and
sbb
rcl
pop
or
shr
je
dec
imul
cmp
es
adc
enter
(bad)
fnsave
pop
mov
cmps
push
xor
mov
bound
jp
add
push
arpl
mov
jecxz
lahf
stc
shr
dec
pusha
dec
test
inc
in
jno
aam
dec
mov
or
jnp
cmp
enter
xor
out
outs
scas
lods
lock
mov
sub
mov
or
push
scas
call
fst
movs
or
xchg
addr16
xor
fcmovb
imul
xor
add
inc
pop
fistp
daa
adc
into
cmps
jno
xchg
adc
test
jmp
std
ret
call
nop
movs
dec
mov
in
js
push
jnp
sbb
pop
dec
xor
or
bound
ficomp
mov
fwait
xchg
pop
dec
fst
xor
inc
pop
pusha
out
aas
(bad)
sub
add
in
push
cwde
jb
fst
ret
sub
jae
push
pop
pusha
fisttp
xor
icebp
cmp
stc
and
jg
fbstp
(bad)
(bad)
xor
or
push
std
mov
mov
add
inc
xor
pop
mov
and
fcom
cmps
stos
push
pop
mov
push
xchg
(bad)
daa
outs
dec
xlat
inc
adc
push
std
test
loop
fistp
out
jns
retf
push
xchg
or
inc
adc
iret
mov
sahf
ss
into
inc
jge
inc
sub
aad
and
dec
sbb
mov
xchg
sbb
jmp
cmp
dec
and
mov
dec
jbe
pop
jmp
fwait
xlat
je
sbb
in
sar
iret
sbb
retf
mov
cmp
jp
(bad)
loope
pop
out
(bad)
mov
es
daa
adc
es
mov
cli
xchg
shr
inc
cld
and
sbb
pop
jnp
push
imul
arpl
push
dec
aas
inc
xor
sub
jns
adc
fs
add
inc
lahf
mov
jnp
sbb
jmp
lods
ja
mov
out
sub
test
pop
stc
call
mov
js
mov
push
xchg
adc
push
in
icebp
daa
cmp
pop
mov
sbb
loop
sub
jmp
(bad)
cmp
imul
fild
mov
loopne
test
aas
sub
inc
mov
aam
xchg
dec
cmp
sbb
out
es
sub
push
jge
out
pop
cmps
cmp
mov
mov
das
cmp
pop
xor
fbstp
cmp
or
icebp
mov
inc
sub
jbe
pop
(bad)
stos
push
mov
mov
dec
xor
sbb
fistp
retf
enter
adc
(bad)
cmp
cmp
ret
jp
xchg
in
ret
jge
mov
mov
loope
jno
pop
pop
add
adc
cmp
pop
mov
xchg
xchg
ja
mov
scas
cdq
mov
call
cli
jg
lock
pop
sbb
inc
aad
push
adc
std
jl
adc
mov
mov
shl
pop
push
jg
arpl
or
inc
inc
xchg
popf
aas
sub
loop
mov
rcl
jb
add
std
inc
aaa
sub
inc
out
sbb
loop
cs
out
aaa
fisubr
mov
add
cmc
pop
aad
mov
xlat
scas
jne
cli
aaa
idiv
mov
pop
loopne
or
ins
fcomip
mov
mov
dec
(bad)
shl
(bad)
adc
(bad)
xchg
adc
loope
out
mov
xlat
stos
jo
pop
(bad)
loope
adc
fdiv
jmp
in
std
inc
mov
rcr
and
pop
jne
and
inc
jbe
adc
mov
cmps
dec
mov
push
mov
(bad)
xchg
mov
sbb
sbb
xor
ins
addr16
xchg
add
pushf
stc
push
std
fcmovu
imul
jnp
(bad)
(bad)
lods
int
int3
lods
test
and
nop
mov
cs
or
inc
movs
repz
jle
and
or
ja
test
inc
mov
xlat
or
bound
addr16
popa
ror
mov
xchg
mov
dec
xor
inc
addr16
inc
cld
mov
sub
dec
push
call
sbb
jns
lds
sbb
push
call
lahf
aad
mov
xchg
test
loopne
pop
sbb
xor
xchg
repz
or
inc
inc
mov
call
pop
sbb
stos
rcl
mov
clc
pop
nop
in
scas
dec
push
int3
rcl
aam
(bad)
retf
mov
les
cmp
mov
in
cmp
aaa
sbb
jne
push
lds
push
imul
das
aaa
cli
push
sub
jmp
and
std
repz
sbb
push
cld
imul
leave
enter
mov
mov
cmp
cmp
xchg
jecxz
mov
mov
neg
mov
sub
aaa
out
adc
jb
mov
jo
loope
mov
xchg
data16
lock
mov
lds
in
cmp
xor
mov
sub
jb
enter
cmp
test
cld
pop
hlt
ja
loop
imul
clc
or
(bad)
fnstenv
mov
sub
bound
push
ret
and
ins
call
int3
xchg
mov
pop
lods
cmp
push
dec
pop
cmp
dec
je
mov
rcl
lds
sub
jb
idiv
jae
das
pop
out
into
sub
dec
das
pop
sbb
shl
jge
add
mov
scas
fnstsw
xor
enter
cmp
sub
dec
mov
mov
sbb
enter
rcl
and
aas
dec
push
xor
adc
jge
inc
call
pushaw
and
pop
clc
movs
sub
js
cmp
scas
mov
in
pop
jne
ins
mov
ins
ret
lea
fs
cmp
sbb
add
sub
fstp
or
cld
inc
sub
pop
mov
jae
ret
mov
xchg
and
enter
cmp
dec
jo
and
stc
daa
popa
push
int
jmp
xchg
in
adc
out
sahf
rcr
in
mov
sub
mov
inc
es
repz
jne
mov
xor
daa
loop
adc
push
mov
sbb
inc
mov
repnz
pop
mov
and
outs
xchg
fbld
pushf
pop
mov
pop
lods
stos
aad
push
pusha
test
mov
jmp
sub
mov
stc
je
xchg
push
mov
int
shl
inc
test
add
dec
mov
dec
sbb
xor
adc
mov
test
lds
jno
mov
ret
mov
lds
pop
and
pop
fwait
and
cmp
dec
xor
dec
int
int3
(bad)
loop
or
std
add
push
lods
or
iret
hlt
popa
inc
stos
aad
or
pop
jne
es
lds
div
pop
gs
shr
sub
jb
jns
dec
inc
pop
cmps
mov
inc
sub
and
in
out
jl
mul
cs
inc
lods
and
or
je
push
lods
retf
fsubr
ins
or
cdq
not
jne
adc
sbb
outs
iret
cdq
retf
arpl
sub
call
imul
pop
test
fisubr
cmp
mov
cmc
sahf
fmul
sbb
stos
les
add
out
test
into
jecxz
call
add
sub
sbb
pushaw
js
jmp
nop
dec
aaa
cdq
out
push
(bad)
fstp
je
inc
cmp
es
mov
xchg
pop
lds
out
pusha
js
enter
add
int3
xor
popa
xor
outs
xchg
jbe
cmps
push
outs
xchg
lock
aam
setp
leave
std
push
cs
int3
dec
or
outs
mov
xchg
repz
push
mov
sbb
scas
cmp
push
add
mov
dec
and
jp
inc
xor
dec
xor
xchg
in
sbb
leave
mov
ror
(bad)
jmp
sub
shl
dec
fisttp
and
into
pop
add
mov
push
add
aad
pop
sbb
es
add
jo
popa
xchg
pop
jb
movs
push
pop
dec
dec
push
cli
and
xchg
loopne
cmps
cmp
scas
xor
lods
fst
dec
dec
pop
and
js
(bad)
jp
scas
jmp
adc
aad
cmp
add
pop
ins
xchg
sbb
clc
call
in
sti
sub
jle
leave
jns
pop
xchg
sbb
aas
retf
rcr
arpl
mov
(bad)
sbb
dec
cmps
cmp
adc
mov
lahf
loope
shl
dec
or
test
test
inc
xchg
mov
fst
add
pop
(bad)
fistp
call
outs
int3
fld
xor
xor
test
jge
add
dec
test
pop
cmp
jle
mov
sub
xor
or
jmp
push
cmp
inc
xchg
out
sbb
adc
(bad)
loopne
test
jp
pop
cmp
popa
jmp
mov
push
seto
sub
stos
mov
loopne
push
or
outs
jle
into
xor
dec
xchg
add
imul
and
push
(bad)
cmp
sbb
clc
in
dec
dec
pop
jno
xor
mov
mov
idiv
rcr
out
add
dec
lods
popa
sbb
(bad)
cmps
imul
push
sbb
mov
and
nop
xchg
fwait
lock
popa
cmp
jns
hlt
es
aas
pop
into
jp
retf
out
cmp
arpl
aas
and
dec
push
and
mov
lods
pop
jle
add
add
loopne
dec
fwait
sub
jbe
push
add
stos
test
outs
push
or
add
and
xchg
and
xchg
test
pop
sbb
mov
add
xor
sub
shl
jnp
sub
nop
dec
push
dec
(bad)
movs
bound
pop
cmp
sbb
and
push
pop
(bad)
cdq
call
pop
xchg
fwait
arpl
pusha
movs
(bad)
mov
lock
in
pop
popf
loopne
icebp
jle
loope
out
cs
cmp
imul
cwde
push
push
add
pop
adc
je
mov
push
test
outs
push
test
lock
push
int
outs
lahf
jmp
popa
push
push
xor
mov
push
leave
test
or
leave
sbb
cwde
fst
xchg
push
adc
popa
sahf
push
addr16
aaa
scas
dec
hlt
mov
cwde
inc
fstp
call
ret
inc
jns
sub
sub
mov
xor
scas
push
mov
aaa
(bad)
test
rol
add
leave
jl
xor
xchg
ins
xchg
push
aad
mov
mov
mov
ss
sbb
mov
cs
not
(bad)
ins
dec
(bad)
cmps
test
mov
xchg
popf
shl
loope
call
and
ror
shl
or
push
ja
or
xor
iret
stc
sub
adc
std
adc
stos
scas
lea
shr
mov
xor
pop
pop
repz
pop
(bad)
mov
cdq
mov
and
pusha
xchg
repz
mov
dec
shl
pop
add
dec
cmps
jecxz
jno
cmp
jb
sbb
test
xchg
leave
shr
mov
add
lock
mov
or
push
pop
je
push
or
xor
test
jbe
pop
mov
and
retf
(bad)
or
adc
pop
adc
sbb
cmp
(bad)
pop
out
mov
nop
stc
and
xor
dec
jno
fnclex
xchg
push
fidiv
aad
fisubr
dec
and
aaa
(bad)
or
ja
or
or
arpl
sbb
cmps
push
(bad)
fldenv
sar
adc
das
fdivr
pop
mov
dec
fst
mov
retf
jg
jae
mov
loope
xchg
loopne
data16
in
dec
out
mov
mov
xchg
into
jl
jle
dec
das
or
sub
bound
(bad)
mov
sub
lods
pop
push
adc
gs
fild
push
pop
sbb
mov
push
pop
loopne
inc
stos
push
mov
push
mov
imul
ret
cmp
daa
pop
mov
and
cmp
sbb
jl
xchg
push
xor
push
cdq
sbb
push
out
adc
cs
mov
(bad)
das
inc
sub
mov
mov
dec
xchg
lods
add
pop
inc
pop
das
or
fiadd
pushf
jns
data16
xor
add
jmp
jbe
jno
out
repz
push
inc
pop
adc
jle
ret
inc
sub
add
dec
or
clc
stos
cdq
out
fcomip
ds
inc
mov
fistp
sub
(bad)
ror
shr
aas
xchg
adc
push
fst
sbb
sbb
dec
mov
xchg
or
push
mov
sbb
and
or
pop
retf
mov
xor
cmps
test
jp
adc
call
mov
adc
cmp
xor
shld
ds
cmc
add
hlt
arpl
idiv
arpl
fadd
in
cli
in
jecxz
pop
nop
pop
lahf
(bad)
loope
aam
(bad)
fist
fnstsw
sbb
adc
stos
inc
retf
bound
outs
or
mov
push
imul
adc
mov
mov
not
jp
test
sub
mov
or
jmp
cs
xchg
lods
cdq
repnz
or
mov
out
test
add
outs
xchg
sbb
rcr
pop
addr16
icebp
div
pop
add
cs
and
push
popa
xor
das
sub
mov
inc
mov
push
cs
dec
stc
ja
xchg
mov
push
mov
hlt
xor
pop
movs
jae
adc
cli
or
sbb
neg
je
je
test
cmp
sbb
add
adc
and
push
mov
sbb
dec
or
push
sti
mov
xchg
pop
sbb
cmp
xor
mov
add
pop
push
add
xchg
(bad)
inc
cs
ret
fmul
outs
sahf
loop
push
lahf
push
call
and
outs
xchg
imul
lods
add
loope
les
and
dec
or
pop
sub
sbb
dec
daa
clc
push
popa
xchg
not
pop
repz
bound
leave
dec
mov
jnp
stos
das
gs
push
xchg
cmps
test
and
scas
xor
mov
fidiv
repnz
mov
xor
call
mov
fcomi
push
or
in
push
test
popf
cmps
mov
adc
cmps
push
mov
jo
jge
or
mov
or
stos
ret
lea
test
inc
or
pop
inc
inc
mov
mov
xchg
push
xchg
in
or
hlt
jle
xchg
dec
pop
ret
cmp
(bad)
cmp
dec
(bad)
jno
xor
not
pop
mov
fcomp
loope
pusha
sahf
sub
shr
aas
in
in
enter
sti
jge
xchg
or
dec
int
inc
xchg
pusha
inc
sub
pop
xor
fld
push
ss
ficomp
and
or
je
ins
sahf
jmp
adc
adc
shl
out
or
std
in
pop
nop
(bad)
inc
icebp
sti
pop
iret
aas
mov
ror
test
jp
out
int3
sbb
pushf
mov
push
icebp
pop
fxch
das
mov
xor
in
push
pop
outs
push
mov
mov
cmp
sub
jo
sbb
fist
fidivr
add
adc
call
fild
sbb
and
inc
(bad)
push
and
inc
pop
movs
jg
mov
adc
jge
push
sbb
movs
xchg
push
arpl
mov
cmp
xchg
pusha
mov
xchg
xchg
ds
xchg
sub
in
jne
sub
cdq
inc
mov
ja
in
out
ret
xlat
jmp
pop
fmul
sbb
sbb
jmp
aad
and
out
xchg
(bad)
jle
dec
inc
cmp
push
jne
enter
add
mov
aaa
ds
pop
xor
std
not
in
aas
jb
std
cdq
push
dec
aaa
jno
pop
in
and
mov
mov
mov
and
inc
mov
(bad)
adc
bound
pop
fimul
fwait
jo
call
fwait
or
fist
retf
repnz
and
mov
inc
xchg
enter
mov
pop
int
push
cmp
jle
adc
int
xchg
mov
add
test
lock
(bad)
stc
fadd
adc
cmps
jge
pop
mov
repz
mov
mov
cmp
push
arpl
ret
mov
mov
(bad)
mov
inc
add
fwait
neg
(bad)
cmp
mov
push
test
retf
test
stos
leave
sbb
pop
and
mov
ror
inc
push
aad
sub
inc
lods
or
adc
aam
mov
xor
inc
jge
aad
push
imul
lds
enter
xor
push
dec
das
mov
cdq
inc
loop
or
jns
ret
addr16
fs
popa
call
nop
xchg
or
push
loopne
lea
adc
cmp
test
xor
test
cwde
iret
aam
mov
call
call
fs
mov
test
mov
outs
sub
add
cwde
data16
adc
imul
(bad)
cmp
add
std
ror
jne
std
mov
push
add
jge
jge
test
mov
rol
adc
hlt
xor
inc
nop
sbb
or
jge
stos
mov
div
sub
xor
sar
xchg
rol
inc
inc
mov
and
push
lea
retf
mov
sub
cmps
dec
sub
adc
xor
inc
cmp
movzx
sub
sub
push
xchg
(bad)
out
and
sahf
jnp
outs
bound
jo
ret
call
push
adc
sbb
dec
pop
call
dec
mov
clc
mov
sar
mov
mov
loopne
add
movs
inc
push
ss
sub
es
inc
test
mov
cmps
jl
mov
lods
loope
shr
xor
mov
pop
and
in
and
push
in
shl
ret
nop
mov
push
int
mov
out
sub
es
push
adc
fcomp
mov
ds
std
enter
jmp
push
cld
lods
dec
mov
movs
push
lods
mov
(bad)
jge
std
je
add
and
push
jnp
dec
push
ss
loopne
xchg
jno
fist
imul
ja
mov
xchg
dec
pop
sahf
out
xchg
adc
sbb
ds
xor
shl
jns
push
out
mov
stos
xlat
or
mov
sahf
xor
jns
dec
add
pop
jecxz
sbb
hlt
inc
js
test
rcl
sbb
dec
inc
sbb
xchg
push
and
ja
call
clc
dec
hlt
mov
cmp
jne
push
jl
rcr
add
dec
test
pop
dec
cs
sub
cld
fld
dec
dec
push
push
xchg
pop
add
and
jl
or
dec
mov
daa
inc
fistp
std
cld
jmp
rol
pusha
jnp
and
aas
movs
mov
adc
(bad)
jmp
add
xchg
ins
shr
inc
scas
or
mov
xchg
cmp
pop
rcl
dec
les
mov
rcr
sti
push
adc
dec
cmp
mov
or
cmp
mov
jo
adc
icebp
dec
dec
add
and
or
jne
int
sbb
and
movs
cmp
dec
jmp
loop
add
push
mov
and
adc
jmp
pop
not
idiv
push
aad
jo
push
cmp
pop
push
test
jl
retf
xor
test
and
lock
pop
icebp
(bad)
push
pop
and
cli
dec
stos
jge
push
out
pusha
lahf
pop
mov
in
xor
fisubr
sahf
jecxz
add
xchg
sahf
xor
aad
or
daa
sar
pop
and
add
sub
jecxz
pushf
stos
sub
repz
dec
sub
sbb
jmp
sub
mov
sti
push
std
bound
into
cmp
mov
mov
sbb
stos
jnp
inc
sbb
(bad)
(bad)
push
dec
retf
add
mov
fild
(bad)
sbb
cmp
mov
jl
sar
call
cmp
xchg
out
js
test
xchg
jecxz
pop
dec
push
(bad)
sub
outs
inc
xchg
stos
sub
cdq
adc
and
xlat
out
mov
sbb
push
xor
movs
rcl
(bad)
shr
pop
dec
(bad)
mov
add
je
fistp
push
mov
rep
push
cmp
in
or
sub
xchg
das
lahf
repz
add
std
fcom
cmp
sbb
jecxz
dec
shr
ret
xchg
cmc
mov
or
or
adc
mov
mov
hlt
in
ss
into
fdivr
stos
imul
dec
push
(bad)
not
cmp
xchg
xor
loope
push
mov
out
push
jmp
cs
jl
sti
test
dec
dec
test
xor
inc
shl
scas
xor
mov
cmp
out
loopne
cli
cmp
loope
in
dec
xchg
mov
rol
xchg
iret
pop
and
pop
dec
fstp
clc
imul
mov
jecxz
jmp
and
xor
mov
sbb
sbb
arpl
sub
pop
or
neg
(bad)
(bad)
mov
cmp
out
push
inc
pop
mov
in
and
aas
pop
or
sub
nop
add
lods
xor
sbb
imul
jno
cwde
adc
cmp
sub
test
test
movs
popa
jns
xchg
dec
push
fwait
mov
jecxz
scas
jle
mov
dec
ret
out
fiadd
dec
cli
or
add
push
mov
mov
fistp
pop
in
mov
nop
mov
mov
cwde
cdq
pusha
popa
mov
sbb
dec
mov
lea
inc
dec
idiv
xor
inc
lods
inc
and
(bad)
retf
fldenv
les
adc
pop
rol
hlt
inc
mov
out
loope
jb
pop
inc
mov
mov
or
cs
cwde
js
pop
xor
adc
or
xchg
repz
cmp
xor
xor
xor
sbb
cmc
les
inc
sbb
jmp
in
out
sub
ds
fld
cmp
fst
movs
pop
inc
retf
dec
aad
xchg
mov
dec
loopne
ds
iret
sbb
push
adc
mov
in
enter
stc
jmp
shl
pop
jmp
sbb
adc
fiadd
dec
mov
add
aad
scas
cs
add
adc
lods
cmp
push
inc
xchg
call
repnz
mov
out
mov
call
inc
mov
adc
sub
ds
jae
retf
jge
push
cmp
sbb
add
je
call
jmp
xchg
jge
or
fisttp
sub
fwait
ds
jns
xchg
clc
xchg
push
push
movs
sub
movs
xchg
scas
hlt
call
test
mov
enter
adc
ins
lods
fsub
and
jno
test
dec
sub
pop
mov
adc
dec
or
dec
mov
lods
ins
cs
dec
push
sub
int3
iret
dec
dec
push
fcmovu
dec
and
xor
scas
(bad)
cmp
adc
or
mov
sub
cmps
or
ins
bound
ins
adc
ret
jp
shl
and
nop
popa
adc
std
inc
test
sbb
xchg
sbb
lahf
cmps
xor
lods
push
pop
mov
push
cmp
imul
sub
mov
pop
fisubr
sbb
mov
loope
imul
cmps
xor
xor
mov
in
inc
mov
dec
cmps
loop
xchg
(bad)
iret
or
push
arpl
ficom
push
aam
xchg
(bad)
ds
or
adc
mov
loop
fimul
arpl
(bad)
adc
int3
fwait
leave
add
xchg
jp
hlt
in
push
push
pop
ret
ds
cmc
in
push
in
sub
and
xchg
dec
pop
push
adc
jmp
mov
adc
test
xlat
shl
sub
push
lods
cli
add
adc
xchg
lods
sbb
stos
and
int
jecxz
sbb
push
movs
enter
(bad)
sbb
fwait
aaa
mov
cli
push
movs
lods
push
(bad)
mov
repz
(bad)
pop
es
rcl
xchg
(bad)
pop
dec
fbld
fs
ins
jne
test
sub
push
jnp
repnz
cli
sub
mov
dec
xchg
mov
lods
ja
cli
sub
cvtpi2ps
sub
pop
test
pop
pop
cmp
xchg
nop
pop
push
sub
pusha
cmp
jg
sub
leave
sbb
cld
cmps
cmc
fldcw
push
outs
mov
mov
fmul
rcl
stc
cmc
pop
jg
sbb
lahf
shl
pushf
cmps
cmp
test
sahf
js
cli
fwait
mov
fmul
imul
cwde
mov
cmp
ins
loopne
jne
push
call
je
and
jo
outs
or
sub
fmul
iret
adc
ret
cmp
add
jg
cmps
fcomp
add
cwde
sbb
bound
jo
ins
xchg
pop
inc
jmp
jno
or
stos
sub
sti
mov
mov
add
retf
leave
mov
pop
jecxz
add
loop
mov
in
in
movs
(bad)
int
icebp
jmp
xchg
scas
xor
xor
push
or
fnstsw
inc
inc
(bad)
sbb
adc
out
mov
push
rcr
push
ret
fstp
inc
sub
fdiv
loope
xchg
enter
xchg
icebp
(bad)
imul
sub
int
jecxz
test
mov
enter
adc
iret
pop
sbb
inc
test
call
jo
andnps
jnp
imul
mov
cmc
sbb
test
mov
movs
mov
test
jmp
test
lods
(bad)
in
xchg
sar
aaa
(bad)
jp
inc
ds
xchg
int
sbb
out
jne
fs
or
xchg
sar
loope
mov
in
push
int
sti
ret
clc
mov
int
push
pusha
outs
jmp
call
push
adc
or
xchg
xor
cld
std
fst
enter
test
add
push
cmp
pop
mov
push
stc
lods
xchg
xor
jo
jbe
mov
retf
test
push
enter
xor
(bad)
jg
data16
scas
cmp
push
mov
call
call
mov
cmp
out
outs
ja
imul
sub
add
adc
or
(bad)
adc
mov
cmps
pop
es
rcl
push
ret
(bad)
and
adc
adc
xchg
dec
shl
mov
call
or
inc
jl
arpl
lea
out
jp
jmp
ror
sub
inc
outs
icebp
dec
sbb
mov
sbb
ins
stc
test
xchg
pusha
(bad)
pop
pushf
sti
push
push
sbb
arpl
ins
aas
das
cmp
xchg
in
and
fstp
and
jae
cmps
(bad)
push
jecxz
pop
ss
inc
pop
ja
mov
lock
and
test
inc
push
icebp
test
dec
sbb
rcr
(bad)
lds
int
call
scas
aas
pop
das
xchg
mov
loope
xchg
bound
mov
xor
jne
cli
inc
cmc
add
inc
les
add
jno
xor
lods
sbb
test
sub
and
mov
cmp
add
lock
fdiv
retf
pop
inc
pusha
cmps
pop
arpl
lock
outs
lods
xlat
ret
test
or
inc
loope
aam
cs
cs
or
stc
mov
aam
sub
mov
xor
mov
pop
xchg
push
ja
lds
xchg
pop
shl
push
mov
(bad)
jne
sub
and
bound
adc
out
push
in
mov
cmp
jns
xor
les
scas
ds
push
iret
mov
push
and
(bad)
retf
xor
imul
cmps
rol
jmp
lods
and
or
scas
inc
shrd
push
jmp
fcomp
or
push
push
mov
xor
daa
into
dec
inc
inc
mov
outs
call
dec
ret
das
shr
xchg
dec
outs
sahf
mov
cmps
pop
inc
jnp
dec
lods
aas
dec
cmps
ins
dec
sar
mov
sub
mov
pop
mov
ds
das
inc
adc
xchg
mov
sub
mov
in
or
mov
push
repz
mov
pop
dec
shr
xchg
mov
jp
mov
sub
out
imul
int3
xchg
into
mov
in
dec
repz
sti
adc
or
sti
popa
pushf
cli
push
in
sub
daa
pop
in
xchg
mov
int3
fst
fwait
jb
(bad)
jg
add
retf
pop
mov
jb
imul
inc
lods
xchg
inc
xor
mov
shr
mov
sbb
out
test
mov
(bad)
adc
push
xchg
or
cld
iret
pushf
sub
pop
lea
pop
sar
dec
pushf
xchg
dec
sub
cld
and
ja
into
jbe
pop
inc
cdq
in
xchg
lahf
popf
and
push
cld
lahf
ret
add
or
xlat
nop
pop
xlat
shl
ror
ds
add
xor
int
jnp
sub
sub
scas
pop
mov
mov
ins
adc
adc
or
repz
cmp
aad
pop
mov
test
mov
or
fisub
sbb
stos
xchg
mov
minps
xchg
es
sub
inc
dec
les
cmps
mov
add
pop
(bad)
lods
sahf
mov
inc
sub
cwde
push
mov
das
jnp
mov
gs
add
mov
je
dec
leave
test
(bad)
arpl
push
add
frstpm(287
adc
mov
pop
pusha
loop
es
inc
sub
out
push
popf
aaa
cmp
lods
aam
xor
fst
sbb
dec
dec
pop
pop
cmp
test
out
adc
sahf
lods
pop
push
mov
push
inc
mov
xchg
jmp
neg
out
mov
scas
add
push
xchg
add
iret
pop
in
fcomi
sub
inc
adc
dec
mov
cld
mov
test
and
js
cdq
adc
xor
imul
rcl
push
xor
out
stc
les
xchg
pusha
aam
lds
test
outs
xor
clc
adc
mov
pop
popa
in
iret
cmps
clc
(bad)
movs
sub
fnsave
cmp
push
int3
test
pushf
pop
mov
lock
mov
xchg
sub
into
xor
cmp
sbb
ins
lahf
pop
cmps
add
stos
xchg
inc
aas
jp
lahf
ins
mov
sub
inc
pop
leave
pop
in
sub
out
and
or
hlt
mov
gs
das
lahf
cmc
loop
xchg
add
pop
xor
pop
xor
sub
dec
aas
mov
test
xor
adc
lahf
aaa
xor
dec
mov
mov
pop
add
adc
lds
bound
test
jne
inc
add
mov
imul
or
mov
inc
pop
fs
cmps
dec
or
xchg
scas
ret
cmps
mov
aad
enter
frstor
adc
dec
ret
leave
addr16
push
add
cdq
(bad)
mov
pop
inc
xor
in
lock
inc
ja
mov
push
mov
mov
jmp
test
xor
aas
mov
jb
add
popa
sub
or
sahf
cmc
adc
icebp
ins
mov
test
in
mov
cli
add
cdq
lahf
xor
pusha
in
movs
shl
addr16
rcl
xor
mov
jno
pop
mov
sbb
xchg
stos
fimul
sahf
iret
dec
hlt
and
cmps
inc
mov
ins
push
xchg
cmp
test
mov
mov
scas
xchg
loop
repz
lock
xchg
inc
and
push
sbb
(bad)
jp
push
fwait
cmps
push
jbe
jnp
xor
or
push
sti
jnp
cli
(bad)
fcomp
push
cli
stc
or
ror
xchg
sbb
dec
xchg
dec
xor
xor
jl
imul
bound
imul
popf
popf
pop
retf
adc
(bad)
out
(bad)
push
mov
iret
adc
xchg
cmp
fist
or
push
mov
cmps
jp
xchg
sbb
in
mov
mov
pop
(bad)
mov
retf
add
rcr
data16
scas
push
leave
fs
cs
push
pop
jl
imul
mov
jno
pop
push
adc
addr16
mov
sub
imul
js
cmp
xchg
cmp
clc
sub
imul
mov
pop
jl
inc
push
inc
out
bound
mov
jp
push
or
inc
add
sbb
push
nop
xchg
test
dec
inc
mov
and
push
mov
js
pop
enter
jmp
mov
cs
inc
sub
sti
out
ret
jne
mov
aam
fdivrp
fimul
(bad)
lods
out
or
mov
call
stos
fadd
mov
int
fst
add
push
push
loope
sub
pop
xor
jne
mov
leave
(bad)
arpl
and
mov
or
jne
test
push
ret
jnp
retf
xor
outs
popa
ret
js
clc
out
xchg
push
mov
and
pop
adc
fistp
sbb
pop
or
inc
imul
hlt
mov
mov
ins
sbb
int3
xor
pop
mov
out
dec
ret
or
out
cli
ret
mov
fwait
ret
adc
dec
cwde
push
imul
dec
cmp
clc
xor
daa
add
push
xchg
into
push
mov
inc
sbb
pop
pusha
lods
in
pop
(bad)
pop
call
out
outs
(bad)
jl
adc
in
gs
pop
sbb
xchg
sahf
and
aad
iret
retf
push
ret
mov
inc
dec
push
cmps
movs
std
xchg
cli
(bad)
(bad)
stc
xchg
cmp
mov
jp
je
sbb
cmp
imul
dec
xor
(bad)
adc
repnz
cmp
div
cmp
jmp
cmp
cmp
and
jg
pop
adc
adc
jo
or
and
js
ins
call
mov
imul
movs
aam
sbb
xlat
lods
mov
pop
out
call
mov
das
jge
sbb
(bad)
sbb
jp
loopne
cdq
pop
retf
jp
loope
jl
jno
pop
(bad)
pusha
dec
add
sbb
cmps
xchg
push
xlat
in
jmp
sub
gs
ins
cmp
inc
and
adc
int
cld
or
push
(bad)
fs
out
pop
dec
sbb
movs
pop
(bad)
and
outs
jecxz
push
lahf
pop
and
mov
adc
inc
pusha
sbb
xor
xor
add
out
cmp
mov
sbb
inc
test
push
or
mov
sbb
in
rol
or
mov
nop
test
or
call
pop
lods
ja
loop
ja
pop
sar
add
dec
xlat
and
leave
ins
aaa
cdq
dec
add
jo
ss
jecxz
stos
das
inc
fnsave
jbe
lods
cmp
push
mov
sub
clc
dec
outs
fldcw
test
push
sub
pop
mov
mov
call
mov
or
sar
aaa
shr
stos
cmp
test
or
push
mov
dec
sbb
xchg
or
adc
xchg
or
inc
(bad)
pop
sahf
ds
push
xchg
test
outs
sub
outs
ret
loope
shl
cmps
arpl
xor
mov
fadd
jmp
out
jmp
inc
out
scas
movs
xchg
inc
ins
add
jne
and
out
inc
sbb
(bad)
push
inc
sbb
mov
dec
mov
addr16
mov
imul
sbb
xchg
dec
sbb
pusha
inc
cmp
fiadd
or
in
mov
mov
es
out
push
out
loope
push
outs
pop
loope
sub
(bad)
fst
adc
push
cmp
bound
dec
pushf
lahf
mov
je
push
ret
out
pop
xor
stos
aaa
pusha
in
mov
push
mov
cmp
fnstenv
call
into
enter
adc
fisttp
push
sub
mov
ja
(bad)
and
push
mov
and
mov
add
push
push
push
call
dec
(bad)
jmp
ins
add
add
mov
sbb
ret
cmp
sahf
dec
add
iret
sub
call
push
mov
mov
mov
cmps
jg
int3
lods
or
and
imul
and
pop
imul
call
add
fild
mov
icebp
or
or
and
into
mov
retf
scas
pushw
aam
vcvtuqq2ps
bswap
cmp
inc
dec
aas
inc
pop
push
or
adc
jne
cmps
or
or
mov
imul
popf
mov
shl
mov
jle
push
mov
cmp
add
test
jmp
daa
fdiv
mov
cmps
mov
dec
sub
(bad)
ror
pusha
hlt
xchg
xchg
mov
aas
jno
or
or
xchg
lods
xor
or
test
xchg
stos
jmp
push
shr
lock
lods
push
(bad)
sbb
aaa
and
inc
mov
fcom
jmp
pop
and
out
dec
sbb
sti
xlat
imul
leave
fs
out
cdq
cmp
test
sub
xchg
ja
repz
sbb
sub
int3
xor
(bad)
cdq
jb
not
jl
int
adc
sbb
call
mov
jmp
xor
pop
push
inc
out
jp
pop
sub
pop
sub
mov
inc
cmps
mov
std
mov
cmp
(bad)
mov
jo
sub
xor
add
xchg
cwde
and
push
xor
inc
mov
xchg
xchg
mul
push
add
push
ins
or
mov
push
sub
popa
addr16
sub
push
inc
sub
dec
inc
mov
stos
cwde
xchg
cli
pop
jno
fistp
dec
rcr
pop
xor
cmp
push
xor
xor
adc
pop
xchg
shl
retf
int
cmc
push
out
dec
mov
mov
fisub
jg
data16
xchg
pop
bt
mov
mov
push
mov
cmps
jmp
cmp
ins
je
and
push
loop
add
inc
jne
icebp
jmp
dec
imul
cmp
jl
shl
ret
nop
sub
mov
int3
xchg
test
idiv
mov
add
dec
sahf
jbe
not
or
xor
mov
pop
mov
ss
jmp
sar
fistp
popa
push
sar
xchg
mov
inc
call
ins
cmp
dec
mov
je
sahf
repz
mov
jle
stos
loopne
mov
xchg
clc
sahf
popa
lds
sar
cmps
sbb
out
jnp
(bad)
mov
test
dec
lahf
aam
and
push
fld
push
fild
call
xchg
and
rcr
frndint
jmp
aad
push
mov
sbb
in
push
mov
jle
xchg
push
inc
pushf
lahf
xor
xlat
sbb
pop
out
dec
xor
cmp
adc
jecxz
lea
mov
call
add
cmc
cmp
or
and
cld
adc
add
stc
adc
jge
xchg
mov
aas
fiadd
jno
sbb
and
sahf
jge
das
dec
or
push
mov
sub
mov
daa
vmulsd
pushw
add
sti
xchg
push
loope
add
jb
fiadd
sbb
or
jo
xchg
xlat
mov
call
and
or
add
test
adc
xchg
mov
add
xchg
lock
inc
xchg
sub
test
xchg
imul
inc
inc
fld
xor
ss
jle
and
mov
sbb
scas
dec
pop
ins
cmp
scas
dec
mov
repnz
sub
ds
in
xor
mov
scas
nop
xor
xor
ror
call
adc
imul
in
pop
add
dec
and
or
xor
dec
in
push
jnp
arpl
push
(bad)
adc
loope
sbb
dec
push
inc
add
loope
dec
scas
xchg
cmp
jbe
cmps
je
test
in
ins
sbb
pop
lods
aam
ins
ret
rcl
loop
push
js
daa
loop
xor
aam
mov
out
clc
out
ja
psrlw
mov
test
retw
inc
adc
shl
loope
aas
mov
inc
out
loopne
cmp
(bad)
int
inc
xchg
mov
adc
lea
fsubr
sbb
xchg
pusha
cmp
sub
pop
mov
out
xchg
sbb
jo
mov
lock
mov
loope
and
(bad)
hlt
sbb
pop
sbb
arpl
or
movs
lock
cli
sbb
mov
pop
out
xchg
out
ret
push
cmp
xchg
out
lods
inc
popa
lahf
fadd
aaa
cmp
iret
add
mov
dec
dec
jecxz
add
or
add
daa
movs
cmp
mov
add
jecxz
and
out
popa
retf
fisub
add
mov
in
inc
scas
xor
popf
xor
loopne
sub
int3
adc
fcmovu
pop
(bad)
push
add
sahf
out
lods
add
dec
imul
jl
mov
inc
add
inc
test
mov
(bad)
mov
or
add
loop
sahf
leave
add
jmp
outs
call
fxch
pop
xchg
xchg
dec
lds
xor
pushf
cs
aaa
sbb
push
mov
(bad)
clc
(bad)
push
out
rcr
jb
outs
aad
mov
add
movs
and
xchg
mov
ins
addr16
mov
mov
and
cs
inc
jo
push
mov
sbb
or
or
jp
dec
(bad)
out
lock
push
sbb
mov
push
retf
xchg
jo
shl
inc
movs
dec
or
sar
hlt
sbb
outs
stos
mov
add
aam
xlat
stos
jmp
movs
call
add
mov
push
shl
pop
ret
mov
cmp
out
ror
movs
aad
push
lods
out
(bad)
cmp
lods
and
(bad)
mov
dec
mov
leave
ins
fldenv
lea
sub
cmps
jp
ret
add
dec
xchg
mov
shl
mov
adc
push
jecxz
push
mov
mov
not
js
int
rol
aaa
dec
pushf
scas
mov
xor
cmp
push
jns
or
inc
xchg
fsubr
imul
adc
sub
ficomp
into
stos
jmp
icebp
test
mov
or
jmp
jo
push
dec
push
dec
out
push
or
add
push
or
jge
xchg
or
(bad)
cwde
mov
inc
add
dec
sbb
xor
pop
ret
pop
dec
dec
jmp
les
mov
iret
xchg
jecxz
pusha
enterw
mov
lahf
fadd
outs
inc
sbb
push
fs
add
repz
mov
dec
cmps
mov
xor
mov
fucomp
adc
cmp
pop
lds
add
push
jp
cmp
sub
pusha
pop
shr
sbb
js
mov
test
(bad)
into
daa
sbb
lea
out
outs
xor
jnp
aam
lods
out
sub
xchg
xlat
or
jge
mov
push
mov
mov
sub
cmp
cmc
xchg
ror
mov
or
cmp
jb
fcmovnu
dec
fisttp
and
jae
dec
push
aad
sub
popa
movs
sub
lock
movs
xchg
inc
and
and
dec
and
femms
shl
cmp
outs
int3
add
sub
xor
push
imul
test
mov
inc
dec
cld
enter
or
(bad)
xchg
popf
into
out
in
loope
add
shl
mov
adc
pop
rcr
das
pop
mov
cwde
adc
imul
jp
rcr
sub
mov
test
aaa
and
je
xchg
pushf
sbb
or
or
call
jg
test
mov
mov
and
aad
lahf
and
adc
ja
mov
pop
sub
push
mov
adc
(bad)
ror
pop
test
fwait
mov
test
jns
das
call
push
outs
mov
js
inc
idiv
mov
pop
lods
pop
inc
call
adc
imul
push
push
lahf
test
imul
int
xor
inc
pop
jecxz
sahf
outs
xor
or
jae
and
pop
xor
dec
sar
push
ret
mov
fdiv
push
adc
sub
cdq
mov
and
ins
je
jle
es
retf
lock
cmps
in
sub
mov
daa
loope
daa
mov
jo
jo
pushf
ins
ins
inc
int
mov
test
xchg
cld
inc
es
ins
and
jle
mov
adc
or
adc
dec
and
xor
jl
jne
add
pop
push
mov
test
sbb
inc
rcl
mov
adc
sbb
mov
or
dec
xchg
stos
lds
add
loopne
pop
ret
(bad)
repnz
sbb
mov
or
dec
sbb
(bad)
aas
inc
inc
mov
outs
(bad)
inc
fnsave
fnsave
lods
(bad)
psubb
repnz
imul
add
dec
sub
dec
dec
dec
adc
scas
shr
test
mov
jns
cli
add
push
lods
mov
int
pop
cmp
cmp
stos
or
iret
popa
retf
(bad)
mov
popf
loop
mov
fstp
mov
js
jg
inc
mov
push
jg
cmp
push
push
mov
scas
inc
icebp
repz
add
(bad)
(bad)
neg
loop
dec
loop
ror
push
fcomp
or
int
push
cmp
hlt
rol
stos
pop
ds
aas
xchg
xor
aad
loop
out
push
popa
cmp
adc
sub
out
and
or
xor
add
sub
cld
jmp
scas
cmc
and
sub
movs
and
jmp
nop
fcmovb
adc
dec
push
pop
nop
movs
movs
mov
cwde
fidivr
cli
test
aaa
dec
bnd
out
ret
shr
fild
scas
fcomp
dec
mov
call
push
(bad)
mov
mov
xchg
(bad)
xlat
ja
daa
rol
dec
jb
sub
fldln2
adc
mov
ins
xor
push
pop
push
push
add
jns
sub
mov
cmp
or
sub
and
shl
mov
jecxz
mov
adc
jnp
xchg
aam
xor
retf
gs
rol
mov
fsub
sub
push
ja
add
arpl
pop
packssdw
jl
inc
add
ja
push
adc
(bad)
call
dec
es
adc
cmps
fcom
call
enter
(bad)
ret
pop
mov
push
push
xchg
movs
push
mov
mov
add
cmp
scas
aas
mov
scas
fisubr
adc
xor
mov
retf
cmc
cmps
mov
mov
or
pushf
fcom
rol
scas
add
pop
push
inc
push
adc
daa
leave
outs
scas
or
popf
(bad)
leave
add
out
stos
pop
cli
cmp
jnp
or
or
cmp
test
pop
pushw
dec
outs
pop
push
(bad)
push
loope
mov
and
popa
fidiv
pop
sbb
inc
(bad)
pushf
out
mov
sbb
sbb
cmc
in
jno
adc
pushf
pop
sub
and
sub
xor
mov
and
sbb
mov
jg
rol
push
cmp
mov
jbe
dec
push
fs
lock
clc
hlt
jmp
fisubr
popw
repz
ret
iret
dec
and
xacquire
push
nop
push
push
lds
mov
pop
pop
fisttp
jno
pop
cs
retf
(bad)
dec
dec
stos
rcr
jle
adc
push
call
inc
movs
sbb
fs
sbb
fcmovnb
jp
xchg
pop
inc
loopne
adc
mov
je
dec
push
xor
xor
pop
call
sub
cmp
add
jae
outs
dec
pop
out
and
sbb
sub
add
les
fisubr
cmp
adc
das
dec
xor
mov
cmp
jl
pop
jb
jo
sbb
(bad)
retf
(bad)
aaa
dec
push
aam
pop
sub
mov
sub
ins
push
(bad)
call
ja
aad
stos
xchg
sbb
out
pop
mov
xchg
jmp
hlt
sti
aas
mov
cli
mov
jecxz
jmp
jle
int3
cmp
dec
jmp
mov
push
or
mov
arpl
mov
cmps
sub
lock
dec
sbb
lods
push
push
fcom
jne
outs
test
pop
lahf
add
jno
cld
jmp
out
rcr
stos
cdq
xlat
push
xchg
or
cmp
mov
add
ret
js
cmc
sar
mul
imul
rol
add
xor
sub
sbb
iret
into
mov
mov
inc
sbb
xchg
test
sti
out
xchg
jae
or
adc
sbb
lea
inc
or
mov
fcmovnu
mov
xchg
sbb
and
jne
mov
or
mov
arpl
pusha
add
mov
(bad)
es
dec
aam
fadd
pop
xor
and
push
mov
or
leave
cmp
add
sbb
shl
out
pop
push
adc
mov
jl
retf
dec
adc
or
(bad)
leave
jmp
mov
aaa
in
in
lods
mov
mov
adc
aas
dec
pop
jp
mov
jnp
xchg
jo
inc
cmc
leave
adc
pop
daa
xchg
lds
cmp
push
sahf
fadd
push
call
cli
cld
push
mov
adc
cmp
cmp
int3
and
add
in
sar
jmp
pop
mov
xchg
xor
cmp
and
and
js
pop
cmps
mov
pop
stc
jecxz
xchg
push
pop
fidivr
in
cdq
push
add
es
icebp
scas
fisttp
mov
(bad)
outs
cs
mov
mov
lods
sub
mov
mov
inc
pop
jno
repz
jbe
xor
lea
mov
std
xchg
scas
call
div
push
jl
xchg
inc
push
mov
xchg
call
and
push
jb
sub
fistp
add
pop
adc
ror
ja
pop
add
xchg
xchg
add
(bad)
aaa
je
mov
xor
dec
cmp
or
enter
or
sub
test
mov
jmp
xor
pop
push
mov
call
push
and
int3
or
hlt
sbb
adc
mov
add
out
sbb
cmps
sbb
nop
out
mov
mov
jle
xor
(bad)
inc
imul
sub
arpl
clc
in
les
or
adc
bound
dec
call
lds
ret
sub
mov
lock
xchg
xor
jmp
cdq
fucomp
or
fcmovne
add
lock
add
fcom
jge
dec
mov
popa
cmp
xlat
and
fdivrp
cmp
stc
pop
mov
(bad)
cdq
ss
sbb
movs
je
enter
and
sub
test
mov
sbb
push
adc
pop
in
push
inc
cs
inc
test
shr
mov
dec
inc
pop
mov
popf
sbb
jmp
and
or
dec
mov
dec
sub
xlat
add
bound
cmp
loop
enter
mov
stc
scas
add
dec
out
outs
les
xchg
fmul
mov
movs
push
fdiv
out
pop
out
mov
dec
xor
jae
lods
and
in
int3
inc
es
pop
mov
sub
pop
mov
inc
add
popf
xchg
jno
jl
neg
call
dec
cmp
xchg
jecxz
mov
pop
jmp
jl
sbb
fiadd
jae
sbb
xchg
mov
mov
cdq
movs
out
adc
pmulhw
and
fldcw
and
je
sub
loop
dec
jae
mov
into
sub
test
pop
sub
out
mov
loop
ja
daa
pushf
push
mov
jo
leave
mov
pop
loopne
and
sub
stc
fidivr
xor
or
xor
sbb
(bad)
aam
outs
js
and
scas
mov
push
sub
jbe
xlat
sub
out
xor
test
test
push
or
xchg
gs
lea
adc
fmul
push
jmp
sahf
add
jge
or
lea
jge
sbb
mov
or
fs
clc
jnp
ret
mov
and
inc
xchg
hlt
push
mov
jbe
adc
das
movs
js
fidivr
jo
push
xchg
mov
fisttp
cmp
jns
hlt
push
jmp
test
dec
pop
lds
or
jmp
jmp
(bad)
mov
(bad)
iret
push
mov
and
(bad)
loope
mov
dec
pop
scas
or
(bad)
cmp
inc
or
shr
dec
js
and
add
lahf
ret
sbb
push
mov
test
es
sub
cmp
sbb
push
outs
sbb
adc
push
mov
cmp
shl
gs
scas
xchg
pop
out
clc
push
cmovbe
fwait
inc
fcmovbe
lods
mov
rol
pop
in
leave
lods
jmp
fmul
xor
cmps
dec
inc
pusha
and
inc
xchg
out
xchg
scas
fsubr
mov
call
rcl
movs
repnz
xchg
cmc
imul
sub
mov
int3
inc
inc
xchg
and
lahf
pop
jp
aas
gs
cmp
iret
inc
int3
stos
push
in
add
ret
push
ret
add
xor
(bad)
or
mov
xchg
iret
dec
ja
xchg
retf
mov
cmp
jmp
out
outs
pop
adc
sub
xor
sub
dec
pusha
(bad)
inc
sub
aaa
ret
stos
cmps
call
ret
ret
neg
lea
jmp
push
mov
shl
jb
and
push
mov
push
stos
(bad)
test
add
xchg
dec
xor
je
sbb
sahf
xor
xchg
cwde
sbb
and
pushf
movs
(bad)
out
loope
mov
pusha
xchg
and
mov
fstp
(bad)
dec
xchg
inc
inc
stos
jl
mov
xchg
fimul
inc
adc
in
xchg
scas
sub
and
xchg
xor
nop
nop
adc
out
aas
mov
nop
sahf
enter
xlat
fadd
ficom
pop
hlt
ret
mov
adc
fcomp
(bad)
or
adc
cli
fistp
jbe
xor
xlat
sti
jecxz
and
cmp
into
mov
pop
rcr
std
das
jno
xor
fld
call
inc
imul
imul
nop
in
and
aad
or
xchg
inc
xor
add
pusha
jnp
xchg
inc
mov
movs
inc
push
fmul
es
push
cmps
lock
xchg
ds
repz
mov
ds
mov
xchg
push
add
in
sub
movs
stos
inc
in
adc
pop
retf
mov
test
pop
test
iret
fbld
mov
shl
lods
neg
inc
xchg
xchg
pop
cwde
stos
popa
sub
ins
mov
mov
or
cmp
push
push
xchg
jl
xor
jmp
push
push
dec
mov
fist
sbb
dec
ror
retf
add
push
cli
scas
cmp
jns
cmps
fcomp
mov
aam
sahf
sub
jnp
and
jle
(bad)
push
dec
sbb
mov
xor
xlat
cmps
sbb
pop
sub
pop
add
add
ret
cmp
jae
je
push
sti
xor
adc
xchg
retf
pop
imul
and
inc
outs
mov
fcmovnb
movs
xor
ins
and
jno
popa
sbb
dec
cmps
jo
adc
sub
popa
fbld
lods
scas
repz
fs
mov
lea
fstp
(bad)
pop
push
out
ret
int3
or
sbb
pusha
pop
icebp
movs
das
or
stos
xchg
push
gs
mov
gs
popa
iret
loop
push
xor
jo
pop
cs
adc
cmp
addr16
add
imul
popa
shl
mov
inc
xor
xor
sar
fsub
adc
mov
sub
sahf
out
push
dec
sbb
push
and
imul
xchg
cmp
leave
sbb
scas
jg
lods
mov
xchg
test
cmps
or
gs
and
and
inc
xor
in
xchg
dec
inc
clc
pop
mov
addr16
in
lahf
sbb
jmp
or
mov
leave
lea
cmc
das
dec
aaa
test
sahf
outs
pop
push
push
mov
push
and
push
clc
mov
test
xchg
call
cld
sbb
inc
call
gs
mov
mov
sbb
sub
popf
outs
xchg
jl
ss
out
jl
jle
sar
dec
sbb
enter
and
inc
jne
loope
cmp
pop
sub
and
imul
pop
popf
cli
getsec
sti
or
lods
js
cmps
push
or
mov
pop
xchg
jo
or
xchg
loop
(bad)
mov
push
xchg
pop
mov
xchg
fdivp
sti
int
jae
std
mov
mov
stc
sub
jbe
cwde
or
mov
in
cmps
add
sbb
enter
jmp
inc
mov
cmps
jae
cmp
rcr
loopne
ja
cwde
push
imul
clc
lds
sbb
pop
inc
push
mov
cs
iret
rcl
inc
sub
or
pop
jnp
mov
dec
repnz
pop
add
mov
popa
and
das
mov
push
xor
iret
lahf
popa
sbb
xor
movs
adc
sub
out
pop
repz
mov
sub
or
scas
cmp
das
adc
or
cmp
or
call
dec
mov
adc
sar
(bad)
mov
jmp
cmp
rcr
nop
(bad)
and
push
jmp
out
das
push
(bad)
jmp
sahf
fwait
sahf
sub
cmp
cmc
and
scas
sbb
outs
and
shr
and
inc
dec
sbb
xor
aaa
add
int3
or
idiv
xor
adc
mov
xchg
pusha
mov
and
mov
sbb
pop
or
add
xor
cdq
pop
xor
popa
popa
mov
sub
xor
(bad)
inc
(bad)
xchg
mov
arpl
or
mov
inc
dec
and
js
mov
jmp
cmc
(bad)
dec
js
adc
add
inc
lds
xchg
in
aaa
(bad)
out
lds
and
outs
cmps
enter
popf
xchg
dec
fcmove
pop
in
inc
add
dec
loope
xlat
lahf
pop
ret
push
add
les
retf
shl
push
push
loope
or
jmp
xchg
cmp
push
into
retf
inc
mov
pusha
mov
loop
aad
push
cmp
xchg
or
sbb
mov
neg
xchg
int
push
inc
ins
ja
pop
gs
push
call
mov
cmp
ja
push
sbb
mov
call
push
jnp
adc
(bad)
addr16
cmp
xchg
pop
clc
pop
cmp
sbb
aad
sbb
pop
cmp
sbb
fxch
lock
pushf
fs
mov
xchg
es
lods
sub
cdq
loop
pop
mov
adc
or
push
dec
xlat
inc
mov
aad
mov
loop
mov
nop
cmp
pushf
stos
add
sbb
mov
retf
dec
or
data16
(bad)
inc
push
out
in
pop
retf
mov
xor
(bad)
mov
push
or
pop
test
cmp
sub
pushf
dec
cmc
in
xor
cmc
lock
mov
in
dec
retf
adc
xor
sbb
dec
push
and
lock
adc
shl
inc
jbe
inc
test
cmp
push
sbb
push
push
xchg
jmp
out
cwde
adc
mov
inc
xor
xchg
nop
push
aas
fstp
cmp
gs
call
push
enter
xchg
pop
retf
imul
pop
mov
push
and
sbb
dec
and
xor
repnz
test
retf
jb
add
push
into
pop
rcr
inc
sbb
sar
outs
ss
jbe
push
fild
pop
gs
aas
add
mov
mov
(bad)
fcom
mov
add
rol
adc
cld
mov
sbb
sub
inc
imul
idiv
jns
lods
cwde
cmp
pop
fcom
int3
add
fdivr
arpl
mov
dec
jl
mov
std
mov
(bad)
adc
jmp
icebp
adc
addr16
or
add
sub
dec
dec
push
ins
loope
pop
mov
adc
daa
or
lea
cmp
pop
adc
inc
sub
pop
mov
xchg
inc
cld
enter
add
lock
fisttp
add
push
adc
mov
out
sbb
add
sbb
inc
fdivr
fnstcw
imul
push
out
push
mov
lock
mov
(bad)
leave
xor
cld
je
inc
and
adc
int3
push
nop
cmc
test
cld
out
push
stc
or
jecxz
icebp
imul
cwde
xchg
xor
clc
jo
stc
mov
in
and
les
leave
ds
sub
std
movs
add
test
sti
repz
xchg
sbb
inc
fwait
adc
xchg
aam
add
push
add
aas
inc
add
adc
pop
cs
jg
mov
inc
imul
mov
push
out
cmp
adc
cmps
rcl
call
les
jae
dec
pop
test
call
call
push
jno
imul
lods
ds
sahf
out
cld
pop
pusha
mov
jl
or
cwde
mov
sbb
pop
adc
cli
sub
(bad)
adc
push
lea
inc
cmps
jg
pop
cmp
sti
lahf
test
dec
ja
pxor
push
movs
clc
rcl
out
lds
es
cmps
xor
jle
push
test
xor
aaa
ins
xlat
arpl
stc
repz
js
(bad)
or
mov
add
scas
(bad)
add
ror
jmp
inc
sbb
xor
ja
dec
cmp
adc
dec
add
icebp
cs
jmp
xor
outs
(bad)
xor
repz
jl
add
nop
mov
aad
dec
pop
xchg
dec
sub
cmp
cdq
mov
ret
add
rol
fwait
or
sbb
mov
jle
in
lea
fstp
pop
not
or
adc
ins
dec
cmps
mov
into
add
lea
adc
outs
rcl
fadd
repnz
addr16
cmp
cmp
sbb
out
xor
dec
mov
dec
out
nop
mov
addr16
rol
cmp
mov
out
jmp
inc
mov
push
xchg
scas
in
push
sub
adc
dec
sub
inc
icebp
in
lahf
and
in
push
sbb
daa
xchg
adc
(bad)
int
or
push
jae
add
mov
outs
pop
inc
jns
mov
and
jae
mov
mov
test
push
sub
push
test
lahf
add
adc
pop
inc
loopne
mov
push
jbe
fild
adc
fdivr
mov
sbb
call
icebp
mov
cdq
add
or
mov
sahf
arpl
cwde
mov
adc
ins
or
or
test
mov
sbb
adc
sbb
out
ds
push
mov
mov
jmp
test
in
popf
xchg
test
mov
fadd
cld
pop
lahf
cmps
out
adc
je
inc
mov
movs
sub
xor
xchg
add
cli
ds
mov
aam
jns
mov
loopne
and
test
cmp
(bad)
movs
cdq
push
retf
lea
jne
jnp
mov
lock
jnp
jns
out
sbb
pop
outs
pop
test
aaa
(bad)
sti
or
repz
sbb
test
loopne
mov
cmp
and
and
fist
inc
lahf
pop
inc
cmp
stc
mul
ret
sub
xor
and
mov
cmps
scas
mov
test
lods
stc
jmp
add
data16
iret
ja
pop
jbe
xor
xchg
xchg
rol
xchg
and
add
push
xchg
call
jno
and
mov
cmps
std
fidiv
sub
xchg
add
jmp
sub
cmp
pop
add
ins
mov
hlt
lds
(bad)
mov
je
sub
and
push
imul
sub
inc
jmp
jno
aas
std
and
les
fisub
or
movs
sbb
or
sub
iret
iret
pop
lods
(bad)
push
xor
push
push
fsub
out
jne
shl
(bad)
repz
sub
loopne
outs
and
push
pop
aaa
inc
fmul
mov
ins
(bad)
lahf
les
xchg
ja
outs
cmc
movs
in
sahf
stc
test
or
xor
jmp
jg
adc
lods
fld
pop
or
lidtd
pop
dec
aas
push
cmp
add
div
adc
test
and
xor
cmps
dec
inc
sub
(bad)
sub
in
ja
jp
xchg
push
and
mov
shl
mov
cmc
frstor
repnz
test
and
push
(bad)
aam
mov
adc
xchg
pop
addr16
div
mov
mov
inc
push
pop
mov
mov
pop
frstpm(287
push
mov
or
mov
xor
ficomp
and
jnp
out
fidiv
dec
enter
and
mov
add
jb
sub
cmp
adc
(bad)
xchg
mov
dec
outs
and
jae
cmp
enter
mov
fucom
out
cmp
inc
or
je
xchg
mov
cmp
aaa
inc
pop
ret
cmp
push
out
pop
jmp
jp
xchg
inc
in
inc
xor
mov
push
rol
shr
inc
mov
mov
push
mov
mov
in
daa
sub
pop
dec
xchg
push
in
jle
pop
inc
or
mov
add
add
loop
xor
jnp
arpl
jecxz
sbb
inc
sub
add
sti
(bad)
and
or
sbb
inc
mov
rcl
mov
mov
mov
lods
mov
sub
xchg
(bad)
xor
push
aam
inc
jnp
cwde
sbb
loop
loopne
cmp
jl
fdiv
aas
inc
xchg
(bad)
stc
pop
cwde
fst
in
and
mov
and
adc
pop
(bad)
(bad)
sub
loope
lods
bound
nop
mov
jmp
and
fmul
das
nop
jmp
dec
pop
adc
cmps
ret
pop
adc
fdiv
adc
mov
int
(bad)
mov
loopne
sbb
loope
int
loopne
or
jnp
mov
fndisi(8087
mov
cmp
scas
stc
mov
mov
dec
jecxz
pop
push
mov
fdivr
in
xchg
jns
mov
aam
or
xchg
add
aas
adc
and
sbb
mov
xchg
or
inc
popa
and
js
add
cmp
cld
lea
popf
adc
sti
pop
pop
ins
add
xchg
pop
jge
add
add
fld
jne
stc
gs
xchg
test
cld
cwd
jecxz
enter
and
clc
leave
aad
fs
(bad)
push
inc
dec
scas
push
sub
pop
cmp
sub
hlt
adc
sub
xor
pop
cmp
sub
icebp
mov
sti
aad
data16
mov
push
fimul
stc
mov
fs
adc
sub
lahf
mov
sub
adc
(bad)
out
jmp
push
into
jg
jns
imul
pop
xchg
sbb
xor
sub
or
mov
add
das
aam
mov
scas
out
inc
daa
jl
(bad)
in
fstp
jge
retf
jp
pop
sub
cmp
push
into
mov
pop
jg
mov
jmp
ret
mov
mov
push
gs
rol
sub
mov
adc
adc
and
imul
sar
or
hlt
jge
sbb
jmp
clc
mov
int
retf
outs
movs
(bad)
or
mov
popa
fld
xor
outs
outs
jmp
pushf
mov
dec
iret
jns
popf
cmp
pop
dec
loopne
xlat
adc
mov
pop
repnz
bound
and
add
shl
jge
sahf
add
sbb
fcmovb
lods
cmc
xchg
and
mov
sub
mov
aaa
push
retf
or
xchg
push
add
inc
jle
js
stos
dec
add
xchg
pop
aaa
push
mov
aad
je
xor
stos
ss
jl
cwde
push
push
mov
push
sub
lods
mov
inc
xor
mov
lea
xor
pop
jmp
push
push
(bad)
jg
xchg
dec
iret
mov
xchg
aam
pop
cli
xchg
ins
add
fdivrp
aad
xchg
bound
repz
int
adc
test
and
movs
add
shl
les
push
frstorw
arpl
push
jne
fs
jne
enter
das
shl
xchg
inc
push
xchg
xor
mov
fwait
and
ins
inc
iret
push
push
daa
addr16
sbb
iret
cmp
pop
cmc
scas
inc
(bad)
mov
dec
mov
push
and
movs
push
das
mov
ins
sbb
int3
outs
retf
std
imul
lds
std
dec
pop
lock
cmp
xchg
mov
jae
cld
arpl
in
shr
xchg
ss
out
adc
int3
and
push
cdq
xchg
das
dec
test
dec
add
sti
retf
ins
dec
enter
out
sub
(bad)
in
vmptrst
xor
jns
or
push
add
push
xor
jo
push
sub
sbb
jns
call
push
mov
stos
es
jecxz
sub
gs
mov
mov
aam
les
xchg
push
popa
fs
hlt
lds
xor
or
inc
xor
dec
inc
movs
loope
fdivrp
in
or
loopne
mov
fwait
(bad)
push
popa
imul
mov
push
stos
adc
inc
cmp
loop
imul
inc
jle
and
jo
or
add
stos
xchg
xchg
retf
sub
rcl
loope
(bad)
jmp
das
repnz
and
jns
sub
test
xor
mov
inc
hlt
aad
pop
(bad)
jo
inc
jo
pusha
xchg
and
inc
dec
dec
mov
push
sbb
pop
push
mov
mov
loop
jno
and
pop
sub
dec
enter
aam
cmp
dec
(bad)
loop
cwde
fwait
xor
mov
fild
xchg
jb
and
cli
xor
xchg
push
ret
cmp
dec
mov
or
xchg
lds
lods
xchg
dec
push
cmp
in
cmps
jmp
and
es
or
jmp
dec
adc
outs
aas
lock
sar
aam
pop
inc
jl
sbb
jb
push
push
out
aam
fisttp
rcr
and
(bad)
sbb
popf
pop
(bad)
or
mov
gs
stos
clc
sbb
hlt
mov
lock
pop
test
fisttp
scas
push
int3
mov
stc
and
dec
mov
xchg
xor
add
cld
pop
xor
push
push
jmp
pop
neg
ins
cmc
icebp
ja
clc
dec
je
inc
ds
stos
dec
add
lahf
inc
sbb
inc
or
iret
fwait
pop
or
pop
pushf
jmp
adc
loopne
sbb
mov
mov
inc
ss
(bad)
jmp
sahf
push
dec
lods
jecxz
aas
lods
and
ss
jne
sbb
cmp
retf
mov
inc
jnp
sub
popa
and
popf
lea
push
sti
(bad)
(bad)
or
test
arpl
or
icebp
push
ins
jne
xchg
rcr
jnp
cwde
lds
neg
mov
lods
push
or
(bad)
pop
stos
aam
dec
aaa
cmp
loop
fcmovne
and
pop
ror
dec
lock
shl
pop
jb
(bad)
loopne
xchg
pushf
jmp
add
int
sbb
or
out
sub
cmps
xor
cld
push
cld
xor
cmps
bound
cmp
pop
frstor
inc
cmp
int3
dec
lock
dec
xchg
xchg
out
scas
int
(bad)
push
cmp
pop
mov
nop
mov
sbb
das
push
mov
inc
aam
push
xchg
cs
and
mov
bound
inc
jp
dec
mov
cdq
cmc
sub
sub
cmp
cmp
out
mov
pop
mov
cmp
xchg
sahf
xchg
sub
fistp
stos
test
hlt
mov
dec
adc
push
aad
fsubr
popf
cld
push
test
xchg
xchg
ret
push
outs
sbb
test
sbb
adc
mov
test
(bad)
movs
sahf
int
cli
cmp
adc
mov
loopne
ins
mov
and
jle
adc
test
jb
icebp
xlat
mov
mov
(bad)
pusha
mov
mov
(bad)
mov
lea
loope
data16
pop
inc
test
add
data16
leave
fwait
push
cli
xor
mov
rcr
mov
cmp
(bad)
cmps
xor
out
es
mov
nop
push
and
ret
pop
lock
jl
pop
mov
cmps
inc
es
xchg
xchg
add
sub
and
out
pop
sbb
mul
jl
and
rol
inc
sub
cmp
jp
fnstcw
inc
outs
push
call
sub
(bad)
not
sbb
add
dec
jg
fst
sbb
int3
sub
int
movs
popf
mov
clc
mov
cmp
out
sti
cmp
and
scas
in
sub
rcr
pop
mov
cld
loop
push
in
(bad)
iret
int
mov
lock
mov
loopne
inc
lods
mov
and
mov
mov
js
iret
jmp
jo
retf
inc
aaa
hlt
movs
out
or
(bad)
adc
jl
frstor
sbb
adc
aas
adc
ins
iret
cmc
cmp
push
fmul
xchg
xor
fscale
shl
pop
jns
push
vpminub
xor
pop
or
shl
mov
add
popf
pop
dec
cmp
mov
mov
hlt
lods
and
fnstsw
call
retf
ss
xchg
mov
lahf
push
push
jno
not
in
or
ja
and
pushf
(bad)
ffree
inc
jns
repz
(bad)
mov
loopne
jns
stos
and
xchg
scas
stc
mov
add
sbb
and
sbb
(bad)
cld
pop
in
and
sub
jle
fsubp
xorps
int3
inc
call
push
cmp
xor
cmp
mov
cmp
iret
leave
cwde
inc
mov
cmp
enter
fucomp
test
pop
pushf
stos
jne
call
bound
inc
jl
clc
push
jno
adc
pop
adc
cmps
iret
in
in
jp
in
inc
mov
sbb
stc
repnz
mov
xor
into
mov
(bad)
in
daa
data16
sub
push
ret
daa
jecxz
push
cli
cwde
cwde
push
sbb
sbb
pop
ret
pop
jbe
(bad)
popa
pusha
call
xor
movs
out
sbb
dec
pop
mov
jo
ret
push
das
fisub
pop
jne
(bad)
mov
daa
mov
(bad)
rsm
stos
and
mov
leave
push
adc
ror
or
dec
push
les
dec
or
stos
fs
push
xchg
das
push
dec
out
loopne
add
imul
mul
push
shr
mov
sub
push
jecxz
push
jne
or
push
jg
call
mov
push
mov
lods
clc
popa
hlt
add
movs
mov
out
xlat
dec
out
pop
jb
aam
adc
mov
and
je
(bad)
lahf
jle
lods
pop
adc
test
leave
mov
xchg
rcpps
rol
and
mov
mov
cmp
repz
mov
or
push
outs
cdq
ja
inc
push
ficom
stc
push
call
dec
movs
mov
adc
push
jecxz
in
sub
xor
iret
ficom
mov
push
sbb
add
sub
xlat
mov
xchg
mov
pop
adc
icebp
mul
movs
add
jae
arpl
in
mov
(bad)
shl
mov
retf
or
add
arpl
fidivr
xchg
pushf
ror
pop
sbb
mov
cmp
(bad)
mov
push
sbb
call
cmps
leave
fmul
and
mov
jbe
ror
push
(bad)
in
dec
or
aad
xor
repz
sbb
pusha
in
int
adc
cmpps
clc
adc
mov
movs
les
rcr
mov
sahf
mov
adc
rcl
sbb
retf
mov
lea
or
sbb
sub
adc
mov
cmp
mov
mov
shr
aam
adc
pop
mov
mov
repnz
fstp
jno
pop
ins
dec
sbb
cs
call
push
std
pop
popw
push
push
enter
mov
hlt
jnp
push
test
cld
fucomip
fwait
cmp
scas
xor
and
dec
div
xor
lock
mov
lds
stc
add
mov
into
xchg
jbe
mov
push
es
sub
sar
mov
sub
shr
call
xchg
sbb
emms
sti
xchg
mov
dec
mov
and
xchg
mov
add
mov
and
lods
cmp
pxor
push
cwde
jmp
cvtps2pi
adc
jns
sbb
adc
mov
je
clc
xchg
pop
sub
push
mov
test
mov
xor
mov
pushf
push
scas
pusha
pop
adc
push
out
fsubr
push
ins
inc
into
pusha
enter
cmps
shr
retf
or
dec
int3
test
enter
rcr
adc
sub
inc
mov
sbb
lods
popf
in
push
sbb
lods
movs
ret
xchg
cmp
or
jg
and
adc
mov
inc
jle
inc
pop
mov
ds
(bad)
mov
push
nop
jg
test
js
or
repnz
repz
retf
jbe
push
xchg
lea
adc
cmp
adc
out
mov
or
scas
fwait
(bad)
cmps
shr
push
cmp
enter
pushf
fiadd
sbb
and
(bad)
cmps
repz
add
ret
xchg
push
aas
xor
cld
or
(bad)
cmps
jg
loopne
push
mov
rcl
dec
cmp
adc
xor
cmps
imul
iret
sti
shl
imul
mov
(bad)
loopne
push
jbe
push
fwait
mov
into
xchg
inc
and
clc
jne
je
lock
add
mov
jp
and
pop
or
mov
pop
push
adc
int
test
loope
xchg
(bad)
cmp
inc
jno
stc
push
cmp
call
xchg
ss
fidiv
sbb
xor
or
cmp
call
or
jecxz
add
test
add
jnp
(bad)
sahf
dec
inc
xchg
jl
fisub
ret
cmps
cdq
(bad)
fsub
push
mov
pop
xchg
add
jmp
nop
or
sub
or
cmp
fs
push
enter
inc
xchg
pop
sub
mov
scas
adc
add
inc
arpl
mov
xor
jmp
push
aaa
mov
mov
sub
dec
mov
loope
shl
cmp
xchg
(bad)
lods
imul
mov
mov
lock
movs
stc
rcr
das
es
test
mov
cmps
aas
dec
or
push
or
mov
jns
ds
lock
dec
and
mov
inc
nop
adc
nop
cmp
les
shl
loopne
jmp
or
call
js
jmp
jmp
aad
(bad)
fmul
mov
out
stos
jmp
imul
lahf
test
lods
sub
add
aaa
mov
out
fcom
jp
ins
shl
and
and
jmp
inc
mov
mov
mov
not
sbb
mov
aas
bound
dec
jl
pop
inc
add
mov
cmc
jno
adc
cmps
into
push
jg
je
jg
add
dec
fild
xor
shr
jne
xchg
mov
bound
data16
mov
xchg
xor
push
cwde
xchg
(bad)
inc
pusha
mov
and
pop
test
add
lea
add
lock
out
push
add
iret
out
pusha
adc
adc
ins
cmp
out
ins
push
sbb
adc
enter
idiv
mov
sbb
xchg
fs
add
dec
stc
int3
sahf
jmp
fdiv
push
fstp
or
je
jmp
add
jns
(bad)
imul
mov
pusha
rol
jbe
dec
int
mov
sub
je
push
or
sub
loopne
mov
cmp
sti
inc
mov
dec
sub
pusha
stos
cmp
dec
aas
cwde
pop
jnp
movs
adc
inc
cmp
jmp
test
stc
das
stos
loope
push
(bad)
pop
or
inc
jns
lods
mul
lahf
jle
rcr
int3
push
dec
out
lds
add
add
mov
mov
jl
sub
(bad)
pusha
mov
mov
add
jecxz
aaa
out
xchg
gs
and
nop
pusha
lock
and
cwde
or
sbb
push
xchg
fidiv
nop
es
je
aam
adc
push
call
cmp
pop
icebp
xchg
dec
mov
push
out
pusha
int3
and
ja
lea
leave
cmp
mov
inc
loopne
fimul
push
jle
aas
xchg
fist
xchg
not
int
daa
pop
mov
push
xchg
out
dec
mov
not
imul
movs
loope
pop
jnp
cmps
jg
lahf
push
push
repz
daa
adc
lea
outs
aaa
repnz
jmp
xchg
sub
push
icebp
xchg
xlat
jp
or
popa
jl
jae
sub
ret
or
lock
cmc
xchg
out
jg
rcl
cmc
loope
mov
ror
inc
inc
shl
scas
ficomp
adc
mov
stos
push
pop
iret
outs
repnz
mov
mov
fadd
out
cld
shl
sbb
je
jg
add
pusha
dec
mov
nop
retw
inc
and
xor
mov
inc
retf
and
aad
inc
add
in
aad
retf
xchg
push
pusha
ds
das
push
aas
mov
imul
push
ins
add
shl
mov
cmps
ins
sub
cmp
stos
leave
mov
mov
push
jbe
ins
mov
and
jge
mov
mul
fidiv
sub
cli
scas
sub
shl
mov
ds
inc
iret
mov
mov
or
daa
pop
retf
sbb
in
rcr
mov
pop
pop
cmp
clc
mov
mov
lods
sbb
les
mov
in
jp
daa
cmps
push
dec
sub
pop
jl
stos
es
sbb
das
mov
or
sbb
sub
pop
sbb
or
push
pushf
cdq
and
aas
in
push
inc
clc
jne
pop
mov
xor
and
xor
push
or
loopne
imul
sub
dec
lahf
xchg
or
repnz
xor
push
enter
inc
dec
xchg
xor
aas
(bad)
fnsave
pop
in
cs
fist
add
inc
inc
push
inc
nop
fisub
push
scas
(bad)
lea
(bad)
(bad)
mov
sti
or
jo
push
imul
mov
or
sti
pop
dec
rol
rol
cmp
sbb
test
fcom
ret
push
and
fdivr
xor
xchg
add
inc
cmps
xor
loope
cmc
mov
in
sbb
scas
add
aas
mov
xchg
stc
push
out
mov
push
lahf
add
imul
jl
xchg
xchg
stos
add
inc
mov
lods
ds
mov
xchg
pushf
or
jge
dec
xchg
xchg
mov
clc
loopne
xchg
pop
push
add
jmp
pop
inc
xor
fwait
lods
aad
mov
dec
ret
je
out
inc
mov
ins
fsub
or
xchg
sti
int3
jne
add
hlt
nop
ja
cmp
aaa
mov
out
add
mov
das
clc
pop
outs
sub
sbb
xor
sbb
or
push
or
xor
adc
ret
mov
or
dec
fbstp
test
xor
sub
cmc
xor
inc
xchg
cli
and
ds
shufps
dec
aad
mov
mov
inc
in
add
pop
bswap
addr16
sbb
add
jne
ja
pop
inc
cmc
addr16
mov
mov
ds
jo
sbb
adc
dec
pop
push
das
adc
xchg
push
(bad)
icebp
fisttp
pop
daa
push
(bad)
dec
lahf
loop
clc
pop
ds
stos
mov
cdq
cld
out
sahf
lahf
leave
dec
enter
pop
mov
sub
sub
sbb
call
ja
cld
lods
stos
xor
jmp
retf
retf
jg
jb
inc
lahf
outs
lods
xlat
out
pop
retf
ds
jno
(bad)
in
(bad)
retf
(bad)
or
loop
cmp
out
sbb
push
loop
and
sub
pop
(bad)
cmp
sub
pushf
xchg
xchg
sti
add
les
xchg
lahf
xchg
jp
xor
pop
inc
sbb
pop
jg
out
fstp
jbe
xchg
sbb
sub
lock
ins
aas
sbb
loopne
pusha
and
push
xchg
xchg
pop
cli
lds
sbb
(bad)
loop
repz
in
cwde
dec
shr
ret
inc
add
add
fldenv
mov
push
add
jno
mov
jl
loopne
mov
aas
dec
cmp
mov
and
sar
mov
push
rcr
retf
pop
pop
ret
jg
add
out
mov
fnsave
movs
jb
std
in
scas
xchg
cli
or
nop
pop
add
sbb
jg
clc
cmps
ror
mov
arpl
cmp
lock
ror
add
(bad)
pushf
xchg
push
mov
or
(bad)
movs
sbb
sub
neg
or
cmps
adc
ret
inc
scas
jecxz
out
cs
or
outs
push
xor
mov
sti
mov
mov
into
jae
jmp
and
cmp
mov
call
mov
stos
xchg
or
ja
sub
sti
cdq
add
xor
push
cld
mov
and
push
sbb
ins
dec
in
xor
in
pop
adc
sub
pop
es
int3
jne
adc
adc
jnp
or
(bad)
in
in
or
jg
cli
jge
push
add
call
gs
pop
shl
ss
inc
stos
mov
ret
shr
mov
jmp
stc
xchg
into
push
add
mov
sar
gs
cld
cwde
loop
test
sti
ss
and
imul
(bad)
xor
jp
dec
in
mov
add
jmp
sub
inc
std
sbb
cmp
clc
xchg
je
stc
xchg
push
cdq
outs
inc
lock
push
call
mov
or
aaa
ret
inc
fld
or
loope
ret
pop
push
stos
popa
jmp
sbb
sub
pop
shl
mov
test
dec
xchg
dec
mov
sub
sbb
in
repnz
jmp
es
push
outs
xchg
mov
xor
jg
xchg
cmps
inc
je
xchg
shl
hlt
fistp
inc
inc
pop
bound
jnp
sbb
inc
mov
cmp
jg
fisttp
pop
push
(bad)
dec
lahf
push
int
dec
repnz
jnp
jnp
stos
ds
cmp
fnstsw
jge
add
mov
jae
imul
dec
sub
pop
outs
ret
in
adc
dec
aas
nop
add
adc
and
sar
dec
jno
sbb
sub
icebp
cmp
(bad)
das
pusha
mov
dec
inc
cld
icebp
es
into
(bad)
(bad)
outs
xor
mov
(bad)
push
in
sahf
mov
fstp
ret
fs
xor
jne
fsub
sub
dec
call
cmp
out
sti
adc
xor
(bad)
sub
sar
sub
cmp
adc
daa
sar
cld
in
pop
sar
cli
sti
xor
adc
aad
dec
mov
mov
push
out
leave
fld
pusha
rcl
cdq
dec
movs
sti
mov
ins
out
cmp
pop
jmp
sub
adc
sub
fs
lahf
jmp
hlt
shl
mov
mov
dec
jmp
cmp
sbb
jae
fist
js
inc
in
fbstp
sub
push
pop
inc
das
mov
mov
jg
mov
imul
push
pop
sbb
ficomp
jmp
inc
jmp
stc
add
aas
jg
jmp
mov
push
mov
fmul
sub
cli
test
jb
cmp
cs
sahf
xor
lods
out
and
bound
jg
mov
inc
in
dec
outs
pop
xchg
dec
xchg
outs
leave
ins
xchg
xchg
imul
pop
xchg
outs
leave
mov
inc
dec
jb
mov
jl
mov
enter
sbb
jo
or
int3
aas
in
mov
xchg
adc
or
call
and
xchg
xchg
mov
jl
lfs
and
les
mov
fimul
or
(bad)
aas
pusha
imul
xchg
xor
xchg
ss
jmp
fild
add
adc
push
test
jmp
cmps
lods
xlat
cmps
ins
int3
lahf
jb
repnz
dec
dec
xchg
iret
idiv
jle
mov
dec
fild
mov
outs
ss
cmp
pop
push
out
gs
(bad)
loope
inc
fcmovu
std
fisubr
out
mov
mov
jle
jmp
loope
push
aaa
aam
js
test
retf
lea
icebp
inc
mov
sbb
repnz
push
loopne
jl
jno
jp
shr
mov
and
int
test
lds
mov
add
fs
push
hlt
inc
int
and
sbb
idiv
xchg
mov
into
push
jmp
mov
les
mov
push
sahf
and
pop
pushf
cdq
fucomp
call
adc
mov
add
fwait
pop
pushf
cdq
xor
inc
inc
or
sti
das
pop
mov
mov
xchg
dec
mov
aaa
or
idiv
inc
lahf
ret
movs
lahf
bound
mov
or
or
cmc
inc
test
cld
sahf
cmp
cld
xor
jnp
pop
dec
shl
shl
not
mov
jmp
das
shl
popa
push
imul
dec
aaa
mov
adc
pop
and
sbb
sub
clc
push
loopne
(bad)
and
repnz
mov
mov
lock
bound
mov
out
stos
int
and
pop
add
sub
dec
push
adc
mov
std
jge
(bad)
lahf
lock
mov
mov
push
mov
lea
and
je
pushf
dec
inc
pop
fwait
bound
fwait
jle
mov
jae
adc
jge
or
sti
and
mov
sbb
cwde
aaa
lea
jnp
sub
and
scas
xor
dec
gs
stc
adc
add
or
jbe
add
mov
in
out
inc
xchg
ficomp
sbb
dec
adc
cmps
or
in
addr16
rcl
sub
xor
add
ds
pop
stc
adc
cmps
pop
das
cmp
lock
aad
jge
mov
stos
cmp
inc
(bad)
or
es
pop
ret
jo
or
in
xchg
xchg
sbb
pop
mov
arpl
(bad)
mov
jp
lds
dec
mov
(bad)
out
xchg
mul
mov
movs
hlt
jb
dec
mov
scas
jnp
repnz
jecxz
inc
jl
jge
(bad)
xchg
mov
mov
aam
mov
(bad)
in
fwait
movlps
int
xor
or
dec
fnstcw
jmp
jns
or
cwde
sub
(bad)
in
adc
push
cmp
jle
cli
test
data16
sub
hlt
hlt
inc
(bad)
xor
hlt
inc
push
jmp
or
call
ja
xchg
cmp
and
mov
div
nop
loop
sbb
dec
add
and
rsqrtps
adc
dec
push
test
add
mov
add
dec
sahf
mov
add
pop
xchg
inc
xor
mov
pop
(bad)
push
call
loopne
(bad)
and
ins
jnp
test
not
xor
pop
sbb
(bad)
fadd
xchg
(bad)
mov
cmp
loopne
aas
jge
sbb
dec
push
jl
(bad)
call
sbb
call
cmp
jmp
sub
dec
cmp
addr16
jns
jae
repnz
fild
push
pusha
icebp
lods
adc
jle
popf
mov
mov
icebp
or
mov
movs
fcomp
movs
and
into
mov
dec
jmp
mov
ds
add
fs
ins
out
jle
mov
jg
stc
ret
or
(bad)
stc
add
add
sub
push
aam
ret
aad
push
(bad)
inc
nop
stos
and
mov
outs
stos
scas
in
in
adc
pop
or
rcl
aam
or
or
cmp
dec
dec
jg
xor
bound
or
adc
xor
adc
adc
mov
pop
inc
cwde
or
adc
mov
push
shr
or
cmps
dec
push
mov
jge
xchg
add
xchg
cmp
adc
adc
pusha
mov
mov
mov
jle
jb
or
idiv
push
aad
call
(bad)
lds
push
inc
scas
lods
adc
ret
jnp
movs
daa
push
daa
push
mov
pop
stc
jl
in
cmp
xchg
mov
add
dec
pop
pushf
and
cmp
push
and
or
scas
rcl
sub
mov
mov
xchg
sub
adc
shr
jge
pusha
inc
sbb
rcl
addr16
repz
popf
mov
out
xor
inc
cmp
leave
loope
pushf
dec
adc
lock
stc
repz
inc
xchg
pop
mov
jns
(bad)
wrmsr
sti
icebp
add
ins
adc
(bad)
mov
add
xlat
cmps
dec
aad
addr16
adc
fadd
cmp
fstp
push
test
adc
xchg
jne
xchg
dec
fwait
mov
xor
retf
jno
fst
add
push
jns
or
loope
xor
cmp
rcl
cmp
loope
xor
jb
cli
movs
cmp
sub
imul
pusha
jns
out
mov
pop
jae
mov
pop
mov
jae
fnstenv
or
js
dec
sahf
pop
dec
jmp
cmp
fcmovnu
call
sub
ins
retf
cwde
jnp
lea
push
fs
sub
dec
test
or
ret
test
adc
inc
test
fdivr
add
push
sbb
push
jmp
mov
lods
xchg
xlat
sahf
mov
pop
push
and
addr16
mov
hlt
fsubr
sbb
adc
and
in
frstor
cmc
cmp
jns
cdq
jno
test
addr16
outs
loopne
push
cli
add
outs
fisttp
xlat
stc
daa
cmp
sub
ret
mov
xchg
dec
jo
pop
push
dec
jbe
shl
push
jp
add
mov
push
and
cwde
fimul
mov
adc
sub
es
mov
mov
out
or
cmovge
lds
call
xor
rcl
dec
pop
adc
adc
push
sar
movs
adc
add
mov
fsub
or
test
xor
(bad)
loop
sbb
push
ss
ds
jns
cs
addr16
dec
out
mov
ror
cmp
add
idiv
sti
jno
push
stos
mov
fsubr
arpl
mov
adc
xor
adc
call
push
int
push
and
sub
or
jecxz
mov
dec
ins
cmp
sahf
sbb
stos
popa
in
popf
mov
mov
push
(bad)
mov
retf
gs
hlt
jo
sbb
ror
into
in
(bad)
loopne
push
shl
pop
mov
xor
sub
xor
mov
jp
dec
jno
repz
(bad)
clc
pop
adc
dec
pop
push
ficom
mov
sbb
gs
sbb
inc
(bad)
mov
pop
dec
aam
cmps
jb
sub
jns
pop
mov
adc
inc
mov
jge
(bad)
fisubr
pop
iret
cmp
cdq
jecxz
adc
xchg
ja
xlat
shr
mov
xor
test
(bad)
pop
in
dec
cmp
and
loopne
stc
mov
jmp
dec
imul
inc
add
mov
jo
int3
sbb
fwait
inc
jbe
aad
inc
and
inc
cmp
ins
mov
mov
nop
jns
fdiv
fsubrp
inc
jno
lea
pop
sbb
xor
inc
dec
cmc
mov
and
imul
repz
fiadd
stos
and
xchg
push
lods
and
jp
nop
stos
or
inc
cmp
(bad)
cmp
mov
cdq
adc
movs
lods
xchg
sbb
je
js
push
push
xor
sub
sbb
mov
mov
call
inc
xor
or
jp
(bad)
adc
out
fwait
inc
push
ror
les
jae
dec
sbb
repnz
retf
mov
scas
push
jae
and
repnz
lock
aam
add
mov
mov
mov
cmp
xor
repz
in
sbb
inc
sbb
push
fidiv
pop
repnz
mov
dec
mov
out
push
add
xor
lods
in
add
inc
inc
add
ss
or
jl
sub
mov
mov
sbb
push
out
test
dec
test
sbb
ret
cmp
xchg
and
or
cmps
(bad)
and
and
pop
dec
in
inc
sar
cld
pop
(bad)
in
mov
(bad)
pushf
or
nop
push
pop
pop
push
outs
fimul
sahf
jmp
mov
inc
fs
push
rcr
push
fwait
leave
cwde
dec
out
in
rcr
aad
cmp
jmp
and
pusha
sbb
jle
aad
mov
sahf
std
hlt
push
out
mov
jnp
je
mov
outs
ret
shl
push
out
add
jno
rcr
or
out
mov
lea
adc
jno
jl
cmc
movs
call
jmp
leave
adc
jle
fadd
cmp
or
mov
mov
mov
and
xchg
movs
add
sub
movs
mov
mov
iret
xor
rsm
fmul
gs
popa
(bad)
push
sub
mov
pop
mov
repnz
out
mov
pop
movs
xchg
mov
nop
(bad)
(bad)
(bad)
mov
add
retf
jne
outs
fsubr
pusha
in
(bad)
dec
adc
arpl
ret
jp
cmp
jmp
jbe
fnstsw
push
and
add
jp
push
dec
je
and
cmp
hlt
loope
xor
add
sbb
jg
ins
xor
popf
xor
push
mov
pop
xor
jb
pop
xchg
(bad)
or
sub
sahf
(bad)
cvttps2pi
jae
fsub
out
and
push
add
cmp
jecxz
ss
xchg
loop
cmp
sar
mov
push
shl
mov
fwait
mov
xor
sub
call
sbb
loope
mov
(bad)
cwde
in
mov
ja
xchg
xchg
add
inc
mov
cwde
test
dec
cmp
loope
xor
pop
inc
adc
cmps
add
add
outs
xor
pop
(bad)
js
loopne
popa
imul
adc
and
mov
pop
push
cmp
pslld
outs
loope
shl
data16
push
(bad)
in
arpl
xor
xchg
xchg
repnz
sub
add
mov
jge
push
ror
adc
xor
mov
sub
jmp
data16
int3
test
cmps
or
rcl
add
pcmpgtb
mov
jmp
mov
cmp
pop
test
gs
xor
cmp
and
mov
jb
sub
add
mov
lahf
(bad)
mov
into
(bad)
enter
mov
mov
push
in
push
xchg
(bad)
pop
xor
xor
or
movs
inc
jle
out
pop
(bad)
pop
adc
pop
(bad)
inc
(bad)
pop
les
test
pop
loope
push
mov
push
mov
and
jns
inc
arpl
mov
jbe
xor
ss
arpl
cmps
jo
(bad)
imul
or
test
mov
jmp
pop
pushf
fcomp
adc
push
icebp
fidiv
jle
cmp
sub
mov
movs
fs
adc
dec
jne
mov
or
xchg
sbb
pop
je
pop
sbb
in
push
or
mov
call
sub
jns
adc
jle
or
pop
and
out
mov
inc
cmp
xlat
loope
out
fs
lock
or
shl
pop
push
scas
ins
sbb
loope
cli
pop
retf
push
popf
sub
jmp
shl
xchg
je
pop
(bad)
mov
sbb
sti
push
cmp
push
xchg
cmp
adc
aas
out
adc
inc
fsub
sbb
xchg
add
shl
lock
or
jmp
stc
aas
(bad)
adc
mov
sub
sub
pop
sbb
dec
ds
fst
nop
xchg
test
push
lds
cmp
dec
sub
xchg
xor
pop
mov
pop
jp
pop
cmps
lods
lock
hlt
mov
int3
inc
push
push
fdiv
in
jns
jb
cmp
push
sti
mov
push
rcl
aaa
mov
imul
test
loop
and
xchg
aas
in
mov
call
mov
add
imul
lea
add
jnp
int
stos
cld
cmc
push
add
xchg
pop
retf
shl
in
(bad)
sahf
aad
stos
mov
or
jge
sub
std
je
or
adc
add
push
popf
imul
jg
pop
mov
dec
dec
or
ret
in
shl
inc
mov
sbb
repnz
shr
xchg
scas
mov
dec
(bad)
sub
add
movs
jae
push
or
movs
sub
inc
jb
int3
cmc
ror
dec
lods
js
cdq
nop
pop
ficomp
fldenv
mov
add
inc
or
imul
add
push
dec
xchg
push
mov
jo
or
ins
loopne
push
push
loopne
fsubr
mov
mov
inc
ja
test
test
inc
push
mov
mov
xchg
jo
cli
mul
mov
dec
cmps
xchg
clc
sbb
jnp
lahf
dec
push
inc
and
pop
aad
loop
jg
push
rcl
cmp
cmp
push
je
ror
mov
push
lahf
rcl
pop
pop
aaa
test
fst
sub
lock
call
pop
ret
loope
cmp
dec
ja
sbb
cwde
imul
sbb
jne
sbb
dec
(bad)
outs
pop
lea
lods
mov
repnz
outs
out
add
cld
cmps
mov
ss
or
pop
mov
xor
stos
cs
jle
scas
xchg
push
and
jnp
(bad)
sub
push
pushf
add
mov
(bad)
inc
jno
jle
add
mov
jbe
adc
jnp
add
out
loop
fidivr
retf
test
rcr
push
call
in
jbe
and
push
rcr
inc
sbb
mov
pop
mov
and
mov
fist
or
cmps
je
mov
pop
fmul
inc
xchg
dec
pop
ds
sub
ret
mov
jmp
add
push
inc
into
pop
push
push
cmp
je
je
sub
in
scas
xor
xchg
shl
cld
pop
push
iret
in
leave
in
out
sbb
adc
jp
lahf
mov
xchg
test
or
xor
push
movs
or
shl
into
or
cmps
mov
in
or
or
retf
std
xchg
es
fs
in
jmp
bound
mov
ficomp
repz
inc
mov
mov
retf
loopne
sub
mov
jmp
jne
push
mov
and
les
imul
inc
jnp
adc
mov
push
mov
adc
pop
pop
adc
push
mov
mov
add
mov
xchg
enter
inc
jl
add
(bad)
mov
jl
push
(bad)
fld
hlt
or
cdq
pop
pop
dec
or
std
arpl
test
adc
jg
and
xchg
mov
mov
lock
out
leave
in
push
pop
adc
inc
xor
cmp
or
mov
jae
jbe
sahf
sbb
movs
shl
cmps
stos
inc
int
mov
xchg
test
call
sar
lock
xchg
rol
sbb
push
ins
out
sub
int
jmp
fistp
mov
fdivp
mov
mov
jl
(bad)
jns
call
rcr
mov
sbb
test
add
jnp
ins
jb
xchg
inc
push
int3
cmp
sbb
mov
pop
lds
push
add
call
sub
not
je
lahf
call
retf
push
dec
not
dec
sub
xchg
or
sub
ret
lds
cmp
pop
sub
test
sub
jne
adc
mov
push
ss
or
int
int3
hlt
ret
out
or
inc
adc
jno
mov
pop
xor
dec
adc
stos
add
movs
out
jge
dec
int3
sub
mov
sbb
js
fs
daa
mov
ret
fild
mov
in
adc
sbb
mov
aam
cmps
cdq
xchg
cmp
test
out
sbb
mov
sti
(bad)
jge
addr16
das
push
aaa
dec
repz
mov
cmps
xor
cmp
mov
and
jmp
mov
sahf
cld
sbb
jg
lock
shl
jmp
movs
xor
inc
ret
nop
dec
inc
xchg
xchg
dec
or
sti
inc
hlt
fisttp
pushf
mov
lock
pop
jne
xlat
hlt
or
dec
mov
into
cld
std
(bad)
cmp
cmp
jo
test
inc
fdiv
pusha
lods
or
lahf
loop
ds
xchg
dec
shl
xchg
xlat
fwait
fs
out
cmp
test
test
mov
inc
lock
add
popf
cwde
add
cmps
push
xor
xor
mov
sub
mov
lods
add
jg
std
or
sar
or
fwait
lea
dec
test
out
add
adc
and
inc
xchg
std
jg
mov
pushf
imul
shl
inc
lock
push
and
jnp
rcl
xchg
out
retf
stos
xchg
dec
inc
add
lods
ins
cdq
imul
mov
gs
daa
push
cmp
mov
addr16
enter
dec
xchg
cs
add
mov
push
mov
mov
xchg
pop
ret
(bad)
xchg
cs
or
push
call
cld
sub
xor
fdivr
mov
jecxz
loopne
popa
jb
stc
or
movs
sbb
nop
or
loope
mov
mov
sub
mov
pop
push
push
cmc
jl
jge
push
leave
mov
or
xor
in
dec
lock
or
mov
out
rcl
adc
cmp
call
lock
xchg
in
mov
and
jmp
fild
mov
retf
jbe
out
in
addr16
leave
add
in
or
sub
je
int3
fisttp
mov
fmul
or
rcl
inc
repnz
leave
adc
dec
sub
stc
xchg
sbb
adc
cwde
lahf
add
add
dec
aaa
(bad)
adc
popf
out
adc
xor
push
sbb
push
xchg
inc
lock
xchg
(bad)
jmp
ins
in
jo
jmp
loope
push
inc
pop
imul
jnp
into
sti
or
xor
sub
pop
pop
inc
je
jnp
inc
pop
xchg
fist
or
sbb
adc
mov
sbb
inc
sbb
mov
and
mov
scas
mov
or
xor
call
inc
jne
ds
daa
jge
mov
hlt
xchg
pop
test
and
xchg
stos
xor
jbe
mov
ret
arpl
push
retf
hlt
out
ds
fcmove
pusha
xor
push
push
dec
jle
in
and
outs
xor
mov
cmp
mov
add
inc
sub
fwait
xchg
ss
mov
ins
cmps
cli
xchg
(bad)
mov
dec
out
xchg
sbb
bound
into
mov
(bad)
pop
rol
xor
cs
sub
sub
inc
inc
jo
adc
xor
push
out
fstp
mov
repz
pop
cmp
lds
rcr
jmp
xchg
push
jmp
inc
pop
adc
gs
call
clc
ficomp
popf
fucom
ficomp
inc
lock
or
inc
and
mov
mov
pop
pushw
mov
push
scas
cwde
inc
adc
ret
mov
int3
mov
ret
cli
mov
gs
mov
fbld
or
xor
imul
sub
mov
adc
stc
ja
test
mov
jg
xor
aad
inc
ins
sti
sti
retf
mov
mov
inc
mov
sti
sbb
(bad)
and
or
pop
icebp
gs
pop
mov
xor
jmp
or
inc
xchg
mov
or
cwde
mov
mov
mov
sar
add
jne
jo
into
and
loop
push
cmp
inc
(bad)
sahf
into
retf
sbb
jno
mov
sub
sub
mov
push
or
mov
(bad)
xchg
les
in
adc
inc
xchg
leave
sub
add
leave
out
xchg
mov
lahf
stos
cmp
dec
sbb
jmp
add
adc
pop
dec
xor
pop
push
push
sub
lods
push
mov
cmp
jb
dec
mov
and
(bad)
bound
jne
test
pop
xor
fcomp
adc
aaa
xchg
cmps
test
pminsw
sbb
sahf
mov
fisub
push
or
rol
adc
mov
pop
push
call
push
push
retf
inc
fmul
and
dec
pop
add
push
(bad)
mov
jecxz
cmp
cmps
adc
mov
inc
sbb
cmp
sub
or
mov
sub
mov
push
xchg
mov
bound
cmp
icebp
push
xor
fidiv
lods
and
xor
rol
cwde
arpl
arpl
push
sbb
add
cmp
mov
add
push
es
xchg
cmp
xchg
mov
cld
clc
scas
pop
and
xor
movs
leave
xchg
mov
(bad)
jnp
add
out
mov
lods
fsubp
imul
mov
dec
sub
mov
ja
cmp
mov
(bad)
pop
pop
in
xchg
mov
xchg
loopne
scas
add
xor
out
pop
ins
das
mov
iret
sub
lock
inc
inc
cld
cmpxchg
dec
adc
pop
mov
scas
sub
push
pushf
fsub
xchg
dec
jg
or
les
push
sub
into
sub
sar
clc
test
stos
inc
pop
out
cld
ret
cmps
ins
ficom
inc
mul
mov
in
sub
pop
js
pop
lock
pop
in
hlt
inc
aad
mov
jo
jecxz
add
dec
jmp
stos
cmp
loope
ficomp
or
sbb
xor
fcmove
jmp
sub
pop
popa
mov
xor
cmp
ins
adc
push
retf
xchg
xchg
add
sub
call
mov
adc
mov
test
imul
adc
and
mov
pushf
lods
(bad)
fcmovnbe
fnsave
ins
fnstenv
out
repz
jmp
dec
xchg
or
cwde
movs
or
icebp
int
jo
pop
push
(bad)
in
ficom
cmp
xlat
(bad)
dec
and
xlat
test
(bad)
aad
arpl
jb
mov
pushf
mov
je
das
ja
fist
inc
mov
xchg
push
push
cli
clc
mov
adc
xchg
fld
jg
cmp
imul
repnz
aad
dec
jae
aad
ins
inc
dec
or
cmp
inc
xchg
xor
sbb
or
jle
ss
dec
fwait
pop
sub
(bad)
retf
or
out
xor
xchg
pop
dec
popf
aas
in
daa
test
pop
sub
cmp
mov
enter
pop
add
sub
imul
push
retf
cs
(bad)
in
stos
cld
xchg
sub
shl
into
xor
jo
cmp
test
inc
adc
sub
push
mov
xchg
cmp
daa
jl
(bad)
hlt
leave
fwait
sub
adc
sub
sub
xchg
add
jle
mov
sub
push
push
xor
and
pusha
and
neg
xchg
mov
pop
popa
mov
jnp
pop
int3
lods
push
sub
nop
retf
int3
shl
or
es
xchg
pushf
sub
jg
xchg
(bad)
push
mov
push
pop
mov
sbb
push
ret
idiv
mov
mov
aad
adc
sub
bound
cmp
xchg
inc
mov
mov
icebp
into
cmp
or
in
imul
push
jecxz
aad
sar
pop
std
xchg
mov
jo
dec
fwait
and
fadd
scas
hlt
shl
out
imul
fcmovnu
fnstcw
fidiv
and
add
idiv
mov
pop
movs
in
out
dec
mov
pushf
and
sub
into
sub
sti
movs
(bad)
inc
pop
add
jge
xchg
(bad)
and
pop
xor
mov
adc
lods
jnp
sub
sahf
stc
repnz
add
lds
jge
jne
stos
dec
out
test
jb
sahf
push
cmps
nop
inc
ret
cs
xor
in
inc
les
mov
fstp
mov
xchg
nop
outs
mov
push
push
mov
dec
jmp
ss
lods
stc
xchg
adc
or
xchg
out
cmc
mov
cld
xor
adc
mov
xchg
(bad)
(bad)
adc
add
add
adc
add
sub
(bad)
out
repnz
loopne
shl
fist
outs
and
jp
adc
pop
rcr
in
pop
xchg
int
jne
lods
sub
aam
and
imul
cmp
and
(bad)
test
pop
int
dec
cmp
push
lock
ins
popa
iret
mov
push
mov
jno
in
bound
pop
xor
xchg
inc
adc
push
add
nop
(bad)
out
ror
mov
in
test
mov
push
test
pop
jg
xchg
inc
push
test
adc
je
dec
push
test
pop
(bad)
xchg
ins
cmp
pop
hlt
shr
jmp
push
fwait
loope
pop
adc
pop
cmp
sub
mov
or
addr16
sbb
data16
push
jge
repz
jns
pop
mov
adc
retf
repnz
ds
outs
(bad)
pop
popa
jbe
ja
push
aad
adc
cmc
dec
shl
jmp
inc
enter
popf
sahf
es
popf
out
rol
and
mov
frstor
jl
test
cmp
rol
mov
inc
movs
inc
outs
clc
popa
or
retf
xchg
mov
test
jns
je
fstp
pop
test
rol
xchg
sub
fisub
enter
lds
or
and
push
repz
call
xchg
sbb
movs
lods
or
test
fst
into
lock
mov
fnsave
or
outs
push
sbb
cwde
xchg
jmp
push
xchg
jmp
retf
jo
mov
std
jmp
int3
mov
fdiv
aad
inc
adc
lea
mov
aaa
repz
sar
int3
push
retf
gs
and
pusha
adc
data16
sbb
push
not
je
adc
(bad)
jmp
add
xchg
jge
inc
jl
push
movs
add
sub
sbb
push
xor
or
jb
push
shr
sbb
fadd
jp
rcr
add
or
repnz
ss
movs
push
clc
mov
or
aam
cmps
add
mov
(bad)
mov
push
inc
add
push
fisttp
jne
test
fld
test
jl
loope
or
jmp
dec
rol
xchg
dec
(bad)
dec
lds
in
or
in
lds
push
push
xor
pop
int3
mov
fadd
out
inc
adc
push
bound
push
cmp
pop
pop
mov
or
add
js
fsub
test
push
aaa
jbe
cmp
inc
aaa
dec
pop
pop
xor
push
mov
pusha
mov
jge
fsub
jmp
inc
mov
adc
inc
mov
add
mov
adc
scas
jnp
ret
jp
jo
or
jb
aaa
xchg
dec
pop
mov
fld
push
(bad)
or
pop
mov
arpl
jecxz
push
test
mov
lahf
cmps
jnp
jno
jge
leave
push
imul
enter
push
pop
ins
int3
xchg
or
out
jl
or
hlt
call
sub
ficomp
dec
or
outs
pop
loop
out
inc
test
mov
jl
xlat
(bad)
cli
jne
pop
lds
xor
addr16
mov
(bad)
xor
sbb
jp
repz
jle
sbb
stc
add
pushf
cld
loopne
popf
das
call
div
dec
and
cdq
jns
cdq
sub
xchg
xor
in
and
adc
pop
fld
int3
and
es
jmp
push
dec
cmps
movs
aaa
std
aad
retf
dec
clc
inc
mov
push
stos
adc
call
loop
popf
stos
pop
sub
mov
dec
pop
cli
out
fst
enter
pop
(bad)
inc
adc
and
addr16
push
lods
mov
mov
cmp
xor
mov
jecxz
pushf
add
dec
and
cmp
or
mov
repnz
xlat
jae
or
xor
(bad)
or
(bad)
pop
mov
mov
scas
sbb
test
push
inc
rcr
xor
loop
ss
mov
mov
stos
mov
cs
(bad)
sti
cmp
data16
pop
faddp
(bad)
add
movs
and
in
aas
push
fld
inc
inc
cmp
push
test
fsubr
inc
adc
mov
dec
xchg
sbb
mov
and
jmp
sbb
std
cmc
cwde
pop
pop
enter
movs
cs
mul
cmp
pop
popf
stos
ret
sti
mov
repz
enter
jle
fidivr
dec
xlat
sbb
popa
stos
mov
mov
mov
and
mov
and
sub
ins
loope
mov
bound
lods
sbb
adc
push
pop
sub
push
jnp
movs
pop
movs
fwait
jl
adc
inc
popa
xor
or
(bad)
in
add
jmp
mov
fstp
fistp
jne
ror
mov
loop
xchg
inc
pop
sbb
rol
jae
ds
cmp
jb
in
cmc
ret
lock
inc
ret
and
lahf
and
call
jae
lock
arpl
xchg
cmp
loope
cmp
lds
pop
imul
and
div
dec
fldenv
ins
aaa
mov
ret
xor
jb
test
and
cmp
leave
lea
inc
push
mov
inc
sub
outs
cmp
fs
xor
fnsave
jp
mov
inc
ins
enter
shr
add
adc
ror
aaa
in
push
mov
sbb
repz
pop
jbe
inc
stos
push
sub
pavgw
in
neg
jge
xor
popa
sbb
dec
test
lea
jbe
lahf
out
loop
xor
mov
inc
sub
adc
fild
xchg
popa
xchg
jmp
dec
inc
xor
jae
push
and
sar
mov
adc
(bad)
ds
inc
or
das
ret
pop
and
add
xchg
push
xlat
cwde
and
loop
loope
aam
jp
mov
cmc
in
lock
or
pop
pop
pop
or
call
sbb
jl
leave
cmp
cdq
test
lea
mov
inc
mov
xor
mov
les
rcl
jge
inc
mov
inc
jge
jnp
mov
mov
cmp
sbb
ds
and
movs
pop
or
iret
cmps
rcl
inc
sub
in
lods
push
pop
adc
aam
push
xchg
jmp
push
mov
outs
sub
nop
xchg
mov
and
xchg
cwde
outs
add
test
test
test
push
xchg
not
bound
pop
gs
pusha
(bad)
xchg
shr
jp
sub
ds
inc
sbb
outs
sbb
rcr
mov
pop
xchg
inc
mov
ret
mov
test
mov
sub
inc
jg
jecxz
scas
sbb
adc
pusha
mov
or
mov
lea
mov
shl
cmps
test
int
ror
stc
sub
mov
push
mov
sub
fwait
ror
or
xor
cmp
sub
add
in
push
sub
pushf
jle
neg
dec
and
repnz
dec
cld
das
xsaveopt
out
or
pop
jl
cli
cmp
repz
dec
inc
jne
js
test
and
jmp
movs
cmc
jl
cmp
lock
and
lock
xor
mov
ss
mov
pop
loop
pop
sub
cld
cmp
jno
inc
or
xchg
mov
pop
and
push
jns
das
xchg
mov
jmp
and
popf
cmp
xor
xchg
jg
mov
clc
neg
retf
cli
push
ins
loope
jno
test
mov
fidivr
loopne
dec
mov
push
les
sbb
in
sbb
cmp
test
movs
sub
adc
jmp
push
sub
test
sahf
stos
call
nop
enter
cli
test
jbe
push
call
frstor
sub
inc
add
retf
inc
xor
xchg
aas
mov
(bad)
(bad)
xor
xchg
ins
mov
mov
loopne
cld
retf
(bad)
fwait
pusha
mov
ret
cmp
adc
lahf
or
and
nop
inc
dec
xchg
popa
sub
test
inc
sub
in
xor
imul
push
mov
xor
enter
daa
(bad)
jmp
loope
retf
mov
mov
cli
outs
adc
mov
sub
daa
out
inc
lea
jmp
and
rcl
lods
xlat
dec
in
lock
in
lods
test
dec
cmp
test
sub
out
sub
rcr
inc
xchg
and
mov
repnz
fimul
fldcw
mov
inc
imul
daa
sbb
mov
aad
cdq
inc
call
push
in
mov
fadd
sbb
sbb
lds
mov
arpl
jecxz
and
lds
mov
pop
mov
std
int3
test
(bad)
fmul
jns
stos
arpl
mov
sub
ins
dec
dec
(bad)
out
mov
pop
cmp
jl
cpuid
and
rol
je
(bad)
mov
test
dec
adc
inc
mov
and
xchg
or
clc
inc
xchg
inc
mov
push
cmp
test
outs
stc
aaa
lds
dec
(bad)
lock
push
or
jns
ds
aam
fiadd
or
xchg
adc
push
test
pop
jp
xor
adc
pop
mov
scas
loop
int3
dec
loop
(bad)
mov
jnp
jns
xchg
js
mov
stos
mov
test
out
dec
cmp
imul
call
mov
inc
pop
jmp
fistp
dec
sahf
retf
pop
sbb
inc
mov
pop
push
or
in
mov
icebp
sbb
sbb
pusha
ficomp
pop
cmc
add
cld
xlat
cmc
fistp
pop
jnp
lahf
cmc
sbb
jle
pop
(bad)
test
mov
dec
and
jg
jmp
cmp
dec
scas
sahf
push
jecxz
movs
cmp
nop
out
lods
scas
adc
cli
retf
sbb
mov
and
nop
ins
pop
and
(bad)
arpl
push
push
pop
not
call
cmps
(bad)
mov
dec
dec
add
rol
cwde
iret
leave
push
xchg
pop
fmul
sub
sub
fisub
dec
mov
push
test
or
lock
lahf
or
pop
arpl
adc
loopne
repz
(bad)
cld
xor
pop
mov
add
jecxz
mov
cld
mov
sub
fs
aas
push
add
dec
enter
xor
or
mov
inc
ret
cld
dec
add
xor
iret
leave
jmp
adc
dec
mov
mov
jg
stc
xchg
mov
add
dec
pusha
jmp
push
sub
jle
scas
rol
lock
push
xchg
jnp
shl
not
mov
in
(bad)
push
inc
dec
push
clc
mov
xchg
add
xchg
sbb
enter
div
and
fadd
(bad)
inc
mov
daa
cwde
cmps
push
sub
retf
jmp
ss
leave
icebp
iret
adc
xchg
jmp
jg
adc
push
mov
and
and
shl
mov
stc
idiv
jge
sahf
(bad)
sub
(bad)
and
repz
movs
push
mov
daa
or
xor
int3
dec
mov
xchg
sub
mov
cmp
lods
add
ja
inc
lea
dec
mov
popf
adc
jno
add
cmp
or
cs
repz
es
cmp
cli
stc
pop
nop
jge
inc
xchg
adc
or
loopne
jge
movs
xor
cld
out
loop
dec
into
mov
sub
mov
retf
pop
push
push
nop
sar
fwait
xor
dec
call
xor
in
not
test
stos
gs
adc
mov
adc
xor
sub
pusha
push
iret
outs
and
repnz
js
mov
pop
or
lahf
sar
out
bound
mov
icebp
fsin
jnp
and
jne
(bad)
sub
push
adc
pop
jns
pop
test
xchg
cmp
gs
cld
sbb
sub
in
adc
loope
(bad)
imul
cdq
add
sub
pop
adc
cwde
or
mov
in
mov
mov
rol
pop
shr
shl
out
cmp
cmp
sbb
movs
aad
gs
push
(bad)
mov
sub
pop
push
in
dec
lods
imul
and
lds
std
shr
test
push
adc
test
sub
jle
out
call
mov
ja
shl
mov
mov
lea
fwait
xchg
mov
mov
sbb
enter
pusha
pop
in
repz
(bad)
pop
or
inc
mov
cmp
push
push
inc
jb
bound
lods
push
jg
mov
adc
pop
movs
mov
ret
pop
ins
jl
iret
fwait
add
jmp
cld
ret
inc
js
and
cmp
(bad)
xlat
push
push
das
jmp
dec
fwait
aaa
cdq
stos
mov
xor
xchg
fs
mov
shl
movs
(bad)
pop
fwait
stc
mov
hlt
mov
mov
mov
pop
and
fsubr
aas
inc
push
push
aam
in
ins
stos
int3
jg
mov
xchg
mov
hlt
push
dec
adc
xor
sbb
sub
sbb
out
movs
pushw
sub
xchg
inc
adc
fwait
and
xor
bound
and
pop
stc
sahf
(bad)
push
cmps
or
cmps
(bad)
loope
pop
adc
sbb
idiv
sbb
push
cmps
pusha
pop
ss
cdq
(bad)
je
aam
adc
or
je
lds
(bad)
mov
popa
je
push
pop
lods
in
mov
mov
(bad)
jmp
push
lds
xor
sub
(bad)
sbb
adc
js
imul
jmp
jnp
jb
int
(bad)
neg
in
dec
jl
pop
or
xor
mov
jno
xchg
mov
pop
cmp
daa
pop
add
call
jmp
cmc
cli
cs
mov
std
sub
lahf
mov
mov
push
mov
loop
dec
addr16
push
mov
ja
mov
jp
jae
out
imul
mov
dec
stc
pop
cmc
cli
add
xlat
popf
push
mov
dec
mov
inc
es
test
xor
or
int
popf
inc
push
xor
pop
add
cmps
mov
pop
loope
push
scas
fsubr
add
pop
and
shr
mov
jnp
jbe
cmpxchg
and
jle
scas
add
test
outs
aam
ror
or
pusha
pusha
cmp
push
repz
jmp
lods
out
pop
dec
mov
test
mov
daa
ss
sub
and
in
pop
mov
or
add
scas
push
mov
cmp
loope
and
jecxz
cli
jno
jle
mov
int
adc
lock
addr16
push
sub
jns
call
jle
and
lods
and
and
push
xlat
or
scas
xor
xchg
(bad)
pop
inc
out
adc
sub
inc
and
adc
cmps
popf
test
xchg
(bad)
mov
dec
repz
or
(bad)
(bad)
xchg
lods
cli
retf
sti
test
push
sbb
loope
inc
push
scas
jl
imul
ins
push
outs
inc
adc
lds
ficom
xor
pop
pop
adc
inc
test
cmp
cmps
and
imul
dec
in
adc
jmp
cmps
pop
(bad)
mov
jmp
bound
dec
pop
cmps
pop
jg
inc
call
mov
jmp
mov
jnp
(bad)
lock
stos
cmp
jne
fs
sub
imul
jmp
jmp
ror
pop
or
cmp
loopne
cmp
inc
lock
lea
add
cmp
fmul
xchg
pop
mov
cs
and
and
lahf
je
sbb
mov
mov
add
xor
in
sub
call
pop
cmp
sbb
and
adc
mov
adc
(bad)
xchg
and
xor
clc
shr
mov
jmp
iret
inc
pop
std
mov
fs
jmp
or
scas
mov
inc
ja
jl
jb
jae
sbb
out
inc
adc
jno
fdiv
fwait
xchg
in
add
sub
or
jge
call
mov
dec
imul
inc
aam
fwait
or
xchg
icebp
fcomp
inc
fsubr
je
in
call
dec
gs
inc
push
test
push
push
jae
outs
mov
pop
pop
xchg
sub
in
inc
in
pop
cmp
fs
shr
xor
push
fldenv
mov
fbld
mov
lock
daa
mov
test
in
mov
hlt
sbb
nop
outs
dec
xlat
iret
call
dec
adc
mov
pop
mov
dec
cdq
fisubr
push
xlat
shl
loope
(bad)
and
jle
(bad)
scas
and
pop
push
cmp
add
sahf
daa
(bad)
jmp
fstp
daa
cmps
call
lods
mov
popa
ret
jle
lods
jge
enter
repnz
rol
std
dec
add
sbb
les
js
and
xor
push
push
or
sub
or
in
test
fwait
rol
fadd
mov
idiv
hlt
xchg
adc
les
call
sub
and
push
sub
and
xor
retf
inc
mov
loope
pcmpeqw
push
out
inc
sbb
or
sub
jo
enter
xlat
inc
or
dec
nop
or
dec
rcr
inc
and
mov
inc
ss
mov
test
dec
or
add
ja
iret
stos
jnp
repnz
fistp
dec
mov
xchg
cld
retf
pop
xchg
cdq
push
pop
and
push
add
mov
push
ret
test
shl
ins
scas
leave
pop
sub
push
pop
mov
adc
jno
adc
inc
cwde
push
add
repz
outs
(bad)
sahf
cmp
xchg
fs
and
mov
adc
dec
fisttp
fsubr
inc
test
and
stc
cli
dec
push
(bad)
pop
cli
cmp
out
mov
mov
ins
sar
sub
dec
into
sar
add
or
dec
mov
cmp
xchg
setle
xchg
jl
ins
inc
xor
in
es
push
mov
pop
cs
mov
cmp
int3
adc
xchg
or
jmp
mov
xor
(bad)
mov
into
fild
dec
out
jl
inc
sub
add
gs
push
in
xchg
aad
pop
or
aaa
fsubr
xchg
xchg
mov
ret
ss
or
out
push
fucom
push
jnp
pop
das
jmp
lahf
push
jmp
scas
data16
out
cs
pop
mov
aaa
(bad)
mov
ja
les
mov
movs
repnz
sbb
repz
xchg
jnp
(bad)
push
test
jb
fcom
ficom
mov
and
retf
clc
xor
dec
mov
jne
mov
aam
or
les
cmp
loope
rcr
or
pop
scas
and
in
xor
cmp
jnp
push
pop
(bad)
sub
fidiv
das
xchg
push
inc
hlt
je
xchg
loopne
inc
dec
inc
popa
add
sbb
sub
out
pop
pop
push
inc
rcr
(bad)
ja
push
jmp
out
aam
inc
adc
mov
jo
je
xchg
ds
adc
clc
cmc
adc
ret
dec
inc
xor
xor
sub
xor
xor
mov
cdq
push
js
xchg
in
sub
adc
movs
mov
push
inc
clc
mov
(bad)
call
push
pop
in
adc
and
xor
add
pop
mov
inc
sti
stc
pop
loopne
cmp
ss
mov
loope
push
cld
mov
fidiv
pop
loope
push
jecxz
ror
add
add
loopne
cmp
mov
inc
jns
cmp
xor
call
xchg
cmp
inc
movs
add
xchg
sub
or
jbe
movs
stos
test
adc
sbb
or
aam
test
xchg
clc
lds
dec
xchg
clc
and
inc
imul
mov
mov
call
xchg
and
lea
aam
outs
mov
inc
imul
pop
xor
push
cmp
jne
aas
mov
mov
fldcw
add
dec
add
push
mov
std
pop
in
jnp
int
mov
pop
nop
out
adc
mov
pop
push
dec
nop
bound
aaa
ficom
adc
and
bound
inc
les
push
sbb
sub
iret
add
movs
das
pop
adc
repnz
add
dec
test
icebp
push
jbe
les
jnp
ret
sti
movs
xchg
lods
fwait
mov
or
cmp
xchg
loopne
and
and
push
mov
adc
int
push
dec
mov
mov
and
pop
adc
stc
dec
add
dec
add
fchs
fwait
xchg
mov
push
lea
inc
jle
in
sub
xchg
imul
inc
mov
cld
(bad)
sbb
adc
mov
sub
enter
xor
ins
jp
or
rcl
pop
in
lock
cmp
jb
mov
xchg
aam
pop
in
mov
aaa
adc
sti
adc
loope
jne
cld
xor
bound
fst
adc
jne
cmp
sbb
mov
pop
push
adc
pop
lahf
cs
pop
push
jmp
push
arpl
mov
fld
sbb
sbb
sub
jns
sbb
adc
stos
movs
mov
mov
in
loop
adc
and
call
cld
mov
scas
jecxz
lods
fdivr
add
dec
(bad)
mov
aaa
or
fsub
popa
enter
clc
lahf
mov
jg
mov
inc
sub
and
ins
push
xchg
or
push
jbe
(bad)
stc
fdivr
mov
sbb
pop
mov
gs
repz
or
push
movs
or
fistp
stc
icebp
sub
cmp
movs
(bad)
out
jle
xchg
adc
repz
jno
lds
fdiv
lds
pop
fs
xchg
or
fnsave
(bad)
rcl
ret
mov
jns
mov
fs
mov
mov
fwait
movs
arpl
and
and
dec
in
rcl
push
pop
inc
xor
mov
or
mov
inc
loope
push
bound
bound
cld
inc
popf
test
outs
cld
retf
lahf
cmp
icebp
push
mov
jmp
jg
mov
rcr
das
(bad)
sbb
aaa
adc
inc
aas
idiv
sbb
sbb
dec
adc
pop
dec
lods
xor
iret
retf
sti
leave
pop
js
pop
adc
mov
mov
test
pushf
push
stos
xchg
mov
lods
inc
mov
lahf
dec
mov
fwait
or
mov
sub
outs
iret
xor
add
adc
push
add
clc
into
test
mov
stc
outs
or
nop
jge
fs
jmp
into
repz
cmps
mov
sti
repz
mov
lock
and
inc
cmp
ret
mov
(bad)
xor
add
inc
ins
retf
int
test
ins
or
mov
xor
mov
stos
push
fldpi
xchg
dec
fiadd
adc
leave
aas
pop
das
adc
add
or
mov
jp
pop
push
pop
push
cmc
daa
xor
cmp
xor
and
stos
test
add
enter
in
jnp
nop
pushf
in
daa
rcl
push
mov
fwait
add
clc
adc
mov
repnz
fstp
xchg
mov
mov
push
jmp
sub
jmp
xor
test
or
int
add
xor
xchg
test
xchg
cmp
mov
popf
enter
inc
push
xor
punpcklbw
fistp
mov
sbb
(bad)
popf
mov
pushf
inc
adc
jo
sahf
mov
sbb
jbe
jmp
jnp
xchg
jb
sub
std
enter
out
and
in
stc
pop
jae
and
fcmovbe
mov
mov
outs
inc
mov
repnz
pushf
sbb
xchg
add
xchg
aas
sub
jmp
sbb
repnz
mov
fbld
cs
jl
mov
mov
sahf
in
scas
movs
pop
xchg
inc
mov
test
sub
out
and
push
xchg
popa
sbb
movs
aas
and
data16
sub
pop
mov
mov
call
xor
xor
mov
das
mov
mov
push
adc
sub
cmps
mov
adc
jmp
xchg
inc
sub
xchg
pop
and
(bad)
mov
mov
aaa
loop
loopne
test
push
les
frstor
bound
pop
bound
dec
sbb
xor
repz
push
fldenv
addr16
cwde
pop
jmp
lods
(bad)
mov
sbb
mov
sbb
inc
enter
sbb
mov
lods
push
push
push
xchg
sbb
xchg
sub
ret
mov
cwde
daa
fisttp
jecxz
imul
or
cmp
xlat
mov
dec
push
cs
xor
push
xor
dec
add
add
pop
jecxz
and
jne
and
lods
mov
add
and
xchg
movs
movs
xor
retf
in
push
mov
adc
adc
or
push
lea
imul
stc
out
inc
cmp
aam
movs
inc
push
std
cmc
mov
into
and
pop
push
pushf
popa
loopne
rcl
pushw
mov
icebp
push
out
sub
sub
jo
nop
pop
jnp
cmp
loopne
or
cmps
rol
or
push
and
fcomp
dec
inc
push
(bad)
and
add
or
push
cmp
(bad)
int3
outs
push
pop
cmp
xchg
cmp
xor
and
add
std
inc
ret
orps
jmp
fcomi
sbb
cdq
ins
add
es
and
xchg
cmps
push
mov
mov
out
scas
inc
dec
mov
je
jns
std
mov
shr
jmp
adc
xor
cwde
mov
sub
inc
movs
inc
lahf
shl
cmp
pop
call
dec
or
jno
push
aaa
nop
movs
ss
retf
adc
cli
xchg
iret
in
dec
mov
stc
pop
fcmovnu
ins
push
adc
(bad)
in
mov
imul
or
movs
inc
mov
imul
ror
and
nop
popf
cmps
fs
test
add
cmc
jbe
in
push
inc
into
and
push
test
mov
dec
nop
js
jb
call
mov
shl
mov
icebp
pop
mov
cli
scas
pop
fnstsw
(bad)
pushf
icebp
adc
hlt
(bad)
into
mov
or
xor
pop
xchg
add
mov
mov
cmp
jmp
or
cs
cli
jmp
mov
mov
in
adc
add
jecxz
mov
ja
sub
(bad)
pop
les
test
sahf
shr
or
mov
leave
movs
mov
not
and
push
sub
retf
pop
mov
repnz
mov
push
out
sbb
mov
jecxz
xor
and
or
cwde
adc
mov
movs
mov
cmp
cmc
sbb
test
fisubr
inc
jmp
fild
inc
cmps
scas
pushf
jns
push
mov
scas
dec
mov
or
je
sbb
and
push
cdq
mov
sbb
fidivr
pop
call
dec
adc
ins
cmp
out
enter
jle
int
cmps
dec
mov
mov
or
pushf
sbb
adc
and
jno
sub
std
pop
in
in
dec
cmc
repnz
dec
(bad)
outs
(bad)
not
lahf
lds
loop
mov
push
leave
pop
bswap
xchg
int3
sbb
paddq
jne
stos
inc
add
inc
xor
cli
and
mov
inc
aam
enter
add
or
push
mov
or
test
out
call
xlat
cld
pop
dec
mov
les
mov
mov
ds
leave
cmp
inc
addr16
imul
mov
int
loop
add
mov
cmp
pushf
rcl
add
dec
leave
popa
inc
out
mov
in
in
sahf
sbb
xor
loope
push
xor
pop
jb
and
jl
enter
pop
out
in
std
cs
sbb
pusha
mov
mov
call
push
xchg
pop
mov
ss
dec
or
or
sub
adc
test
mov
sbb
cmp
adc
mov
stos
fdivr
stc
arpl
lds
xchg
mov
mov
and
mov
xor
xlat
sbb
fwait
loope
cmp
push
lods
je
aas
lods
xchg
pop
(bad)
jns
test
retf
pusha
push
pop
dec
mov
and
lsl
xor
mov
adc
jo
jbe
addr16
mov
push
push
sub
hlt
cmp
jae
rcl
inc
mov
mov
xchg
gs
add
cmp
scas
mov
push
cmc
or
cmp
xor
aad
mov
sub
push
psubsw
jb
cmp
hlt
cmp
js
shl
test
adc
aad
out
in
in
and
xlat
out
xor
les
sub
xor
cs
inc
sub
pop
or
iret
hlt
dec
add
cmps
popf
adc
imul
ret
jne
outs
sub
add
jge
dec
dec
shl
inc
sbb
imul
pusha
or
jnp
sbb
adc
outs
push
adc
popa
and
loop
sbb
xor
lods
adc
xchg
rcl
dec
xor
mov
push
dec
imul
sti
les
and
sbb
inc
mov
xchg
rol
sub
loope
das
mov
xchg
jle
imul
adc
stos
out
mov
fild
(bad)
repnz
ja
mov
add
loop
pop
lds
lahf
push
adc
sub
imul
repz
loope
jl
mov
aam
es
jmp
imul
push
movs
dec
xor
sub
dec
push
das
xor
jp
adc
adc
sahf
jnp
sti
fcom
jmp
repnz
push
(bad)
fisttp
mov
imul
fcomp
out
mov
jo
mov
sbb
sbb
pop
iret
loopne
int
imul
xchg
pop
gs
cmp
pop
pop
addr16
sbb
xor
cmp
xchg
jmp
dec
xchg
aas
mov
push
(bad)
adc
sbb
dec
stos
scas
cs
pushf
xlat
mov
push
fnstcw
or
rcl
xchg
in
ins
loopne
int
sub
sbb
push
imul
int
rol
dec
mov
dec
cmp
xchg
cdq
inc
push
call
pushf
inc
jae
sub
rcl
std
inc
pop
sub
pop
cdq
push
pop
mov
fiadd
jne
xchg
aad
jnp
popa
push
shl
add
hlt
pushf
div
lahf
arpl
mov
add
sub
or
cmp
addr16
mov
gs
out
loop
int
or
fnstsw
cwde
xor
cdq
(bad)
fimul
cmps
out
pop
pop
scas
cmp
jno
nop
mov
xchg
mov
mov
ins
inc
or
cmp
add
and
push
std
push
adc
inc
push
xchg
test
xchg
push
sbb
lock
jne
sbb
pusha
iret
pop
dec
in
and
inc
inc
out
sbb
cwde
stc
repnz
mov
xor
jbe
mov
push
xor
popf
pop
pop
add
clc
rol
mov
xor
enter
adc
sti
lods
gs
sub
jnp
in
sub
pop
in
push
add
mov
test
lds
scas
sub
and
mov
and
and
movs
rol
sar
(bad)
out
add
pop
(bad)
or
or
inc
mov
mov
dec
cmps
aas
imul
mov
push
lahf
xor
movs
cmp
cli
mov
popw
add
addr16
shl
mov
jecxz
stos
test
lea
or
test
call
mov
mov
sub
adc
inc
rcr
fsubr
test
xchg
push
push
pop
stos
mov
outs
fsubrp
cmp
jo
fdiv
imul
push
iret
and
xchg
mov
push
sbb
stos
movs
daa
or
push
mov
pop
sub
repz
inc
push
hlt
dec
pop
data16
fstp
sub
pop
inc
or
bound
lea
jle
dec
xor
ds
dec
sub
call
cmp
popa
mov
jno
and
and
pop
xchg
sub
(bad)
call
sbb
push
fwait
pop
cdq
and
imul
push
cmc
push
das
and
enter
lock
iret
push
test
pop
lock
push
scas
repz
push
jno
inc
iret
xor
cmp
std
gs
jne
das
inc
repnz
jmp
mov
mov
sahf
repnz
rdmsr
xor
inc
adc
test
dec
daa
call
jb
pop
cmc
cmps
adc
into
stos
test
pop
add
adc
sbb
pop
inc
ins
cmps
outs
mov
stc
or
jae
ss
in
fdiv
icebp
rcl
sbb
jmp
mov
adc
(bad)
nop
xchg
mov
aas
cmps
mov
hlt
ins
int3
out
mov
dec
pop
adc
mul
not
lahf
std
mov
rcl
push
xchg
aam
xchg
ror
mov
out
movs
sub
outs
push
jo
mul
cmps
(bad)
daa
cmps
fbld
cmps
lahf
mov
das
jno
push
add
sbb
movs
pop
aas
scas
mov
adc
dec
call
je
mul
out
std
dec
sub
cli
pop
and
aad
push
pop
push
stc
and
not
test
sbb
adc
xchg
arpl
xchg
add
pop
lea
and
push
and
adc
mov
iret
outs
jmp
pop
cdq
sub
sub
jle
cmp
repnz
lahf
add
adc
push
and
pop
sub
mov
xor
mov
jo
sub
(bad)
out
sahf
nop
stc
(bad)
mul
leave
idiv
sbb
sub
repz
rol
pusha
inc
daa
pop
pop
inc
loop
shl
outs
fcomi
push
lods
push
ss
stos
shl
jne
call
or
sbb
xlat
imul
gs
in
inc
push
inc
push
dec
adc
jae
ss
(bad)
sbb
nop
shl
movs
fimul
add
sbb
mov
or
cmp
test
push
mov
jg
adc
test
fld
pop
pop
stos
(bad)
mov
push
test
jne
inc
popa
ins
ins
aam
xlat
cli
out
sbb
fwait
sbb
in
xor
xchg
cdq
add
pop
jmp
sbb
inc
in
jae
and
test
cmp
xchg
out
ret
das
aam
adc
popa
sbb
ins
lds
push
xchg
lods
inc
jmp
daa
mov
imul
fcmove
mov
sbb
popf
pop
xor
cmps
pop
imul
jbe
in
cmp
retf
jle
mov
adc
sub
add
push
popa
mov
mov
mov
(bad)
xlat
shl
xchg
call
stos
mov
jle
in
add
ja
mov
in
mov
adc
neg
icebp
sbb
gs
mov
call
cli
arpl
sub
dec
pop
xor
retf
mov
pop
fcmovne
cmp
addr16
inc
call
div
(bad)
dec
push
movs
add
xchg
out
(bad)
sub
jmp
das
xor
das
push
rol
call
adc
jl
or
xchg
cdq
shl
sti
or
iret
pop
pop
rol
out
add
jmp
sbb
xchg
xchg
test
add
mov
fild
shl
xchg
outs
and
push
fld
sub
cmps
add
and
test
push
test
and
fdivr
or
stc
sub
stos
icebp
inc
arpl
push
lods
cwde
mov
adc
dec
fcomp
data16
add
mov
and
xchg
outs
loopne
jge
jbe
jno
in
scas
sbb
dec
inc
jmp
inc
mov
rcl
out
fild
or
repnz
mov
movs
dec
aam
mov
mov
push
loopne
aas
mov
adc
(bad)
push
leave
mov
mov
jl
mov
repnz
mov
sub
aad
fbld
pop
cmp
call
dec
(bad)
or
adc
jg
and
push
fs
ins
stc
mov
xor
out
adc
dec
mov
arpl
rcr
cmp
jge
inc
cmp
sahf
push
push
and
rcr
xor
jmp
and
ja
xor
add
push
push
dec
jo
scas
(bad)
(bad)
xor
dec
std
xchg
addr16
out
popf
mov
pop
ret
mov
rol
(bad)
or
and
(bad)
loopne
rol
jo
mov
xchg
sbb
les
mov
div
add
mov
fnstenv
(bad)
fs
adc
mov
xor
xchg
xchg
sbb
jnp
xchg
enter
mul
test
add
jns
add
fwait
jb
ss
jge
jle
push
jbe
or
lock
xor
cmp
test
fld
jno
(bad)
mov
mov
adc
cld
retf
lahf
(bad)
fs
push
not
jmp
dec
pusha
pop
and
dec
inc
mov
mov
pusha
cwde
cmp
int3
cdq
out
xor
push
in
nop
daa
shl
ja
sub
out
add
mov
mov
push
aas
xchg
sbb
add
(bad)
lods
mov
imul
popa
(bad)
mov
inc
(bad)
(bad)
dec
ja
shl
push
mov
mov
mov
pop
cmp
dec
cmp
sub
and
sub
mov
mov
mov
or
les
aaa
push
add
pop
fwait
(bad)
(bad)
mov
lahf
cmp
and
push
retf
arpl
and
jecxz
sahf
or
dec
hlt
sub
jne
idiv
sub
or
and
jmp
rol
ret
or
inc
sbb
xchg
sub
sbb
cmp
jae
xor
cld
mov
mov
sub
popa
pop
mov
pop
mov
(bad)
(bad)
or
imul
inc
push
sub
sub
retf
or
(bad)
clc
repz
iret
mov
retf
iret
mov
lods
xor
and
pop
mov
jge
push
fcomp
xchg
test
mov
adc
sbb
pusha
sub
or
or
les
pop
cli
cmp
repz
fwait
es
arpl
rol
and
scas
cmc
add
xlat
add
mov
retw
cmp
daa
ficomp
fmul
xor
and
pop
or
dec
mov
jle
pushf
imul
xor
xchg
outs
shl
xchg
stos
call
jle
push
sub
cmps
or
xchg
mov
sbb
popa
fwait
add
cmps
dec
sbb
xor
and
and
dec
pop
and
sub
loope
sbb
je
xchg
vcvtpd2ps
add
ret
inc
cmp
(bad)
out
push
jbe
dec
push
and
stc
shr
stos
jle
retf
sahf
fisubr
cmps
fs
xchg
pushf
pop
in
gs
pop
adc
sub
(bad)
cmp
outs
dec
xchg
push
mov
mov
push
lahf
ss
pop
mov
int
inc
lods
and
int
mov
push
pop
fist
or
xchg
push
pusha
adc
push
cmps
fiadd
add
ins
pop
ror
mov
jp
retf
imul
xchg
ja
inc
out
jmp
push
jnp
jecxz
jb
jbe
fidivr
push
(bad)
into
pop
mov
outs
ja
push
xchg
leave
adc
cmp
(bad)
jne
leave
push
xchg
sub
daa
push
xchg
aam
call
jp
mov
add
jl
xchg
fimul
mov
xor
stos
push
repz
mov
aad
mov
sbb
and
gs
imul
or
jno
jp
mov
cli
fwait
mov
fs
int
mov
jbe
popa
cli
xchg
ret
jae
stc
inc
and
or
sbb
or
retf
das
test
inc
scas
scas
(bad)
dec
add
retf
stos
test
cmp
pop
ins
pop
fisubr
mov
mov
jp
cmp
mov
not
mov
dec
adc
push
pop
pop
xchg
icebp
jns
mov
das
or
cmp
push
dec
sbb
jno
stos
jo
movs
sub
mov
add
mov
xchg
and
fsub
adc
cmps
mov
inc
js
repz
cs
xor
mov
in
sbb
nop
hlt
or
cs
(bad)
dec
addr16
lds
retf
das
xor
mov
sub
mov
jo
daa
mov
xor
or
(bad)
fcom
cdq
mov
(bad)
dec
stc
mov
add
(bad)
icebp
xor
dec
mov
cwde
push
sub
lock
sbb
adc
mov
and
push
in
push
mov
pop
ror
xchg
dec
test
sub
or
ror
fcomip
gs
test
add
xor
iret
jbe
jle
pop
neg
cwde
les
cmps
fwait
mov
bound
sbb
cmp
repnz
sbb
mov
neg
rcl
push
xor
sub
stos
sub
leave
pop
out
ja
sub
sub
stos
sub
dec
add
mov
cmp
jmp
pop
sahf
movs
add
rcl
clc
push
sbb
fnstcw
mov
jbe
mov
fcom
xchg
fcmovu
inc
lahf
or
sbb
pop
push
xchg
sub
call
jg
xlat
in
jg
out
test
pop
ret
ror
sbb
adc
retf
mov
fnstenv
out
adc
pop
and
test
das
aad
shl
mov
cmp
push
or
aaa
jmp
mov
(bad)
sahf
sbb
push
pop
ret
test
mov
gs
push
mov
call
jno
jge
jge
sub
jmp
retf
inc
xchg
jmp
and
mov
pushf
pop
sub
sub
mov
inc
loope
bnd
sbb
lahf
or
mov
mov
pop
fdivr
std
add
popf
mov
pushf
cld
ds
ins
popa
push
sub
aaa
in
mov
adc
xor
call
and
ficomp
dec
adc
or
popa
ss
jno
pop
scas
in
jl
sbb
cmp
adc
fidivr
xchg
mov
xchg
xchg
and
sub
rcr
std
sbb
js
pop
jge
dec
leave
jnp
enter
out
mov
mov
or
shl
jl
cmp
lock
jmp
adc
sub
or
xor
ins
adc
inc
(bad)
dec
loope
inc
xchg
jmp
jns
ret
movs
jb
xchg
mov
adc
jb
mov
mov
add
scas
iret
test
fnstcw
xor
cs
fisub
sub
out
inc
call
popa
jmp
retf
push
adc
sub
adc
ret
out
ror
adc
jge
ins
push
ret
movs
daa
pop
sub
jecxz
in
repz
(bad)
lahf
(bad)
fldenv
fbstp
icebp
popf
outs
stc
cmp
mov
in
sub
mov
stos
jmp
xor
data16
inc
pop
mov
into
push
ins
inc
push
mov
ret
cmps
cli
loope
pop
pusha
rol
cmp
xchg
inc
and
pop
stc
sbb
push
lock
dec
or
or
lock
and
jbe
movs
out
outs
dec
xchg
cmp
ds
out
mov
xor
addr16
jne
inc
xchg
popf
sbb
dec
push
lock
jb
dec
dec
sahf
xor
out
inc
sbb
pmaxub
adc
and
inc
aam
mov
call
pop
ins
dec
adc
xchg
test
mov
addr16
xor
ror
clc
out
retf
int
mov
xor
push
mov
aad
nop
jne
ss
fwait
leave
(bad)
cmp
sub
push
call
jne
stos
ror
jp
and
ja
cmp
cmp
adc
jo
repz
inc
dec
mov
rcl
je
es
jno
inc
mov
jecxz
xor
push
sbb
pusha
cmp
pop
adc
sbb
ficomp
mov
xchg
jmp
jns
cmp
sbb
push
jae
rol
mov
xor
push
xor
stos
lods
std
pushf
(bad)
jo
push
mov
and
xchg
inc
hlt
sub
movs
mov
lds
mov
add
gs
jae
arpl
sub
addr16
and
xor
xchg
cs
xchg
push
out
push
xchg
and
jb
inc
cdq
addr16
push
loopne
dec
push
jne
mov
jmp
cmp
movs
test
dec
mov
sbb
popf
add
and
cdq
mov
clc
adc
jecxz
pop
hlt
cmp
xchg
xchg
dec
mov
inc
sbb
mov
pop
mov
ins
jns
loopne
in
xchg
sbb
fsubr
mov
adc
fwait
scas
sub
xchg
push
nop
add
pop
or
repnz
fiadd
cwde
adc
push
clc
or
dec
nop
inc
push
sbb
imul
fwait
cld
mov
loop
mov
and
jg
mov
pop
adc
inc
lods
sbb
jb
ja
add
imul
(bad)
imul
fild
inc
or
movs
push
fwait
bound
jg
shl
popa
dec
stos
add
or
mov
sub
arpl
into
es
sbb
dec
addr16
neg
xchg
xor
in
lds
mov
xchg
aas
les
inc
inc
stos
es
push
jl
mov
inc
cmc
push
cmp
mov
inc
outs
into
mov
out
sub
sar
cli
sub
je
and
(bad)
and
mov
popa
or
push
cs
int3
and
es
sbb
pop
xor
stos
fs
in
jb
ret
adc
mov
ror
(bad)
push
inc
loopne
inc
inc
std
imul
and
mov
mov
mov
and
in
dec
xor
(bad)
add
jmp
je
jbe
stos
inc
test
push
adc
scas
nop
sti
jnp
outs
pop
jle
inc
out
inc
and
jmp
mov
or
sti
mov
or
ret
mov
dec
std
and
hlt
ja
out
xchg
mov
cmp
(bad)
ret
cmp
iret
mov
pop
prefetch
jb
jle
sub
mov
and
adc
loopne
add
adc
aas
bound
scas
out
pop
add
jne
out
movs
daa
mov
int
sub
mov
sar
jle
mov
sub
jle
add
push
jmp
adc
adc
push
inc
mov
std
ficom
jnp
sbb
repz
mul
(bad)
and
shl
pushf
sub
xchg
jle
lahf
jge
add
adc
mov
scas
aad
shl
(bad)
(bad)
cmp
cmp
rol
inc
mov
call
ret
nop
inc
fs
(bad)
sub
mov
and
add
xlat
or
or
movs
mov
sahf
out
lods
jbe
out
mov
fsub
nop
repz
adc
loopne
iret
add
nop
cmp
cs
sub
adc
pop
sti
popf
aaa
mov
aam
dec
dec
pop
cmp
xchg
add
inc
adc
lea
aam
mov
stc
mov
aaa
fild
sar
call
call
xchg
mov
cmp
pop
xchg
jp
jecxz
xor
xchg
(bad)
mov
xchg
idiv
in
loopne
scas
loope
inc
mov
xchg
aas
ret
loopne
ins
cmc
pop
ret
xchg
out
sti
loope
pop
push
lea
push
push
hlt
and
aad
and
push
sti
add
mov
jno
and
sar
sub
in
shl
aas
shr
add
lods
mov
(bad)
inc
cmc
mov
xor
aam
mov
mov
jmp
inc
arpl
or
add
mov
cli
mov
dec
push
sbb
mov
sub
dec
outs
les
outs
ss
or
fdivr
or
push
pop
pop
je
sub
fsub
mov
pop
fisub
jecxz
jae
cmp
shl
pop
cmps
push
je
call
inc
repz
add
push
stc
add
out
mov
pop
lds
div
mov
mov
pop
xchg
js
sbb
mov
mov
cmp
(bad)
icebp
loopne
fs
icebp
push
xor
mov
cmp
xchg
fisub
inc
mov
add
std
push
mov
movs
jp
push
xchg
push
mov
hlt
in
fisttp
pop
adc
jecxz
test
mov
cmp
xchg
hlt
and
mov
dec
repz
arpl
rep
dec
and
inc
mov
retf
loope
mul
pop
loope
call
je
pusha
ret
icebp
pop
inc
jg
fisub
jecxz
add
loop
jbe
xor
fld
cmp
retf
cmp
push
test
inc
repnz
out
test
push
xchg
mov
xchg
hlt
and
pop
pop
stc
pop
cwde
inc
add
push
out
adc
inc
inc
xor
adc
dec
jmp
and
pop
mov
retf
push
(bad)
int3
not
cld
adc
scas
ja
sti
dec
jo
(bad)
stc
cmp
cmp
fdivrp
xor
inc
cwde
fmul
fsubrp
cmp
shr
mov
dec
aam
(bad)
or
cld
call
rcr
call
push
and
std
xchg
push
aad
inc
sahf
mov
mov
inc
mov
dec
out
aad
mov
test
lods
inc
out
push
xchg
and
xchg
popf
dec
and
arpl
pop
sub
outs
pop
dec
test
adc
sahf
and
dec
imul
call
scas
or
jae
mov
in
in
fs
leave
mov
adc
and
enter
call
mov
aad
xchg
mov
retf
xlat
mov
mov
popa
loope
sbb
or
jo
jecxz
mov
fwait
xchg
loop
pop
fdiv
inc
jb
xchg
inc
jp
sbb
test
adc
lods
push
iret
mov
loop
xor
dec
imul
nop
lds
test
lods
pusha
into
xor
arpl
jbe
out
sti
aas
movs
into
sub
iret
sar
cmps
loop
push
scas
or
fmulp
aas
fsubr
jle
mov
pop
retf
je
mov
cmps
aaa
cwd
mov
js
or
or
add
rcr
push
mov
jno
adc
xchg
(bad)
(bad)
sti
cs
aas
div
rcl
cdq
sbb
push
fwait
in
adc
imul
sbb
lahf
es
and
sbb
and
dec
pop
dec
test
jl
xor
sub
adc
mov
scas
loope
data16
mov
adc
cmp
adc
adc
daa
scas
inc
push
imul
jno
mov
call
test
xchg
int3
pop
inc
pop
retf
push
test
sbb
ins
iret
into
or
cmp
inc
fcomp
dec
jge
adc
clc
test
fisubr
stos
inc
and
add
arpl
or
lea
(bad)
mov
pop
and
lahf
loopne
cli
add
xor
popa
inc
push
ins
in
loopne
jg
stos
ins
test
dec
sub
xchg
retf
dec
and
jecxz
mov
add
jl
lock
cdq
repz
add
rcl
mov
mov
xor
cmp
loopne
fdiv
or
dec
and
es
jb
and
push
bound
iret
inc
cmc
dec
movs
loopne
and
loope
out
cmps
dec
test
fist
ins
enter
test
mov
out
imul
pop
fprem1
mov
repz
inc
(bad)
in
fidiv
push
bound
mov
outs
aas
jne
push
add
pop
inc
cmps
or
xor
add
jg
mov
add
push
jb
sbb
push
mov
and
ja
das
pop
push
push
adc
adc
jl
mov
scas
pop
cli
jmp
outs
movs
inc
addr16
imul
ds
sbb
push
xor
or
mov
mov
in
pop
mov
inc
mov
icebp
jecxz
rcl
int3
xchg
cmp
loop
dec
repz
daa
or
adc
mov
ror
pop
add
jge
into
cmp
cmp
jne
pop
xchg
sbb
add
mov
seto
iret
call
mov
pavgb
xchg
jmp
inc
or
jne
mov
neg
adc
js
mov
test
retf
mov
xchg
mov
or
sub
mov
add
dec
pop
in
pop
(bad)
shr
(bad)
jmp
(bad)
push
scas
ret
iret
test
sub
int
sub
and
mov
je
mov
add
push
xor
test
ins
mov
ins
movs
call
mov
(bad)
std
or
xor
test
hlt
pop
lods
mov
mov
mov
js
stc
jnp
jmp
(bad)
popa
addr16
mov
fadd
push
stc
test
ds
fadd
lds
inc
xchg
adc
jmp
mov
test
idiv
aam
cmps
dec
mov
mov
(bad)
or
fld
(bad)
pop
and
jb
fisttp
test
jle
(bad)
cmp
dec
mov
stos
stos
xchg
add
ds
mov
inc
cmps
dec
adc
scas
lahf
cld
shr
jmp
test
repnz
or
retf
movs
ror
xchg
shl
outs
daa
shl
sub
and
(bad)
dec
movs
or
inc
sbb
aam
push
xlat
jmp
or
jmp
fadd
jge
xor
cmp
mov
adc
nop
pop
jecxz
jb
ins
out
test
sahf
ret
cmps
cmc
pmaddwd
fdivr
dec
add
jae
popf
out
mov
mov
outs
movs
jo
(bad)
cdq
pop
ins
or
je
xchg
jecxz
dec
pop
das
push
xchg
push
loope
sub
int3
in
loope
inc
sbb
cmp
mov
adc
jnp
pop
dec
jp
int
hlt
repnz
pop
cmps
ja
or
dec
sub
jp
fs
xchg
out
xchg
xchg
xor
jns
sbb
out
mov
out
cdq
push
mov
test
mov
retf
and
sar
sar
sbb
push
les
(bad)
mov
stos
ins
movs
sub
lds
or
or
daa
or
sub
test
or
test
jb
cmps
adc
mov
mov
ror
mov
loope
cld
test
test
ins
xchg
fwait
test
push
ret
and
add
into
rcr
xor
mov
dec
iret
add
adc
(bad)
imul
test
or
test
dec
sahf
cdq
mov
xor
inc
mov
loopne
jo
cmp
and
sbb
dec
out
cli
adc
and
or
cmp
movs
push
pop
retf
adc
dec
mov
rcl
je
cmps
push
cdq
cmp
pop
test
daa
xor
and
mov
pusha
jo
jo
xchg
loopne
dec
dec
int3
dec
stc
(bad)
and
pop
ret
push
sbb
iret
adc
fstp
fist
mov
sub
ds
cld
push
push
and
sub
neg
dec
xor
mov
sub
and
inc
pop
dec
aas
add
dec
loop
test
dec
imul
adc
add
fs
stc
or
xchg
in
nop
ds
div
inc
and
rol
sub
jns
rol
pop
and
rcr
je
mov
repnz
push
cmp
pusha
rcr
lahf
hlt
aam
fidiv
inc
or
movs
pop
mov
xor
sub
test
ins
pusha
mov
or
dec
jmp
mov
mov
fsubr
adc
stos
ins
inc
scas
ret
mov
sub
mov
clc
int
stos
xor
push
sbb
aam
rcr
sar
loope
mov
push
xchg
fwait
ins
lods
call
dec
jbe
rol
and
clc
out
out
xchg
leave
scas
fist
retf
mov
inc
pop
jae
dec
and
mov
outs
sub
outs
add
call
xchg
fwait
in
jp
ror
cmp
xor
sub
fldcw
sub
xchg
xor
add
cmps
jecxz
jmp
inc
push
xchg
call
and
ds
stos
cli
xchg
sbb
scas
je
bound
jno
lea
seta
test
dec
mov
sti
lea
mov
lds
adc
pop
mov
shl
in
out
mov
jl
mov
adc
in
fs
push
int
inc
mov
and
jl
pop
jle
inc
loopne
ds
ja
add
into
call
lds
ja
and
xchg
lahf
sbb
xchg
fld
leave
pop
xchg
data16
inc
popa
daa
iret
mov
fst
dec
retf
jp
(bad)
lods
inc
push
div
dec
fcom
pop
inc
jge
sar
mov
mov
aam
imul
mov
je
mov
shr
inc
sub
cmp
adc
jle
fimul
dec
push
pop
cld
loopne
sahf
push
jo
sub
push
mov
in
jl
push
xchg
loope
(bad)
std
mov
(bad)
out
cmp
js
xor
ficomp
daa
and
(bad)
sahf
fxch
xchg
mov
jl
in
xrstor
stos
sbb
bound
push
cmp
pop
push
std
stc
push
sub
pop
mov
and
push
inc
inc
xchg
push
push
dec
rcl
push
jecxz
cmp
add
data16
movs
sub
test
sbb
(bad)
adc
add
(bad)
sar
fcmovb
cmp
hlt
mov
sub
sbb
dec
mov
xchg
inc
inc
iretw
es
std
addr16
push
sbb
adc
or
shl
add
push
push
and
pop
pop
int3
xor
icebp
dec
mov
push
and
sub
sar
lea
in
cs
cdq
fwait
mov
mov
xor
mov
lods
mov
data16
test
lock
sub
adc
sub
xor
rcl
xor
dec
stos
xchg
cmovae
ret
out
push
test
outs
jl
cmp
sbb
mov
mov
push
stos
dec
aas
push
(bad)
in
mov
adc
sahf
inc
push
jne
or
jo
(bad)
out
push
jno
cmps
hlt
add
mov
loopne
push
in
(bad)
xor
xchg
retf
imul
(bad)
call
sbb
sbb
mov
sub
outs
mov
pusha
pop
inc
hlt
sti
repz
inc
jo
mov
xchg
pop
lods
cmp
jb
or
and
in
scas
push
out
mov
popa
jne
adc
fwait
out
outs
inc
pop
or
pusha
jno
nop
jp
cmp
ret
sbb
out
inc
jp
out
xchg
jo
cdq
xchg
loop
loope
mov
dec
ja
push
out
fs
mov
mov
fbstp
ja
dec
retf
sti
push
sbb
jo
sbb
shr
sbb
imul
mov
cmc
rol
jnp
jmp
movs
frstor
mov
cdq
adc
push
jb
fsub
mov
lock
outs
mov
ins
lahf
sub
test
addr16
inc
xchg
push
aas
mov
push
inc
inc
daa
push
mov
push
das
jb
retf
or
lahf
push
cwde
test
mov
cli
ds
pop
push
icebp
xor
push
ins
inc
dec
pop
into
push
mov
jmp
xlat
retf
dec
pop
add
or
shld
dec
jns
pop
adc
test
imul
out
outs
(bad)
jne
lahf
xchg
or
repz
or
push
add
and
(bad)
movs
fwait
je
out
fcom
or
pop
test
ret
cli
das
fisub
je
push
pop
dec
jbe
cdq
fcomip
movs
test
les
pusha
and
sahf
cmp
push
jecxz
shr
leave
mov
out
and
inc
mov
imul
shl
int
mov
mov
and
inc
add
mov
mov
aad
aas
or
outs
mov
or
push
js
dec
stos
addr16
xor
mov
iret
jle
js
into
and
dec
and
movs
jp
or
pop
daa
outs
adc
jno
sbb
(bad)
or
pop
inc
pop
or
mov
push
add
test
sub
cmps
cmps
ror
and
dec
cmp
jmp
sbb
sbb
cli
sub
push
add
adc
or
mov
rol
or
sbb
pop
mov
arpl
ins
xor
sbb
jno
push
mov
or
les
test
data16
in
sahf
ret
ja
repnz
addr16
ss
jno
lods
out
sub
jae
bound
xchg
pusha
cld
sub
es
mov
mov
enter
jg
sbb
xchg
sahf
inc
push
adc
sub
adc
ret
lea
stos
xor
call
adc
sub
mov
test
cmp
xchg
lock
test
cmc
pop
inc
inc
cmp
imul
mov
add
lock
mov
pop
jge
mov
push
or
and
repz
xor
cmp
jp
in
fs
js
add
dec
or
inc
ds
mov
retf
imul
enter
cld
sub
inc
cmp
jae
aad
mov
add
mov
cmp
xor
push
(bad)
(bad)
std
and
mov
repnz
stos
fild
into
leave
movs
xchg
cmp
pop
xchg
mov
in
fwait
xchg
not
mov
popf
xor
or
pop
push
lea
aas
rcl
dec
sbb
cmps
retf
sbb
ds
ja
push
icebp
lods
jne
inc
jp
mov
xchg
inc
je
add
ds
leave
arpl
and
jle
stos
or
xchg
(bad)
jo
in
and
dec
ins
into
lods
imul
stos
lods
adc
sahf
lods
es
pop
lods
in
lods
mov
dec
adc
jmp
pop
mov
pop
dec
movs
mov
popf
pushf
pop
ja
xor
inc
lods
push
or
pop
cmp
lock
push
pop
lea
mov
fwait
and
out
jmp
mov
xor
stos
ss
cmp
sbb
xor
(bad)
mov
mov
(bad)
mov
or
push
push
pop
mov
inc
cmp
std
test
jne
rcl
dec
dec
mov
bound
fsub
xchg
cmp
fmul
cld
out
mov
loope
xor
popf
call
inc
dec
loopne
push
cmp
dec
loopne
mov
arpl
call
mov
dec
lods
(bad)
lahf
jbe
mov
(bad)
fdivrp
dec
pop
xchg
repnz
scas
push
or
xchg
mov
shr
test
adc
iret
in
push
sar
out
sub
sbb
mov
scas
not
mov
push
add
fdiv
cdq
out
loopne
adc
outs
(bad)
dec
sbb
pop
xor
sar
push
push
cmps
jno
and
xchg
mov
stc
inc
jb
popa
sbb
xchg
jg
or
jno
push
int
dec
aam
fbld
dec
or
repz
fiadd
rcl
shl
nop
cmp
xchg
test
or
cmps
dec
pop
loop
repnz
add
ds
mov
ficom
sti
xor
add
mov
xchg
sub
mov
dec
test
cld
inc
pop
jb
shr
jne
push
mov
jo
sub
jne
sbb
xor
jne
jns
mul
(bad)
retf
test
add
push
test
inc
mov
out
sbb
jns
jl
mov
popa
add
mov
adc
inc
push
cmps
popa
nop
int3
xchg
jecxz
mov
int
inc
xor
add
or
es
pop
add
cwde
bound
mov
mov
das
fisub
je
xchg
push
xor
or
mov
mov
sar
jge
mov
dec
lods
test
cld
push
xlat
fimul
cwde
adc
inc
je
repnz
js
or
cmp
loopne
loopne
js
cdq
mov
mov
push
into
pushf
or
scas
ret
or
cmp
retfw
mov
mov
fcomp
pop
pop
sub
adc
push
rcl
fist
aaa
mov
mov
jmp
rcr
jnp
mov
jo
aaa
frstor
xchg
enter
fwait
aam
mov
dec
push
sub
stos
xor
sub
mov
loope
mov
xchg
sub
ins
movs
sbb
sub
mov
call
inc
imul
push
xchg
push
loopne
mov
lahf
test
addr16
dec
jmp
pop
mov
push
pop
lock
push
loop
or
in
pop
(bad)
mov
in
mov
adc
mov
sbb
jnp
or
jne
xlat
popa
mov
popa
jmp
or
ret
lods
or
xor
popf
sub
das
sub
and
mov
mov
mov
xor
xchg
mov
xchg
add
fdivr
repz
adc
dec
pop
push
xchg
div
xor
inc
push
je
fwait
jns
call
jp
pop
and
dec
mov
jp
jnp
or
sub
push
dec
xchg
ja
sub
dec
sbb
call
movs
int3
pop
xor
stos
sar
retf
fucomi
hlt
jmp
nop
add
lods
lea
xchg
test
popf
movs
and
inc
icebp
sbb
(bad)
int
mov
mov
add
nop
push
mov
lds
mov
sbb
ja
stos
xor
outs
xchg
(bad)
clc
out
jge
lds
imul
inc
inc
loop
out
fld
sbb
mov
(bad)
fcom
cld
rol
mov
out
dec
jp
xor
mov
mov
and
mov
int
jae
add
mov
mov
cmp
mov
fidivr
jl
addr16
push
sub
xor
xlat
or
(bad)
out
jno
sti
(bad)
dec
jle
repz
cmp
xor
cmc
rcl
xchg
push
fld
sbb
pop
call
xor
stos
sar
add
or
adc
dec
pop
imul
jns
jg
jb
xlat
xchg
jmp
(bad)
(bad)
pop
pop
and
test
in
call
sti
adc
rcr
adc
pusha
mov
call
(bad)
dec
(bad)
test
in
mov
jg
sbb
pop
push
ror
rol
jo
mov
int3
imul
bound
(bad)
adc
mov
jl
adc
mov
push
or
cmp
dec
dec
add
xchg
cmc
std
dec
pop
push
jge
or
cmp
cmp
call
cmc
mov
jno
add
xlat
push
ds
and
ins
push
adc
mov
shl
push
outs
jmp
test
add
scas
jg
mov
cmps
push
push
stos
sbb
jle
fisub
mov
jae
mov
ds
pop
(bad)
aad
xor
paddq
aad
cmps
cmps
jnp
xor
(bad)
jmp
mov
retf
xor
pop
xchg
shr
cmp
and
cmp
mov
(bad)
jp
add
std
(bad)
ror
rol
mov
add
adc
pop
xor
hlt
gs
and
shl
jge
sbb
movs
xor
popa
sbb
(bad)
mov
mov
mov
and
push
lahf
dec
pop
ins
jmp
mov
mov
lahf
ret
leave
xchg
sbb
aad
leave
push
xor
push
jmp
pop
sbb
sub
mov
xor
lods
sub
add
push
or
xor
xchg
mov
push
push
(bad)
in
cld
adc
hlt
pop
(bad)
icebp
arpl
loopne
mov
call
push
lods
pop
into
fcomp
scas
test
mov
mov
(bad)
popa
js
sub
outs
push
retf
test
jne
mov
pop
add
dec
ror
loopne
repz
cdq
aam
jne
out
clc
aas
(bad)
mov
rol
adc
adc
out
mov
(bad)
out
mov
call
std
push
int
lods
adc
pop
pop
sub
pop
dec
xor
xor
pop
push
xor
and
xor
imul
xor
out
sub
bound
cmp
xor
out
mov
cs
jae
push
xor
xchg
outs
lods
mov
out
pop
xchg
ret
push
movs
jmp
jp
stos
adc
enter
and
and
fdivr
retf
ins
in
push
jmp
inc
mov
aas
jmp
loope
std
push
jne
pop
pop
push
loope
dec
and
icebp
adc
jmp
sbb
fwait
mov
dec
xor
ret
mov
les
mov
push
pop
jle
lods
fstp
xlat
data16
mov
lds
scas
ins
stos
int
aad
lahf
xor
sbb
das
fstp
push
jbe
mov
xor
es
icebp
jp
sahf
inc
adc
jne
and
and
out
ja
leave
sub
mov
fild
adc
inc
xor
xchg
repnz
cmp
bound
lea
call
xchg
test
jbe
mov
imul
xor
dec
sbb
jp
out
popf
mov
in
xchg
fsubp
std
xlat
aas
mov
and
repnz
imul
jmp
ja
lods
sahf
add
js
xor
xchg
nop
call
pcmpgtw
sbb
nop
js
dec
addr16
pop
retf
ja
mov
xchg
je
pop
xchg
stos
xor
mov
mov
mov
leave
push
xlat
dec
repz
pop
sbb
iret
ror
cwde
dec
fadd
neg
inc
ins
jne
dec
pushf
iret
sbb
push
dec
push
mov
data16
ss
mov
aad
jo
pop
movs
ins
loope
inc
lahf
call
pop
cmp
cmp
push
mov
push
jo
dec
pushf
outs
lods
dec
in
jne
lods
ficomp
xor
pop
icebp
adc
jbe
pushf
sbb
aas
inc
inc
mov
cmc
repnz
test
clc
mov
maxps
outs
xor
mul
jle
mov
mov
ficomp
lahf
repz
mov
cmp
out
pminsw
jbe
adc
shr
xlat
xchg
jg
outs
jb
adc
test
sbb
and
adc
lods
ja
int
in
sub
pop
pop
iret
aad
mov
(bad)
xchg
adc
mov
push
add
fwait
or
dec
jns
hlt
movs
ja
or
das
mov
imul
and
sbb
jmp
dec
push
jo
out
ss
in
popf
cmp
dec
adc
sbb
call
stos
mov
adc
or
or
push
pop
add
adc
test
lods
cmp
repnz
(bad)
dec
fimul
cmc
das
dec
jecxz
imul
jmp
addr16
xchg
out
dec
dec
add
jg
jle
or
aas
add
aam
sbb
cmp
iret
sub
adc
and
inc
dec
aad
int3
push
lock
push
and
call
test
sbb
scas
jno
add
xor
pop
jle
mov
lods
nop
mov
xor
add
daa
stc
push
sbb
jnp
outs
das
cmps
les
add
mov
retf
mov
fimul
test
imul
xchg
xor
push
in
xlat
or
push
jb
cmps
jmp
dec
sbb
mov
popf
sbb
push
(bad)
dec
es
mov
sub
iretw
push
neg
or
loopne
out
rol
jno
cmp
div
je
ins
add
fimul
push
mov
inc
sbb
loop
push
(bad)
jle
jle
inc
(bad)
retf
clc
xor
jnp
sbb
sub
scas
call
add
out
sub
or
(bad)
sub
in
cwde
jg
mov
aam
out
ret
lea
lock
das
xor
sub
fcom
iret
mov
daa
xchg
xor
sub
sti
call
cmc
mov
aas
jg
add
bound
adc
pop
xchg
or
xchg
xchg
xchg
or
mov
jbe
mov
js
sbb
xchg
mov
mov
test
mov
jmp
fnsave
xor
inc
(bad)
and
stos
pop
adc
out
mov
add
xlat
iret
or
out
push
cmp
rcl
xchg
jecxz
int
push
mov
lods
mov
es
mov
mov
add
inc
fcmovnbe
ins
fidivr
or
cs
retf
nop
sbb
mov
cmc
mov
mov
pop
or
ret
iret
in
ret
cmps
mov
sub
jecxz
cmp
pushw
lods
in
in
ins
out
scas
sbb
sub
fwait
sbb
mov
jno
pusha
sub
bound
add
cmps
xchg
movs
dec
sti
add
in
shr
retf
mov
cmp
xchg
call
xchg
(bad)
push
adc
mov
mov
stc
sub
mov
or
stos
(bad)
leave
icebp
iret
mov
ret
fstp
cmp
mov
out
aam
sbb
push
neg
adc
adc
loope
adc
pop
xchg
sbb
mov
fwait
dec
sbb
sub
sbb
cmp
and
jle
pop
adc
je
mov
mov
push
ds
jp
cmp
adc
push
sub
add
or
jb
pop
clc
gs
mov
mov
ss
cmp
aam
and
jl
push
jb
cs
rcr
jg
mov
ficomp
cmc
sub
popa
mov
mov
or
mov
and
(bad)
(bad)
loope
dec
add
mov
js
repnz
pop
inc
test
scas
xchg
(bad)
dec
jmp
inc
sbb
adc
loop
je
pop
adc
xor
pop
mov
(bad)
addr16
lds
jp
push
cmp
xchg
and
and
cmp
sbb
fcmovnu
repnz
int
nop
sti
inc
pop
loope
jo
mov
adc
lock
addr16
jae
addr16
gs
(bad)
faddp
iret
or
mov
leave
or
jns
sbb
loop
js
adc
rcl
cmp
retf
aam
jge
dec
inc
sub
push
jecxz
push
pop
int
cmp
jno
xchg
test
inc
lods
popf
add
jge
sub
pop
pop
push
or
inc
and
inc
bound
adc
dec
call
xchg
out
mov
repz
ficomp
shl
dec
test
in
jmp
fdivr
ins
in
xchg
shr
imul
rcr
or
cmps
movs
not
fs
push
inc
int3
jge
clc
inc
jl
mov
out
lods
popf
sti
hlt
sub
add
outs
adc
mov
xchg
cli
mov
leave
sti
pop
sbb
inc
andnps
stc
inc
mov
or
add
repz
clc
xor
in
dec
ja
push
mov
test
push
pop
cmp
xlat
leave
les
dec
(bad)
dec
add
xlat
sbb
ss
out
jmp
push
mov
outs
shr
xchg
aaa
adc
adc
sub
lods
cmps
es
stc
or
push
das
jns
retf
pop
in
or
mov
xor
shr
mov
mov
cmp
adc
int
xchg
add
pop
repz
and
(bad)
fld
fstp
dec
sub
scas
dec
push
loope
outs
mov
or
js
push
add
and
jb
mov
mov
das
xchg
dec
repnz
es
(bad)
enter
mov
stc
std
jecxz
or
imul
cmps
mov
push
push
adc
xchg
add
mov
scas
loopne
dec
fistp
adc
push
inc
and
loop
add
ja
sub
push
loop
xchg
inc
lds
data16
inc
push
(bad)
stc
(bad)
sbb
in
aad
xor
leave
imul
mov
es
mov
pop
xor
enter
xlat
jb
pop
inc
mov
push
dec
retf
aas
jmp
(bad)
sub
mov
mov
mov
xchg
push
leave
push
fisub
push
pusha
pop
push
push
adc
cmp
jecxz
push
les
or
imul
es
(bad)
rol
mov
ins
ror
pop
push
jae
mov
add
and
fs
xor
lahf
and
adc
jno
outs
pushf
mov
pop
dec
push
neg
xchg
push
inc
xor
mov
lahf
pop
das
inc
add
push
xchg
je
jo
test
inc
jl
shr
xor
adc
clc
push
cmp
sbb
cmp
dec
aaa
(bad)
push
cwde
pushf
loopne
stc
adc
aam
mov
sub
retf
nop
or
xchg
adc
inc
cwde
add
jg
mov
cwde
std
mov
stc
stos
adc
sar
stc
test
xor
push
call
xor
mov
xchg
js
test
and
mov
repnz
cmp
and
in
push
xchg
dec
pusha
or
or
fwait
je
shr
arpl
cmps
test
test
ins
and
in
dec
mov
push
inc
mov
adc
pop
push
mov
(bad)
sub
scas
adc
inc
(bad)
mul
inc
cmp
movs
lods
push
or
jnp
mov
popa
sub
dec
call
inc
adc
addr16
push
or
adc
pop
ffreep
xlat
mov
repnz
cmc
cld
dec
mov
xchg
ror
adc
pushf
xchg
pop
retf
nop
jnp
aaa
fsubr
lea
xor
push
sahf
xor
lods
fimul
xchg
enter
adc
mov
sar
push
inc
mov
retf
nop
ins
mov
mov
scas
dec
mov
mov
call
jge
daa
mov
je
mov
mul
push
mov
das
fwait
inc
popa
inc
stos
loop
adc
nop
inc
std
retf
int3
add
adc
imul
inc
outs
jo
cmc
or
dec
and
add
loope
fldenv
pop
pop
fadd
xchg
mov
rcl
pushf
fldenv
aas
and
iret
je
(bad)
cli
mov
std
jns
cmp
clc
in
mov
jmp
out
mov
test
in
das
mov
cli
mov
(bad)
pop
fsub
jnp
mov
icebp
xrelease
mov
(bad)
pop
(bad)
test
add
lock
cld
mov
mov
mov
lods
add
(bad)
ja
dec
or
repz
(bad)
jecxz
lods
das
xchg
jecxz
ins
adc
mov
and
icebp
sub
enter
(bad)
sub
xor
mov
xchg
sbb
idiv
xchg
jae
int
adc
dec
jmp
sub
push
or
sbb
out
iret
or
pop
dec
cmp
in
movs
sub
sbb
fmul
(bad)
neg
adc
add
scas
inc
sub
ret
int
cld
mov
sti
cmps
sbb
and
shl
outs
in
xchg
adc
shl
or
test
inc
scas
stos
ja
enter
inc
cld
fsubr
xor
jb
movs
pop
mov
loop
xor
sub
push
inc
je
jbe
sub
fwait
psllw
out
daa
imul
cmp
fidiv
cmp
ret
mov
jecxz
xor
js
mov
adc
cmp
push
pop
mov
sub
fbld
sbb
dec
rep
pop
out
out
cmp
ds
inc
and
inc
arpl
and
pop
inc
into
je
sbb
sbb
mov
(bad)
div
lds
inc
ins
stos
in
add
stos
dec
sub
or
call
stos
or
dec
fwait
and
(bad)
xor
lods
or
cmps
mov
mov
out
hlt
mov
xchg
lock
sbb
push
mul
push
and
add
or
test
push
mov
das
push
outs
mov
pop
inc
mov
push
and
iret
les
jp
bound
inc
pop
pop
cdq
jns
pop
xor
pusha
push
jnp
in
clc
cld
es
pop
or
cdq
sti
popf
in
adc
add
sub
mov
mov
mov
jmp
es
cmps
jb
mov
addr16
dec
aad
adc
iret
pop
xchg
outs
adc
push
mov
dec
std
push
bound
(bad)
outs
mov
lods
xor
outs
fist
imul
aaa
push
repnz
and
int
sar
popf
mov
xchg
stc
je
mov
out
loope
push
adc
mov
jnp
cmp
dec
sub
lahf
std
mov
lods
xchg
xchg
xchg
in
stc
aad
xor
retf
test
push
daa
mov
rcr
call
les
and
jnp
mov
jae
dec
loopne
inc
hlt
mov
or
stc
sbb
dec
sbb
sbb
stos
jp
push
jae
sub
fild
cmps
xchg
int3
mov
in
and
cmp
adc
retf
adc
fs
inc
dec
addr16
das
cmc
inc
sub
cmp
inc
push
test
inc
adc
add
(bad)
lods
jo
pop
mov
push
pop
jb
xor
int3
adc
sbb
xchg
inc
cs
int
into
push
sub
fist
adc
popa
or
int3
jg
jge
and
cwde
or
cmp
in
adc
fimul
stos
addr16
mov
jo
or
sbb
xor
mov
or
push
mov
mov
fist
push
bound
lods
push
mov
mov
inc
pop
dec
fsub
sti
xchg
aad
std
pushf
loop
nop
mov
sbb
stc
ret
mov
inc
xchg
imul
xchg
push
bnd
pop
xor
cmp
push
pusha
aaa
mov
push
push
mov
stos
push
push
cmp
mov
mov
mov
fmul
mov
push
lods
xchg
mov
and
inc
pop
fidivr
mov
int3
jmp
jae
addr16
xor
adc
icebp
pop
dec
sub
push
test
inc
sub
adc
arpl
mov
xor
sahf
jb
mov
and
adc
fwait
xor
fmul
mov
repnz
push
inc
ja
dec
ret
shl
cmp
mov
mov
inc
jnp
loope
and
jb
adc
loope
sub
(bad)
rcl
xor
xor
loope
aaa
hlt
mov
fld
in
pop
test
aad
cmps
jp
cmp
test
jl
addr16
inc
sub
pushf
fst
push
mov
dec
and
bnd
scas
lods
test
mov
jmp
stc
out
xchg
or
aam
pop
clc
jbe
ins
ins
sub
aad
dec
retf
pop
pusha
mov
es
or
jle
inc
and
std
(bad)
cld
sti
retf
inc
jg
push
push
das
ja
(bad)
jmp
xlat
sbb
int3
sahf
mov
add
sub
push
pop
or
nop
mov
(bad)
cmp
lods
fnstsw
dec
fcmovu
jmp
nop
dec
enter
mov
mov
jg
cwde
into
stos
std
xor
not
repz
jecxz
push
inc
pusha
dec
xchg
fisubr
das
pop
rcl
xchg
ror
push
nop
cwde
ret
jl
int
or
and
in
pushf
mov
dec
in
adc
xor
jnp
pop
pop
push
lea
xchg
push
mov
jbe
push
retf
fwait
retf
xchg
loopne
pop
lods
cdq
ret
in
adc
ins
push
test
shl
out
mov
and
push
adc
dec
in
add
cmp
test
add
imul
add
dec
ficom
fwait
ret
ror
and
fisubr
add
out
jl
bswap
aam
std
xchg
jae
push
pop
xchg
and
stc
xor
(bad)
mov
(bad)
sti
mov
ror
fsub
ret
scas
jg
call
sub
mov
jmp
je
mov
dec
and
imul
icebp
shl
ss
inc
or
or
movs
add
movs
aaa
outs
sbb
or
ins
ins
pop
out
cld
(bad)
clc
mov
jne
cmc
sahf
dec
push
add
xchg
int
pop
fpatan
scas
jle
stc
icebp
aam
dec
outs
fmul
sbb
arpl
lods
repnz
xchg
jge
dec
or
fstp
std
pop
push
xchg
outs
js
outs
add
or
or
out
adc
or
xchg
xchg
and
lods
bound
inc
jno
xor
and
shr
shl
inc
or
int
mov
dec
jb
sbb
mov
ds
sahf
xor
or
pop
shl
jae
push
xor
jns
mov
lds
mov
and
mov
nop
mov
repnz
add
push
inc
mov
(bad)
push
add
mov
or
adc
fbstp
fmul
cmp
sbb
or
and
dec
int3
addr16
cli
or
arpl
jns
adc
std
mov
mov
leave
arpl
jae
cmp
push
xchg
sbb
jg
test
jne
inc
mov
and
sar
popf
push
xchg
retf
xor
dec
hlt
retf
sti
xchg
je
or
add
iret
mov
dec
outs
ins
and
and
mov
sahf
pop
adc
xlat
jl
xor
fcom
adc
scas
repnz
test
retf
aad
dec
xchg
push
out
out
xor
push
xchg
por
jno
inc
pop
je
inc
push
xor
das
cmps
into
ret
and
inc
dec
push
sub
loop
outs
repnz
popa
jp
mov
leave
ss
jno
call
mov
or
mov
jp
add
and
push
dec
xchg
mov
xchg
push
cmp
or
sbb
cmp
rol
push
mov
add
sbb
xchg
aas
ds
fwait
cmc
cmps
fbstp
sbb
sbb
or
pop
push
fucomi
mov
mov
push
rcl
retf
daa
(bad)
mov
scas
xor
lods
fld
mul
cmps
aas
sub
sbb
and
adc
popa
jne
jecxz
pusha
sub
sar
xchg
daa
stc
cmps
in
std
retf
push
push
int3
inc
(bad)
fdiv
cmps
inc
add
pop
inc
nop
repz
cld
mov
call
lds
push
fisubr
push
jno
mov
(bad)
jge
pushf
jmp
pop
and
enter
ins
bound
loope
pop
adc
adc
pop
aad
dec
cmp
ja
sub
test
aad
jle
fs
iret
jmp
adc
shl
push
clc
lahf
and
out
sub
retf
loopne
xchg
enter
xchg
stos
pop
loope
xor
pop
pop
js
aas
lock
mov
hlt
ss
in
out
hlt
and
call
call
add
and
test
xor
xor
xchg
xabort
jno
int3
add
cmps
out
jl
mov
aas
push
cmp
shl
adc
inc
pop
lods
inc
into
xchg
pop
xchg
or
and
sahf
mov
mov
icebp
cmp
push
sbb
push
das
lahf
push
xchg
stc
cmp
adc
jbe
int
xchg
and
retf
push
lods
dec
xor
xor
mov
dec
int
shl
jecxz
inc
mov
fs
(bad)
mul
push
sub
(bad)
(bad)
ins
or
jmp
imul
retf
pushf
cmp
mov
repz
mov
xchg
test
jmp
xchg
retf
icebp
pop
je
lods
aaa
sahf
jl
add
cmp
(bad)
cmp
into
sbb
fcom
repz
mov
pop
sbb
scas
mov
cld
jnp
loopne
jmp
sbb
in
lds
mov
and
xor
cmp
xchg
test
push
(bad)
outs
arpl
scas
mov
fst
loope
dec
jmp
lahf
js
cli
fstp
call
push
fild
adc
push
leave
aas
push
addr16
dec
inc
icebp
(bad)
mov
callw
test
aas
mov
push
(bad)
pop
lods
mov
loopne
cmp
fdiv
sbb
cmp
in
jg
bswap
inc
mov
test
cmp
inc
or
pushf
push
xor
imul
add
int
jle
(bad)
cmp
clc
or
cmp
lds
push
pop
dec
aad
ret
stos
jae
call
push
mov
retw
cmps
mov
xchg
cli
and
nop
inc
inc
sahf
loopne
int
jne
jbe
mov
jb
bound
inc
mov
scas
pop
out
js
xchg
xor
mov
sti
push
les
test
nop
pop
sub
fcom
call
push
(bad)
out
movs
dec
(bad)
cs
cmps
push
or
jg
dec
inc
inc
cmp
pop
into
lods
push
scas
shl
xchg
loope
push
and
movs
cli
mov
mov
in
ret
dec
adc
inc
xor
dec
mov
nop
iret
mov
stc
or
mov
imul
cdq
out
dec
dec
sbb
xchg
add
push
jmp
jl
mov
mov
mov
outs
or
cs
sahf
xchg
push
push
call
push
mov
pop
sbb
inc
adc
enter
pop
retf
add
es
cmp
aam
ret
leave
jmp
fistp
xor
add
adc
outs
imul
fbld
xor
ins
jmp
inc
mov
dec
mov
ins
cmps
loope
(bad)
xor
repnz
dec
je
mov
fdivr
cli
lea
mov
std
xchg
mov
popa
inc
inc
leave
fcomi
adc
shl
xor
fild
inc
repnz
jns
jp
pop
sbb
outs
adc
push
mov
mov
xor
push
adc
pop
xlat
ret
test
rcr
push
outs
mov
test
sub
mov
hlt
(bad)
mov
imul
xchg
inc
pusha
mov
adc
jl
or
jmp
mov
shl
and
adc
pushf
pop
ds
test
fistp
add
mov
jmp
sahf
shr
movs
(bad)
pop
mov
dec
add
mov
xor
add
pop
cmp
sar
stc
pop
lds
sti
retf
std
sbb
out
inc
arpl
xor
mov
jb
mov
sub
pop
mov
sub
(bad)
dec
xchg
aas
push
push
push
push
clc
inc
ja
mov
mov
or
pop
and
xchg
mov
pop
inc
lds
stos
pop
jg
pusha
repz
out
sub
pusha
daa
push
cmps
aam
xchg
mov
push
jle
(bad)
jge
popf
xchg
mov
stos
mov
popw
mov
leave
jecxz
dec
mov
add
(bad)
sub
cmp
adc
sub
and
xchg
pop
jae
adc
(bad)
mov
inc
fiadd
ret
cld
mov
out
pop
pop
(bad)
fild
imul
jg
add
ret
shl
mov
gs
loope
fbld
pop
mov
scas
ja
sbb
mov
mov
add
xor
call
sbb
rcr
popf
pop
pop
psllq
dec
jg
mov
mov
arpl
jmp
aaa
fmul
fistp
iret
cld
fild
push
adc
xor
dec
xchg
outs
cmp
pop
es
aam
scas
push
mov
stc
pop
retf
push
dec
call
jns
std
xor
repnz
leave
leavew
retf
jg
sub
xor
js
das
sbb
cmp
pop
or
out
adc
in
icebp
lock
ss
xchg
data16
pop
call
dec
xchg
in
sub
out
fimul
aas
imul
pop
xchg
adc
retf
popf
into
movs
push
es
outs
in
cdq
adc
icebp
hlt
inc
xchg
call
cmp
pop
test
(bad)
call
(bad)
leave
xchg
mul
jne
mov
mov
or
popa
mov
mov
nop
or
pop
iret
test
add
dec
xchg
inc
int3
sti
push
mov
and
mov
inc
push
hlt
push
call
outs
aam
mov
(bad)
jmp
movzx
xlat
call
xor
push
enter
(bad)
cdq
popf
cmp
jmp
sbb
and
adc
adc
cld
adc
push
push
or
int
(bad)
and
dec
cdq
(bad)
(bad)
pop
adc
int3
pushf
hlt
pop
call
outs
add
ja
(bad)
dec
leave
sti
sub
icebp
pop
fdivr
jbe
es
jl
sahf
les
std
js
cmp
int
add
cmps
inc
mov
xchg
sub
(bad)
sub
in
mov
adc
popa
xchg
pop
mov
xchg
mov
pop
test
test
sbb
aaa
jge
adc
and
push
outs
xchg
cmc
(bad)
out
sbb
sbb
and
fwait
(bad)
stc
mov
sub
lds
(bad)
(bad)
arpl
sbb
(bad)
lds
ror
jb
mov
(bad)
loop
icebp
les
push
dec
ins
js
mov
ss
dec
push
mov
data16
mov
lds
hlt
loop
push
inc
xchg
xor
mov
mov
daa
sbb
pusha
mov
add
cwde
jecxz
test
pop
loop
pop
inc
mul
mov
rcl
cmps
sti
callw
ins
fcmovnb
fwait
push
pop
idiv
xor
pop
inc
or
mov
push
fst
les
cmp
stos
mov
fild
sub
loop
jmp
xor
test
mov
push
(bad)
mov
dec
push
psubw
popa
dec
das
xor
mov
mov
out
scas
sub
mov
out
jle
mov
dec
push
add
daa
(bad)
fistp
mov
sbb
fcom
mov
nop
inc
sub
cmp
(bad)
cmp
loope
mov
dec
mov
mov
or
xor
dec
dec
fidivr
cmps
pop
aas
outs
mov
jmp
adc
test
jbe
jp
xor
dec
cmp
cmps
push
adc
lods
cmp
inc
xor
mov
or
inc
arpl
into
jnp
add
jecxz
loopne
mov
mov
inc
inc
movs
loope
test
sub
lods
mov
inc
inc
dec
outs
inc
iret
jp
adc
adc
int3
daa
js
pop
out
sub
test
adc
jl
push
je
adc
inc
pusha
inc
adc
pop
pop
pushf
and
adc
or
or
xor
mov
sub
fsubr
clc
mov
pop
adc
(bad)
out
inc
(bad)
mov
cmp
(bad)
xlat
fcmove
es
(bad)
nop
jecxz
and
mov
mov
inc
test
stc
retf
add
imul
out
ds
jns
shl
out
push
or
sub
cmps
xor
stos
inc
lods
dec
adc
test
xchg
push
mov
dec
adc
in
mov
pop
mov
daa
(bad)
and
fsubr
outs
adc
mov
stos
sub
fild
and
push
push
jp
and
sub
iret
push
scas
sbb
adc
inc
sub
dec
icebp
mov
jbe
mov
add
jns
inc
int
fldz
sysenter
fwait
enter
pop
lock
pop
out
bound
nop
push
cmps
mov
mov
mov
mov
mov
xchg
push
xchg
push
aam
or
jmp
push
mov
loope
xor
outs
call
jmp
xor
cmp
int
add
and
es
pop
shl
in
dec
add
mov
dec
call
sbb
jbe
mov
mov
rcl
and
loop
push
je
out
xchg
neg
scas
(bad)
cmp
clc
adc
sti
mov
dec
add
mov
push
les
mov
add
or
cmps
repz
push
das
jnp
and
cwde
dec
push
les
sahf
shl
call
cmp
cs
jb
ja
jns
inc
pop
pop
dec
xlat
fptan
sub
enter
jecxz
sub
xor
ror
xchg
jnp
lahf
push
cmp
sub
aaa
sar
mov
xchg
mov
mov
mov
fcom
sti
fwait
shl
imul
xlat
xor
sub
scas
sbb
pop
inc
push
shr
mov
ficomp
sub
lahf
xor
popa
xlat
and
outs
mov
push
xchg
sti
xchg
das
mov
retf
xor
jl
js
cmp
adc
mov
adc
pushf
mov
add
mov
pop
xor
push
xor
sahf
adc
push
cli
jns
stos
mov
inc
sbb
iret
loopne
sub
pop
or
fisttp
(bad)
push
or
or
(bad)
inc
in
ja
cmp
cmps
and
and
mov
mov
sbb
movs
or
loope
push
pop
sub
xchg
jmp
jnp
push
mov
cld
ficomp
push
sbb
movs
add
push
jle
bound
mov
repz
add
xor
xchg
or
xor
(bad)
xor
pop
cmp
sbb
fwait
mov
jo
or
push
push
test
sub
les
mov
mov
xchg
mov
mov
jnp
push
adc
out
inc
mov
cmp
push
fwait
mov
push
add
and
mov
xchg
popa
pop
or
sbb
jp
and
sub
cmps
popf
rcr
cwde
pop
adc
or
fstp
add
xor
xlat
mov
sbb
pop
std
adc
jnp
in
sahf
bsf
ins
int
lds
or
xchg
xchg
outs
clc
aad
cmps
or
jb
pop
mov
test
xchg
mov
mov
and
or
(bad)
arpl
shl
xor
test
sar
pop
adc
clc
mov
mov
mov
movs
(bad)
mov
test
shr
jecxz
(bad)
adc
in
mov
lods
fwait
add
clc
xlat
cmp
and
adc
pop
jmp
jge
mov
xor
out
adc
pop
fnstenv
jae
loope
xchg
pop
lock
enter
cmp
sbb
vmwrite
and
dec
sbb
mov
mov
int
call
sti
jbe
mov
loopne
sbb
xor
rcl
sbb
(bad)
mov
ja
bound
push
mov
cs
or
pop
fstp
xchg
adc
push
cmc
jp
sbb
cmp
add
mov
mov
out
stos
mov
dec
scas
jmp
sub
(bad)
in
mov
lea
loopne
mov
hlt
cli
add
xchg
mov
mov
inc
inc
daa
mov
outs
mov
push
scas
mov
retf
aad
pop
in
pop
ss
sbb
jnp
clc
pop
dec
and
xchg
aas
cs
daa
jne
movs
pusha
test
or
jo
in
inc
mov
push
(bad)
sar
sar
(bad)
push
outs
lea
out
push
xor
cli
cwde
cmp
fwait
retf
pop
cmp
xor
or
sbb
cmp
data16
pop
clc
fbstp
outs
add
aad
cs
jecxz
mov
inc
jge
(bad)
lods
jmp
shl
or
(bad)
icebp
aas
mov
idiv
ins
loope
jno
add
ret
sbb
test
sub
loope
jae
cli
jb
xchg
fwait
jle
or
in
jnp
mov
push
gs
push
fs
fmul
call
nop
mov
fwait
cmp
in
mov
popa
add
add
sar
mov
popf
jnp
in
outs
je
and
arpl
loope
mov
daa
fucom
addr16
mov
push
divps
shl
jp
(bad)
cmp
(bad)
pushf
cli
fwait
rcl
mov
and
fnstcw
leave
fisub
(bad)
jecxz
xchg
mov
mov
call
mov
inc
cmp
frstor
sti
xchg
mov
jmp
in
dec
call
cmp
enter
add
xchg
aaa
leave
mov
adc
imul
sub
outs
mov
pop
mov
mov
cmps
add
pmaxub
(bad)
dec
cdq
das
inc
pushf
jnp
mov
mov
lds
sbb
mov
shr
inc
fwait
push
cli
and
push
(bad)
repnz
xor
add
or
and
fisubr
inc
enter
and
add
mov
jae
jnp
fldcw
or
sahf
dec
fsubr
add
mov
pushf
jge
jg
jae
jge
stos
sub
cmp
xchg
sbb
jno
jo
mov
and
mov
push
sub
xchg
mov
jecxz
cwde
inc
leave
and
in
push
inc
add
fwait
ds
sbb
mov
shl
mov
sub
and
mov
cmp
dec
mov
fiadd
ss
aaa
mov
jb
lds
dec
adc
jmp
test
push
jecxz
mov
sbb
jl
inc
push
jge
mov
dec
pop
or
sub
leave
dec
lock
push
or
scas
cwde
pop
addr16
and
sbb
scas
(bad)
xor
sub
mov
lock
cs
out
scas
es
popa
hlt
inc
mov
sub
push
dec
lahf
loopne
fld
imul
dec
and
xor
popf
push
push
and
jle
fs
pop
retf
out
sar
rcr
sbb
in
lock
sub
sub
mov
ds
mov
sti
adc
hlt
jns
(bad)
mov
jns
in
jecxz
sti
mov
mov
icebp
pop
or
jecxz
pop
xchg
sub
sub
mov
dec
out
xchg
mov
lahf
add
push
and
aam
fdiv
enter
add
aad
nop
xchg
dec
fiadd
repz
xor
iret
xor
aad
mov
push
xor
pushf
mov
ret
xchg
test
xor
gs
mov
aas
call
xor
and
jmp
test
add
retf
rcl
arpl
rcl
and
aam
(bad)
loope
retf
jae
sub
mov
jp
js
push
ror
pop
outs
inc
(bad)
loop
add
mov
and
test
fnsave
loop
pop
out
or
pop
pop
and
adc
test
cmp
sub
and
jnp
icebp
iret
mov
jb
xor
xlat
stos
inc
scas
enter
jl
push
cmps
push
and
popf
scas
mov
xchg
in
cdq
repnz
dec
fistp
cwde
dec
pop
pop
mov
cmp
lock
push
in
mov
mov
cdq
outs
inc
dec
fcmove
inc
push
in
push
mov
dec
jne
jecxz
out
sbb
cdq
nop
xchg
add
scas
mov
mov
les
test
cli
movaps
pop
hlt
sub
call
inc
inc
add
sbb
popa
lods
fstp
add
xor
retf
in
mov
mov
xchg
adc
mov
in
pop
jmp
sub
aam
xor
jae
mov
mov
push
mov
cmp
je
outs
mov
fbstp
dec
pop
loop
xchg
out
and
inc
jmp
fwait
jmp
jg
sub
inc
or
mov
and
in
into
cmp
and
or
int
jg
pop
sti
add
add
or
inc
mov
ret
int3
and
add
test
call
push
xchg
lods
(bad)
pop
(bad)
fwait
std
je
xchg
xlat
jnp
xchg
(bad)
jmp
loopne
lea
jle
retf
scas
vandps
sub
fcomip
paddusb
push
pop
inc
xchg
xchg
dec
movs
jl
cmc
jge
icebp
out
pop
call
(bad)
mov
je
pop
int3
aas
and
cmp
test
mov
xchg
jmp
inc
mov
scas
add
(bad)
or
jl
std
hlt
cmp
test
fidiv
outs
dec
bound
call
fst
movs
cmp
jmp
dec
xchg
or
int3
movs
inc
fisttp
or
scas
pop
fidivr
xlat
out
jmp
cmp
popa
rol
aaa
test
xchg
retf
bound
(bad)
call
push
jecxz
pop
mov
test
mov
lods
mov
or
xor
pop
(bad)
imul
das
clc
push
ficom
icebp
pop
je
xor
mov
and
rcr
out
cld
dec
or
call
mov
push
into
sti
adc
pop
and
stc
retf
inc
xchg
or
inc
sbb
out
xchg
xor
jo
cmp
stos
cmp
mov
adc
push
dec
mov
mov
aam
pop
scas
cmovns
pop
pop
data16
pop
pop
lahf
or
lahf
iret
mov
loope
shl
not
jecxz
xor
scas
mov
int3
pusha
inc
jbe
sbb
je
inc
jb
cmps
movs
pushf
shl
inc
xor
sbb
push
dec
jl
mov
add
scas
stc
test
(bad)
sti
jne
(bad)
pop
rol
add
aad
sti
mov
cs
cmp
cmps
test
pop
xchg
jp
xchg
retf
push
js
mov
shl
add
xor
push
lea
mov
mov
int
or
dec
pusha
inc
push
(bad)
sbb
jno
mov
stc
sbb
xor
movs
mov
fmul
fdivr
adc
fiadd
(bad)
pop
and
adc
data16
sbb
mov
pop
fs
cmp
pop
and
and
cmps
dec
dec
iret
push
leave
sub
xchg
retf
dec
jmp
in
lods
in
imul
push
call
inc
sub
leave
imul
inc
and
or
ins
xchg
ror
sbb
hlt
lods
jge
add
je
ins
lea
ja
xor
clc
ret
shl
or
out
enter
mov
jecxz
scas
mov
jns
test
int3
stos
or
test
movs
enter
popf
out
imul
adc
jge
out
or
mov
(bad)
ja
pusha
fmul
nop
adc
push
movs
dec
lods
add
pop
cmps
cmp
and
mov
cmp
das
idiv
fwait
pop
movs
lahf
jp
ins
sbb
pop
and
movs
or
xchg
es
push
fisttp
add
in
pop
mov
fwait
sub
repz
test
adc
ret
ins
and
push
xor
leave
inc
xchg
pop
mov
test
mov
pusha
mov
mul
iret
mov
push
lds
dec
bound
out
loopne
xchg
xchg
imul
test
mov
sti
and
shr
int
clc
in
pushf
or
mov
arpl
leave
test
xchg
(bad)
maskmovq
int3
cld
and
jg
and
xchg
test
pop
jne
fisttp
or
cmps
(bad)
in
jne
jns
outs
data16
pop
arpl
scas
jmp
clc
loop
outs
add
xchg
and
jnp
ins
inc
adc
jae
xor
shl
ins
std
jle
xor
dec
cs
inc
cwde
sbb
pop
cwde
xchg
sub
test
(bad)
fwait
xchg
out
cmp
sub
pop
push
and
les
sub
cwde
sub
push
in
hlt
sbb
inc
rcr
or
retf
shr
xor
cs
sbb
sti
mov
scas
lahf
mov
mov
dec
dec
lock
mov
mov
pop
mov
and
mov
loope
mov
(bad)
(bad)
xlat
jmp
xchg
pop
cmp
xchg
lock
arpl
sub
and
jb
sbb
(bad)
retf
or
pop
sahf
add
pop
sbb
fst
(bad)
cmp
cmps
loope
mov
jae
xchg
or
je
jbe
or
jae
adc
xchg
clc
scas
mov
pusha
(bad)
mov
jg
xlat
mov
sbb
test
enter
inc
int
fdiv
loop
mov
mov
imul
inc
mov
imul
sar
js
stos
or
mov
push
pop
mov
rol
sbb
sub
push
in
lds
stos
push
push
in
mov
fadd
retf
stc
les
xor
fisubr
lahf
lahf
arpl
xor
jp
xlat
out
cmps
or
idiv
xchg
dec
inc
leave
dec
retf
xor
xchg
imul
xor
pushf
pop
fimul
add
adc
dec
in
cmp
or
arpl
or
not
jbe
hlt
movaps
(bad)
call
cmp
cmp
ins
loopne
xchg
out
jo
sub
push
cmp
ror
mov
add
sub
stc
inc
pop
nop
push
aas
mov
cmp
mov
out
dec
mov
push
xchg
jl
mov
push
repz
pushf
shr
mov
cmps
std
cmps
shl
mov
pop
ja
push
mov
jb
data16
call
jge
(bad)
dec
leave
(bad)
xor
fmulp
leave
dec
sbb
and
xor
adc
(bad)
xchg
dec
sti
ret
and
mov
stos
cmps
adc
and
or
adc
in
imul
dec
cmp
retf
jl
cmps
add
sub
adc
jle
sbb
mov
stc
sbb
jmp
fwait
call
jmp
push
inc
pop
dec
test
mov
lea
test
cwde
jmp
je
pop
sub
nop
cdq
cmp
loop
imul
jp
sbb
pop
lahf
jp
push
adc
and
jge
jl
jno
popa
cli
call
lahf
add
test
or
pushaw
and
ins
retf
and
jmp
pop
mov
mov
nop
sbb
call
push
in
mov
mov
push
jno
xchg
retf
inc
pushf
dec
push
stos
adc
jmp
nop
popa
(bad)
pcmpeqd
lahf
loopne
jo
fwait
fs
or
xchg
ins
cld
and
rol
pop
iret
and
(bad)
or
lds
and
(bad)
fsub
cwde
rdpmc
mov
in
cmp
push
repz
add
movs
push
loope
faddp
icebp
or
call
call
and
cmc
fcomp
add
bound
loopne
iret
scas
(bad)
loop
jge
fsubr
mov
sbb
ficomp
push
add
cmp
ss
mov
adc
retf
les
ins
adc
or
inc
fnstenv
pop
xchg
mov
inc
xor
inc
in
sub
sbb
ins
sbb
mov
xor
xchg
adc
fidivr
ret
push
jecxz
and
cmp
or
rcr
jno
out
add
dec
lahf
mov
movs
movs
jecxz
jno
into
ds
repnz
nop
cwde
repnz
inc
jl
test
mov
adc
imul
xchg
dec
xor
xchg
icebp
test
add
pop
xchg
sub
sub
dec
shl
dec
data16
dec
loopne
adc
adc
fld1
mov
cmp
and
mov
and
js
mov
bound
sbb
fild
das
pop
dec
ins
cmp
dec
mov
jbe
push
loop
mov
and
push
ins
sti
sbb
add
xchg
mov
mov
out
retf
in
ss
gs
iret
inc
pop
out
scas
xor
cmps
xor
jno
test
adc
sub
xchg
lahf
jmp
outs
xchg
mov
outs
dec
sub
sub
ins
std
xor
mov
sbb
mov
mov
movs
adc
cmc
push
mov
push
test
int
xor
xor
lock
sub
cmp
lds
sahf
es
adc
fsubr
stc
aam
jbe
(bad)
in
jmp
enter
or
adc
add
push
fdiv
jecxz
jnp
dec
xchg
or
or
mov
inc
pop
xor
ss
mov
inc
int3
shr
pushf
imul
cmp
xor
ds
sub
mov
and
lock
sbb
loop
inc
test
and
cmp
mov
xor
stos
stos
(bad)
js
mov
repz
mov
scas
jecxz
lahf
je
pop
jp
call
mov
out
in
push
into
mov
in
gs
lea
cs
jmp
mov
mov
mov
mov
adc
test
cmp
dec
cmps
add
mov
(bad)
pop
outs
jbe
sub
clc
repnz
rcr
cdq
movs
and
cmp
(bad)
mov
test
push
inc
repz
push
xchg
mov
into
(bad)
aad
push
cdq
cmc
lahf
xor
test
(bad)
les
pop
push
pop
call
das
add
shl
ja
add
int
fnstsw
sbb
loop
outs
dec
nop
call
dec
sub
mov
movs
iret
unpckhps
jp
gs
pop
pop
mov
ficom
lds
xor
sub
loopne
mov
mov
lea
nop
mov
pop
cs
in
nop
and
push
adc
push
cmc
adc
mov
sbb
push
pop
mov
ror
and
repz
cmp
xor
xor
mov
movs
mov
mov
dec
jge
cdq
xlat
leave
test
add
cmp
or
mov
mov
test
lea
loop
and
push
out
pop
and
stc
call
pop
mov
lds
hlt
icebp
or
int
sub
sub
and
fnstcw
sahf
sbb
lea
sub
jge
outs
mov
js
stc
out
cmp
pop
push
add
aaa
stc
xor
sbb
jl
enter
loope
les
shl
test
push
and
jae
mov
jb
or
mov
inc
in
pop
or
adc
test
aam
dec
pop
push
inc
pop
dec
rcr
movs
stos
cdq
out
stos
mov
jae
shl
lahf
ffree
cdq
aam
add
fpatan
mov
test
je
sbb
aam
and
mov
mov
call
imul
sahf
mov
cld
adc
pop
push
push
dec
or
mov
mov
popf
mov
inc
inc
sub
loop
clc
shl
jno
pop
ss
mov
mov
sub
mov
jno
adc
jne
dec
shr
loopne
inc
pop
stos
stos
das
adc
pop
les
aad
in
mov
aaa
jbe
stos
test
jmp
into
push
mov
retf
sub
jns
enter
mov
push
push
fwait
xchg
(bad)
fs
sbb
ror
sbb
push
arpl
enter
daa
inc
dec
outs
pop
add
mov
leave
mov
cdq
sub
(bad)
push
sbb
dec
inc
xrelease
sub
out
hlt
rol
cmps
push
rcl
ins
popa
cmp
lea
xlat
and
jecxz
(bad)
pop
inc
ins
aaa
rcr
imul
leave
cli
jmp
adc
xchg
cmp
push
inc
pop
pop
rcl
cs
pop
cdq
push
push
push
cmp
scas
fs
retf
clc
add
xor
inc
pop
mov
inc
test
out
and
dec
sub
addr16
mov
dec
fldenv
sbb
xchg
popf
mov
lods
adc
loope
aam
push
fistp
adc
test
pop
xor
inc
int
rcl
loop
daa
enter
call
mov
test
mov
push
sti
mov
or
xor
call
mov
cmc
pusha
fcomp
ins
inc
lods
inc
jo
outs
sti
mov
shl
syscall
dec
sbb
push
inc
and
pop
loop
dec
dec
loopne
fstp
xchg
leave
jl
mov
(bad)
jmp
nop
addr16
and
jp
push
neg
ficom
mov
xchg
dec
mov
test
js
addr16
shl
mov
pop
mov
rcl
xchg
sub
js
and
fimul
iret
or
shl
not
jb
push
cdq
mov
push
imul
sbb
mov
push
push
cmps
jg
(bad)
add
scas
scas
pop
retf
in
int3
clc
repnz
mov
mov
lahf
movs
shl
adc
mov
sahf
push
dec
xor
pop
(bad)
hlt
cmp
xor
add
mov
(bad)
cmp
out
push
pop
(bad)
outs
dec
or
jnp
lock
jns
sti
fisubr
aam
stc
cli
leave
sbb
push
icebp
xor
xchg
inc
push
lock
cwde
movs
inc
add
push
cmp
inc
fcomp
xor
pop
out
pop
loop
push
nop
call
adc
(bad)
pop
sbb
fcom
push
mov
cmp
retf
jns
retf
dec
sti
loopne
mov
test
in
adc
inc
mov
inc
dec
mov
push
jecxz
xor
xchg
das
repz
cs
sbb
dec
sbb
adc
fdiv
add
out
add
or
bound
push
pop
addr16
sahf
cli
call
push
loope
jmp
push
movs
movs
bound
into
sbb
mov
or
test
or
outs
jl
stc
lahf
aaa
dec
daa
addr16
add
and
arpl
or
scas
divps
push
sbb
cdq
pop
push
imul
data16
(bad)
cdq
xor
in
jno
outs
popf
out
mov
cmps
mov
push
ja
sbb
sbb
jmp
and
retf
mov
xor
adc
fistp
rcr
xchg
fwait
repz
jmp
push
sub
cmp
xchg
jl
cmp
mov
pop
and
das
pop
pop
enter
ins
retf
movs
inc
xor
dec
pushf
pop
daa
or
mov
ins
xor
xor
dec
aad
jae
mov
test
repnz
add
mov
aas
lea
into
push
in
out
pop
jo
pop
dec
dec
rol
mov
mov
aas
jae
xor
aam
cmp
(bad)
daa
dec
rcl
adc
and
lock
arpl
and
inc
hlt
jecxz
push
push
into
cmp
push
fistp
jae
aaa
bnd
sub
mov
inc
clc
pop
out
xchg
add
xlat
and
out
or
push
test
cld
inc
jb
dec
add
inc
add
shl
pop
pop
scas
mov
ret
pop
jmp
retf
fimul
loopne
mov
sbb
lods
pop
push
jno
dec
ror
cmp
jg
mov
outs
jnp
xor
stos
(bad)
and
inc
add
jne
pop
out
mov
pop
sahf
push
out
imul
and
shl
jmp
or
or
and
add
mov
lods
add
xor
mov
in
mov
jne
nop
call
jmp
sub
mov
into
add
pop
jo
or
stc
inc
or
add
mov
test
mov
add
icebp
clc
test
repnz
cmps
fs
stc
data16
jecxz
mov
inc
mov
and
push
mov
jp
jb
push
repnz
inc
out
dec
dec
or
sbb
repz
mov
adc
push
imul
or
retf
cmp
std
stc
cmp
jecxz
inc
test
mov
fnstcw
cmp
jle
imul
push
into
and
push
xor
inc
shl
adc
xor
and
inc
in
iret
mov
stc
repnz
xchg
(bad)
not
adc
loope
gs
addr16
icebp
jae
out
sbb
test
mov
cmc
aam
add
inc
jle
pushf
adc
or
lock
popf
repnz
and
or
xchg
xchg
out
out
xchg
xchg
sbb
mov
into
jl
push
mov
loope
or
inc
scas
jae
aaa
fst
sub
xchg
push
daa
mov
loope
shr
xchg
shl
jbe
outs
mov
and
fptan
jns
push
repz
inc
fld
into
push
cdq
mov
sbb
sbb
cmp
or
xchg
xchg
ror
push
scas
imul
mov
or
out
xor
sbb
js
cmp
or
cmp
aaa
mov
pop
enter
hlt
mov
test
fcom
cmp
xor
stos
iret
pop
and
or
push
cli
dec
adc
retf
adc
push
jle
and
xor
cdq
mov
cmp
rcr
jb
repnz
adc
aas
test
clc
test
cs
cmp
out
push
in
pop
shl
out
jecxz
jnp
call
daa
push
cmp
(bad)
cmp
pop
cmps
es
dec
sar
(bad)
scas
mov
and
add
bnd
xlat
aam
mov
out
push
inc
xor
cmp
and
add
xchg
and
bound
mov
xor
int3
movs
mov
ret
and
mov
mov
je
or
shl
mov
ins
xchg
push
jle
lods
aad
shl
sub
push
sti
ret
dec
pop
out
in
sbb
cmp
jae
in
inc
test
xor
mov
xchg
lds
jmp
outs
lahf
sbb
std
jae
add
in
in
jb
or
pop
bnd
or
shr
mov
adc
mov
xchg
in
mov
pop
xchg
ftst
jno
mov
sub
js
jl
pop
outs
(bad)
mov
adc
mov
cli
add
outs
outs
jg
inc
and
loope
jmp
mov
cmc
jne
pop
(bad)
or
mov
inc
je
int
in
bound
inc
dec
xor
adc
push
je
or
fnstcw
out
jb
into
out
sar
and
outs
mov
mov
push
call
sub
int3
push
ret
popf
ror
add
(bad)
push
hlt
pop
loopne
stos
jmp
xor
cld
nop
into
mov
popf
clc
push
aam
shr
xchg
iret
ja
sbb
neg
sahf
(bad)
imul
pop
pop
push
adc
daa
enter
ins
(bad)
and
daa
sub
fbld
cmp
jne
mov
mov
mov
hlt
or
mov
sti
mov
rcr
ds
mov
(bad)
repnz
out
rol
jae
sbb
jb
das
test
sub
loope
jns
jne
mov
cmps
loopne
jge
or
fisttp
sub
xlat
cmps
out
call
daa
push
mov
jecxz
xchg
test
cmps
jb
loop
test
jecxz
aam
(bad)
clc
fcomp
scas
cmp
sbb
adc
jo
mov
mov
pop
fwait
aaa
or
stos
and
sub
jo
xor
popa
sub
cmovb
shl
out
mov
in
and
dec
movs
mov
scas
or
(bad)
in
mov
cmp
test
xor
mov
mov
cmc
cmc
push
or
cmp
into
repnz
in
and
sbb
xor
loopne
pop
cmc
or
xchg
lds
sti
call
rol
cwde
popf
inc
stc
inc
cmp
lods
push
jne
cmp
xchg
push
sub
cmp
and
cmp
std
inc
shl
sbb
cmps
call
cmps
mov
xchg
pop
push
(bad)
std
stc
pop
out
scas
sub
loopne
sbb
sub
fisttp
sti
icebp
push
xchg
xor
or
div
test
pushf
adc
push
mov
pop
stos
loope
(bad)
(bad)
dec
out
dec
(bad)
retf
test
adc
mov
fadd
out
inc
sbb
push
cmp
adc
repnz
add
jo
xor
lea
mov
inc
fs
dec
repz
mov
push
popa
adc
dec
std
pop
xchg
mov
and
push
jno
icebp
fs
inc
jmp
call
mov
push
and
push
into
push
or
jmp
ret
retf
iret
int3
or
sti
repz
pop
cmp
cmp
mov
inc
nop
test
add
cmp
push
push
adc
pop
idiv
add
ins
adc
jmp
or
loop
fst
adc
scas
pop
dec
cmps
mov
pushf
push
xor
xor
push
(bad)
scas
in
push
xchg
fwait
mov
jg
lock
inc
(bad)
sub
mov
std
cmp
cs
inc
int3
dec
or
ret
(bad)
inc
push
movs
xor
sti
std
cld
das
les
and
sbb
jns
mov
xor
push
and
mov
mov
xchg
outs
mov
ret
dec
bnd
iretw
das
lahf
dec
std
push
pop
ficom
test
and
inc
(bad)
ja
ins
push
ret
mov
ja
dec
shl
inc
fwait
in
in
dec
mov
std
xchg
jecxz
xbegin
xchg
inc
(bad)
mov
leave
cwde
lahf
sbb
or
call
hlt
test
xchg
pshufw
xchg
push
mov
ins
rol
add
push
pop
out
and
jmp
test
out
(bad)
lea
clc
fbld
jmp
data16
push
cdq
test
add
add
mov
mov
sbb
enter
test
leave
mov
xlat
lods
ror
sub
(bad)
xor
scas
add
hlt
mov
add
cmp
sahf
mov
push
inc
int
cmc
repnz
loop
adc
ds
push
stc
cmps
adc
or
loopne
fidivr
std
dec
cld
pop
scas
daa
sub
or
mov
mov
sbb
pop
gs
dec
xor
push
mov
leave
loope
fstp
jge
lock
jmp
xor
outs
xchg
sub
dec
inc
jb
sbb
je
psubd
test
ror
mov
push
loope
pop
outs
fisubr
cli
adc
jg
mov
mov
add
cmp
sub
pop
sbb
movs
push
call
jl
stos
fist
mov
nop
inc
mov
out
fwait
cmp
popf
adc
aam
lds
sbb
cmp
sbb
sub
inc
sbb
or
jg
jp
popa
mov
in
div
in
jge
setno
sbb
test
sbb
je
push
cmp
icebp
iret
pop
sub
call
mov
push
fistp
pop
test
dec
int
sbb
popf
pop
jmp
or
and
mov
aas
aas
cmp
pop
into
jge
jp
dec
stos
outs
scas
or
push
ins
inc
jge
sahf
xlat
arpl
cmps
inc
xchg
in
xor
pop
and
das
cld
pop
cmp
xor
jbe
xlat
and
push
in
in
mov
adc
das
push
cli
cmp
movs
push
out
scas
pop
adc
xor
cmps
daa
jle
out
push
not
mov
retf
inc
inc
jecxz
jnp
sbb
ds
xor
jmp
xor
fsubr
imul
iret
loopne
cmp
movs
rcr
movs
ficomp
add
sub
sti
or
das
push
xor
daa
mov
jecxz
enter
push
in
rcl
xchg
cwde
adc
or
pop
(bad)
inc
push
sub
shr
pusha
es
fs
and
xchg
cmc
adc
addr16
mov
div
push
repnz
cmc
xchg
shl
or
in
cwde
mov
aaa
repnz
ja
mov
jno
cmp
inc
fs
and
xor
rol
fmulp
dec
fisubr
movs
mov
(bad)
fmul
int
pushf
gs
cmps
in
add
sub
fldenv
cmc
ins
push
aad
jns
mov
add
pop
mov
mov
ret
movs
xchg
xchg
mov
mov
jle
add
fld
pop
dec
popf
add
ds
sti
cmp
mov
fmul
pop
dec
jo
mov
sub
xchg
mov
aam
inc
loopne
out
xchg
or
out
shl
test
cld
xchg
xor
fcom
enter
mov
and
in
add
mov
sbb
push
clc
mul
sub
mov
push
sbb
mov
loope
adc
scas
imul
mov
pop
rol
jne
or
aaa
vxorps
inc
mov
pop
outs
jnp
mov
fidiv
mov
push
sub
fild
sahf
fidivr
jg
xchg
test
add
mov
mov
je
sbb
das
mov
add
xor
mov
mov
push
sti
aas
addr16
lods
or
imul
jnp
(bad)
inc
out
in
or
pusha
pop
sub
cmps
cdq
dec
add
std
lock
push
fwait
add
call
aaa
in
in
loope
movs
jmp
lods
les
pushf
xor
xchg
xchg
clc
(bad)
rol
ret
shl
sbb
pop
push
rol
dec
lods
push
(bad)
ds
jne
mov
(bad)
out
ins
sahf
and
das
xchg
xchg
mov
mov
xchg
loopne
sub
loopne
adc
sbb
call
cmp
cld
stos
(bad)
mov
add
sar
mov
or
hlt
aam
pop
cmp
out
int3
mov
mov
fld
xchg
mov
xor
call
cld
std
je
adc
stos
dec
push
mov
xchg
cmp
cmp
cld
(bad)
rcl
add
inc
rol
pop
dec
push
inc
movs
js
xchg
fld
mov
aam
xchg
fdivr
pop
jns
out
dec
pop
xor
stos
loopne
fdiv
mov
cmps
dec
das
cli
xchg
pop
mov
or
outs
out
xchg
pslld
imul
cmc
push
and
jp
addr16
shl
scas
xchg
jg
push
mov
sbb
out
dec
xchg
sar
and
clc
jmp
scas
xor
sar
mov
sub
jo
mov
jno
sbb
push
jl
nop
sbb
in
out
and
xchg
ret
dec
push
ds
aas
std
pop
loop
popf
jne
mov
xor
jbe
xchg
sub
mov
adc
jo
push
fwait
cmc
push
mov
std
pop
inc
xchg
cmc
adc
mov
and
push
scas
inc
outs
aaa
movs
pop
mov
xchg
in
jle
iret
pop
mov
and
xchg
aad
cmp
mov
mov
lahf
cwde
outs
lahf
mov
shl
sbb
mov
outs
mov
mov
movs
movs
imul
add
jbe
mov
sub
call
ds
push
mov
clc
and
xlat
not
lock
sub
mov
push
pop
inc
push
rep
out
adc
push
dec
mov
push
mov
test
push
adc
test
mov
pop
sbb
sbb
dec
test
xchg
(bad)
sbb
push
xor
sub
test
ficomp
aad
out
mov
mov
stos
sub
push
out
pushf
xchg
aam
jmp
or
jmp
pusha
cmp
push
mov
pop
add
out
shl
rcl
add
jnp
mov
psubw
dec
outs
adc
xor
mov
adc
push
or
dec
call
in
mov
jmp
xor
loopne
popa
pop
add
idiv
xchg
push
push
jnp
(bad)
sar
jno
push
retf
cdq
and
sti
cmps
add
mov
sub
sub
aas
out
lods
add
jmp
sub
push
scas
add
std
aad
arpl
imul
mov
mov
mov
xchg
mov
retf
daa
xchg
scas
pop
sub
(bad)
pop
cmp
int3
mov
cmc
retf
cmovb
inc
push
(bad)
mov
out
jle
cmp
push
aaa
dec
pop
test
push
sub
sbb
enter
test
xchg
imul
aad
das
ins
mov
push
adc
cs
std
(bad)
fisttp
div
mov
and
and
js
jne
test
scas
pop
out
jne
jge
scas
push
cdq
and
mov
mov
mov
ret
mov
cmps
clc
adc
jmp
push
inc
in
dec
fimul
mov
pop
test
ja
mov
je
je
adc
fisttp
pushf
xchg
dec
shl
(bad)
rcr
sbb
loopne
sbb
fxch
xor
cmc
outs
cmp
sti
js
arpl
jnp
inc
pop
frstor
ja
mov
jnp
pop
pop
mov
mov
add
add
sahf
cmp
mov
xor
jns
xchg
lds
xchg
out
xchg
push
aaa
gs
out
fild
pop
sub
or
sbb
cmps
xchg
xor
hlt
jge
scas
jmp
add
inc
mov
jno
cmps
xchg
sbb
sub
dec
aaa
scas
dec
and
shl
lahf
rcr
sub
mov
iret
loopne
inc
jne
pop
or
call
lods
dec
jg
jae
push
stc
inc
(bad)
cmp
xchg
inc
dec
nop
lahf
sti
jp
xchg
mov
adc
cmp
xchg
dec
jmp
cld
es
das
sbb
cmp
sub
loop
adc
and
test
ror
outs
mov
lahf
mov
lahf
je
rcr
ds
neg
fsincos
in
sti
int
(bad)
mov
push
xchg
out
dec
or
sar
lods
aam
mov
jle
std
dec
packuswb
pusha
cmp
dec
sti
aaa
ficomp
enter
in
sbb
mov
or
(bad)
dec
out
icebp
mov
cmp
pop
inc
leave
xor
pushf
sbb
sbb
fsubr
ins
clc
retf
movs
inc
ja
popa
sysenter
and
hlt
cmp
aad
sbb
push
push
shr
xlat
lock
shr
jb
mov
mov
enter
inc
das
fld
lods
inc
pop
mov
jmp
sub
js
dec
es
push
nop
test
dec
imul
int
mov
jbe
icebp
xor
test
out
xchg
push
xor
dec
jns
sbb
and
cmp
lahf
mov
enter
cmps
sub
mov
cdq
cld
dec
in
pusha
push
mov
repz
push
int
pop
sar
lds
jbe
sub
mov
(bad)
pop
push
inc
cdq
arpl
in
ficomp
call
adc
mov
inc
aas
pop
push
or
lods
or
mov
xchg
mov
push
cmp
xor
xchg
push
pop
xor
xchg
pushf
ds
fisubr
adc
inc
inc
jno
or
loop
aaa
cwde
inc
xor
aas
sbb
sub
movs
hlt
loop
out
adc
cmps
push
mov
or
cld
push
sub
mov
jne
repnz
add
cmp
and
dec
ins
push
xchg
sub
push
jle
push
jno
sbb
push
xchg
sub
cmc
in
mov
inc
aam
inc
mov
pop
fs
mov
call
dec
lods
adc
ret
movs
js
shr
pop
ret
out
jg
inc
nop
or
dec
test
es
mov
pop
lea
sub
mov
stos
in
add
dec
lods
mov
clc
dec
(bad)
xchg
fs
add
adc
jne
jae
and
iret
outs
sahf
xchg
pushf
dec
daa
xor
or
(bad)
jae
push
pop
dec
inc
enter
(bad)
scas
repnz
adc
cmp
and
mov
ss
fisub
mov
jge
clc
push
out
xor
and
pop
rcl
jg
int
add
hlt
(bad)
add
push
jg
gs
out
out
pusha
cmp
pop
sub
pop
cld
xchg
ret
mov
dec
pop
xchg
xlat
mov
in
sbb
mov
lods
xchg
sub
sub
and
and
dec
movs
and
in
es
lds
or
adc
aam
fs
mov
aad
mov
aam
push
call
je
fimul
(bad)
jl
sub
xchg
add
push
scas
imul
jo
(bad)
outs
scas
push
repnz
fimul
sbb
gs
mov
inc
movs
mov
call
xchg
hlt
xor
mov
adc
outs
and
inc
xor
popf
cdq
popa
call
mov
cdq
sbb
test
inc
cmp
ja
or
(bad)
movs
push
mov
pop
xlat
rol
xor
ret
sub
sub
push
mov
inc
pop
cwde
and
bound
pop
sbb
sbb
inc
push
test
add
jle
sbb
or
shr
xchg
add
fmul
or
push
cmp
(bad)
mov
mov
cli
push
sbb
dec
cmps
sti
movs
inc
scas
aaa
test
(bad)
adc
lock
cmps
cmp
cmp
mov
repz
fwait
je
and
in
sbb
rcr
mov
pop
repnz
or
mov
jae
pop
(bad)
pop
jae
test
cmp
and
mov
fdivr
int
hlt
pop
fld
pop
xchg
cs
xchg
out
inc
and
dec
in
and
add
lods
out
jno
dec
clc
push
nop
pop
inc
je
mov
test
fisubr
int3
pop
shl
push
sbb
xchg
sub
js
test
push
sub
rol
(bad)
inc
cmc
gs
lahf
adc
test
out
popa
icebp
sahf
ret
aas
xchg
inc
ret
cmp
mov
push
(bad)
stos
sbb
enter
dec
pop
jnp
in
in
in
mov
mov
mov
jecxz
loop
(bad)
or
lea
shl
jle
lods
xchg
fcomp
push
aas
xlat
mov
jg
sbb
sub
ror
add
sub
(bad)
pop
retf
or
stos
mov
loopne
jno
(bad)
cwde
jnp
aaa
mov
fwait
lock
sti
cmp
es
iret
and
push
bound
ins
fadd
cli
mov
pop
mov
cli
push
fnsave
sbb
xor
mov
ins
jg
mov
(bad)
ja
clc
jnp
sub
pop
fsubr
fnstsw
in
mov
arpl
ja
push
dec
or
pop
and
add
mov
mov
test
xchg
loope
pop
retf
and
aas
ds
cmp
sub
sbb
test
xchg
mov
out
inc
sub
test
das
sbb
sub
dec
std
cmp
retf
mov
xchg
dec
mov
jmp
lahf
push
imul
jmp
push
aaa
fst
movs
mov
and
test
loop
push
imul
aas
ins
enter
fwait
int3
ss
and
rcr
adc
inc
adc
mov
sub
push
pop
lods
icebp
pop
aad
xchg
xlat
repz
cmps
popf
nop
pop
les
aam
mov
mov
shr
sub
test
dec
cld
test
pop
sub
frstor
dec
or
dec
fsubr
and
cs
push
add
pop
push
lock
cmp
aaa
mov
scas
cmp
fwait
mov
xor
cli
mov
mov
xor
fnstenv
fsubr
mov
data16
fist
test
sahf
cwde
and
fcomp
out
outs
stos
sbb
adc
and
ja
(bad)
fsubr
retf
std
mov
mov
adc
xchg
cmc
add
or
mov
and
and
mov
loop
adc
ins
fimul
test
(bad)
fst
dec
(bad)
(bad)
out
lahf
mov
(bad)
repz
aaa
mov
jmp
pop
fbstp
dec
mov
cmp
das
jecxz
(bad)
cdq
jae
inc
sbb
in
ins
and
jbe
push
dec
xrelease
push
sbb
ds
push
dec
push
push
fiadd
inc
cmp
mov
mov
add
pop
loopne
xchg
push
repz
xchg
rep
test
mov
mov
push
mov
(bad)
call
cmps
jae
(bad)
mov
sub
dec
jns
jo
into
loope
les
dec
ins
mov
mov
fsubr
(bad)
lds
fild
pushf
mov
mov
scas
jecxz
and
jp
or
outs
(bad)
sti
cmp
xor
xchg
xchg
or
cmp
or
sbb
lods
call
adc
fs
jo
out
retf
dec
stc
mov
loopne
rcr
and
ret
and
sub
fcmovbe
cdq
dec
out
aad
cdq
mul
repnz
jecxz
push
adc
les
jno
add
repz
arpl
popa
dec
loopne
and
adc
cmp
sbb
xchg
push
pop
push
mov
xor
jns
mov
xlat
pop
or
(bad)
dec
inc
rcl
sub
fincstp
sub
dec
jns
push
jecxz
cmp
and
out
(bad)
fstp
mov
ins
pop
cdq
xchg
jae
sbb
imul
cdq
dec
and
dec
and
ins
ins
out
or
mov
scas
mov
xchg
inc
dec
sub
outs
movs
test
imul
fidiv
minps
loopne
push
enter
sub
push
lahf
sti
call
push
retf
push
or
sbb
aas
mov
push
pop
icebp
cmps
(bad)
sub
inc
jecxz
ins
or
js
ror
jnp
(bad)
rcr
sub
sub
fimul
das
push
dec
inc
adc
cmp
fcomip
test
adc
jno
dec
jns
outs
loop
cli
pusha
pop
mov
pop
outs
les
pop
xchg
int
addr16
ins
jbe
push
(bad)
loop
and
cmp
add
(bad)
xor
loope
pop
xchg
or
rcl
das
imul
in
iret
ret
inc
iret
mov
xor
retf
push
adc
loop
je
scas
xor
fidivr
scas
inc
ins
test
xchg
xchg
jb
icebp
cld
outs
in
leave
adc
sbb
or
push
xor
xor
push
mov
xor
cmp
dec
mov
shl
fdiv
xchg
or
adc
and
(bad)
rcl
je
push
xchg
xor
adc
push
sub
call
xchg
or
out
aad
adc
or
xchg
jl
pop
and
mov
push
pop
addr16
mov
cmc
clc
push
inc
push
imul
fwait
push
or
repz
sar
cs
inc
adc
adc
pop
daa
mov
cmc
adc
xor
aad
sbb
out
xchg
jp
jne
xor
xchg
xchg
mov
cli
xchg
iret
cmp
aaa
mov
sbb
into
adc
mov
jb
cmp
or
pushw
clc
xchg
out
ss
inc
add
cwde
icebp
push
ret
int3
in
sub
mov
jnp
test
xor
dec
repz
push
in
shl
cmp
sub
fst
pop
test
div
inc
js
mov
aas
mov
test
mov
pop
das
jb
ja
sbb
out
rcr
call
adc
mov
aaa
int3
mov
jb
sub
mov
push
leave
das
mov
aad
in
mov
jecxz
xor
mov
and
mov
sbb
fidiv
sahf
lahf
inc
jle
push
retf
push
aaa
mov
sbb
dec
js
xor
xlat
jno
jne
scas
shr
ss
adc
fwait
mov
(bad)
push
adc
adc
ret
pop
dec
std
aad
inc
cmp
jmp
retf
mov
or
jp
gs
out
sar
loop
test
ret
xchg
inc
mov
sahf
inc
or
imul
pop
jmp
add
ins
loope
bound
inc
in
mov
mov
(bad)
inc
adc
inc
push
jge
ja
sub
jle
jle
mov
sbb
stos
sub
pushf
pushf
cmp
enter
mov
sar
call
cmp
sti
xor
(bad)
or
sahf
pop
fcomp
cmc
in
mov
arpl
push
and
neg
movs
lea
retf
stos
xchg
jl
in
fs
movs
jmp
idiv
push
cmp
adc
lock
inc
and
xchg
adc
cmp
cdq
imul
stc
adc
mov
dec
xchg
jle
sti
pop
pop
inc
mov
xchg
ja
movq
jecxz
xor
inc
fnstsw
push
fstp
push
pop
movs
in
repnz
dec
adc
add
loop
inc
outs
cli
retf
gs
fmul
sahf
popf
aas
xchg
cmps
inc
mov
mov
jno
inc
jecxz
popf
pop
cwde
sub
std
or
je
out
out
jnp
ss
jne
scas
stc
imul
lea
xor
loopne
jno
call
jo
sbb
and
add
adc
lods
xor
daa
xchg
daa
mov
adc
sub
cwde
jae
sbb
xchg
stc
sti
push
add
retf
dec
mov
adc
jo
pusha
(bad)
sbb
test
inc
test
shl
rol
adc
adc
mov
hlt
in
setge
mov
push
fdivr
into
jg
dec
stos
jge
fld
pop
sti
pop
mov
sbb
inc
clc
loope
cmps
cmp
test
jmp
repnz
(bad)
jp
ret
pop
jg
add
shl
dec
xchg
sub
jnp
loope
cmp
loopne
dec
out
add
xor
dec
sbb
les
add
adc
jo
movs
xchg
add
shl
lea
adc
loope
inc
aad
push
xchg
dec
loop
xchg
mov
sub
sub
sub
lahf
loop
mov
loop
push
or
adc
test
(bad)
mov
push
fcomip
(bad)
icebp
jbe
push
ins
retf
adc
sub
xchg
rcr
aas
mov
in
xchg
outs
cmps
iret
ins
lea
fucomi
in
popf
inc
push
cmp
xchg
adc
and
mov
out
cmp
cld
dec
rcr
mov
loop
xor
inc
ficom
sub
mov
ret
mov
mov
stc
mov
movs
cmps
cmps
in
mov
jno
adc
mov
mov
xor
rcl
dec
pop
test
mov
nop
ds
dec
xor
pop
and
or
retf
mov
loope
hlt
data16
jns
cmp
xchg
retf
sub
push
jb
push
jmp
jne
fcomp
xor
jp
scas
mov
jae
pop
lods
ds
push
test
scas
ret
pop
popa
out
cmp
push
fidivr
fcmovb
cmp
out
out
mov
cwde
nop
sbb
sbb
xchg
in
adc
xor
mov
mov
lods
jns
icebp
test
mov
dec
shl
test
mov
cmp
(bad)
ds
clc
and
outs
std
xor
(bad)
sub
cmp
push
sahf
lahf
inc
mov
adc
ret
test
icebp
sahf
movs
sub
add
(bad)
adc
push
or
(bad)
add
je
cmp
(bad)
imul
out
cld
inc
cmps
rcl
fld
mov
sbb
mov
rcr
inc
enter
jno
jnp
test
adc
cwde
pop
and
outs
ret
adc
sbb
(bad)
push
or
dec
or
xchg
je
fisubr
dec
mov
mov
sbb
fimul
outs
lahf
dec
int3
lods
pop
das
cmc
sub
jge
mov
dec
test
in
pop
imul
leave
mov
ret
fist
repz
ins
je
out
adc
mov
jmp
or
leave
sti
jne
popa
adc
add
and
and
adc
imul
dec
shl
je
(bad)
sahf
in
shl
add
adc
out
std
stos
dec
loope
sub
and
repz
mov
adc
mov
sahf
xchg
test
lock
sbb
(bad)
aam
cli
fxam
clc
outs
loop
lods
clc
(bad)
stos
gs
cmp
lock
(bad)
gs
jno
rol
pop
and
es
imul
pop
add
adc
mov
popf
rcr
mov
sbb
fdivr
xor
fldcw
mov
fstp
add
stc
xchg
leave
daa
cmp
jae
xor
sbb
fwait
inc
jle
imul
or
mov
cmp
cld
add
neg
inc
mov
or
(bad)
jno
mov
cmc
mov
fsubr
ins
xor
mov
movs
sbb
push
shl
pop
scas
push
pushf
(bad)
pop
inc
cmp
sbb
(bad)
sbb
sti
test
in
mov
sar
jmp
jo
(bad)
cmp
shr
mul
push
out
test
sub
add
push
push
mov
jne
mov
sub
adc
dec
in
retf
and
and
inc
mov
mov
push
fwait
sahf
adc
push
dec
sub
and
call
and
ja
jnp
pop
jl
push
and
in
pop
call
sbb
inc
repnz
in
loop
adc
mov
jecxz
vmulss
pop
pop
pusha
pop
jmp
jnp
in
in
cld
inc
into
mov
cmp
stos
push
dec
dec
lahf
xor
les
mov
mov
movs
sti
jecxz
lahf
sahf
inc
and
and
jnp
adc
out
test
ret
test
rcl
or
cdq
mov
call
arpl
sahf
fidivr
into
push
ret
outs
dec
lds
xor
xchg
xchg
mov
push
jp
xor
cs
mov
xchg
mul
fsubr
or
inc
cmp
mov
xlat
push
std
adc
nop
xchg
rcr
mov
sbb
stos
inc
(bad)
jmp
mov
movs
jle
and
test
mov
push
js
mov
mov
(bad)
cmps
int3
test
mov
(bad)
push
jge
fmulp
outs
adc
clc
rcr
cmps
mov
cdq
adc
(bad)
rcl
(bad)
jg
imul
sbb
push
xchg
sub
cmc
sar
xor
mov
pop
daa
mov
mov
inc
and
pop
cwde
les
xor
loope
imul
fmul
mov
dec
cwde
adc
xor
jge
mov
sbb
xlat
cs
shl
and
lods
lea
add
and
dec
aaa
aad
xchg
jg
xchg
mov
(bad)
jbe
mov
push
inc
repz
mov
daa
aas
jmp
mov
pushf
sub
call
std
cmps
push
jmp
cmc
fadd
or
mov
mov
pop
pop
inc
je
xor
shl
in
adc
je
(bad)
out
retf
jbe
leave
adc
rol
loope
cmp
rcl
jle
into
push
adc
adc
repz
imul
pop
addr16
mov
pop
cmp
neg
inc
or
cs
add
not
arpl
sbb
mov
in
adc
loope
rol
arpl
pop
inc
sub
ret
mov
repz
fs
push
push
sbb
push
mov
or
ins
movs
mul
fwait
xor
das
adc
in
jo
jno
cmp
cmp
mov
je
xor
test
jmp
push
popf
aas
xchg
mov
cmp
fiadd
adc
jp
(bad)
pop
xor
rcr
dec
stc
jae
jl
xchg
(bad)
pop
loope
and
aam
sar
test
push
mov
sbb
and
fs
sbb
mov
lea
shl
sbb
loopne
xor
adc
pushf
xlat
push
mov
sbb
out
xor
enter
in
lock
pusha
scas
scas
push
addr16
ss
icebp
xchg
stc
mov
jg
and
xor
push
xchg
add
jg
cmc
mov
mov
pcmpgtd
inc
mov
jae
pop
clc
push
inc
fisttp
repnz
aas
loope
mov
jno
cmp
adc
or
pop
movs
mov
inc
pop
pop
movs
call
out
push
mov
sbb
mov
mov
sti
pop
out
inc
imul
mov
lea
cld
sbb
jbe
cmps
in
fmulp
pop
out
dec
stos
xchg
or
int
mov
shl
dec
bound
pop
addr16
and
jle
cmp
lds
ret
out
xor
xor
mov
ret
sbb
dec
adc
or
inc
les
sbb
mov
xchg
mov
out
test
fmul
(bad)
mov
imul
dec
sar
pop
mov
add
punpckhbw
pop
dec
dec
gs
in
cmps
xchg
arpl
mov
stos
cmp
inc
cmps
and
stc
stc
fwait
inc
jge
in
adc
in
movhps
jg
dec
retf
fsubp
retf
cmc
into
(bad)
mov
nop
jg
popa
or
push
fs
push
movs
jecxz
mov
adc
adc
xchg
and
cmp
xor
out
clc
pop
mov
jl
adc
(bad)
loopne
cmp
and
add
cmps
mul
stc
push
sti
popf
fimul
aad
aaa
shl
(bad)
and
xacquire
xchg
rcl
rcr
jmp
div
cli
push
inc
jmp
mov
pop
pushf
xor
enter
test
cmp
test
inc
into
(bad)
std
dec
pop
and
dec
mul
rcl
dec
in
mov
movs
adc
ret
xchg
mov
int3
outs
rcr
or
or
and
add
add
pop
xchg
and
imul
outs
cmc
out
mov
push
dec
jmp
sub
sti
shr
xchg
and
daa
retf
or
mov
xchg
cmps
mov
inc
mov
xor
pop
inc
xor
test
test
sub
lock
mov
arpl
hlt
(bad)
ficom
aaa
cli
(bad)
push
shr
sti
daa
sub
adc
popa
or
iret
and
das
int3
sub
gs
sahf
mov
and
jne
sbb
sbb
out
cmp
cmp
ja
adc
loop
dec
ud0
and
and
sbb
outs
jns
ret
pushf
or
cmp
lods
xor
xlat
sbb
arpl
pop
movs
push
sbb
mov
adc
or
sbb
and
mov
cld
ds
mov
push
lods
or
mov
pop
outs
ds
dec
in
hlt
cmp
pop
push
jmp
dec
push
sub
cmp
ds
jecxz
aam
(bad)
cmp
cli
ret
rcl
stc
jle
addr16
mov
aam
rcl
adc
push
ret
scas
ins
and
not
push
lods
cmp
aam
mov
jb
xchg
fxtract
rcl
or
test
sti
in
pop
or
mov
dec
cmp
in
stos
movs
xor
lods
popf
ss
mov
mov
inc
xor
cmp
out
sub
outs
retf
add
xchg
fsub
add
inc
loopne
(bad)
and
shr
(bad)
mov
in
imul
imul
and
js
ret
lods
push
ins
jo
mov
adc
ins
in
xchg
xchg
dec
sar
pop
mov
push
xchg
sub
dec
or
retf
shl
enter
test
mov
mov
add
call
data16
jl
mov
aam
sar
xlat
mov
ds
adc
xchg
sahf
sbb
inc
xor
adc
loop
push
pop
outs
outs
repz
xor
shr
lock
fwait
rcr
lods
inc
mov
ret
bound
xor
imul
xchg
fwait
push
adc
(bad)
cmps
adc
(bad)
repnz
movs
out
adc
mov
sbb
fdiv
int
cmp
ret
mov
leave
std
cmc
or
hlt
add
stos
aas
add
and
jns
ret
sbb
dec
in
shl
fwait
lods
push
ret
scas
fdiv
int3
fadd
pop
adc
mov
aad
(bad)
mov
pushf
aad
sub
mov
sti
gs
and
sbb
sub
int
xchg
pop
inc
aad
jecxz
clc
pop
xchg
sbb
mov
lock
aam
inc
test
out
xchg
sti
xchg
repnz
push
xchg
cmps
xchg
push
jb
sbb
jg
xchg
stos
stc
xchg
adc
and
ins
push
daa
inc
setl
pop
adc
push
rcr
mov
ret
mov
mov
lods
inc
jge
jns
mov
bound
fcom
test
sub
inc
sar
push
pop
inc
pop
jecxz
pushf
push
cmp
lods
xor
ins
add
in
mov
and
outs
sbb
mov
pusha
pop
test
in
stos
shl
shl
test
(bad)
jmp
bound
and
mov
cmc
xchg
dec
cli
and
pop
xor
adc
pop
cmp
lahf
jge
sub
jle
inc
dec
imul
in
test
lods
cmp
idiv
(bad)
lods
cmp
(bad)
cli
jns
cs
mov
sub
mov
push
test
push
les
pushf
mov
adc
rol
or
enter
rol
lods
and
addr16
loope
push
iret
repnz
cmc
in
push
cmps
sub
mov
(bad)
xchg
sahf
test
add
dec
sahf
dec
adc
test
inc
mul
repz
pusha
pushf
xchg
jp
push
or
in
xor
es
mov
fsubr
xor
(bad)
leave
xchg
pop
adc
push
jmp
cmps
add
cmp
nop
ret
daa
mov
(bad)
mov
fdivr
sar
adc
mov
das
cmp
dec
aad
repnz
ror
adc
adc
pushf
and
xlat
jae
xor
adc
pusha
fbld
pushf
mov
jb
scas
fcom
xor
in
mul
pop
mov
mov
loopne
stos
sbb
xchg
test
push
adc
adc
push
inc
push
rol
sub
inc
sub
xchg
add
and
push
loop
(bad)
jmp
add
adc
mov
lds
jnp
outs
or
inc
sbb
sbb
ins
cld
ss
mov
cld
and
sar
test
fdivr
popf
mov
or
or
jmp
mov
sbb
dec
dec
mov
pusha
push
(bad)
inc
cmp
cdq
fbld
cli
add
ja
mov
dec
lea
and
mov
mov
and
movs
fisubr
mov
mov
addr16
xor
dec
pop
jno
(bad)
js
aam
outs
mov
ds
adc
(bad)
fs
inc
ds
lods
push
rol
sub
or
adc
xlat
and
xchg
in
fsubrp
sub
retf
(bad)
dec
dec
or
rcr
cdq
lahf
add
lods
shr
push
sar
test
sbb
in
cmp
lock
push
stos
cmp
jge
push
jg
or
xor
xchg
std
test
test
or
scas
mov
or
mov
out
arpl
dec
hlt
in
mov
fs
sbb
cwde
pushf
and
iret
add
ret
(bad)
push
adc
hlt
or
mov
movs
setnp
add
lods
sub
cmps
(bad)
jo
pushf
shl
(bad)
pop
fmul
rol
jae
push
ds
lds
dec
cmps
ja
mov
mov
inc
jmp
jmp
pop
mov
jecxz
xor
mov
imul
into
mov
jae
test
mov
jnp
loop
mov
mov
repz
fist
push
jmp
addr16
adc
dec
(bad)
repz
outs
dec
ret
adc
popa
fadd
rol
mov
fs
mov
into
repz
imul
neg
aam
stc
sahf
aaa
popa
push
xchg
and
(bad)
fwait
xor
es
sub
xchg
jo
popa
(bad)
aam
shr
nop
scas
push
hlt
mov
popa
xor
movs
sar
imul
sub
mov
cmp
mov
pop
cmp
fnstcw
shl
jge
jmp
mov
repnz
pop
(bad)
dec
add
or
inc
sahf
sub
enter
fs
cwde
add
rcr
loop
daa
jmp
inc
into
repnz
sbb
popa
bnd
fwait
pop
mov
jb
addr16
pop
push
call
sbb
ins
ja
hlt
mov
mov
iret
sub
lea
repz
push
ret
mov
sbb
add
test
cmp
or
jne
scas
psrlw
mov
lock
test
test
jnp
or
ss
nop
pushf
mov
adc
inc
jo
adc
hlt
mov
xor
add
and
mov
inc
pusha
lds
test
dec
iret
gs
jns
daa
adc
fsub
jbe
dec
pop
ja
inc
mov
(bad)
loop
and
dec
inc
mov
push
(bad)
hlt
arpl
movs
adc
fs
vpcmpeqd
pop
shl
sub
mov
shl
xor
popa
(bad)
imul
iret
test
mov
cmp
rcr
fsub
dec
movs
mov
(bad)
mov
inc
push
dec
pop
inc
adc
xchg
xor
xchg
or
xor
into
(bad)
into
jg
sbb
jge
mov
daa
sub
mov
shr
push
add
cdq
push
ret
jns
mov
mov
sub
and
cwde
mov
sbb
cli
inc
mov
xchg
repz
test
(bad)
popf
aas
std
ror
sbb
mov
bound
cli
enter
mov
pop
lock
(bad)
(bad)
and
add
fincstp
movs
repnz
push
add
data16
cmc
jo
aas
mov
mov
ror
push
pop
dec
add
inc
fwait
inc
shr
leave
out
jno
jl
in
pushf
(bad)
out
adc
bnd
xor
push
mov
xlat
popf
and
scas
in
daa
leave
mov
nop
ffree
mov
push
fwait
dec
push
and
icebp
pop
mov
popf
add
shl
ret
repnz
scas
mov
popa
int3
xor
lds
xchg
jecxz
xchg
fsubr
lock
xor
adc
sub
adc
dec
clc
aad
imul
jmp
pop
push
dec
lahf
and
stos
add
pop
mov
and
or
mov
mov
out
daa
mov
test
add
inc
push
and
dec
xchg
adc
xor
jo
call
and
mov
jmp
sub
outs
fmul
or
or
repz
pop
or
adc
cmp
je
inc
sub
push
call
xor
movs
es
daa
or
in
sub
push
jbe
and
or
test
add
(bad)
call
hlt
and
cmp
stos
add
mov
stc
push
repz
adc
add
cmp
push
inc
mov
cmp
ror
jne
lahf
push
mov
test
daa
jne
cmp
cmp
std
push
fimul
inc
in
aaa
stc
push
push
pop
mov
push
cmc
and
movs
sbb
sub
dec
dec
es
mov
mov
push
add
push
mov
pop
or
sub
push
xlat
xlat
(bad)
sbb
add
sub
mov
add
add
movs
jmp
inc
fwait
xchg
mov
inc
mov
and
ds
pop
arpl
xchg
aad
loope
pop
sub
inc
nop
daa
xchg
push
push
add
jo
loopne
icebp
sub
sub
movs
push
std
pop
jnp
push
mov
retf
push
push
jne
in
je
lds
mov
pop
mov
adc
add
out
dec
popf
adc
imul
mov
ficomp
(bad)
repnz
lods
sbb
popa
mov
mov
or
loop
adc
pop
fidiv
and
popf
mov
inc
sbb
and
push
repnz
icebp
add
rol
cmp
(bad)
hlt
jne
inc
pop
in
xchg
clc
repnz
out
sbb
cmp
xlat
aad
jnp
or
stos
mov
jg
adc
sub
fdivr
xor
mov
es
pusha
in
xchg
fsub
and
mul
push
and
xor
xchg
div
push
jg
cmp
popa
hlt
xor
dec
jmp
cmovno
fcmovbe
imul
das
into
xor
inc
xchg
mov
loope
sbb
mov
sub
aas
sub
push
mov
stos
and
push
bound
xchg
sbb
fdivp
ror
mov
pop
add
xlat
outs
mov
or
sub
mov
add
fcomip
out
lods
mov
cmps
inc
les
inc
ficom
cmps
inc
pop
rol
jmp
mov
dec
pop
mov
and
inc
mov
lods
mov
aaa
xchg
inc
or
pop
and
scas
enter
sub
jo
dec
pop
fld
xlat
inc
jl
and
gs
push
mov
mov
retf
in
icebp
das
push
mov
movs
dec
mov
stos
mov
cmc
(bad)
int
pop
ja
not
cmp
add
outs
mov
pop
lahf
fnstcw
jmp
sti
inc
(bad)
call
repz
outs
js
dec
icebp
cmps
in
xchg
and
push
ficom
and
xchg
jg
cmp
sub
cmp
ja
pusha
mov
push
pop
mov
pop
sub
adc
mul
imul
pop
and
mov
mov
adc
test
test
ds
cmp
hlt
retf
(bad)
ds
in
push
retf
sahf
sub
inc
dec
jge
adc
daa
sbb
xor
cmp
push
sahf
stos
pop
mov
jp
arpl
test
rcr
xchg
repnz
out
dec
jne
push
or
push
mov
and
je
or
popa
jae
jbe
test
xor
and
and
inc
scas
out
call
out
ss
sub
and
xchg
sbb
mov
push
jmp
jae
outs
fnsave
ja
jnp
cld
push
pop
mov
jecxz
fcom
mov
popa
or
push
add
inc
sbb
add
fistp
rol
pop
or
sbb
fsub
cmps
popf
xchg
aas
mov
popa
mov
call
rcr
jmp
cs
mov
cdq
xor
adc
test
xor
cld
fistp
cli
jecxz
outs
mov
pop
in
test
inc
mov
inc
lods
icebp
xchg
mov
xchg
inc
jp
(bad)
and
retf
ret
inc
inc
pop
(bad)
xchg
retf
mov
call
in
adc
jbe
mov
lods
repz
ins
jnp
cmp
leave
sar
dec
pop
push
fs
aad
sahf
mov
and
fst
pop
mov
movs
ret
inc
arpl
lods
pop
rol
enter
mov
loop
retf
mov
enter
sbb
cmp
repz
in
cmp
js
ins
out
imul
test
add
pusha
test
jp
shl
push
xor
cli
mov
enter
mov
cmp
rcl
ror
in
mov
jle
sbb
dec
xlat
jl
int
call
dec
iret
push
pop
adc
fs
outs
mov
out
jno
scas
mov
pop
and
jg
jno
mov
in
leave
jge
mov
std
ja
or
mov
and
adc
dec
or
add
sbb
dec
cmp
cmp
sub
adc
and
aam
sub
idiv
cdq
inc
shl
jle
xchg
stos
dec
imul
mov
dec
cmp
pinsrw
shl
loope
mov
out
lahf
sbb
(bad)
jp
xor
(bad)
enter
into
and
test
or
out
aas
xchg
cmps
int
jae
mov
ins
shl
mov
fist
out
js
test
in
ins
ins
xor
nop
adc
ds
inc
scas
or
ror
xor
addr16
xchg
jmp
(bad)
mov
mov
dec
fidivr
pop
stc
bound
jmp
out
inc
aad
inc
pop
and
jg
(bad)
push
movs
gs
mov
mov
loopne
lods
inc
(bad)
aas
retf
iret
and
ins
daa
test
push
add
in
shr
pop
jle
sbb
adc
icebp
cmps
dec
jb
repnz
les
shl
push
out
jmp
rcr
and
sub
push
mov
lock
pop
pop
je
mov
fidivr
xor
dec
scas
adc
mov
pop
test
pop
push
retf
sbb
or
inc
and
mov
aam
or
mov
stc
jne
mov
sub
(bad)
cdq
icebp
mov
sbb
and
addr16
cld
(bad)
in
lea
xchg
lods
movs
mul
mov
xor
jns
xchg
adc
cmp
sahf
btr
adc
loopne
and
inc
ret
mov
jg
cmp
mov
sub
mov
or
xor
cld
js
add
aad
mov
outs
adc
fsubr
out
cmp
pop
cmp
ret
addr16
pop
push
imul
pop
sbb
ins
test
jbe
test
inc
int
jmp
nop
packssdw
fwait
xor
adc
jb
retf
xchg
sbb
xchg
mov
dec
inc
inc
adc
(bad)
fwait
jbe
pop
loope
movs
mov
push
inc
fs
jo
pushf
push
stos
mov
dec
mov
push
mov
sub
xor
sub
sbb
(bad)
and
leave
aad
loopne
cld
dec
cdq
out
and
(bad)
imul
ror
lahf
or
jp
add
jg
and
sub
push
or
add
hlt
and
sbb
xchg
or
pop
xlat
jmp
idiv
dec
pop
(bad)
es
push
pusha
xor
xchg
dec
sub
inc
iret
es
(bad)
cmp
loop
test
test
sub
and
(bad)
(bad)
(bad)
outs
outs
imul
mov
shl
jb
push
fisttp
jae
inc
xchg
jge
mov
movs
cmp
xlat
pusha
xchg
pop
movs
add
fiadd
lock
push
push
xchg
sub
shl
mov
sti
inc
or
xor
arpl
lds
aad
ins
aad
push
cdq
nop
imul
inc
es
pop
push
jecxz
add
fwait
je
fucomip
aas
pop
lea
dec
dec
mov
jae
shl
pusha
call
mov
dec
stos
mov
sbb
mov
ins
daa
syscall
xor
scas
xor
mov
add
(bad)
aaa
xchg
xor
xor
sbb
cli
jbe
pop
call
jns
cld
das
retf
fdivr
and
or
shl
pop
jle
je
kmovw
mov
cmp
mov
xchg
dec
pushf
nop
or
xlat
mov
sbb
cdq
and
inc
enter
call
pop
mov
cmp
icebp
push
std
and
retf
lock
jmp
ja
push
mov
and
cli
mov
int3
test
xchg
cmp
sbb
out
inc
repnz
imul
jo
add
imul
cmp
imul
ins
cmc
ja
cs
sbb
push
mov
sbb
or
daa
inc
or
mov
jge
(bad)
sar
cdq
ret
jle
pop
cmp
xchg
test
pop
mov
xor
sahf
push
jae
icebp
cmps
cdq
ins
aad
fwait
adc
cmc
add
aas
int3
mov
mov
leave
push
xor
fldcw
lods
and
out
push
loopne
mov
add
sub
adc
and
repz
dec
push
gs
into
repnz
cmp
in
push
jne
movs
xchg
xchg
push
fidivr
mov
xor
dec
scas
sbb
(bad)
sbb
dec
or
stos
or
in
(bad)
or
jg
pop
cmp
add
jno
cmps
movs
fiadd
mov
pop
das
inc
mov
xlat
inc
mov
adc
(bad)
sub
push
sbb
test
xor
xor
add
lods
jbe
test
inc
xor
lods
movs
sbb
mov
pop
popa
mov
jmp
and
cdq
and
out
mov
test
mov
stos
pop
add
call
add
dec
lds
xchg
mov
mov
mov
sbb
mov
mov
or
fdiv
xchg
sbb
mov
mov
push
dec
inc
fbstp
repz
fidivr
xchg
ret
jp
dec
dec
push
adc
fld
lds
add
imul
xor
mov
in
add
sbb
push
xchg
adc
ins
out
(bad)
ins
jmp
jnp
sbb
rcr
in
sub
mov
scas
das
daa
or
pushf
add
jle
add
test
jae
pop
adc
fiadd
test
sbb
outs
stos
das
(bad)
imul
and
call
jns
jl
(bad)
adc
cmp
pushf
xchg
and
test
aaa
mov
jecxz
les
(bad)
cmp
xchg
cdq
dec
imul
add
scas
imul
ja
and
add
mov
jnp
mov
dec
fiadd
(bad)
or
data16
cmp
cmps
pop
ins
pop
aas
xchg
fisub
in
movs
and
cdq
cmc
sub
out
int
cmps
sbb
mov
push
mov
enter
test
jae
test
mov
xchg
sbb
add
dec
ins
and
stos
pop
in
sbb
mov
mov
cmps
cmps
in
(bad)
fwait
mov
mov
loopne
xor
in
or
lock
jmp
fs
movs
adc
scas
inc
xchg
ins
out
inc
scas
push
icebp
sbb
clc
mov
(bad)
repnz
fsubr
es
mov
pop
fld
(bad)
aaa
fcmovne
xor
dec
xor
iret
xchg
mov
mov
adc
aaa
jge
jns
sbb
fild
xlat
dec
vorps
inc
mov
mov
or
bound
mov
(bad)
hlt
mov
xor
(bad)
ins
dec
pop
inc
inc
aad
adc
call
in
xor
arpl
jle
leave
or
xchg
jle
add
dec
jnp
jne
mov
loope
mov
aas
daa
aad
call
sbb
mov
or
xor
xchg
std
test
dec
inc
sub
sar
mov
call
xchg
je
or
sahf
lea
fcmovbe
in
cmp
sbb
and
add
mov
es
mov
inc
add
addr16
xor
mov
test
mov
adc
push
sbb
xor
lahf
loopne
arpl
add
call
in
loope
loop
neg
ins
sub
(bad)
jecxz
in
jl
loopne
jmp
pusha
sub
add
sub
xor
addr16
pop
jno
pop
pusha
in
add
pop
xchg
adc
add
jnp
test
aaa
shl
or
mov
jp
ret
mov
add
inc
and
mov
test
mov
lods
das
cmps
js
fmul
js
jae
(bad)
mov
inc
push
xor
xor
outs
adc
lods
sbb
add
sbb
dec
sub
add
imul
mov
fs
push
std
enter
out
repnz
fmul
ss
rol
(bad)
out
scas
push
sbb
int
mov
retf
xchg
add
push
cmp
adc
push
or
xor
add
inc
inc
cli
int3
push
adc
movs
jbe
xchg
cmps
add
push
inc
and
jl
lahf
jns
clc
xchg
mov
mov
jo
mov
add
rol
fsubr
or
bnd
retf
frstor
shl
mov
pop
add
neg
ins
xchg
and
mov
add
aad
fld
imul
dec
movs
scas
xchg
aad
lods
pop
inc
xchg
add
fcomp
xor
mov
and
push
stos
jb
in
shl
xchg
pop
cmp
mov
sbb
mul
inc
mov
daa
mov
sub
mov
push
mov
pop
ret
enter
scas
xchg
ss
dec
test
xor
mov
pop
jl
lahf
xchg
fs
shl
stos
or
loopne
repz
cmp
inc
mov
out
mov
ins
stos
lahf
pusha
fcom
add
and
test
addr16
outs
mov
mov
dec
sub
mov
mov
and
jae
fst
int
pop
sub
stc
stc
xchg
scas
shl
cmp
sar
xor
push
in
retf
push
push
adc
bound
xchg
push
movlhps
or
idiv
sar
and
movs
inc
jmp
int
push
jmp
and
stc
mov
imul
cwde
stos
sahf
or
push
inc
call
std
dec
mov
mul
fadd
dec
mov
fs
stc
add
hlt
xchg
call
push
js
mov
and
inc
sti
(bad)
cmp
ins
in
xor
ds
xchg
xchg
jge
sbb
inc
rcl
jae
or
loop
loop
pop
stos
cld
xchg
sbb
outs
in
sub
sti
jl
inc
or
fnsave
(bad)
adc
or
retf
jns
adc
xchg
test
shl
pop
ffree
mov
add
(bad)
imul
cmp
sbb
mov
pop
js
xchg
and
imul
into
stc
repnz
sar
or
stos
inc
and
sbb
shr
xchg
pop
fmul
retf
cwde
dec
xchg
leave
cmp
lahf
ffree
add
inc
popf
jae
adc
sar
sbb
pop
in
adc
jns
or
call
je
jmp
lods
cmp
aam
mov
push
aad
xchg
addr16
js
movs
sbb
pop
cmps
popa
mov
hlt
jno
lahf
sub
nop
mov
jl
push
scas
das
sub
pop
pop
cmp
daa
bound
pop
mov
gs
(bad)
in
cmp
pop
inc
imul
jb
cmp
lods
and
sahf
ins
call
icebp
shr
sbb
pxor
or
sub
mov
adc
fdivr
repnz
rcr
hlt
sbb
and
xchg
xchg
mov
fwait
xchg
inc
repnz
sbb
repz
fs
cmps
pop
mov
xchg
xchg
push
and
push
jb
rcr
sub
push
sub
add
cmp
movs
daa
data16
xlat
jg
adc
jmp
mov
dec
sar
mov
or
sbb
cli
fst
xchg
movs
push
add
add
cld
pop
xor
dec
test
pop
mov
or
(bad)
fbld
push
mov
hlt
push
repz
stos
retf
mov
leave
fild
pushf
sub
cs
cmp
lea
jp
rol
call
xor
call
dec
sar
leave
into
sbb
fist
inc
cmc
jbe
sub
xchg
sti
xchg
cli
jge
mov
mov
xchg
stos
enter
out
inc
shl
fisub
mov
jbe
sub
cmp
sub
inc
int
jle
mov
fst
pushf
jmp
je
jle
fmul
test
pop
jmp
jp
shr
cmc
push
jbe
seto
imul
fild
adc
ins
xor
or
into
push
push
push
fcomp
cmps
mov
les
test
pushf
dec
dec
mov
jb
mov
jbe
xor
inc
mov
or
jb
mov
push
in
out
mov
jmp
dec
(bad)
push
lahf
pushf
xchg
add
ja
enter
inc
mov
xor
inc
hlt
shl
cli
sahf
dec
movs
je
pop
pop
mov
jno
jmp
out
dec
jne
add
arpl
inc
scas
cmp
(bad)
jp
dec
out
ins
mov
mov
cmps
mov
into
adc
mov
mov
xchg
jmp
popa
jne
jge
lods
int3
lods
popa
retf
pop
std
loop
or
mov
sbb
mov
sbb
cdq
test
test
jmp
in
inc
sub
jmp
les
inc
cmps
push
ret
or
inc
nop
nop
jnp
loopne
mov
mov
cmp
fwait
xor
shl
jg
or
cmp
aas
pushf
cld
mov
mov
push
cbw
push
add
mul
pop
sub
test
ret
test
rol
mov
sbb
and
or
in
vphadduwd
fs
movs
inc
or
das
add
into
adc
xlat
adc
ret
aas
sbb
(bad)
ss
xchg
jb
and
fld
xor
or
je
inc
xchg
pop
enter
cdq
push
test
bound
(bad)
mov
outs
out
outs
jecxz
imul
inc
add
adc
(bad)
dec
scas
adc
inc
pop
inc
jns
cdq
sub
add
sub
jmp
ret
repz
inc
imul
sub
int
mov
mov
adc
xchg
mov
adc
mov
cmp
in
fwait
pop
mov
mov
cli
jmp
dec
sti
adc
mov
jns
pop
popf
adc
push
dec
dec
cmp
xor
dec
mov
adc
or
pop
mov
dec
scas
repnz
adc
arpl
fadd
push
in
out
pop
push
ror
cmc
inc
sbb
mov
and
daa
xor
mov
sbb
icebp
aas
retf
inc
mov
push
sub
call
rol
sbb
mov
push
cmp
add
icebp
adc
lds
dec
gs
mov
mov
out
out
jo
add
xchg
sbb
inc
dec
sub
mov
cmp
in
sub
inc
cli
adc
rcr
fdivr
jmp
popa
call
leave
sbb
sub
adc
mov
jns
push
xlat
stos
lods
xor
inc
mov
lds
xchg
fst
dec
pusha
mov
xor
xlat
ja
push
xchg
ins
xchg
sbb
repnz
(bad)
test
and
sub
ret
push
jp
movs
in
push
xlat
inc
outs
and
push
mov
jae
movs
xchg
cmp
cld
bound
mov
pop
(bad)
std
inc
or
imul
das
pop
mov
dec
and
pop
stos
xchg
aad
mul
es
repnz
jmp
popf
dec
test
cdq
dec
inc
xor
leave
cmp
test
aas
xor
adc
lods
iret
out
cli
mov
pop
pop
mov
and
push
sbb
arpl
retf
rcr
shl
mov
cwde
icebp
or
js
scas
rol
fisttp
jno
mov
xchg
add
xor
sbb
sti
push
cwde
das
outs
xor
sub
icebp
lea
out
ss
jmp
mov
jne
out
int
lds
jo
xchg
or
mov
repnz
das
rol
(bad)
fisubr
add
mov
jbe
retf
push
mov
adc
mov
and
rcr
in
mov
cmp
sub
stc
pop
mov
pusha
leave
je
ss
ja
pop
and
and
pusha
add
push
fld
adc
ds
jae
mov
sti
xor
jecxz
rcl
and
cmps
je
fadd
jbe
retf
jae
push
clc
div
leave
pop
xor
sub
cmps
adc
(bad)
mov
adc
rcl
pop
je
rol
dec
scas
and
outs
iret
pusha
jo
jg
jge
movs
mov
cli
shl
jge
nop
retf
jnp
mov
ss
bnd
loopne
inc
xor
cmps
daa
sub
xor
xlat
stc
aad
ror
cli
pushf
icebp
in
xor
pop
mov
push
and
mov
stos
pop
daa
sbb
cdq
rol
fcom
xor
pop
stc
outs
les
test
sbb
adc
ror
inc
das
inc
adc
mov
nop
int3
cmps
xchg
or
fstp
push
or
test
xor
inc
cmps
(bad)
xchg
je
push
add
jo
push
xchg
cld
push
jle
mov
mov
inc
mov
in
xchg
add
jne
int3
mov
xchg
cmp
mov
mov
inc
and
inc
push
adc
test
int
jbe
ror
pusha
rcr
sub
stos
out
in
and
bound
shl
das
out
or
pop
mov
jbe
cmp
xchg
mov
cwde
out
loopne
rol
cmp
fsub
aam
lock
ds
out
jle
xor
sub
aaa
test
xchg
cmps
fnstenv
mov
xor
jmp
(bad)
jp
push
and
test
(bad)
fcomi
stos
fcomp
dec
adc
jb
push
xor
sti
mov
sub
std
ds
sbb
jp
ja
test
int
test
add
ss
push
mov
test
xor
xor
out
dec
cmp
pop
das
fwait
push
pop
xor
jno
and
iret
aaa
mov
dec
cmp
imul
(bad)
ss
mov
xlat
ins
jge
stos
test
sub
push
add
inc
mov
sbb
call
daa
xor
sbb
mov
xchg
sbb
pop
mov
mov
ror
add
mov
bound
pop
inc
mov
sub
rcl
ret
push
inc
mov
fcmovnbe
inc
push
hlt
out
mov
cmps
loop
call
retf
mov
pushf
fs
mov
out
ins
aaa
mov
mov
ins
cdq
mov
in
mov
xor
inc
jmp
jmp
mov
sahf
jp
mov
ds
call
xor
call
push
adc
jne
stc
adc
mov
adc
add
sbb
dec
mov
sbb
xor
call
fwait
push
imul
mov
in
dec
call
movs
xor
or
mov
dec
push
fs
hlt
mov
mov
sti
inc
mul
int3
add
aam
fnsave
fidivr
fld
push
pop
push
inc
sar
cli
mov
lea
mov
sub
out
je
cli
jns
jne
and
mov
je
ret
sbb
(bad)
pop
outs
mov
xchg
mov
movs
mov
pop
pushf
xor
arpl
cdq
mov
mov
repz
pop
stos
es
das
xor
push
lahf
xor
scas
jne
imul
std
enter
mov
add
imul
jmp
xchg
pop
lea
arpl
ss
dec
xchg
jmp
ins
out
pushf
lds
or
dec
stos
mov
xchg
adc
mov
add
jnp
jmp
in
jmp
sub
fwait
mov
or
clc
jbe
or
mov
test
adc
dec
fsub
lods
les
mov
xlat
or
addr16
stos
dec
aas
cmp
pusha
ret
std
xchg
test
add
aad
add
dec
xor
sub
push
in
pusha
daa
sahf
jae
js
jb
push
stc
or
pop
jmp
or
adc
push
enter
fwait
movs
pop
adc
cmc
cmp
shl
pop
pop
les
outs
into
push
jmp
adc
sub
repz
and
lea
fcomi
push
ror
mov
dec
dec
daa
cmp
shr
sbb
xchg
movs
movs
sub
pop
fs
outs
ret
int
pop
mov
jo
pop
or
neg
sub
or
stc
mov
pop
call
(bad)
fldcw
fimul
aas
(bad)
push
fwait
xchg
lods
test
xor
cmc
popf
push
jecxz
cwde
lea
popa
clc
push
push
dec
sbb
jp
adc
dec
mov
mov
and
mov
loopne
adc
add
retf
xchg
adc
cmp
sub
mov
dec
sub
add
in
and
pop
inc
cld
test
outs
icebp
xor
pop
jecxz
cmp
cmp
gs
(bad)
ficom
mov
add
jb
xchg
vmwrite
ret
std
xchg
imul
push
cmp
push
lock
add
call
test
mov
rcl
lea
jl
cdq
push
and
or
repz
dec
mov
aaa
int3
daa
and
das
imul
into
ins
cmps
mov
xchg
add
int
iret
ss
jmp
pop
gs
loopne
add
jle
inc
or
push
fstp
les
ds
mov
inc
jns
adc
pop
xchg
retf
fist
shl
sub
add
sbb
dec
es
xchg
arpl
and
outs
xor
ja
jg
pop
jno
mov
sub
dec
cld
ret
test
dec
repnz
js
cli
mov
xchg
das
mov
mov
xchg
rol
or
bound
and
xchg
xchg
int
pushf
repnz
in
inc
je
adc
fwait
inc
mov
out
or
push
icebp
(bad)
(bad)
sub
xchg
icebp
push
repnz
dec
mov
sub
shl
mov
mov
fild
xor
in
jg
xchg
xchg
push
mov
repz
and
retf
into
push
xchg
sub
jne
inc
(bad)
jns
repz
ret
and
mov
or
jns
push
or
fsubr
cld
sbb
dec
or
or
js
mov
scas
sbb
or
imul
dec
pop
arpl
push
mov
mov
sub
jle
ret
retf
in
and
aad
(bad)
pop
push
popa
or
into
pop
xchg
ror
sbb
loopne
loopne
xchg
xchg
mov
ja
jmp
fdiv
rol
dec
(bad)
int
cdq
cld
sti
add
adc
xchg
gs
jns
aad
cli
popa
xchg
ja
jne
pextrw
or
add
aam
lea
cmc
xchg
popf
sbb
imul
xor
xchg
outs
ret
aaa
imul
xchg
or
test
lods
jp
adc
enter
stc
and
pop
mov
test
mov
push
nop
jmp
inc
dec
scas
jnp
mov
push
cmp
call
imul
push
cmps
cmps
add
jns
sbb
(bad)
ins
and
dec
mov
or
aaa
sub
inc
mov
mov
cmps
jne
sub
pop
popa
or
sub
lods
imul
ds
das
daa
unpckhps
sbb
jns
(bad)
xor
push
push
jmp
fisub
inc
pusha
mov
jmp
aas
shl
test
xor
xchg
movs
mov
cmp
sub
in
sar
mov
sub
adc
test
mov
sub
stos
outs
pop
cmp
out
icebp
cmp
test
repnz
pusha
dec
das
(bad)
jmp
rcl
or
stc
sub
outs
cmc
cmp
outs
push
push
lods
mov
add
call
inc
test
jno
adc
mov
pop
mov
jle
push
add
xor
jns
adc
dec
jno
pushf
cmp
jg
pop
pushf
(bad)
fsubr
cli
les
add
int
and
aaa
xlat
dec
add
add
inc
sub
repz
call
xchg
daa
sbb
loop
test
xchg
sub
aam
lock
cmp
lds
sub
in
xchg
scas
mov
test
pop
loope
test
or
aas
mov
test
lds
test
popa
or
and
or
or
sub
lods
jle
adc
xor
mov
aas
(bad)
fwait
pop
mov
out
pop
in
mov
ret
das
ja
imul
push
in
sbb
jecxz
movs
(bad)
adc
jo
cmp
movs
les
scas
in
aas
mov
mov
test
call
xor
adc
or
mov
xor
stos
xor
push
jb
lods
pop
cmp
sar
sbb
or
sbb
(bad)
xor
or
mov
mov
in
cs
loope
xor
and
cmp
dec
or
std
imul
stc
cmp
shl
pop
rcr
xchg
pop
mov
mov
pop
test
xchg
call
push
lods
sbb
imul
(bad)
aaa
ins
jo
sub
adc
out
jbe
aas
push
and
or
lea
(bad)
movs
mov
xchg
sti
and
mov
imul
adc
sti
fadd
and
fs
pop
mov
jno
dec
enter
pop
es
pusha
dec
outs
jns
(bad)
imul
and
loopne
icebp
pop
cmp
shr
ud0
aas
xor
mov
jae
cmc
mov
scas
(bad)
push
adc
mov
scas
rep
push
push
jge
sbb
pop
xchg
mov
sbb
push
retf
or
xor
push
aam
inc
cmc
int3
scas
sub
and
add
xchg
xchg
ret
rep
push
in
addr16
jmp
and
cmp
outs
xchg
push
cmps
(bad)
mov
fs
push
sbb
inc
jae
inc
jmp
mov
mov
push
aam
fwait
stc
ss
out
cmp
sbb
(bad)
sub
aam
and
mov
sbb
sub
inc
cmc
pop
test
inc
sti
xlat
int3
test
adc
xchg
test
dec
mov
call
dec
es
or
(bad)
loop
push
mov
mov
je
and
(bad)
xor
test
or
test
pop
ret
mov
dec
mov
in
sub
loop
out
mov
stos
sbb
push
mov
addr16
push
and
(bad)
out
pop
add
xor
addr16
xor
xor
push
push
cs
ret
fsubp
xlat
push
leave
(bad)
out
xlat
ins
out
and
fistp
dec
stos
fs
shr
call
imul
or
int3
jne
pop
pop
lods
nop
fs
sbb
cdq
xor
pop
test
push
sar
stos
outs
test
rol
jl
ja
and
add
mov
cmp
ins
rcr
sbb
test
fidivr
lea
sbb
mov
ret
fstp
mov
xchg
out
aad
inc
in
adc
dec
xchg
cmp
addr16
arpl
lock
jmp
out
cdq
int3
push
sbb
sahf
and
int3
jl
mov
sbb
aad
pop
jo
pop
lods
out
dec
movs
das
and
cdq
xchg
leave
sub
cli
dec
and
xor
sbb
in
add
and
popa
and
inc
pop
mov
mov
test
xchg
ror
dec
xchg
jg
mul
xchg
sub
rol
fst
test
outs
xchg
call
and
xchg
mov
pushf
adc
mov
pop
adc
cmovg
div
(bad)
out
shr
pop
push
xchg
loop
out
lds
(bad)
cs
add
jb
les
push
jg
xor
push
jge
mov
ins
cdq
dec
jo
scas
mov
mov
mov
paddusw
ds
inc
push
pop
mov
enter
sbb
cmp
mov
mov
jp
or
sbb
retf
popf
cmp
fldenv
mov
ins
popa
cwde
and
aad
push
or
push
cld
ins
xor
sahf
rcr
fiadd
xchg
add
jno
out
dec
ror
jae
dec
int
in
ds
pop
cmp
test
sbb
add
test
inc
mov
jnp
fsub
xor
enter
stos
(bad)
xchg
xchg
pop
jmp
ss
cli
addr16
and
sbb
xchg
ins
cli
xlat
dec
loope
pop
pop
pop
mov
cmp
push
sar
mov
shr
mov
jne
pop
mov
fsub
sub
ins
out
stos
scas
adc
sbb
test
add
sub
sbb
sbb
and
xchg
xor
fs
stos
lock
push
jae
sbb
jmp
(bad)
sbb
mov
cmp
loop
in
in
jmp
rcl
inc
inc
mov
ficom
jne
fld
test
push
jne
jl
fdivr
jne
loope
rcl
xchg
xchg
or
jmp
add
nop
jmp
je
fistp
jl
xchg
pop
cmc
jmp
and
scas
stos
cmp
sti
inc
pop
mov
push
dec
pop
cdq
pop
outs
xor
loopne
jmp
xor
lds
icebp
add
mov
in
sbb
sub
pusha
outs
jbe
inc
aam
add
pop
test
push
out
push
pop
or
popa
imul
sti
pop
jno
pop
dec
jge
(bad)
idiv
xor
mov
jge
sbb
xor
inc
xor
sbb
in
xlat
dec
cli
dec
sbb
push
xchg
mov
add
add
mov
pop
sbb
daa
cdq
scas
pop
mov
test
movs
pushf
mov
fdiv
jmp
(bad)
mov
das
jb
mov
jbe
cmp
and
stos
mov
hlt
xchg
pop
xor
cli
popa
mov
test
inc
sbb
inc
push
mov
cmp
in
jo
nop
rol
shl
out
out
mov
add
shl
mov
inc
js
int3
inc
fwait
jg
nop
mov
aaa
cs
into
(bad)
mov
in
mov
xchg
mov
or
popf
mov
lods
xchg
mov
mov
fisubr
shl
jmp
ins
sar
lock
push
inc
mov
nop
or
sub
xor
in
pop
xor
xchg
nop
(bad)
fimul
pop
sar
stc
inc
cmc
mov
retf
sub
mov
(bad)
and
popa
cs
push
pop
or
mov
popa
sub
push
adc
pop
retf
pop
cmp
(bad)
mov
push
in
and
shl
mov
fsubr
push
mov
loope
and
lea
in
retf
sub
scas
ins
(bad)
(bad)
scas
jmp
xchg
sub
mov
pop
sbb
and
push
scas
mov
pop
xor
jo
xchg
inc
sub
in
dec
loopne
mov
out
sbb
pop
cmc
nop
stos
add
adc
inc
push
std
mov
popa
jns
aaa
sbb
popf
jmp
pop
adc
xor
jecxz
jnp
scas
add
mov
or
mov
ja
call
in
call
jg
sbb
cmps
jecxz
int
xchg
xor
popa
lods
inc
xor
(bad)
xor
and
pop
cmp
or
and
mov
sub
push
dec
loopne
push
inc
ins
fst
clc
iret
das
jno
test
mov
or
out
cwde
mov
call
sub
xchg
push
and
pushf
xchg
scas
cmps
pushf
mov
pop
jp
and
push
sbb
push
lahf
jmp
inc
mov
hlt
push
add
sbb
or
cmps
dec
pop
jno
cmp
inc
add
lock
lahf
popa
frstor
sub
or
in
loopne
ficom
pushf
mov
cmp
popa
ja
mov
rol
mov
(bad)
scas
push
mul
out
cmps
mov
data16
jb
add
pop
add
out
mov
dec
adc
dec
add
(bad)
jp
ins
mov
aas
mov
pop
enter
sub
cmps
js
cmp
mov
dec
xchg
jnp
cmc
jle
add
or
adc
push
push
add
fwait
cmc
(bad)
enter
add
or
fcomi
add
stos
add
mov
popa
cmp
or
cmp
pop
adc
jne
cld
repnz
mov
aam
mov
(bad)
push
cwde
lea
or
dec
xchg
push
inc
xchg
cmp
clc
cmp
lock
inc
fwait
sub
test
imul
fld
adc
push
mov
jmp
jecxz
push
adc
sbb
push
fidiv
dec
out
jb
xor
call
lds
push
ret
inc
cmp
icebp
in
xchg
jg
std
inc
nop
int3
mov
(bad)
push
(bad)
leave
and
dec
out
sahf
xchg
sbb
pushf
adc
jno
jns
pop
xchg
sub
pop
xchg
dec
or
push
adc
inc
push
enter
dec
pop
lahf
adc
mov
adc
add
test
cmp
inc
out
push
frndint
je
jle
or
cs
and
mov
mov
shl
in
jb
push
and
sbb
pusha
push
call
jne
or
jns
mov
sbb
cli
gs
outs
fld
xlat
mov
aaa
test
cmp
mov
sub
fcmovnu
out
ds
mov
sar
cmp
and
push
adc
rol
add
lods
cmc
mov
in
sub
sbb
imul
bound
iret
ds
(bad)
adc
pop
mov
mov
dec
sbb
mov
mov
or
mov
mov
pushf
mov
mov
inc
lods
mov
mov
push
adc
pop
out
pop
xchg
repz
iret
cmc
pop
inc
fdivr
leave
xor
dec
pop
and
(bad)
push
dec
xor
loop
in
call
in
mov
inc
pop
push
jp
or
mov
js
or
cdq
push
sbb
ja
mov
retf
mov
outs
mov
xor
adc
cli
test
in
pop
push
repz
imul
sbb
retf
lea
push
in
aad
pop
fmulp
ret
ret
fidivr
push
sub
adc
push
pop
add
push
add
mov
sub
stc
cwde
mov
pusha
cmp
inc
push
shl
std
jnp
adc
imul
mov
jp
ss
cld
lds
popa
xchg
ror
stos
call
pop
cld
aam
inc
add
fidivr
loopne
add
ds
and
cmp
fs
mov
aam
xchg
push
cmps
stos
pop
in
sbb
mov
imul
push
add
repnz
std
cs
(bad)
push
test
jns
push
push
lods
popa
dec
add
mov
fdivr
hlt
clc
push
(bad)
call
lea
add
int
pushf
arpl
mov
fdivr
or
test
push
jg
sti
add
retf
lods
mov
retf
or
aaa
in
inc
dec
adc
xchg
icebp
mov
fwait
xchg
(bad)
push
ins
and
fwait
cmps
daa
jmp
rcl
sbb
xchg
scas
jge
mov
and
nop
push
daa
cmps
hlt
fdiv
pop
movs
mov
es
pop
and
cmp
movs
mov
sub
cmp
jns
add
jo
icebp
test
jno
push
mov
sahf
in
mov
leave
push
push
bnd
jecxz
scas
xor
bound
arpl
jmp
cmp
loopne
sbb
xchg
dec
(bad)
fldenv
stos
push
sti
iret
jl
mov
int3
(bad)
mov
and
imul
imul
inc
mov
pop
fisub
push
int
xchg
xchg
lea
or
ins
into
dec
scas
ja
inc
(bad)
adc
bound
xor
repnz
sub
fsubr
aam
fisttp
jge
adc
push
xchg
add
mov
retf
int
out
mov
sub
sub
cmp
(bad)
mov
jle
cs
rol
lds
adc
jae
push
cmp
push
adc
addr16
stc
popa
mov
pop
sbb
test
inc
aaa
pusha
icebp
xchg
jmp
int
sbb
push
loopne
inc
movs
xor
lock
in
sub
inc
mov
out
jae
stc
pop
dec
mov
icebp
pop
outs
cwde
adc
pop
int
mov
daa
out
jbe
xchg
xchg
sahf
fsubr
lahf
jmp
into
dec
lock
push
fidivr
icebp
jmp
or
mov
inc
outs
mov
inc
or
xchg
jl
add
in
push
mov
sti
push
dec
cmp
xchg
adc
pop
stos
dec
push
xchg
and
push
iret
stos
(bad)
or
adc
sub
jecxz
sub
sbb
jp
imul
jecxz
aad
es
lea
mov
outs
out
lods
xchg
mov
xor
scas
cli
in
loope
dec
mov
pop
je
imul
push
and
inc
mov
(bad)
sahf
ret
jge
sbb
fwait
add
dec
pop
xchg
dec
in
sub
xor
and
mov
ins
ins
pop
pop
push
mov
push
pop
inc
cmps
test
pop
mov
mov
sbb
push
sub
out
fst
enter
pop
jb
jl
push
ret
bound
sub
push
movzx
inc
repz
imul
dec
and
xchg
pop
push
pop
xchg
push
addr16
mov
fst
fs
add
enter
hlt
repnz
mov
dec
pop
mov
std
mov
cmp
inc
and
xor
mov
aad
push
shl
into
fsub
test
xor
mov
ja
or
inc
fcom
int
mov
add
cmp
jbe
jle
inc
fsubrp
mov
cmp
add
int
jmp
jo
pushf
sbb
rol
aas
sub
mov
int3
or
and
xor
jae
xchg
sar
lahf
cmc
mov
mov
cs
jo
push
bound
jns
ins
cmp
mov
faddp
test
icebp
in
push
stos
push
cmp
xchg
aaa
cmp
push
aad
int3
push
inc
arpl
(bad)
iret
adc
push
xor
pushf
fwait
push
and
xchg
jae
dec
(bad)
int3
lahf
inc
xchg
lods
scas
(bad)
stc
cmp
pusha
enter
xchg
add
sub
xlat
mov
jno
or
inc
sub
leave
call
ret
std
pop
aad
sub
or
push
jp
addr16
push
sbb
sub
mov
dec
dec
dec
push
inc
in
popa
ror
xchg
imul
lods
out
or
loop
loopne
push
pop
mov
popa
into
jns
and
add
test
stc
push
mov
cmp
xchg
adc
js
jecxz
push
in
sbb
sub
sub
ficomp
and
dec
xchg
xchg
loop
stc
ja
das
pop
inc
stos
ds
fnstenv
and
mov
(bad)
in
or
or
call
bound
push
mov
dec
retf
dec
mov
sbb
fdiv
cmc
push
ret
xor
sub
ror
(bad)
sub
mov
fwait
dec
push
repnz
stos
pop
clc
ins
out
fs
add
paddb
xchg
push
int3
lds
pop
and
pop
jmp
out
adc
das
inc
sbb
mov
test
jmp
scas
jo
sbb
inc
pop
aas
(bad)
dec
xor
push
sub
mov
jmp
add
test
push
ins
ja
cld
and
fst
loop
lea
sbb
jae
dec
(bad)
mov
je
jns
(bad)
(bad)
mov
and
retf
div
mov
imul
sar
dec
sbb
imul
movs
xchg
stos
mov
iret
sbb
out
pop
fs
cmps
dec
aas
cmps
pop
popf
fcmovu
lods
sub
mov
js
pop
inc
ffreep
cmp
mov
aad
mov
mov
jmp
push
xchg
and
and
test
and
not
leave
push
jl
add
cld
leave
dec
xor
sbb
mov
sbb
outs
dec
and
xor
icebp
sub
sub
addr16
into
fmul
or
xor
std
pop
int
pop
jecxz
cmp
push
sbb
retf
mov
sbb
xor
push
dec
js
xlat
iret
ins
add
icebp
pop
lods
sub
adc
inc
mov
and
xchg
shl
and
hlt
pop
dec
std
scas
dec
or
and
shr
daa
(bad)
out
pop
pusha
dec
mov
fdiv
mov
(bad)
fld
aam
lods
mov
dec
mov
mov
xlat
movs
gs
xchg
mov
leave
or
pushf
ds
inc
fild
or
mov
xor
cmp
lock
out
aam
jno
fst
xor
sbb
add
mov
imul
loopne
xchg
in
stos
pop
jge
int3
(bad)
jmp
mov
mov
lods
jl
sbb
test
pop
dec
fwait
out
imul
and
jb
xrelease
(bad)
sahf
ret
ins
imul
fadd
jae
add
sbb
lock
sbb
sub
cdq
int3
pop
rep
jg
mov
cdq
jnp
inc
rcl
ret
xor
pop
adc
or
inc
les
and
push
inc
rcl
push
test
adc
pop
inc
cmp
mov
xor
ins
daa
call
or
xor
loop
es
clc
mov
(bad)
push
lea
loopne
mov
or
in
pusha
je
adc
sub
es
jmp
xchg
test
loop
cmps
mov
or
enter
daa
test
stos
mov
aad
and
xor
pop
cmp
mov
add
sbb
pushf
in
pop
mov
test
ins
jne
pop
sahf
aam
in
outs
imul
push
jmp
cs
xor
jae
jle
xor
jecxz
stos
stc
mov
sub
ret
dec
jno
stc
mov
mov
sti
push
repz
mov
jns
and
lods
or
bound
hlt
and
pusha
ja
mov
inc
sub
test
xor
or
fwait
in
mov
cwde
rol
inc
push
mov
push
jge
push
into
(bad)
aaa
out
(bad)
loope
xor
adc
xchg
jle
xor
aam
mov
imul
(bad)
clc
and
scas
dec
add
pop
aaa
push
xchg
pop
ret
sub
popf
push
pop
cld
pop
add
pop
or
sbb
jns
arpl
ret
push
repz
aam
inc
in
fisttp
dec
mov
inc
inc
loopne
mov
inc
in
sbb
sti
imul
loopne
inc
loopne
push
in
idiv
aaa
mov
(bad)
outs
fadd
dec
xchg
mov
out
loopne
icebp
fdivr
jne
xchg
out
in
test
adc
sahf
icebp
mov
imul
(bad)
fcomp
adc
push
and
add
sbb
pop
and
int
ins
xlat
mov
les
imul
push
push
pop
jl
mov
inc
(bad)
mov
jmp
fcomp
int
mov
cmp
mov
and
imul
sub
adc
cld
jmp
pusha
mov
mov
pop
cmp
mov
sbb
pop
mov
jno
pop
jnp
aas
cwde
inc
repnz
test
xchg
je
in
(bad)
jl
jb
xchg
mov
das
pop
push
push
fmul
xor
lock
bound
sbb
int3
push
xchg
(bad)
sub
inc
mov
jmp
outs
cmps
pop
xor
std
mov
loopne
xor
pop
lods
adc
mov
cmc
pop
inc
call
inc
pop
or
pop
(bad)
cmp
pop
inc
fwait
add
mov
cmp
or
sub
daa
add
xchg
or
push
add
and
inc
call
ret
adc
lea
test
test
std
inc
int3
pushf
popa
xchg
xor
jnp
xor
rol
cmp
ins
les
cmps
scas
adc
jle
mov
shl
imul
xor
push
xor
mov
sbb
iret
pop
cmp
lea
adc
call
iret
jbe
mov
stos
push
jle
inc
pop
add
sub
xchg
dec
jo
inc
movlps
pusha
mov
enter
test
shl
repz
loop
fst
and
jl
shr
clc
cmp
jno
add
inc
pop
or
outs
test
mov
lahf
cmp
fidivr
ror
sub
sub
(bad)
dec
out
lock
jmp
inc
repz
clc
shr
sbb
sti
inc
stos
inc
and
mov
mov
dec
lods
cld
cmps
gs
inc
cld
in
and
mov
div
fsubr
sar
jae
pop
cmp
mov
das
jae
adc
inc
clc
(bad)
pop
xor
xchg
dec
jnp
cdq
xchg
cmp
outs
mov
daa
xor
das
lods
seta
arpl
mov
popf
inc
sbb
imul
ds
mov
call
(bad)
popf
sub
fstp
add
or
or
mov
mov
pushf
aam
bound
mov
sahf
sub
sar
jge
in
and
push
jo
inc
cli
xor
retf
add
push
jae
(bad)
test
imul
or
sub
add
pop
dec
mul
(bad)
or
mov
or
dec
les
imul
dec
dec
rcr
(bad)
cmc
push
ins
frstor
inc
sbb
test
push
fcom
inc
shr
gs
xchg
xchg
add
add
scas
dec
sti
xor
mov
outs
je
jp
mov
call
push
jb
push
pop
fist
dec
mov
dec
add
pop
xchg
pop
pushf
lock
cwde
or
jo
sub
ja
push
and
sub
ins
jbe
rsqrtps
mul
and
xor
cmps
pop
jl
cmp
mul
sub
ja
fcom
adc
leave
xchg
retf
test
and
out
cdq
cmp
ss
mov
push
cmp
or
inc
xchg
push
mov
cmps
pop
ret
or
push
add
sar
cmp
or
mov
add
shl
pop
stc
aad
mov
dec
fistp
inc
adc
dec
test
xchg
cmp
add
lock
rcr
dec
push
test
(bad)
enter
xchg
push
push
mov
xchg
call
mov
and
and
fidiv
cmps
movs
jle
inc
push
add
fidiv
mov
stos
pop
add
or
std
leave
jbe
gs
cwde
es
adc
xor
mov
test
sub
or
jno
dec
lds
cdq
aaa
jge
pop
pop
push
(bad)
mov
sbb
or
movs
aad
inc
jo
sub
jg
adc
mov
jecxz
fcom
aad
int
mov
or
mov
pop
xchg
adc
mov
add
xchg
hlt
xchg
rol
fs
ret
out
jb
loop
or
outs
fld
test
inc
adc
push
hlt
sbb
pop
sbb
dec
es
mov
aas
hlt
push
rcr
div
pop
cmp
ret
scas
loopne
call
mov
in
sar
mov
(bad)
cmc
xchg
ins
js
sti
mov
or
test
pop
pop
inc
call
push
cmp
sbb
jbe
mov
mov
pop
cmp
push
pop
jo
jno
cmp
lods
lock
(bad)
jg
mov
jnp
or
sbb
add
loop
call
gs
sub
push
pop
pop
push
ds
pusha
into
(bad)
iret
dec
mov
pop
and
pop
or
stos
mov
sbb
push
jg
inc
or
push
ins
hlt
fdivp
lfs
jg
xchg
mov
repz
mov
das
icebp
cld
pop
mov
fistp
(bad)
(bad)
pushf
cmps
mov
enter
xchg
push
jmp
push
(bad)
cdq
and
aad
cmc
jno
push
fmul
pop
fbstp
and
xor
nop
push
cmps
fs
push
sub
push
test
and
mov
test
imul
ss
iret
dec
cmp
jle
daa
in
imul
or
movs
xchg
add
push
push
and
ret
jmp
div
push
std
mov
add
or
mov
sbb
cmp
test
sbb
inc
lahf
mov
loop
das
repz
call
popf
jge
mov
cwde
(bad)
sbb
into
pop
mov
cmp
enter
jae
mov
clc
push
(bad)
pop
mov
jl
(bad)
call
add
push
in
xor
xor
fsub
test
out
int
test
les
hlt
xchg
or
test
add
inc
or
out
mov
int3
in
pop
cmps
pop
in
sti
ret
sub
cmps
adc
loopne
lods
dec
das
inc
pop
cs
scas
in
dec
(bad)
fcomp
push
lea
lahf
movs
inc
outs
aas
scas
stos
adc
mov
test
pop
movs
mov
sbb
in
sbb
and
jbe
adc
sahf
push
push
mov
rol
mov
pop
test
inc
mov
or
push
cmp
mov
outs
mov
daa
jnp
ins
jp
sti
pop
ss
dec
or
add
mov
enter
das
and
pop
imul
mov
arpl
repnz
je
shl
aad
xor
pop
(bad)
fwait
push
cmp
into
(bad)
mov
pop
dec
fiadd
and
jmp
mov
arpl
pushf
jecxz
lds
sbb
outs
cmp
jp
push
push
add
inc
sbb
push
inc
cmp
js
iret
adc
frstor
(bad)
stc
sbb
sahf
(bad)
dec
in
sbb
mov
mov
mov
jnp
sbb
jecxz
push
dec
dec
outs
sti
jmp
push
fwait
xchg
xor
and
outs
ret
pop
cmp
icebp
and
cs
ins
pop
mov
aas
xchg
lea
dec
(bad)
mov
mov
std
mov
push
loop
adc
xor
fistp
leave
pop
aas
lahf
mov
adc
jle
or
test
fcom
out
(bad)
ss
push
jne
fdivr
ds
test
(bad)
or
sbb
lods
test
out
or
stc
pop
cmp
(bad)
mov
mov
bound
jno
adc
add
lock
cmps
or
stos
and
fmul
clc
push
adc
ins
push
mov
loop
xlat
dec
enter
push
cld
fimul
movs
daa
cmp
pop
adc
jge
mov
add
scas
pop
or
aad
lds
dec
sbb
ficomp
push
add
sbb
cmp
or
and
push
mov
fistp
fs
div
repnz
add
push
gs
push
and
add
in
popa
jge
mov
add
cdq
jmp
push
mov
mov
sbb
inc
or
adc
cdq
jmp
mov
dec
inc
(bad)
outs
cdq
dec
add
inc
mov
jg
mov
pop
xchg
jmp
outs
push
dec
mov
adc
or
(bad)
or
fld
out
lea
xchg
ins
loope
dec
cmps
movs
movs
std
pop
rcr
mov
pop
out
fisttp
jmp
xchg
inc
rcr
pop
xchg
jb
data16
add
xchg
clc
mov
or
inc
es
mov
xlat
dec
pop
inc
sub
jecxz
movs
jp
cmps
imul
mov
ins
rol
cmp
pop
inc
mov
fdivp
jb
ja
mov
sbb
xor
sub
push
xchg
call
mov
popf
pusha
retf
push
cmps
or
repz
fldcw
push
adc
xor
pop
fs
xchg
mov
ror
shl
jmp
or
repz
push
inc
test
movs
mov
jle
popa
xchg
pop
fsubr
mov
aad
sbb
mov
enter
ror
pop
xor
mov
dec
shl
sub
pop
fucomi
out
std
ins
adc
inc
add
aam
mov
mov
dec
es
push
in
mov
fs
hlt
cmp
repz
mov
sti
push
pop
std
mov
dec
pop
pop
adc
push
dec
sbb
jo
shr
ror
or
out
cmc
adc
add
imul
outs
adc
clc
jno
xor
stos
je
ds
xchg
inc
sbb
adc
movs
mov
cmp
fild
jb
xor
jp
mov
dec
and
(bad)
mov
pop
sub
xlat
dec
out
retf
aas
cwde
pusha
pop
repnz
in
(bad)
retf
nop
je
inc
xor
(bad)
test
adc
jnp
fsub
pop
cmp
push
jl
jbe
mov
xor
cmp
xchg
dec
jb
sbb
lahf
cmp
scas
and
mov
retf
mov
mov
and
or
test
loope
or
mov
call
push
jnp
mov
sar
sbb
popa
and
xchg
xchg
(bad)
fisttp
add
adc
cvttps2pi
lods
repz
mov
aad
leave
out
jns
jmp
outs
push
(bad)
outs
inc
lahf
inc
pop
into
and
adc
cmps
stc
add
es
cld
ds
fisubr
aam
js
add
push
lods
push
mov
aas
pushf
in
jmp
jae
loopne
repz
inc
dec
cli
ja
or
pop
push
leave
adc
or
inc
adc
inc
stc
sbb
mov
test
inc
or
and
cmps
and
jmp
ror
mov
or
pop
xor
pop
sub
jmp
stc
ins
call
test
mov
jmp
cmps
cmps
in
push
ins
adc
or
adc
sbb
into
xor
pushw
repz
std
cli
cs
test
aad
daa
stc
sahf
je
mov
cli
dec
outs
in
sub
nop
push
inc
sbb
pop
and
rcr
stos
pop
cmps
sbb
into
shl
xchg
mov
mov
aas
mov
add
xchg
mov
or
aad
test
lods
pusha
jecxz
test
(bad)
std
inc
cmp
xlat
jle
add
push
int
mov
(bad)
fild
lea
jg
cld
enter
mov
push
xlat
sbb
xchg
es
push
xor
pop
aad
dec
stc
or
sbb
sbb
xchg
cmp
popa
fsubr
mov
push
push
jecxz
mov
gs
pop
cmp
icebp
pop
test
mov
loope
popf
jg
scas
(bad)
js
stos
outs
jl
hlt
mov
push
in
mov
movs
inc
mov
retf
xchg
xor
jl
aad
scas
push
pop
cmps
sahf
push
shld
sub
test
aam
loope
fstp
arpl
inc
cmp
add
sti
test
(bad)
aad
mov
cmps
xor
mov
mov
out
hlt
test
fcom
push
iret
sub
repz
jecxz
jg
and
jne
xchg
mov
mov
pop
in
hlt
(bad)
mov
add
fsub
pop
and
jmp
push
pusha
mov
add
or
lock
mov
pop
sbb
data16
mov
pop
cmp
dec
fcomip
mov
and
and
sub
pop
xchg
cwde
std
mov
data16
bound
aas
pusha
jecxz
aam
add
cs
sar
sbb
das
test
push
xor
xchg
xchg
jge
push
fcomip
stos
frstor
dec
sbb
xchg
jge
xchg
add
(bad)
cs
dec
add
lahf
dec
rcr
gs
(bad)
shl
xor
cmps
retf
xchg
xchg
sub
repnz
push
test
and
xchg
pusha
xchg
arpl
bswap
mov
test
push
push
add
sbb
push
cli
add
jnp
pop
popf
adc
sar
inc
retf
fisub
bound
bswap
fld
repz
(bad)
xchg
test
mov
cwde
add
xlat
jg
xchg
push
mov
lods
stos
outs
xor
or
jmp
pusha
cmps
hlt
inc
nop
into
adc
fwait
sbb
bound
outs
retf
xchg
or
sti
sbb
es
cmc
setne
ret
inc
test
jg
shl
(bad)
add
dec
jns
jnp
pop
jl
popa
push
out
stos
dec
and
adc
xor
test
adc
and
pop
jg
xor
xor
push
inc
fwait
out
push
leave
pusha
sub
mov
ficomp
and
test
xor
dec
add
cmp
cs
arpl
gs
aad
add
pusha
jecxz
cmp
test
adc
pop
mov
loop
dec
cwde
xchg
or
push
mov
xchg
pop
jo
not
imul
push
sub
sar
fcom
lea
and
ret
pop
pop
js
cmp
dec
mov
dec
sub
(bad)
iret
cmp
scas
mov
jne
jb
enter
xchg
aam
mov
loop
iret
mov
adc
test
jae
xchg
outs
enter
mov
mov
sbb
cmps
mov
fbstp
push
inc
ins
mov
sbb
inc
mov
pop
je
adc
push
mov
mov
stos
jmp
cmp
div
push
int
stos
xor
int
inc
xor
scas
mov
adc
xchg
or
(bad)
add
push
out
xchg
fwait
sbb
mov
jns
out
mov
inc
int
(bad)
mov
inc
(bad)
js
jmp
sub
or
cmps
mov
test
cwde
retf
lea
pop
cmp
(bad)
in
pop
(bad)
cld
xchg
mov
add
fstp
xchg
inc
mov
jne
cld
sbb
mov
cmps
not
mov
imul
das
adc
pop
into
xor
jle
mov
push
inc
lea
dec
in
(bad)
mov
jmp
into
lock
(bad)
mov
test
and
adc
(bad)
rcl
int
and
jl
mov
fwait
sub
jb
sub
xor
push
pop
and
pop
clc
cmp
sbb
cmp
jmp
or
adc
scas
or
mov
xchg
repnz
mov
inc
(bad)
fdiv
mov
daa
mov
idiv
rol
cmps
xor
add
dec
lds
mov
pop
cmp
push
iret
popa
fidivr
mov
adc
ror
and
scas
mov
push
test
mov
(bad)
xchg
iret
bound
ins
mov
push
iret
pusha
mov
in
mov
jp
push
aam
dec
jmp
outs
dec
mov
add
cmps
pop
push
rcl
int3
adc
movs
sub
daa
mov
add
and
(bad)
std
add
jae
mov
iret
movs
ins
fucomp
push
enter
call
imul
dec
dec
mov
(bad)
sbb
sub
stc
mov
inc
cmp
aad
cli
push
adc
mov
outs
and
xchg
cmp
jmp
sahf
push
mov
jp
and
mov
adc
fucomi
fwait
stos
in
fdivr
cmps
xor
repz
mov
adc
(bad)
fdiv
and
sbb
in
sbb
sbb
jle
or
cmp
fucomi
or
aad
mov
lock
test
pusha
iret
jp
push
mov
sub
jns
mov
ins
xchg
mov
mov
mov
cmps
stos
sahf
rol
and
movs
je
outs
and
ins
(bad)
pop
pop
das
add
push
in
arpl
dec
call
loopne
test
cli
add
sub
in
jle
sti
out
lods
cwde
cli
arpl
aaa
mov
jge
mov
pop
xchg
add
sub
jl
je
es
push
pushf
ret
imul
mov
fbld
pop
pushf
dec
add
bound
inc
xor
xor
mov
call
fsub
jp
dec
push
mov
test
fdiv
pop
ret
ja
ins
jbe
sbb
pushf
dec
inc
dec
xlat
sbb
adc
xadd
test
inc
imul
adc
mov
mov
dec
je
aad
mov
mov
dec
pop
cmp
mov
xchg
or
add
es
sub
jl
jb
xor
push
adc
pushf
cmp
inc
shl
pop
sub
je
in
push
enter
inc
dec
lods
shl
iret
cld
dec
into
loope
call
out
enter
ret
nop
pop
outs
push
fistp
lock
inc
xlat
fcmovne
fidiv
call
loope
mov
dec
sti
nop
and
push
imul
add
xlat
dec
or
ret
cs
(bad)
ja
sbb
in
aam
daa
and
jp
inc
cmp
xor
das
cmp
loop
pushf
mov
clc
xor
cs
mov
sar
jae
dec
pop
retf
mov
aaa
sub
shr
dec
ins
imul
hlt
xor
inc
dec
cmp
xchg
fld
mov
pop
lods
push
stos
xchg
or
jg
xchg
call
add
cmp
push
jo
repnz
cmp
aad
and
cmp
sbb
ins
lea
enter
aas
adc
xor
and
adc
loop
aaa
xchg
dec
cmp
mov
mov
dec
and
push
cmp
sbb
movs
call
jb
pushf
inc
adc
pop
jo
fnstcw
clc
add
mov
cmc
mov
ror
add
jb
jbe
sbb
inc
sar
cmp
mov
inc
(bad)
and
lods
sbb
bound
cmc
dec
xchg
retf
sti
push
pushw
(bad)
jne
or
and
ffreep
jb
fscale
leave
push
pop
xchg
mov
mov
rol
lahf
(bad)
inc
fld
jp
inc
jno
mov
retf
sahf
imul
lods
or
in
jle
lea
mov
(bad)
(bad)
add
out
shl
cmps
stc
test
push
mov
fs
mov
gs
mov
arpl
ror
pop
pop
nop
cwde
fiadd
and
pop
fistp
mov
add
cld
or
cwde
inc
mul
call
cmp
cmp
imul
enter
repnz
adc
fcmovne
dec
cli
xchg
das
nop
dec
push
dec
xor
xor
int3
mov
xor
daa
and
inc
xor
jb
mov
retf
cmc
push
xchg
push
dec
shl
pop
mov
sbb
fistp
ins
daa
in
cmp
repnz
js
jbe
cmp
sub
adc
xchg
nop
(bad)
pop
imul
hlt
pop
(bad)
mov
jns
adc
jmp
clc
push
xchg
push
fsubr
mov
inc
dec
add
pop
jmp
cmp
cli
push
xor
loope
mov
in
pop
inc
mov
mov
daa
and
dec
in
add
mov
sbb
test
and
push
(bad)
xchg
call
or
jnp
int3
xchg
add
dec
mov
or
jbe
repz
push
cwde
xchg
sub
cmp
shl
hlt
stos
out
imul
add
loop
push
(bad)
pop
pop
movs
and
stos
sti
push
(bad)
data16
inc
push
xchg
je
mov
inc
lods
fs
movs
fild
loop
adc
xchg
push
xchg
and
jb
mov
cdq
stos
and
leave
imul
push
jb
cmps
lods
push
cmp
cmps
push
icebp
xchg
add
mul
in
cs
adc
rcl
aas
dec
mov
daa
cdq
shl
cmp
frstor
scas
jle
cwde
jmp
mov
dec
cmp
retf
stos
sti
pop
cmp
nop
pushfw
mov
lahf
and
stos
inc
cli
fwait
mov
in
mov
stc
pusha
lock
cli
fwait
shl
xchg
popf
enter
mov
dec
ss
(bad)
sbb
into
call
pop
sbb
xor
arpl
dec
xchg
and
shl
xchg
nop
frstor
push
pushf
cmp
popf
cmp
loop
ret
dec
sbb
cmp
out
rcl
nop
push
fstp
cmp
inc
pop
sbb
scas
sbb
and
sbb
mov
ror
mov
push
mov
repnz
(bad)
stc
fst
xor
ror
cmp
fxch
jno
cmp
nop
xchg
repnz
jno
dec
int
push
fdiv
xor
pop
(bad)
into
test
ret
retf
fwait
mov
add
imul
dec
ins
dec
popa
pop
or
sbb
mov
jp
or
push
into
in
and
cmc
push
test
sbb
ins
ret
xor
mov
sbb
ret
mov
repnz
inc
sti
movs
cmp
call
jns
mov
push
cwde
sbb
mov
dec
cmp
cmps
cmp
jmp
inc
jb
repnz
or
pushf
adc
adc
test
pop
sbb
jno
je
int
mov
rep
inc
adc
cmp
cmp
das
fdiv
cwde
icebp
cmc
add
in
rcr
add
ja
and
stos
or
and
mov
or
mov
cmp
cmp
mov
cs
arpl
inc
pop
mov
repz
movs
xor
aad
mov
or
jnp
xor
aaa
popf
dec
jmp
repz
push
or
jl
push
retf
das
repnz
xor
out
or
xchg
xor
cli
mov
jne
push
fsubr
int3
sbb
rcl
add
mov
pop
std
push
stos
or
sbb
rcl
add
(bad)
fdivr
pop
or
jmp
iret
and
jg
sahf
mov
xor
push
sub
dec
jle
test
cmps
test
xlat
adc
(bad)
mov
test
in
xor
ins
push
mov
nop
rcl
sub
inc
adc
aam
adc
test
xchg
pop
rol
mov
stos
popf
lea
icebp
adc
pusha
ss
cmp
push
mov
push
(bad)
ret
adc
int3
clc
adc
adc
shr
pop
int
mov
pop
push
push
(bad)
imul
retf
inc
mov
jecxz
sbb
jns
pop
lea
xor
sub
fisttp
push
push
cmp
xchg
(bad)
cmc
jae
int
dec
jg
sbb
xlat
and
pusha
fistp
leave
add
std
jecxz
adc
pop
js
pop
in
pop
scas
adc
aas
aam
ret
xchg
dec
xor
push
(bad)
retf
cmc
xchg
ins
punpckldq
rol
mov
retf
sbb
sub
mov
mov
(bad)
or
pushf
mov
mov
cld
loope
jl
sub
imul
movs
sub
repnz
and
cmp
adc
pop
test
inc
popa
xor
xchg
(bad)
scas
mov
push
sbb
adc
sbb
jmp
ins
adc
repnz
mov
lds
mov
shr
(bad)
inc
(bad)
in
in
sub
pusha
inc
inc
jge
jo
jp
jno
in
push
xchg
mov
sub
movs
loop
fnstenv
std
add
push
jbe
nop
btr
js
mov
dec
or
jmp
gs
fstp
add
leave
pop
lahf
mov
cmp
cmp
sbb
cli
iret
xor
mov
jg
push
(bad)
or
adc
mov
fimul
in
je
adc
stos
fs
add
dec
not
or
dec
iret
ret
inc
push
push
or
add
mov
ror
int3
gs
push
in
and
xor
imul
mov
mov
scas
imul
cmp
dec
retf
push
leave
popf
mov
or
push
and
inc
cmp
inc
stos
adc
mov
test
out
mov
aas
mov
enter
adc
ret
xchg
fdiv
hlt
adc
cmp
sbb
inc
push
xchg
int3
sbb
std
or
dec
in
shl
ror
xor
push
(bad)
pop
dec
inc
bound
push
aad
daa
fisubr
and
not
fs
dec
jae
sbb
cmp
stos
out
iret
imul
push
and
sub
(bad)
lea
mov
js
das
sbb
push
out
ds
movs
dec
sbb
lods
and
int
cmp
in
mov
loop
cmp
daa
mov
cdq
inc
dec
test
mov
lods
cwde
in
adc
(bad)
jae
mov
pop
out
std
ja
je
test
xor
add
loope
fst
or
xor
rcr
outs
aas
push
inc
jmp
mov
jge
dec
shr
hlt
jmp
std
sbb
repz
dec
sub
movs
cmp
sbb
cmp
sub
popa
sbb
leave
cmps
fisttp
aam
and
pop
pushf
dec
and
movs
mov
jg
xlat
sbb
fistp
sbb
lods
inc
dec
add
leave
jp
jae
pop
in
cmp
push
sub
pop
push
jb
mov
jmp
xchg
pop
and
mov
mov
mov
addr16
sub
cmc
mov
addr16
add
jmp
es
push
fsub
call
cmps
or
xchg
dec
push
enter
call
mov
arpl
int3
cmp
jle
jmp
mov
jmp
rol
push
push
cmps
dec
mov
push
push
inc
out
fcom
jo
clc
pop
fisttp
data16
int3
iret
loopne
gs
cmp
push
aaa
mov
xchg
push
xchg
es
dec
cmp
xor
push
push
lock
icebp
mov
mov
mov
(bad)
movs
xchg
inc
jge
and
fwait
sbb
nop
jno
mov
cmc
ds
outs
inc
cld
stc
sbb
xchg
stos
cli
adc
gs
dec
or
lahf
imul
inc
test
pushf
jmp
and
xchg
and
jg
add
mov
ins
ficom
scas
xchg
ins
in
dec
lea
push
and
ret
gs
and
les
jge
xor
mov
sahf
sti
cmps
(bad)
inc
inc
xchg
sub
cmp
mov
dec
cmp
(bad)
or
mov
jle
sbb
jp
inc
xchg
mov
popf
push
push
cmp
imul
and
xchg
call
jle
retf
push
pop
lods
push
cld
pop
fwait
mov
xor
fidiv
lods
imul
in
cmps
inc
push
xchg
pop
out
ja
aad
inc
iret
xor
mov
mov
in
sar
fild
add
mov
and
dec
add
cmp
retf
pusha
fdivp
aam
jns
inc
iret
push
xchg
call
gs
test
pop
out
jns
or
stos
ds
das
in
push
or
in
hlt
repz
into
add
je
mov
cmp
adc
shl
push
add
push
pop
xchg
add
in
sub
or
cmp
cmp
cmp
pop
ret
jns
es
pop
fisttp
sub
or
jo
xchg
mov
retf
inc
jecxz
stos
rol
and
xor
xchg
jmp
int
movs
lods
mov
mov
xchg
xlat
out
xchg
sub
fldenv
adc
mov
into
dec
mov
pop
addr16
jle
in
fcmovu
adc
aaa
dec
movs
mov
fld
pop
xchg
cmp
imul
xchg
mov
ret
ret
sbb
retf
repz
int
repz
mov
lods
dec
jmp
or
push
push
int3
imul
push
fadd
aaa
stos
push
push
push
mul
hlt
mov
push
out
mov
cs
adc
fnstsw
inc
movs
jg
paddd
cmp
jecxz
lea
mov
xor
leave
pop
call
fs
(bad)
(bad)
fcom
xchg
inc
out
inc
mov
xchg
cmp
adc
lea
and
out
pop
js
xchg
fisubr
test
pop
cmp
push
mov
fcmovnu
and
leave
ror
sub
sbb
mov
pushf
(bad)
inc
sbb
xchg
lahf
movs
out
lock
psrld
xor
inc
pushf
ds
test
sbb
push
pop
or
cmp
or
add
rcl
das
jo
(bad)
fisubr
mov
sub
ds
push
and
push
pusha
(bad)
xchg
cmc
aas
dec
aam
(bad)
sbb
add
sub
adc
push
leave
pop
and
jae
test
mov
and
xchg
or
xchg
icebp
ret
mov
movs
jno
fimul
iret
dec
ja
pop
(bad)
sahf
sti
rcr
adc
jbe
cmp
mov
js
outs
test
ret
push
mov
fst
ret
iret
loop
data16
adc
cmps
mov
int
out
subps
xchg
mov
adc
jo
push
test
push
shl
push
jb
gs
arpl
mov
or
test
imul
pop
pushfw
cmps
retf
icebp
repz
cld
pop
xor
sbb
or
loop
cmc
or
jnp
call
enter
mul
test
mov
dec
jge
sbb
pop
stos
xor
xchg
pop
out
xchg
mov
mov
rcr
aaa
lods
je
retf
jp
test
out
xor
inc
retf
push
and
add
xlat
test
cmp
fcom
sub
xor
inc
lds
mov
sub
vpmovmskb
and
cs
and
test
sbb
in
test
xlat
mov
cdq
fild
xchg
dec
and
push
stos
jge
dec
or
jmp
push
stos
dec
mov
jae
push
adc
pop
jb
test
dec
jle
and
jl
in
ret
out
or
jns
loop
push
outs
jns
test
pop
add
pop
cmps
nop
pop
je
or
(bad)
push
pop
xchg
add
mov
pop
test
xchg
jecxz
xchg
pop
mov
repnz
mov
inc
jge
and
clc
out
push
push
stos
iret
jb
mov
inc
jo
cmp
add
jle
stos
sti
or
addps
inc
add
movs
test
and
push
(bad)
mov
or
daa
push
push
push
adc
sub
adc
xchg
in
(bad)
ds
xor
mov
mov
data16
in
cmp
xor
repnz
and
mov
mov
cmp
shl
or
popa
mov
mov
arpl
xchg
cdq
jl
movs
test
daa
mov
pop
xlat
call
stos
mov
test
stos
inc
cmc
sbb
mov
fistp
dec
xchg
xor
push
and
addr16
pusha
aaa
lds
(bad)
mov
xlat
mov
cdq
sub
and
loop
scas
jnp
mov
lea
iret
push
ds
or
stos
das
mov
hlt
xchg
shr
inc
add
out
sub
in
inc
fwait
pop
pop
mov
mov
lock
retf
push
sub
outs
mov
mov
sub
fisub
pushf
movs
aas
cdq
dec
lea
(bad)
loopne
or
dec
mov
mov
leave
jo
imul
(bad)
xchg
jnp
adc
(bad)
or
pop
int
push
test
(bad)
arpl
shr
mov
dec
in
sub
sub
test
mov
add
jmp
mov
inc
add
inc
sbb
mov
sub
cs
mov
lods
xor
push
and
mov
cwd
add
pop
leave
dec
(bad)
(bad)
repnz
jge
mov
dec
pusha
jmp
and
aam
out
rcr
rcl
inc
push
sub
pop
stos
mov
stos
fidiv
push
dec
test
jmp
pop
or
pop
dec
push
pmaxsw
fstp
cwde
adc
adc
cdq
or
adc
jno
xchg
jecxz
ins
sbb
inc
lock
sub
add
(bad)
jle
mov
bnd
mov
ds
and
xchg
xor
addr16
nop
inc
jnp
rcr
and
lea
sub
stc
hlt
leave
in
std
and
es
xor
mov
or
gs
in
mov
dec
jno
xor
xor
loope
add
xor
push
mov
pushf
neg
aas
aaa
or
pop
gs
jle
sbb
jns
int3
stos
sbb
iret
xchg
rcr
repnz
iret
and
dec
or
inc
movs
sbb
jmp
sub
dec
adc
adc
sbb
push
shl
sub
std
das
cmp
xchg
repnz
mov
mov
in
sbb
stos
inc
pop
dec
addr16
fsincos
jge
cmps
xor
movs
xor
cmp
addr16
add
lahf
sar
pop
or
xchg
push
pushf
jae
aas
ja
dec
push
xor
sbb
add
and
mov
loope
mov
and
sbb
cmp
mov
ja
mov
iret
nop
sbb
or
enter
bound
test
(bad)
jp
xchg
jp
xchg
xchg
adc
ficom
sbb
call
mov
pop
push
outs
dec
movs
inc
fisubr
cdq
jo
sub
fsub
xor
ret
bswap
retf
dec
aas
arpl
cmps
jbe
fprem
mov
sar
in
mov
add
sbb
js
add
fsubr
pop
and
icebp
mov
push
test
mov
push
push
xchg
xor
sub
gs
mov
lods
loopne
mov
sbb
fisub
cmp
cmp
mov
into
ret
dec
jae
pop
pop
push
mov
fcom
pop
inc
add
or
pop
adc
loope
jne
pop
inc
rcl
or
and
push
ds
jmp
aaa
(bad)
lods
(bad)
mov
lahf
in
xlat
lahf
mov
inc
fs
lock
sub
arpl
(bad)
cld
inc
jg
push
jae
push
outs
and
push
rol
test
enter
ret
mov
sti
push
mov
or
inc
or
push
lods
push
repz
dec
add
push
cmp
sbb
cmp
jl
(bad)
shl
mov
(bad)
push
pop
xor
push
dec
mov
sub
repz
and
test
aam
into
addr16
mov
lock
mov
test
xchg
push
pop
mov
xchg
mov
jb
(bad)
rcl
loop
and
clc
jl
or
jns
test
repz
mov
iret
in
cdq
jmp
mov
gs
cli
lds
cmc
cmp
lea
jo
js
pop
jp
adc
adc
push
or
into
(bad)
loopne
je
out
outs
mov
ret
jns
pop
add
imul
stos
dec
in
into
push
addr16
dec
(bad)
pop
jg
inc
push
sbb
ficom
adc
mov
xor
popf
jae
bound
out
pop
mov
xor
jb
jmp
adc
or
sti
lds
sbb
inc
mov
aam
aam
mov
mov
jmp
sub
(bad)
ret
js
rcr
pop
jmp
pop
mov
adc
add
fsubr
jl
cwde
in
retf
repz
cmc
jae
js
xchg
cwde
add
cmp
stc
or
out
add
push
mov
stos
popf
mov
daa
ret
jns
pop
pusha
push
push
push
mov
push
push
inc
shl
push
cld
mov
enter
fcom
adc
nop
(bad)
push
inc
dec
xor
std
xchg
and
sbb
daa
ins
adc
mov
aaa
cmp
push
add
loop
push
loop
test
xchg
data16
add
cmps
xor
mov
dec
or
add
push
out
xor
lea
repnz
aad
add
(bad)
cmps
jne
cmp
or
and
sbb
inc
mov
push
add
pop
pop
inc
inc
dec
test
imul
adc
(bad)
into
aaa
and
movs
nop
or
loop
ja
outs
pop
cmp
rcl
sub
pop
add
cmp
out
out
(bad)
push
xchg
dec
mov
push
or
cmp
and
repz
data16
cli
or
cmp
inc
sub
lods
jbe
jl
push
js
loop
adc
sar
jmp
mov
mov
jle
out
dec
adc
sahf
ja
popa
xchg
push
bound
mov
test
fwait
xlat
movs
jmp
ret
call
sbb
mov
pop
mov
test
mov
mov
and
int3
rcl
lahf
mov
ret
cmps
mov
mov
mov
(bad)
test
mov
pop
mov
dec
xchg
paddq
pushf
mov
pop
pop
popf
cld
jo
ficom
inc
lods
(bad)
dec
mov
inc
cmps
outs
out
ss
out
adc
bnd
mov
call
fsubr
jecxz
retf
mov
pusha
retf
pop
(bad)
mov
rcl
retf
idiv
imul
dec
push
loope
and
clc
aas
es
push
inc
cwde
push
inc
add
sbb
push
pop
stos
dec
lods
pop
xchg
xchg
retf
mov
xchg
outs
stos
sahf
mov
lock
and
mov
or
push
dec
cld
test
aas
jmp
xor
or
shr
pop
cmp
popa
jl
sbb
test
cld
mov
jmp
js
idiv
ficom
cmc
or
pop
je
in
mov
js
std
fcom
data16
xor
and
push
ror
cmp
xchg
pop
mov
xchg
inc
xor
inc
les
outs
jmp
leave
inc
loope
jge
fcomp
mov
mov
xor
inc
push
cmp
retf
cmp
jbe
out
jmp
test
mov
mov
inc
lods
cmp
cmp
add
imul
cmc
cs
inc
lahf
xchg
test
ss
or
pusha
push
mov
jno
add
or
dec
lea
add
xor
cmp
pop
push
out
mov
mov
enter
and
pop
stos
pop
addr16
sbb
inc
inc
js
dec
add
fwait
movs
repz
or
movs
aam
repnz
jg
stc
jb
(bad)
pop
add
clc
mov
fs
xor
mov
jecxz
cli
dec
loopne
loop
pop
mov
cmp
ins
inc
(bad)
clc
mov
dec
mov
dec
int3
iret
pop
out
sbb
inc
inc
mov
movs
add
mov
mov
(bad)
out
pushf
push
pop
xor
add
test
mov
pushf
mov
nop
aas
pop
sbb
mov
sbb
jo
inc
dec
push
cmp
dec
push
fistp
leave
inc
cmp
lahf
mov
pop
cld
cmp
(bad)
lods
fs
sbb
test
popa
xchg
popa
cli
sub
mov
cmp
jb
pusha
mov
nop
xchg
int
fbld
jno
and
push
(bad)
mov
jle
fisubr
adc
cli
pushf
aaa
xchg
sbb
xor
fbld
out
xchg
mov
dec
ret
xor
mov
pusha
xchg
mov
aad
adc
fcomp
inc
dec
add
mov
push
sub
push
adc
pop
jae
fisub
sti
ficom
mov
and
pop
shr
fsub
mov
xchg
in
shl
stc
mov
mov
out
loope
cli
and
xchg
mov
cmp
dec
ror
push
xor
adc
push
test
mov
mov
(bad)
jo
popf
inc
addr16
dec
cmc
mov
xchg
jmp
test
cwde
mov
sub
jle
cmps
cmc
scas
jmp
and
mov
(bad)
loope
sbb
aas
jns
retf
mov
push
mov
rcl
test
inc
jo
mov
adc
stc
mov
jl
mov
test
push
xor
and
dec
loopne
and
jle
aas
mov
add
ins
inc
cmps
std
sub
sub
(bad)
mov
ins
pop
aaa
stc
push
mov
push
mov
loop
das
daa
in
adc
lods
mov
jno
pop
adc
mov
and
pop
int3
push
xchg
dec
pop
sbb
xchg
sbb
cmc
scas
int
sti
mov
pop
ds
xchg
mov
ins
ret
push
pushf
mov
pop
ret
aaa
retf
jno
in
xchg
inc
call
mul
cld
inc
jg
inc
(bad)
mov
hlt
mov
bnd
pop
std
(bad)
popf
(bad)
pmovmskb
mov
gs
out
xchg
jecxz
clc
cld
mov
jne
bound
adc
jmp
bound
sub
cmps
pop
push
imul
loope
ret
fiadd
jbe
out
sbb
push
aad
push
push
jecxz
inc
sahf
mov
sti
dec
fld
dec
in
fs
(bad)
ret
xor
cld
xchg
dec
test
add
movs
int
jle
bndstx
sar
leave
jae
das
mov
cwde
mov
mov
xchg
fld
xchg
dec
or
nop
pop
outs
sbb
mov
outs
sub
xchg
dec
mov
mov
arpl
sahf
pop
out
mov
adc
test
add
ret
data16
adc
xlat
add
xchg
les
aad
retf
jb
aad
call
mov
mov
push
push
popf
xor
mov
pop
out
rcr
arpl
fistp
pop
push
in
mov
shl
jg
(bad)
ins
test
pushf
sbb
retf
push
(bad)
mov
lahf
imul
mov
and
sub
imul
(bad)
push
jo
mov
clc
(bad)
xchg
popa
add
cmp
xchg
lods
pop
sub
xor
fs
popf
adc
cmc
mov
dec
cmp
mov
mov
fdivr
mov
jae
addr16
repz
pusha
add
lods
jg
mov
cmp
shl
(bad)
push
leave
outs
addr16
icebp
xchg
xchg
je
jae
or
xor
das
mov
and
imul
aaa
ds
cwde
add
icebp
jae
xor
xchg
ins
pop
in
pop
bound
adc
arpl
mov
ret
js
outs
jbe
adc
and
jmp
xor
outs
out
(bad)
cld
xchg
loope
aam
movs
jnp
push
repz
jno
aas
out
inc
inc
jp
inc
pop
mov
and
das
stos
or
adc
test
xor
xchg
push
call
int3
les
mov
out
jbe
mov
jb
push
mov
xchg
popa
data16
fadd
jae
pusha
xor
xor
mov
inc
pusha
js
mov
aas
pop
sub
adc
jmp
adc
sub
and
or
inc
cmp
inc
mov
int3
mov
mov
in
mov
pop
push
sbb
cmps
shl
loope
dec
cwde
or
mov
cli
mov
pop
sti
pusha
xchg
inc
mov
mov
data16
gs
out
popa
add
pushf
cmc
pop
and
sub
sbb
or
cmp
pop
cld
imul
movs
cld
cwde
pop
mov
sbb
or
cmp
push
pop
cmp
mov
jnp
xchg
fistp
pop
mov
mov
xlat
bound
push
pop
mov
xor
cli
push
ret
adc
jne
and
push
in
loopne
out
call
mov
scas
xor
cmp
pop
mov
ins
ret
inc
jns
shl
adc
scas
test
push
sahf
mov
push
xor
popf
jmp
sub
sahf
dec
ins
and
inc
arpl
xor
and
xor
call
lods
lea
loop
mov
lock
add
fimul
adc
push
aas
or
xchg
dec
cmps
call
lea
mov
ja
add
inc
fadd
icebp
adc
or
jmp
fdivr
ror
rcl
jecxz
sub
mov
mov
mov
xchg
mov
jno
xchg
mov
inc
xlat
nop
retf
inc
or
adc
dec
inc
test
call
xor
retf
push
dec
jg
push
push
jle
les
pop
lods
aam
cmp
sbb
repnz
dec
(bad)
and
rcr
dec
xchg
repz
mov
imul
adc
inc
push
(bad)
jno
retf
repnz
push
les
shl
hlt
add
push
les
lea
js
inc
retf
cmp
into
scas
in
sub
jmp
jg
pop
pusha
mov
jp
jmp
adc
push
cli
or
jmp
mul
sub
jo
adc
add
add
stc
cmp
popf
push
test
popf
jmp
push
stos
push
sub
sar
movs
call
std
les
stos
mov
sub
dec
xor
and
mov
sub
jno
mov
fistp
inc
(bad)
jae
imul
inc
test
aam
in
xchg
inc
jle
fs
cmps
int
cmp
push
lea
in
pop
popf
iret
out
pop
adc
int
movs
jno
cwde
sub
or
dec
bound
iret
cld
fild
sub
sub
sbb
in
xor
scas
mov
and
cmps
or
mov
arpl
xchg
or
dec
xchg
ja
dec
cwde
push
ss
xchg
cdq
sub
pop
ds
dec
add
(bad)
add
xlat
jl
inc
cmp
clc
leave
mov
fdiv
mov
aad
aam
xchg
xor
jnp
arpl
dec
pop
cmps
je
int3
sahf
sbb
out
or
pop
(bad)
arpl
lds
dec
arpl
pop
adc
push
call
movaps
inc
xor
cmp
test
mov
inc
jb
imul
jp
fcom
add
mov
sbb
dec
cmp
fisttp
call
fiadd
enter
nop
loope
jno
cmp
ror
jle
pop
mov
cld
imul
retf
adc
xor
xchg
push
clc
cmp
sti
and
dec
mov
mov
or
jg
push
lahf
mov
cmp
jnp
mov
lds
(bad)
pop
popf
pop
add
xchg
(bad)
inc
or
adc
call
js
push
pop
aaa
shr
push
fs
cmps
push
stos
mov
sbb
lea
call
(bad)
je
push
add
xchg
loope
imul
or
fild
xchg
addr16
fldcw
add
clc
jne
dec
add
out
mov
out
pushf
sbb
sbb
xchg
out
push
nop
fwait
enter
shl
jb
fadd
xchg
enter
sbb
repnz
adc
mov
ror
repnz
jecxz
or
jns
mov
add
inc
pop
rcl
sbb
enter
and
pusha
fadd
gs
mov
push
jle
je
mov
xchg
ins
sbb
cmps
lea
inc
out
sbb
and
leave
pop
xchg
lods
cmp
cli
adc
adc
enter
add
add
jle
int3
mov
inc
jmp
in
pop
stos
pop
push
adc
daa
(bad)
scas
mov
fild
jnp
(bad)
aad
pop
xor
in
cdq
test
sub
outs
ret
push
sub
icebp
mov
or
bnd
mov
in
loope
add
push
ffree
out
jne
add
gs
inc
test
inc
sbb
loop
popa
add
out
movs
arpl
dec
xchg
test
add
es
jae
js
jo
mov
das
sub
and
pop
mov
aad
mov
stos
aad
mov
repnz
cmp
stc
test
(bad)
in
out
sub
fistp
pushf
shl
pushf
adc
call
mov
stos
jg
and
inc
inc
ret
fcom
out
lock
in
mov
mov
jnp
loop
adc
push
sub
mov
mov
pop
push
jmp
repnz
fdiv
cmps
fcmovu
or
and
stos
int3
ror
xchg
xchg
addr16
mov
leave
dec
cmps
jl
jb
sub
lds
pop
push
adc
mov
xchg
outs
test
add
int
xchg
ins
sub
int
movs
jle
jns
leave
jge
(bad)
scas
add
inc
ins
cmp
cmp
lock
mov
(bad)
xchg
(bad)
es
gs
xchg
cli
inc
mov
mov
pop
jns
aam
jne
or
icebp
mov
ins
sbb
push
sub
mov
mov
nop
(bad)
push
addr16
scas
inc
inc
sbb
mov
popf
push
fist
ret
inc
in
mov
pop
add
shr
int3
enter
aaa
leave
aaa
scas
(bad)
jns
and
fisttp
xchg
and
or
shl
or
leave
adc
pop
lea
mov
and
in
(bad)
je
bound
leave
sti
iret
inc
mov
sahf
jmp
addr16
shl
imul
sub
mov
add
mov
pop
mov
out
in
mov
and
or
dec
std
out
sbb
cdq
adc
bound
call
pop
(bad)
jbe
enter
ret
pop
pop
retf
(bad)
mov
inc
push
mov
das
jle
push
xor
stc
xor
dec
or
push
in
lock
and
pop
mov
sbb
push
mov
or
xor
cld
adc
aas
mov
or
arpl
add
(bad)
sbb
shl
into
in
adc
sub
add
lea
sub
(bad)
xor
into
or
push
xchg
or
inc
aas
push
mov
add
and
pop
jbe
ss
dec
cmp
xor
mov
cld
clc
(bad)
int
cmp
fwait
les
fldcw
mov
stos
xchg
stos
sbb
dec
mov
int
mov
mov
adc
mov
and
pop
or
in
sbb
jp
loop
cmp
aaa
int3
jge
push
enter
mov
add
into
call
or
xor
jp
xchg
cmp
sbb
jle
sub
xor
test
adc
sub
push
xor
jbe
add
hlt
sbb
add
sub
jle
ins
(bad)
cmps
shl
test
in
int3
clc
in
stc
sub
push
mov
iret
mov
faddp
aas
test
xchg
sahf
fldcw
ins
push
imul
pop
xchg
bound
scas
pop
xor
pop
jae
push
inc
cli
inc
leave
stc
and
add
(bad)
in
cmp
mov
out
mov
inc
jecxz
sub
cmp
sbb
addr16
cmp
ret
lds
mov
fs
mov
pushf
out
scas
or
dec
push
add
fs
mov
sti
mov
sbb
shl
pop
out
call
mov
mov
mov
iret
mov
mov
xchg
jne
(bad)
dec
sub
pop
and
int3
inc
test
cmp
or
xchg
mov
adc
clc
dec
lea
ret
cmps
push
xchg
adc
ins
jl
pop
hlt
push
pop
add
jnp
inc
xlat
mov
(bad)
scas
push
jge
and
aaa
stc
sbb
push
inc
jae
hlt
outs
and
push
aaa
cmp
or
sbb
adc
jecxz
test
mov
shl
shl
dec
sub
jo
mov
mov
or
je
add
mov
jge
adc
inc
(bad)
sahf
mov
adc
jmp
test
ds
jg
inc
cmp
push
dec
aaa
ret
jns
sbb
ret
mov
loopne
sub
enter
daa
(bad)
push
sub
arpl
ret
cmp
mov
xchg
and
jl
pop
(bad)
cmp
neg
add
addr16
call
mov
popa
push
cmp
and
mov
pop
xchg
cdq
cmp
out
imul
mov
mov
pusha
mov
mov
mov
(bad)
lea
sar
mov
mov
push
jae
inc
xchg
clc
ins
add
movs
sar
adc
or
mov
jb
push
nop
loope
mov
pop
sbb
pop
mov
aad
sbb
cmps
xchg
push
dec
push
mov
cdq
mov
sbb
jmp
sbb
cmp
push
mov
lea
fwait
xchg
push
(bad)
sub
mov
mov
repnz
adc
les
test
sub
(bad)
fidiv
add
or
adc
jnp
into
lds
cmp
mov
scas
into
fidiv
std
imul
mov
sbb
sub
sbb
inc
jl
dec
mov
jmp
sbb
sub
xor
jecxz
ret
pop
mov
cld
popf
(bad)
push
(bad)
js
inc
xchg
mov
lods
adc
enter
sar
and
retf
xor
sub
in
pop
dec
in
out
xor
outs
mov
div
pop
or
mov
clc
in
cmps
jmp
repz
int
mov
jo
lods
mov
fcomi
pop
(bad)
scas
mov
mov
cmp
dec
daa
aad
cmps
pop
xchg
fwait
out
cmp
mov
sub
mov
mov
stc
inc
loop
in
jmp
add
pusha
add
cmps
sahf
xchg
or
push
xlat
jo
scas
pop
push
cmp
dec
fimul
adc
xchg
dec
ror
pop
adc
xor
fidiv
jecxz
(bad)
out
out
push
ins
jae
ret
outs
xchg
and
int3
rcl
dec
fstp
(bad)
ins
xchg
jnp
xor
jp
dec
(bad)
popa
pop
outs
add
cli
popf
mov
push
add
aad
clc
inc
push
gs
pop
sahf
or
push
jl
jle
inc
fcomp
jns
pop
sub
xor
pop
mov
fs
inc
popa
rcr
ret
and
push
sub
dec
inc
fisubr
sbb
sub
jo
xchg
mov
inc
mov
imul
dec
mov
sbb
dec
sub
daa
sbb
retf
mov
jb
push
pusha
push
mov
dec
jae
clc
pop
fldenv
xchg
popf
dec
call
sbb
mov
cmp
mov
retf
xor
inc
icebp
adc
mov
arpl
jo
inc
or
les
and
cmovbe
jp
adc
jne
sti
inc
jg
xor
push
in
daa
int3
xor
mov
(bad)
mov
mov
lock
mov
loop
or
pop
mov
mov
pop
xchg
and
movs
or
mov
rcl
ret
pop
sbb
pop
xlat
jecxz
iret
test
inc
addr16
int
adc
mov
clc
xchg
cwde
jg
mov
sbb
gs
jmp
cmp
mov
add
retf
mov
dec
hlt
xchg
shr
stos
push
cmp
cmps
std
sbb
xor
pop
jmp
movs
gs
and
pop
dec
bound
xchg
data16
xor
push
inc
dec
pop
mov
in
clc
or
lahf
data16
fimul
add
aad
xchg
jg
mov
or
repz
jmp
retf
std
adc
push
mov
movs
xor
or
(bad)
cdq
out
jmp
enter
dec
mov
out
hlt
push
xor
fiadd
push
cmc
push
pop
pop
jge
mov
repz
pusha
mov
adc
and
push
or
add
push
test
stc
movs
push
int3
dec
bound
dec
cs
scas
lods
popf
dec
out
icebp
lahf
and
cpuid
rcl
xchg
cs
addr16
add
mov
mov
jecxz
cmp
(bad)
out
jne
jp
sbb
or
mov
and
xchg
pop
sbb
imul
and
cmp
sub
aaa
jle
(bad)
call
pop
fidiv
add
setle
mov
dec
das
cmp
call
fbld
and
scas
scas
nop
out
in
adc
loop
dec
adc
xchg
fs
xchg
jnp
not
jne
cld
out
cmp
js
stc
cli
jecxz
test
add
(bad)
xor
aam
jae
loope
adc
pushf
call
(bad)
fcmovnb
sub
jg
mov
mov
cmps
stc
mov
imul
lods
lods
(bad)
sahf
cmps
xchg
leave
pop
and
pop
adc
jp
pop
lds
dec
ret
call
sub
add
call
inc
sbb
push
mov
test
push
fsubr
in
call
xchg
out
mov
enter
les
and
sub
(bad)
pop
popf
in
test
jge
stos
xor
es
(bad)
inc
jns
add
test
ins
xchg
jnp
and
ja
jge
shl
jo
xor
lods
loop
xchg
dec
ja
scas
adc
sahf
inc
lods
movs
mov
imul
enter
daa
dec
adc
pop
push
xor
push
cmp
pop
retf
jle
shl
ja
rcl
push
add
in
pop
cmp
test
or
pop
inc
dec
shl
inc
mov
ret
iret
les
mov
call
sahf
pusha
sar
xchg
imul
in
inc
pushf
int
fcmovne
mov
mov
sti
mov
jecxz
mov
addr16
sar
bnd
data16
or
mov
jp
hlt
repz
test
dec
xor
xor
cmp
int3
mov
sbb
push
xchg
cdq
(bad)
or
mov
ss
push
out
das
enter
(bad)
sbb
xchg
mov
mov
data16
(bad)
jmp
retf
in
test
and
jg
inc
imul
or
add
xchg
xchg
mov
inc
mov
mov
sti
mov
pop
sub
jmp
arpl
mov
cdq
imul
std
cwde
outs
ja
test
(bad)
call
mov
outs
jle
cmc
rol
or
fdivr
fild
cmps
mov
or
fdivr
rcr
not
fild
(bad)
push
push
xchg
stos
mov
stos
mov
pop
and
and
sti
or
cmps
push
jbe
mov
ins
dec
dec
push
fdivrp
cmp
in
imul
je
fsub
mov
std
out
gs
(bad)
outs
loop
lods
je
inc
jbe
xchg
das
push
test
test
jmp
stos
jb
xchg
stos
mov
xor
pop
mov
jns
sti
movs
dec
push
sbb
test
push
xchg
repz
test
sub
jge
fnstenv
bound
jecxz
outs
inc
push
jae
movs
xchg
mov
fist
inc
imul
jmp
ja
push
fisub
mov
addr16
sbb
pushf
jo
and
push
cmp
fwait
jecxz
push
sub
sahf
outs
jb
xchg
(bad)
adc
mov
enter
push
sbb
movs
fldenv
sbb
pop
pop
mov
jne
inc
pop
rol
pop
(bad)
mov
mov
or
jno
mov
rcr
cld
xor
mov
xchg
iret
pushf
fdiv
clc
mov
lahf
inc
inc
outs
pushf
scas
mov
aam
sbb
stos
jg
sub
push
dec
movups
add
lods
and
jbe
xchg
add
(bad)
test
adc
daa
xchg
movs
inc
int
inc
imul
je
lods
xor
add
cmps
pop
(bad)
mov
ja
pop
aam
leave
rol
push
in
lds
pop
xor
inc
xchg
arpl
dec
scas
mov
out
sti
sti
out
fdivrp
scas
std
ror
sub
(bad)
daa
or
mov
jbe
adc
rol
push
pushf
ret
ja
int3
mov
in
xor
and
adc
cli
aad
push
sub
aaa
mov
jo
push
push
and
leave
mov
inc
cmp
sub
rcl
imul
mov
loop
cld
jbe
push
jle
(bad)
sub
cmps
or
(bad)
out
div
push
pop
sub
adc
adc
fbstp
ror
pop
push
in
xchg
xchg
stos
jmp
push
xor
mov
daa
or
mov
(bad)
(bad)
es
and
enter
sub
mov
std
mov
call
push
sub
aaa
daa
in
out
sub
(bad)
enter
jle
or
and
jns
jl
jo
jg
jge
loop
in
fist
push
inc
call
in
mov
jmp
daa
mov
cmp
mov
lds
dec
scas
mov
test
push
rcl
push
(bad)
mov
int
push
cli
repnz
add
sub
bound
(bad)
mov
or
lea
loopne
sbb
mov
jp
(bad)
(bad)
std
pop
test
mov
outs
out
cmc
mov
cli
cld
sub
jns
popa
icebp
mov
in
and
jo
pop
jg
mov
shl
fsubr
aam
mov
arpl
fdiv
jg
jg
xor
adc
fdiv
mov
sbb
out
dec
lea
add
push
mov
pop
and
mov
sub
outs
adc
mov
pop
sub
adc
push
cli
and
mov
cmp
xchg
rcl
ffree
xchg
fisub
cmp
in
test
mov
call
sbb
jg
mov
push
jns
ret
mov
je
data16
das
adc
xor
jle
xchg
stos
leave
adc
fidivr
fcom
add
(bad)
push
shl
inc
in
je
ret
jbe
cwde
mov
rcl
cwde
and
ror
fucomip
sub
mov
push
mov
imul
xchg
inc
movs
add
jo
stos
popa
daa
pop
fidivr
adc
cmp
mul
jb
sti
push
lea
jb
xor
enter
mov
nop
jnp
lea
dec
mov
aaa
jge
push
mov
in
mov
jae
dec
push
(bad)
mov
div
ds
mov
hlt
iret
cmp
in
and
push
and
sub
cdq
shl
or
gs
std
push
into
xor
icebp
mov
fwait
icebp
ss
jge
dec
jns
or
pop
mov
mov
mov
push
fcmovne
push
iret
sub
push
leave
fmul
fdivrp
adc
cmps
adc
pop
cs
sbb
pop
or
out
mov
int
sub
push
retf
or
push
and
enter
out
in
(bad)
cmp
sub
xor
(bad)
js
adc
dec
dec
and
repnz
stc
ins
aas
add
add
ds
mov
pusha
fisubr
jno
stos
mov
xlat
lock
imul
push
stos
das
xor
(bad)
gs
inc
fadd
jp
call
mov
jbe
mov
out
(bad)
nop
sub
push
sub
lea
adc
mov
add
jmp
inc
dec
jbe
cmp
fimul
fisttp
outs
aaa
gs
clc
xor
jae
fcmovnu
outs
or
mov
push
jmp
inc
popa
push
ds
jbe
dec
mov
pop
retf
sub
xor
in
jmp
(bad)
movs
push
pop
nop
and
and
mov
pop
stos
idiv
pop
mov
fs
add
das
xor
pushf
cmp
cwde
cmc
add
mov
add
adc
aad
in
pushf
jl
pop
pusha
xlat
in
add
shl
push
mov
scas
lock
mov
inc
jb
lahf
mov
fmul
pop
std
sub
mov
pop
jbe
call
xchg
mov
dec
in
popf
jno
inc
loopne
in
mov
sbb
jnp
lock
add
stos
xor
aas
adc
dec
mov
xchg
mov
jmp
sub
(bad)
std
jge
push
push
dec
data16
test
cmp
and
adc
mov
dec
leave
call
inc
xchg
mov
pop
lock
push
mov
stc
cli
pop
icebp
cs
out
sahf
(bad)
pop
xchg
ins
pop
inc
mov
push
pop
mov
mov
imul
(bad)
movs
aaa
mov
sti
xlat
push
(bad)
pushf
scas
cli
push
jno
nop
hlt
push
xchg
fwait
jecxz
jmp
push
sbb
mov
mov
imul
jle
mov
push
inc
xchg
in
adc
(bad)
arpl
xchg
aad
dec
ret
or
movs
jmp
add
mov
or
(bad)
push
in
imul
movs
mov
dec
movs
dec
aam
imul
adc
xor
mov
sub
popa
push
in
mov
out
xchg
scas
imul
or
les
ficomp
mov
or
in
das
out
inc
pop
mov
jle
push
in
movs
retf
adc
adc
adc
enter
mov
xor
inc
jecxz
(bad)
jl
clc
mov
ret
es
inc
cmp
mov
add
out
jbe
iret
stos
jns
fdivr
cmp
xor
inc
mov
sub
in
jnp
mov
call
pop
inc
pop
aad
mov
call
mov
out
add
xchg
dec
and
loop
imul
push
push
mov
xchg
add
xchg
mov
xchg
pop
xor
add
cmp
jb
aaa
je
ret
lods
ror
mov
cmp
push
stc
mul
mov
mov
mov
mov
out
sti
dec
add
rol
xor
and
jbe
out
lock
cmp
push
test
jp
add
loop
xchg
pop
push
repnz
ja
dec
int3
int3
pop
mov
repnz
inc
icebp
test
in
sbb
dec
shl
paddusw
ja
add
push
inc
or
jg
xor
add
jg
aad
psubsb
call
cmps
mov
outs
cmps
inc
scas
add
je
loop
pop
mov
or
lea
repz
repz
lods
cmps
out
fs
or
mov
jmp
mov
call
add
(bad)
pop
xor
retf
and
mov
inc
ret
dec
shl
xchg
dec
in
mov
std
loop
mov
loop
mov
sub
lahf
mov
mov
loope
repnz
outs
dec
or
mov
ret
xchg
cld
jg
fsubr
in
and
and
mov
leave
fcmovne
push
dec
inc
rcr
cwde
fnstsw
das
cmp
ja
add
lods
je
inc
dec
popf
scas
jbe
nop
or
jle
and
sbb
sbb
imul
in
or
rol
daa
leave
inc
inc
es
adc
movs
lock
cmp
xlat
sbb
(bad)
sahf
inc
repnz
cmp
xor
ins
cmp
sbb
dec
or
pop
or
addr16
outs
pop
sub
fcomp
fsubr
test
call
mov
adc
mov
ins
and
loopne
std
xor
xor
push
(bad)
mov
aas
(bad)
inc
jp
shr
mov
aam
addr16
xchg
push
mov
in
mov
sub
and
adc
mov
cli
cli
(bad)
cmp
jnp
mov
out
jmp
outs
pop
inc
in
lock
xor
ja
jno
or
sub
push
push
dec
pop
ins
jb
hlt
ss
sub
xchg
dec
mov
jae
mov
mov
mov
call
mov
xor
icebp
aam
out
stos
repnz
mov
enter
mov
int3
jae
add
xlat
lds
push
add
jmp
cs
inc
and
psrlq
add
push
test
sub
and
mov
sti
(bad)
sbb
push
call
std
pusha
or
add
fwait
stc
inc
scas
xor
daa
ss
sti
fiadd
inc
push
fadd
jecxz
fwait
push
hlt
pop
lock
lea
cmp
push
cmps
jne
mov
inc
test
mov
outs
or
fdiv
xor
lahf
mov
fisubr
jae
test
mov
arpl
add
xor
movs
and
stos
addr16
push
scas
jns
adc
addr16
and
adc
mov
retf
xchg
cli
sar
mov
jbe
mov
dec
inc
mov
nop
cmp
in
(bad)
cs
push
xchg
(bad)
xor
push
fld
sar
or
pop
mov
mov
ret
repz
ds
or
nop
aam
aaa
fldcw
jle
ins
stos
fnsave
ins
in
or
retf
scas
mov
jne
sub
fild
jbe
aad
icebp
dec
and
mov
out
icebp
sbb
into
psubq
sahf
(bad)
loope
inc
stos
jmp
lahf
push
repnz
lock
(bad)
scas
(bad)
sbb
inc
add
out
stos
loopne
(bad)
fist
mov
ja
pop
inc
cwde
test
cmp
aas
sbb
call
mov
or
lods
(bad)
out
or
jns
fldenv
popf
popf
and
jmp
(bad)
sar
ja
adc
cmp
mov
xchg
fimul
xor
cli
nop
and
adc
and
mov
cmp
adc
mov
add
and
mov
cmp
cld
add
push
jmp
fcmove
sub
in
cwde
adc
int3
mov
dec
aad
(bad)
(bad)
xchg
cwde
lea
rcl
cwde
jbe
pop
push
jbe
mov
pop
sbb
call
xor
mov
mov
icebp
or
xchg
int3
repz
xor
test
ss
jae
sub
ja
push
rep
lods
lods
xor
sbb
das
retf
mov
push
push
fdivr
dec
mov
std
add
mul
inc
jmp
and
sub
movs
cmp
ins
arpl
js
push
push
pop
push
mov
xchg
test
cmp
fstp
sbb
out
cli
int3
mov
cli
lahf
jp
imul
int
cmp
test
(bad)
pop
xchg
xchg
lahf
nop
dec
(bad)
fwait
stos
add
setnp
sub
cmp
mul
jl
ins
ins
popa
(bad)
adc
push
adc
fdivrp
mov
inc
mov
and
lahf
dec
movs
jl
mov
jno
push
int
push
pop
sub
xchg
icebp
icebp
rol
addr16
and
push
sub
ins
cmp
mov
out
hlt
adc
xor
bswap
sbb
xchg
lahf
bound
in
test
iret
loopne
in
push
and
sub
jmp
addr16
jbe
fld
retf
push
xchg
test
aad
sbb
jmp
sub
push
out
dec
lods
jp
scas
push
jle
aaa
arpl
cs
cmp
imul
shl
cmps
xchg
in
push
jg
cmps
in
xor
xchg
pop
arpl
call
and
inc
(bad)
sub
push
movs
fprem1
sub
mov
mov
call
adc
pop
popa
xor
dec
out
jo
sahf
sub
lsl
xchg
cmp
sub
dec
xchg
nop
cs
or
or
and
push
daa
adc
ror
in
dec
inc
or
cmp
sub
pop
xor
cmps
and
pop
dec
retf
xchg
pop
and
int
sar
push
jl
jmp
xor
dec
cmps
jns
cmp
inc
cmp
mov
cmp
mov
lahf
out
ror
mov
test
outs
sbb
mov
ret
mov
or
out
or
out
inc
inc
pop
jo
cmc
or
or
mov
clc
and
repnz
cmp
push
ror
add
jle
stc
sar
dec
push
mov
dec
cmp
inc
(bad)
int3
out
adc
pop
movs
das
mov
xchg
jae
dec
nop
jo
sub
cli
test
jno
std
xor
mov
adc
not
pop
aaa
mov
(bad)
call
ja
shl
rol
push
sub
sub
pushf
ret
sub
sub
add
push
sub
mov
and
cmc
fild
ja
adc
and
sahf
mov
outs
mov
fs
arpl
fnstcw
and
xor
in
inc
shl
nop
popa
out
xchg
cmc
sub
cmp
scas
mov
cmc
mov
mov
sub
mov
jne
dec
ror
cmc
xchg
sub
add
or
xchg
add
lods
stc
cs
pusha
xchg
and
adc
adc
ss
adc
leave
xchg
test
sahf
mov
sbb
mov
dec
pop
xchg
addr16
mov
ins
fdiv
dec
inc
mov
and
stos
xor
jns
out
push
cmps
mov
test
push
aas
mov
adc
xchg
mov
mov
imul
add
lods
es
rcr
pop
xchg
leave
fstp
pop
cli
mov
cmp
sbb
pop
mov
and
shl
mov
pusha
mov
inc
push
shl
test
pop
js
mov
pop
push
sar
xchg
jp
mov
push
gs
jl
cmp
mov
mov
mov
mov
retf
xchg
loop
es
push
xor
adc
int3
pop
loope
push
ror
mov
sub
dec
ret
std
stc
inc
or
ins
xor
jecxz
lods
out
ror
out
lods
xor
(bad)
ss
pusha
fbld
(bad)
jmp
outs
sub
(bad)
out
rcr
pop
das
add
bnd
cmp
les
pop
push
rol
adc
sbb
jno
mul
retf
ficom
or
loop
mov
in
jne
std
add
sbb
xor
dec
mov
fst
mov
lods
jl
iret
or
pushf
(bad)
out
adc
dec
fidivr
data16
std
pop
sub
jnp
dec
or
sbb
cmp
mov
push
push
push
push
pop
test
test
inc
adc
clc
jo
jecxz
scas
mov
cmp
lahf
mov
mov
mov
rcl
ficomp
push
inc
sbb
pop
cwde
xor
dec
scas
push
jb
(bad)
ror
push
push
mov
sbb
xor
pusha
pop
fwait
pop
fnstcw
xchg
pusha
int
in
adc
or
neg
jo
inc
xchg
retf
xchg
pop
or
lock
push
jb
cmp
sbb
enter
pushf
or
rcl
jmp
test
sbb
inc
push
sbb
loope
pop
(bad)
cmp
sub
lods
imul
cld
xor
imul
int3
rcr
pop
xchg
pop
jbe
retf
or
in
call
cmp
(bad)
jmp
mov
sti
out
mov
sbb
pop
icebp
push
or
call
(bad)
mov
sbb
push
xchg
sbb
xchg
je
cmps
int
das
aas
test
dec
xor
lahf
mov
ins
xor
sbb
iret
jb
cmovno
leave
mov
mov
lds
aad
xchg
ds
inc
ret
jne
xchg
dec
sub
daa
arpl
mov
push
sar
js
inc
in
hlt
sahf
jl
push
mov
out
add
movs
sub
lea
f2xm1
int
test
mov
shr
sahf
mov
jno
push
push
fsub
aaa
cmp
pop
and
push
jp
dec
and
imul
cs
sahf
gs
dec
mov
stos
xor
mov
js
hlt
scas
iret
add
cmp
push
inc
aad
jl
sub
pop
and
xchg
retf
and
and
outs
sbb
ss
fistp
and
pop
pushf
xchg
jo
in
push
mov
lock
add
or
nop
inc
fcmovnu
mov
stc
lods
cmps
pop
(bad)
ss
inc
shl
(bad)
lea
sbb
fdiv
push
cmp
add
cs
shl
lock
and
cdq
sbb
push
sti
ins
ss
sub
shl
fwait
pop
push
xor
jl
push
sbb
or
adc
jle
(bad)
mov
fbstp
cmps
push
xor
pop
movs
test
call
xchg
fist
mov
adc
xchg
ja
scas
mov
jnp
lock
or
pop
mov
fstp
pop
out
pop
ret
add
jge
loop
or
add
popa
lock
push
(bad)
into
mov
add
mov
mov
outs
cmps
sub
xchg
sahf
lock
dec
clc
lahf
(bad)
mov
pop
lods
sti
(bad)
fimul
pushf
inc
es
sahf
jge
add
lahf
pop
dec
repnz
cmps
mov
jge
sar
sub
xchg
push
jnp
add
hlt
jnp
popf
add
pop
out
dec
loope
adc
and
cmp
mov
sbb
mov
sbb
addr16
ret
pop
or
inc
and
ins
loope
test
add
add
or
out
gs
push
retf
in
shl
cmp
les
aas
(bad)
jle
xor
adc
sub
cmps
movs
das
sbb
cwde
push
jl
ds
iret
and
cli
mov
push
lahf
(bad)
in
adc
cmp
bound
in
xchg
test
jle
or
sti
cmp
fimul
jmp
pusha
retf
push
pop
cwde
push
jmp
lods
or
ds
je
ficom
cwde
int
mov
adc
(bad)
add
push
inc
cmp
out
or
cmp
cmps
xchg
dec
push
ins
scas
test
and
sbb
cmp
mov
sub
cdq
mov
xlat
repnz
dec
adc
dec
cld
adc
push
fild
mov
scas
mov
sbb
add
mov
add
loop
retf
sub
pop
mov
sub
pop
cwde
add
scas
or
mov
sti
mov
pop
scas
xchg
mov
inc
xchg
sub
or
mov
adc
cld
sub
in
aad
xchg
mov
mov
push
and
cld
in
stc
stos
(bad)
xchg
sar
loopne
data16
fdivr
in
enter
cli
test
fimul
mov
loopne
cwde
pop
add
fsubrp
lea
inc
pop
jbe
mov
cld
inc
jnp
jmp
jno
add
xor
and
ficomp
jne
sub
cwde
and
dec
lds
movs
adc
mov
dec
mov
cmps
retf
dec
fnstcw
pop
hlt
push
shr
mov
imul
xchg
les
scas
ret
(bad)
rcr
loope
loopne
mov
xchg
repnz
pusha
mov
inc
mov
sbb
pop
sar
movs
lods
push
pop
sub
push
mov
jmp
xor
pop
test
cmp
clc
sub
and
and
push
and
xor
mul
xchg
xor
jbe
inc
pop
sub
ins
pop
and
mov
aad
cwde
jo
push
fwait
inc
jb
mov
jb
cdq
outs
or
shr
mov
xchg
jecxz
cmp
xor
add
sub
add
or
and
test
fist
xlat
xchg
mov
repnz
fisub
push
dec
movs
pop
and
mov
sbb
adc
or
rcl
das
adc
adc
xor
xchg
adc
stc
jp
mov
and
xchg
dec
jno
xor
mov
mov
les
enter
mov
retf
ins
push
repnz
sbb
aad
and
retf
or
and
daa
adc
or
repnz
adc
test
mov
sbb
add
jbe
mov
sub
push
and
pop
add
cmp
je
pusha
fadd
jae
popf
adc
cmps
pop
daa
imul
and
iret
xlat
or
mov
xchg
push
iret
or
inc
dec
jbe
test
fldcw
xchg
xchg
mov
in
inc
aas
popa
(bad)
(bad)
lods
(bad)
pop
jg
les
mov
out
(bad)
cmp
jbe
pop
add
bound
mov
cmp
mov
call
pop
(bad)
xchg
out
push
clc
push
pop
outs
sub
scas
inc
sbb
mov
clc
out
mov
icebp
jo
mov
inc
clc
jns
sahf
mov
inc
pop
popf
pop
pop
dec
push
pop
jno
lea
cdq
lahf
mov
mov
push
adc
bound
fimul
test
adc
(bad)
pop
stos
pop
mov
int3
push
mov
adc
pop
stos
gs
cmp
les
dec
(bad)
mov
xor
(bad)
pop
arpl
rcr
(bad)
repz
int
cmp
out
jge
shl
inc
loope
cmps
fistp
repz
fld
mov
jbe
inc
idiv
loop
xchg
iret
sub
lods
sbb
mov
push
mov
mov
sub
add
ja
call
add
inc
(bad)
sub
adc
addr16
iret
mov
bound
adc
pop
mov
sub
dec
movs
stos
ror
pop
repnz
sub
clc
add
jge
mov
jb
mov
daa
lds
dec
sub
inc
rol
xlat
jl
lds
jae
pop
adc
pop
stos
test
push
out
leave
pushf
push
cmp
sub
add
mov
xor
stos
mov
add
dec
jno
movs
popf
cdq
loope
or
pop
fist
jae
data16
mov
push
mov
inc
pop
sub
push
cmp
sub
mov
xor
jmp
cli
inc
xchg
aaa
inc
sbb
sub
dec
aas
call
cmp
mov
and
pusha
mov
dec
add
movs
test
outs
popf
test
jno
jmp
xchg
ret
and
sub
loope
mov
scas
call
ins
jecxz
pop
(bad)
outs
add
xchg
loopne
pusha
pop
sbb
cmp
xchg
retf
inc
popa
dec
cli
ja
enter
rcl
and
cwde
pop
data16
scas
mov
cld
jg
sub
push
ins
add
iret
jb
pop
popf
jno
add
jmp
xor
sar
add
dec
mov
test
cs
fld
jb
mov
out
in
and
jp
adc
or
cmps
and
push
mov
iret
stc
outs
mov
cmp
mov
fwait
pop
jbe
jb
fs
enter
ror
(bad)
pop
hlt
bound
add
or
test
cmp
inc
test
ins
shl
mov
mov
xor
ds
lds
(bad)
(bad)
out
mov
loope
dec
les
adc
push
fs
xchg
das
ret
test
icebp
lea
dec
rol
adc
inc
enter
rcl
stos
lds
lahf
pushf
cmp
lahf
xor
dec
add
cmp
rcl
gs
stc
sub
mov
and
inc
call
dec
mov
cmps
xchg
outs
push
imul
imul
xor
out
mov
rol
jb
call
pusha
test
clc
push
mov
xchg
cmp
jmp
dec
fxtract
outs
add
push
dec
pusha
mov
fdiv
mov
or
mov
or
mov
pop
dec
xchg
clc
dec
lods
in
pushf
fmul
popa
mov
pop
jmp
pop
and
mov
jne
mov
fwait
mov
rcl
(bad)
xor
outs
inc
out
std
mov
push
pop
sub
ror
xchg
lods
imul
fucomip
icebp
mov
inc
xchg
or
push
aaa
sub
aam
xor
je
add
enter
daa
lahf
jne
popa
shl
or
jp
sub
pop
jle
dec
or
mov
retf
cmp
jg
fist
sub
inc
push
xchg
mov
add
xchg
mov
cmp
jno
aad
pusha
sub
arpl
icebp
xor
push
sub
cmps
mov
jl
mov
jg
daa
xor
mov
test
pop
sbb
test
inc
cmp
jl
into
nop
cmp
out
push
test
iret
jae
inc
out
jecxz
jecxz
out
(bad)
dec
push
or
xor
call
mov
out
push
fwait
loop
lahf
jp
neg
inc
mov
das
pop
in
jp
xchg
sbb
gs
sbb
lods
shr
add
leave
mov
inc
js
cmp
pop
push
and
push
add
lods
and
addr16
sbb
inc
xor
pop
aam
es
and
retf
fsubr
jnp
sbb
push
out
ret
cld
pop
xchg
leave
and
dec
adc
or
dec
mov
rcr
ins
jl
mov
movs
pushf
je
cdq
movs
cld
psubd
je
cmp
fild
dec
xor
pop
fwait
(bad)
mov
aad
mov
cmp
xchg
hlt
hlt
popf
xor
rol
cmc
(bad)
cli
pusha
loop
jp
jl
mov
xchg
mov
fidiv
mov
aam
add
(bad)
scas
fcom
lea
call
sbb
jl
out
jne
loope
mov
mov
ja
add
je
iret
mov
and
adc
les
jle
ja
ret
bound
mov
pop
ins
pop
sub
xchg
test
and
out
fwait
add
dec
inc
and
aam
js
mov
bound
and
(bad)
sbb
xor
jmp
scas
std
or
(bad)
jmp
jecxz
sub
xchg
fs
call
lock
pop
mov
movs
mov
cs
lods
fadd
sbb
cmp
jg
xor
ss
std
mov
arpl
js
jns
(bad)
cmp
in
sbb
into
les
push
sbb
int3
mov
and
jo
gs
out
gs
inc
ret
popa
jns
pop
mov
mov
scas
scas
fnsave
inc
outs
popa
sbb
popf
sti
bound
outs
or
push
and
and
push
inc
pushf
jmp
out
and
cwde
sbb
arpl
add
push
or
clc
push
aam
outs
push
repnz
(bad)
(bad)
test
jnp
xchg
sub
cmp
jecxz
xor
test
mov
cmp
into
(bad)
lea
pushf
inc
sbb
ret
inc
cwde
inc
adc
jg
pop
outs
sub
xchg
test
lods
mov
fwait
add
or
lea
cmps
jmp
and
addr16
idiv
adc
loopne
test
out
movs
add
and
fs
fld
xchg
loope
or
leave
out
sub
add
add
dec
mov
jne
cmp
loope
jbe
add
sahf
and
cld
imul
js
daa
mov
aaa
or
(bad)
ffreep
dec
retf
xor
cmp
xchg
aaa
dec
enter
pusha
outs
add
sar
jl
adc
inc
mov
in
ds
pusha
push
std
cwde
ja
cs
or
(bad)
aad
rcl
std
lock
xor
lahf
add
sbb
js
sbb
add
ins
push
sub
mov
fistp
(bad)
mov
sub
sbb
nop
repz
(bad)
xchg
add
not
imul
or
iret
icebp
pop
sbb
aaa
xchg
push
ror
dec
and
sti
(bad)
jg
adc
cmc
and
retf
xchg
and
xchg
mov
mov
rol
(bad)
push
leave
ret
movs
mov
inc
sbb
xchg
je
popa
mov
std
(bad)
mov
in
gs
pop
cld
ret
pop
dec
not
and
adc
rol
xchg
sub
xor
jecxz
mov
mov
addr16
inc
xchg
add
cmps
leave
mov
loop
or
out
inc
adc
dec
es
rol
sbb
xchg
out
out
loop
fwait
xor
push
xchg
push
sbb
or
mov
icebp
xchg
xchg
jmp
mov
pop
pop
and
mov
cmc
xchg
or
cdq
jne
cmp
mov
push
cdq
(bad)
pop
addr16
jne
mov
xchg
adc
pop
xchg
loop
push
aas
mov
fstp
inc
cld
xlat
push
mov
stos
xor
ret
in
cli
push
fnsave
push
test
in
hlt
pop
fdiv
mov
mov
cli
xchg
adc
jo
xchg
xor
call
dec
mov
dec
adc
cli
out
pushf
mov
sub
(bad)
test
fisttp
ror
mov
inc
xor
cmp
mov
int
sbb
gs
lods
and
mov
dec
xchg
dec
loopne
test
xor
mov
loope
pusha
push
out
loopne
stos
adc
out
inc
or
rol
mov
bound
shr
imul
jmp
pop
jecxz
mov
shl
mov
pop
aaa
adc
adc
jae
and
xchg
push
repnz
in
int
out
mov
adc
sub
inc
das
mov
je
inc
repz
add
mov
lahf
push
sbb
jg
jne
(bad)
stc
jnp
xor
pop
jo
add
outs
sub
not
inc
mov
jg
adc
xor
push
sub
mul
stos
mov
add
popf
retf
cmp
and
mov
lds
dec
inc
repz
call
add
in
xchg
aam
shl
out
out
jmp
sbb
cld
and
pop
stc
adc
and
mov
pop
push
imul
fucomi
sbb
aas
mov
and
sbb
mov
and
repnz
in
cmp
cmc
ret
add
jge
dec
xor
sti
shl
jp
div
popa
sub
mov
loopne
dec
push
pop
pusha
jbe
clc
test
sbb
(bad)
xor
push
jg
or
gs
lods
sub
mov
jns
sub
scas
inc
and
push
movq
cmp
retf
dec
jge
add
arpl
jg
(bad)
pop
mov
idiv
jnp
add
int
ret
es
inc
ins
imul
jg
cmp
ret
xor
ins
sub
jmp
into
xchg
aad
minps
mov
mov
and
ret
inc
pop
mov
loop
mov
adc
add
dec
int3
push
cmp
jl
adc
add
inc
ja
adc
popa
ret
sti
movs
sub
and
or
and
xchg
and
jae
and
xor
push
mov
enter
dec
inc
fadd
pop
adc
adc
push
mov
pop
xchg
sti
and
sub
jb
rol
rol
call
daa
xchg
mov
push
mov
outs
iret
pop
fadd
pop
inc
inc
jp
iret
hlt
cmp
stc
lods
clc
stc
lds
sub
ins
loope
loop
push
push
cmp
mov
data16
js
rcl
add
xchg
arpl
inc
sbb
int
lahf
xchg
push
lods
jb
jne
mov
cmps
mov
ret
mov
mov
fldcw
mov
xor
push
mov
gs
pusha
lods
and
inc
jge
adc
movs
xchg
popf
stc
loop
pop
dec
or
fnstsw
push
mov
shr
jp
jl
add
ret
lock
xchg
(bad)
stc
aas
dec
int3
or
adc
xor
jnp
hlt
pusha
(bad)
mov
inc
mov
bound
ror
loopne
(bad)
mov
pop
(bad)
dec
sub
mov
jmp
(bad)
cmps
sbb
sbb
cwde
shl
mov
inc
mov
mov
into
cmp
pop
shl
lock
mov
jb
push
sub
test
and
cmp
out
setb
add
mov
jl
iret
jge
dec
add
cld
xchg
rcr
ins
push
fsub
add
adc
adc
fcom
fdivr
sub
test
inc
jno
xchg
add
sub
adc
xchg
repz
or
push
push
(bad)
repz
xor
xchg
mov
jmp
mov
hlt
mov
int3
and
mov
mov
push
aad
ins
jp
add
retf
ret
dec
rcr
xor
pop
dec
mov
popf
je
xchg
clc
inc
inc
or
or
(bad)
sub
mov
or
in
sub
jne
jo
pop
js
outs
mov
mov
pop
stos
push
imul
xor
imul
outs
sub
pop
push
mov
test
push
stos
in
cld
sub
outs
outs
fcomp
pop
push
ins
sub
sub
jmp
sbb
sti
sub
adc
popa
or
sub
retf
dec
dec
imul
cwde
push
data16
xchg
dec
jne
cs
or
cmp
enter
xchg
lea
mov
loopne
mov
fld
iret
movs
inc
mov
movs
out
cmp
call
cld
xchg
(bad)
push
mul
imul
jg
cmp
cdq
pop
shr
sti
out
ret
(bad)
popa
jnp
xor
push
mov
outs
sbb
mov
pop
pop
fnstcw
jnp
mov
jecxz
inc
into
loop
jge
dec
jns
jp
cs
sbb
(bad)
popa
addr16
mov
jmp
adc
das
call
pop
je
std
xor
sub
cwde
leave
add
xchg
arpl
repz
push
nop
(bad)
addr16
icebp
(bad)
fidivr
mov
cmp
sti
mov
jne
xchg
mov
test
lods
dec
hlt
pop
inc
pop
mov
cwde
pop
sbb
(bad)
cmp
jo
sbb
lds
inc
cmps
imul
repz
inc
mov
daa
inc
rcl
inc
inc
call
fst
stc
pop
push
xchg
mov
imul
and
fst
test
push
mov
adc
ret
pop
jae
cmp
es
xchg
or
pop
paddsw
add
aad
ret
mov
addr16
cli
inc
xchg
movs
pop
dec
or
inc
xchg
jbe
cdq
ret
sbb
fs
mov
fisttp
ds
mov
jo
sbb
add
mov
xor
fwait
arpl
lds
jp
jl
adc
(bad)
imul
mov
mov
adc
popa
sub
mov
inc
add
push
push
movs
imul
pop
xchg
sbb
add
fld
or
enter
jo
sti
add
jae
add
cmp
lds
add
mov
in
cmps
out
inc
scas
fucomip
pop
sub
adc
fild
(bad)
data16
push
jle
adc
xor
test
mov
dec
clc
in
cmp
dec
cmp
repz
test
mov
fs
fcmovb
sbb
aas
mov
push
add
iret
clc
test
add
push
cmp
and
scas
mov
ror
mov
inc
(bad)
cmp
ss
iret
neg
mov
js
aas
mov
push
mov
je
imul
rol
cwde
fprem
cwde
test
dec
sbb
mov
sub
or
sar
push
push
stos
cvtps2pd
sahf
std
sbb
mov
hlt
dec
ins
inc
lahf
call
les
nop
out
std
cmp
adc
test
sub
lds
(bad)
out
(bad)
(bad)
hlt
(bad)
mov
sub
les
sbb
add
stos
and
add
pop
jge
mov
or
mov
pop
addr16
int
inc
sub
lds
or
popf
or
jge
test
and
movs
(bad)
leave
or
adc
xor
inc
adc
dec
inc
mov
aas
iret
add
cmp
sub
ffree
std
(bad)
jl
das
repnz
xchg
and
stos
das
mov
movs
sub
aad
xor
adc
dec
adc
and
jno
jge
int
or
sbb
lahf
mov
jbe
rol
mov
cwde
fwait
and
ret
fmul
sub
xor
ret
mov
push
dec
fcomp
aad
mov
add
jg
xor
add
push
inc
inc
push
inc
dec
add
pushf
add
push
jns
mov
repz
ds
call
das
mov
and
add
ins
outs
ret
bound
inc
aas
xor
xor
xchg
and
cmp
mov
loopne
mov
mov
cmp
vprotd
xlat
idiv
mov
clc
mov
xchg
mov
mov
mov
stos
popa
out
inc
dec
addr16
(bad)
ret
dec
push
test
mov
dec
mov
mov
push
xchg
es
push
jbe
mov
push
loop
lock
pop
sbb
stc
ret
sub
xor
cmp
ja
xchg
mov
imul
push
fst
xchg
jbe
dec
pusha
aam
mov
shl
(bad)
out
mov
fstp
int3
mov
mov
in
or
sbb
mov
scas
push
mov
cli
iret
cmps
out
mov
adc
dec
sub
in
cld
pushf
xchg
adc
inc
sbb
mov
call
push
add
mov
vmovntps
(bad)
or
pusha
or
pop
jmp
mov
mov
fist
lds
test
jp
ins
adc
sbb
test
fst
adc
push
push
les
sar
dec
push
lods
pushf
sti
pop
add
pop
fst
leave
retf
mov
leave
mov
add
fistp
aaa
cmps
out
loop
xchg
leave
iret
(bad)
(bad)
sar
mov
sbb
repz
sbb
dec
cli
fs
cs
mov
imul
jnp
aad
jl
jno
jge
shl
pop
mov
shl
hlt
jge
adc
mov
dec
inc
mov
ret
cmp
popa
aaa
ja
xlat
cmp
pop
xchg
inc
dec
or
push
out
fstp
sbb
cmp
test
retf
aad
ins
cld
mov
inc
xchg
jmp
fsub
inc
pop
or
fisubr
jecxz
push
mov
cmc
adc
inc
adc
pusha
cmps
mov
dec
cmp
arpl
or
stos
jae
inc
jbe
add
aad
sub
adc
xchg
jo
sub
xor
movs
pop
je
dec
(bad)
aam
or
mov
das
and
push
ss
pusha
in
leave
and
(bad)
inc
or
sub
or
mov
out
loop
lock
or
jmp
std
add
push
in
into
stc
mov
and
nop
xchg
sbb
in
aas
mov
fstp
inc
nop
adc
sub
jp
in
pop
lods
(bad)
xlat
or
test
cmp
jae
sub
mov
(bad)
mov
daa
dec
inc
cmp
gs
ret
loope
mov
cmp
adc
mov
pop
mov
jecxz
repz
dec
fsub
(bad)
sbb
mov
sbb
das
xlat
xor
and
stos
dec
into
jae
leave
pusha
xor
pop
or
jmp
push
lds
and
xor
scas
nop
mov
ss
jb
mov
xor
cmp
xchg
setle
sub
pop
mov
inc
jb
jmp
sti
mov
inc
dec
popa
dec
int3
add
jbe
adc
aad
xchg
xchg
add
cmc
xor
mov
jno
jb
ret
jbe
retf
mov
outs
sub
scas
pop
adc
popa
or
gs
jge
xor
push
aad
and
les
push
inc
dec
ror
xor
ror
sbb
pop
bnd
(bad)
jg
stc
add
mov
xchg
out
mov
lods
push
and
je
xchg
sbb
mov
mov
jno
cmps
dec
lds
in
ja
fwait
jl
ret
and
loop
mov
push
jecxz
push
int3
fiadd
adc
jg
add
ret
(bad)
test
out
push
mov
das
retf
push
jnp
xchg
fcom
xlat
pop
dec
fiadd
xchg
lds
pop
jmp
push
dec
xchg
push
jae
push
inc
adc
cmps
(bad)
pop
xor
(bad)
push
sbb
lods
jmp
and
jg
out
mov
sub
push
ja
popa
jbe
inc
push
ret
jb
lea
clc
xor
and
pop
add
std
jns
fist
inc
arpl
sbb
adc
add
sbb
push
lds
retf
arpl
cdq
inc
mov
and
das
push
sti
jbe
call
test
sahf
test
cmps
mov
ds
ja
data16
inc
pop
repnz
test
xor
in
mov
imul
cs
lds
sub
loopne
outs
adc
and
xor
inc
add
push
push
imul
mov
jl
data16
test
cmps
rol
lea
imul
xor
icebp
adc
(bad)
and
mov
jbe
dec
cmp
callw
ss
mov
sub
js
jg
or
cmp
arpl
cwde
(bad)
cmp
push
mov
push
add
out
das
sbb
push
std
xor
into
rcr
outs
sub
push
movaps
mov
push
adc
sbb
xor
sahf
mov
cmp
rcl
pop
xchg
pop
mov
loop
push
adc
adc
and
push
pop
hlt
cdq
scas
and
mov
cmc
mov
or
stos
mov
inc
push
mov
adc
dec
jno
into
mov
addr16
ja
lock
rcl
sahf
or
int
in
sbb
ds
out
stos
es
sub
iret
ja
ja
or
or
adc
icebp
sub
jge
stos
shr
xlat
pop
imul
adc
or
pop
mov
aas
xor
mov
in
push
jo
(bad)
loope
jmp
cmp
sahf
mov
push
dec
out
rcr
cmp
cdq
jnp
pop
add
mov
jbe
cs
mov
(bad)
mov
push
aam
inc
retf
xor
ins
bound
mov
add
add
mov
and
dec
call
aas
mov
jbe
fst
push
and
push
mov
xor
xchg
rcr
jl
xchg
inc
data16
pop
out
jmp
push
cmps
pop
mov
add
ins
addr16
jno
adc
sbb
es
aas
add
sub
dec
mov
pop
mov
pusha
jno
(bad)
pop
mov
addr16
test
shl
fisubr
adc
mov
movs
and
cwde
lea
fs
mov
movs
out
or
cmp
xchg
jmp
out
and
aaa
and
lar
mov
mov
nop
call
xchg
mov
xor
inc
into
inc
ret
in
jge
popf
cmp
xchg
lea
arpl
dec
push
retf
test
and
pop
pusha
push
cmps
mov
es
popf
jbe
(bad)
seto
fld
outs
hlt
(bad)
repz
mov
clc
push
add
mov
mov
push
xor
aaa
pop
int
jnp
pop
rol
cmp
repnz
leave
or
stos
or
mov
inc
jmp
cmp
lea
fild
mov
dec
push
into
fwait
lea
jl
and
mov
dec
inc
jmp
iret
add
sbb
jmp
and
sbb
add
xor
push
jnp
sub
dec
test
ja
adc
xchg
popa
cmp
xlat
mov
cmp
out
out
add
xchg
out
mov
mov
mov
dec
mul
movs
xchg
movs
pop
iret
mov
popf
fucomi
(bad)
arpl
gs
and
pop
mov
push
or
les
push
std
cmp
vpaddsb
sub
cmps
xlat
add
ret
shl
push
xor
repz
loop
pmullw
pusha
test
lea
xchg
or
and
mov
cmp
lahf
jmp
in
sahf
lods
cld
mov
or
cmp
xchg
xchg
repnz
adc
xchg
arpl
repnz
mov
rol
add
out
push
xlat
ja
out
add
in
into
push
pop
mov
inc
jo
imul
mov
js
pushf
jmp
call
les
pop
mov
les
dec
and
das
pop
mov
fdivr
mov
xchg
push
lea
inc
cli
ja
mov
adc
adc
mov
mov
(bad)
fsubr
pop
fldcw
pop
cdq
not
je
fsubr
xchg
ins
pusha
setne
mov
cli
sub
ret
shr
mov
sbb
pop
push
in
mov
pop
jge
cmc
seta
repnz
imul
stc
push
jnp
out
adc
scas
fild
or
enter
les
inc
pop
iret
push
sub
pusha
pop
aad
ds
scas
xchg
and
out
mov
add
add
sub
jl
movups
lea
rol
push
outs
push
aad
inc
xor
jp
jb
jne
dec
pop
test
stos
sbb
mov
sahf
shl
push
sub
adc
loope
xchg
stc
cmp
dec
je
(bad)
sbb
mov
add
imul
lea
lods
cmp
rol
das
mov
jb
dec
jne
jg
out
push
aad
cdq
cmp
push
cmp
movs
inc
sti
fcom
iret
mov
scas
cmp
rcl
test
jmp
data16
mov
pop
je
aam
test
mov
ja
xor
adc
sti
xor
xor
sahf
mov
aam
(bad)
(bad)
mov
sbb
aam
jl
test
mov
mov
xchg
inc
sar
jb
pop
xchg
in
mov
jecxz
je
imul
jne
call
xchg
xor
hlt
sbb
aaa
retf
mov
fisttp
add
push
jmp
cmc
dec
mov
cmp
outs
and
std
sub
dec
mov
int
hlt
outs
jbe
push
div
adc
jg
(bad)
push
loope
ja
in
enter
jge
test
pop
cdq
jno
in
nop
adc
rcl
push
in
jno
out
fwait
jp
or
inc
xor
icebp
cmp
jge
adc
clc
cld
mov
pop
movs
inc
cmps
pop
and
in
idiv
mov
xchg
int3
sub
mov
fsub
cwde
sbb
pop
jnp
les
mov
or
leave
and
cwde
and
dec
sahf
ds
and
in
xchg
jg
mov
ja
ss
fist
popf
add
retf
mov
into
out
mov
cmp
fisttp
bound
mov
dec
cld
stos
dec
fwait
add
mov
adc
cli
cmp
int
jbe
push
jmp
sub
bound
mov
rcr
mov
xchg
in
cld
push
loope
addr16
mov
adc
sub
pop
jl
mov
xchg
ret
stc
div
add
clc
sbb
xor
jg
mov
outs
outs
int
jp
adc
pop
stc
xor
lods
or
and
push
or
inc
jne
cli
mov
xchg
xor
ret
cdq
pop
add
mov
inc
mov
mov
push
inc
xchg
fstp
pop
xor
retf
jecxz
(bad)
xor
adc
fwait
mov
sbb
pop
imul
adc
retf
mov
pop
lds
lods
jno
xchg
adc
outs
shr
jmp
pop
jbe
cwde
and
mov
xchg
mov
jge
js
pop
jl
xor
nop
(bad)
hlt
fs
in
pop
les
push
into
sbb
xor
das
out
sar
sub
push
lock
inc
(bad)
jbe
jmp
adc
fldenv
(bad)
lods
cli
xchg
xchg
push
mov
adc
fidivr
and
ret
arpl
inc
icebp
jbe
test
lds
lock
jns
jo
jl
push
mov
mov
dec
mov
call
fninit
or
and
inc
or
hlt
mov
add
stmxcsr
push
ds
je
ins
inc
and
cmp
push
sbb
outs
adc
outs
add
adc
jle
push
arpl
adc
mov
push
pop
xor
dec
repnz
mov
sbb
cmps
adc
lock
pop
inc
adc
sub
cld
mov
inc
xchg
jb
adc
jae
mov
bnd
aad
sbb
jmp
mov
std
or
dec
xlat
mov
dec
pop
add
mov
(bad)
lods
xchg
fwait
cmp
jmp
xchg
jl
cmp
leave
push
pop
jl
fcom
and
jnp
test
int
and
sbb
fxch
lea
hlt
xor
aad
test
scas
add
(bad)
jmp
push
inc
movs
or
pop
push
mov
in
jne
int
cli
les
inc
add
not
rol
arpl
sbb
mov
sti
sar
mov
inc
jmp
jmp
xchg
lock
out
mov
fmul
cmp
cmp
shl
fld
out
cmp
stos
jecxz
sub
dec
movs
ins
jl
ins
ins
cmp
jbe
neg
mov
fdiv
fwait
imul
mov
shr
mov
cmp
outs
repnz
fstp
clc
xor
pusha
cs
es
sbb
dec
push
ret
fisttp
(bad)
mov
sar
iret
mov
jle
sub
pop
push
std
adc
les
icebp
rcr
stc
inc
cmp
popa
sbb
inc
sub
enter
scas
std
test
xor
sbb
jge
push
div
loope
popf
test
out
into
adc
and
jno
mov
push
cmps
jmp
imul
out
call
sbb
shr
sub
(bad)
vmulps
sbb
add
aaa
data16
adc
in
sub
retf
(bad)
stos
mov
fsub
stos
add
loope
nop
aam
push
mov
int
sahf
push
std
sar
xchg
bound
cdq
mov
mov
(bad)
repnz
sub
pop
or
pop
pop
dec
mov
in
mov
xor
mov
push
mov
cmp
repz
inc
push
in
and
mov
pop
jle
mov
fidivr
dec
imul
jle
(bad)
mov
aad
test
leave
js
bound
dec
jnp
add
test
out
pop
dec
dec
bound
(bad)
add
stc
mov
push
enter
inc
fcomp
movs
pop
and
mov
movs
in
ror
sbb
fidivr
es
or
aas
or
sub
xchg
sbb
div
data16
dec
fmul
mov
cmps
lock
(bad)
out
adc
ret
ins
das
pop
xchg
mov
sahf
scas
jb
mov
es
stos
or
mov
rol
inc
mov
sub
int
xchg
and
imul
bound
enter
lahf
push
push
outs
fisttp
jno
scas
dec
fwait
pushf
pop
sti
jmp
add
hlt
imul
fadd
mov
add
and
(bad)
loope
inc
mov
jmp
and
inc
out
js
adc
sub
cli
jo
call
aaa
push
xor
jg
fucomp
cmps
lahf
je
pop
mov
xlat
sub
js
dec
fisub
inc
mov
std
pusha
sar
repz
mov
sahf
aaa
jl
in
sbb
push
(bad)
mov
aam
fisttp
nop
pusha
daa
jne
int3
jp
or
mov
(bad)
add
mov
lea
pop
xlat
scas
fld
dec
into
inc
and
setl
push
sub
mov
pop
sub
das
sar
push
dec
rol
outs
neg
fldenv
cmp
retf
leave
jmp
mov
loope
sub
cli
ror
imul
outs
je
inc
fsub
inc
xchg
or
je
xor
es
xchg
and
bound
daa
mov
call
mov
and
pop
dec
or
push
or
dec
sti
sbb
jmp
in
aas
call
xor
jmp
repnz
iret
add
and
retf
inc
in
repnz
arpl
or
daa
pop
jmp
adc
push
mov
cmps
mov
push
or
xor
js
test
push
les
mov
cdq
(bad)
std
push
mov
ins
jne
or
jl
nop
pop
loope
daa
push
mov
adc
jp
pop
fnstenv
mov
inc
sub
(bad)
(bad)
jno
push
ss
inc
sbb
clc
jecxz
push
in
je
pop
scas
mov
xor
mov
xchg
lock
or
test
pop
scas
or
lds
push
xchg
rol
test
out
aas
add
sbb
pop
xor
mov
call
sbb
xchg
test
jns
or
in
test
xor
cmp
lods
out
jmp
retf
dec
xor
ret
or
cmp
xchg
ins
aaa
and
loopne
lds
(bad)
sub
cmp
sub
lods
xchg
pushf
neg
add
shl
mov
cmp
ins
add
mov
fldenv
push
test
int
test
jp
mov
scas
or
arpl
out
(bad)
mov
aas
add
pop
aam
adc
ss
mov
cdq
data16
test
leave
gs
push
jge
cwde
xchg
xor
pop
or
or
retf
fisttp
pop
(bad)
sbb
add
aas
cmp
scas
shl
push
sahf
test
out
xchg
nop
js
sub
fld
(bad)
(bad)
pop
add
enter
(bad)
xchg
dec
loop
and
jbe
adc
ins
les
xchg
aad
call
pop
mov
stos
je
jb
lahf
pop
dec
call
dec
dec
dec
jle
jbe
inc
(bad)
outs
push
rcr
sbb
retf
mov
mov
push
add
or
mov
rcr
aaa
ret
in
in
lds
stos
inc
mov
repz
(bad)
imul
xor
push
fcomp
int
call
push
sbb
inc
jl
or
xchg
out
les
jl
stc
fnstsw
mov
mov
sbb
xchg
pop
fwait
out
push
clc
jle
inc
jmp
dec
lods
sub
pop
jbe
lods
xchg
mov
cwde
mov
pusha
add
pop
add
frstor
pop
jge
iret
and
inc
repz
out
or
jecxz
cwde
int3
out
mov
stos
rcl
jge
les
outs
fadd
add
call
pop
fstp
inc
xchg
inc
enter
retf
lds
push
inc
add
xchg
test
push
add
xor
loope
add
divps
test
mov
sub
addr16
add
mov
inc
jg
out
push
or
xchg
add
daa
dec
and
jae
mov
(bad)
nop
mov
pop
nop
(bad)
sti
sub
(bad)
fcomp
fdivr
lock
out
inc
and
ja
cld
aam
pop
(bad)
jb
cmc
fist
jg
mov
fcmovne
movs
jbe
mov
pop
ins
shl
cmp
inc
cmp
jmp
xchg
outs
icebp
xchg
xor
fs
enter
push
jg
cli
add
fwait
sub
shl
add
push
(bad)
or
movs
in
add
or
das
jge
add
xor
add
xor
repz
in
fst
and
cmps
ins
test
mov
mov
das
sahf
mov
sbb
dec
mov
cmovo
and
das
hlt
pop
ds
loop
lock
lea
sar
lds
adc
xchg
inc
imul
xchg
dec
or
push
xlat
bound
mov
fwait
cwde
mov
mov
mov
mov
pop
into
aaa
xor
inc
sbb
add
in
push
(bad)
data16
jge
gs
jmp
push
jmp
push
gs
icebp
fbld
pop
stos
pop
mov
cmp
pop
retf
push
add
loop
pop
sub
push
sbb
dec
aad
jg
mov
mul
jno
test
mov
push
ficom
pop
cmp
inc
inc
pop
jecxz
mov
loopne
pop
(bad)
mov
cmps
xchg
dec
shl
loope
cmp
dec
sbb
(bad)
mul
mov
xlat
mov
mov
lods
lds
jae
adc
xor
jb
int
js
out
(bad)
pop
loope
or
jl
shr
mov
jp
xchg
mov
retf
inc
push
add
inc
mov
stos
add
stos
mov
stc
ja
mov
iret
repz
sub
jo
inc
imul
mov
popa
xor
clc
add
dec
inc
clc
leave
idiv
cmp
pop
pop
adc
loopne
pop
push
cmp
cmp
out
inc
leave
inc
xchg
jmp
sbb
push
fild
cmp
enter
int
xor
cmps
test
mov
sbb
int3
and
mov
cmp
push
into
sahf
daa
sbb
iret
iret
dec
push
cdq
or
pop
fisub
dec
mov
in
lea
aad
jbe
mov
mov
inc
icebp
xor
mov
add
adc
pusha
in
pop
(bad)
mov
lods
add
inc
pop
cmps
cmp
rcl
jb
push
cld
inc
add
int3
mov
in
jecxz
inc
jb
fcomp
or
cmp
push
push
jl
adc
mov
mov
pop
iret
mov
cmp
sub
push
cmp
sbb
mov
add
push
div
les
shl
xor
jmp
xchg
mov
xlat
dec
retf
(bad)
mov
adc
cmp
push
cmp
out
in
xchg
retf
enter
jp
loope
sahf
jge
push
mov
xlat
mov
or
into
mov
push
push
sub
iret
fwait
adc
xor
aaa
and
dec
test
clc
push
sbb
push
mov
int3
jnp
test
jb
idiv
mov
push
xchg
int
mov
mov
cdq
cmps
imul
dec
aaa
leave
mov
imul
dec
(bad)
push
sub
loopne
mov
in
and
aas
ret
or
inc
enter
xchg
aas
inc
mov
stos
int
push
xor
test
ja
ss
retf
data16
mov
or
cmp
mov
imul
sbb
cmp
outs
sub
jp
sbb
mov
mov
pop
lahf
shl
out
dec
mov
ins
iret
(bad)
xchg
push
push
xor
(bad)
xchg
ja
xor
stos
out
push
and
scas
and
bound
mov
mov
icebp
push
push
jne
add
mov
nop
loopne
sbb
mov
pop
ins
xor
pop
dec
add
(bad)
in
int3
cmps
retw
cmp
push
gs
cli
add
mov
cli
sets
out
repnz
jg
add
adc
aas
(bad)
sub
push
iret
mov
push
xlat
xor
test
clc
mov
arpl
idiv
movs
pop
mov
sahf
adc
cmp
mov
jecxz
mov
add
sub
stc
sub
or
dec
add
shl
push
call
inc
mov
add
xor
rol
mul
mov
in
mov
adc
out
sbb
in
popf
je
adc
xor
inc
pop
clc
push
cs
dec
push
jge
test
mov
xor
dec
dec
push
mov
lahf
adc
fdiv
cld
outs
add
inc
popf
lock
adc
or
mov
xchg
cmp
jo
and
fwait
jg
nop
in
setb
les
or
mov
xor
mov
shr
lock
cmp
mov
lds
ficom
mov
inc
sub
nop
lahf
add
push
mov
push
std
mov
or
inc
pop
xchg
loopne
shl
in
stc
adc
repnz
mov
bound
mov
rol
xlat
jle
jno
in
stos
stos
push
mov
and
int
push
sub
or
adc
xchg
push
or
push
(bad)
jecxz
mov
ror
push
ins
enter
cmp
(bad)
jmp
push
mov
daa
fisttp
mov
(bad)
lds
scas
lahf
xchg
ds
call
loope
test
xor
adc
rep
and
xchg
neg
movs
add
or
adc
div
cs
loope
mov
jno
in
pop
pop
int3
dec
sar
ror
inc
sbb
mov
popa
test
ret
mov
inc
mov
rol
test
pop
mov
xchg
or
sub
les
mov
mov
add
ins
stos
add
add
mov
jg
add
or
jo
repnz
dec
cld
inc
jg
pop
arpl
cmp
repnz
repnz
pop
mov
enter
mov
pop
stc
and
mov
popa
add
ds
into
dec
dec
xchg
js
(bad)
(bad)
lods
push
or
cmps
rcr
imul
ret
push
nop
arpl
jo
or
jecxz
adc
mov
adc
cs
sahf
push
and
in
or
mov
push
and
adc
je
mov
dec
out
mov
lods
dec
mov
aas
sbb
and
out
loop
sub
mov
retf
jp
jge
jb
enter
sbb
mov
push
push
outs
(bad)
push
fwait
fwait
sbb
jns
or
ins
stc
clc
pop
push
pop
or
aad
inc
mov
movs
sbb
loopne
fcomp
daa
addr16
xor
pushf
ror
fidivr
push
cmp
mov
or
or
stos
cmps
sub
sbb
ins
xor
in
jb
jne
or
mov
ret
inc
cli
or
cmp
jo
pop
and
xchg
xor
(bad)
fs
inc
sub
push
rcr
jnp
int3
jb
pop
cmp
pop
call
loope
mov
hlt
jmp
mov
inc
in
jl
dec
mov
jg
cli
sar
dec
mov
aam
cmp
and
mov
pop
cmp
sbb
les
ds
sbb
stc
daa
or
(bad)
jge
mov
lahf
pop
push
lds
mov
sub
test
out
repnz
ret
pop
mov
and
cmp
mov
scas
data16
stc
daa
fmul
cmp
(bad)
addr16
dec
ret
xchg
idiv
in
repz
iret
xchg
pop
adc
(bad)
xchg
jle
pop
test
jl
fisttp
jb
repnz
das
popf
mov
sahf
stos
cdq
iret
pop
outs
loopne
cdq
jns
call
jae
ret
neg
(bad)
mov
dec
rol
das
loope
inc
mov
stc
and
loope
pop
loopne
call
adc
mov
and
jge
lds
scas
rol
fmul
lods
xor
jmp
in
mov
mov
pop
jbe
out
out
push
xor
jge
pop
enter
mov
lds
adc
ror
push
xor
push
cmp
bound
xchg
sub
(bad)
fadd
loopne
and
test
pop
(bad)
sahf
loopne
lea
push
adc
or
retf
int3
bound
mov
jbe
pop
or
cdq
cmp
call
out
mov
adc
test
xchg
jo
arpl
sbb
inc
adc
gs
jl
icebp
inc
icebp
add
movs
add
pop
ret
add
xchg
je
push
outs
pop
adc
push
xchg
sub
jp
xchg
lods
out
cmp
addr16
or
into
add
mov
and
jnp
sti
movs
(bad)
xlat
out
into
cmps
cwde
jnp
adc
mov
lods
cli
xor
mov
dec
std
and
mov
out
iret
call
clc
lea
sbb
push
dec
or
scas
inc
add
adc
adc
dec
cli
push
rcr
jnp
out
lods
adc
and
pop
aad
sbb
xchg
inc
and
xor
(bad)
cld
ret
jnp
jg
push
fwait
aaa
adc
add
inc
xor
gs
fisubr
lea
or
inc
out
lahf
mov
fcom
sub
(bad)
and
pop
dec
dec
add
mov
in
fiadd
sub
cmp
xchg
push
in
repnz
cmps
xchg
call
and
pop
xor
popa
mov
inc
fwait
stos
mov
add
xor
xchg
in
fdivr
xor
sbb
cdq
mov
sub
addr16
movs
lds
xor
das
test
cs
push
cmp
mov
xor
out
push
dec
js
call
cld
into
push
das
stc
and
mov
dec
xchg
scas
mov
sub
and
or
(bad)
push
fldenv
inc
mov
lahf
jmp
push
or
xchg
add
imul
push
xor
mov
adc
fnsave
and
aas
inc
xchg
(bad)
ror
mov
push
cmps
leave
out
push
inc
mov
lahf
arpl
pop
call
adc
(bad)
pop
or
adc
lock
(bad)
jo
inc
inc
in
adc
int3
not
sub
shr
shl
jmp
jmp
mov
stc
ins
rcr
ficomp
add
sar
outs
push
enter
ret
inc
in
mov
pop
mov
loopne
mov
cmc
inc
jnp
call
dec
push
push
loop
jl
les
frstor
xor
ss
repz
jmp
call
mov
dec
xchg
sub
pop
cli
nop
(bad)
pop
or
fwait
sbb
mov
data16
idiv
jle
ja
xchg
push
mov
inc
adc
fiadd
(bad)
rcl
sahf
std
inc
xchg
and
jnp
sbb
les
pushf
jge
push
inc
sti
stos
pop
sub
add
ffree
jbe
rol
in
enter
cmp
das
jle
mov
retf
popa
bound
mov
pop
out
dec
mov
pusha
xchg
cmp
aam
nop
xchg
inc
sub
fidiv
retf
sub
aas
cli
pusha
ficom
and
out
push
adc
sub
mov
add
imul
repz
call
outs
pushf
pop
arpl
dec
pop
sti
in
and
mov
mov
dec
cmp
ins
arpl
imul
mov
(bad)
mov
and
lds
retf
cmp
adc
mov
xor
mov
(bad)
mov
pop
jmp
pop
in
mov
mov
pop
push
jp
aas
or
addr16
dec
xchg
into
popa
xor
inc
inc
adc
inc
pop
inc
jnp
js
sub
pusha
mov
push
dec
dec
push
mov
xchg
ficomp
sub
add
retf
aam
push
sub
bound
retf
sub
daa
popa
pushf
xchg
cmp
mov
sbb
out
jp
data16
xchg
cwde
and
dec
call
mov
sbb
mov
dec
cmp
nop
rol
pop
std
enter
sbb
adc
das
mov
neg
js
call
call
or
or
xor
lock
cmp
mov
mov
popf
shl
xchg
xchg
xchg
jmp
jg
add
add
sbb
fst
call
shl
je
dec
or
(bad)
cmp
xor
sub
dec
inc
xor
icebp
dec
ror
int
popf
int3
add
or
or
cmp
imul
mov
xchg
mov
dec
add
aam
mov
sbb
xchg
push
pop
sbb
in
jae
cmps
popf
jne
iret
mov
xchg
inc
pop
cmp
cmps
repnz
ret
rol
mov
sub
enter
jo
outs
jp
xor
jno
jno
pop
scas
sbb
rol
xor
div
or
inc
test
xor
lods
call
clc
aas
adc
pop
cmp
sbb
push
push
and
out
(bad)
mov
jle
jp
loope
fadd
mov
xchg
hlt
jno
mov
(bad)
push
or
push
in
cmp
sub
mov
pop
xchg
shr
jnp
loopne
inc
shl
mov
adc
call
mov
in
sbb
(bad)
push
ret
int
or
loopne
loopne
xchg
test
repnz
repnz
retf
add
popa
nop
test
adc
les
xor
repnz
jg
xchg
jno
and
mov
sub
sti
jae
adc
push
out
xor
adc
mov
mov
mov
jae
xchg
movs
les
cdq
aam
stos
mov
adc
cmp
fs
add
fsubrp
push
cmp
push
das
lods
dec
(bad)
and
dec
sete
pop
lea
inc
(bad)
fistp
adc
xchg
push
jae
pop
pop
sbb
xchg
int
out
movs
add
outs
and
fldenv
mov
jmp
mov
pop
fcom
jno
pop
mov
shl
std
push
push
imul
push
sbb
cld
mov
jg
fsubr
je
dec
into
mov
mov
mov
jne
lds
cwde
cld
loope
sbb
add
mov
mov
mov
out
pop
jo
dec
inc
inc
mov
sahf
daa
pop
xor
daa
scas
mov
fst
or
pop
inc
or
adc
cmp
cdq
mov
setge
cmp
scas
pop
or
inc
frstor
adc
mov
push
xchg
test
out
xor
mov
fcmovnu
hlt
mov
jg
push
xchg
pop
adc
add
sub
inc
rol
mov
dec
adc
leave
sbb
ins
jg
pop
inc
mov
test
adc
adc
push
sub
push
mov
loop
js
icebp
mov
mov
push
into
not
iret
int3
sbb
aaa
dec
shl
pop
(bad)
das
out
std
popa
int3
pop
sbb
loopne
cmp
fild
xchg
mov
cmp
cdq
pop
push
int
sub
dec
cmp
stos
xchg
fiadd
jno
addr16
inc
imul
es
sti
mov
xor
test
inc
fld
repz
sbb
adc
(bad)
jne
inc
add
inc
js
sub
sbb
iret
fiadd
cs
sbb
pop
mov
pushf
lahf
std
test
mov
in
sub
push
xchg
mov
cld
cli
mov
cmp
ja
adc
sub
jne
xchg
jmp
mov
mov
outs
ret
mov
or
or
xor
mov
cmc
pop
lahf
sub
sub
mov
test
clc
adc
inc
adc
inc
ret
push
ror
pop
outs
jns
dec
mov
cmps
inc
sub
xchg
loope
push
stos
das
imul
jb
out
ret
jecxz
sub
xchg
push
addr16
out
or
ret
rcr
(bad)
daa
pusha
pop
push
imul
mov
pop
outs
ins
or
clc
and
or
fcomp
stos
sub
and
repz
iret
aas
mov
lock
add
aad
sbb
jp
js
pushf
icebp
repnz
cmps
ins
cwde
mov
repz
push
icebp
lods
mov
sbb
and
fadd
cmp
cli
in
je
add
cs
shl
adc
dec
js
mov
cld
pusha
ins
push
addr16
adc
div
fdiv
aas
shl
sahf
dec
xchg
xlat
cmp
dec
retf
outs
cmp
dec
push
sbb
stos
inc
es
gs
and
bound
test
hlt
add
jg
outs
jmp
and
mov
addr16
fld
sbb
jg
shl
mov
mov
push
(bad)
retf
loope
lods
sbb
inc
sub
push
mov
addr16
xchg
or
int
call
xor
xchg
add
cwde
jae
pop
(bad)
(bad)
or
or
pop
xor
mov
sub
mov
add
mov
inc
adc
clc
xchg
adc
fld
and
jnp
push
jmp
dec
ds
int3
mov
div
ins
mov
cmp
or
cmps
cmp
(bad)
in
push
pop
push
pop
cld
xchg
jecxz
dec
retf
push
movs
dec
jmp
sub
loope
sub
mov
jmp
test
sub
test
shr
stos
adc
dec
scas
mov
xor
cmps
mov
bound
dec
aaa
adc
sbb
and
inc
adc
inc
adc
jo
mov
inc
cmp
dec
pop
sbb
test
enter
sub
bound
cmp
imul
sub
ret
mov
mov
imul
and
in
sub
into
adc
or
arpl
xor
sbb
xchg
mov
inc
call
shr
inc
sub
xchg
xor
push
or
add
stos
xor
sar
pusha
cmps
ins
sbb
lahf
pop
aas
add
mov
in
mov
or
xchg
(bad)
lods
aaa
adc
xchg
loop
rcr
rcl
retf
call
adc
leave
dec
mov
js
jae
lds
retf
lods
call
jge
push
adc
stos
ss
test
enter
jnp
in
dec
sub
imul
icebp
cmp
or
loopne
mov
jp
jmp
sbb
pop
sub
ret
ins
shr
call
inc
and
jne
arpl
cld
push
scas
inc
mov
dec
mov
sub
dec
xchg
add
fbstp
std
(bad)
or
pop
push
lahf
shr
xchg
push
call
push
pusha
cmp
popa
or
sar
pop
push
div
lock
add
jp
retf
pop
inc
inc
inc
push
ror
mov
stos
dec
mov
pop
out
retf
(bad)
sbb
ret
mov
pop
cmp
ins
(bad)
mov
je
pop
add
dec
push
cmps
or
inc
movs
xchg
cmp
test
xor
dec
mov
pop
sub
add
cmps
sbb
add
iret
in
xor
xor
fsub
mov
ja
mov
imul
xor
jg
jg
test
pop
stc
(bad)
cmp
adc
pop
in
lock
out
fdivr
aam
adc
test
and
push
test
aad
dec
data16
cli
cdq
jns
mov
jnp
call
fwait
jo
xchg
pop
xor
xor
push
nop
ins
ja
cs
int
push
mov
or
neg
jge
jne
jp
sub
fld
iret
shl
or
dec
daa
fidivr
retf
xor
out
inc
mov
mov
or
push
hlt
or
xor
jae
xor
mov
mov
iret
mov
cld
add
mov
sbb
mov
inc
test
add
inc
or
inc
xor
int
and
and
popa
stos
and
rcr
lods
loop
cdq
dec
aam
xchg
jo
test
and
mov
jl
popa
sahf
js
sub
jne
not
sahf
and
loop
xor
sbb
imul
add
retf
xor
test
inc
jo
and
xor
cwde
mov
popa
ja
std
or
jae
mov
pop
scas
sbb
mov
add
mov
mov
push
call
popa
jns
scas
test
push
ret
call
jle
pop
aas
dec
adc
adc
push
inc
cmp
ss
sbb
pop
fcmove
imul
xchg
xchg
xchg
pop
or
loope
sbb
xchg
inc
lock
addr16
mov
inc
(bad)
sbb
call
dec
cmp
nop
pop
sub
js
and
pop
nop
(bad)
sahf
cmp
ret
sub
ja
ffree
js
add
pop
or
scas
jle
test
or
mov
pop
pop
dec
jmp
jbe
sub
adc
pop
mov
mov
loope
in
pop
mov
cmp
movs
js
iret
xor
(bad)
mov
(bad)
sti
iret
ret
and
cmp
mov
arpl
inc
retf
test
outs
mov
into
sub
push
and
not
(bad)
push
stos
mov
(bad)
dec
sub
xchg
ud2
lods
pop
mov
cwde
fwait
and
xor
(bad)
cdq
inc
inc
fwait
push
rcr
(bad)
xchg
sbb
jl
sahf
dec
dec
adc
pop
cwde
dec
sub
push
adc
cs
jno
and
or
les
mov
xor
inc
shr
jl
test
mov
dec
adc
addr16
ror
xor
jp
stc
mov
inc
loop
cmp
movs
loope
pop
loop
imul
sub
scas
xor
imul
jne
sbb
mov
fadd
jmp
sub
dec
xchg
aam
sub
mov
call
or
inc
jmp
and
int
lods
or
lahf
push
jnp
(bad)
cmc
idiv
push
push
out
test
mov
aam
fs
gs
sub
xor
mov
sbb
(bad)
shl
or
inc
in
outs
(bad)
shl
inc
xor
pop
and
push
cmp
add
les
arpl
push
cwde
mov
add
push
add
inc
or
jp
cmp
sbb
hlt
mov
dec
(bad)
mov
std
stos
mov
mov
adc
dec
and
push
int
lods
icebp
frstor
imul
mov
(bad)
in
jle
dec
data16
and
pop
pop
xchg
icebp
clc
nop
retf
mov
add
dec
mov
aaa
sbb
pop
arpl
jmp
dec
sbb
adc
test
dec
and
test
bound
and
sub
cs
xchg
or
adc
repnz
aad
pop
popf
aas
aad
ror
push
fld
dec
mov
(bad)
call
push
movs
mov
rcl
outs
out
daa
xor
and
out
fdivr
dec
push
sbb
dec
int
ret
pop
stc
and
aam
out
cmps
lods
adc
pusha
push
and
pop
push
push
popa
scas
fwait
jle
mov
bound
fisttp
push
cmp
xchg
test
mov
rcr
cwde
out
and
sahf
or
inc
jbe
in
ret
mov
xor
add
les
in
mov
inc
dec
xchg
inc
fadd
inc
jge
push
xchg
and
pop
dec
cdq
mov
mov
xchg
xchg
test
xlat
push
dec
adc
jmp
dec
and
sbb
jmp
sar
mov
push
jo
adc
xchg
add
push
lock
call
rcl
call
mov
cmp
pop
add
int3
mov
and
js
cmp
outs
in
sbb
es
cmp
cwde
test
imul
addr16
fs
or
loop
iret
xchg
popa
mov
pop
add
push
and
mov
aaa
or
retf
mov
out
ja
js
cmp
mov
aas
stos
sub
cmc
shrd
dec
(bad)
fwait
cwde
cld
or
xchg
int
faddp
data16
(bad)
mov
leave
push
das
sti
imul
and
enter
out
mov
jne
xchg
dec
mov
mov
call
push
pop
lods
stos
mov
jb
js
pop
ror
out
xor
mov
add
into
stos
pusha
loope
call
push
mov
rol
mov
bound
fdiv
test
fs
in
int
add
int
push
mov
xor
inc
mov
push
ja
js
xor
cmc
das
test
inc
adc
inc
inc
movs
mov
sbb
mov
lock
movs
mov
test
test
and
cmps
dec
out
jecxz
inc
cmp
adc
fild
out
sub
sbb
sub
mov
inc
std
je
pop
push
test
mov
lds
mov
sbb
push
adc
inc
test
push
loopne
pop
push
das
repnz
stos
sti
shl
or
jb
out
and
pop
inc
add
inc
add
mov
jae
push
outs
mov
xor
paddsw
test
ja
dec
fmul
lds
retf
dec
lss
adc
sbb
iret
sbb
inc
pop
sbb
pop
push
addr16
retf
int3
lods
test
icebp
iret
xor
xlat
sar
sbb
cwde
dec
xor
sbb
fmulp
shr
pop
cmp
cs
in
dec
and
fadd
xchg
xchg
scas
push
and
xor
shl
pop
xor
in
mov
out
enter
sub
add
out
and
sbb
(bad)
mov
test
inc
push
or
mov
xchg
mov
push
sbb
movs
test
sti
pushf
mov
jno
inc
inc
jno
repz
into
push
int3
mov
out
call
dec
(bad)
mov
push
and
mov
jb
imul
cli
cmp
sub
aam
call
inc
jae
dec
iret
cli
pop
sahf
cmps
jo
movs
xchg
jp
dec
mov
mov
icebp
shl
xchg
in
mov
inc
repz
push
sar
inc
mov
mov
dec
push
es
pop
sub
sbb
ficom
arpl
sub
push
bound
inc
mov
shl
pop
mov
iret
dec
push
aam
adc
mov
call
jecxz
sub
(bad)
jb
pop
dec
dec
lahf
jne
pop
adc
mov
lds
in
jnp
add
in
stc
ss
mov
sbb
push
lods
sub
sub
add
add
ret
ss
in
call
jmp
sahf
cmp
sub
lea
mov
movs
mov
int
or
add
mov
mov
inc
add
bound
push
dec
push
aas
aas
mov
xchg
cmps
mov
lods
xor
out
nop
cmp
mov
movs
xchg
scas
lahf
jbe
sub
mov
adc
mul
mov
mov
sbb
mov
jo
imul
fistp
xchg
cmp
xlat
fdiv
shl
xchg
mov
pop
shl
xor
mov
jle
in
mov
push
push
js
clc
pop
sbb
movs
dec
retf
fcmovne
sub
dec
jnp
aaa
test
in
(bad)
addr16
movs
xchg
out
mov
test
inc
test
jo
inc
adc
mov
mov
jecxz
pop
ins
call
or
fwait
pop
movs
nop
out
ss
outs
lock
mov
retf
mov
fwait
cdq
mov
sub
sbb
inc
dec
out
xchg
(bad)
rcr
push
mov
fwait
(bad)
jbe
or
ret
sub
in
out
repz
cmp
sbb
mov
jae
and
cmp
push
fcomp
adc
push
push
cmp
add
jbe
ss
xor
ret
jns
lods
jo
call
repz
in
cdq
mov
sub
sub
ss
fild
push
stc
push
add
xchg
int3
into
ins
es
mov
out
scas
stos
ins
loopne
call
(bad)
push
adc
es
shl
mov
sub
adc
sub
or
cmp
xchg
rcr
iret
retf
enter
xor
ds
jle
mov
xchg
jmp
jb
fs
cmp
jb
cdq
cmps
xor
jb
out
cwde
mov
push
xchg
mov
in
lods
(bad)
aad
cmp
dec
imul
in
mov
stc
icebp
loope
sahf
pushf
int
inc
cld
mov
pop
pushf
pop
imul
ret
adc
dec
sbb
or
mov
jmp
pop
xchg
adc
mov
cdq
(bad)
out
fisub
adc
and
cmps
add
add
sub
imul
sbb
cld
mov
test
and
and
int
stc
pop
fimul
lods
inc
mov
pushf
je
xlat
movntps
shr
jns
xor
inc
ss
scas
outs
push
(bad)
cld
jmp
in
loope
add
and
(bad)
fsubr
add
or
mov
jmp
ss
mov
xlat
in
pop
or
ins
add
cs
data16
(bad)
in
mov
fnstenv
int3
call
in
(bad)
aam
mov
(bad)
push
daa
push
mov
fwait
test
xchg
xor
mov
dec
adc
xchg
int
push
bound
mov
mov
or
ret
mov
jb
out
loop
fdiv
jbe
cmps
mov
rcl
ss
push
xor
cwde
dec
or
mov
aad
add
arpl
fwait
and
cmp
cwde
sub
sbb
dec
sbb
push
dec
mov
lds
movs
jb
pop
push
mov
add
jnp
call
jecxz
enter
adc
je
pop
mov
hlt
(bad)
mov
hlt
push
mov
rcr
jge
aad
rol
in
in
in
xchg
(bad)
movs
ja
push
jle
outs
scas
icebp
and
mov
pop
cmp
mov
leave
(bad)
ins
not
pop
out
iret
(bad)
mov
sbb
hlt
aad
sahf
push
push
mov
mov
cmps
inc
mov
jecxz
add
ja
push
pop
xor
int
frstor
push
nop
and
test
ret
xlat
in
xchg
pushf
out
mov
and
xor
xchg
fld
mov
jle
sti
dec
xor
jle
add
xor
stos
push
les
test
xor
cmp
sbb
pop
jp
mov
lock
aam
xchg
pop
jno
inc
into
js
aaa
leave
mov
xor
fsubr
jp
push
mov
pop
cli
mov
int
imul
and
cmp
and
mov
rcl
(bad)
sahf
sub
pushf
pop
stos
jns
(bad)
push
mov
dec
inc
(bad)
es
in
xor
retf
int3
sub
fisubr
outs
inc
inc
mov
addr16
xchg
push
in
xor
add
and
xlat
sub
push
ja
scas
int3
or
js
pushf
adc
or
or
push
sti
fisttp
loopne
xor
cmp
mov
mov
xchg
popf
sub
push
mov
and
adc
repnz
scas
cmps
xor
jge
(bad)
mov
stc
jmp
pop
jne
fs
or
adc
push
jle
mov
fld
add
push
xchg
or
aad
jns
fdiv
jne
add
iret
lea
int
nop
out
pop
jnp
sbb
xchg
stc
fild
jg
add
push
in
rol
dec
fild
out
dec
shl
sbb
xchg
shl
in
shr
frstor
cli
cdq
movs
push
lock
fwait
push
jns
into
call
jo
pop
(bad)
jae
mov
pop
dec
enter
je
sti
inc
xor
mov
in
dec
lock
adc
fsubr
outs
and
stc
jge
rcl
or
xchg
pop
fist
imul
gs
push
(bad)
cs
push
xchg
add
add
pop
pop
dec
shl
(bad)
mov
(bad)
test
mov
fild
sbb
pop
into
inc
pop
mov
mov
int
add
imul
pusha
ins
dec
in
popa
cmp
bound
outs
cli
push
xchg
push
xlat
adc
pop
mov
sbb
sbb
adc
dec
adc
popa
movs
push
jne
add
mov
movs
mov
inc
test
inc
hlt
call
(bad)
mov
push
lods
xor
fistp
mov
clc
jmp
adc
push
jb
push
xchg
scas
dec
fnstenv
ds
add
pop
jg
dec
adc
push
mov
add
mov
pop
(bad)
faddp
les
mov
jp
pop
add
addr16
in
ins
repz
sub
sbb
xchg
mov
sub
std
sub
mov
clc
sub
mov
outs
ror
dec
jb
retf
inc
xor
adc
gs
sbb
adc
xchg
es
test
jb
cmp
ss
push
mov
push
or
pop
ret
outs
jge
mov
mov
in
and
xchg
addr16
push
scas
jo
xchg
push
add
movs
adc
sub
mov
add
pmaddwd
mov
cwde
push
retfw
mov
dec
and
enter
push
push
and
jnp
fsub
cmp
fdiv
outs
or
nop
les
je
push
pop
ret
jmp
cwde
repnz
movs
or
cmc
in
ror
or
rcl
sbb
xor
mov
std
ficomp
mov
gs
and
cmp
jno
popa
in
clc
pop
test
cmp
jb
sbb
pop
push
or
and
dec
fsub
mov
adc
sbb
movs
sar
push
dec
inc
jmp
cmp
jmp
cmp
pop
pusha
xor
sbb
cwde
push
mov
mov
scas
adc
adc
and
or
int3
stos
loope
js
cmc
sbb
std
xchg
mov
cli
mov
clc
cs
mov
adc
xor
lock
cs
mov
in
sub
repz
ret
ret
inc
mov
rcl
push
mov
or
and
or
mov
cmc
(bad)
lea
push
out
and
or
sub
sub
popf
gs
sbb
outs
cmps
sub
cwde
pop
fld
cmp
retf
adc
cmps
inc
mov
adc
icebp
xchg
and
loopne
jp
(bad)
pop
mov
(bad)
call
iret
fs
(bad)
rol
out
jecxz
add
mov
sub
push
test
nop
push
in
push
(bad)
sti
aas
mov
movs
jne
cld
(bad)
pop
sbb
test
scas
icebp
mov
popa
and
and
inc
enter
sub
or
jno
inc
pop
jmp
xor
in
(bad)
and
jnp
pop
dec
inc
jae
test
(bad)
cmp
jmp
jecxz
add
stc
stos
cmp
sbb
test
movs
push
jecxz
lds
nop
clc
repnz
(bad)
add
inc
mov
and
mov
mov
sti
or
push
cmp
xor
dec
xchg
movs
cmp
lods
hlt
add
not
in
aam
jae
js
mov
dec
jb
adc
mov
inc
dec
sub
mov
mov
add
mov
inc
ficomp
and
add
imul
stc
inc
mov
mov
and
mov
inc
(bad)
ret
sahf
xchg
bound
add
inc
sub
(bad)
popf
inc
scas
jae
or
(bad)
call
jecxz
inc
ftst
mov
xor
and
jns
mov
fwait
outs
mov
add
mov
sub
jle
add
xchg
push
addr16
cmps
popf
push
loope
sbb
addr16
fisub
dec
xchg
pop
pop
shl
imul
inc
and
(bad)
fwait
jae
loop
jno
loopne
fmul
les
push
xor
pop
ins
cmp
fbstp
call
jle
xchg
dec
loopne
and
mov
nop
push
inc
fsubr
loop
data16
inc
sub
push
mov
iret
repz
dec
fdivp
mov
hlt
or
mov
sti
scas
imul
xor
mov
jne
jecxz
or
or
mov
push
cmps
sbb
not
and
icebp
out
outs
je
dec
and
ror
mov
test
sub
fnstenv
mov
cmps
sub
xchg
stos
xor
push
mov
mov
or
inc
jne
ret
test
adc
ret
jge
xor
outs
test
scas
cs
movs
rsqrtps
mov
cmp
daa
mov
retf
sub
in
scas
dec
push
and
sbb
jecxz
adc
test
adc
jo
add
mov
mov
lea
push
xchg
dec
in
mov
jl
xor
dec
and
mov
push
mov
lea
ja
mov
into
sti
loop
les
adc
push
cmp
sub
test
dec
pmulhuw
xor
xchg
push
push
or
mov
mov
jg
xor
adc
scas
aad
dec
push
int
dec
mov
mov
sbb
push
cmp
icebp
and
cli
pop
or
dec
clc
dec
jmp
mov
adc
imul
leave
test
je
mov
xchg
mov
rcr
addr16
inc
sub
mov
adc
sub
jge
adc
jle
repz
inc
sbb
push
xchg
and
arpl
jns
push
mov
fsub
scas
and
imul
push
and
test
inc
les
xchg
je
xor
pusha
test
out
pop
dec
xor
call
fisttp
dec
mov
imul
add
hlt
push
and
xchg
cmp
popa
leave
dec
sub
inc
mov
push
adc
pusha
retf
cmc
gs
movs
xchg
mov
fyl2xp1
(bad)
aad
mov
es
cmc
(bad)
loop
(bad)
xor
dec
push
sub
inc
popa
lock
mov
outs
jmp
mov
push
stc
sbb
adc
sbb
sub
dec
lods
dec
in
mov
cdq
or
(bad)
jge
or
xor
sbb
xor
js
rcl
fstp
xchg
mov
fisub
pop
scas
jl
mov
stos
pop
scas
in
sbb
test
fdivr
xor
pop
dec
xor
fwait
je
dec
sub
xor
dec
adc
xor
cwde
(bad)
lahf
or
aad
into
dec
mov
mov
scas
pop
xor
xchg
sar
cmp
jecxz
push
(bad)
retf
add
dec
fnsave
jp
in
fwait
(bad)
cmp
stc
fdivr
(bad)
inc
push
inc
jo
ss
mov
dec
sbb
ds
int3
aam
add
daa
adc
popf
out
push
das
push
sub
inc
pop
call
dec
gs
cmc
lahf
std
or
and
push
inc
mov
sahf
mul
pop
cdq
push
jl
(bad)
fild
adc
dec
jge
lods
ret
or
mov
push
ja
rcl
shl
lock
add
mov
ror
es
call
leave
test
outs
sub
in
gs
nop
into
inc
fucomp
add
lahf
mov
adc
fild
and
xchg
inc
push
sbb
xchg
inc
lock
sub
retf
inc
push
xor
sub
and
xlat
adc
adc
mov
push
sbb
imul
jl
(bad)
hlt
shl
mov
inc
or
adc
jb
imul
sbb
out
in
push
scas
mov
ins
dec
nop
out
push
psrad
loopne
xor
cmp
mov
addr16
sub
xor
mov
sbb
adc
fsubr
fbstp
xor
xchg
jno
addr16
push
sbb
push
pop
fxch
jmp
or
(bad)
pop
imul
mov
fcmovnb
fist
xlat
test
xor
dec
push
and
mov
mov
je
push
call
dec
xchg
jo
mov
push
sub
xor
push
leave
xor
retf
(bad)
sti
add
push
jl
popa
push
(bad)
in
cmps
clc
pop
add
call
test
arpl
mov
pop
xor
push
and
imul
mov
daa
pop
pop
stc
xchg
stos
or
popa
mov
mov
gs
sub
not
ss
ficomp
stos
aaa
int3
xlat
jb
popa
xor
sub
jecxz
movs
push
xor
mov
fmul
fidivr
cmc
btr
cmps
sbb
call
dec
shl
xchg
mov
les
lea
mov
mov
(bad)
(bad)
rcr
icebp
pop
lea
push
cmps
sbb
pop
les
jecxz
shl
test
rol
sbb
pop
int
int
call
hlt
xchg
out
xchg
cdq
xor
inc
jmp
retf
push
adc
jnp
jnp
sar
xor
mov
dec
ror
test
jmp
mov
int3
xlat
mov
mov
mov
adc
pop
push
xor
lock
mov
xchg
pop
bound
mov
and
inc
mov
jbe
lahf
inc
push
mov
and
inc
xchg
loope
jo
pop
push
jo
js
fstp
mov
fisubr
pop
cmp
dec
cdq
jg
scas
and
cmp
pop
mov
ficomp
mov
adc
xchg
pop
cmovno
mov
lahf
jne
push
cmp
fs
xlat
shr
movs
push
in
sbb
pop
cmps
dec
aam
and
fwait
pop
push
pop
call
stos
and
and
sub
and
cmpxchg
jl
sbb
or
cmp
pop
test
mov
clc
mov
sub
dec
or
inc
pop
retf
loop
in
test
shl
shr
xchg
cli
mov
daa
mov
cdq
push
sub
cmp
test
ror
loope
pop
fild
push
cli
xor
and
gs
dec
enter
ret
in
fisubr
clc
push
sahf
sub
mov
loop
pop
out
pushf
loope
pusha
std
jae
xor
inc
ins
dec
or
fxch
sub
jle
call
mov
push
dec
push
leave
scas
aaa
add
aas
jecxz
xor
inc
ins
icebp
call
les
sub
xchg
test
push
lds
dec
not
or
retf
iret
mov
enter
xor
aam
xlat
adc
rcr
pop
retf
cmps
adc
inc
leave
out
sbb
pop
in
sti
jns
stc
and
mov
stos
mov
cli
mov
std
mov
dec
movs
in
js
cmc
sahf
gs
sbb
adc
aas
and
jno
outs
sahf
sbb
inc
and
je
xchg
adc
inc
icebp
inc
cs
ins
shr
mov
xor
pop
add
fbstp
pop
xchg
pop
das
or
push
scas
ja
adc
xor
inc
fstp
sub
ins
retf
add
fs
adc
cmps
shr
out
inc
mov
mov
push
sbb
loope
mov
mov
dec
test
scas
pop
(bad)
adc
jle
repz
js
xor
dec
inc
fwait
unpcklps
cld
ja
cmp
pop
fild
or
fwait
aaa
dec
or
popa
or
(bad)
jb
imul
test
pop
xchg
jno
loop
cmp
xor
push
push
popa
xchg
mov
push
(bad)
ficom
push
rol
retf
add
mov
pusha
into
cmp
sbb
sub
inc
test
push
les
mov
and
fst
mov
jle
add
shl
inc
aaa
dec
mov
outs
fwait
jno
sub
jmp
push
pop
ficomp
xchg
mov
adc
cmp
and
push
test
adc
test
ret
push
add
loopne
add
(bad)
pop
out
int3
retf
ja
movs
mov
je
and
adc
inc
xchg
pop
sub
outs
int
call
outs
rcr
lds
xor
xor
pop
fs
push
in
push
inc
sbb
adc
cmp
(bad)
jnp
loop
cmp
mov
pop
push
iret
jg
dec
stc
std
into
xchg
push
xchg
imul
into
setae
iret
inc
jp
call
out
mov
rcl
jp
mov
pop
stos
ins
mov
leave
mov
jecxz
mov
shl
sub
add
push
scas
push
loopne
inc
(bad)
popa
xor
pop
aas
dec
add
shr
inc
dec
lods
inc
ret
rcl
addr16
jo
cmp
xchg
cmp
adc
sbb
(bad)
(bad)
imul
sub
cli
xor
mov
outs
pop
out
mov
js
in
nop
fisub
test
add
push
xchg
sbb
and
(bad)
stos
mov
sbb
leave
sub
jecxz
cmps
inc
and
xchg
xor
add
add
scas
adc
sub
pop
stos
push
arpl
cmp
mov
pop
mov
mov
jp
lea
ins
lea
mov
mov
adc
and
cwde
les
add
and
mov
test
push
repz
cs
aam
dec
push
ret
jecxz
test
in
mov
or
inc
and
xchg
add
les
ficomp
cmp
std
loopne
pop
mov
stos
test
fs
fadd
xchg
adc
(bad)
and
ror
inc
stos
xor
mov
inc
add
shl
mov
xor
repnz
push
inc
and
adc
pusha
dec
fld
mov
mov
and
mov
cld
mov
inc
(bad)
add
(bad)
lods
sbb
add
out
loop
jno
xchg
dec
test
aas
int
in
push
adc
fld
adc
test
daa
retf
add
fdivr
popf
or
cmp
inc
mov
add
fstp
dec
adc
mov
popa
xchg
dec
cmp
jecxz
sub
adc
fnsave
xchg
xchg
dec
retf
dec
xor
sbb
fild
rcl
pop
ja
push
fwait
aaa
mov
shr
aaa
xor
cs
dec
add
scas
jns
rcl
lahf
add
jae
cmps
push
or
cmps
sahf
cmc
or
inc
dec
mov
icebp
lds
jae
xor
cmp
cmc
les
shr
push
jp
sbb
push
mov
imul
cmp
movs
add
fist
add
mov
mov
shl
imul
mov
fwait
inc
inc
ret
into
in
add
pop
mov
pushf
js
cmp
adc
out
xchg
popa
in
in
adc
or
push
mov
popa
and
mov
add
fld
cmp
push
or
repnz
retf
je
stos
jo
mov
aad
adc
and
test
in
sbb
and
out
gs
hlt
and
jno
jne
loope
in
xlat
std
and
(bad)
jle
ss
fs
or
xor
addr16
sub
fisttp
mov
arpl
(bad)
fisttp
jo
mov
add
add
std
xchg
fsub
pop
add
clc
xor
mov
sub
add
adc
loop
mov
pop
xchg
outs
push
test
int3
mov
repz
or
ficom
sub
or
fstp
mov
push
fdivr
or
inc
jne
test
mov
popf
lods
imul
mov
and
jnp
xor
cwde
mov
push
mov
shl
xor
loop
xchg
ret
fcom
pop
loopne
and
lods
inc
push
into
cwde
mov
push
cmp
iret
sub
xlat
dec
xor
ficomp
dec
ins
inc
add
dec
inc
(bad)
lahf
mov
jp
cmp
outs
jmp
into
cmp
ss
or
dec
sbb
test
xchg
jle
or
(bad)
lods
jmp
bound
inc
cmp
xchg
stos
or
shl
push
(bad)
aad
sbb
push
test
lds
out
imul
sbb
and
test
arpl
mov
(bad)
fist
cs
cmp
and
sbb
mov
cmp
adc
xchg
mov
imul
and
jl
or
add
ret
sbb
sub
and
shr
add
aas
pop
les
mov
es
pop
sbb
pushf
mov
and
iret
xor
push
pop
ins
mov
mov
mov
imul
movs
sbb
push
js
shl
repnz
adc
hlt
repnz
xor
sub
idiv
clc
sti
pop
int3
and
lods
test
hlt
test
adc
cmp
adc
sbb
bound
or
and
fs
mov
scas
add
adc
sbb
repz
mov
jb
popa
push
fsub
(bad)
call
cmp
cld
pop
mov
push
and
jg
test
(bad)
ret
in
nop
jo
push
mov
mov
jmp
outs
mov
jg
cld
fwait
add
enter
inc
test
sbb
int
in
push
dec
inc
add
(bad)
call
adc
adc
xchg
push
fimul
xor
fwait
das
inc
adc
int
data16
cmps
push
cmp
sub
xor
test
xor
mov
aad
aam
adc
je
xor
out
loopne
inc
popa
pop
jmp
ficomp
ds
rcl
stc
inc
jle
call
sbb
fld
lea
ret
pop
rcl
icebp
or
int3
rcl
ins
push
sbb
push
fild
inc
adc
push
jp
push
mov
cmp
sbb
mov
inc
inc
adc
and
xchg
jecxz
push
ret
out
jg
adc
cmps
mov
xor
mov
retf
push
icebp
push
enter
mov
jmpw
outs
push
cld
push
aas
and
rol
fmulp
sub
sbb
dec
jb
inc
ss
inc
in
stos
addr16
(bad)
popf
stc
cmps
popa
push
test
jnp
xchg
(bad)
mov
test
(bad)
leave
xchg
rol
jb
dec
or
sub
test
xor
push
inc
lahf
(bad)
outs
push
sbb
mov
and
mov
sub
xchg
arpl
packuswb
mov
or
mov
stos
cdq
pop
add
jbe
test
cmp
cdq
sbb
xchg
jae
mov
scas
bound
inc
mov
xchg
and
bound
retf
rol
in
jae
or
pop
enter
push
xor
dec
fs
gs
mov
and
fs
in
retf
mov
sbb
mov
das
mov
fcmove
pop
aam
pop
pop
in
call
ja
leave
gs
int
fwait
inc
mov
pusha
mov
add
jl
call
int3
stos
retf
inc
cdq
xchg
cdq
xchg
data16
and
pusha
xor
sub
fs
and
jnp
lods
mov
cli
dec
jl
inc
mov
test
inc
pop
sar
jno
inc
cmps
xlat
jo
loop
lds
mov
fld
xchg
fiadd
jmp
outs
push
scas
shl
push
iret
sub
dec
aas
mov
cmp
sahf
jmp
and
and
adc
adc
or
imul
pop
inc
mov
jbe
sbb
lods
je
aas
sub
mov
and
mov
sbb
adc
popf
popf
jmp
dec
xor
xchg
xor
cmc
rol
dec
xlat
cdq
jle
cli
adc
jne
mov
enter
enter
(bad)
(bad)
aad
in
call
or
xchg
inc
push
fstp
mov
add
lock
shl
lods
test
cmp
mov
movs
ror
add
and
test
dec
jo
sbb
jl
mov
inc
iret
test
pop
dec
lock
inc
imul
mov
jns
cs
inc
push
cld
gs
pushf
adc
sbb
popf
rcl
mov
pusha
pop
movs
popf
jge
inc
xchg
(bad)
cmp
jecxz
dec
int
rcr
xchg
sub
mov
or
inc
pusha
and
xor
call
push
jmp
pop
and
fwait
loopne
xchg
in
xor
shl
sub
aam
fsubr
loope
xlat
cmps
push
cmp
(bad)
push
int
popa
adc
and
mov
repz
mov
jbe
pop
es
ror
mov
cmp
(bad)
aam
pop
cmp
cmp
mov
xchg
jmp
bnd
cld
mov
jne
pop
aam
sub
(bad)
fidivr
jge
fistp
test
xlat
push
xchg
sti
mov
cli
fild
dec
outs
sar
call
pop
xchg
addr16
fld
scas
inc
push
aad
xchg
div
mov
xor
fild
(bad)
mov
repz
out
sub
pop
mov
outs
jle
fdivr
mov
test
out
xchg
imul
outs
jp
push
mov
cli
lahf
pusha
mov
mov
mov
sti
aad
movs
mov
jnp
xchg
push
mov
mov
jmp
outs
mov
cdq
stc
jg
mov
(bad)
idiv
pop
fldenv
outs
jno
fidivr
repz
jle
ds
movs
(bad)
out
std
(bad)
mov
(bad)
das
out
fld
pop
fsub
pop
fdivr
data16
push
pop
clc
aas
pusha
(bad)
dec
mov
cmp
add
push
loopne
shl
mov
jmp
ja
outs
mov
imul
lahf
add
fdivr
pop
int
nop
movs
xor
or
push
jmp
xchg
adc
aam
pop
xor
hlt
push
scas
or
movs
enter
scas
push
and
stos
pop
mov
sub
inc
(bad)
fucom
pop
add
mov
add
push
push
(bad)
fst
cmp
sbb
or
out
dec
xor
rcl
mov
push
adc
mov
sar
dec
or
cs
lods
test
repz
jl
dec
stos
mov
pop
dec
push
or
pushf
jmp
in
xor
mov
and
inc
mul
(bad)
fwait
imul
cmp
movs
into
retf
test
mov
xor
cmp
pushf
loope
or
and
cli
into
hlt
ins
pop
(bad)
sbb
sub
test
push
push
jmp
xor
pusha
jmp
or
inc
mov
iret
pop
cmps
mov
and
mov
dec
mov
adc
dec
leave
mov
stos
push
retf
mov
push
add
sub
pop
jp
inc
ja
inc
jb
xchg
mov
push
push
pop
or
xlat
sbb
in
mov
jno
add
add
(bad)
ins
inc
pop
sbb
call
aam
xchg
xor
popa
mov
pop
ror
cmps
mov
mov
sbb
fadd
(bad)
or
fistp
repz
nop
aad
xlat
push
cs
cmp
imul
add
sub
xchg
sbb
mov
loop
sub
xchg
fnstenv
fisubr
mov
adc
push
mov
inc
ja
sub
mov
pop
push
jp
pop
mov
jle
or
std
in
jae
mov
int3
bound
mov
hlt
stc
adc
push
jmp
sbb
or
push
loop
xor
shr
adc
mov
les
jnp
rcr
rcr
push
mov
in
std
push
(bad)
mov
push
jns
pop
jl
mul
ret
hlt
js
adc
jnp
cmp
sub
pop
loop
les
daa
xchg
bound
jo
jle
cdq
inc
xchg
(bad)
adc
mov
repnz
mov
rcl
loopne
clc
nop
jb
fimul
mov
arpl
inc
int3
xor
mov
out
and
xor
lahf
adc
fcmovnu
mov
xor
pushf
pop
mov
jmp
push
pop
test
mov
rol
mov
stc
push
das
sbb
dec
cli
stos
mov
shl
sbb
push
jmp
mov
movs
xor
hlt
retf
adc
jg
sub
idiv
clc
ret
pop
retf
mov
xchg
add
jmp
sbb
repnz
in
mov
sbb
dec
inc
xchg
mov
ret
sub
(bad)
fadd
or
cmp
mov
jbe
retf
mov
ret
cmps
cmp
stc
test
sbb
hlt
std
sub
dec
ja
jp
pop
xlat
mov
retf
or
aam
imul
inc
cmp
inc
sbb
popa
xor
fcmovb
mov
cmps
fs
mov
mov
adc
or
inc
push
mov
movs
and
fnstsw
cdq
(bad)
sub
jp
mov
out
push
sub
stc
mov
pop
xchg
jnp
in
push
pop
dec
clc
(bad)
sub
mov
lahf
arpl
movs
out
jecxz
jge
movs
push
dec
test
leave
stos
pop
cmp
mov
call
(bad)
out
sub
mov
inc
adc
jle
fadd
mov
imul
aaa
pop
gs
es
jg
pop
les
mov
mov
in
aaa
mov
push
mov
stos
mov
ror
(bad)
aam
and
lods
ret
push
outs
xor
mov
fnsave
cmp
dec
gs
sbb
push
mov
loopne
xor
iret
add
jmp
cwde
fxch
mov
xor
jmp
sbb
jg
ja
sahf
pop
ror
push
jo
clc
mov
fdiv
(bad)
in
xor
enter
or
shl
cmc
adc
push
xchg
mov
lea
push
ss
stos
ss
mov
pop
sub
push
jl
fidivr
adc
and
arpl
and
daa
mov
loop
outs
mov
in
mov
not
cld
mov
or
xchg
mov
pop
call
cmp
lods
inc
repnz
rcl
xor
or
daa
and
aam
int3
push
add
xchg
movs
or
retf
js
jmp
push
jmp
