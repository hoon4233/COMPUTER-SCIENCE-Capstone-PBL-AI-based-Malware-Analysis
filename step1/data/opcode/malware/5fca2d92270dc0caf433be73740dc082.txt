call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
pushf
adc
stos
or
jns
mov
stos
mov
retf
ja
mov
add
into
das
hlt
arpl
jg
outs
and
or
xchg
clc
shl
push
jge
(bad)
aaa
add
jecxz
and
push
sub
mov
rcr
inc
pop
jg
(bad)
lahf
add
inc
pop
(bad)
pop
sbb
enter
das
sbb
add
call
rol
ins
mov
pop
test
mov
fild
jle
mov
aad
sub
lea
inc
cdq
jae
rol
leave
mov
icebp
push
xor
leave
and
imul
sbb
shl
lahf
adc
jmp
popa
inc
aad
adc
or
cli
(bad)
sbb
or
dec
stos
cmp
test
or
ret
mov
ins
push
lods
xchg
and
shl
sbb
fidivr
cmc
aad
sbb
into
cmps
push
hlt
push
sub
adc
dec
cmp
fisttp
pop
(bad)
movs
add
jmp
iret
mov
xchg
sbb
sbb
mov
jmp
inc
mov
cdq
jbe
mov
movs
and
and
mov
or
repz
call
in
dec
stos
xchg
or
mov
or
(bad)
sub
or
(bad)
mov
xchg
add
cmp
pop
ins
pop
mov
jmp
dec
mov
lock
dec
push
outs
dec
mov
sti
fdivr
and
adc
add
movs
imul
sahf
std
lds
push
push
xor
pop
retf
jmp
fld
lea
pop
xchg
push
pop
dec
dec
enter
fs
adc
or
inc
(bad)
arpl
jl
add
sbb
enter
into
das
mov
cld
sbb
xlat
shr
loop
ja
cli
xlat
mov
ret
leave
lods
mov
xlat
outs
int3
push
sub
cs
cld
lods
fidivr
scas
jmp
push
adc
xor
retf
(bad)
imul
sbb
adc
aad
fisub
rcr
push
cmps
fwait
loop
ja
imul
iret
xlat
rol
in
cmp
fmul
or
mov
push
xchg
push
push
das
push
imul
sbb
imul
pop
cld
push
fimul
rcl
or
jno
imul
pop
pop
iret
shl
(bad)
retf
imul
sub
xor
adc
push
push
cmps
jp
adc
scas
xchg
test
sub
std
or
ins
xchg
push
mov
ret
fdivr
mov
retf
sbb
cmp
hlt
push
adc
adc
ror
inc
(bad)
loop
cmps
mov
push
shl
das
mov
cld
je
xlat
daa
scas
push
sub
dec
jns
jns
iret
shl
call
stos
mov
cdq
or
retf
xchg
call
rcl
sbb
push
pushf
pop
ffreep
pop
icebp
rcr
ror
sbb
push
fcomp
mov
popf
xor
cs
icebp
shr
push
fcomp
mov
popf
xor
sub
icebp
rol
icebp
rcl
sbb
and
push
ret
sub
icebp
inc
stos
fcom
inc
pop
fcomp
mov
fcomp
mov
in
mov
fcomp
mov
fcomp
mov
(bad)
sbb
inc
push
jnp
xchg
sub
(bad)
fcomp
mov
fcomp
mov
popf
push
ret
and
icebp
rcr
ror
popf
push
fbld
icebp
rcr
dec
call
adc
pop
mov
inc
rcr
mov
fcomp
mov
popf
sbb
push
fcomp
mov
fcomp
mov
popf
adc
rcl
sbb
sbb
sbb
push
adc
mov
fcomp
mov
in
mov
fcomp
mov
fcomp
mov
popf
adc
es
inc
fucomip
push
add
popa
fistp
fsub
fcomp
mov
mov
mov
mov
inc
shr
sbb
push
fcomp
mov
test
pop
or
icebp
rcr
ror
sbb
push
loopne
mov
fcomp
popa
pop
fcomp
mov
aad
mov
mov
mov
pop
push
mov
fcomp
mov
fcomp
mov
in
test
frstor
fcomp
mov
fcomp
mov
in
mov
fcomp
mov
fcomp
mov
xchg
sbb
call
jne
mov
push
fld
or
dec
inc
mov
icebp
rol
dec
jmp
xchg
and
icebp
shl
jg
lods
push
pop
mov
xor
dec
lock
dec
imul
ss
sub
pop
dec
mov
fdivp
and
repz
sti
cmp
not
pop
lahf
movs
push
pop
push
jno
push
push
loop
add
out
jmp
scas
in
push
scas
pop
adc
shl
movs
arpl
cmp
(bad)
push
scas
test
push
int
or
pop
ficom
rcr
mov
mov
fwait
not
hlt
sbb
scas
loop
adc
hlt
sub
fidiv
xchg
xchg
push
xchg
jae
mov
scas
inc
sub
add
sbb
icebp
movs
jmp
sub
push
sub
fld
xor
fidiv
das
xchg
and
bound
lods
dec
repz
imul
retf
xchg
shl
and
imul
dec
mov
pop
push
mov
push
ret
cs
adc
mov
retf
movs
imul
test
adc
pushf
rcl
push
jb
mov
fstp
xlat
daa
pop
xchg
xlat
push
and
cmp
(bad)
fidiv
bound
sysret
xchg
xlat
push
movs
fwait
dec
ins
xchg
push
fisub
inc
sub
push
mov
rcr
or
xchg
test
movs
mov
adc
push
sub
icebp
push
cs
xor
push
pop
or
sti
push
or
adc
push
push
adc
adc
push
adc
push
adc
jo
mov
adc
bound
iret
in
pusha
mov
adc
push
adc
or
and
push
adc
fsubr
mov
adc
push
adc
push
ret
add
adc
cli
pop
pop
or
ds
or
adc
fcom
push
adc
add
addr16
push
inc
or
adc
push
adc
push
adc
mov
mov
shr
inc
push
inc
push
lds
fnstcw
lds
jno
data16
cli
mov
sub
dec
or
fwait
pop
ins
dec
cli
mov
jmp
adc
push
sbb
lea
movlps
push
sbb
pop
xchg
mov
hlt
hlt
pop
adc
push
sbb
xchg
push
sbb
adc
fimul
xlat
push
xchg
pop
push
sbb
pop
sub
fcmovnbe
mov
ds
push
dec
fst
xchg
cmp
jo
sub
lods
and
fimul
icebp
repz
ins
mov
push
push
sbb
pop
push
sbb
loop
mov
xchg
xlat
ror
xor
sbb
ss
pop
xchg
xlat
push
imul
xlat
rol
shr
inc
fwait
lods
mov
test
dec
xchg
dec
call
(bad)
and
cld
or
(bad)
in
push
jbe
not
imul
cmp
and
fsub
pop
push
sub
and
lahf
mov
mov
aad
push
sub
rcr
dec
xor
popf
add
(bad)
shr
adc
pcmpeqw
mov
repz
mov
dec
imul
adc
repnz
dec
in
inc
jne
and
jb
xor
xchg
ror
cmp
mov
lds
dec
int3
and
idiv
dec
cmp
jae
pop
rcr
fistp
mov
icebp
jb
jae
adc
and
jle
xchg
bnd
jns
sbb
pop
stc
(bad)
jnp
jno
and
jl
enter
es
mov
int
lods
or
bnd
ss
iret
out
(bad)
sar
sbb
mov
jp
(bad)
mov
cmps
imul
mov
adc
movs
pop
push
and
aam
push
mov
inc
aad
call
sub
jp
fsub
mov
xlat
les
pusha
push
push
retf
xchg
iret
xlat
in
popa
and
lea
push
imul
iret
cli
xchg
enter
in
(bad)
cmps
rol
pop
sbb
mov
mov
fsub
xchg
cmp
xor
mov
into
test
mov
xor
hlt
int3
mul
into
hlt
and
dec
cwde
je
xchg
mov
es
into
hlt
and
dec
mov
mov
es
dec
clc
je
xchg
mov
es
into
test
mov
xor
hlt
int3
mul
into
mul
into
test
mov
xor
hlt
int3
mul
into
hlt
and
dec
mov
push
lods
mov
cmp
mul
mov
mov
push
aam
mov
xchg
inc
idiv
shl
and
into
cmc
and
into
stos
and
bnd
mov
into
pushf
and
into
idiv
gs
and
into
les
into
xor
gs
js
inc
cli
inc
es
mul
mov
into
loop
mov
into
jmp
add
jbe
rol
mov
cmp
xor
and
retf
lods
idiv
(bad)
int3
mul
into
mul
into
retf
cmps
idiv
aam
mul
into
mul
into
shl
bound
rol
mov
dec
mov
fbld
cmc
mov
mov
(bad)
int3
mul
into
retf
cmps
idiv
in
cmc
and
into
lods
ins
push
sbb
mov
push
adc
cmp
fcmovbe
dec
xchg
dec
mov
hlt
push
mov
xchg
mul
mov
into
retf
cmps
idiv
mov
into
mov
mov
mov
pusha
sti
in
sub
repnz
sub
inc
jge
xchg
xchg
or
imul
int3
mul
into
hlt
and
dec
fiadd
mul
mov
into
mov
cwde
(bad)
mov
fsubr
xchg
sbb
sti
mov
add
fmul
mov
mov
aam
mul
dec
pushf
and
or
xchg
xchg
outs
and
mul
into
xchg
and
dec
sub
clc
jb
pop
cld
push
test
mul
into
mul
dec
xchg
and
mov
sub
into
mul
into
mov
cmp
xchg
dec
mov
adc
cmp
mov
push
fcomp
les
mov
xchg
pushf
push
leave
mov
imul
xchg
and
dec
sub
clc
jb
pop
lock
dec
ret
push
int3
mul
into
mul
into
enter
ins
sti
les
test
xor
and
into
xor
gs
cwde
gs
push
loopne
or
movs
int3
mul
into
mul
into
lea
cmps
mov
es
into
movs
fs
mov
imul
cmp
jmp
imul
jl
hlt
cmp
imul
or
lea
pop
pop
repnz
stos
call
and
fisub
pop
shr
and
sbb
sub
xchg
push
mov
call
xchg
mov
cmc
and
mov
push
mov
pop
add
mov
leave
stos
xor
mov
cs
inc
ror
pop
mov
jb
pop
ror
je
mov
jae
push
push
(bad)
retf
(bad)
scas
cld
(bad)
repnz
ret
cmp
jb
pop
push
into
das
mov
push
std
and
jle
das
mov
jecxz
sbb
add
into
xchg
leave
xchg
cmp
push
das
repnz
out
lock
or
mov
cwde
and
dec
xor
inc
push
xchg
and
neg
fisub
stos
add
inc
cmp
pusha
push
neg
xor
sub
(bad)
mov
pop
loope
and
sub
adc
jo
dec
bnd
xor
stos
call
and
add
inc
cmp
pusha
jl
ja
retf
or
stc
xlat
cmp
or
and
mov
hlt
xor
stos
mov
mov
jb
mov
mov
inc
leave
mov
or
cmps
in
leave
mov
or
cli
sub
xchg
sub
cmc
sub
xchg
sub
xchg
dec
or
clc
sub
xchg
sub
xchg
jb
xchg
imul
test
sub
xchg
sub
xchg
or
sub
mov
or
cli
xchg
pop
retf
inc
test
sub
xchg
or
xchg
push
mov
xchg
dec
sub
jmp
sub
movs
leave
loopne
pop
fmulp
inc
inc
enter
nop
stc
sub
xchg
fs
aaa
inc
inc
lds
addr16
fisub
or
cmps
in
leave
mov
inc
test
dec
or
cli
sub
xchg
sub
xchg
dec
or
nop
sub
cli
sub
xchg
sub
jmp
sub
xchg
sub
xchg
push
xchg
arpl
xor
mov
sub
clc
sub
xchg
sub
xchg
xor
or
mov
sub
xchg
sub
xchg
dec
or
into
inc
popa
xor
sbb
enter
xchg
sub
xchg
dec
or
cli
imul
ficomp
pop
or
ret
leave
mov
or
cli
imul
jmp
mov
test
sub
xchg
sub
xchg
sub
out
sub
xchg
gs
mov
outs
or
cmps
in
retf
mov
or
out
sub
cli
sub
xchg
sub
xchg
jne
xchg
sub
xchg
or
inc
enter
stc
clc
sub
xchg
or
inc
enter
xchg
or
mov
into
push
and
leave
mov
xor
loopne
cs
mov
jb
fdiv
inc
int
dec
inc
leave
mov
jne
mov
inc
mov
mov
inc
aad
out
leave
mov
mov
mov
or
out
add
or
mov
fwait
xchg
cmp
iret
fs
imul
scas
sub
pop
push
into
rol
repnz
push
scas
and
inc
jne
rcl
jmp
mov
mov
pop
xchg
iret
or
jmp
pop
rcr
jge
xchg
sbb
into
mov
movs
inc
cmps
mov
lock
out
jl
ret
stos
pop
mov
xchg
jg
div
rol
and
sbb
mov
(bad)
in
and
mov
pushf
daa
pop
cmp
dec
mov
xchg
(bad)
xchg
mov
(bad)
iret
sbb
retf
data16
imul
sbb
std
push
dec
jmp
xor
pop
pop
xor
jle
leave
aas
push
jge
cmps
repz
pop
jge
cmp
pop
lea
pop
jno
and
or
jle
das
sti
ret
dec
and
or
test
sub
fdiv
outs
jo
pop
ror
xor
jl
icebp
call
pop
ror
test
mov
pop
dec
fwait
sub
shl
mov
and
lods
pop
and
(bad)
test
cmp
xor
jns
aas
and
stos
int3
hlt
mov
(bad)
add
ss
fidiv
add
ss
fidiv
mov
jmp
(bad)
cli
icebp
sbb
(bad)
jmp
mov
retf
into
jno
cmps
push
in
xlat
pop
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
mov
xchg
and
mov
rcr
idiv
sbb
pop
jmp
mov
daa
in
jb
push
pop
dec
pop
sub
push
xchg
push
in
push
push
sub
pop
sub
push
adc
mov
sbb
in
jb
push
pop
dec
pop
sub
push
adc
sub
sub
push
adc
imul
cmps
mov
sbb
in
jb
push
pop
dec
pop
sub
push
xchg
xor
push
push
sub
pop
sub
push
adc
imul
(bad)
mov
sbb
in
jb
push
pop
dec
pop
sub
push
xchg
sub
sub
push
adc
in
xchg
pop
maxps
out
mov
jb
sub
push
adc
adc
push
push
sub
pop
sub
push
xchg
imul
scas
mov
sbb
in
jb
push
pop
dec
pop
sub
push
xchg
sub
sub
push
adc
in
mov
repz
jae
add
fstp
or
addr16
cmp
mov
out
sub
pop
sub
push
xchg
fs
pop
repnz
retf
sbb
sbb
js
adc
mov
sbb
mov
jge
xor
pop
es
pop
sub
push
adc
daa
in
push
cmp
dec
cmp
in
push
adc
sub
push
cmp
sub
push
adc
fs
dec
data16
push
adc
ins
in
push
shr
cmc
inc
sub
push
adc
sub
push
add
sub
push
adc
and
adc
addr16
retf
cmp
sbb
in
push
adc
sub
js
sub
sbb
in
push
adc
sub
adc
je
sbb
je
int3
sub
add
in
push
adc
(bad)
in
add
sub
sub
push
adc
outs
in
add
daa
push
adc
jge
push
xchg
sub
push
adc
in
sbb
or
repz
jnp
mov
jmp
xchg
xchg
pop
sub
push
adc
inc
lods
test
sub
push
adc
jbe
ds
xor
push
in
push
xchg
js
adc
mov
sbb
dec
mov
mov
repz
pop
es
pop
sub
push
adc
push
push
pop
sbb
adc
mov
cs
mov
mov
in
mov
cmp
add
xor
pop
push
dec
or
in
push
xchg
gs
push
fld
sbb
in
push
retf
mov
fwait
out
dec
push
sub
push
adc
xor
pushf
test
out
sub
pop
sub
push
adc
je
adc
add
mov
sbb
or
repz
repz
or
jnp
xor
pop
out
mov
push
dec
pop
stos
mov
push
adc
call
(bad)
jno
ficomp
addr16
xchg
pop
ins
addr16
repz
mov
xchg
fistp
add
ss
pop
xchg
xchg
xchg
mov
mov
xchg
mov
push
push
repnz
mov
icebp
inc
sbb
sahf
rcr
cmps
mov
and
push
mov
sub
rol
and
jbe
lea
popf
and
xchg
ins
sub
or
mov
dec
shl
mov
ret
imul
sbb
xchg
retf
cmp
cli
cmp
arpl
enter
mov
push
push
jo
pop
push
xchg
(bad)
mov
push
xor
shl
cmp
div
mov
xlat
dec
mov
bound
push
ja
iret
out
dec
repnz
out
das
xchg
cmps
xchg
cmp
dec
jne
jo
stc
mov
and
push
icebp
or
jae
pop
rcr
iret
jmp
adc
repnz
frstor
jl
(bad)
xchg
leave
add
test
sub
fcom
test
lahf
inc
repnz
pop
in
(bad)
jno
mov
daa
sahf
mov
xchg
fbld
ret
call
mov
sub
xchg
or
fsub
push
mov
and
push
push
fsub
imul
test
fisub
mov
pop
imul
inc
mov
ja
das
mov
mov
jg
fisubr
xor
or
xor
inc
mov
hlt
movs
pop
mov
jp
ss
test
xor
mov
ss
or
mov
or
pop
mov
ss
or
mov
pop
jge
loopne
lods
mov
mov
inc
inc
mov
loopne
mov
sti
jl
cmp
add
ins
mov
js
pcmpgtd
daa
repnz
repnz
repz
xchg
pop
(bad)
xchg
mov
mov
pop
shl
pushf
lods
mov
push
ss
cmc
fwait
mov
in
jmp
mov
pop
push
adc
imul
jo
cdq
inc
lock
jl
sbb
cld
cmps
add
outs
gs
imul
nop
jecxz
mov
data16
cmps
pop
ja
inc
loope
cmc
dec
sbb
mov
inc
loopne
popf
jmp
lods
jb
sbb
xchg
mov
mov
mov
or
out
jb
xor
mov
pop
cld
pop
xor
loop
aaa
push
cwde
stos
pop
xchg
mov
mov
in
sub
push
jno
cmc
inc
call
or
out
push
mov
inc
int
test
pop
imul
push
cmp
repnz
out
out
xlat
push
sub
sbb
inc
sbb
inc
stos
mov
xchg
mov
fiadd
mov
imul
mov
xchg
bt
fs
push
daa
pop
mov
cmp
pop
loop
sbb
jns
mov
je
in
es
test
push
ja
imul
add
mov
call
repz
xchg
ficomp
jno
dec
enter
dec
repz
add
int
add
mov
aam
xchg
aam
xchg
mov
aam
(bad)
add
mov
call
mov
pop
add
(bad)
add
mov
add
xchg
push
iret
push
clc
xchg
test
aam
xchg
cmp
mov
call
icebp
fwait
add
aas
fld
xchg
aam
xchg
xchg
test
aam
xchg
pop
add
cdq
aam
xchg
retf
jno
adc
repz
xchg
ret
in
add
icebp
(bad)
add
mov
call
repz
(bad)
mov
mov
icebp
loop
enter
xor
data16
sbb
gs
push
push
call
fucomi
nop
outs
pop
xchg
rcr
loope
setp
adc
in
pop
in
loope
setp
adc
cmc
rcr
loope
setp
imul
lods
push
(bad)
stc
sbb
fisttp
inc
mov
sbb
sbb
dec
test
xchg
addr16
popf
push
dec
(bad)
fwait
jns
cmps
pop
inc
lahf
fidiv
push
lds
push
mov
icebp
clflush
push
push
je
test
int
inc
jp
test
inc
clc
mov
in
imul
iret
lods
push
lods
cs
sahf
mov
repnz
inc
mov
xchg
shl
jne
icebp
dec
inc
mov
jnp
shl
cmc
inc
movs
lods
pushf
xlat
cwde
or
inc
mov
dec
popf
cmp
lods
sub
cmps
or
xchg
es
mov
mov
hlt
push
or
jnp
movs
mov
xchg
gs
sbb
inc
cmp
ds
add
loop
jo
mov
jae
call
inc
xchg
out
scas
ds
adc
jmp
xor
push
icebp
repnz
lods
mul
sbb
jb
or
xchg
xor
sub
inc
sbb
lods
pop
in
fwait
mov
jecxz
aas
dec
repnz
gs
in
dec
mov
addr16
dec
aad
loop
addr16
mov
out
inc
loop
inc
push
icebp
dec
addr16
adc
hlt
out
xlat
mov
adc
scas
adc
pop
inc
jb
or
inc
outs
(bad)
mov
push
xchg
adc
call
xchg
aam
and
aam
and
aam
jae
mov
push
ins
xchg
(bad)
push
and
or
fadd
ins
call
and
aam
and
aam
jae
ret
sbb
and
push
and
call
fcom
sub
jnp
pop
push
ins
mov
call
stos
aam
and
aam
and
aam
and
sbb
call
xchg
call
push
and
(bad)
lea
cmps
mov
sbb
push
and
ins
mov
xchg
mov
sbb
and
ins
(bad)
call
xchg
fwait
sbb
pop
dec
or
call
xor
int
cs
ins
mov
push
and
aam
and
mov
shl
jmp
xchg
mov
cld
xchg
or
jnp
call
fwait
lea
ins
xchg
call
xchg
sbb
push
and
ins
mov
xchg
aad
fwait
sbb
(bad)
dec
sbb
adc
ins
jbe
push
ins
mov
push
and
push
ins
stos
aam
and
aam
and
cdq
mov
sahf
call
fcom
push
and
aam
and
leave
cwde
dec
ins
xchg
addr16
pop
adc
aam
and
aam
jmp
ins
mov
call
inc
test
push
and
aam
and
ins
xchg
or
cmp
loopne
call
fcom
pop
and
push
jnp
(bad)
push
and
ins
and
cmp
fcomp
add
pop
jge
ins
mov
push
and
xlat
lods
fcomp
push
and
aam
and
ins
ins
mov
call
neg
and
aam
and
aam
iret
pop
fist
(bad)
cmp
fcom
fwait
inc
pop
cwde
push
and
push
and
aam
iret
pop
push
push
ins
cli
aam
and
aam
and
push
ins
mov
push
and
push
ins
cli
aam
and
aam
and
aam
and
ins
ins
mov
call
aaa
fwait
xor
lea
in
aam
and
aam
iret
fld
push
ins
xchg
aam
and
aam
fisttp
and
aam
and
aam
ret
fst
cmp
repz
loop
lea
in
aam
and
cmp
adc
adc
and
aam
sahf
fisubr
call
gs
cwde
sbb
cwde
push
and
aam
and
js
test
fwait
call
(bad)
out
sbb
cmp
aam
and
aam
and
cmp
inc
push
ins
mov
aam
and
lea
mov
pop
test
rcr
outs
ins
push
cmp
rcr
fwait
loop
sub
ss
sbb
inc
rol
sbb
inc
push
sbb
push
lods
sbb
inc
push
sbb
push
sbb
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
adc
sbb
xor
stc
ins
repz
pop
mov
pushf
lods
mov
push
call
cmp
pop
dec
fild
jb
adc
popa
push
jne
jae
scas
inc
test
dec
sbb
lods
dec
lods
sbb
xchg
mov
sbb
and
scas
dec
push
test
div
popf
jbe
and
push
bound
xor
mov
mov
mov
cmp
inc
popf
out
lods
pop
test
pop
mov
pop
xlat
add
in
mov
inc
loope
mov
sbb
into
addr16
inc
mov
fwait
pop
call
inc
xor
sbb
pop
mov
xchg
jb
xchg
inc
loopne
pop
out
inc
mov
mov
scas
ins
or
jb
pop
pop
jg
xchg
pop
or
adc
mov
jmp
pusha
jge
mov
dec
inc
outs
mov
sbb
(bad)
mov
mov
bound
or
ja
add
dec
jbe
stc
movs
jle
xor
jo
lock
in
push
aaa
pop
loop
adc
mov
ja
jne
out
mov
mov
push
sbb
sbb
inc
ins
push
sar
gs
mov
data16
push
stos
in
imul
sub
and
sub
jmp
sbb
arpl
sbb
push
mov
push
mov
cmps
sub
mov
mov
aaa
fwait
and
cmp
add
jnp
dec
fwait
and
ins
jecxz
out
push
sti
push
mov
sbb
arpl
inc
retf
in
add
and
jl
sti
lock
ins
lock
ins
shl
ds
lds
sub
xor
in
and
cld
mov
sub
xor
sti
mov
mov
sub
das
mov
sti
lea
ret
push
arpl
cld
inc
in
mov
cmc
xor
sti
mov
ds
mov
xchg
sub
and
sub
ins
enter
jo
lds
(bad)
ins
lock
ins
jbe
(bad)
out
aam
int3
das
cmp
dec
mov
lock
gs
ins
test
int3
jb
lds
lock
(bad)
ins
mov
and
fld
(bad)
ins
lods
gs
int3
jb
lds
lock
(bad)
ins
mov
(bad)
ins
mov
daa
or
outs
push
popa
cmp
sub
mov
mov
sub
ins
lock
ins
icebp
gs
and
arpl
lock
ins
lock
ins
fsub
ins
mov
inc
enter
mov
daa
(bad)
lock
lock
ins
aam
(bad)
sub
sub
lock
ins
lock
ins
sahf
gs
sbb
xor
(bad)
ins
lock
ins
aam
(bad)
das
push
xlat
fnsave
xor
sbb
lods
dec
fnsave
rol
pushf
out
jmp
mov
sub
pushf
out
sub
and
out
lds
sub
aas
fnstenv
jecxz
inc
xor
mov
fld
pop
inc
jo
adc
mov
cld
push
sbb
inc
inc
aaa
das
retf
jne
imul
je
dec
mov
inc
or
push
inc
ds
inc
popf
sub
lods
inc
lods
sbb
and
mov
leave
inc
jbe
mov
push
pop
mov
push
retf
mov
mov
jle
sbb
in
mov
popf
cmps
jp
push
inc
les
jb
pop
mov
mov
inc
push
cmc
fwait
mov
push
loop
push
lahf
mov
mov
lods
std
mov
data16
stos
push
adc
mov
mov
xor
clc
or
in
pop
mov
jbe
adc
add
stos
add
xchg
test
inc
pop
jmp
out
fistp
pop
inc
dec
cmps
fistp
stos
mov
(bad)
jne
sbb
inc
je
xchg
jno
xor
dec
call
mov
push
mov
add
pop
fld
mov
(bad)
push
sub
fidivr
les
pop
and
push
push
jno
out
in
inc
adc
add
mov
out
mov
pop
popf
push
jmp
jmp
addr16
les
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
daa
jmp
jo
scas
int
inc
cmps
shl
fidivr
leave
adc
(bad)
inc
xchg
aas
add
les
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
out
add
xchg
fild
xchg
rol
xchg
cmps
add
xchg
mov
add
xchg
and
pusha
xchg
out
add
xchg
fild
xchg
rol
xchg
cmps
add
xchg
mov
add
xchg
mov
add
jl
sti
add
xchg
iret
add
xchg
iret
add
xchg
mov
add
xchg
xlat
add
xchg
jg
aam
imul
out
add
xchg
fild
xchg
rol
xchg
cmps
add
xchg
mov
add
xchg
and
push
xchg
stos
add
xchg
mov
or
mov
add
xchg
daa
add
lock
jmp
adc
inc
xchg
xlat
add
xchg
jg
push
xchg
cmps
add
xchg
mov
add
xchg
mov
add
xchg
daa
add
or
and
je
mov
add
xchg
iret
add
xchg
out
add
xchg
inc
xchg
mov
add
xchg
aas
add
xchg
jecxz
adc
out
add
or
iret
add
xchg
mov
add
xchg
jg
loopne
jmp
pusha
xchg
mov
add
xchg
cmps
add
xchg
mov
add
xchg
daa
add
les
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
inc
xchg
inc
xchg
xlat
add
xchg
inc
xchg
rol
xchg
inc
xchg
out
add
xchg
mov
add
xchg
fild
xchg
test
xchg
iret
add
xchg
dec
add
les
imul
xchg
xlat
add
xchg
dec
add
xchg
pop
add
or
cmps
add
xchg
mov
adc
add
rol
xchg
xlat
add
xchg
mov
xchg
jmp
js
mov
add
xchg
out
inc
xchg
sub
inc
xchg
dec
movs
in
imul
call
dec
mov
and
sbb
ret
lds
xor
dec
fwait
mov
or
imul
mov
mov
imul
xchg
jle
mov
imul
ret
xchg
ror
adc
push
mov
mov
dec
mov
imul
fsub
adc
add
les
or
test
mov
jo
add
fdiv
mov
and
dec
aam
and
les
into
in
xchg
mov
adc
jmp
dec
mov
and
dec
clc
pushf
movs
push
les
iret
les
clc
lds
sbb
mov
and
out
xchg
daa
add
retf
dec
inc
mov
add
mov
and
dec
les
cmps
in
sti
xchg
jmp
in
dec
movs
in
jp
add
xchg
jmp
mov
add
fdiv
mov
and
sbb
or
add
mov
popa
dec
(bad)
cmps
in
call
mov
add
fdiv
mov
and
cmps
or
imul
pusha
movs
mov
xchg
adc
fsubr
mov
and
dec
mov
or
fsub
add
mov
and
adc
add
jp
add
fsubr
mov
and
out
mov
imul
add
dec
(bad)
cmps
in
and
push
dec
pop
add
fdiv
retf
dec
inc
jo
add
mov
and
adc
pop
lds
mov
and
add
mov
and
adc
pop
lds
mov
and
dec
lods
fsub
dec
mov
imul
fsub
add
mov
add
fdiv
mov
and
dec
inc
js
add
mov
and
dec
les
es
pop
lds
mov
and
dec
inc
push
or
fsub
dec
les
es
pop
lds
mov
and
add
rcr
and
add
mov
jns
mov
and
dec
cmps
mov
mov
imul
movs
and
inc
inc
mov
mov
mov
inc
jmp
mov
pop
add
xchg
jmp
or
add
fdiv
mov
and
adc
jo
add
sub
fsubr
mov
and
dec
les
inc
adc
mov
and
adc
push
int3
xchg
ret
shl
jo
add
mov
add
adc
jmp
dec
jmp
dec
mov
and
xor
retf
mov
inc
ret
in
xchg
add
inc
loope
xchg
aaa
dec
mov
and
dec
lock
out
xchg
xor
xchg
lods
mov
mov
dec
mov
imul
xchg
ds
(bad)
sbb
mov
and
std
adc
jmp
dec
mov
and
int
xchg
ds
(bad)
sbb
mov
and
fst
xchg
ds
(bad)
sbb
mov
and
dec
les
es
pop
lds
mov
and
dec
inc
fsub
dec
xchg
fsub
add
mov
adc
fsub
add
in
xchg
xchg
pop
push
xchg
imul
jne
add
cmps
imul
test
add
cmp
push
jbe
add
fdiv
mov
and
dec
clc
lahf
movs
push
les
pop
repz
jne
add
scas
imul
xchg
jnp
inc
loop
add
mov
and
retf
rcl
jl
adc
adc
jo
add
sub
fsubr
in
fsub
add
sub
fsubr
repnz
out
xchg
push
movs
mov
inc
imul
xchg
jecxz
adc
jmp
lods
cmps
outs
xor
or
imul
adc
pop
les
mov
mov
imul
xchg
ds
mov
imul
dec
daa
add
fsubr
mov
and
sahf
call
jge
lods
les
xor
cwde
xchg
mov
stc
lds
jmp
mov
or
dec
in
fsub
xchg
pop
xchg
dec
stc
sub
call
stc
lds
or
fsub
movs
cmp
add
dec
jmp
or
add
fdiv
mov
and
ror
jne
add
fsubr
mov
and
mov
stos
inc
inc
pop
add
xchg
rol
(bad)
mov
arpl
les
mov
ds
mov
imul
jb
add
mov
and
adc
mov
and
dec
mov
inc
cmps
loop
xchg
mov
add
fdiv
mov
and
dec
xor
shr
pop
add
push
and
dec
(bad)
fsub
test
xchg
(bad)
dec
dec
xchg
dec
lods
mov
lds
mov
and
dec
push
push
and
(bad)
fiadd
or
cdq
call
inc
lahf
inc
mov
xchg
pop
cmp
adc
add
(bad)
mov
and
dec
push
pop
es
mov
adc
fsub
add
mov
ins
(bad)
sar
lds
mov
and
dec
inc
inc
daa
out
xchg
mov
add
fdiv
mov
lds
dec
mov
and
dec
inc
xor
or
add
fdiv
out
and
add
in
xchg
fild
cmp
ret
loope
xchg
aaa
dec
mov
and
ror
jne
add
fsubr
mov
and
dec
or
inc
dec
mov
and
add
and
movs
and
jmp
pop
jmp
mov
or
dec
mov
and
pop
test
pop
add
xchg
call
add
(bad)
mov
and
dec
lods
fsub
dec
mov
imul
jnp
add
fsubr
mov
and
dec
les
push
add
mov
and
in
mov
and
dec
(bad)
fsub
add
fsubr
(bad)
fsub
dec
mov
imul
inc
sti
loop
xchg
or
fsub
dec
les
mov
and
loope
add
fsubr
mov
and
mov
in
jnp
inc
cmp
add
inc
jb
add
(bad)
sbb
mov
and
cmps
mov
inc
imul
xchg
jmp
mov
imul
shl
movs
fs
add
push
push
add
mov
mov
dec
mov
imul
lock
inc
out
or
add
fsubr
retf
dec
inc
shl
fsub
add
mov
xor
sbb
adc
mov
imul
and
mov
imul
movs
and
inc
les
lods
xchg
cmp
stc
(bad)
sbb
mov
and
mov
inc
xchg
imul
xchg
ds
lds
sbb
mov
and
dec
movs
pusha
and
or
add
fsubr
jmp
loop
xchg
sbb
fsub
pop
mov
imul
fs
loop
xchg
sbb
fsub
sbb
or
(bad)
inc
out
mov
add
fsubr
mov
or
add
xlat
fsub
loop
xchg
or
fsub
dec
fsub
dec
mov
imul
fsub
add
fsubr
mov
and
or
mov
imul
jb
add
mov
add
fsub
add
mov
imul
mov
or
mov
and
dec
movs
movs
and
inc
les
lods
xchg
cmp
stc
(bad)
sbb
rcr
and
add
mov
imul
fsub
in
lods
xchg
sti
mov
cmp
jmp
mov
lds
mov
and
dec
les
mov
dec
mov
and
adc
xchg
dec
movs
fs
add
ja
add
inc
xchg
lods
mov
mov
dec
mov
imul
fsub
add
mov
adc
fsub
nop
and
jne
add
lahf
imul
ds
mov
imul
mov
adc
pushf
movs
add
sar
fs
jp
add
shr
lods
add
push
xchg
jle
lds
add
sbb
lods
xlat
inc
xchg
movs
fisubr
push
xor
out
cs
pop
or
sbb
cdq
xchg
sbb
in
lahf
icebp
push
outs
mov
retf
jb
adc
inc
mov
inc
cdq
lods
sub
movs
aam
popf
mov
(bad)
jge
xor
ret
lds
leave
cmp
add
inc
cli
dec
xchg
dec
popf
aas
pop
lods
sbb
inc
movs
mov
xor
lods
sahf
push
jns
push
inc
cld
inc
mov
and
mov
popf
push
mov
jnp
call
mov
nop
add
lods
push
cmp
mov
mov
xchg
cmp
pop
mov
out
or
stc
jne
loop
jecxz
movs
mov
je
jmp
pusha
jl
mov
aas
mov
ds
sbb
cmps
sahf
jb
pop
sti
neg
pop
or
and
add
bound
add
add
xchg
stos
pop
(bad)
aaa
pop
mov
xchg
leave
or
out
inc
mov
loop
push
pushf
mov
jo
loop
aaa
push
ret
adc
ss
lahf
xlat
dec
pusha
jge
xlat
idiv
fs
loop
xchg
push
mov
fcomi
inc
call
das
pop
mov
pushf
dec
add
outs
test
cmc
std
scas
xchg
fist
jl
(bad)
push
jg
jno
jg
leave
cmp
cmp
sub
or
jg
dec
push
mov
je
out
cli
mov
mov
adc
mov
enter
sbb
aas
or
mov
out
adc
push
pop
pop
fidivr
aaa
mov
sbb
jae
push
jg
leave
iret
cli
jg
inc
mov
test
ja
dec
jle
dec
adc
or
out
fimul
jp
add
jp
pop
jmp
add
ja
dec
jle
enter
je
out
fimul
(bad)
xor
enter
sbb
jae
push
jg
add
aaa
adc
repnz
pop
bnd
or
adc
mov
sub
iret
adc
add
push
jo
repz
add
and
xor
into
aas
or
mov
cli
or
mov
adc
mov
enter
adc
into
aas
or
mov
jp
adc
jle
inc
ret
pop
jg
sbb
scas
xor
mov
mov
enter
inc
pop
retf
mov
retf
aas
mov
add
dec
repnz
ja
push
jg
add
(bad)
ss
es
pop
dec
cli
ja
dec
jle
sbb
mov
enter
pop
or
or
out
je
test
push
jle
je
rcl
mov
cmps
jp
stos
sub
ss
cmp
pop
fiadd
push
pop
fidiv
pop
dec
mov
jle
push
jmp
inc
mov
jle
inc
ret
sub
mov
add
jle
aaa
cli
ss
call
dec
mov
das
jl
jle
sbb
shl
push
jle
add
aaa
jo
mov
aas
pop
push
jle
sbb
scas
push
add
scas
jp
add
sub
aaa
fidiv
push
push
mov
add
idiv
ds
je
repnz
mov
aas
inc
add
dec
cs
sar
and
or
mov
push
inc
add
or
das
jmp
push
cli
ss
jmp
cmp
ins
pop
fidiv
js
jmp
aas
jmp
daa
mov
push
aas
fwait
and
add
push
enter
ins
adc
mov
add
jle
sbb
rcl
xor
stos
sub
and
ss
ss
push
mov
enter
adc
xchg
es
push
into
push
dec
push
jle
dec
dec
shl
cmp
add
jp
iret
sti
push
push
xor
xchg
into
add
xor
xor
cmp
mov
jl
jle
add
jmp
ss
rol
pop
fidiv
je
jmp
and
pop
pop
es
pop
dec
scas
pop
pop
push
jle
dec
dec
retf
mov
jle
add
jle
aaa
ret
push
scas
xor
jle
add
cmp
xor
out
push
mov
ins
push
jle
or
inc
mov
ins
push
jle
dec
cmp
jae
pop
mov
add
jecxz
js
jmp
push
jmp
push
jle
push
push
jle
dec
push
mov
inc
push
jle
ins
fisub
add
jle
ins
adc
push
jo
jle
pop
adc
adc
imul
push
add
es
push
push
fdivrp
add
inc
jle
je
div
sub
repz
enterw
push
aas
cli
add
sahf
mov
je
jle
js
cmps
ss
stos
xchg
fisubr
pop
push
jle
sbb
scas
xor
cmps
xlat
or
bound
mov
or
inc
bnd
dec
jmp
inc
fidiv
enter
dec
push
cli
mov
add
jle
je
loop
jo
mov
adc
push
inc
add
outs
enter
pop
fimul
fs
je
fidivr
das
cli
ss
cmp
jae
push
jle
add
(bad)
mov
push
enter
pop
ss
je
mov
dec
cli
push
dec
dec
scas
xor
and
fisub
shl
pop
add
jle
je
jmp
add
ss
mov
adc
and
and
pop
bnd
(bad)
call
jle
dec
jmp
dec
retw
scas
repz
adc
ret
mov
jp
add
adc
xor
push
inc
push
jmp
xchg
div
dec
add
out
and
bnd
bound
js
cli
push
pop
xchg
sti
xor
jmp
sbb
ss
cs
cmps
imul
mov
enter
ins
ss
enter
or
mov
cmp
and
adc
sbb
fimul
jo
jle
sbb
into
push
je
jle
sub
sahf
xor
loop
ss
mov
or
cli
subps
jle
inc
dec
mov
jle
inc
cli
cmp
mov
je
div
enter
add
jmp
sub
data16
jmp
or
sbb
daa
fidivr
mov
push
dec
add
push
enter
jo
mov
inc
es
xor
mov
mov
push
jle
je
mov
pop
cmp
dec
dec
jmp
add
push
enter
js
mov
add
mul
ins
push
jle
jo
jmp
ss
jle
xchg
test
jo
mov
pop
add
push
enter
pop
sbb
add
aas
cli
ss
data16
mov
js
jle
push
dec
ret
or
mov
add
(bad)
push
enter
push
dec
mov
enter
inc
push
loop
enter
pop
push
into
push
enter
sbb
out
push
loop
ins
es
inc
push
mov
pop
push
jle
pop
data16
xor
mov
ins
add
or
mov
or
jbe
xchg
mov
dec
add
or
cmp
ss
jmp
es
push
enter
jo
ret
dec
fidivr
push
jmp
xor
mov
out
data16
fidivr
pop
fisubr
push
daa
into
ja
mov
push
leave
inc
cli
ss
(bad)
add
xor
or
inc
mov
jnp
push
jle
pop
xor
push
pop
add
push
enter
or
mov
leave
inc
mov
push
xchg
xor
ror
or
add
pop
add
jle
sub
cmps
or
jle
js
cmps
jle
cmps
sti
xor
(bad)
or
retf
jle
add
cmp
and
adc
pop
mov
dec
mov
mov
ss
add
mul
mov
pop
push
jle
dec
dec
fimul
enter
jo
mov
inc
push
call
push
into
aas
pop
ds
sbb
scas
ss
push
out
xchg
adc
rcl
jo
jle
adc
(bad)
xor
xlat
jnp
add
push
push
jle
sbb
mov
jp
add
adc
pop
mov
jo
jmp
push
mov
cmps
retf
or
mov
jo
mov
jle
dec
cli
ss
mov
imul
mov
adc
es
sbb
mov
add
shl
inc
push
mov
cmps
jge
out
pop
je
jle
dec
push
retf
dec
jle
sbb
scas
or
shl
jle
add
sub
pop
(bad)
ss
push
cli
scas
push
xor
(bad)
enter
add
(bad)
call
jle
ins
push
out
jo
jle
push
xchg
out
jp
add
outs
enter
pop
xor
jle
add
jle
pop
ret
sbb
and
pop
mov
pop
push
jle
dec
cmp
bound
push
push
add
jle
sbb
xchg
add
ds
dec
push
fidiv
js
jmp
push
(bad)
push
enter
je
cli
mov
mov
jo
mov
pop
add
push
add
ret
push
jmp
es
ja
es
dec
dec
ror
add
jle
pop
dec
call
cs
add
ds
inc
or
or
retf
iret
jp
add
ss
dec
cli
out
dec
fiadd
pop
cmp
je
(bad)
ss
push
(bad)
test
daa
pop
ds
add
bound
cmps
scas
jle
add
push
enter
or
jmp
push
loop
or
ret
ds
sbb
rcl
psubd
adc
into
imul
cmps
push
sbb
dec
jmp
add
enterw
je
mov
sbb
inc
stos
cs
jg
aas
mov
add
out
dec
fisub
push
pop
cli
ss
mov
jge
(bad)
das
inc
ds
add
out
cmps
imul
jle
dec
push
mov
and
jecxz
jl
(bad)
outs
enter
pop
xor
dec
dec
cli
imul
adc
pop
sahf
push
sub
xor
loop
push
sbb
cli
cmp
and
sbb
(bad)
push
ds
xor
xlat
sub
lahf
push
sub
cmp
arpl
xor
into
or
mov
add
mul
pop
xchg
retf
push
sbb
into
ins
push
jle
add
stos
daa
js
jle
je
scas
or
mov
cmp
rsm
jp
dec
mov
enter
or
(bad)
adc
push
mov
or
cli
ss
push
mov
enter
js
mov
or
pop
stos
sub
addr16
aas
ins
ss
sbb
out
adc
adc
push
dec
ret
or
push
or
fisub
mov
jmp
scas
cmps
push
push
jmp
data16
jle
xchg
idiv
add
cmp
pop
ret
mov
aaa
add
mov
inc
repnz
outs
enter
ins
bound
ss
es
ins
push
loop
inc
cmp
aaa
or
mov
cmp
adc
or
cmps
or
imul
mov
push
jl
ret
dec
into
adc
xchg
xor
add
or
into
and
jle
add
push
enter
sbb
out
inc
push
cli
outs
ins
push
jle
je
cli
ja
data16
pop
dec
jmp
inc
jle
je
(bad)
bound
jae
add
jbe
dec
mov
ins
ds
pop
ds
dec
push
mov
push
jo
scas
jnp
push
jle
cmp
push
pop
add
or
cmp
jg
dec
jle
pop
push
mov
ss
mov
sbb
cli
sub
or
data16
mov
dec
add
pop
dec
cmps
xor
xchg
jp
add
push
add
out
sub
mov
enter
inc
or
and
jnp
jmp
leave
dec
scas
jnp
dec
jle
inc
push
mov
ins
ds
mov
inc
push
cli
stos
pop
push
loop
ins
ds
pop
push
jmp
add
aas
pop
push
jle
js
xchg
adc
xchg
jg
add
sbb
(bad)
adc
mov
ficom
add
mul
add
fisub
adc
call
jle
je
loop
jo
fisttp
dec
add
es
push
push
mov
push
xchg
or
jg
cmp
add
mov
inc
dec
loop
je
jle
sbb
xchg
dec
push
scas
aas
sbb
jle
dec
dec
call
dec
jmp
ds
push
enter
dec
adc
xchg
es
pop
fidivr
pop
xor
push
mov
scas
xor
jg
add
je
shl
dec
push
loop
add
jle
dec
push
retf
aaa
ret
mov
ss
add
out
push
cli
add
sbb
cmp
jle
stos
test
enter
jo
jle
dec
cs
call
jmp
pop
ret
push
mov
inc
push
into
bound
repz
xor
into
jecxz
add
fisubr
sbb
ins
adc
bound
repz
jo
jle
ins
push
scas
xor
jle
add
(bad)
enter
sbb
sti
inc
add
outs
sub
fcmovnbe
push
sbb
jmp
sub
bound
add
xor
adc
jnp
push
jle
push
xchg
mov
cli
popa
inc
mov
ins
push
jle
je
mov
enter
pop
call
leave
dec
fidivr
adc
jle
sbb
into
ss
es
pop
ds
push
daa
mov
jo
ret
rsm
ss
dec
mov
jno
mov
dec
es
sub
out
jle
add
jnp
or
dec
push
stos
push
jo
jmp
pop
add
add
jle
dec
push
cmps
push
jo
mov
ins
add
inc
push
fisub
jo
sti
jp
add
and
adc
push
pop
push
fidiv
pop
mov
add
add
imul
dec
dec
ror
add
bnd
daa
ficom
ins
push
scas
and
out
ds
add
aas
pop
push
jle
pop
dec
(bad)
ss
(bad)
scas
adc
aas
mov
or
mov
inc
push
jle
ins
cs
jne
into
aas
jo
jle
add
ret
ds
call
cli
jle
pop
jmp
dec
fidiv
fs
scas
inc
and
dec
cmp
and
jle
add
and
push
mov
push
push
mov
enter
ins
inc
jle
pop
dec
(bad)
and
pop
mov
dec
adc
jp
push
loop
enter
or
fist
jo
cli
cmp
push
fidiv
push
cmps
retf
add
enterw
push
daa
mov
jle
shr
or
out
push
jo
jmp
adc
jle
push
cli
push
sbb
cli
and
aaa
scas
ss
cli
sti
add
dec
jg
sbb
(bad)
ss
es
or
dec
jle
or
jmp
add
adc
sbb
call
es
dec
cmp
push
enter
js
jle
ins
data16
pop
cmp
cli
jno
into
pcmpeqb
jle
ins
cmp
adc
ja
ss
js
call
data16
test
retf
push
(bad)
xchg
jns
stos
addr16
jle
pop
push
scas
jnp
dec
jg
jo
mov
xchg
mov
enter
ins
ss
push
repnz
pop
push
jle
je
out
cli
push
dec
idiv
je
jle
pop
cmp
xor
cmp
jle
pop
data16
xor
and
fidivr
dec
cli
ss
ss
inc
push
jmp
data16
push
push
pop
lahf
push
sub
mov
ins
add
xor
inc
fidiv
jo
jmp
ds
pop
adc
xor
xor
sahf
ss
jmp
push
jle
je
into
pop
push
xor
pop
push
scas
add
into
mov
ins
add
mov
je
rol
pop
push
jle
dec
cmp
test
ret
cmp
jnp
adc
add
dec
retf
es
jle
dec
mov
xchg
pop
dec
into
or
jmp
dec
mov
add
push
jle
sbb
(bad)
pop
pop
push
jle
je
jmp
ss
xor
pop
cli
bound
ss
repnz
jbe
cmps
mov
pop
add
xor
mov
into
cmp
jle
add
cli
ss
push
jmp
push
jg
je
ret
xor
cmps
push
adc
aas
dec
dec
jle
je
into
ss
xor
or
jecxz
je
jmp
dec
call
or
sbb
imul
pop
or
js
out
sub
fist
adc
fisub
enter
or
jle
and
ss
mov
jge
(bad)
jp
daa
stos
jp
inc
jmp
adc
arpl
stos
addr16
push
retf
push
jle
je
div
pop
ds
add
out
push
sub
aas
js
jle
sbb
out
xor
jp
add
data16
fidiv
sub
mov
jo
retf
xchg
fbstp
jo
cli
stos
pop
adc
dec
jmp
cmps
out
pop
scas
or
pop
fidiv
add
mov
sub
jg
je
jmp
add
xchg
or
ret
ds
add
pop
fidiv
or
repz
mov
leave
dec
scas
aaa
sbb
mov
push
out
daa
add
jle
pop
dec
scas
daa
jo
jle
pop
data16
pop
mov
ficom
jo
mov
jns
xchg
add
es
pop
adc
jnp
xor
dec
push
mov
jo
jle
add
retf
into
(bad)
push
jo
jmp
ds
xor
mov
cmps
push
push
ret
aas
fidivr
sar
outs
enter
pop
cmp
cmp
mov
and
add
push
add
sahf
out
(bad)
cli
ss
push
mov
dec
push
out
test
inc
(bad)
enterw
add
retf
pop
cli
adc
cmps
push
jo
jmp
add
push
jl
fidivr
enter
add
mov
pop
mov
shl
enter
sbb
stos
xor
pop
into
ss
cli
stos
inc
cs
ja
push
jle
dec
dec
cli
ss
dec
jmp
push
(bad)
or
pop
ret
ret
dec
add
bound
push
add
jmp
add
pop
enter
dec
ss
out
dec
fisub
push
inc
mov
enter
jl
(bad)
mov
add
ret
dec
mov
inc
xchg
repz
add
and
pop
fisub
add
ror
pop
mov
jle
dec
push
mul
dec
jle
add
scas
xor
ret
out
jl
into
jle
daa
ret
and
add
xchg
push
js
jmp
ins
add
push
enter
ins
push
ret
dec
cli
ss
dec
mov
pop
push
ret
dec
cli
push
enter
pop
sub
sbb
push
stos
push
pop
xchg
mul
je
out
cs
push
stos
mov
push
aas
ret
xor
push
push
pop
jmp
dec
mov
xor
retf
add
into
das
jo
jle
add
(bad)
ss
(bad)
out
es
mov
rol
add
jle
pop
dec
into
or
ss
call
es
inc
push
stos
push
sbb
jmp
adc
call
out
ss
add
and
out
pop
enter
sbb
fimul
pop
ss
dec
ss
je
jle
sbb
retf
mov
jp
add
cmp
daa
cli
push
push
pop
mov
jo
fisubr
enter
push
dec
jmp
mov
or
cli
test
(bad)
call
jle
dec
push
mov
inc
push
cli
repz
push
jg
je
retf
aaa
fidiv
dec
inc
jmp
push
out
enter
pop
sbb
add
stos
jbe
dec
stos
jle
sub
enterw
dec
cmp
adc
xor
mov
cs
push
jle
dec
fimul
enter
fs
mov
inc
push
test
push
mov
enter
push
ds
ss
mov
add
inc
jle
dec
push
scas
pop
add
jle
je
mov
je
jle
add
scas
xor
mov
or
retf
push
jo
cli
or
adc
ss
fisub
add
jle
add
push
enter
push
inc
fidivr
push
cli
ss
call
inc
jg
js
mov
enter
ins
ss
ds
inc
or
ins
mov
ret
dec
add
adc
cmps
push
add
ret
daa
ret
inc
ret
aaa
fimul
pop
sbb
xor
aaa
fimul
jl
fimul
jo
mov
push
add
ja
push
jle
ins
xor
push
pop
mov
push
pop
add
jp
daa
call
push
test
mov
scas
or
mul
je
ficomp
enter
je
jle
sbb
rol
or
repz
xor
daa
into
xor
fiadd
enter
je
fidivr
push
cli
jp
ss
dec
ficom
sub
out
add
call
push
jle
ins
dec
out
ss
xor
jle
daa
cli
ss
and
mov
ds
jo
repnz
daa
stos
ss
cmps
dec
push
repnz
mov
leave
dec
imul
pop
push
out
enter
jo
cli
and
aaa
mov
pop
sbb
jle
ret
pop
add
push
pop
fiadd
enter
pop
dec
idiv
mov
adc
bound
xlat
cmp
fimul
pop
rcr
jp
add
(bad)
enter
ins
dec
scas
inc
loop
pop
es
pop
adc
and
retf
dec
add
daa
dec
dec
jle
pop
cmps
and
mov
stos
push
sub
fwait
daa
sub
data16
mov
and
enterw
jl
(bad)
mov
dec
push
jle
add
jmp
add
rcr
ds
jp
aas
fidivr
ss
add
sbb
or
ja
cmp
pop
adc
ss
push
ret
ds
data16
push
fisub
pop
into
jnp
dec
jle
dec
dec
mov
cmps
jmp
pop
add
sub
push
mov
dec
push
jmp
ds
dec
mov
pop
ret
push
add
(bad)
sbb
daa
stos
adc
push
push
add
and
aaa
mov
or
push
repnz
sbb
xor
div
inc
add
jg
es
je
mov
pop
ds
add
or
and
push
enter
pop
push
jle
sbb
scas
jnp
cmp
adc
mov
push
ds
pop
es
or
adc
cmps
push
dec
cmps
div
add
push
sub
jg
sub
cli
add
push
loop
dec
cmp
aas
ins
xor
sbb
not
or
cmps
push
add
fisubr
push
jle
push
aas
jmp
dec
cli
jle
inc
ret
ret
dec
add
and
adc
push
scas
adc
inc
add
push
ins
add
and
ss
mov
dec
push
repnz
or
data16
mov
enter
or
jle
inc
fidiv
ins
push
scas
xchg
dec
into
and
ds
push
enter
js
jle
dec
dec
mov
and
mov
enter
sbb
mov
dec
ds
pop
push
mov
js
out
jle
add
push
enter
js
ret
xchg
repz
or
or
cmp
inc
bnd
out
call
jle
je
repnz
add
push
pop
cmp
ds
pop
push
jle
sbb
(bad)
enterw
dec
push
fisubr
cmp
or
add
and
imul
mov
mov
inc
jmp
push
fidiv
jo
mov
pop
adc
sbb
inc
mov
ins
push
jle
add
repnz
adc
xor
jecxz
inc
add
bound
test
enter
adc
into
or
xor
fimul
inc
shl
jle
add
enterw
jl
jle
ins
push
ror
pop
mov
add
pop
stos
sub
enterw
inc
ss
add
jle
mov
es
into
and
aas
mov
js
(bad)
adc
pop
mov
xor
or
add
sub
dec
jle
je
into
and
jp
add
sub
daa
stos
ss
push
jmp
ss
dec
push
out
ss
into
jmp
sti
ss
add
stos
push
sbb
jnp
dec
jle
push
xchg
xor
addr16
stos
aaa
add
dec
loop
sbb
into
jbe
inc
ficomp
inc
inc
jle
dec
or
ss
pop
(bad)
inc
cs
and
pop
pop
dec
jle
je
jmp
and
pop
je
jle
pop
push
test
dec
jle
ins
cmp
or
push
enter
sbb
mov
add
mov
jle
inc
cmp
repnz
inc
jle
ins
inc
mov
out
cmp
ss
call
pop
jle
dec
cmp
and
cmp
ds
js
retf
daa
stos
imul
ins
dec
out
jg
xor
dec
push
jmp
dec
cli
push
pop
call
pop
push
arpl
push
cmps
jle
iret
scas
jp
add
push
psubd
add
(bad)
or
xor
mov
and
jg
dec
jle
pop
push
fidiv
dec
adc
jl
mov
inc
push
mov
push
out
mov
dec
push
jle
js
mov
dec
out
jb
add
push
adc
cli
adc
aaa
fidiv
inc
push
mov
adc
mov
jmp
and
dec
adc
das
adc
jg
add
pop
xchg
jnp
cmp
push
ds
dec
dec
retf
xchg
mov
dec
add
sbb
pop
mov
pop
es
or
mov
add
xlat
add
call
push
jle
ins
push
mov
call
loop
add
cli
jle
fidivr
je
fisubr
enter
push
push
(bad)
add
sahf
mov
fidiv
push
jle
dec
push
shl
add
jle
js
mov
jo
mov
jbe
call
add
inc
jle
add
(bad)
adc
mov
add
push
jmp
push
jg
add
cli
or
movzx
or
enterw
ins
cs
dec
push
(bad)
adc
mov
jo
into
cmp
pop
stos
adc
cmp
or
aaa
jmp
pop
ret
inc
jmp
push
jle
dec
ds
push
enter
dec
push
jle
sbb
into
xor
mov
jle
add
(bad)
enter
add
out
adc
ds
dec
dec
scas
ss
cmp
data16
cli
or
bswap
jp
sbb
aaa
ins
push
mov
pop
fs
jle
dec
push
cli
outs
enter
pop
xor
and
test
enter
inc
dec
call
push
jle
sbb
mov
dec
into
scas
and
add
das
js
jle
ins
dec
fimul
add
repz
fidivr
cmp
jp
push
jmp
add
or
(bad)
mov
add
jle
dec
push
stos
xor
add
jle
ins
dec
fidiv
pop
push
mov
adc
jle
add
add
pop
ret
pop
jle
sbb
out
jb
add
or
and
xor
inc
jmp
add
jle
scas
out
pop
add
sbb
pop
cli
xor
or
out
jle
add
push
add
mov
xor
retf
push
inc
add
and
xor
push
enter
fs
mov
inc
push
call
push
mov
enter
dec
cs
mov
sbb
jmp
xor
and
mov
out
dec
(bad)
add
into
stos
inc
ds
jp
pop
(bad)
ss
es
dec
mov
jecxz
inc
cmps
xor
add
push
ins
(bad)
push
mov
scas
aaa
or
mov
sbb
jg
push
mov
push
pop
add
ss
sbb
mov
jo
mov
pop
adc
adc
mov
sub
fisub
or
scas
jle
add
xor
scas
xor
jae
dec
mov
ss
add
xchg
pop
push
fidiv
push
(bad)
xor
xchg
mov
aaa
or
mov
sub
arpl
push
add
fidiv
js
fiadd
je
mov
leave
inc
mov
imul
ret
mov
jae
push
jle
add
jnp
dec
lahf
es
dec
push
out
out
dec
mov
sbb
pop
mov
push
push
mov
sbb
mov
imul
mov
jle
xchg
ror
ins
add
or
and
push
enter
or
mov
pop
dec
jmp
dec
(bad)
jbe
xchg
mov
ins
add
ss
mov
and
jnp
sbb
addr16
mov
aaa
add
pop
cli
jle
inc
mov
jle
inc
ret
pop
mov
leave
inc
mov
add
addr16
mov
sbb
pop
call
pop
mov
cmp
inc
repnz
scas
pop
enter
adc
sahf
cmp
jle
dec
push
jmp
ss
add
scas
out
ins
dec
ret
xor
add
ss
sahf
repnz
push
push
add
and
dec
mul
push
stos
sbb
mov
js
jle
dec
data16
add
mov
out
adc
mov
dec
xchg
div
add
xor
sahf
jle
push
jmp
or
aas
jo
jle
dec
push
rol
sbb
or
mov
inc
add
arpl
dec
scas
add
dec
jle
pop
push
cli
xor
bnd
daa
mov
or
dec
jg
ins
dec
into
push
enter
adc
pop
mov
data16
pop
fidivr
pop
retf
ds
jl
out
and
out
loop
dec
mov
sbb
jle
dec
imul
retf
pop
add
jnp
dec
jg
adc
mov
push
ds
enter
add
mov
je
jmp
dec
repnz
push
retf
push
jmp
adc
cs
add
xor
add
(bad)
or
mov
push
sbb
repnz
enter
inc
ss
pop
mov
add
inc
mov
and
es
push
cli
xor
or
fidiv
jo
iret
xor
into
jbe
pop
jmp
push
jle
sbb
out
push
dec
add
jae
and
add
mov
es
ins
es
outs
adc
lahf
jp
pop
jmp
(bad)
mov
pop
add
or
push
js
retf
and
cmps
jg
aas
mov
aaa
adc
(bad)
retf
ds
or
jg
push
jle
sbb
dec
stos
ror
dec
cli
push
inc
xor
and
daa
mov
bound
shl
sbb
mov
jge
fisub
jl
cli
jg
aaa
mov
aaa
add
dec
mov
add
fisub
jo
mov
jae
push
jg
adc
cli
cmp
sahf
jae
imul
add
mov
jnp
push
jle
adc
jmp
add
imul
scas
jnp
inc
mov
adc
addr16
mov
sbb
add
or
or
or
add
ja
push
jle
or
mov
xlat
adc
push
fwait
or
add
jle
add
push
inc
cs
add
pop
out
jg
push
mov
push
jl
cli
aas
enter
add
mov
sbb
ret
dec
scas
mov
dec
push
cli
jecxz
or
jp
aas
cli
jnp
inc
mov
leave
inc
lahf
jae
pop
cmps
pop
add
or
data16
xor
retf
(bad)
jmp
push
add
outs
pop
es
inc
dec
scas
jae
push
stos
xor
scas
xlat
ds
mov
je
out
dec
pop
jmp
add
jp
sbb
ss
repnz
outs
sub
into
imul
add
add
and
add
cmp
dec
mul
pop
mov
sbb
pop
mov
jl
jle
js
xchg
push
inc
es
push
enter
ins
push
ficom
into
fwait
push
sub
addr16
xchg
sub
and
push
mov
push
mov
sbb
(bad)
bound
xor
mov
js
cli
mov
jo
stos
push
enter
ins
push
ret
sbb
repnz
pop
jle
pop
push
fisub
retf
add
(bad)
jae
es
add
push
sbb
cmp
pop
mul
pop
mov
sbb
add
cmps
push
adc
sbb
bnd
push
mov
aaa
or
mov
inc
div
add
fidivr
sar
jae
push
jle
add
push
adc
jbe
fbstp
ss
cmp
xchg
jge
(bad)
aas
fs
js
(bad)
aaa
or
mov
add
push
mov
add
xor
or
mov
push
leave
adc
or
mov
dec
add
jnp
xor
or
daa
add
jle
sbb
out
jnp
inc
jle
dec
adc
es
into
jg
xchg
push
leave
pop
jmp
push
cli
addr16
jle
pop
push
retf
dec
scas
adc
xchg
sbb
jmp
ss
retf
add
mov
xor
dec
mov
inc
es
xor
cmp
add
jp
adc
or
mov
jo
repnz
ins
push
jle
ins
cmp
xor
ret
sub
(bad)
jae
push
jle
or
dec
scas
mov
push
mov
push
enter
dec
dec
loop
inc
cmp
data16
scas
and
cmp
mov
push
retf
jl
mov
arpl
push
lahf
jae
fistp
arpl
dec
stos
cmp
push
fidiv
push
push
cli
jb
and
or
daa
ret
push
stos
jb
xchg
sti
arpl
add
jle
pop
ret
arpl
sub
pop
jle
dec
jmp
and
repnz
jle
je
sar
ds
push
ds
dec
cmp
jnp
adc
sbb
(bad)
jbe
cmp
ss
out
cli
inc
dec
jmp
push
jmp
adc
jg
inc
mov
sbb
push
enter
dec
ss
mov
push
jl
scas
ss
push
loop
sbb
cmps
aas
sub
and
xor
push
pop
add
es
mov
scas
ss
mov
data16
out
enter
dec
adc
push
adc
jmp
dec
stos
xor
jle
dec
cli
or
and
cmp
push
cli
ss
jp
ds
enter
sub
jecxz
dec
mov
add
pop
mov
out
adc
ficom
pop
retf
dec
add
sbb
sbb
ss
loop
or
shl
inc
es
sar
out
ss
push
loop
or
inc
mov
aas
or
add
ss
call
push
jle
or
(bad)
out
inc
add
and
xor
shl
jle
add
ss
and
sti
add
dec
jg
ins
inc
fisubr
scas
mov
es
ins
push
loop
je
jle
dec
adc
xor
fisttp
jo
mov
jl
jle
jo
cli
xor
adc
mov
dec
xchg
xor
push
into
aas
enter
add
mov
push
push
into
push
push
ds
enter
push
push
ror
enter
fs
inc
ret
mov
pop
add
out
ins
sbb
ss
xor
inc
aaa
mov
add
es
dec
(bad)
xor
ss
mov
sbb
out
xor
jmp
add
arpl
jnp
add
imul
jg
pop
pop
into
addr16
mov
leave
dec
ret
push
into
jae
dec
jle
sbb
mov
sub
mov
add
cli
jbe
pop
ret
cmp
dec
pop
out
cs
ins
ficom
sub
scas
push
jo
ficom
enter
push
push
(bad)
imul
mov
xor
repz
jmp
push
xchg
jnp
push
jle
pop
push
ss
dec
call
cmp
outs
enter
dec
dec
(bad)
jle
mov
out
jnp
push
jg
adc
xor
retf
retf
bound
cmp
and
fidiv
or
out
es
es
or
inc
mov
leave
inc
mov
xor
mov
jo
jmp
add
xor
pop
cmps
sbb
mov
add
es
ret
add
push
fwait
xor
jecxz
and
inc
push
mov
enter
push
mov
(bad)
sub
adc
xor
and
sbb
push
inc
ret
adc
xor
mov
jae
dec
mov
xor
adc
scas
ss
mov
add
cs
sub
push
cmps
mov
xor
mov
add
push
je
cli
ss
cmp
(bad)
sub
aaa
add
mov
pop
or
inc
jmp
dec
mov
sub
mov
sbb
xor
and
push
push
fidiv
add
shr
imul
sbb
stos
mov
bnd
mov
jge
ret
ds
jo
into
add
push
jle
sub
cli
or
xor
mov
arpl
push
stos
mov
push
mov
push
dec
dec
scas
aaa
pop
push
mov
and
data16
fidiv
jo
jmp
push
cli
imul
mov
push
adc
pop
fwait
aaa
sub
retw
xor
jae
sub
add
shl
jle
add
push
sub
stos
jle
add
jle
mov
jbe
add
push
dec
dec
ret
dec
cli
mov
dec
es
push
pop
add
ss
(bad)
cli
mov
push
push
mov
enter
dec
cmp
jle
xor
adc
daa
jo
jle
dec
push
loop
add
stos
jnp
addr16
sbb
push
(bad)
mov
pop
add
es
add
xchg
push
data16
adc
and
div
js
jmp
push
mov
jb
inc
call
dec
repnz
push
(bad)
mov
jo
fidivr
sar
cmp
sahf
ds
adc
sahf
xor
lss
add
mov
inc
push
mov
add
fisub
rcr
cmp
pop
jmp
push
into
mov
push
fidivr
dec
mov
or
mov
or
mov
dec
push
mov
jp
es
jle
cmp
or
jle
dec
jmp
dec
cli
mov
loop
js
mov
or
mov
adc
mov
enter
js
(bad)
es
push
push
mov
leave
inc
jmp
daa
mov
push
dec
rcr
adc
xor
ficom
enter
ins
push
fiadd
ins
and
cmp
xor
repnz
and
retf
push
jle
dec
push
ret
retf
or
mov
xor
cmp
jle
push
push
jmp
ds
enter
inc
push
(bad)
or
mov
sbb
out
push
mov
pop
push
fidivr
aas
stos
aaa
sbb
dec
pop
mov
leave
inc
mov
sbb
pop
shl
push
jle
or
retf
mov
add
scas
arpl
pop
jg
jo
cmps
push
add
cli
push
enter
js
mov
and
adc
aaa
or
mov
or
inc
cli
jnp
inc
jg
dec
dec
cli
aaa
adc
call
stos
jnp
aas
cmps
imul
mov
sbb
and
arpl
mov
stos
cmp
push
cli
or
mov
dec
push
loop
js
jg
sbb
div
ss
pop
inc
jmp
push
fisub
pop
cmp
xor
cs
out
push
ins
add
push
pop
mov
loop
enter
push
cmp
mov
add
jle
dec
and
imul
jle
ins
push
(bad)
or
bound
ret
xor
ss
stos
call
mov
addr16
mov
sbb
pop
scas
aas
je
jle
pop
cmp
jae
add
xor
scas
(bad)
enter
add
out
dec
xchg
and
jnp
push
jle
sbb
jae
push
jle
add
addr16
retf
mov
or
dec
fimul
jo
ficom
push
scas
repz
mov
ins
es
out
cmp
jle
retf
dec
add
ds
add
or
cmps
out
add
add
jnp
push
jle
ins
cmp
outs
jo
jle
ins
dec
scas
add
add
adc
and
cmps
ss
ds
mov
ds
dec
ds
inc
mov
sbb
mov
dec
add
xor
push
mov
push
adc
es
aas
call
dec
jle
add
jmp
pop
ret
es
dec
cs
aas
dec
ss
js
mov
pop
push
mov
or
es
pop
ss
push
jle
je
fidivr
je
jle
ins
inc
scas
ss
dec
call
push
repnz
retf
pop
add
ss
push
mov
push
repnz
add
fidiv
dec
push
jmp
xchg
jnp
dec
jle
dec
xor
shl
stos
das
pop
push
jle
add
jmp
push
retf
mov
and
retf
dec
retf
push
jle
js
out
jle
push
ret
push
jmp
push
stos
aaa
or
mov
inc
dec
mov
add
retf
shl
xor
xor
xor
jg
add
ja
push
jle
ins
push
rcl
push
jle
sub
jae
pop
mov
or
mov
cmp
push
cli
or
jle
mov
push
dec
add
push
inc
push
into
bound
xchg
aaa
jo
mov
and
and
cmp
push
sub
sti
add
ret
dec
cli
out
adc
jnp
dec
jle
sbb
cli
jle
mov
or
jae
cmp
add
cmp
dec
mul
pop
cli
and
ss
mov
push
jmp
es
dec
shl
cmp
addr16
pop
jg
ins
dec
(bad)
and
jp
add
adc
and
push
enter
sbb
mov
shr
addr16
cmp
retfw
push
mov
enter
sbb
or
aas
ret
retf
je
mov
jb
add
add
xor
jg
xchg
mov
imul
add
mov
pop
bound
je
scas
or
jae
add
add
jae
dec
jg
add
cmp
jp
pop
fiadd
inc
push
jle
dec
ds
jnp
dec
mov
leave
inc
mov
sbb
neg
pop
retf
push
cli
jae
dec
lahf
arpl
arpl
or
dec
ret
retf
jo
loop
add
lahf
jnp
push
mov
or
pop
jg
je
fisubr
cmp
sub
adc
add
addr16
mov
sbb
pop
mov
push
leave
pop
cli
or
jg
add
addr16
pop
stos
aaa
add
dec
retf
xchg
mov
jb
add
aaa
add
repz
js
jle
inc
push
jle
add
jg
sub
scas
aaa
jl
mov
add
data16
ret
ds
aas
out
aaa
ins
push
mov
es
mov
enter
pop
or
jae
push
jle
add
scas
aaa
mov
xlat
xchg
dec
sbb
add
out
xor
jg
cmp
mov
fidiv
or
mov
leave
dec
jg
or
mov
add
scas
jae
xchg
mov
cmp
jle
ins
(bad)
mov
dec
dec
mov
pop
inc
out
leave
dec
stos
ss
repnz
es
adc
enter
or
or
dec
ret
dec
jle
pop
push
fidiv
or
mov
leave
dec
jg
je
scas
ss
ds
or
inc
scas
(bad)
jne
mov
sbb
mov
es
push
mov
enter
adc
fidiv
dec
dec
repnz
add
sti
cmps
dec
iret
repnz
jle
push
push
jmp
dec
mov
and
mov
and
mov
sar
jae
dec
jle
or
push
sahf
push
leave
dec
jg
ins
push
ret
push
jle
pop
push
fisub
aaa
mov
sbb
pop
(bad)
jnp
aas
mov
dec
(bad)
repnz
add
push
jle
sbb
fistp
test
aaa
add
out
and
repnz
retf
cmp
or
sbb
xchg
ins
push
bnd
adc
or
mov
aaa
or
pop
out
sbb
scas
mov
xor
push
js
(bad)
xor
cmps
xchg
jp
add
jb
retf
or
push
ficom
je
retf
push
jle
push
daa
ret
pminsw
cmp
jb
aas
cli
cmp
push
cs
dec
cmps
add
mov
jg
adc
fs
into
or
aaa
je
mov
cvtps2pi
ss
retfw
mov
xor
enter
or
mov
and
inc
inc
cmps
jle
dec
mov
outs
add
push
sub
add
pop
pop
pop
add
pop
out
jg
push
mov
push
adc
xor
pop
and
add
addr16
mov
sbb
fcomi
aaa
pop
and
dec
jp
bound
mov
or
mov
ins
push
(bad)
or
mov
mov
pop
aas
jg
enter
or
out
out
dec
ret
aas
mov
cmp
out
add
pop
out
aaa
ins
push
cli
iret
inc
cmp
repz
xchg
mov
mov
jmp
add
add
sub
(bad)
push
enter
sbb
jle
pop
(bad)
fisub
aaa
mov
add
xor
dec
fidivr
push
xor
add
ss
cmp
loop
or
xor
jle
leave
sar
add
mov
jb
dec
scas
arpl
aas
scas
push
adc
add
pop
out
jp
push
fisub
cmp
pop
je
jle
sbb
loop
jo
xchg
push
arpl
enter
sbb
daa
sbb
jp
push
into
ss
mov
add
jnp
data16
sbb
mov
or
mov
add
cmp
inc
div
or
mov
leave
dec
jg
pop
push
fisub
aaa
mov
sbb
pop
fisub
pop
ret
jl
(bad)
xor
daa
jg
add
out
add
xlat
mov
je
mov
xor
inc
cmps
push
pop
push
xchg
push
inc
idiv
jl
jg
pop
pop
pop
cmp
pop
idiv
xchg
jb
add
jg
pop
jg
je
scas
aaa
leave
ds
(bad)
and
mov
push
pop
fdivrp
arpl
mov
cmp
push
jmp
push
mov
or
mov
jnp
dec
mov
sbb
repz
jg
cmp
cs
pop
mov
leave
inc
div
enter
inc
ds
push
jg
pop
pop
pop
cmp
xchg
idiv
push
mov
sbb
(bad)
jp
add
jp
cmps
jle
add
mov
es
xchg
ss
(bad)
mov
daa
mov
jmp
push
jle
add
jg
adc
ss
ds
mov
jg
pop
adc
out
sbb
mov
push
retf
adc
int
retf
adc
jp
inc
mov
outs
add
sar
jg
inc
mov
push
pop
inc
fisub
aaa
mov
sbb
pop
out
daa
dec
xchg
repnz
pop
and
dec
jnp
aaa
pop
dec
out
adc
and
push
push
jmp
dec
(bad)
dec
add
jmp
push
xchg
sti
iret
inc
add
xchg
push
adc
add
sub
jg
push
mov
cmps
dec
shl
push
sbb
pop
cli
jle
inc
ret
pop
mov
leave
dec
cli
xor
jle
dec
data16
sbb
mov
push
mov
dec
sbb
fwait
call
jg
je
scas
arpl
aas
scas
aaa
adc
mov
pop
mul
leave
push
out
add
sbb
jb
das
mov
xchg
dec
dec
retf
adc
ja
add
adc
es
sti
jle
add
daa
leave
cmps
bnd
add
dec
sbb
or
mov
je
mov
adc
add
es
sahf
sti
jb
add
arpl
daa
scas
jae
dec
jg
dec
push
mov
aaa
or
mov
or
es
mov
dec
mov
mov
sbb
pop
out
jae
push
jg
add
scas
push
adc
add
ret
psubd
inc
ret
pop
mov
sbb
repz
aaa
pop
cmp
iret
inc
por
push
xchg
mov
add
repnz
jle
adc
mov
sub
mov
dec
(bad)
mov
pop
add
repz
scas
jg
dec
mov
or
add
and
pop
out
or
sbb
jbe
mov
mov
jnp
add
ss
rcl
jo
jg
or
dec
into
push
jo
fidivr
enter
pop
pop
pop
jae
pop
jg
dec
and
mov
inc
push
retf
aas
mov
and
push
out
add
pmaxsw
push
mov
mov
adc
dec
add
scas
sti
sub
jg
or
mov
sbb
pop
mov
or
pop
add
jp
dec
cli
and
mov
ss
sub
xchg
push
ds
dec
mov
push
sub
mov
mov
aaa
or
inc
jmp
push
xchg
ret
and
repnz
enter
or
mov
push
dec
stos
ss
ds
dec
push
repnz
or
and
aaa
or
mov
pop
dec
jmp
addr16
add
scas
aaa
sbb
cmps
fimul
inc
out
ds
loop
enter
jl
(bad)
repz
cmps
repnz
add
dec
dec
(bad)
jae
ds
or
xchg
xchg
dec
push
retf
adc
jle
inc
ret
pop
mov
jmp
repnz
fsub
jle
ins
push
cli
add
sub
jg
cmp
jae
add
or
cmps
jnp
aas
mov
pop
inc
pop
jnp
pop
mov
leave
inc
ret
retf
ins
add
xor
cmp
pop
dec
fisub
aaa
mov
sbb
fcomi
cmp
cli
jae
shl
subps
jle
pop
push
scas
jle
push
ret
sbb
aaa
pop
and
dec
jp
arpl
dec
scas
jp
dec
cli
jle
inc
ret
pop
mov
jg
add
jmp
mov
aaa
sbb
xchg
dec
push
retf
adc
leave
pop
cli
push
ins
ss
jno
mov
out
inc
mov
sbb
jnp
jbe
es
push
mov
mov
jb
add
aaa
add
sti
cli
or
es
mov
or
mov
jae
push
jg
adc
mov
aaa
sbb
cmps
mov
(bad)
ja
push
jle
dec
cmp
jg
dec
jg
ins
push
mov
inc
add
jb
dec
cli
cmp
push
cs
dec
cmps
data16
loop
jo
call
push
out
arpl
imul
adc
and
js
ret
mov
dec
add
aaa
or
mov
or
dec
mov
outs
and
repnz
(bad)
retf
cmp
addr16
mov
sbb
(bad)
xor
add
arpl
adc
addr16
mov
sbb
pop
mov
inc
jg
add
cmp
jmp
add
or
inc
mov
cmp
pop
jg
pop
pop
pop
xor
mov
addr16
mov
leave
dec
out
leave
sub
add
cmpps
push
(bad)
push
enter
push
dec
shl
pop
into
aas
neg
mov
adc
push
sbb
jle
dec
ss
xor
xchg
jnp
add
jnp
cmp
push
es
sub
and
aaa
mov
cmp
inc
jg
pop
xchg
and
push
enter
add
jmp
mov
xor
pop
mov
cmps
test
jmp
inc
into
fist
dec
add
aaa
or
mov
ins
dec
repnz
or
mov
aaa
adc
cli
cli
enter
add
out
out
pop
mov
sbb
pop
retf
ds
pop
jg
add
scas
xor
mov
leave
push
out
mov
push
repnz
mov
jnp
pop
mov
jno
mov
leave
inc
cli
aaa
or
mov
sub
outs
add
sar
test
inc
repz
mov
sbb
arpl
dec
mov
jae
daa
jle
xchg
ret
lods
xchg
aas
or
mov
xor
adc
adc
out
xor
pop
cli
push
enter
sbb
jp
ret
sti
adc
add
add
(bad)
jae
dec
jg
add
jae
dec
out
ss
mov
ins
push
mov
dec
cmp
xchg
push
xor
cli
or
mov
adc
mov
or
mov
sbb
pop
stos
xor
and
dec
out
push
adc
lahf
outs
or
mov
sub
dec
mov
or
push
repz
jl
sti
jmp
jp
fmul
jle
dec
sbb
arpl
dec
scas
aaa
adc
mul
pop
fidiv
bound
dec
pop
mov
pop
dec
jg
leave
pop
mov
add
ret
psubd
inc
ret
pop
lahf
ja
arpl
ja
dec
jg
dec
data16
je
out
out
retf
mov
jp
iret
cli
jg
inc
mov
jle
mov
aaa
or
mov
or
dec
mov
outs
add
push
fwait
pop
enter
or
cli
jmp
das
mov
add
scas
daa
dec
xchg
repnz
leave
add
ss
stos
repz
inc
jg
je
scas
add
sti
jmp
mov
jg
push
mov
bound
(bad)
mov
or
ret
ret
add
push
jle
or
mov
sbb
mov
add
jg
or
xor
jg
or
push
sahf
jmp
dec
mov
add
scas
push
sbb
cmps
adc
sahf
cmp
push
idiv
push
mov
sbb
jnp
push
scas
xor
push
jg
pop
inc
fidivr
ss
jle
dec
ret
shl
fadd
retf
adc
jp
retf
pop
add
mov
jmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
lahf
jg
test
xor
xchg
dec
ss
fwait
jl
pop
daa
outs
jecxz
(bad)
mov
out
pop
add
pop
xchg
ss
shr
mov
jle
xchg
enter
xor
(bad)
xor
xchg
js
call
or
mov
shl
(bad)
retf
sahf
xor
stos
jecxz
adc
jle
rcl
popa
xchg
ret
cmp
(bad)
call
jle
pop
cmp
sbb
sahf
push
popf
stc
enter
xchg
xor
sub
stos
xchg
lds
jg
lods
xchg
fidivr
int
cmps
push
jns
xor
stc
clc
iret
xor
xchg
xor
movs
int3
sbb
retf
stc
pop
aam
lods
xchg
xor
leave
xchg
stc
xchg
xor
mov
xlat
dec
pop
stc
test
xor
push
into
je
leave
lahf
xor
(bad)
int
bound
ror
cmp
(bad)
loopne
fiadd
loopne
mov
sub
(bad)
jle
xchg
xor
sbb
and
into
leave
cmps
sbb
dec
add
std
pop
jp
enter
xor
push
in
cld
sub
test
xor
retf
mul
sti
ret
stc
xchg
xor
aam
jg
test
xor
xchg
xor
(bad)
mov
mov
push
jp
enter
cli
(bad)
jg
xchg
xor
test
xor
retf
test
add
test
xor
enter
ins
in
test
push
shr
mov
jle
xchg
enter
xor
(bad)
xor
xchg
jno
into
dec
push
fcmovnbe
rcl
lods
xchg
jp
mov
jg
cmc
lahf
inc
and
adc
mov
cld
jg
leave
xor
xchg
xor
fistp
jge
or
(bad)
jle
fld
imul
(bad)
jle
add
enter
mov
out
push
jle
jecxz
xlat
xlat
movs
das
inc
in
sbb
test
sbb
repz
inc
fdivr
cmps
push
cwde
in
ds
fs
sti
mov
inc
call
mov
popf
lahf
addr16
inc
popf
xchg
add
lods
inc
inc
pusha
call
retf
jbe
jmp
inc
push
mov
sti
daa
arpl
(bad)
cmc
mov
mov
sbb
inc
pop
es
cmps
mov
daa
in
lahf
inc
push
and
pop
mov
add
cli
pop
test
lods
sbb
cmc
mov
(bad)
aad
pop
lahf
inc
lock
cld
mov
inc
lea
aad
inc
(bad)
in
or
cdq
add
sbb
jmp
enter
pop
mov
jmp
test
add
cmps
mov
iret
adc
inc
xor
dec
mov
shl
cli
cmp
mov
push
ret
(bad)
sbb
aaa
inc
mov
inc
leave
cli
cmp
or
outs
push
popf
xor
lods
jno
push
mov
xchg
out
fild
ror
jo
movzx
xchg
push
fisttp
push
sbb
or
mov
add
jge
cmps
(bad)
mov
addr16
mov
push
loop
push
scas
mov
lock
sbb
xchg
or
addr16
dec
xor
arpl
arpl
out
and
test
sub
imul
and
sub
cmc
imul
xchg
repz
test
sub
imul
sub
imul
sub
mov
xor
sub
imul
pusha
mov
sub
imul
sub
imul
je
imul
mov
jbe
sub
imul
shr
mov
imul
sub
imul
gs
test
sub
imul
lahf
clc
stos
sub
imul
mov
and
jae
daa
addr16
and
test
sub
imul
pusha
cli
pop
mov
cmps
out
inc
repz
cli
jecxz
mov
and
les
xchg
ins
fsub
xchg
and
mov
jmp
xlat
(bad)
pop
sahf
lods
mov
push
adc
cmc
cmp
js
scas
mov
lods
out
arpl
xor
lea
(bad)
push
inc
repnz
pop
ror
jb
mov
fs
arpl
in
mov
mov
lods
popf
call
mov
jmp
hlt
jl
adc
and
cmps
mov
sbb
in
fwait
or
mov
out
imul
adc
lods
popf
inc
call
in
aaa
popa
jne
push
pop
mov
push
pop
scas
(bad)
cli
pop
xor
popf
pop
mov
jno
sbb
cmp
nop
sbb
adc
mov
sti
out
jae
test
in
dec
addr16
push
add
out
ret
inc
mov
aad
mov
or
in
xchg
mov
xor
scas
push
fld
inc
mov
out
and
mov
inc
push
outs
jecxz
jae
mov
outs
push
ficom
aas
add
lods
(bad)
in
push
movs
iret
mov
in
pop
inc
jb
nop
push
shl
xchg
scas
test
cmps
(bad)
push
add
neg
pop
xchg
dec
pop
shl
into
xor
sub
push
inc
mov
mov
and
jns
(bad)
inc
inc
ins
popa
rcr
pop
xchg
add
les
iret
shl
call
mov
add
ins
popa
rcr
push
je
cwde
mov
push
inc
pop
xchg
dec
pop
(bad)
jle
mov
or
(bad)
shr
inc
pop
xchg
add
jecxz
dec
pop
gs
jl
xchg
sbb
(bad)
test
dec
stc
mov
mov
add
xchg
dec
pop
enter
xchg
inc
dec
jne
mov
add
xchg
dec
pop
shl
adc
gs
jge
jge
mov
add
jge
mov
mov
and
sbb
out
sbb
fstp
sbb
inc
call
lods
and
fwait
lods
sbb
inc
cmp
jno
xor
jmp
inc
dec
sub
loop
stos
jmp
scas
adc
pop
inc
mov
jae
xor
dec
xor
xor
push
mov
repnz
repnz
in
mov
lock
(bad)
push
lods
fs
pop
mov
dec
mov
xor
dec
push
out
jnp
adc
mov
mov
out
cli
mov
outs
lods
call
out
mov
push
in
jg
mov
xchg
inc
adc
popf
(bad)
mov
in
push
add
pop
mov
imul
mov
mov
cld
mov
jae
sbb
out
sbb
mov
dec
popf
test
add
mov
inc
cmc
retf
ret
inc
mov
or
dec
cmp
es
mov
add
xor
mov
pop
jmp
in
loope
sbb
icebp
dec
dec
mov
loop
inc
push
in
dec
fisttp
jne
call
call
je
inc
cmc
ins
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
(bad)
cld
jge
(bad)
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
std
icebp
sub
(bad)
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
sub
cld
cmp
movs
cmps
(bad)
sbb
fstp
sub
or
jae
mov
add
pusha
mov
jae
jb
stos
outs
mov
stos
mov
bound
mov
sub
mov
stos
mov
bound
mov
bound
jno
out
enter
(bad)
sub
mov
sub
mov
jae
xchg
or
jmpw
mov
jae
mov
jae
push
loope
and
mov
jae
shl
fs
xchg
sub
or
jae
mov
repz
lock
sub
mov
cmp
inc
lods
ds
adc
inc
loope
aad
cld
and
mov
bound
mov
inc
mov
pop
pusha
mov
jae
(bad)
xor
xchg
add
cmc
mov
jno
mov
jae
mov
add
sub
mov
jae
xlat
mov
sub
popf
add
add
in
pusha
mov
jae
shl
lock
mov
bound
push
lock
mov
bound
data16
or
and
mov
bound
mov
xor
enter
(bad)
sub
mov
(bad)
fnsave
jae
mov
jae
fnstenv
jno
(bad)
fs
fisubr
xor
mov
jae
aam
jae
mov
jg
pusha
mov
bnd
inc
mov
(bad)
int
jae
or
jno
mov
jae
outs
jae
add
mov
mov
add
sub
ins
add
shl
shr
pop
adc
loopne
int
nop
(bad)
sbb
mov
xor
mov
bound
loop
sbb
(bad)
sub
dec
cmp
adc
(bad)
sub
(bad)
pushf
aas
cs
sbb
(bad)
sub
out
cs
call
xlat
(bad)
inc
dec
mov
pushf
push
fwait
scas
sbb
mov
sti
push
inc
mov
push
imul
mov
(bad)
pushf
dec
popf
inc
add
inc
nop
addr16
sbb
lock
inc
mov
inc
imul
inc
jmp
cmp
jge
xchg
jp
(bad)
mov
jle
lods
push
test
sub
jecxz
fistp
inc
push
bound
cli
jmp
xchg
push
jne
xchg
lods
out
sbb
je
arpl
in
xor
popf
cmps
jb
sbb
cmp
jo
sar
lds
inc
ins
push
lahf
getsec
push
or
dec
sub
cmps
inc
mov
fmul
pop
lods
xchg
mov
mov
xchg
inc
mov
push
call
inc
xor
cmps
dec
out
inc
ret
add
sbb
(bad)
mov
addr16
cmp
mov
pop
test
lock
add
scas
out
mov
xchg
push
daa
sbb
loop
push
test
xor
mov
outs
push
in
out
popf
cmps
retf
inc
je
sahf
outs
jo
xchg
mov
out
mov
add
or
lock
call
push
mov
jg
loope
inc
rcl
pop
jne
and
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
mov
mov
lods
jne
pop
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jl
sub
jl
sub
jl
sub
jl
sub
shr
jl
sub
jl
sub
jl
sub
jl
sub
in
or
lea
mov
jl
sub
jl
sub
jl
sub
jl
sub
shr
jl
sub
jl
sub
jl
sub
jl
sub
test
sub
jge
sub
jl
sub
cmc
sub
jge
sub
fst
imul
or
cmp
rdpmc
mov
xor
sahf
jle
sub
mov
gs
dec
mov
les
cdq
imul
mov
gs
xor
cmp
or
mov
gs
xor
sub
mov
or
ret
gs
xor
std
inc
ds
gs
xor
gs
xor
rol
push
stos
mov
adc
jg
or
sub
jl
adc
repz
xor
inc
outs
mov
gs
xor
gs
xchg
sti
add
(bad)
and
jg
mov
cdq
sub
jl
adc
mov
gs
jl
sub
aad
xlat
or
xor
or
mul
push
xor
gs
jl
sub
aad
xlat
or
xor
or
mul
popa
xor
gs
xor
gs
jl
sub
aad
xlat
or
xor
or
mul
pop
xor
gs
jl
sub
aad
xlat
or
xor
or
lahf
gs
repz
or
in
(bad)
jl
sub
aad
xlat
or
xor
or
(bad)
gs
repz
or
mov
gs
xor
inc
jge
sbb
hlt
pop
mov
addr16
xor
gs
repz
jl
or
std
gs
push
imul
jge
or
mov
gs
push
imul
jge
or
frstor
imul
mov
lea
xchg
stos
aad
ja
je
or
xlat
retf
sub
jae
jg
or
test
xor
gs
xlat
mov
inc
imul
cmp
or
mov
sub
(bad)
jl
sub
jl
adc
mov
gs
xor
pop
inc
aas
mov
gs
xor
gs
lahf
icebp
pop
add
jno
das
or
sub
fldcw
xor
cmp
sub
mov
gs
xor
(bad)
pusha
hlt
mov
dec
jge
sbb
mov
gs
xor
sub
mov
gs
xor
gs
dec
hlt
add
imul
mov
push
or
mov
aas
int
sub
ins
jl
lahf
mov
gs
xor
stos
les
xlat
or
mov
gs
xor
sub
or
mov
sub
icebp
test
and
inc
xchg
lahf
mov
add
jb
xor
(bad)
fmul
mov
gs
xor
imul
xor
gs
jg
sub
mov
gs
xor
jecxz
jg
xlat
dec
add
xor
or
(bad)
lods
inc
addr16
das
test
imul
sub
imul
xor
xchg
adc
sub
jge
mov
jno
clc
sub
fprem1
aas
sbb
sub
jo
xor
jge
mov
xchg
sub
or
fst
xor
icebp
inc
jge
addr16
xor
gs
mov
fld
cmp
jl
or
mov
push
jl
or
xchg
gs
xor
inc
jge
sbb
mov
gs
mov
add
jl
mov
mov
bound
sub
xor
sub
xor
gs
pusha
mov
gs
xor
gs
xor
sub
xor
or
mov
gs
repz
jl
or
mov
gs
xor
jg
mov
cmp
sub
mov
sub
xor
xor
outs
xor
gs
sti
cmp
jl
or
mov
gs
xor
jg
addr16
xor
gs
fist
inc
jl
and
jg
or
ret
or
or
inc
mov
outs
xor
gs
sti
cmp
jl
or
sti
gs
xor
jg
addr16
xor
mov
aas
mov
icebp
je
sub
aad
xlat
mov
xchg
xlat
or
cmp
pop
xor
gs
xor
sub
mov
or
test
sub
or
jge
cld
mov
mov
loope
ins
jl
cdq
mov
gs
xor
cmp
mov
mov
xor
mov
into
or
xlat
xchg
xchg
xlat
or
cmp
pop
xor
xor
sbb
xor
inc
dec
out
or
hlt
pop
or
out
xor
fnstsw
mov
loopne
xor
push
xlat
(bad)
inc
xchg
lods
sbb
inc
cwde
lods
xor
stc
ds
pop
inc
inc
push
adc
in
imul
in
lahf
lds
mov
retf
stos
push
add
test
arpl
xchg
sbb
jmp
lods
addr16
arpl
pushf
aaa
push
ror
stos
out
std
sti
loop
sbb
dec
jne
pop
and
mov
es
mov
push
lods
mov
fld
out
pushf
je
cmp
arpl
jnp
jbe
mov
ins
add
mov
xchg
lods
in
cwde
push
rcr
push
pop
fwait
or
clc
jae
jo
out
or
inc
test
shl
inc
(bad)
stos
call
test
sti
xchg
mov
mov
xchg
dec
or
sbb
inc
xor
fmul
or
das
fimul
mov
pusha
sbb
or
cmps
out
lods
push
(bad)
jb
pop
div
aaa
push
leave
dec
sub
retf
add
test
xchg
jbe
inc
ret
or
arpl
dec
mov
sbb
inc
fs
pop
xlat
add
inc
or
call
test
mov
addr16
dec
mov
(bad)
dec
inc
xchg
nop
out
inc
(bad)
repz
inc
mov
ins
inc
(bad)
inc
mov
or
das
pop
iret
inc
pop
iret
add
into
mov
inc
mov
or
inc
fwait
add
mov
inc
pop
addr16
dec
mov
(bad)
dec
inc
xchg
nop
out
inc
(bad)
repz
mov
xchg
or
inc
mov
dec
stos
(bad)
call
loopne
cmovno
or
inc
mov
or
or
sahf
sub
repz
outs
jb
fiadd
xchg
nop
iret
lahf
inc
(bad)
jecxz
jne
or
inc
mov
dec
imul
dec
test
repz
les
sbb
retf
cdq
mov
ror
sbb
(bad)
dec
sar
mov
loop
dec
push
mov
loop
mov
fsqrt
push
repz
pop
jnp
push
mov
(bad)
int
xchg
sbb
in
lahf
mov
sbb
inc
daa
mov
pop
push
mov
arpl
pop
dec
sti
outs
cmp
popf
loop
scas
sub
arpl
dec
lahf
pop
cli
sbb
sub
arpl
xchg
sahf
dec
out
add
sar
inc
cmp
rep
pop
mov
adc
jmp
mov
or
or
in
stos
sbb
cli
in
in
popf
jg
lods
add
test
xor
mov
xor
add
dec
sbb
push
or
mov
mov
mov
push
jnp
out
mov
icebp
sbb
jp
out
mul
jnp
aaa
mov
out
repz
add
ret
aaa
fbstp
test
aas
add
cld
inc
xor
dec
cli
fidiv
iret
arpl
dec
repnz
mov
out
out
mov
jnp
iret
mov
idiv
fs
cdq
scas
cmps
mov
inc
add
outs
pop
mov
mov
or
adc
add
in
push
mov
jae
sbb
js
and
mov
jo
aam
jge
push
data16
imul
ficom
sub
inc
push
lods
lods
push
sub
fcom
pusha
ficom
sub
cmp
sub
and
lods
nop
sbb
sbb
inc
sub
mov
pop
nop
push
ds
push
data16
push
push
sub
push
data16
aaa
data16
pushf
push
jb
fcom
inc
fiadd
(bad)
cs
sbb
nop
push
add
fcom
js
adc
sub
push
pushaw
ficom
push
das
push
sub
push
pushaw
ficom
sub
push
push
mov
sub
push
pushaw
ficom
sub
bound
mov
push
data16
push
data16
bound
mov
push
data16
push
data16
dec
data16
push
fs
fidivr
data16
cwde
pop
sub
push
fs
ficom
sub
push
data16
pop
dec
das
jb
cld
outs
adc
sub
xchg
in
retf
repz
xchg
push
data16
push
data16
add
popf
jle
xchg
cwde
and
fs
or
sub
nop
cmp
push
sub
push
data16
push
data16
arpl
adc
and
xchg
sbb
sub
mov
xchg
jg
push
and
sub
sbb
xchg
mov
imul
sub
fimul
out
dec
dec
mov
push
ins
or
push
fs
push
setp
push
(bad)
jecxz
(bad)
jecxz
ins
push
xchg
push
inc
int
push
setp
push
(bad)
jecxz
(bad)
aam
push
pusha
mov
jecxz
(bad)
jecxz
pop
push
cmp
inc
mov
push
setp
push
(bad)
jecxz
pop
xlat
mov
sub
(bad)
jecxz
pop
aad
push
inc
test
push
setp
push
(bad)
mov
add
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
inc
enter
call
(bad)
mov
inc
aam
push
or
(bad)
jecxz
(bad)
add
dec
(bad)
into
aaa
inc
add
mov
cld
jns
(bad)
sbb
inc
mov
jecxz
(bad)
jecxz
(bad)
(bad)
push
aam
aas
repz
push
setp
xor
aad
push
sbb
call
orps
push
bt
(bad)
jecxz
cmps
aam
sbb
inc
sub
(bad)
jecxz
(bad)
jecxz
pop
aad
push
inc
mov
jecxz
(bad)
mov
jo
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
xlat
test
sbb
sbb
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
movs
das
inc
in
sbb
mov
jecxz
orps
push
or
(bad)
jecxz
(bad)
aam
push
pusha
mov
jecxz
orps
cmp
sbb
mov
int3
cmp
or
cwde
push
sbb
loopne
lods
xor
lods
push
pop
mov
push
bt
add
push
cwde
in
push
jb
jecxz
(bad)
jecxz
in
xlat
mov
cmp
xchg
mov
or
(bad)
jecxz
(bad)
out
test
aam
push
inc
mov
sbb
(bad)
jecxz
in
xlat
mov
cmp
xchg
mov
or
(bad)
jecxz
add
rol
loope
setp
xor
push
jmp
mov
ss
sbb
sbb
inc
movs
lods
push
push
sbb
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
inc
mov
jecxz
(bad)
jecxz
(bad)
mov
jo
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
mov
inc
test
pop
(bad)
mov
inc
xchg
dec
and
lods
bound
push
mov
cmp
pop
pushf
lods
push
setp
push
(bad)
movs
das
inc
in
sbb
lock
(bad)
jecxz
(bad)
jecxz
orps
test
scas
sbb
inc
in
popf
sbb
mov
sbb
popf
in
push
jb
jecxz
mov
cdq
in
test
cwde
jno
inc
test
push
(bad)
jecxz
(bad)
jecxz
push
aam
mov
nop
sbb
dec
call
push
mov
push
inc
cwde
mov
push
inc
mov
jecxz
(bad)
jecxz
aaa
aad
adc
mov
pushf
inc
cmp
or
sbb
sbb
sbb
push
(bad)
jecxz
(bad)
jecxz
addr16
pop
push
jle
jecxz
bound
push
or
(bad)
jecxz
(bad)
mov
xlat
jecxz
(bad)
jecxz
xchg
push
push
shl
out
push
(bad)
jecxz
orps
loop
pop
sar
(bad)
jecxz
xchg
push
push
shl
out
aas
(bad)
jecxz
sahf
(bad)
lods
push
or
(bad)
jecxz
(bad)
sbb
jecxz
(bad)
jecxz
(bad)
aam
mov
inc
movs
lods
push
push
sbb
push
pminsw
push
(bad)
jecxz
addr16
loope
jb
jecxz
outs
(bad)
dec
push
jle
jecxz
pop
aad
push
jp
jecxz
(bad)
dec
push
inc
aam
push
setp
push
(bad)
jecxz
(bad)
mov
or
(bad)
adc
jecxz
(bad)
jecxz
pop
aad
push
rsm
jecxz
(bad)
jecxz
outs
(bad)
mov
mov
pop
(bad)
mov
or
(bad)
jecxz
(bad)
jecxz
outs
(bad)
in
push
jle
mov
or
(bad)
jecxz
out
xlat
mov
popf
jmp
cmps
mov
in
push
setp
push
(bad)
jecxz
orps
or
jl
lods
cmovno
sbb
inc
movs
lods
or
sbb
mov
lods
scas
push
mov
push
inc
mov
jecxz
(bad)
jecxz
ret
push
cli
push
pushf
in
push
jb
jnp
sbb
call
orps
push
fs
outs
(bad)
pushf
push
jle
jecxz
(bad)
jecxz
pop
aad
push
jp
adc
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
or
(bad)
jecxz
outs
(bad)
in
push
jle
mov
or
(bad)
jecxz
out
xlat
mov
popf
inc
pushf
test
popf
mov
lods
push
or
(bad)
(bad)
jb
stc
or
inc
mov
jecxz
(bad)
jecxz
ret
push
cli
push
pushf
in
push
jb
jecxz
(bad)
jecxz
aaa
aad
push
bt
outs
push
loope
inc
int
push
setp
add
xchg
mov
pop
sbb
inc
mov
push
setp
push
(bad)
jecxz
(bad)
mov
pusha
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
mov
inc
test
push
(bad)
mov
inc
aam
push
or
(bad)
add
dec
(bad)
out
sbb
inc
cld
jns
(bad)
sbb
push
inc
mov
jecxz
(bad)
jecxz
(bad)
(bad)
push
aam
adc
sbb
push
inc
mov
jecxz
ret
push
cli
push
pushf
in
push
jb
jnp
sbb
call
xlat
push
pop
xchg
xchg
mov
ret
(bad)
jecxz
(bad)
jecxz
outs
(bad)
mov
mov
push
(bad)
jecxz
(bad)
jecxz
pop
aad
push
jp
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
bt
outs
(bad)
in
push
jle
mov
or
(bad)
add
dec
(bad)
out
sbb
inc
cld
jns
(bad)
sbb
inc
mov
jecxz
(bad)
jecxz
(bad)
(bad)
jb
stc
ds
pop
sbb
inc
loopne
push
(bad)
jecxz
(bad)
jecxz
orps
sub
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
outs
(bad)
mov
out
jecxz
(bad)
jecxz
(bad)
jecxz
xchg
aam
push
inc
mov
push
(bad)
jecxz
gs
mov
push
(bad)
scas
or
sbb
pop
xchg
jge
push
pusha
cld
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
outs
(bad)
pushf
push
jb
jecxz
push
push
loop
psubd
push
(bad)
jecxz
pop
xlat
pushf
push
inc
sub
(bad)
jecxz
(bad)
mov
inc
test
push
(bad)
jecxz
(bad)
mov
push
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
inc
test
push
(bad)
jecxz
(bad)
jecxz
add
mov
inc
xchg
dec
and
lods
bound
push
xchg
mov
pushf
lods
push
setp
ins
(bad)
mov
push
(bad)
jecxz
outs
(bad)
dec
push
pmaxsw
push
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
das
inc
in
and
dec
mov
inc
hlt
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
psrlw
xlat
lods
push
jp
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
jecxz
jecxz
test
inc
lock
(bad)
jecxz
(bad)
jecxz
ins
push
xchg
push
inc
int
push
setp
or
mov
jecxz
pop
push
sbb
aaa
dec
loop
psubd
addr16
mov
aam
push
(bad)
jecxz
(bad)
jecxz
aaa
aad
push
bt
addr16
mov
loop
adc
push
sahf
sbb
test
sbb
mov
push
inc
enter
(bad)
jecxz
(bad)
cmp
mov
das
ins
or
pushf
dec
sbb
pushf
pusha
cmp
shr
push
jb
jecxz
outs
(bad)
mov
pusha
(bad)
in
test
aam
push
inc
movs
jecxz
(bad)
jecxz
dec
aam
or
iret
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
orps
sbb
inc
call
jecxz
(bad)
jecxz
(bad)
sub
inc
xchg
dec
xor
imul
or
(bad)
sbb
xchg
pop
sbb
inc
adc
push
sar
push
(bad)
jecxz
(bad)
push
sbb
pop
mov
or
(bad)
jecxz
(bad)
push
mov
pop
mov
push
cmps
mov
mov
rcr
loope
setp
jge
push
push
sar
out
inc
add
sar
out
inc
add
sar
out
push
(bad)
jecxz
jmp
push
sbb
sbb
push
(bad)
jecxz
(bad)
mov
sbb
dec
push
inc
cwde
lods
push
setp
push
(bad)
jecxz
(bad)
mov
inc
pop
add
dec
dec
cwde
pushf
pop
cwde
scas
sbb
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
dec
xchg
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
dec
inc
cwde
lods
das
ins
sbb
mov
sub
mov
mov
push
sbb
sbb
push
(bad)
jecxz
(bad)
jecxz
iret
(bad)
cmp
fsub
push
(bad)
jecxz
(bad)
jecxz
(bad)
dec
or
arpl
jg
(bad)
jecxz
inc
aam
push
or
(bad)
jecxz
(bad)
jecxz
outs
push
fimul
pop
(bad)
xchg
rol
lods
push
setp
arpl
(bad)
jecxz
xchg
aam
adc
cli
push
pushf
in
push
jb
mov
jns
scas
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
orps
(bad)
out
test
cwde
jo
inc
test
adc
(bad)
jecxz
pop
xlat
xchg
rol
lods
push
setp
dec
orps
(bad)
out
test
cwde
jo
inc
movs
jecxz
(bad)
jecxz
(bad)
cli
cmp
pop
jp
mov
int
push
setp
push
(bad)
jecxz
aaa
aad
adc
mov
sbb
or
push
or
(bad)
jecxz
(bad)
or
push
aaa
jmp
xchg
mov
or
add
push
inc
cwde
loope
setp
or
xlat
mov
jmp
mov
push
(bad)
jecxz
dec
push
in
or
xor
fiadd
add
pop
fwait
adc
push
inc
cwde
loope
setp
adc
in
pushf
mov
scas
adc
cld
pushf
fwait
push
scas
adc
int3
pushf
stos
push
scas
or
and
lahf
xchg
cwde
cmp
pusha
cli
push
mov
and
(bad)
jecxz
(bad)
jecxz
inc
aam
push
or
(bad)
jecxz
(bad)
jecxz
outs
push
fidiv
adc
push
pop
xchg
pop
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
push
aad
push
bt
(bad)
mov
popf
dec
int3
lods
ds
jmp
popf
add
sar
(bad)
jecxz
(bad)
jecxz
orps
mov
out
adc
push
ficom
mov
xchg
inc
cwde
lods
xor
fwait
jns
inc
adc
movs
mov
call
dec
shr
inc
xor
push
loop
push
(bad)
jecxz
(bad)
jecxz
jecxz
push
sar
(bad)
jecxz
(bad)
jecxz
push
push
mov
inc
call
mov
pop
mov
cmp
inc
movs
jge
inc
sbb
xchg
mov
mov
add
sar
out
aas
(bad)
jecxz
and
ror
out
jecxz
(bad)
jecxz
pop
xlat
pop
push
inc
mov
xor
(bad)
jecxz
adc
mov
mov
push
xlat
iret
movs
xor
inc
xor
loop
push
sar
(bad)
jecxz
xlat
xlat
movs
das
inc
in
or
in
lods
int
sbb
(bad)
out
test
cwde
je
inc
mov
push
(bad)
jecxz
(bad)
jecxz
mov
cmp
jge
jmp
cdq
push
mov
and
push
ror
out
jecxz
(bad)
jecxz
dec
push
in
int
in
lods
frstor
sbb
(bad)
out
test
cwde
je
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
cmp
sub
loopne
(bad)
in
test
cwde
dec
push
inc
hlt
jecxz
(bad)
jecxz
cmp
push
or
(bad)
jecxz
dec
push
scas
shl
js
push
pushf
in
push
jb
jecxz
(bad)
jecxz
loopne
push
sar
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
push
inc
ins
mov
inc
mov
add
push
mov
push
push
(bad)
jecxz
(bad)
jecxz
orps
inc
xor
push
pushf
in
push
jb
jecxz
orps
rol
loope
setp
push
(bad)
jecxz
(bad)
mov
test
int3
jo
inc
aam
pop
(bad)
jecxz
loopne
push
sar
(bad)
jecxz
(bad)
jecxz
(bad)
cmp
loopne
lods
sbb
xchg
add
(bad)
fwait
pop
sar
(bad)
jecxz
(bad)
jecxz
orps
jmp
cdq
or
push
(bad)
jecxz
(bad)
jecxz
orps
push
(bad)
jecxz
arpl
push
push
jle
jecxz
(bad)
dec
dec
xchg
xchg
push
sbb
popa
mov
or
(bad)
out
loop
push
push
ror
loop
or
(bad)
sbb
xchg
add
or
cdq
or
push
(bad)
jecxz
orps
xchg
mov
and
cli
push
popf
in
push
jb
jecxz
orps
push
loop
push
(bad)
jecxz
(bad)
jecxz
outs
push
fidiv
bound
xchg
dec
daa
in
mov
call
(bad)
jecxz
mov
cmps
push
movzx
push
(bad)
jecxz
(bad)
jecxz
dec
xlat
lods
dec
inc
mov
mov
push
and
jecxz
(bad)
jecxz
(bad)
mov
adc
jo
mov
scas
push
or
(bad)
xchg
aad
aam
sbb
inc
mov
push
(bad)
jecxz
(bad)
jecxz
orps
dec
mov
push
(bad)
jecxz
retf
push
adc
jecxz
(bad)
jecxz
orps
jmp
mov
push
inc
cwde
lods
push
setp
xor
(bad)
cli
push
repz
pop
or
mov
(bad)
push
(bad)
jecxz
(bad)
jecxz
(bad)
jnp
or
(bad)
jecxz
(bad)
mov
push
pop
int3
jecxz
(bad)
jecxz
(bad)
imul
push
aam
push
or
(bad)
jecxz
(bad)
jae
dec
(bad)
mov
pop
(bad)
jecxz
mov
mov
push
(bad)
jecxz
(bad)
jecxz
outs
(bad)
pop
push
jle
jecxz
(bad)
jecxz
pop
push
cwde
push
xlat
iret
movs
das
inc
in
adc
into
mov
mov
sbb
inc
test
push
(bad)
movs
das
inc
in
adc
into
mov
mov
push
(bad)
jecxz
(bad)
jecxz
inc
aam
push
inc
cwde
jecxz
(bad)
jecxz
dec
xlat
lods
das
ins
or
popf
inc
test
pop
(bad)
xchg
shl
pop
push
jle
jecxz
xchg
aad
push
bt
(bad)
jecxz
(bad)
arpl
inc
aad
dec
push
pushf
lods
popf
clc
cdq
push
pop
xchg
adc
jecxz
(bad)
jecxz
(bad)
xchg
aad
aam
sbb
inc
mov
push
(bad)
jecxz
(bad)
jecxz
orps
xchg
(bad)
bt
(bad)
jecxz
(bad)
mov
push
movzx
pop
(bad)
jecxz
mov
mov
push
(bad)
jecxz
(bad)
dec
sbb
cwde
lods
push
setp
push
(bad)
jecxz
(bad)
cmp
loopne
lods
inc
mov
int
push
setp
adc
or
push
popf
mov
clc
loope
setp
adc
push
ficomp
inc
cwde
lods
xor
stc
cs
pop
inc
mov
int
push
setp
or
(bad)
mov
xlat
jecxz
(bad)
jecxz
(bad)
jecxz
orps
push
push
mov
jecxz
(bad)
jecxz
addr16
dec
push
jle
jecxz
(bad)
jecxz
push
push
scas
push
inc
enter
call
inc
in
push
(bad)
jecxz
orps
popf
sbb
scas
push
inc
clc
loope
setp
push
(bad)
jecxz
(bad)
sbb
adc
(bad)
jecxz
(bad)
jecxz
gs
stos
push
inc
clc
loope
setp
push
(bad)
jecxz
pop
(bad)
mov
sbb
inc
sbb
or
sbb
inc
mov
mov
or
(bad)
add
push
push
sbb
push
mov
or
(bad)
jecxz
out
push
int3
mov
data16
into
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
mov
(bad)
aam
je
mov
mov
into
jecxz
(bad)
jecxz
(bad)
jecxz
push
push
loop
pminsw
add
jge
sub
inc
in
push
setp
push
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
das
inc
in
and
dec
mov
inc
hlt
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
mov
call
jecxz
(bad)
jecxz
orps
in
pusha
cmp
bswap
jecxz
orps
push
setp
push
(bad)
jecxz
(bad)
mov
ins
push
fidiv
push
mov
ds
pop
or
mov
(bad)
push
(bad)
jecxz
(bad)
jecxz
pop
push
loop
psubd
push
(bad)
jecxz
(bad)
adc
aam
adc
(bad)
jecxz
mov
sbb
mov
jp
loope
scas
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
dec
dec
xchg
xchg
push
mov
loope
lods
push
inc
mov
jecxz
(bad)
dec
dec
xchg
adc
jp
loope
lods
push
inc
shl
(bad)
jecxz
mov
sbb
sahf
xchg
int
push
inc
mov
jecxz
(bad)
jecxz
mov
sbb
mov
inc
mov
jecxz
(bad)
jecxz
(bad)
jecxz
mov
sbb
mov
pushf
jecxz
(bad)
jecxz
(bad)
cmp
mov
imul
jo
jns
mov
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
movs
cmp
in
jnp
or
(bad)
adc
jecxz
(bad)
jecxz
(bad)
mov
movsx
push
(bad)
jecxz
(bad)
jecxz
or
push
inc
hlt
loope
setp
aaa
lahf
push
adc
jecxz
(bad)
jecxz
(bad)
jecxz
dec
(bad)
mov
push
or
(bad)
jecxz
outs
(bad)
pushf
push
jle
jecxz
pop
push
call
push
or
(bad)
jecxz
aaa
aad
push
ins
adc
(bad)
jecxz
(bad)
jecxz
pop
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
orps
push
setp
sbb
adc
mov
push
bt
(bad)
mov
inc
aam
push
or
(bad)
jecxz
aaa
aad
adc
mov
pushf
test
sbb
pop
dec
sbb
das
push
inc
mov
push
xor
movs
jge
adc
out
pop
inc
dec
int3
stos
sahf
mov
scas
addr16
dec
iret
lods
inc
inc
sbb
jmp
xchg
(bad)
mov
jbe
push
imul
pop
and
mov
in
push
lods
call
inc
mov
push
xor
sbb
add
dec
(bad)
mov
sti
xchg
icebp
inc
lock
into
jg
out
scas
push
inc
shl
imul
test
mov
mov
retf
sbb
inc
mov
shl
lods
addr16
sub
aas
out
inc
adc
or
cmps
xchg
stos
mov
idiv
ss
jecxz
mov
push
rcr
pop
or
pop
lahf
loop
scas
pop
inc
mov
dec
popf
mov
lods
dec
test
add
jne
push
jmp
jmp
jecxz
add
inc
or
adc
and
dec
push
fstp
out
pop
push
add
jge
fsub
inc
add
into
hlt
or
cmps
out
bound
push
sahf
stos
call
scas
mov
fs
mov
imul
jno
fiadd
and
(bad)
cld
adc
xor
cmp
loopne
sbb
pop
fadd
jg
mov
jge
ins
add
add
mov
pop
fadd
jg
fadd
jg
mov
ret
inc
out
(bad)
cmp
mov
into
mov
xchg
shr
fmul
xor
add
pop
fadd
jg
fadd
jle
fmulp
sub
adc
xchg
ret
xchg
sub
push
(bad)
fs
fadd
jge
fadd
jg
cmp
jge
ss
mov
inc
adc
fsubp
jg
fadd
jg
mov
jg
fdivr
push
adc
fsubr
adc
retf
push
jl
pop
adc
adc
mov
sbb
fadd
jl
pop
adc
adc
fisttp
push
xchg
fisubr
pop
pop
fadd
jg
add
sub
adc
ins
sbb
jbe
fbstp
fadd
jg
adc
jge
fadd
jg
fadd
jge
jae
inc
lea
adc
int3
cmp
fistp
fadd
jg
pop
jecxz
sbb
addr16
int3
cmp
pop
out
sub
pop
jecxz
mov
and
cmp
pop
out
adc
fadd
call
xchg
rcr
push
sar
add
in
fidiv
mov
repnz
xchg
cmc
loope
sbb
pop
fadd
jg
in
shr
neg
sbb
adc
add
cmp
cmp
cmp
cmp
das
jle
fadd
jg
add
adc
mov
sbb
adc
sub
cmp
push
jl
fadd
jg
ret
push
jl
pop
sbb
adc
fadd
jg
fadd
jle
mov
retf
fwait
into
push
(bad)
mov
ret
xchg
sub
dec
or
fxch
fwait
fwait
iret
jne
(bad)
int
lahf
adc
or
dec
push
or
adc
xor
and
xchg
aam
cmovg
xchg
mov
mov
call
inc
nop
lods
sbb
aaa
scas
xor
inc
mov
fst
fwait
push
sar
(bad)
jecxz
(bad)
jecxz
orps
xor
push
cmps
jecxz
(bad)
jecxz
(bad)
jecxz
inc
push
mov
inc
in
xor
dec
cdq
lods
jno
lahf
rcl
inc
call
cmp
mov
push
dec
push
mov
inc
sbb
daa
push
push
inc
mov
ret
cs
push
inc
jbe
fs
repnz
clc
not
inc
pop
outs
imul
sti
pusha
push
xchg
icebp
mov
ss
iret
pop
(bad)
mov
inc
lea
push
sub
cwde
lods
inc
lods
call
cmps
mov
sbb
in
fwait
mov
sbb
inc
and
xor
je
jg
mov
lods
mov
cdq
mov
test
jecxz
push
lods
xchg
adc
cmps
mov
sbb
pop
sub
das
mov
cli
mov
add
test
dec
xchg
mov
mov
xchg
div
mov
xchg
stos
lods
out
jg
mov
icebp
inc
or
in
dec
cdq
fucomip
out
push
xor
cwde
mov
lods
push
out
mov
xchg
dec
repnz
push
mov
dec
push
mov
mov
cmp
repnz
fs
hlt
xor
out
cmp
out
push
mov
jbe
in
outs
mov
lods
mov
fwait
pop
dec
push
call
cmps
cwde
dec
mov
pop
dec
sbb
xlat
sbb
repnz
enter
es
cwde
add
iret
cwde
dec
pop
and
dec
sti
cmps
cwde
add
cmps
cwde
dec
mov
cwde
enter
lods
add
cdq
xor
cmps
cwde
dec
mov
je
pop
mov
sub
mov
cwde
dec
mov
ror
mov
pop
(bad)
jecxz
call
sahf
js
aad
xchg
mov
mov
cwde
dec
mov
cwde
dec
cmc
jmp
dec
in
sbb
hlt
jle
and
lock
ins
fild
sahf
(bad)
adc
es
add
mov
cwde
enter
xchg
fwait
dec
mov
cwde
dec
in
in
add
aad
sti
cmps
call
call
retf
add
aad
sti
cmps
call
call
retf
add
aad
sti
cmps
call
cmps
cwde
dec
mov
enter
sub
mov
cwde
add
cmps
cwde
dec
mov
cwde
dec
pop
dec
ror
pop
rol
mov
cwde
dec
mov
cwde
dec
mov
enter
sub
mov
cwde
dec
mov
cwde
dec
mov
ror
test
fisub
cwde
sbb
cmps
(bad)
es
cwde
add
sahf
cwde
dec
cmc
js
leave
(bad)
call
jle
push
retf
sub
add
cdq
and
call
(bad)
mov
sub
mov
cwde
dec
mov
cwde
dec
int
push
retf
add
jne
stc
mov
sbb
jecxz
call
jmp
(bad)
dec
sti
pop
add
and
xchg
lods
and
jp
cmps
cwde
sbb
cmps
cwde
dec
mov
cwde
dec
mov
ror
imul
out
(bad)
push
sti
cmps
cwde
add
inc
sub
xchg
cmps
xlat
jp
cmps
cwde
dec
mov
cwde
dec
cdq
xchg
retf
push
(bad)
jp
cmps
cwde
add
(bad)
cwde
dec
int
movs
retf
add
xchg
jnp
sub
aam
mov
cmps
xlat
push
cmps
cwde
dec
mov
cwde
dec
in
jg
mov
call
xchg
xchg
sub
mov
cwde
dec
mov
call
inc
in
dec
sub
jmp
imul
stc
stos
(bad)
push
hlt
test
sbb
ror
call
jbe
cmp
xlat
scas
jl
sub
mov
cwde
dec
aad
xchg
leave
in
cmps
call
fld
dec
test
cwde
dec
mov
cwde
retf
mov
sub
sti
push
(bad)
outs
mov
cwde
add
cmps
cwde
dec
mov
je
cmp
xlat
scas
jo
sub
mov
cwde
dec
mov
cwde
dec
xchg
xchg
ror
imul
mov
aam
xchg
cmc
in
cmps
call
(bad)
dec
push
jnp
add
cli
cmps
(bad)
push
mov
cwde
dec
mov
cwde
enter
dec
push
push
(bad)
push
mov
cwde
dec
mov
cwde
dec
mov
or
sub
xchg
loop
cdq
pop
sub
mov
lods
addr16
cmps
call
sahf
cwde
dec
cmc
pop
xchg
retf
add
sub
out
push
jle
iret
xchg
in
add
xchg
sti
stos
(bad)
(bad)
es
xchg
push
xchg
xchg
sti
cmps
(bad)
es
cwde
add
rcr
cli
cmp
cs
stos
sub
stc
jmp
add
ja
add
(bad)
inc
mov
cwde
dec
mov
jecxz
mov
push
loop
jns
sub
mov
pop
gs
cmps
call
pop
xchg
retf
add
sub
out
push
jle
iret
xchg
hlt
mov
lods
inc
popf
mov
cmps
(bad)
es
cwde
add
(bad)
cwde
dec
aad
hlt
retf
add
cdq
js
cmps
cwde
dec
mov
cwde
dec
cmc
pop
hlt
retf
add
sub
out
push
rol
sub
(bad)
jp
call
(bad)
sub
mov
hlt
mov
jmp
jmp
jns
and
dec
sti
cmps
cwde
add
out
dec
mov
and
jge
lds
jb
(bad)
jmp
jle
push
xchg
loop
test
pop
add
jp
movs
sub
sub
add
and
jmp
cmps
cwde
dec
mov
cwde
dec
mov
push
retf
(bad)
xchg
shr
sub
add
sub
jmp
movs
fwait
jp
cmps
cwde
add
out
dec
mov
and
jl
xor
sti
call
xlat
scas
sbb
sub
mov
cwde
dec
aad
(bad)
retf
add
cdq
js
cmps
cwde
dec
mov
clc
dec
jmp
dec
mov
cwde
dec
or
cmps
cwde
adc
sti
cwde
dec
in
cli
or
cmps
cwde
js
cmps
cwde
dec
mov
cwde
dec
mov
call
cmps
cwde
xor
xchg
clc
dec
jmp
cmps
cwde
js
cmps
cwde
dec
mov
cwde
dec
cmc
iret
cmc
dec
pop
cmps
add
add
cwde
js
cmps
cwde
dec
mov
cwde
dec
mov
ror
sub
mov
cwde
dec
mov
aam
out
inc
aad
sti
cmps
mov
mov
cwde
dec
mov
and
cmps
xlat
inc
mov
cwde
dec
mov
enter
xchg
pop
sti
cmps
cli
add
cmps
cwde
dec
mov
cwde
dec
adc
cmps
adc
mov
cwde
dec
mov
and
sti
cmps
call
cmps
cwde
dec
mov
sbb
pop
enter
pop
mov
add
cdq
and
cmps
cwde
dec
mov
loopne
sbb
ja
into
cmps
(bad)
and
fisttp
mov
sbb
push
jmp
movs
(bad)
jp
cmps
cwde
add
(bad)
cwde
dec
mov
movs
dec
imul
push
sti
in
fiadd
push
(bad)
add
jle
retf
(bad)
push
sti
(bad)
add
jmp
pop
daa
dec
rol
js
cmps
cwde
dec
mov
cwde
dec
mov
je
mov
cwde
dec
mov
pop
dec
mov
cwde
dec
mov
cwde
dec
or
jmp
(bad)
push
sub
sub
add
cmp
cmps
cwde
dec
mov
cwde
enter
jns
sub
mov
cwde
dec
mov
cwde
dec
mov
cwde
enter
stc
add
or
adc
cmps
cwde
dec
mov
enter
aam
xchg
lods
lds
(bad)
cmp
push
mov
jmp
adc
ja
adc
xor
stc
stc
loope
aam
mov
imul
add
sar
out
push
(bad)
jecxz
(bad)
bsr
aad
loop
add
push
mov
mov
inc
mov
int
push
setp
(bad)
out
jb
mov
mov
pop
mov
pop
ja
and
mov
lods
scas
push
sbb
inc
call
dec
pop
mov
dec
mov
addr16
push
(bad)
lods
pop
test
out
arpl
add
jae
mov
xchg
in
jno
mov
push
(bad)
fcomp
inc
mov
mov
jo
dec
mov
fiadd
dec
mov
mov
pop
mov
adc
dec
out
add
or
mov
jo
rcr
stc
push
lahf
pop
adc
inc
mov
stos
and
daa
push
shl
xchg
mov
sahf
xor
repnz
adc
out
(bad)
mov
sti
out
ret
mov
loopne
outs
cli
repnz
jmp
in
sbb
mov
xchg
mov
arpl
and
jbe
mov
jno
sbb
sbb
inc
adc
lahf
mov
sti
outs
inc
cld
inc
mov
sbb
retf
and
mov
sar
je
popa
stos
bound
inc
pusha
(bad)
inc
cld
or
sbb
sbb
js
in
xchg
repnz
addr16
loop
adc
dec
pop
xchg
inc
loope
cmp
fwait
inc
loop
push
push
cmc
dec
out
out
xor
cmc
stos
repnz
cli
movs
and
popf
pop
loope
loope
ret
inc
jle
push
add
clc
gs
xchg
dec
jo
lahf
push
pop
inc
shl
mov
xchg
push
and
into
dec
jo
lahf
push
jo
push
push
sbb
mov
add
jle
add
jo
add
or
pop
pop
ds
dec
sbb
hlt
add
pop
xchg
adc
hlt
dec
sbb
hlt
add
jl
add
movs
shl
ds
dec
sbb
adc
hlt
dec
sbb
hlt
add
push
hlt
add
mov
sbb
mov
movs
mov
int3
push
ds
dec
sbb
add
hlt
dec
sbb
hlt
add
jle
add
gs
add
ds
add
push
hlt
add
lock
push
test
hlt
add
pop
inc
jns
dec
dec
mov
mov
add
jle
add
outs
movs
add
cmp
ds
popa
sbb
hlt
add
mov
add
ds
pop
sbb
add
outs
movs
add
cmp
ds
popa
sbb
hlt
add
data16
cmp
add
movs
mov
dec
push
in
pop
nop
jno
int
push
jle
cmp
int3
stos
icebp
fdiv
push
xchg
mov
fld
sbb
mov
sbb
aad
inc
cwde
stc
pop
inc
cwde
pop
imul
pushf
add
add
jge
adc
inc
mov
push
or
out
sbb
inc
push
sar
jne
lock
popf
loop
scas
sub
addr16
enter
jae
aam
push
and
mov
ins
nop
bound
jmp
lods
sub
mov
mov
push
pop
push
test
xor
pop
mov
xor
into
dec
jno
pop
mov
mov
out
jno
imul
aas
fidiv
lods
loop
sbb
scas
data16
in
aaa
mov
jnp
repnz
in
outs
js
out
mov
iret
stos
ds
sbb
arpl
inc
cld
add
cwde
add
loope
push
mov
aaa
push
in
ret
arpl
jno
xor
call
mov
push
xor
inc
mov
sbb
push
cmp
jp
cld
add
sbb
mov
dec
(bad)
mov
mov
push
jle
fistp
xchg
jae
mov
into
dec
out
call
call
mov
mov
pop
arpl
jae
sub
xchg
fisub
leave
sub
jnp
imul
leave
jnp
jp
xlat
and
sub
dec
leave
or
jnp
xchg
xchg
stc
out
cwde
mov
pusha
arpl
xchg
xor
leave
sub
jnp
sub
jnp
mov
push
xchg
mov
gs
xchg
xchg
mov
xor
inc
xchg
jb
call
js
xchg
test
out
das
dec
out
test
push
sub
push
or
(bad)
jecxz
ja
sbb
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
scas
sbb
or
(bad)
mov
pusha
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
inc
aad
push
inc
test
push
setp
push
(bad)
jecxz
(bad)
mov
loopne
push
sar
(bad)
jecxz
(bad)
jecxz
orps
push
mov
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
dec
lahf
jle
arpl
inc
mov
push
(bad)
jecxz
(bad)
mov
or
(bad)
mov
xlat
jecxz
(bad)
jecxz
(bad)
jecxz
orps
mov
int
push
setp
push
(bad)
jecxz
fcmovnbe
mov
add
(bad)
aaa
sbb
or
(bad)
jecxz
(bad)
pop
pop
jne
sbb
mov
int3
dec
push
inc
(bad)
(bad)
jecxz
(bad)
jecxz
mov
out
push
jle
jecxz
pop
aad
push
pminub
push
addr16
loope
setb
push
(bad)
jecxz
ja
or
loopne
xor
inc
bound
mov
int
push
setp
push
(bad)
jecxz
(bad)
mov
in
xchg
enter
adc
xchg
xchg
dec
push
push
pop
call
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
pminub
bound
push
sar
out
push
(bad)
jecxz
(bad)
sbb
xchg
pop
sbb
inc
enter
mov
push
(bad)
jecxz
pop
xlat
push
sar
out
push
(bad)
jecxz
jecxz
test
push
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
mov
xor
lods
push
push
cdq
loope
bt
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
outs
(bad)
and
push
mov
push
push
lods
mov
addr16
out
jecxz
popf
mov
in
push
setp
pop
xlat
dec
popf
mov
in
push
setp
or
(bad)
fwait
bound
popa
lods
out
inc
mov
fidivr
in
sbb
sbb
push
(bad)
jecxz
(bad)
mov
mov
loop
mov
or
(bad)
add
push
push
mov
jge
scas
das
inc
cwde
mov
push
inc
in
push
setp
push
(bad)
jecxz
(bad)
jecxz
push
push
push
loopne
stos
or
fcomp
lods
push
push
mov
push
bt
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
add
push
mov
and
(bad)
pop
sahf
mov
in
loope
int3
lods
test
sbb
xchg
jecxz
(bad)
jecxz
(bad)
jecxz
mov
push
movs
mov
sbb
outs
out
push
jle
jecxz
(bad)
fcmovnbe
mov
out
push
(bad)
jecxz
(bad)
jecxz
and
jecxz
(bad)
jecxz
(bad)
jecxz
es
push
or
(bad)
jecxz
pop
xlat
push
sar
out
or
(bad)
sbb
xchg
pop
sbb
inc
enter
mov
push
(bad)
mov
mov
out
push
(bad)
jecxz
jecxz
push
push
inc
movs
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
jecxz
push
push
push
popf
mov
cwde
mov
push
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
outs
(bad)
and
push
mov
push
push
lods
mov
addr16
out
jecxz
popf
mov
in
push
setp
push
(bad)
jecxz
pop
xlat
dec
popf
mov
in
push
setp
push
(bad)
jecxz
(bad)
fwait
bound
popa
lods
out
inc
mov
fidivr
in
sbb
sbb
push
(bad)
jecxz
(bad)
jecxz
dec
push
push
sbb
inc
ins
push
rcl
loope
setp
or
(bad)
add
push
push
mov
jge
scas
das
inc
pushf
mov
push
inc
in
push
setp
push
(bad)
jecxz
(bad)
jecxz
push
push
push
loopne
stos
or
fcomp
lods
push
push
mov
push
bt
(bad)
adc
jecxz
(bad)
jecxz
add
push
mov
and
(bad)
jecxz
(bad)
pop
mov
in
loope
fsubr
push
inc
xchg
jecxz
(bad)
jecxz
mov
push
lods
mov
or
jmp
push
push
int
push
bt
outs
(bad)
loope
setp
pusha
(bad)
out
test
push
dec
push
inc
aam
push
(bad)
jecxz
(bad)
jecxz
mov
out
push
jo
jecxz
(bad)
jecxz
(bad)
scas
sar
out
push
(bad)
jecxz
(bad)
cmp
mov
das
ins
sub
pop
lahf
pop
popf
mov
in
push
setp
push
(bad)
jecxz
(bad)
sqrtps
mov
push
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
jecxz
outs
push
pushf
push
pmaxsw
pop
(bad)
fwait
push
or
(bad)
and
push
ror
loop
push
(bad)
jecxz
out
stos
push
push
mov
jecxz
(bad)
add
mov
or
mov
mov
loopne
push
ins
call
(bad)
jecxz
(bad)
scas
push
movzx
push
(bad)
jecxz
(bad)
scas
bound
push
xchg
mov
sahf
or
mov
push
fistp
pop
push
push
inc
in
push
setp
push
(bad)
jecxz
(bad)
mov
push
inc
in
push
setp
pop
(bad)
mov
sbb
in
data16
dec
mov
pmaxsw
mov
and
(bad)
jecxz
(bad)
dec
cdq
jle
fisttp
inc
mov
popf
inc
loopne
push
or
(bad)
jecxz
ja
bsf
gs
push
jle
jecxz
(bad)
scas
push
movzx
push
(bad)
jecxz
(bad)
push
sbb
pop
mov
or
(bad)
jecxz
(bad)
inc
push
inc
aam
push
setp
adc
(bad)
jecxz
mov
push
in
mov
pop
sar
out
dec
aam
jmp
jb
ror
loop
push
(bad)
jecxz
(bad)
inc
xor
push
loopne
aaa
shl
pminub
push
(bad)
jecxz
out
aam
pushf
mov
in
push
or
(bad)
mov
mov
or
(bad)
jecxz
outs
(bad)
loope
setp
push
add
shl
and
(bad)
jecxz
(bad)
jecxz
mov
in
mov
nop
out
inc
mov
int
push
setp
das
(bad)
aad
sar
out
pop
orps
mov
in
push
(bad)
jecxz
(bad)
scas
push
inc
test
xor
push
ficom
mov
push
psubd
push
(bad)
mov
mov
out
push
(bad)
jecxz
(bad)
jecxz
outs
push
fidiv
adc
retf
push
mov
or
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
add
push
mov
and
(bad)
jecxz
(bad)
dec
mov
hlt
jecxz
(bad)
jecxz
inc
aam
push
inc
pushf
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
aam
push
or
(bad)
jecxz
(bad)
jecxz
pop
xlat
push
sar
out
push
(bad)
jecxz
(bad)
(bad)
add
stc
popa
repz
fnstsw
mov
or
(bad)
jecxz
mov
dec
dec
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
movs
das
inc
in
xor
test
rol
sub
lods
push
jb
jecxz
(bad)
jecxz
push
push
out
push
inc
call
jecxz
(bad)
fwait
or
fist
pusha
pop
cli
push
movs
in
push
jb
jecxz
(bad)
mov
imul
adc
jecxz
(bad)
jecxz
dec
aam
push
(bad)
jecxz
(bad)
cmp
mov
das
ins
cmp
dec
inc
mov
mov
or
(bad)
jecxz
(bad)
rsqrtps
push
push
push
(bad)
jecxz
(bad)
jecxz
mov
mov
inc
jo
ret
inc
mov
xor
icebp
push
cwde
push
ret
addr16
xor
(bad)
push
hlt
stos
cmps
clc
bound
je
jno
loopne
out
sbb
scas
cli
mov
mov
arpl
pushf
dec
out
push
mov
(bad)
mov
mov
mov
and
xchg
xor
or
inc
cwde
lods
popf
jmp
inc
push
je
adc
lods
or
fwait
pop
sub
jb
out
inc
adc
mov
lods
call
inc
mov
inc
push
push
xchg
mov
inc
jo
out
xor
pushf
das
mov
cs
xor
leave
dec
sbb
jbe
ja
std
daa
cli
xchg
sti
out
xor
popf
das
outs
scas
arpl
aaa
dec
repnz
out
mov
add
loop
jne
popf
cmps
test
fmul
xor
xchg
mov
pop
inc
loope
repnz
push
lock
dec
mov
stos
je
stos
out
sbb
cmps
dec
dec
popf
adc
cmp
mov
sbb
mov
mov
xchg
inc
mov
out
inc
cmp
push
push
cmc
dec
addr16
rcr
mov
out
add
stos
data16
stos
pop
fist
repz
out
out
lahf
pushf
das
(bad)
fwait
mov
inc
xor
inc
in
jmp
push
inc
in
jmp
push
inc
in
jmp
push
inc
aam
push
inc
in
aad
inc
in
jmp
ss
mov
push
inc
in
jmp
push
ins
in
jmp
push
inc
in
jmp
mov
or
mov
pop
mov
push
inc
in
movs
push
inc
test
mov
and
jmp
push
inc
in
test
in
jmp
push
inc
in
jmp
push
jl
imul
ret
mov
movs
push
sub
jmp
push
inc
in
popf
push
pop
or
in
jle
add
lds
in
jmp
push
inc
in
jmp
push
xchg
mov
inc
in
jmp
push
mov
loope
iret
out
pop
fdiv
ret
mov
movs
push
pop
or
in
add
dec
rol
inc
in
mov
push
jl
jmp
sbb
movs
push
inc
in
jmp
push
sub
js
dec
movs
and
cmps
push
or
movs
sbb
data16
pusha
jb
mov
sbb
mov
adc
fwait
out
loop
fcom
push
out
push
(bad)
jecxz
(bad)
jecxz
jmp
add
test
int3
dec
push
inc
xchg
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
mov
sbb
inc
call
jecxz
(bad)
or
inc
aam
pusha
aaa
cdq
loop
xchg
pop
push
shl
out
push
(bad)
jecxz
(bad)
jecxz
mov
scas
xor
jnp
jmp
adc
shl
and
(bad)
jecxz
(bad)
jecxz
xchg
push
push
sbb
sbb
push
(bad)
or
inc
sbb
jmp
sbb
push
(bad)
jecxz
(bad)
jecxz
addr16
cld
push
jle
jecxz
call
cmp
rcr
and
(bad)
jecxz
(bad)
jecxz
ins
(bad)
sub
pmaxsw
push
(bad)
iret
push
movsx
push
(bad)
jecxz
(bad)
jecxz
aaa
aad
push
bt
(bad)
jecxz
(bad)
mov
aam
push
(bad)
jecxz
(bad)
jecxz
(bad)
sti
loope
sub
push
mov
dec
lods
loope
xor
rcr
and
(bad)
pop
sti
inc
xchg
mov
mov
mov
int
push
setp
push
(bad)
jecxz
(bad)
push
mov
push
cli
shl
and
(bad)
jecxz
xlat
xlat
movs
sbb
inc
cwde
add
lods
loop
cdq
push
ror
out
push
(bad)
jecxz
dec
push
scas
test
jns
xor
inc
sbb
push
inc
xchg
dec
sbb
xchg
add
add
sbb
inc
cwde
jecxz
(bad)
jecxz
push
aad
push
pminub
push
(bad)
jecxz
fcmovnbe
scas
sar
(bad)
jecxz
(bad)
jecxz
(bad)
movs
cmp
jns
lods
and
lods
sbb
inc
cmp
cdq
mov
addr16
push
mov
das
jmp
jb
sbb
popf
mov
lods
or
and
and
loop
jo
imul
fbld
fistp
xor
xor
add
dec
mov
aas
je
dec
jbe
clc
call
mov
pop
in
sbb
jb
mov
ret
push
or
retf
push
mov
and
push
dec
jno
sahf
mov
sbb
mov
out
adc
mov
xor
mov
pop
dec
popf
iret
xchg
lods
popa
lods
sbb
ds
cmps
loop
aaa
push
test
data16
movs
pop
adc
pop
xor
cli
push
mov
movs
pop
sti
lea
(bad)
int
neg
inc
xor
and
out
pushf
dec
and
add
stos
sub
or
push
mov
stc
arpl
inc
mov
sbb
push
out
stos
out
test
fisttp
out
lahf
inc
xor
pop
mov
arpl
pop
pushf
jo
(bad)
jmp
bound
pop
xor
sti
cmp
test
imul
sub
mov
cmc
cmp
xchg
rol
fnstcw
test
jbe
add
jl
sar
pop
pop
stos
jne
test
add
xor
fidivr
xor
lods
cmp
and
adc
test
cmp
test
(bad)
mov
and
pop
xor
(bad)
cmp
test
pusha
test
mov
sar
int
xor
sar
sar
ret
movs
ss
in
xor
cdq
cmp
test
pusha
test
cli
movs
shl
lea
test
ins
push
rcr
(bad)
cmp
test
xor
sar
inc
outs
xor
adc
xor
icebp
cmp
test
jnp
ret
jno
inc
xor
outs
test
jnp
enter
mov
outs
mov
lea
sbb
adc
or
sub
data16
inc
mov
push
push
(bad)
jecxz
(bad)
jecxz
dec
xlat
lods
inc
ins
pop
loop
sbb
mov
push
(bad)
jecxz
outs
push
pushf
push
pmaxsw
push
(bad)
jecxz
(bad)
scas
add
mov
add
scas
add
pop
jl
push
(bad)
jecxz
lahf
xlat
mov
push
jb
loop
rsm
jecxz
(bad)
jecxz
(bad)
adc
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
out
push
adc
(bad)
jae
inc
push
mov
push
(bad)
jecxz
(bad)
jecxz
adc
mov
push
xor
push
bt
(bad)
mov
dec
push
scas
popf
je
mov
in
add
push
(bad)
jecxz
(bad)
jecxz
(bad)
xor
mov
push
(bad)
mov
bt
(bad)
jecxz
(bad)
aaa
push
bt
(bad)
jecxz
(bad)
jecxz
pop
xlat
inc
in
popf
sar
sub
movs
das
inc
in
sbb
inc
mov
into
jecxz
(bad)
jecxz
orps
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
mov
jns
imul
jecxz
(bad)
jae
pop
push
jmp
scas
lea
test
pop
(bad)
jecxz
push
call
dec
out
imul
xchg
test
mov
push
inc
mov
pop
jmp
jle
xlat
sub
repnz
pop
out
aad
mov
pop
cmp
inc
jb
fwait
pop
ret
push
mov
leave
inc
push
(bad)
fnstenv
pop
mov
push
adc
popf
or
in
in
scas
xor
inc
mov
test
inc
sahf
mov
scas
jnp
mov
push
jmp
dec
aas
into
mov
mov
pop
jge
xchg
push
inc
lods
inc
jb
cdq
pop
jmp
or
inc
call
fcomp
ret
movs
xor
inc
inc
cld
inc
mov
call
in
xchg
mov
xchg
mov
sbb
fidivr
popf
mov
mov
mov
sbb
out
inc
xor
out
push
xor
lods
adc
push
and
aaa
push
jge
fild
out
addr16
ficomp
fimul
pop
sbb
outs
jb
adc
mov
xor
inc
(bad)
jp
mov
xor
aaa
mov
xchg
test
push
bound
hlt
push
mov
xchg
mov
call
out
push
ret
jmp
xchg
jno
std
mov
push
push
push
pusha
push
cmps
mov
pop
es
xchg
stos
xor
mov
pop
jle
mov
pop
jle
pop
or
push
scas
mov
sahf
(bad)
sar
ja
jne
mov
sahf
dec
in
push
push
ja
or
xchg
jne
into
sub
pop
mov
in
push
inc
adc
jle
in
mov
sbb
in
lahf
lea
mov
mov
arpl
jg
jae
sbb
jmp
push
mov
mov
inc
mov
loopne
inc
push
loop
dec
push
inc
push
std
dec
mov
jl
inc
push
mov
in
jbe
add
addr16
pop
sti
outs
je
mov
jbe
lods
xor
mov
sahf
loop
add
movs
sbb
adc
inc
xor
lods
jmp
lods
xor
fwait
inc
xchg
push
mov
cmps
sti
pop
pop
lods
mov
idiv
mov
rcr
loope
inc
lea
mov
cwde
lods
mov
cdq
dec
push
mov
add
add
jg
mov
xor
pop
push
idiv
data16
inc
cmp
stos
cmps
je
sahf
mov
pop
call
in
fwait
popa
(bad)
in
push
retf
mov
jo
sar
shl
dec
mov
mov
stos
mov
div
xchg
dec
lock
and
loop
xor
mov
xor
stos
inc
inc
dec
pop
mov
push
jl
inc
(bad)
aaa
iret
mov
aaa
push
add
xchg
leave
mov
cwde
push
sbb
cmp
shl
and
mov
shr
and
xor
dec
inc
imul
pop
add
in
and
sbb
cdq
sub
and
jmp
popa
adc
in
push
or
xor
mov
or
jge
in
popf
and
popf
in
and
sbb
shr
mov
movs
leave
sbb
xchg
cdq
cmp
sbb
popf
pusha
adc
in
shl
jmp
cdq
pusha
xor
shl
js
adc
dec
jmp
and
mov
shr
mov
push
sbb
mov
push
les
in
popf
and
popf
call
push
jge
mov
and
mov
and
sbb
icebp
popf
pusha
adc
in
shl
jmp
cdq
pusha
xor
shl
js
add
fst
in
and
imul
jmp
call
sbb
nop
push
xor
sub
cld
or
and
in
fnstsw
fucomi
mov
ret
mov
lea
lods
mov
shr
ret
mov
es
and
jl
inc
fucomi
mov
ret
mov
lea
ins
mov
and
mov
push
adc
(bad)
fild
jae
fistp
aaa
fistp
out
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
push
mov
mul
inc
cld
mov
enter
test
inc
jb
popa
inc
icebp
adc
inc
dec
cs
push
push
stos
idiv
add
inc
cld
arpl
xchg
sbb
sub
lock
popf
dec
cmc
xor
inc
sub
dec
mov
xchg
bound
xchg
mov
cld
xchg
cmp
inc
mov
lods
popf
push
cwde
lods
imul
mov
hlt
push
or
repnz
pop
mov
push
pop
add
dec
outs
mov
dec
xlat
dec
cmc
dec
xchg
mov
xchg
or
inc
mov
mov
retf
mov
or
scas
push
and
sahf
sar
and
sbb
(bad)
xor
mov
xchg
out
inc
inc
mov
fwait
pop
std
jb
fild
in
out
inc
fcmovb
jmp
mov
jo
jle
jb
xchg
mov
out
dec
stos
push
inc
rcr
add
mov
je
jecxz
je
repnz
out
loop
ja
call
mov
ret
out
ret
dec
mov
cmp
push
lock
out
loop
imul
loop
pop
push
std
mov
loope
jbe
cwde
inc
jmp
out
shr
mov
inc
xchg
stos
jle
jmp
stos
ret
scas
popa
sub
push
sbb
lock
mov
mov
or
pusha
mov
ret
mov
in
or
and
mov
mov
or
in
or
and
xchg
dec
mov
push
mov
(bad)
mov
in
or
in
or
sub
mov
jo
lahf
cmp
fld
jo
lahf
cmp
mov
in
or
mov
mov
mov
cmc
stos
in
or
mov
inc
(bad)
in
inc
mov
shl
stos
out
adc
stos
in
inc
not
push
inc
mov
sbb
inc
sub
popa
imul
or
in
mov
iret
in
inc
mov
mov
sub
int3
mov
mov
test
ja
stos
in
adc
stos
in
inc
imul
in
inc
mul
inc
mov
stos
in
inc
mul
or
les
mov
mov
add
sahf
mov
stos
in
inc
neg
in
inc
aaa
test
inc
mov
stos
in
inc
test
mov
dec
mov
mov
and
mov
inc
imul
in
(bad)
mov
or
stos
in
inc
mul
or
les
mov
mov
add
sahf
mov
stos
in
inc
imul
sub
fld
in
inc
test
mov
dec
mov
mov
and
mov
inc
mul
inc
mov
stos
in
inc
mul
add
xchg
push
cmc
stos
in
or
cdq
in
inc
sti
jl
(bad)
pusha
stos
mov
inc
imul
in
lds
sub
mov
or
mov
mov
inc
(bad)
mov
stos
in
inc
test
push
inc
fld
in
inc
imul
in
inc
cmps
and
mov
stos
in
inc
imul
mov
ja
retf
xchg
imul
in
lds
stos
in
or
xchg
in
inc
(bad)
in
inc
mov
fs
inc
mov
stos
in
inc
imul
in
and
imul
in
inc
test
mov
imul
mov
mov
or
stos
in
or
stos
in
inc
not
in
inc
pop
loopne
inc
repnz
dec
cmc
mov
mov
xchg
int
int
pop
loope
or
sub
sbb
mul
mov
stos
in
inc
imul
push
inc
outs
sub
sbb
test
push
(bad)
loope
mov
inc
imul
in
lds
stos
in
or
imul
inc
ja
mov
cmp
in
or
stos
in
inc
idiv
jle
test
or
shr
inc
mul
je
loope
mov
pop
xchg
scas
pushf
stos
out
adc
stos
in
inc
imul
mov
push
pop
stc
jbe
and
in
xor
stos
in
inc
idiv
in
lds
in
add
(bad)
in
inc
mul
inc
test
mov
inc
div
inc
mov
stos
in
inc
test
mov
or
stos
in
inc
mul
in
inc
adc
add
shl
and
in
dec
mov
sub
and
stos
in
or
stos
in
inc
div
scas
(bad)
mov
stos
in
inc
test
mov
sub
out
or
mov
xor
retf
out
push
imul
pop
inc
xchg
sub
or
mov
mov
mov
jle
mov
retf
mul
je
fld
in
inc
imul
and
stos
in
or
stos
in
inc
idiv
in
lds
in
or
(bad)
in
inc
mov
test
xchg
mov
fnsave
mov
push
pop
push
pop
fwait
mov
mov
sbb
stos
mov
or
stos
in
inc
idiv
in
inc
cmps
in
inc
mov
stos
in
inc
imul
cmp
sub
inc
imul
in
(bad)
scas
movs
xor
por
in
inc
test
fadd
(bad)
in
inc
imul
xchg
stos
in
jno
stos
in
inc
idiv
in
inc
mov
test
add
mov
stos
sub
cmc
stos
in
or
cli
in
inc
mov
test
adc
mov
sub
in
or
fs
mov
gs
stos
in
inc
imul
cld
(bad)
out
test
ja
stos
in
adc
stos
in
inc
test
in
or
stos
in
inc
mul
in
inc
adc
add
fcomp
lds
clc
je
xor
mov
pop
mov
gs
sub
in
retf
out
push
imul
in
inc
test
mov
imul
in
inc
pop
adc
inc
mov
stos
mov
cmc
stos
in
or
xchg
cmc
stos
in
or
stos
in
inc
mul
inc
inc
mov
mov
inc
neg
dec
test
and
stos
in
or
stos
in
inc
imul
in
inc
mul
push
inc
loope
mov
adc
stos
in
or
cli
in
inc
mov
test
xlat
xor
mov
pop
mov
in
sub
stos
in
inc
div
in
inc
ja
fadd
adc
add
mov
repnz
mov
in
dec
mov
test
and
stos
in
or
stos
in
inc
div
scas
(bad)
mov
stos
in
inc
imul
sub
fsubr
in
inc
test
pop
or
xor
or
in
xchg
ficomp
cmc
push
pusha
stos
mov
inc
imul
in
lds
ret
je
jl
or
mov
inc
not
dec
or
in
outs
cmps
sub
inc
neg
cmc
and
inc
imul
in
inc
imul
in
dec
imul
ins
inc
mov
mov
pop
cmc
stos
in
push
imul
in
inc
and
in
inc
imul
in
inc
imul
mov
sub
mov
stos
in
and
imul
mov
add
and
fld
in
inc
imul
in
inc
sbb
cmc
mov
mov
inc
test
add
out
shl
xchg
push
cmc
stos
in
or
stos
in
inc
test
mov
sub
in
sub
repnz
mov
test
dec
mov
out
inc
cmp
cli
dec
mov
mov
inc
inc
in
enter
push
imul
in
inc
div
cs
out
push
imul
in
inc
idiv
pop
inc
in
mov
stos
in
inc
imul
mov
push
test
or
in
or
jmp
push
sbb
jg
inc
gs
je
loope
push
xchg
xchg
mov
pop
sub
xchg
cwde
lods
add
lahf
adc
mov
mov
adc
push
inc
call
xor
adc
cmc
inc
lock
jmp
push
test
test
push
pop
lock
push
cli
mov
inc
addr16
stos
mov
ret
data16
mov
in
xor
sbb
cwde
nop
add
cs
mov
xor
fbstp
adc
push
dec
pop
ror
pop
inc
mov
xchg
add
inc
cld
inc
xor
pusha
ret
mov
in
scas
adc
jbe
scas
mov
push
mov
ja
icebp
dec
outs
mov
sahf
mov
pusha
scas
ins
cmps
mov
adc
push
pop
loop
aaa
push
(bad)
out
out
mov
jg
mov
dec
add
pushf
or
cmps
out
xchg
pop
mov
mov
push
sbb
jp
je
and
mov
loop
adc
loop
imul
fidivr
push
adc
dec
mov
neg
push
into
scas
out
fdivr
jno
cld
xchg
sbb
scas
ss
shr
movs
inc
and
ficom
or
and
bound
movs
inc
jge
stos
out
fnstsw
inc
inc
pop
sub
test
sub
mov
scas
pop
jcxz
or
mov
pop
pop
fisub
inc
aas
ja
inc
addr16
sti
imul
bound
aas
xlat
iret
adc
(bad)
dec
in
xlat
sti
dec
cmp
jo
ret
ret
imul
jnp
addr16
jo
ret
mov
clc
stos
shl
jge
(bad)
jnp
sub
rcr
jbe
int3
jmp
int3
stos
inc
jp
stos
inc
jp
stos
inc
jnp
stos
jecxz
or
inc
cli
int
inc
sub
lock
xor
xor
in
jns
sbb
in
pop
and
add
ins
jmp
push
int3
sub
fwait
sbb
and
sti
dec
gs
xor
lods
or
and
jp
out
jb
sub
int3
mov
and
test
push
xor
test
xor
in
jns
in
xor
fimul
and
ss
cmps
les
inc
pop
gs
add
test
or
and
ins
sbb
xor
out
push
and
jns
data16
in
jb
fs
xor
into
push
xor
test
imul
fisttp
xor
test
push
and
sti
in
inc
or
xor
mov
xor
in
es
jbe
popf
inc
pop
shr
pop
mov
lock
xor
mov
jno
out
pop
enter
sbb
fnstenv
rol
inc
xor
nop
or
and
repnz
dec
mov
mov
xor
in
pusha
and
(bad)
shl
push
mov
mov
xor
in
pusha
and
stos
shl
pop
mov
mov
xor
in
pop
and
jp
mov
xor
test
xor
in
jnp
out
push
into
stos
inc
(bad)
lds
inc
jnp
mov
inc
jns
sub
xor
mov
or
and
sub
shl
xor
xor
in
sbb
in
ss
in
xor
test
xor
in
pop
and
add
dec
jecxz
dec
jmp
lds
dec
adc
xor
mov
xor
in
add
in
stc
sbb
lds
dec
adc
xor
mov
xor
in
jle
in
mov
test
sub
and
mov
xor
test
xor
in
(bad)
shl
or
and
push
ret
jns
sbb
in
mov
in
xor
mov
pop
and
xor
out
xor
in
jno
in
(bad)
shl
mov
pop
xor
mov
xor
test
xor
in
fs
gs
pop
xor
mov
xor
test
fs
jnp
out
and
cmc
push
mov
dec
xor
test
xor
in
jnp
in
push
(bad)
out
stc
sbb
mov
xor
lock
and
jns
in
xor
fimul
and
jge
in
cli
iret
mov
push
xor
test
xor
in
ja
in
cmp
xchg
jge
mov
inc
xor
stos
push
xor
test
jge
fs
scas
iret
fild
lea
pop
xor
mov
xor
test
fs
pop
(bad)
out
cli
dec
mov
ss
stos
inc
xor
test
push
and
xor
in
pusha
and
mov
in
xor
mov
ss
out
xor
mov
and
pusha
shl
dec
add
and
je
sbb
jle
jp
mov
int3
scas
or
and
push
and
fimul
movs
inc
ja
stos
fidiv
or
aaa
ss
std
ret
scas
iret
fild
cmc
sub
inc
mov
xor
test
(bad)
shl
or
and
xor
in
retw
jp
mov
xor
stos
or
and
pop
and
sti
ins
out
jns
jae
jp
dec
inc
xor
retf
sub
pop
mov
fcmove
add
stos
jbe
loopne
push
push
mov
inc
jns
cmp
xor
scas
or
and
cmp
sbb
in
xor
in
sub
shr
xor
xor
in
xor
in
sub
loopne
pop
xor
lock
and
jnp
inc
js
test
outs
lock
outs
inc
jle
stos
cs
iret
mov
inc
add
xor
pop
test
cmps
ds
cwde
sub
add
stos
pushf
adc
add
sbb
push
push
inc
mov
push
rcr
aas
inc
ss
xchg
ja
inc
call
jmp
jne
xlat
jnp
popf
(bad)
repnz
aas
inc
sbb
fist
cmc
push
pusha
lock
stos
mov
arpl
pop
sbb
(bad)
neg
popf
out
scas
pop
inc
xor
jge
sbb
and
call
pop
mov
mov
mov
cmp
mov
arpl
fwait
dec
idiv
in
mov
aam
jne
cmp
dec
bound
xor
jbe
call
add
pop
lods
add
dec
ds
ror
cld
inc
mov
adc
jmp
inc
loope
mov
cwde
jo
jb
stos
and
inc
mov
sbb
into
dec
scas
clc
imul
or
scas
add
mov
cld
inc
adc
cdq
inc
or
mov
xor
pop
mov
test
stc
lds
fisubr
sbb
stos
gs
in
push
mov
push
mov
loopne
pop
mov
loop
gs
shl
push
stos
cmc
xor
(bad)
push
xchg
xchg
out
adc
mov
out
fidivr
in
xchg
mov
out
or
addr16
push
stc
push
inc
aad
xchg
and
lock
adc
mov
out
fdivr
out
xchg
icebp
adc
(bad)
in
lods
icebp
jge
cwde
repz
(bad)
enter
sbb
pop
in
ret
mov
(bad)
xlat
cld
imul
push
rol
(bad)
mov
popf
inc
sub
push
in
sbb
mov
or
test
scas
inc
add
loop
(bad)
jecxz
(bad)
jecxz
(bad)
pop
jecxz
push
inc
sar
(bad)
jecxz
(bad)
jecxz
(bad)
pop
mov
lahf
lods
mov
push
push
test
icebp
out
lods
cld
pop
adc
scas
jbe
sbb
jae
icebp
inc
in
lods
in
cdq
test
sti
lea
push
jg
icebp
push
add
pop
jg
inc
mov
scas
cmp
pop
je
jns
clc
lods
popf
repz
lods
jne
add
mov
inc
mov
ja
sbb
popf
inc
mov
icebp
dec
fwait
lods
loope
xchg
in
mov
jo
jmp
xor
sbb
push
adc
test
faddp
inc
adc
xchg
inc
push
pop
stos
add
mov
xor
and
je
bound
addr16
test
bound
jecxz
hlt
push
je
in
in
stc
sti
out
adc
(bad)
out
push
mov
inc
loope
mov
sbb
jle
dec
pop
mov
add
push
aas
add
jno
jb
test
mov
gs
retf
(bad)
xor
imul
dec
xor
lods
mov
push
mov
neg
popf
pop
sahf
jmp
xlat
imul
mov
sar
mov
ins
jl
shr
nop
pop
aad
sbb
dec
in
loopne
test
mov
shl
pushf
aaa
aam
nop
pop
pop
push
sbb
(bad)
xchg
push
shr
xchg
push
mov
loopne
aaa
aam
test
icebp
stc
nop
or
aad
push
shl
stc
pop
ins
fst
aaa
loope
xchg
xor
sub
mov
sub
mov
lea
add
and
and
arpl
cmp
and
arpl
and
lds
and
mov
and
and
lds
and
mov
jnp
les
stc
inc
outs
ins
sub
mov
and
and
lds
arpl
and
arpl
jnp
arpl
and
and
arpl
and
les
outs
sbb
sub
sub
mov
mov
arpl
and
mov
cmp
nop
in
sub
mov
jo
scas
ins
outs
cmp
ins
and
les
and
and
inc
pop
mov
adc
jne
popa
call
arpl
cs
or
fdivp
ins
sub
ins
and
les
dec
arpl
and
les
add
inc
arpl
and
das
(bad)
and
arpl
and
arpl
outs
and
and
arpl
and
les
adc
inc
xchg
mov
arpl
and
arpl
and
arpl
pop
cs
and
(bad)
ins
and
and
arpl
and
arpl
and
inc
mov
shr
and
arpl
and
arpl
and
(bad)
(bad)
cmp
add
and
arpl
and
arpl
arpl
xor
cmp
cs
ins
and
mov
sub
retf
lock
ins
outs
cmp
ins
and
les
int3
sub
cld
in
jo
outs
adc
sub
mov
sub
and
les
jl
lds
xchg
mov
lea
or
sub
les
and
and
inc
(bad)
arpl
mov
and
and
les
in
jle
jg
popa
call
and
(bad)
inc
outs
push
and
ins
sbb
sub
mov
hlt
sbb
shl
add
arpl
and
inc
mov
call
mov
ins
lea
imul
imul
nop
and
arpl
and
arpl
and
jmp
cs
outs
fistp
imul
jo
or
cmp
imul
and
les
and
and
inc
ins
in
sub
ins
ins
(bad)
retf
int
sub
mov
and
arpl
and
bound
and
and
mov
xchg
cs
xchg
mov
arpl
and
xchg
xchg
in
jmp
sub
xchg
ins
loope
jne
popa
call
and
les
fld
sub
mov
and
and
jecxz
inc
mov
arpl
and
inc
push
ins
repz
ins
ins
lods
or
sub
mov
and
and
fadd
xchg
xchg
and
and
arpl
and
arpl
fwait
ror
xchg
xchg
and
and
les
outs
fcmovnb
retf
pusha
sub
mov
(bad)
movs
mov
and
les
pop
arpl
and
(bad)
retf
pusha
sub
push
xor
movs
mov
and
les
and
and
fwait
enter
adc
clc
adc
fld
outs
and
and
arpl
and
lds
and
mov
inc
arpl
ret
jnp
mov
outs
(bad)
or
mov
ins
jmp
lods
and
les
push
inc
inc
adc
in
cwde
shl
fwait
call
stc
mov
stc
push
ins
and
and
arpl
and
arpl
and
add
fnstcw
jo
cs
cmp
ins
sub
ins
and
les
cwde
data16
fwait
loopne
test
mov
stc
pop
outs
ins
in
ins
and
and
arpl
and
add
fstp
cmp
pop
retf
ins
sub
outs
and
les
inc
arpl
and
mov
ins
and
and
arpl
and
les
fsub
inc
outs
dec
pop
daa
and
(bad)
loopne
and
and
ins
and
les
inc
arpl
mov
cwde
ins
jle
sahf
popa
push
or
arpl
inc
in
adc
or
mov
xchg
mov
mov
and
and
arpl
and
arpl
iret
and
and
arpl
jecxz
arpl
xchg
cli
inc
into
mov
arpl
and
arpl
and
les
cmp
inc
outs
in
je
ins
ins
das
stos
lds
ror
mov
jp
mov
sub
and
arpl
and
cli
inc
into
and
push
and
arpl
and
les
outs
fild
and
mov
call
hlt
and
(bad)
iret
and
ins
and
and
les
jp
(bad)
mov
sub
and
arpl
and
les
ins
xor
push
sub
les
dec
arpl
cs
and
arpl
and
les
and
mov
and
and
scas
cmp
mul
arpl
and
arpl
and
les
lods
inc
outs
ins
test
es
dec
jmp
lahf
test
adc
jns
into
xchg
cmp
out
push
ror
retf
(bad)
jecxz
(bad)
jecxz
jecxz
add
inc
sbb
mov
out
push
(bad)
jecxz
(bad)
mov
inc
mov
int
push
setp
adc
(bad)
or
mov
in
sbb
inc
cwde
lods
sbb
lods
sbb
lods
sbb
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
bound
push
popf
mov
in
sbb
inc
cwde
lods
sbb
inc
cwde
lods
bound
push
popf
mov
in
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
rcr
popf
rcr
popf
rcr
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
ss
cwde
add
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
adc
aaa
test
sbb
ror
sbb
sti
push
inc
mov
pop
loope
into
daa
inc
cs
push
push
inc
call
jo
test
pop
pop
popf
(bad)
loopne
arpl
fist
je
idiv
lock
or
bound
push
hlt
out
or
out
inc
inc
fnstsw
lods
std
pop
and
mov
jne
shl
addr16
call
dec
hlt
or
inc
cwde
lods
xlat
pop
sbb
call
mov
jne
mov
ja
sti
div
mov
inc
mov
mov
jecxz
loope
idiv
out
jecxz
xchg
inc
xor
addr16
inc
pushf
mov
push
inc
mov
mov
inc
lods
xchg
xor
lahf
dec
cli
inc
out
add
dec
or
cmp
sbb
stos
dec
push
jmp
or
pushf
adc
scas
or
jnp
xchg
in
loop
sbb
mov
mov
in
sti
out
addr16
loopne
cmp
push
cmc
dec
mov
cmp
xchg
sub
sti
mov
sahf
jne
add
call
inc
cld
inc
mov
sbb
scas
imul
inc
jno
xor
mov
arpl
in
pop
xchg
jecxz
out
jle
imul
fisubr
pop
int3
shr
inc
ret
out
sbb
int
pop
int3
shr
xchg
cli
stos
pop
int3
lea
or
shr
xchg
ret
cdq
pop
into
mov
stc
adc
add
xchg
stos
inc
out
and
jge
test
pop
int3
shr
xor
test
adc
inc
in
and
add
dec
in
inc
ret
imul
or
sbb
jge
cmp
mov
push
push
out
dec
dec
mov
imul
adc
dec
nop
ja
inc
mov
sbb
sbb
inc
sbb
repnz
inc
pop
cld
inc
adc
inc
pop
push
inc
push
push
cdq
inc
call
inc
jbe
iret
arpl
xor
jno
scas
fild
mov
xlat
mov
mov
in
imul
push
xlat
mov
popf
cmps
shr
movntq
jb
into
aad
jb
xchg
push
jecxz
ror
mov
jecxz
inc
cmp
outs
pop
push
xlat
out
out
mov
cmp
push
popf
loop
lods
push
lods
call
inc
cld
add
test
mov
add
dec
(bad)
mov
test
repz
cmps
mov
das
dec
pop
ret
cmp
jp
inc
cmp
sahf
fs
adc
je
mov
icebp
test
pop
loop
dec
push
loop
jnp
ret
mov
dec
into
fiadd
stos
inc
loope
xor
jb
loop
dec
pop
xchg
xchg
add
mov
add
mov
ret
mov
xor
add
fiadd
dec
pop
mov
arpl
push
inc
out
mov
fwait
cmp
aaa
sub
sbb
ja
sbb
jne
sbb
inc
and
jne
sbb
inc
jae
or
mov
inc
jnp
and
dec
ja
sbb
aaa
inc
sbb
outs
lods
sbb
dec
ins
sub
sbb
jbe
sbb
aaa
inc
sbb
adc
sbb
icebp
paddsw
cmps
jl
aad
aad
jne
sub
inc
dec
sub
sbb
push
inc
jnp
aaa
inc
sbb
inc
sbb
ja
sbb
ja
sbb
dec
je
push
mul
mov
ja
aas
sub
sbb
ja
fwait
sub
sub
ja
sbb
jne
sbb
inc
outs
sub
sbb
pop
inc
sbb
mov
xor
pop
adc
jnp
push
inc
sbb
inc
sbb
outs
inc
sbb
pop
sbb
pop
inc
sbb
ja
sbb
jae
sbb
jne
cwde
xor
out
sub
inc
dec
sub
inc
sbb
cmp
sbb
std
andnps
sbb
mov
jge
adc
sbb
mov
paddusw
icebp
imul
sbb
sub
loope
push
xchg
add
stc
ds
pop
sbb
popf
lahf
lods
and
stos
test
inc
or
std
xlat
jnp
lods
inc
jbe
push
cmc
shr
nop
scas
(bad)
adc
test
popf
dec
popf
xchg
fld
cmps
lods
and
shl
stos
jecxz
inc
shl
stos
mov
pop
mov
pop
mov
push
mov
fdivr
mov
sbb
inc
mov
push
pop
dec
popf
stos
mov
sbb
inc
mov
cli
lds
lods
inc
lods
sbb
scas
ja
jnp
mov
mov
or
shr
add
dec
ds
sbb
inc
adc
pop
ja
mov
jp
rcr
xor
jae
call
add
jecxz
push
hlt
mov
aaa
pop
xlat
out
xor
push
xor
mov
in
pop
dec
mov
dec
push
fcomip
addr16
dec
je
sbb
fs
push
sbb
inc
test
pop
mov
mov
test
pushf
dec
sub
jno
mov
stc
rcr
mov
pusha
jge
mov
mov
in
fmulp
jle
mov
mov
mov
add
loop
sti
(bad)
cmp
dec
icebp
inc
cwde
lods
call
out
pop
stos
loopne
push
mov
es
addr16
sub
dec
mov
outs
in
sub
xor
movs
pop
adc
addr16
and
pop
sahf
sub
(bad)
dec
movs
into
pop
sub
push
inc
adc
mov
inc
jge
addr16
jge
dec
inc
and
dec
sbb
sbb
(bad)
call
ja
inc
push
mov
add
sbb
add
int3
adc
lock
jnp
js
test
pop
mov
in
ror
mov
push
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
cmp
mov
das
ins
or
mov
lahf
lods
mov
push
jp
jge
push
mov
(bad)
cmps
jns
mov
(bad)
add
jb
fisttp
push
push
fimul
aam
jno
cwde
lods
popf
aaa
sbb
cmp
push
mov
popa
dec
call
jg
add
dec
addr16
(bad)
fbld
popf
out
scas
jne
sbb
inc
inc
xor
dec
mov
dec
das
add
test
iret
add
add
(bad)
out
iret
or
inc
hlt
lods
popf
jmp
lods
pop
in
sbb
mov
push
lea
lahf
mov
mov
push
clc
lods
aaa
in
fwait
push
std
movs
jmp
loop
sbb
stos
xchg
clc
sahf
(bad)
popf
aaa
mov
jl
call
in
mov
adc
mov
mov
inc
stos
sahf
into
pusha
mov
aas
mov
jns
xchg
inc
xchg
mov
adc
cmps
mov
bound
out
(bad)
movs
scas
add
push
mov
mov
jb
cmc
cli
push
repz
push
inc
cmc
dec
fidivr
sti
out
repz
mov
daa
push
mov
or
xchg
inc
jb
ror
or
ret
daa
inc
push
retf
push
inc
add
movs
jp
arpl
xor
addr16
pop
mov
xchg
cdq
mov
jle
jb
mov
xor
push
xor
popa
push
movs
(bad)
je
inc
or
mov
push
enter
leave
jecxz
ror
sbb
test
jne
test
xchg
mov
add
lock
sub
dec
sbb
rol
das
pop
into
stos
dec
push
add
xchg
mov
sub
pop
addr16
retf
mov
pop
sub
pop
or
cmp
push
push
mov
jge
mov
inc
push
out
xchg
pop
ret
jae
pop
xchg
dec
mov
fcom
sti
leave
retf
dec
pop
das
adc
add
shl
in
mov
fistp
out
push
jle
cmp
cmp
mov
repnz
dec
inc
test
das
ins
sbb
std
lods
lahf
lods
mov
push
xchg
test
inc
pop
mov
adc
ror
or
fsubr
pop
mov
inc
mov
inc
shr
cdq
scas
jbe
fadd
dec
sar
jno
stc
shr
je
mov
add
stos
mov
popf
mul
lods
bound
addr16
push
xchg
jae
pop
test
and
add
fisttp
icebp
inc
fsubr
popf
cmps
fisubr
scas
xor
(bad)
lahf
mov
mov
lods
sahf
mov
cld
mov
jb
jno
dec
scas
cli
inc
sub
adc
test
sbb
mov
data16
push
pop
fwait
mov
dec
jle
mov
test
mov
ds
add
scas
pop
cdq
xchg
scas
ja
sub
or
dec
addr16
mov
mov
xor
mov
loopne
mov
icebp
inc
scas
sbb
jne
(bad)
sti
push
loopne
sbb
xchg
fs
cmp
jno
fwait
push
fs
outs
aad
add
dec
jb
bound
push
movs
mov
jo
int3
scas
cli
xlat
mov
arpl
push
push
imul
out
mov
pushf
cmp
mov
gs
inc
dec
sar
or
std
or
dec
and
mov
mov
mov
addr16
xlat
or
cmp
pop
pop
call
pop
sar
or
sar
pusha
inc
outs
dec
sbb
dec
inc
shl
mov
bound
bound
dec
sbb
ret
or
jge
ret
mov
lahf
or
push
outs
sar
or
xchg
inc
mov
mov
sar
or
dec
inc
shl
mov
fdivr
call
sar
or
out
inc
pusha
dec
cmps
ret
call
clc
inc
cmp
pop
xor
outs
in
or
enter
sub
jb
loop
or
sub
cmp
mov
imul
xchg
sub
sbb
push
push
inc
mov
push
in
sbb
repnz
(bad)
addr16
lahf
push
cli
mov
mov
inc
bound
mov
mov
mov
mov
pushf
pop
lahf
and
jecxz
lods
cmp
push
test
arpl
inc
sbb
pushf
mov
les
mov
jne
scas
jo
cmp
repz
push
lods
pop
inc
adc
arpl
dec
mov
sbb
loop
cmp
cs
popf
inc
mov
rcr
inc
mov
lods
cld
sbb
pop
in
jnp
sub
inc
scas
or
add
mov
cmps
(bad)
dec
push
xchg
adc
mov
jecxz
or
cmps
enter
xor
inc
dec
mov
inc
jl
sbb
push
aam
inc
adc
int3
data16
add
in
jnp
jno
cli
mov
mov
fiadd
push
cmc
dec
mov
mov
push
mov
push
push
push
inc
pop
sahf
pop
fs
add
dec
inc
jb
mov
in
loop
sbb
dec
out
call
lods
ficomp
inc
imul
pusha
dec
cmc
daa
out
retf
adc
jb
push
inc
xchg
or
xchg
cmp
mov
push
js
rcl
rcl
ror
jae
mov
imul
jecxz
fld
lods
pop
jnp
mov
jmp
mov
or
retf
add
les
add
fnstenv
bound
pop
push
pop
xchg
pop
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
push
fstp
sar
(bad)
jecxz
(bad)
pop
push
mov
sbb
or
mov
cmp
pop
outs
mov
jbe
mov
call
sahf
pushf
mov
jb
popf
dec
test
push
or
inc
jmp
leave
ins
fidivr
test
ds
in
mov
cdq
or
push
cmp
mov
xchg
or
inc
fsubr
lahf
mov
rol
dec
call
in
repz
shl
dec
nop
pop
cmp
sub
ins
scas
rol
dec
jne
hlt
lods
out
call
inc
cli
movs
mov
lods
and
pop
push
mov
xor
lock
ret
xor
push
mov
add
inc
mov
pop
mov
mov
in
pop
push
mov
or
loop
or
out
inc
out
mov
xchg
xor
clc
mov
inc
push
loop
cmps
mov
loop
addr16
call
inc
mov
jge
ret
dec
push
jge
add
mov
or
idiv
addr16
(bad)
in
push
call
or
mov
data16
push
addr16
adc
cmc
call
add
xor
xchg
add
in
add
addr16
cmp
out
add
addr16
inc
(bad)
addr16
dec
aaa
mov
dec
leave
or
and
cmp
xchg
xchg
add
addr16
dec
xlat
out
add
or
xchg
jl
les
test
xchg
add
addr16
sbb
out
mov
ret
add
addr16
retf
outs
xlat
sub
xchg
xchg
inc
xchg
add
pushw
dec
aad
sub
leave
cmp
xchg
add
out
add
test
add
addr16
ds
push
leave
jmp
fld
leave
pop
xchg
add
addr16
cmp
pushw
inc
in
fwait
and
push
push
add
sub
add
les
test
xchg
add
addr16
pop
addr16
add
push
xchg
add
addr16
cmp
test
adc
(bad)
dec
cmp
add
and
xchg
add
in
add
addr16
inc
out
mov
push
or
sub
mov
ret
add
addr16
add
sub
xchg
xchg
jl
les
test
xchg
add
addr16
xor
mov
cmp
mov
sub
int
sub
dec
imul
jp
aas
stos
and
arpl
sar
push
pop
daa
sar
(bad)
jecxz
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
sbb
xchg
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
xor
stc
cs
pop
xor
inc
sbb
sub
or
xor
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
mov
sbb
fdivr
jmp
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
or
ror
jmp
dec
push
dec
sahf
inc
dec
adc
cmp
push
(bad)
jecxz
(bad)
jecxz
(bad)
psrld
push
push
push
(bad)
jecxz
(bad)
jecxz
orps
inc
hlt
jecxz
(bad)
jecxz
(bad)
cmp
dec
mov
and
sbb
sar
out
push
(bad)
jecxz
push
push
mov
sbb
pop
mov
or
(bad)
jecxz
(bad)
or
sub
arpl
fld
sar
(bad)
jecxz
(bad)
dec
cmp
adc
lods
loop
sbb
push
xchg
cmp
dec
aam
inc
mov
int
push
setp
pop
(bad)
or
mov
mov
stos
inc
nop
mov
xlat
push
sbb
retf
addr16
inc
es
arpl
popf
push
neg
jbe
popf
loop
scas
pop
inc
test
cdq
call
iret
enter
cmps
out
cmp
call
aad
sahf
(bad)
or
out
nop
bound
iret
push
mov
test
dec
test
push
popf
inc
mov
mov
mov
lods
push
cmp
mov
xchg
dec
loop
and
mov
mov
mov
scas
push
inc
push
fld
inc
loope
mov
sbb
push
sti
dec
jbe
xchg
add
push
mov
(bad)
out
dec
push
cmc
inc
movs
lods
repz
mov
ror
or
adc
inc
xor
sbb
push
mov
pop
ja
cmc
inc
clc
lods
sahf
sub
push
call
inc
xor
aas
dec
mov
mov
test
xchg
inc
xchg
je
pop
or
sbb
adc
hlt
mov
mov
dec
xor
outs
inc
cld
inc
mov
sbb
jbe
popf
dec
in
or
repz
es
lods
(bad)
rcpps
stos
push
push
mov
shl
xor
jb
fld
push
nop
sbb
jmp
cdq
cmp
(bad)
cdq
jl
(bad)
cdq
repz
aad
cmp
xchg
cdq
cmp
(bad)
cdq
add
(bad)
fpatan
hlt
push
aam
nop
rol
pop
xchg
movs
xlat
mov
cdq
jmp
rcl
test
add
div
ret
adc
push
movs
xchg
push
jbe
lea
fxch
push
push
test
mov
lea
xchg
std
push
ja
inc
xchg
jae
sbb
out
cdq
out
push
adc
repnz
xor
jo
(bad)
push
nop
sbb
jmp
cdq
jl
(bad)
cdq
repz
cmp
rcr
cmp
(bad)
cdq
jo
aad
and
pop
pop
iret
cmp
ret
(bad)
cdq
cmp
(bad)
cdq
cmp
in
fwait
cmp
call
(bad)
xor
nop
aam
cmp
call
(bad)
cdq
cli
popa
xlat
add
rcr
cdq
cmp
(bad)
cdq
jg
push
push
je
mov
jno
fnstenv
add
xlat
mov
ins
pop
sub
nop
in
cmp
call
ficom
cmp
popf
fwait
cmp
call
or
add
cmp
ret
cmp
cli
cdq
cmp
(bad)
cdq
cmp
(bad)
cdq
jb
(bad)
mov
cmp
(bad)
cdq
cmp
(bad)
cdq
or
push
das
movs
cmp
xchg
ins
aam
enter
xor
mov
nop
mov
xor
push
shl
xchg
mov
jmp
mov
fwait
cmp
call
sahf
push
aam
sar
shl
pop
sub
nop
in
cmp
call
sahf
test
into
xor
push
ret
ss
(bad)
push
xchg
fs
rol
push
sub
pop
out
fdivr
xchg
movs
mov
mov
data16
mov
fs
inc
mov
push
push
(bad)
jecxz
(bad)
jecxz
loope
lods
adc
adc
lods
push
jb
inc
jmp
aas
stos
pushf
gs
pop
mov
jecxz
inc
mov
pop
mov
jmp
(bad)
ja
jbe
jmp
jmp
scas
xor
aas
add
inc
sbb
sbb
sti
jle
scas
(bad)
addr16
pop
inc
cwde
or
enter
(bad)
pop
inc
in
mov
scas
(bad)
cli
jo
adc
lods
inc
out
inc
cmp
mov
push
shr
or
ret
mov
push
in
out
jno
cwde
lods
in
pop
fucom
mov
addr16
ja
mov
xor
lods
mov
sbb
xchg
(bad)
pop
mov
pop
xlat
add
dec
or
mov
jne
leave
dec
inc
stos
fcmovu
jle
cs
jg
xor
lods
imul
xchg
inc
nop
cmps
sar
adc
scas
jnp
mov
adc
xlat
pop
mov
(bad)
mov
mov
les
outs
pop
bound
cmp
leave
inc
lock
or
mov
xchg
add
dec
(bad)
mov
xchg
pop
inc
bnd
push
popf
div
cmp
test
mov
jmp
stc
mov
mov
mov
mov
mov
repnz
sbb
cmps
mov
mov
lds
add
push
(bad)
push
movs
xor
xor
lds
xchg
and
(bad)
xlat
mov
mov
mov
mov
loopne
sbb
and
mov
mov
mov
out
fld
sub
cdq
lds
jmp
mov
mov
mov
add
lea
jmp
cdq
mov
loop
(bad)
jmp
shl
mov
aaa
movs
(bad)
jmp
shl
test
test
push
(bad)
cmp
ret
xor
mov
(bad)
jmp
aad
jmp
cdq
mov
mov
mov
mov
mov
call
mov
xlat
div
fwait
repnz
stc
aad
ret
push
jmp
xlat
and
(bad)
fidiv
mov
sbb
cmps
dec
or
(bad)
jmp
cdq
mov
mov
rcr
fdivrp
cli
and
int
rcl
jmp
les
mov
pop
rcr
shl
jmp
cdq
mov
mov
mov
mov
xor
fcmovbe
data16
cmp
sub
push
out
int
cdq
jmp
clc
mov
mov
mov
mov
(bad)
scas
sub
aad
imul
mov
mov
mov
mov
ds
(bad)
loop
cmps
jae
ds
iret
cmps
or
loopne
or
mov
leave
repz
cmp
in
(bad)
(bad)
(bad)
sar
faddp
test
xor
das
add
and
adc
idiv
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
lea
div
loope
scas
mul
cmp
std
movs
(bad)
(bad)
cli
mov
(bad)
(bad)
movs
(bad)
xlat
(bad)
mov
in
out
mov
fild
mov
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
out
test
fcomi
xchg
cmp
std
lods
enter
test
mov
jno
shl
sahf
xchg
(bad)
mov
cmp
ret
(bad)
in
xlat
xchg
inc
xor
cmc
jae
jb
out
xor
push
call
ror
xor
and
loopne
jle
(bad)
sti
dec
pop
mov
mov
sbb
fwait
(bad)
jns
nop
xchg
sub
dec
xlat
jp
popf
push
xlat
adc
lahf
cli
adc
aad
jecxz
outs
aam
in
mov
outs
lods
xor
ror
inc
movs
mov
sti
inc
popf
into
push
std
retf
mov
push
sub
(bad)
(bad)
(bad)
pop
xlat
out
stos
loop
adc
or
imul
outs
shl
push
ja
jno
sahf
cmps
std
jg
and
movs
das
mov
cli
add
and
mov
mov
inc
scas
repnz
push
and
out
pusha
lock
sub
jno
sahf
cmps
std
pusha
jl
add
inc
mov
jle
dec
xor
into
cmp
repnz
(bad)
and
xchg
loope
xor
jne
shl
pop
sbb
xchg
or
cld
inc
mov
js
je
enter
jle
scas
sub
cld
pushf
push
inc
pop
push
sbb
push
scas
mov
sub
repnz
and
mov
push
mov
movs
xchg
aas
add
stc
sub
xchg
hlt
icebp
jl
in
pop
add
mov
sbb
mov
mov
fs
push
clc
xor
ins
in
mov
rcl
xchg
iret
xlat
jge
(bad)
jmp
jnp
nop
test
xchg
xchg
and
pop
rol
lahf
dec
scas
sub
aaa
in
jns
mov
retf
cmps
int
add
mov
jne
xchg
fisubr
pop
cmp
sub
adc
or
repnz
cmps
sub
fwait
jmp
call
retf
dec
std
jne
jmp
out
stc
inc
inc
and
push
add
jmp
bound
add
pushf
inc
fidiv
repz
add
and
test
sub
arpl
cmps
icebp
mov
scas
and
pusha
leave
mov
call
aaa
pop
stos
mov
sub
mov
nop
inc
ret
or
imul
pushf
outs
xchg
inc
jae
cld
adc
pop
daa
cmp
xchg
(bad)
lock
or
mov
pop
out
add
xlat
(bad)
cmc
jl
outs
jae
ror
loop
sub
bound
sub
xchg
mov
sahf
cmp
rol
inc
pushf
mov
inc
repnz
arpl
add
scas
rol
xchg
mov
dec
pop
cdq
cdq
idiv
xchg
(bad)
or
shl
pop
adc
sbb
jno
pop
xchg
mov
sub
dec
push
addr16
mov
jle
pop
sub
sub
inc
loopne
dec
pop
std
ror
xor
and
inc
mov
(bad)
pop
or
bound
aaa
lds
sti
daa
sbb
mov
push
pusha
push
mov
xor
adc
pop
cmps
(bad)
mov
jbe
adc
jb
lock
sahf
mov
add
ins
adc
pop
dec
dec
mov
dec
cmp
or
mov
stc
sbb
jo
push
daa
inc
retf
xlat
ins
or
scas
xchg
scas
xlat
pop
sbb
std
xchg
dec
test
xchg
jne
cdq
xchg
xchg
and
push
inc
mov
aam
hlt
pushf
aad
adc
adc
adc
adc
xchg
pop
fld
idiv
xor
cmc
push
lods
mov
and
fimul
nop
sbb
and
popf
mov
sub
(bad)
mov
push
push
or
pushf
les
jo
xor
in
std
xchg
mov
ins
mov
retf
or
jno
(bad)
ror
xchg
aas
aad
ss
leave
inc
inc
std
(bad)
fwait
mov
test
dec
sub
or
jl
pop
jne
push
je
pop
adc
jle
and
in
xchg
pop
jns
out
test
(bad)
test
aam
lock
les
pushf
jmp
mov
push
add
and
mov
and
jbe
mov
push
les
pop
sar
inc
mov
dec
mov
xor
movs
(bad)
retf
(bad)
xchg
(bad)
xlat
movs
(bad)
pop
xchg
jecxz
sub
jle
jle
repz
hlt
pop
mov
xlat
imul
rol
movs
(bad)
xlat
(bad)
mov
int3
fstp
icebp
fmul
jge
xlat
scas
imul
xchg
cli
lods
(bad)
imul
ret
repnz
or
sub
sbb
fmul
or
fsubr
xchg
ret
aad
cld
in
in
push
sbb
or
cdq
push
mov
stc
and
popa
pushf
sub
retf
inc
mov
dec
popa
sbb
call
mov
dec
xor
and
sahf
out
mov
and
dec
jne
out
cmp
add
outs
fcmovb
inc
add
cmp
mov
nop
mov
cmp
dec
in
loop
mov
jecxz
(bad)
test
mov
ret
or
das
push
daa
xor
lea
jg
sbb
hlt
push
mov
cmp
dec
iret
outs
aaa
or
xor
scas
in
inc
bound
clc
xlat
xchg
sub
das
push
sbb
pop
xor
mov
adc
dec
ins
pop
outs
xlat
cmp
cmp
(bad)
sbb
aas
pop
popf
(bad)
xor
push
cmc
push
cli
repz
inc
outs
push
imul
mov
add
das
push
cmps
ror
dec
pop
and
pop
loopne
or
adc
ja
cmp
add
jmp
pop
cmp
add
lods
mov
jo
je
mov
mov
mov
loope
scas
out
das
lock
xor
bt
pop
mov
mov
mov
aam
xchg
pop
out
adc
mov
icebp
dec
sbb
xchg
div
lea
adc
std
mov
or
ja
or
mov
cmps
inc
xchg
js
adc
mov
aaa
std
push
dec
sbb
pusha
je
in
push
lods
xlat
sub
ret
pop
mov
cmps
or
hlt
aaa
mov
push
or
mov
push
push
cmp
jle
jle
lds
push
in
es
sahf
add
movs
cmp
sub
jmp
ret
sub
push
mov
pop
and
data16
lock
jne
and
sub
ss
jae
movs
(bad)
sub
mov
fucomip
movs
fdiv
(bad)
mov
int3
xlat
(bad)
in
fstp
popa
inc
pop
cs
or
mov
out
aam
sub
leave
fidiv
add
sar
in
shl
ds
sbb
lsl
adc
sub
dec
int
pop
sub
xchg
xchg
mov
test
inc
and
addr16
push
push
dec
in
in
shl
push
mov
(bad)
adc
test
je
push
xchg
mov
sbb
mov
xor
inc
neg
daa
test
pop
pop
xchg
mov
sar
neg
add
dec
dec
fcmovu
push
fisttp
jl
movs
imul
cld
adc
dec
sti
push
(bad)
cmp
ins
or
outs
add
pop
scas
ins
add
popa
ins
ss
(bad)
xchg
cmps
sti
xor
imul
xchg
xchg
jno
sbb
mov
mov
adc
ins
das
inc
and
pop
add
add
xlat
cmp
je
icebp
and
push
lock
dec
sub
std
mov
sbb
xchg
cmp
(bad)
push
xchg
test
mov
iret
scas
mov
mov
test
idiv
mov
gs
sbb
mov
pop
and
fs
pop
add
into
jmp
add
mov
lds
pushf
jno
(bad)
mov
icebp
fcomp
pop
jge
int
test
xchg
and
and
add
adc
cmps
js
jns
test
sub
(bad)
test
retf
lds
sub
es
mov
jmp
xchg
ja
arpl
scas
retf
push
fnstsw
dec
adc
xchg
loopne
loope
xchg
pop
cli
xchg
push
mov
mov
sbb
and
mov
mov
into
inc
xor
test
mov
jne
popa
push
sub
out
xchg
add
fisttp
and
mov
adc
es
cli
int
adc
cmps
sar
add
je
and
add
cdq
jmp
jns
jmp
lea
xor
call
dec
xor
js
push
imul
jge
pop
pop
xchg
in
or
iret
retf
sbb
xrelease
and
jp
adc
sub
or
int3
mov
call
(bad)
pop
jl
daa
xor
lods
ja
ins
ja
pop
std
dec
dec
cdq
jle
leave
jge
aam
and
and
dec
sbb
mov
stc
mov
(bad)
pop
dec
ins
fs
fsubr
fld
sahf
sbb
add
data16
push
cmp
test
and
mov
dec
frstor
aaa
shl
aas
inc
inc
cli
nop
loopne
or
out
iret
mov
sti
jge
cmp
mov
sbb
dec
js
addr16
inc
or
ror
add
repnz
test
mov
out
mov
xchg
loope
inc
pop
xchg
pop
fdiv
(bad)
and
sbb
jp
mov
inc
adc
mov
inc
jmp
jbe
jnp
mov
push
call
test
repnz
mov
jo
cli
mov
push
std
adc
stc
cmp
scas
xchg
mov
pop
xchg
add
jne
or
out
inc
pushf
xlat
pop
xchg
inc
ins
or
test
cmp
add
and
bound
(bad)
repnz
rcr
movs
(bad)
xlat
(bad)
movs
rcl
in
fistp
in
mov
cmp
les
std
mov
cmp
cmps
dec
leave
dec
mov
imul
leave
jmp
push
mov
das
repz
add
and
and
cmp
icebp
test
fst
jge
iret
enter
les
(bad)
in
out
mov
retf
cmps
retf
mov
lds
es
xor
aam
inc
or
xor
loope
adc
not
inc
cwde
data16
in
or
(bad)
inc
call
or
shr
fcomp
sub
adc
dec
lea
ss
or
pop
in
(bad)
std
repnz
ret
movs
retf
fisub
adc
jb
cld
jge
adc
mov
lahf
or
ds
mov
pop
mov
and
mov
mov
rcl
dec
or
mov
mov
pop
shl
mov
ins
mov
xchg
inc
sub
cwde
and
xlat
call
popf
mov
shl
mov
fs
movs
fwait
xchg
js
int
int
sbb
sbb
mov
push
xchg
sbb
or
xchg
cmp
jno
lods
fnstcw
pop
clc
lods
mov
mov
add
in
sub
push
ret
sub
dec
xchg
cmp
xchg
xor
(bad)
mov
jle
jg
imul
adc
icebp
mov
leave
push
loop
push
mov
enter
daa
pop
mov
dec
retf
pop
inc
outs
inc
mov
push
push
jge
pop
test
xchg
or
jns
mov
adc
scas
repz
ficomp
or
dec
mov
imul
jo
pop
jb
and
pop
mov
add
mov
lods
(bad)
xlat
idiv
in
(bad)
(bad)
movs
(bad)
(bad)
movs
int3
xlat
repnz
add
mov
add
cmp
or
cmp
inc
test
nop
adc
test
(bad)
ja
add
cwde
std
mov
cmp
shl
icebp
jmp
push
ins
ins
sub
and
in
inc
pop
inc
cdq
repnz
push
mov
popa
ss
push
mov
inc
dec
jmp
rep
ja
enter
mov
mov
pop
mov
xor
call
repnz
ret
pop
pop
jne
jns
dec
add
fs
or
shr
adc
xchg
aaa
push
stos
mov
cwde
pop
lods
fnstenv
call
xor
mov
pop
and
pop
test
or
sbb
cmp
push
mov
mov
std
fist
lock
add
in
in
cmps
jno
cmp
test
repz
aam
dec
push
(bad)
cmp
in
xor
cmp
xchg
pop
jge
repnz
xor
outs
frstor
mov
iret
mov
mov
dec
inc
lods
(bad)
mov
test
dec
mov
into
add
mov
lods
in
cmp
jae
bound
push
inc
in
push
push
or
bound
push
mov
(bad)
sub
cmp
jbe
movs
(bad)
xchg
test
xchg
cmp
adc
aam
xchg
daa
push
add
and
xchg
ret
mov
dec
dec
rcr
imul
push
mov
aad
stc
cmps
or
inc
push
cmp
out
dec
xor
arpl
lock
xor
arpl
add
jmp
pop
div
(bad)
jne
(bad)
fiadd
dec
lds
movs
sbb
shl
dec
jnp
xor
dec
xor
fs
xchg
pop
jmp
or
bound
mov
sahf
ror
lods
cdq
add
inc
fs
sahf
fwait
mov
in
sub
cli
iret
movs
es
mov
lahf
cmp
dec
mov
xchg
and
and
jle
xchg
pop
push
leave
(bad)
out
and
out
das
xlat
fcmovnu
push
outs
loope
cmp
or
call
adc
mov
pop
fldcw
or
dec
imul
out
fimul
fdivp
xor
iret
pop
retf
mov
jbe
pop
or
jp
cs
mov
jno
std
loope
mov
pushf
lea
loop
pop
in
mov
test
pop
push
(bad)
fwait
jmp
jmp
mov
pop
mov
dec
jecxz
dec
das
add
and
mov
int
ins
int3
cmps
pop
stc
test
test
fwait
lock
js
jecxz
(bad)
in
fwait
in
jmp
js
shl
pop
mov
jmp
mov
bound
xchg
xor
cmp
std
cmp
jmp
pop
jg
js
(bad)
xchg
mov
enter
sub
xchg
sub
cmp
int3
iret
jge
dec
inc
mov
iret
repz
mov
stc
jmp
adc
sub
xchg
mov
dec
call
pop
iret
stos
in
aad
xlat
mov
sbb
repz
imul
(bad)
dec
sub
mov
xor
int3
test
sub
lock
sbb
popf
pop
inc
mov
outs
add
inc
adc
pop
jl
jno
xlat
int3
pop
lods
rcl
movs
rcl
jmp
sar
mov
add
cli
mov
add
sti
into
inc
push
add
(bad)
test
pop
(bad)
sar
fidiv
ret
push
sbb
iret
xor
dec
sub
les
nop
rep
hlt
xor
cmp
inc
push
fidivr
ret
cmp
dec
sbb
jmp
sbb
jmp
rcl
or
inc
gs
or
sbb
cmp
in
jno
adc
ja
pop
in
retf
repnz
inc
pop
pop
pop
loop
and
mov
adc
mov
inc
sub
jne
popa
mov
int
mov
les
loop
sbb
pusha
mov
xor
call
(bad)
sti
(bad)
hlt
mov
addr16
lods
xlat
pop
rol
push
push
ss
cmps
in
add
lahf
test
stc
sub
daa
jns
xchg
(bad)
es
sbb
jb
imul
jg
add
mov
cwde
(bad)
push
ins
jp
mov
pop
or
call
adc
aas
imul
adc
sbb
mov
in
retf
vpmacsswd
dec
jbe
push
dec
inc
add
fimul
movs
ret
daa
fistp
test
pop
in
mov
push
ss
add
cmps
inc
or
adc
mov
xor
jmp
xchg
and
into
pop
jo
pop
dec
js
or
adc
ins
mov
pushaw
iret
movs
(bad)
pop
lock
pop
retf
mov
mov
cs
xchg
das
cld
(bad)
stc
or
hlt
ss
mov
fidiv
mov
mov
xor
or
mov
cmps
out
xor
popf
xor
add
cdq
dec
imul
scas
in
or
cwde
adc
cmp
sub
(bad)
mov
stos
adc
cmps
lea
push
and
in
or
les
cmps
pusha
scas
or
inc
sti
mov
enter
lea
daa
or
stos
add
dec
fdivr
test
xchg
add
aam
push
retf
lods
mov
jg
adc
inc
out
xor
movs
dec
mov
int
dec
fisubr
fsubr
xchg
dec
dec
in
cdq
adc
shl
xor
sahf
ret
adc
jb
(bad)
cmp
cmc
int3
sub
or
and
(bad)
shr
pop
arpl
dec
or
and
lock
(bad)
fcmove
movs
inc
aas
addr16
push
adc
sbb
es
sub
sbb
(bad)
call
rcl
movs
enter
test
movs
lds
(bad)
fwait
pushf
(bad)
push
and
rcl
enter
movs
push
push
jg
(bad)
repz
mov
aad
ror
xlat
cld
cld
lock
shl
and
mov
cmps
sub
mov
retf
es
pushf
inc
(bad)
daa
ins
inc
mov
pop
leave
cld
mov
xor
mov
enter
push
sbb
lea
jnp
(bad)
nop
sub
pushf
pmulhw
sbb
sbb
fs
repz
mov
shr
clc
sar
js
adc
jle
neg
mov
xor
sub
cmps
icebp
add
es
push
test
repnz
jg
stos
retf
jl
out
movs
pop
into
jl
mov
jmp
sbb
(bad)
repnz
cmp
std
cmp
hlt
xchg
and
aam
std
or
dec
movs
adc
mov
mov
xchg
aad
test
mov
(bad)
cld
fcom
and
les
hlt
les
arpl
stos
ins
xchg
(bad)
xlat
out
es
add
(bad)
div
test
rcr
mov
adc
and
(bad)
jnp
add
jnp
push
nop
cli
mov
cmp
std
mov
cmp
jb
scas
pop
call
stos
daa
cdq
imul
inc
adc
mov
addr16
mov
cwde
push
test
or
mov
dec
dec
xchg
inc
mov
adc
gs
cdq
int3
div
rol
movs
ja
lods
inc
mov
mov
cmp
sahf
adc
neg
mov
add
movs
iret
cmp
cwde
icebp
pop
mov
mov
jg
sbb
inc
jnp
cmps
rol
jmp
ds
sub
ja
nop
retf
arpl
shl
sbb
jbe
lods
cmp
or
sbb
loop
enter
and
scas
dec
add
rcr
xchg
pop
xchg
shl
outs
sub
xchg
ror
lods
test
dec
mov
test
loopne
jecxz
mov
rcl
inc
std
das
retf
popf
mov
and
sbb
mov
stc
push
ja
and
icebp
xor
sub
das
jno
dec
in
adc
inc
enter
adc
push
jae
mov
movs
int3
sub
shl
bound
fsub
(bad)
movs
outs
addr16
iret
inc
jae
int
iret
pusha
xor
jbe
sub
js
sub
mov
jg
cld
popa
rcr
and
jo
imul
dec
push
lods
push
xchg
out
nop
sbb
and
out
dec
xchg
cmps
mov
gs
rcl
adc
fucom
sub
or
mov
push
mov
aam
xchg
fcom
(bad)
ds
loope
(bad)
or
dec
cmp
and
cmps
in
scas
and
ja
lds
jo
dec
pop
out
dec
dec
jle
dec
sub
(bad)
jb
stos
sahf
in
lds
test
les
cmp
daa
sbb
push
cmc
inc
sub
dec
mov
or
xor
sbb
or
sub
mov
mov
xchg
mov
test
sub
test
mov
and
fistp
cmp
dec
cmp
jbe
aam
mul
ret
int
and
inc
rcl
add
add
push
loope
out
jg
sub
cli
faddp
adc
sub
pop
xor
arpl
mov
push
jecxz
xchg
pop
add
xor
cmp
out
add
in
mov
in
or
mov
cmps
sbb
jne
movs
cmp
cwde
(bad)
pop
hlt
fdivr
inc
push
pop
retf
mov
xchg
jg
add
mov
xchg
push
ja
add
pop
outs
div
ds
out
jle
movs
mov
lds
mov
adc
or
ret
jnp
cmp
in
pop
jmp
lahf
or
popf
test
cmovnp
jb
or
inc
mov
les
mov
or
stos
rcr
cmp
(bad)
(bad)
lods
int3
shl
movs
int3
(bad)
cli
movs
(bad)
(bad)
loope
xlat
(bad)
mov
add
jle
adc
sti
fiadd
cmp
scas
xchg
fcompp
int3
xlat
cli
pop
test
pop
jge
inc
push
fdiv
jecxz
xor
and
fldenv
outs
shl
dec
pop
add
retf
rol
or
pcmpeqd
xor
fild
pop
inc
es
sub
lods
sub
jmp
inc
add
cmc
movs
dec
mov
sub
pop
mov
add
shl
fild
fild
mul
(bad)
mov
loop
stos
test
xor
fmul
sbb
sub
jne
int3
ficom
mov
sar
xor
cmps
jl
and
repnz
inc
scas
mov
cmc
fwait
loop
out
int3
pop
pop
das
scas
cmp
fimul
mov
xchg
push
and
imul
jmp
movs
sbb
and
stos
mov
ins
imul
sub
dec
push
ja
cld
repnz
or
ss
call
stos
mov
mov
out
or
or
movs
mov
add
or
mov
adc
or
cmp
es
push
and
pop
lods
std
pusha
pop
jp
sub
add
xchg
ds
lock
cli
fcomp
xor
xchg
cs
sbb
or
inc
ins
rcl
ret
addr16
or
mov
sar
int3
stos
iret
call
ja
mov
lods
fstp
or
add
pop
sub
jl
arpl
mov
pop
cmp
repnz
fs
pop
popa
inc
push
mov
mov
sbb
mov
adc
dec
mov
mov
mov
stos
jns
xchg
or
add
xchg
and
fidivr
(bad)
out
enter
mov
cmp
mov
les
jno
cmp
in
movs
pop
stos
cli
lods
int3
xchg
out
mov
rcr
movs
(bad)
xlat
cli
loope
push
mov
loope
adc
es
movs
in
cli
in
push
mov
xor
jmp
in
jmp
and
mov
lods
in
ja
and
out
in
(bad)
stc
(bad)
mov
ja
pop
or
push
xor
mul
les
push
adc
push
inc
xchg
xchg
jge
fbld
mov
mov
inc
mov
add
int3
push
jg
cmp
stos
mov
adc
arpl
test
mov
shr
stos
sar
xlat
leave
xchg
movs
pop
adc
mov
push
xchg
pop
push
xchg
push
mov
push
fstp
mov
daa
inc
cmps
int
cmp
scas
(bad)
pop
in
fistp
or
and
(bad)
out
xchg
jbe
add
test
mov
imul
in
adc
stos
daa
add
inc
idiv
dec
lea
in
mov
fist
sub
out
pop
mov
aam
fsubp
test
mov
xlat
jp
jne
stos
sub
aam
dec
cli
cli
cmp
retf
sbb
clc
inc
inc
test
(bad)
jbe
pop
xchg
inc
std
int
push
push
loop
xor
xchg
lds
add
or
cmps
pushf
sbb
imul
shl
or
push
or
push
in
dec
xor
pop
stos
lock
lds
or
xchg
xlat
mov
pop
out
fisub
into
lahf
daa
out
dec
scas
scas
call
or
idiv
mov
push
mov
push
imul
lods
shl
mov
lock
js
into
movsx
adc
enter
mov
sbb
dec
xchg
sub
movs
xchg
add
sub
test
cmp
xchg
lea
jmp
std
call
lods
xchg
ret
or
outs
fnstsw
cmp
adc
sub
inc
xor
push
mov
fld
xchg
and
push
add
sub
sti
dec
fsubr
adc
sti
rol
shl
cld
jmp
in
xor
inc
fcomp
xchg
dec
aam
push
jo
ins
cmp
and
stos
adc
cmp
cmp
dec
sub
(bad)
out
or
pop
lods
movs
mov
ds
pushf
dec
sub
xchg
in
(bad)
or
mov
sar
loope
lea
loope
xchg
and
in
mov
sahf
test
arpl
push
iret
and
arpl
xor
pop
dec
out
addr16
scas
retf
sbb
mov
test
(bad)
cs
cmp
push
add
dec
and
mov
lock
dec
adc
mov
xchg
adc
rol
or
xchg
pop
shr
or
inc
jo
xor
inc
mov
int
and
sbb
jns
imul
cmp
out
jno
scas
jmp
push
int3
int
loope
dec
mov
jno
push
adc
sub
call
sahf
pop
sbb
xlat
jno
and
cmps
and
(bad)
xlat
xlat
inc
gs
mov
loopne
inc
jnp
mov
(bad)
fcomi
mov
sub
stos
lds
in
imul
fild
mov
leave
test
inc
mov
test
mov
pop
loop
iret
test
mov
sub
stos
(bad)
pop
loop
std
mov
cmp
int
mov
cmp
mov
mov
hlt
xchg
test
xchg
dec
pop
jg
xchg
rcl
push
jp
and
xor
es
xchg
je
fisttp
pop
mov
inc
or
push
and
xchg
lds
xlat
fild
dec
and
jne
mov
daa
mov
pusha
jp
adc
or
(bad)
cmp
test
bound
es
add
js
mov
fs
shl
sbb
sub
or
xchg
sub
out
mov
enter
sti
cmp
idiv
pushf
dec
out
push
mov
inc
test
mov
scas
xlat
mov
xchg
cmc
push
sbb
sbb
sub
sub
jnp
fisubr
dec
sub
mov
push
ss
pushf
inc
arpl
pop
adc
or
or
fst
out
shl
movs
in
fisub
enter
int3
xlat
imul
aam
repnz
fucomi
(bad)
aam
jmp
retf
into
mov
call
in
push
std
call
sti
mov
nop
xchg
stos
std
clc
sbb
nop
mov
test
aam
jmp
repz
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
fst
mov
and
int3
sar
mov
xchg
add
int3
cmps
repnz
rcr
movs
(bad)
xlat
(bad)
mov
fcom
out
mov
cmp
std
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
test
aam
cli
cmps
fmul
movs
hlt
stos
cli
in
fcomi
(bad)
les
jle
rcl
fs
in
fwait
or
and
loop
or
add
test
sub
movs
stc
rol
mov
xchg
or
xchg
es
ds
sbb
and
push
jno
adc
pop
cmp
into
scas
inc
dec
(bad)
push
push
sar
fistp
xchg
pop
imul
dec
pop
jmp
mov
mov
stc
dec
fisttp
clc
push
in
sbb
jmp
arpl
and
jb
dec
pusha
xchg
and
or
or
imul
cmp
jns
mov
(bad)
xchg
xchg
add
dec
in
ins
lds
push
inc
imul
mov
jno
mov
pop
lods
test
fwait
push
jle
not
mov
sbb
xchg
xor
mov
pop
push
jmp
jbe
adc
fidivr
sub
ins
jmp
(bad)
js
retf
in
xor
cwde
jbe
test
cmp
jae
push
arpl
pop
dec
movs
in
pop
pop
jo
dec
sub
and
inc
pop
imul
rol
clc
js
add
and
data16
adc
movd
pop
sub
sbb
xchg
lahf
leave
jbe
jl
cmp
out
lods
mov
lahf
test
sahf
xor
imul
push
nop
sbb
int
cs
xchg
enter
push
aas
xchg
test
cmp
jns
inc
cwde
sbb
es
aad
or
mov
fldlg2
ss
jmp
sbb
rcr
jbe
outs
cmp
or
sbb
mov
aad
jecxz
loope
bound
mov
push
pop
repnz
ds
xor
jl
pop
add
mov
xor
or
call
jp
lock
inc
sub
lock
mov
pop
push
sbb
fcom
mov
mov
xchg
cli
xor
mov
mov
push
xchg
lods
jg
call
cmps
pop
inc
sub
push
xor
xor
dec
std
lahf
cmp
stos
pop
hlt
xchg
iret
cmp
fisub
pop
push
ret
push
jns
cmps
or
loop
xor
lea
(bad)
sbb
adc
sar
rol
push
mov
push
cmp
call
mov
pop
inc
inc
in
cdq
xchg
dec
xchg
or
(bad)
push
or
je
push
lods
and
pushf
inc
cmps
js
fsubr
sub
call
or
pop
adc
movs
stos
xor
jns
out
movlps
mov
jl
push
sbb
dec
ins
sar
sbb
and
sti
mov
mov
xor
retf
sbb
adc
loopne
and
cmp
scas
cmp
mov
stos
adc
pop
lea
lods
pop
and
retf
stos
jp
in
or
dec
rcr
aas
fistp
xchg
mov
dec
xchg
cmp
mov
pop
bound
mov
outs
or
push
mov
dec
dec
mov
cmp
push
mov
and
and
adc
push
rol
dec
in
in
mov
push
into
(bad)
movs
push
jnp
mov
outs
clc
mov
and
adc
sub
call
call
sub
push
mov
repz
ret
mov
mov
stos
adc
inc
ror
xchg
xor
fs
pusha
in
mov
xor
xchg
sar
ins
inc
imul
push
pop
inc
rcl
add
dec
jmp
dec
imul
int
cmp
repz
mov
cs
push
out
imul
scas
std
movs
into
xchg
ret
inc
adc
movnti
adc
dec
cdq
and
(bad)
mov
xchg
xchg
xchg
ret
mov
in
mov
into
xlat
(bad)
out
rol
loope
mov
not
add
mov
sbb
aam
mov
shl
jle
adc
(bad)
fld
ficom
and
les
lods
pop
stos
(bad)
test
aam
cli
movs
rcr
mov
xlat
repnz
(bad)
test
ds
ror
mov
(bad)
imul
cwde
sub
pop
div
and
mov
push
adc
mov
fwait
cmp
(bad)
mov
pusha
out
inc
popf
in
mov
inc
call
imul
inc
add
and
jecxz
outs
outs
and
dec
or
adc
cwde
rcl
push
push
(bad)
std
mov
dec
xchg
stos
movs
in
add
xchg
ret
sub
ss
stc
jecxz
cwde
jbe
loope
cmp
movs
or
daa
mov
push
sbb
fimul
inc
jp
js
add
cdq
sub
push
cmc
push
outs
pop
rep
sub
arpl
inc
pop
adc
pop
out
cmp
xor
iret
js
lock
xchg
out
mov
dec
inc
lock
loope
pop
outs
dec
mov
dec
loope
outs
xchg
call
imul
test
retf
icebp
hlt
hlt
mov
ret
das
xchg
xchg
dec
inc
sub
mov
or
jbe
lods
in
shr
push
pmovmskb
lahf
mov
pop
mov
dec
punpckhwd
clc
call
inc
push
xor
dec
mov
push
out
xchg
retf
iret
iret
pop
mov
jp
fistp
mov
mov
(bad)
or
inc
mov
add
sub
push
leave
mov
sbb
pop
lods
jae
cmps
adc
sub
push
add
push
mov
cli
je
xchg
xchg
retf
icebp
cs
loope
imul
xor
fnstsw
sub
cmp
popa
bound
popa
add
jbe
push
mov
in
push
adc
nop
fist
jae
jo
jmp
or
or
movs
xor
cld
mov
sbb
adc
retf
int
push
xor
add
inc
xchg
inc
mov
es
jecxz
add
sbb
mov
movs
in
ret
jmp
mov
clc
xchg
mov
xor
sbb
mov
mov
and
and
mov
les
aad
out
aam
jl
cli
inc
xchg
retf
jle
repnz
and
jno
sar
(bad)
jbe
inc
or
mov
(bad)
xchg
repz
into
shr
cmps
sub
pop
dec
pop
les
retf
xor
arpl
cmp
mov
xor
mov
adc
popf
adc
jl
repz
jle
push
jo
repz
cld
adc
mov
mov
(bad)
push
das
add
lds
push
cmp
inc
mov
outs
push
fst
sbb
jg
enter
pop
pop
arpl
adc
lds
lea
or
mov
mov
and
fwait
mov
lahf
pop
scas
test
test
mov
inc
cs
push
mov
cmp
mov
or
pop
mov
and
cmc
push
inc
push
sar
loope
mov
adc
xchg
jp
mov
test
mov
test
fimul
in
dec
xchg
aaa
sahf
xchg
mov
jb
xlat
sbb
icebp
sahf
jnp
out
jbe
scas
mov
retf
enter
mov
sub
ins
mov
ss
mov
ds
call
(bad)
cmp
add
dec
cmp
call
push
mov
js
aas
imul
scas
xor
shr
shr
push
jns
cmp
jmp
pop
sub
mov
retf
leave
and
in
cmp
enter
out
add
cmc
ds
dec
shl
aaa
xlat
pushf
data16
fwait
loope
data16
xor
mov
lds
ficomp
into
(bad)
mov
sub
jg
adc
sbb
mov
mov
mov
inc
mov
pmulhw
jmp
mov
pop
out
xchg
dec
add
xor
mov
das
dec
aam
das
mov
pop
ja
repnz
int
sahf
test
and
aaa
mov
mov
add
call
inc
pop
adc
(bad)
movs
cmp
loope
add
lds
dec
xor
stc
add
mov
inc
mov
in
jmp
(bad)
js
popa
lods
push
dec
int3
cli
dec
iret
dec
sbb
in
jl
and
aaa
test
pop
fisub
bound
mov
std
je
add
jl
repnz
iret
(bad)
cmp
movs
and
lahf
movs
pop
mov
lahf
arpl
xchg
sub
push
(bad)
pop
sbb
mov
jl
out
hlt
xor
hlt
mov
jo
xor
cs
push
sub
loope
inc
add
nop
jge
rcl
pop
xor
add
aam
sub
push
sti
sbb
sub
push
in
or
inc
pop
rol
test
mov
xchg
jnp
call
enter
sub
nop
mov
pop
in
dec
(bad)
fidivr
lods
add
repnz
rol
(bad)
lods
(bad)
sar
mov
xlat
mov
and
shl
xchg
pop
ss
int3
pop
in
leave
xchg
cmp
sar
mov
push
sti
push
bound
in
pop
pop
mov
sbb
fs
lods
loopne
inc
adc
mov
sbb
add
js
mov
cmc
xor
mov
jmp
rcr
mov
add
mov
(bad)
dec
test
cli
aaa
sbb
ja
pop
out
mov
popf
mov
and
add
jmp
rol
dec
test
outs
xchg
cmps
fistp
movs
(bad)
test
and
adc
call
repz
imul
out
jl
loop
(bad)
jge
jne
je
or
cmp
aad
pop
mov
push
jae
sub
lock
cmp
push
push
mov
cs
jnp
adc
gs
mov
mov
or
push
shr
ins
call
pop
mov
sbb
pop
stos
pop
mov
ss
mov
add
mov
pop
sbb
sub
movs
jo
push
xchg
jmp
mov
sbb
scas
mov
mov
fwait
xchg
les
clc
arpl
inc
stos
int3
dec
arpl
or
pop
inc
pop
jg
test
gs
pop
ins
dec
mov
xor
lea
mov
xlat
adc
cs
in
inc
rcl
jmp
jge
xchg
cs
adc
jmp
out
ss
or
sub
pop
mov
sbb
xchg
clc
mov
adc
mov
pause
rcl
cmp
push
push
or
xor
nop
mov
jb
ss
loopne
out
les
stos
scas
cld
xchg
inc
xchg
mov
cmp
xor
add
sub
loopne
fst
hlt
xchg
inc
(bad)
mov
xchg
sbb
sub
xor
dec
mov
mov
mov
call
add
pop
sub
jbe
pop
inc
xchg
mov
aam
adc
cmp
cwde
arpl
mov
mov
sbb
call
mov
dec
addr16
pop
fwait
sub
sbb
mov
fwait
dec
call
cli
jmp
or
scas
or
add
adc
pusha
jns
mov
(bad)
cld
dec
and
cli
inc
idiv
or
pop
xor
idiv
mov
inc
adc
mov
sub
jp
mov
aas
mov
sahf
mov
add
adc
inc
xor
push
sub
sub
sbb
shr
mov
add
push
(bad)
jnp
pop
pop
mov
push
pop
into
jge
xor
push
sar
ins
sbb
cli
dec
xor
and
pusha
(bad)
adc
dec
daa
aas
pop
repnz
jno
(bad)
push
xchg
inc
sub
cwde
push
lahf
sub
fmul
pop
mov
mov
sub
into
aas
(bad)
mov
repz
in
ret
imul
fcomp
stc
aam
xor
stos
in
popf
mov
pop
sub
pop
out
sbb
xchg
dec
push
out
inc
xor
pop
lock
sub
dec
sub
in
fidivr
cmp
and
fbld
adc
je
sbb
cmp
mov
bnd
cmp
test
push
test
cld
outs
bound
mov
jecxz
pminsw
xchg
cs
mov
mov
in
push
pusha
fcmove
shr
add
dec
shr
mov
lds
add
mov
jecxz
push
jnp
fcomp
xchg
ret
adc
jge
xchg
pusha
mov
pop
test
jnp
dec
mov
adc
in
test
xchg
mov
sbb
stc
in
out
enter
and
cmp
mov
fistp
sub
or
outs
mov
pusha
ja
movs
dec
add
pop
jnp
dec
adc
stos
pop
jbe
adc
jmp
xor
fdivr
xor
sahf
or
enter
(bad)
cdq
jbe
clc
pop
(bad)
pop
imul
mov
inc
mov
xor
(bad)
jmp
cmp
dec
cmp
aas
pop
shr
lds
dec
mov
in
mov
ret
cmp
adc
js
dec
(bad)
ja
mov
popf
mov
jmp
arpl
out
inc
lea
outs
inc
xlat
ret
mov
xlat
pop
test
mov
pop
cs
sahf
fcmove
repz
sub
adc
mov
out
test
jecxz
inc
pop
inc
mov
into
or
jle
jmp
movs
pop
mov
clc
xchg
shr
add
cmp
xor
cdq
lods
ins
sub
in
jp
push
xchg
jge
sar
cmps
ss
or
xchg
mov
pusha
jecxz
inc
bound
adc
or
hlt
add
sub
shl
fadd
movs
(bad)
push
mov
mov
(bad)
out
movs
enter
(bad)
(bad)
xlat
repnz
mov
and
adc
add
sti
cmc
push
fbstp
and
fidivr
mov
cmp
sbb
sub
and
inc
mov
xchg
mov
movs
xor
pop
test
mov
lea
mov
int
into
fld
jmp
mov
jp
mov
mov
or
xor
dec
mov
in
bound
jne
shl
fwait
add
pop
push
mov
xchg
push
jno
mov
leave
stos
mov
mov
and
xchg
scas
cmpxchg
cmc
pop
mov
xor
out
mov
ins
dec
or
xchg
out
ss
scas
fst
pop
div
cmp
or
je
mov
mov
xlat
cld
adc
stc
mov
push
or
add
stos
bound
and
sbb
stos
in
add
xchg
test
sub
mov
mov
push
call
cld
inc
lods
adc
xor
mov
sti
adc
clc
push
xor
test
jg
inc
cmp
sub
in
nop
cmps
mov
xor
xchg
xchg
(bad)
cwde
addr16
das
jnp
mov
out
mov
scas
mov
fbld
jp
cmp
sbb
cmp
mov
ss
popa
mov
mov
aaa
in
mov
and
mov
xor
add
mov
ss
jne
dec
aam
test
retf
pop
add
sar
push
ret
js
jmp
shr
jnp
mov
cmp
jb
dec
push
push
call
outs
sub
mov
pushf
test
pop
mov
ins
jmp
repz
inc
neg
push
mov
mov
movs
cmp
jnp
dec
cmp
push
popa
stc
fnstsw
and
and
and
pop
fmul
lods
mov
sub
mov
xor
mov
jae
inc
xor
inc
sub
xchg
jle
xor
xchg
retf
dec
stos
xchg
push
fadd
ret
icebp
xchg
repnz
inc
sahf
fcmove
push
loope
lods
mov
mov
popa
sar
call
mov
loop
xor
jecxz
daa
dec
popf
mov
push
jne
out
adc
leave
xor
or
into
lock
int
inc
mov
cmp
and
sub
lahf
cdq
push
jno
out
or
ss
ss
jo
enter
rol
mov
aaa
sbb
ins
icebp
xor
add
pop
ret
(bad)
test
inc
push
mov
in
and
test
pushf
pop
cdq
loope
call
dec
cmp
fcmove
adc
in
repz
xchg
(bad)
inc
mov
mov
push
jecxz
cli
jo
push
call
jo
sti
popf
mov
mov
jle
dec
js
pushf
inc
cmp
sbb
pop
inc
or
repnz
jns
cdq
in
mov
fisubr
icebp
jmp
pop
lea
push
mov
mov
mov
cmps
sbb
addr16
cdq
lahf
test
dec
popa
mov
push
mov
imul
out
test
mov
hlt
mov
or
sbb
cmp
imul
and
popf
sbb
sub
js
add
orps
mov
jmp
pop
inc
rcl
sub
out
xlat
jno
sahf
mov
in
jnp
ss
cmp
stos
jecxz
ror
into
add
mov
xchg
clc
or
push
fs
sub
xchg
dec
fild
js
test
imul
mov
jne
jb
add
test
jecxz
vmovq
iret
cld
xor
push
push
leave
cmp
stc
and
and
mov
fs
push
fadd
loope
ret
mul
sbb
push
inc
xchg
sub
(bad)
jmp
dec
sbb
push
rol
nop
enter
jg
ret
jg
daa
or
jge
in
push
lock
lds
scas
mov
or
push
je
jae
out
loop
cmp
fisub
cmc
dec
dec
sub
xor
pop
add
dec
adc
adc
lods
les
push
fst
pop
lahf
jle
jbe
add
cli
ds
in
(bad)
ins
or
dec
(bad)
int3
mov
jg
sar
ret
(bad)
retf
xor
test
push
fisttp
retf
adc
mov
(bad)
jmp
xor
sbb
inc
std
arpl
test
rcr
pop
xchg
mov
jae
stc
cli
fwait
lods
add
or
pop
shl
xchg
push
jno
das
adc
xor
xchg
cwde
sbb
sub
fdivr
retf
repz
in
imul
push
ret
push
outs
jp
add
jmp
jle
xchg
xor
mov
sar
inc
in
inc
in
test
push
cmp
adc
xor
add
scas
sbb
add
mov
mov
sti
mov
pop
pop
inc
sbb
mov
int
push
lods
jle
mov
pop
dec
adc
xor
pop
mov
dec
mov
inc
push
cdq
daa
and
out
out
add
inc
movs
push
mov
mov
sbb
mov
aas
dec
jne
test
push
pusha
les
fcom
jmp
push
mov
in
lods
(bad)
ret
inc
adc
das
cmp
and
mov
mov
(bad)
mov
(bad)
mov
cdq
cmps
pusha
push
(bad)
cmp
test
pop
jo
jo
mov
outs
dec
cdq
adc
sahf
mov
push
pop
(bad)
sbb
scas
sbb
sbb
int
fistp
dec
fwait
cmc
pop
rcl
jge
lods
aaa
(bad)
adc
mov
lahf
and
pop
int3
ret
push
and
cwde
dec
dec
xor
adc
adc
jne
call
pop
jo
fisubr
jmp
shl
repz
fnstcw
test
aam
push
jae
ss
mov
cmc
cs
out
or
xor
and
push
inc
std
push
mov
add
or
mov
mov
std
jmp
xchg
or
adc
pop
or
sbb
xchg
loopne
xor
popf
mov
inc
jecxz
mov
pop
stos
push
ins
or
call
clc
inc
das
shl
mov
push
dec
js
enter
arpl
add
jo
mul
push
mov
sbb
sub
aaa
sub
lock
enter
add
pop
movs
(bad)
bound
repnz
rcr
mov
ror
(bad)
movs
rcl
mov
fbstp
loopne
push
cli
lods
inc
sahf
jb
add
jnp
ret
ins
add
ja
adc
sbb
and
add
sar
add
or
cld
cmp
cmp
pushf
push
dec
cdq
or
push
psrlq
or
imul
mov
xchg
pushf
into
outs
and
sbb
arpl
call
mov
push
inc
or
pop
in
fisub
jp
xor
xor
xlat
or
jns
inc
daa
leave
into
cmp
add
ins
cmc
dec
push
pushf
out
sar
movs
sub
popf
(bad)
sub
js
test
mov
sbb
jmp
mov
out
sbb
inc
sbb
jbe
imul
pop
sar
pop
add
add
xchg
cs
scas
or
sbb
dec
xchg
movs
or
imul
cmp
loope
jbe
repz
es
pop
push
mov
repz
xor
shl
sti
xor
cli
jmp
in
bound
fst
cli
add
fstp
push
cmp
xor
sti
les
pusha
sub
cmp
mov
fisttp
mov
mov
mov
or
mov
clc
rcl
cld
and
ins
dec
sbb
nop
lds
out
call
cmovp
pop
mov
adc
xor
mov
and
sbb
xlat
cmp
lods
xor
loop
das
mov
add
daa
mov
adc
mov
mov
sbb
sti
(bad)
jo
out
sbb
xchg
mov
push
in
mov
jecxz
mov
adc
pop
jmp
cwde
add
add
dec
push
cs
in
mov
xor
enter
ja
movs
jno
ret
dec
push
adc
inc
sub
dec
into
jb
movs
clc
frstor
mov
xor
or
movs
mov
xchg
mov
push
jb
mov
in
repnz
fcomip
arpl
sub
jge
jmp
stos
jmp
sub
mov
enter
xchg
xor
icebp
mov
(bad)
cli
shl
jl
bound
outs
sub
scas
jg
or
jno
cwde
and
and
loop
fdiv
js
imul
push
in
and
xor
jae
(bad)
push
ds
scas
mov
dec
pop
xor
mov
std
adc
cmp
arpl
ins
sub
jmp
nop
lods
repz
sbb
xchg
cmp
mov
jecxz
push
movs
xchg
movs
leave
push
jns
das
push
pop
push
inc
xchg
adc
movs
addr16
and
xor
xor
or
addr16
call
shl
add
adc
es
or
ds
or
adc
cli
lods
push
cwde
fist
ror
in
sbb
mov
jae
xlat
fidiv
fdivr
sar
sbb
adc
xor
dec
das
cdq
fld
and
push
and
inc
inc
stos
xchg
push
cmp
cmp
mov
jae
jg
inc
fs
push
cdq
pop
mov
rcr
pop
sar
scas
les
cmp
in
jo
lahf
ret
test
and
or
pop
xor
sbb
and
mov
push
outs
shr
adc
daa
fist
cmps
cli
test
ror
dec
rol
test
jno
jmp
es
pop
push
xchg
aam
int3
add
shr
rol
mov
xor
hlt
shl
sub
arpl
(bad)
call
sbb
dec
sbb
adc
sub
push
shl
stos
repnz
scas
xor
out
mov
fcmovbe
jg
xor
add
cmp
mov
inc
mov
cwde
ficomp
in
xchg
cli
gs
jp
or
pop
cmp
mov
mov
movs
cmp
enter
push
fcomp
jb
xchg
cmp
mov
xchg
lock
std
mov
adc
xor
daa
mov
in
in
aad
ins
clc
jae
and
scas
cmp
(bad)
ficom
ret
cmp
xor
mov
mov
fisubr
sub
jno
daa
(bad)
stos
stos
mov
ds
adc
push
inc
mov
push
into
retf
push
inc
ss
jb
xchg
cwde
int3
data16
sub
in
das
or
mov
jnp
dec
fs
aaa
(bad)
push
pop
jmp
sbb
inc
test
shl
fsub
dec
cmc
add
lahf
js
push
lahf
and
push
ds
mov
push
add
and
cmp
div
push
(bad)
ficomp
dec
fistp
(bad)
fwait
xchg
rcr
es
dec
and
mov
jge
fs
out
cmp
inc
inc
(bad)
mov
adc
mov
pop
mov
addr16
fisubr
sbb
sub
add
(bad)
dec
xor
adc
cdq
inc
xchg
push
gs
push
jl
and
outs
dec
(bad)
push
adc
icebp
sub
pop
stos
jns
(bad)
ja
test
aaa
aas
pop
fwait
pop
int
out
(bad)
ins
mov
(bad)
leave
or
sbb
dec
pop
mov
(bad)
test
fimul
repz
fs
xor
daa
sub
cs
xor
test
pop
fadd
mov
cmp
add
fist
rol
aad
sub
addr16
in
fdiv
imul
adc
cmp
sti
icebp
fwait
mov
adc
mov
and
mov
mov
jge
inc
inc
movs
push
call
or
xor
adc
mov
imul
mov
stos
and
pop
pop
and
pop
xor
out
loop
loopne
add
inc
inc
iret
inc
cmps
bnd
adc
scas
in
xchg
dec
int3
mov
inc
cmp
ror
jb
lea
push
xchg
call
mov
js
dec
in
jae
sub
jne
loope
mov
sbb
sbb
loopne
ins
push
mov
mov
test
push
jno
or
push
xor
(bad)
mov
jae
push
xlat
push
(bad)
jle
adc
cld
and
jbe
jae
mov
dec
and
dec
fs
dec
jecxz
fidivr
hlt
mov
neg
scas
icebp
mov
shl
aaa
movs
scas
das
cmovp
outs
adc
add
sbb
fidiv
and
call
popa
jo
add
jecxz
(bad)
cmp
mov
stos
or
jle
in
neg
mov
pushf
cwde
xchg
mov
rol
mov
repnz
hlt
add
push
inc
jnp
pop
dec
fcmovnu
jb
imul
dec
xchg
add
sbb
retf
je
and
fcomp
push
loopne
mov
cmp
pop
mov
pop
or
je
xchg
loope
dec
mov
push
(bad)
adc
fisubr
cmp
sub
loop
dec
test
jg
and
sbb
sub
sub
mov
cwde
sti
imul
cwde
mov
jae
jne
enter
(bad)
icebp
cmps
pop
ins
adc
push
mov
icebp
xchg
jo
pop
lea
push
repz
add
lods
fdiv
jle
retf
rol
ins
xchg
xor
xchg
shr
sbb
inc
jecxz
sbb
jge
push
std
cmp
sysret
aam
mov
dec
in
cmp
in
mov
ret
test
add
sahf
pop
imul
push
pop
ret
ror
ret
push
push
dec
fisttp
pop
mov
inc
shr
cmps
cmp
sub
rcl
and
(bad)
stos
loope
push
pop
pusha
pushf
rol
mov
mov
aas
jecxz
add
jl
mov
push
repz
test
mov
pop
inc
ret
xor
sbb
mov
(bad)
data16
scas
jae
loop
mov
movs
imul
(bad)
lahf
cli
outs
sbb
sbb
bound
sti
xchg
imul
repnz
daa
push
daa
call
popf
mov
movs
call
pushf
pop
and
leave
inc
(bad)
jmp
mov
rcr
inc
push
out
imul
mov
dec
js
or
push
movs
sti
mov
xchg
idiv
dec
aaa
ins
jb
mov
pop
iret
inc
push
jb
mov
adc
fwait
adc
inc
int
clc
push
lahf
movs
adc
aam
xchg
outs
fist
or
mov
cs
cmc
mov
neg
xchg
in
or
sbb
and
jle
stos
push
mov
push
cmp
dec
cmp
pop
xor
add
add
sbb
add
push
rcr
test
in
push
mov
dec
jae
leave
dec
push
call
cs
mov
jecxz
mov
sbb
mov
stos
lods
pop
gs
jge
shufps
call
mov
jecxz
repz
jecxz
pop
inc
dec
addr16
ret
mov
out
mov
xchg
xlat
gs
sub
xor
jns
dec
add
arpl
inc
cmp
stc
adc
cwde
mov
inc
pop
mov
pop
sbb
sub
dec
mov
sbb
fdivr
cmp
mov
popf
mov
dec
dec
ret
neg
rcl
sbb
bound
inc
(bad)
push
jl
mov
sbb
(bad)
imul
push
mov
imul
xor
jae
mov
xchg
sub
es
ret
cmp
pop
lahf
clc
inc
(bad)
mov
and
add
das
(bad)
and
xor
dec
mov
sub
scas
lock
lods
push
in
push
xor
popf
or
pop
cmp
jne
sbb
sub
mov
push
mov
jbe
mov
bound
fidiv
bnd
(bad)
not
stos
jmp
xchg
adc
inc
and
std
(bad)
jo
push
jns
cld
aam
cmp
nop
xchg
ret
ss
movs
add
add
mov
shr
idiv
push
mov
dec
adc
push
pop
cdq
and
push
xlat
sbb
sub
xchg
nop
out
mov
jg
test
dec
xor
es
sbb
(bad)
dec
repz
call
push
adc
mov
jnp
lds
sbb
cmp
movs
out
adc
or
or
jne
add
in
pop
mov
add
xchg
test
cmp
outs
not
or
vpshufd
inc
xor
dec
xchg
cmp
jge
cmp
sub
aas
inc
mov
dec
imul
jmp
cmp
push
cmps
imul
clc
les
fs
in
movs
je
cmp
xchg
stc
or
pop
(bad)
sbb
es
daa
imul
fidivr
popf
outs
js
repz
iret
sbb
push
add
jmp
aaa
adc
push
scas
fs
cwde
aaa
adc
push
mov
push
or
mov
or
cmp
icebp
in
push
sbb
aad
jecxz
cmps
pop
in
add
jl
and
xchg
shl
mov
mov
push
sahf
xchg
pop
mov
pop
add
nop
jbe
mov
sub
cmp
mov
add
cmp
sub
out
jnp
out
push
jns
test
(bad)
sub
jge
jmp
dec
cdq
ja
pusha
add
push
push
xor
lock
add
sub
rcl
xor
mov
stc
dec
fs
int3
nop
or
mov
loop
sbb
(bad)
adc
imul
pmullw
push
push
out
jns
mov
xchg
push
push
nop
add
shl
push
ins
in
bound
ins
movs
add
push
push
fist
in
std
out
and
aam
mov
sub
add
test
add
ins
jbe
push
push
sub
or
(bad)
pop
mov
mov
jae
jo
mov
fwait
push
je
dec
mov
sub
mov
mov
retf
arpl
inc
stc
lods
mov
shl
out
add
dec
fldcw
imul
and
add
test
or
mov
je
hlt
popf
mov
sar
into
adc
loopne
test
loop
jns
jl
hlt
pop
into
daa
xchg
pop
sub
sub
out
dec
nop
sahf
add
fld
adc
pusha
xabort
sub
call
sbb
add
arpl
sub
(bad)
iret
test
ficomp
cwde
add
inc
add
dec
mov
dec
sahf
push
dec
or
adc
mov
mov
jp
adc
adc
lock
aam
or
pop
popa
sbb
dec
inc
sub
cmp
or
push
sbb
add
dec
pop
push
add
jne
mov
mov
dec
add
(bad)
lods
aam
jp
pop
push
or
jecxz
scas
jnp
loope
call
pop
mov
sbb
pop
mov
aas
idiv
jns
xchg
sbb
sub
out
lods
leave
jg
dec
mov
sahf
fs
xchg
daa
dec
jns
gs
jae
sti
call
adc
hlt
bound
jge
mov
push
data16
jbe
or
aad
push
ret
sub
pop
adc
ja
movs
fs
cli
test
enter
(bad)
(bad)
(bad)
loope
xlat
cli
mov
adc
bound
xchg
cmp
and
xlat
cli
sub
gs
mov
loopne
cli
into
hlt
inc
inc
sbb
fsub
adc
lods
jo
sub
js
je
ss
jno
mov
dec
cwde
lods
jbe
aas
or
pop
idiv
cmc
push
in
mov
out
xchg
add
sbb
mov
sub
(bad)
dec
push
xchg
jp
cmp
js
xor
(bad)
push
mov
ror
mov
xchg
mov
pusha
inc
lahf
out
outs
imul
ss
sub
xchg
fs
movs
loope
push
shr
mov
sub
mov
add
aas
add
mov
sub
mov
into
call
pusha
xchg
xor
jno
sbb
mov
mov
dec
mov
loope
push
jae
int3
test
pop
(bad)
ja
stc
out
repnz
sbb
xchg
and
out
push
and
cmp
push
mov
mov
and
movs
lahf
imul
jmp
scas
cld
ret
inc
inc
fwait
mov
or
lahf
xchg
lds
fidiv
mov
sub
es
mov
cli
add
std
push
mov
jo
ins
fnsave
inc
addr16
xchg
retf
pop
pop
arpl
sbb
(bad)
sub
fnsave
mov
addr16
stc
inc
es
sahf
fstp
enter
sti
cmp
mov
(bad)
sub
js
xor
test
repz
test
push
dec
int3
data16
(bad)
call
repz
and
ja
mov
adc
in
sub
mov
cmps
loopne
mov
xchg
push
nop
test
jl
int3
adc
int3
out
gs
(bad)
jmp
xchg
daa
cli
fcomp
das
jg
or
jl
xchg
adc
or
push
pop
test
mov
xor
dec
mov
push
cmp
shl
mov
jle
(bad)
popf
leave
mov
dec
(bad)
in
adc
mov
cmp
add
mov
jb
pop
aas
ret
(bad)
jmp
mov
dec
out
mov
retf
jmp
je
jg
js
out
fiadd
or
jmp
sti
(bad)
clc
dec
cmp
pusha
mov
mov
sbb
pop
test
cli
dec
jmp
mov
icebp
mov
sar
icebp
aas
mov
in
dec
push
adc
fisub
pop
fild
jl
mov
push
inc
mov
xor
cdq
inc
mov
or
cmps
add
push
outs
push
pusha
pop
mov
lods
mov
and
pop
(bad)
mov
pop
xchg
ja
in
xor
arpl
mov
cmp
fisubr
jl
pop
mov
xchg
ret
stos
pop
std
cmp
addr16
stc
outs
aad
enter
fld
push
push
das
sbb
pop
scas
adc
out
add
imul
xchg
cmp
rcr
imul
mov
test
scas
cmp
lea
dec
pusha
push
(bad)
mov
jno
aaa
xchg
or
and
or
js
cwde
and
lea
mov
xor
fsub
pop
test
les
jl
xchg
jne
inc
fsub
mov
adc
adc
frstor
mov
addr16
cmps
cmp
jmp
xchg
clc
mov
(bad)
sbb
dec
loop
xchg
stc
ficomp
xor
shl
and
xor
cld
fisttp
mov
xchg
mov
pop
or
mov
adc
out
push
and
jl
inc
mov
stc
push
push
retf
out
jl
(bad)
ja
test
push
pop
ins
inc
lods
shl
push
sar
pop
add
ins
cmp
and
push
cmc
mov
dec
and
xchg
subps
mov
inc
inc
sbb
pop
jne
mov
mov
mov
aad
inc
dec
and
xchg
and
cmps
and
mov
out
(bad)
cmc
sti
stos
inc
adc
pushf
pop
dec
mov
push
push
ffreep
in
repz
clc
xor
sbb
iret
movs
in
cdq
out
lds
mov
xor
push
das
adc
mov
sub
dec
mov
mov
cwde
jg
mov
or
movs
push
jmp
cmp
xchg
dec
cld
ins
ss
jbe
aas
sub
push
add
fs
mov
out
aad
cli
mov
add
add
daa
pop
arpl
jnp
das
add
add
push
xchg
loopne
loopne
dec
into
inc
icebp
in
pop
jns
ja
push
xchg
sti
mov
adc
test
(bad)
scas
pop
cmp
lods
inc
push
cmps
repnz
ja
leave
(bad)
in
or
dec
sbb
inc
sbb
add
pop
jl
and
jl
and
and
mov
push
(bad)
das
sub
imul
inc
call
xchg
retf
cwde
test
aam
adc
gs
mov
fs
mov
mov
add
dec
adc
loop
call
enter
test
xor
xchg
shl
add
cmps
fsub
push
mov
mov
pop
cmp
hlt
push
test
push
sub
xchg
pop
lds
mov
cdq
pop
pushf
movs
lock
sub
into
mov
pop
out
or
fidiv
aaa
jle
jmp
(bad)
iret
pop
and
in
ins
loop
loope
mov
mov
test
xrelease
fcomp
and
push
dec
mov
int3
(bad)
cmp
ss
sub
push
dec
ins
sub
scas
inc
(bad)
outs
xor
mov
arpl
push
hlt
mov
out
pop
das
sub
int
shl
mov
dec
adc
jne
xor
xchg
adc
xchg
hlt
or
push
mov
jne
pop
push
pop
mov
(bad)
out
outs
xor
loopne
dec
xor
retf
sub
mov
xor
push
ja
cmp
outs
jno
jmp
jns
xchg
mov
xchg
fisubr
hlt
fmul
push
dec
stos
inc
jge
add
jnp
push
outs
mov
jbe
pop
cmp
(bad)
mov
or
inc
test
test
sahf
pusha
sub
aaa
(bad)
mov
das
mov
not
ins
push
sub
sub
(bad)
lods
pop
and
into
outs
pop
loop
dec
mov
ror
imul
iret
int3
and
pop
arpl
fisttp
fmul
sbb
cmp
lea
test
xchg
sbb
dec
repz
push
add
cmp
xchg
nop
mov
mov
retf
(bad)
mov
aam
sbb
mov
test
mov
mov
inc
dec
nop
rcr
dec
mov
cld
mov
sbb
repz
adc
xor
cmp
(bad)
mov
aaa
xchg
int
mov
pminsw
push
jg
xchg
dec
jmp
cdq
push
jle
mov
jo
jo
xor
sbb
fdivr
bound
fdivr
jae
and
stc
mov
adc
in
cld
add
dec
data16
stc
add
xlat
daa
xchg
add
retf
pop
push
cmp
jmp
les
jnp
ins
dec
xchg
xor
pop
retf
dec
dec
push
xchg
(bad)
mov
fisubr
push
(bad)
nop
daa
loope
sahf
sub
jbe
int3
push
sub
mov
inc
or
or
out
jg
mov
fisttp
ja
out
(bad)
fisttp
sahf
ja
mov
xchg
sub
in
add
inc
xchg
pop
sbb
hlt
pop
movs
test
sti
mov
mov
mov
bound
dec
call
inc
stc
outs
sbb
imul
jle
fs
loope
xchg
jne
fs
mov
mov
and
gs
(bad)
mov
call
imul
mov
test
adc
sub
mov
lods
push
shl
nop
jb
mov
jne
fdiv
xchg
pusha
dec
sub
fild
inc
dec
ja
call
aad
or
fwait
inc
div
mov
pop
dec
add
ror
xchg
cmp
sbb
or
and
adc
and
mov
in
imul
mov
xor
and
push
fiadd
xchg
in
xchg
loope
je
cdq
hlt
(bad)
in
adc
pop
jecxz
push
out
ins
mov
gs
lods
push
shl
and
push
jl
pop
jne
sahf
push
sahf
xchg
shr
popf
fucomp
adc
dec
loopne
mov
mov
imul
out
or
test
add
call
xor
popf
add
int
xchg
sbb
shr
cmps
movs
jmp
xor
into
lock
(bad)
arpl
retf
jmp
enter
jne
aad
movs
or
add
aas
cmp
movs
adc
fild
pop
test
mov
pop
nop
loop
std
outs
lea
pop
jmp
hlt
push
fwait
xor
xchg
fstp
jecxz
mov
mov
adc
leave
mov
aaa
fst
fistp
retf
or
in
inc
pop
and
popf
add
js
inc
int3
cmp
sahf
cld
repnz
rcl
add
add
lahf
add
call
stc
daa
add
scas
mov
movs
rcl
movs
enter
test
fsubr
outs
in
ret
into
stc
lahf
push
out
adc
sbb
test
xlat
pop
sub
mov
pop
jl
fs
in
mov
pop
adc
inc
and
or
leave
cmp
aam
ins
in
loopne
dec
pop
pop
mov
mov
fsubr
pop
lods
ficom
cli
stos
inc
stos
xor
xor
mov
lds
jns
sub
mov
retf
scas
adc
jp
and
popf
push
cmps
xor
es
js
sub
pushf
xor
popf
jmp
inc
ins
in
dec
mov
loope
jb
sbb
(bad)
cmp
mov
shl
movs
int3
shl
movs
(bad)
(bad)
loope
xlat
(bad)
in
push
cli
in
adc
add
mov
add
icebp
rcl
mov
pop
jmp
icebp
leave
xor
popf
in
dec
cmps
nop
pushf
ss
mov
movs
inc
aas
and
into
push
jns
iret
inc
mov
mov
shl
movs
in
xchg
adc
mov
es
and
mov
lea
mov
cmp
ins
pop
adc
cdq
int3
fild
push
aas
dec
nop
cdq
xchg
fadd
mov
and
lods
jmp
aaa
push
push
jle
ror
neg
mov
mov
gs
pop
sub
scas
or
(bad)
retf
not
sub
jmp
jbe
dec
jo
retf
repnz
xor
and
lds
in
jecxz
sub
mov
lea
sub
jns
xchg
xchg
push
cmp
sub
in
rol
cmp
xchg
xchg
adc
hlt
pop
(bad)
mov
nop
out
mov
push
jbe
(bad)
ss
adc
push
jb
mov
xchg
lds
dec
iret
scas
xchg
stos
pop
cmp
ja
xchg
loope
stos
xlat
nop
lahf
push
dec
cld
data16
aas
mov
fwait
outs
out
gs
jl
and
out
add
or
test
pushf
mov
mov
test
test
mov
ds
mov
in
fidiv
fsub
ins
xchg
mov
loop
popa
(bad)
sub
fmul
dec
mov
or
(bad)
mov
ja
ja
int3
xchg
nop
sub
les
or
inc
xchg
das
inc
mov
(bad)
lods
jne
ins
jl
xchg
hlt
pop
mov
add
mov
jg
inc
fimul
faddp
push
fcmovbe
push
cmps
mov
in
stos
hlt
jo
or
adc
call
adc
xchg
lods
(bad)
fist
and
cmp
popf
loop
pushf
xor
sbb
test
mov
dec
hlt
cmp
aaa
into
push
fldenv
outs
xor
js
(bad)
cmp
or
mov
out
fldenv
repnz
jmp
leave
jae
dec
ss
cmp
jns
sbb
cmp
cmp
call
add
jp
jae
mov
adc
and
cmp
dec
jle
mov
add
xor
mov
scas
mul
adc
icebp
aam
fs
xchg
sar
add
iret
jecxz
(bad)
jmp
aad
cli
enter
cmp
mov
sub
xchg
jnp
sub
xchg
jno
aas
popf
xchg
xchg
add
clc
aas
test
test
pop
adc
mov
not
mov
sub
push
sub
mov
dec
addr16
ss
loope
add
lds
mov
jmp
in
in
ret
pop
lods
stc
xchg
jmp
jnp
sbb
into
jp
cmp
inc
add
jl
push
inc
out
pop
punpckldq
lahf
call
fs
test
fisubr
inc
adc
inc
fist
ror
inc
jbe
lock
aad
xchg
sti
(bad)
cmp
mov
ja
popw
jge
test
iret
lods
sti
arpl
adc
jecxz
bound
lods
pop
not
jb
sub
xchg
cmps
imul
mov
lahf
inc
mov
gs
add
dec
push
cld
sahf
adc
sub
cmp
fidivr
mov
and
inc
mov
mov
sar
repnz
test
js
nop
(bad)
xchg
mov
and
stos
or
lahf
mov
cmps
jno
cld
in
inc
retf
fcom
arpl
xchg
scas
dec
and
cmp
movs
fs
cli
test
int3
fcomip
movs
(bad)
iret
(bad)
movs
(bad)
xlat
cli
mov
adc
out
push
clc
pop
adc
and
xlat
cli
xor
inc
inc
xchg
xchg
and
jle
jmp
or
and
out
imul
dec
cmps
cmp
add
push
mov
ss
and
mov
out
mov
gs
xchg
or
inc
mov
outs
fs
aad
sti
cwde
adc
sub
ficomp
rol
outs
adc
not
lods
lods
loop
pop
mov
jmp
mov
push
or
adc
test
div
and
inc
push
rol
vhsubpd
xor
jmp
dec
jg
xchg
ss
pop
out
push
lea
test
shr
inc
cdq
add
fistp
rcl
sub
scas
fwait
and
add
(bad)
daa
mov
push
repz
fstp
pop
syscall
gs
mov
loop
fcomip
loope
stos
in
cmp
stc
jae
mov
jne
jns
mov
and
ins
ret
jae
jl
and
dec
push
and
lock
mov
cmovae
push
mov
es
loopne
sub
(bad)
lahf
sub
adc
popa
(bad)
mov
adc
jle
lock
fnstenv
repz
or
imul
pop
xchg
imul
stc
sub
add
xor
push
out
sub
and
test
fistp
push
dec
push
outs
pushw
dec
dec
jp
repz
movs
fsub
loopne
mov
daa
mov
adc
xor
mov
out
imul
aaa
jne
jno
inc
retf
aaa
mov
fwait
hlt
add
jns
mov
dec
in
xchg
sti
push
jae
or
cmp
es
jnp
call
(bad)
mov
out
xchg
cmps
retf
push
pop
fld
xchg
test
mov
lea
lahf
(bad)
arpl
stos
pop
fidiv
dec
(bad)
data16
jo
(bad)
aad
fwait
imul
sahf
fidivr
stos
jl
ins
clc
push
push
and
cmp
das
into
lods
sar
aas
nop
movs
loopne
mov
(bad)
mov
dec
inc
into
jmp
xchg
aaa
rcr
dec
push
jae
mov
inc
xchg
inc
out
ja
cli
mov
aas
in
in
hlt
xor
mov
jmp
imul
mov
mov
cs
aad
push
or
xor
push
dec
cmp
dec
out
imul
pop
outs
mov
out
cmp
cmps
(bad)
cmp
pushf
push
test
(bad)
jmp
pop
and
inc
sub
ret
ins
and
lock
jno
jns
in
and
jecxz
adc
fdiv
mov
mov
fcom
ja
out
sbb
lock
aam
in
jnp
fdiv
add
inc
xchg
sti
fbld
inc
repnz
in
pop
xor
sbb
ds
pop
loopne
test
push
dec
aam
out
cmp
mov
ffree
sbb
ror
jne
aam
cmp
aad
ja
sub
js
mov
cmp
bnd
ret
lds
xchg
mov
(bad)
jecxz
fidivr
xor
or
test
mov
xchg
wbinvd
out
jnp
arpl
rcl
or
pop
pop
or
ror
ins
and
dec
cmp
aaa
daa
pop
movs
mov
or
loope
mov
in
mov
and
sub
fs
nop
or
stos
ficomp
or
cmp
mov
das
and
imul
jmp
push
pop
and
xchg
and
rcr
loopne
pop
mov
ror
mov
retf
rcl
mov
ror
dec
add
clc
in
out
fnstcw
adc
in
stos
mov
cmp
movs
arpl
cmp
add
dec
fdivrp
xchg
popf
mov
jmp
jne
push
sti
test
inc
mov
repnz
jo
dec
js
movs
mov
mov
(bad)
and
dec
sbb
int
push
mov
js
movs
dec
sbb
push
cmp
cli
add
sahf
sub
push
sbb
lock
out
scas
jne
dec
pop
xchg
cmps
jmp
in
jecxz
pop
ins
hlt
(bad)
aad
push
call
cmp
pop
and
sub
inc
xchg
add
(bad)
mov
jge
imul
std
pop
or
xlat
movs
pop
test
rcl
test
rol
mov
add
mov
bound
mov
movs
in
cli
popf
rcl
call
xchg
(bad)
xlat
adc
aas
sti
out
add
dec
in
adc
std
or
call
cwde
xor
aas
inc
call
mov
xchg
sub
fisubr
js
(bad)
fcomp
jge
repz
inc
test
pop
and
xor
xor
pop
add
xor
inc
and
sub
and
(bad)
(bad)
loope
jecxz
lds
mov
out
jmp
fdiv
sub
iret
mov
dec
push
out
scas
into
stos
mov
adc
lahf
pop
sub
inc
sub
ins
jp
fnstenv
add
and
ins
loope
mov
sahf
sar
sbb
inc
pop
in
mov
scas
xor
sub
ror
fdivr
sbb
mov
pop
daa
xor
mul
jo
retf
aam
dec
xlat
lds
int
push
scas
in
ss
rol
sahf
xor
inc
(bad)
mov
retf
sar
xor
dec
in
xchg
adc
jno
push
es
xor
adc
jb
(bad)
(bad)
jp
fnstcw
scas
cmp
and
imul
inc
call
inc
iret
mov
cmps
call
mov
or
movs
sbb
pop
push
jl
cmc
mov
or
test
fidivr
mov
lahf
jle
in
pusha
stos
(bad)
cmp
cmp
repnz
in
cli
je
inc
test
mov
sub
inc
or
arpl
sub
retf
mov
outs
mov
call
pop
mov
lock
sub
add
and
mov
jl
inc
(bad)
dec
push
sbb
ret
adc
dec
cli
loop
lea
push
mov
xor
xor
push
cvttps2pi
pop
lea
add
int3
add
hlt
push
adc
popa
mov
das
push
dec
mov
inc
mov
lods
inc
enter
push
fwait
pop
xchg
data16
pusha
cmps
adc
ds
jmp
stc
retf
adc
test
cwde
in
scas
cdq
ret
shr
add
aaa
repz
cmp
add
lahf
mov
jmp
cmp
pop
mov
outs
jns
jbe
es
faddp
mov
iret
ja
fld
xchg
push
dec
(bad)
lock
cld
cdq
jo
adc
fild
fldln2
mov
loop
mov
sbb
stos
in
cli
cmp
enter
push
in
lock
mov
imul
shl
gs
aaa
movs
fld
(bad)
(bad)
in
outs
mov
call
push
call
in
data16
mov
pop
jg
or
and
xlat
sub
mov
push
cmp
pop
sbb
cmps
push
mov
aam
movs
xlat
xor
mov
mov
xchg
int3
jmp
adc
sbb
jns
xchg
mov
push
(bad)
aam
xor
cmp
jb
lods
push
(bad)
test
pop
or
aas
pop
pop
(bad)
lock
jecxz
pop
test
test
out
stos
arpl
imul
lock
add
mov
(bad)
into
push
pop
adc
push
and
mov
mov
fadd
lds
adc
inc
imul
lds
mov
gs
xor
mov
in
mov
mov
push
mov
inc
jnp
std
xchg
into
sub
or
adc
inc
sub
dec
mov
pop
stc
mov
pop
sahf
pop
sub
imul
add
mov
leave
int3
cmp
das
add
pop
mov
test
cmps
mov
pop
cmp
mov
push
hlt
xchg
test
(bad)
(bad)
imul
adc
mov
jnp
je
or
cmps
mov
xchg
or
lods
test
xchg
mov
stc
lock
int
js
rcpps
(bad)
sbb
adc
push
inc
xlat
jno
repz
cmp
leave
(bad)
dec
dec
ret
jmp
sub
mov
xadd
fxch
lahf
jge
push
add
in
enter
fwait
xor
sar
mov
test
cmp
scas
ins
push
pop
mov
iret
inc
and
mov
or
mov
or
mov
jecxz
pop
shl
repz
div
pop
movs
aas
into
daa
mov
test
ret
retf
inc
xchg
in
aad
inc
inc
push
addr16
(bad)
dec
jnp
xlat
sbb
mov
lea
sahf
das
popf
jnp
jge
xlat
mov
test
(bad)
dec
mov
pop
mov
cmc
xchg
adc
and
xlat
mov
push
mov
cmp
or
sub
xchg
popa
es
xchg
movs
ja
int3
inc
js
inc
add
pushf
mov
inc
add
cmp
mov
test
fisub
or
sub
inc
outs
pop
stos
stos
jmp
mov
(bad)
mov
pop
fisubr
mov
loop
das
movs
movs
push
js
int
mov
lds
ret
inc
repz
(bad)
sti
xor
xchg
jg
mov
xor
es
outs
cmc
xor
loopne
mov
push
test
xor
jge
ins
(bad)
ss
sbb
je
cmp
in
sub
nop
rol
out
xchg
inc
loop
pop
lds
jo
movs
cmp
jmp
mov
punpckhdq
sbb
mov
fcom
pop
jge
sub
or
aad
xlat
jae
jb
rol
mov
cmp
pop
dec
mov
lock
mov
push
arpl
xor
mov
or
sbb
push
xchg
adc
movs
dec
ds
and
mov
dec
jae
rcl
enter
or
call
aam
test
mov
out
int
xchg
inc
inc
ins
adc
test
imul
mov
pop
gs
jg
out
inc
nop
xor
or
stos
inc
hlt
aad
pusha
mov
mov
mov
rcl
in
jno
pop
ret
sbb
cs
sbb
iret
xor
dec
cli
pop
push
xor
inc
cmc
cmc
mov
sahf
xor
sbb
ja
sub
stos
sbb
lea
pop
jle
ds
ins
aaa
mov
jno
out
shl
pushf
(bad)
gs
les
(bad)
popf
cmc
(bad)
rcl
sub
mov
shl
push
and
and
jns
ja
(bad)
xor
(bad)
xchg
lock
push
dec
xchg
cmp
cmp
jp
shl
outs
mov
leave
ficomp
dec
loop
ror
jle
jnp
aas
clc
retf
jecxz
mov
cs
mov
adc
dec
fisttp
cmp
fsqrt
vmaxpd
lods
and
loopne
xchg
mov
adc
add
in
add
fdivr
fild
fsubr
mov
test
stos
js
and
test
sbb
xchg
imul
pusha
inc
or
out
daa
sti
push
js
lds
outs
mov
fidivr
xchg
jge
mov
aad
addr16
add
push
mov
fsubr
mov
stc
not
and
cdq
pop
rcr
enter
jg
test
jbe
idiv
int3
mov
inc
test
lds
push
jno
ja
adc
icebp
and
mov
pop
jl
daa
cli
mov
pop
loope
ret
imul
xchg
sti
movs
data16
mov
lods
cmp
sahf
pop
aaa
out
loopne
add
int
cmp
inc
(bad)
std
xchg
adc
jecxz
mov
mov
movs
test
dec
jl
pushf
inc
test
pop
loopne
dec
adc
lea
dec
ret
ja
push
fiadd
mov
dec
push
ins
mov
iret
dec
cli
popa
addr16
les
retf
mov
add
jl
ficomp
fisttp
or
jmp
out
jae
mov
(bad)
xchg
push
fld
xchg
stc
inc
mov
push
aaa
rol
lock
inc
test
pop
fidivr
add
mov
(bad)
popf
dec
jge
xchg
pop
out
xor
sbb
inc
or
mov
ret
fsubr
sub
jl
jns
test
gs
sub
dec
sar
fs
add
mov
lock
inc
popf
inc
movs
mov
sbb
es
es
out
lea
js
lea
and
push
(bad)
or
in
sub
sbb
retf
xchg
mov
bound
jg
and
aas
sbb
pop
inc
dec
push
clc
mov
loope
xlat
sbb
cmp
and
cmp
stc
jecxz
fst
pusha
mov
daa
mov
shl
test
(bad)
adc
scas
mov
cld
adc
lods
fcomp
pop
lock
xor
mov
inc
jno
fsub
icebp
adc
dec
movlps
aas
xchg
rcr
mov
movs
imul
in
ret
mov
mov
xchg
ror
sub
and
xchg
popa
adc
outs
int
inc
add
clc
pop
or
lods
sbb
in
or
ret
scas
popf
ds
fwait
cmps
jmp
out
pop
push
pusha
jp
arpl
(bad)
sti
mov
in
xchg
ds
jge
dec
mov
push
mov
repnz
sbb
cs
sti
mov
xchg
test
pop
popa
cmp
fild
retf
outs
sub
jle
pop
fdivr
daa
scas
(bad)
jae
adc
cli
bound
cli
dec
mov
cwde
movs
and
jae
cmps
or
ret
aam
adc
data16
or
push
out
mov
ret
inc
mov
jg
xor
movs
mov
push
aam
movq
add
inc
jg
ja
fist
mov
loopne
sbb
cmp
ins
pop
xlat
enter
loop
push
popf
sbb
mov
lods
out
pop
js
cwde
jmp
and
xor
adc
dec
xchg
xor
jo
add
inc
cmps
stos
imul
lods
sbb
dec
rol
fs
call
scas
test
push
bound
jge
js
sub
mov
outs
xor
fucom
aaa
(bad)
sbb
jmp
fisttp
sub
imul
jg
sti
xor
fcmovb
jge
lods
rcl
mov
pop
(bad)
std
cmp
mov
dec
pop
arpl
dec
rol
sub
mov
or
add
xchg
dec
sub
(bad)
jg
(bad)
rcl
mov
shl
and
mov
loopne
and
adc
leave
push
mov
out
pop
jno
scas
sub
pop
inc
repnz
test
jno
ret
ret
popa
(bad)
cmps
mov
sub
push
stos
cmp
mov
pop
out
lock
mul
je
xchg
xchg
push
test
mov
xor
retf
int
icebp
mov
pop
movs
xchg
mov
or
enter
(bad)
xchg
xor
dec
loope
jg
mov
sub
imul
aaa
sub
leave
mov
cmps
mov
pop
scas
mov
mov
hlt
and
sbb
and
shr
sbb
imul
and
jae
mov
jl
(bad)
cmp
clc
fisub
out
(bad)
dec
scas
add
pop
ins
push
inc
cmps
fbld
icebp
xchg
pop
shl
shr
ret
adc
jmp
addr16
or
cmp
das
mov
jmp
ja
(bad)
cld
dec
stc
gs
xor
sub
mov
push
out
sbb
es
repnz
sar
inc
test
aam
mov
hlt
mov
stc
leave
mov
inc
ret
xchg
ins
inc
push
add
dec
or
sub
xchg
mov
mov
(bad)
lea
mov
imul
sahf
je
ja
out
lods
fstp
mov
pop
and
ret
adc
mov
(bad)
push
mov
or
mul
lahf
or
ins
fistp
es
inc
dec
xchg
jl
(bad)
or
and
add
inc
retf
rol
dec
mov
jl
nop
rol
cmp
mov
js
(bad)
popa
jg
cmp
add
mov
clc
es
jbe
xor
retf
mov
mov
adc
aam
in
repz
inc
popa
lds
pop
pop
mov
sahf
pop
cmp
jp
mov
test
movs
fst
out
shl
movs
in
fisub
enter
int3
xlat
imul
aam
repnz
fucomi
(bad)
aam
jmp
retf
into
mov
call
in
push
std
call
sti
mov
nop
xchg
stos
std
clc
sbb
nop
mov
test
aam
jmp
repz
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
fst
mov
and
int3
sar
mov
xchg
add
shl
movs
(bad)
sar
mov
(bad)
xlat
jmp
pop
in
lods
test
(bad)
mov
(bad)
sar
movs
(bad)
xlat
(bad)
test
rcl
into
(bad)
add
(bad)
out
mov
nop
aam
or
lods
push
test
arpl
xchg
sub
cmc
cmp
test
xchg
out
jecxz
pop
dec
leave
xchg
sbb
ret
xor
bound
mov
jae
imul
pop
ret
sub
movs
xchg
mov
and
je
mov
and
repnz
in
xchg
aas
xchg
or
mov
xor
rep
mov
into
fcmovnu
mov
movs
xor
aaa
sub
adc
cmc
movs
mov
and
sahf
inc
scas
call
ins
mov
stos
outs
mov
xchg
and
cmp
add
inc
dec
imul
or
dec
cmps
enter
pusha
test
fs
in
lds
pop
xchg
stos
mov
mov
clc
ror
jmp
mov
cwde
scas
ror
xchg
(bad)
sahf
and
stos
push
sub
dec
mov
(bad)
mov
cmc
clc
pop
icebp
xchg
popf
xchg
sahf
inc
std
ret
ds
mov
jge
inc
cld
pushf
arpl
and
xor
mov
sbb
sar
pop
inc
or
sbb
loop
dec
jl
rol
fld
mov
pop
das
pop
jg
sbb
shl
jle
imul
dec
stc
rcr
(bad)
cdq
sbb
fwait
call
mov
xchg
mov
inc
es
mov
sbb
lds
lock
in
(bad)
scas
push
push
sub
shl
sub
pop
retf
enter
imul
repz
jno
fnsave
into
cmps
cs
(bad)
lds
sbb
cdq
mov
and
and
gs
in
sub
jbe
xchg
(bad)
cmp
stc
daa
cmps
mov
push
add
push
aaa
test
adc
enter
arpl
mov
pop
fiadd
and
push
mov
sti
adc
adc
adc
mov
test
jg
mov
inc
imul
mov
shr
aaa
jo
mov
mov
cmp
jmp
pop
int3
dec
fcomp
sbb
dec
shl
pop
ins
push
push
test
xchg
ss
push
jge
mov
push
shr
clc
mov
ror
mov
push
setne
rcr
and
inc
sub
popf
dec
loopne
repz
dec
outs
inc
out
jle
imul
jbe
out
mov
jmp
mov
outs
cmp
mov
mov
jns
js
(bad)
fnstenv
push
shl
inc
bound
(bad)
mov
adc
sub
pop
mov
loope
jnp
loop
mov
mov
lahf
pop
lods
jnp
dec
addr16
pop
aad
scas
or
ds
inc
push
sahf
xchg
adc
xchg
test
pop
shr
mov
jle
jp
cmps
jecxz
xchg
test
and
push
jmp
repnz
popf
pop
mov
sahf
sahf
lea
sbb
add
xchg
lock
inc
jae
(bad)
or
mov
pop
aas
fadd
(bad)
in
jmp
shl
fistp
pop
mov
and
cmp
and
into
pop
jmp
repz
inc
xor
frstor
mov
ror
sub
jmp
jno
in
out
pushf
xchg
fild
mov
add
dec
or
hlt
fistp
mov
fwait
xor
jl
stc
mov
mov
out
xchg
test
mov
push
fcomp
mov
cwde
jo
pop
push
dec
sbb
sub
jecxz
mov
fs
in
xlat
fidivr
xchg
std
push
cmp
push
jnp
xor
jnp
jmp
out
mov
into
xlat
fidiv
in
xor
inc
mov
push
into
scas
dec
jbe
shl
into
xlat
and
bound
rcr
movs
enter
(bad)
sar
mov
xlat
idiv
or
in
sbb
cmc
pushf
push
outs
add
sar
lahf
(bad)
(bad)
ss
shr
outs
sti
pop
or
out
adc
jecxz
mov
xchg
fwait
mov
loop
popf
sar
pop
adc
push
xchg
jb
mov
hlt
push
adc
jle
sti
aam
push
pop
jae
jo
jno
pop
nop
add
adc
or
xchg
mov
jmp
add
cmc
sbb
das
lea
mov
xchg
dec
lahf
in
(bad)
lock
ds
jmp
hlt
lock
dec
push
popa
nop
lods
jmp
test
adc
movs
iret
sbb
dec
add
scas
mov
or
psadbw
aas
jno
nop
jmp
jo
rol
movs
inc
into
out
push
sub
(bad)
mov
mov
popf
ret
push
xor
adc
inc
rol
pop
cmp
ror
pop
(bad)
in
not
cld
pop
mov
int3
repz
mov
(bad)
jmp
sbb
neg
(bad)
leave
into
lds
or
adc
ja
inc
push
test
pop
xor
mov
sub
fs
pop
dec
stos
inc
sbb
or
cli
loop
ret
into
cmp
lock
or
test
adc
rol
call
xor
movs
jne
ja
jg
fwait
mov
outs
xchg
test
scas
dec
dec
jnp
pop
and
adc
push
fsubr
(bad)
mov
repnz
in
movs
cmp
fdivr
mov
fs
call
lods
jno
dec
mov
fdiv
retf
dec
sar
add
sbb
scas
xor
or
jbe
adc
cmp
inc
and
(bad)
cmps
bound
std
addr16
push
mov
sahf
cdq
and
movs
in
rcr
push
mov
jl
lahf
jecxz
cwde
scas
inc
je
mov
outs
je
imul
sbb
or
or
repz
call
dec
fs
dec
mov
mov
adc
push
inc
xor
rcr
popf
test
dec
sub
lea
mov
mov
ins
mov
push
sub
mov
sub
mov
gs
inc
xor
pop
add
jno
adc
fbld
or
shl
push
sbb
push
loopne
pop
scas
ret
xchg
or
and
xchg
loopne
cld
inc
jbe
jp
hlt
add
ret
jns
mov
mov
mov
xchg
adc
pop
fwait
(bad)
call
cmps
mov
fwait
cmc
test
shr
or
mov
inc
in
pop
add
sub
xor
add
mov
ss
mov
int
push
adc
mov
or
xchg
outs
mov
(bad)
cmp
(bad)
loop
nop
push
cmp
sub
dec
xlat
pushf
mov
dec
movs
or
inc
bound
pop
sbb
das
pop
test
push
cmps
stos
stc
cdq
jecxz
add
mov
push
lahf
sub
sub
sbb
or
jmp
fs
rcr
mov
ret
adc
adc
iretw
and
cld
ret
std
scas
push
in
iret
test
push
and
inc
aaa
fmul
aaa
push
(bad)
scas
xchg
popa
outs
into
out
std
mov
repz
(bad)
std
cmp
mov
add
es
xchg
mov
inc
cmp
in
imul
pop
mov
rol
xchg
enter
data16
or
repnz
mov
ja
gs
cmp
mov
mov
cmps
(bad)
shr
sbb
fdivp
pusha
test
cs
scas
mul
xor
int
into
push
xor
loopne
dec
mov
sti
push
xchg
push
push
and
jno
or
repz
mov
jge
mov
or
outs
fistp
(bad)
jbe
lahf
or
jb
xchg
dec
xchg
inc
std
retf
and
pop
imul
mov
cmp
inc
or
mov
pop
jp
cmp
in
fsubr
cmp
xchg
jns
xor
stos
sar
stos
mov
sub
jb
push
pop
idiv
cmps
cmp
ins
loopne
int
jmp
sbb
pushf
js
stc
xor
loope
rol
in
mov
(bad)
fwait
sbb
and
rol
cmps
xchg
adc
movs
std
ds
int
les
stc
lods
mov
leave
mov
pop
cmp
mov
push
and
not
aad
jbe
loope
scas
xor
push
push
js
inc
jo
or
push
repnz
mov
rcr
add
push
loop
imul
lock
outs
cmp
pop
xchg
sbb
dec
jp
cwde
cmp
les
loope
imul
in
ss
mov
or
stos
and
out
inc
rcr
add
(bad)
jnp
stos
shr
int
hlt
cmp
fnstenv
je
xor
ins
sbb
and
iret
call
mov
push
push
mov
dec
inc
mov
scas
retf
mov
cmp
push
test
lds
xchg
cli
xchg
sub
pusha
xor
test
dec
fidivr
cmp
repz
cs
in
fisub
shr
lods
add
(bad)
lods
rcl
movs
enter
(bad)
xlat
cli
mov
aam
cmp
dec
inc
ds
xchg
pop
imul
inc
pop
stos
pop
les
fcompp
enter
rcl
jo
mov
xor
cwde
inc
jmp
adc
(bad)
xchg
sbb
jmp
mov
cmc
ror
jns
scas
sbb
jo
fstp
push
ds
mov
not
loopne
xchg
push
aam
out
push
mov
dec
jo
outs
and
es
push
inc
pop
inc
aam
mov
bound
push
(bad)
mov
shr
test
ss
aaa
mov
call
ss
jl
ror
imul
jmp
ss
pusha
sub
dec
xchg
xchg
push
(bad)
xchg
imul
(bad)
cmc
dec
dec
or
push
shl
xchg
mov
bswap
movs
gs
scas
retf
jns
jge
push
int3
daa
pop
pminub
push
mov
adc
lock
pop
cvtps2pd
xlat
sbb
out
add
xabort
rol
icebp
inc
stos
in
out
fucomi
pop
in
(bad)
and
test
ret
into
inc
pop
push
xchg
lods
pop
add
pusha
and
xchg
retf
call
repnz
or
retf
mov
xchg
daa
pop
out
push
je
jmp
scas
mov
aas
test
dec
rcl
cld
shr
jo
data16
div
sbb
mov
adc
scas
push
movs
add
jno
in
data16
scas
lods
outs
adc
and
jmp
cmp
cmps
cmp
dec
rcl
sub
xchg
xchg
xchg
sbb
pop
jg
fwait
stc
jne
xor
pop
jge
data16
mov
ss
dec
(bad)
test
sbb
mov
std
repz
popa
aad
jecxz
out
mov
idiv
or
lds
xchg
inc
add
aas
fisub
pop
loop
push
push
pop
lock
dec
adc
jo
xor
arpl
cdq
push
mov
sub
lock
test
xor
cmp
jl
in
cmc
sbb
push
(bad)
rcl
mov
jg
xor
fistp
jnp
mov
or
jnp
xchg
push
pop
pop
jne
rcr
out
ins
adc
add
adc
rcr
mov
push
pop
sbb
adc
jae
in
sbb
lea
and
pop
and
dec
jbe
es
add
add
movs
xor
mov
fst
shl
fisttp
loope
mov
pusha
or
sub
ins
fiadd
pop
push
aam
xor
imul
data16
das
pusha
pop
sub
add
inc
dec
dec
adc
cmp
jae
sbb
mov
fwait
jmp
push
lahf
cmp
mov
push
jmp
jg
aas
push
xor
and
(bad)
out
push
pusha
xchg
fsub
mov
lea
dec
mov
inc
mov
ror
sbb
out
push
xchg
call
cmps
add
retf
mov
jo
mov
xchg
jne
cmp
fdivr
movs
rol
retf
jmp
jp
(bad)
cli
sub
pop
push
xchg
jnp
adc
rol
dec
mov
dec
sub
in
xor
(bad)
aas
pop
popa
or
lock
movs
xor
or
ror
and
shr
xchg
aam
xor
sbb
adc
or
mov
cmp
push
push
or
cmp
mov
rcr
jmp
jns
(bad)
inc
cmp
jle
popf
aad
in
in
cmc
dec
dec
ret
add
test
xchg
lahf
mov
xor
inc
aas
sub
xchg
or
std
dec
popf
scas
pop
xchg
loopne
and
sub
rcl
hlt
aaa
mov
neg
jg
loopne
inc
test
jmp
sti
lahf
inc
xor
jle
cmp
aas
add
es
pop
mov
push
and
(bad)
pop
adc
gs
std
sub
rcl
mov
(bad)
(bad)
xlat
mul
add
cli
xor
(bad)
jnp
xchg
adc
and
(bad)
dec
push
pushf
add
shl
jmp
push
push
sub
sbb
inc
sbb
cmp
cmp
call
loop
and
ret
cmps
(bad)
test
jbe
and
in
dec
lock
jecxz
push
xor
stos
fsub
cmp
int
sub
fdiv
enter
ja
lods
mov
test
lock
or
mov
jno
dec
test
jle
sub
fcomip
cmp
sbb
add
cmp
or
jno
mov
mov
fisubr
gs
repnz
sbb
cmp
xchg
add
xchg
mov
sti
hlt
aaa
ins
cdq
adc
cmp
sub
movs
push
xchg
les
sbb
aam
jbe
sbb
xchg
xor
xchg
mov
or
pusha
loopne
sbb
outs
adc
mov
(bad)
xchg
push
push
das
mov
mov
adc
inc
pop
loope
jmp
dec
add
adc
inc
mov
fwait
mul
sub
repz
push
push
dec
mov
cmp
or
addr16
cmp
sti
push
inc
cmp
add
cmp
(bad)
out
movs
xor
sub
out
ret
or
and
into
jns
and
sub
call
push
pusha
dec
cmps
jle
cld
cdq
or
adc
lds
sti
fs
dec
fsub
cmc
retf
add
xor
loop
pop
add
mov
cmp
repz
sti
sbb
and
xchg
or
cmps
repnz
sar
xchg
xchg
popf
or
xor
mov
jmp
test
or
dec
loopne
clc
es
jl
jae
sbb
mov
movzx
mov
or
jp
mov
pop
mov
jp
fdivr
sbb
pop
pushf
pop
and
mov
pop
fmul
mov
fstp
mov
push
out
(bad)
jns
fs
add
xchg
fcmove
pop
pop
sbb
cmp
mov
dec
dec
push
das
xchg
lea
loope
push
adc
cmp
mov
and
mov
xchg
repz
clc
jge
in
enter
mov
fidiv
xchg
xlat
add
stos
repz
shl
(bad)
cmp
in
hlt
gs
xor
pop
ror
movaps
or
sub
scas
pop
lods
xchg
loopne
nop
or
mov
rcr
scas
loop
loope
sbb
fdivr
aaa
and
adc
push
out
inc
out
mov
mov
sahf
jbe
dec
stos
xchg
stos
push
adc
push
jns
xchg
popa
cs
test
mov
mov
lds
push
adc
cmps
aad
mov
aad
scas
add
bound
xor
jo
jmp
xchg
je
sub
jle
add
nop
pop
inc
push
mov
daa
xchg
adc
cmp
cmp
push
add
xchg
cmps
xchg
ret
data16
adc
(bad)
jno
xchg
jbe
adc
out
cld
out
jne
sahf
sub
inc
sub
ret
imul
push
or
add
pop
cmp
dec
or
push
jnp
mov
push
je
and
int
jge
aam
sahf
aaa
mov
mov
enter
sbb
xchg
mov
pop
dec
(bad)
push
and
ins
stos
mov
push
pop
push
int3
cmp
jl
or
pop
or
out
(bad)
aaa
int
push
sbb
mov
lods
pushf
inc
sbb
adc
hlt
shr
mov
and
data16
cld
jb
push
mov
sbb
out
pop
std
cmp
ja
pusha
movs
sbb
ins
and
cmp
or
mul
jb
test
jp
add
sbb
jmp
and
ror
cmp
pop
gs
jmp
cwde
hlt
(bad)
call
retf
and
adc
jle
(bad)
in
cmp
bound
(bad)
inc
into
pop
std
or
pop
or
jle
or
mov
push
les
add
fsubr
loopne
ror
add
out
adc
mov
xchg
mov
fwait
inc
mov
sahf
aad
inc
(bad)
push
adc
adc
xchg
test
clc
sahf
cli
fild
add
(bad)
mov
jo
dec
pop
data16
dec
sbb
or
lods
shr
mov
fucomi
movs
aam
jmp
xlat
out
mov
dec
inc
cli
test
or
mov
lods
inc
pop
and
push
sub
arpl
push
test
cmp
push
dec
sub
jbe
add
ds
inc
ss
sub
jmp
mov
std
add
imul
jl
jo
mov
and
and
shr
test
inc
mov
mov
adc
je
movs
and
add
pushf
je
(bad)
shl
retf
mov
dec
xchg
loop
jle
xchg
icebp
ret
dec
xor
out
dec
add
cld
out
and
push
xchg
dec
or
(bad)
fmul
es
lea
xchg
bound
fwait
mov
mul
add
rol
ficomp
cmp
lods
sub
or
dec
xchg
retf
ror
cmp
pop
lods
pushf
mov
inc
mov
cwde
cli
std
stc
sahf
push
jae
pop
cmp
shr
adc
or
dec
jne
addr16
jle
mov
or
pop
je
pop
sar
sbb
cwde
pop
sbb
iret
push
add
ja
jno
shl
dec
fcomp
sub
add
sub
mov
pop
ds
jne
push
pop
dec
cdq
(bad)
popa
mov
mov
imul
imul
jmp
pop
in
stos
lods
mov
jp
ds
in
mov
into
pop
outs
cmp
movs
cmps
sbb
inc
sbb
fst
outs
icebp
xor
rcr
sub
pop
jns
mov
inc
mov
sbb
add
fcomip
sub
jl
and
xchg
inc
retf
je
jg
out
(bad)
or
nop
mov
mov
mov
xchg
repz
sti
add
(bad)
cmp
scas
mov
mov
sbb
add
push
pop
dec
push
or
pop
pop
or
mov
lock
add
or
test
jge
mov
inc
cdq
loopne
xor
cmp
sbb
sahf
aad
loop
icebp
aaa
jb
cmps
cmc
call
cmp
adc
lods
mov
inc
dec
push
(bad)
adc
sbb
out
push
push
retf
dec
cmp
nop
adc
loop
xor
cs
xchg
mov
xor
cmp
cmp
xchg
pusha
add
retf
mov
inc
fs
ins
mov
adc
jmp
sub
rol
dec
bound
nop
adc
sahf
cmp
mov
cli
mov
sbb
es
jb
push
loopne
inc
dec
xor
dec
mov
push
inc
jo
nop
sbb
sub
adc
dec
sub
and
sub
and
lea
pop
test
repnz
add
push
imul
mov
jg
adc
out
cmovbe
std
clc
loop
into
bnd
jb
popf
jecxz
or
in
nop
iret
pop
or
mov
cdq
cdq
xor
inc
stc
push
mov
cmp
xchg
clc
shl
out
outs
mov
ss
test
pop
pop
cmp
mov
push
rcr
dec
inc
imul
stc
pop
ss
sub
sbb
sbb
mov
add
in
sbb
xor
es
shr
out
xchg
or
mov
xchg
adc
add
sub
dec
push
lds
and
dec
inc
movs
push
fdivr
xchg
(bad)
lock
jae
adc
push
inc
pop
sbb
sbb
and
and
jae
bound
xchg
loopne
xor
popa
mov
popa
nop
or
dec
mov
aam
pushf
ret
aas
ret
not
sbb
sub
and
cmp
(bad)
push
mov
iret
fwait
aam
cwde
(bad)
push
xchg
pop
pop
cmps
sub
ret
xor
adc
ss
and
mov
cmp
retf
aam
push
sbb
sub
(bad)
cmps
fcomp
sbb
push
repz
arpl
lock
dec
push
inc
xor
ret
push
imul
retf
scas
jne
sbb
jg
push
pop
mov
push
jns
(bad)
rcr
(bad)
fld
and
pop
sub
pop
pop
ja
ret
and
fcom
inc
pop
stc
xor
daa
pop
push
jne
xchg
sbb
(bad)
lock
jecxz
adc
jae
nop
mov
adc
mov
not
ja
xchg
ins
stos
or
sub
(bad)
pop
xchg
jno
stos
and
jecxz
xchg
std
imul
(bad)
xchg
push
pop
adc
inc
pop
push
add
cmp
cmp
sti
pop
mov
xchg
dec
jecxz
add
jg
inc
cdq
push
inc
jnp
call
xchg
mov
mov
jmp
sahf
stc
test
cmp
popf
and
popf
fst
and
xlat
das
mov
cdq
adc
add
dec
movs
mov
icebp
fcomp
xlat
adc
sub
pop
adc
xchg
in
loop
fistp
sbb
inc
xor
aaa
pop
icebp
hlt
(bad)
push
call
and
and
fs
xchg
call
xor
add
mov
rol
ds
xor
into
mov
cmp
xchg
popf
imul
std
rep
dec
out
or
cmp
jg
lods
dec
add
sbb
stos
retf
sar
jae
mov
pop
not
rcl
jmp
push
repz
scas
sub
inc
int3
imul
aad
jmp
adc
movs
sub
ret
js
outs
enter
jp
adc
pop
add
jp
out
cmp
repnz
dec
and
add
pop
cmp
xchg
mov
in
dec
mov
dec
add
jne
outs
mov
test
mov
mov
cmp
and
aam
mov
(bad)
in
sub
clc
push
mov
nop
inc
add
lock
sbb
adc
mov
stc
std
adc
or
xchg
mov
cmp
sbb
enter
inc
ficomp
icebp
test
popa
inc
lock
sub
std
cs
or
push
ret
cld
xchg
lea
mov
cmp
fisubr
pop
jl
ins
xchg
inc
cmps
fidiv
sbb
iret
cmp
icebp
dec
ja
push
movs
enter
mov
and
jbe
adc
(bad)
dec
leave
ret
loop
outs
pop
push
lods
pop
out
sbb
ret
outs
xor
fcomi
sub
xlat
cmc
mov
outs
sub
mov
push
in
push
movs
lock
add
mov
pop
aaa
and
jmp
push
dec
sub
iret
jmp
and
push
(bad)
dec
lea
sub
pop
xchg
pop
les
sub
mov
add
out
cmps
pop
daa
in
xlat
sbb
or
sbb
(bad)
pop
cmps
pop
(bad)
or
js
repnz
cmp
out
and
mov
sbb
js
mul
inc
or
dec
push
mov
sub
sbb
lods
inc
dec
jle
out
sub
(bad)
mov
and
adc
pop
mov
cs
sub
add
call
movs
adc
mov
fcomp
popa
ins
xchg
fs
pop
es
cld
cmps
dec
mov
cmps
inc
mov
or
inc
inc
nop
fist
div
cmps
clc
lar
mov
iret
jecxz
cmps
test
mov
or
dec
xor
mov
iret
cmp
call
pop
push
pusha
and
xchg
mov
and
push
lds
or
movs
enter
sub
pop
scas
stc
add
ins
mov
jne
dec
sub
jne
loop
and
rcl
xlat
stos
std
sub
aad
push
or
gs
jl
and
aas
or
xchg
movs
mov
(bad)
cmp
(bad)
xchg
cld
outs
cwde
shr
cmp
retf
jmp
xor
rcr
call
out
fst
in
push
mov
sbb
or
or
sbb
(bad)
iret
mov
and
movs
push
movs
or
unpckhps
and
mov
popa
cmps
inc
movs
cmp
jle
fcmovnb
push
cmp
lds
(bad)
xchg
pop
cmp
out
add
in
(bad)
and
mov
outs
add
cmp
adc
bound
dec
pop
retf
dec
lods
ss
mov
(bad)
std
sbb
scas
add
jmp
pop
jnp
inc
ror
or
inc
sub
nop
in
popa
ja
cmp
int
cs
(bad)
cmps
sub
gs
(bad)
push
rcl
jb
push
sbb
sar
xlat
push
(bad)
int3
cli
jns
adc
fmul
repnz
xchg
xchg
cmp
dec
xor
cmp
mov
fidiv
add
jle
test
popf
add
pushf
add
xchg
and
scas
lods
sbb
push
dec
mov
loop
dec
lock
lds
mov
inc
jbe
dec
into
push
mov
pop
ins
int
fwait
jmp
test
js
ror
fld
jp
cmps
and
lds
push
or
sub
push
fst
hlt
inc
xchg
test
cdq
mov
pop
add
dec
push
dec
push
leave
(bad)
cli
je
mov
mov
retf
es
jg
add
sbb
sbb
pop
xchg
mov
add
out
xlat
movhps
jmp
loop
xor
das
push
iret
mov
clc
sbb
lock
mov
int
pop
mov
fwait
popf
dec
clc
xchg
(bad)
aas
add
mov
dec
or
mov
or
js
mov
sub
jle
(bad)
mov
call
jo
cmp
xchg
push
and
or
leave
js
push
in
and
outs
aas
sbb
sub
les
sti
sbb
jmp
push
clc
xchg
xchg
jmp
pop
je
xchg
pop
pop
push
dec
out
pop
jecxz
cmp
pop
xor
cs
into
mov
pop
xchg
push
stc
rcr
(bad)
sub
jmp
sub
jecxz
dec
sub
mov
sbb
adc
mov
(bad)
lahf
xchg
(bad)
fsubr
pop
cmp
test
mov
loopne
push
pop
mov
add
imul
jno
mov
movs
add
nop
sub
jl
enter
pop
(bad)
arpl
movzx
ja
pop
add
lods
xor
sub
adc
and
rcr
adc
and
nop
mov
sbb
mov
and
stc
pop
les
dec
sahf
push
ins
mov
enter
mov
sub
sub
in
sbb
sub
mov
daa
repz
xor
or
inc
pusha
(bad)
lds
dec
mov
stos
mov
es
dec
xchg
(bad)
les
pop
dec
movs
sbb
test
cli
pop
(bad)
add
mov
nop
mov
pop
stc
xchg
xchg
nop
call
enter
out
xchg
sti
dec
mov
(bad)
pop
icebp
cmp
enter
out
add
mov
out
or
push
adc
add
cmp
mov
fld
int
jmp
or
mov
leave
iret
sbb
jns
outs
xor
popf
lds
scas
ins
lock
mov
mov
std
jo
push
adc
ja
ins
jae
(bad)
imul
push
ins
sub
retf
arpl
fldenv
jecxz
je
pop
mov
sbb
pop
pusha
les
arpl
sbb
test
pushf
pushf
dec
push
cmps
rol
test
mov
mov
push
iret
lock
pop
test
sar
ds
sub
out
(bad)
(bad)
xchg
or
push
in
retf
mov
sbb
adc
cmp
and
mov
into
inc
movs
xor
pop
push
mov
and
jmp
push
repnz
cs
mov
sub
xor
push
aad
xor
push
or
mov
sbb
cmp
sbb
repnz
test
mov
cmp
push
mov
add
stos
inc
rcr
cmp
and
push
xor
imul
stc
aad
mov
fwait
push
dec
in
cld
imul
dec
dec
pop
xor
test
movs
or
mov
jo
inc
dec
mov
in
shr
push
pop
and
jne
sbb
lock
fdiv
jb
sahf
add
arpl
xor
cdq
mov
dec
mov
and
pop
fbstp
push
sahf
fild
mov
jl
js
imul
rol
lahf
add
out
test
fmulp
(bad)
outs
sbb
mov
add
ins
cmc
cmp
out
jno
push
std
shl
loop
aaa
add
adc
xchg
or
push
and
call
pop
fdivp
sub
add
repnz
inc
and
stos
sub
iret
inc
mov
es
mov
add
cmp
cli
not
sub
sbb
in
jno
pop
and
and
test
pop
repz
aad
in
dec
xor
xchg
stos
lock
push
jb
push
and
hlt
aas
and
cmp
icebp
jns
call
aaa
cmps
sahf
jmp
shr
inc
pop
xchg
xor
push
imul
fisubr
mov
popf
jp
pop
outs
cwde
mov
inc
push
mov
xchg
in
adc
cmp
pop
icebp
popa
out
fcomp
mov
push
adc
ins
leave
out
std
sbb
stos
enter
es
adc
sub
aad
pop
sbb
pushw
jb
mov
fucomip
out
cld
sub
jp
dec
xor
mov
mov
adc
mov
pop
push
es
loope
adc
ret
je
into
es
inc
xchg
sbb
daa
jg
and
pop
out
in
jnp
sub
in
push
aas
shr
js
retf
es
iret
xor
or
(bad)
push
and
dec
xchg
cmps
(bad)
hlt
mov
xor
sub
hlt
pop
ret
and
or
jl
or
adc
xor
pop
mov
add
adc
mov
dec
push
and
and
in
rcr
sub
sub
imul
psubd
or
dec
das
pop
fxch
and
jns
add
int3
es
mov
push
hlt
and
jmp
scas
pop
xchg
fistp
cld
pop
test
enter
enter
(bad)
sar
mov
add
mov
mov
add
in
cli
ffree
push
jp
imul
inc
ret
xor
cwde
inc
in
xchg
sbb
pop
popf
jmp
pusha
adc
xchg
mov
test
sbb
shl
adc
add
fwait
push
add
in
and
pushf
mov
and
pop
adc
bound
cmp
push
movs
lea
cmp
out
xor
or
fadd
xchg
rcl
nop
add
fild
dec
(bad)
jne
call
adc
adc
pop
xchg
cmps
in
loopne
sahf
test
sbb
push
inc
test
ins
sbb
jmp
push
dec
mov
or
addr16
jg
ss
cmc
mov
add
sub
inc
mov
xchg
mov
out
mov
imul
mov
dec
pop
and
popa
or
adc
pushf
xor
xchg
sub
pop
xchg
add
hlt
ins
sbb
sub
jbe
and
in
dec
ins
jo
sti
lds
outs
mov
sub
or
icebp
or
test
jnp
push
loopne
inc
sahf
repnz
inc
xchg
(bad)
fnstsw
xchg
or
out
xchg
lods
pushf
adc
mov
mov
inc
add
shl
sub
test
retf
pushf
stc
repnz
add
test
xchg
data16
cli
dec
sbb
cmp
jg
inc
scas
xchg
mov
mov
ror
out
mov
push
call
idiv
cmp
xchg
mov
dec
and
aas
mov
test
jo
ret
cmps
outs
shl
pop
xchg
mov
dec
and
stc
shl
mov
push
test
push
lods
lea
inc
cmc
mul
mov
in
dec
lods
in
ss
fdivr
pop
js
pusha
retf
idiv
sar
popa
add
jne
lods
mov
(bad)
cmps
loope
jle
iret
lahf
adc
(bad)
int
inc
loope
mov
(bad)
jmp
sar
aam
imul
stc
loopne
pop
sahf
add
mov
xchg
outs
or
std
mov
dec
adc
push
out
ret
stos
xor
xor
movs
adc
fs
jnp
push
mov
sbb
pop
test
sti
pop
pop
xchg
inc
or
inc
jno
xchg
adc
mov
and
(bad)
iret
imul
inc
ins
and
(bad)
sar
inc
push
cmp
out
pop
adc
js
sbb
out
sub
push
repz
push
in
jge
mov
sbb
sub
add
(bad)
out
out
and
jnp
sbb
loope
repz
lea
push
inc
inc
sbb
pop
in
pusha
mov
jmp
add
enter
popa
test
sub
mov
mov
or
mov
inc
loopne
and
mov
mov
inc
in
inc
stos
mov
in
jns
inc
aam
sti
scas
out
xchg
arpl
int3
(bad)
out
xchg
lods
add
ficomp
call
out
jecxz
dec
or
stos
jns
sbb
adc
movs
daa
cmc
jns
stc
js
test
sbb
or
jne
mov
push
mov
sbb
mov
adc
dec
daa
cmp
(bad)
pop
adc
sub
pop
or
aad
hlt
mov
sub
ja
push
pop
out
xchg
scas
je
call
adc
mov
mov
call
fbstp
xchg
sar
sub
pop
data16
leave
adc
ins
dec
lods
push
leave
popf
js
mov
fld
pushf
push
arpl
cmp
mov
inc
sbb
in
xchg
out
pop
jnp
aad
sbb
add
popa
movs
mov
aaa
sub
test
and
mov
dec
in
std
cmc
mov
out
sbb
sub
fsubrp
push
cmps
push
lods
adc
inc
push
xchg
mov
xchg
xlat
cmp
xor
or
and
jae
xor
xor
xor
add
sub
dec
dec
jmp
shl
lds
mov
sar
test
jge
jo
out
add
aam
sbb
dec
xor
mov
test
js
mov
clc
lods
push
mov
xchg
dec
mov
rol
pop
movs
adc
mov
cdq
add
pop
dec
movs
call
out
jle
or
push
xchg
in
sar
add
adc
xchg
pop
or
call
into
pop
mov
and
lds
lods
addr16
mov
dec
push
push
and
mov
imul
(bad)
imul
data16
xchg
mul
add
jle
movs
call
jmp
mov
lods
loop
cmp
xor
or
mov
ins
or
movq
pop
int
mov
sar
in
mov
xor
aaa
cld
std
adc
mov
stos
neg
adc
aam
out
inc
sbb
adc
cmp
xor
adc
xor
dec
shr
inc
shl
ficom
bound
sbb
mov
mov
add
mov
(bad)
pop
lock
adc
jno
fcmovb
ds
sub
sub
mov
dec
push
add
sbb
rcr
dec
arpl
add
std
pop
call
(bad)
cmps
mov
rol
pop
jne
inc
mov
(bad)
cmp
or
test
mov
pop
adc
out
outs
into
jge
loopne
into
push
pop
mov
out
mov
ds
dec
cmp
add
inc
loopne
lods
dec
dec
into
push
push
jmp
add
xchg
bound
push
mov
aad
push
mov
adc
test
pop
aas
mov
stos
daa
pop
cli
mov
and
out
std
pop
scas
push
xor
je
jns
not
ins
ret
outs
fistp
xchg
in
ret
aaa
add
pop
push
enter
js
or
sub
dec
pop
in
ror
dec
out
pop
mov
push
enter
xor
lea
iret
xchg
xchg
fistp
add
(bad)
jnp
in
push
stc
xor
jo
and
pop
push
in
jbe
fcom
neg
dec
pop
rol
dec
imul
push
xchg
scas
hlt
out
call
mov
pop
std
fld
mov
mov
paddd
inc
ror
xchg
cmp
xchg
xor
test
adc
sbb
and
push
int3
fld
(bad)
data16
xchg
and
mov
xchg
inc
repz
sub
inc
(bad)
repnz
or
(bad)
fmul
leave
(bad)
sub
adc
sahf
shl
mov
mov
ss
jb
fsub
retf
fnstcw
xchg
lea
push
fs
lods
rcr
stc
mul
(bad)
add
push
mov
int
ret
ins
dec
loop
pushf
sub
inc
pop
(bad)
fild
jbe
inc
sub
das
mov
push
mov
push
mov
and
stc
rcr
stc
cmp
jmp
push
in
or
mov
mov
jg
jno
aaa
in
push
rol
push
pushf
je
dec
iret
lahf
call
pop
push
ror
jge
and
stos
jne
push
adc
cld
hlt
sub
iret
sbb
loopne
and
mov
cmps
daa
push
lock
inc
ss
mov
callw
loop
mov
xchg
xchg
shl
popf
imul
or
aam
fst
fdivr
jmp
xchg
(bad)
sbb
repnz
push
add
icebp
sbb
cdq
mov
inc
dec
adc
adc
pop
jmp
bound
pop
sbb
ret
inc
inc
imul
add
jne
xchg
add
adc
aam
push
pop
cmp
clc
mov
jo
xchg
or
fcomp
add
adc
popa
cwde
add
sbb
push
adc
das
and
test
inc
std
xchg
das
xlat
jg
ret
pop
fidivr
(bad)
jl
sbb
mov
scas
mov
jmp
pop
mov
leave
xchg
ret
imul
push
mov
outs
xchg
(bad)
fmul
aaa
jl
stc
int3
lods
aad
leave
inc
jecxz
sahf
mov
fwait
mov
es
dec
add
lods
movs
push
aad
neg
cmp
ret
dec
xor
fisub
pop
sub
fbld
cwde
test
cs
cli
xchg
out
push
data16
arpl
addr16
jge
call
(bad)
lock
add
out
and
add
push
arpl
jmp
scas
pushf
imul
or
es
push
repnz
es
or
sbb
hlt
xor
mov
dec
js
pop
xchg
fild
loopne
movs
imul
push
loop
call
xor
call
loop
or
mov
movs
inc
mov
jge
lods
xor
xor
in
fwait
outs
aas
mov
mov
inc
sti
xchg
pop
xchg
push
gs
or
ror
jae
jnp
jb
xor
rol
arpl
sar
pop
or
addr16
test
loopne
xlat
out
jmp
jg
push
sbb
pop
push
mov
xchg
adc
inc
shl
das
inc
cli
jnp
fisttp
xchg
inc
(bad)
je
rol
jnp
das
nop
adc
or
lods
retf
ja
out
xlat
xor
aaa
(bad)
pop
adc
enter
(bad)
sar
mov
fcmovnu
das
pop
xchg
lea
loopne
mov
mov
scas
ins
mov
outs
mov
jae
sub
mov
daa
add
push
dec
fst
adc
bound
aas
mov
push
xchg
out
lds
mov
sub
in
push
mov
mov
ror
ret
popa
sub
lahf
das
push
enter
pushf
xchg
and
in
retf
pop
push
adc
pop
sti
mov
fdiv
(bad)
in
mov
mov
inc
mov
das
inc
adc
aam
outs
rcr
push
fld
pop
cmp
aaa
leave
mov
push
pop
ins
ins
scas
jmp
push
rcr
cmp
mov
enter
(bad)
sar
loope
xlat
(bad)
loopne
push
cli
loope
xchg
jle
rcl
test
nop
std
mov
cmp
xor
xchg
retf
repnz
arpl
cmps
inc
jmp
popa
arpl
push
adc
or
and
add
xchg
cdq
sub
lds
adc
retf
adc
inc
bound
into
in
cmc
xor
mov
les
sbb
arpl
in
mov
adc
mov
ds
adc
cmp
aaa
daa
push
lock
cmps
mov
jne
adc
fld
push
lea
jle
sub
stos
loopne
jbe
repz
cmp
fimul
pop
mul
cmc
xchg
dec
fs
or
inc
(bad)
retf
cmps
mov
sbb
fisttp
fnsave
int
xchg
or
js
mov
jb
js
repnz
and
in
and
ss
cmp
pop
sub
loop
(bad)
enter
scas
fwait
enter
stos
fild
hlt
aas
retf
xchg
jg
gs
dec
int3
das
and
xchg
inc
pop
stc
pop
dec
lods
lock
call
dec
and
xchg
mov
push
aas
loop
(bad)
out
mov
nop
pushf
ins
(bad)
sub
loope
(bad)
sbb
movs
push
shl
mov
mov
mov
cmp
leave
fsub
or
cmp
sahf
inc
xor
loopne
cld
xchg
push
jg
mov
cs
js
pop
mov
jne
add
xchg
lea
mov
sub
not
js
fsubr
(bad)
out
jge
sub
je
inc
aaa
(bad)
push
xchg
in
push
xchg
sub
psrlq
loopne
movs
inc
mov
sbb
push
push
icebp
ins
mov
clc
clc
dec
mov
xor
pop
xor
add
shl
add
jae
in
cmp
rcpps
(bad)
cmp
mov
(bad)
sub
mov
rol
push
xchg
xlat
ins
xchg
cmp
cmp
ficomp
adc
xor
pop
hlt
icebp
inc
nop
das
not
xchg
mov
push
ins
push
addr16
aad
cmp
cmp
xchg
mov
out
jae
jnp
inc
fldenv
sbb
rcl
int3
ja
lahf
imul
gs
jne
mov
and
(bad)
sub
mov
(bad)
ror
ins
xor
inc
or
shr
add
adc
(bad)
lock
pop
lds
adc
lea
sub
xor
push
out
fdivr
(bad)
pop
xor
xor
adc
data16
repz
shl
movs
jmp
or
xchg
adc
jp
ret
lahf
rcr
dec
hlt
xor
jl
xlat
add
out
and
icebp
out
dec
cmp
cmp
sub
mov
movs
mov
je
jne
cmp
jo
pop
cmp
scas
ret
pop
popa
imul
cmp
and
adc
inc
dec
mov
fiadd
cmp
adc
stc
pop
mov
cld
cmps
adc
inc
inc
mov
js
add
mov
push
fwait
dec
jmp
test
fsubrp
pop
fidiv
fistp
lock
test
inc
xchg
mov
rcr
xchg
mov
mov
sub
shl
(bad)
mov
lods
stc
jo
jmp
xchg
inc
xor
das
call
loopne
lods
das
popf
cdq
jp
push
lea
ret
jg
mov
in
test
stc
sbb
pop
jns
push
int3
cmc
out
and
idiv
xor
arpl
push
mov
out
in
daa
mov
pop
inc
(bad)
stc
sub
push
xor
sbb
dec
addr16
add
pop
lods
rcl
mov
enter
(bad)
sar
mov
add
mov
arpl
adc
mov
add
mov
rcl
shr
loope
ret
jnp
ret
mov
add
jne
adc
retf
jmp
ins
popa
jb
leave
and
xchg
sbb
mov
or
icebp
sub
out
and
aam
jecxz
aad
jle
ins
into
les
cld
pushf
daa
add
call
pop
sbb
xchg
lods
pop
in
adc
xor
std
dec
sbb
fnstenv
ror
shl
hlt
mov
jae
adc
(bad)
call
cwde
fmul
dec
sub
add
imul
and
sbb
adc
mov
xor
(bad)
xchg
fimul
ins
pop
fidivr
test
sub
cdq
nop
sbb
fld
out
xor
shl
dec
pop
fbld
loope
pop
jg
sbb
outs
mov
loope
adc
scas
(bad)
in
xorps
and
or
xchg
and
scas
shl
pop
mov
lds
je
mov
aam
jae
es
jl
dec
and
inc
shr
mov
enter
scas
and
jge
fwait
lock
fs
dec
pop
push
dec
popf
push
and
arpl
aam
mov
test
ss
pop
stos
std
push
lock
push
push
xor
cmp
scas
out
(bad)
cmps
adc
ins
fst
lea
cmp
aad
shr
inc
dec
mov
xchg
shr
pop
nop
xchg
shr
mov
xor
xchg
xor
xor
add
(bad)
pop
fadd
mov
test
add
add
cmp
dec
aad
sbb
lahf
cwde
(bad)
bound
cmp
lods
pop
loop
mov
lods
imul
pop
push
inc
push
sub
out
cmc
xchg
aaa
mov
repz
dec
adc
inc
cdq
in
adc
mov
sub
fcom
movs
pop
jne
test
pop
mov
retf
iret
dec
lock
adc
mov
mov
inc
cmp
and
mov
pusha
jae
jo
push
addr16
push
and
loope
stos
xchg
and
mov
test
mov
push
repz
add
(bad)
movs
out
mov
loope
cli
sbb
cmp
aaa
mov
push
jge
xchg
test
jb
fild
push
pop
test
lahf
mov
cmp
xchg
push
sbb
dec
hlt
test
adc
lods
enter
scas
aas
or
outs
cmps
jmp
or
mov
inc
pop
(bad)
dec
jne
mov
test
jp
or
mov
pop
(bad)
mov
jl
mov
sahf
push
or
mov
add
imul
add
add
xchg
shl
loope
into
cmp
mov
adc
imul
js
dec
inc
(bad)
mov
mov
fwait
out
rcr
test
xor
sub
out
test
add
out
mov
dec
adc
inc
cwde
mov
rcr
call
aam
pop
repz
mov
push
jp
ss
shl
mov
push
cmovg
cmc
icebp
sar
enter
ret
test
(bad)
push
fisttp
lods
out
stc
push
inc
add
mov
loop
sti
iret
xor
adc
das
fild
sub
jmp
dec
pop
neg
ja
push
in
and
cmp
stc
adc
das
out
loopne
xchg
xchg
out
mov
pop
mov
mov
(bad)
test
xchg
dec
aas
adc
pushf
repz
jmp
aad
ja
shl
and
sbb
push
mov
mov
add
dec
rol
cli
mov
sbb
int
xchg
ror
xchg
xlat
adc
(bad)
lock
fld
pop
push
(bad)
sbb
adc
call
jnp
call
fcomp
add
aam
push
xor
ins
vunpcklps
jge
mov
dec
push
push
mov
jbe
test
std
and
enter
(bad)
xlat
out
movs
(bad)
sar
movs
(bad)
xlat
mov
jecxz
adc
loope
adc
pop
inc
aad
and
xlat
cli
push
test
es
add
pop
popf
nop
dec
jb
mul
adc
nop
push
sbb
jmp
mov
adc
call
nop
jl
ret
jo
mov
xchg
inc
adc
in
jl
movs
jbe
pop
push
inc
xchg
out
push
mov
jmp
ss
add
mov
imul
xchg
aas
xor
shr
cld
lods
ds
in
mov
retf
stc
xchg
clc
add
push
xchg
xchg
movs
mov
leave
cmp
scas
in
sbb
(bad)
push
jmp
fwait
cmp
test
rol
je
ins
out
fcomp
nop
scas
jnp
arpl
cmp
ins
push
sbb
pop
mov
mov
add
cld
je
lods
inc
inc
sub
cmp
jbe
stos
shl
push
stc
outs
stc
sbb
mov
xor
hlt
jmp
rcr
(bad)
and
cmps
call
fwait
or
loope
gs
jo
das
bound
add
repz
and
fwait
shl
jnp
add
dec
loopne
retf
push
cmp
xor
les
retf
xchg
out
or
ds
icebp
jp
jb
add
test
fst
add
xchg
dec
fild
(bad)
fistp
ret
ja
dec
adc
pop
push
sti
jmp
xor
int3
shl
scas
inc
(bad)
dec
jb
sar
loope
outs
js
sbb
xor
out
inc
cmp
mov
rcl
loopne
mov
mov
sbb
fisubr
popf
adc
pushf
inc
es
mov
shl
jle
or
jecxz
add
nop
push
(bad)
les
test
xchg
or
sbb
dec
cmp
mov
xor
jle
xchg
add
rol
and
cmp
loope
test
dec
push
mov
xchg
jns
aam
xor
dec
imul
inc
pop
mov
or
inc
pop
add
pop
lock
movs
mov
dec
(bad)
push
adc
inc
cs
jns
pop
shr
icebp
aad
cmp
int
shl
jnp
addr16
test
jp
mov
out
(bad)
dec
and
sbb
and
stos
scas
out
jo
outs
fist
mov
jmp
cs
(bad)
lods
outs
xlat
sbb
add
mov
cdq
call
int
std
sub
jecxz
cs
mov
lock
xor
or
mov
push
xor
mov
test
(bad)
push
test
pop
mov
mov
in
mov
out
sbb
mov
fsubr
test
lods
fmulp
sub
mov
test
sbb
push
inc
les
jmp
mov
ds
mov
stos
adc
out
aaa
pop
pop
or
(bad)
jge
push
popa
aam
out
and
rcl
dec
ins
lods
aam
mov
retf
mov
out
cmp
lea
push
jge
in
aas
in
mov
jbe
movs
cmp
jb
xchg
xor
out
fsubr
mov
dec
adc
popf
scas
push
lahf
shl
and
(bad)
adc
sub
jecxz
mov
lds
enter
dec
daa
dec
lods
mov
std
inc
(bad)
loope
push
push
sub
inc
mov
scas
fidivr
sbb
jo
add
mov
xlat
out
and
gs
cs
enter
jno
gs
sub
popa
fdiv
fisub
cli
sub
jmp
das
ret
mov
sti
mov
push
jl
cwde
repnz
push
add
out
xor
jp
iret
fwait
(bad)
sbb
mov
shl
das
jbe
inc
mov
xchg
inc
sub
lds
push
call
sub
xor
lods
mov
mov
popa
pop
retf
out
pop
mov
sub
xchg
into
rcl
mov
jecxz
out
outs
mov
sbb
(bad)
aad
in
imul
scas
loop
add
sbb
cli
outs
stos
mov
mov
adc
mov
jp
and
mov
cmp
push
add
les
or
iret
dec
push
cmps
mov
push
in
add
xchg
fcom
pop
fdiv
fadd
movs
mov
xor
mov
mov
inc
test
lahf
out
cmp
ins
jo
not
in
xchg
jbe
ja
xchg
jg
and
push
shl
pushf
shl
cmc
pop
and
adc
xchg
enter
add
es
mov
jmp
out
inc
and
test
cmp
inc
cmp
jbe
cdq
les
mov
xor
sub
jne
ins
inc
xor
mov
pop
nop
fmul
es
in
in
ret
stos
mov
xor
mov
in
fidiv
repnz
js
outs
pushf
in
dec
nop
fimul
push
aaa
fmul
movs
int3
inc
outs
inc
stos
out
jno
aaa
rcl
cmp
xor
cmps
pushf
les
jg
das
lds
xchg
cdq
into
sub
push
ins
sbb
sub
lods
mov
je
test
stos
aad
cli
mov
int3
(bad)
mov
inc
add
test
sub
arpl
inc
rol
inc
or
and
fild
inc
shl
(bad)
(bad)
push
mov
jmp
jne
pop
mov
mov
push
outs
shr
fs
in
push
mov
js
loop
xchg
popa
shl
mov
retf
mov
stos
xor
iret
sbb
mov
mov
les
jle
push
ins
retf
pop
sti
mov
js
cmp
outs
imul
(bad)
rol
sub
nop
jmp
pop
movs
mov
lahf
mov
dec
mov
leave
sahf
adc
adc
fs
and
aad
aad
xlat
adc
or
xor
mov
cmps
adc
push
and
loope
pusha
fwait
lods
jno
mov
cmp
and
push
mov
dec
aaa
(bad)
into
add
es
dec
ffreep
aad
out
and
dec
pop
call
lods
xchg
loope
pushf
loop
and
test
lds
xchg
xchg
cs
(bad)
mov
pop
iret
dec
jne
sub
shr
jle
pop
fcmovu
stos
out
xchg
sbb
inc
pusha
add
xor
retf
dec
js
mov
(bad)
call
mov
iret
or
ds
jecxz
inc
fsub
sub
daa
xchg
and
push
popf
xchg
and
pop
hlt
xchg
sahf
test
push
sbb
mov
push
push
mov
test
mov
mov
xchg
jp
dec
pop
xchg
cmp
jne
inc
mov
jl
and
rol
addr16
adc
add
cmp
iret
int
sar
in
inc
mov
out
cmps
xchg
push
and
cmp
inc
dec
aam
lahf
pop
sub
jo
cli
arpl
lahf
pop
in
mov
mov
mov
ficom
daa
fs
or
xchg
or
mov
ror
dec
adc
pop
xor
mov
fnstenv
inc
mov
xchg
(bad)
nop
(bad)
mov
nop
(bad)
(bad)
cld
jae
mov
xchg
cmp
or
icebp
mov
(bad)
(bad)
out
retf
jecxz
fstp
ds
or
mov
xchg
jae
(bad)
rol
and
cmp
pop
test
cmps
xchg
inc
push
pop
jne
rcr
inc
mov
sbb
sbb
sti
pop
jbe
lds
xchg
(bad)
repz
addr16
dec
jnp
popf
pop
dec
int
push
(bad)
std
iret
out
test
mov
xor
leave
cmp
aas
test
cvtdq2ps
dec
lahf
xchg
rol
arpl
or
mov
add
cmp
mov
pop
popa
adc
and
cmp
call
repnz
cld
arpl
push
cmp
push
call
in
dec
fdiv
dec
jge
add
(bad)
fistp
adc
xchg
mov
mov
cli
cld
and
outs
(bad)
jno
fimul
ror
fdivr
call
xlat
aad
iret
add
push
cs
push
call
xchg
ud2
or
test
jl
cmps
cld
cli
je
dec
ins
imul
aaa
mov
xchg
cmps
or
xchg
out
inc
jns
push
cmp
jne
push
xchg
pop
repz
and
adc
call
lock
jae
in
test
jge
dec
adc
cmps
dec
xchg
cmp
add
and
push
stc
xchg
jae
lea
or
repnz
inc
std
test
jle
push
fadd
ins
pusha
pop
mov
jle
scas
js
fld
shl
outs
inc
retf
hlt
mov
mov
push
xchg
jns
adc
jbe
mov
test
push
shl
inc
adc
mov
pcmpeqb
xchg
mov
cs
jp
cmc
mov
pop
push
clc
xchg
sub
push
xor
mov
pop
loopne
aad
enter
call
jbe
inc
sub
stos
out
mov
inc
inc
xor
xor
(bad)
in
rcr
xchg
mov
pop
(bad)
out
cmp
out
repnz
jl
and
in
call
gs
push
mov
pusha
sub
push
scas
adc
call
sub
mov
mov
shl
sbb
cs
ins
out
arpl
sahf
cmp
jae
sub
sbb
mov
mov
rol
lea
inc
or
pop
test
or
(bad)
mov
sub
cdq
adc
or
mov
pop
dec
sar
(bad)
arpl
push
jno
mov
dec
leave
iret
in
mov
adc
fdiv
xchg
mov
and
icebp
or
mov
xor
pop
imul
test
jge
dec
pop
clc
sbb
adc
jl
inc
(bad)
(bad)
xlat
xor
ret
(bad)
mov
es
leave
adc
mov
or
je
jmp
cmp
stos
push
inc
cmp
out
jbe
std
cmc
(bad)
mov
stc
jp
or
or
jg
jo
mov
mov
mov
sbb
clc
aad
mov
xchg
dec
push
push
dec
ins
adc
inc
cmp
dec
push
pushf
cli
ret
push
push
test
jp
mov
ins
mov
dec
les
pop
out
sbb
cmps
xchg
mov
mov
clc
popf
push
aad
mov
sbb
mov
sbb
xlat
sbb
std
pop
stc
push
xor
pusha
add
jecxz
cld
lods
cwde
fmul
and
call
cs
lea
sub
repz
adc
lea
push
fwait
push
(bad)
std
cmp
xchg
push
nop
addr16
or
test
dec
and
or
and
out
inc
pop
gs
sbb
fadd
push
jecxz
mov
pop
ins
mov
scas
and
mov
cmp
(bad)
pop
mov
cmp
adc
cmp
das
lods
clc
jp
pop
add
stc
xlat
mov
sub
jp
jb
pop
cmc
push
jnp
sahf
rcl
inc
cmp
popa
sbb
xchg
cmp
inc
mov
mul
adc
or
mov
cmp
jns
sti
mov
loop
icebp
int3
mov
test
sar
and
mov
sbb
mov
mov
xchg
outs
popa
movs
fwait
stc
mov
or
cmps
sbb
mov
int3
cmc
es
sahf
xchg
add
mov
test
fcom
pop
pop
xchg
or
dec
retf
pop
(bad)
das
lods
inc
xchg
xadd
or
pop
jno
out
test
dec
in
cmp
scas
mov
sbb
in
mov
push
es
inc
hlt
dec
sub
out
sub
aas
and
out
mov
in
mov
sahf
fdivr
mov
cwde
out
mov
out
xchg
xor
or
scas
or
jg
sub
call
test
and
out
inc
cmps
add
cs
xor
push
fs
add
pop
pop
inc
fxch
movs
test
gs
repz
inc
mov
(bad)
retf
mov
jb
sahf
cmp
mov
or
pop
cmp
fisub
add
arpl
cmps
jnp
jo
dec
adc
repz
adc
aaa
dec
std
cmc
mov
cmp
imul
pushf
in
jl
stc
pop
repz
jno
cmps
ds
(bad)
xor
cdq
cmps
sub
test
cli
movs
rcl
ftst
(bad)
(bad)
and
aam
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
lea
ja
loope
mov
mov
cmp
std
mov
(bad)
cli
movs
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
test
aam
loop
rol
movs
(bad)
idiv
mov
(bad)
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
repnz
rcr
mov
(bad)
out
mov
sub
mov
rcr
jmp
scas
cmp
je
out
ss
add
ret
xchg
bound
mov
jae
shl
lea
lock
outs
cwde
shr
adc
mov
leave
inc
sub
add
adc
sti
cwde
inc
mov
inc
add
add
imul
call
jg
cli
gs
aam
int3
aaa
adc
sub
popf
fwait
and
xor
add
outs
push
fisubr
and
jae
dec
ret
adc
cmp
gs
push
cdq
gs
test
inc
and
pop
mov
test
mov
jmp
mov
mov
(bad)
(bad)
cmp
adc
or
mov
rdtsc
push
fwait
jns
sti
cmp
dec
cwde
inc
fldenv
sbb
arpl
cld
call
jmp
adc
sbb
adc
pop
dec
push
cdq
xor
std
aas
mov
js
pop
and
add
dec
jbe
or
sbb
jae
(bad)
or
add
dec
xchg
in
adc
mov
sbb
pushf
dec
mov
movs
jl
sbb
sub
enter
sbb
adc
das
call
jg
clc
push
ins
mov
inc
xor
(bad)
sub
aas
sahf
push
push
mov
dec
pop
inc
xchg
mov
lahf
dec
mov
cdq
dec
cmp
loop
xor
mov
xchg
xchg
(bad)
sub
sub
mov
jmp
pusha
adc
mov
cmp
into
and
mov
push
rol
cdq
push
iret
pusha
iret
call
pop
dec
jmp
out
sbb
jbe
nop
cmp
mov
lods
outs
mov
pop
jne
push
fisubr
les
xchg
sbb
outs
mov
hlt
push
icebp
int
rol
test
pop
xor
push
push
cwde
iret
mov
enter
aas
data16
xchg
ins
pop
popf
cmp
call
xor
sbb
adc
pop
add
pop
mov
pop
adc
push
dec
test
(bad)
shl
fild
jl
mov
(bad)
popa
idiv
lea
push
fmul
ja
mov
daa
mov
mov
sub
sub
jle
ja
jp
jo
mov
shl
in
jle
cdq
xchg
imul
or
scas
inc
(bad)
sti
movs
aam
mov
ftst
sar
xlat
xchg
dec
movs
(bad)
xlat
repnz
int3
(bad)
movs
(bad)
(bad)
(bad)
mov
xlat
cli
in
rcr
out
mov
mov
lods
nop
push
outs
jno
push
cs
les
cli
lods
(bad)
imul
mov
test
scas
push
and
arpl
pushf
cs
add
dec
mov
mov
mov
dec
test
(bad)
xor
mov
jno
cmps
cmc
rol
out
enter
add
mov
push
cmp
rcl
pop
adc
fsub
aam
jae
(bad)
imul
pop
ins
hlt
or
dec
cmp
xor
clc
fcmovu
mov
or
add
jp
inc
xchg
adc
test
je
dec
lods
jle
mov
and
mov
fsub
jmp
jmp
cmp
mov
sub
imul
adc
into
mov
cmp
dec
pop
loop
push
retfw
jne
out
(bad)
retf
lock
mov
mov
jb
sar
aas
sar
(bad)
jmp
xchg
movs
jns
cmp
sar
(bad)
cld
in
popa
(bad)
cdq
adc
jmp
jae
dec
arpl
dec
xchg
push
imul
add
aad
xchg
xor
mov
cmp
jae
repz
nop
add
popa
sub
(bad)
xchg
ins
sbb
out
mov
xor
cmps
in
js
dec
dec
(bad)
mov
in
mov
ret
adc
inc
or
mov
mov
stos
jo
ret
add
retf
ret
dec
inc
int
out
test
sub
test
mov
popa
mov
shr
(bad)
cli
in
push
cmc
div
xchg
mov
out
movs
mov
mov
or
sub
adc
push
add
in
cli
daa
pop
nop
in
mov
cwde
ret
xchg
je
stos
mov
sub
ja
das
stc
outs
dec
push
into
sbb
call
xchg
inc
jae
jae
or
xor
add
sub
mov
loope
iret
pusha
xor
adc
mov
add
adc
lock
lahf
jecxz
xor
idiv
leave
cmp
sbb
and
pop
arpl
bound
and
push
call
and
push
popf
cmp
add
call
push
ja
push
outs
mov
xchg
enter
cs
pop
ret
ror
test
inc
je
cmp
arpl
stos
xchg
lahf
std
push
sbb
sbb
mov
ror
add
call
aad
(bad)
shl
mov
ss
adc
mov
xchg
jge
jae
sbb
sub
sbb
test
fisttp
repz
sahf
push
mov
mov
out
fdivr
jne
pop
pop
fwait
xor
daa
pop
call
js
movs
cmps
mov
(bad)
push
push
les
lods
pushf
(bad)
cmps
test
dec
sti
lock
cmps
fsubr
sbb
mov
cmp
jmp
mov
nop
sbb
pop
xchg
cwde
sbb
jmp
xlat
push
jae
push
push
je
xchg
mov
xchg
sbb
fld
data16
lahf
sub
jnp
clc
adc
hlt
and
cs
cld
out
(bad)
xchg
imul
cmp
das
dec
pop
xchg
and
jae
push
cwde
es
shl
call
mov
cmp
fisttp
mov
test
dec
pop
cmp
stc
mov
lea
test
and
xlat
repnz
int3
fcomi
movs
(bad)
(bad)
movs
(bad)
xlat
div
inc
adc
add
pusha
mov
jnp
cmp
std
mov
cmp
push
mov
dec
push
mov
test
dec
pop
dec
test
fwait
dec
ds
mov
les
cmp
add
adc
ror
mov
push
pusha
sub
sub
test
adc
xchg
jmp
movs
sub
mov
pop
xchg
je
and
jns
inc
stos
in
lea
call
mov
rep
mov
in
sti
std
push
and
fist
inc
dec
cmp
and
jno
arpl
in
fdivr
xchg
not
xchg
repnz
test
cld
mov
mov
xor
mov
pop
mov
sub
(bad)
xchg
adc
inc
fwait
xor
xchg
fldcw
jne
mov
cmp
pop
or
or
jmp
push
sahf
sub
stc
loope
pop
fs
addr16
adc
shr
jb
(bad)
test
int3
pop
cmp
pop
mov
xchg
xchg
repnz
int
xchg
cmps
mov
or
push
ret
adc
xchg
inc
and
or
lods
shl
sbb
dec
or
not
mov
push
ss
(bad)
retf
fdivp
jecxz
gs
dec
mov
or
jmp
jge
aam
lods
jb
cmp
sub
popf
(bad)
daa
sti
mov
cmc
mov
mov
scas
adc
fs
cmc
inc
int3
(bad)
les
int
cmc
je
je
clc
cld
jmp
jle
(bad)
(bad)
ja
scas
mov
ret
lahf
out
push
daa
cmps
ins
sbb
sbb
out
gs
pop
jl
inc
lods
inc
pop
push
mov
jg
mov
inc
inc
mov
je
mov
xchg
mov
mov
pop
cmp
imul
push
sbb
je
sub
leave
int3
jno
push
inc
out
imul
jno
pop
mov
clc
jmp
dec
sub
mov
not
jnp
cli
add
(bad)
aad
dec
and
sub
loopne
leave
dec
cdq
in
enter
stos
mov
repnz
cmp
iret
pop
arpl
in
dec
xlat
cmp
ins
das
in
xchg
loope
push
data16
adc
pop
adc
aam
sub
fs
cwde
not
mov
in
sub
ins
jl
mov
imul
mov
xor
mov
xchg
movs
loope
daa
inc
sbb
pop
sbb
(bad)
pop
adc
sub
mov
repnz
adc
jae
dec
ja
call
test
sub
mov
sub
imul
rol
mov
add
pop
fidivr
pop
jb
(bad)
sub
lods
add
(bad)
mov
aam
repnz
enter
(bad)
(bad)
xlat
out
jmp
rcl
jbe
xchg
xchg
ss
cmp
pop
xor
lea
cmp
scas
rcr
fxch
xlat
cli
xor
push
adc
or
test
sub
and
scas
jbe
or
sbb
or
and
pop
mov
fwait
xchg
push
adc
into
faddp
lea
adc
xor
add
dec
repz
cs
(bad)
pop
in
push
xor
stc
sub
push
sbb
aas
movs
add
test
fdiv
push
or
ja
inc
in
push
sbb
mov
sbb
and
mov
or
add
jmp
out
mov
jno
pop
pop
push
mov
mov
hlt
mov
div
aaa
mov
movs
mov
mov
adc
pop
push
fdivr
(bad)
popf
push
sahf
mov
xor
aas
inc
xor
push
add
jb
pusha
or
jmp
jl
add
push
xor
out
jl
test
loope
add
sahf
adc
lods
or
hlt
xor
inc
(bad)
xchg
movs
stos
lods
fldcw
adc
repz
pop
mov
dec
cmp
sbb
call
test
cmp
sbb
pop
aas
mov
mov
inc
add
(bad)
ja
sub
xor
call
xor
sub
cwde
and
mov
outs
cmc
dec
xchg
jnp
loop
ds
and
adc
pusha
adc
nop
stc
(bad)
cmp
aaa
int3
push
repz
push
std
hlt
mov
or
dec
stos
icebp
push
test
pop
dec
sub
jae
jmp
xchg
push
pop
mov
sub
cmps
dec
jae
inc
ror
enter
(bad)
neg
add
sbb
or
aam
movs
ja
(bad)
test
out
xchg
mov
mov
retf
mov
add
push
add
mov
mov
add
add
inc
out
dec
repnz
outs
ds
lahf
xchg
xchg
jb
dec
sub
sbb
pop
push
mov
lsl
add
mov
rol
cs
je
jge
dec
xchg
and
inc
in
ja
sbb
cmp
retf
aad
test
test
xchg
fs
std
ds
fadd
gs
cmp
cmp
mov
mov
mov
(bad)
push
push
ins
mov
dec
out
aaa
icebp
aad
mov
inc
xor
aad
bound
fdivr
xor
je
cdq
lds
shr
jl
je
lods
jl
or
(bad)
lods
iret
sbb
shr
mov
jg
pop
pop
ja
push
adc
ds
and
test
repnz
mov
scas
xchg
fnstcw
call
adc
dec
fs
push
pop
repz
cmp
into
jecxz
das
dec
mov
and
dec
xor
jae
movq
sti
call
inc
mov
xchg
push
push
cmp
push
mov
push
add
pop
repz
mov
(bad)
and
iret
push
and
shr
add
mov
push
xchg
pop
dec
int
mov
push
add
mov
sbb
cwde
push
add
mov
mov
push
jmp
dec
enter
mov
fwait
cmp
ror
jns
adc
cmp
cmp
ficom
jbe
adc
cdq
(bad)
push
mov
and
cld
xchg
add
mov
pop
mov
pusha
rcl
es
push
xchg
rcr
sub
aad
mov
in
outs
fbstp
sbb
inc
mov
dec
add
dec
mov
dec
and
dec
xchg
cmps
mov
jbe
sbb
xor
dec
std
enter
pop
cmp
scas
push
(bad)
(bad)
adc
lock
imul
mov
mov
mov
lds
rol
dec
stos
or
aas
jo
cmp
sbb
cmp
inc
pop
ret
es
dec
in
lods
fsubr
repnz
(bad)
movs
loopne
(bad)
lods
(bad)
enter
mov
and
sar
in
dec
adc
loop
sbb
mov
or
xchg
cmp
arpl
xchg
je
(bad)
fdivp
cmps
mov
movs
in
cli
int
push
test
sub
inc
mov
fs
dec
ins
mov
or
jp
jmp
xchg
cmps
bound
xchg
jge
mov
fisubr
push
sbb
(bad)
jne
sub
xchg
jp
sub
fsub
lds
sti
adc
mov
xchg
arpl
popa
aas
ins
pop
sub
add
xchg
aam
rcl
ret
cmp
inc
js
aam
mov
inc
shr
ror
ds
sub
jnp
push
in
arpl
mov
fs
xor
imul
adc
pop
jl
xor
mov
data16
pushf
jg
pushf
sbb
movs
stos
daa
fcmovne
jge
mov
loop
push
das
jmp
push
adc
dec
inc
setnp
pop
mov
(bad)
not
jno
push
pop
add
cmps
shl
mov
addr16
arpl
and
push
lods
(bad)
sbb
invd
jl
pop
shl
leave
loopne
xchg
loopne
fnsave
lock
enter
and
sub
enter
cmps
adc
pop
or
add
mov
and
or
mov
(bad)
fnsave
push
xchg
test
cmp
cmp
aas
lods
jle
in
sub
push
and
xchg
xor
cmp
and
jnp
daa
enter
scas
stc
inc
xor
push
sbb
out
dec
aaa
ins
movs
cmp
scas
(bad)
sub
xchg
mov
call
ja
cmc
fmul
std
pop
fsubr
dec
(bad)
mov
int3
inc
or
adc
xchg
imul
add
test
popa
sub
jmp
rcr
loop
inc
loop
sub
xchg
lds
mov
sbb
pop
in
jle
jmp
jo
daa
(bad)
cmp
sahf
arpl
ds
mov
or
shl
lods
fwait
cwde
fisttp
xchg
adc
cmp
mov
rcr
call
aaa
mov
daa
dec
stos
ja
dec
retf
mov
inc
stos
ret
dec
fidivr
iret
popf
or
aam
push
pusha
(bad)
push
xchg
add
jle
leave
or
xchg
jae
jmp
aam
inc
inc
stc
popf
push
sub
inc
gs
pop
push
or
jmp
nop
test
bound
aad
push
or
pop
cs
data16
or
jg
sub
fcmove
pop
jns
stos
retf
jo
les
aad
and
jge
mov
adc
pop
jecxz
and
mov
repz
ret
nop
push
je
xchg
std
das
xchg
int
fwait
cmc
adc
mov
sar
fcomp
push
dec
sahf
rol
push
push
xor
test
dec
popf
mov
loope
mov
je
bound
retf
pop
lock
scas
repz
test
aas
fs
pop
stc
pushf
adc
lahf
add
xor
imul
adc
retf
or
adc
lods
in
xchg
ja
and
cmps
lds
or
adc
inc
push
dec
aas
stos
call
cmp
jo
mov
out
jge
xchg
adc
les
xor
test
sub
sub
popa
inc
das
std
or
aaa
jb
xchg
(bad)
out
lock
loopne
xlat
or
sub
sbb
xor
sub
adc
mov
(bad)
pop
adc
mov
inc
imul
adc
popw
adc
mov
push
xor
icebp
mov
sbb
adc
loopne
sub
fidiv
fadd
call
or
das
add
or
pop
adc
scas
mov
ret
jg
sahf
adc
mov
in
aad
dec
pop
loopne
sbb
movs
lods
inc
(bad)
test
dec
or
and
mov
or
fdiv
bound
movs
push
cli
jmp
enter
push
nop
enter
and
hlt
xor
pmullw
add
je
inc
pop
jbe
adc
nop
lahf
fwait
(bad)
mov
and
les
push
sbb
stos
test
jmp
mov
push
fstp
dec
arpl
and
arpl
fld
cmps
mov
sub
xor
jmp
je
and
pop
mov
lock
cs
jb
lods
arpl
xchg
dec
mov
bound
pushf
or
and
cs
lea
pop
lods
xor
cmps
fadd
sbb
cdq
mul
out
adc
mov
sbb
sub
jo
inc
jae
mov
jle
pop
sbb
rol
or
dec
jg
cwde
mov
lods
call
mov
pop
xor
jmp
jl
push
sub
sub
ffreep
and
dec
out
fidiv
lea
outs
cmp
pushf
inc
adc
pushf
mov
xor
retf
jecxz
cmp
aam
nop
test
arpl
mov
cmps
cmp
retf
push
pushf
jbe
out
add
mov
sbb
ret
mov
adc
ret
(bad)
aam
pop
pop
xchg
xor
pop
out
jo
mov
dec
icebp
mov
dec
mov
jo
jge
sti
test
fsubr
mov
or
xlat
mov
dec
enter
dec
(bad)
or
xor
(bad)
dec
sbb
jbe
call
push
ss
cwde
cmp
push
mov
je
jmp
aad
in
dec
int3
xchg
inc
sbb
push
mov
add
add
not
loopne
jp
cmps
sub
lods
out
push
enter
mov
rcr
and
retf
sub
fwait
cdq
cs
xor
pop
into
pop
or
xor
xchg
xor
or
and
cmp
and
and
xchg
lahf
movs
jno
xchg
or
ret
arpl
rol
sbb
jge
lods
pop
pop
adc
cs
mov
mov
dec
sbb
xchg
dec
add
pop
mov
xor
add
adc
xchg
retf
inc
adc
mov
xor
pop
loope
stc
xchg
ja
inc
jno
inc
inc
inc
fild
xchg
ds
sub
lock
mov
push
push
adc
je
inc
push
or
test
rcr
jg
out
int
cs
lods
(bad)
push
loope
fldcw
imul
add
sbb
test
fiadd
sbb
scas
cmp
xor
jns
dec
loopne
rcr
push
dec
mov
xchg
add
xor
sub
xor
(bad)
push
mov
aas
fild
xchg
(bad)
and
dec
mov
ret
loop
mov
inc
repz
sub
push
mov
imul
fidiv
jbe
fsubr
jo
pusha
stos
pushf
add
icebp
inc
mov
add
ror
jno
sub
add
sub
or
stos
mov
xor
ret
push
int3
or
cmp
sar
inc
adc
mov
adc
call
and
call
std
aas
dec
pmovmskb
ja
or
jnp
adc
or
jge
sbb
lods
es
fsubr
jge
pop
pop
mov
daa
(bad)
adc
cdq
mov
lds
jle
dec
pop
dec
iret
sbb
(bad)
aaa
call
xlat
xchg
(bad)
(bad)
mov
xlat
mov
pop
xor
adc
xchg
mov
loope
pop
xor
hlt
adc
pop
iret
pop
imul
jnp
scas
pop
add
sub
das
mov
lock
fs
in
outs
aam
jmp
dec
push
ja
jbe
jmp
fistp
pop
aaa
hlt
test
pop
imul
enter
pop
hlt
and
sbb
xor
icebp
scas
ins
cmp
push
push
je
repz
add
test
sub
and
shl
pop
or
pop
std
shr
(bad)
xchg
add
add
fnstsw
sub
push
outs
xor
or
xchg
call
add
test
not
lock
push
mov
jnp
pop
add
xchg
pop
or
out
sbb
dec
hlt
into
inc
sub
leave
sar
add
(bad)
cmps
ror
push
sbb
mov
mov
movs
clc
icebp
pop
and
adc
pop
push
sbb
xor
xchg
push
repnz
fs
pop
ret
sub
or
add
idiv
inc
mov
loop
dec
in
clc
retf
pop
cmp
(bad)
(bad)
mov
shl
mov
rcr
movs
(bad)
xlat
mov
jecxz
adc
out
adc
rcl
pop
add
scas
xchg
fcompp
rcl
pop
inc
push
sub
dec
enter
lock
(bad)
push
xor
fild
jnp
fadd
dec
jg
aam
mov
adc
mov
test
push
cli
mov
xor
xor
cmp
test
xlat
sub
jb
push
mov
sahf
lods
(bad)
push
mov
add
es
inc
sub
and
sbb
xor
loope
scas
(bad)
ins
pop
clc
in
lea
and
sbb
sbb
repnz
imul
xchg
xor
aad
rol
inc
add
neg
(bad)
pusha
cwde
and
xor
addr16
mov
ins
push
mov
pusha
sbb
jp
mov
or
mov
popfw
test
jp
shl
fucomip
add
retf
pop
cdq
std
add
sub
xor
and
inc
mov
lahf
ins
in
mov
ja
or
xchg
cmp
xor
jle
sub
and
or
mov
(bad)
bound
add
jo
jbe
dec
xchg
add
xor
nop
lds
out
mov
ja
push
or
in
lahf
mov
lahf
sbb
mov
mov
push
pop
test
or
loope
mov
add
jns
cld
jecxz
xor
test
les
mov
xchg
xor
inc
fstp
mov
cdq
cdq
int
fnstcw
shr
mov
cmc
cli
stc
jl
out
or
loopne
rcl
rcl
push
inc
(bad)
aad
inc
cmps
or
movs
(bad)
adc
lock
test
gs
in
(bad)
push
push
adc
jnp
mov
mov
cmp
mov
pop
or
int
inc
adc
add
shl
(bad)
(bad)
in
iret
inc
and
dec
push
scas
aad
sub
mov
or
call
dec
jne
jns
jge
scas
adc
(bad)
cmp
dec
loope
dec
xor
movs
rcl
dec
adc
rcr
sbb
mov
iret
jmp
cmc
retf
xor
in
into
xor
and
pop
mov
outs
inc
xchg
cmp
or
mov
(bad)
push
inc
repnz
nop
sahf
inc
es
jg
imul
pop
daa
aas
arpl
aaa
arpl
stos
data16
push
in
dec
shr
cmp
and
test
sub
pop
cmp
add
test
xor
into
ins
jge
(bad)
out
adc
mov
xchg
and
shl
push
icebp
ret
je
xchg
inc
mov
mov
pusha
rcl
(bad)
cmp
imul
mov
push
dec
(bad)
cmp
div
mov
in
test
into
mov
out
mov
add
lds
or
mov
jg
fisubr
aaa
lods
jnp
dec
add
cmps
pusha
or
or
add
icebp
mov
(bad)
push
test
arpl
gs
pop
adc
pop
sub
cld
pusha
jo
inc
xchg
push
inc
cmp
mov
aaa
pop
mov
sub
(bad)
(bad)
scas
movd
popf
fwait
sahf
and
mov
mov
out
aam
jbe
stc
clc
pop
push
inc
scas
jl
retf
or
cmp
movs
ss
or
mov
cmp
outs
xchg
lock
imul
cmps
and
pop
cdq
cmp
inc
jge
leave
lods
mov
fimul
test
cmps
in
icebp
ins
cli
mov
scas
call
push
retf
sbb
daa
outs
mov
enter
outs
fimul
les
jecxz
inc
mov
adc
add
fadd
aas
aam
and
or
(bad)
stos
fdivr
ss
in
xor
mov
xchg
and
(bad)
ds
paddd
movs
js
aad
iret
leave
enter
shl
pop
(bad)
nop
mov
ja
clc
pop
fdivr
ss
jb
mov
scas
fucom
out
cmp
rcl
repz
xchg
fwait
push
push
rcl
adc
test
ror
stos
push
inc
fimul
mov
data16
repz
lods
mov
dec
mov
gs
or
dec
sub
(bad)
ins
(bad)
dec
(bad)
xchg
and
fsubrp
jnp
mov
cs
or
into
movs
loopne
sbb
iret
(bad)
stc
sbb
into
jle
int3
mov
shl
mov
xchg
dec
mov
outs
mov
lods
jno
test
pop
sub
in
retf
xchg
sub
or
shl
ins
xor
shr
aad
out
inc
jne
cdq
ja
push
aas
aam
into
fdivr
xlat
daa
sub
sub
mov
xor
cli
jecxz
out
dec
push
test
adc
xor
in
xchg
xchg
cmp
pop
cmps
mov
pushf
call
int
rol
adc
push
jle
add
cmp
mov
push
push
scas
cmps
mov
inc
dec
fucomp
mov
inc
popa
popa
std
or
pop
jo
stos
fs
in
adc
mov
mov
cmp
sub
fmul
fdivr
popa
or
iret
inc
fistp
mov
push
pusha
xor
mov
pop
mov
mov
movs
scas
lock
xor
xchg
jnp
inc
xchg
outs
and
dec
test
mov
outs
fdivr
pand
xor
push
xchg
inc
jecxz
jp
sar
popa
mov
scas
stos
sub
sub
push
jmp
adc
mov
jbe
jge
std
push
mov
(bad)
daa
dec
xchg
ins
pop
pop
mov
je
js
loop
mov
cdq
mov
fdiv
test
jmp
inc
add
retf
test
call
dec
dec
sub
fdiv
sbb
leave
pop
pop
sub
sbb
test
out
dec
pop
shl
mov
(bad)
aaa
fwait
outs
xor
movs
jl
aam
dec
stos
mov
ss
xchg
rcl
mov
pop
hlt
(bad)
bswap
outs
dec
fisttp
dec
inc
xor
call
jmp
bound
in
mov
xor
xlat
mov
fwait
mov
push
jmp
scas
push
pusha
cwde
(bad)
jb
and
mov
ret
push
pushf
pop
xor
push
popa
push
mov
in
pop
add
adc
mov
xlat
jmp
cmps
sub
dec
cmp
add
call
or
sti
dec
pop
jae
xor
cs
push
popa
stos
jne
push
(bad)
mov
jne
into
push
sahf
xor
push
aas
fcom
jg
or
jae
add
pop
and
pop
sti
arpl
cld
mov
cmp
adc
cmp
xchg
sub
xlat
mul
test
pop
or
xchg
add
addr16
in
inc
cli
loope
cmp
loopne
int3
push
ss
rcl
and
mov
movs
sub
shr
adc
out
in
movs
dec
das
jae
mov
inc
mov
ret
std
js
stos
fisttp
mov
ins
sbb
in
lods
(bad)
(bad)
les
and
inc
lahf
(bad)
movs
cld
aam
movs
(bad)
xlat
(bad)
cmps
enter
push
stos
cli
lods
int3
xchg
mul
(bad)
(bad)
movs
(bad)
xlat
cli
mov
adc
js
les
cmp
scas
nop
fcompp
enter
test
scas
int
fsub
xor
cmps
push
push
jmp
adc
mov
fwait
xlat
test
cmps
retf
nop
dec
mov
mov
fimul
retf
jnp
push
xchg
cmpxchg
(bad)
xor
push
cmp
mov
fisttp
int3
ins
push
jnp
xchg
iret
jmp
jmp
out
aam
popf
mov
sahf
(bad)
retf
mov
xchg
out
pop
lds
cmp
push
test
and
push
aad
jnp
jbe
and
inc
dec
jb
test
mov
and
addr16
shl
lea
jl
rcr
imul
aam
scas
(bad)
hlt
js
cs
enter
mov
cmp
mov
retf
push
cmp
mov
stos
sub
lods
aaa
shl
push
mov
mov
mov
or
test
sbb
xor
push
jge
sti
mov
in
out
jo
lods
push
add
and
sahf
xchg
lea
cmp
pop
mov
mov
not
sbb
add
movs
and
ja
mov
sbb
sub
pop
add
pushf
mul
frstor
mov
mov
cwde
ret
jbe
dec
pop
pop
fst
nop
jno
jecxz
movhps
push
addr16
(bad)
enter
out
or
test
xchg
js
cmp
es
into
loopne
xchg
cs
push
mov
mov
sbb
and
push
and
adc
xchg
jmp
inc
sbb
fwait
aad
mov
jecxz
or
mov
data16
loopne
arpl
enter
pop
into
imul
dec
ss
push
adc
inc
fisubr
cmp
pop
mov
mov
jmp
je
stos
cld
sahf
mov
lods
jge
movs
cmps
xchg
or
pushf
mov
push
jae
arpl
sahf
enter
cli
das
movs
push
ss
cmp
mov
lahf
es
xor
loop
cs
pop
shl
dec
aaa
inc
cld
rol
imul
in
je
xor
sub
fldenv
or
cmp
repnz
xchg
jle
dec
aam
add
mov
ja
add
fidivr
(bad)
cmp
cwde
leave
cmp
mov
(bad)
repz
enter
(bad)
sar
loope
xlat
jp
rcl
and
push
cmp
add
icebp
rcl
jmp
mov
sub
xchg
das
out
aam
mov
sbb
adc
scas
out
(bad)
(bad)
lods
jmp
ucomiss
push
or
(bad)
scas
or
mov
mov
ins
(bad)
imul
out
(bad)
call
adc
or
enter
scas
and
adc
dec
xchg
sbb
jg
std
or
neg
repnz
push
xor
mov
add
mov
fisttp
jae
jge
jle
xchg
out
retf
lock
sub
out
das
(bad)
idiv
sbb
cmps
xchg
enter
mov
mov
bswap
cmps
adc
dec
mov
ror
ins
sub
sbb
adc
or
test
and
and
sub
add
jbe
into
cmc
pushf
cmp
fdivr
cmp
aad
imul
xor
mov
sbb
sbb
xchg
cwde
shl
out
jmp
mov
jno
jmp
push
(bad)
jmp
mov
jae
sub
and
xor
es
inc
add
xchg
out
cwde
(bad)
sub
rol
addr16
cmp
sti
cmps
(bad)
jmp
mov
cmps
stos
add
cs
sbb
dec
add
fstp
push
rcr
and
cld
sbb
mov
fist
fs
jle
scas
sar
scas
lea
xor
aad
jl
pop
stc
cwde
and
pushf
mov
in
adc
jns
xchg
in
ins
aaa
cmp
in
jbe
adc
(bad)
jmp
stos
fscale
jno
cmc
stos
lods
idiv
mov
push
push
xchg
sbb
call
lahf
xchg
mov
not
dec
aad
inc
adc
mov
dec
loop
and
mov
(bad)
clc
(bad)
jns
loope
sar
cmp
fild
sahf
jmp
mov
outs
mov
push
nop
daa
mov
sub
in
in
(bad)
push
stos
and
or
dec
pop
mov
adc
push
push
sub
sub
pop
sar
adc
xchg
jp
dec
xchg
adc
pop
jns
adc
mov
pop
(bad)
aas
xor
out
cmp
xlat
in
shl
int
cmps
ret
or
cmp
nop
stos
mov
clc
sbb
mov
movs
retf
xchg
loope
cmp
cmps
xor
pop
pop
add
cmp
stos
jl
leave
sbb
xchg
dec
(bad)
jo
mov
mov
fidivr
mov
xlat
mov
sar
add
imul
add
les
mov
imul
mov
pop
pop
dec
das
sbb
sub
adc
imul
sahf
and
fs
mov
pop
pop
loope
pop
(bad)
rcl
push
or
ud2
dec
and
ja
test
std
mov
mov
fdiv
mov
add
mov
ror
mov
xlat
cli
movs
enter
(bad)
sar
loope
xlat
jp
rcl
and
xchg
mov
pop
pop
push
(bad)
and
xlat
cli
js
push
loope
movs
mov
pop
and
cmp
dec
fidivr
sbb
in
dec
fistp
inc
pop
and
je
jne
and
mov
stc
jns
dec
outs
scas
pop
xor
sbb
loopne
cmp
sbb
jnp
ss
fadd
mov
je
ss
loope
scas
sub
add
xchg
scas
popf
mov
and
leave
jg
xchg
mov
jns
sbb
push
ds
fbld
inc
cwde
mov
or
into
jmp
(bad)
sbb
jae
sub
stc
fucom
sbb
(bad)
push
pop
cmc
test
sub
cmp
pushf
adc
mov
mov
mov
push
out
inc
js
addr16
es
(bad)
push
xchg
sbb
movs
add
and
push
fist
inc
fnsave
sub
xor
fidivr
shr
retf
and
xor
stc
pop
out
jmp
scas
pop
push
aaa
out
inc
or
js
repz
(bad)
xor
sbb
lods
xchg
cwde
dec
adc
daa
rol
retf
sub
aaa
adc
mov
xchg
cmps
sbb
gs
ficomp
arpl
fwait
inc
pop
jno
leave
(bad)
mov
add
xchg
call
add
std
mov
aas
push
inc
lds
xor
loope
or
jne
repz
out
loopne
jecxz
pop
inc
xchg
xchg
mov
mov
adc
inc
fs
xchg
inc
in
aam
out
jge
xor
cmc
rcl
arpl
(bad)
and
jp
sahf
test
les
pop
and
scas
xor
sbb
add
inc
pop
sub
push
imul
inc
mov
mov
jle
cld
push
xor
cld
adc
pusha
aad
(bad)
(bad)
fucomp
lea
jmp
jl
xchg
add
pop
mov
xchg
dec
cli
jb
movs
adc
mov
aam
mov
xor
sysret
test
mov
hlt
xor
lock
imul
sahf
cmp
push
xlat
enter
out
push
lods
add
loope
lds
in
les
sub
xchg
iret
mov
adc
fdivrp
syscall
rcl
xchg
mov
add
stos
adc
inc
daa
fdiv
popf
mov
aad
push
sub
xchg
or
push
frstor
jb
add
adc
cmps
mov
inc
or
inc
xor
std
add
pop
daa
aaa
lds
cmps
xor
loope
bound
and
jp
jmp
aad
push
pop
dec
loop
in
pop
rcr
mov
cmps
sub
(bad)
in
lahf
sahf
cld
gs
ins
outs
enter
dec
xchg
clc
adc
sub
mov
popa
fadd
sub
mov
aad
lahf
xchg
xor
jbe
push
pop
cld
sbb
into
mov
cli
jmp
ins
stos
mov
mov
ror
sub
pop
inc
stos
pusha
xor
cmp
dec
or
mov
sahf
pop
mov
mov
clc
nop
shl
stos
aad
scas
jmp
sub
aaa
xchg
adc
fwait
jb
dec
dec
pop
(bad)
pop
sbb
stos
push
icebp
lea
push
mov
cmp
not
in
arpl
inc
sbb
mov
sub
(bad)
(bad)
loopne
in
les
push
fist
jno
stos
pusha
retf
add
retf
mov
into
sti
mov
push
retf
faddp
and
and
test
ret
sub
pusha
inc
repz
jp
push
aaa
in
(bad)
sub
(bad)
mov
inc
pop
cwde
cmps
enter
repnz
rcl
jge
xchg
cmp
xchg
dec
inc
ret
adc
cmp
jmp
iret
ret
mov
push
call
pushf
mov
sub
jmp
cmps
push
mov
cmc
sbb
pop
cwde
out
cmps
jns
sub
fidiv
loope
hlt
xchg
fnsave
xchg
test
mov
cld
pop
or
test
dec
in
push
call
fs
in
xchg
retf
cmp
mov
(bad)
push
int3
jle
fs
pop
mov
pusha
adc
retf
outs
fwait
(bad)
fistp
test
int3
retf
pop
push
add
inc
add
mov
test
cld
mov
pop
call
xchg
stc
pop
test
mov
jbe
cs
jp
sub
adc
inc
jmp
push
mov
mov
loopne
lods
mov
xchg
adc
mov
mov
xchg
inc
arpl
add
jnp
out
or
jo
mov
call
fs
adc
in
mov
mov
dec
and
cli
aam
push
mov
cld
fstp
jmp
cli
jmp
push
mov
das
mov
mov
xlat
mov
push
xor
aad
cmc
sar
inc
sar
push
mov
jne
(bad)
test
xlat
in
xchg
lock
and
retf
mov
inc
mov
movs
add
les
pop
pop
rcl
cwde
stos
jbe
and
cmc
cmp
in
mov
cli
mov
or
in
aaa
stos
adc
repz
sub
mov
cmps
mov
imul
xchg
test
nop
icebp
inc
ret
lods
out
sub
out
aas
stos
jle
inc
cmp
inc
jl
and
jmp
data16
push
mov
es
mov
dec
test
repnz
idiv
mov
cmp
loop
das
fdivr
loop
sub
lods
adc
jae
push
mov
ins
push
cmp
arpl
arpl
cmp
inc
lea
sbb
in
cld
loopne
fcom
dec
dec
pop
pop
imul
inc
mov
lea
aam
out
xor
js
out
cmp
loopne
jmp
int
push
mov
xor
shr
daa
ins
pop
sub
ss
psraw
aad
(bad)
cmc
into
or
in
in
retf
dec
aam
pop
fadd
int3
push
sub
dec
into
and
add
sbb
retf
fadd
cmp
inc
jp
test
ficom
(bad)
fwait
std
jl
xor
mov
aas
lods
add
or
cli
push
fsubp
mov
mov
sti
pop
in
add
ja
cdq
mov
movs
in
jl
pop
in
mov
mov
or
and
jl
or
or
push
xchg
out
jl
xor
cmp
test
stc
movs
repz
mov
icebp
data16
jmp
push
mov
and
add
mov
in
and
xchg
mov
ss
loopne
sub
outs
cld
cdq
and
cdq
mov
push
pop
jl
pop
push
push
and
xchg
inc
neg
test
sti
jge
popf
sub
mov
mov
mov
mov
xchg
pop
mov
push
inc
aad
cmps
mov
inc
nop
int3
aas
sti
sub
mov
cmp
mov
adc
ja
mov
out
aad
aad
int3
(bad)
sub
mov
ins
(bad)
mov
retf
movs
add
xor
or
std
pushf
jbe
sub
mov
repnz
xchg
out
push
addr16
(bad)
fs
xchg
mov
outs
jns
inc
iret
mov
inc
jmp
in
ja
and
mov
xchg
sbb
popf
dec
ins
(bad)
and
mov
test
and
test
shl
jl
(bad)
(bad)
loopne
push
loopne
dec
push
jmp
jo
inc
dec
in
xchg
stos
lods
enter
xchg
dec
fmul
ja
scas
jo
shl
std
push
cmp
rcr
pop
mov
mov
test
rcr
outs
add
out
leave
mov
inc
int
not
mov
lock
into
mov
daa
and
mov
xchg
push
adc
in
sub
iret
mov
repnz
nop
push
add
jo
call
jne
call
mov
les
repnz
xchg
inc
and
mov
add
mov
test
mov
test
or
add
les
xchg
std
test
stos
dec
mov
idiv
pop
cmp
in
addr16
ret
(bad)
outs
sbb
add
out
js
pop
add
and
cmps
loop
lahf
mov
ficomp
out
pop
wrmsr
enter
in
mov
adc
mov
ds
test
pop
sub
std
fsubr
(bad)
retf
inc
sub
add
outs
fistp
jecxz
out
cmp
cdq
scas
repz
imul
xchg
les
jo
leave
cmp
pop
dec
aad
mov
mov
jecxz
jg
sbb
(bad)
or
pop
ins
cmc
mul
and
add
jne
daa
push
pop
cmp
repz
das
pop
jmp
test
lea
retf
sbb
cdq
cmps
sub
test
cli
movs
rcl
ftst
(bad)
(bad)
and
aam
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
mov
stos
(bad)
mov
cmp
mov
cmp
std
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
fisubr
ror
mov
sar
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
enter
scas
fmul
in
xlat
mul
rcl
push
cmp
lock
and
icebp
sub
jle
rcl
push
test
cld
in
iret
jb
les
js
int3
sahf
out
inc
in
mov
imul
cmp
cmp
push
add
sbb
jbe
retf
or
out
rcr
nop
(bad)
lahf
dec
jo
push
mov
test
(bad)
mov
(bad)
ficomp
sub
xchg
sub
shl
pushf
inc
data16
mov
or
jne
jg
xor
aam
loop
xchg
cli
xchg
adc
hlt
mov
mov
out
clc
mov
repnz
pop
mov
gs
jg
push
loopne
popf
call
mov
test
inc
mov
sbb
mov
retf
scas
(bad)
mov
lahf
into
xor
fcom
mov
and
ret
push
xor
iret
ret
add
pop
and
cmp
mov
adc
mov
stos
add
jmp
push
jecxz
repz
push
pop
into
mov
(bad)
popa
inc
add
lods
mov
sbb
or
cmps
rol
pop
mov
pop
dec
push
adc
adc
add
inc
dec
cdq
das
je
out
jmp
das
mov
int
dec
lods
add
mov
sbb
fwait
sbb
xchg
mov
jle
(bad)
fst
mov
sbb
ds
add
(bad)
jbe
or
stos
mov
inc
push
clc
stos
arpl
fnsave
sub
ror
and
mov
xchg
push
mov
lahf
push
xchg
not
sbb
dec
push
fs
mov
jbe
cmps
xor
pop
jns
sub
mov
jnp
ret
mov
push
lock
adc
xchg
and
mov
mov
out
scas
int
lods
mov
and
xchg
out
call
jecxz
cmp
int3
js
fisttp
popf
lahf
xchg
fwait
and
aaa
(bad)
clc
push
repz
pop
shl
mov
xchg
in
shl
iret
mov
or
jl
mov
fstp
int3
xlat
shl
(bad)
xlat
out
lods
int3
shr
movs
enter
(bad)
sar
mov
xlat
repnz
xchg
xlat
mov
cmc
inc
add
add
sar
out
je
iret
adc
jns
mov
cmps
lock
mov
mov
mov
pop
or
cmp
cmp
xchg
stos
xchg
mov
std
popa
and
pushf
repnz
mov
adc
cdq
repz
push
mov
xchg
jmp
mov
in
sub
xchg
repnz
test
retf
sbb
dec
xor
in
sub
lock
out
jae
ds
or
xchg
mov
popf
cmp
pop
lea
sub
jmp
arpl
xor
push
push
not
xchg
fstp
cmp
rcl
rcr
out
mov
out
(bad)
or
jg
mov
xchg
aaa
in
dec
lods
(bad)
aam
xlat
sbb
mov
ror
gs
out
loop
mov
in
push
aaa
inc
sbb
mov
loop
fwait
inc
push
popf
into
data16
pop
int
in
push
retf
mov
mov
retf
jnp
mov
adc
add
pop
xlat
popf
inc
sbb
scas
and
xor
ret
popf
pusha
int
mov
sub
popa
(bad)
mov
adc
adc
rsm
jl
ins
(bad)
cmps
std
movs
daa
mov
scas
leave
int
ret
add
cmp
push
repz
pop
mov
xchg
jecxz
(bad)
xor
push
gs
sbb
adc
test
dec
outs
add
xchg
push
bound
sbb
adc
xchg
sbb
mov
and
inc
pop
cmp
mov
addr16
xchg
call
push
mov
jo
inc
xchg
xchg
addr16
xor
push
xchg
sbb
push
ss
cdq
xadd
scas
aaa
sub
dec
mov
sbb
adc
pushaw
in
lds
inc
inc
inc
cmp
xor
jmp
test
test
mov
mov
xchg
add
xchg
in
xchg
loope
mov
mov
sbb
sbb
fiadd
shl
js
aaa
xchg
mov
sbb
cmp
std
xor
leave
sbb
mov
push
rol
outs
jecxz
mov
cld
fstp
push
gs
dec
xchg
into
or
sub
aaa
std
mov
or
daa
mov
call
push
mov
xor
movs
mov
adc
retf
call
fisttp
int
dec
cdq
mov
fst
fdiv
add
rcl
mov
scas
xor
ds
jns
and
cmp
pop
adc
add
xchg
mov
fstp
cld
adc
imul
xchg
push
push
push
mov
imul
pop
xor
dec
sti
push
test
add
pop
cmp
mov
dec
in
imul
jmp
aaa
push
mov
jae
imul
repz
shl
lods
retf
sbb
mul
mov
and
jge
or
loope
dec
push
(bad)
std
test
sub
dec
into
mov
(bad)
retf
in
xor
adc
sub
sub
jl
inc
cdq
repz
std
ss
add
daa
jmp
loope
xchg
fdivr
sub
iret
in
dec
pop
addr16
push
jecxz
pop
and
cld
mov
fsubr
ss
xor
push
mov
std
out
fisub
(bad)
mov
cli
mov
ss
and
dec
dec
das
fadd
stos
mov
adc
ss
es
add
or
arpl
dec
pop
or
and
mov
or
xchg
hlt
or
or
push
(bad)
(bad)
aam
xchg
cld
pop
fisubr
fild
jo
adc
retf
jnp
cmp
cdq
or
xchg
in
icebp
ret
jne
inc
stc
rcr
fbld
adc
cmp
mov
enter
aam
fisub
(bad)
xlat
cli
loope
xlat
(bad)
loope
(bad)
mov
mov
ss
push
cli
repz
cmp
inc
push
jp
inc
cdq
mov
mov
cmp
data16
stos
push
mov
ret
cmp
dec
mov
loope
fdivrp
sub
scas
fs
adc
or
ds
sub
xor
xor
int
xor
mov
(bad)
mov
test
rcl
jnp
popf
sbb
jns
xor
mov
inc
test
jmp
imul
xor
fisubr
pop
mov
fiadd
repnz
mov
push
jbe
(bad)
jp
xchg
jne
pop
fstp
mov
sbb
ret
sub
in
xor
inc
dec
in
inc
rcl
(bad)
xchg
and
in
sar
adc
test
sbb
or
jmp
inc
movs
pop
and
sub
fsub
add
(bad)
dec
dec
xor
div
inc
in
and
xchg
inc
scas
clc
pop
dec
mov
ins
add
(bad)
xchg
sbb
mov
xchg
mov
jmp
repnz
mov
shr
jbe
(bad)
pop
sti
test
mov
mov
mov
xchg
out
in
pop
pop
mov
jns
pop
add
cmps
pop
clc
mov
das
jecxz
mov
dec
ret
in
add
inc
sar
bound
mov
sub
xchg
mov
cmp
pop
mov
xlat
mov
repnz
rcr
movs
fmul
(bad)
movs
(bad)
sar
mov
xlat
repnz
(bad)
fistp
cmp
xchg
mov
das
add
cmp
adc
fimul
rcr
fxch
xlat
cli
push
rcl
sub
and
out
pop
je
jmp
sub
sbb
adc
das
nop
fwait
jecxz
mov
sbb
es
and
or
movs
mov
int3
aas
or
push
popa
(bad)
outs
(bad)
dec
shr
jle
pop
jge
adc
adc
inc
dec
mov
lods
cmps
or
jge
xchg
mov
push
cmp
jae
sub
jae
push
stos
xchg
neg
mov
cdq
shr
xchg
sbb
mov
arpl
adc
mov
in
imul
pop
add
stos
daa
add
xchg
fnsave
push
jmp
rol
push
(bad)
pop
sbb
mov
fisubr
pop
test
add
mov
mov
popa
adc
push
jo
mov
pop
ins
ds
push
test
cmp
out
popa
push
cmp
js
xor
adc
in
popf
(bad)
arpl
push
shr
(bad)
push
add
sbb
shr
stos
inc
cli
mov
mov
es
(bad)
arpl
imul
and
mov
cs
or
call
push
mov
nop
mov
icebp
add
cmc
mov
mov
test
aam
xor
push
jae
jb
(bad)
pushf
or
cwde
add
mov
xchg
add
and
(bad)
xor
stos
(bad)
jg
movs
mov
rcr
aam
fcmovne
cmps
mov
in
lods
int3
stos
(bad)
test
in
repnz
fmul
(bad)
lods
(bad)
(bad)
loope
xlat
out
loope
xlat
jp
mov
cli
mov
xchg
adc
cmps
add
call
cs
js
xchg
pop
ds
add
stos
cli
xchg
fcom
sub
sub
cdq
and
jmp
xor
inc
daa
adc
add
movs
jns
add
cmp
loope
stos
ins
fcom
fistp
pop
div
sub
outs
loop
inc
jge
in
jmp
out
mov
mov
(bad)
cs
adc
cmp
mov
fcmove
dec
unpckhps
sahf
jae
cmp
push
sub
es
call
lods
popa
out
outs
ss
lock
out
cmp
sub
jl
leave
pop
mov
adc
je
fwait
jno
sub
xchg
sbb
adc
pop
mov
xchg
push
lds
cmps
cdq
jae
jae
fistp
mov
mov
inc
dec
jno
xor
fisttp
sub
jno
jl
sti
(bad)
adc
out
sbb
popa
xchg
test
sahf
mov
jns
call
fisttp
dec
sbb
dec
jns
loop
mov
push
mov
jb
cwde
mov
push
push
cmp
cpuid
gs
mov
xchg
test
jl
add
jns
sbb
push
and
and
shr
inc
gs
(bad)
in
cmp
in
popa
in
cs
loop
dec
aam
(bad)
lods
scas
repnz
jmp
push
mov
jne
std
movs
clc
sti
js
ins
ins
push
in
lods
and
std
xchg
inc
xor
mov
dec
std
adc
test
xor
pop
jp
(bad)
sub
sub
or
rol
pop
inc
mov
test
xchg
in
jo
int
stos
and
jb
ins
or
cmp
push
rol
dec
shr
les
aas
push
and
pop
lods
pop
adc
push
sbb
xor
jmp
or
in
sub
pop
icebp
dec
mov
leave
je
test
jnp
jnp
into
sbb
fidivr
inc
movs
push
jl
add
pop
pop
inc
(bad)
imul
inc
cmp
lea
adc
mov
jl
mov
adc
pop
test
mov
adc
cmp
pop
movs
cmp
jno
repnz
dec
outs
lods
int
in
xor
js
pop
pop
xchg
lock
sub
mov
xchg
int
leave
(bad)
rol
imul
lahf
scas
cwde
sbb
xchg
imul
and
add
ret
inc
aad
push
xor
loope
fsubp
mov
sub
dec
fild
dec
xchg
pushf
pusha
ds
addr16
leave
loop
pop
mov
or
jno
fcomp
adc
fwait
call
xor
adc
scas
adc
push
in
ja
mov
xor
mov
pop
fisub
pop
jecxz
jnp
sti
fnstenv
sahf
loop
cld
gs
jb
nop
or
fs
sub
and
loope
pop
adc
ror
ss
mov
hlt
adc
cmp
push
sub
fld
inc
jmp
xor
xor
and
shl
push
jecxz
scas
and
ds
sub
call
sbb
loop
stos
in
push
mov
rcl
iret
and
(bad)
mov
ds
dec
call
leave
cmp
or
and
cdq
test
push
cdq
jns
cmp
cld
movs
cmp
dec
and
stos
mov
mov
frstor
push
inc
ret
mov
mov
fild
(bad)
mov
call
jecxz
cmp
bound
cwde
jecxz
and
call
inc
adc
ret
mov
xchg
les
pop
sub
sahf
dec
sub
jp
adc
pop
das
cmp
std
adc
dec
push
rcr
inc
out
pusha
(bad)
les
xor
pop
test
or
adc
loope
gs
adc
adc
xor
and
shl
push
jb
mov
in
and
inc
popa
and
pop
pop
test
cmc
dec
leave
pop
aas
mov
xor
mov
das
call
cmps
rcl
mov
test
xchg
xchg
int
out
jnp
xchg
jmp
xor
cwde
cmp
push
mov
cli
loope
sub
imul
mov
mov
adc
bound
popa
sub
lea
pop
aam
xchg
inc
jno
leave
add
jle
test
push
or
js
jae
das
jae
aas
cdq
mov
popa
mov
ss
loope
push
or
or
dec
inc
dec
repz
mov
xchg
push
call
icebp
aad
lods
xchg
std
movs
cmps
push
aam
mov
or
fisub
sti
pop
imul
mov
adc
cld
rol
mov
lods
jne
pop
adc
lock
dec
call
add
mov
xchg
adc
inc
popa
add
and
jne
xor
xchg
jne
pop
icebp
shl
mov
sbb
stc
or
(bad)
loope
popf
push
out
mov
call
push
add
and
dec
jno
mov
retf
push
mov
adc
out
cmp
xor
loope
inc
xlat
xor
mov
fldenv
test
fnstsw
iret
sub
or
je
pop
mov
jno
push
imul
and
das
ds
cmp
push
jnp
adc
mov
out
or
or
jbe
loope
shl
dec
mov
call
pop
adc
xor
push
ja
(bad)
xor
jle
pop
jecxz
icebp
dec
sahf
ret
sbb
jne
and
adc
outs
push
scas
jo
cdq
bound
xchg
ins
ins
das
std
in
pop
stos
and
movs
popf
cdq
repnz
pop
xchg
ins
int
stc
adc
dec
inc
jmp
jge
cmp
adc
retf
imul
stos
adc
movs
bound
pop
xchg
icebp
adc
push
mov
lods
je
fidivr
add
jl
lods
in
fidivr
lds
icebp
pop
imul
ins
daa
mov
cmp
cld
mov
push
add
ss
mov
cmp
popa
es
push
sbb
xor
js
mov
mov
push
push
(bad)
push
adc
jo
xlat
jbe
scas
push
daa
xor
outs
ss
lods
imul
lods
push
mov
push
(bad)
in
cmc
ja
sub
lods
lea
dec
sti
push
loopne
pop
xlat
push
ins
test
mov
mov
cmps
inc
sbb
ins
enter
push
push
(bad)
and
push
int
cmps
dec
jae
inc
das
mov
pop
ret
or
cmp
cmps
jbe
loope
das
jb
jmp
rol
jb
xor
mov
shl
fstp
add
ss
out
and
sbb
pushf
pop
jae
mov
jnp
aam
or
adc
dec
test
call
mov
mov
adc
ja
out
(bad)
push
test
and
(bad)
sti
sbb
xor
popa
outs
sub
bound
sbb
adc
mov
icebp
std
push
loopne
sub
sbb
push
loopne
push
cs
cmp
adc
jae
fistp
stos
or
sti
das
pop
sti
mov
ins
pop
xor
mov
rcl
test
rol
movs
(bad)
xlat
(bad)
mov
test
cli
loopne
adc
cmps
inc
push
clc
data16
dec
les
add
(bad)
test
ss
mov
sub
sar
jno
fist
pop
mov
push
sub
mov
(bad)
ret
xchg
push
pop
pop
(bad)
sbb
ror
add
dec
push
leave
mov
(bad)
jae
or
movs
(bad)
cdq
inc
ror
repz
cli
xor
pop
sbb
sahf
jl
or
lds
dec
xchg
(bad)
enter
cmps
mov
or
repnz
call
(bad)
out
out
push
jg
dec
push
ds
xchg
pop
adc
in
sahf
into
mov
jnp
inc
fnstsw
add
mov
jo
cmp
movs
sbb
nop
fbstp
in
stos
outs
pusha
enter
punpckhdq
and
lock
add
sahf
xchg
lahf
pop
sub
dec
out
cmovb
imul
movs
popf
popf
inc
mov
jnp
cmp
mov
mov
inc
xchg
addr16
mov
hlt
lock
pop
inc
scas
push
out
dec
icebp
sub
dec
cmp
fidiv
fs
cdq
adc
inc
nop
daa
hlt
push
jae
mov
push
jb
xchg
add
jmp
or
jne
neg
sub
es
xchg
call
lds
mov
lock
(bad)
mov
jns
sbb
adc
xchg
sbb
push
or
outs
shl
sbb
xadd
and
icebp
out
xchg
sar
xor
in
sahf
clc
sub
std
mov
aas
mov
xchg
daa
cdq
ror
addr16
call
xchg
mov
push
cs
arpl
test
xor
jle
push
mov
jo
and
outs
mov
stc
loop
push
(bad)
hlt
out
ins
cwde
retf
(bad)
mov
or
movs
sub
imul
pop
ret
mov
movs
add
retf
add
add
and
js
inc
add
(bad)
pop
dec
mov
cmp
jmp
ret
out
inc
pop
inc
test
clc
popf
(bad)
sbb
mov
cs
in
bound
(bad)
or
scas
lods
push
setnp
in
and
push
outs
cmp
sub
pop
xchg
out
fs
mov
dec
stos
or
addr16
idiv
(bad)
out
jmp
push
mov
cmp
(bad)
std
fiadd
jl
jle
pop
jl
push
xor
in
gs
ins
mov
jp
cmp
loop
mov
mov
cmps
mov
mov
inc
icebp
dec
dec
out
push
mov
sbb
cld
xor
mov
pop
ss
xor
xchg
or
ret
inc
daa
(bad)
xor
and
arpl
and
out
adc
mov
sbb
jg
sub
sti
out
or
mov
mov
pop
push
or
adc
lods
xchg
aam
sub
cmp
js
scas
sub
aaa
dec
out
and
mov
pop
adc
mov
jge
add
jge
cmc
ins
push
mov
jmp
push
lea
sahf
cs
into
cmps
sub
mov
sbb
(bad)
movs
inc
inc
cmp
ret
ja
lods
jmp
fs
in
fstp
addr16
dec
inc
fcom
movs
fadd
jnp
(bad)
out
push
movs
jno
or
scas
xor
cmp
call
jmp
enter
(bad)
mov
cli
fdiv
inc
repnz
int3
aaa
lds
retf
rcl
stos
test
loope
jo
fiadd
jmp
xor
(bad)
in
mov
mov
xchg
pop
(bad)
cs
ss
inc
jp
imul
inc
les
mov
mov
cmp
aas
mov
sub
jge
hlt
mov
push
js
adc
mov
clc
imul
pop
pop
fwait
xor
call
hlt
and
xor
imul
or
dec
fadd
fistp
pop
in
sub
lods
movs
jbe
pop
stc
adc
jo
xor
jg
popf
push
int3
or
dec
adc
retf
mov
pop
dec
std
inc
gs
addr16
test
(bad)
std
mov
sbb
rcl
pusha
and
mov
(bad)
nop
fwait
test
lea
cmp
push
pop
sbb
push
jp
cmps
push
cmc
lock
and
pusha
pop
pop
and
jp
(bad)
retf
iret
ret
and
shl
and
popa
mov
add
ins
inc
sub
in
ins
inc
mov
nop
clc
inc
and
cmps
mov
std
xor
xchg
push
jno
int
mov
aas
pop
mov
pop
mov
jnp
shl
and
add
sbb
mov
popf
sub
adc
ficom
ret
adc
dec
in
retf
test
jnp
sbb
icebp
sbb
add
pop
pop
fstp
cwde
inc
test
pushf
xor
jecxz
xor
inc
pop
repnz
cli
(bad)
xlat
push
adc
jmp
xchg
and
dec
pop
popf
adc
(bad)
jb
fisttp
cs
sbb
movs
(bad)
mov
and
jo
mov
cmp
mov
mov
mov
enter
mov
adc
aad
sbb
cld
jne
ja
push
leave
out
rcr
mov
mov
pop
dec
idiv
inc
ror
mov
dec
clc
imul
imul
fadd
mov
jne
daa
sub
mov
inc
sahf
jmp
add
push
std
or
leave
aaa
mov
mov
icebp
test
test
cmps
mov
cs
mov
mov
movs
add
cmc
push
retf
aad
cmp
push
pop
sbb
and
or
xchg
add
imul
fcomp
cmp
movs
into
movs
rcl
movs
enter
test
adc
mov
outs
and
mov
push
(bad)
fsubr
(bad)
mov
fsubr
popf
out
mov
push
rcr
in
popf
out
and
mul
cld
xlat
xchg
and
in
mov
in
xchg
(bad)
movs
loop
mov
and
(bad)
movs
pusha
push
xchg
mov
sti
clc
and
shl
xor
sahf
ins
int3
mov
loop
mov
movs
test
out
test
jp
movs
aad
clc
ins
int3
xlat
out
adc
cli
in
lahf
jle
loopne
mov
xlat
les
rcl
mov
(bad)
iret
(bad)
movs
(bad)
(bad)
loope
xlat
jp
les
cmp
pop
sar
add
xchg
mov
rcl
mov
aad
cmps
cmp
cs
and
jne
cwde
inc
aam
cmps
leavew
xor
sahf
cs
add
xchg
rcr
fucomi
mov
pop
and
sub
mov
pop
ins
pop
les
rol
fdivp
xchg
cmps
xchg
inc
or
fisub
mov
mov
jne
xchg
mov
sbb
inc
shl
cld
xor
mov
adc
cdq
(bad)
(bad)
cmps
in
nop
dec
xchg
push
mov
xchg
push
addr16
(bad)
aad
inc
cwde
add
dec
jle
cmc
add
mov
inc
adc
movs
ds
mov
add
push
sub
in
nop
btc
mov
aam
cwde
jecxz
sub
inc
mov
outs
adc
ja
mov
je
cmp
push
test
imul
or
ret
and
sub
jo
cmps
(bad)
outs
jecxz
addr16
out
fnstcw
add
jp
je
or
mov
scas
mov
ret
retf
aaa
mov
cmps
xchg
lea
iret
mov
adc
in
and
fistp
cmp
add
pop
test
stos
(bad)
cs
bound
ret
sub
(bad)
lods
cmovae
das
mov
int3
ror
popa
mov
pop
pop
jne
or
push
test
pop
pop
cmps
add
cmp
add
movs
int3
shr
movs
enter
(bad)
sar
mov
add
cli
in
(bad)
mov
es
add
sar
adc
xchg
std
(bad)
cmps
mov
xor
pop
jno
aaa
jb
out
push
stos
add
fnstcw
add
shl
pop
and
out
mov
push
ret
hlt
mov
std
and
daa
dec
cld
push
add
int3
mov
(bad)
js
add
sub
pop
into
xor
pop
dec
add
fiadd
(bad)
fimul
push
xlat
xchg
xor
dec
sahf
aaa
out
test
into
ins
test
int3
js
mov
dec
gs
mov
scas
in
inc
xor
jle
mov
std
push
add
fistp
inc
push
inc
js
sub
xor
push
pushf
xor
icebp
xor
enter
pop
push
cmp
or
lock
jo
xlat
add
loopne
adc
sub
sbb
jl
icebp
pop
push
out
sbb
les
xor
in
into
into
out
ins
rcr
sub
rol
lock
sub
fadd
test
into
add
aaa
sub
sti
les
sub
out
cmp
sar
pop
mov
add
jle
fs
push
aad
pop
inc
test
rcr
cmc
sub
cmp
jmp
cmp
les
adc
and
xchg
imul
sub
pusha
ins
xor
jnp
xor
mov
inc
pusha
adc
mov
out
push
pop
retf
sbb
push
in
mov
les
mul
(bad)
sar
mov
adc
data16
jns
scas
nop
fcompp
rcl
dec
test
icebp
xchg
sub
fs
les
leave
scas
mov
stos
cmp
fidivr
ja
std
mov
fcmovnbe
xor
or
mov
aas
pop
pop
ja
out
pushf
adc
and
test
xor
retf
dec
jnp
in
sub
fsubr
ins
jne
cmps
xchg
pop
add
sar
mov
push
pop
ret
daa
(bad)
push
add
jmp
loope
rol
outs
arpl
ret
out
mov
push
pop
gs
cmc
ins
push
push
cs
mov
sbb
push
pop
scas
je
bound
data16
cmp
fcmovnb
lods
jbe
sub
(bad)
test
mov
cmps
mov
(bad)
stos
and
ret
retf
sbb
std
mov
test
test
push
and
popa
in
xchg
xchg
in
push
stos
push
scas
test
dec
mov
xor
adc
imul
nop
call
cs
jno
jb
and
mov
sub
push
dec
inc
mov
add
mov
pop
xor
out
fadd
add
jmp
or
pop
jle
inc
adc
or
ficom
xor
cwde
push
mov
outs
inc
mov
cmp
and
loop
push
ror
fwait
ds
add
add
pop
push
pusha
fild
mov
mov
loopne
mov
add
icebp
outs
idiv
popf
add
ret
add
sti
mov
popa
aad
mov
ffreep
mov
xor
lahf
das
outs
jecxz
pop
test
stos
jmp
stc
mov
or
xor
sbb
xor
sub
outs
(bad)
movs
pusha
idiv
je
sahf
ficom
push
retf
aas
jb
push
xor
push
std
movs
clc
stos
aad
mov
es
inc
inc
push
loope
sahf
std
fmul
scas
in
fadd
fisubr
sub
es
push
mov
mov
xor
aaa
aam
lods
cmc
daa
cmps
cmp
fucomip
or
fisubr
dec
out
int
xchg
jns
mov
pop
xchg
std
dec
ret
adc
inc
gs
shl
sbb
pop
mov
lea
movs
out
pop
or
mov
lahf
(bad)
sbb
sbb
dec
fdiv
shl
div
dec
cmps
repnz
(bad)
loopne
adc
jp
push
mov
ror
jo
jb
sub
jns
imul
daa
mov
rol
outs
sbb
xor
dec
pusha
sbb
pop
add
stc
dec
je
dec
mov
(bad)
ffree
inc
test
sbb
outs
or
adc
out
sbb
enter
jns
xchg
dec
xchg
xchg
or
adc
ja
jae
popa
mov
jb
xchg
call
xchg
cmp
in
xchg
(bad)
(bad)
lock
add
sbb
add
jge
scas
(bad)
out
dec
add
inc
dec
jae
xchg
sub
retf
aad
jo
mov
sahf
enter
jg
push
mov
mov
pushf
inc
ret
cmp
stos
aam
test
or
in
lahf
out
cmp
pop
cli
or
mov
gs
cmp
(bad)
ins
aaa
pop
cs
mov
aaa
cli
sbb
push
popf
or
mov
(bad)
dec
inc
push
retf
pop
ss
les
adc
pop
aaa
call
stos
add
and
ds
out
pop
inc
sbb
fs
inc
aaa
leave
fiadd
dec
cld
cdq
push
jl
adc
loopne
dec
fcom
div
(bad)
push
push
pop
fstp
push
popa
jmp
push
retf
xlat
(bad)
xchg
fsub
imul
jmp
stos
into
mov
xor
bound
xchg
sbb
dec
and
mov
xlat
ret
fcmovne
out
add
sahf
sbb
ss
add
or
mov
aas
or
aaa
cmp
push
ja
nop
mov
sub
cmp
xlat
enter
mov
sbb
out
popf
dec
movs
outs
cmps
das
fwait
jns
outs
pop
mov
mov
sub
pop
popa
cmp
inc
push
push
test
lods
inc
(bad)
(bad)
stc
mov
iret
xchg
fs
adc
mov
(bad)
inc
je
leave
(bad)
and
sub
les
in
mov
mov
sbb
fwait
adc
cmp
and
mov
or
or
adc
lods
mov
push
fisttp
mov
rcl
push
pop
jne
in
jns
xchg
aaa
data16
push
std
dec
pop
cmpps
pop
rcl
(bad)
sar
loopne
or
lea
jl
pop
xor
jge
xchg
lods
xchg
test
and
push
inc
int3
outs
into
lock
test
lods
sbb
jbe
test
cs
rcl
repnz
out
sbb
mov
mov
fist
in
dec
ss
jnp
sahf
fdivr
cmp
push
aam
sub
sub
push
sbb
push
push
adc
in
or
or
push
lds
das
push
shl
xlat
mov
iret
aas
test
mov
push
test
xor
push
mov
sub
daa
cmp
je
sub
add
pop
cmp
fcomp
adc
imul
mov
or
jno
bound
stos
xor
pushf
mov
lock
jg
outs
pop
inc
xchg
pop
ret
(bad)
ins
sbb
sbb
das
cmc
jg
jmp
and
xlat
test
stc
repz
lock
xchg
mov
mov
mov
mov
test
hlt
push
into
and
jo
lods
mov
cmp
jp
xor
sti
jno
cmp
push
or
cmc
fcom
and
aaa
ins
js
cmps
mov
idiv
(bad)
ret
call
retf
es
(bad)
mul
push
xchg
(bad)
in
push
push
in
adc
cmp
sbb
movs
push
jl
cdq
lods
xchg
ss
aad
dec
les
je
js
dec
repz
rol
jnp
shl
lods
cmp
ret
int
jp
jo
daa
je
call
popf
or
xor
jle
cld
mov
jnp
arpl
jecxz
mov
lods
mov
push
out
nop
int
cld
jmp
addr16
xchg
sbb
mov
and
out
jnp
and
xchg
jnp
push
retf
movs
cli
adc
retf
retf
(bad)
repnz
mov
in
push
or
ja
loopne
fist
fnstenv
sub
in
inc
js
stos
mov
push
cwde
adc
lea
aas
daa
in
and
cdq
cld
(bad)
mov
add
or
xor
jae
sub
push
daa
lahf
in
adc
out
and
push
xor
es
imul
adc
idiv
cmp
jmp
bound
cmp
push
je
pop
(bad)
push
call
iret
inc
les
mov
push
mov
in
inc
mov
jmp
mov
sbb
dec
movs
inc
nop
jl
lock
cdq
call
and
in
lock
mov
repnz
push
push
sub
repz
mov
mov
dec
std
in
push
pop
and
stc
repz
enter
repz
in
std
jecxz
not
push
ins
mov
icebp
stos
jle
test
lds
jge
dec
jo
gs
sbb
rcr
xor
jae
not
sbb
cld
(bad)
mov
mov
rcl
imul
lahf
xchg
cmp
fwait
retf
(bad)
push
pop
mov
mov
loop
rcr
pop
mov
sti
inc
inc
in
jnp
sub
loope
mov
test
movs
fst
out
shl
movs
in
fisub
enter
int3
xlat
imul
aam
repnz
fucomi
(bad)
aam
jmp
retf
into
mov
call
in
push
std
call
sti
mov
nop
xchg
stos
std
clc
sbb
nop
mov
test
aam
jmp
repz
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
fst
mov
movs
leave
scas
mov
mov
xchg
add
ror
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
add
ror
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fxch
xlat
out
sub
xlat
mul
rcl
movs
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
inc
(bad)
xlat
mov
(bad)
out
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
dec
add
movs
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
inc
(bad)
xlat
jmp
and
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
(bad)
push
shl
mov
(bad)
shl
movs
(bad)
(bad)
movs
(bad)
xlat
(bad)
stc
rcl
stos
mov
inc
add
cmc
rcl
cmps
mov
daa
stos
and
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
daa
test
push
xchg
pop
test
xchg
in
data16
cdq
sbb
and
pop
xor
fsub
pusha
mov
adc
inc
mov
sbb
idiv
push
mov
dec
clc
repz
clc
ds
pop
mov
or
pop
stos
push
repz
loope
rcr
rep
in
mov
leave
jl
push
fsub
pusha
mov
adc
inc
mov
sbb
idiv
push
mov
dec
clc
repz
clc
ds
pop
mov
or
pop
stos
push
repz
loope
rcr
rep
in
mov
leave
jl
push
fsub
pusha
mov
adc
inc
mov
fmul
test
movs
(bad)
mov
cli
movs
enter
(bad)
sar
movs
(bad)
xlat
(bad)
loope
xlat
scas
in
rcr
mov
rcl
movs
sub
aad
jnp
in
outs
clc
sub
jmp
mov
sub
xchg
aas
mov
neg
test
div
call
mov
(bad)
js
int3
fsubr
aad
jnp
in
outs
clc
sub
jmp
mov
sub
xchg
aas
mov
neg
test
div
call
mov
(bad)
js
int3
fsubr
aad
jnp
in
outs
clc
and
xor
sbb
cwde
add
inc
aas
dec
arpl
and
pusha
inc
sar
movs
shl
mov
pop
push
lods
in
repz
lahf
mov
and
add
sahf
in
cld
lods
add
dec
inc
inc
ret
(bad)
cli
movs
xchg
add
call
(bad)
movs
shl
mov
pop
push
lods
in
repz
lahf
mov
and
add
sahf
in
cld
lods
add
dec
inc
inc
ret
(bad)
cli
movs
xchg
add
call
xchg
movs
shl
(bad)
pop
pushf
xor
cmp
in
lods
mov
xchg
cli
movs
enter
(bad)
sar
test
(bad)
xlat
scas
jmp
add
lods
(bad)
xlat
cli
mov
push
mov
or
pop
jmp
out
cmp
adc
lods
loop
dec
mov
push
xor
sub
stos
xor
out
std
enter
addr16
adc
js
pusha
data16
sbb
call
push
ds
jle
sar
fstp
(bad)
mov
mov
cmps
or
pop
jmp
out
cmp
adc
lods
loop
dec
mov
push
xor
sub
stos
xor
out
std
enter
addr16
adc
js
pusha
data16
sbb
call
push
ds
jle
sar
fstp
(bad)
mov
mov
cmps
or
pop
jmp
out
cmp
adc
lods
loop
dec
mov
push
sub
mov
lods
(bad)
rcl
adc
(bad)
std
xchg
js
sar
push
pop
daa
xor
mov
cli
enter
scas
es
jnp
std
sbb
sar
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
call
psrld
pop
iret
es
clc
stc
rcr
pusha
xlat
fsubr
(bad)
xlat
cli
mov
(bad)
movs
rcr
movs
(bad)
xlat
(bad)
jmp
adc
mov
ret
lahf
mov
add
movs
in
cli
mov
push
test
or
cs
arpl
mov
or
jbe
popf
push
sub
mov
mov
mov
enter
aad
mov
movs
or
xchg
and
sbb
mov
ins
pop
out
test
add
inc
push
push
clc
arpl
inc
int3
in
xor
jecxz
mov
sub
adc
stc
jae
in
and
jo
cmc
xchg
sahf
mov
sbb
sub
mov
mov
mov
enter
aad
mov
movs
or
xchg
and
sbb
mov
ins
pop
out
test
add
inc
push
push
clc
arpl
inc
int3
in
xor
jecxz
mov
sub
adc
stc
jae
in
and
jo
cmc
xchg
sahf
mov
sbb
sub
mov
mov
mov
enter
test
xlat
lahf
rep
ror
fbld
sbb
xor
int
add
pop
sti
sub
pop
mov
sbb
fcomp
push
xor
push
ss
adc
cmp
lods
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
jb
fldcw
mov
es
add
mov
(bad)
mov
rcl
movs
(bad)
sar
mov
pop
aam
pop
adc
scas
aam
fld
xlat
cli
inc
inc
xlat
int
gs
and
mov
bnd
(bad)
sti
movs
xchg
or
inc
sar
(bad)
fsubp
(bad)
push
push
test
mov
lahf
mov
aaa
add
jmp
fsubr
add
dec
rcl
mov
sti
movs
xchg
or
inc
sar
(bad)
fsubp
(bad)
push
push
test
mov
lahf
mov
aaa
add
jmp
fsubr
add
dec
rcl
mov
sti
movs
xchg
or
inc
loop
repnz
sbb
nop
test
(bad)
out
aad
sbb
jmp
xchg
aas
je
xor
mov
sbb
or
fwait
jg
out
aas
je
xor
mov
sbb
or
fwait
jg
out
pop
je
in
pop
mov
add
(bad)
out
in
(bad)
cmps
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
and
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
xor
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fadd
inc
sbb
mov
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
stc
inc
in
lods
mov
xchg
(bad)
movs
enter
(bad)
sar
mov
inc
(bad)
js
ret
adc
inc
adc
test
shl
stc
push
rol
push
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
push
and
or
mov
and
int3
sbb
jnp
and
rcr
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
sbb
jo
lea
mov
mov
cli
dec
pop
mov
mov
sbb
aaa
fld
and
movs
(bad)
stos
mov
movs
rcl
(bad)
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
adc
cli
in
test
push
cmp
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
push
ret
(bad)
imul
es
enter
or
or
lods
das
jge
xor
xor
rcl
sbb
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
push
ins
daa
push
sub
sub
xor
(bad)
stos
mov
movs
rcl
movs
(bad)
xlat
(bad)
mov
adc
lds
mov
(bad)
test
in
jmp
ror
adc
jo
jp
pop
imul
push
fwait
cmp
jp
push
iret
jnp
or
adc
jo
jp
pop
imul
push
fwait
cmp
jp
push
iret
jnp
or
adc
push
mov
mov
cmp
out
cli
lods
ror
jp
jle
out
jle
sbb
push
movs
mov
push
jmp
inc
mov
or
fwait
sbb
shr
jle
sbb
push
movs
mov
push
jmp
inc
mov
or
fwait
sbb
shl
jle
outs
mov
repnz
popf
lahf
cs
cmp
add
cmp
std
mov
(bad)
test
sar
retf
add
int3
fcomi
test
enter
aam
fidiv
in
(bad)
loop
in
(bad)
mov
out
in
call
jecxz
in
jecxz
jmp
xchg
xchg
stos
(bad)
mov
fst
repnz
xlat
out
mov
(bad)
ficom
call
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmps
in
push
loope
aad
mov
enter
xlat
nop
mov
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
cli
test
in
in
movs
mov
sar
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
int3
xlat
out
xchg
cmp
std
lods
enter
test
mov
and
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
dec
enter
stos
adc
cmp
movs
mov
mov
popf
(bad)
pop
fisttp
sahf
popa
pop
pop
inc
cmp
add
push
jb
lods
movs
pop
and
inc
fdivr
adc
mov
sbb
mov
jl
pop
test
cs
inc
cmp
xor
pop
mov
cld
popf
shl
dec
fild
mov
mov
push
int
stc
sub
mov
ror
push
inc
add
dec
ret
out
ss
call
dec
mov
push
sbb
cs
sbb
mov
xchg
out
(bad)
in
cmc
das
scas
pop
loopne
ins
jp
je
stos
cld
imul
int
or
sbb
adc
lds
mov
xchg
cmps
add
jg
pop
sahf
div
retf
push
stos
and
mov
mov
rol
ds
stc
sub
shr
or
jnp
cwde
inc
rcr
leave
gs
(bad)
and
adc
not
test
das
cmps
pop
adc
mov
inc
xor
stos
cmp
into
mov
cs
jge
int
aad
stos
push
into
fst
mov
mov
ins
mov
sub
add
cmpxchg
fs
sub
mov
bound
movs
iret
mov
das
fist
lock
data16
mov
in
idiv
imul
adc
sbb
bound
fst
adc
les
sahf
cli
sti
pop
and
cmp
(bad)
or
(bad)
call
pop
(bad)
aaa
mov
cwde
dec
xlat
xchg
jg
jnp
inc
inc
jo
leave
xor
daa
pop
cmovo
and
les
mov
and
push
push
ja
mov
es
xor
(bad)
xlat
movs
retf
dec
fistp
lds
add
xlat
cmp
pop
sbb
movs
(bad)
iret
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
add
rcl
movs
fadd
(bad)
test
rcl
in
(bad)
fistp
loope
sbb
and
call
cmp
std
mov
rcl
add
fnstsw
popf
mov
je
xchg
jmp
push
(bad)
call
xor
push
mov
jl
shl
imul
addr16
cmp
jb
fsub
mov
stc
dec
mov
mov
mov
or
mov
(bad)
inc
add
dec
cmp
inc
in
cwde
dec
icebp
and
shr
les
mov
and
mov
xchg
icebp
xchg
fidiv
add
sub
xor
jg
xchg
iret
stc
jmp
mov
je
sti
shl
sub
fdiv
sub
dec
xchg
push
fmul
iret
xchg
pop
dec
jo
fcomp
mov
xlat
or
push
pop
jmp
or
xchg
sub
std
pusha
inc
sub
xor
mov
lds
pop
sbb
shr
ja
not
jns
ins
(bad)
inc
ds
jmp
inc
ja
sahf
lock
mov
das
ror
inc
push
popf
sbb
mov
and
jo
stos
mov
test
mov
pop
push
mov
(bad)
ss
inc
ins
inc
fadd
ds
jae
mov
mov
mov
jne
outs
dec
pusha
aam
stos
or
jb
lods
daa
arpl
out
popa
xchg
ss
aas
out
and
adc
add
pop
mov
aas
mov
pop
sahf
aaa
jns
aas
sbb
adc
or
adc
imul
into
into
shr
mov
lahf
dec
add
not
int3
xchg
dec
in
sbb
mov
std
jns
mov
xchg
or
push
cmp
jle
lods
nop
lods
push
imul
leave
jo
in
pop
es
add
into
cmps
push
mov
daa
loope
dec
push
or
jecxz
mov
push
in
shl
mov
iret
test
mov
retf
xchg
pop
jmp
sbb
pop
jo
sub
xor
in
lahf
pop
push
pop
jge
mov
jno
xchg
out
fdivrp
jecxz
scas
arpl
jg
repz
xor
mov
jge
push
icebp
mov
lods
es
push
sub
pushf
xlat
repz
pop
ror
ficomp
mov
pop
outs
or
dec
test
ja
push
adc
add
mov
xlat
out
movs
aam
(bad)
movs
(bad)
(bad)
lods
(bad)
xlat
(bad)
loope
shl
imul
mul
sahf
add
shl
mov
pop
outs
adc
lods
xor
push
mov
sub
sub
add
in
sub
retf
cwde
lds
sub
push
fcmovnbe
out
fist
imul
sub
push
(bad)
rcl
xor
add
imul
daa
stos
dec
push
imul
test
xor
cld
shl
pop
xor
pop
scas
adc
aam
sub
(bad)
xor
sub
scas
jmp
xchg
add
sti
cmp
jle
sbb
out
mov
movs
lds
cmp
fwait
jg
sbb
ror
out
scas
idiv
movs
add
add
xchg
adc
cmp
mov
dec
stos
mov
(bad)
int
or
lds
mov
xor
icebp
data16
ret
into
outs
repnz
mov
sub
test
pop
mov
lahf
call
pop
mov
fcomp
dec
arpl
jns
pop
mov
jg
cli
and
ins
mov
retf
cld
in
push
nop
gs
dec
in
scas
and
ds
mov
jbe
jbe
push
ror
je
mov
push
sbb
jnp
xor
sub
dec
or
call
fcomp
(bad)
sbb
sub
mov
not
loope
or
mov
sbb
jle
(bad)
mov
iret
jle
mov
cwde
xchg
rol
mov
pop
sub
popa
xlat
mov
lods
(bad)
xlat
cli
test
aam
(bad)
movs
(bad)
(bad)
test
adc
sub
add
jmp
aad
xor
push
sti
and
xlat
cli
adc
push
std
ins
js
in
int3
add
inc
in
out
inc
add
hlt
xchg
xchg
int3
retf
push
sbb
dec
enter
outs
sbb
addps
add
mov
hlt
xor
mov
mov
and
and
mov
call
pop
hlt
aaa
add
dec
mov
and
aas
ins
dec
jg
retf
pop
inc
mov
mov
xchg
ins
inc
enter
adc
arpl
imul
int
sbb
imul
daa
daa
imul
xor
add
mov
iret
or
cdq
xchg
neg
jl
popa
dec
(bad)
fnstsw
mov
cmp
(bad)
or
hlt
mov
dec
or
push
pop
push
loopne
inc
pop
imul
test
fwait
daa
retf
call
add
mov
out
in
out
call
inc
js
dec
adc
jae
push
inc
fcomp
(bad)
mov
dec
add
imul
lods
cmp
jle
dec
mov
popf
neg
mov
and
pop
mov
jae
cmp
daa
mov
adc
lds
sbb
mov
pop
adc
repnz
xchg
jae
mov
out
mov
mov
stos
adc
mov
push
push
jl
jp
xor
lea
into
mov
push
dec
xor
mov
adc
cmp
div
fcomp
jmp
xlat
mul
add
mul
dec
push
jp
inc
xchg
xor
enter
(bad)
sahf
jg
adc
inc
(bad)
sub
jb
lea
xor
es
fld
inc
or
add
cmp
push
jmp
mov
or
adc
out
mov
xchg
push
addr16
adc
fmul
jne
dec
mov
mov
inc
sti
movs
repnz
and
inc
dec
add
cwde
outs
pop
(bad)
iret
psrad
jle
cmp
cwde
lea
clc
jbe
mov
cld
inc
mov
call
int3
mov
ja
xchg
loop
dec
fcom
xchg
out
fcmovnu
lock
xchg
mov
xor
arpl
popa
lahf
lock
inc
dec
mov
imul
and
push
fs
mov
pop
mov
sub
sbb
jae
fsubr
inc
fisubr
into
cmp
call
sbb
(bad)
sbb
xchg
mov
pop
jl
mov
sbb
pop
dec
mov
xchg
imul
adc
test
sar
mov
out
cmp
sbb
call
sub
out
adc
repnz
adc
fsub
int3
cmp
push
fstp
or
cwde
adc
shl
xor
dec
popa
dec
xor
pop
dec
jno
faddp
dec
sahf
inc
mov
arpl
jecxz
loope
and
fimul
sub
pushf
or
pop
cmps
pusha
(bad)
das
movs
hlt
dec
fbld
out
dec
xor
xor
xchg
test
pop
pop
mov
mov
push
mov
dec
or
push
fcomp
sub
push
lods
int
sub
dec
lods
rcl
jnp
loop
xchg
stos
jp
push
sbb
jecxz
mov
enter
cld
jecxz
ret
jl
mov
test
and
iret
xchg
jecxz
xlat
stc
sub
sub
pop
and
cs
fwait
dec
mov
and
inc
add
shl
add
add
mov
push
and
idiv
or
scas
loop
push
pushf
lahf
and
call
mov
jae
dec
jp
movs
neg
jbe
dec
or
aam
sub
out
push
sbb
cwde
loopne
std
fs
push
inc
mov
mov
sub
mov
inc
ret
adc
and
push
mov
jnp
div
inc
rcr
fild
(bad)
adc
push
aad
sub
dec
aas
scas
adc
cld
jmp
pop
test
addr16
xchg
mov
movs
mov
repz
mov
movs
dec
out
sub
add
inc
mov
cmp
leave
ins
cmc
outs
xchg
cmp
mov
dec
in
jmp
adc
sbb
push
or
(bad)
jge
xor
inc
jb
jg
rol
push
(bad)
mov
sahf
jae
aam
mov
or
(bad)
out
xor
adc
push
enter
js
in
lea
jae
(bad)
push
and
mov
stos
mov
jecxz
add
dec
adc
xchg
push
lahf
rcr
pop
lods
jl
pop
jmp
and
js
inc
aaa
xor
ja
lahf
jmp
mov
ss
pop
mov
and
and
dec
add
loop
call
cmc
adc
frstor
popa
xchg
retf
in
ins
push
test
(bad)
inc
lock
(bad)
jnp
sbb
icebp
leave
outs
sahf
mov
outs
into
mov
out
add
call
pushf
lods
pop
test
fwait
push
int3
adc
lods
(bad)
xchg
retf
fisubr
mov
jl
js
mov
jb
pop
xor
add
jmp
xchg
xchg
jno
retf
jns
lods
fwait
scas
sub
in
stos
add
xchg
icebp
add
jle
jns
retf
lods
rcl
inc
call
cmps
jmp
shr
push
loope
add
dec
and
xchg
daa
movs
jmp
inc
xor
push
mov
jno
sbb
pop
cmp
retf
jnp
inc
pop
dec
fimul
and
(bad)
cmc
pop
fistp
lods
std
mov
mov
pop
xchg
jecxz
pop
sbb
pop
pop
cld
in
dec
adc
(bad)
loopne
mov
xor
and
push
imul
jbe
mov
test
mov
repz
ds
adc
pop
cs
dec
test
fistp
mov
push
xchg
popf
sub
jp
pop
jl
or
mov
xor
mov
jae
mov
gs
mov
cmp
dec
fidivr
adc
push
popf
mov
xchg
cmps
addr16
sahf
jp
and
sub
mov
sub
jb
(bad)
shl
sbb
sbb
push
mov
mov
mov
mov
test
rol
mov
adc
pusha
rcl
and
sar
adc
add
jg
scas
xchg
fcompp
rcl
adc
inc
sub
add
jno
outs
cmp
push
(bad)
aas
xlat
dec
in
daa
inc
adc
xchg
loopne
retf
imul
xor
in
mov
bound
imul
mov
out
push
dec
in
jae
xchg
es
xor
push
test
pusha
(bad)
sub
dec
je
jnp
mov
test
jnp
(bad)
jne
rol
mov
jbe
ins
aas
lahf
icebp
xor
sub
outs
mov
dec
xchg
std
cmps
dec
(bad)
das
movs
(bad)
in
jmp
cmps
outs
lds
leave
jl
ss
nop
push
fistp
cmp
jmp
push
movs
and
imul
test
loopne
mov
in
inc
xor
sbb
xor
sbb
daa
pop
and
adc
gs
mov
outs
inc
jnp
xor
aas
int3
sub
sbb
int3
into
shl
(bad)
or
xchg
push
xor
cmp
and
lds
mov
cvtdq2ps
mov
push
or
in
int3
xchg
movs
icebp
push
push
test
cs
in
and
adc
fistp
lsl
jle
push
push
or
add
adc
loopne
lock
push
sub
inc
aad
rcl
adc
ret
add
add
jl
stos
loopne
mov
push
sbb
add
mov
jo
cld
adc
test
adc
ficom
hlt
popf
jmp
sbb
or
jp
ret
daa
xor
push
sbb
push
fiadd
jp
(bad)
sbb
sub
pop
xchg
lds
in
jg
fld
rcl
inc
xchg
xchg
icebp
jne
push
dec
cs
outs
mov
call
xchg
lock
push
and
mov
inc
cdq
repnz
dec
pop
iret
push
mov
xor
and
movs
sbb
daa
xchg
push
cs
sbb
enter
and
aad
mov
stc
lock
inc
(bad)
inc
dec
jl
jno
lds
out
cld
mov
in
repz
ret
ss
push
push
rcl
dec
out
(bad)
fisub
int
(bad)
cmp
iret
jne
les
mov
pusha
mov
cld
jo
daa
dec
pop
(bad)
loope
hlt
dec
loop
(bad)
xchg
sbb
lds
xchg
vpmaxsw
jo
enter
cld
in
icebp
out
or
out
sub
clc
repnz
enter
out
cld
cmps
dec
inc
icebp
popf
mov
mov
inc
popf
xor
pop
sar
(bad)
push
pop
push
push
jecxz
inc
ret
ror
(bad)
(bad)
test
sub
stc
pop
shl
std
add
fdivr
fbstp
or
or
or
inc
pop
jnp
fucomip
adc
xchg
(bad)
stc
adc
lds
or
mov
jb
dec
sub
or
push
lahf
mov
and
add
xor
and
fisubr
or
mov
cli
fdivr
mov
gs
pop
fsubp
out
scas
mov
jbe
pop
popa
rcl
out
adc
les
lock
cmp
into
test
cmp
push
push
or
jp
cwde
fmul
out
dec
adc
push
jle
and
aas
fidiv
mov
movs
sbb
outs
push
shr
inc
dec
std
xchg
push
sub
sbb
push
int3
jge
shl
mov
stos
inc
icebp
in
sbb
mov
and
add
rcl
movs
cmp
mov
test
ret
call
inc
mov
inc
xchg
paddw
enter
sbb
outs
jno
add
retf
inc
ret
out
mov
pop
lock
dec
leave
stos
mov
jge
push
mov
sbb
retf
or
(bad)
cmp
(bad)
shl
xchg
iret
xor
lea
cmp
mov
pushf
(bad)
repz
sub
mov
int3
cwde
sub
addr16
pushf
jecxz
(bad)
(bad)
mov
frstor
pop
retf
dec
and
fstp
mov
iret
sahf
mov
rcr
cld
aam
stos
in
xchg
add
imul
push
gs
cmp
(bad)
movs
shl
and
pop
xlat
aas
loop
add
pusha
lods
scas
iret
faddp
push
(bad)
cmps
icebp
leave
or
std
cwd
rcl
xor
cs
gs
std
es
stos
cli
movs
int3
fcomi
movs
(bad)
xlat
mov
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
test
jp
(bad)
movs
rcl
movs
sub
std
mov
retf
loopne
xchg
push
jb
add
fsub
lds
cmps
movs
inc
popa
sub
mov
fidiv
mov
mov
lahf
and
mov
shl
aam
arpl
les
cmps
movs
in
xor
push
and
les
cld
cdq
les
(bad)
movs
(bad)
cld
xlat
jge
les
mov
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
cmps
clc
push
in
movs
pusha
stos
cli
test
enter
(bad)
(bad)
(bad)
movs
(bad)
xlat
cli
mov
inc
sar
addr16
xchg
mov
pusha
inc
nop
jg
cmp
cmps
cmp
add
rol
pop
cli
mov
jecxz
push
loopne
ins
or
cwde
(bad)
lahf
(bad)
jb
inc
inc
xchg
retf
or
cmp
in
inc
in
cmc
fsubr
sbb
mov
cmc
das
pop
sub
popf
fistp
out
pusha
(bad)
out
mov
movs
div
inc
push
ds
movs
or
pop
mov
mov
cmp
mov
cs
mov
adc
mov
imul
xchg
cmp
xlat
xchg
fcom
push
gs
lods
sub
and
pop
inc
(bad)
shr
imul
adc
mov
mov
fwait
dec
fild
les
lds
jns
ja
cmps
int3
inc
cmps
jmp
add
sbb
add
push
(bad)
aaa
in
lahf
ja
or
je
mov
cli
std
in
cwde
test
mov
in
mov
cmp
jle
(bad)
outs
push
(bad)
add
jnp
dec
mul
pop
retf
ins
sub
adc
fbld
add
hlt
push
lahf
aam
jle
mov
pop
mov
fisubr
in
xor
sub
imul
dec
mov
sete
shl
aad
sbb
xchg
push
and
into
xor
int
dec
adc
lods
ja
push
cmp
push
jp
(bad)
and
lods
push
mov
dec
push
lock
test
cmp
pop
and
cmp
cmps
and
jmp
mov
lea
aaa
xchg
shl
bound
test
pop
test
aaa
loope
push
or
push
lods
cmp
neg
(bad)
popa
popa
xor
xlat
jae
cmp
aad
jae
cmp
xlat
lods
push
cdq
jge
fstp
out
popa
xlat
nop
push
lods
rcl
test
aam
(bad)
movs
(bad)
(bad)
mov
add
mov
push
nop
(bad)
bound
clc
fiadd
aam
fxch
xlat
cli
or
call
iret
stos
leave
sub
xchg
outs
(bad)
retf
ror
mov
bound
pop
dec
inc
outs
nop
xchg
or
jb
outs
inc
scas
into
cmp
scas
lods
sbb
sbb
mov
rol
mov
pop
cmp
push
loope
pop
push
push
scas
xchg
aam
inc
in
hlt
inc
and
dec
iret
in
dec
sbb
bound
adc
add
ret
sti
retf
jno
and
ja
call
enter
bound
out
pop
std
lock
xor
add
and
jnp
cmc
dec
nop
gs
push
ficomp
cdq
cmc
aas
and
in
aas
pop
jo
ss
lods
mov
pop
retf
(bad)
arpl
mov
in
movs
and
ins
movs
jmp
std
leave
xchg
mov
adc
cmps
repnz
add
ret
pop
test
leave
jmp
cmp
int3
fdiv
mov
pop
pushf
add
or
push
jae
in
scas
sbb
int3
xor
cmp
cdq
jbe
cmps
in
push
fcmovnbe
mov
jecxz
mov
test
sbb
out
out
xchg
push
out
loop
outs
addr16
je
(bad)
push
sbb
xchg
cli
div
xchg
add
xchg
int
jno
jbe
out
in
inc
dec
jp
dec
neg
pop
rcl
movs
dec
je
lahf
and
cmp
dec
sbb
dec
in
js
and
push
shl
mov
push
mov
or
inc
xchg
mov
out
sar
or
out
lea
mov
retf
les
outs
add
out
sbb
icebp
or
or
adc
in
dec
cmp
jb
ffree
sti
sbb
xor
pusha
hlt
out
fsubr
scas
loope
(bad)
in
mov
mov
mov
(bad)
sti
idiv
enter
(bad)
sar
loope
push
(bad)
pusha
rcl
rcl
adc
movs
adc
scas
xchg
fcompp
rcl
jno
push
std
jmp
sub
mov
mov
pop
pop
cmps
aam
test
adc
out
dec
into
in
dec
pushf
mov
dec
(bad)
sbb
lea
scas
mov
mov
jo
sar
mov
inc
lds
cmc
cmps
test
into
cmp
data16
sub
add
ret
adc
pop
pop
jnp
outs
in
aad
pop
jns
mov
js
nop
das
and
inc
add
push
mov
imul
lods
xchg
xor
retf
mov
adc
popf
nop
xor
push
xchg
cld
push
jns
mov
pop
jmp
inc
fistp
test
(bad)
mov
lods
adc
inc
add
aad
mov
xchg
inc
es
iret
mov
xchg
dec
add
nop
(bad)
inc
jne
fisttp
inc
mov
enter
push
jno
jns
dec
dec
mov
mov
sub
shl
nop
pop
cli
or
in
cmp
int
stos
add
pop
lods
and
out
(bad)
in
js
sbb
loope
xor
sub
sbb
mov
imul
ds
mov
pop
hlt
sti
xlat
jle
je
xlat
or
int3
cs
mov
inc
xchg
bound
pop
in
push
xchg
cmc
rol
pop
pushf
repz
fbld
mov
jns
sbb
sbb
pop
(bad)
test
jg
ror
xchg
out
sbb
mov
cld
and
sahf
jle
adc
mov
pop
cmp
push
mov
xor
pop
sti
fldcw
scas
out
cs
data16
pop
adc
test
shr
mov
scas
jg
sbb
mov
movs
sbb
add
mov
cli
cmps
pop
push
test
in
(bad)
das
pop
sub
inc
add
xchg
cmp
add
cli
xchg
sar
sbb
pop
(bad)
mov
xor
cmp
inc
and
xor
jae
cli
outs
fld
and
popf
pop
in
aad
dec
xchg
test
cli
out
pop
aam
mov
lds
rcl
jno
xchg
dec
mov
pop
pop
pushf
test
in
cmp
icebp
fcom
ds
cmp
dec
(bad)
mov
(bad)
mov
mov
adc
fmulp
push
pop
fiadd
call
xchg
and
and
mov
lahf
xchg
cwde
loope
xor
and
fcmovu
(bad)
pop
mov
mov
(bad)
mov
sti
call
xchg
dec
mov
jns
rol
pop
adc
pop
retf
xor
and
push
xchg
movs
push
cmp
(bad)
rcl
in
jge
jnp
leave
call
sbb
out
loopne
xchg
in
mov
iret
mov
dec
std
push
shr
repz
pop
cmp
lea
stos
pusha
and
pushf
xchg
lods
out
push
inc
add
enter
cli
stos
mov
mov
and
imul
addr16
jbe
pop
pop
out
lods
(bad)
sti
adc
(bad)
mov
cld
cmp
(bad)
fsub
dec
fwait
xor
mov
push
mov
add
inc
retf
push
jno
push
xchg
lods
test
enter
daa
lahf
jle
sbb
inc
sub
fisttp
cmp
pop
xor
mov
jg
in
sub
into
cmc
gs
movs
js
inc
jp
sub
dec
in
push
jecxz
popf
or
je
mov
push
mov
aam
sbb
(bad)
nop
add
cdq
pop
ret
int
push
(bad)
iret
in
inc
pop
aaa
fbstp
(bad)
xchg
loop
fdiv
stc
mov
xchg
and
mov
jae
retf
(bad)
imul
call
cmps
mov
test
cli
shl
jo
int3
ret
scas
push
(bad)
pop
inc
aaa
test
out
inc
adc
push
sub
and
into
fdivr
inc
in
cmp
jmp
mov
and
or
cs
xchg
sub
aas
push
rcr
daa
nop
adc
loop
(bad)
mov
pop
ret
sub
shl
out
ins
xchg
adc
js
mov
cmps
adc
cmp
pop
mov
in
fisubr
hlt
cmp
mov
and
push
fcmovb
xor
xchg
(bad)
push
mov
push
sahf
push
fs
jg
out
stc
add
cli
addr16
test
jge
sar
mov
lahf
xlat
popa
in
dec
jne
rcr
(bad)
and
inc
mov
fisub
push
js
jmp
mov
ficomp
je
pop
cmp
xchg
jmp
jge
jno
test
pop
mov
out
clc
xor
dec
add
push
popf
mov
cs
fidiv
xor
jl
mov
rol
pop
mov
test
(bad)
pop
std
and
aaa
or
add
and
in
sbb
mov
sbb
push
fst
maskmovq
je
iret
idiv
push
pop
sti
sahf
dec
leavew
ds
sbb
stc
mov
sub
imul
or
sbb
add
loop
add
cmp
inc
add
sbb
jecxz
xor
outs
pop
fld
sbb
xchg
inc
push
loopne
push
adc
lods
pop
cmps
mov
jb
cmp
das
add
dec
imul
sub
out
cmps
into
jg
mov
inc
push
lahf
sbb
loop
fld
mov
sub
std
push
inc
icebp
push
add
pop
shl
cmps
daa
mov
mov
push
pop
xor
and
jmp
jp
xor
cmps
push
lock
icebp
xor
call
mov
jns
jns
lods
cmp
clc
xor
(bad)
(bad)
sub
or
push
push
fcmovbe
pushf
frstor
dec
sbb
lock
push
jg
gs
loop
(bad)
stos
xor
das
ins
inc
mul
aas
add
push
xor
mov
xchg
js
or
mov
into
shl
arpl
mov
lds
ret
sub
repnz
ret
js
or
mov
and
xchg
pop
sub
clc
jnp
adc
mov
xchg
(bad)
shl
in
push
sti
ret
cdq
test
or
fmul
fwait
ins
inc
and
jecxz
mov
(bad)
daa
stc
daa
mov
retf
mov
inc
pop
mov
dec
loop
daa
add
imul
rcl
push
sub
test
cmc
cmps
inc
cmp
inc
icebp
cmp
cld
je
pop
push
xchg
jb
sar
out
and
mov
jbe
or
hlt
mov
sbb
lahf
aaa
loope
sahf
sbb
fdiv
cmp
or
push
or
fstp
xchg
addr16
ret
sub
mov
rcr
mov
mov
cwde
xor
jp
cli
lods
push
pop
in
jne
or
mov
das
sbb
(bad)
dec
jge
movups
or
int3
add
loopne
add
mov
aaa
call
arpl
imul
pop
or
mov
es
leave
sbb
and
test
data16
loopne
ds
sbb
(bad)
cmp
test
and
jp
out
fiadd
rol
enter
mov
ficom
(bad)
cmp
std
mov
(bad)
test
sar
retf
add
int3
fcomi
test
enter
aam
fidiv
in
(bad)
loop
in
(bad)
mov
out
in
call
jecxz
in
jecxz
jmp
xchg
xchg
stos
(bad)
mov
fst
repnz
xlat
out
mov
(bad)
ficom
call
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
movs
in
dec
loope
xlat
cli
mov
enter
xlat
nop
xchg
mov
rcr
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
repnz
iret
fisub
xlat
fcom
movs
rcr
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
rol
sub
xlat
mul
rcl
out
adc
sub
test
pop
or
mov
ds
repz
pop
adc
into
fstp
mov
cmp
into
int
lahf
test
in
call
dec
fsub
retf
(bad)
adc
push
aaa
pop
test
cmp
std
lods
test
mul
(bad)
(bad)
(bad)
movs
(bad)
xlat
(bad)
lods
(bad)
xlat
out
mov
mov
scas
cmps
add
xchg
movs
in
cli
mov
(bad)
rcr
pop
jbe
repz
add
shl
mov
jmp
jnp
clc
fs
jmp
(bad)
ins
in
mov
stc
js
fisttp
out
lea
cmp
pop
inc
push
fnstenv
fs
mov
xchg
and
pusha
sbb
xchg
sbb
movs
mov
mul
(bad)
idiv
mov
int3
xlat
(bad)
mov
inc
lahf
mov
lods
inc
fidiv
add
mov
rcl
out
and
mov
add
ror
push
or
jns
pop
sbb
pop
in
or
pop
push
imul
xchg
inc
mov
pop
cmp
rcl
sub
inc
mov
cmps
ins
mov
xchg
and
inc
mov
test
aaa
daa
jmp
mov
and
mov
(bad)
imul
jmp
pop
inc
fstp
sbb
or
lock
ins
or
mov
retf
xchg
xor
or
and
dec
push
xchg
lods
and
leave
cmp
mov
mov
mov
test
cdq
cmp
std
sub
xlat
out
movs
rol
(bad)
movs
(bad)
(bad)
xlat
div
mov
mov
push
xchg
mov
dec
pop
xor
pop
jbe
inc
pop
xchg
mov
rcl
repz
sub
cmp
add
mov
mov
mov
sahf
adc
(bad)
(bad)
out
je
dec
sub
out
adc
inc
adc
cs
mov
pusha
push
push
(bad)
daa
test
outs
jle
add
push
(bad)
shl
add
cmp
xchg
pop
push
push
mov
sti
add
shr
in
mov
xchg
ficomp
jg
mov
in
xchg
repnz
push
leave
je
jmp
push
popa
retf
or
(bad)
aam
inc
push
add
into
fist
push
cmc
adc
add
out
call
fbld
inc
pop
cld
sahf
xchg
out
dec
lock
imul
sbb
call
mov
cmp
mov
pusha
adc
test
(bad)
push
aas
in
and
jp
push
pop
(bad)
popf
xor
and
pop
test
mov
xor
addr16
push
lods
jmp
push
sub
jp
or
les
(bad)
cld
clc
add
or
stos
add
mov
gs
je
dec
jns
aam
bnd
loop
mov
push
dec
adc
rcr
sbb
arpl
js
push
imul
fsubr
push
xlat
pushf
ds
rcr
movs
rol
(bad)
movs
(bad)
xlat
(bad)
movs
rcl
mov
fbstp
loopne
pop
cli
ins
rcl
mov
inc
push
xchg
movs
in
cli
rcr
div
sub
ret
das
in
sub
or
inc
inc
std
xchg
jp
mov
pop
push
adc
cli
or
sub
pop
dec
cmps
xor
jge
or
pusha
or
pop
xor
shl
je
fnstenv
push
iret
pop
push
(bad)
in
xor
ret
call
mov
dec
mov
loop
pop
dec
add
aaa
es
sub
cs
rol
or
and
frstor
sub
test
outs
and
dec
imul
sbb
xchg
add
xchg
mov
or
iret
sar
test
ret
daa
sbb
or
test
fs
mov
jns
adc
cmps
mov
rcr
iret
test
cwde
dec
(bad)
sbb
inc
or
clc
mov
hlt
out
xor
mov
mov
xchg
sbb
add
mov
jo
cmp
imul
repnz
dec
dec
cld
retf
and
push
push
pop
pop
shl
enter
mov
and
test
test
cli
mov
(bad)
shr
movs
(bad)
sar
movs
(bad)
xlat
mov
loope
adc
and
xlat
cli
pop
inc
push
daa
add
jmp
jl
ret
lock
push
popf
or
inc
fs
adc
xor
sti
pop
push
fimul
fcomi
div
jmp
imul
push
xlat
inc
jge
mov
jb
xchg
popf
sbb
adc
sar
sbb
mov
pop
mov
dec
or
cwde
sbb
mov
into
inc
dec
jmp
adc
or
jns
push
leave
mov
mov
div
ret
fstp
mov
adc
jns
dec
and
push
or
(bad)
push
das
inc
add
pop
cmp
add
adc
sub
xlat
mul
test
and
fnstcw
cmp
movs
inc
stos
cli
lods
int3
xchg
mul
(bad)
sar
loope
xlat
cli
mov
adc
test
nop
std
mov
cmp
fsubp
adc
or
sbb
into
push
push
and
dec
push
ror
loope
fcomp
mov
hlt
mov
lods
(bad)
jne
gs
ss
pop
retf
ds
jecxz
lods
cmps
sub
xchg
push
ret
lea
cwde
pop
xchg
cmps
movs
in
xor
jl
jl
(bad)
cdq
add
pop
jmp
shr
inc
xlat
lds
cmp
jb
(bad)
fisubr
push
ins
inc
dec
xchg
mov
push
xchg
xchg
aas
inc
xchg
mov
stos
jae
mov
lds
bound
stc
iret
pop
cs
cdq
add
rcl
mov
(bad)
sar
mov
adc
and
(bad)
cmp
add
xchg
mov
rcl
and
lods
xchg
fs
add
fdiv
lahf
pop
cmp
cdq
inc
sub
add
mov
ds
aas
sar
loopne
jecxz
shl
arpl
or
mov
sub
lods
jbe
ds
jns
mov
in
dec
mov
jle
pop
nop
push
lods
mov
adc
mov
xchg
push
data16
loop
jmp
sbb
(bad)
mov
gs
jge
stos
push
mov
movs
mov
dec
adc
adc
lahf
mov
xor
sub
jl
mov
mov
push
xor
mov
fcmovne
sbb
dec
jp
xchg
cwde
js
cmc
inc
inc
sar
cwde
nop
jl
push
sti
lods
into
cmp
shl
std
xor
ret
jb
imul
movs
cmp
std
and
repnz
int3
xlat
cli
movs
(bad)
(bad)
mov
les
mov
inc
adc
mov
(bad)
test
xchg
jno
cli
shr
and
lods
in
fisttp
lods
jb
call
test
sub
xor
aaa
cli
xchg
sub
das
jge
fidiv
arpl
(bad)
xor
sahf
int
(bad)
and
int
cmps
clc
sar
fsubr
leave
sbb
sub
outs
xchg
clc
pop
cmp
mov
lods
shr
in
dec
iret
(bad)
repnz
shl
dec
(bad)
daa
mov
cmc
mov
stos
pop
scas
pop
pop
(bad)
jae
inc
mov
xor
sbb
xchg
cld
xchg
xchg
call
lea
stos
mov
jg
adc
imul
push
in
sbb
sar
das
or
into
xor
xor
out
adc
mov
pop
movs
mov
mov
xor
xor
adc
pop
in
rcr
or
cli
dec
pop
push
mov
(bad)
shr
push
shl
jg
std
icebp
push
sub
cmp
(bad)
cmp
add
cmp
std
mov
(bad)
test
sar
retf
add
int3
fcomi
test
enter
aam
fidiv
in
(bad)
loop
in
(bad)
mov
out
in
call
jecxz
in
jecxz
jmp
xchg
xchg
stos
(bad)
mov
fst
repnz
xlat
out
mov
(bad)
ficom
call
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
mov
xchg
xlat
cli
mov
enter
xlat
nop
xchg
mov
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
in
loop
cmp
std
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
lods
(bad)
xlat
cli
mov
aam
xchg
movs
hlt
stos
cli
in
fcomi
rol
cli
sub
aad
int3
pop
rcr
inc
sbb
(bad)
mov
test
and
test
ret
adc
mov
icebp
jno
sbb
cs
inc
fild
ss
out
mov
fwait
retf
stos
dec
mov
and
(bad)
xlat
dec
test
xor
or
adc
test
repz
inc
xchg
pusha
in
cwde
test
pop
popf
push
cmp
cmp
test
(bad)
mov
adc
lahf
jmp
jle
push
les
sbb
sbb
push
push
jg
les
xchg
aad
cmp
enter
inc
sub
xchg
outs
arpl
sub
scas
imul
bound
les
ret
mov
nop
test
mov
repz
jmp
xchg
lods
test
xchg
popa
sub
test
and
(bad)
stc
(bad)
xlat
sbb
addr16
sub
inc
test
repnz
xor
test
mov
push
push
or
ret
pop
movs
(bad)
mov
stc
(bad)
xlat
cli
hlt
lods
push
pop
or
daa
(bad)
mov
push
jo
lock
fmul
dec
dec
lods
xor
jae
sbb
mov
(bad)
fld
xlat
push
xchg
mov
js
jle
pop
or
ficom
push
popa
add
lds
(bad)
sti
cmp
cld
jno
mov
iret
sti
sub
and
loope
jp
shl
xlat
(bad)
mov
inc
test
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
cmps
les
movs
mov
std
movs
les
(bad)
ffree
xlat
(bad)
daa
loopne
in
les
(bad)
mov
mov
mov
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fcomp
xlat
sbb
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fcmovnb
xlat
push
(bad)
pop
mul
(bad)
xlat
(bad)
mov
xlat
(bad)
movs
aam
std
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
xchg
(bad)
xlat
loop
cmp
jbe
(bad)
stos
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
cmps
les
lods
pop
stos
(bad)
mov
rcr
movs
aam
(bad)
mov
(bad)
std
enter
cwde
(bad)
scas
test
les
xchg
movs
in
cli
mov
shl
push
sahf
ret
fidivr
adc
loop
(bad)
cwde
jp
cmp
scas
repnz
push
sbb
pop
pusha
pusha
sbb
push
xor
nop
xor
sub
cmp
add
jnp
popf
dec
xor
dec
xchg
jle
icebp
mov
jb
sub
mov
mov
lahf
clc
fs
push
xchg
adc
icebp
aas
sbb
sbb
dec
xor
and
ret
mov
adc
mov
movs
(bad)
(bad)
and
(bad)
nop
mov
sbb
fwait
mov
(bad)
(bad)
and
retf
pushf
mov
sbb
fwait
mov
(bad)
sti
and
retf
retf
adc
ja
mov
sub
push
sbb
ins
mov
or
arpl
popa
xor
add
push
push
call
or
xor
push
mov
mov
retf
inc
shr
jno
leave
jge
jle
es
mov
adc
add
sbb
fcomip
jge
xchg
movs
ss
jle
repz
inc
adc
in
push
int
cs
inc
mov
mov
sahf
adc
xchg
test
sub
xchg
ins
push
jo
cli
imul
mov
xor
jbe
call
ss
inc
sbb
or
mov
jae
movs
mov
mov
and
sub
cmp
shr
nop
jns
push
dec
xchg
and
pop
mul
add
popf
add
sbb
push
sbb
push
sub
repz
pop
aaa
adc
dec
xchg
int3
xchg
or
test
icebp
imul
out
xchg
in
adc
mov
mov
(bad)
sbb
pop
mov
(bad)
shl
sbb
mov
pop
jne
dec
ds
fst
jecxz
adc
push
pusha
je
daa
or
xor
mov
out
pop
mov
mov
loop
sub
(bad)
pop
add
icebp
fadd
push
retf
gs
sub
(bad)
pop
add
icebp
fadd
push
retf
gs
sub
(bad)
pop
xor
rol
or
movs
or
aaa
outs
out
imul
mov
mov
push
cs
test
jnp
fstp
xchg
cmp
out
add
add
sbb
(bad)
int3
test
xor
(bad)
icebp
pop
xchg
sub
cmps
div
cmp
mov
out
test
stc
ss
jbe
xchg
(bad)
shr
sbb
sub
push
es
add
xchg
dec
sub
push
test
push
lahf
sahf
xor
jmp
or
mov
cmps
es
mov
xor
popf
sub
ret
lahf
mov
cmc
dec
(bad)
loope
mov
pop
in
push
mov
inc
and
xor
pop
sub
lahf
popa
or
and
add
xchg
jae
jg
jge
nop
push
and
jb
push
mov
push
dec
addr16
fld
outs
xor
into
out
adc
dec
addr16
fld
outs
xor
into
out
adc
dec
addr16
aad
jae
push
mov
shl
mov
mov
movs
ins
dec
inc
ret
xor
fwait
xor
repz
mov
clc
outs
sub
cmp
dec
adc
test
cmp
(bad)
scas
popf
mov
or
repz
enter
sahf
aam
popa
call
pop
inc
scas
imul
aaa
sbb
(bad)
pop
out
pusha
out
cmps
int3
xchg
xchg
enter
jno
retf
popa
and
fadd
xchg
nop
dec
cmp
icebp
idiv
push
popa
es
fimul
adc
dec
div
cmp
push
push
out
xchg
adc
retf
inc
sub
sbb
in
cmps
int3
xchg
call
loope
pop
xor
fimul
mov
xor
pop
jae
jmp
jno
neg
fwait
mov
and
loopne
movs
inc
mov
mov
or
mov
loope
in
pop
enter
call
sbb
add
push
jno
or
ins
sbb
fwait
or
or
and
sub
pop
and
aas
mov
fdiv
cmp
xor
rcr
mov
xchg
sub
push
or
inc
adc
and
fcomp
add
sub
stos
outs
pop
ss
mov
std
push
(bad)
sub
stos
outs
pop
ss
mov
std
push
(bad)
sub
stos
outs
pop
ss
mov
std
push
(bad)
sub
stos
outs
pop
ss
mov
std
push
(bad)
sub
dec
cmps
lds
mov
add
inc
aam
cmp
cwde
dec
sbb
(bad)
xor
and
fimul
mov
inc
aad
cmp
pop
push
out
jmp
jno
cmc
pop
fstp
sbb
mov
add
test
mov
xlat
out
mov
enter
(bad)
(bad)
xlat
out
mov
retf
cmc
adc
and
(bad)
cmp
sar
sbb
rol
xchg
mov
je
adc
adc
imul
pop
fs
inc
fnstcw
xchg
test
jne
cmp
repz
lods
movnti
stos
or
lahf
imul
cdq
sub
pop
xchg
inc
fsub
sbb
jo
xor
in
add
mov
mov
pop
loope
(bad)
cmps
sbb
in
add
mov
add
loopne
test
mov
pop
and
iret
xor
inc
xor
stc
dec
ds
adc
in
add
inc
add
mov
jge
xor
sub
loope
loopne
ret
push
jle
adc
adc
mov
call
inc
add
ror
dec
jmp
jnp
or
pop
pop
ds
inc
sbb
fbld
cwde
ins
(bad)
dec
jle
pop
jecxz
mov
scas
icebp
sub
test
cmc
dec
push
sub
mov
std
inc
push
test
(bad)
mov
lods
nop
mov
loopne
adc
push
push
data16
leave
rcl
cmps
outs
mov
out
jmp
lds
add
mov
(bad)
js
fdivr
xchg
test
mov
or
and
mov
inc
fwait
aaa
int
mov
les
push
fdivr
inc
inc
mov
add
fistp
pop
daa
lds
mov
lock
daa
popf
adc
repnz
dec
jb
rcl
stos
inc
mov
(bad)
dec
test
repz
outs
js
mov
jmp
jae
pop
stc
push
leave
cmp
jmp
popf
fcomp
adc
es
jp
adc
mov
(bad)
mov
(bad)
sbb
mov
lea
leave
push
push
test
jg
loop
sub
inc
fbld
lock
sbb
imul
les
pop
ja
cmps
pop
retf
dec
stos
fsubr
or
or
mov
rcr
arpl
imul
push
jg
pop
(bad)
cmps
sbb
(bad)
loope
jg
(bad)
pop
push
repz
push
out
mov
mov
mov
sbb
push
std
es
bound
cmp
mov
mov
std
fsub
push
test
sbb
pop
and
add
xchg
cs
bound
push
xchg
in
hlt
dec
jnp
add
pop
mov
push
stos
lahf
arpl
fwait
popa
sbb
hlt
mov
jle
aad
daa
ror
fdiv
adc
sar
add
mov
xor
mov
cmp
mov
rcr
jbe
fidivr
cld
and
imul
push
movs
dec
vcvttps2dq
jae
sub
rol
pop
jmp
clc
lea
out
jmp
js
ds
mov
mov
dec
xchg
lods
es
and
mov
ret
fld
movs
int
(bad)
adc
es
xchg
clc
cmp
adc
int
xor
jl
xor
shl
fcomp
mov
js
ds
mov
mov
dec
xchg
lods
es
and
mov
ret
fld
movs
int
(bad)
adc
es
xchg
clc
cmp
adc
int
xor
jl
xor
shl
fcomp
mov
js
ds
mov
mov
pop
lods
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
(bad)
aaa
movs
bnd
xchg
mov
movs
loop
lea
daa
ss
addr16
in
xchg
xchg
push
or
cmp
(bad)
in
jmp
mov
fsub
sbb
nop
lods
shr
mov
je
iret
dec
add
mov
shl
lea
daa
ss
addr16
in
xchg
xchg
push
or
cmp
(bad)
in
jmp
mov
fsub
sbb
nop
lods
shr
mov
je
iret
dec
add
mov
shl
lea
daa
sbb
cs
outs
sub
sbb
pop
mov
or
push
hlt
stos
cmp
das
or
adc
repz
jnp
dec
out
push
push
shr
mov
ins
add
sub
imul
push
add
push
stos
pop
xor
sub
nop
jl
pop
xor
inc
push
jg
imul
sbb
add
sbb
fisubr
mov
fwait
jg
dec
dec
mov
cmps
mov
mov
ins
and
sub
jg
mov
push
mov
pusha
xchg
jno
xor
jne
mov
inc
iret
jno
pop
in
lea
sti
popf
push
outs
jl
jns
fiadd
loope
xchg
pushf
mov
mov
adc
mov
mov
and
nop
test
dec
mov
xor
cmc
punpckhwd
jnp
sahf
retf
add
js
mov
xor
sbb
dec
std
cmp
(bad)
imul
(bad)
shl
movs
enter
(bad)
xlat
mul
mov
mov
sbb
in
push
jb
or
aam
fxch
xlat
cli
push
rcl
sbb
popf
imul
not
cmp
xchg
stos
jmp
xor
imul
push
or
pop
xor
cli
shl
xchg
and
inc
mov
xor
sub
sahf
movs
fisubr
mov
jae
fisub
out
lods
xchg
test
scas
xchg
mul
cli
hlt
xchg
xchg
mov
mul
cli
call
sub
xor
mov
(bad)
pop
pop
pushf
pusha
pop
mov
dec
pop
push
les
(bad)
in
cmp
jo
cmp
xor
push
scas
int3
pusha
outs
mov
shl
rol
push
add
sbb
cmps
or
scas
push
mov
adc
xor
xchg
jmp
xor
shl
into
dec
and
cmps
out
push
not
adc
out
ins
lahf
outs
inc
mov
imul
(bad)
dec
jbe
out
(bad)
mov
jl
mov
test
dec
imul
fsubr
out
or
cdq
das
fsub
mov
sub
or
or
cwde
mov
daa
add
fidiv
xor
xchg
inc
dec
pop
mov
stc
lods
daa
retf
jmp
cmp
daa
pop
movups
rcr
inc
jne
stos
fistp
sub
xchg
add
cmp
fimul
into
movs
sti
cdq
jb
je
test
jmp
mov
pop
je
fsub
adc
mov
mov
adc
mov
mov
adc
mov
and
push
shl
in
xor
dec
leave
adc
hlt
data16
fld
inc
test
cli
pop
pop
xchg
loop
loopne
fimul
inc
mov
loop
jl
mov
mov
or
clc
dec
xchg
or
jp
lock
rcl
sbb
scas
in
ret
cs
mov
lahf
sbb
mov
or
pop
push
push
call
mov
out
xchg
clc
aaa
lods
xor
pop
mov
fiadd
push
cmps
js
add
test
sbb
sahf
sub
sub
mov
lods
mov
inc
cmp
dec
jbe
jg
addr16
pop
dec
jbe
jg
addr16
pop
dec
jbe
jnp
add
mov
adc
loop
je
cmp
pushf
add
xor
jno
sti
mov
bound
xchg
or
fs
dec
dec
test
adc
out
jmp
inc
pusha
inc
mov
stc
xchg
mov
stos
pop
dec
sbb
xchg
daa
aam
ror
test
and
sub
das
cmp
jmp
adc
jo
sti
sbb
xchg
adc
out
gs
mov
pop
pop
push
mov
mov
jb
and
sbb
test
or
add
out
push
mov
push
xor
mov
jno
sbb
lods
jmp
imul
enter
xor
xor
mov
lock
or
cdq
dec
neg
gs
mov
pop
mov
push
imul
sub
cdq
or
cmps
xor
shl
mov
or
cmps
xor
shl
mov
or
cmps
xor
shl
mov
or
cmps
xor
shl
mov
or
xchg
add
scas
pmaxsw
pop
hlt
xchg
add
scas
pmaxsw
pop
hlt
xchg
add
scas
pmaxsw
pop
hlt
xchg
add
scas
pmaxsw
pop
cld
xchg
add
cmps
movd
pop
jl
or
cmps
movd
pop
jl
or
cmps
movd
pop
jl
or
cmps
movd
pop
jl
or
add
fs
xlat
test
test
rcl
out
aam
repnz
(bad)
(bad)
xlat
imul
aam
cs
xchg
mov
mov
cmp
mov
cli
stos
add
cmp
int3
sar
mov
xchg
xlat
ja
inc
push
test
cmp
shl
pop
dec
out
ins
(bad)
lock
mov
or
jecxz
out
das
mov
jmp
daa
sbb
pop
jp
or
mov
pop
jecxz
pop
mov
loop
repnz
loope
mov
test
jmp
dec
or
xchg
call
jno
and
js
mov
xor
mov
dec
test
adc
inc
mov
fisubr
aaa
dec
sbb
inc
and
xor
xor
fsub
dec
das
dec
fs
add
jne
pop
jecxz
pop
xor
pop
sub
loope
in
aas
and
add
fimul
push
mov
push
int3
movs
push
push
std
das
leave
test
xchg
mov
stos
cmp
not
(bad)
xlat
leave
cli
loop
lea
pop
loop
loope
popf
jg
or
rcl
outs
test
inc
scas
movs
xlat
shr
out
aam
cmp
inc
xchg
pop
pop
sbb
test
je
xchg
cdq
adc
dec
movs
call
mov
jne
xlat
das
neg
or
(bad)
xchg
cdq
adc
dec
movs
call
mov
jne
xlat
das
neg
or
(bad)
xchg
cdq
adc
dec
movs
call
mov
sahf
frstpm(287
push
daa
std
psllw
nop
call
and
adc
cld
jp
(bad)
icebp
clc
mov
mov
or
call
(bad)
je
mov
aaa
inc
stos
out
cmp
inc
sbb
xor
sbb
sbb
das
gs
xchg
cwde
push
data16
(bad)
icebp
iret
in
es
jmp
sub
mov
sub
xchg
rcr
add
loope
jne
adc
mov
xchg
push
mov
(bad)
stos
add
in
in
sub
loop
and
aas
sbb
imul
fldcw
int3
push
push
ins
ficomp
jns
sbb
mov
pop
xor
inc
or
dec
repz
cli
stos
push
fsubp
rol
aas
jns
sahf
int3
test
stos
in
fdiv
icebp
cwde
es
in
jmp
test
nop
mov
aad
jbe
test
xchg
mov
loope
add
jns
sahf
int3
test
stos
add
pop
dec
and
ss
aam
std
pop
inc
jne
outs
ret
shl
sbb
js
mov
mov
xchg
icebp
or
adc
jmp
lods
pop
mov
shr
in
pop
pop
sar
mov
and
mov
adc
inc
cmp
cmp
fwait
adc
lea
mov
not
sbb
cwde
adc
mov
stos
mov
or
ins
pop
repz
inc
movs
push
outs
js
and
int3
cld
dec
scas
and
js
popf
inc
lds
jae
jp
mov
movs
add
xor
fsubr
aaa
push
cmp
xchg
xor
pop
xchg
in
scas
aad
iret
push
push
out
cmp
sub
dec
sti
sub
xchg
inc
cwde
and
and
cmp
inc
or
and
clc
or
push
dec
nop
cmp
mov
inc
or
call
mov
data16
add
sub
add
les
stc
sbb
dec
stc
push
jmp
fwait
dec
das
mov
jmp
or
pop
out
xchg
add
out
push
ja
data16
sti
xlat
std
enter
fistp
xchg
fcomp
movs
inc
adc
cmps
xchg
sbb
call
enter
add
into
addr16
mov
rcl
test
and
out
in
add
int
movs
adc
ja
cmc
mov
and
jmp
cld
dec
add
sbb
add
mov
(bad)
sub
aaa
lock
ds
dec
adc
xchg
retf
jns
repz
adc
push
xor
out
cmp
(bad)
adc
ins
dec
popf
inc
movs
lds
iret
add
xchg
adc
imul
xor
jnp
jecxz
push
cmp
(bad)
fs
fild
repz
pop
pop
inc
nop
rcl
fwait
mov
jbe
mov
sbb
push
scas
pop
and
fnstsw
xor
clc
sbb
shl
mov
loopne
loop
inc
jmp
xor
out
mov
scas
mov
xchg
dec
sahf
mov
mov
in
ins
sub
ins
das
lea
dec
(bad)
lea
fiadd
sbb
les
jb
xor
mov
jb
fcomp
jo
pop
popa
mov
lea
out
push
mov
mov
mul
and
push
jbe
and
xchg
sti
pop
movs
in
pop
test
mov
xor
pop
ror
retf
out
in
mov
dec
int
in
dec
cmps
sub
jmp
and
gs
sub
js
jl
mov
cmp
jg
push
xchg
push
xchg
rcl
cmp
hlt
push
xor
aaa
adc
lods
(bad)
fwait
push
dec
xchg
les
push
xchg
push
mov
outs
xor
(bad)
and
repz
dec
xlat
std
retf
aas
lea
cmp
stos
mov
clc
xchg
lahf
cli
cmps
sbb
pop
sahf
icebp
lods
bound
(bad)
std
jle
adc
lds
out
jle
mov
add
popf
pop
shl
mov
xchg
adc
pop
sbb
jo
mov
(bad)
mov
push
movups
cmps
movs
jns
pop
loope
scas
mov
sbb
cmp
test
jmp
xchg
cwde
sbb
cdq
mov
sbb
in
jmp
fidivr
push
in
int
sti
mov
add
out
inc
mov
sub
popa
cdq
sbb
loope
mov
sti
outs
out
sbb
dec
loopne
fisttp
scas
sbb
dec
es
(bad)
retf
fiadd
mov
jae
add
add
mov
js
in
scas
lods
push
jnp
xchg
add
shl
call
stos
daa
in
push
(bad)
int
cmp
xlat
nop
in
sbb
fs
bound
es
mov
jge
push
(bad)
xchg
mov
inc
test
sbb
inc
test
adc
scas
and
sub
sub
out
(bad)
xor
or
push
pop
cmp
aad
enter
call
xchg
and
inc
cmp
and
jae
cmp
or
popf
stos
in
sbb
mov
cdq
mov
mov
mov
or
add
push
mov
loope
fst
pushf
scas
call
and
pop
sub
add
mov
stc
inc
shr
cs
xor
hlt
jae
jmp
jae
outs
sbb
lahf
inc
mov
sbb
sar
add
push
mov
loope
fst
pushf
scas
call
and
pop
xchg
in
sub
pop
pop
or
shr
jo
sbb
push
scas
stc
test
xchg
xor
retf
mov
jo
mov
jbe
adc
adc
arpl
jmp
mov
stos
jo
in
popa
cmovp
shl
jns
or
dec
mov
cld
iret
test
imul
(bad)
and
inc
jno
push
loope
jnp
out
ficom
pop
outs
jl
fiadd
fistp
cmp
sbb
mov
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
cmp
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
gs
mov
sti
call
test
mov
test
mov
test
jle
jp
inc
and
push
inc
sbb
jp
inc
and
push
inc
sbb
jp
inc
and
push
inc
sbb
jp
inc
and
push
inc
sbb
jp
inc
and
push
inc
sbb
jp
bound
aad
cmp
dec
inc
inc
mov
add
imul
or
xor
push
sbb
sbb
pop
inc
ret
rcl
push
in
xchg
out
retf
call
pop
or
ret
ins
sbb
jns
jnp
(bad)
dec
and
xchg
pminub
push
xchg
push
and
and
clc
pusha
sbb
sub
pop
test
ins
(bad)
jp
pushf
pusha
push
mov
or
push
dec
dec
pop
jnp
shr
(bad)
sub
gs
xchg
add
add
adc
mov
sub
jmp
or
xor
xchg
add
add
adc
mov
sub
jmp
or
xor
xchg
add
add
adc
mov
sub
jmp
or
xor
xchg
add
add
adc
mov
sub
jmp
or
add
push
std
loop
lahf
sbb
test
je
cmp
mov
jp
xor
add
or
outs
add
mov
int
adc
test
add
std
scas
sbb
push
push
loope
jne
(bad)
adc
sub
mov
push
int3
xchg
mov
pop
jo
fimul
aas
fs
ret
std
mov
cmp
div
or
mov
popa
push
test
mov
das
int
adc
push
std
loop
lahf
sbb
add
and
out
movs
rcr
cli
movs
(bad)
sar
movs
(bad)
xlat
mov
mov
adc
mov
add
mov
(bad)
test
xor
mov
in
sar
pop
aad
add
into
out
add
mov
jg
lahf
call
pop
fnstsw
jno
icebp
sbb
call
jno
(bad)
stc
dec
lods
mov
bswap
mov
pop
xor
add
and
mov
pop
dec
stc
pop
outs
fidivr
xchg
scas
int3
jg
jmp
mov
push
(bad)
jg
pushf
in
or
mov
std
ds
ins
dec
gs
rcl
mov
xchg
jne
mov
sbb
(bad)
fdivr
mov
(bad)
ficom
lods
add
(bad)
inc
mov
dec
jbe
fidiv
push
lods
ss
inc
adc
and
not
scas
fs
jnp
rcl
sub
jnp
cmps
push
shl
fs
cld
add
hlt
xchg
movs
mov
sub
fimul
out
xchg
addr16
adc
outs
push
fsub
ret
cmp
cmp
iret
inc
aad
inc
shl
mov
sbb
xchg
cmc
in
sahf
int
push
test
int
mov
fcom
dec
shl
nop
stc
xchg
out
icebp
xchg
jno
xchg
inc
jbe
(bad)
pop
inc
pop
pop
jno
cwde
dec
mov
or
cs
test
scas
or
dec
jge
pusha
dec
push
mov
pop
jg
imul
jns
inc
pop
pop
jno
cwde
push
adc
bound
or
in
(bad)
push
inc
inc
fsub
fdivr
bnd
mov
push
das
xor
ins
dec
pop
clc
js
ret
lea
xchg
fs
outs
and
mov
sub
aam
aaa
mov
mov
(bad)
mov
mul
lock
test
rol
neg
shl
lods
mov
pop
lds
movs
sahf
ficomp
int
fldenv
and
nop
mov
inc
call
add
std
ficomp
test
pop
into
xor
push
fcom
pop
mov
not
fst
fisttp
(bad)
push
(bad)
(bad)
(bad)
mov
fs
repz
mov
xchg
xor
sub
inc
xchg
(bad)
mov
arpl
stc
jne
movs
xrelease
mov
je
inc
cmps
mov
dec
mov
(bad)
sub
add
jo
fsub
leave
xchg
fldcw
out
mov
lods
aam
out
ror
pop
sar
jecxz
xchg
jge
loopne
ja
xchg
dec
pop
cwde
adc
int3
int3
push
in
dec
dec
into
jmp
mov
push
in
cld
jge
out
add
fs
dec
repnz
mov
cmps
cmps
hlt
test
(bad)
(bad)
jae
sbb
out
pop
pop
ja
xchg
dec
cmp
aad
stos
jae
jmp
dec
mov
cwde
inc
pop
cwde
add
cwde
or
call
xchg
add
aam
cmp
cwde
sub
cmovp
cwde
inc
loopne
or
add
dec
mov
xor
add
cmc
push
cmps
push
xlat
cli
hlt
push
mov
push
jp
ja
test
retf
test
ss
inc
sbb
add
mov
pop
dec
rcr
std
add
mov
pop
cmp
mov
mov
or
mov
gs
cmps
das
out
push
push
aad
pop
sub
pop
sbb
mov
dec
mov
sub
cmps
popa
inc
mov
xor
in
jno
dec
lahf
pop
sbb
jecxz
pop
outs
mov
cmc
lock
clc
mov
inc
mov
jle
lahf
push
inc
sbb
loop
movs
mov
cmp
inc
pop
data16
(bad)
mov
cmp
jo
cmc
adc
call
xor
(bad)
out
adc
out
lock
xchg
mov
fs
sahf
mov
not
push
push
(bad)
mov
jl
push
fnstcw
sub
and
mov
push
les
lods
xlat
scas
xchg
out
aad
fs
mov
mov
sahf
ja
jno
in
cmp
in
daa
retf
fs
rcr
cmp
test
xchg
pushf
adc
fcomi
jnp
xlat
dec
add
add
jl
imul
mov
aam
lods
pop
inc
cmc
sbb
add
rcr
pop
ds
retf
mov
stos
and
jnp
fist
fnsave
pop
fnstsw
lock
mov
popa
sbb
push
in
jmp
mov
test
rcr
push
int
jbe
gs
aad
pop
push
test
repnz
(bad)
hlt
loopne
ror
dec
pusha
cmp
dec
out
and
fldenv
push
out
lock
(bad)
popa
or
fwait
sbb
aam
outs
ret
pop
sqrtps
xor
fidiv
mov
(bad)
cli
in
xchg
out
mov
aad
cli
in
xchg
out
mov
popa
inc
sbb
jle
(bad)
or
sbb
pop
test
pop
data16
repnz
std
mov
inc
mov
sbb
imul
retf
cdq
mov
pmaxsw
xchg
and
bound
sub
jmp
cmp
sbb
add
fsub
jg
movs
inc
xlat
fsubr
out
mul
int3
fnstsw
out
mul
aam
adc
fisttp
or
es
sbb
in
mov
jae
enter
jo
hlt
or
mov
or
out
movs
in
xchg
sbb
daa
retf
pop
fcmove
call
je
dec
std
repnz
cwde
ds
sbb
bound
gs
aas
retfw
icebp
xchg
adc
pop
pop
iret
dec
test
stos
adc
mov
pop
fs
sub
xlat
mul
test
data16
imul
jae
je
pop
or
outs
mov
gs
push
xchg
xor
jl
lea
stos
mov
and
outs
sbb
nop
xchg
jl
cdq
dec
daa
stos
cmp
into
in
pusha
out
in
mov
mov
lds
jl
popf
dec
dec
stos
cmp
mov
sbb
fsubr
mov
(bad)
std
fadd
(bad)
dec
test
daa
mov
bound
movs
(bad)
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fdiv
lahf
fsubr
popf
outs
and
mov
pop
(bad)
dec
dec
stos
cmp
xchg
jae
nop
ins
sbb
cmp
adc
dec
dec
stos
cmp
xchg
jae
nop
dec
test
bound
dec
stos
cmp
xchg
jae
nop
jl
lea
stos
cmp
popa
xlat
loopne
mov
xlat
cli
mov
aam
(bad)
movs
(bad)
(bad)
loopne
xlat
jp
adc
adc
adc
std
mov
cmp
outs
pop
cmp
jg
add
stos
out
fwait
push
retf
push
add
mov
call
rcl
sub
sub
mov
cmps
push
mov
int3
inc
inc
dec
enter
in
add
in
push
adc
movs
push
repz
not
push
test
out
cpuid
enter
jge
add
ins
and
push
jge
mov
mov
in
mov
dec
mov
iret
inc
jbe
sub
cdq
js
push
jle
fs
sbb
gs
js
add
push
sahf
inc
lahf
fwait
stc
mov
sub
mov
dec
dec
mov
mov
nop
ja
dec
inc
xchg
xchg
fbstp
add
inc
retf
pop
push
push
movs
adc
icebp
add
mov
stos
dec
xchg
jle
mov
int
mov
cmp
les
movs
push
gs
cmps
mov
addr16
cli
inc
push
jecxz
loopne
iret
jp
lahf
pop
mov
xchg
stos
inc
mov
popa
bound
int3
aaa
mov
nop
loop
call
inc
(bad)
int3
rcr
mov
fxam
pop
or
in
in
repz
push
jp
neg
std
das
pop
mov
and
aad
outs
aad
in
jl
adc
jmp
out
cmp
add
xor
jle
ror
mov
push
(bad)
fsubrp
inc
ret
sti
and
mov
xor
cmp
mov
popa
mov
fdiv
leave
pusha
pop
xchg
je
mov
push
push
ror
inc
mov
pushf
nop
or
xchg
xor
call
push
cmps
and
pop
xor
xchg
fidiv
cmovs
jg
mov
sbb
xchg
jle
in
mov
cmp
dec
mov
std
dec
or
and
int3
fnstsw
out
mul
lock
lock
sbb
mov
lock
sbb
mov
lock
sbb
mov
lock
sbb
mov
rep
add
cdq
clc
push
ins
loop
mov
jl
push
push
xchg
ins
mov
adc
inc
popf
call
jb
inc
pop
mov
mov
mov
iret
mov
inc
or
lahf
das
repz
je
or
mov
dec
mov
xlat
pusha
data16
rep
add
cdq
clc
jnp
fimul
aas
pop
jle
mov
inc
mov
and
cmc
push
iret
fs
jnp
fimul
aas
pop
jle
mov
inc
mov
and
cmc
push
iret
fs
jnp
fimul
xor
mov
mov
xor
ret
pop
shr
xchg
mov
mov
adc
mov
xor
ret
pop
shr
xchg
mov
mov
adc
int
pop
mov
push
jae
out
(bad)
movs
cmp
mov
push
(bad)
xor
loop
xchg
xchg
ret
aad
jae
addr16
shr
in
push
enter
sahf
frstor
loope
fidiv
fadd
mov
or
pop
cmps
stc
test
lods
fs
(bad)
mov
xchg
repnz
rcr
mov
adc
adc
gs
push
mov
and
xlat
cli
cmp
in
fistp
test
jns
xlat
pop
and
and
int3
hlt
add
mov
outs
inc
ins
test
stc
dec
lahf
ficom
or
into
push
pop
hlt
popa
mov
fisttp
mov
jno
adc
fwait
xchg
mov
ret
jl
outs
jne
mov
xchg
sub
push
xor
xor
mov
jnp
and
inc
or
mov
test
sub
not
inc
pop
and
jmp
inc
inc
loope
mov
(bad)
and
mov
xchg
xchg
lods
add
and
mov
inc
(bad)
mov
nop
dec
cmp
mov
mov
jbe
mov
shl
adc
or
es
or
sub
aas
dec
mov
xor
add
or
push
jbe
pop
dec
arpl
data16
in
cmp
(bad)
or
movs
enter
and
cmp
dec
dec
stos
cmp
xor
sub
pop
sub
mov
inc
stc
nop
call
movs
xor
sti
cwde
xchg
bound
(bad)
cld
popa
jbe
mov
cmp
loopne
xchg
mov
loopne
xchg
mov
movs
adc
les
repz
popa
adc
(bad)
dec
push
mov
aaa
mov
jno
cmp
mov
fdiv
and
pop
jne
sahf
int3
inc
out
aaa
mov
test
ins
sub
out
cmp
push
mov
retf
cmp
cmp
fsubr
jle
and
outs
out
mov
sub
arpl
ins
pop
call
sbb
add
or
sbb
cmps
xchg
shl
es
push
mov
xor
sub
repnz
or
lods
cmp
or
xchg
ss
sub
ds
dec
xlat
mov
lods
in
lods
arpl
rcl
test
push
jmp
xchg
fs
or
push
and
and
mov
arpl
or
jecxz
mov
retf
sbb
fld
(bad)
pusha
mov
aam
nop
mov
adc
mov
and
cs
test
in
sbb
jmp
movs
cmps
rol
dec
mov
inc
inc
pushf
sub
ret
mov
xlat
shl
int3
lea
cmps
push
cmps
mov
out
ins
mov
outs
and
mov
push
(bad)
fdivr
popf
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
std
pushf
(bad)
cmps
fstp
push
(bad)
fdiv
pop
lods
sar
outs
into
out
cmp
inc
jge
(bad)
fdiv
pop
lods
sar
outs
into
out
cmp
inc
jge
mov
jne
xor
push
xor
push
xor
push
xor
push
pop
push
inc
std
xlat
test
lods
rcl
lods
enter
int3
xlat
repnz
(bad)
(bad)
mov
add
cmp
inc
xchg
mov
and
xlat
cli
push
and
pop
pushf
xchg
push
test
xchg
mov
xlat
pop
inc
ds
in
lds
ja
nop
js
sub
cs
sub
jo
mov
test
adc
jns
jb
add
(bad)
lods
test
sahf
ja
(bad)
push
mov
outs
jns
stc
push
icebp
(bad)
sub
and
lds
push
loope
cli
add
ficom
int
les
paddd
out
mov
jmp
shl
add
xchg
retf
push
xor
dec
pop
sbb
fcom
mov
pop
push
xchg
pop
popf
jno
sbb
retf
pop
cmp
dec
ret
lods
sbb
in
mov
outs
adc
add
mov
test
das
sub
dec
xor
retf
add
xor
in
ror
lahf
xchg
lds
push
inc
or
and
repz
sub
jnp
fist
icebp
movs
mov
jle
bnd
jl
js
(bad)
mov
push
jl
mov
xchg
push
(bad)
mov
and
shr
scas
jno
inc
mov
shl
(bad)
cdq
dec
retf
test
dec
mov
loopne
es
enter
int
movlhps
lahf
call
cmp
out
icebp
test
add
mov
dec
xchg
fcom
push
inc
adc
xchg
add
dec
rcr
out
cld
aaa
fwait
pushf
les
outs
sar
scas
pop
outs
stc
mov
stos
add
push
ins
jo
es
jmp
pop
(bad)
push
test
pop
jmp
dec
xor
icebp
mov
jle
pop
mov
jbe
loop
xchg
nop
shl
js
lea
repz
push
mov
xor
add
lds
or
das
stos
cmc
lods
adc
push
adc
fstp
loop
icebp
imul
mov
cmc
mov
xlat
fsub
jae
sub
(bad)
jmp
js
repnz
ds
inc
ins
nop
and
fyl2x
stc
xchg
push
sub
pop
stos
sbb
inc
movs
test
adc
mov
es
inc
int
ja
inc
inc
es
or
fisub
sahf
leave
cmp
push
popf
pop
cmc
movs
push
shl
xor
jns
test
jbe
mov
lods
pusha
loop
sbb
cmp
xchg
cmps
cmps
repz
mov
loop
push
fidiv
adc
inc
mov
in
ins
ret
xchg
pusha
test
(bad)
adc
fidivr
inc
stc
popf
(bad)
pop
stos
sub
daa
and
movs
pop
shr
pop
xor
call
icebp
sbb
and
(bad)
cmps
push
xor
sti
das
or
jp
jle
sti
test
push
pop
mov
and
sub
popf
push
or
pop
xor
cmp
cdq
outs
int3
xchg
ja
xchg
popa
in
fwait
lods
mov
(bad)
ja
add
inc
adc
movs
inc
and
not
rcr
shr
jne
sbb
out
rcl
imul
pushf
cli
fcmovnb
sub
add
mov
mov
dec
shr
inc
icebp
mov
and
xchg
lods
shr
and
push
mov
gs
pop
dec
xlat
jo
jo
es
into
fiadd
xchg
aas
fs
test
xchg
adc
pop
pop
sub
test
inc
push
pop
sub
push
jne
or
repnz
cmp
(bad)
shl
add
dec
adc
push
xchg
test
add
sti
fadd
mov
mov
lods
aaa
cmp
ins
loopne
or
mov
jo
and
and
dec
repnz
fimul
stos
gs
mov
loopne
nop
and
imul
cld
lock
mov
xchg
sbb
jmp
jmp
call
jne
mov
test
adc
fmul
lea
ror
jbe
(bad)
pop
out
dec
fcom
cmps
jb
push
fsubr
cdq
dec
or
retf
cwde
xor
retf
ins
xchg
out
fild
push
lock
xlat
popf
push
outs
xchg
lds
or
and
test
fcmovu
mov
movs
mov
jns
and
ss
sbb
in
sahf
test
xchg
xor
rcr
jne
fsubr
jge
aam
or
fcmovnbe
fbstp
dec
cmps
enter
call
loopne
xchg
test
aad
sar
or
jmp
add
fld
and
add
mov
movs
mov
jmp
rcr
ret
mov
sbb
xor
loopne
adc
arpl
les
in
xor
popa
xor
adc
fld
mov
mov
adc
dec
jmp
xchg
sub
int3
sbb
ja
mov
and
add
add
inc
mov
and
les
loopne
inc
cmp
repnz
or
xchg
push
scas
jo
jle
out
outs
ret
pop
(bad)
push
test
es
(bad)
data16
inc
shr
and
inc
xchg
push
out
sbb
stos
mov
xor
fild
xchg
mov
cmps
sub
les
mov
arpl
les
pop
and
mov
dec
out
int
imul
or
int3
dec
jae
jo
sbb
push
test
mov
cwde
ins
(bad)
mov
sti
in
xlat
sahf
aas
inc
out
(bad)
hlt
shl
push
sbb
inc
jns
ret
cmp
imul
mov
aaa
or
sbb
push
pushf
and
adc
or
rcr
inc
dec
pop
and
dec
clc
xor
jnp
sbb
sbb
dec
sbb
sbb
sub
xor
sbb
xor
lods
pusha
jne
and
mov
adc
pop
pop
iret
dec
movs
retf
stos
adc
mov
inc
bound
pop
and
push
cmp
imul
xchg
xor
sbb
pushf
and
sbb
or
(bad)
pop
movs
inc
dec
pop
and
inc
clc
xor
imul
lea
aaa
dec
sbb
retf
sbb
sbb
xor
lods
pusha
ret
bound
and
sub
cmp
shl
(bad)
dec
mov
or
sahf
jg
out
scas
je
cmp
mov
stos
xor
cmp
mov
cmp
jno
sti
xchg
push
sbb
sub
loopne
pop
push
pop
dec
movs
rcr
dec
cdq
cmps
sub
test
cli
movs
rcl
ftst
(bad)
(bad)
and
aam
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cdq
sub
loope
scas
mul
cmp
std
lods
(bad)
(bad)
(bad)
mov
(bad)
sar
movs
(bad)
xlat
(bad)
mov
rcl
fidiv
(bad)
(bad)
mov
rcr
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
repnz
ret
loop
cmp
std
lods
enter
test
mov
sbb
push
xchg
retf
sbb
pop
jg
add
jb
sub
dec
pusha
je
fdiv
jbe
test
daa
inc
xor
mov
xchg
loopne
sub
arpl
push
jns
adc
aad
(bad)
movs
(bad)
xlat
cli
stc
add
and
pop
pop
pop
sub
gs
sti
in
sbb
jae
ins
and
loope
push
and
std
shr
jb
(bad)
or
inc
jg
pop
sti
xor
push
retf
cmp
push
and
iret
(bad)
mov
cmp
(bad)
int3
(bad)
pop
retf
adc
pop
add
in
add
jbe
push
lock
push
jle
sub
mov
add
call
pop
pop
sub
jge
mov
dec
dec
daa
dec
xchg
mov
jl
adc
lds
aam
ds
popf
test
mov
fs
hlt
int3
aam
xchg
(bad)
mov
test
stc
push
in
xor
sbb
jle
ja
adc
xlat
add
in
out
imul
add
push
xor
out
shl
js
mov
popa
inc
call
push
std
pop
test
or
add
retf
stos
add
hlt
mov
jge
ins
and
inc
inc
fldl2e
pop
cmp
lock
jnp
dec
mov
or
out
and
or
iret
das
sub
push
mov
imul
jno
jecxz
(bad)
xor
lods
stc
jnp
popf
aam
int3
fidivr
ja
xchg
(bad)
mov
pusha
call
test
cs
xchg
es
push
cmc
shr
sbb
mov
jne
push
clc
pop
sub
pop
mov
dec
(bad)
jmp
dec
inc
pop
sbb
stos
retf
xchg
dec
dec
push
imul
aas
cmp
arpl
rol
imul
cmp
mov
(bad)
(bad)
xlat
rol
sbb
dec
vandps
retf
pop
adc
inc
mov
movs
outs
cmp
sub
adc
mov
add
xor
ins
cmp
into
jae
jecxz
in
jbe
hlt
sub
jne
sub
sub
gs
invd
mov
(bad)
(bad)
test
xchg
fisub
(bad)
push
les
jne
push
sub
xchg
dec
add
lds
(bad)
(bad)
mov
and
dec
jg
movs
test
out
les
and
sbb
les
jp
xor
inc
bound
xor
and
sbb
(bad)
xlat
out
movs
(bad)
out
out
xlat
sahf
in
mov
mov
je
out
sbb
imul
movs
(bad)
(bad)
(bad)
lods
(bad)
idiv
cmps
rcl
repnz
adc
push
mov
jmp
cmp
es
in
mov
stc
test
ret
aad
mov
hlt
push
(bad)
aam
outs
nop
jmp
or
call
and
(bad)
in
xlat
mov
shl
inc
and
sbb
cmps
(bad)
xlat
in
(bad)
xor
or
dec
jle
xor
inc
xlat
fsubp
dec
mov
adc
cmps
shl
call
xlat
outs
jecxz
sar
xor
ja
test
(bad)
(bad)
xlat
(bad)
add
movs
(bad)
xlat
mov
loope
(bad)
movs
(bad)
idiv
fcmovnb
xlat
loop
xlat
aam
test
int3
shr
movs
enter
(bad)
sar
mov
(bad)
fcomi
in
sar
adc
mov
sbb
scas
mov
or
add
(bad)
imul
into
aam
pop
pop
rcl
jmp
push
xor
ret
dec
pop
ins
cmp
dec
mov
inc
shl
loope
fwait
aad
aad
mov
jnp
push
div
iret
in
pop
and
lods
fadd
test
xchg
xor
ja
lods
dec
shr
scas
ret
mov
add
jmp
out
inc
cmp
xchg
(bad)
pop
cmps
add
imul
xor
pop
sub
ror
fcomi
loope
in
pop
lods
lds
loop
add
pushf
jg
push
sbb
inc
inc
std
adc
imul
xchg
fld
cmp
mov
adc
int3
cmp
mov
sub
aaa
les
loop
push
lods
jecxz
push
inc
cmp
dec
sbb
dec
xchg
(bad)
lahf
sbb
retf
mov
inc
pop
mov
(bad)
mov
mov
and
ret
mov
sbb
push
fwait
jmp
aad
push
mov
and
or
cmp
jno
or
rcr
cmc
push
mov
pushw
inc
add
std
call
pop
dec
jb
sar
mov
repz
(bad)
(bad)
inc
cmps
leave
pop
mov
mov
rol
xor
call
lock
mov
xchg
repz
lahf
icebp
je
or
call
ret
push
fsub
mov
and
and
jmp
sti
ficom
or
adc
addr16
ins
(bad)
div
xor
xor
rol
pop
xchg
jno
adc
enter
rcr
and
in
cmps
(bad)
mov
ds
jb
fiadd
adc
inc
das
movs
bound
mov
jmp
fnstenv
and
aas
add
push
inc
mov
xor
icebp
popf
mov
aad
ror
repz
jo
jbe
daa
xlat
sti
inc
adc
es
push
adc
sbb
stos
pop
into
nop
push
test
xchg
cmp
(bad)
rep
sti
mov
sbb
add
pushf
cmc
mov
int
jo
sbb
xchg
or
xchg
push
push
mov
and
lods
add
xor
xor
xor
pop
in
loopne
dec
jns
fsub
adc
mov
in
fld
test
ja
fist
and
mov
data16
sbb
mov
lds
inc
leave
fsub
lds
xchg
iret
stos
sahf
sub
lods
fdivp
repnz
test
test
xchg
sbb
lahf
pushf
push
loop
out
pop
into
or
cmp
into
pop
pop
(bad)
mov
cmp
inc
pop
push
mov
rol
mov
jle
add
cmp
mov
int3
xchg
imul
shl
mov
enter
rcl
loopne
adc
adc
out
mov
mov
and
pop
(bad)
hlt
inc
add
and
xlat
cli
or
push
test
arpl
xlat
movs
clc
mov
ins
sbb
cmp
mov
adc
mov
inc
mov
mov
inc
jbe
add
xlat
ss
retf
cmp
sti
and
test
call
sub
test
xchg
add
aas
mov
or
fs
(bad)
and
scas
push
cmpxchg
jp
test
fucomp
sbb
(bad)
xlat
movs
js
or
cmp
sbb
add
or
sbb
inc
mov
mov
inc
jbe
add
xlat
ss
retf
cmp
sti
and
test
call
sub
adc
inc
or
or
and
pop
(bad)
cmp
add
mov
mov
push
mov
dec
or
fdivp
mov
mov
adc
add
pop
add
inc
cli
adc
xchg
inc
xchg
out
inc
retf
push
je
das
jo
lock
mov
pop
dec
fbstp
aaa
and
xchg
das
jmp
cmc
or
cmp
mov
ret
jle
mov
and
ficomp
lock
add
ins
inc
sub
sbb
sbb
icebp
or
je
(bad)
push
imul
inc
mov
xor
push
in
retf
test
retf
add
cmc
mov
dec
dec
or
ret
inc
adc
inc
nop
sbb
add
fcomp
rol
clc
xor
inc
sbb
je
fnstenv
add
or
push
and
adc
push
cmp
inc
pop
es
imul
sub
sbb
cdq
jmp
sbb
nop
push
cmp
xchg
add
jbe
das
adc
cwde
das
int3
dec
jmp
ds
xchg
cmp
jmp
mov
stos
ror
dec
sub
retf
mov
movs
sbb
scas
aaa
mov
imul
inc
mov
jo
mov
cmp
push
fcomip
(bad)
aas
retf
or
dec
sbb
jp
mov
xor
mov
(bad)
scas
xchg
ret
shl
int
mov
pop
xor
mov
stc
shl
out
mov
rcr
das
cmp
jnp
(bad)
in
xchg
jg
sbb
out
xor
mov
add
jle
pop
pop
and
dec
hlt
add
pop
mov
pop
mov
ja
idiv
shl
xor
push
test
mov
rcl
adc
xchg
test
neg
add
out
retf
test
xchg
cmc
mov
dec
call
adc
dec
jecxz
xchg
mov
gs
mov
dec
inc
push
or
sub
add
call
cmp
sub
rol
retf
mov
add
sub
dec
sub
aad
and
cli
mov
clc
test
in
xchg
retf
out
ret
fwait
lea
push
or
inc
pop
pop
xchg
pop
xor
cs
or
das
and
bound
pop
xchg
pop
repnz
and
sub
push
jg
mov
arpl
cmovbe
ins
test
dec
or
fwait
xor
jmp
stos
leave
sbb
inc
bnd
or
pop
mov
std
fs
add
dec
xchg
mov
push
cmp
nop
push
pop
enter
(bad)
and
es
std
pusha
xchg
inc
and
inc
push
xor
(bad)
adc
mov
out
retf
add
imul
jmp
int
jnp
in
jp
push
mov
pop
xchg
jecxz
jp
mov
mov
adc
pushf
xor
xchg
dec
xchg
rcl
pop
popf
xor
out
(bad)
jnp
jle
push
stc
push
pop
sar
das
cwde
dec
enter
(bad)
clc
mov
push
ret
mov
packuswb
icebp
ror
loop
ds
cmc
xor
lods
adc
lods
sahf
xlat
sub
je
jbe
adc
mul
stos
test
addr16
xor
pop
mov
ins
cmp
cli
mov
enter
(bad)
(bad)
lods
(bad)
xlat
(bad)
loope
sar
mov
cmp
or
mov
loopne
fidivr
sub
push
mov
test
aam
mov
cmp
into
data16
clc
stc
popf
fmul
ds
sti
sahf
xor
mov
pushf
rcl
sbb
std
stos
push
arpl
mov
push
xor
fcomi
cwde
call
push
into
mov
sub
jbe
adc
lock
pushf
and
jo
dec
sbb
arpl
lods
std
stos
push
bound
mov
push
xor
movs
call
int
movs
outs
and
or
ja
xchg
inc
lods
aad
inc
push
sub
retf
ins
popaw
out
mov
dec
mov
add
push
or
and
add
cmp
push
mov
push
fisub
jmp
shr
test
loope
or
test
iret
ins
in
pop
pop
jmp
sahf
jg
inc
mov
sub
icebp
test
mov
jmp
test
js
sbb
pop
js
and
push
pop
xor
or
mov
cs
test
jecxz
push
sub
or
push
jno
sti
xor
or
pop
cmp
xchg
xchg
push
sar
mov
jnp
imul
sbb
xchg
loop
sbb
push
adc
xor
jge
(bad)
jbe
bound
fnstenv
sub
cmp
das
mov
sahf
arpl
gs
jbe
(bad)
js
push
inc
aam
loope
outs
or
sbb
dec
inc
ss
les
pusha
push
dec
cwde
mov
push
cmp
outs
xor
fistp
cmp
and
(bad)
mov
pop
retf
dec
push
mov
mov
mov
cwde
scas
loope
or
out
xor
dec
mov
sub
mov
fisub
lods
jno
test
cli
scas
pop
or
(bad)
in
test
in
loopne
jno
cwde
mov
cmp
fst
mov
cmp
jge
xchg
mov
sahf
jecxz
push
jmp
bound
stc
test
test
mov
push
inc
rol
cmp
pop
dec
fimul
loop
sub
bswap
add
out
add
mov
sbb
mov
mov
ja
xchg
or
nop
rcr
arpl
nop
aaa
add
popf
or
movups
pop
mov
inc
xlat
aam
inc
out
nop
out
jmp
sub
mov
shl
or
das
sahf
and
sbb
sub
cmps
add
add
in
jbe
inc
or
out
push
xchg
cli
adc
fsubp
xchg
mov
mov
cmps
xor
fldcw
pop
sbb
xchg
push
mov
ror
xchg
hlt
(bad)
mov
push
push
inc
push
ror
repz
jnp
outs
mov
mov
stos
jle
das
jbe
and
test
rcl
lods
loopne
out
movs
enter
(bad)
xlat
imul
aam
mov
sub
fwait
cmp
push
repnz
xchg
adc
arpl
div
les
clc
push
dec
sbb
int
add
(bad)
test
mov
sti
jb
aam
std
fcom
sbb
adc
je
jecxz
(bad)
dec
adc
pop
mov
cdq
mov
ficom
iret
adc
push
adc
out
jo
sub
adc
out
shl
test
dec
fsubr
pop
call
(bad)
test
or
push
pop
loop
xchg
jle
mov
or
push
mov
test
cmps
mov
mov
sbb
pop
jg
jg
in
rcr
ret
mov
(bad)
mov
mov
add
ins
pusha
xor
outs
(bad)
dec
adc
pop
mov
cdq
mov
ficom
iret
adc
push
adc
out
and
xor
xor
xchg
sub
xor
loop
sbb
fwait
leave
cmps
and
xchg
in
add
shl
adc
cmp
sub
in
shl
(bad)
cmp
fistp
push
mov
sbb
fcmovb
gs
cmp
xor
lods
sub
ins
jmp
sbb
je
jnp
and
mov
retf
jno
lock
dec
movs
sub
ja
je
push
xor
aaa
outs
mov
jl
idiv
lahf
sbb
xlat
sub
lahf
inc
mov
mov
in
outs
pushf
lahf
fcomp
pusha
daa
dec
cmp
mov
inc
xchg
retf
dec
cmps
jmp
sbb
cli
jnp
mov
fbld
push
adc
sbb
sahf
popa
or
shl
sti
push
inc
arpl
xchg
retf
sub
aad
popf
pop
jb
inc
and
mov
mov
out
mov
js
retf
popa
xor
sub
jb
ja
daa
call
sbb
test
cld
jge
pop
cs
test
ins
ins
dec
iret
outs
xor
fadd
push
pop
inc
and
popa
popa
dec
pop
shl
cld
dec
jl
cs
test
ins
ins
dec
iret
outs
xor
fadd
pop
mov
adc
movs
jmp
icebp
xchg
cli
pop
loopne
push
add
mov
jle
push
ja
mov
pop
out
cmp
les
loopne
adc
in
daa
adc
jae
cli
dec
loope
or
adc
sbb
or
aaa
cmps
push
jp
ins
lods
pop
cdq
cmp
pop
add
aam
daa
sub
je
pop
push
(bad)
jecxz
js
lahf
xchg
jecxz
stos
test
add
add
cmp
add
mov
dec
xor
imul
push
or
vmread
(bad)
xor
and
dec
sbb
jecxz
scas
add
pop
cmp
repnz
mov
mov
adc
popa
cmp
jl
es
adc
stc
jae
add
cdq
cs
out
push
pushf
fs
loop
jge
mov
jns
and
mov
push
sbb
sub
dec
mov
sbb
inc
pop
mov
outs
sahf
(bad)
std
xor
pushf
mov
ja
test
fsubr
jae
call
je
jl
test
loopne
(bad)
cdq
stc
fsubr
mov
aam
and
repnz
adc
pop
or
sub
mov
jb
jecxz
dec
sub
lods
(bad)
cli
lea
out
mov
jg
dec
ret
stos
mov
loop
dec
cmp
das
mov
fisub
pop
icebp
xor
push
xor
ss
scas
adc
inc
out
pushf
(bad)
repz
cmp
xor
xor
enter
shl
xor
ins
(bad)
outs
bound
pop
pop
ret
sub
imul
in
pop
inc
dec
inc
push
ds
call
loopne
out
sub
adc
iret
sub
test
scas
pop
xor
pop
inc
jge
jecxz
jno
retf
mov
icebp
or
aas
sub
adc
jbe
ins
push
sub
mov
jne
inc
stc
bound
ds
popf
sbb
and
or
imul
popa
cmps
retf
pop
aas
push
shl
adc
xor
jae
ret
enter
mov
push
dec
mov
xlat
scas
pop
jge
clc
stc
sahf
inc
cmp
xchg
js
push
sub
add
std
(bad)
retf
call
sub
push
repnz
push
xcrypt-cfb
cmps
loope
and
cmp
test
dec
ins
je
mov
xchg
sub
in
mov
cmovg
and
js
dec
cmp
dec
aaa
retf
clc
in
pop
sbb
cmp
sub
mov
dec
sti
xchg
push
std
push
outs
sbb
push
xchg
push
adc
mov
mov
jbe
or
popa
push
(bad)
mov
(bad)
and
addr16
iret
fisub
cmp
ror
stc
pop
push
dec
inc
xchg
je
jae
mov
popf
pop
ret
clc
ret
out
mov
into
xor
jle
pop
lea
or
push
sahf
je
int
ins
sub
inc
cmp
pop
adc
aam
cs
cs
outs
test
and
mov
xchg
popa
and
pop
adc
mov
pop
cdq
movs
or
pushf
ins
aas
cmp
xchg
loope
mov
pop
adc
pop
xor
loopne
push
jb
fs
push
sub
pop
push
jbe
cmc
adc
and
icebp
out
test
dec
cmc
fst
lahf
pop
mov
and
lock
xchg
sub
xchg
or
pop
inc
sbb
sbb
mov
movs
xor
jmp
xchg
or
fcomip
pop
lds
inc
int3
push
ss
jl
data16
jg
int
fst
pop
inc
popa
sahf
push
pop
ret
xor
loope
cmp
out
repnz
lahf
xor
push
in
push
pushf
pop
and
mov
aaa
fld
int
mov
adc
pop
out
cli
adc
xchg
fwait
inc
rol
pop
pop
sar
push
mov
rcr
inc
xor
cwde
stos
icebp
mov
stc
push
and
mov
dec
leave
push
push
dec
test
iret
dec
retf
jle
jne
std
stc
sub
int3
fadd
cmp
jl
fcomp
stc
loope
and
xor
fdivr
push
fwait
xchg
xchg
xchg
aad
xor
jbe
push
out
xor
jno
fwait
push
(bad)
pop
movs
imul
jmp
repz
shr
xrelease
das
(bad)
mov
lds
add
out
push
and
neg
push
xchg
mov
(bad)
sti
repnz
int3
shl
movs
enter
(bad)
sar
loope
xlat
jp
rcl
gs
xchg
mov
fadd
push
jge
scas
nop
fcompp
rcl
xor
aam
repnz
mov
loop
sbb
ret
stos
jno
pop
xchg
sub
ror
xor
sub
sub
adc
mov
pop
add
or
add
enter
pushf
imul
pop
cmp
jno
xor
cmp
or
cmp
int
inc
mov
and
mov
cmp
dec
and
shr
imul
outs
(bad)
mov
sti
and
push
nop
das
(bad)
ins
jg
nop
imul
pop
mov
push
xchg
fimul
fabs
fs
sub
and
lea
and
add
xor
pop
(bad)
mov
mov
jecxz
xchg
or
imul
adc
sahf
in
add
mov
shl
in
enter
sbb
mov
lods
aad
mov
sbb
cmps
test
xchg
cmp
mov
pushf
sub
jo
cmp
mov
cwde
ja
fwait
es
test
repz
adc
mov
lods
pop
repnz
movs
js
xor
pop
and
ja
cmp
test
mov
loope
fidivr
retf
add
xchg
int3
gs
inc
jne
sub
xor
xor
js
push
mov
mov
mov
xchg
fmulp
inc
dec
or
cld
or
rdtsc
mov
dec
mov
test
or
stc
inc
in
div
rol
adc
mov
and
pop
js
jp
nop
add
test
ds
imul
pop
(bad)
in
js
xlat
cmc
aas
hlt
cmc
sub
je
inc
and
pop
jno
arpl
pusha
test
out
mov
dec
fcomip
inc
leave
cs
inc
addr16
dec
loop
mov
mov
xor
jecxz
xor
test
and
or
fidivr
xchg
cmps
adc
stos
and
das
xor
int
popa
pop
dec
pop
enter
aad
xor
rcl
out
rcl
sub
lock
dec
sub
sahf
dec
jl
idiv
or
cmps
cdq
daa
int
std
retf
jno
ret
push
adc
pop
jnp
fs
add
daa
dec
stos
jl
dec
cli
sbb
repnz
push
inc
inc
and
bound
xor
mov
xor
mov
loopne
rcl
mov
pop
addr16
dec
jmp
jnp
cmc
or
push
fistp
sbb
je
xchg
lock
rcr
adc
pop
sbb
aam
loope
ret
xor
fcomp
dec
adc
inc
imul
push
lds
xor
sub
aad
cmp
or
push
jle
repnz
and
xor
cdq
aad
aam
mov
js
fstp
mov
mov
rcr
and
addr16
sbb
out
and
call
mov
xlat
std
sub
fmul
fs
pop
in
add
(bad)
shl
fldenv
add
or
cmps
xchg
or
add
cmps
dec
sub
mov
inc
mov
out
jmp
xchg
icebp
iret
int3
div
movs
mov
mov
mov
or
adc
(bad)
dec
cmps
pop
dec
fild
add
arpl
dec
in
or
(bad)
fnstcw
sar
int3
scas
sbb
(bad)
mov
aas
pop
xchg
add
ja
mov
pusha
cmps
int
shl
fild
div
daa
cmp
rcr
jae
into
mov
dec
sub
jmp
jmp
mov
mov
mov
jge
mov
mov
sar
inc
jp
xchg
cmp
jb
les
or
out
adc
cs
dec
sbb
test
sti
push
fnstsw
mov
aaa
sbb
into
and
jb
popf
inc
cld
shl
(bad)
in
adc
mov
movs
in
into
push
inc
jae
xor
jo
mov
sub
data16
cmp
fisttp
fwait
(bad)
push
inc
and
push
aam
mov
nop
push
xor
pop
bound
test
sbb
add
add
xchg
push
push
ins
fcomp
dec
std
es
adc
push
add
lahf
push
jp
push
inc
dec
sub
and
repnz
pop
mov
shl
cmp
pop
scas
or
cmp
(bad)
movs
(bad)
sar
clc
(bad)
fstp
pop
in
xchg
bound
sub
jno
shr
pop
sbb
dec
sub
jnp
out
test
rcl
ins
(bad)
adc
xor
sbb
cmp
push
stos
fcomp
fucomip
or
stos
mov
int3
es
pop
out
xor
adc
lods
rcl
push
dec
pop
shrd
enter
fsub
(bad)
push
inc
imul
sete
and
lock
add
dec
std
and
mov
out
fstp
mov
push
clc
rol
jne
cmp
daa
lahf
test
retf
adc
ja
adc
test
cmc
pop
(bad)
jbe
test
push
pop
mov
iret
pop
sbb
adc
enter
push
(bad)
ins
in
call
test
iret
pop
sbb
fidivr
fst
std
sbb
mov
jbe
call
dec
ror
std
pop
cmp
std
popa
xlat
test
lods
rcl
test
ror
movs
(bad)
sar
mov
add
jnp
pop
adc
cmps
adc
test
std
mov
cmp
sahf
sbb
rcl
outs
addr16
inc
dec
jne
push
jns
imul
add
and
gs
sub
imul
sbb
xor
push
ss
shr
mov
cwde
pop
outs
fs
add
dec
dec
rcr
pop
push
fild
int
and
xchg
and
lods
test
xor
call
int
std
sbb
ja
nop
je
mov
mov
jmp
xchg
mov
lds
push
outs
jmp
xor
lea
or
outs
adc
cmp
or
jg
sbb
loope
dec
xchg
sbb
sub
or
dec
(bad)
jns
cdq
and
addr16
or
adc
hlt
lock
xor
push
push
push
in
or
sbb
jge
cmp
jmp
or
mov
cmp
jmp
out
mov
sbb
in
xchg
xor
push
push
pop
pop
push
adc
out
pop
adc
and
sub
arpl
jge
push
cs
pop
sub
pop
das
ins
push
inc
jg
jne
xchg
cli
inc
in
test
push
pop
xchg
sub
inc
inc
add
sub
rcl
xchg
lods
mov
adc
adc
xchg
mul
loopne
leave
or
cmp
repz
sbb
aam
dec
sub
cli
out
hlt
dec
sub
loopne
pop
std
sar
mov
arpl
mov
push
pop
mov
out
sbb
fdivr
daa
push
cmps
mov
dec
mov
jno
xchg
pop
rcl
es
mov
(bad)
and
mov
and
cmps
fwait
lods
mov
inc
or
in
xor
retf
and
shl
mov
xchg
mov
arpl
call
jecxz
fcom
add
retf
inc
push
add
in
cmp
stos
(bad)
and
xchg
bound
sub
dec
pop
xchg
aaa
inc
cmp
jp
sub
sti
mov
push
and
nop
xor
stos
icebp
ins
inc
jne
or
inc
in
mov
gs
mov
fst
movs
add
cld
adc
fdiv
or
ins
arpl
fucomp
lods
or
mov
mov
aas
rcr
std
hlt
arpl
pusha
hlt
call
mov
inc
lahf
pop
jb
pop
test
mov
daa
or
ins
call
ds
dec
stc
nop
adc
shr
push
xor
cmps
ins
repnz
add
mov
and
xchg
inc
(bad)
inc
fiadd
rol
jge
cmp
faddp
jne
stos
scas
ins
pop
sti
add
push
out
lods
ds
push
fs
xlat
fdiv
popa
or
pusha
jbe
mov
mov
aas
fstp
outs
(bad)
mov
add
pop
push
mov
mov
cmp
js
cmp
retf
mov
pop
lods
cs
std
jb
out
jmp
fild
fucom
es
add
add
lods
enter
enter
(bad)
sar
loope
xlat
(bad)
mov
adc
cmp
and
sar
mov
rcl
pusha
stos
mov
push
mov
xchg
enter
push
mov
jl
shl
xchg
hlt
lods
pop
sub
mov
scas
cmc
test
sub
out
ret
push
pop
inc
lods
out
xchg
hlt
xchg
pusha
loop
call
mov
xchg
enter
push
mov
jl
nop
mov
push
pop
(bad)
es
hlt
mov
fldcw
das
scas
aad
int3
in
lds
mov
or
mov
inc
fadd
js
out
jb
lods
loop
loop
fadd
mov
and
xor
cmp
adc
mov
mov
adc
jecxz
in
xor
imul
xchg
out
iret
mov
fldcw
mov
pop
aas
jno
jne
inc
xlat
int3
ret
dec
and
loop
loopne
xchg
daa
outs
jecxz
sub
push
jg
retf
push
xchg
loopne
ficom
mov
cdq
lds
loope
aad
fimul
adc
jecxz
out
je
push
adc
adc
mov
ds
or
sub
sub
xchg
cmc
popa
stos
mov
mov
arpl
mov
jmp
outs
adc
mov
inc
int3
adc
xor
(bad)
ret
dec
mov
mov
mov
imul
push
bound
sahf
add
jp
aad
mov
repnz
dec
cld
loopne
dec
jb
xchg
fisub
jl
xchg
fld
cmp
fmul
jo
mov
mov
add
pop
loopne
ret
ret
cbw
mov
je
out
ja
sbb
test
hlt
cwde
pop
out
xchg
sti
not
xor
mov
push
lock
jmp
xor
popf
loop
not
cmp
mov
sub
pop
and
push
movs
xlat
loopne
mov
movs
cmp
cdq
loopne
jo
pop
jno
mov
in
adc
and
nop
mov
in
aam
or
xor
jmp
jae
js
push
cmp
xchg
in
loopne
ror
nop
xchg
fld
xchg
cmps
fimul
cld
jmp
outs
inc
adc
mov
and
mul
popa
inc
pushf
icebp
sti
in
shl
movs
nop
add
lods
add
out
xchg
movs
xlat
bound
mov
cmp
inc
cmp
int
sub
in
popa
push
cs
in
xor
add
pop
mov
icebp
in
jae
aam
sbb
iret
imul
leave
aas
jae
cwde
int
dec
movs
ret
pop
cmp
add
push
fistp
xchg
sub
lds
adc
daa
scas
jmp
shl
pusha
fistp
cmps
add
js
hlt
arpl
movs
pop
add
ret
lock
(bad)
sti
aam
xor
xchg
je
in
aad
enter
rcr
mov
pop
pop
mov
arpl
push
jne
xor
aas
scas
cmp
fwait
call
call
xor
movs
fisttp
xchg
(bad)
fmul
repz
sub
ins
outs
sub
adc
fcomp
fwait
shl
(bad)
sub
movs
int3
(bad)
movs
enter
(bad)
sar
in
xlat
jp
add
jns
les
fcompp
rcl
dec
test
mov
jg
xchg
fwait
mov
adc
or
push
pop
(bad)
mov
aas
test
in
pop
cmp
cmps
lods
sub
fnsave
push
cld
call
data16
cmp
sub
shr
pusha
(bad)
cmps
xor
mov
ins
xchg
jecxz
fidiv
or
ds
aam
(bad)
ss
into
push
xchg
stc
xor
fstp
adc
retf
js
repnz
cmp
sub
int3
cld
xchg
and
ror
or
stc
pop
pop
stc
pop
add
icebp
mov
in
retf
ja
cli
sub
ins
mov
jp
shl
mov
dec
ins
in
xchg
rcl
or
pop
lock
fimul
cwde
adc
mov
jae
test
adc
mov
dec
gs
retf
inc
adc
into
jmp
loop
scas
ins
sbb
and
push
mov
lods
mov
push
or
aam
jae
movs
pop
xor
xor
nop
push
mov
xor
or
inc
xchg
jnp
pop
popf
sbb
add
inc
inc
mov
mov
repz
int
arpl
mov
jmp
mov
scas
cmp
sbb
mov
test
ret
mov
mov
sahf
pushw
in
(bad)
(bad)
into
addr16
cmps
inc
test
out
in
or
pop
aaa
mov
add
pusha
cmps
fldenv
out
xor
xchg
daa
das
imul
mov
pop
hlt
mov
and
mov
arpl
popa
xchg
or
lods
enter
add
sbb
push
call
adc
xor
fdivr
lock
dec
push
push
mov
cs
mov
imul
jmp
adc
xor
fdivr
lock
pop
push
push
mov
mov
or
fimul
sahf
sub
xchg
dec
imul
inc
dec
add
mov
or
push
sar
add
add
cmps
repz
jg
das
ret
gs
inc
pushf
adc
dec
pop
or
jo
movs
das
add
sub
or
aam
and
push
adc
pusha
out
cs
mov
fbld
cli
xchg
cmp
out
rcl
dec
sbb
push
cmps
mov
xchg
arpl
jecxz
mov
sub
jo
mov
scas
sub
(bad)
iret
jge
jmp
mov
(bad)
outs
test
popf
sti
sub
mov
sub
pop
ror
xlat
mov
jmp
xor
and
ins
push
and
arpl
xchg
in
push
nop
ror
sahf
push
or
retf
lods
shl
dec
inc
mov
aam
stc
jmp
pushf
add
or
xchg
pop
add
shl
jne
adc
push
into
mov
jg
mov
sahf
jle
sub
scas
mov
mov
in
daa
in
outs
push
pop
outs
push
dec
sbb
fs
jo
pop
pop
out
push
stc
out
pop
pop
sub
or
movs
pop
rol
stc
adc
test
pop
cld
dec
not
call
push
cld
and
daa
(bad)
pop
data16
and
mov
mov
cli
mov
inc
cmp
cwde
mov
retf
rep
sti
dec
mov
test
or
scas
push
jb
dec
ins
adc
jne
inc
test
outs
les
xchg
sahf
rcr
cmps
stc
adc
lea
out
xor
xchg
mov
mov
outs
mov
and
jbe
(bad)
ja
clc
jb
pusha
aam
daa
jns
lods
xor
dec
(bad)
jmp
test
mov
lock
call
cwde
or
adc
adc
mov
pop
sub
xchg
jmp
retf
inc
mov
mov
fs
pop
pop
loopne
movs
test
jae
sub
ja
aad
xor
push
mov
icebp
sub
in
pop
test
mov
frstor
and
jnp
xor
mov
jg
inc
sub
(bad)
fadd
out
int
nop
sbb
cli
cmps
retf
mov
shl
inc
gs
mov
sbb
and
lods
pop
scas
retf
shl
in
aam
enter
pop
jb
inc
dec
add
adc
into
sub
icebp
popf
cmps
fstp
pop
add
jo
movs
out
in
into
je
stc
fs
adc
pushf
inc
cld
dec
test
(bad)
xor
(bad)
test
cmps
fstp
fadd
jns
dec
pop
or
adc
push
les
into
pop
cmc
adc
scas
mov
mov
jmp
sbb
dec
out
int
mov
cmps
jno
push
outs
sub
xchg
mov
push
gs
das
add
cmps
mov
cld
in
loop
pop
cmps
jge
ret
shl
pusha
push
cmc
inc
lahf
sub
pop
int
leave
shl
inc
hlt
xor
into
lods
xchg
nop
int
sbb
movs
mov
ds
cmps
mov
cmp
fwait
clc
retf
out
gs
cmp
nop
ins
pushf
lds
pop
sbb
xchg
out
inc
xor
movs
clc
rcr
fs
sahf
loope
retf
icebp
push
fucomip
inc
adc
add
xor
lock
mov
xchg
lds
cmp
push
lahf
les
add
add
sub
sub
movs
idiv
pop
inc
dec
sar
inc
jle
sub
inc
inc
and
cmps
push
xor
jae
inc
aad
cmc
jno
jg
mov
test
movs
mov
xchg
xor
inc
hlt
xor
stos
lods
cld
jae
popa
dec
push
push
out
sbb
ss
popa
rcr
in
pop
icebp
test
shl
mov
jp
fist
push
sub
cmps
ror
sbb
shl
in
mov
loop
shr
add
int3
mov
add
int
dec
rcr
gs
ret
shr
call
inc
arpl
or
jmp
cmp
fdiv
inc
adc
adc
dec
into
out
inc
xor
adc
dec
into
icebp
loop
pop
inc
cmp
adc
adc
or
in
xor
add
(bad)
mov
mov
ror
movs
(bad)
test
lds
div
enter
in
jmp
ret
fimul
in
out
xchg
cld
sti
mov
in
xchg
cmps
icebp
adc
cmc
cwde
and
xchg
pop
xchg
mov
stos
repnz
shr
and
ret
shl
xchg
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
movs
mov
(bad)
loope
xchg
repnz
rcl
mov
cli
mov
rcr
movs
(bad)
xlat
(bad)
mov
fcom
jmp
ror
movs
enter
(bad)
sar
movs
(bad)
xlat
(bad)
mov
rol
cmps
in
xchg
movs
hlt
stos
cli
in
fcomi
(bad)
cli
enter
inc
push
jle
not
lahf
sbb
jmp
push
rcr
mov
inc
pop
inc
push
and
jmp
repnz
cmps
dec
xchg
dec
sbb
popf
test
lea
(bad)
xlat
ds
pop
(bad)
aaa
ins
xor
out
loopne
jns
add
inc
ror
xchg
xchg
fldcw
dec
rcl
pop
dec
xchg
mov
out
cmp
xchg
inc
mov
xlat
adc
aaa
mov
inc
movs
repnz
std
movs
(bad)
idiv
cld
mov
das
fild
cli
push
cmp
test
jl
mov
mov
jmp
pop
or
(bad)
jl
push
mov
fs
mov
enter
sti
sbb
in
in
imul
adc
or
out
pop
and
xlat
lock
pop
(bad)
arpl
fimul
aam
push
jne
adc
dec
sbb
fcmove
dec
outs
movs
pop
cdq
cld
in
xlat
dec
push
in
pop
popa
cmp
push
add
and
xlat
(bad)
out
dec
mov
std
jbe
cwde
xor
xor
add
js
push
ja
in
pop
xor
xor
int
aaa
dec
daa
cdq
stos
cld
loope
cmps
outs
iret
sub
pop
(bad)
xor
push
xor
push
call
loop
mov
lea
jmp
sbb
or
(bad)
pushf
cmps
sbb
or
aad
aam
enter
sbb
int3
(bad)
leave
out
std
mov
xor
inc
jae
fdivr
adc
cmp
xchg
pop
std
push
cmp
enter
mov
test
cmps
adc
in
mov
and
ror
mov
xchg
pop
inc
add
js
js
jp
je
int
leave
adc
push
adc
ja
or
or
cmp
fnstenv
pop
les
adc
dec
jnp
(bad)
xchg
mov
sahf
fisub
xchg
lods
mov
or
mov
movs
arpl
xor
ret
pop
inc
sub
outs
jno
inc
sub
mov
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
push
cld
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fwait
(bad)
xlat
add
stos
push
arpl
or
(bad)
and
idiv
movs
(bad)
xlat
(bad)
rol
push
mov
popf
or
xor
outs
(bad)
(bad)
out
movs
(bad)
xlat
(bad)
test
pop
xlat
fiadd
es
(bad)
(bad)
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
xchg
cmp
std
xor
rcl
movs
aam
cli
movs
(bad)
(bad)
test
aam
mul
fmul
jle
or
imul
push
add
(bad)
imul
stos
push
rcl
mov
add
add
cmp
out
add
mov
addr16
int3
ret
and
add
and
retf
rcr
jo
clc
hlt
mov
xor
sub
mov
push
(bad)
addr16
enter
push
call
lods
pop
mov
push
and
jl
cmp
std
dec
mov
and
sub
dec
call
push
ss
mov
xor
xchg
xchg
jo
add
imul
cdq
ins
cmp
dec
shl
mov
jge
aaa
jns
imul
sbb
push
sub
jns
mov
jg
out
inc
jle
outs
push
jmp
add
loope
mul
sbb
mov
mov
push
inc
cld
push
xor
fild
lea
repz
retf
adc
cli
add
rcr
es
pop
movs
sub
ffreep
pop
mov
ret
xor
or
mov
hlt
push
stos
adc
jbe
pop
mov
and
sub
mov
adc
jg
fist
movs
push
add
dec
add
stc
sbb
pop
sahf
je
cmp
push
nop
jmp
jb
and
adc
and
sbb
lock
mov
xor
ds
loope
add
jnp
xchg
(bad)
fistp
pop
jmp
sti
push
xchg
das
inc
mov
aaa
mov
ret
test
xchg
shr
call
ret
pop
ret
sahf
lahf
push
mov
popf
ret
jae
lock
push
retf
cmp
test
cmps
jle
add
sub
mov
jbe
adc
aas
push
adc
xchg
adc
mov
push
cmp
idiv
loopne
scas
mov
sar
retf
shl
pop
push
adc
inc
push
lahf
imul
mov
cmc
pop
popf
push
js
clc
push
inc
ret
data16
xchg
mov
stc
pop
sub
pop
in
aad
push
in
aad
shl
jmp
sub
daa
dec
pop
inc
cdq
ret
pop
push
jmp
and
cmc
push
push
(bad)
xchg
aam
std
inc
loop
cmp
dec
lock
xchg
jb
test
add
jbe
shl
jb
popa
xlat
pushf
add
int3
xlat
out
sar
cli
movs
(bad)
rcl
mov
add
loope
dec
cmp
lea
mov
pop
sar
arpl
pop
cli
and
test
aaa
add
sar
pop
je
sbb
inc
mov
aaa
adc
fisttp
inc
in
sti
repz
or
aas
inc
mov
inc
adc
div
in
mov
mov
mov
sub
or
ins
mov
adc
dec
pop
aam
sub
js
dec
push
mov
jecxz
arpl
fiadd
dec
dec
lods
fcmovu
jae
sbb
int3
xchg
cmc
out
pop
cmp
cmp
call
dec
test
cdq
and
mov
mov
mov
jnp
mov
stos
aad
es
xchg
cwde
adc
fbstp
dec
mov
test
jg
mov
dec
jns
and
sti
aaa
inc
sahf
pop
int3
scas
push
les
pop
shl
gs
icebp
repnz
icebp
stos
jp
jno
ins
sbb
fsub
push
in
mov
mov
push
add
jns
xchg
xchg
adc
push
dec
das
aas
xchg
call
jl
jecxz
pop
out
dec
inc
addr16
in
je
xor
and
xor
dec
push
sahf
pop
inc
int3
int
pop
sub
retf
mov
mov
xor
inc
stc
add
fnstenv
sar
push
arpl
sub
xor
mov
imul
and
mov
aam
push
out
xchg
sbb
push
out
mov
out
repz
(bad)
mov
lahf
cwde
push
cmp
(bad)
shl
pop
stos
inc
stc
push
and
stos
std
fadd
fsub
pop
hlt
pop
pop
add
cs
dec
cdq
push
test
call
or
push
and
(bad)
retf
into
ret
pop
pop
xor
add
dec
cmp
addr16
not
outs
fist
push
and
xor
pop
sahf
jl
add
jae
and
xor
sahf
sub
add
rep
inc
jae
xor
mov
shl
xor
cmp
in
jp
cs
inc
nop
mov
fs
fdivp
adc
jae
in
sub
add
pop
push
push
(bad)
js
loope
fimul
sub
stos
jbe
sbb
push
dec
cmc
cmp
jecxz
fsubr
les
jg
lods
stc
cmp
(bad)
loop
adc
adc
mov
ret
ins
aas
cmp
(bad)
adc
aas
icebp
je
jae
(bad)
push
jns
pop
mov
inc
hlt
es
aaa
jmp
and
ret
test
je
into
popf
call
xor
rcr
cmps
dec
loop
bound
sub
arpl
xchg
shl
nop
xchg
test
or
std
lods
jp
icebp
xchg
test
jno
shl
repz
gs
aam
sbb
addr16
jmp
pop
fisttp
xchg
jmp
xchg
bound
fisubr
inc
xor
nop
gs
or
stos
mov
sub
(bad)
and
shl
sbb
js
sbb
mov
mov
inc
or
mov
pop
mov
jg
cmc
popa
cwde
rcl
fnstenv
and
add
ds
sbb
aas
sub
pop
xchg
shr
and
mov
pusha
add
add
mov
je
cwde
inc
sahf
mov
mov
inc
std
shl
push
pop
ins
xchg
mov
test
(bad)
mov
(bad)
and
in
sbb
icebp
mov
add
stos
xchg
inc
or
ins
lods
gs
dec
sub
test
rcl
scas
ja
icebp
mov
dec
enter
sar
mov
mov
cdq
outs
jp
add
or
je
dec
xchg
adc
(bad)
mov
clc
mov
bound
cwde
mov
ja
loop
ins
pushf
sub
(bad)
pop
scas
xchg
clc
mov
xor
mov
mov
xor
dec
push
(bad)
add
mov
fs
inc
fst
jnp
mov
xchg
enter
add
jnp
inc
push
jns
les
(bad)
shr
push
(bad)
imul
dec
shl
xor
aam
repnz
enter
(bad)
enter
aam
jmp
xchg
jg
add
div
jnp
inc
push
aaa
test
xchg
std
mov
cmp
jb
je
jmp
lods
jl
test
leave
jo
lods
das
inc
or
lock
cmps
clc
xor
pop
fsub
push
scas
xlat
sti
add
mov
mov
jnp
lock
(bad)
hlt
in
repnz
jbe
and
push
into
push
(bad)
and
mov
add
push
mov
and
mov
in
movs
idiv
fsub
adc
add
fadd
imul
sub
push
xchg
pop
cmp
stos
mov
inc
mov
add
in
rol
lods
imul
les
xor
fsubr
hlt
sub
xlat
cmc
ret
mov
push
mov
mov
lds
scas
je
pushf
or
cmps
push
xor
or
dec
pop
or
mov
sub
adc
sub
arpl
sub
fwait
jb
out
sbb
push
mov
jae
fmul
cmp
add
pop
pop
or
repnz
mov
gs
add
ins
mov
mov
arpl
sahf
jl
cmp
inc
test
dec
mov
and
mov
and
jp
iret
adc
pop
sub
std
jecxz
leave
cs
in
jbe
nop
pop
and
jne
push
(bad)
out
jo
jp
dec
aad
ficom
fcomp
out
jle
push
data16
xchg
scas
pop
mov
or
xor
imul
cmp
enter
cmp
cmp
dec
mov
shl
shr
mov
addr16
imul
lahf
push
jo
test
sbb
dec
ds
aam
cmc
sub
loopne
mov
pushf
cmp
addr16
inc
push
mov
sub
mul
mov
dec
adc
imul
xor
enter
add
hlt
sahf
dec
lock
outs
mov
jge
push
cwde
fst
or
pop
mov
out
stos
cmp
fidiv
sub
sbb
sbb
not
add
jno
in
inc
sub
das
xchg
mov
(bad)
sti
std
dec
sub
bnd
push
pop
cmps
cdq
rcr
mov
add
cmp
xchg
mov
xchg
pop
push
test
and
jae
jb
(bad)
retf
sbb
imul
pop
lahf
jnp
fisubr
loopne
shl
(bad)
xchg
call
enter
(bad)
sbb
cmp
popa
xor
or
and
shr
sbb
and
cmp
cli
mov
call
out
test
(bad)
sar
in
xchg
inc
cmp
adc
jnp
enter
rcl
jecxz
fnstsw
mov
cwde
jb
push
xchg
out
mov
pop
sbb
add
(bad)
lods
(bad)
test
nop
add
das
ds
jg
cmp
cmps
xchg
xlat
daa
sub
fwait
mov
(bad)
lock
dec
stos
int3
test
aas
montmul
cmps
lds
pop
rcr
cwde
(bad)
outs
(bad)
or
sub
adc
inc
xchg
add
outs
stos
aas
dec
retf
pusha
add
sbb
adc
lldt
cmc
adc
xor
dec
pop
pop
push
int
mov
imul
pusha
pop
imul
popf
xor
iret
push
test
add
and
add
icebp
dec
jns
pushf
sti
mov
pusha
(bad)
push
call
push
ss
call
and
and
push
dec
dec
ins
xor
or
arpl
clc
add
outs
inc
ss
mov
inc
es
fist
mov
cmc
gs
xor
rcr
or
or
jno
jl
inc
shl
jo
jecxz
jo
inc
push
mov
xor
mov
arpl
sub
pushf
in
jnp
push
dec
add
js
nop
imul
jl
sub
and
or
std
rcr
(bad)
jp
call
ror
inc
mov
loopne
nop
sbb
sub
mov
jnp
lods
adc
dec
xlat
ret
adc
lods
sti
jb
and
sub
call
jecxz
test
ror
adc
jg
sti
sub
lock
rcr
cmp
int3
loope
jo
leave
push
or
clc
xchg
pop
into
dec
adc
in
push
add
mov
or
xchg
add
adc
jae
popa
inc
cmc
test
call
call
add
inc
stos
pop
test
mov
dec
shl
add
je
pop
mov
push
push
movs
xchg
add
dec
rep
xor
cwde
sub
inc
add
sub
jg
sbb
jo
popa
int3
lods
in
(bad)
outs
mov
rol
pop
jg
mov
push
mov
popf
rcr
or
rcr
fiadd
sub
dec
add
outs
adc
cmc
std
mov
repz
rol
jbe
data16
mov
lods
pop
ret
jae
dec
and
shl
xlat
ins
sub
mov
xchg
fidivr
scas
test
inc
or
xor
cmp
ds
cmps
daa
add
lods
shl
inc
sub
add
sub
xchg
cli
int3
test
imul
ds
mov
ja
jle
ret
mov
mov
in
repz
lea
adc
sbb
shr
dec
sub
movs
sub
jp
jne
in
stos
adc
jle
loopne
mov
xor
or
lahf
and
jo
fisubr
call
cmp
pop
aas
push
inc
sbb
ror
std
jge
inc
pop
into
xchg
out
xchg
sbb
xor
or
cmp
and
inc
movs
les
fcomp
mov
xor
in
div
sbb
inc
loop
popf
fldcw
and
sbb
add
pop
mov
dec
das
jo
mov
test
fmul
test
inc
(bad)
movs
shr
jae
xor
movs
cmps
adc
mov
mov
retf
dec
pushf
xchg
lea
scas
jp
scas
mov
adc
mov
xor
mov
add
sbb
cmp
mov
cmps
inc
mov
push
jmp
cmp
loopne
jmp
sbb
dec
shl
push
xchg
dec
ret
sub
push
mov
jne
fcomip
sbb
ret
mov
mov
xor
in
adc
jmp
hlt
jmp
mov
cmp
sub
sub
push
fadd
and
cwde
ffree
repz
pop
aad
sbb
loop
out
leave
fsub
aaa
sub
pusha
pop
les
or
stos
pop
mov
jg
xlat
pop
enter
adc
and
gs
retf
cmp
or
int
mov
ret
adc
add
leave
sub
mov
outs
adc
xchg
fucomip
sbb
aas
pop
icebp
push
mov
or
fucomip
dec
push
mov
movs
push
adc
push
mov
fcom
fstp
std
adc
sti
(bad)
and
pop
aad
push
aad
aam
mov
mov
mov
sahf
sahf
jmp
movs
in
addr16
movs
ja
cli
ja
mov
sub
pop
dec
push
xchg
and
pop
aaa
and
and
daa
push
repnz
mov
pop
adc
jmp
cwde
xchg
dec
sbb
push
enter
nop
sbb
rcr
add
enter
mov
push
mov
outs
or
aaa
fucom
and
in
mov
jecxz
or
cmps
jb
loop
push
ss
aas
inc
je
jns
inc
push
in
push
js
into
fistp
test
js
sbb
mov
lahf
ins
data16
(bad)
or
mov
pop
js
fld
jg
lods
lock
call
cli
push
pop
jae
data16
lods
(bad)
cmc
mov
adc
std
mov
aam
xor
retf
test
inc
aas
nop
or
xor
or
ins
mov
popf
leave
xchg
aam
inc
adc
mov
mov
cs
or
fsub
pop
jg
ds
sti
(bad)
(bad)
pop
pop
sar
test
out
ins
jnp
or
fistp
push
mov
loope
mov
repz
rol
in
in
mov
inc
inc
dec
cmc
outs
xchg
and
lahf
stos
add
jg
cmp
xchg
jp
call
mov
fst
pop
fdivr
fldenv
(bad)
push
xchg
mov
pop
pop
pop
leave
sub
jg
stc
or
mov
imul
push
or
pop
cmp
mov
test
int3
shl
movs
enter
(bad)
sar
loope
xlat
jp
les
cli
out
aad
in
adc
in
adc
std
mov
cmp
xchg
rcr
pop
in
jae
xlat
test
pop
push
in
cmp
cmps
adc
inc
or
jb
out
and
sar
jle
adc
jbe
pop
pop
stos
sbb
cmp
push
xchg
retf
push
sbb
inc
(bad)
scas
cs
(bad)
jmp
out
mov
js
inc
adc
mov
out
inc
int3
push
call
jb
imul
cmp
and
inc
mov
ins
sub
das
dec
mov
jmp
(bad)
dec
in
inc
mov
adc
xchg
fdiv
lods
addr16
or
and
inc
cli
xor
mov
dec
lods
out
xor
xchg
push
jp
nop
inc
int
(bad)
fst
dec
push
cs
jle
pop
repz
jp
inc
mov
gs
xor
jbe
fidiv
add
jo
(bad)
pop
pop
and
ret
push
or
mov
out
dec
sub
push
repnz
es
jne
rcr
jmp
int
add
aam
gs
jb
mov
test
sbb
xor
retf
mov
xchg
in
jmp
xchg
rcl
pop
ins
sar
in
mov
sub
sar
mov
cwde
sub
or
or
loopne
stos
sub
inc
ins
push
imul
fwait
and
imul
pop
cmp
and
push
xor
sub
std
icebp
pop
push
jmp
repz
sahf
sbb
(bad)
cmp
push
(bad)
xchg
lods
mov
jbe
mov
mov
movs
inc
int
fdiv
xchg
cmp
push
inc
loope
dec
mov
pop
faddp
fwait
std
iret
sti
loop
mov
addr16
fcomi
hlt
(bad)
out
sahf
(bad)
push
ds
mov
shr
loope
(bad)
dec
and
lds
mov
je
xchg
cmps
test
mov
test
push
jge
mov
inc
in
cmp
xchg
movs
or
fbld
fdivr
leave
jl
cmc
loopne
ret
jb
ins
(bad)
sub
dec
jmp
add
dec
inc
imul
(bad)
and
jp
inc
cli
push
fsubr
(bad)
cmp
test
adc
jle
pop
mov
pop
call
scas
(bad)
cmp
xlat
xor
and
arpl
sbb
fist
xchg
mov
cmp
xchg
sub
rol
aam
pop
fistp
jae
xchg
enter
data16
in
pop
sar
mov
bound
out
cmp
scas
mov
xchg
mov
lods
test
test
ds
ins
imul
mov
inc
mov
xchg
xchg
jb
xor
jae
jmp
scas
mov
in
pop
and
rol
je
mov
ficom
jg
cld
cmps
inc
aam
stos
sbb
pop
push
scas
jmp
retf
jge
out
inc
adc
cli
out
out
rcl
aad
out
jne
adc
(bad)
rcr
mov
xlat
cli
mov
aam
(bad)
arpl
mul
cmp
mov
add
add
(bad)
lods
mov
sbb
je
push
es
stos
(bad)
jmp
(bad)
jle
mov
aam
cs
cmps
jg
mov
jno
sub
adc
pop
out
iret
std
int3
clc
push
xor
xchg
sub
loopne
(bad)
fild
mov
in
loop
or
push
pop
cdq
in
lea
int3
xchg
dec
mov
ins
and
mov
retf
lea
arpl
(bad)
lods
push
jle
sti
(bad)
(bad)
mov
add
xchg
(bad)
cli
mov
test
mov
aas
fs
adc
inc
lahf
(bad)
pop
sub
add
(bad)
out
in
(bad)
cld
in
aad
outs
lea
and
mov
push
(bad)
je
pop
add
loope
mov
push
(bad)
fcom
lahf
sub
push
inc
fadd
pop
daa
xor
mov
(bad)
cdq
xchg
jl
icebp
dec
pusha
out
fmul
pushf
outs
cmps
jp
xor
jge
fldcw
mov
test
adc
or
cmps
mov
inc
jns
loop
add
jecxz
jbe
mov
(bad)
outs
(bad)
pop
inc
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsubr
sbb
mov
push
(bad)
fsubr
jecxz
mov
push
(bad)
fsubr
popf
outs
sub
fsubr
popf
outs
and
mov
push
(bad)
fsubr
popf
outs
and
mov
push
(bad)
fsub
pushf
push
lods
rcl
mov
xlat
jmp
sar
mov
add
js
adc
pusha
xchg
mov
add
sar
fst
mov
pop
pop
dec
lea
mov
int3
pop
ins
sub
pop
add
test
clc
ja
out
dec
stc
add
or
aas
imul
adc
jae
jg
int3
cmc
aam
inc
fist
ins
(bad)
sbb
xor
jl
mov
push
enter
arpl
jno
xchg
xchg
jns
stos
in
bound
xchg
ret
pop
fmul
push
test
mul
push
mov
lea
cmp
rcr
std
and
dec
es
add
jnp
pop
add
jno
(bad)
rol
icebp
ins
jg
cmps
(bad)
cli
sbb
xor
xor
inc
jecxz
sti
das
mov
nop
cmp
lahf
nop
mov
in
cli
pop
retf
sub
test
movs
int3
loope
pop
xor
mov
push
jp
fnsave
aaa
push
mov
jae
jnp
add
xor
(bad)
repz
loop
fnstcw
mov
mov
mov
cmps
sar
add
sar
add
sar
add
sar
add
push
mov
adc
push
out
jge
sti
sbb
aad
aas
lods
and
out
jge
shr
push
adc
add
fucom
repz
imul
push
xchg
icebp
mov
sti
or
and
mov
aam
push
and
std
mov
jle
shl
aas
sahf
add
jp
push
popa
das
push
and
jbe
and
jle
xchg
sub
cmp
cs
xchg
push
add
adc
daa
pop
push
mov
mov
pop
xchg
jmp
push
dec
out
inc
test
cmp
sub
push
leave
xchg
push
and
mov
inc
sti
ins
stos
sub
clc
pop
cmp
and
cmp
ror
pop
adc
bnd
adc
popf
les
lods
dec
ja
dec
addr16
push
dec
or
xor
mov
add
loopne
dec
sub
cmp
ret
mov
mov
jecxz
pop
dec
adc
cmp
lea
repz
mov
sar
mov
jne
jmp
mov
std
sub
and
outs
add
scas
add
mov
and
push
stos
call
sbb
out
out
std
adc
loope
mov
sbb
(bad)
xchg
stos
inc
aaa
xor
fld
das
enter
jne
jb
and
adc
popf
and
fs
mov
cmp
mov
inc
sub
push
jo
mov
add
repz
outs
and
push
inc
xchg
adc
lods
or
ret
je
sbb
xor
fst
movs
aam
retf
dec
frstor
mov
stc
adc
xlat
ins
jbe
out
sub
mov
or
add
imul
pop
mov
jmp
mov
fidiv
jmp
int3
xchg
pop
xchg
jmp
shl
pushf
mov
pushf
jmp
mov
inc
xchg
sbb
int3
fadd
add
pop
retf
mov
test
push
dec
add
shl
movs
aam
repnz
enter
(bad)
xlat
(bad)
loope
xlat
jp
inc
xchg
mov
out
sar
and
test
add
sar
pop
out
pop
jge
rcr
lods
cmps
cwde
sbb
adc
sbb
dec
sahf
dec
sub
pop
mov
daa
pop
jle
mov
jmp
sahf
cmp
cmp
mov
shr
enter
scas
fist
pop
stc
test
inc
sub
mov
loope
dec
jg
xchg
bound
add
test
into
test
mov
xchg
dec
(bad)
push
xor
stc
fs
cs
ds
mov
gs
das
sti
xor
add
mov
mov
adc
aaa
dec
enter
div
or
fwait
inc
shl
or
ins
das
dec
mov
leave
sub
add
or
fdiv
and
xchg
nop
les
or
push
popf
cmps
push
mov
xchg
imul
jg
cmp
ins
inc
loope
mov
cmp
xor
fwait
lahf
mov
hlt
fs
adc
lds
sbb
scas
icebp
and
lock
or
cmp
loope
push
ins
jmp
jp
imul
out
std
(bad)
push
shl
test
test
xchg
outs
(bad)
or
mov
clc
sbb
retf
int
ror
jb
dec
ins
movs
call
ss
rol
das
push
adc
fstp
dec
cmp
and
retf
out
cmps
addr16
adc
cwde
aad
sub
mov
or
cmp
mov
loop
into
(bad)
retf
push
pop
dec
out
push
xor
fimul
test
adc
dec
and
or
push
arpl
sti
mov
add
jmp
clc
call
lds
dec
xchg
xchg
dec
xchg
mov
rcr
sub
icebp
jge
push
mov
into
aad
sub
js
out
push
dec
lods
in
add
(bad)
and
frstor
imul
adc
movs
cmp
adc
dec
outs
mov
fcom
ins
xchg
fld
jg
mov
ret
push
out
call
cmp
push
mov
inc
scas
cmp
xchg
add
data16
(bad)
pop
out
dec
(bad)
lods
test
inc
mov
sbb
cmps
clc
out
mov
pop
out
cmp
adc
inc
push
shr
in
jae
out
dec
xor
nop
pop
leave
pop
movs
in
lahf
in
addr16
int3
xchg
(bad)
in
cli
rol
fbstp
xchg
test
inc
push
(bad)
in
scas
(bad)
pop
cli
mov
pop
leave
push
jno
xlat
lods
lods
rcl
mov
shl
movs
enter
(bad)
sar
mov
add
mov
fadd
adc
and
xlat
cli
push
test
xchg
cmp
shl
dec
cmp
sub
shl
xchg
xor
rcr
fs
mov
add
dec
rcl
mov
and
cmps
(bad)
(bad)
or
and
(bad)
in
jg
aaa
adc
ins
mov
ret
xchg
iret
pop
imul
xlat
pop
jp
(bad)
xchg
fs
mov
loope
lods
pusha
pop
xlat
cli
int
stos
cmp
fstp
sbb
cmp
mov
fbld
movs
sbb
mov
mov
rol
xor
adc
xor
sbb
loop
cdq
xchg
and
jmp
(bad)
cmp
mov
add
adc
(bad)
inc
jg
ret
push
xchg
mov
aas
fsub
push
cld
xor
jle
data16
hlt
scas
mov
mov
ret
cmps
frstpm(287
xor
and
and
ds
dec
jne
inc
cs
test
sbb
data16
push
neg
stc
xchg
addr16
rcl
ss
out
adc
jo
out
aad
mov
popf
xchg
push
push
jecxz
mov
data16
aad
cmp
test
xor
shr
ja
movs
data16
sti
mov
jo
jns
pop
xor
(bad)
xchg
push
fstp
ret
cmc
cmp
out
imul
enter
mov
loope
mov
popf
and
cli
mov
scas
lahf
ds
dec
(bad)
cli
mov
sahf
dec
rcl
lds
pop
lods
sbb
sub
adc
push
push
stos
imul
sub
mov
jg
movs
sub
in
scas
xlat
icebp
mov
mov
mov
fidiv
xor
sahf
xchg
out
cmps
rcl
movs
loope
or
data16
imul
popa
sub
sbb
pop
push
mov
jo
pop
mov
add
enter
movs
fdivr
mov
stos
arpl
jecxz
dec
xor
xchg
daa
enter
cmp
cs
in
push
ret
out
aad
and
ret
lods
or
sub
into
sbb
out
test
jnp
int
or
je
adc
pop
fisttp
ins
movs
jp
popf
popa
repz
cmc
pop
mov
cmp
daa
call
push
leave
and
jle
pop
pop
popa
dec
inc
loopne
jnp
movs
pushf
and
enter
repnz
xchg
adc
xlat
xchg
and
jp
and
inc
inc
xor
mov
xchg
sbb
lds
cs
int3
and
int
mov
repnz
jmp
xor
fnstsw
xchg
(bad)
div
loopne
frstor
ss
clc
mov
icebp
adc
shl
aaa
ins
(bad)
retf
scas
and
ror
loop
loop
adc
arpl
inc
out
inc
dec
mov
test
test
arpl
push
inc
leave
jecxz
add
mov
xchg
xor
pop
(bad)
(bad)
dec
pop
inc
scas
or
mov
fst
cli
mov
test
mov
ds
mov
inc
std
mov
into
pusha
popa
ffreep
push
xchg
jmp
or
pop
test
imul
in
xor
repz
loopne
xlat
cmp
xor
in
test
scas
and
lods
call
shl
loop
lods
xchg
(bad)
xor
xchg
out
pop
push
adc
push
jmp
popa
push
mov
mov
das
xor
mov
out
cmc
pop
ror
push
mov
out
cmc
pop
es
jecxz
dec
mov
jmp
mov
mov
out
lods
imul
stos
int3
inc
or
jb
jb
out
jle
test
(bad)
xchg
xchg
sub
test
sub
xchg
and
jb
xchg
call
cmp
or
inc
mov
xor
or
test
in
(bad)
(bad)
aad
inc
fisubr
cmp
sub
das
fs
jns
lahf
iret
mov
in
xchg
scas
(bad)
iret
pop
inc
add
(bad)
mov
retf
frstor
pop
push
stos
mov
xchg
inc
div
lea
imul
ficomp
shr
into
jae
add
xchg
push
pop
push
fsub
dec
mov
and
add
aaa
lods
mov
add
cmp
add
cmp
std
mov
(bad)
test
sar
retf
add
int3
fcomi
test
enter
aam
fidiv
in
(bad)
loop
in
(bad)
mov
out
in
call
jecxz
in
jecxz
jmp
xchg
xchg
stos
(bad)
mov
fst
repnz
xlat
out
mov
(bad)
ficom
call
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
mov
(bad)
xlat
cli
mov
enter
xlat
nop
mov
enter
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
loop
fadd
repnz
rcr
mov
cli
mov
(bad)
(bad)
xlat
(bad)
mov
int3
xlat
jmp
fmul
in
xlat
mul
rcl
movs
cs
movs
les
(bad)
movs
(bad)
xlat
jg
(bad)
idiv
fcomp
or
(bad)
xlat
out
mov
lock
fs
ror
jno
pop
inc
mov
lock
ds
or
(bad)
mov
(bad)
inc
jl
push
std
push
fsubr
sub
sbb
in
xchg
nop
js
psubd
cmc
mov
mov
cld
fisub
es
and
add
les
(bad)
pop
loope
sbb
push
fimul
into
pop
inc
fwait
push
jp
inc
inc
std
movs
gs
cmp
imul
inc
push
sbb
cmp
es
cmp
cmp
sub
pop
lahf
sub
mov
sahf
add
mov
data16
aad
jno
and
cmps
jg
and
les
pop
popf
mov
mov
sbb
xchg
hlt
(bad)
mov
retf
cmp
js
jecxz
pop
outs
(bad)
mov
sbb
mov
or
xor
and
rcl
sub
add
out
inc
leave
in
add
push
jmp
les
cmp
adc
cmps
aam
pushf
test
nop
inc
ss
and
(bad)
div
inc
sbb
or
imul
sti
dec
sbb
jecxz
pop
stos
not
scas
shl
movs
push
shl
mov
and
inc
out
xchg
mov
pop
(bad)
out
bound
cmps
sub
cmps
(bad)
in
xchg
aad
imul
jle
cmc
xchg
(bad)
loope
xlat
(bad)
clc
pusha
xlat
lods
movs
(bad)
les
xor
pop
out
mov
sub
adc
cwde
sub
(bad)
in
dec
push
push
das
xor
and
and
mov
cdq
(bad)
xlat
out
outs
push
or
or
enter
xchg
cmp
sar
and
(bad)
loope
mov
out
jmp
push
test
call
(bad)
daa
dec
out
mov
xchg
xchg
mov
popa
pop
or
ss
in
std
(bad)
mov
js
and
ret
call
pop
adc
inc
sub
jo
and
jae
push
cld
cmps
les
out
sti
push
mov
jns
repz
sbb
mov
pop
mov
clc
mul
retf
imul
inc
loop
movs
mov
inc
(bad)
div
es
pop
xchg
sbb
or
(bad)
(bad)
cli
and
les
movs
loop
cld
lods
(bad)
xlat
out
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
jmp
rcl
sbb
les
dec
(bad)
xlat
jmp
lods
fs
(bad)
mov
enter
(bad)
(bad)
(bad)
mov
xlat
out
mov
(bad)
fstp
loope
xlat
mov
fadd
sar
scas
xchg
fidiv
int3
push
std
nop
in
mov
mov
xchg
nop
pushf
imul
inc
pop
cld
sbb
fisubr
outs
xor
repnz
in
jno
xlat
cmps
mov
sbb
jg
jge
sbb
sub
xor
adc
pop
pop
fist
and
jle
ror
mov
mov
xchg
call
cwde
sub
push
loop
fld
into
sbb
mov
mov
(bad)
(bad)
jo
or
cmp
cs
mov
fcomip
pop
stos
gs
pop
call
rcl
mov
stos
repnz
hlt
xor
adc
aam
jb
cmps
in
cli
xchg
leave
data16
mov
dec
fwait
push
stc
mov
mov
fidiv
pop
call
sub
div
xchg
(bad)
mov
push
fdivr
xor
lock
xor
ret
inc
stos
fidivr
and
jne
jl
mov
push
mov
(bad)
sbb
and
adc
dec
pushf
mov
xlat
xchg
hlt
ins
ja
jl
loope
sahf
jmp
mov
loop
fsubr
pop
ja
xor
out
fnsave
(bad)
out
dec
cwde
xchg
adc
mov
sub
mov
adc
lea
or
test
(bad)
and
mov
daa
sti
imul
mov
xchg
sbb
in
(bad)
jp
mov
aas
scas
hlt
les
pushf
xor
mov
jmp
xchg
xchg
adc
cmp
stc
add
pusha
jb
call
movs
ror
adc
xchg
ins
jmp
imul
xchg
mov
icebp
nop
mov
pop
clc
fld
sub
cmp
std
sub
xlat
repnz
enter
(bad)
(bad)
test
aam
mov
fs
sbb
test
adc
jecxz
xchg
sti
es
mov
rcl
xor
call
shl
std
out
iret
scas
jbe
pop
test
jnp
aas
and
pop
imul
movs
pop
sbb
mov
and
jns
test
in
in
push
movs
and
inc
push
xchg
push
fs
cwde
xor
ins
aam
jp
or
in
es
loopne
repnz
(bad)
and
aaa
push
xchg
aad
rcl
lea
int3
lahf
(bad)
lods
mov
std
jae
mov
cmp
jecxz
mov
push
mov
push
cmp
mov
stc
inc
ins
inc
into
int
or
out
mov
mov
mov
mov
cmp
sti
imul
into
jge
adc
jmp
mov
stc
pop
adc
arpl
inc
jnp
jae
jmp
mov
cmp
fisubr
add
ds
add
mov
dec
ins
xchg
xor
inc
in
mov
xchg
dec
les
outs
loope
imul
lods
loopne
mov
pushf
pop
aad
mov
jg
out
es
imul
rol
test
add
gs
or
loopne
mov
push
clc
mov
xchg
push
cmp
inc
dec
jmp
repnz
inc
push
xor
imul
mov
jne
push
adc
mov
cwde
xor
add
xchg
sbb
and
inc
and
in
popf
jno
dec
sbb
xor
cmp
not
dec
(bad)
xchg
sbb
stos
idiv
mov
xchg
xchg
dec
inc
icebp
popf
call
scas
mov
push
mov
push
sub
cmp
dec
add
clc
or
mov
call
adc
movs
mov
addr16
add
jns
cdq
and
(bad)
call
push
popf
sub
js
cs
jecxz
push
jne
dec
cmp
mov
call
jns
aad
popa
pop
fs
mov
pop
push
into
jmp
pop
adc
pop
xlat
jne
scas
outs
inc
xchg
shl
push
leave
lods
jmp
dec
hlt
inc
mov
sub
(bad)
jmp
xor
aas
mov
pushf
adc
or
xor
pop
hlt
mov
ins
aas
test
mov
enter
pop
loope
xchg
repnz
repz
sbb
cmp
add
pop
sub
into
clc
inc
jl
cdq
adc
push
pop
mov
(bad)
push
push
jge
sahf
lea
pop
lea
and
clc
fimul
mov
out
movs
(bad)
stos
mov
test
call
ret
(bad)
mov
xlat
out
in
sbb
loopne
xlat
mov
and
sbb
out
xchg
mov
ins
or
ja
rcl
pushf
push
test
mov
or
ins
pop
xchg
fs
scas
push
jo
test
push
gs
sbb
and
leave
cmp
enter
push
fnstcw
cmp
jb
xlat
mov
inc
sbb
int3
mov
xor
sbb
dec
or
sub
sub
out
outs
pop
xchg
adc
hlt
mov
std
mov
jp
repnz
sar
scas
and
mov
inc
pop
cmp
lea
xor
sub
jo
add
pop
sbb
fsub
stos
adc
mov
repz
xchg
mov
inc
add
dec
jecxz
outs
push
pop
in
lock
cmp
and
adc
and
jmp
pusha
dec
dec
jmp
xchg
retf
or
push
leave
gs
dec
jae
sub
push
ret
mov
mov
call
jp
std
ins
xchg
mov
outs
js
shl
adc
fst
sahf
cmp
pop
enter
mov
inc
(bad)
mov
xchg
mov
fcomip
push
(bad)
inc
outs
lahf
push
lods
into
pushf
ja
jns
shl
out
inc
mov
rcl
dec
xchg
nop
add
push
jnp
add
push
or
and
mov
xchg
loop
mov
push
lods
scas
and
dec
mov
mov
or
pop
ds
or
fnstsw
mov
rcl
cli
mov
loope
push
inc
mov
clc
jnp
addr16
scas
jmp
mov
mov
retf
push
(bad)
js
sbb
adc
ja
xchg
inc
inc
xchg
or
pop
mov
push
push
ins
(bad)
aas
xchg
jmp
fld
ss
(bad)
into
aad
imul
retf
xchg
test
inc
nop
fbld
enter
daa
pushf
cmp
adc
dec
outs
imul
push
sub
cmp
jmp
cmp
ds
jg
xor
pop
xor
jnp
mov
inc
repz
arpl
shl
cmp
dec
and
shl
ins
idiv
push
dec
rcl
xchg
(bad)
aam
out
and
test
hlt
(bad)
loope
fld
ins
mov
inc
xchg
cmp
sub
mov
arpl
dec
(bad)
jmp
clc
fld
xchg
jg
(bad)
icebp
lea
and
mov
int3
xchg
sbb
shl
daa
out
ret
dec
fstp
adc
dec
or
fnstcw
into
mov
adc
aaa
jmp
mov
push
imul
mov
xor
fadd
pop
sub
retf
dec
push
rcr
scas
iret
loopne
out
imul
mov
in
adc
dec
je
mov
inc
mov
mov
test
sbb
fcom
mov
xor
jb
aaa
cmp
je
ret
and
jecxz
jl
ins
outs
pop
fcmovb
shl
mul
aad
mov
sbb
push
lods
sub
adc
adc
div
js
or
mov
push
out
mov
cmp
inc
popa
add
inc
lods
add
pushf
adc
push
outs
fwait
mov
pop
mov
cmps
adc
push
fwait
loope
imul
inc
add
test
ret
mov
mov
iret
loop
fcom
cs
imul
add
sub
js
xchg
jmp
and
repz
stos
fstp
mov
lods
fadd
movs
fld
ja
xchg
push
mov
pushf
push
cmp
fnstcw
movs
mov
jns
rcl
pusha
sahf
vsqrtps
jnp
aam
pop
out
enter
ja
mov
jae
imul
sub
sbb
out
neg
sbb
jle
jno
cmp
cmps
div
mov
jb
cmp
sbb
push
cmc
icebp
dec
stos
cmp
pushf
mov
push
jecxz
lock
gs
lea
mov
popf
lods
mov
aaa
cmp
stc
sbb
xor
cdq
sub
pusha
fst
mov
add
pop
data16
jnp
mov
jg
arpl
jl
xor
movntq
out
loopne
mov
ss
sbb
xchg
jo
retf
test
ss
xor
hlt
cs
jae
sbb
cmps
sbb
mov
pop
xchg
add
xchg
push
adc
pusha
mov
sub
out
outs
xchg
aaa
rol
(bad)
jnp
aas
stos
int
and
sbb
mov
or
xor
shr
les
in
jg
fisttp
cmp
xchg
test
sub
sub
and
fldenv
pusha
ja
mov
gs
shl
mov
push
inc
mov
inc
bound
enter
dec
scas
fchs
cld
sti
cmc
ins
xor
sbb
xchg
mov
iret
cmps
in
(bad)
mov
cs
int
xor
mov
(bad)
fcom
adc
cmp
cdq
ja
adc
mov
sub
inc
mov
jp
xor
xchg
xor
rcr
or
sub
push
adc
xlat
mov
ss
pop
jbe
cwde
mov
push
(bad)
movs
mov
test
dec
int
mov
fstp
sbb
xor
out
xor
push
pop
dec
inc
cmp
je
xchg
hlt
cli
outs
inc
pop
push
and
lock
add
movs
(bad)
arpl
mov
enter
(bad)
int3
xlat
out
jmp
add
jbe
int
aas
es
adc
and
repnz
inc
mov
add
add
(bad)
test
push
rcl
inc
ins
xor
jmp
pop
fsubr
js
ret
sahf
lea
inc
cs
pop
in
push
int
cmp
idiv
test
int
lds
inc
xor
dec
iret
mov
test
ins
mov
fdiv
loope
mov
inc
mul
(bad)
dec
dec
or
mov
rcl
popf
or
(bad)
xor
jo
jmp
adc
fwait
pop
(bad)
(bad)
ds
ds
aad
xor
pusha
pop
leave
addr16
pop
and
and
jns
sub
out
out
mov
adc
mov
rol
imul
out
ins
jle
sub
or
push
adc
aaa
push
daa
(bad)
cmp
xchg
xor
in
push
xor
xor
jl
pop
je
enter
ins
push
inc
cmps
ja
add
mov
lods
int
dec
pop
(bad)
(bad)
lea
lock
push
add
(bad)
xchg
inc
add
shr
or
cmc
sbb
jge
out
rcl
dec
in
xor
pop
ins
inc
push
dec
retf
push
xor
push
or
mov
imul
or
rol
jbe
add
pop
jg
add
rcr
dec
push
loope
repz
add
dec
and
int
fistp
add
mov
enter
ret
lods
enter
sbb
sub
retf
(bad)
pop
repz
adc
cwde
jae
(bad)
ins
lds
pop
push
ins
add
icebp
and
mul
popa
or
xchg
outs
mov
cld
or
aaa
jmp
js
jae
stos
scas
loope
pop
mov
xor
dec
push
and
(bad)
ficomp
movs
mov
xchg
repz
inc
jmp
jns
inc
cmps
int3
ret
loopne
cmp
sub
push
add
ins
adc
xchg
mov
inc
add
pop
mov
adc
ins
shl
jne
leave
mov
test
xchg
out
jl
pop
movs
je
dec
dec
mov
jecxz
add
addr16
pop
imul
inc
hlt
pop
pop
sub
jg
jae
mov
test
push
imul
faddp
cs
adc
add
mov
aas
stos
adc
xor
xor
fistp
jecxz
lds
hlt
(bad)
mov
scas
cmps
cmp
repz
inc
sub
inc
in
push
dec
sbb
sbb
xchg
jecxz
sbb
add
xchg
sbb
imul
retf
and
jmp
xor
and
pop
adc
clc
and
lods
sti
mov
cli
sbb
mov
jae
xchg
mov
lahf
or
cs
mov
push
test
fdivp
aas
inc
(bad)
out
stos
fist
mov
rcr
std
xor
sub
(bad)
xchg
loope
int
or
bound
daa
xlat
pusha
ror
ja
test
retf
stc
fisub
imul
or
movs
inc
push
push
pop
mov
fidivr
aaa
popa
outs
fwait
sub
add
outs
fcomp
aas
int3
je
out
mov
rol
jmp
rol
add
xor
dec
add
inc
jae
(bad)
sbb
mov
ja
enter
push
jecxz
in
sub
cmp
daa
aas
sbb
lock
mov
cmp
or
enter
(bad)
(bad)
popa
adc
(bad)
and
pop
and
jo
jmp
dec
sub
les
jle
sub
inc
mov
movs
dec
push
in
test
pop
ss
pop
pop
add
sbb
cmp
movs
pusha
stos
cli
test
rcr
mul
(bad)
xlat
cli
mov
adc
mov
xchg
std
mov
cmp
xor
jmp
mov
add
pushf
sbb
jmp
mov
(bad)
(bad)
cld
xor
xchg
push
mov
out
mov
xchg
aad
add
mov
push
aas
mov
cmp
enter
repz
and
add
xor
fsubrp
ret
pop
push
sub
mov
js
pop
fld
sti
mov
(bad)
in
retf
pop
(bad)
div
movs
add
sub
mov
xor
adc
lahf
rcr
lods
adc
jmp
add
sbb
cmps
mov
mov
mov
adc
popf
pop
pop
inc
mov
repnz
adc
cli
push
mov
ret
add
sahf
inc
fist
ffreep
xor
or
adc
(bad)
addr16
mov
add
leave
or
call
int
jns
xchg
mov
outs
dec
xor
ret
(bad)
mov
lods
test
pusha
aad
mov
loopne
bound
sahf
pop
or
mov
xchg
enter
(bad)
lea
vshufps
mul
ret
inc
cwde
(bad)
and
cmp
lds
fcom
push
icebp
fiadd
call
rcr
ret
mov
fldenv
mov
mov
sti
xchg
or
lock
pushf
xchg
stos
(bad)
jl
sbb
scas
pusha
stc
add
retf
adc
sahf
adc
enter
arpl
adc
cmp
push
and
mov
xor
(bad)
call
sbb
cwde
movs
ret
fwait
movs
fidiv
mov
or
loope
neg
fist
dec
dec
pushf
adc
push
mov
push
clc
sti
sbb
daa
(bad)
cli
cwde
vphaddudq
xor
mov
or
sahf
inc
bound
and
leave
mov
xor
add
inc
pushf
mov
mov
jae
xor
mov
mov
(bad)
lds
inc
mov
f2xm1
inc
adc
cmp
jne
push
push
shl
mov
dec
mov
sbb
and
rcr
(bad)
fistp
xchg
inc
loopne
pushf
dec
adc
cwde
adc
xchg
jns
mov
(bad)
fwait
mov
je
inc
jle
adc
and
cmp
jno
out
dec
idiv
push
push
mov
popf
ja
add
cli
adc
pop
pop
xchg
ins
sbb
jae
int3
xchg
mov
out
in
add
out
xchg
cwde
add
call
mov
in
nop
mov
push
add
popf
sahf
jl
outs
or
push
scas
sbb
dec
cwde
out
push
adc
int
dec
ja
dec
jg
movs
ins
cmps
add
loopne
outs
shl
cmp
fwait
idiv
not
test
not
test
not
add
dec
or
test
(bad)
(bad)
cld
pushf
aam
dec
stos
cmp
xor
jl
(bad)
cmp
xor
jl
(bad)
mov
nop
jo
(bad)
mov
nop
jl
(bad)
cmp
xor
vpshld
das
adc
nop
sub
cmp
cmp
nop
add
cmp
sbb
nop
pop
popf
mov
stos
cmp
add
inc
dec
stos
cmp
or
xchg
xor
cmp
or
xchg
dec
popf
mov
test
daa
or
nop
ins
popf
mov
stos
cmp
cmp
nop
sbb
mov
test
pusha
nop
xor
cmp
call
dec
xchg
imul
nop
jl
(bad)
cmp
jno
nop
jl
(bad)
cmp
jb
nop
jl
vphsubwd
nop
jl
(bad)
cmp
jl
(bad)
cmp
xor
and
(bad)
xlat
(bad)
mov
cmp
mov
sar
mov
(bad)
(bad)
loope
xlat
(bad)
mov
adc
mov
fiadd
push
cmp
scas
rcr
fxch
xlat
cli
es
add
cmp
and
cmps
xchg
jl
pop
es
xchg
push
fild
and
add
push
mov
mov
out
xor
std
dec
stos
stos
push
xchg
xchg
jnp
(bad)
xchg
xor
dec
test
neg
sbb
add
aaa
sbb
mov
(bad)
rcl
call
xchg
ins
aam
pusha
adc
pop
scas
sbb
popa
pop
ss
fbstp
popa
mov
and
shl
cmps
test
cmp
pop
hlt
inc
aam
jl
mov
cdq
sbb
add
retf
jo
int3
aas
scas
movs
push
mov
ret
cmc
pop
pushf
dec
push
pop
cli
jbe
test
adc
or
mov
adc
or
add
out
cmps
call
adc
pop
nop
ins
retf
stc
jmp
repnz
sbb
ins
xor
ins
xchg
jae
mov
mov
sub
pop
sahf
cld
mov
fidivr
push
jp
ror
dec
pop
(bad)
call
das
push
add
fs
cmp
cmp
lea
(bad)
xlat
mov
mov
shl
mov
pop
xchg
sbb
push
cwde
stos
mov
or
js
pop
cmp
jne
xchg
mov
xor
xchg
or
(bad)
push
sub
cmc
(bad)
add
das
push
gs
fistp
movs
imul
loope
sbb
mov
mov
sub
jl
and
mov
push
repz
push
loop
iret
mov
(bad)
out
push
in
or
push
(bad)
pop
iret
fidivr
xor
fcom
pop
loop
movs
mov
dec
mov
and
cmp
out
sbb
(bad)
iret
jbe
addr16
aam
mov
pop
mov
jb
and
mov
gs
sbb
mov
shl
and
lahf
mov
xor
repnz
jae
retf
mov
(bad)
mov
dec
daa
int
sub
mov
push
pop
sub
jbe
mov
inc
jp
out
test
aad
rcr
mov
in
sbb
scas
(bad)
out
je
mov
mov
ins
push
pop
mov
outs
dec
mov
in
dec
mov
dec
nop
xor
pop
cmps
sahf
cmp
loop
addr16
cmp
shl
mov
mov
in
mov
or
(bad)
xor
mov
neg
cmc
dec
popf
pop
sub
inc
mov
jecxz
std
ja
gs
aam
mov
and
xlat
(bad)
mov
shl
movs
int3
sar
movs
(bad)
(bad)
mov
add
jmp
test
add
sar
(bad)
xchg
jg
int
inc
mov
rcr
movs
daa
sbb
cmp
fnstcw
in
jle
popa
mov
adc
or
cli
xchg
sbb
fsubr
and
pop
add
cmp
imul
mov
sbb
inc
jg
xchg
push
loopne
mov
xor
xor
pop
pop
pop
cmp
mov
xlat
out
daa
pop
loop
nop
test
out
xchg
lea
leave
mov
push
call
fmul
inc
(bad)
fsub
ss
scas
xchg
xor
jo
add
arpl
xchg
hlt
ins
adc
xchg
int3
daa
pop
adc
inc
aaa
xor
xor
neg
and
add
test
sub
sti
pusha
mov
leave
dec
iret
pop
pop
out
fild
jns
jmp
test
lds
sub
sub
daa
into
aaa
js
cdq
mov
fadd
aad
inc
fwait
imul
mov
xor
daa
(bad)
mov
sar
mov
adc
call
cmc
xchg
mov
in
loopne
xor
test
adc
mov
xchg
sahf
cmp
sub
xchg
push
xchg
add
stc
and
xchg
jge
pop
arpl
and
push
jbe
and
mov
mov
sub
lea
xchg
pop
sbb
lds
and
cmp
push
pop
xchg
and
cmps
pushf
sar
inc
xchg
cmps
mov
stc
scas
xchg
jecxz
ss
inc
addr16
pop
lds
xchg
push
fisubr
(bad)
push
ja
xchg
arpl
lahf
sub
pop
ret
out
push
sub
dec
push
mov
and
inc
adc
xchg
jle
test
aam
das
pusha
aam
add
pop
sub
(bad)
mov
out
add
sbb
or
jecxz
mov
scas
inc
bound
mov
push
inc
mov
nop
daa
repnz
sbb
sbb
push
sbb
pop
inc
or
ja
ja
push
and
and
loopne
mov
jp
imul
sub
sbb
stos
push
inc
push
stos
mov
cld
sbb
sub
lahf
iret
(bad)
(bad)
scas
data16
and
and
je
dec
int
push
cmp
push
movs
pop
mov
ja
pop
jno
test
(bad)
into
jnp
xchg
fs
mov
sbb
test
jmp
pop
daa
and
mov
inc
push
out
inc
shr
stos
xor
(bad)
mov
jnp
ret
inc
loopne
mov
add
dec
stos
ror
inc
ins
dec
hlt
dec
bound
xchg
mov
push
test
(bad)
std
dec
xor
lods
sbb
pop
adc
lds
push
cmps
cld
jno
jmp
js
iret
test
test
cmp
sub
(bad)
aad
retf
aas
mov
addr16
movs
xchg
adc
add
retf
add
push
dec
mov
ret
mov
(bad)
neg
mov
xchg
and
pop
cmp
jle
das
push
and
clc
rcr
jb
jno
daa
(bad)
sahf
sub
mov
xlat
sub
das
mul
push
cld
sub
pop
add
mov
fld
add
repz
mov
dec
pop
jmp
stos
xchg
ins
cmps
repz
lods
mov
mov
push
push
lods
in
xlat
push
je
dec
hlt
mov
mov
mov
fcomp
jmp
xor
rcr
test
out
or
jge
iret
pop
mov
stc
or
(bad)
xchg
div
ror
jbe
repnz
test
in
daa
rcl
sub
mov
and
push
cmps
cmp
dec
jbe
mov
mov
push
adc
and
in
(bad)
rcl
lods
pop
push
jg
stc
sbb
jae
hlt
mov
xchg
jb
stos
(bad)
movs
shr
std
push
loope
adc
outs
xor
mov
inc
or
test
jne
mov
xor
cwde
into
mov
(bad)
std
(bad)
dec
sub
jg
add
mov
test
ins
sub
out
cmp
retf
xchg
push
push
call
pop
mov
mov
mov
imul
(bad)
(bad)
movs
(bad)
(bad)
movs
rcl
in
xchg
mov
mov
add
mov
(bad)
test
out
scas
push
rol
not
frstor
popa
fld
jno
int3
adc
add
movs
xchg
cmp
pop
test
sub
dec
int3
mov
mov
mov
add
inc
jno
xchg
cmp
adc
nop
push
jge
pop
sbb
mov
jecxz
push
xor
cdq
loope
(bad)
mov
cmp
adc
push
jmp
or
shl
mov
fsubr
and
inc
(bad)
mov
or
(bad)
add
aaa
dec
shl
clc
jge
sti
sti
in
mov
and
(bad)
xchg
in
out
test
mov
cs
cld
rcr
inc
in
enter
or
or
mov
mov
lds
sub
div
ss
sar
(bad)
sub
mov
jbe
test
cli
ins
leave
in
das
loopne
pop
icebp
popf
retf
sub
dec
cwde
nop
aam
add
push
push
inc
out
(bad)
adc
and
fs
outs
push
push
repz
mov
dec
mov
lods
fstp
inc
iret
mov
nop
movs
pop
jns
fild
xchg
call
aaa
xchg
inc
mov
adc
mov
jl
cmp
test
push
adc
and
out
push
(bad)
and
xor
sbb
and
jge
imul
iret
out
and
sub
sbb
(bad)
mov
out
jmp
(bad)
repnz
loope
adc
ficomp
into
mov
pop
outs
cmp
je
add
inc
sbb
into
bnd
in
call
fimul
stc
xchg
in
and
add
push
xchg
pusha
out
stos
mov
jl
movs
daa
cwde
lds
cmp
mov
js
mov
sbb
add
aam
and
les
fs
int
test
sahf
jp
inc
into
add
ret
mov
retf
dec
inc
pop
movs
pop
push
ja
or
(bad)
into
rep
sub
and
xor
mov
fist
sahf
jecxz
stos
gs
push
(bad)
sar
mov
mov
xchg
stc
mov
mov
xchg
sbb
mov
sub
adc
(bad)
add
xchg
nop
sbb
push
loope
sub
in
xchg
test
mov
push
(bad)
xchg
arpl
and
data16
lods
int3
sahf
faddp
xor
mov
inc
(bad)
ficomp
mov
mov
aaa
loope
adc
sbb
push
jmp
movs
std
sbb
movs
inc
dec
mov
pop
push
or
push
sub
cld
fcmove
out
stos
fisubr
out
les
push
sbb
in
mov
pop
push
adc
cmp
les
ins
gs
xor
mov
sbb
shl
xchg
cmp
jbe
mov
imul
in
shr
jne
xchg
cmp
pop
fsubp
test
cmp
sbb
int
movs
data16
mov
push
jg
add
stc
mov
mov
nop
xor
xchg
inc
lods
jne
gs
push
jle
jecxz
test
aad
scas
ins
jg
adc
rcl
adc
xchg
inc
test
movs
(bad)
out
mov
je
les
scas
or
sub
aas
out
or
sar
scas
lahf
pop
scas
mov
cld
shl
shl
sar
cld
xchg
pop
push
in
mov
xor
aas
xchg
dec
imul
fs
dec
mov
mov
addr16
and
and
nop
mov
call
cmps
test
mov
(bad)
cwde
in
ss
jbe
fldcw
and
mov
jle
pop
cmps
vpminub
loopne
add
clc
loope
mov
jg
(bad)
movs
inc
jge
rol
sar
sbb
inc
aad
in
fnstenv
fst
xchg
test
push
cmp
loopne
ins
xor
adc
fdiv
test
cmp
shl
sti
dec
ret
in
mov
fdiv
mov
adc
and
inc
inc
mov
adc
in
fldenv
retf
lds
lods
das
std
inc
mov
loop
fistp
and
jmp
test
jnp
add
adc
xchg
outs
cmp
jns
mov
clc
sbb
inc
sahf
sbb
fstp
add
add
fistp
and
jmp
push
outs
jecxz
pop
and
and
sbb
mov
clc
sbb
cmps
ret
add
(bad)
mov
mov
ror
movs
(bad)
test
lds
div
enter
in
jmp
ret
fimul
in
out
xchg
cld
sti
mov
in
xchg
cmps
icebp
adc
cmc
cwde
and
xchg
pop
xchg
mov
stos
repnz
shr
and
ret
shl
xchg
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
movs
mov
(bad)
loope
xchg
repnz
rcl
mov
cli
mov
rcr
movs
(bad)
sar
mov
rcl
fcompp
aam
fisub
xlat
rcl
movs
enter
(bad)
sar
movs
(bad)
xlat
(bad)
mov
int3
(bad)
loop
cmp
std
lods
enter
test
mov
push
adc
dec
stos
(bad)
jnp
call
cmp
jne
stos
dec
push
mov
cmp
xchg
aam
or
(bad)
xchg
dec
test
loop
mov
shl
out
repz
outs
fwait
mov
and
jno
or
cmps
inc
mov
sbb
sbb
fwait
cmps
sar
sti
leave
push
call
pop
stos
mov
dec
jb
or
pop
cld
xchg
pusha
ret
and
xchg
aas
xchg
div
retf
push
jnp
or
aad
lock
mov
inc
add
and
mov
test
stos
add
ret
(bad)
test
and
out
ret
into
push
dec
cmps
jae
xchg
jp
xchg
mov
push
jae
xchg
cli
gs
jne
cmp
mov
jo
add
cmp
jns
imul
dec
push
inc
xor
icebp
or
scas
mov
xchg
out
or
dec
mov
sbb
ret
cmps
fild
test
inc
xor
mov
push
push
dec
add
dec
push
popf
xor
lock
retf
pop
push
nop
or
mov
or
sbb
and
fsub
jae
push
inc
xor
mov
mov
pop
add
cmp
ror
mov
xor
push
mov
or
xchg
enter
mov
sub
pop
xchg
stos
mov
jae
push
lods
add
cmps
(bad)
fnstcw
jmp
mov
mov
scas
add
pusha
adc
repnz
(bad)
cmp
sbb
and
mov
jns
(bad)
movs
mov
inc
cmp
mov
sub
popa
mov
mov
xchg
les
movs
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
inc
(bad)
xlat
cli
movs
pop
push
dec
jmp
fs
lds
cmp
pop
movs
clc
pop
(bad)
mov
fwait
cli
cmps
stos
(bad)
mov
jo
pop
jp
fisub
loope
mov
loop
mov
mov
push
dec
and
inc
xchg
pop
xchg
scas
test
xor
cmc
xor
cmp
jmp
mov
xor
or
(bad)
and
ins
push
cmp
leave
xchg
or
ins
or
ds
(bad)
jecxz
dec
cmps
mov
xchg
xor
mov
adc
push
adc
xchg
enter
bound
add
adc
sahf
sub
mov
fmulp
sub
push
push
scas
dec
and
test
sbb
or
pop
add
(bad)
push
mov
(bad)
shr
das
out
scas
rcr
clc
data16
mov
dec
push
call
jp
xchg
in
fidivr
push
in
ss
jns
mov
fiadd
fs
pushf
test
jo
add
sub
cwde
popa
jno
js
mov
outs
or
rcl
dec
inc
add
mov
fs
jge
adc
imul
retf
pop
loopne
mov
push
push
dec
add
cs
pop
in
and
sub
mov
mov
inc
dec
or
dec
ror
mov
xor
mov
or
inc
dec
fdivr
std
cld
pushf
outs
pop
es
add
jp
sub
jae
pop
fdiv
and
pop
shl
div
cmp
nop
cdq
fcomi
into
push
data16
pusha
rcr
push
jle
adc
mov
push
mov
gs
mov
aaa
fdiv
and
and
sti
push
or
sbb
int
xlat
call
out
mov
(bad)
shl
movs
(bad)
(bad)
mov
xlat
repnz
(bad)
cli
in
retf
es
(bad)
ds
mov
mov
mov
xlat
cli
movs
int3
xlat
sbb
sbb
fst
mov
xor
and
jmp
retf
(bad)
mov
jns
ffree
jecxz
arpl
mov
and
push
dec
in
addr16
gs
add
fisubr
xor
jmp
iret
mov
pop
pop
lods
add
and
stc
sbb
les
and
ror
pop
xor
aaa
jne
movs
dec
sub
push
adc
dec
sub
sub
jb
mov
clc
cli
mov
aad
and
imul
cwde
adc
hlt
push
rcr
es
test
mov
cmp
es
cmp
ja
xchg
fild
sbb
dec
mov
sbb
jne
push
xor
or
in
xor
dec
lods
cmp
mov
in
(bad)
and
cmp
ret
dec
jae
fsub
or
(bad)
xchg
mov
mov
aam
pop
xor
or
inc
inc
mov
imul
imul
mov
repz
add
inc
dec
shr
icebp
xor
inc
aad
jns
daa
out
cli
inc
ds
adc
ret
or
push
inc
mov
xor
sbb
outs
aaa
std
(bad)
dec
dec
dec
leave
addr16
bound
test
ins
push
es
mov
or
inc
in
inc
sahf
ins
dec
in
not
jb
inc
add
int3
xchg
jecxz
mov
shl
add
ins
scas
dec
dec
in
cmps
loop
jno
ds
cwde
cmp
pop
jae
fst
ds
sub
dec
into
out
or
mov
mov
fwait
xor
push
cli
and
ss
or
mov
mov
fwait
xor
push
imul
not
xor
jns
inc
outs
mov
fwait
xor
push
cli
and
ss
or
mov
mov
fwait
xor
cmp
sbb
and
sub
jmp
aam
add
popf
scas
xor
mov
xadd
or
adc
aad
mov
mov
jnp
inc
call
in
or
sbb
and
sub
jmp
aam
and
sbb
nop
inc
dec
lods
xlat
xchg
push
mov
scas
fwait
lea
add
cdq
jl
xchg
sbb
adc
iret
jbe
jmp
enter
and
push
inc
sub
aam
ds
mov
xchg
mov
fwait
sbb
cld
mov
sub
xchg
xchg
and
lds
mov
test
mov
dec
inc
xchg
add
call
cmp
pop
push
inc
iret
popa
cmp
sub
sti
xrstor
mov
(bad)
into
xchg
in
neg
mov
push
sti
ret
pop
sub
popf
(bad)
aad
push
inc
pop
(bad)
not
out
push
fistp
mov
iret
sbb
xchg
fwait
jo
in
test
imul
xchg
inc
bound
mov
add
mov
jmp
or
es
mov
ja
mov
push
fdivr
mov
daa
cdq
ins
push
fisttp
clc
imul
sub
jo
popf
push
mov
dec
cli
sub
jae
iret
clc
add
pop
mov
jo
retf
fadd
sub
xchg
xor
rcl
out
scas
inc
pushf
dec
mov
xor
mov
movs
push
mov
inc
shl
push
inc
int
fiadd
mov
out
push
add
cld
(bad)
mov
es
int3
mov
add
dec
lea
jg
inc
dec
movs
jge
rcl
inc
movs
add
in
xchg
xor
mov
push
(bad)
je
sub
push
cmp
movs
and
loop
in
mul
(bad)
sar
mov
xlat
repnz
(bad)
jbe
adc
imul
mov
inc
adc
mov
adc
mov
cmp
cli
lods
cmp
adc
push
xchg
xchg
xchg
mov
dec
out
sub
sbb
call
or
push
mov
xor
sahf
pop
(bad)
jle
mov
(bad)
(bad)
movs
xchg
ins
push
jl
lock
mov
mov
add
and
cmps
and
cmps
push
repnz
jg
cld
ret
jnp
adc
xchg
out
(bad)
cmp
push
(bad)
rcr
test
std
cmps
dec
adc
bound
cmp
inc
adc
lds
ds
in
pop
mov
mov
out
es
(bad)
std
jno
mov
xchg
mov
jbe
add
(bad)
les
adc
push
adc
stos
mov
mov
xor
xor
(bad)
mov
sbb
out
movs
push
shl
inc
push
arpl
fwait
mov
ins
jge
arpl
push
scas
mov
shl
mov
test
push
dec
inc
stc
cmp
shr
mov
(bad)
sbb
loopne
lea
test
push
imul
push
xchg
push
adc
lods
daa
cmp
sub
cli
pop
ja
xchg
dec
mov
sahf
mov
mov
cli
mov
popf
nop
ror
adc
arpl
xchg
cmp
xchg
xor
pop
sub
mov
fwait
leave
repnz
jbe
mov
pop
rol
push
xchg
ss
dec
es
adc
fmul
repnz
test
adc
cmp
inc
sbb
xor
out
sahf
(bad)
push
cld
inc
push
retf
xchg
(bad)
in
std
or
jl
push
aaa
add
xchg
push
iret
inc
out
dec
lock
push
test
xchg
add
mov
repnz
pop
and
mov
pop
cmp
dec
pop
inc
stc
ds
dec
jbe
sub
cli
test
cmps
popa
bound
call
jmp
xor
cmps
stos
inc
or
out
leave
stc
push
movs
mov
or
jmp
dec
outs
mov
mov
fisttp
pop
(bad)
(bad)
fcom
iret
jne
sub
xchg
mov
stos
push
jl
mov
not
lock
cmp
mov
adc
push
stc
jp
cmp
mov
iret
xchg
leave
adc
mov
nop
fnstenv
(bad)
in
xchg
fld
out
sti
add
call
sub
in
rcr
dec
mov
mov
inc
mov
lods
out
mov
inc
jge
fiadd
xor
stos
int
aas
mov
jae
adc
rcr
int
imul
cmc
icebp
out
imul
mov
rcl
leave
fld
or
loop
jns
adc
shr
fild
sub
pop
stos
add
sbb
aad
stc
mov
push
aas
mov
std
ffreep
jo
dec
fistp
jmp
mov
cs
push
mov
outs
add
sub
sti
ror
test
call
mov
test
scas
outs
and
pop
in
call
repz
dec
jp
int3
rcr
int
imul
sub
sahf
or
pushf
xchg
sti
xor
jmp
mov
xor
je
jo
mov
jecxz
ds
daa
aam
dec
mov
sbb
pushf
cmp
imul
xor
push
add
push
inc
mov
dec
int3
(bad)
pop
and
mov
outs
popf
cwde
push
xor
fidivr
aas
pushf
xchg
sti
xor
jmp
mov
xor
je
jo
mov
jecxz
ds
daa
aam
dec
mov
sbb
pushf
cmp
imul
xor
push
add
test
imul
adc
mov
call
xor
imul
daa
push
push
or
dec
jns
inc
mov
(bad)
add
mov
fisubr
sbb
sbb
sbb
test
pop
out
leave
mov
std
aad
sub
das
enter
jb
or
adc
ins
ret
xchg
call
cmp
je
xchg
jmp
iret
push
into
int3
sysret
adc
sbb
add
cli
cld
shl
out
jo
enter
lods
dec
sub
adc
sub
xor
stc
ror
push
inc
push
(bad)
add
xchg
pop
fisubr
sbb
cdq
cmp
leave
jbe
lahf
loope
xor
(bad)
retf
mov
add
jb
xchg
call
adc
fst
or
add
xchg
das
scas
xchg
ret
xchg
iret
mov
clc
das
inc
aas
mov
fld
add
sbb
sbb
lock
call
inc
shl
mov
dec
les
push
mov
jg
pop
hlt
movs
xchg
mov
ja
mov
je
ret
out
movs
xchg
test
ds
pop
jb
pop
add
mov
mov
cli
xchg
or
push
in
pop
jmp
nop
xchg
inc
test
nop
call
scas
jb
mov
cli
popa
movups
cmp
inc
mov
or
pop
or
cmp
mov
push
jmp
xchg
stos
mov
mov
nop
or
fdiv
in
and
fadd
in
out
sbb
jmp
out
icebp
(bad)
pop
push
jle
pushf
sub
pop
push
fadd
retf
ret
add
fwait
jno
or
mov
or
imul
out
adc
and
test
inc
retf
jg
push
loop
(bad)
or
xor
mov
aam
push
xor
cld
enter
pop
mov
mov
mov
je
ret
out
movs
xchg
test
jl
fucomi
test
fwait
or
add
jle
xchg
inc
mov
xor
pop
mov
mov
std
jae
jecxz
and
xchg
popa
push
jb
add
mov
std
paddd
sub
jne
inc
mov
adc
pop
fs
or
dec
xchg
lods
mov
and
push
jp
enter
or
shl
inc
ss
into
fs
imul
xchg
jne
outs
xchg
scas
gs
std
sub
xlat
mul
(bad)
(bad)
mov
enter
add
ins
add
xor
push
ja
pop
xchg
hlt
into
adc
mov
loopne
mov
movs
jmp
lods
cs
(bad)
inc
call
shl
jno
lods
adc
cmp
popa
dec
shl
sub
or
ror
dec
aaa
xor
add
test
push
mov
retf
pop
jno
iret
pop
rol
fs
mov
jae
mov
cmp
add
add
adc
test
push
xor
jecxz
or
gs
xchg
inc
lock
mov
adc
jle
out
mov
(bad)
dec
xor
jl
out
mov
ins
dec
cwde
les
jle
jecxz
fsubr
xor
pop
sub
dec
add
mov
mov
xor
or
sahf
add
pusha
mov
js
(bad)
(bad)
or
sub
push
adc
mov
push
mov
push
add
mov
sub
mov
cli
fsubr
xor
icebp
in
lea
adc
(bad)
les
add
scas
outs
push
(bad)
leave
add
push
jo
fs
clc
mov
cwde
aam
fistp
shl
mov
retf
pop
push
inc
iret
pop
cdq
adc
imul
xor
push
lods
mov
xchg
jb
loopne
jle
mov
or
xor
ins
sbb
pop
hlt
scas
jae
pop
sbb
adc
pop
mov
mov
repnz
xor
jmp
or
std
or
inc
out
cld
inc
lods
daa
xchg
add
or
xor
xor
bound
dec
jmp
es
cli
sbb
mov
mov
cmps
jge
ins
inc
pushf
or
inc
push
jge
aaa
ins
dec
push
cmps
jge
ins
inc
leave
or
inc
and
xor
mov
mov
loopne
lahf
ss
call
fisttp
mov
in
popf
dec
or
jecxz
je
call
jp
xchg
rcl
imul
in
pop
mov
xchg
popa
inc
jmp
in
popf
dec
or
jecxz
je
call
jp
xchg
rcl
imul
jmp
stc
(bad)
jmp
stc
(bad)
jmp
stc
(bad)
jmp
stc
mov
dec
popf
adc
jns
add
int
(bad)
out
(bad)
xor
mov
hlt
mov
inc
xchg
daa
jbe
das
fstp
jmp
push
gs
xchg
push
gs
ins
sar
sti
xchg
adc
mov
jnp
sbb
pop
inc
sbb
pop
sbb
cs
push
mov
cmp
lds
jmp
les
pop
je
scas
sub
dec
stos
jg
jae
jecxz
fdivr
(bad)
mov
fmul
pop
dec
cmp
cmp
dec
dec
es
in
icebp
fst
mov
popa
les
push
or
sub
nop
cwde
mov
jbe
mov
jno
in
or
and
push
ja
mov
repz
dec
push
pop
popa
adc
dec
stos
ins
adc
cmp
ins
pop
mov
or
xchg
jnp
jno
dec
and
inc
push
cmp
add
mov
test
ss
in
call
xor
js
push
(bad)
mov
lods
dec
stos
imul
stos
add
sub
or
and
lods
push
or
and
push
cmp
stos
and
or
fimul
repz
add
shr
cmp
pushf
fstp
into
xchg
add
jae
in
shl
push
int3
sub
(bad)
cli
sti
in
mov
nop
sti
in
pop
std
sbb
mov
femms
add
pop
out
push
cmp
mov
mov
jge
dec
pop
inc
sbb
retf
sub
cmp
mov
fidivr
sbb
mov
jp
cmp
add
std
enter
in
mov
int3
xchg
out
test
ror
(bad)
mov
enter
add
cmc
test
sti
loopne
shl
sub
adc
mov
push
jnp
add
mov
dec
pop
jb
or
xchg
movs
in
cli
in
push
neg
fstp
(bad)
js
sub
aam
or
repz
loope
cmp
popf
rcr
in
in
or
rcr
mov
sub
sbb
daa
loopne
and
inc
push
mov
mov
cmp
fs
bswap
test
std
call
lods
cdq
repnz
test
sub
sbb
mov
(bad)
xchg
xchg
sbb
dec
sbb
mov
std
cli
and
push
adc
scas
xchg
add
xlat
inc
mov
jg
mov
and
cmps
out
shl
mov
jbe
xchg
or
pop
adc
loop
lods
dec
xchg
dec
mov
push
jae
xchg
push
enter
ret
push
cmp
cmp
in
push
add
adc
sub
aas
pop
test
stos
dec
pusha
xor
xchg
jb
mov
xchg
icebp
cdq
(bad)
adc
call
jl
bound
sbb
add
inc
clc
and
xchg
sbb
pop
push
jecxz
dec
in
sbb
xchg
(bad)
cdq
outs
mov
ret
fisubr
cmova
lods
mov
mov
neg
jo
xlat
cmp
sub
or
ja
inc
loopne
ret
mov
xchg
je
retf
mov
and
jmp
cmps
inc
pushf
adc
push
cmp
xlat
push
out
scas
dec
cmp
int
xor
fidivr
push
mov
sub
inc
mov
xor
push
xor
mov
and
xor
inc
aas
jp
fidiv
in
ss
ror
clc
(bad)
stos
aam
or
(bad)
clc
dec
ins
mov
sub
or
mov
repnz
adc
adc
pop
push
cmp
and
mov
push
and
or
xchg
sbb
fild
sub
mov
or
popa
and
xchg
pushf
retf
je
xchg
(bad)
repz
mov
loopne
mov
jge
std
cli
lea
and
inc
add
xchg
cmp
gs
scas
push
out
adc
fcmovb
addr16
jp
jl
xor
cmc
ja
pop
xlat
fldenv
cmp
lods
xor
call
sahf
aas
jb
mov
push
cdq
cmp
imul
cmp
dec
mov
inc
add
sar
xor
xor
sahf
xchg
cmc
js
ds
cld
push
nop
mov
out
ins
in
in
mov
and
in
imul
fwait
or
imul
in
sbb
mov
xor
out
cmp
js
and
(bad)
fwait
jle
and
movs
push
fstp
sub
pushf
cld
scas
jns
and
(bad)
jl
imul
repz
mov
sar
shl
scas
cdq
jmp
push
in
mov
push
pusha
push
test
cwde
sub
adc
push
sahf
mov
jg
inc
out
add
or
sar
inc
push
pop
dec
dec
jmp
xor
pop
in
mov
dec
aas
daa
xor
pop
sub
das
aam
(bad)
(bad)
dec
ror
ret
es
jle
pushf
jmp
int3
or
xlat
fisttp
or
or
loopne
popa
ss
pop
cli
lea
pushf
pop
dec
xchg
fbld
sub
rcl
(bad)
int
cmp
mov
(bad)
cwde
mov
daa
or
push
jmp
sbb
call
inc
or
xchg
add
jmp
repz
adc
jo
or
in
mov
inc
stc
mov
mov
jne
xchg
mov
xor
adc
pop
cmc
mov
or
mov
jmp
push
pusha
movs
mov
xor
pop
shr
mov
mov
inc
icebp
out
mov
stc
test
dec
ret
jno
clc
lahf
pop
push
fwait
loop
stc
loop
dec
cmps
repnz
xchg
pop
xchg
xchg
sbb
sub
inc
xor
lahf
mov
hlt
and
aaa
(bad)
pop
test
mov
js
int
mov
out
jae
adc
lock
scas
and
mov
adc
fisttp
xchg
jle
pop
xor
ja
fsub
stos
inc
ss
repnz
pushf
pop
imul
in
push
add
xlat
sti
cmc
int
mov
mov
add
mov
in
mov
cwde
adc
push
fprem1
cmp
repnz
mov
(bad)
adc
rcr
sbb
ror
or
or
loopne
inc
ss
repnz
pushf
pop
imul
in
push
add
xlat
sti
cmc
int
mov
mov
add
mov
in
mov
cwde
xor
xchg
pop
jmp
dec
icebp
mov
dec
mov
stos
add
sbb
call
add
js
stos
xor
std
arpl
iret
in
jle
jne
call
fisttp
xor
aas
sub
add
mov
cmp
imul
pusha
out
pop
retf
push
stc
mov
rol
push
jo
out
pop
icebp
jbe
outs
push
xchg
cmp
aad
in
xlat
(bad)
in
sbb
icebp
repnz
je
xor
pop
or
call
rep
jae
mul
xor
jp
clts
or
and
aas
loope
inc
loop
mov
cmp
xchg
scas
loopne
cdq
push
push
dec
sahf
xchg
sbb
add
or
loopne
jg
js
sbb
fs
pop
mov
pop
(bad)
lock
or
jno
mov
push
pusha
cmp
and
dec
dec
test
lods
jmp
fiadd
scas
stc
push
and
push
lods
or
imul
sbb
movs
sub
es
cmp
cmp
in
mov
sti
dec
and
pop
outs
mov
pop
push
pop
stos
adc
fs
mov
cmp
inc
(bad)
dec
aam
stc
xchg
ret
mul
std
jmp
imul
add
pop
fld
dec
dec
sbb
nop
popf
lock
test
std
not
xor
rcr
bound
movs
mov
pop
imul
xchg
inc
mov
sbb
fs
sar
rol
push
xchg
xor
mov
(bad)
mov
mov
lods
inc
mov
loopne
xor
enter
mov
mov
(bad)
xchg
call
add
push
in
pop
cmps
mov
mov
mov
retf
sub
sti
fidivr
push
mov
sub
or
retf
test
daa
sub
sbb
sbb
scas
retf
mov
loopne
adc
sub
lea
cli
sub
scas
mov
push
adc
jge
in
push
mov
ret
out
sub
xor
push
jb
sbb
xchg
jo
(bad)
(bad)
lahf
add
xchg
arpl
cwde
inc
mov
outs
push
inc
pop
xchg
push
sbb
cmc
inc
test
jno
out
and
test
mov
lods
push
ret
sahf
cmp
mov
push
mov
retf
mov
hlt
(bad)
cwde
add
into
std
nop
scas
(bad)
jmp
cmps
test
popa
sub
in
js
mov
sbb
icebp
(bad)
call
jle
fldenv
lods
cmp
pusha
lods
jne
fwait
jmp
mov
mov
xchg
pop
test
and
imul
bound
aaa
adc
push
cmp
lds
lods
mov
and
push
imul
out
idiv
mov
lods
push
ret
jmp
icebp
std
fldenv
add
test
int3
inc
push
ds
dec
sub
sbb
mov
dec
fs
ror
jg
int
mov
movsx
ret
xchg
add
push
repz
sbb
pushf
std
int
add
leave
hlt
cmp
ret
(bad)
mov
(bad)
adc
pop
sub
dec
mov
sbb
outs
fstp
push
inc
mov
retf
mov
hlt
(bad)
cwde
add
test
mov
ror
mov
ja
add
fbstp
lock
movs
(bad)
sub
mov
rcr
mov
(bad)
xlat
jp
adc
and
xchg
mov
es
jns
cmp
(bad)
out
push
push
add
jmp
ds
fistp
es
outs
cwde
dec
adc
enter
int3
aad
loop
ss
or
out
sub
xchg
(bad)
push
add
jg
sbb
add
popf
cmp
or
in
(bad)
cmp
int
data16
jg
aam
mov
inc
lods
dec
mov
ror
aas
ja
fcom
es
cmp
and
add
retf
movs
ret
aas
repnz
(bad)
dec
neg
shr
inc
getsec
out
std
xor
and
pop
mov
(bad)
aad
test
xor
inc
cld
aad
in
mov
outs
or
jns
hlt
aad
and
ror
add
(bad)
mov
inc
mov
sub
test
fisubr
int3
stc
and
iret
enter
cli
push
xchg
shl
retf
test
sub
aaa
movs
mov
xchg
xchg
imul
test
test
or
pop
inc
bound
sub
stc
dec
retf
cmps
(bad)
rcl
hlt
jmp
pushf
pop
push
add
mov
xor
icebp
mov
fdivp
xchg
out
xchg
in
jge
sbb
cmps
in
add
in
fldenv
or
push
clc
out
sbb
fbstp
cli
mov
add
pop
xchg
rol
gs
lea
pop
iret
add
jbe
jmp
jle
dec
sahf
inc
out
dec
push
loop
dec
cmp
adc
push
(bad)
in
aam
hlt
les
(bad)
sbb
push
jecxz
mov
mov
(bad)
inc
in
jno
push
push
inc
inc
fistp
push
ror
lods
ds
fisub
push
in
add
and
cmps
ja
dec
arpl
mov
nop
fist
mov
fs
(bad)
inc
rcr
push
or
adc
mov
rcl
mov
es
mov
jne
in
inc
mov
out
xchg
adc
inc
xchg
(bad)
sbb
aaa
or
dec
or
sub
cli
fadd
hlt
jbe
pusha
sahf
xchg
aam
arpl
(bad)
std
int3
xlat
ret
push
xchg
aaa
push
xor
push
adc
pop
lock
fild
push
outs
daa
pop
mov
pop
rcr
add
inc
nop
test
adc
movs
jp
mov
xchg
imul
fild
push
test
sbb
cmps
push
(bad)
dec
mov
or
xchg
xchg
imul
(bad)
iret
inc
loope
fs
sahf
aam
arpl
mov
pop
das
jno
scas
(bad)
fsubrp
mov
lock
fs
dec
not
shl
rol
repz
(bad)
iret
inc
loope
fs
sahf
aam
imul
push
(bad)
nop
ds
jb
jmp
mov
(bad)
xchg
mov
out
scas
adc
clc
popa
pop
ret
call
jp
movs
cmp
(bad)
lock
cld
hlt
push
push
xor
test
mul
push
repz
movs
push
add
xchg
shl
jle
imul
ret
mov
leave
lahf
int3
(bad)
mov
sub
xchg
inc
sub
out
in
xor
outs
out
repnz
repnz
mov
cmps
lahf
es
jne
(bad)
shr
and
movs
pop
jns
mov
and
int3
nop
dec
cmps
jge
repz
movs
fsubp
push
pop
and
test
or
cld
mov
bound
or
or
je
arpl
jae
ins
test
mov
and
push
mov
(bad)
mov
aaa
xchg
cs
inc
fimul
out
sbb
ss
test
mov
sub
arpl
cmps
cmp
inc
int
push
cmps
and
dec
mov
fist
dec
sbb
in
shr
xchg
in
daa
mov
mov
dec
sti
test
mov
push
sub
int
pop
aas
mov
iret
aad
xchg
sahf
es
aas
mov
cmp
ror
jmp
mov
inc
or
push
js
daa
jp
push
ja
mov
jecxz
mov
pop
div
in
sar
ret
icebp
scas
adc
sub
xor
(bad)
inc
pop
jg
aaa
rcr
mov
icebp
push
jae
stc
xlat
lea
loope
outs
mov
test
inc
and
push
sub
fnsave
ins
xchg
out
data16
daa
dec
cmp
inc
push
pop
xor
pop
push
adc
xor
(bad)
xor
mov
je
loop
cmp
cli
stc
adc
cmp
iret
sub
adc
lahf
mov
mov
jle
xchg
fdivrp
inc
xchg
inc
dec
adc
mov
mov
icebp
loope
add
push
pop
es
jle
adc
push
fsubr
jp
xchg
and
or
cmc
retf
fmul
xchg
xor
mov
sub
(bad)
xchg
mov
pop
loope
adc
retf
call
cmps
cmp
xchg
movs
hlt
stos
cli
movs
int3
fcomi
ffree
xlat
mov
cmp
mov
cmc
push
xor
xlat
cmp
es
mov
mov
loope
and
jl
test
inc
int3
fnsave
fwait
push
dec
aam
fsub
sbb
and
push
pop
mov
cmp
outs
mov
push
mov
mov
fsubr
lahf
outs
cmps
loop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
mov
outs
xor
mov
push
(bad)
cld
cdq
mov
inc
fisttp
fcmovu
out
push
into
pop
lds
iret
push
lods
pushf
fs
pushf
jb
jecxz
mov
and
loop
(bad)
mov
aas
shr
mov
paddb
cmp
std
jge
loopne
jp
cmp
std
sub
aam
repnz
(bad)
sar
loope
xlat
(bad)
mov
ret
mov
add
add
shl
nop
sbb
mov
(bad)
push
call
je
(bad)
imul
dec
xchg
lea
xchg
or
mov
nop
out
in
rcl
push
repz
fadd
outs
(bad)
cld
and
(bad)
arpl
mov
inc
and
into
(bad)
sub
data16
leave
fidivr
jecxz
jle
in
mov
inc
fwait
mul
(bad)
fcmovnbe
mov
mov
fld
pop
(bad)
out
inc
mov
mov
out
ret
loopne
mov
mov
mov
aam
aaa
fst
sub
cmc
ret
cmp
xchg
ja
out
in
mov
xchg
jle
xor
leave
sbb
mov
ss
pop
mov
adc
mov
pusha
adc
aam
aad
xchg
pop
mov
cmp
pop
jnp
enter
push
xor
fs
xchg
push
retfw
rol
rep
push
or
or
mov
fsubr
int3
(bad)
sub
or
adc
and
int3
fisub
push
adc
loopne
(bad)
(bad)
loopne
xchg
mov
push
mov
sahf
pushf
in
stos
scas
cmp
xchg
ds
test
xchg
jnp
pop
shr
xchg
loop
rol
movs
repnz
mov
jge
sar
cmc
push
and
in
jo
cli
repnz
mov
mov
push
jmp
lahf
js
push
mov
cmps
retf
iret
push
adc
xchg
adc
push
dec
scas
fiadd
adc
jg
xchg
fs
frstor
inc
fisttp
jbe
push
test
arpl
mov
push
jecxz
call
dec
rcl
ins
fucom
icebp
shr
(bad)
jns
rcl
test
push
sub
into
fs
cmps
pusha
dec
xchg
pop
jg
push
inc
push
rcr
mov
ins
loop
cld
test
pcmpgtb
cmp
jno
and
adc
retf
ret
add
push
mov
xchg
sbb
pop
mov
jmp
clc
mov
mov
(bad)
sbb
jmp
xor
pop
into
lds
aad
clc
mov
mov
(bad)
sbb
jmp
clc
mov
mov
(bad)
sbb
add
and
adc
mov
mov
mov
ret
mov
mov
stos
icebp
and
mov
nop
mov
mov
mov
(bad)
ret
(bad)
test
arpl
inc
sahf
out
and
push
mov
pop
cmp
movzx
mov
arpl
inc
sahf
out
and
push
mov
push
sti
xchg
jle
push
xchg
outs
push
inc
xchg
cmp
jge
aam
in
scas
xchg
stc
loope
adc
int
mov
lock
leave
lock
fdivr
dec
les
xlat
xchg
sub
inc
xor
hlt
sub
cmps
sbb
pop
iret
sbb
shl
dec
or
(bad)
in
xchg
test
stos
pop
arpl
xchg
pop
push
or
lahf
pop
outs
inc
test
ins
and
loop
imul
mov
mov
sbb
clc
and
jmp
daa
adc
add
repz
fbld
adc
int
loope
mov
imul
mov
adc
div
retf
xchg
fsubp
jmp
movs
in
lods
push
repz
repnz
jne
mov
sub
test
cmp
(bad)
dec
frstor
sub
and
pop
scas
imul
in
pop
daa
scas
inc
jge
(bad)
jmp
xchg
adc
push
rcr
cs
xor
loopne
fwait
sub
call
aas
jno
retf
(bad)
xor
sbb
xchg
bswap
push
jle
inc
lock
push
movs
xchg
sub
loopne
int
dec
stos
fistp
in
cmc
inc
stos
(bad)
push
push
mov
or
into
lds
xchg
mov
xchg
(bad)
mov
push
enter
push
jmp
pop
xor
jae
cwde
inc
nop
dec
scas
inc
mov
inc
scas
fsubrp
(bad)
mov
xor
xchg
mov
xchg
cmps
cmp
pop
fdiv
ret
jno
ja
(bad)
adc
mov
push
cmc
jnp
jp
jns
push
jno
leave
lahf
addr16
rol
and
inc
mov
fbld
int
imul
(bad)
jb
enter
push
repz
sti
movs
mov
cmp
idiv
sbb
fldenv
imul
je
cdq
repz
(bad)
rcr
inc
mov
scas
lods
add
ins
outs
jb
movs
(bad)
sub
mov
(bad)
(bad)
mov
(bad)
xlat
jp
adc
jnp
add
test
mov
rcl
sub
push
xchg
pop
mov
pop
sar
jae
add
cmp
repnz
push
and
pop
jb
retf
repnz
(bad)
jmp
push
jg
fdivr
xchg
(bad)
fcmovnbe
nop
ret
stos
push
lds
(bad)
cmps
add
push
cmp
pop
dec
push
into
xchg
rcr
call
lods
cli
mov
inc
inc
mov
push
inc
(bad)
rcl
ds
push
mov
(bad)
dec
fsubr
stc
ja
clc
adc
call
xor
js
mov
je
sub
inc
fstp
or
jmp
mov
frstor
dec
mov
and
xchg
xlat
inc
ss
ds
lock
push
aad
sub
mov
cld
es
retf
jp
sub
cmps
push
and
in
imul
xor
mov
sbb
lahf
cli
adc
jbe
int
in
add
les
adc
push
lgs
(bad)
xchg
es
les
stc
mov
sbb
dec
add
enter
fnstenv
into
mov
push
fld
or
test
out
imul
xor
repz
cwde
fistp
inc
std
add
push
cli
ja
out
les
push
push
mov
jmp
inc
mov
jbe
push
and
jae
mov
or
lds
scas
dec
inc
dec
jge
jo
pop
mov
xchg
outs
inc
mov
in
shl
imul
iret
pop
lds
jmp
xchg
mov
push
mov
aam
add
mov
adc
mov
outs
sub
repz
jle
(bad)
adc
addr16
xchg
sahf
aad
bound
bound
pop
imul
push
adc
push
add
scas
ins
outs
loope
lock
add
xchg
ds
add
jl
add
xchg
add
xchg
add
xchg
and
lock
lds
je
ss
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
or
mov
retf
jb
mov
je
aas
adc
sub
cmps
push
test
in
mov
gs
jmp
xor
pop
iret
mov
xchg
push
push
mov
hlt
div
int3
shl
fadd
lods
cld
or
in
mov
cmp
pop
bound
mov
leave
mov
popf
pusha
adc
jno
cmp
mov
(bad)
and
repz
(bad)
sub
movs
mov
push
das
xchg
sahf
fbstp
aad
movs
dec
inc
mov
mov
add
(bad)
cdq
pop
mov
dec
aaa
ds
sahf
and
hlt
pusha
sahf
sar
(bad)
out
dec
int3
and
lods
push
adc
add
in
dec
sub
test
es
jbe
mov
lock
cld
fbld
rcl
mov
push
mov
mov
in
in
retf
gs
pop
mov
sub
inc
mov
add
inc
je
pop
call
popa
sub
xchg
enter
pop
(bad)
and
stos
or
cwde
mov
je
(bad)
je
inc
je
fwait
loope
adc
je
mov
in
out
cli
loopne
xor
mov
mov
or
mov
mov
and
out
or
inc
je
retf
loope
fmul
mov
jno
cmp
scas
mov
std
add
gs
repnz
and
mov
(bad)
idiv
mov
rcr
mov
adc
rcl
daa
test
clc
daa
(bad)
sar
add
sar
rcr
xchg
pop
xchg
jmp
outs
and
rcr
cmp
pop
sahf
(bad)
in
call
mov
push
ficom
mov
loopne
push
inc
or
dec
retf
ins
jb
int3
loope
and
ins
cmp
sbb
pop
(bad)
lahf
or
mov
and
inc
loop
mov
and
sbb
push
mov
leave
cdq
push
hlt
pop
sub
mov
xor
daa
hlt
daa
sar
push
add
in
mov
xchg
push
fisttp
scas
mov
dec
fimul
scas
movs
fldenv
mov
mov
movs
addr16
cld
gs
jg
sahf
fdivr
fbstp
stos
in
mov
sub
cmp
bound
and
fnstenv
or
ins
cmps
mov
pop
mov
test
sub
mov
lock
aad
and
add
int
push
mov
fwait
enter
call
pop
lds
cmps
cmc
sub
out
jp
or
or
adc
jnp
arpl
cmps
adc
ret
clc
sbb
into
push
jmp
jb
and
daa
mov
cwde
xchg
(bad)
cmp
xor
xlat
mov
xor
test
mov
ror
and
mov
(bad)
call
xor
sbb
sbb
js
jo
clc
adc
adc
retf
and
sub
ja
out
jnp
or
test
fsubr
stos
retf
les
mov
sbb
dec
pop
icebp
in
and
add
mov
call
mov
push
or
jmp
out
mul
inc
out
icebp
jle
movs
aaa
aam
cmp
retf
jno
sar
fst
pop
ror
sub
push
ins
pop
(bad)
mov
in
sub
stc
or
pusha
das
imul
popf
adc
aaa
pop
dec
scas
sar
mov
dec
sbb
xchg
ja
dec
(bad)
and
sar
mov
mov
into
scas
sbb
fisubr
mov
xor
ret
push
test
outs
fs
jb
das
int
xor
sub
push
push
cwde
lahf
aaa
mov
daa
pop
(bad)
jg
inc
repz
icebp
mov
and
cmp
lahf
xor
push
inc
dec
repz
std
mov
sub
cwde
(bad)
lahf
and
mov
daa
push
jle
adc
inc
outs
jns
retf
dec
inc
fdivr
(bad)
repz
aas
aas
aas
xor
shl
outs
mov
jecxz
inc
and
sbb
mov
int3
cmps
sahf
stos
add
xchg
stc
dec
and
fimul
sbb
jle
fiadd
xlat
repz
icebp
push
xchg
aas
pushf
fsubr
mov
mov
mov
push
sbb
push
retf
xor
inc
and
fcmovnbe
shl
push
mov
fwait
aas
push
out
jno
repnz
iret
imul
add
jge
adc
fisub
aas
mov
jp
push
(bad)
jno
sub
xchg
cmp
pop
scas
jp
or
add
mov
sub
cwde
and
xor
iret
jae
adc
push
ins
cwde
inc
mov
imul
cmc
pop
das
fs
dec
and
nop
mov
mov
cdq
dec
sub
in
mov
rol
jb
push
dec
lds
xlat
test
jne
mov
adc
rol
mov
cmps
in
ficom
pop
jmp
or
xor
fnsave
test
push
sahf
lahf
movs
sub
dec
jo
mov
cmp
fidivr
or
mov
sub
mov
mov
inc
outs
mov
push
dec
sub
(bad)
xlat
push
push
mov
mov
mov
mov
inc
cld
dec
inc
dec
ja
inc
and
xchg
loopne
pop
std
stos
lods
xchg
mov
(bad)
les
sub
inc
mov
inc
xchg
jge
or
std
cli
jmp
lahf
cmps
pushf
cmp
sub
jge
aam
xor
xlat
xchg
jle
in
clc
pop
push
inc
and
cdq
cmp
je
xlat
fimul
cmps
push
js
mov
fild
sub
jne
in
test
sbb
fidiv
fnstsw
nop
xor
(bad)
test
xchg
imul
jno
loope
xor
shr
xlat
loop
test
cwde
jmp
mov
(bad)
loop
mov
test
cs
xor
xor
imul
add
scas
vsubss
xchg
pop
adc
jmp
sbb
push
loope
dec
fidivr
repz
sub
aam
mov
add
mov
sbb
jns
sub
mov
enter
inc
int
aas
scas
mov
fs
push
jecxz
adc
xchg
xchg
mov
sub
inc
stos
jmp
ret
inc
dec
movs
idiv
xor
test
call
push
dec
aaa
fisub
dec
test
inc
jge
xchg
inc
xchg
xchg
mov
sahf
test
test
push
scas
push
lods
mov
or
push
movs
cmps
add
mov
js
ja
scas
push
retf
in
mov
xchg
fimul
lock
add
and
lahf
test
sbb
out
stos
shr
icebp
jnp
in
inc
loope
cmp
or
ja
inc
repz
ror
add
sbb
jne
mov
mov
sub
dec
cli
popf
inc
pop
fcomp
out
pushf
ficomp
not
adc
mov
jno
mov
dec
mov
mov
inc
in
sahf
jge
push
and
mov
(bad)
int
shl
push
(bad)
imul
cdq
sbb
sahf
mov
mov
jmp
outs
adc
(bad)
inc
icebp
xchg
in
icebp
imul
sbb
enter
pop
popf
xlat
and
bound
ins
lods
loopne
in
mov
rcr
gs
test
jmp
fidivr
sub
test
cli
movs
rcl
ftst
(bad)
(bad)
and
aam
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
lea
div
loope
fwait
mul
cmp
std
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
out
rcl
fidiv
(bad)
sar
mov
rcr
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
int3
fnclex
sub
xlat
mul
rcl
movs
(bad)
(bad)
(bad)
mov
push
aam
push
jne
movs
test
(bad)
movs
(bad)
xlat
(bad)
icebp
(bad)
xlat
dec
loope
movs
movs
sbb
xchg
cmps
or
cmp
(bad)
(bad)
(bad)
fld
xlat
out
mov
repnz
and
shl
in
nop
and
(bad)
xlat
(bad)
mov
and
mov
cs
in
sbb
push
cmps
jb
(bad)
movs
les
push
not
add
cmp
fsub
xor
js
movs
sub
(bad)
out
xlat
into
(bad)
fwait
push
retf
mov
inc
in
dec
add
xchg
mov
popf
sub
movs
les
jmp
dec
ficomp
push
retf
mov
(bad)
push
cmps
push
mov
ins
xlat
push
movs
add
cld
xlat
imul
stos
hlt
adc
popf
fidivr
movs
out
div
js
das
popf
dec
and
sub
rol
jb
jnp
push
loope
and
and
test
dec
rol
push
xor
mov
rcl
lods
xor
stc
mov
(bad)
mov
dec
sbb
pop
xchg
or
ins
in
pop
fistp
or
and
into
sub
daa
and
or
arpl
or
jp
out
push
lahf
pusha
xor
mov
daa
or
mov
push
xor
int
add
or
push
cld
inc
jo
rcl
test
(bad)
or
setp
push
loope
std
sbb
movs
popf
xchg
popa
jmp
jne
inc
dec
xchg
inc
(bad)
ret
dec
inc
sahf
dec
push
mov
mov
pop
or
test
pop
push
adc
std
fmul
inc
inc
ds
and
or
or
and
dec
jmp
mov
call
cmp
aam
ins
test
scas
or
and
jecxz
outs
or
retf
es
inc
es
add
mov
and
sbb
aaa
push
adc
ret
loopne
inc
adc
jbe
int
sahf
sbb
lock
ja
mov
or
pop
push
lahf
pop
add
dec
push
movs
add
aaa
or
push
hlt
adc
jg
sbb
shr
jnp
lea
xchg
mov
dec
loopne
add
loopne
imul
iret
nop
aam
or
rcl
(bad)
jo
push
pop
shl
dec
shr
fdivr
enter
adc
shl
xor
retf
addr16
cdq
mov
inc
mov
add
mov
cli
dec
cmp
dec
iret
mul
xchg
cli
fisttp
lahf
out
out
mov
pop
stos
sbb
and
mov
jg
jl
aam
movs
(bad)
sbb
lahf
dec
mov
aam
jnp
xchg
xor
dec
test
add
mov
data16
adc
cmps
ins
or
jecxz
pop
and
mov
clc
dec
ins
xchg
ins
pop
call
mov
lds
fs
dec
imul
mov
addr16
push
jb
iret
clc
nop
add
pop
js
sbb
mov
in
mov
add
mov
ss
sub
add
push
lahf
adc
call
xor
ds
into
mov
jg
loope
xchg
jns
pop
stos
push
in
mov
fstp
add
cmp
div
int3
(bad)
movs
(bad)
(bad)
mov
int3
(bad)
in
xchg
ret
mov
mov
add
or
movs
in
cli
rol
shl
es
xor
adc
ins
mov
(bad)
movs
das
mov
lea
jmp
and
mov
ror
sub
add
popa
xchg
fist
addr16
rcr
call
push
cmp
ss
jns
hlt
mov
jge
(bad)
pop
cdq
cmp
pop
jp
std
pop
pop
sbb
cmp
add
stos
mov
addr16
adc
jnp
shl
push
xchg
xchg
loop
or
(bad)
neg
xchg
dec
push
cmp
add
scas
out
push
push
inc
or
js
or
mov
cmp
xchg
xor
jl
in
ror
out
mov
push
addr16
dec
dec
std
add
lods
cs
push
push
sub
lahf
cmp
stc
int3
xor
dec
or
rep
pop
inc
ret
(bad)
jl
test
mov
adc
mov
jno
xor
sub
xor
cmc
cmp
pop
pop
adc
inc
out
mov
cwde
popa
fwait
and
add
mov
pusha
pop
cmps
vmovss
and
shl
push
mov
mul
adc
stc
test
addr16
sbb
movs
xor
arpl
dec
mov
ins
dec
ss
mov
add
arpl
rol
xchg
call
inc
jmp
xor
adc
es
aad
jg
pop
repnz
data16
push
push
(bad)
jo
sbb
jmp
add
push
jecxz
addr16
mov
jmp
or
cmc
sub
imul
ret
lods
or
data16
fst
aad
(bad)
iret
adc
ss
icebp
jb
mov
jl
pop
xchg
mov
jl
(bad)
icebp
int
lock
test
retf
add
or
in
aas
(bad)
jb
sbb
shl
pop
sub
jmp
repnz
xor
shl
or
popf
fwait
xlat
fistp
push
pop
and
popa
or
add
or
ret
daa
sub
movs
scas
addr16
call
or
in
mov
xlat
pop
arpl
nop
cli
popa
mul
sahf
jg
dec
pop
mov
cmp
mov
es
sbb
dec
xchg
test
mov
mov
or
fistp
or
add
loopne
add
call
xchg
push
pop
push
pop
jp
and
pop
adc
loopne
push
dec
inc
pushf
(bad)
mov
cmp
jp
call
(bad)
mov
mov
mov
inc
mov
adc
sbb
add
or
(bad)
es
pusha
xchg
push
and
xor
pushf
and
test
ficomp
test
push
lock
adc
push
pop
repz
sub
or
and
imul
cmps
inc
mov
xlat
mov
cmp
mov
push
pusha
xchg
sti
mov
cs
add
in
addr16
xchg
mov
inc
mov
push
sbb
xor
inc
jge
sub
xchg
lock
cs
pop
mov
enter
and
sub
scas
push
mov
data16
movs
mov
cmp
bound
enter
and
bswap
fmul
fbstp
sbb
sti
push
cld
icebp
sub
les
mov
push
lds
mov
sub
mov
mov
and
jne
popa
sub
ss
and
lock
xor
sbb
(bad)
sub
fcom
fistp
call
and
mov
sub
scas
je
ins
sub
cmovp
ret
jecxz
mov
cmp
ret
int3
repnz
scas
(bad)
stos
cmps
fst
lods
mov
or
xor
pop
mov
or
sub
mov
mov
rcl
movs
fadd
(bad)
mov
int3
xlat
(bad)
loope
fstp
mov
cmp
xchg
push
ss
fprem
mov
inc
aam
sub
cmp
lea
test
shl
clc
xor
mov
mov
repz
cwde
sbb
add
stc
xchg
lahf
mov
xor
sub
cwde
push
rol
mov
pusha
xchg
or
cmp
stc
adc
fst
int
icebp
xlat
adc
imul
cmp
ss
out
dec
and
fwait
imul
fs
mov
bound
mov
adc
push
mov
fdiv
jmp
xchg
pusha
xchg
(bad)
xchg
add
cmp
inc
xor
sub
(bad)
jmp
pop
inc
and
dec
sub
cmp
loopne
dec
pop
add
push
xchg
jae
adc
dec
in
shl
xchg
pop
cdq
daa
or
dec
jmp
lahf
clc
pop
sbb
int
pop
cmps
jno
add
aaa
(bad)
or
add
adc
mov
not
inc
and
mov
repz
mov
movs
enter
clc
add
adc
pop
sbb
xor
mov
lock
xor
pop
cmps
aaa
pop
iret
dec
ret
ins
inc
mov
mov
shl
push
mov
pushf
mov
jo
add
scas
inc
dec
inc
fdivrp
stos
ds
mov
xor
call
cmp
retf
jmp
sbb
ror
dec
xor
loop
dec
sahf
xor
ins
enter
loopne
test
mov
push
sbb
aam
stc
sbb
into
in
sub
fldpi
jo
call
adc
stc
push
(bad)
mov
int
clc
test
loopne
sbb
add
mov
dec
lods
cmp
shl
mov
in
push
adc
(bad)
sub
data16
lock
pusha
dec
inc
push
mov
retf
add
daa
out
daa
pop
cmps
push
sbb
je
ja
(bad)
cmps
test
adc
imul
out
sub
mov
enter
add
sbb
ja
jp
ret
and
ret
lods
leave
add
(bad)
add
imul
icebp
enter
mov
mov
out
mov
mov
add
push
lock
cmp
xchg
pmaddwd
sbb
ja
or
les
adc
sub
mov
retf
loop
lods
push
add
fiadd
loope
cli
dec
and
repnz
sahf
or
push
and
out
fbld
push
inc
add
popa
and
push
dec
jmp
jbe
or
popa
mov
xchg
or
ror
add
and
ror
pop
dec
into
fwait
mov
lahf
cmp
add
out
push
dec
xlat
leave
lock
int
push
cs
inc
scas
in
mov
and
xlat
dec
mov
jp
fdivr
xchg
sbb
dec
jb
iret
push
cmp
pop
lods
fcmovnu
mov
fwait
dec
add
sub
pop
cmp
in
(bad)
adc
int3
das
xor
loop
shl
and
cmps
or
xor
lock
das
movs
test
fcom
or
fwait
push
ret
mul
ss
test
pushf
xchg
arpl
pop
and
sbb
out
and
and
das
repz
mov
cmp
mov
jg
repnz
ss
and
test
int3
in
lahf
hlt
sub
sub
cmp
xor
popf
pusha
cld
sbb
in
movs
bnd
movs
jb
adc
fwait
and
test
pop
pop
adc
dec
out
in
pusha
shl
cmc
(bad)
pop
push
lods
cwde
xchg
sbb
test
retf
scas
and
jmp
arpl
hlt
pop
es
movs
push
sbb
in
mov
fistp
cmp
xor
inc
mov
xor
push
js
lods
pop
mov
rol
rcr
das
pop
(bad)
icebp
(bad)
jge
retf
sub
pusha
adc
es
test
add
jl
int3
xor
cmc
push
inc
es
lods
aaa
sbb
xchg
idiv
mov
dec
add
jno
jp
adc
push
pusha
sub
outs
inc
loopne
jp
pushf
jp
jecxz
xchg
jle
jge
mov
push
xor
mov
cmps
repnz
jnp
fidivr
pop
lea
in
sub
cmp
fidiv
outs
adc
repnz
push
fisttp
hlt
add
dec
or
adc
sti
push
jmp
push
iret
jne
int3
fnsave
xchg
inc
jbe
mov
pop
loopne
lock
jp
push
jo
cmps
mov
push
add
and
adc
jmp
dec
mov
hlt
cmp
jae
out
repz
ror
ret
mov
(bad)
adc
retf
xchg
add
or
fdiv
call
mov
add
je
(bad)
(bad)
jns
call
cmp
scas
inc
dec
test
push
mov
iret
imul
adc
repz
popf
ins
adc
cmps
mov
or
xor
add
std
inc
sbb
xlat
adc
stos
inc
(bad)
gs
les
inc
scas
nop
arpl
es
call
pop
int
and
aas
shl
add
lods
daa
ins
mov
adc
scas
out
jecxz
lods
dec
and
push
xchg
sub
mov
pop
loope
add
xor
xor
outs
mov
sbb
adc
and
fwait
sahf
pop
adc
mov
arpl
xchg
adc
push
push
daa
add
pop
jp
pop
arpl
inc
inc
popa
xchg
mov
sub
xchg
pop
cmps
jb
and
adc
add
outs
jp
fs
cmp
sbb
adc
fcom
push
popf
adc
fnstcw
outs
sbb
or
jp
scas
mov
nop
mov
in
loope
push
stos
inc
add
or
dec
or
jp
retf
ja
in
and
mov
inc
iret
mov
pop
add
rcl
mov
fcmovnu
movs
enter
(bad)
xlat
(bad)
movs
int3
xlat
mov
pusha
rcr
jbe
add
clc
in
pop
push
imul
dec
push
jl
inc
nop
stos
sub
iret
repz
push
mov
cmp
mov
fisttp
mov
aad
mov
fs
(bad)
xchg
lods
mov
add
mov
outs
mov
mov
jg
push
popf
and
jbe
mov
jle
add
inc
jns
mov
sub
nop
mov
or
fstp
mov
ds
iret
popa
dec
cdq
sub
mov
clc
fwait
js
(bad)
loope
rcl
ret
out
xchg
sbb
mov
add
pop
push
imul
dec
call
mov
or
fsub
cmc
adc
dec
xor
test
push
clc
fs
mov
cmp
daa
push
ret
dec
les
pusha
arpl
sbb
push
mov
hlt
outs
cmp
gs
fldcw
xchg
sub
mov
and
push
push
(bad)
push
sub
cmp
inc
sbb
and
jb
imul
push
(bad)
mov
pop
mov
repnz
(bad)
loopne
xor
fndisi(8087
rcr
dec
out
fadd
mov
jno
sbb
xor
loopne
fwait
xor
jno
push
adc
mov
mov
push
sti
pop
gs
mov
popa
scas
xor
cmc
pop
xchg
repnz
mov
jo
xor
out
add
cmps
shl
xlat
icebp
sti
lds
jl
xor
hlt
sti
fisubr
stos
mov
lods
or
shl
cdq
mov
mov
lock
pop
adc
(bad)
adc
mov
bound
in
(bad)
(bad)
jnp
lods
xchg
mov
inc
fbstp
das
pxor
and
ins
pop
and
pop
inc
jmp
mov
dec
lods
lea
ret
mov
sti
mov
nop
xchg
sub
cs
or
pusha
jo
xor
mov
adc
shl
cmp
and
sub
mov
adc
sbb
inc
dec
das
dec
add
scas
mov
movs
mov
jl
or
adc
mov
cmp
sbb
xchg
inc
les
in
scas
xchg
sub
mov
int
or
scas
push
mov
jl
mov
add
test
or
dec
cmp
cdq
dec
xlat
lods
mov
pop
cmp
push
bound
fs
fadd
into
pop
and
adc
sbb
cmp
nop
into
mov
js
dec
xchg
(bad)
jg
lds
mov
add
and
mov
cmp
int3
pop
push
retf
cmps
popf
mov
cdq
call
push
xchg
xor
push
repz
jnp
jae
xchg
cmp
jmp
hlt
push
jge
inc
cdq
rcr
xchg
nop
int3
stos
test
mov
jo
loopne
lea
test
pop
mov
in
adc
sbb
fs
mov
pop
imul
rep
cmp
inc
jmp
movs
iret
hlt
bound
xor
outs
scas
call
rcl
push
xor
int
cwde
inc
push
lods
sub
pushf
nop
sbb
xchg
sub
dec
mov
out
es
in
test
addr16
push
jns
mov
(bad)
sub
xor
gs
cmps
xor
test
add
bnd
sbb
pop
mov
scas
sti
dec
and
out
sub
sbb
scas
je
pop
add
das
sub
stc
inc
inc
mov
pop
mov
cs
ror
adc
shr
mov
or
test
sahf
(bad)
or
xor
outs
mov
add
test
cmps
push
cmp
or
movs
shr
jne
or
scas
push
mov
test
popf
pop
mov
fstp
mov
sbb
adc
add
sub
sar
push
xchg
ds
imul
lods
xor
jne
jp
loop
push
jl
nop
(bad)
out
add
test
hlt
jmp
xor
imul
or
jne
clc
push
jns
jne
pusha
dec
mov
xchg
inc
jns
popa
fbstp
fs
and
sub
clc
pop
sbb
xchg
ja
cdq
inc
pop
mov
ds
or
sbb
sti
sbb
ss
push
push
js
mov
and
repnz
jnp
popf
mov
inc
inc
add
mov
outs
fcomp
hlt
cmp
add
(bad)
lods
pushf
call
jmp
repz
cmp
adc
xchg
loop
mov
adc
bound
bound
nop
in
lea
fbld
loope
loop
rol
mov
adc
pop
sbb
push
push
fcom
xchg
mov
mov
xchg
cmc
js
adc
fcomp
push
test
std
pop
dec
inc
adc
nop
mov
inc
cs
dec
and
and
lahf
push
test
int
and
cli
icebp
cmp
scas
xchg
or
push
adc
mov
sub
sbb
push
lods
out
ret
cli
outs
icebp
sub
mov
xor
shr
sub
ins
out
fisub
gs
jnp
aam
adc
adc
dec
mov
sbb
inc
push
icebp
sbb
cdq
nop
lods
dec
pusha
pusha
jmp
fwait
mov
push
test
push
sbb
jmp
jle
fmul
push
push
arpl
and
add
pop
mov
cli
jo
sub
inc
shr
imul
nop
push
test
(bad)
mov
or
(bad)
aam
in
dec
je
mov
inc
inc
pop
idiv
ins
jae
sbb
cdq
jne
jno
jnp
adc
popa
push
or
pushf
les
mov
fld
iret
mov
lea
push
jno
das
mov
outs
lods
repz
or
or
jo
cmp
aam
ins
and
cmps
add
xchg
jb
dec
pop
jmp
(bad)
cli
bound
xlat
std
sbb
mov
xchg
mov
nop
clc
lods
js
mov
add
xor
pusha
leave
and
and
test
stos
retf
sub
ficomp
xchg
sbb
(bad)
(bad)
xchg
add
movs
leave
push
repz
adc
inc
pop
adc
std
nop
push
mov
mov
jo
push
mov
outs
dec
mov
(bad)
cmp
xchg
in
inc
mov
scas
xchg
adc
mov
in
ds
push
mov
xor
es
dec
in
mov
inc
aaa
push
push
addr16
inc
xor
mov
jmp
mov
fs
cmp
xchg
retf
and
inc
mov
in
push
mov
sub
movs
pop
push
push
lock
mov
xchg
jge
lods
xor
gs
cli
xchg
bound
adc
pushf
xchg
sub
cmp
adc
inc
jecxz
sti
(bad)
push
pop
mov
repz
jl
sbb
test
pop
push
bound
add
ret
cmp
ins
xor
xchg
cwde
pop
push
cmps
ss
dec
push
pop
dec
pop
(bad)
jp
push
pop
fldcw
aaa
test
jns
enter
stos
xor
addr16
pop
mov
or
mov
addr16
mov
ficomp
int
inc
ss
lods
movs
push
mov
add
sti
and
scas
jae
add
daa
inc
push
cs
neg
xchg
xchg
and
scas
cmp
add
sahf
cmp
clc
push
and
and
xchg
call
in
xor
inc
clc
call
fldenv
repnz
mov
push
call
ret
add
xor
in
int3
imul
cs
xor
sbb
and
cmp
outs
xchg
aaa
push
pop
call
std
jmp
int3
hlt
xchg
push
in
push
add
push
adc
loope
push
adc
test
fwait
pop
sahf
xor
jecxz
fwait
dec
pop
dec
adc
repnz
popf
sahf
jbe
adc
push
sti
fsub
jbe
imul
mov
(bad)
fcom
cmp
mov
fs
adc
push
icebp
jae
aas
or
in
outs
loopne
add
lods
stos
or
mov
sub
(bad)
cwde
cmp
jo
mov
mov
in
(bad)
hlt
lods
xor
aas
mov
or
pop
adc
pop
or
lods
pop
and
(bad)
nop
inc
mov
cmp
sbb
pop
xor
loop
push
movs
aad
fucomp
cmp
ret
nop
call
adc
daa
div
bound
cli
sahf
retf
xor
pop
shl
add
enter
call
cmp
adc
out
mov
rcr
xor
mov
test
ds
xor
push
shr
and
xchg
daa
sti
sar
jmp
fnstenv
or
mov
adc
out
sub
jle
adc
add
mov
lea
scas
mov
add
int3
fcomip
mov
shl
mov
fcomip
mov
int3
xlat
(bad)
jmp
dec
push
cli
lods
inc
adc
jecxz
xchg
js
ret
sub
jns
nop
adc
in
int
ins
test
adc
dec
or
(bad)
lods
(bad)
test
div
inc
imul
test
iret
pop
lahf
inc
into
pop
fnsave
add
(bad)
pop
cmp
sahf
(bad)
aam
sbb
jl
jmp
(bad)
cmp
(bad)
aas
rcl
xchg
inc
add
in
adc
or
imul
sbb
inc
xchg
test
jl
jnp
mov
jp
(bad)
(bad)
std
push
int
and
lea
mov
(bad)
nop
rcl
xchg
test
pop
or
xor
mov
jmp
pop
adc
cdq
leave
xor
xchg
push
sbb
or
shl
call
xchg
lea
inc
xchg
mov
repz
push
push
sub
add
je
test
cmc
xor
aam
out
mov
jmp
inc
mov
repz
cmp
dec
lea
call
mov
test
inc
popa
inc
add
pushf
cmp
cmp
inc
or
cli
adc
icebp
mov
jae
mov
pop
jle
and
lods
xor
popf
sub
xchg
rsm
dec
jb
adc
mov
mov
pop
stos
pop
pusha
or
adc
push
clc
cmps
movs
adc
mov
fidivr
sub
fsubrp
retf
mov
jp
sahf
cld
xchg
arpl
mov
inc
add
lods
bound
inc
or
jae
sbb
ret
into
push
retf
lods
or
push
dec
sub
xchg
pop
xchg
xlat
or
ins
cwde
pop
mov
sar
aas
jns
ds
ret
ret
cmp
sub
and
dec
adc
dec
xchg
daa
and
mov
bound
(bad)
jmp
mov
push
test
xor
sar
test
cwde
or
mov
leave
cdq
movs
add
inc
std
adc
pop
and
call
xchg
cmp
or
push
pop
outs
aad
leave
xchg
push
test
sar
jmp
(bad)
in
inc
sub
xor
iret
and
mov
mov
xchg
mov
out
aas
leave
jbe
mov
fcmovnu
call
mov
vmwrite
dec
ret
xor
test
and
fadd
sub
aam
inc
jmp
lahf
xchg
cmp
ins
mov
es
retf
retf
jbe
or
cmp
(bad)
push
das
ins
jl
out
ins
mov
xchg
std
cmc
jb
js
or
xor
push
loop
cmps
(bad)
or
stc
sub
test
jo
push
sbb
and
and
(bad)
sub
loop
adc
test
jo
xchg
jno
push
sti
and
push
jmp
scas
cmps
jns
xor
inc
fcomp
ficom
aad
jb
sbb
sub
mov
ret
mov
outs
mov
inc
add
in
xchg
repnz
dec
ret
push
mov
shl
and
adc
add
adc
mov
bound
popf
repnz
push
cdq
xchg
ror
add
push
out
adc
cmp
out
push
pop
push
cmp
popf
lods
pop
repnz
xor
xor
xor
pop
jns
adc
je
dec
sub
cmps
sub
int3
xchg
in
xlat
sub
dec
pushf
mov
neg
bound
lahf
adc
in
push
cld
test
jp
jle
fidivr
cmps
adc
add
pop
lods
(bad)
test
ficomp
sub
sub
lea
cmp
dec
jp
cmp
scas
sbb
sbb
pop
xor
add
lahf
cmps
pusha
fmul
daa
pop
fwait
jnp
sbb
cmp
cmp
pop
pusha
fadd
and
cmc
xor
lahf
pop
fmul
aas
std
outs
cmp
mov
retf
fstp
lods
sbb
mov
ficomp
xchg
lock
pop
sub
iret
mov
xor
sar
push
call
int
xchg
(bad)
cwde
fisttp
push
xchg
jle
mov
cmp
pop
and
mov
adc
adc
aad
pop
adc
adc
and
pop
adc
in
fwait
(bad)
outs
sbb
std
mov
sub
push
movs
mov
mov
scas
xchg
jmp
mov
push
cmp
nop
xchg
popf
push
push
movs
mov
pop
int
push
gs
loop
push
dec
xchg
fcomp
sub
dec
or
fwait
lahf
sar
(bad)
mov
sahf
movs
dec
mov
sti
les
sub
popa
sub
stc
icebp
out
mov
push
xchg
push
pop
cdq
movs
shl
sbb
fcomp
scas
shr
enter
lods
ror
jmp
stc
aad
cmps
cmps
sbb
cmp
push
pop
fs
clc
fwait
test
sub
jns
mov
ins
stc
and
add
test
or
push
adc
(bad)
(bad)
dec
aas
repz
jnp
iret
(bad)
jle
std
mov
and
sar
aaa
dec
ds
inc
jmp
sub
sub
fcomp
mov
pop
mov
inc
imul
fcomp
pop
sub
hlt
pop
inc
pop
out
inc
inc
mov
bound
test
into
pusha
adc
adc
stc
xchg
jns
cmp
les
sbb
imul
pop
outs
cmp
clc
dec
adc
mov
or
mov
or
push
jo
js
or
arpl
adc
sbb
ds
mov
pushf
push
cmp
(bad)
call
cmp
retf
mov
mov
adc
imul
pop
cmps
xor
xchg
imul
pop
test
xchg
mov
fadd
cmps
nop
inc
sbb
or
lea
call
xchg
cs
sbb
fldenv
add
push
shl
and
rol
(bad)
sbb
dec
icebp
fs
in
sbb
outs
jb
mov
stc
add
pop
stc
inc
lds
xchg
in
outs
rol
mov
fdiv
sar
les
shr
inc
in
jp
sbb
xor
mov
push
sbb
cmp
ret
mov
fnstsw
dec
pop
ret
push
addr16
sti
rcr
cwde
stc
and
lods
gs
jp
sbb
stos
mov
push
xchg
in
(bad)
mov
xchg
enter
xchg
push
mov
push
mov
inc
rcl
xchg
push
lea
stos
xor
cld
xchg
imul
cmp
mov
mov
les
leave
inc
push
retf
mov
fst
mov
xchg
test
sub
iret
push
pop
add
int3
scas
jecxz
jno
lahf
in
ss
add
adc
jge
and
mov
mov
ss
or
xor
sub
cs
aam
mov
inc
sbb
cmp
adc
int
jno
or
fnstsw
mov
outs
jge
add
add
fs
lea
jg
arpl
cmps
pop
lods
clc
mov
sahf
sub
ret
mov
dec
add
xor
cmp
aaa
xor
pop
add
pop
(bad)
std
mov
fs
jmp
movs
jle
mov
cmp
push
test
stos
inc
inc
loope
sub
adc
push
icebp
mov
outs
mov
mov
cmp
(bad)
mov
inc
ins
pop
and
test
and
push
inc
popa
fisub
or
std
adc
xor
sar
scas
pop
test
xchg
xchg
or
repz
xor
iret
push
pop
and
cld
xchg
leave
jecxz
sub
test
pop
test
pop
popa
out
mov
push
ror
ins
jnp
push
imul
push
mov
jecxz
inc
add
sti
jb
xchg
cmp
repnz
push
lahf
popa
mov
adc
mov
xor
aas
cwde
fsubr
pop
sbb
dec
mov
mov
and
or
idiv
mov
and
or
push
jmp
xor
push
add
loopne
sbb
sub
pop
bound
shr
sub
push
pop
sbb
adc
mov
shl
ds
adc
or
jp
cmps
(bad)
xor
push
sub
cmp
xchg
sub
push
adc
bound
aas
cmp
cs
sub
xor
scas
or
mov
mov
lods
ret
retf
and
push
mov
xchg
xlat
jnp
jb
mov
jae
imul
xchg
stos
cmp
out
sub
popf
sub
popa
fucomp
cld
enter
clc
pusha
ins
inc
test
mov
clc
fisubr
jmp
aam
cmp
and
mov
mov
sub
ja
in
dec
jmp
stc
out
leave
dec
lods
xchg
stos
retf
jb
cld
enter
movs
enter
test
dec
dec
(bad)
jo
adc
xor
push
xor
lods
lahf
jb
mov
pop
mov
int3
in
xchg
ds
sub
and
sub
inc
pop
pop
enter
mov
dec
int
fcom
and
(bad)
mov
add
or
shl
pop
arpl
sub
pop
repz
and
scas
mov
xchg
stos
addr16
pop
mov
ror
inc
jl
lea
add
out
sar
mov
stos
adc
mov
cwde
shl
inc
popf
nop
ins
imul
std
lock
jbe
jae
in
dec
popf
inc
daa
rcl
daa
es
(bad)
rcl
sub
push
es
fimul
and
das
mov
(bad)
jmp
out
xchg
dec
mov
dec
mov
lds
mov
cmp
inc
not
cmp
das
lea
in
outs
mov
sub
and
pop
xor
xor
cmps
sbb
retf
xchg
cli
sbb
hlt
aam
scas
popf
mov
and
stos
jge
fiadd
xchg
enter
or
mov
into
cmp
and
pop
sbb
dec
int
sbb
movs
mov
stc
test
jne
pop
loop
mov
jp
dec
in
push
sbb
or
(bad)
push
fisttp
adc
(bad)
rol
add
push
jmp
(bad)
gs
jmp
in
js
cmp
das
sub
popa
hlt
loopne
push
pop
xchg
xor
mov
adc
mov
push
add
pop
sahf
jno
inc
mov
cmp
jo
mov
mov
push
inc
cwde
addr16
clc
and
cmp
fldcw
mov
xchg
in
mov
xlat
out
mov
mov
out
mov
or
cmp
cmp
enter
rcl
aad
loopne
push
pop
enter
adc
xchg
aaa
xor
fidivr
ret
scas
or
sbb
bound
mov
push
into
cs
xchg
cmp
jl
or
add
ins
loopne
fwait
(bad)
mov
clc
iret
mov
xchg
ins
aas
popa
(bad)
call
push
jge
rcl
push
xor
sti
pop
mov
add
dec
daa
push
fimul
daa
(bad)
cld
out
jecxz
test
jp
cmp
cmp
adc
lods
or
pop
ss
bound
int3
xlat
cli
movs
int3
(bad)
movs
(bad)
(bad)
movs
rcl
mov
rcl
inc
adc
inc
xchg
cmp
mov
cmp
cmps
in
push
stos
lock
fsubr
mov
outs
and
(bad)
sub
sub
mov
jo
xchg
pop
xlat
mov
or
mov
js
xchg
and
jbe
rcr
mov
cmp
into
lahf
sahf
aad
mov
icebp
xchg
rol
data16
loopne
enter
cmp
inc
sbb
jp
shl
xchg
xor
ret
popa
sub
int3
scas
(bad)
es
gs
sub
fisttp
gs
xor
push
sub
outs
pop
xor
xchg
jmp
xchg
mov
add
inc
xchg
(bad)
in
or
fst
xchg
mov
aad
fst
fild
mov
sbb
fdiv
iret
lock
push
mov
sbb
jno
mov
add
mov
push
aad
fs
loope
(bad)
movs
push
pop
mov
out
mov
test
add
and
movs
into
das
nop
push
(bad)
jb
out
cwde
xchg
into
jmp
jae
cld
jbe
ret
and
push
stos
mov
in
shld
xor
rcl
mov
xchg
push
mov
shl
ret
das
aam
jno
mov
test
lea
out
out
dec
(bad)
ss
or
mov
xor
pushf
nop
sub
xchg
add
sub
cmp
pop
mov
sbb
and
or
xchg
mov
xchg
sbb
mov
mov
pop
adc
lods
stos
cmp
mov
push
iret
daa
aad
pop
push
fs
shld
das
cmp
sub
pop
xor
push
retf
cmp
mov
sbb
fcomp
mul
push
mov
lahf
add
jae
pop
aad
in
hlt
cmps
fwait
mov
(bad)
out
inc
pop
(bad)
cdq
and
pop
pusha
not
ja
sub
push
sbb
test
sub
stos
nop
push
add
pop
sbb
cwde
aaa
dec
sbb
xchg
mov
dec
cmc
icebp
movs
test
mov
jmp
sbb
loopne
es
rol
mov
push
sbb
push
mov
mov
cmp
adc
mov
leave
push
loopne
pop
int
dec
push
cli
mov
cmp
cs
fnsave
sbb
scas
inc
jmp
scas
movs
movs
add
mov
fsubr
jg
xor
aaa
(bad)
cwde
jbe
jbe
les
aam
mov
lahf
das
push
sub
test
inc
aaa
retf
int3
pop
es
popa
popa
aad
or
xor
(bad)
push
fs
in
(bad)
dec
movzx
add
mov
clc
xchg
out
pop
cmps
ds
push
loope
pop
pop
cmc
loope
push
add
rep
sti
not
inc
cmc
pop
push
ret
mov
arpl
fwait
mov
xchg
push
sbb
daa
sbb
lock
(bad)
dec
arpl
(bad)
jl
adc
sub
out
mov
loop
mov
xor
xchg
mov
leave
jmp
pop
lods
(bad)
sub
inc
(bad)
mov
jns
fsubr
lahf
fmul
jo
hlt
or
mov
in
inc
retf
push
inc
jb
add
sub
add
or
repz
addr16
sub
push
adc
gs
mov
jmp
out
test
mov
push
inc
mov
and
mov
xchg
test
xchg
jns
dec
dec
dec
out
cmp
(bad)
stc
test
jbe
and
jle
(bad)
cs
loop
mov
adc
or
into
mov
movs
sub
out
push
adc
cmp
pop
mov
stc
xor
mov
pop
mov
ret
jb
adc
jbe
addr16
push
outs
mov
cmc
inc
and
adc
ds
inc
mov
inc
add
mov
dec
fdivr
call
lds
mov
addr16
mov
ret
or
mov
or
and
mov
mov
jae
fwait
into
in
mov
(bad)
ja
inc
retf
nop
push
clc
mov
cwde
cmp
mov
sahf
inc
sub
adc
dec
call
fcmovnu
or
pop
mov
aam
inc
daa
std
in
(bad)
fs
into
xor
hlt
xor
cmp
jle
and
push
adc
push
or
cmp
xor
daa
fdiv
popf
push
js
mov
add
jno
(bad)
mov
ret
jno
pop
inc
add
retf
mov
inc
ja
sbb
inc
jb
jecxz
neg
xchg
sar
sub
fldcw
fs
popa
pop
push
push
xor
mov
fidiv
pop
into
pop
in
push
pop
push
(bad)
mov
mov
(bad)
fnstsw
mov
xchg
jecxz
movs
pop
or
loopne
xchg
and
xchg
jl
or
xchg
jmp
and
outs
push
rcr
xor
repnz
xor
cmp
jmp
es
jbe
shl
xchg
movs
adc
mov
ret
add
pop
loopne
sbb
adc
mov
lock
retf
and
cmp
stc
scas
cli
push
ja
call
test
mov
or
adc
stos
(bad)
jg
dec
leave
icebp
sub
loope
push
mov
sub
movs
out
push
dec
mov
ret
pusha
jl
rcl
push
xlat
mov
xor
mov
mov
and
pop
fs
(bad)
arpl
dec
push
and
inc
imul
mov
cmp
and
jmp
retf
pop
push
pop
mov
mov
std
ficomp
stc
enter
mov
mov
push
dec
lea
retf
xor
pusha
sar
out
push
stc
sbb
add
or
pop
and
stos
xchg
push
cs
jle
lock
test
out
mov
js
aad
cmp
dec
stc
cli
cdq
sbb
outs
mov
mov
jp
add
xor
push
push
add
jp
fiadd
shl
jbe
movs
cmps
pusha
ret
add
add
xchg
popf
cwde
jbe
ins
add
data16
aad
fbstp
clc
retf
fstp
mov
sub
ret
aas
ret
fs
cmps
push
pop
jp
lahf
push
pop
sbb
loope
pop
outs
dec
adc
inc
cld
add
jae
imul
shr
movs
sub
mov
adc
aam
hlt
clc
cmps
ss
pop
jp
(bad)
xchg
pop
gs
or
scas
xor
sub
pop
cld
(bad)
jae
and
sti
push
mov
lds
xor
shr
mov
popf
leave
iret
into
ja
cli
loope
sbb
push
out
shr
pop
cmp
daa
leave
ret
lods
dec
shl
(bad)
jmp
retf
sub
retf
cwde
mov
cmps
sub
push
shl
cmp
jb
stos
xlat
pop
push
xchg
push
push
stc
dec
lock
add
dec
mov
mov
mov
pop
fadd
(bad)
bound
hlt
mov
iret
sbb
pusha
test
mov
and
mov
and
retf
arpl
cmc
dec
pop
sub
das
inc
cmps
icebp
xchg
into
in
cld
das
push
push
fisttp
into
retf
cmp
xor
in
out
pop
push
jns
inc
pop
mov
adc
jle
ins
loope
out
fadd
inc
adc
inc
mov
cmps
aad
xchg
xchg
sub
xor
and
(bad)
popa
mov
dec
add
inc
xor
mov
xor
mov
pop
jns
test
or
in
jno
adc
neg
push
xchg
std
mov
jbe
pushf
push
xchg
leave
lds
sbb
dec
sbb
mov
adc
xor
dec
test
add
dec
dec
hlt
ins
shl
leave
cs
mov
retf
in
inc
sar
shl
jmp
outs
lods
xchg
std
cwde
ds
push
lea
ffree
jl
push
(bad)
retf
shl
inc
js
cmp
mov
xor
(bad)
iret
cmp
pop
ror
movs
(bad)
mov
movs
xchg
adc
rcl
stc
lahf
in
dec
sbb
nop
pop
scas
ins
jmp
call
icebp
call
mov
jno
mov
sub
out
ror
mov
(bad)
repz
mov
mov
aam
sti
cmp
and
sbb
dec
push
leave
cmp
sti
xor
enter
imul
push
cld
pop
dec
add
(bad)
leave
add
lahf
outs
scas
xchg
and
adc
jecxz
lods
loop
movs
and
push
loopne
repnz
rcr
pop
and
adc
data16
retf
push
sti
pop
or
rcr
jae
cmp
fst
mov
mov
ret
pusha
pop
dec
pop
movs
test
or
add
add
xor
xchg
iret
or
mov
lahf
or
xor
mov
dec
mov
outs
and
mov
push
(bad)
pop
in
mov
cmp
mov
in
mov
jns
fnstcw
popf
lsl
jae
clc
int
hlt
or
push
jae
cld
push
mov
cs
inc
rcr
push
lock
push
pop
retf
xchg
ja
frstor
clc
(bad)
sbb
push
add
das
imul
in
cmc
xchg
mov
xor
inc
aas
jne
adc
aaa
or
mov
mov
cmp
lahf
cmp
ins
cmp
daa
xor
push
ret
shl
pusha
stos
cli
test
enter
rol
loope
xlat
cli
mov
adc
mov
pop
adc
test
aam
mov
cmp
adc
inc
(bad)
sti
lods
xor
std
and
stos
push
pop
dec
sbb
mov
pop
mov
pop
jb
xchg
or
imul
dec
mov
sbb
pop
xchg
and
cmp
mov
rcr
cmc
mov
fstp
add
shl
adc
xchg
pop
sub
in
fisttp
es
pushf
ins
jae
out
xchg
jae
xor
add
aad
es
(bad)
mov
pop
inc
push
cs
mov
ins
sub
push
std
xchg
xchg
sub
jp
cld
jae
xchg
fst
xor
mov
in
hlt
call
dec
or
imul
pop
pop
dec
fcom
sahf
push
das
mov
stc
jl
xchg
std
xor
xlat
mov
xchg
(bad)
call
dec
mov
repnz
xor
popf
mov
ins
ret
pop
retf
adc
bound
xchg
popf
lahf
xor
mov
les
adc
xlat
adc
jmp
push
mov
mov
stos
cmps
bound
loope
icebp
jne
pop
test
in
cdq
xor
pop
and
or
lods
mov
test
jno
movs
xchg
and
fnstsw
xchg
jmp
push
xchg
loop
test
daa
and
add
adc
xchg
xchg
int3
inc
jmp
loope
xchg
js
jp
sub
pop
jnp
sub
pop
mov
scas
mov
dec
(bad)
icebp
scas
jo
hlt
dec
and
add
retf
jnp
mov
or
inc
sti
xchg
mov
int
int
sbb
retf
push
mov
push
inc
fidivr
rcl
ret
pusha
loop
ficom
fimul
(bad)
std
xor
inc
ror
ss
and
jg
xor
outs
inc
inc
mov
pop
or
ret
inc
stc
aam
inc
cwde
(bad)
mov
aas
das
mov
mov
movs
arpl
or
addr16
jp
hlt
sub
test
push
loop
xchg
test
dec
adc
inc
pusha
(bad)
mov
ret
mov
dec
or
cdq
cli
push
push
or
into
gs
test
(bad)
mov
xor
ja
cmp
test
ret
cmp
je
ret
mov
test
int3
add
fidivr
or
iret
ja
mov
dec
cdq
sbb
(bad)
jbe
mov
jb
out
push
retf
in
or
dec
cmps
mov
jmp
mov
pop
fidivr
adc
jo
out
push
sar
sahf
test
retf
mov
jb
arpl
gs
ja
jne
xor
push
data16
int3
fisub
mul
mov
pop
xor
rol
xchg
(bad)
pop
in
adc
inc
inc
enter
lods
xchg
dec
outs
mov
fucom
pop
jecxz
(bad)
fidiv
dec
and
push
fdiv
add
adc
cmps
jmp
dec
pop
(bad)
jns
adc
xor
mov
jmp
xchg
jle
cdq
test
cmp
imul
and
fnstcw
cmp
jns
cmpxchg
std
jne
and
xor
xchg
out
jg
xchg
cmp
xchg
mov
stos
lods
sbb
stos
pop
pop
and
sbb
inc
in
jo
imul
adc
das
lea
enter
and
xchg
pop
dec
shl
fistp
pushf
inc
mov
jae
jp
mov
int3
adc
xchg
add
lods
mov
call
mov
iret
mov
inc
mov
push
mov
inc
xchg
mov
xor
mov
mov
icebp
and
(bad)
push
cwde
or
outs
outs
jno
punpckhbw
jle
mov
jmp
or
cmp
cdq
jge
sub
add
into
jb
loope
sub
cs
pop
lock
enter
mov
fwait
aad
jo
dec
dec
push
push
out
lock
and
std
(bad)
sub
dec
lds
cli
in
in
bound
stos
in
ja
push
add
mov
mov
imul
mov
cs
xor
(bad)
aad
leave
out
adc
sbb
scas
or
pop
xchg
inc
daa
(bad)
pop
pop
nop
push
xchg
inc
and
dec
aaa
(bad)
cmc
je
push
adc
mov
sahf
adc
(bad)
mov
cdq
in
stc
iret
mov
fld
sub
mov
cmp
adc
scas
pop
adc
inc
jl
push
inc
or
ins
std
inc
test
arpl
popf
mov
add
inc
stc
fdivr
fist
movs
call
jbe
cmc
jecxz
pop
lds
jo
xor
leave
xchg
outs
dec
cmp
adc
sub
adc
stos
test
push
dec
xor
sbb
ficom
shr
out
mov
xchg
push
sub
sub
shl
fisttp
enter
xchg
xchg
loop
jle
add
pop
dec
jae
popf
call
ins
es
lock
outs
js
std
push
inc
imul
dec
fs
fstp
sub
fwait
loop
ins
fild
sub
in
pop
sub
adc
jmp
pop
div
push
pop
mov
mov
(bad)
stos
lds
fcmovnbe
mov
(bad)
loopne
and
or
scas
dec
cmps
pop
int3
pop
leave
out
mov
mov
pop
in
jge
inc
mov
adc
mov
out
aaa
mov
out
jo
dec
xchg
mov
je
sub
div
popa
popa
mov
lock
sbb
icebp
daa
cmp
jb
dec
dec
mov
jbe
sti
adc
push
imul
shl
fisub
jl
inc
repz
icebp
dec
push
jb
mov
xchg
push
mov
and
cs
cmps
and
ret
test
dec
xchg
les
adc
repz
lock
sbb
rcl
into
mov
mov
rcr
popf
out
mov
adc
enter
and
mov
or
fwait
es
movs
or
ins
sbb
bnd
xlat
sub
fstp
push
clc
push
in
mov
or
pop
test
add
push
xchg
lea
aaa
and
fidiv
jl
sbb
mov
(bad)
and
sub
lds
cli
popa
pop
inc
loopne
in
cmps
aam
pop
dec
nop
out
xchg
in
jmp
mov
fbstp
out
mov
imul
test
in
std
fld
jp
mov
pop
movs
arpl
fiadd
rcr
ins
adc
(bad)
add
jb
sub
faddp
and
inc
mov
(bad)
xor
clc
mov
jg
andnps
adc
imul
fcom
cmp
popa
xlat
mov
div
enter
(bad)
sar
movs
rcl
mov
add
js
adc
xchg
jp
inc
xchg
add
shl
(bad)
cmp
movs
push
out
pop
xchg
ins
fcom
mov
xor
nop
loopne
inc
das
ret
mov
mov
add
xor
cli
cmc
ss
cli
cmc
sub
arpl
ins
or
out
cmp
mov
inc
fwait
popf
inc
and
push
scas
js
and
in
add
jp
and
ins
xor
fwait
repnz
mov
aas
add
inc
movs
inc
gs
rcr
pop
shl
aad
push
scas
loopne
pop
enter
xor
adc
test
enter
(bad)
aas
jb
retf
mov
or
ds
test
adc
mov
hlt
sahf
jl
in
nop
jecxz
sbb
out
movs
mov
ret
lods
mov
fisttp
fsub
xor
outs
gs
out
pop
(bad)
repz
cmps
out
mov
movs
dec
inc
adc
fild
(bad)
fcmovb
test
mov
sahf
popa
mov
inc
xchg
adc
nop
retf
cwde
xchg
pop
out
sbb
das
mov
(bad)
fwait
xor
out
add
(bad)
iret
(bad)
ds
sahf
pop
sbb
arpl
sub
sbb
adc
adc
repz
hlt
mov
cli
jmp
cmp
xor
inc
lea
hlt
inc
add
xor
sub
(bad)
sub
inc
fsubr
fdivrp
jae
dec
aaa
(bad)
hlt
and
push
shl
mov
in
push
inc
into
mov
fstp
sahf
or
pop
mov
aaa
jbe
in
(bad)
call
sbb
(bad)
mov
retf
cmp
sbb
dec
data16
inc
push
and
arpl
jnp
pop
out
enter
xchg
mov
es
mov
mov
cs
mov
(bad)
add
jecxz
idiv
shl
retf
fadd
jmp
loop
pop
cmp
popf
inc
cmc
cli
pop
adc
and
mov
cmp
ror
and
sub
sbb
pop
fisubr
adc
(bad)
jmp
enter
pop
dec
fwait
jnp
(bad)
scas
js
pop
mov
fcom
add
lahf
pop
xor
adc
pop
das
push
std
mov
movs
out
lods
mov
cmps
mov
xchg
xchg
lds
fbstp
xor
sub
int
iret
inc
pusha
out
mov
jle
cmp
cmp
(bad)
cli
scas
bound
dec
push
xor
pop
aaa
or
inc
mov
sub
inc
dec
pop
mov
dec
and
pop
cwde
inc
ret
sub
nop
mov
add
sbb
cli
and
retf
xor
shl
pminub
sub
pop
shl
or
call
push
push
lods
push
jns
and
frstor
test
jae
mov
pop
ror
dec
adc
stos
shr
sub
ret
xor
fcmovnu
adc
stos
push
in
lahf
ins
pop
pop
fcomp
dec
push
mov
call
jecxz
mov
mov
in
mov
bound
sub
inc
cmp
out
cld
loop
pushf
inc
inc
loopne
cmp
ds
ret
js
dec
xor
and
shl
fcomp
adc
jno
call
scas
sbb
repz
leave
dec
xchg
call
sub
mov
or
sti
xor
enter
aas
jne
shl
mov
or
fld
xor
shl
in
and
icebp
xor
repz
loope
dec
enter
stc
sti
(bad)
mov
popa
mov
adc
arpl
(bad)
mov
das
ficom
ss
loope
repz
mov
popf
addr16
out
and
dec
and
icebp
daa
clc
inc
in
fsubr
jmp
inc
push
cmps
dec
add
(bad)
pop
xor
sahf
and
shl
ins
push
jb
pusha
xchg
std
dec
out
movs
and
call
dec
push
dec
push
ds
mov
enter
jmp
and
movnti
fbld
jecxz
dec
loop
icebp
lds
daa
push
iret
xor
dec
sub
ins
call
(bad)
jl
ss
call
dec
and
rcl
xchg
inc
rol
xchg
dec
push
sub
pop
(bad)
dec
inc
mov
clc
adc
sub
jo
in
retf
cmc
loop
dec
in
icebp
dec
cli
xchg
movs
add
lock
retf
inc
aas
push
add
xor
sbb
(bad)
dec
loop
retf
dec
iret
push
mov
retf
mov
add
and
mov
mov
mov
movs
dec
shl
(bad)
fstp
push
pop
imul
and
cmc
inc
mov
fcmovu
and
int
adc
movs
movs
mov
mov
fiadd
mov
shl
fwait
stos
cmp
ret
xchg
inc
jo
cdq
xchg
jmp
das
push
aam
pop
movs
daa
inc
and
out
mov
and
repnz
(bad)
cs
xchg
mov
cmps
mov
jnp
and
cmp
lahf
fidiv
push
ja
mov
cmp
pop
enter
stc
pushf
push
es
or
xor
in
loope
loope
dec
mov
rcl
loopne
enter
movs
mov
pushf
pop
(bad)
aam
mov
outs
js
mul
call
arpl
pop
mov
xor
(bad)
mov
jb
fisub
lea
ss
aaa
daa
push
push
popa
sub
inc
jmp
mov
gs
jb
fucomp
jge
iret
shr
call
(bad)
xchg
adc
fsubr
cmp
and
aaa
out
out
mov
adc
xchg
test
and
inc
dec
dec
imul
adc
fwait
xchg
cld
in
lock
ja
xchg
jmp
cmps
mov
cmp
xchg
and
sub
jno
cmp
mov
xor
mov
xor
sub
bound
(bad)
jge
jnp
mov
shl
das
adc
mov
stos
pusha
rcl
push
add
push
inc
dec
inc
cmp
inc
jmp
push
test
ins
pop
lds
mov
pusha
imul
mov
jbe
cmps
(bad)
popa
fsubr
pop
pop
repz
cs
rcl
rep
pop
mov
popf
loopne
imul
push
mov
or
outs
shl
mov
clc
mov
mul
jne
shl
push
stc
xchg
lods
clc
in
xchg
sub
mov
call
test
pop
imul
mov
mov
data16
sbb
shl
fbld
into
cmc
div
ret
rol
fwait
xchg
sub
sbb
pop
ins
mov
xchg
(bad)
xchg
nop
mov
xchg
jb
dec
xchg
out
call
cld
rcr
push
retf
mov
addr16
rol
out
fldcw
ror
dec
or
in
rcr
cmps
outs
lds
push
pop
jle
out
cmps
jl
push
in
xchg
cmp
ret
test
inc
jmp
push
aaa
or
push
sub
aas
and
inc
mov
gs
add
(bad)
out
aam
js
(bad)
(bad)
retfw
daa
stc
push
fbstp
jbe
rol
xor
lods
add
mov
in
adc
and
mov
jecxz
sti
push
test
hlt
jne
fst
stc
push
in
out
pop
je
repnz
dec
mov
mul
ror
mov
xchg
xchg
jmp
(bad)
fldenv
les
ss
inc
outs
js
je
stos
das
or
mov
js
ja
es
test
jl
push
test
mov
aad
scas
xchg
adc
pop
xchg
fcom
sbb
(bad)
in
xchg
xchg
aam
cli
dec
inc
neg
inc
push
fs
(bad)
xchg
push
(bad)
hlt
movs
push
push
fst
(bad)
enter
pop
sti
ret
fsubr
pop
(bad)
pop
mov
sub
call
cmp
pop
shl
cmp
mov
(bad)
(bad)
movs
rcr
mov
les
loope
xchg
ds
adc
std
mov
cmp
push
stos
xchg
scas
or
xchg
dec
sub
(bad)
in
div
ds
push
push
and
cmp
test
call
retf
dec
push
lea
xchg
ret
rcr
mov
rcl
fsub
sub
dec
push
in
push
popa
sub
xchg
out
stc
nop
jge
mov
shr
push
add
daa
jmp
into
cli
mov
fcmovu
out
fst
leave
mov
aad
addr16
mov
(bad)
rcr
mov
inc
xchg
mov
(bad)
in
xchg
push
sbb
and
mov
in
push
mov
add
hlt
int3
ins
xor
fild
mov
jne
call
movs
pop
pop
push
xchg
adc
(bad)
jmp
(bad)
push
(bad)
inc
scas
jmp
aam
icebp
(bad)
movs
loope
mov
mov
retf
test
std
sahf
and
xchg
fsubr
sub
loope
xlat
out
aaa
cwde
aaa
fs
movs
inc
sbb
xor
push
div
or
pop
push
lods
shr
pop
and
sbb
(bad)
aam
xlat
push
repnz
sub
push
rcl
jae
or
shr
sbb
int3
jge
sar
or
in
cmp
mov
jae
jg
cmps
or
clc
cmc
(bad)
xor
inc
mov
push
push
pop
iret
lahf
rol
adc
pop
fs
iret
not
jge
pop
jge
mov
aas
mov
inc
std
aam
pop
add
mov
ja
test
ins
push
jne
cmps
inc
fnstcw
ins
mov
mov
(bad)
daa
not
popa
test
mov
daa
sahf
push
add
les
movs
jecxz
ficom
out
repz
sub
inc
test
sub
int
inc
arpl
inc
sub
mov
cmp
pop
mov
(bad)
out
movs
es
stos
pop
pop
adc
mov
jle
jo
jns
push
add
mov
test
popa
das
sti
mov
mov
stos
stos
xor
push
mov
lds
pop
lods
inc
and
sub
shl
test
sub
cmp
(bad)
mov
cmps
ret
shl
cdq
aas
out
lods
hlt
lock
jbe
sbb
mov
(bad)
and
jbe
outs
outs
sub
cmp
sub
jl
jp
fidiv
inc
inc
(bad)
push
out
retf
adc
jbe
push
iret
jp
xor
test
aam
xlat
and
mov
repz
fwait
out
loopne
rol
xchg
pop
dec
cmps
xchg
push
stos
idiv
movs
inc
push
cmp
aam
scas
(bad)
fiadd
sub
and
inc
push
adc
xchg
das
in
add
enter
loop
fist
les
in
dec
pop
inc
es
push
int3
lods
sub
lods
adc
adc
in
clc
adc
xor
pop
fnstsw
sti
(bad)
mov
or
cmp
fs
neg
enter
or
jmp
xchg
mov
scas
pop
sti
in
mov
mov
mov
mov
xor
sub
dec
pop
pop
std
js
xchg
nop
dec
pusha
push
adc
js
addr16
les
pop
call
mov
sub
xchg
popf
sbb
and
push
add
movs
jmp
jo
test
cdq
loope
int3
test
out
out
les
mov
outs
scas
movs
icebp
dec
jle
adc
add
mov
lods
stos
xchg
stos
add
mov
bound
or
jo
outs
imul
test
mov
imul
imul
mov
arpl
daa
(bad)
in
rcr
mov
xor
aaa
gs
shl
bound
add
mov
leave
xor
mov
call
test
scas
mov
mov
dec
cli
test
mov
lds
(bad)
out
mov
pop
cmps
mov
out
mov
arpl
or
ret
ret
outs
mov
mov
(bad)
or
aas
int
icebp
rcr
mov
inc
cmps
mov
push
xor
ret
jmp
push
push
mov
(bad)
ret
addr16
repnz
dec
mov
add
xor
pop
pop
in
int
lock
lods
std
mov
cmp
add
adc
dec
jp
mov
cdq
ror
push
sbb
jg
test
das
jle
aaa
into
shl
jns
ja
inc
ret
fnstsw
dec
pop
pop
sti
mov
jae
add
cdq
leave
sub
movs
xchg
adc
es
push
cmc
test
mov
test
xor
out
ror
adc
shl
sub
cmp
daa
mov
push
mov
fs
fcomip
push
retf
push
jmp
pop
data16
jno
shl
out
add
in
scas
jne
pop
loope
xor
cmp
fldcw
cmps
push
mov
or
sbb
pop
xor
stc
fild
pop
aam
dec
test
test
and
ins
pop
imul
bound
inc
push
xchg
scas
mov
jo
sbb
jl
gs
xor
ror
xchg
push
adc
test
ret
movs
mov
es
pusha
dec
es
cmps
stos
jbe
mov
retf
(bad)
push
fistp
inc
out
cmps
mov
and
inc
pop
sahf
and
loop
mov
add
push
loop
xchg
mov
shl
les
(bad)
in
hlt
ss
ret
stos
cld
dec
sti
pop
das
pop
xchg
jnp
pop
hlt
cs
out
call
adc
mov
(bad)
hlt
add
sub
and
adc
fsubr
cld
(bad)
mov
fcomp
inc
test
mov
push
es
cs
das
and
lods
into
lods
xchg
xchg
daa
dec
popa
inc
pop
inc
mov
loope
xchg
pop
call
mov
mov
stc
xor
outs
lods
xchg
xchg
inc
idiv
mov
aas
jmp
push
xchg
and
idiv
mov
dec
add
stos
pop
aad
lods
cwde
ins
mov
dec
idiv
call
das
retf
clc
out
add
leave
pop
dec
test
adc
std
push
push
or
in
mov
in
push
jmp
(bad)
nop
cmp
ins
jecxz
push
dec
nop
mov
jbe
push
jl
out
jae
inc
(bad)
push
cmps
jne
mov
jmp
ret
(bad)
les
repnz
pusha
ja
pop
xchg
mov
jbe
mov
sub
mov
(bad)
repz
pushf
mov
jns
and
loope
sbb
push
push
pop
cli
xchg
add
push
adc
clc
es
mov
sbb
cmc
(bad)
sti
jne
push
out
push
ins
aaa
pop
cdq
dec
push
pushf
xor
dec
lock
repz
pop
call
xor
xchg
push
mov
xchg
int
dec
cmps
scas
fwait
push
std
push
or
lods
sub
pop
add
ror
in
scas
enter
adc
faddp
call
or
je
and
sub
ret
cdq
and
or
push
inc
dec
lods
fdivr
inc
(bad)
cmc
in
xchg
inc
shl
and
push
jae
stos
(bad)
outs
push
jp
mov
cld
or
call
inc
jmp
cdq
enter
dec
ret
mov
and
js
cmp
fld
sbb
dec
(bad)
enter
pusha
cdq
and
pop
pop
pop
pop
push
pop
mov
daa
add
in
fmul
shl
jne
in
in
push
dec
push
jns
adc
clc
mov
xchg
jae
out
jbe
leave
iret
fsub
aas
imul
int3
scas
jge
cmps
jecxz
int
int3
lods
daa
push
or
pusha
inc
(bad)
lods
mov
xchg
or
mov
cld
jge
shl
push
cmp
shr
mov
daa
xor
jmp
xlat
mov
in
fild
pop
test
cdq
hlt
movs
xor
test
out
(bad)
inc
mov
je
dec
mov
cmp
inc
popf
data16
adc
jne
stos
mov
push
pop
xor
ss
add
(bad)
xchg
out
ss
dec
lea
or
ja
or
push
lds
loop
mov
pop
in
and
(bad)
sub
jmp
pop
mov
sub
sbb
cmp
outs
jp
(bad)
loopne
sbb
ins
jno
shl
or
or
and
aam
fnsave
std
mov
je
test
dec
xor
fwait
sub
movs
icebp
push
mov
out
and
cmps
mov
lock
sbb
cmp
ds
lods
out
pop
imul
repnz
and
cmps
cmc
sub
jg
inc
adc
bound
mov
jae
add
movs
retf
cmp
sti
lods
inc
push
jle
push
neg
mov
push
clc
fnstcw
push
test
mov
cmp
adc
stos
pusha
stos
shl
pop
fbld
dec
daa
jb
data16
mov
sub
movs
mov
mov
test
cmp
push
fiadd
cdq
imul
out
add
bound
ret
adc
div
sbb
mov
sub
mov
xchg
fidiv
arpl
mov
mov
add
(bad)
mov
out
out
xor
dec
ds
jns
mov
sbb
adc
push
inc
cmc
shr
ins
ror
ret
cmc
xchg
in
outs
mov
rcl
push
(bad)
fisttp
sub
repnz
ret
in
push
es
les
xchg
gs
repz
inc
enter
inc
shl
jg
(bad)
call
xchg
mov
loopne
push
adc
sub
xchg
movs
mov
(bad)
int
les
lods
xchg
xchg
in
aam
xchg
dec
xlat
cwde
jns
test
push
mov
dec
loope
stc
(bad)
cmc
aam
lods
popf
int3
mov
in
lds
push
sub
push
jl
add
add
mov
add
aam
push
loop
(bad)
push
push
aam
xor
and
and
(bad)
bound
sbb
in
ret
cmps
outs
lods
ror
(bad)
jmp
and
mov
pop
outs
in
(bad)
mov
jno
pusha
inc
mov
sub
pop
fnstenv
neg
iret
cmp
loopne
sub
xor
xor
jbe
test
xchg
mov
ficomp
xstore-rng
cmps
add
inc
pop
imul
shl
test
scas
mov
adc
inc
push
and
sahf
push
jle
shl
add
mov
inc
and
into
cli
je
(bad)
(bad)
out
daa
aad
add
mov
pop
or
std
clc
cmp
mov
scas
pop
je
ret
add
or
rcr
fwait
jne
sub
cdq
cmps
sub
test
cli
movs
rcl
ftst
(bad)
(bad)
and
aam
test
int3
fcomip
test
enter
rol
out
mov
fdivr
into
(bad)
hlt
not
popf
call
sti
retf
xchg
shl
test
mov
stc
nop
xchg
lds
stos
test
sar
cmc
rol
(bad)
lock
retf
sti
scas
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
mov
div
loope
jmp
mov
cmp
std
lods
(bad)
(bad)
mul
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
out
fcom
out
mov
fild
mov
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
int3
mov
test
test
(bad)
movs
ins
aam
jmp
(bad)
movs
(bad)
xlat
(bad)
xchg
in
push
cwde
and
(bad)
xlat
(bad)
aas
dec
push
ss
mov
movs
(bad)
repz
(bad)
xlat
pop
hlt
sub
das
cmp
cmp
push
imul
and
(bad)
div
sbb
push
pop
push
call
retf
iret
cmps
sahf
inc
jmp
lock
lea
and
outs
xchg
bound
mov
(bad)
sti
cli
or
dec
aad
cmp
in
pop
aaa
out
mov
loope
pop
hlt
push
jne
xchg
dec
popf
push
push
and
into
mov
mov
std
xchg
mov
fild
mov
std
ins
mov
adc
dec
std
jne
stos
repz
push
jns
neg
cmps
jmp
xchg
mov
fist
mov
clc
sbb
stos
dec
sub
pop
pop
int
pop
sbb
xchg
xlat
hlt
gs
push
sbb
(bad)
popf
popa
movs
add
sub
div
in
rcr
mov
outs
jnp
sbb
and
pop
xor
sbb
in
or
xor
(bad)
cmc
pop
jmp
shl
loop
nop
lds
and
ins
jne
fld
add
aad
mov
(bad)
push
mov
int
test
sbb
and
push
mov
mov
push
clts
xchg
cwde
cmp
cmp
ds
xor
push
xchg
in
mov
adc
ins
call
(bad)
imul
stos
or
jns
fdiv
mov
movs
jmp
jns
or
rol
add
and
(bad)
(bad)
cli
inc
popa
inc
mov
cli
push
daa
(bad)
sbb
jns
retf
xor
add
push
mov
adc
in
mov
(bad)
into
push
xchg
sub
lds
out
aas
outs
jns
movs
test
(bad)
idiv
(bad)
mov
movs
push
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
add
int3
sti
(bad)
test
rol
(bad)
test
aam
mul
(bad)
mov
adc
jge
lahf
jle
inc
xor
push
cmp
scas
rcr
rcl
loope
push
xchg
icebp
fwait
ss
push
sbb
repz
outs
shl
and
(bad)
in
push
ret
sbb
arpl
ret
mov
shl
xchg
ror
mov
out
add
(bad)
cwde
aas
or
dec
mov
or
inc
imul
ret
outs
inc
and
xor
or
ins
out
dec
int
bound
pop
pop
jg
cmp
pop
cmp
and
xor
pop
jb
mov
dec
and
mov
mov
pop
jmp
xor
std
in
and
sub
pop
sub
mov
add
push
rol
(bad)
pop
aam
sub
cmp
xchg
outs
into
xchg
push
mov
inc
int
stos
or
in
push
loopne
jno
mov
es
xor
les
int3
ins
inc
push
adc
shr
pop
or
jl
dec
adc
cs
dec
inc
jmp
ins
cmps
mov
or
out
sub
leave
stos
outs
jp
jns
clc
test
nop
inc
push
int
iret
mov
repz
std
push
jle
inc
fistp
std
push
ret
aaa
sahf
aas
xchg
jmp
add
inc
xchg
or
jno
enter
mov
imul
pop
daa
test
mov
mov
neg
mov
pop
add
mov
sbb
xchg
aam
gs
add
jae
sub
xchg
aad
dec
sub
lea
je
ds
push
aas
jns
pop
pusha
add
jb
ja
xchg
push
mov
mov
fs
xchg
lods
xchg
push
movs
popa
xor
retf
into
stc
push
inc
je
mov
ds
inc
bound
hlt
movs
addr16
cld
sar
xchg
test
inc
adc
inc
push
push
test
xor
sub
fidiv
mov
xchg
jae
mov
scas
div
xor
push
mov
mov
(bad)
dec
lea
repz
iret
cmp
pusha
xchg
ja
enter
mov
cmp
or
mov
aam
in
iret
fwait
mov
xchg
bound
call
lods
cmp
mov
push
das
sti
mov
shl
leave
cdq
adc
out
test
cmps
ins
xchg
jecxz
and
mov
int3
jmp
(bad)
jne
xchg
clc
outs
mov
dec
or
ins
xchg
das
cdq
cs
arpl
cld
in
jecxz
xor
inc
jmp
aam
ja
mov
adc
(bad)
pop
cmp
pop
fimul
cmps
xchg
test
add
or
add
mov
mov
nop
sahf
popa
retf
cld
sbb
or
inc
mov
and
jb
lahf
loop
pop
ins
push
loope
sbb
fmul
je
int
cs
adc
leave
je
push
mov
or
cld
mov
push
xchg
bnd
xchg
dec
int3
sbb
pop
fmul
mov
cmp
loope
call
into
pop
mov
(bad)
inc
fcomp
cmps
xor
xor
dec
push
inc
lods
sub
sub
(bad)
sbb
mov
enter
(bad)
xlat
(bad)
loope
xlat
repnz
fistp
rol
ins
rcr
jnp
rcr
and
mov
test
pushf
std
mov
cmp
or
rcr
or
xor
mov
mov
and
push
fdiv
inc
sti
sbb
std
jle
mov
(bad)
(bad)
es
sub
lds
fadd
push
pushf
cmp
xor
popa
iret
xor
scas
push
add
add
fisttp
jl
adc
aaa
cmp
mov
in
outs
(bad)
arpl
es
std
xor
fwait
mov
imul
shl
bound
das
jns
(bad)
scas
sbb
push
ss
enter
shl
das
and
sar
(bad)
cmps
shl
mov
and
arpl
pusha
aaa
iret
popf
jns
shr
enter
sbb
cmc
out
and
xchg
maskmovq
imul
int3
pop
mov
jp
into
test
stos
int
dec
(bad)
call
xor
adc
not
cmc
pop
int
rol
loop
je
sti
add
inc
xor
stos
gs
inc
out
je
and
aas
jmp
adc
dec
hlt
nop
and
sub
mov
jb
mov
jo
sar
imul
sbb
xor
(bad)
out
lods
stos
pop
cdq
test
xchg
jo
pop
sbb
mov
or
mov
jbe
xor
popf
mov
repz
xchg
cmp
popa
fild
pop
xor
dec
mov
push
ret
mul
adc
bound
xor
push
sub
les
lea
mov
js
aaa
data16
fild
idiv
aam
into
je
or
dec
push
out
jae
jp
jl
mov
movs
jl
(bad)
mov
(bad)
pop
cmp
(bad)
popa
xlat
aam
test
int3
fcomip
movs
fadd
(bad)
movs
(bad)
rcl
mov
mov
cmp
dec
xchg
mov
mov
add
mov
es
pop
xchg
mov
rcl
or
scas
lods
ins
adc
push
aam
lods
or
jl
mov
mov
and
test
mov
cmp
mov
imul
(bad)
ret
and
adc
jns
loop
inc
lods
mov
xor
cmp
dec
push
pop
pop
sbb
ror
int
dec
fs
push
shl
fstp
pop
pop
out
or
or
je
mov
mov
xchg
lea
imul
adc
pop
push
jecxz
add
add
xchg
push
loope
jge
loop
jg
xchg
test
fsub
jmp
fwait
sub
adc
mov
or
int3
shl
mov
push
pop
push
jmp
cld
mov
xchg
cwde
and
cwde
mov
xor
sbb
jns
rcr
adc
jno
int3
lods
fldenv
in
mov
(bad)
jmp
mov
fiadd
cmp
(bad)
jb
mov
ins
push
ds
sub
pop
add
arpl
(bad)
jmp
rcl
mov
and
je
sub
movs
pushf
fisubr
shr
adc
fld
push
retf
cmc
mov
mov
or
mov
cmps
cwde
add
mov
mov
xor
punpckhbw
cmc
xor
(bad)
push
lods
inc
ret
ins
jp
mov
inc
dec
cmp
mov
fsub
sub
out
sti
sahf
rcl
cmp
bound
push
jb
psubusb
mov
add
cmps
and
pop
mov
add
pusha
sub
dec
out
fwait
xor
pop
jmp
xor
mov
ret
test
jnp
pop
dec
aad
out
pusha
push
mov
call
adc
xchg
imul
xlat
aam
lods
(bad)
xlat
cli
mov
in
fisub
rcl
mov
mov
mov
int
sti
out
adc
xchg
adc
ds
mov
movs
inc
push
ins
in
aad
ja
dec
cdq
imul
fcomp
fld
xlat
out
int3
push
jmp
clc
inc
adc
ja
add
jge
aam
jnp
xchg
mov
cmp
fwait
pop
add
cmp
dec
mov
add
adc
ret
add
ret
ins
sbb
loope
adc
in
xchg
sbb
or
jge
int3
mov
cmp
rol
daa
jmp
das
push
movs
xor
inc
or
pop
(bad)
push
adc
mov
mov
test
mov
aas
xchg
inc
jbe
or
or
xlat
mov
mov
mov
data16
(bad)
pusha
fs
xchg
fdiv
out
mov
mov
nop
push
pop
sbb
cmp
(bad)
fidivr
clc
add
or
xchg
push
loope
mov
(bad)
lea
jp
es
sub
fdiv
(bad)
call
jl
cs
in
ins
mov
ret
or
loop
in
ja
pop
mov
out
mov
xor
dec
movs
xchg
std
xchg
(bad)
xchg
cmp
mov
push
fwait
pusha
fcomip
(bad)
(bad)
xchg
lods
mov
hlt
mov
cdq
mov
inc
pop
popf
push
mov
(bad)
je
pop
cmp
dec
popa
into
inc
rcl
je
mov
mov
lds
xchg
rsqrtps
pop
push
mov
xchg
and
dec
add
hlt
adc
iret
mov
in
cmps
cmps
jg
add
les
jne
adc
test
mov
jno
inc
sbb
jo
and
adc
jb
mov
add
popa
and
(bad)
(bad)
(bad)
and
shl
or
(bad)
xor
loop
pop
popf
pop
cs
jbe
shl
out
loop
cdq
loop
inc
cwde
js
stos
not
iret
jae
mov
mov
dec
outs
in
aad
repz
or
sbb
push
and
xor
jecxz
adc
popa
sbb
mov
add
ret
leave
pop
xchg
cwde
out
pushf
stos
les
pop
rcl
pop
pop
mov
xor
int3
adc
mov
rol
push
faddp
pop
and
clc
loop
(bad)
adc
push
add
ss
(bad)
pop
add
fcmovne
aam
sub
cmp
out
rcr
and
dec
loope
pop
fstp
pop
in
repnz
out
pusha
sbb
mov
pop
cmp
jmp
outs
stc
inc
push
cmp
or
popf
adc
cmp
sub
fs
leave
aaa
aam
pop
ret
into
mov
sbb
mov
xchg
cmp
mul
mov
sub
mov
or
push
sub
xchg
not
out
cmp
sbb
or
cmp
ins
rol
sbb
jmp
les
or
sahf
sbb
out
iret
out
cli
js
outs
adc
shl
jbe
xchg
push
fistp
or
adc
sbb
ds
fdivr
adc
sbb
xlat
jo
adc
push
sbb
enter
aas
sub
mov
adc
mov
in
stos
sar
retf
push
lods
les
jle
cdq
cmps
nop
pop
aam
(bad)
in
xor
dec
js
pop
mov
stc
rcr
aaa
stc
sahf
adc
mov
xlat
jno
pop
cmp
(bad)
imul
push
ja
jg
inc
loop
cmp
jmp
in
cdq
pusha
xlat
xlat
cmp
js
int3
push
ja
scas
cld
jno
pop
hlt
test
rcr
add
xor
dec
(bad)
push
xor
(bad)
inc
dec
pusha
ins
cmps
jmp
xchg
and
mov
call
retf
cmp
fdivp
add
cmp
xchg
call
mov
imul
jge
mov
dec
addr16
push
sar
arpl
jnp
add
mov
mov
mov
cmp
jbe
jmp
movs
sbb
ins
add
sbb
xchg
sbb
mov
data16
pop
mov
mov
stos
shl
sti
repnz
add
ret
addr16
inc
(bad)
sbb
fbld
mov
sub
pop
fdivr
push
and
out
fcom
push
mov
sub
and
fild
adc
cmp
call
pop
xchg
jo
cmovae
shl
adc
xor
lea
xchg
push
adc
mov
and
rcl
outs
xchg
xor
mov
xchg
(bad)
ds
adc
scas
test
lock
jge
dec
daa
jecxz
inc
ja
out
adc
inc
mov
jae
jmp
jl
dec
or
mov
xchg
pop
daa
ins
jp
out
rcl
sub
mov
mov
mov
adc
lods
cmp
sbb
push
cmp
inc
inc
aas
aas
add
stos
rol
dec
imul
jns
inc
lock
mov
je
loop
sbb
add
sub
enter
sub
(bad)
sub
pop
xor
jbe
in
sbb
les
cs
je
mov
movs
mov
jae
add
lods
lahf
movs
mov
in
pop
dec
fisubr
daa
or
xor
inc
into
call
dec
mov
test
sub
inc
loopne
call
jae
add
xchg
inc
mov
or
xor
(bad)
fmul
inc
xchg
dec
mov
mov
push
enter
das
loopne
mov
dec
(bad)
or
pop
adc
inc
fiadd
inc
das
add
cmp
sti
xchg
(bad)
jbe
dec
fbstp
clc
sub
add
pop
inc
jnp
rcl
add
xor
xor
les
pop
popf
xor
sbb
test
inc
stos
aad
push
fdiv
pusha
in
adc
bound
push
mov
nop
out
ret
das
xor
mov
add
jae
mov
adc
inc
or
and
jl
sub
ret
pop
mov
mov
xlat
repz
jo
fucomi
(bad)
cmps
sti
dec
add
dec
call
dec
cmp
mov
push
mov
jae
clc
aaa
or
loope
mov
push
test
ror
iret
pop
jge
imul
dec
add
mov
xchg
dec
add
nop
push
pop
rcr
call
add
les
popf
mov
push
dec
outs
hlt
adc
fucomi
jge
adc
push
mov
sub
leave
add
xor
pop
cmc
adc
int
fst
xchg
mov
sub
jo
inc
xchg
add
push
or
xchg
lahf
lea
(bad)
and
cmp
xchg
loope
sub
push
fsubr
stc
push
inc
and
jns
adc
fcom
fisubr
dec
stc
and
mov
push
mov
test
iret
dec
mov
aas
and
(bad)
stc
fwait
push
mov
or
lahf
jno
ins
clc
jne
(bad)
ss
and
cmp
jb
add
(bad)
sbb
cmp
jecxz
cli
js
sbb
and
mov
ja
inc
push
stos
cmp
imul
dec
in
pop
fist
push
mov
retf
es
(bad)
sti
test
inc
sti
mov
adc
out
jg
and
and
push
pop
lea
pop
js
or
adc
cmp
xchg
stc
and
pop
loopne
xchg
icebp
sbb
ss
rol
adc
jns
cmp
mov
adc
inc
pop
dec
int
loop
inc
add
iret
fisttp
xchg
fldenv
mov
dec
and
inc
xor
in
(bad)
fisub
mov
shl
jns
and
jge
pop
call
adc
mov
jae
lock
push
(bad)
jmp
cmp
outs
and
jae
dec
leave
inc
cs
loop
scas
pop
sti
push
or
mov
inc
pop
adc
mov
fcom
jmp
and
pusha
inc
test
mov
dec
pop
ins
pop
sbb
push
test
push
call
nop
xor
dec
add
fsub
dec
fsubr
fwait
inc
xor
pop
and
xchg
es
je
lods
shl
push
cmp
mov
pop
test
or
mov
hlt
add
pop
test
add
adc
push
jg
xor
out
gs
fbstp
loopne
scas
dec
mov
lahf
loop
jae
inc
das
(bad)
mov
fs
stc
aaa
push
(bad)
adc
mov
loope
dec
fdivr
or
jmp
pop
pop
dec
pushf
fdiv
pop
mov
jecxz
add
mov
nop
xlat
mov
xor
test
outs
mov
pop
shr
inc
daa
push
pop
mov
icebp
pop
ror
out
sbb
cmps
ds
push
push
loope
test
iret
and
punpcklwd
or
xchg
xchg
arpl
adc
inc
sahf
sub
push
xchg
prefetch
int
stos
jge
push
aaa
out
dec
dec
shl
not
mov
fadd
retf
add
in
fidiv
in
jp
adc
push
loop
loopne
and
adc
or
pop
xchg
push
retf
sbb
(bad)
ror
inc
adc
loop
or
dec
push
aad
xor
push
stos
cmp
push
xlat
mov
mov
cmp
adc
cmc
pop
mov
lahf
out
xor
push
fwait
push
push
mul
dec
pop
xlat
adc
push
jl
pop
dec
adc
rol
push
add
ja
movs
xlat
jg
dec
dec
xor
mov
dec
mov
sbb
sub
es
mov
add
mul
aad
sar
add
cmps
fcmovu
dec
push
popa
sbb
inc
mov
xor
movs
sub
adc
dec
call
daa
aas
pop
aam
arpl
popa
inc
int3
sub
sub
dec
jg
and
adc
dec
xchg
rcl
ret
push
(bad)
and
or
sahf
mov
cmp
imul
add
mov
jecxz
retf
pop
aas
stos
iret
inc
(bad)
sbb
sbb
outs
cwde
in
cmp
mov
mov
cld
enter
test
js
jmp
cmp
icebp
sbb
lahf
xchg
dec
ss
sar
push
(bad)
and
xor
scas
in
push
cmp
and
push
clc
mov
pop
mov
sbb
loop
and
into
jle
les
push
cmp
xlat
jb
fistp
call
sbb
rol
int3
loopne
out
sbb
es
fidivr
or
inc
sbb
mov
repnz
pop
dec
fld
and
int3
shl
test
ror
movs
(bad)
xlat
mov
out
adc
mov
add
cmp
scas
rcr
fld
xlat
cli
and
shl
jmp
(bad)
iret
inc
mov
push
add
sar
and
fwait
shl
ss
or
imul
cmp
pushf
push
pop
jge
in
jg
xchg
(bad)
adc
shr
push
inc
mov
adc
jae
pop
push
xor
and
movs
inc
pushf
int3
nop
imul
xchg
mov
pop
sbb
sbb
mov
add
pop
scas
fsub
sbb
je
lahf
rol
icebp
int3
(bad)
in
add
or
in
outs
push
loopne
fsubrp
inc
jmp
mov
lahf
mov
push
scas
pop
loop
mov
mov
lods
jmp
xchg
aas
daa
in
pop
cmps
inc
xchg
and
push
pop
retf
and
sbb
cmp
rcl
push
loop
into
push
jle
inc
cmp
jo
sbb
les
xor
jl
xlat
dec
dec
dec
loop
inc
scas
pop
aaa
mov
jbe
sub
and
mov
imul
add
ds
xlat
mov
xchg
jmp
sbb
or
add
push
ror
cmp
xor
fwait
cmp
push
out
mov
mov
cmp
jecxz
pop
shl
push
sbb
(bad)
ins
xor
out
leave
je
popf
inc
aad
mov
mov
dec
cmp
out
stos
or
push
adc
(bad)
out
in
arpl
push
push
ret
xor
pop
je
js
mov
xchg
(bad)
jbe
xchg
je
jmp
lock
add
in
scas
call
and
pop
std
nop
sbb
lock
(bad)
pusha
jnp
jmp
mov
mov
sub
cdq
xrelease
cmp
mov
mov
fidiv
lock
repz
push
clc
mov
jp
movs
or
pop
xlat
loope
aas
mov
and
jmp
imul
jb
xchg
sub
xchg
push
cmp
cwde
sbb
ins
push
and
outs
sahf
inc
xlat
mov
vmovdqu
and
pop
call
pushf
outs
push
lea
(bad)
std
inc
cmp
add
add
adc
mov
xchg
stc
and
push
mul
imul
imul
daa
sub
ja
xchg
sbb
into
cdq
and
xlat
adc
outs
mov
test
enter
popa
sbb
or
leave
in
mov
xor
mov
pusha
dec
(bad)
mov
jae
fisttp
or
outs
pop
int
popa
das
jecxz
jno
push
xchg
(bad)
mov
psrld
mov
aas
(bad)
jo
xor
or
xchg
cmps
mov
lahf
fnsave
cmp
jb
jb
fcmovb
out
or
mov
ret
pop
xlat
xor
ficomp
mov
jnp
loopne
push
mov
pop
pop
clc
fimul
je
inc
repnz
mov
push
lods
or
xor
sub
stos
out
aas
jp
jmp
int
movs
fdiv
and
out
cli
jmp
shl
fild
dec
or
jne
xchg
push
or
jp
rcl
mov
push
ror
fucomp
fcom
mov
arpl
fcmovbe
loop
into
pop
lds
push
mov
pop
mov
and
jmp
retf
imul
xchg
cmp
shl
test
scas
cmp
popf
jmp
mov
xchg
icebp
jmp
xchg
xchg
dec
push
lea
shr
xchg
xchg
push
or
sbb
scas
cli
dec
icebp
mov
adc
(bad)
aad
inc
movs
sbb
(bad)
js
mov
xlat
ins
jns
sbb
mov
stos
jne
sub
loopne
out
push
out
sbb
popa
mov
mov
jle
dec
xor
dec
mov
test
(bad)
and
lock
clc
xor
sbb
cld
ret
retf
xchg
mov
jge
mov
repnz
add
pop
cmp
mov
in
ror
imul
data16
jle
sbb
push
cmp
rcr
(bad)
xchg
xor
not
outs
mov
inc
push
nop
jnp
iret
push
xchg
push
adc
in
call
jnp
scas
cmp
sbb
jbe
jge
mov
mov
mov
jns
mov
imul
cdq
popa
cmc
movs
out
or
rcr
lea
cmps
or
push
icebp
cli
mov
stos
and
dec
mov
push
push
mov
aam
(bad)
dec
pop
pop
retf
xor
jo
icebp
cmp
sar
cdq
daa
ins
mov
jnp
jmp
inc
shr
inc
sub
into
fwait
mov
and
mov
in
(bad)
pop
stc
scas
mov
lock
push
test
ds
mov
jge
call
rcl
or
dec
pushf
add
mov
dec
out
ss
sbb
add
jge
mov
jge
push
pop
xor
mov
imul
popf
pop
sbb
mov
cmp
xchg
fst
jmp
(bad)
fxch
mov
xchg
pop
mov
test
dec
out
or
loop
imul
das
outs
push
adc
inc
shl
pop
adc
mov
inc
fwait
push
inc
sub
dec
mov
dec
cmp
push
jmp
inc
hlt
arpl
mov
pop
cmp
mov
add
adc
pusha
add
adc
push
cmps
inc
jle
(bad)
cmp
out
xchg
xchg
ss
js
add
retf
jo
mov
mov
mov
jo
jno
cmp
fwait
nop
dec
mov
nop
adc
sbb
dec
dec
sub
adc
ins
dec
dec
rol
adc
fistp
cmp
and
imul
inc
es
adc
or
jge
mov
add
inc
gs
jo
cmp
jbe
not
int3
adc
in
je
es
dec
inc
inc
pop
jno
test
pop
(bad)
std
aad
mov
and
mov
(bad)
push
push
adc
or
cmp
push
add
repz
retf
dec
jmp
data16
loop
lock
out
loope
pop
leave
xlat
cmp
jnp
inc
outs
xchg
mov
sar
imul
cmp
jbe
inc
loope
fmul
cmp
loope
loope
out
and
or
mov
pop
jle
adc
push
xchg
in
lea
xor
outs
inc
lahf
pop
xlat
cmps
sbb
adc
outs
push
clc
in
test
cs
lods
in
inc
fst
call
push
xor
popa
leave
lock
daa
in
out
daa
leave
fidiv
push
into
aas
lods
call
mov
shl
das
adc
mov
pop
push
sub
cmps
sub
mov
mov
outs
push
dec
pop
retf
pop
and
push
inc
les
or
mov
pop
pushf
pop
xchg
adc
mov
cmp
cmp
ret
jp
test
push
lods
xor
out
ins
jae
or
jno
pop
leave
(bad)
mov
data16
repz
pop
mov
pop
mov
inc
gs
dec
enter
push
add
(bad)
out
in
(bad)
lods
mov
outs
and
mov
push
(bad)
fsub
popf
outs
or
mov
push
xlat
lock
lahf
lahf
outs
shl
cli
mov
(bad)
fsubr
outs
and
div
test
mov
jmp
(bad)
fs
lea
dec
lods
int
repnz
push
jecxz
popa
cmps
hlt
xlat
cli
in
enter
clc
data16
xchg
mov
jne
and
mov
(bad)
lods
adc
loopne
mov
and
aad
cmp
pushf
ins
or
outs
and
(bad)
fsubr
popf
outs
cmps
cli
jb
movs
pusha
stos
cli
mov
xchg
mul
(bad)
(bad)
xlat
cli
mov
inc
sar
and
js
adc
test
sar
mov
cmp
add
sbb
sbb
cmp
mov
stc
pop
psubw
mov
sbb
fwait
dec
mov
or
cli
js
sub
cmp
add
mov
pop
mov
loopne
mov
out
and
les
cmp
dec
sub
push
cmc
pushf
stc
jo
bnd
cli
das
aas
mov
ficom
data16
adc
adc
mov
push
adc
cmps
xchg
pop
xor
stos
std
nop
in
cmp
mov
arpl
aam
xchg
into
cmp
test
hlt
loopne
outs
mov
(bad)
mov
adc
sub
add
fs
cmp
pop
cmp
cmp
mov
xchg
gs
in
inc
jbe
adc
inc
in
mov
add
cmp
(bad)
out
pop
and
sbb
jnp
loop
xchg
sar
cld
dec
xor
inc
or
sbb
push
sub
sub
mov
ffreep
push
popa
test
into
mov
(bad)
and
xor
mov
stos
or
aam
and
cmc
xchg
adc
jmp
rol
setb
sub
add
fcomp
and
mov
icebp
les
loopne
js
lock
shl
mov
lods
mov
lea
cmp
jg
idiv
adc
test
nop
sar
repz
jnp
sti
sahf
cmc
jo
stos
or
xor
xchg
(bad)
rol
adc
push
adc
pop
mov
popf
mov
(bad)
fimul
adc
jmp
out
and
jp
mov
and
out
sub
add
add
sbb
ds
cs
pop
inc
nop
xchg
aam
xchg
cmp
sbb
push
push
loop
jae
mov
stc
dec
sahf
pop
test
out
add
loopne
cwde
xchg
pop
dec
push
pop
mov
frstor
add
mov
std
inc
popf
ins
pop
inc
mov
sbb
dec
xor
push
mov
ins
inc
xor
out
pop
xchg
adc
and
inc
adc
mov
mov
out
loope
adc
jecxz
imul
or
int
out
inc
mov
std
xor
sub
(bad)
stc
cmc
xor
in
in
sbb
mov
push
jns
cmps
(bad)
lahf
cbw
pop
xor
mov
movs
add
(bad)
push
mov
ror
mov
adc
and
(bad)
mov
out
adc
dec
xchg
add
shl
fstp
shr
jmp
push
sub
fdivr
push
mov
imul
fnstsw
ja
mov
or
pusha
into
sub
ins
dec
xor
xchg
fsubr
imul
sbb
fs
loop
shl
and
dec
pop
out
xchg
mov
xchg
ficomp
int
fild
sub
enter
aam
in
cdq
inc
sbb
call
adc
or
push
shl
bound
mov
mov
push
in
lds
in
add
repz
loop
dec
pop
or
mov
mov
adc
sysenter
mov
int
cdq
and
sub
and
add
sub
push
mov
sti
lock
mov
sahf
mov
das
and
cmp
sbb
test
stos
jge
xor
add
add
add
adc
mov
clc
inc
loopne
pop
sbb
(bad)
cmp
mov
cmc
push
push
enter
es
lds
sti
out
xchg
and
into
xchg
mov
jp
add
xchg
enter
lods
mov
push
pop
sahf
or
fwait
xchg
jecxz
psllq
dec
or
arpl
test
(bad)
das
scas
xor
fwait
ror
pop
xchg
inc
aaa
pop
pop
push
inc
call
pop
jle
gs
hlt
mov
(bad)
test
cld
nop
mov
push
std
pop
stos
imul
ss
(bad)
scas
test
sbb
sbb
std
mov
push
xchg
fs
leave
mov
and
sti
mov
jb
jne
jmp
pop
lea
xor
xchg
mov
mov
sbb
mov
outs
jl
dec
pop
dec
in
int
ror
jp
aam
xor
jnp
dec
movs
aas
xchg
outs
mov
sbb
mov
mov
and
popa
ror
cmps
sub
mov
stos
xchg
dec
push
inc
and
arpl
pop
test
sbb
(bad)
test
fnstenv
adc
mov
ins
stos
jb
adc
adc
pop
pop
test
enter
ror
adc
fistp
jns
cli
or
repnz
pusha
inc
icebp
ins
xor
xor
xor
or
mov
xchg
leave
(bad)
jmp
cmp
mov
pop
push
add
mov
push
cdq
push
retf
xchg
fwait
push
sti
dec
xor
cmp
mov
adc
mul
mov
sub
into
xchg
enter
retf
das
fiadd
(bad)
dec
(bad)
xor
inc
fstp
popf
inc
adc
sub
jle
sbb
inc
cmp
int3
push
push
mov
les
and
xlat
aam
mov
rcl
mov
(bad)
(bad)
movs
rcl
mov
test
and
(bad)
mov
mov
(bad)
test
dec
sub
clc
bound
mov
mov
and
pop
sub
sahf
(bad)
mov
xchg
rcl
add
movs
loop
xor
int
cmp
jge
std
lods
pop
ins
xchg
pop
nop
xor
sub
xchg
inc
add
inc
xor
push
cmc
xchg
(bad)
cmp
prefetch
or
ret
(bad)
icebp
js
retf
cmp
xchg
aad
push
inc
jnp
aam
aam
(bad)
lods
and
dec
push
mov
inc
jb
mov
adc
mov
push
mov
and
mov
ja
mov
adc
mov
stc
nop
jne
xchg
aad
lds
rcl
sti
aad
mov
cld
test
fistp
jmp
lods
shl
stos
pushf
dec
stos
pop
movs
ficomp
jge
int
scas
pop
enter
mov
js
nop
shl
cld
jecxz
in
fincstp
mov
or
mov
outs
pop
add
mov
neg
sub
fidiv
(bad)
aaa
sub
or
sub
mov
je
repnz
call
push
cmps
jl
cwde
int
xchg
loopne
add
aas
mov
xchg
rcl
inc
ins
cmc
dec
fwait
jb
(bad)
xlat
jae
cmps
mov
and
dec
lods
add
cwde
fiadd
inc
mov
jae
cmp
ret
mov
ja
pop
sub
(bad)
mov
mov
push
jl
addr16
cld
or
mov
pop
mov
cwde
call
ret
pushf
ja
push
leave
and
add
cmp
add
cmps
or
jmp
xchg
aas
cmp
fdivr
jb
daa
xchg
pushf
loopne
mov
cmp
aam
hlt
pop
bound
data16
pop
into
in
push
lods
pop
das
scas
lock
mov
push
movs
dec
(bad)
sbb
or
add
push
(bad)
data16
inc
test
and
fbld
cmp
bnd
mov
pushf
mov
push
xchg
sub
push
dec
stc
in
pop
sub
idiv
mov
dec
(bad)
xchg
in
mov
mov
rcr
mov
movs
jmp
jge
xchg
lds
ss
and
fwait
jge
stc
icebp
jp
sub
sbb
(bad)
rcl
jg
jp
push
inc
adc
fild
out
fsubr
call
pop
pusha
mov
rol
movs
fistp
pop
ds
lds
pop
imul
cmps
cs
sub
(bad)
aam
retf
out
loope
fisttp
popf
test
leave
sub
pop
rcr
leave
xlat
xlat
stos
or
xor
test
clc
aas
movntps
dec
push
cmp
jmp
call
dec
adc
xchg
fs
mov
out
fisubr
out
pop
imul
div
add
imul
jnp
imul
shl
xchg
stos
mov
aad
sti
xchg
mov
outs
cmp
mov
pop
loopne
rol
push
mov
icebp
mov
lods
fisttp
out
add
aaa
push
ret
push
ja
fucom
fldcw
push
ds
push
ja
ins
inc
pushf
mov
or
sbb
dec
mov
out
test
out
out
mov
(bad)
ins
movs
icebp
xchg
fistp
js
fnstsw
les
loop
xchg
xor
cs
pushf
aam
sbb
loop
xchg
cmp
(bad)
lahf
retf
popf
and
cwde
hlt
jl
in
fcom
or
push
sbb
xchg
pop
jne
xor
and
push
mov
mov
in
or
(bad)
jno
adc
loopne
pop
gs
iret
mov
cmps
in
shl
loop
fcmovnb
std
mov
mov
ja
mov
lods
inc
or
ins
enter
xchg
outs
xor
rcr
jne
push
out
mov
jle
retf
bound
loop
(bad)
test
sub
(bad)
dec
or
xchg
jmp
loope
xor
movs
(bad)
and
(bad)
pop
cmps
inc
mov
cdq
loop
mov
inc
and
mov
scas
cmps
loope
xor
jo
(bad)
lock
das
mov
pushf
push
popf
inc
xchg
hlt
push
jb
sub
ss
into
mov
lods
mov
mov
xchg
mov
fcmovu
cli
mov
das
xchg
pop
(bad)
lahf
out
inc
xor
pop
mov
xor
sbb
fwait
dec
pop
lods
daa
mov
popf
je
fcom
mov
into
sub
scas
pop
dec
pop
jbe
pop
(bad)
push
sti
sbb
adc
cmps
gs
hlt
int3
das
jbe
(bad)
cld
push
push
mov
and
xchg
sbb
add
popa
adc
int3
lock
(bad)
mov
and
adc
mov
mov
repnz
inc
and
int3
iret
or
rol
add
mov
cmp
xor
mov
lods
test
aad
movs
and
mov
les
cwde
xchg
mov
sbb
rcl
fisubr
cmp
inc
lahf
pop
cmc
lea
dec
jmp
scas
xor
mov
and
clc
clc
addr16
sbb
lods
test
(bad)
mov
sub
adc
gs
in
pop
aam
or
repnz
scas
les
jae
mov
xchg
dec
into
aad
movs
out
cmps
mov
mov
push
add
fbstp
push
xchg
or
sti
push
inc
aam
mov
push
jl
pusha
push
lds
mov
jae
jmp
cdq
jle
ins
(bad)
jmp
push
pop
sbb
call
movs
pop
mov
mov
movs
in
jb
xor
int
mov
and
adc
rcr
cmps
inc
int
cmps
test
mov
push
aad
add
cmp
pop
mov
fldenv
lds
sub
arpl
xchg
dec
jns
mov
mov
pop
inc
pop
lds
stos
clc
pop
outs
cmc
cmc
sbb
fdivr
sub
mov
out
mov
jg
xlat
lds
push
movs
add
scas
jp
push
ror
js
ret
jmp
xchg
sar
cmp
xor
movs
fs
data16
int
jl
push
stc
jae
in
cwde
xchg
mov
mov
sbb
retf
int3
in
push
xor
pop
inc
or
lods
rcl
mov
nop
inc
and
(bad)
or
inc
loopne
(bad)
push
outs
push
jns
or
inc
xor
or
movs
sub
jle
jecxz
cdq
xchg
cmp
and
sub
inc
push
mov
loop
(bad)
dec
dec
inc
das
pop
aam
cmp
mov
pop
(bad)
rcr
xchg
and
clc
shl
clc
and
mov
inc
adc
jl
inc
fst
popa
outs
jmp
or
ins
mov
ret
stc
xchg
inc
inc
sti
mov
and
and
imul
int3
dec
hlt
and
jg
jo
mov
xchg
(bad)
neg
repnz
leave
cmps
sub
test
mov
push
or
mov
mov
(bad)
daa
loopne
je
or
test
and
push
push
int
adc
mov
leave
inc
in
lahf
loopne
test
dec
push
shr
jmp
adc
or
data16
add
pop
shr
and
ret
jns
and
push
cld
inc
push
loop
pop
jne
fmul
cs
jmp
jecxz
test
pop
push
popa
dec
es
call
aad
xchg
pop
pop
pop
call
adc
jle
stc
rcl
jo
aad
(bad)
scas
std
leave
mov
or
jmp
rcr
push
div
sub
loope
inc
add
popf
mov
add
pop
xchg
test
push
mov
cmp
sbb
(bad)
in
cli
outs
cmp
cmps
(bad)
mov
ss
inc
cmps
push
(bad)
push
movs
in
xchg
inc
fadd
mov
or
fst
out
shl
movs
in
fisub
enter
int3
xlat
imul
aam
repnz
fucomi
(bad)
aam
jmp
retf
into
mov
call
in
push
std
call
sti
mov
nop
xchg
stos
std
clc
sbb
nop
mov
test
aam
jmp
repz
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
fst
mov
and
int3
sar
mov
xchg
add
shl
movs
(bad)
xlat
(bad)
mov
(bad)
xlat
out
rol
leave
cmp
std
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
lods
(bad)
xlat
repnz
fadd
movs
hlt
stos
cli
in
fcomi
cmc
les
cld
out
xlat
pop
adc
dec
out
pop
and
movs
(bad)
fcomi
sbb
rcl
jo
mov
aam
cmp
inc
cli
frstor
pop
fisub
and
push
outs
movs
(bad)
push
lock
pop
pushf
lea
cwde
sub
neg
out
into
pusha
pop
jno
sub
pop
das
and
mov
ret
sub
test
push
vpackssdw
mov
sar
lods
movs
adc
cmp
in
fst
loop
inc
rcr
(bad)
or
lea
cli
lds
hlt
cmps
int3
fst
pop
inc
dec
and
loop
retf
es
popa
xor
jecxz
push
call
xor
hlt
dec
(bad)
imul
jp
sbb
fistp
vfrczps
arpl
jb
ret
adc
adc
not
arpl
dec
mov
add
outs
jnp
call
test
and
das
mov
pop
jg
mov
(bad)
fbstp
ja
std
mov
cwde
adc
add
fmul
xchg
dec
lds
jno
dec
jp
mov
push
dec
sub
jge
sub
inc
out
aas
ins
lea
or
dec
jo
hlt
cmp
div
or
(bad)
jl
nop
and
jge
sub
scas
push
push
cmp
je
and
(bad)
dec
sti
jne
stc
les
retf
not
lds
fcom
in
xor
sub
aaa
jb
ja
jg
mov
pop
out
cmp
int3
mov
sahf
or
mov
std
repnz
or
or
dec
mov
shr
inc
(bad)
out
push
cs
ins
push
or
in
inc
ds
arpl
jecxz
rcr
push
mov
fldenv
mov
push
push
outs
cdq
and
mov
inc
cdq
jns
stos
mov
arpl
adc
or
retf
aam
int
inc
xor
and
inc
dec
push
pop
mov
(bad)
cmp
mov
das
jbe
loopne
fistp
fcom
adc
cdq
ja
jne
push
xor
sbb
es
mov
fild
xor
fsub
or
jns
push
jo
fs
add
push
push
add
mov
in
int3
cmps
fimul
outs
mov
mov
xchg
leave
push
pop
test
jge
call
xchg
bound
test
push
lods
(bad)
xlat
mul
enter
(bad)
aam
repnz
mov
loope
xlat
cmp
inc
add
and
xlat
cli
scas
int3
xlat
mov
push
jmp
and
dec
frstor
(bad)
cmp
push
sahf
mov
push
jb
mov
mov
add
fs
int
dec
in
jecxz
jae
mov
mov
cmp
jno
dec
or
dec
fcmovnu
sub
mov
nop
mov
sbb
adc
or
mov
mov
sub
or
xor
fcom
and
push
sub
sbb
fst
bnd
mov
aaa
not
call
aaa
adc
sahf
scas
add
push
lds
mov
xchg
inc
pop
lods
inc
mov
cmps
arpl
mov
lods
es
dec
add
mov
(bad)
(bad)
bound
add
push
add
cwde
dec
stc
scas
retf
scas
pop
clc
mov
jo
xor
cli
and
xor
dec
inc
mov
popf
ud2
sbb
mov
mov
and
out
pushf
or
push
out
fsubr
mov
lea
ret
bound
jbe
mov
sbb
or
sub
(bad)
cmp
imul
movs
fmul
and
adc
imul
jecxz
push
pop
std
lea
lods
xor
cmp
aam
cli
retf
cmp
mov
xchg
lds
popf
shr
dec
cmps
mov
jle
add
jl
push
push
push
dec
fcomp
jo
jecxz
loopne
cmp
inc
cwde
addr16
dec
outs
mov
stos
push
jbe
sub
fiadd
xor
cmp
xchg
cmc
daa
mov
sub
xlat
cmova
fisttp
cmp
or
and
mov
push
adc
popa
pop
movs
out
cli
fnstenv
mov
ss
pop
movs
push
adc
repz
test
sub
mov
and
xor
jle
xchg
hlt
int
int3
fs
popf
mov
and
cmps
adc
dec
pop
sbb
or
call
fst
sti
or
call
daa
in
std
push
mov
mov
test
clc
pop
push
ja
enter
push
mov
lods
lods
adc
lods
pop
test
fstp
push
sub
mov
push
cmp
mov
lods
jp
outs
inc
paddsb
mov
retf
adc
push
or
scas
pusha
pop
push
bound
into
xor
stos
push
sub
out
stos
in
popa
add
cmp
lea
call
inc
sub
inc
inc
sub
push
xchg
ja
or
repz
sbb
push
add
jp
stos
fst
test
mov
push
mov
lds
fst
sbb
fdiv
jbe
pop
inc
xor
pop
jecxz
out
push
mov
mov
aad
mov
push
jmp
repz
sar
outs
inc
ds
add
sbb
repnz
jb
jmp
fbld
fs
jmp
mov
es
dec
clc
sahf
fsubr
(bad)
adc
lds
add
cmp
dec
iret
(bad)
clc
lds
lock
ds
in
pop
dec
xchg
call
pop
or
pop
jns
add
scas
mov
rcl
xlat
or
fs
leave
mov
sbb
mov
cmp
in
mov
enter
rcr
loop
(bad)
sar
movs
(bad)
xlat
cli
mov
aam
cmp
sbb
jg
int3
adc
fcmovb
xchg
jns
scas
nop
fcompp
enter
rcl
pop
mov
lahf
(bad)
aas
mov
xlat
jno
movs
pushf
dec
or
cmp
push
shl
dec
or
push
dec
in
inc
add
xor
push
xchg
call
jns
adc
repnz
push
add
fnstenv
movs
rol
ins
jbe
loop
enter
mov
and
aaa
add
pop
adc
movs
add
iret
add
mov
call
push
mov
sub
in
sub
cli
jno
ret
test
in
mov
imul
cmp
lods
stos
outs
fucompp
retf
lea
xor
bound
xor
mov
pop
xor
int3
or
pop
mov
neg
push
cmp
lea
pop
imul
cwde
fwait
js
jns
arpl
mov
jle
push
dec
aas
pop
mov
adc
fsub
inc
or
or
push
in
add
outs
dec
push
sub
add
push
pushf
mov
mov
or
xchg
(bad)
in
les
mov
out
mov
dec
add
std
jg
dec
outs
lock
add
(bad)
fld
enter
inc
add
mov
popa
stos
in
xor
ret
pop
pop
jp
push
fimul
loope
imul
stos
scas
test
outs
jg
les
jg
stos
rcl
shl
inc
mov
lods
sub
xor
loop
outs
push
movs
cmps
lods
dec
jno
xlat
out
add
fwait
cmp
dec
mov
push
or
mov
mov
dec
push
inc
or
push
mov
mov
cmc
leave
loope
loop
or
scas
mov
icebp
fs
bound
adc
(bad)
fbstp
cmp
sbb
or
lock
data16
mov
call
xchg
pop
pop
sub
or
xchg
lea
push
and
adc
popf
cdq
shl
fucom
movs
setns
sti
mov
cmc
mov
xchg
dec
jmp
sbb
(bad)
enter
mov
mov
and
mov
sbb
mov
jmp
rcl
adc
test
(bad)
lea
fcmove
int3
idiv
fbstp
(bad)
fsubr
jmp
mov
jmp
xor
adc
lods
retf
js
int
fisubr
push
and
cli
sti
xchg
push
cmp
cmp
push
clc
inc
xchg
push
loop
outs
or
cmc
lods
push
sbb
dec
dec
out
add
fist
movs
(bad)
push
mov
mov
shl
movs
aam
(bad)
mov
int3
xlat
(bad)
jmp
dec
inc
mov
mov
push
push
ds
push
ins
cmc
ret
add
mov
rcl
out
stos
sub
inc
push
sbb
dec
stos
or
mov
jecxz
jmp
ret
ins
mov
xlat
sub
jb
jno
sbb
div
aaa
lds
mov
loop
and
mov
mov
inc
xchg
inc
loop
adc
dec
imul
popf
mov
mov
call
into
retw
rcl
pop
ins
sbb
sub
js
jecxz
arpl
or
popa
aaa
addr16
and
mov
sub
mov
and
cmps
loop
ja
add
adc
or
repnz
aaa
dec
sub
rol
sbb
xchg
jnp
rol
cdq
inc
cmp
stos
add
xor
movs
xchg
loope
mov
inc
ins
add
jmp
mov
shl
das
xor
neg
inc
sbb
mov
adc
pop
or
sbb
push
mov
shr
and
xor
frstor
hlt
fs
ins
fwait
in
lods
(bad)
mov
add
push
sti
jp
es
mov
stc
pop
popf
sub
push
pop
xchg
mov
cdq
imul
or
cmp
bound
fst
jecxz
adc
aam
es
in
fdiv
dec
xchg
sub
sbb
and
js
lods
sbb
mov
sub
mov
inc
cmp
inc
aad
je
dec
scas
aaa
test
imul
dec
shl
test
mov
into
pop
mov
outs
and
add
or
mov
arpl
cmp
push
pop
enter
bsr
out
ins
mov
add
ins
(bad)
into
dec
cmc
xchg
repz
pop
dec
int
pop
jno
and
repz
add
int
mov
mov
push
test
sbb
pop
adc
lods
push
repz
popf
xchg
pop
mov
or
add
dec
jno
add
shl
test
dec
sub
loop
je
sbb
shr
cwde
inc
cmps
xchg
dec
lods
or
dec
in
int
push
es
add
mov
adc
add
inc
cmp
xor
loope
cmp
std
fnsave
jno
dec
or
and
(bad)
sbb
in
lods
fisttp
lock
inc
sbb
je
and
pop
outs
lahf
and
and
cwde
jle
cmp
ds
add
retf
mov
adc
je
cmp
inc
cmp
js
lods
(bad)
or
in
push
add
push
loope
mov
lahf
pop
cmp
push
push
mov
add
pop
inc
mov
xchg
(bad)
mov
mov
xchg
push
xchg
std
pop
jecxz
lock
cdq
ss
mov
shl
or
and
inc
or
mov
adc
bound
stos
retf
dec
stos
sbb
out
imul
push
and
xchg
retf
jbe
das
out
enter
dec
inc
repz
and
xor
out
data16
fwait
cmps
fistp
push
arpl
adc
sbb
sbb
ror
ret
popa
fisttp
fldcw
jns
mov
adc
add
dec
xchg
pop
test
sub
mov
(bad)
icebp
sbb
leave
aad
mov
pop
fidivr
fwait
(bad)
movs
cwde
sub
mov
movs
sub
adc
push
xor
cmps
dec
dec
loope
xchg
dec
adc
fstp
push
rol
xchg
adc
push
jbe
fdiv
or
push
mov
pop
test
into
mov
test
popf
shl
ret
add
popf
mov
and
ins
inc
in
test
ror
bound
inc
push
sub
cld
xchg
int
ins
movs
int
mov
lods
xchg
mov
rol
jne
imul
pop
mov
movs
(bad)
stos
std
das
jbe
pop
push
sub
ins
xchg
and
fs
ins
rol
loope
jecxz
inc
gs
popa
cdq
sbb
outs
push
xchg
(bad)
jmp
outs
pop
sti
xchg
pop
pusha
(bad)
(bad)
jecxz
out
push
test
mov
mov
cwde
imul
cmp
push
sar
mov
arpl
jbe
cmp
add
and
push
icebp
adc
int3
jl
or
cmp
mov
imul
or
mov
ret
movs
add
(bad)
je
jae
and
pop
jecxz
adc
push
mov
bnd
or
in
dec
push
rol
cwde
pshufw
lods
(bad)
xlat
repnz
shl
test
(bad)
idiv
mov
xlat
repnz
(bad)
fucomip
loope
xchg
jbe
rcr
and
xchg
mov
repnz
jmp
dec
inc
mov
loopne
sbb
add
sar
lods
das
fbld
mov
das
mov
scas
mov
or
clc
adc
push
sbb
lods
popa
add
sub
stos
mov
(bad)
cmc
fisttp
jmp
sahf
test
jae
sub
xchg
imul
lock
stos
mov
rcl
(bad)
aam
push
push
(bad)
cmp
mov
lock
mov
in
xchg
xchg
rcr
add
enter
xchg
adc
(bad)
mov
mov
adc
mov
shl
dec
push
mov
popa
add
pop
dec
std
out
mov
fs
mov
add
mov
adc
mov
in
js
pop
xchg
outs
jns
adc
lahf
push
and
test
fdiv
inc
call
xor
jge
aas
test
add
loopne
(bad)
jno
inc
int3
dec
sbb
mov
in
push
call
sbb
xor
xor
pop
inc
scas
es
pop
inc
xor
jno
add
xor
mov
or
dec
or
aam
std
fcomp
test
cli
loopne
test
pop
mov
cmp
xchg
cmp
xor
xchg
and
cmp
push
ds
push
das
sbb
mov
cmp
and
ins
mov
clc
mov
sub
xchg
stc
repnz
stc
jge
loope
pop
dec
fcmovnb
push
sub
or
adc
sbb
xchg
mov
mov
test
pushf
adc
std
xchg
fsubr
or
ret
inc
scas
xchg
movs
xchg
mov
in
aaa
mov
pop
repnz
xor
addr16
push
mov
rcr
lahf
cld
pop
or
cld
jecxz
mov
gs
lods
test
ret
or
xchg
inc
outs
icebp
mov
icebp
mov
jb
xchg
rcr
mov
jecxz
sbb
addr16
sbb
dec
das
adc
movs
adc
je
mov
mov
sbb
lahf
retf
fsub
repnz
inc
sbb
push
rcr
jle
(bad)
cli
not
cmps
fnstcw
adc
dec
adc
adc
jbe
adc
pop
scas
outs
call
cmp
jb
ss
out
clc
in
call
leave
push
mov
cwde
xchg
imul
mov
cmp
vpsadbw
aaa
adc
push
push
adc
push
add
imul
cmp
repnz
sub
dec
scas
adc
push
adc
adc
add
push
mov
ret
inc
jecxz
jmp
dec
cmp
sbb
mov
(bad)
call
rcr
xor
sti
cmp
(bad)
(bad)
xor
cmp
(bad)
mov
adc
xchg
pop
xchg
aam
stc
jbe
out
dec
push
inc
ds
cmp
xchg
xchg
cmp
(bad)
es
mov
mov
mov
(bad)
inc
jl
dec
cmps
and
popf
dec
clc
clc
adc
jne
sub
out
(bad)
dec
jecxz
out
push
fwait
push
jbe
sti
mov
or
pop
mov
push
sub
stos
out
push
aaa
ins
out
xchg
movs
xchg
jb
shl
lahf
sti
lds
fisttp
cmp
xor
hlt
test
in
push
(bad)
cmp
lahf
aas
mov
out
dec
test
xchg
dec
aam
mov
mov
fld
dec
xchg
mov
push
fnsetpm(287
and
les
sub
arpl
pop
cmps
in
fcom
cmp
dec
sbb
push
xchg
sbb
and
inc
mov
xchg
push
adc
arpl
push
retf
cmps
gs
adc
pushf
daa
ds
adc
dec
pop
dec
lods
inc
cli
outs
cdq
mov
push
jge
cmp
stos
leave
cmps
leave
out
aam
xor
jmp
dec
movs
dec
inc
cld
daa
xchg
sbb
sub
out
pop
inc
cmc
les
cli
and
hlt
jnp
sub
lods
pop
dec
mov
(bad)
and
add
dec
cmp
mov
inc
sbb
cmp
dec
add
dec
shl
sbb
stos
push
jg
ds
push
push
pop
outs
(bad)
xor
jae
movs
add
(bad)
mov
iret
pop
or
pop
ins
sbb
mov
retf
push
out
jnp
xchg
cs
rcr
hlt
mov
lahf
in
fst
arpl
(bad)
xor
jnp
fstp
clc
(bad)
jg
xchg
adc
imul
jl
sub
inc
xor
jp
fild
mov
xchg
jp
push
jmp
and
call
sbb
jmp
rcl
sbb
imul
out
jmp
adc
pop
pop
inc
or
sbb
xchg
xor
test
pusha
add
sub
adc
jmp
push
gs
push
outs
sub
es
jae
aad
dec
je
popa
push
(bad)
xchg
stc
ret
sub
in
call
jecxz
xor
inc
out
shrd
adc
sub
aam
pop
adc
inc
sub
add
sbb
mov
pop
call
mov
cmp
cmp
xchg
xchg
adc
xchg
or
mov
out
xchg
and
jns
scas
add
xor
cmove
cmp
shl
xchg
push
or
neg
gs
xor
retf
mov
sub
mov
sbb
adc
out
mov
adc
push
popf
xor
test
xchg
inc
or
js
ds
and
xchg
out
test
dec
popa
mov
aaa
push
cmp
inc
pop
xchg
sub
mov
fst
jmp
dec
popa
mov
gs
dec
push
sbb
jbe
mov
fstp
arpl
sahf
bound
sbb
fstp
jecxz
test
fwait
xchg
bound
in
sbb
jecxz
xchg
mov
retf
je
inc
cmc
in
pop
mov
xchg
loop
jl
cld
lods
test
xchg
pushf
mov
fucomp
pushf
adc
cmp
les
sar
or
lock
outs
cmp
lahf
hlt
and
adc
and
jno
push
sbb
or
scas
adc
push
ins
or
mov
or
icebp
jg
clc
mov
fmul
mov
sbb
fild
dec
push
adc
dec
fdivr
pop
sub
or
inc
adc
test
icebp
mov
arpl
fcomp
push
add
mov
shl
fwait
(bad)
sar
in
sbb
retf
scas
cmp
loop
cli
(bad)
(bad)
outs
(bad)
rol
cmp
cmp
fstp
sub
pop
ja
xchg
ja
pop
aaa
sub
neg
scas
out
dec
push
in
cmp
cld
push
lock
cmp
test
cmp
sub
ss
imul
inc
sahf
popa
mov
and
js
lods
les
sahf
add
addr16
out
jecxz
out
frstor
mov
mov
jmp
pop
inc
mov
int3
mov
lods
xchg
pop
(bad)
(bad)
sub
bound
iret
(bad)
mov
jae
mov
stos
loope
jge
fbstp
lss
push
arpl
stos
mov
aam
shl
sub
pop
fstp
cmp
loope
cs
popf
xchg
cmp
repnz
and
icebp
cmp
push
call
ret
cmp
aam
gs
mov
lock
mov
pop
popa
inc
xor
xchg
mov
sbb
cmp
stos
xchg
cld
fwait
add
out
int3
xor
dec
push
mov
push
jno
dec
std
mov
inc
pop
(bad)
jp
popa
fbstp
push
jns
arpl
adc
mov
test
jle
rol
test
int
mov
mov
fst
stos
scas
mov
and
mov
mov
mov
rcr
mov
ret
xchg
dec
xchg
add
fld
outs
xor
test
ins
add
xor
(bad)
loope
and
dec
cmp
push
repz
arpl
imul
lods
nop
(bad)
fisubr
push
test
push
and
sub
stc
fistp
(bad)
stc
pop
cs
mov
jae
jle
mov
icebp
or
pop
(bad)
push
loop
mov
dec
icebp
xchg
in
(bad)
cdq
cmc
mov
jge
mov
gs
sahf
sbb
adc
push
es
(bad)
xchg
neg
push
push
mov
gs
mov
lods
add
ret
ds
sbb
pop
adc
in
aas
mov
leave
pop
fs
sbb
push
inc
mov
xor
cdq
or
adc
jp
dec
sar
gs
push
inc
adc
jae
and
lock
(bad)
popa
aas
jno
mov
test
inc
lock
lods
loope
mov
out
lea
mov
out
std
test
retf
jno
add
ror
pushf
pop
(bad)
cmp
clc
mov
mul
mov
aad
loopne
mov
inc
inc
sbb
mov
shl
jnp
cmp
jecxz
aas
ret
jmp
cs
pop
loop
lods
and
nop
clc
je
cmps
and
sbb
loope
imul
mov
inc
dec
xor
push
jno
adc
mov
xor
fmul
pusha
mov
xor
inc
stos
pushf
mov
sbb
dec
adc
jo
jbe
rol
sbb
and
enter
sahf
mov
cli
mov
adc
sbb
loopne
nop
ficom
or
inc
dec
mov
rcr
pop
jne
cmp
imul
pop
mov
imul
into
and
mov
add
jmp
mov
mov
pop
cmp
adc
xor
xor
inc
mov
outs
(bad)
pusha
loope
mov
jne
jmp
push
pushf
outs
and
cdq
mov
or
mov
mov
icebp
or
and
and
mov
aad
arpl
popa
addr16
push
add
fstp
test
cmp
push
cmp
xor
and
lods
rcl
test
(bad)
(bad)
movs
(bad)
(bad)
movs
rcl
mov
add
mov
fiadd
xchg
fcompp
rcl
ja
push
mov
or
cli
mov
lds
lock
pop
fnstcw
retf
cmp
movs
iret
outs
push
ja
inc
xor
call
rcl
pusha
iret
out
push
jl
loope
inc
jmp
sub
mov
mov
mov
jno
ror
pop
dec
andnps
adc
pushf
pushf
lea
leave
xor
xchg
xlat
cmp
cwde
xchg
and
push
rcl
fst
push
ins
fstp
std
out
sbb
jg
sahf
out
ja
loope
mov
fcom
(bad)
inc
imul
xchg
or
sahf
jmp
cdq
cmp
and
push
inc
adc
data16
mov
loopne
push
clc
xchg
jno
xchg
sar
xchg
push
enter
fistp
inc
retf
mov
out
dec
mov
cdq
ins
inc
cwde
cmps
out
sbb
rcl
xlat
or
enter
icebp
test
cmps
out
imul
add
sub
mov
lahf
pop
pop
imul
push
test
aam
test
add
adc
pop
add
popf
lds
outs
pop
scas
push
mov
pop
pop
(bad)
mov
ror
mul
in
retf
pop
mov
cmps
fisttp
sahf
fnstcw
sbb
popa
cmp
or
or
in
jl
das
inc
loopne
test
adc
pop
in
pushf
call
cwde
(bad)
ds
shl
jo
sbb
pop
mov
(bad)
mov
inc
cmp
push
adc
pop
xchg
addr16
cmp
xchg
scas
loope
test
aad
int
xlat
call
dec
fcomp
xor
hlt
add
cld
cmp
inc
or
mov
retf
sbb
inc
push
out
push
cmp
mul
adc
sar
(bad)
mov
inc
and
(bad)
and
arpl
fadd
out
xor
mov
and
mov
rcl
(bad)
mov
lahf
loop
xchg
xchg
xor
loope
rcr
loop
ss
and
dec
add
or
xchg
cmp
scas
inc
push
cmps
mov
call
outs
cmc
int3
cmp
mov
pop
dec
or
cmps
pop
cdq
jg
out
mov
test
cmp
scas
push
inc
rol
add
int3
aad
mov
mov
enter
test
test
inc
outs
and
and
push
in
dec
cmp
xor
sti
mov
inc
push
jo
dec
enter
mov
fisub
fld
retf
jns
mov
aas
call
sub
(bad)
add
jp
int
(bad)
jmp
mov
xchg
add
inc
cld
out
inc
xor
test
inc
out
rol
xor
jp
(bad)
scas
pop
fild
stos
out
sub
test
pop
inc
mov
pop
or
xchg
jmp
jecxz
out
stos
lock
nop
bnd
fwait
sub
cwde
xchg
loop
adc
add
lods
push
loopne
mov
push
cmp
call
scas
and
sub
cmp
not
stc
or
add
jecxz
daa
stc
mov
iret
std
push
aas
test
test
cmp
fs
retf
and
jecxz
adc
sub
jge
scas
les
sbb
push
scas
pop
pop
or
push
mov
pop
(bad)
cmp
jecxz
std
fstp
scas
sub
test
(bad)
inc
mov
or
retf
cmp
outs
outs
pusha
enter
fwait
jmp
out
jbe
movs
outs
pop
xlat
(bad)
sub
ret
jno
aad
jmp
push
loopne
push
hlt
test
ja
outs
mov
push
retf
stos
cld
(bad)
ins
xchg
sub
pop
ss
repnz
clc
push
out
sbb
cmps
sahf
aam
xor
dec
ror
jnp
dec
movs
inc
lahf
add
mov
fcomp
cmps
fld
js
frstor
mov
mov
and
pop
xchg
ret
or
and
dec
pop
dec
repz
lods
mov
pop
add
sbb
sbb
shl
daa
outs
neg
cld
retf
shr
test
out
cmc
jg
int
(bad)
jnp
mov
call
dec
push
loop
push
mov
mov
out
mov
pop
or
and
fmul
call
mov
stos
enter
sbb
lock
push
pop
dec
jle
add
out
cmp
xchg
aam
push
mov
dec
xor
jbe
xlat
ror
retf
(bad)
xchg
rol
loopne
mov
scas
fs
fadd
ror
cmp
push
inc
pop
cmp
mov
lea
retf
daa
push
mov
(bad)
int3
hlt
fdiv
retf
jecxz
repz
sbb
push
ds
jge
int
in
(bad)
arpl
push
jo
add
cmp
pop
add
nop
jns
dec
jmp
xor
mov
mov
xor
inc
adc
sub
adc
pop
add
(bad)
in
pushf
loopne
retf
cmp
loopne
imul
js
xlat
and
call
push
xchg
daa
scas
push
lds
scas
xchg
shr
or
inc
adc
daa
mov
cli
cmp
adc
cmps
xor
push
stos
(bad)
cmp
cmp
pop
out
mov
retf
inc
dec
clc
adc
in
test
ud2
fdivr
dec
test
inc
rol
jle
sti
and
mov
pop
std
jnp
test
mov
out
and
jl
xor
das
cmp
cmps
xchg
mov
sub
pop
jge
sub
mov
movs
jge
mul
xchg
std
test
push
in
fstp
xlat
xor
push
cdq
fdiv
and
push
in
mov
push
mov
push
pop
icebp
ret
cs
add
je
jge
pop
mov
ficomp
jle
mov
pop
(bad)
fldenv
dec
in
pop
xchg
sbb
mov
jle
add
mov
das
xlat
icebp
ins
sbb
xor
xchg
popa
mov
push
inc
inc
movs
lahf
push
mov
aaa
push
std
xor
fisttp
fdiv
cmps
ret
adc
push
sti
mov
sahf
inc
add
sbb
pop
mov
pop
adc
mov
js
adc
push
retf
(bad)
dec
sub
push
xor
ret
(bad)
or
cmps
repz
jae
dec
cmps
fs
add
scas
ficom
cwde
in
mov
sbb
add
adc
xor
in
xchg
scas
das
pop
(bad)
mov
cmp
std
lods
enter
(bad)
sar
add
mov
fst
imul
jecxz
mov
ins
hlt
sbb
(bad)
and
(bad)
fsubr
test
push
and
xchg
outs
sbb
cli
repnz
xchg
adc
lods
out
jns
js
cmps
sahf
mov
ret
outs
mov
nop
jecxz
xchg
dec
les
lea
xchg
imul
jo
or
jb
fsubr
cmp
shl
pop
xor
sbb
mov
rcr
mov
(bad)
xlat
jp
rcl
and
cmp
pop
sar
scas
nop
fcompp
enter
test
xlat
cwde
mov
sbb
jns
stos
xchg
retf
push
mov
mov
pop
pop
xor
int3
cmps
es
push
cwde
push
or
sar
aam
test
(bad)
and
mov
xchg
sbb
stos
mov
in
dec
retf
pop
inc
or
stos
push
mov
mov
and
ds
xor
pop
jl
sbb
mov
mov
outs
add
aad
adc
sar
popa
in
mov
sub
loopne
ja
and
adc
outs
xor
pushf
and
lods
jl
xchg
adc
fldcw
cmp
xor
adc
push
cs
cmc
cmp
xchg
test
rcr
test
jecxz
ja
retf
ss
pusha
out
xor
addr16
pop
outs
rol
mov
fs
jne
adc
jbe
push
out
pop
xor
(bad)
in
add
(bad)
xchg
repnz
dec
push
or
retf
push
jbe
push
bound
jg
xor
cmp
xlat
(bad)
mov
mov
jmp
adc
mov
and
pop
cmp
popf
in
mov
int
pop
xchg
push
fcomp
push
pop
and
aad
mov
pop
mov
in
ja
add
in
in
arpl
or
popf
mov
pop
cld
jl
imul
aaa
sbb
pop
es
pushf
mov
loope
xchg
xor
mov
loop
fdiv
adc
xlat
push
mov
and
inc
int
jecxz
stc
jmp
mov
mov
aas
(bad)
retf
leave
push
dec
rol
jmp
jle
push
mov
add
das
mov
aas
loope
jae
bound
and
mov
ja
cmp
and
jle
call
jno
retf
or
mov
fsub
ins
dec
sub
ret
mov
fdivr
push
out
ins
xor
add
out
stos
clc
retf
ror
ret
test
xlat
xchg
movs
mov
push
lock
stos
das
sar
in
repnz
in
es
aas
pop
cmc
push
fstp
mov
int
xlat
clc
and
push
mul
test
ja
push
adc
jl
pop
loope
or
xor
bound
(bad)
pop
jne
mov
(bad)
sub
fwait
add
ror
dec
push
test
add
(bad)
div
test
rol
mov
adc
pusha
rcl
arpl
adc
bound
jp
cmp
mov
lea
xchg
cmps
inc
cmc
add
pop
enter
sub
fist
dec
in
mov
call
fild
ins
out
xor
xor
mov
adc
ins
pushf
mov
add
call
mov
pop
adc
fcomip
push
(bad)
jmp
xor
push
xor
scas
jmp
fucomi
sub
scas
and
ins
push
ret
dec
rcl
cmp
test
outs
mov
inc
leave
mov
(bad)
addr16
dec
outs
lods
pushf
nop
jns
cmp
xlat
push
pop
data16
das
inc
lahf
mov
sub
dec
mov
mov
bound
loopne
loop
cmp
cld
jmp
pop
fwait
dec
jle
je
pop
and
in
lds
xlat
outs
test
je
popa
pop
ja
movs
daa
jmp
or
out
add
loope
and
sahf
xor
jmp
cmp
mov
jae
out
sub
std
or
hlt
add
push
jno
es
daa
sbb
cmps
call
loope
mov
cwde
cmp
jno
mov
pop
ret
jnp
or
pop
jb
pop
pop
(bad)
mov
push
popf
adc
mov
jmp
mov
movs
xor
ja
jg
repnz
xchg
fs
out
or
add
aaa
add
ss
sbb
adc
cmp
mov
add
adc
test
cmp
mov
int3
inc
fild
and
cmps
retf
into
mov
sub
mov
push
xchg
popa
jns
cmps
cmp
fmulp
jl
xchg
daa
jb
and
adc
pop
cdq
mov
popa
mov
leave
jl
pop
mov
fnstcw
test
mov
cli
mov
mov
cld
inc
and
iret
and
pop
and
lock
test
add
bound
xchg
jae
js
pop
inc
ins
icebp
pop
mov
fcompp
scas
rol
movs
popf
movs
hlt
and
push
je
jne
pop
std
xchg
and
repnz
out
mov
and
xchg
out
cmc
dec
cmp
xor
or
add
jp
ds
jne
push
xchg
aaa
or
sbb
int3
mov
addr16
or
or
movs
jo
mov
(bad)
xchg
test
mov
in
pop
sahf
jmp
fimul
out
loope
test
inc
bound
std
push
ins
jmp
sbb
mov
add
shl
pop
cmp
mov
(bad)
out
and
inc
mov
lock
sbb
mov
fcom
popa
mov
xchg
sbb
pusha
and
lock
add
(bad)
stc
sbb
xor
sub
xor
std
xor
mov
fimul
fwait
dec
adc
sbb
fs
mov
ret
adc
sbb
hlt
push
retf
mov
push
mov
call
outs
retf
xlat
sub
fwait
inc
or
xchg
adc
fdivr
in
imul
les
scas
inc
hlt
(bad)
loopne
ds
adc
jne
mov
mov
jecxz
shr
adc
shl
jmp
or
xchg
lods
lahf
and
es
jge
and
and
shr
jo
mov
sahf
aaa
shl
sbb
jecxz
daa
sbb
mov
ss
xchg
rol
sub
mov
sti
(bad)
pop
pusha
xchg
(bad)
mov
push
push
sti
rcl
dec
sub
iret
jg
inc
leave
test
daa
add
or
in
inc
out
jb
mov
fst
mul
sti
xchg
mov
sahf
pop
(bad)
or
pop
mov
das
loopne
std
lea
arpl
xchg
sbb
stos
repz
jo
mov
jae
cmp
xchg
out
and
sbb
rcr
dec
outs
pusha
test
leave
fs
(bad)
clc
repnz
xor
lds
adc
in
adc
cmp
ret
mov
lds
hlt
call
(bad)
mov
sub
stos
imul
and
adc
int
jbe
xchg
lods
pop
vpsrad
cmp
push
inc
cdq
movs
std
ss
xor
(bad)
(bad)
mov
jbe
xchg
lock
int3
push
(bad)
lock
and
add
loopne
or
sbb
sub
in
cld
pop
(bad)
mov
mov
mov
(bad)
fstp
jnp
retfw
aaa
mov
mov
out
push
mov
pop
data16
fld
fsubr
test
stos
push
add
stos
dec
xor
and
sub
and
push
push
jp
dec
pushf
imul
int
fcmovnbe
dec
lods
cmps
lds
cmp
jae
mov
int
sub
repnz
int
pop
scas
sahf
out
add
push
out
mov
add
loopne
cmps
pop
jle
dec
cmps
pop
clc
ret
adc
mov
jno
loope
(bad)
stc
sub
lods
xchg
(bad)
call
cmps
lahf
push
mov
ja
pop
adc
cmp
aad
jmp
test
jb
mov
retf
aad
cs
xor
or
outs
xchg
mov
adc
add
jmp
jbe
shl
xor
inc
leave
ret
xor
pushf
std
and
enter
aam
repnz
(bad)
(bad)
movs
(bad)
xlat
mov
loope
xchg
jle
rcl
and
xlat
cli
push
push
fnstcw
fs
dec
mov
ins
scas
mov
loop
inc
add
imul
scas
outs
pop
out
fwait
outs
xor
push
dec
in
(bad)
cwde
rol
sahf
outs
mov
sbb
call
jmp
mov
or
jecxz
inc
xchg
pop
ffreep
sbb
scas
sbb
dec
in
mov
xchg
push
cs
xchg
adc
(bad)
outs
xchg
cmp
mov
mov
daa
and
inc
mov
inc
cmps
add
in
jge
call
(bad)
jmp
cwde
cmp
bound
mov
fld
ins
in
fist
stc
ret
repz
add
lods
cmc
xchg
rol
nop
adc
adc
adc
push
and
jno
xlat
sbb
jmp
enter
or
int
push
jle
loop
std
dec
aad
and
(bad)
mov
in
cmps
cmc
push
adc
mov
fwait
(bad)
dec
xchg
inc
aam
std
lahf
jmp
xchg
arpl
jl
pop
dec
xchg
xor
ret
es
xchg
addr16
imul
cld
mov
add
adc
repz
stos
std
add
into
in
jb
in
pop
cmp
add
ss
test
les
mov
fisubr
mov
repz
lds
jne
mov
aas
push
xor
in
mov
das
sbb
test
cmps
(bad)
dec
mov
xchg
and
push
repnz
xor
cmp
mov
aaa
jns
xchg
cmps
pop
mov
div
dec
and
mov
cmp
(bad)
in
pop
mov
jae
adc
and
dec
xchg
outs
add
or
cmp
loop
pop
xor
mov
add
mov
pop
push
cs
cmc
inc
adc
and
(bad)
or
into
jmp
inc
and
ror
mov
sub
(bad)
or
shr
in
fist
bound
ror
aam
mov
add
retf
adc
es
dec
fmulp
cmp
cs
sub
(bad)
das
lahf
and
rcl
rcr
retf
shl
dec
xor
or
aam
neg
sbb
fld
cli
or
outs
retf
add
fld
xchg
fcmovbe
cld
jp
push
test
add
push
jmp
ja
mov
test
push
ins
mov
int3
(bad)
nop
xchg
aam
xchg
test
in
mov
clc
call
pop
inc
adc
retf
xchg
imul
lods
pop
mov
inc
xor
ds
jmp
dec
call
scas
mov
imul
and
scas
(bad)
pop
enter
cmps
pusha
out
fild
pop
aam
add
xchg
cmps
sub
bound
mov
lock
(bad)
test
js
mov
sub
dec
loope
add
outs
mov
sub
in
pop
ja
adc
out
(bad)
leave
aad
xor
jns
in
jae
xchg
arpl
and
cmp
pop
xchg
iret
xor
movs
lods
loopne
and
test
xor
dec
movs
jo
jo
test
cmps
pushf
dec
clc
inc
jg
stc
mov
popf
sub
xchg
xlat
xor
xor
sub
mov
shl
xlat
jmp
sub
mov
into
rcr
test
pop
and
lods
xlat
add
xor
pop
das
mov
(bad)
(bad)
clc
mov
push
mov
out
daa
bound
pop
call
test
leave
push
jo
cdq
cmp
xchg
push
cmp
push
leave
sub
xchg
cmp
dec
xchg
push
test
xlat
cmp
es
xlat
push
rol
sub
aam
rcr
ret
nop
mov
sbb
xchg
leave
pop
xor
inc
jp
fistp
aas
gs
lods
pop
jmp
adc
xor
add
fs
xor
les
lock
sub
mov
mov
cmps
fadd
retf
cmp
(bad)
lahf
in
out
jne
call
aad
jbe
mov
movs
mov
ss
adc
sti
or
jne
inc
fimul
ins
or
dec
mov
rol
fiadd
shr
pop
ins
jb
scas
xor
lahf
sub
imul
push
pop
and
pop
aad
int3
mov
or
sub
xchg
mov
test
lds
sbb
pop
xchg
add
inc
adc
ja
xchg
leave
jmp
ins
mov
and
loope
es
sahf
add
out
and
xchg
pop
dec
pop
ret
repnz
xchg
xchg
outs
fnstsw
adc
pop
lds
dec
mov
mov
mov
dec
sahf
in
and
movs
enter
push
icebp
sub
mov
jl
jne
sbb
call
hlt
xchg
adc
mov
xlat
into
or
in
mov
jecxz
mov
lahf
jp
nop
xlat
(bad)
rol
cmps
mov
xor
int
xor
pop
mov
dec
mov
in
shl
pop
popa
fcmovnb
(bad)
lds
lock
add
ds
rcl
arpl
jg
pop
in
xchg
and
xchg
inc
xchg
test
sti
fcom
in
cmp
pop
adc
call
in
mov
add
je
inc
fcom
(bad)
out
dec
test
cmp
sahf
(bad)
test
jne
pusha
ret
push
xchg
movs
fmulp
lahf
sub
sub
les
gs
push
(bad)
xor
mov
(bad)
xor
jp
inc
aas
inc
mov
xchg
mov
fnstcw
(bad)
xlat
(bad)
jmp
hlt
xchg
nop
dec
jno
fisubr
xchg
push
leave
push
mov
mov
mov
sub
push
pop
test
cmps
(bad)
nop
retf
lahf
fwait
jle
xlat
jecxz
cmps
les
mov
xchg
mov
arpl
outs
in
loope
xchg
lods
pop
add
aad
inc
pop
lea
ror
repnz
jo
sbb
gs
inc
xchg
div
int3
lds
xchg
jns
aad
sbb
xor
ret
es
(bad)
fs
call
test
mov
dec
cmp
retf
push
aas
ja
ja
mov
push
imul
mov
ja
or
inc
in
mov
fisub
nop
mov
ror
jnp
ret
push
shl
fs
xor
jle
lods
or
jmp
pushf
sar
and
ret
jae
in
adc
dec
push
cs
inc
call
inc
ss
inc
scas
fst
(bad)
cs
ds
xor
jg
add
mov
mov
das
dec
daa
adc
xchg
(bad)
push
sbb
repz
out
xchg
sub
(bad)
xchg
scas
sti
mov
shl
test
cli
push
add
shr
js
jae
pop
mov
sub
retf
mov
into
or
dec
jmp
jmp
xor
jmp
jmp
call
mov
je
dec
je
fsubr
mov
loopne
pop
dec
loop
stos
mov
sub
inc
mov
and
out
inc
ss
scas
push
dec
stos
sub
xchg
repnz
shl
inc
lods
sbb
(bad)
xor
mov
add
bound
xchg
and
shl
pop
loope
mov
retf
fiadd
fs
and
repnz
data16
sub
int3
stc
pushf
sub
sbb
test
mov
dec
cmc
in
daa
mov
test
icebp
inc
xor
pop
jmp
ret
fdivr
lock
push
pushf
pop
call
pop
fs
test
dec
rcl
cmps
cmps
loop
mov
es
push
or
jbe
jle
(bad)
popa
out
out
ja
jg
in
adc
xchg
and
mov
lahf
xchg
test
or
xchg
shl
div
popf
mov
mov
les
dec
add
(bad)
mov
mov
ror
movs
(bad)
test
lds
div
enter
in
jmp
ret
fimul
in
out
xchg
cld
sti
mov
in
xchg
cmps
icebp
adc
cmc
cwde
and
xchg
pop
xchg
mov
stos
repnz
shr
and
ret
shl
xchg
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
movs
mov
(bad)
loope
xchg
repnz
rcl
mov
(bad)
mov
(bad)
(bad)
movs
(bad)
xlat
(bad)
mov
rcl
cli
ftst
iret
repnz
fcom
movs
rcr
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
repnz
cmp
std
lods
enter
test
mov
cli
mov
mov
push
add
sbb
jae
das
sbb
xor
mov
or
push
xor
shr
mov
aaa
into
fist
aad
xor
dec
test
cmp
movs
pop
lds
push
dec
int3
sbb
cwde
lahf
or
pop
push
repz
fs
jnp
inc
mov
push
call
loopne
aas
mov
push
cmc
in
cld
pop
clc
and
(bad)
xlat
(bad)
mov
xlat
xchg
sbb
xchg
inc
call
nop
cld
ret
movs
push
cdq
and
dec
in
(bad)
cmp
push
pusha
(bad)
pop
jb
sub
bound
ret
lahf
or
add
xchg
cli
and
sbb
and
cld
mov
cmp
addr16
jnp
jmp
xor
pop
mov
xchg
push
cmps
jne
cld
movs
les
cli
sbb
imul
jg
xchg
outs
(bad)
lods
stc
jne
les
ret
dec
xor
scas
(bad)
out
imul
pop
sbb
push
cld
cmc
(bad)
xlat
into
or
aam
sbb
cmp
inc
cmp
in
cwde
sub
jmp
sbb
add
push
gs
jno
leave
cmp
enter
fmul
or
scas
cmp
js
push
xchg
mov
rcr
inc
cli
sub
push
adc
mov
mov
call
bnd
(bad)
ret
inc
pop
pop
sbb
pop
sar
sahf
mov
cmps
mov
xchg
push
xchg
clc
sbb
pop
xchg
sub
shr
mov
(bad)
pop
in
dec
int
test
mov
out
in
mov
cmp
and
add
js
retf
add
jne
cwde
mov
mov
mov
dec
stos
mov
jecxz
fld
pop
inc
mov
pop
bnd
jecxz
out
mov
adc
test
jno
int
xor
mov
mov
pop
daa
push
cdq
inc
xchg
mov
fwait
in
inc
lea
movs
jnp
xor
cmovl
in
stos
jbe
fmul
shr
imul
mov
mov
bound
xchg
stos
ja
adc
push
ret
and
fld
mov
sti
push
imul
mov
gs
fwait
xor
icebp
stc
add
inc
jbe
sbb
jnp
dec
ret
mov
jg
loopne
mov
jns
push
(bad)
jo
xor
dec
imul
cmp
xchg
push
pop
sar
sub
fwait
rcr
out
or
(bad)
(bad)
loop
pop
fadd
es
outs
clc
(bad)
jmp
inc
push
fstp
pop
shl
and
outs
and
dec
nop
mov
std
rol
xchg
out
cmp
jmp
and
add
or
add
push
js
cmps
inc
or
and
(bad)
xlat
xchg
call
in
xchg
fmul
sahf
cmp
and
xlat
(bad)
cdq
(bad)
xchg
sbb
mov
xlat
add
shl
movs
rol
movs
enter
(bad)
xlat
(bad)
mov
xlat
bnd
test
mov
inc
adc
ins
add
outs
add
sar
(bad)
ret
fbstp
(bad)
and
fwait
jg
fcomp
xchg
jns
pop
adc
xchg
push
out
sahf
jnp
xor
mov
aad
dec
pop
repz
rol
(bad)
dec
cmp
mov
test
mov
jmp
jge
(bad)
pop
out
sbb
fmul
imul
adc
loopne
add
and
dec
psubb
jmp
xchg
stc
dec
les
or
mov
xchg
(bad)
sbb
jl
cli
mov
or
ss
xchg
or
adc
fisttp
loope
test
dec
mov
hlt
xor
in
sbb
and
clc
in
sbb
lods
jne
xchg
clc
fwait
mov
jb
dec
stc
out
(bad)
dec
test
dec
push
cs
dec
mov
shl
js
mov
add
or
pop
mov
xor
les
adc
in
(bad)
sbb
dec
pop
jl
ins
shl
push
scas
jp
shl
sub
mov
ja
arpl
mov
or
jle
in
xchg
push
jle
fdivr
dec
(bad)
jecxz
and
push
cmp
mov
fmul
inc
xchg
out
rol
add
(bad)
fiadd
jbe
mov
int3
mov
cmps
aad
sti
mov
xchg
(bad)
push
push
and
sbb
test
outs
pop
fnsave
pop
in
in
xchg
dec
aad
push
xlat
dec
pop
imul
cld
sub
shl
scas
inc
xor
add
ins
mov
inc
test
dec
dec
je
mov
into
and
cwde
mov
push
adc
sub
mov
and
xor
push
mov
scas
dec
out
ins
sbb
sub
int
cvtps2pi
push
or
bound
and
push
or
inc
ds
in
xlat
sbb
jb
int3
push
lods
or
mov
pop
ror
ds
mov
push
aam
pusha
movs
jae
ja
dec
mov
ins
out
pop
fsub
push
inc
mov
mov
dec
inc
in
leave
js
jno
adc
hlt
clc
add
mov
test
inc
repz
sub
or
mov
add
xor
sar
xor
shl
pop
aaa
add
jmp
fcmovne
sbb
pusha
ficom
out
cs
dec
in
retf
idiv
add
or
jno
cmp
je
or
inc
gs
out
mov
enter
clc
push
xchg
pop
lods
js
xlat
mov
je
or
xchg
stos
xchg
xlat
add
icebp
xor
jo
mov
pop
cld
add
add
fsubr
sar
in
es
stos
(bad)
test
loopne
(bad)
movs
(bad)
sar
mov
int3
xlat
out
mov
mov
movs
adc
repnz
push
cli
cli
mov
test
stc
out
je
fcomi
inc
pop
push
xor
jmp
clc
ins
js
pop
popa
mov
(bad)
pop
pushf
(bad)
leave
call
adc
cmp
repz
push
cmp
iret
shl
test
ret
inc
cmp
ins
out
mul
cmp
add
dec
mov
jne
lods
and
cmp
sbb
cmps
pop
mov
push
arpl
adc
shl
aaa
pop
stos
repnz
cmp
add
stc
or
(bad)
jno
es
dec
add
jbe
mov
jmp
mov
xor
add
movs
xor
cmp
fwait
stos
in
aaa
push
fidiv
push
aam
rcr
inc
adc
(bad)
iret
scas
cwde
ror
push
cmps
xor
cs
adc
sbb
xchg
push
mov
xchg
imul
xchg
in
xor
jo
and
adc
fsub
xor
or
fwait
add
call
stos
in
push
int3
ret
xor
dec
mov
mov
lock
xor
dec
sub
xchg
push
xor
sbb
fs
adc
mov
jbe
scas
or
pop
cwde
sbb
inc
add
dec
mov
jge
push
inc
mul
and
sbb
mov
pop
stos
shr
lahf
pop
mov
cdq
fwait
pop
mov
bound
jmp
add
repz
iret
jmp
lds
ficom
stos
int
out
xor
or
dec
int3
jmp
cmp
fdiv
es
imul
bswap
movs
push
push
rcr
cmps
jae
dec
mov
test
cmc
mov
mov
fisubr
ins
or
loopne
xor
test
enter
imul
pusha
xor
mov
div
jb
dec
inc
dec
lods
push
jecxz
mov
fldcw
and
xor
push
in
cmp
sbb
ins
push
(bad)
jmp
pushf
aad
push
fcmovnbe
mov
jo
pushf
xor
scas
test
push
dec
mov
stos
xchg
test
mov
cld
enter
sbb
jnp
shr
add
cmp
and
sbb
pop
sub
in
or
fdivr
in
test
enter
enter
(bad)
rcl
in
aam
mov
in
xchg
adc
jno
fidiv
cmc
add
dec
enter
(bad)
lahf
cli
mov
pushf
push
mov
pop
int
mov
scas
and
mov
add
pop
mov
movs
push
cmp
stc
cdq
aas
lea
dec
dec
dec
cmp
iret
fs
xor
add
(bad)
xor
add
jl
push
mov
sbb
dec
ins
shl
mov
imul
push
and
arpl
les
inc
bound
ror
test
stc
aad
dec
and
or
ds
xchg
push
inc
sub
inc
test
gs
lock
jg
xchg
cmp
push
push
int
cmc
push
repnz
jno
jl
mov
fstp
mul
out
mov
sub
movs
test
test
fwait
push
xor
adc
sub
movq
pop
fst
cmp
jg
lea
lods
ins
push
cmp
mov
in
je
or
xchg
add
stc
add
mov
jge
mov
bound
retf
xchg
inc
sbb
fwait
and
mov
in
cmp
test
mov
rcl
idiv
adc
jae
std
imul
push
jl
pop
lds
jg
(bad)
cmp
jo
gs
sub
icebp
xchg
xor
add
cmc
or
pop
call
test
outs
pop
iret
std
or
cmp
das
outs
and
fwait
cmp
mov
sub
or
popa
cmc
jl
sub
cmp
push
cdq
mov
xchg
popf
(bad)
out
stos
jo
pop
and
(bad)
xor
fxch
jp
sbb
or
sti
popa
push
cmp
add
test
jg
pop
scas
inc
dec
pop
cmp
push
mov
dec
cmp
push
(bad)
(bad)
out
rol
push
dec
xchg
clc
xlat
dec
mov
xchg
mov
adc
pop
cdq
push
mov
mov
out
fild
in
(bad)
js
dec
mov
ds
push
inc
ss
fcom
xlat
stos
ret
jmp
fst
mov
cmps
mov
cmp
call
outs
pop
mov
cmp
xchg
test
mov
xor
mov
test
std
in
push
jae
std
or
fidivr
xlat
jge
out
lock
es
cmps
xor
adc
jae
cmp
inc
adc
shr
jg
int3
aad
loop
sub
push
test
jl
stos
xor
inc
ins
sbb
cs
das
jo
pop
or
cmp
jb
int3
mov
add
add
lds
xor
pop
add
aad
cs
outs
pop
mov
arpl
mov
nop
loopne
dec
xchg
push
pop
cs
mov
fwait
push
push
popa
in
imul
lea
fidiv
les
xchg
retf
lods
stc
jb
adc
xor
xor
aad
popa
std
in
fs
ss
cmps
dec
jb
test
in
cld
and
stos
and
retf
pop
retf
pop
scas
xor
pop
pop
and
scas
mov
mov
in
test
xchg
retf
fwait
cld
sub
and
dec
lahf
out
std
ds
mov
push
cmp
and
and
clc
sbb
(bad)
or
xchg
imul
inc
xor
jl
add
leave
xchg
xor
(bad)
stc
mov
mov
repnz
push
stos
out
in
mov
outs
mov
shl
sar
(bad)
xlat
mov
mov
fmul
(bad)
mov
int3
xlat
(bad)
mov
fstp
test
mov
test
mov
add
lods
and
call
scas
fcomp
fld
xlat
out
int3
push
je
sub
fild
mov
dec
push
cs
rcl
int
ss
sbb
mov
push
popa
mov
sbb
das
das
pop
jle
adc
mov
std
fwait
shr
xchg
sbb
jmp
imul
mov
lds
inc
adc
sbb
in
inc
jno
leave
ficomp
fadd
cmp
call
sub
enter
movs
or
add
sub
movs
add
fmulp
(bad)
and
and
adc
movs
les
out
pop
clc
pop
(bad)
pop
and
(bad)
in
ror
retf
lahf
stc
pop
ret
shr
popf
aaa
inc
adc
sbb
and
dec
mov
js
outs
mov
fs
retf
call
out
into
jmp
shl
or
push
mov
pop
jge
xor
in
mov
adc
mov
xor
imul
push
stc
jns
push
movs
js
inc
inc
nop
retf
popa
sub
adc
les
cmps
icebp
scas
push
repz
xchg
xchg
out
call
rol
xor
add
(bad)
cli
loope
btr
neg
pop
xchg
pop
adc
dec
jmp
ds
mov
dec
cmp
enter
test
hlt
leave
dec
jnp
int
mov
into
in
sub
mov
nop
or
sub
cli
es
mov
cld
test
out
(bad)
int
cmp
cmp
pop
lds
test
hlt
push
(bad)
test
stos
xor
xchg
and
shl
mov
fiadd
push
sub
xor
push
pop
cmp
not
je
ror
in
pop
je
xchg
mov
sbb
cmc
mov
test
mov
int
push
in
sbb
leave
(bad)
dec
aaa
adc
mov
ds
mov
std
push
dec
jno
cmp
xchg
out
xchg
repz
mov
sahf
jle
je
call
mov
dec
cmc
fst
and
push
mov
and
jbe
jmp
mov
mov
stc
mov
bound
xchg
mov
gs
xchg
jne
mov
outs
repz
pop
sub
xchg
cmp
or
fcomi
or
xchg
push
dec
add
out
iret
or
pop
cdq
jbe
lea
cli
in
(bad)
retf
jle
xor
in
and
jnp
cmps
loopne
xchg
and
neg
sahf
pop
inc
dec
dec
pop
shl
ins
mov
mov
pushf
adc
mov
cmp
and
popa
test
scas
movs
xchg
mov
and
fild
xor
imul
sbb
mov
sahf
loopne
mov
mov
jnp
out
pop
xor
aad
bound
(bad)
aad
inc
jno
push
dec
loopne
sbb
sbb
ret
add
clc
repz
repz
pop
shl
push
mov
jg
enter
mov
jae
cli
adc
inc
cmp
imul
sub
in
or
rcr
jge
push
xchg
sbb
xchg
jnp
aad
xlat
adc
loop
push
add
mov
aam
inc
adc
aaa
movs
xchg
mov
(bad)
mov
mov
test
lock
std
jg
cld
sbb
sub
push
mov
adc
or
dec
or
add
push
popf
push
cmps
add
push
adc
push
mov
jge
add
sahf
pop
mov
mov
leave
je
mov
pop
jge
(bad)
lods
aad
into
fidivr
mov
retf
sub
push
cmp
mov
rcl
mov
test
out
daa
jnp
fstp
xchg
push
out
test
xchg
ds
adc
stos
cmc
inc
or
(bad)
neg
sub
push
mov
lock
or
ins
test
mov
mov
icebp
dec
cld
pusha
in
fwait
idiv
or
jp
and
jbe
pop
mov
(bad)
jne
pop
sub
bound
sub
aam
ins
sbb
je
jmp
out
pop
call
outs
adc
lock
jb
xor
add
xlat
arpl
jmp
ja
xor
fsub
push
mov
popf
push
das
jmp
push
cmp
gs
or
xor
aad
cmp
add
aam
jmp
std
sbb
add
pop
mov
or
pop
xchg
pop
ja
xlat
sbb
das
mov
rcl
jg
(bad)
(bad)
cmp
xor
sub
pop
je
pop
movs
xchg
(bad)
sbb
or
popf
jb
pop
ds
pop
movs
rcl
test
rol
movs
(bad)
sar
mov
add
mov
and
xchg
cmp
add
mov
push
jp
pop
test
sahf
out
sub
add
lea
(bad)
pop
push
(bad)
dec
(bad)
adc
loop
sub
xor
xor
cmp
shr
mov
call
fidiv
add
cwde
add
fwait
mov
jns
dec
sti
sbb
pop
mov
mov
adc
in
sbb
ret
mov
push
in
xchg
cli
xchg
gs
sbb
cmp
push
test
into
cmp
rcr
out
pop
mov
add
add
cmp
test
out
sbb
or
ss
xchg
push
mov
daa
xchg
add
aaa
in
jb
push
cmps
mov
imul
je
mov
and
add
je
push
sbb
mov
adc
mov
fwait
movsx
dec
ror
jecxz
or
jg
leave
inc
fidivr
mov
lock
or
scas
jno
rol
mov
push
repz
mov
imul
shl
(bad)
mov
daa
scas
int
imul
or
in
add
ins
sub
(bad)
(bad)
mov
fwait
aam
out
clc
movs
data16
call
repnz
or
rcl
test
mov
cmps
jnp
add
rcl
imul
out
shl
(bad)
fdivr
ds
ss
cmp
push
add
sub
mov
jae
jno
fwait
(bad)
sub
mov
ins
inc
push
lea
into
aaa
push
out
(bad)
sbb
popa
mov
mov
dec
mov
jmp
push
stc
stos
dec
cs
mov
mov
dec
enter
jne
pop
iret
popa
jns
(bad)
mov
sub
fist
xor
inc
(bad)
push
fisub
aam
mov
sub
stos
loopne
or
jmp
xchg
je
inc
pushf
push
fwait
js
out
pushf
popa
mov
pop
sub
adc
loop
xchg
fcmovbe
xchg
pop
lds
call
mov
imul
inc
inc
dec
shl
jnp
cmp
mov
arpl
ror
pop
lods
dec
adc
shl
push
push
jmp
mov
dec
scas
mov
loope
rol
pop
xchg
and
pop
(bad)
jnp
sahf
pop
jg
cmp
and
xor
cdq
or
cmp
fidiv
test
sbb
xchg
dec
add
das
je
pop
adc
sar
adc
pop
xor
or
xchg
add
cmp
test
mov
xor
and
mov
lahf
not
pushf
fiadd
icebp
jb
add
or
data16
arpl
outs
xor
mov
push
call
push
and
sahf
rcl
jl
jae
add
inc
fcom
push
sub
xor
inc
in
or
test
push
popf
jne
mov
mov
and
es
movs
xchg
push
jmp
xor
fidivr
es
fstp
mov
sbb
adc
or
xchg
mov
(bad)
in
repnz
ds
xchg
(bad)
aas
rcr
aas
xchg
aam
push
and
push
mov
mov
dec
and
ja
(bad)
in
xor
mov
sbb
cmp
cwde
call
mov
scas
test
test
jb
and
je
stos
sub
or
stos
sbb
mov
out
scas
or
loopne
scas
in
loop
mov
inc
pop
add
es
xchg
imul
push
cmp
push
loopne
jne
xchg
jge
jmp
mov
and
movs
int3
fcomi
(bad)
mov
push
jl
cmps
cmps
fwait
nop
add
hlt
push
and
in
push
popa
dec
add
jbe
adc
xlat
int
mov
movs
(bad)
push
inc
(bad)
jmp
icebp
(bad)
push
sti
(bad)
xlat
mov
mov
fimul
test
jl
scas
cli
fs
in
call
mov
outs
pop
xchg
add
fld
and
fdiv
mov
jae
jo
arpl
repz
and
(bad)
fidiv
mov
mov
jge
(bad)
cmp
mov
rcl
movs
(bad)
sar
movs
(bad)
xlat
cli
in
push
cmp
rcl
inc
(bad)
add
shl
leave
mov
dec
push
mov
pop
xchg
out
clc
into
(bad)
js
adc
(bad)
mov
and
cmp
rcr
popa
add
cmp
mov
push
inc
dec
sti
mov
sbb
add
test
or
mov
adc
add
test
rcr
iret
or
xor
aam
and
xchg
cmp
adc
lods
js
and
mov
push
mov
lahf
mov
cmp
retf
cs
xchg
test
loope
iretw
dec
(bad)
dec
in
and
push
test
sti
addr16
cmp
inc
fsub
fild
push
test
add
les
ins
pop
xor
jg
sbb
inc
loopne
cmp
adc
add
dec
les
outs
aas
or
fldenv
push
pop
cmp
daa
sahf
pushf
lods
shl
push
imul
sbb
cmp
adc
xchg
dec
or
jl
mov
repnz
and
leave
adc
sbb
fdivr
sub
in
ss
call
outs
aad
fidivr
pop
out
xor
shl
and
movs
pushf
pop
sar
xor
cld
add
push
cmp
cs
ins
xchg
xchg
sahf
outs
lds
movs
sub
mov
loope
cmp
xor
push
std
pop
lea
out
movs
xchg
test
mov
jp
icebp
xchg
sub
mov
stos
add
push
mov
and
sar
mov
(bad)
sar
loope
xlat
(bad)
mov
add
adc
lods
(bad)
xlat
cli
in
test
fldenv
mov
rcr
lods
or
mov
xlat
sbb
and
push
ins
std
sub
fs
jp
cmp
fimul
sub
ror
call
cmp
(bad)
sahf
imul
aaa
fcom
and
aas
push
ficomp
test
jmp
pop
jo
mov
stos
imul
cld
in
xor
nop
mov
or
push
into
test
loopne
sub
cmp
xchg
sub
stc
leave
lods
out
(bad)
or
mov
jg
test
push
rcl
div
rcl
popa
sub
and
retf
mov
es
xor
and
sub
xchg
data16
xchg
sbb
and
cmp
aas
pop
jne
inc
fiadd
(bad)
or
inc
mov
xor
xor
hlt
outs
ficomp
or
cmp
xor
add
sbb
xchg
je
scas
and
movs
rdmsr
outs
adc
les
mov
xchg
xchg
jmp
push
iret
jecxz
sahf
aaa
mov
stos
or
push
mov
stos
pop
xor
and
mov
jne
pop
add
cld
fwait
(bad)
fisttp
adc
std
mov
lods
push
shl
faddp
xchg
retf
rol
xor
dec
test
mov
push
lahf
inc
lods
dec
in
in
jbe
int
enter
jo
jl
cmp
adc
movs
mul
(bad)
push
in
add
fstp
ds
in
lods
adc
xchg
mov
cmc
or
push
out
stc
idiv
(bad)
pop
stc
enter
add
and
mov
pop
mov
cmp
dec
ret
cdq
stc
and
push
jo
pop
push
pop
ret
retf
neg
and
fs
aaa
adc
or
je
inc
arpl
xor
adc
or
vmovss
dec
jge
cmps
arpl
sar
mov
pusha
clc
int3
inc
sub
cmc
mov
ret
loop
scas
repz
out
jge
fwait
mov
mov
mov
es
stos
cli
test
aam
repnz
rcr
movs
(bad)
sar
mov
adc
mov
inc
aam
and
xlat
cli
jge
xlat
in
mov
push
mov
clc
mov
cmps
in
sub
sub
push
shr
sub
jmp
int3
jae
cmp
inc
xor
aaa
retf
jne
lock
inc
test
or
inc
int
into
dec
push
inc
(bad)
ficomp
mov
outs
ins
ds
lea
hlt
mov
push
jae
cmp
mov
xor
hlt
sub
xor
lds
(bad)
repnz
xchg
push
adc
call
xor
xchg
out
xchg
adc
jl
jae
loopne
sbb
into
xor
push
sub
sub
call
mov
add
mov
cmp
mov
mov
mov
xchg
bnd
(bad)
fidivr
push
adc
or
inc
sub
sgdtd
xchg
aaa
pushf
and
sub
mov
mov
xchg
loopne
ds
stc
rcr
and
(bad)
cmp
neg
js
push
fs
test
sbb
mov
dec
lods
cld
mov
cs
icebp
pop
sub
push
jns
push
int
(bad)
fst
ins
dec
mov
into
push
push
pop
and
movs
adc
out
ins
mov
(bad)
ret
fscale
test
mov
stos
(bad)
loop
pusha
cmp
scas
test
push
loopne
cmc
es
lock
mov
ss
xor
ret
sbb
pop
popf
test
dec
je
sbb
mov
lods
fwait
mul
aas
dec
or
sar
mov
xor
movs
cmp
ja
cld
xchg
xchg
or
mov
arpl
and
jo
xor
sub
popf
aaa
arpl
ret
mov
(bad)
dec
mov
and
jb
and
adc
in
sbb
imul
out
push
loop
mov
inc
dec
es
add
xor
inc
push
rcl
dec
mov
adc
xor
movs
imul
jmp
inc
push
stos
gs
xor
cmps
adc
xor
cs
mov
push
push
xchg
mov
sar
sti
retf
ja
inc
and
sub
out
loope
jae
fmul
push
push
add
pop
jbe
inc
jge
popf
and
mov
cmp
ret
fild
sub
rcr
jmp
mov
push
cmp
fnstsw
pop
pop
add
add
out
push
aad
xchg
aad
mov
sub
ret
imul
push
cmps
push
outs
cmp
adc
xchg
(bad)
cmc
das
cmps
fld
inc
pop
inc
addr16
imul
push
push
inc
sub
jmp
sbb
xchg
loope
mov
xor
imul
push
push
gs
ja
movs
pop
pop
mov
inc
loope
and
xor
out
pop
xor
pusha
push
in
push
inc
stos
ins
mov
mov
pop
daa
(bad)
or
inc
(bad)
add
ins
hlt
jp
jle
and
push
lahf
clc
xchg
pop
(bad)
mov
xchg
imul
sar
ret
je
scas
push
fwait
lea
js
mov
repz
(bad)
jns
fistp
daa
stos
sub
shl
pop
test
dec
pushf
xchg
cmp
iret
sahf
pop
in
push
mov
mov
aad
stos
xor
in
inc
mov
loope
aaa
retf
pop
and
loop
or
out
and
mov
cwde
jp
stos
pop
dec
lock
xchg
jae
dec
popf
pop
xchg
repnz
or
sbb
rcr
or
push
push
neg
mov
jne
das
ins
inc
mov
fisub
movs
iret
dec
xor
mov
jg
jg
mov
outs
or
ret
xchg
and
jle
scas
in
jbe
mov
adc
push
call
ficomp
mov
adc
dec
pop
fmul
push
jecxz
repnz
xchg
sar
rol
ret
mov
jnp
ret
cmp
iret
push
(bad)
sub
mov
les
call
cld
pop
aam
bound
test
or
push
popa
ins
add
outs
mov
xchg
mov
mov
movs
pop
mov
sub
push
enter
lea
xor
dec
dec
popa
test
pop
adc
int3
cmp
lahf
sbb
outs
daa
sub
loope
out
test
aas
jno
ret
vmread
std
sub
fadd
js
es
out
ltr
imul
dec
jb
mov
mov
sahf
dec
pop
adc
les
xlat
ds
mov
fimul
mov
add
lahf
pop
push
cmc
js
shl
popf
mov
nop
fsub
sahf
or
dec
loope
leave
cli
out
mov
sbb
(bad)
jmp
(bad)
add
ret
mov
js
push
push
pop
fisttp
outs
scas
xchg
loopne
rcr
sub
jl
push
xchg
push
mov
(bad)
xchg
adc
pop
arpl
ins
and
in
adc
jb
mov
push
push
(bad)
std
mov
jne
and
retf
mov
neg
clc
jg
arpl
in
ins
and
xor
ret
fadd
cmp
(bad)
pop
test
mov
cld
dec
leave
popa
push
in
adc
add
xchg
cmp
cmp
fs
(bad)
lods
fcmovnb
out
aaa
dec
jp
std
out
inc
scas
out
movs
add
int
das
jne
mov
mov
mov
ins
adc
pop
mov
sti
xchg
fisubr
xor
(bad)
(bad)
aas
mov
test
xchg
es
inc
dec
paddq
imul
inc
add
test
cmp
and
shl
jno
jp
pop
xor
std
pop
mov
test
movs
fst
out
shl
movs
in
fisub
enter
int3
xlat
imul
aam
repnz
fucomi
(bad)
aam
jmp
retf
into
mov
call
in
push
std
call
sti
mov
nop
xchg
stos
std
clc
sbb
nop
mov
test
aam
jmp
repz
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
fst
mov
and
int3
sar
mov
xchg
add
les
cli
movs
(bad)
sar
movs
(bad)
xlat
(bad)
mov
xlat
loop
in
test
fdivr
test
rcl
movs
(bad)
sar
movs
(bad)
xlat
(bad)
test
aam
jmp
mov
mov
movs
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
inc
xlat
mul
les
lods
sub
and
sub
dec
(bad)
rol
mov
xchg
mov
add
aad
imul
mov
cdq
xchg
jno
inc
cmc
lahf
pushf
dec
jp
and
pusha
imul
lss
jnp
push
pop
xchg
inc
mov
stos
xor
jnp
push
aas
dec
enter
sbb
in
leave
(bad)
or
ja
cdq
fs
jne
sub
sbb
and
xchg
int
jo
jp
or
sub
fs
xor
pop
jmp
ret
xor
cmp
jge
sar
sbb
ror
pop
sbb
mov
adc
dec
pop
adc
xchg
sub
cdq
adc
test
pop
or
mov
rcl
dec
jecxz
and
sti
sti
mov
fild
push
js
repnz
lahf
add
and
and
imul
out
sub
outs
sbb
push
test
dec
loope
xor
fnstcw
inc
data16
jmp
pushf
retf
push
call
sti
or
mov
push
adc
das
imul
mov
cli
dec
aam
pop
dec
inc
movs
aaa
cmp
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
cdq
(bad)
xlat
(bad)
mov
test
mul
aam
loop
(bad)
xlat
(bad)
lods
(bad)
xlat
jmp
iret
mov
sbb
mov
push
xchg
jg
cmp
std
mov
rcl
add
clc
push
movs
cdq
nop
mov
sub
inc
and
mov
sub
push
clc
mov
xchg
pop
call
add
jb
aam
push
add
stc
in
imul
vmovntps
sar
sbb
jmp
pop
arpl
sub
push
movs
pushf
pop
imul
xchg
daa
mov
call
add
int
pop
xor
call
sub
jecxz
addr16
mov
push
test
in
fsub
push
mov
cmp
ret
bound
out
jb
dec
adc
push
ror
jbe
int
push
or
mov
(bad)
jge
movs
aas
lods
mov
outs
cmp
cmp
xchg
mov
pop
fcomp
and
xlat
jne
xor
sahf
xchg
mov
adc
pop
rol
sub
mov
retf
ja
dec
lahf
bound
adc
lds
xor
scas
loopne
(bad)
add
jmp
xor
mov
imul
push
fmul
(bad)
sti
xchg
(bad)
loop
xchg
fiadd
jo
nop
dec
ja
cli
or
into
push
fsubr
push
mov
es
sub
cmps
dec
popf
mov
lock
bound
outs
push
and
push
or
imul
mov
nop
xchg
mov
std
push
xlat
xor
stos
(bad)
repnz
push
mov
dec
mov
enter
in
xor
xlat
mov
xor
cs
aaa
cmc
adc
cmp
popa
adc
stos
jecxz
xchg
test
mov
enter
jecxz
mov
inc
pop
inc
inc
inc
std
xor
arpl
retf
test
movs
jg
loopne
not
pop
jb
movs
adc
fmul
xchg
jae
ja
int3
icebp
fwait
loope
lods
out
std
mov
cmp
pop
dec
lods
sub
ficom
pcmpeqw
push
push
int3
ins
add
inc
in
inc
fwait
sahf
movs
cmp
adc
not
ror
fst
or
pop
cmp
arpl
test
loop
push
mov
jnp
xor
sti
jg
addr16
stos
daa
jo
ins
push
dec
(bad)
mov
adc
xlat
jmp
push
mov
popf
movs
(bad)
or
scas
or
jge
xlat
mov
add
pop
loopne
ja
xchg
dec
in
mov
mov
out
in
xchg
pop
push
adc
aad
imul
nop
mov
xor
dec
fcmovne
je
lahf
pop
xchg
shl
inc
pop
dec
xchg
pop
jecxz
sbb
fdivr
xchg
fwait
std
jl
shr
daa
adc
mov
jle
aas
jle
das
pop
cmp
add
in
test
enter
rcr
(bad)
movs
(bad)
sar
mov
xlat
imul
(bad)
sar
loope
adc
mov
(bad)
fs
xlat
jnp
rcr
in
repnz
push
cli
dec
(bad)
stos
loop
add
mov
mov
add
lea
jmp
aad
pop
mul
or
mov
cs
dec
xor
fld
jmp
push
loope
jnp
ja
sbb
sub
push
add
in
sub
cdq
push
not
add
or
dec
dec
not
aaa
cmp
push
setbe
cmp
in
icebp
cli
pop
fstp
xchg
xchg
enter
mov
lahf
dec
sub
repz
jg
cmp
xchg
test
cmp
ins
sbb
jmp
add
sar
cs
push
sbb
xlat
lock
test
pop
adc
test
cld
arpl
icebp
imul
xchg
sbb
loope
dec
test
mov
ins
ror
loopne
inc
mov
lock
add
mov
or
jno
sbb
pop
into
jmp
or
sbb
popf
sub
add
shr
sub
mov
jmp
js
add
push
inc
call
add
mov
push
jbe
jne
push
fistp
xor
popf
and
jg
sub
pop
call
test
test
in
adc
sti
fld
ret
retf
icebp
fxch
dec
dec
dec
cdq
fcomp
and
es
adc
call
cs
pusha
into
or
inc
sub
mov
mov
fld
loopne
or
push
fs
icebp
xchg
jg
xchg
pop
inc
icebp
mov
mov
scas
or
loop
mov
push
lods
sub
push
sar
mov
es
adc
cdq
int
xor
stos
outs
das
(bad)
sbb
(bad)
lods
iret
xor
test
sbb
sbb
enter
add
mov
lods
add
int3
iret
cli
mov
rcr
mov
int3
xlat
repnz
add
cli
in
pop
outs
dec
dec
fild
lods
(bad)
xlat
cli
mov
cmp
jecxz
jl
push
inc
(bad)
cmps
xchg
jge
pop
jg
xor
inc
(bad)
scas
pop
push
mov
into
sets
aam
aas
jo
inc
xor
call
mov
out
mov
fdiv
dec
add
call
jmp
push
mov
nop
test
test
mov
xchg
test
neg
aam
fidiv
mov
pop
mov
sub
lock
pusha
pop
inc
cdq
mov
push
lods
rcr
and
mov
fsubp
jge
scas
mov
nop
cld
pushf
cli
fisttp
pop
xchg
out
xchg
add
mov
push
mov
cwde
idiv
cld
out
leave
jge
movs
fst
imul
and
gs
mov
into
in
dec
dec
shr
test
pop
push
inc
sahf
push
jl
cmp
inc
sub
lods
std
jae
mov
ret
stos
pusha
mov
pop
jae
je
fmulp
sub
push
in
xchg
sahf
or
fidivr
inc
enter
sbb
data16
xchg
popa
dec
stos
pop
jno
cmp
dec
xchg
in
push
inc
add
test
div
rcr
fisub
(bad)
xlat
imul
(bad)
sar
and
imul
xor
shr
or
cmp
add
into
adc
sub
sar
dec
pop
xor
sar
xchg
std
out
pop
test
cs
sbb
mov
rcr
sub
jge
ss
jl
mov
jp
and
rol
sub
loope
lods
push
enter
call
jns
mov
pop
or
ins
adc
jo
pop
or
lock
add
push
(bad)
in
leave
pop
pushf
les
xchg
dec
and
es
cmp
inc
add
mov
in
xchg
cli
mov
out
xchg
popf
cmps
cmp
shr
jl
je
lea
sahf
adc
fisub
pop
stos
dec
jb
dec
and
mov
jno
mov
xor
pop
xchg
and
rcr
add
jle
arpl
and
adc
mov
stos
test
pushf
cdq
int
cmp
call
js
bound
jnp
adc
test
into
stc
sbb
cli
jg
xchg
dec
(bad)
and
rcr
xchg
pop
shl
daa
call
mov
sbb
ficom
add
stos
and
lock
mov
add
fnstenv
mov
(bad)
in
inc
xor
shl
ret
push
fmul
stc
outs
test
dec
sar
(bad)
adc
xchg
or
dec
push
and
lea
dec
xor
clc
cmp
push
popf
push
sbb
and
sub
fwait
rcl
jne
push
sub
test
and
pop
or
lds
adc
push
sub
adc
jbe
jb
jmp
add
sahf
xchg
adc
push
sub
pushf
leave
movs
daa
adc
movs
stc
mov
js
sar
cmps
ins
xor
scas
es
xchg
jmp
push
or
mov
clc
cli
pusha
mov
cmp
retf
jo
in
and
push
fsubr
adc
ss
push
(bad)
and
xchg
xchg
(bad)
push
mov
dec
jae
pop
mov
sbb
stc
outs
test
lods
push
or
cmp
movs
mov
loope
and
aas
jle
cmp
sub
or
mov
push
jno
add
(bad)
out
or
jmp
or
fs
xchg
mov
jle
dec
dec
fcom
xchg
inc
push
jp
sub
cld
das
iret
cli
xchg
add
pop
lds
dec
imul
adc
adc
test
out
not
jmp
dec
adc
mov
outs
cdq
jb
jmp
aam
lock
push
mov
ret
mov
sub
pop
push
mov
jb
mov
std
cli
pop
push
fucomi
pop
pop
(bad)
jge
(bad)
mov
out
fsubr
cmp
das
cwde
outs
pop
fiadd
fs
jo
mov
clc
adc
dec
sbb
mov
scas
movs
mov
dec
dec
inc
mov
push
js
push
popf
jl
scas
sbb
push
mov
mov
xchg
adc
and
adc
clc
pop
mov
fild
enter
movs
xor
mov
dec
cmp
pop
xchg
push
fldenv
add
dec
movs
xchg
jmp
push
push
mov
mul
outs
jbe
sbb
jecxz
mov
test
cs
sbb
sbb
fldcw
mov
ins
jbe
xchg
jg
movs
jecxz
jmp
dec
xchg
int3
pushf
fwait
pop
push
jecxz
(bad)
push
mov
mov
popf
push
pop
jne
pushf
or
jae
ja
jmp
or
leave
mov
adc
aas
pop
cmps
je
jecxz
ds
xlat
pusha
rsm
dec
dec
movs
popa
call
enter
pusha
not
sub
outs
loop
imul
adc
mov
pop
pop
push
mov
and
loopne
mov
call
mov
adc
(bad)
call
dec
neg
push
push
or
push
pop
jmp
ins
scas
jnp
add
inc
sub
inc
outs
sub
jecxz
data16
jg
xchg
js
jo
and
sti
and
(bad)
(bad)
daa
sahf
cdq
rol
pushf
lock
xor
cmp
or
xchg
push
daa
push
imul
sub
mov
stc
and
dec
movs
out
lock
ins
jno
mov
pushf
rcl
push
in
mov
jp
sbb
inc
dec
push
(bad)
ins
xor
push
mov
push
outs
ins
mov
les
addr16
int3
dec
add
test
cmp
call
ret
mov
inc
or
retf
cs
jo
(bad)
xor
inc
and
ret
add
xor
push
retf
das
mov
out
in
stos
fwait
lds
cld
ficom
sti
sub
(bad)
cs
jg
outs
icebp
call
sbb
xchg
pop
int3
hlt
adc
popf
pop
js
jnp
jp
sbb
imul
mov
sbb
sbb
jb
xor
xchg
sbb
xchg
out
sub
or
rcl
jae
pop
mov
shl
and
or
jne
rol
sbb
daa
add
int3
sbb
es
scas
ret
mov
pop
scas
popf
cs
and
mov
push
arpl
and
mov
jbe
(bad)
imul
sub
mov
sub
ror
fiadd
dec
dec
jo
xor
jecxz
mov
retf
scas
jecxz
mov
push
or
dec
mov
out
hlt
retf
popf
ret
loopne
(bad)
aas
std
jmp
add
mov
jecxz
loopne
enter
cmp
pop
cmps
ficom
push
pushf
xor
scas
mov
je
cmps
mov
sar
cmps
inc
out
mov
cmp
adc
arpl
sub
cmps
clc
mov
mov
dec
jg
cmp
add
fnstcw
rcr
lods
test
mov
mov
xor
mov
mov
or
(bad)
mov
xor
mov
jae
cmp
lds
out
jne
xor
stos
cmp
div
retf
mov
lahf
xchg
add
retf
out
leave
jg
fbld
retf
sbb
jmp
inc
inc
add
jo
jb
jmp
arpl
pop
outs
xor
aaa
dec
jo
cmps
adc
je
pop
fwait
pop
mov
mov
iret
push
dec
xchg
test
dec
arpl
pop
mov
xor
xor
and
fcomp
inc
jg
push
out
sbb
inc
push
mov
jecxz
or
mov
push
xor
inc
adc
xor
sub
js
push
scas
add
test
xlat
std
call
out
or
outs
or
fs
das
movs
sbb
mov
lods
jo
jns
inc
lock
pop
dec
or
cmps
xchg
push
ins
mov
mov
cld
and
rcr
inc
mov
mov
retf
cmp
mov
leave
pop
jo
in
rcl
cld
adc
mov
aad
push
(bad)
jo
and
mov
lea
jns
add
mov
cmp
push
mov
xchg
repz
jo
adc
lds
push
adc
pop
test
pop
in
fistp
out
and
xlat
imul
rcr
movs
(bad)
(bad)
(bad)
movs
rcl
mov
add
mov
and
nop
std
dec
add
sar
mov
cmp
push
cmp
movs
sbb
adc
gs
fiadd
fwait
mov
int
(bad)
in
out
mov
dec
pop
adc
add
lock
in
shl
not
bound
and
fsubr
cdq
mov
imul
cld
not
and
mov
or
(bad)
fadd
in
dec
or
or
scas
icebp
out
(bad)
sub
cmp
sbb
ss
jbe
lods
fdivp
push
fidiv
test
stos
adc
out
(bad)
retf
(bad)
jmp
add
cmp
sub
test
mov
sbb
xchg
xor
call
sbb
xchg
call
inc
push
out
cmps
fnstcw
int3
cmp
pop
outs
ret
mov
out
pop
xchg
and
loop
xor
loopne
sbb
sub
or
test
cmp
inc
cmc
cmps
mov
push
aam
sub
pop
clc
or
push
nop
add
jl
call
popf
adc
cmps
jmp
fcomp
int
sub
je
jp
retf
ficomp
xchg
je
pusha
ins
mov
pop
cmp
lods
inc
xchg
(bad)
fadd
dec
out
retf
jb
out
inc
cmp
jg
mov
aad
gs
out
aaa
int
cli
imul
dec
imul
int3
sar
iret
adc
pop
bound
dec
stos
cld
sub
adc
sub
fwait
hlt
leave
inc
jae
xchg
or
out
lock
jo
or
sbb
push
outs
dec
sbb
pop
rol
mov
cmp
jecxz
pop
jecxz
popf
aad
imul
jnp
stos
mov
fcmovnbe
pop
push
loope
movs
inc
and
jge
mov
push
mov
push
mov
sbb
test
mov
shl
into
pop
mov
fld
inc
scas
mov
lock
push
addr16
ret
cmps
sbb
ja
ror
xchg
int
je
mov
es
nop
not
fs
dec
outs
push
pop
xlat
mov
mov
pusha
mov
(bad)
jecxz
sbb
add
pop
cmp
add
lds
rcl
jmp
loopne
call
xchg
adc
aaa
pop
pop
mov
cmp
add
xor
out
adc
push
mov
sub
(bad)
mov
clc
xchg
cmp
in
lea
stc
mov
fcmovb
test
jae
movs
jo
jmp
inc
jbe
inc
cmc
mov
addr16
ret
mov
xchg
or
push
inc
xchg
jge
and
xor
inc
stos
mov
mov
mov
and
sub
lds
popf
test
or
(bad)
ins
xchg
out
adc
loope
xchg
sub
test
mov
push
nop
cmc
pop
enter
ret
push
loope
dec
mov
mov
xchg
dec
push
aaa
adc
xchg
in
test
loop
(bad)
sub
cmp
jns
cmps
retf
(bad)
fisttp
movs
sub
lahf
xchg
popa
stc
xlat
adc
nop
sub
std
sub
aas
mov
(bad)
(bad)
mov
xchg
fcomp
fwait
stos
inc
icebp
mov
cld
mov
scas
arpl
ins
and
std
fcmovu
lods
adc
sbb
adc
xor
inc
iret
xor
xlat
xchg
outs
sub
or
popf
inc
jns
dec
leave
inc
xchg
lods
mov
jno
lock
push
imul
stos
pop
and
mov
adc
adc
push
mov
fwait
lock
out
out
out
stos
inc
sub
leave
mov
mov
fcomp
retf
(bad)
dec
out
mul
cmp
push
jb
je
test
xchg
mov
aas
fidivr
test
xchg
retf
xchg
sar
scas
jnp
sar
mov
into
aaa
cdq
mov
dec
clc
in
fidiv
je
push
popa
inc
or
add
fmul
int
cmps
mov
ins
fild
fucomip
push
adc
in
lock
(bad)
mov
pop
push
jae
leave
mov
movs
lds
fucomp
mov
and
fidiv
es
pushf
call
jne
push
cdq
jb
mov
cmc
inc
idiv
mov
movs
mov
daa
pop
clc
xchg
rcl
cli
(bad)
pushf
and
test
imul
fwait
icebp
call
xlat
(bad)
dec
(bad)
xchg
xchg
dec
pop
jbe
lds
jae
or
in
(bad)
ss
pop
cwde
and
sub
xlat
mul
test
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
lods
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
xlat
fsubp
mov
movs
loopne
mov
push
(bad)
inc
fbstp
mov
fdivr
in
adc
aam
fdiv
inc
push
out
stc
loop
mov
mov
mov
sbb
loop
xchg
stos
lock
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fld
xlat
ret
aam
lods
rcl
mov
xlat
repnz
rcl
movs
(bad)
xlat
(bad)
mov
add
mov
and
xchg
js
inc
adc
int
push
mov
stc
leave
(bad)
xchg
loopne
int3
pop
test
fidiv
jmp
enter
cs
mov
mov
call
jmp
mov
icebp
or
or
sub
dec
or
sahf
test
ins
imul
push
pop
nop
mov
cli
ror
push
mov
call
dec
mov
sub
in
repnz
sub
jp
xor
mov
cmp
xor
xor
std
movs
cmps
and
cmp
out
gs
xor
scas
mov
(bad)
popf
mov
dec
pop
retf
loopne
sbb
push
loopne
jnp
push
shl
inc
jg
mov
pop
push
test
stos
ds
mov
xor
cmp
lock
cdq
sbb
push
fild
push
mov
shl
push
(bad)
or
push
push
hlt
hlt
ss
dec
dec
jp
xor
scas
mov
xor
scas
call
test
repnz
add
xlat
test
(bad)
xlat
(bad)
movs
int3
(bad)
movs
enter
(bad)
xlat
(bad)
mov
add
jle
adc
add
shl
mov
push
add
ins
inc
xchg
jns
sbb
movs
push
mov
sub
into
xor
in
jle
add
or
popa
adc
cmove
jae
daa
clc
xor
fidiv
dec
(bad)
pop
add
scas
test
popa
push
fs
mov
fstp
inc
cmp
dec
jmp
call
push
xchg
sbb
cmp
dec
sub
jbe
dec
xchg
adc
jg
cwde
pop
sub
test
jbe
or
cmp
cs
stc
imul
jecxz
outs
rcl
adc
enter
pop
jge
xor
add
push
and
inc
daa
or
jnp
imul
fdivr
fcmovnu
mov
imul
xlat
(bad)
lods
(bad)
sar
movs
(bad)
fucomi
movs
(bad)
rcl
and
xchg
mov
cmps
adc
mov
mov
cmp
add
movs
xchg
test
push
xchg
iret
test
mov
push
stos
pop
cmps
xor
or
jbe
cmp
push
pushf
std
adc
sub
cmp
int
mov
bound
mov
retf
(bad)
jo
inc
rol
rol
push
je
jmp
loopne
mov
ja
iret
jecxz
(bad)
jecxz
jbe
lods
mov
into
imul
rol
(bad)
mov
or
mov
and
inc
adc
pop
cmp
pop
pop
int
xor
out
imul
out
jge
popf
fild
aad
les
int3
inc
add
pop
imul
pop
(bad)
push
xchg
xor
popa
out
pop
loop
push
mov
in
inc
sub
jle
hlt
push
jns
shr
jmp
retf
mov
add
out
nop
mov
jmp
push
mov
mov
bnd
rol
das
inc
inc
sbb
out
out
imul
scas
(bad)
jmp
adc
add
rcr
(bad)
and
mov
mov
sbb
pusha
cmp
in
test
in
psllw
or
mov
pop
mov
mov
test
adc
in
and
inc
inc
mov
neg
mov
shr
pop
sar
and
cmp
xor
popa
aas
or
pop
jne
not
jbe
into
popf
es
mov
rol
cwde
in
shr
jecxz
xlat
or
mov
inc
sar
mov
sub
popa
push
lock
out
adc
stc
mov
retf
xor
fnstsw
popf
push
and
rol
lea
dec
jecxz
push
loop
jb
mov
(bad)
mov
out
add
out
jge
rcl
ds
add
push
test
cmp
dec
aad
call
daa
and
bound
bswap
gs
pop
mov
dec
pop
imul
mov
sbb
xor
mov
mov
and
mov
nop
pop
sar
adc
loopne
repnz
jecxz
mov
xchg
sahf
mov
jnp
(bad)
jmp
int3
ret
in
dec
aas
mov
int3
ret
rol
rcr
xchg
rcr
mov
enter
jecxz
das
mov
pop
cmp
jo
es
or
push
test
dec
mov
mov
adc
(bad)
into
loope
xor
or
and
and
push
out
push
xchg
out
test
cmp
xchg
pop
fistp
mov
inc
test
cmp
adc
mov
out
inc
mov
sti
in
xchg
xchg
mov
test
or
outs
enter
cld
gs
xchg
sub
pop
add
ficomp
stos
pop
sub
mov
jecxz
invd
push
xor
out
je
div
retf
jg
mov
in
or
pop
mov
jae
or
cmps
mov
fdivr
in
(bad)
ficom
loop
int
pop
outs
fwait
shl
jecxz
push
adc
mov
scas
test
popf
sahf
in
cmps
bound
xor
push
add
mov
inc
pop
adc
fs
js
mov
retf
jl
sub
sar
inc
shl
push
vpsadbw
adc
sahf
pop
xor
rcl
adc
inc
mov
ins
adc
cli
sub
(bad)
cmps
pop
dec
rcl
xor
cs
(bad)
xlat
push
push
cdq
cmp
xlat
test
(bad)
fwait
cdq
rcl
pop
outs
adc
add
aad
add
xchg
ss
int
cmp
xlat
jle
sub
fdiv
push
cmp
stos
push
lods
(bad)
loop
sub
xor
push
jl
inc
xor
mov
push
mov
cmps
push
pusha
mov
cmc
(bad)
popf
ret
pop
xchg
cs
xchg
out
or
adc
repnz
jg
xlat
stos
mov
add
loope
inc
push
or
sub
sahf
push
test
jmp
mov
add
lahf
ins
adc
enter
or
test
xchg
xor
push
mov
fcomp
inc
mov
loopne
push
jae
sub
pusha
push
fsub
scas
mov
popa
adc
int
xor
cmc
mov
in
aad
popa
stos
cli
mov
xchg
and
pop
test
mov
das
cmp
jmp
(bad)
mov
int3
cmp
push
mov
mov
or
movs
dec
int3
pop
iret
push
lods
ret
and
push
sbb
mov
push
in
test
adc
sbb
add
push
jb
shr
fist
das
push
aam
gs
cmp
leave
jmp
sti
popa
xor
into
push
mov
mov
add
lock
test
arpl
dec
adc
jecxz
and
lea
fsub
push
enter
mov
pop
scas
pop
xor
int3
cli
jns
fiadd
jbe
xlat
(bad)
inc
pop
loope
jp
loopne
adc
fs
out
and
xchg
in
mov
sbb
arpl
ja
fnstcw
mov
test
sbb
enter
fwait
add
add
(bad)
fstp
adc
inc
mov
cmp
hlt
jb
mov
pusha
jle
call
in
xlat
imul
or
js
fs
push
loop
push
or
or
test
lahf
add
mov
cmps
aas
push
jae
sbb
sub
mov
or
stc
push
or
pusha
mov
sbb
fst
out
sub
enter
sbb
add
fstp
xchg
(bad)
cmp
std
mov
(bad)
test
sar
retf
add
int3
fcomi
test
enter
aam
fidiv
in
(bad)
loop
in
(bad)
mov
out
in
call
jecxz
in
jecxz
jmp
xchg
xchg
stos
(bad)
mov
fst
repnz
xlat
out
mov
(bad)
ficom
call
jecxz
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmc
xchg
xchg
cmps
in
push
loope
aad
mov
enter
xlat
nop
mov
rcl
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
mov
fcomp
repnz
in
in
movs
test
cli
mov
rcl
movs
(bad)
xlat
(bad)
mov
int3
xlat
repnz
fadd
add
(bad)
out
mov
push
push
shl
push
scas
movs
int3
mov
xchg
loopne
jle
(bad)
dec
lods
(bad)
out
xor
aam
cdq
les
addr16
lds
pop
inc
or
test
xchg
out
sbb
fwait
xchg
and
bnd
adc
jecxz
inc
mov
mov
sbb
sbb
fwait
rcl
and
aad
jo
jecxz
js
in
fidivr
rcl
mov
repz
sub
(bad)
fldenv
mov
aaa
cs
and
push
inc
mov
mov
jp
call
fistp
in
or
in
adc
cmp
sub
int3
mov
and
clc
dec
fcomp
iret
inc
sahf
and
or
jmp
mov
sahf
pusha
dec
pop
(bad)
stos
cmp
lods
push
dec
cmc
movs
jecxz
and
test
cmc
sub
lock
adc
call
adc
inc
or
pop
stos
outs
xchg
mov
adc
test
data16
jmp
push
xor
jb
in
(bad)
cdq
push
mov
fistp
jae
xor
loop
pop
and
fistp
cmc
jbe
or
ss
jb
imul
lods
fwait
cmp
popa
xchg
xor
dec
jle
test
hlt
push
outs
das
lea
or
fcmove
mov
hlt
jmp
mov
mov
jmp
add
out
lea
adc
jmp
movs
(bad)
push
aam
push
pop
test
(bad)
dec
enter
fldpi
aaa
adc
pop
mov
adc
jmp
jecxz
mov
rcr
repnz
ins
jmp
in
das
les
mov
sub
repz
jmp
addr16
mov
mov
sub
enter
jo
push
mov
scas
icebp
cmp
ror
test
repnz
aas
jp
and
aam
out
movs
dec
cmp
movs
cwde
lods
cld
rol
std
movs
shl
add
cmps
cmp
(bad)
idiv
int3
xlat
cli
movs
(bad)
(bad)
test
fadd
mul
test
(bad)
fcom
and
xlat
cli
repz
push
lods
(bad)
mov
dec
lea
mov
frstor
inc
aam
sbb
fnsave
mov
sti
jecxz
mov
or
inc
add
ss
cwde
adc
dec
push
jp
push
mov
ret
pop
jae
jb
pusha
lds
adc
mov
call
nop
mov
xchg
sub
punpckhwd
aaa
jnp
sar
adc
mov
rcl
lahf
iret
sub
sbb
mov
mov
mov
mov
adc
shr
cdq
push
pop
iret
adc
scas
jp
mov
cmp
mov
(bad)
jb
iret
in
test
repnz
test
fld
push
jle
test
jecxz
aad
cmp
add
dec
and
inc
pop
and
ds
and
mov
sti
pusha
xchg
pop
in
mov
sbb
dec
mov
repnz
jae
out
or
aad
mov
retf
cmp
scas
stos
mov
ins
sub
pushf
lock
(bad)
rcl
test
or
cmps
adc
mov
repz
cmp
jo
dec
das
jg
cmp
adc
imul
adc
lea
xor
lods
push
repz
sahf
cli
test
mov
stos
dec
push
adc
cmp
or
push
sub
sub
mov
ins
push
mov
mov
sti
int3
vmread
xchg
add
jb
mov
xchg
pushf
inc
in
aas
pop
lock
mov
rcr
mov
jo
jno
xchg
fsubr
add
pusha
cmps
mov
sub
and
add
dec
pushf
les
aam
rcl
inc
jmp
pusha
and
dec
ret
into
fs
(bad)
std
mov
scas
data16
test
mov
arpl
and
js
icebp
pop
fld
(bad)
xor
call
jnp
nop
jmp
aaa
pop
(bad)
push
stc
xor
shl
mov
cmp
sar
fdiv
shl
jae
enter
lea
dec
(bad)
add
cmp
push
jecxz
(bad)
adc
out
pushf
mov
cmp
sbb
nop
and
adc
call
sub
or
jae
jmp
ror
std
cwde
sub
enter
pushf
cmp
and
mov
add
movs
(bad)
repnz
(bad)
(bad)
mov
enter
aam
out
xchg
push
jmp
push
jbe
adc
repnz
push
cli
inc
sub
add
test
push
clc
cmp
pop
in
(bad)
int
shl
and
xlat
pushf
gs
mov
leave
dec
fild
inc
xchg
add
push
fcom
fsubr
imul
pop
jge
or
mov
loope
ss
addr16
imul
sub
stos
pop
ds
ror
pop
dec
jle
xchg
in
popa
ss
cmp
add
dec
fcom
neg
ja
mov
ret
ss
jnp
lods
shl
test
aam
(bad)
mov
(bad)
xlat
repnz
aam
jbe
or
jmp
add
jb
add
std
mov
cmp
(bad)
xor
mov
out
icebp
mov
out
ret
cmp
adc
(bad)
repz
push
ret
cmp
addr16
inc
mov
sbb
and
lds
ins
sbb
adc
adc
ror
pop
data16
daa
(bad)
mov
mov
inc
mov
mov
cmp
scas
sub
outs
and
jb
cli
in
scas
sbb
test
mov
adc
jmp
mov
and
mov
sbb
cmp
xor
icebp
add
jmp
cmp
or
and
popa
adc
push
or
mov
adc
inc
popa
je
pop
jmp
pop
mov
ins
push
mov
cld
xchg
or
out
ss
jp
inc
xchg
stos
ins
retf
jmp
add
mov
mov
ins
mov
adc
jl
fnstenv
sub
adc
xchg
jnp
push
mov
outs
or
mov
push
int
scas
jmp
aas
into
push
mov
(bad)
fstp
pop
test
cmc
jl
stos
scas
and
add
icebp
hlt
icebp
mul
or
in
loopne
shl
cli
pop
shl
xchg
iret
mov
xchg
scas
(bad)
pop
push
jecxz
retf
jno
cmp
out
mov
xchg
loope
mov
dec
jns
inc
push
loop
jge
iret
sbb
cdq
rcl
xchg
cmp
loopne
inc
adc
mov
jp
test
and
inc
mov
push
push
(bad)
xor
mov
mov
cmp
or
clc
jo
add
jns
fild
mov
(bad)
scas
add
pusha
mov
outs
enter
pop
cmc
or
icebp
add
mov
xlat
push
nop
add
inc
push
inc
lods
sub
mov
dec
adc
(bad)
out
push
dec
pusha
lods
fwait
sbb
jge
mov
shl
adc
popa
arpl
lahf
xor
xor
mov
inc
loopne
enter
outs
cmp
push
movs
mov
push
idiv
aaa
dec
scas
jbe
xchg
nop
sbb
pop
int
push
mov
fwait
dec
jmp
ins
mov
jb
cmp
inc
loop
jg
dec
test
xchg
sbb
adc
enter
inc
je
xor
mov
mov
push
into
es
add
mov
in
aaa
loopne
jmp
mov
lods
inc
std
xlat
mov
pop
push
adc
aad
cmp
aad
cmp
push
(bad)
xor
sub
xor
adc
add
les
add
jmp
shr
movs
hlt
(bad)
movs
(bad)
retf
(bad)
mov
xlat
repnz
(bad)
fucomip
loope
adc
imul
xchg
in
inc
adc
(bad)
fidiv
arpl
fdiv
into
push
pop
add
(bad)
test
xchg
in
out
cmp
pop
ficomp
ret
push
push
(bad)
cmc
movs
or
test
stos
jle
add
sbb
xlat
pop
jecxz
add
mov
into
xchg
das
cmps
cmp
sahf
(bad)
jb
pop
xor
jnp
ja
jge
(bad)
or
sahf
and
xchg
cli
push
xchg
sub
sub
mov
jmp
push
clc
jbe
or
les
hlt
outs
sub
(bad)
lahf
imul
in
jge
and
out
adc
jne
ficomp
pop
imul
sbb
dec
inc
gs
push
aas
fwait
pop
adc
jl
cwde
xchg
iret
test
jno
xchg
ja
jg
push
mov
pop
leave
mov
or
aam
or
loopne
leave
(bad)
call
stos
imul
aad
pcmpeqb
xchg
inc
add
jo
out
test
mov
and
mov
(bad)
aas
repz
vmovaps
ret
mov
pusha
pop
cld
cmp
sbb
or
mov
xor
and
imul
and
pop
pop
or
out
out
and
test
xchg
or
mov
jo
push
mov
sbb
jbe
stc
push
test
in
or
ds
mov
pop
ss
and
cmp
cli
inc
inc
cmp
inc
push
push
test
in
imul
jnp
ja
ins
ret
loope
test
test
add
shr
add
adc
fld
scas
shr
xchg
inc
in
mov
rcl
jo
shl
xchg
dec
adc
xchg
ins
adc
xchg
scas
push
int3
ins
xchg
mov
sbb
movs
pop
outs
mov
mov
dec
mov
add
xor
inc
rol
shl
jmp
inc
sbb
sbb
jmp
scas
or
mov
pop
and
dec
mov
cmp
(bad)
int3
xchg
sbb
adc
xor
jmp
cwde
mov
ss
shl
das
push
(bad)
lahf
xor
es
jle
jae
mov
sti
sub
pop
(bad)
movq
not
in
pop
mov
and
push
loop
(bad)
mov
fistp
or
dec
imul
push
adc
mov
rcl
scas
in
outs
into
mov
sbb
sbb
int
add
mov
xchg
dec
dec
(bad)
sbb
iret
mov
pop
leave
stos
in
add
aaa
ins
ret
jb
ins
fist
arpl
and
loopne
stos
ror
aam
es
jle
and
cmps
(bad)
aam
inc
div
add
xchg
jae
or
and
cwde
imul
cmp
imul
xor
inc
and
mov
int3
jmp
mov
jne
xchg
mov
dec
mov
test
mov
pop
xor
or
mov
adc
inc
fmulp
push
mov
pop
int3
or
les
inc
ret
ficom
lea
push
or
fdivr
loopne
sbb
inc
leave
aam
push
inc
xchg
jb
aad
loope
and
sbb
cld
add
adc
mov
fidiv
ficomp
mov
push
cmp
mov
jg
call
pop
sub
cld
out
jecxz
xor
inc
mov
dec
mov
mov
(bad)
sub
fs
push
inc
and
mov
(bad)
int
add
add
xlat
outs
lods
or
arpl
jnp
and
dec
retf
outs
xor
icebp
cmp
adc
cmp
aaa
dec
push
cmc
lods
loope
sbb
push
call
scas
pop
and
adc
into
ins
adc
cmp
rcl
jmp
std
daa
cdq
ds
jne
mov
les
adc
sub
pop
pop
repnz
mul
pop
jae
pop
fld
xchg
jne
mov
inc
or
mov
pop
and
fistp
jae
ins
jle
pop
pop
xchg
outs
les
sti
addr16
cmp
loop
clc
fdiv
ins
adc
out
push
mov
(bad)
aad
mov
scas
jecxz
jb
not
in
in
out
mov
ins
fs
mov
and
pop
xchg
aad
jecxz
fldcw
or
enter
les
repz
xchg
and
mov
loopne
sbb
call
cmp
and
sub
fisubr
rol
sbb
nop
jae
inc
cmp
adc
jl
jns
pop
mov
rcl
imul
dec
les
lds
stos
jae
lds
dec
loop
(bad)
xchg
ins
adc
sub
or
movs
push
and
popf
popf
test
pop
aas
pop
mov
pop
test
scas
outs
push
cdq
jbe
rcl
mov
cmps
adc
add
inc
or
ss
cld
xlat
cs
dec
cmp
jg
push
pop
xor
xor
std
mov
and
mov
jne
push
adc
aaa
jmp
push
shr
je
vmovdqu
sbb
test
cld
or
pop
stc
or
push
pop
ins
inc
xchg
loope
push
ret
adc
repz
adc
cmp
push
xchg
or
mov
cmc
lods
xor
out
xchg
dec
clc
or
cmp
ss
shr
cld
xchg
ss
sbb
inc
ret
jns
push
mov
call
cmp
repz
inc
jg
pop
mov
adc
pusha
pusha
pop
clc
cmp
shr
or
(bad)
or
and
mov
jne
and
adc
pop
inc
push
sar
out
xlat
inc
mov
ins
mov
mov
sub
mov
mov
outs
mov
inc
test
push
or
ins
lahf
pop
test
push
iret
and
push
in
push
and
jb
test
out
sti
clc
jecxz
sub
pop
xor
gs
add
push
call
xor
adc
outs
push
push
cmps
nop
sahf
aas
sub
mov
nop
rcr
add
ret
enter
xchg
cmp
jae
mov
cmps
and
ins
fdiv
test
sti
xor
push
add
(bad)
div
lods
rcr
movs
enter
(bad)
sar
loope
xlat
jp
rcl
and
mov
add
sar
retf
(bad)
sub
sbb
add
push
sub
fs
cdq
xchg
xchg
jl
(bad)
push
pop
adc
push
sbb
mov
adc
pop
cmps
outs
fcmovnb
xchg
call
or
(bad)
loop
cmps
js
fisub
cmp
fsub
dec
mov
fs
sbb
test
lea
(bad)
push
mov
inc
repz
cmp
loopne
mov
stos
sbb
rcr
push
sub
hlt
cs
addr16
data16
sbb
sub
jge
int
leave
sbb
push
cmp
cmps
loopne
dec
ins
popf
std
int
(bad)
loop
shl
and
enter
push
cs
jecxz
adc
aas
mov
ret
jle
sub
(bad)
outs
movs
xor
push
(bad)
pop
xchg
push
sub
mov
aaa
jns
mov
push
jg
lods
mov
enter
mov
je
xchg
xor
iret
mov
clc
sub
sbb
fs
fldcw
or
pop
es
add
sar
or
retf
iret
cmc
adc
and
xor
jbe
retf
scas
(bad)
lods
in
in
xchg
jmp
fiadd
jns
jne
xor
jnp
pop
dec
repnz
out
adc
arpl
retf
cli
jl
fnstsw
das
or
mov
mov
and
sub
mov
mov
shr
lds
scas
inc
clc
mov
das
lea
cs
and
inc
sub
cdq
pop
dec
sub
or
mov
mov
sbb
jne
or
aad
cmp
mov
cmp
mov
mov
movs
(bad)
jbe
mov
aas
sbb
pushf
sub
popf
inc
xor
pusha
jecxz
sub
(bad)
and
jge
in
cmps
popa
rol
imul
pop
mov
add
mov
scas
jmp
add
add
cmp
and
icebp
xchg
add
xchg
or
in
add
fisub
adc
scas
lds
shr
lods
xchg
push
ds
in
sub
push
mov
(bad)
daa
cmp
add
or
push
cmp
mov
xlat
mov
sahf
loop
or
sub
sbb
add
push
jmp
cmp
fild
lods
in
iret
rcr
or
call
inc
jb
push
sub
xor
mov
xor
mov
mov
xchg
push
test
inc
cmp
add
cmp
les
je
or
mov
loop
cmp
xchg
test
int
mov
in
(bad)
imul
out
shl
(bad)
retf
mov
mov
jnp
rcl
xchg
sbb
in
aaa
sub
in
movs
stos
cwde
pop
push
mov
gs
push
and
or
adc
and
outs
add
xchg
mov
mov
adc
or
arpl
jmp
add
(bad)
push
and
call
sub
mov
enter
push
imul
movs
das
mov
outs
xchg
sti
sub
in
in
in
mov
adc
mov
je
outs
cmp
mov
jo
or
cmps
cs
in
push
or
ror
sti
ins
not
cdq
fnsave
(bad)
sbb
fild
icebp
shl
pop
push
cs
and
out
mov
cmp
xchg
rol
gs
add
push
inc
lahf
push
inc
movs
add
and
js
lds
test
pusha
adc
ss
mov
js
stos
dec
cld
and
lock
push
or
iret
jnp
ret
pop
into
inc
cli
and
or
(bad)
xor
pop
pusha
mov
dec
ins
xchg
cmps
cmp
test
jge
pop
push
push
push
inc
and
das
repz
loopne
xor
loop
cmps
or
sahf
call
js
(bad)
fld
fwait
push
inc
mov
call
pop
repz
dec
pop
clc
into
sbb
sub
xlat
mul
test
call
jecxz
ins
mov
xor
in
mov
mov
push
mov
outs
add
jb
sub
(bad)
lock
inc
sub
fcomp
sbb
(bad)
stos
inc
push
jmp
jns
push
jns
js
xor
cmp
jnp
clc
mov
fiadd
adc
inc
jo
ja
mov
jp
movs
pop
cld
out
and
std
cmc
mov
cli
ins
mov
mov
cmp
(bad)
test
rcr
movs
(bad)
sar
mov
adc
rcl
lds
and
xlat
cli
dec
test
clc
fsub
neg
not
push
sub
pop
pusha
enter
out
cmps
(bad)
xor
pop
aad
jmp
mov
cwde
xlat
les
gs
jmp
cdq
pop
stos
cmps
ror
ss
xchg
ficomp
pop
call
ficom
or
add
ror
mov
cs
inc
sub
repz
dec
rcl
(bad)
test
xor
mov
enter
gs
fdiv
inc
fcomip
in
mov
sbb
cmp
cmp
movs
movs
call
(bad)
cmp
(bad)
es
js
rol
aam
xor
fwait
iret
mov
xchg
jp
into
int
pop
cld
idiv
pushf
mul
cld
and
cs
mov
sbb
jge
push
fidiv
push
jecxz
into
pop
bound
mov
add
test
rcl
movs
(bad)
sar
loope
xlat
(bad)
mov
test
clc
and
xlat
cli
or
inc
iret
cmps
out
mov
push
outs
mov
ss
or
stos
sbb
pop
fsub
xor
outs
hlt
dec
es
shl
js
mov
dec
adc
push
mov
rcr
call
push
shr
inc
ret
xor
mov
aas
push
pushf
pop
jl
sub
sub
pop
or
enter
cdq
jne
ins
jae
push
pop
repnz
sbb
out
pop
dec
daa
popf
shr
ret
mov
adc
mov
jl
jecxz
ins
nop
sub
(bad)
and
pop
(bad)
and
push
dec
das
cmp
iret
mov
in
cs
dec
sbb
sbb
pusha
idiv
mov
rol
je
sar
cli
pop
pop
jne
cmp
xor
cmps
iret
imul
and
retf
add
loop
(bad)
std
add
mov
push
mov
mov
(bad)
stos
pop
test
out
adc
fcomip
ret
int
push
int
dec
xor
and
test
pop
jae
dec
xlat
push
inc
dec
or
pop
shl
jg
int
xchg
inc
adc
imul
mov
push
pop
ret
es
aad
movs
mov
call
bound
adc
inc
adc
dec
dec
mov
and
lahf
add
sti
les
(bad)
not
dec
icebp
popa
sbb
int3
mov
mov
mov
mov
popf
mov
fbstp
scas
xchg
sub
ins
inc
add
jb
fs
xor
push
cmp
jo
inc
xchg
cmp
jle
in
ins
mov
sub
mov
retf
in
or
jno
or
cmp
jmp
pop
xchg
push
test
stc
sub
aad
scas
(bad)
sar
repnz
push
fiadd
and
scas
push
mov
sbb
(bad)
rol
inc
movs
test
xchg
xchg
out
sub
(bad)
or
imul
dec
add
rol
mov
(bad)
(bad)
mov
adc
and
(bad)
jg
rcl
loop
adc
test
nop
std
mov
cmp
retf
adc
int
cmp
repz
xor
fld
ret
push
cmps
mov
xchg
es
push
dec
(bad)
stos
int3
rcr
dec
lds
rol
add
rcl
pop
xor
pop
clc
out
add
pop
repnz
sti
test
mov
mov
pusha
adc
into
sbb
pop
cli
les
rcl
imul
cmp
sbb
add
push
push
jmp
into
es
icebp
sbb
push
cmc
mov
xor
jge
mov
xor
xlat
or
mov
xor
sti
(bad)
pop
add
retf
or
es
fwait
add
in
add
push
xor
int
sub
mov
push
mov
cmp
xchg
das
retf
push
retf
loope
fisub
jae
mov
or
es
inc
dec
or
in
cmc
cmp
loop
movs
mov
mov
push
shl
xlat
loop
cmp
add
das
add
in
adc
jno
and
sbb
push
dec
mov
iret
jo
retf
ins
cmp
mov
cmp
and
dec
mov
(bad)
jg
inc
xor
add
ret
pop
jae
aaa
jo
(bad)
retf
mov
inc
mov
mov
in
mov
pop
std
mov
sahf
retf
shl
es
(bad)
mov
pop
arpl
sub
and
sbb
push
xor
jecxz
jg
rcr
adc
repz
int3
mov
dec
adc
popf
div
ret
sbb
inc
les
mov
add
out
xchg
cmps
xchg
shl
mov
xlat
pop
mov
int3
jecxz
nop
push
push
ficomp
bound
mov
into
(bad)
or
(bad)
mov
ins
add
mov
test
fdivr
jp
mov
push
xor
fidivr
push
int3
jmp
inc
call
cmp
sbb
scas
push
sub
mov
fidiv
sbb
dec
mov
in
xor
js
inc
(bad)
imul
push
jae
fucomp
inc
sub
enter
popa
pop
lock
in
iret
xchg
inc
pop
cmps
dec
not
repnz
push
fstp
aam
mov
or
dec
es
lods
push
mov
jmp
lods
push
stos
ds
and
mov
xchg
fsub
repnz
sbb
popa
gs
and
xchg
rcr
xchg
mov
jmpw
mov
cmps
repnz
std
mov
mov
mov
scas
sub
mov
adc
int
je
scas
mov
sub
cmp
xor
sti
pop
mov
pop
fisubr
enter
into
add
mov
fs
retf
out
fmul
fimul
push
jne
xchg
dec
mov
dec
jb
movs
add
jo
pop
shl
pop
add
xor
div
sbb
push
ror
cmps
cli
test
cdq
cld
mov
scas
push
mov
(bad)
xor
test
(bad)
adc
lea
add
jge
das
xchg
shl
pop
mov
data16
mov
test
sbb
cmps
fmul
adc
jb
pop
or
loopne
or
fs
mov
mov
loope
push
pop
cmp
cmp
xor
pop
jecxz
jae
loopne
jb
cs
fstp
dec
push
jmp
xchg
dec
(bad)
lds
fldenv
std
dec
sub
jg
or
punpckldq
pusha
call
imul
xchg
cmp
repz
cmp
dec
push
mov
sbb
imul
retf
rcl
mov
mov
mov
loope
pop
jo
loope
sahf
push
jp
push
pop
iret
in
call
mov
aad
addr16
and
retf
sbb
test
push
(bad)
xchg
mov
pop
call
sub
push
jmp
push
or
push
or
dec
adc
cmp
mov
imul
mov
imul
sub
or
mov
push
push
enter
push
mov
jmp
pusha
mov
adc
aaa
std
out
test
mov
add
test
test
inc
inc
inc
pop
or
add
pop
mov
inc
idiv
sub
(bad)
xchg
ins
in
stc
mov
sbb
adc
pop
pop
jg
dec
xor
repz
adc
sbb
sub
lods
xor
sbb
inc
cmp
leave
shr
mov
xor
in
sbb
mov
outs
fisub
fld
sbb
outs
out
in
sub
test
jmp
sub
adc
cdq
test
ret
adc
dec
lea
icebp
fimul
test
rcr
xchg
jecxz
push
retf
inc
push
push
daa
leave
adc
(bad)
fcom
adc
inc
mov
xchg
enter
mov
cmp
pusha
fild
sub
xor
nop
pop
jae
loop
movs
in
movs
push
adc
mov
mov
into
enter
mov
fild
mov
int
aad
jo
and
xchg
iret
jno
mov
cmp
adc
loopne
dec
out
jbe
test
loopne
sub
sar
daa
pop
inc
mov
lock
sub
pushf
loop
cmp
jo
cld
outs
ins
fidivr
inc
sub
mov
daa
xor
jb
jp
mov
fsub
and
jne
push
mov
int3
mov
xor
dec
jo
adc
inc
mov
leave
or
or
inc
jne
hlt
aad
test
jp
sub
add
adc
icebp
dec
and
ror
outs
les
add
xor
fnsetpm(287
cli
(bad)
xor
test
mov
std
int
dec
sbb
and
lds
mov
lds
sub
pop
pop
movs
(bad)
mov
lds
movs
movs
lds
(bad)
lods
les
movs
lds
lods
(bad)
(bad)
loop
(bad)
lods
(bad)
xlat
mov
scas
les
call
scas
les
movs
lds
scas
les
pushf
movs
(bad)
scas
les
movs
lds
xor
xlat
lock
lds
inc
stos
les
es
les
pop
movs
lds
int
(bad)
mov
and
lds
mov
les
push
inc
jmp
lds
jmp
(bad)
idiv
scas
les
stos
lds
(bad)
movs
(bad)
xlat
(bad)
fcmovb
inc
and
les
and
(bad)
xlat
(bad)
movs
les
scas
les
ss
lds
(bad)
movs
(bad)
xlat
(bad)
fcmovb
inc
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
add
lds
(bad)
movs
(bad)
xlat
(bad)
fcmovb
mov
and
(bad)
xlat
add
(bad)
xlat
(bad)
movs
les
lods
les
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
fcmovb
jmp
and
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
movs
les
mov
lds
lods
lds
(bad)
fcmovb
ret
add
les
add
les
std
movs
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
scas
les
pushf
lods
lds
movs
(bad)
movs
(bad)
xlat
(bad)
fcmovb
xchg
and
les
and
(bad)
xlat
(bad)
movs
(bad)
xlat
(bad)
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
jmp
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
jmp
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
jmp
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
jmp
lds
movs
(bad)
movs
(bad)
xlat
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
jmp
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
cld
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
cld
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
cld
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
cld
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
les
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
std
scas
les
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
std
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
std
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
std
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
movs
(bad)
xlat
std
scas
les
pushf
stos
lds
movs
lds
(bad)
fcmovb
xchg
and
les
add
(bad)
xlat
(bad)
mov
add
push
adc
loop
clc
or
movs
rcl
jmp
cdq
mov
mov
loop
(bad)
mov
or
add
push
xlat
(bad)
cmp
or
adc
cli
and
xor
movs
or
(bad)
rcl
cli
and
fs
movs
sbb
loop
mov
jmp
aad
jmp
cdq
mov
cbw
inc
jmp
sti
mov
mov
std
jmp
xchg
mov
mov
std
movs
les
mov
mov
(bad)
jmp
aad
(bad)
jg
jmp
mov
stos
mov
std
jmp
popf
mov
mov
mov
loop
iret
jmp
shl
mov
sti
cmp
lds
mov
mov
js
(bad)
fidiv
mov
cdq
fsubr
in
mov
mov
call
jmp
cdq
mov
jb
icebp
stos
(bad)
neg
pop
adc
jmp
popf
mov
mov
fucomip
mov
mov
mov
mov
test
jno
or
(bad)
jmp
aad
mov
sar
jge
xlat
dec
mov
enter
xlat
(bad)
jmp
aad
jmp
cdq
mov
mov
ss
jnp
in
rcr
in
(bad)
xlat
xor
fcom
push
es
mov
mov
mov
mov
jmp
mov
not
cmp
mov
jmp
aad
in
retf
sbb
mov
sti
aad
jae
xor
and
mov
sbb
bound
jl
das
sbb
push
and
push
imul
mov
cwde
lea
iret
test
jae
and
fs
out
fld
push
(bad)
cmp
(bad)
jmp
cdq
mov
mov
mov
jmp
aad
xchg
mov
movs
loope
repz
or
aad
jmp
cdq
mov
mov
enter
mov
mov
mov
or
pop
mov
adc
mov
lock
repz
pop
pop
sahf
xchg
(bad)
cmp
lds
mov
mov
shl
es
jmp
popf
mov
mov
add
adc
and
mov
(bad)
jmp
repz
mov
ins
lds
jmp
neg
aam
(bad)
sbb
push
test
jmp
int
in
mov
test
(bad)
fidiv
movs
mov
(bad)
es
aaa
inc
add
repnz
add
mov
jmp
cdq
mov
ss
or
or
aad
jmp
cdq
mov
mov
(bad)
and
loop
and
mov
mov
mov
loopne
sub
movs
les
mov
mov
loopne
sbb
std
movs
les
mov
mov
jb
aad
(bad)
sub
push
sub
stos
(bad)
cmp
lds
mov
adc
pop
jb
test
mov
jmp
mov
jmp
cdq
mov
mov
mov
imul
mov
mov
mov
ficomp
(bad)
jmp
aad
mov
rcr
mov
mov
mov
mov
cwde
jmp
(bad)
mov
mov
mov
rcr
mov
mov
mov
ficomp
(bad)
jmp
aad
jmp
cdq
mov
mov
cmp
jmp
jne
push
(bad)
push
pop
and
adc
fild
cs
pop
test
movs
jbe
add
jge
adc
sub
(bad)
jmp
int
stos
mov
out
jmp
test
mov
loop
aas
jmp
shl
mov
std
jmp
xchg
jmp
cdq
mov
ficomp
(bad)
jmp
aad
jmp
cdq
mov
mov
jmp
aam
imul
mov
mov
mov
mov
fsubr
gs
mov
mov
mov
rcr
std
jmp
cmps
mov
mov
mov
mov
dec
push
test
jmp
int
jmp
cdq
mov
mov
mov
mov
mov
imul
mov
mov
mov
mov
add
lds
(bad)
cmp
iret
add
(bad)
in
aad
adc
ret
rcl
movs
lds
jb
fadd
mov
mov
(bad)
jmp
aad
cdq
mov
xchg
mov
test
test
loope
cmp
movs
rcl
neg
sti
loop
and
inc
std
jmp
xchg
mov
mov
mov
or
ret
int3
(bad)
jmp
mov
mov
mov
(bad)
jmp
shl
jmp
stc
mov
mov
mov
loop
jb
rol
dec
fwait
mov
mov
mov
xchg
sbb
jmp
retf
mov
mov
movs
jmp
stc
mov
mov
cli
jmp
fnsave
jmp
mov
mov
xchg
sbb
jmp
jmp
mov
call
mov
cli
jmp
fnsave
jmp
mov
mov
mov
(bad)
jmp
shl
imul
mov
mov
adc
rol
jmp
mov
test
int
(bad)
jmp
shl
test
fidivr
and
hlt
out
fprem
xchg
push
cmp
and
stos
cli
movs
les
sub
add
fadd
sbb
aam
pop
jmp
or
mov
mov
mov
mov
inc
call
adc
jle
adc
mul
lds
ss
neg
dec
push
add
mov
repz
sar
movs
les
sub
add
clc
rol
pop
retf
push
or
mov
mov
mov
mov
inc
sbb
add
pop
push
or
mov
mov
mov
sub
lds
repz
neg
inc
push
add
mov
mov
jne
clc
cmps
fs
cmp
ss
jmp
test
ds
daa
arpl
(bad)
neg
inc
push
add
mov
mov
mov
pop
fmul
neg
add
call
push
or
mov
mov
mov
mov
ficomp
cli
jmp
xlat
mov
mov
mov
mov
std
xchg
les
cmps
rol
inc
movs
vxorps
cmp
xor
or
pop
push
out
lea
test
jmp
int
jmp
cdq
mov
mov
inc
movs
lds
mov
mov
jmp
jmp
mov
mov
mov
cmp
(bad)
xlat
mov
mov
mov
mov
sti
es
cmp
sbb
mov
mov
cmp
lds
jmp
div
repnz
std
sti
cmp
mov
mov
mov
mov
(bad)
jmp
xlat
mov
mov
lea
stc
(bad)
(bad)
xlat
push
pop
jmp
mov
mov
mov
aad
stc
stc
(bad)
mov
ret
repnz
xlat
enter
call
gs
call
jmp
cdq
mov
mov
pop
jmp
stc
mov
mov
mov
mov
loop
lds
popa
(bad)
mov
and
jmp
test
das
jmp
push
jecxz
lds
int
ss
add
xchg
jmp
mov
loop
pop
push
mov
sub
ins
loope
mov
mov
(bad)
jecxz
(bad)
jecxz
orps
push
and
(bad)
jecxz
(bad)
jecxz
jecxz
mov
mov
(bad)
jecxz
(bad)
jecxz
inc
push
cli
rcr
and
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
popa
inc
in
mov
push
inc
mov
xor
(bad)
jecxz
push
xlat
jecxz
(bad)
jecxz
(bad)
fist
mov
push
(bad)
jecxz
(bad)
fwait
push
cmp
or
push
pop
push
push
pminsw
jl
push
or
cmp
lods
cmp
cmp
cmp
push
mov
ror
mov
push
(bad)
jecxz
(bad)
jecxz
dec
push
pop
int
outs
stos
mov
lods
test
push
xor
inc
mov
sbb
pop
mov
or
(bad)
jecxz
(bad)
and
xchg
push
cdq
sbb
push
scas
and
pop
cli
rcr
and
(bad)
jecxz
(bad)
mov
inc
mov
int
push
setp
push
(bad)
jecxz
(bad)
add
inc
cwde
jecxz
(bad)
jecxz
orps
or
jl
lods
cmovno
push
inc
pushf
lods
push
setp
or
jl
lods
cmovno
pop
cmp
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
rcpps
mov
push
(bad)
and
mov
adc
(bad)
jecxz
mov
push
lods
mov
popf
outs
add
mov
loop
(bad)
jecxz
(bad)
jecxz
(bad)
pop
ins
loope
mov
push
(bad)
jecxz
(bad)
jecxz
orps
mov
loop
(bad)
jecxz
(bad)
jecxz
jmp
push
sbb
sbb
or
(bad)
sbb
adc
inc
aam
push
(bad)
jecxz
orps
hlt
mov
push
cmp
bound
jecxz
(bad)
jecxz
(bad)
jecxz
jmp
or
push
pminsw
push
(bad)
jecxz
(bad)
jecxz
ret
ror
mov
push
(bad)
jecxz
(bad)
pop
inc
mov
int
push
setp
push
(bad)
jecxz
outs
push
ficomp
inc
cwde
lods
xor
stc
pop
repz
pop
pusha
inc
push
push
dec
push
in
cdq
or
(bad)
cwde
lods
push
in
lahf
in
ret
xchg
mov
jg
push
push
(bad)
xor
push
jecxz
push
sbb
lods
sbb
sbb
mov
sti
sbb
imul
je
and
shl
dec
in
dec
cmp
sbb
rcr
ret
fs
push
hlt
mov
mov
leave
dec
add
icebp
iret
xor
inc
xchg
sbb
out
mov
arpl
into
mov
adc
lods
cmp
mov
push
les
jne
hlt
lods
repnz
sbb
dec
push
xlat
mov
push
hlt
dec
push
mov
add
pop
repz
dec
push
lea
pop
sbb
xchg
(bad)
in
add
inc
outs
lahf
pop
mov
pop
in
mov
xchg
jle
loop
cmp
pushf
jno
jae
rcr
sti
out
daa
mov
idiv
inc
add
mov
adc
mov
mov
out
push
mov
adc
scas
lahf
retf
inc
inc
cld
add
sbb
and
ret
ja
xor
mov
loopne
and
retf
inc
jno
out
fmul
repnz
rcr
push
popf
fisttp
and
bnd
rcr
push
popf
fisttp
and
sti
pop
inc
mov
mov
jecxz
push
leave
addr16
and
scas
jnp
mov
inc
or
ror
mov
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
inc
popa
cwde
hlt
mov
sub
lock
inc
shl
outs
xchg
inc
mov
fmul
(bad)
ja
mov
les
or
or
or
into
rol
mov
sub
shl
es
pop
je
mov
sbb
retf
sub
mov
mov
or
fcmovnb
inc
data16
rol
mov
mov
inc
data16
sub
push
cmp
repz
push
inc
pop
addr16
pop
rol
xlat
or
fcmovnb
inc
data16
rol
mov
mov
nop
in
(bad)
enter
add
ja
cmp
cli
inc
fadd
pushf
mov
mov
sar
ss
retf
shl
inc
cdq
mov
dec
and
shl
outs
xchg
inc
mov
fmul
jne
mov
inc
addr16
sub
xchg
inc
mov
fmul
test
xchg
cmp
dec
inc
fadd
pushf
mov
mov
or
or
add
pop
xchg
les
fmul
mov
xchg
fbstp
cmp
mov
cwde
mov
mov
mov
adc
out
sbb
rcr
loop
jmp
pop
call
int3
je
(bad)
xlat
enter
xor
push
ret
adc
dec
out
rcr
(bad)
aam
out
shl
push
aas
cdq
jmp
push
sti
fistp
data16
push
lea
imul
test
pop
cmp
mov
push
inc
mov
sbb
inc
push
push
fild
in
dec
jae
test
mov
jno
jno
in
call
inc
cmp
(bad)
push
inc
jbe
jno
out
xlat
adc
scas
mov
or
bound
xlat
dec
jno
test
in
sbb
pop
inc
and
cmp
inc
lods
ds
fs
cmp
leave
dec
data16
fdivr
xchg
mov
lods
inc
cmp
inc
pop
rcl
dec
jb
xor
xlat
cmps
add
aas
pop
cmc
shl
pop
fisubr
xor
mov
and
inc
xor
jno
and
dec
xor
lods
call
add
out
mov
int
or
jnp
jne
mov
js
mov
out
or
push
xor
ins
lods
ss
stos
xor
jnp
mov
mov
or
xchg
or
xor
inc
xor
mov
jmp
shl
and
push
jbe
lock
outs
scas
dec
adc
inc
jbe
cli
push
in
pop
pop
jb
scas
cmps
cld
xchg
scas
fistp
sub
sti
and
cli
xchg
cmp
aam
mov
mov
aam
mov
aam
mov
adc
inc
in
fwait
pop
mov
aam
mov
aam
mov
aam
in
and
cmp
aam
mov
lods
je
movs
cmp
mov
aam
mov
aam
mov
aam
in
ins
aad
mov
aam
mov
aam
aam
xchg
stc
in
(bad)
jl
scas
aam
adc
dec
div
pop
and
in
aam
mov
aam
mov
dec
div
mov
es
push
test
cdq
outs
(bad)
mov
call
xor
cmp
jae
adc
push
xor
mov
in
xor
pop
into
cmc
pop
cmp
and
jge
ins
sub
aam
mov
aam
mov
lods
je
push
cdq
das
into
and
jo
ins
mov
in
aam
mov
xchg
je
mov
call
xor
or
in
sbb
mov
aam
mov
aam
mov
aam
mov
aam
mov
test
and
cmp
in
aam
mov
aam
pop
es
jbe
mov
fwait
cmps
stc
mov
(bad)
out
jmp
in
aam
mov
aam
mov
aam
aam
mov
in
aam
mov
aam
mov
(bad)
idiv
in
call
and
ja
in
mov
and
cmp
popa
xchg
imul
das
jnp
aam
mov
aam
mov
aam
mov
aam
mov
test
and
cmp
mov
call
mov
mov
scas
in
sbb
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
test
and
cmp
in
aam
mov
cmp
std
mov
pop
cmp
cli
xor
in
and
push
mov
aam
mov
aam
aam
(bad)
mov
(bad)
idiv
in
call
in
aam
mov
aam
inc
aam
push
mul
xchg
jmp
cmp
mov
xchg
mov
jbe
mov
or
pop
xor
js
call
in
jbe
jmp
cmp
mov
xchg
mov
push
mov
call
mov
call
fsubr
push
cli
mov
fwait
es
mov
xchg
mov
and
cs
pop
xor
sbb
call
mov
jg
cs
push
cli
mov
fwait
es
mov
xchg
mov
and
call
sahf
cwde
cmp
mov
call
repnz
cmp
ds
cmp
pop
cmp
cli
ds
cmp
pop
cmp
cli
ds
cmp
pop
cmp
cli
fistp
or
pop
xor
jmp
xchg
cli
aam
mov
stc
mov
dec
mov
stc
mov
dec
mov
stc
mov
dec
cmp
and
jge
aam
cmp
and
jge
mov
mov
scas
in
sbb
mov
je
in
aam
mov
aam
mov
aam
mov
aam
in
ss
stc
mov
(bad)
cmp
xor
out
or
mov
sbb
mov
aam
mov
aam
mov
aam
mov
test
and
cmp
in
aam
mov
sbb
fcmovnu
mov
and
fwait
jbe
in
aam
mov
aam
mov
aam
jnp
mov
cmp
ins
imul
hlt
sbb
iret
and
mov
xor
call
in
aam
mov
aam
mov
aam
mov
test
in
aam
mov
aam
in
pusha
push
cs
sbb
lods
push
pop
or
cmc
mov
call
mov
(bad)
je
mov
(bad)
je
in
aam
mov
mov
xor
xchg
and
aaa
ins
loop
lahf
sbb
dec
aaa
jl
jo
(bad)
mov
jbe
out
cdq
outs
(bad)
mov
sar
stc
sti
data16
ins
sub
aam
mov
aam
mov
lods
hlt
inc
aas
cdq
outs
(bad)
out
cmp
mov
aam
out
xchg
and
aam
mov
aam
mov
aam
mov
xor
pop
test
in
fwait
push
mov
aam
mov
aam
mov
cmp
in
(bad)
xor
in
aam
mov
inc
cmc
xor
sub
call
in
aam
and
sbb
(bad)
(bad)
xchg
stc
sti
data16
ins
sub
aam
mov
sbb
push
mov
fwait
(bad)
lods
outs
inc
inc
sti
in
aam
mov
aam
mov
aam
iret
and
mov
jmp
rcr
sti
add
xchg
aam
jnp
mov
xor
push
aaa
idiv
adc
out
in
aam
mov
cwde
imul
jo
xor
xchg
mov
stc
ins
(bad)
and
aam
clc
in
cdq
div
jecxz
je
mov
test
in
aam
mov
sbb
add
push
dec
sti
in
aam
mov
aam
mov
aam
mov
mov
cmp
push
cmc
int3
and
test
jmp
mov
xchg
movs
cdq
sbb
in
(bad)
and
aam
mov
test
add
push
dec
sti
in
aam
mov
aam
mov
mov
cmp
aam
xor
xchg
hlt
out
jbe
dec
(bad)
ds
mov
sti
popf
mov
add
xchg
sahf
jo
push
xchg
sub
cmc
mov
stc
mov
test
add
repnz
jo
push
popf
sub
mov
scas
dec
cmp
lods
(bad)
jne
outs
push
mov
(bad)
fs
aam
mov
aam
push
xor
in
scas
call
xor
stos
(bad)
mov
xchg
cmp
lea
outs
stc
fwait
push
mul
call
(bad)
fwait
mov
sti
xor
mov
cmp
cdq
jne
cmova
(bad)
sub
add
xor
xchg
pop
dec
dec
push
scas
enter
fiadd
or
push
psadbw
xor
(bad)
jecxz
xlat
xlat
movs
pop
inc
in
pop
xor
or
gs
push
mov
jbe
add
lods
mov
jae
repnz
je
in
daa
loope
loop
scas
cmp
arpl
adc
push
mov
aas
cmp
jmp
xchg
mov
mov
mov
sahf
pop
adc
mov
out
or
ret
gs
adc
mov
or
pop
mov
xor
loope
lods
and
inc
repz
inc
addr16
dec
jbe
shr
ja
and
inc
mov
sbb
mov
add
push
mov
inc
push
add
push
fnstsw
xor
jmp
mov
pop
pop
xlat
add
test
dec
mov
mov
dec
push
mov
out
fild
retf
sti
cs
mov
sbb
inc
retf
xor
fimul
imul
loop
jmp
sahf
mov
cld
inc
mov
call
in
xchg
inc
jb
mov
outs
lock
cs
in
push
inc
call
test
ds
sbb
fbstp
leave
cs
sbb
cs
ss
push
movs
or
push
movs
pusha
pop
jnp
arpl
jmp
sbb
sub
into
sub
xor
push
aad
push
dec
push
movs
xor
movs
pusha
pop
cmp
pusha
pop
aaa
movs
pusha
pop
push
cld
jecxz
push
movs
pop
pop
and
jecxz
xlat
sti
and
push
movs
pusha
pop
dec
movs
pusha
mov
add
pop
dec
inc
pop
mov
(bad)
lods
push
push
cmps
je
movs
pusha
or
jmp
pop
push
movs
pusha
pop
push
movs
pusha
pop
and
add
push
movs
pusha
pop
inc
movs
pusha
iret
aad
arpl
movs
cmp
pop
movs
pusha
pop
sbb
jecxz
push
jmp
push
movs
pusha
pop
dec
movs
loopne
xlat
retf
pop
pop
push
movs
pusha
pop
aaa
movs
pusha
pop
or
lock
jmp
pop
push
movs
pusha
pop
push
movs
add
push
movs
pusha
pop
or
xchg
into
sti
jnp
sbb
lods
push
push
cmps
je
push
movs
pusha
pop
and
xchg
pushf
sti
jnp
inc
push
sub
add
dec
movs
pusha
mov
push
loope
push
cmps
jo
push
movs
pusha
pop
push
movs
pusha
pop
or
movs
jnp
fstp
cld
push
dec
or
cs
or
bound
jmp
loope
xor
in
ds
add
pop
imul
mov
pop
cmp
dec
out
mov
cld
push
mov
out
adc
data16
inc
cwde
stc
push
repz
pop
popf
loopne
outs
dec
inc
adc
shl
out
imul
stos
pushf
lds
cdq
pop
out
jge
retf
push
inc
mov
sbb
fwait
jl
test
mov
dec
out
ins
xchg
lods
stos
ficom
inc
in
mov
fidiv
out
mov
stos
out
mov
jne
stos
outs
dec
jns
jae
push
(bad)
ja
lock
outs
cmp
pop
mov
mov
es
mov
cmc
or
xchg
jb
inc
lods
dec
pop
jge
ja
inc
lods
add
dec
sbb
dec
ss
mov
in
ja
mov
mov
mov
lods
fsubr
dec
loop
loope
jne
cwde
lods
jecxz
call
inc
jo
(bad)
adc
mov
dec
pop
or
ret
sbb
fs
jb
fbld
popf
cmps
fisubr
jp
jb
jno
jp
loop
ds
add
out
outs
shl
xor
or
in
pop
inc
ficomp
dec
mov
dec
aaa
pop
popf
jae
and
arpl
mov
pusha
xchg
loop
ss
xchg
stos
push
pusha
mov
aas
dec
repnz
in
(bad)
mov
push
mov
mov
test
adc
(bad)
mov
data16
cmps
int3
jle
mov
je
call
xchg
sbb
xor
shl
test
xchg
scas
inc
mov
movs
mov
push
movs
xor
sub
xchg
jl
mov
mov
jge
xchg
mov
in
sub
dec
adc
in
adc
movs
xchg
and
adc
out
sbb
cmp
addr16
adc
mov
and
mov
push
sub
push
sub
push
cdq
cmp
sub
cmp
sbb
sbb
xchg
xchg
push
cli
push
(bad)
std
cmps
jp
stos
movs
jae
out
adc
data16
add
xchg
jmp
xchg
(bad)
xor
mov
js
cmp
gs
sub
lock
aam
movs
adc
lock
in
jmp
sbb
mov
push
aad
loop
cmp
add
bsr
sbb
push
shl
push
(bad)
jecxz
(bad)
jecxz
outs
push
ficomp
inc
cwde
lods
sbb
xor
daa
inc
inc
fild
mov
out
cwde
xor
jne
push
scas
out
(bad)
mov
cmp
cdq
inc
in
lods
and
lahf
addr16
pop
push
sti
xchg
das
cmps
mov
mov
ins
nop
bound
push
inc
mov
push
movs
dec
das
mov
inc
xor
aaa
push
lds
test
sbb
mov
push
loope
jle
call
stos
sbb
pop
dec
popf
mov
call
inc
mov
dec
sahf
inc
cmp
aaa
inc
cld
inc
xor
jae
add
lods
repnz
inc
in
lods
xchg
movs
push
mov
repnz
outs
jb
adc
ds
stos
mov
out
inc
out
or
xlat
xor
inc
jo
test
adc
sahf
sbb
dec
sub
sbb
cmps
mov
cmp
pop
xchg
jne
add
loop
out
or
ins
cmp
or
jb
xchg
add
jle
adc
push
inc
call
xchg
movs
mul
scas
sahf
pop
stc
lahf
mov
shl
lock
cmps
jmp
xlat
lea
ss
sub
mov
adc
xor
inc
xlat
fld
data16
add
adc
xchg
xor
xchg
mov
imul
sbb
imul
sbb
jmp
lahf
out
dec
dec
fld
mov
enter
loope
ins
sar
(bad)
jecxz
(bad)
pop
rcl
mov
dec
inc
inc
mov
pop
mov
jecxz
mov
aas
push
fs
loop
gs
popf
loop
scas
cmp
imul
jne
sbb
popa
pop
and
sbb
sahf
mov
push
mov
inc
xchg
mov
(bad)
(bad)
cmc
inc
cmp
or
or
stc
cmp
repz
cmp
mov
mov
push
aaa
stos
aad
or
inc
les
xchg
and
push
cmps
mov
add
test
sahf
arpl
mov
xor
mov
cli
lock
cmc
xchg
mov
popf
loop
lods
pop
inc
jo
das
inc
mov
pop
lods
pop
pop
push
mov
jbe
pop
test
push
out
pop
loop
mov
mov
adc
jns
dec
pop
cmp
ss
(bad)
mov
cli
cwde
xchg
jb
fwait
sahf
lods
inc
lods
call
pop
xor
pop
push
je
and
pcmpeqb
loop
jb
xchg
mov
mov
mov
mov
mov
in
popf
cmps
mov
add
cmp
jb
adc
mov
(bad)
stos
mov
xor
xor
inc
push
jbe
(bad)
out
push
mov
addr16
ja
sbb
jne
adc
pop
outs
xchg
inc
push
and
pushf
dec
pop
scas
in
pusha
mov
dec
or
imul
shl
inc
loopne
rol
add
cmp
or
std
inc
inc
scas
add
inc
loopne
ror
add
movs
in
clc
pushf
movs
scas
in
movs
scas
in
mov
xor
je
pushf
inc
loopne
rol
add
and
sbb
cmp
mov
push
scas
pop
xchg
daa
mov
dec
mov
scas
jno
sbb
mov
xchg
aad
or
push
rcr
int
jae
sbb
push
mul
iret
mov
dec
push
pop
add
mov
or
push
pminsw
push
(bad)
jecxz
(bad)
jecxz
xlat
xlat
mov
popf
adc
outs
sub
pop
shl
out
cmp
(bad)
das
pushf
push
jge
or
sbb
pushf
jne
mov
sbb
jmp
inc
mov
push
ins
sbb
pop
test
pop
imul
je
popf
push
loopne
pop
inc
push
ficom
push
stos
lahf
ret
push
test
out
arpl
lahf
pop
xchg
popf
mov
mov
scas
(bad)
cmp
lods
sbb
inc
pushf
dec
jp
adc
mov
jbe
jne
out
jge
popf
out
scas
arpl
inc
icebp
arpl
fxch
sbb
inc
push
rol
cmc
xor
pop
add
inc
mov
or
pop
push
jno
aad
cli
ret
or
(bad)
out
sub
mov
push
call
inc
mov
xchg
push
fidivr
cmps
test
je
sub
mov
aaa
add
pop
or
dec
mov
addr16
mov
out
sbb
xchg
or
push
jl
mov
aas
mov
call
(bad)
popa
loopne
inc
xor
pop
gs
popf
repz
push
mov
xchg
push
test
fwait
test
das
mov
loop
fist
mov
xor
xor
or
(bad)
out
push
mul
pop
sbb
test
fwait
addr16
sahf
pop
pop
adc
push
push
jmp
mov
inc
adc
or
jb
out
mov
in
mov
in
aam
pop
test
pop
in
stos
mov
and
adc
loop
adc
ret
ret
xchg
ret
pop
fwait
xchg
hlt
mov
or
mov
in
mov
fdiv
ins
dec
or
ins
in
mov
in
shl
sub
lods
pop
adc
xchg
test
pop
cmp
pop
in
mov
in
mul
mov
jl
dec
adc
cmps
sar
mov
in
lods
pop
pop
popa
ja
test
mov
xchg
and
ret
ret
ret
ret
xchg
ret
inc
cs
mov
ret
xchg
nop
mov
mov
in
jecxz
pop
add
gs
mov
mov
in
mov
in
call
imul
inc
jnp
or
xchg
mov
mov
in
mov
in
lea
mov
in
loop
fsub
ret
stos
jmp
mov
ret
jbe
mov
xchg
and
pop
daa
fstp
mov
in
cwde
je
xchg
pop
jnp
pop
and
adc
push
jnp
addr16
ficom
aaa
sub
add
xchg
pop
inc
pushf
in
mov
ds
mov
push
fdivr
mov
nop
sbb
dec
call
push
mov
push
inc
cwde
mov
xor
shl
out
push
(bad)
jecxz
(bad)
sbb
xchg
stc
push
repz
pop
cmp
enter
loope
push
sar
(bad)
jecxz
(bad)
pop
xchg
cmps
popf
lods
mov
push
ds
cmc
or
out
inc
push
pop
sti
ins
push
inc
icebp
dec
icebp
lods
in
xchg
jne
int
inc
inc
sahf
mov
mov
mov
inc
xor
cvtps2pi
(bad)
jmp
pop
pusha
jle
rcr
scas
lar
test
pop
mov
xchg
lea
inc
pop
out
or
mov
mov
sub
lea
cmp
scas
popf
retf
das
dec
fwait
inc
xor
mov
mov
dec
push
mov
sti
out
xor
(bad)
mov
jae
xchg
retf
sti
mov
mov
mov
in
mov
test
inc
xor
in
sbb
imul
call
and
mov
outs
mov
daa
fisub
(bad)
arpl
scas
push
loope
jle
call
out
out
or
jp
pusha
inc
cmp
(bad)
mov
in
sti
mov
mov
(bad)
in
push
mov
adc
push
loopne
ror
mov
fs
ret
out
iret
inc
repnz
fadd
push
shl
stos
(bad)
push
repnz
mov
int
and
pop
push
test
inc
pop
test
ds
inc
push
xchg
inc
jb
jmp
inc
inc
pop
leave
inc
cmp
pop
pop
test
push
aas
mov
pop
adc
neg
mov
pop
ret
pop
mov
not
pop
mov
mov
pop
mov
not
pop
cli
idiv
pop
ret
pop
inc
not
fld
pop
loope
and
lea
push
aad
inc
pop
fld
pop
icebp
push
push
pop
scas
test
mov
or
pop
adc
dec
adc
jnp
pop
dec
adc
dec
adc
dec
mov
cwde
pop
fst
or
js
or
dec
adc
leave
pop
push
test
cmp
mov
or
mov
enter
imul
out
mov
or
pop
adc
dec
xchg
sub
or
lea
add
and
add
pop
jne
xchg
scas
push
and
mov
or
dec
adc
enter
bound
or
add
or
dec
adc
cmp
imul
or
test
dec
adc
dec
adc
dec
dec
xor
cdq
mov
or
add
or
dec
adc
adc
or
adc
dec
adc
adc
or
adc
dec
adc
dec
dec
inc
sbb
pop
or
add
or
dec
adc
mov
mov
cmp
or
je
dec
adc
retf
test
mov
or
dec
adc
mov
cdq
mov
or
add
inc
mov
mov
and
jns
mov
push
adc
add
or
dec
adc
dec
(bad)
mov
mov
or
push
test
cmc
adc
cli
test
mov
dec
adc
dec
adc
mov
dec
adc
dec
adc
test
std
push
push
pop
jmp
mov
out
push
adc
add
or
dec
adc
leave
lods
mov
mov
dec
adc
dec
adc
dec
jno
addr16
int
loopne
pop
push
test
push
jb
jbe
retf
sub
not
push
add
dec
call
pop
xor
ror
push
inc
pop
shl
push
mov
div
pop
mov
jns
mov
pop
mov
outs
add
push
shl
out
push
(bad)
jecxz
(bad)
sbb
xchg
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
xor
stc
outs
repz
pop
popa
push
pushf
lods
mov
cmp
loop
mov
push
(bad)
jecxz
(bad)
jecxz
orps
push
setp
push
(bad)
jecxz
dec
push
mov
inc
in
lods
xchg
and
or
inc
mov
mov
or
(bad)
jecxz
(bad)
jecxz
out
xlat
stos
pushf
jne
mov
sbb
repz
inc
mov
sbb
call
mov
(bad)
push
data16
jecxz
jns
popf
loop
scas
cmp
arpl
(bad)
(bad)
push
pushf
out
sbb
inc
jmp
mov
out
nop
bound
inc
xchg
out
jae
icebp
mov
mov
cmps
imul
inc
mov
mov
or
inc
movs
dec
pop
jge
cmps
jnp
mov
mov
lods
sbb
inc
push
mov
loop
aaa
push
(bad)
mov
inc
xor
pop
shr
mov
xchg
jno
push
test
hlt
call
add
pop
mov
lods
push
lea
adc
lods
cmp
sbb
pop
mov
inc
xor
pop
pop
mov
mov
inc
mov
inc
xchg
mov
scas
inc
scas
jb
icebp
mov
xor
call
push
fdiv
xor
jbe
test
fisub
mov
mov
xchg
pop
mov
out
inc
xor
(bad)
pop
dec
jb
icebp
inc
cld
lods
lock
xor
pushf
xchg
mov
pusha
scas
add
test
and
add
mov
aas
mov
ret
das
jbe
cmc
jbe
scas
jmp
stos
jbe
stos
stos
push
out
iret
sub
dec
jp
vmaxsd
xchg
dec
dec
imul
adc
dec
adc
fild
fild
dec
adc
add
and
fbstp
xchg
push
push
adc
add
and
fild
fs
call
(bad)
into
adc
sti
mov
into
push
rcr
rol
out
jg
mov
push
mov
shr
sbb
dec
(bad)
into
add
(bad)
mov
into
pop
out
pop
loop
pop
pop
neg
not
pop
and
push
inc
fimul
cmp
dec
jle
rol
(bad)
adc
cmp
and
fidiv
pop
ficom
test
push
(bad)
dec
sahf
loop
sub
cmps
and
(bad)
inc
loop
mov
int3
retf
sbb
xchg
(bad)
xor
jmp
inc
xchg
mov
xchg
cli
adc
fisub
adc
pop
(bad)
add
sahf
ficomp
mov
sub
xchg
mov
adc
(bad)
mov
(bad)
(bad)
push
sahf
outs
cmp
repnz
(bad)
into
adc
fbstp
pop
repnz
adc
fdivp
adc
dec
and
and
add
dec
and
pop
cli
add
adc
test
and
fidiv
sbb
jmp
neg
mov
cli
cmps
add
jecxz
cmp
sti
jae
repz
pop
adc
mov
(bad)
sub
pop
push
dec
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
adc
add
and
(bad)
pop
push
pop
pop
pop
addr16
ficomp
mov
adc
fistp
adc
fild
ja
pop
dec
shr
push
or
mov
push
adc
(bad)
arpl
and
fild
or
fisttp
and
fild
dec
popf
fnstsw
dec
out
mov
adc
fild
fbld
dec
sub
add
jp
dec
pop
jg
dec
add
pop
push
pushf
mov
jae
mov
dec
sub
add
jp
dec
adc
add
and
fild
pop
and
fmul
pop
arpl
jae
jae
add
and
fistp
adc
fild
sub
pushf
add
and
fmul
imul
and
xchg
adc
add
fild
mov
cmp
xchg
adc
add
and
fild
fisub
lahf
add
and
fisub
jns
out
adc
add
and
fbld
jns
bswap
mov
pop
sbb
and
fild
dec
popf
pop
mov
push
adc
mov
test
dec
adc
fild
adc
ficom
and
fist
and
fist
or
cmc
mov
mov
push
pop
push
imul
in
dec
dec
jge
inc
or
mov
mov
sahf
rcl
and
fild
or
dec
xchg
push
jae
mov
cmp
xchg
adc
add
and
fild
dec
popf
fnstsw
pop
mov
dec
push
ret
xchg
out
xchg
xchg
xor
and
pop
inc
adc
add
and
fistp
bound
dec
adc
fild
imul
mov
pop
add
jae
add
and
fild
jo
pop
pop
dec
mov
std
add
and
fild
and
mov
adc
pop
and
ins
fisttp
daa
xchg
add
and
fcomp
inc
sbb
xchg
jp
add
and
fild
adc
fstp
adc
add
and
pop
js
jbe
inc
fild
pop
ds
rcr
sub
pop
pop
pushf
pushf
dec
push
bound
sbb
loop
mov
dec
test
dec
dec
outs
adc
iret
mov
push
ror
outs
adc
mov
ror
outs
adc
mov
ins
sahf
loop
pop
ja
mov
pop
imul
sahf
loop
push
ja
cmp
sahf
out
outs
pop
push
mov
ins
sahf
outs
outs
pop
push
adc
sahf
pop
retf
push
imul
xchg
mov
dec
adc
fild
pop
and
out
dec
mov
cmp
xchg
adc
add
and
fild
pop
and
push
sbb
and
fild
and
icebp
xchg
adc
add
fild
(bad)
pop
fbld
jns
bswap
mov
pop
sbb
and
fild
mov
pop
push
xchg
sahf
arpl
and
fild
sub
pop
pop
push
imul
push
push
xchg
mov
xchg
xchg
push
ror
push
adc
sub
(bad)
adc
dec
imul
(bad)
adc
xchg
add
cmp
(bad)
adc
push
sbb
push
pop
push
fwait
pop
xchg
sbb
int
les
sti
xchg
dec
push
imul
pop
xchg
cs
push
adc
imul
int
les
sti
adc
imul
pop
xchg
cs
push
xchg
dec
cs
dec
shr
push
push
dec
add
les
adc
fild
dec
and
pop
pop
pop
imul
adc
xchg
add
and
fucomip
adc
xchg
add
fild
int
pop
inc
pop
push
lahf
inc
imul
pop
popa
xchg
dec
pop
retf
adc
adc
fild
fiadd
lahf
add
and
fimul
adc
dec
adc
fild
fdivr
pop
pop
je
push
adc
dec
adc
fild
and
pop
xchg
push
pop
dec
shr
push
push
dec
add
les
adc
fild
dec
and
pop
dec
pop
outs
lods
dec
adc
xchg
add
and
(bad)
add
les
adc
fild
pop
in
xchg
push
add
and
fild
pop
and
rcl
adc
ffreep
xchg
mov
xchg
add
fild
adc
fiadd
adc
fild
jg
(bad)
fwait
fs
dec
sbb
xchg
loope
ins
xchg
dec
xor
xchg
mov
fsub
adc
adc
fild
mov
mov
(bad)
fild
xchg
add
fbld
sub
ins
dec
xor
push
fcomp
inc
xchg
cmp
xchg
mov
dec
pop
imul
xchg
push
xchg
add
and
fild
(bad)
pop
dec
adc
fild
adc
fild
pop
jne
push
adc
dec
adc
fild
sub
out
dec
dec
jge
push
pop
cmp
dec
adc
add
and
fild
fdivr
pop
dec
shr
push
push
dec
add
les
adc
fbstp
xor
fbld
mov
lea
fist
fdivr
pop
mov
push
out
push
fdivr
pop
fistp
xchg
ds
push
pop
arpl
and
and
adc
jge
fild
mov
and
add
and
fild
xor
dec
xchg
xchg
push
add
and
fild
sub
pop
mov
pusha
jge
pop
jl
xchg
mov
adc
add
fild
dec
jl
sub
(bad)
imul
adc
pop
sbb
xchg
xor
adc
(bad)
add
les
adc
(bad)
push
ja
imul
test
imul
adc
(bad)
adc
add
and
fst
and
rcr
mov
lds
lods
scas
dec
fdivr
pop
sahf
xchg
ror
push
adc
imul
int
les
sti
xchg
mov
xchg
mov
jecxz
push
adc
imul
dec
shr
fst
adc
add
and
fild
xchg
inc
xchg
push
scas
pop
jl
mov
std
dec
adc
add
fild
pop
jl
mov
int
adc
add
fild
jecxz
pop
cwde
and
xchg
nop
adc
add
and
fild
fiadd
pop
or
nop
mov
push
adc
daa
iret
add
and
fild
pcmpgtw
mov
icebp
mov
pop
mov
(bad)
out
sub
adc
add
fild
fisubr
in
mov
push
adc
daa
iret
add
push
ror
ret
nop
out
ret
nop
vmptrst
nop
adc
add
fild
fsubr
sbb
jns
mov
push
adc
daa
iret
add
push
ror
ret
nop
out
ret
nop
vmptrst
nop
adc
add
and
pop
dec
fdivrp
mov
jae
jae
add
and
fild
cmp
push
ror
retf
nop
add
xor
xchg
mov
dec
adc
fild
jne
fild
imul
dec
mov
mov
push
adc
iret
add
and
fild
pop
pop
dec
popa
imul
ja
lods
dec
mov
cmp
xchg
adc
add
fild
fisub
lahf
add
fist
inc
fcomp
retf
cdq
dec
adc
xchg
add
and
fbld
jns
bswap
mov
pop
sbb
and
fild
pop
and
(bad)
dec
adc
dec
adc
fild
sub
mov
dec
adc
add
and
fild
addr16
cmps
dec
dec
popf
add
jno
xchg
fstp
data16
dec
adc
dec
adc
fild
not
fstp
bound
xchg
jns
mov
not
push
adc
retf
add
push
inc
inc
pop
push
fwait
pop
jmp
mov
cmp
xchg
adc
add
and
fild
and
fmul
(bad)
cmp
xchg
adc
add
and
fild
and
icebp
xchg
adc
add
fild
rcl
les
adc
retf
add
fucomip
imul
dec
jecxz
add
adc
mov
adc
fild
fiadd
push
ja
push
sbb
push
dec
mov
mov
push
adc
iret
add
and
pop
dec
and
dec
(bad)
cmp
xchg
adc
add
fild
push
mov
lahf
cwde
adc
mov
dec
test
cmp
add
les
adc
fild
cmp
fisttp
mov
xchg
jae
jae
add
and
fild
pcmpgtw
mov
icebp
mov
dec
mov
inc
sbb
mov
dec
adc
fild
ja
pop
jo
push
mov
ja
push
adc
iret
add
(bad)
dec
retf
pop
dec
ja
ins
dec
shr
sbb
mov
dec
adc
fild
push
and
ficomp
mov
inc
lahf
adc
xchg
mov
add
and
fild
xor
(bad)
sbb
and
adc
xchg
mov
add
and
(bad)
dec
retf
fmul
push
dec
shr
sbb
mov
dec
adc
fild
pop
and
sbb
fiadd
dec
dec
ja
push
add
ja
push
adc
iret
add
and
fiadd
pop
jp
ja
push
or
ja
push
adc
iret
add
and
pop
and
push
xchg
dec
arpl
sbb
mov
dec
adc
fild
push
and
fidiv
std
xchg
dec
xor
pop
xchg
xchg
push
add
and
fsubr
ja
xchg
dec
mov
mov
addr16
push
adc
iret
add
and
fild
arpl
dec
pop
jnp
dec
jg
inc
dec
fdivrp
mov
vmptrst
nop
adc
add
fild
dec
mov
jae
cmp
xchg
out
imul
dec
mov
mov
addr16
push
adc
iret
add
push
lods
dec
and
mov
jne
fild
fisubr
mov
jns
out
sub
sbb
mov
dec
adc
fild
pop
and
sbb
dec
retf
aam
pop
push
dec
add
les
adc
pop
dec
pop
jnp
dec
jg
and
out
pop
and
nop
vmptrst
nop
adc
add
and
fild
dec
mov
jae
dec
xchg
dec
or
nop
out
imul
dec
mov
mov
addr16
push
adc
iret
add
and
fild
push
lods
dec
and
mov
imul
scas
out
ja
(bad)
pop
adc
(bad)
cmp
nop
adc
add
and
fild
loope
ficomp
pop
test
mov
sub
fidivr
jbe
mov
push
adc
iret
add
and
fmul
add
xchg
adc
add
and
fild
push
ret
fsub
jae
adc
adc
add
fistp
mov
xchg
dec
adc
fild
pop
and
mov
dec
xchg
and
add
push
xchg
add
(bad)
mov
push
adc
js
mov
and
add
and
(bad)
jg
pop
ficomp
sbb
lods
dec
jb
xchg
retf
leave
inc
add
imul
dec
jl
mov
push
popa
sbb
mov
jg
mov
push
pop
sbb
add
mov
xchg
in
dec
loop
add
add
lods
test
sbb
xchg
jecxz
(bad)
jecxz
mov
push
retf
push
sbb
sbb
or
(bad)
sbb
nop
lods
adc
mov
pushf
add
aas
inc
movs
mov
movzx
idiv
inc
mov
xor
rcl
xchg
repnz
xor
pop
xchg
ja
repnz
inc
idiv
jns
fld
jp
aas
push
inc
ds
movs
lods
jbe
sbb
mov
lahf
lods
pop
pop
fimul
inc
push
test
in
mov
div
pop
es
popf
push
imul
cld
sti
mov
mov
adc
call
sahf
aam
mov
ds
into
mov
inc
lods
sbb
pushf
movs
ja
outs
inc
cld
inc
mov
sbb
outs
push
loope
mov
sbb
or
mov
daa
test
and
cmp
mov
call
das
das
and
mov
cld
lods
aam
sbb
push
jbe
or
scas
mov
in
pop
inc
pop
push
dec
pop
ret
mov
in
loope
(bad)
out
sub
mov
ins
mov
dec
push
outs
outs
push
loope
jbe
sbb
test
mov
push
hlt
dec
aaa
mov
inc
cmp
push
pop
loop
dec
push
fcomp
lds
lea
sbb
dec
loop
ds
cmc
stos
out
loope
push
pop
cmps
mov
out
out
add
push
xlat
mov
jae
std
mov
inc
cmp
scas
push
inc
sahf
shr
or
sbb
push
adc
push
es
push
cmps
aam
sbb
iret
push
push
iret
push
adc
sbb
and
jb
pop
xor
mov
pop
daa
aaa
mov
(bad)
imul
or
adc
dec
(bad)
fbld
mov
jge
mov
jmp
add
dec
loopne
lods
enter
out
pop
xlat
(bad)
inc
cwde
lods
das
inc
cwde
add
test
loope
setp
push
dec
push
mov
inc
in
lods
jmp
lods
push
mov
adc
mov
lods
push
inc
push
add
in
in
or
repz
lods
sub
lahf
or
neg
or
inc
lods
addr16
push
pop
or
imul
pop
cwde
push
ret
aas
into
cmp
(bad)
mov
jbe
mov
push
add
pop
out
inc
out
mov
pop
stos
mov
mov
jb
lods
sub
push
fcomp
inc
mov
lods
icebp
mov
jp
lahf
mov
mov
lods
sbb
pop
mov
jnp
test
out
scas
pop
inc
mov
adc
dec
stos
mov
bound
add
sbb
jbe
jbe
clc
pop
cmc
mov
out
out
inc
add
dec
orps
jne
mov
nop
inc
pop
ja
xor
push
in
add
cli
out
fwait
add
cmps
mov
in
jnp
dec
outs
popf
mov
xchg
fisub
cmc
or
mov
in
out
cmp
mov
cli
jns
jmp
call
jb
mov
jle
adc
xlat
add
dec
or
mov
jne
push
xchg
je
jno
(bad)
mov
mov
(bad)
arpl
ficom
or
mov
out
lods
lahf
pop
mov
push
pop
lahf
mov
jo
popf
jp
stos
cmp
sub
call
arpl
test
sub
lods
push
cmc
in
add
cmp
test
lods
(bad)
cmp
sub
push
mov
mov
and
push
mov
mov
and
push
mov
mov
and
gs
mov
out
add
and
xchg
aaa
gs
jns
iret
arpl
fwait
bound
gs
arpl
iret
arpl
das
bound
sub
xor
mov
gs
arpl
iret
jecxz
pop
or
xor
lea
sub
lods
push
jne
jecxz
out
xlat
sbb
test
lods
(bad)
cmp
sub
push
mov
mov
and
push
mov
mov
and
push
mov
mov
and
gs
mov
out
add
and
xchg
aaa
gs
jns
iret
arpl
iret
arpl
gs
sub
iret
arpl
das
bound
sub
xor
xchg
gs
iret
arpl
iret
arpl
ja
(bad)
aas
or
pop
sub
arpl
pop
iret
sub
and
arpl
cmp
sub
jns
stos
sbb
cmps
xchg
xchg
leave
stos
sbb
cmps
xchg
mov
leave
stos
sub
cmps
pop
test
leave
stos
sub
cmps
pop
test
stc
sub
xor
pop
std
xor
popf
data16
iret
das
jns
iret
arpl
xchg
loopne
gs
add
iret
arpl
iret
jecxz
sub
dec
jnp
iret
daa
jns
daa
loop
dec
sub
sub
cmp
stos
push
lods
xor
sub
(bad)
sub
std
call
push
mov
cmp
cmp
adc
and
jg
stos
mov
adc
and
jg
fwait
mov
adc
and
jg
fwait
mov
adc
and
test
in
mov
shr
aaa
and
xor
add
iret
jecxz
sub
dec
jnp
iret
aas
jns
iret
arpl
sub
sub
sub
push
pop
retf
movs
xor
test
xchg
lea
leave
stos
sbb
cmps
xchg
(bad)
cmp
leave
stos
sub
cmps
xchg
test
leave
stos
sub
cmps
pop
test
cdq
arpl
mov
adc
and
jg
stos
mov
adc
and
jg
fwait
mov
adc
and
jg
fwait
mov
adc
and
xor
retf
in
xor
jge
jmp
cdq
js
gs
das
jns
das
loop
sub
loopne
aas
mov
imul
sub
and
in
xchg
fisubr
out
sbb
inc
fsubr
sbb
inc
cwde
lods
das
ins
sbb
sbb
inc
cwde
movs
sbb
cdq
or
sbb
lds
sub
sbb
popf
cdq
sub
cwde
jge
std
cdq
sub
sbb
lds
or
cdq
cmp
inc
cwde
aad
push
cdq
popa
sbb
cwde
xor
cdq
sub
sbb
cdq
or
cwde
cdq
sbb
fwait
xor
cdq
or
cdq
cmp
cdq
adc
sbb
cdq
or
cdq
cmp
cwde
loope
xchg
cdq
gs
cdq
xor
sbb
cdq
sub
cdq
sbb
imul
mov
add
mov
inc
call
adc
mov
dec
push
in
cdq
pushf
popf
mov
mov
add
mov
push
push
add
int3
jns
fld
aad
xchg
std
add
adc
pop
xchg
std
mov
stos
push
aas
mov
nop
aas
jp
mov
lods
dec
pop
cdq
test
pushf
in
js
sbb
int3
pusha
adc
xchg
or
mov
aam
xor
cli
xor
and
cwde
sbb
test
or
bound
push
ror
loop
dec
(bad)
push
sbb
push
mov
or
(bad)
jecxz
(bad)
mov
push
push
ror
loop
push
(bad)
jecxz
(bad)
pop
ins
loope
mov
mov
(bad)
jecxz
(bad)
jecxz
(bad)
pop
sbb
xchg
sbb
rcr
loope
setp
push
jmp
or
push
pminsw
push
(bad)
jecxz
(bad)
jecxz
repnz
pop
ror
mov
push
(bad)
jecxz
(bad)
mov
cmp
cwde
popf
or
lods
or
popf
sbb
xchg
pushf
push
jle
jecxz
(bad)
dec
imul
scas
xor
push
ins
mov
sahf
in
push
jb
jecxz
push
push
retf
sbb
inc
pushf
jecxz
(bad)
jecxz
(bad)
jecxz
or
push
ror
mov
push
(bad)
jecxz
jmp
or
push
pminsw
push
(bad)
jecxz
(bad)
jecxz
loop
pop
ror
mov
push
(bad)
jecxz
(bad)
pop
inc
mov
int
push
setp
jo
(bad)
xlat
adc
push
ficomp
add
jl
fwait
jns
dec
pop
mov
inc
in
test
push
aad
cmp
lods
popf
push
fsubr
mov
mov
popa
or
movs
sbb
adc
push
mov
cwde
jecxz
(bad)
jecxz
cli
(bad)
lods
or
cdq
sbb
xchg
scas
adc
jmp
popf
mov
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
orps
adc
sbb
jp
mov
adc
lods
pop
mov
rol
mov
cdq
sbb
xchg
scas
pop
inc
xchg
dec
sbb
out
mov
ficomp
mov
leave
dec
sbb
mov
js
mov
aad
pop
xlat
jecxz
adc
fisubr
jns
jmp
sbb
push
(bad)
jecxz
(bad)
aam
adc
sbb
outs
add
imul
lods
sbb
inc
mov
dec
dec
xchg
adc
jp
mov
int
sbb
cmp
push
(bad)
jecxz
cmp
sbb
xchg
pushf
push
jle
jecxz
(bad)
lea
inc
mov
ror
loop
push
(bad)
jecxz
(bad)
das
pushf
and
mov
or
sbb
push
push
call
(bad)
jecxz
orps
push
setp
ja
(bad)
mov
mov
sbb
imul
stos
pushf
xchg
aad
sbb
jge
fwait
push
inc
mov
sbb
call
lods
cmp
cmp
les
loope
scas
push
inc
add
xlat
loope
stos
jmp
inc
xchg
popf
scas
xchg
jmp
push
out
jge
shl
lods
(bad)
adc
lods
or
sahf
lods
and
sbb
sahf
lods
out
or
jecxz
lahf
dec
sar
fs
add
and
sbb
inc
cmp
mov
inc
in
lods
popf
cmps
cdq
scas
add
cmps
or
test
jg
pop
inc
mov
push
and
ja
mov
dec
pop
test
jb
push
mov
ss
mov
mov
mov
outs
mov
sbb
inc
pop
mov
xchg
sub
mov
cmp
(bad)
mov
in
mov
push
xor
push
inc
fmul
dec
push
mov
fwait
jno
pushf
dec
ja
test
jb
cmp
pop
repnz
mov
pusha
jge
jmp
mov
fs
scas
mov
pusha
mov
aas
inc
mov
cs
push
(bad)
mov
sbb
mov
addr16
mov
xchg
ja
ror
shl
mov
arpl
ficom
push
adc
gs
mov
pop
in
and
pop
xchg
es
nop
into
in
enter
fdivr
loopne
fsubr
movs
xor
mov
add
loopne
mov
sub
xchg
mov
xor
in
cmp
repnz
int3
scas
fs
xchg
std
xor
xchg
mov
pop
fdivr
rcr
mov
xor
stos
mov
xor
stos
rol
mov
or
cmps
enter
loopne
int3
stos
jmp
xor
mov
leave
sbb
sti
aad
int3
cmps
int3
inc
fsubr
int
enter
mov
test
cmp
(bad)
std
xor
mov
std
pop
loopne
aad
fmul
int
fdivr
rcr
mov
jmp
inc
cmp
xchg
rcr
mov
xor
loop
add
stos
std
xor
(bad)
movs
xor
mov
sub
mov
lds
cmps
rol
stos
cmp
xchg
in
or
stos
ror
fcom
mov
xor
cmps
or
pop
in
test
cmp
(bad)
std
xor
mov
std
push
fadd
int
nop
sahf
movs
push
rcl
push
test
fldcw
call
xchg
stos
movs
pop
in
in
or
loop
add
xchg
aad
int3
loop
or
fcom
mov
or
xchg
lea
xchg
mov
aad
fdiv
mov
xor
cli
cmp
xchg
aad
cwde
cmps
std
sbb
call
fdivr
int
loopne
test
in
std
or
loope
in
jmp
inc
pushf
stos
int
int3
(bad)
rcr
mov
mov
fdivr
in
xor
idiv
adc
jmp
pusha
cld
scas
std
inc
or
aad
cwde
cmps
mov
pop
xchg
stos
in
or
stos
fisttp
xchg
in
call
call
fnstcw
std
pusha
xchg
loop
inc
fst
int
fsubr
std
adc
sti
aad
mov
in
or
test
xchg
stos
loopne
int3
stos
jmp
xor
mov
aad
cwde
cmps
mov
sub
stos
in
dec
loopne
jmp
inc
int3
loop
push
in
mov
or
loop
or
xchg
movs
xor
scas
std
xor
mov
std
or
xchg
sbb
cmps
fstp
call
das
std
pop
mov
int
mov
stos
movs
pop
cld
mov
rcr
aad
nop
into
in
in
stos
mov
xor
loop
cmp
lds
ins
adc
xchg
jmp
cmp
jecxz
adc
cli
aam
shr
or
nop
(bad)
jmp
or
mov
jmp
or
ror
fmul
mov
add
in
mov
cmp
(bad)
std
cmp
mov
std
or
call
sar
xor
cli
in
in
stos
mov
sub
loop
sub
stos
lock
xchg
mov
test
cld
stos
shl
in
std
inc
fnstcw
inc
enter
cld
stos
std
pop
aad
rol
mov
inc
mov
lock
stos
movs
pop
in
jmp
dec
aad
fld
xchg
std
push
fdivr
in
sbb
mov
sbb
loopne
mov
or
sti
dec
sbb
mov
aad
mov
mov
call
call
xchg
cmps
int
call
mov
leave
xor
sti
int
int3
mov
sub
stos
in
or
mov
jmp
sbb
stos
mov
fcom
fcom
stos
in
sub
out
inc
call
call
fsubr
std
cmp
clc
sbb
stos
cmc
or
scas
aad
mov
xchg
int
int3
mov
sbb
out
sbb
scas
mov
xor
das
int
enter
fcom
fnstenv
scas
int
loopne
call
test
fsub
jmp
dec
mov
jmp
xor
iret
int
int3
mov
or
xchg
ror
cdq
scas
lea
mov
sar
fmul
std
xor
xchg
mov
add
mov
mov
mov
pop
(bad)
int
push
mov
movs
sub
mov
cmp
repnz
int3
scas
shl
mov
stc
sub
psubusw
cmps
jmp
or
mov
fnstenv
mov
int
enter
int3
stos
rol
std
sbb
loop
inc
loopne
aad
loopne
or
mov
test
cmp
(bad)
std
xor
mov
std
pop
fadd
jmp
or
(bad)
std
inc
mov
xchg
in
pop
in
jmp
gs
or
mov
sub
xchg
mov
or
xchg
rcr
xchg
aad
mov
xchg
aad
fcomp
mov
xor
xchg
in
or
stos
test
mov
stos
lock
mov
hlt
lods
fsubr
movs
xor
jecxz
xor
div
cmp
xchg
aad
cwde
cmps
mov
add
stos
jmp
and
stos
in
int3
xchg
jmp
cmp
lea
int
les
shl
int3
call
fdivr
movs
dec
(bad)
std
sbb
loop
sbb
lea
mov
pusha
xor
rol
inc
loopne
test
in
std
or
jmp
ins
fsubr
in
pop
in
jmp
jge
jmp
or
mov
jmp
or
cli
stc
sub
mov
sbb
xchg
std
ins
fsub
in
or
fcomp
sar
fsubr
loopne
fsubr
stc
or
mov
mov
cmp
scas
mov
push
aam
jmp
adc
call
nop
loop
or
mov
mov
or
mov
mov
or
xchg
(bad)
fmul
in
cmp
mov
xor
mov
fst
mov
mov
dec
nop
stos
mov
sbb
sti
mov
fsubr
in
inc
xchg
loop
pusha
fdiv
jns
pop
mov
add
sahf
or
push
int
call
mov
adc
cmps
int
clc
loop
sub
cli
mov
or
mov
or
fsub
std
cmp
mov
sub
jecxz
pop
in
cmps
jmp
inc
aad
mov
or
mov
int
xchg
cli
aam
fsubr
jmp
inc
mov
mov
std
cmp
mov
sub
jecxz
cmp
jmp
or
jmp
nop
stos
std
sbb
mov
sbb
call
inc
fsubr
mov
push
fmul
rol
loopne
jmp
imul
sub
(bad)
jmp
or
mov
or
mov
add
mov
fld
mov
lea
call
in
jmp
dec
aad
fld
xchg
std
inc
loopne
in
inc
enter
cld
stos
std
pop
aad
rol
mov
inc
mov
lock
stos
movs
sbb
mov
std
xor
mov
lea
mov
stc
or
mov
movs
sbb
mov
sub
sbb
sbb
loopne
mov
cmp
sti
int
int3
mov
mov
out
push
cld
cli
jmp
xor
xchg
dec
xor
out
and
stos
in
xor
sahf
in
inc
fsubr
sar
fsubr
std
cmp
xchg
lea
mov
sub
xchg
in
add
mov
inc
aam
movs
push
fdivr
mov
sub
out
sub
sub
pop
loopne
jmp
xor
stos
lock
call
call
int3
mov
fstp
cmps
jmp
popa
cwde
stos
int
(bad)
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pop
int3
scas
jmp
sbb
mov
jmp
sub
stos
(bad)
mov
stc
sbb
mov
cmp
fsubr
jmp
xor
stos
mov
push
xchg
mov
xor
mov
pop
nop
xchg
in
or
sahf
rcr
rcl
int
push
mov
mov
or
fsub
aad
mov
in
or
mul
or
(bad)
xchg
jmp
inc
loopne
jmp
xor
out
xor
mov
shl
xchg
int
loopne
int3
or
stos
sar
cmp
sbb
scas
fnstcw
loopne
fs
stos
lds
mov
xor
shr
xchg
mov
or
xchg
stc
xor
xchg
ror
int3
xchg
mov
sub
loopne
std
ins
loopne
mov
sbb
(bad)
stc
inc
fcom
std
sbb
mov
int
int3
mov
in
adc
not
inc
fmul
int
fdiv
call
or
into
movs
or
cli
std
add
loop
sbb
loop
xor
out
ins
loopne
in
or
mov
int
fsub
jmp
cmp
adc
cdq
scas
sar
repz
inc
cs
mov
push
mov
push
mov
push
mov
push
or
bound
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
add
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
stos
int
call
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
sbb
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
inc
stos
aad
les
(bad)
pop
pop
push
mov
push
mov
push
mov
push
mov
push
mov
push
rcl
or
xchg
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pushf
or
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pushf
or
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pushf
or
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
pushf
or
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
int
call
stos
imul
pop
sub
pop
sub
pop
sub
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
or
imul
pop
sub
pop
sub
pop
sub
pop
sub
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
das
push
or
scas
imul
pop
sub
pop
sub
pop
sub
pop
sub
add
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
stos
int
call
stos
imul
pop
sub
pop
sub
pop
sub
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
das
push
xor
loop
or
stos
imul
pop
sub
pop
sub
pop
sub
or
push
mov
push
mov
push
mov
push
xor
loop
or
stos
imul
pop
sub
pop
sub
pop
sub
inc
sub
cld
fisub
cld
cli
jmp
inc
loopne
std
add
mov
mov
mov
sub
push
pop
shl
std
or
cli
mov
xor
std
sbb
cli
push
inc
mov
fs
stos
std
xor
push
aad
xchg
cli
mov
fsubr
in
xor
jmp
pop
mov
in
cld
stos
lds
cmps
(bad)
(bad)
and
adc
xchg
clc
mov
std
cmp
(bad)
std
sbb
mov
in
pop
fsubr
aad
fmul
in
add
cmps
in
int3
scas
movs
cmp
out
inc
fdivr
std
cmp
jnp
lea
movs
or
retf
enter
fsubr
mov
xor
into
jmp
sbb
call
cdq
out
pop
(bad)
leave
xor
cmps
fnstsw
fcos
shr
mov
imul
scas
ror
mov
inc
inc
push
sahf
mov
pop
in
(bad)
mov
adc
mov
inc
fdivr
mov
pop
adc
xchg
pusha
or
stos
loope
loopne
jmp
pop
nop
mov
aad
in
cmps
movs
inc
cwde
stos
aad
mov
sub
stos
loopne
mov
in
ins
adc
mov
cmp
fdivr
fstp
call
enter
mov
aad
les
and
enter
fcom
mov
or
mov
aad
nop
cmps
jmp
inc
mov
pop
and
stos
pop
lods
icebp
sbb
sub
and
add
mov
in
cld
cli
jmp
pop
fstp
aad
mov
and
stos
jmp
sub
jg
xor
cld
pop
cld
stos
int
loopne
aad
loopne
mov
or
add
adc
jnp
or
jecxz
cmp
fnstcw
movs
xor
ror
cld
(bad)
cmc
xor
std
cmp
fnstcw
aad
int3
loop
inc
mov
sub
push
sahf
int
(bad)
loopne
jmp
or
or
fld
lahf
mov
fst
mov
sbb
mov
fld
popa
cli
frstor
cld
mov
icebp
xchg
mov
fnstenv
or
xchg
add
fnstenv
in
mov
sub
stos
aad
loopne
ins
mov
gs
test
cmp
paddw
cmps
rol
fsub
std
or
xor
inc
call
nop
cmps
fnstenv
adc
into
jmp
sbb
out
xor
mov
sub
stos
jmp
or
loopne
jmp
pop
mov
and
call
sub
gs
test
and
bsr
cld
sahf
call
or
repz
sahf
mov
inc
rcr
fnstcw
mov
fnstenv
mov
jmp
pop
call
stos
in
sbb
loopne
mov
inc
loopne
std
add
int3
scas
mov
or
ins
sub
mov
(bad)
xchg
jmp
mov
mov
mov
inc
imul
(bad)
mov
lods
sub
pop
mov
sbb
mov
or
cli
fnstenv
adc
into
fnstcw
dec
xor
mov
cmp
mov
in
cld
cli
jmp
inc
fstp
leave
sub
out
or
cmps
cmc
inc
fmul
mov
pushf
jno
leave
dec
fdivr
or
repnz
sub
stos
pusha
sub
stos
aad
loopne
ins
les
add
stos
aad
fcomp
ror
xchg
xchg
mov
pop
int3
mov
sub
mov
leave
sbb
mov
cmp
jno
inc
fsub
sahf
rcr
scas
fmul
xchg
stos
mov
pop
int3
mov
sub
mov
leave
sbb
mov
cmp
cli
jmp
dec
loopne
jl
fldcw
mov
test
mov
pop
loopne
std
sub
xchg
aad
loopne
mov
cmp
mov
inc
mov
sahf
loope
call
stos
aad
loopne
ins
mov
add
(bad)
mov
call
call
call
mov
stc
sub
adc
mov
hlt
cmp
xchg
in
add
mov
rol
in
pop
test
pop
cmp
int3
adc
and
in
std
sub
loop
or
jnp
xor
pmullw
enter
push
xchg
mov
or
pop
or
lods
adc
adc
xchg
mov
sbb
call
loopne
aad
fdivr
mov
sub
cmp
or
mov
fisttp
jecxz
mov
stos
pop
xor
stos
mov
mov
out
or
xchg
int3
fadd
mov
or
sahf
mov
xor
sub
cmps
mov
push
test
in
mov
movs
pop
push
or
add
sbb
(bad)
jmp
aam
mov
and
xchg
mov
sub
or
sbb
neg
dec
nop
cli
enter
xor
loopne
int
int3
xchg
jmp
shr
std
sub
scas
fs
mov
xor
xchg
mov
xor
sahf
aad
fdivr
lods
inc
push
or
add
mov
pop
popf
iret
fs
mov
sub
xchg
fs
mov
add
jns
(bad)
shr
lods
pop
outs
aad
loopne
ins
mov
or
stos
mov
inc
fcom
in
cmp
mov
pusha
sub
add
pop
loopne
ins
lods
ins
stos
loopne
mov
mov
xor
daa
fs
cmp
xchg
jmp
xor
mov
xor
out
add
xchg
mov
cmp
mov
xor
cli
test
sub
add
pop
loopne
ins
mov
sub
stos
loopne
mov
mov
cmp
scas
fld
in
aad
xchg
cmps
loope
aam
sar
jno
pop
inc
in
stos
movs
sub
scas
pusha
sub
stos
aad
loopne
ins
mov
stos
int3
sbb
sub
add
out
xor
call
fcomp
frstor
mov
lods
inc
fcos
lods
xor
outs
mov
aam
xchg
mov
loopne
mov
xor
mov
xor
add
sub
xchg
movs
sub
cmps
mov
sub
ins
das
pop
fadd
aas
stc
xor
mov
pop
add
stos
jmp
or
or
fnstenv
sahf
loope
aam
int
ins
pop
mov
sub
test
call
cwde
call
stos
ror
in
(bad)
pop
adc
or
mov
pop
mov
scas
mov
shl
mov
xor
cli
fnstcw
xchg
shr
push
loope
mov
shl
xchg
in
in
adc
cdq
lahf
mov
fldenv
or
mov
fld
in
icebp
sub
mov
sbb
enter
mov
mov
cmp
push
pop
shl
and
into
test
sbb
stos
mov
xor
mov
ins
pop
shr
inc
pusha
mov
mov
xchg
int
aam
int
loopne
aad
sbb
sub
fdivr
aad
mov
mov
add
into
mov
cmp
push
pop
fdiv
std
dec
int3
jmp
ins
xchg
(bad)
scas
mov
xchg
iret
dec
xor
cmp
pop
inc
mov
in
mov
call
or
stos
stc
sub
das
(bad)
rcr
pop
xor
dec
add
sub
in
rol
mov
or
pop
xor
sti
pop
sbb
stos
mov
xor
scas
pop
inc
in
in
and
xchg
pop
test
mov
dec
mov
std
pop
fsub
std
xor
sahf
test
pop
cld
mov
test
xchg
in
int3
(bad)
jmp
or
movs
add
addr16
xor
pmullw
(bad)
cmp
call
sub
cli
fnstenv
mov
movs
sub
aas
in
cmp
out
mov
cli
ror
nop
xchg
fldcw
sbb
daa
jmp
cwde
fdiv
in
sub
adc
mov
int3
add
xchg
in
or
cli
rol
in
pop
mov
pop
dec
add
sub
in
rol
mov
or
pop
inc
in
sti
xor
fsubr
jmp
and
(bad)
pop
int
sti
test
fldenv
or
mov
jmp
xor
stos
aad
loopne
mov
or
stos
mov
cmp
mov
movs
rcr
mov
fldcw
sub
loopne
mov
xor
xchg
fnstsw
xchg
shl
in
int
xchg
stos
in
or
cli
rol
in
pop
mov
pop
dec
add
sub
in
shr
imul
fmul
push
stos
lea
(bad)
mov
sub
in
int3
scas
in
push
int3
adc
lea
std
or
mov
aad
loopne
std
sbb
mov
add
loop
add
xchg
sub
fsubr
mov
fadd
inc
pusha
mov
int3
add
xchg
in
or
cli
rol
in
aad
jno
inc
test
rol
les
in
cld
cli
jmp
ins
fstp
mov
xor
mov
aad
mov
inc
or
loop
sbb
mov
or
xchg
fcomp
sub
sbb
cmps
clc
sbb
sahf
push
inc
cld
sahf
std
xor
mov
sbb
stos
mov
add
(bad)
jmp
aad
jnp
or
mov
aad
in
rol
in
pop
lods
ins
pop
pusha
sub
adc
loopne
jl
shr
call
or
xchg
fld
scas
mov
or
pop
xor
sti
pop
sbb
stos
mov
pushf
mov
inc
or
retf
int3
xchg
in
pop
enter
loopne
fdiv
mov
pop
enter
add
xchg
in
cld
cli
std
inc
rcl
in
ins
adc
add
sub
xchg
in
cld
cli
std
inc
rcl
in
ins
adc
add
mov
daa
aad
mov
xor
fwait
cmp
stos
shr
mov
and
xchg
pop
aad
out
pop
fnstcw
inc
call
xchg
pop
xor
inc
or
retf
int3
xchg
in
or
repnz
cld
stos
mov
cmp
scas
mov
or
sahf
std
dec
call
call
sub
mov
call
cmp
jno
std
and
es
pop
ins
jnp
xor
in
mov
loopne
std
and
cmps
std
pop
loopne
std
inc
in
inc
or
(bad)
jmp
sbb
dec
mov
fsubr
fstp
mov
in
add
mov
fs
stos
stc
or
das
xor
add
and
xchg
pop
leave
aad
test
(bad)
call
mov
jmp
fnstcw
push
aam
mov
xor
or
lods
push
stc
xor
stos
mov
sbb
aam
test
in
cld
cli
int
aam
sar
jno
inc
ror
push
push
ss
inc
mov
int
aam
int
fcom
cmp
in
std
push
fst
fsubr
sti
fdivr
jno
movs
pop
(bad)
in
inc
int3
imul
sbb
loop
push
mov
call
inc
mov
loopne
ins
sub
xor
in
mov
loopne
mov
xor
loop
cmp
cmps
fnsave
mov
mov
xor
loop
cmp
cmps
fstp
jno
inc
mov
sahf
int
add
fld
mov
jmp
xor
mov
cmp
ins
das
mov
xor
stos
jmp
cmp
in
push
aam
mov
lds
xor
sahf
test
cmp
rol
call
xchg
mov
nop
xchg
pusha
dec
int3
stos
jmp
pop
fldenv
int
aam
int
fcom
cmp
sbb
int3
mov
enter
push
mov
aam
test
int
call
mov
pop
test
into
mov
xor
mov
in
xor
pusha
call
jno
leave
inc
fdivr
dec
shl
jmp
cmp
mov
test
fnstcw
sbb
mov
inc
fcomp
push
or
stos
mov
call
sub
sbb
outs
and
xchg
sbb
int3
mov
enter
push
mov
aam
test
int
call
mov
pop
fdivr
movs
sub
xchg
aad
loopne
pusha
sub
stos
aad
loopne
ins
mov
pop
ins
stos
sar
nop
xchg
in
or
mov
mov
sub
mov
pop
sbb
or
fsub
mov
mov
out
sub
cli
fnstenv
mov
aad
aam
std
sub
mov
mov
inc
xchg
stos
call
inc
in
jmp
inc
cld
push
xor
(bad)
fstp
jg
xor
sahf
test
sbb
xchg
xchg
jmp
xor
paddw
loopne
mov
leave
fsubr
lods
aam
mov
xor
outs
in
cmp
cmps
in
fdiv
mov
pop
std
ret
fcom
mov
and
fdivr
movs
sub
xchg
aad
loopne
pop
xor
stos
std
or
mov
pop
in
(bad)
pusha
sub
stos
pusha
sub
stos
aad
loopne
pop
xor
stos
std
cmp
mov
fnsave
mov
sbb
sahf
clc
sub
stos
sub
stos
ror
int3
xchg
movs
inc
or
mov
or
mov
jmp
and
loop
sub
loopne
mov
xor
xchg
fnsave
pop
pop
sbb
jmp
sbb
cli
ror
movs
cmp
(bad)
aad
das
lods
add
clc
jmp
fsubr
rcr
scas
int
nop
mov
std
or
(bad)
fst
pushf
daa
jmp
sub
out
pop
loopne
ins
test
stos
and
int3
stos
mov
in
jmp
sub
loop
cmp
repnz
int3
scas
mov
rcl
imul
push
ror
mov
fnstenv
mov
push
mov
sub
pop
push
pop
enter
add
xchg
movs
sub
cmps
mov
and
xchg
pop
mov
scas
icebp
add
xchg
mov
xor
mov
sbb
adc
in
movs
xor
das
fld
fdiv
in
cld
cli
jmp
fld
lahf
call
dec
fcom
in
call
stos
mov
lds
mov
test
adc
mov
mov
or
jp
rol
jmp
or
das
popa
cmp
sahf
dec
fdiv
int
or
pop
enter
xor
test
mov
shl
mov
or
call
mov
mov
pushf
ins
jnp
lds
jmp
mov
aas
jge
or
and
jno
ins
les
test
pop
push
mov
sbb
pusha
jp
mov
mov
out
and
pop
lods
dec
add
dec
mov
inc
inc
pop
and
xor
mov
jno
push
mov
fldenv
ins
cs
mov
xchg
jmp
pop
mov
arpl
add
ins
jnp
or
sbb
jmp
ror
inc
inc
cdq
lahf
fadd
sti
fdivr
jno
mov
pop
xchg
stos
and
fsubr
xor
inc
cmp
or
mov
jmp
and
scas
movs
xor
scas
aad
loopne
movs
add
mov
or
mov
or
pop
add
fcom
movs
pop
xchg
mov
rol
das
mov
popf
and
stos
stc
or
or
mov
mov
in
in
mov
cmp
xchg
in
nop
jno
rcr
push
loope
aam
aad
mov
int
loopne
rol
inc
mov
sahf
lds
mov
aad
call
sub
and
pop
lods
adc
jmp
cmp
fcom
pop
int
mov
mov
sbb
mov
fcomp
std
or
loop
add
fadd
inc
inc
test
int
fdiv
int
loopne
in
test
mov
and
cli
pop
enter
push
mov
aam
test
in
push
shl
push
in
inc
cmp
fmul
ror
adc
cli
sar
mov
popa
cmp
xchg
in
jno
jl
jmp
stos
stc
sub
xor
xor
stos
jo
enter
ins
cmp
cmp
xchg
xchg
fdiv
mov
xor
test
cld
xchg
movs
xor
xchg
in
dec
ins
daa
lods
dec
xchg
and
stos
in
nop
xchg
ins
xor
stos
call
ins
fsub
sub
and
mov
js
aam
sar
mov
mov
or
jmp
jmp
stos
shr
in
inc
pusha
mov
mov
test
shl
nop
mov
pop
shr
xor
or
mov
stc
cmp
xchg
mov
or
xchg
je
mov
push
or
stos
mov
dec
ins
cmp
pop
mov
sub
pop
nop
adc
in
call
cmp
sub
add
in
in
in
leave
cmp
fnstenv
int
mov
mov
sub
stos
aad
loopne
ins
int
sub
popf
lahf
mov
sbb
xchg
fld
xchg
jmp
push
mov
call
cmp
pcmpgtw
fldenv
in
cmp
cmps
in
aam
mov
int
shl
movs
add
in
jmp
sub
push
loope
mov
mov
cmp
xchg
fnstsw
cld
mov
push
fdiv
aad
fcom
int
ins
jnp
sub
adc
loopne
ins
mov
stos
pop
sbb
stos
mov
inc
fsubr
mov
in
int3
into
fldcw
nop
out
add
bsr
ins
imul
int3
sbb
stos
movs
sub
scas
pusha
sub
stos
aad
loopne
ins
les
xor
loopne
jmp
xor
mov
mov
fstp
rcr
aad
fmul
aad
cdq
cli
mov
pop
fsubr
int
aam
int
fcom
stc
or
stos
sar
jno
mov
in
int3
into
fldcw
nop
out
add
bsr
jmp
inc
cdq
out
ins
sbb
stos
(bad)
fmul
sub
out
cmp
scas
mov
fldcw
and
jne
imul
nop
scas
std
pop
ins
jnp
pusha
mov
mov
test
mov
sub
retf
in
std
jmp
mov
(bad)
mov
lods
ins
jg
sub
adc
loopne
in
add
in
cld
cli
int
aam
shl
in
pop
pushf
add
scas
fs
stos
std
dec
call
stos
call
push
(bad)
pop
int3
mov
loopne
inc
mov
sahf
in
mov
pusha
loope
add
xor
arpl
cmp
cmps
in
test
mov
imul
cdq
ja
or
sahf
mov
xor
cli
in
cld
cli
int
aam
shl
in
pop
fsubr
sub
fadd
fsubr
sub
and
loopne
aad
ins
daa
sub
cmp
fst
fsubr
sti
fdivr
jno
fisttp
cld
mov
ror
fcom
in
or
(bad)
cmc
add
in
pop
fsubr
sub
cld
add
or
inc
and
sahf
in
ror
aad
fcomp
mov
sub
jl
inc
sub
(bad)
mov
cmp
jno
ins
or
xchg
lea
fdivr
pop
enter
enter
fcomp
lea
(bad)
(bad)
fnstcw
xchg
aad
ins
daa
fs
cmp
fsubr
int
int3
imul
(bad)
repz
sti
mov
pop
in
adc
in
jmp
push
xchg
jmp
cmp
jno
mov
inc
mov
jmp
inc
adc
mov
inc
fcom
in
cmp
jno
in
xor
sar
sub
push
inc
pop
fcomp
movs
sub
xchg
in
in
adc
mov
(bad)
mov
sub
lahf
mov
out
mov
inc
popf
imul
lahf
call
inc
fcom
mov
sub
aas
ror
(bad)
in
sub
rcr
shr
sub
stos
mov
cwde
fcomp
call
and
out
mov
dec
fs
call
jle
add
sahf
rol
mov
sbb
in
sahf
int
mov
movs
inc
cwde
stos
aad
mov
cmp
stos
in
mov
aad
ins
daa
cmp
call
call
cdq
out
fmul
jmp
cmp
jno
inc
pushf
nop
sahf
stc
add
scas
mov
cmp
mov
mov
inc
mov
in
call
sub
and
cmps
pop
mov
out
pop
call
mov
in
in
adc
jno
mov
sub
mov
inc
sbb
sahf
stc
add
scas
mov
cmp
mov
test
cld
sahf
popa
test
cld
sahf
loope
aam
in
in
adc
jno
aad
mov
cli
in
xor
bswap
inc
call
into
movs
xor
xchg
int
loopne
in
in
adc
jno
aad
loopne
mov
aam
mov
aad
loopne
mov
cmp
mov
inc
fdivr
sahf
and
aam
lahf
mov
loopne
int
xchg
mov
sar
jno
in
xor
cmps
dec
add
in
ror
pmulhuw
xchg
or
mov
movs
cmp
xchg
fisttp
imul
mov
loopne
in
add
call
ins
daa
pop
int3
push
cmp
ins
pavgb
cmp
in
inc
lods
jno
aad
loopne
rcl
ins
arpl
cld
xchg
mov
cmp
jno
mov
movs
xor
push
cwde
cmp
xchg
loop
xor
cmps
in
in
adc
jno
aad
loopne
in
add
in
shl
fmul
fld
in
sar
out
inc
loopne
in
xor
mov
inc
mov
pop
fs
stos
popa
and
int
rcl
aad
ins
daa
pop
mov
or
push
xchg
icebp
xor
das
in
cld
and
rcl
mov
sahf
int
fcom
in
sub
loopne
ror
popa
out
or
cmp
sbb
mov
fldenv
in
pop
mov
loop
xor
loop
ins
call
stos
lods
and
loop
sub
mov
sub
fsincos
mov
inc
and
add
jmp
fmul
fld
in
rol
in
pop
mov
sahf
mov
aad
int
nop
xchg
mov
enter
pop
cwde
out
sub
xchg
aad
loopne
sar
jecxz
cmp
jno
in
add
sbb
aam
and
hlt
xchg
loope
aam
in
in
adc
jno
jl
cwde
stos
std
sub
(bad)
aad
loopne
inc
sbb
sahf
mov
add
in
pop
enter
or
(bad)
mov
add
retf
in
sar
pop
inc
mov
hlt
mov
aad
int
in
xchg
mov
xor
sub
fdiv
int
pushf
mov
in
pop
adc
xor
mov
inc
ins
cld
sahf
mov
pop
aad
sar
jno
popa
lods
or
inc
xor
sahf
mov
cmp
jno
int
push
mov
rcr
jno
int
shl
rcr
mov
cmp
jno
int
mov
aad
xchg
push
inc
ins
cld
sahf
mov
xor
mov
int
pop
inc
movs
mov
mov
lods
jno
mov
sub
xchg
xor
cmps
in
loopne
(bad)
(bad)
mov
sub
xchg
mov
sub
xchg
xor
cmps
in
loopne
(bad)
jg
sar
sahf
jmp
cmp
jmp
fldenv
sub
out
or
cmps
cmc
inc
fmul
mov
aam
mov
aad
loopne
fld
in
mov
movs
jne
in
and
loop
mov
xchg
mov
cmc
imul
add
in
imul
in
pusha
sub
stos
pusha
sub
stos
aad
loopne
pop
fdivr
mov
in
mov
inc
in
rcl
loopne
shl
mov
cmp
xchg
mov
mov
cmp
in
adc
in
sahf
int
mov
in
loopne
in
sub
jp
xor
xchg
fnsave
jmp
xchg
rep
imul
pop
aad
loopne
stc
xor
mov
inc
lods
mov
aad
loopne
in
loopne
xor
pop
scas
mov
xor
mov
xor
mov
cmp
jno
fs
stos
pop
and
xchg
pop
mov
cli
mov
aad
int
call
xchg
aad
loopne
mov
cwde
or
ins
or
stos
mov
shl
or
mov
mov
cmp
fwait
aad
ins
daa
jl
fadd
std
inc
cwde
mov
pop
hlt
cmp
sbb
stos
stc
pop
fsubr
fnstenv
scas
in
in
adc
clc
sahf
rcl
xchg
les
popf
stos
mov
pop
(bad)
mov
arpl
fs
pusha
dec
mov
stos
mov
dec
enter
mov
and
enter
call
sub
jno
std
add
mov
mov
jno
int
aam
int
fcom
mov
sbb
sbb
add
or
(bad)
(bad)
cld
xchg
movs
sbb
xchg
mov
sub
xor
mov
xor
push
stos
movs
or
mov
mov
sbb
sbb
pop
mov
int
loopne
aad
loopne
mov
mov
fmul
jmp
mov
rcr
fstp
mov
fld
in
rol
in
pop
fsubr
loopne
aam
in
inc
hlt
sahf
mov
inc
aam
in
inc
hlt
sahf
mov
and
pushf
inc
and
ins
pop
lock
sub
in
sar
jno
in
xor
or
and
mov
mov
sbb
call
jno
aad
loopne
aad
mov
inc
cmp
sahf
shl
in
mov
and
xchg
pop
mov
jg
add
sbb
cld
scas
in
cld
cli
movs
test
aad
fcomp
aad
loopne
shl
in
pop
shr
push
xor
aas
in
or
cmps
int
loopne
jl
aam
in
pop
les
jl
aam
in
pop
les
jl
aam
in
or
mov
or
out
push
aam
in
xor
mov
mov
neg
sbb
mov
cmps
std
sbb
mov
pop
nop
xchg
in
or
xchg
shr
xchg
jl
aam
in
or
mov
pop
fcom
int
push
mov
mov
or
fsub
aad
mov
in
or
mul
or
in
nop
mov
fld
into
jmp
dec
in
out
push
cwde
stos
aad
int3
loop
xor
mov
or
cli
(bad)
jmp
scas
icebp
cmp
xchg
std
or
cmps
mov
inc
aam
std
cmp
jno
in
or
jmp
loopne
jmp
add
loop
mov
mov
cld
cli
or
mov
in
fsub
std
add
out
mov
mov
cmp
mov
or
jecxz
sub
scas
in
fmul
cmc
or
xchg
mov
mov
jno
rol
nop
loop
or
scas
mov
or
enter
xchg
mov
int
hlt
call
mov
pmullw
cli
in
mov
jmp
sbb
mov
cmps
std
or
loopne
ins
enter
pop
int3
stos
jmp
sbb
mov
aad
enter
fmul
std
cmp
jno
inc
(bad)
int3
sahf
int
mov
jmp
pop
fcom
int
push
mov
in
pusha
call
aas
push
sub
loopne
std
or
cli
mov
xor
aad
mov
jmp
or
aad
hlt
call
loopne
aad
test
jmp
and
mov
and
fdiv
push
or
stos
xor
call
fwait
jl
mov
mov
or
mov
stc
sub
mov
mov
xor
xchg
in
or
stos
test
xchg
stos
mov
nop
out
sbb
mov
mov
dec
mov
movs
or
out
inc
std
loop
inc
int3
out
inc
int3
cmps
call
inc
mov
xchg
in
inc
xchg
jmp
shr
inc
int3
stos
std
ins
fdiv
icebp
sbb
xchg
shr
(bad)
fnstenv
aam
jmp
xor
cli
int
fnstcw
aad
call
xchg
std
dec
xchg
mov
inc
xchg
cli
test
in
test
sub
mov
mov
shr
in
or
stos
test
mov
stos
std
sbb
out
xor
cli
int
loopne
mov
add
sti
std
pop
mov
int
mov
stos
fisttp
xchg
stc
xor
mov
movs
jno
in
or
sahf
cmc
add
xchg
mov
cmp
mov
cmp
fs
add
lds
std
xor
out
adc
stos
lea
fnstcw
std
pop
in
mov
xor
mov
mov
add
mov
inc
fisttp
movs
sub
out
adc
adc
aas
in
pop
in
jmp
or
out
sbb
stos
test
pop
call
sbb
in
int
fdiv
mov
xor
mov
in
or
idiv
or
call
loopne
aad
test
aad
in
int
fdiv
fnstenv
loopne
dec
pop
cwde
stos
mov
sar
call
sbb
sti
leave
dec
fdivr
in
push
int3
jmp
mov
int
fsub
std
or
cli
lea
mov
int
(bad)
jmp
mov
enter
std
inc
xchg
out
push
cld
mov
call
and
mov
rcr
lds
stc
sub
das
mov
ins
fsubr
std
add
call
(bad)
and
int3
mov
adc
mov
pop
inc
hlt
stos
jmp
inc
mov
pop
int
aam
int
fcom
in
fcom
in
xchg
mov
rcr
stos
clc
sub
stos
movs
and
adc
mov
aad
loopne
mov
pusha
aam
movs
xor
aas
enter
aad
mov
loope
mov
aad
loopne
ror
loopne
aad
fnstenv
call
or
stos
call
xor
mov
mov
pop
loopne
int
aam
int
loopne
mov
pop
in
rcr
stc
xor
xchg
int
loopne
call
xor
stos
rol
mov
rcl
mov
xor
cli
int
inc
xchg
rcl
mov
mov
mov
push
std
mov
xor
cli
int
push
xchg
xor
mov
or
cli
movs
xor
xchg
rol
mov
rcl
mov
xor
cli
int
ins
xchg
adc
cs
or
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
rcr
sahf
mov
sub
lea
enter
imul
adc
gs
pop
gs
(bad)
in
inc
pop
push
es
pop
gs
pop
das
push
or
pusha
iret
pop
sub
pop
push
(bad)
pop
jns
call
gs
(bad)
or
(bad)
pop
gs
pop
gs
(bad)
mov
movs
inc
push
or
outs
jl
pop
pop
push
popf
pop
pop
push
mov
sub
daa
(bad)
pop
push
es
pop
gs
sbb
fsub
(bad)
pop
push
not
mov
(bad)
pop
gs
gs
dec
ds
lds
push
(bad)
pop
gs
pop
gs
pop
add
dec
test
fisttp
dec
jnp
lea
int3
and
mov
es
pop
gs
pop
gs
pop
in
(bad)
sbb
es
pop
gs
pop
gs
pop
gs
(bad)
pop
add
es
inc
fs
inc
xchg
js
(bad)
pop
sub
xchg
gs
inc
mov
sub
popa
es
pop
gs
pop
gs
ret
mov
cmc
stos
imul
popa
es
shl
inc
pop
jle
(bad)
pop
sub
aad
gs
adc
mov
jmp
push
sbb
mov
xor
cld
mov
pop
aad
fst
push
call
es
pop
gs
pop
gs
pop
gs
scas
ss
pop
sub
(bad)
pop
gs
pop
gs
addr16
mov
push
test
xchg
inc
pop
push
es
pop
gs
gs
fsub
push
mov
push
les
pop
xor
mov
xlat
push
or
push
(bad)
pop
gs
fs
popf
mov
test
or
push
pop
push
fcomp
jle
adc
gs
gs
(bad)
or
(bad)
pop
gs
call
push
test
push
or
pop
test
xchg
pop
jnp
or
push
test
movs
pop
aaa
mov
mov
ins
movs
pop
imul
inc
sub
pop
mov
pusha
inc
cwde
(bad)
adc
(bad)
adc
clc
inc
sahf
or
sub
(bad)
fcmovbe
xchg
(bad)
pop
push
es
pop
gs
dec
addr16
mov
push
(bad)
pop
gs
pop
gs
or
pop
sub
pop
dec
ds
push
sub
pop
push
mov
mov
outs
movs
pop
aaa
sahf
or
inc
sub
pop
(bad)
ins
push
movs
(bad)
pusha
inc
mov
adc
(bad)
adc
xchg
inc
sahf
or
stos
gs
sub
xchg
in
mov
test
pop
jnp
(bad)
pop
das
es
pop
gs
dec
addr16
mov
push
mov
(bad)
out
lds
jb
pop
add
or
xlat
lds
jb
pop
or
es
in
or
push
ret
fdivp
inc
xchg
or
imul
ins
mov
inc
jle
(bad)
pop
sub
shl
cvtps2pd
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
mov
mov
fdiv
mov
push
aad
pop
pop
pop
ins
sub
or
and
sahf
mov
imul
sub
(bad)
pop
gs
je
dec
ds
(bad)
pop
sub
pop
sub
mov
gs
xchg
or
imul
ins
mov
inc
jle
(bad)
pop
sub
(bad)
pop
gs
cvtps2pd
ins
mov
sub
jne
hlt
add
ins
mov
movs
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
push
mov
cs
mov
and
mov
push
mov
push
push
mov
push
push
xor
dec
sub
pop
daa
sahf
or
sub
or
out
cmp
mov
push
scas
pop
gs
test
xchg
or
nop
xor
lds
push
(bad)
pop
gs
in
call
or
outs
jl
pop
pop
push
aam
dec
mov
or
pusha
(bad)
pop
sub
pop
sub
mov
gs
or
push
cdq
pop
dec
push
mov
push
push
pop
pop
push
or
jmp
mov
sub
pop
sub
(bad)
pop
gs
scas
stos
nop
pop
push
ror
addr16
pop
gs
pop
gs
pop
gs
or
stos
je
pop
repnz
sub
lahf
pop
gs
mov
in
cmc
sbb
lods
lods
pop
pop
jle
nop
sbb
mov
sub
shl
jle
(bad)
pop
sub
sahf
mul
pop
loop
mov
push
(bad)
pop
gs
or
ins
(bad)
pop
sub
pop
sub
sahf
pop
gs
inc
in
mov
push
(bad)
pop
gs
pop
gs
cvtps2pd
ins
mov
sub
ins
mov
mov
ins
mov
push
pop
pop
pop
ins
mov
sub
mov
mov
lock
mov
inc
push
aad
pop
pop
pop
ins
gs
sub
sahf
lea
imul
sub
(bad)
pop
gs
pop
gs
inc
in
mov
push
(bad)
pop
gs
(bad)
movs
push
popa
inc
mov
scas
mov
shl
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
mov
mov
xor
push
mov
inc
push
test
pop
ds
(bad)
pop
sub
(bad)
pop
gs
je
dec
ds
(bad)
pop
sub
pop
sub
(bad)
pop
gs
(bad)
movs
push
popa
sti
mov
scas
mov
movs
pop
das
push
retf
jb
pop
das
push
mov
pop
das
push
gs
loopne
gs
stc
adc
dec
imul
(bad)
pop
das
es
pop
gs
dec
addr16
mov
push
cmps
pop
gs
mov
movs
pop
das
push
sbb
movs
pop
das
push
retf
jb
pop
das
push
mov
pop
das
push
gs
loopne
gs
test
mov
scas
mov
push
(bad)
pop
gs
pop
gs
pop
gs
scas
ss
pop
sub
(bad)
pop
gs
pop
gs
mov
movs
pop
das
push
ficomp
bound
(bad)
stos
mov
movs
pop
das
push
mov
pop
das
push
gs
loopne
gs
rcl
dec
imul
(bad)
pop
daa
es
pop
gs
pop
gs
pop
gs
scas
ss
pop
sub
(bad)
pop
gs
pop
gs
or
pop
test
xchg
pop
inc
ds
push
sub
pop
ja
or
inc
sub
pop
imul
inc
test
ret
ins
push
xor
pusha
inc
add
adc
(bad)
adc
fs
pop
inc
cmps
mov
(bad)
pop
push
es
pop
gs
cvtps2pd
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
mov
mov
mov
and
idiv
push
push
inc
cmps
xor
xchg
gs
ja
shl
pop
push
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
mov
mov
les
push
mov
stc
push
xor
pop
es
pop
gs
pop
gs
mov
shl
add
ins
mov
sub
jne
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
sub
push
mov
push
aad
pop
pop
pop
push
or
sub
test
mov
gs
pop
gs
cvtps2pd
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
movs
shr
sahf
add
inc
test
adc
es
xchg
or
out
and
add
jp
stc
mov
inc
cmps
or
(bad)
pop
gs
gs
lea
sub
mov
stos
imul
das
inc
mov
stos
imul
and
stos
imul
mov
ret
jbe
mov
mov
and
push
mov
inc
push
inc
or
ins
(bad)
pop
sub
pop
sub
inc
je
dec
ds
(bad)
pop
sub
pop
sub
(bad)
pop
gs
(bad)
movs
push
popa
jae
imul
and
(bad)
stos
mov
shl
pop
pop
pop
fs
ins
push
nop
(bad)
pusha
inc
loopne
adc
(bad)
adc
rol
sahf
xor
lds
push
(bad)
pop
gs
pop
gs
dec
addr16
mov
push
(bad)
pop
gs
sub
jne
cmp
pop
cmp
fcom
gs
(bad)
adc
outs
inc
sbb
sub
mov
mov
mov
and
bts
and
(bad)
stos
mov
and
scas
stos
mov
in
das
push
gs
loopne
gs
mov
mov
dec
mov
pop
pop
pop
push
push
mov
push
es
pop
gs
inc
pop
ds
(bad)
pop
sub
xchg
pop
gs
or
pop
sub
pop
dec
ds
push
sub
pop
push
mov
mov
outs
movs
pop
aaa
sahf
or
inc
sub
pop
(bad)
ins
push
pushf
(bad)
pusha
inc
in
(bad)
adc
(bad)
adc
int3
inc
sahf
or
sub
fsubr
pop
xchg
and
inc
cmps
xor
(bad)
pop
sub
es
(bad)
xchg
or
pop
das
inc
mov
stos
imul
and
stos
imul
xor
stos
imul
aaa
test
xchg
test
xchg
imul
call
mov
or
inc
cmps
mov
xchg
gs
scas
out
clc
pop
or
cvtps2pd
ins
mov
and
ins
mov
sub
jne
les
pop
jle
mov
lods
les
pop
pop
ins
mov
push
sbb
and
iret
push
aad
pop
pop
pop
push
push
mov
push
es
pop
gs
pop
gs
cvtps2pd
fs
jb
ds
push
sub
cmc
ret
imul
xor
stos
imul
aaa
test
xchg
test
xchg
or
jecxz
test
inc
cmps
xor
(bad)
pop
sub
es
(bad)
movs
push
popa
sti
mov
scas
mov
movs
pop
das
push
retf
jb
pop
das
push
mov
pop
das
push
gs
loopne
gs
adc
scas
mul
repz
sub
inc
cmps
mov
es
pop
gs
pop
gs
or
pop
sub
inc
ds
push
sub
pop
and
mov
outs
movs
pop
imul
inc
test
ret
ins
push
rol
inc
rol
adc
(bad)
adc
xor
or
sub
(bad)
in
xchg
inc
pop
push
es
pop
gs
pop
gs
mov
movs
pop
das
push
ficomp
bound
(bad)
stos
mov
movs
pop
das
push
mov
pop
das
push
gs
loopne
gs
jmp
mov
dec
mov
inc
cmps
mov
es
pop
gs
pop
gs
mov
and
bts
movs
push
das
push
retf
jb
pop
das
push
mov
pop
das
push
gs
loopne
gs
jmp
mov
dec
mov
inc
cmps
mov
es
pop
gs
pop
gs
mov
movs
push
das
push
xchg
pop
aaa
bound
(bad)
stos
mov
movs
pop
das
push
mov
pop
das
push
gs
loopne
gs
jmp
mov
dec
mov
inc
cmps
mov
es
pop
gs
gs
ja
shl
pop
push
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
mov
sub
jne
les
pop
pop
ins
mov
sub
mov
mov
or
push
mov
push
aad
pop
pop
pop
push
push
mov
push
es
pop
gs
pop
gs
cvtps2pd
fs
or
ds
push
test
movs
pop
or
inc
inc
or
mov
in
popa
add
mov
gs
loopne
gs
xor
scas
mul
iret
push
test
push
or
pop
sub
pop
jae
or
push
test
movs
pop
adc
mov
ins
movs
pop
sbb
mov
ins
ret
ins
push
hlt
(bad)
pusha
inc
(bad)
(bad)
adc
(bad)
adc
and
sahf
or
sub
icebp
imul
std
xchg
inc
cmps
xor
(bad)
pop
and
shl
cvtps2pd
ins
mov
sub
ins
mov
mov
ins
mov
push
pop
pop
pop
ins
mov
sub
mov
mov
clc
mov
mov
inc
push
aad
pop
pop
pop
ins
gs
sahf
or
stos
jo
(bad)
mov
inc
pop
push
es
pop
gs
pop
gs
xchg
xor
adc
gs
pop
gs
cvtps2pd
fs
or
ds
push
test
movs
pop
or
mov
imul
add
mov
imul
ret
ins
push
hlt
(bad)
pusha
inc
(bad)
(bad)
adc
(bad)
adc
and
sahf
or
sub
repz
std
xchg
inc
cmps
xor
(bad)
pop
sub
hlt
cvtps2pd
ins
mov
sub
jne
hlt
add
ins
mov
sub
jne
les
pop
jle
movs
shr
sahf
add
inc
test
adc
push
test
xchg
or
out
pop
test
inc
cmps
xor
(bad)
pop
sub
and
pop
pop
ins
mov
push
pop
inc
pop
or
pop
sub
adc
or
push
test
movs
pop
jnp
add
inc
sub
sub
popa
mov
gs
loopne
gs
int
and
imul
into
push
mov
push
push
mov
push
es
pop
gs
pop
gs
cvtps2pd
fs
inc
sub
or
push
test
movs
pop
sbb
inc
inc
or
sub
popa
mov
gs
loopne
gs
int
and
imul
into
push
mov
ins
pop
adc
jg
mov
push
es
pop
gs
pop
gs
in
pop
cmps
fsubr
dec
push
sahf
add
sub
test
es
pop
gs
xchg
sub
lea
jo
mov
arpl
(bad)
pop
gs
pop
gs
pop
gs
mov
push
es
pop
gs
gs
(bad)
in
sub
add
fdivp
push
xchg
mov
jne
(bad)
pop
gs
pop
gs
in
jbe
fst
or
fdivp
push
xchg
mov
jne
(bad)
pop
gs
fs
sub
and
fdivp
push
xchg
mov
jne
mov
mov
mov
inc
inc
jle
(bad)
pop
sub
(bad)
pop
gs
pop
fstp
push
dec
mov
push
and
inc
jle
(bad)
pop
sub
(bad)
pop
gs
pop
mov
pop
push
jmp
imul
adc
pop
in
dec
hlt
and
mov
dec
(bad)
pop
imul
sub
(bad)
pop
gs
data16
out
mov
test
(bad)
sbb
xchg
gs
gs
sub
(bad)
adc
gs
pop
gs
addr16
mov
inc
(bad)
sbb
(bad)
pop
gs
gs
gs
(bad)
adc
gs
sub
nop
pop
sbb
add
jg
aas
adc
(bad)
mov
jg
pop
fs
sbb
sub
test
mov
jns
push
pop
push
(bad)
pop
gs
pop
gs
mov
imul
pop
ds
(bad)
sbb
es
pop
gs
pop
gs
gs
pop
or
(bad)
pop
gs
in
(bad)
pop
inc
and
pop
sub
xchg
pop
gs
test
mov
adc
fwait
mov
jg
fisub
clc
imul
jmp
or
stos
xchg
pop
aaa
jg
scas
ss
pop
sub
(bad)
pop
gs
gs
push
(bad)
pop
gs
gs
out
or
stos
xchg
pop
aaa
sahf
sub
stos
ror
idiv
inc
adc
pop
xor
xchg
pop
gs
call
(bad)
pop
sub
(bad)
pop
gs
adc
sub
jl
jnp
push
pop
mov
xchg
mov
jne
ret
pop
gs
cwde
fs
pop
gs
gs
cmc
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
mov
pop
sti
js
or
jmp
inc
jle
mov
(bad)
mov
or
jmp
inc
jle
or
stos
imul
popa
clc
adc
xchg
push
imul
mov
jp
jne
xchg
and
xchg
push
imul
dec
sub
cmp
fistp
dec
mov
dec
ja
mov
push
cmps
pop
gs
addr16
out
imul
pop
sub
not
gs
mov
xchg
mov
dec
sbb
dec
sub
push
sub
inc
sbb
imul
pop
out
sub
lods
test
sbb
mov
adc
sub
sub
lods
stos
inc
sbb
mov
adc
sub
imul
stos
jp
sbb
imul
mov
test
inc
mov
mov
(bad)
fidivr
je
mov
or
jecxz
lds
mov
neg
js
je
mov
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
mov
xchg
or
retf
imul
popa
clc
ja
cmp
or
aaa
jp
in
sub
mul
mov
cdq
pop
pop
jp
jne
xchg
ja
push
test
cdq
pop
pop
jp
mov
push
mov
fidivr
mov
inc
jb
(bad)
pop
sub
not
gs
aaa
jp
mov
jle
cmps
xchg
hlt
sbb
fs
leave
sub
test
imul
cmps
mov
mov
(bad)
dec
stos
movs
lahf
pop
cmp
test
jmp
mov
jno
pop
inc
es
pop
gs
pop
in
add
dec
stos
test
dec
mov
imul
cmp
dec
stos
xchg
or
sti
imul
cmp
dec
stos
xchg
or
jmp
lds
clc
xor
dec
stos
cmps
mov
stos
push
add
inc
pop
or
pop
sub
ficom
gs
or
out
test
push
cmp
dec
stos
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
mov
xchg
or
jmp
lds
clc
xor
dec
stos
cmps
mov
stos
push
add
pop
(bad)
pop
or
pop
sub
ficom
gs
or
out
mov
clc
mul
(bad)
mov
jp
stc
sub
mul
mov
cdq
pop
pop
jp
mov
push
test
cdq
pop
pop
jp
sbb
mov
pop
mov
mov
inc
dec
push
push
(bad)
pop
gs
gs
aaa
jp
mov
jle
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
mov
stos
outs
enter
inc
cmps
xchg
les
pop
jle
mov
stos
outs
call
xchg
pop
mov
sub
push
imul
cmp
es
pop
gs
dec
dec
hlt
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
jecxz
pop
pop
jnp
or
jmp
inc
jle
mov
mov
pop
xchg
jp
or
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
add
or
jmp
inc
jle
or
imul
stos
xchg
or
jmp
mov
cmp
imul
cmps
mov
lods
dec
dec
or
movs
test
pop
pop
jle
mov
jo
cmc
enter
xchg
imul
mov
imul
cmps
mov
sbb
enter
pop
pop
jle
mov
jo
movs
enter
dec
leave
repz
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
sub
cwde
stos
mov
xor
psubusw
shl
dec
or
fsub
aad
nop
cmps
int
fdivr
icebp
or
mov
jmp
xor
addr16
or
cmps
int
loopne
call
cmp
loop
inc
fldcw
mov
cmp
loop
push
fldcw
std
or
adc
sbb
ret
fsubr
leave
or
cli
fdiv
test
mov
adc
sahf
in
sub
stos
in
int3
xchg
jmp
sub
hlt
or
stos
std
adc
mov
int
(bad)
cli
in
in
stos
mov
sub
(bad)
int
fsubr
std
xor
sti
aad
mov
imul
mov
imul
pop
adc
pop
mov
cmp
imul
pop
(bad)
stos
imul
pop
scas
imul
xchg
imul
pop
sti
imul
pop
mov
imul
pop
stos
imul
pop
jg
or
push
or
pop
xchg
imul
pop
scas
push
xor
pop
jecxz
xor
imul
pop
sbb
pop
scas
imul
pop
fwait
imul
pop
sbb
pop
xchg
imul
pop
scas
imul
pop
xchg
imul
pop
addr16
add
dec
stos
jl
movs
mov
ins
mov
sub
pop
aaa
rcr
inc
into
hlt
pop
arpl
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
dec
daa
xchg
or
retf
imul
popa
clc
in
cmp
lock
inc
std
pop
imul
cwde
push
imul
pop
aaa
sahf
or
and
and
or
jmp
fwait
dec
jg
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
mov
dec
push
ss
pop
pop
jle
mov
dec
pop
mov
jp
sbb
imul
mov
test
inc
mov
mov
mov
js
hlt
cdq
or
or
jecxz
lds
mov
neg
js
je
mov
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
cmp
(bad)
mov
jp
and
mul
mov
cdq
pop
pop
jp
inc
sub
mul
test
cdq
pop
pop
jp
xor
sub
push
fidivr
nop
cdq
or
push
ins
test
test
pop
jle
jne
sub
mov
test
inc
xchg
(bad)
pop
xor
test
in
imul
stos
imul
ret
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
mov
dec
push
ss
pop
pop
jle
mov
dec
pop
mov
jp
sbb
imul
mov
test
inc
mov
mov
mov
js
hlt
cdq
or
or
jecxz
lds
mov
neg
js
je
mov
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
cmp
(bad)
mov
jp
and
mul
mov
cdq
pop
pop
jp
xor
sub
mov
or
sub
(bad)
gs
push
fidivr
nop
cdq
or
push
ins
test
enter
imul
pop
jecxz
inc
xchg
(bad)
pop
xor
test
in
imul
test
imul
mov
push
es
pop
gs
pop
gs
push
pop
imul
pop
gs
aaa
mov
or
imul
pop
push
movs
pop
in
lea
pop
es
pop
gs
gs
pop
mov
mov
rcr
sub
stc
out
ins
lea
fxch
pop
or
movs
test
pop
pop
jle
mov
dec
es
pop
gs
pop
gs
fstp
push
(bad)
pop
push
and
pop
sub
fcomip
fs
or
and
ficom
gs
or
out
jmp
push
stc
mov
pop
pop
push
inc
cmps
shl
(bad)
pop
push
es
jne
mov
pop
jle
(bad)
pop
sub
shl
ins
or
sub
and
imul
imul
pop
(bad)
fnstcw
pop
sub
sbb
imul
pop
push
not
gs
aaa
jp
popf
das
push
or
dec
stos
pusha
sub
push
pop
mov
sub
int
test
cmp
enter
push
ficom
jmp
inc
jle
(bad)
pop
sub
shl
ins
mov
stos
outs
ficomp
xchg
or
retf
imul
mov
push
add
pushf
push
imul
stc
scas
ins
hlt
pop
sbb
or
jecxz
lds
xor
not
gs
aaa
jp
and
mov
hlt
dec
stos
pusha
sub
push
pop
mov
sub
int3
movs
test
cmp
enter
push
ficom
jmp
inc
jle
(bad)
pop
sub
(bad)
pop
gs
push
in
xor
dec
test
xchg
or
stos
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
cmp
mov
loopne
(bad)
pop
arpl
(bad)
pop
gs
gs
aaa
jp
imul
imul
fsubr
pop
mov
sub
int3
movs
test
jo
jle
mov
sub
pop
dec
sub
mov
cmc
pop
jecxz
lds
xor
(bad)
pop
gs
dec
addr16
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
mov
dec
pop
stos
stos
enter
pop
pop
jle
mov
enter
jle
lahf
leave
sub
stc
mov
xchg
enter
push
movs
mov
imul
cmc
jmp
rcl
(bad)
cmp
mov
js
enter
shr
fld
int
imul
pop
jecxz
lds
xor
not
gs
aaa
jp
or
jle
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
loope
add
dec
stos
int3
mov
cmps
mov
stos
push
pop
sti
sub
movs
cwde
loope
dec
or
movs
push
and
pop
sub
ficom
gs
gs
in
cmp
dec
xor
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
enter
dec
leave
lock
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
popa
clc
mul
(bad)
mov
jp
lds
mul
mov
cdq
pop
pop
jp
and
push
or
pop
jp
cdq
cs
or
fidivr
enter
shr
fxch
lock
cmc
fcom
or
jecxz
lds
xor
not
gs
aaa
jp
or
xchg
or
retf
imul
popa
clc
gs
cmp
lock
leave
inc
fisub
rcr
mov
adc
sub
imul
test
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
xchg
or
retf
imul
mov
jp
adc
jmp
inc
jle
or
stos
imul
popa
clc
movs
cmp
imul
lock
imul
cwde
push
imul
pop
mov
xor
dec
aas
sub
dec
cs
pop
sub
leave
push
in
mov
pop
push
leave
pop
scas
xor
dec
cs
pop
sub
(bad)
pop
gs
pop
mov
imul
sbb
xchg
mov
jno
(bad)
pop
gs
out
test
loopne
jnp
movs
push
and
pop
sub
leave
(bad)
xor
dec
cs
pop
sub
(bad)
pop
gs
leave
inc
sub
xchg
(bad)
pop
inc
es
pop
gs
pop
in
(bad)
dec
cs
pop
sub
call
es
pop
gs
pop
gs
pop
gs
call
jb
pop
add
lds
gs
pop
or
xchg
pop
gs
mov
(bad)
aaa
dec
pop
dec
and
pop
sub
call
push
(bad)
pop
gs
pop
gs
push
pop
inc
and
pop
sub
test
out
imul
clc
test
imul
gs
movs
mov
xchg
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
enter
jle
mov
stos
fs
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
mov
stos
ins
enter
inc
cmps
xchg
les
pop
jle
mov
sub
pop
and
xchg
pop
mov
and
push
sbb
sub
sahf
xchg
or
and
jle
mov
jne
(bad)
pop
gs
dec
leave
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
shl
je
dec
ds
(bad)
pop
sub
pop
sub
ficom
gs
gs
in
add
scas
xor
mov
sub
push
test
push
mov
lock
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
sub
or
jmp
inc
jle
or
stos
imul
popa
clc
and
xchg
push
imul
stos
adc
enter
pop
pop
jle
mov
jo
movs
enter
dec
lahf
pop
subps
sbb
imul
mov
test
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
retf
fidivr
hlt
call
aad
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
xchg
daa
xchg
or
retf
imul
cmp
lock
leave
inc
(bad)
sbb
mov
adc
sub
imul
test
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
jle
cmps
xchg
hlt
sbb
fs
leave
stos
push
movs
mov
imul
cmc
jmp
movs
push
popa
clc
(bad)
cmp
mov
js
mov
sub
(bad)
pop
call
adc
adc
inc
jle
(bad)
pop
sub
mov
gs
in
(bad)
lock
jne
sub
test
lds
xor
cmps
pop
gs
dec
out
(bad)
pop
jns
(bad)
pop
gs
pop
gs
mov
out
movs
push
popa
jg
cmp
es
pop
gs
shl
ins
mov
cmps
xchg
hlt
jns
jle
fmul
sub
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
add
dec
stos
inc
mov
cmps
mov
stos
push
pop
sti
imul
call
jb
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
inc
pop
pop
or
movs
push
and
pop
sub
lahf
pop
gs
(bad)
mov
cmps
pop
gs
mov
shl
ins
fmulp
sub
rcl
sub
cmp
sub
call
inc
jle
or
stos
imul
popa
clc
movs
cmp
imul
lock
imul
cwde
push
imul
pop
mov
add
dec
stos
cmp
movs
mov
ins
mov
sub
pop
and
fwait
clc
(bad)
loope
pop
ja
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
xchg
or
retf
imul
popa
clc
in
cmp
lock
leave
(bad)
imul
cwde
push
imul
pop
mov
add
dec
stos
cmp
movs
mov
ins
mov
stos
push
pop
add
sbb
(bad)
in
pop
arpl
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
xchg
or
retf
imul
popa
clc
gs
cmp
lock
enter
imul
cwde
push
imul
pop
mov
add
dec
stos
cmp
movs
mov
ins
mov
sub
pop
arpl
fwait
clc
inc
repnz
pop
aas
sub
mov
xchg
pop
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
jle
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
mov
stos
imul
xor
cmps
xchg
les
pop
jle
mov
stos
imul
inc
jle
xchg
pop
mov
and
push
sbb
sub
sahf
xchg
or
cmp
mov
pop
pop
jle
mov
jne
(bad)
pop
gs
push
in
pop
pop
pop
hlt
adc
xchg
push
imul
mov
jp
in
sub
test
push
es
or
jmp
inc
jle
or
stos
imul
cmp
movs
test
sbb
ins
mov
stos
imul
(bad)
out
pop
cmp
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jno
push
or
dec
stos
and
pop
cmp
pop
stos
jno
dec
or
movs
test
pop
pop
jle
mov
jo
movs
enter
jle
hlt
leave
sub
or
pop
jp
mov
push
or
cmp
ss
or
jmp
inc
jle
or
stos
imul
cmp
movs
test
sbb
ins
mov
sub
rcr
hlt
pop
aas
sub
mov
xchg
pop
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
or
xchg
or
retf
imul
popa
clc
in
cmp
lock
inc
retf
rcr
mov
adc
sub
add
dec
stos
cmp
dec
mov
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
xor
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
sub
movs
cwde
aad
pop
or
movs
push
and
pop
sub
ficom
gs
gs
in
cmp
dec
mov
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
mov
inc
pop
stos
mov
pop
sub
or
jecxz
lds
mov
neg
js
je
mov
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jge
push
or
dec
stos
mov
sub
std
dec
dec
or
movs
test
pop
pop
jle
mov
jo
movs
enter
dec
dec
cli
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
mov
imul
pop
mov
(bad)
pop
gs
pop
gs
jnp
and
pop
imul
inc
pop
jle
(bad)
pop
sub
(bad)
pop
gs
push
out
or
dec
stos
sub
pop
cmp
or
pop
jp
xchg
das
push
lds
stos
mov
adc
sub
sub
lods
stos
inc
sbb
mov
adc
sub
imul
stos
scas
popf
pop
inc
push
mov
sub
push
test
push
in
addr16
or
imul
mov
ins
(bad)
adc
gs
pop
gs
fs
lds
push
not
gs
aaa
mov
or
imul
movs
adc
and
mov
gs
mov
imul
pop
gs
gs
pop
mov
mov
rcr
sub
stc
out
ins
lea
fxch
pop
or
movs
test
pop
pop
jle
mov
dec
es
pop
gs
xor
dec
sub
pop
lahf
mov
lea
loopne
pop
cmp
test
imul
mov
imul
cwde
test
imul
test
jmp
mov
rol
pop
xor
not
gs
aaa
jp
aad
push
or
aaa
jp
inc
sub
mul
mov
cdq
pop
pop
jp
std
sub
test
cdq
pop
pop
jp
in
push
push
pop
mov
mov
vxorps
pop
sub
xchg
pop
in
or
dec
stos
loopne
pop
cmp
test
imul
mov
imul
cwde
test
imul
mov
data16
mov
ffreep
pop
inc
es
pop
gs
pop
gs
pop
in
or
dec
stos
mov
call
push
imul
mov
imul
test
imul
test
jmp
mov
faddp
pop
push
not
gs
aaa
jp
mov
push
or
aaa
jp
cdq
das
push
or
pop
jp
pop
cs
or
pop
jp
sub
sub
dec
fisubr
inc
or
loope
mov
pop
or
pop
sub
lahf
pop
gs
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
test
xor
rcl
pop
pop
pop
pusha
or
nop
and
fimul
out
rcr
jmp
movs
test
sbb
ins
mov
stos
push
pop
jnp
fwait
stc
inc
pop
hlt
pop
arpl
or
jecxz
movs
mov
xor
fimul
out
test
pop
cmp
movs
test
sbb
ins
mov
stos
push
pop
jnp
fwait
stc
inc
pop
hlt
pop
ja
or
jecxz
movs
mov
xor
fimul
out
imul
cmp
movs
test
sbb
ins
mov
stos
push
pop
jnp
fwait
stc
inc
pop
hlt
pop
ja
or
jecxz
cmc
mov
mov
mov
dec
pop
je
sub
push
sub
inc
sbb
imul
pop
out
sub
lods
stos
inc
sbb
mov
adc
sub
sub
jmp
mov
mov
adc
sub
mov
sub
ficomp
xchg
or
stos
imul
cmp
movs
test
sbb
ins
mov
sub
pop
pop
rcr
inc
pop
hlt
pop
push
sub
mov
xchg
pop
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jmp
scas
mov
mov
test
pop
cmp
aam
imul
movs
test
pop
pop
jle
mov
jo
movs
enter
jle
mov
stos
ins
ficomp
xchg
or
retf
imul
cmp
lock
enter
imul
cwde
push
imul
pop
mov
call
or
imul
arpl
pop
push
cdq
pop
aaa
jp
jmp
scas
mov
mov
sbb
sub
and
movs
test
pop
pop
jle
mov
jo
movs
enter
jle
mov
stos
ins
ficomp
xchg
or
retf
imul
popa
clc
gs
cmp
lock
inc
and
rcr
mov
adc
sub
or
dec
stos
fdiv
pop
cmp
or
pop
jp
dec
das
push
or
xchg
or
jmp
inc
jle
test
push
rcr
mov
sbb
ins
mov
stos
ins
ficomp
xchg
or
retf
imul
popa
clc
in
cmp
lock
lds
inc
imul
cwde
push
imul
pop
mov
call
or
imul
jecxz
or
aaa
jp
jmp
scas
mov
mov
sbb
loopne
(bad)
enter
enter
pop
pop
jle
mov
jo
movs
enter
jle
mov
stos
ins
ficomp
xchg
or
retf
imul
popa
clc
gs
cmp
lock
inc
and
rcr
mov
adc
sub
call
or
imul
pop
push
cdq
pop
aaa
jp
jmp
scas
mov
mov
sbb
aam
gs
enter
pop
pop
jle
mov
jo
movs
enter
jle
mov
stos
ins
ficomp
xchg
or
retf
imul
popa
clc
gs
cmp
lock
enter
imul
cwde
push
imul
pop
mov
or
dec
stos
fdiv
pop
cmp
or
pop
jp
dec
das
push
or
add
adc
jmp
inc
jle
or
stos
imul
cmp
movs
test
sbb
ins
mov
sub
dec
rcr
inc
push
hlt
pop
aaa
sub
mov
xchg
pop
jecxz
cmc
mov
mov
mov
dec
sub
dec
sub
push
sub
inc
sbb
imul
pop
out
mov
out
stos
pop
jg
shl
inc
pop
ds
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
enter
jle
mov
sub
pop
inc
xchg
or
retf
imul
cmp
lock
inc
and
imul
cwde
push
imul
pop
mov
imul
sub
scas
stos
scas
popf
pop
inc
push
mov
sub
hlt
sbb
ins
mov
sub
pop
add
rcr
clc
gs
cmp
clc
stos
push
adc
pushf
push
imul
stc
outs
hlt
pop
imul
mov
cmc
pop
jecxz
lds
xor
(bad)
pop
gs
dec
addr16
pop
pop
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
enter
jle
hlt
leave
sub
or
pop
jp
push
daa
rcr
jnp
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jmp
sub
mov
or
sub
mul
mov
cdq
pop
pop
jp
shl
jle
cmps
xchg
les
pop
jle
lahf
leave
stos
push
fidivr
addr16
mov
pop
je
imul
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
in
add
dec
stos
inc
fimul
xchg
or
fwait
imul
popa
clc
mov
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mul
test
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
out
ins
fimul
xchg
or
stos
imul
push
and
pop
sub
ficom
gs
gs
in
sub
xor
push
rol
dec
test
sahf
mov
sub
lahf
pop
aas
pop
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
test
xor
mov
xor
shl
fs
leave
sub
cmp
lahf
pop
cmp
test
imul
cmc
jmp
leave
pop
popa
clc
mov
cmp
dec
stos
cmps
mov
stos
push
pop
sti
sub
sbb
push
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
in
or
dec
stos
inc
lahf
pop
cmp
test
imul
mov
imul
cmc
jmp
leave
pop
popa
clc
mov
cmp
dec
stos
cmps
mov
stos
push
pop
sti
sub
pushf
sbb
stc
scas
popa
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
in
call
ins
or
imul
sub
ficomp
xchg
or
stos
imul
cmp
or
aaa
jp
pop
cs
or
pop
jp
xchg
daa
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
movs
test
enter
imul
pop
jecxz
lds
xor
not
gs
aaa
jp
jno
push
or
aaa
jp
pop
sub
mov
cdq
pop
pop
jp
xchg
daa
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
sub
sahf
icebp
or
and
jle
mov
jne
(bad)
pop
gs
fs
pop
and
pop
pop
sub
loopne
mov
mov
stos
inc
fimul
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
ja
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
xchg
leave
fimul
xchg
or
stos
imul
push
and
pop
sub
stos
pop
gs
lea
push
mov
imul
jnp
cmc
pop
pop
push
cdq
pop
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
sub
pop
sub
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
or
dec
stos
sub
mov
addr16
mov
pop
inc
call
jae
or
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
ins
mov
sub
pop
add
cmps
xchg
hlt
sbb
ins
mov
sub
pop
sub
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
or
dec
stos
sub
mov
addr16
mov
pop
adc
imul
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
call
or
imul
outs
jl
pop
pop
push
cdq
pop
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
sub
pop
sub
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
or
dec
stos
sub
mov
addr16
mov
pop
jl
imul
or
jnp
movs
mov
pop
pop
jle
mov
jne
(bad)
pop
gs
ins
mov
sub
pop
add
cmps
xchg
hlt
sbb
ins
mov
sub
pop
sub
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
or
dec
stos
sub
mov
addr16
mov
pop
xor
imul
or
mov
pop
pop
jle
mov
jne
(bad)
pop
gs
in
xchg
pop
inc
sahf
rcr
push
xchg
pop
sti
mov
mov
stos
inc
fimul
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
ja
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
f2xm1
lock
cmc
inc
pusha
imul
pop
jecxz
lds
xor
not
gs
aaa
jp
jno
push
or
aaa
jp
pop
sub
mov
cdq
pop
pop
jp
xchg
daa
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
xor
cmc
inc
sub
mov
test
lds
xor
cmps
pop
gs
sahf
xor
lds
push
(bad)
pop
gs
gs
mov
xchg
mov
leave
inc
xor
dec
test
jle
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
cmp
or
aaa
jp
pop
cs
or
pop
jp
xchg
daa
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
vmulps
enter
imul
pop
jecxz
lds
xor
not
gs
aaa
jp
jno
push
or
aaa
jp
pop
sub
mov
cdq
pop
pop
jp
xchg
daa
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
std
cld
pop
or
cmc
dec
sub
mov
test
lds
xor
not
gs
mov
xchg
mov
dec
sbb
dec
sub
push
sub
inc
sbb
imul
pop
out
sub
lods
stos
inc
sbb
mov
adc
sub
sub
jmp
mov
mov
adc
sub
add
dec
stos
inc
shl
mov
inc
cmp
or
movs
test
pop
pop
jle
mov
jo
movs
enter
dec
mov
sub
sub
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
movs
mov
xor
call
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
cmp
or
aaa
jp
jmp
sub
mov
dec
jno
jle
cmps
xchg
les
pop
jle
lahf
leave
stos
push
fidivr
addr16
mov
je
pop
pop
hlt
cmp
pop
inc
fimul
xchg
or
stos
imul
push
and
pop
sub
loop
gs
or
scas
sub
mov
sbb
sub
sahf
pop
or
add
movs
and
pop
jle
mov
jne
(bad)
pop
gs
fs
pop
or
pop
pop
sub
aam
sub
or
dec
fimul
xchg
or
stos
imul
push
and
pop
sub
out
pop
gs
into
push
in
pop
pop
pop
pop
cmp
pop
mov
or
stos
imul
push
and
pop
sub
mov
pop
in
or
mov
pop
icebp
sub
imul
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
imul
test
mov
dec
jg
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
dec
pop
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
test
xor
shl
mov
sub
adc
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
mov
cmps
mov
stos
push
pop
sti
arpl
mov
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
mov
cmps
mov
stos
push
pop
sti
sub
add
sbb
or
stos
imul
push
and
pop
sub
ficom
gs
gs
in
sub
push
xor
push
stc
test
dec
sub
std
pop
ja
leave
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
gs
test
imul
jg
push
and
nop
lds
push
(bad)
pop
gs
pop
gs
cmps
fs
pop
gs
pop
gs
cmp
pop
gs
pop
gs
gs
mov
mov
pop
pop
inc
imul
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
scas
ins
sub
dec
sub
push
sub
inc
sbb
imul
pop
out
sub
lods
stos
inc
sbb
mov
adc
sub
sub
jmp
mov
mov
adc
sub
(bad)
sbb
(bad)
pop
gs
pop
gs
pop
gs
(bad)
pop
add
xchg
gs
xchg
or
sti
imul
cmp
or
aaa
jp
jmp
sub
mov
ja
sub
mov
inc
gs
push
fidivr
enter
shr
(bad)
sbb
xchg
or
loop
(bad)
movs
push
and
pop
sub
ficom
gs
gs
in
or
push
xor
mov
mov
test
loope
xlat
pop
or
push
mov
gs
mov
mov
sub
pop
cmps
mov
jp
sbb
imul
mov
test
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
mov
mov
int3
pop
fwait
mov
sbb
ins
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
js
imul
or
test
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
in
mov
pop
sub
cmp
ficomp
xchg
or
stos
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
lahf
jne
dec
or
movs
push
and
pop
sub
ficom
gs
or
out
xchg
pop
popa
clc
xor
dec
stos
xchg
or
fwait
imul
popa
clc
mov
cmp
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
lock
jne
jge
or
jecxz
lds
xor
scas
pop
gs
mov
fisttp
ins
adc
xchg
push
imul
call
push
imul
mov
imul
cmc
jmp
leave
pop
popa
clc
mov
cmp
dec
stos
cmps
mov
stos
push
pop
sti
sub
nop
call
adc
adc
inc
jle
(bad)
pop
sub
stos
pop
gs
mov
push
popf
pop
sbb
and
movs
test
sbb
ins
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
jl
imul
or
jp
movs
clc
and
jle
mov
jne
(bad)
pop
gs
ins
mov
stos
pusha
mov
cmps
xchg
hlt
sbb
ins
mov
sub
pop
arpl
cmps
xchg
les
pop
jle
lahf
leave
sub
mov
or
dec
stos
sub
mov
addr16
mov
pop
fs
jae
or
lock
jle
mov
jne
(bad)
pop
gs
fs
pop
push
sahf
add
lea
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
out
and
or
stos
imul
push
and
pop
sub
call
push
int3
pop
sbb
pop
jle
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
pop
call
jae
or
stos
jp
movs
int3
and
jle
mov
jne
(bad)
pop
gs
in
mov
pop
sub
lea
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
jecxz
pop
dec
or
movs
push
and
pop
sub
retf
into
or
push
int3
pop
sbb
pop
jle
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
or
imul
or
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
in
mov
pop
sub
lea
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
fldenv
sub
test
lds
xor
scas
pop
gs
movs
fcomp
dec
pop
dec
adc
xchg
push
imul
call
push
imul
mov
imul
cmc
jmp
leave
pop
popa
clc
mov
cmp
dec
stos
cmps
mov
stos
push
pop
sti
sub
mov
push
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
call
push
hlt
jge
ror
mov
mov
or
push
or
aaa
jp
mov
mul
mov
cdq
pop
pop
jp
jno
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
sub
sahf
cmc
or
jp
movs
fsub
pop
pop
jle
mov
jne
(bad)
pop
gs
arpl
pop
sub
lea
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
(bad)
fstp
or
movs
push
and
pop
sub
ficom
gs
mov
push
mov
sbb
pop
jle
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
dec
call
jb
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
call
push
hlt
imul
jp
jns
push
or
aaa
jp
mov
mul
mov
cdq
pop
pop
jp
jno
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
sub
sahf
or
adc
jp
movs
shl
pop
pop
jle
mov
jne
(bad)
pop
gs
in
mov
pop
sub
lea
imul
cmp
dec
stos
xchg
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
iret
lds
or
movs
push
and
pop
sub
mov
pop
addr16
mov
sbb
pop
jle
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
outs
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
add
imul
or
jp
movs
aam
pop
pop
jle
mov
jne
(bad)
pop
gs
in
or
jg
hlt
gs
(bad)
mov
mov
or
push
or
aaa
jp
mov
mul
mov
cdq
pop
pop
jp
jno
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
std
nop
pop
or
cmc
pop
sub
mov
test
lds
xor
not
gs
mov
xchg
mov
enter
xor
xor
dec
sub
pop
or
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
cmp
or
aaa
jp
jmp
sub
mov
dec
jno
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
shr
pop
addr16
mov
je
dec
pop
rcl
test
xor
mov
test
lds
xor
not
gs
aaa
jp
jns
push
or
aaa
jp
stc
sub
mul
mov
cdq
pop
pop
jp
jno
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
pop
mov
and
push
sbb
or
sahf
sbb
sahf
sub
mov
test
lds
xor
not
gs
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
ins
fcomp
jle
cmps
xchg
les
pop
jle
mov
sub
pop
or
cmps
xchg
les
pop
jle
mov
stos
imul
xor
xchg
pop
mov
cmp
scas
jmp
mov
pop
xchg
or
imul
movs
push
and
pop
sub
ficom
gs
or
out
test
pop
cmp
dec
stos
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
cmp
dec
stos
xchg
or
jmp
leave
pop
popa
clc
mov
cmp
dec
stos
cmps
mov
stos
push
pop
jnp
and
sbb
mov
hlt
pop
or
mov
test
lds
xor
not
gs
mov
xchg
mov
dec
jnp
pop
adc
and
pop
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
ins
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
mov
cmps
mov
stos
push
pop
jnp
mov
sbb
mov
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
ins
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
js
imul
or
test
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
fs
leave
sub
cmp
lahf
pop
cmp
test
imul
cwde
test
imul
mov
addr16
mov
call
shr
fxtract
lock
or
jecxz
lds
xor
not
gs
aaa
jp
jns
push
or
aaa
jp
stc
sub
mul
mov
cdq
pop
pop
jp
add
test
cdq
pop
pop
jp
sbb
mov
fidivr
call
stos
jp
icebp
sbb
imul
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
dec
call
ins
or
imul
sub
lahf
pop
aas
pop
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
ins
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
mov
cmps
mov
stos
push
pop
jnp
mov
sbb
mov
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
ins
mov
sub
pop
or
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
lahf
pop
cmp
test
jmp
mov
pop
js
imul
or
test
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
dec
lahf
pop
subps
sbb
imul
mov
test
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
ins
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
cmp
mov
cmps
mov
stos
push
pop
jnp
mov
sbb
mov
enter
pop
pop
jle
mov
jne
(bad)
pop
gs
dec
leave
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
cmp
dec
stos
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
cmp
cdq
pop
pop
jp
sbb
mov
fidivr
enter
shr
(bad)
pop
fcmovnb
pop
dec
or
movs
push
and
pop
sub
ficom
gs
gs
in
sub
xchg
xor
push
lods
test
dec
test
jle
cld
sbb
push
pop
inc
jle
fdivrp
sub
jmp
inc
jle
mov
xlat
xchg
pop
cmps
js
or
jmp
inc
jle
mov
stos
push
pop
jnp
or
jmp
inc
jle
or
stos
imul
cmp
or
aaa
jp
stc
sub
mul
mov
cdq
pop
pop
jp
jno
jle
cmps
xchg
les
pop
jle
lahf
leave
stos
push
fidivr
addr16
mov
pop
and
imul
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
in
add
dec
stos
inc
fimul
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mul
test
cdq
pop
pop
jp
xchg
daa
jle
xchg
pop
mov
and
push
sbb
sub
sahf
add
clc
cmp
cwde
and
jle
mov
jne
(bad)
pop
gs
ins
mov
stos
imul
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
sub
sar
mov
stos
mov
mov
stos
push
pop
sti
sub
movs
cwde
mov
or
jecxz
lds
xor
not
gs
aaa
jp
jno
jle
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
lahf
leave
stos
push
movs
cwde
loope
add
dec
stos
jo
dec
mov
ins
dec
jp
push
pop
sti
sub
cmp
xchg
or
stos
imul
push
and
pop
sub
ficom
gs
gs
in
jne
push
imul
pop
aaa
jp
pop
daa
jle
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
xchg
les
pop
jle
mov
stos
outs
call
xchg
pop
mov
sub
jp
push
push
es
pop
gs
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
fidivr
hlt
call
lds
aas
lds
mov
xchg
fidivr
je
mov
or
jecxz
cmc
mov
mov
cdq
pop
aaa
jp
pop
daa
jle
cmps
xchg
hlt
sbb
fs
leave
stos
push
movs
mov
imul
cwde
test
imul
mov
addr16
mov
pop
adc
cmp
sti
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
pop
in
add
dec
stos
clc
fimul
xchg
or
fwait
imul
popa
clc
mov
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mov
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
std
mov
adc
pop
pop
dec
or
movs
push
and
pop
sub
ficom
gs
or
out
in
popa
clc
mov
cmp
dec
stos
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mov
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
std
mov
sbb
mov
or
movs
push
and
pop
sub
ficom
gs
or
out
sbb
push
or
fwait
imul
popa
clc
xor
dec
stos
xchg
or
sti
imul
popa
clc
mov
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
std
mov
je
dec
pop
dec
or
movs
push
and
pop
sub
ficom
gs
or
out
loope
popa
clc
xor
dec
stos
xchg
or
fwait
imul
popa
clc
mov
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mov
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
std
mov
sbb
xchg
or
stos
imul
push
and
pop
sub
ficom
gs
or
out
aad
popa
clc
mov
cmp
dec
stos
xchg
or
fwait
imul
cmp
dec
stos
xchg
or
sti
imul
popa
clc
mov
cmp
dec
stos
xchg
or
jmp
mov
pop
cmp
dec
stos
cmps
mov
stos
push
pop
sti
std
mov
inc
fwait
stc
pop
dec
or
movs
push
and
pop
sub
call
data16
out
(bad)
mov
mov
or
das
push
or
aaa
jp
stc
sub
mul
mov
cdq
pop
pop
jp
sbb
test
cdq
pop
pop
jp
jmp
sub
push
fidivr
pushf
cdq
or
push
ins
test
enter
imul
pop
jecxz
lds
xor
not
gs
mov
xchg
mov
leave
test
dec
sub
pop
jecxz
add
dec
stos
push
or
fwait
imul
cmp
cdq
pop
pop
jp
sbb
test
cdq
pop
pop
jp
jmp
sub
xchg
neg
js
dec
call
(bad)
pop
sub
(bad)
pop
gs
dec
addr16
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
retf
call
repnz
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
imul
sub
scas
stos
scas
popf
pop
inc
push
mov
push
sbb
fs
leave
stos
push
xchg
call
push
imul
mov
imul
cwde
test
imul
mov
fs
mov
gs
pop
adc
mov
dec
addr16
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
retf
call
jb
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
imul
sub
scas
stos
scas
popf
pop
inc
push
mov
and
movs
test
sbb
ins
mov
sub
inc
jle
cmps
xchg
hlt
sbb
ins
mov
sub
pop
and
cmps
xchg
les
pop
jle
mov
sub
pop
imul
xchg
les
pop
jle
mov
stos
outs
call
xchg
pop
mov
sub
push
(bad)
adc
gs
pop
gs
mov
mov
lods
mov
mov
or
jecxz
inc
mov
mov
neg
js
je
mov
or
jecxz
lds
mov
mov
js
hlt
cdq
or
or
jecxz
mov
int3
xor
or
test
pop
pop
jle
mov
jne
(bad)
pop
gs
dec
call
or
outs
jl
pop
pop
push
cdq
pop
aaa
jp
push
sub
mul
(bad)
mov
jp
mov
push
or
pop
jp
sbb
test
cdq
pop
pop
jp
jmp
sub
xchg
neg
js
cmp
push
push
(bad)
pop
gs
dec
addr16
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
retf
call
jb
rcr
cmc
cwde
push
imul
pop
push
es
pop
gs
in
imul
sub
scas
stos
scas
popf
pop
inc
push
mov
cmp
movs
test
sbb
ins
mov
sub
pop
ja
inc
cmps
xchg
hlt
sbb
ins
mov
stos
fcomp
jle
cmps
xchg
les
pop
jle
mov
sub
pop
imul
xchg
les
pop
jle
mov
stos
outs
call
xchg
pop
mov
sub
imul
pop
gs
gs
gs
in
cmp
dec
xor
ficomp
xchg
mov
jo
jge
leave
enter
pop
pop
jle
mov
dec
mov
dec
cmps
test
enter
pop
pop
jle
mov
dec
mov
dec
pop
stos
push
movs
call
xchg
mov
retf
call
repnz
cwde
push
imul
pop
push
es
pop
gs
in
imul
sub
inc
xchg
(bad)
pop
xor
(bad)
pop
gs
pop
gs
pop
in
call
inc
jle
(bad)
pop
sub
lahf
pop
gs
(bad)
test
es
pop
gs
gs
mov
pop
fsubrp
pop
xchg
or
jmp
inc
jle
(bad)
pop
sub
mul
dec
(bad)
pop
gs
pop
gs
pop
gs
lds
push
(bad)
pop
gs
gs
mov
mov
(bad)
pop
pop
es
pop
gs
gs
sub
imul
sub
imul
pop
xlat
jl
sub
jbe
mov
sbb
mov
scas
push
inc
mov
jecxz
(bad)
jecxz
jmp
push
(bad)
jecxz
(bad)
add
ror
lods
xor
sub
inc
mov
int3
inc
or
mov
int
mov
sub
rcr
and
(bad)
jecxz
sub
cmp
mov
popf
inc
fsubr
push
(bad)
jecxz
(bad)
jecxz
pop
(bad)
or
xchg
inc
sbb
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
sbb
inc
pushf
jecxz
(bad)
jecxz
(bad)
mov
cmp
mov
dec
sbb
push
setp
jl
(bad)
cmp
loop
sbb
push
out
push
(bad)
jecxz
(bad)
aam
pushf
sub
xchg
jecxz
(bad)
jecxz
(bad)
arpl
push
lods
mov
jo
push
into
push
sar
(bad)
jecxz
pop
aam
push
(bad)
jecxz
(bad)
jecxz
push
(bad)
push
sar
(bad)
jecxz
(bad)
mov
or
(bad)
jecxz
(bad)
jecxz
out
xlat
mov
pop
inc
push
scas
pop
inc
cld
jns
jecxz
push
sar
(bad)
jecxz
(bad)
push
push
mov
out
push
(bad)
jecxz
(bad)
jecxz
or
jnp
dec
mov
push
setle
push
(bad)
jecxz
(bad)
jecxz
xlat
mov
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
aaa
(bad)
push
sar
(bad)
jecxz
(bad)
jecxz
orps
push
xchg
std
mov
inc
in
push
or
(bad)
mov
push
aam
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
jp
mov
dec
xchg
mov
inc
sbb
mov
loop
push
(bad)
jecxz
(bad)
mov
ror
loop
push
(bad)
jecxz
(bad)
jecxz
(bad)
aam
pushf
sub
xchg
jecxz
(bad)
arpl
(bad)
mov
push
(bad)
jecxz
outs
(bad)
scas
sar
out
push
(bad)
jecxz
(bad)
mov
dec
mov
or
sbb
fsubr
push
(bad)
jecxz
orps
push
bound
lods
in
sbb
mov
out
push
(bad)
mov
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
cmp
push
fstp
mov
(bad)
jecxz
(bad)
pop
xchg
(bad)
pushf
lods
mov
push
(bad)
test
inc
sbb
cmc
sub
push
lea
(bad)
shl
push
stos
jmp
inc
xor
xlat
loopne
stos
sahf
div
inc
push
test
fadd
push
in
int3
push
pop
mov
push
push
or
mov
mov
mov
push
(bad)
scas
adc
inc
scas
mov
or
inc
fld
loope
adc
dec
out
or
inc
mov
sbb
inc
cwde
dec
inc
mov
inc
mov
(bad)
dec
cmc
pop
jnp
jmp
out
repz
jne
shr
out
out
adc
retf
add
ds
loop
push
fwait
mov
je
adc
mov
or
inc
sbb
stos
mov
in
mov
cmp
retf
test
push
in
addr16
adc
lods
pop
out
inc
xor
mov
inc
or
iret
push
loope
xor
sbb
push
cmp
cld
or
mov
out
bound
imul
inc
mov
xchg
push
out
push
aas
test
mov
jno
out
sbb
cmp
mov
mov
lock
js
push
adc
jns
sub
jns
daa
popf
jnp
js
sbb
and
jns
aaa
push
stc
dec
xor
or
cli
xor
pop
js
and
daa
sar
ret
js
jns
and
stc
loope
(bad)
daa
adc
sar
nop
jnp
js
jns
xor
jns
mov
stc
dec
js
or
js
jns
js
jns
jp
jns
js
sub
or
stc
in
clc
call
xor
sub
js
xor
loope
(bad)
ja
js
jns
inc
sar
mov
pop
js
xor
adc
sar
pop
stc
dec
js
or
js
jns
js
jns
xor
sub
js
xor
adc
fsqrt
xor
js
and
js
jns
and
jns
cli
mov
pop
js
xor
dec
loop
sub
out
pop
xor
dec
jb
jae
mov
(bad)
retf
dec
xchg
dec
jae
leave
jns
mov
adc
(bad)
cmp
mov
in
push
inc
xor
shr
jecxz
(bad)
jecxz
(bad)
mov
jo
(bad)
mov
(bad)
jecxz
(bad)
pop
movs
mov
sbb
inc
js
cdq
mov
mov
arpl
popf
dec
not
push
dec
stos
adc
inc
mov
dec
cmc
lods
inc
lods
sbb
or
test
mov
data16
push
pop
and
outs
call
jnp
arpl
dec
idiv
dec
cmps
mov
inc
xor
cmp
mov
or
les
popf
cmps
push
lods
dec
inc
xor
cli
jns
add
bound
mov
aas
mov
mov
mov
lods
push
mov
cmp
xchg
mov
or
adc
mov
add
stos
xor
adc
jle
scas
fstp
mov
xchg
inc
mov
add
cmc
push
mov
xlat
pop
je
pop
popa
(bad)
ror
aaa
inc
mov
mov
out
bound
out
xchg
mov
mov
adc
jle
pop
mov
xor
or
push
xchg
inc
cli
or
int3
lods
or
lahf
mov
and
rol
cmp
mov
out
ficomp
retf
dec
nop
ja
call
retf
rcr
mov
in
mov
mov
fldcw
push
mov
mov
mov
ds
lahf
sub
outs
gs
jbe
test
(bad)
(bad)
mov
icebp
mov
mov
add
cmp
fs
cmp
mov
mov
xor
cmp
fs
mov
sub
cmp
sub
cmp
mov
int
mov
mov
pop
mov
mov
icebp
test
mov
sub
cmp
sub
mov
mov
fs
movs
cmp
mov
mov
rcr
mov
mov
icebp
mov
mov
xchg
mov
mov
mov
shl
jecxz
ja
rol
(bad)
iret
in
ja
cmp
loope
ja
in
jne
push
movs
addr16
fs
mov
loop
cmp
rcr
inc
ror
(bad)
push
(bad)
jecxz
(bad)
jecxz
dec
xlat
sbb
call
jb
inc
ror
mov
push
(bad)
jecxz
(bad)
jecxz
dec
push
ins
int
in
lods
mov
div
inc
ror
mov
jecxz
(bad)
jecxz
inc
push
icebp
jecxz
in
test
sbb
in
lahf
and
call
add
mov
jbe
mov
jle
lods
push
inc
sbb
push
stc
push
stos
out
push
bound
mov
leave
out
xchg
bound
xchg
scas
bound
push
iret
mov
in
repnz
push
jnp
mov
or
inc
sub
lods
ret
inc
add
sahf
mov
bound
inc
mov
push
jmp
jge
popf
cmps
cli
lods
adc
jo
or
stos
call
pop
mov
mov
pop
ja
imul
pop
addr16
mov
fsubp
retf
pop
pop
div
xor
hlt
(bad)
ins
jmp
out
adc
mov
in
dec
dec
mov
inc
mov
mov
lahf
adc
jae
call
add
scas
idiv
pop
xchg
adc
jae
sbb
(bad)
pusha
test
aas
mov
push
test
dec
jbe
cmps
mov
push
dec
sti
cli
jl
add
dec
jg
dec
dec
jno
add
in
or
jns
inc
les
inc
sbb
dec
mov
imul
out
loop
cmp
mov
loope
repnz
out
mov
jge
stos
ret
ret
test
mov
sub
push
(bad)
stos
fcmovb
addr16
fistp
inc
fistp
sub
push
repnz
or
pop
jmp
pop
test
adc
pop
rol
pop
test
sbb
pop
stos
sbb
inc
add
or
(bad)
push
mov
addr16
fistp
inc
fistp
inc
xchg
pop
test
adc
sub
fistp
inc
fistp
inc
mov
push
pop
pop
iret
call
pop
test
fwait
pop
sub
pop
in
fistp
inc
fstp
test
fistp
inc
fistp
inc
cld
and
inc
mov
sti
inc
inc
fistp
inc
cld
xchg
sub
push
shl
adc
cs
mov
out
jmp
test
fistp
inc
cmps
pop
sub
fistp
inc
fistp
inc
stos
mov
repz
adc
fs
loope
pop
cmp
fidiv
or
gs
mov
mov
fistp
inc
xchg
pop
test
lahf
sub
mov
push
test
xchg
push
pop
cmp
pop
test
push
loop
fistp
inc
mov
inc
add
(bad)
or
push
out
fistp
inc
fistp
inc
aad
test
adc
push
repnz
pop
in
mov
inc
add
mov
fist
out
mov
test
adc
pop
aam
xchg
pop
test
pop
test
or
pop
lock
stc
pop
sub
call
pop
test
pop
and
fistp
inc
fistp
inc
cmc
pop
test
xchg
test
or
push
repnz
pop
in
fistp
inc
mov
inc
add
(bad)
or
push
out
fistp
inc
aad
test
xchg
test
or
push
repnz
pop
in
mov
inc
add
mov
fist
out
fistp
inc
mov
inc
add
xchg
fist
out
fistp
inc
fistp
inc
mov
sbb
repnz
pop
in
in
test
xchg
test
or
push
repnz
pop
in
in
sub
pop
push
mov
in
xchg
mov
add
push
ret
pop
test
fistp
inc
mov
test
xchg
fsubr
or
ret
pop
sbb
or
pop
in
mov
sub
push
dec
out
pop
int3
inc
fistp
inc
fistp
inc
fistp
sub
inc
push
xchg
or
test
or
add
or
pop
in
mov
sub
push
dec
out
pop
int3
inc
fistp
inc
fistp
inc
fistp
sub
push
xchg
or
push
(bad)
sbb
test
or
push
repnz
pop
in
fistp
inc
movs
pop
test
sbb
ret
xchg
out
pop
xchg
adc
or
pop
in
fistp
inc
fistp
inc
into
mov
addr16
fistp
inc
fistp
inc
mov
inc
add
(bad)
or
push
out
inc
fistp
inc
mov
inc
add
add
push
out
fistp
inc
fistp
inc
pushf
pop
sub
add
stos
fnstenv
out
fistp
inc
fistp
inc
mov
pop
sub
sti
inc
inc
fistp
inc
fistp
inc
sbb
xchg
xchg
pop
xchg
push
fimul
fistp
inc
fistp
inc
xchg
mov
and
push
cli
inc
fistp
inc
fistp
inc
stos
pop
sub
fistp
inc
jmp
inc
fistp
inc
mov
test
adc
pop
nop
inc
fistp
inc
mov
hlt
fistp
inc
fistp
inc
mov
test
adc
jmp
fistp
inc
fistp
inc
fcomp
test
push
fs
pop
int3
inc
fistp
inc
fistp
inc
xchg
cld
test
fist
out
fistp
inc
mov
test
adc
push
repnz
xchg
add
loop
fistp
inc
test
and
push
repnz
mov
out
sar
ror
clc
mov
stos
pop
jmp
test
fistp
inc
ficomp
test
ficomp
test
pop
enter
test
xor
sub
sti
inc
inc
fistp
inc
fistp
inc
mov
test
mov
stos
or
gs
pop
fadd
pop
test
fistp
inc
xchg
add
not
mov
inc
sbb
xchg
dec
sub
xchg
sahf
mov
sub
and
int
mov
iret
xchg
xor
jmp
adc
pop
shl
jp
data16
in
pushf
and
mov
fld
lods
pushf
inc
mov
lods
mov
cwde
in
push
jb
iret
rcl
loope
setp
push
(bad)
jecxz
(bad)
pop
dec
jmp
push
mov
sar
(bad)
jecxz
(bad)
pop
sbb
xchg
lea
inc
sbb
mov
int
push
setp
das
(bad)
and
aam
push
jle
jecxz
orps
jmp
lods
loop
or
ror
mov
push
(bad)
jecxz
dec
push
in
leave
push
in
lods
mov
inc
xor
popa
inc
sbb
inc
movs
jecxz
(bad)
jecxz
(bad)
jecxz
add
push
or
(bad)
pop
dec
jmp
push
mov
sar
(bad)
jecxz
(bad)
pop
sbb
xchg
lea
inc
sbb
mov
int
push
setp
push
(bad)
jecxz
iret
(bad)
adc
enter
(bad)
jecxz
orps
jmp
lods
loop
or
jecxz
(bad)
jecxz
dec
xlat
pop
jne
pushf
lods
and
mov
xor
mov
jno
mov
sbb
pop
pop
ins
(bad)
test
push
inc
mov
imul
fistp
inc
lock
loope
pop
mov
cmc
icebp
jbe
mov
cmps
add
in
scas
or
dec
push
jge
mov
inc
lods
inc
xor
sbb
jle
or
push
mov
inc
mov
leave
dec
bound
stos
or
adc
inc
mov
in
scas
or
inc
mov
pop
inc
call
inc
jbe
add
pop
inc
(bad)
stos
or
inc
call
inc
sbb
mov
dec
push
idiv
inc
mov
or
hlt
add
call
mov
lods
jno
mov
popf
loop
lods
adc
inc
add
push
ja
inc
cld
add
dec
fwait
mov
in
push
jmp
push
loope
dec
inc
loop
daa
push
enter
popa
mov
aas
mov
mov
sub
out
push
xchg
mov
fild
mov
ss
adc
inc
jb
sbb
addr16
mov
mov
jmp
push
mov
lahf
iret
push
jne
jb
(bad)
dec
clc
cmove
shl
cwde
inc
mov
in
cld
sbb
inc
cld
sbb
inc
sub
inc
pushf
sbb
xchg
aaa
pop
sbb
sub
popf
sbb
xor
dec
sbb
ret
or
push
pop
fimul
push
push
fimul
push
fcmovb
sub
or
and
inc
push
push
ds
lock
push
sub
and
(bad)
cmps
(bad)
fimul
push
push
ficom
rcl
shr
sbb
and
inc
dec
fmul
push
pop
fimul
push
push
fidiv
push
push
mov
bound
pop
adc
out
xchg
movhps
fimul
push
push
fisub
push
push
fcmovb
cmp
unpcklps
fimul
push
push
fidiv
sar
push
lock
shr
add
lock
movhps
pop
push
push
ficom
push
gs
pop
lods
bound
dec
and
pop
lds
aad
mov
pop
in
cmp
cmps
mov
xchg
loop
or
add
mov
das
ins
sbb
cmc
mov
or
sbb
inc
or
out
cmps
and
scas
outs
dec
jp
mov
rcr
inc
ja
imul
add
adc
or
push
(bad)
sbb
scas
ja
rol
je
cld
adc
mov
sahf
push
pop
adc
les
inc
mov
push
pushf
scas
data16
inc
cwde
mov
test
jo
sub
lahf
lods
cmp
call
stos
sbb
mov
or
xchg
jecxz
inc
lods
mov
fist
inc
mov
cdq
inc
call
out
pop
inc
mov
push
sbb
inc
fadd
not
div
jo
popf
out
scas
jo
or
cvtps2pi
mov
hlt
lods
mov
or
xchg
mov
repz
out
xchg
sub
inc
cli
adc
aas
jmp
add
lods
xchg
test
cmp
mov
cwde
inc
xor
mov
xchg
jbe
sbb
arpl
test
daa
mov
xor
addr16
cmc
or
(bad)
out
jmp
xor
lods
xchg
xchg
lods
(bad)
and
push
push
ret
mov
in
lods
pop
mov
sbb
mul
mov
inc
pop
mov
in
movs
xchg
inc
mov
xchg
sbb
pop
mov
push
cmps
sbb
lods
test
ret
std
out
push
leave
cmp
ret
std
ret
std
movs
push
dec
mov
push
das
lods
stos
sti
mov
jae
pop
inc
pop
test
ret
std
mov
dec
add
inc
ror
or
fwait
mov
push
xchg
mov
push
test
ret
std
std
push
leave
movs
or
fwait
mov
sbb
std
ret
std
ret
std
mov
retf
push
pop
fs
sti
mov
pop
adc
push
retf
std
ret
std
ret
std
in
push
dec
lods
out
sti
mov
push
xchg
mov
lods
movs
fild
sar
ret
std
ret
std
mov
dec
mov
inc
gs
push
xlat
push
or
sbb
or
sbb
std
ret
std
sbb
xchg
lock
mov
xchg
in
mov
mov
push
popf
std
ret
std
mov
leave
std
jp
dec
pushf
or
sbb
std
ret
std
xchg
push
leave
push
rcl
ret
std
ret
std
ins
ret
leave
inc
shr
std
ret
std
xchg
push
leave
std
and
enter
fwait
std
ret
std
xchg
push
dec
push
xchg
push
cmps
mov
lea
std
ret
std
in
(bad)
retf
push
or
inc
push
cld
ret
std
mov
leave
jae
inc
repnz
push
test
ret
std
cli
push
leave
mov
loopne
cmp
jp
sar
loopne
cmp
and
popa
sub
ficom
ins
ret
inc
push
test
mov
enter
xchg
mov
push
xchg
ret
std
ret
std
(bad)
dec
enter
xchg
mov
push
test
ret
std
xchg
push
leave
std
cwde
inc
dec
or
ret
std
ret
std
ret
std
std
push
leave
movs
inc
pop
test
std
call
cmps
mov
mov
adc
or
or
mov
adc
or
arpl
add
pop
scas
nop
movs
pusha
stos
fwait
mov
enter
xchg
cmp
sbb
mov
scas
ret
mov
ja
dec
sbb
jno
not
rcr
daa
out
adc
ficomp
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
jne
fwait
lods
popf
inc
shr
sbb
inc
cwde
lods
sbb
inc
cwde
lods
adc
aaa
add
sar
(bad)
jecxz
(bad)
jecxz
(bad)
pop
sbb
jge
pop
sbb
sub
xor
sti
addr16
mov
lods
xchg
push
sbb
imul
pop
pop
ret
rcr
mov
and
ds
dec
popf
data16
popa
lods
call
dec
hlt
inc
sbb
push
arpl
jae
inc
xchg
cmp
inc
cs
lar
dec
out
pop
out
inc
mov
or
(bad)
xor
inc
inc
cld
inc
xchg
mov
xchg
push
or
bound
outs
test
jecxz
sub
scas
xchg
pop
xor
cmp
mov
push
and
add
push
lea
cmp
mul
push
stos
out
addr16
gs
stos
mov
repz
inc
je
out
ins
(bad)
xchg
dec
(bad)
and
lahf
inc
xor
dec
dec
xchg
adc
popf
arpl
arpl
in
cmp
leave
dec
jle
mov
jl
xchg
adc
dec
mov
clc
lods
mov
loope
mov
sbb
xchg
mov
fwait
xchg
bound
out
repnz
pop
mov
arpl
or
mov
out
and
adc
pop
jmp
in
jne
cli
stos
or
mov
into
repnz
iret
fisub
cwde
jb
(bad)
into
sub
adc
sbb
adc
sub
xchg
rcl
(bad)
pop
inc
pop
pop
push
or
mov
dec
cmps
cdq
adc
xchg
or
xchg
fimul
pop
xor
pushf
sbb
daa
jbe
outs
push
xchg
fwait
mov
fld
pop
push
int
shr
sbb
psadbw
pop
(bad)
jecxz
inc
push
adc
call
in
lahf
movs
mov
fwait
dec
jb
out
add
imul
jl
push
cmc
inc
cld
lods
loope
sbb
inc
jp
push
pop
push
stos
sti
and
add
std
sub
mov
push
out
cld
lahf
mov
mov
inc
mov
add
out
mov
ret
and
sbb
popf
cmps
retf
inc
js
jnp
mov
add
retf
into
add
inc
mov
or
push
popf
adc
mov
jbe
sahf
test
lods
pop
xchg
fmulp
jno
adc
lods
and
fwait
pop
sub
xor
ins
cmps
mov
add
in
stos
dec
idiv
in
(bad)
out
jecxz
jno
mov
loopne
sbb
jmp
fs
inc
cld
inc
mov
sbb
mov
fimul
fdivr
ja
sbb
out
mov
cmp
inc
(bad)
mov
data16
inc
sbb
aas
pop
mov
mov
mov
inc
push
loope
or
pop
scas
pushf
jmp
mov
adc
ss
icebp
dec
mov
mov
inc
sbb
inc
jp
pop
inc
push
inc
shl
sbb
push
bound
lahf
pop
cmp
cmc
into
adc
cmc
out
mov
hlt
outs
out
sub
mov
mov
mov
push
mov
mov
mov
imul
sbb
cld
sbb
cli
xchg
cli
loopne
adc
ins
dec
jl
xchg
movs
loop
push
cwde
call
sbb
int3
inc
ror
repnz
(bad)
jecxz
pop
xlat
sbb
push
inc
cwde
loope
setp
push
(bad)
jecxz
(bad)
mov
mov
push
sar
(bad)
jecxz
push
push
scas
push
inc
clc
loope
setp
push
(bad)
jecxz
(bad)
das
or
shl
inc
xchg
mov
stos
push
cwde
or
fdiv
sbb
jne
sbb
sub
adc
inc
jno
cdq
lods
(bad)
cli
mov
mov
in
nop
bound
inc
popf
out
scas
sbb
sub
jp
cld
or
inc
cwde
lods
cmp
mov
add
push
jns
mov
xor
inc
xchg
push
dec
cmp
ss
aam
jg
xor
or
stos
sbb
div
mov
dec
cmp
mov
dec
ror
xor
mov
inc
xor
push
pushf
sub
loop
inc
mov
pop
popf
inc
fisubr
pusha
mov
jb
mov
and
mov
cmp
or
sti
pop
jne
not
or
out
out
sub
out
push
lds
test
xchg
in
ss
out
jg
adc
es
imul
inc
hlt
lods
std
stos
sbb
cmp
lods
loop
or
mov
inc
jo
call
xor
mov
addr16
push
inc
sti
jmp
and
jp
push
(bad)
push
add
adc
out
pop
enter
retf
pop
retf
push
mov
es
test
out
adc
lahf
pop
sbb
pop
dec
js
dec
ficomp
mov
pop
adc
lahf
mov
daa
test
xor
test
push
call
push
imul
loop
les
add
loop
jp
mov
sbb
inc
sbb
fs
in
or
out
cdq
lods
push
in
lahf
xor
mov
jecxz
mov
das
rcl
stos
call
gs
popf
loop
scas
sbb
dec
jnp
in
stos
in
hlt
mov
inc
xlat
push
pop
and
jo
jbe
push
in
sahf
mov
mov
add
ja
lods
div
cmp
dec
popf
push
mov
aas
test
sbb
dec
mov
ss
das
push
lock
mov
cli
and
ss
push
jne
adc
lods
jae
fwait
inc
xchg
jbe
pop
sub
mov
inc
xor
add
ds
lahf
and
jno
xchg
dec
jp
sub
mov
mov
dec
push
mov
dec
mov
mov
test
pop
outs
icebp
mov
push
mov
inc
popf
jmp
div
fcomp
imul
xlat
inc
cli
les
lods
outs
test
push
stos
mov
dec
imul
dec
inc
stos
push
adc
ret
mov
bound
sbb
push
es
add
dec
outs
stos
bound
push
mov
test
mov
addr16
pop
mov
fs
lea
out
jg
or
sbb
mov
sbb
xchg
push
loop
dec
push
in
stos
bound
mov
popf
push
or
jmp
retf
addr16
push
cmp
movs
aad
xor
pop
imul
sub
or
fmul
hlt
cdq
(bad)
lods
inc
fmul
lods
sbb
fs
sbb
or
inc
or
cmp
es
ret
inc
push
inc
retf
gs
sub
push
xlat
imul
mov
(bad)
out
shr
push
jle
jecxz
(bad)
jecxz
mov
cdq
lods
and
dec
mov
loopne
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
sti
ror
mov
pop
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
orps
push
setp
ja
(bad)
mov
sbb
inc
xor
push
in
push
sbb
inc
xor
pushf
in
mov
sbb
imul
mov
push
jne
mov
test
sub
repz
popf
loop
scas
push
inc
xchg
arpl
lahf
jo
mov
pop
outs
mov
dec
jmp
mov
ror
push
popf
repnz
jno
call
out
scas
sbb
dec
pop
jge
pop
push
inc
mov
cmp
inc
adc
xor
cs
mov
inc
pushf
sahf
and
xor
iret
ja
loope
cmp
lods
ds
fwait
mov
imul
sub
pop
mov
mov
or
adc
lods
js
fwait
pop
inc
dec
or
into
push
jae
mov
jl
jecxz
je
mov
imul
fs
test
bound
jecxz
jno
mov
paddsw
cmp
inc
cld
inc
mov
stos
add
xchg
lahf
(bad)
mov
mov
mov
or
pop
add
pop
sti
pop
int3
jne
jno
jp
out
mov
imul
cs
mov
push
fs
push
sub
imul
pop
cmps
xor
cmp
adc
mov
or
(bad)
out
sub
popf
pop
sub
xor
jnp
jne
mov
adc
or
sahf
rol
shl
xchg
jae
sub
jg
jg
cdq
cmps
ja
or
inc
xchg
add
xchg
push
lahf
ja
stc
mov
mov
popf
add
push
ret
jmp
rcr
fisttp
push
lea
xor
(bad)
jecxz
pop
push
loop
rsm
jecxz
ret
aad
add
lods
sbb
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
inc
mov
push
setp
push
(bad)
jecxz
pop
xlat
mov
sub
(bad)
jecxz
(bad)
mov
inc
test
push
(bad)
jecxz
(bad)
jecxz
pop
xlat
in
push
inc
sub
(bad)
jecxz
(bad)
mov
inc
test
push
(bad)
mov
and
lods
push
inc
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aad
push
inc
call
jecxz
(bad)
sub
xchg
jecxz
(bad)
jecxz
(bad)
jecxz
retf
push
cmps
push
inc
lock
(bad)
jecxz
(bad)
jecxz
push
aam
sbb
inc
cwde
jecxz
(bad)
jecxz
(bad)
mov
ror
lods
push
jle
jecxz
dec
aad
push
bswap
jecxz
(bad)
jecxz
iret
push
cmps
push
inc
lods
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
push
inc
mov
push
(bad)
jecxz
(bad)
jecxz
mov
call
call
lods
mov
xchg
bound
imul
dec
repnz
loopne
pop
out
mov
push
push
cdq
inc
loopne
jbe
sbb
push
mov
arpl
and
in
cmovae
stc
inc
cs
aas
cli
push
inc
push
jp
mov
jle
push
and
in
call
inc
adc
call
rcr
cmps
pop
inc
nop
pop
xor
push
out
add
or
pop
in
aaa
mov
mov
push
jl
popf
daa
mov
jno
sbb
test
lahf
ins
jnp
stos
mov
pop
out
outs
inc
xor
lahf
mov
loop
outs
push
fstp
addr16
lods
pop
jl
(bad)
leave
ja
cdq
dec
inc
or
lods
jp
sbb
inc
cld
add
call
out
mov
lods
hlt
jecxz
sti
loop
arpl
mov
jb
jno
in
lods
popf
lahf
movq
in
pop
mov
jns
mov
fs
jg
xchg
out
fdivp
shl
imul
scas
mov
mov
cmp
push
and
cli
jle
cdq
lods
sub
cdq
lods
gs
shr
cdq
lods
gs
leave
lods
gs
ret
(bad)
ret
jecxz
xchg
not
xor
idiv
sub
mov
(bad)
in
aas
push
mov
out
push
rcr
push
(bad)
jecxz
(bad)
dec
or
push
sbb
sub
add
inc
enter
movs
lods
xlat
push
cwde
ss
push
mov
dec
je
jb
jo
out
stc
mov
sti
stos
push
inc
mov
jbe
lods
add
push
push
push
inc
jb
jae
icebp
jmp
std
loopne
inc
inc
adc
jne
mov
push
out
nop
mov
mov
sbb
xchg
inc
mov
or
push
int
pop
jb
mov
add
call
in
scas
bound
push
xlat
mov
in
in
cmp
pushf
pop
mov
and
pop
bnd
xor
mov
push
(bad)
std
push
fstp
lods
cmc
cmps
sbb
push
std
je
pusha
stos
repnz
addr16
mov
xchg
mov
iret
inc
mov
mov
cs
inc
xchg
(bad)
cdq
push
and
mov
jmp
je
es
mov
out
push
inc
adc
add
mov
hlt
lods
sub
inc
mov
cmp
call
out
mov
addr16
div
mov
cmp
adc
add
jne
push
(bad)
mov
xchg
pop
stos
adc
dec
adc
xchg
arpl
xor
dec
mov
movs
sti
jmp
cmp
loopne
inc
(bad)
cmp
dec
es
and
cmps
das
jne
movs
push
jne
sbb
loope
cmp
sub
jne
movs
das
jne
movs
pop
jne
movs
loope
push
jmp
or
jb
or
fsub
push
cmps
movs
icebp
inc
(bad)
mov
cs
cs
push
inc
jmp
inc
xchg
sub
push
dec
out
mov
jmp
jge
fwait
mov
pop
cdq
push
push
in
loope
setp
or
push
cmps
push
inc
cld
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
mov
bt
(bad)
jecxz
mov
cmps
push
inc
fsub
push
(bad)
jecxz
(bad)
jecxz
(bad)
mov
jno
and
mov
pop
movs
in
jp
pop
cdq
call
popf
inc
mov
cmp
rcr
addr16
lahf
cmp
stc
ds
(bad)
hlt
stos
and
cmps
xchg
addr16
sbb
loope
paddusw
stos
push
ins
pop
mov
push
push
inc
mov
inc
dec
inc
dec
dec
outs
adc
sbb
clc
jg
outs
sbb
(bad)
(bad)
std
inc
popf
out
scas
push
inc
shl
push
scas
out
jb
pop
mov
fsubr
outs
mov
inc
cld
add
sbb
mov
mov
aaa
mov
pop
test
daa
loop
inc
mov
push
call
add
out
sti
mov
mov
dec
adc
or
mov
or
(bad)
outs
jbe
dec
mov
ds
lods
jp
push
scas
mov
dec
push
adc
inc
jp
or
mov
cmps
adc
aaa
push
xlat
mov
loope
jge
cdq
scas
loop
addr16
xchg
stos
out
add
or
jmp
inc
add
mov
mov
jg
leave
scas
popw
test
push
dec
cli
mov
call
in
mov
pop
dec
in
cmps
popf
mov
push
mov
xor
xchg
mov
loopne
mov
mov
out
mov
in
in
mov
repz
inc
mov
cmp
mov
mov
jbe
pop
jg
mov
icebp
bound
push
pushf
add
sub
sub
push
push
cwde
lods
push
setp
push
(bad)
jecxz
orps
sbb
or
(bad)
push
pushf
add
xchg
ins
mov
mov
mov
movs
lods
push
or
(bad)
jecxz
(bad)
jecxz
pop
xlat
jge
push
lea
push
setp
push
(bad)
jecxz
(bad)
push
sbb
xlat
mov
std
setge
push
(bad)
test
inc
dec
mov
repnz
cwde
ds
push
or
inc
push
stos
in
clc
in
popf
loop
scas
and
arpl
(bad)
pop
pop
xchg
lods
cmp
sti
arpl
add
jecxz
jge
add
stos
lar
out
fs
lea
movs
cwde
or
loope
sbb
inc
mov
lods
call
stos
cs
stos
das
sahf
je
mov
sub
push
sbb
mov
xor
scas
push
inc
or
das
test
movs
call
enter
lods
repnz
pop
retf
mov
mov
push
cmp
aas
pop
mov
xchg
dec
or
out
add
or
repnz
icebp
mov
xlat
out
adc
int
mov
dec
daa
mov
inc
xor
jp
shl
jae
imul
out
(bad)
clc
pop
std
pop
(bad)
fwait
mov
popf
ja
lods
(bad)
in
push
mov
push
sub
cmp
pop
mov
mov
jp
push
mov
or
jecxz
jbe
idiv
fs
idiv
ja
jb
je
stc
xchg
pop
inc
cdq
scas
jbe
cli
mov
pop
test
adc
ins
popf
loopne
int3
sbb
mov
cmps
sbb
mov
into
dec
mov
into
inc
out
push
into
push
stc
pushf
xchg
xchg
stc
movs
inc
(bad)
in
and
outs
stc
dec
xchg
xchg
test
add
stc
xor
mov
aas
(bad)
mov
and
add
sub
push
pop
cmps
push
inc
jl
push
(bad)
jecxz
out
push
add
cmp
xchg
dec
js
add
sbb
in
js
mov
cmps
jns
cld
pop
icebp
dec
cdq
lods
inc
jl
imul
jb
push
(bad)
jecxz
(bad)
jecxz
(bad)
cmps
push
or
(bad)
jecxz
(bad)
mov
popf
dec
sbb
shr
push
bswap
jecxz
(bad)
jecxz
(bad)
or
cmc
push
push
push
(bad)
jecxz
(bad)
jecxz
(bad)
aad
mov
outs
out
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
jne
xchg
bound
dec
popa
pop
push
in
sub
fwait
cwde
lods
arpl
lahf
jno
jle
test
fild
jbe
repnz
mov
(bad)
mov
and
inc
push
stos
clc
push
fisub
mov
je
ret
cmp
sbb
push
mov
icebp
or
push
repnz
stos
daa
xor
loope
cmp
inc
call
test
out
inc
inc
mov
lods
test
sahf
adc
inc
cmps
mov
sbb
cmps
inc
mov
xchg
dec
mov
dec
push
mov
or
mov
fcomp
in
lods
or
jae
sbb
repz
je
fisub
pushf
jnp
mov
cmp
mov
cmp
mov
dec
and
add
dec
outs
mov
mov
xchg
pop
fwait
inc
sub
cmp
lods
loop
sbb
dec
data16
repnz
out
fwait
mov
stos
stos
repnz
mov
lgs
ss
jne
les
mov
scas
imul
mov
out
loopne
xor
out
mov
and
movs
and
(bad)
cmc
in
add
aam
or
jmp
ror
lea
jmp
iret
fneni(8087
(bad)
(bad)
retf
jg
ret
aas
mov
(bad)
(bad)
movs
(bad)
rcl
xor
mov
and
mov
push
mov
ret
out
push
xlat
(bad)
inc
dec
or
mov
rcr
push
popf
inc
in
lods
push
or
(bad)
jecxz
jmp
or
push
psadbw
push
(bad)
jecxz
(bad)
jecxz
xchg
aad
push
bt
(bad)
arpl
xchg
xchg
mov
cmp
inc
cld
jns
call
loop
(bad)
jecxz
inc
push
and
push
in
or
sbb
in
lahf
add
mov
jo
dec
inc
pop
repnz
mov
sbb
scas
je
pop
inc
lahf
sahf
pop
data16
mov
inc
repz
sbb
push
pop
mov
push
sbb
pop
test
mov
dec
and
(bad)
mov
popf
cmps
repnz
push
inc
mov
jne
xchg
xor
mov
xor
lock
jno
(bad)
aaa
(bad)
loop
out
mul
mov
in
or
push
or
mov
adc
inc
loopne
push
add
dec
arpl
adc
mov
popf
out
scas
adc
mov
mov
push
pop
push
fild
pop
mov
ins
test
xor
mov
addr16
dec
inc
pop
pop
push
loope
inc
test
pop
pop
aas
inc
cld
inc
xor
sbb
or
clc
fwait
ss
out
xchg
inc
xchg
push
iret
or
jp
cli
xor
or
inc
jne
sar
fs
sahf
call
cli
mov
icebp
dec
jp
std
sub
jmp
scas
jmp
mov
fs
aas
mov
data16
mov
addr16
loope
dec
pop
mov
repnz
rcl
and
mov
xchg
cmc
push
mov
ret
mov
mov
xchg
rcr
daa
nop
test
shl
sbb
setno
or
repz
push
in
add
test
mov
(bad)
jecxz
(bad)
jecxz
(bad)
pop
jno
popf
lods
mov
push
and
sbb
mov
imul
lahf
jo
jecxz
in
stos
jbe
lock
ja
sbb
lods
push
(bad)
sbb
repz
aaa
addr16
cmps
cmc
test
(bad)
scas
jp
repnz
dec
adc
jb
and
and
push
jle
xchg
mov
mov
sbb
test
stos
add
dec
push
stos
sbb
inc
in
or
inc
xchg
lods
push
out
add
pop
or
popf
xchg
mov
sbb
inc
and
mov
mov
pop
xchg
fstp
push
lea
sti
fwait
inc
mov
jp
lods
sub
mov
mov
pop
in
jae
jno
sub
dec
push
mov
out
pop
mov
jnp
repz
xchg
push
out
add
test
addr16
inc
add
scas
cmc
jp
mov
or
xor
dec
cmps
mov
sti
out
repz
mov
or
xchg
mov
test
addr16
loop
pop
push
stos
mov
data16
fcom
call
mov
call
fsubrp
mov
imul
sbb
fmul
fwait
cmp
xchg
retf
aaa
xchg
mov
mov
xchg
retf
aaa
xchg
mov
or
jp
mov
push
xchg
sbb
lahf
cwde
pop
aaa
leave
cwde
retf
aaa
xchg
retf
push
fisubr
jae
aaa
out
aaa
xchg
retf
ins
fild
pop
cmp
(bad)
in
dec
leave
adc
in
fdiv
add
cmp
mov
inc
or
cdq
test
arpl
mov
loop
(bad)
pop
push
ror
out
jecxz
(bad)
jecxz
(bad)
jecxz
dec
push
scas
sbb
inc
cwde
dec
cdq
jle
repz
mov
mov
movs
lods
push
or
(bad)
jecxz
mov
cpuid
lods
jo
jns
dec
sbb
int
cwde
pop
popf
call
(bad)
jb
ror
out
jecxz
(bad)
(bad)
adc
inc
dec
mov
popf
dec
outs
pushf
dec
xchg
in
push
loop
sub
jle
jge
push
lea
movs
(bad)
dec
jmp
xchg
lahf
nop
mov
in
bound
push
jmp
outs
bswap
mov
in
shl
addr16
inc
aam
xor
(bad)
jecxz
aaa
push
pop
sar
(bad)
jecxz
orps
fisttp
das
push
sbb
inc
mov
push
(bad)
jecxz
(bad)
jecxz
mov
pop
mov
dec
pop
scas
mov
aam
push
setp
sub
push
dec
bound
ss
cli
mov
aam
push
setp
sbb
(bad)
dec
dec
xchg
adc
mov
push
(bad)
jecxz
inc
aad
mul
adc
mov
out
push
(bad)
jecxz
out
pop
jmp
lods
das
ins
sub
lods
xor
lods
sbb
inc
sbb
clc
out
imul
jns
stos
in
jmp
popf
loop
lods
inc
inc
add
push
leave
jb
ret
(bad)
(bad)
les
jg
cmp
call
jge
ret
shr
out
pop
inc
xor
mov
inc
in
inc
out
inc
xchg
push
mov
cmps
mov
clc
lods
mov
js
and
popf
mov
push
mov
imul
jae
sti
scas
cmp
mov
jne
movs
lods
clc
outs
sbb
stos
push
fdivr
mov
mov
outs
lods
sbb
pushf
mov
pop
ret
mov
jb
loop
jae
cmp
fisttp
inc
enter
sub
call
inc
pop
sbb
xchg
add
pop
pop
idiv
push
xor
mov
sti
mov
fs
ret
call
stos
data16
add
pushf
jecxz
mov
bound
jnp
xor
add
adc
mov
mov
adc
stc
stos
jp
ds
aaa
sub
inc
sbb
inc
push
ja
lahf
aad
popf
sbb
sub
xor
loop
sub
loop
xchg
mov
mov
mov
ins
or
xor
adc
test
inc
std
out
sbb
pop
call
gs
test
inc
mov
call
inc
and
adc
jmp
fsubr
jmp
dec
popa
pop
movs
sbb
adc
test
push
imul
gs
test
sub
out
sbb
pop
xor
xchg
fsub
jb
cld
loop
jle
loop
xchg
fst
retfw
xor
loop
sub
loop
xchg
loopne
data16
sub
mov
xchg
loop
sub
outs
mov
xchg
loop
xchg
mov
pop
sub
mov
stos
(bad)
pop
dec
or
dec
push
(bad)
pop
pop
sub
pop
fucom
pop
xor
loop
sub
lods
inc
addr16
loopne
xor
loop
sub
ss
lock
xor
mov
fs
scas
sub
mov
sar
adc
xchg
loop
xchg
cmps
inc
(bad)
mov
outs
dec
push
cmp
mov
enter
or
add
xchg
loop
xchg
sub
mov
or
(bad)
shr
xchg
stos
adc
sub
sub
mov
bound
jp
loop
xchg
loop
xchg
lods
inc
gs
mov
mov
enter
sub
(bad)
call
enter
cmc
mov
mov
enter
sub
idiv
dec
and
push
ins
add
mov
push
(bad)
jecxz
(bad)
sbb
xchg
pop
imul
test
push
icebp
gs
sbb
das
push
inc
mov
pop
sbb
jp
es
pop
push
call
xchg
(bad)
fist
icebp
inc
les
sbb
imul
lea
sbb
outs
dec
das
mov
mov
push
pop
pop
mov
jle
arpl
inc
in
in
neg
mov
cmps
xor
mov
push
js
jmp
push
sar
jo
or
cmp
mov
addr16
jns
out
push
loope
jbe
cdq
dec
popf
out
push
cmp
mov
mov
dec
pop
mov
inc
xor
cmp
cs
push
add
test
clts
icebp
lahf
xor
sti
out
add
in
int3
daa
ret
or
call
lods
add
lods
push
jne
mov
mov
loopne
or
out
mov
in
mov
mov
test
adc
imul
mov
loop
cmps
stc
pop
push
lea
mov
and
jmp
add
sbb
push
mov
push
or
lods
adc
mov
xchg
inc
xor
scas
add
inc
add
call
inc
bound
(bad)
(bad)
dec
in
or
das
xchg
push
cmp
or
mov
or
lahf
aam
sub
cdq
push
cmp
cdq
mov
push
cdq
mov
inc
cwde
(bad)
cmp
or
out
inc
or
lahf
cdq
or
cdq
inc
cmp
cdq
(bad)
stos
cwde
mov
sahf
ror
cmp
sbb
xchg
sbb
push
sahf
cdq
retf
cmp
mov
add
mov
cmp
cwde
or
lahf
cdq
or
cdq
lahf
cmp
cwde
retf
cmp
pop
or
lahf
sbb
push
sahf
aam
cmp
jmp
or
sahf
(bad)
inc
cmp
(bad)
inc
je
aam
je
adc
xor
push
mov
js
sbb
sahf
jns
cmp
(bad)
inc
je
xchg
inc
je
xchg
mov
jne
pushf
aas
mov
jp
or
sahf
(bad)
inc
cmp
(bad)
inc
je
fwait
inc
hlt
adc
or
xchg
sub
mov
sbb
or
(bad)
inc
cmp
(bad)
inc
je
cwde
lods
jne
xchg
or
je
fbstp
stos
sbb
mov
or
sar
lods
je
int3
pop
mov
push
sbb
sahf
(bad)
inc
cmp
(bad)
inc
je
(bad)
inc
je
cwde
lods
jne
mov
sbb
aaa
stos
sbb
out
cwde
out
cmp
(bad)
or
(bad)
inc
je
mov
je
(bad)
ja
out
fbstp
stos
sbb
mov
or
(bad)
inc
je
xchg
inc
hlt
aad
loope
dec
sahf
aas
mov
jp
or
sahf
(bad)
inc
cmp
(bad)
inc
je
mov
je
pop
fdiv
out
fbstp
stos
sbb
cmp
(bad)
or
shl
js
je
fbstp
stos
sbb
in
cwde
out
cmp
(bad)
or
rcl
inc
je
(bad)
inc
je
stc
inc
hlt
stos
aaa
aam
outs
(bad)
leave
sub
(bad)
inc
je
into
inc
hlt
add
sbb
es
(bad)
inc
cmp
(bad)
inc
je
(bad)
inc
je
xchg
movs
jne
mov
adc
addr16
retf
das
ret
cmp
or
das
pop
cdq
imul
imul
ds
(bad)
mov
mov
stos
mov
out
push
push
pop
loop
pminsw
or
(bad)
sbb
xchg
pop
or
push
xor
inc
movs
lods
loope
cwde
pxor
adc
je
sbb
lds
mov
fidivr
je
ds
jp
popf
call
push
dec
push
stos
ret
out
sti
leave
cli
inc
ss
ret
jbe
jbe
jmp
pop
jp
mov
icebp
push
(bad)
mov
mov
es
mov
lock
lgs
scas
popf
mov
sbb
cmp
jno
popf
dec
loop
adc
in
push
lea
icebp
inc
cwde
lods
not
sbb
out
scas
jne
and
jae
pop
test
dec
imul
xor
push
js
mov
push
inc
sbb
fidiv
icebp
dec
jmp
dec
cmp
add
in
jae
repnz
in
lods
scas
inc
jns
mov
(bad)
mov
icebp
inc
cwde
lods
cld
push
cdq
sub
out
jecxz
out
scas
out
fdiv
jg
push
inc
scas
and
add
in
pusha
or
pop
mov
cmps
sti
xchg
bound
enterw
or
mov
(bad)
(bad)
sbb
jae
mov
xchg
xor
mov
push
xor
data16
inc
jle
dec
xor
idiv
std
push
jmp
(bad)
aam
shr
push
inc
or
aam
xchg
test
and
add
dec
test
aam
(bad)
test
and
ror
sub
sbb
and
pusha
aam
mov
aam
mov
sub
lods
or
xchg
fs
loopne
test
loop
ins
in
jmp
push
mov
aam
test
aam
mov
cmp
mov
aam
jmp
and
stos
aam
cmps
test
and
movs
retf
outs
enter
les
aam
jmp
and
add
jb
xchg
aam
fisubr
call
test
and
scas
cmp
retf
(bad)
fimul
stos
(bad)
ror
jp
and
stos
aam
gs
inc
xchg
xchg
inc
sbb
and
dec
jnp
mov
fld
popf
and
jno
push
in
(bad)
add
fst
pop
mov
push
call
mov
arpl
sub
mov
sahf
xchg
arpl
push
(bad)
lods
pusha
test
add
xor
dec
loopne
dec
mov
xlat
and
es
call
add
inc
pusha
and
dec
idiv
addr16
repz
xchg
mov
push
add
test
pop
xchg
jb
mov
out
mov
out
mov
xor
inc
or
retf
xor
bound
adc
ins
retf
scas
xchg
jae
jmp
dec
jl
loope
mov
fisttp
add
ret
jmp
jae
mov
hlt
lods
mov
or
xchg
les
mov
inc
xor
stos
push
mov
xchg
pusha
xchg
popf
daa
ds
mov
loop
add
stos
repnz
jle
loope
mov
popf
cmps
xor
mov
push
js
jle
mov
adc
or
(bad)
inc
jne
or
cmp
mov
out
mov
or
mov
mov
sbb
out
iret
xlat
fidiv
ret
and
scas
ds
add
popf
dec
call
pop
jns
outs
ficom
push
xor
mov
aaa
mov
or
push
mov
aaa
mov
or
aaa
mov
mov
mov
mov
aaa
mov
or
jnp
or
in
push
mov
test
(bad)
pop
mul
stc
test
or
add
mov
or
aaa
mov
or
dec
mov
out
add
mov
or
addr16
mov
not
aaa
mov
or
outs
mov
mov
aaa
mov
or
ret
ror
xchg
sbb
sub
aaa
mov
or
aaa
mov
or
aaa
mov
or
push
and
mov
or
and
mov
mov
mov
or
arpl
or
outs
dec
mov
jp
push
sub
mov
repz
jns
cmp
not
push
aaa
mov
or
inc
out
inc
pop
xor
mov
push
ins
fwait
aaa
test
mov
or
mov
pop
push
bound
mov
jne
or
mov
or
inc
in
or
mov
or
or
push
add
xor
inc
push
(bad)
or
or
xor
inc
js
dec
loopne
hlt
inc
inc
sar
mov
out
inc
mul
cmc
mov
inc
aaa
mov
or
imul
inc
inc
cli
enter
movs
dec
js
sub
mov
or
js
or
push
or
cdq
aaa
idiv
push
aaa
mov
or
sbb
jle
fisttp
inc
js
clc
jp
aaa
loopne
getsec
mov
or
icebp
(bad)
xchg
add
mov
or
aaa
mov
or
in
and
(bad)
sbb
jbe
fnstcw
aaa
mov
or
sbb
push
out
jns
mov
mov
mov
adc
test
mov
mov
fsubr
aaa
mov
or
cli
jmp
adc
mov
or
push
mov
or
mov
or
js
(bad)
pop
aaa
mov
or
je
or
jbe
mov
sbb
pushf
xchg
vpsraw
push
aaa
mov
or
cmc
pop
inc
aaa
mov
or
outs
mov
or
aaa
mov
mov
mov
neg
dec
fwait
jge
dec
aad
fistp
xor
push
aaa
mov
or
jb
or
cli
dec
dec
jns
inc
dec
push
test
repnz
cli
dec
out
pop
stc
fmul
loopne
getsec
mov
or
ror
jno
mov
or
dec
mov
mov
mul
inc
aaa
mov
or
bound
or
test
mov
or
pop
mov
pop
inc
aaa
mov
or
jns
or
neg
aaa
mov
or
addr16
or
test
aaa
mov
or
cmp
scas
mov
push
ins
nop
aaa
mul
aaa
mov
or
fdiv
aaa
mov
or
test
mov
or
sbb
or
jbe
or
aad
and
mov
or
jbe
or
aad
and
mov
or
jbe
or
aad
and
mov
or
jp
or
xlat
mov
mov
or
ins
in
or
mov
or
(bad)
mov
aaa
mov
or
iret
mov
push
or
mov
push
pop
cmp
call
repnz
mov
or
aaa
idiv
or
mov
or
cmp
or
aaa
test
mov
or
dec
loopne
add
out
stc
popf
cmps
inc
aaa
mov
or
js
or
dec
dec
inc
push
loopne
mov
or
pop
aaa
mov
or
aaa
mov
mov
mov
or
sbb
icebp
mov
aaa
mov
or
aaa
xchg
or
aaa
mov
or
arpl
or
dec
inc
jns
dec
mov
in
pop
test
gs
xchg
mov
stc
jmp
aaa
mov
or
sbb
or
test
push
aaa
mov
mov
xlat
pop
inc
aaa
mov
or
pop
mov
cmp
loope
mov
or
push
aaa
mov
or
out
inc
push
test
mov
ret
cmp
mov
adc
mov
or
jl
or
jns
mov
pop
bound
xchg
sbb
les
jmp
cmp
inc
outs
and
aaa
(bad)
ds
aaa
mov
or
and
out
adc
mov
or
or
or
inc
sub
shl
mov
inc
or
mov
or
inc
clc
mov
out
inc
push
div
std
leave
dec
push
je
push
add
(bad)
(bad)
ins
div
jns
dec
inc
inc
fcmovb
pusha
mov
adc
mov
or
arpl
or
std
bound
outs
dec
mov
stc
cmc
inc
js
iret
jmp
ret
mov
or
add
mov
pop
push
sbb
or
aaa
mov
or
je
pop
fcomp
dec
nop
imul
and
mul
mov
icebp
mov
aaa
mov
or
xor
mov
pop
xor
mov
or
push
mov
imul
je
aaa
mov
or
std
bound
outs
dec
mov
stc
cmc
inc
js
xlat
jmp
ret
mov
or
pop
mov
adc
mov
or
maxps
je
inc
(bad)
mov
clc
jmp
push
gs
pop
xor
mov
or
pop
fisub
jne
jp
push
in
(bad)
out
fst
jge
not
jns
inc
shr
push
push
cli
imul
inc
jns
inc
(bad)
jne
bound
add
inc
fdiv
repz
mov
cmp
mov
or
outs
and
je
pop
or
js
xchg
mov
or
jp
mov
cs
das
cmp
mov
or
pop
mov
out
lods
mov
adc
aaa
mov
or
or
or
push
mov
or
int3
mov
adc
mov
or
add
jns
inc
push
inc
push
imul
inc
imul
dec
and
popa
pop
inc
inc
(bad)
push
inc
xor
ins
add
loop
fisubr
outs
add
mov
cwde
fmul
mov
mov
data16
bound
shr
pushf
push
jle
jecxz
(bad)
scas
sar
out
sbb
(bad)
jecxz
mov
adc
into
jnp
sar
push
cwde
push
jp
in
addr16
cdq
pop
mov
jne
sbb
lods
jnp
sbb
add
push
pop
imul
jae
mov
inc
push
(bad)
dec
icebp
test
(bad)
mov
stos
(bad)
adc
lods
inc
scas
call
inc
cld
or
inc
cwde
lods
pushf
xchg
sbb
lahf
mov
mov
je
sub
mov
in
scas
sbb
dec
adc
mov
sti
daa
sbb
adc
lods
js
fwait
pop
(bad)
lods
push
scas
cmp
mov
imul
add
push
jne
icebp
inc
clc
lods
cmc
repz
xchg
out
xchg
inc
pop
cwde
pop
pushf
mov
fisubr
mov
(bad)
aas
out
inc
xor
scas
mov
stos
mov
test
push
push
loop
aaa
push
stos
stos
movs
jno
inc
mov
pop
(bad)
and
test
jb
dec
push
mov
dec
outs
mov
lea
sbb
pop
lods
sbb
pusha
inc
sub
mov
in
push
idiv
je
sbb
je
push
cdq
cmps
aam
loope
push
loopne
jnp
mov
push
fs
mov
lods
inc
inc
and
jb
clc
push
repnz
sbb
or
iret
push
jno
out
(bad)
out
outs
jecxz
xchg
(bad)
lea
out
sar
sbb
mov
leave
mov
shl
retf
(bad)
rol
xchg
or
lahf
mov
mov
cdq
mov
(bad)
mov
leave
and
jno
(bad)
(bad)
lock
out
outs
lock
jecxz
pop
out
cmp
mov
mov
leave
mov
mov
mov
(bad)
or
nop
xchg
mov
leave
mov
daa
imul
xchg
mov
leave
mov
sar
enter
leave
mov
mov
mov
(bad)
mov
mov
loop
xchg
in
(bad)
fld
mov
mov
cdq
mov
mov
and
shl
repnz
mov
leave
mov
mov
and
outs
adc
sar
mov
leave
mov
js
xchg
sar
test
pop
mov
leave
mov
mov
sub
xchg
dec
out
and
leave
lods
mov
leave
mov
in
mov
leave
mov
ja
xchg
(bad)
mov
leave
mov
mov
mov
mov
push
sub
lock
fidivr
leave
mov
sbb
rcr
mov
push
sbb
mov
leave
mov
lds
js
cmp
leave
mov
mov
mov
pop
mov
push
out
sar
leave
mov
fmul
enter
leave
mov
shl
jmp
xchg
jmp
mov
mov
leave
mov
data16
out
(bad)
mov
in
inc
mul
stc
(bad)
mov
leave
mov
mov
mov
ror
mov
inc
mov
leave
mov
mov
out
mov
mov
leave
mov
out
leave
nop
mov
leave
mov
mov
leave
mov
pop
pop
(bad)
mov
test
ror
leave
mov
cmp
js
mov
leave
mov
pusha
imul
enter
cli
icebp
in
in
(bad)
mov
leave
clc
mov
leave
and
gs
sti
icebp
adc
out
jmp
outs
lea
out
sar
mov
leave
mov
lds
sub
push
mov
leave
fmul
repnz
mov
cmp
enter
leave
mov
mov
mov
cmps
push
fwait
cmp
and
mov
leave
mov
xor
push
mov
fidivr
leave
mov
call
mov
leave
mov
(bad)
mov
leave
mov
mov
leave
and
mov
leave
mov
mov
cdq
mov
mov
sub
push
icebp
pop
call
std
xchg
(bad)
fcom
jle
icebp
xchg
(bad)
icebp
mov
push
fs
cmps
xchg
jno
inc
icebp
pop
out
push
std
xchg
(bad)
test
mov
xchg
jmp
in
mov
push
mov
fidivr
leave
mov
push
icebp
pop
call
std
xchg
(bad)
fcom
jle
icebp
xchg
(bad)
in
mov
push
in
(bad)
jp
xchg
add
push
cdq
xchg
shl
xchg
jp
popf
xchg
or
js
dec
sar
xchg
(bad)
(bad)
sar
push
mov
mov
popf
(bad)
adc
mov
pushf
movs
or
sbb
push
push
inc
mov
pop
std
sbb
rcl
stos
out
std
sub
pop
push
inc
bnd
inc
jmp
loop
lods
inc
inc
cmp
push
mov
hlt
ret
repnz
jbe
sar
push
stos
ret
jmp
test
out
xchg
bound
inc
sti
out
mov
repz
cmp
int
mov
cmp
mov
iret
pop
mov
cmc
sub
call
adc
lods
pop
in
fwait
mov
cmp
aas
sahf
and
add
inc
or
cmp
mov
outs
mov
add
idiv
(bad)
out
repz
jne
mov
movs
loop
jle
fnstsw
xor
mov
jb
sti
inc
in
mov
mov
stos
xor
sbb
out
icebp
push
adc
hlt
dec
out
ret
test
sti
popa
jnp
mov
cmp
iret
mov
data16
or
inc
scas
jmp
gs
jnp
loope
pop
add
not
sub
out
rcl
xchg
ja
call
jp
mov
arpl
(bad)
sti
jae
inc
add
leave
mov
inc
shl
add
sar
es
sbb
rol
sbb
rol
sbb
rol
and
ffreep
mov
jg
mov
sub
sbb
fild
bound
mov
ins
push
xor
sti
sbb
mov
mov
jbe
mov
daa
(bad)
rcl
mov
les
jle
loop
cmps
mov
sti
push
xor
sub
fisttp
dec
daa
arpl
sti
push
sbb
xchg
mov
cmps
mov
jg
shr
push
xor
xlat
cmps
or
mov
push
xor
mov
jle
dec
daa
xor
sti
push
xor
xor
inc
bound
jno
imul
push
jle
mov
mov
shl
jle
push
enter
xchg
push
mov
loop
jmp
fldcw
push
aad
pusha
sbb
(bad)
push
inc
mov
sbb
cwde
fdivr
aaa
inc
inc
inc
inc
shl
jo
call
inc
cmp
lahf
rcl
mov
xchg
lods
test
sbb
sti
popa
pop
out
cdq
mov
sbb
mov
inc
in
popf
add
jb
pushf
adc
out
inc
cmp
mov
dec
imul
mov
push
cwde
dec
cs
add
nop
inc
mov
into
mov
pushf
dec
xor
lods
jp
lahf
mov
mov
adc
jmp
jl
jle
mov
in
mov
push
popf
pop
mov
pop
test
pop
out
popf
lgs
mov
(bad)
lods
lahf
data16
sbb
inc
repnz
sbb
daa
xor
out
xor
push
aad
pusha
jnp
and
jg
ss
out
mov
icebp
inc
pop
nop
lock
shl
adc
mov
mov
(bad)
sbb
pop
push
sti
loop
jbe
bound
addr16
pop
dec
jbe
adc
inc
mov
stos
sbb
gs
xor
jp
out
push
xor
push
out
outs
jmp
cmc
fwait
retf
stc
scas
inc
bound
push
xchg
push
stos
sti
jbe
popa
mov
(bad)
out
outs
mov
aam
aam
cmp
shr
jge
outs
cwde
jecxz
and
mov
and
std
xor
cld
or
in
mov
mov
mov
cli
lea
fnstenv
pop
out
sub
lea
xor
push
dec
fldenv
ins
mov
inc
fsubr
push
xchg
mov
push
bt
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
pop
aam
push
setp
push
(bad)
jecxz
(bad)
mov
cli
xlat
movs
sbb
inc
cwde
cmp
sub
sar
(bad)
jecxz
orps
mov
int3
cmp
jge
cwde
pop
cmp
scas
sbb
inc
pop
mov
lahf
iret
test
push
shl
push
stos
in
sub
in
inc
jp
dec
leave
push
inc
imul
xchg
into
lods
pop
inc
sbb
push
sbb
stos
ret
push
mov
or
push
popa
push
stos
ret
push
scas
cmps
inc
ds
and
retf
cmp
in
cmp
dec
test
ja
or
mov
and
mov
sbb
inc
call
lods
and
push
dec
lahf
mov
mov
mov
cmc
jo
lock
js
out
pop
in
int
out
retf
inc
xchg
xor
scas
add
push
test
add
repnz
cs
lods
inc
test
and
pcmpgtd
iret
ss
mov
push
mov
icebp
dec
pop
mov
loop
arpl
mov
jne
jne
call
addr16
xor
test
fwait
mov
in
xchg
mov
cmp
jae
xchg
push
fs
sub
mov
imul
scas
jecxz
mov
mov
xchg
dec
sti
cmp
mov
loope
jle
sbb
daa
push
ret
stos
push
mov
sbb
add
in
jnp
adc
push
inc
stos
test
jg
jmp
inc
call
mov
jb
sbb
in
mov
(bad)
ins
inc
in
adc
jb
jb
stos
in
jb
fsubr
jno
xor
cmps
cmp
push
mov
and
imul
(bad)
jb
mov
jb
mov
cmp
xor
jb
cld
out
jb
mov
sub
xor
jb
mov
or
push
out
jb
mov
cmp
mov
jb
out
out
jb
mov
sbb
cs
and
jb
mov
dec
push
mov
cmp
out
mov
fimul
in
jb
cld
out
sub
shr
jb
mov
jge
mov
repnz
out
imul
std
xlat
xor
test
out
jb
mov
adc
out
jb
mov
jb
int3
out
push
mov
repnz
out
jb
mov
jb
mov
lock
out
das
push
jae
int
xchg
push
adc
jb
cld
daa
sub
rcl
mov
jb
ret
push
mov
adc
sahf
jb
shr
jb
mov
jb
mov
sub
xchg
mov
jb
mov
jb
mov
pop
push
fsubr
jb
mov
jb
mov
add
xor
xor
pop
in
xlat
sbb
push
repnz
out
and
out
cmp
xor
jb
cld
out
jb
mov
jo
mov
jb
call
out
adc
out
jb
mov
jb
mov
sbb
imul
out
dec
push
mov
ins
xlat
std
ja
imul
out
dec
push
mov
adc
out
jb
xor
jb
mov
jb
mov
imul
pop
in
xlat
ins
jbe
test
out
jb
mov
inc
push
xor
jb
fsubrp
jb
cld
out
sub
pop
pop
xchg
xor
repnz
in
jb
cld
out
jb
mov
sub
inc
xor
stos
mov
cmp
fidivr
movs
jno
js
daa
xchg
out
jb
mov
cmp
xor
inc
fidivr
movs
jno
js
daa
xchg
out
jb
mov
sbb
out
mov
or
nop
jb
enter
mov
jb
xor
jb
fsubr
jb
mov
jae
mov
jb
call
movs
std
jnp
mov
push
out
ds
mov
jb
mov
aas
push
mov
jb
mov
jae
mov
std
movs
mov
repnz
out
jb
mov
push
call
fidiv
sub
cmp
push
jb
sub
xchg
push
adc
jb
mov
jb
mov
jo
mov
jb
shr
and
out
inc
cmp
pop
repnz
out
jb
mov
xor
out
cmp
xor
inc
sbb
cmp
fldcw
loope
xor
push
jb
mov
jb
mov
jo
xor
xor
out
ss
inc
jo
mul
and
xor
in
or
in
adc
jbe
jb
sub
jb
lods
out
jb
mov
jo
mov
jb
enter
mov
jo
mov
jb
shr
xor
pop
add
mov
cmp
sub
jo
xchg
sti
jb
shr
jb
mov
sbb
push
out
xor
mov
jb
mov
jb
cld
out
pushw
jb
mov
adc
out
jb
mov
jb
fsubr
push
sub
out
pop
push
mov
adc
out
jl
out
jb
mov
jb
mov
sbb
push
out
jb
mov
adc
mov
jb
mov
jb
cwde
out
pushw
jb
mov
jb
mov
jb
mov
sbb
push
out
jb
mov
jb
mov
cmp
mov
jb
aam
jb
mov
xor
(bad)
and
lods
or
push
out
jb
mov
pop
push
mov
mov
and
(bad)
out
adc
out
jb
mov
jb
fsubr
sub
out
jb
mov
jb
mov
jo
mov
jb
movs
out
sbb
push
out
push
push
mov
jb
nop
out
jb
mov
cmp
mov
cmp
cli
out
popa
fwait
sti
jb
shr
sbb
push
out
jb
mov
adc
mov
jb
mov
jb
cwde
out
pushw
jb
mov
jb
mov
sbb
push
out
jb
mov
jb
mov
cmp
mov
jb
aam
jb
mov
pop
inc
mov
adc
lock
jb
jecxz
jb
int3
out
jb
mov
pop
push
mov
retf
scas
cmc
ja
jne
or
jb
test
jb
mov
es
in
es
xor
jb
cld
out
xor
lods
or
repnz
(bad)
push
xchg
js
cmps
gs
daa
xor
test
daa
push
sahf
into
fstp
sbb
and
add
add
ror
lods
xor
sub
inc
mov
pushf
dec
or
sar
(bad)
jecxz
(bad)
jecxz
(bad)
cmp
mov
sub
lods
sbb
inc
fsubr
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
imul
pushf
cmc
cdq
mov
sbb
pop
push
inc
mov
sbb
sbb
push
inc
outs
xchg
push
stos
in
push
je
mov
add
push
aaa
pop
cmps
aaa
ret
mov
sbb
inc
jle
xlat
pop
push
stos
loop
ins
push
rol
adc
push
je
test
jge
jecxz
stos
(bad)
jno
in
out
and
jge
mov
pop
stos
repz
mov
sbb
xor
mov
test
clflush
mov
repnz
or
ret
inc
ins
pop
popf
out
scas
jno
xor
sub
push
cmc
inc
repnz
cmc
inc
mov
jno
dec
mov
stos
pop
dec
mov
pop
and
add
bound
popf
mov
sbb
mov
xor
dec
jne
call
pop
popf
out
scas
push
inc
test
mov
dec
push
mov
add
jbe
rol
sub
call
out
push
pushf
mov
jno
pop
gs
pop
sti
add
xlat
inc
lock
idiv
hlt
repnz
pop
mov
loope
add
inc
xchg
out
iret
popf
loop
lods
cmp
xor
dec
mov
or
mov
fs
adc
cli
aaa
out
aaa
inc
mov
inc
imul
stos
dec
or
shl
mov
je
repnz
iretw
loope
or
dec
push
adc
icebp
inc
and
mov
loop
jp
loop
push
mov
loop
push
mov
pusha
out
loope
cmc
push
scas
imul
loop
sub
sar
push
loop
push
mov
pusha
mov
push
test
imul
loop
cmp
sar
push
loop
and
loope
push
scas
imul
loop
sbb
loop
push
mov
scas
adc
mov
push
mov
loop
xor
loopne
and
loopne
push
lods
imul
loop
push
mov
popa
mov
or
lods
mov
push
mov
loop
movs
sub
scas
push
scas
imul
loop
and
push
loope
and
sub
and
or
cmc
push
scas
imul
loop
dec
mov
loop
push
mov
mul
mul
movs
test
push
mov
loop
sub
loopne
push
scas
imul
loop
and
push
loope
and
sub
and
or
cmc
push
scas
imul
loop
xor
mov
push
mov
popa
mov
or
lods
mov
push
mov
loop
and
bound
loope
cmc
push
scas
mul
sub
test
sar
jle
scas
push
jmp
imul
loop
push
loop
call
mov
loop
jne
loopne
and
scas
jne
loope
inc
jmp
imul
loop
and
loope
shl
xchg
xor
sub
outs
loope
sbb
add
inc
movs
xor
scas
bound
pop
xchg
mov
fsubr
push
(bad)
jecxz
(bad)
sti
push
repz
jecxz
(bad)
jecxz
(bad)
call
test
js
push
inc
test
push
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
adc
jecxz
(bad)
jecxz
(bad)
jecxz
inc
aam
sbb
prefetch
sbb
xchg
mov
push
lods
push
or
(bad)
jecxz
xlat
loop
ins
xchg
cmp
or
(bad)
jecxz
(bad)
sub
aad
push
rol
push
(bad)
jecxz
outs
(bad)
cmp
or
(bad)
arpl
push
adc
jecxz
(bad)
jecxz
outs
(bad)
cmp
or
(bad)
jecxz
(bad)
jae
outs
(bad)
loop
(bad)
jecxz
(bad)
jecxz
out
scas
push
inc
mov
or
(bad)
(bad)
adc
xor
(bad)
jecxz
adc
push
jp
jecxz
(bad)
jecxz
push
push
popf
push
jp
or
fild
dec
and
mov
add
push
(bad)
jecxz
(bad)
jecxz
rcl
push
arpl
jecxz
(bad)
jecxz
(bad)
mov
inc
(bad)
jecxz
fcmovbe
jmp
aad
je
mov
movs
jno
test
mov
adc
jecxz
(bad)
xlat
dec
dec
xlat
lods
das
ins
xor
rol
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
pop
rcl
and
scas
sbb
inc
xor
sahf
adc
pop
pop
mov
not
pop
dec
out
jmp
loope
or
stc
call
mov
cli
inc
inc
mov
push
push
je
das
inc
or
jmp
adc
jmp
xchg
sahf
lahf
or
sub
push
icebp
push
call
out
pop
pop
test
mov
ss
or
les
std
dec
inc
aas
mov
push
je
data16
add
test
and
push
xchg
pop
jecxz
loop
dec
push
sar
jne
es
stc
cmp
add
inc
mov
push
cli
ret
out
sti
out
mov
enter
gs
jmp
in
inc
or
lods
push
xchg
mov
sahf
jnp
aaa
mov
in
outs
outs
loopne
daa
sahf
xchg
fs
bnd
outs
push
(bad)
cmp
imul
inc
cli
sub
mov
xchg
mov
mov
add
test
dec
outs
or
mov
out
or
arpl
mov
mov
push
int3
pusha
test
aas
mov
loop
ins
push
into
stos
out
jnp
jg
scas
hlt
jae
ds
inc
push
or
mov
push
lds
sub
push
in
xor
adc
mov
jns
test
mov
adc
push
test
pop
sub
rol
mov
pushw
adc
outs
adc
or
jbe
ret
cld
mov
mov
pop
adc
push
jge
fs
adc
push
adc
ss
push
adc
pop
pop
imul
(bad)
cld
mov
mov
pop
adc
pop
adc
push
push
lahf
and
jae
pop
mov
mov
mov
sub
cs
xor
adc
push
adc
sub
push
test
xor
mov
outs
adc
pushw
xchg
add
maxps
and
(bad)
and
push
stc
cs
repz
xor
lods
sbb
sar
mov
hlt
sub
push
sub
fs
dec
xchg
clc
dec
ss
push
pop
fs
inc
mov
fcomp
ds
(bad)
xlat
xlat
push
mov
add
adc
mov
or
mov
aas
inc
in
mov
mov
cwde
push
inc
inc
dec
inc
shl
jb
out
outs
jle
jmp
inc
mov
cli
lea
xlat
nop
push
stos
call
inc
pop
sbb
push
stos
div
in
in
sub
jne
push
mov
repnz
(bad)
into
scas
and
or
cld
inc
xor
sbb
test
add
add
inc
xchg
or
gs
mov
xor
ds
pop
cmps
aaa
fidivr
inc
mov
inc
jp
clc
pop
popf
aas
retf
in
sbb
sti
mov
fcomp
mov
mov
stos
iret
mov
jno
mov
loop
repz
std
mov
aaa
push
mov
test
mov
xchg
sub
mov
loop
or
mov
pop
mov
call
inc
adc
mov
add
jle
pop
mov
push
loope
mov
sbb
mov
mov
movs
(bad)
outs
ja
clc
je
ins
lods
jmp
or
mov
and
push
loop
push
sbb
push
jae
bound
inc
push
inc
jbe
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
cmp
es
mov
xchg
dec
mov
dec
dec
cmp
call
mov
mov
les
jg
loope
xchg
fcmovb
xor
aad
jns
mov
jle
mov
les
add
cmp
and
cmp
dec
mov
dec
dec
data16
pop
inc
jbe
add
inc
jns
ror
in
mov
mov
or
iret
dec
mov
dec
std
sub
mov
dec
dec
(bad)
fimul
cmp
dec
ret
dec
(bad)
(bad)
jle
jmp
dec
or
cmp
dec
sti
cmp
add
push
jge
aam
std
xchg
(bad)
mov
inc
pop
mov
dec
scas
cmp
dec
mov
push
fcomip
mov
cmps
dec
mov
dec
dec
jge
call
jbe
(bad)
push
popa
lea
shl
push
test
lods
je
loope
mov
lea
add
cmps
push
mov
cmps
sub
pop
loop
pminsw
push
(bad)
mov
inc
cwde
lods
imul
pushf
sub
and
inc
push
in
xor
sbb
in
lahf
jne
into
mov
loopne
es
es
repz
pop
popf
cs
fwait
pop
mov
jno
sbb
repz
jl
ja
or
test
mov
add
in
daa
inc
adc
retf
push
push
cmps
(bad)
jns
in
lahf
inc
xor
fs
inc
fisubr
pushf
aas
mov
lods
xchg
mov
push
jp
mov
popf
mov
lods
je
fwait
mov
pop
inc
pushf
imul
mov
add
xor
and
mov
out
dec
inc
mov
inc
adc
sub
stos
es
mov
add
daa
pop
retf
push
inc
push
lea
jmp
jae
daa
inc
cld
inc
mov
sbb
push
mov
mov
add
out
retf
push
std
jl
lods
loop
rsqrtps
out
push
mov
push
mov
sti
out
iret
mov
repnz
gs
loop
rcl
mov
sbb
call
inc
push
mov
push
stos
not
int3
cmps
inc
pop
ja
push
push
dec
xchg
jmp
jnp
stos
stc
ins
xchg
jmp
add
loopne
mov
movs
push
jae
mov
mov
dec
cdq
inc
xchg
dec
sbb
pop
stos
dec
jecxz
cmp
xor
sbb
xor
sbb
or
dec
adc
lds
sub
pop
arpl
std
mov
and
daa
xchg
xchg
lahf
lods
cli
stos
arpl
sti
cs
loopne
cs
loopne
push
sahf
loopne
cs
jmp
sahf
loopne
cs
loopne
cmp
adc
fstp
mov
(bad)
cwde
push
fbstp
lods
cli
inc
push
clc
mov
call
xor
loopne
jae
cmps
sti
jl
jmp
mov
loopne
jae
mov
mov
xor
mov
addr16
lahf
sti
cmp
mov
repz
mov
test
(bad)
loopne
mov
test
int
sti
inc
out
stos
fsubr
xlat
mov
repz
cmps
sti
jl
mov
(bad)
xor
sbb
xor
mov
mov
loopne
stc
push
and
xlat
lods
xchg
daa
sti
dec
xchg
jmp
xor
xchg
xchg
clc
xchg
aad
test
cdq
mov
(bad)
loopne
aaa
xchg
daa
dec
arpl
retf
aam
mov
movs
sti
jnp
xchg
xchg
jle
sbb
adc
and
jp
sub
aas
lods
daa
sub
std
pop
adc
std
push
and
in
cmp
dec
mov
data16
stos
mov
daa
dec
adc
xor
stos
clc
xor
stos
clc
or
out
sbb
stos
clc
xor
stos
clc
xor
stos
clc
clc
int3
adc
mov
fdivrp
cli
xor
mov
add
int3
retf
aad
(bad)
dec
mov
cmps
xor
lods
stos
arpl
mov
xor
cmps
cli
je
stos
mov
arpl
cmp
je
jmp
xor
loopne
outs
xchg
mov
mov
xor
mov
das
xchg
pop
sti
or
fstp
mov
inc
bound
retf
mov
fs
mov
xor
adc
stc
cvtpi2ps
xlat
lods
xor
and
dec
xchg
stos
mov
ins
xchg
xchg
or
xchg
sti
sti
je
lahf
mov
ja
cmps
cli
aaa
sahf
test
jnp
pusha
cli
jl
xor
mov
mov
cdq
imul
and
and
(bad)
mov
pop
mov
sti
aaa
xchg
mov
mov
lahf
xor
sahf
sub
xor
in
inc
shl
xor
test
adc
out
and
xchg
push
shr
std
or
in
std
repnz
xor
xchg
std
xor
in
inc
test
and
(bad)
jg
jno
mov
sahf
mov
xor
in
xor
in
jle
gs
sahf
mov
xor
test
adc
mov
lahf
stos
mov
ss
jge
sub
add
in
xor
std
shl
add
sub
lahf
out
push
shl
std
push
out
xor
in
push
out
adc
out
xor
lods
std
xor
in
xor
in
jl
fs
sahf
ret
std
xor
in
(bad)
shl
std
push
mov
push
cdq
mov
mov
cmps
cmp
aas
mov
lahf
inc
test
popa
or
movs
aad
loop
cmp
mov
adc
int
popa
call
in
lahf
mov
pop
mov
inc
sbb
(bad)
aas
jp
mov
jo
hlt
dec
call
scas
adc
xchg
mov
jb
repnz
loop
test
cmp
jle
pop
and
fidivr
cmp
mov
jne
sbb
mov
js
sub
mov
sahf
scas
ja
cmp
mov
sti
clc
jbe
repz
in
xor
lods
lahf
retf
push
inc
mov
lods
call
inc
mov
call
stos
fld
mov
mov
jb
outs
xor
leave
dec
push
stos
repz
mov
popf
cmps
xchg
lods
ds
pop
xlat
sahf
clc
je
or
add
arpl
lock
repnz
out
xchg
(bad)
mov
mov
push
js
ficomp
or
mov
push
sar
test
bound
in
(bad)
mov
pop
cli
mov
push
xchg
in
loopne
xor
repnz
out
(bad)
out
sub
stos
js
cmps
pop
sbb
pop
jge
mov
jb
jb
xchg
mov
out
popa
inc
and
sahf
fsubp
xor
inc
jb
push
iret
xlat
inc
into
add
dec
sahf
or
mov
loopne
xor
pop
inc
xor
pop
adc
mov
inc
xchg
mov
inc
xchg
out
loopne
das
loop
jb
pop
push
xchg
mov
inc
fnsave
xchg
push
xchg
push
pop
and
shl
inc
xchg
mov
inc
xchg
mov
inc
xchg
out
or
aam
xor
dec
adc
cmp
inc
popf
out
sbb
mov
add
out
lods
mov
xchg
and
cs
pop
pop
call
data16
imul
inc
stos
mov
sbb
test
loope
add
inc
xchg
inc
push
inc
sbb
pop
push
(bad)
(bad)
arpl
jns
inc
popf
sahf
lods
lods
xor
out
push
jmp
fwait
inc
dec
jmp
jbe
enter
mov
les
bound
inc
popf
out
scas
sbb
cmps
inc
inc
mov
inc
out
jae
aaa
popf
cmps
(bad)
lods
jo
and
rcr
test
inc
jl
xchg
das
jno
cmp
ficomp
push
sti
out
out
cmc
push
and
in
(bad)
out
fs
out
scas
push
inc
lods
mov
dec
push
mov
add
addr16
jno
cli
lods
in
ror
sti
out
fwait
mov
xor
lods
sub
push
in
sti
mov
idiv
ja
mov
(bad)
mov
pushf
pop
mov
jnp
ret
mov
popf
out
js
dec
inc
stos
out
mov
xchg
inc
loop
aaa
push
jmp
sub
imul
scas
mov
mov
add
sbb
test
aaa
(bad)
mov
fs
push
cmps
jecxz
jle
sahf
fwait
repnz
or
push
(bad)
sub
test
outs
cmp
imul
add
push
sti
push
inc
repnz
loop
retf
sbb
and
mov
mov
sub
daa
cmps
mov
sub
and
mov
pop
es
test
test
test
data16
inc
sub
mov
arpl
aaa
movs
sub
sub
(bad)
jmp
sub
(bad)
in
stos
mov
jg
push
pop
sub
(bad)
imul
out
mov
(bad)
sub
sub
hlt
and
hlt
xor
cmps
xor
(bad)
imul
sub
sub
in
mov
xchg
jb
out
cmps
xor
(bad)
imul
and
sbb
sub
mov
call
dec
pop
sub
mov
jg
push
pop
sub
(bad)
imul
xchg
push
aam
xor
xor
xchg
jb
push
cmps
xor
nop
jb
test
(bad)
imul
dec
sub
aas
sub
xchg
jb
push
cmps
xor
nop
jb
test
(bad)
imul
mov
nop
jb
test
(bad)
imul
mov
in
jae
repz
in
out
popa
ds
jg
repz
xor
out
and
cwde
sub
xor
(bad)
test
daa
push
push
add
movs
or
and
lods
sbb
inc
adc
xor
mov
sbb
jle
and
sbb
push
add
inc
mul
cdq
pop
lock
loopne
into
stos
sub
sahf
mul
gs
jb
push
xchg
sbb
mov
jge
mov
es
popf
loop
lods
or
or
xlat
jbe
sbb
es
add
dec
adc
jle
jb
sbb
inc
jo
shr
jno
mov
in
mov
pop
repnz
je
pop
lods
repnz
jne
jae
jecxz
fild
adc
add
add
div
pop
aaa
adc
xchg
jg
mov
(bad)
push
cwde
mov
in
xchg
mov
dec
mov
add
outs
mov
jmp
push
jb
leave
dec
data16
out
jle
pushf
pop
mov
bound
(bad)
add
and
cmp
xchg
cwde
or
loop
sbb
dec
addr16
sti
jmp
loopne
repnz
fwait
addr16
push
mov
inc
xlat
mov
nop
fild
cli
push
fidivr
sbb
lahf
mov
mov
ficom
(bad)
sbb
fisttp
inc
mov
retf
sbb
adc
lds
fisttp
mov
push
mov
fisttp
sbb
jg
dec
adc
sbb
ffreep
sbb
fisttp
inc
repz
retf
test
sbb
retf
ffreep
sbb
fisttp
aam
push
mov
(bad)
sbb
fisttp
sbb
xchg
mov
fld
pushf
xor
xchg
or
dec
sbb
xchg
push
retf
(bad)
sbb
fisttp
sbb
xchg
mov
sbb
stos
sbb
fisttp
sbb
fisttp
fcom
ffreep
sbb
fisttp
push
adc
lds
fisttp
sbb
(bad)
popf
pop
jnp
mov
inc
fstp
dec
sbb
fld
sbb
pop
or
fisttp
sbb
out
xchg
adc
mov
fisttp
xor
imul
mov
dec
dec
adc
sbb
fisttp
xchg
adc
mov
dec
dec
adc
sbb
lahf
mov
loope
rcr
adc
push
adc
fstp
fisttp
sbb
outs
or
fld
sbb
fisttp
push
adc
fstp
fisttp
dec
xchg
mov
push
adc
lds
fisttp
xchg
adc
mov
fisttp
add
xchg
cmps
push
adc
lds
fisttp
jl
dec
or
fld
sbb
lahf
or
(bad)
sbb
fld
sbb
pop
mov
adc
mov
fisttp
inc
push
push
retf
test
xchg
sbb
retf
ffreep
sbb
fisttp
dec
inc
sbb
fwait
sbb
fisttp
sbb
fisttp
push
arpl
aas
inc
sbb
adc
nop
sbb
hlt
adc
push
mov
imul
out
icebp
cs
lods
and
shr
jne
aaa
scas
shl
pushf
mov
jnp
rcl
jne
lahf
scas
out
das
pop
test
add
push
inc
mov
mov
pop
inc
imul
(bad)
jne
jle
rol
inc
in
popf
neg
jno
movs
aaa
mov
jno
call
out
pop
push
jno
(bad)
lods
std
and
adc
das
jg
cld
inc
xchg
fs
inc
push
out
add
out
inc
mov
or
mov
ja
mov
je
loop
dec
push
test
out
adc
mov
pop
in
(bad)
mov
cmp
ja
ficom
push
mov
fidiv
push
dec
test
ror
mov
in
jecxz
sahf
ret
or
in
addr16
xor
fs
aas
mov
and
data16
jae
shr
jo
scas
cs
pop
mov
jle
pop
xor
in
mov
iret
inc
push
push
and
inc
mov
jg
sub
int3
push
ja
pusha
rol
(bad)
jp
add
dec
jo
push
dec
push
jnp
adc
jp
jo
push
dec
jo
push
dec
adc
mov
daa
inc
cwde
shl
dec
jo
push
dec
jo
push
dec
cmp
push
pop
jb
fs
jo
inc
dec
adc
dec
daa
inc
or
jo
or
jo
push
dec
sub
push
pop
jb
fs
jo
inc
dec
jo
push
dec
xor
push
jb
ins
pop
jo
pop
dec
jo
push
dec
sbb
dec
ds
push
add
jo
push
dec
adc
dec
daa
inc
or
jo
cmp
sbb
dec
ds
push
add
jo
push
dec
jo
push
dec
and
pop
push
jo
dec
dec
cmp
dec
mov
pop
push
dec
jo
push
dec
jb
push
ja
pop
pop
dec
cmp
dec
mov
pop
push
dec
jo
push
dec
jb
push
(bad)
jo
pop
dec
jo
push
dec
mulps
sbb
jo
add
pop
push
dec
pusha
pop
push
xor
pop
jo
pop
dec
adc
dec
cmps
add
jle
lods
add
pop
sub
jo
inc
dec
jno
or
out
mov
cmps
cwde
ret
push
ins
dec
jo
push
dec
sub
dec
ds
or
js
add
mov
push
inc
push
jo
inc
dec
jo
add
pop
push
dec
pusha
pop
push
xor
or
dec
sbb
dec
jo
or
dec
jo
push
dec
cmp
pop
pop
xor
inc
pop
jo
pop
dec
jg
push
sbb
pop
dec
jo
push
xor
or
dec
pop
pop
push
sbb
pop
dec
and
push
or
mov
push
inc
dec
jo
inc
dec
jns
or
mov
pop
inc
push
jo
inc
dec
jo
push
dec
popa
pop
mov
fmul
in
arpl
dec
push
clc
cwde
(bad)
mov
jo
inc
dec
jb
push
inc
jo
pop
dec
jo
push
dec
js
mov
jo
inc
dec
and
push
and
or
jo
push
dec
jle
mov
pop
and
pop
inc
dec
jo
push
dec
js
or
movs
push
push
and
inc
dec
jo
push
dec
jo
push
dec
push
pop
push
lock
ret
push
out
(bad)
push
jo
inc
dec
jo
push
dec
pop
pop
mov
mov
pop
push
dec
jo
push
dec
js
or
movs
push
push
and
inc
dec
xor
dec
cmp
(bad)
out
push
pusha
push
jo
inc
dec
jo
push
dec
jb
push
adc
add
ror
ins
sbb
pop
dec
jo
push
dec
imul
cmps
push
xor
add
pop
and
pop
inc
dec
jo
push
dec
cmp
(bad)
jb
add
jo
inc
dec
jo
push
dec
xor
dec
daa
add
call
dec
jo
adc
pop
push
dec
and
push
sub
or
jo
push
dec
jb
push
ret
inc
pop
sub
jo
inc
dec
jno
or
mov
pop
dec
and
inc
dec
adc
dec
daa
loope
shl
dec
jo
push
dec
jo
push
dec
cmp
sub
jb
or
jo
inc
dec
pusha
pop
push
dec
repnz
pop
jo
bound
pop
push
dec
cmp
sbb
inc
rcl
imul
add
cli
cwde
inc
cmp
rol
sub
push
ret
inc
adc
ds
add
xor
ret
stc
mov
ret
xor
mov
pop
inc
mov
ds
xchg
sbb
in
lahf
cmp
mov
loop
pop
repnz
loop
sub
inc
jo
rcr
popf
loop
scas
sbb
outs
push
mov
ret
jb
scas
jmp
shl
xchg
je
repnz
sahf
mov
mov
pop
repnz
iret
inc
jmp
nop
jae
jmp
in
jl
loop
aaa
push
mov
xchg
add
mov
xor
jb
jne
jb
(bad)
ja
and
dec
inc
mov
jecxz
mov
test
pushf
pop
mov
fmul
jp
push
scas
adc
mov
cwde
mov
cld
add
out
fwait
mov
adc
mov
mov
test
pop
loop
retf
mov
jb
sbb
gs
aas
push
pushf
xlat
ss
mov
dec
pop
mov
add
jg
hlt
mov
mov
xchg
fwait
mov
inc
scas
mov
jae
addr16
lock
mov
mov
adc
mov
gs
cmp
mov
jae
(bad)
jae
push
stos
mov
div
lahf
inc
clc
jecxz
pop
loopne
loop
pop
cmp
mov
jle
mov
int
or
int
mov
es
dec
inc
popa
(bad)
fistp
sbb
jg
cmp
call
and
sbb
rcr
mov
es
dec
mov
es
dec
inc
popa
(bad)
fistp
sbb
jg
cmp
call
and
cwde
cmp
call
and
sbb
loopne
dec
inc
aaa
sbb
and
sbb
mov
dec
mov
and
sbb
popa
(bad)
fistp
sbb
jg
cmp
call
and
cwde
cmp
call
and
sbb
clc
call
loope
fistp
sbb
popa
(bad)
fistp
sbb
pop
int
adc
cs
or
xchg
popa
adc
cs
or
adc
inc
aaa
push
into
mov
and
call
pusha
sbb
and
fdivr
neg
ficomp
cwde
cmp
call
and
sbb
loopne
dec
inc
ja
pop
pop
popa
outs
ficom
pop
pop
test
popa
pop
call
xchg
dec
and
fdivr
not
pop
push
imul
stos
pushf
in
mov
sbb
and
inc
mov
sbb
call
mov
jae
mov
jle
lods
sbb
sbb
push
push
stos
out
dec
loop
call
push
push
pop
and
clc
pop
je
dec
jp
mov
mov
push
test
pop
mov
mov
cs
lods
adc
add
test
mov
movs
outs
xor
or
inc
cwde
lods
popf
stos
cdq
lods
bound
push
xchg
cmp
mov
cmps
xchg
ja
dec
dec
outs
stos
mov
dec
pop
inc
jnp
jbe
nop
push
inc
cmp
stos
outs
mov
pop
popf
sahf
mov
dec
lods
call
push
xor
push
inc
mov
push
(bad)
pop
xor
pop
cmp
pusha
push
je
sahf
mov
out
adc
push
adc
push
scas
sti
lahf
pop
or
test
out
or
push
pop
xor
or
aas
push
loop
addr16
into
mov
or
mov
gs
sbb
push
push
mov
inc
inc
cmp
push
jno
stos
std
and
or
mov
sahf
sub
cld
test
fs
std
fs
cld
outs
add
std
fs
cld
std
or
out
cmp
fs
std
fs
jmp
mov
xchg
fs
lahf
popa
gs
leave
fs
std
fs
cld
std
xor
mov
ds
add
std
fs
std
fs
std
(bad)
popa
je
sub
stos
in
or
mov
add
mov
add
std
fs
cld
std
or
repz
std
fs
jge
sub
fs
std
fs
cld
std
or
(bad)
std
fs
std
lods
or
(bad)
add
mov
add
std
fs
std
add
test
fs
cld
std
int3
pop
fwait
(bad)
ds
mov
mov
add
mov
cmp
cld
mov
fs
jge
sub
or
add
mov
jns
std
and
(bad)
jge
or
test
(bad)
mov
add
std
fs
std
or
add
mov
or
xchg
xor
xchg
cmc
add
mov
add
std
fs
cld
std
and
scas
jl
popa
mov
mov
in
add
std
fs
cld
std
fs
cmps
(bad)
in
and
sahf
sub
pushf
stos
add
mov
add
dec
add
xchg
fs
std
fs
cld
std
fs
mov
es
out
cmp
bound
cld
fs
std
fs
cld
std
cmp
jo
add
cmc
fs
std
fs
std
or
xchg
fidiv
xor
ja
adc
mov
fwait
and
pop
int3
dec
xor
add
cmc
fs
std
or
add
mov
add
std
fs
std
test
xor
sahf
cmc
add
mov
or
sub
mov
add
mov
add
std
fs
jl
add
and
std
fs
mov
(bad)
xor
stos
(bad)
sub
stos
mov
add
mov
dec
cld
std
xor
dec
cld
fs
std
fs
cld
std
sub
es
fs
std
fs
(bad)
(bad)
in
add
std
fs
cld
std
fs
mov
mov
add
shl
std
cmp
ja
sub
out
add
std
fs
std
fs
jge
sub
fs
cld
std
test
jge
add
nop
xchg
in
add
std
fisubr
cmp
fs
std
fs
std
fs
std
and
std
xchg
fs
std
fs
cld
std
lods
dec
test
es
and
xor
fs
inc
mov
lock
aam
add
add
or
add
dec
ja
xchg
mov
dec
bound
push
push
fs
in
add
std
fs
cld
std
fs
data16
in
and
sahf
sub
in
sub
add
cmc
fs
std
fs
std
add
fs
cld
std
sbb
fs
std
or
add
mov
or
xchg
fidiv
xor
mov
push
add
sub
and
sub
mov
cmps
cmp
in
inc
mov
scas
and
adc
daa
mov
rol
aad
movs
dec
cmps
ins
mov
js
mov
out
(bad)
sbb
or
movs
and
adc
loop
and
call
or
push
inc
aam
xor
mov
inc
mov
mov
lock
icebp
inc
pop
jp
or
inc
jb
in
dec
sahf
xchg
cmp
scas
daa
inc
pop
sub
ja
stos
cmc
bound
mov
and
popf
pop
scas
movs
cmp
pop
jg
and
test
add
data16
lahf
push
jl
add
in
sbb
cmp
mov
popf
jmp
nop
mov
xor
cmps
mov
sbb
test
cmps
or
sbb
leave
dec
jb
(bad)
inc
jg
sahf
in
jb
mov
push
(bad)
loope
arpl
push
popf
out
lods
imul
inc
mov
into
lods
retf
syscall
fdiv
imul
sbb
repz
push
pop
out
aas
dec
pushf
lahf
xor
dec
icebp
inc
in
test
push
icebp
jecxz
lods
inc
mov
mov
push
js
xor
jne
add
ja
outs
jbe
cmc
dec
jp
in
sti
mov
mov
mov
out
mov
or
dec
hlt
lods
stc
sti
call
mov
fs
mov
inc
loop
add
inc
data16
hlt
push
stos
sahf
inc
outs
xchg
lds
das
arpl
xor
mov
in
push
push
out
ja
xor
dec
pushf
(bad)
jmp
mov
add
div
cmc
xchg
mov
loop
pop
in
jge
(bad)
(bad)
add
popf
cmp
push
mov
fstp
test
popf
mov
xchg
push
stc
in
mov
shr
push
sbb
inc
pushf
mov
add
pushf
mov
add
pushf
movs
out
pushf
mov
add
shl
addr16
into
jmp
pushf
mov
add
pushf
mov
add
(bad)
in
dec
pushf
mov
add
les
addr16
into
out
pushf
out
sbb
dec
retf
call
mov
cmp
mov
test
pushf
mov
add
push
icebp
in
jnp
mov
nop
pushf
dec
add
mov
(bad)
dec
ror
sub
scas
pushf
push
add
pushf
in
add
mov
add
les
addr16
mov
dec
push
sbb
scas
pop
pushf
mov
add
shl
fs
xchg
shr
out
pop
pushf
mov
add
pushf
pmulhw
push
into
scas
pushf
push
add
into
call
aas
or
(bad)
dec
push
div
jo
adc
mov
pop
push
mov
add
sbb
scas
pop
pushf
mov
add
pushf
mov
add
(bad)
sbb
push
inc
out
ja
jb
push
mov
in
push
sbb
fild
pushf
mov
add
xchg
push
out
jl
(bad)
push
cmp
add
dec
fiadd
dec
pushf
mov
add
shl
xchg
loop
pushf
mov
add
push
xor
adc
in
retf
mov
dec
mov
lods
push
jb
mov
push
shl
pop
shr
jmp
ret
rcr
ins
pop
lock
(bad)
sar
sub
pop
or
int
call
sub
add
stos
pushf
test
mov
sbb
fisttp
inc
mov
sbb
inc
jb
push
push
push
stos
out
push
addr16
inc
push
cmp
push
stos
stc
jmp
pop
mov
dec
inc
mov
jb
pop
xchg
stos
cmp
gs
pop
and
loopne
je
mov
sbb
in
fwait
or
cmc
pop
cwde
push
popf
out
scas
add
ins
ret
ss
or
mov
dec
cmp
jnp
cmps
push
jno
pop
dec
outs
and
push
ja
sbb
cmp
inc
cld
inc
adc
daa
out
inc
xor
pop
mov
push
cmc
add
test
das
mov
jecxz
out
cmc
dec
idiv
adc
fisttp
inc
cld
lods
out
cdq
and
out
scas
mov
test
dec
lods
jno
and
aas
in
pop
push
icebp
rep
lods
ret
mov
mov
addr16
pushf
outs
xor
cmp
dec
cli
or
add
inc
pop
push
pusha
inc
push
mov
push
xlat
cmp
je
xchg
push
ins
out
out
inc
adc
or
cmps
iret
pop
(bad)
out
push
mov
adc
push
popf
sti
jle
jnp
xchg
mov
jb
daa
push
in
in
loop
pop
push
mov
lahf
inc
clc
dec
rcl
stos
inc
jle
pop
leave
push
jbe
inc
stc
xlat
shr
mov
cdq
push
jl
fwait
shr
mov
cmp
gs
xlat
shr
mov
sbb
fs
shr
call
xchg
sub
fnstenv
mov
mov
loopne
gs
fwait
shr
mov
push
shl
mov
cdq
shr
neg
shl
fwait
shr
mov
cdq
shr
test
test
mov
shl
shr
neg
sbb
je
shr
call
shr
neg
xor
push
mov
mov
cdq
sub
cdq
test
adc
gs
cdq
mov
fs
(bad)
cdq
cmp
pushf
test
jecxz
shr
neg
pop
jp
dec
sbb
gs
cdq
fsubr
dec
dec
jl
xlat
cmp
mov
(bad)
sub
mov
(bad)
test
adc
gs
fwait
shr
mov
cdq
shr
not
mov
mov
cdq
shr
neg
push
mov
mov
cdq
xchg
sub
sbb
fs
shr
call
shr
neg
popf
mov
mov
cdq
shr
neg
test
adc
gs
cdq
shr
neg
sbb
mov
jecxz
inc
sbb
retf
leave
repnz
in
int3
loope
icebp
sbb
aad
cmps
mov
sti
shr
mov
cdq
xchg
neg
shl
sub
shr
neg
shr
aam
fsub
jl
push
jl
fwait
shr
mov
xlat
shl
cdq
shr
neg
test
adc
xchg
jmp
xlat
mov
mov
popf
inc
mov
rcl
gs
cdq
shr
neg
mov
sub
xlat
shr
mov
shr
neg
popa
bound
add
ins
adc
mov
mov
adc
lds
shr
neg
shr
lahf
cdq
shr
neg
rol
hlt
fwait
shr
stos
cdq
shr
neg
shl
fwait
shr
mov
cdq
rol
(bad)
shr
fwait
cdq
sub
xchg
(bad)
shr
mov
cdq
movs
sub
mov
sub
cdq
jecxz
idiv
shr
neg
rol
jmp
neg
rol
neg
fisubr
test
shr
xchg
cdq
shr
neg
test
adc
fs
test
call
shr
neg
xchg
sbb
dec
sub
ds
ror
imul
mov
shr
neg
popf
jle
rcl
gs
cdq
shr
neg
pushf
mov
call
shl
cdq
mov
neg
shl
fwait
shr
mov
cdq
fcomp
lods
jnp
test
cdq
shr
neg
dec
(bad)
ficom
bound
fcomp
lods
fild
mov
mov
int3
in
icebp
cmc
cs
and
(bad)
cmp
adc
dec
loopne
mov
and
and
jmp
mov
into
shr
call
sbb
je
jmp
call
push
jl
fwait
shr
mov
jmp
jl
jmp
jecxz
sub
into
dec
imul
stc
cmp
(bad)
ins
std
ret
mov
push
sub
xchg
cdq
shr
neg
xor
lahf
rcr
neg
ret
sub
cdq
and
xchg
(bad)
shr
mov
cdq
addr16
ins
inc
mov
add
xor
sbb
dec
into
shr
call
shl
shr
mov
cdq
xchg
sub
test
adc
mov
shl
cdq
shr
neg
mov
xchg
in
xchg
out
mov
jns
fs
pop
gs
adc
jno
fldenv
ret
pop
aam
(bad)
or
mul
das
call
loop
sub
mov
jmp
sub
sbb
jge
xchg
push
inc
mov
sbb
inc
and
mov
dec
fwait
inc
jp
or
stos
arpl
in
out
popf
loop
scas
jbe
mov
inc
jne
shr
call
add
lahf
adc
mov
cwde
xchg
je
jle
hlt
mov
aaa
loopne
cmps
xchg
inc
mov
mov
inc
mov
bound
dec
ss
sbb
inc
ins
daa
push
in
jno
or
cli
pushf
(bad)
xor
js
push
cmps
lahf
mov
es
mov
dec
or
push
inc
int3
iret
mov
shl
ror
jno
icebp
inc
in
lods
out
call
xor
outs
dec
and
fwait
js
inc
mov
sti
jae
inc
mov
add
inc
add
jecxz
jb
repnz
in
sti
out
mov
test
pop
out
mov
mov
outs
xor
arpl
out
mov
test
mov
mov
(bad)
or
mov
out
mov
or
fild
inc
mov
cs
mov
in
repnz
out
xchg
inc
pop
xor
push
push
stos
ror
mov
aad
leave
outs
fwait
push
xchg
inc
fisub
cdq
push
xchg
inc
xchg
retf
inc
sbb
sbb
outs
fwait
push
xchg
fwait
inc
xchg
inc
test
xchg
cmp
outs
aad
xchg
inc
xchg
fwait
ret
cmc
rcl
and
(bad)
fdiv
ins
cld
mov
stc
retf
fwait
jbe
outs
fwait
inc
xchg
sbb
int
loopne
mov
pop
sbb
mov
aam
xchg
inc
xchg
inc
xchg
fwait
inc
in
outs
les
outs
fwait
inc
xchg
ret
ror
xor
and
dec
int3
inc
les
addr16
and
xor
sub
and
xor
cmp
and
xor
dec
aad
inc
mov
jae
pop
in
xor
and
arpl
jl
outs
les
outs
fwait
inc
xchg
fwait
inc
xchg
ror
fwait
push
xchg
fwait
inc
fwait
out
adc
inc
xchg
inc
xchg
inc
ret
out
stc
add
outs
fwait
inc
xchg
inc
pop
icebp
fstp
mov
sbb
xchg
inc
xchg
fwait
inc
cdq
in
add
and
out
add
inc
xchg
inc
xchg
fwait
inc
fwait
out
adc
inc
xchg
inc
xchg
fwait
inc
cdq
mov
or
repz
mov
outs
sti
inc
sub
inc
xchg
inc
xchg
fwait
inc
xchg
sar
fwait
push
xchg
fwait
inc
fwait
out
add
inc
xchg
fwait
inc
xchg
inc
xchg
inc
xchg
fwait
inc
cdq
mov
add
outs
fwait
inc
xchg
jne
fwait
out
and
outs
lahf
inc
xchg
inc
xchg
fwait
inc
xchg
test
or
aas
inc
sbb
or
leave
add
push
outs
fwait
jb
inc
fwait
inc
xchg
inc
call
mov
cdq
push
xchg
inc
out
outs
xor
xchg
fwait
inc
xchg
rol
fwait
inc
xchg
inc
aas
lods
(bad)
cmp
(bad)
fnstsw
aad
fldcw
(bad)
pop
aam
or
push
xor
jne
fild
inc
xor
(bad)
cmp
bnd
add
mov
push
or
data16
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jnp
push
mov
push
(bad)
jecxz
(bad)
adc
xlat
jecxz
(bad)
jecxz
(bad)
cmp
inc
cmp
push
in
(bad)
adc
popa
retf
data16
and
scas
cli
iret
cmp
ror
push
stos
hlt
ss
popf
popf
loop
lods
ss
int3
addr16
cmps
sbb
cmc
xchg
aad
test
cmp
jae
imul
dec
jae
out
jmp
mov
cmp
and
lods
bound
scas
in
sub
mov
imul
mov
pop
sub
lods
xchg
ins
cmc
mov
mov
pop
dec
daa
xchg
adc
mov
cmps
fwait
pop
push
in
pop
inc
mov
das
inc
lahf
pop
jge
push
inc
mov
pop
popf
cmp
sub
inc
sbb
sub
mov
xchg
jp
lods
xor
push
add
cmp
jno
mov
adc
ss
mov
xor
cmp
(bad)
mov
clc
pop
xor
repnz
jae
dec
dec
inc
stos
cli
mov
popf
dec
mov
jne
sbb
xchg
out
mov
inc
or
jnp
inc
aam
loop
ins
fcmovbe
mov
in
mov
inc
cmp
lods
loop
or
scas
xchg
xchg
inc
push
xchg
(bad)
iret
or
dec
addr16
in
jne
test
mov
imul
test
pushf
push
in
ja
mov
rcl
inc
fstp
retf
int3
mov
xchg
xchg
pop
or
sbb
adc
xor
inc
pop
rcr
adc
xor
aas
jge
push
and
int
push
nop
add
pop
rol
push
in
test
xlat
cdq
lods
paddsw
test
icebp
inc
bound
pop
push
stos
sti
mov
popf
loop
scas
bound
sbb
and
(bad)
xchg
popf
inc
cmc
fwait
out
les
jmp
repnz
je
jbe
lahf
mov
mov
add
repz
push
out
aaa
inc
fisubr
inc
xchg
pop
jo
push
stos
mov
xchg
mov
je
xchg
inc
call
inc
xchg
jbe
pop
push
out
add
jne
scas
pop
inc
push
add
dec
(bad)
or
inc
push
pop
pop
mov
loop
or
mov
jbe
rol
jle
mov
div
ja
mov
out
xchg
mov
xor
mov
mov
push
push
mov
cdq
ja
mov
cld
lods
xchg
es
movs
jb
imul
mov
retf
je
dec
dec
bound
push
int
or
push
in
cmp
scas
mov
bnd
idiv
gs
out
xchg
mov
daa
push
test
imul
lods
call
mov
out
loop
or
dec
push
inc
adc
mov
pop
add
scas
out
dec
movs
mul
lds
and
inc
and
daa
mov
mov
sbb
pop
aad
pop
pop
aad
iret
add
outs
aas
mov
push
cmp
pop
aad
inc
mov
cmp
pop
aad
cmp
ins
push
in
pop
(bad)
push
cmp
pop
aad
push
jo
fisub
iret
cld
cmp
pop
aad
cmp
pop
mov
add
push
fistp
pop
aad
cmp
pop
push
into
dec
lods
out
jge
xor
aad
aas
outs
aad
cmp
pop
aad
adc
aad
xor
push
mov
std
jle
adc
jp
hlt
jb
push
add
pop
jb
pop
(bad)
ffree
in
jne
fnsave
pop
movlps
mov
jb
sbb
or
clc
jecxz
mov
jnp
pop
xchg
or
adc
data16
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
or
mov
addr16
movs
mov
repz
cwde
(bad)
rol
div
popf
inc
in
jmp
lss
mov
push
popf
repnz
lods
inc
sbb
shl
stos
cld
push
lock
jp
stos
inc
push
inc
icebp
pop
(bad)
lods
pushf
inc
fnstcw
mov
mov
mov
popf
dec
rep
sbb
inc
and
jne
out
mov
imul
iret
mov
mov
add
push
outs
jno
jg
addr16
jno
imul
mov
adc
(bad)
adc
mov
push
in
lahf
or
(bad)
call
mov
dec
pop
mov
add
push
mov
jmp
and
jnp
jl
add
jp
(bad)
cmp
add
inc
int3
or
test
push
inc
iret
mov
fs
cmc
cmps
jmp
adc
mov
ret
pop
jmp
dec
xchg
outs
popa
ja
mov
jno
xchg
js
add
dec
imul
mov
cmp
inc
and
or
jb
mov
cli
gs
(bad)
pop
inc
push
dec
jbe
(bad)
jp
xchg
mov
lods
or
pusha
movs
(bad)
adc
(bad)
adc
pusha
popf
(bad)
popa
pusha
lds
dec
pusha
xchg
(bad)
pop
pusha
mov
fistp
mov
xchg
jne
mov
popf
pusha
sbb
fsub
cs
mov
adc
xchg
rcl
rcr
inc
cwde
adc
mov
pop
retf
les
jge
mov
or
enter
or
adc
mov
adc
lahf
rcl
mov
or
jb
adc
cwde
xor
scas
mov
or
in
adc
mov
adc
lahf
rol
stos
lea
(bad)
pop
icebp
xchg
pop
ins
xchg
inc
popa
or
fdivr
adc
mov
and
or
or
(bad)
adc
mov
adc
mov
in
xor
stos
sbb
shl
adc
rcl
mov
inc
inc
jno
adc
xchg
ret
mov
adc
mov
pop
jp
pop
adc
(bad)
adc
jp
outs
adc
mov
inc
sti
les
adc
mov
pop
das
(bad)
and
rol
sbb
popa
test
mov
jns
ret
mov
dec
out
inc
imul
das
mov
gs
(bad)
lea
das
fcmovnb
adc
mov
pop
(bad)
les
lock
adc
mov
dec
jg
scas
xchg
or
adc
lahf
shr
adc
xchg
rcl
mov
sbb
popa
test
(bad)
adc
lahf
rcl
mov
push
ja
pusha
or
jae
cmp
xlat
rcl
mov
xchg
ja
ret
mov
adc
mov
lds
cmps
pop
fsubr
and
xchg
adc
rol
xchg
pop
in
out
pusha
cmc
rcl
mov
je
(bad)
mov
mov
mov
das
mov
inc
das
mov
adc
mov
adc
adc
fcmovnb
adc
mov
adc
ret
adc
jmp
or
sub
rcl
mov
xchg
sub
mov
and
lds
jge
mov
pop
pushf
sahf
bound
das
mov
adc
mov
jge
mov
or
enter
or
adc
mov
adc
rcl
mov
xor
popa
mov
adc
mov
adc
mov
jle
cwde
lea
mov
pusha
pop
scas
pop
shl
adc
mov
adc
ret
mov
adc
mov
push
push
nop
lea
mov
pusha
jge
pop
shl
adc
rcl
mov
adc
ret
mov
gs
(bad)
pop
pop
sub
mov
cmc
mov
pop
and
mov
das
mov
imul
ror
pop
pusha
xchg
xchg
adc
rcl
mov
push
jnp
push
js
sbb
ja
ret
mov
inc
outs
mov
mov
clc
xchg
adc
rcl
mov
push
das
(bad)
xchg
adc
rcl
repz
mov
fdiv
inc
cwde
add
jnp
stos
adc
mov
push
jg
mov
pop
mov
sub
adc
(bad)
mov
adc
mov
pop
xchg
into
adc
rcl
mov
shl
pop
adc
(bad)
adc
sti
rcl
mov
or
mov
add
jnp
stos
adc
(bad)
xchg
push
jg
mov
pop
in
test
xchg
popa
xchg
rcl
mov
leave
jl
xchg
das
mov
mov
pusha
xchg
rcl
mov
inc
das
inc
xchg
adc
(bad)
adc
lahf
rcl
mov
dec
jbe
xor
in
arpl
arpl
pusha
add
(bad)
retf
jne
gs
pusha
sbb
add
test
mov
fnstcw
inc
mov
sbb
lods
or
nop
mov
xor
(bad)
push
cwde
test
fcmovnbe
(bad)
icebp
test
in
push
jmp
jb
aam
outs
lock
inc
mov
dec
rcl
(bad)
scas
sbb
mov
xchg
jnp
push
inc
test
fs
js
sub
(bad)
lods
sbb
movs
lss
mov
push
popf
repz
adc
cli
pop
scas
and
mov
repnz
mov
cwde
lods
fwait
inc
sbb
dec
push
loope
cmp
push
popf
adc
mov
jmp
clc
jge
mov
jne
imul
mov
leave
dec
jle
mov
jle
je
ret
gs
sahf
repz
mov
push
push
xchg
mov
push
mov
push
mov
loop
cmp
mov
ja
cmp
push
loop
xor
lahf
sahf
je
add
push
test
fisubr
repz
push
push
pop
mov
(bad)
mov
inc
xchg
call
jmp
cmp
or
jge
rol
add
loop
mov
cmp
cmps
ins
push
fwait
out
addr16
repnz
cmps
jo
dec
and
popf
inc
and
xchg
sbb
adc
test
stos
cld
fimul
cmp
fisub
cmp
fisub
cmp
fisub
cmp
or
outs
xor
mov
fld
lods
or
repnz
das
mov
fistp
mov
ja
nop
out
ja
nop
out
ja
nop
outs
and
mov
mov
popa
outs
xor
ja
nop
out
ja
nop
outs
out
xor
cmp
loop
fisttp
ja
nop
out
ja
cmp
out
cld
jp
aas
int3
fiadd
out
xor
cmp
loop
fisttp
ja
cmp
out
std
ja
xchg
std
jbe
xchg
stos
jbe
lds
and
scas
jbe
cdq
mov
mov
mov
mov
ja
nop
out
ja
(bad)
ins
out
xor
cmp
jecxz
fucomip
ja
nop
out
ja
nop
outs
out
xor
cmp
loop
fisttp
ja
cmp
out
cld
jp
cmp
jl
mov
cmp
nop
out
ja
nop
outs
(bad)
std
loop
xchg
stos
jbe
(bad)
and
mov
ret
ja
nop
out
ja
nop
out
ja
push
outs
aas
mov
mov
ja
nop
out
(bad)
loop
out
fidiv
cs
fisub
ja
nop
out
ja
jl
ds
ficomp
sub
add
pop
mov
and
mov
mov
ja
nop
out
aaa
push
(bad)
push
fbstp
push
fisttp
cmp
out
aam
fistp
push
fbstp
(bad)
in
sbb
cli
and
stos
leave
hlt
vpsrld
and
nop
out
ja
jl
ds
ficomp
sub
add
pop
mov
and
mov
mov
mov
fsubr
cmp
nop
out
ja
nop
out
fcmovnu
push
lods
cwde
add
out
cmp
xor
outs
xor
ja
nop
out
ja
nop
out
ja
cmp
jmp
mov
xchg
ja
nop
out
ja
nop
out
(bad)
push
lods
xchg
stos
jbe
lds
mov
adc
mov
mov
ja
shr
ins
ffreep
iret
jl
scas
cmp
dec
sti
cs
and
jne
nop
mov
ja
shr
lods
leave
aam
jl
and
add
fidivr
mov
ja
nop
out
ja
nop
out
ja
leave
in
cmp
fadd
cmp
fbstp
sub
imul
cmp
and
add
bound
xor
fiadd
jmp
ror
lods
xor
sub
inc
mov
or
or
push
in
sbb
sbb
in
lahf
rcl
mov
jmp
mov
mov
sbb
pop
inc
mov
arpl
sub
inc
popf
mov
sbb
adc
arpl
push
fbstp
mul
cld
jno
mov
cmc
inc
jmp
and
sbb
jb
cmp
lods
popf
stos
call
cmps
jecxz
pop
xchg
xchg
inc
mov
les
(bad)
adc
cmc
inc
mov
mov
jno
push
lea
cmp
sbb
mov
icebp
mov
xor
mov
push
in
or
pushf
push
mov
lods
push
(bad)
jp
push
add
test
xor
call
outs
pop
in
imul
sub
add
inc
mov
push
lahf
jno
inc
dec
arpl
in
add
mov
or
jnp
aaa
mov
repnz
fs
and
mov
(bad)
gs
nop
out
out
cmp
pop
mov
imul
inc
xor
dec
sti
iretw
inc
mov
ss
push
shr
cs
arpl
loop
aaa
push
(bad)
mov
hlt
test
loop
inc
cs
mov
adc
or
movs
add
or
movs
add
or
movs
add
or
movs
add
or
movs
add
or
movs
add
or
movs
add
or
movs
add
mov
cwde
add
or
lods
cmp
sub
test
movs
movs
test
movs
xchg
add
sbb
push
or
adc
push
movs
inc
or
cmp
add
or
movs
add
sub
or
movs
inc
or
cmp
add
nop
add
inc
push
jmp
aas
push
jmp
push
iret
jmp
pop
mov
add
inc
push
jmp
inc
push
jmp
push
arpl
inc
or
test
movs
cmp
sub
inc
sbb
dec
adc
or
rol
and
mov
ret
fld
inc
push
iret
dec
inc
push
jmp
inc
push
jmp
or
sbb
movs
and
out
xchg
cmp
add
inc
push
jmp
fs
imul
mov
dec
sbb
sub
add
dec
inc
push
cmps
dec
inc
push
jmp
push
push
jmp
inc
shr
add
push
mov
xorps
dec
mov
dec
inc
push
jmp
cmp
mov
inc
pop
sub
push
test
inc
sbb
dec
sub
xchg
mov
xor
xor
and
inc
(bad)
inc
push
mov
dec
mov
push
inc
push
out
dec
inc
push
jmp
sub
or
adc
xchg
dec
(bad)
fadd
cdq
dec
inc
push
jmp
outs
push
imul
test
inc
push
cmps
dec
inc
push
jmp
sbb
add
sbb
adc
ret
add
dec
inc
push
cmps
dec
inc
push
jmp
and
jmp
or
ins
inc
sbb
dec
inc
push
jmp
inc
push
jmp
push
push
jmp
ins
xlat
sbb
retf
or
sbb
push
inc
pop
aad
inc
push
or
jmp
leave
sbb
sbb
movs
and
movs
add
inc
rcr
inc
push
mov
push
(bad)
push
dec
inc
push
cmps
dec
inc
push
jmp
or
cmps
dec
or
add
mov
cmps
dec
or
scas
or
and
lods
push
in
cmp
add
dec
inc
push
cmps
dec
sbb
mov
jmp
inc
push
mov
and
dec
leave
sbb
mov
test
mov
and
add
push
mov
daa
(bad)
push
dec
inc
push
cmps
dec
or
movs
add
pop
mov
stc
or
dec
push
jmp
(bad)
add
push
mov
and
dec
leave
sbb
mov
test
mov
and
add
push
mov
cmps
(bad)
push
dec
inc
push
cmps
dec
inc
push
jmp
or
movs
add
pop
mov
stc
or
dec
push
jmp
pop
xchg
imul
sbb
dec
leave
sbb
mov
test
mov
and
add
push
mov
dec
pop
push
jmp
mov
push
inc
push
ret
dec
inc
push
jmp
inc
push
jmp
or
and
add
rdtsc
sbb
or
addr16
inc
push
jmp
or
cmps
jne
jmp
in
adc
add
jmp
inc
push
cmps
dec
inc
push
jmp
push
mov
inc
mov
push
test
mov
adc
mov
ins
shr
icebp
fild
push
xor
inc
push
jmp
push
push
jmp
sub
jmp
push
xchg
dec
inc
push
jmp
inc
push
jmp
push
pop
imul
push
rol
test
test
mov
add
inc
push
jmp
ins
push
jmp
test
test
adc
mov
jno
sbb
test
lahf
into
mov
inc
sbb
dec
inc
push
cmps
dec
push
mov
jns
(bad)
sbb
dec
jg
jmp
mov
jmp
into
jno
adc
cmp
sbb
dec
or
stos
outs
add
mov
inc
sbb
dec
sub
imul
push
cmps
dec
outs
aaa
imul
push
cmps
dec
outs
aaa
jmp
(bad)
(bad)
dec
inc
push
cmps
dec
inc
push
jmp
inc
sub
inc
push
mov
push
jmp
adc
dec
(bad)
cmp
dec
inc
push
mov
dec
inc
sub
inc
push
or
imul
sbb
or
adc
push
or
mov
add
sbb
dec
inc
push
jmp
sbb
sbb
mov
cmps
dec
inc
push
jmp
or
jmp
push
cmps
dec
inc
push
jmp
add
sbb
sbb
dec
inc
push
jmp
test
icebp
mov
push
mov
sub
repz
add
push
mov
inc
push
jmp
daa
push
jmp
pop
dec
imul
inc
push
jmp
inc
push
jmp
adc
sub
mov
lahf
inc
pop
jmp
dec
add
and
mov
dec
inc
push
jmp
or
test
add
cmc
pop
add
pop
mov
add
or
cmps
dec
push
push
jmp
adc
imul
push
jmp
inc
push
jmp
xor
push
lds
cmp
push
mov
sbb
push
or
mov
dec
or
scas
or
and
push
inc
rcr
inc
push
mov
dec
outs
push
imul
push
dec
inc
push
cmps
dec
inc
push
jmp
or
movs
add
xchg
dec
(bad)
fadd
cdq
dec
inc
push
jmp
pop
push
jmp
mov
imul
inc
push
jmp
inc
push
jmp
sub
push
xchg
add
out
xor
inc
sbb
dec
inc
push
jmp
inc
push
jmp
or
daa
inc
sbb
dec
inc
push
cmps
dec
inc
push
jmp
jg
push
mov
adc
ret
dec
inc
push
jmp
pop
push
jmp
xor
jmp
nop
inc
push
(bad)
dec
pop
push
imul
jne
adc
xor
inc
push
cmps
dec
sub
jecxz
sbb
add
inc
push
jmp
inc
push
jmp
mov
mov
push
mov
pop
push
jmp
push
pop
jmp
push
mov
or
scas
or
and
lods
push
in
cmp
add
dec
inc
push
cmps
dec
inc
push
jmp
pop
push
jmp
(bad)
add
push
mov
sub
add
sbb
adc
xchg
dec
(bad)
fadd
cdq
dec
inc
push
jmp
outs
push
imul
push
dec
inc
push
cmps
dec
ds
jmp
push
iret
jmp
repz
add
push
mov
or
outs
inc
sbb
dec
inc
push
cmps
dec
inc
push
jmp
push
xlat
push
or
mov
dec
inc
push
jmp
inc
push
jmp
adc
jmp
or
mov
mov
adc
ret
dec
inc
push
jmp
inc
push
jmp
dec
pop
jmp
push
add
dec
inc
push
cmps
dec
outs
aaa
imul
(bad)
dec
inc
push
cmps
dec
inc
push
jmp
or
call
pop
xchg
cs
jns
push
lock
sbb
dec
inc
push
jmp
inc
push
jmp
xchg
mov
or
ds
push
iret
stc
adc
sbb
daa
inc
sbb
dec
inc
push
cmps
dec
inc
push
jmp
sbb
retf
stos
addr16
mov
inc
push
mov
ds
jmp
push
iret
jmp
repz
add
push
mov
or
outs
inc
sbb
dec
inc
push
cmps
dec
push
xlat
push
or
mov
dec
inc
push
jmp
adc
jmp
or
mov
mov
adc
ret
dec
inc
push
jmp
dec
pop
jmp
push
add
dec
inc
push
cmps
dec
outs
aaa
imul
(bad)
dec
inc
push
cmps
dec
inc
push
jmp
or
sbb
jmp
xor
std
mov
dec
inc
push
jmp
ja
imul
call
xchg
add
cmp
dec
inc
push
jmp
sbb
retf
stos
addr16
mov
inc
push
mov
inc
push
jmp
sbb
jmp
lock
cmp
push
mov
or
cmps
adc
fnsave
movs
push
ret
mov
mov
xchg
mov
fsubr
and
sbb
push
in
inc
lea
xchg
sbb
in
lahf
pop
push
and
test
inc
bound
push
stos
icebp
inc
ins
sbb
sbb
sbb
icebp
dec
ins
(bad)
cmps
std
jns
maskmovq
std
jno
mov
push
call
inc
mov
in
aas
out
cli
(bad)
out
jecxz
icebp
inc
in
lods
rcr
bound
inc
jl
jnp
mov
mov
or
in
mov
das
xor
out
(bad)
mov
pop
inc
mov
add
pop
ja
and
mov
push
inc
sub
push
je
cld
test
jg
test
repz
mov
pop
push
hlt
and
mov
repz
movs
leave
lods
pushf
iret
lea
xor
lods
fcomi
fwait
inc
jp
xchg
push
popf
mov
lahf
mov
jnp
loope
mov
call
(bad)
pop
out
xchg
out
repz
add
or
xchg
das
inc
je
pusha
inc
jo
sti
mov
fs
jb
iret
mov
cmc
dec
outs
mov
loop
das
push
mov
or
fwait
stos
rol
(bad)
pop
pop
icebp
ret
and
les
retf
push
jmp
out
cmc
aad
or
or
lea
dec
pop
shr
mov
je
mov
stos
mov
or
or
sub
ds
sub
ret
in
pop
jecxz
js
fsubr
jns
fcomp
outs
in
jp
mov
jne
aas
or
sub
jne
sub
inc
ins
stos
in
fadd
or
aad
push
cmp
adc
inc
mul
jb
aam
push
sub
add
ret
ins
imul
aas
out
jne
aas
or
sub
sub
sub
pop
adc
push
inc
or
aam
push
mov
int
jne
sbb
jne
sub
jne
sub
dec
lea
push
sti
aam
inc
cmp
out
push
xlat
jo
mov
int
jne
sbb
jne
sub
or
aad
push
cmp
adc
inc
mul
jb
aam
push
cmp
fnstcw
ret
ins
imul
aas
out
jne
aas
or
sub
sub
aaa
sub
xor
sub
dec
cmp
aaa
lods
inc
adc
int
neg
sbb
lea
jne
sub
dec
lea
push
sti
aam
inc
ins
push
jb
mul
mov
push
jnp
push
inc
cmp
out
pusha
aas
mov
xor
jne
or
sub
and
sub
je
out
jne
invd
jne
sub
cmp
push
cmc
(bad)
or
or
lea
pop
cmp
sub
xor
das
call
push
add
pop
jb
aam
cmp
gs
inc
arpl
cmp
out
pop
gs
sbb
inc
xchg
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
xor
stc
jge
fwait
pop
sbb
cdq
fldcw
mov
push
mov
clc
inc
push
inc
mov
sbb
sbb
inc
jp
mov
push
inc
repnz
dec
jecxz
mov
popf
loop
scas
cmp
fisttp
aad
push
sti
outs
sbb
mov
jne
stos
clc
push
inc
inc
mov
mov
mov
popf
inc
repnz
push
dec
fwait
or
sbb
mov
loope
xor
sbb
out
dec
pop
jge
daa
cmp
mov
imul
lods
test
je
add
dec
(bad)
mov
stos
out
retf
add
dec
(bad)
mov
arpl
sub
mov
addr16
push
loope
mov
cdq
pop
mov
bound
fistp
inc
mov
lods
adc
(bad)
jnp
mov
mov
or
call
mov
inc
out
mov
and
pop
mov
out
inc
adc
or
cmps
cmps
pop
cmp
movs
jnp
sbb
inc
push
or
outs
push
out
stos
bound
mov
mov
adc
mov
in
fwait
mov
loopne
outs
adc
scas
(bad)
push
popa
mov
aas
inc
neg
cld
adc
stos
pop
cld
es
pop
add
add
lea
xor
mov
xor
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
in
lea
jle
ret
es
xor
mov
jae
push
pop
daa
and
and
pop
xor
rcl
ret
in
ret
mov
lea
jle
ret
in
ret
xchg
ret
cmp
cmp
mov
std
jecxz
lea
ret
in
ret
hlt
ret
mov
shl
in
ret
mov
mov
hlt
lea
int
and
jle
ret
aad
xor
mov
cmp
out
repz
loopne
sub
in
ret
in
ret
scas
ret
scas
retf
fiadd
fdiv
lea
jg
ret
in
ret
inc
xor
jge
dec
xor
jno
sbb
xchg
sub
jle
popf
ret
out
retf
in
ret
in
ret
in
mov
mov
mov
imul
lea
lods
ret
and
xor
in
sar
add
xchg
das
xor
mov
lea
mov
jge
out
shr
fwait
pop
pushf
mov
jge
in
mov
nop
fwait
pop
nop
outs
stc
jl
in
ret
mov
pop
jno
clc
jo
fsubr
sub
jle
mov
mov
cmp
cmp
and
outs
jle
ret
test
(bad)
xor
in
jbe
in
fwait
sub
jle
stos
mov
cmp
cmp
and
jp
in
ret
in
inc
xor
daa
mov
xor
mov
loopne
daa
in
sar
in
ret
hlt
ret
and
xor
cli
jo
mov
in
ret
out
xor
mov
ret
aad
xor
and
fisttp
test
fisttp
push
fcomp
(bad)
cld
xor
fist
lea
in
ret
in
ret
mov
pop
jno
loop
xor
out
push
add
in
ret
call
fwait
pop
cwde
std
jo
or
xchg
sub
jle
in
ret
repz
arpl
push
sbb
xchg
sub
jle
(bad)
xor
(bad)
ret
xor
mov
fmul
icebp
nop
in
cmp
iret
in
ret
in
ret
lods
ret
and
xor
in
sar
rol
xchg
in
sub
jle
ret
ffree
xor
pop
xor
lea
xor
ret
ffree
xor
pop
xor
lea
(bad)
daa
inc
jo
sahf
pop
jge
or
xor
push
imul
or
xor
sub
in
mov
in
ret
lods
ret
mov
xor
or
jmp
xor
xchg
cld
or
mov
jge
(bad)
pop
jl
ret
jmp
xor
lods
cld
out
imul
arpl
add
cmp
call
jle
ret
and
jl
or
mov
mov
xor
test
push
cwde
mov
cmp
ja
or
lods
cld
out
imul
arpl
add
inc
(bad)
call
jl
ret
mov
xor
adc
add
arpl
add
cmp
call
jle
ret
call
nop
mov
in
or
aam
inc
lea
inc
jo
hlt
pop
jge
and
es
and
int3
and
clc
jo
cmp
xchg
sub
jle
mov
mov
outs
push
add
in
ret
(bad)
ret
xor
xor
mov
cmp
and
mov
mov
sub
xor
xor
jg
and
xor
sbb
mov
xor
aam
out
push
add
in
ret
in
ret
lods
ret
and
daa
in
shr
in
ret
out
xchg
xor
imul
out
mov
imul
lea
xor
ret
add
or
in
ret
xchg
ret
mov
mov
ret
lea
(bad)
daa
inc
jo
aad
jge
and
imul
addr16
fiadd
out
or
out
rol
pop
(bad)
call
in
in
lea
jle
ret
fisub
cld
in
in
lea
in
ret
faddp
xor
fistp
in
lea
in
ret
in
ret
mov
mov
mov
int3
mov
pop
fadd
xor
fucomi
jmp
xor
ret
fidiv
jmp
and
daa
cli
jo
sbb
xchg
sub
jle
mov
(bad)
cld
jno
xchg
pop
cwde
mov
and
cwde
mov
cmp
ja
or
lods
cld
out
imul
arpl
add
cmp
push
jle
ret
add
mov
cli
jo
mov
in
ret
in
ret
in
xor
mov
mov
mov
in
or
pop
in
arpl
fld
mov
or
hlt
mov
dec
xor
mov
imul
fsubr
shl
jmp
jle
popa
add
test
mov
push
inc
mov
imul
jecxz
dec
xlat
lods
das
ins
or
mov
lahf
lods
and
lea
push
inc
sbb
cmc
inc
mov
jmp
stos
xor
jnp
ud0
adc
jmp
out
popf
loop
lods
adc
push
jno
std
(bad)
push
cli
scas
jmp
and
pop
out
mov
mov
dec
data16
sbb
inc
jo
xor
je
mov
push
push
in
outs
scas
pushf
aas
mov
dec
lods
jbe
addr16
jbe
je
mov
push
push
or
mul
mul
ins
dec
imul
pop
inc
mov
xor
stos
cdq
mov
xor
lea
dec
bound
mov
les
jnp
adc
pop
add
pop
pop
popf
push
xor
sbb
inc
mov
push
mov
pcmpeqb
bound
addr16
mov
mov
test
jae
pushf
jmp
mov
pop
ins
xor
aas
ficomp
inc
push
or
addr16
aad
fs
lock
inc
ret
xchg
out
push
push
mov
mov
mov
xor
cmp
xchg
sbb
pushf
inc
fs
sbb
cmps
cmp
jg
ja
gs
add
outs
rcl
ret
jmp
push
imul
mov
jmp
movs
inc
or
ds
or
push
xor
sbb
cmp
outs
jo
std
push
aad
cld
and
cli
movs
in
aam
cld
push
aad
cld
and
xchg
cld
and
xor
and
fwait
xor
out
fwait
jecxz
js
xor
dec
or
jp
cmp
cli
cld
outs
aad
cld
and
loope
out
dec
xor
sbb
jecxz
ins
addr16
sbb
cmp
outs
fwait
cli
cld
outs
aad
cld
mov
jl
mov
int3
js
adc
cli
cld
and
enter
and
jl
mov
pop
jp
dec
xlat
cli
cld
outs
aad
cld
and
jecxz
and
inc
mov
call
and
cwde
cld
mov
mov
cmps
mov
xchg
lahf
mov
imul
stos
dec
jmp
nop
repz
in
cdq
lock
pop
and
in
(bad)
jo
sub
int3
mov
add
dec
iret
adc
fist
call
(bad)
sbb
xchg
pop
imul
test
sbb
call
inc
push
inc
mov
pop
mov
push
add
or
sar
jb
imul
push
(bad)
sbb
inc
mov
mov
sub
push
in
push
sti
sbb
ret
mov
inc
in
popf
xchg
fwait
lods
pop
test
jnp
push
inc
cld
add
dec
sbb
mov
or
inc
mov
pop
mov
int
dec
adc
aaa
out
inc
xor
mov
cmp
push
fwait
mov
gs
out
pop
adc
or
mov
mov
mov
leave
dec
or
(bad)
pushf
jno
jmp
xor
inc
test
xor
lods
jecxz
push
mov
add
dec
and
mov
inc
add
push
or
fild
cld
aad
inc
js
or
jb
addr16
jnp
pushf
xchg
xor
ja
call
out
jg
sub
sub
mov
push
or
outs
push
cmc
mov
pop
inc
icebp
dec
(bad)
mov
repnz
daa
mov
adc
mov
idiv
sub
sti
sbb
repz
bound
shr
stos
hlt
(bad)
fs
mov
std
pop
mov
in
pop
mov
in
pop
mov
add
push
in
pop
cli
mov
mov
sbb
add
mov
mov
sbb
fstp
sbb
rcr
mov
sub
imul
cli
adc
or
push
clc
pop
in
push
in
xor
push
in
pop
out
cli
ins
(bad)
scas
adc
pop
pop
mov
adc
in
mov
and
xor
add
pop
and
jnp
mov
pop
and
das
sbb
adc
cmp
ret
push
(bad)
fcom
pop
(bad)
fcom
mov
scas
pop
mov
in
pop
call
pop
loop
in
mov
das
sbb
adc
cmp
ret
push
(bad)
fcom
pop
(bad)
fcom
mov
out
pop
cmc
push
in
pop
test
outs
jmp
add
loop
sbb
sbb
ror
or
or
inc
sbb
ret
and
fisttp
xor
push
mov
cmc
arpl
int
sbb
pop
hlt
push
ins
mov
sbb
or
push
clc
pop
mov
mov
jecxz
jmp
divps
sbb
aas
sbb
shr
bound
ins
in
ins
or
mov
pop
cmp
add
bound
mov
popf
fnstcw
adc
mov
aad
mov
test
push
(bad)
jecxz
(bad)
jecxz
mov
sti
ror
mov
jecxz
(bad)
jecxz
inc
(bad)
dec
xor
dec
sbb
push
mov
push
push
pslld
push
(bad)
jecxz
(bad)
dec
or
outs
mov
push
or
(bad)
jecxz
(bad)
push
xchg
mov
in
push
jb
jecxz
(bad)
jecxz
push
push
xor
push
mov
push
push
pslld
adc
(bad)
jecxz
mov
cdq
js
inc
add
push
test
loop
(bad)
jecxz
outs
push
fiadd
mov
push
setp
push
(bad)
jecxz
(bad)
mov
push
(bad)
jecxz
(bad)
jecxz
push
push
cmps
cmp
rcr
sbb
inc
xor
cmc
sub
lods
repz
inc
push
stos
dec
jo
inc
repnz
loope
test
loopne
sbb
sahf
pop
sbb
scas
or
in
(bad)
jmp
out
daa
push
pop
mov
push
dec
dec
lock
mov
popf
out
scas
inc
adc
jne
cwde
lods
icebp
jecxz
sbb
inc
jg
jbe
add
add
mov
push
mov
dec
push
mov
jno
pop
lods
sahf
shr
sbb
inc
jl
jle
repnz
mov
je
jecxz
jb
repnz
fs
sbb
jo
pop
jns
call
adc
sbb
fdiv
xchg
push
jo
sahf
mov
bound
mov
je
jo
in
in
add
out
out
mov
jne
push
xchg
mov
ss
mov
pop
mul
dec
ss
aam
out
jne
jg
jmp
push
ret
jmp
retf
and
mov
mov
loope
pop
shl
mov
fs
inc
rcr
inc
cs
push
adc
js
movs
dec
push
jnp
out
jnp
out
jnp
out
jnp
out
pop
and
mov
or
and
out
pop
and
mov
mov
movs
sbb
test
cdq
xor
je
and
out
jmp
jo
jnp
out
lods
sub
jp
adc
jnp
jmp
jmp
jae
jmp
inc
xor
and
ret
stos
imul
test
xor
xchg
sbb
stos
movs
cli
push
jg
out
aaa
jmp
sysexit
jmp
test
xor
stos
test
xor
and
lods
xor
scas
xor
test
xor
and
ret
stos
imul
test
jne
cmc
inc
cmp
stos
sysexit
jmp
inc
xor
jmp
test
xor
test
cmp
test
inc
xor
imul
aaa
jmp
sysexit
mov
cmc
inc
cmp
stos
sysexit
jmp
inc
xor
jmp
inc
xor
stos
test
xor
and
lods
retf
sub
jp
fistp
cmp
out
xor
mov
inc
aaa
jmp
aas
xor
jmp
dec
xor
jl
inc
scas
mov
sbb
jmp
out
aaa
jmp
sysexit
jmp
inc
xor
sbb
inc
scas
test
call
stos
das
xor
mov
jmp
and
ret
cmp
js
jmp
sysexit
test
clc
xchg
lahf
jmp
test
xor
xchg
ret
test
sysexit
jmp
inc
xor
and
ret
stos
imul
cmc
inc
gs
add
jmp
adc
mov
inc
movs
cli
ret
out
jnp
stos
sysexit
jmp
inc
xor
mov
clc
fld
xchg
test
test
xor
mov
inc
pushf
jmp
dec
xor
mov
movs
sbb
xor
pop
add
loop
jnp
xor
sysexit
mov
inc
pop
jmp
inc
xor
in
inc
(bad)
jmp
test
xor
in
inc
test
rcr
lods
jmp
(bad)
sbb
(bad)
or
jnp
retf
jmp
jae
jmp
inc
xor
jmp
and
fld
inc
inc
movs
cld
pop
jnp
jmp
imul
xor
movs
dec
inc
mov
xor
jnp
fild
movs
out
adc
stos
sysexit
jmp
inc
xor
push
fwait
popa
ins
imul
aad
adc
mov
stc
push
jae
out
aaa
jmp
sysexit
icebp
call
popa
ins
imul
xor
jmp
adc
in
inc
test
stc
pop
jg
out
aaa
jmp
sysexit
jmp
inc
xor
movs
cli
inc
cmp
out
jnp
test
xor
jmp
and
jmp
inc
xor
jmp
adc
sub
xor
jmp
inc
xor
mov
add
jmp
dec
xor
xchg
test
gs
and
repz
push
jmp
inc
xor
jmp
inc
xor
test
adc
jmp
dec
xor
xchg
test
ins
jmp
and
jmp
inc
xor
jmp
adc
test
add
in
jnp
xchg
jne
jmp
inc
xor
ret
cmp
js
jmp
sysexit
jmp
inc
xor
and
ds
ja
xlat
push
mov
jmp
test
xor
fsubr
scas
xor
test
xor
imul
aaa
jmp
sysexit
fld
inc
xor
mov
and
jmp
aas
xor
movs
clc
inc
jnp
out
aaa
jmp
sysexit
jmp
inc
xor
(bad)
jo
dec
not
inc
mov
in
push
jnp
out
xor
jmp
inc
xor
icebp
sbb
jae
mov
jns
movs
cli
push
jg
out
aaa
jmp
sysexit
jmp
inc
xor
jne
js
and
out
jnp
test
xor
test
xor
imul
xor
ret
ja
lock
jmp
sysexit
jmp
inc
xor
jge
add
xchg
or
xor
scas
test
movs
loop
jnp
stos
sysexit
jmp
inc
xor
jmp
popa
xor
movs
test
jo
out
jnp
test
xor
test
adc
jmp
dec
xor
mov
inc
aaa
jmp
aas
xor
jmp
test
xor
test
cmp
mov
shl
test
xor
jmp
inc
xor
jmp
test
xor
stos
test
xor
push
outs
lods
loopne
sbb
xor
mov
inc
aad
cli
ret
retf
jmp
jnp
jmp
inc
xor
and
add
loop
jnp
stos
sysexit
sahf
test
aad
cli
inc
xchg
xor
jae
shr
sar
fnstsw
fucompp
fld
test
xor
icebp
adc
push
out
lods
sub
scas
xor
test
xor
imul
aaa
jmp
sysexit
jmp
inc
xor
jmp
adc
jmp
sysexit
jmp
test
xor
movs
clc
inc
jl
out
xor
stos
test
xor
push
add
jmp
jae
jmp
inc
xor
imul
aaa
jmp
sysexit
jmp
test
xor
jmp
and
jmp
aas
xor
jmp
add
xor
(bad)
jo
jo
adc
inc
mov
in
push
jnp
out
xor
xor
inc
test
out
and
scas
ds
movs
loop
jnp
stos
sysexit
jmp
inc
xor
imul
in
movs
icebp
and
mov
or
xor
mov
jnp
jmp
and
out
xlat
movs
jbe
ins
test
hlt
mov
sub
push
icebp
sbb
sbb
and
inc
pop
push
imul
xor
aam
ret
xor
out
aaa
jmp
sysexit
mov
inc
movs
inc
shr
loopne
(bad)
mov
mov
icebp
sbb
fiadd
movs
and
xchg
jmp
pop
popf
rsqrtps
add
out
mov
push
push
pslld
push
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
sbb
inc
cwde
sbb
xor
shr
out
imul
stos
pushf
add
aas
jecxz
jge
xchg
inc
mov
pop
pop
cwde
loopne
test
jnp
fucomip
jne
mov
jp
lods
pop
test
pop
retf
push
inc
je
loop
imul
cs
xchg
bound
inc
jecxz
fisttp
mov
fs
mov
jb
sbb
js
sbb
loope
lods
push
inc
sbb
push
fnstenv
sbb
inc
add
dec
adc
jp
jno
popf
pop
les
repz
leave
call
mov
lea
inc
call
inc
xor
lods
cdq
cs
addr16
cld
inc
xchg
xor
inc
xor
dec
xchg
repnz
jnp
push
add
ja
test
outs
arpl
dec
bound
mov
mov
mov
icebp
dec
dec
xchg
adc
jae
(bad)
dec
retf
repz
loope
test
jnp
out
daa
inc
data16
mov
loopne
cmp
mov
push
mov
jmp
mov
scas
xor
rol
sbb
dec
or
mov
jne
push
leave
mov
jne
push
out
stos
pushf
out
jne
lahf
lods
(bad)
mov
cmp
pop
ds
std
(bad)
mov
jo
out
jo
into
shl
addr16
dec
mov
mov
jo
test
mov
jo
(bad)
cmp
out
inc
mov
mov
jo
out
sbb
mov
jo
std
loop
shr
pop
sub
ds
sub
aas
cs
jp
out
cmp
out
jo
xchg
jae
out
sbb
ret
mov
jo
into
mov
lock
pop
sub
cmp
ret
mov
mov
mov
jo
out
push
enter
mov
mov
jo
jp
jae
jge
cmp
sub
adc
out
dec
adc
loop
ror
pop
xchg
out
adc
mov
jo
into
mov
jo
out
push
mov
test
out
jo
out
jo
in
mov
and
xchg
fisubr
shl
repnz
in
dec
jns
ds
stos
addr16
mov
ret
push
add
enter
ret
mov
in
js
xor
push
(bad)
jecxz
(bad)
jecxz
(bad)
fistp
inc
cwde
lods
sbb
inc
cwde
stc
cmp
in
xor
sar
(bad)
jecxz
(bad)
pop
adc
mov
or
jne
mov
ret
ja
stos
sbb
repnz
out
mov
adc
outs
bound
mov
cmp
stos
xchg
mov
jne
mov
push
inc
sbb
inc
mov
add
push
jae
pop
gs
idiv
inc
mov
mov
icebp
push
fs
jae
aas
repnz
add
fucomi
xchg
push
jne
scas
lods
loopne
mov
loop
ds
icebp
mov
xor
add
dec
add
sbb
xor
lods
call
or
xor
lods
test
push
loope
jmp
cmp
jg
in
jno
(bad)
mov
mov
jno
xchg
ja
mov
(bad)
mov
inc
jne
mov
js
mov
into
mov
dec
push
mov
bnd
repz
jl
jmp
sbb
push
cld
pop
xor
add
pop
jmp
in
lea
mov
inc
add
xchg
inc
xor
sub
push
jb
cdq
inc
bound
jecxz
inc
(bad)
lahf
inc
dec
(bad)
(bad)
loope
inc
jb
inc
xchg
cli
or
add
mov
sbb
(bad)
adc
mov
or
ja
push
icebp
cmps
dec
(bad)
aad
pop
jle
adc
jle
jecxz
scas
add
mov
ss
loope
cmp
loope
adc
pop
(bad)
lea
cmp
loope
cmp
and
mov
push
cmp
loope
mov
adc
adc
jno
adc
push
mov
xchg
repz
mov
xchg
lea
call
mov
pushf
in
pop
mov
sar
(bad)
jecxz
(bad)
jecxz
dec
xlat
lods
dec
inc
mov
in
bound
lods
push
or
(bad)
mov
mov
cwde
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
imul
retf
xlat
lods
push
or
(bad)
jecxz
(bad)
jecxz
lahf
push
mov
mov
mov
mov
push
(bad)
jecxz
(bad)
jecxz
adc
imul
(bad)
jecxz
orps
inc
mov
jecxz
jecxz
cli
sar
(bad)
jecxz
orps
push
xchg
loope
setp
dec
(bad)
push
xchg
mov
cli
rcr
and
orps
sbb
inc
sbb
loope
push
sar
(bad)
jecxz
(bad)
dec
cmp
(bad)
ror
mov
sbb
(bad)
mov
xor
inc
call
lods
(bad)
push
sbb
mov
jo
mov
arpl
pushf
inc
test
add
inc
js
push
outs
jbe
jmp
lock
movq
cmp
inc
mov
adc
jle
jae
test
in
jo
fwait
pop
mov
push
fild
aad
push
cmp
jecxz
popf
jmp
adc
ret
mov
lahf
cmps
pop
ds
mov
xor
mov
dec
repnz
dec
imul
scas
mov
xchg
jno
jne
call
fdivrp
out
pop
mov
mov
in
inc
jb
pop
dec
jecxz
mov
cmps
stos
lods
ds
sub
mov
adc
mov
xchg
mov
out
pop
test
clc
rep
or
cmps
pop
shl
cld
push
(bad)
fstp
loope
push
mov
adc
ret
xchg
addr16
inc
cmps
ret
pop
push
lods
sahf
cmc
pusha
lods
daa
push
test
out
loopne
aaa
xor
lods
data16
mov
add
lahf
xlat
arpl
dec
sahf
push
pusha
(bad)
mov
test
ins
pop
inc
mov
aaa
cmp
hlt
out
inc
sbb
out
out
imul
mov
xor
mov
dec
jbe
mov
movq
sub
pop
xor
fidivr
cmp
fisttp
inc
sbb
pop
lea
stc
ret
jmp
push
and
data16
push
mov
push
push
pslld
xor
(bad)
cli
jge
xchg
pop
mov
lahf
lods
mov
push
inc
test
sbb
xor
scas
adc
lahf
inc
rcr
xor
inc
inc
loopne
neg
fist
scas
ficomp
jae
xor
(bad)
(bad)
aas
inc
sti
out
cmp
jno
movs
lods
call
out
xchg
mov
jnp
xchg
inc
mov
pop
cmps
lods
jno
sbb
push
in
xchg
or
inc
in
lods
popf
out
call
lods
xchg
stos
xchg
push
xor
inc
cmp
lods
popf
bound
stos
cld
inc
jge
loop
aaa
push
sub
push
ja
pop
jae
sbb
jo
sbb
fdiv
pop
in
sbb
add
mov
mov
pushf
mov
inc
xor
mov
pop
in
sbb
xor
lods
xchg
push
sbb
pusha
inc
dec
push
idiv
out
xchg
scas
mov
add
inc
push
in
in
xchg
add
mov
dec
data16
cli
mov
mov
lods
sbb
jae
or
call
inc
call
in
inc
pushf
xor
je
cmp
je
cmp
push
fs
arpl
dec
aam
scas
es
cmp
arpl
mov
push
call
jae
add
push
fs
ret
scas
adc
fs
ret
hlt
inc
mov
out
cmc
xchg
mov
adc
cmp
sub
cmp
je
pop
sub
xchg
jbe
cmp
lea
je
jbe
jne
cmp
cmp
cmp
fsub
ret
xchg
mov
or
loop
cmp
gs
sub
sub
xchg
jne
cmp
sub
pop
sub
xchg
ja
cmp
sbb
adc
lock
outs
es
cmp
sub
arpl
sub
data16
leave
cmc
cmp
jb
ret
addr16
je
aaa
aam
mov
cs
loop
mov
ret
pop
push
stos
push
adc
push
clc
mov
cs
jne
mov
in
lea
aam
cmp
push
pusha
pop
mov
jne
std
aam
mov
das
pop
jne
mov
cmp
jae
scas
ficomp
cmp
add
movs
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
das
ins
sbb
pushf
shl
mov
sar
(bad)
jecxz
mov
cdq
js
inc
cmp
shr
out
pop
(bad)
inc
push
inc
aam
push
setp
xor
(bad)
jecxz
xlat
xlat
movs
ins
inc
in
pop
mov
lahf
lods
and
scas
sbb
inc
and
out
mov
scas
mov
arpl
fcomp
imul
sahf
pop
popf
jb
lods
dec
inc
sbb
inc
sahf
push
inc
sbb
dec
adc
cmps
jae
inc
in
addr16
pushf
jb
fisttp
or
lar
test
hlt
icebp
mov
mov
push
fldenv
popf
out
scas
push
inc
int3
mov
dec
push
mov
ja
sbb
aas
(bad)
jo
icebp
xchg
out
sti
dec
mov
test
daa
pusha
push
lods
adc
das
(bad)
cmp
sahf
sub
stos
jae
daa
inc
mov
dec
popf
ret
mov
mov
jnp
ret
mov
mov
xchg
cmp
stos
ret
dec
pop
mov
inc
mov
xchg
inc
in
dec
out
mov
jne
(bad)
scas
repnz
push
stos
loop
rcpps
jno
sbb
inc
mov
ret
pop
jae
out
jg
jno
pushf
lods
test
adc
inc
and
or
jo
arpl
jbe
idiv
out
loop
addr16
mov
xchg
iret
sar
gs
push
scas
call
mov
enterw
push
repnz
dec
(bad)
in
push
xchg
mov
mov
mov
push
cmp
pop
xlat
loopne
stos
sahf
pop
(bad)
mov
test
cmps
arpl
popa
pop
pop
add
add
sbb
sbb
sbb
enter
sbb
push
std
or
pop
add
test
jb
and
push
std
xchg
int
fcomp
jmp
mov
sbb
pop
mov
pop
ins
add
fld
pop
(bad)
cld
shl
xor
dec
daa
loopne
stos
jno
into
pop
jb
into
adc
cmp
into
dec
aas
mov
adc
cmp
into
pop
cmp
into
adc
cmp
push
sbb
add
pop
sub
into
adc
ds
pushf
pop
cli
leave
or
pop
add
xchg
cmc
mov
cld
sbb
mov
retf
arpl
mov
cld
popf
dec
jno
xchg
dec
loop
sbb
nop
pop
not
add
cld
xchg
pop
data16
jb
sub
pop
std
xchg
int
fcomp
or
jge
in
(bad)
addr16
and
repnz
inc
add
call
push
lahf
jb
adc
cmp
jmp
lahf
and
dec
addr16
cpuid
icebp
add
mov
cmp
out
pushf
rcr
ja
ror
fwait
jecxz
(bad)
jecxz
pop
push
loop
pminsw
adc
push
fidiv
jb
stc
ins
repz
pop
rcl
mov
ins
inc
push
scas
cmp
lahf
sbb
pop
lods
inc
mov
sahf
pop
mov
sahf
push
inc
mov
or
int3
push
inc
repnz
out
dec
dec
dec
es
pop
mov
push
mov
cmc
mov
mov
xchg
out
mov
push
xor
add
inc
push
jb
inc
mov
pop
(bad)
sahf
fadd
movs
xchg
pop
inc
out
push
icebp
popf
mov
out
aas
mov
dec
and
pop
mov
mov
mov
ja
mov
add
shl
add
inc
js
and
dec
cmc
inc
cwde
lods
popf
nop
adc
pop
dec
je
idiv
in
pop
mov
pop
mov
inc
mov
test
mov
pop
mov
inc
xor
xchg
dec
xor
add
test
imul
outs
sub
mov
out
jbe
mov
test
xchg
mov
jmp
mov
arpl
lods
loop
sbb
scas
out
(bad)
mov
sbb
cli
inc
add
xor
mov
stos
mov
push
stos
mov
push
stos
nop
jmp
stos
mov
jmp
nop
jmp
stos
mov
jmp
mov
jmp
ins
xor
(bad)
jl
jmp
stos
xor
shr
xor
(bad)
or
cli
movs
inc
in
movs
sbb
cli
movs
jl
cli
movs
sbb
mov
or
cld
clc
aaa
cs
cli
movs
dec
in
movs
sbb
sub
sahf
cmp
cld
jle
mov
and
and
(bad)
xchg
mov
inc
stos
mov
push
mov
xor
inc
scas
lahf
jmp
pop
mov
push
mov
cmp
xchg
(bad)
mov
cld
inc
cmps
xor
out
mov
fmul
inc
inc
adc
mov
mov
mov
lock
jb
jmp
dec
add
push
and
lods
jmp
sbb
adc
mov
inc
inc
mov
mov
(bad)
push
cwde
movs
adc
and
jmp
jbe
test
stc
aaa
inc
aas
clc
scas
and
jns
push
popf
push
xchg
lods
and
out
sbb
dec
jl
mov
ins
mov
xchg
bound
inc
popf
out
scas
push
inc
sub
inc
cld
inc
xchg
mov
inc
push
out
add
mov
movs
xchg
lods
out
jl
push
cmc
movs
xchg
lods
ret
mov
push
push
xchg
mov
mov
sbb
aas
sbb
jo
push
pop
std
add
mov
mov
stos
pop
pop
xchg
out
ret
inc
shl
inc
cli
pop
and
mov
jae
popf
in
scas
ins
inc
add
jecxz
jbe
cmc
inc
in
lods
stc
xlat
sbb
sti
out
xchg
mov
loop
ins
int3
sti
out
cmps
mov
pop
out
iret
mov
mov
push
inc
jg
in
jo
jno
(bad)
mov
mov
outs
mov
fmul
pop
dec
mov
mov
jns
mov
(bad)
stos
push
repz
xor
push
mov
xchg
arpl
mov
lods
not
cmp
aas
cmp
jbe
call
jnp
push
lahf
cs
pop
xor
pop
xor
xchg
sahf
popf
mov
push
popf
push
lds
xor
mov
mov
mov
pop
adc
mov
mov
cmp
ss
xor
mov
xlat
and
push
iret
adc
push
iret
js
adc
js
pop
cmp
push
iret
js
or
js
aad
jns
lahf
and
cdq
mov
xchg
push
mov
xor
mov
xor
mov
pop
and
or
cmps
push
adc
sbb
sbb
push
and
xor
mov
push
dec
mov
repnz
mov
mov
pusha
and
std
jle
mov
fidivr
out
das
inc
in
sbb
test
push
inc
sar
push
sbb
repnz
mov
inc
dec
xchg
outs
push
push
inc
ds
gs
popf
imul
retf
popf
mov
fwait
ja
jne
call
jae
mov
je
and
imul
push
mov
mov
scas
fbstp
stos
xchg
mov
rep
push
inc
inc
mov
ja
adc
lods
jnp
fwait
mov
jmp
ins
push
popf
out
scas
sub
pop
add
dec
repnz
test
jecxz
xchg
inc
je
jnp
iret
mov
test
dec
mov
sbb
add
mov
test
aaa
xchg
popf
addr16
dec
lods
sahf
push
mov
xchg
mov
add
mov
inc
mov
sahf
or
mov
mov
add
inc
adc
inc
xor
pop
fdivrp
add
out
push
cmps
(bad)
out
pop
add
test
sbb
inc
cld
inc
xor
mov
or
(bad)
out
popf
mov
je
sbb
ja
pop
or
ja
jmp
cmc
mov
jp
and
arpl
mov
mov
test
(bad)
jmp
clc
and
adc
and
adc
and
pop
clc
adc
adc
repnz
push
bound
dec
sub
xchg
stc
and
sub
and
adc
es
adc
and
adc
push
nop
mov
arpl
cli
and
pop
clc
and
adc
pusha
sub
nop
mov
out
mov
cmp
pop
clc
cmp
iret
xchg
scas
and
add
and
adc
and
sub
adc
inc
sub
xchg
push
pop
arpl
dec
mov
pop
sbb
pop
clc
and
adc
sbb
adc
and
adc
ins
sub
icebp
cwde
dec
arpl
dec
cmps
dec
and
outs
sub
inc
mov
sub
adc
inc
sub
adc
inc
repnz
dec
mov
outs
pop
movs
xlat
into
dec
es
jbe
jns
pop
movs
cmp
shl
and
pop
xor
je
jb
iret
frstor
mov
cdq
fisttp
jno
mov
mov
xchg
out
xlat
(bad)
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
sbb
sub
inc
adc
dec
inc
in
mov
movs
lods
xchg
push
cwde
ins
es
cld
idiv
in
mov
adc
inc
mov
pop
hlt
outs
test
stos
and
out
xchg
bound
ja
in
nop
jne
lods
ds
adc
mov
sbb
inc
les
pop
xchg
push
popf
push
(bad)
lods
pop
in
xchg
mov
cmp
pop
mov
lahf
push
mov
inc
xor
scas
xor
jg
pushf
cmps
aaa
mov
adc
mov
adc
mov
fst
mov
lods
icebp
repnz
sti
out
fwait
mov
lahf
fucomi
ret
rcl
mov
or
stos
cld
enter
mov
out
xor
(bad)
dec
dec
mov
inc
mov
out
push
out
stos
data16
jno
daa
retf
xor
popf
cmps
fisubr
pop
int
inc
cmp
push
loopne
mov
inc
xor
out
xchg
ds
into
push
mov
mov
mov
in
mov
rcl
push
call
out
inc
pop
out
inc
pop
out
inc
or
mov
push
adc
fdiv
fsubp
mov
push
mov
pop
das
leave
icebp
mov
pop
push
push
pop
out
inc
pop
data16
ficomp
and
out
rcr
mov
xchg
jb
mov
loope
jmp
movs
inc
sahf
jecxz
inc
or
cmp
sbb
or
test
or
jg
out
jmp
sbb
jb
jecxz
inc
or
cmp
sbb
or
test
or
pop
shr
outs
and
mov
mov
mov
pop
adc
in
or
and
ins
(bad)
(bad)
mov
cdq
adc
out
or
adc
ins
loop
jmp
and
jmp
sbb
or
test
or
fsubp
mov
or
adc
ins
(bad)
(bad)
mov
cwde
adc
(bad)
or
pop
test
add
xchg
jbe
mov
inc
fisttp
push
pop
dec
(bad)
and
mov
mov
adc
in
or
(bad)
mov
pop
inc
loop
jg
and
sbb
or
je
in
or
push
out
jmp
shl
add
jmp
inc
or
cmp
fild
test
or
and
scas
jmp
and
lock
out
jmp
and
(bad)
test
test
or
ficomp
ins
jmp
cmp
cmp
inc
adc
in
or
pop
daa
movs
inc
adc
cmps
or
adc
in
push
nop
test
in
or
ret
or
icebp
jbe
nop
sbb
adc
ins
inc
jle
inc
inc
(bad)
mov
dec
mov
or
mov
xchg
aas
fild
test
or
push
in
xor
push
test
adc
in
or
adc
in
or
pop
test
mov
and
fs
adc
ins
enter
inc
fsubp
or
or
cmp
aas
fild
test
or
aas
test
xor
adc
in
or
adc
in
or
adc
in
or
adc
in
mov
and
ins
mov
adc
in
or
adc
in
or
adc
in
and
test
or
scas
jno
push
pop
sub
inc
jb
mov
arpl
(bad)
dec
dec
cmc
and
push
push
pop
loop
inc
arpl
rcr
mov
out
push
movs
retf
enter
fisttp
pop
iret
mov
(bad)
inc
mov
and
xchg
and
leave
or
adc
in
lods
xchg
sbb
test
or
js
in
or
adc
in
push
mov
es
and
push
call
mov
(bad)
pop
in
mov
imul
lea
pop
out
adc
data16
inc
cwde
stc
ds
pop
arpl
pop
stos
sar
(bad)
jecxz
push
push
loop
psubd
adc
push
xchg
inc
pop
in
int
xor
lods
das
in
lahf
dec
fild
inc
jb
cwde
jb
inc
loope
mov
pop
mov
sbb
call
lods
fbld
cmps
popf
pop
repz
icebp
shl
cmp
push
jge
lahf
push
inc
lods
or
pop
fwait
mov
into
push
je
test
pusha
fwait
es
jbe
mov
push
xchg
xchg
cmp
inc
xor
pop
xchg
aas
jo
fidiv
out
lods
pop
jo
xchg
shl
jno
push
call
out
iret
dec
mov
inc
push
lahf
and
pop
inc
mov
dec
popf
xor
lods
arpl
fwait
inc
mov
sbb
ficom
mov
mov
jge
mov
and
(bad)
(bad)
repz
mov
into
sub
add
sbb
sub
add
gs
cmc
push
fs
in
outs
fiadd
out
(bad)
jae
(bad)
adc
cmc
dec
cmps
mov
loop
sti
push
call
mov
lahf
out
ret
inc
fsubp
clc
pop
mov
mov
mov
sahf
test
adc
popf
sti
aam
(bad)
in
push
iret
mov
push
push
shl
xor
inc
xor
push
jo
stos
call
stos
inc
push
push
movs
out
inc
shl
sub
pop
shl
add
cmc
aaa
add
leave
loope
or
std
sbb
pop
leave
add
xchg
dec
cmp
or
and
push
cmp
shl
jge
push
adc
sub
add
scas
sub
neg
enter
jns
dec
lahf
jns
dec
lock
or
xchg
scas
cli
pop
js
dec
lahf
jns
dec
lds
test
xchg
out
or
adc
or
icebp
retf
cs
clc
pop
js
dec
lahf
jns
dec
cmps
jns
or
into
rol
mov
pop
dec
cmps
jns
or
into
aam
cdq
(bad)
sbb
inc
xchg
pop
shl
dec
pop
icebp
sbb
adc
aaa
cmp
or
xchg
or
and
shl
sub
or
pop
ret
aaa
adc
mov
cmp
or
ss
push
cmp
cmps
icebp
loop
pop
sub
cmp
das
adc
adc
repz
lds
adc
ror
add
(bad)
or
cmps
pop
iret
cmp
int
pop
loopne
mov
mov
cmps
out
push
xlat
(bad)
and
mov
sar
(bad)
jecxz
(bad)
jecxz
loop
dec
cmp
and
stos
cmp
push
(bad)
jecxz
(bad)
jecxz
(bad)
mov
das
ins
sbb
pushf
mov
mov
loope
xor
mov
(bad)
jecxz
(bad)
dec
adc
xchg
or
loop
sbb
push
scas
jecxz
(bad)
jecxz
outs
push
fisubr
mov
sbb
paddsw
jge
out
push
inc
mov
sbb
sbb
lods
inc
(bad)
call
inc
test
sub
aas
inc
mov
push
jno
xchg
ss
arpl
and
add
pop
add
push
popf
ret
jno
call
out
mov
stc
inc
test
popf
jmp
lods
cmp
fwait
mov
arpl
dec
sar
fs
jno
push
popf
repz
into
add
inc
inc
and
mov
xchg
stos
das
sahf
pusha
cmps
mov
gs
addr16
in
aaa
push
icebp
inc
fsubr
out
out
or
cmp
das
sbb
pop
loope
xor
sbb
bnd
mov
(bad)
stos
scas
cmp
pop
fild
or
outs
inc
cld
add
sbb
jb
jo
popf
mov
ret
inc
repnz
cwde
dec
repnz
mov
xor
(bad)
or
mov
mov
bound
or
stos
out
xchg
mov
dec
cmp
mov
cmps
scas
push
adc
mov
xor
leave
jno
mov
mov
pop
lea
repnz
fs
(bad)
add
sbb
clc
push
inc
loope
inc
outs
ror
repz
repz
repz
repz
ja
push
or
repz
repz
xchg
pop
push
ins
xlat
nop
ds
jmp
push
inc
adc
repz
sbb
adc
push
xchg
dec
dec
repz
pop
gs
pushf
fsubr
push
dec
pop
in
dec
inc
repz
push
pop
mov
pop
add
mov
pop
dec
sub
mov
dec
dec
xchg
or
scas
push
hlt
pop
or
cmp
addr16
and
pop
mov
push
mov
pop
dec
cmp
pop
add
mov
mov
pop
daa
sub
pop
lea
mov
addr16
(bad)
cld
sbb
frndint
pop
dec
les
xor
int
fild
push
or
fbstp
es
inc
add
fstp
fwait
pop
mov
push
add
pusha
pop
dec
js
pop
add
mov
push
inc
xchg
xor
jbe
in
dec
dec
push
pop
pop
pop
repz
add
mov
sub
pop
call
sahf
aad
pop
mov
es
pop
dec
js
pop
add
mov
push
inc
xchg
xor
jbe
in
dec
dec
push
fidivr
es
out
jmp
dec
mov
pop
add
mov
out
jmp
inc
mov
pop
add
mov
out
pop
jns
fdivrp
fisttp
add
mov
call
icebp
shl
and
xchg
or
adc
repz
repz
repz
and
adc
cmp
dec
sub
sbb
inc
xor
fadd
sub
in
imul
inc
xrelease
or
xchg
popf
add
pop
dec
fcom
xchg
dec
dec
repz
fild
or
in
push
ds
or
std
push
push
adc
pop
lods
jbe
pop
add
mov
pop
add
mov
adc
hlt
and
lea
je
pop
add
mov
mov
xchg
jb
push
add
pop
dec
push
mov
push
dec
sbb
pop
dec
jl
pop
add
mov
xchg
inc
xchg
push
inc
dec
and
mov
fsubr
fild
push
mov
adc
hlt
pop
dec
js
pop
add
mov
outs
dec
inc
fist
call
pop
mov
jg
push
std
popf
dec
xchg
mov
push
outs
pop
push
pop
dec
inc
mov
jg
push
std
std
dec
xchg
mov
inc
mov
adc
pop
dec
js
adc
mov
pop
xor
mov
pop
add
mov
setno
mov
pop
push
adc
pop
add
mov
pop
outs
jbe
pop
add
mov
xor
push
pop
hlt
pop
dec
cmp
pop
add
mov
xor
push
pop
hlt
pop
dec
sub
aas
add
mov
adc
in
fisttp
repz
add
mov
adc
hlt
add
in
fisttp
repz
add
mov
pop
add
mov
pop
xor
mov
pop
add
mov
pop
outs
push
ret
inc
mov
push
add
jmp
pop
add
mov
mov
xchg
into
pop
push
add
pop
add
mov
inc
sbb
sbb
xchg
adc
mov
pop
add
mov
pop
data16
pop
add
mov
mov
xchg
(bad)
pop
push
add
pop
add
mov
pop
xor
mov
pop
add
mov
pop
outs
push
sbb
mov
adc
jmp
pop
add
mov
adc
adc
push
call
mov
push
jo
dec
inc
repz
push
pop
mov
adc
jo
jmp
data16
push
mov
adc
xchg
jb
push
pop
not
sbb
cmp
push
pop
mov
aas
add
mov
jg
push
mov
xchg
lods
xor
dec
sub
pop
add
mov
fist
adc
pop
fild
js
add
loope
into
push
in
imul
inc
xrelease
into
adc
repz
cld
dec
ror
dec
push
gs
mov
pusha
daa
nop
jmp
fbld
es
pop
dec
dec
repz
add
mov
push
add
pop
adc
repz
repz
repz
repz
outs
(bad)
push
push
or
repz
repz
fiadd
pop
push
ins
xlat
nop
dec
pop
jmp
push
ja
adc
repz
adc
inc
adc
push
xchg
dec
dec
repz
pop
gs
pushf
pop
fisttp
dec
int3
cld
inc
jns
add
pop
add
mov
ja
push
mov
pop
push
dec
mov
nop
loopne
pop
ins
loop
push
xor
pop
repnz
inc
pop
repz
retf
mov
pop
(bad)
(bad)
add
mov
loope
adc
adc
dec
pop
repz
(bad)
xchg
ja
repz
inc
pop
fsubr
adc
jmp
dec
je
sub
pop
arpl
pop
jo
add
loope
data16
pop
pop
push
ins
fist
inc
not
inc
push
sub
(bad)
loop
js
(bad)
fmul
add
mov
(bad)
push
mov
pop
dec
sbb
pop
add
mov
xchg
or
adc
repz
repz
repz
and
adc
cmp
dec
sub
or
inc
xor
fadd
pop
dec
jo
adc
repnz
xrelease
js
xchg
popf
add
pop
dec
fcom
xchg
dec
dec
repz
retf
inc
push
or
in
push
ds
cmp
and
jg
push
mov
adc
pop
mov
pop
add
clc
lea
adc
cmp
dec
sub
add
popa
xchg
into
adc
repz
push
dec
mov
cmp
pop
adc
pop
in
dec
fs
pop
fcmovnu
nop
push
dec
jmp
jmp
call
dec
call
bnd
pcmpgtd
mov
mov
push
add
in
dec
inc
repz
push
pop
mov
ds
std
loope
adc
adc
dec
pop
repz
(bad)
xchg
ja
repz
inc
pop
fsubr
adc
pop
jmp
dec
inc
repz
pop
arpl
pop
jo
add
loope
data16
xchg
pop
push
ins
fist
inc
ret
push
sub
not
(bad)
or
add
mov
xchg
dec
inc
repz
push
pop
mov
addr16
std
clc
mov
daa
outs
jmp
xor
mov
fild
push
mov
adc
jmp
add
cmp
ficomp
jmp
mov
push
dec
aaa
adc
dec
sub
or
push
faddp
pop
push
push
add
push
pop
mov
push
push
pslld
push
(bad)
jecxz
(bad)
cmp
inc
mov
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
sbb
inc
cwde
lods
dec
inc
cwde
lods
das
ins
sbb
mov
mov
repnz
inc
add
call
cmc
cmps
sti
inc
es
jbe
test
fcom
cdq
inc
cld
lods
pop
(bad)
fwait
jbe
sahf
sbb
push
sbb
and
nop
xor
test
out
lods
mov
test
mov
jb
hlt
inc
je
shl
mov
data16
add
inc
pop
sub
dec
cli
mov
push
test
dec
mov
(bad)
fild
ficom
push
lahf
mov
gs
mov
dec
in
ja
sti
cmp
pop
cmp
stos
push
mov
shr
inc
cld
add
sbb
ins
cmps
mov
push
stos
sahf
sti
mov
(bad)
aaa
push
mov
push
sbb
scas
add
repz
sti
mov
xor
stos
out
xchg
xor
xor
add
and
ja
aad
push
sbb
add
cmps
mov
push
loop
addr16
(bad)
mov
pop
dec
lock
pop
dec
xchg
inc
push
out
pop
push
stos
clc
scas
jl
add
iret
sub
inc
(bad)
movs
sbb
pop
retf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
movs
inc
dec
and
rcl
xor
mov
movs
xchg
(bad)
xor
or
push
lds
dec
mov
xchg
ss
movs
jne
mov
outs
xchg
jecxz
sbb
popa
fisttp
or
jmp
xchg
jns
inc
repnz
outs
xchg
movs
xchg
movs
(bad)
leave
or
ss
movs
xchg
movs
clc
leave
mov
cmp
cmps
mov
xchg
cmps
ss
movs
aaa
out
sbb
xchg
movs
xchg
into
pusha
mov
stos
movs
xchg
movs
add
mov
xchg
movs
xchg
cmp
imul
jmp
xchg
movs
xchg
movs
pusha
ds
ss
sahf
movs
push
xchg
lods
sub
pop
sub
sbb
psubusw
xchg
jmp
adc
ss
mov
xchg
jmp
lahf
out
xor
leave
call
leave
mov
cmp
div
xchg
movs
xchg
push
out
inc
cmp
enter
xchg
movs
xchg
jmp
xor
jmp
xchg
stos
ss
and
mov
mov
jmp
xchg
movs
push
xchg
stos
ss
out
xchg
movs
in
test
(bad)
js
aam
inc
sub
retf
js
test
dec
enter
hlt
mov
push
in
inc
pop
js
xchg
and
(bad)
jmp
mov
leave
cmps
jmp
mov
leave
mov
pop
xor
sbb
lahf
adc
ss
mov
xchg
jmp
lahf
out
xor
leave
call
xchg
jmp
enter
cmp
pop
jns
add
movs
xchg
inc
pop
xor
sbb
xchg
xchg
jmp
mov
int
jmp
pop
inc
adc
add
inc
jmp
pop
outs
adc
test
inc
(bad)
mov
rcl
sahf
cmp
(bad)
or
inc
ins
rcl
cs
(bad)
repnz
or
and
rcl
dec
ja
inc
adc
arpl
out
dec
xlat
(bad)
popf
ret
push
inc
adc
lea
cdq
lods
inc
in
lahf
mov
cmp
dec
dec
(bad)
jnp
jge
dec
mov
jbe
jg
ret
lods
popf
loop
scas
fs
sbb
xlat
mov
stos
popf
cmps
jne
inc
inc
jle
push
mov
(bad)
out
adc
push
clc
mov
cdq
xchg
cmp
inc
mov
call
outs
lock
sbb
inc
ror
and
add
add
dec
call
out
jg
sub
out
inc
xchg
jg
inc
add
repz
out
std
or
add
stos
data16
idiv
xor
inc
adc
fs
sbb
inc
ins
out
cmps
mov
mov
test
and
out
mov
icebp
inc
test
out
sbb
xchg
out
sub
adc
popf
xchg
lods
jbe
mov
loop
movmskps
mov
jne
jne
(bad)
iret
xchg
mov
xchg
pop
out
push
cmc
adc
mov
in
or
xchg
sbb
mov
ss
xchg
mov
mov
bound
push
sti
out
out
xchg
mov
cld
cmp
ja
out
add
mov
jne
push
mov
popf
je
jbe
jae
lahf
ja
fnstcw
push
stos
rcr
mov
sbb
aam
sbb
clc
sbb
push
clc
sbb
push
clc
sbb
push
clc
sbb
push
clc
sbb
push
clc
sbb
push
clc
sbb
push
clc
sbb
sbb
clc
sbb
mov
and
mov
cmp
mov
or
loopne
sbb
enter
clc
sbb
sbb
lods
sbb
in
sbb
mov
cmp
mov
or
loopne
add
enter
jp
(bad)
stc
xlat
push
push
dec
cli
push
cmovs
in
add
mov
jle
mov
cwde
add
push
dec
mov
dec
dec
mov
cdq
cmps
mov
inc
test
sbb
cli
push
push
dec
mov
bound
push
push
arpl
fwait
test
pop
inc
cmp
cmps
push
cmp
push
cld
push
push
dec
mov
adc
sbb
pop
maxps
std
jge
cmc
pusha
sbb
clc
sbb
scas
mov
add
mov
push
add
enter
mov
push
dec
mov
pop
dec
sbb
fsub
cdq
ss
add
stos
xlat
(bad)
push
lods
push
push
dec
cli
push
sbb
int3
sub
test
add
loopne
dec
pop
mov
add
mov
push
dec
xor
aas
addr16
jp
(bad)
dec
mov
dec
mov
dec
xor
aas
test
(bad)
dec
mov
dec
mov
jae
mov
push
add
cli
push
push
dec
mov
dec
in
iret
dec
scas
std
out
ss
add
cmps
sub
push
push
mov
push
pop
dec
sbb
fsub
cdq
ss
add
stos
xlat
(bad)
push
lods
push
push
dec
cli
push
push
dec
mov
sbb
mov
adc
dec
cmp
enter
int3
sbb
jecxz
(bad)
push
lods
push
push
dec
cli
push
push
dec
mov
dec
xor
aas
addr16
jp
(bad)
dec
mov
dec
mov
push
dec
mov
dec
xor
aas
test
(bad)
dec
mov
dec
mov
sbb
push
push
dec
mov
push
dec
mov
pop
dec
mov
sbb
cli
pop
sub
lods
mov
push
dec
cli
push
push
dec
mov
cmp
push
cwde
pop
mov
dec
scas
stc
out
ss
add
stos
ja
push
lods
push
push
dec
cli
push
sbb
add
in
push
dec
push
fadd
push
dec
mov
ds
mov
adc
stc
retf
push
push
dec
mov
pop
dec
mov
mov
add
push
dec
mov
pop
dec
mov
fcomi
dec
in
sti
pop
test
sbb
mov
push
jg
mov
cwde
and
sbb
cli
push
push
dec
mov
push
dec
mov
outs
xor
dec
out
stc
das
xor
xchg
push
in
dec
mov
dec
mov
add
retf
lods
add
sbb
jp
iret
stc
mov
in
stc
pop
push
dec
cli
push
jp
mov
(bad)
add
das
sub
std
push
push
dec
cli
push
push
dec
mov
sbb
mov
or
adc
sti
pop
cwde
add
cmp
push
dec
mov
dec
mov
outs
sub
(bad)
stc
das
push
push
dec
xchg
dec
mov
inc
leave
mov
push
dec
mov
push
dec
mov
push
pushf
mov
push
dec
ficom
dec
mov
sbb
or
(bad)
jnp
sahf
push
pop
mov
push
pop
dec
mov
dec
sti
aaa
sub
lods
out
stos
jp
push
dec
mov
push
add
mov
cli
aaa
sub
lods
out
retf
push
dec
mov
jns
sbb
push
push
dec
mov
sbb
adc
xlat
lock
in
dec
xchg
dec
ss
aam
mov
push
dec
rcl
dec
ss
dec
loop
push
dec
mov
push
dec
mov
add
mov
cmp
stc
std
sbb
cmc
add
mov
dec
mov
adc
sbb
loope
push
dec
mov
or
sbb
loope
push
dec
mov
add
sbb
loope
push
dec
mov
cmp
push
cwde
pop
mov
dec
cli
jnp
dec
push
lods
out
retf
push
dec
mov
push
sbb
mov
scas
stc
out
ss
add
scas
test
sbb
cli
push
push
dec
mov
xor
push
cwde
inc
mov
pop
aas
int3
sbb
jecxz
(bad)
push
lods
push
push
dec
cli
push
push
dec
mov
or
mov
xor
pop
adc
push
pop
mov
push
dec
mov
xor
push
test
xor
fs
test
adc
push
pop
mov
cmp
push
cdq
pop
mov
add
cmp
mov
push
sbb
pop
push
sbb
pop
dec
dec
push
fld
push
dec
mov
sbb
sbb
push
dec
cli
push
push
dec
mov
pop
dec
mov
add
mov
popa
pop
hlt
inc
pop
add
fild
pop
or
pop
dec
mov
push
jno
cmp
loop
pop
xchg
mov
std
popa
push
mov
repnz
xchg
pop
test
mov
scas
sbb
inc
sub
cmc
xor
or
fcom
ds
mov
cmp
jg
xlat
push
jae
out
jnp
imul
imul
in
xchg
(bad)
xlat
push
dec
popf
out
scas
push
inc
mov
mov
add
push
pop
loop
xlat
add
inc
pop
mov
ds
xor
lods
popf
xchg
es
inc
mov
scas
mov
mov
sub
push
mov
test
je
xor
jne
popf
movs
(bad)
test
inc
cmp
sub
xchg
push
pusha
cmp
stos
mov
jne
dec
mov
jae
fwait
repnz
ret
add
inc
inc
repnz
xor
popf
pop
mov
jnp
jmp
repnz
pusha
ins
std
das
outs
mov
repnz
out
into
out
fwait
add
bound
xor
repnz
mov
xchg
push
mov
lods
lgs
mov
push
repz
in
xor
cmp
dec
jmp
clc
add
adc
scas
mov
retf
jge
jbe
out
jbe
mov
xchg
push
xchg
mov
(bad)
jmp
outs
inc
mov
mov
mov
pop
sbb
mov
xchg
jecxz
sahf
sti
mov
mov
push
js
sar
popf
jl
rcr
xchg
dec
or
test
popf
jl
stos
popf
jl
stos
sbb
add
test
popf
jl
stos
sbb
ds
movs
xlat
xor
adc
and
(bad)
out
or
add
das
xor
repz
pop
xor
cmps
xchg
dec
in
xor
in
jl
stos
popf
jl
stos
sbb
pop
dec
in
xchg
sahf
in
xor
in
and
mov
xor
inc
retf
in
gs
add
xor
leave
jl
stos
popf
jl
mov
jl
stos
popf
jl
stos
popf
cmp
jmp
inc
in
jmp
scas
call
scas
xor
in
jl
stos
popf
jl
stos
sbb
xor
in
jl
stos
popf
jl
repnz
push
sub
adc
repnz
imul
in
es
xchg
xor
in
ror
sbb
and
retf
push
xchg
add
fld
fsubr
push
(bad)
sbb
arpl
inc
mov
sbb
fwait
stos
es
ja
rcl
hlt
inc
ds
push
popf
cs
inc
inc
sbb
adc
inc
sbb
sbb
mov
cmc
mov
(bad)
(bad)
xor
scas
sbb
dec
pop
mov
inc
mov
retf
adc
push
jnp
mov
lock
or
inc
out
dec
popf
out
scas
pop
inc
clc
inc
xor
cmp
jmp
mov
dec
inc
cld
add
xor
dec
test
arpl
in
mov
icebp
dec
pushf
mov
jmp
out
inc
adc
pop
sbb
mov
lods
mov
test
mov
lods
xchg
cmp
mov
ss
repz
inc
mov
adc
xchg
into
jbe
pop
pop
xlat
inc
xor
pop
call
inc
mov
cmps
xor
(bad)
mov
dec
mov
ds
out
aaa
in
popf
cmps
push
lods
jae
push
add
mov
repz
scas
dec
sbb
lea
jp
fwait
or
div
addr16
push
adc
icebp
push
inc
jb
test
scas
loop
mov
fs
bound
and
cmc
ja
aam
ins
imul
cmc
cmp
aam
sub
ret
or
mov
jnp
aam
daa
nop
inc
out
test
into
scas
or
inc
pop
jno
pop
in
ror
mov
lahf
rcl
mov
shr
pop
dec
and
or
repnz
cwde
repz
stos
sbb
sbb
les
jle
and
inc
in
sbb
inc
ror
cs
mov
jb
adc
adc
bnd
cli
enter
daa
mov
push
icebp
cmp
lods
jmp
out
fbld
shl
imul
scas
mov
out
aaa
inc
ficomp
les
pop
shl
mov
mov
mov
or
push
stos
or
in
xchg
inc
shr
sub
pop
loopne
pop
lods
push
mov
test
xor
mov
inc
add
test
mov
push
call
dec
sub
cmp
xor
outs
inc
les
pusha
inc
fs
repz
addr16
in
ja
arpl
dec
repnz
in
fucomip
inc
inc
cli
test
fldcw
adc
mov
repz
lahf
inc
xor
std
inc
mov
cmp
outs
(bad)
xchg
rol
mov
pushf
inc
idiv
test
test
sub
nop
xchg
and
sub
nop
adc
jmp
xchg
lods
cmp
sub
nop
xchg
jne
add
popf
ja
or
bound
jae
sbb
(bad)
(bad)
fnsave
jle
xchg
xchg
and
in
jl
ror
pop
mov
out
cmp
xchg
mov
push
(bad)
jecxz
(bad)
aam
push
dec
ds
or
mov
push
(bad)
jecxz
(bad)
jecxz
inc
xlat
out
popf
or
jg
inc
hlt
loope
setp
push
(bad)
jecxz
(bad)
jae
dec
push
retf
lock
sbb
xchg
stos
retf
or
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jmp
sbb
(bad)
jecxz
inc
push
cdq
adc
jne
xor
stc
push
repz
pop
and
dec
adc
jecxz
(bad)
jecxz
(bad)
jecxz
orps
mov
mov
jecxz
(bad)
mov
pushf
inc
rol
lods
push
setp
push
(bad)
jecxz
orps
stos
(bad)
jne
dec
(bad)
mov
dec
xchg
sub
and
jecxz
(bad)
jecxz
(bad)
jecxz
dec
(bad)
pop
push
popa
mov
push
setb
sub
aad
xor
or
xlat
iret
movs
or
ds
lods
and
scas
sbb
inc
ins
mov
ret
add
inc
push
xor
lahf
push
stos
jecxz
lock
cmc
scas
fcmove
inc
mov
jne
sbb
lods
jo
fwait
jl
movs
pop
sbb
stos
ja
jbe
cld
pop
lock
cli
inc
xor
cmp
inc
pusha
jp
xchg
dec
icebp
mov
aaa
jmp
out
scas
push
inc
test
and
retf
or
in
xchg
inc
add
popf
add
inc
mov
inc
mov
push
out
xor
popf
out
scas
push
inc
fmul
and
mov
and
fstp
test
inc
xor
sbb
stos
inc
xor
adc
sti
xchg
stc
mov
mov
out
dec
inc
mov
add
inc
ins
scas
mov
ret
popf
mov
sbb
xor
pushf
fbstp
xor
call
inc
adc
push
pop
xor
inc
sbb
in
(bad)
ss
dec
or
add
add
inc
jl
scas
shl
add
dec
mov
shl
cs
inc
push
test
fild
sbb
dec
popf
pop
loop
jle
stos
cmp
retf
add
lods
or
pushf
or
jmp
jmp
stc
dec
sub
and
pop
dec
jb
jmp
mov
jg
or
add
shr
cwde
jg
ins
les
pop
aam
outs
push
in
dec
jg
xchg
imul
pop
pop
cwde
mov
push
pinsrw
jbe
mov
data16
rcr
mov
outs
push
in
outs
jg
mov
pop
aam
dec
add
mov
jg
or
pop
in
imul
adc
lds
je
mov
fmulp
push
or
into
push
test
aam
pop
fmul
push
pop
dec
or
pop
inc
lods
add
or
pop
mov
dec
xlat
lock
pop
add
sub
sar
pop
mov
dec
inc
fs
outs
pop
push
lods
jnp
dec
mov
ja
popf
pop
iret
add
lods
jnp
dec
push
pop
pop
aam
dec
jg
ror
adc
pop
push
lods
aaa
pop
dec
lods
outs
pop
sbb
aam
iret
inc
lea
(bad)
call
in
retf
iret
sbb
lods
cmp
in
addr16
push
lods
pop
pop
dec
lods
jnp
int3
adc
test
xchg
mov
xchg
pop
pushf
mov
sub
dec
pop
aam
dec
xlat
sar
pop
imul
lahf
iret
ins
lea
xchg
loopne
jnp
lock
jg
or
xchg
loopne
jnp
lock
int3
or
pop
shr
pop
xchg
inc
pop
add
fstp
call
xchg
dec
ja
leave
pop
dec
sbb
pop
cwde
popf
jecxz
pop
mov
sar
mov
iret
gs
pop
dec
sbb
pop
cwde
popf
iret
iret
pop
mov
fwait
rcr
add
fstp
call
mov
dec
in
inc
pop
in
jecxz
sar
push
test
(bad)
les
pop
shl
pop
ror
outs
jg
popf
adc
hlt
rcl
rcr
ror
pushf
lds
push
sbb
retf
pop
test
psadbw
ror
popf
shr
popf
cmp
pushf
rcl
push
(bad)
rol
pop
inc
lock
sub
sti
pop
rcl
movq
adc
pushf
popf
dec
xchg
add
outs
pop
push
lods
cvtdq2ps
pop
rol
(bad)
iret
inc
popf
jnp
enter
in
mov
pop
call
lods
add
popf
retf
iret
rcr
fcomp
pop
add
or
pop
pop
pushf
dec
adc
popf
inc
add
jecxz
mov
dec
xlat
cmp
xchg
push
sbb
imul
adc
popf
dec
add
dec
pop
push
mov
sbb
popf
out
dec
in
inc
pop
ins
or
pop
sar
dec
xlat
cmp
retf
push
adc
pop
push
mov
sbb
popf
out
dec
in
inc
pop
ins
or
pop
mov
pop
push
test
(bad)
les
pop
shl
imul
sub
lahf
iret
gs
sub
push
pop
dec
or
jae
in
fld
popf
(bad)
iret
gs
dec
xlat
enter
lock
imul
rcr
ror
shr
inc
enter
shl
addr16
in
jae
in
jnp
imul
pop
pop
test
jg
pushf
pop
dec
pop
ror
ja
test
jmp
rol
packssdw
lea
pop
ins
test
fcmovnb
rcr
pop
pop
shr
iret
inc
lea
pop
or
push
jg
xor
outs
iret
inc
popf
dec
pop
pushf
lds
rcr
jnp
add
outs
ja
add
(bad)
cwde
test
push
or
jae
lea
fcomp
inc
pop
les
(bad)
iret
gs
jae
mov
adc
or
dec
lahf
lock
jae
enter
lock
push
fisttp
pop
fdiv
pop
inc
lock
sub
jecxz
mov
addr16
pusha
lods
add
or
pop
in
or
pop
fadd
addr16
pusha
lods
dec
pop
or
pop
lods
push
pop
dec
or
pop
rcr
pop
pop
sbb
lahf
adc
cvtdq2ps
popf
pop
pop
sbb
dec
pop
aam
addr16
popf
adc
or
xchg
sbb
out
shr
fxch
dec
rcr
pop
cwde
mov
iret
sbb
shr
in
mov
pop
call
lods
pop
inc
pushf
popf
(bad)
iret
gs
pop
ret
enter
sbb
outs
in
popf
pop
pop
sbb
out
lock
push
(bad)
xchg
mov
pop
pushf
(bad)
cwde
ror
ror
inc
xchg
lds
iret
inc
popf
pop
ret
enter
sbb
pop
in
test
call
rcl
xchg
lds
rcr
(bad)
lds
shl
imul
jecxz
(bad)
retf
xadd
retf
iret
add
or
or
push
jae
rol
add
fcomi
mov
jecxz
rol
pop
in
mov
pop
jno
shl
mov
retf
dec
rol
ja
test
imul
outs
xchg
push
or
pop
fcomp
fcmovne
add
test
jo
arpl
aam
arpl
add
dec
ja
adc
pop
push
test
jo
jnp
jo
jnp
aam
add
mov
retf
inc
cmp
aam
pop
jae
or
xchg
imul
pop
iret
popa
mov
pop
fstp
fadd
ret
iret
imul
aas
add
sbb
dec
pop
aam
dec
xchg
shl
pop
retf
or
aam
dec
xchg
shl
retf
pop
mov
push
pop
sbb
xchg
pop
shl
adc
rol
pop
dec
rcr
dec
lock
sti
test
pop
dec
rcr
dec
lock
pop
dec
in
fistp
(bad)
repnz
pop
inc
in
imul
push
paddq
xlat
jg
leave
dec
jae
shl
lods
addr16
dec
lods
dec
pop
mov
xchg
das
push
aad
imul
dec
adc
ja
cmp
inc
pop
sbb
jecxz
rcl
pop
pop
test
dec
xchg
xor
pop
mov
sysret
fadd
dec
les
(bad)
pop
rol
mov
sti
mov
ja
or
pop
rcr
fcmovne
xor
popf
inc
pop
add
xchg
imul
sbb
xchg
jecxz
rcr
inc
adc
fwait
jae
fldpi
sbb
lds
cwde
or
ja
dec
pop
imul
xchg
shr
fxch
sub
(bad)
jnp
popf
adc
loopne
bswap
jno
pop
ret
cwde
lods
pop
inc
in
maxps
outs
dec
inc
add
jae
popf
xlat
jg
leave
dec
jae
ror
push
popf
adc
cwde
lea
fs
push
fs
pop
rcl
ja
mov
pop
(bad)
call
cmp
dec
pop
sbb
arpl
aam
sub
lods
pop
pop
mov
retf
call
outs
pop
lock
sti
iret
cdq
mov
push
pop
aam
adc
sbb
pop
jae
lods
jnp
fcomp
(bad)
iret
imul
arpl
rol
cmovae
sub
xchg
(bad)
fnstcw
mov
retf
inc
fdiv
out
outs
mov
dec
sbb
pop
jg
or
pop
rcr
iret
inc
rcl
popf
(bad)
leave
outs
pop
loopne
cvtdq2ps
pop
jnp
leave
fcmovnb
rcr
(bad)
ror
fistp
pop
fcomp
pop
pop
call
(bad)
add
jg
(bad)
shl
pop
test
pop
retf
inc
add
pop
aam
jnp
sar
push
add
or
pop
hlt
(bad)
sbb
add
rcr
iret
add
inc
dec
fcomp
xchg
ja
lods
pop
pop
(bad)
(bad)
(bad)
cwde
add
pop
rcr
jae
mov
iret
ror
popf
retf
jmp
inc
arpl
lods
jnp
add
nop
iret
fnstsw
pop
imul
dec
jg
loope
xor
cmp
rcr
fcomip
lds
pop
ror
jae
or
pop
pushf
inc
jnp
test
dec
pop
sbb
add
mov
fild
addr16
popf
dec
jecxz
in
xchg
das
inc
or
pop
rol
pop
dec
lea
sbb
arpl
mov
dec
sub
dec
pop
push
lds
add
xchg
pop
rcr
pop
test
pop
jnp
push
out
rcr
ja
xchg
push
pop
push
or
pop
inc
popf
dec
pop
cwde
test
xchg
jo
dec
pop
aam
push
pop
in
lods
adc
or
adc
add
popf
jecxz
pop
mov
push
pop
shr
pop
hlt
popf
xchg
and
pop
pop
add
dec
pop
cwde
test
lock
test
jg
lock
test
sbb
inc
pushf
inc
adc
fld
add
fst
pop
sbb
outs
ret
lock
mov
jg
shr
inc
mov
dec
pop
pop
mov
jmp
lods
jnp
in
mov
jg
inc
add
pop
aam
out
fcomp
jg
rol
imul
imul
mov
add
adc
popf
mov
fcomp
arpl
push
cmp
push
aam
add
shl
inc
mov
pop
fadd
jae
jo
adc
xchg
fild
or
push
sbb
or
dec
pop
push
add
ja
popf
pop
pop
or
adc
xchg
jecxz
in
pop
pop
add
retf
iret
jno
pop
dec
fcomp
jnp
call
cmp
push
hlt
mov
iret
imul
jnp
xchg
mov
iret
add
test
jae
mov
xchg
or
cwde
xor
pop
call
test
dec
ja
mov
push
ja
or
cwde
mov
inc
in
or
test
jae
fadd
pop
pop
test
adc
or
test
pop
jae
mov
inc
mov
pop
arpl
or
push
sbb
or
xchg
shl
outs
fdiv
outs
ja
or
(bad)
fst
sbb
iret
rcr
ja
mov
jae
enter
call
mov
dec
pop
aam
dec
adc
addr16
test
pop
inc
enter
shr
dec
(bad)
call
test
lock
xlat
inc
pushf
lods
bswap
gs
pop
(bad)
in
test
push
or
adc
ror
inc
popf
pop
fwait
in
popf
jnp
cwde
(bad)
ja
mov
test
fild
rol
pop
ror
pop
les
inc
push
fadd
fild
rcr
jae
lea
rcr
mov
nop
pop
pop
rol
neg
or
fdiv
push
sti
enter
rol
inc
pushf
lods
adc
gs
retf
xlat
mov
add
ror
lahf
xor
inc
push
cwde
xchg
adc
shl
ja
mov
adc
shl
sbb
ffreep
iret
leave
sub
aad
or
sbb
fcmovnbe
sbb
sub
mov
xor
or
sbb
adc
sbb
nop
or
sbb
xchg
pop
inc
nop
adc
sbb
in
sbb
xchg
iret
sbb
nop
adc
sbb
nop
adc
sbb
icebp
sbb
pop
outs
call
sbb
int3
sbb
nop
adc
sbb
fisubr
nop
into
sbb
sbb
rol
cdq
shr
iret
cmp
mov
(bad)
inc
cmp
enter
or
dec
(bad)
inc
int3
(bad)
(bad)
adc
or
push
(bad)
inc
test
add
test
pusha
xchg
mov
pop
mov
or
fistp
fst
mov
out
inc
bound
xlat
jmp
in
pop
ss
cmp
in
popf
ss
lods
jge
sbb
shr
push
stos
lahf
sahf
repnz
ror
pop
mov
mov
bound
dec
cmps
out
mov
or
add
inc
xchg
mov
inc
sbb
in
test
pop
mov
in
scas
push
inc
enter
xchg
jb
inc
pusha
repnz
mov
sti
out
pop
mov
jne
movs
lods
jmp
out
jg
cmc
cli
mov
into
cmps
out
sub
inc
call
inc
xor
jae
sahf
fimul
mov
add
out
add
or
xchg
inc
hlt
add
inc
add
sahf
mov
out
mov
cmp
(bad)
div
aas
cmp
jg
xchg
push
add
jg
ss
ss
ja
sub
cmp
lods
loop
sbb
dec
out
iret
mov
sahf
ret
pop
inc
cld
inc
mov
cdq
push
test
(bad)
push
in
pop
inc
call
shr
je
pop
test
cmps
movs
jmp
cmp
cmc
call
push
mov
add
sbb
lock
cmps
es
cmps
es
test
pop
js
cmps
(bad)
mov
shl
fs
jne
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
je
xor
xor
cmp
jl
inc
mov
je
xchg
cmps
es
cmps
lock
push
out
mul
mov
icebp
jge
popf
and
popa
sub
jge
fdiv
push
ficom
icebp
jge
(bad)
adc
inc
pop
pop
xchg
cmps
loop
fist
fucomi
pop
inc
pop
loope
pop
in
test
sti
cwde
lods
paddsw
test
out
pop
pop
xlat
clc
push
stos
std
jbe
jbe
loop
scas
push
inc
mov
dec
lahf
pop
outs
mov
cld
mov
repnz
xchg
mov
call
mov
daa
push
icebp
fidivr
out
xor
push
cmc
dec
scas
mov
(bad)
out
mov
lods
jmp
push
test
jbe
jno
out
mov
icebp
dec
push
mov
mov
push
sub
inc
cmp
(bad)
div
add
inc
dec
push
jnp
mov
mov
or
test
out
sub
ins
and
pop
pop
inc
xor
outs
xchg
hlt
or
mov
sbb
jp
loope
popf
pop
mov
mov
scas
(bad)
dec
or
je
icebp
push
push
mov
push
push
jbe
in
inc
mov
jb
fbld
nop
out
retf
mov
out
push
out
lahf
inc
fimul
cvtps2pd
hlt
or
sbb
inc
out
push
in
fwait
stos
jecxz
mov
mov
xor
dec
fld
lods
add
xchg
push
mov
cli
ss
cmp
jmp
cmp
ror
ins
push
dec
loop
push
push
cmp
push
cmp
push
cmp
push
cmp
inc
cmp
push
cmp
push
cmp
push
or
mov
push
cmp
push
sbb
add
cli
push
push
cmp
push
cmp
outs
cmp
push
sar
push
or
add
push
mov
add
mov
inc
pop
(bad)
je
dec
add
sbb
bnd
pop
bnd
dec
inc
mov
rcr
dec
adc
ret
cmp
mov
loop
push
push
call
gs
inc
sar
inc
in
mov
loope
cwde
int3
(bad)
inc
fsub
xor
jno
iret
xor
mov
mov
(bad)
shr
or
dec
ss
inc
mov
pop
in
sti
push
test
scas
loop
retf
arpl
sbb
dec
push
mov
mov
mov
out
xchg
bound
add
dec
lods
popf
xor
lods
sbb
inc
clc
or
pop
inc
cmp
add
inc
sar
inc
ins
es
mov
out
mov
xchg
scas
push
inc
adc
stos
pop
loope
popf
movs
call
mov
push
fs
inc
push
fwait
jecxz
jbe
repnz
gs
repnz
outs
mov
leave
dec
dec
stos
jmp
inc
mov
dec
sbb
cmps
pop
jnp
xchg
mov
mov
outs
jae
or
jne
(bad)
mov
mov
push
sbb
inc
jae
jle
jmp
xor
add
add
dec
cli
mov
jmp
lock
sahf
jl
add
(bad)
mov
mov
jae
jmp
jbe
sbb
loop
or
pop
sub
push
pop
or
jmp
ret
jmp
xchg
fcomp
pop
ficom
mov
nop
inc
xchg
(bad)
mov
aaa
shr
repz
inc
das
out
push
sub
jb
out
inc
pop
rol
pop
(bad)
and
inc
inc
nop
rcl
aad
lahf
js
pop
mov
adc
mov
add
fs
out
adc
fcom
jb
fdivr
mov
inc
push
dec
adc
mov
inc
dec
mov
cmp
mov
inc
jb
fadd
mov
cmp
xchg
sub
jg
adc
(bad)
sub
and
ret
popa
sbb
loop
pop
push
call
jge
inc
and
jg
lods
mov
call
inc
sub
mov
cli
xchg
aad
sub
mov
pop
push
push
xor
pushf
fisub
sbb
inc
pusha
fist
jo
out
loope
in
push
(bad)
mov
addr16
inc
mov
inc
mov
inc
in
pushf
rcr
mov
in
iret
mov
jecxz
loope
repnz
out
popf
out
scas
push
inc
test
xor
mov
jnp
xchg
mov
cmc
imul
stos
inc
cli
mov
inc
popf
dec
ret
dec
sbb
cmp
pop
popf
or
lods
imul
jmp
jle
add
lods
cli
push
cld
daa
pop
push
mov
sub
pop
inc
mov
push
stc
xchg
lods
push
popf
cmps
push
lods
add
int
add
addr16
or
inc
mov
cmc
dec
mov
jecxz
jb
fwait
mov
fs
push
adc
xchg
je
jne
loop
in
out
dec
loop
and
mov
xchg
add
mov
mov
lahf
fiadd
mov
pop
loope
es
mov
fs
xor
xlat
out
pop
stos
(bad)
cmp
scas
jmp
rcr
ds
arpl
fstp
pop
mov
xchg
mov
or
jo
jmp
cmp
pop
pop
ds
inc
pop
jle
mov
imul
retf
mov
and
mov
popf
jmp
mov
cmp
xchg
sbb
jb
mov
and
mov
ror
mov
lahf
sar
cmps
scas
les
mov
xchg
add
call
icebp
jb
mov
dec
push
jg
pop
pusha
jo
sbb
test
inc
lods
sbb
xchg
dec
lods
sbb
loope
lods
sbb
add
inc
lods
sbb
popf
dec
je
pop
leave
mov
dec
inc
cwde
adc
inc
cwde
mov
sbb
inc
les
sbb
inc
cwde
mov
lods
sbb
xlat
lods
inc
movs
dec
lods
inc
in
jl
inc
hlt
inc
lods
inc
call
cld
lods
inc
adc
lods
inc
adc
lods
inc
push
cmp
inc
mov
lods
inc
in
leave
pop
inc
mov
lods
inc
push
popa
lods
inc
dec
call
push
inc
xchg
inc
lods
inc
pop
jmp
push
inc
int3
push
lods
inc
(bad)
scas
inc
shl
mov
cmp
mov
enter
xor
mov
jo
mov
loopne
mov
mov
fs
lods
inc
pop
cmp
inc
in
aam
inc
mov
dec
lods
inc
ins
nop
lods
inc
adc
inc
adc
lods
inc
cwde
jle
inc
cmp
inc
int3
lods
inc
ins
fbstp
inc
ror
inc
int3
dec
push
inc
clc
aam
inc
mov
inc
adc
inc
je
lods
inc
aam
lods
inc
movs
inc
lods
inc
pushf
sub
inc
pusha
dec
scas
inc
mov
lods
inc
pushf
inc
lods
inc
call
sub
dec
inc
sub
mov
push
mov
pushf
(bad)
lods
inc
mov
push
lods
inc
sub
lods
inc
in
jnp
inc
mov
lods
inc
movs
pop
mov
dec
push
lods
inc
js
lods
inc
mov
mov
dec
mov
push
mov
dec
add
mov
dec
add
mov
dec
inc
jp
dec
inc
idiv
dec
int3
push
mov
dec
enter
loopne
mov
dec
inc
sar
dec
sub
dec
sahf
push
dec
enter
inc
sbb
dec
sub
mov
dec
rcl
mov
dec
sub
mov
dec
sub
push
dec
inc
push
mov
dec
adc
dec
cwde
dec
mov
dec
xchg
fs
dec
clc
outs
mov
dec
push
and
adc
pop
in
inc
mov
popf
inc
pusha
pusha
test
dec
test
and
test
test
or
lock
fsub
xchg
push
xchg
push
test
sub
inc
mov
xchg
add
in
aam
in
mov
in
hlt
pop
in
fmul
in
jl
jmp
inc
xor
dec
cmp
loop
sbb
call
dec
jl
loopne
fdivr
jecxz
xor
loop
pop
sahf
jecxz
xor
in
mov
aaa
in
mov
in
or
dec
add
in
dec
jl
in
and
dec
or
lock
pop
cmp
repz
dec
les
pusha
stos
js
xor
inc
mov
mov
je
fdivr
inc
int3
div
fs
inc
xchg
test
inc
lock
movs
pop
je
test
ja
je
je
mov
je
adc
jne
inc
in
or
inc
push
imul
dec
in
test
dec
push
lock
dec
cmp
dec
jo
popf
dec
and
inc
enter
cwde
lods
sbb
inc
cwde
lods
xor
stc
push
repz
pop
js
push
xor
icebp
fwait
xchg
sbb
in
lahf
or
mov
cli
inc
push
jbe
ret
push
inc
test
dec
in
inc
mov
inc
dec
jnp
xor
lock
and
stos
(bad)
addr16
pop
dec
pop
mov
add
scas
jg
add
lods
push
mov
pop
xchg
ret
cmc
ins
pop
in
fwait
inc
jp
push
push
popf
or
lods
pop
lods
jle
lahf
lods
pop
push
inc
mov
cdq
jne
movs
lods
loop
cwde
sub
out
jnp
jb
pop
push
repnz
popf
out
scas
pop
inc
add
push
inc
cld
inc
mov
cwde
pop
mov
mov
in
xchg
mov
sti
dec
ja
mov
ins
hlt
fwait
in
inc
mov
test
ret
pop
jbe
stos
aaa
ds
pop
push
xchg
pop
lea
push
icebp
fwait
add
out
inc
mov
mov
push
or
mov
loope
xor
fwait
push
stos
xor
inc
loop
sbb
dec
fistp
add
dec
sbb
mov
ret
jae
push
dec
inc
aaa
out
icebp
jbe
mov
inc
push
into
jbe
mov
mov
mov
out
jno
mov
out
push
call
repz
mov
fs
inc
repz
out
loopne
add
mov
in
in
scas
call
inc
jo
daa
dec
jle
cmps
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
pusha
or
popa
or
bound
imul
push
or
push
push
popa
cmps
pusha
or
scas
push
pop
popa
cmps
pusha
or
xlat
or
popa
cmps
pusha
or
mov
pusha
or
scas
push
push
jno
pusha
or
lahf
rol
daa
pusha
or
mov
pusha
ss
imul
mov
push
push
daa
pusha
or
fistp
or
push
sbb
popa
or
pusha
es
daa
jecxz
imul
pusha
or
dec
or
mov
imul
adc
mov
or
nop
adc
imul
je
stos
mov
sub
mov
popa
test
push
push
inc
scas
push
and
mov
popa
aad
push
cmps
repnz
push
pusha
push
cmps
repnz
push
pusha
push
leave
xchg
push
inc
mov
add
daa
nop
sub
jnp
nop
add
inc
cmps
repnz
push
pusha
push
cmps
repnz
push
pusha
jp
mov
add
daa
nop
sub
sbb
and
daa
nop
or
jnp
nop
add
inc
cmps
repnz
push
pusha
jp
mov
add
daa
add
daa
mov
imul
inc
or
mov
imul
repnz
push
pusha
pop
inc
mov
add
daa
add
sub
mov
cmps
fs
fs
mov
jno
je
imul
sbb
pop
or
pusha
push
dec
movs
jb
cdq
mov
dec
or
das
arpl
stos
dec
or
adc
mov
adc
jge
push
imul
push
push
sti
pop
arpl
imul
arpl
imul
push
es
cmp
imul
arpl
test
out
or
xor
imul
push
push
mov
jg
jns
nop
or
sbb
nop
and
pop
(bad)
ins
es
aas
arpl
mov
pusha
sbb
dec
or
js
fisttp
addr16
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
cmp
test
stc
mov
push
push
inc
xchg
ins
add
push
and
mov
add
inc
mov
add
sub
daa
and
cmp
dec
xlat
inc
and
pop
arpl
imul
arpl
imul
jl
pop
daa
nop
add
dec
xlat
inc
and
cmp
imul
arpl
imul
arpl
imul
arpl
imul
push
es
cmp
imul
arpl
imul
arpl
imul
arpl
imul
push
es
and
imul
fs
dec
shl
pusha
push
push
cmps
bound
imul
jo
imul
pusha
or
repnz
push
pusha
jp
movs
push
cwde
cdq
mov
popa
xchg
inc
or
repnz
push
pusha
push
cmps
repnz
push
pusha
pop
mov
dec
or
das
arpl
imul
pusha
sbb
ror
dec
xlat
dec
or
das
arpl
imul
pusha
sbb
push
mov
movs
push
mov
movs
push
mov
daa
jb
imul
fs
sti
cmp
imul
arpl
imul
pusha
sbb
jb
outs
mov
gs
fs
mov
jae
test
mov
jae
mov
mov
jae
mov
pusha
or
jae
cdq
cmps
pusha
sbb
pusha
or
xor
jge
mov
mov
sbb
push
and
mov
in
sub
les
mov
inc
and
cmp
imul
arpl
scas
ins
or
movs
xor
cdq
stos
pusha
sbb
jb
cdq
mov
dec
or
cmp
imul
arpl
or
xor
cdq
mov
jne
xor
jne
xor
dec
movs
jb
cdq
mov
dec
or
das
arpl
stos
dec
or
xor
mov
xor
jne
jae
test
movs
jb
mov
test
stos
dec
or
xor
mov
pusha
sbb
imul
ins
cmps
ins
sub
mov
or
test
pusha
or
bound
imul
jo
inc
cmps
repnz
push
pusha
jp
mov
add
daa
add
daa
mov
imul
xor
popa
xor
repnz
push
pusha
dec
gs
repnz
push
pusha
jp
movs
xor
popa
imul
or
repnz
push
pusha
push
cmps
repnz
push
pusha
jp
cmps
repnz
push
pusha
pop
cmps
repnz
push
pusha
dec
mov
pop
mov
mov
jo
cdq
mov
jne
xor
popa
imul
or
repnz
push
pusha
push
cmps
jecxz
imul
ror
jne
repnz
push
pusha
dec
imul
pop
imul
push
mov
or
repnz
push
pusha
jp
cmc
pusha
or
repnz
ins
in
or
stos
lock
stos
dec
nop
mov
popa
std
mov
add
or
mov
mov
mov
mov
jp
popa
cmc
mov
xchg
push
pusha
jp
cmps
repnz
push
pusha
cli
je
mov
mov
mov
cdq
mov
popa
cmc
mov
xchg
push
pusha
jp
daa
repnz
push
pusha
push
daa
repnz
push
pusha
jp
cmps
repnz
push
pusha
cli
jne
mov
cdq
mov
popa
idiv
xchg
push
pusha
push
daa
repnz
push
pusha
pop
xchg
cmps
repnz
push
pusha
dec
cmps
repnz
push
pusha
pop
jne
mov
mov
idiv
xchg
push
pusha
push
out
lods
push
bound
or
inc
push
jno
pusha
mov
pop
jb
fbld
ins
mov
mov
pusha
imul
imul
arpl
imul
push
cmps
sti
cmp
imul
arpl
cmps
or
cmc
pusha
add
repnz
push
pusha
dec
mov
jg
jnp
mov
or
daa
nop
add
inc
daa
repnz
push
pusha
jp
xor
add
daa
nop
sub
mov
mov
or
cmps
je
jnp
pusha
push
sti
mov
push
ins
cmps
repnz
push
pusha
jp
daa
repnz
push
pusha
jp
xor
add
and
imul
jecxz
imul
pusha
or
dec
or
mov
imul
adc
mov
or
nop
adc
imul
je
stos
mov
jbe
sub
mov
popa
mov
push
push
inc
das
push
movs
mov
popa
aad
push
daa
repnz
push
pusha
push
daa
repnz
push
pusha
push
fst
add
mov
or
nop
add
inc
daa
repnz
push
pusha
push
daa
repnz
push
pusha
jp
xor
nop
sub
fwait
daa
and
daa
nop
or
jnp
nop
add
inc
daa
repnz
push
pusha
jp
xor
add
daa
mov
imul
inc
or
mov
imul
repnz
push
pusha
pop
inc
xor
add
cmp
mov
cmps
fs
fs
sahf
push
jno
je
imul
sbb
pop
or
pusha
push
dec
movs
jb
cdq
mov
dec
mov
das
arpl
stos
dec
mov
nop
hlt
mov
xchg
mov
daa
push
imul
push
push
sti
pop
arpl
imul
arpl
imul
push
cmps
sti
cmp
imul
arpl
test
out
mov
xor
imul
sahf
push
mov
jg
jns
nop
or
fwait
daa
nop
and
xchg
(bad)
ins
cmps
sti
aas
arpl
mov
pusha
sbb
dec
or
dec
pop
dec
push
jo
js
xchg
jp
bswap
mov
jmp
inc
hlt
es
or
(bad)
movs
mov
cdq
out
xor
mov
scas
push
mov
adc
cmp
mov
fs
cmp
push
mov
outs
jno
test
jl
pop
dec
push
ins
cmp
pop
(bad)
bound
sub
xor
movs
imul
daa
lock
xchg
ja
inc
jg
mov
push
jmp
push
jmp
cs
daa
cmps
les
pusha
push
jmp
mov
push
imul
popa
fidivr
imul
daa
test
inc
daa
daa
popa
inc
popa
fistp
mov
popa
inc
daa
jmp
les
mov
popa
push
cmps
mov
push
aas
mov
add
pop
jg
mov
push
scas
popa
pop
imul
mov
mov
popa
mov
push
mul
jg
mov
push
aas
mov
and
pop
jg
mov
push
(bad)
popa
pop
jg
mov
push
cmps
popa
pop
jns
pusha
mov
mov
popa
or
mov
push
aas
mov
and
pop
jg
lea
push
lock
ficom
pop
pusha
stc
xor
ins
cmps
xor
imul
js
push
cmps
ror
xor
push
cmps
ror
cmp
js
imul
xor
cdq
xor
ins
cmps
xor
ins
fwait
pushf
mov
mov
popa
xchg
es
shl
cmp
jmp
les
js
and
movs
cs
out
mov
jmp
cs
daa
sub
push
das
adc
jmp
cs
cmps
jl
jno
je
mov
mov
popa
pop
jle
mov
push
jmp
cs
daa
fld
inc
jle
test
push
jmp
cs
daa
(bad)
cs
pop
mov
adc
jmp
cs
pop
imul
daa
sub
mov
cs
daa
cdq
cs
daa
call
sub
jg
pusha
and
or
call
imul
test
push
(bad)
cs
pop
stos
lea
push
jmp
cs
shl
daa
pushw
imul
cs
daa
(bad)
cs
xchg
sub
daa
test
jae
or
sub
daa
jmp
cs
fwait
jmp
das
sbb
shr
inc
inc
es
lds
sub
daa
jmp
cs
daa
jmp
sub
lock
lds
int3
pop
pusha
mov
pop
pop
cmps
add
jp
outs
push
daa
jmp
cs
daa
mov
inc
mov
jmp
cs
daa
xor
jge
arpl
imul
popa
sbb
movs
cs
daa
das
pop
(bad)
movs
movs
scas
dec
xchg
popa
inc
imul
les
jmp
les
pusha
and
or
jmp
cs
mov
addr16
jns
js
in
out
mov
inc
pop
jmp
cs
daa
std
cs
mov
js
mov
jmp
cs
daa
jmp
cs
test
jae
outs
cmps
loopne
mov
jmp
cs
daa
jmp
inc
inc
jb
lahf
xchg
xchg
jmp
cs
daa
test
jp
movs
jae
(bad)
repz
imul
(bad)
jmp
cs
daa
cmps
mov
pusha
sbb
jmp
les
dec
scas
lds
js
and
sub
out
daa
inc
into
nop
push
mov
mov
mov
jmp
or
jmp
inc
push
outs
cmp
dec
dec
adc
js
and
call
cs
daa
test
outs
inc
mov
pusha
cs
mov
pusha
push
xchg
imul
cs
daa
jmp
inc
push
outs
cmp
jae
nop
inc
add
vpermilpd
mov
lds
cmp
and
popa
or
jmp
cs
daa
jae
lds
jmp
or
jmp
cs
(bad)
stos
ins
inc
jp
jp
ins
daa
arpl
imul
or
test
mov
call
cs
into
les
jmp
inc
lods
or
and
popa
sub
jmp
cs
daa
push
scas
inc
inc
es
out
jmp
cs
daa
jmp
scas
(bad)
cmps
lock
rcl
imul
jmp
cs
daa
cmps
les
stos
ins
and
fnstsw
ins
daa
arpl
imul
or
int
inc
daa
mov
gs
jmp
les
mov
jmp
cs
daa
stos
outs
inc
bound
push
imul
fiadd
js
and
mov
sub
daa
mov
inc
ja
scas
inc
daa
sub
inc
daa
jmp
cs
daa
mov
ja
jg
mov
push
mov
mov
gs
popa
pop
daa
test
inc
daa
jmp
cs
daa
jmp
cs
lock
cs
daa
stc
les
adc
test
imul
ins
add
inc
js
gs
or
or
jmp
cmps
mov
gs
outs
lods
or
jmp
cs
daa
test
les
cmps
mov
jno
pusha
imul
daa
jmp
cs
cmps
lods
jecxz
(bad)
imul
daa
mov
fs
daa
jmp
cs
daa
mov
and
and
jmp
cs
jae
fs
daa
jmp
cs
jb
ins
xchg
xchg
cmps
mov
jno
fs
daa
lods
in
sbb
adc
jmp
or
jmp
cs
cmps
cmps
pop
pusha
pop
daa
jmp
cs
daa
sub
cmps
mov
popa
or
jmp
cs
daa
dec
das
(bad)
and
xor
jmp
cs
daa
call
xchg
xor
mov
imul
daa
jmp
jle
dec
daa
js
imul
or
jmp
pop
(bad)
movs
xchg
scas
dec
xchg
pusha
inc
imul
cs
daa
xor
push
jmp
lds
pusha
and
or
jmp
cs
mov
imul
lea
push
jmp
les
pop
(bad)
movs
xchg
iret
pusha
daa
sti
and
sub
daa
mov
lea
sub
mov
lods
scas
dec
xchg
pusha
inc
imul
cs
daa
nop
les
movs
popa
pop
adc
pop
inc
es
(bad)
sub
daa
jmp
cs
daa
ror
inc
inc
es
jno
sub
daa
jmp
dec
inc
xchg
jmp
cs
daa
fmul
inc
leave
imul
imul
les
mov
and
cmps
cs
ret
fmul
inc
leave
jmp
adc
or
jmp
inc
lds
ins
mov
and
jmp
cs
outs
aas
push
inc
test
fild
je
xchg
pop
lahf
cmp
push
lea
mov
mov
cs
daa
jmp
cs
daa
mov
aaa
or
or
lea
inc
daa
pop
popa
(bad)
ins
daa
mov
pop
daa
jmp
retf
cmps
ror
jmp
cs
daa
(bad)
les
jno
sub
pusha
sub
jmp
retf
cmps
ror
jmp
cs
daa
cs
shl
cs
jmp
les
pusha
imul
cs
daa
jecxz
inc
lds
jns
sub
mov
pusha
sub
mov
ror
lea
inc
daa
pop
popa
(bad)
fs
sti
and
sub
daa
jmp
mov
xchg
lahf
mov
pop
adc
jecxz
push
push
outs
lods
or
jmp
cs
daa
cmp
inc
arpl
dec
test
imul
daa
jmp
cs
cmps
jecxz
inc
push
imul
daa
out
cs
cmps
cmps
(bad)
pusha
add
stc
cs
daa
imul
daa
movs
cs
cmp
ds
jmp
cs
(bad)
call
and
jmp
cs
daa
enter
daa
push
inc
imul
cs
daa
call
imul
sub
daa
ret
add
jbe
test
popa
pop
ins
or
dec
jmp
sub
jmp
scas
inc
jmp
pop
daa
jmp
cs
mov
jmp
cs
daa
test
inc
mov
fiadd
jae
and
jmp
cs
daa
jmp
cs
jmp
xchg
inc
mov
jmp
cs
fldcw
inc
and
dec
sub
jp
bound
test
push
call
sub
daa
jmp
outs
inc
lds
jns
sub
mov
jmp
or
jmp
cs
ret
mov
das
push
imul
cs
daa
fldcw
inc
daa
aas
mov
or
inc
test
popa
dec
daa
jmp
cs
daa
jmp
inc
jae
and
mov
sub
daa
jmp
cs
jmp
pusha
(bad)
cmp
leave
pop
leave
imul
daa
jmp
les
mov
daa
leave
imul
daa
mov
ins
inc
jle
adc
mov
out
mov
inc
leave
jmp
and
or
(bad)
les
dec
mov
and
jmp
ret
jmp
cs
daa
push
mov
shl
jle
jmp
cs
daa
xchg
inc
and
fwait
gs
cs
ret
enter
imul
imul
cs
daa
bound
jmp
cs
daa
jecxz
inc
lds
jns
sub
or
pusha
sub
jmp
cs
ret
test
inc
leave
jmp
adc
or
jmp
les
ja
test
lea
push
or
popf
retf
jbe
jmp
cs
daa
jmp
cs
jmp
jp
ins
mov
popa
jp
test
xchg
inc
xor
jp
scas
pop
mov
jmp
cs
daa
jmp
cs
lahf
daa
mov
push
jmp
inc
imul
cs
daa
mov
inc
daa
dec
pop
(bad)
sbb
(bad)
jmp
scas
inc
inc
cmps
loopne
jno
sub
daa
jmp
cs
mov
out
sub
push
jmp
les
or
mov
mov
test
jbe
xor
int
cmps
jl
ins
jmp
or
stos
mov
gs
ins
aas
push
stos
and
fnsave
sub
daa
jmp
cs
cmps
int3
pop
cs
mov
sub
cs
fidivr
popa
sub
mov
inc
daa
mov
popa
push
daa
jmp
cs
xchg
jmp
cs
daa
int3
pop
inc
test
cmps
mov
popa
mov
jmp
cs
daa
mov
test
push
jmp
cs
daa
xchg
mov
stos
jno
sub
daa
jmp
ins
cmps
jl
jno
in
sub
cmp
jmp
inc
inc
mov
jmp
cs
daa
movs
cs
daa
mov
inc
mov
aas
inc
repnz
rcr
lock
(bad)
repz
imul
mov
imul
cs
daa
jmp
retf
imul
jmp
les
js
and
movs
cs
jae
les
jmp
cs
daa
mov
popa
push
cmps
dec
lahf
jno
je
mov
jmp
cs
daa
mov
inc
daa
mov
popa
es
test
jp
dec
imul
daa
int3
sahf
inc
jmp
es
jno
pusha
loop
pop
jae
xchg
dec
jg
mov
js
imul
or
jmp
cs
ja
nop
(bad)
jno
pusha
imul
daa
jmp
cs
daa
mov
popa
push
jmp
cs
daa
push
cs
jmp
cs
addr16
cs
jmp
cs
addr16
mov
ja
test
pusha
or
jmp
cs
sar
push
cmps
test
popa
retf
push
inc
test
in
jle
mov
mov
popa
push
jmp
cs
daa
jmp
les
mov
inc
test
daa
jmp
cs
daa
jmp
cs
jmp
cs
out
imul
movs
cs
daa
mov
inc
imul
jmp
les
or
jmp
cs
daa
stos
outs
inc
js
retf
sub
jmp
cs
daa
jmp
cs
imul
pushw
nop
xchg
addr16
or
jmp
cs
daa
jmp
inc
inc
xchg
fnsave
cs
bound
imul
cs
daa
mov
inc
daa
jmp
cs
daa
leave
cs
daa
daa
inc
inc
imul
cs
daa
test
inc
mov
outs
inc
or
pop
inc
jmp
cs
sub
mov
call
fs
cs
daa
cmps
les
pusha
and
or
jmp
mov
test
dec
pusha
and
jmp
or
add
into
and
daa
mov
ja
ins
daa
push
or
pop
adc
div
sub
daa
jmp
cs
daa
ret
adc
dec
jmp
cs
daa
jmp
cs
jle
test
push
and
aas
je
mov
mov
pop
not
(bad)
iret
popa
dec
pop
mov
out
push
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
xlat
xlat
movs
das
inc
in
sbb
sub
lea
xchg
sbb
in
lahf
lods
sar
mov
retf
inc
dec
jle
sbb
jmp
lods
push
inc
call
push
and
jae
push
or
pop
mov
push
stos
mov
pop
inc
mov
mov
popf
cmps
(bad)
lods
or
pop
push
test
daa
inc
push
dec
jno
cwde
lods
jmp
or
mov
test
cmp
pop
lods
sub
mov
mov
inc
xchg
cmc
or
jecxz
(bad)
dec
repnz
popw
mov
add
sahf
ret
pop
push
jb
ret
mov
sti
out
pop
mov
out
in
repnz
pop
dec
xchg
mov
in
mov
xchg
jmp
add
mov
push
inc
and
pusha
inc
pop
retf
cmp
xchg
mov
out
mov
sahf
mov
jge
ss
mov
call
mov
or
pop
mov
out
out
addr16
push
rcr
push
out
jb
push
mov
sbb
sahf
into
mov
and
push
loopne
dec
sbb
jle
test
les
neg
pop
or
enter
cld
sbb
jle
sbb
or
dec
lods
xor
nop
scas
lods
adc
nop
mov
les
rcl
mov
mov
pop
les
push
push
dec
add
shl
(bad)
jecxz
xlat
xlat
movs
das
inc
in
sbb
popf
lods
mov
push
push
test
inc
inc
mov
lahf
add
add
aas
daa
push
mov
stos
stc
or
clc
popf
loop
scas
jb
xchg
arpl
movs
sbb
sub
adc
lods
js
pop
mov
push
out
sahf
mov
mov
jnp
into
repz
mov
(bad)
call
jne
scas
and
push
jbe
icebp
inc
clc
lods
in
cdq
fcomp
inc
xchg
lods
pushf
outs
sbb
cmp
inc
xor
sbb
jmp
sbb
jb
mov
pop
push
cmc
pop
mov
jnp
mov
addr16
out
xor
add
lods
call
sar
cs
sbb
add
mov
cld
inc
xor
call
xchg
xchg
inc
mov
xchg
inc
jae
test
outs
cmp
jb
adc
mov
xor
mov
aaa
pop
dec
loop
sbb
dec
mov
mov
mov
ret
xlat
scas
dec
jae
adc
and
cmp
mov
aas
mov
or
je
sbb
out
mov
mov
daa
push
in
mov
jne
repnz
in
xchg
add
cmps
mov
in
cmp
mov
fstp
mov
xchg
push
sbb
cmp
mov
je
lods
(bad)
lods
imul
xor
xor
data16
jecxz
in
stos
xor
sub
pop
test
jecxz
dec
cmp
jle
movs
jge
pop
lea
mov
mov
repz
out
es
mov
in
cmp
and
lods
sbb
inc
and
jno
mov
in
pop
sbb
lea
sbb
jb
pop
and
mov
or
push
shr
scas
add
out
pop
push
mov
cmp
mov
je
lock
jge
(bad)
mov
js
sti
repnz
mov
push
mov
jp
jno
cmc
dec
outs
mov
test
dec
xor
ja
in
les
push
lods
jp
add
xor
add
(bad)
pop
inc
push
xchg
inc
mov
inc
xchg
adc
add
adc
out
jae
repnz
out
xchg
xchg
cmp
je
stc
push
ins
es
ja
lods
aas
in
fwait
inc
shl
aas
lods
clc
pop
xor
pop
ja
mov
push
xlat
jb
mov
addr16
mov
xchg
inc
mov
mov
dec
das
xchg
adc
push
fs
push
push
jp
pop
cs
shl
mov
mov
into
gs
call
add
loop
push
cmc
mov
xor
scas
out
pop
jge
dec
jecxz
inc
call
repnz
addr16
pop
xchg
mov
pushf
inc
in
dec
repnz
cmps
sub
mov
dec
(bad)
scas
xchg
lods
cmps
popa
fcomp
mov
inc
cli
stos
xchg
lods
mov
popa
fimul
cmc
inc
out
xchg
std
lods
mov
popa
fimul
mov
pop
loop
xchg
std
lods
mov
popa
fimul
mov
pop
repnz
cmps
sub
stos
mov
dec
(bad)
scas
cmps
inc
std
lods
cmps
popa
ficomp
mov
inc
cli
stos
cmps
inc
std
lods
mov
inc
cli
stos
mov
inc
out
cmps
(bad)
mov
inc
cli
sub
pop
loop
cmps
(bad)
mov
inc
cli
sub
pop
repnz
cmps
test
jp
mov
dec
(bad)
scas
daa
inc
std
lods
cmps
loope
lahf
mov
pop
loop
xchg
inc
cli
stos
daa
inc
std
lods
mov
inc
jp
mov
inc
out
daa
(bad)
mov
inc
jp
mov
pop
loop
daa
(bad)
mov
inc
jp
mov
pop
repnz
cmps
sub
mov
dec
(bad)
scas
xchg
lods
cmps
popa
ficomp
mov
inc
cli
stos
xchg
lods
mov
popa
fimul
test
lods
mov
popa
fimul
mov
pop
loop
xchg
std
lods
mov
popa
fimul
mov
pop
repnz
cmps
test
pop
mov
dec
(bad)
scas
pop
inc
std
lods
cmps
loope
lahf
mov
pop
loop
xchg
inc
cli
stos
pop
inc
std
lods
mov
popa
pop
mov
inc
out
pop
(bad)
mov
popa
pop
or
pop
loop
pop
(bad)
mov
popa
pop
or
pop
repnz
cmps
test
cmp
mov
dec
(bad)
scas
addr16
std
lods
cmps
loope
lahf
mov
pop
loop
xchg
inc
cli
stos
addr16
std
lods
mov
add
jmp
pop
loop
test
lods
mov
add
imul
loop
addr16
mov
add
imul
repnz
cmps
sub
mov
dec
(bad)
scas
mov
std
lods
cmps
popa
fcomp
mov
inc
cli
stos
mov
std
lods
mov
push
jmp
inc
out
mov
std
lods
mov
push
jmp
pop
loop
mov
std
lods
mov
push
jmp
pop
repnz
pop
xor
dec
pop
(bad)
dec
pop
xor
dec
pop
cli
inc
pop
xor
dec
pop
out
push
pop
xor
dec
pop
loop
push
pop
xor
dec
pop
repnz
push
loope
jmp
mov
cmps
(bad)
icebp
sar
out
pop
xor
dec
pop
loop
lods
push
loope
jmp
mov
mov
mov
and
inc
xor
dec
pop
out
lods
xlat
loope
jmp
mov
scas
(bad)
icebp
sar
out
inc
xor
dec
pop
cli
lods
push
loope
jmp
mov
mov
mov
and
dec
xor
dec
pop
(bad)
lods
xlat
loope
jmp
mov
mov
mov
and
pop
xor
dec
pop
repnz
xlat
loope
jmp
mov
cmps
(bad)
icebp
inc
mov
or
xor
dec
pop
loop
lods
xlat
loope
jmp
and
(bad)
cli
movs
push
dec
jge
cmps
dec
push
mov
fdivrp
movs
push
dec
imul
add
cli
movs
push
dec
push
and
ret
push
dec
dec
and
(bad)
movs
push
dec
stc
and
(bad)
cli
movs
push
dec
std
and
fdivrp
movs
push
dec
jmp
scas
test
cli
movs
push
dec
shl
cmps
dec
push
mov
ret
push
dec
int
cmps
dec
push
mov
pop
dec
rep
pop
inc
repz
dec
repz
inc
repz
pop
push
rep
pop
(bad)
repz
repz
pop
repnz
clc
mov
inc
out
je
std
lods
pop
xchg
test
clc
mov
inc
cli
aaa
je
std
lods
pop
cmps
(bad)
fdivr
cmp
rol
inc
std
lods
pop
push
lahf
mov
cmp
aam
pop
push
pop
call
push
neg
outs
shl
jecxz
or
ds
(bad)
iret
or
pop
hlt
xlat
or
and
xchg
lahf
stos
in
pop
mov
addr16
cmc
call
jge
jg
inc
mov
sbb
inc
push
or
push
stos
loope
mov
pushf
mov
mov
or
inc
pop
mov
push
stos
jmp
inc
jp
mov
aaa
loopne
jnp
push
inc
lahf
mov
mov
adc
mov
loopne
dec
cmp
pop
lods
out
sbb
cld
mov
jb
mov
jb
loop
push
fdivr
je
imul
rcl
data16
bnd
cs
jb
popf
out
scas
cmp
mov
cmc
inc
lock
loopne
sbb
out
mov
cmp
lods
mov
mov
dec
push
mov
test
addr16
and
mov
push
ins
fiadd
xor
xor
cvtdq2ps
retf
xor
out
jno
ss
jbe
xchg
scas
inc
outs
xor
(bad)
push
jne
loope
loop
add
add
xchg
inc
cmp
add
mov
push
sub
adc
inc
mov
js
inc
stos
push
iret
arpl
mov
pop
mov
sub
and
je
movs
lods
repnz
and
add
pop
pop
add
in
test
pop
mov
cmps
dec
inc
adc
add
xlat
les
pop
jae
(bad)
mul
add
pop
and
(bad)
fmul
sbb
daa
dec
inc
adc
add
pop
xor
minps
push
retf
inc
inc
jg
jae
pop
mul
add
pop
js
pmaxub
sub
outs
test
adc
pop
div
dec
ins
cs
push
cmp
mov
rol
inc
jle
daa
test
adc
add
pop
js
shrd
add
add
bsr
mov
mov
sbb
add
sub
pop
inc
xchg
mov
jae
or
pop
and
add
pop
ins
add
lods
and
add
pop
jo
cmpxchg
aas
pop
jne
minps
lea
dec
cmc
sahf
das
dec
pop
xlat
repnz
jge
pop
dec
mov
adc
pop
pop
outs
adc
jmp
ss
(bad)
(bad)
push
nop
add
sub
push
fstp
sbb
mov
add
mov
pop
inc
inc
das
cmp
mov
call
std
pushf
inc
js
push
pop
imul
(bad)
scas
(bad)
hlt
mov
ret
addr16
loop
mov
pop
push
inc
mov
adc
ret
push
stos
ret
dec
cli
mov
int
push
pop
mov
push
dec
jb
mov
mov
jecxz
mov
mov
test
jg
loop
aaa
push
mov
dec
mov
inc
mov
adc
dec
daa
mov
inc
xor
push
mov
mov
dec
push
mov
sti
out
add
retf
and
push
mov
push
mov
cdq
lods
xchg
ja
popa
lods
loop
test
loopne
mov
lahf
sbb
mov
adc
push
mov
adc
pop
retf
bnd
loop
jge
push
fwait
mov
push
jl
repnz
aaa
movs
popf
cmps
pop
lods
and
mov
fidiv
dec
outs
stos
loopne
jle
jmp
aas
push
jno
in
in
add
out
lahf
(bad)
mov
in
mov
jge
scas
xchg
das
or
ja
sbb
je
push
lds
call
ret
mov
jg
in
jecxz
cmc
inc
bound
push
xor
in
mov
sbb
sub
ss
je
outs
sahf
jbe
rcr
dec
out
out
jbe
sti
mov
inc
mov
loop
inc
leave
mul
jle
retf
mov
scas
add
jg
div
(bad)
xchg
and
mov
cs
mov
push
icebp
mov
mov
fsub
mov
fsub
fdiv
arpl
mov
fsub
mov
test
jle
xchg
hlt
stos
sti
nop
int3
cmps
xchg
jb
xchg
pusha
out
sti
sbb
sti
cmps
xchg
inc
xchg
sbb
in
ins
pcmpeqw
pop
sar
loop
mov
mov
mov
push
xchg
pop
loop
pminsw
adc
push
fidiv
bound
pushf
adc
pop
push
sbb
cmps
push
inc
mov
sbb
cdq
pop
or
(bad)
sbb
dec
push
(bad)
outs
ret
ret
addr16
ficom
(bad)
adc
push
inc
sbb
in
pop
pop
movs
or
bound
iret
scas
push
inc
in
mov
in
pop
imul
pop
jp
out
inc
xor
mov
inc
mov
push
jmp
sbb
scas
jg
sbb
test
outs
jl
jle
ss
lock
cmp
out
mov
sti
mov
mov
dec
out
sub
sti
out
aas
mov
loop
out
loop
out
sub
mov
mov
inc
pushf
(bad)
xor
bound
addr16
popf
retf
mov
add
call
pop
mov
xchg
mov
popf
cs
xor
mov
cli
call
inc
xor
cmps
inc
jp
pop
push
popf
ret
mov
mov
xchg
sub
sti
mov
fs
addr16
outs
inc
add
inc
add
call
outs
fwait
inc
or
(bad)
mov
outs
scas
xchg
idiv
jb
mov
or
add
retf
(bad)
movs
cmc
retf
enter
sahf
jmp
sahf
movs
cmc
retf
shl
retf
sahf
movs
cmc
retf
sahf
movs
cmc
retf
aad
neg
sahf
movs
cmc
retf
fnsave
call
mov
mov
mov
hlt
call
sahf
jmp
leave
sahf
movs
mov
retf
cmps
movs
cmc
mov
mov
pushf
repz
retf
sahf
movs
cmc
retf
fisub
ja
cdq
jmp
push
movs
mov
retf
sahf
movs
cmc
retf
cmps
inc
hlt
mov
arpl
sahf
lock
popa
sahf
movs
mov
or
pop
popa
loope
xlat
push
mov
movs
mov
sub
jne
add
into
xchg
push
fidivr
retf
(bad)
movs
cmc
retf
cmp
div
movzx
out
add
sahf
movs
(bad)
movs
cmc
retf
pushf
(bad)
sahf
movs
lods
retf
fldenv
popf
retf
sahf
movs
cmc
retf
ror
xchg
icebp
jmp
jae
out
aaa
in
sahf
lock
leave
sahf
movs
lods
retf
retf
movs
cmc
lahf
sahf
out
ja
sahf
movs
cdq
retf
ror
xchg
icebp
jmp
jae
jecxz
fs
lock
leave
sahf
movs
lods
retf
sahf
movs
cmc
retf
retf
movs
cmc
lahf
sahf
out
ja
sahf
movs
cdq
retf
(bad)
movs
cmc
stos
sahf
(bad)
retf
sahf
movs
cmc
retf
sahf
movs
cmc
retf
fldenv
popf
retf
sti
movs
cmc
and
cli
test
aam
mov
sahf
cmps
mov
mov
ja
enter
popf
lock
jmp
frstor
pop
popa
xchg
jmp
sahf
cmps
mov
retf
iret
movs
cmc
sub
into
mov
mov
retf
sahf
movs
cmc
retf
fsub
pop
popa
cdq
jmp
sahf
cmps
mov
retf
sahf
movs
cmc
retf
cmps
inc
hlt
mov
outs
popf
enter
popf
lock
stc
sahf
movs
mov
retf
push
sbb
test
out
movs
retf
aas
into
popf
sahf
out
ret
retf
sahf
movs
cmc
retf
retf
retf
popf
lock
sahf
movs
mov
retf
push
mov
test
out
movs
rcl
iret
mov
jmp
popf
aad
mov
retf
fisub
ja
loope
xlat
push
pushf
repz
retf
mov
out
imul
mov
retf
(bad)
movs
cmc
retf
cmp
div
movzx
loop
retf
icebp
retf
xchg
movs
cmc
sub
jne
add
into
xchg
pop
stos
mov
retf
sahf
movs
cmc
retf
(bad)
movs
cmc
retf
cmp
div
movzx
loop
retf
in
sahf
movs
cmc
retf
ror
mov
jmp
jae
div
add
lock
leave
sahf
movs
mov
sahf
movs
cmc
retf
pushf
icebp
hlt
sbb
mov
lahf
retf
loop
and
test
sbb
sbb
sahf
cmps
mov
retf
sahf
movs
cmc
retf
aam
hlt
sbb
cmc
retf
sahf
movs
cmc
retf
mov
jne
add
into
sbb
mov
retf
cmp
div
movzx
loop
leave
sahf
movs
std
retf
cmps
inc
hlt
mov
pop
popf
enter
pushf
lock
dec
sahf
movs
mov
sahf
movs
cmc
retf
fsub
pop
popa
cdq
jmp
push
cmps
mov
retf
sahf
movs
cmc
retf
cmps
inc
hlt
mov
addr16
enter
pushf
lock
pop
sahf
movs
mov
sahf
movs
cmc
retf
loope
cmc
xchg
sahf
cmps
xchg
retf
sahf
movs
cmc
retf
retf
mov
cmps
jmp
mov
mov
ror
popf
sahf
jmp
retf
sahf
movs
cmc
retf
sahf
movs
cmc
retf
fsub
mov
retf
retf
movs
cmc
lahf
sahf
out
test
sahf
movs
cmc
retf
cmps
movs
cmc
mov
ja
enter
lahf
lock
mov
movs
cmc
retf
cmp
div
movzx
loop
retf
mov
retf
cmps
inc
hlt
mov
daa
popf
enter
lahf
lock
lea
movs
cmc
retf
fsub
pop
popa
cdq
jmp
sahf
movs
mov
retf
sahf
movs
cmc
retf
cmps
inc
hlt
mov
ja
enter
lahf
lock
cdq
sahf
movs
mov
loope
cmc
xchg
sahf
cmps
xchg
retf
retf
cmps
aad
ja
cmps
jmp
mov
mov
nop
sahf
jmp
retf
sahf
movs
cmc
retf
fsub
mov
retf
retf
movs
cmc
lahf
sahf
out
test
retf
movs
cmc
lahf
sahf
loop
retf
mov
retf
(bad)
movs
cmc
stos
sahf
(bad)
retf
sahf
movs
cmc
retf
frstor
sbb
enter
sahf
lock
leave
sahf
movs
lods
retf
sahf
movs
cmc
retf
movs
icebp
hlt
sbb
mov
retf
pushf
(bad)
sahf
movs
lods
retf
sahf
movs
cmc
retf
fldenv
sbb
icebp
jmp
jae
fbstp
pop
sahf
lock
leave
sahf
movs
mov
retf
retf
movs
cmc
lahf
sahf
out
test
sahf
movs
cmc
retf
retf
movs
cmc
lahf
sahf
loop
retf
sahf
movs
mov
retf
movs
cmc
fwait
shl
test
inc
retf
ror
test
dec
mov
retf
retf
retf
sahf
lock
sahf
movs
cmc
retf
aam
hlt
sbb
cmc
retf
sahf
movs
cmc
retf
mov
jne
add
into
sbb
mov
retf
cmp
div
movzx
loop
leave
sahf
movs
mov
sub
into
mov
mov
retf
sahf
movs
cmc
retf
sahf
movs
cmc
retf
fsub
pop
popa
loope
xlat
push
enter
sahf
cmps
mov
sub
into
xchg
pop
stos
mov
retf
sahf
movs
cmc
retf
sahf
movs
cmc
retf
loope
cmc
xchg
sahf
cmps
xchg
retf
retf
cmps
test
not
ins
jmp
adc
inc
jmp
das
and
jp
fisttp
shr
cmps
sbb
in
imul
pushf
jne
mov
jmp
nop
dec
push
inc
mov
sbb
sbb
pop
inc
push
push
iret
and
lds
(bad)
das
movs
mov
(bad)
jno
rcl
out
popf
loop
scas
sbb
repz
sub
stc
(bad)
jmp
into
stos
inc
aam
repnz
pushf
push
pushf
arpl
jecxz
mov
or
xchg
mov
nop
jbe
cmps
push
in
pop
mov
(bad)
fistp
sub
push
mov
push
sub
iret
cmp
test
or
cmps
mov
lods
test
out
xor
mov
dec
mov
inc
mov
pop
inc
cmc
div
ret
push
mov
ja
sbb
or
push
xor
jnp
es
ss
pop
inc
cld
add
inc
ins
rcl
ss
xchg
cmps
ja
cmp
mov
sti
push
adc
jnp
je
icebp
push
fs
out
outs
imul
inc
pusha
or
or
sti
mov
ja
jecxz
pop
repnz
(bad)
in
addr16
jae
xchg
out
js
js
jbe
jne
xchg
dec
jmp
mov
out
mov
leave
jno
loop
push
enter
daa
test
inc
cmp
or
fstp
pop
test
cmp
test
cmp
adc
cmp
test
cmp
xchg
cmp
sar
test
cmp
test
push
pop
test
cmp
test
js
mov
outs
and
dec
(bad)
ja
sub
ja
and
(bad)
aad
sahf
ja
repnz
fidivr
out
bound
dec
sahf
ja
gs
mov
out
pop
fistp
in
imul
test
sbb
jge
sti
push
inc
mov
pop
cmc
fwait
jbe
test
and
sahf
push
repnz
or
popf
loop
scas
addr16
ins
(bad)
repnz
(bad)
imul
test
and
ja
and
sar
sbb
mov
xor
xchg
nop
sahf
jnp
jnp
mov
mov
or
ins
push
(bad)
mov
in
cld
pop
fwait
push
lods
pop
jecxz
nop
pop
lea
repnz
or
test
dec
shr
cmp
jmp
inc
xor
xchg
pop
call
inc
repnz
popf
out
scas
xor
mov
or
mov
lods
xchg
pop
je
dec
repnz
imul
ja
or
icebp
dec
mov
leave
dec
ss
xchg
jg
jp
test
stos
sbb
sahf
push
scas
out
mov
mov
test
mov
inc
mov
push
jno
jno
clc
lods
loop
call
sub
push
loop
add
ret
add
in
out
mov
dec
aas
mov
inc
xor
mov
jg
sti
dec
cmc
inc
test
xchg
out
mov
jnp
pop
mov
pop
loop
adc
dec
addr16
sbb
add
mov
sahf
pop
in
mov
mov
call
jle
inc
push
pop
lods
inc
mov
xchg
adc
dec
pop
jmp
pop
fidiv
mov
xchg
jg
jg
jg
dec
sub
push
mov
xchg
jg
pop
xchg
jg
pop
xchg
sub
pop
xchg
jg
push
inc
jl
pop
xchg
pop
mov
xchg
jg
je
jg
pop
movs
jl
pop
xchg
aas
mov
jg
push
mov
pop
xlat
imul
nop
stos
ret
jmp
ror
test
aam
imul
push
iret
jo
fcmovbe
aas
fistp
in
das
inc
in
sbb
sub
lea
cwde
lods
ds
lahf
xchg
rol
mov
call
pop
push
inc
ds
popf
fmulp
lods
cmp
sbb
sar
push
pop
mov
or
in
xchg
bound
js
mov
push
dec
arpl
test
mov
ret
or
fwait
mov
dec
cmp
in
invd
adc
lods
push
cmps
fwait
jns
dec
pop
cmp
mov
mov
or
pusha
daa
add
jp
scas
and
retf
adc
repnz
call
dec
es
cmp
jg
pop
out
push
neg
mov
and
call
out
dec
push
mov
fldcw
push
adc
enter
lods
ja
or
shl
xchg
repz
shl
sub
pop
sbb
loop
aaa
push
hlt
out
addr16
jae
loope
out
sti
imul
ret
jp
push
mov
dec
outs
mov
inc
mov
xchg
and
out
addr16
jp
outs
push
popf
not
lods
jnp
sbb
call
jecxz
jge
cmc
lods
loop
add
out
addr16
jb
cmp
pop
and
lods
stos
mov
out
outs
stos
arpl
test
sbb
cmp
jns
iret
cmp
sub
ins
clc
stc
add
jns
mov
jns
add
daa
ins
dec
fist
mov
mov
rcl
lock
fimul
ss
aad
test
cld
hlt
jne
ins
mov
shl
aad
enter
mov
pop
pop
push
bswap
jecxz
(bad)
jecxz
xlat
xlat
mov
das
ins
sbb
pushf
xor
jne
cmps
pop
sar
(bad)
jecxz
(bad)
jecxz
mov
adc
nop
jp
inc
int3
mov
out
push
sbb
push
inc
int3
arpl
jbe
dec
jecxz
ret
mov
cli
call
in
lods
push
mov
addr16
mov
jmp
push
lahf
inc
scas
lods
imul
cmps
lar
mov
and
icebp
add
jo
mov
pop
jno
cld
jmp
xchg
fwait
out
mov
dec
add
pop
adc
nop
jp
inc
dec
retf
mov
push
mov
push
(bad)
lods
jne
sbb
repnz
pop
mov
lahf
cmps
out
xchg
ds
push
xchg
mov
test
test
cmp
sahf
jb
aaa
dec
arpl
jnp
jbe
mov
push
mov
js
sbb
jnp
je
mov
jl
hlt
jp
push
ret
xor
stos
mov
repz
inc
mov
sbb
adc
sub
scas
push
(bad)
sti
mov
fs
mov
addr16
ret
ins
ins
lods
sub
sti
mov
adc
into
xchg
adc
mov
xchg
jl
lods
ja
inc
push
mov
imul
inc
call
mov
xor
push
adc
bnd
cmp
jne
and
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
xor
jne
and
cmp
xchg
inc
mov
fild
inc
dec
scas
mov
fidiv
cs
(bad)
aas
mov
adc
aas
loope
mov
adc
inc
les
mov
mov
add
dec
xchg
xchg
sub
shl
inc
mov
adc
bnd
xor
jne
xor
jne
cmp
jne
xor
jne
cmp
jne
xor
jne
and
jne
xor
jne
and
jne
xor
jne
sub
jne
xor
jne
sub
jne
xor
jne
xor
jne
dec
bnd
cmp
adc
cli
idiv
mov
ja
js
adc
repnz
push
mov
repnz
and
bnd
stos
scas
hlt
push
adc
sub
repz
pop
adc
xchg
jne
sbb
adc
xchg
ja
sbb
pop
adc
xor
cmp
jge
pushf
cmps
jbe
jl
dec
adc
repnz
pop
sbb
sbb
or
loop
repnz
mov
dec
or
pop
adc
fcomip
repnz
bnd
cmc
or
and
repnz
mov
add
cld
or
js
sbb
loopne
ja
cmp
push
adc
nop
jne
pusha
repnz
jmp
je
sub
dec
adc
out
xlat
ins
bnd
shl
test
sub
(bad)
cmps
idiv
repnz
adc
push
jo
or
mov
repnz
inc
or
stc
push
repnz
adc
retf
cmp
or
popa
jl
jge
dec
jbe
mov
repnz
loop
repnz
mov
not
repnz
cmp
add
shl
inc
ja
hlt
repnz
adc
repnz
out
test
jno
das
inc
je
in
repnz
scas
fdiv
inc
adc
repnz
jno
repnz
mov
pusha
jbe
in
add
test
repnz
or
adc
mov
pop
adc
jl
std
nop
repnz
ja
je
mov
inc
adc
push
jne
enter
std
shl
aam
or
inc
test
add
pop
pushf
repnz
adc
je
fdiv
ins
adc
jbe
shl
adc
std
jne
aam
adc
aam
je
nop
repnz
sub
mov
xchg
mov
retf
shl
dec
adc
xor
xor
adc
mov
sbb
int
jne
xchg
repnz
adc
repz
adc
repz
adc
mov
xor
mov
repz
mov
repz
daa
xor
push
js
pop
sbb
cmp
cmp
dec
adc
push
call
pop
xchg
idiv
pop
adc
arpl
je
repz
adc
mul
adc
xor
inc
or
adc
cmp
repz
push
xchg
jbe
sub
xor
jne
je
jo
popa
adc
ja
ins
repz
jl
test
arpl
cmc
push
pusha
repz
adc
test
or
jmp
adc
test
repz
adc
test
repz
xlat
adc
adc
pop
sub
and
adc
adc
adc
not
repz
xchg
add
or
enter
add
cmp
int
jbe
inc
repz
xor
jbe
mov
jne
xor
repz
cmp
neg
repz
sbb
jne
lock
movs
push
ja
mov
psadbw
repz
lahf
in
repz
sbb
sbb
sbb
dec
adc
add
sbb
movs
repz
cmc
mov
or
or
adc
dec
not
clc
repz
jo
jbe
mov
fnstenv
(bad)
repz
clc
xchg
jne
call
push
int3
lods
repz
adc
mov
add
fxtract
repz
imul
repz
ins
loope
jmp
je
lods
repz
adc
fcomip
retf
call
or
sbb
repz
pop
dec
ja
test
jno
rcr
adc
and
xchg
lods
repz
div
inc
shl
adc
dec
jne
lock
adc
test
push
lock
lock
adc
lock
aas
push
jne
cmp
xor
add
cmps
les
lock
and
cmp
in
sub
ins
adc
lock
adc
lock
sbb
outs
sbb
pop
adc
mov
mov
cmp
or
cmp
call
mov
idiv
mov
ja
and
add
repz
or
push
adc
neg
js
cmc
dec
sbb
pop
adc
cmc
retf
adc
neg
ins
lock
scas
sub
push
adc
shl
jl
lock
fdivr
lock
push
sahf
ja
sbb
popa
adc
jbe
and
jno
pop
cmp
or
lock
pop
lods
ja
xor
xor
adc
dec
adc
test
pusha
lock
adc
je
and
push
adc
xor
mov
test
fdiv
inc
adc
lock
mov
lock
iret
in
lock
jge
lock
adc
push
xchg
lock
adc
ja
loopne
adc
pop
sbb
jge
lock
sbb
imul
pop
hlt
jne
in
adc
and
fdiv
xor
jb
lock
adc
lock
adc
and
xchg
fdiv
imul
mov
cmp
ja
div
clc
inc
cmc
push
fdiv
inc
adc
xchg
test
pusha
jo
out
lock
in
je
xor
adc
(bad)
hlt
outs
(bad)
lock
adc
pop
idiv
rcr
jbe
shl
and
push
leave
je
nop
lock
adc
cmc
(bad)
aam
imul
in
cmp
inc
cld
je
mov
cmp
les
adc
mov
dec
sub
fdiv
imul
ins
icebp
jne
mov
jne
sub
add
mov
icebp
push
adc
icebp
and
cmp
jge
cmps
mov
inc
adc
icebp
dec
adc
dec
cmc
cli
pop
icebp
add
xchg
retf
div
xchg
arpl
dec
pop
icebp
adc
sbb
cmc
lds
icebp
add
push
xor
push
adc
div
jo
adc
pop
and
and
inc
adc
and
and
(bad)
pop
cmc
mov
icebp
sbb
lock
or
dec
adc
cmc
jnp
icebp
push
adc
test
hlt
push
sub
sbb
or
inc
adc
cwde
and
cmp
dec
ins
icebp
sub
out
dec
test
icebp
dec
adc
cwde
hlt
adc
adc
mov
pop
pop
imul
icebp
jns
fsubr
sub
inc
push
shl
inc
icebp
and
mov
icebp
jns
int3
daa
cmc
gs
sub
mov
cmc
add
jne
test
push
adc
movs
mul
mov
icebp
xor
and
cmc
(bad)
clc
icebp
jne
movs
dec
not
nop
mov
adc
icebp
xor
clc
cwde
icebp
jns
sbb
icebp
jge
add
cmp
je
loopne
sub
or
daa
cwde
icebp
and
mov
shl
jne
lock
ja
mov
lods
neg
icebp
or
stc
ins
jne
cwde
icebp
jno
jle
je
clc
icebp
jns
pusha
inc
ja
fdiv
add
fs
div
icebp
or
out
jle
jns
icebp
sub
shr
jns
fimul
xor
fstp
and
icebp
popa
adc
cmc
push
aam
cmp
in
mov
loope
or
icebp
add
int3
xor
fistp
jbe
pop
mul
adc
sub
div
test
idiv
adc
imul
adc
dec
adc
sub
call
adc
mul
adc
idiv
push
pop
imul
or
or
enter
adc
neg
and
xor
hlt
sbb
(bad)
idiv
adc
jl
jbe
push
imul
arpl
jg
idiv
adc
mov
pop
adc
ja
inc
not
rcl
jne
rcl
jne
push
neg
adc
add
add
dec
adc
test
fidiv
cmc
and
jne
ret
lea
neg
adc
xchg
jne
sbb
adc
in
sub
dec
adc
cmp
popa
adc
popa
adc
mul
mov
test
stc
ja
pushf
imul
mov
idiv
mov
cmps
(bad)
jb
neg
sub
idiv
lock
lea
push
cmc
jl
mul
aam
test
sahf
adc
mov
pop
adc
div
xchg
and
or
(bad)
in
test
test
sbb
mov
not
and
clc
sub
xor
test
(bad)
stc
hlt
jecxz
neg
loop
je
shl
adc
addr16
test
pop
adc
mov
or
jbe
loopne
cmp
push
movs
imul
adc
test
in
add
mov
inc
sahf
ja
in
jno
dec
push
jbe
xor
adc
retf
pop
adc
mul
mov
test
pop
not
adc
idiv
and
div
test
adc
not
adc
lock
sbb
xchg
cmp
and
cdq
call
jno
sahf
and
aaa
inc
neg
add
ja
add
push
adc
jne
ins
test
in
test
adc
cli
jbe
cmp
or
jbe
hlt
inc
jl
cmp
jns
not
dec
add
adc
idiv
adc
jbe
add
pop
adc
pusha
jne
xor
inc
adc
je
jle
test
mov
inc
adc
push
test
mov
cmp
ret
or
not
gs
cmps
test
pop
test
sbb
and
sar
pop
clc
idiv
adc
sub
mov
jecxz
push
int3
mul
adc
ss
aad
div
es
enter
adc
out
jb
imul
sub
cmc
mov
adc
mul
adc
imul
jns
test
dec
mov
dec
jbe
in
push
adc
call
or
neg
jp
test
jge
cmc
fucomi
mul
loope
test
out
test
test
adc
loope
pop
test
jge
push
xor
int3
test
mov
inc
adc
fcomip
loopne
neg
adc
out
fdiv
xor
inc
cmc
cmc
cmp
mul
inc
push
jbe
loopne
jne
dec
shl
mul
mul
xor
xchg
push
pop
je
adc
sub
cmp
cwde
push
hlt
push
adc
ja
xor
add
and
sub
and
test
adc
or
pop
sub
adc
cmc
jl
or
and
hlt
and
push
jg
adc
hlt
and
mov
hlt
ins
adc
hlt
jge
or
ja
or
sub
or
hlt
jns
jno
cmc
push
pop
hlt
pop
adc
popa
ja
sbb
sbb
imul
ins
pop
hlt
imul
pop
hlt
cmp
push
cmp
xchg
sbb
adc
push
out
hlt
inc
dec
hlt
inc
adc
ins
hlt
lea
add
fnstsw
push
adc
cmc
cmps
pusha
hlt
and
jne
hlt
jne
leave
stos
hlt
call
into
jle
cmp
cmp
in
mov
cmp
mov
idiv
mov
mov
lods
hlt
dec
adc
hlt
inc
adc
hlt
adc
in
movs
hlt
add
test
scas
enter
hlt
xor
stos
movs
hlt
imul
(bad)
hlt
cmp
sbb
push
adc
not
hlt
pop
adc
mov
lahf
fdiv
pop
adc
hlt
sub
mov
cmc
hlt
nop
hlt
jns
or
hlt
jne
jb
je
mov
pop
adc
stos
cmc
sar
mul
jns
inc
hlt
int3
int3
hlt
cmp
jecxz
jbe
fdiv
popa
adc
and
jge
push
hlt
push
enter
out
adc
mov
gs
imul
mov
inc
neg
hlt
jno
pop
mov
ins
shl
adc
jns
hlt
xor
inc
clc
hlt
inc
adc
xchg
shl
sbb
dec
dec
hlt
adc
into
mov
shl
adc
js
not
not
or
sub
sti
adc
sub
mov
cmc
jne
mov
cmc
push
adc
cmc
jno
sub
jne
inc
cmc
adc
inc
sbb
xor
loope
cmc
adc
xchg
mov
push
adc
cmc
adc
sahf
push
ja
xor
dec
adc
cmc
or
daa
sub
inc
adc
(bad)
cmc
mov
or
cmc
inc
adc
xor
push
cmc
imul
xor
popa
adc
pop
test
push
adc
imul
push
adc
dec
hlt
je
cmc
popa
adc
xchg
mov
cmc
add
imul
je
pop
cmc
sbb
rcr
hlt
push
pusha
cmc
push
adc
shl
cmc
jns
fadd
jbe
or
sub
shr
add
cmc
sub
inc
(bad)
imul
dec
push
cmc
inc
fs
cmp
dec
sub
add
sub
pusha
enter
ss
je
mov
pop
cmc
push
shl
adc
adc
iret
in
cmc
jno
movs
es
(bad)
pushf
cmc
cmp
stos
mov
xor
pushf
hlt
cmc
ins
adc
jg
dec
xor
adc
cmc
ins
adc
add
in
test
jno
sahf
dec
jne
shl
adc
cmc
adc
shl
mov
fcomip
out
cmc
adc
cmc
or
jb
idiv
(bad)
cmc
and
jbe
cmc
cmps
clc
cmc
inc
adc
idiv
cmc
inc
adc
sub
sbb
jmp
test
cmc
dec
adc
test
out
pop
jbe
shl
or
ror
hlt
mov
cmc
add
cmc
ins
adc
je
(bad)
cmc
pop
adc
cmp
cmc
popa
adc
ja
mov
sub
cmp
retf
lods
mov
and
sub
jne
push
cli
sbb
adc
cli
sub
cmp
mov
and
fidiv
je
or
push
es
pop
ins
cli
cmp
sub
imul
fs
pop
adc
cli
adc
xor
repnz
cli
inc
adc
cli
xor
test
neg
cli
adc
cli
xor
cmp
popa
adc
jne
inc
cli
adc
je
ja
adc
inc
adc
data16
push
cli
jno
(bad)
mov
cmp
and
arpl
aam
cli
cmp
pop
sbb
ins
adc
hlt
outs
pop
cli
imul
sbb
push
adc
fwait
jbe
dec
cli
add
repz
cli
and
pop
or
dec
adc
pop
hlt
int3
and
sbb
mov
(bad)
cmp
adc
or
retf
dec
push
cli
push
adc
outs
neg
xor
rcl
mul
cld
cli
inc
adc
cli
popa
adc
repz
int3
cli
sub
mov
cli
pop
adc
or
push
hlt
cli
jge
stos
pushf
je
lock
sbb
mov
jbe
cwde
cli
adc
lds
cli
imul
lock
pop
adc
cli
or
aad
cli
imul
mov
xor
mov
sub
in
lock
and
jo
je
movs
cli
ins
adc
neg
cli
cmp
js
idiv
mov
xor
jb
cli
popa
adc
mov
add
in
idiv
call
cli
sbb
js
cli
and
push
adc
call
(bad)
fdivr
jns
fld
dec
adc
loope
mov
inc
div
repz
jge
inc
std
jne
nop
cli
add
cmp
hlt
jne
cli
sbb
xor
int
sti
imul
add
pop
adc
outs
test
dec
sti
jne
and
test
or
xor
test
cmc
fisttp
adc
sti
xor
nop
mov
cmp
xchg
ins
not
sbb
test
sti
xor
(bad)
sbb
dec
adc
pushf
test
cmp
sahf
or
adc
sti
jno
mov
xor
addr16
sbb
and
repz
cmp
ss
sti
or
in
sti
pop
adc
mov
dec
adc
outs
ja
and
sbb
(bad)
cmp
jle
sti
and
enter
inc
sti
jno
int
je
and
xor
mov
jbe
cmp
adc
cmp
xchg
(bad)
sti
imul
enter
cmps
hlt
stos
mov
sbb
xor
sti
and
and
sti
push
adc
add
enter
lods
cld
jne
in
sti
jno
adc
mul
in
sti
cmp
sbb
jne
loopne
sub
sbb
sti
inc
adc
pop
idiv
xchg
je
nop
sti
sbb
cdq
loopne
or
push
(bad)
mov
push
adc
hlt
mov
jbe
je
aam
ins
adc
mov
mov
sti
jno
std
arpl
(bad)
in
and
loop
jne
(bad)
sti
sub
fs
cmp
mov
sti
sub
addr16
sti
jge
rcr
idiv
mov
or
sub
sti
sbb
pusha
cmp
adc
cmc
mov
sti
push
adc
ja
in
sti
adc
inc
and
test
sti
push
adc
hlt
jnp
sti
add
dec
push
je
lods
sti
sbb
cmp
aaa
mov
adc
mov
mov
cmp
test
jnp
xchg
pusha
clc
or
cmps
pop
jbe
cmp
imul
xor
popa
adc
clc
inc
adc
xchg
ja
cmp
adc
xchg
sub
jne
sbb
xor
les
popa
adc
clc
xor
push
std
cmc
stc
xor
sbb
inc
dec
clc
add
mov
adc
jb
gs
movs
je
sub
inc
adc
jno
xchg
cmp
adc
cld
pop
test
pop
adc
jne
sbb
jno
fidiv
xor
and
imul
je
inc
clc
xor
ja
clc
jge
push
test
inc
adc
cmc
rcr
adc
xchg
jbe
jo
sbb
shr
pusha
clc
sbb
(bad)
and
ficom
clc
jne
retf
(bad)
je
or
jns
dec
add
adc
sbb
mov
jbe
aam
add
lahf
movs
clc
jne
mov
clc
and
ds
test
mov
clc
sbb
dec
call
in
hlt
jle
clc
jge
sub
clc
or
outs
loopne
xor
fs
clc
imul
mov
jns
push
(bad)
test
jle
pop
loopne
cmp
cmp
clc
adc
clc
popa
adc
push
adc
mov
retf
in
add
je
cmc
mov
jnp
imul
xor
loopne
clc
dec
adc
cmc
mov
clc
add
addr16
cmc
cmc
mov
sbb
nop
clc
adc
out
inc
imul
lods
clc
cmp
mov
(bad)
inc
mul
mov
sub
aas
sar
adc
cmc
adc
clc
jno
shl
adc
add
mov
clc
inc
adc
dec
cmc
add
dec
or
mov
mov
imul
xor
jne
sub
pop
adc
cs
sub
adc
mov
stc
or
or
cmps
jge
push
push
stc
adc
stc
and
cs
adc
stc
sub
adc
or
xchg
nop
je
ins
stc
pop
adc
inc
jbe
xor
jns
popf
lahf
ja
or
adc
pop
or
cmp
xchg
ja
js
imul
or
adc
sbb
xlat
adc
adc
imul
js
pop
adc
test
jl
cmc
fdiv
adc
call
push
adc
cmp
add
int
stc
sbb
push
pop
neg
sbb
dec
adc
xor
pop
sti
test
cmp
cmp
shl
pop
stc
push
adc
or
enter
jl
ins
adc
jne
pusha
stc
adc
xor
xor
idiv
stc
sbb
mov
stc
popa
adc
idiv
aam
add
and
ja
mov
cmp
cmps
cld
test
mov
dec
adc
stc
adc
adc
ja
test
adc
sbb
stc
and
sbb
stc
pop
adc
mov
retf
or
add
enter
add
stc
or
pusha
call
pop
cmc
(bad)
lods
stc
jge
jae
neg
sub
and
stc
ins
adc
xchg
jne
loopne
adc
cld
(bad)
ja
movs
stc
gs
adc
lock
xor
lock
stc
cmp
mov
stc
or
and
xchg
cmc
mov
stc
and
push
(bad)
jne
call
dec
neg
lods
stc
sbb
pop
popf
cmc
or
stc
dec
adc
hlt
mov
neg
stc
cmp
leave
adc
stc
or
into
(bad)
jbe
mov
pop
adc
(bad)
adc
imul
mov
(bad)
sbb
inc
sbb
pop
adc
dec
adc
cld
je
dec
dec
stos
push
pop
ja
fs
pop
adc
jmp
dec
push
dec
adc
or
adc
fdiv
and
push
cmp
imul
add
adc
(bad)
pop
adc
jecxz
and
adc
je
add
push
adc
jbe
inc
inc
adc
mov
or
cli
ja
ins
and
pop
adc
push
(bad)
imul
ins
(bad)
cmp
data16
jbe
sub
jns
imul
adc
ja
ret
dec
(bad)
gs
mov
xor
mov
dec
pop
(bad)
ja
xor
sbb
adc
mov
cmp
repnz
adc
repnz
cmp
neg
repnz
mov
bnd
and
mov
repnz
adc
repnz
test
je
cmp
inc
adc
repnz
adc
push
adc
test
call
adc
repnz
and
pop
shl
repnz
adc
repnz
adc
jb
ja
xor
xor
idiv
jge
jnp
neg
repnz
adc
mov
repnz
loop
test
repnz
out
je
inc
repnz
jmp
repnz
adc
loope
cmc
sbb
adc
fisttp
cmp
(bad)
inc
je
or
jge
fmul
adc
out
je
inc
repnz
adc
cmp
dec
repnz
(bad)
pop
je
inc
bnd
retf
bnd
add
inc
adc
daa
je
push
repnz
xor
je
mov
jmp
cmp
mov
repnz
shl
adc
bnd
es
fld
test
sbb
mov
repnz
mov
repnz
adc
bnd
fwait
xchg
jne
aam
and
sbb
bnd
sbb
iret
mov
sub
(bad)
inc
cmc
cmp
repnz
adc
and
add
bnd
cmc
xchg
imul
mov
pop
jne
call
pushf
neg
repnz
loop
mul
shl
adc
hlt
xchg
repnz
imul
adc
not
mov
jmp
push
std
jne
xor
adc
mov
jno
fstp
je
lock
ret
mov
inc
mov
cmp
repnz
popa
mov
ja
mov
repnz
mov
jbe
dec
repz
adc
jbe
ins
rep
adc
repz
adc
repz
adc
pusha
ja
add
inc
adc
adc
test
div
repz
repz
adc
jbe
pop
repz
adc
cmc
je
and
add
call
adc
repz
(bad)
repz
test
inc
adc
adc
dec
repz
mov
cmp
dec
js
or
fistp
repz
adc
es
pop
repz
adc
repz
jl
or
adc
repz
adc
scas
test
and
push
repz
outs
dec
jne
sbb
jns
sar
cmc
pop
repz
es
jge
ret
(bad)
sub
inc
adc
jg
shr
adc
mul
repz
dec
pop
hlt
inc
cmp
inc
adc
(bad)
je
test
sub
mov
ja
clc
repz
cmp
ja
mov
xor
mov
repz
repz
adc
sbb
sub
test
sbb
ins
mov
sub
adc
xor
repz
adc
repz
cdq
push
hlt
retf
pop
adc
ja
enter
add
ja
test
push
adc
or
mov
and
cmp
repz
mov
inc
adc
adc
ss
pop
adc
hlt
aas
test
popa
adc
jbe
int3
repz
adc
test
ret
hlt
sub
repz
gs
jbe
mov
pop
adc
je
mov
or
fcmovne
repz
rol
xchg
in
repz
mov
jns
fldenv
jns
pop
jnp
and
repz
hlt
inc
test
and
xchg
mov
scas
jne
cld
repz
into
jnp
jae
repz
adc
push
ja
or
sub
aaa
ret
jne
xor
jns
mov
lock
out
and
sub
cmp
cmps
jnp
(bad)
sbb
ins
adc
lock
cs
cmc
dec
push
lock
adc
lock
cdq
jo
sbb
or
lock
adc
lock
add
jbe
cmp
push
adc
imul
inc
lock
or
and
jmp
mul
jbe
hlt
jae
lock
push
or
pop
adc
cmc
xchg
dec
lock
test
inc
ja
pusha
lock
adc
jne
and
jno
ins
out
ja
pusha
lock
push
xchg
jne
cmp
sbb
pop
jl
sub
pop
cmps
hlt
pop
adc
cmp
add
shr
(bad)
ins
lock
sub
lock
mov
add
iret
(bad)
cmc
cmp
and
enter
adc
mov
cs
push
adc
lock
sbb
lock
mov
lock
cmps
pop
hlt
ins
in
lock
jle
lock
cs
ja
lods
lock
push
call
xchg
sub
cmc
xchg
hlt
lock
adc
ja
mov
sub
add
jne
in
lock
push
out
inc
call
mov
sub
dec
xchg
lock
shr
lock
hlt
cmc
je
mov
sub
movs
lock
mov
sbb
loopne
jbe
call
xor
mov
lock
push
lock
adc
or
xchg
jbe
loopne
sbb
dec
cld
lock
jbe
int3
lock
outs
mov
xor
mov
inc
jae
push
mov
cmps
test
xor
adc
xchg
idiv
xor
neg
xor
dec
adc
(bad)
hlt
int
icebp
sbb
push
icebp
ins
adc
jle
loopne
icebp
push
adc
icebp
add
outs
sbb
push
adc
icebp
add
scas
add
sbb
mov
ins
adc
icebp
cmp
pop
pusha
icebp
sbb
pop
jo
inc
adc
shl
neg
icebp
sub
xchg
pop
icebp
add
mov
cmc
adc
icebp
pop
adc
fcomip
pop
adc
push
adc
lea
push
icebp
and
xchg
jne
cld
or
les
icebp
add
loope
neg
cmp
and
out
idiv
imul
je
jo
and
aam
hlt
mov
icebp
jge
fild
adc
sub
ja
icebp
popa
adc
ja
jo
jge
dec
adc
icebp
sub
pop
mov
cmp
mov
jne
enter
mov
icebp
or
cmp
icebp
imul
in
icebp
popa
adc
icebp
xor
stos
xor
cs
icebp
pop
adc
icebp
or
gs
icebp
sub
xchg
pushf
icebp
add
test
icebp
imul
mov
jae
jg
icebp
xor
xchg
popa
adc
jae
or
jbe
test
jns
bound
aaa
clc
icebp
jne
fs
cmc
xor
icebp
xor
imul
in
icebp
xor
push
out
jne
mov
into
je
test
dec
adc
je
aam
pop
adc
xchg
jbe
nop
icebp
gs
inc
je
mov
xor
(bad)
xor
or
cmp
hlt
jne
not
dec
pop
imul
das
stos
hlt
iret
sbb
add
sbb
not
xchg
fbstp
sub
xor
call
adc
idiv
xchg
imul
push
pop
idiv
mov
inc
adc
sub
(bad)
div
dec
neg
adc
xor
test
push
hlt
ja
inc
test
repz
lock
div
(bad)
jmp
adc
sbb
inc
adc
cmp
sub
and
shr
jl
inc
adc
mov
xor
push
sbb
jno
pop
test
sub
inc
in
(bad)
popa
adc
push
cmp
xor
enter
or
jno
int
je
push
test
and
div
mov
jbe
mov
mov
and
xabort
jne
cs
adc
push
xchg
mov
jae
add
mov
and
sbb
jne
(bad)
mul
add
imul
scas
test
sub
clc
aam
popa
adc
sahf
jne
nop
test
dec
ja
shl
adc
hlt
sub
neg
arpl
test
test
nop
mul
adc
test
mov
pop
lods
mul
shl
jbe
test
add
(bad)
mov
shl
or
pop
mov
rcr
loope
test
(bad)
mov
cmc
jbe
cwde
not
iret
dec
jne
mov
xor
mov
hlt
adc
dec
adc
imul
mov
idiv
adc
ins
adc
neg
adc
test
xor
jge
scas
sbb
sub
xor
adc
dec
push
not
push
ins
test
mov
dec
adc
leave
cmc
adc
adc
add
ret
and
inc
adc
imul
or
add
sub
jno
ja
add
dec
adc
hlt
jo
test
adc
not
adc
push
je
pop
test
sbb
push
adc
test
add
push
neg
outs
xchg
hlt
sbb
hlt
fist
div
or
pop
push
hlt
or
pop
adc
inc
idiv
adc
jne
push
imul
inc
fcomi
fiadd
mul
retf
icebp
div
sbb
dec
adc
jne
or
imul
int3
idiv
adc
imul
mov
not
adc
jbe
aam
add
mov
idiv
xor
imul
stos
xchg
cmp
push
hlt
call
xchg
push
ja
in
jns
xchg
retf
jne
int3
imul
adc
shl
xor
adc
xor
add
jbe
lods
test
xchg
div
adc
add
mov
inc
adc
aaa
idiv
popa
adc
hlt
scas
shl
xor
ja
je
mov
mov
push
adc
pop
mul
test
int3
imul
cli
aam
sbb
imul
jp
test
xor
adc
loope
cmp
neg
(bad)
xor
call
fldcw
lock
neg
pop
mov
sbb
div
inc
fs
cwde
mul
adc
pop
cmc
jb
test
mov
dec
xor
not
adc
hlt
dec
adc
leave
test
hlt
pop
or
dec
adc
hlt
imul
adc
and
popf
jl
xor
sub
hlt
not
add
scas
pop
jne
xor
and
js
hlt
sbb
mov
hlt
dec
adc
mov
frstor
adc
hlt
or
add
jne
adc
sub
xchg
adc
clc
ja
ins
hlt
adc
mov
jb
imul
jl
push
adc
hlt
cmp
add
sti
arpl
pop
hlt
jne
cld
mov
cdq
pop
hlt
and
pop
xor
inc
adc
aam
hlt
jne
imul
out
stc
je
jo
adc
push
out
mov
push
xor
xor
pop
adc
je
jo
push
adc
jbe
inc
hlt
add
cdq
add
add
dec
xor
push
adc
test
je
jno
dec
inc
ja
xor
add
xor
push
adc
and
cmp
ja
aam
add
pop
cwde
hlt
push
adc
mov
push
shl
adc
cmps
jne
mov
jns
sub
hlt
push
mov
push
je
xor
adc
hlt
xor
xchg
jmp
sbb
push
hlt
and
push
in
push
adc
hlt
add
fsubr
hlt
jne
or
pop
adc
test
mov
push
adc
hlt
dec
fdiv
inc
adc
das
not
hlt
sub
(bad)
cli
hlt
cmp
adc
push
xor
adc
imul
outs
dec
hlt
jp
hlt
xor
popf
mov
adc
push
daa
je
lock
sub
inc
clc
hlt
jge
pop
xchg
cmc
in
aam
pop
adc
hlt
ror
jo
mov
hlt
dec
adc
cmc
push
xor
adc
je
mov
xor
push
or
sub
mov
ja
cmp
push
adc
sbb
jmp
jne
fs
or
and
test
cmc
cmp
shl
ins
adc
cmc
pop
adc
inc
adc
lea
dec
cmc
inc
adc
ret
jne
or
xor
sub
adc
cmc
dec
adc
cmc
imul
jo
add
sti
push
cmc
push
adc
aaa
jbe
pop
cmc
inc
adc
xor
cmc
inc
adc
jecxz
adc
cmc
and
shr
adc
jno
(bad)
sub
cmp
sub
in
je
xor
sub
call
cmc
cmp
cld
sbb
ins
adc
cmps
jne
push
sub
repz
sub
and
jge
(bad)
jne
inc
cmc
sub
dec
add
pop
adc
fiadd
sbb
dec
xchg
jne
ins
cmc
dec
adc
je
add
pop
adc
leave
cmc
xchg
ja
shl
jno
mov
cmc
and
aas
sbb
push
mov
jge
mov
cmc
add
cmp
test
hlt
push
mov
xor
cmp
adc
call
pop
mov
aad
cmc
ins
adc
cmc
adc
lock
and
and
hlt
jmp
or
enter
or
jne
lock
and
jb
idiv
sub
jne
cmc
scas
nop
cmc
jns
jp
not
cmc
sbb
cld
add
xor
test
in
neg
cmc
jne
imul
adc
je
xchg
cmc
cmp
shl
hlt
jno
cmc
push
adc
div
mov
pop
pop
je
fdiv
inc
adc
jbe
shl
adc
cdq
pushf
cmc
sbb
push
clc
cmc
cmp
dec
not
mov
jecxz
les
test
cli
inc
adc
push
adc
adc
mov
cli
imul
pusha
cli
and
and
inc
cli
jno
daa
out
je
cli
inc
adc
cli
push
adc
cli
imul
sbb
adc
xchg
loope
push
pop
cli
sbb
call
adc
cli
push
adc
jg
lods
je
add
test
jne
xor
or
mov
pop
adc
or
or
or
jae
cli
xor
jbe
cmc
out
cli
adc
icebp
fs
and
jle
jne
and
sbb
fmul
cli
dec
adc
jbe
adc
ins
adc
cmps
ja
or
and
outs
dec
jbe
cmp
cmp
shl
jno
push
xor
adc
je
cmp
push
adc
(bad)
push
cli
push
adc
test
inc
hlt
pop
pop
cli
ins
adc
jl
fist
or
dec
pop
hlt
cli
dec
cli
cmp
adc
xor
cmc
(bad)
mov
imul
nop
cli
jge
cmp
neg
cli
inc
adc
cli
sbb
cld
nop
cli
pop
adc
sub
mov
lods
popa
cmc
popf
aam
add
dec
hlt
cli
push
adc
cs
call
pop
hlt
scas
lods
cli
sub
push
xchg
cmc
xor
xor
cmp
cli
sub
mov
ja
int3
cli
jno
mov
jne
cld
cli
jno
jno
je
mov
fdivp
in
cli
and
js
cli
popa
adc
je
mov
stos
jbe
clc
cli
imul
nop
cli
sbb
push
idiv
outs
sbb
cli
dec
adc
je
sar
imul
mov
cmp
pop
or
or
cli
imul
nop
cli
and
inc
int3
mul
enter
mov
icebp
mov
dec
adc
push
hlt
and
mov
adc
xor
cmp
cmp
pop
adc
sti
or
push
xor
ins
adc
sti
or
movs
bound
adc
imul
inc
sti
dec
adc
sti
add
cmp
sti
add
aam
sti
xor
shl
or
adc
imul
fs
inc
adc
cmc
inc
and
adc
and
adc
sti
inc
adc
imul
xor
inc
adc
cmp
adc
cli
push
hlt
test
sti
cmp
cld
int
addr16
adc
test
inc
adc
ja
xor
add
push
adc
add
bound
adc
sti
neg
sti
xor
push
retf
pop
sti
inc
adc
jne
dec
sti
inc
adc
jbe
or
push
adc
je
jo
add
inc
cmp
pop
pusha
sti
jns
dec
retf
adc
adc
iret
push
je
fs
xor
add
mov
cmc
bound
xor
sti
jns
mov
sti
adc
or
inc
adc
sti
or
test
ja
sar
adc
hlt
inc
sar
adc
sti
add
xchg
dec
neg
test
sub
jmp
jbe
mov
or
and
sti
cmp
xchg
neg
mov
cmp
mov
repnz
mov
adc
hlt
dec
div
ins
adc
cmc
mov
sti
popa
adc
lods
ja
call
stc
cmc
out
sti
sub
push
test
jno
push
sti
xor
in
inc
je
call
xchg
jbe
fdivr
sub
push
fwait
jne
in
cmp
(bad)
jne
mov
mov
or
inc
div
lods
sti
sbb
inc
call
lds
(bad)
sti
add
iret
leave
hlt
pop
cmp
adc
clc
xor
adc
ja
sub
jne
mov
ja
push
repnz
xor
and
hlt
adc
and
pop
sub
cmp
movs
pop
jne
sub
cmp
xor
repnz
push
adc
pusha
repnz
cmp
call
adc
lods
hlt
int3
or
inc
adc
bnd
pop
lds
repnz
or
cmp
repnz
adc
cmp
mov
cmc
sbb
repnz
jnp
cmc
lock
inc
repnz
bound
shl
adc
fnstenv
pusha
repnz
jmp
je
xor
sub
out
add
repnz
push
addr16
and
inc
adc
stos
inc
repnz
xor
pop
adc
mov
inc
ins
jne
je
cmp
and
repnz
adc
and
push
fs
adc
and
add
or
mov
test
clc
repnz
adc
repnz
cmp
jne
aam
pop
adc
adc
mov
and
jne
fdiv
pop
adc
push
je
fdiv
cmp
cs
jne
fdiv
inc
adc
mov
popa
adc
repnz
dec
loopne
ins
adc
add
scas
loopne
push
adc
test
mov
cmp
mov
xchg
fdiv
add
(bad)
push
jne
mov
xor
movs
repnz
hlt
pop
cmc
in
cld
repnz
js
jne
enter
jecxz
ja
fdiv
sbb
in
cmc
mov
inc
adc
jne
lock
adc
mov
mov
bnd
shl
je
fdiv
or
cli
mov
stc
mul
shl
add
pop
push
cmc
cwde
mov
sub
sar
(bad)
ins
adc
dec
nop
repnz
leave
cdq
test
hlt
ins
cld
bnd
mov
test
jns
aaa
dec
hlt
mov
mov
repz
adc
int3
jbe
dec
repz
retf
dec
repz
adc
repz
mov
scas
mov
jno
xchg
shl
test
imul
dec
repz
sbb
ja
pop
repz
pop
sub
adc
sub
repz
mov
mov
ja
pusha
repz
adc
repz
xchg
sbb
sub
cmc
xlat
cmc
xor
repz
js
test
repz
out
cmc
out
sbb
or
loope
jne
dec
repz
shl
js
adc
jmp
repz
(bad)
fs
push
sbb
add
sbb
adc
repz
hlt
mov
fdivr
or
repz
rcl
sahf
and
adc
lds
or
retf
repnz
repz
adc
inc
add
jns
xor
je
nop
repz
mov
jno
sbb
repz
adc
pop
cmc
daa
lock
and
ja
lock
and
mul
aam
sub
sbb
lods
jge
pusha
hlt
repz
adc
jne
aad
not
fdiv
dec
adc
and
xor
adc
adc
repz
adc
inc
imul
dec
push
hlt
push
mov
xor
xor
div
cmp
je
jl
sbb
arpl
adc
mov
jne
and
je
or
cmp
stos
test
xor
lods
div
inc
lock
adc
stos
mul
adc
jbe
or
jne
sbb
jbe
cmp
jno
lahf
shl
xchg
pop
lock
adc
sbb
bound
and
sbb
mov
je
or
jns
(bad)
jbe
or
pop
adc
retf
div
sub
adc
ret
pusha
lock
sti
jecxz
push
pusha
lock
adc
jbe
add
gs
push
neg
lock
add
imul
sub
sub
out
jg
mov
lock
pop
lock
cli
pop
lock
adc
xor
cmp
cmp
fadd
hlt
push
sub
pop
adc
jne
xor
push
adc
ja
push
sbb
and
into
dec
hlt
sub
lock
mov
jne
enter
xor
ja
cwde
lock
cmp
je
xchg
lock
ds
shl
adc
lock
adc
adc
sub
hlt
xchg
lock
adc
adc
cmp
lock
push
mov
push
sbb
mov
cmc
dec
mov
jbe
mov
jbe
movs
lock
or
imul
nop
lock
jae
je
call
add
push
cli
or
dec
test
adc
xchg
fdiv
jns
jecxz
ja
mov
and
lock
adc
hlt
xchg
mov
inc
adc
not
lock
test
popa
adc
mov
hlt
lock
adc
in
lock
add
jbe
lock
ret
sbb
add
(bad)
xchg
je
loopne
add
dec
je
push
aam
imul
loopne
sub
lods
pop
icebp
jno
aaa
dec
jne
pop
icebp
adc
clc
add
dec
adc
icebp
adc
mov
icebp
push
adc
icebp
sub
sub
jno
sbb
jbe
ins
icebp
imul
cmp
add
cmps
dec
icebp
sbb
fsub
adc
adc
cmp
adc
mov
add
push
adc
cld
ja
and
xor
cmps
pop
icebp
and
ret
gs
call
jmp
adc
xchg
icebp
adc
push
jo
jo
icebp
and
(bad)
add
adc
mov
(bad)
je
inc
icebp
xor
daa
push
icebp
cmp
(bad)
mov
add
icebp
or
dec
loopne
mov
into
inc
cmc
fst
adc
cmp
loop
icebp
ins
adc
push
jbe
int3
icebp
xor
pop
nop
icebp
sbb
aad
icebp
sbb
and
sub
or
stos
dec
ja
mov
bound
icebp
add
mov
adc
icebp
push
adc
icebp
cmp
lahf
ret
clc
icebp
and
and
mov
icebp
jne
pop
jno
ror
icebp
dec
adc
iret
div
icebp
or
or
icebp
adc
rep
je
clc
icebp
add
test
adc
icebp
idiv
mov
add
jge
cmc
and
arpl
push
adc
cmc
test
icebp
xor
imul
adc
hlt
test
test
icebp
sbb
push
sub
adc
movs
icebp
dec
adc
je
cld
icebp
or
rcr
adc
jp
mov
dec
daa
cmc
sub
icebp
adc
dec
xchg
test
icebp
cmp
mov
test
xchg
cs
not
cmp
test
emms
xor
test
outs
ja
sub
sbb
and
jbe
pop
test
sub
jns
scas
aam
sbb
cmp
xchg
pushf
jbe
xor
or
pusha
or
or
cwde
out
add
pop
adc
not
xor
adc
test
add
jne
or
jbe
adc
sbb
mov
div
je
ja
inc
test
mov
add
mov
popa
xor
idiv
addr16
dec
test
imul
inc
adc
test
cmp
jne
push
repz
test
pop
inc
je
push
idiv
adc
leave
ja
add
or
ret
(bad)
ins
pop
imul
adc
hlt
stos
and
xor
enter
sub
jno
dec
cmps
jbe
not
xor
mov
xor
fsubr
imul
mov
not
adc
mov
dec
adc
jbe
mov
inc
adc
test
dec
cmc
rol
div
xchg
aaa
neg
shl
adc
xchg
jbe
mov
pop
jbe
lods
idiv
adc
jbe
clc
div
sub
imul
mov
or
dec
clc
test
inc
cmc
mov
jno
ja
fdiv
xor
je
imul
jnp
jbe
pushf
div
adc
leave
imul
enter
loop
hlt
arpl
imul
mov
jns
jmp
jne
pushf
neg
adc
hlt
outs
shl
adc
stos
je
pushf
test
int3
mul
adc
cmc
adc
pop
ja
test
jns
inc
shl
div
inc
sbb
cld
not
dec
push
jbe
shl
jno
iret
jp
add
neg
xor
ja
pop
neg
adc
mul
mov
div
mov
not
xor
test
inc
div
sub
jno
scas
test
bnd
test
jne
xor
out
repnz
ss
push
je
or
and
adc
repnz
mov
repnz
daa
pop
mul
push
pop
jne
sub
or
lods
(bad)
ja
add
pop
adc
bnd
adc
idiv
sbb
and
cmp
and
or
repnz
adc
add
mov
jne
lea
nop
cmp
add
lock
pop
adc
nop
imul
inc
repnz
jns
jbe
pop
repnz
adc
cmps
hlt
shl
and
push
inc
repnz
adc
jmp
and
pop
je
jne
outs
das
jne
xor
popa
adc
ja
add
xor
(bad)
stc
not
repnz
push
xor
jno
pop
dec
je
sub
and
inc
and
dec
repnz
lds
ja
sub
pop
adc
pop
ja
cmp
inc
adc
mov
repnz
adc
sahf
not
repnz
xor
cmc
(bad)
mov
inc
adc
bnd
mov
repnz
and
jbe
mov
hlt
jbe
xchg
repnz
sub
jbe
shl
or
imul
repnz
cs
stos
hlt
mov
sahf
mov
jns
sub
adc
repnz
or
test
jne
push
add
and
shr
repnz
adc
mov
mov
mov
popa
adc
je
nop
repnz
adc
ja
and
repnz
in
not
jmp
adc
idiv
repnz
adc
cld
jbe
nop
repnz
fadd
mov
rcl
jne
(bad)
repnz
cmp
xchg
je
shl
adc
push
je
mov
mov
sub
mov
jbe
cmp
jns
aaa
add
ds
and
in
jl
jne
ds
xchg
sbb
and
mov
repz
lods
cmp
jne
sub
jne
sub
jne
dec
repz
xchg
pop
jbe
add
xor
fstp
adc
repz
int
repz
add
pop
repz
test
jne
push
fs
inc
repz
adc
repz
adc
not
jbe
jne
inc
repz
adc
test
inc
neg
jl
jne
popa
aas
jbe
ins
repz
adc
scas
jbe
dec
rep
adc
jbe
je
dec
adc
jne
xor
inc
adc
not
repz
adc
std
cmp
inc
adc
in
iret
cmp
and
pop
xor
repz
scas
pusha
repz
ja
repz
dec
push
jbe
dec
repz
dec
lea
pusha
repz
pusha
test
in
repz
xor
repz
adc
push
and
int
repz
adc
repz
repz
adc
repz
(bad)
repz
xchg
ins
hlt
sbb
repz
repz
popf
test
or
jne
repz
(bad)
pop
idiv
push
sbb
(bad)
adc
jne
mov
out
je
mov
mov
inc
fdiv
jge
cld
push
hlt
add
add
jne
push
cld
je
cmp
dec
adc
repnz
and
repnz
ret
adc
imul
pusha
bnd
adc
popf
pusha
repnz
jmp
bnd
sbb
or
push
inc
repnz
and
adc
repnz
adc
repnz
push
div
inc
repnz
push
imul
jne
neg
push
repnz
adc
out
ins
repnz
adc
hlt
or
loopne
cmc
cmp
pop
adc
inc
jl
inc
adc
loopne
fs
sub
clc
inc
repnz
inc
add
jne
push
(bad)
push
repnz
sub
gs
popf
cmc
add
sar
xor
bnd
(bad)
jmp
mov
not
mov
push
repnz
adc
repnz
cmps
in
hlt
(bad)
int3
repnz
adc
bnd
lods
hlt
jbe
mov
mov
ins
(bad)
repnz
adc
repnz
dec
movs
repnz
adc
das
cmc
(bad)
loopne
add
add
imul
test
je
lock
(bad)
movs
bnd
(bad)
int3
repnz
adc
ja
xchg
repnz
aaa
fdiv
sbb
cli
and
outs
movs
repnz
enter
in
idiv
bnd
jmp
hlt
add
repnz
adc
hlt
je
mov
and
fdiv
and
adc
ja
lock
pop
call
test
inc
shl
adc
jne
xchg
repnz
retf
mov
int3
stc
test
mov
ror
adc
fidiv
or
and
cmp
jne
je
jno
cmp
repz
inc
or
pop
adc
shl
iret
inc
repz
adc
rep
adc
fwait
ja
js
jno
adc
cmc
jmp
test
sbb
repz
or
fst
adc
xchg
test
sbb
jmp
mov
adc
lock
sub
adc
div
inc
adc
pop
div
repz
adc
mov
repz
loopne
hlt
adc
and
or
sub
imul
jne
push
repz
push
push
imul
adc
pop
adc
idiv
repz
adc
ja
push
int
push
sub
jge
ret
and
adc
jbe
adc
and
dec
jbe
pop
xor
and
dec
push
jne
dec
repz
mov
je
shl
adc
mov
repz
cmp
hlt
icebp
in
or
loope
repz
mov
repz
adc
inc
jne
int3
repz
sub
repz
(bad)
mov
xchg
hlt
pop
lock
adc
repz
adc
jle
and
div
repz
adc
repz
xchg
test
mov
xor
out
call
xchg
jne
lods
repz
ja
nop
repz
add
je
in
push
adc
ja
mov
(bad)
jne
nop
repz
adc
mov
cmps
mov
pop
adc
sbb
lods
in
sbb
push
mov
mov
pop
jne
loopne
or
mov
fdivr
fwait
mov
inc
adc
je
pushf
repz
dec
pop
cmc
inc
shl
add
dec
adc
outs
xor
adc
xor
jns
lock
adc
lock
adc
out
je
dec
lock
adc
jbe
adc
cmp
call
ja
push
lock
xchg
adc
and
cs
cmc
inc
je
jno
xchg
push
xchg
xor
adc
inc
and
inc
adc
lock
fcom
adc
lock
adc
lock
pshufw
adc
lock
adc
jge
mov
lock
cmc
xor
lock
adc
ja
or
sub
mov
pusha
and
sub
adc
je
js
xor
mov
in
cmp
ins
and
popa
adc
xor
inc
lock
jnp
lock
push
sbb
adc
in
and
push
adc
hlt
or
adc
neg
add
sub
not
je
fdiv
add
mov
lock
push
jne
in
lock
mov
and
ja
hlt
lock
daa
hlt
add
mul
lock
adc
push
neg
sbb
div
lods
lock
adc
xchg
hlt
rcl
adc
push
shl
lods
lock
mov
lea
cmp
je
xchg
lock
jbe
je
shl
pop
adc
jbe
pushf
lock
jp
lock
adc
hlt
gs
or
mov
imul
ja
shl
imul
shl
inc
adc
int3
int3
lock
fiadd
pop
test
add
mov
or
pop
lock
dec
arpl
movs
mov
dec
jbe
shl
adc
ret
jne
push
icebp
adc
mov
idiv
js
sbb
cmp
cmp
icebp
jns
cmp
ja
or
sub
mov
icebp
sub
push
pop
icebp
popa
adc
outs
ja
adc
sub
add
mov
add
xchg
adc
bound
icebp
inc
adc
mov
in
icebp
adc
mov
pop
movs
cmc
aaa
adc
inc
adc
mul
push
icebp
adc
inc
jne
ins
or
push
adc
div
icebp
popa
adc
xor
daa
inc
icebp
adc
hlt
adc
inc
adc
outs
hlt
mov
xor
icebp
push
adc
icebp
dec
adc
icebp
pop
adc
icebp
or
movs
pusha
je
xor
adc
icebp
jge
lods
xor
icebp
jns
xchg
push
test
sub
jne
js
jne
xor
jne
sbb
adc
and
mov
repnz
sub
repnz
ret
pop
adc
repnz
sub
pop
xor
push
adc
mov
and
push
(bad)
cmc
es
repnz
add
bnd
lahf
mov
cmp
add
jne
cmp
xor
test
push
adc
repnz
ud2
jne
xor
push
adc
hlt
shl
sbb
jnp
repnz
jl
je
inc
repnz
pusha
outs
ja
pusha
bnd
fs
jge
repnz
retf
and
or
adc
mov
dec
xor
adc
push
mov
sbb
inc
adc
idiv
repnz
pop
sbb
repnz
adc
dec
jne
je
add
inc
mov
cmp
push
js
pop
adc
shl
repnz
push
fdiv
inc
adc
repnz
mov
repnz
mov
repnz
add
je
lods
bnd
sub
hlt
shr
repnz
scas
sbb
ins
adc
bnd
xchg
retf
hlt
and
call
adc
repnz
jo
repnz
adc
cmc
dec
mov
loopne
(bad)
test
xchg
mul
inc
imul
mov
jns
jno
repnz
(bad)
in
cmp
xchg
cwde
repnz
adc
inc
cmc
mov
jmp
jne
mov
inc
adc
not
push
pop
hlt
nop
shl
jno
aad
hlt
cmp
and
xchg
clc
repnz
jns
repnz
adc
arpl
cld
lods
bnd
(bad)
cmps
jne
in
repnz
dec
or
call
ds
sbb
je
push
repz
sub
repz
mov
repz
adc
repz
and
ja
adc
dec
adc
repz
sbb
adc
repz
adc
je
jl
adc
mov
sbb
popa
adc
jne
inc
repz
not
popa
adc
jbe
jo
push
adc
repz
or
repz
adc
ja
add
sub
jae
repz
adc
ja
pop
repz
ja
repz
adc
(bad)
cmp
or
xchg
adc
movs
not
repz
push
lods
hlt
cs
repz
xlat
cli
imul
adc
xor
ss
rep
adc
lock
adc
sbb
rol
ins
repz
cmc
or
repz
xor
repz
gs
sub
mov
je
cwde
repz
adc
xor
adc
cmp
hlt
inc
in
repz
adc
repz
adc
repz
cld
repz
adc
repz
pop
aam
push
adc
shl
repz
adc
imul
mov
sub
in
loopne
or
add
test
div
mov
pop
adc
call
pop
adc
add
dec
nop
repz
adc
cdq
test
add
jp
imul
lods
repz
mov
jnp
lods
mov
jno
fs
icebp
fdiv
adc
push
neg
repz
out
out
fcmovnbe
repz
sar
icebp
shl
sbb
daa
cwde
repz
adc
mul
repz
pop
outs
jne
lock
cwde
repz
sahf
int3
repz
dec
sub
cmp
repz
sbb
xor
jne
or
dec
adc
lock
mov
aas
movs
jne
pusha
lock
mov
lock
and
jbe
push
lock
test
lock
scas
pop
cmc
loope
lock
xchg
(bad)
idiv
adc
sbb
xchg
dec
imul
cdq
mov
dec
adc
shl
jge
sbb
test
sbb
adc
dec
jbe
jo
jge
mov
jne
xor
push
adc
jbe
or
inc
adc
jge
and
jge
jns
cmc
inc
xor
pop
adc
scas
ja
sbb
push
adc
test
lock
inc
jo
or
popa
sub
push
adc
iret
ja
xor
push
adc
test
(bad)
sbb
scas
or
xor
pop
lea
lock
sub
lock
jmp
(bad)
lock
mov
pop
adc
mov
dec
dec
lock
dec
xor
lock
mov
test
xor
clc
lock
adc
mov
ds
cmp
nop
lock
and
pop
adc
lock
adc
mov
shl
sbb
fdiv
jns
adc
sub
hlt
mov
sti
jne
in
or
popf
in
sub
lock
add
test
push
adc
lock
adc
ins
jbe
movs
lock
lea
ja
lock
xchg
fdiv
xor
test
adc
je
in
jno
inc
jbe
pushf
lock
bound
cwde
lock
gs
dec
lock
adc
imul
lock
out
mov
gs
loop
dec
test
and
push
pop
je
mov
push
adc
div
loopne
popa
adc
ja
lods
lock
adc
or
or
lock
mov
leave
mov
lahf
test
jge
dec
iret
idiv
cld
lock
adc
icebp
push
adc
cmc
js
icebp
or
cli
cmp
or
fdivr
push
adc
or
pusha
icebp
or
pop
or
dec
adc
fcomip
arpl
adc
icebp
adc
jnp
loopne
icebp
cmp
out
add
jge
sbb
adc
dec
hlt
pop
icebp
imul
je
push
adc
icebp
xor
or
sbb
(bad)
dec
test
repnz
dec
icebp
imul
push
icebp
jns
cli
cmp
icebp
or
call
hlt
(bad)
icebp
pop
adc
cmc
dec
inc
icebp
xor
pop
sbb
pop
adc
mov
shl
and
push
data16
mov
icebp
dec
adc
imul
icebp
pop
adc
pop
je
ins
icebp
or
sahf
cmp
popa
adc
jne
ins
icebp
dec
adc
xor
jnp
icebp
inc
adc
jbe
add
sbb
fild
icebp
sbb
stc
mov
inc
adc
icebp
or
jbe
icebp
dec
adc
icebp
imul
mov
repnz
xchg
mov
cmp
ss
adc
jbe
icebp
ins
adc
jp
retf
imul
clc
icebp
xor
sbb
idiv
icebp
push
adc
dec
adc
icebp
adc
icebp
cmp
sbb
icebp
cmp
ds
lahf
jbe
mov
psadbw
jno
jns
imul
pushf
icebp
push
adc
fnsave
mov
pop
adc
hlt
stos
mov
fwait
idiv
in
icebp
jge
jmp
je
xor
adc
test
push
popa
hlt
rcl
icebp
or
mov
icebp
cmp
repnz
icebp
or
xchg
fdiv
sub
sar
adc
hlt
xchg
mov
jge
retf
mov
icebp
and
push
mov
sub
push
test
outs
ja
add
imul
sub
adc
idiv
bound
sub
out
imul
sahf
inc
not
das
xor
lea
div
adc
fidiv
imul
xchg
cmc
jne
je
or
mov
sub
popf
or
idiv
add
hlt
scas
sbb
and
or
mov
push
cmp
outs
cmp
push
adc
scas
jne
adc
pop
adc
in
or
add
js
jne
pop
not
dec
xlat
xor
inc
adc
adc
inc
adc
ja
dec
not
imul
push
jo
dec
adc
stc
not
shr
imul
and
push
adc
mov
pop
and
adc
(bad)
dec
adc
jns
mov
shl
and
inc
adc
cmc
jbe
adc
push
adc
idiv
pop
test
jae
xchg
test
ins
je
cld
imul
xor
idiv
adc
neg
cmp
test
shl
dec
adc
scas
cmc
adc
ja
test
popa
adc
not
adc
popa
adc
neg
sbb
out
in
sbb
sahf
sbb
cmp
cs
div
adc
imul
mov
adc
pusha
lods
imul
jb
jne
hlt
imul
test
adc
jne
call
inc
jne
xor
adc
push
je
aam
ins
adc
imul
jmp
ja
mov
mov
cmp
rcr
adc
cmc
mov
mul
aad
test
pop
fdiv
mov
in
not
not
inc
push
cmc
mov
dec
mov
jns
dec
add
test
inc
adc
je
push
jo
or
mov
test
xor
adc
adc
idiv
and
dec
imul
daa
outs
hlt
outs
push
ret
adc
push
adc
out
je
jl
pop
adc
idiv
push
cmp
jne
call
adc
je
ins
imul
pop
adc
jne
pop
mov
out
pusha
mul
lea
inc
adc
dec
adc
je
or
adc
mov
and
stc
add
neg
jge
jne
inc
neg
loope
hlt
push
jl
sbb
xor
pusha
mul
imul
adc
ret
cmc
mov
push
push
ja
jo
push
adc
idiv
xor
or
mov
fmul
lahf
sbb
push
adc
test
sbb
inc
cmp
cmp
pop
adc
cmc
adc
jno
into
(bad)
imul
adc
test
test
sbb
mov
mov
mul
or
push
hlt
push
loopne
cmp
aaa
mov
sbb
scas
xor
not
mov
test
lock
xor
adc
mul
retf
adc
test
hlt
not
fdivrp
neg
adc
jl
inc
aam
sbb
and
mul
sti
add
adc
not
popa
clc
jne
mov
cmp
sub
neg
adc
sbb
mov
dec
adc
jne
mov
xor
push
mov
(bad)
xchg
movs
neg
adc
jbe
int3
neg
fisttp
lock
idiv
inc
cwde
cmc
push
hlt
div
inc
sbb
mov
imul
dec
jnp
in
cld
test
adc
shl
out
je
add
pop
pusha
hlt
sbb
mov
hlt
add
cmp
mov
hlt
dec
adc
hlt
sub
sub
cmc
xchg
adc
hlt
jge
adc
sub
adc
jne
test
jne
xor
test
mov
jbe
sbb
inc
adc
inc
ja
sub
pop
adc
test
aam
repnz
adc
dec
test
repnz
adc
fcomi
imul
je
fs
adc
repnz
xchg
inc
repnz
xchg
dec
repnz
sbb
cmc
inc
dec
repnz
adc
repnz
adc
bnd
repz
jbe
dec
repnz
enter
adc
jne
and
xor
cmps
or
push
adc
call
imul
pop
repnz
jnp
repnz
outs
je
lods
push
daa
jne
push
bnd
(bad)
xor
ins
adc
je
pop
bnd
fidiv
imul
pop
repnz
(bad)
cmc
in
cmp
push
adc
inc
jbe
jo
add
dec
mov
sub
repnz
mov
cmc
push
lock
mov
je
xchg
repnz
cmp
or
inc
int3
repnz
adc
repnz
fstp
xchg
xchg
test
adc
sub
neg
sbb
nop
repnz
adc
repnz
xchg
cld
repnz
(bad)
push
ja
lods
repnz
jae
jbe
cld
repnz
cwde
repnz
adc
cmp
mov
adc
jbe
mov
clc
jbe
shl
adc
not
outs
xor
repnz
xchg
mov
pop
adc
mov
inc
adc
and
push
test
sub
sub
repnz
ret
cmc
cmc
loope
repnz
adc
addr16
sar
repnz
adc
adc
sub
inc
mov
inc
test
int3
jbe
sub
popa
adc
repz
xchg
cmp
and
pop
js
jns
movs
mov
add
sub
jbe
pop
repz
lods
(bad)
neg
cmp
xor
jmp
xchg
data16
push
sbb
repz
push
pop
div
repz
lock
sbb
push
ins
repz
mov
inc
adc
repz
icebp
mov
adc
ja
jne
inc
repz
jns
ja
pop
repz
xchg
sbb
add
jecxz
jne
pop
repz
ds
cmp
or
idiv
pop
repz
push
retf
fs
adc
shl
repz
fstp
or
inc
adc
(bad)
pop
rep
adc
jbe
js
jge
inc
or
repz
dec
cs
sbb
jno
iret
dec
cmc
xchg
add
sub
xchg
test
sbb
rcr
repz
adc
repz
mov
repz
ins
aam
cmp
mov
sub
jbe
in
repz
adc
repz
or
jg
repz
sbb
imul
int3
rep
adc
repz
xchg
dec
adc
fwait
je
in
jno
mov
mov
repnz
jp
repz
adc
lods
test
call
ret
imul
lock
adc
jne
aam
and
out
jne
(bad)
repz
xor
repz
ins
out
sub
repz
shl
hlt
pop
pushf
repz
adc
pushf
jne
lock
fld
jbe
int3
repz
adc
inc
(bad)
repz
ret
add
repz
aad
repz
adc
push
jne
xchg
repz
int3
ins
ja
mov
popa
adc
lock
adc
fdiv
imul
je
pusha
lock
push
mov
lock
mov
lock
adc
push
lock
stos
add
adc
sbb
out
js
add
adc
jge
adc
lock
cdq
push
xchg
push
lock
les
lock
adc
mov
adc
movs
je
or
dec
adc
lock
lea
sub
jo
je
js
sub
cmc
aaa
jne
add
pop
adc
fs
or
dec
adc
mov
movs
cmp
push
adc
hlt
pop
jo
sbb
out
neg
leave
hlt
fidivr
ins
adc
je
je
adc
jns
lock
adc
push
mul
fxch
cmc
or
fsubr
div
data16
jo
xor
test
push
adc
cmc
add
lock
dec
les
inc
lock
mov
imul
lock
mov
jbe
mov
sub
mov
aas
retf
jbe
int3
lock
and
lock
mov
cmp
sub
in
lock
xchg
loop
nop
in
jns
xchg
shl
pop
xor
adc
lock
adc
lock
inc
push
jbe
call
je
lahf
test
cmp
test
jo
je
loopne
or
lods
mov
xor
in
nop
lock
std
dec
je
nop
lock
bound
adc
jbe
enter
call
lock
gs
sub
xlat
aam
or
push
mov
sbb
lock
adc
adc
jne
pop
(bad)
push
shl
adc
or
cld
lock
sbb
dec
imul
loopne
adc
iret
shl
push
adc
icebp
inc
adc
xor
dec
adc
icebp
add
aas
inc
hlt
sbb
sub
xchg
push
icebp
xor
and
icebp
jns
sub
jbe
push
scas
jne
push
icebp
and
adc
add
sbb
fistp
adc
pop
ja
fs
adc
lahf
hlt
idiv
icebp
cmp
add
cmc
or
adc
icebp
sub
or
rcl
add
psrlq
pop
icebp
popa
adc
ja
push
icebp
pop
adc
inc
hlt
int3
or
jge
sti
mov
jne
(bad)
adc
dec
adc
idiv
adc
jns
addr16
jbe
push
icebp
cmp
fs
popa
adc
mov
jns
push
fs
push
dec
icebp
jns
aad
div
ins
icebp
xor
pop
cwde
cmc
bound
adc
xor
push
push
icebp
inc
adc
shl
push
adc
sub
inc
out
je
add
inc
adc
mul
dec
out
pop
add
cmp
mov
je
fdiv
sub
ret
mov
inc
test
inc
jbe
mov
push
je
call
xlat
jne
fdiv
jge
sub
(bad)
call
repnz
js
icebp
pop
adc
icebp
and
pop
adc
jns
cwde
adc
div
icebp
sbb
push
ret
je
loopne
adc
icebp
cmp
test
dec
adc
icebp
inc
adc
iret
cmc
(bad)
hlt
icebp
push
adc
jno
inc
mov
das
cmc
mov
icebp
pop
adc
(bad)
hlt
bound
jbe
test
adc
je
icebp
xor
fs
inc
xor
adc
cmc
add
icebp
jns
outs
div
jb
icebp
sub
cmp
jne
call
test
cmc
mov
mov
xlat
nop
icebp
add
(bad)
call
or
dec
movs
icebp
or
retf
xlat
shl
push
adc
cmc
dec
int3
icebp
add
xor
ja
sbb
and
fwait
pop
test
pusha
idiv
inc
add
sbb
sbb
movs
(bad)
fwait
jo
jno
sub
jne
dec
neg
adc
(bad)
hlt
add
idiv
xchg
add
inc
and
and
push
mov
cdq
and
push
adc
idiv
mov
div
adc
cmp
push
sub
jge
pop
xor
adc
data16
jl
or
add
add
xchg
test
fdivp
cmc
not
jnp
jne
push
idiv
jg
jne
sub
cmp
jecxz
hlt
(bad)
js
xor
gs
aad
test
(bad)
test
or
add
cmp
sub
(bad)
not
(bad)
push
push
je
push
imul
dec
adc
or
jne
int
je
and
popa
adc
mul
fwait
mov
cmp
cmp
jne
mov
test
mov
push
(bad)
neg
adc
idiv
sub
jne
mov
sbb
xor
adc
adc
ss
test
sub
mov
pushf
aad
mov
mul
push
mov
clc
jne
clc
imul
mov
not
pop
cmc
ret
and
xor
int3
ja
shl
or
stc
vandnps
test
add
cdq
lock
loop
je
pushf
test
jo
aam
neg
adc
out
imul
idiv
in
xor
shr
idiv
adc
cmc
or
test
jp
dec
xor
adc
neg
fdiv
sub
pop
xchg
hlt
xor
ret
jge
not
inc
scas
cmc
adc
jbe
mov
cmc
imul
mul
adc
idiv
leave
jl
inc
adc
push
jbe
pop
neg
nop
sbb
jno
and
je
pop
imul
mov
stos
inc
jbe
or
sub
sub
jne
jo
xor
xchg
sub
or
inc
adc
jne
call
adc
add
cmp
ins
adc
pop
div
mov
adc
inc
hlt
and
div
jo
cmc
bound
idiv
jbe
ja
neg
mov
jl
jne
xor
push
adc
test
fxtract
(bad)
pop
div
jmp
jne
pop
idiv
ins
and
adc
add
push
dec
jbe
js
sub
push
ins
jbe
pop
test
add
div
fdiv
imul
inc
div
adc
call
retf
push
pusha
not
dec
cwde
jbe
cmp
add
xor
cmc
imul
call
mov
neg
aas
call
and
and
push
mov
aaa
je
fdiv
jne
sub
stc
mov
sbb
scas
int
adc
je
aam
xor
xchg
xchg
ja
fdiv
imul
hlt
imul
adc
idiv
adc
enter
neg
push
jmp
stc
hlt
test
mov
mov
popa
adc
add
push
enter
test
ins
adc
hlt
outs
lock
adc
jbe
in
imul
mov
jb
lods
lods
div
adc
mov
(bad)
cld
test
enter
push
adc
xchg
idiv
aam
neg
adc
cmc
jns
imul
pop
pusha
hlt
pop
fdiv
xor
ins
hlt
idiv
adc
imul
dec
repnz
into
imul
in
sub
pop
ins
hlt
jge
ss
(bad)
xor
jns
mov
hlt
add
mov
hlt
inc
adc
hlt
inc
adc
hlt
adc
hlt
and
clc
add
pop
adc
add
mov
sbb
hlt
sbb
add
jnp
hlt
jno
xchg
and
mov
and
push
test
pop
sub
inc
adc
ss
and
xor
jbe
mul
jns
je
jo
or
jge
hlt
jmp
hlt
adc
loop
je
ins
hlt
cmp
fs
inc
adc
pop
div
dec
hlt
adc
cmp
sub
ror
sbb
pushf
push
push
idiv
fbld
or
adc
test
inc
dec
cmc
jbe
hlt
jne
dec
jmp
pop
adc
hlt
add
mov
and
ja
shl
adc
hlt
add
lods
cmp
mov
nop
push
ja
loopne
or
push
mov
inc
adc
jp
js
hlt
xor
out
hlt
add
add
push
hlt
jge
push
data16
call
ja
mov
or
hlt
sbb
jge
hlt
or
test
pop
adc
dec
jbe
test
and
jle
jbe
xchg
hlt
adc
jne
xchg
hlt
pop
adc
xchg
test
imul
xor
out
loop
mov
hlt
jne
push
jg
xchg
hlt
hlt
dec
adc
push
jp
hlt
pop
adc
imul
dec
hlt
cmp
rol
dec
in
and
jp
hlt
add
leave
dec
ja
fdiv
jne
int
je
pushf
hlt
dec
adc
cmc
pop
adc
jne
or
mov
cmc
add
and
imul
dec
cmc
push
adc
cmc
or
das
dec
test
adc
je
cmc
sbb
scas
js
pop
adc
cmc
inc
adc
jne
pop
cmc
jno
add
push
cmc
inc
adc
cmc
sub
lea
cmc
pop
adc
cmc
inc
adc
mov
cmp
jbe
jne
xor
jne
stc
arpl
mov
cmc
jno
(bad)
jle
jnp
cmc
popa
adc
jl
and
hlt
int3
inc
cmc
cmp
ret
and
add
call
push
push
cmc
mov
jne
inc
cmc
cmp
mov
adc
mul
inc
mov
imul
add
sbb
iret
and
sbb
test
ja
mov
adc
cmc
xor
cmp
pop
mov
or
aas
shl
adc
cmc
adc
cmc
add
test
ja
movs
cmc
and
das
clc
jne
shl
adc
ja
xchg
call
push
cmc
xchg
in
cmc
sub
bound
cmc
(bad)
xchg
cmc
jns
mov
inc
adc
inc
jne
mov
scas
test
in
popa
adc
cmc
adc
jecxz
lods
mov
pop
adc
dec
jne
mov
cmp
xlat
not
cmc
jno
imul
cmp
mov
push
fcomi
ror
cmc
popa
adc
push
cmc
sti
test
push
adc
push
fucomi
cmc
sbb
lods
fdiv
adc
add
jae
int3
fdiv
pop
adc
hlt
imul
into
jae
xchg
(bad)
imul
xor
cli
push
adc
cli
jge
mov
cli
imul
pop
cli
pop
adc
cli
push
adc
cli
push
adc
cli
cmp
test
xchg
imul
adc
in
repnz
cli
jne
sbb
cli
adc
cli
jne
or
pop
and
ins
adc
cli
or
repz
inc
jo
popa
adc
push
cmc
mov
cli
jno
stc
div
cli
and
adc
cli
pop
adc
hlt
inc
and
xor
gs
ja
pusha
cli
sbb
clc
xor
and
ins
hlt
jbe
pop
cli
push
adc
test
push
aam
test
fcomp
jbe
fs
and
fadd
cmc
loope
cli
inc
adc
test
cli
cmp
inc
xor
inc
adc
sbb
and
and
daa
je
cmp
icebp
pushf
cli
xor
mov
mov
cli
add
in
mov
pop
adc
cli
inc
adc
(bad)
imul
cmp
adc
cli
sub
xchg
pop
jne
pushf
cli
sub
sbb
je
xchg
cli
add
xchg
fdivr
dec
adc
fbstp
fdivr
and
sar
cli
and
or
adc
test
pushf
cli
push
adc
xor
mov
clc
push
idiv
cmp
adc
mov
in
sub
push
pushf
cli
adc
jge
cli
inc
adc
jbe
test
jge
push
push
jno
push
push
in
loopne
popa
adc
sti
jne
hlt
cli
add
pop
addr16
xchg
cli
jno
ror
cli
sbb
scas
fdivr
xor
dec
sbb
test
dec
adc
sti
jno
mov
neg
sti
cmp
mov
sti
push
adc
fs
or
adc
daa
sbb
mov
and
sub
jns
scas
sub
sti
inc
adc
sti
inc
adc
sti
adc
sbb
cmc
mov
sti
dec
adc
sti
add
sub
adc
sti
imul
ins
sti
add
or
sti
push
adc
cmc
ja
adc
or
fbstp
sub
dec
je
imul
adc
pop
adc
pmuludq
cmp
and
push
sti
add
not
adc
jne
or
dec
adc
div
ficomp
add
xor
sti
jge
(bad)
out
jne
inc
sti
jns
dec
inc
cmc
dec
or
or
dec
xchg
cmc
adc
adc
sti
push
adc
sti
and
sbb
ja
fdivr
jge
and
adc
sti
popa
adc
sti
jno
sub
hlt
cmp
sti
or
adc
hlt
int3
in
adc
sti
sub
dec
call
out
call
je
cmp
adc
sti
sbb
pusha
xchg
sti
or
mov
sti
pop
adc
dec
div
sti
sub
hlt
div
enter
adc
hlt
pop
fdivr
add
jge
idiv
enter
loopne
hlt
cwde
cmp
adc
call
inc
adc
cmc
and
sti
dec
adc
mov
jo
sti
pop
adc
adc
daa
xchg
sti
sub
mov
je
cmp
adc
jp
or
sar
lds
or
jne
fdivr
dec
adc
daa
test
clc
jge
xor
hlt
or
ins
adc
sub
mov
movs
xor
sub
test
clc
dec
adc
clc
sbb
dec
adc
cmp
xchg
lods
test
inc
adc
clc
adc
clc
adc
jbe
ins
clc
push
adc
scas
je
add
add
aam
clc
xor
(bad)
push
scas
jbe
sub
add
xchg
jo
push
adc
sub
clc
sbb
loope
je
ins
clc
adc
cmc
sub
add
es
push
adc
push
jbe
sub
inc
adc
mov
cmp
push
mov
xchg
push
popa
hlt
inc
ins
clc
add
push
push
cwde
jne
or
cmp
sbb
dec
aam
jmp
int
jne
adc
adc
pushf
xchg
clc
add
out
clc
dec
adc
clc
popa
adc
clc
inc
adc
or
call
das
xchg
cmp
adc
push
jne
sar
or
xchg
mov
jne
fwait
shl
hlt
clc
xor
lahf
adc
pop
test
add
fwait
hlt
clc
cmp
add
jbe
hlt
clc
sbb
ins
cld
clc
adc
js
clc
popa
adc
lahf
jne
mov
jno
je
neg
js
ja
loopne
add
nop
enter
popa
lock
push
int3
clc
xor
in
neg
jmp
adc
cmc
je
xchg
clc
ins
adc
jbe
clc
clc
pop
adc
not
fidivr
push
mov
push
adc
idiv
inc
(bad)
hlt
bound
imul
xor
jbe
pop
stc
or
pop
push
stos
test
stc
sbb
lods
sbb
inc
adc
(bad)
je
inc
stc
inc
adc
in
push
cmp
cmp
sub
test
cwde
hlt
scas
push
aas
jne
inc
stc
jge
adc
stc
xor
or
adc
stc
inc
adc
stc
cmp
add
stc
jne
or
dec
adc
dec
adc
hlt
jne
stc
jge
mul
cmc
ja
stc
xor
fs
xor
dec
xor
push
adc
cmc
mov
pushaw
ja
pop
stc
jno
call
stc
sub
in
mov
sbb
push
mov
pop
adc
sbb
fistp
adc
cmc
jl
stc
push
adc
aaa
hlt
pop
and
pop
adc
ja
and
dec
adc
div
inc
stc
cmp
dec
or
icebp
xor
add
or
popa
adc
adc
mov
mov
cmc
es
pop
adc
sbb
adc
and
aas
call
addr16
in
stc
xor
es
ret
mov
inc
jbe
cld
stc
push
adc
stc
popa
adc
stc
sub
cdq
mov
sub
push
(bad)
stc
and
pop
enter
sub
push
aam
jno
stc
jns
mov
imul
enter
mov
hlt
js
stc
and
not
stc
cmp
ja
jbe
hlt
stc
add
stc
enter
stc
popa
adc
pop
nop
stc
sbb
(bad)
stc
add
pushf
cwde
stc
jge
jmp
adc
neg
hlt
stc
inc
adc
div
aad
je
enter
fcmovnbe
cmc
sub
pop
aad
cmp
stc
add
jmp
(bad)
cmc
fdivr
push
adc
jbe
cwde
stc
adc
fsubr
stc
cmp
ins
xor
sub
lds
(bad)
jns
cmp
jne
adc
inc
adc
inc
mov
(bad)
push
adc
(bad)
and
sub
or
jne
sub
(bad)
jno
adc
jbe
or
xor
pop
enter
(bad)
cmp
lds
ins
adc
dec
adc
(bad)
jne
xchg
jbe
adc
sbb
mov
inc
adc
mov
mov
(bad)
adc
hlt
dec
dec
(bad)
jno
imul
arpl
adc
inc
hlt
loopne
(bad)
imul
pop
(bad)
sbb
cmps
pop
inc
out
je
ins
(bad)
xor
outs
pop
(bad)
pop
adc
ja
dec
sbb
adc
push
(bad)
mov
(bad)
adc
xlat
dec
imul
js
jns
fld
sbb
pop
mov
or
ror
adc
cmc
rcr
dec
adc
jbe
pop
(bad)
jno
dec
sbb
outs
adc
pop
adc
(bad)
imul
lock
adc
(bad)
cmp
and
jbe
call
arpl
enter
sub
sub
dec
lods
(bad)
mov
adc
push
(bad)
jne
xchg
mov
cmp
sbb
mov
pop
adc
call
add
je
sar
cmp
add
neg
(bad)
cmp
or
(bad)
and
(bad)
mov
dec
adc
push
fimul
cmc
rcl
ja
cld
(bad)
xor
dec
ja
mov
je
mov
in
cmc
inc
cwde
(bad)
xor
jecxz
(bad)
jne
in
inc
imul
mov
sbb
sar
sbb
xor
inc
out
(bad)
and
mov
ret
arpl
(bad)
sbb
(bad)
mov
dec
adc
cli
jbe
lods
(bad)
ins
adc
pop
hlt
mov
dec
xor
or
and
ss
js
inc
mov
inc
adc
sub
inc
or
inc
adc
push
mov
and
call
stos
push
jne
inc
push
pop
push
adc
inc
adc
ja
and
jns
cdq
(bad)
ja
xor
sbb
lahf
popf
jbe
fs
cmp
sar
adc
mov
inc
adc
call
lock
jbe
js
sbb
mov
stc
dec
ja
xor
cmp
jg
cmc
enter
adc
cmc
mov
inc
sub
call
push
not
sub
pop
adc
int3
cmc
add
jmp
(bad)
sub
and
arpl
inc
aad
(bad)
jns
inc
jae
out
jl
jge
inc
jo
mov
dec
data16
dec
jmp
dec
es
add
adc
xor
xor
pop
pushf
dec
adc
call
cmp
dec
and
je
mov
mov
(bad)
dec
adc
call
xchg
in
xchg
lods
inc
adc
inc
cdq
xor
add
dec
mov
pop
adc
jmp
test
adc
add
movs
lods
jmp
adc
arpl
cld
jmp
jo
idiv
jmp
cmc
das
test
hlt
inc
inc
int3
dec
popa
and
mov
(bad)
cmp
gs
xchg
movs
jmp
push
push
rcl
jne
push
mov
sbb
pop
pop
je
cld
call
adc
neg
rcr
nop
call
inc
push
jbe
sar
adc
jbe
in
sbb
pop
fdivr
xor
jg
cld
add
xor
cld
imul
sbb
jno
mov
cld
and
mov
cld
jne
daa
mov
ins
adc
cld
sub
fst
jge
xchg
push
mul
cld
or
jb
cld
jne
sbb
cmc
jae
cld
inc
adc
cld
jne
add
je
cmp
push
adc
cli
test
cld
ins
adc
cmc
pusha
pop
cld
cmp
cli
cmp
sub
hlt
(bad)
jne
adc
inc
adc
shl
cld
cmp
jae
cld
jge
jecxz
cmc
mov
adc
fdivr
cmp
mov
outs
sti
idiv
cld
dec
adc
je
dec
cld
push
adc
in
sti
add
and
fwait
and
add
pop
xlat
ja
je
jns
sar
pusha
cld
ins
adc
je
and
sbb
in
cld
push
adc
xor
jnp
cld
dec
adc
cld
imul
mov
adc
mov
cld
adc
mov
cld
inc
adc
push
jne
mov
cmp
cdq
lods
cld
jns
stos
dec
neg
nop
cld
imul
mov
and
or
xchg
inc
ja
in
cld
and
adc
cld
and
pushf
mov
xor
sub
add
jbe
mov
mov
or
pop
add
jae
jne
mov
sbb
fcmovu
cld
jne
jns
div
pushf
cld
pop
adc
je
sar
dec
adc
je
test
jns
addr16
add
cld
adc
jmp
hlt
mov
cld
imul
mov
dec
adc
ja
clc
cld
or
pop
push
cmc
pop
hlt
cld
jne
fimul
cmc
mov
inc
leave
jbe
mov
sub
ins
lock
pop
adc
jbe
aam
xor
iret
cmps
cmc
jecxz
cld
dec
adc
std
inc
adc
popa
jne
sub
push
adc
std
dec
adc
mov
les
std
and
mov
daa
adc
sbb
adc
pop
cmp
adc
in
std
push
adc
mov
mov
xchg
jmp
jne
call
adc
jno
add
not
std
sbb
in
pop
std
adc
test
jge
rdpmc
cmc
ds
sub
ja
jne
inc
std
add
imul
jge
cmc
mov
loope
idiv
out
je
je
sub
imul
and
adc
adc
push
mov
jge
push
sbb
jge
fcmovu
div
dec
std
inc
adc
dec
not
dec
std
jns
sar
adc
je
fs
adc
leave
mov
je
std
or
jne
std
popa
adc
std
sbb
or
cmp
test
ds
in
std
push
adc
std
xor
cmps
dec
jbe
cld
std
imul
pushf
std
sbb
scas
fdiv
loopne
sbb
xchg
jmp
adc
adc
ja
loopne
imul
(bad)
std
sbb
sahf
push
jne
test
popa
adc
std
push
adc
std
adc
or
cmp
xchg
nop
std
jne
jae
cmc
jbe
std
sub
mov
std
xor
clc
push
test
std
sbb
mov
std
xor
arpl
cmp
xchg
not
test
pop
adc
or
pop
adc
pop
neg
enter
shr
adc
je
fdivr
jns
fadd
or
ins
int3
std
xor
ret
dec
mov
jns
inc
add
sub
out
sar
mov
xor
hlt
(bad)
xor
push
adc
loop
adc
cwde
je
fs
adc
loop
adc
loop
adc
loop
adc
xor
adc
cmc
js
loop
adc
int3
idiv
xchg
jg
and
pop
adc
xchg
hlt
inc
je
or
sbb
jne
and
sub
sub
inc
adc
loop
adc
loop
adc
loop
adc
pushf
hlt
inc
dec
loop
adc
div
cmp
add
clc
mov
jno
jle
test
loop
adc
shl
imul
adc
inc
jbe
and
sbb
jmp
loop
adc
fcomip
mov
loop
adc
mov
jne
aam
test
fstp
jmp
test
ins
test
push
jbe
push
popf
hlt
cdq
je
add
iret
(bad)
jbe
xor
sub
mov
ja
hlt
loop
adc
loop
adc
shl
pushf
loop
adc
loop
adc
shl
pop
in
sub
cmps
in
jbe
movs
loop
adc
test
add
not
adc
and
adc
loop
adc
inc
je
shl
jne
sbb
loop
adc
loop
adc
jne
test
pop
adc
cld
hlt
and
loop
adc
xor
mov
ja
clc
loop
adc
jne
movs
loop
adc
xor
addr16
jns
pusha
cld
je
shl
jne
xchg
jbe
in
dec
adc
and
fsub
ins
adc
dec
mov
js
retf
jns
aad
jne
(bad)
pop
lds
mov
and
(bad)
loop
adc
jne
movs
loop
adc
and
shl
inc
adc
jbe
mov
sub
dec
mov
dec
adc
jecxz
adc
jecxz
adc
pop
jbe
sbb
pop
adc
jecxz
adc
jecxz
adc
jne
add
xor
xchg
or
push
js
adc
pop
stos
je
sbb
pop
adc
pop
hlt
nop
dec
jecxz
adc
jecxz
adc
jecxz
adc
shl
ins
jecxz
adc
ss
sbb
dec
adc
jnp
std
cmp
and
jb
jbe
cmp
sbb
dec
je
and
outs
pop
jecxz
adc
repz
jecxz
adc
xchg
je
pop
jecxz
adc
jbe
adc
jns
jmp
jne
and
or
int3
cmp
imul
je
jge
(bad)
out
cmc
jmp
pop
fdivp
cmp
pop
adc
je
cmp
inc
adc
sbb
add
sub
inc
and
cld
xor
adc
xchg
pop
jecxz
adc
not
pop
adc
jecxz
adc
jecxz
adc
jecxz
adc
je
fsub
pop
adc
mov
sbb
and
jne
mov
sub
sub
adc
add
nop
out
and
cmp
pop
clc
jecxz
adc
sub
jecxz
adc
jecxz
adc
inc
je
call
cwde
cmc
ss
adc
jecxz
adc
jecxz
adc
jne
movs
jecxz
adc
xor
test
jecxz
adc
out
ja
mov
sub
mov
jecxz
adc
idiv
fsub
sub
addr16
cmc
mov
jecxz
adc
je
cwde
jecxz
adc
mul
mov
cmp
sub
jecxz
adc
aam
out
in
push
adc
push
hlt
sbb
(bad)
test
sbb
gs
and
fsub
inc
adc
hlt
mov
int3
int3
jne
aam
sbb
xor
je
pusha
loopne
adc
sbb
mov
loopne
adc
loopne
adc
iret
mul
sbb
imul
xor
inc
adc
loopne
adc
loopne
adc
pop
hlt
std
adc
jno
push
push
jbe
push
loopne
adc
xor
in
ins
loopne
adc
loopne
adc
xchg
mov
push
div
pop
dec
loopne
adc
loopne
adc
push
imul
repnz
and
jbe
ja
add
jne
sti
(bad)
hlt
mov
loopne
adc
ja
loopne
adc
jne
cld
cli
jne
mov
test
xor
call
cmc
push
je
dec
adc
repnz
pop
repnz
cmps
gs
pusha
repnz
push
and
jge
scas
xor
sub
sub
call
adc
ja
sbb
inc
adc
loop
sbb
sbb
repnz
adc
cld
jne
js
adc
mov
repnz
or
div
pop
repnz
adc
jne
push
bnd
jo
je
sub
cmp
xchg
dec
adc
jbe
ins
repnz
(bad)
std
imul
pusha
call
in
cmc
(bad)
adc
push
or
pop
adc
enter
repnz
mov
inc
adc
and
pop
adc
push
pusha
repnz
pop
mov
sub
inc
pop
ja
adc
and
inc
xchg
jbe
add
sub
retf
dec
inc
repnz
adc
addr16
inc
repnz
xor
stos
xor
adc
test
jns
bnd
cmp
inc
adc
jne
xchg
repnz
mov
movs
push
jbe
test
adc
jecxz
repnz
xor
repnz
adc
in
div
pushf
repnz
adc
cmp
in
repnz
dec
mov
dec
adc
sbb
adc
jge
xchg
sub
push
shl
jne
or
ja
call
es
or
idiv
ins
adc
imul
repnz
mov
jbe
aam
inc
adc
jo
repnz
ds
pop
adc
jne
mov
or
shr
imul
mov
cmp
dec
int3
repnz
pop
int
shl
repnz
inc
les
repnz
mov
retf
fs
inc
adc
push
jbe
mov
xchg
into
jl
pop
adc
or
jg
repz
mov
repz
xor
movs
push
add
adc
repz
adc
repz
nop
xchg
ja
push
repz
adc
repz
push
pusha
repz
pop
stc
je
inc
repz
jae
repz
mov
or
dec
sub
jge
or
jne
je
sub
xor
or
jne
jne
add
pop
adc
imul
rep
adc
hlt
call
cmp
add
popa
adc
xor
repz
jmp
repz
ins
ins
jbe
ins
repz
mov
repz
push
sahf
jne
or
cmp
jae
repz
adc
mul
add
dec
adc
hlt
pop
adc
cmp
dec
(bad)
neg
repz
adc
repz
adc
xor
repz
shl
cmp
mov
repz
mov
repz
and
repz
adc
adc
pop
pushf
repz
dec
fdiv
inc
adc
mov
pushf
repz
push
mov
dec
je
movs
repz
sahf
imul
add
fcmovbe
repz
adc
repz
jns
repz
or
repz
adc
ja
lods
repz
cdq
mov
add
xor
repz
(bad)
mov
and
dec
lods
repz
adc
adc
add
repz
jmp
repz
adc
imul
lock
push
nop
hlt
cmp
pusha
not
test
or
scas
shl
adc
jl
repz
adc
mov
pop
movs
repz
adc
dec
jne
loopne
jge
leave
popf
ja
aam
sub
mov
repz
adc
lock
mov
mul
lock
adc
pop
test
lock
cmp
adc
fs
movs
inc
lock
dec
sub
and
sar
cmp
sub
lock
adc
popa
adc
jo
retf
sbb
xor
sbb
add
adc
nop
not
xor
jns
or
adc
push
jbe
dec
lock
adc
lock
adc
int
fstp
or
jno
je
or
pop
adc
mov
sub
jge
lock
adc
jbe
pusha
lock
fidiv
dec
adc
test
jmp
adc
cmp
dec
adc
jne
add
jne
aam
je
cmp
push
adc
je
inc
lock
adc
jne
inc
lock
adc
test
add
xor
jl
lock
cmc
push
pop
lock
mov
test
lock
mov
lock
mov
lock
mov
lock
movs
(bad)
hlt
in
shl
imul
fdiv
push
adc
cmc
mov
lock
adc
jns
lock
adc
dec
adc
adc
jge
pushf
pop
hlt
arpl
jne
hlt
lock
and
sub
mov
jne
mov
je
xchg
lock
adc
or
popa
adc
fdiv
lock
clc
cmp
pop
cld
lock
std
push
jbe
xchg
lock
loop
je
lock
jmp
shl
lea
ja
lock
push
addr16
loopne
and
jmp
hlt
sub
lock
(bad)
test
dec
adc
pop
jbe
mov
sbb
inc
and
lock
dec
div
shl
sub
dec
push
cmc
hlt
xchg
lock
adc
xchg
daa
cmp
adc
mov
div
push
ds
(bad)
sub
aas
jmp
push
dec
icebp
jns
mov
icebp
jge
and
jbe
je
pop
adc
icebp
sub
lods
pop
je
sub
jns
nop
ret
and
sbb
push
or
push
adc
icebp
push
adc
icebp
add
lds
add
xlat
pusha
icebp
pop
adc
icebp
sub
add
adc
ja
jl
sub
cmc
adc
cmp
sub
mov
icebp
jge
jg
jne
xor
xor
sti
je
gs
mov
xor
cld
sub
dec
adc
retf
sbb
enter
adc
push
cmc
xlat
add
inc
adc
hlt
es
icebp
xor
cmc
and
adc
jne
pop
icebp
jne
(bad)
jae
in
icebp
sub
mov
into
lahf
jne
sub
or
jno
icebp
dec
adc
in
je
lock
sbb
cmp
jge
cmp
icebp
sub
inc
(bad)
icebp
jge
cmps
popf
jbe
xor
adc
icebp
sbb
lahf
xor
adc
icebp
ins
adc
ja
enter
call
adc
icebp
dec
adc
adc
lock
sbb
push
(bad)
sub
icebp
push
adc
icebp
jne
lea
idiv
xchg
lods
icebp
imul
lock
cmp
rol
dec
adc
jbe
clc
icebp
adc
arpl
jmp
lods
je
xor
adc
je
lock
inc
adc
pop
call
mov
sbb
popf
mov
dec
adc
test
jp
sbb
icebp
ins
adc
hlt
xchg
fdiv
imul
mov
jle
and
dec
and
cmp
into
sub
push
adc
imul
adc
test
(bad)
ja
add
sub
mov
test
dec
imul
stos
xchg
jne
or
inc
adc
mul
sub
adc
neg
pusha
neg
sbb
or
push
hlt
ja
inc
test
and
cmp
sbb
pop
adc
xchg
xor
pop
adc
jae
fs
xor
loop
idiv
jno
jbe
inc
mul
adc
push
ja
pop
mul
adc
hlt
adc
adc
xchg
js
sbb
and
add
in
je
and
jno
jmp
jbe
cmp
and
ins
xchg
jne
js
inc
adc
ja
jl
adc
(bad)
xchg
jbe
cmp
dec
adc
inc
je
jl
sbb
ja
imul
movs
pusha
idiv
lds
pop
sub
aas
inc
test
popa
je
sbb
adc
xor
je
movs
not
mov
test
mov
mul
adc
icebp
hlt
ins
loopne
sub
xlat
mov
dec
adc
test
(bad)
hlt
mov
fwait
jne
mov
adc
mov
mul
mov
hlt
pop
int3
imul
(bad)
in
jne
or
adc
div
cmps
call
sbb
sbb
neg
repz
test
ja
jbe
cld
not
cmc
mov
push
adc
cmp
iret
nop
neg
arpl
imul
cld
test
xchg
je
mov
inc
jbe
nop
imul
adc
ja
clc
neg
adc
neg
mov
jnp
leave
aam
cmp
in
nop
idiv
shl
adc
xchg
push
xchg
idiv
adc
push
test
xchg
test
cmp
pop
adc
imul
mov
idiv
adc
ins
adc
idiv
(bad)
cmp
xor
das
imul
sub
imul
push
ins
neg
stos
cmp
imul
sub
pop
adc
mov
adc
and
push
adc
test
ins
test
pop
imul
jno
not
and
xor
dec
or
sbb
jno
div
imul
jbe
adc
inc
adc
test
jmp
adc
cmc
cld
and
sbb
shl
adc
div
test
ins
mul
mov
ror
inc
test
adc
ja
or
push
adc
pop
hlt
jecxz
not
adc
mul
mov
not
mov
ret
jbe
clc
div
mov
neg
jne
mul
adc
jbe
mov
hlt
not
mul
adc
test
mov
inc
adc
or
mov
xor
call
adc
popf
ja
mov
sbb
add
je
lods
mul
xchg
sub
jbe
neg
into
mov
and
jae
jbe
lods
idiv
adc
not
lock
dec
clc
not
jge
jne
cwde
mul
cmp
idiv
out
div
mov
shl
pop
adc
pop
div
xor
pop
xchg
mul
aad
mul
pop
add
pop
xchg
neg
adc
mov
test
xor
inc
shl
enter
les
and
dec
xchg
hlt
mov
int
not
xor
and
cmps
cmp
add
mov
hlt
cmp
repz
add
and
inc
inc
hlt
xor
sub
popa
adc
hlt
add
xchg
jo
imul
jo
inc
adc
push
adc
fwait
jbe
adc
ins
adc
dec
je
cmp
cmp
xchg
adc
hlt
jne
or
cmp
loope
hlt
ins
adc
pusha
neg
hlt
jno
div
and
sti
and
push
pusha
hlt
jns
cld
cmc
test
loop
neg
push
hlt
ins
adc
fcomi
retf
ins
hlt
cmp
out
sub
adc
cmp
hlt
inc
adc
jbe
cmp
imul
adc
cmp
pop
popa
jne
push
hlt
or
into
inc
hlt
pop
adc
ja
add
inc
adc
sub
hlt
adc
mov
jbe
shl
or
mov
jbe
xchg
hlt
add
mov
hlt
push
adc
hlt
imul
nop
hlt
xor
out
lods
hlt
adc
hlt
pop
adc
aad
push
mov
push
adc
add
and
hlt
sub
hlt
adc
sbb
idiv
(bad)
hlt
inc
adc
inc
adc
hlt
adc
ja
hlt
adc
or
mul
hlt
ins
adc
test
add
popa
adc
hlt
jne
hlt
or
arpl
neg
lock
out
movs
hlt
cmp
imul
adc
cmps
neg
or
aam
hlt
(bad)
mov
pop
adc
cmc
and
inc
in
not
hlt
and
and
ja
clc
hlt
push
adc
iret
test
mov
cmc
dec
adc
cmc
sbb
(bad)
loopne
jg
cmc
adc
lods
adc
inc
adc
sahf
jne
add
cmp
pop
inc
cmc
pop
adc
je
adc
or
rcl
inc
xchg
adc
adc
iret
sbb
dec
adc
hlt
sbb
cmc
sbb
aaa
sub
pop
fdiv
sub
and
test
test
ja
aam
jne
xchg
ret
jne
loopne
and
add
hlt
rcr
cmc
jne
or
jns
mov
fdiv
inc
adc
mov
in
cwde
cmc
adc
ja
test
sub
cli
xor
shl
sbb
dec
movs
cmc
dec
adc
not
cmc
or
adc
cmc
and
call
cmc
push
adc
call
add
push
shl
mov
cmc
in
cld
cmc
inc
adc
ja
mov
inc
adc
pop
cmc
ffree
cmc
push
adc
(bad)
je
in
cmc
imul
mov
add
enter
in
xor
fnsetpm(287
cmc
pop
adc
push
hlt
bound
inc
adc
cli
sub
jne
cli
dec
adc
hlt
outs
sbb
sbb
and
mov
and
cli
jge
sub
hlt
loopne
cli
sub
gs
and
adc
jno
xchg
clc
je
fs
adc
cli
xor
cmps
inc
cli
sub
movs
sub
cmp
push
inc
ja
sub
imul
adc
and
(bad)
cmp
and
cdq
push
push
jno
jp
idiv
adc
sub
jno
loop
jne
inc
cli
sbb
inc
xor
jns
push
cli
xor
out
icebp
je
or
xor
push
je
out
cli
cmp
push
sti
div
cli
inc
adc
jbe
je
cmp
fimul
hlt
push
cli
or
rcr
mov
inc
cmp
mov
cli
jno
dec
arpl
cli
jns
dec
xor
adc
mov
mov
cmp
je
fdivr
jno
mov
cli
popa
adc
cli
jne
and
cli
inc
adc
outs
je
in
adc
scas
mov
adc
cli
and
and
cli
adc
cli
xor
out
cli
cmp
xor
add
jne
cmp
adc
cli
adc
(bad)
push
je
aam
or
jp
cli
sbb
cmps
in
add
cli
int3
test
dec
neg
clc
cli
cmp
loope
ja
mov
mov
pop
adc
jne
in
cli
inc
adc
fild
je
fdivr
jge
xlat
(bad)
cli
popa
adc
neg
mov
jno
pop
dec
test
cli
ins
adc
or
cmps
mov
retf
idiv
cli
push
adc
mov
sub
int3
jg
in
cli
xor
scas
pusha
sti
jno
xor
hlt
jae
sti
ins
adc
sti
dec
adc
sti
push
adc
ret
add
inc
adc
ja
ins
sti
pop
adc
sti
jge
scas
test
jo
popa
adc
sti
sbb
dec
cmp
add
sbb
hlt
retf
fs
sbb
pop
or
add
adc
adc
sti
cmp
or
ja
push
xor
sti
adc
jo
div
js
sbb
jne
imul
inc
sti
add
das
cmp
pop
adc
dec
jne
cmp
cmp
pop
cmp
pop
adc
outs
cmc
add
sti
xor
mov
outs
stc
cmc
imul
adc
je
jo
adc
call
jbe
pop
sti
and
xor
and
ret
mov
mov
pop
adc
jmp
adc
fisub
inc
adc
sbb
mov
jns
je
jne
and
jne
sub
ins
adc
loopne
je
icebp
cmp
jo
icebp
jno
mov
jne
cmp
ins
adc
and
jne
imul
mov
not
pop
test
popa
adc
sti
hlt
adc
sub
cmp
test
xchg
jne
nop
imul
push
inc
hlt
dec
adc
addr16
js
or
cmp
and
jg
jne
or
dec
adc
jne
xor
dec
adc
jne
jo
jne
ror
cmc
dec
adc
cmp
lds
repnz
inc
adc
ja
or
or
fnsave
mov
jecxz
icebp
gs
add
shl
adc
jbe
hlt
icebp
imul
xor
adc
ds
lock
inc
adc
je
shl
inc
adc
pop
idiv
mov
mul
not
adc
mul
cmps
sub
dec
test
sub
jl
adc
call
not
mov
not
mov
not
or
test
in
mul
jae
ja
in
test
sti
jne
mov
mov
adc
adc
(bad)
mov
cmp
cmp
jle
arpl
cmp
mov
adc
imul
jle
imul
cmp
jle
popa
pop
jle
cmp
cmp
mov
push
and
pusha
cs
xchg
imul
mov
add
ins
repnz
(bad)
or
test
loope
jle
cmp
cmp
mov
out
mov
jge
imul
and
mov
cmp
cmps
and
mov
sub
adc
outs
pop
pop
mov
imul
jle
cmp
cmp
jle
subps
cmp
cmp
jle
arpl
cmp
cmp
jle
cmp
mov
cmp
cmp
and
adc
jne
jle
cmp
cmp
mov
pop
jle
ja
dec
push
mov
pop
jle
cmp
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
popa
repz
hlt
dec
outs
mov
pusha
adc
cli
jne
jg
imul
jle
subps
cmp
cmp
mov
pop
jle
cmp
cmp
cmp
dec
cmp
cmp
sub
jmp
adc
in
mov
loopne
adc
ja
jle
cmp
cmp
cmp
jle
addr16
jle
cmp
cmp
cmps
jmp
jle
cmp
cmp
cmp
xor
jno
mov
in
or
adc
cmp
cmp
fidiv
pop
jle
ja
jle
cmp
cmp
add
pop
xor
(bad)
(bad)
mov
cmp
cmp
out
mov
pop
jle
cmp
cmp
cmp
jle
inc
pop
jle
cmp
mov
repz
arpl
cmp
adc
jno
iret
in
call
jle
cmp
cmp
jle
subps
or
pop
jle
or
cmp
loope
dec
fs
pop
pop
jle
cmp
cmp
mov
pop
xchg
cmp
push
pop
jle
cmp
mov
pop
jle
cmp
cmp
mov
push
adc
hlt
push
mov
adc
(bad)
jle
and
cmp
mov
(bad)
push
les
jle
add
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
jle
outs
pop
adc
pop
jle
cmp
cmp
sar
pop
jle
cmp
cmp
cmp
mov
cmp
ret
cmp
cmp
cmp
mov
call
jle
cmp
cmp
mov
in
mov
jns
inc
into
ja
jecxz
jecxz
jle
and
mov
cmp
mov
pop
jle
cmp
mov
pop
jle
ja
es
cmp
repz
ds
mov
sbb
jne
jle
cmp
mov
retf
hlt
popf
jle
sub
cmp
cmp
jle
push
pop
jle
cmp
cmp
mov
cmp
cmp
cmp
jle
jg
jle
arpl
cmp
cmp
pop
pop
jle
cmp
cmp
xor
jne
outs
mov
cmp
ins
sub
lock
adc
repnz
ss
ja
jle
cmp
cmp
(bad)
mov
cmp
cmp
mov
cmp
cmp
mov
cmp
add
pop
jle
cmp
cmp
jbe
sub
(bad)
push
push
jle
dec
pop
jle
ja
jle
cmp
cmp
outs
bnd
inc
push
jne
xor
push
icebp
dec
repnz
jle
pop
pop
jle
cmp
cmp
das
lods
and
xor
adc
je
jle
cmp
cmp
mov
inc
jle
add
cmp
aad
xor
and
cmp
cmp
mov
cmp
cmp
jb
ja
xor
xor
jno
jle
cmp
cmp
mov
pop
jle
cmp
cmp
imul
xor
test
pop
jle
cmp
cmp
mov
cmp
cmp
jecxz
pop
jle
cmp
cmp
cmp
jle
push
pop
jle
cmp
cmp
jle
jnp
jle
cmp
cmp
cmp
mov
cmp
jle
jnp
push
mov
cmp
mov
cmp
repz
test
or
jle
cmp
cmp
cmp
cmp
mov
push
mov
push
adc
(bad)
xchg
scas
and
inc
adc
outs
pop
jle
cmp
mov
pop
jle
cmp
mov
push
out
push
in
add
or
jle
imul
cmp
cmp
cmp
mov
(bad)
mov
scas
and
inc
adc
outs
pop
jg
mov
pop
sbb
add
mov
lds
out
and
jmp
jmp
jle
cmp
cmp
jle
cmp
cmp
cmp
jmp
jmp
jae
cmp
jle
cmp
cmp
cmp
mov
adc
and
cmps
(bad)
or
dec
cmp
cmp
mov
pop
and
mov
pop
jle
ja
jle
cmp
cmp
jle
ja
jp
cmp
cmp
jle
jne
jle
cmp
cmp
cmp
jle
addr16
jle
cmp
cmp
es
jle
ss
jle
cmp
cmp
xchg
shl
cmp
jae
and
je
xor
push
pop
jle
cmp
mov
cs
ds
inc
jg
jle
cmp
cmp
cmp
es
cmp
sub
gs
jle
sbb
pop
push
mov
mov
pop
sub
mov
pop
jle
cmp
cmp
xor
adc
ja
es
cmp
cmp
cmp
inc
push
pop
jle
cmp
mov
pop
jle
ja
and
push
xor
adc
push
pop
jle
ja
jle
cmp
cmp
arpl
adc
gs
jle
ja
jle
cmp
cmp
bound
pop
jle
cmp
mov
xor
es
arpl
jle
push
pop
jle
ja
add
cmp
ret
push
in
push
adc
repnz
pop
jle
cmp
cmp
in
and
sar
adc
pop
and
out
je
inc
cs
ds
push
jle
jne
outs
mov
cmp
(bad)
rcr
jle
cmp
cmp
retf
ret
ret
cmc
mov
(bad)
(bad)
retf
lock
jle
jae
jg
cmp
(bad)
sar
pop
jle
das
pop
adc
or
mov
add
add
gs
mov
mov
pop
pop
jle
cmp
cmp
js
cmc
fidiv
cmp
jns
jle
ja
jle
cmp
mov
pop
jle
cmp
cmp
cmp
loope
ins
lds
push
cmps
sbb
pop
pop
push
mov
mov
pop
mov
inc
cmp
cmp
mov
add
mov
cmp
cmp
cmp
jle
ins
pop
jle
push
pop
jle
cmp
cmp
push
dec
pop
jle
cmp
cmp
mov
cmp
cmp
mov
cmp
cmp
jae
in
idiv
shl
adc
(bad)
inc
jle
and
cmp
mov
pop
jle
cmp
cmp
xchg
mov
jnp
jle
inc
pop
jle
cmp
mov
xchg
jle
and
cmp
mov
pop
jle
cmp
cmp
xchg
mov
stc
jae
les
pop
jle
pop
pop
jle
cmp
mov
xor
push
mov
mov
pop
jle
cmp
cmp
imul
inc
jle
add
mov
cmp
in
pop
jle
pop
pop
jle
cmp
mov
(bad)
(bad)
mov
cmp
jge
adc
jae
mov
cmp
cmp
jl
push
arpl
arpl
cmp
jg
push
arpl
arpl
cmp
cmp
(bad)
fst
jecxz
mov
cmp
jmp
cld
iret
push
adc
ja
push
mov
mov
pop
jle
cmp
cmp
mov
jne
jle
jae
es
cmp
cmp
cmp
cmp
(bad)
mov
cmp
cmp
inc
arpl
(bad)
mov
cmp
cmp
cmp
adc
jne
or
repnz
(bad)
jmp
ja
jle
cmp
cmp
jle
cmp
cmp
cmp
stc
or
add
jmp
push
adc
ja
sub
jne
cld
iret
push
adc
imul
inc
jle
sti
jecxz
mov
cmp
cmp
jle
ja
jle
cmp
cmp
xchg
cmp
cmp
cmp
(bad)
mov
cmp
cmp
xchg
cmp
cmp
cmp
mov
cmp
cmp
mov
pop
ds
mov
adc
ja
jle
cmp
cmp
pop
pop
dec
mov
cmp
push
hlt
outs
push
mov
adc
add
sbb
jle
cmp
cmp
cmp
cmp
ss
push
jle
cmp
cmp
cmp
aas
sub
cmp
(bad)
bound
push
mov
mov
pop
jle
cmp
cmp
rcl
jle
cmp
cmp
mov
pop
jle
cmp
cmp
mov
pop
jle
ja
jg
cmp
call
neg
pop
cmp
cmp
pop
jle
cmp
cmp
and
jnp
jle
addr16
inc
mov
cmp
mov
cmp
cmp
jle
cmp
cmp
cmp
cmp
mov
cmp
dec
or
cmp
mov
push
lahf
(bad)
retf
jle
mov
pop
jle
cmp
cmp
mov
cmp
jecxz
pop
jle
cmp
cmp
adc
jns
jle
sbb
cmp
mov
pop
jle
cmp
cmp
mov
pop
sub
jmp
and
and
pop
jle
cmp
mov
pop
jle
cmp
cmp
cmp
sub
jp
xor
imul
repnz
adc
ja
cmp
adc
test
je
xor
test
repz
push
nop
xor
adc
mov
aaa
ror
mov
out
add
adc
inc
pop
ret
cmp
push
(bad)
jecxz
outs
push
ficomp
inc
cwde
add
sub
cmps
cmp
push
(bad)
jecxz
inc
push
add
pop
in
xchg
or
addr16
lods
pop
in
lahf
in
xor
mov
xor
push
je
inc
sbb
push
mov
inc
ds
ins
jb
outs
shr
cmps
fcom
call
push
or
out
xchg
(bad)
out
dec
popf
out
scas
sbb
mov
leave
dec
sbb
mov
push
pop
mov
push
or
jge
fild
inc
lods
or
cwde
lods
popf
fwait
cdq
lods
cmp
mov
mov
lods
add
push
xor
mov
add
lods
repnz
pushf
mov
mov
in
lahf
mov
inc
outs
(bad)
outs
jne
jne
inc
mov
test
xor
dec
stos
mov
jp
xchg
dec
popf
xor
lods
add
pop
xor
ss
sahf
pop
inc
add
xchg
jb
fwait
or
sahf
cmps
out
(bad)
in
push
lock
jno
jle
jg
loop
addr16
test
imul
mov
loop
iret
push
clc
mov
jbe
mov
lods
data16
inc
inc
sub
mov
fs
jmp
pop
ins
mov
jg
pop
push
jmp
inc
sbb
dec
sbb
lock
call
inc
push
and
cli
movs
xor
(bad)
loopne
daa
lods
cmp
push
sub
in
imul
out
jbe
mov
and
jo
in
in
cld
push
add
in
sub
movs
cmp
in
cmps
cmp
or
test
stos
jp
or
addr16
xchg
dec
xor
movs
es
inc
mov
cmp
xlat
test
xchg
jmp
xchg
dec
cmp
aas
fucomi
(bad)
es
mov
sub
leave
or
cmp
inc
pushaw
leave
(bad)
jns
stc
mov
adc
leave
daa
add
xchg
push
test
mov
add
ss
pop
sub
mov
pop
movs
popf
mov
push
sahf
daa
popa
add
sub
and
push
xor
push
or
test
retf
adc
in
and
push
test
stos
je
fidivr
sbb
pop
das
push
add
mov
and
push
xchg
adc
adc
jmp
pop
sub
mov
pop
movs
popf
mov
mov
xor
add
iret
and
push
xor
push
sub
cdq
loop
push
retf
adc
in
and
push
test
stos
je
mov
add
ss
pop
das
push
add
mov
and
push
out
pop
pop
in
dec
and
and
retf
fstp
pop
movs
popf
mov
mov
sub
add
jo
iret
and
push
xor
push
and
(bad)
loop
(bad)
cmp
jmp
outs
push
stos
je
mov
js
aaa
mov
pop
das
push
add
mov
and
push
movs
adc
and
imul
sub
mov
pop
movs
popf
mov
inc
popf
pop
popa
add
call
iret
and
push
xor
push
pop
cmp
pop
jmp
call
dec
dec
adc
in
and
push
test
stos
je
lds
mov
mov
pop
das
push
or
mov
and
push
popf
adc
and
jmp
pop
sub
mov
pop
movs
xchg
mov
or
pop
movs
add
retf
and
push
xor
push
and
pop
jmp
xor
cmp
jmp
outs
push
mov
add
ss
outs
and
mov
pop
movs
popf
sti
jmp
mov
add
push
ret
and
push
xor
push
sub
xor
push
mov
jns
in
xchg
push
test
stos
je
(bad)
cmp
ss
dec
xchg
das
push
add
mov
aam
mov
and
push
stos
jne
(bad)
movs
xchg
or
(bad)
push
outs
and
mov
pop
movs
popf
sti
jmp
loop
sbb
popa
pop
pop
test
or
xor
xor
push
cmp
adc
xor
retf
jns
in
xchg
push
test
stos
je
sar
add
fidivr
jnp
xchg
das
push
add
mov
aam
mov
and
push
lea
push
push
push
inc
imul
and
mov
pop
movs
popf
sti
jmp
ret
mov
add
xor
xor
push
add
test
retf
push
cmp
jmp
outs
push
stos
je
out
cmp
xor
jp
xchg
das
push
add
mov
aam
mov
and
push
int3
jne
or
add
(bad)
push
outs
and
push
scas
test
jge
mov
cmp
pop
das
push
inc
les
outs
jmp
clc
and
push
out
cmp
stos
mov
fs
sbb
int
adc
pop
les
fld
sbb
(bad)
data16
outs
and
push
scas
test
jge
mov
cmp
pop
das
push
inc
les
outs
push
push
push
cmp
stos
mov
or
add
dec
int
adc
pop
les
enter
inc
imul
and
push
scas
test
jge
mov
cmp
pop
das
push
inc
les
outs
push
sti
xchg
retf
xor
pop
das
push
dec
(bad)
jmp
jno
or
jmp
cmp
stos
lods
movs
xchg
adc
pop
sbb
pop
pop
pop
add
div
xchg
mov
cmp
dec
and
and
stos
pop
sub
sbb
mov
retf
iret
pop
das
push
dec
(bad)
jmp
add
clc
call
dec
pop
adc
stos
fs
neg
jae
add
out
and
div
add
jmp
ret
pop
das
push
inc
aam
push
aaa
(bad)
dec
into
pop
pop
(bad)
adc
jbe
jmp
dec
and
push
stos
add
retf
xchg
popf
imul
adc
int
mov
add
retf
jmp
pop
retf
outs
shl
gs
dec
aas
cmp
pop
das
push
inc
aam
push
aaa
(bad)
dec
(bad)
pop
pop
or
aaa
popa
popa
jmp
dec
and
push
stos
add
call
cwde
int
adc
int
mov
and
das
jmp
pop
retf
outs
shl
gs
dec
das
push
inc
aam
push
aaa
(bad)
dec
(bad)
pop
xchg
imul
and
push
stos
add
jmp
add
adc
int
mov
popa
cmp
dec
push
jae
cmp
retf
outs
shl
xor
mov
cmp
pop
das
push
inc
aam
push
aaa
(bad)
dec
mov
icebp
push
(bad)
jge
imul
and
push
stos
add
into
out
popaw
pop
arpl
int
adc
int
mov
and
xchg
jmp
pop
cdq
push
daa
cmp
popf
comiss
call
test
sub
hlt
mov
and
cmps
sub
in
sub
in
ins
and
icebp
pop
ds
in
sub
popa
hlt
loopne
rcl
es
push
add
jbe
mov
push
push
paddd
push
(bad)
jecxz
(bad)
jecxz
jb
lods
xor
stc
push
repz
pop
xor
dec
sbb
jb
mov
push
push
paddd
push
(bad)
jecxz
orps
sbb
inc
cwde
lods
sbb
inc
cwde
lods
add
enter
test
neg
cmp
addr16
mov
inc
sbb
cwde
lods
sbb
inc
in
popf
sbb
pushf
adc
adc
pop
in
mov
cmps
cwde
lods
cmp
lahf
loope
xlat
mov
sbb
ret
xchg
std
inc
push
cmp
daa
push
stos
shl
popf
loop
scas
sub
xchg
(bad)
and
sbb
dec
imul
lahf
dec
ret
jg
mov
(bad)
out
mov
cdq
mov
jne
xchg
pop
hlt
lods
pop
out
inc
mov
or
push
xor
pop
pop
loope
mov
call
mov
sbb
jmp
sbb
dec
in
cmps
mov
add
test
sbb
mov
jp
scas
mov
sub
mov
mov
dec
mov
inc
xor
pop
push
call
inc
xor
jnp
test
loop
loop
lahf
add
dec
add
xchg
inc
xchg
jae
xor
mov
test
or
mov
data16
mov
sbb
sbb
inc
pop
not
je
jb
outs
push
shl
stc
xchg
xchg
inc
mov
sbb
mov
(bad)
xchg
mov
mov
stos
out
pop
jg
push
in
sahf
ss
sahf
jo
scas
xchg
int3
mov
test
test
out
fidivr
test
je
ja
in
mov
test
not
neg
ret
loop
mov
test
jne
mov
push
lea
ds
fstp
test
not
shr
cdq
outs
mov
add
test
jne
mov
test
idiv
mov
test
not
cmp
and
mov
test
not
out
xchg
mov
shl
sub
sbb
sti
sbb
ins
lea
test
not
test
jbe
div
pop
iret
(bad)
out
int3
data16
or
idiv
(bad)
in
xchg
mov
jmp
fcmove
xlat
out
(bad)
xchg
(bad)
dec
mov
int3
xlat
cmps
cmp
ja
nop
fimul
mov
add
test
idiv
jecxz
mov
loope
cmp
in
and
mov
test
test
loope
in
in
xchg
push
retf
sbb
outs
mov
cmp
test
idiv
in
mov
loope
test
xchg
idiv
pop
outs
mov
cmp
test
not
(bad)
mov
test
not
test
xchg
sti
test
hlt
pusha
loope
lods
idiv
test
not
test
xchg
sti
test
hlt
loopne
out
(bad)
dec
(bad)
mov
(bad)
jmp
sti
out
int3
xor
out
jb
sbb
xchg
mov
shl
cmp
das
xchg
mov
test
jbe
div
fcmove
retf
out
jnp
icebp
xchg
aaa
sbb
sbb
(bad)
pop
and
das
and
ins
or
and
ja
das
fnstsw
test
not
jge
int3
pop
or
and
mov
(bad)
mov
jne
and
xor
cmp
outs
mov
cmp
test
not
cmp
and
mov
test
mul
mul
mov
cmp
das
xchg
mov
test
neg
sbb
xchg
mov
inc
cmc
fidiv
pop
(bad)
fld
sub
mov
test
hlt
fs
clc
int3
pop
cmp
and
mov
(bad)
stos
sbb
and
outs
and
and
xor
cmp
outs
mov
cmp
test
not
cmp
and
mov
test
mul
div
mov
or
das
jns
out
xchg
mov
sbb
mov
outs
push
inc
sbb
stos
fadd
sub
das
inc
mov
mov
sbb
xchg
in
test
ja
sub
out
shl
das
jno
rol
or
das
cdq
gs
or
push
out
or
and
outs
and
mov
test
imul
sbb
xchg
mov
test
hlt
retf
test
mov
mov
xchg
mov
test
test
sbb
xchg
mov
test
cwde
es
cmp
scas
sbb
xchg
mov
test
mul
mov
into
stos
fild
jno
rol
or
sbb
cdq
or
inc
push
add
cmp
jbe
inc
or
and
outs
and
mov
test
je
cmp
not
neg
loopne
push
(bad)
mov
in
mov
test
test
test
sbb
fidivr
test
jbe
mov
in
mov
leave
neg
mov
test
test
cmp
and
fldcw
jne
mov
(bad)
cmp
das
xchg
mov
jge
sub
lds
mov
repnz
cmp
mov
xchg
mov
div
cmc
in
cmp
not
or
mov
xchg
aam
not
mov
push
cmp
mov
xchg
mov
test
and
mov
test
jne
mov
retf
sbb
daa
popa
push
and
mov
and
mov
test
test
or
and
inc
sbb
and
jmp
lock
sbb
fidivr
test
jbe
mov
adc
outs
sbb
jae
sar
mov
sbb
or
mov
sbb
lea
test
not
out
int3
xor
(bad)
mov
cmc
js
jne
gs
outs
mov
add
test
not
inc
movs
fidivr
test
ja
loope
in
hlt
mov
test
cmc
std
mov
test
ja
dec
sbb
mov
lds
xor
loopne
rol
xchg
fidivr
test
jbe
mov
adc
push
sbb
jae
sar
retf
stos
sbb
and
outs
and
mov
test
not
adc
loope
cmp
pop
and
mov
inc
jo
sub
fsub
sbb
idiv
inc
ret
loop
imul
imul
pop
sbb
cdq
mov
fwait
xchg
mov
test
ja
and
outs
and
cs
(bad)
cmp
in
xchg
mov
test
neg
imul
movs
fidivr
test
not
stos
xchg
xchg
mov
test
hlt
fidivr
test
not
or
fs
imul
lea
pop
(bad)
fstp
test
not
sbb
fsub
sbb
test
ret
loop
mov
test
test
outs
mov
cmp
test
imul
in
(bad)
and
popa
and
mov
test
not
aas
int
imul
mov
test
test
stos
xchg
xchg
mov
jmp
fsubr
cmp
and
jnp
jl
cmp
(bad)
fstp
test
je
loope
test
out
push
imul
repz
out
into
xor
cld
fld
movs
repz
out
sbb
(bad)
(bad)
es
mov
mov
pop
fcmovnu
popf
inc
lea
mov
push
mov
mov
sbb
lods
xor
lods
mov
nop
sbb
dec
call
inc
test
adc
lods
add
clc
xchg
sbb
inc
push
inc
jp
in
ror
fistp
dec
xlat
repnz
xchg
inc
outs
mov
mov
test
out
scas
into
add
mov
mov
inc
dec
bound
add
retf
arpl
arpl
(bad)
in
xchg
bound
dec
popf
out
scas
add
inc
test
push
test
inc
push
arpl
dec
idiv
addr16
scas
mov
mov
iret
(bad)
les
push
push
xlat
sti
pop
jne
mov
ins
cmp
jp
add
arpl
push
dec
jb
mov
push
jmp
inc
mov
dec
mov
mov
in
xchg
or
inc
mov
xor
mov
jae
inc
cld
add
dec
sbb
ds
je
cmps
dec
imul
mov
popf
das
std
lods
push
lods
call
fs
add
lods
push
icebp
stos
cmps
mov
jne
pop
lods
repnz
add
add
mov
pop
out
push
mov
test
and
mov
add
in
cmc
push
mov
fiadd
leave
dec
data16
pushf
int3
jg
mov
ja
adc
pop
push
mov
aas
stos
out
mov
cwde
stos
scas
movhps
pop
dec
mov
jb
mov
pop
mov
stos
jb
hlt
jl
jg
std
mov
bound
jb
(bad)
mov
add
mov
int
repz
jle
xor
mov
loopne
xor
bound
mov
and
arpl
(bad)
sti
adc
fsubr
push
(bad)
jecxz
(bad)
sbb
nop
lods
dec
inc
sbb
ja
in
xor
push
cdq
lods
inc
in
lahf
int
mov
iret
sti
inc
or
push
inc
call
neg
inc
mov
jp
inc
outs
pop
cmp
inc
push
jno
into
lods
imul
push
movs
(bad)
mov
mov
lods
pop
in
fwait
dec
jno
cwde
lods
jecxz
fwait
xchg
mov
adc
add
aas
mov
xchg
retf
(bad)
jbe
loope
imul
mov
jl
mov
inc
scas
sahf
cli
nop
mov
mov
xor
mov
inc
xor
fild
push
in
xchg
inc
repnz
inc
out
sub
retf
xchg
scas
mov
lds
aaa
in
pop
push
icebp
sbb
cwde
jecxz
mov
push
jecxz
data16
mov
mov
out
pusha
mov
jbe
mov
in
xchg
mov
addr16
mov
ja
mov
sti
mov
(bad)
mov
xchg
stos
pop
mov
data16
pusha
jge
mov
mov
fs
mov
mov
loopne
daa
sub
lahf
in
ret
jnp
lods
pushf
stos
push
mov
repz
cs
pop
(bad)
(bad)
xor
movs
ret
pop
push
xchg
push
pop
jnp
jne
aas
fidivr
cmp
sti
xchg
push
xchg
push
jecxz
fdivr
jo
jns
jo
dec
pop
ret
pop
push
adc
cmps
lods
repnz
mul
cmps
sub
shl
adc
stc
neg
aad
mov
in
into
das
mov
inc
mov
pop
imul
scas
sbb
cmps
scas
push
jmp
push
out
shr
(bad)
jmp
jl
push
and
and
push
dec
repz
inc
mov
jo
aas
mov
arpl
adc
jg
fstp
jl
jg
cmp
fidivr
ins
popf
push
and
call
jl
jg
aaa
shl
ja
fidivr
mov
popf
pop
and
shl
arpl
fidivr
jo
sti
and
xor
sahf
cmc
sub
mov
ins
not
jp
jg
imul
xchg
push
les
jne
cmp
cmp
cmp
cmp
cmp
mov
and
fdivr
and
cmp
not
cmp
fisub
and
fdivr
and
cmp
ja
cmp
cmp
cmp
cmp
xor
cmp
cmp
imul
cmp
jne
jle
cmp
pop
cmp
cmp
imul
inc
fdivr
and
mov
dec
sub
mov
cmp
cmp
cmp
jno
push
fdivr
mov
cmp
imul
imul
mov
mov
cmp
sub
test
cli
and
mov
cmp
cmp
cmp
cmp
fcom
jb
cmp
xchg
jmp
mov
sub
jne
mov
mov
jbe
je
and
mov
js
hlt
xchg
div
or
xor
out
sbb
adc
mov
and
or
push
cmps
cmp
push
(bad)
jecxz
inc
push
loope
pop
in
sub
ja
lods
imul
jne
xchg
mov
adc
push
jae
inc
xchg
lods
sub
call
repz
inc
dec
mov
gs
mov
push
push
test
jg
push
jbe
(bad)
xchg
inc
in
out
or
out
push
xor
mov
inc
mov
mov
adc
or
inc
cwde
lods
xor
sahf
dec
lock
xor
inc
adc
inc
popa
or
call
dec
lods
sbb
std
jg
push
fisttp
inc
adc
add
imul
lock
out
retf
out
out
inc
idiv
push
pop
cli
inc
jle
xlat
and
call
inc
xor
pop
mov
or
push
mov
push
jbe
(bad)
scas
data16
mov
fild
pop
mov
ret
mov
xchg
pop
shl
test
pop
ror
jge
cmp
mov
in
sbb
sbb
popf
cmps
inc
cmps
popa
inc
and
cmps
mov
in
loop
pop
push
loop
addr16
(bad)
mov
sbb
shr
jle
inc
sub
shl
mov
sar
call
cmc
call
cmc
call
cmc
mov
test
push
fwait
sub
mov
in
pop
in
iret
popa
lahf
mov
aam
out
sti
push
rcl
in
and
cmc
dec
scas
lahf
jmp
cwde
arpl
call
mov
aam
jns
xchg
sub
hlt
xchg
or
lods
xchg
iret
rcl
sub
xor
lahf
mov
aam
sbb
mov
aam
sti
mov
push
sub
hlt
xor
leave
mov
hlt
lahf
hlt
mul
mov
push
lahf
lahf
jmp
cwde
arpl
mov
push
out
lahf
jmp
cwde
arpl
aaa
xlat
xor
rcl
mov
popf
lahf
jmp
cwde
arpl
xor
retf
stc
push
and
(bad)
xlat
into
dec
xor
arpl
mov
aam
lahf
cmp
aam
fdivr
and
aam
lahf
mov
aam
lahf
cmp
aam
lahf
mov
aam
lahf
jns
arpl
mov
push
mov
lahf
mov
aam
(bad)
aam
gs
push
dec
lahf
hlt
fisub
mov
aam
mov
mov
aam
lahf
mov
push
and
pop
sub
sub
loopne
sahf
aaa
popf
stc
mov
xor
mov
lahf
mov
aam
mov
neg
iret
sub
add
aaa
popf
stc
mov
and
mov
xchg
mov
push
cs
lock
cwde
jl
mov
retf
mov
aam
sar
or
mov
mov
lahf
mov
push
and
pop
sub
sub
nop
les
and
jmp
mov
(bad)
mov
push
jp
and
dec
lods
hlt
sub
sub
sub
mov
aam
icebp
mov
out
dec
mov
mov
lahf
mov
aam
dec
and
std
hlt
sbb
sub
sub
mov
aam
iret
mov
push
rcr
or
lahf
mov
aam
mov
push
popf
xchg
iret
rcl
or
xor
lahf
mov
push
lea
fstp
xor
lahf
mov
push
lods
xchg
iret
rcl
fstp
xor
(bad)
mov
aad
lahf
mov
aam
std
mov
ss
mov
sub
xor
adc
loope
dec
cmc
hlt
and
icebp
xchg
fisubr
inc
push
ror
call
cmp
mov
gs
inc
or
push
cmps
cmp
push
(bad)
jecxz
outs
push
fidiv
push
mov
or
fwait
jno
pusha
movs
jno
jo
and
xchg
stc
push
repz
pop
les
fstp
xor
sbb
inc
cmp
in
add
icebp
outs
mov
not
imul
sbb
inc
call
dec
and
mov
and
pop
stc
jecxz
(bad)
in
mov
cmc
imul
mov
mov
data16
lods
sbb
inc
push
jb
inc
mov
lods
mov
outs
jbe
je
js
in
outs
xor
stos
fild
scas
(bad)
jo
fisttp
mov
outs
jbe
sbb
inc
or
cmp
mov
pop
jno
add
mov
sub
mov
mov
mov
push
pop
loope
repnz
call
out
out
jo
jecxz
hlt
scas
push
push
add
mov
xchg
pop
or
push
inc
jae
int
sti
mov
icebp
add
scas
inc
sbb
mov
push
fist
inc
adc
sub
or
out
push
sti
mov
jb
cmc
inc
in
lods
popf
jnp
fisub
xchg
dec
mov
mov
mov
mov
push
shr
sbb
mov
out
mov
dec
test
or
scas
enter
xchg
inc
test
cmp
sbb
in
ss
in
mov
fs
mov
movs
dec
inc
sub
lock
sub
cmc
xchg
aam
les
fs
sub
mov
fs
shl
in
or
lock
sub
xchg
(bad)
mov
mov
push
mov
mov
fs
icebp
movs
dec
inc
push
dec
hlt
inc
sub
hlt
mov
fs
pushf
fs
jnp
adc
or
jmp
jno
in
mov
xchg
mov
mov
fs
xchg
fs
jno
cld
mov
sub
mov
fs
lds
sbb
cwde
idiv
xchg
rcr
push
scas
icebp
jl
mov
push
test
std
gs
mov
sahf
aas
jmp
and
gs
mov
fs
scas
push
jle
mov
daa
cmp
xor
mov
fs
mov
dec
sub
ins
enter
out
cmp
ss
or
pop
mov
ins
mov
outs
dec
test
ins
mov
pop
jae
ins
mov
repz
push
jecxz
adc
lock
adc
hlt
jne
sub
mov
fs
(bad)
fs
pop
sub
and
push
dec
hlt
jne
sub
mov
fs
cmp
std
or
jbe
in
mov
fs
cli
fs
in
jp
jmp
stc
push
loopne
in
sahf
jbe
call
xor
dec
xor
xchg
mov
add
aad
(bad)
ss
push
je
out
or
mov
inc
cwde
lods
sbb
adc
mov
and
mov
dec
inc
int3
mov
call
(bad)
retf
arpl
pushf
inc
out
and
lahf
mov
mov
xchg
xchg
jbe
cmp
out
(bad)
in
stos
idiv
or
push
xchg
bound
dec
test
jmp
dec
mov
xor
movhlps
mov
data16
and
je
pop
in
jecxz
inc
push
sbb
sub
jne
jmp
dec
jge
jns
xor
add
dec
jle
hlt
mov
cs
rcr
pop
(bad)
stc
jecxz
cdq
inc
xor
fwait
inc
mov
cwde
or
push
mov
popf
jb
lods
pop
in
fwait
dec
mov
cwde
lods
sahf
out
cwde
add
adc
bound
add
sbb
div
jp
jl
popf
xchg
mov
inc
adc
es
test
imul
ja
sub
iret
pop
jg
jmp
mov
sti
pop
loope
mov
pop
push
push
(bad)
mov
jg
repnz
loop
je
stc
inc
data16
shl
repnz
jnp
movs
inc
add
push
mov
stos
out
out
pop
int3
mov
cmps
enter
enter
ret
mov
or
inc
outs
inc
dec
sub
dec
enter
xchg
inc
enter
enter
fadd
in
inc
enter
lahf
test
push
loopne
daa
xchg
cld
and
hlt
enter
callw
and
mov
add
mov
dec
xchg
cdq
xchg
jns
sub
in
pop
mov
in
sbb
mov
pop
in
ror
cwde
lods
outs
in
lahf
sar
mov
loope
scas
dec
(bad)
ud2
mov
out
bnd
lahf
inc
jmp
and
inc
mov
push
push
mov
into
mov
addr16
sahf
inc
mov
jg
mov
mov
in
push
out
add
inc
xor
sub
jno
dec
dec
outs
stos
xchg
movs
jl
mov
ja
pushf
mov
cld
inc
xor
fwait
push
pushf
fisubr
cmp
mov
loop
jae
lock
cli
imul
mov
cmp
cmc
dec
sahf
mov
xchg
out
adc
xchg
pop
push
lods
pop
add
je
jae
cli
sub
imul
shl
jmp
ins
jg
imul
push
ret
jo
xor
ja
mov
mov
jl
push
sub
es
add
inc
xor
mov
jnp
mov
addr16
add
pop
add
sub
test
pusha
inc
je
stos
mov
addr16
pushf
inc
fs
lods
xchg
mov
mov
aas
inc
push
arpl
inc
mov
mov
test
ja
ins
mov
sub
lods
(bad)
repnz
repz
call
andnps
mov
fbstp
ins
push
xchg
pushf
out
xchg
not
out
xchg
mov
sar
pop
icebp
pushf
popf
lods
repz
xchg
sbb
mov
test
adc
add
pushf
pop
push
pop
sbb
ficomp
out
popa
dec
out
popf
inc
cwde
std
cmp
inc
sbb
pop
inc
cwde
loope
popf
push
es
and
lods
push
sub
cwde
sbb
push
jp
inc
push
pop
fadd
aas
xchg
movzx
mov
out
xchg
dec
call
sub
sbb
ins
stos
cmp
add
dec
push
cdq
inc
call
jne
add
pop
mov
push
test
adc
xor
mov
mov
mul
jmp
and
fidiv
stos
pop
pop
retf
adc
clc
daa
int3
call
mov
pop
jp
(bad)
out
push
fnstcw
dec
imul
push
push
mov
or
pop
test
out
(bad)
cmps
aam
daa
dec
clc
stos
dec
out
adc
bound
stos
jl
pushf
rcr
pop
add
je
jno
adc
cmps
dec
cli
inc
push
jl
loop
movs
leave
push
fwait
aas
out
mov
sbb
jae
hlt
jae
mov
xor
fnstcw
inc
outs
cwde
js
xchg
cmp
stos
shl
mov
xlat
jnp
cmc
out
adc
push
cmps
int3
jb
les
into
addr16
push
and
push
int
sbb
ins
adc
jmp
sub
sahf
enter
fild
pop
fs
sub
call
sbb
push
cs
jbe
retf
xor
jmp
cli
das
(bad)
ins
xchg
retf
cs
retf
add
fild
jb
xchg
cmp
sub
jle
iret
jne
inc
out
scas
jae
xchg
cmp
xchg
sahf
and
mov
add
retf
jb
(bad)
mov
add
dec
jbe
shl
fild
les
cmp
fstp
add
(bad)
pushf
adc
imul
mov
in
sub
push
int
pushf
jnp
btc
(bad)
mov
or
out
inc
pop
test
add
jecxz
xor
into
stc
mov
outs
add
iret
add
gs
loope
mov
cli
and
sbb
ins
xor
push
jl
int3
jae
cmp
sub
call
std
stos
inc
jmp
inc
popa
xchg
xchg
adc
cld
les
jae
mov
jmp
sub
xchg
cdq
mov
adc
call
stos
into
mov
ins
adc
in
stos
into
push
and
lods
ret
imul
sbb
mov
ss
fnstcw
retf
jnp
jno
push
mov
xchg
push
cmp
or
imul
hlt
cs
in
pop
dec
gs
cmp
cmp
add
retf
ret
movs
jecxz
sbb
lahf
pop
cmp
cmp
fild
fcom
jmp
adc
into
jb
ret
push
push
neg
sbb
fadd
scas
dec
out
xchg
iret
out
xor
add
cmp
mul
fstp
icebp
out
xchg
mov
sbb
call
push
int3
ja
retf
xor
sbb
shl
das
fscale
movs
leave
in
xchg
into
fild
iret
sbb
out
mov
mul
push
jg
jp
cwde
aas
xchg
xchg
mov
jns
leave
lock
dec
push
sub
push
cmps
retf
(bad)
jo
enter
outs
add
cmc
cmps
ret
imul
outs
push
sub
or
retf
jb
jne
xchg
mov
xor
sar
pop
int
mov
mov
push
jnp
iret
cmc
sbb
adc
nop
mov
pop
or
call
lods
outs
add
cmc
cs
imul
adc
sar
aad
stc
and
dec
adc
or
pop
add
push
sbb
addr16
fadd
sub
loope
stos
jne
popf
shl
xor
sahf
dec
jno
inc
push
dec
loopne
sub
sahf
pushf
inc
out
cmp
(bad)
push
iret
neg
jge
and
pop
mov
sar
movs
(bad)
in
xchg
inc
pop
pop
lods
loopne
es
sbb
aam
das
dec
jae
ret
or
clc
pushf
inc
xchg
sysenter
fidiv
sub
jo
retf
out
xor
in
xchg
mov
mov
dec
jne
mov
jp
lds
xor
sub
movs
dec
ja
inc
imul
adc
cmp
lods
push
cld
push
enter
outs
xchg
cmp
lods
sar
dec
icebp
pushf
repz
or
push
jnp
inc
icebp
adc
add
gs
dec
mov
dec
jno
ret
fcmovbe
cli
popf
iret
ins
xchg
ss
rcr
sub
in
push
retf
bound
sub
pop
xchg
mov
or
xlat
jle
out
xchg
in
mov
shl
and
mul
and
add
push
movs
enter
in
rcl
es
and
add
out
fst
sub
xchg
arpl
dec
jmp
jb
push
cmp
xchg
iret
popf
sbb
in
(bad)
adc
shl
daa
inc
push
ret
fiadd
cwde
sbb
gs
aam
call
test
mov
push
js
leave
ins
xchg
mov
sub
mov
iret
cmc
sbb
adc
adc
dec
jp
inc
in
pop
dec
or
xcrypt-cbc
cmps
shl
cmc
pop
jg
jmp
popf
enter
out
enter
add
jmp
(bad)
fadd
xor
daa
retf
aaa
pop
xor
push
sti
cmps
leave
in
pop
pop
and
ja
(bad)
cmp
movs
enter
loope
aad
jne
imul
xchg
mov
xsha1
cmps
int
sub
xchg
dec
in
xor
(bad)
sub
pop
leave
lock
xor
add
int
sbb
jmp
push
dec
repz
sti
in
xchg
rcl
int
movs
shl
pop
add
push
aaa
daa
shl
int
mov
adc
or
xor
mov
dec
rcr
pop
and
dec
mov
pop
bound
pop
xor
btc
outs
iret
xchg
pop
push
dec
(bad)
pop
popa
dec
(bad)
pop
jg
(bad)
pop
xlat
dec
(bad)
pop
xlat
dec
(bad)
pop
push
dec
(bad)
pop
push
bswap
pop
push
rcl
xchg
inc
(bad)
pop
xchg
dec
(bad)
pop
push
dec
(bad)
pop
push
sbb
push
mov
call
cdq
xchg
add
xchg
or
mov
push
or
test
cwde
add
adc
or
add
nop
fwait
test
xchg
popf
xchg
xchg
mov
cwde
xchg
icebp
adc
xchg
xchg
xchg
xchg
fwait
lahf
mov
cdq
xchg
mov
pushf
call
hlt
imul
jecxz
popa
icebp
out
(bad)
js
out
(bad)
(bad)
cmc
push
in
je
out
jns
clc
cli
fs
in
(bad)
in
out
gs
jecxz
repz
loop
idiv
in
idiv
loopne
out
clc
loope
icebp
stc
jecxz
lock
out
icebp
std
out
push
push
in
jne
loopne
callw
popa
icebp
stc
jmp
cmc
sti
jb
loop
jl
loop
fs
jmp
loop
mov
xchg
sub
mov
mov
cmc
adc
jmp
imul
std
imul
clc
popa
out
mul
loop
outs
jmp
jecxz
fs
popa
pushf
jmp
cmc
adc
jmp
outs
jecxz
repnz
loopne
lea
xchg
xchg
sahf
lea
xchg
mov
jecxz
mov
cdq
xchg
xchg
call
adc
xchg
adc
fwait
test
xchg
pushf
mov
cwde
xchg
sbb
sbb
or
or
lea
xchg
cdq
or
sbb
add
lea
or
mov
test
lahf
add
xchg
add
add
xchg
(bad)
pop
pushf
xchg
mov
lahf
xchg
mov
popf
call
lea
popf
xchg
lock
out
hlt
imul
clc
popa
in
jmp
out
arpl
clc
in
icebp
cli
jmp
hlt
repnz
idiv
loopne
cmc
in
jl
cld
(bad)
js
stc
jmp
js
cmc
in
jb
not
jne
not
ja
not
dec
clc
repz
mov
pop
fcmovnbe
xlat
pop
fxch
fcom
iret
fmul
(bad)
rol
not
pop
dec
in
dec
ror
dec
cld
cmc
in
ja
repz
stc
repz
jle
in
jle
xchg
cli
(bad)
out
jecxz
fs
loope
fs
hlt
gs
hlt
adc
jmp
cli
ins
loope
out
in
cli
loop
in
clc
icebp
jle
out
(bad)
out
loope
out
clc
cld
outs
out
out
(bad)
in
in
addr16
clc
jmp
loope
(bad)
jmp
mul
loope
outs
call
jmp
outs
loop
mov
lahf
mov
xchg
test
fwait
call
xchg
sahf
test
mov
cwde
sbb
xchg
or
mov
push
xchg
pushf
setbe
xchg
add
mov
cwde
add
or
mov
cwde
add
sbb
push
xchg
call
lea
mov
xchg
nop
lock
cwde
xchg
mov
sahf
xchg
mov
xchg
mov
popf
xchg
mov
xchg
xchg
xchg
repnz
repnz
loopne
ins
out
jmp
out
fs
out
(bad)
in
out
fs
jmp
repz
jne
hlt
shl
not
jo
enter
retf
aam
(bad)
retf
(bad)
ror
leave
pop
rcr
into
inc
(bad)
into
push
fcmovnbe
iret
(bad)
es
int
and
ffreep
sub
rcr
pop
aam
ficomp
iret
xlat
inc
leave
(bad)
(bad)
dec
iret
int3
in
inc
sti
repnz
inc
push
shl
imul
dec
clc
repnz
dec
lock
clc
js
out
mul
out
repz
out
hlt
imul
mov
xchg
(bad)
ins
xchg
lahf
cli
sbb
loopne
imul
loopne
out
out
ins
repz
in
icebp
cli
jecxz
in
stc
(bad)
jg
stc
jmp
std
js
in
jns
loope
ins
in
hlt
outs
jecxz
mov
xchg
mov
cwde
lahf
adc
cdq
mov
fwait
xchg
xchg
cdq
sahf
mov
xchg
xchg
xchg
fwait
xchg
sbb
fwait
popf
pop
mov
add
or
xor
mov
push
mov
sahf
or
(bad)
call
sbb
test
xchg
push
mov
call
sbb
mov
test
xchg
pushf
sbb
fwait
lahf
sbb
popf
test
nop
pushf
mov
popf
xchg
mov
cwde
xchg
lea
jecxz
mov
cwde
xchg
icebp
pop
cwde
xchg
loope
loop
cli
imul
cmc
jnp
loop
outs
jmp
loopne
out
out
gs
jmp
(bad)
lock
jb
hlt
shl
aam
(bad)
retf
sti
repnz
cmc
shl
not
dec
cld
leave
retf
dec
into
(bad)
mov
and
cmp
and
aas
scas
xor
and
cmp
mov
sub
ret
pop
fadd
ficom
retf
(bad)
inc
and
rcl
rcr
fiadd
ret
fcomp
int
pop
idiv
cli
jp
loopne
(bad)
jmp
clc
(bad)
in
out
gs
xchg
sub
hlt
sbb
pushf
call
imul
in
stc
push
loopne
outs
out
out
vcvttss2usi
in
jnp
out
gs
addr16
idiv
in
(bad)
imul
mul
out
mov
jmp
icebp
imul
xchg
lea
cdq
xchg
test
xchg
pushf
test
nop
pushf
sbb
call
(bad)
scas
add
mov
or
jno
mov
or
sbb
add
sbb
mov
cwde
add
mov
test
xchg
popf
mov
fwait
nop
mov
call
adc
xchg
stc
sbb
loopne
sbb
xchg
not
loopne
jmp
jecxz
popa
repnz
jns
in
fs
jecxz
out
clc
loop
in
stc
out
jge
(bad)
jmp
shl
dec
cli
hlt
shl
shl
enter
into
fimul
ret
leave
dec
rcr
iret
pop
fcmovbe
movs
shl
cmp
movs
ds
mov
or
mov
pop
add
or
push
add
pop
adc
pop
xor
mov
dec
mov
xor
and
sub
inc
mov
(bad)
fist
shl
(bad)
mul
jb
sti
in
repnz
(bad)
jle
lock
jge
in
jnp
jecxz
jmp
out
jnp
in
jns
(bad)
std
jnp
jecxz
gs
(bad)
mul
loope
out
clc
sti
js
std
in
in
cli
loope
out
clc
sti
jg
loopne
ins
in
loope
fs
mov
out
(bad)
ins
loop
cmc
imul
in
mov
nop
(bad)
adc
xchg
mov
xchg
xchg
popf
mov
xchg
popf
adc
cwde
xchg
pop
mov
cwde
add
nop
or
mov
or
lea
add
sbb
mov
xchg
add
sbb
mov
pushf
add
xchg
push
nop
pushf
sbb
fwait
sbb
xchg
mov
xchg
jmp
hlt
sbb
out
std
ins
jmp
outs
call
in
(bad)
sti
in
data16
icebp
out
jo
cmc
jmp
jle
repnz
cmc
fdiv
fmul
rol
int
mov
(bad)
sub
cs
adc
or
push
imul
ja
push
jb
jle
jo
imul
jbe
jns
jbe
pusha
sti
jb
jl
popa
outs
add
push
adc
cwde
pop
sbb
xchg
add
aas
xchg
cmp
sub
shl
(bad)
out
inc
vpsrlw
call
jne
hlt
out
jb
hlt
loopne
in
stc
icebp
fs
xchg
mov
xchg
jmp
(bad)
jmp
icebp
in
idiv
out
cli
sti
in
in
sti
loopne
sti
icebp
sti
jge
loope
jp
in
gs
imul
in
hlt
outs
loop
icebp
pusha
loop
icebp
imul
call
mov
xchg
cwde
push
xchg
cwde
xchg
cwde
popf
adc
nop
pushf
sbb
cdq
sbb
cwde
cdq
sbb
test
add
(bad)
cdq
add
adc
xchg
xchg
add
sbb
xchg
sbb
mov
call
sbb
xchg
sbb
cwde
(bad)
sbb
call
cmc
imul
sti
imul
stc
outs
in
sti
gs
out
gs
jmp
loopne
jmp
jnp
not
jne
leave
shl
fisttp
rol
(bad)
fbstp
rcr
aad
stos
xor
add
lea
fs
jbe
outs
bnd
push
repz
dec
pop
enter
les
pop
iret
dec
dec
inc
int3
dec
inc
pop
fisttp
push
ror
rol
retf
pusha
hlt
inc
fs
popa
ins
sbb
push
adc
xchg
and
rcr
call
dec
cmc
(bad)
in
sti
repnz
sti
stc
out
lock
cmc
jl
out
lock
in
icebp
outs
sahf
call
in
jmp
jmp
cli
jecxz
idiv
in
repz
sti
jge
clc
std
gs
loop
fs
lea
xchg
repz
lahf
xchg
lock
xchg
mov
xchg
popf
mov
cdq
xchg
cmc
adc
jmp
imul
cdq
adc
add
sbb
xchg
add
nop
sahf
sbb
xchg
sbb
call
mov
popf
add
mov
fwait
add
sbb
mov
test
mov
mov
call
adc
xchg
hlt
adc
out
icebp
push
call
sti
imul
out
fs
out
jns
stc
jmp
jge
lock
(bad)
into
into
mov
int3
inc
rcr
mov
(bad)
sub
xor
mov
adc
outs
xchg
jns
pop
std
inc
dec
push
iret
dec
inc
pop
int
inc
inc
ret
dec
inc
push
fisttp
pop
ror
inc
inc
pop
fmul
inc
ret
pop
pop
inc
fisttp
push
ror
push
int3
jae
add
imul
sbb
cmp
and
fcom
aam
ror
out
inc
push
out
push
cld
jae
jecxz
jo
loopne
fs
jmp
out
jp
cld
(bad)
js
std
(bad)
js
in
js
in
cmc
jmp
out
jmp
in
(bad)
cli
cmc
fs
jmp
bound
icebp
imul
call
mov
sahf
xchg
mov
xchg
lahf
lea
popf
xchg
mov
sahf
xchg
adc
pop
lahf
add
test
pop
xchg
cdq
add
cdq
sbb
xchg
mov
cwde
xchg
popf
imul
test
push
xchg
adc
mov
pushf
add
sbb
mov
sbb
cdq
sbb
lea
lea
lahf
xchg
lea
sahf
xchg
mov
xchg
mov
in
repnz
jmp
std
ins
repz
jmp
out
out
repnz
out
jnp
not
jl
retf
(bad)
repz
int
dec
fcmovbe
les
mov
xlat
fbstp
fsubr
cmp
sbb
or
add
sbb
bound
js
pop
std
inc
dec
push
iret
dec
pop
pop
rcl
ror
fild
pop
int
dec
pop
iret
inc
inc
pop
(bad)
inc
ret
dec
(bad)
push
pop
push
ror
push
rcl
shl
shr
loop
or
call
aad
retf
inc
ret
retf
cli
lock
jg
icebp
jecxz
sti
icebp
cld
jg
loop
jl
jecxz
gs
in
arpl
xchg
(bad)
ins
sahf
xchg
hlt
imul
in
imul
out
icebp
outs
in
stc
ins
out
stc
push
loope
pusha
loop
repz
cdq
jmp
xchg
xchg
mov
call
adc
lahf
sbb
fwait
mov
pushf
xchg
adc
xchg
call
pop
lahf
pop
nop
xchg
mov
pushf
add
pushf
xchg
sbb
lea
add
mov
add
adc
jns
sbb
mov
add
call
lahf
xchg
mov
loop
lock
repnz
loop
mul
in
repnz
jecxz
sti
repnz
jge
repz
jle
cmc
shl
retf
(bad)
ja
retf
retf
inc
enter
retf
ror
(bad)
ror
inc
(bad)
mov
and
sub
push
add
mov
or
lea
sbb
and
jmp
je
cld
inc
dec
push
int3
inc
inc
pop
enter
rol
fild
pop
hlt
dec
inc
inc
iret
inc
inc
pop
(bad)
inc
rcl
(bad)
push
pop
pop
ror
outs
ret
outs
lds
sbb
imul
push
cmp
and
pop
ds
rcr
leave
jmp
jmp
jl
sti
call
jl
stc
in
lock
jecxz
repz
cmc
jl
out
imul
std
popa
call
(bad)
stc
js
in
hlt
jnp
in
hlt
popa
loopne
mov
xchg
cmc
outs
loopne
mov
in
repz
test
xchg
test
xchg
fwait
mov
xchg
lahf
mov
xchg
cli
adc
jecxz
pusha
loopne
test
fwait
sbb
call
xchg
sbb
xchg
cwde
add
sbb
mov
xchg
pop
xchg
lea
push
xchg
call
mov
pushf
add
test
add
xchg
add
cdq
sbb
test
xchg
popf
xchg
cdq
mov
call
adc
xchg
clc
push
loop
(bad)
push
loopne
hlt
imul
repnz
jmp
ins
out
out
outs
lock
(bad)
js
in
jns
hlt
frstor
ret
ror
ret
pop
into
fmul
pop
rcr
mov
and
cmp
mov
cmp
add
popa
push
jmp
dec
inc
hlt
inc
inc
push
lds
int
inc
inc
iret
dec
pop
inc
fisttp
inc
rcr
fst
dec
rcr
dec
ficomp
dec
rcl
pop
aam
push
push
fcom
imul
or
and
(bad)
pop
and
ffreep
pop
rcr
fcomp
shl
(bad)
iret
cli
dec
mul
(bad)
jge
in
(bad)
call
cli
(bad)
jle
out
jl
loope
popa
out
loope
fs
loopne
jmp
cld
outs
icebp
loope
jp
jmp
jmp
icebp
pusha
jecxz
lock
loopne
lea
xchg
test
lahf
mov
lahf
mov
fwait
xchg
adc
nop
(bad)
pop
xchg
xchg
mov
xchg
fwait
mov
xchg
lahf
test
nop
popf
sahf
adc
add
add
xchg
call
mov
pushf
add
lea
lea
call
adc
mov
pushf
add
cdq
mov
xchg
lea
test
loop
mov
xchg
xchg
mov
fwait
xchg
mov
lahf
xchg
mov
cdq
xchg
repz
in
stc
ins
in
cld
arpl
loope
outs
repz
(bad)
addr16
cld
in
data16
cmc
call
jb
repnz
(bad)
lds
fcmovnb
pop
(bad)
retf
fbstp
aam
xor
pop
or
adc
inc
stc
inc
inc
pop
iret
dec
pop
inc
ret
push
inc
dec
les
dec
ficomp
dec
rcr
aam
push
dec
(bad)
pop
push
dec
xlat
pop
push
dec
xlat
pop
push
push
xlat
push
push
pusha
fisttp
or
(bad)
cmp
mov
(bad)
(bad)
sub
(bad)
jmp
vpmulhw
(bad)
loope
push
std
jb
loop
jnp
stc
clc
addr16
out
cmc
arpl
jmp
arpl
jecxz
outs
jmp
clc
outs
out
clc
arpl
loopne
ins
out
out
(bad)
jmp
pop
jmp
mov
xchg
repnz
sahf
xchg
repz
jmp
lock
vpmacsww
lahf
xchg
mov
sahf
sahf
mov
xchg
test
xchg
sahf
mov
xchg
lahf
mov
call
adc
add
fwait
call
xchg
call
xchg
pushf
jg
sbb
xchg
sbb
sbb
mov
add
xchg
nop
mov
lahf
mov
fwait
nop
lock
xchg
vpmacswd
pushf
xchg
clc
pop
out
hlt
imul
cmc
popa
in
sti
ins
in
stc
outs
jmp
jmp
in
(bad)
sti
bnd
clc
not
jno
retf
aad
(bad)
dec
rcr
enter
retf
pop
(bad)
shl
(bad)
and
aaa
stos
and
sub
xor
mov
ss
mov
imul
dec
pop
dec
les
dec
rcr
dec
aam
push
dec
aad
push
dec
aam
push
dec
(bad)
pop
push
dec
(bad)
pop
push
inc
xlat
dec
inc
add
ins
jge
out
cmp
cwde
fsubr
inc
cmp
(bad)
ret
rcr
mul
inc
cld
leave
loopne
stc
out
jo
out
jns
loope
popa
jmp
(bad)
popa
call
loope
outs
out
hlt
ins
jecxz
hlt
push
jmp
mov
xchg
repz
cld
ins
jmp
ins
popf
nop
mov
nop
icebp
adc
in
lock
xchg
repnz
loopne
mov
lahf
xchg
pushf
xchg
cdq
xchg
adc
cdq
test
xchg
fwait
mov
fwait
xchg
sbb
cdq
adc
popf
pop
xchg
sbb
mov
sahf
add
pushf
nop
sbb
mov
je
xchg
add
sbb
mov
pushf
sbb
add
adc
nop
adc
popf
(bad)
sbb
xchg
hlt
push
in
cli
outs
out
icebp
ins
loop
mov
out
hlt
push
in
std
adc
lock
in
in
stc
jecxz
cmc
icebp
jmp
retf
int
ret
mov
pop
int3
fnstenv
shl
das
cmp
scas
xor
adc
mov
add
lea
jl
lahf
dec
pop
dec
repz
push
dec
ficomp
inc
rcl
dec
aad
push
dec
fcomp
dec
rcr
dec
xlat
pop
push
dec
xlat
pop
push
inc
xlat
push
pop
aaa
(bad)
adc
cdq
cs
dec
mov
xlat
fucomp
pop
into
hlt
in
icebp
sti
loop
lock
clc
jp
out
loope
in
clc
cli
popa
icebp
sti
cli
js
loopne
(bad)
out
mov
jmp
xchg
lahf
mov
call
adc
popf
xchg
hlt
adc
out
(bad)
ins
loopne
icebp
push
cdq
xchg
xchg
lahf
lea
xchg
test
xchg
popf
mov
fwait
xchg
mov
popf
lahf
adc
popf
popf
sbb
cdq
test
lahf
xchg
xchg
call
nop
xchg
sbb
sbb
add
adc
test
cwde
add
sbb
pop
popf
pop
mov
pushf
pop
mov
add
sbb
pop
mov
cwde
xchg
icebp
adc
jmp
imul
jmp
pusha
lahf
xchg
loope
out
clc
in
lock
(bad)
jp
repnz
jg
out
in
js
lock
hlt
repnz
jl
repnz
into
jmp
into
(bad)
je
fadd
inc
rcr
mov
fsubr
xor
fisubr
and
cmp
mov
pop
or
dec
out
push
pop
inc
fcom
dec
fcomp
dec
ficom
inc
aam
pop
inc
fst
dec
(bad)
push
pop
dec
ficomp
dec
rcr
(bad)
pop
push
adc
rol
(bad)
sub
fcmovbe
pop
retf
leave
in
lock
repnz
call
push
in
jmp
in
imul
in
mov
xchg
mov
popf
xchg
lock
xchg
mov
xchg
mov
call
adc
popf
mov
xchg
lahf
test
sahf
xchg
mov
fwait
xchg
sahf
adc
xchg
xchg
xchg
popf
mov
call
adc
adc
pushf
xchg
xchg
popf
mov
nop
popf
sbb
cdq
fwait
sbb
sbb
test
call
sbb
(bad)
(bad)
call
adc
xchg
or
xchg
sbb
pushf
mov
call
adc
sbb
mov
lock
in
lea
jmp
cmc
push
loop
imul
jmp
in
stc
loop
clc
cmc
push
jecxz
jl
icebp
sar
lock
into
aad
ror
inc
ror
ja
ret
mov
aam
fisub
sub
lods
sub
scas
ss
adc
pop
or
sbb
push
xchg
js
inc
cld
dec
inc
inc
ret
dec
fstp
dec
ficomp
inc
aad
push
inc
ficomp
pusha
fbstp
fbld
dec
out
push
dec
fistp
imul
push
sbb
jge
dec
lock
rol
(bad)
into
aam
(bad)
dec
std
idiv
dec
cmc
(bad)
bnd
jmp
icebp
push
in
mov
xchg
imul
out
repnz
out
mov
xchg
adc
call
xchg
fwait
test
xchg
sahf
sbb
sbb
call
push
mov
sbb
pushf
sbb
call
lea
popf
add
cdq
popf
pop
xchg
test
pop
fwait
add
adc
pop
xchg
add
mov
or
sbb
mov
pushf
add
xchg
pop
xchg
nop
mov
cwde
xchg
mov
fwait
xchg
xchg
xchg
mov
lahf
repz
pushf
jmp
lock
jecxz
not
loope
lock
out
repnz
outs
jmp
in
jmp
jecxz
popa
idiv
out
jnp
hlt
aad
ret
ja
rol
leave
mov
rcr
mov
mov
and
xlat
sub
xor
stos
das
sub
sbb
push
mov
jle
cli
inc
dec
inc
test
ret
push
push
dec
fcomp
dec
ficomp
dec
aam
push
dec
rcr
dec
rcr
or
ja
ins
icebp
or
push
pop
enter
rcl
sbb
or
ins
jno
shr
ret
repnz
out
out
jne
clc
mul
out
loopne
out
out
outs
jmp
(bad)
popa
pushf
xchg
hlt
push
loopne
mov
nop
mov
fwait
nop
adc
popf
mov
xchg
lahf
sbb
sahf
adc
xchg
sbb
lahf
mov
popf
lahf
sbb
popf
sbb
pushf
sbb
cdq
sbb
mov
cdq
add
sbb
xchg
pushf
call
adc
or
test
or
(bad)
popf
or
test
push
mov
add
cdq
sbb
cdq
xchg
xchg
sahf
mov
xchg
lahf
lea
lahf
xchg
lea
popf
xchg
repz
jmp
mov
mov
xchg
vpshld
adc
jmp
stc
push
loopne
ins
call
in
stc
arpl
out
jmp
leave
shl
fisttp
(bad)
fld
rol
int
(bad)
pop
aad
retf
pop
fstp
mov
fsubr
cmp
sub
ds
xor
cmp
sub
or
imul
clc
jl
push
lock
pop
hlt
inc
inc
pop
int3
push
pop
inc
ret
inc
ficom
inc
fstp
dec
fcomp
push
rcl
or
inc
push
jl
ins
bound
pop
ins
les
pusha
ret
popa
retf
cmp
std
xor
jecxz
jp
out
addr16
sti
loop
cmc
clc
loope
in
clc
idiv
in
arpl
jmp
xchg
xchg
xchg
fwait
sahf
mov
xchg
lahf
test
xchg
popf
test
xchg
call
xchg
add
xchg
popf
cwde
sbb
fwait
sahf
add
xchg
sbb
xchg
sbb
sbb
test
add
cwde
add
sbb
mov
xchg
push
mov
xchg
add
mov
add
sahf
test
fwait
mov
xchg
nop
sbb
xchg
xchg
xchg
fwait
mov
xchg
lahf
test
xchg
popf
lea
fwait
xchg
clc
push
loopne
clc
pop
jmp
stc
outs
call
in
mul
loope
ins
jmp
gs
out
(bad)
in
jecxz
addr16
cli
jmp
(bad)
jecxz
icebp
out
jnp
icebp
out
jp
hlt
fidiv
ret
leave
(bad)
aad
enter
iret
retf
iret
mov
pop
fcmovnbe
mov
aam
das
mov
and
xor
mov
or
imul
bound
pusha
push
js
fs
push
stc
js
outs
(bad)
jns
imul
dec
imul
inc
ja
idiv
ins
hlt
inc
jbe
hlt
pop
pop
ins
enter
out
inc
jbe
repz
cmp
out
cld
in
repnz
in
cmc
jmp
jge
out
jle
out
lock
jmp
imul
xchg
mov
xchg
mov
cdq
nop
test
xchg
pushf
adc
test
sbb
cdq
add
mov
test
xchg
fwait
mov
xchg
lahf
sbb
nop
sbb
sahf
sbb
test
add
test
or
lea
fwait
add
mov
cwde
add
test
push
nop
pushf
popf
sbb
(bad)
sahf
pop
test
mov
xchg
lahf
sbb
nop
mov
xchg
xchg
repnz
repnz
(bad)
popa
lahf
xchg
cmc
ins
loop
(bad)
push
jmp
in
repnz
jecxz
cmc
jmp
jp
out
jl
out
jp
cld
jecxz
idiv
in
repnz
in
cmc
(bad)
out
hlt
sti
jmp
jno
not
jb
retf
ret
dec
(bad)
into
fisttp
rol
rcr
fld
(bad)
inc
int3
(bad)
mov
rol
pop
fcmovu
iret
pop
fcmovbe
leave
push
fisubr
mov
fst
xor
(bad)
pop
lods
xor
or
sbb
add
or
add
sbb
adc
xchg
adc
jne
addr16
jmp
jl
push
pusha
loop
data16
jb
jge
imul
nop
pusha
jno
xchg
push
inc
loop
fldl2t
adc
lock
pop
cli
repz
jg
in
js
out
hlt
data16
lock
xchg
(bad)
outs
sahf
xchg
lea
call
lea
cdq
xchg
mov
xchg
adc
cdq
adc
call
xchg
cwde
sbb
xchg
xchg
fwait
sahf
sbb
call
mov
fwait
add
adc
test
xchg
add
xchg
or
pop
xchg
add
mov
js
xchg
sbb
test
sbb
lahf
icebp
sbb
xchg
not
out
cld
imul
loop
in
clc
loop
in
stc
loop
icebp
sti
jmp
repz
cmc
shl
not
dec
std
leave
ror
int3
aad
ror
dec
std
leave
aad
(bad)
retf
(bad)
int
inc
(bad)
inc
int3
fld
inc
fcmovu
leave
pop
rcr
fist
ffreep
pop
rol
leave
inc
xlat
faddp
pop
aad
rcr
ret
pop
int
lds
faddp
pop
fcmovu
ret
mov
pop
fnop
retf
push
aad
xchg
cmp
sbb
add
and
mov
cmp
scas
cmp
adc
add
mov
push
or
adc
or
arpl
or
pop
push
popf
sbb
push
popa
call
arpl
loopne
xor
jmp
repnz
cli
addr16
loopne
gs
lock
jmp
call
adc
xchg
xchg
sahf
xchg
adc
cdq
adc
xchg
cdq
add
cwde
sbb
call
lea
push
xchg
sahf
sbb
xchg
fwait
fwait
sbb
xchg
test
xchg
push
or
popf
mov
add
or
cdq
add
popf
push
mov
add
xchg
popf
mov
xchg
nop
icebp
pop
cwde
xchg
clc
adc
out
std
push
in
popa
idiv
sar
neg
jae
iret
xlat
dec
retf
dec
enter
iret
mov
rcr
mov
(bad)
pop
rcr
enter
mov
(bad)
cmp
and
(bad)
daa
sub
dec
cmps
daa
and
aam
sub
sub
(bad)
mov
fcom
inc
push
fcom
fcom
rol
into
(bad)
fadd
fcmovnu
pop
rol
rol
fistp
fcmovb
inc
rcr
mov
(bad)
sbb
or
inc
mov
ret
xlat
cs
rcl
inc
faddp
mov
stos
and
sbb
test
sbb
adc
call
jne
pusha
push
or
sbb
nop
gs
pushf
data16
loope
sbb
xchg
rcr
cld
sbb
cli
cld
addr16
loop
addr16
lea
lea
xchg
mov
fwait
xchg
adc
nop
cwde
mov
xchg
lahf
xchg
cwde
xchg
test
call
sbb
popf
sbb
cwde
sbb
xchg
sbb
xchg
xchg
xchg
adc
cdq
sahf
adc
xchg
add
test
push
mov
add
pop
xchg
add
mov
or
sbb
mov
add
mov
nop
xchg
(bad)
sbb
out
jmp
js
cmc
fidiv
iret
(bad)
dec
int
mov
fsubr
xor
sub
lods
sub
and
das
daa
cmp
xor
adc
or
mov
xor
mov
or
cmp
xor
mov
aas
cmp
movs
and
dec
mov
es
sub
aam
push
(bad)
ficom
ret
rcr
fadd
(bad)
fld
iret
fiadd
(bad)
fadd
(bad)
aad
iret
retf
int
(bad)
xchg
iret
syscall
dec
cwde
ds
out
ror
loope
in
in
repz
fwait
sti
cli
imul
icebp
int3
pop
ret
inc
cmp
sbb
add
push
mov
sbb
or
push
pop
xchg
adc
sbb
add
adc
xchg
jno
arpl
out
arpl
cmp
clc
cmc
loopne
stc
out
jo
out
icebp
js
jmp
imul
xchg
sub
sahf
adc
call
call
adc
fwait
sbb
call
nop
fwait
mov
xchg
sahf
sbb
sbb
cdq
sbb
xchg
add
xchg
jne
test
sbb
cdq
sahf
sbb
test
add
mov
add
test
sbb
not
jecxz
call
out
out
outs
cli
icebp
ret
fmul
dec
fcmovnbe
mov
test
aas
ss
or
add
adc
or
sbb
jbe
push
push
or
popa
adc
sbb
push
jmp
adc
adc
movaps
add
cmp
mov
and
enter
rcl
fstp
ret
ficomp
shr
ror
dec
shl
dec
(bad)
not
jbe
retf
(bad)
lock
and
sbb
push
push
dec
popf
add
or
mov
test
xor
std
std
pusha
retf
lock
sbb
cdq
push
add
adc
add
adc
push
add
bound
xchg
sbb
in
sbb
push
sbb
(bad)
jmp
dec
in
clc
div
in
pusha
jmp
ins
lahf
xchg
adc
cdq
test
pushf
sbb
nop
cwde
sbb
mov
add
cdq
fwait
sbb
test
add
sbb
mov
xchg
push
test
cwde
jnp
sbb
add
sbb
mov
cdq
add
sbb
add
fwait
mov
xchg
lahf
hlt
sbb
xchg
loop
in
shr
enter
fdivr
aad
ds
mov
adc
push
data16
jl
cli
jne
data16
jnp
push
(bad)
jp
fs
jp
pusha
icebp
jg
(bad)
cld
push
psllw
or
imul
call
or
and
and
rcl
ficomp
(bad)
rcr
shr
(bad)
imul
dec
(bad)
mul
dec
clc
cmc
loopne
hlt
out
jl
clc
jecxz
icebp
sti
loopne
mul
mov
and
add
adc
(bad)
mov
mov
mov
and
and
or
jns
inc
jge
cmc
adc
xchg
adc
pop
xchg
or
cs
sbb
push
sub
inc
ins
add
ja
sbb
test
ss
push
fcmovnbe
(bad)
pop
ror
out
inc
push
cli
inc
idiv
hlt
jp
jmp
gs
call
test
fwait
popf
sbb
cdq
sahf
pop
lea
pushf
push
pop
cdq
add
(bad)
cwde
add
xchg
add
adc
mov
fwait
add
sbb
mov
call
sbb
add
test
add
sbb
mov
neg
cwde
xchg
call
outs
retf
ret
(bad)
adc
xor
add
or
popa
lahf
outs
addr16
out
jnp
push
icebp
jge
push
test
push
ret
push
iret
dec
dec
inc
int3
dec
inc
push
(bad)
dec
pop
ins
into
dec
jb
retf
jbe
ins
jl
in
pop
or
adc
and
pop
add
cmp
dec
mov
enter
(bad)
imul
dec
clc
repnz
idiv
loope
lock
in
repnz
stc
jnp
cli
mul
in
mul
in
imul
out
hlt
outs
jmp
leave
outs
aad
imul
pop
sbb
xchg
pop
outs
xchg
retf
int3
mov
and
xor
ds
mov
cmp
xchg
xlat
movs
bound
dec
pop
je
push
jb
bnd
sbb
add
aaa
nop
jb
jg
or
add
sub
adc
mov
(bad)
sub
and
rcl
ficom
iret
jecxz
cld
enter
jecxz
jl
in
mov
mov
sahf
xchg
mov
xchg
popf
sbb
cdq
sbb
test
add
mov
add
call
mov
call
mov
or
sbb
mov
popf
add
xchg
mov
fwait
add
mov
add
call
popf
xchg
call
popa
leave
ret
movs
jae
sub
xlat
aas
add
mov
imul
cld
inc
dec
push
iret
inc
pop
pop
int3
push
inc
inc
into
dec
inc
pop
fisttp
pop
ret
push
inc
inc
ret
dec
inc
push
fisttp
outs
ret
dec
jne
int3
jne
jne
jae
or
outs
adc
out
add
xor
xor
es
sub
into
in
push
loope
hlt
stc
cld
jl
jecxz
jnp
loopne
outs
in
sti
outs
jmp
hlt
arpl
loop
outs
in
(bad)
ins
sahf
xchg
(bad)
imul
jmp
add
jae
imul
jo
inc
(bad)
div
xchg
mov
es
call
push
pop
inc
ret
push
pop
pop
ror
pop
mov
rcl
retf
push
inc
dec
rcl
dec
fcomp
rcr
push
(bad)
push
pop
and
xor
cmp
movs
sub
fsubrp
sub
sar
dec
out
out
jae
loope
outs
out
lock
lahf
xchg
sub
adc
mov
cwde
add
mov
add
cdq
xchg
sahf
sbb
mov
xchg
add
mov
push
mov
xchg
or
mov
cdq
add
sbb
add
test
add
repnz
in
shr
enter
rcr
mov
jo
push
sti
inc
dec
pop
test
inc
rcl
les
rcl
inc
fstp
dec
fmul
ror
outs
lds
outs
iret
je
or
in
add
xchg
xor
pop
sbb
sub
push
int
jmp
dec
repnz
cmc
jns
in
repnz
call
repnz
loope
repnz
loop
mov
xchg
mov
xchg
mov
cdq
xchg
mov
popf
xchg
(bad)
adc
xchg
rcl
je
push
repz
dec
sub
icebp
cmp
test
xor
mov
inc
fild
dec
hlt
pop
push
pop
rol
dec
int3
dec
push
dec
ret
dec
(bad)
pop
push
dec
(bad)
pop
push
dec
(bad)
pop
push
push
(bad)
pop
push
sub
ins
getsec
(bad)
sub
sub
pop
daa
cmp
fcmovnbe
rcr
jmp
clc
mov
xchg
mov
xchg
test
xchg
sbb
cwde
sbb
xchg
add
test
pop
nop
fwait
xchg
xchg
popf
lahf
pop
nop
pushf
pushf
sbb
adc
mov
cdq
add
lea
push
xchg
xchg
push
or
or
mov
or
(bad)
call
sbb
push
xchg
xchg
repz
sahf
jmp
adc
clc
int3
ins
ror
dec
and
or
mov
push
in
dec
pop
repnz
dec
inc
ret
dec
pop
dec
lds
dec
fstp
dec
xlat
pop
push
dec
rcr
dec
rcl
pop
xlat
push
push
push
fst
addr16
jb
adc
xchg
or
(bad)
xlat
frstpm(287
cmp
retf
cmc
out
jge
loop
data16
mov
xchg
mov
xchg
nop
mov
xchg
mov
cwde
xchg
mov
xchg
xchg
mov
cdq
xchg
mov
sahf
xchg
mov
cdq
xchg
mov
sahf
xchg
test
fnop
ins
stos
ja
push
icebp
inc
dec
inc
test
addr16
leave
movs
jnp
mov
test
mov
dec
ret
inc
(bad)
push
pop
dec
xlat
push
pop
dec
fistp
(bad)
pop
push
dec
(bad)
pop
push
dec
(bad)
pop
push
dec
xlat
pop
push
pop
(bad)
pop
push
cmp
jl
sub
aaa
cmp
sbb
xor
dec
xchg
cmp
cs
(bad)
push
ret
pop
cmc
icebp
mov
xchg
mov
nop
xchg
xchg
xchg
cdq
pushf
adc
call
pop
lahf
add
lahf
sbb
test
add
sbb
mov
lahf
add
mov
call
sbb
add
mov
push
mov
call
xchg
xchg
xchg
hlt
sbb
repz
(bad)
jns
fild
rcl
push
outs
cdq
jno
inc
loop
inc
pop
iret
dec
pop
inc
ret
push
push
dec
lds
dec
aam
push
dec
xlat
pop
push
dec
aam
push
outs
(bad)
push
pop
js
inc
bound
test
xlat
cmp
cmc
std
repz
jmp
push
call
adc
call
xchg
popf
xchg
popf
xchg
xchg
lahf
mov
fwait
nop
mov
fwait
xchg
mov
call
adc
cli
dec
(bad)
sbb
pop
jmp
inc
pop
rcl
pop
(bad)
(bad)
jo
jle
lsl
add
cmp
imul
dec
inc
dec
rol
dec
ret
pop
push
dec
aam
push
dec
rcr
dec
aam
push
dec
aam
push
inc
(bad)
pop
push
cmp
inc
cmp
rcl
or
push
sbb
jmp
add
mov
sub
int3
(bad)
and
retf
clc
ja
out
bnd
call
adc
cwde
lahf
adc
test
add
sbb
add
mov
fwait
push
lea
lahf
add
test
add
mov
sbb
test
sbb
mov
test
fwait
add
sbb
mov
add
cwde
xchg
popf
xchg
in
jmp
jmp
jbe
xchg
inc
dec
jne
ins
jp
cli
push
js
xchg
inc
dec
dec
loopne
push
dec
rcr
(bad)
pop
push
jae
dec
pop
sub
imul
fst
out
(bad)
dec
cmc
loope
jl
call
mov
call
adc
sbb
xchg
sbb
pushf
test
nop
popf
xchg
xchg
popf
xchg
sahf
adc
popf
sbb
cdq
stos
sbb
dec
inc
mov
push
pop
inc
fisttp
dec
rcr
fimul
cs
adc
mov
imul
pop
inc
repnz
pop
inc
ror
inc
fcom
dec
fist
rcr
inc
rcr
dec
aam
pop
push
fist
sar
enter
mov
jl
jp
jge
pusha
outs
sbb
sbb
sahf
adc
cmp
rcr
loope
shl
dec
out
cmp
lahf
adc
adc
mov
xchg
push
or
xchg
or
test
lahf
add
sbb
mov
add
xchg
mov
xchg
add
mov
cdq
or
pushf
add
sbb
mov
xchg
push
xchg
test
mov
jmp
stc
repz
addr16
pop
xchg
dec
dec
xsaves
add
pop
adc
xchg
bound
pop
and
loop
push
dec
int
push
pop
(bad)
dec
inc
dec
rcr
call
sub
out
xchg
lahf
adc
sbb
cdq
sbb
nop
fwait
sbb
xchg
test
pop
xchg
cdq
add
fwait
test
nop
fwait
sbb
xchg
call
mov
rol
mov
outs
cmc
dec
jbe
in
dec
inc
pop
fst
inc
fcom
jne
jge
cs
xchg
cmp
adc
xor
mov
push
pop
inc
fisttp
dec
rcr
fst
dec
fst
dec
(bad)
pop
push
imul
jo
push
xchg
jp
imul
jno
hlt
jbe
jno
jae
add
outs
sbb
and
jmp
xlat
icebp
std
inc
jmp
jmp
popf
push
mov
add
mov
or
mov
or
test
sbb
sbb
mov
cwde
pop
mov
xchg
add
lea
je
sbb
sbb
mov
xchg
add
mov
or
mov
fld
iret
jecxz
cmp
pop
mov
clc
dec
inc
push
(bad)
dec
pop
popa
ret
inc
jge
leave
sbb
push
cld
add
dec
test
ja
push
push
(bad)
fs
idiv
lahf
and
test
add
mov
add
cdq
fwait
sbb
lahf
add
xchg
xchg
sbb
cdq
sbb
xchg
cwde
lahf
sbb
cwde
mov
mov
pop
nop
dec
inc
inc
adc
ficom
inc
fist
jo
jo
aaa
repz
xor
ffree
mov
iret
into
cs
(bad)
add
rol
cmp
mov
shr
bound
jnp
inc
imul
dec
call
inc
(bad)
push
pop
jo
jno
push
icebp
push
or
ins
xor
cli
inc
dec
pop
test
jnp
jl
jo
adc
add
xor
jmp
jecxz
popa
jecxz
adc
mov
add
adc
or
or
or
mov
popf
add
cdq
popf
pop
xchg
sbb
test
xchg
jbe
(bad)
cwde
or
sbb
mov
sahf
add
test
add
mov
or
mov
setne
mov
call
pop
imul
dec
pop
leave
inc
inc
pop
into
push
inc
outs
sar
fcom
sbb
xchg
cmp
jno
cwde
push
push
sbb
dec
push
pop
enter
sbb
call
cwde
add
mov
pushf
add
xchg
add
mov
add
mov
sbb
fwait
sbb
fwait
test
nop
pushf
test
xchg
popf
call
fdivr
add
inc
iret
inc
dec
inc
ret
push
pop
push
fimul
and
cli
(bad)
into
xchg
sub
pushf
fild
nop
std
data16
imul
push
mov
adc
loopne
adc
pop
xchg
fs
add
bound
ss
rol
xor
add
bound
jp
inc
sti
inc
dec
push
ror
ror
jb
push
shl
xchg
adc
inc
or
idiv
clc
hlt
lea
xchg
xchg
pushf
cdq
pop
mov
pushf
add
test
add
lea
or
lea
js
test
add
xchg
or
sbb
add
test
add
test
add
adc
xchg
lds
jmp
rcl
fs
jmp
ins
jge
clc
jnp
ins
sti
jnp
jae
jno
add
pop
push
or
jnp
jg
dec
jl
int
ds
jg
icebp
cwde
jae
adc
test
call
test
add
sbb
test
pop
xchg
fwait
test
xchg
pushf
xchg
xchg
popf
xchg
sahf
popf
push
nop
fwait
lock
sbb
inc
dec
jne
push
inc
les
mov
sub
pusha
aaa
(bad)
pop
movs
lods
cmps
push
test
mov
stos
scas
mov
cmps
lods
mov
sub
cmp
mov
retf
jmp
data16
xchg
cmp
pusha
mov
js
sahf
inc
dec
pop
dec
pop
lds
inc
mov
fidivr
pop
icebp
jae
es
cmp
rcr
cmc
pop
clc
in
mov
lahf
fwait
outs
xchg
call
mov
add
(bad)
xchg
add
cwde
push
mov
xchg
push
add
cwde
push
mov
xchg
add
sbb
mov
add
pop
popf
add
pop
fwait
add
sbb
add
call
pop
int3
or
add
sbb
fwait
adc
or
xchg
arpl
jp
pusha
outs
or
push
pop
push
out
je
jbe
gs
and
fwait
cwde
mov
xchg
push
test
cdq
push
mov
cdq
add
sbb
sbb
mov
add
sbb
call
xchg
cwde
pushf
push
mov
call
push
jg
(bad)
repnz
add
and
xor
test
sub
test
sub
(bad)
fstp
popf
jnp
int3
xor
xor
out
mov
xchg
cmc
adc
(bad)
mov
lds
fs
cwde
inc
inc
inc
int3
pop
pop
dec
fist
push
aad
pop
jg
dec
gs
adc
pop
(bad)
das
cmp
and
in
inc
cdq
xchg
fwait
xchg
pushf
call
sbb
push
mov
call
sbb
test
xchg
add
cwde
push
test
cwde
or
mov
popf
add
test
add
mov
call
sbb
mov
mov
jmp
adc
aaa
or
add
or
push
test
jae
sbb
or
adc
adc
pusha
jmp
inc
(bad)
adc
cmc
pop
(bad)
in
lahf
pop
mov
xchg
add
(bad)
cwde
push
mov
cwde
add
sbb
add
sbb
add
xchg
add
std
loope
imul
jecxz
or
add
and
xor
sub
test
fmul
call
leave
adc
add
leave
xchg
popf
pop
mov
test
xchg
sahf
pop
popf
xchg
rcr
out
in
(bad)
rcl
leave
cmp
arpl
dec
pop
dec
int
push
inc
aad
push
outs
rcr
jae
sbb
pop
shl
(bad)
cmp
in
inc
cdq
xchg
cdq
xchg
call
xchg
cdq
or
sbb
mov
popf
add
mov
popf
push
mov
cwde
add
(bad)
xchg
add
cdq
push
test
pushf
add
test
add
sbb
mov
xchg
add
xchg
pmulhw
lods
push
rcr
and
aaa
ss
mov
daa
sub
fidivr
cmp
cmp
sbb
mov
pop
ja
bound
outs
pusha
jnp
arpl
jle
ins
popa
adc
popa
outs
push
out
add
mov
test
push
test
cwde
jne
sbb
mov
xchg
add
(bad)
cwde
push
mov
cdq
add
sbb
mov
fiadd
inc
inc
push
int3
inc
jne
ret
inc
xchg
xor
cmps
xor
test
sub
not
cmp
mov
sbb
test
add
add
fwait
repz
xchg
in
out
shr
icebp
push
ds
mov
pop
push
inc
fcomp
push
fiadd
shl
pop
cli
jmp
mov
xchg
add
lea
or
test
add
test
add
test
sbb
lea
push
test
cdq
push
mov
fwait
add
test
add
sbb
pop
xchg
add
sahf
jmp
das
dec
movs
sub
enter
rcl
aad
fadd
cdq
cmc
and
sbb
mov
pop
jne
gs
pusha
call
ins
jnp
std
sbb
adc
xchg
cmp
sbb
cld
call
adc
test
xchg
je
(bad)
xchg
push
test
cwde
push
mov
cwde
add
sbb
test
cwde
add
sbb
cmps
inc
pop
jb
push
cmp
pop
aaa
addr16
fdecstp
mov
jnp
cmps
mov
loope
sbb
add
add
cmp
xchg
pop
mov
mov
or
sbb
mov
mov
xchg
xchg
in
repnz
fwait
adc
aad
rcl
dec
dec
test
inc
ret
pop
push
jge
pop
gs
fbstp
cmp
jp
into
test
call
mov
xchg
or
mov
or
sbb
pop
call
sbb
mov
xchg
push
xchg
xchg
or
test
pushf
je
test
add
test
push
mov
add
lock
les
xlat
shl
push
int3
hlt
loopne
in
loopne
dec
call
add
add
mov
pop
sete
jl
push
jge
std
imul
jp
sbb
dec
in
(bad)
sbb
xchg
sbb
mov
xchg
push
xchg
xchg
jbe
(bad)
xchg
je
sbb
mov
cdq
add
adc
xchg
push
loope
xor
aam
stos
and
mov
inc
test
fwait
xor
xor
dec
mov
cs
push
retf
loop
pop
xor
or
or
jns
sbb
sbb
cld
adc
pop
push
inc
(bad)
pop
push
jl
pop
gs
sub
or
je
adc
xchg
xchg
or
mov
or
xchg
add
sbb
pop
xchg
pop
mov
xchg
push
or
or
mov
or
xchg
mov
cdq
pop
pop
call
(bad)
dec
mov
mov
and
xor
and
jg
ror
inc
out
xchg
cwde
outs
mov
ss
mov
pop
jb
mov
jae
sbb
push
popf
addr16
data16
jb
jbe
adc
xchg
adc
jno
outs
adc
push
aaa
jo
(bad)
rcr
adc
test
xchg
jne
mov
push
test
cdq
add
sbb
mov
xchg
push
mov
loopne
clc
icebp
add
push
pop
pop
jmp
fdivp
popf
rol
mov
xchg
lods
mov
cmps
lods
mov
jmp
or
aam
test
xchg
loopne
out
xchg
jl
adc
or
lea
or
mov
sbb
in
or
jle
dec
cld
pop
push
pop
xlat
push
push
(bad)
ficom
adc
jo
ret
sahf
inc
out
xchg
push
mov
or
mov
or
mov
jnp
(bad)
cdq
add
sbb
mov
xchg
add
mov
or
or
xchg
mov
add
pop
add
and
fcom
call
mov
or
mov
cmp
out
push
cmc
adc
xchg
jg
jno
sbb
xchg
bound
jg
push
adc
push
pop
jo
push
pop
or
or
adc
cmp
jl
adc
xchg
or
lea
or
(bad)
cwde
push
test
call
test
add
adc
or
std
sbb
xchg
xor
push
js
int
push
sub
sub
in
dec
mov
xchg
push
lods
mov
add
mov
or
pop
add
jecxz
pusha
shr
retf
adc
dec
scas
jge
dec
neg
rcl
data16
inc
jbe
jnp
pop
sti
adc
(bad)
in
sub
sub
lahf
xchg
jnp
(bad)
xchg
adc
mov
or
lea
xchg
cwde
or
test
pushf
add
test
add
adc
mov
or
or
test
add
sbb
mov
(bad)
add
es
retf
push
mov
mov
cmp
mov
and
or
sbb
or
addr16
sbb
adc
ja
sbb
xchg
jno
pop
out
pop
adc
out
push
pop
jb
pusha
push
dec
or
sbb
pop
xchg
or
mov
or
xchg
cwde
push
test
call
test
add
test
add
in
out
js
xchg
pop
or
gs
repz
test
mov
mov
pushf
cmps
ins
icebp
mov
jle
mov
xchg
or
xchg
or
test
jge
out
rcl
(bad)
neg
xlat
or
dec
adc
hlt
pop
push
push
rcl
ins
(bad)
jnp
jb
push
add
popa
adc
xchg
adc
xor
xor
in
lahf
dec
mov
xchg
push
mov
xchg
add
mov
or
(bad)
xchg
or
(bad)
cdq
push
mov
pushf
add
test
add
adc
mov
jb
sbb
mov
cwde
add
sbb
mov
fiadd
loop
test
cmp
je
rol
mov
sbb
mov
mov
and
xor
dec
mov
pop
push
ins
rcl
or
jnp
js
sbb
push
out
outs
ja
imul
jecxz
pop
push
fwait
sbb
adc
add
mov
nop
xchg
dec
test
xchg
or
mov
or
adc
mov
cwde
add
sbb
pop
stc
add
sti
popa
std
addr16
jmp
or
jge
jmp
mov
xor
xchg
(bad)
fwait
pop
nop
call
xchg
fwait
jnp
fwait
out
loop
enter
xchg
jg
or
push
pop
inc
ror
inc
inc
jns
jg
jae
pusha
push
add
xchg
adc
sbb
add
cld
add
in
pop
xchg
popf
call
sbb
test
cwde
je
sbb
mov
pushf
add
adc
mov
cwde
add
lea
add
sbb
mov
cdq
add
sbb
mov
fiadd
pushf
les
(bad)
xor
test
pushf
mov
cmp
mov
xchg
cmp
xchg
inc
stc
ds
dec
mov
push
dec
ficomp
inc
aad
push
push
xlat
dec
dec
arpl
jno
jo
bound
loope
push
jbe
popa
outs
pop
out
bound
sub
or
push
add
and
push
xor
hlt
(bad)
xchg
xor
mov
or
lea
or
mov
push
mov
cdq
add
sbb
pop
loopne
ret
mul
pusha
jo
in
or
jl
cwde
mov
mov
test
sub
cmc
cmps
dec
xchg
xchg
adc
mov
mov
xchg
xchg
std
sbb
in
adc
xor
pop
jmp
push
dec
push
iret
imul
pusha
adc
xchg
pop
pop
push
xchg
or
adc
add
jg
(bad)
out
pop
fwait
nop
pushf
data16
popf
pop
mov
add
sbb
mov
cwde
add
sbb
add
sbb
push
xchg
fwait
or
sbb
pop
cdq
add
sbb
mov
adc
fs
and
stos
pop
lods
movs
call
loopne
or
arpl
xchg
pop
push
dec
(bad)
pop
push
dec
rcr
inc
ror
xlat
inc
dec
jl
ja
jne
push
jne
sbb
imul
adc
sbb
add
and
sbb
nop
mov
xchg
xchg
or
mov
push
mov
cdq
add
sbb
add
and
iret
ret
imul
xchg
xor
mov
mov
popf
jae
sbb
mov
cmc
add
lahf
jmp
out
into
ins
fst
(bad)
repnz
add
jno
inc
in
pop
push
sar
cld
arpl
add
push
adc
nop
adc
sbb
add
sbb
mov
cmovb
(bad)
xchg
lahf
popf
bound
test
sbb
sbb
test
fwait
push
mov
call
sbb
mov
cwde
add
mov
add
sbb
mov
popf
add
mov
add
adc
call
shr
cli
arpl
cld
sub
scas
imul
push
xchg
jns
dec
cld
push
pop
push
(bad)
push
les
pop
int3
dec
dec
pusha
ret
js
push
(bad)
out
pusha
ins
push
loope
ins
or
addr16
xchg
or
adc
xor
sbb
adc
popa
mov
and
jns
lea
or
test
cwde
add
(bad)
cdq
add
sbb
pop
add
jo
ds
adc
and
out
mov
stos
test
and
mov
cli
jnp
in
or
lea
rcr
cmps
js
xor
sbb
dec
pop
cmc
push
inc
pop
les
jae
jae
add
adc
jmp
or
push
cdq
lsl
or
pop
add
sbb
push
xor
(bad)
and
xchg
cmp
call
sbb
mov
add
sbb
mov
cdq
add
sbb
add
adc
add
or
xchg
add
cdq
pop
mov
fwait
add
sub
sbb
push
imul
xchg
and
or
sub
gs
js
out
inc
inc
repz
inc
mov
jnp
paddw
pop
clc
add
sbb
ins
outs
jbe
outs
jp
clc
imul
adc
jmp
add
or
add
das
cli
and
call
test
cwde
push
test
call
sbb
mov
cwde
add
xchg
jmp
mov
xor
or
nop
ret
lea
movs
or
(bad)
(bad)
push
icebp
in
inc
mov
rcl
ror
jecxz
and
adc
xchg
pop
icebp
push
push
ins
fcom
(bad)
retf
sbb
push
pop
sbb
add
adc
or
push
(bad)
mov
push
inc
mov
shl
cmp
repnz
popf
popf
ins
mov
add
sbb
add
sbb
mov
cwde
add
sbb
mov
cwde
add
(bad)
cdq
add
sahf
add
xchg
xchg
sbb
adc
mov
inc
xchg
in
push
sub
adc
out
pusha
pusha
or
popa
adc
in
sbb
js
arpl
push
ja
adc
push
arpl
xchg
jl
arpl
jne
sbb
in
ftst
add
xchg
jmp
push
aam
sti
or
or
pusha
imul
sbb
or
adc
es
or
push
mov
xor
test
and
(bad)
stc
repnz
and
mov
cwde
push
test
call
test
mov
add
lock
or
xchg
ins
push
dec
jecxz
daa
enter
mov
retf
mov
xlat
adc
out
in
or
shr
fbld
pop
jmp
imul
inc
js
jl
jno
sbb
add
adc
sbb
or
add
(bad)
or
or
popf
aaa
sub
ds
xacquire
out
pushf
outs
xchg
sbb
mov
call
sbb
add
sbb
add
(bad)
cwde
add
sbb
add
sbb
mov
popf
sbb
sbb
mov
add
or
retf
into
loopne
or
cwde
push
outs
adc
cmp
sub
pop
cmp
daa
and
add
mov
adc
hlt
lahf
cmp
cwde
call
cld
and
sub
movs
sub
xchg
cmps
aam
sbb
adc
push
cmp
and
xor
je
iret
mov
sbb
call
sbb
mov
mov
mov
repz
sbb
out
popa
add
add
aam
pop
push
leave
adc
sub
jnp
sbb
sbb
imul
iret
add
xor
cmps
ins
fs
fwait
inc
inc
pop
int3
push
pop
pop
(bad)
jnp
je
or
outs
push
add
adc
sbb
adc
add
add
(bad)
adc
dec
mov
cmp
repz
loopne
pushf
jno
popf
call
sbb
mov
cwde
add
sbb
mov
cdq
add
adc
test
cdq
add
sbb
pop
cwde
add
mov
pushf
sbb
sbb
pop
fwait
add
add
out
in
cwde
and
or
rcr
mov
test
jmp
fwait
out
arpl
fisttp
mov
adc
xor
hlt
ss
in
dec
lea
loope
xchg
mov
pop
xchg
cli
adc
xchg
(bad)
push
out
mov
int
or
fwait
cmp
sub
cmp
push
push
cwde
xchg
cwde
jae
xchg
add
cdq
add
add
sbb
adc
or
mov
or
popa
outs
or
sbb
sahf
inc
jbe
xchg
ja
add
popf
sub
or
bound
xchg
dec
dec
pop
lock
pop
push
fcom
imul
jge
ret
add
xchg
push
sbb
xchg
or
sbb
test
add
test
adc
xor
cmp
fisttp
jge
call
pop
cwde
add
mov
cwde
add
sbb
mov
cwde
add
xchg
add
(bad)
cwde
add
sbb
add
call
test
sbb
sbb
mov
fwait
add
sbb
fwait
nop
mov
repz
sub
inc
mov
test
sub
stos
scas
sub
test
xor
iret
ss
lds
sub
stos
(bad)
clc
xor
lock
inc
loop
fwait
imul
mov
cmp
fxch
push
xor
cmp
cmp
mov
sbb
sbb
xor
(bad)
fisttp
popf
cdq
sahf
adc
test
add
xchg
add
call
sbb
sbb
pop
retf
shl
loop
jae
cld
dec
inc
dec
iret
push
pop
arpl
jg
jp
sbb
jmp
adc
arpl
inc
inc
inc
repz
inc
push
(bad)
dec
inc
pusha
ret
inc
jl
hlt
push
or
sbb
add
sbb
add
or
pop
sub
sub
fisttp
jle
cwde
fwait
pop
mov
cdq
add
sbb
add
sbb
add
sbb
mov
cwde
push
test
fwait
add
test
pop
xchg
test
sbb
test
sbb
sbb
mov
pushf
add
adc
mov
not
cli
mov
ins
mov
test
sub
test
sub
test
sub
mov
sub
mov
pop
shl
push
call
test
cmp
mov
test
xlat
lds
lods
sub
mov
add
sbb
mov
add
xor
pop
mov
(bad)
sti
icebp
test
stc
fisub
rcr
add
lea
add
and
les
in
jb
inc
cli
dec
pop
dec
ret
push
push
push
ret
sbb
out
jo
pop
stc
jle
pop
test
jle
jbe
jno
ins
ins
push
loopne
adc
in
push
pop
add
adc
add
lahf
pop
adc
push
mov
and
add
push
xchg
sbb
add
sbb
mov
cwde
add
cwde
add
sbb
add
sbb
add
xchg
push
xchg
xchg
sbb
add
xchg
add
pop
fwait
add
sbb
mov
mov
pop
adc
mov
test
sub
test
sub
test
sub
test
sub
test
sub
cmps
in
sub
cld
xchg
popa
jecxz
xchg
mov
adc
xchg
ds
mov
(bad)
cmp
dec
add
push
rol
or
unpckhps
xchg
ja
sbb
pop
xchg
pop
add
or
add
adc
sub
sbb
(bad)
sti
jecxz
pop
mov
push
inc
std
jg
dec
hlt
push
push
dec
fcom
aad
inc
je
je
push
lock
pop
jmp
fs
jno
jae
addr16
or
popa
push
or
adc
fwait
sbb
adc
sub
cmp
sub
enter
loop
call
sbb
add
sbb
mov
cwde
add
sbb
mov
call
sbb
mov
sahf
add
cwde
sbb
cdq
add
mov
add
mov
sahf
add
test
push
mov
popf
add
sbb
mov
fwait
add
mov
or
and
test
sub
test
sub
test
sub
test
sub
test
sub
lock
ds
cli
cld
ins
out
in
xchg
dec
mov
std
xor
ret
(bad)
pop
xlat
fwait
stc
ss
mov
push
or
popa
push
jecxz
jge
loopne
jp
in
jo
div
jne
outs
imul
or
sbb
mov
xor
xchg
mov
pusha
mov
mov
jg
dec
test
iret
pop
push
pop
ror
push
fild
imul
jge
xchg
inc
inc
jnp
jle
jne
imul
or
arpl
xchg
sbb
setne
push
cs
sbb
jbe
add
adc
sub
lea
shr
lock
mov
fwait
add
sbb
mov
xchg
add
(bad)
cwde
add
sbb
mov
pushf
add
test
add
test
add
xchg
cdq
add
mov
add
cdq
popf
sbb
test
push
pop
popf
add
sbb
mov
cwde
add
add
fwait
xchg
xchg
adc
mov
mov
stos
mov
mov
cmps
lods
mov
movs
scas
mov
movs
lods
mov
cmps
scas
mov
mov
test
sub
mov
mov
(bad)
neg
(bad)
mov
adc
lock
and
adc
push
add
adc
js
jmp
jp
clc
jno
jb
ins
jnp
out
or
mov
sbb
xchg
xor
mov
xchg
pop
push
pop
popf
dec
pop
inc
les
dec
int3
pop
push
inc
rcr
psrlq
ja
imul
jbe
jae
ins
pusha
jb
popa
push
je
sbb
or
xchg
adc
adc
ins
aas
cdq
push
popa
mov
cmp
out
adc
(bad)
icebp
push
lock
xor
lahf
imul
sbb
sbb
mov
xchg
add
(bad)
cwde
add
fwait
add
sbb
test
add
sbb
mov
lahf
sbb
xchg
sbb
cwde
add
cdq
lahf
push
xchg
xchg
sbb
test
add
test
add
test
add
add
nop
call
mov
call
sbb
test
mov
movs
aaa
mov
stos
cmp
mov
cmp
lock
cmp
and
cli
and
jecxz
inc
mov
mov
pop
retf
pop
or
add
or
popf
pop
push
add
pop
sbb
sbb
sbb
adc
add
cmp
or
ret
push
cmp
inc
out
dec
pop
dec
les
dec
fstp
inc
aad
push
jne
push
jp
(bad)
sbb
jnp
push
jno
push
jno
arpl
or
addr16
adc
aaa
popa
cmp
add
pop
stc
(bad)
(bad)
and
out
dec
sahf
xchg
lahf
pop
xchg
xchg
sbb
test
pop
mov
fwait
add
sbb
mov
cdq
add
sbb
xchg
xchg
sbb
test
push
pop
add
cdq
lahf
push
xchg
test
sbb
cdq
add
call
mov
pushf
add
mov
add
mov
add
mov
cwde
add
sbb
mov
cdq
add
sbb
add
xchg
sbb
lahf
jmp
loopne
ret
shl
(bad)
jge
shl
cwde
pop
out
in
push
pop
ins
sahf
sub
add
sub
lea
xor
movs
add
xchg
add
and
adc
cs
push
ret
jne
mov
in
add
inc
icebp
push
push
inc
fistp
dec
fstp
inc
rcl
(bad)
fist
push
les
push
js
popa
outs
pmaxsw
pminsw
jae
sbb
add
xchg
addr16
adc
sub
mov
pop
scas
and
sti
or
in
dec
cwde
xchg
sahf
gs
fwait
lahf
sbb
xchg
add
test
push
mov
popf
add
mov
add
test
pop
add
mov
pushf
add
mov
add
sahf
sbb
xchg
sbb
cdq
add
sbb
mov
popf
pop
mov
pushf
push
mov
sahf
add
mov
popf
add
test
add
sbb
add
sbb
mov
fwait
add
test
add
cdq
xchg
xchg
fwait
repz
lods
jmp
push
mov
sahf
xchg
pusha
mov
call
outs
(bad)
push
lds
fsubr
(bad)
adc
cmp
fidiv
cmc
cs
and
loop
pushf
xchg
jp
sub
imul
int
push
dec
fstp
dec
ficomp
inc
aam
push
imul
inc
add
call
push
or
popa
adc
adc
sbb
call
sub
das
outs
pop
mov
fdivp
sub
std
test
sub
sahf
pop
lea
add
test
lea
pop
mov
popf
add
sbb
mov
fwait
add
test
pop
add
fwait
sbb
sbb
pop
add
cwde
sahf
add
test
push
lea
add
fwait
sbb
xchg
sbb
lahf
pop
mov
sahf
add
test
push
mov
sahf
add
test
add
mov
cwde
add
sbb
mov
cwde
add
sbb
mov
popf
add
mov
test
popf
rol
loope
mov
not
add
(bad)
repnz
in
gs
loope
sbb
in
les
and
dec
aaa
(bad)
scas
iret
(bad)
cs
cmp
aas
vpminub
sub
dec
and
fdiv
call
(bad)
js
gs
clc
pop
push
inc
rcl
dec
fistp
inc
rcr
ins
rcl
or
pusha
adc
adc
push
xchg
pusha
ins
add
adc
adc
adc
outs
cmp
add
stc
(bad)
loope
idiv
add
sahf
adc
test
sbb
lahf
pop
mov
popf
add
pop
pushf
add
test
lea
fwait
add
test
add
pop
sahf
add
mov
popf
add
pop
lahf
add
mov
add
pushf
push
lea
add
cdq
sahf
sbb
xchg
sbb
lahf
push
lea
lahf
add
xchg
sbb
test
push
pop
fwait
add
sbb
mov
cwde
add
sbb
mov
fwait
add
test
mov
fwait
add
add
xchg
out
push
and
adc
syscall
inc
nop
sub
in
cmp
rol
ret
inc
out
sub
jbe
ficomp
mov
or
shr
repz
dec
and
ret
out
xlat
push
loop
repz
ins
inc
std
push
push
inc
fst
dec
fstp
dec
rcr
push
aam
pop
jns
jb
ja
adc
or
push
popa
sbb
xor
mov
mov
(bad)
in
dec
call
sbb
popf
push
lea
lahf
add
test
mov
push
mov
lahf
pop
mov
pushf
add
mov
add
test
lea
pushf
add
xchg
mov
add
test
mov
popf
sbb
add
xchg
xchg
test
sbb
add
xchg
add
xchg
sbb
xchg
sbb
sbb
sbb
mov
cwde
add
sbb
mov
fwait
add
sbb
test
pop
add
loopne
sbb
shl
or
test
and
aas
xor
xlat
and
sub
sar
int
and
jo
jne
push
loopne
add
das
sar
sub
(bad)
lock
cs
xchg
jne
add
jl
inc
int
pop
dec
fstp
dec
ficomp
push
rcl
jg
js
bswap
adc
push
xchg
sbb
sahf
sbb
(bad)
adc
sub
inc
test
sub
and
repz
pushf
lahf
push
xchg
mov
push
lea
sahf
pop
pop
add
mov
add
xchg
sbb
test
push
mov
popf
add
pop
lahf
add
test
lea
fwait
pop
pop
add
cwde
add
add
xchg
call
mov
sahf
add
mov
lahf
add
xchg
sbb
sbb
xchg
cdq
add
xchg
sbb
pushf
pop
mov
cdq
add
sbb
add
sbb
mov
fwait
add
sbb
mov
add
mov
mov
in
jl
fdivr
aam
dec
push
sti
pusha
imul
sbb
mov
add
outs
arpl
jae
push
loop
jne
icebp
jl
add
jb
xor
add
dec
mov
(bad)
xor
retf
out
(bad)
leave
nop
push
inc
std
pop
pop
inc
rcl
dec
ror
push
fstp
je
jp
or
sbb
add
adc
push
jle
or
dec
cld
cs
or
inc
pop
nop
sbb
mov
add
sahf
push
mov
sahf
push
mov
popf
add
test
pop
mov
sbb
mov
add
xchg
add
pushf
pop
mov
lahf
pop
pop
popf
add
test
push
lea
add
cwde
lahf
sbb
xchg
sbb
test
push
mov
lahf
add
xchg
add
xchg
sbb
xchg
sbb
xchg
sbb
test
push
mov
add
adc
mov
cwde
add
sbb
mov
fwait
add
sbb
pop
add
xchg
jbe
or
aaa
outs
jb
ins
ins
jae
push
adc
pop
xchg
inc
dec
pop
repz
dec
push
jnp
push
hlt
js
and
push
xor
into
retf
(bad)
sti
ret
xchg
(bad)
maxps
inc
dec
inc
fiadd
data16
inc
or
ja
or
loopne
pop
sub
aas
and
sar
mov
nop
fwait
mov
sahf
add
mov
add
pushf
pop
mov
popf
pop
mov
lahf
add
test
pop
xchg
xchg
sbb
lahf
pop
pop
popf
add
pop
popf
add
pop
add
add
cdq
lahf
sbb
xchg
sbb
xchg
sbb
test
push
mov
sahf
add
test
add
lea
lahf
pop
xchg
test
push
lea
sahf
pop
pop
popf
add
test
add
sbb
mov
cdq
add
sbb
mov
call
sbb
mov
call
add
xchg
cli
cmps
sbb
sbb
out
or
adc
adc
outs
dec
inc
loopne
inc
push
retf
imul
push
dec
sbb
idiv
aad
or
out
neg
fiadd
dec
pop
inc
retf
inc
ror
imul
jno
jle
addr16
add
out
adc
jnp
int3
rol
pop
pushf
add
test
add
xchg
pop
mov
lahf
push
lea
sahf
pop
lea
sahf
pop
xchg
test
push
lea
sahf
pop
mov
add
xchg
mov
sbb
cdq
add
cdq
sbb
call
xchg
xchg
sbb
cwde
sbb
call
xchg
test
push
mov
popf
add
test
lea
pushf
push
lea
popf
pop
mov
pushf
add
test
add
sbb
mov
cwde
add
sbb
mov
cdq
add
sbb
mov
fwait
add
sbb
pop
cwde
add
mov
cli
fwait
sbb
ins
jg
outs
arpl
jnp
push
lock
inc
pop
enter
ret
ins
rol
leave
inc
jae
idiv
daa
iret
ins
or
std
cmps
xlat
int3
outs
scas
push
dec
dec
xchg
pop
push
inc
retf
pop
push
ror
push
ret
js
imul
push
xchg
push
lsl
(bad)
iret
fwait
dec
xchg
sbb
add
sbb
lea
push
lea
add
xchg
pop
mov
sahf
pop
mov
lahf
push
mov
pushf
add
mov
add
test
mov
sbb
cdq
add
cdq
sbb
call
xchg
xchg
sbb
cwde
test
xchg
fwait
sbb
sahf
popf
sbb
test
add
test
add
mov
fwait
add
sbb
mov
fwait
add
mov
call
sbb
add
sbb
add
sbb
mov
call
sbb
pop
xchg
add
cmp
mov
xchg
add
or
push
adc
imul
dec
push
enter
iret
inc
jne
into
inc
dec
jg
jge
jle
ins
bound
outs
addr16
jnp
dec
repz
mov
std
loop
pop
clc
popa
dec
ret
pop
xchg
pop
push
jg
inc
dec
push
iret
jo
jb
imul
push
sbb
lahf
push
sbb
mov
xor
data16
call
sbb
lea
sbb
test
push
mov
sahf
add
lea
lahf
push
pop
pushf
add
test
add
test
mov
lahf
sbb
cwde
test
xchg
call
xchg
xchg
sbb
cdq
test
nop
fwait
sbb
test
pop
pop
sahf
add
lea
popf
add
test
add
sbb
mov
fwait
add
sbb
mov
fwait
add
sbb
mov
cdq
add
sbb
add
sbb
add
test
add
xchg
icebp
arpl
arpl
je
push
clc
inc
ja
enter
idiv
imul
jb
div
ja
jb
jae
pusha
pop
data16
push
jmp
js
sar
pop
sub
pop
ret
push
push
push
dec
inc
jno
jnp
jns
pusha
pop
sbb
jmp
add
mov
adc
aas
in
aas
test
cdq
push
mov
cdq
add
add
lea
sahf
add
test
add
sbb
xchg
test
push
pop
popf
add
test
mov
add
xchg
push
xchg
cwde
sbb
call
xchg
cwde
test
xchg
call
xchg
cdq
test
xchg
fwait
sbb
test
push
mov
add
mov
popf
add
test
add
sbb
add
test
add
test
mov
add
sbb
mov
cwde
add
sbb
add
sbb
pop
add
iret
or
or
ins
xchg
jb
push
std
inc
dec
push
cmc
inc
jne
into
jns
data16
jg
jae
js
addr16
je
gs
jmp
push
push
out
popa
inc
push
out
inc
jbe
leave
aaa
es
or
cmp
jnp
push
test
test
jo
pop
outs
add
or
and
fwait
jmp
jp
sbb
add
mov
popf
add
test
add
test
xchg
sbb
pop
pushf
add
sbb
mov
pushf
add
xchg
pop
xchg
xchg
sbb
cwde
test
xchg
call
xchg
cdq
test
xchg
pushf
test
xchg
test
push
pop
popf
add
pop
popf
add
test
add
sbb
add
test
mov
sahf
add
pushf
sbb
pushf
add
sbb
mov
cwde
add
sbb
add
sbb
mov
(bad)
xchg
pop
adc
jmp
gs
jge
clc
jl
jl
inc
jno
idiv
arpl
je
jbe
jb
je
imul
or
xchg
jo
addr16
push
sbb
sbb
out
push
dec
dec
neg
sbb
outs
ret
inc
in
xchg
lock
neg
pop
inc
inc
call
or
popa
imul
adc
add
mov
ss
pop
out
out
arpl
sbb
lea
fwait
pop
mov
popf
add
sbb
mov
call
sbb
mov
pushf
add
mov
fwait
add
test
mov
add
cwde
sbb
fwait
sbb
cwde
test
xchg
call
xchg
call
xchg
lahf
lahf
sbb
mov
fwait
add
sbb
mov
call
sbb
add
sbb
mov
push
xchg
cdq
add
mov
sahf
pop
xchg
test
push
pop
pushf
add
sbb
mov
call
cmp
mov
fs
js
lea
data16
jle
out
dec
popa
cmc
jae
jge
adc
xchg
jp
jb
fs
pusha
adc
jo
adc
push
xchg
sbb
or
jae
outs
retf
jbe
je
inc
gs
adc
imul
loopne
shl
mov
outs
in
jnp
push
mov
dec
js
inc
gs
sbb
or
jmp
imul
xchg
popf
add
test
add
sbb
mov
cdq
add
sbb
mov
cwde
add
mov
cwde
add
sbb
lea
add
nop
cdq
test
xchg
fwait
sbb
fwait
xchg
xchg
nop
sahf
sbb
test
push
mov
pushf
add
sbb
pop
fwait
add
xchg
add
sbb
mov
add
xchg
sbb
xchg
sbb
xchg
sbb
sbb
sbb
mov
xchg
add
fwait
mov
ret
iret
adc
popf
jo
enterw
in
ja
push
gs
adc
loop
ja
jmp
add
sbb
push
pop
pop
xchg
adc
popf
jle
pop
add
(bad)
jbe
add
inc
cmp
jne
cld
stc
adc
repnz
aam
xchg
add
xchg
ins
bound
in
or
popf
or
or
pop
imul
sbb
jmp
loop
cwde
sub
sbb
mov
pushf
add
mov
fwait
add
sbb
mov
fwait
add
sbb
pop
cwde
add
mov
pushf
add
test
push
xchg
cdq
sbb
call
xchg
popf
test
xchg
pushf
xchg
lahf
xchg
xchg
nop
sahf
sbb
test
push
lea
sahf
add
test
add
test
add
mov
fwait
add
test
add
xchg
call
nop
cwde
sbb
call
xchg
cwde
sbb
cwde
popf
sbb
pushf
pop
mov
cdq
add
adc
add
(bad)
xchg
ins
jge
inc
js
imul
outs
sti
je
or
jge
adc
sbb
jae
jae
je
jo
sbb
add
adc
add
pop
pop
pop
cwde
pop
sbb
popa
xchg
adc
dec
addr16
jp
add
push
xor
fxch
sbb
add
cld
lock
dec
mov
cwde
fidivr
sahf
sbb
jmp
test
add
push
push
adc
add
(bad)
pushf
inc
lahf
sbb
lea
cwde
add
sbb
mov
fwait
add
test
add
test
add
sbb
mov
pushf
add
test
pop
xchg
cdq
sbb
call
xchg
sahf
xchg
xchg
popf
mov
nop
xchg
fwait
xchg
sahf
pop
cdq
sbb
mov
lahf
pop
pop
sahf
add
mov
pushf
add
sbb
pop
sahf
add
xchg
sbb
fwait
sbb
xchg
call
xchg
xchg
sbb
sbb
sbb
test
mov
out
daa
jae
imul
lock
gs
loopne
ja
clc
push
jg
mov
jno
arpl
in
adc
pop
xchg
push
adc
xchg
push
adc
call
imul
inc
jp
jl
je
sbb
clc
cmp
cmp
jecxz
mov
sbb
dec
rol
repz
out
inc
mov
sbb
jmp
popf
mov
fcom
mov
push
add
push
adc
push
adc
xchg
push
sbb
aaa
int3
cmc
cmp
in
xchg
dec
lea
call
adc
add
sbb
lea
popf
pop
mov
pushf
add
sbb
mov
popf
add
xchg
push
xchg
cdq
sbb
fwait
xchg
xchg
popf
xchg
call
adc
test
push
lea
add
mov
lahf
push
pop
pushf
add
test
lea
push
lea
sbb
call
xchg
cwde
sbb
cdq
sbb
call
mov
fwait
add
mov
xchg
add
cdq
add
pop
jle
and
push
jne
sub
pop
or
enter
xchg
jne
fs
not
adc
xchg
pop
sbb
cwde
adc
or
or
or
push
sbb
or
add
xchg
push
or
sub
xor
xchg
enter
shl
rcl
jb
fisttp
or
imul
mov
test
aas
cdq
and
or
or
jnp
jne
jae
pop
push
add
or
cwde
adc
ins
xchg
sub
sub
xchg
nop
xchg
popa
mov
xchg
add
(bad)
cwde
or
test
sahf
jg
xchg
add
sbb
pop
pushf
add
test
push
xchg
cwde
sbb
fwait
xchg
xchg
sahf
xchg
cdq
lahf
mov
fwait
xchg
mov
call
adc
xchg
add
xchg
add
test
sbb
sbb
add
sahf
pop
lea
sbb
cdq
lahf
sbb
xchg
sbb
test
sbb
sbb
add
idiv
cwde
or
or
jecxz
push
gs
imul
out
add
jae
ud0
add
adc
push
jmp
add
test
sbb
adc
jp
adc
jae
sbb
add
xchg
xor
seto
jl
test
sub
sar
pop
lods
mov
or
out
sahf
add
pushf
mov
out
out
cmp
lds
aam
das
in
mov
xchg
ret
rol
add
add
adc
ins
pushw
jbe
lock
or
loope
sbb
cdq
add
and
and
rcl
ret
inc
(bad)
cmc
loopne
hlt
out
jl
repnz
(bad)
inc
int
test
out
bnd
jmp
mov
fwait
add
test
add
xchg
cdq
sbb
fwait
xchg
xchg
sahf
xchg
xchg
mov
cdq
lahf
mov
xchg
xchg
mov
call
adc
xchg
add
xchg
add
test
sbb
sbb
add
pop
add
add
xchg
call
mov
sahf
push
xchg
test
push
mov
fwait
add
add
xchg
(bad)
lea
popa
adc
int3
arpl
jecxz
adc
gs
adc
add
stos
jb
push
cwde
popaw
sbb
nop
or
add
or
add
arpl
sti
or
and
push
in
arpl
or
test
out
call
mov
mov
stos
mov
mov
test
sub
mov
sub
mov
and
cli
cmp
mov
fwait
sbb
loope
xchg
or
retf
xor
adc
sbb
imul
inc
jae
repz
push
std
jg
jg
jo
je
push
pusha
jo
bound
pusha
outs
push
loopne
ja
imul
adc
add
xor
fldcw
inc
aam
fmul
jb
sbb
mov
add
xchg
cdq
test
nop
fwait
xchg
xchg
sahf
xchg
xchg
nop
mov
call
adc
sbb
lea
sahf
pop
pop
lahf
add
mov
pushf
add
mov
add
popf
pop
lea
add
xchg
cdq
add
xchg
sbb
popf
pop
mov
cdq
add
(bad)
call
or
or
js
xchg
jo
jae
or
jne
sbb
xchg
addr16
pop
loopne
adc
sbb
push
add
or
or
push
retf
popf
pop
cmp
jno
shrd
or
das
(bad)
mov
adc
test
sub
test
sub
test
sub
test
sub
mov
sbb
or
sub
ds
lock
aad
mov
das
cld
or
add
add
add
jnp
outs
cmp
test
push
int
inc
retfw
dec
jno
enter
repnz
jne
out
jl
retfw
ja
jge
jnp
sbb
or
or
(bad)
adc
sub
test
arpl
pop
popf
add
xchg
sbb
sahf
xchg
xchg
nop
mov
call
adc
sbb
mov
sahf
add
test
lea
fwait
sbb
sbb
pop
sahf
add
test
mov
pushf
sbb
test
push
lea
popf
add
test
add
out
sub
pop
mov
push
sbb
arpl
outs
js
loope
push
add
fs
add
adc
pop
sbb
pop
add
push
sbb
or
mov
shl
xchg
jno
nop
sub
(bad)
jge
stos
pusha
sub
scas
std
stc
mov
mov
mov
mov
test
sub
test
sub
mov
xchg
fwait
add
mov
add
mov
xor
push
cli
or
in
or
(bad)
(bad)
inc
mul
rol
retf
jns
sub
mov
push
adc
sbb
push
sbb
push
sti
jle
ins
cmc
jge
jbe
jge
push
lock
jg
adc
gs
jno
outs
in
jo
bnd
jne
jbe
jae
sbb
push
and
adc
sbb
or
ret
xchg
fwait
sbb
xchg
sbb
fwait
xchg
xchg
sahf
xchg
nop
mov
lahf
mov
xchg
xchg
mov
cdq
xchg
pushf
adc
sbb
mov
pushf
pop
mov
lahf
add
xchg
add
mov
add
test
add
fwait
push
pop
sahf
add
test
lea
xchg
pop
mov
mov
out
add
test
push
jno
bound
jp
fs
jae
bound
push
jmp
push
pop
xchg
push
sbb
call
sbb
add
and
dec
sub
xor
jb
int3
clc
xchg
sub
stos
mov
mov
test
sub
test
sub
jecxz
add
xchg
mov
lahf
xchg
xchg
xchg
nop
(bad)
adc
jecxz
adc
out
ins
into
into
sbb
sub
or
sub
sub
xor
lods
movs
fstp
adc
das
sbb
mov
cmp
jge
je
popa
fwait
je
or
ins
push
imul
jp
icebp
jp
arpl
inc
inc
bswap
jnp
jae
sbb
pop
in
sbb
nop
adc
sbb
or
sbb
xchg
add
or
fadd
sbb
fwait
sbb
call
xchg
nop
mov
lahf
mov
fwait
xchg
mov
cwde
xchg
call
sbb
mov
fwait
add
test
add
test
add
sbb
mov
fwait
pop
mov
sahf
add
test
add
test
lea
cmc
pop
test
push
in
or
scas
add
imul
popa
outs
push
in
sbb
sbb
pop
lahf
adc
xchg
add
xchg
or
aas
adc
adc
cmc
and
(bad)
mov
popa
pop
addr16
es
cmp
int3
ret
mov
mov
mov
test
sub
stos
cld
sub
xchg
sub
popf
adc
add
mov
sbb
call
jmp
jne
imul
or
and
mov
sub
mov
add
das
mov
cmp
mov
pop
outs
mov
inc
jp
repnz
out
bound
out
jl
pop
cmc
outs
jnp
out
sbb
pushf
pop
sbb
fwait
push
sbb
xchg
sbb
adc
sbb
or
push
test
push
sahf
push
mov
sbb
popf
xchg
xchg
lahf
mov
nop
mov
call
adc
sbb
add
test
pop
pushf
add
sbb
mov
call
sbb
mov
sahf
add
lea
cdq
add
(bad)
xchg
add
loope
loop
adc
mov
add
jne
outs
jbe
imul
pop
add
adc
sbb
or
daa
and
lea
ss
(bad)
std
das
int
clc
mov
int
lods
or
ins
orps
lock
call
retf
mov
mov
test
sub
test
sub
mov
pop
pop
add
cwde
pushf
sbb
sbb
mov
les
aam
not
adc
push
xchg
xor
nop
sub
ss
xor
cmp
sub
mov
or
mov
ins
pusha
or
cld
adc
sbb
cmp
or
or
adc
pop
or
mov
or
mov
add
(bad)
sbb
push
xchg
sbb
sbb
or
lahf
xor
call
nop
pushf
xchg
xchg
lahf
mov
fwait
xchg
mov
call
adc
sbb
mov
call
test
add
sbb
pop
call
sbb
pop
lahf
add
lea
aam
ror
test
xor
mov
push
jge
pusha
outs
jp
push
jno
arpl
add
add
cwde
or
fwait
aas
outs
sbb
add
fdivrp
dec
jg
inc
(bad)
jne
pop
lds
outs
repnz
retf
xchg
sahf
cmps
pop
call
sbb
xor
test
sub
test
sub
mov
sahf
add
popf
push
lea
add
xchg
cdq
sahf
add
test
sbb
add
idiv
or
mov
aaa
sub
add
fistp
cmp
movs
sub
sub
or
pop
mov
cmp
sbb
or
mov
xor
mov
or
mov
sbb
add
lea
add
mov
punpcklwd
adc
out
adc
inc
cwde
pop
fistp
push
xchg
cdq
add
cdq
test
xchg
pushf
test
xchg
sahf
xchg
xchg
nop
xchg
fwait
xchg
xchg
pop
cdq
mov
push
test
cwde
jne
sbb
mov
fwait
add
adc
mov
cdq
add
pop
fwait
add
xchg
add
xchg
add
ud2
adc
cmp
sub
mov
pop
jle
imul
adc
add
adc
adc
or
or
add
sahf
gs
add
cmp
mov
addr16
(bad)
sub
xchg
cmp
sbb
arpl
push
test
sub
test
sub
mov
sub
lea
pushf
pop
mov
add
xchg
add
pop
popf
add
mov
add
xor
in
ins
push
push
adc
and
push
add
xchg
clc
cmp
sub
add
sub
xor
es
ds
add
adc
add
sbb
or
sbb
or
add
pop
jnp
mov
sbb
xchg
push
adc
pop
or
call
add
test
xchg
fwait
sbb
pushf
test
xchg
fwait
xchg
xchg
nop
xchg
sbb
mov
jbe
mov
or
test
cwde
add
(bad)
cdq
add
sbb
add
sbb
add
xchg
sbb
xor
out
sub
int
hlt
in
inc
retf
cmp
fld
aaa
or
push
sbb
xchg
or
add
cdq
add
mov
pop
mov
inc
pusha
push
int
add
jge
sbb
or
nop
pop
xchg
mov
sbb
sahf
xchg
pusha
pop
ds
stos
test
and
test
sub
xchg
push
pop
call
sbb
mov
lahf
add
test
add
xchg
push
pop
retf
add
or
xchg
or
retf
stos
sub
xchg
dec
pop
leave
aas
int3
pop
add
int3
fldenv
aam
cmp
xlat
inc
sub
mov
xlat
ret
inc
sub
sub
mov
sbb
or
add
lahf
adc
and
(bad)
cmp
ins
sub
mov
or
adc
sbb
in
out
add
test
sbb
fwait
test
xchg
call
xchg
sahf
xchg
sbb
mov
mov
or
mov
or
lea
jnp
mov
or
(bad)
fwait
push
mov
pushf
add
sbb
test
push
mov
pop
(bad)
lock
cmps
cmp
xchg
test
add
pop
or
popf
add
sbb
add
pop
cwde
fdiv
mov
jle
push
sbb
xchg
inc
jb
imul
and
pusha
add
out
mul
nop
xchg
cdq
or
imul
popa
jl
imul
xor
mov
mov
test
sub
sahf
cwde
cmp
fwait
call
sbb
mov
call
sbb
mov
sahf
pop
mov
cdq
add
nop
jmp
sub
jo
cli
imul
arpl
cli
(bad)
inc
(bad)
std
shr
xchg
stc
jecxz
dec
xchg
xor
pop
xchg
loop
pop
out
call
jle
jg
add
sbb
add
add
and
das
pop
inc
xor
xor
fld
pop
push
sahf
push
inc
or
or
pop
xchg
or
leave
sahf
sbb
xchg
sbb
cdq
test
xchg
fwait
sbb
xchg
sbb
mov
or
xchg
or
mov
or
or
or
xchg
push
mov
fwait
add
test
add
mov
pop
lods
fadd
test
bound
shr
test
adc
cmp
mov
adc
pop
loop
inc
(bad)
div
imul
or
push
xor
adc
cdq
xchg
pop
or
push
test
cmps
or
sti
jge
cmp
mov
aaa
div
xlat
sti
movs
pop
xor
test
fwait
popf
cwde
add
sbb
test
add
test
mov
sahf
add
test
add
or
inc
jne
fld
sbb
jns
imul
retf
out
call
mov
ins
scas
scas
movs
cmp
mov
int
or
pop
pushf
pop
pop
popa
aad
je
iret
popa
imul
mov
dec
rol
dec
ret
pop
push
sbb
sbb
sbb
add
into
pushf
add
xchg
test
sbb
cwde
test
xchg
call
xchg
mov
sbb
xchg
or
xchg
or
or
test
push
xchg
cdq
or
adc
mov
add
sbb
mov
js
cld
clc
xchg
or
scas
icebp
xor
jnp
push
(bad)
pop
pop
and
ja
inc
cmc
jne
push
les
ja
ins
outs
ja
adc
jno
gs
jmp
fist
push
mov
fwait
push
test
popf
add
ret
jbe
push
bound
sbb
and
pop
push
inc
(bad)
xor
(bad)
cmp
(bad)
fstp
out
dec
xrelease
nop
cwde
pusha
mov
pushf
add
test
add
test
mov
add
fwait
push
mov
add
in
sbb
je
lock
dec
pop
icebp
jae
pop
inc
iret
dec
dec
jne
sub
mov
adc
test
mov
and
dec
rcr
pop
rcl
inc
rol
inc
lds
fstp
dec
ficom
dec
aad
push
dec
rcr
aad
imul
cmp
push
mov
enter
sbb
pop
lea
add
cdq
sbb
call
mov
mov
aaa
xor
or
mov
xchg
xchg
or
mov
or
mov
mov
push
test
fwait
add
sbb
sahf
sahf
pop
mov
loop
adc
sub
inc
pop
dec
into
pop
push
outs
aam
dec
ins
(bad)
jnp
(bad)
enter
sti
arpl
sbb
push
push
imul
mov
cwde
or
adc
mov
xchg
pushf
and
stos
aas
bndldx
adc
lahf
pop
ds
xchg
sub
and
xchg
cwde
dec
pop
pushf
add
test
mov
add
test
add
pushf
push
lea
add
xchg
add
ja
lods
jae
pop
jmp
ins
stc
jge
sub
jg
and
cmp
mov
mov
lods
mov
push
jmp
inc
retf
inc
hlt
pop
pop
dec
fistp
dec
fcomp
dec
xlat
pop
push
dec
aam
push
sbb
inc
ja
(bad)
aaa
push
addr16
call
or
sbb
mov
add
mov
sbb
mov
aaa
mov
mov
or
or
mov
or
mov
or
lea
or
test
cdq
push
test
lods
seto
cmp
xor
xor
mov
jge
push
leave
dec
inc
pop
int3
dec
dec
jle
jno
add
jmp
cli
std
xchg
dec
mov
cwde
or
mov
popf
add
fild
iret
(bad)
shr
sub
and
fld
xchg
add
sbb
pushf
or
add
add
repz
pushf
add
sbb
mov
fwait
add
xchg
mov
lahf
add
xchg
add
test
sbb
popf
add
inc
dec
push
shl
jecxz
dec
iretw
inc
dec
ja
jns
mov
stos
stos
mov
and
mov
pop
mov
dec
dec
dec
les
dec
ret
dec
rcr
dec
aad
push
dec
aam
push
dec
xlat
pop
push
add
dec
inc
and
xor
js
jmp
or
mov
popf
add
xchg
add
mov
mov
or
xor
or
mov
or
mov
or
xchg
xchg
or
test
push
test
lods
or
xor
jae
mov
add
iret
ret
mov
scas
fist
inc
lahf
cmp
hlt
pop
hlt
out
jbe
(bad)
xchg
imul
call
adc
test
jmp
sub
add
and
jb
sbb
ja
imul
outs
inc
out
shl
push
loope
cdq
push
lea
sahf
add
xchg
add
test
xchg
test
sbb
sbb
mov
sbb
xchg
cdq
fwait
pop
xchg
(bad)
rcr
shl
test
outs
(bad)
sbb
call
jo
sub
in
xchg
mov
sub
fwait
and
push
inc
mov
dec
(bad)
push
push
dec
ficomp
dec
aad
push
dec
(bad)
pop
push
inc
rcr
dec
aam
push
add
fisubr
cmp
mov
xchg
cwde
sub
pop
call
sbb
pop
xchg
add
mov
or
scas
ss
mov
xor
mov
aaa
mov
mov
or
xchg
aaa
or
or
lea
or
lea
or
test
(bad)
or
shl
push
mov
mov
fsubr
and
xchg
dec
xchg
call
test
cwde
add
sbb
mov
loope
cdq
xchg
(bad)
adc
shl
push
out
movs
jle
mov
xor
pushf
std
mov
push
popa
out
jno
jnp
ins
data16
pusha
sub
jmp
cdq
sub
mov
pushf
pop
mov
add
mov
add
xchg
call
lea
add
mov
lahf
push
xchg
test
cdq
das
and
mov
inc
push
clc
inc
je
ret
outs
jge
je
cmp
aaa
and
jnp
mov
add
movs
jmp
xchg
or
push
inc
in
pop
dec
aam
pop
dec
fstp
dec
aad
pop
dec
xlat
push
push
pop
rcr
xlat
push
pop
or
push
pop
inc
shl
sub
or
sbb
mov
fwait
add
sbb
lea
lods
or
mov
ss
mov
aaa
mov
mov
ss
mov
or
mov
or
or
xchg
fwait
jp
jmp
imul
xchg
call
(bad)
xchg
or
sbb
mov
xchg
add
mov
xchg
nop
fadd
int
pop
ret
test
lea
popf
cmp
xchg
out
movs
xor
ins
mov
outs
repz
pusha
leave
jne
cmp
imul
call
add
lea
add
xchg
cdq
add
cdq
lahf
sbb
xchg
sbb
xchg
sbb
xchg
sbb
jecxz
in
pop
ins
xchg
jle
js
xor
imul
sbb
dec
(bad)
repnz
and
(bad)
lds
dec
pop
inc
lds
inc
fcom
inc
fist
inc
ficom
dec
fst
dec
fistp
dec
rcr
or
jge
ins
int3
rcr
mov
popf
add
test
add
mov
nop
add
mov
mov
or
mov
xor
mov
or
mov
xor
mov
ss
mov
xor
mov
or
mov
or
mov
test
push
or
sbb
lea
push
mov
call
adc
mov
xchg
mov
mov
iret
sub
jae
jmp
mov
add
call
pop
test
inc
into
dec
inc
data16
and
loop
repz
ds
xchg
sahf
adc
xchg
add
xchg
sbb
xchg
sbb
xchg
sbb
cwde
sbb
call
nop
cwde
sbb
call
int3
inc
pop
(bad)
dec
inc
jne
push
add
sbb
jp
jmp
lds
and
enter
dec
out
push
inc
rcl
inc
rcl
pop
ficom
fst
dec
les
ficomp
inc
rcl
adc
ja
push
hlt
and
cdq
and
test
mov
add
test
add
mov
or
scas
ss
mov
xor
mov
mov
xor
mov
mov
xor
nop
or
mov
or
mov
or
lea
or
xchg
cwde
jne
mov
jne
adc
add
call
xchg
add
(bad)
retf
mov
lods
das
fst
jae
movs
movs
xor
out
fisub
push
pop
dec
les
ins
rol
sbb
ja
pop
std
enter
loopne
lahf
imul
sahf
sbb
xchg
sbb
cwde
sbb
call
nop
cwde
sbb
call
nop
cwde
test
xchg
call
xchg
cdq
test
xchg
fwait
xchg
fwait
or
push
mov
dec
jg
int3
inc
dec
imul
jg
jae
imul
int
inc
push
ret
dec
dec
push
mov
inc
dec
push
retf
inc
int3
push
push
pop
fst
pop
fadd
(bad)
pop
add
fwait
jp
sbb
add
test
mov
add
mov
or
ss
mov
xor
mov
mov
xor
mov
ss
mov
xor
mov
xor
or
mov
or
mov
or
or
test
xchg
jp
(bad)
xchg
add
(bad)
call
sbb
add
int
gs
sub
iret
sub
loope
pop
xor
es
mov
and
sti
ret
mov
pop
pop
dec
ficom
ror
jb
inc
popa
xor
and
add
call
cdq
sbb
fwait
sbb
cwde
sbb
call
nop
cwde
test
xchg
call
nop
cwde
sbb
call
nop
cwde
test
xchg
call
xchg
cdq
test
xchg
pushf
popf
sbb
xchg
clc
test
adc
addr16
dec
imul
ins
popa
jne
imul
xchg
dec
dec
jo
ja
jg
pop
js
xchg
jo
jle
outs
jns
cli
jae
inc
in
inc
jg
dec
pop
jb
push
sbb
cwde
cmp
sbb
pop
call
sbb
mov
xchg
add
mov
or
mov
xor
mov
aaa
mov
mov
xor
mov
mov
xor
mov
xor
lods
ss
mov
aaa
mov
mov
aaa
mov
mov
or
or
mov
jne
adc
add
call
sbb
cdq
xchg
(bad)
push
out
in
gs
sub
push
fst
xchg
and
test
xor
sbb
fcmovnb
int3
mov
inc
dec
retf
dec
rcr
inc
aad
push
ficom
cs
cmp
push
jo
retf
loope
sub
sbb
cdq
test
xchg
call
xchg
cdq
test
xchg
fwait
sbb
cwde
test
xchg
call
xchg
cwde
test
xchg
fwait
sbb
call
xchg
popf
sbb
cdq
jmp
ss
jns
imul
bound
push
sbb
test
sbb
mov
add
inc
sbb
shl
jl
xchg
dec
inc
arpl
dec
pop
jo
ja
ja
ins
outs
adc
(bad)
call
sbb
pop
call
sbb
mov
scas
pop
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
aaa
mov
mov
ss
mov
aaa
or
or
lea
add
mov
add
cdq
push
test
xchg
mov
mov
ror
int
aas
cmp
cli
cld
mov
add
mov
mov
xor
dec
mov
dec
fstp
aad
push
dec
xlat
pop
push
push
rcr
add
dec
rcr
mov
test
adc
popf
sbb
cdq
test
nop
popf
sbb
cdq
test
xchg
fwait
sbb
cwde
test
xchg
fwait
sbb
xchg
fwait
sbb
call
xchg
popf
sbb
xchg
nop
call
mov
bound
std
push
push
outs
loop
xor
mov
cmp
sub
sbb
cmp
ret
push
sbb
outs
adc
add
adc
(bad)
fstp
jp
test
add
test
mov
scas
add
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
ss
mov
aaa
mov
mov
or
sbb
add
mov
add
call
cmps
push
ss
push
mov
xchg
test
xor
mov
stos
cmp
xor
push
dec
rcr
aad
push
dec
xlat
pop
push
push
aad
inc
jne
jb
imul
and
xchg
pushf
sub
test
xchg
call
xchg
popf
sbb
cdq
test
nop
pushf
sbb
cdq
test
xchg
fwait
sbb
xchg
pushf
sbb
test
xchg
fwait
xchg
xchg
popf
test
xchg
call
loop
(bad)
call
fadd
mov
mov
test
sub
test
sub
test
sub
xchg
repnz
loope
mov
das
sub
leave
cmp
cmp
mov
cdq
add
pop
call
sbb
lea
scas
push
mov
mov
xor
mov
mov
xor
mov
cmps
cmp
mov
movs
xor
test
xor
stos
xor
mov
xor
mov
mov
xor
mov
xor
mov
aaa
mov
mov
or
mov
xchg
add
mov
add
in
pop
rol
cmps
out
cmp
aaa
sub
pop
xor
cmp
mov
sahf
cmp
pop
push
dec
aad
push
dec
aad
push
dec
xlat
pop
push
pop
aam
inc
jg
jnp
pop
les
or
mov
xchg
and
sbb
popf
sbb
sahf
test
xchg
call
nop
popf
sbb
cwde
sbb
call
xchg
cwde
test
xchg
fwait
sbb
pushf
test
xchg
fwait
xchg
xchg
sahf
sbb
cdq
test
lea
push
xchg
ror
mov
cmps
lods
mov
mov
test
sub
test
sub
test
sub
inc
sub
mov
sub
sbb
add
sbb
lea
popf
push
lea
nop
push
mov
mov
xor
mov
aaa
mov
mov
xor
movs
aas
mov
cmps
cmp
mov
cmps
ds
cmps
cmp
mov
movs
xor
test
mov
mov
xor
mov
xor
mov
mov
aaa
mov
mov
xchg
call
sbb
mov
jmp
pop
daa
sub
cmc
xor
addr16
call
aaa
stos
movs
mov
and
(bad)
icebp
aas
pushw
dec
xchg
pop
push
dec
xlat
pop
push
dec
rcr
dec
xlat
pop
push
pop
aam
pop
imul
adc
push
push
lahf
xchg
xor
test
xchg
fwait
xchg
popf
sbb
xchg
xchg
sbb
xchg
sbb
xchg
sbb
cdq
test
xchg
call
xchg
cdq
test
xchg
pushf
test
mov
pop
enter
sub
sub
test
sub
dec
push
mov
lahf
cmp
test
add
test
add
test
add
mov
nop
pop
mov
mov
xor
mov
cmp
mov
movs
cmp
mov
cmps
cmp
mov
movs
ds
cmps
aas
mov
mov
test
ds
mov
xor
mov
or
or
or
test
fwait
push
mov
icebp
add
out
mov
iret
sub
mov
cld
jecxz
dec
mov
mov
and
mov
(bad)
xor
loope
push
imul
dec
push
enter
repz
inc
push
fisttp
jp
jg
sub
sbb
push
jecxz
retf
loopne
or
sbb
call
xchg
fwait
sbb
xchg
sbb
xchg
sbb
xchg
sbb
cwde
sbb
cdq
sbb
call
xchg
call
nop
test
sbb
out
jmp
test
mov
in
(bad)
xor
sti
jmp
cmc
(bad)
movs
jne
mov
jl
mov
xor
sbb
mov
call
sbb
pop
sahf
add
mov
scas
add
mov
or
mov
mov
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
cmps
cmp
mov
stos
ds
mov
xor
mov
aaa
xor
or
mov
add
sbb
xchg
popf
fcomp
jmp
mov
ret
xchg
sub
mov
mov
and
mov
out
jbe
ins
inc
jp
outs
jno
clc
inc
jns
call
jno
pop
cmc
jnp
adc
adc
pop
in
ss
sti
aas
jmp
add
cwde
sbb
call
xchg
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
test
xchg
cwde
cmc
sbb
loope
sbb
loopne
sub
pop
mov
pushf
add
mov
add
sbb
pop
fwait
add
lea
pushf
pop
mov
lods
pop
mov
mov
xor
mov
mov
cmp
mov
mov
cmp
mov
movs
cmp
mov
movs
cmp
mov
test
mov
stos
aas
mov
mov
xor
mov
or
lea
add
sbb
xchg
ficomp
call
and
pop
ret
pop
mov
mov
and
movs
mov
and
fcom
or
push
int3
dec
inc
data16
jnp
ins
lock
jbe
cld
inc
jb
(bad)
ja
pop
idiv
sbb
pop
add
(bad)
ss
out
pop
call
sbb
add
xchg
sbb
xchg
sbb
add
cdq
lahf
sbb
cwde
sbb
cdq
lahf
sbb
xchg
sbb
xchg
sbb
test
pop
xchg
call
mov
lahf
add
lea
popf
add
pop
add
sbb
mov
call
sbb
mov
lods
add
mov
xor
mov
xor
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
movs
cmp
mov
cmps
ds
test
ds
mov
xor
mov
or
mov
jp
sbb
call
cmp
pop
mov
mov
and
scas
mov
(bad)
cmp
inc
fcom
inc
fist
fcomp
inc
rcl
push
ror
push
inc
jno
retf
dec
stc
or
out
idiv
adc
adc
cdq
sahf
sbb
xchg
sbb
add
xchg
add
lea
add
xchg
cdq
lahf
sbb
xchg
sbb
test
sbb
xchg
sbb
xchg
sbb
xchg
sbb
lahf
pop
mov
fwait
add
sbb
mov
call
sbb
mov
stos
pop
mov
mov
xor
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
cmps
cmp
mov
cmps
cmp
mov
lods
xor
mov
xor
mov
aaa
or
xchg
push
mov
popf
add
pushf
ret
sbb
fist
fbld
(bad)
xchg
and
xchg
xor
stos
movs
mov
and
cmp
cdq
dec
inc
inc
mov
pop
push
dec
ficomp
inc
xlat
pop
push
push
aad
pop
pop
(bad)
ja
jne
xor
adc
push
sub
cwde
sbb
call
xchg
xchg
sbb
lahf
pop
pop
lahf
add
xchg
sbb
xchg
sbb
cwde
sbb
cdq
sahf
sbb
test
sbb
cwde
sbb
cdq
lahf
sbb
cwde
sbb
call
nop
cwde
sbb
cdq
sahf
sbb
test
sbb
sbb
mov
popf
add
test
mov
add
cmps
xor
mov
ds
cmps
aas
mov
mov
cmp
mov
mov
cmp
mov
cmp
mov
cmp
mov
movs
cmp
mov
test
ds
mov
xor
mov
or
mov
pushf
add
fstp
in
sahf
ins
lar
fmul
jnp
fcomi
fwait
pop
sahf
call
scas
movs
mov
and
xor
inc
mov
push
push
dec
(bad)
pop
push
dec
xlat
pop
push
pop
aam
pop
inc
fist
fnstsw
int3
push
and
sub
xchg
cwde
sbb
call
xchg
xchg
sbb
test
pop
pop
lahf
add
lea
add
xchg
push
xchg
xchg
sbb
xchg
sbb
sbb
call
nop
cdq
test
xchg
fwait
sbb
mov
lahf
push
xchg
test
sbb
sbb
pop
popf
add
mov
sahf
add
mov
lods
add
mov
aaa
mov
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
cmps
cmp
mov
aas
mov
mov
xor
mov
mov
cdq
add
xor
lea
cwde
imul
jo
jbe
and
addr16
popf
ror
sahf
ds
mov
or
mov
or
pop
mov
dec
dec
enter
ret
dec
xlat
pop
push
inc
aam
push
dec
rcr
jle
dec
inc
dec
fst
out
push
lahf
xchg
adc
cdq
sbb
call
xchg
test
sbb
sbb
mov
lahf
add
xchg
mov
push
mov
sbb
cdq
lahf
sbb
xchg
sbb
test
xchg
call
xchg
cdq
test
xchg
fwait
sbb
xchg
call
xchg
xchg
sbb
sahf
push
pop
popf
add
test
add
test
mov
aaa
mov
mov
mov
cmp
mov
mov
cmp
cmps
mov
cmp
cmps
mov
es
mov
cmp
mov
movs
cmp
mov
stos
aas
mov
mov
xor
mov
or
popf
push
mov
out
cwde
(bad)
cmps
adc
cmp
jne
jbe
jns
add
adc
popf
cmp
mov
test
rcr
rol
xchg
inc
inc
dec
rcr
fcomp
dec
aad
push
dec
rcr
dec
rcr
jb
inc
pop
pop
fimul
sar
push
jmp
xchg
adc
cdq
sbb
call
xchg
test
push
mov
lahf
pop
pop
sahf
add
pop
lahf
add
mov
add
cdq
sahf
sbb
test
sbb
xchg
sbb
cdq
test
xchg
fwait
sbb
xchg
call
nop
cwde
sbb
cdq
sahf
sbb
test
sbb
lahf
push
pop
sahf
add
xchg
xchg
mov
pop
mov
mov
xor
mov
cmp
mov
mov
cmp
mov
es
cmps
mov
and
cmps
mov
cmp
mov
mov
cmp
mov
test
ds
mov
xor
mov
xchg
pushf
push
mov
inc
xchg
in
sbb
fucom
out
pusha
jp
inc
arpl
push
imul
(bad)
xchg
jo
enter
inc
mov
inc
pop
sti
dec
push
push
(bad)
pop
dec
outs
les
inc
rol
rcr
fimul
pop
shl
push
idiv
retf
hlt
xor
in
or
cwde
sbb
mov
lahf
push
mov
sahf
add
pop
sahf
add
mov
lahf
add
test
sbb
lahf
pop
lea
add
xchg
sbb
xchg
sbb
call
xchg
popf
test
xchg
call
nop
popf
sbb
cwde
sbb
cdq
lahf
sbb
xchg
xchg
sbb
sbb
lea
add
xchg
add
mov
sbb
mov
xor
mov
mov
cmp
mov
lods
mov
mov
es
movs
mov
and
mov
mov
cmp
mov
mov
cmp
mov
stos
aas
mov
mov
xor
mov
xchg
fwait
jnp
or
repnz
xor
jbe
imul
imul
jecxz
or
add
mov
arpl
jne
imul
jl
pusha
(bad)
jae
ins
out
jo
inc
pusha
cmc
ins
arpl
int3
adc
adc
cld
lock
popf
xchg
cmp
sbb
cwde
popf
sbb
lahf
push
pop
fwait
add
sbb
mov
popf
add
lea
popf
push
mov
lahf
pop
pop
add
mov
add
xchg
sbb
fwait
xchg
xchg
sahf
test
xchg
fwait
test
nop
popf
sbb
cdq
sbb
call
xchg
xchg
sbb
xchg
sbb
xchg
sbb
mov
sbb
mov
xor
mov
mov
cmp
mov
cmp
mov
and
cmps
mov
and
lods
mov
mov
lods
cmps
mov
cmp
mov
test
mov
stos
aas
mov
mov
xor
or
call
add
out
cmps
sbb
les
ret
bsf
adc
popf
popa
popa
es
ret
ds
retf
dec
ret
ja
daa
sbb
cmp
and
mov
xor
mov
popa
sbb
push
lahf
cs
mov
xchg
and
sbb
mov
sahf
push
xchg
test
push
mov
pushf
add
test
add
test
pop
lahf
add
xchg
sbb
sbb
cdq
sbb
fwait
add
cwde
sbb
call
xchg
fwait
xchg
popf
sbb
sahf
test
xchg
fwait
xchg
popf
sbb
sahf
test
xchg
cdq
test
xchg
pushf
sbb
cwde
sbb
cdq
lahf
sbb
xchg
sbb
xchg
sbb
mov
sbb
mov
xor
mov
mov
cmp
mov
lods
cmps
mov
daa
lods
movs
mov
and
movs
mov
daa
lods
cmps
mov
daa
lods
cmps
mov
daa
mov
mov
cmp
mov
stos
cmp
mov
xor
mov
xor
or
or
sbb
xchg
popf
xlat
add
jecxz
pusha
les
daa
int3
ds
xchg
aaa
(bad)
popf
mov
cpuid
test
test
and
mov
or
cdq
mov
idiv
dec
dec
shr
int3
pop
sub
cld
push
(bad)
int
inc
out
xchg
test
popf
adc
sbb
lea
popf
pop
mov
pop
mov
popf
add
test
add
test
add
xchg
push
lea
add
xchg
sbb
cdq
sbb
call
nop
fwait
xchg
nop
popf
sbb
sahf
test
xchg
fwait
xchg
popf
sbb
popf
test
xchg
call
nop
popf
sbb
cdq
test
xchg
call
nop
xchg
sbb
xchg
sbb
mov
sbb
mov
xor
mov
mov
cmp
mov
mov
es
cmps
mov
daa
scas
movs
mov
and
scas
movs
mov
and
movs
mov
daa
lods
mov
mov
cmp
mov
stos
ds
mov
xor
mov
aaa
or
xchg
or
mov
sbb
bnd
jg
popf
mov
test
test
sub
test
sub
test
sub
test
cld
xor
stc
mov
jecxz
addr16
popf
adc
popf
sbb
lea
popf
add
sbb
pop
pushf
add
test
add
test
add
test
pop
mov
add
xchg
xchg
pushf
sbb
cdq
sbb
fwait
sbb
xchg
fwait
xchg
nop
popf
sbb
sahf
test
xchg
fwait
xchg
popf
sbb
sahf
test
xchg
call
nop
popf
sbb
cdq
test
xchg
call
nop
cwde
sbb
cdq
lahf
sbb
xchg
sbb
mov
sbb
mov
xor
mov
mov
cmp
mov
lods
cmps
mov
and
movs
mov
and
scas
movs
mov
and
movs
mov
and
cmps
mov
daa
mov
mov
cmp
mov
cmps
aas
mov
test
mov
mov
xor
mov
xchg
or
mov
xchg
nop
mov
mov
test
sub
test
sub
test
sub
test
sub
lods
and
xchg
test
nop
test
xchg
xchg
sbb
test
sbb
sbb
pop
call
sbb
mov
fwait
add
sbb
lea
pop
xchg
cdq
add
xchg
sbb
cdq
test
xchg
fwait
sbb
xchg
fwait
xchg
nop
popf
sbb
test
xchg
fwait
xchg
pushf
sbb
sahf
test
xchg
call
nop
pushf
sbb
cdq
test
xchg
fwait
sbb
cwde
sbb
call
nop
xchg
sbb
mov
sbb
mov
xor
mov
mov
cmp
mov
mov
es
mov
es
movs
mov
and
scas
movs
mov
and
movs
mov
and
cmps
mov
and
cmps
mov
cmp
mov
movs
cmp
mov
stos
aas
mov
mov
xor
or
or
(bad)
pushf
or
add
mov
mov
mov
test
sub
test
sub
test
sub
test
sub
or
pushf
sahf
add
test
add
xchg
push
mov
call
test
add
adc
mov
cdq
add
sbb
test
add
xchg
call
mov
sbb
cdq
sbb
call
xchg
call
xchg
sahf
test
nop
popf
sbb
sahf
sbb
call
xchg
popf
sbb
call
nop
pushf
sbb
cdq
test
xchg
call
nop
cwde
sbb
call
xchg
mov
or
test
xor
mov
mov
daa
lods
movs
mov
daa
scas
movs
mov
and
scas
movs
mov
and
scas
movs
mov
and
cmps
mov
and
mov
mov
cmp
mov
test
mov
test
xor
mov
xor
mov
xor
or
or
sbb
cmp
mov
test
sub
test
sub
lods
mov
sub
xchg
call
mov
pushf
push
mov
sahf
add
sbb
mov
xchg
add
(bad)
cdq
add
cwde
jp
adc
mov
fwait
add
sbb
xchg
cdq
add
mov
sbb
cdq
sbb
fwait
sbb
fwait
xchg
xchg
sahf
test
fwait
xchg
popf
sbb
sahf
test
xchg
fwait
xchg
pushf
sbb
sahf
test
xchg
call
xchg
popf
sbb
cdq
test
nop
pushf
sbb
cdq
test
xchg
call
xchg
mov
or
mov
mov
xor
mov
cmp
lods
movs
mov
and
movs
mov
and
test
mov
and
scas
movs
mov
and
movs
mov
and
cmps
mov
cmp
mov
movs
cmp
mov
stos
xor
mov
xor
mov
or
(bad)
cwde
or
test
xchg
add
mov
push
mov
mov
stos
cmp
popf
xor
cwde
add
mov
call
sbb
pop
add
sbb
test
xchg
je
(bad)
xchg
push
test
xchg
push
xchg
cdq
jp
sbb
add
mov
sbb
cdq
sbb
call
xchg
fwait
sbb
fwait
xchg
xchg
sahf
test
pushf
xchg
xchg
sahf
sbb
lahf
test
xchg
pushf
xchg
popf
sbb
sahf
test
xchg
fwait
xchg
xchg
sahf
test
xchg
call
xchg
popf
sbb
cdq
test
xchg
fwait
sbb
xchg
sbb
mov
aaa
mov
mov
xor
mov
ds
mov
cmp
mov
mov
es
movs
mov
and
mov
mov
and
lods
cmps
mov
daa
scas
movs
mov
daa
lods
cmps
mov
es
mov
cmp
mov
test
xor
mov
xor
mov
aaa
or
or
mov
or
mov
fwait
add
sbb
mov
popf
sbb
test
add
xchg
pop
test
cwde
add
adc
mov
xchg
add
mov
or
(bad)
xchg
or
lea
push
test
cdq
push
test
fwait
add
test
add
xchg
sbb
call
nop
pushf
test
xchg
fwait
xchg
xchg
sahf
test
xchg
lahf
xchg
popf
mov
xchg
sahf
test
xchg
lahf
xchg
xchg
sahf
test
xchg
lahf
xchg
xchg
pushf
xchg
xchg
sahf
test
xchg
lahf
xchg
nop
popf
sbb
sahf
test
xchg
call
xchg
sahf
xchg
sbb
mov
aaa
xor
xor
mov
mov
mov
cmp
movs
mov
and
scas
movs
mov
and
lods
cmps
mov
es
cmps
mov
daa
lods
cmps
mov
es
mov
cmp
mov
test
mov
test
mov
test
xor
mov
xor
or
or
mov
jnp
sbb
mov
fwait
add
sbb
mov
popf
add
xchg
add
mov
cwde
add
adc
xchg
xchg
or
mov
or
mov
or
test
pushf
add
test
add
sbb
call
xchg
fwait
sbb
test
xchg
fwait
xchg
xchg
xchg
xchg
sahf
mov
xchg
sahf
test
xchg
nop
xchg
pushf
xchg
xchg
sahf
test
xchg
nop
xchg
xchg
lahf
test
xchg
nop
xchg
popf
mov
xchg
lahf
test
xchg
nop
xchg
xchg
popf
test
xchg
lahf
xchg
sbb
or
or
mov
xor
mov
xor
mov
mov
cmp
cmps
mov
and
movs
mov
and
movs
mov
daa
lods
cmps
mov
lods
cmps
mov
lods
cmps
mov
cmp
mov
movs
cmp
mov
test
ds
stos
aas
mov
mov
xor
mov
xor
mov
or
xchg
or
lea
jbe
adc
test
cdq
add
sbb
add
test
add
(bad)
xchg
or
mov
or
mov
xchg
push
xchg
xchg
or
mov
or
lea
or
test
fwait
add
test
add
mov
test
xchg
fwait
test
xchg
sahf
test
xchg
fwait
xchg
call
adc
xchg
xchg
fwait
popf
mov
xchg
lahf
xchg
xchg
xchg
xchg
call
adc
sahf
mov
xchg
nop
test
xchg
xchg
xchg
popf
mov
xchg
lahf
test
xchg
nop
call
mov
xchg
stos
or
mov
xor
mov
mov
cmp
mov
and
cmps
mov
lods
mov
mov
cmp
mov
es
mov
cmp
mov
cmps
cmp
mov
cmps
aas
mov
stos
aas
mov
mov
xor
mov
ss
mov
or
mov
or
mov
or
mov
jp
mov
je
sbb
add
(bad)
xchg
or
or
test
jbe
mov
or
mov
or
lea
je
sbb
add
xchg
xchg
sbb
pushf
xchg
xchg
popf
sbb
lahf
xchg
xchg
pushf
mov
xchg
mov
cdq
lahf
mov
xchg
xchg
xchg
fwait
xchg
mov
call
adc
sahf
mov
xchg
nop
xchg
fwait
xchg
mov
cdq
sahf
mov
xchg
nop
xchg
call
adc
xchg
popf
pop
call
add
adc
mov
mov
mov
xor
mov
mov
cmp
cmps
mov
daa
mov
mov
cmp
cmps
mov
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
test
xor
mov
xor
mov
aaa
mov
mov
aaa
or
or
or
mov
xchg
xchg
or
xchg
xchg
or
mov
je
lea
or
mov
xchg
xchg
or
lea
or
mov
or
lea
or
(bad)
call
sbb
test
sbb
fwait
xchg
xchg
popf
xchg
sahf
test
xchg
lahf
xchg
xchg
lahf
mov
cdq
xchg
mov
cwde
xchg
mov
fwait
xchg
xchg
call
adc
xchg
mov
cdq
lahf
mov
xchg
xchg
xchg
call
adc
xchg
mov
cwde
lahf
mov
xchg
xchg
xchg
call
adc
test
add
mov
or
mov
aas
mov
movs
cmp
mov
mov
cmp
mov
movs
cmp
mov
mov
cmp
movs
cmp
mov
movs
cmp
mov
cmps
cmp
mov
stos
ds
stos
ds
mov
xor
mov
mov
xor
scas
or
mov
ss
mov
or
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
xchg
call
sbb
mov
sbb
fwait
test
xchg
fwait
xchg
xchg
popf
mov
lahf
test
xchg
lahf
xchg
xchg
lahf
mov
fwait
xchg
mov
lahf
xchg
mov
call
adc
xchg
xchg
call
adc
xchg
mov
cwde
nop
mov
fwait
xchg
mov
cwde
xchg
mov
call
adc
xchg
add
lea
or
mov
mov
xor
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
cmps
cmp
mov
test
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
ss
mov
aaa
mov
mov
aaa
mov
mov
or
mov
or
xchg
or
nop
aaa
xor
or
mov
or
or
mov
or
mov
jne
sbb
lea
sbb
call
xchg
popf
mov
nop
test
xchg
nop
xchg
popf
mov
xchg
nop
mov
cwde
xchg
mov
lahf
xchg
mov
cwde
xchg
mov
lahf
xchg
mov
call
adc
xchg
mov
lahf
xchg
mov
call
adc
xchg
mov
lahf
popf
test
xchg
cdq
pushf
adc
cdq
add
adc
xchg
lods
or
mov
xor
mov
mov
cmp
mov
movs
cmp
mov
mov
cmp
mov
movs
cmp
mov
cmps
cmp
mov
cmps
cmp
mov
stos
ds
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
aaa
mov
mov
ss
mov
xor
mov
ss
mov
xor
mov
or
mov
aaa
mov
mov
or
mov
or
mov
or
mov
or
sbb
add
xchg
sbb
pushf
mov
xchg
sahf
mov
xchg
nop
xchg
fwait
nop
mov
fwait
popf
mov
xchg
xchg
mov
cwde
xchg
mov
sahf
xchg
lea
lahf
xchg
lea
sahf
xchg
lea
xchg
mov
xchg
mov
sahf
xchg
mov
lahf
xchg
mov
sahf
xchg
mov
lahf
xchg
mov
sahf
xchg
lea
lahf
xchg
mov
sahf
nop
xchg
xchg
fwait
sahf
sbb
test
mov
lods
or
mov
xor
mov
mov
aas
mov
cmps
cmp
mov
cmps
cmp
mov
mov
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
test
mov
test
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
aaa
mov
mov
or
mov
aaa
mov
mov
or
or
mov
or
mov
xchg
xchg
jbe
sbb
test
add
cwde
test
xchg
fwait
test
fwait
lahf
mov
xchg
xchg
xchg
call
adc
xchg
lea
popf
xchg
(bad)
adc
xchg
mov
sahf
xchg
lea
popf
xchg
mov
xchg
mov
popf
xchg
mov
pushf
xchg
(bad)
pop
cwde
xchg
mov
sahf
xchg
lea
popf
xchg
mov
xchg
mov
sahf
xchg
lea
popf
xchg
mov
xchg
mov
sahf
xchg
mov
popf
xchg
mov
popf
sahf
sbb
adc
mov
scas
or
mov
or
mov
xor
mov
xor
mov
xor
movs
cmp
mov
movs
cmp
mov
cmps
cmp
mov
movs
cmp
mov
cmps
cmp
mov
test
mov
test
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
cmps
ds
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
aaa
mov
mov
xor
or
or
mov
or
lea
test
call
sbb
xchg
cwde
add
cdq
test
xchg
fwait
xchg
xchg
popf
mov
cdq
nop
mov
fwait
xchg
xchg
cdq
xchg
mov
cwde
lahf
mov
cwde
xchg
mov
popf
xchg
mov
lahf
xchg
mov
popf
xchg
mov
lahf
xchg
lea
pushf
call
lock
lahf
xchg
mov
call
(bad)
pop
cwde
xchg
mov
popf
xchg
mov
pushf
xchg
(bad)
pop
lahf
xchg
mov
xchg
iret
adc
mov
pop
sub
jmp
mov
mov
mov
mov
xor
sub
add
shl
and
bswap
jmp
nop
mov
shr
add
neg
neg
or
and
jmp
pop
xor
sub
sub
or
or
or
bswap
nop
ror
bswap
bswap
bswap
dec
and
jmp
add
add
not
xor
sub
or
and
add
or
jmp
push
and
or
and
and
and
ror
xor
and
mov
not
jmp
call
or
and
add
or
mov
xchg
add
or
or
mov
jmp
call
or
not
bswap
bswap
or
sub
add
mov
xchg
bswap
xor
or
xor
sub
not
jmp
add
not
xor
add
not
xchg
xor
add
inc
or
ror
xchg
sub
sub
xchg
xor
jmp
mov
xor
or
sub
or
nop
ror
jmp
push
xchg
xchg
mov
sub
sub
sub
add
rol
xor
jmp
mov
neg
not
sub
xor
or
add
sub
add
shl
jmp
push
and
inc
dec
inc
add
mov
and
xor
add
mov
mov
and
or
rol
jmp
nop
xchg
add
xor
rol
and
bswap
mov
sub
sub
jmp
nop
ror
and
add
xchg
or
mov
xchg
xchg
jmp
mov
or
mov
add
not
add
not
not
mov
and
sub
dec
or
jmp
add
mov
xchg
shl
sub
not
jmp
mov
sub
not
neg
dec
add
or
and
or
or
jmp
pop
nop
nop
and
add
sub
mov
jmp
mov
rol
sub
xchg
sub
rol
dec
add
xchg
mov
add
xchg
ror
add
rol
bswap
jmp
mov
sub
sub
and
and
add
xchg
and
jmp
ret
sub
neg
mov
inc
rol
neg
xor
and
neg
not
jmp
mov
sub
xor
and
add
xchg
not
xor
add
ror
and
xchg
xor
add
xor
jmp
push
or
dec
mov
xor
mov
add
not
sub
xor
xchg
dec
xchg
xor
jmp
mov
dec
and
sub
shl
mov
sub
shl
and
jmp
push
shr
add
sub
sub
and
and
xor
xchg
mov
mov
bswap
mov
mov
neg
mov
shl
jmp
ret
inc
or
sub
mov
mov
jmp
push
or
sub
sub
mov
add
add
rol
inc
or
and
and
jmp
pop
shl
shl
rol
add
inc
and
mov
jmp
mov
neg
xor
rol
and
xor
rol
add
xor
xchg
mov
inc
xor
xor
jmp
push
add
mov
mov
add
xor
inc
shl
xchg
jmp
pop
or
or
sub
mov
or
and
mov
add
sub
jmp
mov
xchg
add
and
or
inc
sub
or
mov
jmp
add
shr
inc
sub
sub
mov
add
mov
dec
jmp
push
not
xchg
mov
shl
shl
or
and
neg
mov
shr
xor
jmp
pop
and
sub
or
xor
or
shl
and
shl
and
mov
shl
mov
neg
sub
jmp
push
xor
xor
not
sub
xchg
or
dec
rol
sub
jmp
mov
mov
xchg
shl
add
jmp
add
sub
dec
or
mov
mov
sub
or
add
add
add
or
and
and
sub
add
jmp
pop
or
or
jmp
pop
sub
rol
or
or
and
or
or
or
xor
mov
inc
sub
or
xchg
add
jmp
call
and
xchg
xor
rol
ror
sub
neg
mov
and
jmp
call
dec
and
xchg
add
or
xchg
shr
or
and
shr
sub
or
add
sub
xor
jmp
call
or
or
ror
xchg
ror
add
xor
xchg
not
dec
and
jmp
push
rol
not
xor
mov
or
shr
bswap
xchg
and
shr
not
xor
jmp
push
dec
or
sub
xor
bswap
jmp
mov
mov
not
neg
xor
and
jmp
xor
and
or
xor
add
xor
xchg
neg
sub
xor
jmp
push
sub
mov
ror
and
or
ror
or
jmp
pop
xor
sub
sub
xor
xor
add
and
or
and
mov
rol
xor
add
jmp
cmp
jmp
push
add
xor
xchg
inc
inc
jmp
jne
mov
or
sub
nop
and
xchg
xchg
and
jmp
ret
sub
xor
add
rol
neg
xchg
xor
add
sub
jmp
call
xor
and
sub
add
and
and
sub
or
sub
and
mov
or
mov
add
jmp
add
sub
xor
nop
or
mov
sub
shl
or
add
jmp
rol
sub
nop
dec
sub
sub
and
or
mov
jmp
push
sub
neg
mov
add
or
jmp
pop
or
xchg
shl
shl
xchg
and
xchg
jmp
pop
mov
xchg
and
add
ror
bswap
xchg
mov
dec
mov
jmp
push
xor
or
xor
add
mov
xchg
sub
xor
sub
sub
sub
and
jmp
xor
and
sub
xor
rol
mov
xor
and
and
shl
sub
not
jmp
push
or
or
xchg
bswap
xchg
sub
shr
inc
mov
sub
mov
or
rol
jmp
call
xor
bswap
or
mov
mov
add
ror
or
jmp
mov
not
xchg
xchg
shl
or
or
xor
add
xor
xchg
jmp
mov
sub
mov
ror
sub
sub
jmp
pop
not
or
sub
mov
xchg
mov
ror
or
xor
ror
ror
mov
jmp
push
ror
and
sub
and
or
shl
rol
sub
inc
ror
mov
add
add
xor
or
jmp
mov
bswap
xchg
dec
shr
sub
and
add
or
jmp
pop
or
sub
mov
sub
mov
or
mov
or
mov
inc
sub
sub
xor
and
xor
xor
jmp
mov
xor
xor
or
xor
xor
mov
or
add
xchg
add
mov
mov
jmp
push
or
or
xchg
and
xchg
inc
mov
mov
sub
add
add
jmp
pop
neg
add
xchg
sub
not
shr
mov
add
rol
or
sub
add
xor
or
xor
jmp
mov
bswap
jmp
pop
sub
xchg
xor
and
add
sub
jmp
mov
nop
not
mov
and
sub
xor
bswap
xchg
xchg
jmp
ret
xchg
xchg
add
bswap
add
not
ror
mov
neg
sub
jmp
call
xor
dec
or
mov
add
ror
xchg
xchg
add
xchg
inc
add
or
xor
jmp
mov
or
add
sub
xchg
add
add
add
and
xor
and
add
dec
jmp
mov
xor
mov
and
xor
and
xchg
or
jmp
mov
ror
xor
xor
not
neg
ror
xchg
add
sub
jmp
call
and
mov
or
add
ror
or
jmp
mov
or
mov
ror
xor
xchg
and
add
mov
shl
or
xchg
and
ror
add
jmp
pop
mov
or
bswap
jmp
pop
inc
xchg
dec
sub
add
jmp
pop
or
xchg
rol
mov
or
and
add
not
jmp
mov
sub
xor
xor
neg
mov
sub
bswap
shr
ror
jmp
push
mov
add
xchg
neg
and
or
xor
ror
bswap
jmp
push
and
add
shr
add
and
bswap
and
xor
inc
jmp
pop
and
xchg
or
and
and
xor
xor
add
jmp
xor
shr
shr
neg
rol
mov
or
and
rol
xor
sub
xchg
jmp
mov
add
xchg
dec
and
mov
mov
rol
and
mov
add
sub
or
mov
xchg
mov
jmp
call
and
rol
add
and
sub
not
and
or
or
xchg
or
xchg
xchg
dec
jmp
movzx
rol
and
and
xor
jmp
call
neg
add
ror
xor
and
and
mov
and
add
add
jmp
mov
and
dec
add
add
ror
neg
sub
bswap
shl
bswap
ror
sub
jmp
pop
rol
add
xchg
not
not
xchg
xchg
neg
jmp
push
xchg
mov
not
shl
dec
sub
mov
xchg
jmp
add
sub
neg
add
jmp
push
xor
and
sub
xchg
mov
bswap
or
xchg
add
add
not
and
jmp
mov
xchg
add
mov
mov
or
xor
add
xchg
or
jmp
mov
mov
ror
or
mov
rol
sub
and
xchg
xchg
jmp
push
add
xchg
sub
rol
mov
jmp
rol
xor
mov
nop
add
and
and
or
mov
dec
bswap
mov
jmp
mov
or
xor
mov
shr
xor
add
and
xor
sub
xor
jmp
pop
mov
and
or
or
and
mov
jmp
push
or
xchg
sub
shr
rol
not
xor
shr
not
or
xchg
inc
add
add
jmp
mov
xor
mov
or
xor
bswap
rol
sub
jmp
push
add
xchg
sub
mov
or
xor
and
and
xchg
and
shl
jmp
add
add
add
xchg
and
shr
sub
mov
not
xor
sub
xchg
xor
xchg
xchg
or
jmp
add
xchg
ror
mov
sub
and
mov
xor
mov
mov
jmp
push
add
mov
rol
xor
xchg
and
or
add
rol
xchg
and
jmp
pop
xor
xor
add
mov
mov
shr
dec
rol
jmp
add
or
shr
neg
xchg
add
xor
or
jmp
nop
xchg
mov
and
add
sub
or
dec
or
shl
xor
jmp
push
mov
xor
not
sub
add
add
shr
xor
xor
shr
jmp
push
and
mov
ror
or
xchg
and
inc
shl
add
shr
and
sub
add
jmp
push
or
or
neg
bswap
add
dec
or
jmp
add
and
xchg
and
xor
rol
mov
not
xor
xor
jmp
xor
or
mov
or
or
xor
inc
jmp
add
sub
mov
add
and
add
sub
add
not
xor
sub
jmp
pop
sub
ror
or
mov
add
mov
shr
and
add
sub
xchg
sub
jmp
call
and
xor
or
xor
xchg
mov
mov
shl
xor
jmp
call
and
mov
and
neg
add
sub
add
and
jmp
inc
shl
shr
shr
or
and
add
rol
and
xor
sub
shl
and
xchg
jmp
push
xor
ror
or
mov
and
sub
ror
xor
and
nop
not
jmp
mov
and
xor
mov
and
or
xchg
jmp
mov
add
bswap
not
rol
add
dec
jmp
mov
xor
ror
rol
sub
or
sub
bswap
rol
ror
jmp
call
or
dec
rol
bswap
ror
or
not
rol
mov
and
jmp
pop
mov
add
or
not
dec
dec
mov
or
jmp
rol
mov
add
mov
and
mov
xchg
and
shr
neg
sub
xor
xor
mov
add
jmp
mov
add
xor
or
or
bswap
bswap
and
xchg
dec
xor
neg
sub
or
sub
or
jmp
mov
add
sub
mov
shr
mov
sub
add
xor
inc
or
jmp
pop
add
not
dec
sub
mov
mov
shr
dec
sub
xchg
or
mov
shl
jmp
mov
or
xor
add
not
or
and
xchg
mov
xor
jmp
push
or
rol
or
rol
mov
xor
shl
dec
mov
xchg
jmp
call
bswap
and
and
or
or
ror
xor
sub
jmp
rol
and
sub
inc
mov
jmp
call
xor
and
and
neg
xor
not
xor
add
neg
xor
and
add
not
xor
jmp
jne
xchg
xor
ror
and
and
sub
mov
dec
sub
mov
and
xor
rol
sub
jmp
pop
and
sub
sub
add
xor
xor
add
sub
xchg
inc
sub
jmp
call
xchg
mov
mov
shl
and
mov
and
or
neg
jmp
mov
xor
xor
inc
shr
or
jmp
push
and
xor
xor
jmp
pop
and
mov
sub
ror
xchg
sub
inc
add
or
jmp
push
sub
and
nop
xchg
and
not
add
dec
xchg
xor
and
and
jmp
push
or
and
add
mov
sub
or
add
and
sub
jmp
pop
or
xor
ror
mov
shl
mov
neg
sub
xchg
mov
add
xor
ror
and
or
jmp
pop
mov
or
and
mov
jmp
pop
add
or
inc
mov
mov
mov
ror
xor
jmp
jl
and
or
sub
shr
mov
not
jmp
mov
mov
or
sub
jmp
mov
and
inc
and
xchg
sub
bswap
add
add
sub
mov
jmp
pop
add
bswap
xor
or
xor
neg
sub
xchg
and
xchg
not
jmp
call
xchg
mov
add
or
xchg
or
not
or
jmp
ret
xchg
sub
and
nop
mov
add
bswap
and
add
dec
sub
neg
add
neg
jmp
push
dec
mov
and
xor
neg
and
or
and
jmp
push
sub
mov
or
or
and
xor
and
add
jmp
mov
xchg
mov
mov
mov
rol
sub
sub
and
xor
sub
jmp
cmp
jmp
push
xor
xchg
xchg
sub
add
mov
xor
bswap
neg
jmp
push
or
sub
mov
inc
and
xor
and
add
and
or
shl
or
jmp
pop
mov
sub
and
not
mov
jmp
add
xchg
and
and
and
xchg
and
add
add
xchg
jmp
push
not
xchg
sub
and
sub
jmp
push
sub
or
add
mov
jmp
mov
or
xchg
sub
or
sub
sub
neg
sub
inc
neg
add
or
jmp
pop
xor
and
xor
bswap
shr
mov
and
or
shl
shr
shr
xor
not
jmp
call
not
add
or
add
add
mov
and
xchg
jmp
pop
mov
xor
mov
or
inc
add
or
mov
and
bswap
add
dec
jmp
call
ror
and
neg
rol
or
xor
jmp
push
sub
and
sub
xor
mov
or
or
sub
xor
and
or
jmp
nop
add
add
dec
shl
or
jmp
ret
or
sub
and
add
mov
xor
mov
inc
or
add
jmp
push
and
xchg
add
mov
xchg
not
mov
neg
jmp
ret
or
bswap
rol
sub
inc
dec
xchg
and
xor
jmp
mov
or
or
mov
neg
xor
dec
jmp
sub
not
xor
or
xor
or
add
sub
inc
rol
add
rol
add
shl
add
jmp
pop
or
xchg
mov
bswap
xchg
jmp
ror
sub
dec
sub
dec
mov
inc
add
shr
jmp
push
mov
and
xor
and
or
inc
dec
or
xor
neg
jmp
cmp
jmp
mov
shr
bswap
not
mov
mov
neg
xchg
dec
jmp
pop
mov
not
xor
mov
shr
jmp
mov
and
and
and
shl
sub
or
sub
and
and
and
add
or
and
or
or
jmp
push
bswap
neg
shl
or
sub
sub
xchg
or
ror
add
shl
jmp
add
bswap
sub
xchg
sub
add
add
sub
bswap
sub
jmp
add
sub
mov
xchg
add
add
and
xchg
inc
bswap
jmp
mov
xor
and
bswap
xchg
mov
xor
xchg
jmp
mov
shr
sub
add
add
jmp
call
xchg
add
shr
mov
dec
xor
add
or
jmp
pop
ror
sub
shr
shr
ror
and
ror
mov
mov
shr
xchg
neg
jmp
push
dec
xchg
sub
or
mov
mov
jmp
pop
dec
add
and
not
xor
mov
add
xchg
add
sub
sub
nop
xor
jmp
call
xchg
xor
ror
xor
shl
xor
bswap
xor
or
sub
xchg
add
and
rol
jmp
push
xor
or
xor
bswap
bswap
xchg
or
inc
neg
jmp
rol
xchg
and
shl
or
xchg
xor
xchg
add
bswap
mov
jmp
call
and
xchg
add
sub
xchg
add
neg
shr
rol
or
dec
jmp
pop
and
add
add
not
mov
mov
or
dec
xor
or
jmp
pop
xor
xchg
xchg
add
mov
add
sub
shl
xchg
sub
jmp
add
add
add
and
xor
mov
sub
mov
ror
jmp
pop
inc
inc
mov
mov
xchg
add
jmp
pop
or
shl
add
xchg
xor
mov
add
mov
jmp
xor
or
dec
mov
not
sub
or
sub
xor
and
jmp
push
add
rol
bswap
xor
sub
or
mov
and
shl
ror
or
jmp
pop
sub
xchg
sub
or
shr
sub
and
or
dec
jmp
add
sub
xor
mov
sub
or
bswap
sub
xor
jmp
mov
xchg
sub
bswap
dec
xor
xor
mov
mov
xor
jmp
push
xor
and
inc
sub
and
add
neg
and
or
jmp
ret
rol
not
or
or
mov
or
sub
xchg
jmp
call
not
neg
ror
and
or
ror
shr
sub
jmp
call
sub
rol
xchg
or
mov
not
mov
mov
neg
add
ror
sub
and
xchg
add
jmp
call
xor
add
mov
mov
sub
xor
dec
and
add
jmp
push
xor
mov
sub
sub
sub
add
sub
or
and
sub
xchg
neg
xor
dec
jmp
pop
sub
and
xor
dec
xor
or
sub
inc
jmp
push
mov
shr
sub
jmp
ret
and
bswap
or
jmp
call
and
xor
ror
xchg
not
rol
sub
or
shr
mov
xchg
and
jmp
pop
add
ror
rol
or
xor
and
mov
mov
sub
mov
xor
jmp
pop
sub
xor
not
add
or
dec
sub
and
inc
jmp
xor
sub
add
xchg
dec
xor
sub
jmp
rol
xor
or
add
sub
xor
ror
or
jmp
call
shl
inc
mov
and
xor
xor
jmp
mul
sub
or
shl
neg
or
mov
xchg
jmp
push
and
inc
sub
or
bswap
add
xchg
or
mov
or
jmp
mov
xchg
xor
add
rol
xchg
sub
xor
sub
mov
add
shr
mov
or
rol
jmp
call
or
sub
and
add
xor
mov
ror
mov
dec
xor
xchg
xor
jmp
ret
xchg
sub
xor
add
or
xchg
xor
xor
jmp
mul
or
or
inc
or
or
mov
xor
sub
or
jmp
sub
or
not
or
or
sub
xchg
not
xor
jmp
xor
sub
shl
xor
sub
mov
or
or
dec
jmp
mov
xor
xor
and
dec
xor
mov
jmp
push
xor
xor
or
add
dec
xor
sub
or
or
or
add
jmp
pop
inc
xor
xor
shl
mov
or
mov
xor
shl
jmp
call
sub
xor
and
add
add
bswap
add
or
and
add
jmp
call
sub
mov
add
mov
add
xchg
and
neg
sub
or
xchg
jmp
mov
shl
mov
not
jmp
nop
xor
xchg
and
add
xor
or
not
or
and
jmp
push
or
xor
xor
or
dec
ror
sub
add
or
and
mov
and
jmp
xor
or
mov
dec
or
xchg
inc
mov
xchg
xor
and
neg
jmp
call
and
add
xor
add
dec
or
and
not
sub
sub
sub
or
or
jmp
add
inc
mov
add
or
inc
nop
mov
sub
ror
bswap
dec
jmp
call
and
and
and
neg
add
bswap
xchg
jmp
call
or
mov
bswap
sub
or
xor
and
neg
and
add
jmp
mov
shr
add
mov
rol
sub
not
mov
add
jmp
call
xchg
or
mov
and
inc
add
jmp
pop
sub
not
add
add
inc
sub
jmp
nop
add
xchg
sub
sub
and
or
xchg
xor
and
shl
jmp
push
mov
shr
add
and
mov
xor
or
and
or
jmp
push
or
or
sub
xchg
add
jmp
call
add
xchg
or
xchg
add
xchg
add
add
shl
rol
jmp
pop
xchg
or
mov
and
xor
or
rol
add
or
bswap
jmp
call
dec
or
xor
nop
nop
or
or
xor
add
or
or
jmp
pop
xchg
sub
bswap
jmp
pop
xor
sub
dec
sub
xor
sub
and
add
jmp
mov
mov
xor
xor
dec
or
jmp
add
and
xchg
xchg
sub
or
not
inc
xchg
add
jmp
mov
mov
mov
ror
xor
mov
or
xor
mov
sub
mov
xchg
xchg
ror
jmp
pop
mov
or
xor
dec
dec
xor
dec
not
xor
xchg
and
bswap
shl
jmp
pop
xchg
mov
rol
or
sub
xor
shl
neg
jmp
call
xor
xchg
sub
rol
inc
neg
or
or
sub
jmp
pop
xor
or
or
mov
ror
xor
mov
xchg
or
jmp
mov
mov
xor
sub
sub
sub
dec
dec
and
or
sub
not
jmp
pop
sub
xchg
or
and
and
sub
shr
xchg
jmp
pop
or
neg
mov
sub
sub
or
and
sub
sub
jmp
mov
shl
add
sub
or
or
xchg
rol
xor
add
xchg
jmp
call
nop
sub
bswap
xor
xor
sub
add
shr
xor
mov
jmp
add
add
neg
bswap
neg
xor
mov
inc
or
xor
add
or
or
xor
jmp
mov
xor
and
add
neg
or
xor
xor
shl
mov
jmp
push
xor
mov
xchg
xor
or
neg
neg
add
add
xor
shl
sub
jmp
mov
sub
xor
rol
mov
ror
and
shr
ror
jmp
mov
or
inc
sub
and
add
xor
and
jmp
mov
sub
mov
rol
add
add
sub
bswap
mov
bswap
add
jmp
push
xor
and
dec
sub
or
shr
and
and
and
add
add
xor
add
jmp
mov
bswap
or
add
or
and
shl
jmp
call
and
mov
and
add
dec
mov
xchg
add
neg
inc
mov
mov
jmp
mov
and
xor
dec
shr
shl
and
mov
jmp
call
or
bswap
sub
and
xchg
shr
add
jmp
add
or
bswap
or
mov
add
add
xchg
sub
or
mov
add
add
jmp
pop
and
xchg
add
jmp
nop
xor
dec
sub
jmp
push
and
xor
xchg
mov
add
xchg
mov
neg
ror
jmp
push
and
neg
xor
or
add
and
sub
mov
xor
rol
and
inc
jmp
pop
and
xchg
add
xchg
xor
and
sub
shr
xor
add
sub
xor
or
jmp
push
or
shr
jmp
push
and
or
mov
dec
or
and
rol
dec
or
and
jmp
mov
xor
xor
not
xchg
add
or
xchg
add
nop
or
xor
sub
or
jmp
mov
add
or
xchg
ror
or
jmp
call
or
mov
and
and
mov
add
jmp
call
dec
and
xor
add
xchg
xchg
xchg
and
mov
xchg
jmp
push
xor
or
not
mov
inc
and
inc
xor
add
sub
jmp
pop
xor
or
xor
dec
and
mov
add
xor
and
jmp
inc
dec
mov
ror
or
xchg
add
jmp
mov
xor
inc
and
or
sub
xor
xchg
and
neg
jmp
add
xor
sub
not
add
and
or
sub
dec
neg
xchg
or
xor
xor
jmp
jmp
jmp
jmp
