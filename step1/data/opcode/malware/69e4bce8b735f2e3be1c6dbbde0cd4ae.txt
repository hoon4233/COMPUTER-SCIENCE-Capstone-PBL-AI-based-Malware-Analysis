mov
aaa
sbb
xchg
adc
sbb
push
sbb
dec
sbb
cmps
pop
xchg
adc
sahf
rol
(bad)
aaa
push
or
adc
ins
es
pop
xchg
adc
mov
push
pop
xchg
cwde
pop
jns
cwde
inc
push
sbb
fisubr
jge
cmp
or
out
sbb
push
sbb
fsubrp
mov
loope
and
cmc
mov
pushf
sbb
adc
ficom
inc
add
ror
ja
dec
or
jns
aaa
xchg
jnp
dec
rcl
loope
call
add
dec
xchg
mov
shl
or
neg
or
cwde
inc
push
sbb
(bad)
push
rcr
push
mov
xchg
adc
fwait
loope
adc
aam
jmp
sbb
sbb
xchg
sahf
pop
movs
sbb
(bad)
loope
xchg
es
pop
xchg
adc
rcl
inc
xchg
sbb
pop
xor
ficomp
xchg
cwde
dec
mov
adc
(bad)
rcl
mov
or
inc
cmps
dec
xchg
adc
shr
cwde
sub
push
push
scas
aaa
sahf
and
push
push
aam
daa
ficomp
xchg
dec
inc
add
xchg
pop
iret
dec
xchg
add
imul
jmp
in
loope
adc
sbb
stc
add
jp
loopne
ins
nop
ficom
pop
push
push
sahf
in
dec
rcr
pop
push
aas
ins
in
loope
push
clc
outs
or
js
aaa
ins
inc
test
in
loope
push
pop
je
push
push
push
popf
rcl
adc
push
jp
popa
pop
xchg
nop
ficom
shr
clc
adc
pop
adc
pop
call
sbb
adc
ficom
pop
popf
out
cmps
pop
xchg
adc
mov
nop
out
out
dec
mov
xchg
sti
cmp
xchg
adc
dec
push
push
push
mov
ins
push
pop
adc
sbb
xchg
adc
pop
iret
dec
inc
push
sbb
inc
sahf
adc
xor
xchg
stos
pop
pop
xchg
adc
mov
aas
ficomp
xchg
jns
mov
xchg
adc
mov
ja
pop
xchg
adc
or
div
pmaxub
xchg
jnp
dec
rcl
dec
cmp
ss
pop
xchg
adc
or
jbe
or
adc
cmp
retf
adc
sbb
xchg
jns
xor
cli
aaa
ficomp
xchg
jnp
popf
rcl
test
push
mov
xchg
in
sub
push
push
mov
xchg
call
fisubr
pop
adc
push
ins
pop
call
xchg
adc
sahf
div
fstp
call
jp
addr16
xchg
inc
dec
or
xchg
icebp
sti
fst
push
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
xchg
jbe
xor
mov
imul
movs
mov
call
fidiv
pop
out
mov
ficom
push
rcl
jmp
mov
inc
imul
sub
push
pop
mov
sub
mov
aaa
pop
xchg
adc
mov
mov
xchg
jmp
ficom
call
loopne
das
popf
jns
cmps
xor
call
push
dec
inc
push
pop
ror
ja
repnz
les
icebp
icebp
jb
push
stc
aam
out
call
out
pop
push
loop
clc
adc
xchg
sbb
aaa
xchg
jns
aaa
xchg
in
imul
push
mov
outs
push
pop
sbb
pop
stos
out
das
popf
jns
loope
mov
imul
add
xchg
in
imul
loop
outs
push
pop
sbb
loope
outs
sti
push
stos
out
das
popf
jns
popf
and
imul
push
pop
xchg
clc
adc
push
stc
aam
jecxz
call
fisttp
sbb
dec
or
lods
loopne
into
cs
movs
mov
push
loop
cli
or
pop
xchg
jns
mov
call
fwait
fwait
in
pop
mov
pushw
mov
mov
mov
outs
sti
cmp
xchg
adc
mov
outs
push
pop
fwait
in
pop
mov
rcr
xchg
xchg
fldcw
adc
add
fcmovu
or
neg
or
data16
cmp
lahf
sbb
push
pop
xchg
in
sbb
mul
push
fdivp
out
push
mov
and
(bad)
xlat
jmp
lahf
mov
in
sbb
ins
clc
pop
(bad)
xlat
out
pop
movs
sbb
push
sub
sbb
sub
and
pop
push
sbb
popf
xchg
ins
push
sahf
popa
xchg
adc
stos
shr
ins
push
jmp
sbb
xlat
out
cmc
push
sub
arpl
in
movs
sbb
aam
jmp
aam
nop
(bad)
mov
xchg
out
push
popa
mov
xlat
out
xchg
sbb
in
pop
(bad)
sub
popf
xchg
mov
ins
adc
mov
cwde
pop
movs
sbb
das
lahf
sbb
add
dec
xlat
sahf
(bad)
call
jp
imul
data16
movs
jg
pop
sbb
pop
test
shl
pop
jmp
test
rcl
ficomp
pop
(bad)
sub
sub
in
loope
jns
xchg
stos
jns
xchg
movs
mov
cdq
or
xchg
pop
xchg
in
loope
test
call
xlat
add
lods
push
xchg
sbb
loope
pop
xchg
pop
pop
ins
in
cmc
pop
sbb
aaa
test
rol
leave
fcmovu
or
test
inc
xchg
add
sbb
dec
sbb
aam
cmp
aam
out
das
stos
jns
mul
push
(bad)
out
sbb
sbb
jmp
pushf
imul
sbb
inc
aam
nop
fdivr
pop
sub
stos
int
mov
push
loop
push
and
aam
out
xchg
sbb
dec
inc
push
pop
ror
ja
dec
or
cwde
inc
push
push
push
loop
sti
test
xlat
out
repnz
jns
test
sbb
sbb
jmp
pushf
imul
sbb
inc
aam
nop
fdivr
pop
sub
stos
int
mov
cwd
rcl
xchg
sbb
xchg
imul
dec
inc
xchg
push
inc
xchg
mov
sbb
(bad)
iret
pop
fstp
outs
repnz
test
dec
push
pop
ins
push
cwd
rcl
xchg
stos
jns
xchg
sbb
call
popf
lods
or
push
mov
push
daa
sub
xchg
sbb
fcomp
dec
mov
leave
fcmovu
or
test
inc
dec
(bad)
out
mov
aam
cmp
aam
in
sbb
out
jbe
popa
push
push
or
jecxz
ins
call
sar
rcl
dec
mov
out
loope
ret
mov
mov
loope
adc
cmp
xchg
adc
mov
push
dec
inc
push
pop
ror
ja
dec
or
dec
adc
sub
jmp
movs
sbb
loope
call
fwait
clc
adc
in
add
inc
dec
mov
clc
adc
mov
fcomp
xchg
aad
outs
xchg
call
(bad)
call
call
movs
xchg
jmp
call
push
sub
adc
mov
dec
push
sbb
mov
ins
inc
push
aam
and
aam
cwde
sbb
rcr
mov
int3
dec
inc
sahf
(bad)
call
lds
pop
pop
jmp
jmp
fidiv
xchg
call
neg
jecxz
xor
jp
ins
pop
xchg
call
xchg
and
push
dec
sbb
popf
sbb
push
push
dec
or
retf
in
pop
xchg
jns
aaa
xchg
sahf
pop
lods
ret
cs
adc
xchg
sti
pop
popf
out
xchg
lods
adc
sbb
xchg
cwde
sbb
xchg
push
pop
xchg
adc
setb
das
popf
fwait
enter
call
mov
call
jp
loope
ins
dec
das
popf
int
inc
xchg
push
inc
xchg
mov
xchg
sti
int3
cs
adc
lds
xchg
test
cs
cdq
rcl
loope
xchg
adc
adc
bound
out
xlat
pop
pop
stos
push
adc
leave
pop
pop
xchg
cwde
pop
push
xor
pop
xchg
call
scas
(bad)
lods
pop
xchg
adc
xor
xchg
ins
ins
inc
push
fidiv
adc
fmul
loopne
sbb
lahf
scas
stc
add
pop
cli
in
loope
xchg
sahf
fwait
mov
ins
data16
clc
adc
popa
push
push
rcl
repnz
ins
inc
test
pop
and
sahf
nop
cmp
and
pop
jnp
pop
pop
xchg
call
xlat
out
(bad)
xlat
sbb
gs
inc
add
xlat
out
popf
and
adc
lods
adc
pop
adc
pop
popf
xchg
sub
popf
cmp
lahf
pusha
adc
pop
pop
ins
in
push
pop
out
xchg
test
push
sahf
cdq
rcl
xchg
sbb
sbb
push
push
push
sub
push
push
pop
xor
pop
movs
sbb
das
test
rcr
pop
clc
adc
dec
in
push
add
jae
pop
xchg
in
aam
retf
loope
ins
call
xchg
cwde
pop
movs
sbb
(bad)
adc
pop
pop
pop
push
out
or
jle
xchg
mov
xchg
loopne
(bad)
out
sbb
bound
ds
out
lahf
mov
jo
pop
fwait
shr
cli
(bad)
lods
pop
xchg
jnp
scas
rcl
xchg
sbb
xchg
gs
pop
and
adc
aam
out
xchg
test
xchg
fadd
loopne
sbb
popf
and
imul
ret
in
dec
cld
push
mov
mov
xchg
call
xchg
adc
popf
out
fstp
xlat
pop
pop
ins
in
push
pop
sbb
fs
iret
loope
ins
addr16
jns
inc
pop
xchg
nop
and
and
pop
out
mov
or
call
mov
ins
in
xchg
sahf
sbb
xlat
jmp
fistp
sub
adc
add
dec
xlat
sahf
(bad)
call
lds
movs
xchg
jmp
call
loop
mov
hlt
xchg
sbb
(bad)
xlat
sbb
fadd
push
pop
fwait
enter
push
loop
xchg
adc
aam
stos
add
xchg
adc
mov
push
clc
gs
cmp
adc
icebp
cwde
pop
push
sbb
pop
scas
daa
push
scas
es
adc
pop
sbb
rcl
adc
or
xchg
sti
add
xchg
adc
je
call
xchg
adc
shl
push
push
addr16
imul
push
aam
in
aam
out
call
mov
(bad)
cli
xlat
pop
pop
jns
xchg
movs
mov
jbe
pop
mov
aam
inc
xchg
adc
xchg
pop
daa
scas
out
cmc
dec
sbb
xlat
xchg
and
fs
pop
and
pop
popf
cmp
lahf
call
pop
push
adc
cs
popf
xchg
aas
mov
outs
adc
dec
ins
pushw
xor
jp
outs
pop
xchg
cli
sahf
pop
xchg
adc
sbb
fnstenv
xchg
jns
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
push
jbe
cmp
push
mov
popa
push
pop
sbb
aaa
nop
jns
aaa
xchg
inc
imul
push
(bad)
xlat
sbb
sbb
out
xchg
lahf
clc
adc
mov
data16
fs
xchg
adc
stos
jne
pop
mov
push
not
push
jns
rcl
jecxz
aaa
nop
jnp
scas
rcl
loope
data16
dec
das
xchg
adc
sub
in
sub
leave
fcmovu
or
mul
mov
arpl
pop
rol
dec
inc
inc
adc
add
test
xchg
jecxz
ins
in
push
xor
jp
jno
xchg
call
pop
xlat
loope
ins
inc
not
imul
adc
rcr
pop
sub
std
aam
cmps
loope
ins
call
xchg
jns
mov
addr16
pop
jp
ins
pop
xchg
call
pop
xchg
fisub
pop
call
adc
scas
(bad)
lods
pop
xchg
adc
adc
(bad)
sub
lock
fsub
in
loopne
sbb
xchg
fdiv
loopne
ret
out
rcl
dec
(bad)
stos
in
dec
adc
push
mov
sub
pop
xchg
sahf
fwait
sub
in
pop
xchg
cwde
fwait
mov
sbb
loope
scas
adc
pop
xchg
call
cmp
push
pop
adc
pop
or
adc
mov
rcl
dec
(bad)
stos
in
dec
and
push
sbb
sub
mov
fisub
imul
ficom
xchg
call
loope
dec
and
aam
cwde
fwait
xchg
ins
in
loope
(bad)
mov
jg
xchg
adc
mov
rcl
dec
(bad)
stos
in
dec
and
push
loop
push
sbb
js
adc
cmp
scas
mov
push
push
out
pop
xchg
xchg
mov
pop
popf
xchg
adc
xchg
adc
xchg
in
pop
xchg
sahf
fwait
mov
jp
call
push
sbb
js
das
mov
cmc
std
rcl
push
and
in
and
push
mov
cmp
loopne
rol
fsubr
loopne
ret
in
rcl
imul
push
pop
adc
pop
mov
sbb
mov
mov
pop
sub
dec
pop
xchg
in
aam
mov
mov
scas
arpl
pop
xchg
adc
fadd
adc
popa
push
push
xor
jp
call
push
scas
in
loope
xchg
cmp
xchg
jnp
scas
rcl
xchg
loopne
in
loopne
(bad)
stos
ins
in
popf
cdq
sahf
cs
xchg
adc
push
xchg
mov
ins
in
pop
pop
xchg
adc
sahf
clc
adc
pusha
push
push
xor
jp
jmp
ins
nop
ficom
in
loope
xchg
cmp
xchg
jnp
scas
rcl
xchg
loopne
in
loopne
(bad)
test
in
popf
cdq
sahf
cs
xchg
adc
push
xchg
mov
ins
in
pop
pop
xchg
adc
retf
in
pop
xchg
jnp
in
rcl
div
addr16
loope
push
pop
and
mov
pop
xor
pop
scas
jecxz
ins
in
dec
mov
out
mov
ins
in
push
pop
out
(bad)
ds
loopne
xchg
adc
pop
clc
adc
pusha
push
push
xor
jp
jmp
ins
nop
ficom
in
loope
xchg
cmp
xchg
jnp
scas
rcl
xchg
loopne
in
loopne
(bad)
test
in
popf
cdq
sahf
cs
xchg
adc
push
xchg
mov
ins
in
pop
pop
xchg
adc
pop
clc
adc
pusha
push
push
xor
jp
jmp
ins
nop
ficom
in
loope
xchg
addr16
pop
mov
push
pop
xchg
jns
xor
cli
inc
scas
sbb
sti
jecxz
ins
in
popf
cdq
sahf
cs
xchg
adc
push
xchg
mov
ins
in
pop
pop
xchg
adc
mov
pop
xchg
jnp
in
rcl
test
pop
and
(bad)
jns
xor
pop
scas
jecxz
ins
in
dec
mov
out
mov
ins
in
push
pop
out
je
cli
mov
pop
xchg
sahf
mov
or
jmp
in
loope
xchg
addr16
pop
mov
push
pop
xchg
stos
push
ja
adc
mov
ins
in
xchg
sahf
adc
push
aaa
xchg
jnp
scas
rcl
jbe
and
mov
out
mov
ins
in
push
pop
out
je
cli
arpl
pop
xchg
jnp
in
rcl
not
push
pop
and
cwde
aam
icebp
ins
in
loope
xchg
adc
fcom
pop
pop
xchg
nop
mov
pop
out
fcomp
xlat
pop
pop
xchg
sahf
fwait
mov
jp
in
ins
dec
cmc
dec
push
push
push
rcl
pop
cld
(bad)
mov
ficomp
xchg
xchg
cmc
nop
xchg
adc
fwait
pop
out
loope
ins
adc
je
adc
aam
and
aam
call
pop
retf
loope
ins
inc
xchg
fmul
loopne
ret
mov
outs
sbb
push
pop
in
sbb
sahf
fwait
in
in
loope
sbb
dec
(bad)
stos
in
dec
jge
push
loop
push
aaa
pop
pop
xchg
sbb
push
pop
fcomp
pop
xchg
nop
mov
pop
sbb
aaa
test
rcr
mov
ins
in
loope
popf
popf
mov
jmp
adc
stos
jno
fwait
shr
loope
push
jne
fdiv
in
loopne
test
(bad)
cmp
loopne
xchg
adc
pop
pop
xchg
mov
pop
mov
mov
dec
in
loopne
ret
mov
mov
xchg
retf
in
dec
xor
sbb
dec
(bad)
stos
in
or
adc
pop
sbb
push
push
sbb
sbb
ret
loope
ins
inc
xchg
fadd
loopne
ret
mov
xchg
call
sbb
xchg
sahf
adc
pop
popf
xchg
pop
pop
xchg
adc
mov
ins
in
loope
sbb
loope
stos
call
pop
adc
pop
adc
(bad)
or
xchg
mul
pop
iret
loope
ins
inc
xchg
gs
inc
es
out
xchg
test
outs
loop
popf
xchg
aam
xchg
adc
pop
pop
xchg
cli
mov
pop
sti
loope
ins
inc
xchg
gs
inc
cmp
xlat
out
pop
popf
popf
xchg
je
xchg
adc
pop
adc
push
mov
ins
jnp
in
rcl
xchg
fsubr
loopne
ret
xor
nop
mov
pop
jnp
sbb
mov
jge
pop
sbb
aaa
test
shl
call
pop
xchg
jecxz
ins
in
dec
xor
pop
xchg
jecxz
ins
in
dec
mov
jge
pop
adc
or
dec
adc
aam
jne
fadd
in
loopne
nop
adc
mov
ins
in
xchg
fdiv
in
loopne
ret
int
in
loope
jle
xchg
mov
xchg
loopne
shl
and
ins
nop
repnz
sbb
cmps
pop
xchg
adc
scas
aaa
cwde
mov
or
sub
or
retf
pop
test
rcr
fsub
adc
pop
adc
push
aam
adc
aam
sahf
fwait
cmc
ins
in
loope
cli
mov
fwait
std
ins
in
loope
sbb
loope
scas
adc
pop
xchg
call
movs
adc
pop
adc
addps
in
loopne
ret
cmc
ins
in
loope
sbb
loope
(bad)
call
push
mov
mov
dec
adc
pop
clc
adc
sar
adc
add
retf
aaa
test
rcr
test
sar
pop
imul
ins
adc
(bad)
pop
mov
(bad)
loope
pop
fwait
loope
ins
inc
xchg
call
adc
push
aam
stos
sbb
adc
clc
pop
cmps
data16
sbb
pop
popa
mov
loopne
in
loopne
lds
xchg
sbb
(bad)
ins
dec
call
pop
jbe
pop
xchg
nop
mov
pop
pop
xchg
xchg
mov
or
pop
pop
sbb
dec
(bad)
stos
in
or
adc
pop
sbb
fdivr
or
sbb
push
pop
add
mov
pop
popf
xchg
pop
pop
xchg
adc
mov
daa
out
mov
ins
in
loope
sbb
loope
mov
pop
mov
sbb
popf
and
adc
dec
adc
pop
hlt
nop
mov
push
popf
xchg
rcr
adc
mov
xchg
adc
rcl
jp
mov
loop
loopne
jp
in
mov
sbb
pop
aam
ja
mov
dec
call
ins
adc
fstp
xchg
out
mov
xchg
adc
sahf
clc
pop
loope
ds
loopne
pop
xchg
jecxz
ins
in
dec
xor
pop
xchg
jecxz
ins
in
dec
mov
jg
pop
adc
or
pop
out
loope
ins
nop
(bad)
mov
xchg
out
pop
jmp
mov
ins
out
loope
pop
jp
mov
push
loopne
pop
xchg
sbb
jp
jb
xchg
nop
ficom
retf
aaa
test
shl
xchg
jecxz
ins
in
dec
xor
pop
xchg
jecxz
ins
in
dec
mov
jg
pop
adc
push
aam
and
aam
nop
mov
pop
out
xchg
fcomp
in
loopne
ret
mov
ds
loopne
sbb
daa
fdivr
in
loopne
popf
xchg
or
ins
in
xchg
fdivr
in
loopne
ret
mov
gs
fcomp
in
loopne
sbb
xchg
fdiv
in
loopne
ret
mov
jle
loopne
sbb
daa
fdivr
loopne
popf
xchg
shl
in
loopne
xchg
sbb
ins
adc
pop
sbb
dec
(bad)
mov
scas
into
mov
sahf
cwde
fwait
lea
loope
sbb
loope
call
fisubr
(bad)
loope
ins
adc
sbb
dec
(bad)
mov
xchg
(bad)
mov
mov
xchg
ret
in
dec
(bad)
mov
retf
aaa
test
rcl
mov
les
mul
fs
loope
int3
dec
xlat
sahf
(bad)
call
rcl
jbe
adc
xor
push
pop
xchg
inc
jp
mov
push
pop
xchg
nop
repnz
rol
idiv
fstp
jbe
je
lea
das
mov
xlat
out
push
pop
xchg
adc
pop
ins
call
xchg
sti
mov
xchg
adc
stos
ins
in
popf
pusha
push
xlat
pop
pop
xchg
data16
fcomp
pop
mov
pop
aam
mov
jns
fstp
jb
push
pop
xchg
cwde
pop
mov
push
push
ret
jle
(bad)
out
iret
xchg
movs
gs
xchg
sbb
arpl
setb
mov
push
loop
ins
in
loope
int3
dec
(bad)
(bad)
xlat
jecxz
(bad)
xchg
adc
pop
add
fcomp
inc
dec
loop
cs
dec
sbb
das
movs
sbb
jbe
push
push
push
aaa
xchg
jns
xor
clc
adc
lock
xchg
call
xchg
call
int3
ror
ja
bnd
inc
xchg
add
sub
sbb
fbld
xchg
call
xchg
adc
sbb
fild
push
repnz
mov
(bad)
call
xchg
sbb
fstp
mov
push
pop
push
push
pop
hlt
rcl
sbb
adc
call
mov
sbb
push
sbb
into
nop
adc
pusha
ins
adc
pop
popf
pushf
xchg
pop
xchg
adc
jns
xchg
pop
xchg
xchg
adc
push
push
sbb
xchg
in
sbb
push
xchg
and
xchg
adc
sbb
pop
xchg
sub
pop
xchg
adc
pop
shl
sbb
xchg
pop
pop
xchg
adc
pop
sar
adc
jle
pop
pop
xchg
push
repnz
cmc
pop
ins
push
repnz
cmps
stos
in
push
stos
jae
pop
mov
shl
dec
nop
adc
mov
xchg
cli
adc
adc
pop
jmp
repnz
push
sub
adc
pop
sub
sbb
in
aam
sti
xchg
pushf
adc
push
repnz
push
std
sar
mov
mov
mov
ins
push
cli
ds
xchg
adc
pop
adc
push
repnz
sbb
push
push
repnz
push
sub
adc
pop
adc
mov
push
mov
hlt
rcl
mov
mov
in
loope
fs
push
repnz
pop
sub
adc
pop
adc
pusha
add
mov
sbb
xchg
adc
aam
adc
aam
cli
mov
ins
in
call
pop
nop
sbb
cli
mov
push
mov
ins
pop
call
xchg
adc
pop
xchg
cli
bound
jmp
repnz
lahf
mov
outs
push
pop
adc
push
repnz
pop
mov
adc
pop
xor
mov
xchg
adc
gs
and
pop
gs
sbb
(bad)
lahf
or
mov
jle
pop
pop
adc
sbb
xchg
sub
pop
xchg
adc
pop
xchg
sbb
pop
xchg
adc
pop
xchg
sub
pop
xchg
adc
pop
jmp
repnz
sbb
xor
push
pop
adc
in
xchg
adc
pop
xchg
cli
mov
adc
popf
jnp
pop
pop
xchg
xchg
adc
push
push
jge
fistp
xchg
sbb
xchg
lods
aam
push
inc
mov
sbb
push
outs
dec
fisubr
popa
pop
ins
aaa
fwait
leave
pop
push
push
pusha
adc
push
pop
out
push
and
test
cmp
push
aad
pop
adc
push
repnz
pop
mov
in
sbb
cmps
mov
lock
pop
pop
stos
mov
loope
stos
mov
das
xchg
sbb
sahf
push
mov
ins
push
cli
jbe
xchg
adc
stos
jae
pop
sbb
xlat
pop
pop
fs
push
repnz
pop
push
push
fstp
pop
xchg
call
and
aam
adc
aam
sbb
pop
loop
pop
pop
mov
push
pop
xchg
fwait
pop
scas
popf
movs
sbb
jb
xchg
sbb
test
popa
ficomp
adc
fstp
outs
in
sbb
call
ins
xchg
adc
jmp
loopne
fst
mov
hlt
rcl
pop
pop
call
hlt
rcl
sbb
xchg
inc
fucomp
loope
sub
nop
sbb
push
push
pop
jns
sahf
and
imul
push
repnz
sahf
in
sbb
pop
gs
sbb
(bad)
bound
pop
xor
mov
xchg
sbb
pop
jbe
pop
pop
adc
sbb
xlat
loope
and
imul
in
pop
out
popf
pop
call
(bad)
xchg
adc
fidiv
adc
inc
sbb
pop
(bad)
xchg
mov
aad
push
es
rcl
loope
sahf
mov
pop
xor
mov
push
xor
das
dec
call
sbb
popf
js
mov
pop
xchg
clc
push
aam
push
xchg
dec
sahf
mov
pop
sbb
xchg
pop
xchg
sbb
push
push
cld
stos
mov
adc
rcl
ins
xchg
cwd
rcl
xchg
lods
mov
push
push
ins
push
push
cmc
pop
sbb
pop
xchg
sbb
inc
push
pop
ror
sub
call
xchg
imul
xchg
jnp
xchg
rcl
neg
jnp
xchg
rcl
dec
mov
jb
pop
xor
pop
xchg
call
mov
sti
test
xchg
adc
xor
(bad)
sti
mov
test
fstp
pop
pop
(bad)
sti
mov
adc
aam
adc
aam
jnp
xchg
rcl
dec
mov
jb
pop
xor
pop
xchg
dec
inc
sahf
(bad)
call
lds
xchg
test
push
cwd
rcl
jbe
pop
push
push
rcl
mov
scas
pop
xchg
aam
mov
adc
pop
adc
xlat
push
jle
xchg
sbb
call
xchg
adc
fdivp
jmp
aam
adc
aam
nop
jnp
xchg
in
sbb
test
push
pop
gs
sbb
call
xlat
retf
pop
pop
xchg
adc
stos
jno
pop
leave
sbb
fstp
dec
adc
pop
xchg
sahf
sbb
xlat
repz
jmp
pop
xchg
adc
fdivr
and
jmp
adc
pop
sbb
das
test
rcl
lea
push
push
pop
xchg
loopne
rcl
sti
dec
xor
pop
push
cli
or
rcl
cmps
jl
adc
stos
jno
pop
int
rcl
pop
pop
push
mov
pop
clc
pop
je
ins
data16
mov
jo
pop
pop
push
mov
rcl
mov
cld
ds
adc
pop
jmp
sub
jns
aaa
xchg
jns
aaa
xchg
in
imul
call
out
imul
adc
mov
xchg
sahf
pop
mov
in
imul
push
cli
or
rcl
xchg
sbb
pop
aam
in
aam
lahf
xchg
sahf
int
inc
xchg
push
inc
xchg
mov
xlat
out
adc
sub
pop
mov
div
xchg
sbb
pop
mov
xlat
jecxz
adc
jbe
pop
mov
call
clc
adc
sbb
loope
push
push
rcl
out
aaa
ins
in
imul
repnz
xchg
sbb
adc
pop
aas
push
pop
gs
aam
retf
xchg
sbb
fisttp
sbb
dec
loop
sbb
sbb
pop
movs
sbb
loope
jmp
aaa
ins
in
or
push
push
fcom
pop
pop
xchg
dec
inc
sahf
(bad)
call
lds
adc
xchg
and
push
and
and
adc
pop
out
adc
(bad)
and
pusha
ins
adc
pop
out
adc
(bad)
and
pusha
ins
adc
pop
out
adc
(bad)
and
pusha
ins
adc
pop
out
adc
(bad)
and
pusha
ins
adc
pop
popf
xchg
adc
xchg
adc
pop
xchg
cdq
or
pop
es
xlat
in
push
push
and
loope
and
sbb
pop
push
push
push
and
and
fwait
retf
push
aam
pop
adc
xchg
xchg
pop
xchg
adc
push
and
or
gs
nop
hlt
pop
popf
movs
or
shr
sbb
popf
mov
sbb
pop
xchg
neg
adc
popf
movs
pop
mov
xchg
push
jae
rcl
dec
mov
dec
push
pop
popf
movs
dec
mov
xchg
enter
dec
or
xchg
call
mov
pop
cmps
adc
sbb
pop
movs
adc
sbb
xlat
out
sbb
adc
fidivr
xchg
or
or
adc
pop
jns
adc
xlat
in
jne
xchg
pop
pop
xchg
addr16
xlat
in
pop
mov
in
loope
ins
push
cwd
rcl
sahf
popa
lods
pop
imul
jmp
(bad)
call
xchg
pop
imul
xchg
and
sub
push
neg
movs
sbb
jnp
dec
scas
lods
push
pop
xchg
addr16
pop
adc
sbb
add
push
rol
sub
fidivr
popf
popf
xchg
call
adc
and
jbe
movs
ficom
inc
aam
nop
neg
das
sbb
inc
xchg
movs
adc
sbb
sub
call
xchg
adc
push
sub
adc
adc
loope
mov
pop
cmps
adc
sbb
(bad)
fidivr
xchg
sbb
pop
dec
pop
push
sbb
mov
cwde
dec
movs
sbb
sbb
push
(bad)
call
out
xchg
movs
adc
sbb
scas
adc
out
jp
sahf
popa
xchg
adc
sbb
popf
mov
sbb
pop
xchg
das
and
pushf
cs
xchg
adc
scas
in
push
pop
xchg
pushw
mov
dec
push
pop
sbb
rol
add
pop
push
pop
or
push
sbb
in
push
pop
xchg
adc
fbld
dec
inc
xchg
push
inc
xchg
mov
les
jmp
mov
and
mov
xchg
and
popw
sbb
in
neg
adc
adc
neg
adc
aam
pop
push
mov
sub
sub
neg
adc
and
and
push
pushf
jo
xchg
popa
xchg
mov
aam
adc
or
ins
dec
loope
jmp
inc
scas
sti
push
pop
xchg
cmp
adc
pop
out
popf
cmp
cmc
push
sbb
sbb
pop
sbb
sbb
xor
xlat
out
ins
mov
xor
pop
lea
add
xchg
sbb
in
pop
dec
cmp
aam
adc
pop
inc
call
sbb
aam
adc
pop
xor
fisubr
ins
(bad)
adc
loope
pusha
adc
je
call
jp
xchg
sbb
sbb
sahf
pop
inc
xchg
cwde
dec
movs
sbb
loope
jmp
je
sahf
dec
inc
xchg
adc
fidivr
xchg
sbb
sbb
adc
push
les
or
daa
or
pop
push
push
mov
out
loope
adc
adc
int3
dec
xlat
sahf
(bad)
call
jp
inc
pop
xchg
inc
dec
or
out
ins
aad
mov
jp
inc
pop
xchg
cs
pop
xchg
xchg
ins
pop
push
xchg
std
sub
fwait
pop
loopne
mov
jmp
mov
out
adc
pop
loopne
mov
neg
pop
pop
xchg
addr16
das
lock
movs
fwait
scas
jge
loope
scas
push
jp
rcl
sbb
nop
clc
inc
push
and
in
mov
in
xchg
enter
mov
sahf
push
and
jle
push
pop
sbb
xchg
pop
pop
inc
mov
xchg
sbb
enter
mov
sahf
push
cld
xchg
rcl
dec
pushf
jo
xchg
enter
mov
cmp
mov
dec
push
pop
sbb
xchg
pop
xchg
mov
scas
jge
loope
popf
movs
fwait
scas
jge
loope
push
or
aad
xchg
adc
fcomp
in
loope
push
xchg
in
mov
in
push
push
and
in
mov
in
fistp
mov
pop
pop
xchg
sbb
(bad)
xchg
adc
push
and
in
mov
in
fistp
ret
pop
sbb
loope
jmp
sub
push
push
test
pop
xchg
sti
sub
int3
loope
ins
push
cwd
rcl
xchg
enter
mov
test
std
dec
sbb
sbb
push
push
aam
out
mov
mov
push
dec
xchg
adc
bound
pop
sbb
popf
stos
xchg
sar
pop
sbb
loope
adc
push
dec
xchg
adc
mov
push
int
mov
xchg
adc
pop
jmp
mov
in
push
mov
adc
pop
cli
in
loope
xchg
in
stos
mov
in
loope
daa
retf
shl
in
popf
cdq
sahf
call
adc
push
(bad)
setae
mov
ins
call
nop
adc
sbb
movs
fidiv
jmp
ins
popw
sbb
in
push
pop
xchg
adc
in
loope
xchg
adc
retf
sbb
adc
aam
xchg
shl
adc
pop
xchg
xchg
in
bound
push
sub
imul
dec
lahf
fdivr
loope
xchg
adc
pop
sbb
xor
pop
push
mov
ins
in
loope
xchg
imul
xchg
in
stos
test
loope
out
dec
push
pop
jnp
sbb
enter
mov
xchg
ds
rcl
xchg
enter
mov
ins
in
push
(bad)
pop
out
mov
sbb
fbstp
pop
loop
sahf
add
mov
jge
loope
jo
xchg
test
sbb
jae
sbb
fstp
cld
loope
adc
push
pop
xchg
adc
push
cwd
rcl
sahf
loopne
int3
loope
xchg
inc
xor
jp
inc
pop
xchg
call
push
adc
pop
scas
adc
pop
sbb
popf
lahf
jmp
mov
dec
in
loope
pop
mov
mov
xchg
adc
mov
ins
in
xchg
enter
mov
add
loope
sbb
xchg
fadd
loope
sbb
je
pop
xchg
cmps
sub
mov
ins
sti
mov
fadd
loope
stos
xchg
mov
push
sbb
xchg
fsub
int3
loope
xchg
xchg
ret
in
sahf
loopne
int3
loope
xchg
fnsavew
clc
adc
mov
sbb
fbstp
xchg
adc
mov
ins
clc
test
xchg
sbb
enter
mov
pop
iret
shl
in
loope
sahf
push
cs
rcl
adc
pop
loopne
mov
sbb
or
push
push
aam
out
mov
xchg
adc
dec
push
pop
sbb
pop
popf
popf
xchg
jle
xchg
adc
fldcw
xchg
jmp
neg
adc
adc
pop
popf
xchg
and
test
out
mov
xchg
adc
pop
adc
loope
(bad)
adc
aam
test
dec
pop
adc
sbb
daa
test
adc
mov
adc
aam
nop
neg
sub
sub
pop
sahf
gs
data16
bound
push
sub
push
cwd
rcl
adc
pop
mov
mov
sbb
loope
pop
mov
mov
xchg
neg
adc
sbb
sub
push
fidivr
xchg
sbb
int3
loope
jns
xchg
stos
jns
xchg
fsub
loope
xchg
jmp
lods
sbb
dec
aad
mov
das
jnp
mov
dec
in
loope
popf
movs
mov
dec
in
loope
jo
xchg
loope
mov
mov
adc
and
push
pop
out
sahf
popa
scas
adc
pop
xchg
adc
adc
and
adc
pop
out
sahf
popa
scas
pop
push
pop
xchg
adc
adc
and
adc
pop
out
pop
mov
sbb
fdiv
int
mov
adc
pop
out
adc
pop
loopne
mov
dec
int3
loope
ins
cmps
retf
in
imul
imul
ficom
sahf
loopne
int3
loope
xchg
addr16
fidiv
out
mov
data16
loope
push
icebp
sbb
dec
shl
pop
push
repnz
fucomip
xchg
fld
call
ins
in
lahf
loopne
cld
loope
xchg
pop
push
pop
loopne
loope
jmp
mov
jge
loope
popf
movs
fwait
scas
jge
loope
push
or
aad
xchg
adc
fdivr
dec
inc
xchg
push
inc
xchg
mov
les
call
and
adc
fwait
xlat
call
xchg
push
sub
push
pop
xchg
loopne
(bad)
xlat
out
xchg
lahf
xchg
rcl
test
es
nop
rcl
cmps
push
xchg
adc
scas
ss
arpl
adc
scas
ss
pop
mov
sbb
(bad)
xchg
pop
cmps
xchg
xchg
jae
ror
push
pop
push
push
in
jns
xchg
pop
popf
movs
dec
cmps
test
or
imul
in
adc
dec
loopne
lahf
sbb
aas
pop
xchg
aad
movs
xchg
cli
scas
pop
xchg
adc
test
or
xchg
adc
pop
xchg
xchg
pop
cmps
xchg
sbb
push
xchg
ficomp
adc
popf
movs
pop
pop
mov
push
pop
xchg
nop
out
out
sahf
sbb
xchg
sbb
fsubr
dec
mov
sbb
popf
mov
out
popf
cmps
xchg
popw
fisubr
arpl
push
in
popf
movs
pop
pop
fs
pop
popf
out
popf
mov
out
sahf
sbb
xchg
sbb
fsubr
dec
mov
mov
push
pop
xchg
cs
pop
xchg
adc
adc
pop
adc
inc
hlt
adc
push
and
and
cwde
in
pop
stos
data16
xlat
call
pop
fucomp
jmp
ins
aad
movs
xchg
clc
or
xchg
sbb
or
pop
dec
inc
data16
xlat
call
pop
movs
xchg
xchg
arpl
xlat
out
xchg
sbb
pop
xchg
gs
aam
xlat
xchg
sbb
test
scas
nop
push
pop
xchg
data16
xlat
call
in
int3
dec
xlat
sahf
(bad)
call
sbb
out
jp
sub
retf
jmp
aam
jnp
pop
xchg
adc
xchg
sti
xor
xchg
adc
sbb
out
xchg
call
imul
sub
sbb
adc
pop
and
ins
add
sbb
aam
dec
inc
push
pop
ror
ja
sbb
adc
pusha
rcl
or
lods
rol
(bad)
pop
xchg
movs
gs
xchg
fsubr
loope
sbb
lahf
stos
repnz
adc
ins
pushw
rcl
adc
mov
retf
rcl
adc
mov
xchg
adc
ficom
xchg
movs
mov
in
movs
mov
dec
xlat
sahf
(bad)
call
fcom
push
aaa
xchg
jns
mov
jp
dec
pop
xchg
dec
inc
sahf
(bad)
call
lds
movs
mov
adc
xchg
adc
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
xchg
loope
call
fwait
adc
loope
test
sbb
xlat
pop
popf
jge
xchg
icebp
cmp
clc
jge
xchg
inc
test
push
aam
stos
(bad)
jmp
aam
call
sar
ror
xchg
adc
pop
push
fnstenv
xchg
nop
arpl
addr16
(bad)
xlat
pop
xchg
sbb
sbb
xlat
jmp
sbb
imul
sti
int3
push
xchg
adc
inc
push
pop
sbb
mov
call
sbb
inc
add
fcmovu
or
test
inc
mov
fcom
cmp
jns
xor
clc
pop
je
clc
adc
xchg
adc
mov
rcl
aam
call
ins
in
imul
cmc
or
adc
adc
sbb
pop
adc
inc
xor
call
scas
adc
sub
fnsave
xchg
sahf
dec
mov
sahf
inc
not
xchg
sahf
pop
mov
mov
pop
pop
(bad)
sti
movs
push
xchg
adc
retf
pop
adc
ins
pop
xchg
adc
add
dec
xlat
sahf
(bad)
call
add
or
movs
sbb
cmps
gs
adc
stos
jne
pop
movs
sbb
je
cli
xchg
push
pop
xchg
jns
aaa
xchg
jns
xor
ins
pushw
mov
inc
push
pop
sbb
popf
mov
push
clc
sub
aaa
xchg
inc
div
and
aam
jns
rcl
out
dec
mov
sahf
inc
mul
adc
or
dec
pop
xchg
call
push
push
inc
add
dec
aam
inc
dec
or
cwde
imul
loop
hlt
push
add
xlat
out
push
xchg
push
loop
push
adc
aam
out
das
mov
xchg
sub
arpl
out
mov
pusha
push
push
mov
inc
push
pop
cli
sub
pop
xchg
sti
js
xchg
adc
mov
sbb
pop
mov
push
ret
pop
adc
push
push
test
cwde
pop
mov
sbb
ins
ins
clc
adc
sub
push
and
or
cmp
pop
xchg
sti
add
xchg
adc
push
pop
ror
ja
dec
push
les
call
sub
outs
pop
in
push
push
pop
gs
aam
jmp
sbb
and
mov
adc
add
in
cmc
dec
popf
movs
sbb
jnp
scas
rcl
test
sbb
gs
neg
(bad)
out
and
adc
pusha
push
push
mov
inc
push
pop
retf
dec
inc
push
pop
ror
ja
repnz
rol
fisttp
sub
pop
xchg
in
aam
iret
xchg
sahf
hlt
aam
mov
jle
popf
cmp
popf
cmp
xchg
and
sub
pop
push
push
in
adc
pop
popa
mov
scas
adc
adc
pop
out
js
xlat
icebp
push
pop
sbb
push
and
in
cmc
je
loopne
push
xchg
adc
jmp
in
adc
(bad)
push
out
ficom
pop
sbb
arpl
(bad)
call
dec
and
aam
xchg
jae
xchg
xchg
arpl
xlat
pop
adc
rcl
xchg
sbb
aam
adc
aam
sbb
sbb
sbb
adc
adc
pop
out
popf
xor
cmps
mov
jno
pop
test
rcr
and
xchg
sub
push
pop
xchg
in
aam
retf
xchg
sahf
sbb
push
and
sbb
dec
mov
adc
pop
popf
movs
dec
mov
xlat
not
jbe
call
jmp
retf
not
sbb
popf
movs
dec
pop
mov
icebp
adc
push
adc
sub
std
aam
ret
xchg
sahf
sbb
push
and
sbb
jmp
cli
(bad)
xlat
div
pop
sbb
das
test
rol
leave
fcmovu
cmp
add
mov
into
sbb
stos
ins
cmp
push
or
add
mov
add
int
or
add
int
or
add
(bad)
int
or
add
mov
push
pop
pop
add
mov
push
or
add
mov
add
mov
mov
add
int
or
add
xchg
out
loope
repnz
xchg
adc
pop
retf
int
sbb
lods
push
push
int
add
sbb
add
sbb
add
mov
mov
sbb
stos
fmul
mov
or
add
mov
out
mov
add
mov
cmc
cli
lods
pop
outs
in
push
dec
rcl
inc
int3
rcl
ins
cmp
rcl
out
rcl
push
sbb
jg
cmp
add
mov
xchg
or
add
mov
add
int
or
add
mov
mov
add
int3
int
or
add
mov
add
mov
add
mov
mov
add
out
add
mov
add
mov
push
mov
add
int
or
add
mov
mov
add
int3
int
or
add
mov
add
mov
add
mov
mov
add
out
add
mov
add
int
or
ins
rcr
or
neg
or
push
adc
sbb
out
cmp
sbb
pop
test
shr
stos
sbb
aaa
test
sar
xlat
out
pop
jnp
push
pop
xchg
xchg
cmc
pop
(bad)
adc
(bad)
xlat
sbb
lods
ret
stos
ins
in
inc
aam
fwait
dec
mov
out
fcomp
ins
adc
ja
and
pop
xchg
call
xchg
lods
sbb
adc
jmp
in
xchg
movs
mov
call
imul
sbb
arpl
ins
imul
adc
sbb
ins
cmp
aad
cwde
pop
push
popf
movs
sbb
icebp
push
pop
xchg
movq
sbb
lods
rcr
dec
popf
movs
push
mov
adc
inc
sub
adc
sbb
xchg
sahf
pop
stos
ret
or
xlat
in
dec
(bad)
xlat
sbb
lods
ret
stos
popf
movs
dec
mov
out
push
pop
sbb
aaa
test
shl
push
call
pop
bound
add
adc
ficom
xchg
test
xchg
sbb
fstp
push
adc
adc
xlat
pop
push
fs
sbb
push
ins
in
loope
int3
dec
xlat
sahf
(bad)
call
lds
lahf
mov
sbb
pop
jp
dec
pop
xchg
test
dec
aam
in
pop
pop
shl
push
push
jmp
sbb
xchg
or
out
je
call
xchg
adc
mov
adc
aam
and
aam
sahf
pop
mov
jp
out
ins
nop
ficom
rcl
popf
popf
xchg
cmp
jmp
cld
fistp
and
pop
pop
mov
push
push
aam
pop
xchg
and
adc
out
cld
fistp
ficomp
int3
sbb
pop
(bad)
adc
adc
nop
rcl
sbb
rcr
adc
ficom
mov
aam
out
cmc
dec
adc
enter
xchg
test
(bad)
rcr
xchg
and
(bad)
out
sbb
pop
ficomp
push
into
nop
rcl
daa
sbb
(bad)
cld
dec
ficomp
push
out
test
xchg
dec
jb
pop
pop
mov
jecxz
fwait
adc
pop
xor
rcr
xchg
adc
sbb
ins
test
push
pop
xchg
call
xchg
cwde
arpl
push
sbb
(bad)
push
icebp
push
push
inc
call
jl
pop
pop
xchg
sti
add
xchg
adc
adc
sbb
mov
inc
sar
dec
fwait
les
pop
clc
push
jbe
pop
push
push
aam
adc
cdq
pop
push
push
or
xchg
nop
ficom
(bad)
pop
xchg
call
gs
xchg
sbb
fcom
dec
adc
sbb
retf
adc
dec
adc
pop
xor
rcr
xchg
adc
lea
push
xlat
out
mov
retf
rcr
xchg
call
xchg
push
out
(bad)
xchg
rcr
xchg
and
(bad)
jecxz
cld
dec
ficomp
push
ret
adc
sbb
rcl
adc
xchg
pop
push
push
push
and
icebp
mov
or
jbe
pop
pop
sbb
retf
adc
je
adc
aam
adc
xchg
pop
push
push
push
and
icebp
mov
or
jp
pop
pop
sbb
(bad)
nop
rcl
xchg
push
test
arpl
(bad)
sti
push
push
and
retf
sbb
pop
ret
mov
call
aaa
xchg
jns
xor
ins
pushw
mov
pop
push
pop
sbb
fdivr
pop
xchg
jns
rcl
sti
dec
mov
out
test
adc
mov
fist
push
push
jp
push
pop
xchg
call
sbb
das
popf
ror
pop
ror
ja
repnz
nop
adc
push
les
fidiv
in
pop
push
pop
gs
xchg
fdivr
loope
sbb
lahf
pop
jmp
pop
pop
push
loope
rcl
lahf
mov
cmp
pop
jp
push
pop
xchg
test
dec
aam
in
pushf
push
cmp
aam
dec
xchg
call
mov
bound
out
aam
aad
mov
cli
pop
push
pop
popf
movs
arpl
add
gs
fbld
mov
call
scas
in
loopne
ins
xchg
pop
mov
scas
sbb
push
xchg
sbb
mov
shr
lahf
xchg
data16
ins
and
fcom
out
ins
bound
loopne
ins
inc
jbe
and
xor
pop
xchg
in
ins
in
dec
mov
pop
push
pop
clc
adc
adc
adc
xchg
adc
pop
call
div
fist
push
aam
out
mov
sub
test
pop
aaa
pop
xchg
jns
rcl
jecxz
mov
mov
push
xor
ins
cmps
jmp
adc
mov
ins
sti
test
jmp
lods
rcl
xchg
fsubr
loope
ret
adc
ins
push
pop
pop
xchg
in
ins
in
dec
xor
pop
xchg
loope
ins
in
dec
xor
jp
push
pop
xchg
in
sbb
push
loop
pop
cli
fsubrp
pop
xchg
sahf
fwait
mov
cli
adc
pop
adc
xor
adc
stos
je
fwait
mov
in
loope
push
inc
jbe
arpl
xor
cli
adc
pop
adc
push
pop
xchg
adc
push
pop
ror
ja
repnz
rol
out
mov
fsub
dec
pop
xchg
in
sbb
push
stc
aam
out
call
out
pop
push
loop
clc
adc
xchg
sbb
aaa
xchg
jns
aaa
xchg
in
imul
push
mov
pop
push
pop
sub
adc
in
aam
jecxz
call
sahf
popa
xchg
adc
sbb
mov
xchg
jns
mov
outs
sti
in
xchg
adc
sub
rcl
xchg
adc
pop
int
inc
xchg
push
inc
xchg
mov
cmp
xchg
pop
ins
data16
clc
adc
out
loope
sub
push
ins
pushw
mov
adc
pop
adc
push
add
ror
ja
mov
fcom
outs
pop
xchg
jns
aaa
xchg
sahf
pop
dec
ret
dec
ins
data16
xchg
adc
ficom
cmc
pop
adc
add
add
xchg
mov
sub
stos
xlat
dec
xchg
adc
mov
push
xchg
fld
adc
dec
rcl
out
dec
aaa
xchg
jnp
pop
nop
adc
adc
data16
fcom
push
push
push
sbb
clc
and
xchg
imul
loope
sub
mov
xchg
sbb
sub
in
pop
xchg
and
mov
in
imul
stos
jmp
mov
push
and
sbb
sbb
popf
mov
inc
dec
(bad)
out
xchg
sbb
lods
cmp
pop
xchg
movs
xchg
jmp
call
stc
aam
jecxz
call
dec
xor
clc
adc
sub
mov
pop
xchg
sbb
sub
sahf
pop
inc
ret
pop
clc
adc
sub
adc
sbb
sub
jl
pop
xchg
and
mov
call
out
test
adc
push
and
fcmovu
or
neg
loop
xor
sbb
jmp
movs
sbb
popf
pusha
xchg
sti
pop
pop
xchg
addr16
mov
push
push
pop
ret
adc
push
clc
cmp
sbb
aam
mov
mov
adc
sbb
xor
cmc
arpl
adc
xchg
adc
aaa
xchg
jns
aaa
xchg
jnp
lods
rcl
not
push
(bad)
xchg
sti
pop
pop
sbb
pop
movs
sbb
pop
popf
out
das
popf
jns
xchg
movs
mov
es
mov
adc
lods
aad
push
aam
out
inc
add
dec
aam
inc
cmps
in
call
pop
in
aam
out
xchg
pushf
sbb
rol
call
xchg
adc
sahf
(bad)
call
lds
adc
loopne
lahf
sbb
pop
pop
xchg
call
lahf
data16
aam
cmp
or
ret
dec
jp
push
pop
xchg
nop
ficom
jmp
test
inc
push
fwait
xchg
adc
fdivr
out
mov
xchg
adc
mov
adc
pop
aad
and
data16
(bad)
call
out
xchg
sbb
push
xor
mov
xlat
out
xchg
test
clc
push
aam
adc
or
xchg
call
mov
sbb
sub
inc
loope
cmp
sbb
call
sbb
pop
movs
jns
das
popf
jns
xchg
sbb
pop
movs
sbb
stos
imul
xchg
sbb
pop
mov
push
inc
xchg
mov
les
call
ins
sbb
aam
call
mov
push
cli
aam
jecxz
mov
push
push
pop
sbb
aam
ret
push
sbb
sar
in
xchg
adc
lods
std
push
pop
mov
movs
sbb
jecxz
push
push
addr16
and
sub
pop
mov
popa
sti
cmp
loopne
xchg
clc
push
push
and
das
and
pop
xchg
adc
ficom
aam
stos
add
xchg
adc
jo
hlt
pop
sbb
aam
nop
fnstcw
jnp
lods
rcl
dec
mov
push
push
pop
adc
or
ins
push
loopne
and
jmp
repnz
aam
iret
xchg
sbb
jnp
sbb
aam
jecxz
sbb
inc
push
pop
ror
ja
push
pop
nop
adc
mov
les
fst
fs
xchg
nop
mov
pop
adc
push
aam
cmp
aam
sahf
fwait
movs
ins
in
loope
ins
data16
adc
push
aam
sbb
sub
sbb
pop
adc
push
sub
adc
ins
push
cli
inc
push
xchg
adc
fwait
ins
data16
sbb
cmps
inc
xchg
adc
stos
aaa
jmp
mov
ins
out
loope
das
retf
loope
ins
js
test
loope
sbb
xchg
loope
adc
pop
xchg
inc
je
jp
pop
pop
xchg
call
fs
jp
xchg
in
imul
pop
pop
xchg
sti
or
xchg
adc
lea
loope
push
nop
(bad)
mov
xchg
out
push
jns
(bad)
pop
ret
loope
ins
adc
(bad)
fcmovbe
mov
adc
sub
jbe
arpl
mov
aam
push
ficom
jbe
arpl
mov
ins
sti
test
xchg
adc
sbb
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
imul
aam
push
ficom
imul
adc
in
adc
pop
or
out
push
dec
pop
pop
xchg
stos
jge
xchg
adc
loopne
in
loopne
lds
lods
rcl
dec
mov
push
push
pop
adc
push
fdivr
pop
xchg
sti
sub
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
test
adc
ficom
jbe
arpl
mov
ins
sti
pop
sbb
sti
loopne
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
test
push
ficom
lahf
fwait
jge
push
pop
jp
pop
pop
xchg
stos
adc
xchg
adc
pop
out
xor
pushf
xlat
adc
in
adc
pop
or
out
sbb
dec
xor
(bad)
sbb
in
imul
out
pop
xchg
cwde
fwait
mov
cli
xor
pop
xchg
inc
idiv
xlat
adc
ficom
lahf
fwait
dec
jae
pop
jp
pop
pop
xchg
stos
adc
xchg
adc
pop
out
add
popa
push
push
mov
ins
sti
test
xchg
adc
lods
rcl
loope
outs
in
loopne
jp
pop
pop
xchg
nop
ficom
push
pop
pop
xchg
stos
adc
xchg
adc
pop
out
add
popa
push
push
mov
ins
sti
jl
xchg
adc
jnp
adc
xor
ins
cmps
loop
ins
in
not
adc
ficom
neg
adc
in
adc
pop
or
out
push
loopne
pop
xchg
stos
jge
xchg
adc
loopne
in
loopne
lds
lods
rcl
dec
mov
push
push
pop
adc
push
aam
and
aam
sti
aam
xchg
adc
les
dec
xor
pop
scas
shl
push
push
pop
pop
xchg
shl
add
mov
rcl
dec
mov
push
push
pop
adc
ds
push
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
mov
sbb
adc
les
dec
(bad)
das
out
loope
ins
inc
jbe
arpl
or
pop
pop
xchg
nop
fimul
aad
inc
xchg
adc
or
adc
in
adc
pop
or
out
push
or
pop
xchg
in
stos
mov
loop
push
pop
adc
push
mov
push
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
pop
pop
xchg
nop
ficom
adc
pop
xchg
stos
adc
xchg
adc
pop
out
add
popa
push
push
mov
ins
sti
cmp
xchg
adc
sub
add
data16
pop
out
loope
ins
inc
jbe
bound
or
xchg
nop
fimul
lods
pop
pop
xchg
stos
adc
xchg
adc
pop
out
add
bound
mov
ins
sti
rcr
adc
stos
je
fwait
xchg
ins
out
loope
push
sti
nop
push
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
div
rcl
push
ficom
div
adc
in
adc
pop
or
out
push
inc
pop
pop
xchg
stos
jge
xchg
adc
loopne
in
loopne
lds
lods
rcl
dec
mov
push
push
pop
adc
push
fsubrp
xor
push
push
xchg
pop
pop
xchg
nop
mov
pop
jnp
pop
pop
xchg
aad
pop
xchg
in
loope
sbb
aaa
lods
sbb
popf
clc
push
in
jecxz
xchg
clc
popa
(bad)
pop
fndisi(8087
mov
ins
out
loope
pop
jmp
mov
repz
pop
gs
xchg
fcom
jecxz
sbb
xchg
loopne
in
jecxz
xchg
scas
fisub
scas
sub
pop
xchg
mov
movs
adc
jg
sbb
cmps
inc
xchg
adc
out
(bad)
ficom
gs
fbstp
ins
out
loope
inc
nop
fnstcw
in
loope
cli
dec
out
pop
xchg
sahf
mov
or
pop
pop
xchg
nop
fimul
xchg
fisub
push
in
jecxz
adc
push
pop
popf
xchg
outs
mov
data16
loopne
ins
pushw
rcl
adc
mov
outs
in
loopne
ret
lods
rcl
dec
mov
push
push
pop
adc
push
in
and
pop
gs
xchg
fcom
jecxz
sbb
neg
rcl
push
in
adc
pop
or
out
push
dec
out
pop
xchg
in
stos
mov
not
pop
adc
push
mov
push
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
pop
pop
xchg
nop
ficom
call
adc
xchg
adc
pop
out
add
popa
push
push
mov
ins
sti
add
xchg
adc
xchg
ins
out
loope
xchg
adc
mov
ins
cwde
fwait
movs
ins
in
loope
pop
fndisi(8087
mov
ins
in
loope
pop
jmp
mov
bound
push
pop
sbb
aam
jmp
mov
xchg
adc
mov
xchg
adc
fsub
pop
xchg
cwde
pop
inc
xchg
adc
pop
xchg
sub
push
adc
pop
xchg
cwde
fwait
movs
ins
in
loope
pop
jmp
mov
cli
dec
out
pop
xchg
sahf
fwait
test
jp
pop
pop
xchg
nop
ficom
sahf
jmp
push
sahf
popa
xchg
adc
sbb
js
das
fabs
mov
je
fwait
cdq
ins
out
loope
pop
xlat
loope
ins
call
ins
inc
adc
pop
fabs
mov
data16
jecxz
ret
popa
xchg
adc
mov
ins
in
popf
cdq
xchg
call
daa
out
mov
ins
cmps
out
mov
outs
in
loopne
ret
lods
rcl
dec
mov
push
push
pop
adc
push
aam
and
aam
sti
fcomp
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
idiv
push
sbb
cld
rcl
push
in
adc
pop
or
out
push
fsubr
pop
xchg
in
stos
mov
push
push
push
pop
adc
push
mov
push
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
pop
pop
xchg
nop
ficom
jecxz
lods
sbb
loope
(bad)
in
jecxz
jp
and
in
fwait
test
pop
adc
mov
push
loopne
sar
stos
ins
in
popf
cdq
sahf
call
push
sbb
fisubr
xor
ins
cmps
loop
ins
in
not
rcl
push
ficom
not
push
in
adc
pop
or
out
push
dec
out
pop
xchg
in
stos
mov
mov
xlat
push
aam
adc
aam
sti
shl
cmps
push
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
mul
push
sbb
in
adc
in
adc
pop
or
out
push
or
pop
xchg
in
stos
mov
dec
sub
pop
adc
push
xor
ins
cmps
loop
ins
in
neg
push
sbb
stos
je
fwait
xchg
ins
out
loope
push
sti
ins
bound
adc
les
popf
cmps
xchg
outs
cmp
pop
sub
pop
xchg
mov
movs
rcr
or
sub
test
adc
ficom
mul
adc
in
adc
pop
or
out
push
dec
out
pop
xchg
in
stos
mov
into
sub
pop
adc
push
mov
sub
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
jecxz
mov
outs
in
xchg
fwait
jp
and
stos
adc
xchg
adc
pop
out
add
popa
push
push
mov
ins
sti
sbb
adc
arpl
adc
les
popf
cmps
xchg
outs
cmp
pop
sub
pop
xchg
mov
movs
rcr
or
sub
div
lods
adc
ficom
jbe
bound
mov
ins
sti
mov
cdq
call
mov
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
pmaxsw
xchg
in
stos
mov
adc
push
mov
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
or
pop
xchg
in
stos
mov
fisubr
push
in
sub
pop
gs
xchg
fcom
jecxz
sbb
imul
cwde
adc
pop
or
out
push
or
pop
xchg
in
stos
mov
xchg
push
rcl
int
mov
outs
in
loopne
ret
lods
rcl
dec
mov
cs
pop
adc
push
mov
cs
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
jecxz
lods
sbb
jbe
bound
mov
ins
sti
movs
pusha
xchg
adc
pusha
xchg
adc
les
popf
cmps
xchg
outs
or
pop
ins
cmps
loop
ins
in
test
adc
ficom
test
push
in
adc
pop
or
out
inc
xchg
(bad)
adc
or
scas
loop
ins
in
dec
xor
vaddsd
adc
pop
bound
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
int
pop
xchg
in
stos
mov
mov
xlat
push
mov
das
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
cmp
call
jp
and
nop
ficom
std
dec
dec
xchg
adc
loopne
adc
in
adc
pop
or
out
push
mov
jge
xchg
adc
loopne
in
loopne
lds
lods
rcl
dec
mov
das
push
pop
adc
push
xor
ins
cmps
loop
ins
in
mul
scas
adc
ficom
je
clc
adc
adc
adc
pop
shr
imul
daa
pop
xchg
call
bound
out
aam
in
stos
mov
sub
push
pop
clc
adc
mov
outs
in
loopne
ins
cmps
mul
stos
adc
mov
ins
sti
xor
xchg
adc
call
jp
es
xchg
stos
imul
xchg
mov
fwait
sar
gs
adc
mov
gs
xchg
fsubr
in
jecxz
sbb
inc
add
fcmovu
or
neg
pop
lds
movs
gs
xchg
fsubr
loope
sbb
fcomp
ins
adc
sbb
aaa
movs
sbb
adc
xlat
in
dec
xor
pop
xchg
loope
ins
in
dec
mov
sub
pop
clc
adc
jge
push
rcl
in
loopne
ins
inc
jbe
xchg
adc
mov
xlat
in
pop
xlat
xlat
in
and
lods
je
cli
sub
pop
xchg
jnp
mov
adc
xchg
adc
mov
xchg
jnp
mov
adc
jl
push
xor
jp
icebp
mov
sbb
das
movs
sbb
inc
xchg
push
inc
xchg
mov
xchg
adc
lds
dec
in
push
stos
jne
(bad)
loope
push
nop
mov
pop
sbb
(bad)
nop
(bad)
pop
sbb
xchg
sbb
adc
pop
sbb
lahf
call
xchg
fwait
adc
sbb
jp
es
xchg
cwde
dec
push
pop
inc
sbb
rcr
loope
push
out
push
inc
neg
stos
adc
aam
imul
ins
in
stos
std
outs
in
loope
cmps
sub
pop
sbb
(bad)
pop
imul
ins
sahf
dec
push
xchg
sahf
dec
pop
xchg
push
xchg
enter
mov
xchg
adc
mov
ins
in
neg
adc
aam
arpl
mov
outs
in
loope
data16
pop
sbb
(bad)
pop
jcxz
ins
sahf
dec
push
xchg
cwde
xchg
sub
(bad)
sbb
rol
adc
pop
sbb
cmps
pop
cwde
adc
stos
jne
fwait
xor
loope
push
jnp
mov
adc
xchg
movs
adc
aam
xchg
mov
push
fnstenv
cmp
pop
mov
mov
test
push
mov
and
push
addr16
adc
xchg
adc
rcl
cmps
jecxz
ins
inc
jbe
jl
push
xor
cli
adc
pop
adc
jae
ins
in
popf
cdq
mov
fisubr
add
ins
push
cli
fs
xchg
adc
pop
jp
jecxz
ins
call
xchg
adc
pop
pop
xchg
loop
ins
in
dec
rcl
cmps
jecxz
ins
inc
idiv
adc
mov
ins
in
stos
int
in
loope
daa
lahf
jecxz
ins
in
stos
aad
in
loope
daa
mov
mov
outs
in
loope
pop
xchg
stos
mov
je
loope
adc
ds
(bad)
jecxz
ins
sbb
sub
adc
aam
cmp
aam
and
mov
adc
pop
cli
mov
pop
xchg
sahf
fwait
mov
jp
daa
pop
xchg
call
pop
cmps
jecxz
ins
inc
xchg
fsubr
loope
ret
fs
adc
imul
jecxz
ins
call
(bad)
jns
rcl
stos
loopne
ins
inc
not
push
ficom
xchg
movs
mov
xchg
cmps
mov
xchg
adc
fdiv
loope
xchg
adc
pop
hlt
aam
mov
in
loope
xchg
call
outs
in
loope
push
nop
mov
pop
out
js
pop
sti
loopne
ins
adc
aam
cmp
aam
sahf
fwait
in
in
loope
jp
icebp
mov
ss
loope
ret
in
in
loope
clc
adc
xor
adc
xchg
loop
ins
in
dec
aaa
xchg
sti
shr
pop
popf
popf
xchg
rcr
loope
cmp
loope
jp
sub
xchg
icebp
dec
mov
xchg
mov
rcl
jbe
jl
push
rcl
out
loopne
ins
inc
test
adc
ficom
fcomp
cmc
out
loope
xchg
clc
xor
gs
pop
xchg
sahf
fwait
mov
cli
lock
xchg
sti
adc
xchg
adc
inc
cli
sti
sbb
push
cmc
out
loope
xchg
cdq
fwait
cmp
loope
xchg
popa
(bad)
push
dec
addr16
xor
jp
sub
xchg
fld
mov
and
ins
adc
cli
adc
pop
xchg
sti
add
xchg
adc
xchg
adc
rcl
out
loopne
ins
inc
dec
mov
es
pop
clc
adc
jl
push
rcl
out
loopne
ins
inc
neg
push
pop
and
mov
mov
pop
jns
popf
clc
push
out
loope
xchg
xchg
fld
(bad)
adc
mov
nop
mov
pop
adc
loope
xchg
adc
mov
xchg
adc
fdiv
out
loope
sbb
dec
mov
daa
push
pop
clc
adc
call
jp
sub
call
daa
mov
mov
xchg
adc
mov
push
pop
push
or
neg
or
dec
or
cmp
jns
sbb
jmp
aam
stos
mov
sbb
aam
in
imul
sub
call
out
idiv
cmps
adc
aam
jne
or
out
jne
pop
mov
aam
sub
adc
stos
sar
imul
cld
cs
xchg
adc
jmp
pop
lea
ret
adc
(bad)
out
sbb
sti
mov
adc
sub
outs
add
(bad)
xlat
not
sbb
inc
test
adc
ficom
loope
call
mov
and
pop
sbb
pop
movs
sbb
loope
sahf
sbb
sbb
pop
xchg
push
dec
mov
and
pop
ins
pushw
push
and
adc
loop
(bad)
add
xchg
inc
adc
xlat
in
xchg
sbb
pop
lea
push
push
pop
ret
ins
xchg
adc
pop
les
or
adc
adc
mov
call
ins
inc
mul
adc
rcl
jmp
or
sub
xchg
inc
imul
push
aam
cmp
aam
cwde
pop
movs
int
inc
xchg
push
inc
xchg
mov
xchg
sti
dec
ins
xchg
adc
lds
dec
dec
std
stos
fs
xchg
adc
mov
ins
in
xchg
call
mov
inc
xchg
adc
mov
jb
loope
cli
jne
pop
xchg
sti
mov
adc
fld
adc
pop
sbb
aaa
movs
sbb
dec
mov
ins
sti
jl
xchg
adc
sub
in
loope
out
neg
push
aam
adc
aam
and
sbb
cs
ror
pop
adc
jmp
xchg
adc
mov
jb
loope
(bad)
sti
pop
ins
xchg
adc
popf
out
dec
mov
ins
sti
adc
adc
sub
in
loope
out
div
mov
cmp
aam
and
sbb
mov
cld
retf
dec
xchg
adc
leave
fcmovu
or
mul
mov
and
pop
rol
iret
sbb
aam
cmp
aam
stos
sahf
adc
adc
mov
ins
in
xchg
fwait
sar
xchg
adc
jl
adc
aam
cmp
aam
call
scas
adc
sub
fnstenv
call
xchg
in
loope
push
sbb
arpl
push
jp
sub
nop
ficom
jecxz
mov
ins
in
xchg
fsub
loope
sbb
jbe
arpl
rcl
adc
mov
cmps
adc
ficom
test
adc
in
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
nop
ficom
cwde
sbb
in
aam
inc
mov
cli
daa
push
pop
sub
push
pop
xchg
mov
movs
adc
sbb
mov
adc
les
dec
shr
adc
mov
jl
push
shr
adc
mov
cmps
adc
ficom
div
adc
in
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
nop
ficom
and
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
nop
ficom
jecxz
lods
sbb
div
cwde
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
nop
ficom
aam
pop
xchg
stos
adc
xchg
adc
pop
out
cmp
call
icebp
adc
pop
or
out
pop
scas
push
mov
retf
pop
pop
scas
push
mov
and
pop
adc
push
mov
arpl
rcl
adc
mov
arpl
rcl
adc
mov
mov
pop
lahf
fwait
xchg
jb
pop
jp
sub
pop
xchg
adc
pop
out
pop
jbe
popa
push
push
rcl
adc
mov
mov
sbb
arpl
rcl
adc
mov
mov
sbb
pop
jp
sub
pop
xchg
adc
pop
out
pop
jbe
popa
push
push
rcl
adc
mov
mov
sbb
arpl
rcl
adc
mov
mov
sbb
mov
adc
in
adc
pop
or
out
push
les
xchg
adc
loopne
repz
lds
mov
adc
mov
xchg
adc
lods
rcl
xchg
fcom
sti
shr
popf
cdq
call
mov
ins
in
xchg
fwait
jp
sub
xchg
stos
adc
xchg
adc
pop
out
pop
jbe
popa
push
push
rcl
adc
mov
mov
sbb
jl
push
rcl
adc
mov
mov
sbb
or
adc
in
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
xchg
nop
ficom
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
xchg
nop
ficom
jecxz
lods
sbb
test
in
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
sub
xchg
nop
ficom
data16
pop
adc
mov
jl
push
rcl
adc
mov
mov
add
nop
mov
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
das
pop
xchg
nop
ficom
adc
pop
xchg
sahf
fwait
pop
jb
loope
jp
das
pop
xchg
nop
ficom
jecxz
lods
sbb
not
mov
adc
pop
or
out
push
or
pop
xchg
sahf
fwait
pop
jb
loope
jp
das
pop
xchg
nop
ficom
je
pop
xchg
stos
neg
adc
fcom
cmp
inc
xchg
loopne
repz
lds
mov
adc
mov
xchg
adc
ins
xchg
adc
les
popf
cmps
xchg
outs
or
pop
xchg
push
mov
(bad)
and
pop
adc
push
aam
in
aam
test
xor
pop
xchg
push
mov
cmps
and
pop
adc
push
mov
and
pop
sub
push
pop
xchg
mov
movs
adc
sbb
xchg
scas
rcl
xchg
fcom
sti
adc
popf
cdq
call
push
xchg
adc
les
popf
cmps
xchg
outs
aaa
mov
and
pop
sub
pop
xchg
mov
movs
rcr
or
dec
lock
xchg
sahf
mov
or
cs
xchg
nop
fimul
ret
icebp
pop
xchg
sahf
fwait
pop
jb
loope
jp
cs
xchg
nop
ficom
adc
adc
adc
xchg
adc
jp
xor
call
jl
dec
pop
xchg
sahf
fwait
pop
jb
loope
jp
xor
jns
shr
jmp
mov
das
adc
mov
outs
int3
loope
jp
xor
in
stos
mov
mov
rcr
pop
xchg
in
aam
repz
push
cmc
pop
sbb
pop
lods
sbb
inc
add
fcmovu
or
neg
pop
rol
mov
cmp
pop
xchg
in
aam
xchg
in
ins
call
ins
adc
call
neg
adc
(bad)
(bad)
sbb
enter
mov
xchg
adc
fcom
call
idiv
jp
xor
sti
cmps
scas
ins
in
xchg
movs
mov
pop
neg
xchg
sti
or
xchg
adc
mov
pop
xchg
mov
mov
cmp
pop
cli
pop
pop
pop
xchg
sahf
fwait
jmp
cli
mov
stos
mov
adc
xchg
adc
mov
push
sbb
in
adc
xor
pop
xchg
loop
ins
in
dec
rcl
cmps
jecxz
ins
inc
test
adc
aam
in
stos
std
outs
in
loope
pop
xchg
stos
mov
popa
jmp
push
sbb
and
std
pop
pop
pop
xchg
loop
ins
in
dec
mov
cmp
pop
pop
xchg
stos
mov
pop
out
loopne
ins
inc
imul
push
mov
mul
mov
ins
in
xchg
movs
xchg
jmp
call
cmps
mov
and
add
push
out
push
aam
in
in
loope
xchg
adc
call
push
pop
xchg
nop
mov
pop
out
js
pop
sti
loopne
ins
adc
fdivr
pop
pop
xchg
sahf
fwait
in
in
loope
jp
sti
mov
ss
loope
ret
in
in
loope
clc
adc
xor
adc
xchg
loop
ins
in
dec
aaa
xchg
sti
test
adc
popf
popf
xchg
nop
pop
xchg
adc
call
jp
xor
xchg
xchg
jmp
mov
ins
jnp
lods
rcl
jbe
jl
push
rcl
out
loopne
ins
inc
not
mov
add
fsubr
call
xor
gs
fwait
mov
cli
lock
xchg
sti
fdiv
adc
inc
cli
sti
sbb
jbe
adc
mov
imul
(bad)
push
fs
dec
xchg
adc
xor
jp
xor
xchg
call
xchg
adc
pop
pop
xchg
mov
jp
xor
xor
pop
xchg
mov
cdq
mov
adc
in
push
pop
popf
xchg
int3
pop
xchg
adc
mov
gs
loope
push
sbb
popf
popf
xchg
movs
pop
xchg
adc
cmps
mov
push
call
hlt
je
adc
pop
pop
xchg
and
xchg
mov
ins
in
xchg
fwait
adc
loop
xchg
adc
call
jp
xor
xchg
jnp
mov
adc
in
mov
sbb
pop
xchg
inc
not
mov
pop
pop
popf
out
jbe
jl
push
mov
cmp
pop
sbb
popf
mov
inc
xchg
sahf
xchg
loopne
mov
ins
sti
aam
ins
in
popf
cdq
sahf
clc
add
pop
(bad)
jecxz
ins
nop
imul
inc
loope
push
out
loope
jp
enter
ficom
aam
push
push
cmp
pop
push
xchg
and
adc
pop
pop
xchg
stos
mov
retf
pop
sbb
pop
movs
sbb
je
ins
cmps
mov
nop
mov
mov
mov
xchg
adc
mov
xchg
jmp
call
push
or
neg
or
dec
push
loop
jge
jb
cld
pop
sub
cmp
pop
sbb
mov
mov
jmp
or
sti
adc
xchg
adc
pop
xchg
adc
jp
cmp
inc
imul
mov
pop
xchg
or
push
pop
sar
jnp
adc
pop
les
cmp
clc
adc
clc
mov
stos
pop
push
xchg
adc
mov
push
jns
or
aaa
pop
xchg
sahf
pop
mov
mov
push
or
cmp
call
xlat
out
inc
add
fcmovu
or
mul
mov
xor
pop
les
mov
add
push
sahf
ins
pop
xchg
jns
mov
mov
sbb
sub
call
ins
sbb
pop
pop
xchg
pop
lods
ins
in
dec
or
aaa
pop
xchg
jns
mov
xchg
jecxz
mov
ins
in
popf
cdq
sahf
cs
xchg
adc
sbb
cmc
dec
sbb
aaa
movs
sbb
je
(bad)
sti
and
xchg
adc
add
dec
aam
nop
repnz
lds
movs
gs
xchg
sbb
fnstcw
push
push
loopne
xchg
clc
jbe
push
out
push
sbb
sbb
pop
jl
push
rcl
std
dec
mov
cmp
pop
pop
push
lock
xchg
adc
mov
xchg
sti
lods
je
adc
jmp
jbe
jg
push
rcl
std
dec
mov
cmp
pop
adc
push
rcl
std
dec
aaa
xchg
jnp
pop
xchg
adc
push
jp
aaa
pop
xchg
xchg
fldenv
adc
cmp
loopne
and
push
vaesenclast
sbb
dec
or
loop
adc
push
out
push
jns
aaa
nop
jns
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jns
xor
clc
adc
adc
aaa
pop
xchg
call
xchg
jns
or
and
push
jp
aaa
pop
xchg
jns
or
and
push
jp
aaa
pop
xchg
call
xchg
inc
je
ins
es
in
rcl
mul
inc
je
ins
es
rcl
div
inc
je
ins
es
rcl
test
out
push
jns
or
and
push
jp
ss
xchg
jns
or
and
push
jp
ss
xchg
jns
or
and
push
jp
ss
xchg
jns
or
and
push
jp
ss
xchg
xchg
icebp
adc
inc
je
ins
es
rcl
mul
mov
inc
je
ins
es
lock
div
mov
in
aam
out
xchg
call
sub
and
mov
cmp
pop
clc
adc
mov
push
push
mov
cmp
pop
sub
stc
aam
jmp
call
sti
or
lods
xchg
aaa
add
xchg
call
pop
pop
jp
cmp
mov
clc
rcl
jbe
sbb
aaa
outs
in
sub
sub
pop
clc
out
loope
adc
cmp
mov
repnz
jbe
sbb
aaa
outs
in
sub
and
mov
xor
pop
sbb
jmp
aam
jns
mov
xchg
sti
ins
jp
adc
xor
clc
out
loope
mov
je
pop
xchg
jns
mov
xchg
sti
push
jp
adc
xor
clc
out
loope
mov
cmp
jns
mov
xchg
sti
xor
xchg
adc
xor
clc
out
loope
mov
or
pop
xchg
xchg
icebp
ret
push
aaa
outs
in
sub
push
push
mov
xor
pop
xor
mov
xchg
jnp
aam
adc
es
imul
outs
in
sub
and
mov
xor
mov
xchg
jnp
aam
adc
es
adc
aam
and
aam
dec
xlat
sahf
(bad)
call
sub
call
addr16
pop
pop
ins
pushw
mov
out
loope
sbb
jbe
jg
push
or
loop
ins
nop
fimul
sbb
ja
adc
aaa
xchg
inc
idiv
jge
and
lods
ret
test
in
sub
push
push
aaa
xchg
inc
xchg
sbb
pop
test
mov
adc
adc
ffree
jnp
lods
rcl
jbe
jg
push
xor
jp
cmp
mov
in
rcl
je
ins
es
rcl
je
ret
(bad)
xlat
jmp
sbb
idiv
ret
aaa
xchg
pop
adc
xchg
jg
push
xor
clc
adc
sub
pop
pop
sbb
jmp
aam
jns
mov
xchg
jns
mov
xchg
jnp
pop
xchg
adc
lods
adc
jp
clc
inc
je
cli
sbb
ffree
jnp
lods
rcl
jbe
jg
push
aaa
xchg
sti
xor
adc
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
adc
adc
pop
imul
adc
aam
jns
or
and
push
jp
cmp
jns
mov
xchg
jns
mov
xchg
jns
xor
clc
ja
jne
adc
pop
ret
mov
adc
jg
push
aaa
xchg
sti
fdivr
adc
fdivr
sub
jns
mov
xchg
jns
mov
xchg
jns
xor
clc
imul
push
pop
ret
mov
adc
jg
push
aaa
xchg
sti
cwde
js
adc
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
xchg
adc
xchg
adc
aaa
mov
inc
jbe
jle
push
xor
clc
adc
adc
mov
loope
cmps
mov
loope
(bad)
mov
jbe
xchg
adc
xor
clc
cmp
xchg
adc
add
pop
pop
cli
icebp
repz
xchg
jns
mov
ss
pop
xor
mov
xchg
jns
mov
xchg
jns
mov
xchg
jns
aaa
idiv
pop
xchg
adc
adc
ffree
jnp
lods
rcl
jbe
jle
push
aaa
xchg
sti
sar
mov
fcom
jnp
xchg
jnp
mov
adc
push
pop
pop
xchg
inc
test
adc
xor
clc
adc
xchg
adc
mov
xchg
sti
cwde
jns
adc
es
rcl
je
ins
es
rcl
jbe
xchg
adc
aaa
mov
adc
adc
ffree
jnp
lods
rcl
jbe
jle
push
aaa
xchg
sti
push
frstor
push
push
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
mov
das
jbe
xchg
adc
xor
cli
adc
ffree
jnp
lods
rcl
jbe
jle
push
aaa
xchg
sti
and
xchg
adc
in
and
pop
gs
xchg
sbb
fnstenv
clc
adc
push
clc
adc
push
clc
add
cmc
push
pop
xchg
jnp
pop
xchg
adc
xchg
adc
loope
pop
pop
cli
icebp
repz
xchg
jns
mov
xor
pop
xor
icebp
rcl
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
xchg
adc
xchg
adc
xor
cli
adc
pop
ret
mov
adc
jg
push
aaa
xchg
sti
mov
xchg
adc
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
mov
push
pop
cli
rcr
pop
xchg
jnp
pop
xchg
inc
jbe
jle
push
xor
clc
adc
sub
mov
loope
cmps
mov
loope
(bad)
mov
jbe
xchg
adc
xor
clc
ja
pop
xchg
adc
mov
pop
pop
cli
icebp
repz
xchg
jns
mov
xor
pop
xor
mov
xchg
call
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
fcom
push
pop
cli
mov
pop
xchg
jnp
pop
xchg
inc
jbe
jle
push
xor
clc
adc
mov
push
mov
loope
cmps
mov
loope
repnz
jbe
xchg
adc
xor
clc
pop
jbe
xchg
xchg
dec
xor
cli
sbb
pop
xchg
jnp
pop
xchg
adc
pushf
mov
push
(bad)
push
mov
loope
cmps
mov
loope
repnz
jbe
xchg
adc
xor
clc
pop
jbe
xchg
xchg
dec
xor
cli
sbb
pop
xchg
jnp
pop
xchg
adc
fdiv
mov
pop
sbb
aaa
movs
sbb
je
ins
es
rcl
je
ins
es
rcl
je
clc
cmp
xchg
adc
aaa
xchg
pop
adc
and
pop
pop
cli
adc
xchg
adc
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
mov
xor
clc
pop
jbe
xchg
xchg
dec
xor
cli
sbb
pop
xchg
jnp
pop
xchg
adc
push
mov
push
(bad)
mov
pop
pop
clc
adc
push
clc
adc
push
clc
add
(bad)
xchg
adc
xor
clc
or
dec
xor
cli
adc
pop
xchg
jns
mov
xor
pop
xor
daa
movs
ins
in
cmps
mov
call
imul
add
fcmovu
or
neg
loop
push
mov
gs
adc
jg
push
mov
fs
loope
push
jnp
mov
adc
jns
loope
adc
push
(bad)
call
movs
sbb
je
ins
es
repnz
idiv
adc
aam
in
aam
call
or
xchg
adc
es
rcl
je
les
jmp
jecxz
aaa
xchg
jns
xor
cli
iret
out
pop
xchg
jnp
mov
adc
nop
adc
mov
xor
pop
xor
sbb
jns
mov
xchg
jns
or
push
pop
lods
adc
jp
clc
pop
je
cli
adc
ffree
jnp
mov
adc
jg
push
aaa
xchg
sti
lock
adc
aam
cmp
aam
jns
mov
xchg
jns
mov
xchg
jnp
pop
xchg
adc
lods
adc
jp
clc
inc
je
cli
sbb
ffree
jnp
lods
rcl
jbe
jg
push
aaa
xchg
sti
mov
xchg
adc
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
adc
adc
pop
div
push
jns
or
and
push
jp
ds
xchg
jns
mov
xchg
jns
mov
xchg
jns
aaa
idiv
aaa
xchg
pop
adc
and
pop
pop
clc
adc
sbb
adc
(bad)
jp
pop
pop
sbb
pop
movs
sbb
jbe
jle
push
aaa
xchg
jnp
pop
xchg
adc
push
jp
add
jnp
mov
adc
push
pop
pop
xchg
in
sub
jbe
push
pop
adc
mov
rcl
sub
test
aaa
xchg
jnp
pop
xchg
adc
push
jp
add
clc
or
xchg
jns
xor
ins
es
rcl
imul
lea
push
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
mov
and
imul
dec
loop
pop
cli
sahf
repnz
xchg
jns
mov
or
pop
xor
repz
xchg
adc
mov
push
jns
mov
xchg
jns
mov
xchg
jnp
pop
xchg
adc
pop
jbe
xchg
adc
xor
cli
iret
out
pop
xchg
jnp
mov
adc
dec
add
mov
repnz
imul
in
loope
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
xchg
adc
pop
pop
pop
xchg
jnp
pop
xchg
inc
jbe
jle
push
xor
clc
adc
jl
adc
(bad)
out
pop
pop
adc
in
xchg
adc
es
rcl
je
ins
es
in
rcl
je
clc
je
ficom
adc
pop
cli
adc
pop
ret
mov
adc
jg
push
aaa
xchg
sti
cld
inc
xchg
adc
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
xchg
adc
xchg
adc
aaa
idiv
pop
xchg
inc
jbe
jle
push
xor
clc
adc
hlt
mov
push
(bad)
bound
cwde
push
xchg
adc
es
rcl
je
ins
es
in
rcl
je
clc
inc
jbe
xchg
adc
xor
cli
adc
pop
ret
mov
adc
jg
push
aaa
xchg
sti
je
xchg
adc
aaa
xchg
in
sub
push
push
aaa
xchg
in
sub
and
aaa
cmp
xchg
adc
xchg
adc
aaa
mov
pop
xchg
inc
jbe
jns
push
xor
clc
adc
ins
mov
push
(bad)
out
mov
loope
cmps
mov
loope
(bad)
mov
jbe
xchg
adc
xor
clc
or
dec
xor
cli
icebp
repz
xchg
jns
mov
push
push
pop
xor
push
mov
xchg
jns
mov
xchg
jns
xor
clc
ds
cli
adc
ffree
jnp
out
rcl
jbe
jle
push
xor
jp
add
mov
clc
rcl
xchg
movs
mov
adc
push
clc
adc
push
clc
or
push
je
cli
adc
ffree
jnp
lods
rcl
jbe
jle
push
xor
jp
add
mov
repnz
je
ins
es
rcl
je
ins
es
rcl
je
clc
ja
add
pop
jbe
xchg
xchg
dec
xor
cli
sbb
pop
xchg
jnp
pop
xchg
adc
adc
mov
loope
cmps
mov
loope
(bad)
mov
jbe
xchg
adc
xor
clc
or
dec
xor
cli
adc
pop
xchg
jns
mov
push
push
pop
xor
scas
ins
in
xchg
movs
mov
mov
mov
push
inc
xchg
mov
les
lock
xor
jge
sbb
xchg
jns
xor
clc
adc
adc
xchg
adc
mov
adc
aam
nop
loopne
popf
xchg
mov
adc
sti
hlt
inc
xchg
adc
outs
xchg
adc
xchg
or
pop
adc
pop
push
push
jmp
lods
add
xchg
sahf
pop
lods
ret
test
ret
dec
cli
sub
pop
xchg
jnp
pop
xchg
xchg
mul
xor
loope
push
or
add
pop
aaa
xchg
in
imul
jnp
mov
adc
sub
sub
mov
sbb
push
push
addr16
rcl
jmp
mov
push
push
push
xor
jp
and
sbb
inc
add
fcmovu
or
neg
pop
rol
enter
sbb
pop
gs
xchg
fsubr
loope
sbb
lahf
fiadd
push
pop
cli
mov
pop
xchg
sahf
fwait
pop
ins
in
loope
jp
push
pop
xchg
sti
and
adc
les
xchg
mov
dec
loope
out
in
pop
sub
adc
mov
xchg
adc
dec
cli
(bad)
fistp
xchg
sahf
fwait
pop
ins
in
loope
jp
push
pop
xchg
call
out
in
sbb
pushf
rcl
xchg
fcom
sti
pop
inc
xchg
adc
dec
cli
push
fcomp
xchg
sahf
fwait
pop
ins
in
loope
jp
push
pop
xchg
xchg
arpl
scas
rcr
xchg
push
mov
mov
push
pop
adc
test
xchg
adc
dec
cli
dec
fcomp
xchg
sahf
fwait
pop
ins
in
loope
jp
or
xchg
arpl
dec
rcr
xchg
push
mov
jbe
push
pop
adc
push
out
jbe
push
push
push
rcl
adc
mov
test
push
fucomp
in
pop
sub
adc
mov
xchg
adc
pop
adc
push
out
jbe
push
push
push
rcl
adc
mov
test
push
fucomp
in
adc
pushf
rcl
xchg
fcom
sti
pushf
dec
xchg
adc
dec
cli
and
pop
xchg
sahf
fwait
pop
ins
in
loope
jp
or
xchg
call
fucomp
in
adc
cmp
rcl
xchg
fcom
sti
push
dec
xchg
adc
dec
cli
ja
pop
xchg
sahf
fwait
pop
ins
in
loope
jp
or
jns
aaa
xchg
jnp
mov
adc
jns
push
rcl
adc
mov
cmp
push
mov
mul
mov
xchg
jnp
popf
rcl
jbe
cmp
out
loope
cli
sar
push
xchg
sti
and
xchg
adc
ins
bound
loope
int3
dec
xlat
lahf
xchg
adc
ja
dec
push
les
call
push
repnz
stos
jne
pop
movs
sbb
xchg
scas
adc
popa
adc
or
pop
pop
inc
sbb
loop
sar
mov
in
popf
cdq
call
push
jp
push
pop
xchg
xchg
fnstcw
mov
push
add
dec
xlat
lahf
xchg
adc
ja
bnd
adc
push
les
cmps
or
(bad)
in
aam
imul
mov
bound
out
aam
jnp
lahf
rcl
xchg
fdivr
loope
ret
dec
xchg
adc
movs
mov
push
in
adc
pop
or
out
pop
loopne
mov
push
loope
out
jbe
push
push
push
rcl
(bad)
jmp
ins
test
push
aam
and
aam
xchg
mov
pop
out
jbe
push
push
push
rcl
(bad)
jmp
dec
test
push
(bad)
loopne
mov
cli
jno
pop
xchg
sahf
fwait
mov
in
loope
jp
or
xchg
mov
pop
out
jbe
push
push
push
rcl
(bad)
jmp
add
push
pop
gs
xchg
fdiv
loope
sbb
sahf
loopne
jmp
mov
push
rcr
xchg
rep
ins
in
dec
mov
push
push
pop
adc
sbb
cmp
rcl
xchg
fdivr
loope
ret
dec
xchg
adc
mov
pop
rcr
xchg
rep
ins
in
dec
mov
push
push
pop
sbb
aaa
lods
sbb
sahf
loopne
jmp
mov
loope
pop
pop
pop
xchg
rep
ins
in
dec
mov
push
push
pop
adc
pop
sub
adc
mov
xchg
adc
mov
and
pop
pop
pop
xchg
rep
ins
in
dec
mov
push
push
pop
sbb
pop
lods
sbb
sahf
loopne
jmp
mov
jp
pop
pop
pop
xchg
rep
ins
in
dec
mov
push
push
pop
adc
adc
cmp
rcl
xchg
fdivr
loope
ret
dec
xchg
adc
mov
mov
pop
pop
pop
xchg
rep
ins
in
dec
mov
pop
push
pop
adc
adc
cmp
rcl
xchg
fdivr
loope
ret
dec
xchg
adc
and
rcl
(bad)
jmp
in
in
loope
jl
dec
pop
xchg
jnp
in
rcl
jbe
push
push
push
mov
jmp
mov
pop
sti
jmp
scas
push
loope
out
popf
loopne
in
mov
mov
push
pop
adc
popa
xor
js
pop
adc
xor
xchg
adc
fwait
mov
arpl
pushf
ins
in
popf
cdq
call
push
push
sbb
cwde
nop
adc
mov
adc
pop
adc
push
push
push
mov
mov
addr16
xchg
sub
sahf
loopne
out
loope
test
fwait
jne
adc
fwait
pop
in
loop
ins
adc
fwait
pop
xchg
out
ins
in
dec
xor
pop
xchg
loop
ins
in
dec
mov
or
pop
adc
adc
das
jmp
mov
jp
push
pop
xchg
test
dec
aam
in
pushf
push
cmp
aam
dec
xchg
call
loope
adc
nop
and
out
jbe
and
xor
pop
xchg
loop
ins
in
dec
mov
or
pop
adc
inc
pop
xchg
adc
and
xor
pop
xchg
loop
ins
in
dec
mov
or
pop
adc
push
mov
jnp
pop
xchg
adc
mov
xchg
adc
pop
pop
xchg
loop
ins
in
dec
xor
pop
xchg
loop
ins
in
dec
mov
or
pop
cli
sbb
pop
xchg
sahf
fwait
mov
jp
push
pop
xchg
nop
fimul
xchg
loop
ins
in
dec
mov
push
push
pop
pop
xchg
loop
ins
in
popf
popf
xchg
inc
xchg
fsubr
loope
ret
mov
adc
mov
xchg
adc
rcl
out
out
ins
inc
div
(bad)
in
aam
iret
jmp
aaa
xchg
jnp
mov
adc
mov
ins
in
popf
cdq
sahf
sbb
push
pop
inc
pop
pop
xchg
sahf
fwait
mov
push
push
dec
mov
add
pop
retf
call
fs
pop
pop
xchg
nop
out
popf
xchg
xor
loope
push
loope
cli
sub
rcl
xchg
fsubr
loope
ret
dec
xchg
adc
sahf
rcl
xchg
fsubr
loope
ret
dec
xchg
adc
mov
xchg
adc
mov
dec
in
mov
ins
in
loope
out
xchg
fmul
loope
push
xchg
sbb
jns
loope
dec
in
mov
ins
in
sbb
je
call
ins
sahf
fwait
mov
cli
int
pop
xchg
sahf
fwait
mov
jp
or
nop
fimul
xchg
loop
ins
in
dec
mov
pop
push
pop
sbb
xchg
loopne
in
loope
(bad)
dec
xchg
adc
mov
lds
mov
add
pop
sbb
xchg
fsubr
loope
ret
test
pop
add
pop
sbb
aaa
lods
sbb
xchg
fsubr
loope
ret
dec
xchg
adc
mov
push
loope
out
adc
or
minps
in
loope
clc
adc
call
cli
jns
sbb
xchg
sti
mov
mov
add
pop
pop
xchg
loop
ins
in
dec
push
ins
cmps
repnz
ins
in
idiv
pop
in
loope
push
pop
xchg
sahf
fwait
rcl
fdiv
cmps
repnz
ins
in
div
adc
aam
cmp
aam
jnp
sub
adc
add
aad
mov
pop
rcr
pop
(bad)
call
jp
minps
into
ins
jo
call
popa
xor
mov
cli
adc
inc
xchg
sti
js
xchg
adc
mov
ret
dec
xchg
adc
pop
or
dec
lahf
mov
jg
pop
sbb
(bad)
cmps
mov
dec
lock
mov
adc
sahf
cli
inc
mov
xchg
sti
mov
xchg
adc
xchg
adc
xor
jp
minps
adc
inc
push
pop
sbb
pop
test
shl
xchg
adc
rcl
mov
loope
call
pop
cli
sub
jl
loope
jp
xchg
scas
in
loope
xchg
sbb
jo
adc
ficom
sbb
js
xlat
pop
pop
ins
push
cwd
rcl
cmps
pop
int
push
stos
jno
fwait
sar
aam
sti
clc
dec
xchg
adc
sbb
jmp
pushf
imul
sbb
inc
aam
nop
fstp
jmp
loope
push
xchg
test
mov
sti
test
xchg
adc
jmp
movs
repz
lock
push
in
pushf
push
cmp
aam
dec
xchg
fwait
adc
jg
pusha
fwait
mov
(bad)
loope
adc
pop
xlat
pop
movs
repz
push
aad
bnd
loope
jp
or
call
push
xchg
mov
ins
in
sub
mov
xor
pop
pop
xchg
mov
xor
cli
(bad)
hlt
pop
xchg
sahf
fwait
(bad)
jle
loope
jp
or
jns
rcl
mov
mov
and
loope
ret
dec
xchg
adc
mov
ins
in
xchg
fdiv
sti
sub
mov
push
aaa
xchg
sahf
fwait
(bad)
jle
loope
jp
minps
call
xchg
adc
sahf
cli
xlat
hlt
pop
xchg
jnp
in
rcl
jbe
js
push
xor
jp
or
aas
jl
loope
cmps
sbb
pop
xchg
stos
aas
pop
xchg
adc
cmp
xchg
cmc
adc
adc
xor
cli
sub
rcl
jbe
and
mov
add
pop
pop
scas
ss
in
xchg
push
sub
push
pop
xchg
loopne
clc
sub
std
aam
cmps
repz
and
pop
pop
cli
sub
rcl
jbe
xor
mov
add
pop
pop
scas
cld
mov
in
xchg
push
sub
push
pop
xchg
loopne
clc
adc
add
adc
js
push
xor
cli
(bad)
pop
xchg
jnp
repz
mul
adc
ficom
xchg
loopne
(bad)
loope
pop
es
rcl
cmps
push
xchg
adc
scas
aaa
stos
push
ins
xchg
adc
mov
ins
in
xchg
sahf
clc
adc
pop
je
clc
adc
xchg
adc
xchg
mov
adc
call
xchg
adc
adc
sti
fcom
adc
sbb
in
adc
sahf
pop
in
sahf
fwait
call
jp
adc
sahf
xchg
call
pop
in
pop
(bad)
jns
shl
stos
dec
or
ins
in
dec
mov
popf
adc
aaa
xchg
sahf
pop
in
jns
xor
ins
data16
mov
sbb
pop
adc
ins
cmp
adc
sbb
in
adc
sahf
pop
in
sahf
fwait
call
jp
minps
in
loope
pop
in
pop
(bad)
jns
shl
stos
dec
or
ins
in
dec
mov
popf
adc
aaa
xchg
sahf
pop
in
jns
xor
ins
data16
mov
sbb
pop
ins
data16
mov
sbb
xor
xchg
in
aam
mov
fwait
icebp
jg
loope
push
sahf
sbb
repz
aam
fist
pop
sbb
aam
and
aam
jnp
and
fcom
pop
xchg
call
xchg
jns
mov
sbb
pop
sbb
call
xchg
test
adc
clc
adc
aam
retf
fstp
adc
pop
xchg
aam
cdq
xchg
adc
pop
adc
or
xchg
adc
sbb
push
pop
xchg
sahf
pop
loope
sti
mov
pop
ins
es
rcl
je
clc
adc
adc
adc
xchg
fstp
xor
cli
cli
repz
xchg
jns
mov
add
pop
xor
mov
xchg
jnp
popf
rcl
je
clc
adc
or
ins
in
ins
in
popf
cdq
xchg
sti
cwde
push
xchg
adc
pop
xchg
adc
mov
adc
jo
adc
xor
ret
push
xchg
adc
mov
sbb
test
inc
loope
cmp
loope
push
xchg
mov
ins
in
sbb
adc
pop
pop
xchg
cmps
mov
in
dec
rcl
mov
jbe
push
push
push
xor
cli
inc
ficomp
xchg
jnp
pop
xchg
xchg
not
push
or
popf
out
popf
js
xlat
pop
pop
xchg
sti
pop
sti
ins
in
xchg
test
xchg
mov
ins
in
dec
aaa
xchg
jns
xor
clc
adc
cmp
pop
xchg
inc
idiv
sahf
adc
rcl
mov
je
clc
adc
out
push
aaa
xchg
jns
mov
sbb
cwde
push
xchg
adc
out
pop
xchg
jns
mov
xchg
sti
push
inc
pop
push
cli
or
xchg
xchg
frstor
adc
rcl
test
clc
adc
adc
sub
adc
push
push
retfw
add
dec
xlat
lahf
adc
aam
xchg
repnz
nop
adc
push
les
out
loopne
fcom
cmp
push
adc
push
push
push
mov
pop
xchg
ins
adc
push
adc
cld
adc
pop
jnp
push
pop
xchg
subps
adc
pop
scas
add
pop
xchg
addr16
pop
popf
lahf
test
gs
adc
push
push
cwde
pop
pop
xchg
cli
mov
pusha
(bad)
xlat
pop
pop
xchg
sbb
xchg
(bad)
pop
pop
ins
es
rcl
test
jmp
mov
not
push
xor
ret
mov
sbb
aam
adc
aam
sahf
fwait
test
loope
ins
cmps
mul
lahf
adc
push
push
sbb
(bad)
xchg
adc
rcl
fninit
mov
(bad)
mov
adc
sbb
sub
cwde
fwait
mov
pop
retf
jecxz
ins
nop
neg
xchg
mov
pop
out
loope
stos
ret
imul
cli
mov
dec
out
loope
adc
sbb
pop
(bad)
jecxz
ins
cmp
fs
sub
xchg
cwde
fwait
mov
pop
iret
jecxz
ins
inc
xchg
fdiv
loope
mov
in
dec
aaa
xchg
jns
mov
xchg
sti
fcom
adc
fcom
loope
sbb
popf
pusha
cli
xlat
pop
pop
xchg
sbb
sahf
xchg
adc
cld
cli
xlat
pop
pop
xor
pop
xchg
xchg
icebp
shr
adc
fidiv
adc
pop
xchg
sbb
ins
dec
sahf
pusha
out
pop
pop
xchg
data16
xchg
sti
cmp
push
out
push
cli
bound
adc
call
pop
push
popf
xchg
jbe
xchg
adc
or
pop
xchg
cli
inc
pop
xchg
adc
stos
jne
fwait
mov
in
loope
push
mov
repnz
daa
sbb
adc
mov
lahf
adc
mov
adc
pop
sbb
jmp
mov
sbb
aam
jmp
mov
and
sub
sub
sub
push
push
sub
push
push
sub
push
push
sub
push
push
sub
push
push
sub
push
push
sub
push
push
sub
push
push
push
pop
ret
xchg
jns
mov
sahf
adc
(bad)
pop
jmp
mov
and
sub
push
push
sub
push
push
sub
adc
sub
adc
ins
in
push
mov
sahf
adc
fcom
jo
xchg
nop
mov
pop
adc
push
aam
adc
aam
sahf
fwait
test
loope
jp
adc
call
int3
adc
push
pop
xchg
adc
xchg
adc
rcl
adc
mov
jp
pop
pop
jp
adc
xchg
xchg
mov
pop
out
je
clc
adc
js
push
aaa
xchg
sti
je
xchg
adc
push
jp
adc
pop
xchg
adc
pop
sbb
xchg
fsub
loope
push
xchg
call
(bad)
adc
fmul
adc
pop
cli
in
push
pop
xchg
sahf
fwait
pop
ins
in
loope
ins
es
adc
rcr
adc
mov
rcl
out
push
ins
inc
clc
adc
popa
push
push
ror
adc
mov
add
loope
push
pop
and
mov
push
aaa
xchg
jnp
mov
adc
enter
in
sub
and
mov
sbb
pop
jnp
sbb
stos
jmp
mov
ins
in
xchg
call
dec
rcl
out
mov
js
push
rcl
out
mov
sahf
adc
ficom
jbe
xchg
adc
rcl
adc
mov
mov
pop
pop
xchg
xchg
mov
pop
out
je
clc
adc
js
push
aaa
xchg
sti
je
xchg
adc
push
jp
adc
xchg
cli
out
xchg
adc
mov
adc
pop
pop
out
popf
movs
and
xchg
jns
xor
clc
adc
push
cmps
btc
xchg
adc
cdq
xchg
adc
fwait
pop
adc
mov
popf
movs
fwait
pop
ins
in
loope
push
push
pop
mov
out
pop
and
je
clc
adc
jnp
push
aaa
xchg
sti
call
push
jp
pop
pop
xchg
cli
fwait
pop
xchg
adc
mov
ins
in
loope
and
push
out
push
sahf
fwait
pop
ins
in
loope
pop
xchg
jmp
ins
in
dec
xor
pop
xchg
jmp
ins
in
dec
mov
sbb
pop
adc
push
xor
pop
xchg
pop
mov
cmps
xchg
scas
pop
xchg
sti
or
xchg
adc
mov
xchg
jns
xor
clc
adc
and
xchg
scas
pop
xchg
sti
xor
xchg
adc
push
xchg
adc
aam
in
aam
mul
mov
pop
adc
mov
addr16
loope
ret
mov
adc
mov
xchg
adc
pop
xchg
adc
mov
cmp
sbb
pop
adc
push
sub
jnp
mov
adc
sbb
pop
xchg
in
sub
push
push
mov
sbb
pop
jnp
sbb
je
call
ins
inc
xchg
fsub
loope
ret
mov
adc
mov
xchg
adc
pop
xchg
adc
mov
cmp
sbb
pop
adc
push
sub
jnp
mov
adc
mov
pop
xchg
in
sub
push
push
mov
sbb
pop
jnp
sbb
pop
ins
in
loope
pop
in
pop
(bad)
nop
out
out
je
clc
adc
jnp
push
aaa
xchg
sti
ins
push
xchg
adc
push
jp
push
pop
xchg
cli
pop
pop
xchg
adc
fsubr
loope
xchg
clc
and
xchg
loope
ins
in
xchg
fst
das
and
jns
aaa
xchg
jnp
mov
adc
and
pop
xchg
in
sub
push
push
mov
adc
pop
jnp
sbb
xchg
xchg
fwait
mov
sbb
and
stos
xchg
movs
mov
xchg
pop
mov
pop
out
mov
js
push
rcl
out
mov
fwait
adc
ficom
jbe
xchg
adc
rcl
adc
mov
mov
pop
pop
jp
sbb
xchg
mov
pop
out
je
clc
adc
jnp
push
aaa
xchg
sti
movs
pop
xchg
adc
push
jp
sbb
cli
push
pop
xchg
adc
fsubr
mov
and
loopne
ins
in
xchg
fst
das
and
jns
aaa
xchg
jnp
mov
adc
push
sub
push
push
mov
adc
pop
jnp
sbb
xchg
xchg
fwait
mov
pop
sahf
pop
mov
ins
push
sahf
popa
xchg
adc
popf
movs
mov
push
popa
mov
jge
xor
sahf
fwait
pop
ins
in
loope
pop
xchg
jmp
ins
in
dec
xor
pop
xchg
jmp
ins
in
dec
mov
sbb
pop
adc
push
aaa
xchg
jns
aaa
xchg
jns
aaa
xchg
jnp
pop
xchg
push
jbe
cmp
push
push
pop
sbb
xchg
movs
gs
xchg
fdiv
loope
sbb
xchg
call
loope
in
loope
jp
sbb
xchg
and
push
push
push
pop
out
xchg
push
mov
fndisi(8087
sbb
out
xchg
sahf
clc
adc
mov
cmp
mov
ins
sti
hlt
pop
xchg
adc
xchg
out
mov
nop
jnp
scas
rcl
loope
in
loope
jp
sbb
sahf
xchg
test
in
loope
pop
in
pop
(bad)
jns
rol
jecxz
mov
(bad)
jecxz
ins
inc
loope
in
loope
jp
sbb
jns
rcl
jecxz
mov
cli
or
pop
xchg
in
stos
test
sbb
push
pop
adc
stc
gs
adc
call
jp
sbb
in
sub
and
mov
adc
je
clc
pop
je
clc
adc
xchg
adc
mov
pop
pop
jp
sbb
call
jge
pop
pop
xchg
jns
aaa
xchg
jns
mov
ins
sti
aam
xchg
adc
pop
adc
loope
adc
pop
pop
out
xchg
sahf
clc
adc
mov
and
mov
ins
sti
adc
xchg
adc
xchg
out
mov
xchg
jnp
mov
adc
call
jp
sbb
call
daa
out
mov
xchg
adc
pop
loop
pop
pop
xchg
adc
pop
adc
pop
outs
xchg
adc
pop
jbe
push
push
push
xor
cli
inc
ficomp
xchg
jnp
pop
xchg
xchg
imul
sbb
loope
push
or
es
repnz
idiv
push
stc
aam
iret
jecxz
ins
call
ins
pushw
mov
call
add
fcmovu
dec
xchg
inc
xchg
mov
les
call
movs
gs
xchg
sbb
(bad)
xlat
pop
and
adc
push
pop
leave
push
pop
xchg
call
out
add
push
pop
fstp
pop
xchg
sub
fldenv
push
push
sub
push
push
mov
pop
push
pop
sbb
aaa
movs
sbb
and
pop
out
loope
adc
sbb
sub
frstor
push
push
sub
push
push
mov
pop
push
pop
test
adc
ins
es
rcl
div
adc
aam
cmp
aam
sub
inc
aaa
push
push
sub
push
push
mov
pop
push
pop
test
adc
ins
es
mul
adc
in
ds
pop
gs
xchg
sbb
fldenv
xor
(bad)
adc
ins
es
rcl
test
push
cmps
xor
(bad)
adc
ins
es
adc
mov
call
dec
sub
mov
push
push
sub
push
aam
adc
aam
sub
frstor
push
push
sub
push
cmps
aas
mov
xchg
data16
(bad)
aaa
mov
xchg
call
cmps
btc
(bad)
adc
jne
push
push
sub
push
cmps
xor
(bad)
(bad)
aas
mov
xchg
sub
fldenv
push
push
sub
push
push
dec
addr16
out
loope
sub
push
les
sub
call
int3
dec
xlat
lahf
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
adc
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
or
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
xor
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
sub
adc
pop
(bad)
call
xchg
adc
sub
push
dec
mov
push
push
pop
adc
push
aam
out
pop
popf
out
xchg
call
sub
add
popf
lods
sbb
sbb
push
imul
adc
popf
out
popf
movs
mov
in
aaa
xchg
sti
fcomp
adc
jns
or
ins
dec
xlat
sahf
retf
xchg
repnz
adc
jo
add
pop
pop
pop
cmp
add
pop
loope
aaa
cdq
pop
pop
cmp
sbb
push
mov
in
loope
push
sahf
push
mov
add
bound
loopne
retf
adc
pop
fcom
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
outs
pop
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
bound
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
mov
adc
pop
ins
mov
adc
pop
ins
xchg
adc
pop
ins
sbb
mov
xchg
adc
pop
ins
ss
int
adc
pop
ins
ss
int
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
cmps
pop
rcl
mov
xchg
adc
pop
ins
mov
int
adc
pop
ins
ficomp
adc
pop
ins
ficomp
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
rcr
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
neg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
sbb
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
adc
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
or
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
add
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
cmp
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
xor
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
sub
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
and
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
outs
pop
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
bound
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
mov
adc
pop
ins
mov
adc
pop
ins
xchg
adc
pop
ins
sbb
mov
xchg
adc
pop
ins
ss
int
adc
pop
ins
ss
int
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
cmps
pop
rcl
mov
xchg
adc
pop
ins
mov
int
adc
pop
ins
ficomp
adc
pop
ins
ficomp
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
rcr
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
neg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
pop
rcl
mov
xchg
adc
pop
ins
ss
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
ins
ss
rcl
mov
xchg
adc
pop
