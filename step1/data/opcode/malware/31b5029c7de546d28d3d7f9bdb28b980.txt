pusha
cld
or
add
add
dec
add
add
add
add
add
add
add
push
xor
add
adc
add
and
add
add
and
add
add
add
add
add
dec
add
add
and
add
add
add
or
add
add
jle
jae
add
push
jge
add
add
sub
add
or
sub
add
push
sub
add
add
sub
xor
add
add
adc
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
xchg
or
xchg
add
xchg
pop
or
into
jle
add
add
cmp
adc
sbb
and
add
sub
add
and
add
and
add
sub
add
sub
add
push
sub
adc
add
add
add
adc
push
pop
ss
push
sub
add
sub
add
add
sbb
or
je
add
sbb
sub
add
push
mov
add
pop
sub
add
push
mov
add
outs
add
add
es
add
add
pop
add
add
add
add
pop
add
add
pop
xor
pop
sahf
sub
add
add
sub
add
add
sub
add
sub
add
push
sub
add
push
and
add
add
add
add
add
add
push
sub
add
sub
add
xor
add
add
adc
add
add
sub
add
add
add
adc
add
adc
add
add
add
adc
add
rol
add
push
or
sub
add
sub
sub
add
push
sub
add
push
and
add
and
add
sub
add
and
aas
adc
push
pop
jge
sub
add
push
outs
add
add
adc
add
add
add
adc
add
add
sbb
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sbb
sub
pop
sub
add
add
add
pop
add
add
or
pop
adc
pop
or
mov
jnp
add
add
pop
add
add
push
add
or
add
pop
add
or
rol
add
push
es
add
add
dec
jle
add
add
dec
xchg
jle
add
add
xchg
add
xchg
pop
and
add
add
sub
add
adc
add
add
add
adc
add
add
sbb
pop
inc
or
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
pop
or
or
add
or
stc
add
add
nop
add
add
push
add
sub
or
lods
add
and
add
and
add
sub
add
sub
push
and
add
add
sub
add
sub
add
sub
and
add
add
pop
or
js
(bad)
inc
push
and
add
add
add
or
add
add
or
adc
pop
and
sub
add
push
and
add
add
and
add
sub
add
sub
or
aas
(bad)
(bad)
inc
and
add
add
add
add
ret
add
mov
or
add
add
sub
add
or
push
sub
add
or
and
add
pop
or
add
pop
sub
add
or
add
push
add
add
jae
add
or
or
push
sub
add
or
ror
add
push
sub
adc
push
add
add
adc
add
add
jle
add
add
sbb
pop
inc
push
add
add
add
jg
add
xor
add
outs
add
add
add
add
add
adc
sbb
adc
and
add
and
rol
add
sub
add
sub
or
mov
and
clc
add
pop
or
mov
add
add
sub
add
jle
add
add
sub
adc
sbb
lods
add
add
and
add
and
out
add
sub
add
sub
add
or
add
add
add
pop
gs
and
or
arpl
(bad)
jmp
and
add
sub
or
add
sub
add
adc
add
cmp
add
add
add
jle
add
add
sub
pop
inc
add
add
add
add
add
add
add
adc
add
or
xor
add
xchg
and
test
add
sub
adc
add
adc
add
sub
add
add
and
inc
add
add
add
add
add
add
add
adc
add
sbb
sub
adc
adc
add
xor
add
adc
and
inc
add
add
add
add
add
add
add
adc
add
es
or
fsub
(bad)
lods
adc
sbb
or
and
add
sub
add
cmp
sub
add
or
rcl
sub
adc
add
cmp
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sbb
sub
and
lods
adc
sbb
mov
add
adc
and
add
sub
xor
add
add
add
adc
add
add
sub
inc
add
add
add
add
add
add
add
pop
add
push
or
push
xchg
and
jl
add
add
add
in
add
jle
add
add
in
add
xchg
jle
add
add
adc
pop
and
add
add
pop
or
stos
and
lods
adc
sbb
data16
and
add
sub
add
adc
add
sub
sbb
add
sub
adc
add
push
add
add
add
adc
add
add
push
sub
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
mov
add
add
add
add
sbb
add
es
adc
pop
or
add
popa
pop
jb
push
popa
inc
add
add
push
add
add
or
add
and
add
add
pop
sub
adc
sbb
add
add
add
sub
add
or
adc
pop
sub
pop
adc
inc
pop
pop
or
in
add
or
add
xchg
push
add
or
sbb
xor
add
add
pop
adc
call
push
and
and
add
pop
sub
adc
pop
jne
and
adc
inc
je
add
add
adc
and
add
xchg
and
arpl
add
add
inc
add
xor
add
add
adc
add
add
add
or
add
sub
add
xor
add
push
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
or
or
popa
pop
jb
push
popa
inc
add
add
push
add
add
add
inc
xchg
and
mov
sub
pop
or
add
or
pop
pop
or
and
pop
or
or
pop
sub
xchg
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
sbb
add
sub
nop
add
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
sbb
add
fwait
add
add
add
aas
add
add
add
inc
add
add
add
add
add
push
add
push
add
or
add
rcr
add
push
es
or
add
mov
sbb
pop
adc
lods
add
popa
pop
jb
push
popa
inc
add
add
add
adc
xchg
adc
(bad)
add
out
adc
push
adc
add
adc
add
or
adc
je
(bad)
inc
pop
pop
or
pop
or
or
add
pop
(bad)
(bad)
dec
sbb
adc
add
add
pop
adc
inc
(bad)
(bad)
call
push
and
and
add
pop
sub
pop
je
add
add
sbb
add
es
(bad)
inc
add
xor
add
add
add
add
adc
add
add
add
sldt
add
add
or
add
jle
add
add
add
add
push
add
add
add
add
add
add
add
jle
add
sub
add
adc
add
or
add
push
add
add
sbb
add
es
or
pop
or
popa
pop
jb
push
popa
inc
add
add
add
add
push
or
cli
pop
or
add
adc
add
sub
add
add
adc
sbb
inc
pop
pop
or
sbb
pop
sbb
cmp
(bad)
call
and
add
add
pop
or
inc
sub
or
inc
add
xor
add
add
adc
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
or
adc
into
add
pop
push
popa
inc
add
add
add
adc
mov
adc
mov
mov
add
sbb
sub
add
or
pop
pop
or
hlt
add
add
and
and
add
pop
sbb
pop
xor
adc
pop
sub
add
out
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
jge
(bad)
inc
adc
add
mov
add
or
add
jle
add
add
sbb
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
dec
add
add
add
add
or
or
retf
add
popa
pop
imul
add
add
add
sbb
mov
sub
or
adc
add
xchg
and
or
mov
add
add
pop
add
or
pop
pop
or
pop
sub
push
or
xchg
sub
pop
or
jnp
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
mov
add
push
add
adc
add
sub
xor
add
add
add
add
jle
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
or
xchg
add
add
add
sub
sub
add
push
and
add
and
add
add
sbb
add
jle
add
add
inc
jle
add
add
inc
xchg
jle
add
add
push
pop
popf
sub
add
mov
jae
add
or
add
add
cdq
add
add
sti
add
add
or
sub
and
add
sub
add
adc
add
sub
and
add
sub
adc
add
add
add
jle
add
add
movd
add
add
adc
pop
adc
inc
adc
add
clc
add
add
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
fadd
add
test
add
add
add
add
add
add
add
and
add
es
or
push
sub
adc
popa
add
jle
add
add
or
add
and
sbb
pop
popa
or
adc
push
cmp
(bad)
(bad)
jle
add
add
add
call
push
cmp
(bad)
call
mov
add
add
pop
sub
or
add
add
or
add
jle
add
add
add
add
push
adc
or
or
push
adc
cmp
(bad)
push
add
or
add
or
add
adc
adc
add
sbb
or
pop
xchg
adc
adc
popa
xchg
and
jno
add
push
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
pop
or
(bad)
(bad)
call
push
pop
and
adc
adc
push
xchg
adc
pop
push
xchg
pop
adc
cmp
not
pop
pop
punpckldq
or
add
adc
xchg
adc
sbb
push
cmp
or
add
sbb
adc
pop
or
push
cmp
add
and
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
sbb
push
cmp
(bad)
call
or
pop
adc
pop
or
push
cmp
(bad)
call
or
pop
xor
adc
pop
sub
add
push
cmp
(bad)
call
sub
adc
outs
sbb
add
or
add
add
or
add
mov
repnz
(bad)
dec
jne
add
add
add
add
xor
aam
add
or
add
jle
add
add
add
add
or
add
xor
add
adc
add
add
add
sub
add
xor
add
adc
add
sub
add
push
add
add
add
push
or
add
add
add
add
mov
pop
push
popa
inc
add
add
add
adc
test
sub
push
adc
mov
add
add
sbb
add
push
pop
pop
or
inc
or
dec
or
pusha
add
add
or
pop
pop
xor
sbb
(bad)
(bad)
call
add
retf
inc
add
pop
sub
sbb
add
popa
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
and
add
sub
jns
(bad)
call
xor
add
add
add
or
inc
or
add
xchg
add
add
add
jno
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
add
lea
add
add
push
je
add
sbb
and
and
add
push
je
add
sbb
add
add
pop
and
sbb
add
push
je
add
sbb
mov
push
jne
add
sbb
and
sbb
add
(bad)
(bad)
inc
jne
add
sbb
and
add
popf
push
je
add
sbb
and
xor
add
(bad)
(bad)
inc
je
add
sbb
and
sbb
add
add
or
add
je
add
sbb
sub
and
sub
add
adc
add
cli
add
add
add
adc
add
add
add
sldt
add
add
or
add
adc
add
and
add
adc
add
jbe
add
call
add
add
mov
add
add
add
add
add
add
add
push
adc
xchg
and
xor
add
sub
pop
xor
add
sub
bound
popa
inc
add
add
or
add
xchg
and
add
pop
or
pop
dec
xchg
and
mov
add
lock
or
or
inc
mov
add
sbb
outs
sbb
adc
sub
add
pop
or
inc
pop
pop
or
pop
sub
sbb
call
add
add
pop
sub
pop
or
inc
sub
add
popa
xchg
and
jno
add
cmp
(bad)
(bad)
inc
add
xor
add
add
add
add
adc
add
add
sbb
inc
or
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
cmp
add
add
add
push
or
and
add
xchg
and
xchg
add
pop
or
rol
pop
bound
popa
inc
add
add
adc
add
or
sub
add
xchg
and
or
lahf
push
sub
sbb
cwde
add
push
add
or
pop
pop
or
pop
sub
pop
or
jle
(bad)
call
rol
add
pop
or
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
push
sub
jge
(bad)
inc
adc
add
adc
add
push
add
adc
add
add
jle
add
add
add
or
inc
or
add
jo
add
jl
add
add
add
mov
add
add
add
add
add
add
add
cmps
add
add
or
pop
sub
pop
or
mov
sbb
popa
inc
add
add
adc
add
pop
add
add
and
add
add
pop
or
call
xchg
and
add
pop
sub
or
xchg
or
xchg
pop
sub
sbb
jnp
(bad)
inc
mov
add
sbb
sub
add
or
add
pop
xchg
and
add
pop
or
pop
(bad)
(bad)
inc
mov
add
sbb
sub
add
or
pop
pop
or
sbb
adc
and
add
add
pop
or
xor
(bad)
call
or
neg
cmp
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
cmp
adc
add
lock
add
add
adc
add
add
add
add
push
pop
or
add
add
or
add
test
add
aas
add
add
add
sub
add
add
add
add
add
dec
add
add
add
add
or
add
retf
popa
pop
popa
pop
push
popa
inc
add
add
adc
add
adc
add
pop
adc
cmps
pop
sub
adc
add
pop
adc
xchg
add
sub
add
or
pop
pop
or
xlat
add
add
sub
and
or
add
or
or
xor
adc
sbb
and
pop
add
pop
adc
pop
(bad)
(bad)
call
sub
sbb
add
dec
(bad)
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
pop
(bad)
(bad)
call
xor
add
add
add
add
jle
add
add
pop
or
inc
add
add
add
add
add
add
sldt
add
add
and
add
and
add
add
sbb
add
push
and
inc
add
sub
add
push
sub
add
push
or
or
add
xchg
and
add
pop
or
mov
add
add
sub
add
or
shr
add
push
sub
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
push
add
add
add
sahf
add
add
add
add
add
add
add
add
add
push
add
add
add
add
sub
add
sbb
add
mov
sbb
add
add
scas
add
popa
pop
push
pop
push
popa
inc
add
add
add
adc
cwde
sbb
push
adc
mov
mov
add
sbb
mov
add
sbb
and
add
or
adc
je
(bad)
inc
pop
pop
or
mov
or
add
test
add
add
test
pusha
and
add
add
pop
or
pop
sub
sbb
add
cmp
(bad)
call
push
and
add
add
pop
sub
adc
add
add
add
push
(bad)
(bad)
inc
je
add
add
adc
sar
add
std
(bad)
(bad)
inc
adc
add
stc
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
push
add
add
add
adc
add
add
add
add
add
add
add
add
sub
add
adc
pop
outs
xchg
and
add
pop
adc
adc
sbb
pop
adc
popa
pop
pop
push
popa
inc
add
add
add
adc
pop
ds
and
rol
add
out
adc
push
adc
inc
mov
add
sbb
add
or
push
adc
inc
pop
pop
or
ins
add
add
add
iret
add
add
sbb
pop
xor
pop
or
add
call
pop
and
and
add
pop
sub
pop
je
add
add
adc
and
and
add
pop
adc
inc
add
adc
add
fadd
add
adc
add
jle
add
add
add
sldt
add
add
or
add
adc
add
je
add
add
add
add
add
add
add
add
sub
add
or
add
adc
add
jnp
add
cmp
add
pop
add
add
sub
sbb
or
or
popa
pop
push
pop
push
popa
inc
add
add
add
add
sbb
sub
ror
add
add
or
or
add
add
add
add
or
adc
adc
add
cmp
(bad)
inc
pop
pop
or
pop
sub
pop
or
call
or
neg
or
inc
je
add
add
adc
add
pop
or
call
xor
rol
add
or
add
jle
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
popa
pop
daa
pop
push
popa
inc
add
add
push
add
add
or
add
mov
sub
push
adc
stos
add
mov
add
sbb
daa
add
or
pop
pop
or
and
sub
add
or
test
add
or
pop
xor
sbb
add
jns
(bad)
call
add
xchg
jle
add
in
sbb
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
push
sub
outs
(bad)
(bad)
inc
add
adc
add
call
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
add
add
or
add
pop
add
add
add
add
add
imul
add
add
add
ins
add
add
das
add
push
sbb
add
adc
and
add
add
pop
adc
popa
pop
outs
pop
push
popa
inc
add
add
add
adc
stc
rol
add
add
add
add
or
add
sub
add
or
push
and
add
xchg
and
add
pop
adc
inc
pop
pop
or
mov
pop
jb
and
add
add
sbb
pop
xor
sbb
add
call
sub
pop
jne
add
add
adc
sbb
add
add
call
xor
push
add
add
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
stos
add
add
add
add
add
and
add
mov
add
add
add
stos
add
add
xor
add
es
or
add
adc
and
add
add
pop
adc
popa
pop
dec
pop
push
popa
inc
add
add
add
adc
and
add
xchg
and
add
pop
sub
adc
pop
adc
inc
mov
add
sbb
mov
add
sbb
add
or
pop
adc
inc
pop
pop
or
nop
add
add
add
lea
add
or
pop
pop
xor
sbb
add
call
pop
pop
push
xchg
and
ins
add
pop
sub
sbb
(bad)
(bad)
inc
je
add
add
adc
and
and
test
add
add
inc
add
xor
add
add
add
sldt
add
add
inc
or
add
add
add
add
add
add
add
xor
add
push
add
add
add
jb
add
sub
add
adc
add
or
add
dec
add
add
xor
add
sbb
pop
or
add
push
popa
inc
add
add
add
add
push
or
cli
adc
sbb
sub
add
add
mov
add
sbb
sub
add
or
inc
pop
pop
or
add
pop
push
add
sbb
pop
sbb
(bad)
call
add
sbb
add
pop
sub
pop
or
inc
je
add
add
pop
or
call
xor
jmp
add
push
add
adc
add
add
add
add
or
add
jb
add
adc
add
add
add
dec
add
add
add
add
add
jb
add
xchg
add
cmp
add
inc
add
add
or
add
add
pop
adc
mov
push
pop
push
popa
inc
add
add
adc
add
adc
add
pop
adc
call
add
xchg
add
sub
add
push
pop
pop
or
stos
add
add
mov
and
sldt
pop
or
pop
xor
push
adc
(bad)
(bad)
(bad)
call
and
add
add
pop
adc
dec
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
sub
(bad)
(bad)
(bad)
inc
cmp
sub
add
or
shl
add
push
sub
adc
add
stos
add
add
add
adc
add
add
jle
add
add
add
xor
add
adc
add
je
add
adc
add
add
add
add
add
add
add
add
xor
add
or
sub
add
pop
or
retf
jle
add
add
and
add
add
mov
add
sub
add
sub
sbb
mov
add
mov
add
xchg
and
and
add
in
jb
add
jo
or
add
add
and
add
and
add
sub
add
sub
add
or
push
jne
add
add
pop
or
push
(bad)
(bad)
jle
add
add
add
xor
add
add
add
add
adc
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
xor
or
xor
add
xchg
and
test
pop
or
sar
add
add
add
cmp
or
add
push
sub
adc
add
sub
add
add
and
inc
add
add
add
add
add
aaa
add
push
sbb
sub
jle
add
add
cmp
sub
add
or
sar
add
push
sub
xor
add
pop
xor
inc
sub
add
sub
add
adc
add
sar
add
push
sub
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
pushf
je
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
add
adc
dec
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
scas
jb
add
inc
dec
scas
jb
add
add
add
add
add
add
add
rol
add
add
add
add
add
push
add
les
add
jo
or
jmp
jns
enter
mov
das
push
ins
arpl
pop
mov
xor
mov
shl
outs
or
call
mov
adc
icebp
icebp
inc
aas
add
mov
sub
int3
xchg
movs
cmps
push
xchg
sti
mov
ss
sub
sub
inc
fidivr
cmp
push
out
popa
xor
nop
mov
das
sbb
test
mov
mov
icebp
xor
cmps
mov
jp
(bad)
outs
cdq
xchg
and
popa
add
inc
xchg
stc
fist
lds
jo
push
push
push
cmp
pushf
pop
mov
(bad)
lock
out
sbb
cwde
(bad)
cmp
call
sbb
dec
and
cwde
repz
test
neg
dec
cmp
add
pop
gs
fs
test
ds
rcl
imul
stc
add
add
lock
lods
jo
fist
icebp
xchg
test
js
push
sbb
loope
mov
or
nop
es
push
or
jp
inc
mov
xchg
mov
adc
adc
xor
push
mov
cmp
int
push
mov
push
add
cmovge
hlt
ss
loopne
lods
mov
mov
jno
cld
daa
cmp
xchg
adc
rcr
sbb
cmps
mov
xchg
fs
xlat
fs
fsubr
stos
hlt
mov
jecxz
dec
xchg
cmp
and
adc
ret
push
dec
push
dec
in
jge
mov
adc
maxps
js
add
test
or
ja
mov
test
fucomi
sar
(bad)
in
cdq
cwde
(bad)
jmp
jbe
cmps
enter
retf
icebp
jno
cwde
(bad)
call
hlt
shr
mov
adc
into
sub
push
inc
and
cmp
inc
fild
lea
enter
dec
fcmovnu
jnp
test
mov
cli
enter
mov
popf
pop
push
xchg
add
cmp
js
mov
fst
popa
lods
(bad)
mov
hlt
jg
jbe
sub
adc
cmp
push
cmc
jbe
jmp
xchg
xchg
mov
cld
fidiv
test
mov
sub
call
push
or
movs
sbb
pop
js
cmp
int
icebp
jmp
sbb
sbb
push
mov
sub
mov
int
pop
(bad)
dec
out
sub
cmc
loope
fcomp
xchg
inc
movs
nop
xchg
mov
clc
adc
inc
mov
inc
mov
pop
(bad)
rcr
adc
xchg
xchg
mov
sti
push
rcl
ret
imul
mov
add
pop
cmp
adc
jge
push
stos
jbe
mov
pop
js
out
inc
sti
mov
in
mov
lock
dec
mov
mov
fsubrp
aaa
(bad)
bound
push
pop
scas
(bad)
push
(bad)
aad
xchg
movs
rol
mov
mov
and
jl
lds
mov
and
iret
inc
clc
mov
jle
iret
into
xor
mov
(bad)
cmps
sbb
movs
cli
lahf
das
popa
lea
xchg
push
loope
ss
in
and
dec
sbb
pop
pop
(bad)
or
fcmovb
xor
jp
fdiv
out
cwde
xchg
mov
icebp
call
push
xchg
jp
push
push
mov
add
test
(bad)
ins
add
daa
imul
pop
pop
not
lea
fwait
jns
and
sub
add
inc
lock
mov
cmp
ret
dec
popf
xchg
std
xchg
addr16
adc
pop
dec
fld
fst
sbb
pop
xor
fwait
inc
push
shl
xlat
mov
jmp
sbb
mov
cli
mul
mov
into
lods
adc
jl
xchg
iret
fadd
fadd
shr
popa
push
mov
je
mov
and
add
xor
push
aam
push
in
in
leave
push
mov
fs
fwait
in
test
cs
cmp
imul
aas
fwait
sbb
fst
mov
loop
or
ret
xor
stos
cdq
or
dec
aaa
sub
sti
xor
pusha
xor
mov
movs
pop
into
pop
mov
push
mov
clc
adc
sbb
aam
cli
stc
ds
sbb
sbb
push
mov
xor
sbb
mov
movs
ins
stc
lea
mov
cwde
dec
adc
xchg
adc
outs
shr
push
ret
cmp
inc
cmps
cwde
push
adc
sar
jmp
adc
stos
pop
(bad)
or
dec
mov
mov
push
dec
inc
rol
pop
loop
mov
and
adc
inc
aam
push
sub
fldcw
retf
mov
mov
jmp
adc
jl
cli
loope
xchg
or
(bad)
cmp
mov
xor
test
aam
cmps
je
jge
mov
ficom
fs
mov
push
rcr
psubq
jmp
ja
or
mov
push
push
je
shl
das
add
dec
outs
test
clc
sub
push
xor
fild
dec
xchg
lahf
jno
cmp
in
pop
jb
xor
jnp
ret
fs
loope
xchg
sbb
dec
pop
xor
xchg
and
pop
fcomp
scas
pop
repnz
fs
imul
cmp
cmp
inc
repnz
out
adc
push
(bad)
test
mov
out
jae
or
add
lds
lock
xor
enter
inc
cmp
(bad)
out
add
test
in
xlat
inc
movs
mov
jno
shr
dec
cld
rol
lock
outs
lods
int3
shl
leave
in
int3
cmp
fisub
inc
out
xchg
fsub
retf
cs
call
push
adc
aad
(bad)
adc
fdiv
bound
sti
aaa
in
mov
fwait
sbb
mov
push
popa
sub
xor
sub
jmp
(bad)
(bad)
(bad)
xchg
mov
and
push
or
cmps
stos
jmp
inc
stos
sbb
push
into
daa
pushf
shl
int3
(bad)
ins
pop
lods
gs
mov
and
call
pusha
ss
stos
retf
jle
xor
inc
into
jmp
jmp
push
fisttp
or
or
movd
movs
bound
add
sbb
sbb
lock
add
mov
fsubr
daa
aaa
adc
ficomp
jmp
add
xor
addr16
mov
cld
xchg
shr
xor
sub
xchg
mov
push
mov
xchg
xchg
mov
sbb
mov
ja
movs
jo
sti
call
stos
push
or
int
repz
dec
clc
inc
add
cwde
ret
gs
lahf
adc
jg
mov
ficomp
cmp
cmp
stos
jno
jo
gs
sub
jns
loopne
hlt
add
mov
and
push
das
sbb
(bad)
xlat
fist
inc
mov
int
(bad)
cld
cld
fadd
add
push
inc
inc
test
cmps
push
xchg
test
stos
dec
fidivr
jg
mov
and
dec
cmp
popa
call
sub
push
mov
pop
outs
sub
cmps
frstor
test
pop
adc
adc
jge
sub
jne
fwait
jl
or
jmp
or
sbb
xchg
arpl
push
jge
push
mov
push
nop
xchg
mov
fdivr
push
cli
lock
push
not
adc
adc
sub
hlt
retf
sub
lock
std
aad
sbb
gs
xchg
ins
lods
test
pop
sbb
xchg
add
arpl
jns
xchg
movs
lahf
mov
cmc
ret
out
(bad)
rcl
and
pop
shl
lea
test
adc
mul
(bad)
lds
(bad)
adc
pop
and
lods
add
jge
shl
push
mov
fmul
les
(bad)
(bad)
jbe
inc
inc
cmps
push
adc
cmp
outs
pop
or
rcl
xlat
cmp
mov
mov
sbb
loope
or
call
outs
les
cmp
xchg
cmp
dec
test
jmp
and
pushf
xchg
fidiv
popf
or
int3
sbb
inc
test
stc
daa
inc
fwait
retf
add
adc
xchg
mov
mov
lahf
jns
ret
in
test
repz
retf
mov
lahf
pop
mov
mov
inc
pop
add
in
cmc
adc
in
push
aam
and
gs
retf
ja
cmp
into
pop
jge
js
jg
push
fprem1
in
mov
rol
pop
push
and
scas
movs
sub
les
fmul
inc
imul
mov
xchg
lods
xchg
pop
in
pop
pop
bound
sub
imul
pop
das
stos
outs
xchg
pop
push
or
mov
push
jns
aas
xlat
cmp
sbb
or
add
add
movs
or
test
fidiv
fs
in
mov
dec
loope
dec
or
repnz
push
(bad)
fidivr
enter
inc
test
jg
push
fwait
inc
repnz
xchg
mov
cs
mov
fbstp
(bad)
arpl
out
loopne
les
xor
iret
loopne
xchg
(bad)
sub
dec
movs
pushf
push
std
inc
push
(bad)
and
jmp
mov
xor
out
push
mov
sbb
cmp
enter
add
js
stos
rol
cmp
dec
in
into
cmps
xchg
test
jmp
cmps
jmp
adc
arpl
fbstp
pop
int3
ja
jne
add
(bad)
out
popf
pop
mov
xor
daa
add
leave
jne
cld
mov
icebp
push
fist
xor
mov
pop
pop
jg
daa
icebp
sti
aaa
call
loope
jl
(bad)
push
pusha
outs
stc
(bad)
mov
pop
or
or
adc
ja
(bad)
aas
hlt
jae
ret
xchg
fld
adc
mov
dec
call
dec
dec
retf
sub
cwde
add
sbb
lahf
repz
jl
pushf
mov
pop
xor
xchg
icebp
inc
add
and
pushf
mov
into
cmps
punpckhdq
es
stos
cmp
xor
cmp
(bad)
jl
test
fdivr
xchg
cmp
push
xchg
repz
jle
mov
pop
stos
or
cdq
into
test
loope
cmps
push
fbstp
push
leave
fstp
(bad)
push
ret
lock
mov
cmp
mov
or
jnp
sbb
pop
in
sahf
mov
xlat
iret
ds
fst
push
add
xchg
cmc
ds
jmp
nop
je
mov
jp
outs
fisubr
lahf
mov
loopne
xor
or
xor
sbb
adc
push
jp
push
mov
mov
ss
inc
sar
pop
inc
data16
stos
push
dec
or
add
(bad)
shl
xchg
pop
push
cmps
push
out
(bad)
xlat
push
and
dec
adc
jl
(bad)
dec
es
ret
jns
jae
inc
xchg
out
fstp
scas
(bad)
popf
cmc
scas
cmp
call
and
or
dec
test
in
int
in
push
retf
clc
rol
mov
test
mov
push
lock
and
jmp
jns
mov
int3
sbb
popf
pop
pop
int3
mov
cmp
cmp
cmps
pop
scas
jbe
mov
push
outs
push
ret
sub
pop
sahf
xor
cld
iret
dec
mov
aad
outs
adc
mov
popf
xchg
sbb
inc
ins
or
test
repz
mov
adc
cmp
cmps
test
mov
shr
jecxz
scas
ror
mov
jns
sub
movs
test
enter
mov
pop
je
jbe
scas
or
inc
cmp
sub
pmaxub
add
xor
retf
push
retf
mov
xchg
mov
mov
sbb
add
adc
shl
and
mov
addr16
add
daa
sub
sbb
int3
test
push
repz
mov
into
sub
mov
loopne
dec
rcr
stos
ficom
push
dec
ret
das
mov
mov
imul
adc
pop
push
mov
jns
loopne
dec
fistp
repz
cld
mov
inc
mov
stos
fdiv
or
loopne
outs
retf
and
adc
xchg
sub
call
(bad)
jge
fnstsw
jge
pusha
in
test
xchg
pop
int
fsub
pop
(bad)
arpl
and
dec
inc
jle
ret
inc
jb
pop
sbb
and
adc
pusha
lods
daa
ret
jnp
mov
push
imul
sahf
jg
jne
cmc
rcl
loop
cmc
xchg
sub
cmp
mov
or
imul
ss
repnz
neg
cmps
test
enter
aas
rcr
sbb
ds
pop
pop
fisubr
test
scas
gs
aas
inc
out
clc
xor
sub
xchg
adc
inc
outs
cmp
jbe
stos
xchg
mov
push
jno
lds
xor
gs
int3
js
lods
int
arpl
div
test
(bad)
jg
dec
fld
push
in
xor
jg
pop
jge
cs
pushf
lahf
pop
mov
sti
adc
int
ret
pushf
cmp
adc
ss
pusha
imul
sbb
shl
iret
pop
(bad)
jecxz
mov
push
call
inc
jmp
sub
mov
jae
adc
mov
adc
pop
jp
jno
fstp
push
fcomp
fadd
dec
dec
pop
js
mov
cmp
out
out
xor
int
sub
sbb
xor
mov
sahf
stos
std
ret
xchg
adc
std
sub
cmp
jno
dec
mov
cs
pop
mov
aaa
aad
and
(bad)
movs
jmpw
call
pop
ret
sti
(bad)
cdq
mov
inc
data16
inc
outs
loope
call
dec
sub
int
out
int3
dec
and
bound
stos
clc
sbb
mov
out
xor
sbb
test
mov
jne
mov
repnz
sbb
imul
mov
xor
out
adc
mov
xchg
shr
adc
rcr
in
ret
scas
jbe
test
sbb
imul
pop
dec
pop
lea
push
sbb
ret
add
int
fisttp
inc
xlat
fnstcw
imul
jns
xor
dec
jbe
aam
hlt
cs
dec
dec
not
clc
test
mov
mov
mov
jle
cs
mov
pop
daa
mov
daa
ins
inc
scas
pusha
lods
xchg
or
sbb
icebp
ins
loop
sub
ins
inc
add
inc
dec
mov
data16
cmps
mov
pop
jns
imul
les
pop
loopne
mov
sbb
stos
push
add
movs
sub
mov
fsubr
cmps
xchg
mov
out
test
mov
ins
outs
mov
jp
cmp
popa
icebp
icebp
fist
bound
out
mov
test
jno
shr
mov
fistp
es
inc
pop
cmps
popa
or
int
retf
mov
mov
xchg
inc
inc
iret
push
add
gs
inc
and
addr16
lods
sbb
test
sbb
or
popa
dec
aaa
pop
nop
ja
cmp
push
sbb
sbb
mov
or
jmp
es
push
(bad)
retf
jnp
sub
mov
xor
lods
and
test
and
cs
lea
and
add
or
or
cmp
and
pusha
cld
push
inc
push
not
add
out
jno
sti
scas
mov
cmps
fdiv
mov
jecxz
outs
arpl
fsubr
adc
mov
rcr
xchg
outs
sub
mov
add
out
cmps
or
push
rol
test
mov
or
xor
sahf
cmp
mov
(bad)
adc
mov
popf
adc
popf
lea
sbb
jb
jno
fwait
movs
adc
xchg
inc
add
xchg
add
mov
pop
bound
out
pushf
sub
xchg
ins
sbb
imul
int3
or
jae
lods
fs
add
cmp
xchg
add
jg
jl
repnz
dec
nop
call
sbb
xchg
cmps
xor
stc
pop
mov
pop
sub
out
arpl
push
mov
or
popa
lahf
or
pop
mov
pop
push
pop
xchg
outs
daa
movs
loope
push
fld
jmp
push
dec
mov
mov
push
mov
ret
test
(bad)
and
repz
sti
div
sub
aas
pop
cdq
lahf
inc
jge
sti
aas
in
test
sahf
jle
jecxz
out
mov
jp
add
dec
out
push
(bad)
inc
cdq
call
repnz
adc
jge
and
jns
data16
stos
in
ja
aam
loopne
push
scas
dec
ins
jg
stos
das
mov
test
jo
ins
repz
fs
das
adc
inc
aad
stos
and
inc
lds
sub
xchg
ins
mov
push
add
pop
mov
int3
pusha
jmp
imul
mov
leave
cmps
outs
rol
es
lods
pusha
call
popa
loopne
jmp
xor
add
(bad)
jp
pop
mov
stc
lods
ret
cmc
jl
cmp
sub
xchg
xchg
adc
push
aas
ffreep
or
sbb
cmp
in
add
jnp
sbb
ds
(bad)
outs
xor
and
inc
jnp
push
sbb
mov
mov
retf
je
cmp
cmps
sbb
das
fsub
mov
test
ret
pop
cmp
push
out
xchg
es
or
sahf
dec
inc
dec
inc
popa
xchg
adc
or
fcompp
imul
out
fsub
out
cmp
adc
push
adc
fidiv
pop
mov
and
cli
clc
pushf
and
test
xor
and
inc
fcmovnbe
inc
and
pop
inc
sti
scas
ins
loope
pushf
inc
push
inc
push
aas
and
cmp
jecxz
pushf
int
pusha
push
sub
in
sub
fst
out
into
rcr
sub
sar
fsub
push
ret
sahf
int3
(bad)
mov
cmp
test
push
(bad)
sub
int
and
pop
in
mov
cmc
add
adc
clc
inc
fdiv
popf
ret
inc
iret
arpl
sahf
mov
enter
dec
xor
test
leave
or
push
inc
fcom
test
imul
(bad)
push
add
loop
adc
cmps
test
and
test
jnp
cmps
dec
cmps
pop
movs
push
arpl
ret
sub
mov
in
mov
xor
mov
ins
test
int3
call
test
mov
rcr
mov
iret
je
mov
pop
cmp
or
aam
mov
mov
retf
popa
cmc
mov
cmp
push
adc
mov
or
adc
xchg
jg
imul
add
scas
sub
mov
cwde
push
ret
(bad)
mov
mov
shl
push
daa
sub
cmp
call
call
cmps
cdq
mov
adc
jp
xor
mov
cmp
pushf
lahf
les
push
pop
xchg
pop
stos
jg
cmp
out
clc
rcl
dec
pop
inc
dec
or
push
dec
mov
sbb
xor
or
mov
or
jbe
ins
inc
sbb
mov
or
inc
cmp
add
jo
push
sahf
mov
test
loop
fsubr
cmp
pushf
(bad)
enter
xor
sbb
ffreep
bound
data16
fadd
retf
cmp
inc
jge
push
jl
cmp
cdq
mov
mov
cwde
push
pop
out
movs
or
or
mov
cs
aas
repz
aaa
xor
mov
mov
aad
push
dec
pop
push
icebp
and
dec
inc
bound
dec
inc
call
and
inc
adc
push
adc
ret
dec
sub
cmp
xchg
imul
loope
aam
fsub
and
fsubr
mov
jmp
cmp
mov
js
sub
push
fild
inc
into
mov
push
ins
push
dec
jnp
div
mov
or
xor
faddp
cmp
in
inc
movs
inc
in
pop
push
pop
push
(bad)
xlat
push
xor
fistp
inc
cs
cmps
inc
xor
jno
hlt
cmp
xchg
sti
push
push
ins
mov
pop
fucomp
dec
aaa
int
and
cwde
sub
stc
push
bound
or
shr
mov
push
push
push
mov
cmc
loop
(bad)
xchg
outs
les
lahf
mov
push
inc
dec
pop
adc
and
mov
icebp
add
xchg
outs
int3
loop
(bad)
and
mov
inc
push
(bad)
add
push
imul
cmp
adc
mov
scas
add
(bad)
adc
sub
mov
sub
fninit
xchg
test
mov
xor
mov
cmp
or
mov
jo
out
test
mov
test
ror
pop
mov
out
loope
or
push
add
dec
add
mov
data16
xor
movs
aad
mov
es
rcl
cmp
arpl
movs
outs
retf
fistp
aad
dec
cmp
out
mov
fmul
(bad)
jo
loopne
cmp
cs
pop
mov
mov
xchg
imul
call
jno
comiss
cmp
adc
lahf
mov
mov
xor
mov
lds
dec
cmc
mov
fs
sub
pop
outs
lock
inc
test
push
push
into
jg
cmp
pop
in
jne
imul
int
dec
fistp
jge
xchg
jbe
cmp
pop
pop
retf
aam
jb
ins
push
test
sbb
mov
xlat
rol
mov
sbb
xor
sub
fwait
in
(bad)
repz
shl
out
int
rcr
imul
jns
int
sub
popf
cmp
inc
pusha
je
repz
fld
lock
mov
and
xchg
xor
xchg
ins
sub
and
nop
pop
dec
les
int
adc
sbb
adc
jne
xor
(bad)
xor
mov
cld
(bad)
scas
jb
leave
adc
sbb
mov
int3
lds
cdq
pop
scas
ja
aas
xchg
call
(bad)
fimul
xchg
shl
nop
jmp
pusha
pop
mov
les
inc
mov
ds
push
loopne
in
xor
movs
mov
or
call
fcom
xchg
pop
rcr
or
xor
stc
and
test
and
push
mov
adc
scas
test
test
sub
out
ins
mov
dec
lahf
int3
cmps
scas
imul
inc
push
or
add
add
mov
mov
cmp
mov
dec
inc
(bad)
cmps
je
push
pop
leave
push
fcomp
les
out
push
retf
mov
xchg
fdivr
jne
xor
mov
xchg
push
pop
jmp
scas
sti
mov
retf
push
pop
jno
sub
pop
push
xchg
mov
mov
aad
imul
stc
popa
out
cmp
push
xchg
or
cmp
inc
out
pushf
scas
cmp
cmp
add
jbe
or
adc
sbb
stos
cmp
mov
sbb
lahf
loopne
ret
xor
inc
in
sbb
daa
adc
addr16
arpl
push
add
jno
pop
fwait
sub
sbb
sub
mov
mov
scas
fmul
stos
mov
ds
scas
pop
std
ja
dec
addr16
sbb
pop
inc
imul
daa
out
call
test
mov
pop
dec
sub
(bad)
cli
mov
mov
shr
xor
ss
mov
sbb
push
lods
jno
jmp
pop
je
mov
push
(bad)
cmp
jo
xor
jnp
add
rol
inc
movs
jb
fist
add
xor
mov
dec
mov
mov
out
cmp
jle
dec
fiadd
pushfw
mov
adc
movs
sub
daa
fld
out
sub
add
fdivr
mov
xchg
cmp
in
cmp
int
jg
pop
adc
out
cmp
aas
mov
fnstenv
je
cs
cmp
in
mov
jecxz
cmp
not
or
jecxz
bound
jb
xor
jl
jecxz
pop
dec
je
das
aas
out
xchg
fcomp
in
xchg
xor
sbb
stos
ficomp
or
jle
pop
inc
ins
mov
popa
movs
scas
fstp
and
mov
retf
loope
pop
push
push
jge
fnstenv
add
stos
and
mov
lock
mov
(bad)
sti
and
or
jbe
fimul
es
shl
ret
xchg
mov
sahf
push
mov
loop
test
mov
xlat
retf
sub
mov
sahf
jnp
jle
xchg
mov
test
adc
xchg
les
ds
out
push
push
or
push
aas
out
in
jmp
jbe
adc
test
bound
in
jno
push
sub
test
jb
xor
mov
ins
xor
cmp
sub
mov
cmp
mov
mov
shl
lahf
std
adc
push
aam
pushf
inc
ss
push
shr
test
imul
xor
push
or
mov
movs
inc
cwde
adc
into
sub
jge
outs
dec
mov
cmp
dec
mov
clc
popf
sbb
push
int
in
or
inc
test
test
int3
add
stos
fld
sbb
mov
hlt
(bad)
inc
adc
mov
jg
cmp
mov
dec
clc
iret
mov
mov
sub
scas
xor
sub
jge
adc
pop
ds
aam
pop
hlt
loopne
mov
jmp
loop
fsub
mov
or
aaa
(bad)
dec
xchg
mov
xor
test
scas
jns
movs
les
add
aam
pop
repz
out
mov
pop
aas
cmp
sbb
sub
icebp
mov
mov
aas
scas
xchg
add
sbb
mov
mov
adc
mul
jg
sub
and
sub
mov
dec
push
push
inc
or
lea
pop
mov
ficom
aas
xlat
dec
and
leave
adc
ret
push
jo
test
inc
dec
stos
sbb
rcr
cmp
jns
cmps
(bad)
lds
sub
jmp
cwde
jno
test
in
pop
push
aaa
sbb
pop
outs
(bad)
sub
dec
lds
push
repnz
pop
adc
mov
fbld
push
jne
cmp
mov
push
idiv
cmc
pop
sub
je
jmp
add
ins
xor
in
xchg
sub
jmp
ffree
add
lods
into
(bad)
cmp
enter
sbb
icebp
sti
scas
out
mov
or
ss
outs
xor
adc
lea
retf
dec
scas
or
sub
pop
movs
mov
xor
adc
sub
jnp
adc
xchg
call
dec
pop
push
xlat
call
(bad)
cld
ds
push
daa
dec
push
fld
mov
fisubr
gs
sbb
adc
daa
and
dec
mov
pop
inc
push
sbb
push
xchg
xor
xchg
les
popa
jl
sbb
fbstp
mov
aaa
not
push
ret
faddp
mov
cdq
cmps
lea
mov
mov
inc
fsub
ins
push
sbb
mov
and
xchg
add
into
or
movs
stos
retf
(bad)
imul
(bad)
fcmovnu
aam
sub
leave
dec
sbb
jmp
cli
xchg
dec
xor
ror
jmp
mov
mov
add
in
and
ja
mov
add
into
mov
push
and
jge
ss
mov
aad
shl
push
popa
push
jb
push
push
mov
ret
push
retf
das
mov
push
sahf
dec
push
ret
retf
scas
rcl
fst
(bad)
loope
cmc
sar
scas
out
mov
out
retf
js
push
pop
pushf
xchg
jae
cli
dec
movs
pusha
push
add
sbb
jmp
mov
aas
xchg
pop
inc
imul
fcomp
mov
push
dec
or
cmp
icebp
repz
test
cs
sub
rol
repnz
in
daa
mov
mov
pop
call
push
inc
jne
push
test
aad
lea
mov
jge
in
call
js
enter
out
sub
mov
pop
mov
addr16
fadd
popa
retf
aas
cmp
movs
cs
sbb
jl
retf
movs
push
pushf
sub
mov
das
push
(bad)
mov
pop
pop
test
add
xor
aaa
scas
loopne
stc
aas
xor
(bad)
aas
pop
or
sbb
outs
or
and
mov
jb
mov
fist
rcr
or
addr16
add
test
test
or
jp
rol
mov
retf
sbb
sti
xor
xor
and
mov
fnstsw
iret
(bad)
add
dec
adc
cmp
repnz
mov
sahf
inc
pop
je
jno
fst
aas
add
sub
inc
lods
add
icebp
lock
dec
cdq
add
sbb
pop
mov
repnz
pop
dec
not
sbb
jae
dec
push
and
push
xlat
fisubr
push
mov
mov
jb
ret
jmp
push
mov
sub
xlat
and
jge
stos
or
test
bound
popf
std
ud0
sbb
xor
xor
popa
and
retf
cmps
xchg
and
sbb
mov
fucomp
neg
sbb
push
loopne
cmp
or
add
pop
not
pop
rol
add
or
std
add
mov
add
or
retf
cmp
mov
adc
adc
int3
ins
inc
les
jmp
dec
mov
aaa
sbb
leave
ins
popa
xor
rcr
push
pop
adc
fwait
inc
mov
repz
imul
cmp
into
sbb
(bad)
pop
pop
xchg
jns
add
ret
inc
xor
pop
sub
pop
pop
mov
pop
ret
or
fsub
bound
repz
outs
sub
aad
mov
pusha
mov
mov
sub
test
int3
ror
nop
xchg
jle
and
ret
fstp
mov
arpl
retf
dec
ror
data16
mov
mov
shl
xor
sbb
jae
lock
les
adc
inc
pop
movs
(bad)
inc
jge
jle
cld
inc
pusha
stos
std
aas
dec
xchg
jnp
sub
out
pop
mov
sub
xchg
jbe
or
jmp
bound
inc
in
(bad)
cmps
(bad)
mov
sbb
cli
xor
enter
(bad)
add
scas
idiv
scas
test
and
mov
cs
jge
cmp
push
pusha
dec
mov
scas
jnp
out
ror
dec
mov
aam
dec
jmp
push
jg
push
mov
(bad)
mov
mov
movs
lods
sbb
jl
jle
ins
pop
movs
fucomp
(bad)
fsubrp
aad
(bad)
outs
push
mov
dec
push
xchg
vandnps
loope
cli
pusha
pushf
out
xchg
mov
pushf
retf
iret
cmp
pop
pop
mov
mov
loopne
aas
aaa
retf
loope
dec
(bad)
pop
je
sbb
out
pop
sbb
and
or
retf
(bad)
pop
jge
out
rcr
(bad)
xchg
sbb
jb
adc
mov
push
sub
push
dec
(bad)
sbb
xor
sub
jmp
xor
and
adc
push
pop
cdq
scas
leave
cmc
fcomp
pop
pop
or
push
mov
add
test
retf
and
push
push
lods
pop
mov
sar
sahf
aad
sub
push
loope
rcl
dec
cdq
xchg
out
lods
fincstp
shl
mov
loop
sub
xchg
sbb
gs
cmp
popf
mov
mov
cmp
cwde
xor
ins
imul
cmp
int3
push
mov
jmp
je
in
jbe
cld
fs
and
out
dec
(bad)
jg
ja
mov
pop
or
dec
(bad)
retf
pop
fmulp
adc
dec
stos
test
jecxz
pop
popf
ins
cmps
ins
faddp
push
neg
rcr
(bad)
jl
sti
call
add
cmp
test
pop
scas
xchg
cdq
outs
lock
outs
fadd
shl
je
stc
je
ficomp
enter
xchg
jo
jnp
rol
xor
ja
jmp
sbb
outs
mov
sub
(bad)
mov
cmp
lods
dec
xchg
jo
xor
cmc
les
dec
pop
xchg
fld
inc
jl
or
out
je
dec
adc
mov
adc
jno
fistp
mov
add
rcr
jne
test
(bad)
out
pop
sub
mov
fucompp
push
ins
adc
dec
jecxz
jae
mov
push
adc
pop
add
outs
push
xchg
imul
jmp
std
pop
push
dec
lds
sahf
jne
jno
dec
sub
push
mov
push
shr
push
cmp
in
leave
xor
jne
leave
inc
sub
pop
in
cmp
fdivr
jg
(bad)
lds
pop
sub
(bad)
daa
mov
js
lods
cmp
mov
xchg
outs
retf
and
or
sub
and
int3
jmp
int3
jno
and
fst
dec
inc
mov
cmp
mov
inc
in
mov
stos
mov
push
inc
mov
mov
adc
retf
dec
xchg
je
inc
jmp
pop
cmps
cmp
xchg
cdq
(bad)
out
je
jnp
and
push
bound
xchg
add
cld
(bad)
hlt
sub
mov
mov
out
push
mov
rcl
sub
je
dec
lods
cdq
cmps
je
sbb
push
jno
sub
dec
xlat
push
add
mov
mov
out
mov
fcmovb
ret
dec
mov
out
jmp
icebp
test
js
jne
add
jmp
jg
cmp
daa
imul
inc
repz
xchg
fs
xor
add
shr
pop
or
push
jge
cmp
(bad)
aad
push
pop
cmps
or
xchg
inc
xchg
in
xor
(bad)
mov
les
inc
enter
sub
in
mov
mov
or
sub
ins
sub
push
inc
cmp
clc
je
dec
icebp
jmp
cmp
es
pusha
and
aaa
repz
push
dec
aad
ror
add
imul
lahf
and
popf
push
jb
gs
jb
xor
cmp
or
sti
popf
cdq
mov
enter
mov
sar
fs
jbe
and
mov
jae
pop
ins
(bad)
fidivr
or
sub
mov
mov
fist
and
and
data16
xchg
mov
nop
jmp
sub
cmp
push
jle
sar
and
psubsw
sar
das
test
sbb
call
inc
and
iret
ret
ds
mov
mov
sub
cmc
jg
and
cwde
leave
inc
dec
outs
xor
xchg
sbb
push
sbb
dec
loope
mov
stos
jl
clc
add
mov
out
dec
outs
(bad)
xor
rcl
ins
mov
nop
sub
jecxz
and
sbb
fbld
cmps
in
sub
and
mov
inc
xchg
aad
movs
retf
jmp
out
jbe
(bad)
std
je
test
xchg
jbe
inc
cli
daa
fwait
pop
sub
repz
mov
jp
(bad)
rol
in
ss
pop
dec
shl
js
jae
aam
and
sbb
or
stc
xchg
fwait
cmc
stc
jecxz
mov
sbb
(bad)
fist
and
je
scas
(bad)
loopne
jns
int
sbb
sub
inc
shl
and
and
addr16
sbb
jp
add
cs
out
or
pop
cwde
lock
and
sub
jb
leave
push
inc
popf
adc
mov
lds
fcomp
int3
js
aam
gs
test
addr16
push
(bad)
mov
fdivrp
out
jl
mov
inc
xchg
or
and
movs
push
test
and
add
sub
test
movs
int3
mov
loop
stos
in
ret
cmp
xchg
pop
and
jmp
push
mov
mov
data16
imul
adc
loop
lahf
sbb
sbb
pop
inc
mov
aam
lods
call
cmp
inc
xchg
or
popa
fdivr
data16
jns
pop
mov
sbb
adc
movs
inc
gs
(bad)
cmp
xchg
aad
movs
push
jmp
sub
in
dec
int
jle
dec
test
push
cmp
mov
or
xor
sti
xor
popa
mov
xlat
push
loop
fstp
retf
jl
jmp
xor
sbb
xchg
jmp
xor
bound
jge
sbb
lods
shl
xchg
or
fild
into
xor
ffree
std
iret
out
jecxz
push
rcr
je
test
iret
out
mov
icebp
aad
gs
mov
enter
pop
loope
mov
out
(bad)
fwait
cmp
mov
and
sub
aam
pop
scas
or
inc
seta
jg
xchg
sbb
ret
and
imul
inc
cmp
or
movs
int3
mov
sahf
in
xchg
fs
dec
pop
push
retf
dec
jecxz
popa
add
inc
out
mov
test
push
pop
jb
push
dec
test
faddp
push
in
jo
xchg
push
ror
cmp
xchg
lock
sbb
out
in
or
inc
idiv
cdq
loop
mov
leave
jg
cmps
mov
cmc
inc
mov
pushf
out
stc
add
mov
es
sub
(bad)
or
(bad)
jmp
inc
mov
pop
daa
pop
mov
pushf
sbb
outs
loop
fs
xchg
mov
(bad)
loopne
cmp
pop
or
push
cli
cmps
aas
pop
ss
data16
xor
inc
stc
shl
add
sbb
xor
rcl
push
je
nop
pop
in
inc
xor
rcl
sbb
movs
xor
inc
cld
mov
cmp
loopne
mov
das
push
(bad)
sahf
jae
mov
fisubr
mov
fs
movs
js
in
aaa
test
push
add
cld
and
mov
imul
dec
mov
mov
sbb
sbb
jnp
dec
add
sbb
push
pop
mov
loope
mov
cmp
cmps
jp
lahf
mov
mov
jbe
loope
(bad)
xor
fist
out
push
cs
adc
fwait
fwait
scas
push
mov
aam
iret
inc
mov
movs
sub
aas
jmp
pop
dec
xchg
lods
pop
fcom
cli
dec
cwde
in
cmc
iret
xor
loop
in
jmp
inc
push
xor
mov
xor
not
leave
jb
jmp
add
imul
mov
ret
adc
inc
js
and
cmp
(bad)
sbb
hlt
gs
dec
cmp
push
inc
call
call
cli
rol
adc
mov
arpl
add
std
out
into
cmp
loope
add
lea
das
jge
xor
xchg
shl
mov
mov
fcom
mov
mov
jo
in
inc
dec
mov
in
lock
sbb
aam
stos
or
lds
or
inc
dec
aad
es
ja
fucomip
les
outs
in
xchg
mov
icebp
fistp
jp
aas
xchg
xchg
and
inc
cmp
jne
inc
rcr
mov
std
xchg
in
gs
(bad)
pop
pop
mov
mov
adc
xchg
pusha
imul
lock
and
sar
inc
mov
leave
pmaddwd
adc
xchg
cmps
xor
call
or
mov
sub
inc
ss
sub
cmp
lahf
test
xor
cmp
pop
stos
repz
shl
xchg
mov
daa
mov
fs
sub
mov
scas
fidivr
adc
mov
fnstcw
out
dec
dec
sub
and
inc
mov
test
jno
inc
rcr
cmp
ror
adc
loopne
mov
hlt
mov
fistp
sbb
xchg
jns
push
or
scas
xchg
sbb
mov
jns
mov
mov
inc
or
pop
inc
int
in
scas
dec
sub
jo
retf
sub
sbb
scas
pop
loopne
sub
mov
and
cmps
and
dec
shl
xchg
cmc
shl
push
scas
mov
lods
ud1
or
cmp
adc
jg
sbb
cwde
pusha
and
pop
xchg
cmp
sbb
rol
(bad)
and
aas
mov
out
out
imul
or
stc
or
(bad)
in
es
and
jno
mov
sbb
mov
int
(bad)
mov
add
outs
sbb
cli
mov
call
leave
push
imul
bound
jo
sub
fnstenv
dec
fisub
inc
inc
cmp
outs
jns
popf
mov
push
push
sbb
or
or
cld
call
sub
retf
jmp
dec
xor
ds
jo
sahf
add
jne
sub
add
cmps
sar
(bad)
jl
call
popf
jecxz
es
and
int
add
xchg
ins
stc
mov
fs
popa
ja
hlt
gs
pop
movs
mov
pushf
mov
repz
xchg
or
mov
xor
mov
ret
or
sub
cmps
imul
(bad)
into
sbb
sti
(bad)
mov
pop
rep
out
(bad)
iret
(bad)
cwde
out
aas
leave
(bad)
adc
cmp
inc
(bad)
mov
xor
movs
(bad)
inc
mov
shl
dec
push
inc
push
pop
mov
ffree
cmc
aaa
xor
or
movs
imul
leave
push
mov
dec
(bad)
ss
ins
hlt
ja
(bad)
mov
push
dec
nop
fst
test
fisttp
cmp
pop
daa
fwait
test
mov
pop
mov
xchg
ror
call
inc
adc
pop
and
pop
mov
ffreep
test
mov
and
mov
or
sub
pop
mov
mul
and
pushf
pop
inc
data16
mov
or
mov
(bad)
retf
test
ins
adc
adc
pushf
scas
adc
cli
fisub
(bad)
jne
add
addr16
out
jmp
(bad)
scas
lds
cmps
pop
ftst
jecxz
imul
into
jle
not
push
fdivr
jge
adc
pop
add
inc
sti
pop
lock
shl
sti
adc
cmp
inc
ffree
or
in
mov
xchg
mov
loopne
or
xor
dec
enter
pop
pop
mov
xor
xchg
mov
push
add
sbb
(bad)
fsub
fild
sbb
cmps
add
fsubr
sbb
adc
outs
cwde
in
pop
push
or
jns
or
cmp
dec
pop
and
nop
imul
mov
mov
or
sub
or
jae
push
mov
clc
bound
cmp
or
jmp
rcr
dec
push
in
bound
aam
mov
mov
add
not
fld
push
push
stos
xchg
aas
pop
mov
pop
imul
dec
loopne
test
stos
icebp
add
(bad)
cmps
jle
retf
jle
movs
mov
call
fistp
out
jg
clc
jne
inc
lock
stos
push
loope
sbb
outs
pop
mov
arpl
call
mov
dec
push
sbb
(bad)
push
mov
loop
loopne
push
loop
cmp
adc
or
add
test
pop
pop
imul
out
idiv
or
mov
jae
shr
call
inc
jge
sbb
test
push
sub
pop
cmp
mov
test
test
gs
idiv
dec
mov
sar
sbb
sbb
or
fist
stc
stos
or
xor
add
push
and
push
push
bound
add
imul
outs
cli
int
shl
aad
aaa
jno
es
das
call
mov
hlt
imul
xchg
xor
push
jg
sbb
push
cmp
(bad)
cs
xor
cdq
dec
out
mov
and
jbe
pop
(bad)
dec
ins
mov
jne
sub
dec
jae
cli
or
mov
push
xchg
les
sti
xor
popf
sbb
aas
stc
xor
dec
fwait
outs
bound
je
out
dec
adc
mov
sbb
popa
stos
xchg
add
cwde
into
shr
inc
lahf
je
jnp
in
mov
sar
jb
xchg
dec
cmc
pop
ret
push
xor
push
imul
jecxz
int3
cwde
test
fs
fiadd
imul
push
aaa
pusha
mov
pop
inc
js
les
int3
mov
retf
sti
out
push
inc
test
pop
and
fnsave
xor
adc
pop
and
push
ins
pop
jecxz
push
sbb
popa
arpl
push
dec
sbb
stos
inc
push
sbb
ss
pop
jl
push
cld
out
mov
into
jno
shl
pop
ror
adc
cmps
test
add
jo
dec
ret
in
add
mov
rcr
test
jnp
ja
test
loope
pop
adc
or
inc
xchg
fdiv
push
adc
in
cmp
cmc
rcr
pop
sahf
mov
call
movs
movs
jg
ds
and
out
outs
jo
cs
mov
xlat
loope
and
je
sti
mov
stos
into
sbb
sbb
xchg
push
mov
inc
je
dec
xchg
pop
pop
or
movs
cmp
push
in
cli
sbb
aad
ss
dec
lock
xor
arpl
jmp
aaa
cwde
add
cmp
movs
sub
call
(bad)
(bad)
(bad)
xor
loope
daa
push
fisubr
xor
xchg
dec
mov
jnp
and
stos
cmp
sub
in
inc
add
je
jmp
adc
mov
inc
lea
xor
ret
ficom
fidivr
fbstp
mov
into
jmp
jg
xor
mov
mov
mov
add
sub
in
jge
or
inc
sti
and
push
mov
push
lds
jo
cmp
daa
cmps
inc
iret
push
enter
ret
fsubr
pop
xchg
dec
aas
cdq
jno
outs
mov
cli
hlt
sub
call
inc
jp
sets
push
push
inc
jb
jo
call
jne
(bad)
out
add
xchg
dec
and
leave
imul
cwde
mov
mov
or
cwde
xor
xchg
and
jb
stos
frstor
mov
xchg
retf
movs
retf
retf
cdq
adc
test
dec
xor
xor
mov
mov
mov
enter
push
(bad)
push
mov
add
pop
pop
mov
inc
mov
pop
ret
jbe
jnp
sub
fbld
fs
mov
clc
in
into
adc
mov
fst
enter
in
ss
or
das
int
mov
enter
dec
jmp
xor
cmp
or
call
scas
mov
call
movs
icebp
addr16
aas
aam
xor
mov
shr
ja
clc
popa
dec
cwde
iret
or
xor
xor
sub
mov
leave
mov
ja
repz
imul
ficom
mov
ja
stos
mov
fldenv
scas
cmp
jg
push
or
xor
jmp
or
imul
repz
stos
or
fs
cmp
jmp
mov
xlat
stos
push
jns
cmps
mov
mov
lea
sub
inc
dec
ja
dec
(bad)
and
jle
ret
lods
scas
mov
xchg
mov
and
les
push
inc
jmp
(bad)
outs
or
xor
test
ss
ror
ss
mov
or
or
inc
into
xchg
rcr
jl
sub
(bad)
test
add
jmp
adc
mov
xchg
xchg
cdq
and
sbb
add
imul
sub
int3
nop
jle
and
sub
push
add
test
cmc
int3
mov
push
xchg
jle
add
daa
inc
push
adc
popa
sbb
inc
inc
mov
nop
mov
addr16
(bad)
call
dec
and
mov
pop
or
ins
mov
mov
sub
mov
pop
inc
sbb
int
lods
xchg
pop
mov
push
sbb
xor
xor
jns
stos
aas
jmp
(bad)
sahf
inc
jp
pop
int3
push
sbb
leave
xchg
sar
or
push
mov
das
imul
sub
cmps
push
xor
pop
xchg
push
lods
lods
lock
adc
xor
outs
and
cmp
pop
push
dec
cld
or
aas
popa
inc
push
jg
cli
mov
fs
outs
cmp
jbe
lods
or
cdq
adc
cwde
push
push
inc
dec
mov
std
out
idiv
cmp
mov
mov
out
sar
sub
mov
dec
xchg
and
fdiv
xchg
pop
inc
sbb
dec
cmc
pop
out
ficom
xchg
or
icebp
cwde
sub
stos
(bad)
stos
ins
nop
in
jle
sbb
dec
mov
loope
jb
pop
push
mov
jmp
sub
push
push
pop
push
add
or
aaa
add
jno
sub
pushf
and
enter
rol
ds
jecxz
xor
sub
(bad)
dec
xchg
repz
push
or
dec
sbb
xor
sete
inc
xor
push
jae
and
pop
cmp
or
jo
xchg
or
(bad)
jmp
and
sti
fisttp
jmp
fs
inc
sti
jae
int
sub
fdiv
lds
jmp
add
xchg
push
mov
aaa
shl
mov
xor
cmp
push
xor
sub
push
js
mov
mov
pop
arpl
cmp
dec
pop
and
cmps
clc
push
add
xchg
ins
adc
push
inc
and
cmp
sti
sub
call
cli
cwde
push
ins
push
scas
es
xor
mov
mov
cmp
popa
mov
out
repz
fwait
in
dec
cmp
ror
loop
jbe
popa
push
inc
pop
push
adc
mov
inc
ins
jmp
pop
dec
aam
xchg
out
hlt
pop
int3
xor
ds
retf
mov
inc
xchg
pop
in
mov
popa
xchg
pop
ret
hlt
xchg
scas
pop
mul
mov
loope
pusha
stc
sbb
sub
arpl
sbb
xchg
mul
test
int3
test
sub
daa
nop
inc
inc
ds
repz
mov
jae
mov
push
jl
add
sbb
fsub
mov
aad
and
in
pushf
cmc
cmp
mov
in
cmp
jp
sub
pushf
pop
push
cmc
inc
xchg
jmp
push
popa
dec
and
shl
ja
add
popf
cmps
adc
test
scas
outs
std
or
mov
es
dec
or
cvttps2pi
xor
js
xchg
imul
inc
sbb
dec
stc
or
sbb
mov
iret
push
sub
scas
jmp
add
repz
mov
enter
push
outs
inc
popa
sbb
outs
pop
inc
inc
mov
or
adc
daa
jg
mov
jnp
pop
(bad)
repz
push
mov
inc
in
addr16
adc
sbb
mov
dec
sub
push
sub
push
sbb
push
pop
inc
addr16
in
outs
mov
cld
int3
mov
jle
rol
pop
dec
adc
popa
jle
jns
das
mov
aaa
push
mov
jp
ja
loopne
xor
or
imul
add
adc
mov
out
mov
mov
mov
fisttp
sahf
mov
sub
mov
pop
into
stos
push
or
dec
call
sbb
and
mov
push
and
pop
hlt
fnstsw
mov
sbb
js
leave
inc
adc
push
pop
es
in
jmp
xor
stc
addr16
fisttp
dec
mov
dec
cmp
retf
sub
xor
adc
add
sahf
inc
fwait
hlt
cwde
or
push
out
jp
(bad)
pop
push
mov
les
js
pushw
jg
fdiv
rcr
pop
push
icebp
sub
mov
push
pop
lea
fisttp
popf
test
data16
in
mov
rcl
(bad)
push
jns
rol
jne
pop
xor
sbb
pop
ret
pop
ins
rcr
mov
cmps
imul
cmp
jecxz
adc
and
and
push
inc
jecxz
aas
test
repz
subps
push
jbe
dec
gs
(bad)
(bad)
cmc
xor
jge
xchg
jb
xchg
popf
adc
outs
pop
pop
and
mov
test
add
sub
push
data16
pop
aam
pop
mov
scas
cli
pop
inc
xchg
or
add
dec
dec
sub
push
retf
mov
jecxz
repz
fisttp
arpl
sti
xor
jne
fisubr
xor
ret
dec
mov
out
call
int
arpl
sub
leave
leave
outs
inc
mov
outs
push
repz
cmp
cmc
aas
mov
popa
bound
cs
mov
retf
xchg
pop
mov
popf
outs
jge
in
mov
sbb
mov
leave
cli
adc
ffreep
and
jae
xchg
hlt
pop
and
jno
inc
inc
mov
adc
push
pop
cmp
dec
mov
int3
jmp
in
into
rcl
jae
cwde
sub
stos
xchg
dec
and
mul
adc
mov
cmp
dec
inc
add
aam
xchg
mov
ss
adc
movs
or
adc
lahf
push
es
xchg
shr
fld
adc
dec
cmp
out
pop
hlt
xchg
repz
xchg
inc
mov
xor
cmp
jae
cdq
test
ds
lods
push
pop
mov
xor
push
sub
imul
and
int
add
(bad)
les
sar
dec
iret
sti
int
sub
cmp
test
retf
sub
sub
dec
sub
adc
movs
mov
cli
mov
mov
mov
ret
ins
cld
adc
or
pushw
sbb
gs
lea
pop
test
ret
ror
pop
jl
stos
bound
inc
aas
sbb
and
sbb
cmp
dec
shl
in
cmp
fist
xchg
rol
mov
inc
mov
push
mov
mov
inc
add
aam
aas
pop
retf
adc
dec
add
pop
mov
cmp
lods
dec
jnp
adc
bound
xlat
ror
enter
(bad)
movs
sti
out
aas
outs
shr
jecxz
sbb
gs
inc
inc
loope
out
mov
mov
cmp
inc
jns
jo
dec
push
fs
clc
and
int3
add
sub
cdq
adc
pop
loope
lods
inc
cmps
outs
sbb
dec
mov
clc
fcmovb
vpsubusw
add
(bad)
or
shl
lock
cmp
movs
div
int3
sbb
popa
ins
sub
hlt
fldenv
test
jb
lods
sbb
bound
push
mov
mov
lods
std
out
div
or
cmps
mov
mov
mov
add
ss
inc
lea
jp
mov
fistp
ins
test
jle
(bad)
aad
stc
scas
cld
or
stos
das
es
leave
pop
leave
(bad)
fs
xor
mov
dec
jl
outs
cdq
cmp
int3
inc
cmc
movs
mov
add
xor
shl
std
dec
inc
in
sar
aam
mov
into
cli
aam
pop
clc
pop
add
pop
pop
xchg
clc
push
add
or
rcl
jp
inc
xchg
jg
std
iret
jle
xchg
fcomip
stos
sub
aaa
xor
cdq
or
cld
call
sub
lock
hlt
xchg
inc
and
pop
aad
push
mov
add
sbb
mov
shl
sar
push
pop
retf
rcr
pop
xor
repz
sahf
sub
add
mov
mov
add
stc
call
fist
jecxz
data16
adc
xchg
rol
aad
push
ss
mov
fmul
xchg
fidiv
stos
mov
dec
or
sar
push
mov
pop
mov
dec
jbe
lods
outs
xchg
pop
adc
mov
cmp
jl
repnz
(bad)
xchg
dec
cli
aas
fist
push
out
push
xor
mov
sbb
std
jo
mov
pop
jb
retf
mov
sahf
shr
dec
xchg
mov
sbb
dec
or
and
push
js
js
push
aas
imul
in
dec
cmps
fsub
(bad)
pusha
ins
cmp
sub
ds
pop
and
jmp
test
mov
jbe
mov
lahf
inc
mov
test
inc
cmp
ror
fwait
xor
and
in
xor
mov
add
ins
int
mov
(bad)
jb
add
push
or
shr
adc
scas
dec
sub
sbb
add
pop
push
mov
clc
retf
in
and
xchg
fbstp
mov
xchg
xchg
mov
retf
jp
cmp
loope
sahf
jge
call
cmp
(bad)
mov
lods
dec
mov
dec
sbb
int
in
ins
or
fnstenv
in
xchg
nop
ret
mov
shr
sub
call
sub
pop
sahf
pop
aaa
sbb
and
(bad)
lock
xor
mov
lods
jmp
lds
adc
fadd
cmp
xchg
stc
cmps
push
or
(bad)
lds
jne
test
in
cli
xchg
loop
fucomp
addr16
out
jg
cmp
add
retf
(bad)
in
adc
xor
sub
(bad)
in
stc
sub
test
test
and
in
jns
and
std
rcr
mov
std
xor
not
mov
out
cli
enter
jp
jbe
and
mov
fadd
mov
sbb
dec
(bad)
mov
ja
mov
dec
mov
outs
es
movs
pop
adc
or
push
rcl
sbb
push
data16
mov
ficomp
sar
pop
add
sub
nop
add
push
sar
xor
jae
iret
cmp
lahf
mov
pop
(bad)
dec
jmp
pop
cld
fadd
iret
daa
xchg
btr
loopne
sbb
cld
cmp
ja
cdq
push
mov
cmp
jns
clc
in
imul
push
(bad)
inc
push
inc
fcom
mov
push
aad
outs
xchg
cmp
xor
(bad)
fdiv
es
pop
bound
push
cmp
mov
or
inc
jg
or
xchg
ret
jl
clc
je
mov
leave
push
popa
mov
xchg
mov
test
es
cmp
jo
dec
xor
in
xor
mov
cmps
loop
xchg
or
ret
mov
imul
out
xor
fiadd
(bad)
(bad)
xor
sar
shl
dec
mov
mov
add
mov
in
xor
push
or
outs
or
lahf
dec
pop
loope
sbb
xchg
push
sbb
pushf
cmp
mov
adc
mov
push
mov
mov
mov
cmps
cmc
dec
mov
retf
mov
or
or
lds
push
xchg
jecxz
ja
popa
je
add
mov
mov
mov
xchg
push
cmc
add
repz
in
jle
dec
cli
gs
sub
outs
out
cmp
jne
inc
in
mov
icebp
jbe
dec
mov
jbe
push
(bad)
fwait
add
adc
jmp
dec
jmp
dec
scas
mov
adc
mov
xor
push
add
stc
lock
jmp
je
add
push
rol
lock
push
xchg
push
shl
mov
shr
xor
cmp
(bad)
scas
ins
push
sbb
(bad)
xchg
(bad)
push
js
push
xchg
call
xlat
jnp
sbb
cmps
fwait
imul
fwait
adc
push
ja
ja
ins
scas
and
pop
sub
cmp
loopne
cwde
sub
fsubr
jmp
bound
jb
(bad)
(bad)
lds
xor
ds
or
cmp
pop
sub
pusha
cmc
adc
js
dec
dec
arpl
loop
imul
pop
pusha
cld
jle
fwait
xor
loopne
gs
add
ins
xor
mov
mov
fsub
push
sbb
call
xor
enter
jle
loopne
int3
mov
jo
sbb
pop
adc
adc
shl
and
(bad)
cmp
lods
inc
test
pop
push
push
cbw
xchg
(bad)
jmp
cmp
sbb
ins
into
add
jg
je
jmp
call
add
pop
retf
clc
imul
fs
xchg
ds
lds
pop
inc
jmp
(bad)
or
scas
and
mov
mov
xlat
dec
mov
shl
pusha
fdiv
or
mov
shl
or
aaa
push
mov
push
pop
cli
push
in
pop
dec
mov
pop
(bad)
sti
sbb
(bad)
jno
lods
retf
jns
fimul
dec
into
adc
cmp
mov
adc
(bad)
and
xor
mov
fldenv
add
dec
popa
(bad)
(bad)
jp
jo
push
cmp
push
mov
icebp
xor
lea
sbb
ja
in
pushf
or
push
pop
mov
out
(bad)
mul
loope
nop
dec
dec
popa
cmp
cmp
mov
clc
popa
stc
adc
add
js
inc
inc
addr16
pop
adc
mov
xchg
cmps
mov
push
pushf
xchg
js
xchg
mov
loopne
scas
and
sub
cmp
mov
ins
xchg
sbb
and
pop
fadd
mov
hlt
push
jbe
call
int
dec
inc
sub
pusha
fidivr
push
xchg
cmc
sbb
push
jae
dec
push
mov
add
push
lahf
hlt
xor
aaa
inc
rcl
mov
movs
xchg
xor
xlat
(bad)
fs
xchg
ins
mov
pop
leave
push
retf
into
stc
aaa
int3
jns
pop
leave
push
(bad)
into
mov
stos
int3
fcom
lahf
inc
xchg
repz
imul
add
sub
sub
lods
xchg
(bad)
pop
outs
ss
sub
ret
stc
div
dec
lods
in
or
jo
push
jmp
inc
mov
adc
cmps
aam
scas
sub
out
mov
sbb
cmp
or
push
cmp
cwde
mov
pop
adc
ficomp
dec
es
data16
sub
pushf
dec
jecxz
ret
inc
mov
dec
mov
les
in
push
das
icebp
cli
sbb
or
sub
icebp
pop
sbb
jge
sbb
pop
daa
jo
jg
xor
jge
mov
dec
mov
mov
je
cli
mov
lea
mov
imul
fidivr
and
jmp
and
div
repz
push
inc
sub
mov
les
scas
inc
mov
push
or
or
jle
aas
lods
scas
dec
(bad)
jae
dec
pop
(bad)
mov
fs
pop
data16
imul
adc
lock
mov
shl
or
mov
jl
loopne
add
jg
aas
rcr
jp
stos
mov
imul
scas
ins
or
stc
xchg
pop
jnp
push
cli
lods
test
sbb
mov
pop
sbb
sbb
xchg
fwait
rol
sub
scas
xchg
ret
in
mov
jne
xor
test
pusha
fadd
outs
add
push
or
mov
dec
test
bound
cmp
ret
pop
and
add
repz
ror
retf
adc
mov
jo
push
push
sahf
shl
jbe
call
adc
push
jnp
dec
jns
or
data16
jns
pop
inc
out
(bad)
adc
pusha
mov
add
mov
cmp
scas
mov
ret
push
(bad)
jb
icebp
mov
or
imul
mov
xchg
in
and
jmp
push
pusha
rcr
sar
ret
cmp
and
shl
jns
and
sti
or
or
rcr
scas
and
dec
push
sub
push
in
fstp
cld
mov
or
fnstcw
push
test
and
pop
jb
dec
xor
call
inc
push
jg
push
cwde
push
mov
or
pop
dec
and
je
call
outs
imul
repnz
scas
or
jge
sub
jmp
int3
fwait
ret
jle
push
inc
mov
push
in
add
jmp
push
jmp
push
xchg
imul
imul
into
out
jmp
sar
js
or
mov
mov
int3
mov
test
pop
mov
and
xchg
add
add
xor
test
xchg
gs
or
cmp
jnp
adc
in
in
leave
mov
cmp
je
adc
mov
jge
cmp
or
sbb
dec
jo
pop
imul
mov
stc
mov
sub
adc
sbb
mov
sbb
jmp
mov
dec
pop
in
js
push
xor
lods
outs
adc
or
test
mov
mov
inc
shl
pop
fwait
jae
cwde
outs
out
jmp
in
pop
gs
enter
sub
scas
cmc
ja
inc
jns
xor
push
dec
dec
fdiv
pop
aam
pop
(bad)
xor
mov
mov
loopne
and
aad
sbb
out
inc
leave
mov
mov
dec
fld
mov
std
xchg
aaa
sub
xor
popf
je
or
xchg
arpl
pop
inc
fwait
and
cmps
out
or
push
pop
mov
mov
mov
data16
aad
xor
mov
aad
jmp
jmp
lock
sar
or
mov
sbb
into
cmp
ret
xchg
movs
pusha
iret
sub
sbb
sbb
dec
push
or
ins
mov
es
ror
retf
loope
aam
fsub
cmp
adc
stos
lods
fdivr
mov
(bad)
pop
cmps
lahf
pop
fcmovne
or
and
dec
mov
stc
and
(bad)
es
add
ins
and
lods
icebp
jmp
push
stc
test
movs
adc
xor
ret
and
lds
retf
je
jge
xchg
data16
rcr
mov
push
je
push
mov
inc
out
int
cli
mov
stos
outs
mov
leave
fwait
mov
cmp
mov
xor
in
xchg
mov
loopne
int
je
daa
ins
inc
sbb
cli
mov
xchg
iret
movs
dec
mov
loopne
in
or
inc
cli
stos
clc
or
sbb
mov
fdivr
hlt
movq
inc
ja
ret
cld
scas
xchg
fimul
mov
xchg
add
xchg
inc
or
scas
mov
std
sar
pop
stos
imul
inc
test
jno
mov
aam
ror
in
xor
repz
aad
int3
jno
stos
push
cmps
mov
daa
sahf
inc
ds
xchg
dec
out
dec
mov
mov
or
dec
push
je
push
(bad)
in
adc
jbe
out
repz
into
xchg
sbb
sub
sub
mov
pop
cmps
icebp
test
ins
imul
clc
mov
mov
loop
xchg
je
mov
hlt
fdivr
out
jnp
pushf
(bad)
jmp
out
and
inc
data16
sbb
cmp
(bad)
push
retf
dec
ss
jbe
lods
push
cmps
pop
imul
les
jb
jecxz
sub
mov
pop
jbe
mov
stc
cmp
sub
cmp
sub
pop
lods
cmp
enter
or
push
popa
in
inc
out
gs
jp
fisub
jmp
popf
mov
inc
pop
imul
loopne
adc
jmp
and
call
adc
push
cld
neg
sbb
fidiv
(bad)
mov
push
jae
je
sub
jns
mov
sti
cmp
jns
repz
xor
inc
or
xchg
fst
xor
mov
mov
fwait
cld
pop
je
jbe
into
js
div
adc
pavgb
mov
shl
xlat
cmp
push
mov
mov
sbb
xchg
stos
mov
imul
adc
or
jmp
pop
xor
mov
mov
fnstenv
inc
sbb
stc
and
ins
shl
push
std
js
xchg
(bad)
out
cmp
adc
mul
cwde
dec
mov
mov
nop
cld
fidivr
mov
mov
mov
jge
cs
(bad)
xchg
or
addr16
sub
addr16
sbb
es
shl
outs
fdiv
test
xor
cld
outs
arpl
out
movs
push
enter
pusha
xchg
mov
mov
sar
mov
enter
mov
mov
jecxz
jl
xor
in
inc
jne
and
sub
shl
xchg
and
js
stos
ror
mov
mov
lds
stc
pop
inc
mov
xlat
jae
and
outs
pushf
or
stos
in
mov
pop
xchg
(bad)
daa
xor
imul
jno
mov
xchg
arpl
sbb
sub
test
pushf
mov
dec
stc
jmp
in
and
movs
test
enter
cmp
jmp
cmps
clc
repz
les
(bad)
scas
stos
in
in
cld
stos
sar
xchg
int
gs
leave
out
cmp
sbb
push
jg
jg
inc
add
outs
in
sbb
cdq
cmps
arpl
pop
sbb
in
add
add
(bad)
outs
imul
popa
jp
(bad)
jne
cli
sub
mov
rcr
sbb
jle
nop
dec
arpl
ds
cli
repz
lds
loope
inc
and
pop
mov
dec
fld
push
xchg
jecxz
push
pop
stos
mov
push
pop
push
mov
fidiv
or
jb
mov
mov
mov
dec
popf
adc
jno
lods
xchg
jecxz
jbe
ror
ror
pop
loope
mov
jbe
push
inc
cmps
dec
push
push
pushf
mov
mov
fdiv
mov
(bad)
cld
push
not
inc
lahf
aaa
fdivr
scas
std
fwait
(bad)
mov
xchg
loopne
das
xchg
and
enter
pop
pop
call
inc
xchg
or
push
xchg
adc
mov
xor
push
mov
iret
mov
mov
adc
inc
sub
das
cmc
jge
dec
stc
in
enter
in
lea
scas
imul
mov
and
sahf
and
test
inc
cmc
pop
pop
mov
out
mov
gs
ins
call
mov
fwait
out
ficom
mov
mov
in
push
sub
jecxz
shl
pop
mov
lods
int
movs
cmp
adc
sub
inc
fist
xchg
out
mov
int
es
in
or
mov
dec
xor
std
fsubr
push
jmp
scas
cdq
cmps
push
popa
mov
sub
aam
lahf
fist
retf
iret
add
cs
bound
cmps
and
fidiv
int3
push
push
mov
shr
or
movs
inc
jge
cmc
jecxz
movs
enter
xor
sbb
or
mov
aaa
mov
cld
ins
std
jecxz
jl
ins
mov
test
or
xchg
or
dec
and
push
dec
adc
xor
pop
mov
in
fs
fscale
cmp
xor
pop
imul
addr16
lahf
or
idiv
sbb
into
jmp
mov
shl
call
sub
jae
(bad)
sbb
sar
mov
and
iret
pop
push
add
xchg
inc
arpl
push
cmp
and
cmp
in
mov
xor
loopne
call
pop
sar
inc
nop
in
test
xchg
cmp
into
pop
fcomp
sub
out
push
pop
paddusb
sbb
xor
scas
cmp
push
add
addr16
dec
pusha
sbb
stc
jae
call
xchg
push
nop
pusha
(bad)
sahf
jns
and
add
sbb
sbb
test
fs
call
ficomp
cmp
sbb
cmp
lahf
retf
aas
enter
fld
mov
movs
sti
jb
jle
lock
xchg
loope
and
lods
pop
inc
loop
pusha
push
lahf
scas
jg
mov
outs
pop
add
in
or
jns
mov
mov
pop
shl
push
cmp
push
sahf
cmp
inc
push
pusha
and
cli
xchg
mov
loop
cmp
mov
hlt
fnstsw
jg
xchg
sbb
test
mov
pop
in
into
xchg
sub
cmp
nop
sbb
dec
clc
jmp
mov
cs
lds
and
data16
je
and
sbb
adc
es
in
dec
jae
ins
lds
test
js
jp
fidivr
cmp
inc
jb
add
fstp
cmp
stos
repnz
mov
mov
out
mov
pop
cmp
xchg
div
mov
mov
xchg
cmp
push
repnz
or
loopne
pop
mov
mov
pop
cmp
jns
and
test
jle
sti
hlt
outs
dec
add
in
mov
dec
push
aad
jne
and
sbb
clc
cmp
sti
pop
dec
pop
lahf
and
repz
fmul
mov
jb
xor
out
jmp
std
lods
jle
mov
(bad)
pushf
cli
daa
call
in
xor
xor
inc
mov
sub
sub
jmp
stos
out
out
sub
mov
push
xor
pop
mov
int
inc
mov
jg
push
inc
mov
push
dec
in
cwde
inc
adc
adc
sar
and
sub
fisttp
or
cmp
dec
adc
sbb
cmp
push
mov
xor
mov
add
push
xor
shl
cli
neg
cld
lds
icebp
dec
adc
and
call
push
ret
popa
xchg
xchg
mov
movs
sti
jmp
or
popa
inc
adc
stos
jmp
shr
stos
aaa
and
inc
cmp
lea
push
push
xor
or
cmp
dec
bndmov
mov
jge
pop
dec
jne
bound
push
sbb
and
movs
and
test
js
cmp
dec
jecxz
adc
sbb
fist
fnstcw
in
push
sahf
in
leave
mov
rol
mov
push
arpl
xchg
lds
mov
test
imul
das
or
js
js
mov
push
lods
adc
jmp
mov
xchg
in
sbb
push
repnz
cwde
hlt
cmp
and
xchg
daa
test
ficomp
call
in
mov
or
jecxz
(bad)
(bad)
out
pop
scas
ja
sar
ficom
xchg
std
lock
mov
pusha
inc
inc
dec
retf
mov
mov
cwde
push
adc
mov
ret
retf
mov
jge
xor
add
imul
push
jns
push
push
test
fidiv
fiadd
les
jns
out
mov
mov
test
xor
jae
xor
repz
inc
int3
fmul
test
hlt
loop
mov
sahf
adc
hlt
fild
das
frstorw
xlat
lods
cs
scas
test
add
mov
adc
std
push
sub
ins
sbb
pop
jp
inc
rcl
retf
xor
std
popf
cmp
(bad)
mov
(bad)
out
sahf
mov
inc
sbb
mov
fidiv
shl
mov
in
jle
push
push
sbb
add
jne
sbb
jbe
pop
out
jecxz
fs
inc
cld
cmp
inc
int3
sbb
push
shl
in
jnp
sub
out
leave
xor
sub
jmp
mov
dec
xor
jmp
xor
test
test
fisttp
push
lea
in
std
fsubr
mov
jmp
adc
xchg
test
mov
jmp
push
jmp
icebp
(bad)
and
(bad)
out
mov
sub
inc
mov
push
adc
xor
retf
sub
imul
fs
jp
stos
adc
sbb
jmp
pop
pop
sbb
adc
(bad)
xchg
pushf
jp
mov
or
hlt
inc
sbb
pushf
aas
cmp
gs
or
cmps
rol
mov
push
fidivr
push
mov
cwde
pop
sbb
cwde
or
mov
daa
movs
mov
sbb
shl
jg
xchg
dec
or
or
out
enter
dec
retf
jo
fcom
into
cmp
int3
lods
jnp
shr
jns
xchg
xchg
fld
fwait
in
adc
push
pop
pushf
and
or
adc
mov
fcom
mov
inc
sbb
xor
mov
jb
add
sbb
mov
je
push
pop
pusha
mov
js
fldcw
ret
mov
mov
cmp
das
add
or
push
ficom
pop
jge
stos
clc
sbb
jbe
inc
push
push
jo
enter
jbe
not
sbb
ss
jecxz
cmp
popf
je
xor
adc
jb
(bad)
fld
ret
fcmovnu
mov
pop
mov
lods
popf
push
jnp
or
data16
out
xchg
pop
sub
rcr
test
(bad)
add
movs
push
mov
daa
out
mov
sub
bound
mov
add
xchg
adc
sub
adc
fisubr
xchg
rcr
cli
sbb
add
sub
mov
ret
repz
xchg
dec
sbb
dec
adc
adc
mov
ss
dec
or
push
dec
out
loope
and
mov
xchg
xor
pop
out
mov
xor
jecxz
pop
mov
cmp
cmp
xchg
fmul
test
pushf
mov
sbb
das
les
(bad)
sub
leave
cdq
fwait
lea
test
mov
mov
in
(bad)
stos
pop
jle
icebp
ds
mov
and
sub
repnz
aas
jo
dec
ficomp
jle
push
sub
ja
rol
mov
push
push
imul
mov
rcr
and
hlt
inc
mov
and
call
cmps
std
jl
cmp
cmp
add
jmp
ins
mov
dec
movs
mov
pop
in
aam
mov
out
push
pop
ja
add
push
(bad)
sub
(bad)
ja
int
outs
sahf
jecxz
ins
loopne
lea
retf
pop
pop
inc
sbb
cmps
add
cld
bound
xchg
je
mov
push
stos
pop
lahf
arpl
(bad)
mov
sub
add
lea
jl
xchg
and
dec
js
pop
jnp
addr16
fdivr
leave
test
js
into
lods
cmp
push
jno
int3
dec
adc
xchg
cli
repz
xor
jge
into
mov
pop
repnz
rol
inc
call
neg
out
mov
sbb
ins
(bad)
sahf
mov
jl
or
jecxz
add
mov
gs
bound
rcl
jo
mov
mov
test
adc
mov
mov
je
test
shl
jae
dec
xlat
in
mov
pop
js
push
adc
sbb
nop
test
xchg
outs
mov
push
pop
mov
test
clc
js
imul
jb
rcr
and
mov
js
and
sbb
pop
jmp
dec
dec
dec
gs
outs
ds
jae
std
add
enter
jbe
sub
jb
mov
sar
mov
mov
bound
push
scas
movs
in
mov
push
retf
jecxz
jge
idiv
mov
cli
xchg
ret
sti
cmp
popf
fimul
sub
inc
cmp
push
jl
loop
pop
pushf
ja
popa
fsub
pop
jge
imul
push
pushf
das
jmp
xor
sbb
aam
mov
(bad)
cli
icebp
jno
not
stos
pop
xlat
ins
rcr
pop
je
stc
call
(bad)
in
retf
push
sbb
sti
mov
mov
mov
push
mov
or
push
neg
repz
sbb
popf
push
clc
mov
push
(bad)
or
test
mov
xchg
cs
out
jbe
js
mov
jo
or
mov
out
cli
xchg
repz
mov
mov
cdq
jle
mov
sahf
cdq
pop
dec
or
cmp
iret
inc
cmps
scas
ss
xchg
(bad)
add
(bad)
pop
push
inc
or
mov
leave
cmp
(bad)
stos
xor
jo
scas
sub
push
pop
fstp
push
xchg
loop
repz
adc
rcl
xchg
xchg
adc
cwde
(bad)
jle
rcr
mov
aaa
inc
ds
fwait
div
(bad)
sbb
out
aas
jmp
ds
pop
adc
imul
aad
loope
sbb
das
mov
xlat
rcl
xor
sbb
retf
jns
ss
xchg
adc
cmps
outs
dec
ins
adc
call
fld
add
arpl
add
push
push
adc
popf
sbb
mov
dec
icebp
and
adc
dec
sbb
aas
gs
sub
loope
arpl
fst
jmp
or
pop
aam
jp
dec
jmp
call
lea
ja
scas
cmp
movs
scas
fucom
shl
retf
retf
xlat
or
out
fwait
jl
or
inc
fidivr
shr
and
loopne
rcr
xor
push
cmp
daa
fwait
mov
sub
stos
(bad)
data16
xor
inc
push
test
mov
movs
sub
jle
pop
test
fs
sub
mov
loop
jmp
or
(bad)
cmp
retf
(bad)
xor
jmp
js
xor
loopne
in
sahf
das
inc
inc
imul
pop
dec
mov
add
in
imul
enter
fbstp
enter
dec
jb
and
jle
sub
add
jmp
or
outs
loop
adc
lahf
stos
jb
add
xor
dec
adc
lds
cmp
or
push
stc
sti
test
adc
popa
jb
das
movs
sahf
add
xchg
jge
lds
repz
jp
repnz
jmp
fstp
shl
adc
or
adc
movs
xchg
fwait
add
aad
fcmovnbe
jae
xchg
xchg
arpl
popf
and
jo
push
and
push
cmp
xchg
out
add
loopne
cmp
mov
jmp
sub
(bad)
cmp
mov
lahf
arpl
dec
repnz
or
fnstsw
jl
mov
add
in
pop
(bad)
adc
jl
xchg
jg
in
fwait
loope
out
xor
adc
pop
shl
pop
clc
cmps
popf
mov
ja
outs
fxch
cli
ret
xchg
rol
and
retf
mov
jge
cmp
scas
iret
push
or
or
jg
outs
push
jae
jo
xor
cmc
mul
inc
cmps
std
adc
iret
popf
xchg
shld
sbb
xor
retf
mov
adc
or
movs
push
mov
in
stc
(bad)
data16
add
inc
xchg
scas
dec
pcmpgtb
dec
xchg
jo
jb
(bad)
adc
leave
inc
ja
rol
cmp
adc
lock
sbb
add
dec
mov
clc
scas
retf
cmp
or
mov
nop
cmp
cs
add
xchg
cs
std
scas
inc
fwait
cmp
mov
jmp
push
jge
mov
ja
bound
adc
iret
sub
push
aad
xlat
fcmovne
rol
in
ret
mov
popf
inc
lahf
lods
sbb
xchg
popf
iret
dec
mov
cmps
mov
or
hlt
mov
dec
sbb
mov
sub
mov
cmp
push
mov
out
ret
adc
xchg
(bad)
jmp
jb
add
inc
mov
stos
xchg
mov
(bad)
gs
mov
rcl
and
sub
push
cmps
jnp
ins
stc
sbb
pop
popf
xlat
pop
dec
sub
clc
jb
adc
jmp
shl
arpl
sub
daa
loop
jo
jbe
mov
xor
add
das
jb
sbb
shl
cmc
adc
mov
mov
ins
in
add
cmp
add
in
sbb
mov
test
out
lds
mov
pop
pop
aaa
mov
cmp
fdivr
jge
cs
scas
ins
std
push
push
outs
les
fmul
cmp
lock
pop
pop
hlt
call
gs
push
mov
cli
stc
xchg
(bad)
push
jl
mov
in
cmp
mov
pop
or
cs
sbb
(bad)
loopne
test
inc
xchg
test
mov
retf
adc
lods
movs
popf
xchg
test
sbb
ins
mov
jmp
mov
xor
fcom
adc
and
push
pop
push
jecxz
in
add
jns
fmulp
pop
mov
cmp
cmp
xchg
fwait
sbb
out
aam
push
aam
mov
leave
jnp
pop
push
shl
rol
mov
sahf
lahf
rcl
ret
out
inc
daa
sub
sub
cmp
xchg
jl
adc
ja
pop
(bad)
iret
xor
sbb
push
push
xchg
mov
cwde
mov
and
inc
sbb
retf
mov
repz
push
pop
dec
ret
lea
add
aad
(bad)
jo
loop
add
enter
and
xchg
daa
add
call
out
jb
cmp
aam
aas
ja
pop
mov
ficom
in
cli
cs
je
mov
mov
push
je
jle
ss
(bad)
mov
(bad)
out
ds
out
(bad)
call
nop
(bad)
fnstenv
sub
mov
rol
dec
inc
shr
dec
icebp
pop
jo
xchg
std
mov
cmps
jmp
movs
rcl
in
pop
aas
jle
les
and
sub
test
adc
add
dec
dec
mov
in
popa
dec
and
xchg
test
mov
pop
xchg
test
push
and
shr
lock
or
mov
int3
mov
add
pop
fidivr
pushf
call
add
cmps
jg
mov
mov
dec
js
jbe
cli
inc
ffreep
mov
sti
dec
retf
and
add
fst
inc
fist
out
xchg
mov
dec
jle
out
fild
inc
mov
call
fist
xchg
mov
pop
outs
inc
jns
loop
int3
scas
in
pop
sbb
loopne
cmp
test
pop
lods
inc
or
xor
pop
rcl
(bad)
sbb
pop
jno
clc
jmp
mov
jg
fisttp
es
sub
ins
xchg
jbe
mov
jbe
fisub
mov
dec
dec
sahf
stc
jg
(bad)
fsubr
xchg
cdq
inc
in
mov
int3
aad
lock
pop
sub
jge
xchg
fwait
jns
sub
clc
or
adc
xor
stc
sahf
add
(bad)
sbb
push
retf
ins
(bad)
(bad)
in
cmp
xor
fdivp
push
add
mov
mov
out
adc
(bad)
popa
adc
scas
jae
js
xchg
mov
inc
mul
loop
fs
sbb
lock
ds
push
ret
loope
mov
in
xor
(bad)
pop
pop
cli
and
sti
retf
jle
loop
pop
jge
mov
fsub
(bad)
sar
mov
bound
or
adc
iret
das
inc
add
cwde
or
test
cmp
xchg
push
ret
in
out
push
hlt
cmps
(bad)
jl
rcl
test
xor
bound
aam
jns
mov
outs
adc
add
ins
fwait
sahf
sub
or
or
mov
movs
popf
xchg
dec
popa
xchg
and
adc
outs
dec
call
jmp
enter
jae
sub
add
shr
mov
push
jmp
(bad)
xchg
ror
adc
imul
sti
jno
ins
or
int
lea
xor
test
mov
das
arpl
mov
jbe
and
int3
pushf
fsubr
push
arpl
jne
sahf
mov
ror
lock
(bad)
mov
push
xchg
js
(bad)
repnz
jmp
xor
test
or
call
call
sti
(bad)
mov
enter
cs
aas
adc
dec
retf
out
jbe
add
mov
jbe
bound
aas
adc
cld
ins
popf
sbb
and
sbb
xlat
retf
data16
arpl
xor
or
sub
dec
dec
psubd
cmp
adc
add
xor
pop
stc
retf
in
scas
cmp
jmp
or
call
std
int3
or
leave
ins
mov
bound
inc
mov
sub
jmp
test
sub
ds
xchg
outs
(bad)
shl
mov
and
jb
test
in
out
push
stc
xor
push
or
sbb
jl
sbb
xchg
stos
(bad)
dec
push
inc
jnp
(bad)
loop
or
and
jnp
(bad)
stos
fbstp
repz
scas
or
sahf
xor
fs
and
xchg
icebp
add
gs
(bad)
pop
movs
and
cs
xchg
in
in
jle
jo
arpl
int
(bad)
ds
adc
loop
push
dec
and
jae
mov
push
jo
(bad)
daa
nop
adc
inc
and
sbb
shl
push
xor
dec
adc
std
and
inc
and
test
(bad)
sti
fld
(bad)
(bad)
scas
repnz
xchg
fs
sub
and
jmp
fstp
popa
movq
loop
push
(bad)
fstp
nop
into
jno
sub
xor
inc
sub
aas
jge
push
or
sbb
xor
setg
mov
daa
jle
pop
in
cli
push
xchg
loope
jnp
and
mov
fcomp
cmp
jl
cmc
jmp
cmc
sti
loopne
jmp
jne
xor
mov
jle
jp
jge
pushf
call
jl
sbb
mov
or
xchg
sub
or
leave
xor
sbb
test
cmp
mov
vmovdqa
jmp
loope
ss
lods
(bad)
aas
and
and
or
nop
lods
inc
into
nop
sbb
ds
jg
and
mov
inc
stos
aam
or
je
sar
aam
jae
mov
xchg
out
dec
push
push
push
fs
repz
cwde
or
add
inc
sbb
js
jns
push
pusha
xor
mov
push
adc
dec
adc
jmp
cmp
push
arpl
clc
out
and
xor
sub
retf
sub
test
call
or
push
pushf
push
pop
jne
sbb
jns
cmp
push
dec
enter
sar
lods
fsubr
mov
dec
push
outs
inc
pop
into
fstp
and
jge
push
addr16
or
call
sbb
jnp
enter
mov
sub
mov
xchg
mov
mov
xor
cmps
xchg
lods
xchg
(bad)
add
and
data16
push
push
jge
sbb
pop
std
mov
fcmovu
stos
outs
sti
retf
dec
push
jle
clc
push
std
adc
fstp
dec
and
cli
lea
aam
adc
dec
out
sbb
dec
div
push
jecxz
loop
mov
iret
(bad)
enter
cwde
mov
inc
mov
add
loopne
inc
add
xchg
push
mov
mov
jp
lods
fisttp
inc
das
mov
cmp
cmp
dec
fstp
mov
pop
(bad)
mov
sub
sbb
mov
xchg
scas
xlat
rol
int3
retf
add
cmp
lods
es
xlat
dec
fisubr
xor
mov
inc
int
lods
adc
cmp
add
cmp
pushf
imul
xchg
inc
rol
int
imul
retf
xor
mov
ret
or
jnp
ret
mov
jo
ins
leave
jge
sbb
ret
inc
out
xchg
push
push
(bad)
cmp
xchg
mov
retf
pop
stc
inc
std
lods
mov
xchg
jg
ja
push
pop
jl
call
xchg
je
enter
into
xor
stc
dec
jne
outs
out
jp
push
adc
xchg
cwde
rcr
push
push
bound
push
pop
jbe
scas
mov
jge
int
add
xchg
and
scas
mov
sbb
movs
daa
or
popa
ins
mov
mov
sbb
xchg
fnsave
ret
push
in
push
and
or
jmp
sub
das
xor
sbb
cmps
mov
outs
jmp
mov
add
cli
je
pop
sbb
clc
je
cmp
imul
hlt
sbb
sahf
and
ret
jns
xor
imul
and
hlt
lds
in
xchg
push
push
mov
mov
mov
in
adc
mov
mov
adc
je
fwait
clc
jge
dec
scas
and
in
xor
xor
rcr
dec
cmp
xchg
sbb
xchg
dec
or
imul
cs
xchg
lea
mov
fsub
in
shr
jae
dec
xchg
aas
in
mov
or
leave
ins
out
or
ins
mov
add
pushf
xchg
sbb
es
ja
sub
cmp
pop
adc
cmp
sub
movs
sahf
into
mov
cmp
out
bound
dec
xchg
jns
imul
out
mov
fsubr
bound
jmp
mov
or
inc
scas
loope
popf
sbb
into
jmp
(bad)
in
xor
mov
jecxz
inc
ss
sti
push
xchg
sub
sbb
push
push
jnp
loope
push
or
aam
rcl
stos
fst
in
adc
and
jbe
loope
xchg
sub
mov
jo
bound
sti
test
mov
ret
and
loop
sbb
inc
or
fst
or
outs
fdiv
test
cmps
in
push
xchg
out
adc
adc
addr16
pop
out
jle
pop
mov
sti
sbb
push
pop
inc
or
jmp
fdiv
in
push
cmp
mov
cld
dec
movs
adc
sub
movs
adc
or
in
loopne
enter
push
repz
dec
jb
dec
sbb
stc
push
or
shl
icebp
pop
ins
jl
retf
ss
fild
xor
cs
push
imul
xor
inc
retf
or
push
push
lock
cmps
cmp
and
xchg
out
push
imul
or
ins
js
sub
shl
or
fs
adc
rol
jns
push
jl
sub
lock
arpl
dec
cdq
ja
pop
imul
push
call
cmps
adc
cmp
push
inc
or
icebp
or
inc
jns
cmp
and
xchg
dec
mov
sbb
sbb
ja
pop
sbb
add
nop
or
pop
pop
lods
mov
or
and
sbb
mov
lahf
icebp
xlat
xchg
mov
mov
mov
dec
icebp
xor
fdiv
jae
mov
dec
jmp
jle
scas
mov
clc
or
test
mov
dec
push
xchg
push
jl
mov
ret
rcl
xchg
mov
test
ret
call
(bad)
ret
pop
loope
push
lods
pop
sub
or
jmp
std
lock
xor
inc
inc
inc
fidiv
or
jg
xor
xchg
outs
fld
sbb
mov
jb
pop
sub
(bad)
enter
inc
and
cmp
sbb
loop
test
dec
sbb
xchg
outs
inc
pop
out
push
and
sbb
add
jae
int3
push
daa
in
out
ins
mov
push
fldcw
adc
add
sub
je
daa
pop
lds
fdiv
mov
ret
stos
fdiv
js
hlt
rcr
lods
push
mov
outs
mov
(bad)
sar
pop
les
dec
sub
mov
lock
pop
std
in
xchg
cmp
int
les
jmp
jno
aaa
pop
in
adc
jmp
lods
ds
(bad)
jb
je
pop
cmps
adc
icebp
sbb
ret
inc
(bad)
sahf
imul
fstp
mov
push
outs
xchg
scas
neg
sar
imul
call
jnp
xor
xor
nop
sub
push
cld
ror
pop
jl
stos
test
cmps
sahf
cmp
sbb
outs
jbe
jge
imul
out
mov
out
push
mov
lods
cwde
push
shr
mov
fcom
adc
(bad)
scas
enter
or
and
and
mov
jnp
mov
aad
inc
mov
pop
pop
mov
call
xchg
push
popa
cmp
shl
push
idiv
pop
test
imul
xchg
imul
in
cmp
xchg
sbb
or
jb
lock
ds
cmp
xor
jp
inc
or
arpl
sub
fild
stc
repz
xor
push
std
mov
cli
or
mov
fstp
(bad)
not
test
add
sahf
mov
cmps
and
out
cmps
jle
not
sbb
fwait
adc
xor
ss
dec
push
je
xchg
ret
lods
xor
daa
cdq
xchg
pop
adc
cdq
adc
fadd
clc
std
jg
sbb
(bad)
jmp
xchg
jecxz
adc
loope
sub
or
jmp
mov
and
rcl
push
fadd
xchg
aaa
neg
pop
mov
inc
sbb
add
mov
loope
mov
xchg
adc
mov
jp
cmp
and
movs
or
xchg
mov
sub
or
pushf
test
push
jp
inc
add
arpl
repnz
nop
jne
loope
cdq
or
inc
push
xchg
or
mov
sbb
sbb
adc
dec
dec
sahf
in
dec
jnp
into
scas
jbe
rcl
push
mov
or
test
adc
ins
into
pop
enter
leave
(bad)
mov
dec
add
xchg
jbe
fsubp
ror
push
jnp
dec
test
xchg
jle
pop
push
mov
mov
jmp
aad
leave
ss
sbb
push
popf
enter
nop
xor
cmp
mov
jbe
or
scas
fnstenv
adc
mov
jne
cmp
mov
xchg
push
inc
push
xor
jl
xchg
push
cmps
mov
cmps
test
aaa
fadd
(bad)
repz
xchg
sbb
lods
inc
maskmovq
mov
icebp
and
repz
xor
mov
les
jecxz
and
xlat
enter
pop
das
mov
inc
test
adc
mov
mov
sub
es
movs
test
or
cmp
xlat
mov
cmp
aad
call
mov
int
mov
sub
sub
and
sub
jg
icebp
push
fadd
repnz
xchg
cmp
and
data16
repnz
push
test
loop
adc
adc
xchg
sti
xor
(bad)
stc
jae
or
push
sub
sahf
pop
(bad)
fisttp
fcomp
test
sub
push
xchg
fdivr
fldcw
fiadd
in
push
adc
mov
ins
fprem
nop
ins
or
sub
jo
inc
js
jne
mov
cmp
ins
pop
iret
dec
dec
xor
fmul
sbb
lods
repnz
leave
push
sahf
jne
and
sbb
jne
or
lds
int3
sub
pop
push
mov
or
test
rcr
dec
push
dec
mov
push
lods
js
das
inc
lods
sbb
test
mov
pushf
aam
jo
in
bound
pop
jmp
jg
sub
je
inc
jb
mov
bound
test
adc
cli
call
jecxz
pop
call
dec
les
mov
push
dec
ret
dec
add
scas
pop
sub
inc
fs
cmps
mov
sbb
clc
cmp
xchg
loopne
mov
pop
iret
cmp
in
dec
push
out
pop
ret
sub
xor
sbb
arpl
and
rsm
int
mov
mov
mov
test
cmc
xchg
scas
imul
add
jae
sbb
jnp
push
retf
or
cmps
icebp
cmp
arpl
out
ret
enter
sbb
adc
or
out
ja
outs
ret
in
movs
mov
outs
cld
push
or
and
inc
ins
inc
test
sbb
cmc
sahf
add
jmp
xor
(bad)
in
cmps
test
add
fstp
sbb
icebp
xor
push
hlt
ds
dec
lahf
jns
and
jmp
addr16
dec
xor
jg
fcomp
mov
or
(bad)
xchg
loopne
mov
add
mov
cli
outs
cdq
add
jmp
bound
xor
scas
loope
push
pop
adc
pushf
fadd
mov
mov
sub
mov
xchg
stc
in
sub
or
jmp
out
(bad)
cmp
xor
imul
pop
jmp
test
add
pop
lahf
shl
loop
std
cmp
outs
mov
and
mov
dec
push
(bad)
sub
pop
jb
addr16
inc
cmps
mov
and
push
dec
mov
lahf
icebp
or
addr16
mov
mov
jns
mov
jno
cld
lock
ds
ret
pop
mov
retf
sub
inc
jecxz
adc
jp
fcmovnu
fidivr
dec
and
dec
inc
repz
pop
push
pop
out
ins
out
add
movs
cmp
pop
ins
mov
adc
cmp
sbb
cli
adc
shl
pop
xor
jns
and
jne
push
stos
mov
sbb
or
xor
dec
and
mov
lahf
jl
dec
pop
sbb
mov
push
fwait
xchg
in
aaa
leave
xor
repz
jno
pop
sbb
nop
pop
dec
lahf
popf
aam
xchg
xlat
lock
into
mov
cdq
mov
out
(bad)
jns
xor
inc
and
mov
repz
cmp
mov
pop
aam
lods
daa
sar
jmp
inc
pop
jmp
aaa
add
cmp
fcmovnbe
inc
sub
jle
cmp
les
xor
arpl
fstp
dec
or
add
test
xchg
addr16
xchg
movs
inc
lods
xor
cmp
outs
mov
inc
test
loopne
cmp
mov
mov
adc
(bad)
jns
mov
pop
sti
loopne
cli
lea
out
dec
mov
mov
inc
sub
lods
mov
fwait
mov
adc
ret
xchg
int
mov
add
lahf
sub
stc
mov
fdivp
sahf
(bad)
xor
(bad)
jmp
inc
and
lds
dec
push
cs
push
test
ins
xor
ins
ss
mov
ret
outs
adc
and
and
xor
adc
lea
int3
xor
add
push
out
pop
adc
fcmovnb
mov
add
mov
sub
out
fiadd
xchg
push
std
sbb
popf
fcmovu
bound
ins
call
outs
xor
jecxz
stc
xchg
aaa
(bad)
adc
cli
inc
push
xor
and
push
push
pop
(bad)
pop
ret
int
mov
ret
push
shl
sub
ja
call
movs
mov
leave
into
or
add
sub
sahf
sbb
in
(bad)
push
js
mov
push
pop
lea
cmp
adc
sub
rol
xchg
repz
js
into
jmp
cs
xchg
ror
fs
inc
dec
scas
enter
add
mov
adc
jecxz
loop
lds
jge
or
(bad)
cmp
push
mov
int
inc
(bad)
int3
mov
xor
(bad)
in
sbb
pop
push
js
stos
hlt
push
into
cmp
fst
aam
shl
bnd
sbb
jge
sahf
int
xor
movs
aad
jne
outs
sub
inc
jl
add
pusha
jecxz
add
fs
fnstenv
leave
mov
and
sub
outs
sbb
out
icebp
retf
push
cmp
enter
js
pop
adc
sbb
into
pop
lods
int3
(bad)
mov
sub
dec
popa
push
lods
call
sbb
test
data16
ret
push
stos
xor
mov
fld
stc
cmp
mov
clc
es
jp
fcmovnbe
xchg
inc
out
xor
xor
in
imul
cmp
(bad)
iret
(bad)
push
enter
ds
jb
in
aam
jecxz
mov
inc
cmp
stc
mov
cmp
std
jge
test
mov
adc
xor
aas
int
scas
jns
jbe
inc
xchg
mov
mov
(bad)
sti
mov
dec
add
pusha
mov
(bad)
int
cmp
stc
addr16
call
inc
icebp
cmp
add
addr16
cmp
xor
stos
sbb
lahf
mov
cld
loope
data16
les
pop
mov
jo
pushf
out
mov
pop
adc
pop
pop
jae
inc
out
aaa
push
xchg
pop
in
out
rol
(bad)
or
cli
mov
rol
ss
lock
aas
aas
outs
imul
call
sub
rcr
movs
cld
outs
int3
sub
adc
std
gs
pushf
lods
test
lods
cmc
js
or
pop
add
loope
ins
mov
movs
push
daa
call
aaa
adc
repnz
in
xchg
inc
sar
dec
hlt
leave
xor
test
out
or
out
mov
cmp
stc
jmp
sub
inc
cmp
js
cmp
mov
(bad)
mov
in
in
in
mov
(bad)
or
and
mov
push
(bad)
or
movs
or
xchg
call
pop
fucom
loopne
mov
and
and
test
cli
pand
(bad)
pop
fwait
cmps
call
stos
fcom
sar
fprem1
outs
xchg
scas
inc
out
sub
mov
loope
and
retf
das
add
xlat
jp
ret
into
clc
mov
jns
pop
pop
lods
addr16
lods
inc
mov
pop
dec
sbb
mov
dec
push
add
fisubr
adc
sbb
stos
ds
stos
enter
outs
cdq
xchg
inc
cdq
movs
ins
mov
fld
jl
cmp
and
inc
pop
push
cwde
idiv
sahf
pop
fmul
or
mov
xor
add
cmp
mov
adc
repz
rcr
mov
dec
push
mov
push
push
jae
push
jge
sub
repz
in
gs
jb
sti
pushf
sbb
adc
adc
adc
inc
or
scas
push
iret
mov
dec
jp
cmp
jnp
icebp
out
mov
sub
and
pop
scas
add
sub
sahf
add
scas
jmp
enter
mov
jnp
les
or
and
jmp
cmp
cmp
pop
dec
add
es
sub
(bad)
jae
and
out
arpl
fidivr
imul
daa
jo
pop
mov
aam
cli
adc
jns
jno
mov
cmc
shr
sbb
stc
or
xor
push
push
dec
push
retf
sbb
movs
mov
sar
fisub
(bad)
movs
mov
(bad)
stc
scas
sbb
call
push
leave
sbb
data16
mov
xchg
sub
or
es
lds
adc
repz
pop
cs
jmp
jecxz
sbb
sbb
(bad)
hlt
or
inc
mov
dec
adc
pop
imul
or
rol
movs
imul
dec
loope
jb
addr16
gs
std
pop
popa
arpl
(bad)
das
xlat
sahf
pop
inc
cmp
loop
mov
jecxz
ret
mov
adc
iret
shl
repnz
fisub
inc
mov
shl
xor
pop
xchg
sub
fs
stos
push
retf
mov
jno
lahf
dec
push
xor
retf
mov
inc
inc
mov
into
mov
jmp
dec
in
enter
cmc
gs
or
test
push
scas
inc
ror
xor
push
sti
test
retf
xor
push
pusha
fsubp
sbb
push
push
lahf
call
jb
cmps
sar
jge
out
dec
mov
push
adc
cmp
mov
jl
lock
pusha
add
shl
inc
add
into
xchg
jmp
or
and
sub
leave
repnz
or
ins
mov
shr
ret
out
inc
cwde
pop
mov
inc
pop
mov
push
ret
test
jbe
(bad)
cmp
in
imul
loope
cli
jmp
jg
test
adc
sbb
enter
jecxz
sub
ja
add
iret
cwde
mov
jnp
push
lods
hlt
stos
stc
loop
shl
xor
mov
sar
test
lea
popa
xor
pushf
in
stos
jecxz
test
enter
sar
outs
jg
push
sbb
aas
mov
lods
xchg
psubw
add
fiadd
sbb
adc
stc
inc
jmp
cli
xchg
add
mov
xchg
cmc
sub
pop
add
pop
lods
cmp
stc
outs
stc
clc
pop
fcomp
sahf
lock
stos
inc
jae
call
out
bound
loopne
shl
or
sub
shr
push
out
fwait
and
adc
fld
aam
xor
mov
sub
bound
sar
add
in
jne
jp
fstp
fs
in
fsubp
dec
add
adc
push
repz
or
or
cmc
inc
or
int3
test
ins
or
push
leave
hlt
cld
or
pop
imul
jmp
cmc
into
add
or
call
add
(bad)
xchg
and
imul
xchg
(bad)
push
outs
out
sti
sub
aam
mov
ins
retf
cmps
inc
sub
push
retf
outs
or
xchg
dec
jl
scas
cmp
jb
sbb
out
add
cs
repz
cs
pop
sub
add
imul
rcr
mov
or
mov
mov
les
jo
xchg
out
mul
jecxz
clc
mov
jmp
inc
pop
pop
dec
out
movs
mov
pop
bound
rcr
pushf
add
in
inc
in
or
shl
enter
cmp
loope
mov
popa
aaa
xchg
inc
xchg
jl
mov
xchg
pop
shl
cmp
not
push
dec
(bad)
xchg
xchg
push
or
cmp
leave
cmps
or
loop
pop
rol
pop
jle
out
push
in
mov
and
out
push
sar
push
retf
pusha
inc
lds
gs
mov
sbb
or
mov
in
cld
fwait
pop
jg
idiv
imul
jg
pop
jbe
mov
cmps
pop
outs
mov
and
fbstp
and
ficomp
call
fldenv
mov
and
(bad)
inc
sbb
arpl
pop
ja
call
stos
pop
sub
xor
and
sar
out
mov
movs
adc
sub
jecxz
stos
(bad)
mov
std
xor
dec
xor
sahf
mov
xor
ins
mov
repnz
out
dec
push
adc
jmp
int
dec
push
movs
ficomp
xchg
and
pushf
(bad)
mov
jno
cld
call
fmul
sub
mov
lods
and
(bad)
in
pop
jae
jle
dec
loop
sbb
mov
or
sbb
out
in
ins
test
cmp
shr
xchg
cmp
adc
imul
test
(bad)
jl
scas
or
mov
mov
dec
dec
push
and
sub
dec
or
xor
ret
test
bound
xor
pop
mov
scas
ror
stos
pop
push
call
xchg
mov
sub
sub
call
hlt
(bad)
in
test
adc
add
xchg
fadd
adc
xchg
mov
clc
jne
push
shr
(bad)
mov
mov
cmp
adc
xchg
jl
and
enter
push
cwde
mov
pusha
sub
cmp
es
add
sub
loopne
shr
jne
push
jo
ja
in
and
neg
sub
inc
push
iret
and
mov
add
test
cld
fs
xchg
mov
call
adc
out
and
jp
inc
pop
fcomp
fs
aam
mov
xchg
js
mov
xchg
pop
xor
mov
int
cld
xchg
mov
call
pop
int
cmps
pop
mov
loopne
fistp
loop
and
cmp
inc
cmp
fwait
into
xor
lahf
out
fsub
adc
push
pusha
fsubr
retfw
fwait
iret
cmps
lahf
lock
jmp
ins
adc
dec
sub
dec
imul
mov
aad
jmp
mov
inc
iret
and
(bad)
pop
push
mov
int3
push
xchg
mov
and
fwait
mov
xor
setg
inc
mov
xor
iret
mov
adc
mov
fwait
in
push
scas
jo
mov
sbb
enter
adc
ins
push
pop
outs
sbb
push
sub
sahf
xor
mov
loopne
(bad)
add
jno
(bad)
cld
sar
dec
jg
xchg
in
dec
leave
pslld
add
xor
les
jno
aam
imul
pusha
repz
cmp
or
or
or
dec
sbb
ins
mov
movs
mov
sub
gs
mov
inc
in
in
mov
xor
in
pop
pop
pop
sub
jae
scas
ss
inc
dec
dec
jp
test
arpl
sbb
sbb
xchg
dec
shl
mov
mov
jmp
mov
push
sub
push
push
and
call
mov
mov
push
pop
sub
xchg
push
cmc
xchg
(bad)
imul
sahf
push
xor
dec
aaa
ffree
test
xchg
push
xor
jg
dec
xor
cld
pop
add
sub
nop
sbb
add
xchg
mov
nop
mov
sub
xchg
icebp
jl
ds
mov
fidiv
(bad)
xchg
sub
fist
mov
sub
jnp
and
mov
jns
lds
stos
test
sub
(bad)
jmp
nop
cmp
(bad)
xor
or
cwde
mov
xchg
out
xchg
xchg
sub
jle
and
rcr
cmps
mov
sbb
cmp
push
or
and
addr16
jmp
movs
push
in
daa
add
or
fnstcw
ret
pop
jmp
repnz
sbb
int3
dec
mov
pop
cmp
es
jle
call
add
sub
pop
(bad)
jne
xor
pop
outs
push
shr
jns
(bad)
fbld
jo
adc
lea
push
test
shr
add
test
icebp
popa
ss
or
and
push
mov
xor
jae
mov
mov
(bad)
inc
push
sbb
mov
ja
in
retf
and
add
jb
dec
inc
add
iret
pop
dec
cli
jnp
mov
fisttp
jle
scas
adc
call
jle
in
push
fdivr
pop
mov
out
cmps
push
pusha
cwde
scas
dec
mov
mov
ret
in
xor
mov
inc
mov
add
shl
push
push
jbe
cmp
es
aas
push
ret
inc
jmp
mov
adc
sbb
cmp
dec
in
jns
mov
dec
mov
aas
ins
sbb
iret
neg
rcr
jnp
jge
xchg
fnsave
pop
dec
mov
fnsave
mov
lods
sbb
mov
push
jl
adc
push
push
shl
clc
call
jecxz
movs
imul
in
push
not
sub
mov
mov
xchg
repz
mov
add
inc
adc
cmps
inc
cdq
cmp
mov
shl
mov
sbb
xchg
cs
daa
dec
fsubr
fucomi
sub
(bad)
pop
test
out
push
pop
inc
jbe
test
push
ins
std
leave
loope
ret
jb
std
stos
xchg
imul
outs
inc
pusha
mov
add
xchg
imul
leave
mov
data16
aam
popa
adc
sub
adc
lahf
pushf
dec
sbb
les
cmp
rcr
sbb
pop
out
mov
ins
mov
sbb
fcomp
movs
cmp
idiv
cmp
dec
push
fild
imul
cmps
or
jle
mov
addr16
mov
pusha
popf
push
or
lahf
test
es
scas
pop
cdq
dec
fimul
loope
push
leave
loope
mov
shr
(bad)
movs
sub
pop
pop
es
sbb
mov
outs
or
leave
ret
arpl
pusha
and
movaps
mov
or
loope
xlat
fs
sbb
xchg
ret
dec
cmp
xchg
lea
pop
push
call
aas
cmc
cs
sub
int
jecxz
(bad)
std
imul
pop
jno
xchg
outs
retf
pop
in
pop
fist
xchg
jle
test
xor
inc
mov
push
test
mov
sub
sbb
add
dec
fimul
mov
xchg
fcomp
push
ja
dec
or
adc
mov
mov
retf
push
add
xchg
dec
(bad)
(bad)
les
pop
sub
jo
jp
mov
mov
enter
sar
(bad)
push
fiadd
js
out
stc
and
leave
or
xchg
aad
mov
outs
mov
jl
push
les
ins
fild
xchg
mov
dec
mov
push
mov
mov
ud0
xchg
test
sub
inc
loope
mov
mov
jo
ficomp
cmp
pop
gs
clc
call
ins
lea
retf
dec
gs
fisubr
aaa
add
inc
push
iret
inc
out
jo
cld
or
jmp
xor
pop
ret
xor
push
fsubr
push
fst
pop
xchg
xchg
aas
dec
lock
sub
repnz
cmps
shr
in
cmps
mov
or
xlat
pop
mov
push
or
pop
data16
push
sbb
retf
pusha
mov
sbb
ins
repz
lods
mov
adc
loope
cli
pop
mov
imul
mov
push
mov
dec
adc
sbb
sbb
repnz
aas
outs
fld
fisttp
xchg
leave
aaa
pushf
mov
sbb
mov
test
sbb
loop
nop
mov
repz
test
xor
sub
data16
repz
inc
fs
pop
jmp
(bad)
fsubrp
pop
inc
lds
jnp
es
sti
test
mov
add
jmp
or
cli
fwait
push
loope
js
mov
mov
hlt
add
pop
mov
and
sub
ficom
frstor
lea
pop
xcrypt-ctr
cmps
lahf
jno
mov
fild
outs
ret
jbe
retf
or
xchg
dec
pop
out
pop
adc
push
inc
sbb
fdiv
jae
xchg
xchg
iret
retf
out
out
aad
mov
dec
sbb
and
(bad)
sti
fild
push
mov
jae
mov
mov
or
cmp
outs
sbb
jae
fcom
call
inc
pop
mov
push
dec
or
ja
sub
lahf
call
xor
mov
xchg
and
sub
mov
xor
xchg
clc
outs
sub
(bad)
push
enter
mov
sbb
mov
push
(bad)
sub
aas
xchg
adc
adc
je
gs
clc
inc
push
pop
mov
aad
xchg
sar
mov
dec
mov
jecxz
mov
out
fistp
aam
mov
cmp
sahf
cmp
add
add
daa
in
loope
jmp
jp
mov
xchg
jp
aaa
cmc
xadd
sbb
enter
stos
pop
push
mov
enter
das
jnp
or
hlt
jmp
jne
push
adc
dec
fcom
mov
dec
add
icebp
es
out
mov
aaa
push
in
sbb
(bad)
jo
dec
daa
pop
and
sahf
pop
mov
je
sbb
jmp
call
mov
dec
add
sbb
or
inc
mov
int3
and
shl
mov
mov
shl
nop
xchg
(bad)
xlat
cld
cmp
xchg
cmc
mov
js
mov
call
inc
int
inc
(bad)
mov
push
fstp
pop
das
inc
das
outs
or
jg
popf
fimul
fcom
push
lea
add
add
out
psrad
ins
lock
xlat
jg
pop
out
jmp
das
retf
clc
test
xchg
or
lds
sub
scas
push
std
inc
(bad)
or
repz
retf
test
mov
call
je
and
loop
and
pushf
sub
inc
js
arpl
out
lahf
movs
inc
adc
iret
dec
and
fldenv
jb
cmp
pop
cdq
or
push
add
jns
mov
xor
(bad)
cs
ret
jb
test
mov
fidivr
push
pop
shl
(bad)
scas
mov
call
ja
mov
mov
push
dec
inc
push
repnz
retf
lea
or
daa
mov
pop
sbb
or
sbb
cmps
rep
mov
pop
pop
lock
jecxz
xor
in
out
cmp
jne
and
dec
fdivr
mov
fisubr
push
xchg
cdq
and
jge
add
in
pushf
jo
dec
or
icebp
push
xor
pop
adc
(bad)
rol
stos
xor
mov
jle
mov
mov
loopne
data16
lods
mov
pop
leave
cdq
mov
cmps
fld
add
repnz
mov
daa
pop
push
icebp
cmp
sub
push
pop
sbb
cwde
sti
lods
outs
movs
aad
cmp
push
cs
movs
mov
and
test
xor
jge
fsubr
lahf
sbb
clc
xor
dec
mov
in
pop
out
xchg
stos
mov
rcl
push
je
js
xor
cli
mov
push
push
popa
mov
fmul
jmp
test
add
fdiv
or
jmp
lea
cwde
(bad)
jecxz
xor
jp
fld
loopne
pop
aam
pop
cmp
push
cmp
scas
xor
jmp
cmps
mov
sbb
xchg
es
cmc
jne
enter
inc
mov
dec
and
cmp
inc
out
out
pop
cdq
(bad)
sbb
inc
push
lods
dec
sbb
dec
jmp
dec
sbb
push
adc
lock
jo
imul
mov
lahf
mov
sub
icebp
pop
add
adc
or
push
inc
jge
push
mul
xchg
test
or
out
addr16
jg
out
lods
xor
fcom
push
in
aad
lods
in
pop
push
retf
mov
pop
mov
or
enter
push
cmp
xchg
enter
add
sub
mov
adc
sbb
mov
push
(bad)
cli
std
sub
or
push
or
fld
js
cmps
adc
push
add
jp
mov
sbb
pop
cmp
add
xchg
xchg
clc
push
mov
push
cs
call
dec
or
nop
outs
int
sti
sub
std
push
nop
in
bound
xor
mov
mov
dec
inc
pusha
dec
dec
dec
adc
xcrypt-ecb
cmps
(bad)
retf
mov
js
pushf
pop
adc
test
mov
xchg
mov
scas
ds
push
jge
sub
jl
jmp
addr16
jmp
pusha
int
(bad)
std
lea
stos
pop
cmp
sbb
cmp
adc
sti
cmc
xor
sbb
push
rcr
adc
retf
sbb
jge
test
mov
(bad)
jnp
xchg
or
outs
call
ret
lods
mov
mov
dec
das
in
fld
push
jl
inc
mov
enter
nop
cmp
cdq
stos
sti
leave
iret
mov
xchg
dec
mov
xchg
push
js
iret
push
les
dec
xchg
cwde
pop
shr
jb
mov
ror
xor
aaa
xor
sub
cmps
shr
loopne
jnp
mov
fcmovbe
mov
es
ja
in
outs
adc
ins
lock
or
mov
and
mov
cld
dec
not
sub
inc
jp
stos
sbb
ret
jns
stos
(bad)
aam
fisubr
outs
aam
cmp
ret
repnz
ins
js
shr
stos
push
out
mov
sbb
outs
xchg
shr
hlt
ss
push
jb
cs
mov
mov
es
or
fdivrp
adc
fdivp
jbe
lods
loope
fcmove
adc
cmps
xor
mov
inc
jle
dec
mov
sbb
call
clc
cmp
push
jge
push
mov
mov
cld
xor
sub
add
mov
xchg
inc
push
fsubr
repz
adc
xor
and
mov
repz
pop
sbb
mov
push
sub
pop
sub
mov
in
add
sub
gs
dec
aad
xchg
ins
repnz
shl
and
add
aam
out
cwde
sub
inc
hlt
pop
jmp
fiadd
jl
jb
jns
dec
and
cli
xor
xor
aam
jo
xor
addr16
ffreep
adc
mov
out
push
dec
mov
or
rcl
std
inc
jl
inc
test
cmp
mov
xchg
shl
xchg
(bad)
cwde
loop
mov
add
push
sbb
stos
outs
in
scas
xor
clc
xchg
(bad)
scas
mov
shl
(bad)
bound
loop
inc
mov
jns
and
xor
ret
and
jle
or
arpl
js
xchg
int
push
sbb
loope
jnp
movs
scas
inc
inc
mov
leave
clc
scas
(bad)
push
(bad)
xchg
and
clc
dec
ins
adc
cwde
enter
push
push
ret
mov
sub
inc
and
mov
inc
dec
jb
cmp
mov
sbb
div
stos
sahf
xor
and
pop
pop
dec
jo
push
pop
retf
(bad)
bound
mov
jo
lock
mov
or
(bad)
pop
or
adc
jae
loope
imul
jne
fwait
adc
int
push
es
and
out
xor
and
mov
pop
jmp
cmp
xchg
push
add
lea
mov
push
xchg
cmp
pop
js
fdiv
lods
mov
sbb
mov
pop
push
sub
dec
arpl
daa
xchg
or
icebp
or
dec
setle
pusha
idiv
sbb
movs
mov
loopne
outs
pop
inc
mov
xchg
mov
xchg
or
in
or
retf
gs
sbb
push
in
cmp
mov
sub
mov
xor
dec
mov
stc
stos
push
xor
ins
adc
fbstp
jnp
scas
je
jp
jb
xchg
loop
mov
(bad)
jb
bound
sbb
ins
hlt
imul
inc
or
aad
ins
add
push
test
lea
sbb
or
out
and
jbe
mov
xor
mov
fs
(bad)
retf
out
mov
ror
sub
scas
adc
and
adc
les
mov
stos
sub
and
adc
mov
idiv
call
push
sub
mov
adc
push
shl
or
cmp
fimul
(bad)
sbb
popa
inc
mov
out
mov
test
imul
das
lds
and
lods
mov
jmp
sub
dec
xor
je
ds
in
imul
mov
jno
cld
dec
shl
or
push
in
jae
out
add
xor
jecxz
xor
mov
pop
bound
or
and
mov
hlt
out
fnstsw
push
and
int3
mov
xor
pop
aas
or
xchg
push
loopne
cmp
and
sub
shl
scas
xor
and
jmp
cli
sbb
jge
sahf
sbb
repz
dec
loop
movs
daa
rol
in
ror
cmp
fbstp
popf
push
(bad)
in
loope
adc
and
pop
jecxz
mov
cmc
mov
das
arpl
push
jle
adc
sbb
ret
mov
cld
das
dec
mul
test
fdiv
sub
lods
mov
or
or
ret
aam
xchg
iret
cmp
xchg
popf
push
popa
cmps
mov
loope
or
nop
cld
add
cmps
cdq
inc
fimul
lods
repz
je
adc
mov
jmp
fcom
dec
inc
sbb
imul
adc
cmp
idiv
rcr
vcvttsd2si
pusha
mov
xor
(bad)
imul
clc
jno
ds
sti
push
pop
(bad)
pop
or
xchg
sub
(bad)
mov
jmp
mov
push
cmp
fistp
repnz
adc
mov
mov
jo
mov
int3
xchg
jae
mov
lds
fcom
pop
dec
add
clc
lods
xlat
pusha
adc
adc
arpl
call
mov
adc
jg
scas
pop
gs
int
cmps
stos
call
jmp
test
fisttp
lock
fstp
inc
inc
icebp
pop
adc
mov
icebp
jg
test
or
retf
fbld
(bad)
push
ins
test
inc
int
dec
loop
out
inc
mov
aam
(bad)
hlt
xchg
out
mov
dec
mov
pop
lds
push
jmp
add
je
cmp
(bad)
cli
(bad)
stos
shl
mov
add
pop
movs
sub
in
sbb
out
shl
or
into
data16
test
adc
push
pop
cmps
mov
cdq
xor
cmps
xchg
pop
inc
push
dec
retf
dec
fcomp
xchg
jl
scas
jecxz
xchg
pop
shl
xor
mov
movs
lds
sbb
sbb
jo
out
(bad)
push
pop
mov
out
add
push
shr
push
xchg
scas
cmp
daa
push
xor
aas
jl
int3
mov
cmps
mov
dec
mov
clc
aam
push
ds
cmc
stos
sub
jmp
ret
movs
mov
popa
sub
scas
fdiv
dec
rcl
sub
jecxz
or
add
xchg
rol
shl
stos
dec
fcom
xlat
ss
js
xor
inc
fldcw
fnstcw
cmp
dec
jg
(bad)
jae
fstp
and
mov
jne
mov
aam
push
gs
xlat
add
push
jnp
jno
and
push
imul
adc
loopne
jb
imul
jg
jns
aaa
add
pop
aam
xchg
push
sti
push
inc
test
or
lea
scas
std
dec
sbb
xchg
mov
mov
mov
jbe
xor
jle
inc
cmp
aaa
mov
push
retf
mov
push
sbb
fdiv
mov
add
jecxz
add
test
pop
stos
call
sti
mov
scas
dec
das
movs
adc
push
add
fidivr
mov
mov
dec
sub
dec
inc
jl
cmps
and
cmp
outs
scas
xchg
and
push
rol
mov
xor
adc
inc
mov
sub
jae
lds
stos
stc
shr
or
enter
dec
gs
push
cdq
push
js
daa
popf
out
ffree
repz
mov
or
(bad)
sbb
pop
mov
test
test
dec
mov
stos
add
(bad)
data16
fnstcw
out
add
das
shl
adc
fimul
jg
movs
sub
popf
ret
bound
xor
(bad)
ror
mov
mov
imul
xor
dec
jae
pop
pusha
and
adc
push
fisubr
or
mov
stc
fld
in
push
out
mov
mov
jle
ds
and
ja
jne
mov
int3
mov
daa
movs
jbe
into
pop
jg
popf
test
lds
stc
jne
int3
mov
ins
daa
and
popa
push
pop
xlat
and
mov
pop
or
in
ror
aam
outs
data16
gs
hlt
or
jbe
sbb
cmp
aad
shr
(bad)
xor
sub
(bad)
bound
jnp
(bad)
adc
inc
scas
xor
sub
mov
cmp
out
cli
loopne
vmwrite
sub
cmps
ja
cmp
jbe
punpcklwd
or
retf
cmps
das
mov
aam
icebp
jle
cdq
aam
sub
pop
jecxz
xor
aaa
loope
test
fistp
push
ins
pop
inc
in
loope
dec
arpl
mov
jnp
pop
mov
cwde
inc
pop
and
shr
push
xor
dec
shl
mov
or
inc
or
fnstsw
xchg
sub
and
xor
in
jl
lds
sbb
xchg
es
dec
pop
xor
daa
mov
mov
mov
dec
mov
repz
and
aas
xchg
jle
std
sub
lods
push
xlat
fs
jecxz
jle
ss
pop
pop
pop
neg
lahf
call
(bad)
fistp
sub
in
fnclex
jecxz
(bad)
cmp
leave
sub
shl
fwait
ss
xlat
pop
and
pop
xchg
mov
movs
mov
jmp
(bad)
xchg
mov
jb
std
imul
sub
jo
sbb
xchg
sbb
mov
add
and
or
push
xor
lahf
jmp
xchg
mov
es
add
jo
jmp
lods
mov
mov
(bad)
cmps
(bad)
dec
(bad)
mov
pop
mov
in
mov
sbb
add
xor
das
adc
mov
inc
mov
lock
sub
repz
ficomp
mov
xchg
(bad)
shl
pusha
ins
lods
pop
inc
pop
lods
add
add
mov
scas
mul
sub
jge
test
jle
mov
outs
cmc
out
rcl
aam
inc
fimul
fisttp
lods
mov
or
mov
sbb
pop
dec
add
gs
xchg
cmp
not
stos
sub
sub
vmovups
adc
mov
add
cmc
sbb
cmps
outs
inc
cdq
and
(bad)
out
(bad)
int
push
retf
pop
pop
cmc
xlat
sahf
pop
pop
stos
lahf
xor
cmp
adc
xor
movs
jbe
push
pop
les
pop
push
shr
ins
lahf
xchg
leave
call
(bad)
fnsave
sbb
dec
push
sahf
jne
lods
inc
push
sub
stos
inc
add
add
push
stos
and
pop
or
pop
jae
sbb
sbb
mov
xchg
sbb
test
jecxz
lock
fidiv
sbb
jb
mov
mov
sahf
inc
adc
rcr
ins
cs
xchg
ja
nop
sub
pop
je
bound
cwde
shl
fxam
jns
in
ret
jp
outs
push
test
loopne
push
adc
aam
out
cld
sahf
jns
push
push
in
rcl
jecxz
lahf
xchg
fstp
xor
(bad)
ds
sbb
pop
out
inc
jbe
sbb
ins
xchg
es
pushf
jo
mov
mov
(bad)
pop
movs
sbb
fisttp
adc
jg
jecxz
inc
outs
jns
aas
cmp
out
push
in
pop
and
mov
mov
mov
addr16
mov
or
inc
stos
cmc
or
jl
pop
push
jmp
in
lahf
cld
mov
mov
std
xor
inc
js
mov
and
or
(bad)
mov
cli
add
mov
push
inc
adc
push
aam
jbe
mov
mov
cmp
das
cmc
push
inc
clc
(bad)
xchg
adc
aaa
loopne
loope
ds
cdq
stos
ss
cs
mov
pop
sbb
adc
jge
push
add
imul
int
cli
pop
ficomp
sub
pushf
ins
int3
jmp
push
int3
or
(bad)
rcr
call
adc
mov
icebp
add
pusha
shr
sbb
adc
and
sbb
sbb
dec
jg
adc
add
test
mov
xor
cwde
cmps
xor
sbb
push
sbb
or
jb
loopne
sahf
jae
sbb
or
pop
ret
mov
jne
jle
lock
cmc
jbe
xor
es
dec
stos
jbe
imul
inc
in
repz
ins
ror
xor
inc
xor
int3
or
outs
stos
or
call
jp
out
fidivr
shr
inc
ins
leave
clc
push
sahf
jmp
popw
aam
xchg
fisub
icebp
dec
rol
adc
jmp
out
es
nop
add
cs
inc
inc
pop
xor
vphaddubw
push
call
pextrw
cdq
mov
imul
mov
push
dec
(bad)
and
or
test
and
test
sub
out
mov
loop
cwde
cmps
pop
cmc
ins
mov
mov
test
and
fwait
inc
pop
xchg
jb
mov
out
retf
cmp
in
ins
cwde
inc
mov
jne
and
nop
outs
sbb
xchg
and
add
jmp
add
out
mov
(bad)
mov
pop
inc
retf
inc
mov
cmc
jp
es
retf
sbb
cmps
sub
and
fsub
jmp
mov
fsubr
mov
fucomi
scas
push
lock
jl
jb
sbb
xlat
fidiv
adc
dec
rcr
(bad)
pop
adc
jmp
push
ss
daa
ficomp
dec
aas
imul
mov
push
out
sti
lahf
adc
pop
sbb
retf
out
fdivr
mov
jl
fimul
mov
sbb
sti
mov
ss
cmc
xchg
or
in
lods
and
cmp
scas
xchg
scas
or
inc
xchg
(bad)
sub
inc
fisubr
cmp
jo
js
add
or
push
push
outs
adc
mov
cmp
inc
jnp
lods
test
mov
inc
dec
mov
xchg
aaa
or
popa
sub
push
in
sar
mov
jg
inc
push
retf
or
dec
mov
fsubrp
pushf
pop
neg
inc
leave
jmp
data16
outs
jno
stos
stos
cwde
and
pop
jns
sbb
mov
aaa
sub
test
and
push
xchg
cmp
movs
into
or
lock
popf
cmps
add
inc
mov
mov
mov
add
fcmovbe
inc
inc
sub
xor
pop
mov
jp
lock
neg
in
mov
or
call
or
dec
cwde
inc
aam
clc
jle
cwde
jb
push
hlt
cmp
inc
aad
lods
pop
inc
jle
xor
mov
mov
or
adc
cmp
scas
cmp
sub
out
jbe
xchg
repz
mov
stos
movs
xchg
stos
cmp
cmp
in
sbb
xor
or
ret
test
out
nop
(bad)
dec
jecxz
or
pusha
mov
jecxz
fucomi
sbb
or
outs
pusha
sub
repz
ror
mov
fwait
and
pop
ficomp
mov
aas
mov
je
mov
sub
pop
mov
push
sub
dec
push
or
nop
jecxz
mov
mov
dec
mov
jne
adc
lock
lock
sbb
sbb
pop
sub
pop
data16
loope
xchg
fmul
add
scas
mov
jns
mov
cmc
xchg
fs
or
xchg
mov
repnz
lods
(bad)
jp
sub
int3
fnsave
stos
pushf
retf
push
push
xor
test
arpl
xchg
push
test
cmp
inc
add
test
push
(bad)
push
pop
push
sub
sbb
(bad)
pop
cmp
test
sub
sbb
fisub
pop
mov
xor
push
lods
mov
lds
fsubr
call
pop
mov
in
pop
xchg
cmps
jl
mov
hlt
dec
nop
mov
and
push
stos
adc
aad
lea
lods
(bad)
pop
aam
push
loope
dec
mov
xchg
jns
enter
(bad)
in
push
xor
mov
inc
push
xchg
or
or
pop
sbb
and
dec
push
lds
cmps
mov
movs
sub
mov
ret
outs
inc
lods
cmovne
dec
iret
enter
add
jmp
cli
pop
arpl
es
dec
rcl
arpl
sbb
cmp
in
push
jnp
enter
(bad)
(bad)
clc
sub
push
push
iret
ret
push
arpl
sub
shr
inc
fsubr
and
daa
shl
addr16
test
cmc
mov
jnp
push
xor
stc
iret
lds
dec
arpl
ja
cmps
aaa
cmp
pop
dec
adc
daa
mov
pop
daa
shr
aad
xor
jne
pop
add
xchg
gs
push
jle
daa
inc
ds
rol
nop
xor
sbb
fstp
xlat
ins
imul
xor
mov
in
shl
enter
sbb
mov
sbb
and
jae
mov
xchg
push
scas
mov
lods
mov
mov
push
xor
popa
and
pop
mov
sahf
enter
rcr
mov
push
loope
shl
jne
xchg
(bad)
mov
pop
xchg
sbb
loopne
(bad)
add
adc
mov
stos
sbb
mov
lods
jns
inc
mov
dec
push
xchg
retf
mov
inc
sub
xchg
inc
rcr
xchg
lock
lods
mov
or
fcom
in
jp
xchg
pushf
in
out
adc
clc
jmp
push
daa
adc
cmp
and
mov
ret
into
enter
int
push
int
mov
jns
dec
retf
aam
inc
xor
mov
mov
push
fld
add
or
and
iret
dec
pop
(bad)
rol
mov
in
ret
dec
loope
inc
dec
xchg
inc
out
push
fidiv
mov
stos
addr16
jl
sub
jb
mov
sar
dec
mov
dec
pop
dec
sub
neg
adc
xchg
or
pusha
dec
add
jle
add
xor
or
aad
pop
push
pop
xchg
sti
arpl
xor
dec
sub
mov
mov
jae
cld
jo
stc
cmp
mov
cmp
test
sbb
in
inc
aam
mov
xchg
(bad)
pop
xchg
add
sub
xchg
cld
cmp
push
into
mov
(bad)
xor
cmp
(bad)
mov
cmp
xchg
push
fld
test
(bad)
out
pop
or
sbb
adc
xchg
pop
outs
(bad)
mov
add
cmc
test
loop
dec
and
sub
out
adc
repz
sbb
mov
sub
pop
and
sti
(bad)
(bad)
ss
jnp
mov
shr
cwde
(bad)
enter
sbb
clc
in
outs
sbb
(bad)
sbb
ficom
inc
and
gs
dec
xor
cmp
cld
add
push
call
lock
push
xchg
sbb
dec
(bad)
fidivr
cmp
shl
mov
and
ins
jb
or
sub
sub
div
outs
js
outs
pop
jne
ins
or
ret
adc
pop
movs
sub
or
sbb
bound
out
(bad)
push
cmp
std
push
add
sub
cmp
movs
lahf
mov
(bad)
scas
repnz
sbb
fadd
pop
jp
aad
mov
sub
std
dec
xor
sub
fwait
bound
shl
into
je
pop
inc
sub
jg
mov
call
sbb
add
add
lock
inc
xchg
fs
out
out
out
out
jmp
popa
jmp
fisttp
cli
and
(bad)
movs
test
adc
or
cmp
stos
sahf
mov
dec
fwait
inc
(bad)
(bad)
fst
or
retf
(bad)
aaa
in
xchg
bound
test
xor
fucom
jl
sahf
jge
das
test
mov
in
adc
push
mov
aaa
mov
clc
jmp
in
mov
adc
lods
lock
aas
out
cmp
xor
xchg
sahf
mov
in
retf
or
fwait
push
sbb
retf
jae
test
leave
(bad)
rcr
out
push
mov
hlt
jb
add
xchg
and
inc
(bad)
sbb
les
inc
xchg
mov
sar
pop
xchg
and
cmp
das
xchg
scas
inc
jge
adc
sbb
daa
sahf
mov
inc
aas
arpl
xor
rcl
cmp
fld
pop
adc
std
repz
div
adc
mov
addps
test
das
push
adc
ds
push
aas
cmp
mov
outs
jns
std
push
and
aaa
push
jg
mov
sub
push
dec
sub
(bad)
or
xor
loope
cmp
add
mov
cli
pop
sbb
sbb
pop
(bad)
fstp
inc
dec
jge
bound
arpl
sahf
inc
push
arpl
sbb
cmp
fidivr
xor
popf
out
xor
ret
and
mov
retf
loopne
fiadd
mov
add
ja
dec
iret
xchg
dec
pop
imul
inc
inc
paddw
fwait
pop
mov
pusha
cli
sbb
fild
rol
sbb
sbb
ds
enter
test
mov
push
call
enter
or
mov
jmp
out
xor
jne
pop
cmp
and
push
pushf
pop
add
xor
std
mov
popf
xor
jne
sti
adc
push
push
in
lahf
cmp
or
bswap
cmc
mov
sub
aam
fwait
jmp
in
jmp
ror
mov
into
test
and
js
(bad)
pop
xor
xchg
repz
sub
idiv
mov
adc
idiv
mov
jmp
(bad)
in
xor
add
xlat
fild
call
je
aaa
in
movs
xor
outs
and
add
xor
loope
mov
pusha
sbb
push
scas
stos
cmps
inc
adc
pop
push
imul
(bad)
repz
and
push
js
ret
jno
pop
add
popa
mov
mov
sub
adc
xor
and
pop
cmp
xor
and
fcomp
push
lock
pop
ja
adc
addr16
out
or
pop
in
lea
dec
sub
inc
jl
retf
xor
and
in
dec
xor
sbb
daa
push
dec
(bad)
xchg
enter
cs
pop
sub
or
arpl
mov
pop
sub
push
and
push
stos
push
inc
int
fist
adc
add
nop
jns
xor
mov
repz
sbb
pushf
mov
push
jne
mov
add
gs
es
aaa
cmc
sub
sub
xchg
cmp
hlt
push
cmps
cdq
fxch
sbb
cdq
mov
pop
outs
mov
in
aas
inc
paddusb
test
push
jmp
sbb
(bad)
test
les
mov
fwait
xor
fcmovnbe
shl
sbb
movs
cmps
out
add
les
inc
mov
sbb
mov
ja
mov
pop
adc
shr
jne
in
fild
test
dec
mov
mov
xchg
scas
adc
xchg
ins
mov
sbb
mov
inc
or
lea
frstor
lds
mov
(bad)
jmp
popa
and
nop
jns
iret
mov
and
add
mov
xor
shl
adc
fistp
shl
adc
das
push
push
jl
int3
xchg
mov
mov
cli
sub
xor
dec
iret
ds
push
add
sbb
mov
cs
xor
out
stos
shl
lds
call
pushf
dec
sub
push
push
sub
nop
mov
mov
stc
jp
jno
jl
mov
xor
or
(bad)
push
push
out
lea
ficomp
sbb
jns
imul
(bad)
(bad)
adc
add
cmps
shl
pop
test
stc
and
inc
mov
dec
aam
aas
aaa
mov
je
adc
mov
push
ds
jae
add
pop
jmp
push
mov
mov
lock
adc
adc
loop
loop
rcl
sub
mov
repnz
push
dec
lahf
adc
adc
div
enter
or
mov
(bad)
fmul
dec
repz
push
nop
into
pop
xor
pop
ret
sub
outs
or
outs
das
xlat
out
adc
stos
push
test
stc
aaa
or
ja
pop
shl
xchg
mov
push
cmc
or
cmp
dec
sbb
jae
or
sbb
or
xor
arpl
push
shl
xchg
shl
loope
add
and
push
imul
pop
loop
xlat
outs
(bad)
ins
idiv
cs
xchg
aas
call
loopne
js
mov
shr
les
and
jecxz
push
mov
inc
dec
dec
addr16
pop
iret
lea
movs
js
jmp
push
pop
or
jno
pop
pusha
push
clc
pop
and
pop
fwait
stos
dec
adc
fcomp
jle
fisubr
inc
sub
(bad)
inc
call
ss
(bad)
imul
jp
or
dec
and
and
pusha
shl
addr16
mov
(bad)
imul
scas
jle
sbb
xor
inc
fbstp
dec
sub
ret
push
sbb
cmc
jbe
mov
sub
shl
outs
movs
adc
in
xchg
mov
mov
ds
mov
out
jle
shr
(bad)
repz
icebp
rcl
mov
stc
lods
sbb
pusha
adc
imul
lock
fwait
dec
mov
push
jecxz
or
sub
scas
(bad)
popf
cmp
adc
call
sbb
mov
dec
mov
enter
mov
sub
outs
test
ret
cmp
out
mov
cmps
maxps
shl
popa
in
mov
cmc
loope
xor
fldcw
or
mov
iret
add
jae
(bad)
adc
mov
pop
(bad)
and
sub
add
fdivr
jmp
scas
cmp
mov
dec
and
mov
jb
packssdw
jecxz
jns
cmp
xchg
pop
push
dec
daa
add
jp
push
pushw
mov
mov
jge
fild
xlat
pop
cld
movs
test
jbe
in
rcl
inc
push
test
mov
cmps
dec
push
mov
cmp
and
popa
and
rcl
mov
adc
push
or
ss
test
(bad)
loop
mov
jnp
add
add
(bad)
jl
add
pop
inc
push
dec
in
inc
xchg
xor
cs
js
pop
cmc
stos
jbe
cmc
and
(bad)
jns
shl
loopne
add
sti
add
lods
ss
dec
xor
mov
or
mov
(bad)
sbb
push
jae
mov
adc
sub
push
gs
xchg
sbb
pop
or
mov
fsubr
cld
cmps
pop
scas
xor
(bad)
sbb
enter
jp
les
and
xor
les
dec
aas
out
pop
jge
out
retf
in
pop
iret
ret
(bad)
popa
jnp
jmp
ror
add
out
cmp
pop
pop
or
test
mov
inc
and
popa
jge
stos
cmc
sbb
fwait
pushf
hlt
mov
pop
ret
loope
cmp
movs
cs
add
sub
scas
enter
jae
(bad)
das
bound
pop
jmp
mov
int3
sub
push
xchg
pop
retf
pop
aam
and
xor
push
mov
outs
out
add
xor
cmp
arpl
xor
mov
js
(bad)
cmp
push
mov
addr16
pop
jge
cmp
scas
call
outs
or
cmc
jecxz
push
inc
pop
push
out
leave
imul
fwait
ds
xchg
(bad)
fsubr
and
call
fbstp
pusha
dec
fnsave
inc
mov
sbb
mov
or
cmps
lods
fst
fiadd
dec
arpl
cmp
ret
mov
adc
jmp
lds
fld
xor
or
sbb
popf
imul
add
jl
imul
pop
int
fmulp
cmp
mov
aas
jns
imul
rcr
sub
lock
imul
lds
mov
call
shl
cmp
push
(bad)
clc
sbb
pushf
sbb
lods
push
jns
mov
sub
jbe
add
cmp
mov
cmc
fwait
inc
mov
lds
jl
add
mov
sub
push
adc
mov
xchg
push
out
jns
xlat
pop
mov
addr16
cmp
inc
sbb
daa
movs
mov
sub
and
inc
add
push
pop
push
and
inc
aad
mov
imul
inc
cmp
daa
mov
mov
adc
add
call
aad
jnp
dec
mov
pop
(bad)
cli
in
pop
push
pop
ja
push
cs
daa
sbb
ror
dec
pop
add
or
icebp
sub
(bad)
add
retf
dec
shld
cwde
jb
movs
inc
or
test
jno
push
int3
repnz
loop
jo
push
ret
shr
fwait
(bad)
xlat
das
mov
in
jecxz
lods
jg
dec
aas
aam
jecxz
and
fistp
mov
inc
cmc
int
push
cmp
sub
scas
add
out
out
in
lods
test
fwait
and
andnps
jmp
fwait
psllw
into
jmp
out
sub
adc
cmp
lock
loope
jle
sub
test
mov
fs
out
pusha
lods
es
lahf
mov
in
int
fbstp
bswap
pop
jo
mov
rcr
mov
inc
push
fimul
or
call
(bad)
pop
mov
nop
xor
loopne
lods
mov
dec
mov
pop
jae
jb
add
movs
repnz
mov
pop
nop
push
ins
shl
loope
or
jmp
fs
xchg
pop
or
add
cwde
call
cmp
mov
push
sub
sti
call
mov
sbb
fcomp
cmp
xchg
adc
add
(bad)
rcr
cdq
cmp
psubd
je
call
xor
iret
js
jo
aaa
outs
aas
sub
stc
jno
jge
inc
jl
cld
mov
push
mov
adc
xor
jbe
aaa
and
mov
(bad)
fxch
(bad)
sti
sub
and
xor
mov
pop
(bad)
mov
xchg
ins
dec
adc
push
imul
and
mov
or
mov
cmps
add
loopne
lahf
jno
jl
and
and
outs
mov
lods
stc
dec
adc
xchg
pop
cdq
hlt
movs
push
psrld
daa
js
jge
or
popa
dec
test
in
pusha
cmp
inc
ins
inc
fs
dec
mov
mov
mov
adc
test
shl
add
add
mov
xlat
inc
neg
cmp
int
das
(bad)
xchg
cmp
sub
fild
and
jbe
and
mov
adc
push
inc
mov
(bad)
mov
inc
cld
inc
pop
nop
mov
mov
push
mov
repz
ja
jbe
pop
add
fs
mov
adc
int3
nop
xor
popf
cmps
rcl
aaa
dec
into
xor
mov
in
popa
rol
xor
sub
call
loope
or
adc
xchg
push
sub
sub
ins
fwait
mov
pop
cmp
int
outs
loope
push
(bad)
inc
shl
in
inc
lds
pop
sub
js
jl
sbb
out
dec
jmp
add
xlat
cwde
adc
xchg
pop
nop
test
and
cmps
mov
xor
aaa
xlat
mov
mov
les
dec
ret
add
retf
stc
imul
clc
sbb
push
jle
scas
int
iret
std
clc
in
pop
(bad)
mov
popa
test
aam
fisttp
jns
jno
shr
cmc
popa
test
sbb
pop
inc
mov
into
xor
jae
push
stos
add
in
ja
sub
jmp
mov
adc
push
pop
imul
out
and
scas
ret
cmp
scas
jno
mov
jne
ret
daa
punpckhdq
sub
stos
cmps
(bad)
leave
inc
dec
adc
shl
push
add
nop
add
fmul
and
xchg
jb
mov
sbb
sub
retf
imul
sbb
cmc
iret
dec
test
push
dec
cmp
cdq
(bad)
pop
(bad)
adc
add
pop
pop
sbb
lock
ret
push
mov
mov
(bad)
loop
loope
stos
push
mov
pop
or
jl
adc
and
xor
push
jb
push
add
iret
in
loopne
mul
ja
rcl
das
add
rol
pusha
and
mov
mov
(bad)
push
xlat
add
jae
ret
mov
xchg
jbe
mov
cmp
(bad)
int
pop
jmp
mov
call
mov
iret
pusha
jo
and
es
aam
rcr
out
adc
sbb
add
dec
test
dec
(bad)
push
stos
pop
mov
mov
sbb
mov
mov
sub
(bad)
xor
push
mov
adc
fsqrt
scas
cld
leave
sbb
pop
xor
sub
mov
dec
popf
xchg
mov
pop
sub
das
stos
mov
and
jno
xchg
stc
not
mov
outs
push
mov
aam
pop
pop
(bad)
gs
aad
js
jo
xor
pop
pop
inc
sbb
in
mov
rcr
jg
mov
xor
and
push
das
movs
push
pop
ja
or
dec
ja
retf
xor
add
mov
add
cmps
repz
mov
cmps
out
sbb
popf
pusha
push
stos
sub
imul
pop
xchg
test
into
or
mov
jp
dec
push
test
xchg
mov
mov
sub
stc
clc
fcomp
xlat
fist
cs
aas
mov
jmp
nop
jle
clc
ins
xor
add
cld
(bad)
js
sahf
retf
pushf
add
dec
pusha
shr
ja
jno
retf
add
stc
add
add
mov
mov
ja
aas
ret
imul
cmp
mov
cs
and
mov
xor
dec
push
scas
adc
lds
push
ss
inc
call
xchg
cs
rol
iret
or
js
neg
jno
sbb
fcom
xor
jmp
rol
je
add
mov
mov
lahf
imul
add
cmp
rcl
push
dec
mov
cmp
pop
call
test
mov
mov
adc
aad
mov
jmp
test
je
fldcw
add
movs
in
das
mov
adc
outs
mov
test
add
xor
inc
pop
sub
pop
mov
mov
and
(bad)
xchg
es
clc
test
iret
jb
sbb
rcl
and
movs
jnp
inc
outs
cmps
xchg
fsubr
mov
pop
sahf
les
jp
xchg
jb
sub
xor
jp
sub
mov
xor
mul
cdq
xchg
popa
into
cmp
xchg
ret
sbb
cli
jo
push
cdq
stos
outs
mov
cmp
mov
fld
xchg
dec
dec
xchg
and
hlt
jbe
fimul
or
mov
data16
imul
sub
bsf
js
not
aad
xlat
or
xor
in
jae
(bad)
imul
fnstsw
push
or
(bad)
push
cmp
sbb
iret
movs
mov
mov
sti
mov
cmps
xchg
mov
int
gs
cmps
sbb
jbe
mov
shr
sub
cmp
pop
xchg
call
test
(bad)
imul
pop
mov
jmp
adc
sub
pusha
stos
imul
dec
or
sahf
inc
arpl
jg
(bad)
outs
outs
cwde
xchg
xchg
int3
inc
daa
dec
mov
or
verw
sbb
ss
push
and
pop
and
imul
out
push
cmc
call
mov
cmp
loope
cmp
and
rcr
jecxz
std
mov
stos
enter
jae
or
adc
fimul
cli
sbb
dec
pop
jge
call
cld
jno
aas
(bad)
icebp
jnp
cmp
shl
leave
sbb
popa
retf
add
in
pop
lea
hlt
cmp
sbb
rcl
pop
inc
clc
in
hlt
(bad)
(bad)
aam
sbb
cdq
imul
sub
push
sub
clc
mov
mov
leave
jecxz
sub
fistp
cmp
adc
push
push
loop
cmc
cmp
push
push
lods
les
ds
push
mov
int
call
mul
shr
arpl
sbb
xchg
and
and
out
sahf
adc
bound
mov
sar
inc
inc
leave
fwait
js
aad
adc
fcmovnb
leave
scas
adc
mov
dec
inc
xchg
sub
ss
gs
ja
fstp
mov
cmps
repnz
aad
push
cld
mov
shl
fcmovnb
mov
or
into
out
dec
loope
or
push
aas
das
bnd
movs
rcr
cmp
cld
pop
test
aaa
outs
fdivp
pop
jecxz
or
iret
inc
stos
add
cs
push
xchg
push
fnstenv
mov
call
mov
cmp
int3
adc
pusha
loopne
sub
int
int
popa
into
push
xlat
inc
leave
push
invd
mov
xor
dec
pop
sub
loop
mov
in
(bad)
in
or
pop
xchg
dec
shl
pmulhw
or
jle
lea
mov
imul
stos
and
std
out
push
fiadd
dec
adc
in
inc
nop
mov
leave
push
jb
std
hlt
and
sub
push
mov
xor
shl
pop
cmc
mov
sub
pop
mov
call
or
mov
sbb
jns
and
cmp
inc
pop
push
hlt
or
daa
add
(bad)
(bad)
mov
xlat
es
or
mov
scas
sbb
mov
jne
adc
and
lahf
fistp
ss
sbb
int3
add
shl
mov
daa
lahf
inc
div
xor
or
cwde
xchg
push
dec
jmp
rol
bound
pop
sub
sub
fist
and
mov
push
fimul
inc
mov
pop
loop
dec
sub
dec
sub
push
scas
push
call
test
outs
xchg
pop
jns
or
mov
repz
gs
mov
rol
sub
xor
bound
es
xlat
mov
add
enter
ins
call
sahf
iret
mov
cdq
or
rcl
int
int3
pusha
gs
pop
mov
and
push
adc
adc
push
adc
popf
jae
icebp
out
cmp
xor
ss
in
repnz
push
fs
pushf
data16
cmp
push
repz
xor
dec
enter
test
arpl
xchg
sbb
and
or
stos
imul
test
movs
push
jbe
mov
aam
pop
push
pushf
inc
cdq
dec
mov
rcr
sbb
xchg
inc
out
stos
(bad)
scas
(bad)
in
(bad)
sub
inc
dec
xor
add
inc
add
jo
mov
mov
mov
cmps
mul
aad
lahf
jae
jno
cmc
cwde
iret
inc
push
or
jne
fisubr
push
test
xlat
dec
cmp
sbb
ja
xchg
xchg
sbb
test
adc
sti
rcr
mov
dec
inc
lahf
sbb
mov
bound
adc
cmc
outs
push
fcmovu
cmps
ret
jmp
stc
out
or
dec
ins
push
adc
(bad)
adc
mov
inc
push
cld
dec
test
movs
mov
pop
rcr
jmp
shl
stos
pop
das
mov
xchg
out
movs
ja
icebp
out
movs
rcr
jb
inc
arpl
adc
dec
cmc
out
hlt
sbb
leave
xchg
repz
loop
out
repz
xchg
mov
sti
mov
pusha
dec
ins
call
arpl
adc
cmp
fcomp
xchg
call
sahf
mov
mov
push
inc
and
ret
sub
inc
push
adc
sbb
fs
arpl
repz
mov
in
mov
out
push
mov
mul
cdq
push
jbe
adc
mov
dec
jb
inc
sbb
xchg
movs
call
in
test
outs
pop
mov
int
popa
sti
iret
add
dec
or
push
dec
sbb
addr16
sub
stc
sub
fsub
pop
std
sub
mov
(bad)
mov
xchg
fmul
pop
cmc
test
push
cmps
out
es
mov
movs
shl
mov
imul
pop
ds
push
lea
mov
jne
rcl
imul
test
jo
lods
jg
iret
scas
in
popa
popf
xchg
jl
xchg
jge
outs
scas
pop
cli
ret
mov
mov
mov
push
dec
(bad)
fs
aam
aad
fstp
sbb
or
dec
jmp
sub
mov
ret
cwde
inc
int
nop
cmp
scas
ror
into
adc
mov
push
adc
mov
(bad)
mov
xlat
int3
out
or
xchg
mov
shr
mov
fsubr
imul
int
sub
lds
aaa
in
sub
cmps
sbb
dec
add
inc
jge
dec
push
hlt
fisttp
scas
ja
sbb
adc
(bad)
cs
jg
outs
clc
call
ffree
fisttp
xor
jo
lahf
push
sub
adc
stc
xchg
in
imul
xor
dec
cmps
sbb
mov
xor
dec
xchg
jno
inc
loop
dec
pop
mov
fbstp
call
cmps
mov
and
xchg
mov
movs
clc
or
jnp
call
cmc
inc
fdiv
inc
cmps
sti
dec
dec
mov
mov
xlat
sbb
mov
or
addr16
add
xchg
push
imul
shl
add
stc
cmps
push
daa
imul
push
iret
push
jo
xchg
xchg
ds
jne
jle
int3
fs
popf
fstp
adc
push
outs
push
pop
adc
cmp
jo
arpl
scas
sbb
xor
adc
stos
push
inc
jno
and
mov
repnz
fdiv
cmp
dec
mov
adc
xchg
sub
add
xor
pop
xchg
add
lods
not
sub
adc
sub
push
arpl
mov
outs
xor
stos
xlat
pop
cmp
dec
lods
mov
xor
adc
call
std
jg
clc
jecxz
loop
cmp
sbb
inc
dec
pop
out
lods
hlt
push
addr16
xchg
jmp
or
cmp
iret
out
adc
mov
xchg
dec
mov
cli
fdiv
repz
shl
(bad)
imul
or
cmc
ss
pop
pop
retf
ror
xchg
div
sub
imul
out
fimul
cli
or
inc
add
push
loope
xor
mov
inc
push
lock
xchg
push
in
jno
pop
inc
aad
cmps
das
mov
std
ror
pushf
in
push
dec
inc
sbb
push
out
aas
cmc
xchg
sbb
pop
sub
jg
js
aad
push
mov
pop
in
gs
cmp
add
push
lahf
push
in
add
mov
push
fsubr
xchg
iret
hlt
rol
(bad)
out
(bad)
hlt
cmp
cmps
pop
mov
lods
pop
sbb
push
and
fwait
ret
or
test
jns
enter
inc
das
ins
mov
inc
hlt
cmp
dec
xchg
mov
imul
emms
cmp
sbb
and
leave
int3
pop
movs
and
mov
and
loope
pusha
xor
jnp
pop
aam
and
aaa
sub
es
bound
mov
pop
mov
xchg
fsub
(bad)
addr16
pop
mov
xor
in
out
ret
pop
mov
jl
js
inc
mov
pop
push
jns
shl
(bad)
dec
pushf
enter
xchg
scas
jmp
hlt
pop
sbb
adc
dec
popa
cmps
sbb
cmp
mov
frstor
shr
(bad)
stos
addr16
mov
(bad)
cmps
popa
test
fdiv
inc
xor
dec
pop
sbb
fstp
int3
mov
inc
xor
out
test
pop
adc
pusha
lds
xchg
dec
mov
cmp
jns
pop
xchg
ret
(bad)
mov
mov
pop
daa
std
lahf
loop
movs
push
push
movs
shl
loope
rcl
loope
mov
gs
inc
test
(bad)
imul
clc
popa
mov
mov
push
sub
pop
ret
jg
add
mov
and
cmp
enter
cmps
retf
cld
sbb
sbb
ret
repnz
call
xchg
cmps
adc
xchg
xchg
fstp
pop
fyl2x
pop
and
into
mov
mov
inc
push
dec
push
fist
xchg
push
out
cmps
sbb
sbb
gs
movs
shr
aaa
adc
jne
imul
lea
cdq
add
push
jl
mov
call
push
jno
mov
out
in
loopne
or
cli
and
jne
fist
rol
mov
in
pop
clc
in
mov
(bad)
sar
sbb
test
cld
dec
dec
dec
adc
fld
cmp
push
xor
xchg
mov
sub
dec
ss
adc
xor
push
xor
mov
test
shl
popa
inc
sbb
pop
je
sbb
and
xchg
loope
out
or
lods
fdivrp
inc
std
dec
jle
inc
loop
push
lahf
dec
fs
mov
aam
movs
cmp
mov
imul
mov
out
jns
jge
call
loopne
xlat
lahf
add
mov
imul
scas
imul
ret
fsubr
in
imul
sub
gs
adc
xor
sbb
div
inc
test
cmc
clc
adc
jno
inc
jns
dec
iret
mov
scas
xor
fstp
nop
cld
xor
stos
push
jnp
popf
rcr
add
imul
pop
hlt
inc
es
aad
inc
dec
cmp
mov
(bad)
ficomp
imul
not
sub
jmp
pop
pusha
cdq
test
mov
cwde
xor
retf
jnp
(bad)
daa
ror
mov
sbb
ret
or
add
push
stos
push
ret
xor
xchg
mov
push
xchg
mov
test
into
jne
ss
add
(bad)
(bad)
(bad)
xchg
sbb
jp
test
xor
dec
xor
pop
pop
jmp
rol
xchg
jb
push
dec
in
pop
arpl
jae
mov
cld
mov
lock
dec
mov
sbb
loopne
jo
mov
sbb
push
pusha
movs
iret
test
mov
mov
xchg
dec
cld
loope
fcmovne
mov
iret
dec
pop
neg
adc
cmc
pop
ja
adc
addr16
adc
xchg
mov
fmul
sti
inc
int3
dec
dec
push
pop
movs
mov
sub
pusha
push
sub
xor
fstp
or
jae
pop
inc
test
lock
pusha
xchg
pop
ja
cld
fucom
mov
mov
jno
or
jae
mov
mov
fsubr
xlat
neg
jb
scas
out
push
cwde
xchg
sub
mov
cmp
dec
repz
jg
sub
retf
push
fnstcw
test
and
fstp
in
sub
into
xor
shl
out
scas
pop
fadd
cmp
or
sbb
mov
adc
mov
sub
dec
xchg
mov
test
and
adc
aad
lea
add
test
in
out
and
inc
(bad)
ins
pushf
sub
mov
daa
cmp
pop
xor
mov
jo
jnp
xchg
xchg
into
pusha
imul
cmps
and
jne
adc
jmp
pop
xor
add
inc
sti
stos
mov
cmps
pop
lahf
addr16
enter
sub
mov
add
dec
mul
pusha
pusha
push
out
sub
xor
mov
les
(bad)
out
test
jge
lock
leave
jmp
cld
in
shr
mov
aaa
or
sub
xchg
xchg
dec
fs
hlt
xor
cmps
lahf
sbb
mov
cmc
(bad)
push
mov
xchg
in
test
icebp
arpl
sbb
in
inc
mov
add
and
scas
or
xor
(bad)
cwde
fdivr
call
(bad)
xchg
add
mov
mov
out
inc
(bad)
jns
cs
or
or
or
push
and
in
sti
popf
add
mov
dec
push
(bad)
retf
rcr
jecxz
pop
jne
inc
icebp
pop
push
jbe
fcomip
inc
sbb
ss
mov
test
jp
dec
ror
pop
xor
or
fcom
js
pop
cmp
and
cli
pop
ret
retf
lds
xchg
sbb
mov
jmp
sub
mov
into
add
pop
pop
jge
push
inc
push
pop
sub
adc
nop
pop
retf
(bad)
mov
sbb
arpl
add
and
test
and
int
jns
jg
(bad)
add
pushf
mov
dec
cmp
push
push
out
xchg
jle
(bad)
ja
not
pushf
clc
rcr
dec
mov
push
test
xor
sub
retf
js
add
pop
adc
aaa
xor
pop
or
dec
mov
stos
fidivr
aas
fmul
jb
mov
std
cmps
xor
stc
fbld
adc
sub
call
clc
cld
and
loopne
fcmovb
jmp
(bad)
cmp
out
scas
dec
sti
xor
xor
jl
jge
inc
(bad)
sbb
push
xchg
je
pop
jo
add
(bad)
loop
out
mov
xchg
movs
push
leave
mov
add
adc
loop
inc
in
mov
mov
les
aaa
ret
dec
out
jmp
jbe
push
inc
add
or
aam
or
lahf
or
pop
xor
jp
shl
or
jecxz
sbb
adc
mov
pushf
inc
jbe
(bad)
or
mov
pop
or
fwait
pop
xor
dec
out
mov
xchg
call
mov
mov
jmp
fwait
enter
ret
adc
cs
or
leave
loope
pop
imul
jmp
pop
stc
push
fimul
mov
nop
popf
jg
fisubr
cmp
or
push
mov
and
dec
jo
inc
lahf
cmp
outs
int3
lods
adc
not
dec
mov
dec
cwde
stc
or
xchg
dec
dec
xchg
add
xchg
pop
mov
add
mov
dec
mov
bound
frstor
dec
call
lds
xor
pop
dec
aam
pop
and
mov
rcr
pop
push
pop
out
call
sub
repz
add
dec
into
push
push
fwait
out
dec
add
sub
shl
adc
pop
jb
mov
jecxz
sbb
movs
lods
sar
mov
vphaddudq
data16
into
jne
mov
call
std
adc
mov
mov
mov
out
jb
into
mov
cmp
push
icebp
xchg
dec
inc
mov
cld
loope
mov
dec
ret
xchg
jno
or
mov
or
stos
cmps
hlt
xchg
ins
inc
jmp
cwde
mov
cmp
mul
jecxz
dec
xor
mov
nop
fdivrp
out
dec
jne
push
jo
xchg
outs
mov
and
je
adc
sub
test
mov
ficom
xchg
mov
or
jb
sti
loope
inc
hlt
nop
(bad)
cld
jge
push
popf
je
and
sbb
cmp
add
mov
mov
mov
in
inc
cmp
jl
(bad)
repz
icebp
inc
mov
dec
jmp
push
fcmovnbe
xchg
mov
(bad)
imul
movs
(bad)
jl
jecxz
push
mov
pop
daa
cld
retf
lahf
mov
and
pop
sub
sub
xchg
imul
adc
and
and
xor
fisubr
push
sub
xchg
jge
out
xor
int3
sbb
sub
fs
xchg
fsubr
mov
push
mov
aas
(bad)
jbe
pop
mov
repnz
or
mov
jecxz
adc
jmp
or
xlat
push
fwait
mov
ins
mov
dec
test
cmp
nop
nop
sub
arpl
pushf
jo
inc
ins
jg
cmp
jmp
retf
in
adc
add
clc
(bad)
popa
pop
(bad)
xchg
xchg
iret
and
cmp
enter
xchg
loop
mov
in
xchg
mov
loope
jp
rcr
inc
inc
add
mov
inc
adc
xchg
call
and
xchg
in
adc
mov
jo
pop
pop
pop
push
inc
xchg
or
loopne
stos
into
rol
fsubrp
adc
(bad)
out
mov
fs
mov
inc
cdq
enter
or
or
mov
loopne
xor
ja
std
push
retf
lahf
call
jo
pop
jl
jp
dec
mov
mov
add
jnp
cmps
xor
xor
xchg
push
push
mov
mov
fidivr
inc
xor
and
mov
and
loopne
sahf
(bad)
sbb
ss
aad
movs
out
pop
xor
fcomi
and
push
cs
das
mov
mov
stos
pop
loop
imul
push
repz
imul
jb
or
push
inc
sbb
lods
pop
cmp
(bad)
es
mov
pusha
dec
and
retf
xlat
jae
mov
inc
in
shr
(bad)
out
cld
fsubr
sbb
nop
std
push
test
enter
fimul
inc
cdq
sub
enter
jmp
dec
sti
mov
pop
cmps
les
dec
js
cmp
lahf
cld
lods
add
xchg
(bad)
or
inc
push
jle
add
mov
adc
(bad)
cmp
clc
push
cmp
push
leave
dec
jns
aam
fimul
adc
pusha
mov
fmul
arpl
mov
dec
rol
sti
xor
and
dec
jnp
xchg
lds
adc
mov
data16
rcl
sub
lods
pushf
call
jge
mov
push
addr16
fisub
mov
push
push
lods
out
repz
and
rcl
in
mov
sar
scas
and
mov
enter
adc
mov
sar
xchg
in
mov
scas
fist
inc
popf
aam
cwde
mov
fnstcw
cld
sbb
aas
mov
xchg
rcl
(bad)
iret
jmp
iret
cmp
sbb
mov
stc
push
or
pop
mov
inc
into
adc
adc
mov
movs
int3
cmp
sub
fucomp
and
cdq
push
(bad)
fdivr
dec
xor
sbb
jecxz
mov
mov
fs
sub
in
jge
sti
sbb
outs
pop
xor
scas
in
mov
js
adc
(bad)
jge
bound
jb
xchg
inc
orps
adc
dec
out
sub
sub
retf
icebp
repnz
adc
cmp
fadd
dec
jb
and
fsub
or
add
pop
mov
pop
dec
sub
jmp
out
sub
arpl
jg
fs
sar
sbb
stos
dec
jmp
inc
jge
mov
add
lock
xchg
mov
pop
xchg
imul
add
and
xchg
repnz
mov
mov
leave
hlt
hlt
out
push
xor
mov
jmp
out
xchg
out
call
gs
lock
stos
dec
mul
fadd
sbb
js
mov
(bad)
nop
push
or
add
dec
mov
out
push
imul
js
jecxz
xor
fdivr
fidivr
mov
retf
scas
sti
lds
push
test
jne
shr
adc
into
jmp
xchg
rcl
ins
dec
pusha
repz
sbb
xor
push
push
das
or
add
sbb
stc
fld
mov
pop
push
xor
retf
(bad)
mov
pop
rcl
add
fisttp
mov
outs
ror
inc
jmp
sub
sub
and
pop
inc
inc
sub
mov
mov
loop
in
pop
outs
push
and
fs
ret
adc
shl
in
into
pusha
sub
jmp
fcmovnu
(bad)
mov
repz
fcmovnu
fadd
push
adc
push
nop
pop
das
sbb
jb
sub
inc
xor
mov
dec
xchg
cdq
nop
mov
dec
sub
pop
mov
aam
sub
fwait
mov
arpl
mov
jbe
lods
repz
dec
and
movs
les
jmp
mov
(bad)
ins
mov
cmp
leave
fst
mov
iret
out
xor
push
repnz
test
xchg
sub
cmp
mov
stos
pop
loope
out
movs
push
jb
das
mov
mov
lods
es
adc
push
icebp
fdiv
ss
inc
inc
and
add
pop
push
fistp
repnz
rol
mov
in
mov
adc
jecxz
es
xchg
push
inc
push
mov
popa
es
mov
cmp
jge
mov
nop
push
leave
cmp
inc
pop
fisub
ffreep
push
cmp
loopne
clc
fdivr
fcom
pop
sub
cmp
jmp
pop
jb
mov
push
add
jb
nop
shl
add
retf
and
test
clc
mov
mov
pop
mov
xor
push
(bad)
ret
push
out
mov
shl
hlt
das
adc
or
xor
mov
lods
icebp
xlat
xchg
sbb
add
retfw
test
loop
aas
cs
shl
xchg
in
bound
enter
mov
in
sbb
xor
popa
add
mov
xchg
or
ficomp
nop
sahf
pop
inc
add
dec
enter
cmps
ja
imul
cld
cs
fisubr
mov
mov
clc
jo
push
adc
mov
pusha
not
push
add
adc
or
jge
sub
pushf
xchg
test
push
add
or
jo
movs
inc
js
out
dec
cwde
xor
add
dec
frstor
popa
jo
popf
mov
push
xchg
and
or
jp
xchg
xor
pop
(bad)
lds
(bad)
fnstsw
mov
jbe
adc
add
pop
or
mov
test
test
jo
sti
pop
loope
xor
iret
scas
adc
push
dec
dec
(bad)
cdq
cmp
pop
xor
ret
cmp
jnp
xchg
nop
std
cmp
(bad)
data16
int3
sti
ds
(bad)
in
leave
xor
inc
inc
fld
pusha
jmp
xabort
test
xrelease
(bad)
fdiv
pop
push
push
(bad)
jle
mov
fisub
lahf
test
call
rcl
sbb
jnp
sbb
loopne
inc
aad
xlat
icebp
xchg
push
cld
iret
push
jle
out
sti
iret
popf
repnz
add
retf
adc
retf
fiadd
clc
in
mov
popa
int3
enter
sub
add
retf
inc
push
rcr
push
je
fimul
scas
movs
push
jbe
fnstcw
push
inc
stos
adc
or
push
cmp
ins
lods
dec
xchg
fistp
add
pop
ret
push
jne
add
pop
call
in
push
xchg
(bad)
in
dec
xlat
in
ins
pop
fsub
adc
into
sub
and
mov
xor
lahf
out
xchg
pop
in
jo
jg
cmp
sub
cmp
lods
movs
ins
ja
movs
inc
xor
inc
jle
mov
and
xchg
shl
and
push
jg
(bad)
rcl
fild
(bad)
out
jo
cmp
dec
jno
inc
pop
xchg
cmp
dec
sub
cmp
sbb
scas
stc
or
push
sbb
outs
data16
add
sbb
add
pop
aas
xor
cmp
hlt
lahf
mov
xchg
mov
movs
pushf
jns
scas
xchg
neg
inc
loop
xlat
shl
(bad)
(bad)
loop
das
es
aaa
pop
and
loop
call
scas
push
popa
push
and
push
jge
inc
or
add
in
xchg
mov
mov
movs
or
mov
dec
in
inc
rcr
inc
inc
pop
jmp
rcl
lea
retf
test
ja
jge
movs
aam
fimul
cli
sbb
push
les
push
movs
jcxz
clc
js
jns
(bad)
mov
mov
xor
xchg
xchg
std
mov
adc
push
mov
les
jmp
repz
gs
mov
call
mov
sub
mov
pusha
mov
xchg
call
sub
jge
add
jno
nop
xor
fnstsw
fisub
stos
sbb
outs
pop
and
shr
(bad)
stos
aam
mov
sbb
add
or
repnz
pop
imul
pop
and
jmp
mov
das
inc
sub
lahf
sbb
iret
jnp
jno
xchg
mov
mov
(bad)
pop
lea
or
pop
outs
(bad)
dec
into
jp
pop
jmp
std
adc
movs
or
popa
movs
nop
popf
push
(bad)
imul
gs
push
adc
fs
jl
test
add
ret
std
push
inc
xchg
and
dec
(bad)
je
jb
or
ja
cmp
xchg
sub
sbb
push
xor
push
int3
repnz
dec
loop
cdq
pop
mov
das
push
jecxz
mov
xor
dec
popa
mov
daa
mov
test
add
clc
push
mov
mov
(bad)
push
push
pop
mov
retf
sar
xchg
and
stos
jmp
inc
loope
imul
add
daa
and
mov
or
sub
test
paddw
adc
jmp
jge
mov
and
sbb
retf
cmps
imul
imul
lea
jne
pop
imul
xlat
outs
xchg
fmul
inc
jne
fs
(bad)
aam
rcl
mov
daa
clc
scas
mov
jmp
ud2
sar
xor
iret
pop
mov
in
inc
icebp
mov
dec
lods
xor
dec
inc
stos
dec
push
xor
mov
pusha
sbb
jl
mov
or
ins
pusha
or
mov
mov
arpl
xchg
push
push
(bad)
pushf
fdivr
mov
push
rcr
pop
inc
sbb
and
pop
xor
sub
inc
popa
adc
(bad)
push
xchg
ja
sub
xchg
xor
and
imul
sar
dec
and
cmp
jo
pushf
jns
test
cmp
ror
sub
(bad)
push
je
push
nop
repz
cmp
pop
xchg
and
and
daa
das
add
mov
dec
(bad)
jb
xor
fidiv
lahf
test
jmp
cmp
ss
sub
movd
gs
or
cdq
dec
int3
shl
sub
pusha
out
dec
mov
sar
mov
scas
das
stos
aaa
xchg
mov
add
xchg
adc
(bad)
or
dec
or
das
test
xchg
cmp
adc
push
sbb
fwait
ja
push
mov
lock
cwde
dec
pop
jg
pop
pop
aad
push
jae
cmps
pop
jl
pushf
and
in
adc
outs
add
and
jbe
mov
pop
pop
pushf
pushf
arpl
pop
jnp
scas
or
aaa
pop
pop
xchg
jae
dec
pop
outs
nop
stc
cs
fs
in
loope
and
push
add
inc
xor
xor
imul
dec
push
cmp
call
popf
out
dec
je
push
mov
int3
imul
pop
imul
les
sbb
mov
loopne
repnz
mov
sub
sbb
aas
xor
adc
js
adc
in
mov
cmp
movs
mov
or
in
push
stos
mov
jns
out
test
push
jno
xor
add
cs
loop
(bad)
push
jne
in
fdivr
xchg
shr
aas
(bad)
(bad)
stos
jmp
push
nop
lea
add
jge
out
jb
jl
sbb
jo
jmp
add
jno
(bad)
(bad)
pop
xor
jp
es
xor
rol
fadd
sub
mov
in
fbstp
mov
inc
stos
sbb
and
aas
jns
mov
push
lods
add
inc
dec
or
fmul
lea
(bad)
push
push
push
lea
dec
dec
xchg
(bad)
repnz
retf
sahf
push
dec
retf
adc
cmp
jns
mov
fsub
repnz
out
sahf
mov
sbb
fwait
outs
test
cmp
mov
jb
bound
add
loopne
push
dec
ret
pop
push
push
jnp
icebp
mov
mov
push
int
mov
pop
mov
jnp
adc
and
(bad)
push
jns
jge
movs
fidiv
jmp
cmp
xchg
inc
xchg
adc
retf
sbb
call
xchg
mov
clc
jno
mov
lahf
popf
mov
jge
and
xchg
cmps
jnp
test
icebp
mov
es
fst
ins
pop
cli
inc
xor
inc
and
addr16
iret
push
in
aaa
imul
xchg
cld
jmp
fs
sar
popf
add
add
ja
lods
jge
es
ret
and
mov
cmp
les
sti
adc
aad
scas
cmp
int3
pop
mov
rcl
xor
mov
fldenv
sbb
push
bound
lods
int3
imul
or
in
pop
mov
lock
xor
jb
icebp
adc
jecxz
int3
fldenv
out
popf
cwde
or
dec
call
leave
and
fldcw
das
ret
mov
fst
inc
push
xor
lock
je
cmp
jecxz
xchg
movs
pop
mov
mov
adc
aam
cdq
mov
push
adc
mov
mov
addr16
inc
jns
mov
mov
cmp
stos
lock
mov
cli
cwde
mov
xor
stc
pop
adc
cmps
jae
and
add
scas
(bad)
pushf
ins
jle
inc
and
add
push
les
in
in
outs
jg
push
shl
aad
mov
maskmovq
div
mov
mov
(bad)
cli
in
xchg
shl
adc
(bad)
dec
adc
cmps
cmp
jmp
in
daa
add
sti
and
sub
add
xchg
pushf
aas
xor
dec
and
cld
sbb
and
mov
xor
cs
xor
or
stos
iret
jb
ficomp
adc
outs
inc
jbe
ds
or
jge
mov
addr16
sub
into
pop
aas
sub
push
or
mov
jecxz
std
or
xchg
sbb
pop
dec
xchg
and
leave
adc
out
mov
fwait
inc
jbe
xor
inc
pushf
push
js
or
ret
push
movs
in
cmp
xchg
ret
cmp
jbe
jmp
test
jecxz
test
in
and
xor
out
sub
sub
push
mov
sub
cmp
mov
sbb
and
xor
xlat
dec
out
sti
xor
or
mov
dec
std
dec
push
lds
or
xor
int
outs
je
ins
lods
push
mov
sbb
shl
xchg
pusha
(bad)
and
cmp
stos
sbb
call
fld
int
adc
jge
scas
mov
imul
mov
int
or
add
out
cmp
jg
jo
xor
xor
in
sti
jo
outs
xchg
push
stos
test
cmp
jg
mov
jae
lods
cwde
mov
sbb
mov
jmp
scas
iret
(bad)
repnz
sub
imul
(bad)
out
cmp
call
lods
fisub
cwde
clc
adc
nop
xor
xchg
sub
call
push
xor
mov
mov
cli
mov
dec
cmps
mov
push
sbb
or
lds
(bad)
cld
fidiv
mov
les
neg
inc
and
popf
(bad)
and
push
jmp
frstor
xor
fs
loop
(bad)
xchg
mov
fist
xchg
not
inc
leave
mov
push
xor
dec
(bad)
sbb
or
mov
push
xchg
sub
xchg
es
mov
lock
cmp
or
xor
lds
pop
pop
gs
mov
mov
popf
aam
add
push
popa
xor
mov
test
rcl
mov
aaa
repz
cdq
and
xchg
jo
sti
fidiv
popf
jne
movs
sahf
pop
sub
mov
xchg
add
push
aam
xchg
call
test
cwde
pusha
xchg
and
adc
sbb
and
test
jp
scas
ins
movs
inc
cmps
mov
iret
mov
cli
scas
int
fs
pop
sub
jge
sbb
shr
xchg
ins
lods
mov
push
or
fcmovb
push
rcr
(bad)
loopne
pop
xor
addr16
and
mov
fisubr
cmp
dec
sub
push
rol
pop
mov
out
and
retf
and
shl
dec
pop
outs
(bad)
scas
inc
mov
int3
idiv
and
(bad)
aaa
out
jmp
lods
popa
movs
mov
(bad)
sub
mov
or
and
outs
fdiv
test
dec
sbb
out
jns
jno
scas
pusha
pop
imul
sbb
adc
(bad)
icebp
stos
pop
jle
mov
fsubr
push
mov
or
je
and
addr16
stos
popf
scas
pop
or
add
push
inc
mov
xchg
jo
xor
jne
out
out
jbe
push
and
cmps
popa
cld
out
mul
xlat
mov
dec
dec
cli
jb
jo
xchg
sbb
jp
or
inc
and
data16
cmps
add
pop
retf
or
dec
(bad)
sbb
rol
dec
add
add
or
shl
push
jp
imul
sub
ficomp
in
arpl
add
sbb
xchg
push
fmulp
jae
mov
push
sub
push
cmp
movs
xchg
(bad)
pop
stos
dec
ret
jmp
int
fwait
adc
mov
scas
fistp
(bad)
xchg
xor
mov
pop
inc
cmp
repz
out
xchg
pop
cdq
ds
sub
into
shl
sbb
inc
mov
mov
movs
mov
and
mov
adc
xor
es
cdq
rcr
mov
pushf
aad
mov
mov
cli
out
mov
xchg
jge
xchg
hlt
aaa
or
push
shl
shl
jle
(bad)
fisttp
not
adc
in
lock
sub
into
ja
cmps
jg
dec
fwait
lock
pop
adc
(bad)
stos
arpl
jge
fadd
aam
inc
aad
ja
or
call
adc
ja
adc
jae
dec
cmp
lock
xor
lock
sbb
sbb
xchg
cs
xchg
(bad)
cmp
and
scas
shr
cmp
adc
push
jbe
in
adc
ret
xor
xchg
pop
ret
data16
pop
or
popf
jns
sahf
mov
fadd
dec
test
gs
pushf
and
popf
mov
adc
movs
movs
loope
adc
push
popf
fnstenv
xor
lahf
bound
ja
lahf
sbb
popa
inc
enter
pop
jecxz
(bad)
ror
pusha
and
mov
retf
sbb
repz
sbb
xchg
adc
int
cwde
aaa
mov
jge
push
ins
xor
xor
mov
xor
ja
mov
stc
add
xor
mov
pop
pushf
icebp
in
sub
pop
or
jle
ins
pop
xor
xchg
aad
cli
loope
repnz
dec
jp
fdiv
jmp
jb
xchg
push
push
mov
cld
mov
pop
(bad)
(bad)
daa
(bad)
or
lea
test
das
fisttp
pandn
jns
movs
pop
out
push
daa
aaa
cmps
pop
loope
dec
mov
fmul
mov
scas
xor
fs
cld
in
push
mov
aas
out
and
jo
(bad)
arpl
enter
adc
fcmovbe
(bad)
fbld
sbb
cmp
xor
fisubr
dec
in
adc
pop
xchg
hlt
mov
cli
sub
push
jae
push
cmp
les
lea
jecxz
and
xchg
imul
int3
jmp
jle
jp
or
pusha
sbb
outs
sub
cld
cmp
pop
ss
push
lock
push
cmp
xor
dec
add
leave
mov
imul
movs
fdivrp
push
dec
push
inc
jbe
cmps
(bad)
aaa
xlat
cmp
mov
or
jo
out
(bad)
test
xchg
xchg
push
mov
ror
std
and
add
or
sar
add
dec
rol
and
pop
push
adc
cmp
sub
test
xor
sbb
and
(bad)
add
fsubr
cmps
add
cmc
js
add
movs
fs
cmps
lods
cmp
call
shl
or
cli
push
mov
sub
mov
xlat
shl
mov
in
lahf
aas
(bad)
clc
mov
pop
and
ss
add
fsub
mov
mov
jmp
aam
or
dec
or
push
iret
pop
sbb
push
loopne
ret
inc
jg
stos
std
scas
mov
fldlg2
add
cmp
retf
in
cwde
in
push
xchg
outs
movs
out
xchg
mov
dec
es
cli
xor
aas
stc
cmp
outs
xchg
ds
dec
(bad)
jno
stc
je
sub
and
sbb
repz
lods
lods
cmp
mov
dec
jmp
jns
pop
dec
add
repz
and
rcr
cmp
jg
outs
mov
dec
and
inc
add
mov
xchg
push
cmp
stos
and
mov
gs
(bad)
jmp
rol
push
mov
cmps
imul
mov
add
jle
dec
(bad)
xchg
xor
ss
push
call
or
ins
xor
stos
sti
jnp
pop
shr
idiv
int
xchg
stos
je
ror
jne
add
adc
(bad)
dec
je
rcl
mov
pop
cs
cwde
cli
aas
popa
or
inc
xchg
lock
xor
sar
popa
lods
mov
mov
or
pop
xchg
dec
movs
mov
in
les
(bad)
outs
inc
sbb
sub
push
fidiv
jmp
sub
jne
mov
fcom
(bad)
inc
jb
push
and
lock
cmps
and
mov
jo
jae
add
ficom
leave
xor
sbb
jl
jl
cmps
jb
add
into
dec
sub
cmc
ret
cmp
test
pop
das
stc
mov
or
pop
sub
(bad)
aam
sub
pop
xor
dec
stos
xor
pop
(bad)
ja
cmp
jmp
or
xchg
arpl
xlat
cmp
mov
add
cmp
mov
push
(bad)
ins
adc
fld
movs
add
sub
fcmovnb
pop
mov
adc
mov
dec
xor
out
adc
ins
jge
fidivr
cmps
inc
test
and
push
inc
xchg
loope
sub
data16
xchg
mul
mov
cmps
out
sub
(bad)
fadd
mov
mov
sbb
mov
push
shl
std
out
(bad)
cmp
icebp
pop
(bad)
mov
push
outs
out
rcl
ficom
jmp
repz
sub
add
mov
adc
push
cmc
fst
mov
cmp
dec
or
xlat
xchg
loope
mov
and
shr
mov
push
scas
push
xchg
xchg
xchg
cld
and
mov
ret
dec
pusha
loop
aam
sbb
fistp
repz
sbb
out
call
ins
pop
pop
sub
scas
pop
ror
retf
fmul
inc
push
test
sub
push
cmp
mov
mov
xor
sbb
repz
call
push
mov
lahf
cld
mov
add
pop
hlt
ja
mov
daa
adc
sbb
mov
ds
pop
lds
xorps
pop
mov
daa
fist
push
xlat
mov
dec
mov
jbe
mov
outs
jnp
stos
cmps
fmul
ret
retf
and
mov
jbe
sub
hlt
not
cmp
dec
add
in
popa
fisub
push
lods
push
aad
dec
xor
fisttp
adc
pop
push
neg
jmp
push
xchg
inc
push
mov
cli
xlat
xchg
movs
nop
(bad)
lds
jb
adc
jmp
gs
idiv
push
inc
out
pop
mov
sbb
idiv
dec
aam
sub
int
xchg
out
push
lds
retf
adc
push
xor
je
and
xor
hlt
mov
or
mov
mov
pop
inc
mov
in
and
push
push
push
movs
jnp
mov
enter
das
fmul
retf
cmps
adc
adc
enter
or
mov
enter
jge
inc
xor
(bad)
mov
out
outs
outs
cmp
xchg
icebp
(bad)
dec
mov
aaa
lds
lock
rol
pop
int
ret
dec
js
imul
pop
or
imul
in
mov
in
mov
jl
lds
xchg
sub
or
xchg
sub
fnstenv
inc
mov
pushf
cmps
inc
inc
imul
add
outs
in
jle
push
fmul
imul
inc
outs
ins
push
dec
mov
inc
dec
in
and
loopne
adc
loopne
call
pop
mov
push
xor
adc
push
adc
mov
cmp
xor
xchg
pop
sbb
in
pushf
and
or
les
out
xchg
rol
jl
sbb
in
mov
xor
stos
push
adc
leave
jns
and
xchg
call
jmp
loope
retf
inc
test
mov
pop
push
mov
movs
test
mov
jmp
cmc
and
std
test
dec
xor
push
mov
mov
adc
(bad)
into
push
fdivr
iret
pop
mov
cmp
xor
sub
xor
or
adc
xor
push
sbb
cwde
loop
outs
sub
cmp
mov
pop
mov
retf
fsub
or
jae
inc
pop
xchg
outs
add
movs
stos
jnp
mov
cmp
cdq
pop
sub
rcl
mov
jmp
test
ror
mov
add
mov
sub
loopne
inc
mov
adc
mov
neg
mov
daa
pop
stos
call
lods
add
inc
repz
inc
jb
inc
sub
movs
dec
fxtract
xor
shl
mov
mov
call
mov
or
ss
fistp
xor
imul
xor
js
jmp
mov
xchg
dec
cmp
loop
(bad)
jmp
mov
test
cmp
pushf
xchg
test
in
lea
dec
gs
pop
int
pop
stos
mov
inc
mov
dec
sub
xchg
inc
jmp
adc
movs
push
mov
xor
movs
pop
dec
and
lahf
ret
jle
popa
aaa
pop
sahf
mov
dec
sub
lea
cmp
dec
inc
mov
rcr
aad
mov
fdivr
retf
and
div
fsub
pop
lahf
sbb
mov
leave
push
shl
popf
pop
or
push
xchg
sbb
jo
pop
dec
jge
xor
xlat
fwait
inc
movs
mul
push
loopne
dec
jle
pop
dec
xchg
inc
adc
stc
icebp
jo
out
xchg
cmp
pop
ret
inc
arpl
loope
shl
sub
mov
dec
dec
data16
jecxz
xchg
jno
add
jbe
and
mov
(bad)
mov
mov
pop
daa
push
sahf
dec
pusha
adc
jns
fnstcw
push
and
jg
test
pop
dec
retf
loopne
jbe
jns
xor
imul
mov
pop
xchg
ja
iret
fcom
cmp
aam
mov
ds
out
test
xchg
xchg
mov
fild
xchg
push
psubsb
jb
hlt
inc
xor
mov
xor
jae
inc
or
mov
mov
or
addr16
(bad)
xchg
push
js
cmc
inc
push
out
in
xchg
xor
jne
shl
pop
into
repnz
pop
xchg
cmp
ins
cmp
fisub
retf
in
push
movs
cs
sub
xor
xor
loope
mov
xor
lock
mov
in
aad
mov
add
or
rcr
cmp
jae
enter
aaa
pop
mov
aam
cdq
xchg
lods
add
mov
ins
xor
push
cmp
mov
cmp
movs
add
dec
movs
inc
es
jae
xor
adc
xor
jmp
push
loopne
mov
cmp
shl
fild
mov
jg
fwait
into
push
jmp
cmp
adc
mov
(bad)
dec
cdq
js
sub
inc
push
sar
xchg
cmp
fisttp
push
(bad)
xor
lds
arpl
jmp
imul
sub
dec
fcmovbe
(bad)
cmps
jmp
loope
arpl
cmp
xchg
pop
aas
repz
dec
pop
in
mov
dec
mov
jl
mov
xchg
and
lds
or
xor
es
push
cmp
loop
icebp
adc
sar
push
adc
inc
aaa
sbb
mov
mov
inc
pushf
jnp
sbb
cmp
data16
stc
mov
add
jns
retfw
mov
adc
push
in
fdivr
aaa
ins
mov
shl
cmp
or
add
cmps
aam
fldpi
(bad)
dec
pop
xor
popf
pop
mov
push
jnp
lea
cmp
sar
xchg
(bad)
movs
jnp
fmul
xchg
inc
ret
mov
out
xor
mov
(bad)
(bad)
sbb
or
dec
out
xchg
adc
inc
xor
cmp
arpl
int3
mov
sar
xchg
(bad)
fcmovbe
mov
fimul
cld
(bad)
pusha
and
lea
mov
clc
jmp
es
push
adc
xor
jmp
or
mov
call
pop
je
jb
loop
ds
jb
idiv
and
call
cmp
adc
mov
sub
pop
mov
jne
mov
mov
sub
push
enter
test
or
cmp
push
xchg
scas
cdq
sbb
xchg
addr16
inc
adc
adc
jl
add
mov
ja
pop
cli
mov
adc
fimul
cmp
cmc
aaa
xchg
or
xchg
adc
fstp
mov
mov
dec
outs
(bad)
xor
dec
call
outs
enter
es
pop
lods
into
shl
movs
daa
mov
test
sbb
mov
xlat
ins
adc
cmp
and
cmps
add
daa
sub
addr16
aad
dec
mov
aam
mov
(bad)
and
sub
dec
mov
sbb
pop
push
cld
retf
test
pusha
jecxz
ja
ja
jne
dec
push
fisttp
sbb
mov
pusha
xor
jp
in
and
lds
mov
pop
and
sahf
xchg
and
in
push
inc
or
cs
scas
jb
mov
cmc
mov
xor
inc
push
ss
inc
pushf
or
(bad)
push
sub
xchg
test
and
xchg
adc
inc
pop
fistp
sar
xor
shl
adc
push
pop
push
aas
mov
mov
push
out
mov
mov
pop
scas
and
in
adc
fwait
test
pop
sbb
xchg
movs
or
inc
cmp
ss
out
scas
pop
mov
or
outs
inc
scas
fld
or
dec
das
dec
dec
fs
mov
nop
aaa
cld
imul
mov
mov
push
dec
pop
or
cwde
mov
xor
sbb
xor
inc
out
fbstp
js
or
lahf
ins
iret
or
add
(bad)
adc
ds
pop
cmps
addr16
mov
jle
or
in
lea
sub
mov
pop
inc
in
xchg
add
add
call
in
cli
(bad)
repnz
mov
scas
pop
dec
pusha
call
inc
sbb
xchg
add
sar
and
mov
lds
es
add
ret
pop
fmul
(bad)
jmp
and
pop
jns
repnz
sub
stos
ja
daa
scas
push
lods
sub
mov
ficomp
mov
push
ds
je
inc
loopne
or
xchg
adc
aad
daa
add
fs
jmp
outs
cmps
xor
inc
xor
cs
push
mov
cmp
popa
sbb
outs
pusha
fdiv
add
xchg
dec
daa
inc
inc
jp
pusha
jnp
lock
cmp
dec
(bad)
icebp
push
sub
dec
cwde
mov
sbb
xchg
pushf
inc
cwde
sub
cmc
inc
lahf
mov
adc
push
inc
sbb
fst
pop
mul
in
and
inc
push
adc
data16
push
dec
dec
rol
je
jmp
ss
jmp
loope
fdivr
and
aas
adc
retf
in
dec
and
push
adc
(bad)
(bad)
in
push
pop
cmp
test
push
inc
cmp
cli
ins
push
mov
clc
mov
push
aas
leave
and
add
cmp
sbb
or
aas
xchg
inc
dec
mov
div
inc
push
call
(bad)
cmp
ins
inc
sar
cmp
dec
mov
sbb
aam
sbb
jmp
mov
std
clc
adc
pop
and
adc
mov
dec
sub
mov
xlat
call
retf
movs
retf
jle
inc
(bad)
loopne
fwait
xchg
jl
add
mov
sub
(bad)
loop
jb
push
test
mov
cwde
push
jl
pusha
in
mov
(bad)
fld
ins
mov
and
loop
push
dec
sbb
or
into
sub
lock
js
dec
iret
inc
jns
mov
icebp
inc
test
and
sar
mov
jne
add
imul
das
mov
xor
inc
bound
jg
movs
pushaw
sbb
mov
rol
adc
std
std
mov
hlt
cmc
sbb
lods
retf
and
xor
dec
in
add
in
push
or
cmps
push
loop
iret
mov
lock
and
lods
hlt
test
cwde
push
cmp
xchg
ret
mov
(bad)
jecxz
aas
lahf
and
mov
xchg
nop
lds
jno
leave
outs
xor
inc
adc
xor
lahf
fldcw
mov
sub
mov
adc
add
fstp
inc
lea
(bad)
push
(bad)
test
ret
push
mov
or
sub
jmp
jns
xchg
test
jl
sub
inc
cmp
xor
js
pusha
cmp
mov
sub
jb
inc
xchg
retf
push
jae
les
pusha
jle
inc
pusha
loope
in
jmp
sar
mov
or
jbe
jl
nop
into
cld
lds
test
pop
adc
and
mov
mov
and
int3
xchg
mov
fbld
test
daa
pop
push
pop
sahf
pop
aas
lahf
inc
mov
js
mov
bound
(bad)
jge
push
retf
call
cmp
jecxz
or
or
or
mov
push
icebp
ins
pop
adc
ror
jo
hlt
cmp
push
jbe
pop
sub
out
std
outs
jl
cmp
dec
mov
std
movs
std
popf
cwde
(bad)
data16
fsubr
add
fcom
mov
add
addr16
fild
mov
sub
scas
mov
ror
mov
fidiv
addr16
pushf
mul
mov
sub
pop
dec
sub
sti
out
xor
cli
dec
mov
loope
xchg
rcr
add
sbb
test
icebp
call
pop
sub
jge
in
call
sti
mov
sahf
in
cld
mov
scas
jo
fwait
and
mov
retf
aas
in
xchg
adc
and
mov
and
cdq
in
daa
loop
xchg
inc
outs
(bad)
push
mov
dec
mov
push
sbb
je
sbb
out
jb
or
xchg
xchg
les
test
xor
mov
sbb
mov
mov
or
and
mov
mov
pop
xor
shl
sahf
fmul
xchg
aas
mov
mov
jnp
test
(bad)
int3
aad
aam
clc
jmp
push
inc
enter
or
imul
in
mov
fmul
xchg
test
popf
aas
(bad)
fmul
mov
push
xlat
adc
mov
movs
shr
jbe
scas
dec
ins
arpl
je
mov
mov
cmp
pop
aas
lds
add
bound
xchg
push
pop
adc
movs
clc
test
cmp
sti
(bad)
cwde
stos
je
xchg
jge
retf
fwait
jno
rcr
mov
repnz
inc
and
test
outs
cli
add
movs
push
mov
jle
mov
in
out
xchg
cmp
xor
mov
popf
or
fnstcw
inc
cmp
ss
and
jmp
mov
out
out
mov
in
pop
push
dec
pop
and
mov
mov
inc
scas
in
lea
bound
adc
imul
ds
jmp
leave
mov
xor
leave
sbb
jne
jb
test
sbb
pushf
mov
jl
shl
sbb
add
and
pop
xchg
movs
inc
fs
dec
addr16
cmps
hlt
call
add
fdivp
mov
and
dec
push
push
jno
lsl
dec
fst
add
mov
mov
add
loope
arpl
outs
mov
push
and
xlat
movs
pop
jno
push
push
adc
cmc
(bad)
adc
loopne
mov
inc
cli
xchg
sbb
ins
test
add
mov
(bad)
cli
cdq
push
test
push
ror
add
in
and
aaa
push
push
inc
inc
loopne
mov
inc
cmp
and
in
push
(bad)
out
(bad)
mov
aad
(bad)
push
pusha
xor
outs
out
jne
sar
pop
jne
mov
std
scas
and
sbb
xchg
pusha
dec
cwde
ins
mov
xchg
je
mov
sbb
sbb
pop
cmp
hlt
std
hlt
and
call
dec
pop
add
aad
retf
xor
mov
enter
lods
movs
sti
mov
and
and
addr16
jge
fs
das
pop
xchg
sahf
push
sub
push
sub
rcr
adc
and
sbb
xor
add
call
push
call
mov
push
xor
std
inc
cmp
bound
mov
mov
sbb
or
mov
xor
scas
sub
jmp
xor
or
inc
mov
sbb
clc
aam
adc
mov
dec
in
fidivr
aam
scas
aad
mov
outs
xor
in
cdq
ins
cmp
or
(bad)
daa
xor
popf
jg
push
stos
adc
psubusb
div
leave
pop
dec
adc
movs
jne
ret
mov
sbb
in
push
jo
sub
test
std
and
hlt
lods
xchg
mov
fisttp
ja
repnz
inc
ss
not
pop
in
sub
inc
in
std
adc
test
aas
mov
ins
sbb
mov
adc
sub
in
call
pushf
cld
jne
add
jg
retf
(bad)
push
addr16
ss
mov
call
pop
icebp
xchg
fiadd
xchg
jge
iret
repnz
cmp
enter
and
sti
test
scas
xchg
daa
mov
adc
loop
sar
out
int3
sbb
pushf
push
add
ins
rcl
inc
mov
mov
in
cmp
test
dec
es
push
and
mov
aas
cs
in
mov
pop
xchg
pop
ja
mov
or
adc
or
cmp
pushf
and
cmp
stos
jb
mov
mov
xchg
shl
jmp
test
leave
push
bound
mov
in
fsubr
test
lods
ret
sbb
loop
sti
cmps
xor
dec
clc
lods
lea
jmp
mov
jmp
mov
shr
cs
and
scas
cmp
cld
pushf
mov
fild
sub
test
pop
adc
les
mov
dec
lock
lds
fldenv
dec
add
cli
sar
or
inc
adc
nop
add
(bad)
ds
xchg
adc
mov
inc
mov
fcom
adc
add
call
out
stos
xchg
mov
or
xchg
call
in
push
aad
mov
xchg
sub
push
sahf
add
fsub
inc
mov
xchg
jg
test
and
dec
in
aam
xchg
jnp
retf
imul
xchg
shl
jecxz
xchg
sbb
jg
fiadd
(bad)
adc
popf
jecxz
jmp
xchg
add
outs
add
or
out
arpl
aad
mov
scas
out
lock
or
push
imul
loopne
dec
sar
cld
idiv
push
cli
sub
scas
je
iret
leave
add
scas
sub
(bad)
loop
test
mov
push
imul
popa
bound
push
fbstp
popf
(bad)
jge
xlat
cmp
mov
data16
xchg
push
movs
in
in
adc
out
iret
jae
push
in
mov
hlt
sbb
clc
adc
call
jg
vphaddubq
mov
mov
dec
xor
mov
repz
retf
and
mov
dec
inc
sub
mov
scas
xor
and
dec
ror
cmp
add
sahf
dec
mov
mov
and
ins
cs
rol
push
hlt
pop
jmp
test
in
fnstenv
stos
out
nop
in
lock
lods
cmp
and
ins
ret
xor
inc
or
add
push
mov
jne
and
mov
ss
cwde
ja
or
pop
in
pop
mov
pushf
sbb
out
jmp
xor
add
mov
fdivr
cmp
dec
mov
into
mov
lahf
mov
loope
rol
shl
scas
sbb
aas
jmp
imul
sub
mov
adc
out
push
xchg
cmp
mov
test
out
sub
in
mov
mov
mov
add
pop
cmp
bound
jb
lock
std
cmps
mov
sub
jne
lods
enter
dec
ret
dec
scas
imul
(bad)
dec
call
repnz
inc
jle
add
imul
inc
add
call
cdq
xor
mov
xchg
cld
fs
test
fnstsw
cmp
lds
cmp
neg
jno
in
imul
add
pop
sahf
loope
sub
mov
adc
pop
xlat
dec
or
data16
rcl
retf
mov
repz
add
out
and
jl
jecxz
or
jmp
sbb
sub
aad
popa
jg
sbb
xchg
xchg
arpl
cmp
adc
push
mov
test
test
xchg
lahf
cmp
dec
jns
repz
mov
outs
mov
pop
repnz
enter
inc
rol
paddusw
sbb
stos
cld
lahf
mov
push
retf
mov
pop
mov
mov
adc
mov
out
sti
ins
add
cmp
add
mov
push
jmp
retf
and
and
call
stos
adc
ins
sti
fs
mov
adc
push
pop
lock
cwde
mov
lods
lock
xbegin
or
cmc
retf
(bad)
push
call
ret
sub
and
jge
and
xchg
pop
push
les
addr16
push
jg
or
cmp
sbb
fcomip
fs
dec
std
test
mov
mul
pop
and
cli
in
dec
add
xchg
stos
bound
sbb
icebp
ss
pop
jb
(bad)
rol
xchg
lods
stos
(bad)
xchg
inc
inc
cmp
pop
popf
std
ror
or
mov
mov
clc
mov
cmp
out
cmps
jns
fwait
sar
or
adc
xchg
lods
popa
test
pop
jecxz
add
movs
jp
nop
or
and
(bad)
sti
xchg
std
lahf
jecxz
mov
iret
outs
mov
jp
mov
and
or
xchg
scas
jae
icebp
cmp
aas
pop
sar
and
sti
push
inc
aam
nop
add
mov
pusha
pop
fisub
jnp
xor
popf
psadbw
ret
pop
in
(bad)
mov
fild
push
push
(bad)
mov
or
rol
dec
sbb
mov
adc
sbb
sahf
xor
fst
pop
loopne
imul
pushf
xchg
jge
add
cwde
rol
add
and
aas
clc
mov
pushf
ret
out
mov
push
and
nop
inc
add
jo
mul
xor
sbb
adc
xor
in
or
stos
icebp
pop
lahf
mov
movs
std
fcomi
cli
mov
mov
cs
push
es
out
in
cmp
xchg
call
mov
jg
lods
pop
repnz
pop
xchg
sar
add
sub
call
dec
mov
dec
cmp
leave
fmul
pop
pop
jle
icebp
inc
and
mov
das
retf
adc
mov
rcl
push
jo
dec
dec
xchg
mov
push
mov
fst
stos
nop
jmp
add
adc
adc
in
add
lea
jne
ss
adc
aaa
mov
mov
jne
rol
cmp
xchg
xor
xlat
cld
outs
jecxz
(bad)
cmp
mov
sub
xchg
push
retf
clc
loop
cmp
pop
cmp
dec
clc
into
pop
out
sbb
test
push
test
cmc
or
inc
mov
jp
(bad)
rcr
leave
jb
shr
cld
mov
cmp
dec
jp
cli
popa
cmp
inc
mov
inc
adc
rdpmc
xchg
dec
into
push
or
aad
cmps
pop
jecxz
loop
inc
or
lds
ret
(bad)
mov
push
push
clc
out
or
pop
imul
(bad)
pop
popf
inc
(bad)
jbe
sub
push
outs
sbb
ins
leave
xlat
mov
inc
fisub
sbb
cmp
dec
enter
outs
and
mov
add
daa
neg
pop
mov
ror
xor
ffreep
inc
jmp
retf
mov
call
inc
mov
xor
mov
loope
sbb
and
jecxz
xchg
mov
jl
ja
es
ss
sub
sub
xchg
sub
mov
pop
pop
movs
sti
es
cmp
cmp
lea
lods
pop
pop
in
mov
mov
add
call
nop
lock
inc
cmc
mul
cwde
adc
scas
xor
mov
pop
lods
xchg
jle
sbb
aaa
fwait
dec
cmp
jb
mov
mov
fdiv
out
pop
iret
xchg
retf
test
dec
and
pop
push
xchg
cs
and
mov
and
test
pop
push
xchg
nop
retf
fbld
ins
bound
pop
les
cmp
mov
mov
sub
cmc
pop
jg
mov
(bad)
or
sti
jo
sbb
jecxz
cmp
xor
jecxz
mov
outs
xor
in
mov
out
mov
fwait
scas
outs
call
sub
lock
test
int3
shl
mov
inc
fiadd
les
jg
sbb
call
cmp
jecxz
js
sbb
dec
test
cmp
inc
imul
iret
sti
add
pop
push
xor
cmp
xchg
inc
add
mov
push
mov
sar
sar
call
jp
inc
mov
sub
mov
imul
outs
jns
cmp
js
pop
mov
retf
iret
jnp
js
xlat
or
ds
jno
leave
push
ficomp
stc
movs
sahf
pop
in
push
daa
out
jmp
fnsave
mov
movs
push
sub
jo
mov
jmp
mov
jnp
mov
pop
add
js
inc
int3
and
cmp
int3
in
inc
mov
xchg
lahf
movs
popa
ins
data16
inc
mov
(bad)
cmp
add
(bad)
xor
xlat
mov
cmps
gs
or
jbe
inc
imul
mov
or
xor
stc
repnz
(bad)
(bad)
mov
xor
(bad)
imul
mov
leave
nop
mov
mov
cdq
xchg
cwde
push
loope
movs
ret
ins
in
and
(bad)
jbe
dec
xchg
sbb
dec
mov
in
mov
daa
or
mov
xor
xor
jae
jmp
sub
and
pop
les
popf
pop
or
mov
stos
mov
icebp
lds
mov
test
mov
adc
(bad)
and
push
sar
stos
daa
(bad)
sbb
fsub
repnz
dec
rcr
addr16
mov
adc
xor
jmp
sub
push
xlat
pushf
gs
aas
xchg
mov
movs
lock
jbe
scas
mov
sahf
pusha
repnz
lock
mov
xchg
cmp
pop
sub
loope
xlat
mov
inc
int3
mov
(bad)
dec
jmp
(bad)
jnp
pop
sbb
push
ret
xor
aam
inc
hlt
mov
shr
jb
or
sub
push
cmp
(bad)
push
imul
pop
xchg
inc
cdq
add
fst
ins
sbb
xor
xchg
push
scas
stc
push
mov
pop
cwde
movs
call
add
or
adc
in
stos
mov
mov
mov
inc
xchg
push
inc
fcmovb
stos
mov
(bad)
sub
das
sub
mov
outs
and
(bad)
and
lock
pop
arpl
mov
push
mov
ds
int3
je
(bad)
in
fisttp
adc
sahf
inc
outs
and
in
push
mov
aam
aaa
jo
sub
pop
cmp
sar
je
(bad)
mov
xchg
jmp
es
test
imul
(bad)
xchg
pushf
mov
out
jl
xchg
mov
mov
rep
fidivr
pop
hlt
scas
sbb
jg
dec
jecxz
sub
inc
in
adc
frstor
mov
addr16
mov
jae
dec
push
repz
popa
cld
clc
mov
push
pop
push
outs
mov
sti
(bad)
mov
jl
loopne
or
and
lahf
xchg
fcmove
in
aas
movaps
in
inc
jb
inc
pusha
mov
fsub
setne
repz
adc
sahf
leave
push
dec
nop
mov
or
fist
or
and
icebp
push
rol
fld
call
test
(bad)
jb
xor
idiv
icebp
add
adc
sar
imul
mov
daa
or
stos
mov
scas
stos
scas
fiadd
pop
mov
fld
or
xchg
js
inc
add
sub
movs
jmp
inc
gs
mov
dec
sub
jp
mov
xchg
imul
bound
or
lods
loopne
cdq
imul
or
jno
dec
rcr
bound
shl
int
popf
xchg
inc
push
dec
mov
or
dec
es
mov
ret
mov
jnp
xor
ret
cmp
aad
imul
test
add
lods
adc
out
pop
outs
add
int3
aad
iret
aaa
enter
mov
(bad)
sbb
jmp
fdivr
sti
add
sbb
sub
mov
sbb
jl
cdq
fld
div
(bad)
ins
pshufw
es
les
ins
jg
dec
jl
das
sahf
mov
pop
push
mov
cmps
ret
and
daa
dec
retf
shl
idiv
inc
pop
retf
clc
xor
sbb
cwde
(bad)
aad
(bad)
pop
aad
outs
mov
cwde
and
in
xchg
jns
in
jo
sbb
xlat
push
sbb
jnp
neg
imul
and
dec
sbb
hlt
rol
or
(bad)
adc
and
popa
pop
aas
outs
pop
adc
call
repnz
and
xchg
sub
pop
sbb
add
sbb
in
pop
mov
cmps
xor
and
push
int3
icebp
cmp
pop
sbb
fnstenv
push
lods
outs
xor
movs
int3
out
sub
pop
(bad)
cs
inc
jb
xchg
popf
dec
int3
js
ja
fstp
adc
sbb
popa
inc
dec
xchg
sti
or
jmp
aam
cmc
adc
int3
mov
fidiv
mov
sbb
loope
sbb
mov
and
pop
leave
mov
or
jno
sbb
xchg
call
or
pop
test
cmp
mov
aaa
add
loope
adc
push
xchg
sahf
adc
dec
mov
dec
ds
sbb
movs
pushf
dec
sbb
nop
int
xor
iret
and
inc
jo
pop
adc
call
lods
sub
aad
fdivr
es
stos
ds
sub
dec
shl
dec
pop
fld
fld
ds
fcomp
mov
pop
sbb
pop
cmc
sbb
jp
pop
inc
and
fcmove
push
enter
mov
stos
jno
jl
mov
rol
aaa
mul
ror
dec
fld
cmp
or
mov
mov
clc
mov
mov
dec
cmp
outs
popa
fs
aaa
test
jb
inc
mov
nop
sbb
shl
aam
mov
imul
mov
scas
push
retf
addr16
xchg
fdiv
ret
sbb
mov
cmp
sbb
push
push
push
cmp
jbe
jecxz
push
sbb
and
idiv
xchg
push
ret
push
scas
push
mov
or
cs
outs
mov
jbe
mov
mov
adc
hlt
stos
xchg
mov
bound
cmp
cwde
and
fwait
(bad)
hlt
call
jne
xchg
cdq
mov
or
aaa
enter
sbb
icebp
mov
push
jp
xchg
add
fs
mov
leave
call
push
cdq
mov
mov
leave
outs
pop
or
or
push
fbld
sbb
rcr
test
mov
ins
hlt
push
nop
sbb
jno
(bad)
push
cmp
push
in
mov
cmps
out
push
sbb
loope
push
ss
movs
cmp
icebp
cmps
mov
push
add
push
nop
cmp
arpl
xchg
and
push
or
sbb
inc
cmc
xchg
xor
bound
mov
cld
xor
loope
ror
mov
push
add
sub
mov
dec
movs
sbb
dec
dec
lea
push
xchg
fcom
xor
xchg
dec
aam
sysexit
pop
add
lea
push
stc
out
daa
dec
cmp
loope
call
hlt
adc
jl
in
add
aas
aaa
xor
mov
mov
cmp
lods
xchg
repz
and
shl
daa
jg
aad
aaa
dec
xchg
push
add
mov
popa
cmp
test
xor
pushf
mov
sbb
(bad)
mov
ss
ins
addr16
ret
aaa
adc
clc
and
mov
jp
out
push
push
jnp
lods
push
retf
imul
xchg
jmp
(bad)
pop
mov
inc
sbb
fst
popa
in
jp
sbb
xchg
js
repnz
repnz
stos
lods
fcomi
test
leave
lods
cmp
push
cmp
dec
jge
popa
or
cwde
stos
lea
cmp
jle
neg
mov
jl
cmp
cmp
or
and
or
clc
aad
fnstenv
xchg
das
shl
push
hlt
rcr
push
xor
rol
cwde
or
adc
jmp
pop
pop
(bad)
push
mov
mov
xor
(bad)
mov
stos
mov
jbe
mov
cwde
test
cwde
pop
add
sbb
lods
push
push
dec
dec
push
cli
in
ficomp
mov
adc
test
jecxz
push
add
xor
test
cwde
sub
pop
xchg
mov
inc
add
shl
leave
jnp
ret
cmp
out
mov
jne
mov
or
dec
dec
or
dec
cmp
test
xchg
scas
lock
sub
push
(bad)
adc
pushf
lds
jmp
cmps
jmp
je
pop
stos
adc
xchg
cld
sub
out
call
call
ds
dec
xor
in
gs
les
mov
mov
mov
jmp
mov
das
fnstsw
loop
in
icebp
in
loopne
test
cmp
jge
addr16
jp
mov
shl
sti
mov
shr
or
je
test
or
adc
xchg
loop
push
neg
out
push
pop
les
(bad)
stc
mov
fwait
movs
or
inc
call
mov
jo
scas
(bad)
inc
movs
or
je
fsubr
push
add
rol
or
dec
scas
push
push
adc
jns
cmp
in
in
adc
fmul
or
jne
test
mov
dec
test
call
adc
jp
or
push
mov
sub
fcmovnb
mov
push
fs
jmp
(bad)
push
aaa
add
fiadd
div
mov
lods
ror
pop
jne
scas
fcomp
js
push
mov
sahf
movs
xor
mov
sahf
pop
sbb
xor
jnp
push
outs
call
xchg
xchg
out
dec
mov
lds
cmp
mov
stc
in
jecxz
or
fdiv
xchg
(bad)
mov
and
mov
sbb
inc
or
jnp
jns
daa
mov
sbb
mov
or
mov
or
ja
lock
imul
push
adc
push
cmp
mov
cmp
pop
xchg
das
cmp
icebp
inc
cmc
or
repnz
jb
mov
xor
ins
mov
stos
inc
lods
lock
test
sbb
test
add
repnz
jp
mov
push
or
dec
mov
mov
mov
push
cmp
and
std
mov
xchg
addr16
add
add
adc
cmp
add
ror
ja
and
add
jle
xor
or
fbld
sbb
inc
push
retf
jle
xor
(bad)
cmc
mov
js
jnp
mov
xor
inc
mov
cmps
lds
icebp
test
call
dec
or
fcomp
jecxz
sbb
call
loope
mov
rcr
pop
jb
inc
jns
sub
hlt
gs
mov
sub
(bad)
int3
cld
sub
dec
dec
out
aam
push
call
mov
leave
ret
mov
inc
sbb
in
in
pop
test
fwait
jns
cmp
xor
or
jne
inc
mov
and
fdiv
shl
jl
gs
cmp
sbb
shr
mov
into
icebp
lods
aad
adc
adc
cwde
cmp
movs
gs
mov
sub
or
jbe
ja
(bad)
std
sub
fsub
mov
xor
fcmovnb
push
cwde
loope
and
cmc
lds
fiadd
loope
out
push
push
and
and
push
jmp
ret
xor
xadd
cwde
mov
xor
lods
adc
mov
jge
and
mov
mov
dec
aas
call
sub
jl
xor
cwde
jb
in
pushf
in
repnz
js
mov
cdq
mov
test
shl
arpl
ins
jmp
dec
sub
pop
mov
sub
call
jnp
retf
dec
sub
scas
mov
daa
sub
sub
jo
add
and
adc
mov
sahf
js
loop
xchg
mov
rcl
xlat
jle
sbb
(bad)
xor
scas
xor
lahf
addr16
cmp
mov
xor
dec
pop
adc
test
xchg
fs
xor
xchg
(bad)
jmp
dec
loope
fxch
push
call
push
mov
or
xor
xchg
out
shl
mov
cmp
cmp
mov
les
add
cmp
push
inc
xor
mov
arpl
jns
lods
inc
push
pop
or
cmc
jmp
mov
in
stos
xor
int3
stos
sub
push
test
adc
sbb
xchg
cmc
(bad)
and
nop
xchg
nop
mov
xchg
adc
(bad)
int
mov
dec
or
and
outs
sbb
mov
push
stc
and
mov
lock
out
mov
ret
pop
inc
cli
lods
js
and
sub
pop
sub
in
jno
jg
xchg
fpatan
lods
push
fs
push
push
adc
push
outs
ins
in
adc
dec
mov
add
jbe
xchg
icebp
iret
imul
push
mov
fwait
pop
or
mov
ja
jne
mov
mov
pop
cmp
jmp
inc
call
pop
cmc
jns
stos
leave
loopne
test
aas
jae
stc
mov
ins
push
inc
daa
xlat
pop
ins
(bad)
mov
out
xor
push
inc
sbb
pop
les
cmp
jg
cli
jmpw
xchg
(bad)
(bad)
(bad)
in
fmul
xor
das
mov
mov
clc
cmp
mov
xchg
mov
sub
mov
cwde
sbb
movs
cs
mov
retf
mov
popf
mov
adc
addr16
xchg
popa
mov
push
mov
scas
mov
ss
in
or
cmp
mov
ss
dec
adc
xor
pop
test
and
fcmovnu
pop
xchg
mov
jmp
(bad)
jmp
mov
inc
mov
xor
xlat
cmp
mov
aas
cld
(bad)
mov
lock
xor
in
jbe
aaa
xchg
lahf
pop
push
push
icebp
or
mov
jnp
inc
sbb
sti
push
xchg
stc
sub
test
jmp
or
push
adc
loopne
je
mov
cmp
cmp
neg
and
lods
cmc
cwde
loop
ror
adc
xchg
sub
mul
mov
test
lock
leave
cli
xchg
or
lds
cld
cwde
ss
leave
sbb
xor
mov
xchg
pop
fsub
retf
or
dec
xor
pop
movs
lock
or
inc
cli
sub
mov
lods
mov
inc
lods
in
sar
iret
add
call
xor
mov
mov
sub
das
or
cmp
pop
js
jmp
xor
dec
aam
test
mov
les
in
xor
xor
or
adc
sti
jmp
hlt
push
js
call
xchg
sub
add
dec
mov
jmp
int3
not
cs
ds
shl
ja
scas
mov
and
xchg
call
mov
mov
idiv
hlt
test
pop
xchg
outs
push
lea
(bad)
cmp
sbb
pop
xor
dec
jle
jge
psrlw
adc
cmps
and
and
push
or
pop
mov
sbb
jmp
sub
jmp
not
cmp
jp
xor
xor
cli
mov
pop
fnstenv
mov
adc
jae
jg
and
adc
jne
push
lods
mov
movs
jmp
jno
or
adc
js
repz
and
inc
(bad)
je
(bad)
int
jecxz
cmps
jge
inc
addr16
add
call
sub
not
mov
inc
add
add
sti
test
out
in
jmp
jmp
mov
mov
(bad)
push
push
rol
(bad)
out
imul
sahf
dec
(bad)
cmp
std
fld
and
push
sbb
or
sub
outs
mov
pop
in
sub
dec
test
or
fs
fcmovnb
add
cld
jle
or
adc
rol
cmp
push
ss
lods
out
xchg
out
pop
or
xor
or
cmp
(bad)
inc
bound
in
jbe
inc
jg
push
aaa
adc
fldcw
mov
cmp
loope
addr16
retf
push
sub
daa
mov
addr16
pushf
pop
jo
jnp
cwde
call
and
into
dec
mov
cli
or
mov
sbb
cmps
(bad)
loopne
(bad)
xor
movs
sbb
mov
mov
pop
xchg
lods
movs
jge
or
sub
pop
test
jp
popf
pop
call
int
not
mov
pop
xchg
ja
jmp
dec
inc
fstp
inc
or
(bad)
sub
inc
add
push
adc
mov
retf
mov
stos
sub
mov
jnp
pusha
mov
xchg
mov
jp
cmp
mov
xor
enter
jns
fdiv
sbb
mov
test
cmc
and
inc
jb
aas
retf
mov
add
sub
adc
into
pop
jmp
lahf
das
iret
ficomp
push
sbb
cmp
mov
jge
mov
out
cmp
and
mov
push
loop
pop
or
pop
sar
cmc
cmp
and
call
test
sbb
adc
push
aaa
fild
push
xor
pop
pop
push
sub
sbb
adc
ja
or
xor
outs
repz
addr16
mov
imul
icebp
cmp
in
pop
sub
cwde
jne
fs
aas
or
out
test
dec
(bad)
les
and
jo
xchg
sub
test
or
ss
mov
repnz
jl
add
sbb
push
mov
and
push
push
push
imul
xor
and
sbb
cwde
or
xchg
and
ins
pop
aad
dec
pop
cmp
lds
dec
and
mov
and
and
ins
inc
adc
scas
xlat
sar
mov
jno
cdq
push
xlat
rol
xor
shl
or
jb
adc
movs
scas
jg
sub
(bad)
push
xchg
pop
adc
test
mov
cwde
fs
jne
push
xor
dec
mov
mov
out
loopne
into
movs
push
(bad)
enter
imul
stos
repz
ds
sbb
pusha
xor
ret
lods
xchg
xchg
lock
cmp
jp
xchg
aad
mov
fild
inc
xchg
mov
jne
(bad)
cdq
inc
mov
retf
cmps
mov
enter
(bad)
mov
addr16
fld
pop
inc
or
add
push
(bad)
retf
push
clc
jne
jno
sbb
fisub
mov
jge
fld
push
addr16
mov
in
cmps
out
imul
movs
idiv
dec
jge
cmp
pusha
into
push
ret
cs
out
adc
arpl
rcl
scas
mov
mov
adc
imul
test
fadd
mov
daa
xchg
adc
imul
adc
dec
dec
jns
dec
push
ja
and
test
scas
xor
cmp
stos
cmp
push
call
fwait
daa
xlat
dec
jae
pop
and
adc
in
mov
cmc
js
xor
lods
dec
sub
adc
cdq
arpl
iret
int
shl
lods
lahf
sub
in
ror
fsub
xchg
mov
fisubr
and
add
sbb
imul
test
or
sub
xor
cmc
inc
pop
ret
pop
es
shr
xchg
jne
xor
retf
add
sbb
and
imul
ss
mov
call
add
sbb
lods
mov
jmp
add
frstor
syscall
js
in
rcr
rol
xor
ret
adc
(bad)
cdq
add
fs
xchg
dec
mov
jbe
lahf
jp
dec
push
sti
cmp
int
sti
daa
xlat
push
stos
cmp
test
sahf
mov
scas
sub
aam
or
ss
sbb
sbb
mov
ret
ss
push
sub
and
jae
pop
dec
mov
cli
mov
push
clc
mov
adc
into
ja
pushf
mov
xor
repnz
retf
ret
ds
add
cmp
out
enter
(bad)
loop
aad
dec
mov
cdq
inc
les
scas
mov
xchg
mov
cwde
pop
adc
das
mov
xchg
or
jmp
rcr
cs
and
jbe
xchg
or
pushf
lea
(bad)
mov
idiv
stos
cld
jg
sub
cs
dec
aam
loopne
dec
outs
or
(bad)
mov
hlt
mov
or
and
icebp
mov
out
in
sub
dec
(bad)
lods
std
jo
xor
mov
lds
retf
jg
inc
mov
push
in
mov
fmul
lea
xchg
push
stc
rol
jo
and
jmp
setns
fwait
stos
dec
rcr
or
sahf
dec
xchg
sbb
xor
push
push
push
mov
fstp
mov
mov
xor
push
mov
es
out
retf
mov
inc
sub
adc
sbb
sbb
push
cli
pop
leave
mov
xchg
pop
jl
pop
jnp
xor
cmps
adc
add
sub
movs
dec
sub
gs
ret
mov
fadd
ds
pop
mov
sti
push
mov
xlat
lds
int
inc
dec
mov
cmp
cmp
push
aas
mov
out
pop
mov
dec
cmp
add
mov
sbb
sbb
addr16
push
cld
idiv
mov
aam
and
xchg
lahf
adc
dec
sub
enter
hlt
and
pop
(bad)
pusha
repnz
inc
or
mov
int3
mov
addr16
jecxz
inc
and
adc
inc
in
mov
addr16
mov
jne
repnz
mov
bound
sub
clc
xor
pop
hlt
xor
repz
(bad)
inc
jge
mov
in
test
dec
mov
mov
fisttp
repnz
lods
xchg
jge
pop
push
add
adc
push
push
push
out
movs
inc
(bad)
jle
dec
adc
jae
in
cmps
sbb
adc
dec
cmp
inc
push
xor
xor
xchg
daa
push
std
mov
xchg
inc
fdivr
sbb
lods
jae
add
jno
pop
add
mov
mov
mov
shr
(bad)
repz
mov
and
inc
outs
into
arpl
dec
mov
inc
sub
push
aas
push
inc
lods
dec
adc
inc
cmps
xchg
push
mov
push
and
xor
inc
stos
cmp
adc
mov
neg
mov
xchg
adc
es
inc
ins
adc
test
xchg
lock
rcr
push
push
cmp
sub
fmul
jo
pushf
sub
or
js
add
in
ds
loop
pop
mov
data16
out
or
cdq
(bad)
leave
jl
push
add
test
sub
or
mov
imul
mov
jmp
out
leave
loopne
dec
push
fistp
pop
call
dec
ins
push
sub
xchg
and
mov
outs
cli
pusha
adc
inc
aam
(bad)
mov
mov
out
fstp
jle
and
dec
push
mov
icebp
xor
dec
stc
lods
push
cmp
pcmpeqb
mov
movs
inc
ja
cmps
push
mov
dec
mov
xchg
in
call
fidivr
hlt
push
sbb
mov
(bad)
adc
inc
mov
mov
push
outs
inc
dec
xchg
mov
add
lock
or
jne
and
cmp
sbb
mov
push
shr
add
sbb
cmps
je
out
int3
push
add
repz
enter
inc
daa
jmp
imul
leave
jmp
sub
pop
arpl
mov
(bad)
xchg
xor
loopne
xor
loope
or
inc
fcomi
aad
scas
call
aas
xchg
stos
pop
inc
add
mov
and
dec
ins
add
je
sbb
mov
pop
loopne
pushf
mov
enter
movs
out
rol
ret
mov
fcom
xor
test
push
cmp
daa
add
and
ffreep
xchg
call
jae
call
xchg
mov
movs
sbb
inc
xor
iret
scas
shr
aaa
xor
ins
mov
int3
int
add
mov
ins
and
es
in
xchg
cld
or
icebp
mov
push
dec
or
dec
nop
gs
mov
dec
xor
push
pop
sub
fld
ror
add
inc
jo
pop
lods
inc
inc
sbb
ins
xchg
dec
mov
xchg
sub
mov
pop
sub
out
dec
out
daa
pop
out
int
shr
mov
mov
jno
mov
aam
clc
pop
and
sub
bound
xor
push
arpl
pop
cmp
sub
mov
and
jge
inc
rcl
jmp
movlps
es
dec
jo
jbe
add
dec
stos
mov
push
sub
mov
inc
test
and
mov
dec
pop
daa
sbb
add
mov
jl
sub
mov
mov
loopne
mov
in
inc
int
aam
adc
push
out
into
jae
ds
dec
push
retf
add
into
shl
xchg
adc
imul
push
aam
xor
sub
xchg
stos
jecxz
addr16
mov
push
aaa
inc
push
xlat
scas
popa
movs
jmp
test
bound
mov
sar
ret
test
push
ja
daa
mov
sub
ds
jl
int
adc
jecxz
mov
and
ror
jbe
push
inc
mov
lahf
pop
dec
mov
jmp
mov
mov
movs
ret
ficomp
add
xchg
adc
inc
cmp
xchg
xor
inc
sub
fcomp
ins
push
ficomp
jle
add
cmp
aam
idiv
inc
imul
nop
inc
push
inc
test
retf
aaa
inc
mov
push
mov
pop
xchg
push
addr16
pop
shl
fwait
dec
cmps
dec
push
and
push
out
and
stos
jle
dec
or
mov
sub
mov
fwait
jae
add
icebp
mov
add
adc
lahf
xchg
jae
add
dec
pop
lods
movs
cs
and
call
ja
test
push
imul
call
mov
and
sbb
jle
std
popf
and
loop
inc
or
inc
sub
fwait
sbb
dec
mov
(bad)
fst
mov
out
xor
aas
jbe
std
xor
out
sbb
cmp
out
push
test
push
repz
adc
fidiv
neg
jmp
pop
cdq
sub
mov
jo
movzx
shr
cmp
dec
cmc
push
int3
mov
or
mov
lds
dec
mov
lock
fldcw
add
sahf
dec
add
jno
fldcw
pop
dec
mov
dec
out
(bad)
cs
inc
ja
xchg
mov
mov
dec
bound
mov
movs
ror
pusha
adc
lock
iret
je
(bad)
mov
adc
mov
mov
mov
cmps
adc
cmps
sbb
call
test
jp
adc
pop
and
or
and
stc
cmp
sub
outs
xor
stos
imul
cmp
xor
xor
push
add
mov
addr16
(bad)
pop
arpl
dec
push
jnp
and
mov
xor
sub
pusha
cmp
adc
(bad)
mov
shl
adc
fnstenv
cwde
sbb
(bad)
jge
stos
aaa
aaa
cmp
mov
nop
shl
sbb
xor
repnz
dec
stos
repz
mov
jne
ret
out
xchg
addr16
imul
xchg
jl
xor
popa
ja
aam
mov
fldenv
sbb
xor
mov
push
mov
pop
test
scas
xchg
test
aas
push
adc
scas
rcr
ret
mov
pop
and
and
retf
in
mov
sar
pop
sub
in
ret
xor
inc
dec
jnp
fistp
xor
(bad)
outs
(bad)
push
addr16
dec
lods
jecxz
fsincos
push
inc
ss
mov
jl
movs
lods
out
retf
adc
mov
xor
rcl
inc
mov
leave
dec
push
xchg
jb
(bad)
mul
lods
dec
jmp
scas
mov
jo
inc
mov
scas
jb
mov
mov
xchg
and
imul
fisubr
sub
mov
neg
push
pop
ss
xlat
repz
pusha
jne
push
mov
popa
sbb
mov
lock
xor
outs
jnp
sbb
mov
je
mov
imul
(bad)
loop
cmps
mov
sub
pop
cmc
add
sbb
or
mov
inc
jg
adc
dec
dec
rcr
leave
jmp
jo
inc
add
in
imul
sbb
vmovdqa
outs
dec
mov
cmc
or
inc
mov
push
movs
je
fwait
test
movs
dec
or
fwait
mov
ret
lds
ficom
adc
ss
je
fisttp
(bad)
push
and
popa
mov
in
dec
add
ins
xor
and
jns
stc
adc
lods
or
adc
js
fs
lahf
in
mov
lea
ja
sub
jmp
lea
mov
sub
inc
mov
cmp
dec
outs
mov
mov
aaa
(bad)
int
cmp
mov
dec
fs
jns
add
xor
add
sbb
lea
cmp
fiadd
sar
ret
pmulhw
push
es
jb
and
test
outs
repnz
xor
shl
movs
fistp
xor
jnp
sub
mov
shl
repz
imul
sbb
xor
jmp
sub
pandn
fidivr
push
inc
pop
in
mov
aam
sbb
int3
icebp
xor
xchg
(bad)
inc
and
lods
imul
xor
dec
in
xchg
idiv
or
dec
sub
add
cmp
adc
mov
scas
loop
into
push
mov
fimul
jb
pop
cld
pusha
mov
pop
pop
sar
push
jg
lahf
mov
inc
jmp
pop
push
cmc
mov
mov
pushf
retf
stos
or
pushf
add
movs
mov
jp
test
sub
inc
rcl
and
fstp
out
(bad)
push
xchg
pop
xchg
mov
sbb
test
lock
das
(bad)
push
stc
data16
or
int3
aas
jle
in
imul
jmp
std
(bad)
xchg
mov
test
jge
cmc
cdq
sub
ficom
bnd
inc
sub
data16
push
mov
dec
dec
lds
mov
pop
jmp
pop
inc
(bad)
add
cdq
mov
xor
inc
sar
mov
add
push
fdivp
aaa
lods
lea
out
in
(bad)
sti
push
dec
xchg
test
aam
pop
push
sub
lock
xchg
xchg
iret
inc
jb
mov
pop
jns
add
shl
mov
sub
and
sbb
leave
mov
xchg
rcr
and
lahf
pop
mov
dec
out
and
jle
or
retf
(bad)
cmp
shr
gs
add
cmps
clc
mov
outs
mov
(bad)
in
and
cmc
sub
stos
pop
lock
ss
push
xchg
and
adc
pop
ficom
je
mov
sar
scas
mov
test
pop
mov
jge
push
sub
or
(bad)
scas
repnz
vcmppd
inc
mov
scas
in
xor
push
or
test
icebp
enter
les
cdq
adc
xchg
aas
mov
neg
mov
shl
enter
out
inc
mov
mov
or
retf
daa
jo
test
loop
daa
scas
xchg
or
jbe
jo
adc
jne
mov
mov
ret
and
dec
and
xor
cwde
mov
add
push
fimul
and
nop
cmp
cdq
std
and
mov
adc
sub
push
scas
pusha
cli
or
stos
jbe
outs
mov
imul
mov
mov
retf
jns
mov
jnp
or
test
dec
test
nop
es
shl
outs
lds
aam
mov
cmps
pop
cmp
sub
je
in
pop
and
movs
leave
mov
dec
mov
enter
or
or
inc
xchg
and
aam
and
sar
in
inc
cld
aas
xchg
shl
div
jae
fidivr
test
int3
sub
out
sti
sahf
je
ins
ds
addr16
movs
add
adc
shl
dec
ficom
dec
mov
jmp
xchg
inc
ins
dec
inc
aad
mov
xchg
adc
jmp
sub
adc
outs
push
lods
push
mov
cmps
out
and
ret
popf
dec
(bad)
pop
jle
pop
popf
hlt
int3
call
dec
outs
mov
movs
ja
pop
rcl
adc
dec
fwait
(bad)
popf
loop
call
mov
sub
cdq
inc
adc
or
call
das
das
aam
fwait
mov
or
dec
or
pop
in
pop
add
(bad)
popf
sub
ins
add
sub
iret
mov
mov
mov
(bad)
(bad)
std
fdiv
(bad)
cmp
mov
adc
fist
mov
stc
jae
sbb
pop
arpl
test
stc
fstp
aam
stc
data16
leave
mov
fdiv
inc
xchg
mov
lahf
xchg
inc
inc
mov
inc
ja
loop
ret
lea
xchg
das
xchg
ins
retf
sbb
push
movs
fcomp
push
pop
sub
int
mov
ins
xchg
outs
jge
jmp
int
jle
or
jle
rcr
mov
imul
inc
sbb
jg
sub
push
inc
fiadd
mov
adc
pop
into
cli
and
adc
ja
sub
loopne
pop
dec
cdq
dec
mov
cmp
scas
and
ror
xchg
movs
dec
cmps
mov
jno
es
paddusb
add
(bad)
into
xor
add
(bad)
call
cmp
mov
push
fs
retf
mov
call
movs
data16
les
ds
outs
shl
mov
adc
xchg
popf
retf
rcr
pop
mov
xor
bswap
xchg
xor
jge
ficomp
jbe
fisub
inc
icebp
nop
js
and
push
adc
lds
xchg
dec
mov
test
out
mov
arpl
outs
mov
(bad)
adc
pop
jle
ror
std
popf
or
add
out
push
inc
or
leave
inc
cmp
pop
(bad)
jbe
cmp
pop
jmp
(bad)
and
sub
lea
lods
(bad)
push
and
jo
or
inc
push
jb
push
push
out
mov
icebp
mov
loop
pop
les
sahf
mov
pop
(bad)
out
xor
(bad)
into
push
or
and
call
mov
inc
sbb
in
pop
lods
mov
inc
ss
bswap
das
mov
icebp
push
push
xchg
dec
add
pminub
inc
ss
adc
push
(bad)
out
pop
xchg
jge
stc
imul
push
pop
jno
mov
cmc
imul
pusha
cmp
aad
mov
sbb
out
(bad)
add
(bad)
in
nop
or
pop
ja
jb
and
xchg
ret
out
outs
jb
repz
jnp
cmp
cmp
(bad)
movs
ins
mov
xchg
push
push
sbb
or
fbld
pop
cmps
pop
mov
xchg
lods
imul
jne
mov
shl
lock
push
add
or
test
test
jge
xchg
xor
xor
(bad)
(bad)
jg
pop
or
enter
push
out
mov
or
leave
mov
in
cmp
add
and
fnstcw
retf
push
dec
cmp
fsubr
pop
jge
ds
xchg
daa
pop
std
and
jle
pop
enter
mov
repz
jecxz
add
sub
repnz
sbb
add
sbb
and
mov
imul
cmp
jnp
into
sbb
cmp
jge
mov
sbb
shl
mov
xchg
dec
add
mov
inc
loop
arpl
mov
xchg
out
popf
out
das
add
das
pop
aam
push
ins
data16
push
jle
ret
push
aaa
loop
pop
iret
sar
aam
dec
mov
xchg
push
sub
cmp
pop
inc
sub
mov
dec
call
cmc
std
add
mov
loop
mov
test
or
cmp
fidiv
jl
xlat
xor
rol
fadd
push
enter
repnz
inc
add
scas
cmp
pop
sub
mov
pop
mov
(bad)
inc
pop
mov
int
test
ss
shl
inc
or
mov
adc
jge
ret
adc
jne
shl
sbb
addr16
push
les
sub
xchg
ror
pop
or
call
mov
and
and
pop
xlat
jge
jmp
inc
stc
ret
das
popf
jbe
arpl
ror
xchg
sahf
push
in
idiv
pusha
push
test
repz
or
mov
jecxz
(bad)
mov
(bad)
sub
icebp
and
dec
in
cwd
shl
sub
fild
push
lods
cmps
push
retf
xor
push
test
aam
push
pop
add
fcmovu
xchg
sbb
not
mov
add
adc
mov
stos
(bad)
(bad)
pop
jmp
and
push
dec
jle
and
fcomp
repnz
jmp
in
(bad)
into
popa
mov
cdq
ret
shl
jbe
dec
mov
retf
pop
adc
sub
pop
sub
add
cmp
or
dec
sti
xor
xor
dec
or
fist
jge
iret
inc
sub
mov
pop
cmp
lods
(bad)
sahf
(bad)
(bad)
xor
pusha
xchg
sub
push
xchg
mov
jge
js
fwait
or
sbb
aas
leave
jmp
push
ret
xchg
push
data16
pusha
arpl
movs
or
mov
test
inc
sti
mov
movs
push
cmp
jae
bound
pop
push
pop
sti
inc
sbb
sub
bound
ja
dec
adc
push
cs
cli
in
inc
xchg
in
sbb
shr
push
rcr
sbb
jl
xchg
xchg
cmps
fadd
dec
dec
mov
push
mov
fld
or
xor
test
movs
repnz
cmp
fsub
push
sub
stos
loop
push
outs
lea
lock
cmp
shl
pusha
sub
add
stc
or
mov
iret
fsubr
inc
or
jle
jmp
dec
push
inc
cmps
aas
out
ss
xlat
or
nop
xchg
ret
aam
inc
into
adc
sbb
add
ret
mov
dec
sbb
push
mov
inc
mov
cmp
retf
repz
int
xor
fnstsw
test
sub
(bad)
xor
pop
out
inc
repz
pop
jge
mov
mov
cmp
cmp
sub
(bad)
sar
sub
ret
dec
(bad)
cmp
cmps
pusha
cmps
out
fs
mov
js
lock
add
xchg
inc
(bad)
pop
lods
ret
fld
xchg
mov
xchg
stos
jge
iret
fs
fcmovu
and
xchg
enter
xchg
cmp
daa
and
or
rcr
not
add
rol
leave
push
faddp
sar
mov
xchg
pop
pop
xchg
loopne
lods
xchg
push
inc
mov
fild
out
jbe
dec
xlat
lock
gs
pop
sahf
adc
dec
push
dec
pop
mul
add
add
mov
lods
mov
hlt
cmp
(bad)
sti
fistp
pop
(bad)
sbb
in
pop
aaa
test
and
xchg
movs
inc
mov
rep
jge
ss
jne
lods
cmps
addr16
jp
sbb
lock
popf
aad
icebp
jnp
pop
cmps
add
movs
enter
mov
ja
add
inc
push
(bad)
dec
sbb
xor
aas
out
mov
mov
cmp
adc
test
push
mov
mov
outs
jb
pop
mov
(bad)
add
clc
mov
iret
jbe
shl
pop
test
add
sbb
lods
ja
bound
aaa
sub
adc
je
clc
mov
cli
inc
inc
shr
add
pop
dec
xchg
cmp
cdq
aam
push
mov
lea
jecxz
jg
mov
loop
shl
push
and
std
and
cmc
and
movs
cmp
pop
pop
mov
cld
cli
data16
ret
not
dec
fcomp
lods
(bad)
add
and
test
cli
int3
js
push
pop
or
test
outs
popf
mov
pop
lock
stos
jae
jecxz
retf
ret
(bad)
or
into
push
add
or
mov
xchg
inc
xor
ret
jmp
pop
dec
repnz
cmp
sbb
in
fistp
out
and
mov
aam
dec
out
dec
rcr
mov
jns
shl
push
add
mov
or
addr16
and
add
fs
(bad)
adc
(bad)
in
les
pop
mov
mov
xor
test
dec
gs
pop
jmp
mov
test
push
xor
add
cld
mov
cli
push
imul
or
cmp
jb
xchg
add
push
xor
lock
pop
and
jg
loop
js
push
pop
daa
inc
push
push
addr16
xor
jbe
leave
in
and
fld
jno
sti
mov
adc
cwde
das
cmps
cmp
cmp
ror
lds
daa
cmp
add
cmp
dec
ds
inc
mov
adc
fbld
jae
pop
jecxz
mov
xor
lods
cs
or
dec
cmp
into
inc
addr16
scas
add
pop
in
inc
aad
jno
call
xor
imul
shl
mov
into
jbe
loope
jne
fucom
sbb
pusha
in
jmp
mov
push
sub
pushf
das
outs
inc
adc
cmps
lods
sub
push
push
jnp
into
int
xlat
cmps
fs
(bad)
movups
sbb
cdq
mov
icebp
sbb
cmp
jne
pop
cs
mov
xor
jnp
es
not
cmps
push
pop
add
fistp
loope
sbb
daa
lock
jmp
jns
sbb
imul
pop
cli
pusha
mov
cs
int
sub
imul
mov
enter
loope
mov
fs
inc
add
adc
xchg
adc
ss
fidiv
push
sahf
mov
popf
or
call
shl
int3
mov
in
loopne
sbb
dec
push
aas
js
xor
aad
inc
sub
lahf
xor
loop
es
dec
jge
stos
mov
jns
in
or
or
in
push
aad
scas
pop
retf
daa
or
movs
pop
les
loop
adc
aas
jmp
retf
xor
xchg
fwait
ds
test
fistp
stos
pop
inc
outs
xlat
out
cmp
out
add
pop
nop
mov
pop
icebp
mov
push
mov
retf
idiv
test
test
scas
rcl
dec
inc
or
push
push
xchg
xor
jecxz
jo
lock
ret
sbb
cmp
ja
dec
pop
cmp
out
sub
pop
rcr
push
enter
scas
out
int
jle
shr
aaa
mov
jbe
push
cmp
mov
mov
mov
sub
fdiv
ds
jp
test
sar
inc
lahf
jbe
or
mov
enter
dec
out
cmp
jmp
ficom
ds
call
mov
xchg
enter
inc
ss
call
sub
mov
imul
dec
lods
cmps
scas
lea
ins
pop
retf
mov
pop
pop
ins
mov
fdivr
scas
lds
out
int3
push
and
mov
inc
xor
dec
sar
gs
inc
pop
push
loop
(bad)
test
popf
xchg
mov
scas
aas
adc
add
pusha
je
loop
pop
lods
xor
xor
sub
xchg
inc
gs
or
inc
aaa
ins
push
nop
jns
or
cmp
sub
ror
mov
mov
adc
xchg
sbb
js
pop
fadd
inc
pop
and
out
js
ret
daa
aaa
push
jmp
pop
fabs
les
push
mov
fs
push
ins
lahf
mov
dec
cmp
hlt
fstp
jb
and
(bad)
fiadd
sbb
cmp
push
out
sub
push
(bad)
push
sub
aad
mov
fcmovb
(bad)
(bad)
les
lods
(bad)
xlat
mov
movs
or
cld
xor
sbb
or
rcr
add
lods
mov
inc
xchg
sub
in
mul
stos
retf
push
push
sti
jecxz
mov
pop
(bad)
(bad)
cmps
push
icebp
pop
out
shr
ret
sub
fdivr
imul
inc
cdq
leave
iret
cli
ja
(bad)
out
mov
fdiv
jno
adc
mov
fwait
add
movs
sub
(bad)
mov
rcr
scas
clc
lods
btc
clc
(bad)
xchg
mov
inc
inc
ins
je
xor
push
ret
mov
out
(bad)
loop
pop
or
sar
shl
jae
movs
and
mov
push
es
mov
out
add
rcl
sub
push
mov
mov
mov
pop
add
jecxz
outs
adc
pop
xchg
sub
jg
loope
outs
stos
mov
ret
out
nop
int3
hlt
inc
scas
cmp
mov
add
jnp
cmp
sbb
xor
movs
jmp
movs
mov
and
sub
cdq
jbe
daa
pushf
scas
push
mov
dec
xor
sub
jle
xor
sti
test
cmp
inc
cmps
xchg
ins
icebp
ret
sub
in
hlt
push
jae
inc
test
in
xor
pop
adc
dec
imul
dec
cmp
mov
ret
scas
or
cwde
mov
fxch
push
test
arpl
sar
fst
sbb
enter
rol
out
cmp
repz
data16
mov
fdivr
inc
(bad)
int
mov
(bad)
out
xor
push
popf
jge
sbb
jl
shl
mov
adc
sbb
pop
call
lds
jle
adc
ret
pop
sub
and
push
pop
or
sub
mov
int
xor
cmp
jl
lahf
ins
or
popf
in
jg
cmp
shl
outs
sbb
mov
push
mov
test
les
fisub
stos
sahf
push
or
(bad)
hlt
mov
sub
and
mov
ret
retf
xor
pop
mov
ror
pop
sub
ret
cmp
mov
mov
and
mov
nop
sbb
sub
popa
popa
xchg
leave
scas
xor
xchg
sbb
lods
enter
outs
dec
mov
dec
jle
shr
vpand
(bad)
out
loop
and
bound
mov
(bad)
or
cmps
pop
jns
(bad)
jle
aad
(bad)
mov
lahf
inc
adc
push
and
adc
push
fst
dec
mov
dec
fmul
popa
int
lahf
pop
js
frstor
daa
xor
and
in
or
adc
leave
stc
nop
call
jae
je
pop
dec
or
rcr
stc
jno
scas
daa
mov
pop
xchg
out
inc
fild
inc
add
(bad)
lods
nop
push
aaa
mov
rcl
jae
cmp
test
mov
xchg
ins
rcr
inc
xchg
pop
pop
pop
jmp
out
(bad)
sub
mov
pop
js
push
xlat
stc
or
adc
enter
or
loopne
inc
mov
mov
sar
pop
inc
or
imul
pop
arpl
mov
outs
rcr
mov
(bad)
and
and
mov
or
xchg
imul
sub
fistp
(bad)
mov
mov
push
pusha
push
cli
add
mov
in
mov
scas
outs
mov
cmps
add
sbb
cmp
in
cmp
int3
call
in
sbb
mov
out
dec
xor
pushf
xchg
jb
fwait
xor
sbb
adc
outs
retf
or
aas
dec
or
mov
scas
sub
je
jl
mov
pop
xchg
adc
test
sub
iret
xchg
inc
pop
in
(bad)
cld
in
add
clc
fild
sbb
dec
jge
push
shr
test
xchg
fnstenv
jb
mov
adc
sbb
cwde
mov
sbb
lds
sbb
mov
sub
lods
cdq
sub
imul
mov
xor
mov
js
jo
or
dec
mov
jmp
push
lahf
jle
call
scas
nop
shl
inc
ror
cmp
dec
xor
jb
xchg
push
add
(bad)
mov
into
pusha
iret
jg
sti
pop
pop
lahf
mov
popa
adc
int
dec
dec
cmp
sar
test
dec
xchg
sbb
jmp
(bad)
xchg
jle
mov
cmps
add
imul
jns
mov
test
xor
ret
sub
stos
test
(bad)
call
push
les
jg
xchg
loope
mov
push
js
dec
mov
cld
test
cdq
or
cmp
mov
idiv
mov
xchg
out
or
aam
xchg
test
icebp
cmp
int3
and
xchg
dec
imul
mov
retf
xchg
fucomp
les
hlt
add
sbb
mov
ss
ror
cmp
cmps
or
int
sbb
(bad)
cli
inc
xchg
mov
pusha
sub
inc
add
dec
stos
jmp
in
inc
mov
fstp
fimul
sti
mov
cli
lods
sub
push
loope
pop
aam
cmp
cmp
outs
mov
jno
std
pushf
xor
jl
jmp
adc
mov
imul
gs
mov
or
xchg
nop
xor
aam
enter
jmp
(bad)
loopne
sbb
sar
(bad)
scas
dec
push
inc
mov
pusha
stos
lods
cmps
inc
loope
jb
loop
pop
fsub
pusha
das
scas
ss
dec
loop
int3
call
in
test
mov
push
das
mov
outs
push
inc
mov
cwde
in
stos
add
mov
jnp
adc
mov
movs
adc
inc
fisub
adc
or
loop
mov
call
adc
ins
(bad)
push
mov
push
or
jne
mov
rcr
add
fwait
lds
and
jno
aad
mov
dec
adc
sbb
stc
mov
and
xchg
sar
cwde
and
aas
xor
(bad)
jns
jo
jg
mov
sbb
push
ret
ins
(bad)
lock
xchg
sub
mov
jns
ror
in
xor
ins
in
xlat
dec
jno
(bad)
pop
inc
jg
icebp
lahf
jne
stos
or
mov
xor
and
cmp
retf
mov
int
and
sar
mov
pop
daa
fwait
add
mov
mov
dec
adc
push
add
int
pop
addr16
loope
jp
out
aam
fistp
into
and
movs
out
test
daa
and
mov
xor
int
push
dec
mov
(bad)
(bad)
cmp
and
pop
mov
mov
icebp
push
push
push
push
mov
stc
mov
out
sar
sbb
lock
idiv
mov
les
aas
xor
add
dec
dec
(bad)
je
push
leave
xchg
(bad)
iret
sub
mov
and
fdiv
div
push
mov
inc
or
xchg
push
aad
inc
pop
or
push
push
retf
imul
inc
push
jnp
test
retf
retf
mov
dec
dec
xchg
xchg
ja
mov
repz
dec
xor
out
jp
outs
adc
clc
or
adc
sub
mov
sbb
dec
or
aaa
mov
out
dec
sbb
mov
out
mov
test
push
lods
pusha
adc
xchg
jmp
xchg
or
push
stos
pop
and
pushf
popa
sub
retf
pop
jle
mov
xchg
adc
fnstsw
out
dec
mov
pop
fucom
adc
cmp
add
sub
mov
test
mov
outs
ret
ins
leave
call
cs
shr
dec
or
fwait
mov
cmc
mov
pop
ins
inc
lea
mov
retf
dec
iret
and
ret
adc
add
aaa
hlt
popa
or
inc
and
sbb
xchg
xchg
lock
leave
pushf
mov
jo
stc
or
out
pop
ja
mov
push
(bad)
sahf
sar
push
sub
outs
retf
fsubp
lock
outs
in
lea
sbb
push
leave
and
mov
jl
das
test
fwait
aam
js
outs
(bad)
(bad)
cli
adc
rcr
pop
adc
push
jl
bound
rcr
dec
lds
enter
fsubr
dec
inc
mov
(bad)
loopne
cmp
push
xchg
mov
out
mov
cwde
xchg
pop
xchg
inc
in
inc
mov
adc
jp
or
xor
fistp
xor
jl
stos
(bad)
and
(bad)
sar
outs
shl
cs
jo
imul
rcl
xchg
loop
fadd
les
push
jbe
scas
out
add
in
(bad)
adc
and
add
mov
xor
sub
fwait
push
mov
pusha
mov
sbb
ret
aaa
loopne
cld
pop
sbb
cmp
(bad)
imul
push
mov
mov
push
in
pop
jge
sbb
mov
push
xchg
jb
push
add
je
sahf
movs
fldenv
fwait
out
dec
jne
xchg
in
cmc
mov
ficom
aas
mov
movaps
arpl
xor
lods
pop
cld
cmp
enter
repnz
dec
pushf
xchg
(bad)
fidivr
pop
or
jl
aam
outs
cwde
mov
mov
lods
rol
nop
rcr
repnz
mov
inc
pop
leave
lock
outs
mov
mov
xor
leave
pop
or
cld
(bad)
movs
loope
out
xor
fistp
sbb
hlt
aas
test
pop
imul
shl
cdq
mov
lea
gs
cmp
add
cmps
dec
repnz
jae
addr16
cmp
xor
test
icebp
mov
sub
aam
push
ret
jne
or
stos
mov
and
test
addr16
and
pop
add
adc
jns
movs
pop
dec
xor
repnz
jns
lds
pop
push
std
fadd
nop
dec
inc
xchg
in
adc
shl
sub
je
lods
or
icebp
shl
pop
lods
xor
in
xor
push
push
xor
mov
aam
mov
pushf
in
add
mov
or
add
(bad)
mov
dec
xchg
pop
jge
leave
pop
fwait
xor
retf
loope
fwait
and
mov
fidiv
test
iret
cld
(bad)
sub
repz
shl
cmp
jnp
mov
shr
outs
fwait
cmp
xchg
mov
repnz
xor
lahf
loop
daa
pop
test
ins
xchg
sub
sbb
cmp
or
xor
pop
loopne
mov
add
arpl
add
mov
jb
dec
push
pop
xchg
or
pop
aad
mov
pop
enter
ficomp
loop
push
(bad)
scas
loopne
or
leave
imul
mov
push
pusha
xor
ror
ror
das
jne
daa
cmp
and
icebp
popf
fdivrp
shl
pop
mov
out
std
out
push
inc
sahf
mov
or
adc
cmp
xor
jge
les
dec
cmp
mov
fild
fiadd
and
xchg
cli
inc
and
repnz
xor
ja
outs
mov
adc
sti
mov
out
and
mov
jnp
cs
nop
jle
(bad)
push
mov
or
ins
test
push
push
inc
int3
dec
or
ficomp
or
mov
ins
fimul
and
xchg
jl
std
push
int
clc
sbb
push
ss
das
jp
mov
xchg
js
out
sti
jno
xchg
test
mov
cmps
sub
int3
stc
mov
pop
jns
call
push
arpl
or
rcl
lods
dec
popa
cli
jo
mov
popa
aaa
dec
lock
arpl
push
mov
mov
test
jnp
xchg
xlat
imul
xchg
int3
ud0
ror
inc
in
rcr
inc
(bad)
and
sti
enter
outs
imul
inc
pop
mov
cmp
mov
add
cli
jp
add
jb
xchg
and
sub
xlat
jecxz
sub
addr16
je
aas
aad
mov
sar
fbstp
cmp
outs
ficomp
cmp
stc
pop
jnp
pushw
xor
sahf
xchg
jo
or
dec
push
test
inc
push
push
fld
mov
or
cwde
jle
cmps
cmp
sub
addr16
enter
lods
jle
mov
loopne
mov
xor
add
cs
jns
mov
cmps
(bad)
and
or
cmovs
test
and
stos
mov
push
popa
adc
xor
mov
in
xchg
in
mov
daa
xor
fwait
ins
or
scas
rcr
pop
or
xchg
movs
cmp
int
cs
inc
fisttp
ffree
xchg
mov
dec
call
dec
dec
pusha
mov
sbb
inc
aaa
pusha
adc
retf
inc
add
call
dec
gs
retf
test
sbb
fwait
push
pop
mov
repnz
fst
sub
retf
dec
mov
jp
pop
pop
jb
gs
jns
mov
cs
mov
arpl
inc
idiv
sbb
movs
(bad)
shr
cld
shl
sub
call
rcr
cli
sahf
push
scas
inc
retf
(bad)
sbb
and
inc
movs
and
aaa
push
add
test
push
fst
xlat
cld
call
stos
mov
(bad)
aad
repnz
sub
mov
out
ror
(bad)
pop
and
call
pop
imul
test
mov
sub
xchg
les
mov
outs
gs
adc
xor
leave
shl
inc
call
add
adc
sbb
js
mov
iret
loope
gs
repnz
mov
pop
sti
arpl
outs
mov
out
aas
icebp
mov
jne
pop
xor
scas
xor
push
push
dec
ret
mov
xchg
add
or
iret
dec
vmovddup
aaa
mov
mov
into
mov
or
or
jmp
retf
or
cli
push
fucom
xor
imul
out
add
inc
movs
cli
or
mov
jmp
mov
mov
push
repnz
and
add
and
fs
dec
mov
ins
(bad)
mov
adc
arpl
fs
cdq
mov
cdq
sub
fidivr
es
movs
mov
in
in
call
stc
jmp
dec
out
ins
and
icebp
mov
push
fbstp
inc
lods
inc
ror
test
jp
cmp
int
daa
mov
arpl
jns
mov
mov
adc
xchg
inc
push
outs
mov
mov
fcomip
sbb
pop
in
push
icebp
and
gs
inc
(bad)
add
loopne
sahf
and
xor
dec
cwde
or
jmp
shl
push
out
sbb
sub
cmp
setb
lea
jge
(bad)
xor
xchg
lds
push
test
sub
outs
aam
(bad)
mov
and
sbb
pushf
cmp
sbb
div
push
pop
(bad)
stc
fcomp
xor
fnstsw
fstp
sbb
adc
lock
or
and
jle
cmps
jb
mov
and
shl
or
inc
in
mov
and
pop
movs
add
bnd
in
idiv
enter
arpl
popa
cdq
adc
mov
dec
cwde
mov
enter
mov
loope
cdq
or
xchg
xchg
in
in
xchg
test
inc
les
pop
clc
in
cmps
lahf
mov
push
inc
(bad)
xor
fcom
inc
(bad)
xchg
cmps
pop
ret
je
jecxz
aas
jnp
repnz
xor
pushf
pop
jb
scas
pop
mov
jmp
mov
mov
sub
dec
dec
iret
out
xor
in
or
test
retf
fld
sub
push
iret
jae
call
lods
mov
ret
stos
jne
stos
fs
(bad)
loope
popf
pop
mov
lods
jmp
gs
sub
sbb
mov
inc
in
ins
add
adc
sti
xchg
mov
mov
jg
iret
fnsave
and
mov
cmp
xchg
adc
pop
das
mov
sub
ja
sub
movs
cmp
inc
dec
ss
test
push
mov
out
xchg
jecxz
call
nop
cmp
mov
lock
imul
ud2
push
xor
imul
mov
cdq
dec
retf
xor
mov
imul
into
lods
push
xchg
pop
xor
push
retf
sbb
enter
leave
shr
push
repz
adc
ja
gs
xor
loopne
les
nop
cmp
ror
lahf
mov
pusha
(bad)
imul
fiadd
or
scas
ja
rcr
dec
sbb
adc
iret
movs
clc
xchg
stos
stc
push
test
jno
ins
clc
(bad)
jae
fmul
shl
sub
ror
mov
or
dec
cmc
cmc
cli
cwde
sub
fs
(bad)
dec
pop
pushf
or
mov
push
ror
push
sbb
dec
mov
retf
aaa
sbb
aas
jo
(bad)
sbb
xchg
(bad)
push
fmul
cld
mov
or
or
in
mov
push
and
xchg
inc
enter
xchg
xor
mov
jp
pop
jmp
js
in
sti
adc
movs
out
outs
ins
pop
and
cmp
adc
lea
push
xchg
mov
mov
xchg
pmaxsw
addr16
sbb
jmp
dec
stos
inc
loop
mov
push
push
push
mov
fisttp
icebp
mov
sub
ret
and
xchg
int
inc
inc
movs
mov
dec
and
lahf
cmp
dec
jb
mov
xor
(bad)
mov
mov
sub
dec
dec
mov
sbb
int3
inc
mov
dec
pop
dec
sub
jle
retf
inc
xor
mov
pop
xchg
mov
xchg
xor
xor
xor
inc
lods
call
ss
stos
inc
retf
adc
adc
ror
mov
mov
mov
clc
es
sar
int
movs
adc
and
movs
mov
(bad)
aam
cs
sahf
imul
mov
ror
cmp
cmp
cwde
xchg
(bad)
add
pop
retf
pushf
xchg
mov
push
jno
adc
cmp
test
adc
dec
xor
jmp
bound
into
test
ins
pushf
popa
mov
sub
js
leave
hlt
cmp
jp
dec
in
jmp
movs
ret
ret
add
scas
cmp
push
aas
aas
xchg
sbb
call
(bad)
inc
pop
movs
dec
mov
jne
loope
mov
mov
test
xchg
repz
outs
and
hlt
jae
repnz
xor
imul
mov
test
pop
pop
outs
arpl
mov
pop
dec
sub
stos
push
adc
gs
and
mov
jp
sub
add
test
or
mov
mov
fs
or
test
add
stc
call
cli
inc
mov
mov
pop
lods
int
jo
mov
outs
push
clc
aad
aas
add
or
jno
push
lea
jb
mov
stc
movs
fisttp
inc
xchg
inc
fimul
cdq
ins
out
cmp
je
xorps
pop
mov
mov
dec
daa
or
retf
adc
cmp
push
add
push
push
xchg
pop
(bad)
xchg
stc
xlat
cld
clc
sti
scas
add
push
xchg
arpl
sbb
retf
hlt
push
cmc
mov
daa
mov
enter
mov
mov
mov
adc
pushf
out
mov
xor
ins
ss
fsubr
adc
(bad)
add
mov
dec
push
push
das
lahf
rcr
out
(bad)
rcr
test
sbb
or
sbb
loop
sbb
leave
mov
xchg
loopne
mov
xor
rep
les
cmp
pop
iret
or
aad
movs
cmp
pop
jp
adc
dec
sub
dec
dec
xor
in
pop
push
ds
inc
ins
jp
mov
mov
out
pop
repnz
in
aaa
jno
or
inc
xor
imul
mov
bound
movs
mov
aam
mov
add
dec
sbb
cli
arpl
mov
jmp
push
arpl
mov
push
loop
ficomp
pop
icebp
loopne
aaa
cmp
jnp
adc
jp
and
fisub
jmp
sub
out
int
mul
cmp
cmp
in
movs
cmp
into
pop
mov
les
test
cdq
pop
fld
and
ins
dec
push
mov
jmp
jl
adc
sbb
or
loop
mov
mov
cs
mov
inc
das
push
stos
or
or
xor
(bad)
rol
sub
push
cmps
xor
xchg
mov
(bad)
loop
xor
mov
jmp
ror
inc
pop
data16
mov
test
std
mov
sub
addr16
or
cs
adc
cmp
rcr
or
stos
pop
inc
movs
push
sub
es
xor
out
in
add
adc
xchg
xor
inc
fidivr
fstp
lods
out
icebp
push
ins
pop
iret
dec
and
xlat
add
mov
clc
(bad)
jge
xlat
shl
add
arpl
hlt
ins
or
dec
inc
or
dec
pop
test
fwait
sbb
test
or
adc
cmp
mov
iret
and
mov
outs
in
imul
or
pop
outs
jno
mov
xchg
je
jle
cs
aam
clc
inc
pop
mov
movs
sub
in
in
dec
in
int3
sub
cmc
loope
rcl
adc
dec
mov
xor
pop
inc
ds
add
jne
jbe
bound
sbb
inc
sub
xor
pop
and
pop
dec
push
push
es
int3
(bad)
lahf
fld
push
cmps
adc
and
sbb
push
dec
xor
pushf
adc
mov
mov
movs
je
js
ret
cmp
dec
rol
jno
sbb
or
int3
sub
sbb
aam
outs
rol
add
bound
out
es
mov
sub
jg
and
outs
mov
mov
sti
imul
jle
mov
sub
inc
mov
adc
jp
in
repnz
and
xchg
mov
dec
and
imul
inc
push
xor
xchg
test
in
cmps
in
fisttp
jmp
jp
sahf
sub
aad
jae
xor
sbb
add
mov
sub
sbb
pop
cmp
and
cmp
jnp
jmp
retf
(bad)
fist
imul
lods
and
(bad)
and
je
ret
dec
out
repnz
mov
push
mov
repnz
call
adc
xchg
xchg
inc
inc
add
imul
inc
shl
inc
bound
sub
mov
push
jl
ja
xor
int
jae
dec
ss
or
push
in
mov
xchg
push
push
jl
and
in
push
xchg
xchg
cmps
in
sbb
add
push
into
jb
in
dec
jbe
lock
rcl
mov
sub
cmp
adc
sub
pop
icebp
jmp
fwait
test
jge
js
movs
xchg
mov
or
inc
lods
xor
hlt
pop
addr16
cmps
or
mov
pop
xchg
and
push
enter
jl
jae
mov
imul
imul
rcl
dec
jne
mov
xlat
sbb
outs
icebp
sbb
mov
cmc
xor
or
idiv
(bad)
fs
add
add
(bad)
fdivrp
pusha
xchg
mov
cld
mov
mov
mov
repz
adc
cmps
popf
cld
push
cli
fstp
test
imul
call
hlt
and
sahf
sub
test
icebp
retf
inc
inc
mov
cmps
ret
or
jne
sub
inc
mov
push
mov
pop
(bad)
pushf
cdq
fwait
aaa
fimul
pop
retf
pop
mov
loopne
(bad)
or
jmp
popa
sub
pop
and
into
ficom
retf
mov
movs
mov
sahf
stos
out
jnp
in
jb
pop
mov
cmp
adc
retf
xor
ret
ins
sub
xchg
sub
or
jae
repnz
sbb
pop
leave
and
mov
rol
gs
xor
retf
pusha
(bad)
stos
lea
and
outs
pop
sbb
shr
nop
cmp
jno
pop
aas
add
dec
addr16
fcom
(bad)
int3
enter
popa
lock
jge
pusha
fst
or
repz
ret
pop
out
mov
les
iret
push
xchg
dec
(bad)
mov
add
cs
xchg
fstp
cwde
fist
xchg
popa
dec
and
adc
mov
and
xchg
cld
movs
inc
cmc
xchg
jl
clc
movs
jp
sub
int3
ins
movs
lahf
movs
pop
or
aad
in
mov
dec
xchg
jecxz
cld
aas
pop
shl
xchg
jp
push
test
push
ror
or
cmps
ud0
or
sbb
enter
mov
dec
pop
sar
or
push
lods
xchg
cmp
xor
inc
aaa
mov
push
push
fisubr
jle
out
shl
rol
xor
leave
push
mov
rcr
and
mov
pop
and
and
aaa
adc
mov
pop
cmps
mov
aaa
rcl
inc
xor
xchg
lahf
sub
(bad)
jl
repnz
mov
es
push
mov
mov
and
jbe
xor
popf
je
out
test
in
(bad)
leave
sti
ins
jle
cmps
mov
(bad)
xor
hlt
arpl
jbe
std
arpl
xor
iret
out
adc
scas
xlat
or
cmc
mov
cld
nop
mov
jge
hlt
sub
in
adc
rcr
fistp
loope
and
test
mov
rol
push
in
pop
add
push
add
dec
cmp
push
ficomp
and
mov
inc
mov
fidiv
aaa
or
ret
dec
shl
jp
ins
ins
fisttp
aam
jne
fdiv
aas
arpl
std
mov
dec
pop
aad
adc
test
or
xlat
mov
(bad)
xchg
and
sub
inc
xor
shl
loope
bound
shr
xor
(bad)
cmp
sub
pop
fstp
sub
mov
sbb
pop
in
fstp
xchg
jmp
mov
xchg
dec
daa
jg
or
jp
mov
not
outs
mov
pop
out
push
xor
shl
ror
(bad)
or
fst
bound
mov
jnp
add
push
xor
adc
jnp
les
jmp
clc
push
and
mov
popf
cmps
cmps
and
jb
xor
mov
xchg
sbb
js
ins
pusha
jecxz
mov
adc
out
test
jae
mov
push
call
cmps
adc
lock
mov
repz
cmps
jge
xchg
mov
addr16
adc
call
pusha
(bad)
cs
push
loope
jo
je
or
cld
pop
jb
out
dec
push
and
addr16
call
mov
fsub
sbb
add
xor
and
pop
pop
in
les
push
scas
jns
pop
sub
jne
outs
jnp
pop
cld
adc
xchg
jmp
xchg
sub
outs
cmps
iret
xchg
mov
push
jge
scas
out
lahf
pushf
jl
mov
sub
or
fbstp
fiadd
add
and
(bad)
inc
lock
stos
popf
sub
dec
ins
mov
test
ror
sti
fs
and
sub
adc
jl
js
sub
xchg
xchg
fsubp
add
(bad)
mov
mov
(bad)
sub
push
sub
call
(bad)
cmps
ret
or
push
shl
into
daa
jg
test
or
in
jle
jns
dec
bound
sti
jl
adc
sub
xor
lods
jl
repnz
gs
cmc
inc
jmp
cmps
ins
out
repnz
js
je
sti
cdq
int
enter
out
or
sbb
xor
arpl
test
pop
stos
xor
dec
iret
cmp
pusha
jmp
inc
mov
mov
adc
dec
hlt
rcr
inc
pop
mov
xor
pop
dec
mov
sbb
stos
or
xchg
test
pop
in
lods
sub
nop
enter
pop
sub
ja
call
dec
xlat
mov
call
fstp
test
fsub
add
gs
fiadd
int
jmp
imul
icebp
sbb
int
clc
jmp
push
out
outs
mov
ins
mov
das
pop
push
(bad)
cmp
leave
(bad)
dec
cmp
out
fyl2x
or
or
xchg
mov
(bad)
daa
es
xchg
push
int3
sub
mov
mov
mov
sahf
jns
xchg
mov
cmp
ret
sbb
mov
data16
ss
sub
retf
xchg
retf
imul
sub
movs
mov
je
test
stos
arpl
hlt
jecxz
xchg
int3
xchg
into
adc
pop
je
sbb
dec
pushf
std
retf
mov
dec
int3
es
arpl
retf
lahf
nop
into
xor
lds
mov
imul
xchg
scas
enter
sbb
sub
adc
jge
push
enter
sbb
mov
adc
jbe
push
in
sbb
push
or
movs
ja
aas
js
sbb
inc
aas
add
push
cmps
je
push
out
cmc
pop
push
pop
test
bound
push
movs
fs
inc
add
test
mov
xor
std
jge
call
mov
xor
jle
xchg
sahf
pop
lock
dec
pop
scas
cmps
stc
xor
or
adc
push
enter
cli
cmp
(bad)
sub
stc
mov
jns
mov
mov
xchg
lahf
xor
dec
(bad)
sub
xor
or
(bad)
jge
xor
cmp
xor
jb
add
rcl
inc
popf
and
dec
jp
xchg
fsub
mov
stos
push
iret
bnd
(bad)
pop
sti
mov
neg
and
in
sub
(bad)
cmp
mov
test
aas
call
add
movs
push
mov
jns
or
sahf
jae
mov
mov
(bad)
mov
inc
mov
or
sub
fdiv
sbb
push
push
in
pop
jmp
xlat
mov
dec
pushf
push
add
pop
push
out
ds
jl
mov
daa
fistp
rol
dec
xchg
dec
mov
dec
xor
pop
xchg
xlat
and
mov
retf
jae
jge
mov
enter
xchg
cmp
and
iret
sbb
loope
jmp
mov
cmp
int3
sbb
inc
cmp
sti
xor
fstp
add
cmp
cli
xor
sbb
dec
or
ret
stc
test
push
mov
and
mov
pop
fiadd
xor
es
add
jmp
or
repz
inc
mov
dec
mov
mov
repnz
jmp
jmp
rcl
shl
cli
mov
outs
scas
je
out
ret
mov
push
data16
push
mov
int3
je
call
retf
loope
jp
pop
leave
ret
xor
dec
scas
fld
fldenv
push
les
push
(bad)
js
sbb
inc
cdq
jecxz
out
mov
scas
ret
pop
lds
mov
mov
sbb
in
inc
sti
cmp
inc
xor
mov
cmp
mov
mov
popa
rol
pop
shr
add
ja
jecxz
push
pop
mov
jns
ror
inc
leave
fwait
jns
and
add
and
aam
shl
sbb
ret
xchg
cmps
cwde
int
ds
cs
movs
(bad)
fs
jno
mov
adc
sbb
ds
sub
sbb
cs
xchg
js
push
cli
ret
mov
movs
jb
fist
pushf
add
and
jg
rcl
arpl
imul
cwde
mov
bound
add
jbe
sbb
sbb
xor
daa
(bad)
addr16
lds
(bad)
pushf
add
jne
push
jg
cmps
pop
loopne
mov
popf
sub
mov
xchg
jbe
inc
mov
mov
pushf
pop
jbe
sar
jmp
mov
ds
pop
xor
or
lods
and
int
push
in
inc
es
push
ins
test
clc
sbb
loop
lods
inc
xor
mov
jnp
cmps
mov
mov
inc
fs
mov
add
jns
daa
aas
fmul
nop
sbb
jne
pop
aas
inc
out
or
sti
retf
lods
sti
or
je
add
shr
imul
ja
jb
dec
cmp
pop
add
lock
mov
ins
mov
jno
mov
pusha
(bad)
mov
repnz
ins
sbb
jg
jmp
adc
in
addr16
cmp
dec
popf
and
push
xor
lea
icebp
mov
icebp
repz
lea
cld
dec
into
aad
xchg
or
ror
xlat
es
lahf
cmc
or
and
pop
ins
cmp
iret
cmp
rcr
int
(bad)
mov
lahf
in
clc
inc
loop
add
cmps
(bad)
cmp
and
dec
rcl
xchg
xor
stc
jno
loope
inc
sbb
mov
jb
ds
call
iret
adc
xchg
call
xchg
sar
xchg
mov
inc
and
pusha
cmp
addr16
(bad)
stos
ds
ja
ins
repz
jecxz
xor
inc
add
fisttp
inc
sub
jo
arpl
add
data16
ret
sub
jle
and
mov
fcomip
imul
dec
test
fld
idiv
cmp
sbb
mov
jg
cmp
xchg
frstor
xor
dec
mov
out
pushf
or
cmp
(bad)
jg
popf
push
and
repnz
call
cmp
sub
cdq
jp
gs
call
iret
outs
inc
fwait
cs
js
add
xor
adc
stos
scas
mov
jno
mov
fidivr
fisub
pop
test
inc
ss
sub
push
cmp
mov
mov
call
pop
push
xor
loopne
popf
stos
and
xor
pop
pop
dec
adc
cmp
out
aas
cdq
add
mov
out
rcr
cld
inc
xchg
push
int
hlt
pusha
adc
arpl
frstor
nop
inc
xor
dec
xchg
jb
addr16
push
add
dec
cmps
and
fcmovnb
sub
int3
(bad)
add
mov
sbb
sub
and
bound
jno
xchg
fadd
sbb
or
jno
inc
dec
hlt
imul
xor
cwde
and
lea
pop
push
adc
shl
(bad)
neg
aam
movs
adc
push
mov
push
xor
inc
aam
fld
dec
push
out
outs
fucomi
push
mov
nop
(bad)
in
or
(bad)
rcr
sub
mov
add
jl
cmp
mov
jb
aaa
add
jge
mov
lock
call
jno
nop
add
out
(bad)
mov
lahf
dec
into
icebp
xor
mov
fnstcw
mul
hlt
rcl
pop
adc
popf
or
pop
push
inc
cmp
test
sbb
add
sub
hlt
add
jmp
dec
push
outs
jno
jmp
arpl
dec
lds
int3
jp
test
xor
pop
cli
push
rol
arpl
ds
xor
push
int3
push
push
sahf
xchg
mov
push
into
pop
xchg
in
dec
xchg
add
lds
enter
dec
mov
mov
lahf
scas
mov
push
ficomp
sahf
mov
call
ss
aam
ss
cmp
sub
aas
push
xor
mov
mov
pushf
ins
sub
in
mov
jmp
imul
push
das
int
mov
jle
sub
mov
cmp
je
xlat
(bad)
sahf
add
out
jmp
lea
ret
jmp
inc
mov
stos
adc
inc
dec
xor
out
sub
push
xlat
adc
in
mov
inc
repnz
aad
xchg
add
pop
rol
(bad)
cli
popf
pop
(bad)
in
mov
cs
mov
aaa
lods
cdq
mov
gs
js
mov
jo
xchg
outs
mov
es
je
cmp
retf
shl
or
jp
pop
into
cld
push
push
or
push
pop
call
shl
imul
arpl
adc
gs
lods
out
iret
jno
stos
dec
fwait
test
fdivr
add
sub
push
pushf
aas
xchg
rcl
repz
add
cmp
jbe
dec
bnd
mov
test
pop
or
jp
mov
mov
sti
sbb
(bad)
test
or
loope
xchg
add
fwait
mov
cmps
add
daa
rcl
test
cmc
(bad)
(bad)
push
fcomp
scas
add
mov
dec
(bad)
out
xchg
(bad)
jge
adc
hlt
fcomp
dec
out
pop
or
mov
fwait
jp
inc
inc
cmps
add
movs
sub
int
lea
cmp
sub
xchg
or
adc
test
(bad)
pusha
adc
push
jmp
and
cwde
jb
mov
lds
mov
stos
aad
gs
push
dec
inc
adc
xchg
retf
stos
mov
pop
and
fcom
mul
push
and
cdq
retf
bound
test
ret
outs
aad
mov
arpl
jne
leave
int3
(bad)
mov
outs
pusha
bound
out
je
jp
inc
not
mov
into
scas
or
ror
adc
jb
xor
xor
xor
(bad)
retf
cdq
test
or
outs
xor
into
fcmovnbe
aaa
mov
inc
fmul
inc
mov
loopne
int
das
and
(bad)
dec
adc
fdivr
jae
fwait
iret
jle
pop
inc
stos
loopne
test
push
fwait
imul
nop
mov
imul
imul
mov
sub
push
or
aaa
mov
dec
and
out
pop
and
adc
int3
or
xor
pop
mov
mov
test
dec
movs
arpl
sti
arpl
adc
in
(bad)
ss
mov
push
pop
cld
js
mov
ror
data16
xor
pop
jae
jge
ret
mov
fs
push
jp
retf
hlt
lock
cmp
call
aaa
jne
sar
adc
lea
mov
cmc
or
daa
sbb
adc
ret
out
daa
pandn
push
ds
sub
imul
fwait
sub
(bad)
pop
jp
cmp
jl
je
xchg
xor
xchg
pop
imul
add
mov
test
cli
stos
mov
mov
leave
nop
lods
aas
mov
mov
mov
and
ja
sub
(bad)
push
pop
les
movs
loope
mov
div
push
inc
cmp
or
fimul
and
cmp
fimul
fsub
sub
out
mov
xchg
xchg
sbb
rol
sub
sub
aad
add
out
jns
push
mov
(bad)
or
mov
xlat
add
xchg
cmp
aas
gs
or
sub
and
aad
push
or
sbb
int
idiv
pop
outs
mov
test
push
cmp
adc
ficom
dec
mov
pop
(bad)
lahf
pop
imul
lahf
sub
je
repz
sbb
shl
push
jecxz
stc
adc
jbe
dec
leavew
neg
jnp
cs
cmp
add
jno
add
sub
into
fistp
mov
mov
pop
jb
scas
add
push
out
dec
mov
jmp
push
xor
push
enter
test
or
cmp
sar
lea
out
xor
or
or
jnp
mov
fsubr
inc
adc
push
sub
in
adc
push
or
dec
xor
arpl
sub
cmp
mov
les
sbb
xchg
cs
sbb
xor
lss
pop
jl
nop
call
add
or
jns
into
pop
or
dec
push
(bad)
add
rcr
cmp
cmp
inc
xchg
adc
adc
sahf
lds
pop
or
dec
add
sahf
sbb
pop
sahf
cli
out
and
push
ja
das
mov
and
mov
xchg
dec
jns
repz
test
dec
push
cmp
aam
aaa
mov
mov
mov
imul
clc
or
dec
cmc
mov
les
xchg
in
add
adc
xchg
in
leave
push
ret
movs
stos
jle
and
gs
fisubr
dec
mov
or
push
fwait
scas
adc
in
out
adc
mov
ret
in
stos
sub
mov
addr16
add
xchg
push
pop
lds
mov
aam
arpl
and
push
(bad)
jno
jl
mov
sahf
retf
add
(bad)
cld
pop
sbb
cwde
inc
lock
jb
mov
movs
popa
inc
fwait
add
adc
test
xor
or
pop
mov
repnz
mov
sbb
js
repnz
push
xchg
arpl
ins
(bad)
dec
imul
xchg
jne
leave
lahf
rcr
adc
or
xchg
iret
jne
jl
mov
int3
outs
ins
call
fld
dec
cmp
rcl
cmp
mov
inc
sub
mov
mov
lahf
dec
fnstsw
xchg
sti
lea
mov
add
fisttp
and
jns
add
jnp
xchg
addr16
shl
add
sbb
ret
pop
pop
gs
loop
push
push
push
fcomp
call
cmps
mov
add
xor
(bad)
pop
popf
icebp
rcl
push
pop
mov
lahf
xchg
jo
cmc
cwde
sub
sub
pop
sbb
push
sub
mov
addr16
scas
nop
lahf
adc
jno
sub
scas
xchg
push
inc
clc
jns
jmp
dec
pop
sbb
fisttp
fisttp
in
jo
or
add
inc
icebp
xchg
rdmsr
push
jne
jnp
pop
sub
rol
xor
pop
push
mov
test
dec
repz
dec
aas
mov
arpl
pusha
(bad)
mov
lods
retf
push
mov
push
(bad)
push
arpl
rcr
xlat
sbb
push
popa
dec
mov
cmps
scas
mov
(bad)
pop
(bad)
fbstp
push
aad
sbb
mov
cmp
and
xchg
xchg
lods
sbb
xor
push
fld
and
(bad)
fcmovnb
push
scas
popa
lea
push
jmp
std
out
shl
test
adc
and
ret
mov
dec
in
pop
jne
jnp
mov
fcom
xchg
adc
add
and
in
push
push
dec
mov
adc
adc
mov
cmps
cmp
movq
rol
cmc
push
push
xchg
mov
cld
or
enter
in
xor
sbb
push
and
lods
popf
jne
xor
rcr
push
jne
mov
clc
or
(bad)
cwde
add
push
cmp
test
dec
jb
inc
sbb
inc
cmps
outs
mov
cmp
xchg
dec
jo
push
jge
and
sbb
adc
sub
xor
sub
das
push
std
ja
xor
or
xor
or
jecxz
dec
xchg
push
dec
stos
jb
stos
cmps
mov
cmps
jae
das
cmc
mov
push
lea
imul
mov
cdq
loope
clc
pop
dec
lods
and
mov
(bad)
sub
inc
outs
sbb
shl
push
fcmove
or
mov
jb
mov
ja
test
cld
cmps
and
rcl
fcmovb
mov
or
xor
mov
jmp
sbb
push
xor
jno
in
xchg
test
mov
stc
iret
adc
outs
ret
sub
div
lods
xchg
push
cdq
sbb
retf
mov
rcl
cmp
fidivr
cwde
rcr
loope
movs
jle
cmp
sbb
xchg
cmc
cmp
sub
(bad)
aas
pop
pop
cmp
adc
sahf
in
pop
not
jno
in
or
cmp
gs
dec
mov
outs
sbb
in
nop
mov
(bad)
ror
mov
scas
fsubr
sbb
pushf
dec
and
xchg
mov
dec
int3
and
jle
sbb
bound
or
sti
aaa
mov
hlt
adc
fimul
jae
std
pop
imul
jmp
jo
jge
neg
xor
call
lods
ret
repz
sar
(bad)
sbb
or
ret
jnp
loop
imul
repz
test
or
xchg
mov
xchg
sub
sahf
outs
ret
inc
fs
cmps
gs
pop
mov
add
mov
cmc
cmp
dec
addr16
xor
mov
xchg
mov
or
lods
lock
and
cmp
(bad)
add
add
retf
outs
fnstenv
das
mov
sbb
aam
lds
xor
add
add
repnz
repz
jno
daa
or
push
iret
rcl
retf
add
in
cld
inc
ret
push
sub
jb
mov
ins
mov
jp
icebp
inc
and
dec
mov
xchg
cmps
(bad)
xchg
mov
jne
movs
mov
pop
fstp
mov
in
pop
adc
adc
and
(bad)
sub
mov
mov
sbb
sub
dec
add
rol
mov
cli
and
push
xchg
out
inc
dec
mov
dec
mov
cwde
and
shr
in
push
(bad)
fmul
xor
test
jmp
hlt
dec
rcl
pop
push
arpl
mov
mov
loopne
and
jno
jp
imul
retf
jb
pop
pop
test
in
lods
jae
lock
je
loop
fnstenv
and
ja
fmul
fistp
(bad)
jmp
inc
not
pop
dec
push
xchg
push
push
retf
out
pushf
mov
add
jbe
xor
fistp
fnstsw
int
mov
(bad)
mov
and
idiv
(bad)
pop
sti
mov
aaa
inc
or
jo
scas
scas
fst
(bad)
ret
mov
pop
inc
cmp
bound
cdq
out
jo
inc
movs
sbb
jno
mov
ins
daa
mov
loope
aas
jge
fmul
xor
cwde
xchg
lods
mov
out
sbb
inc
add
or
xchg
mov
out
loopne
adc
out
add
inc
dec
mov
add
jmp
jl
(bad)
(bad)
aad
iret
xchg
add
clc
bound
add
inc
test
repz
inc
mov
dec
loop
dec
int3
xor
ds
imul
jns
push
adc
in
sar
test
pop
mov
push
mov
jmp
dec
sub
and
jbe
xor
daa
dec
mov
or
mov
and
xor
jmp
icebp
ja
jae
shl
jne
cmp
mov
loop
xchg
jmp
addr16
in
and
cmp
cmc
jmp
rcl
adc
icebp
in
sti
jl
dec
xor
pop
inc
sbb
cld
and
test
ss
mov
pusha
inc
sub
lods
add
gs
lds
mov
leave
icebp
dec
mov
cmp
pop
sti
push
jge
mov
ret
adc
adc
mov
mov
adc
in
fwait
xor
xor
adc
jno
dec
loope
sub
(bad)
fimul
loop
std
movs
icebp
not
shl
test
in
mov
push
mov
mov
inc
add
mov
jp
dec
cli
sahf
out
lea
cs
ins
or
dec
out
aaa
xchg
mov
loopne
ja
inc
jo
hlt
mov
fchs
ins
and
imul
arpl
pop
push
push
jg
in
and
add
aas
icebp
out
cmp
repnz
sub
jp
ret
jno
test
mov
push
and
xor
jbe
les
aaa
cmp
cmc
(bad)
fiadd
mov
loop
leave
lock
and
lods
jns
outs
aaa
or
std
dec
push
(bad)
fdivr
sub
mov
xor
sub
fimul
mov
std
dec
pop
out
fbstp
xlat
sbb
or
xlat
fistp
test
int
adc
mov
rcr
or
cmp
dec
xor
fdivr
das
aaa
xchg
xchg
adc
ins
cmp
adc
loop
fsub
addr16
repnz
jmp
xchg
jnp
pop
je
adc
cmp
mov
aas
pop
pop
leave
jle
push
fcmove
icebp
xchg
test
loopne
and
ja
jp
push
jae
(bad)
stc
or
sbb
jns
adc
cli
xchg
fs
in
fild
pop
jne
jl
cwde
shl
dec
push
out
pop
mov
xlat
xchg
outs
icebp
fcom
or
icebp
jmp
pusha
aam
push
jl
inc
xchg
pop
lods
aam
test
or
cli
mov
imul
repnz
popa
test
xor
cs
jne
fld
or
jmp
outs
jge
inc
and
push
pop
(bad)
js
lea
or
xor
add
dec
cmp
sbb
or
cmc
in
ror
jecxz
dec
imul
cmp
inc
enter
rep
fidivr
ds
popa
mov
(bad)
out
lock
movs
rsm
fild
ss
mov
rcl
mov
add
jge
movs
mov
ds
cld
nop
in
sbb
mov
ror
fwait
sbb
xor
stos
sub
adc
and
adc
shl
movs
ror
xchg
dec
ret
stos
(bad)
clc
mov
je
sbb
std
cmps
popa
jp
dec
pop
scas
jne
inc
mov
fucomp
mov
data16
push
(bad)
(bad)
js
mov
icebp
mov
movs
bsf
adc
(bad)
push
sub
mov
push
arpl
hlt
js
and
jns
les
test
push
dec
inc
push
arpl
loope
mov
dec
xchg
enter
sub
sub
outs
pop
stos
movs
into
pop
xchg
and
mov
lock
pop
aam
adc
xor
push
test
pop
mov
fucomi
es
(bad)
std
sbb
xchg
test
xchg
(bad)
fld
(bad)
mov
adc
dec
shl
xor
xchg
mov
in
loopne
cmp
cwde
xlat
push
enter
sbb
dec
push
jbe
wrmsr
and
inc
lahf
adc
xlat
aaa
ins
into
xchg
lea
jp
mov
push
clc
pop
add
xor
dec
shr
fwait
bound
add
aaa
mov
dec
stos
sub
jg
cmps
fnstenv
jnp
and
sub
aam
cmc
xchg
icebp
mov
sub
shl
sub
jle
add
call
jns
sti
dec
ss
rcl
(bad)
test
outs
jno
xor
dec
xchg
adc
test
scas
xchg
mov
mov
mov
cmp
sub
stos
daa
cmp
push
mov
mov
aaa
pop
or
pushf
scas
xchg
or
fld
das
and
dec
or
sbb
nop
jae
mul
popa
inc
inc
and
push
mov
(bad)
fs
mov
ret
add
cld
push
mov
or
je
lea
sbb
test
push
arpl
mov
js
sti
out
inc
mov
mov
push
mov
bound
jbe
mov
pop
movs
push
clc
cmp
fld
loope
mov
mov
fidivr
dec
and
adc
mov
sar
imul
retf
bswap
pop
sub
sub
rcl
mov
xor
inc
leave
or
xor
inc
stos
fisttp
call
pop
fdivr
es
and
icebp
iret
not
push
loope
add
mov
jge
adc
push
dec
(bad)
cli
and
pop
fbstp
push
sbb
ret
jae
retf
in
test
test
push
sub
stc
(bad)
push
pop
and
stos
sub
jl
fimul
or
pusha
fiadd
adc
jbe
ins
in
jmp
xchg
mov
and
enter
movs
out
les
mov
aaa
hlt
cdq
iret
out
mov
mov
sbb
cs
mov
(bad)
bound
call
jbe
xor
out
mov
xlat
xlat
pop
mov
xor
inc
jmp
mov
(bad)
(bad)
sub
push
(bad)
mov
mov
es
xchg
jmp
out
fidiv
dec
cmc
popf
retf
dec
adc
mov
bound
mov
call
mov
xchg
dec
and
repnz
movs
aam
jo
sub
int3
add
adc
mov
jo
ds
scas
inc
gs
jns
xor
cmp
cld
sbb
dec
stos
xor
dec
push
es
xlat
out
into
jmp
inc
push
arpl
(bad)
cmp
in
mov
lods
test
xchg
and
das
jg
add
cmp
cmp
xchg
lods
int
jmp
nop
(bad)
repz
pop
mov
sbb
adc
dec
sub
dec
daa
cmp
fimul
dec
ja
jnp
setge
loop
or
xor
and
pslld
addr16
push
fcomp
and
cmp
mov
cs
xor
ds
sbb
mov
cld
xchg
add
ja
push
add
xor
adc
(bad)
fst
adc
mov
adc
pop
pop
jnp
jno
(bad)
fisub
push
add
test
outs
scas
jnp
pop
mov
ins
rcl
push
sub
enter
jo
jnp
into
pop
dec
sub
ins
lods
push
in
test
imul
(bad)
and
mov
or
cmps
mov
fcomp
sub
movs
jg
dec
cmp
inc
loopne
scas
adc
pop
cmp
loope
test
mov
adc
add
rcl
sbb
xchg
dec
daa
pop
jo
mov
clc
xchg
imul
sar
scas
or
adc
lock
xchg
and
pushf
pop
push
ret
adc
(bad)
fwait
dec
pop
sahf
jo
sub
mov
imul
pushf
sti
pop
or
inc
nop
sbb
(bad)
repnz
sbb
pusha
xchg
pop
mov
loopne
sub
fadd
adc
jb
inc
cwde
rol
stos
(bad)
fneni(8087
imul
arpl
jmp
mov
adc
in
fistp
fsubr
aas
jnp
jb
pusha
pushf
and
test
adc
lahf
jne
or
imul
fiadd
mov
pusha
loop
dec
or
outs
repnz
sub
out
or
ficom
jmp
ds
push
dec
nop
icebp
fild
arpl
push
dec
mov
dec
ins
xor
sub
mov
pop
int
stos
jnp
sar
adc
adc
mov
inc
mov
inc
aaa
cmps
dec
in
xchg
test
jmp
cmps
pop
xlat
xchg
jb
test
xchg
jl
sbb
mov
fsub
push
inc
mov
and
js
imul
mov
test
add
sbb
frstor
mov
add
(bad)
xchg
into
xor
mov
jne
pop
aad
nop
lods
out
fcom
stos
loop
mov
rcl
lock
lock
pop
push
cli
sahf
(bad)
xor
sub
push
rcr
data16
scas
cmp
fstp
sub
mov
jmp
repz
or
fcomip
pop
sbb
inc
and
ror
adc
push
int
pushf
adc
dec
fbstp
cmps
test
mov
repz
sar
pop
stos
icebp
push
(bad)
loopne
fnsave
push
leave
mov
cmp
fcmovnu
ficom
lods
xlat
in
test
mov
and
pop
cmp
mov
rcl
test
pop
jne
stc
in
ins
inc
dec
retf
mov
xor
(bad)
sub
stos
stos
in
inc
jns
xchg
loopne
xchg
mov
pop
jno
jl
cmp
ins
in
add
mov
push
inc
pop
mov
not
not
cmp
cmp
sbb
xor
cmc
or
lahf
inc
mov
js
xor
jge
in
fadd
and
(bad)
fcomp
adc
int
in
aam
test
jb
push
div
repz
rcl
push
iret
fwait
dec
stos
or
and
mov
push
aam
xor
jno
jb
and
fstp
sub
xchg
jne
mov
std
sub
xor
add
mov
aaa
mov
xchg
add
lock
aas
xchg
mov
jb
jl
iret
push
into
cli
addr16
push
mov
and
out
cli
repnz
xchg
mov
outs
xchg
outs
retf
xchg
xchg
xchg
aad
(bad)
xchg
xchg
fistp
(bad)
mov
popa
mov
(bad)
rcr
sub
movs
sbb
leave
adc
xor
pushf
imul
out
sbb
(bad)
mov
mov
(bad)
adc
aas
outs
and
or
fcom
fld
cmps
xchg
loopne
in
ss
ret
adc
ret
dec
and
je
pop
call
aaa
movs
and
mov
repnz
inc
xchg
mov
rcl
aad
mov
push
mov
xchg
pop
test
dec
ror
sbb
sar
hlt
popa
mov
jge
adc
jbe
pop
out
cmps
inc
and
mov
xor
outs
loop
add
loope
dec
movs
push
mov
lock
jle
push
mov
sub
popa
mov
mov
in
out
adc
push
or
fs
push
push
out
std
inc
nop
fwait
mov
jmp
ss
scas
fwait
sahf
jb
shr
sub
aam
and
out
add
loopne
enter
pop
mov
cmp
test
mov
add
adc
daa
imul
ror
mov
fistp
mov
mov
pop
aad
cmp
xor
lods
aam
or
pop
pop
sbb
lods
push
call
fnstsw
push
mov
cmp
inc
mov
sub
adc
movs
mov
(bad)
loopne
mov
sbb
mov
mov
sbb
push
stos
rcl
(bad)
fist
inc
xchg
pop
fsub
or
data16
sbb
bnd
inc
push
into
cwde
rcr
inc
xor
jmp
add
pusha
shl
pop
fisttp
rcr
je
mov
lea
pop
pop
aaa
push
dec
add
mov
sub
shl
(bad)
jne
sub
mov
xchg
push
xchg
movs
retf
lock
sub
fsub
pop
outs
or
lea
mov
retf
pop
jecxz
xor
cmp
call
add
leave
mov
lea
shr
xchg
mov
mov
enter
mov
push
add
sbb
inc
icebp
fs
cmp
add
movs
loop
in
pop
xor
and
lds
(bad)
mov
lock
pop
push
add
stos
cmp
add
shl
push
mov
test
ins
mov
int
icebp
sbb
imul
mov
mov
xor
cmps
xor
pop
ins
arpl
jbe
push
imul
xchg
mov
out
xchg
nop
push
fwait
pop
addr16
lods
push
sub
ja
cmp
ins
bound
(bad)
aaa
xchg
cmp
test
or
add
mov
pop
(bad)
mov
pop
mov
jne
fcomp
sar
into
stos
lds
int
sar
jae
push
push
in
test
cmp
dec
push
or
fwait
into
fmul
out
push
push
push
(bad)
fmul
xchg
popa
jmp
movs
or
and
and
(bad)
ins
iret
ds
pop
pop
or
pop
scas
aam
xchg
dec
jnp
sub
in
mov
xchg
mov
dec
cld
inc
inc
je
(bad)
jecxz
lds
mov
mov
sbb
outs
frstor
ffreep
add
mov
cmp
push
dec
imul
push
out
push
sbb
xchg
test
sbb
ss
cmp
push
hlt
or
dec
pop
rcr
inc
and
cmc
aas
rcl
dec
syscall
jp
(bad)
popa
fdivr
scas
fnstenv
xchg
push
not
(bad)
push
(bad)
cli
cmp
adc
enter
(bad)
addr16
push
or
xor
fild
in
push
rcr
xchg
inc
xchg
retf
shl
daa
xchg
mov
out
loopne
int3
jecxz
std
mov
test
xlat
fcom
icebp
xchg
es
sub
mov
outs
xchg
mov
mov
ror
cwde
(bad)
inc
sub
ret
(bad)
add
das
xchg
pop
fdivr
push
stos
cmp
push
cdq
jecxz
ins
mov
mov
xchg
xchg
pushf
cmp
cmc
imul
je
pusha
and
xchg
adc
jp
xor
push
bound
mov
out
mov
imul
call
inc
push
icebp
mov
out
sbb
cmp
es
pop
mov
mov
fwait
mov
push
(bad)
pop
iret
leave
and
pop
or
lock
retf
add
das
add
idiv
(bad)
adc
adc
rcr
and
add
mov
aaa
lods
mov
fcmovnu
and
pop
or
pusha
sbb
push
test
push
jl
stc
mov
adc
push
dec
push
in
iret
jbe
ror
jecxz
adc
pop
shr
sub
push
push
shr
repz
jp
out
and
lea
aas
dec
jae
test
inc
jge
in
sbb
test
sbb
stos
ja
ins
inc
xchg
stos
mov
popf
pop
sbb
jbe
mov
jbe
lock
repnz
push
stos
add
dec
add
inc
stc
arpl
jmp
inc
dec
adc
(bad)
mov
fldenv
and
sahf
push
mov
dec
sbb
mov
adc
outs
int3
sti
test
adc
pop
hlt
sahf
xor
clc
xchg
mov
jle
sar
jno
add
mov
cli
mov
fsubr
stos
dec
sbb
dec
mov
cld
adc
sbb
popa
pop
jmp
gs
push
ja
icebp
or
sbb
inc
(bad)
in
out
ins
dec
imul
arpl
lods
mov
mov
mov
mov
test
mov
jmp
pop
mov
popf
and
(bad)
jmp
add
ret
xor
xchg
pop
sbb
or
push
sbb
ret
sub
(bad)
xor
and
retf
push
lock
adc
mov
test
xchg
ins
ss
cmp
dec
lods
lds
cdq
int
or
pop
pop
mov
or
xor
sahf
xor
add
push
(bad)
movs
popf
out
bound
test
jmp
jnp
aad
fisttp
pop
aas
shl
xchg
adc
adc
fild
sbb
inc
xchg
xor
push
mov
cmps
ret
and
test
or
and
or
(bad)
popa
push
stos
push
jmp
sbb
pusha
mov
push
jmp
inc
jle
retf
cwde
movs
movs
sub
out
dec
bound
hlt
xchg
pop
test
cdq
bnd
adc
fucomip
addr16
out
push
xor
xor
pop
jo
add
rcl
add
clc
xchg
cmp
mov
test
loopne
pusha
cmp
mov
imul
pop
mov
out
dec
inc
and
enter
bound
das
adc
xchg
pushf
sub
mov
push
pop
cli
sbb
ins
xchg
cli
mov
mov
addr16
imul
popf
sbb
call
cmp
dec
in
and
or
popf
fild
mov
sub
push
and
mov
push
xor
add
cmp
and
js
ja
cmp
sub
mov
data16
ret
(bad)
sub
jge
sub
inc
inc
icebp
popa
ds
aaa
in
stos
jbe
xchg
jno
imul
aas
mov
scas
sub
pop
push
popa
mov
nop
ret
inc
addr16
push
sub
(bad)
pop
xor
aam
mov
lea
mov
pushf
in
mov
cmps
sub
pop
aas
popaw
xchg
lea
jmp
in
lods
mov
mov
mov
stc
int3
dec
pop
push
mov
inc
inc
xor
inc
dec
push
dec
sub
retf
mov
cld
ds
xlat
scas
loopne
(bad)
int
pop
mov
pop
xor
push
or
pushf
xchg
cmp
cmc
sbb
das
pop
and
sub
cmp
fwait
jns
(bad)
ja
ds
adc
mov
xchg
inc
add
sub
(bad)
(bad)
hlt
adc
jmp
retf
push
repnz
in
cs
push
imul
out
and
push
icebp
ror
std
jns
mov
shl
jbe
call
fstp
xor
out
xor
ja
dec
ror
mov
jg
movs
xchg
push
push
adc
push
mov
dec
stos
(bad)
popa
add
add
aad
adc
jne
in
(bad)
pop
sbb
cmp
rcl
or
loopne
mov
lods
fst
jecxz
test
in
in
fld
jb
(bad)
pmullw
dec
dec
dec
push
inc
adc
xchg
cli
ds
xor
mov
nop
push
and
push
fldl2t
and
sbb
mov
out
add
mov
push
fisub
jecxz
xchg
hlt
into
inc
ins
(bad)
dec
dec
les
pop
test
sbb
inc
gs
pusha
jl
add
push
jmp
(bad)
hlt
and
loope
sub
mov
mov
sub
pop
mov
int
call
and
lods
and
and
ins
stc
stos
jno
fs
cmp
lods
out
jno
fld
lods
xor
jnp
mov
in
(bad)
daa
jg
cmps
std
jl
push
mov
in
ret
out
mov
ds
(bad)
ds
inc
aad
inc
push
ss
push
jp
retf
mov
pop
pusha
leave
add
sahf
dec
and
std
cmp
rcr
dec
das
ret
ins
xor
fcmovnb
add
stc
enter
xchg
(bad)
xor
ins
sar
aam
ror
cs
push
mov
xchg
jno
jae
pop
addr16
push
loop
stc
test
mov
xchg
dec
xchg
pop
inc
fiadd
sub
push
fneni(8087
pop
(bad)
jne
mov
sar
dec
mov
into
pop
fcom
pop
stos
pop
jns
sbb
out
call
das
push
push
push
add
jl
test
cmp
out
inc
nop
or
add
test
dec
push
and
cmps
sbb
push
aas
dec
movs
inc
sub
cli
scas
push
pop
cmps
das
mov
push
icebp
xchg
ret
mov
adc
mov
pop
call
mov
fld
aad
imul
ret
and
lea
xchg
pop
aas
retf
xor
sbb
(bad)
mov
stos
cli
arpl
test
add
inc
add
and
sbb
lds
popa
cmps
add
lock
sbb
pop
adc
ins
sub
cmp
imul
test
mov
jg
push
out
and
or
jmp
push
enter
jo
(bad)
sbb
dec
mov
repz
jnp
mov
enter
or
nop
cmp
mov
mov
aam
pop
add
sbb
push
cld
sub
loope
cmp
ficomp
push
mov
jb
cmp
mov
inc
gs
mov
sub
shl
mov
xchg
push
loope
jle
mov
push
ins
das
xchg
pop
add
imul
imul
mov
bound
movs
dec
cdq
hlt
jmp
mov
pop
in
or
mov
xor
xlat
stos
xor
movs
inc
mov
les
dec
mov
mov
jle
gs
or
push
inc
push
pop
shr
cs
sub
cmc
fwait
loopne
in
mov
xor
shl
xchg
cmp
push
mov
push
enter
mov
enter
fnstsw
arpl
fsubr
stos
jb
jmp
mov
cmps
addr16
mov
sar
mov
adc
or
adc
ins
nop
ret
sub
and
out
push
mov
sbb
movs
outs
sub
sbb
cmps
cmc
bound
xor
rcl
shl
lea
cmp
not
mov
ret
xchg
aad
mov
adc
pusha
out
jmp
add
aam
xchg
cs
dec
dec
sbb
adc
out
xchg
in
aam
aam
mov
pop
enter
jne
cmps
jns
xchg
or
jmp
inc
and
jl
xor
fisubr
jmp
inc
cmp
outs
xor
imul
jmp
mov
push
mov
hlt
jecxz
push
call
push
mov
ret
and
fstp
and
push
fstp
clc
fs
mov
call
inc
cs
and
arpl
xchg
fld
and
into
stos
aam
stos
in
stos
mov
mov
test
sbb
repz
hlt
rcr
push
pop
dec
inc
cmp
call
ins
cmp
cld
or
mov
jge
and
jo
add
pop
adc
jmp
push
adc
retf
ret
das
es
lods
mov
sub
xchg
inc
shl
xchg
xor
sbb
push
mov
cmp
sub
push
or
xor
mov
ficom
mov
push
loopne
push
data16
cwde
pop
scas
mov
data16
push
loope
ret
add
iret
push
lods
xor
sbb
test
in
jnp
push
daa
and
dec
ins
mov
ficomp
nop
xchg
pop
adc
and
cwde
push
or
mov
pop
das
xor
(bad)
sub
or
mov
fdecstp
xchg
inc
mov
xchg
lods
enter
dec
fwait
inc
test
iret
push
adc
mov
loop
mov
add
pop
iret
stc
cmp
sub
cmp
mov
jl
mov
xchg
arpl
jne
push
or
push
xchg
xor
rcl
add
mov
mov
ds
movs
xchg
outs
clc
inc
push
repz
int3
cmp
call
cdq
fmul
adc
cmp
test
jl
jb
pop
test
ja
jmp
mov
and
loop
mov
inc
ror
jae
pop
fs
ficomp
nop
adc
ret
sub
jg
fisttp
rcr
int
pop
imul
adc
loop
aas
inc
cwde
push
mov
ss
xlat
push
adc
sahf
dec
dec
fsubr
cmp
mov
xchg
xchg
lahf
mov
mov
lods
xor
aam
pop
stos
dec
ins
lods
leave
add
and
cmp
jno
push
jno
cli
imul
cmps
inc
and
sar
pop
dec
pop
jnp
push
in
sbb
repz
out
(bad)
bound
mov
mov
cmp
cld
call
mov
pop
repz
ror
js
jnp
out
xor
fcomip
inc
adc
fwait
popf
xchg
mov
clc
mov
fadd
mov
push
arpl
out
inc
or
retf
xor
lods
push
arpl
call
mov
add
outs
ja
push
or
fdivr
(bad)
repz
xlat
imul
mov
(bad)
clc
das
xor
movs
cmp
push
and
and
xchg
outs
cwde
pop
rcr
loopne
mov
mov
ret
push
(bad)
push
xor
jmp
add
xchg
pop
(bad)
xchg
jl
xchg
jb
ss
jnp
hlt
adc
ins
mov
add
push
add
cmp
lods
out
add
jp
in
mov
test
mov
sar
or
mov
or
xchg
cmp
les
out
sub
or
jns
xchg
jb
or
xor
jle
mov
jp
clc
sub
lea
outs
stos
fmul
dec
xchg
xor
add
in
lods
cwde
(bad)
push
data16
retf
pop
(bad)
dec
outs
cmc
adc
mov
cmp
add
cmp
xor
sub
mov
inc
daa
loopne
mov
mov
add
sub
ret
push
fimul
in
popa
dec
aas
add
mov
bound
dec
(bad)
push
pop
mov
cmp
dec
es
add
into
add
ror
test
mov
pusha
pop
(bad)
xlat
sub
and
xor
sub
popf
fst
test
sub
es
xor
and
push
bound
sub
test
jecxz
psubusb
dec
cmp
mov
out
ds
dec
xchg
xor
lods
ret
sbb
inc
xchg
in
dec
ds
fisubr
fcom
mov
cmp
frstor
call
leave
sub
jno
mov
mov
add
cmp
push
mov
or
xchg
inc
cmp
pop
mov
and
aam
jbe
sahf
jecxz
mov
in
push
add
pop
or
mov
neg
mov
or
retf
neg
shl
aas
repz
jnp
add
cmp
aas
xor
cmp
and
mov
add
mov
ins
mov
add
xor
xchg
test
movs
shl
in
or
cwde
dec
popa
in
xor
mov
(bad)
ins
clc
int
retf
sahf
ret
jp
aam
ror
xor
push
fbstp
mov
lds
outs
or
cmp
out
mov
fmul
mov
and
test
jne
and
mov
outs
and
pop
out
cmp
sbb
pop
fdiv
jne
inc
movs
daa
fidivr
bound
mov
xlat
aaa
jb
sub
scas
or
retf
repnz
cmp
and
(bad)
mov
test
jp
clc
and
mov
mov
stc
jnp
pop
or
ret
sbb
ret
fimul
scas
(bad)
scas
jl
fcomp
inc
(bad)
adc
pop
mov
jmp
ror
cwde
or
addr16
push
lods
rcl
jne
jle
or
mov
push
mov
jg
pop
enter
clc
dec
xor
mov
js
lds
sahf
shl
(bad)
jge
call
dec
and
xchg
inc
xchg
jmp
rcl
leave
sub
jecxz
sub
ds
sahf
xchg
movs
sbb
shl
dec
push
jne
outs
xchg
dec
stos
mov
inc
mov
xor
jne
lock
pop
xchg
cli
push
cmp
jmp
sub
and
repz
mov
data16
mov
jmp
retf
mov
je
or
pop
mov
pop
and
scas
jecxz
mov
pop
jmp
neg
ficom
hlt
jl
push
jp
xor
jbe
aam
adc
lods
mov
xor
jecxz
inc
sbb
xchg
mov
es
jp
jns
pop
shr
inc
out
jecxz
add
xor
lods
icebp
sahf
add
xchg
ins
add
mov
push
jbe
cmp
mov
dec
movs
xchg
(bad)
jmp
mov
and
neg
mov
dec
xor
in
mov
cs
xchg
(bad)
sbb
cli
mov
dec
dec
pop
into
nop
cli
ficom
xchg
mov
retf
inc
add
jb
aas
push
out
(bad)
leave
or
jae
xchg
fidivr
je
mov
pop
es
jno
xor
jl
es
push
out
xor
or
mov
jp
cwde
sbb
xchg
cli
add
and
call
push
xchg
cmp
test
shl
inc
sub
add
inc
inc
jb
push
add
push
cmp
bound
loop
pop
jno
jno
out
adc
jae
dec
in
sub
dec
mov
out
loop
fld
mov
xchg
mov
sti
and
lock
pop
push
inc
lock
stos
jae
int3
jp
into
push
outs
mov
test
pusha
not
stos
pop
rcl
add
inc
dec
hlt
sbb
push
adc
dec
in
loopne
inc
ins
les
add
mov
xor
mov
addps
push
inc
cdq
les
test
icebp
xchg
ss
addr16
cli
rcr
out
sbb
dec
test
xor
xor
or
fldenv
(bad)
in
push
mov
sti
movs
xchg
cli
lods
mov
cmp
sbb
inc
pop
je
push
fbld
xchg
xor
jmp
mov
push
and
sti
pop
mov
push
enter
inc
aas
dec
xor
xchg
shr
gs
mov
sahf
leave
add
add
jecxz
sub
(bad)
in
sbb
push
xchg
xchg
sti
movs
int
xchg
arpl
out
inc
xchg
pushf
out
push
in
mov
sub
sbb
sub
xor
or
(bad)
inc
and
dec
loopne
xchg
and
and
xchg
retf
lea
adc
pop
dec
int3
gs
pop
jns
mov
or
push
xor
push
test
mov
sahf
add
xchg
(bad)
jns
mov
mov
out
repnz
das
das
push
inc
dec
and
sub
mov
mov
push
adc
jnp
add
jle
test
sbb
mov
stos
repnz
and
cdq
mov
jl
adc
dec
retf
js
sbb
movs
sbb
or
xchg
fsubr
mov
add
or
repnz
jno
and
cmp
aas
jbe
jno
push
movs
movs
out
cld
ins
clc
popf
mov
jne
(bad)
adc
je
cmp
or
pop
or
push
xchg
(bad)
pusha
sbb
cs
repz
ficom
mov
xor
jae
dec
call
cmc
icebp
mov
fisubr
ds
shl
ret
and
sub
mov
in
popa
aad
lods
mov
and
xlat
ja
xor
sub
test
mov
inc
mov
fsubr
or
sbb
sbb
jo
adc
imul
pop
and
add
cwde
pop
jo
mov
xor
arpl
cmp
lods
mov
daa
fisubr
rcr
xor
je
fld
lds
sub
jge
sar
shr
xor
in
aad
test
and
push
(bad)
imul
imul
lea
sub
and
rcr
push
push
out
adc
jg
std
(bad)
ds
mov
ins
jmp
sub
jb
jbe
lods
inc
ja
xchg
pop
sbb
cld
adc
push
pop
cmp
sbb
cmp
sbb
pop
xchg
sbb
dec
popa
fsubp
jo
inc
stc
setbe
jns
rcl
or
sbb
xor
es
(bad)
push
imul
test
stos
add
xchg
test
in
xchg
ja
lock
pop
inc
xchg
out
or
lahf
pmulhw
sub
dec
mov
sub
pop
cmp
inc
fcomp
call
adc
xor
xchg
mov
sub
inc
out
inc
stos
inc
jg
bound
retf
les
stos
jo
imul
(bad)
ficomp
jmp
adc
and
jg
inc
(bad)
retf
daa
or
or
pusha
test
arpl
cmp
mov
push
jo
repnz
mov
out
or
pop
and
call
repnz
(bad)
loope
mov
popf
movs
jmp
add
sub
xchg
clc
and
scas
rcl
xor
dec
or
pop
fdecstp
inc
test
mov
sbb
shl
cdq
daa
and
imul
inc
or
dec
xor
adc
int3
test
xchg
or
popa
adc
cmp
push
pop
clc
add
shl
aas
call
shl
enter
xchg
gs
xchg
loopne
or
test
xchg
mov
ror
addr16
or
adc
jbe
fwait
jbe
adc
mov
(bad)
adc
jmp
push
jo
cmp
ins
pop
leave
ss
hlt
push
retf
bound
daa
or
and
push
pusha
inc
inc
sbb
hlt
loope
aaa
rcr
repnz
sbb
fsqrt
shl
inc
inc
aam
call
pop
idiv
push
jns
(bad)
push
dec
push
push
cdq
pop
out
fst
xchg
mov
push
jnp
mov
es
sub
sar
mov
daa
mov
jns
sbb
mov
into
sub
daa
adc
add
jne
je
inc
cmp
or
(bad)
outs
addr16
mov
fmul
xchg
jno
xchg
ins
pop
push
inc
jecxz
lds
dec
inc
sbb
pop
cmp
add
add
pop
jmp
and
and
fwait
stos
imul
loop
shl
xchg
fcom
cmc
jmp
mov
into
cmc
arpl
ret
sub
les
pop
mov
lods
popf
inc
(bad)
js
pop
popf
dec
ficom
cmps
popa
and
hlt
xor
mov
lock
cmp
or
push
and
push
or
and
and
and
mul
sahf
xor
js
and
add
int3
adc
xchg
pop
push
jmp
push
push
movs
iret
mov
xor
mov
popa
cmps
rcr
mov
cdq
mov
mov
push
lds
adc
dec
jmp
hlt
xchg
push
xor
xchg
jb
repz
hlt
pop
setb
popa
cmp
xor
popf
cmps
fwait
mov
scas
xchg
mov
push
in
add
sti
retf
xchg
push
mov
in
fs
cmp
sbb
cmc
or
jb
popa
mov
retf
cmp
js
push
arpl
sbb
xchg
push
in
or
pop
ja
shr
cmp
out
mov
into
sbb
rcl
test
neg
push
into
test
pop
iret
push
jns
sahf
sar
mov
es
movs
mov
aad
dec
cli
and
(bad)
push
inc
int3
lea
mov
(bad)
ss
fmulp
push
sbb
aas
rcr
mov
push
scas
jg
and
or
aad
bound
daa
lock
ret
add
add
or
mov
sbb
push
mov
sbb
xor
xchg
jno
mov
xlat
test
pop
mov
or
call
jno
mov
add
ja
int3
in
inc
dec
cmp
jmp
mov
push
in
sub
mov
repnz
pop
sub
hlt
das
cmp
jle
lods
mov
cmp
call
(bad)
pop
jl
lahf
adc
and
jbe
dec
mov
fmul
inc
fmul
xchg
test
aas
mov
das
inc
retf
dec
and
imul
sbb
or
fmul
mov
scas
enter
hlt
cmp
cld
mov
in
fild
imul
and
add
mov
cwde
add
loopne
jae
aas
jp
lea
cld
(bad)
xor
jmp
jno
cmp
and
rcr
fisub
popf
lahf
punpcklbw
jb
and
inc
push
jne
out
gs
sub
add
enter
xlat
sub
int3
sbb
push
scas
push
out
xchg
fmul
push
inc
out
imul
gs
in
pop
pop
mov
sub
or
jl
mov
push
fidivr
mov
mov
in
ins
adc
jb
aaa
adc
dec
gs
inc
sbb
jns
sub
jnp
jo
jg
sbb
and
and
sub
dec
xor
sub
xchg
enter
call
shl
pop
inc
loope
das
icebp
mov
inc
fld
push
inc
inc
jne
xor
cmc
inc
ja
popf
call
fsub
jecxz
mov
setnp
enter
xchg
movs
add
outs
shr
fsub
xchg
test
dec
clc
adc
cmp
push
push
(bad)
int
sbb
xchg
shl
cwde
xchg
test
mov
bound
xchg
push
inc
pop
arpl
mov
rcl
popf
inc
push
imul
aaa
aas
mov
cmp
(bad)
jecxz
mov
xchg
sub
inc
jmp
push
movaps
lods
in
cmp
add
push
fnstsw
jp
bound
(bad)
sub
and
cld
mul
mov
aaa
outs
xchg
or
jmp
sub
bound
clc
ficomp
push
clc
dec
pop
lds
in
cmp
fwait
movs
mov
imul
ins
cmp
cmp
sbb
(bad)
xor
sahf
out
pop
mov
sbb
mov
cld
cmp
nop
cmc
enter
fisttp
aad
ins
(bad)
xchg
cmp
call
je
out
dec
je
sti
add
sahf
inc
sub
(bad)
and
pop
fld
out
mov
js
dec
fld
scas
ret
adc
lock
(bad)
xchg
pusha
retf
dec
jle
pop
test
pushf
cdq
stos
leave
dec
jo
or
dec
xchg
popf
or
dec
and
cmps
dec
jge
and
sub
push
cdq
sub
dec
xlat
sbb
sub
adc
inc
stos
push
sar
neg
fcmovbe
fistp
xchg
adc
(bad)
in
sti
gs
jecxz
and
pop
xchg
ds
dec
push
sub
aas
mov
mov
pop
out
or
lods
clc
ins
mov
ins
mov
aam
aaa
jbe
jne
movs
add
clc
dec
scas
mov
dec
jle
cdq
cmp
bound
ins
lods
jl
and
std
inc
es
mov
inc
fwait
cmp
mov
js
shr
pusha
mov
add
loop
stos
xchg
lock
test
mov
add
sbb
and
xlat
pushf
xchg
jb
shl
xor
in
add
cmp
cdq
adc
arpl
mov
pop
aam
stc
fsubrp
pop
or
mov
mov
sar
jo
hlt
dec
jno
mov
mov
cli
rcl
in
pop
push
mov
or
mov
and
mov
sar
mov
mov
or
je
fdiv
cmp
jle
ins
adc
sub
pop
add
add
dec
inc
ins
push
mov
cli
lods
push
cmps
shr
sub
jno
mov
mov
imul
adc
cld
test
in
or
mov
scas
push
mov
cmc
movs
pop
ins
rcr
dec
add
ins
out
fsub
jmp
pop
in
inc
scas
mov
xchg
pop
fcmovu
dec
in
jns
and
mov
ja
mov
xchg
mov
sahf
dec
jmp
dec
mov
frstor
push
fwait
cmp
mov
xchg
cmp
jp
cmp
test
mov
pop
jnp
jmp
pushf
cmps
repz
and
je
mov
jbe
adc
test
ss
pop
xor
push
mov
arpl
cmp
imul
out
stos
inc
popa
push
adc
cmps
cmp
xor
sbb
mov
sub
retf
hlt
push
adc
jb
cld
and
and
mov
dec
ret
dec
sahf
jnp
jne
jnp
emms
popf
std
stos
push
inc
mov
and
loope
sub
or
out
add
xchg
mov
and
pop
adc
test
pop
cmp
jno
call
dec
in
imul
fcomi
out
repnz
xor
mov
inc
sub
xchg
(bad)
(bad)
std
dec
sbb
push
dec
jne
adc
or
mov
mov
add
jno
repz
cmp
add
int3
outs
and
dec
rol
sub
adc
pop
pop
mov
dec
mov
fcomp
pop
scas
push
neg
sar
and
imul
(bad)
rcr
sbb
shl
loopne
mov
dec
shr
mov
shl
inc
loop
xor
adc
shl
jnp
ret
mov
jp
and
xchg
xchg
fnstenv
fld
pminub
add
in
mov
pop
mov
and
jns
ffree
ins
int3
outs
lea
inc
sti
cmps
shl
xchg
std
mov
arpl
jle
or
jg
rol
cmps
enter
out
jl
add
int
sbb
jl
inc
mov
pop
adc
jmp
jb
call
mov
out
int
jl
loop
xchg
and
xor
arpl
mov
mov
shl
sahf
nop
push
jle
mov
sar
cmps
stos
xor
imul
sub
das
mov
call
retf
jnp
dec
sbb
je
es
mov
shl
cmp
xor
out
loopne
loopne
push
push
mov
push
jne
sysret
sub
gs
cli
jo
inc
pop
clc
js
cmp
shr
xchg
je
(bad)
sbb
stc
push
jl
sub
mov
jae
pop
imul
pop
mov
ins
in
mov
in
sbb
push
fimul
fdivr
adc
or
add
cmp
shl
ficomp
(bad)
adc
call
loop
xor
jge
(bad)
sub
xlat
call
test
dec
imul
xor
std
pop
dec
add
push
test
or
gs
(bad)
mov
lds
xchg
int
adc
sub
sub
enter
cld
cmp
lds
xchg
int
jns
pop
out
jbe
ds
jno
lock
gs
(bad)
sbb
fidiv
(bad)
mov
pminub
test
push
ss
ss
cs
mov
pop
pop
add
aam
xchg
xchg
push
dec
push
fbld
sbb
ds
dec
ins
aad
sub
call
jle
daa
jns
sbb
mov
cmp
into
adc
cmp
push
xchg
bound
movs
jge
inc
jmp
outs
push
imul
push
fwait
inc
stc
clc
fdiv
sub
imul
and
cld
sar
adc
outs
out
test
call
jge
add
mov
xor
or
inc
cmp
test
inc
repnz
sbb
or
loope
popf
xchg
add
repnz
dec
rol
xchg
sahf
jecxz
mov
inc
mov
pop
or
call
mov
adc
or
mov
fwait
jg
add
jmp
cmp
add
movs
and
dec
rcl
dec
inc
push
lods
outs
clc
pusha
and
dec
sbb
rcl
cmp
xor
mov
ss
dec
dec
repz
cmc
rol
fbld
mov
out
out
cmps
outs
add
es
jp
int3
jle
and
mov
xchg
mov
out
(bad)
icebp
addr16
mov
xor
pop
into
fsubr
jecxz
dec
les
imul
and
int3
push
call
ins
(bad)
push
cld
jp
lods
push
mov
loop
push
push
clc
dec
mov
out
rol
ss
je
fild
rcr
dec
cs
adc
aad
call
mov
(bad)
xchg
push
aas
lds
ficom
loopne
or
xor
mov
cld
stos
cmp
pushf
and
(bad)
je
loop
and
popf
retf
arpl
jmp
xchg
cmp
fcmovb
or
adc
pop
aas
cli
push
jae
push
mov
into
(bad)
inc
pop
and
jmp
cmps
and
lods
dec
in
or
push
dec
fisttp
cmp
xchg
push
pop
xor
or
(bad)
call
fadd
sti
xchg
ss
gs
inc
mov
mov
push
push
xchg
mov
test
stos
jbe
inc
pop
dec
push
iret
cmp
dec
icebp
mov
mov
adc
adc
dec
pushf
movs
push
nop
or
fadd
outs
push
test
add
push
pop
cs
adc
jb
popa
dec
pushf
cld
adc
cmp
xlat
push
shl
pop
hlt
push
dec
ja
xor
dec
(bad)
pop
stos
xchg
dec
pushf
out
adc
jg
dec
ds
pop
and
pushf
shl
mov
mov
and
push
add
mul
jmp
bound
mov
stc
repz
pop
mov
jbe
repnz
cwde
mov
pushf
and
xchg
lahf
imul
push
(bad)
stc
inc
jns
pop
in
in
sub
(bad)
sahf
loope
pushf
xchg
(bad)
in
push
fcomip
jge
imul
aas
adc
cmps
outs
int
mov
leave
test
aaa
sub
into
mul
imul
jp
pop
push
adc
aaa
addr16
xchg
jmp
mov
add
out
and
sub
push
xlat
loope
in
sbb
repz
ss
shr
mov
ins
jg
and
pop
das
sub
pop
dec
addr16
mov
or
cmps
jmp
push
loopne
cmps
sbb
es
aas
stos
push
out
int3
stc
push
dec
and
jle
jp
movs
lods
js
inc
sahf
stc
fild
xor
test
imul
sbb
xchg
jmp
ins
mov
enter
or
xor
test
xor
pop
xchg
test
imul
(bad)
js
imul
loop
repnz
mov
mov
cmp
aaa
add
test
mov
popf
cmp
stc
fidiv
cdq
pop
(bad)
sub
popf
pop
push
(bad)
out
sbb
cld
sub
mov
pop
mov
fistp
lahf
pop
(bad)
aam
adc
frstor
xchg
fwait
dec
and
call
rol
or
leave
shl
mov
inc
(bad)
mov
pop
sub
mov
mov
in
xor
jp
push
xlat
rcl
repnz
pop
push
setge
mov
sub
stos
adc
fist
adc
xchg
sbb
push
mov
ins
ror
inc
xchg
cmps
(bad)
scas
push
mov
sub
add
ror
(bad)
push
mov
mov
popa
jae
hlt
add
mov
mov
aas
mov
dec
js
into
mov
push
aam
hlt
retf
enter
sbb
sbb
xchg
add
sub
lds
sbb
cld
aam
(bad)
into
cwde
retf
push
ja
fisttp
(bad)
fcomip
popf
xchg
call
les
sbb
xor
movs
fisttp
cmp
inc
rcr
clc
in
repz
pop
and
lods
movs
jecxz
lahf
pop
jge
pop
add
dec
or
mov
fldenv
and
jge
(bad)
and
das
fsubr
cmp
xor
les
pop
mov
hlt
pop
(bad)
and
mov
sbb
adc
add
jmp
sbb
ja
fimul
xor
daa
mov
mov
mov
xchg
or
cdq
xchg
ss
sahf
pop
sub
pop
sbb
enter
fistp
mov
je
movs
dec
push
sub
std
test
and
(bad)
in
je
test
sbb
enter
cmp
mov
jle
jle
cmps
dec
cmp
in
pop
addr16
cli
adc
cmc
pop
push
mov
cmc
sahf
push
and
dec
cdq
cmp
lahf
dec
lods
mov
div
in
bound
dec
push
jmp
pop
cmp
les
fmul
push
sbb
pop
call
(bad)
(bad)
lahf
fnstcw
and
push
xlat
inc
out
scas
inc
icebp
sub
imul
retf
jbe
cld
out
test
mov
sbb
or
dec
jle
push
out
jb
inc
shl
cmp
neg
push
aas
jmp
sbb
or
(bad)
in
sbb
xor
dec
xchg
(bad)
cmp
out
cmc
fsubp
add
sbb
(bad)
mov
(bad)
mov
adc
imul
pop
loop
mov
loope
jbe
ret
repz
gs
popa
in
dec
cmp
inc
in
cmp
sbb
cs
sbb
nop
cmp
movs
mov
ret
repz
pop
in
mov
adc
lods
inc
int
es
in
add
dec
or
fs
add
retf
dec
popa
inc
jecxz
in
sub
stos
outs
dec
cmp
and
nop
jg
mov
cmp
inc
retf
sar
fist
sbb
jbe
jge
mov
add
dec
ins
loopne
int3
aas
ja
mov
in
cwde
addr16
outs
repnz
fwait
dec
fmulp
das
neg
push
inc
out
pop
dec
jmp
mov
add
(bad)
mov
in
sbb
mov
mov
stos
in
test
(bad)
leave
lahf
hlt
in
fwait
cmc
adc
mov
bound
xor
je
inc
xor
fwait
mov
ins
mov
mov
std
call
pop
cmps
imul
and
inc
xchg
and
jmp
retf
dec
pop
inc
xor
or
int3
jne
scas
jl
inc
repnz
and
jmp
or
(bad)
cdq
jle
add
pop
int3
xchg
cwde
fs
jl
dec
ins
iret
push
movs
mov
push
inc
and
sbb
shl
cmps
mov
arpl
xor
ja
pushf
dec
enter
fidivr
push
das
jecxz
in
cmp
push
jno
xor
sub
imul
mov
retf
cmp
push
unpckhps
and
fdiv
or
adc
mov
push
nop
ins
std
pop
fsub
jno
movs
leave
adc
ret
gs
pop
jo
iretw
or
mov
xchg
pop
xor
inc
and
pushf
mov
dec
xchg
push
sbb
cmp
mov
jmp
aas
repnz
(bad)
jnp
jle
push
mov
pusha
ins
aam
loope
mov
push
iret
sub
sbb
cmps
jns
outs
(bad)
(bad)
cld
addr16
retf
lock
test
mov
pushf
in
xchg
jl
cwde
sub
ss
mov
mov
aad
std
xor
fdiv
(bad)
mov
cmp
inc
imul
mov
push
sar
shl
pop
sub
scas
pmuludq
mov
mov
sbb
sbb
jl
fmul
in
(bad)
xchg
inc
pop
movs
arpl
xor
stos
in
cs
push
inc
je
leave
dec
ins
or
cmps
or
sub
daa
xor
fadd
out
dec
fnstcw
sub
jb
call
xchg
cs
out
push
sub
imul
dec
xor
pop
cmps
repz
adc
pop
in
jge
inc
jge
sub
jl
mov
add
mov
add
add
jb
mov
xchg
dec
out
mov
daa
lock
jp
mov
loop
lds
push
inc
cs
or
cmp
cmp
sbb
lahf
or
and
mov
jae
xchg
(bad)
mov
pop
jns
mov
push
xor
xor
jo
sbb
or
mov
loope
add
dec
lods
ror
addr16
push
lock
ds
lea
loope
xchg
pop
imul
mov
mov
and
(bad)
(bad)
out
lahf
sbb
fdivr
cwde
mov
idiv
push
test
pushf
cmps
dec
loop
inc
popa
mov
pop
mov
sub
lea
adc
retf
or
es
sub
je
inc
xchg
pop
add
dec
adc
fs
int
jl
out
mov
pop
mov
adc
adc
dec
sbb
fdiv
lahf
sub
pushf
mov
std
test
loope
sbb
je
lds
imul
adc
xchg
test
lods
(bad)
sbb
xor
int3
mov
nop
lock
and
inc
icebp
jmp
mov
pop
mov
imul
mov
mov
cmps
push
out
out
mov
mov
loopne
sbb
test
pop
ss
push
lds
push
stos
(bad)
call
enter
mov
iret
ficom
push
sti
sub
cdq
cmp
shl
out
test
and
adc
mov
call
jge
stos
push
cmp
inc
out
push
pop
das
xor
jp
or
adc
fnsave
and
clc
adc
push
sub
repnz
or
xor
lea
nop
or
xor
call
daa
and
scas
push
jae
out
jno
dec
dec
mov
dec
ins
dec
mov
add
pop
fucomip
xchg
dec
pop
xor
cmp
mov
(bad)
repz
sbb
push
out
mov
fisttp
bound
pop
int3
inc
cmp
pop
into
jae
imul
int3
push
movs
add
add
xor
fidivr
(bad)
fcomp
and
cmp
repz
lahf
les
xchg
dec
xchg
push
jbe
sub
pop
inc
fbld
adc
mov
jbe
sub
aam
(bad)
scas
popa
mov
sbb
xlat
mov
jge
leave
push
mov
cmp
rcr
shl
loope
scas
pop
sbb
jb
adc
jbe
(bad)
sbb
lods
jb
cli
leave
push
mov
xchg
lds
sbb
inc
out
dec
or
or
cmp
(bad)
or
push
mov
sub
in
push
xchg
dec
cmp
push
fs
pop
adc
pop
stos
sub
push
sub
inc
mov
out
inc
leave
inc
sub
pusha
cmps
in
pop
mov
mov
call
leave
pop
leave
jmp
test
call
xor
and
ds
adc
push
push
or
mov
rcl
mov
xchg
push
pop
dec
cmp
inc
aas
pushf
ins
test
lock
mov
int
je
xchg
cmp
sub
(bad)
daa
push
xchg
mov
fldl2t
test
cmp
push
cmp
out
cmp
jmp
pop
mov
inc
inc
(bad)
call
xor
xor
sbb
mov
ins
ss
call
sbb
xor
cli
push
add
scas
sbb
loop
mov
int3
aas
xor
out
arpl
cmps
or
data16
adc
jnp
test
xor
sbb
xlat
mov
ret
lea
neg
fild
sti
inc
sub
gs
outs
scas
cmps
inc
cmp
push
movs
call
movs
les
pop
push
cmp
add
or
lods
adc
imul
add
push
ins
lea
jge
(bad)
xchg
dec
mov
ret
jmp
mov
je
cmp
and
pushf
movs
jecxz
cmp
xchg
(bad)
push
in
ja
test
mov
popf
inc
int3
push
dec
(bad)
ins
jmp
lods
push
call
pop
cmc
icebp
retf
and
adc
mov
(bad)
cmp
ja
ret
sbb
test
xor
ss
mov
mov
mov
mov
call
dec
out
ins
daa
xchg
test
push
in
pop
sbb
mov
scas
retf
adc
cmp
xor
jo
addr16
lock
in
arpl
std
hlt
pop
mov
leave
lea
sbb
jle
cmp
adc
dec
fsub
int3
je
sub
jns
add
pop
mov
mov
or
pop
je
add
bound
mov
lock
(bad)
imul
jmp
jne
aas
test
nop
and
mov
cmp
mov
pop
mov
pop
sub
mov
data16
add
and
test
mov
push
sahf
jg
popa
imul
xchg
loop
and
sub
cwde
push
gs
(bad)
pop
movzx
aaa
lock
dec
xor
mov
xchg
test
bound
sub
add
mov
jg
jge
push
mov
out
xchg
stc
retf
and
aas
adc
xchg
mov
xchg
bsr
ror
push
xor
icebp
cwde
fldenv
movs
ret
sub
adc
mov
dec
mov
inc
iret
mov
in
push
mov
sub
pop
jecxz
push
movs
fst
pop
test
push
out
pop
inc
jns
enter
or
jmp
scas
pop
jmp
xor
jnp
mov
sar
or
sub
mov
lahf
add
das
or
adc
push
test
js
bound
push
iret
and
jo
jl
std
daa
xor
cli
jns
adc
push
pop
std
sti
push
dec
sub
pop
shl
mov
cmps
or
mov
or
pop
or
pop
mov
or
in
add
and
test
out
(bad)
jmp
(bad)
cwde
mov
call
add
adc
xchg
dec
out
cmp
in
cmps
cmovne
aad
out
retf
add
mov
stos
(bad)
xor
mov
inc
jb
ret
inc
dec
jmp
push
je
mov
pop
out
int3
imul
mov
fld
sar
dec
cld
(bad)
mov
retf
mov
gs
mov
addr16
retf
push
(bad)
gs
jp
mov
retf
cmps
sub
js
fs
adc
pop
cmc
cmps
pop
enter
shrd
fidivr
push
add
xchg
or
fsubr
jp
jne
and
mov
push
fsubr
retf
push
(bad)
int
jmp
push
cmp
cs
push
pop
pop
xchg
dec
adc
fidiv
iret
push
ds
cli
or
push
lods
hlt
cmc
adc
or
data16
and
jo
sbb
add
popf
fwait
addr16
lds
jns
mov
lock
dec
in
das
xchg
into
sbb
in
ja
sbb
mov
(bad)
cli
mov
pop
imul
ror
aad
cwde
push
not
cmp
push
pop
movd
aaa
adc
daa
pop
pop
test
in
jmp
movs
pop
xchg
imul
and
and
inc
or
cmps
(bad)
lods
imul
sbb
cmp
jo
sub
jns
dec
ror
mov
pusha
xor
loop
pop
sub
test
jns
es
cmps
sub
adc
(bad)
dec
(bad)
sahf
loopne
sub
cmps
dec
dec
push
fidiv
pop
loope
pop
push
mov
sahf
xor
xor
scas
sub
sbb
pop
xchg
cmp
and
inc
jno
jae
(bad)
loopne
test
adc
and
arpl
jns
aas
pop
ins
iret
ret
xchg
cmc
imul
mov
es
xchg
loope
xor
lock
sbb
mov
cmps
sbb
push
jnp
clc
leave
cmp
xchg
pop
scas
test
inc
stos
mov
and
shl
loop
lds
(bad)
cmp
and
xor
ss
jae
jg
jg
sub
xchg
mov
fcomp
xchg
sub
lahf
mov
mov
jae
cmp
fmul
xchg
jnp
mov
cdq
stc
xchg
push
and
sub
sbb
pop
and
loope
fdiv
xlat
icebp
cmp
sbb
fld
fwait
sub
nop
sub
mov
jecxz
xchg
fisubr
pop
pop
mov
leave
dec
mov
(bad)
pop
mov
adc
add
call
push
or
ins
sbb
mov
cs
sti
gs
sbb
sub
lahf
or
gs
ds
neg
and
mov
adc
(bad)
mov
sub
adc
mov
pop
sbb
loope
mov
sti
retf
xor
cmp
cmp
and
mov
adc
and
rol
pop
dec
mov
pop
mov
mov
pop
and
shl
jns
ret
fld
xor
push
outs
inc
rcr
push
fsub
ret
outs
mov
adc
sbb
shl
jl
dec
xor
sub
std
(bad)
jmp
scas
popa
hlt
mov
xchg
add
sub
xor
cs
cmp
in
gs
sbb
xchg
adc
das
adc
cmp
rcr
add
out
mov
aad
mov
dec
push
fldcw
and
pop
outs
xor
pop
xchg
or
xchg
xchg
sub
stos
inc
adc
(bad)
jns
jno
repz
ins
cmp
sub
cmps
jmp
fdivrp
mov
dec
ss
or
jno
bound
test
add
cwde
xchg
add
inc
rcl
ja
pop
in
out
popf
mov
mov
jb
sub
mov
xchg
movs
es
mov
movs
call
cmc
iret
dec
sbb
pop
dec
das
fild
xor
jae
jecxz
fld
push
fs
add
movs
cdq
outs
mov
std
and
jp
imul
and
mov
dec
out
or
lds
mov
ja
repnz
inc
jbe
mov
push
mov
add
iret
inc
retfw
adc
clc
dec
adc
cmp
mov
lea
sub
sar
mov
outs
mov
push
inc
jmp
mov
cdq
(bad)
jl
cld
inc
mov
cmp
dec
out
push
sbb
cmp
pop
popf
js
call
jmp
movs
add
pop
call
ds
xor
adc
xchg
out
(bad)
pop
mov
cmc
div
addr16
scas
and
push
push
jne
icebp
lock
movs
adc
shl
inc
ss
xor
xchg
fiadd
mov
sub
sahf
mov
add
xlat
mov
push
xchg
mov
mov
mov
retf
imul
fwait
sub
add
aad
xchg
ret
lods
stc
(bad)
dec
mov
setae
(bad)
popa
lods
cwde
dec
adc
sbb
cs
in
sub
fld
adc
int
xchg
jmp
addr16
pop
jge
xchg
daa
and
das
mov
jnp
fcmovne
cmps
jns
imul
scas
test
xchg
push
push
mov
sbb
adc
jb
xor
pminub
inc
(bad)
xlat
aas
mov
pop
xchg
cmps
cdq
cmp
pop
hlt
sar
gs
ret
dec
scas
in
repz
mov
mov
stos
cmps
popw
and
outs
jae
nop
test
pop
fcomp
mov
ret
leave
fisttp
mov
jb
cmps
pop
xchg
rcr
mov
lahf
xchg
xchg
push
in
sti
push
xchg
movs
jmp
cmp
aam
gs
cwde
cmp
addr16
mov
ja
dec
push
adc
sub
pop
aad
push
mov
(bad)
stos
jg
mov
fs
cmp
ss
mov
or
rcr
imul
sub
inc
mov
adc
and
stos
xor
movs
dec
jmp
dec
push
adc
jl
les
mov
mov
pushf
ins
adc
aam
dec
and
inc
je
ret
test
mov
clc
push
jbe
out
adc
ror
push
mov
retf
cmc
pusha
and
cmp
das
arpl
mov
xchg
fild
push
ret
adc
mov
ja
ret
xor
inc
(bad)
fld
fld
scas
and
(bad)
mov
adc
add
and
add
stos
and
lods
stos
sub
xchg
sub
fcom
fisub
stos
out
cdq
dec
out
push
jecxz
jns
jecxz
int
jecxz
push
inc
rol
lods
std
mov
and
ret
or
inc
iret
mov
aas
xchg
(bad)
jmp
sub
pop
jo
sbb
lods
in
js
pop
retf
xor
outs
jecxz
imul
leave
not
fidivr
xor
push
sub
push
aad
dec
xor
push
loope
lods
sbb
and
fidiv
mov
adc
jno
test
clc
and
daa
daa
stos
cmp
mov
shl
lahf
mov
mov
pushf
jge
das
retf
loope
(bad)
xchg
out
icebp
imul
out
cwde
dec
fcmovnu
shl
mov
adc
sbb
push
dec
in
cli
imul
rcl
xor
sub
jmp
or
test
cli
shr
add
pop
jmp
retf
pop
jnp
mov
out
sub
jmp
pop
mov
pop
mov
mov
push
cmp
push
or
repz
sbb
out
(bad)
out
push
out
inc
push
gs
into
add
jne
pushf
and
sahf
xchg
mov
fmul
mov
mov
call
(bad)
lea
cs
jns
imul
lods
xlat
in
mov
test
jp
cmps
pop
push
or
(bad)
cmp
dec
jp
mov
xchg
jecxz
test
imul
mov
adc
xchg
mov
dec
pop
mov
adc
mov
dec
pop
imul
mov
mov
adc
std
gs
push
inc
xchg
add
ret
cmp
jmp
out
inc
mov
xchg
xor
sub
adc
xor
jl
shr
iret
jb
shl
test
repnz
ret
int
call
add
adc
pop
jns
data16
dec
jle
data16
call
cmp
sub
mov
mov
or
push
pop
loopne
jno
aas
setno
xchg
int3
push
jecxz
mov
add
jnp
add
push
out
scas
and
add
push
scas
(bad)
xchg
cdq
sbb
(bad)
adc
aam
(bad)
lock
iret
dec
jge
inc
sbb
out
adc
sbb
enter
add
dec
popa
add
inc
les
aam
or
icebp
push
mov
fwait
pop
add
mov
test
movs
retf
and
lds
dec
das
in
in
div
out
lea
mov
outs
outs
xor
repnz
push
xchg
aad
xchg
cmp
mov
call
pop
mov
sub
and
out
push
jo
mov
pop
fs
sar
out
in
inc
cmp
adc
idiv
shr
mov
jl
daa
cdq
ret
mov
pop
mov
iret
sub
xchg
dec
test
adc
mov
push
retf
xor
sahf
loopne
cwde
scas
mov
(bad)
jg
arpl
mov
xchg
mov
pop
inc
adc
xor
pushf
enter
pop
(bad)
push
push
xchg
jmp
ins
cmp
retf
xchg
xlat
jge
fwait
and
mov
xor
mov
dec
lahf
shr
aaa
cmp
data16
mov
stos
push
je
bound
rol
out
mov
mov
rep
dec
xchg
mov
xchg
pop
rol
ror
cwde
or
jnp
push
enter
cld
jecxz
mov
popf
sub
lahf
sub
mov
pop
dec
clc
and
movs
mov
xchg
out
ret
iret
pop
stos
mov
fcomp
outs
mov
sbb
lods
inc
outs
dec
and
jae
icebp
and
and
arpl
dec
push
push
ror
or
push
jns
pop
ret
call
sbb
add
rcl
movzx
push
cmp
push
cmp
retf
inc
xchg
icebp
hlt
fnstcw
adc
xchg
push
sbb
inc
or
add
mov
data16
mov
nop
pop
and
xchg
xchg
cmp
nop
bswap
aaa
jne
rcl
into
iret
add
cli
inc
add
jns
cmps
mov
stos
es
(bad)
push
cmp
push
retf
mov
sub
cmp
pop
ret
xlat
addr16
sub
add
shl
mov
cmps
ror
lahf
xchg
lods
fidivr
icebp
add
lea
mov
call
mov
jmp
pop
sti
mov
xchg
outs
loop
loop
ds
xor
jmp
ins
cld
call
retf
cwde
aad
outs
test
jle
dec
pop
push
cmp
mov
pop
div
les
mov
adc
xor
mov
cmp
mov
or
lahf
sahf
rcr
or
ret
cmp
cmp
push
ja
mov
outs
push
or
add
xchg
add
iret
sbb
mov
(bad)
jecxz
fucomi
xchg
cmp
ret
pop
mov
or
sahf
sbb
cmp
push
stos
ins
cmc
adc
mov
adc
xor
imul
hlt
fcomp
xor
jne
popf
push
mov
cmp
cmps
in
push
lock
push
pop
jbe
test
data16
fistp
ffreep
lods
sti
and
popa
push
xor
add
imul
lods
repz
inc
shl
or
ret
inc
jmp
cmp
test
inc
sub
repz
enter
adc
dec
jge
pop
xchg
(bad)
mov
pop
aad
(bad)
jne
aam
shl
enter
push
sbb
enter
mov
loope
pop
es
pop
ret
js
jno
xlat
jnp
sbb
mov
movs
mov
mov
inc
push
mov
mov
pop
mov
popa
jp
pop
or
sbb
pop
fs
pop
jae
jnp
arpl
das
push
cmp
imul
mov
fldenv
psrld
inc
packuswb
aaa
mov
ss
cmp
and
loop
outs
xchg
push
iret
jmp
shl
out
jne
mov
stos
lods
and
adc
sti
inc
dec
or
mov
mov
jns
inc
lods
or
fnstenv
and
cmc
clc
inc
push
xor
mov
(bad)
out
adc
jns
xchg
sub
outs
repz
repnz
daa
mov
cli
xchg
and
jmp
sbb
in
movs
sub
inc
jg
mov
cmps
es
sti
leave
sub
cmps
stos
dec
in
or
push
xchg
aas
sbb
jb
and
push
in
inc
cld
(bad)
pop
jbe
or
inc
xor
xchg
cmp
jmp
push
jmp
sbb
dec
dec
pushf
cmp
push
jb
icebp
ss
adc
push
sbb
fisttp
mov
out
cmps
fwait
mov
test
test
sub
div
xor
push
jle
clc
(bad)
(bad)
es
(bad)
popf
shl
push
shr
shl
test
inc
and
add
out
sub
aad
add
fstp
adc
js
(bad)
dec
sbb
mov
xchg
push
pop
dec
xor
cwde
loope
dec
add
pop
xchg
idiv
imul
hlt
call
jbe
inc
icebp
or
ror
retf
sti
sbb
inc
pop
pop
enter
jb
aam
pop
jnp
adc
sbb
imul
sub
mov
ror
idiv
cld
stos
xchg
test
xor
sbb
inc
adc
arpl
mov
scas
scas
add
cmps
sub
addr16
scas
pop
out
popa
jl
(bad)
pop
push
push
popf
jmp
cs
rcl
jns
sub
sbb
mov
gs
dec
fist
rcl
div
retf
ins
adc
dec
add
jno
ins
mul
fist
fdiv
arpl
gs
outs
loope
jns
xchg
pop
dec
sti
sub
sbb
repnz
push
adc
inc
or
stc
(bad)
(bad)
inc
cs
push
fistp
shl
repz
xchg
mov
(bad)
xchg
fmul
les
imul
bound
jne
ins
sti
ss
or
sahf
in
mov
sti
sub
mov
dec
jne
fiadd
xchg
mov
out
and
sbb
jbe
sbb
push
sub
mov
xor
shl
add
jo
outs
movs
cmp
mov
aas
ins
cs
loop
xchg
xor
and
add
fldcw
ror
gs
add
call
fisttp
cmp
dec
clc
stos
jmp
adc
test
add
push
inc
iret
out
lods
or
in
cld
out
push
imul
inc
loopne
add
or
lods
mov
outs
cmp
daa
jmp
fidivr
jmp
cmp
sub
mov
push
js
push
xchg
ja
call
js
pusha
mov
xor
movs
mov
sub
dec
mov
xor
push
xchg
stos
add
je
shl
pop
cs
inc
pop
repz
xchg
inc
and
cli
xchg
pop
mov
jo
ucomiss
push
inc
push
jns
sub
mov
rcl
mov
cmp
mov
sbb
jb
hlt
in
inc
mov
loop
into
(bad)
fist
ret
std
sbb
push
and
stos
pop
ficom
inc
retf
(bad)
mov
pop
ss
xchg
ja
scas
pop
fdiv
outs
(bad)
mov
js
nop
dec
frstor
out
sbb
shl
ja
(bad)
aas
sbb
ret
lds
fistp
xchg
out
out
pop
push
ret
outs
mov
enter
jl
stos
push
(bad)
and
dec
aam
push
std
daa
cmps
arpl
lods
retf
movs
inc
or
call
pop
mov
scas
dec
rcr
mov
jno
cmp
aas
or
mov
retf
pop
adc
cmp
push
clc
(bad)
mov
stos
retf
aaa
imul
xor
sahf
fisttp
cmp
test
cmps
(bad)
mov
sub
loop
push
cdq
dec
and
mov
pop
xchg
dec
inc
mul
inc
mov
dec
ret
mov
pop
cdq
mov
or
enter
push
mov
cmp
inc
inc
(bad)
pop
pop
pop
cmp
ret
cmps
inc
pop
movs
nop
daa
call
mov
jns
(bad)
loop
out
pop
imul
js
scas
or
sub
mov
add
mov
(bad)
shr
test
adc
call
mov
and
mov
pop
(bad)
fcomip
scas
(bad)
fsubr
jl
jecxz
pop
jle
xchg
push
mov
stc
or
cmp
or
outs
inc
cs
inc
mov
adc
mov
push
mov
xchg
xchg
adc
test
jae
jo
mov
push
enter
iret
jle
int
lea
jl
popa
gs
test
out
lds
push
mov
sbb
mov
xor
in
fcomp
in
mov
sti
fidiv
aaa
(bad)
cld
jl
test
cmc
xchg
mov
pop
in
lods
dec
push
scas
dec
es
mov
pop
pushf
mov
sbb
ret
ret
and
xor
je
cs
cwde
div
mov
xor
imul
out
cwde
jg
push
xchg
add
push
imul
not
mov
out
(bad)
lock
cmp
sub
cs
ret
xor
imul
sub
hlt
test
inc
dec
icebp
mov
mov
xchg
xchg
pop
retf
inc
xchg
ja
cmp
xor
(bad)
fst
js
iret
xor
popa
mov
add
stc
mov
or
lahf
scas
push
xor
sti
cdq
ins
scas
fs
mov
(bad)
icebp
xor
mov
mov
mov
rol
and
je
sahf
inc
ds
xchg
add
add
cmp
jl
and
inc
mov
or
mov
or
dec
jl
xchg
jae
cmp
lods
sar
adc
(bad)
jle
or
cli
sbb
jne
or
xchg
leave
test
dec
repnz
repnz
addr16
fsub
pop
dec
out
fs
jae
mov
push
out
pop
jne
or
aas
push
scas
add
push
clc
call
mov
sub
jle
jbe
mov
fwait
or
fs
rol
xor
xchg
popf
push
mov
lods
dec
push
inc
pop
repz
cmp
(bad)
push
retf
shr
shl
cmp
mov
sbb
imul
call
fadd
cld
aas
add
loope
dec
movs
or
xor
test
xor
test
call
or
dec
loope
jnp
xor
xchg
call
daa
pop
imul
aas
pusha
and
lods
out
push
test
hlt
(bad)
add
dec
sbb
jnp
jb
sbb
mov
in
mov
ja
retf
add
pop
fnstcw
ret
xor
or
sbb
les
pmovmskb
test
jmp
(bad)
mov
aas
sbb
call
adc
sbb
in
mov
scas
les
dec
mov
cmp
mov
inc
xchg
test
adc
mov
std
les
ret
pusha
fld
hlt
adc
push
es
fdiv
push
(bad)
aaa
cmp
loopne
jae
add
sbb
mul
push
or
adc
lock
or
sub
cs
add
mov
bnd
loopne
dec
push
in
push
inc
push
or
hlt
or
dec
lea
adc
pop
mov
sbb
fdiv
xor
adc
dec
popf
sbb
arpl
data16
es
or
inc
popa
pop
cmp
mov
xor
cs
out
shl
inc
fcmovb
dec
loop
out
(bad)
pop
xor
sub
mov
xchg
inc
outs
scas
sbb
das
xchg
iret
pop
cmp
jp
push
dec
scas
in
in
fwait
sbb
push
xor
sub
loope
add
push
in
push
loope
scas
jb
imul
fs
in
pop
rcl
adc
sbb
cmp
pop
inc
ins
and
iret
imul
mov
cmp
call
call
shl
in
sub
fucomi
adc
fsincos
cwde
sti
add
sbb
scas
sbb
dec
fs
sti
sbb
imul
clc
xchg
ss
cld
int
call
fcom
mov
mov
push
cmp
mov
xchg
mov
pop
push
dec
ins
ins
cmc
ss
push
mov
adc
and
fcmovbe
push
lea
push
mov
inc
fs
lahf
and
aam
adc
xchg
adc
int3
ss
fnstenv
jge
jbe
mov
jg
or
ja
push
mov
outs
fld
pop
aad
jge
and
cli
push
push
jmp
mov
gs
adc
inc
imul
mov
sub
mov
rcr
inc
jmp
xchg
out
add
push
pop
fdiv
outs
repnz
les
pop
xor
jecxz
out
loopne
mov
in
fs
into
xor
mov
hlt
sahf
daa
fs
jb
ror
jb
rcl
push
fbstp
mov
jne
mov
xor
mov
or
jmp
scas
imul
popf
mov
mov
les
mov
xchg
xlat
hlt
test
stos
jne
add
and
jno
add
cwde
es
push
dec
pop
(bad)
fwait
movs
jno
aad
and
stos
test
mov
sub
adc
mov
push
pop
ret
jo
xchg
aam
sub
sub
rcr
pop
fld
xchg
sar
mov
add
fs
inc
sbb
pop
lock
je
neg
aas
dec
sbb
add
sub
cmp
out
lahf
imul
dec
out
mov
jp
push
push
inc
(bad)
cmp
jge
in
aas
lea
sub
loopne
pusha
rcr
arpl
xchg
push
xlat
jo
inc
push
test
push
jmp
push
stc
add
cmp
retf
sub
add
bound
inc
jle
xlat
inc
xchg
addr16
fs
inc
adc
aam
enter
icebp
je
xchg
jmp
in
push
dec
push
lea
xchg
cld
ins
es
inc
comiss
out
aas
(bad)
xor
test
add
mov
mov
les
ret
les
mov
fist
mov
jmp
rol
loopne
xor
xor
dec
aas
int
sbb
hlt
or
pop
mov
data16
mov
out
test
fstp
dec
loop
shl
sub
sar
add
pop
cmps
sub
cmc
in
(bad)
in
test
inc
sub
nop
rol
add
jge
test
jbe
xor
test
dec
pop
cld
xchg
div
(bad)
in
and
and
loopne
cmps
mov
add
imul
(bad)
xor
inc
push
aad
sub
add
cld
inc
jne
xlat
cli
adc
sbb
test
mov
pop
sub
cdq
jmp
sub
xchg
xchg
push
add
adc
inc
gs
int3
add
xor
xor
pop
call
add
out
mov
sub
ror
inc
add
mov
ss
cmp
in
mov
dec
in
or
aam
mov
mov
dec
or
std
ret
pop
into
out
dec
pop
popf
xor
jns
enter
inc
in
xchg
jbe
mov
test
ja
and
popa
rcl
mov
dec
ja
xor
enter
xor
pop
fdiv
jb
loop
mov
lods
cmp
cmc
retf
push
rol
sbb
xor
push
int3
xor
shr
or
aad
or
xchg
pop
arpl
mov
aas
add
cli
scas
pop
fwait
pop
fnstcw
jle
pop
mov
xor
in
add
mov
into
fimul
out
shl
stc
push
ficomp
clc
or
inc
sub
es
mov
fcomp
jl
popf
and
push
movs
jge
fst
bswap
cli
xchg
cmp
mov
cdq
aaa
mov
popf
out
repz
mov
dec
pop
repnz
dec
xchg
push
sub
xchg
mov
cmps
or
xchg
adc
dec
dec
or
mov
stos
ss
or
cwde
movs
cwde
push
push
push
pop
cmp
stos
mov
cmc
cmp
adc
aaa
inc
mov
out
js
mov
lods
xchg
out
push
call
pop
ja
retf
lahf
sbb
cmps
scas
hlt
add
ror
es
test
lds
inc
loopne
inc
cli
inc
pop
add
stc
xchg
pop
push
pop
add
mov
cli
loopne
dec
and
adc
mov
lods
dec
es
jne
ss
push
jno
stos
movs
das
imul
push
rol
int
mov
dec
lock
adc
pop
mov
pusha
or
call
sbb
jno
jb
dec
ret
test
or
stc
inc
cmps
xchg
into
loop
adc
int3
ds
sub
clc
or
cld
sub
cwde
es
fisubr
push
adc
dec
cli
ins
int3
jmp
jb
cmp
jmp
pop
xor
xchg
popa
xor
pop
ja
cli
std
mov
push
xlat
sub
icebp
mov
mov
adc
and
movs
xchg
loope
xor
sbb
inc
int
inc
mov
sahf
xlat
jns
push
xchg
stos
pop
out
xchg
add
mov
mov
fbld
ret
inc
mov
lds
nop
ins
mov
test
in
dec
sub
imul
in
stos
std
push
pop
mov
mov
popf
sahf
mov
call
fcomp
fsubr
xchg
cli
push
repnz
(bad)
in
rcr
scas
mov
jbe
pop
fnstenv
call
cdq
cld
popa
cmc
and
inc
mov
mov
xlat
add
xchg
fisttp
and
pop
xor
icebp
pop
pop
push
sbb
shl
pop
cwde
into
in
test
and
or
gs
aam
div
mov
jnp
sub
xor
mov
repnz
dec
aaa
cli
call
xor
adc
into
inc
loop
dec
scas
into
aad
rol
rol
test
sti
xchg
mov
mov
or
and
pop
imul
inc
cmps
ror
rcl
rep
sub
jge
test
pop
lds
in
and
rcr
js
push
jle
cmp
xor
mov
jb
iret
jle
fwait
push
arpl
lahf
pop
push
out
addr16
inc
jo
jecxz
mov
lea
ds
iret
fs
pop
cld
fndisi(8087
dec
sub
xor
cmps
lds
not
mov
lahf
or
add
(bad)
fild
jbe
popa
retf
jb
and
stos
mov
jecxz
pop
rcl
lock
cmp
adc
(bad)
mov
and
jmp
cli
(bad)
sub
sbb
int3
je
push
dec
(bad)
push
mov
arpl
out
cmovnp
rcr
inc
cmp
into
aaa
fcom
push
into
ins
and
call
jne
and
(bad)
out
push
pop
mov
jbe
mov
icebp
out
outs
fistp
pop
mov
sub
in
cs
pop
test
dec
jp
call
js
sub
push
fs
add
dec
xor
lea
cmp
lods
cmp
push
and
jmp
outs
mov
repz
xor
push
inc
push
aas
test
cs
jae
and
scas
(bad)
scas
lea
pop
inc
cmp
or
sbb
pop
xchg
sbb
adc
mov
lahf
fisubr
in
dec
jbe
push
inc
aas
mul
sahf
sub
imul
outs
mov
or
and
fcmovbe
add
jl
ret
cs
int3
pop
mov
aaa
dec
add
pop
push
pop
or
mov
jmp
mov
sub
(bad)
and
jnp
xchg
rol
xchg
repnz
scas
add
fisub
aas
ins
mov
add
in
add
inc
cmp
jno
loope
xor
dec
dec
adc
loop
add
mov
cmp
in
sub
jg
jmp
xor
js
inc
sub
mov
inc
inc
dec
push
jle
xchg
mov
or
fnsave
jl
or
fdivr
lea
pop
jl
jae
sub
mov
mov
repnz
ja
xchg
mov
mov
(bad)
stos
pop
xchg
clc
loop
jb
test
adc
xor
jnp
adc
mov
jp
dec
in
xchg
cmc
pushf
pop
cmp
cwde
xchg
ja
int3
push
add
loopne
xor
sub
adc
sar
call
xor
xchg
push
ret
pushf
xchg
out
or
sub
cs
dec
jns
into
mov
ret
sbb
rcr
add
or
popa
addr16
pop
daa
aas
or
rol
sbb
ds
rcr
mov
mov
imul
dec
push
scas
inc
lock
adc
mov
xchg
add
cmp
aam
or
pop
add
movs
mov
scas
pushf
popa
dec
mov
cmp
sbb
test
and
mov
lods
pop
adc
mov
xor
dec
movs
push
dec
push
cmp
mov
cwde
les
and
pushf
sbb
nop
loop
(bad)
xchg
aam
in
cmp
jle
pop
cdq
and
cmps
mov
xor
stos
ins
mul
bound
lock
fistp
fimul
fistp
push
pop
pop
shr
sbb
(bad)
jbe
mov
cmps
dec
xchg
pop
out
sub
mov
mov
mov
adc
pushf
cwde
sti
ret
mov
xchg
jmp
inc
movs
inc
lods
hlt
outs
stc
nop
lds
push
sbb
aad
ror
test
or
int3
add
mov
arpl
addr16
fmul
jp
jp
sub
iret
scas
retf
jae
jmp
xchg
add
or
pop
test
push
adc
pop
stos
mov
jae
or
ins
cmp
push
sub
mov
jl
out
in
dec
adc
int
jg
mov
ret
mov
idiv
int3
pop
int
in
frstor
xchg
and
push
ss
xchg
cmp
rcl
div
inc
jb
mov
push
leave
adc
sub
loopne
or
std
push
cwde
call
mov
xor
inc
psubq
mov
jmp
xchg
or
xchg
in
pop
sub
jl
sub
dec
gs
inc
mov
and
push
mov
mov
cwde
dec
test
and
push
xor
dec
addr16
xchg
pop
or
sub
mov
adc
loope
fsub
mov
or
jge
xor
sub
sti
popf
inc
call
pop
popa
cmp
mov
imul
dec
jns
or
push
test
ss
sub
scas
sbb
cmp
xor
or
and
mov
call
sti
xchg
out
loopne
pop
sbb
shr
mov
mov
int
add
(bad)
js
aam
and
dec
neg
shl
xchg
ss
push
inc
out
inc
jle
jnp
(bad)
ins
xchg
xchg
imul
lds
nop
sti
adc
fisubr
lea
push
imul
push
je
daa
iret
je
lahf
int
push
js
inc
and
sub
data16
sbb
test
mov
call
aaa
xchg
ja
push
jmp
sbb
loopne
push
sbb
out
jmp
add
cmp
jo
es
call
add
iret
call
mov
gs
xor
jmp
ja
mov
lahf
cmp
arpl
sar
adc
scas
sub
retf
int3
gs
bound
mov
mov
xchg
retf
xor
pop
ja
(bad)
xor
mov
jb
cmp
add
dec
movs
cld
sbb
ficom
mov
not
sbb
shr
das
sub
in
jle
popf
cmp
pop
mov
xchg
int
dec
pop
adc
call
fsubr
and
shr
(bad)
and
pop
rcl
mov
arpl
sbb
outs
das
xor
fld
lods
jb
lea
jno
mov
lods
dec
movs
sub
fdivp
sbb
fdiv
adc
jns
mov
cmp
(bad)
mov
mov
jmp
fsubr
cmp
add
push
dec
pop
call
js
stos
retf
data16
fwait
or
push
les
jmp
pop
test
es
gs
jmp
in
cs
add
out
push
addr16
out
loopne
sub
push
inc
xchg
popf
dec
push
aad
xchg
out
ds
add
and
jb
shr
out
retf
or
add
jo
cmp
fadd
mov
lahf
or
or
xchg
int3
test
cmp
stc
ins
je
sub
jae
dec
ret
fwait
push
call
into
adc
aaa
jo
cmp
ret
scas
retf
test
push
daa
loop
leave
dec
call
sub
pop
loopne
pop
loop
xor
mov
mov
in
in
ret
xor
fidiv
jl
sub
aam
loopne
xchg
nop
mov
xchg
mov
add
dec
in
lea
enter
jl
xchg
dec
gs
rol
xor
(bad)
call
mov
jle
xchg
fninit
cmp
lods
inc
pop
ds
ret
jge
xchg
out
push
int
sbb
xchg
sahf
les
inc
enter
lahf
sub
sbb
repnz
int3
jne
and
dec
ss
sar
mov
sub
ret
popf
iret
ins
xor
mov
stos
scas
adc
or
loop
addr16
fild
or
mov
div
nop
fidiv
fistp
psraw
out
adc
das
sti
pop
fstp
mov
jg
rcr
cmps
xlat
and
aas
in
imul
mov
int
xchg
(bad)
ins
mov
lock
fst
leave
sti
inc
nop
and
pushf
adc
and
dec
mov
mov
mov
movs
shr
add
jge
(bad)
fdivr
scas
cmp
adc
mov
ja
mov
jl
mov
adc
(bad)
int3
cmp
mov
adc
xor
xchg
mov
cmp
daa
fiadd
gs
(bad)
dec
stos
jne
(bad)
pop
pop
fs
shl
(bad)
idiv
sub
imul
cmp
mov
(bad)
sbb
push
cmc
jb
aas
add
cmp
(bad)
call
mov
jnp
sti
adc
add
int3
out
addr16
pop
(bad)
or
mov
mov
pop
leave
fs
mov
stos
(bad)
retf
mov
or
push
or
addr16
sub
ror
sub
ja
fild
daa
dec
or
hlt
aam
popa
loopne
add
adc
jb
sbb
pop
inc
cmp
sub
dec
(bad)
gs
jbe
jb
or
div
in
int
inc
outs
xchg
mov
mov
scas
xor
mov
mov
sub
xchg
dec
jb
sbb
not
ficom
fidiv
aas
dec
or
push
pop
jnp
aas
push
mov
push
dec
xchg
hlt
adc
mov
xchg
bound
fwait
sbb
movs
cmp
outs
loopne
adc
pop
sbb
lods
scas
cdq
mov
pop
(bad)
or
dec
stc
push
je
invd
pop
retf
dec
lods
in
std
mov
dec
outs
arpl
and
push
pop
mov
inc
jns
pop
sti
xor
stos
fidiv
arpl
pop
dec
and
imul
ja
lds
pusha
sbb
loope
xor
dec
fs
repnz
(bad)
mov
jbe
mov
neg
mov
mov
aad
mov
in
shl
arpl
jg
dec
lds
pop
cmp
aam
xchg
jo
sti
adc
push
and
sub
int
clc
stos
mov
aam
addr16
xchg
cmp
dec
ins
mov
pop
mov
push
stc
pop
fsub
mov
dec
test
test
hlt
call
les
mov
xchg
xchg
repz
ret
cmps
cdq
sar
outs
or
aas
enter
or
mov
sbb
lahf
or
aad
loope
out
mov
or
lock
(bad)
loope
rcl
imul
ins
cmps
in
test
mov
cmps
cmp
(bad)
aam
popa
gs
in
pop
lds
pop
imul
push
outs
dec
lea
add
push
mov
retf
fsubr
call
pop
pinsrw
sahf
pusha
into
adc
xor
xchg
dec
pop
in
scas
xchg
cmp
mov
mov
mov
pop
sub
inc
(bad)
pop
pushf
jecxz
jmp
sbb
mov
dec
inc
scas
jl
push
int
sbb
cmp
enter
xchg
mov
jmp
mov
pusha
mov
jle
cmps
jno
lea
jns
cmps
mov
call
or
stos
dec
mov
mov
pop
jno
stos
jns
dec
sbb
push
out
xchg
aaa
cld
aad
addr16
rol
nop
in
xor
dec
mov
mov
rcl
aas
pop
nop
movs
adc
cmp
fnstenv
inc
hlt
test
in
aas
sbb
ret
push
dec
mov
mov
(bad)
jmp
add
fsub
pusha
push
and
ins
loope
call
sub
mov
cld
loope
jmp
pop
sub
clc
loopne
(bad)
dec
fnstenv
mov
pop
xor
movs
dec
js
xor
jae
idiv
idiv
movs
or
mov
pop
xchg
leave
and
add
xor
fst
fisttp
gs
out
dec
cmp
(bad)
xor
sti
cmp
mov
jne
aaa
jns
jnp
xor
arpl
jmp
pop
push
retf
aam
jg
mov
fcompp
div
add
mov
dec
and
test
sti
ins
mov
hlt
inc
enter
jl
xor
cmps
ins
ins
fstp
arpl
shl
sub
movs
jle
push
mov
cmp
hlt
dec
push
sub
jle
xchg
adc
stc
inc
lds
push
fld
vmulpd
lahf
push
inc
mov
push
inc
and
xchg
(bad)
mov
hlt
adc
push
dec
leave
test
jmp
mov
ds
bound
aaa
mov
pop
aas
mov
outs
(bad)
js
pop
shl
repnz
iret
call
or
xor
stos
aad
sbb
and
bound
xchg
dec
inc
fwait
sub
jmp
lea
jae
dec
or
or
loopne
repz
mov
stos
pop
cmc
and
cmp
pop
in
sbb
push
les
jecxz
ins
scas
pop
xchg
jae
mov
xor
push
test
push
scas
push
pop
inc
test
imul
fst
and
push
shl
in
fs
aad
stos
inc
sbb
int3
sub
(bad)
adc
hlt
sbb
xor
xor
repz
shl
iret
and
(bad)
ins
sbb
retf
mov
adc
jle
cmp
je
and
push
mov
jns
ds
adc
push
xchg
xor
sbb
pop
(bad)
inc
jg
lods
mov
jno
cmc
stc
je
add
jo
retf
mov
not
clc
pop
ficom
or
popf
pop
sti
push
mov
xchg
mov
pop
fld
push
jle
xchg
sub
xor
stc
sub
repz
inc
imul
xchg
pop
les
or
int
fucomi
ins
repz
mov
repz
pop
into
xor
jb
cmp
int
sbb
hlt
stos
repz
pop
push
pushf
push
jmp
or
sub
call
cmp
shr
aad
jbe
or
ja
push
ret
clc
push
lock
rcr
mov
pop
push
add
fistp
xchg
jl
std
iret
and
add
mov
and
out
in
mov
and
shr
test
xchg
xchg
push
pop
sub
pop
cmp
lods
scas
or
outs
std
gs
lock
addr16
dec
(bad)
adc
mov
xor
xchg
fnsave
jae
aas
xor
xchg
ret
or
test
cmp
imul
pop
ss
ds
out
and
sbb
add
js
push
push
or
jmp
xchg
inc
(bad)
pushf
neg
sbb
sbb
(bad)
adc
sub
mov
push
int
sar
add
hlt
pop
call
jne
inc
mov
push
pop
mov
clc
cs
push
out
jne
xlat
test
cmovae
(bad)
aaa
cld
jmp
mov
inc
xchg
sahf
sub
sbb
pop
push
jp
mov
data16
or
pushf
jno
xchg
cmp
pop
mov
lods
cmp
inc
sub
jne
or
add
add
aaa
inc
sbb
sub
aad
fwait
jb
pop
pop
daa
sbb
push
iret
sub
es
aad
xchg
jns
cwde
das
loopne
push
jo
test
sahf
mov
cs
cdq
in
hlt
push
outs
ret
out
in
mov
mov
xchg
fs
hlt
imul
jmp
xor
and
mov
clc
repnz
or
push
in
mov
idiv
or
xchg
push
pop
lea
sbb
int
lea
xor
cmps
sbb
out
jle
cs
movs
fldcw
mov
dec
fsub
sub
lds
or
mov
int3
fldlg2
jl
sub
and
fisttp
cmps
mov
dec
jo
dec
les
adc
sbb
sbb
inc
es
add
jge
inc
mov
fnstsw
ins
les
ds
push
rol
xchg
adc
dec
xchg
lock
jno
call
mov
cld
mov
mov
and
and
jle
cmp
int3
std
fstp
sbb
or
das
mov
iret
je
stos
adc
addr16
loop
ja
pop
(bad)
retf
push
and
mov
ret
retf
fs
xor
into
ret
movs
fild
daa
fs
mov
test
fwait
jbe
mov
daa
adc
push
xlat
mov
adc
out
repz
push
(bad)
int
in
add
repnz
sbb
es
push
jmp
sar
sti
cwde
sub
add
scas
pop
scas
por
pop
outs
cmps
cmps
mov
aaa
dec
div
add
jb
outs
jb
and
into
mov
mov
add
pop
and
or
push
dec
mov
not
data16
out
movs
add
add
mov
shl
sub
inc
adc
and
mov
pop
pop
sub
das
mov
or
fist
dec
loopne
pslld
int3
push
xchg
repz
cs
pusha
daa
arpl
mov
or
idiv
and
push
xlat
addr16
mov
fisttp
lock
mov
stos
es
dec
dec
mov
ss
cmp
xchg
and
pop
inc
dec
jmp
xor
pop
sub
imul
adc
mov
sub
cmp
mov
jne
addr16
inc
out
jmp
(bad)
aam
daa
xor
jne
dec
pop
dec
or
movs
call
test
fsub
ret
push
(bad)
(bad)
ds
mov
cdq
and
(bad)
les
sti
mov
lea
xor
nop
ds
loopne
and
das
inc
or
adc
arpl
jno
das
imul
mov
xor
jg
movs
movs
jge
cmp
xchg
mov
repz
inc
push
(bad)
lock
movs
ss
mov
arpl
and
imul
out
mov
outs
pop
mov
push
dec
enter
enter
outs
dec
test
add
or
(bad)
aad
lock
repz
fdivr
push
jae
outs
or
out
mov
xor
ret
sub
push
dec
gs
ja
retf
ins
adc
mov
jmp
es
loopne
dec
push
test
dec
mov
sbb
loope
xor
(bad)
jmp
lea
jmp
cmp
clc
cdq
out
in
pop
ror
out
int
(bad)
inc
test
cdq
bound
jecxz
cwde
ror
mov
mov
enter
xchg
pop
or
adc
fcmovnu
cmp
lods
in
pop
mov
fcmovnb
sbb
js
sub
aad
in
arpl
mov
jp
hlt
mov
adc
jg
dec
mov
out
ss
jle
gs
pusha
add
ret
mov
add
xor
mov
adc
mov
lea
lock
mov
jle
xchg
sub
push
into
xchg
ret
cmp
push
(bad)
aaa
mov
mul
or
adc
sar
popf
adc
or
sub
xor
sbb
push
add
mov
addr16
popf
(bad)
shl
jecxz
mov
jg
fsub
gs
lea
push
push
jbe
or
adc
ret
fst
dec
sub
pop
xor
cmps
mov
leave
int
or
popa
lahf
pop
or
and
icebp
aad
bound
pop
in
imul
mov
fcmovu
ds
fdivr
in
test
aas
push
neg
imul
call
leave
xchg
pop
xchg
lock
or
test
iret
push
mov
imul
cwde
mov
fsubr
rcr
mov
dec
fwait
jg
mov
and
clc
jbe
jno
cmp
out
push
ins
(bad)
jb
mov
pusha
loop
test
mov
xchg
mov
mov
cmp
or
std
movs
repz
add
inc
inc
lods
push
and
mov
lods
push
sub
sbb
jmp
dec
test
and
iret
xchg
xor
or
loope
add
or
dec
mov
imul
jbe
sub
leave
dec
mov
xchg
or
and
sub
add
mov
div
lea
sbb
xchg
pop
fsubr
cmc
fxch
jno
mov
add
jbe
scas
pop
jl
cld
dec
stc
push
inc
pushf
daa
dec
jns
retf
pop
std
xchg
fdiv
dec
cdq
dec
add
fwait
jp
and
ins
and
mov
adc
adc
or
out
push
or
cmc
retf
jo
push
outs
daa
cld
fmul
retf
mov
pop
xchg
jl
mov
outs
dec
jge
pop
scas
sub
mov
xchg
cmovbe
adc
outs
out
xor
call
xor
cld
inc
dec
sub
pushf
or
enter
or
pop
(bad)
stc
mov
jge
stc
repnz
cmp
or
and
jge
mov
push
outs
mov
mov
push
pop
mov
sub
xor
xor
xor
inc
int
call
outs
jp
cmp
jno
rcl
inc
sar
mov
mov
repz
mov
xor
push
call
fcom
xor
call
in
dec
fwait
pop
xor
and
gs
rcl
pop
shl
push
jne
jo
stc
(bad)
jae
add
arpl
fiadd
xlat
je
(bad)
ficom
jg
fisubr
push
jmp
into
pop
addr16
js
inc
imul
push
xlat
push
lahf
shr
stc
adc
jp
sub
ja
outs
jge
cwde
jbe
retf
or
jmp
adc
lahf
rol
pushf
js
sar
cmp
mov
fucomp
cmc
stos
xlat
mov
(bad)
addr16
into
mov
shl
ins
fiadd
aaa
jno
sbb
mov
cmp
mov
fsubr
mov
test
xor
push
outs
scas
and
mov
sub
leave
addr16
(bad)
adc
and
jecxz
dec
(bad)
cmp
dec
iret
pop
xchg
mov
out
xor
mov
sub
cli
fs
outs
mov
or
lods
sub
repz
sub
add
or
imul
sbb
add
and
cmp
loopne
call
sbb
loope
mov
and
push
add
pop
imul
sbb
fs
outs
jmp
sbb
mov
sbb
js
sti
and
stos
lods
sar
cmps
cmp
mov
add
aam
into
jl
enter
fld
xlat
lods
xchg
ss
icebp
pop
jmp
int
mov
add
rol
and
movs
sar
sbb
das
(bad)
and
and
stc
test
push
inc
aad
mov
push
pop
test
repz
ret
ins
jl
add
xor
ret
adc
or
adc
pop
push
jp
mov
push
pop
xchg
jecxz
dec
xor
and
in
adc
dec
vpandn
adc
mov
loope
out
adc
ins
lds
ins
call
cmp
(bad)
and
les
push
or
in
jecxz
dec
popa
lea
xchg
sbb
jmp
dec
lea
das
rcl
mov
jns
cld
mov
fnstenv
or
xor
mov
jns
mov
and
stos
or
sub
mov
cmp
daa
loop
movs
push
iret
out
inc
hlt
(bad)
imul
xchg
ficom
mov
arpl
mov
ss
cmp
bswap
stos
nop
and
(bad)
imul
test
ins
repnz
ret
mov
shr
(bad)
adc
add
pop
pop
sbb
shl
mov
pushf
and
(bad)
rcl
mov
pop
(bad)
retf
inc
add
and
sbb
shl
or
(bad)
fild
mov
cli
or
xor
jmp
pop
sub
inc
or
stos
cmp
jb
sub
push
test
fsub
push
add
mov
cdq
leave
jo
pushf
sbb
std
jmp
and
(bad)
les
fwait
pusha
sbb
movs
fbstp
mov
jmp
int
popf
rcl
scas
or
cmp
fst
jle
test
push
dec
into
test
ror
push
dec
dec
jnp
cmp
daa
dec
cmp
sub
les
push
cwde
dec
mov
mov
and
adc
xor
popa
in
pop
cmp
xchg
jle
push
les
push
hlt
or
push
sahf
enter
push
pusha
mov
sub
inc
push
sar
in
mov
sahf
mov
push
gs
push
repz
inc
leave
adc
mov
fnstcw
pop
imul
and
nop
mov
mov
pop
(bad)
push
mov
adc
push
into
jae
xchg
push
enter
jb
jmp
jecxz
xchg
fisub
inc
mov
sbb
cld
cmc
dec
scas
jnp
into
(bad)
xlat
pop
adc
jmp
jp
mov
cmps
call
push
stos
jge
pop
mov
hlt
popf
or
ss
cmp
fnstcw
mov
xchg
enter
out
mov
retf
add
(bad)
sbb
inc
jl
int3
fistp
and
out
cmc
inc
lods
and
aaa
mov
push
fcomi
sbb
sti
aad
call
and
mov
ficomp
cmp
(bad)
mov
les
pop
movaps
or
in
jle
xor
ret
mov
mov
daa
pop
lods
push
xor
scas
xchg
adc
push
lock
rol
and
cli
sbb
jnp
movs
inc
sbb
cmps
in
xor
sub
inc
pop
xchg
aas
xlat
mov
adc
xchg
mov
int3
push
push
aad
retf
shl
stos
mov
sub
xor
pop
sub
pop
pop
xor
rcl
cmps
push
jle
fild
jmp
call
mov
pop
dec
and
dec
cmp
adc
mov
cwde
pop
inc
cmp
pop
daa
retf
xor
jnp
xor
(bad)
loop
push
mov
push
les
fldenv
fwait
dec
mov
ret
pushf
gs
jle
cmc
mov
sub
xchg
scas
fcmovu
dec
lds
dec
xlat
loop
fwait
cmp
call
xor
or
inc
loopne
popf
jae
add
sbb
inc
jmp
xor
pop
adc
(bad)
retf
cmp
stos
pusha
sahf
mov
mov
add
cli
sub
jp
das
les
test
mov
sub
icebp
mov
sub
xchg
push
in
in
fimul
sti
dec
xchg
inc
rol
enter
popa
shl
xchg
inc
pop
and
push
(bad)
mov
nop
cmp
shr
pop
addr16
jg
jmp
pop
inc
scas
and
mov
(bad)
cmps
pusha
dec
mov
add
fadd
jmp
pop
stos
push
gs
div
jp
and
push
dec
sub
scas
mov
push
add
jmp
sub
sub
es
out
leave
test
xor
scas
mov
bound
cmp
scas
gs
cmp
das
sbb
sbb
sbb
repz
and
jbe
pop
inc
je
pop
mov
mov
mov
jae
adc
fs
push
scas
push
fs
cmps
lods
inc
test
sbb
out
fcomp
cld
lea
and
push
mul
push
and
cmp
mov
sahf
mov
fist
les
vpshufbitqmb
jecxz
cmp
ss
push
int
fwait
ror
ins
les
(bad)
lea
mov
adc
pusha
inc
push
fldenv
add
mov
jne
xor
jge
push
push
cmp
inc
xchg
xlat
hlt
add
push
add
jge
adc
int
sub
mov
cmp
lods
std
and
fidivr
(bad)
push
cmp
sub
jge
fisubr
imul
fist
(bad)
sub
loope
jae
mov
push
push
cli
jp
in
retf
popa
sub
push
scas
lods
or
arpl
xchg
and
jle
imul
ds
mov
push
jle
pop
ja
cmps
jp
mov
in
jle
in
or
xchg
jmp
inc
push
push
pushf
loope
jg
in
pusha
nop
mov
fwait
clc
js
shr
push
mov
and
rcl
iret
mov
mov
rcl
push
int3
loopne
or
pop
cwde
pop
mov
xchg
mov
imul
and
jge
pop
leave
cmc
and
inc
ja
outs
je
sub
xor
mov
ja
dec
arpl
int
repz
lods
or
add
xchg
push
dec
mov
xor
aas
and
xchg
sub
test
les
ins
call
js
repnz
scas
push
sub
and
sbb
data16
test
ja
imul
je
in
dec
sbb
mov
retf
dec
jmp
xor
push
push
(bad)
stc
call
js
jno
cld
in
das
push
fnstsw
loopne
rcl
cdq
jmp
aas
add
pop
es
fwait
cmp
dec
mov
ds
in
and
enter
ss
test
xlat
lea
sub
push
mov
cmp
xchg
adc
call
ds
cmps
jae
jge
movs
int
push
sbb
cs
ret
xchg
bound
mov
cmp
push
pop
xchg
aam
and
(bad)
cmp
mov
sub
mov
rcl
iret
push
ror
int
mov
les
mov
jecxz
es
jns
and
push
fiadd
mov
aad
inc
lods
jne
ss
dec
(bad)
repz
shl
xor
xor
jbe
push
imul
jge
mov
mov
retf
sbb
and
test
and
jmp
pop
ret
push
cmps
add
scas
je
and
dec
dec
mov
xor
and
add
data16
cld
sub
js
adc
imul
shl
movs
mov
stos
push
push
stc
sub
cmps
js
or
mov
mov
inc
sub
and
shl
inc
pop
test
xchg
adc
sub
jle
mov
mov
push
(bad)
mov
jmp
dec
push
push
sub
test
in
pop
cmp
outs
push
outs
sub
cld
movs
call
outs
mov
sub
xchg
out
push
mov
and
inc
mov
imul
jl
mov
inc
push
ror
in
pop
xchg
xor
fiadd
icebp
fs
mov
cmp
aam
add
cli
aas
retf
ror
das
push
mov
sbb
imul
jns
je
mov
xlat
mov
cmp
rcl
inc
das
xor
sub
call
jbe
imul
jecxz
movs
in
xchg
into
inc
cmp
mov
xor
std
mov
stc
js
movs
into
push
adc
jno
push
enter
pop
mov
hlt
xchg
fwait
ins
jo
and
jnp
sub
bswap
push
sti
push
es
js
dec
fsubr
fld
inc
loopne
aas
dec
aaa
mov
in
loope
mov
mov
mov
push
and
mov
xchg
int
lds
pop
(bad)
dec
pop
pop
sub
bound
in
retf
popa
fcom
pop
push
push
mov
jp
xchg
iret
cs
out
mov
repnz
xor
ja
das
fldenv
cmp
test
test
test
push
mov
adc
nop
hlt
add
stc
lods
and
mov
in
out
lds
cmp
sbb
rcl
dec
imul
and
neg
pusha
adc
mov
push
sbb
xchg
in
jb
jnp
rol
dec
cmp
and
push
leave
add
pusha
cmp
fwait
jnp
mov
pop
mov
pusha
(bad)
(bad)
not
fwait
inc
sar
push
mov
stos
cld
gs
sti
pop
cmc
push
cmp
cld
lea
jns
xor
and
(bad)
pop
imul
mov
cmp
fwait
mov
sti
inc
adc
push
(bad)
fdivr
push
cmp
fs
mov
xor
into
mov
sti
ins
add
mov
int
add
push
cmp
and
test
jns
cmps
jns
sbb
push
push
retf
imul
neg
xor
addr16
movs
xchg
stos
inc
sbb
stc
inc
push
cmp
dec
mov
(bad)
scas
sub
mov
adc
jecxz
test
cdq
mov
fs
push
cmp
(bad)
push
(bad)
lock
xchg
mov
(bad)
cmps
mov
pusha
jg
cmp
ja
xchg
(bad)
rcr
ins
call
mov
mov
out
jle
pop
outs
xchg
mov
std
std
add
enter
in
lds
and
data16
xor
jmp
or
inc
cmp
sbb
push
lds
mov
cmps
sbb
jg
or
lahf
clc
adc
fldenv
pop
push
ror
test
jno
neg
cdq
sbb
xchg
enter
xchg
addr16
(bad)
push
call
(bad)
out
stos
xor
jg
ret
das
mov
into
repnz
xchg
and
and
call
aam
fst
pop
shl
push
xor
ret
pushf
dec
ss
mov
js
fwait
push
mov
jae
adc
sub
jmp
or
stc
leave
add
xchg
(bad)
xchg
jle
cmp
and
adc
sbb
ja
out
and
inc
popa
dec
xchg
mov
cwde
movs
lods
arpl
or
jl
int3
push
xchg
or
mov
sub
mov
jbe
je
sub
out
mov
ja
in
gs
iret
push
dec
add
add
cmp
mov
cmp
sub
ds
pop
test
divps
retf
sbb
lods
adc
sbb
xlat
sbb
test
push
int3
imul
out
(bad)
mov
repnz
xchg
sub
shr
push
push
call
in
cwde
lods
je
outs
push
jae
cld
or
iret
push
imul
lds
sub
cmp
push
adc
ins
imul
jmp
mov
ret
test
push
cli
ins
daa
pop
leave
add
imul
in
lock
mov
daa
pop
push
pop
mov
scas
nop
ret
cmps
and
mov
sti
rol
jns
mov
add
push
push
jae
jb
sbb
mov
and
xchg
std
les
ins
or
pop
arpl
inc
fld
xor
jns
and
cmp
xlat
mov
inc
clc
dec
inc
pop
or
xchg
cmp
cmps
bound
and
or
inc
movs
movs
xchg
pop
imul
icebp
mov
retf
sub
ret
scas
lods
push
pop
std
cmps
scas
aas
mov
jae
xchg
xor
or
retf
in
int3
mov
aaa
rcl
cli
push
das
stc
ret
pop
cmp
fwait
movs
stos
xchg
and
cld
lds
cld
addr16
sub
xchg
cmps
nop
push
js
outs
sub
pop
sub
ret
loopne
xchg
xchg
mov
xchg
xchg
sbb
mov
idiv
lea
xchg
jnp
xchg
in
mov
inc
xlat
in
stos
lea
repz
fs
fld
mov
rol
in
add
pop
jae
cmp
pushf
sub
dec
push
jno
shl
scas
push
add
(bad)
jmp
jns
mov
pop
mov
pop
lock
mov
xchg
ins
imul
xor
int3
mov
jmp
in
push
loopne
int
(bad)
or
out
ss
mov
push
fmul
ins
or
jb
push
xchg
(bad)
shl
jo
jle
adc
xor
jmp
xor
movs
jno
outs
aaa
mov
add
and
iret
repz
cmp
adc
dec
adc
xchg
and
lods
mov
mov
dec
xor
ret
aam
into
adc
in
jp
adc
ins
test
mov
stos
imul
cdq
mov
fdiv
fadd
(bad)
sub
(bad)
mov
sbb
jge
dec
pop
mov
add
sahf
cs
adc
rcl
and
jle
sbb
mov
jmp
imul
dec
loop
fs
mov
out
inc
push
cdq
sub
aam
mov
jae
pop
pop
or
xchg
cmp
and
jno
inc
push
or
je
test
sti
data16
cmp
sbb
mov
jns
ficom
arpl
pop
pop
sbb
mov
xor
push
cdq
das
mov
jp
jbe
repz
add
push
sbb
and
jae
dec
mov
mov
psubd
arpl
out
test
mov
pop
add
aaa
dec
add
mov
or
jg
arpl
xlat
sbb
pop
sahf
pop
sti
int
sbb
mov
mov
ss
mov
cmp
xor
or
(bad)
adc
popa
cmp
movs
mov
call
pop
mov
lods
push
xchg
jae
or
lods
sub
(bad)
sub
not
test
call
aaa
inc
xor
cmp
mov
hlt
cmps
out
test
ins
cmp
loope
es
repz
sub
scas
add
lfence
fld
dec
cmp
clc
outs
scas
sbb
(bad)
cmc
inc
adc
cmp
push
jmp
shl
retf
inc
push
out
cmp
sbb
es
pop
xor
lock
and
pop
sbb
dec
pop
sub
mov
mov
add
and
sar
shl
(bad)
fadd
lods
mov
pusha
fcomip
ret
movs
or
in
retf
xchg
jg
std
mov
in
cwde
ds
jle
inc
cmp
xchg
pop
adc
inc
stos
pushf
arpl
movs
dec
sub
xchg
fs
mov
fcom
inc
cmp
mov
loope
push
fld
ja
pop
loopne
add
mov
arpl
daa
or
cmp
scas
popa
mov
(bad)
(bad)
mov
cmp
mov
mov
jns
mov
repz
pop
adc
aas
(bad)
bound
repnz
inc
shl
ret
mov
mov
fisttp
sub
cmp
ja
push
push
xlat
(bad)
push
fsub
dec
cmp
icebp
outs
mov
jl
imul
push
mov
(bad)
lds
jns
mov
sbb
jae
mov
add
mov
push
mov
mov
pop
movs
mov
pop
mov
mov
push
adc
and
aas
outs
adc
(bad)
hlt
es
add
add
adc
xchg
mov
pop
pop
and
fstp
ins
inc
sub
mov
fcomp
lods
cs
add
jecxz
outs
pop
xchg
out
out
add
jl
mov
test
out
sti
xor
jmp
or
call
lods
(bad)
aad
nop
dec
jo
mov
inc
sub
push
enter
fwait
mov
cmp
jle
dec
pop
inc
sub
test
leave
dec
push
cmps
jg
clc
pop
stos
imul
outs
jge
push
jg
pushf
jne
stos
add
fsubr
xchg
adc
test
call
jecxz
stos
add
push
iret
clc
call
mov
clc
cmc
and
fld
xchg
sub
xor
mov
mov
pop
xchg
sub
adc
mov
rol
sub
add
mov
and
sub
aas
scas
fdiv
inc
fdivrp
xchg
mov
rcl
pop
cmp
or
aaa
sbb
fwait
xor
add
jb
add
xchg
loop
jns
inc
jle
outs
call
je
pop
les
daa
stos
cdq
and
int
scas
and
dec
pop
push
in
nop
sub
xor
hlt
xchg
cmps
inc
sub
push
ja
cmp
add
lea
stc
scas
sbb
sub
dec
xchg
arpl
sti
les
movs
jecxz
mov
or
sbb
movs
out
inc
mov
cmp
xchg
stos
pusha
jbe
call
stc
pop
lea
push
test
call
sbb
(bad)
enter
xlat
fisttp
or
cmp
je
jo
popa
and
mov
fwait
imul
pop
pop
in
jmp
sti
adc
lock
dec
in
mul
int
mov
cli
pop
fist
int3
inc
fstp
leave
push
mov
call
pop
fwait
dec
xlat
dec
adc
pop
out
pop
jns
and
or
cmp
sub
fs
jmp
(bad)
mov
sub
movzx
out
mov
push
dec
test
(bad)
rol
in
push
iret
adc
sub
add
pop
sbb
or
popa
fldenv
repz
adc
test
mov
call
pop
pop
and
sbb
mov
pop
xchg
stos
sbb
fcom
jecxz
aad
and
mul
mov
cmp
fst
scas
mov
cmps
and
popa
loop
popf
call
jle
(bad)
call
in
sahf
inc
rcl
aas
sbb
dec
movs
push
bound
mov
int
pop
div
sub
xchg
mov
iret
jmp
inc
mov
mov
jb
sub
dec
mov
ds
rol
push
fisubr
mov
jo
shl
sbb
pop
fxch
lahf
test
push
and
cmps
adc
dec
jae
push
jb
pop
repz
push
mov
in
adc
pop
sti
lahf
in
bound
cs
sbb
sbb
std
mov
dec
in
test
inc
jp
arpl
stc
add
mov
xor
xor
add
push
xchg
xchg
out
fiadd
mov
sahf
int3
out
push
xchg
dec
pop
jns
pop
ja
dec
rcr
outs
cmp
mov
arpl
or
adc
mov
pop
mov
xor
pop
cmc
retf
gs
idiv
pop
(bad)
fnstenv
int
add
in
aas
aas
pop
js
and
jns
cmp
loopne
push
out
mov
int3
pop
push
inc
cmp
inc
sar
and
xor
inc
mov
mov
mul
pop
aam
push
add
mov
outs
mov
inc
pop
or
push
xchg
pop
xor
mov
(bad)
jg
and
fisub
cmp
push
push
dec
jbe
ret
add
in
sbb
add
dec
call
rcr
cmp
xor
push
xor
mov
add
pop
pop
mov
jmp
adc
sbb
mov
or
mov
popf
xchg
out
push
cmp
jmp
in
sub
imul
hlt
mov
imul
xor
pop
mov
jge
out
push
mov
xchg
dec
jno
pop
mov
mov
adc
xlat
std
or
loop
mov
mov
movs
jo
arpl
lods
out
xchg
cmp
mov
push
push
stc
push
scas
mov
xchg
mov
push
xor
shr
sbb
jnp
sbb
or
fidiv
icebp
sbb
add
inc
mov
xchg
pop
nop
ret
scas
cmp
pusha
pop
push
sub
pop
iret
sub
movs
lock
jmp
jmp
sti
hlt
mov
sahf
lock
jo
rcr
arpl
inc
shl
or
sbb
or
push
sub
or
fisttp
inc
cmps
scas
and
movs
dec
cdq
lahf
mov
les
inc
shl
aas
lea
add
push
cs
adc
jmp
pop
dec
cdq
xchg
pop
pushf
out
or
fidiv
loopne
xchg
jge
add
scas
push
in
cmps
outs
mov
xor
sub
push
xor
mov
int3
scas
rcr
addr16
hlt
dec
jb
sub
inc
xchg
pushf
repnz
mov
xor
push
add
(bad)
xchg
iret
push
js
into
stc
cli
hlt
sub
das
sar
mov
imul
loop
fnstsw
pop
mov
fidiv
push
cmp
mov
xor
or
pop
stos
or
in
sub
push
add
es
add
inc
into
or
je
add
push
mov
dec
and
aam
add
sahf
icebp
dec
cli
arpl
popf
xlat
sbb
add
push
inc
test
pop
dec
sar
dec
in
ss
(bad)
pusha
jmp
jg
push
push
cmp
jecxz
cmp
sub
xchg
sub
shl
(bad)
jp
rep
inc
mov
std
sbb
aad
cmp
jns
pop
stc
pop
mov
sbb
ret
jmp
pop
jmp
pop
or
push
push
dec
jne
test
ins
sbb
and
cmp
xor
sbb
call
sbb
int
arpl
loop
retf
dec
ja
mov
mov
aam
xchg
push
nop
in
inc
cmp
dec
inc
arpl
jl
add
cs
add
loope
xchg
push
rol
hlt
mov
jg
pop
ret
jp
call
jno
imul
lahf
sbb
popa
dec
icebp
adc
popf
iret
cwde
loop
daa
add
sub
xor
inc
ret
imul
ins
rol
cmps
fmul
cli
push
sbb
dec
dec
xor
pop
lods
out
loopne
add
sbb
lahf
xchg
shl
adc
xchg
(bad)
fsub
les
dec
lods
mov
jbe
fiadd
sbb
out
jbe
loope
xchg
shl
or
push
das
dec
pop
xchg
test
popa
test
ss
xchg
jo
push
ret
mov
mov
fs
(bad)
iret
mov
aaa
in
mov
adc
add
std
add
jmp
mov
or
cmps
inc
std
xchg
push
sub
jo
stos
aad
ins
add
les
add
stos
cwde
sahf
lds
jo
fsub
popa
out
sbb
movs
dec
sbb
shr
adc
hlt
in
mov
ins
push
xor
sub
pop
int3
test
movs
dec
movs
jb
push
dec
in
addr16
loope
movs
repz
lea
ret
bound
pop
jp
cmp
mov
dec
add
add
jmp
fistp
arpl
push
movs
push
movs
pop
push
out
mov
mov
gs
xlat
xchg
gs
sbb
xchg
add
or
lock
cli
cmp
fild
daa
in
push
dec
xor
(bad)
bound
in
enter
cdq
sub
(bad)
loopne
fmul
imul
sub
jl
hlt
je
pop
repnz
int3
mov
retf
push
lahf
push
or
pop
push
or
cmps
rol
xchg
gs
shl
das
cmp
gs
xchg
arpl
mov
in
xchg
ins
sub
in
mov
test
les
pushf
cmp
mov
inc
and
lods
or
addr16
imul
add
(bad)
jmp
adc
inc
push
xor
scas
inc
push
sbb
ret
mov
int3
inc
loopne
shl
nop
xlat
mov
mov
inc
inc
jno
jb
adc
addr16
push
inc
xchg
out
pop
xchg
stos
push
rdpmc
inc
push
push
jl
loop
mov
call
ret
ret
ins
mov
jne
imul
ror
lds
or
in
pop
xchg
push
sbb
xchg
and
mov
dec
jno
jmp
shl
jg
into
or
popf
clc
mov
out
jp
popa
out
push
shr
ret
pop
sbb
mov
stc
out
cmp
loopne
sbb
cmps
into
pushf
adc
(bad)
out
xor
push
stc
mov
mov
lock
or
fldenv
mov
popa
pop
sti
int
push
push
popf
push
xchg
add
xchg
mov
add
jae
adc
cmp
sub
lfs
and
das
push
jno
cmp
loope
mov
loopne
imul
mov
xlat
not
lods
bound
pop
mov
mov
cmp
and
call
cmp
or
repz
fiadd
sbb
jae
into
cmp
sbb
sub
repnz
arpl
dec
cmp
sub
test
test
adc
pop
(bad)
jo
out
addr16
mov
mov
pop
sbb
bound
jle
adc
shl
aam
fisub
shl
adc
or
scas
iret
mov
lock
bound
leave
or
inc
mov
jge
popa
icebp
cmp
jo
mov
cwde
gs
daa
pusha
xchg
in
mov
fs
pop
js
(bad)
push
outs
xor
jnp
nop
test
lods
and
mov
(bad)
dec
sbb
add
ror
dec
(bad)
adc
jge
js
xor
jbe
cmp
lea
cld
scas
sbb
xchg
repz
xchg
add
jg
inc
dec
ficomp
retf
repz
out
outs
jge
div
push
repz
rcl
inc
pop
sbb
sar
es
push
adc
mov
shl
and
push
cmps
aaa
out
loop
shl
out
rcl
mov
and
retf
ds
repnz
inc
int3
mov
cmp
inc
mov
jge
sub
jp
fsubrp
cmps
pop
mov
inc
or
jle
adc
sbb
push
jns
test
retf
(bad)
fcomp
imul
ror
jecxz
sub
(bad)
mov
(bad)
ss
fldcw
xchg
popa
arpl
fadd
xchg
cwde
daa
mov
sbb
mov
(bad)
pop
cmc
xor
inc
or
xchg
stos
mov
int3
fsubr
out
add
pop
out
xchg
xchg
pusha
pushf
xor
inc
rol
push
lock
add
sub
fisub
dec
(bad)
retf
rcl
sbb
mov
cmp
inc
xchg
dec
mov
stc
rcl
inc
adc
adc
hlt
sbb
mov
and
std
inc
cmp
cld
shl
mov
outs
and
sub
jno
push
dec
ins
mov
clc
mov
fmul
pop
dec
pop
fwait
or
ds
jae
and
cmp
xor
repz
xchg
ins
dec
pop
popf
xchg
aaa
inc
cli
fsub
ret
nop
sbb
jne
arpl
xor
adc
inc
jb
in
sub
inc
in
(bad)
retf
adc
daa
(bad)
(bad)
(bad)
and
sub
repz
jg
pop
pop
cld
test
aaa
aam
repnz
and
mov
push
call
retf
adc
mov
push
adc
int3
sbb
and
jl
stc
xchg
addr16
jbe
push
lods
inc
cmps
mov
enter
sub
je
cld
inc
pop
ja
cmp
or
cwde
(bad)
inc
mov
inc
add
das
jecxz
xlat
ins
push
ins
stc
stos
push
mov
mov
cmc
bound
in
test
push
adc
into
add
push
cmp
fisubr
stos
xor
jne
sar
popa
or
mov
pop
scas
or
scas
pop
test
pop
jo
out
cmp
push
arpl
loop
test
lods
sub
popa
inc
inc
xchg
repz
out
sub
je
in
cmps
push
pop
mov
cmp
outs
and
pop
stc
jns
pop
btc
(bad)
out
outs
or
mov
repz
mov
js
jnp
sub
and
xchg
shl
bnd
int3
mov
mov
aam
xor
outs
sbb
(bad)
retf
lock
ins
adc
jmp
push
daa
add
inc
retf
lods
mov
mov
mov
cld
mov
cmp
movs
add
lahf
int3
adc
mov
pop
mov
pushf
add
pop
jns
sahf
adc
and
das
xchg
xor
out
scas
pop
cli
fdiv
push
mov
shl
pop
push
enter
cmp
outs
pop
push
inc
rcl
gs
ret
outs
add
push
inc
and
es
dec
cmp
ret
loop
fs
ins
cdq
dec
push
push
sbb
push
push
int3
and
mov
xchg
sahf
data16
int
(bad)
push
mov
fwait
sub
popf
mov
(bad)
xlat
sub
test
gs
cmp
ds
sbb
(bad)
fmul
iret
icebp
pop
bound
push
mov
dec
or
inc
jns
pop
popa
xor
out
mov
push
or
mov
int
(bad)
xchg
jl
aas
mov
cld
fwait
mov
(bad)
dec
daa
fdivr
push
gs
mov
outs
xchg
lea
imul
retf
adc
push
add
dec
iret
jl
cmp
or
mov
mov
push
(bad)
mov
pop
movs
xchg
sbb
sar
cs
pop
imul
push
mov
jle
jmp
mov
xor
pop
cdq
or
cli
stc
adc
enter
or
out
and
and
int
(bad)
sbb
jp
out
ss
mov
jnp
std
enter
test
call
shl
pop
pop
jb
xchg
ds
es
ins
sbb
imul
cdq
xchg
sahf
ja
add
mov
test
mov
xchg
xchg
inc
xchg
xor
adc
je
jno
dec
add
cmp
ins
sub
pop
jmp
aam
out
pop
mov
add
push
xor
nop
and
adc
int
push
jg
sbb
or
mov
scas
retf
lods
mov
and
rcl
jecxz
push
push
lods
movs
pusha
xchg
jl
xor
shr
fidivr
mov
adc
in
fcomip
sub
rol
mov
cmp
fst
push
lods
pop
test
test
and
push
jbe
push
add
mov
xor
sbb
push
sub
(bad)
sub
inc
fcom
lods
dec
add
leave
mov
ins
push
mov
cld
cdq
sbb
data16
ja
jbe
mov
adc
in
add
fsubrp
(bad)
shr
mov
xchg
pop
sti
or
hlt
xchg
fdivr
mov
mov
call
shl
repz
fbstp
xor
retf
xchg
inc
or
fwait
and
xchg
pop
fwait
movs
daa
xchg
fwait
fwait
std
aam
fmul
push
dec
add
jp
hlt
xchg
addr16
mov
rol
fs
dec
xor
dec
pop
xor
out
inc
xchg
xor
pop
repz
cmp
mov
cmp
mov
gs
dec
xchg
adc
pop
or
mov
les
jl
int
cmp
or
sub
int3
xor
out
stc
or
fnstenv
or
jmp
sbb
aas
push
in
xor
sahf
imul
add
jb
shl
jmp
fdiv
daa
call
stos
test
inc
and
(bad)
inc
(bad)
xor
mov
(bad)
mov
fcomp
retf
xchg
mov
inc
dec
add
ins
xor
cmp
das
push
push
jl
sub
clc
inc
pop
les
hlt
jg
test
mov
adc
xchg
cmovns
xor
cld
scas
add
cs
sbb
sbb
xchg
and
iret
movs
(bad)
in
mov
fcmovnu
rcr
scas
icebp
push
movs
aaa
and
sbb
fidiv
mov
clc
jo
out
(bad)
out
dec
jbe
push
adc
xchg
loop
mov
push
xchg
ins
fiadd
cmp
(bad)
adc
fcom
jnp
mov
cmp
pusha
sub
mov
jbe
bound
out
stos
push
and
xchg
fdivr
(bad)
popa
std
hlt
dec
lds
jmp
xchg
mov
test
or
test
mov
jmp
mov
sti
inc
add
into
mov
in
jae
arpl
sbb
xor
repz
dec
test
inc
in
push
loopne
mov
sbb
push
mov
movs
jl
neg
arpl
aam
pusha
(bad)
fwait
lods
(bad)
jle
fwait
pop
pop
dec
fbld
push
cmp
jne
loopne
jmp
pushf
ficom
stc
retf
es
mov
jo
sub
inc
inc
mov
pop
popf
ret
cs
jl
xchg
lock
in
xchg
push
sub
mov
ja
sub
adc
test
aad
aas
and
mov
outs
data16
outs
std
cmp
fsubr
lock
dec
jbe
cmc
cmp
inc
mov
jecxz
cmp
xor
iret
arpl
push
cmps
adc
and
xchg
xchg
jmp
cs
push
clc
pop
pop
adc
and
sbb
cmp
jns
mov
xchg
bound
xchg
cmp
pushf
push
ret
pushf
xchg
icebp
bound
add
push
shl
stc
cmp
cmp
mov
dec
nop
mov
loope
mov
js
push
cwde
dec
add
les
mov
push
xor
aas
adc
lods
cmp
fwait
ja
mov
dec
fiadd
xchg
cdq
inc
add
pop
cmp
sub
jbe
out
sbb
mov
xor
dec
clc
pop
mov
fisubr
imul
cvtps2pi
jae
inc
call
fidiv
xchg
repnz
std
push
ficomp
repnz
lock
dec
loopne
lahf
push
lock
test
movs
into
cmps
call
push
test
push
and
xor
(bad)
jae
les
jle
xchg
add
mov
adc
inc
and
test
je
fist
cmp
and
pop
imul
(bad)
jo
mov
jno
mov
mov
mov
test
stc
sub
mov
sti
xchg
push
aam
div
sbb
test
jo
inc
add
inc
test
cmp
out
mov
jecxz
xor
sbb
fbld
dec
mov
xchg
xor
mov
cmp
and
ins
movs
sbb
test
jne
jp
push
std
loope
cli
sbb
or
test
les
push
test
push
stos
mov
jbe
dec
cs
cmp
arpl
(bad)
adc
test
adc
lock
mov
ret
and
jno
cwde
jmp
mov
cmp
in
fmul
icebp
sub
add
mov
call
push
jno
lock
dec
movs
in
adc
es
xlat
adc
aad
call
fst
pusha
inc
mov
inc
loope
les
(bad)
(bad)
cdq
push
add
shl
adc
cs
hlt
imul
mov
pusha
xchg
push
sahf
xor
jmp
mov
scas
dec
ja
in
xor
aas
sbb
rcl
test
pop
mov
addr16
mov
(bad)
imul
sbb
fcmovu
outs
fidivr
fistp
ins
sub
int3
add
ds
pop
rol
cmp
cmp
push
pushf
or
(bad)
inc
clc
in
adc
out
mov
mov
xrelease
sub
or
sahf
lahf
xor
scas
inc
aad
enter
or
fiadd
and
jmp
fsub
or
mov
and
adc
js
dec
outs
push
push
ret
lea
js
aad
cmp
ffreep
pushf
test
loop
mov
dec
push
rol
add
jmp
cld
js
adc
lahf
test
mov
cli
jns
jge
adc
loope
sahf
xchg
iret
outs
or
adc
(bad)
mov
push
xor
je
ins
pop
daa
cld
mov
jmp
gs
lods
repz
int
adc
push
stos
mov
hlt
jmp
pop
xchg
iret
popa
bswap
cmc
xchg
jnp
dec
sbb
cmp
in
in
cmp
jl
and
loop
sbb
stos
pop
adc
dec
pop
jge
arpl
or
gs
call
dec
add
call
push
test
or
inc
not
bound
dec
mov
cwde
out
mov
xlat
pop
hlt
aas
pop
imul
aad
movs
and
adc
aaa
cld
aaa
stos
add
imul
std
retf
fwait
jge
cmp
mov
lds
jmp
cld
inc
cmp
mov
in
xchg
adc
xor
data16
mov
iret
in
rol
fsub
or
sub
mov
mov
lahf
clc
push
jae
xlat
xor
sbb
idiv
ror
mov
jno
jmp
leave
mov
xchg
inc
das
jb
jl
stc
sub
pop
test
xchg
lods
dec
pop
mov
dec
sub
mov
mov
lods
mov
sahf
fimul
out
add
fs
push
std
add
inc
dec
test
test
pusha
xor
cmps
cli
mov
and
push
jp
in
sub
cmp
scas
push
mov
and
sub
mov
test
lods
xor
or
inc
shl
fwait
sub
repnz
stc
pushf
mov
xchg
add
pop
sub
add
sahf
retf
inc
push
xchg
xchg
iret
jmp
jns
movd
dec
jg
jae
aam
ss
test
add
(bad)
jmp
sbb
call
mov
scas
fs
call
loope
repz
push
or
push
cmps
mov
and
lds
adc
jo
mov
fsubrp
pop
sbb
stos
das
cmp
test
mov
xchg
xor
ret
ret
pop
fbstp
loop
aam
mov
test
mov
call
out
fwait
lahf
mov
ror
push
adc
fs
scas
ficom
push
mov
push
ds
pushf
jne
mov
call
or
push
sub
inc
loopne
in
or
jnp
or
adc
es
jbe
dec
ret
clc
ins
rcl
fst
pusha
xor
mov
test
cmp
inc
jl
pop
mov
push
dec
push
mov
push
lods
cwde
out
fwait
shl
jo
jmp
push
in
aaa
push
jp
or
sahf
rcl
jg
xchg
jae
xchg
aas
das
stc
enter
mov
push
jmp
jmp
push
retf
xchg
push
xchg
retf
pop
retf
sar
rcl
pop
mov
(bad)
(bad)
loope
push
mov
inc
shr
inc
push
pop
cdq
adc
mov
ffreep
xor
pushf
cmp
push
rcl
out
fnsave
xchg
imul
into
retf
imul
cld
inc
or
xor
push
jo
push
int3
das
ficom
cmp
add
mov
inc
pop
or
push
icebp
gs
xchg
shr
xchg
and
jne
xor
aas
adc
xchg
pop
add
nop
sti
dec
inc
jae
es
cmp
enter
add
add
fnstcw
cs
mov
jne
mov
ja
jmp
pop
xchg
(bad)
pushf
les
and
mov
callw
mov
add
test
add
(bad)
in
mov
sbb
rcl
xchg
das
out
shl
mov
cld
xchg
ins
retf
or
sub
in
pop
pop
mov
pop
cld
sbb
pop
lock
mov
retf
jnp
dec
pop
mov
mov
lds
(bad)
lods
daa
pop
mov
pusha
mov
push
add
call
jmp
jnp
jge
aaa
mov
jmp
cmps
(bad)
xor
div
push
addr16
mov
cwde
(bad)
lock
adc
or
addr16
dec
xor
retf
and
and
mov
outs
shl
pop
fsubr
mov
out
mov
aaa
jo
cmp
dec
dec
(bad)
fst
inc
pop
ficomp
adc
mov
iret
(bad)
push
xor
(bad)
xlat
sub
xor
pop
jge
test
mov
push
std
fwait
mov
stos
enter
and
fld
ins
sub
pop
jae
jl
pop
js
in
rcr
dec
movs
cdq
add
ret
dec
lds
sub
mov
dec
out
push
mov
fmul
cmps
fwait
pop
push
cmp
sub
test
das
fiadd
and
stos
pusha
mov
(bad)
not
loop
add
push
and
mov
and
cwde
(bad)
xor
cmp
jo
mov
xchg
mov
movs
adc
cwde
pop
inc
bound
fisttp
lock
mov
and
sbb
jle
jmp
sbb
dec
loope
pop
jle
sub
fistp
push
mov
test
sahf
sub
mov
or
pop
pop
inc
clc
add
sbb
ror
test
arpl
cmp
cmc
dec
hlt
sbb
xchg
mov
push
stc
xor
outs
inc
(bad)
mov
lods
cdq
imul
cmp
sbb
test
and
pop
jmp
dec
xchg
mov
add
jb
jb
ins
(bad)
call
mov
mov
cwde
add
adc
leave
cdq
cmps
cmp
add
jg
mov
mov
out
shl
lock
js
sub
cmps
aaa
dec
adc
hlt
jne
cdq
xchg
xchg
sbb
nop
mov
pop
bound
cmps
(bad)
pop
mov
dec
in
fld
loopne
adc
sub
inc
inc
sar
retf
repz
jmp
mov
sbb
imul
lar
ret
pop
dec
jb
sti
pop
mov
inc
scas
jmp
adc
dec
sub
outs
mov
jge
xor
outs
scas
movs
movs
and
bound
(bad)
mov
xchg
pop
or
inc
inc
mov
and
pop
(bad)
fdivr
push
test
jo
fwait
mov
cmp
jge
ds
cld
pop
adc
test
mov
add
test
hlt
push
cmp
sar
mov
push
popf
pop
int
rcr
mov
cs
xchg
(bad)
movs
fdiv
cmp
(bad)
imul
lea
jbe
iret
rcl
in
jo
lea
xchg
and
stos
mov
sub
clc
sbb
sub
xchg
sbb
lea
push
mov
cmc
mov
or
or
aas
cwde
and
dec
jp
dec
in
data16
pop
xchg
popa
mov
imul
sbb
or
and
adc
cmp
xchg
loopne
int
pop
sbb
mov
cmps
clc
cmp
push
push
sub
push
lock
retf
mov
sub
push
dec
clc
sub
repnz
aaa
call
sbb
or
sbb
mov
cmp
iret
ins
xor
jne
inc
lods
ins
out
cmp
xchg
shl
cmps
test
icebp
(bad)
and
ins
jmp
xchg
mov
ins
hlt
push
dec
nop
mov
loope
xchg
dec
jge
mov
(bad)
xlat
in
mov
dec
dec
mov
cmp
mov
jp
test
lock
cmp
cmc
jge
sub
ss
js
ins
(bad)
sub
fist
xchg
lock
cli
cmp
imul
or
cmps
pop
pop
dec
xor
rcr
cmp
jae
std
mov
call
imul
pop
or
cwde
les
(bad)
(bad)
push
out
push
sbb
imul
adc
imul
repz
sar
xchg
(bad)
jnp
ret
mov
push
cmp
jecxz
xchg
popa
test
shr
into
orps
pop
pop
aam
call
dec
and
inc
adc
test
repz
jne
fs
push
fdiv
dec
ss
push
das
das
ror
inc
mov
movs
int3
in
jne
out
sti
sbb
cmp
test
fwait
mov
retf
stc
jb
test
inc
pop
mov
ja
sub
(bad)
sbb
lods
mov
pop
test
sub
inc
add
mov
test
sahf
test
mov
push
(bad)
pushf
stos
ss
enter
push
popf
mov
addr16
or
jnp
les
movs
mov
dec
fidivr
(bad)
fisubr
fadd
sbb
and
call
xchg
sti
mov
movs
jbe
fs
cmp
add
fstp
lods
or
mov
push
jg
sbb
call
or
sbb
popa
mov
fcomp
arpl
sbb
pop
jb
std
sub
jo
outs
xchg
or
or
xor
in
in
pop
(bad)
(bad)
out
(bad)
out
sub
push
in
dec
mov
xchg
xor
imul
mov
inc
sbb
cs
mov
dec
pop
inc
fsubr
(bad)
not
and
pop
imul
inc
sbb
and
xchg
ss
pop
in
mov
cli
push
xchg
mov
xchg
bound
fwait
retf
inc
cmp
inc
call
fcomp
add
and
sbb
sub
mov
out
push
mov
sbb
aaa
gs
setge
repnz
scas
ret
adc
aaa
(bad)
dec
ret
fwait
lods
ret
das
pop
sti
add
nop
(bad)
or
mov
push
sbb
imul
retf
jge
das
leave
push
das
popf
jnp
rcl
dec
js
pop
jle
and
mov
xor
dec
mov
sbb
fsubrp
les
nop
scas
add
data16
mov
into
and
cwde
inc
jne
ds
(bad)
xor
add
pop
jnp
cmps
test
movs
sub
idiv
push
cmps
push
ror
adc
aaa
mov
push
and
hlt
mov
ss
pop
aad
xor
adc
addr16
cmp
clc
add
pop
sbb
sar
fsub
sbb
imul
sub
rol
mov
push
rcr
sbb
aas
fnsave
out
sbb
and
cmp
rcl
or
lods
pop
pushf
dec
hlt
repz
mov
and
xchg
call
cmp
cli
inc
cmp
fs
add
les
mov
inc
push
push
adc
mov
sub
jbe
xor
and
fisubr
inc
imul
and
bound
cld
mov
fstp
sbb
lea
bound
movs
ret
(bad)
jmp
dec
pop
into
ret
sti
cmp
dec
pop
jno
xor
add
sub
ins
pop
imul
out
jge
jb
cmps
int3
inc
push
fdivr
dec
pop
(bad)
pop
pop
push
mov
out
jecxz
dec
add
sbb
fidivr
or
cmc
lods
jbe
daa
mov
sbb
mov
(bad)
aam
pop
cmp
dec
mov
dec
in
lods
dec
mov
push
push
imul
inc
test
xor
mov
in
jnp
sbb
int
adc
out
push
xor
xor
leave
mov
test
mov
mov
or
not
shl
adc
ds
fadd
dec
stos
push
sahf
xchg
xor
cmps
outs
(bad)
lods
xor
ror
lea
gs
dec
xor
sbb
adc
jmp
jg
jb
mov
jl
xor
stos
xchg
mov
test
mov
pop
out
sub
daa
add
xchg
push
repnz
js
add
inc
push
rol
out
shl
mov
sub
push
mov
inc
mov
xchg
mov
ror
mov
pop
xchg
retf
xchg
xor
adc
ds
mov
sbb
mov
pop
fbld
and
imul
push
sbb
int
rcr
push
mov
jge
ja
retf
outs
jp
cmp
leave
mov
jl
imul
mov
push
dec
mov
ds
dec
std
scas
xor
ret
std
xchg
iret
pop
mov
hlt
mov
dec
cmp
dec
xchg
fistp
jb
pushf
mov
stos
cmps
xor
mov
jb
sahf
fmul
jne
into
pop
jne
jecxz
cmp
imul
xchg
mov
pop
jp
mov
(bad)
xchg
jle
call
push
sub
mov
neg
jns
scas
jle
bound
cmp
lods
adc
fcomp
jle
adc
nop
stos
add
xor
xlat
push
adc
xchg
jmp
or
and
inc
mov
cdq
ds
mov
and
mov
nop
pop
xor
jp
sahf
dec
call
push
jecxz
adc
dec
test
leave
pop
psubusb
xchg
rol
sub
(bad)
rcl
leave
pusha
jmp
stos
movs
out
adc
jb
loop
lock
std
cwde
das
push
test
push
pushf
mov
(bad)
sbb
aad
sub
ficomp
add
cmc
jmp
(bad)
xchg
adc
test
sub
pop
es
shl
dec
jbe
xchg
pop
jmp
(bad)
repz
push
cwde
cmp
into
xor
shl
jp
adc
data16
or
cdq
add
adc
outs
in
jo
fisttp
scas
dec
retf
and
adc
fxch
xchg
push
rcl
inc
mov
mov
imul
mov
sub
movs
adc
or
cdq
xchg
std
fnstsw
out
std
rol
(bad)
ror
loop
mov
sbb
icebp
out
cmovg
mov
icebp
pop
push
mov
(bad)
dec
out
sbb
outs
sub
adc
xchg
mov
sub
add
add
gs
out
stos
(bad)
hlt
ins
cmp
or
dec
pop
xor
xchg
call
cmp
dec
shr
and
cmp
adc
popa
or
mov
mov
mov
push
mov
xchg
stos
adc
jbe
mov
dec
stc
push
int3
in
test
nop
pop
adc
into
jno
in
mov
pop
std
xchg
addr16
test
fwait
or
pop
loop
movs
jp
lea
cli
int3
xchg
sbb
dec
mov
cmp
pop
mov
xor
gs
dec
inc
neg
mov
jle
fcom
das
fist
pop
mov
pop
(bad)
fisttp
mov
mov
dec
or
jge
int
(bad)
ds
(bad)
xor
push
push
cmp
shl
jmp
pop
push
test
es
popa
add
idiv
leave
stc
cmp
lods
cmp
ret
ret
gs
hlt
imul
push
neg
fistp
icebp
xor
es
mov
rol
ss
sbb
jne
(bad)
cmps
(bad)
les
xchg
mov
lods
jmp
cld
scas
shr
adc
push
xchg
push
cmps
push
xor
mov
mov
ret
and
loope
popf
sbb
inc
outs
fild
pop
push
addr16
cmp
dec
mov
pushf
fist
shl
rol
out
out
or
lds
imul
xchg
or
mov
les
sub
inc
sahf
mov
sbb
dec
and
push
sti
jae
cmp
test
adc
out
leave
in
das
jge
mov
ja
xchg
xchg
outs
cmp
inc
mov
js
retf
pop
retf
xchg
jl
inc
adc
jo
ds
inc
addr16
push
pop
or
adc
jb
adc
mov
dec
jns
add
mov
lahf
ret
jmp
mov
dec
push
bound
lods
pop
mov
xor
aaa
mov
cmp
in
push
mov
push
pusha
adc
pusha
rol
cwde
or
add
or
sbb
and
adc
jns
movs
cli
lods
or
cmps
xor
xor
mov
cld
enter
xor
pop
daa
mov
jg
sub
jecxz
jne
ins
push
cmp
xor
das
(bad)
sub
xchg
sar
je
xchg
mov
or
test
sar
dec
xor
outs
mov
jo
add
rol
mov
push
fiadd
es
scas
add
dec
dec
jmp
scas
xchg
iret
aas
rcr
cdq
mov
xor
mov
xor
jae
dec
jno
fiadd
loope
inc
mov
mov
shl
std
fwait
xchg
adc
xchg
push
jge
aad
popa
push
and
mov
fist
imul
pop
cmp
cmp
mov
or
and
jecxz
xchg
xor
lock
repz
jo
test
mov
or
jnp
push
fcom
fistp
outs
pop
ins
sub
add
test
call
rcl
rcr
add
mov
scas
cmp
and
cmp
and
dec
popa
push
(bad)
jmp
and
pop
aaa
cmps
(bad)
dec
push
retf
xchg
jmp
stos
sbb
mul
jbe
mov
and
shr
sub
imul
les
add
sbb
sbb
jb
jno
cmc
test
fs
xchg
es
or
movs
inc
push
cmp
ins
(bad)
jmp
and
ins
add
xchg
or
bound
out
sub
jg
xor
test
sub
stos
mov
inc
out
pop
jo
fstp
xor
stc
cmc
lock
dec
fisub
sbb
dec
adc
pop
rcl
sub
and
cld
pushf
dec
stos
ja
aas
adc
xor
jbe
outs
jno
xor
out
mov
push
xor
push
push
add
sub
cmps
and
ss
cmp
mov
leave
adc
scas
jmp
or
xchg
ins
call
dec
into
jae
in
or
add
sub
pop
out
mov
rcr
inc
push
jle
int3
inc
inc
add
rcr
sub
dec
jle
sar
scas
fidivr
sbb
outs
arpl
or
out
movs
jns
jb
gs
cmp
aad
pop
sbb
push
(bad)
jne
mov
ret
mov
mov
vcvttss2si
sub
mov
mov
stc
push
pop
mov
add
and
retf
mov
pop
cmp
call
in
ins
mov
stc
xchg
mov
(bad)
lods
or
frstor
push
mov
inc
sub
dec
sbb
movs
jp
and
sti
jbe
in
xor
(bad)
sahf
adc
inc
loop
pop
jmp
cdq
jmp
dec
aam
push
ja
pop
mov
in
push
ret
rcl
or
adc
add
dec
hlt
lds
mov
scas
push
pusha
mov
scas
adc
xor
mov
and
lds
add
arpl
jmp
daa
cmps
xor
int
inc
out
sbb
fsubp
out
cs
test
push
cmp
inc
fist
inc
push
stc
leave
cmp
(bad)
daa
and
cs
fs
jne
jno
cli
push
arpl
(bad)
cs
jmp
xchg
aaa
shl
sbb
sbb
adc
cmp
fs
mov
cmp
ficom
xchg
dec
jne
xchg
inc
or
in
mov
shl
stos
dec
add
int
les
imul
cmp
psadbw
leave
int3
xchg
lea
hlt
popf
jecxz
mov
jb
sbb
(bad)
inc
pop
loop
cwde
aam
or
add
and
daa
mov
icebp
add
push
cmp
shl
xchg
movs
cmp
out
mov
sbb
jmp
rcl
ins
test
adc
cmps
cmps
cmp
enter
sbb
push
nop
xchg
(bad)
jecxz
xlat
ret
push
shr
inc
jnp
lods
loopne
sbb
dec
sahf
test
in
add
and
(bad)
jne
jbe
(bad)
iret
sbb
test
sti
and
adc
es
loopne
ins
adc
dec
pusha
or
push
lock
add
mov
popa
jmpw
adc
test
xor
arpl
add
pop
sahf
loope
lahf
xchg
cmp
bound
popa
fimul
xchg
cli
in
(bad)
shr
out
mov
ja
mov
push
dec
mov
adc
xchg
stc
push
fst
sub
xor
add
(bad)
mov
in
xchg
ja
fdivr
scas
jno
adc
(bad)
dec
imul
jg
add
jo
jno
jge
pop
mov
mov
imul
dec
mov
sbb
mov
gs
and
mov
push
rcl
add
or
fcomi
mov
dec
sahf
shl
in
adc
sub
imul
icebp
inc
xchg
and
into
nop
xor
xchg
inc
leave
je
into
mov
neg
mov
push
(bad)
jno
inc
sub
daa
sbb
cmps
adc
sub
sahf
(bad)
xchg
cmp
or
and
dec
mov
int
sbb
xchg
mov
cmc
out
(bad)
daa
imul
inc
inc
(bad)
pushf
fadd
test
jp
mov
fucomp
jmp
mov
dec
and
mov
mov
pop
sahf
mov
(bad)
jb
(bad)
iret
xlat
jb
int3
ret
sbb
neg
push
arpl
push
ret
adc
and
xor
dec
pop
fcom
mov
cmp
mov
xor
mov
jp
movs
cdq
fistp
aam
int3
cmp
mov
ret
ret
fisubr
push
mov
jno
xchg
cmps
push
jne
dec
aam
push
or
push
nop
or
push
lods
in
int
fmul
je
cmp
fiadd
(bad)
cs
mov
jle
sar
sub
push
sub
pusha
mov
sbb
sub
in
fstp
mov
popf
adc
add
or
xchg
sbb
dec
out
dec
das
and
mov
xchg
loope
cs
push
aam
div
lds
std
les
loop
idiv
cmp
imul
jp
and
vpunpcklwd
sbb
test
adc
call
push
sub
mov
cmps
data16
(bad)
mov
and
mov
(bad)
(bad)
jecxz
ror
data16
pop
mov
inc
and
iret
jg
inc
or
loop
pop
jb
scas
hlt
push
mov
sbb
aas
inc
inc
adc
shl
inc
es
js
test
or
cmp
adc
test
imul
aad
fbstp
adc
jp
pop
lahf
call
pop
fs
imul
jmp
pop
in
inc
or
daa
movs
aaa
cmps
sbb
lods
sbb
cmps
xchg
push
ror
cmp
pop
imul
(bad)
jb
mov
test
mov
in
mov
cmp
inc
ror
retf
pusha
ins
(bad)
fiadd
ret
popf
jle
cwde
mov
sbb
xor
cmc
dec
pop
scas
pop
add
jle
mov
cmp
or
fs
stos
dec
xchg
pop
and
sbb
cmp
mov
mov
(bad)
sub
sbb
cld
or
(bad)
pop
arpl
popf
add
arpl
aam
adc
xor
inc
aas
sbb
hlt
fadd
pop
je
lock
push
cmp
mov
cmp
sbb
aam
adc
cmps
inc
ret
mov
(bad)
sub
mov
mov
xchg
push
in
push
add
test
sbb
dec
js
push
test
cmp
jmp
push
xlat
movs
in
mov
rcr
or
addr16
lods
in
mov
mov
push
ret
xor
lods
or
sbb
adc
jge
fcomip
xchg
cmp
mov
cld
pop
lea
push
shl
(bad)
icebp
js
sbb
retf
cmp
fld
push
ror
loopne
cdq
imul
and
inc
sub
or
lds
popf
iret
xchg
add
inc
cmp
adc
xor
jecxz
(bad)
fwait
lock
and
cs
mov
lock
pop
hlt
sar
push
mul
ds
push
sahf
push
shl
out
or
add
gs
jo
xor
pop
dec
or
inc
adc
rol
in
fild
loope
jmp
xor
into
dec
cmp
js
pop
pop
es
push
mov
into
test
std
mov
mov
pop
mov
cmp
pop
pop
push
fstp
les
mov
cmps
push
inc
pop
mov
(bad)
inc
xchg
dec
and
mov
jle
cmp
scas
xchg
call
cs
in
dec
hlt
(bad)
add
jo
push
sar
dec
inc
and
mov
movs
xchg
pop
cmc
xchg
push
push
fstp
mov
adc
and
mov
movs
sti
adc
jns
push
cwde
cmp
inc
int3
clc
sahf
mov
xor
ret
cmp
(bad)
gs
adc
sbb
ins
push
jo
loopne
sub
cmp
sbb
mov
xor
aaa
shl
adc
fld
arpl
xchg
jmp
push
cmp
rcr
cmp
imul
call
mov
cmc
iret
fistp
push
movs
stc
add
lods
inc
int3
sbb
and
adc
xchg
enter
and
push
dec
jcxz
cmp
ror
add
loop
(bad)
cwde
xchg
scas
nop
(bad)
je
sbb
adc
jae
xchg
xor
adc
push
into
push
in
into
jp
in
in
iret
pop
dec
cwde
or
ins
cmp
jno
out
dec
cld
ins
adc
mov
lods
lea
test
or
das
mov
sbb
shl
stc
in
icebp
cmp
adc
jbe
xchg
adc
sub
dec
into
idiv
add
sbb
push
pop
lods
sbb
jmp
mov
jo
mov
jg
ja
xor
sub
out
jbe
dec
mov
jns
push
xchg
jg
pop
or
xchg
pop
je
repnz
or
pop
out
(bad)
mov
xor
bound
jnp
cs
das
adc
mul
sbb
cmp
mov
adc
mov
neg
sub
adc
fs
cmp
aad
sub
mov
push
cmp
setnp
bound
add
jo
cmps
scas
xchg
ror
ror
xchg
xlat
jnp
jns
(bad)
or
adc
call
inc
jp
cmc
or
cdq
xchg
aam
xchg
xor
add
sbb
adc
shr
inc
pop
push
sbb
push
cmp
sub
jl
nop
in
fisub
add
cmp
or
xor
aad
pop
cmp
pmaxub
repnz
dec
addr16
cs
jmp
shr
adc
xchg
stc
nop
fucomp
and
mov
mov
lods
xchg
fwait
push
push
mov
push
sbb
inc
addr16
arpl
sub
push
cmpxchg
mov
aam
xchg
lods
mov
push
jmp
inc
lock
or
pop
pusha
loopne
lahf
pushf
xor
fild
ss
ins
outs
inc
das
sbb
jb
jg
jp
stos
dec
adc
fcomip
xor
mov
pop
cmp
ds
jbe
lock
(bad)
ins
and
xlat
add
out
repz
dec
test
loope
not
adc
dec
retf
in
stc
mov
pop
aam
stc
or
fnsave
adc
aad
mov
jge
jg
mov
mov
cmp
ins
addr16
and
das
mov
retf
into
pop
sub
call
ret
xlat
sub
shl
ins
cmp
int
retf
dec
sbb
mov
cdq
adc
xor
scas
and
adc
pop
dec
jmp
ror
ja
sahf
retf
aaa
xchg
in
pop
popf
pop
mul
xchg
lds
pusha
scas
pop
lahf
aam
cs
pop
add
xchg
mov
ror
push
and
shr
aas
push
nop
das
loop
or
(bad)
addr16
mov
dec
jne
iret
mov
outs
xchg
stos
cli
mov
cli
fnsave
jno
inc
loop
imul
xchg
mov
cmps
mov
jg
inc
(bad)
fisubr
call
pop
mov
fnstsw
cmp
mov
lahf
xchg
sbb
daa
sbb
xchg
inc
mov
mov
add
fisubr
mov
jne
xor
das
mov
test
and
iret
sbb
bts
out
ins
pop
add
lds
xchg
cmp
mov
xor
sahf
call
(bad)
das
fstp
cli
cmp
out
out
or
fndisi(8087
mov
in
adc
push
into
cmps
(bad)
pop
aam
cmp
xchg
inc
scas
shl
in
push
sub
fdiv
mov
xchg
pop
shr
ds
js
cld
xor
adc
in
test
adc
or
nop
fisub
das
repz
jbe
push
gs
or
(bad)
sbb
call
and
sub
lods
xchg
dec
out
dec
out
(bad)
mov
jno
adc
arpl
jp
test
pop
fldenv
mov
xchg
in
mov
adc
cmp
push
cmps
mov
sar
iret
data16
pop
repz
out
and
fsub
hlt
jb
sti
ror
mov
pusha
sbb
push
js
lahf
mov
in
inc
movs
mov
push
jo
idiv
sub
mov
leave
and
loop
lds
fidiv
outs
xchg
sub
mov
in
jno
mov
cmp
aad
ret
jns
xlat
es
imul
into
inc
inc
retf
xor
or
ret
inc
stc
cli
outs
loop
or
icebp
and
mov
mov
push
mov
fld
sbb
lods
stos
fsub
inc
lock
cmp
mov
push
pushf
retf
cli
mov
and
xor
lods
add
iret
lea
fstp
add
movs
dec
sahf
dec
inc
(bad)
adc
sahf
fdiv
repnz
(bad)
fsub
ds
adc
rcl
mov
imul
jnp
dec
mov
in
ss
jno
imul
add
add
cmp
sti
sub
mov
mov
arpl
add
push
mov
jae
mov
aad
lock
pushf
mov
repnz
mov
sbb
pop
dec
pop
cmp
stc
adc
loop
adc
jns
xor
lahf
adc
aad
out
lahf
pop
jb
fisub
mov
outs
out
push
add
jnp
jns
fld
jmp
scas
mov
test
xor
jge
scas
lock
movs
leave
int3
dec
enter
pop
test
cmc
mov
mov
inc
in
aad
sbb
and
sbb
not
dec
push
in
movs
fsub
and
ins
adc
mov
fs
int
jns
and
js
and
js
fild
rcr
dec
cmps
movs
int
dec
xchg
clc
test
push
shr
rcl
and
pop
pop
call
cmp
jnp
int
aad
fcom
and
lods
sbb
(bad)
clc
ret
clc
aaa
mov
jmp
jle
inc
out
sub
lahf
out
cld
sub
call
adc
js
mov
or
pop
inc
aam
xor
mov
daa
dec
(bad)
xlat
xor
call
pop
pop
xor
aam
cdq
dec
punpcklbw
xor
or
cld
cmps
dec
mov
cwde
lock
adc
jno
cmp
push
fwait
(bad)
pop
dec
sub
or
and
cmp
retf
cmps
cmp
cmps
repnz
jmp
ret
mov
repnz
jl
(bad)
pop
idiv
pop
int
retf
push
lea
mov
xor
lods
in
adc
pop
pop
push
mov
fadd
shl
das
test
or
inc
mov
push
push
(bad)
pop
mov
enter
or
push
push
gs
sub
adc
dec
push
xchg
push
fwait
sbb
add
std
std
leave
cdq
or
mov
pushf
fisub
jne
and
fild
jmp
ret
jbe
sbb
xchg
jg
xchg
popf
icebp
dec
js
push
or
pop
sbb
xor
imul
js
pop
xchg
fwait
jns
push
jg
push
adc
xor
loope
mov
int3
mov
adc
into
push
cli
(bad)
jmp
sbb
cmp
jns
jno
mov
retf
sub
push
jb
adc
inc
xchg
scas
nop
stos
test
sub
loope
adc
mov
inc
(bad)
and
push
inc
into
call
adc
inc
xor
hlt
rol
stos
stos
mov
push
pop
cmc
xor
fbstp
pop
or
or
adc
out
faddp
movs
jne
les
inc
and
mov
sub
popf
aad
popa
or
mov
push
stos
lahf
mov
aas
mov
into
loope
loop
or
das
iret
fisttp
retf
cld
dec
adc
push
xchg
mov
(bad)
adc
int
sub
cmps
aad
xor
inc
out
pop
das
pushf
mov
inc
pmaddwd
test
fld
dec
enter
lock
add
out
imul
ss
cdq
dec
push
mov
mov
scas
cmc
mov
xlat
cmc
add
lods
push
outs
and
inc
inc
mov
daa
scas
scas
pop
push
test
xchg
mov
mov
imul
les
and
sbb
ror
cmp
cmc
ficom
sar
or
(bad)
out
sbb
mov
outs
push
xchg
mov
add
pushf
sbb
xchg
adc
or
out
popf
les
nop
shl
aad
xchg
adc
in
and
je
push
or
and
jmp
jl
xor
aaa
sbb
pop
sub
pop
push
icebp
mov
repz
repz
dec
sbb
fs
out
sub
adc
pop
dec
pop
jl
xlat
pop
cmp
movs
sar
mov
or
mov
push
(bad)
iret
fbld
sbb
jno
push
pop
sub
ds
mov
or
xchg
mov
shl
int3
and
jecxz
push
(bad)
jle
popf
ins
out
push
aad
sbb
lock
jo
cmp
dec
lods
push
std
loope
push
jp
sti
mov
cmp
adc
and
cmp
mov
imul
rol
je
cld
sbb
jmp
sbb
popa
movs
xchg
mov
iret
test
dec
jge
pop
ss
or
test
and
and
cmp
and
mov
sbb
pushf
sub
dec
cdq
sub
fxch
call
mov
aaa
sbb
cmp
sbb
mov
mov
dec
out
or
fisub
dec
jge
cwde
aad
xor
mov
mov
mov
outs
mov
mov
loopne
jl
dec
and
jmp
mov
cli
mov
xchg
pop
setl
int
cmps
test
inc
pushf
mov
push
jp
or
ret
or
pushf
add
(bad)
and
push
pop
xor
mov
stos
fcom
sub
xchg
and
cs
enter
inc
sbb
jnp
or
cmp
cwde
scas
push
mov
sub
mov
pop
clc
ret
pop
jmp
mov
xchg
mov
xchg
inc
and
adc
aas
jg
(bad)
pop
push
and
into
xor
sub
ffreep
mov
sub
cmps
sub
aam
test
imul
push
fld
xlat
add
ja
sub
in
adc
(bad)
cmps
mov
test
cmc
dec
xor
int3
fisttp
int3
enter
xchg
stc
mov
sbb
je
outs
icebp
in
jne
dec
in
mov
call
call
fdivr
dec
cld
mov
push
xchg
inc
mov
and
push
xchg
and
or
or
test
mov
inc
or
(bad)
fdivr
cmp
xor
add
leave
xor
shl
shl
sbb
ja
mov
xor
cmps
(bad)
mov
mov
lods
out
push
mov
xor
movs
aad
clc
(bad)
dec
sahf
shl
sub
sahf
ins
cmp
lds
int3
mov
retf
push
into
and
pop
adc
es
pop
jno
adc
jmp
test
aad
jp
xor
sbb
xchg
hlt
xchg
pusha
push
imul
mul
jo
cmp
out
retf
sub
mov
imul
mov
popf
std
add
inc
mov
out
inc
dec
mov
inc
popa
or
cwde
enter
mov
or
aad
pop
mov
pop
sbb
sbb
pushf
inc
xchg
pop
lahf
jp
and
(bad)
lods
sub
icebp
(bad)
pop
mov
pop
jae
(bad)
push
push
xchg
sub
push
xchg
inc
scas
cld
push
scas
aaa
inc
jecxz
mov
stc
cdq
fstp
inc
and
dec
popf
push
cmp
lahf
push
movs
dec
cmc
faddp
loope
inc
movs
adc
fucomi
lock
inc
retf
mov
add
test
xor
sbb
xchg
movs
jns
xchg
cmp
fs
and
add
adc
cld
pop
and
fs
fwait
cld
sbb
xchg
add
and
sbb
or
ins
cmc
(bad)
js
jg
push
adc
out
enter
jmp
pop
in
cmp
jp
cmp
cmp
inc
aaa
test
scas
push
aad
scas
mov
mov
xor
pop
xchg
add
mov
add
or
xor
mov
aas
outs
mov
add
(bad)
pop
shr
push
cmp
dec
push
shr
int
div
xor
fidiv
inc
scas
stos
and
push
stos
inc
iret
xor
(bad)
adc
pop
in
data16
dec
arpl
pop
jge
pop
int
adc
popf
dec
retf
cli
in
cmp
and
push
shl
(bad)
repz
stc
sbb
push
sub
add
push
pop
pop
mov
sub
adc
jmp
jg
mov
je
cwde
fdivr
and
mov
adc
jle
or
dec
inc
adc
fcomp
rcr
adc
fwait
xchg
mov
sub
pop
xor
and
xchg
ror
iret
xchg
mov
cmp
cmp
popf
sbb
dec
push
lods
pop
pop
xchg
test
repz
sahf
arpl
cdq
fsub
jg
mov
(bad)
pop
lds
sub
mov
setbe
mov
adc
idiv
out
lahf
js
push
scas
ja
imul
mov
push
pop
in
adc
imul
inc
pop
sub
(bad)
cmp
pop
dec
jae
pop
pop
push
pop
xchg
dec
and
adc
sbb
jmp
mov
sahf
xor
movs
arpl
ins
adc
repz
pop
clc
lods
pushf
call
arpl
add
lahf
add
cmps
mov
or
adc
repz
arpl
pop
and
jl
add
mov
add
test
inc
sar
test
sub
outs
inc
bound
aas
ins
cmp
pushf
fimul
cwde
jmp
inc
and
fild
loopne
mov
dec
aaa
adc
mov
cmovs
and
rcl
pop
fadd
mov
xchg
scas
jp
cmps
adc
in
sahf
mov
stos
cdq
(bad)
fcomp
cmps
mov
xchg
mov
inc
stos
push
xchg
lds
out
cmp
jo
idiv
data16
ja
inc
(bad)
test
test
dec
mov
in
dec
(bad)
fldenv
mul
dec
mov
pop
stos
aad
jmp
sub
pop
mov
cmps
mov
ins
mov
and
fisttp
inc
call
mov
fsubr
movs
test
aam
stc
xchg
sbb
stc
xor
fst
sbb
push
and
dec
mov
imul
fst
add
mov
arpl
fdiv
add
mov
pop
dec
mov
mov
mov
add
mov
add
push
shl
mov
jp
loopne
cmp
not
jnp
adc
mov
xrelease
mov
lahf
adc
dec
icebp
daa
sub
repz
(bad)
std
push
sub
lods
das
loope
iret
cli
stos
retf
fistp
scas
es
cmp
mov
xchg
cmp
dec
sub
pop
into
cld
xchg
les
mov
imul
dec
sbb
aam
adc
mov
jge
xchg
inc
push
(bad)
jmp
test
(bad)
dec
jo
into
lods
ds
call
mov
inc
pop
scas
inc
int
aaa
aam
ins
rol
mov
adc
in
inc
scas
xor
cmc
sbb
pop
ja
ds
call
xor
mov
scas
xchg
jbe
pop
popa
mov
dec
ds
arpl
cmp
add
mov
(bad)
ins
push
nop
mov
and
vmovhps
loop
jg
repz
xchg
adc
mov
and
fs
xchg
pop
mov
cmp
mov
cmp
ret
add
pop
gs
xor
adc
xchg
mov
(bad)
(bad)
or
pop
icebp
xchg
sub
scas
(bad)
dec
fistp
push
xchg
xor
fstp
mov
retf
push
mov
int
xchg
arpl
lods
aam
mov
scas
or
ret
sub
popf
mov
mov
mov
adc
dec
daa
fxch
idiv
jo
mov
ror
fist
xchg
icebp
adc
call
pushf
call
(bad)
cmp
cmp
inc
int3
pop
das
xchg
popa
aaa
mov
test
add
xchg
jecxz
sub
clc
push
dec
mov
dec
ins
cmp
jg
dec
push
add
sbb
push
mov
mov
ins
xchg
div
pop
cwde
das
or
mov
pusha
mov
cmp
aam
aaa
outs
sub
imul
es
int3
loop
or
xor
inc
lds
and
jns
(bad)
(bad)
(bad)
and
mov
lods
aas
sub
push
sbb
imul
sbb
or
xor
dec
cwde
add
mov
pop
sbb
jno
push
ficomp
pop
mov
fistp
push
mov
sar
stos
jg
fst
push
mov
cmp
imul
mov
push
inc
mov
inc
sbb
mov
mov
mov
shl
hlt
push
jp
pop
pop
mov
lahf
push
cmc
mov
jne
into
loopne
push
mov
repz
mov
(bad)
clc
xchg
bound
xor
inc
mov
pushf
pop
shl
imul
ds
xlat
into
mov
push
inc
jns
push
jmp
nop
inc
repz
shl
dec
jge
mov
rcl
in
popa
mov
xchg
adc
int
fidivr
and
inc
(bad)
push
cs
gs
cs
jno
icebp
and
outs
lock
gs
ins
xor
add
push
mov
pop
imul
dec
add
xchg
or
inc
js
fwait
push
out
(bad)
aas
popa
fisub
and
in
xor
and
inc
jnp
(bad)
loope
outs
movs
sub
cdq
dec
push
push
(bad)
dec
shr
rep
cmp
sbb
cmps
mov
test
sub
jb
js
ins
(bad)
call
rcr
cwde
jbe
div
cmp
lea
in
test
pop
xor
dec
ret
xor
add
dec
jno
mov
or
mov
dec
and
sbb
scas
push
lds
jecxz
dec
mov
xchg
stos
data16
outs
ja
inc
and
and
lods
inc
stc
adc
pop
out
xchg
pop
or
retf
ds
les
mov
mov
xchg
pop
or
shr
mov
dec
sub
aas
push
test
stos
sub
jbe
and
mov
and
loope
xchg
ret
mov
cld
icebp
cmp
jae
cmp
and
mov
add
dec
imul
sub
xor
add
xchg
xor
cmp
or
sbb
into
xchg
jbe
adc
loop
mov
pop
pop
clc
push
retf
push
jmp
int3
dec
std
inc
jmp
sbb
data16
mov
push
leave
mov
int3
nop
mov
mov
mov
mov
dec
cmp
aam
mov
adc
in
push
inc
add
out
movs
fisttp
cmc
dec
in
and
popf
loopne
push
dec
neg
fnstsw
adc
jmp
pop
xchg
and
pop
(bad)
loop
aam
push
clc
sbb
retf
test
dec
imul
shr
not
rol
cwde
fmul
in
adc
clc
xchg
add
idiv
or
adc
js
adc
pop
push
adc
adc
xor
enter
(bad)
mov
out
stos
sub
out
outs
pusha
jp
dec
push
(bad)
mov
pop
je
mov
and
xchg
jnp
test
in
inc
jae
and
faddp
cmps
xor
scas
jnp
pop
adc
repz
movzx
jp
rcl
sbb
pushf
aam
xchg
lahf
in
jnp
cmps
shl
mov
popa
xlat
inc
loope
inc
sub
mov
adc
outs
call
sub
add
in
fcom
inc
mov
adc
jmp
stc
inc
ins
bound
jmp
jae
shr
outs
idiv
inc
or
scas
fistp
xor
call
mov
in
leave
adc
push
pusha
add
ins
add
jmp
mov
sbb
lahf
clc
mov
xor
fst
test
xor
loop
push
pop
cmp
push
test
sbb
rol
push
jmp
sub
push
pushf
lods
(bad)
in
stc
arpl
test
sub
imul
dec
xchg
repz
in
lock
push
pop
dec
mov
shr
mov
mov
or
cmp
jnp
jge
jo
dec
or
inc
adc
mov
fld
test
mov
aam
retf
adc
stc
push
push
cmp
in
cld
xor
cmp
test
push
dec
or
rcr
arpl
out
ja
push
jae
dec
cmp
push
dec
sahf
in
jbe
les
mov
aad
mov
shl
xor
shl
fild
xchg
cmp
test
test
rcr
dec
leave
hlt
(bad)
or
push
fs
outs
shr
jmp
xchg
mov
std
arpl
add
mov
rcl
and
mov
ins
inc
in
add
lock
jge
sbb
dec
sbb
out
cmps
pop
and
jecxz
add
pop
mov
stc
xchg
or
mov
cmc
mov
xor
leave
or
xchg
les
xor
(bad)
adc
out
or
mov
mov
jbe
arpl
mov
sbb
push
sub
repnz
sub
jl
sbb
les
xchg
adc
iret
and
jbe
in
mov
and
sub
pop
(bad)
jae
ins
add
out
sbb
sbb
je
mov
cmp
ins
sbb
scas
xor
stos
mov
xor
mov
lods
mov
xor
popa
iret
ins
clc
dec
dec
jle
call
(bad)
xchg
into
aad
mul
scas
in
int
push
cwde
jle
pop
pop
sar
mov
mov
inc
stc
(bad)
call
pop
aaa
arpl
sbb
mov
pop
ret
xchg
cmps
iret
repnz
mov
pop
sbb
das
cmc
addr16
and
adc
mov
(bad)
dec
retf
test
jb
out
cmp
xchg
adc
mov
push
into
inc
mov
(bad)
cld
sbb
or
adc
enter
retf
div
retf
std
jnp
jnp
sbb
stos
add
shr
pop
pop
cli
movs
ja
sub
mov
add
(bad)
mov
xchg
popf
jge
jge
jl
mov
add
in
retf
fist
jp
ffreep
mov
push
xor
jmp
clc
jp
mov
mov
xor
adc
fidiv
or
xor
xchg
int
mov
test
outs
in
inc
or
out
add
inc
pop
jecxz
inc
ror
xchg
mov
(bad)
sub
cli
ins
cli
jb
jne
repnz
inc
addr16
sahf
xchg
icebp
leave
fld
es
mov
mov
ret
push
(bad)
mov
fchs
adc
sbb
idiv
pop
out
mov
or
jmp
(bad)
ja
pop
jp
mov
(bad)
mov
xor
sbb
inc
cmp
mov
mov
in
adc
ins
icebp
cmp
rep
xchg
leave
(bad)
imul
imul
xchg
imul
add
in
cwde
pop
xor
xchg
pop
jmp
pop
sub
xchg
inc
shl
cmp
sbb
pop
inc
mov
and
cmp
rcl
cmp
stos
das
mov
cmp
pop
mov
and
or
pop
xor
mov
rcr
push
les
xchg
pop
xor
pop
and
iret
stc
outs
sahf
(bad)
or
aad
pushf
out
iret
daa
sub
and
or
leave
mov
or
test
xchg
xor
push
dec
(bad)
stc
clc
sub
sub
adc
aaa
outs
shl
dec
and
pop
push
xor
xchg
xor
pop
add
into
cld
cmp
pop
xchg
or
xchg
leave
mov
in
addr16
pusha
push
movs
mov
xor
xchg
into
int3
scas
imul
out
push
fstp
outs
inc
sbb
add
daa
adc
sub
add
fdivr
cmp
push
dec
rol
ror
mov
icebp
and
(bad)
pop
inc
shl
lods
jae
pop
inc
retf
cmps
and
rol
loopne
scas
movs
push
aaa
mov
bound
mov
daa
jno
jns
jl
loop
jmp
cmc
inc
iret
cdq
scas
mov
jb
sahf
cmp
add
xchg
xchg
pop
popf
(bad)
cmp
add
dec
mov
inc
and
test
push
mov
dec
adc
outs
test
aas
in
sbb
jae
loopne
lea
rcl
inc
pop
xor
push
mov
js
sbb
sub
shr
mov
and
and
popf
mov
xor
pusha
nop
lods
ror
sbb
pop
inc
sub
adc
sbb
sub
and
pop
mov
out
xchg
gs
mov
ja
jecxz
jle
dec
sbb
mov
xor
mov
shl
mov
hlt
mov
leave
or
bound
imul
inc
es
mov
loopne
dec
and
mov
cmp
retf
in
repnz
fwait
xlat
add
cs
jmp
mov
or
xchg
neg
out
add
mov
dec
dec
mov
inc
ja
outs
movs
cmp
popf
ds
adc
movs
les
pop
cmp
add
cmp
add
or
jb
dec
retf
(bad)
in
or
add
jmp
push
ret
push
pop
dec
sbb
bound
aad
and
sub
in
mov
pop
mov
mov
loopne
bound
inc
mov
cmp
mov
es
pop
jmp
outs
retf
inc
pop
in
dec
inc
push
shl
xor
pop
jns
jg
xchg
adc
add
shl
or
xor
mov
mov
(bad)
sub
push
lds
sbb
std
inc
fidivr
ss
mov
cwde
add
aaa
cmp
and
popa
push
ficom
jp
(bad)
jmp
mov
loopne
(bad)
mov
call
jmp
jmp
clc
adc
mov
push
push
dec
mov
rol
movs
mov
cmp
ret
neg
imul
leave
inc
dec
jge
mov
jae
mov
aas
ins
enter
mov
mov
lea
xchg
inc
jo
(bad)
push
or
movs
xchg
xchg
fwait
mov
cwde
dec
pop
xchg
mov
das
retf
popf
xlat
lea
call
cmps
sahf
or
jno
imul
cmp
sahf
data16
sub
movs
adc
and
and
dec
scas
in
sbb
jge
inc
or
or
imul
or
xlat
cmp
xlat
adc
sbb
cmc
ins
in
sbb
jbe
add
adc
ds
fld
xor
fcomp
js
or
loop
push
xchg
inc
push
sub
push
call
mov
jecxz
and
popf
xor
ins
stc
dec
inc
cmc
push
mov
jle
adc
and
mov
ja
sbb
jle
and
xlat
imul
jg
ss
jl
and
mov
mov
add
dec
mov
xchg
jnp
fwait
pop
mov
(bad)
xchg
sbb
xchg
mov
addr16
in
enter
iret
dec
push
fidiv
leave
std
repnz
inc
rep
leave
pushf
cmps
sub
xor
cs
(bad)
xchg
dec
movs
pop
or
xchg
jecxz
sbb
push
sub
loop
(bad)
call
stos
loope
fstp
jle
pop
jp
aad
sub
xor
lahf
sub
imul
in
jecxz
enter
ss
popa
or
sbb
cmp
popa
mov
fstp
addr16
add
dec
pop
mov
adc
sub
int3
pop
stos
popf
popf
retf
cmp
retf
and
xchg
sub
dec
pop
jp
test
xchg
inc
sbb
pop
loop
xor
sub
jge
into
pop
in
mov
out
(bad)
or
jge
test
xchg
xchg
retf
xchg
xchg
inc
sub
popa
fild
adc
(bad)
sub
lods
and
pop
repnz
pushf
pushf
mov
push
jns
push
stc
mov
push
or
hlt
inc
sbb
cs
mov
xor
mov
fidiv
nop
loop
push
sub
ret
push
out
leave
cmp
ds
jmp
aam
push
mov
mov
sub
sub
call
sub
std
fcmovbe
mov
xor
sbb
jb
xchg
retf
mov
popa
push
sub
jbe
stos
push
lock
sub
js
pop
mov
stos
or
jmp
adc
sti
cmps
jnp
js
dec
nop
mov
dec
cmps
or
arpl
cld
jae
pop
inc
push
jmp
inc
icebp
mov
les
hlt
movs
inc
in
jne
(bad)
ror
adc
push
dec
sub
pop
int
or
dec
ret
mov
adc
loop
or
dec
dec
and
adc
mov
dec
push
xchg
mov
test
sbb
shr
pop
mov
sub
dec
and
mov
popf
xchg
test
scas
out
jle
stc
or
xor
ins
adc
rcl
mov
sti
push
ror
lds
nop
add
push
(bad)
ins
add
dec
cdq
mov
and
mov
lahf
dec
pop
mov
rol
cmp
sbb
sbb
jns
ins
add
sbb
and
pop
test
push
pop
fiadd
test
int
test
xchg
stos
stos
or
jo
lds
push
sub
pop
adc
jmp
sub
jp
rcr
cwde
xor
test
lods
xor
fsub
inc
aad
test
xor
or
out
inc
pop
hlt
ret
fnsave
mov
(bad)
int
test
xchg
iret
inc
pop
(bad)
lock
mov
call
xchg
int3
pop
out
add
jecxz
xor
in
sbb
mov
adc
jmp
add
pop
dec
mov
sub
sbb
test
js
add
in
jle
(bad)
jo
sbb
ins
add
xor
not
jle
inc
mov
out
leave
mov
inc
add
retf
push
xor
mov
es
cmps
cwde
xor
sub
jae
rol
xlat
std
push
cmp
xchg
ds
int
dec
push
or
adc
adc
fnsave
inc
test
jmp
fidivr
fadd
shl
xchg
div
push
jmp
mov
rcl
cdq
test
es
adc
xchg
nop
aad
sahf
das
into
sbb
std
stos
out
cmp
dec
jno
adc
xchg
sbb
sahf
sbb
pop
mov
xchg
in
push
scas
cmps
(bad)
sbb
mov
les
(bad)
mov
push
jle
mov
mov
clc
fstp
mov
cmc
pop
aad
sbb
sbb
out
fadd
cmp
rcl
sbb
lea
aam
jmp
jnp
jbe
or
imul
add
(bad)
neg
sahf
pop
mov
cmp
std
cmc
xchg
out
adc
ficom
into
adc
mov
jge
jg
inc
add
or
(bad)
rcl
bound
adc
lods
mov
adc
shl
mov
cmp
mov
dec
push
popf
shl
cmp
mov
sub
cmps
fwait
je
xor
xor
lods
mov
mov
popa
dec
mov
lds
xchg
jg
mov
lds
mov
pop
fld
mov
lods
je
jmp
pop
out
cwde
jne
push
movs
add
and
or
addr16
lods
inc
dec
pop
jb
pop
(bad)
arpl
adc
scas
push
adc
neg
pop
sbb
mov
call
xchg
mov
ja
std
shr
dec
(bad)
mov
pop
push
xchg
pop
test
jne
inc
gs
sar
xchg
imul
mov
xchg
pop
es
push
daa
(bad)
mov
sub
ss
cwde
add
dec
repz
add
and
retf
ret
test
icebp
sti
add
mov
lds
jnp
mov
(bad)
sub
inc
repz
mov
pop
dec
cmps
mov
inc
dec
mov
xchg
pop
or
mov
inc
mov
mov
stos
lods
jns
sub
(bad)
fwait
outs
scas
outs
sub
cmps
neg
sbb
ja
cmps
(bad)
cs
sbb
(bad)
mov
cld
shl
popf
in
test
inc
pop
cmp
out
movs
or
pop
aad
(bad)
sub
pop
shl
xchg
int
jo
out
test
add
xchg
or
mov
jb
stos
into
lock
mov
nop
stos
fwait
jo
jl
call
mov
call
jne
scas
scas
mov
in
int
ret
mov
mov
mov
pop
inc
mov
sub
xor
retf
popa
ins
in
aad
xchg
sub
aad
jno
ins
pushf
add
push
jg
pop
in
nop
shr
call
xchg
inc
push
jae
ret
sub
ror
dec
lock
stos
scas
pop
clc
push
sbb
xor
mov
int3
movs
push
adc
and
adc
(bad)
and
sub
fcomp
jg
js
xor
or
imul
push
jnp
ret
clc
add
adc
cld
pop
clc
sbb
xchg
enter
push
bound
sar
stos
fdivrp
outs
shl
cmp
mov
and
in
mov
mov
ss
mov
mov
mov
(bad)
xlat
push
cmps
sub
lock
adc
fimul
cwde
xchg
sbb
xor
cdq
adc
push
xchg
xlat
out
int
sub
lock
retf
push
dec
xor
xor
mov
jl
hlt
dec
ja
mov
out
push
popf
pop
or
lds
sahf
not
push
stc
mov
mov
push
xchg
fs
inc
fsub
push
and
lahf
push
sbb
adc
cmp
outs
jno
clc
inc
xchg
add
(bad)
mov
mov
adc
arpl
sbb
dec
pushf
dec
rol
xor
and
loop
or
outs
sub
pop
inc
or
ja
sub
icebp
aam
cmps
loopne
pop
xchg
ins
inc
cmp
inc
in
test
std
xchg
aam
cmp
out
xchg
xchg
push
pop
popa
rcl
mov
(bad)
gs
mov
lahf
fcom
adc
call
bsf
(bad)
mov
jp
sub
jmp
stos
lock
(bad)
dec
jecxz
mov
jle
leave
fadd
retf
mov
pop
inc
mov
out
out
pop
add
cmc
addr16
ret
pushf
not
icebp
sub
into
aaa
cld
mov
mov
push
clc
cwde
push
(bad)
pop
xchg
add
ins
mov
adc
and
mov
je
cmp
push
sahf
in
pop
dec
jmp
fwait
(bad)
call
out
push
fst
jle
in
(bad)
adc
push
dec
(bad)
loope
cmp
pop
or
inc
adc
or
jg
add
inc
les
or
mov
pop
push
imul
pop
dec
jae
hlt
or
add
sbb
mov
push
xor
push
loope
mov
je
or
dec
xlat
hlt
minps
dec
xor
mov
pop
mov
ret
not
movs
or
cmps
dec
aas
test
nop
jbe
cmp
cmps
div
cmp
stos
jmp
push
cwde
inc
jbe
repz
clc
ss
icebp
and
mov
retf
repnz
nop
sub
mov
mov
xchg
adc
jbe
jne
xchg
loop
pushf
mov
xor
loopne
jo
mov
es
mov
push
and
call
xor
pop
dec
mov
cs
push
dec
into
call
sbb
mov
sbb
ror
dec
xor
test
movs
add
sbb
or
test
inc
jnp
xchg
mov
add
pop
mov
je
and
push
fcmovb
add
or
mov
mov
mov
jecxz
iret
dec
bnd
jo
repnz
xchg
mov
and
shl
in
inc
in
scas
cdq
popa
test
pop
je
test
cmp
and
xor
std
aas
jg
and
cmp
test
iret
push
xor
js
xchg
lods
pushf
cdq
jb
xor
dec
mov
cwde
imul
(bad)
mov
xchg
dec
iret
adc
xchg
sub
xchg
lds
push
mov
cmp
mov
lods
jnp
xchg
push
in
jne
mov
jge
ins
jae
mov
stos
sbb
movq
aaa
je
scas
sub
jp
push
ficomp
icebp
mov
pop
cmp
pop
xchg
and
sbb
movs
jnp
dec
xor
js
mov
sub
sub
mov
cmps
xor
dec
outs
or
dec
shl
cmp
loop
in
popa
out
into
(bad)
aam
sub
xor
fisttp
xlat
jg
sti
vmwrite
sub
xchg
jp
dec
adc
lock
in
mov
fdivr
and
(bad)
fld
mov
scas
psrld
jecxz
pop
div
inc
cmps
cmps
in
and
cld
jne
retf
ds
xor
push
xor
cs
fnstsw
cwde
ins
sbb
inc
sub
adc
sub
sahf
and
jge
lock
call
xor
pusha
test
in
gs
rcl
(bad)
push
xchg
mov
jg
stos
ret
adc
dec
inc
sahf
xor
js
pop
inc
push
in
and
dec
or
add
mov
lods
ret
cmp
sub
gs
dec
and
inc
(bad)
call
jp
inc
add
and
call
push
adc
push
std
push
leave
xlat
and
(bad)
mov
(bad)
mov
outs
jge
ins
xchg
and
aaa
aaa
loope
lea
pop
push
lock
shr
xchg
mov
bswap
ret
xchg
imul
add
adc
cmp
pop
jo
fcomp
pop
(bad)
fdivr
imul
lahf
cmp
(bad)
adc
dec
out
jge
mov
pop
cdq
fmul
ds
dec
ins
jecxz
dec
loop
push
shr
stc
xchg
push
adc
mov
not
push
pop
mov
push
sub
pop
xchg
pusha
xchg
cmp
sub
cdq
and
inc
pushf
push
mov
loopne
xor
enter
jmp
addr16
fdivr
cld
sbb
push
mov
cdq
sbb
sti
xchg
mov
adc
cmp
(bad)
xchg
add
loope
sbb
add
mov
mov
dec
(bad)
and
ret
dec
adc
cwde
mov
out
pop
push
inc
xor
fucomi
addr16
cmp
pop
call
xor
xchg
push
movs
cmp
dec
pop
cmp
cmp
xchg
int3
mov
in
shl
mov
repz
rol
outs
cld
in
push
in
hlt
cmps
in
cld
pop
lods
ror
add
call
fdiv
push
rcr
adc
shl
inc
pop
fbld
sbb
mov
fcomp
scas
movs
rcl
les
retf
out
dec
mov
(bad)
cmp
inc
sbb
inc
inc
and
arpl
inc
cmp
mov
or
icebp
or
sub
fcomp
gs
jbe
out
add
leave
push
cmp
data16
add
cmp
xor
aas
jns
enter
mov
push
pop
fbstp
fimul
mov
jnp
inc
push
mov
lods
pop
ds
add
xor
inc
push
and
adc
sub
loope
sbb
out
inc
in
xlat
test
mov
pop
lods
lods
aad
dec
or
and
sbb
cld
test
mov
jle
jne
cmp
xchg
cli
jmp
adc
pop
stc
cmps
fild
cwde
mov
push
js
std
adc
aam
xor
ds
or
ja
jae
test
mov
test
jae
adc
sub
mov
ret
or
imul
cmps
mov
(bad)
xor
mov
es
je
jmp
or
lock
sub
sbb
arpl
mov
cmps
add
cdq
lods
push
(bad)
rep
call
inc
rol
dec
xchg
mov
(bad)
js
add
pusha
ficomp
leave
shr
mov
jne
mov
outs
mov
call
cwde
jle
mov
leave
sti
inc
adc
jo
and
aad
jecxz
push
xor
jae
mov
out
push
outs
sbb
outs
mov
cwde
mul
ss
and
call
(bad)
ja
loopne
data16
sbb
(bad)
pop
data16
outs
mov
call
bound
pop
cmps
xor
sub
sub
sub
(bad)
pop
mov
jg
(bad)
jl
out
sar
inc
das
aas
jnp
cmp
rcr
add
add
mov
mov
xchg
test
xlat
lock
sbb
test
or
call
xor
ds
dec
mov
xor
jp
push
(bad)
pop
pop
stos
inc
sub
int3
int3
pop
shl
xchg
sub
push
xor
shr
xchg
cmp
xchg
sub
xlat
jge
in
or
adc
sbb
push
push
xchg
inc
out
mov
gs
arpl
ins
test
outs
iret
cdq
mov
push
mov
pushf
mov
push
xchg
sub
cmp
mov
in
mov
mov
lods
sti
sbb
inc
xlat
sar
and
sar
stos
hlt
xchg
and
add
sbb
les
call
fisubr
adc
aad
std
xchg
cmps
add
cmps
cwde
cwde
outs
loop
test
je
gs
(bad)
mov
pop
inc
jecxz
pop
pop
imul
das
sbb
jb
fdivp
jmp
jmp
jo
ret
mov
test
cmps
(bad)
jbe
cmp
ins
js
and
sahf
inc
movs
int
lahf
mov
movs
and
imul
mov
(bad)
adc
push
inc
repnz
pop
or
test
mov
inc
and
inc
cs
std
push
xlat
cmp
sbb
cwde
out
mov
std
in
xchg
xor
jbe
das
adc
adc
pushf
adc
adc
xor
sub
adc
call
iret
cmp
dec
ja
add
call
outs
jecxz
mov
je
lods
ss
scas
adc
push
xchg
xchg
sbb
cmp
inc
push
add
sbb
in
fsubr
movs
mov
push
pushf
inc
ficom
pop
ror
les
into
jo
movs
das
jmp
mov
fdiv
inc
push
repnz
in
fcomp
cmps
jl
adc
(bad)
xchg
call
mov
mov
pusha
pushf
jmp
ds
push
cwde
sub
or
jmp
push
push
js
adc
xor
loope
dec
mov
add
xor
push
in
in
mov
push
cmp
in
sbb
sar
inc
or
lock
and
loop
sbb
es
lods
jl
daa
aas
out
mov
jo
bnd
sub
mov
xchg
jg
adc
mov
push
outs
cmp
sub
pusha
adc
icebp
out
adc
popa
pop
neg
mov
mov
aaa
jl
and
aad
ins
stos
mov
(bad)
(bad)
xor
dec
push
add
jmp
les
cdq
out
mov
adc
sbb
das
fstp
jecxz
out
rcl
jl
or
in
add
and
jge
xchg
imul
cmp
sub
pop
cmp
add
out
xlat
mov
push
sbb
and
test
mov
inc
inc
ja
pop
cmps
adc
mov
jge
inc
jne
fs
mov
mov
add
pop
pop
push
inc
test
repz
rol
or
or
jns
dec
mov
cmp
pop
inc
(bad)
fdiv
movs
out
js
cwde
test
movs
mov
loop
cmps
add
std
dec
movs
mov
mov
frstor
int3
ror
repnz
add
add
repnz
clc
das
outs
dec
jae
adc
repnz
and
ret
push
cmp
add
jbe
test
inc
dec
mov
mov
mov
fistp
pop
out
sub
leave
cmp
adc
add
add
push
mov
jmp
stos
adc
pop
(bad)
push
push
sub
sub
dec
cmp
mov
sbb
mov
sbb
fsubr
cmps
xor
xchg
not
jns
popf
add
xor
fisttp
dec
mov
nop
fwait
xchg
icebp
test
push
xchg
cmp
sub
test
retf
pushf
adc
jge
ins
mov
xchg
in
add
je
pop
pop
ret
mov
push
mov
scas
xor
xchg
retf
cmp
mov
outs
sub
jnp
adc
ins
inc
test
mov
pop
or
push
sti
dec
daa
popa
in
outs
xchg
pop
js
loopne
dec
ss
aaa
cwde
fdivr
dec
mov
repnz
pop
cmp
das
sub
xor
les
pop
inc
nop
inc
cmp
shl
aam
sbb
mov
jmp
fstp
xor
(bad)
or
pop
fmul
fidiv
loop
ret
loopne
push
(bad)
rcr
cmps
mov
pop
mov
test
das
pop
rcl
cmc
or
adc
sbb
test
jnp
sbb
jp
lock
push
xor
mov
ja
inc
sti
(bad)
daa
stos
inc
loope
pop
push
sbb
test
add
cld
sub
ret
fwait
xor
jg
xchg
mov
mov
out
xor
push
icebp
aas
dec
imul
ds
lods
sub
or
sbb
mov
test
or
xor
adc
sar
fsubr
(bad)
xchg
add
pop
push
inc
cmps
or
repnz
ret
iret
cdq
test
test
jns
jle
adc
cs
movs
dec
add
xchg
in
ins
pop
das
mov
xor
cmp
sbb
shl
movs
pop
or
cvtdq2ps
or
mov
or
adc
mov
add
or
pop
add
push
je
or
es
jne
push
mov
iret
cmp
mov
(bad)
mov
mov
stc
cmp
fbld
les
or
mov
setbe
push
dec
mov
loope
test
pop
add
mov
fisub
mov
adc
scas
clc
mov
and
repz
out
int
jae
shr
cdq
xor
pop
push
pop
adc
xor
mov
shl
cmp
or
mov
dec
inc
repz
cmc
jno
int3
xchg
mov
out
das
pushf
cmps
and
sub
push
mov
pop
xor
xchg
imul
and
xor
sbb
xor
pop
mov
cmp
ret
xchg
in
mov
lock
leave
call
mov
bound
cmp
std
out
ins
xor
rol
frstor
sbb
jecxz
pop
cmp
mov
sbb
mov
out
and
adc
mov
int3
fwait
les
inc
cmc
xor
hlt
(bad)
xchg
or
push
mov
cdq
push
imul
in
es
xchg
sub
test
mov
retf
cmp
sub
retf
push
dec
xchg
sub
mov
push
push
fild
jmp
mov
mov
adc
add
cmp
in
jmp
sub
aas
push
ds
and
push
xchg
cmp
imul
rcr
test
arpl
mov
out
lods
jno
adc
mov
push
cmp
push
push
dec
or
into
rcl
les
jmp
scas
int3
cmp
adc
and
sti
sbb
push
and
pop
stc
pop
inc
rcl
xor
stos
sbb
mov
hlt
shl
adc
retf
cmp
clc
pop
jbe
aas
xchg
xlat
fstp
adc
daa
jg
stos
(bad)
daa
xor
or
mov
pushf
iret
xchg
push
jae
por
int3
and
inc
mov
je
mov
and
xchg
mov
pop
test
lock
lahf
pop
mov
test
imul
xor
test
and
xor
add
jmp
fdecstp
sbb
mov
adc
aad
outs
ss
jbe
jns
into
xor
cmovno
pop
mov
je
cmp
or
xor
shl
mov
aad
dec
sbb
jb
pop
in
pop
cld
cmp
cwde
or
imul
adc
mov
retf
out
mov
inc
xchg
or
dec
ins
and
dec
hlt
mov
(bad)
xlat
mov
cmp
outs
test
or
xchg
jne
in
(bad)
fdivr
pop
aaa
pop
iret
fs
out
mov
xchg
sahf
mov
push
push
cmp
std
adc
mov
pop
stos
aas
cmp
mov
or
js
fs
and
adc
ins
jl
enter
addr16
add
and
sbb
or
imul
sbb
out
xlat
(bad)
jmp
cmp
and
iret
dec
adc
xor
cmp
dec
test
pop
repz
jne
mov
test
jae
add
push
je
jle
lahf
fs
in
push
push
mov
and
jle
xchg
adc
and
into
pop
fiadd
les
or
call
or
mov
mov
fs
and
mov
push
or
ds
push
jne
idiv
xchg
cmp
add
push
cmp
rcl
lahf
add
xchg
inc
cmp
repnz
push
or
inc
add
ins
rol
jae
bound
push
outs
iret
test
popf
add
pop
ds
cmp
jbe
sub
mov
adc
inc
ror
fistp
lods
cdq
jecxz
cmps
sti
bound
cs
imul
cmc
cmp
jmp
rol
bound
add
repnz
mov
aam
xchg
mov
into
mov
std
jae
xlat
xchg
inc
mov
dec
cmp
js
pop
scas
and
sub
icebp
and
mov
dec
cwde
mov
stos
(bad)
test
daa
inc
jmp
xchg
scas
push
add
xchg
into
ja
jmp
mov
mov
mov
icebp
mov
test
scas
jge
repnz
mov
sbb
mov
mov
inc
mov
pusha
shr
mov
cli
icebp
ins
cld
cmp
adc
mov
xchg
fistp
push
dec
sbb
aam
sbb
pop
xchg
xor
ret
pop
dec
pop
pushf
rcr
loope
popa
bound
js
cmp
jge
lea
adc
mov
or
and
mov
gs
dec
jnp
movs
arpl
in
cwde
cmp
fs
dec
mov
mov
mov
cwde
int3
mov
test
and
jl
jmp
xchg
xor
xchg
pushf
call
cdq
sar
(bad)
cld
adc
jg
or
and
adc
mov
scas
sub
scas
retf
cmp
hlt
gs
cmp
or
push
mov
fwait
push
scas
mov
sub
movs
add
push
ins
movs
mov
(bad)
push
mov
jge
and
stos
xchg
mov
cdq
cmps
mov
retf
lea
in
jmp
adc
inc
xchg
repz
fnstenv
or
dec
xor
xor
icebp
cmc
cmp
fild
dec
push
sub
les
ror
adc
xchg
add
(bad)
pushf
mov
shl
shl
jne
ss
add
xchg
push
inc
xor
sbb
jg
mov
mov
test
pop
(bad)
daa
into
jmp
mov
adc
rcr
in
scas
adc
retf
adc
repnz
mov
lods
in
ss
lahf
inc
nop
ret
mov
mov
cld
js
into
dec
fdecstp
out
sbb
xchg
dec
inc
cmps
push
stos
ficom
(bad)
pop
dec
rol
test
cmp
lea
ins
xchg
pop
push
xor
jb
pop
mov
xchg
inc
imul
jl
out
mov
adc
ja
ror
jmp
jle
or
sub
or
or
pusha
adc
mov
int
aas
xchg
mov
mov
mov
xor
ds
pop
arpl
fcom
fadd
pushf
sti
out
xchg
jge
adc
or
ja
lock
sub
stos
xchg
xchg
add
or
mov
dec
ds
iret
clc
lods
cli
jnp
cld
push
sub
retf
xlat
in
cs
aam
lods
(bad)
pop
arpl
inc
je
in
vpsrad
or
call
lods
fldcw
retf
ja
rcl
data16
xor
in
je
loopne
sub
rol
daa
mov
dec
sbb
loopne
sar
hlt
inc
ret
rcr
mov
mov
add
inc
shl
jle
mov
inc
fs
gs
push
aam
jge
push
aad
test
push
push
push
or
xor
mov
das
outs
pop
test
(bad)
into
ret
fidiv
pop
mov
xor
enter
mov
dec
pop
int
mov
iret
dec
jp
out
pop
pop
cmc
jns
add
mov
push
in
fsubr
or
repnz
fwait
mov
je
or
dec
and
push
cli
sbb
jns
lods
enter
jl
je
cmc
shl
ret
addr16
lea
int
leave
add
and
xchg
pop
push
fdivr
arpl
and
xchg
sub
xor
mov
xchg
add
pop
test
mov
pop
push
pop
jbe
iret
shl
ja
push
mov
add
fwait
xchg
sub
push
sub
mov
imul
scas
cmp
stc
inc
inc
out
cmp
jmp
mov
or
cs
and
xlat
call
cdq
mov
mov
ins
in
out
fsub
sti
(bad)
int3
icebp
mov
and
xor
cmp
sub
and
cmc
int
imul
outs
test
inc
cdq
dec
jne
add
call
sbb
xor
jo
outs
(bad)
(bad)
aas
dec
add
inc
icebp
dec
sub
ds
mov
xchg
adc
ins
xor
ret
js
mov
cmp
sub
ins
in
or
es
sub
and
mov
fist
mov
int
jmp
push
test
jl
inc
scas
out
inc
push
push
imul
mov
xchg
repz
imul
cli
jmp
jle
xor
mov
(bad)
popa
adc
mov
pop
jp
mov
dec
mov
aas
call
fadd
xor
jns
repz
push
cs
(bad)
push
gs
cmp
fadd
mov
inc
leave
mov
pop
pop
jo
jae
in
cmp
mov
sahf
mov
jnp
and
stc
cmps
test
ins
dec
pextrw
adc
mov
pusha
add
pop
jne
push
jge
std
popf
push
ins
mov
jl
sub
mov
mov
aad
mov
icebp
mov
addr16
popf
xlat
xor
fmul
push
sbb
pop
adc
dec
inc
leave
cmp
add
lea
in
pop
pop
mov
dec
sbb
sbb
out
inc
cmp
es
adc
idiv
xchg
cmp
and
sub
xor
adc
mov
fsub
sub
ret
hlt
adc
repz
shl
xor
pop
or
lods
mov
xor
mov
jbe
xchg
and
add
add
or
cmp
cmps
inc
scas
pop
or
adc
dec
pop
movs
call
inc
adc
mov
xchg
sub
xchg
mov
mov
push
nop
pop
sbb
cld
add
mov
push
int
cmps
imul
push
pop
test
icebp
push
out
bound
xchg
outs
xchg
jmp
in
nop
retf
rcr
pushf
mov
cmps
scas
sbb
xor
jo
fistp
push
lods
inc
jmp
jp
test
addr16
out
cwde
jb
js
aad
fnop
call
xor
sbb
jmp
ins
loope
inc
push
ja
call
push
sub
imul
mov
adc
add
ds
or
inc
stc
pop
sbb
loop
call
fild
xchg
(bad)
retf
xchg
dec
ror
in
add
inc
pop
dec
mov
jns
call
inc
or
std
jb
retf
popf
and
mov
xor
jnp
jmp
adc
xchg
cmp
stos
mov
fiadd
bound
bound
pop
fcmove
xor
push
mov
pop
js
dec
xchg
mov
add
out
in
imul
sbb
xlat
sub
mov
js
fnstcw
arpl
jns
adc
lods
push
push
sbb
push
xchg
add
data16
push
jmp
arpl
int3
sbb
ins
jle
pop
fstp
fiadd
and
outs
icebp
imul
je
jg
inc
int
leave
and
test
dec
push
fisttp
popa
out
sbb
adc
xchg
push
pop
pop
mov
pop
outs
or
mov
jo
(bad)
jns
das
and
dec
jle
call
aad
cs
adc
lods
and
fcom
test
repnz
(bad)
and
cmp
mov
mov
sub
outs
adc
scas
loopne
adc
shl
hlt
(bad)
mov
int
sbb
push
gs
pop
cmp
clc
inc
out
inc
add
xor
push
mov
fst
mov
hlt
dec
pop
rcl
fdivr
mov
add
hlt
sbb
or
xchg
ficom
fbld
and
ja
cmp
ins
mov
in
jl
inc
adc
adc
add
ins
mov
int3
pop
fld
adc
data16
rcl
cmp
cld
or
xchg
les
aam
pop
push
(bad)
(bad)
movs
jl
add
(bad)
out
test
dec
mov
and
inc
sub
retf
inc
inc
mov
cmp
push
jns
inc
in
(bad)
xor
mov
mov
add
add
cdq
adc
push
inc
ins
mov
cmp
dec
loope
mov
xchg
(bad)
iret
mov
adc
pop
nop
and
cmp
sub
sti
mov
pop
mov
aad
push
mov
cmp
les
dec
imul
test
inc
fmulp
xchg
adc
and
iret
jmp
movs
loopne
das
retf
inc
(bad)
iret
dec
jae
ja
mov
retf
and
push
cmps
in
pop
and
popf
or
mov
dec
push
mov
pop
stc
push
push
dec
mov
cmc
in
pop
scas
mov
sub
xor
xor
enter
mov
in
ret
xlat
adc
adc
fnsave
retf
or
xor
bound
icebp
add
dec
and
mov
lock
add
out
push
(bad)
xchg
test
and
lds
out
mov
pop
test
(bad)
mov
mov
fs
popa
jns
or
jmp
push
mov
push
sbb
inc
ja
in
dec
xor
lods
es
mov
push
sbb
dec
mov
in
jne
pushf
test
push
mov
xlat
dec
dec
push
test
push
sub
stos
sub
stc
mov
inc
sti
dec
xlat
mov
xor
mov
test
cmps
inc
clc
xor
cli
ret
(bad)
fsub
cli
test
stos
ja
out
ds
add
push
jne
lock
movs
add
lods
dec
jbe
mov
mov
or
call
sub
imul
or
and
mov
push
adc
xchg
mov
es
fmul
xor
add
lea
mov
dec
mov
dec
jno
jno
lods
mov
iret
nop
inc
jle
push
cli
rcl
in
cmp
cdq
add
adc
cmp
xchg
call
xlat
retf
pop
shl
mov
xor
fimul
adc
jge
push
xchg
xor
cmp
push
push
sbb
mov
call
dec
test
jg
inc
adc
push
jl
out
movs
adc
push
mov
mov
imul
jb
lds
add
mov
xchg
jle
xchg
jmp
push
add
mov
idiv
icebp
dec
clc
loope
sbb
nop
cmps
cmp
pop
inc
push
ror
int3
daa
repz
call
sub
jecxz
div
mov
test
in
cdq
ror
test
adc
push
test
loopne
daa
xor
dec
test
sub
sbb
inc
or
fadd
push
mov
test
pop
dec
add
cmp
cld
pop
sbb
fcomp
sub
sub
out
in
pusha
outs
test
lock
sub
out
inc
mov
mov
jecxz
(bad)
outs
loopne
adc
mov
xlat
dec
sbb
mov
dec
mov
push
mov
dec
into
or
add
std
mov
pop
imul
adc
ret
cmp
daa
test
imul
push
jge
xor
rcr
adc
and
int
pusha
or
dec
xchg
data16
dec
mov
sbb
xchg
push
sub
out
repnz
xor
loop
lahf
inc
inc
inc
test
enter
xor
daa
dec
xchg
gs
ja
rcl
(bad)
add
inc
push
xor
xchg
leave
fs
fwait
jmp
mov
out
mov
jb
fsub
jae
dec
add
mov
mov
pop
ja
mov
and
cdq
dec
cmps
add
or
lds
or
mov
pop
inc
push
dec
mov
sbb
repnz
stc
fnstenv
aad
dec
ja
dec
into
and
sub
call
int3
adc
clc
mov
push
push
fdivr
daa
movs
outs
int3
sub
dec
sbb
in
cmp
int
jge
gs
add
add
cmp
(bad)
and
out
stos
repnz
scas
adc
adc
retf
push
mov
arpl
daa
fmul
sbb
sbb
inc
ja
mov
shr
es
xor
xor
loop
mov
int3
cmp
hlt
cwde
pop
(bad)
jmp
je
lods
mov
push
mov
outs
jno
cmps
retf
pop
nop
xor
pop
daa
adc
ret
and
int
adc
xchg
fimul
shl
or
dec
xchg
lds
hlt
fmul
movs
imul
xchg
test
fsubr
mov
pop
xchg
add
mov
out
das
mov
dec
and
sti
sub
sbb
or
fild
mov
into
mov
cs
data16
jle
shl
mov
mov
ret
and
outs
(bad)
xchg
push
jb
add
daa
sti
sub
aam
lock
fst
aaa
fstp
in
les
inc
out
xchg
xchg
mov
(bad)
loopne
xlat
iret
ja
ss
inc
std
leave
add
xchg
sub
loop
lahf
dec
pusha
outs
popf
pop
lods
mov
pop
jb
(bad)
pop
mov
xor
test
fisub
sub
popf
js
call
jmp
out
(bad)
jge
leave
mov
inc
mov
pop
xor
dec
and
enter
pusha
push
cmps
push
inc
pop
sbb
ror
ins
daa
sbb
aas
mov
mov
outs
pop
movs
sub
mov
js
add
cwde
mov
jbe
sub
dec
push
repnz
cmp
pop
(bad)
cmp
cmp
lahf
retf
fdivr
mov
popf
dec
movs
sbb
pop
fwait
scas
retf
cwde
sbb
dec
add
pushf
dec
xor
xlat
imul
out
(bad)
loope
xor
sbb
loop
dec
lods
sbb
mov
dec
sbb
lds
xchg
arpl
or
pop
fist
jecxz
addr16
ss
sbb
into
test
das
pop
mov
jo
int3
cmp
dec
popa
mov
xchg
dec
aaa
xor
test
inc
aad
inc
jg
fxch
mov
push
sti
and
xor
icebp
sti
mov
mov
push
push
int
or
inc
xor
inc
popf
xor
xchg
xor
mov
jg
dec
fnsave
dec
lds
outs
mov
test
and
movs
(bad)
fild
push
xor
lds
mov
add
in
imul
jnp
jl
or
imul
fbstp
jmp
outs
jne
dec
dec
dec
loopne
and
aaa
(bad)
push
je
rcl
ret
call
dec
adc
das
enter
jecxz
inc
inc
sbb
fdiv
add
mov
mov
imul
push
adc
add
pop
iret
test
pushf
rol
or
xchg
fdivr
jb
and
outs
not
push
push
fidiv
inc
add
adc
rcl
jnp
lods
shl
fadd
cmp
les
cmp
pop
inc
out
fnstcw
and
adc
mov
cmp
inc
xor
push
ins
push
xchg
push
fwait
pushf
ror
xor
mov
cmp
mov
add
pop
das
jo
mov
or
hlt
(bad)
outs
shl
test
mov
sbb
clc
dec
fwait
add
jge
pmaddwd
push
push
dec
push
mov
push
mov
cli
mov
inc
ins
iret
jg
adc
mov
leave
pop
add
retf
push
clc
scas
sbb
xor
inc
adc
(bad)
pop
mov
dec
pop
xor
xchg
jbe
pop
lods
leave
xchg
or
rcr
mov
test
pop
leave
sub
pop
movs
out
test
push
add
loope
das
cmp
push
mov
sub
jo
jmp
test
pop
mov
bound
jnp
adc
xlat
xor
xchg
lds
(bad)
cmps
cmps
sahf
leave
adc
dec
lock
rcl
in
out
rcl
sahf
sub
bnd
cwde
jne
xchg
aaa
ins
sub
sahf
cmc
push
xchg
xchg
dec
call
cmp
dec
inc
or
cmp
push
sbb
test
test
push
iret
add
rcr
mov
fwait
repnz
ret
mov
mov
sbb
mov
leave
push
mov
add
loopne
stos
add
in
test
std
push
xor
sbb
inc
mov
push
jns
test
repnz
or
cs
xchg
js
(bad)
and
xor
jmp
int3
lods
pop
or
cli
mov
loop
cdq
lahf
mov
jno
mov
movs
in
cmc
jnp
jl
inc
adc
rcr
test
inc
add
add
pop
into
daa
out
or
xlat
in
shl
dec
mov
xor
cmps
ja
ins
add
push
xchg
(bad)
sub
imul
pop
xbegin
jmpw
loope
xchg
(bad)
(bad)
test
mov
dec
xlat
jecxz
or
ficom
inc
mov
push
cmp
adc
push
mov
adc
mov
or
pop
into
xchg
fs
stos
pop
inc
inc
mov
mov
cmps
jp
mov
shr
iret
sti
jle
je
sbb
hlt
mov
movs
fmul
mul
mov
sbb
sub
jo
xchg
retf
(bad)
fist
scas
mov
add
repnz
inc
adc
cmpxchg
inc
mov
test
push
mov
pusha
shr
adc
pop
mov
cs
rol
icebp
sbb
inc
out
pop
inc
into
xor
xor
test
popf
cmps
call
cmps
retf
jl
jbe
push
out
or
mov
dec
aad
push
mov
addr16
das
sbb
js
adc
cmp
inc
clc
mov
les
out
mov
xchg
retf
push
imul
sbb
dec
(bad)
test
movs
aas
jg
mov
mov
adc
push
mov
das
(bad)
jmp
fsubr
and
sar
cs
(bad)
imul
push
and
movs
aas
(bad)
jns
shl
jmp
inc
pop
scas
xchg
movs
sbb
in
out
jne
sub
sbb
push
inc
test
jno
xchg
sbb
add
mov
jb
rol
aaa
icebp
in
retf
pop
cmp
popf
dec
or
in
mov
inc
xlat
fwait
test
cmp
ja
xchg
(bad)
in
or
mov
jno
mov
test
jns
pusha
cmp
enter
inc
or
push
cwde
(bad)
push
sub
jo
push
push
or
test
or
jecxz
les
or
mov
add
mov
adc
jae
add
mov
in
je
mov
cmp
cmp
jns
sub
mov
push
push
push
aas
add
push
fdiv
pop
lds
push
out
mov
movs
test
ret
or
or
hlt
fwait
das
pop
cli
xchg
call
dec
inc
or
cli
adc
das
pop
mov
pop
sbb
xor
push
xlat
add
mov
aad
or
cwde
xlat
fwait
add
jmp
inc
add
int3
movs
xor
push
mov
sub
xchg
les
cmp
int
iret
xor
fcmovnbe
adc
hlt
out
daa
dec
jnp
stc
popf
jmp
and
(bad)
mov
cmp
push
add
and
cmp
addr16
mov
mov
adc
inc
sahf
xchg
cmp
cmp
xor
inc
test
lahf
mov
das
xor
sbb
cdq
(bad)
movs
sub
int
push
imul
sub
lea
jmp
mov
repz
mov
cdq
inc
ss
gs
mul
jmp
sub
push
or
add
imul
ja
adc
ins
mov
or
dec
mov
cld
clc
adc
xor
test
sar
int
xor
fldcw
xor
sub
shl
jl
ins
pop
test
jnp
xchg
repnz
dec
ficomp
add
out
int
imul
jo
div
stos
mov
and
adc
adc
in
fs
cli
int3
loop
mov
jb
dec
pop
jp
out
or
adc
or
and
dec
outs
push
idiv
shr
inc
call
je
in
jmp
mov
movs
loopne
add
xor
sub
jo
cwde
adc
lea
cmp
mov
mov
xlat
repnz
es
adc
push
mov
inc
xchg
std
rcl
(bad)
sti
push
xor
push
or
push
or
push
les
nop
or
cli
adc
pushf
mov
aad
and
push
fucomi
push
dec
or
cmps
or
jbe
dec
dec
icebp
jbe
sub
xchg
dec
push
popa
aam
rol
inc
ins
add
push
adc
jb
shl
mov
push
pop
ret
aam
mov
les
cmp
ins
test
je
dec
dec
or
add
(bad)
and
ss
push
call
pushf
xchg
xchg
pop
sahf
inc
mov
mov
sub
bound
cmp
out
sub
xchg
inc
cmp
(bad)
js
xchg
leave
arpl
retf
lea
inc
mov
in
fld
iret
es
out
jne
gs
mov
and
mov
shl
push
aas
pop
mov
xor
sbb
lea
js
mov
mov
lea
les
popf
mov
and
das
(bad)
xchg
add
cmp
lock
lahf
sbb
ja
dec
lds
pop
jge
adc
jbe
sbb
addr16
ret
neg
clc
xchg
rol
test
xchg
int
cwde
push
jbe
fstp
scas
aam
adc
add
or
xchg
push
outs
jecxz
mov
xor
jnp
push
add
push
cmovns
mov
shl
xchg
push
mov
(bad)
(bad)
adc
mov
fcom
fs
(bad)
mov
scas
jne
mov
mov
xor
pop
je
push
sbb
jae
push
cs
fucomip
push
stc
dec
and
pusha
inc
dec
nop
adc
and
adc
dec
mov
stos
aaa
mov
sbb
inc
cld
dec
push
rol
push
aam
mov
add
lahf
aad
xchg
imul
sub
div
cdq
and
shl
sub
cli
xor
add
mov
dec
xchg
and
sub
lods
dec
add
popf
add
jg
fwait
int3
jmp
stos
rcr
sub
aam
cmc
cs
fldcw
fisub
inc
adc
jb
nop
pop
out
mov
pop
pop
jbe
xor
mov
push
ds
push
pop
es
cli
pop
xchg
lods
jae
daa
sub
loop
xor
hlt
es
and
aam
(bad)
mov
shl
ficom
gs
adc
aam
cmovbe
fmul
daa
jge
push
mov
mov
je
sbb
xor
call
xor
add
sbb
dec
repz
test
lods
sub
jmp
dec
dec
or
xchg
test
sahf
(bad)
call
popa
jb
loop
and
jnp
test
jecxz
iret
scas
add
adc
jge
rcl
cmp
push
fsubr
or
xchg
icebp
xchg
cld
cld
push
clc
mov
arpl
push
pushf
add
jmp
popf
std
pop
stc
lea
fwait
mov
inc
dec
push
ret
fisub
fidiv
out
sbb
inc
mov
bound
jb
jno
inc
push
dec
call
mov
and
sub
cmp
xor
xor
mov
fldenv
scas
and
or
cdq
test
cmps
fist
xchg
push
add
gs
mov
and
cmps
dec
fwait
dec
(bad)
stc
call
cld
pop
pusha
or
adc
movs
xor
je
xchg
inc
sub
xchg
xor
call
enter
pop
mul
aas
movs
push
jmp
jmp
test
pop
stos
mov
js
icebp
cmp
stos
loopne
test
mov
jno
rol
mov
(bad)
out
and
pop
shr
popa
loop
sti
ins
mov
ficom
add
inc
mov
test
rcl
ja
add
sti
out
jmp
push
inc
and
jmp
sbb
mov
xchg
inc
mov
cmp
adc
inc
imul
call
mov
inc
clc
mov
into
popf
cmp
aad
mov
sbb
outs
sbb
add
inc
fild
hlt
jge
and
imul
jp
retf
in
add
and
mov
das
xchg
fmul
std
adc
xor
mov
out
aaa
sbb
mov
pop
imul
in
pop
out
sbb
fistp
(bad)
xchg
pusha
mov
loopne
out
push
inc
int
mov
test
jmp
pop
out
cmp
sbb
loope
arpl
push
iret
add
mov
adc
jmp
cmp
mov
in
stos
push
pushf
cli
ret
lea
call
jmp
xor
bnd
adc
ins
push
int3
in
retf
xor
xor
cmps
add
pop
fstp
mov
out
fnstsw
out
mov
lock
dec
sub
repnz
cli
lock
add
sbb
rcl
mov
mov
xlat
inc
and
stos
(bad)
mov
into
jp
outs
enter
ss
fild
inc
nop
aaa
jecxz
fisttp
cmps
test
mov
lds
fiadd
pop
add
adc
push
inc
pop
adc
add
stos
mov
lock
into
pop
mov
sub
jo
std
rol
adc
outs
imul
dec
sub
arpl
mov
jl
(bad)
fdivp
xchg
aad
mov
xchg
sbb
ins
add
shl
xchg
sub
(bad)
mov
ds
test
out
dec
cld
gs
or
pavgb
add
push
inc
push
icebp
cmps
push
fwait
mov
and
iret
adc
dec
mov
xor
xlat
fistp
psadbw
push
fnstcw
popa
jne
mov
dec
bound
xchg
add
into
out
aam
and
fst
fcomp
jle
pop
addr16
ds
xchg
mov
jbe
adc
push
nop
ds
cs
mov
repnz
or
xchg
push
or
mov
xor
mov
mov
push
fst
das
dec
call
(bad)
ficom
sbb
push
mov
cmps
and
and
add
shr
shl
lahf
jno
xlat
fs
jb
clc
lahf
add
sbb
div
or
ror
pop
in
and
xor
mov
rcl
pop
mov
sbb
fistp
push
adc
inc
inc
sahf
gs
loopne
ss
xchg
ret
dec
ja
mov
scas
gs
sub
mov
push
adc
fidivr
nop
ins
sti
dec
push
adc
(bad)
cmp
ins
in
pop
push
aam
shl
or
lods
pop
xchg
push
cmp
fs
jb
retf
push
jb
mov
xchg
hlt
cvttps2pi
sub
cmc
shrd
loopne
sub
in
inc
mov
cld
lea
ja
adc
mov
add
repnz
stos
xor
pop
adc
push
aam
mov
lds
daa
xchg
and
jge
je
pop
out
xchg
loopne
ret
rcl
mov
loope
les
cmps
inc
pop
retf
(bad)
jae
jg
sbb
push
mov
mov
(bad)
xchg
dec
jae
enter
jp
sbb
and
and
and
cmc
pop
xchg
mov
xchg
xor
pop
push
cmp
inc
jb
xchg
call
std
ret
jno
mov
rcr
cs
xchg
cld
mov
dec
out
pop
mov
mov
daa
mov
inc
shl
or
xor
(bad)
dec
mov
cwde
(bad)
mov
mov
inc
mov
pop
add
stos
and
cli
loope
mov
inc
inc
je
lods
mov
pop
mov
leave
sub
dec
outs
dec
es
and
pop
addr16
in
jl
or
mov
push
retf
ret
bound
jp
mov
or
sbb
jnp
vmwrite
ss
inc
sbb
push
int3
add
icebp
xlat
jle
jbe
pushf
push
hlt
icebp
inc
in
push
aaa
xor
mov
sbb
mov
mov
scas
mov
mov
in
adc
daa
pop
data16
mov
push
dec
jne
test
adc
inc
xor
mov
aad
mov
lods
mov
gs
pop
scas
xchg
sub
mov
es
dec
or
jne
adc
pop
push
sti
iret
mov
dec
sub
shl
sub
cmp
imul
loop
xor
jb
aam
xchg
pop
jmp
jb
packssdw
int
sub
pop
call
jmp
mov
sbb
jmp
pop
outs
xchg
scas
push
nop
xor
xor
xchg
lahf
xchg
pop
vcvtps2pd
push
aad
adc
jae
das
in
(bad)
movs
outs
inc
sbb
movs
fdiv
mov
loop
push
iret
dec
hlt
adc
push
cdq
test
das
sar
pushf
jmp
pop
or
int
into
inc
sub
adc
or
xchg
call
mov
sbb
pop
xor
adc
jne
retf
ins
sbb
lahf
jb
das
adc
mov
test
inc
cmp
cmc
imul
(bad)
jmp
pop
push
jecxz
jge
in
out
xor
cmps
inc
mov
pusha
mov
inc
test
add
movs
popf
dec
adc
dec
fsubr
(bad)
cmp
xor
mov
call
inc
adc
or
push
test
xchg
push
mov
mov
sub
dec
mov
in
bound
shr
and
mov
or
inc
pop
cli
aam
lods
adc
dec
pop
inc
push
dec
mov
sub
inc
mov
pop
sbb
into
ss
push
adc
push
test
(bad)
adc
xchg
jmp
shl
pop
xor
push
retf
ja
cmp
movs
stos
pop
push
popa
add
mov
adc
out
mov
pop
lods
fsubr
adc
in
ret
push
cwde
adc
loopne
mov
repz
add
push
xor
in
clc
mov
mov
sub
test
fstp
pushf
mov
aad
add
pushf
outs
out
imul
js
dec
arpl
add
dec
or
aaa
and
mov
lods
inc
test
stc
push
call
arpl
xchg
mov
jno
or
jo
fcom
in
popf
jns
xor
push
fdiv
rol
out
sahf
aas
or
popf
mov
cs
add
push
movs
mov
inc
mov
in
sahf
out
out
mov
test
in
(bad)
mov
mov
xchg
sub
fiadd
dec
pop
call
add
and
xor
inc
push
pop
mov
stos
and
xchg
push
sahf
lods
je
or
or
push
jecxz
mov
loopne
or
mov
imul
mov
mov
in
aas
cmc
jecxz
movs
mov
sub
mov
add
push
push
js
dec
fsub
sub
xor
sub
(bad)
inc
in
sahf
add
aas
adc
pop
repz
jge
xchg
mov
push
xchg
mov
sub
dec
arpl
mov
icebp
mov
mov
fisub
lods
cmp
out
push
jmp
stos
or
ins
int
xchg
and
mov
lock
xor
lock
retf
call
mov
add
aaa
sbb
bound
sbb
imul
xchg
adc
dec
dec
ins
fs
test
push
xor
mov
lods
push
push
iret
inc
xor
mov
mov
jno
cmc
pusha
and
out
dec
pop
mov
out
push
push
imul
mov
mov
pop
xchg
(bad)
lea
ror
loopne
mov
dec
cmps
jno
dec
cmps
pushf
aaa
fiadd
mov
jge
fsubr
cmps
aad
pop
mov
dec
and
push
std
inc
push
add
jae
ins
cwde
jmp
or
(bad)
lahf
sub
jmp
mov
ins
addr16
adc
mov
cmps
nop
inc
mov
push
jb
cmp
adc
jo
scas
mov
fs
inc
fldenv
ret
cld
adc
pop
push
sbb
outs
inc
xor
cmp
popa
xchg
pop
jmp
dec
adc
and
push
push
jb
daa
stos
and
repz
cmps
jno
cdq
cmp
(bad)
in
pop
adc
xor
mov
cwde
xor
loope
daa
data16
mov
jg
cdq
sub
pop
sbb
cmp
ret
daa
or
sub
stos
adc
adc
je
pop
mov
dec
cmps
jmp
loopne
inc
dec
icebp
pop
enter
sbb
mov
and
and
mov
mov
mov
repnz
int
les
fsubr
imul
ins
adc
mov
popf
call
scas
fbstp
pop
dec
fild
aaa
jae
out
sbb
ret
jl
pushf
fwait
push
ds
xor
jbe
jnp
fmul
sub
and
jl
sbb
cmps
and
jp
adc
fcom
mov
push
push
neg
dec
neg
mov
daa
lods
pop
sbb
sub
inc
(bad)
mov
(bad)
pop
sbb
pop
xchg
mov
cs
push
fnstcw
fnstcw
dec
xchg
in
push
mov
cmc
jbe
stos
push
push
jmp
or
jb
(bad)
ja
stos
dec
hlt
fcmove
cmp
scas
pushf
ins
xchg
mov
push
mov
jb
pop
stc
and
jp
push
sub
daa
out
jbe
(bad)
mov
inc
fcom
jecxz
sti
repz
rcl
and
push
adc
gs
clc
inc
and
xchg
dec
mov
sbb
push
pop
jnp
add
mov
push
ds
cmps
mov
adc
dec
std
sbb
or
pop
jmp
inc
pop
aam
xchg
in
fwait
shl
lods
sbb
jl
pop
and
or
sub
(bad)
fs
xchg
mov
jle
fldenv
pop
mov
xor
out
popf
lea
add
mov
sbb
mov
fst
lds
mov
sbb
aam
sbb
dec
jl
xor
and
xor
addr16
leave
inc
push
mov
and
mov
adc
jp
test
call
xor
adc
pop
mov
test
outs
ret
lock
movs
lahf
(bad)
cmc
mov
les
jnp
cdq
inc
bound
jae
cli
scas
sbb
sbb
inc
enter
mov
shl
addr16
jmp
pop
mov
gs
mov
push
pushf
int
push
repz
pop
xchg
push
(bad)
pop
jno
pop
test
xchg
mov
into
jle
inc
inc
mov
cmp
in
adc
jp
imul
sbb
inc
test
and
sbb
and
std
ins
xor
jae
jecxz
out
xor
cmp
test
jnp
push
retf
inc
mov
cmp
jl
mov
fwait
lahf
pop
in
(bad)
cmc
sub
dec
imul
js
cmp
push
inc
adc
sbb
clc
cmps
mov
adc
jo
js
mov
xchg
push
xchg
(bad)
int
fstp
sub
ja
sbb
pop
xchg
aaa
inc
arpl
ds
dec
mov
aas
in
add
dec
xchg
mov
out
mov
xor
dec
mov
cdq
add
inc
lahf
sub
mov
inc
inc
leave
lods
lock
pop
daa
repnz
pop
retf
aad
push
xchg
mov
cmps
(bad)
and
cmp
(bad)
push
movs
mov
and
out
sub
sbb
xchg
mov
das
mov
sbb
fld
int
inc
or
mov
xor
add
(bad)
sub
sbb
mov
es
sti
sub
shl
(bad)
mov
cmp
and
scas
pop
data16
xchg
fisttp
lock
(bad)
push
sahf
mov
mov
add
or
cmp
jmp
cli
loop
mov
add
fistp
pop
pop
(bad)
stos
push
cwde
lds
mov
jge
test
pop
or
mov
loopne
bound
retf
fisttp
loop
shr
sub
xchg
outs
stos
xor
adc
rol
xchg
mov
stos
mov
jl
stos
cmp
ja
pushf
jg
cld
lock
lods
adc
aas
cmp
(bad)
lahf
mov
pop
mov
cmp
loop
test
add
and
jns
stos
push
and
gs
aam
dec
cmps
dec
push
xor
es
fbstp
icebp
jnp
(bad)
jnp
fadd
jmp
movs
and
mov
rcr
and
pop
add
into
movs
fsub
hlt
mov
push
scas
push
dec
xor
add
sahf
test
cmp
std
pop
mov
fsub
and
clc
sar
sti
inc
imul
push
mov
cmps
fsub
mov
xchg
gs
in
xchg
or
mov
adc
xor
dec
sub
xchg
and
not
inc
mov
in
xchg
aad
pushf
aad
fmul
adc
call
in
sbb
and
or
shr
jae
fdivr
outs
xor
add
nop
cmp
stos
mov
mov
mov
adc
pop
xor
xor
mov
mov
push
loope
xor
jb
and
sub
cs
dec
out
es
repz
pop
and
and
adc
or
xor
pusha
lods
loopne
inc
xchg
pop
push
cwde
mov
and
adc
fwait
data16
leave
popf
mov
in
daa
jnp
cmp
repnz
test
sar
jmp
mov
pop
push
dec
xor
pop
mov
pop
outs
retf
test
scas
push
iret
pop
pushf
ins
adc
mov
js
xchg
or
cmp
pop
bound
cdq
aaa
mov
(bad)
jp
pop
outs
or
bnd
mov
jb
jb
or
loope
xchg
sub
xor
cdq
or
dec
popf
jg
stos
mov
add
jo
ret
mov
(bad)
fnstenv
scas
add
pop
(bad)
lods
xor
imul
inc
push
mov
or
pushf
xor
mov
es
stos
mov
imul
and
mov
sbb
xor
ins
aam
shl
fs
inc
mov
push
dec
inc
jne
aaa
cmc
clc
sbb
nop
aam
neg
and
fcmove
lock
sahf
mov
lock
and
or
jbe
cmps
or
mov
jmp
jmp
stos
or
xor
push
ja
fcomp
mov
or
add
loope
je
ret
or
or
imul
popf
cmp
movs
xchg
int3
pushf
mov
mul
outs
aad
cmp
repz
sub
dec
add
out
sahf
cli
loopne
dec
xchg
retf
mov
dec
test
push
cmp
or
xlat
dec
lahf
sar
push
movs
xchg
scas
sub
repz
(bad)
or
mov
and
xchg
push
test
call
sbb
cmps
mov
inc
repnz
pop
dec
(bad)
mov
adc
cmp
test
and
add
(bad)
lock
push
(bad)
inc
dec
inc
call
mov
neg
pop
and
mov
sub
mov
sub
outs
push
sub
out
(bad)
shl
jg
fdiv
icebp
sub
enter
imul
aas
xor
mov
pop
xchg
push
mov
pop
arpl
add
std
in
aaa
xchg
xor
pop
jbe
fist
cwde
scas
sbb
add
mov
call
and
xor
popf
adc
and
sbb
mov
jp
inc
push
inc
mov
int
xchg
imul
or
cmps
inc
adc
jmp
lods
scas
fs
cmp
mov
das
inc
fwait
cli
inc
jmp
in
data16
inc
loope
jge
push
or
aad
sbb
mov
add
ficom
aam
lock
out
cmp
sub
sub
daa
aad
sbb
add
xlat
fadd
xor
lea
into
or
xor
aad
fst
adc
xor
pop
mov
clc
pusha
aas
test
clc
adc
aas
fldcw
push
(bad)
clc
and
push
std
cwde
xor
iret
push
test
pop
jbe
sub
in
mov
je
xchg
cmp
sbb
retf
nop
adc
and
inc
rcr
fcomip
xor
cwde
test
mov
mov
pop
add
inc
in
gs
pop
loop
fs
and
push
sahf
popa
add
mov
mov
sbb
retf
inc
shr
call
ds
nop
pop
addr16
xor
lods
(bad)
and
shl
mov
ficom
mov
lock
inc
jmp
je
dec
out
push
stos
dec
js
sbb
mov
sar
xchg
int
push
retf
cwde
xor
pop
movs
mov
adc
push
ins
pop
icebp
xor
mov
hlt
xor
pop
cmps
aas
ret
mov
xchg
imul
adc
retf
jmp
cmps
je
dec
or
fucomi
mov
dec
inc
push
cmp
pop
fldcw
xor
mov
std
bound
cmovp
loope
rcr
inc
sub
gs
hlt
das
or
(bad)
lock
int
jl
xchg
shl
lea
push
(bad)
jge
test
cli
jbe
push
push
movs
mov
and
mov
mov
push
pop
jbe
sbb
gs
sbb
mov
sbb
mov
mov
repz
jg
je
cld
cld
adc
push
sbb
xor
sbb
inc
int3
jbe
cmps
adc
cli
ds
(bad)
dec
sub
in
lods
pop
cdq
sbb
test
mov
inc
sub
sub
pop
mov
inc
out
dec
(bad)
out
shl
in
mov
jb
add
adc
add
call
daa
sbb
mov
cwde
mov
dec
into
sub
mov
adc
arpl
mov
or
push
ja
int
mov
cmp
xor
rcr
fstp
sbb
in
nop
fidiv
mov
xchg
popa
iret
mov
out
xchg
cmc
fidiv
and
mov
mov
bound
test
sbb
adc
ficom
cmp
cmp
xchg
lods
pcmpeqb
(bad)
adc
ficom
mov
in
sub
xchg
aas
jbe
or
sbb
xchg
add
dec
retf
jmp
jp
mov
or
ret
or
popf
test
xchg
enter
ins
mov
pop
ret
sub
mov
fistp
add
je
cmp
std
mov
data16
sub
jg
add
adc
cmc
adc
xchg
fld
xor
lahf
test
mov
cmc
repz
add
or
add
xor
mov
jp
lahf
loop
inc
mov
cmp
cmp
pop
xor
mov
dec
mov
js
repnz
and
mov
push
mov
push
jno
fnstenv
jne
add
leave
and
out
mov
into
imul
sbb
fs
and
add
fld
mov
test
or
inc
add
add
rol
adc
push
scas
xlat
sub
or
stos
push
or
lahf
dec
(bad)
and
ret
cmp
jo
xor
xor
int3
int
mov
enter
pop
jmp
call
inc
es
pop
push
lea
sbb
mov
xchg
xchg
jg
xor
dec
jmp
arpl
sub
jle
mov
push
sub
pop
cmc
cmp
mov
in
push
(bad)
xor
xchg
out
pop
and
and
add
mov
aas
and
pop
cld
dec
lods
inc
in
mov
inc
jns
out
mov
pushf
cmp
lods
cmp
sub
inc
enter
inc
xchg
aam
dec
or
pop
or
hlt
imul
jne
sub
es
xchg
jno
pop
push
aad
xchg
xchg
add
push
dec
fisub
mov
xor
sbb
jp
out
call
fild
sahf
pop
test
xor
sbb
(bad)
cmp
dec
jg
test
mov
xor
adc
mov
gs
adc
xor
pop
call
add
out
sbb
mov
ret
mov
jns
ds
jg
lods
sub
lock
sub
inc
leave
jo
cdq
sbb
pop
jmp
in
and
das
shl
mov
inc
cmp
xor
loop
xor
call
adc
sbb
xor
sar
std
out
mov
inc
pop
mov
jmp
mul
or
mov
into
call
jne
mov
imul
(bad)
mov
dec
mov
jbe
outs
into
dec
aaa
push
pop
out
aad
dec
icebp
fnstsw
mov
sub
sub
mov
xor
shl
mov
(bad)
fld
cwde
dec
inc
enter
fistp
ins
lods
mov
sti
dec
pushf
bound
or
mov
retf
pop
loop
loopne
(bad)
and
push
clc
cli
pop
mov
xor
call
outs
dec
mov
push
repz
lahf
into
loopne
mov
mov
int
pop
in
inc
pop
cmp
in
mov
pop
lods
pop
test
mov
std
hlt
pushf
adc
mov
jl
pop
scas
pusha
jp
(bad)
in
adc
ja
jno
mov
xor
xchg
aad
cli
xchg
ins
les
repnz
out
dec
shr
inc
cmp
ins
inc
hlt
inc
dec
inc
stc
cmps
dec
mov
mov
arpl
(bad)
fsubr
cdq
(bad)
add
mov
mov
aam
dec
add
xchg
jns
cs
mov
out
lock
enter
jae
ins
xchg
and
int3
adc
cmp
aas
repz
fyl2x
aas
cmp
jge
xchg
inc
imul
push
pop
ds
rcl
shr
fdiv
pop
scas
or
jmp
push
(bad)
movs
std
and
mov
aaa
test
fld
cmc
pushf
loope
cdq
dec
inc
call
jl
mov
cmp
and
in
xor
pop
js
iret
out
mov
and
sub
add
mov
mov
add
inc
jb
jns
inc
adc
jmp
mov
outs
loope
jno
pop
push
jmp
das
xor
jb
adc
adc
ss
push
xor
scas
mov
cmp
loop
aam
dec
pushf
mov
xor
ss
and
jle
push
ror
out
jg
imul
sar
mov
mov
mov
arpl
stc
mul
in
add
inc
nop
mov
cmp
stos
mov
leave
(bad)
xor
popf
es
pop
sub
shr
(bad)
sahf
jo
sbb
outs
and
adc
pop
fadd
mov
cmps
mov
retf
imul
pop
dec
and
(bad)
push
mov
mov
daa
aaa
out
add
lea
dec
nop
sub
pop
mov
cs
adc
movs
jne
and
sub
imul
and
push
leave
jmp
int3
mov
mov
imul
xchg
cmp
int
adc
pop
cdq
jmp
imul
jae
addr16
or
ja
xor
repnz
adc
loope
push
outs
mov
dec
sub
push
mov
push
retf
add
xchg
xchg
mov
mov
xor
les
push
int3
gs
lods
cli
ja
dec
or
xchg
or
sbb
fldenv
jl
in
xchg
repz
aas
(bad)
mov
rcl
(bad)
add
test
movs
add
shl
jmp
jle
dec
test
fidivr
out
call
mov
sar
or
adc
xchg
mov
pusha
xchg
mov
fnsave
fadd
enter
push
fisubr
pop
out
push
je
aam
int
sbb
and
cmp
adc
pop
gs
xchg
test
(bad)
nop
cmps
xor
xchg
xchg
push
mov
and
call
setb
xor
imul
lds
cdq
inc
xchg
mov
and
inc
je
xchg
inc
xor
sub
xor
jl
out
or
arpl
mov
mov
sahf
mov
fiadd
fst
jmp
icebp
in
out
push
retf
jmp
xchg
ret
cli
add
dec
jnp
nop
jecxz
dec
retf
cwde
inc
stos
das
add
movs
stc
int
iret
(bad)
ret
in
cmps
jmp
fistp
scas
dec
bound
test
in
fwait
dec
push
and
fcmovbe
ins
xchg
repnz
sbb
idiv
jo
push
outs
mov
adc
adc
cdq
ret
arpl
jle
cmp
not
gs
add
data16
ss
mov
mov
nop
loop
loope
test
and
inc
ret
repnz
in
pop
mov
imul
dec
repnz
add
aaa
in
xchg
sbb
(bad)
pop
or
popf
movs
icebp
inc
jecxz
and
jl
pusha
js
(bad)
inc
inc
pop
sub
ja
(bad)
addr16
mov
pop
cmp
imul
mov
cli
pop
push
cdq
cdq
enter
mov
or
in
sahf
repnz
add
xchg
stos
mov
adc
cmp
jb
ret
jg
out
jmp
dec
xchg
in
loop
push
mov
push
and
mov
sbb
xor
cli
dec
movs
pop
adc
adc
xlat
pop
cmps
nop
stc
popa
sub
call
inc
and
fcom
fwait
data16
in
cmp
pop
dec
jp
mov
mov
nop
jb
iret
test
(bad)
pop
adc
pop
cdq
js
or
push
xchg
push
les
ins
cwde
pop
and
ja
inc
jno
xor
or
mov
jbe
into
xchg
lahf
scas
mov
outs
pop
push
jge
aaa
or
sub
fld
fwait
mov
push
neg
adc
mov
dec
rcr
mov
call
cmp
ja
jecxz
mov
aas
gs
jecxz
adc
dec
push
rcr
addr16
call
sub
fs
inc
fldcw
imul
jg
pop
sahf
mov
cmp
add
xchg
mov
and
adc
jg
mov
clc
lock
out
arpl
fsub
cdq
sub
inc
pop
movs
mov
cld
cmc
add
mov
icebp
fld
mov
aas
lahf
rcl
inc
mov
daa
pop
push
mov
mov
int
outs
push
pop
movs
push
jne
pop
retf
cmc
cmp
push
in
aas
cwde
adc
cmc
xchg
push
leave
out
xchg
aaa
ret
pop
(bad)
lods
psrld
cld
cmp
mov
shl
cmps
ins
imul
neg
jp
mov
xchg
popf
and
js
jge
mov
inc
add
shl
sbb
and
mov
push
sub
mov
addr16
retf
out
mov
sub
out
sbb
scas
fisubr
in
leave
cmp
xchg
movs
push
repz
xor
pop
idiv
loopne
sti
or
and
jmp
sub
cmp
fwait
mov
fdiv
adc
rcl
or
adc
xchg
dec
mul
cmps
jns
movs
fisubr
and
jns
aaa
ss
cmp
xchg
sub
or
scas
ret
push
pop
xchg
jbe
xor
push
ficomp
dec
xchg
dec
jo
mov
fnstcw
fidivr
call
mov
or
repz
dec
push
adc
sub
stc
pop
xlat
ins
xor
push
xchg
call
cmp
cdq
fisttp
sahf
xor
rcr
sbb
hlt
push
fstp
xlat
add
cmp
cmps
pop
push
or
inc
jmp
push
inc
popa
and
sub
xor
or
xor
sbb
mov
ret
jmp
or
push
push
into
ds
sahf
sub
push
cmp
fdivr
fwait
pop
and
adc
in
(bad)
call
xchg
bound
dec
dec
dec
jge
ss
cmps
push
test
sbb
or
xor
fiadd
mov
sub
and
scas
dec
adc
push
scas
mov
int3
sbb
(bad)
in
sbb
sbb
xor
outs
pushf
jbe
jp
jmp
mov
sbb
mov
mov
sub
stos
mov
loop
scas
mov
aad
inc
adc
sbb
movsx
in
cmc
mov
repnz
mov
sbb
enter
rol
aam
xor
pop
mov
ins
xchg
xor
or
inc
lahf
frstor
inc
dec
sub
jmp
lock
lea
retf
addr16
imul
stc
cld
outs
or
push
outs
mov
fsub
scas
fs
xor
popa
jecxz
call
dec
adc
mov
xchg
movs
pop
sub
jbe
mov
dec
adc
inc
dec
ins
add
aas
mov
xchg
(bad)
retf
ror
sti
jle
std
push
stos
stc
aam
push
xchg
mov
leave
in
pop
lods
call
sub
pusha
sbb
pop
xchg
pop
fbld
add
jno
or
fiadd
fldcw
stc
cmps
or
add
jae
push
or
pop
mov
cld
dec
push
pop
movs
jne
not
xchg
outs
jg
stos
cmp
push
(bad)
frstor
iret
popa
add
mov
lds
xchg
neg
mov
push
lods
sbb
dec
xor
stos
jmp
ret
mov
mov
inc
fst
cmps
inc
jg
mov
mov
cli
jne
mov
cmps
or
jbe
ret
scas
jecxz
jb
or
sti
mov
xor
neg
xor
data16
adc
and
outs
out
inc
and
ss
mov
leave
je
mov
scas
jne
call
in
mov
push
fwait
icebp
hlt
ret
(bad)
lods
xchg
pop
retf
stos
popa
xor
pop
xor
clc
push
mov
mov
ins
xor
mov
pop
add
jnp
mov
loop
adc
cmp
std
loope
cmp
pop
mov
sti
in
aaa
mov
(bad)
dec
mov
data16
xor
lods
(bad)
xchg
xlat
out
sub
dec
mov
jmp
fiadd
(bad)
adc
inc
popf
scas
dec
sub
inc
call
or
in
xor
sti
pop
mov
iret
jmp
jno
or
scas
add
jno
nop
inc
sub
inc
mov
iret
add
jmp
jecxz
push
push
pop
cmp
push
cmc
push
adc
jo
pop
and
or
jae
retf
adc
push
clc
out
rcr
inc
popa
mov
outs
inc
or
lods
xchg
in
mov
add
hlt
xchg
mov
leave
sub
outs
icebp
dec
std
pusha
stos
xlat
sub
adc
jle
pop
dec
or
inc
pop
xchg
xor
cmp
mov
cdq
cmp
lods
sub
jno
and
daa
mov
mov
pop
xchg
mov
sub
mov
jecxz
push
icebp
fwait
jo
sbb
add
in
pop
and
lock
mov
bound
push
ss
mov
ret
scas
sub
jae
ret
push
sub
stc
xor
and
aas
out
xor
dec
out
out
dec
dec
aaa
retf
out
adc
out
or
cmp
mov
or
popa
mov
mov
mov
rcr
mov
jae
jnp
mov
push
or
add
fsubr
mov
jbe
xor
xchg
mov
scas
jo
ret
scas
ret
inc
xchg
push
clc
icebp
ret
iret
xchg
icebp
sub
sbb
leave
adc
les
sahf
or
imul
fiadd
retf
imul
stos
imul
mov
dec
popa
lea
pop
mov
push
jl
into
cwde
rcr
mov
scas
lea
xchg
push
jno
pushf
or
repnz
ffreep
inc
(bad)
mov
jmp
test
int
aaa
retf
dec
push
sbb
mov
pop
int3
aaa
fcmovnu
mov
sub
xchg
cld
dec
add
outs
push
nop
and
xchg
(bad)
push
lods
aad
jmp
ins
loope
mov
mov
xchg
jne
clc
pop
das
push
or
cli
and
idiv
sbb
or
call
ror
xchg
adc
xor
lods
cmp
push
std
loop
xchg
pop
adc
cmps
push
(bad)
(bad)
call
or
fidivr
stos
dec
int3
dec
pmuludq
push
push
cmp
add
inc
jo
pop
pop
retf
shl
sbb
jnp
and
out
add
enter
rcl
inc
sbb
mov
jmp
outs
push
cli
add
xchg
gs
out
adc
sub
jg
add
mov
inc
mov
jge
rol
movs
cwde
fcomp
jns
int
xor
push
sbb
out
pop
repnz
xchg
ficom
cli
cmp
icebp
mov
out
fld
mov
cmps
movs
(bad)
in
dec
outs
jecxz
pop
sbb
out
popa
cmp
dec
xor
jl
inc
shl
movs
sbb
or
movs
push
in
push
and
iret
adc
jae
pop
fadd
push
and
xchg
sbb
inc
mov
add
sub
push
movs
ja
and
popa
jl
outs
call
retf
fbld
add
pop
loope
inc
loope
sub
cdq
cmp
mov
js
push
xchg
cmp
cmp
ds
or
add
das
enter
mov
add
nop
and
jle
xor
jbe
sti
jg
call
and
xchg
pop
aam
lea
sub
addr16
lea
loopne
mov
xchg
mov
inc
lahf
and
test
push
jp
jp
or
aas
sti
adc
xchg
fisttp
push
mov
data16
fistp
xchg
sbb
add
out
add
aam
inc
dec
mov
jl
aam
repz
clc
test
retf
push
pandn
sbb
ds
xchg
rol
in
add
sahf
fbld
test
dec
test
hlt
in
popf
cdq
loop
inc
jbe
sub
es
into
lahf
(bad)
pop
out
sub
pushf
push
mov
and
ret
mov
fsub
pop
lods
es
scas
call
inc
loopne
maskmovq
mul
cmp
sar
jae
push
fwait
xchg
sub
add
xchg
push
pop
imul
cld
test
cmps
push
sbb
sub
bound
retf
into
inc
ins
sti
enter
xor
sub
dec
daa
mov
add
test
neg
jg
push
xchg
dec
inc
daa
mov
retf
enter
jno
mov
cli
js
inc
(bad)
(bad)
or
dec
push
loopne
out
cmp
cld
cmp
mov
sbb
pop
sub
and
xor
cmp
mov
shl
jb
dec
mov
xchg
xor
jmp
mov
mov
or
loope
push
push
lgs
icebp
enter
out
xchg
loope
adc
adc
out
add
popf
out
jns
mov
xchg
(bad)
rol
adc
push
or
cwde
mov
fwait
mov
xor
xlat
outs
dec
stos
sub
push
xor
push
add
mov
fisttp
xchg
mov
mov
jns
idiv
cld
out
jge
in
dec
mov
push
lahf
inc
dec
jno
push
arpl
shl
mov
scas
sti
xchg
je
adc
cdq
jno
cld
xor
popa
pop
ret
add
xor
clc
repnz
lock
out
mov
(bad)
sub
adc
ins
mov
loopne
cmp
(bad)
sbb
mov
cdq
pop
(bad)
mov
pop
adc
retf
in
lds
mov
adc
dec
fld
adc
pop
nop
lahf
outs
dec
pop
mov
into
nop
sub
sbb
xchg
push
inc
mov
outs
test
and
sub
hlt
sbb
sbb
adc
iret
add
hlt
mov
add
std
mov
inc
mov
mov
into
cmps
in
pop
sub
(bad)
retf
(bad)
ror
xchg
mov
fwait
inc
cmc
and
stc
shl
xor
mov
dec
dec
loop
xor
pop
rcl
lds
cmp
int
sti
pop
push
scas
mov
mov
repz
xor
ror
sub
(bad)
cdq
cmc
cmp
xchg
push
xchg
sbb
jle
pop
push
in
cwde
retf
daa
xor
out
scas
ds
movs
cmp
mov
push
cdq
inc
nop
push
cs
mov
cmc
repnz
in
cmp
outs
xor
xchg
jg
jae
es
and
push
data16
mov
stc
(bad)
mov
and
push
and
inc
jl
push
or
jae
xchg
dec
lods
sub
cmps
inc
mov
imul
out
retf
mov
xlat
dec
rcr
shl
and
or
sbb
adc
aaa
mov
das
(bad)
adc
bound
mov
fist
in
pop
(bad)
cmps
mov
ret
mov
add
stos
loopne
cdq
sub
mov
jecxz
dec
cmp
pop
xchg
jno
push
cdq
scas
movs
pop
or
jae
lods
mov
movd
out
je
push
dec
adc
(bad)
frstor
ret
inc
stos
ins
sti
ret
pop
mov
mov
xor
adc
adc
inc
js
mov
rcl
pop
jns
dec
arpl
push
cmp
mov
push
lock
cli
ret
dec
sbb
sub
lods
es
cmp
out
jb
cs
scas
add
mov
imul
rcr
rcl
sar
and
les
arpl
adc
aas
pop
int3
out
in
nop
popa
mov
inc
and
jle
xchg
or
scas
sub
mov
cmp
cmp
push
cmp
icebp
pop
mov
sub
sbb
scas
mov
jmp
(bad)
mov
dec
dec
imul
retf
dec
ret
xor
jmp
push
pop
pop
hlt
push
sub
retf
and
xor
lods
mov
arpl
mov
into
mov
xchg
(bad)
iret
jb
imul
retf
out
mov
int3
mov
dec
not
mov
cdq
scas
adc
movsx
mov
jecxz
fisttp
sub
adc
dec
mov
dec
push
cli
cld
push
popa
lds
enter
ja
std
push
cmp
inc
stos
pop
jbe
jbe
mov
cld
cmp
pop
add
adc
sbb
dec
dec
sub
mov
cmp
sub
lock
lahf
loop
loope
out
mov
jno
push
scas
cmp
scas
pop
mov
mov
xchg
jle
loopne
jns
pop
xor
dec
add
cmp
add
ss
fsubr
add
pop
xor
pop
xor
into
cmc
xor
pop
mov
pavgb
jecxz
movs
sub
ror
loop
in
pop
mov
and
fcomp
add
add
or
mov
xor
call
dec
pusha
and
pop
mov
bnd
ins
jae
pushf
outs
inc
rcl
xor
or
shl
rcr
xchg
dec
jge
aad
shl
cmp
cld
call
adc
test
leave
mov
js
repnz
mov
(bad)
dec
(bad)
fsub
push
call
jge
pop
inc
fdiv
and
sub
adc
mov
cmp
fwait
xchg
mov
js
push
in
xor
push
(bad)
(bad)
fmul
aas
fnstenv
pop
ins
aad
into
and
je
adc
or
jge
xchg
add
fsubr
inc
jl
sar
cdq
or
jmp
add
rcl
add
(bad)
cmp
sub
hlt
mov
shr
jbe
daa
ss
in
lods
inc
adc
adc
hlt
les
and
sub
push
rcl
and
gs
pop
push
sub
adc
mov
mov
cmps
test
fcomp
mov
call
sub
por
mov
movs
sub
(bad)
jnp
adc
repz
or
lahf
cld
push
pop
in
test
cli
fcmovb
movs
scas
stc
ds
shr
shl
push
pop
mov
xchg
out
mov
mov
ss
inc
repnz
fmul
aas
leave
fwait
xchg
push
inc
dec
sub
std
push
les
sbb
or
sbb
push
add
fnstcw
fidiv
push
leave
mov
cmp
push
dec
dec
mul
lods
and
xchg
push
jb
inc
cmps
dec
mov
push
push
mov
pop
pop
and
movs
ret
lahf
ds
nop
rcl
(bad)
cmps
sti
and
push
jle
pcmpgtd
addr16
ret
idiv
loop
mov
fild
shl
or
inc
sbb
out
sub
popa
int
jne
jnp
and
jnp
ret
std
push
ffreep
imul
repz
or
out
popa
cdq
repz
gs
mov
and
stos
arpl
xor
push
inc
ins
out
sbb
or
imul
push
pop
es
inc
adc
mov
inc
js
dec
shl
cmc
lods
jp
adc
test
jb
dec
adc
xor
sbb
jae
jmp
cwde
out
xchg
fdiv
call
call
xor
shl
hlt
inc
repnz
aas
lahf
(bad)
popa
xchg
sub
jbe
pop
push
inc
mov
mov
push
dec
adc
sbb
data16
stc
(bad)
les
dec
adc
(bad)
mov
pop
int
push
or
fwait
adc
xor
dec
push
xchg
and
xchg
or
pop
stos
dec
cmps
xchg
fisttp
sbb
fstp
cmp
movs
sub
cli
and
push
sub
cwde
cmps
xchg
add
neg
cdq
inc
jmp
push
push
pop
add
test
(bad)
ds
or
jl
pop
jne
ins
or
xchg
adc
xor
clc
adc
ss
and
add
pop
loop
ja
pop
add
mov
mov
loope
lock
(bad)
sahf
lahf
cld
in
and
(bad)
cdq
lahf
adc
clc
xchg
test
das
arpl
inc
jle
cdq
cwde
loopne
and
test
jne
les
inc
out
jmp
iret
adc
scas
mov
rcl
out
dec
jmp
xlat
and
jno
dec
leave
(bad)
pop
and
test
in
shl
add
mov
and
and
and
mov
cmps
push
repnz
and
or
inc
sub
shl
ret
cmp
(bad)
leave
addr16
mov
sbb
xchg
xor
aam
repz
ins
ret
outs
js
jb
xchg
popf
outs
adc
mov
lock
inc
mov
sar
es
repnz
call
(bad)
mov
cmp
loop
xchg
fucomi
mov
fiadd
test
xchg
add
cmps
daa
(bad)
lahf
xchg
pop
in
or
push
sub
add
sub
shl
mov
xchg
push
jo
mov
adc
ja
rol
mov
mov
add
jbe
cs
jmp
xor
push
pop
lahf
push
jl
test
jne
xchg
out
mov
mov
retf
adc
adc
jmp
movs
mov
xlat
outs
(bad)
fld
retf
fldcw
inc
iret
arpl
cmp
test
mov
inc
xchg
push
out
mov
int3
cwde
and
xchg
int3
cdq
or
test
(bad)
sbb
inc
jmp
in
aam
movs
in
out
popf
mov
mov
in
stc
dec
loop
loop
inc
inc
cmp
mov
dec
ds
sar
loopne
sub
mov
lods
loop
cli
into
and
xchg
cmps
fcomip
xchg
vpinsrw
pushf
dec
(bad)
mov
test
ins
lahf
sar
jle
jecxz
mov
out
aam
test
and
aad
loopne
inc
jg
add
jp
push
sbb
retf
lea
(bad)
mov
xor
xor
xor
push
jg
cli
mov
and
add
fldenv
sub
inc
mov
inc
dec
icebp
int
push
ret
and
shl
push
xchg
mov
xor
test
add
into
pop
ffree
sahf
jmp
jge
es
movs
das
sub
mov
ja
mov
push
pop
sar
sbb
fs
cli
cli
and
mov
leave
hlt
sub
lds
scas
fs
data16
mov
xchg
mov
push
bound
jnp
test
call
fdivr
jmp
dec
repnz
mov
cmp
sub
jmp
mov
jmp
stc
pop
xchg
push
imul
test
mov
loop
mov
sbb
sbb
pop
les
mov
fadd
ret
pop
imul
xchg
(bad)
mov
cmps
add
cmp
jg
push
or
push
out
ins
(bad)
in
mov
sar
in
pop
xchg
mov
cmp
shl
xor
nop
sbb
adc
mov
sub
sahf
jae
push
sub
call
in
enter
jg
std
mov
sbb
fsub
push
inc
retf
mov
fs
adc
test
inc
popf
leave
dec
std
mov
cmp
cmp
mov
jns
lds
jge
mov
mov
sbb
prefetch
lods
push
and
fsubr
inc
sub
jb
iret
cli
sub
push
xor
xchg
sbb
movs
mov
(bad)
adc
out
sbb
das
fdivr
add
xchg
mov
xchg
push
popf
cmps
adc
mov
sub
xor
push
jl
cmp
and
and
je
mov
test
mov
jne
pushf
(bad)
fs
xor
in
xor
mov
cmp
cmp
call
in
cmps
inc
in
sti
lods
mov
lahf
lock
mov
add
mov
cmp
(bad)
test
adc
xchg
cwde
shl
sbb
push
pop
(bad)
fist
fsubp
ret
inc
jmp
dec
mov
aad
adc
jno
fnstsw
into
xchg
sbb
or
call
ror
fisttp
mov
retf
xchg
ins
(bad)
and
adc
xor
jae
adc
mov
mov
mov
movs
jmp
out
mov
mov
mov
inc
adc
or
cmc
data16
xchg
xlat
mov
pushf
js
test
dec
mov
movs
(bad)
mov
lea
cmps
cmps
cmps
jmp
inc
sahf
ds
in
cmps
mov
mov
sbb
cwde
push
das
xchg
fcmovnbe
inc
dec
sbb
sahf
sbb
jno
jle
push
cmc
sub
cli
gs
add
mov
out
mov
adc
mov
or
iret
retf
adc
cli
jmp
pop
dec
cmps
adc
out
es
in
inc
sar
xor
mov
adc
in
stos
repnz
cli
fwait
inc
imul
es
or
xor
retf
xchg
adc
mov
(bad)
mov
pop
les
dec
lods
inc
pop
xor
push
mov
in
or
int3
(bad)
fwait
add
inc
imul
gs
mov
sub
mov
iret
cmp
mov
pop
dec
pop
fst
test
mov
sar
call
and
(bad)
sub
jns
rcl
xor
xchg
dec
int
sbb
pop
fld
addr16
sbb
xor
sub
stos
push
push
push
or
in
or
leave
addr16
lock
add
std
or
daa
cmc
es
stc
or
ficom
popa
leave
mov
inc
cmp
jns
mov
sbb
arpl
dec
test
inc
stos
mov
loop
cmps
les
je
in
push
or
fsubr
dec
ja
fbstp
jp
adc
mov
pop
ror
dec
iret
leave
(bad)
jp
mul
xchg
push
jbe
push
inc
or
push
dec
sbb
pusha
add
sub
inc
pop
imul
adc
cmps
inc
inc
xlat
sub
pop
mov
sbb
xor
and
das
fs
ins
jmp
xor
in
shl
stos
in
popf
pop
adc
push
enter
(bad)
sub
in
imul
jno
and
cld
clc
jp
add
xchg
xor
andnps
adc
iret
sbb
or
in
stos
enter
ret
sbb
sub
hlt
jno
xchg
in
jle
ror
mov
retf
call
fwait
rcr
pop
and
aam
pop
xor
jno
jle
sub
iret
bound
bound
push
ins
cmp
(bad)
bswap
enter
mov
sbb
push
(bad)
and
in
mov
push
fsub
sub
pop
mov
cmp
mov
fwait
mov
dec
xor
jmp
or
mov
dec
cmps
jecxz
mov
pop
aad
test
call
cmc
jmp
shl
in
inc
pop
ins
jl
add
sub
jno
pop
mov
jl
push
jle
shr
push
in
dec
pop
push
stos
stos
call
icebp
push
jno
xchg
(bad)
iret
jns
retf
dec
(bad)
or
in
iret
std
jmp
or
push
enter
mov
mov
aad
call
push
fidiv
inc
and
cmp
jecxz
fcom
xor
push
out
mov
jmp
sub
in
mov
repz
cli
pop
adc
sub
pusha
mov
pop
lea
mov
das
icebp
ss
cmp
in
popf
clc
mov
inc
xor
arpl
bound
mov
push
push
mov
pop
das
aaa
mov
stc
arpl
les
mov
psubq
jb
or
mov
jg
pop
mov
add
sar
cmp
sbb
pop
call
push
and
push
add
test
ret
add
sbb
jno
fisttp
jl
retf
xchg
loop
ja
fs
xor
lods
sub
loope
sbb
mov
jno
jp
add
push
push
retf
adc
dec
cmp
cli
mov
jg
pop
out
inc
fs
push
lock
iret
aaa
call
fdiv
out
mov
and
addr16
mov
xor
mov
mov
and
shl
adc
cld
inc
jp
and
jmp
stos
xor
lahf
sbb
fnstenv
aad
adc
sub
mov
or
sbb
jns
jp
test
jle
mov
repz
xor
xchg
push
pop
les
pop
and
push
sub
mov
loopne
mov
pop
adc
pop
aam
xchg
push
xor
lahf
add
call
xor
cmc
pop
sbb
(bad)
orps
add
ja
jl
addr16
mov
cld
scas
push
adc
aaa
dec
inc
mov
push
es
pop
fmul
out
sub
and
test
xor
fld
popf
hlt
nop
xor
mov
(bad)
sahf
bnd
jb
mov
cmp
mov
aad
int3
xor
push
xor
call
loope
xor
push
push
dec
aad
mov
dec
jns
mov
mov
loope
jno
cmp
popf
cmp
(bad)
mov
adc
shr
and
icebp
retf
ret
scas
jns
loopne
mov
shr
movs
jno
push
icebp
lds
mov
jo
movs
enter
and
pop
push
add
inc
xor
fldcw
mov
xchg
push
add
loopne
cld
push
scas
in
mov
adc
mov
jge
push
adc
or
adc
pop
repz
std
mov
mov
ret
xchg
cmps
jle
xchg
inc
in
and
mov
iret
push
not
cld
inc
loop
daa
fistp
aam
inc
outs
jmp
mov
rcl
inc
mov
ss
jns
test
cwde
xor
std
stc
repnz
loope
xor
jns
shr
aad
imul
std
mov
enter
xchg
mov
cmp
clc
xor
fsubr
jge
inc
scas
xchg
enter
inc
aas
jbe
mov
scas
out
lea
test
and
dec
add
shl
mov
xor
xor
inc
outs
jle
mov
in
xor
fdiv
and
push
push
inc
or
stos
jb
push
jns
and
sbb
xchg
xor
dec
sbb
add
mov
dec
sub
lahf
leave
loopne
adc
loopne
ins
and
dec
sub
mov
out
sub
test
data16
cwde
dec
test
movs
push
jae
add
fsubr
test
pop
adc
push
scas
shr
cwde
outs
sbb
pop
push
sub
(bad)
mov
mov
int
mov
pop
bound
inc
dec
add
pop
int
dec
mov
stos
loopne
jmp
js
(bad)
sti
js
push
cwde
outs
call
dec
and
push
rcr
data16
push
cmps
stos
cld
cld
mov
sbb
(bad)
retf
or
(bad)
sbb
inc
mov
icebp
jmp
dec
dec
cmps
adc
fisubr
and
pop
sbb
mov
ficomp
icebp
mov
inc
jmp
fild
imul
daa
xor
pop
and
pop
ss
mov
fs
rcr
lods
scas
fcmovnbe
jnp
mov
sbb
add
jo
pop
cwde
pop
loopne
mov
aaa
idiv
jae
push
aad
cmp
movs
arpl
mov
not
jbe
imul
mov
jmp
push
jo
popa
ficomp
popa
addr16
(bad)
jl
fsubr
jno
clc
adc
mul
push
push
and
sbb
fmul
xor
sbb
in
or
test
out
pusha
xchg
les
mov
mov
mov
inc
and
ret
(bad)
xor
sti
fmul
je
out
lods
mov
movs
adc
aam
cmp
jmp
push
shl
jmp
inc
sti
fbstp
xchg
ret
push
imul
(bad)
jg
(bad)
xor
xor
push
(bad)
and
push
into
arpl
and
std
test
xchg
fiadd
jmp
adc
mov
mov
dec
ss
push
test
pop
or
adc
icebp
sub
int3
in
pop
mov
and
push
jae
movs
push
scas
arpl
mov
cmps
adc
cmps
arpl
ror
xchg
push
mov
(bad)
xor
js
pop
out
arpl
fdiv
repnz
cdq
mov
xor
fs
dec
sar
sub
mov
dec
sbb
cmp
ror
pop
jno
ds
adc
loope
push
cli
gs
or
fmul
popf
hlt
xor
shr
pop
icebp
lahf
dec
or
or
mov
dec
sub
outs
jmp
jg
xlat
inc
enter
mov
pop
inc
retf
sbb
pushf
shl
cmp
(bad)
loope
add
jp
retf
test
cmps
(bad)
lock
cli
stc
jl
dec
daa
inc
and
shl
lea
and
dec
ret
sub
popf
sbb
push
mov
mov
(bad)
in
cwde
sub
dec
pmaddwd
add
push
imul
aad
js
lds
enter
aas
popf
leave
test
mov
cdq
cmp
add
retf
mov
(bad)
nop
stc
xchg
xor
outs
inc
js
xchg
cmp
fadd
sti
mov
mov
das
outs
outs
pusha
popa
push
cwde
sbb
dec
jge
mov
ins
fs
imul
cmp
push
fucomi
add
mov
ja
movs
cmp
and
pop
scas
xchg
into
aad
in
imul
xchg
push
push
jg
retf
lea
dec
or
mov
bound
jl
push
retf
sbb
repz
repnz
pop
mov
call
xchg
inc
push
retf
in
fwait
stos
and
cmc
lods
xchg
stos
and
push
push
mov
push
imul
jae
jp
stos
xor
das
aam
dec
enter
loope
sbb
arpl
bndstx
hlt
cmp
int
push
rcr
fldcw
add
mov
mov
cwde
inc
adc
cmp
(bad)
(bad)
sar
into
call
pop
les
loop
fst
add
test
rcr
mov
daa
cmp
movs
shl
mov
mov
popa
mov
mov
mov
mov
xor
setb
cmp
cld
xor
and
lods
mov
not
lods
xor
shl
jb
je
shl
lahf
jne
into
inc
(bad)
sub
in
sbb
add
pusha
xor
inc
aaa
lea
test
mov
dec
push
sub
(bad)
fcomp
inc
aaa
jecxz
in
jmp
fidiv
dec
adc
int3
and
sub
mov
in
fld
inc
xchg
or
adc
xor
in
cmps
sub
shl
enter
cdq
popa
fiadd
xchg
xor
adc
cs
add
into
pushf
in
in
fwait
data16
mov
lar
imul
imul
pusha
fild
daa
inc
pop
adc
and
fs
fistp
stos
ficom
mov
cmp
outs
arpl
imul
std
sbb
mov
push
mov
frstor
jle
or
dec
scas
pushf
fimul
mov
jo
sahf
fwait
push
rcr
xchg
add
mov
dec
mov
repnz
and
iret
inc
or
pop
and
call
rcl
out
jns
mov
and
jp
nop
ror
cmps
xor
(bad)
outs
cmc
mov
mov
xchg
and
mov
xor
data16
ret
cmp
scas
sbb
sub
repnz
ins
dec
fstp
mov
mov
adc
jp
cmp
mov
mov
push
ret
sub
sub
addr16
cdq
mov
sub
popf
arpl
push
adc
(bad)
push
push
nop
sub
je
icebp
sahf
mov
jno
(bad)
ror
ins
lea
inc
jae
pusha
movs
push
jmp
cmps
shr
movs
movs
gs
or
mov
in
pop
cmps
mov
imul
sbb
jge
ja
std
sub
jl
repnz
push
dec
scas
jle
dec
dec
xor
and
int3
sub
jb
sbb
out
imul
in
fisubr
popa
ret
inc
jb
xor
arpl
sbb
call
push
mov
lock
ins
push
inc
ins
and
dec
dec
outs
(bad)
loop
(bad)
jae
clc
push
xchg
cld
dec
push
movs
jl
and
xchg
dec
pop
ja
mov
pop
fld
gs
pop
jecxz
and
getsec
hlt
scas
mov
mov
repz
jns
sahf
add
inc
push
xchg
xchg
and
por
pop
sbb
xchg
pop
adc
mov
sbb
add
xlat
or
cdq
and
or
mov
mov
xchg
xchg
rol
pop
fwait
or
xchg
jge
fs
sub
jnp
sti
imul
pop
jo
sub
aam
xchg
test
outs
imul
jns
div
add
lds
xor
lock
retf
jmp
je
mov
out
gs
das
imul
dec
test
gs
jg
jbe
popf
xor
call
mov
stos
xchg
or
mov
shr
mov
jo
xchg
(bad)
aad
mov
popf
and
scas
ret
dec
pop
pushf
dec
dec
sbb
or
out
xor
dec
popa
cs
adc
dec
pop
mov
in
ficom
pop
add
mov
(bad)
mov
fidiv
pop
mov
xchg
fwait
mov
ret
hlt
outs
dec
arpl
fcmovnbe
mov
jg
push
mov
xchg
or
cmp
xchg
cdq
and
xchg
xchg
arpl
test
mov
(bad)
out
and
cli
pushf
leave
test
xor
aam
pop
retf
push
dec
fstp
int
cmps
push
fnsave
and
pop
push
mov
mov
pop
das
mov
or
sar
mov
scas
adc
out
jecxz
cs
popf
js
and
fdivr
cmps
mov
stc
add
sub
add
pushf
aas
ins
or
pop
aaa
iret
gs
scas
das
fwait
mov
sub
push
pop
shr
pop
call
mov
test
popa
mov
push
jns
add
mov
xor
enter
sub
pop
jne
leave
fs
in
jno
mov
xor
or
out
add
and
mov
ret
stos
aam
rcl
aas
loopne
cld
dec
adc
mov
jle
js
sbb
fdiv
push
mov
jns
xor
mov
leave
adc
int
push
cld
scas
pop
xchg
xor
sub
and
sbb
shl
sub
pop
addr16
xor
lock
imul
les
pushf
add
dec
sar
mov
mov
inc
pop
mov
mov
in
mov
loope
mov
jnp
mov
movd
les
add
or
repnz
or
jb
(bad)
jbe
scas
outs
push
jae
ds
out
cli
shr
dec
mov
aam
(bad)
popa
push
pop
cli
or
pop
fwait
ss
and
(bad)
std
movs
arpl
cdq
cmps
arpl
addr16
shl
xor
sbb
int3
lahf
sub
pushf
adc
(bad)
call
sbb
xchg
sub
lea
fwait
xor
xchg
dec
mov
mov
pop
xor
or
arpl
cmps
daa
mov
sbb
leave
mov
rcr
fimul
out
int
and
mov
and
sahf
test
jp
xor
push
icebp
push
loopne
shl
shr
fst
cld
out
out
gs
mov
outs
cld
dec
xchg
xchg
xchg
pop
pop
xchg
add
add
shr
inc
xchg
rep
xchg
xchg
dec
iret
jno
ror
cmp
cmps
mov
cmp
and
mov
xlat
dec
retf
dec
push
xor
pushf
sub
lahf
or
xor
ins
sti
nop
or
rcl
jge
(bad)
mov
fstp
(bad)
enter
scas
je
sub
arpl
xor
repnz
inc
add
mov
adc
push
mov
mov
int3
ins
cmp
push
push
mov
jg
xchg
dec
push
stos
pop
pop
push
sub
pop
ror
sti
fnstsw
adc
dec
cmp
mov
int3
sbb
jmp
stc
pop
data16
push
(bad)
sub
pop
mov
sub
test
mov
adc
jecxz
daa
cmp
pop
add
hlt
cwde
or
and
pop
xchg
in
pop
jl
dec
shl
imul
mov
pop
and
inc
aas
dec
mov
mov
sbb
test
addr16
popf
dec
and
(bad)
pop
and
sub
popf
and
ret
jmp
dec
fwait
dec
int
in
lahf
or
push
xor
cmp
cmp
movs
mov
fidiv
cwde
push
and
sbb
mov
mov
xor
cmp
push
bound
out
cwde
andnps
mov
fisubr
pop
push
xchg
shl
xor
ins
jmp
mov
imul
add
call
in
je
iret
cmc
dec
movs
mov
out
shr
or
repz
push
mov
cli
jbe
call
mov
shl
or
fs
popf
pmaxsw
scas
fadd
inc
icebp
sub
test
adc
inc
lock
adc
mov
push
mov
loop
out
and
dec
mov
int
mov
loope
pop
inc
fstp
iret
gs
into
lock
cdq
inc
add
mov
and
cmps
int3
dec
and
xlat
pop
cmp
mov
push
dec
pop
js
imul
mov
mov
push
adc
jp
mov
dec
pop
outs
mov
sub
arpl
xor
lds
adc
mov
icebp
retf
push
adc
outs
repnz
pop
xchg
jne
jecxz
dec
shl
aam
sti
pop
sbb
push
and
fnsave
sub
out
ret
push
cwde
cmp
inc
shr
mov
cmps
icebp
xchg
les
adc
loopne
into
lock
jp
(bad)
jg
cmp
cmps
mov
add
aam
sti
pop
cmp
cmp
pop
cmp
(bad)
out
dec
or
inc
adc
push
aas
sar
sar
fimul
pop
call
icebp
mov
pop
xor
les
push
mov
in
or
pop
daa
sbb
clc
in
imul
mov
sub
jns
stc
mov
lods
(bad)
mov
test
xchg
inc
repz
and
sbb
inc
add
adc
ss
addr16
add
ret
push
data16
lea
xor
ins
imul
and
jns
cmps
jg
dec
jne
scas
sbb
add
mov
add
rcl
cli
pusha
sub
aaa
arpl
xor
add
das
pop
pop
push
pop
fsubr
adc
das
and
sbb
mov
retf
ins
mov
jecxz
jmp
xchg
xlat
int3
jae
int
mov
mov
adc
sub
adc
div
adc
pop
mov
adc
pop
scas
mov
(bad)
in
and
push
adc
scas
sahf
inc
cdq
mov
or
mov
out
pop
ror
inc
fisubr
xlat
adc
(bad)
mov
push
fiadd
icebp
xchg
pop
std
sbb
jp
inc
loopne
inc
retf
mov
sti
add
or
lahf
hlt
outs
mov
es
xor
imul
enter
inc
leave
mov
sahf
mov
fsubr
int3
frstor
enter
les
xor
out
mov
mov
mov
dec
call
dec
or
inc
faddp
ja
(bad)
sub
pop
mov
test
movs
pushf
jbe
push
std
aad
sbb
outs
mov
and
idiv
outs
ins
mov
ficom
(bad)
sti
data16
pop
daa
rol
jbe
movs
mov
inc
adc
xor
ja
jae
call
push
add
inc
test
push
add
pop
jmp
mov
in
jo
jle
sbb
jno
dec
bound
loopne
mov
or
sti
and
jge
xor
(bad)
jns
cmp
jmp
ret
popa
int
or
out
test
adc
mov
ds
rol
mov
daa
dec
xchg
stos
xchg
sbb
rcr
dec
loope
ficomp
in
repnz
and
cwde
int
pop
pop
cmp
shl
sub
je
ds
fistp
push
or
aam
add
jns
jae
mov
push
das
dec
cmp
aas
mov
dec
cmp
(bad)
mov
mov
mov
jnp
dec
jb
scas
push
fcomp
mov
xchg
ja
adc
ss
aaa
xchg
loopne
repnz
cmps
pop
dec
and
xchg
sub
xor
mov
shr
jnp
xor
iret
cs
stos
aaa
mov
inc
jb
pop
hlt
test
dec
dec
(bad)
and
lods
ins
imul
stos
or
adc
cld
cdq
int3
leave
adc
pop
jle
fidivr
adc
pop
ins
mov
leave
(bad)
jp
inc
pop
adc
mov
lods
in
or
movs
cmp
jae
mov
movs
adc
xchg
in
and
fiadd
repz
jmp
push
test
adc
dec
mov
(bad)
sbb
cmps
popf
mov
dec
lds
inc
jb
mov
cmps
or
add
inc
pop
pop
push
push
cmp
scas
dec
jns
mov
cmp
cmp
lods
jbe
push
or
add
movs
cwde
mov
in
jnp
xor
mov
jnp
inc
sub
push
ds
mov
stos
inc
pop
push
inc
loop
neg
repnz
ja
into
aaa
clc
dec
das
lods
push
sahf
sub
sbb
leave
dec
dec
mov
pop
jno
stc
xchg
inc
mov
add
xor
xor
inc
ja
adc
sub
stc
js
mov
enter
push
loopne
int
pop
sbb
retf
push
es
test
jl
jge
cdq
pusha
jbe
mov
gs
in
sub
xor
repnz
daa
mov
xor
ficomp
jnp
aad
sub
mov
stos
or
pushf
sbb
xchg
pop
sub
daa
adc
outs
enter
sahf
les
xor
iret
mov
dec
cmp
sbb
lea
or
pop
jmp
mov
push
test
adc
test
or
shr
jnp
test
fimul
mov
in
scas
push
xor
mov
cli
sbb
mov
pop
dec
push
(bad)
adc
push
cmp
shl
push
lods
mov
xor
test
pop
out
fadd
jns
push
jg
mov
mov
and
mov
repz
dec
es
jmp
fwait
mov
mov
cmps
shl
xor
mov
test
jnp
test
add
fdiv
enter
sub
mov
cmp
or
push
lds
pop
in
pop
ficomp
add
pop
xrelease
inc
inc
push
sub
(bad)
cmc
enter
test
or
popf
ss
movs
jno
inc
leave
je
or
jo
out
in
cmp
enter
int
sbb
aaa
jno
inc
adc
xor
arpl
ins
sub
js
add
loope
cmps
lods
retf
xchg
sbb
push
lods
sub
xchg
cld
aaa
or
ret
push
push
adc
xor
cli
repnz
sbb
inc
int
inc
xchg
pop
mov
pop
ds
stc
sbb
das
mov
push
xchg
inc
xchg
inc
imul
not
(bad)
jno
mov
retf
nop
and
popa
aam
jge
mov
std
or
fwait
lock
mov
dec
call
cmp
lea
jo
ds
xchg
adc
mov
test
loope
or
push
mov
shl
sub
cmp
mov
xchg
iret
xor
pop
mov
mov
inc
inc
shl
jnp
mov
cmp
inc
pop
sub
stos
or
push
(bad)
outs
xchg
lds
pop
test
dec
cwde
mov
loop
(bad)
fwait
add
sub
dec
cli
mov
dec
jb
pop
lods
enter
sub
push
fsubrp
(bad)
and
mov
das
movs
sbb
mov
je
sbb
ret
mov
xchg
or
js
aaa
popa
data16
push
(bad)
sub
jno
xchg
loopne
ja
std
aaa
fcos
(bad)
cmp
and
push
fprem1
lods
rcl
test
ja
cmp
fisub
fld
mov
stos
loope
ret
in
(bad)
jae
fwait
adc
inc
hlt
movs
jb
rcl
(bad)
pop
and
inc
mov
in
pop
bound
pop
cmp
or
xor
cmp
mov
sub
jae
out
jle
ins
js
(bad)
cmc
sbb
out
add
sbb
mov
add
mov
icebp
add
(bad)
retf
inc
outs
xchg
xchg
adc
in
xor
cmp
jge
xchg
sbb
arpl
ffree
sub
lods
fimul
or
or
arpl
mov
xor
sub
dec
or
aam
mov
dec
lahf
pop
cmp
jb
test
cmp
mov
in
es
dec
jns
sbb
in
or
das
gs
adc
pop
rcr
pusha
or
(bad)
jnp
fsubr
outs
jg
and
mov
push
or
test
loop
test
inc
scas
mov
sbb
cdq
jmp
retf
sub
fimul
sti
ret
inc
popfw
cmps
jmp
outs
jbe
daa
push
xchg
mov
dec
(bad)
call
dec
or
test
shl
xchg
xchg
imul
icebp
adc
mov
addr16
loopne
mov
inc
scas
test
test
sahf
inc
push
stos
out
xlat
inc
dec
adc
rcl
xor
xor
and
sar
lahf
div
sar
sti
fwait
xor
jbe
push
sbb
and
repnz
dec
fst
jno
jnp
movs
inc
push
mov
dec
jnp
and
dec
xor
fild
fadd
jmp
stos
mov
nop
pop
jns
in
jmp
loopne
sub
je
fistp
inc
inc
mov
adc
aaa
scas
sbb
cmp
js
mov
cmp
add
sub
mov
cmp
or
push
sbb
mov
fadd
shl
push
dec
mov
movs
jno
cmp
xchg
jecxz
dec
dec
push
jbe
adc
sbb
(bad)
dec
hlt
les
cdq
push
fdivr
add
scas
mov
mov
repnz
mov
in
cmp
addr16
fdivr
pop
outs
mov
mov
mov
pop
hlt
movs
adc
clc
sahf
movs
or
repz
jo
push
std
outs
xor
jle
add
xlat
jbe
sbb
xchg
ins
sbb
cmp
iret
fxch
dec
out
push
rol
out
mov
nop
aad
(bad)
sar
jge
pop
add
icebp
ret
int
out
push
push
cmc
cmps
inc
push
jae
inc
in
inc
or
jns
cmp
lahf
mov
add
mov
pop
stos
or
and
daa
xchg
in
popf
rcl
xor
add
push
imul
mov
pop
mov
sub
sub
mov
add
mov
aaa
(bad)
xchg
loopne
ins
add
popf
adc
fs
mov
xchg
sti
push
inc
inc
cmp
mov
in
je
inc
pop
test
(bad)
adc
mov
mov
sbb
cwde
or
lea
les
(bad)
mov
out
nop
rcr
xor
add
das
cmps
stos
out
hlt
nop
fs
outs
leave
dec
xor
pop
aad
pop
mov
sbb
sbb
adc
mov
arpl
fbld
xor
retf
inc
es
push
add
adc
push
inc
sbb
js
pop
loopne
xchg
dec
bound
in
jbe
cmps
xchg
fidivr
xor
lahf
arpl
xor
cmp
das
mov
dec
js
int
xor
pusha
out
jae
lods
mov
repnz
out
cmps
ss
pop
mov
add
or
or
dec
xor
in
push
aas
aas
pop
and
loopne
bound
int3
(bad)
call
fmul
mov
cs
not
loop
pop
mov
pop
repz
mov
push
pop
push
movs
ss
inc
ret
fisttp
arpl
add
jb
mov
out
and
popf
xchg
test
ss
les
pop
add
push
mov
xchg
iret
call
and
cmp
dec
and
push
xchg
inc
and
out
push
xor
cmps
sub
setbe
popf
ror
sub
lahf
data16
das
jo
adc
inc
add
int3
inc
mov
sbb
jl
ret
pop
mov
inc
and
call
test
pop
dec
dec
nop
ins
dec
ins
jbe
mov
push
(bad)
mov
stos
int
push
sbb
lods
xchg
test
dec
cmps
add
mov
xor
les
mov
(bad)
xor
xchg
ror
test
sub
frstor
loop
xor
push
adc
scas
mov
out
jg
and
xor
push
sub
jbe
(bad)
jp
push
add
or
mul
sbb
pushw
out
nop
jl
xchg
jno
sbb
rcr
(bad)
loope
xor
clc
jb
add
inc
mov
xchg
jns
std
xlat
sub
mov
mov
or
sahf
adc
pop
(bad)
fist
(bad)
mov
sti
ret
jle
inc
add
xor
mov
jmp
out
and
fdiv
out
cs
cmp
cdq
jmp
outs
js
cmc
mov
mov
jno
mov
aad
std
bound
pusha
push
in
push
or
hlt
pop
mov
push
int3
adc
jns
stos
inc
scas
push
stos
call
test
ds
mov
out
stos
mov
mov
cmps
ret
cld
or
in
inc
fs
sub
ins
imul
outs
adc
(bad)
push
std
loopne
inc
out
js
loopne
int3
stc
mov
or
dec
xor
lods
xchg
xor
imul
push
pop
sbb
lods
test
enter
in
xchg
fwait
mov
mov
xor
adc
add
push
psllw
push
sbb
mov
icebp
cmp
xchg
cmps
in
jno
inc
ror
test
jle
pop
add
pop
int
jne
in
dec
ret
hlt
test
int3
cdq
xchg
mov
push
shr
add
ss
dec
cmp
popa
pop
mov
fdivr
shl
loopne
sbb
push
neg
adc
ss
xchg
cmc
dec
cmp
in
cld
jg
jmp
xor
dec
sbb
push
imul
push
test
or
mov
in
push
mov
push
pop
and
(bad)
cmp
mov
and
fsub
xchg
mov
dec
repz
and
int3
push
jl
nop
mov
jecxz
fwait
mov
loope
sub
push
sub
sub
dec
imul
pop
cmp
sbb
test
int3
mov
loope
int3
inc
add
sbb
test
scas
jae
and
aad
jno
call
mov
inc
outs
imul
into
in
fwait
jl
or
cmp
cmp
mov
fwait
xor
lds
pop
jae
cmp
test
adc
sbb
fwait
push
xor
mov
cld
outs
cmp
pop
fimul
popa
js
dec
sub
std
test
mov
mov
jae
movs
push
loopne
fs
push
push
aam
lahf
in
dec
fsubr
fisttp
inc
popf
and
pop
mov
and
add
sbb
sub
sub
leave
push
cmp
sar
nop
xor
cwde
xchg
and
pushf
adc
xchg
retf
adc
outs
ins
xor
push
mov
sbb
dec
xchg
and
daa
call
cmp
and
or
inc
mov
and
(bad)
fadd
test
xlat
sahf
dec
or
inc
loopne
mov
xchg
push
xchg
mul
pop
mov
cmp
push
cli
add
add
push
mov
stos
aad
icebp
dec
adc
sar
mov
add
xor
ret
jl
cmp
cmp
stos
rcr
movs
mov
push
xor
lahf
into
fstp
int
sbb
pop
pusha
jmp
adc
movs
cmp
outs
stos
arpl
sub
fs
lods
int
cs
adc
xor
(bad)
jp
ins
call
outs
sub
lods
push
mov
push
fld
sbb
adc
ret
call
xor
test
test
mov
jge
pop
fld
mov
dec
xor
jo
shr
mov
mov
pop
mov
cmp
xchg
mov
jo
and
call
rol
cmp
sbb
imul
jecxz
bswap
shr
push
scas
jg
int
inc
adc
fs
(bad)
mov
call
stc
lea
lock
mov
retf
imul
push
sub
and
cmps
fild
push
icebp
(bad)
sti
jle
dec
std
pop
mov
ds
(bad)
retf
mov
dec
sub
ss
mov
jmp
ins
pop
adc
es
pop
repz
ins
lahf
lods
iret
pop
cmp
ja
pushf
mov
mov
js
ficom
aam
scas
and
mov
addr16
add
or
jns
into
push
fiadd
fstp
call
jb
dec
dec
pushf
mov
jae
test
test
mov
fld
inc
imul
lods
jmp
imul
push
mov
scas
int
mov
jbe
into
pop
jns
ret
fisub
or
inc
and
imul
les
inc
nop
retf
leave
bound
mov
adc
inc
test
jle
ins
mov
loop
mov
stos
and
and
out
sub
cmp
push
dec
mov
inc
aaa
mov
mov
js
stos
cli
mov
pop
jb
jle
outs
fisubr
stos
loopne
dec
call
add
loope
std
add
mov
jl
xor
lds
and
sub
sbb
add
adc
stos
mov
je
adc
dec
add
and
xlat
dec
mov
jg
cmp
sub
jbe
cmp
sbb
sub
xchg
xchg
jecxz
movs
and
repz
(bad)
add
(bad)
mov
test
mov
lds
in
fmul
scas
in
es
test
push
add
xlat
sti
les
xchg
mov
mov
shl
mov
call
push
ss
and
mov
or
retf
sar
pushf
bound
adc
mov
jo
and
adc
fst
jbe
mov
scas
jp
push
and
das
inc
sub
cdq
push
push
gs
pop
pop
iret
aas
outs
test
cmp
fisub
dec
test
jp
sub
rol
data16
and
push
and
sub
mov
mov
out
xchg
mov
imul
stc
or
pushf
jp
adc
fbld
ds
sub
dec
and
fisubr
aas
and
add
inc
fisttp
dec
dec
fbld
mov
xchg
sub
mov
lock
push
dec
sub
loop
xor
fs
int3
cmp
push
adc
je
ret
xor
mov
nop
push
jmp
jmp
call
push
inc
add
sbb
call
out
fwait
pop
and
fwait
mov
mov
int3
dec
int
rcl
cmp
dec
adc
push
add
shl
push
push
ja
inc
call
cdq
pop
retf
mov
outs
imul
(bad)
sbb
enter
enter
fdiv
and
dec
mov
adc
push
cmps
call
iret
cmp
jo
xor
and
add
mov
mov
and
fmul
sahf
push
outs
jmp
pushf
push
clc
ss
into
out
mov
push
jae
mov
pop
push
mov
jb
shr
xchg
cli
jmp
retf
sti
sub
std
add
mov
jle
je
(bad)
cli
dec
jns
lds
sub
cmps
or
sbb
stos
lahf
xchg
fwait
js
das
push
fwait
int
mov
push
add
bswap
xchg
push
clc
sbb
inc
repnz
stos
sbb
(bad)
int3
icebp
push
pusha
mov
push
push
lods
mov
add
inc
ja
retf
jne
jp
stos
popa
mov
adc
mov
pop
cs
mov
aad
jno
jne
div
jl
out
cmps
loopne
mov
mov
or
(bad)
mov
lea
outs
push
inc
inc
(bad)
jns
daa
xchg
push
and
jle
sub
iret
and
sysret
cwde
clc
mov
pop
jecxz
sahf
sub
mov
and
sti
ins
js
sub
cmc
xchg
pop
hlt
mov
inc
std
dec
mov
stos
popf
leave
imul
movs
nop
clc
(bad)
push
movs
cmp
hlt
loope
inc
clc
data16
imul
or
sbb
fadd
sti
dec
sub
and
xor
push
imul
in
mov
and
xchg
(bad)
fistp
inc
popa
ds
popa
push
jbe
(bad)
lods
test
fsub
xchg
and
jnp
scas
adc
xlat
loope
stos
push
push
and
fidivr
movups
inc
lods
and
inc
inc
mov
add
jmp
in
and
(bad)
inc
mov
xchg
jle
hlt
adc
data16
popa
sbb
pop
std
inc
(bad)
jmp
lahf
sbb
or
push
jge
jo
mov
icebp
ins
out
sub
test
jge
in
(bad)
scas
xor
dec
es
hlt
cdq
sub
mov
movs
add
dec
imul
fstp
adc
icebp
(bad)
xchg
sti
adc
dec
push
(bad)
leave
gs
movs
jl
std
push
add
push
ins
ret
in
sti
pop
ds
imul
xor
neg
jno
jae
lahf
test
dec
jmp
push
dec
push
adc
out
icebp
lods
xor
pop
cmc
dec
dec
and
mov
push
aas
xchg
xchg
(bad)
jbe
mov
stos
outs
scas
repnz
test
test
inc
jmp
and
aad
push
push
mov
mov
xor
inc
pop
cmp
xchg
push
mov
xor
mov
xor
loope
dec
and
stos
mov
xchg
aaa
in
(bad)
lods
mov
jle
cmp
sub
dec
sub
stos
mov
es
(bad)
stc
pop
push
shr
jle
adc
and
int
daa
stos
lds
(bad)
lea
and
std
inc
cld
fst
ins
out
mov
sbb
and
jnp
in
xor
xchg
in
mov
cli
xor
cmp
(bad)
out
cmp
jecxz
cmp
leave
xchg
push
jne
call
adc
push
gs
pop
dec
adc
push
outs
scas
ret
adc
xchg
int
jl
add
mov
popf
dec
div
mov
pop
pushf
pop
jmp
jns
shr
outs
daa
stos
enter
sub
dec
jb
cld
and
(bad)
push
push
aam
pusha
scas
jmp
ret
or
arpl
int3
clc
sub
add
and
jg
aaa
and
sub
pop
jg
sub
mov
dec
adc
dec
jg
push
daa
jl
pop
cld
shl
lahf
cmp
nop
mov
inc
cmps
mov
cdq
xor
sbb
mov
mov
loopne
xchg
cmp
call
movaps
aas
dec
or
xchg
xor
mov
aam
or
fld
inc
mov
out
ss
int3
fnstcw
int
push
push
call
pop
jmp
jmp
add
shr
push
cmp
test
xlat
inc
pop
adc
add
cmp
repnz
rcl
and
in
ins
push
sub
(bad)
in
loopne
cs
add
mov
repz
dec
mov
lods
mov
add
pop
xchg
fwait
test
dec
xlat
mov
call
jne
inc
(bad)
xor
retf
nop
repz
test
sub
jns
xchg
sbb
jge
and
mov
aad
jl
push
mov
fucomp
das
sbb
cwde
ss
stos
movs
test
stos
add
sbb
xchg
das
inc
sahf
fmul
dec
aam
stos
int3
cwde
pop
and
dec
push
pop
mov
je
ficomp
pop
or
sti
dec
and
sbb
jp
sbb
mov
div
test
sbb
call
retf
dec
rcr
pushf
inc
inc
and
sub
cwde
ficomp
pop
ss
mov
imul
or
sub
mov
jno
std
jns
loopne
push
mov
sbb
sub
and
dec
mov
xor
mov
addr16
cmps
pop
jns
(bad)
or
push
fcom
rcl
imul
scas
test
inc
leave
mov
sti
rol
getsec
add
ficom
stos
int3
in
jns
xlat
jge
test
jo
cmp
stc
(bad)
push
sbb
call
es
or
cmp
xchg
pop
mov
mov
add
lea
repnz
pop
imul
cmps
pop
pop
mov
mov
inc
loop
xor
mov
jecxz
push
out
aaa
imul
xchg
jp
push
sbb
bound
test
pop
arpl
add
jg
js
test
sub
mov
lods
aas
retf
test
ins
pop
push
les
into
push
call
dec
mov
mov
sbb
pop
inc
mov
enter
ins
scas
dec
add
cmps
dec
nop
ss
add
adc
and
mov
sbb
outs
shl
cli
jo
jmp
scas
sub
movs
sub
aas
loope
ror
cmp
scas
push
das
sbb
call
call
fstp
(bad)
adc
ins
push
lds
in
fs
rcl
pop
popa
paddusb
mov
lea
push
aam
enter
lahf
mov
addr16
xlat
or
xchg
aaa
dec
shl
fadd
dec
mov
mov
inc
jmp
aas
cmp
call
(bad)
inc
dec
test
pop
push
jmp
mov
mov
out
call
cmps
imul
call
mov
in
daa
xor
dec
mov
inc
push
lods
nop
mov
(bad)
mov
push
and
xor
das
movs
fcmovne
fcmovb
mov
add
seta
inc
cmp
fistp
retf
pop
mov
mov
add
jle
rol
not
inc
xor
mov
test
lea
fisubr
in
lods
dec
xor
jno
icebp
popa
ret
dec
hlt
mov
cmp
xchg
pop
scas
leave
mov
xor
pop
pop
fisttp
mov
xlat
call
(bad)
jp
mov
jo
add
xor
dec
mov
rcl
adc
xor
in
push
test
inc
push
ss
pop
es
(bad)
cmp
jbe
mov
bswap
jmp
pop
lea
cwde
adc
jmp
inc
sbb
lahf
mov
ss
or
jb
fucomp
push
jge
adc
adc
rcl
shr
cmc
dec
imul
mov
mov
mov
xchg
sub
inc
leave
pop
dec
bound
retf
mov
stos
mov
sbb
pop
mov
pop
xchg
or
bnd
xchg
or
pushf
enter
xchg
sbb
push
xor
xchg
out
(bad)
int3
push
push
push
repnz
sbb
push
cmp
in
leave
leave
mov
popf
pop
cmps
adc
or
sub
lds
adc
and
sbb
sub
pop
push
or
movs
or
inc
jge
rcl
cmps
lahf
retf
dec
mov
inc
lds
loopne
inc
(bad)
cmp
push
fwait
and
xlat
pop
jmp
retf
enter
lea
adc
mov
inc
punpckldq
jo
dec
jmp
addr16
and
repz
inc
aaa
test
adc
ret
bound
push
pop
push
or
scas
push
data16
(bad)
arpl
lods
push
test
jnp
imul
jge
dec
shl
xchg
and
sbb
sahf
xor
pop
push
retf
mov
mov
(bad)
(bad)
cmp
and
cmp
mov
call
xchg
inc
repz
dec
add
lahf
mov
jo
inc
and
mov
sti
cmp
lods
int3
cmc
xor
sbb
xchg
jns
sbb
cmp
popa
mov
adc
jmp
push
iret
sahf
add
dec
and
cmp
xchg
retf
in
pop
jle
push
push
gs
int3
mov
cwde
xor
jae
cli
mov
pop
or
mov
inc
push
loope
ss
les
push
mov
rcr
in
out
js
mov
test
es
jnp
ss
mov
dec
xor
movs
pusha
and
mov
(bad)
xchg
push
cmp
mov
ficomp
and
inc
leave
pop
mov
retfw
repz
jae
mov
xchg
and
mov
jno
cmp
add
or
pusha
dec
pop
fiadd
pop
mov
outs
lods
leave
lods
addr16
mov
sub
popf
jle
dec
stos
xchg
inc
xlat
dec
cmps
inc
ins
pop
pop
mov
pop
xor
aaa
aad
icebp
(bad)
retf
stc
shr
retf
int
xchg
ins
jp
and
movs
dec
(bad)
and
rep
aaa
pop
(bad)
mov
call
aad
inc
(bad)
js
mov
imul
push
inc
cwde
mov
aaa
or
pop
mov
xor
xchg
pop
bound
aaa
imul
retf
adc
clc
lahf
aam
stos
in
or
push
mov
sbb
pop
cs
push
not
arpl
push
pop
cwde
fld
mov
push
loopne
aad
cli
cmp
pop
rep
lock
dec
dec
push
cdq
or
neg
fild
push
scas
mov
cmp
js
add
arpl
pop
pop
fbstp
or
xor
daa
dec
(bad)
sti
or
mov
imul
mov
xchg
sbb
repz
cmc
outs
inc
or
int
and
add
and
inc
loop
movs
dec
arpl
add
ja
jbe
ror
adc
xchg
fldenv
pop
aaa
adc
jo
jge
nop
push
jp
or
je
lds
out
fild
pop
add
je
xlat
ins
daa
or
outs
dec
das
aas
dec
or
push
mov
xor
push
pop
mov
popa
cmp
pop
ins
jle
sbb
xchg
add
(bad)
(bad)
fimul
jns
and
scas
jmp
pusha
jno
test
rcr
icebp
pop
mov
das
xchg
in
and
jno
pusha
in
and
outs
std
mov
aaa
ret
adc
push
inc
mov
(bad)
das
sub
mov
sub
dec
push
dec
xor
outs
in
pop
or
mov
popf
(bad)
xchg
aas
jl
das
jp
xor
pusha
test
dec
retf
xchg
sub
hlt
cdq
outs
rcl
shr
ins
adc
mov
push
dec
mov
outs
movs
jo
mov
loop
inc
mov
pop
aaa
movs
pop
das
adc
cmp
test
mov
(bad)
ja
or
mov
jne
outs
sub
stos
mov
out
push
cli
dec
lods
int
push
push
inc
mov
xor
sub
jns
jae
js
and
pop
xchg
dec
lods
lods
inc
jb
mov
fnstenv
lock
jle
mov
cmc
cwde
movs
dec
jne
sbb
jae
and
pop
push
jecxz
mov
hlt
add
cmp
push
cs
jns
jp
xchg
stc
ins
jmp
mov
pop
xchg
xchg
inc
aam
cmp
xchg
pop
xor
add
inc
adc
and
in
movs
add
cmp
xlat
lea
pop
jnp
(bad)
adc
retf
cld
jp
es
add
add
std
pop
enter
imul
cmp
mov
retf
add
fcomp
mov
es
pop
pop
out
mov
inc
cmp
fbstp
in
add
pop
ins
sub
int3
fsubrp
call
jns
je
mov
bound
mov
adc
je
inc
test
cli
lods
jns
push
and
xchg
mov
pop
cmps
(bad)
repz
sti
loopne
dec
cmc
push
in
and
dec
add
xchg
cld
xchg
mov
retf
int
mov
pusha
outs
ror
sbb
test
repz
or
cs
ins
push
shr
push
inc
adc
das
mov
stos
mov
mov
sar
cmp
gs
inc
jb
lahf
arpl
xchg
mov
ror
mov
xchg
xchg
ins
es
xor
cmp
xlat
and
jns
dec
ins
je
std
outs
icebp
or
dec
sbb
sar
jb
xchg
fdiv
xchg
outs
jns
ret
fs
dec
imul
and
les
test
movs
sub
scas
or
mov
push
mov
mov
xchg
sub
es
add
mov
cmp
dec
jno
(bad)
(bad)
push
out
push
(bad)
xlat
(bad)
inc
popf
(bad)
xchg
or
imul
jb
jb
in
int3
adc
pop
int
ja
test
popa
stos
ja
mov
jl
test
xor
fnstsw
ins
pop
out
cmp
enter
xchg
ret
(bad)
je
je
push
or
and
lods
sub
lods
pop
addr16
and
fucomp
sbb
jmp
fbstp
addr16
push
mov
dec
jne
jbe
inc
test
xchg
sub
mov
(bad)
xor
sbb
dec
inc
sbb
dec
in
and
mov
push
cs
adc
addr16
mov
call
sahf
jl
cmp
int
mov
ret
movs
rcr
je
retf
daa
sub
mov
movs
cmp
test
add
pop
mov
jle
repz
push
je
xchg
adc
push
dec
or
and
sbb
idiv
out
pop
sub
mov
fild
lahf
cmp
popf
or
cmp
jecxz
sbb
inc
shl
cmp
dec
rcl
inc
cmp
mov
mov
and
mov
lahf
div
xor
daa
xor
outs
test
xchg
mov
sub
and
fidiv
cmp
(bad)
cmc
in
pop
or
pushf
pop
mov
push
mov
fwait
add
dec
pop
inc
bound
out
sbb
pop
pop
sub
sbb
mov
mov
rcr
or
(bad)
fstp
dec
int3
fbld
stos
fs
(bad)
aad
mov
xchg
pop
out
clc
xchg
or
int3
into
mov
dec
mov
mov
es
mov
mov
(bad)
and
clc
inc
cmp
dec
jmp
(bad)
stos
pop
mov
pop
cmp
shl
sti
xchg
out
rcr
adc
(bad)
lds
mov
jno
sbb
cmps
inc
sbb
dec
add
xor
ja
loop
push
retf
out
sub
pop
call
push
xor
enter
outs
fs
mov
stos
jae
ror
mov
sbb
xchg
pop
or
sub
std
add
xor
xchg
sub
and
pusha
adc
fidivr
lea
mov
mov
test
xchg
push
gs
(bad)
adc
sbb
jae
jmp
or
jnp
loop
jae
sti
and
mov
ficomp
jbe
xchg
jge
or
mov
mov
push
lock
aas
ins
(bad)
sbb
and
clc
nop
test
retf
or
(bad)
mov
gs
add
addr16
pop
jns
sbb
mov
or
repz
xchg
mov
mov
sbb
in
imul
arpl
cmp
push
scas
xor
and
rol
push
mov
mov
push
push
dec
mov
jp
xor
xchg
sti
movs
cmps
adc
call
ins
push
push
bt
jo
lds
cdq
mov
retf
mov
jge
iret
test
aaa
jae
mov
mul
mov
call
(bad)
cmp
leave
sub
test
aaa
mov
adc
sbb
cdq
mov
jae
mov
mov
(bad)
aad
test
xchg
xor
repnz
mov
sahf
push
xacquire
repnz
xchg
dec
int
cmp
test
div
int3
mov
xchg
mov
mov
mov
mov
inc
mov
push
mov
into
imul
aaa
jb
lock
cmp
cmps
and
retf
mov
inc
ja
lock
mov
test
cmps
call
xchg
push
sbb
mov
pop
ja
aaa
xor
clc
sbb
xchg
fnstcw
cld
inc
cs
xchg
icebp
sbb
mov
test
add
push
mov
sub
movs
adc
mov
pop
icebp
sahf
repz
imul
sub
mov
push
xor
aad
push
adc
jmp
pop
pop
sbb
ret
mov
xchg
pop
ja
fcmovne
icebp
mov
stc
cdq
mov
repz
xchg
test
push
bound
leave
pop
scas
xchg
nop
bound
(bad)
mov
or
pop
mov
adc
cmp
jb
jle
pusha
add
pop
arpl
sbb
cmps
or
jmp
fsubr
and
shr
(bad)
ret
xchg
movs
add
push
rcl
xchg
mov
cld
popf
inc
ins
xor
test
imul
arpl
fucomp
or
adc
aam
outs
dec
pop
jns
mov
sub
xor
jp
out
pop
pop
lds
loopne
mov
and
adc
pop
and
dec
jecxz
and
and
nop
sbb
leave
mov
aaa
pop
shr
adc
xchg
mov
sbb
arpl
arpl
shr
aaa
cmp
pop
mov
retf
sub
xor
or
and
jbe
ret
jbe
push
fwait
sbb
fptan
push
jecxz
dec
or
sbb
pop
dec
int3
lea
jmp
sbb
imul
push
push
hlt
jbe
inc
mov
or
rol
cmp
pop
sub
xchg
mov
leave
or
and
les
scas
mov
outs
mov
jnp
xchg
lods
std
adc
add
out
or
cmps
pop
movs
inc
frstor
in
add
mov
pop
and
ins
sbb
loopne
mov
ffree
and
out
sub
fistp
adc
mov
bound
mov
sub
jbe
cmp
or
fsubr
adc
xor
jge
mov
pop
popa
arpl
mov
repnz
push
mov
inc
and
mov
push
dec
sub
aam
mov
dec
mov
mov
jne
mov
jnp
out
jp
sub
hlt
cmp
in
inc
stos
mov
cdq
(bad)
sub
retf
fnstcw
aaa
pop
popf
push
popa
sub
in
dec
fimul
pushf
cmps
sub
cld
cmp
nop
scas
xor
ja
out
add
inc
lgs
outs
out
sub
mov
and
mov
shl
lock
sub
(bad)
jo
mov
fadd
cmc
or
xchg
push
adc
in
sbb
and
imul
jg
pop
movs
cmp
aad
pop
xlat
inc
jecxz
ret
sbb
scas
dec
daa
in
popa
bound
xor
fsubr
outs
(bad)
mov
pop
fdiv
int3
(bad)
xor
dec
push
mov
dec
int3
data16
aam
or
int
pop
data16
xor
cmp
jnp
jnp
mov
push
xchg
or
mov
movs
rcl
add
or
add
dec
push
lea
mov
add
inc
fistp
mov
inc
add
jns
stc
outs
out
lods
push
jae
dec
sbb
xlat
test
sbb
jae
test
pop
xchg
mov
jecxz
dec
xor
sub
jbe
or
sub
in
pop
leave
stos
push
and
repz
inc
movs
fdivr
xor
retf
add
pop
pop
icebp
test
xor
or
cwde
outs
inc
mov
jns
and
and
ret
rcl
inc
jo
inc
(bad)
loope
mov
mov
adc
sar
ficom
pop
lahf
or
sbb
push
add
ins
push
clc
faddp
xchg
dec
int
nop
or
scas
fidivr
push
clc
mov
xchg
(bad)
(bad)
pusha
call
mov
dec
rcl
xchg
enter
dec
sub
shr
mov
test
out
shl
sub
adc
data16
xor
stos
ins
movs
loope
xchg
adc
repz
int3
ins
mov
xlat
mov
cs
xchg
cmc
jo
xor
sub
mov
popa
loopne
xchg
sahf
xchg
in
pop
sti
out
jmp
std
mov
xor
push
in
stos
push
loopne
out
inc
push
loope
cs
aam
arpl
sbb
aaa
rol
enter
int
pop
xchg
stos
fs
out
cmp
movs
mov
mov
adc
dec
std
or
repnz
add
retf
call
jo
cli
xchg
ins
sub
mov
mov
add
in
xchg
test
mov
cmp
test
push
dec
imul
ins
(bad)
pop
mov
fwait
dec
and
xor
mov
jbe
cs
rcl
sub
mov
mov
mov
dec
fwait
dec
sahf
jbe
retf
aam
or
scas
fiadd
inc
(bad)
cmp
fidiv
clc
jge
pushf
xchg
mov
fldenv
mov
lods
fmul
(bad)
fcomp
jg
adc
adc
cs
das
xchg
pop
and
les
cmp
aad
cmp
cwde
test
cmp
loope
in
lahf
data16
imul
in
out
test
pushf
inc
data16
pusha
stos
jnp
pop
(bad)
cmps
mov
cli
ds
in
fld
dec
inc
out
jns
dec
out
and
adc
add
xchg
adc
int3
out
adc
aad
in
push
ins
cmp
aam
xor
test
call
imul
jae
cmp
in
pop
(bad)
pop
cmc
pop
and
mov
ret
pop
jecxz
mov
fiadd
ins
push
xor
xor
jl
movs
fdiv
add
cmc
fcmove
stos
jae
ins
fdivr
pop
mov
(bad)
sbb
cmps
pushw
sub
cmp
in
adc
(bad)
(bad)
and
jle
sti
jo
dec
lods
loope
mov
push
icebp
xchg
push
lds
sti
mov
(bad)
das
ficomp
xchg
mov
sbb
pop
ins
daa
push
in
loop
jmp
mov
mov
(bad)
dec
pop
push
mov
cs
icebp
mov
inc
cmp
call
push
cmps
and
jge
push
sbb
inc
hlt
adc
cdq
shl
dec
sti
fcomi
loope
(bad)
dec
inc
aad
jl
(bad)
scas
arpl
add
cmp
mov
pop
and
jecxz
mov
or
dec
and
dec
sbb
enter
mov
cmp
sbb
push
popf
scas
sub
test
inc
sub
je
gs
lea
jnp
jl
call
in
push
test
mov
cmp
pushf
ja
mov
push
mov
mov
add
push
xor
mov
imul
shl
adc
outs
cmps
jmp
inc
das
xor
movs
dec
js
jl
mov
add
ror
(bad)
in
mov
and
cmps
enter
cdq
rcl
inc
jbe
leave
mov
repnz
inc
sti
rol
jno
les
jb
mov
cmp
aam
add
cli
xor
imul
pop
or
cmp
es
push
mov
xchg
and
xor
or
jle
fdiv
dec
sbb
scas
neg
mov
fdivr
movs
push
pop
int3
leave
cmps
dec
push
jle
pushf
les
mov
std
lods
es
and
imul
jle
cmp
aam
pop
ins
push
inc
fcomp
add
ins
fmul
out
ins
movs
(bad)
and
push
mov
into
and
push
mul
push
inc
stc
mov
loopne
jl
mov
mov
sbb
repnz
add
pop
jno
mov
neg
push
pusha
sub
jno
out
les
lods
ret
int3
mov
les
or
aas
cdq
loop
cmp
scas
stos
sub
mov
jb
cwde
sub
sti
clc
mov
aaa
sub
call
dec
sub
sbb
adc
mov
fcom
jne
int
and
cld
stos
daa
add
inc
add
fsubr
add
and
push
sbb
sub
dec
arpl
into
fcmovnb
je
push
push
aad
jecxz
dec
cld
push
rol
repnz
(bad)
lods
cmp
hlt
cmp
mov
jmp
fimul
pop
and
push
dec
cmps
inc
xchg
cwde
or
adc
and
push
jecxz
scas
aaa
addr16
lds
mov
daa
mov
rcr
outs
jb
sahf
cmp
mov
mov
shr
call
lock
sub
loop
ss
leave
test
mov
cmp
loope
mov
inc
xchg
xor
fmul
jmp
pop
dec
out
mov
in
push
pop
(bad)
fisttp
xchg
(bad)
mov
lods
jb
mov
xchg
repnz
lds
ror
adc
sbb
and
in
xor
mov
dec
jns
and
jnp
repnz
(bad)
or
retf
or
loopne
inc
and
fdivr
inc
movs
lock
pop
lock
popf
imul
add
mov
lock
fild
retf
cwde
call
jmp
mov
outs
dec
mov
jae
mov
mov
loopne
repnz
adc
sub
jecxz
nop
inc
das
stos
not
jge
(bad)
inc
xchg
and
or
cmps
jl
out
call
imul
mov
retf
jbe
out
div
cmc
sar
pop
popa
mov
lods
(bad)
pop
ffreep
ret
iret
(bad)
enter
and
and
fdiv
(bad)
jo
ja
jmp
xchg
pop
dec
add
jle
ja
push
xor
and
div
xchg
sti
scas
pop
repz
femms
mov
repnz
xchg
cmp
pusha
imul
ds
ja
xchg
push
mov
retf
aad
iret
and
scas
cmps
(bad)
stos
fisttp
jb
sub
daa
add
mov
fild
test
pop
outs
jle
mov
imul
xchg
ja
enter
movs
addr16
push
mov
(bad)
out
add
imul
fsub
cdq
mov
pop
xor
xor
in
(bad)
int3
push
push
or
sahf
loopne
add
cmp
push
into
mov
pop
pusha
xchg
xlat
push
mov
mov
repz
adc
rcl
outs
enter
pop
jo
mov
ss
stc
inc
mov
aaa
clc
sub
iret
stos
call
repnz
mov
(bad)
cs
clc
mov
add
push
test
push
xchg
movs
or
std
movs
sub
das
jmp
arpl
cs
sub
stos
cmp
mov
cmps
mov
inc
xor
xchg
mov
imul
pushf
push
ss
sbb
and
(bad)
jp
outs
adc
nop
mov
add
adc
jmp
(bad)
int
bound
aad
inc
pusha
xchg
xchg
dec
push
shr
jbe
jno
adc
icebp
daa
ss
jmp
or
cdq
sub
es
ins
push
inc
pop
push
xchg
mov
jo
popa
and
in
cwde
mov
cmp
ss
jmp
jg
cld
data16
push
mov
mov
les
xor
and
mov
mov
cmp
aaa
mov
mov
fwait
cmp
mov
test
mov
ins
mov
out
pop
jmp
aas
cmp
leave
add
inc
push
fcmovnbe
ins
sbb
push
mov
in
cmps
imul
xchg
sub
pop
mov
fdiv
and
pop
cmp
inc
pushf
pop
cmps
or
mov
jae
rcr
test
push
mov
iret
hlt
mov
cmc
stos
inc
jmp
pop
push
adc
or
loopne
pop
mov
jb
ins
cmp
inc
and
pop
mov
push
movs
mov
int
push
sar
hlt
nop
je
push
mov
inc
inc
xchg
loop
jb
xor
in
add
dec
enterw
and
xchg
mov
fsubr
(bad)
retf
sub
es
push
dec
lds
(bad)
enter
jb
ret
xchg
jge
sub
in
and
int
mov
cmc
test
stos
push
daa
cs
cmps
stos
jecxz
imul
jecxz
adc
mov
scas
retf
lods
stos
push
dec
(bad)
push
mov
or
test
outs
jl
sbb
call
sbb
mov
fmul
pop
inc
sbb
mov
gs
push
fistp
sbb
fld
lds
mov
jns
push
add
hlt
dec
add
out
leave
cmps
retf
retf
jae
pusha
dec
mov
into
jle
lahf
stos
add
add
cmps
add
repz
stc
push
fisttp
and
lods
aas
pusha
jmp
pop
xchg
mov
add
dec
xor
and
pop
xor
inc
enter
xchg
sub
es
sti
mov
or
push
dec
lahf
pop
xor
add
lds
pushf
xchg
dec
mov
jns
xchg
xor
sub
fadd
cmc
cmp
adc
aad
mov
cs
mov
xchg
or
xor
push
cmp
int3
mov
pop
ret
push
icebp
call
dec
jp
jmp
xchg
call
mov
mov
push
sub
fs
clc
inc
out
cmc
lea
jl
(bad)
fstp
mov
push
sub
(bad)
loope
ds
inc
aad
neg
dec
ss
push
ret
frstor
push
imul
ins
test
jnp
outs
rcl
call
daa
call
stos
sub
leave
jl
jnp
clc
jns
pop
pop
adc
shr
outs
std
scas
pop
mov
mov
int3
das
shr
add
dec
jmp
scas
cmps
cmovg
stc
pop
xor
int3
fs
mov
retf
(bad)
mul
mov
les
loop
jle
lods
lods
mov
imul
sbb
sar
fdiv
cmp
dec
out
and
daa
mov
test
pop
std
push
dec
outs
mov
inc
adc
dec
cli
in
sub
dec
sub
(bad)
xlat
stc
test
sti
pushf
int
jae
xor
retf
aad
je
push
clc
or
loope
push
adc
loopne
push
out
adc
call
jo
ret
push
scas
enter
sub
cmp
xchg
ins
sti
pusha
(bad)
loopne
scas
mov
call
jno
aam
push
and
scas
add
hlt
sbb
not
dec
fsubr
cmp
dec
fs
inc
fnsave
dec
push
or
jg
pusha
mov
pop
jns
cwde
test
in
xchg
cmp
jo
adc
rcr
ja
pop
pop
add
pop
dec
cmp
xlat
rol
jne
sti
aam
mov
lods
and
pushf
cwde
inc
call
fs
inc
mov
adc
and
(bad)
aas
movs
adc
mov
sub
jmp
outs
cmc
push
dec
dec
jg
add
stos
xor
sbb
sub
test
inc
outs
adc
pop
mov
mov
sub
cli
or
inc
xor
fcom
aas
fs
repz
pushf
iret
push
dec
xchg
ficomp
stos
pop
pop
mov
and
out
popf
jp
mov
dec
push
jbe
loop
clc
or
jnp
test
ret
mov
push
or
and
leave
cmp
jb
jbe
xchg
inc
(bad)
push
jp
lock
push
int
movs
fiadd
aam
xor
lods
popf
push
xor
pop
test
sbb
mov
daa
pushf
and
sub
sub
jae
push
mov
xchg
rcr
scas
idiv
xor
xchg
test
or
sahf
mov
mov
shl
jle
sub
mov
jecxz
adc
push
dec
pop
test
push
out
xchg
push
cmp
js
loope
lock
jmp
cmc
rcr
xchg
xchg
inc
or
dec
je
retf
add
adc
pop
(bad)
enter
cli
shr
mov
(bad)
jl
mov
jg
int3
hlt
pop
sbb
rcr
js
sar
pinsrw
push
mov
retf
and
push
imul
mov
and
lea
mov
mov
outs
imul
jb
add
(bad)
and
lods
clc
scas
fidiv
push
and
ret
adc
add
(bad)
retf
fwait
and
push
dec
mov
pop
adc
jp
imul
out
fisttp
xlat
int3
(bad)
nop
cmp
(bad)
sbb
ja
mov
jmp
ds
add
test
scas
pushf
mov
xlat
gs
stc
adc
push
mov
inc
adc
cmp
sahf
xor
xchg
jae
movs
mul
out
and
add
shr
sahf
fwait
adc
std
mov
neg
sub
mov
repnz
aad
pushf
mov
push
(bad)
test
(bad)
push
shl
clc
inc
mov
icebp
jmp
adc
es
or
mov
sub
bound
stc
mov
in
xlat
mov
sub
int3
mov
push
mov
ret
sahf
nop
rcl
pushf
lds
jne
and
ins
int
xchg
inc
mov
pop
shl
push
add
inc
leave
and
and
ss
jmp
popa
lods
call
int
fwait
add
pop
cmp
push
sbb
imul
adc
dec
shr
ja
pop
sub
(bad)
in
inc
arpl
adc
loop
or
mov
adc
fldl2t
shl
mov
jne
push
repnz
fadd
sbb
sub
jl
push
ds
shl
xor
fdivr
xchg
cld
adc
add
test
movs
addr16
bound
aad
xor
jb
xor
mov
dec
jno
pop
stos
sbb
dec
inc
pop
xchg
xchg
aas
inc
mov
xchg
push
ins
cmp
mov
rol
and
outs
cmp
loop
jne
stos
lds
sub
popf
dec
push
fnstenv
enter
or
pop
lods
repz
pop
fidiv
sub
mov
cs
dec
mov
cmp
jmp
or
fdiv
mov
ret
and
mov
mov
and
inc
leave
popf
jmp
cli
ficom
test
and
jo
jmp
aad
ret
clc
and
xchg
pop
jno
das
push
repz
cmp
loope
aad
sub
mov
out
loop
out
jb
xor
adc
jne
je
repnz
cmp
pop
stos
pusha
or
push
add
stos
xor
xor
sub
gs
leave
inc
call
(bad)
call
aad
and
add
sub
or
fild
inc
in
mov
mov
movs
das
xor
int
mov
in
mov
out
fmulp
sbb
pop
clc
mov
or
jne
xor
shr
test
stos
push
cmp
scas
mov
fld
fdivrp
(bad)
mov
mov
xor
jno
sbb
clc
xchg
mov
push
pop
ss
jmp
or
lds
enter
popa
jns
inc
mov
(bad)
add
xor
int3
cmp
pop
cmp
les
mov
fwait
aad
add
push
ja
iret
push
mov
push
pop
daa
dec
adc
inc
outs
xchg
ud2
or
stos
test
test
mov
cs
mov
mov
jp
cs
xlat
mov
sub
scas
dec
and
shr
pop
bnd
sahf
repz
xchg
inc
mov
les
inc
fild
adc
xchg
inc
xchg
in
or
call
jmp
sbb
push
adc
call
cmps
cwde
push
dec
out
hlt
stc
pop
push
xchg
mov
dec
jae
dec
mov
push
adc
addr16
pop
or
repz
xchg
push
lods
push
jae
jmp
mov
dec
xor
je
test
xor
pop
jmp
stos
or
jecxz
xchg
xor
test
mov
(bad)
in
jmp
push
pop
pop
push
aad
mov
clc
ror
neg
daa
mov
dec
xchg
dec
inc
aas
fidiv
push
fst
js
push
lods
mov
adc
mov
pop
adc
jl
in
hlt
adc
or
scas
xchg
add
xchg
cs
pop
shl
or
stc
cmp
lock
push
outs
mov
cmc
fsubr
repz
repnz
push
cld
xchg
clc
mov
or
mov
cli
test
aaa
inc
enter
gs
jnp
shl
pop
je
mov
jp
mov
popa
fcom
xchg
cmp
loope
xchg
mov
add
scas
xchg
sub
cmp
and
mov
rol
pop
push
loop
fimul
add
outs
inc
cli
add
jno
mov
mov
lods
push
xchg
push
jo
jge
mov
test
dec
mov
and
cmp
cwde
dec
inc
push
xchg
pop
adc
je
jge
ins
jbe
lods
sub
(bad)
lock
cmp
stc
push
jne
sub
test
adc
push
and
aam
push
mov
retf
cld
ffreep
xchg
fwait
mov
xor
out
xor
enter
jae
das
idiv
call
cmp
or
xchg
fisub
retf
ror
pop
push
iret
out
push
push
das
jge
inc
lahf
in
retf
std
out
cmp
mov
retf
cld
in
(bad)
ja
div
adc
cmps
sbb
jg
sub
dec
aas
hlt
add
cmp
jmp
jbe
stos
in
push
sbb
mov
sub
std
lds
xor
imul
imul
icebp
add
vpaddsw
ds
(bad)
(bad)
stc
cmp
sub
daa
outs
push
mov
data16
jne
jb
ss
dec
mov
test
ja
sbb
cmps
mov
mov
inc
lock
js
fadd
and
(bad)
dec
mov
and
xchg
xchg
stos
xchg
pop
aaa
mov
sub
xchg
retf
repnz
sub
into
mov
xchg
movs
loopne
add
sbb
cmps
shr
jae
sub
pop
inc
pop
les
retf
loopne
(bad)
mov
jne
add
imul
es
shl
fild
(bad)
fild
imul
fyl2x
xor
(bad)
enter
fild
inc
inc
fisttp
jo
das
pop
pop
cld
retf
loop
and
fsub
mov
dec
mov
call
data16
mov
xlat
jecxz
cmc
inc
sbb
push
add
repz
ins
mov
scas
fisub
gs
cmp
jl
mov
xor
mov
rcr
cmp
ins
iret
jb
inc
out
shl
add
push
inc
jp
ins
jno
jno
aaa
push
mov
add
adc
aaa
loop
pop
inc
mov
push
loopne
inc
(bad)
xlat
mov
retf
add
mov
and
xor
enter
xchg
int
lock
mov
jae
adc
xchg
int
(bad)
out
movs
add
sbb
xchg
cli
lea
repnz
arpl
(bad)
repnz
fcom
sbb
add
push
jg
ja
pop
mov
xchg
aas
cld
xchg
pop
sti
fwait
icebp
cwde
shr
jnp
(bad)
mov
call
into
mov
cmps
fnsave
ins
loop
cmp
cmp
adc
jne
pop
inc
push
out
scas
outs
or
add
mov
inc
sub
xrelease
addr16
outs
dec
addr16
xchg
xchg
xchg
adc
mov
push
ds
push
push
mov
test
ins
test
movs
lods
jmp
mov
push
jnp
push
in
sti
je
ror
retf
das
hlt
repz
cld
call
mov
cmp
iret
mov
pop
cmps
add
jno
pop
retf
sbb
push
pop
dec
push
popa
jae
ins
cmp
rcr
shl
stc
push
dec
aad
les
xchg
cmp
or
pop
pusha
mov
out
out
in
rcr
fldenv
jg
mov
imul
jl
and
or
fnstcw
mov
loopne
sub
fwait
xchg
and
ins
setno
imul
mov
xchg
pop
out
jg
mov
pop
push
test
sti
out
dec
sti
cdq
jp
scas
xchg
jmp
std
repnz
test
test
cmps
mov
jbe
push
xchg
inc
xchg
sbb
stc
push
pusha
xchg
inc
pop
and
and
inc
adc
out
ins
imul
repnz
mov
call
cs
fwait
xchg
mov
idiv
inc
or
sub
out
shl
mov
ret
jns
sbb
out
mov
pop
into
ret
lds
je
sbb
sub
cli
retf
fmul
scas
jle
push
aaa
cmc
pusha
cmp
(bad)
mov
std
mov
ror
inc
mov
test
and
inc
push
not
and
ss
push
(bad)
movs
cs
jecxz
pop
dec
cwde
jne
gs
push
je
retf
mov
aam
or
push
and
lods
jbe
pop
mov
add
jg
jbe
jo
fld
and
xor
nop
mov
mov
or
cwde
dec
xor
hlt
xchg
adc
push
jge
gs
xchg
icebp
cs
idiv
inc
push
jns
push
jge
in
mov
cmp
(bad)
call
adc
jb
jl
int3
imul
icebp
cmc
in
add
lds
or
dec
push
sahf
xchg
add
dec
push
outs
add
and
dec
aad
outs
cmp
clc
popa
and
pop
jae
(bad)
jge
xchg
int3
shl
mov
jns
mov
mov
cmp
test
sbb
pop
fsub
or
ror
pusha
sahf
mov
es
xor
loopne
mov
scas
mov
dec
fld
pop
fcom
test
shl
mov
cmp
out
shl
inc
ss
retf
fisub
jmp
push
dec
lock
or
mov
and
mov
rcl
test
test
imul
and
add
pop
adc
adc
cmps
and
bound
mov
in
push
jmp
and
pop
and
mov
iret
xor
es
stos
cmp
xchg
add
loope
arpl
jns
icebp
push
sub
ins
cmp
and
test
inc
jae
xchg
jae
mov
inc
cs
push
add
pop
and
das
cmp
jbe
es
mov
mov
js
jnp
aad
call
xor
mov
retf
cmp
xor
sbb
dec
je
xor
or
(bad)
adc
mov
mov
add
dec
ret
adc
cmp
jb
js
in
into
jo
or
cld
push
cmp
test
jge
(bad)
ret
call
fs
in
cmps
xchg
mov
or
push
arpl
cmps
enter
ror
push
cmps
pusha
xor
or
into
aad
and
inc
sub
stos
sub
sar
repz
jmp
scas
mov
ja
lds
push
cdq
add
xor
daa
mov
pop
xchg
repnz
add
xchg
pop
mov
sbb
mov
hlt
mov
cmc
rcl
test
ret
and
adc
xchg
movs
push
xor
popa
test
pop
repz
cmp
imul
mov
ret
pop
mov
in
call
rol
outs
and
sbb
lahf
stc
mov
fbld
mov
push
test
mov
clc
pop
fisub
js
lea
and
mov
leave
add
jmp
cmc
mov
add
mov
inc
(bad)
cmp
test
out
stos
lods
add
and
inc
retf
mov
push
ror
ret
dec
adc
lock
push
test
sbb
enter
sbb
sub
in
jnp
mov
rcr
mov
dec
fs
pop
or
icebp
xor
nop
shl
hlt
inc
mov
inc
sub
xchg
mov
lahf
icebp
je
or
pop
mov
dec
jecxz
sahf
cmc
cmps
cmp
call
pusha
push
mov
inc
jb
iret
dec
sbb
dec
lock
retf
mov
adc
jmp
fsub
ins
mov
dec
inc
xor
jae
inc
jge
ss
popf
cmp
mov
repnz
adc
jmp
mov
out
xchg
arpl
sub
push
mov
fcmovnb
or
push
sbb
jl
fbstp
lock
dec
sub
inc
jmp
jle
sub
mov
pusha
loopne
(bad)
push
push
sahf
lds
test
adc
invd
jb
add
add
fistp
jg
fwait
push
hlt
bound
adc
sahf
pop
imul
ret
mov
test
jle
repnz
cmp
aas
dec
out
sti
shl
adc
jp
nop
stos
movs
stos
mov
out
pop
icebp
icebp
sbb
jle
and
jp
mov
mov
stc
fs
sbb
call
push
mov
fwait
sbb
sbb
imul
imul
cmp
fiadd
dec
sar
push
xor
aas
and
adc
ins
call
mov
mov
fimul
scas
mov
jo
cli
lds
das
xchg
or
pop
jle
add
dec
jbe
sub
and
cli
jae
fild
bnd
out
push
or
and
push
xchg
adc
data16
adc
adc
adc
sbb
lock
iret
sbb
hlt
xchg
dec
xor
jns
xchg
cmp
hlt
and
mov
push
sub
mov
cld
les
push
cmp
push
xor
loope
repz
je
sbb
push
dec
xchg
xchg
repz
xlat
adc
outs
mov
jge
adc
mov
je
xchg
xchg
sbb
sti
lahf
push
and
ds
loopne
call
loope
or
fsub
or
jge
in
sub
ins
sbb
inc
xor
and
mov
das
jecxz
mov
movs
and
pop
pop
scas
or
retf
push
or
pop
fdivr
xor
icebp
mov
inc
pop
mov
dec
inc
xchg
call
hlt
push
dec
xchg
leave
push
sbb
pop
cmps
and
jae
and
push
mul
pop
repz
fadd
xchg
xor
adc
daa
idiv
iret
popf
inc
sbb
popf
mov
cmps
sti
cwde
outs
retf
test
(bad)
call
inc
jne
dec
dec
mov
push
mov
and
or
adc
cmp
rol
pop
test
retf
mov
adc
pop
sti
sub
jae
clc
ffree
fucom
jl
push
leave
shl
xor
xchg
cld
mov
or
jle
test
stc
inc
(bad)
sbb
cvtdq2ps
jno
movs
dec
dec
into
out
lock
sub
jle
pop
jp
test
lea
je
cmps
test
dec
popf
jo
scas
push
mov
loopne
jnp
sbb
in
addr16
retf
loopne
jne
mov
pusha
movs
ins
retf
mov
xchg
inc
popf
lods
xchg
or
(bad)
mov
sbb
jb
push
jo
pop
ins
mov
pop
xchg
dec
push
sbb
ds
cmps
inc
or
or
lock
(bad)
cmps
sbb
pop
pop
in
dec
inc
mov
jp
test
in
sbb
xchg
xchg
or
lock
mov
bound
ret
out
cmp
inc
lds
cmp
icebp
cwde
add
adc
jae
aam
jl
jge
outs
addr16
add
jmp
jae
js
enter
ror
xchg
lods
mov
inc
push
js
xor
hlt
aas
or
adc
sbb
cmc
setb
mov
mov
imul
cli
cmps
xchg
mov
jne
mov
scas
push
pop
ror
or
jb
popf
mov
push
push
cmp
xor
(bad)
lods
inc
in
enter
mov
push
xor
mov
(bad)
sub
mov
inc
jns
mov
and
(bad)
sub
enter
popa
and
aas
xchg
cs
push
out
mov
call
push
shr
retf
aaa
push
mov
movs
dec
fnsave
xchg
ss
ds
jg
cmps
and
mov
fild
mov
push
sub
ja
sbb
dec
ja
push
pop
jae
and
dec
nop
lds
or
std
aaa
mov
xor
mov
xchg
movs
stos
xor
push
xor
test
mul
pop
add
ret
retf
push
in
sbb
xor
xor
shr
xor
sub
pop
mov
push
retf
aam
dec
outs
icebp
scas
or
add
shr
test
xchg
test
std
arpl
fs
dec
mov
mov
dec
xor
mov
mov
mov
sti
xlat
call
stos
jo
call
(bad)
(bad)
push
aam
xor
mov
pop
xor
stc
xor
(bad)
jmp
push
sahf
or
and
mov
xlat
in
push
ins
ret
lahf
cwde
push
dec
sub
xor
shl
mov
pusha
addr16
sbb
and
push
fimul
sub
fist
sbb
add
loope
daa
repnz
dec
push
hlt
sbb
jb
xor
mov
in
cdq
in
loop
xor
leave
sub
push
cwde
cmp
lods
mov
not
push
mov
lock
mov
ret
(bad)
pop
push
imul
xor
movs
fstp
cmc
mov
cmp
jge
mov
and
iret
fmulp
imul
xor
sbb
ss
nop
push
fidivr
sbb
std
(bad)
pop
imul
in
(bad)
adc
outs
add
jno
aas
aas
or
dec
pop
push
lds
jmp
mov
cs
mov
mov
in
mov
and
inc
sar
lds
mov
pop
xor
rcl
sub
(bad)
or
sub
daa
xchg
xlat
(bad)
or
bound
rcl
popf
push
jg
push
add
mov
or
movs
sahf
pop
cli
dec
out
ss
jb
xor
cdq
daa
movs
icebp
sub
data16
xchg
sub
xor
push
int3
test
xor
out
repz
icebp
js
cwde
lock
inc
jle
and
mov
stc
dec
sub
mov
push
inc
dec
jge
pop
cmp
mov
sar
in
mov
(bad)
aad
in
test
mov
mov
xchg
in
daa
sub
pop
mov
inc
ins
das
aam
jmp
adc
jmp
pusha
and
pop
jmp
ficomp
jo
or
imul
leave
jecxz
adc
hlt
imul
aas
in
int3
dec
mov
push
push
retf
cmps
std
xchg
aad
adc
idiv
push
or
mov
mov
adc
jge
add
std
jne
xchg
jae
mov
jecxz
stc
aad
inc
jle
pop
mov
add
ffree
jns
jnp
push
sahf
dec
xchg
or
imul
sar
cld
cli
or
xchg
xor
pop
loopne
mov
dec
mov
jmp
and
xchg
loop
dec
jg
stos
and
and
adc
cmp
inc
adc
dec
xchg
sub
pop
or
aam
rol
push
adc
inc
es
mov
scas
add
push
sti
jno
dec
stos
stos
sbb
or
mov
in
xor
clc
pop
pusha
or
or
cmp
inc
cmp
loop
test
xchg
lods
jp
inc
fdivp
cdq
in
scas
jmp
mov
stos
mov
fbld
int3
cwde
frstor
cld
sbb
jae
xchg
call
jmp
fld
xchg
jmp
and
jp
idiv
and
(bad)
xor
stc
ja
test
jmp
cld
stos
xor
enter
mov
sti
(bad)
aam
fwait
pop
jg
xor
pop
dec
imul
sub
data16
and
aaa
add
add
call
xor
ret
jbe
pop
inc
fcom
mov
xlat
and
dec
ud2
xor
icebp
pusha
enter
pop
mov
cmps
jbe
fidiv
jae
pop
repz
xchg
jmp
xor
ja
sub
add
cmc
(bad)
sbb
xchg
sub
movs
(bad)
outs
and
pop
sbb
push
sti
outs
sub
adc
xlat
pop
cmp
jno
into
fdivr
xor
or
xor
mov
call
cmp
mov
xchg
lea
cmp
push
nop
mov
hlt
and
fs
loop
pop
lds
mov
cmp
pusha
dec
jns
shr
push
lea
push
cmp
movs
(bad)
mov
or
jmp
or
mov
mov
pop
sub
adc
std
cmps
fwait
or
jle
scas
add
jle
daa
pop
aam
in
adc
xchg
shl
scas
ins
(bad)
adc
mov
jb
jge
push
rol
xchg
aad
fwait
sub
jle
dec
sub
sub
xchg
aam
add
test
in
ret
mov
cwde
or
pop
call
icebp
pusha
or
jmp
out
loop
inc
inc
or
in
fist
jp
call
push
xor
and
cmp
ja
sbb
jp
push
bound
or
xchg
sbb
mov
test
sub
js
jle
jmp
xor
lahf
ins
inc
call
sbb
retf
xchg
xchg
fs
ds
adc
pusha
sbb
test
push
mov
add
push
xor
pop
aad
jp
jo
(bad)
mov
inc
dec
cmps
xlat
xchg
jmp
fwait
test
and
fstp
call
stc
jo
mov
dec
inc
mov
call
inc
jcxz
jb
or
adc
push
retf
leave
cwde
xchg
jge
or
ja
aad
xchg
jno
in
lods
int3
cmps
cdq
push
sbb
jl
jbe
clc
xor
jmp
adc
bts
add
nop
(bad)
pop
xchg
sbb
(bad)
sub
cmp
xor
jns
sbb
sahf
mov
leave
add
pop
mov
fidivr
je
add
arpl
nop
jae
push
dec
adc
add
retf
call
pop
jne
das
out
pushf
popa
push
cmp
or
in
aaa
aas
push
mov
dec
add
loop
cmp
sbb
sbb
xchg
cmps
push
add
dec
addr16
pop
popf
lods
sub
dec
pop
adc
pop
pop
loope
pop
jecxz
adc
retf
addr16
mov
lahf
into
push
cmp
jge
mov
retf
fisub
dec
mov
cld
imul
pop
push
adc
sub
icebp
cmovns
dec
leave
adc
jle
push
xor
add
nop
fisttp
cmps
mov
loope
bound
(bad)
fnstenvw
movs
xchg
test
xor
in
lods
mov
xchg
imul
lock
inc
sbb
sbb
setae
movs
ins
out
outs
inc
test
test
mov
stos
aam
sub
cwde
movs
cmp
mov
inc
push
test
jo
pop
push
(bad)
(bad)
test
fild
aas
aaa
rcr
pop
sub
cmp
int3
cmp
jle
sub
addr16
or
jae
mov
fcom
mov
test
scas
test
dec
pop
fld
mov
push
cmp
iret
(bad)
or
mov
enter
out
add
push
cmovne
and
mov
int
and
jle
sub
cmp
dec
sub
aas
call
cs
fsubr
int3
jmp
iret
push
xor
pop
pop
dec
cmp
outs
aad
and
ret
or
(bad)
cdq
neg
ret
les
hlt
xor
and
pop
jo
jmp
push
dec
test
retf
xchg
cmp
fs
int3
jecxz
inc
or
jecxz
repnz
(bad)
inc
and
mov
push
pop
xor
std
sbb
sub
add
lds
movs
lods
inc
pop
cld
sbb
inc
dec
sub
ret
jmp
addr16
jecxz
mov
fild
jne
sub
add
lahf
movs
dec
inc
pop
ret
xor
jp
out
push
sahf
or
jmp
bound
test
jnp
(bad)
dec
idiv
xchg
clc
aam
xor
sahf
movs
fadd
sbb
js
mov
jns
jle
mov
repz
ins
sbb
dec
icebp
mov
pop
lods
ror
xlat
loope
fcomp
sti
push
mov
sbb
jno
pop
(bad)
lods
repz
jecxz
cmps
mov
adc
xor
jne
jp
xor
fnstsw
outs
xor
sbb
int
into
loop
out
push
add
movs
nop
dec
xchg
mov
lods
call
in
sbb
shr
jg
mov
test
(bad)
(bad)
outs
sbb
push
mov
fwait
int
cmp
in
xchg
and
std
sub
popa
fbstp
mov
sub
imul
adc
cwde
cmp
dec
iret
or
or
inc
icebp
pop
mov
add
xchg
arpl
push
push
add
pop
int3
push
pop
xor
std
aad
dec
xchg
test
fdiv
test
mul
push
bound
mov
adc
pushf
sub
mov
pop
popf
mov
sar
into
je
sar
fnsave
ss
add
xor
push
retf
movs
mov
je
xor
and
lods
es
scas
jne
cmps
adc
loop
stos
adc
cmp
imul
mov
cmps
push
popa
lahf
jno
iret
mov
jae
push
rcr
mov
mov
pusha
int3
mov
pushf
arpl
ret
inc
fbld
pop
(bad)
add
mov
data16
mov
aaa
xchg
ins
shl
or
in
cmp
xor
cmc
jl
inc
int
mov
in
cmp
cmp
shr
inc
pushf
retf
stos
je
mov
and
icebp
popa
cmps
addr16
sub
gs
ss
ins
or
and
clc
add
push
sar
cs
mov
push
xor
pop
stos
dec
out
mov
lahf
nop
jl
ins
std
in
mov
inc
fstp
and
push
out
cmp
fbstp
pop
jg
sahf
(bad)
push
gs
out
sbb
or
jmp
xlat
rcl
jle
pop
or
push
add
or
adc
mov
stos
in
mov
call
scas
rcr
push
xor
dec
jge
(bad)
in
cld
pop
cmp
mov
inc
lea
cld
sahf
lods
lds
pop
sbb
test
mov
shl
(bad)
push
mov
sbb
je
sahf
sbb
push
lods
push
movs
hlt
fild
pop
iret
or
mov
loop
push
aad
mov
add
pushf
and
lock
jb
repnz
cmp
cld
xlat
in
pop
pop
mov
scas
lods
push
or
ja
retf
cmps
add
push
inc
xchg
inc
sti
enter
inc
test
fdivr
loopne
xchg
and
jno
xchg
mov
or
jne
mov
and
add
(bad)
or
fs
or
lods
aas
sub
cmp
rol
rol
imul
stos
cld
sbb
jno
mov
lds
ror
(bad)
and
and
xchg
or
add
pop
loopne
fisub
mov
inc
leave
adc
ja
movs
mov
pusha
int
pop
(bad)
adc
push
arpl
(bad)
out
lds
shr
arpl
into
sbb
nop
fisubr
(bad)
rcr
fldenv
xchg
cs
mov
stos
sbb
cmc
fbstp
dec
addr16
xchg
imul
rep
push
push
(bad)
arpl
lods
test
push
rcr
bound
in
ret
xor
push
out
cs
or
mov
push
cld
je
push
xor
repz
mov
scas
mov
xchg
push
adc
shl
and
or
xlat
cmp
mov
mov
lods
nop
inc
out
ss
mov
fnstsw
mov
fwait
jbe
into
dec
add
xlat
mov
(bad)
int3
sbb
cmc
mov
mov
mov
xchg
ret
nop
inc
pop
fwait
cld
mov
add
icebp
pusha
iret
jmp
jge
jb
dec
div
out
lea
add
mov
sbb
test
aas
push
xor
bound
ds
push
push
lds
inc
adc
mov
call
sahf
xchg
mov
mov
and
aas
add
pop
rcl
mov
pop
mov
add
cwde
ret
or
int3
xor
inc
mov
test
xor
mov
inc
jno
call
stc
xchg
rcr
popf
jmp
cmp
xchg
inc
sbb
call
mov
scas
xchg
pop
jle
inc
imul
add
push
out
xchg
out
pushf
push
int3
lods
rcl
sub
lea
imul
scas
in
(bad)
add
rol
shl
call
arpl
adc
or
mov
mov
and
bound
dec
jg
or
sbb
retf
mov
cmp
aas
ret
and
outs
xor
sahf
(bad)
ins
addr16
ret
sub
pop
aaa
(bad)
pop
cmc
js
mov
dec
cmp
push
clc
(bad)
dec
mov
or
push
repz
jp
fcomp
out
mov
dec
xchg
test
xchg
jecxz
push
call
or
sbb
mov
pushf
sub
and
inc
(bad)
push
and
mov
scas
xor
pop
fs
push
iret
sahf
sti
inc
jmp
(bad)
adc
lea
ins
push
jecxz
push
sbb
(bad)
cmps
aaa
pop
cmp
imul
push
fstp
sub
popf
dec
arpl
popa
jge
and
fadd
lea
aaa
sub
push
xor
ins
ret
push
setle
call
popf
cmc
and
inc
sub
mov
and
inc
stos
adc
sbb
js
sbb
(bad)
ins
std
fisubr
paddusb
ds
aam
adc
inc
mov
retf
mov
cs
mov
or
lods
mov
jg
mov
or
sub
movs
pop
adc
hlt
fsub
mov
popa
lods
and
sub
add
mov
jecxz
in
sub
push
mov
fmulp
cld
pop
push
out
mov
push
or
cwde
mov
out
leave
jnp
sub
in
call
jl
fadd
dec
mov
cs
les
xlat
add
mov
js
add
hlt
xchg
lods
bound
es
repz
mov
pusha
pop
add
mov
inc
add
sub
loope
cs
add
mul
rcr
bound
jne
in
mov
out
mov
jne
adc
fistp
inc
imul
push
jo
ja
jnp
sub
pop
arpl
cmp
leave
sbb
adc
adc
enter
fild
cld
add
pop
push
pushf
xchg
into
sbb
inc
ret
mov
outs
xor
in
icebp
pop
(bad)
sbb
push
xchg
into
(bad)
and
xlat
inc
outs
ret
or
je
dec
loop
fs
cmp
pop
push
mov
jbe
dec
push
sub
or
xchg
sahf
jb
xlat
push
pop
addr16
ins
mov
jbe
sbb
mov
div
mov
sub
scas
in
dec
imul
cmp
sbb
xchg
push
lahf
test
cmps
mov
fidiv
inc
rcl
xor
(bad)
ins
outs
pop
fmul
cmp
lods
mov
mov
nop
dec
cmp
push
addr16
(bad)
repz
inc
aas
out
lods
fnstcw
sub
sti
outs
pop
(bad)
mov
ins
push
daa
push
sqrtps
mov
adc
inc
aas
(bad)
pushf
outs
daa
jne
or
xchg
clc
movs
fadd
mov
pop
sub
pop
out
add
xchg
mov
mov
(bad)
mov
dec
inc
shl
xchg
xchg
cmp
mov
add
retf
call
fwait
add
adc
popa
loope
daa
or
sub
push
push
jl
jg
hlt
push
cld
popf
push
mov
mov
mov
out
movs
dec
mov
cmp
adc
mov
dec
dec
push
int3
push
xchg
mov
jb
push
push
xchg
adc
mov
xor
or
outs
lds
loop
mov
push
and
mov
dec
jge
push
cmps
mov
pop
int3
inc
jmp
jbe
cmp
int3
out
xchg
push
inc
mov
les
adc
in
lock
dec
jle
sub
add
dec
cmp
xor
or
sub
push
not
push
daa
fdiv
add
mov
aas
push
std
pusha
inc
lea
sahf
ret
xchg
imul
daa
fcom
push
mov
ficom
in
adc
pop
mov
nop
sbb
jb
fwait
in
les
iret
xchg
add
cwde
cmp
(bad)
jle
dec
cmp
movups
jae
jae
imul
retf
jb
bound
lods
sbb
inc
mov
addr16
inc
mov
fsubr
jmp
xchg
mov
or
fs
push
jne
adc
jno
mov
aam
add
stos
lods
pop
jae
pop
push
add
jns
push
dec
xor
xor
xor
scas
mov
cwde
loope
adc
pop
jae
cmps
sub
mov
pop
or
cli
mov
mov
addr16
mov
out
rcl
shr
ins
xchg
cmp
jp
es
fild
push
jae
xlat
dec
cmp
inc
mov
jmp
cmps
cmps
sbb
pop
js
jbe
jne
and
mov
fcmovne
(bad)
fucom
sbb
dec
sbb
cli
inc
mov
dec
ret
push
push
lea
mov
enter
jmp
ds
adc
mov
movs
sub
add
or
iret
push
daa
(bad)
gs
mov
std
jno
cmc
or
in
pop
adc
jns
stc
ror
xchg
sub
(bad)
and
into
mov
sbb
jmp
inc
jle
jge
loop
int
lds
xchg
test
push
sub
pop
and
jns
(bad)
jle
jno
loope
shr
xchg
rol
inc
jnp
push
not
mov
cmp
mov
mov
jne
mul
int
clc
dec
fiadd
jnp
ins
or
dec
push
or
stos
fistp
add
xor
cmps
ret
mov
sbb
sub
adc
jle
loopne
jmp
jp
test
add
mov
addr16
mov
lahf
retf
xchg
sbb
(bad)
into
mov
push
or
xchg
jb
dec
iret
cld
jns
mov
out
mov
(bad)
cld
inc
test
push
sbb
mov
out
mov
aam
fsub
test
cmp
clc
mov
rcr
sar
push
ins
scas
fwait
in
out
mov
ins
or
fs
pop
sub
jbe
(bad)
fs
ds
push
push
pop
jle
xor
pop
inc
jmp
mov
push
xchg
outs
dec
lahf
pop
std
mov
xor
inc
fisttp
jbe
xchg
mov
out
sbb
xor
das
and
mov
fidivr
jle
mov
sahf
sub
nop
lods
ret
sub
repz
icebp
cs
lods
hlt
cmp
add
leave
retf
cld
fs
mov
data16
test
mov
lock
dec
fbstp
jo
in
jbe
cld
dec
pushf
jg
inc
sub
sti
push
int3
mov
movs
pop
mul
jno
into
xchg
mov
mov
call
fcomp
add
call
sti
cmps
pop
movs
cld
or
dec
sbb
mov
adc
scas
add
mov
pop
fwait
jg
add
es
xchg
fiadd
mov
aaa
scas
je
pop
xchg
sub
ins
imul
mov
cld
out
xchg
push
cmps
sbb
inc
(bad)
gs
jg
sbb
pop
xchg
jmp
imul
fst
jmp
xlat
jg
or
adc
outs
fcmovne
outs
push
pusha
mov
imul
mov
call
test
sar
sub
ror
pop
mov
outs
jo
in
fcom
push
inc
lock
push
dec
rol
xchg
dec
rcl
mov
mov
add
dec
push
popa
call
fsubr
pop
js
xor
jg
jnp
jb
mov
cld
push
fidivr
or
push
sub
stc
iret
xchg
aam
add
dec
daa
lds
sub
int
shr
cmp
mov
and
lahf
scas
movzx
lods
push
into
xor
adc
or
mov
pusha
mov
sub
xor
jb
cmp
mov
xchg
cmp
dec
sbb
lock
outs
cwde
iret
jl
mov
fcomip
imul
push
pop
sub
idiv
shl
nop
gs
or
verr
adc
xchg
mov
sar
lods
sbb
mov
adc
mul
adc
add
clc
loopne
mov
int
xor
add
cli
jae
mov
inc
dec
int
mov
test
dec
imul
dec
mov
inc
cdq
call
pop
add
inc
sbb
jg
jne
mov
je
ficom
xchg
mov
mov
add
ins
cs
mov
jo
clc
inc
hlt
inc
sbb
sbb
adc
or
pop
mov
shr
mov
sbb
fadd
inc
xor
aam
cmps
push
pop
jmp
push
xor
mov
or
fwait
push
fwait
aam
push
fisttp
pop
cmp
cmps
hlt
repnz
js
sub
daa
add
inc
xchg
push
stos
pop
sti
cmc
mov
fistp
(bad)
mov
or
arpl
or
sbb
mov
mov
and
mov
mov
call
je
fmul
rcr
mov
bound
jge
rcl
xor
dec
mov
inc
adc
jecxz
cwde
xchg
addr16
shl
shl
imul
push
sub
or
ins
and
aas
adc
pop
cmp
inc
mov
cmp
int3
xor
fdiv
jno
shl
sub
cmp
cmp
outs
gs
pushf
inc
adc
lods
jmp
mov
adc
call
or
mov
sbb
setbe
sbb
sub
ret
inc
scas
fwait
mov
dec
outs
pop
mov
movs
xchg
pop
xchg
jl
jmp
imul
mov
mov
ret
popf
call
mov
loope
and
jg
stos
jmp
xor
(bad)
mov
cs
inc
add
jae
sub
js
pop
hlt
aaa
xchg
inc
pushf
loop
js
cmp
pop
mov
test
test
imul
mov
and
cld
add
mov
xor
inc
or
(bad)
push
sbb
fisubr
cli
push
(bad)
push
sub
inc
fwait
shr
in
(bad)
pop
inc
enter
jne
popf
stos
sub
pop
ins
fwait
retf
add
loopne
cmps
mov
jnp
shl
nop
test
add
lods
inc
mov
les
mov
push
aaa
(bad)
xlat
cmp
mov
sbb
jnp
pusha
loope
and
pop
mov
cmps
mov
data16
loope
sti
pop
call
sub
jnp
imul
movs
sbb
ret
push
xor
mov
call
sbb
hlt
adc
shl
scas
test
mov
and
xchg
inc
mov
scas
fstp
fwait
jecxz
cwde
cwde
loop
call
(bad)
cmps
mov
in
mov
sub
ficom
xchg
add
add
stos
mov
pop
out
dec
aad
shl
outs
cmp
mov
iret
mov
adc
nop
les
aad
movs
xchg
cmp
mov
jp
xor
mov
test
or
sbb
mov
push
sahf
and
pusha
les
add
test
test
sub
les
je
adc
mov
pop
pop
xchg
outs
test
out
gs
dec
mov
mov
ror
add
pop
stos
fisub
call
dec
sub
mov
cmp
sbb
xor
push
stc
mov
jle
in
sub
xor
xor
push
adc
stos
fsubr
mov
mov
jg
loopne
out
(bad)
xchg
jle
or
je
ds
(bad)
push
cmp
in
dec
sbb
cmp
mov
clc
sub
sar
inc
sbb
jno
pop
repz
push
std
push
xor
push
or
retf
xor
jns
xor
adc
sub
mov
outs
mov
pop
sub
js
fldcw
sub
leave
(bad)
pop
inc
push
mov
jp
xchg
mov
inc
push
scas
push
mov
inc
arpl
pop
sub
push
pop
or
mov
stos
lods
push
inc
dec
fist
sbb
sub
sar
sub
pushf
pop
(bad)
xor
and
cdq
mov
cmp
es
jmp
mov
outs
ret
dec
mov
push
mov
mov
cld
xor
jbe
sbb
or
js
arpl
mov
lock
or
cmc
cmc
cli
fdiv
push
mov
mov
mov
mov
pushf
cmp
scas
repnz
test
ins
aad
jo
pop
test
int
xlat
leave
lods
loope
dec
jnp
fld
movs
sub
arpl
sar
inc
scas
loope
jg
mov
ja
cwde
push
iret
jo
xchg
mov
rcl
cmps
cmp
pop
pop
xchg
cld
sar
mov
data16
mov
(bad)
out
aaa
ins
gs
and
sbb
fiadd
push
xor
mov
mov
inc
in
pop
adc
rol
pop
pop
sub
sbb
shr
xchg
mov
hlt
ins
jmp
or
add
sub
and
xchg
dec
scas
mov
inc
call
xor
in
imul
ret
fisubr
ss
(bad)
mov
jnp
inc
xor
jo
xchg
ds
and
push
inc
push
dec
xchg
das
loop
aad
mov
and
push
or
pop
pop
cli
mov
sub
jmp
test
cmps
into
sub
sbb
popa
adc
or
fidivr
jb
adc
jmp
in
cld
popa
lock
test
inc
test
out
ret
inc
es
cld
pop
out
adc
aam
lods
out
pop
pop
mov
push
pop
jl
adc
(bad)
push
jmp
inc
push
pop
clc
pop
sbb
bound
es
push
outs
mov
cmove
cmc
pop
xchg
and
dec
and
popf
sub
leave
xor
jle
mov
and
jge
mov
dec
and
idiv
push
pop
add
inc
out
mov
add
shl
cwde
test
loop
push
mov
call
mov
sahf
cwde
sub
jno
add
dec
adc
xchg
fsubr
mov
retf
test
jg
jae
push
fidivr
xchg
xor
inc
fninit
mov
pop
push
ror
fsub
ins
ja
sub
jmp
mov
or
sbb
dec
pop
out
sub
js
(bad)
sub
lods
ins
aaa
out
repz
inc
(bad)
push
imul
pop
stc
pop
mov
outs
inc
pop
xor
mov
mov
stos
pop
shr
add
lock
sbb
inc
or
mov
mov
sti
cmp
dec
imul
repz
dec
leave
bound
shl
mov
(bad)
push
dec
pusha
fsubr
lock
dec
test
mov
cmps
xor
add
bound
(bad)
in
sbb
cmp
arpl
xchg
aaa
jg
repz
inc
mov
mov
cwde
int
mov
push
jmp
cmc
inc
adc
ret
pop
push
loopne
pop
jmp
loopne
int
xor
sub
xchg
or
lds
leave
cmp
outs
xchg
and
sub
out
test
push
xchg
jns
leave
sub
sbb
cmps
pop
bnd
in
jecxz
mov
push
popf
test
mov
clc
mov
jp
push
ret
test
push
aaa
fdiv
jmp
bnd
dec
jp
popa
mov
sbb
xchg
pop
and
(bad)
dec
scas
add
inc
or
fadd
or
shr
jl
stos
mov
into
enter
popa
adc
gs
inc
sahf
outs
push
adc
gs
movs
rol
in
(bad)
gs
adc
cmp
sbb
xchg
or
push
call
and
inc
jb
cmp
in
xchg
std
stc
xchg
add
sbb
mov
outs
and
cmp
(bad)
out
jge
in
and
loop
je
cmp
frstor
sar
xor
cdq
ficom
cmp
imul
test
cmp
sbb
sbb
push
loopne
nop
pop
retf
pushf
cmp
lock
jnp
and
inc
sti
mov
push
mov
inc
in
aam
stc
out
fdiv
mov
sbb
mov
retf
sbb
loopne
stos
adc
fmul
sti
pusha
sar
bound
repz
test
dec
fs
jp
mov
int
xchg
add
out
inc
dec
or
sbb
ss
fbld
mov
xor
pushf
dec
or
and
push
in
push
and
(bad)
pop
sbb
mov
lds
(bad)
iret
add
mov
cmp
stos
rcl
cmp
push
pop
mov
cmps
inc
mov
jle
mov
stos
repz
repz
mov
cmp
gs
sbb
dec
push
loope
cmp
cs
mov
in
add
call
mov
shr
xor
or
cmps
aas
xchg
leave
imul
(bad)
fld
pop
mov
xchg
pop
loope
mov
inc
iret
mov
sub
mov
mov
and
mov
icebp
push
aaa
or
xchg
push
pop
ficomp
add
cmp
sub
xchg
es
xor
sbb
and
jmp
jmp
and
cmp
enter
sbb
loope
add
cmp
(bad)
popa
xchg
(bad)
cdq
dec
fidiv
in
and
xor
push
cmps
and
push
mov
push
mov
mov
cmp
and
sbb
xchg
push
or
rcl
mov
jmp
sub
jnp
rcl
out
inc
xchg
dec
shr
das
xor
xor
test
cmps
mov
xchg
pop
mov
shl
add
jg
jge
cmps
inc
xchg
cmps
inc
cmp
and
adc
pop
rcl
pop
iret
test
movs
sbb
inc
mov
in
rcr
popf
jp
icebp
xor
loopne
jmp
push
(bad)
(bad)
hlt
hlt
scas
pop
stc
adc
ficom
push
sub
mov
ret
push
gs
aas
jle
stos
inc
outs
fld
or
jo
inc
ss
movs
jns
jle
jl
adc
test
sbb
xor
mov
jo
(bad)
jmp
inc
icebp
ja
enter
addr16
sti
mov
push
cmps
xor
inc
icebp
mul
je
ja
cmp
aad
xchg
fdiv
push
mov
cmp
sbb
or
outs
das
je
push
push
scas
cmp
pushf
add
mov
ins
outs
icebp
fmul
bound
cmp
ja
add
pop
push
mov
jb
jns
sub
mov
mov
je
inc
jmp
or
test
inc
and
inc
lahf
jecxz
data16
sbb
ins
push
and
dec
les
shr
je
test
mov
pushf
data16
mov
mov
aad
jb
inc
(bad)
sti
push
mov
fucomp
loope
xor
pop
std
out
mov
aaa
mov
lods
adc
lahf
aam
mov
xor
scas
jl
dec
nop
inc
xor
jmp
and
cmp
int3
ss
mov
inc
in
(bad)
pop
and
sub
mov
out
mov
popf
dec
and
int
sub
xor
test
call
inc
aaa
pop
jo
xchg
pusha
jb
lock
mov
jge
add
jo
pop
je
cld
(bad)
mov
and
cmps
cmp
rol
and
(bad)
(bad)
sbb
add
call
cmps
loop
(bad)
mov
aaa
lahf
jmp
lahf
enter
or
jle
inc
cmc
or
push
idiv
aas
mov
push
cmp
icebp
ja
push
daa
out
push
mov
scas
(bad)
test
aam
adc
dec
pop
rcr
pop
(bad)
popa
push
fadd
int3
popa
mov
or
fwait
or
jo
push
movs
add
pop
cmps
sbb
test
mov
out
mov
and
mov
pop
add
es
sbb
int3
jno
mov
in
sbb
call
inc
jo
push
es
push
lds
js
xor
out
(bad)
sti
push
adc
and
mov
mov
js
sahf
or
mov
sahf
sahf
dec
sub
adc
frstor
rol
and
or
xchg
inc
lods
imul
sti
movs
sti
(bad)
cmp
outs
fiadd
cdq
mov
je
xor
inc
pop
mov
mov
xchg
push
push
push
je
loope
adc
xchg
fcmovnbe
dec
(bad)
lahf
push
cmp
and
add
imul
ja
cmp
and
sub
js
scas
gs
pop
jnp
dec
cmp
leave
call
and
or
lock
icebp
xor
and
popf
loop
rcr
aas
ja
(bad)
xchg
(bad)
sbb
arpl
mov
(bad)
ss
mov
test
fiadd
(bad)
out
xchg
dec
mov
loop
jg
mov
mov
aas
fistp
mul
mov
test
mov
repz
popf
ins
or
mov
loop
lods
cdq
ss
das
inc
test
hlt
nop
std
js
mov
and
jb
mov
xor
movd
xor
inc
(bad)
push
jno
or
mov
out
shl
xchg
scas
sub
popa
(bad)
bswap
sub
in
repnz
fdivr
xorps
aas
icebp
cmps
jmp
mov
pop
xor
cmc
(bad)
adc
mov
adc
addr16
inc
push
pop
daa
je
pushf
test
xor
fdiv
add
push
popf
or
inc
(bad)
ret
jnp
push
push
retf
leave
fs
jne
cmp
je
jmp
add
dec
jmp
inc
cmc
fbld
mov
adc
or
add
mov
or
sbb
and
es
out
lods
aam
cwde
nop
retf
retf
push
pop
fadd
mov
sahf
cld
jmp
arpl
out
push
adc
leave
into
test
or
add
or
xchg
lods
and
mov
sahf
add
imul
(bad)
push
xor
mov
sbb
or
pusha
test
mov
(bad)
fwait
test
mov
pop
xchg
out
test
fadd
movs
dec
retf
aam
add
and
and
(bad)
mov
cdq
stos
add
pop
cli
pop
sub
hlt
in
mov
repnz
ret
ja
ins
push
std
cmp
xchg
adc
stos
inc
sub
and
sbb
mov
and
int
mov
inc
jecxz
and
cld
push
or
or
gs
lahf
jne
lods
xor
pushf
push
or
scas
out
into
ss
mov
test
daa
das
push
cmp
or
movs
adc
mov
xor
mov
clc
lock
dec
arpl
inc
daa
push
retf
xchg
cmp
push
jmp
add
in
mov
ins
sub
std
pop
adc
mov
adc
push
sub
push
fwait
pop
ret
movs
xor
aam
test
jle
push
and
sti
cmc
sub
retf
dec
mov
mov
jmp
push
sti
mov
test
adc
dec
and
pop
mov
icebp
test
adc
cmp
fdivrp
push
xchg
sahf
mov
jle
out
add
push
lods
cmp
lock
or
push
sbb
xor
imul
xlat
js
je
or
mov
sub
sbb
repz
test
ins
lea
xchg
loopne
loope
stc
shl
fcom
sub
mov
dec
mov
jmp
int3
dec
and
outs
adc
xchg
es
ret
xchg
ins
mov
or
jbe
inc
std
xor
jg
jmp
call
stos
jns
xor
push
test
pop
leave
add
jb
pop
add
cmp
movs
div
stos
pushf
pushf
cmp
mov
mov
push
loopne
dec
or
aad
jl
inc
loope
mov
xchg
es
mov
add
xlat
cdq
imul
imul
fbld
mov
rol
pop
test
inc
(bad)
pop
test
xchg
fisttp
xor
pop
fcom
dec
pop
(bad)
cmp
xchg
add
test
mov
(bad)
hlt
shr
xchg
(bad)
sbb
and
inc
scas
and
inc
pop
mov
mov
data16
jnp
pusha
mov
sub
adc
scas
out
push
pop
mov
inc
xlat
push
(bad)
mov
clc
jns
add
lock
or
cmp
cld
ret
retf
xor
push
sbb
and
data16
call
loopne
aaa
adc
fcomp
(bad)
jmp
pushf
push
push
out
out
pushf
or
(bad)
scas
xchg
mov
cmp
into
loop
mov
cmp
mov
ret
jmp
movs
aas
sbb
xor
(bad)
cld
or
adc
push
imul
test
or
test
inc
sub
inc
mov
mov
and
dec
mov
movs
and
inc
popf
mov
cdq
inc
lds
mov
int3
push
add
rol
retf
test
mov
xchg
in
jge
test
pop
leave
bound
push
xlat
sbb
out
movs
push
(bad)
movs
pop
cmp
pop
dec
lea
cwde
pop
int
push
out
add
mov
mov
cmp
(bad)
pop
xchg
je
ror
push
call
and
cmps
mov
or
arpl
xchg
ss
mov
mov
push
dec
sub
pop
push
mov
cdq
push
cmp
mov
rcr
icebp
mov
ror
shr
cwde
or
fcom
out
mov
inc
pop
dec
dec
or
fidiv
add
or
fstp
dec
sub
jge
div
lods
jno
loopne
int
sbb
push
pop
dec
sub
dec
add
dec
popa
sub
or
mov
adc
mov
fnstsw
pop
test
ss
ud1
xor
sti
mov
leavew
fidiv
ret
std
lahf
cmp
ror
shr
lea
add
loope
stos
mov
xchg
jbe
gs
sbb
push
ins
fucom
out
lods
mov
dec
mov
out
mov
cmp
xchg
add
rcl
jns
js
push
mov
stos
or
pop
scas
mov
mov
push
cmps
lea
sub
mov
arpl
cmp
pop
pop
add
mov
dec
jl
movs
cwde
ss
xor
dec
mov
or
cmps
popf
add
popa
scas
xchg
pop
in
push
fist
(bad)
mul
mov
fucomi
and
pop
mov
xchg
lods
jmp
fistp
cwde
or
inc
mov
out
sbb
and
fmul
sbb
push
xchg
push
xor
xchg
idiv
sbb
shl
ss
popf
add
ds
loop
paddusw
out
enter
lods
inc
lods
pop
sahf
cmp
dec
mov
jge
push
popf
mov
sbb
sbb
mov
jecxz
fcomi
dec
xor
ds
loop
jnp
fsubr
push
outs
out
sar
mov
sbb
loop
imul
dec
mov
fimul
or
cld
(bad)
sbb
std
dec
inc
cmps
pop
inc
inc
xor
pop
dec
in
push
loop
gs
inc
inc
add
mov
sbb
cmp
movs
cmp
mov
sub
dec
push
sub
stc
xor
cwde
jo
aad
std
rol
inc
inc
add
hlt
std
outs
imul
outs
cmps
out
jmp
pop
arpl
mov
enter
fsub
pop
sub
sub
dec
push
pop
ret
pop
out
dec
imul
or
add
pusha
sub
or
mov
call
mov
xchg
xchg
push
rcl
adc
inc
imul
loop
sub
js
xchg
test
retf
cmps
loopne
aad
sbb
gs
ja
xor
(bad)
xlat
xchg
sahf
aad
repz
jo
fidiv
lds
inc
sub
mov
jmp
loop
mov
jbe
cmp
hlt
icebp
sub
inc
rcr
daa
pusha
and
lahf
dec
icebp
gs
test
mov
(bad)
pop
outs
mov
je
mov
je
add
out
jne
sbb
inc
test
jg
pop
pusha
jmp
dec
cli
shl
cdq
add
pop
repz
leave
fbstp
sar
retf
jecxz
icebp
xor
lods
push
mov
mov
dec
pop
ins
and
fs
lods
lea
out
rsm
jmp
sub
repnz
popa
fucom
and
stc
rcl
rcl
push
inc
aas
das
mov
inc
push
mov
bound
and
mov
sub
mov
fwait
cld
sub
stc
lea
xor
pop
scas
movs
push
out
js
stos
xchg
mov
movs
pop
mov
es
cmc
mov
cmp
sub
xchg
dec
stos
mov
inc
mov
daa
in
cmp
push
sti
imul
cwde
pop
adc
sbb
test
daa
inc
push
xor
push
pusha
cmc
pop
test
push
jae
arpl
dec
ds
cli
fs
cmp
lea
jbe
xchg
push
jns
aas
adc
jb
mov
dec
jecxz
add
sbb
mov
mov
call
mov
sub
xor
mov
sbb
mov
sub
xchg
mov
sub
mov
nop
loopne
pop
pusha
mov
xor
data16
push
out
xor
mov
and
leave
adc
cmp
lahf
pop
pop
push
push
mov
sub
xchg
mov
sahf
mov
xchg
mov
mov
std
xlat
out
push
mov
imul
xchg
push
std
lods
shl
sti
bound
adc
in
jae
sub
repnz
sbb
mov
int3
lock
add
test
xchg
out
(bad)
pushf
in
bound
in
adc
lock
adc
ret
inc
cs
mov
addr16
push
ds
pusha
and
sahf
pop
rcl
cmps
sti
pop
call
xchg
pop
neg
pop
sub
sar
out
push
cs
inc
retf
cmp
stos
test
adc
jns
sub
dec
xchg
add
les
loope
or
dec
sbb
jbe
push
shr
pop
or
imul
push
mov
popf
cmp
mov
sbb
push
push
push
pop
or
popa
sub
pop
stc
imul
imul
xchg
pop
push
xchg
inc
xchg
out
pop
mov
and
scas
sub
lods
sub
push
or
mov
mov
loopne
xlat
push
jl
shr
add
mov
in
imul
fs
mov
lds
and
neg
repnz
or
adc
iret
lahf
and
xchg
(bad)
out
jle
lea
push
jl
lea
mov
icebp
jbe
mov
adc
sub
cmp
sbb
(bad)
fisttp
jae
xchg
mov
out
cmp
jge
lahf
inc
mov
jmp
int
adc
sbb
xchg
and
xor
out
cmc
mov
cld
cmp
mov
add
adc
mov
in
add
rep
cmp
pop
outs
call
arpl
push
lods
add
sub
and
test
fistp
adc
adc
sub
inc
jbe
loop
retf
mov
out
dec
jl
rcr
pop
sub
ins
jne
(bad)
pop
jns
das
cmc
mov
pop
jne
das
sub
dec
(bad)
jecxz
jmp
xchg
aad
and
les
das
test
in
push
xor
mov
rcr
cpuid
sbb
cmp
icebp
pop
into
sbb
outs
jle
cs
retf
stos
cwde
gs
mov
cmp
mov
outs
jbe
add
sbb
pop
xlat
jle
add
dec
mov
test
cmp
mov
stos
dec
push
enter
adc
ins
iret
mov
push
je
inc
fisttp
jbe
push
call
jp
rol
push
cmp
movs
or
dec
retf
sub
mov
daa
jl
and
in
outs
pop
aas
adc
adc
inc
pop
lock
stos
jbe
jge
pop
cs
jb
mul
mov
jecxz
(bad)
fs
je
je
int3
ins
ds
shl
out
mov
adc
ret
xchg
add
mov
out
mov
cmp
fs
jecxz
mov
(bad)
call
fcmovnbe
fnstcw
pop
mov
ins
out
aam
push
fwait
mov
std
mov
pop
cmp
xchg
xlat
fwait
mov
ins
mov
clc
ror
call
out
sub
inc
push
pushf
(bad)
hlt
ins
pop
cmp
or
or
mov
lea
xor
adc
dec
push
inc
cli
xor
fld
psrlw
fdivr
mov
push
sbb
rcl
jmp
rol
mov
xchg
adc
fcmovnb
dec
imul
bound
in
aaa
repnz
pop
(bad)
mov
sbb
cdq
mov
mov
xchg
push
mov
pop
xor
lea
pop
fidiv
call
sub
mov
xchg
mov
mov
add
sti
movs
sti
or
icebp
cmp
xchg
fild
fs
inc
cmp
or
ret
cmovbe
fsub
adc
(bad)
imul
xchg
pop
call
xchg
(bad)
dec
mov
hlt
mov
sbb
test
mov
jo
icebp
loope
push
(bad)
adc
div
push
add
test
call
xchg
ins
add
inc
lea
xchg
aam
fmul
sbb
push
add
out
dec
pop
in
sub
inc
inc
jecxz
iret
sub
xor
or
and
stc
stos
jecxz
sub
add
popa
mov
adc
sahf
xor
test
jmp
and
mov
out
sub
add
sti
sbb
cmc
imul
aaa
popa
aad
fisubr
xor
fcomp
push
mov
sar
jmp
xchg
adc
cwde
lods
and
mov
cld
or
loopne
xchg
push
mov
xor
jb
loop
jl
nop
xchg
pushf
sub
cmp
sub
icebp
mov
and
test
ret
cmp
inc
mov
ins
push
push
inc
push
ds
or
div
in
mov
mov
pop
mov
sub
movups
xchg
pop
cld
sub
data16
mov
pop
add
xchg
hlt
dec
mul
(bad)
cmp
lods
mov
popf
test
test
mov
ficom
les
jecxz
jo
cmc
loopne
mov
or
sub
sbb
and
fldenv
adc
jno
pusha
or
mov
dec
shl
es
ins
jge
xchg
out
mov
aas
or
push
sahf
push
shr
ficom
pop
scas
pop
mov
out
lods
mov
scas
mov
test
jbe
or
(bad)
adc
std
or
and
xchg
sbb
enter
adc
pop
ins
sahf
aas
std
imul
jnp
or
in
shl
mov
das
dec
test
shr
jmp
data16
js
xor
mov
sub
xchg
test
call
int
enter
cmc
push
jmp
(bad)
leave
(bad)
push
push
mov
add
and
fbstp
sub
mov
mov
dec
mov
cdq
inc
fs
sub
mov
xchg
mov
out
jae
retf
or
inc
sbb
shl
mov
jmp
ret
gs
sub
mov
ins
jmp
sub
mov
dec
cli
mov
inc
dec
hlt
fmul
aas
shl
std
pop
cmp
mov
icebp
mov
dec
xor
shr
xchg
pop
jmp
push
inc
cmp
dec
jle
(bad)
mov
mov
xchg
clc
inc
add
pop
pushf
lods
pop
in
adc
leave
fdivr
mov
mov
stos
and
gs
mov
rcr
mov
div
inc
dec
xchg
push
cmp
jae
sbb
pop
pop
push
inc
dec
sbb
sub
shl
cmp
lock
inc
pop
outs
or
sub
mov
fdivr
xchg
xchg
jl
push
jno
add
nop
jmp
adc
fdiv
outs
js
or
add
aas
pop
(bad)
inc
mov
fwait
loopne
and
imul
dec
or
inc
mov
jge
mov
rdmsr
aam
test
enter
push
mov
push
push
xchg
xchg
adc
mov
adc
and
or
push
out
js
jmp
ret
movs
inc
dec
rcr
inc
(bad)
loope
lds
cmp
push
ror
cmc
pop
out
mov
cmp
mov
sub
mov
stc
lahf
add
sbb
pusha
jno
gs
scas
and
shl
ret
popa
sbb
cmp
fmul
jo
test
enter
mov
inc
movs
inc
add
test
sub
sbb
cmps
push
sbb
imul
dec
push
fsubr
(bad)
repz
in
popf
scas
outs
pop
cmp
inc
leave
mov
xor
rcl
fmul
inc
pop
push
fisub
push
xor
xchg
mov
mov
push
mov
cmps
fldcw
mov
jo
pop
adc
loopne
add
and
cdq
push
push
imul
sti
jae
movs
data16
(bad)
fdiv
or
pop
push
push
mov
jo
adc
pusha
jne
xor
push
dec
xor
add
addr16
fs
sar
call
xchg
in
(bad)
in
pop
int3
gs
cmp
inc
or
loope
xchg
mov
sbb
(bad)
xchg
inc
mov
shl
xchg
add
adc
push
outs
cmp
add
fisub
stos
sahf
sti
sbb
mov
imul
cld
cdq
adc
daa
gs
lahf
out
pop
ins
sbb
dec
lock
js
adc
adc
mov
into
scas
dec
fdiv
xor
mov
jnp
(bad)
(bad)
jb
push
leave
mov
sub
inc
push
stc
test
add
ds
fptan
and
data16
and
repz
gs
or
adc
shr
fisttp
xor
ror
enter
sbb
jno
jl
sub
sbb
icebp
retf
push
ja
mov
das
daa
lock
mov
xor
add
xchg
mov
aaa
fcom
add
dec
or
ins
enter
jl
mov
popf
dec
mov
xchg
and
mov
xor
ret
push
movs
jmp
xchg
adc
movs
dec
pop
jg
mov
std
fsub
les
sub
add
push
into
pop
dec
xchg
out
push
dec
push
jmp
jl
ins
fs
mov
jne
xchg
rep
les
push
xchg
fucomp
add
test
enter
cmp
je
mov
push
xor
inc
out
dec
into
enter
add
adc
mov
mov
push
stos
xchg
and
lods
loope
pop
jo
inc
enter
cli
jne
dec
addr16
loopne
xchg
lods
sbb
leave
data16
or
retf
ror
jae
popf
jp
mov
push
clc
inc
jnp
inc
mov
add
mov
jmp
xor
jmp
iret
xchg
pop
bound
std
enter
adc
lahf
dec
sub
stc
cmp
popf
pop
cmp
lahf
pop
adc
in
mov
adc
ficomp
dec
pop
or
retf
mov
rcr
adc
mov
push
ret
pushf
std
jle
sbb
mov
mov
jns
(bad)
xchg
add
adc
clc
stc
loopne
mov
scas
and
or
sbb
rol
or
dec
loop
les
push
sbb
mov
(bad)
cdq
ds
daa
mov
xchg
sub
mov
in
fs
iret
idiv
aaa
inc
mov
(bad)
sub
dec
cmc
out
sub
stos
in
pushf
jno
test
xor
pushf
leave
push
popa
jge
mov
add
jmp
inc
jmp
cmp
rcr
shr
das
sub
jne
adc
xor
call
jecxz
mov
inc
ins
dec
out
call
shl
mov
cmps
jno
adc
gs
jnp
and
imul
outs
pop
inc
shr
mov
mov
jb
pushf
dec
jle
xchg
xor
add
mov
int
jg
mov
add
lock
push
add
sahf
ja
repnz
push
dec
sub
push
imul
mov
mov
push
push
shr
inc
pop
jbe
pop
popf
fmul
mov
pop
mov
test
bnd
retf
fistp
dec
iret
retf
xor
mov
out
inc
xlat
jbe
mov
imul
add
iret
xor
adc
and
rcl
shrd
xor
mov
ds
mov
outs
scas
fcomp
sbb
mov
ins
jp
rcl
test
jne
push
xchg
pop
pop
cmc
sub
inc
stos
ins
fild
or
ret
mov
enter
jle
push
cmp
rcr
push
and
mov
sbb
aas
dec
leave
lahf
imul
sub
fimul
and
push
cmp
cmp
mov
bnd
pop
jg
cmp
sbb
mov
sub
cmp
xchg
(bad)
dec
push
and
popa
and
mov
inc
inc
sbb
ret
mov
mov
gs
adc
or
into
loope
sbb
mov
movs
call
test
(bad)
fisttp
outs
mov
inc
mov
test
mov
lock
and
sub
mov
pushf
mov
xor
xor
pop
dec
mov
xchg
bound
stos
pop
ret
jbe
push
and
cmp
xchg
mov
lock
movs
or
sbb
ins
mul
mov
jbe
rcl
push
mov
mov
popf
ja
movs
ret
addr16
movs
mov
and
fst
rol
push
shl
adc
sub
pop
pop
mov
mov
inc
fadd
mov
jle
retf
jne
jb
shl
xchg
mov
pop
jo
cmc
lock
push
into
dec
add
add
xchg
ins
mov
repnz
xor
add
pop
jmp
ins
and
(bad)
into
imul
call
jle
xor
repnz
and
inc
lock
sbb
inc
and
dec
outs
or
(bad)
aas
mov
cmp
jle
imul
nop
xchg
pop
sub
call
push
stos
adc
mov
xor
pop
into
cdq
push
add
movs
cmp
add
rcl
sbb
add
xchg
dec
sub
ss
jl
cmp
pop
mov
sbb
in
out
mov
call
sub
or
lds
cmp
int3
hlt
loopne
xchg
ins
dec
push
lods
add
in
sahf
jg
sub
and
add
lods
pusha
mov
mov
neg
scas
jb
dec
mov
inc
scas
loopne
or
fcom
jne
pop
ins
push
xor
pop
ds
jnp
stos
mov
arpl
mov
enter
sub
cmp
push
jl
fsubr
icebp
mov
cld
jne
lods
cmps
movs
sbb
jno
push
sahf
ret
adc
nop
jmp
shl
mov
ins
fiadd
iret
mov
lea
mov
adc
jbe
out
dec
jmp
daa
lods
(bad)
gs
cmp
addr16
ret
icebp
add
gs
push
push
xor
xor
add
stos
nop
push
mov
mov
adc
ss
ds
int
pop
and
ficom
imul
sub
adc
stos
inc
movs
jg
addr16
jbe
es
ins
popa
imul
push
pop
lahf
add
sbb
fstp
push
mov
sub
xchg
mov
pop
adc
mov
or
imul
shl
sbb
stc
cli
int3
push
jo
repz
adc
fdivrp
sbb
adc
addr16
and
push
push
or
jmp
xchg
stc
out
in
sbb
adc
mov
scas
daa
cmc
jge
(bad)
jl
shl
pusha
cmp
jae
ficom
loop
adc
test
jmp
call
xchg
xlat
jmp
cmp
stos
cwde
popf
std
sahf
xchg
(bad)
fild
gs
jmp
mov
fisub
fisubr
mov
sbb
rcr
dec
push
pop
ficomp
clc
jge
out
or
enter
popa
inc
pusha
or
lods
leave
loop
lea
out
cmp
inc
jbe
ret
aad
add
inc
push
inc
jbe
out
jmp
jno
mov
sbb
mov
in
mov
cld
xor
outs
(bad)
dec
call
pop
adc
bndldx
retf
adc
clc
cmp
inc
jle
retf
sub
mov
dec
xor
rol
mov
pop
or
xor
xor
add
cmps
fist
loop
pop
(bad)
(bad)
cli
movs
jno
shl
cmc
xchg
xchg
xchg
sbb
push
adc
push
movs
adc
and
xchg
cmp
lea
mov
cs
and
stc
push
or
cmps
outs
adc
retf
adc
fimul
dec
mov
int3
push
mov
sub
cmp
push
pop
xlat
ds
icebp
scas
inc
cli
xchg
add
fst
loope
leave
cmc
fisubr
adc
push
dec
mov
push
pop
mov
call
xchg
xchg
popa
push
cmova
pop
es
mov
sahf
mov
retf
imul
mov
mov
movs
imul
(bad)
push
test
xor
imul
stos
sbb
push
enter
add
inc
jbe
mov
and
movaps
fwait
es
jp
dec
scas
ins
leave
jg
movs
rcl
movs
and
push
lods
shl
inc
(bad)
pop
fs
loope
xchg
push
inc
bound
mov
test
mov
xor
xor
aad
lds
fld
das
jmp
out
xor
jns
or
scas
or
js
mov
and
(bad)
sbb
mov
enter
cmp
cdq
or
je
xor
or
shl
test
inc
or
jno
cmp
dec
xchg
mov
mov
pop
sub
test
into
xor
repnz
ins
repnz
add
cmp
inc
push
mov
cmps
pop
scas
sbb
stos
sbb
cmc
aam
retf
fwait
push
ror
mov
fstp
mov
in
jns
xchg
adc
fist
push
stc
mov
aad
shl
jmp
inc
mov
das
repz
xchg
mov
pop
loope
(bad)
push
popa
jmp
ins
test
in
mov
sub
push
xchg
in
fnstenv
inc
sub
dec
addr16
shl
sub
add
add
add
loope
jp
inc
(bad)
ss
imul
std
sub
mov
xor
jae
popa
and
fild
mov
jg
dec
cld
ds
and
hlt
cs
jbe
adc
xchg
xchg
adc
pop
sub
out
mov
mov
(bad)
mov
xchg
sub
aam
adc
call
mov
add
dec
sti
scas
cli
jns
ja
cld
or
mov
ins
dec
fld
clc
cmps
xor
pop
or
fisub
ror
(bad)
push
loope
jecxz
repnz
pop
int
sbb
ss
push
add
xchg
or
ins
add
mov
xchg
pop
inc
shr
mov
xchg
in
nop
jp
mov
xor
bound
(bad)
int3
xor
jmp
call
jp
les
aad
mov
jns
mov
push
jmp
cmp
pop
cs
sbb
enter
cli
leave
and
ret
mov
jp
ins
sti
idiv
sar
mov
sub
stos
movs
add
pop
repz
mov
jmp
sti
xor
add
add
in
add
push
sbb
outs
and
sbb
mov
inc
aas
sbb
sbb
call
inc
repnz
and
pushf
mov
rcl
add
repz
push
out
mov
or
iret
pop
hlt
sahf
fwait
inc
sub
ins
and
stos
mov
inc
lock
lods
jmp
clc
(bad)
push
or
in
jg
add
(bad)
jno
cmp
out
dec
jmp
sbb
ins
in
pop
or
cld
mov
jge
clc
and
mov
or
fdivr
mov
xor
sahf
jbe
cmp
push
(bad)
push
hlt
pushf
sti
fcomp
jb
jp
rol
jle
add
mov
int3
inc
stc
or
xchg
cwde
ret
dec
je
push
lea
xor
mov
in
push
lods
mov
cmp
xchg
or
xchg
mov
add
test
test
sbb
repnz
push
aaa
sub
cmp
cmp
icebp
sbb
lods
cmp
jecxz
mov
jmp
ds
call
xor
and
in
inc
push
pop
shl
inc
imul
xchg
cmp
popa
adc
fbstp
or
test
jecxz
inc
jo
pusha
cmp
mov
mov
dec
leave
dec
cmp
adc
inc
push
xchg
inc
stos
sbb
jmp
movs
inc
jmp
mov
and
mov
es
ficomp
retf
frstor
mov
and
sbb
xchg
gs
dec
xchg
cwde
mov
add
mov
sub
jbe
inc
jmp
cdq
cmp
addr16
out
jg
gs
jb
bound
aam
adc
cmp
and
fisubr
aad
dec
push
inc
push
adc
xor
nop
loopne
xchg
dec
test
mov
movs
pop
inc
or
dec
stos
std
jnp
mov
out
dec
or
mov
lods
(bad)
enter
xchg
test
mov
je
outs
jbe
push
mov
mov
inc
movs
ret
or
mov
xor
ret
in
test
mov
je
lock
cmp
mov
ret
inc
inc
jp
nop
movq
sbb
sbb
add
or
xchg
out
(bad)
sbb
test
scas
or
call
sub
jae
aam
sahf
cmp
into
iret
stos
dec
jle
xor
call
out
dec
jmp
sbb
movs
das
stos
or
out
(bad)
(bad)
arpl
mov
add
add
cmps
mov
sub
out
mov
ret
in
div
daa
cmp
mov
xchg
xor
shr
dec
cmp
cmc
dec
and
mov
sub
pop
clc
push
push
std
mov
sbb
pop
and
in
push
out
je
neg
or
leave
xor
test
loop
xchg
(bad)
into
mov
xor
xor
out
mov
fiadd
push
push
sti
push
imul
aas
push
dec
sub
dec
icebp
das
xchg
pop
adc
neg
jg
enter
and
ins
jo
nop
jmp
sbb
xchg
jmp
mov
sub
inc
int3
ins
dec
mov
adc
dec
imul
dec
push
out
or
in
xor
scas
add
enter
int
push
ror
or
sbb
into
sub
cld
adc
push
lea
(bad)
cmc
call
sub
sbb
or
mov
xchg
idiv
(bad)
cli
js
fwait
cwde
xor
je
imul
movs
pop
dec
pop
xor
enter
sub
jo
cmc
stos
call
cmc
aad
sub
inc
mov
jbe
sbb
fbld
sbb
xlat
cmp
or
jne
jno
and
outs
cld
mov
(bad)
and
cmp
adc
sbb
push
ja
mov
xchg
lods
cmp
daa
ds
ficom
adc
mov
xlat
out
cmp
pop
clc
mov
dec
mov
jle
(bad)
in
fcom
icebp
push
and
test
mov
sub
scas
xchg
rep
sbb
jecxz
and
mov
aaa
xor
xchg
cdq
pop
(bad)
lock
sbb
(bad)
push
retf
pop
dec
ret
mov
into
add
xchg
popa
mov
or
fdiv
sar
stc
dec
mov
push
mov
je
je
imul
int
repz
int
les
jmp
sub
test
jp
jnp
inc
push
(bad)
idiv
rcl
jns
push
call
out
nop
addr16
mov
cmps
push
inc
test
pop
xchg
add
xchg
xchg
test
nop
sbb
mov
or
xchg
dec
call
ret
aad
dec
lahf
pushf
jmp
and
inc
or
(bad)
stos
mov
mov
jle
lahf
repz
(bad)
cwde
inc
clc
mov
or
mov
xchg
in
mov
loopne
test
cmp
or
xor
ins
movs
xor
mov
xor
out
mov
xchg
xlat
mov
aas
jle
xchg
inc
push
or
dec
mov
iret
je
xchg
cs
fidivr
fucomip
pop
mov
push
cwde
sti
push
jbe
mov
push
mov
pop
push
cld
fwait
mov
pop
call
mov
mov
jb
clc
push
mov
dec
inc
int3
dec
jns
jle
jmp
and
jp
inc
pop
fidivr
dec
dec
push
stc
mov
js
ins
pop
pop
out
mov
and
jns
adc
add
push
jl
je
xchg
mov
test
xchg
mov
and
jno
sbb
xor
arpl
test
pusha
sbb
scas
mov
jmp
adc
aas
popa
(bad)
sbb
mov
cmc
jno
rol
lds
shr
sub
out
xchg
mov
add
js
inc
jl
lods
dec
inc
adc
push
and
fst
xlat
mov
shr
dec
mov
test
outs
add
and
mov
ins
pop
dec
(bad)
out
pushf
or
outs
jb
shr
jae
bound
cmps
sar
cmp
or
les
in
jnp
test
gs
push
jb
lds
inc
jnp
sub
mov
fs
and
cmp
xchg
test
jns
sub
stos
ins
loope
or
fstp
fcmovne
icebp
mov
cld
dec
neg
xchg
out
dec
jmp
mov
mov
scas
pop
xchg
jg
jmpw
jg
movs
(bad)
push
jmp
neg
sub
or
out
iret
jb
rol
ja
sbb
ret
into
sub
pop
sti
shl
jbe
mov
out
mov
mov
mov
mov
push
xor
sub
ret
adc
movs
xor
(bad)
push
cmp
cmp
ficomp
in
cmps
scas
icebp
pushf
ss
ds
xchg
popa
call
cs
rcl
test
inc
into
inc
xor
dec
pop
or
scas
movs
xlat
idiv
dec
cs
popf
in
and
mov
sbb
test
mov
mov
sahf
lea
popf
imul
add
mov
mov
pop
push
cmps
xchg
and
movs
movs
xor
push
lods
dec
loope
fnstenv
add
push
cli
pop
out
pop
xor
ins
push
cmp
lahf
out
pop
dec
fldcw
mov
dec
ins
int
fld
outs
outs
mov
jmp
jb
arpl
sub
mov
aam
mov
push
push
clc
add
fwait
mov
dec
dec
dec
movs
or
pop
pop
xchg
add
jns
or
je
add
fcomp
pop
adc
sahf
out
or
push
pop
in
test
mov
jl
cmp
test
mov
cld
sub
fistp
xlat
and
sub
test
inc
inc
aad
int
test
xor
adc
das
fild
push
pusha
test
push
or
inc
mov
daa
repz
shl
xchg
iret
jo
push
xchg
ja
inc
lea
jb
adc
aaa
leave
pop
in
xor
cdq
clc
imul
(bad)
aam
mov
sbb
inc
neg
or
mov
mov
mov
ror
fwait
call
inc
test
xor
test
cwde
push
repnz
xchg
push
inc
mov
gs
sti
jnp
sahf
adc
aad
sti
sar
jle
mov
pop
fwait
inc
sub
cld
or
sbb
jnp
cmp
loope
or
push
fnsave
ret
pop
push
fadd
mov
cmp
lds
dec
mov
mov
xor
jg
pop
ja
out
add
mov
or
push
mov
aad
in
aam
add
adc
push
jbe
xlat
xchg
test
ret
jbe
sub
push
test
mov
or
sub
fdiv
jnp
cmp
dec
add
cld
int
mov
pop
rcr
rcr
std
dec
push
adc
mov
cld
jmp
ja
repz
cmp
(bad)
sbb
and
out
jmp
mov
xchg
jbe
arpl
or
cmp
adc
jecxz
adc
sbb
jns
or
inc
or
loope
retf
dec
adc
xchg
mov
aam
push
outs
push
out
xor
dec
or
mov
or
cwde
psraw
and
xchg
ins
add
pop
sbb
es
xchg
jno
mov
out
out
stos
or
lahf
pop
cmp
adc
mov
add
dec
add
popf
cwde
pop
jns
ss
sub
js
mov
fsubp
cmp
xchg
popf
pop
add
jno
(bad)
sub
jecxz
inc
mov
adc
in
add
mov
ret
rcl
inc
sbb
test
pop
lds
dec
mov
cmp
stos
or
adc
and
fcomip
xor
mov
xor
cmps
inc
jge
dec
in
gs
leave
jo
ds
sub
je
mov
iret
mov
repz
je
imul
inc
pop
movs
les
or
cmp
push
and
mov
mov
out
and
adc
inc
fnstcw
shr
mov
or
or
lahf
movs
cdq
mov
leave
lods
lods
lahf
push
push
clc
xchg
push
add
dec
inc
push
pop
and
(bad)
push
jle
cmp
(bad)
fwait
xor
dec
lahf
scas
ds
gs
add
fstp
loope
shl
nop
movs
int3
mov
icebp
stos
shl
fwait
cmp
lea
fsubr
adc
dec
cmps
fs
jp
les
xchg
enter
lods
cmc
loop
ret
pop
mov
cmp
ds
push
jae
mov
lods
das
cmp
(bad)
mov
jmp
add
jmp
pop
sub
pop
mov
arpl
fnstsw
push
movs
inc
out
pop
stc
mov
adc
daa
das
pop
popa
sti
test
and
sub
sbb
fst
imul
enter
lods
popa
(bad)
xor
pop
xor
ror
cmp
ss
jmp
stos
(bad)
mov
sub
lock
inc
sub
cmp
push
jno
and
cmp
and
inc
add
add
pop
movs
ss
test
loopne
ja
add
jbe
js
jb
fwait
dec
push
xor
cli
test
adc
rcr
lea
popf
mov
lea
sti
mov
and
call
sahf
inc
pop
push
add
xor
bound
mov
sub
rcr
call
retf
outs
fist
jge
jne
xor
cmp
or
inc
pop
mov
ins
mov
pop
mov
icebp
pop
setnp
pusha
out
mov
mov
stc
sbb
jle
test
adc
push
dec
mov
xlat
(bad)
fcmovnb
sti
xchg
push
jnp
or
movs
into
movs
fdivr
fidivr
mov
cld
dec
pop
mov
add
add
mov
push
int3
in
repz
xchg
dec
dec
call
sub
and
push
std
enter
or
jb
and
pop
(bad)
out
(bad)
push
in
fwait
addr16
out
bound
sbb
fsubr
mov
ins
lods
sbb
push
rcl
icebp
in
in
mov
jae
xchg
or
xlat
jle
jp
call
daa
cdq
push
mov
repnz
mov
sbb
rcr
jmp
pop
sbb
fcmovnbe
xchg
xor
inc
mov
dec
int3
imul
xor
adc
int
inc
addr16
mov
int3
adc
test
rcl
push
fwait
xchg
shl
out
out
jae
bnd
pop
or
test
xor
push
leave
xor
add
xor
int
and
or
loop
ror
es
shr
jge
xor
sbb
adc
nop
ds
fmul
popf
cmps
test
adc
add
scas
pop
sar
jne
mov
test
(bad)
(bad)
cwde
or
and
xlat
and
pop
or
xchg
and
xchg
in
mov
inc
test
lock
sti
cwde
push
cli
mov
pop
inc
push
addr16
cs
fistp
ror
adc
mul
cmp
xor
cdq
out
sahf
js
out
mov
lock
mov
outs
aad
popa
jbe
push
cmp
aad
outs
inc
std
adc
dec
in
push
fucom
mov
push
cld
jb
sub
jo
lock
xchg
dec
pop
or
sub
fdivr
adc
lds
cmp
or
scas
pop
mov
or
aaa
into
push
je
outs
inc
leave
adc
sub
mov
outs
mov
xchg
mov
popa
mov
shr
mov
mov
into
add
xor
jne
push
push
cmc
sbb
test
clc
paddsw
sbb
jl
outs
mov
push
add
loop
push
leave
gs
stos
hlt
cmp
ds
or
arpl
icebp
outs
mov
popa
or
test
in
int
std
retf
push
push
lea
dec
sub
cmps
cmp
sbb
sahf
jb
movs
repz
jecxz
unpcklps
ja
sub
xchg
inc
stos
xchg
push
pop
arpl
add
and
inc
fdiv
out
vmovntps
out
cmp
mov
add
push
clc
push
pop
ss
fimul
lahf
add
repz
xor
mov
cmp
mov
lods
mov
arpl
test
inc
inc
push
outs
mov
mov
sbb
inc
ret
or
mov
int
into
lea
jno
jl
push
loopne
stc
sar
jl
dec
push
mov
add
aaa
(bad)
ins
(bad)
sbb
retf
imul
sbb
test
outs
lahf
cmp
cs
pop
sar
not
jl
push
imul
mov
fiadd
fwait
sbb
fnstenv
jl
or
je
fdivr
into
js
sbb
xchg
fnstcw
inc
shl
sub
mov
sbb
mov
popa
mov
pop
pop
jp
mov
fist
pop
dec
call
fwait
or
test
or
(bad)
dec
xor
arpl
mov
pop
adc
mov
xchg
out
mov
les
mov
mov
add
cmp
xlat
frstor
aaa
cmp
outs
(bad)
in
mov
fidivr
and
jmp
dec
add
(bad)
cli
ds
jnp
xchg
sub
fst
aaa
movs
mov
inc
pop
mov
mov
sub
cmps
pop
pop
mov
out
mov
lahf
push
pushf
or
dec
or
add
fwait
cmovb
xchg
sbb
nop
(bad)
addr16
je
stos
dec
xor
test
aam
xchg
push
push
sti
mov
mov
int3
ror
jmp
das
adc
gs
test
mov
mov
inc
mov
mov
push
fistp
pop
rcl
push
xchg
inc
mov
je
pop
(bad)
pop
and
pop
ds
test
ds
mov
adc
mov
stos
jne
push
repnz
sub
sub
popa
das
repz
iret
adc
mov
mov
in
loopne
cmp
retf
push
iret
clc
comiss
mov
leave
movs
into
xchg
mov
xor
sbb
ror
jp
push
out
or
cdq
pop
mov
ds
mov
pop
aam
mov
inc
and
push
and
push
ret
xchg
pop
or
jecxz
mov
ret
mov
inc
lods
inc
cmc
sahf
out
inc
stos
and
inc
imul
ror
or
imul
aam
sbb
inc
test
bndldx
hlt
push
fs
into
out
and
mul
aaa
repz
mov
movs
ja
or
jne
aam
daa
xor
aaa
jmp
jo
mov
arpl
or
cmp
fmul
xchg
lock
dec
dec
mov
stos
mov
stos
ins
fcomp
jmp
fistp
lods
test
in
test
pop
pop
fdivr
ret
xchg
bound
cmp
call
clc
add
retf
inc
movs
dec
outs
adc
and
sub
cmp
ins
popa
imul
lea
and
and
test
ins
and
scas
inc
inc
jmp
cs
or
push
into
sub
sbb
sub
jmp
mov
xor
push
clc
or
xor
push
sar
cld
nop
inc
xlat
adc
fistp
or
int
mov
test
adc
sub
mov
jb
pop
shl
mov
addr16
pop
or
add
and
sub
dec
push
mov
sub
int
cmp
fimul
or
add
sbb
add
call
lea
aaa
lds
mov
push
pop
jecxz
pop
jg
loope
stos
mov
cwde
sub
stos
scas
dec
jmp
das
inc
mov
push
sub
inc
jmp
push
mov
pop
pop
push
scas
mov
jnp
inc
daa
add
(bad)
es
push
cmp
xchg
jp
mov
inc
repz
arpl
inc
sub
shl
xor
lods
leave
(bad)
gs
jns
leave
push
test
pop
(bad)
out
ret
jns
jb
cmp
pop
dec
push
int
adc
dec
mov
cmc
outs
xor
mov
(bad)
fnstcw
mov
xor
movs
inc
pushf
dec
stos
aas
inc
ret
sahf
lods
lock
mov
test
call
push
xlat
and
aam
push
pop
jb
add
mov
mov
mov
xor
iret
push
imul
sub
mov
stos
cmp
pop
je
push
movs
imul
nop
fdivrp
bound
aas
outs
bound
jle
mov
xor
addr16
adc
call
sahf
mov
fcmovne
and
sub
xor
retf
in
adc
into
rcr
dec
pop
adc
adc
push
jmp
out
adc
push
das
loope
jmp
push
dec
fiadd
int3
cs
inc
repnz
lahf
dec
imul
sbb
push
aad
retf
xlat
push
popf
jno
int3
mov
sub
mov
or
(bad)
les
push
mov
ror
sar
leave
call
test
add
sbb
jnp
sub
movs
or
mov
lds
out
mov
pushf
xchg
sub
sar
sahf
cs
scas
jb
repz
jecxz
sub
and
outs
or
fstp
sti
out
jbe
in
xchg
sub
and
scas
mov
jmp
cwde
add
xor
mov
cmps
sbb
addr16
cdq
mov
jg
or
cmp
aas
sub
rcl
or
cmps
(bad)
mov
inc
je
cmps
mov
pop
int3
or
add
dec
sbb
push
test
repnz
add
dec
bound
dec
mov
lods
(bad)
rcr
out
in
outs
shl
xchg
out
(bad)
(bad)
inc
lock
jl
sub
cmp
inc
test
cmps
and
adc
fmul
sbb
loopne
and
cmp
add
or
or
xchg
mov
fmul
or
sbb
sub
jo
loopne
xchg
fwait
gs
cmp
dec
and
mov
das
in
popf
loope
jg
pop
mov
mov
pop
xchg
mov
call
retf
and
clc
add
sub
(bad)
or
mov
in
into
bound
jmp
mov
js
adc
pop
pop
mov
(bad)
pop
rcl
or
sbb
xor
in
cmp
xchg
dec
(bad)
outs
out
sub
jbe
idiv
or
stos
imul
mov
je
stos
fcomp
xor
mov
(bad)
pop
enter
ja
js
jg
push
out
push
and
mov
test
and
mov
dec
pop
fst
cmc
mov
scas
sub
and
xor
mov
out
stos
js
jns
fisttp
mov
push
sbb
shr
and
popf
test
and
cmp
adc
xchg
push
xchg
dec
bt
fst
mov
imul
ret
cmp
mov
jae
dec
(bad)
lea
mov
push
and
inc
dec
ret
int
test
and
je
jmp
cmp
mov
jo
repnz
(bad)
push
mov
aaa
sbb
push
push
mov
and
jae
fwait
in
inc
sub
jno
jl
scas
retf
clc
jne
sub
lock
stos
loop
xor
jnp
jmp
push
mov
add
aas
fild
stc
mov
mov
sti
aam
mov
dec
pop
adc
sbb
cmps
loope
fdiv
or
in
aaa
div
sub
jbe
and
xor
repz
(bad)
dec
hlt
hlt
lahf
pop
mov
sub
cmps
scas
movs
dec
imul
add
jns
jp
jecxz
push
test
add
shl
in
fidiv
loopne
adc
popf
not
sbb
ins
adc
ret
int3
adc
pop
sti
cmp
push
in
jb
je
jmp
mov
xor
fld
adc
pusha
xchg
jnp
xchg
dec
outs
dec
pop
fsubr
push
pop
mov
mov
adc
xor
mov
jbe
mov
adc
ret
movs
and
adc
mov
jecxz
fisub
push
ja
les
test
mov
mov
(bad)
mov
pushf
sub
mov
and
cli
into
fadd
jge
push
jge
and
loopne
sahf
idiv
std
dec
fnsave
xor
pop
enter
pushf
cmps
sbb
push
jmp
into
mov
test
mov
sub
mov
leave
leave
ins
adc
fidivr
and
int
and
push
or
rol
mov
and
lock
and
sbb
mov
(bad)
jb
mov
and
out
pop
in
cmp
add
dec
and
or
dec
outs
sub
jmp
shr
mov
les
cmp
sbb
je
mov
xor
mov
je
les
sub
or
jns
cmps
sbb
outs
fs
push
xchg
repz
mov
jle
gs
fadd
pushf
mov
or
mov
dec
rol
xor
sub
imul
es
into
adc
in
sar
aam
mov
and
into
pop
xor
fld
sbb
fwait
and
mov
das
stos
or
cld
hlt
pop
jg
sti
jp
jp
xchg
js
das
adc
xchg
jns
jge
or
and
or
mov
or
scas
or
iret
aaa
rcl
jno
fdivr
rcr
mov
cmp
shr
fdiv
xor
sub
add
fwait
test
cmp
xchg
push
cdq
out
mov
sahf
les
xchg
jle
mov
ret
bound
pusha
adc
mov
test
sbb
dec
xor
(bad)
hlt
cdq
std
nop
inc
sahf
xor
mov
sahf
outs
xchg
jl
sbb
lea
and
adc
mov
icebp
clc
jae
js
fwait
in
cmp
ins
and
leave
test
sub
or
aas
out
lea
push
(bad)
enter
ins
pop
jne
rcl
sub
xor
fild
(bad)
adc
ror
and
lods
cmps
cmps
and
pop
aas
icebp
ins
mov
mov
sbb
mov
inc
pop
imul
(bad)
mov
fs
outs
jb
outs
inc
cmps
jmp
mov
mov
rol
ins
push
mov
pop
test
mov
or
inc
and
mov
sub
pusha
xchg
sbb
jno
inc
loope
jp
fistp
cli
jo
fadd
ja
or
mov
pop
mov
jnp
icebp
mov
mov
sbb
call
and
lock
add
call
or
cwde
cs
sbb
sub
jl
xchg
rcr
int
fwait
out
or
jne
pop
pop
loope
cs
inc
xchg
dec
aaa
repz
cmp
pop
add
not
out
in
ror
cmp
jmp
mov
test
mov
test
lds
sbb
or
mov
ds
repz
out
fmul
ret
test
stos
pop
mov
(bad)
das
int3
sar
add
cli
call
loop
and
adc
jne
jnp
cmp
stos
mov
inc
mov
in
ds
pushw
xor
jns
sahf
addr16
push
push
call
mov
movs
pushf
jae
push
jbe
ret
repz
sub
sbb
mov
jae
mov
clc
loopne
push
mov
or
mov
xor
hlt
add
xchg
inc
push
ins
inc
ret
into
iret
stc
xchg
add
pop
jno
sbb
dec
test
push
or
mov
lea
push
enter
mov
pop
jmp
arpl
cdq
cmc
jae
mov
movs
aaa
cli
xchg
jb
dec
shr
aas
or
mov
inc
ds
mov
xchg
jg
shr
loop
(bad)
jbe
jmp
sub
sbb
pushf
mov
mov
pop
jo
push
(bad)
jl
or
dec
ins
jb
cld
adc
repz
or
sbb
xor
xchg
popw
dec
dec
and
mov
ins
(bad)
xchg
pop
jmp
idiv
sub
sbb
pop
add
mov
movs
pop
rol
cld
jl
jmp
pop
and
(bad)
(bad)
cmp
cmps
and
sub
and
ret
adc
push
mov
xchg
sub
push
mov
icebp
loope
std
jg
leave
pop
sub
cmp
adc
adc
adc
lahf
push
movs
sar
push
ror
and
pop
aam
mov
out
sbb
xor
std
rol
pop
jge
loopne
sub
fs
and
xchg
dec
aas
jne
mov
dec
pop
mov
pop
(bad)
icebp
popa
sti
sti
push
pop
cs
pop
add
jnp
movs
clc
lods
add
stos
mov
rcr
cmps
enter
cmp
sbb
popf
xchg
pop
fnstsw
pop
mov
mov
xor
jbe
adc
push
mov
std
push
push
imul
jmp
ret
enter
add
inc
mov
jle
cmc
push
fild
xchg
push
inc
add
adc
push
rcr
mov
aaa
test
loopne
inc
dec
push
xlat
and
and
jae
xchg
into
or
mov
cs
jne
es
mov
add
mov
dec
mov
and
mov
loope
cmps
shl
dec
adc
sub
xlat
sbb
loopne
xor
fld
clc
jb
stos
add
cmp
jo
lea
aad
xor
adc
rcl
lds
hlt
mov
ins
arpl
inc
cmc
neg
enter
mov
shl
popa
add
iret
mov
stos
adc
inc
std
repz
test
xchg
sahf
das
lods
arpl
sahf
inc
pop
addr16
call
ror
sub
jp
loopne
outs
retf
(bad)
mov
dec
sar
fbld
mov
cmp
jg
bound
bound
xchg
inc
imul
or
fdiv
pop
jp
(bad)
inc
das
int
out
outs
xchg
or
(bad)
shl
in
lods
fmul
pop
mov
mov
cmps
addr16
shl
jb
inc
sbb
pop
iret
cmp
leave
pop
not
adc
xchg
loope
inc
mov
and
push
mov
mov
mov
inc
movs
sbb
mov
sbb
pop
cmc
or
adc
and
test
push
aam
js
shl
test
and
jp
sub
inc
or
and
les
push
jnp
mov
mov
bound
cmp
mov
pop
inc
mov
test
sub
push
adc
sahf
mov
xor
xchg
test
inc
jo
(bad)
dec
add
pop
push
ins
or
repz
rol
jl
push
jns
icebp
mov
jne
das
out
push
lods
pop
dec
dec
inc
mov
hlt
jae
mov
pop
pop
dec
sar
dec
jns
test
scas
cdq
jle
scas
mov
es
inc
mov
mov
xor
sbb
call
je
mov
mov
mov
mov
cmp
mov
adc
or
outs
ds
je
mov
jns
dec
gs
test
xchg
jns
pusha
out
je
push
sub
pop
pop
test
sub
mov
inc
sbb
jg
(bad)
ds
cmp
out
test
dec
shl
jmp
push
shl
shl
rcr
xor
add
adc
push
rol
setge
xchg
adc
inc
sar
jae
repz
adc
or
cmp
xchg
cwde
push
adc
jns
int3
xor
jp
xchg
sahf
in
add
lods
push
mov
(bad)
mov
pusha
leave
test
shl
xchg
and
mov
sar
jecxz
out
mov
sar
and
mov
stos
gs
cmps
in
in
sbb
stos
rcr
dec
add
cmp
cmp
xor
retf
or
(bad)
add
leave
inc
mov
movs
pop
fwait
jns
pop
shl
or
sar
popf
cdq
adc
push
pusha
popa
adc
mov
pop
bound
popa
xchg
sti
and
movs
or
xor
sbb
mov
pop
aad
mov
xor
retf
or
sub
and
and
sub
pop
rol
sbb
push
hlt
mov
mov
inc
aam
lock
fs
cdq
in
popa
gs
stos
in
stos
and
sub
add
shl
cmp
(bad)
cmp
push
dec
xor
and
fcmovne
and
lods
inc
pop
dec
pop
test
cmp
cmp
in
push
ret
mov
push
mov
movs
shl
jno
xor
hlt
mov
push
jo
push
mov
(bad)
scas
dec
ret
pop
stos
or
sti
retf
repz
fs
stos
xor
in
jnp
inc
in
xor
repz
dec
jge
jmp
and
fidivr
out
iret
cmp
dec
aas
dec
imul
mov
out
push
dec
cmp
stos
xchg
(bad)
push
aas
loopne
retf
mov
xor
and
pop
(bad)
jg
je
mov
jle
inc
mov
cli
or
aas
test
xor
cli
push
and
mov
or
jl
ror
es
push
cmp
pop
dec
add
dec
or
sub
ror
push
mov
adc
mov
xchg
mov
rcr
jmp
add
jno
std
add
jg
out
retf
or
shl
dec
cmp
mov
or
xchg
sub
ficomp
sub
imul
and
mov
fidivr
inc
cdq
(bad)
div
pop
aam
test
out
jae
addr16
mov
out
lds
inc
div
fcom
cld
sbb
mov
or
cmp
(bad)
test
jp
sub
xor
loop
daa
ret
enter
ss
iret
push
cs
inc
arpl
aas
pushf
add
jno
out
jg
fwait
aas
fcmovu
xchg
push
popa
out
sbb
mov
inc
in
loopne
ja
data16
push
into
vphsubwd
dec
pop
ret
and
add
cli
jbe
dec
jno
outs
xor
(bad)
xor
push
stos
mov
sub
fsub
aas
push
pop
fidivr
mov
mov
add
scas
lods
(bad)
jge
std
or
nop
clc
jl
sub
sahf
xchg
inc
cdq
enter
idiv
out
adc
leave
cmp
mov
add
mov
pop
lds
fwait
add
stos
out
fwait
call
xlat
mov
icebp
movs
pop
or
jg
stos
stos
push
jb
inc
test
xor
jp
push
pop
mov
(bad)
fnop
and
jge
mov
push
(bad)
dec
cld
mov
pop
sahf
mov
in
mov
sahf
retf
pop
dec
lock
leave
and
fcom
sar
and
mov
aas
sbb
inc
dec
add
cmps
or
adc
shr
(bad)
pop
retf
cdq
das
cmps
ins
into
and
and
or
push
cmp
mov
aad
and
add
int
xor
or
pop
(bad)
mov
xlat
out
imul
sub
jae
(bad)
mov
les
imul
cmp
mov
ss
add
jb
push
mov
adc
test
sub
or
jo
idiv
sub
scas
pop
adc
push
mov
push
pushf
cmp
jae
sub
es
dec
sbb
mov
mov
not
outs
sub
(bad)
push
js
add
push
dec
loopne
int3
and
mov
retf
addr16
aaa
sbb
(bad)
adc
iret
retf
pop
aad
push
push
pop
loope
pop
(bad)
jg
jg
fidiv
or
jno
xchg
add
jb
jecxz
jp
fsub
inc
in
jne
ds
adc
sub
xlat
or
inc
in
sub
xchg
xchg
sub
(bad)
mov
scas
cwde
inc
push
mov
push
aas
pop
je
mov
ins
and
or
mov
(bad)
jnp
dec
sbb
push
xlat
jno
arpl
(bad)
outs
push
pushf
jg
inc
lods
imul
pushf
in
jmp
ins
xchg
std
mov
pop
or
push
(bad)
in
aam
(bad)
jb
mov
pop
jecxz
into
fimul
and
sub
cdq
outs
movs
xor
test
retf
in
push
xchg
popa
push
push
adc
xor
fidiv
cdq
into
sar
ret
dec
int
xchg
and
(bad)
lods
imul
ret
mov
mov
sub
push
inc
ret
cdq
sbb
les
mov
es
call
inc
xor
inc
data16
mov
outs
mov
push
retf
pusha
pop
or
mov
mov
pop
mov
in
cmp
call
in
mov
jb
imul
popf
std
push
sub
sar
call
nop
push
movs
xor
call
jl
popf
mov
movs
dec
daa
push
mov
push
(bad)
retf
out
mov
dec
popf
icebp
lahf
stos
into
nop
outs
cmps
mov
jo
(bad)
cwde
lea
jle
xor
and
ret
jbe
fisub
sar
pop
(bad)
and
jge
stos
inc
jnp
push
push
in
fs
ror
and
repnz
xchg
xchg
gs
mov
push
gs
xchg
push
stos
cmp
pop
test
in
repz
xchg
adc
cmp
xchg
pop
xor
cmp
sub
pushf
clc
fldenv
push
call
repz
dec
inc
lea
retf
add
les
bnd
dec
int3
adc
push
sbb
in
iret
push
je
cmp
jp
mov
or
mov
jg
popf
sub
mov
je
pop
xchg
(bad)
mov
mov
and
outs
cmp
and
push
scas
les
clc
pop
std
clc
push
mov
gs
push
mov
jae
xor
je
imul
out
adc
int
xchg
loopne
add
popf
adc
mov
aas
mov
mov
mov
in
into
loop
je
inc
push
leave
xchg
sti
pop
aad
popa
out
loop
mov
cs
das
dec
adc
out
out
jge
jle
loop
movs
jp
push
or
lods
(bad)
sbb
or
or
mov
repnz
test
sbb
cmp
ins
jnp
cmp
sbb
mov
xor
adc
shr
cmp
xchg
out
jnp
add
fisub
mov
pop
out
data16
mov
xchg
mov
xchg
dec
lock
popa
cmps
imul
pop
inc
adc
push
dec
psllw
push
inc
fdivr
neg
push
cmp
add
jb
jp
fwait
push
or
adc
cmp
cmp
cmp
push
xor
dec
sub
or
rcl
sub
pop
daa
rcr
jne
(bad)
mov
mov
add
sub
(bad)
rol
pop
loop
jno
outs
pop
cmp
rcr
je
sub
pushf
sahf
aas
clc
cmp
mov
mov
popf
hlt
and
mov
in
mov
jmp
push
fwait
xor
jp
nop
das
(bad)
rcr
in
les
cmp
or
fld
jmp
(bad)
pop
retf
arpl
rcl
ror
inc
mov
jge
mov
pop
add
lea
cmp
addr16
add
pop
adc
inc
inc
sbb
aad
xor
jge
dec
cli
addr16
sub
inc
add
inc
jge
cli
or
(bad)
fistp
movs
dec
lds
mov
int3
movs
push
bound
push
mov
or
fs
mov
xor
stos
dec
adc
and
inc
movs
call
jae
xchg
les
shr
jne
push
mov
cwde
fnstcw
inc
jge
mov
shl
inc
movs
mov
lods
xchg
cmp
push
icebp
adc
push
mov
test
xchg
fucomip
sbb
xor
cmp
jl
cld
mov
mov
push
ret
pop
xchg
xor
push
std
ret
pop
stos
jp
stc
and
and
pop
mov
sub
paddq
scas
popa
jnp
(bad)
loopne
cmc
shl
cmps
lea
mov
or
jns
jae
mov
(bad)
lock
outs
in
mov
ds
mov
ret
mov
or
cmp
dec
pusha
cmp
or
add
in
in
mov
push
imul
imul
mov
scas
dec
mov
cld
mov
mov
or
mov
mov
cmc
and
loope
or
sbb
cmp
pop
xchg
cmp
hlt
sbb
fs
outs
ins
jge
inc
xchg
add
or
jg
xor
js
in
cmp
in
xlat
aas
xor
sahf
cmp
stc
jge
mov
or
inc
pop
nop
popf
sahf
nop
push
adc
loop
mov
add
vshufps
jg
std
mov
mov
movs
push
ret
and
cs
add
mov
xchg
dec
xchg
mov
jo
cmps
or
xchg
dec
jle
jnp
into
pop
test
scas
hlt
dec
or
push
sub
(bad)
aam
sti
sbb
fld
das
mov
xchg
outs
int
(bad)
rol
scas
(bad)
nop
adc
push
sub
fdiv
sub
sub
iret
add
mov
rep
mov
sub
inc
call
fadd
bound
(bad)
adc
test
lods
or
js
(bad)
inc
xor
lds
stc
pop
imul
mov
stc
and
xchg
jl
lods
adc
jecxz
pop
inc
cmp
stc
pop
jb
mov
cmp
push
xor
pop
ficomp
out
push
int
sub
mov
cdq
mov
lods
ficomp
sbb
iret
cmc
fldenv
mov
or
mov
push
ja
push
cs
hlt
mov
pop
push
hlt
mov
or
je
ficom
or
pop
fwait
inc
jle
xor
mov
mov
pop
popf
pop
sbb
sub
fistp
mov
mov
mov
jns
scas
outs
mov
shl
or
pop
or
xchg
mov
sti
arpl
xor
or
loopne
xchg
xor
mov
cmp
cmc
repz
lea
imul
or
out
fst
ret
cs
cmps
push
rcl
adc
rol
adc
inc
xlat
loope
add
xor
mov
cld
ror
(bad)
sbb
cli
xor
fcmovbe
in
ss
xor
scas
es
cmp
ret
outs
xor
fistp
lahf
cmps
inc
push
adc
xor
hlt
in
in
bound
(bad)
clc
mov
repnz
out
cld
pop
add
cmps
pop
push
std
sbb
int
xchg
push
retf
call
out
(bad)
js
pop
push
push
pushf
ficom
pop
sti
dec
add
push
lock
mov
mov
inc
push
pop
test
pop
xor
ror
mov
stos
jp
mov
pop
cmps
cmps
cli
jno
sahf
fs
and
in
inc
(bad)
xor
mov
mov
pushf
imul
dec
aaa
scas
xor
das
jns
jmp
mov
push
movs
repz
mov
stos
fnstenv
inc
pop
mov
aam
jle
mov
imul
inc
fmul
nop
or
push
xlat
jmp
xchg
movs
mov
cmp
lods
aas
sbb
retf
aad
mov
sub
jae
test
or
(bad)
rol
clc
adc
or
not
aaa
mov
xchg
fucomip
repnz
mul
in
fild
aam
xchg
js
(bad)
retf
rol
in
xor
push
or
lahf
mov
aam
sbb
js
fs
cmps
push
stos
pushf
xchg
sub
loope
ja
add
jmp
add
aad
enter
js
jb
ret
loop
cwde
repnz
xor
jo
retf
ins
sar
dec
push
push
sub
sub
call
stos
jae
pushf
cli
lods
or
call
and
sub
mov
les
loopne
mov
dec
push
sub
mov
fimul
lods
mov
push
cmp
mov
push
or
push
pop
cwde
shl
dec
inc
jp
fsub
mov
fisttp
and
sbb
mov
frstor
popa
xor
ds
push
stos
and
xchg
push
cs
fisttp
mov
and
(bad)
xchg
(bad)
fnsave
mov
repnz
dec
mov
fnstenv
fs
mov
in
mov
push
jb
scas
add
or
dec
add
ja
fist
call
or
sbb
push
cwde
int
mov
adc
jp
xor
jo
push
daa
jp
sub
pop
mov
mov
enter
test
cmp
fsub
xchg
sti
fcmovnu
imul
fwait
mov
pop
stos
mov
retf
pop
mov
and
pop
pop
aam
push
(bad)
sub
ds
mov
ds
sbb
dec
cmp
enter
pop
sub
inc
pop
ret
pop
jl
xor
and
nop
mov
scas
inc
std
cs
aaa
or
ficom
(bad)
fs
mov
push
jmp
push
mov
fwait
out
add
lahf
inc
mov
loop
push
aam
xchg
mov
and
mov
shl
stos
retf
call
mov
rol
mov
(bad)
lods
push
std
in
dec
push
pop
adc
push
movs
mov
fucomi
inc
cld
mov
fistp
out
or
or
sbb
dec
jmp
sbb
push
cmp
cmp
sub
movs
repnz
xchg
nop
stos
sub
inc
dec
cmp
mov
test
fwait
aas
cmp
mov
ror
retf
sub
hlt
and
out
lock
jle
cmp
ret
push
pop
dec
add
pop
push
pop
rcl
ins
and
mov
bound
mov
into
dec
shr
dec
out
and
addr16
pop
cmp
add
sub
dec
dec
and
je
aad
lods
in
cmp
call
sahf
jb
mov
lods
sti
out
call
ds
scas
jge
inc
imul
loop
adc
inc
push
cld
adc
mov
popa
mov
icebp
mov
lahf
mov
jno
(bad)
stos
loope
mov
mov
pop
int
lods
fidivr
shl
aam
push
into
xor
stos
repz
mov
or
jns
imul
fwait
jge
stos
xor
mov
mov
arpl
ins
fadd
(bad)
jb
push
mov
jge
(bad)
leave
repz
dec
xchg
test
out
mov
in
lahf
jp
lea
sbb
pop
daa
mov
mov
shr
xchg
and
mov
lds
xor
sub
cmp
retf
rcl
jbe
mov
or
adc
adc
mov
ficom
(bad)
cmp
ja
call
ss
fcomp
adc
cmps
jns
mov
mov
push
mov
test
enter
or
out
outs
call
cwde
cs
jecxz
jo
inc
call
sbb
dec
or
imul
sbb
mov
sub
add
dec
push
add
aas
retf
aam
repz
sub
sub
pushf
nop
dec
bound
cmps
cmps
test
push
xchg
sbb
fst
mov
xchg
xor
cmc
int3
leave
mov
cmp
jmp
(bad)
lods
aam
mov
ja
or
xor
pushf
in
leave
loopne
and
push
add
retf
xchg
addr16
(bad)
pusha
ret
aaa
adc
add
and
popa
rcl
shl
test
dec
inc
sbb
outs
cwde
pop
or
adc
inc
je
add
mov
fwait
aad
mov
in
movs
outs
ds
xchg
pop
push
or
mov
adc
jecxz
xchg
in
lods
and
rcr
imul
cmps
sbb
mov
inc
aam
pop
test
or
jns
xor
jnp
test
ins
inc
mov
test
mov
rcl
ret
cdq
inc
scas
or
lods
cdq
jmp
adc
or
pop
(bad)
js
pop
fcmovnbe
daa
loopne
loop
mov
loopne
outs
mov
pop
xchg
sub
mov
daa
(bad)
push
inc
mov
adc
loop
icebp
or
rcr
rcl
push
cmc
(bad)
mov
loope
inc
push
or
sub
push
int
in
cli
pop
jne
and
and
inc
dec
mov
loope
in
mov
inc
jb
fs
jecxz
jmp
jo
dec
cmp
xlat
mov
fcomi
aaa
sbb
loop
jno
xchg
out
rcr
dec
pop
cmp
retf
mov
inc
fld
int3
in
pop
fwait
push
int
mov
add
jb
pop
retf
imul
into
out
adc
jo
or
dec
gs
cdq
and
ret
ret
call
dec
cwde
mov
mov
push
sbb
out
cs
sub
mov
ret
out
out
mov
mov
fwait
in
pop
xchg
and
scas
inc
int3
xor
push
mov
dec
dec
lods
sub
xlat
sub
jp
dec
and
imul
retf
das
call
xchg
fisttp
jge
leave
push
mov
and
sar
loop
bt
push
mov
jbe
add
ins
mov
jne
sbb
sbb
cmp
out
pop
idiv
xchg
imul
es
jp
dec
data16
push
adc
cmp
mov
xchg
cmp
pop
sub
fcomi
cmp
add
mov
cmps
dec
ret
or
mov
jne
mov
rcl
movs
fwait
mov
cmp
jae
jecxz
pop
inc
fst
fst
retf
mov
pop
sbb
outs
and
call
lock
cmp
in
ds
xchg
lods
mov
mov
clc
adc
jmp
jne
imul
jb
je
add
jp
adc
cli
jo
push
and
fadd
push
inc
xor
jb
or
cmps
or
int
mov
pop
adc
stc
into
mov
sti
fcomp
pop
out
push
sub
out
or
retf
mov
icebp
dec
(bad)
pop
das
out
adc
clc
mov
jmp
inc
leave
dec
fst
stos
inc
popf
mov
dec
fisubr
adc
add
dec
outs
pop
fadd
sbb
inc
jle
mov
test
xchg
dec
mov
or
(bad)
dec
push
pop
fiadd
xor
jle
or
shl
lea
leave
sbb
je
xor
mov
mov
dec
int
mov
xlat
xchg
out
adc
aam
loop
call
rcl
xchg
mov
fistp
scas
dec
(bad)
popf
sbb
pop
sbb
push
(bad)
dec
cwde
arpl
hlt
ret
cld
sub
pusha
xchg
cmp
mov
mov
push
out
adc
fild
jle
add
xchg
xchg
loopne
jmp
std
mov
push
cli
mov
sub
cmp
xor
sub
sub
sbb
xchg
xor
or
das
push
push
(bad)
fist
push
mov
lea
mov
bound
aaa
int
and
loopne
xchg
adc
lea
mov
in
mov
ds
xchg
and
addr16
jns
adc
int
fidivr
push
jae
fs
mov
fisubr
rol
in
sar
push
jbe
lods
or
cmp
pop
popa
pop
cwde
inc
mov
popf
imul
lods
mov
fidivr
push
sub
es
call
mov
push
ret
cmp
xchg
popf
mov
jns
fcom
xchg
mov
fidivr
xchg
add
call
ret
push
or
mov
jbe
or
xor
and
and
sbb
xchg
pop
mov
pop
in
(bad)
sub
xchg
in
jl
sar
fwait
in
popa
retf
(bad)
mov
mov
jnp
pop
inc
(bad)
dec
cmp
xchg
push
dec
fdiv
and
in
popf
rcr
jo
sbb
test
jbe
shl
ret
cmp
je
int
sti
xchg
mov
xlat
jno
mov
(bad)
repz
idiv
jns
cmp
mov
mov
fist
jne
pop
jae
jge
add
lods
sub
sub
scas
mov
jae
xor
ss
out
neg
sbb
dec
xchg
or
xor
xchg
fldenv
dec
sub
push
scas
fisttp
mov
ja
call
pop
lods
sub
mov
adc
ret
pop
push
(bad)
out
in
clc
dec
jne
lods
sub
push
out
push
push
sbb
add
pop
mov
pushf
fdivr
pop
es
dec
iret
pop
addr16
and
cwde
mov
xchg
jp
movs
or
scas
jne
test
(bad)
repnz
ret
mov
xor
mov
pop
or
inc
cld
stos
dec
inc
outs
loop
pushf
gs
shrd
ficom
cmp
mov
(bad)
pop
sub
mov
push
sbb
sbb
sub
les
mov
jne
cmp
retf
int3
add
in
stos
cmp
iret
test
add
cdq
or
aaa
cmp
enter
loopne
mov
pop
lds
pop
xchg
xor
and
push
ret
push
pusha
(bad)
cmp
(bad)
retf
out
das
xchg
pop
jp
outs
cwde
mov
and
jbe
add
xor
mov
lods
inc
push
sti
ret
fiadd
mov
xor
add
xchg
lods
xchg
jo
(bad)
xor
adc
enter
mov
pop
ja
inc
es
xchg
and
mov
int3
das
daa
mov
xor
pop
(bad)
daa
cmp
mov
or
iret
push
and
aas
jno
nop
xchg
js
das
dec
bound
in
daa
stos
rcl
push
enter
cmp
pop
rol
pushf
enter
fsubp
mov
adc
mov
jp
lods
sbb
sbb
mov
add
retf
rep
dec
ja
shr
imul
mov
aas
iret
bound
pop
xchg
sbb
call
and
mov
add
inc
pop
dec
mov
sub
dec
xor
jne
aam
jb
dec
pop
cmp
jns
sbb
or
cwde
inc
pop
rol
fdiv
cs
scas
jge
popa
adc
nop
xchg
iret
(bad)
repnz
fs
or
fisubr
pop
push
out
cmc
test
test
and
fbld
cmp
xor
xchg
ds
push
mov
jmp
bound
dec
push
data16
mov
shr
outs
aas
add
fnstenv
loop
cmps
gs
add
push
mov
ja
shr
mov
fs
jmp
jnp
inc
jge
mov
mov
fcmovb
mov
ret
(bad)
cmp
aam
cdq
add
mov
xchg
xchg
push
mov
gs
inc
xchg
mov
das
sbb
mov
or
push
xor
sub
ss
and
fst
addr16
lock
push
iret
movs
mov
jge
sbb
pop
inc
sub
or
or
movs
(bad)
pop
nop
shr
repnz
fld
leave
push
mov
icebp
ror
or
retf
scas
or
loopne
bound
cmp
aam
mov
mov
push
jnp
imul
mov
pop
cmp
test
cli
(bad)
dec
sbb
repnz
jae
ficom
dec
jl
mov
and
jns
pop
pop
sbb
xor
aaa
ss
adc
mov
push
outs
rcr
jle
inc
mov
out
shl
test
jl
cmp
sbb
repnz
sti
push
fld
into
loope
daa
push
pop
shl
loope
loope
fisub
jle
cmps
sbb
inc
cmp
sub
xor
retf
pop
and
stos
loopne
stos
sub
ror
retf
mov
stos
lds
mov
cmp
xchg
push
sti
jne
push
addr16
sub
push
push
rol
out
mov
sbb
icebp
test
stc
xlat
add
inc
and
nop
lahf
mov
mov
aad
inc
or
dec
nop
adc
sub
dec
std
inc
shr
push
xchg
rcl
pop
inc
xchg
add
mov
inc
in
icebp
mov
push
outs
fcomp
pusha
mov
push
inc
push
and
pop
popa
ror
add
cli
out
fistp
inc
xchg
mov
ins
mov
fidiv
jnp
hlt
push
sbb
repz
cmp
sti
add
repnz
pop
jmp
fisub
xchg
xchg
div
add
stc
adc
add
adc
sbb
fcomp
xor
ret
rol
outs
dec
(bad)
cmp
push
mov
mov
sti
sbb
outs
test
lods
mov
cmp
movs
je
or
jmp
sahf
lea
in
pusha
jge
lea
mov
dec
je
inc
push
inc
ror
or
test
push
dec
or
push
add
sahf
inc
gs
dec
and
push
cmc
push
shr
lds
cdq
lea
and
add
push
add
inc
push
lock
or
xchg
fwait
loope
mov
sar
jno
push
div
adc
into
mov
shl
fisttp
push
add
mov
mov
pop
pop
push
dec
addr16
push
xchg
pop
jns
mov
adc
stc
cmps
push
jmp
xor
loop
pusha
xchg
shl
into
out
stc
inc
jge
or
out
jge
pop
popf
pop
and
sbb
call
sub
(bad)
out
aas
call
sbb
mov
ret
mul
sbb
das
repnz
hlt
adc
sahf
ins
xor
mov
(bad)
int
neg
call
leave
jmp
ror
hlt
pushf
icebp
leave
hlt
mov
lock
mov
ins
dec
cmp
aam
(bad)
iret
je
popa
jge
jne
sbb
enter
out
ss
sbb
rcl
neg
push
aad
outs
pushf
fidiv
icebp
jl
test
xchg
addr16
add
push
xlat
adc
mov
retf
cmp
push
or
out
pop
inc
add
or
fwait
stos
and
mov
add
movs
xchg
std
std
(bad)
pop
fisubr
retf
fs
shr
xchg
outs
loopne
ins
mov
test
mov
das
mov
xchg
outs
das
and
test
pop
enter
and
xor
mov
out
push
jle
movs
mov
lea
mov
repz
pop
imul
jecxz
jl
aad
les
fdivrp
and
into
mov
(bad)
xlat
sub
repz
lods
out
(bad)
repnz
cs
sub
pop
adc
push
ret
inc
bound
add
shl
jge
xchg
mov
ja
aaa
imul
inc
xor
and
aaa
push
test
shr
mov
in
std
dec
and
ret
xlat
sahf
mov
pop
pusha
ss
sbb
mov
cmp
jmp
std
mov
out
xchg
cdq
jmp
inc
lds
ret
(bad)
push
push
ret
cs
mov
inc
xchg
or
xor
std
sub
mov
fstp
pop
mov
sub
ror
out
xchg
inc
pop
cmp
scas
scas
neg
jbe
std
inc
out
ror
xor
cs
xchg
retf
jbe
or
inc
(bad)
addr16
add
mov
stos
fild
arpl
pushf
hlt
dec
test
push
mov
mov
sub
aad
or
jb
and
outs
push
lds
fxch
jmp
xlat
retf
out
loope
stos
in
outs
test
mov
mov
clc
(bad)
dec
jg
cmc
pop
mov
in
fadd
test
mov
sbb
sub
repz
imul
and
adc
inc
repz
dec
inc
lods
dec
test
sbb
xchg
popa
jp
in
adc
and
mov
pop
pop
test
rcl
test
pop
stos
sub
mov
or
adc
icebp
shr
mov
dec
cwde
and
(bad)
xlat
xchg
out
shl
imul
or
div
dec
aad
test
aad
cwde
aad
jg
inc
lahf
mov
xor
pushf
jg
popa
(bad)
jp
push
sub
test
lahf
jo
ss
adc
cmp
bound
push
jbe
movs
add
jg
das
sbb
pop
mov
mov
pop
xchg
dec
dec
xor
jmp
movs
xchg
test
cmp
push
lods
pop
push
lea
push
jmp
adc
cmp
fst
fst
nop
mov
push
inc
fist
dec
pop
stos
xchg
das
ja
pop
sub
in
cmp
hlt
xchg
data16
bound
pop
pusha
mov
imul
jne
leave
xor
ins
mov
fiadd
mov
pop
mov
pop
pop
inc
aad
dec
pop
in
shl
dec
aad
and
cmps
or
adc
inc
push
jb
push
clc
lock
es
popf
dec
pop
mov
jecxz
cs
fisttp
mov
ins
jl
sahf
call
cmp
pop
out
sub
xchg
fnsave
pushw
aaa
stos
cmps
jne
pop
or
dec
(bad)
cwde
das
sub
adc
fld
sub
xchg
dec
loopne
aam
sbb
dec
stos
adc
sbb
sbb
pop
aad
push
push
jns
test
or
inc
mov
in
icebp
cld
iret
ret
(bad)
xchg
sub
bound
and
cmps
sub
idiv
out
ret
dec
jne
fcom
or
cdq
std
(bad)
es
out
xchg
bnd
inc
mov
cmp
lods
dec
mov
es
idiv
(bad)
and
mov
mov
nop
mov
push
and
pop
cmp
mov
adc
sbb
shrd
push
gs
ss
sbb
test
mov
loope
mov
jno
xchg
jmp
pop
les
nop
mov
adc
fxch
pop
xchg
in
ret
cwde
sub
inc
lea
jg
mov
mov
pop
jmp
push
imul
xor
in
mov
pushf
ja
cwde
arpl
cmp
arpl
leave
shl
loope
enter
inc
arpl
mov
push
sub
ins
stc
push
ret
xchg
mov
lods
or
icebp
sub
pop
outs
inc
stos
mov
hlt
iret
je
and
add
daa
sub
jne
or
sub
aaa
mov
sbb
jge
xor
dec
enter
imul
jl
xor
inc
push
fst
pop
and
in
ret
adc
jbe
shl
xor
iret
push
popf
sbb
mov
mov
imul
lods
das
xor
dec
mov
test
fist
stos
push
add
out
rcr
pop
sbb
fisttp
jmp
cmp
pop
jp
into
and
push
sti
jmp
clc
adc
push
in
mov
sar
ret
bound
sbb
xor
xchg
and
pop
or
sub
imul
and
inc
popa
retf
xchg
call
sub
inc
addr16
in
aaa
jmp
xlat
jns
sbb
cs
lods
xor
adc
cdq
xchg
push
mov
adc
add
add
mov
scas
std
loope
add
es
pop
and
ds
and
mov
mov
and
and
scas
jb
adc
(bad)
inc
es
mov
movs
rcl
rol
mov
hlt
jno
fdiv
stos
stos
stos
loope
xor
call
push
and
xchg
xor
sub
xchg
dec
sti
cmp
xchg
mov
mov
aaa
or
shr
sub
push
aam
or
cmp
cmc
loopne
push
sub
sbb
jns
jp
std
inc
cmps
mov
sub
mov
mov
mov
pop
loop
std
adc
outs
repnz
add
imul
arpl
pop
out
jmp
inc
sbb
sub
cmp
aam
mov
fiadd
and
sub
cld
int
push
jno
mov
xchg
cld
fiadd
(bad)
ret
and
xchg
sub
fwait
or
jg
or
int
xor
and
xor
adc
shr
in
loop
xchg
or
addr16
pushf
pop
sub
cmc
add
jmp
mov
(bad)
mov
push
rcr
int
adc
inc
cmps
mov
xchg
arpl
sbb
and
mov
mov
cmps
icebp
in
outs
repnz
iret
mov
ins
or
cmp
aaa
inc
jecxz
sbb
scas
lock
inc
movs
fndisi(8087
jns
adc
jbe
inc
jl
mov
test
jnp
nop
dec
in
rcl
enter
into
into
arpl
jg
dec
aas
js
sbb
push
sub
retf
xchg
(bad)
sti
xor
ret
js
retf
out
fstp
(bad)
cmp
and
lods
cmp
push
jnp
pop
push
fcomp
xlat
push
xchg
outs
jecxz
xor
pop
xor
lods
movnti
shr
mov
(bad)
sti
jns
push
or
es
sub
add
or
outs
add
cmps
xlat
adc
bound
mov
call
or
loopne
(bad)
fwait
cmps
inc
mov
nop
push
mov
ins
call
mov
arpl
mov
xchg
cmp
fidiv
xchg
in
or
and
mov
mov
or
jl
cmc
push
xor
push
fnsave
adc
test
inc
adc
shl
and
jns
popa
jp
fld
hlt
into
fisubr
fwait
cmp
cdq
mov
fiadd
pop
lods
stos
mov
stc
jae
pop
inc
dec
popa
jge
repnz
movs
push
pop
xor
dec
imul
mov
jmp
cmp
jge
gs
push
mov
adc
rcl
push
push
fst
addr16
ins
test
call
inc
and
fdiv
adc
sbb
nop
inc
sbb
push
pop
pop
mov
mov
mov
mov
cmp
pusha
or
outs
cmp
xor
mov
das
pop
xlat
cld
stc
leave
cmp
sbb
ins
leave
jmp
call
sahf
pushf
or
fistp
xor
dec
or
daa
sbb
xchg
std
movs
add
xchg
bound
sub
out
shl
ds
out
(bad)
cmp
add
mov
imul
test
or
adc
add
push
mov
movs
inc
js
xchg
int
cdq
mov
cmp
cmp
inc
pop
pop
xchg
cmps
and
std
and
out
pop
jno
mov
outs
and
mov
aad
cmp
cmp
xor
jmp
fcmovnbe
push
push
int3
push
sub
enter
adc
jne
mov
clc
sti
iret
adc
or
es
adc
xor
or
sub
out
out
xor
add
xchg
(bad)
jns
aas
mov
xor
xchg
div
sbb
xchg
push
pusha
jle
dec
xor
mov
mov
lods
xchg
ja
div
and
fdivr
jo
cwde
mov
sub
pop
es
jp
dec
or
dec
inc
xor
fadd
inc
repnz
(bad)
int3
mov
rcr
mov
jno
(bad)
es
mov
aas
mov
(bad)
js
iret
cmp
xor
fbld
xor
pop
ss
inc
cdq
xor
xchg
jb
(bad)
adc
push
out
stc
push
and
and
jmp
add
sub
mov
addr16
add
add
add
mov
xchg
movs
lock
repz
or
shl
movs
stos
jmp
sbb
add
dec
xchg
ret
pusha
adc
sub
xor
sbb
push
shl
or
shl
xchg
outs
popf
stc
xchg
retf
retf
mov
xor
ret
movs
pop
sub
mov
mov
add
nop
cmp
sub
lds
dec
jns
std
stos
jnp
test
jp
pop
cmc
or
mov
sbb
cmp
xchg
and
sbb
add
xchg
push
mov
mov
hlt
fcmovnb
cdq
inc
ret
scas
or
xor
in
mov
inc
ss
es
adc
adc
cmp
sub
(bad)
xor
popa
adc
aas
cmp
pop
jnp
pushf
scas
loopne
out
aad
sub
mov
adc
aam
hlt
mov
mov
gs
xor
jl
xchg
push
sub
retf
cmp
cmp
xchg
into
xchg
shr
add
fadd
adc
xor
add
add
aam
mov
fldenv
cmp
pop
clc
dec
sbb
mov
dec
cld
(bad)
pop
ds
inc
xor
cmp
mov
cwde
inc
mov
aam
inc
mov
add
imul
or
sub
xchg
pusha
cmps
pop
ins
addr16
lods
adc
shr
or
xchg
push
imul
mov
adc
cld
movs
jne
and
cmps
add
mov
or
xchg
pop
pop
push
jns
ret
call
jmp
imul
dec
data16
pushf
hlt
jge
imul
lock
cmp
stos
cmp
or
mov
or
or
sbb
popf
ror
dec
gs
cmc
mov
lahf
out
dec
in
aaa
(bad)
push
sub
and
jl
jp
out
mov
rol
mov
add
jb
ret
xchg
dec
in
adc
push
or
push
dec
int3
sbb
adc
out
dec
mov
outs
jle
sub
mov
repnz
add
jmp
popf
inc
jbe
jp
and
cdq
fild
cmp
sbb
xchg
jb
mov
lahf
(bad)
test
dec
out
dec
aaa
push
push
not
adc
cmp
jmpw
sbb
ror
pop
and
iret
jp
lods
xlat
arpl
arpl
push
inc
pushf
jne
repz
jg
jb
xchg
fild
jns
in
dec
and
int3
sti
dec
std
fnsave
loop
pop
(bad)
mov
xor
lds
cmp
mov
pushf
jb
inc
cld
lea
sub
xlat
ja
cmps
add
mov
or
dec
dec
bound
hlt
sbb
push
fldcw
xchg
sbb
cmps
je
cmps
cs
add
das
fbstp
aam
(bad)
and
mov
js
sub
sub
inc
stos
aaa
popa
jnp
mov
movs
or
(bad)
mov
shr
in
jns
pop
pop
dec
pop
ja
pop
cmc
xor
xor
sahf
pop
dec
xlat
mov
add
cwde
popa
fnstenv
scas
mov
sbb
dec
mulps
mov
sbb
(bad)
add
mov
lahf
(bad)
adc
cs
inc
jg
cmp
pop
dec
xor
fild
jo
inc
sbb
xchg
xchg
inc
(bad)
iret
std
inc
adc
mov
lds
xor
lea
or
dec
cmp
xor
jo
repz
dec
adc
xor
pop
add
sbb
mov
je
(bad)
jne
push
jmp
div
in
loope
inc
pop
fs
or
pop
mov
add
or
inc
outs
xchg
mov
outs
shl
ins
mov
dec
shl
bound
ds
push
or
bndldx
retf
(bad)
pop
ffreep
pop
xor
retf
pusha
and
pop
(bad)
dec
not
cmp
mov
mov
(bad)
fwait
scas
push
sbb
and
fmul
adc
push
xor
and
fwait
retf
fwait
cmc
jl
fistp
push
dec
mov
sti
push
and
jle
clc
fild
cmp
inc
loopne
enter
cdq
outs
inc
aas
lds
movzx
add
gs
mov
xor
int3
icebp
inc
shl
repz
cmps
ds
repz
or
cmp
add
mov
pop
ret
(bad)
cld
test
lds
xchg
enter
inc
mov
int
xor
clc
(bad)
jge
lock
rol
stc
pop
sahf
and
in
dec
ret
jg
stos
sbb
inc
adc
mov
xchg
sub
mov
or
aas
add
pop
retf
out
icebp
test
jo
lds
mov
cmps
adc
mov
leave
or
mov
ret
ins
scas
jb
pop
jecxz
(bad)
mov
aad
push
xchg
dec
shr
dec
add
sbb
mov
shr
jno
jg
dec
pop
push
xchg
sbb
addr16
in
mov
stos
mov
iret
lods
dec
movs
popa
sbb
dec
scas
pop
lds
inc
xchg
push
aad
xor
popf
cmp
push
adc
and
add
test
cld
pop
adc
std
leave
js
in
shl
or
test
push
pop
ret
mov
sbb
cld
pop
push
das
sub
loopne
pop
push
jmp
mov
sahf
ficomp
loop
push
mov
imul
jne
jge
lock
mov
mov
dec
into
cmp
fnstcw
adc
and
sbb
scas
movs
inc
push
retf
xchg
ss
cmc
or
leave
jl
js
cmc
retf
sub
test
std
push
push
fsub
mov
stos
add
and
loopne
cld
repnz
fisub
add
inc
sub
cmp
movs
sahf
(bad)
in
add
push
fsub
xor
bt
adc
movs
push
pop
mov
jp
xor
fstp
jg
jmp
jmp
test
and
xchg
add
or
push
pop
stos
retf
mov
adc
push
xor
xor
in
mov
jns
mov
leave
out
pop
pusha
push
xchg
pusha
fwait
scas
inc
cmp
fst
pushf
mov
xor
outs
rcr
sbb
(bad)
lods
push
icebp
lods
hlt
scas
ret
mov
xor
jns
push
fist
xchg
adc
push
xchg
adc
xor
inc
dec
pop
inc
jb
div
rcr
cmps
adc
sub
fstp
mov
xor
jnp
sbb
fisttp
xor
xor
xchg
clc
clc
add
mov
ja
int
sub
xor
sbb
int3
or
mov
xchg
push
inc
or
or
neg
fwait
mov
aas
dec
dec
push
je
push
lock
stc
in
stos
xor
out
xchg
push
xchg
jge
or
cli
sub
lds
test
dec
mov
push
xchg
mov
jbe
mov
test
jae
dec
xchg
xchg
cwde
mov
out
cli
ror
xor
pop
and
fsubr
inc
imul
retf
bound
fwait
aad
sar
or
stos
int
jle
add
mov
mov
in
sbb
imul
fcmovu
lahf
xchg
in
enter
popf
in
and
js
aas
pop
sub
lahf
rol
pop
push
sbb
add
xchg
out
xor
or
es
imul
scas
and
pop
or
out
call
lock
mov
cld
push
jb
add
mov
mov
xor
ja
movs
dec
bound
ins
inc
mov
mov
adc
fwait
ds
scas
sub
retf
cdq
cli
cmp
cli
push
cdq
push
cmp
and
ret
fsubr
cdq
std
add
pop
sbb
pop
xor
iret
shl
cs
sahf
ror
inc
test
ja
sahf
xor
ret
fisubr
xrelease
add
mov
push
mov
sub
cwde
neg
add
add
scas
push
mov
push
add
sbb
sahf
push
test
cmp
mov
adc
xchg
enter
cdq
pop
out
(bad)
mov
mov
lods
es
cdq
imul
mov
pop
ins
sub
cmp
test
fucomip
pop
mul
inc
dec
and
int3
jae
ret
adc
jmp
xchg
out
dec
sbb
xchg
mov
push
cmp
cmps
ftst
jne
push
push
call
mov
mov
int3
cmps
xor
outs
jmp
jg
sub
adc
inc
sub
clc
push
sbb
popf
push
adc
sbb
push
dec
jmp
xchg
push
push
cmc
(bad)
outs
call
sbb
mov
mov
gs
sti
and
xchg
call
sbb
mov
les
push
push
mov
pushf
hlt
mov
gs
div
push
xchg
ret
pop
dec
pop
ins
pop
dec
pushf
add
add
loope
adc
dec
aam
ret
or
ss
loope
fs
cmp
mov
or
lods
dec
sbb
cwde
lods
pop
rcr
xchg
js
add
push
in
push
add
aad
xchg
pop
int3
ret
adc
jmp
mov
push
mov
cmp
and
ins
rcr
sbb
sbb
sbb
sub
xor
jb
retf
xchg
cmc
mov
jl
shl
into
cdq
dec
sub
enter
push
(bad)
std
mov
xchg
pop
out
push
ss
adc
jbe
bound
xchg
jns
mov
stos
fmul
and
xor
mov
mov
push
jmp
hlt
dec
mov
push
inc
sub
fcmove
xchg
aaa
mov
and
push
xor
arpl
or
in
mov
sbb
push
imul
and
movs
xchg
add
mov
and
cmps
dec
daa
gs
xchg
mov
sbb
push
popa
and
mov
mov
outs
pop
push
jae
retf
jmp
push
fdiv
push
mov
xor
loop
inc
ja
test
cmp
data16
xor
js
xor
mov
xchg
ins
xor
ret
inc
nop
lock
lock
or
sbb
es
push
adc
or
add
add
and
mov
mov
and
pop
mov
addr16
pop
jne
sbb
jno
add
or
ins
pop
cmp
or
fistp
rol
xor
out
dec
test
inc
cmps
int3
nop
inc
jp
cs
xchg
xchg
pop
data16
ror
or
(bad)
retf
into
jp
push
je
sbb
mov
test
mov
imul
lods
and
sub
jmp
inc
add
test
fstp
in
inc
lahf
loope
js
rol
push
ret
push
add
arpl
cmp
je
(bad)
(bad)
fisttp
loop
sahf
mov
shl
sbb
fist
inc
sub
pop
jle
mov
inc
mov
lahf
call
rcl
sub
arpl
cdq
jle
sub
inc
shl
mov
xor
in
retf
push
pop
mov
lods
mov
or
rcl
in
outs
or
fcomp
cmp
push
add
push
pop
leave
jmp
loopne
mov
mov
inc
setl
sub
xor
xchg
dec
out
test
mov
xchg
in
fsub
push
fdivr
adc
js
cmp
push
xchg
mov
in
sub
jae
push
int
or
ret
mov
lahf
fiadd
or
aad
gs
data16
je
in
jns
sub
int
jbe
cs
out
and
jb
push
cs
loope
ins
adc
ret
ds
gs
movs
leave
xchg
jle
jbe
pop
adc
cld
sbb
xchg
sbb
jl
or
fistp
add
clc
adc
popf
fsqrt
pop
sbb
in
sbb
pusha
inc
dec
cmp
sub
xchg
add
adc
cmc
mov
enter
neg
pop
les
xchg
dec
pushf
out
mov
rcr
in
rcr
sub
jbe
inc
push
add
mov
and
fmul
mov
call
mov
call
lea
dec
cmp
in
push
sub
xor
aam
push
iret
shl
out
cdq
dec
loop
push
pushf
es
xchg
sub
jecxz
outs
add
adc
pop
hlt
mov
clc
or
push
add
enter
sub
sbb
imul
xor
sbb
stos
push
mov
pop
loope
xchg
test
das
xor
dec
ror
enter
xor
popa
jecxz
movs
jg
mov
int3
sbb
sub
push
pop
pop
pop
mov
fild
push
dec
mov
mov
jno
stos
sub
add
mov
or
dec
xlat
sbb
mov
push
jmp
jge
cmp
shr
xchg
scas
mov
in
sbb
push
ss
dec
cmps
push
hlt
add
or
mov
fwait
jg
scas
mov
xlat
xchg
retf
sub
daa
call
repz
adc
push
cli
lods
push
dec
std
inc
stos
cli
rcl
sbb
jo
push
xchg
clc
jne
add
mov
clc
xchg
add
inc
shl
fsincos
ror
mov
mov
arpl
xor
jp
mov
rcr
pop
inc
sbb
jmp
xchg
test
retf
jp
or
stc
pop
cmp
pop
pushf
pop
cmp
jle
xchg
xor
inc
dec
fs
gs
mov
or
div
and
ins
arpl
jne
jmp
cmp
mov
sub
push
lods
xchg
inc
(bad)
cs
std
(bad)
push
shr
scas
jmp
rcl
and
rol
mov
pop
and
outs
add
neg
movs
mov
icebp
mov
cmp
movs
and
and
js
out
or
cmp
sub
sbb
push
lock
leave
(bad)
std
shl
pop
inc
rcr
fidivr
bound
jbe
(bad)
or
mov
pusha
or
rol
cmp
repz
jb
cld
xor
clc
ret
jge
xor
or
mov
sbb
out
loope
push
mov
pushf
sub
or
clc
loopne
or
xchg
push
xor
mov
cmp
js
pop
adc
push
add
(bad)
aad
cmps
cmp
pop
(bad)
adc
and
jnp
fwait
mov
into
out
jne
ret
cli
ja
cmp
daa
das
fist
enter
push
inc
clc
push
cwde
jecxz
push
lods
mov
repnz
xchg
sbb
jmp
sub
outs
jne
mov
stos
add
or
cmp
mov
mov
mov
pop
fnstcw
xchg
cld
dec
jno
dec
hlt
imul
shr
mov
cmp
stos
jne
xchg
inc
or
and
inc
(bad)
shr
ret
push
sub
cmp
xchg
mov
xor
adc
int
ds
dec
fs
mov
adc
scas
mov
mov
lock
sub
jge
and
fisub
ficomp
cmc
xchg
inc
retf
xchg
ss
inc
jne
jg
int3
pusha
pshufw
std
xchg
into
into
dec
test
and
xchg
sti
sub
addr16
mov
inc
dec
adc
jb
pop
push
or
pop
push
(bad)
sbb
xchg
imul
sbb
dec
dec
mov
mov
sub
mov
popf
mov
or
sbb
repz
add
push
cmp
and
mul
repnz
movs
xor
js
mov
push
movs
into
mov
xchg
dec
add
mov
out
xchg
icebp
in
pop
and
call
xlat
ret
frstor
mov
lahf
je
hlt
out
fdiv
sub
adc
mov
hlt
mov
call
fwait
adc
mov
mov
sbb
sbb
and
imul
js
mov
inc
adc
pop
js
xchg
push
shl
aaa
enter
jne
repnz
and
sbb
pop
adc
into
cmp
test
ins
cmp
mov
leave
dec
lods
xchg
fs
jl
xchg
test
and
cld
cmps
fsub
mov
mov
popa
push
mov
enter
pop
or
jmp
cdq
cld
mov
push
mov
fisttp
add
idiv
mov
sub
cmps
daa
pop
cmp
sub
fld
jno
lds
cmp
push
ret
push
cmc
test
push
stos
adc
retf
sti
ss
jnp
cmps
mov
idiv
sbb
aam
(bad)
adc
xchg
aam
cwde
xchg
daa
or
mov
add
fs
leave
ins
add
add
movs
shl
jo
ret
xor
cmp
lahf
push
movs
mov
rcl
retf
retf
mov
mov
jo
push
aaa
sar
push
and
int3
dec
das
cmps
cmp
(bad)
addr16
in
cmp
cwde
jnp
pop
pop
test
fidivr
repz
aas
mov
or
out
mov
ret
xchg
loop
and
arpl
inc
inc
push
sbb
add
push
les
pop
sbb
sbb
(bad)
int
out
add
repnz
(bad)
pop
inc
adc
(bad)
pop
into
or
iret
fdivr
add
mov
fwait
xchg
div
dec
fwait
pop
jne
repnz
es
mov
ret
inc
pop
jle
ins
test
push
inc
jp
or
push
adc
push
int3
mov
arpl
sbb
pop
mov
mov
pop
mov
mov
stos
cmp
mov
pop
test
pusha
cmp
dec
lahf
xchg
es
cmps
sbb
(bad)
push
bound
outs
mov
ss
js
push
sub
into
push
dec
push
mov
or
jl
mov
sbb
xchg
xorps
retf
mov
xchg
inc
lahf
sub
in
(bad)
pop
jmp
or
push
ins
shl
cwde
shr
test
bound
sub
retf
movs
ud2
or
mov
mov
test
out
imul
sbb
test
es
std
mov
xor
out
idiv
xchg
mov
push
outs
push
hlt
add
mov
aam
or
jge
jns
xlat
sub
outs
pop
adc
add
ss
jmp
add
mov
addr16
cvtdq2ps
(bad)
or
jecxz
mov
xchg
xor
and
push
pushf
jp
and
adc
aaa
outs
popa
daa
cmp
bnd
jnp
jae
cmp
test
push
dec
ret
ds
push
adc
jae
push
mov
out
lods
mov
xchg
sbb
xchg
or
call
mov
push
fwait
mov
daa
cwde
clc
dec
outs
call
xchg
aam
sbb
out
out
in
int3
add
add
jl
imul
sub
jo
adc
(bad)
pop
(bad)
jmp
sub
fcom
cmp
and
outs
xchg
shr
fcomp
mov
out
jnp
push
and
cwde
jno
rol
mov
sub
adc
cld
enter
inc
je
cmp
out
mov
dec
xor
es
add
xchg
jae
xchg
inc
cdq
xchg
xchg
popf
push
pop
sbb
cmc
movs
hlt
sbb
hlt
sub
or
arpl
xchg
sub
push
cmps
inc
daa
pushf
xchg
sub
in
jle
rcr
or
and
sti
hlt
dec
je
xor
xor
loop
push
push
cmp
ret
xchg
mov
pop
stos
leave
iret
push
jp
(bad)
popf
fldcw
pop
or
jge
cmp
xchg
sbb
adc
ins
mov
je
and
rcl
mov
mov
fistp
pop
outs
(bad)
scas
xchg
fcom
sub
mov
push
movs
xor
and
jmp
xchg
jno
pop
test
popf
shl
(bad)
add
je
inc
mov
arpl
jmp
pushf
out
adc
sbb
fcom
js
sbb
xchg
sub
and
push
iret
pop
rcpps
inc
and
rcl
mov
cs
jl
jb
pop
pushf
and
sbb
std
jmp
cmps
cmp
mov
pop
sbb
fstp
popf
jp
sbb
hlt
ins
(bad)
mov
shl
in
call
and
and
clc
cwde
pop
sub
pop
dec
into
jge
jle
push
pop
call
fild
in
push
rcl
pop
je
sti
in
ins
dec
clc
xchg
xchg
rep
addr16
pop
je
loopne
or
jle
adc
mov
out
push
or
(bad)
retf
jno
ss
loopne
sbb
mov
pop
mov
sar
sbb
and
movs
inc
(bad)
xchg
and
or
xlat
mov
mov
(bad)
jbe
mov
cdq
mov
sbb
mov
out
rcl
pop
jb
or
cmp
mov
adc
mov
aas
shl
test
loopne
in
sar
or
cmp
sbb
mov
and
jp
out
mov
adc
rol
adc
jge
mov
inc
push
xchg
jo
push
jg
leave
pop
or
xchg
movs
push
in
jb
jge
mov
and
(bad)
loop
add
jp
xor
stos
pop
adc
mov
cmp
push
xor
inc
(bad)
sub
dec
mov
sbb
in
mov
aam
sti
mov
outs
ja
xor
loope
std
das
ret
ja
dec
lods
mov
imul
jp
pop
(bad)
lahf
sub
xor
sbb
fadd
jmp
out
cld
(bad)
jmp
ins
pop
and
pop
aad
mov
loopne
mov
mov
cmp
shl
dec
cdq
xlat
sbb
mov
inc
inc
or
adc
pushf
mov
stc
lods
mov
dec
xchg
mov
mov
(bad)
mov
xchg
test
xchg
in
stos
jg
dec
aad
inc
adc
jb
dec
lds
adc
std
inc
add
dec
add
pop
je
(bad)
jp
out
mov
scas
mov
add
mov
adc
retf
lods
push
arpl
dec
(bad)
jmp
aaa
ss
mov
mov
jns
lea
mov
jo
or
push
lds
dec
add
les
je
mov
repz
call
cmp
jg
(bad)
jne
dec
dec
pop
ss
stos
and
loope
mov
sbb
adc
mov
pop
cmc
xchg
ret
sbb
jp
sub
pop
(bad)
push
retf
or
lea
xorps
mov
pop
and
jp
stos
stos
out
cmp
push
push
jg
or
(bad)
jae
fstp
movs
push
mov
pop
hlt
mul
sbb
jb
scas
mov
fcom
and
xor
jmp
je
inc
and
cmp
xchg
push
std
(bad)
mov
les
or
cmp
xchg
outs
(bad)
mov
nop/reserved
jp
xchg
sbb
cmp
test
mul
fld
nop
cmps
fsubr
push
call
push
ss
in
hlt
nop
inc
xor
inc
repnz
stc
xchg
sbb
pusha
mov
dec
js
push
pop
dec
dec
push
inc
mov
nop
jle
pop
and
or
sub
xchg
inc
fdiv
jne
loope
es
sar
push
sub
fadd
sub
movs
sbb
xor
repz
leave
or
mov
xchg
lods
push
dec
call
mov
fisub
jle
arpl
js
out
loopne
movs
jmp
dec
cmp
push
ins
mov
lea
nop
cwde
xchg
jg
test
shl
not
push
mov
push
leave
cs
(bad)
stc
add
adc
jnp
xor
xchg
pop
mov
cmps
iret
and
int
pop
daa
jb
in
sar
xor
repz
xchg
(bad)
in
mov
repnz
jmp
add
xchg
xchg
adc
data16
sbb
add
call
push
sub
aas
cmp
lds
adc
int3
mov
call
jb
adc
into
lahf
popa
push
das
push
call
in
bound
adc
cmp
iret
fisttp
pop
sti
push
sub
scas
push
mov
rcr
lahf
sub
adc
pop
aam
mov
xor
(bad)
pop
cwde
cmp
ds
jmp
mov
(bad)
pop
icebp
and
xchg
cmps
xor
mov
mov
jecxz
jl
and
mov
dec
dec
div
adc
add
add
push
jmp
lea
xchg
pop
pop
mov
sub
inc
ret
sub
mov
aam
test
(bad)
imul
push
mov
push
adc
sub
xchg
out
imul
call
mov
xchg
dec
(bad)
fimul
shr
jle
rcpps
xchg
inc
xor
jl
repz
sub
call
test
or
xor
int3
jp
push
les
push
mov
arpl
ins
mov
imul
clc
mov
std
mov
mov
dec
idiv
sbb
stc
dec
xchg
pop
(bad)
into
sbb
push
jmp
movs
fs
out
lods
sbb
xchg
sbb
sbb
je
lds
div
mov
push
or
sub
ffreep
xchg
mov
mov
add
fmul
rcr
push
aad
sbb
imul
push
aaa
mov
xchg
mov
xor
inc
js
test
ja
push
mov
icebp
and
mov
neg
scas
sbb
adc
dec
inc
fcmovnb
cmps
cmp
jo
out
jge
out
adc
sbb
cmc
rol
pop
push
lea
in
lods
addr16
mov
popa
inc
mov
and
int3
and
mov
out
mov
xor
test
inc
sub
aam
jne
aad
loope
cmps
dec
jmp
jecxz
fwait
push
cs
mov
arpl
int3
test
or
cmps
xchg
cdq
cli
loope
inc
jmp
cmp
rol
ret
imul
repnz
add
cmc
jl
iret
cmp
sub
stc
jae
or
scas
xchg
jbe
test
mov
jbe
push
sbb
pop
xor
out
jbe
aad
and
mov
xor
add
lahf
sub
loop
push
jmp
fcomp
xor
movs
ins
xor
retf
pop
shl
pop
add
inc
jae
jecxz
pop
add
in
and
enter
popf
jne
(bad)
jecxz
push
bound
pop
or
xchg
scas
cmp
push
mov
shr
cld
lods
inc
cmp
lahf
sbb
sahf
sbb
jl
dec
inc
adc
mov
fistp
add
cmp
das
(bad)
sub
shl
push
fsubr
mov
mov
cmps
lds
sbb
push
add
and
jno
cmp
popf
pusha
or
mov
adc
or
pop
mov
jmp
aaa
mov
push
out
dec
int3
jg
cmp
aam
jl
and
mov
jle
push
fild
out
mov
jge
push
not
ds
push
in
inc
and
push
inc
in
imul
jb
imul
pop
cmp
aaa
jg
mov
mov
pop
aas
adc
(bad)
jno
mov
dec
loopne
or
mov
ins
push
mov
(bad)
ss
fist
jb
cmp
inc
ss
stos
ja
xor
clc
cmp
jle
cmps
div
push
push
clc
shr
adc
test
jb
pop
dec
jo
fisubr
stc
in
dec
bound
dec
inc
les
push
pop
fbld
or
in
dec
jmp
push
sbb
mov
test
std
into
sbb
cld
or
xchg
push
mov
push
push
and
push
jp
movs
push
xchg
enter
out
mov
sbb
inc
in
and
enter
je
xor
jmp
retf
push
arpl
mov
movs
xchg
pop
sar
jmp
les
stos
scas
retf
mov
push
call
jle
fist
hlt
xor
js
xchg
retf
adc
mov
mov
pop
inc
xchg
and
lods
icebp
int3
arpl
popf
std
push
xchg
sub
xlat
frstor
scas
or
movups
inc
enter
outs
cli
jns
cmp
sub
ja
es
fmul
adc
daa
add
ins
or
adc
lahf
dec
cmc
push
ficomp
stos
neg
sahf
fstp
push
xchg
in
jne
movs
fnstsw
add
ret
das
stos
dec
outs
(bad)
ret
mov
ret
xchg
sbb
test
lods
mov
cmp
fnstenv
mov
(bad)
ins
jnp
dec
or
cdq
std
cdq
push
sahf
adc
and
xchg
sub
rol
in
cdq
scas
or
push
imul
(bad)
sub
add
sti
sbb
and
jo
mov
fisttp
test
sbb
sar
cmp
aad
jae
int
inc
pop
or
cwde
sbb
mov
scas
push
xchg
sub
push
xchg
push
jns
bound
ja
inc
mov
pop
mov
movs
ds
aaa
mov
jl
fwait
leave
adc
sub
mov
sub
adc
popa
scas
sub
sub
leave
(bad)
js
jnp
push
dec
sub
jl
js
test
sbb
mov
and
lock
rcr
or
int
xchg
enter
push
mov
jne
mov
popa
das
retw
test
std
adc
pop
adc
scas
iret
adc
adc
adc
int3
mov
adc
cwde
shr
jmp
mov
jmp
aad
test
or
ins
pop
jecxz
mov
loope
jb
fnstcw
popf
or
fsubrp
fs
and
jle
hlt
sub
mov
(bad)
rcl
sub
mov
jbe
repz
or
out
loopne
xchg
shl
(bad)
je
icebp
jo
sub
mov
xchg
cdq
cmp
inc
(bad)
fmul
les
in
pushf
cmp
in
ret
jns
pop
or
jae
in
aam
pop
dec
mov
inc
cld
mov
in
push
xchg
int3
xor
call
out
scas
sbb
fcomp
jecxz
and
push
push
movs
jno
mov
jnp
xchg
xchg
fsubr
iret
add
cmp
ret
das
fist
lock
out
mov
hlt
ror
ror
sti
lods
jae
xchg
sbb
icebp
xchg
mov
in
ins
pop
xor
mov
xlat
push
scas
mov
test
sbb
push
xor
retf
push
xchg
xor
repz
push
in
pop
std
shl
fiadd
mov
xor
pop
scas
dec
jl
rcl
and
lahf
inc
mov
fcom
jo
scas
sub
pop
neg
add
xor
in
push
jle
cwde
nop
jl
sub
scas
shl
dec
fwait
cmp
jno
mov
rcl
mov
jecxz
xchg
dec
les
sub
addr16
(bad)
sub
or
mov
fcmovu
pop
sbb
mov
repz
repnz
cld
inc
dec
mov
mov
mov
aad
xchg
call
movs
es
cmp
clc
pop
(bad)
jl
pop
cwde
xchg
mov
neg
dec
jae
fs
xchg
jmp
fild
rcr
mov
and
jns
fidiv
pop
jp
dec
test
es
jne
and
movs
into
pop
and
ds
or
jmp
dec
fidivr
sti
xchg
xor
and
not
mov
shr
push
outs
cs
fcom
ins
fucomip
and
mov
popa
adc
inc
mov
aad
inc
fsubr
dec
(bad)
jl
cwde
jne
jp
repnz
stos
loopne
cmp
(bad)
aad
retf
(bad)
adc
cs
cmp
rol
or
jp
shl
orps
xchg
push
sbb
push
retf
adc
xchg
lods
jb
inc
and
jb
das
test
cli
adc
xchg
inc
das
push
push
lock
and
push
push
add
rcl
loope
pop
in
adc
fild
sbb
repz
pop
(bad)
int3
jae
xchg
sub
add
retf
ds
mov
shl
dec
dec
out
pop
and
dec
es
and
jmp
xor
ja
rcl
push
repz
mov
popa
ins
dec
xchg
adc
ds
ffreep
fimul
scas
xchg
out
in
inc
sub
scas
push
push
out
xchg
loope
fdiv
pop
sbb
push
clc
mov
add
mov
dec
mov
jle
or
add
movs
dec
jne
mov
mov
jo
adc
mov
jl
sti
aad
pop
sbb
xor
mov
add
out
imul
cmc
jnp
bound
add
in
(bad)
cli
add
pop
sub
and
mov
mov
jle
lock
retf
stc
clc
mov
(bad)
ror
or
jo
pushf
sar
mov
push
pop
out
pop
fistp
push
imul
ins
data16
adc
leave
shl
jg
mov
mov
add
int
inc
jmp
mov
scas
aas
push
mov
rcl
lock
jne
xchg
xor
movs
sub
pop
lods
js
inc
rcr
ins
add
or
add
mov
movs
outs
add
dec
loop
dec
pop
push
xchg
pusha
mov
push
scas
hlt
leave
test
add
stos
pop
push
inc
sbb
(bad)
(bad)
les
mov
mov
dec
arpl
inc
cmp
sub
pop
dec
lods
loopne
or
cmps
and
mul
mov
cmp
mov
loopne
push
jnp
mov
ds
jbe
adc
jecxz
push
fidivr
jb
mov
mov
icebp
pop
mov
loop
pop
fsub
retf
js
cs
cmc
pop
jae
std
mov
cmc
(bad)
(bad)
push
adc
adc
xor
ss
fwait
jno
jmp
in
add
addr16
cdq
push
and
and
pop
mov
jg
or
loop
sbb
and
mov
jne
inc
mov
mov
cmp
push
fild
dec
fisub
mov
dec
mov
test
sbb
cmp
sbb
xor
les
or
fwait
push
cmp
ror
data16
fmul
bswap
addr16
push
adc
lods
retf
sub
sbb
sbb
push
out
or
repz
sub
dec
pop
jb
jl
inc
mov
adc
mov
aas
cmp
div
add
imul
and
cmps
inc
je
dec
cmp
push
cmc
ret
pop
add
ffree
lahf
aas
sahf
test
pop
jno
push
loop
outs
dec
cli
and
jo
jmp
cmps
xchg
and
mov
(bad)
cmc
cmps
xor
or
(bad)
xchg
mov
jmp
or
xchg
mov
ficom
retf
add
jbe
dec
in
xchg
out
fwait
jmp
mov
pop
sub
mov
push
div
jnp
fnsave
xchg
mov
add
test
cmps
stc
and
js
lock
icebp
or
cdq
sbb
sbb
aas
push
ins
es
mov
adc
stos
iretw
mov
mov
loopne
dec
jge
js
sub
popa
add
imul
push
loope
mov
push
dec
xor
daa
mov
dec
pop
cli
push
ror
sahf
push
lods
lea
push
test
jno
cmp
xor
fdecstp
or
push
add
sti
repz
cmps
sub
es
js
cmps
push
xor
(bad)
cmp
fcomp
xchg
retf
add
mov
stos
ja
xlat
enter
inc
adc
cdq
add
mov
mov
call
shl
fnstenv
push
aas
mov
loope
jge
mov
dec
mov
icebp
jmp
loopne
(bad)
jge
jmp
dec
and
mov
xor
into
and
cmc
hlt
daa
lea
dec
mov
out
xor
call
xchg
stos
xor
xchg
mov
pop
das
bound
fild
lods
jg
jb
and
add
cmps
mov
pop
aas
jbe
and
nop
daa
jmp
scas
rcr
imul
scas
dec
push
pop
loopne
shr
add
adc
cmps
add
xor
mov
ret
push
shl
imul
repnz
cld
sbb
mov
cmp
shl
shr
mov
fidivr
xchg
add
cmps
sbb
aas
(bad)
jmp
adc
rcl
aas
mov
loope
jo
dec
xlat
jg
xchg
or
test
(bad)
jno
ret
shl
mov
loope
xchg
jb
mov
out
xchg
inc
mov
rcr
pop
fistp
cwde
rcl
dec
jge
and
mov
mov
and
adc
cmp
cwde
fbld
(bad)
push
mov
or
sub
les
xor
add
jecxz
clc
lahf
adc
add
movs
fnstsw
mov
jl
test
xchg
push
pop
ins
pusha
movs
pop
sbb
jle
cdq
nop
or
loopne
test
lods
rol
and
add
(bad)
jmp
jmp
push
stc
cmps
test
test
jb
jmp
lahf
mov
leave
dec
sbb
pushf
scas
sbb
int
inc
jno
div
xchg
sbb
ins
push
mov
test
mov
es
xchg
sub
jno
jmp
adc
sub
jb
push
jo
add
in
mov
or
push
fwait
data16
mov
hlt
cwde
adc
jnp
dec
retf
les
and
jno
cld
and
xchg
stc
clc
dec
push
mov
lahf
imul
repz
test
sti
in
int3
bts
pop
pop
push
ja
ja
push
dec
cmps
ins
mov
lods
cmp
imul
pop
rcr
daa
call
xor
fisttp
push
or
mov
mov
fldcw
dec
mov
faddp
sub
in
adc
ja
cmp
inc
repz
mov
bound
icebp
jae
stos
jl
es
xor
dec
mov
loop
rcl
jl
mov
jl
cdq
rol
cwde
fdiv
xor
mov
out
retf
pushf
or
mov
xchg
mov
(bad)
mov
fs
mov
dec
jno
fcomip
push
push
jmp
in
pop
(bad)
mov
out
mov
pusha
aam
jne
mov
sbb
movs
pop
movs
mov
or
std
aam
jb
xlat
outs
cmps
retf
adc
lds
cmp
test
or
mov
push
cmp
xchg
ror
call
push
xchg
xor
push
push
leave
sbb
mov
and
mov
jg
or
xchg
sbb
push
cli
inc
in
and
mov
xchg
push
cmp
push
add
imul
pop
lods
jae
add
add
cli
out
mov
mov
lock
pop
pop
in
jmp
(bad)
adc
or
add
addr16
stc
out
jbe
movs
mov
stos
inc
cmc
cmp
xor
inc
in
mov
add
shr
cmps
inc
aam
sahf
jge
pop
imul
test
daa
(bad)
jns
pop
sub
xor
xor
sub
mov
xor
push
xchg
iret
add
sbb
xor
cwde
mov
into
sub
jg
sbb
dec
mov
test
icebp
pop
outs
adc
imul
inc
lds
and
add
pop
cmps
mov
jmp
std
and
jmp
out
cld
xlat
js
(bad)
xor
sub
inc
dec
(bad)
loope
pop
mov
mov
lods
xchg
call
push
sub
fist
xlat
adc
and
stos
pop
jns
mov
scas
stc
inc
sar
lock
(bad)
das
jo
stc
sbb
out
ds
movs
or
in
fcmovb
adc
push
shl
dec
push
dec
sbb
jge
pop
mov
inc
ret
jbe
dec
pop
sbb
scas
repnz
mov
jl
mov
(bad)
fldcw
inc
cmc
xchg
iret
sbb
pop
mov
sub
mov
fiadd
ins
pop
sahf
aad
sub
pusha
mov
lahf
pop
fisubr
xor
pop
shr
out
push
fwait
push
aas
cwde
xchg
icebp
clc
call
ja
pop
dec
mov
inc
outs
clc
push
(bad)
mov
out
aad
cli
sbb
cld
add
jns
test
ds
pop
dec
add
mov
in
test
adc
jp
and
repz
add
push
inc
sub
(bad)
adc
sub
sub
jnp
sahf
add
in
pop
shr
sbb
retf
out
push
outs
or
out
jle
xchg
lds
gs
out
pop
mov
jne
lock
cmp
cmp
pop
in
dec
mov
loop
pop
aam
jnp
bnd
mov
inc
cli
jg
push
xor
push
sbb
in
pop
(bad)
mov
cmp
sub
pop
pop
lods
data16
add
pusha
in
and
or
mov
add
dec
call
adc
mov
(bad)
nop
push
add
stos
test
sbb
dec
movs
mov
jbe
lods
aaa
es
imul
aam
fwait
mov
push
js
dec
jae
and
out
test
sub
sub
mov
mov
mov
mov
dec
jmp
test
fs
pop
not
cmp
in
pop
movs
aaa
lahf
iret
jmp
cmps
arpl
inc
push
fmul
pushf
fsubr
outs
dec
cmc
jmp
pop
xchg
fcom
(bad)
cdq
or
push
test
pusha
xchg
lock
jmp
add
pop
int3
adc
int3
jno
pushf
xchg
scas
cwde
scas
shl
inc
loope
test
xor
or
xchg
ja
sbb
movs
repz
shl
jecxz
sub
push
fsubr
mov
loopne
adc
retf
out
out
test
retf
mov
cmp
mov
xlat
adc
push
sub
jge
popaw
fwait
pusha
(bad)
leave
rcl
test
cli
iret
push
and
retf
arpl
mov
or
stc
inc
push
jmp
jno
fdiv
add
push
mov
imul
sub
fwait
sub
jo
lds
and
hlt
dec
lahf
imul
push
push
inc
sbb
bound
sub
mov
mov
aam
stos
mov
push
int3
shl
cmc
imul
sbb
bound
cwde
cdq
scas
loop
sbb
mov
ja
addr16
and
cmp
jecxz
mov
sahf
mov
xor
dec
lods
inc
cmps
outs
or
out
xchg
loopne
dec
(bad)
ficomp
lods
inc
jbe
pop
push
imul
lods
jae
outs
dec
sub
adc
hlt
push
adc
es
cmp
mov
cmps
rcr
mov
pop
call
adc
cdq
ror
sti
stos
adc
repz
fwait
lock
mov
adc
mov
mov
mov
mov
dec
test
(bad)
mov
mov
lea
and
out
mov
gs
xchg
out
mov
mov
fdiv
fucom
sub
dec
pop
xchg
jmp
lds
xchg
cmp
xor
ret
lahf
loope
loopne
(bad)
and
mov
mov
(bad)
repnz
adc
xchg
lods
shr
dec
sbb
in
pop
gs
mov
stc
fcom
xsha1
cmps
dec
test
icebp
aas
jg
cli
mov
sub
fbld
xchg
xchg
xor
iret
push
ror
push
fdiv
lock
ud2
pop
xor
push
push
or
js
repz
fwait
lock
push
mov
xor
je
mov
cmp
fcomp
inc
sti
mov
enter
les
xchg
imul
push
dec
jmp
out
cli
daa
out
push
(bad)
push
mov
dec
jl
mov
ins
mov
mov
aaa
pop
add
dec
fdivr
inc
aam
imul
mov
test
sbb
and
push
pop
enter
imul
xor
mov
int3
sub
repz
sbb
rcr
add
fild
sbb
jmp
xchg
movs
int
fistp
fst
loope
or
inc
xchg
(bad)
hlt
lock
ret
and
rcl
jns
add
(bad)
data16
sbb
jg
xor
sbb
out
or
stos
xchg
push
jb
mov
push
pop
inc
push
iret
aad
setae
mov
sbb
(bad)
div
pop
shl
push
movs
dec
out
push
mov
pushf
pop
xor
and
call
and
adc
xchg
jecxz
ror
xchg
cmp
mov
push
mov
adc
lock
ja
mov
sbb
pop
mov
pop
mov
push
and
dec
xchg
push
cdq
sbb
js
fstp
push
pop
fld
int
cmps
aad
movs
inc
add
hlt
pop
cmp
mov
push
jecxz
retf
mov
sub
pop
xchg
mov
iret
scas
stos
add
jp
jp
inc
adc
pop
mov
add
ror
jmp
pop
not
cs
sbb
push
(bad)
sbb
push
cmp
jp
scas
stos
mov
jecxz
pop
sub
cmp
lea
cmps
test
push
pop
daa
(bad)
in
cmp
addr16
retf
jmp
es
pop
out
adc
sbb
xchg
xchg
add
out
adc
shl
shl
test
push
sub
mov
push
(bad)
enter
cs
xor
cmps
fimul
mov
xchg
xchg
mov
mov
add
or
mov
ins
imul
or
add
movs
(bad)
fldenv
xor
jmp
outs
out
jle
or
mov
mov
int
adc
iret
dec
ret
mov
fs
mov
gs
mov
lds
dec
dec
ins
shr
test
repnz
inc
pop
jb
lods
call
xchg
jmp
jne
test
cvtpi2ps
push
pushf
cmp
cli
nop
mov
nop
inc
mov
int
xchg
ficomp
test
js
push
pop
mov
int
sbb
(bad)
dec
(bad)
in
push
xor
pop
cmp
lock
popa
and
and
loope
ror
lds
cdq
sbb
repnz
fistp
xchg
lea
mov
fisubr
ror
repz
push
pop
sbb
mov
mov
and
jo
fsub
inc
and
adc
dec
pop
outs
inc
sbb
push
cmp
jno
(bad)
xchg
push
lock
jle
inc
int3
add
test
enter
sbb
icebp
push
dec
es
pop
and
mov
repz
mov
ror
(bad)
outs
ds
aas
inc
(bad)
aas
push
sbb
jg
push
mov
and
pop
js
adc
xor
pop
cmc
pop
lock
push
adc
lods
rcr
hlt
mov
xchg
cmp
mov
mov
xchg
mov
xor
cmp
sar
sbb
popf
xchg
mov
repz
push
pop
aas
cmp
les
xchg
and
fcmovnb
dec
xlat
(bad)
fcomp
hlt
fsub
pop
or
xchg
lods
push
mov
mov
call
ss
xchg
lds
sti
jo
cli
(bad)
fild
lock
or
movs
jle
sub
push
adc
dec
cmp
cmp
adc
dec
mov
pcmpeqb
les
shr
cmp
stos
xchg
dec
xchg
pop
fst
cmp
sahf
and
js
lods
ss
pop
lock
fsub
shl
mov
dec
loope
mov
push
retf
clc
xchg
jb
cld
shl
jns
ins
adc
fdiv
or
test
hlt
ret
punpcklwd
jg
or
movs
pop
stc
or
nop
dec
pop
enter
pop
outs
add
out
loop
xor
jae
cmp
ss
or
cmp
int3
push
jmp
sub
jp
add
loopne
gs
test
pop
lods
mov
push
jbe
jg
in
pop
pop
mov
cmc
mov
mov
and
sbb
scas
and
add
mov
pop
out
stos
pusha
jecxz
lods
sub
cwde
test
(bad)
je
adc
cmp
inc
out
pop
(bad)
fisubr
inc
imul
stos
sar
stos
jne
mov
sbb
or
xchg
fdivr
sbb
mov
xor
add
daa
and
push
fimul
mov
scas
sbb
mov
push
mov
and
sbb
loopne
not
and
mov
iret
mov
js
lea
cmps
xchg
dec
pminsw
sub
fidivr
mul
test
or
shl
es
adc
test
push
and
aam
mov
mov
int3
popa
pop
mov
pop
sbb
rol
dec
ja
imul
pushf
rep
enter
mov
add
int3
pop
add
daa
push
add
imul
mov
pop
mov
jns
popa
sti
ss
xchg
jge
aam
ficom
cs
jb
push
jns
shl
dec
jmp
clc
pop
jnp
setnp
les
push
cli
jp
cmp
xor
test
pushf
add
adc
sbb
cmps
inc
es
inc
(bad)
cmp
rcr
popa
or
enter
lods
push
sbb
ret
mov
fneni(8087
cmp
(bad)
mov
not
fist
sub
js
imul
fist
jge
add
dec
push
jae
mov
mov
and
sbb
sub
push
and
cmp
call
mov
mov
hlt
jl
popf
mov
cld
in
sti
lock
push
add
mov
clc
pop
adc
pusha
sbb
sub
div
repz
jle
jmp
jno
jo
push
sti
in
inc
or
push
push
sar
cmps
cld
out
jecxz
cwde
inc
mov
and
pop
cmp
mov
mov
jmp
mov
in
cli
(bad)
inc
mov
sub
int3
imul
jno
retf
jecxz
mov
outs
out
cmp
jae
rcl
jg
sub
ins
inc
sbb
xor
(bad)
jmp
dec
pop
add
xchg
adc
in
push
loop
sbb
aas
ins
test
pop
cmp
outs
mov
jo
daa
movs
retf
cdq
pop
xor
movs
jns
sti
push
mov
push
mov
lock
adc
fst
(bad)
into
pop
cmp
push
push
mov
jnp
ins
jb
inc
or
pop
fstp
jmp
nop
rcl
inc
cmp
lahf
push
mov
leave
pop
or
out
arpl
jb
jne
iret
lahf
sub
outs
mov
fs
add
stos
pop
adc
mov
and
add
jbe
sbb
fwait
lea
xchg
ret
repnz
add
leave
cmp
adc
mov
(bad)
(bad)
int
addr16
mov
lahf
pushf
call
ds
in
xchg
out
mov
mov
out
(bad)
sti
cmp
sbb
sub
test
movs
jns
and
cmp
jmp
inc
or
mov
bound
mov
jo
dec
or
fdiv
pop
hlt
cmp
(bad)
xlat
dec
in
frstor
add
push
and
std
xor
and
les
int3
pop
inc
cmp
adc
scas
stos
mov
fldcw
popa
imul
inc
jb
pop
test
jecxz
adc
xor
scas
cmps
dec
jmp
enter
in
int
jno
jae
xchg
add
mov
call
pop
mov
inc
xor
loop
mov
(bad)
jge
mov
mov
pop
mov
pop
fcmovnb
inc
push
dec
and
inc
inc
adc
mov
xlat
sub
sbb
push
jbe
popf
cmp
pop
(bad)
mov
popa
cmp
inc
push
cmp
ds
cdq
std
je
mov
in
mov
pop
adc
xor
out
aad
clc
leave
jmp
inc
inc
mov
cwde
cmp
xor
clc
sbb
pop
xchg
mov
fidiv
or
popf
xor
sub
xchg
xor
cmp
sub
pop
jge
in
fs
out
sbb
stos
mov
inc
sub
inc
int
icebp
mov
int
add
inc
retf
and
jp
sbb
jb
jp
in
dec
jo
dec
(bad)
mov
mov
jp
dec
mov
push
pop
jp
adc
adc
mov
cmp
xor
sub
test
inc
and
aaa
das
adc
adc
push
stos
xor
xchg
cmp
aad
cmp
mov
pop
inc
cdq
test
neg
int
nop
push
push
dec
neg
gs
lds
push
fmul
mov
push
sti
(bad)
dec
icebp
xchg
(bad)
imul
cmp
adc
fcom
rcr
mov
xchg
xchg
sbb
aam
repz
pop
out
ja
mov
pop
and
inc
nop
adc
shl
pop
pop
(bad)
xor
inc
or
out
mov
ds
call
cdq
dec
jmp
sbb
cmps
aam
sub
addr16
add
pusha
jmp
in
clc
arpl
inc
cmp
mov
fsub
xor
xchg
dec
addr16
mov
sub
push
rcl
stos
dec
hlt
lea
xchg
das
sbb
push
mov
sbb
push
je
add
nop
clc
mov
sbb
xchg
jnp
and
cmp
push
jecxz
add
push
push
sub
xor
or
xor
in
dec
jmp
adc
(bad)
push
inc
nop
sbb
int
dec
jbe
hlt
mov
push
mov
test
jne
jnp
xchg
jbe
movs
(bad)
cmp
cmp
xchg
stc
cwde
push
inc
adc
cwde
xlat
fs
enter
pop
sbb
or
mov
pop
dec
mov
dec
and
pop
mov
jno
mov
fdivr
sti
or
pop
sub
dec
jae
jle
pop
imul
mov
pop
jae
mov
inc
push
fwait
sbb
jbe
jl
ret
mov
fimul
repnz
stc
movs
jecxz
icebp
stc
add
xchg
cmp
cmps
sub
clc
ja
xor
imul
mov
jo
sub
cmp
lock
and
mov
cmp
aam
pop
pusha
dec
test
pop
sahf
mov
mov
sahf
bound
mov
bnd
jmp
aam
xor
sbb
inc
push
mov
and
adc
adc
fistp
sub
fdivr
inc
es
adc
adc
add
mov
addr16
shl
cli
adc
scas
mov
cli
cmp
xor
push
and
jb
gs
adc
and
add
rcr
push
mov
stos
out
xchg
or
cmc
movs
repnz
mov
jmp
push
ret
test
mov
push
clc
adc
ror
sub
imul
mov
pop
mov
push
gs
fisttp
fst
loop
out
les
push
lea
rcr
inc
fld
lods
and
sub
test
or
cmp
mov
mov
inc
outs
push
fwait
addr16
dec
ja
in
into
mov
inc
mov
xchg
and
(bad)
adc
dec
ss
and
movs
and
mov
sbb
mov
sbb
dec
outs
cmp
adc
scas
in
cmps
inc
push
jbe
cmp
cdq
stc
sub
imul
mov
pop
iret
inc
inc
jle
push
icebp
xor
push
hlt
rcr
hlt
dec
es
and
push
loopne
add
cmp
xor
in
test
adc
push
pop
stos
cdq
shl
adc
jmp
ds
lods
mov
pop
out
pop
xor
ror
pop
and
dec
loop
and
in
dec
mov
imul
xor
xlat
sub
mov
out
pop
shl
jmp
scas
test
jae
fidiv
xor
jge
jae
adc
sub
fdiv
cmp
mov
fsubrp
(bad)
pop
iret
sub
mov
jno
scas
add
pop
out
sbb
fcom
mov
aaa
push
and
push
test
adc
and
inc
ret
out
jecxz
jle
ins
shl
imul
jl
sbb
lds
jnp
shl
lea
fsub
cdq
jl
adc
cmp
mov
mov
ret
jp
out
dec
jns
and
test
cmps
mov
sbb
pop
cmps
shl
lds
xor
mov
sbb
dec
daa
shl
pop
in
retf
in
jns
aad
add
add
mov
loope
mov
in
mov
mov
pop
out
and
or
(bad)
mov
push
jnp
adc
in
and
jecxz
adc
or
cli
or
gs
into
or
sar
retf
mov
inc
sbb
xchg
daa
mov
fldenv
sub
sbb
sub
adc
jp
inc
inc
or
lods
aas
mov
xchg
dec
js
div
sbb
inc
adc
ja
fdivr
popf
dec
and
pop
push
stos
mov
sti
inc
imul
paddsw
mov
test
lods
push
dec
ror
into
push
mov
inc
inc
sbb
push
sub
xor
les
(bad)
retf
loope
dec
dec
cs
mov
push
int
ror
xchg
xor
mov
in
popf
ror
mov
in
dec
repz
lea
push
(bad)
push
mov
cld
pop
in
dec
into
leave
pop
add
dec
data16
sub
in
outs
mov
std
pop
and
cmps
in
scas
or
and
inc
cs
cdq
add
js
ret
popa
fidivr
stos
and
sub
pop
iret
pushf
addr16
pop
pop
inc
dec
dec
adc
cs
xor
std
push
enter
xor
out
xchg
(bad)
sub
aad
(bad)
call
adc
inc
movs
mov
das
mov
sub
pop
mov
pop
cmp
pop
mov
adc
cli
jne
inc
lods
ret
adc
retf
cmp
push
mov
ds
loop
repnz
imul
out
jo
mov
push
test
(bad)
hlt
push
js
mov
pop
pop
stos
adc
push
push
mov
fs
cmp
cmps
ins
cmp
and
test
push
clc
mov
ret
xor
(bad)
mov
cmp
mov
ret
push
lods
retf
add
push
xchg
je
daa
push
mov
outs
(bad)
add
pop
push
movs
sub
dec
xor
inc
arpl
sub
push
jmp
jnp
icebp
arpl
stos
push
xlat
fisubr
(bad)
iret
stos
cmp
inc
xchg
push
(bad)
fist
lds
mov
or
cmp
mov
mov
or
gs
sub
fnsave
fsubp
push
mov
adc
mov
xchg
dec
jae
xor
outs
add
dec
icebp
mov
xor
mov
sub
push
scas
jle
fcomp
inc
mov
jae
iret
ret
sbb
xchg
pop
add
cld
ret
pusha
pop
pop
push
dec
or
pop
cli
cmps
xchg
cmc
and
adc
(bad)
jmp
nop
in
loopne
mov
lods
cmp
pop
mov
xchg
hlt
xor
retf
(bad)
jmp
(bad)
fld
movs
arpl
cld
inc
cmp
mov
mov
xlat
cld
mov
les
pushf
push
loop
(bad)
clc
enter
pop
ja
out
shr
les
in
xor
int3
aas
mov
jae
ins
sbb
cmp
push
popf
cmp
mov
sub
sbb
sub
mov
mov
cmp
xchg
fild
aam
enter
jp
sub
aaa
jb
repnz
pop
loope
cmp
inc
mov
jns
mov
pop
stos
outs
jno
enter
cld
loopne
xchg
jecxz
sbb
and
lds
dec
xchg
push
loop
add
add
add
push
and
es
add
mov
hlt
js
rcr
cmp
or
je
call
out
mov
mov
inc
lods
and
mul
in
(bad)
mov
stos
cmc
setp
fnstsw
add
mov
mov
les
xor
xor
pusha
nop
and
rcl
inc
ja
ins
jmp
dec
neg
sbb
inc
fucom
call
mov
sti
mov
or
out
mov
sbb
pop
mov
iret
movs
lds
fadd
fcmovne
(bad)
or
mov
mov
xor
mov
rcr
and
in
mov
retf
hlt
dec
popf
lds
rol
xor
popa
xor
or
loop
xor
add
cdq
push
and
test
mov
test
je
add
(bad)
cmp
push
dec
mov
inc
shl
cmp
or
(bad)
lods
push
jp
in
leave
dec
ror
cmps
sub
cmp
push
lods
push
push
aam
pop
lock
push
fs
icebp
jno
pop
pop
sbb
fcmovbe
(bad)
loopne
inc
(bad)
and
loope
and
mov
sbb
cmps
int
push
push
lea
ins
leave
push
dec
inc
mov
push
mov
sbb
and
adc
leave
gs
cmc
mov
(bad)
ss
sub
test
and
test
push
push
data16
mov
jmp
aas
(bad)
js
ret
(bad)
ds
cmp
jb
daa
not
mov
shl
inc
adc
daa
xchg
arpl
ret
add
lods
leave
addr16
jno
or
cmp
jns
mov
push
rol
sub
gs
test
sbb
pop
sub
and
fs
mov
add
dec
hlt
cmps
fisubr
cli
in
mov
cld
cmp
push
cdq
movs
sub
jge
jno
rcl
stc
inc
jns
dec
shr
inc
push
mov
or
mov
mov
mov
in
jo
ret
xchg
xchg
shl
dec
sbb
(bad)
fnstenv
jo
xchg
sbb
cmp
adc
cli
pop
jne
into
mov
add
sub
push
and
scas
loope
sbb
sub
mov
or
sub
imul
cmc
inc
mov
mov
mov
xchg
adc
jae
in
xchg
dec
xchg
sub
(bad)
pop
fdivr
xchg
aam
imul
jnp
daa
adc
ficomp
mov
out
loopne
gs
imul
out
sub
ds
jge
xchg
adc
cmps
jne
stos
in
pop
cmp
lods
push
ins
pop
mov
xchg
push
dec
lahf
imul
dec
xchg
sti
icebp
and
pop
out
mov
fsubr
cmp
mov
xchg
or
and
mov
fwait
stos
lds
movs
mov
xchg
mov
iret
test
pop
mov
imul
mov
mov
clc
mul
push
adc
sub
retf
loop
mov
ss
movs
jp
or
lods
dec
push
jecxz
mov
es
and
inc
call
out
gs
lds
mov
push
test
loope
push
xchg
leave
and
pop
call
mov
sub
ret
pop
sbb
push
cmp
fsubr
das
js
jmp
mov
and
aam
mov
mov
inc
ds
scas
sbb
fsub
jmp
jno
test
mov
cmps
movs
cld
jbe
das
ror
push
pop
sbb
sbb
je
data16
xchg
pop
adc
iret
xlat
push
movs
icebp
out
xor
lahf
mov
pop
loopne
test
adc
jo
mov
add
push
rol
dec
int
or
fidivr
outs
mov
in
les
adc
dec
lods
dec
cwde
ja
mov
mov
in
lahf
xchg
lods
(bad)
rcl
leave
xor
jne
push
xchg
(bad)
shl
gs
pusha
mov
mov
jge
xor
imul
ins
jo
ja
iret
mov
inc
aas
fs
jbe
jb
mov
fisttp
inc
add
mov
(bad)
fsub
pop
lock
push
jg
mov
sti
cmp
inc
mov
inc
sti
cmp
test
aas
sub
loope
sbb
mov
fyl2xp1
int
leave
popf
dec
retf
repnz
imul
pop
dec
jmp
inc
out
sub
in
ja
fmul
imul
das
jbe
cmp
out
retf
popa
arpl
jmp
xor
xor
dec
fimul
xchg
and
ins
aaa
inc
lock
cli
xchg
sub
mov
(bad)
repz
fs
mov
or
sar
fsubr
add
mov
jp
mov
dec
xchg
mov
xchg
jl
cld
fidiv
mov
in
stos
add
push
imul
sti
mov
jmp
adc
sbb
shr
pop
repz
out
popa
loop
(bad)
aas
adc
add
push
push
das
mov
hlt
js
and
lock
cwde
and
inc
test
pop
adc
out
ss
mov
inc
inc
dec
pusha
mov
iret
addr16
test
test
aaa
push
and
inc
jnp
pop
or
lea
mov
or
sub
dec
fdiv
loop
inc
ins
loop
sub
add
sbb
sbb
add
fnsetpm(287
data16
sub
push
movs
mov
push
(bad)
and
xchg
mov
jecxz
jecxz
stos
sbb
pop
in
imul
mov
out
ds
ret
(bad)
out
add
cmps
sar
sub
rcr
jbe
int
pop
sbb
push
jno
imul
dec
test
inc
dec
(bad)
cmp
mov
cmp
cs
push
xchg
or
or
cmp
ins
push
pop
cli
repz
xchg
push
test
or
mov
push
xchg
cmps
test
jle
retf
inc
xchg
fist
dec
(bad)
nop
adc
lahf
mov
shr
jp
sub
lock
or
and
pop
mov
pop
cdq
adc
mov
sub
stc
(bad)
mov
xor
or
ret
fcompp
mov
sbb
jbe
and
rcl
popa
mov
xor
sbb
ret
xor
push
mov
sub
mov
pop
mov
xchg
icebp
mov
xchg
cmc
mov
xchg
sub
shr
ror
int3
and
dec
jge
adc
syscall
mov
mov
xchg
(bad)
rcl
ins
mov
cdq
adc
out
ret
in
test
dec
in
adc
adc
(bad)
push
stos
or
div
loopne
lea
sub
adc
leave
out
ret
adc
mov
dec
into
aas
aam
adc
push
pop
call
xchg
aas
or
add
inc
sbb
std
and
push
adc
movs
out
xchg
icebp
gs
mov
inc
mov
retf
mov
movs
push
sub
adc
push
out
xchg
imul
lahf
jo
aam
(bad)
mov
and
stos
inc
cmp
into
jmp
adc
lods
call
aaa
and
or
jmp
jge
cmp
sbb
in
and
aaa
jae
fxch
out
fisubr
xchg
cmp
dec
retf
fs
jecxz
js
imul
rcl
cmp
sub
mov
jmp
loop
sti
add
aaa
test
cdq
sub
int
int
retf
imul
into
(bad)
sbb
stc
pusha
mov
xor
dec
icebp
cmps
sub
mov
rcr
popa
mov
xor
imul
xchg
adc
das
popf
call
daa
loope
es
mov
nop
(bad)
aaa
adc
dec
push
(bad)
cmp
daa
fmul
in
scas
fadd
cmp
(bad)
dec
add
lea
sbb
inc
mov
mov
out
inc
outs
dec
sub
mov
retf
jmp
mov
icebp
scas
jmp
ins
(bad)
dec
mov
inc
pop
pop
imul
mov
jmp
jne
cmps
outs
inc
jne
test
or
add
lds
int
sbb
sub
push
mov
fld
fnstenv
loopne
mov
or
popa
imul
pop
or
mov
jmp
pop
xchg
daa
fisubr
test
data16
int
js
mov
add
inc
push
adc
cmp
fist
mov
dec
in
outs
pop
faddp
sbb
mov
mov
lods
cmp
loopne
push
movs
int
inc
call
mov
xchg
push
adc
into
cld
popa
inc
inc
mov
xor
push
fwait
xor
test
cmps
sbb
dec
dec
push
cmps
xchg
fld
adc
es
test
les
lods
and
and
xor
mov
popa
dec
cmp
pop
push
jno
cmps
add
inc
pusha
clc
rol
ret
cld
test
add
push
(bad)
out
test
mov
aad
ins
sbb
repz
cmp
inc
xor
adc
adc
ja
push
cmps
lods
ss
(bad)
outs
cmp
pop
mov
pushf
xor
in
jl
ds
sbb
mov
ret
(bad)
pop
sti
add
pusha
cdq
sbb
inc
ins
dec
mov
stc
data16
fs
fild
jle
sbb
jns
mov
cmp
sub
test
or
loop
lock
add
aam
rcr
scas
ins
daa
mov
loopne
test
cmc
mov
fs
push
xor
(bad)
pusha
in
or
lea
xlat
pop
xchg
mov
mov
(bad)
fstp
sti
enter
sbb
mov
stc
cmp
clc
push
(bad)
cmc
aas
call
ins
mov
mov
add
comiss
je
mov
jae
ins
pop
dec
xchg
test
and
in
cmp
repz
cmp
xchg
rol
inc
call
jmp
and
or
outs
xchg
idiv
test
xlat
clc
push
or
jmp
test
dec
mov
mov
cmp
aaa
sbb
call
(bad)
out
adc
push
mov
movs
aam
inc
adc
mov
pop
js
pop
in
and
xchg
aam
push
aas
cmps
imul
sub
jmp
push
ds
sbb
dec
pop
fsubp
xor
ret
or
xor
xchg
cmc
(bad)
push
xchg
out
(bad)
gs
sbb
loopne
xchg
loope
dec
inc
mov
sub
push
inc
inc
fs
fdiv
mov
push
aad
jmp
hlt
stos
cmc
dec
cmps
lods
icebp
or
sub
xor
shr
jnp
dec
jl
sbb
cdq
jb
sub
arpl
scas
ret
xchg
mov
cmps
mov
fld
retf
add
jl
div
pop
aas
enter
xchg
and
mov
jnp
mov
cmp
fincstp
sub
jae
or
dec
sub
jnp
dec
mov
fwait
nop
xor
loopne
sub
xor
pusha
push
sbb
xchg
mov
mov
inc
sti
mov
dec
icebp
fldcw
fs
pop
mov
scas
mov
add
aam
loopne
or
cmp
in
cmps
cdq
inc
push
mov
push
cmps
cmps
push
or
push
cmp
push
outs
pop
or
xchg
daa
xor
or
(bad)
mov
mov
and
daa
xchg
lock
pop
call
out
mov
neg
add
test
xchg
rcr
cmps
call
out
sti
mov
mov
aaa
out
xor
cmp
jecxz
sahf
jbe
lea
cmp
mov
push
xchg
inc
das
jns
aad
lea
cld
stos
and
mov
out
ins
inc
rcl
mov
inc
adc
jnp
leave
mov
inc
fnstcw
adc
rcr
icebp
imul
cli
inc
and
pop
inc
shl
ja
xlat
loopne
push
stos
jl
pushf
push
pop
mov
inc
jns
sub
aas
inc
sar
lahf
aam
pop
mov
pop
(bad)
into
adc
(bad)
std
int
xchg
imul
imul
xlat
dec
xchg
and
movs
add
fld
add
lods
int3
jne
(bad)
retf
sar
and
inc
push
inc
div
xor
sbb
gs
shl
mov
cmps
sbb
jno
imul
pop
mov
movs
out
sbb
ins
fwait
pop
dec
or
cli
cmp
lea
push
js
mov
repnz
movs
div
add
stos
js
into
jne
and
fwait
jne
enter
pop
push
out
jnp
sbb
loopne
xor
cmp
mov
nop
cmp
call
fs
mov
rcl
sub
jmp
jmp
mov
pushf
xor
fcomp
shl
out
cmp
sbb
push
sbb
in
sbb
popf
outs
sbb
mov
into
cmps
xor
add
popa
pop
int3
and
mov
scas
daa
repz
stc
add
scas
aad
xchg
adc
jmp
dec
outs
push
aad
std
inc
dec
cmp
fsubr
xchg
dec
pushf
and
test
jmp
loop
ss
nop
pop
adc
add
stos
imul
out
mov
mov
jno
and
ins
mov
cmp
pop
adc
mov
dec
xchg
ret
or
mov
lods
fisubr
dec
xor
mov
call
mov
jne
jmp
inc
sub
dec
inc
jne
loopne
clc
sub
vpunpcklqdq
xor
push
push
push
xchg
xchg
mov
dec
mov
stc
mov
dec
sbb
fsubr
stc
or
leave
mov
push
aas
cli
test
push
xor
fucomip
fbstp
xor
inc
xchg
(bad)
cmp
lahf
mov
push
outs
das
mov
push
lahf
stos
mov
adc
or
stc
xchg
pop
es
cmp
mov
adc
pop
call
mov
mov
mov
and
icebp
or
jecxz
adc
jmp
mov
inc
sbb
and
mov
inc
mov
pop
jnp
push
cmp
pop
pop
jb
add
and
dec
shl
pop
push
retf
(bad)
in
(bad)
sub
mov
rcl
or
ret
ins
(bad)
outs
inc
fstp
dec
sbb
jb
sub
das
sbb
add
repz
dec
xchg
fldenv
or
cmpxchg
adc
fisttp
retf
xchg
xchg
and
push
imul
lods
test
repz
lea
cmc
pop
jp
imul
faddp
mov
jne
push
sbb
and
lods
popa
enter
mov
xchg
pop
jno
dec
nop
mov
in
sub
lea
nop
and
push
(bad)
call
out
daa
mov
ins
xchg
inc
test
jg
test
cmp
aaa
test
das
(bad)
sbb
or
adc
push
push
ins
xor
push
iret
pop
pop
sbb
mov
sub
out
fwait
(bad)
outs
adc
lock
mov
out
jmp
pop
imul
fs
arpl
mov
cmp
mov
(bad)
sbb
repz
je
cmps
popa
pop
ins
pop
sbb
push
xchg
jle
cmp
push
add
add
arpl
adc
xchg
adc
(bad)
jnp
and
jle
sbb
fbld
push
in
fimul
xchg
or
sti
lea
out
xchg
mov
mul
repz
sbb
jne
cmp
pop
sbb
shl
dec
push
dec
sub
in
ja
mov
jnp
aaa
test
movs
hlt
sub
in
mov
cmp
sbb
or
or
jns
into
mov
xchg
inc
sub
xchg
test
lds
mov
lahf
loope
xchg
loopne
jb
sbb
jne
retf
rcr
dec
xor
jmp
jno
pop
inc
or
cmp
pushf
mov
outs
inc
inc
jmp
int3
push
or
dec
out
mov
fsubr
lds
mov
leave
cs
xor
dec
arpl
inc
sti
cmp
or
xor
retf
pop
or
outs
xor
xchg
sar
out
gs
jge
and
cmp
inc
adc
push
inc
outs
ds
mov
test
mov
js
inc
fisub
call
popf
jae
mov
sbb
xchg
dec
fcomip
hlt
test
retf
or
mov
ins
or
and
mov
mov
mov
mov
mov
retf
and
cmps
jge
cmp
push
cs
xchg
fdivr
add
inc
fsub
dec
popf
div
push
scas
je
xchg
test
outs
jle
mov
rcl
mov
(bad)
scas
stos
daa
or
sub
das
mov
in
out
call
cmps
mov
call
or
add
xchg
outs
das
dec
scas
movs
mov
sub
sub
rcl
iret
enter
mov
(bad)
sub
mov
mov
or
mov
mov
outs
retf
add
jmp
cmps
adc
sahf
or
les
sub
shl
inc
loop
xchg
jp
lock
retf
jg
pop
pop
pusha
ds
mov
ins
pop
pop
pop
imul
call
mov
(bad)
imul
push
daa
test
push
aad
in
dec
mov
shl
mov
sbb
in
xchg
adc
out
ror
mov
je
stos
mov
rcr
test
fsubr
out
jp
rol
ja
xor
(bad)
mov
cmp
xor
xchg
loopne
xor
movs
(bad)
mov
fisttp
or
inc
sbb
sbb
clc
mov
repz
mov
pop
addr16
push
mov
cdq
sbb
pop
rcl
or
xchg
push
add
(bad)
jns
lea
(bad)
mov
jno
jbe
jns
and
(bad)
and
jle
inc
mov
mov
xor
xlat
push
fisttp
out
and
scas
gs
jno
cmps
mov
fistp
push
repz
fnstsw
pop
mov
iret
sbb
push
push
sbb
and
rcr
dec
sbb
clc
inc
je
mov
and
mov
push
sub
es
pop
cmp
xchg
or
dec
js
aas
stos
or
mov
dec
ss
jo
mov
mov
icebp
inc
push
les
pushf
cmps
push
stos
ja
mov
adc
imul
pop
mov
jns
dec
jmp
jns
xor
or
shr
mov
scas
aad
outs
push
pop
xchg
fwait
push
mov
mov
repnz
jmp
mov
cs
adc
jns
mov
jmp
inc
loopne
jo
add
test
cmp
push
scas
mov
dec
sbb
into
jb
pop
push
gs
jno
jne
repz
ins
jb
aad
retf
mov
xlat
push
dec
fild
sub
and
sbb
jmp
(bad)
mov
mov
sbb
sub
std
jmp
popf
push
lods
inc
mov
mov
movs
jmp
adc
imul
push
lds
mov
fnclex
mov
inc
push
(bad)
inc
xor
xchg
sbb
(bad)
cs
mov
rol
xor
and
sbb
mov
ins
sub
(bad)
jae
ficom
mul
cwde
adc
dec
test
xor
arpl
adc
jnp
push
mov
mov
int3
mov
fisubr
js
out
push
dec
mov
(bad)
stc
loopne
add
pop
add
sbb
inc
mov
mov
and
and
inc
nop
gs
mov
dec
mov
mov
jno
in
xchg
dec
adc
inc
fdivr
test
and
popf
jnp
adc
lods
jg
dec
jg
dec
repnz
stc
(bad)
inc
or
xor
add
repnz
mov
test
cdq
cmp
adc
int3
mov
test
rol
add
xor
retf
es
dec
ss
xor
fwait
mov
mul
fcmovu
inc
mov
stos
mov
jg
mov
mov
and
aas
add
mov
in
dec
mov
push
cmp
fistp
lods
fsub
inc
out
loopne
or
(bad)
xor
xor
jnp
xchg
mov
cmp
push
inc
or
js
cli
stos
cmp
cmp
in
pusha
pop
icebp
jb
in
pop
sub
ins
xor
sub
in
add
jno
sbb
mov
pop
loopne
or
cdq
dec
sub
pusha
in
sub
add
dec
inc
movs
ds
ror
fcomp
mov
add
loopne
mov
mov
pop
sub
lock
xchg
lds
mov
xor
sub
movs
mov
pop
pop
mov
call
fmul
out
es
aam
mov
fwait
pop
xor
call
pusha
jb
cmp
push
xchg
ins
mov
jb
sbb
fistp
jp
scas
adc
popf
jae
push
adc
pop
retf
sbb
or
add
mov
(bad)
mov
adc
xchg
shl
pop
rcl
cmps
out
mov
jl
rcl
iret
sub
div
inc
into
cmps
adc
movs
call
or
sahf
int3
addr16
push
adc
sar
xchg
test
(bad)
call
pushf
das
adc
push
cmps
push
stos
fld
iret
jno
cmp
mov
mov
mov
js
mov
movs
lock
xor
push
nop
sub
pushf
(bad)
(bad)
cmp
and
stos
jns
or
mov
mov
repz
mov
pop
popf
gs
bswap
pusha
and
sub
sbb
pushf
push
or
add
mov
lds
stos
push
mov
dec
dec
(bad)
test
test
xchg
pop
dec
aas
shl
mov
fdiv
jecxz
inc
jns
sbb
pop
jne
jae
inc
inc
xor
dec
add
pop
jb
icebp
dec
mov
xor
(bad)
adc
add
cmps
mov
sub
sar
daa
cld
sub
jle
pushf
push
fcos
test
fistp
sahf
leave
add
ret
je
sahf
leave
loope
loopne
cmp
dec
mov
(bad)
call
daa
jmp
inc
and
cmc
aad
jmp
dec
sub
daa
movs
push
xor
inc
cwde
mov
mov
lock
into
cmp
stc
adc
enter
push
push
mov
imul
mov
add
mov
int
jae
pop
jp
(bad)
ja
(bad)
jmp
and
or
aaa
inc
in
sti
mov
ret
jnp
or
mov
cmc
adc
in
jns
and
jmp
ror
idiv
ret
out
cmps
addr16
jne
add
mov
popf
add
pusha
push
(bad)
sbb
lahf
into
dec
push
jmp
sbb
mov
stc
outs
xor
mov
mov
and
bound
or
jmp
add
and
sti
js
lods
cmp
xchg
mov
mov
popf
push
mov
cdq
inc
(bad)
bound
stos
les
mov
mov
fucomp
cmp
jo
jecxz
and
push
and
xor
inc
(bad)
cmp
sub
mov
enter
out
or
aas
and
push
sbb
cmp
or
and
cld
clc
call
fdecstp
fcom
mov
xor
inc
mov
ss
in
cmp
mov
mov
mov
dec
adc
arpl
push
inc
mov
adc
mov
loop
push
xor
pop
or
push
dec
mov
dec
xchg
imul
cmp
ins
je
jl
call
ss
mov
repnz
pop
pop
les
or
xor
jmp
sbb
test
aad
icebp
pushf
pop
mov
and
mov
leave
mov
test
xchg
jl
pop
jno
jnp
cmps
out
or
fld
mov
jne
cwde
imul
sbb
xor
in
push
(bad)
push
xor
(bad)
hlt
stos
call
in
ins
pop
dec
(bad)
shr
aad
mov
or
cli
xchg
adc
arpl
in
push
lahf
(bad)
into
xor
out
and
xchg
cmp
inc
les
int3
dec
add
sub
mov
les
push
(bad)
out
mov
add
loopne
test
jg
mov
pop
xor
pop
mov
fninit
pop
lods
es
xchg
pop
mov
adc
or
aas
stos
xor
add
jmp
ja
mov
aad
in
addr16
out
fiadd
imul
and
std
push
(bad)
aas
mov
ret
pop
(bad)
sub
sub
mov
inc
push
ret
scas
in
mov
xchg
add
or
push
ds
loopne
(bad)
pop
cs
or
in
fiadd
or
cmp
mov
repnz
jmp
in
add
pop
outs
xchg
popa
fiadd
push
ins
out
dec
sbb
cdq
ja
repz
pop
add
xchg
jno
in
xchg
adc
sbb
sub
pop
sub
pusha
out
outs
xchg
out
dec
xor
or
push
xchg
mov
add
fistp
push
ror
arpl
mov
inc
inc
scas
xchg
and
loopne
cmps
xor
xchg
movs
out
inc
cmp
xor
mov
les
cli
leave
bnd
movs
cdq
sub
pop
xchg
leave
dec
dec
pop
mov
fdiv
and
pop
dec
xor
pusha
leave
gs
fdivr
and
imul
leave
test
fs
(bad)
iret
dec
fldenv
(bad)
sbb
out
stc
outs
in
pusha
dec
rcl
sub
popf
pop
sbb
out
push
cdq
add
xchg
lods
push
inc
ror
fcomp
pop
js
das
cdq
rcl
popf
ss
in
out
test
lea
cmps
fistp
mov
rcr
inc
add
lds
mov
hlt
in
cli
sbb
inc
push
pop
iret
les
test
xchg
dec
sub
stos
stos
dec
mov
std
in
shr
pop
lahf
test
push
scas
nop
pop
retf
jno
or
out
push
sub
(bad)
cmp
dec
push
or
mov
sub
jge
mov
push
xor
fstp
xor
jns
jno
repz
fist
fcomp
fadd
addr16
add
in
and
or
jae
adc
sbb
mov
mov
in
push
addr16
pusha
mov
sbb
cmps
ins
outs
ret
cmp
ins
std
push
sub
cld
push
mov
adc
cdq
test
cmp
ins
lods
pop
pop
pop
cs
mov
push
add
(bad)
loopne
sbb
daa
pop
shl
or
retf
fimul
repz
cmp
shl
xchg
lods
outs
fisubr
jl
(bad)
pop
lahf
addr16
jmp
xchg
sub
sbb
call
test
mov
push
push
pop
int3
push
or
movs
dec
call
arpl
mov
pop
xchg
rol
or
adc
mov
lods
sub
shr
popa
retf
xchg
mov
adc
lock
and
cmp
xchg
out
cmp
mov
adc
dec
xchg
lea
rol
or
cwde
call
xchg
out
mov
dec
sub
sbb
in
out
jb
ret
xor
adc
aaa
dec
mov
xchg
lods
cmp
pop
xor
fdiv
stos
dec
enter
push
push
sub
jo
(bad)
jno
mov
jno
xchg
repz
sub
hlt
sahf
(bad)
das
js
pop
pop
call
and
test
sub
and
movs
dec
shl
jle
pop
mov
pop
pop
inc
cli
adc
enter
push
loopne
mov
jle
mov
lods
les
dec
in
mov
outs
cmp
inc
fs
je
mov
jns
pop
xor
loope
add
mov
(bad)
outs
jnp
mov
push
or
stos
test
dec
outs
fadd
rcl
xor
(bad)
ret
dec
(bad)
dec
(bad)
pushf
add
out
(bad)
loopne
xor
ins
dec
retf
fs
inc
xor
ret
mov
adc
pop
xchg
loope
shr
sbb
sub
xchg
sub
call
pop
lods
xor
jne
repz
call
fldenv
pop
fsubr
mov
mov
pop
cmp
imul
out
cli
or
aas
cmp
int3
sub
cmp
(bad)
jmp
xchg
xchg
outs
das
daa
pop
mul
rcr
add
pop
sub
sub
adc
add
gs
ret
xchg
(bad)
cs
stc
mov
cs
push
dec
jmp
ss
(bad)
ins
mov
jp
lods
repz
fild
aaa
mov
xor
(bad)
lock
aaa
pop
xor
sub
ins
(bad)
pop
repz
add
test
(bad)
mov
ins
inc
jmp
jae
or
xor
inc
stos
or
mov
dec
inc
push
xchg
call
repz
inc
mov
in
sub
xchg
cs
jbe
mov
xor
cmp
cdq
mov
mov
test
movs
iret
pop
jne
mov
pop
maxps
lods
(bad)
sbb
mov
push
push
pop
call
jmp
inc
pusha
js
les
pushf
mov
dec
xchg
mov
xchg
lahf
push
jle
or
lods
aaa
sub
js
inc
sub
inc
stc
repz
dec
repz
sar
sub
push
mov
loopne
ins
test
repz
ins
fimul
add
push
gs
repz
or
fimul
mov
or
cmp
ret
les
jb
xlat
sbb
clc
icebp
ds
enter
outs
out
clc
or
mov
xchg
(bad)
cmps
add
mov
(bad)
div
mov
ret
retf
adc
movs
in
pop
das
call
add
je
ds
dec
mov
mov
jbe
loop
pop
lods
call
xchg
and
mov
xor
repz
add
sub
arpl
xchg
sbb
movs
jl
loope
mov
push
mov
iret
sbb
mov
es
rcr
mov
adc
clc
jl
aas
xchg
ret
inc
jbe
sbb
cmp
xor
push
jmp
clc
xor
cli
(bad)
rcr
mov
out
sub
sub
sbb
sub
dec
repnz
call
cwde
mov
movs
lea
mov
add
push
nop
xor
nop
imul
ins
ja
cwde
ss
or
loope
ret
sti
sahf
and
fldz
inc
jae
mov
aam
ror
mov
or
popf
retf
inc
popf
mov
cmps
or
rcr
fimul
mov
mov
sahf
inc
scas
(bad)
push
xchg
in
retf
stos
addr16
addr16
pop
dec
(bad)
pop
sbb
test
sar
or
cli
(bad)
xlat
sbb
dec
sub
sub
(bad)
iret
retf
dec
outs
fsub
add
add
ficomp
and
or
popf
popa
in
div
ja
sbb
xchg
fst
sbb
cmp
adc
jae
xchg
mov
inc
scas
sub
fcomp
pop
mov
push
dec
sti
in
repnz
jo
pusha
xchg
pop
mov
adc
mov
iret
inc
xchg
in
imul
sbb
cwde
or
adc
fnstenv
fcomp
cmp
mov
iret
jno
scas
ss
push
add
mov
aaa
push
and
sub
jl
in
dec
sub
push
or
jmp
dec
xchg
xor
imul
xlat
cli
xor
pop
test
mov
mov
mov
pop
sbb
in
sahf
movs
test
sub
mov
out
mov
inc
xor
xor
mov
enter
test
shr
xor
mov
jmp
rdpmc
shl
loopne
arpl
not
xchg
inc
pop
push
cmp
test
push
add
jg
jbe
rol
add
mov
pop
pop
cld
sbb
data16
jg
stos
push
adc
add
mov
xchg
fucom
inc
jmp
xchg
lea
sahf
lods
sbb
scas
std
jbe
shr
xor
adc
push
ins
popf
mov
repnz
mov
shl
ss
inc
in
idiv
pop
fs
push
cld
bound
test
jle
jbe
loop
inc
and
outs
xor
(bad)
mov
add
pop
add
jecxz
inc
xor
jmp
cmp
out
pop
and
lahf
int
push
out
in
jecxz
dec
pop
aaa
mov
add
push
leave
stos
vmovddup
leave
hlt
sub
inc
(bad)
repz
ror
rcr
rol
or
fldcw
int
(bad)
div
dec
sub
jbe
mov
test
or
inc
loop
jp
popa
ins
inc
inc
and
or
loope
stos
sub
(bad)
sbb
ficomp
dec
ins
cmp
dec
push
(bad)
clc
sti
xchg
cdq
into
pushf
mov
push
fild
test
sub
addr16
(bad)
pop
lock
mov
mov
mov
sub
mov
xor
cmp
test
test
lock
imul
shl
ret
int3
cwde
push
push
hlt
mov
push
inc
xchg
cdq
jge
inc
out
mov
sub
test
sub
pop
imul
fild
sub
adc
into
test
push
(bad)
aaa
in
cli
push
shl
add
enter
mov
mov
or
(bad)
gs
(bad)
shl
cmp
push
(bad)
mov
inc
cmps
xor
stos
repnz
aas
mov
jp
stos
fdivr
iret
stc
dec
js
cld
push
out
fs
jp
test
nop
movs
hlt
fisub
cmp
ja
mov
add
cmp
and
fsub
sbb
pop
mov
adc
xchg
leave
or
add
retf
lods
mov
pop
mov
push
pop
xchg
int3
dec
ss
or
cmps
jl
or
sar
jp
repnz
mov
add
cmp
(bad)
ja
in
jmp
cli
pop
rcr
cmps
dec
in
inc
sbb
push
cmp
popa
stos
addr16
leave
fs
cmps
test
lock
lds
dec
push
mov
pop
int3
pop
ins
jbe
sbb
cmps
xor
pop
nop
dec
cld
add
(bad)
mov
jb
add
xchg
mov
xchg
mov
sti
jae
scas
sbb
(bad)
xchg
adc
push
inc
bound
and
dec
pop
push
add
xor
jns
in
mov
ss
xchg
mov
inc
adc
(bad)
xchg
shr
and
dec
sbb
xor
fadd
rol
mov
bound
and
jnp
xor
shl
repnz
add
cmp
xor
xor
pop
repnz
pop
pop
or
cdq
jg
adc
lock
or
in
inc
adc
jmp
in
les
mov
mov
mov
adc
xor
xchg
cwde
dec
mov
les
cmps
lods
xor
test
movs
pop
lods
inc
iret
not
fimul
loope
push
ret
mov
inc
push
movs
or
add
fsub
pop
inc
adc
arpl
hlt
sub
mov
(bad)
dec
jle
pop
or
popf
cmp
fst
cmps
dec
adc
inc
mov
add
stos
push
xchg
cwde
jno
mov
xor
mov
(bad)
jo
mov
jg
adc
xor
sbb
mov
bswap
loop
mov
adc
out
leave
push
nop
xor
sbb
mov
int3
(bad)
hlt
arpl
cmp
or
(bad)
mov
pushf
push
mov
jmp
icebp
iret
inc
out
es
mov
dec
dec
and
or
add
rol
mov
push
cmps
mov
and
mov
arpl
pop
pusha
stos
rol
mov
sub
movs
pop
mov
mov
test
xor
cld
pop
clc
mov
sub
push
and
ss
fdiv
xor
clc
shr
ja
inc
in
das
and
mov
pop
jno
jae
jmp
pushf
xor
es
or
add
fstp
lods
push
arpl
mov
iret
lahf
add
scas
(bad)
or
inc
push
inc
add
push
mov
push
test
loopne
xchg
adc
test
sub
inc
loope
stos
es
sbb
xchg
mov
jp
jl
idiv
jo
dec
xchg
por
sahf
lds
cwde
pop
dec
fidivr
jnp
pop
mov
test
lods
stos
push
push
clc
lods
pusha
mov
retf
int
mov
inc
pop
fstp
xchg
inc
lahf
retf
mov
adc
mov
add
lock
sbb
imul
lahf
aam
mov
cmps
inc
xchg
retf
clc
(bad)
pop
jns
in
ror
jmp
add
iret
xlat
movs
push
xchg
shl
sbb
adc
pop
nop
mov
jae
(bad)
(bad)
repz
scas
movs
xor
dec
jp
clc
mov
pmulhw
and
aad
dec
inc
mov
clc
mov
add
sub
push
test
add
je
pushf
fnsave
dec
xchg
push
ins
ins
out
cs
retf
sahf
jne
jg
mov
in
sbb
repz
dec
(bad)
shl
push
sub
cdq
mov
dec
lds
cmp
pop
jae
jmp
mov
sub
cmp
pop
je
push
jns
fadd
adc
jb
js
out
cmp
mov
jmp
call
cmps
stos
xor
fcomp
and
sbb
dec
pusha
push
(bad)
adc
dec
test
push
sti
dec
jo
cmp
call
movs
sahf
cmp
mov
ror
clc
movs
call
aas
aad
inc
movs
into
push
cs
lods
std
xchg
leave
push
jg
or
das
test
mov
cdq
mov
lds
sub
mov
and
xchg
arpl
jge
push
cli
call
xchg
xchg
pop
fs
movs
out
imul
jae
push
daa
nop
fistp
test
mov
pop
in
pop
mov
mov
lahf
call
or
jmp
into
pop
mul
mov
and
push
stc
adc
adc
ret
xor
cmp
outs
mov
fistp
cdq
fidivr
mov
adc
jle
cli
sar
sub
jno
fisub
leave
imul
sbb
das
mov
aaa
bnd
cmc
jmp
xor
jno
cmps
mov
pop
dec
jp
jo
and
rol
cmps
shl
cld
mov
(bad)
aam
retf
mov
into
cmp
in
cmps
scas
push
adc
call
ins
dec
aaa
push
xchg
fadd
xor
iret
jae
jmp
jmp
xchg
test
imul
xor
adc
pushf
or
in
jmp
fldcw
and
pop
sbb
mov
test
fisttp
mov
les
dec
pop
adc
loope
mov
ret
mov
lahf
fcomip
push
(bad)
jmp
jb
inc
xchg
outs
push
ins
push
mov
pop
jmp
add
pusha
stos
call
sti
mov
mov
inc
sub
inc
dec
lds
jmp
and
pushf
data16
in
cmp
sbb
inc
push
sahf
and
cmps
(bad)
fisubr
sbb
mov
cmp
leave
es
or
loope
push
push
mov
mov
sbb
push
jl
sbb
jmp
sbb
xlat
mov
xchg
inc
mov
scas
inc
cmps
mov
aas
sub
xor
lea
jmp
popf
in
sbb
xor
out
cmp
mov
and
jecxz
jle
shr
xchg
push
loop
lahf
push
mov
pop
pop
xlat
jmp
jmp
push
or
inc
and
inc
out
sahf
xchg
pop
mov
test
and
or
mov
imul
jb
push
mov
mov
rol
dec
pop
adc
and
push
or
cmc
pop
int3
jmp
sahf
cmps
or
push
test
je
in
rcl
jo
jge
ret
mov
(bad)
push
cld
dec
adc
adc
rol
push
sub
ja
pop
sbb
push
das
cmp
arpl
imul
sbb
mov
mov
xchg
adc
mov
sti
jbe
xor
cs
jge
lahf
cld
test
xor
add
and
pushf
fwait
cmp
xchg
mov
nop
and
stos
outs
ja
dec
test
add
inc
leave
ret
cdq
and
iret
das
dec
xor
sbb
jae
xchg
dec
in
es
lea
pop
movs
das
out
rcr
std
sbb
mov
fnstcw
jge
sbb
lock
sbb
out
nop
fisttp
jecxz
cs
retf
cli
data16
loop
mov
aas
lock
ins
or
cmp
pushf
test
xchg
std
jg
adc
mov
repz
fisubr
pushf
outs
lahf
mov
ds
idiv
jmp
xchg
out
loopne
ins
and
jno
cdq
ins
jns
clc
mov
push
stc
test
daa
mov
(bad)
outs
repz
sbb
mov
push
iret
inc
ja
call
jb
(bad)
mov
sbb
ja
lods
jg
adc
and
lods
sahf
fisttp
xchg
in
push
(bad)
mov
pop
sub
pop
push
jno
lods
xchg
mov
xchg
push
jb
bound
stc
xchg
ds
stc
(bad)
cmc
imul
and
push
out
sub
jns
mov
or
and
jo
fs
xor
ret
or
fs
idiv
cmc
cmp
dec
es
jb
cmps
mov
sbb
pop
cmps
into
leave
and
push
sub
add
cmp
push
sbb
punpckhdq
pop
jo
sbb
call
xchg
imul
add
mov
out
sahf
out
into
jle
enter
mov
scas
xchg
adc
jmp
lea
mov
adc
sbb
pushf
outs
cwde
mov
int
inc
add
nop
fsub
inc
loopne
jno
icebp
mov
dec
wbinvd
inc
imul
gs
dec
mov
adc
gs
jl
(bad)
pop
das
test
cs
into
sub
sbb
shr
sbb
gs
jmp
mov
adc
fs
cmp
xor
hlt
sbb
inc
jns
ror
lods
sbb
bound
gs
push
jmp
mov
xor
mov
xchg
and
pop
dec
jno
rcr
fld
cmp
retf
ror
fstp
jl
aam
test
mov
xchg
stos
adc
dec
push
lods
call
push
mov
in
(bad)
jo
out
adc
scas
pop
(bad)
rcr
adc
dec
jnp
fmulp
sbb
fldcw
in
ror
(bad)
xchg
cwde
sbb
adc
aaa
fnstsw
jns
(bad)
sti
jns
sti
fwait
sub
ja
or
sahf
in
sbb
xchg
add
imul
jmp
add
retf
aam
jp
push
dec
cmp
(bad)
sub
les
repz
xchg
movs
pop
stc
inc
and
sbb
add
(bad)
mov
dec
push
push
push
push
in
dec
test
cwde
mov
shl
stc
(bad)
hlt
test
xor
sar
or
add
jne
jb
jne
sbb
mov
sbb
jg
(bad)
iret
das
jmp
test
and
pusha
ret
jne
cs
mov
imul
jp
fcomp
loope
and
imul
xor
dec
ret
data16
xchg
imul
add
movs
cli
sbb
dec
stos
test
ss
cli
movs
jl
add
dec
mov
add
cmp
xchg
sar
retf
test
leave
aas
imul
imul
jle
das
popf
jmp
pushf
sahf
(bad)
jmp
xchg
leave
ins
xchg
dec
jb
fiadd
mov
data16
or
cmp
out
push
out
add
cmp
and
cwde
fisttp
xchg
aas
sbb
and
pop
xchg
xchg
cmp
lods
push
retf
cmc
loopne
clc
xor
dec
jg
pop
xchg
icebp
mov
popa
addr16
fsub
cmp
dec
or
jne
cld
mov
pushf
push
call
(bad)
test
in
pop
adc
add
push
clc
adc
adc
loopne
idiv
push
sbb
ror
into
and
packuswb
shl
sbb
cmp
jae
mov
into
and
(bad)
lea
in
or
test
mov
or
xor
add
ins
lock
pop
push
push
lods
push
ror
leave
lock
nop
xchg
gs
and
mov
xchg
ds
push
add
retf
jmp
mov
cmc
mov
sbb
xchg
jp
xchg
js
pop
sub
(bad)
call
lods
mov
add
not
sub
xor
sbb
mov
push
(bad)
mov
test
in
jp
popa
das
clc
out
mov
mov
or
cmp
cmp
ja
mov
mov
paddd
outs
frstor
sub
aad
out
cdq
mov
mov
cli
lea
movs
sbb
mov
sbb
mov
scas
fsub
outs
fsubp
aaa
mov
and
sbb
mov
(bad)
leave
cmps
mov
out
daa
popf
pop
jmp
test
push
and
pop
retf
lea
push
(bad)
add
(bad)
arpl
cld
mov
test
sub
pop
or
aad
and
lods
and
retf
jl
sbb
fisttp
mov
add
call
imul
jns
sub
push
xchg
mov
sbb
popf
pop
push
jle
jl
xchg
in
jns
dec
cmp
and
jmp
and
add
push
test
sbb
mov
sbb
dec
cwde
repnz
add
loope
xlat
movs
or
jle
push
fst
xlat
in
stc
or
adc
or
lahf
jle
mov
fcom
jne
push
neg
lods
call
mov
mov
mov
pushf
jmp
xchg
push
xchg
data16
test
cmp
popf
int3
cmps
shl
and
das
cli
jne
fs
stos
hlt
imul
inc
inc
in
mov
jp
and
icebp
cld
in
sub
inc
mov
push
ja
test
push
lods
clc
xor
leave
ins
cdq
add
rol
jbe
(bad)
outs
pop
sub
xor
ret
ror
out
mov
test
and
cwde
gs
das
cmps
pop
ja
in
push
repnz
scas
dec
std
add
lods
sub
and
mov
daa
dec
call
sar
ret
dec
icebp
adc
pop
test
jecxz
movs
in
popa
pop
push
dec
loop
js
movs
retf
out
test
pusha
repz
je
mov
sbb
je
jge
pop
sbb
mov
mov
loop
mov
packsswb
les
clc
test
in
and
pop
bound
shl
out
movs
mov
push
or
jbe
add
mov
mov
pop
out
sub
icebp
mov
fcomp
add
mov
pop
mov
out
add
das
pop
data16
mov
popa
inc
dec
aas
jecxz
out
xor
cmp
add
mov
push
xchg
pop
scas
(bad)
cmp
(bad)
dec
enter
test
jecxz
or
gs
push
push
adc
mov
shr
mov
and
pop
mov
fstp
inc
test
out
add
rcl
add
std
mov
xchg
into
cmp
aas
push
xchg
mov
test
jp
gs
pop
sti
push
dec
mov
sub
jae
cmc
add
scas
mov
cwde
int3
jb
out
(bad)
lods
inc
int3
fucomp
jmp
ret
pop
fucomi
data16
sub
inc
ds
pop
stos
pusha
stos
(bad)
loope
retf
arpl
pop
ins
inc
xlat
push
aaa
jecxz
in
je
lods
mov
inc
ds
mov
fwait
clc
call
pop
sahf
stos
inc
outs
add
mov
repnz
in
mov
pop
(bad)
test
ins
dec
cld
lahf
add
cmp
sbb
pop
call
push
clc
xor
pop
inc
emms
out
es
fnsave
inc
or
mov
ds
dec
int
add
mov
add
jbe
jp
push
push
std
retf
add
xchg
sub
xor
dec
loop
xchg
sub
and
loop
sub
sar
iret
xor
cdq
fucomip
les
or
inc
aad
ins
addr16
popf
and
jno
xor
out
pushf
add
(bad)
je
cmc
pop
loope
in
push
(bad)
aam
xchg
lods
or
mov
mov
rcr
aam
enter
hlt
mov
xlat
movs
mov
cdq
shl
xor
ja
push
ins
or
loopne
pop
mov
push
push
rol
loop
mov
cmps
scas
leave
mov
and
adc
retf
and
xor
sahf
and
adc
test
mov
stos
add
fidiv
punpckhbw
es
xor
shl
nop
jo
adc
ja
fsubr
pop
jg
(bad)
pop
or
xchg
inc
jle
or
push
mov
pop
shl
pusha
push
dec
(bad)
das
jmp
sub
sbb
push
shl
call
repz
mov
(bad)
(bad)
outs
out
pop
adc
(bad)
loopne
popa
iret
test
pop
push
cmp
mov
icebp
pop
adc
leave
xor
ins
in
adc
repnz
dec
sbb
pop
mov
arpl
repnz
sbb
nop
sbb
loopne
jl
bound
jae
movs
addr16
test
or
xchg
lahf
inc
pop
mov
das
or
gs
cmp
xchg
push
jae
push
mov
jae
out
add
retf
mov
ja
mov
inc
shl
mov
adc
jecxz
in
dec
pop
mov
out
mov
call
scas
jge
pop
rcr
lods
pop
xor
push
sbb
push
xchg
or
out
pop
popf
jle
arpl
aam
sub
test
mov
cli
(bad)
mov
gs
(bad)
das
cmp
imul
lods
fstp
ror
sbb
xchg
mov
mov
out
rol
and
xor
lds
stos
add
sub
and
in
ret
repnz
mov
fisttp
sbb
outs
mov
mov
mul
outs
mov
sahf
xor
daa
push
xchg
adc
jp
sbb
aam
repnz
jge
push
dec
in
push
je
jnp
sbb
test
push
nop
or
push
pop
jmp
mov
fcomp
pop
out
adc
dec
test
(bad)
iret
sti
stc
cdq
inc
mov
push
je
mov
frstor
jge
xchg
adc
inc
mov
mov
outs
je
xor
xlat
movs
aas
stos
inc
push
xor
xchg
dec
ss
mov
aas
pop
mov
push
cld
xchg
sub
popa
in
adc
arpl
pop
iret
mov
xchg
fwait
jl
mov
call
dec
pop
test
push
retf
xor
xchg
lock
push
or
out
dec
pop
mov
pop
test
mov
xchg
cmps
push
push
out
and
push
pushf
xchg
sub
(bad)
and
mov
outs
adc
loop
xor
bnd
in
add
push
lods
inc
mov
aaa
retf
enter
sub
je
fsubr
sbb
fisubr
mov
aaa
iret
xor
sbb
imul
xchg
sbb
xlat
fld
mov
mov
pop
daa
rcr
sbb
lock
in
or
retf
sar
jp
cmp
dec
test
pushf
ss
mov
ret
push
(bad)
(bad)
lods
retf
sbb
cwde
mov
leave
pop
movs
xchg
mov
sub
sub
adc
fsub
mov
mov
mov
push
pop
out
cmp
test
sti
pop
dec
pop
sub
add
outs
add
ficom
cmp
cmp
fist
out
cmp
adc
sub
push
jns
xchg
mov
xor
es
mov
repnz
out
loope
xchg
mov
mov
mov
call
or
iret
or
xchg
jecxz
and
lods
cmps
repz
cmc
pop
daa
cmp
sahf
movs
pop
inc
adc
outs
dec
sbb
in
dec
sub
dec
push
stc
xlat
loop
xchg
mov
ins
cmp
or
mov
or
out
fidivr
push
push
dec
rcl
xchg
int3
pop
stos
inc
mov
xor
xchg
ss
xor
cmps
imul
pusha
or
popa
mov
push
push
ror
lahf
mov
es
out
jecxz
push
add
xor
or
push
pop
dec
out
sar
lock
mov
or
inc
outs
fst
je
sub
pop
or
push
cmp
ins
lock
imul
xor
sub
adc
ret
repnz
add
fstp
(bad)
mov
iret
mov
mov
lahf
loope
sub
daa
pop
sbb
(bad)
pop
jb
mov
popf
and
xchg
out
cmp
out
fist
(bad)
cmps
sbb
inc
push
and
scas
adc
and
stos
retf
leave
nop
mov
scas
xchg
or
popa
sti
bound
bound
or
ss
sub
les
retf
es
pushf
dec
mov
mov
jbe
mov
adc
shl
adc
mov
push
leave
push
mov
mov
stc
pop
imul
adc
push
loope
enter
push
movs
nop
retf
iret
aad
xchg
js
data16
out
fcomp
sub
sub
and
imul
xchg
pop
imul
loope
out
jle
push
je
imul
dec
fdivr
mov
jp
out
sbb
mov
or
mov
lea
jmp
retf
scas
std
mov
jns
shl
and
cld
inc
sbb
call
mov
mov
pop
adc
pop
scas
jnp
pop
mov
jl
pop
cmp
xchg
xor
mov
jmp
sub
xor
cdq
xchg
sub
retf
mov
sbb
int3
xor
retf
mov
jecxz
popa
fistp
cli
aam
cmps
call
repz
xor
push
jmp
pushf
bound
addr16
cmp
inc
sub
sti
fist
ror
test
int
and
mov
inc
mov
and
sbb
and
jg
fidivr
scas
adc
lods
mov
movs
popa
jns
sbb
imul
pop
add
jb
icebp
push
pop
lods
mov
or
jnp
mov
pop
add
fbstp
cmp
repnz
xor
rcl
jl
or
cwde
sahf
push
sub
push
fcom
loope
es
jmp
pusha
dec
in
and
cld
inc
lods
or
pop
mov
dec
inc
dec
dec
fstp
jge
or
ins
pop
pusha
ret
hlt
add
(bad)
repnz
in
sti
pop
stos
xor
icebp
aam
pop
cmp
je
or
imul
sub
shl
movs
test
xchg
icebp
and
push
test
mov
sub
repnz
sub
(bad)
int
ror
mov
inc
das
cmc
addr16
sub
(bad)
sub
pop
fnstenv
dec
aaa
mov
dec
and
(bad)
mov
jo
ss
mov
push
fwait
bound
das
sar
aam
push
test
dec
or
into
enter
mov
repnz
mov
fbld
cmp
and
mov
mov
cmc
les
imul
jle
jmp
fsub
mov
dec
xor
or
mov
dec
jmp
adc
push
sahf
sub
lds
cs
dec
dec
lods
xchg
lea
push
(bad)
outs
xchg
mov
dec
jo
push
lods
iret
cdq
add
lahf
xchg
clc
push
fistp
xchg
jge
mov
jecxz
mov
cmc
fmul
jne
adc
ins
adc
pushf
dec
mov
and
(bad)
dec
ins
int3
cdq
(bad)
cmc
fisttp
mov
movs
lock
pusha
sbb
gs
mov
mov
xchg
mov
mov
mov
es
not
mov
pop
popa
jmp
xchg
aad
xchg
mov
pop
or
iret
dec
mov
leave
push
xor
adc
jo
pop
mov
fbld
or
subps
push
ins
pop
push
int3
and
test
dec
popa
cmps
pusha
daa
clc
xchg
mov
add
imul
mov
rcl
loop
jnp
(bad)
rcr
(bad)
test
cmp
cld
sub
mov
imul
dec
into
das
test
jne
adc
mov
ss
aas
dec
mov
push
xor
mov
call
in
xor
(bad)
lahf
add
aad
inc
cmp
repz
iret
jbe
imul
arpl
nop
nop
idiv
inc
fmul
inc
and
adc
cmp
imul
das
fnstenv
jmp
popf
(bad)
movs
mov
cld
mov
in
sti
repz
jecxz
cli
mov
xchg
adc
gs
mov
adc
and
pop
mov
mov
loope
(bad)
test
or
movs
pushf
adc
(bad)
mov
fsub
jg
or
mov
adc
pushf
popa
cs
shl
adc
aas
mov
push
es
les
test
mov
mov
xor
arpl
cmps
dec
dec
xchg
(bad)
fs
sub
into
cmp
push
retf
lods
mov
mov
xor
cmp
daa
dec
leave
fldenv
in
cmp
xchg
sub
aam
les
pop
pop
shl
pop
mov
icebp
dec
lds
ret
push
es
jno
movs
cwde
idiv
lods
sbb
ja
add
repz
mov
xorps
xor
adc
mov
push
sub
pop
mov
pop
pop
jge
(bad)
sub
sbb
xchg
xlat
and
arpl
addr16
int
fimul
mov
pop
std
js
dec
shl
mov
into
xchg
xor
mov
pop
or
repnz
hlt
inc
idiv
cmp
sbb
les
aaa
fidiv
test
enter
pop
push
sub
pop
push
je
and
aad
or
sbb
cmp
rol
adc
or
push
push
cmp
loop
add
out
call
mov
cmp
ins
(bad)
shr
xchg
push
out
mov
addr16
push
mov
fidivr
rcr
and
adc
mov
mov
sahf
inc
nop
repnz
xor
pop
sub
xchg
(bad)
into
ret
rep
sbb
and
xchg
lahf
bsf
enter
cmps
sbb
das
jg
dec
imul
ror
mov
and
mov
push
(bad)
(bad)
cmp
out
add
cmp
jp
xor
push
call
cmp
inc
sti
in
sbb
mov
jae
lock
mov
sub
mov
fld
xchg
add
or
cmp
dec
jne
ins
and
cmp
and
movs
push
into
sub
jns
adc
loope
or
mov
or
pop
bound
test
ins
cwde
bound
stos
and
inc
mov
pop
jae
test
jge
hlt
cmp
dec
sbb
jae
add
daa
dec
cmp
dec
lea
in
pusha
adc
sahf
or
adc
enter
fs
adc
shl
lds
stos
jmp
aad
scas
push
dec
lahf
sub
cld
ja
cmps
dec
fcomi
or
pop
xor
sub
mov
and
dec
imul
lahf
mov
add
add
mov
ja
stos
test
sub
out
icebp
mov
(bad)
call
out
cmp
ja
pop
aad
push
(bad)
imul
inc
sar
adc
cmps
push
fwait
mov
imul
lea
dec
jae
pop
scas
ds
adc
mov
inc
repz
movs
test
fst
jmp
or
aaa
mov
xchg
arpl
sbb
or
js
(bad)
pop
or
dec
in
cli
jbe
dec
push
dec
pushf
or
cmc
aam
outs
mov
mov
cs
test
dec
push
sub
sti
inc
xor
(bad)
fdivr
pop
mov
ins
mov
push
and
add
pop
fmul
es
pop
adc
leave
push
mov
cld
das
imul
pop
imul
aas
fidiv
aaa
pushf
mov
jl
dec
mov
mov
mov
push
test
pop
dec
mov
inc
fbld
aas
repnz
arpl
fsubr
arpl
sbb
dec
jmp
jnp
in
mov
stos
pushf
pop
push
or
enter
push
xchg
mov
mov
jle
out
inc
mov
cmc
data16
jmp
or
fld
jl
sub
mov
add
mov
xchg
cs
cmp
xchg
jmp
cli
stos
sbb
dec
inc
xchg
and
sar
push
sbb
aas
jl
lock
push
pop
into
aas
xchg
and
adc
sahf
test
cmps
adc
pop
mov
jge
into
jecxz
outs
in
fst
push
jno
in
inc
inc
dec
jp
jne
jp
xchg
push
xlat
cli
aam
ror
jns
js
sub
cmp
mov
(bad)
cmps
and
add
aad
add
mov
rol
(bad)
daa
fsub
sbb
pusha
push
(bad)
dec
and
fbld
mov
mov
imul
cdq
mov
dec
sbb
xchg
mov
enter
and
es
cmp
movs
ror
jl
sbb
mov
(bad)
shl
je
into
loopne
or
mov
aaa
lock
sub
cwde
jmp
xchg
scas
repz
sahf
lock
push
add
add
(bad)
xchg
clc
inc
mov
ficom
das
push
mov
dec
jo
retf
pop
inc
cli
sbb
ds
cmp
and
cmp
ror
adc
jb
pop
jne
cmp
scas
mov
mov
movs
into
inc
xchg
pusha
mov
cmp
jle
cmc
xchg
xlat
inc
jmp
push
bound
pop
mov
outs
aam
loop
or
mul
retf
or
retf
push
or
mov
cmp
aad
outs
and
add
jns
xchg
fimul
mov
vprotd
rol
or
fwait
je
ins
ja
hlt
mov
out
push
dec
adc
pause
jle
jnp
mov
lahf
inc
jo
cmc
add
adc
int3
jb
jmp
adc
imul
ret
push
ins
sbb
je
dec
xchg
mov
inc
and
mov
in
std
addr16
xor
jmp
sbb
popa
pop
ds
inc
loope
out
xor
test
pop
hlt
imul
xor
adc
sub
inc
out
jne
push
pop
mov
repnz
mov
call
cmc
mov
inc
adc
mov
popf
push
enter
fsubp
ins
adc
inc
sub
jne
inc
push
add
ficom
outs
xchg
js
pop
hlt
outs
stos
popa
jb
mov
cwde
xor
pop
lock
xchg
adc
mov
inc
daa
add
xchg
push
inc
dec
mov
(bad)
cmc
sete
and
into
mov
lea
popf
mov
dec
pop
inc
fidiv
adc
adc
add
das
cdq
mov
(bad)
adc
or
and
imul
jo
dec
dec
adc
shl
pushf
mov
aaa
aam
or
(bad)
das
xor
lods
inc
lods
inc
(bad)
mov
and
sub
fild
stc
outs
push
xor
cmp
lds
and
and
mov
into
dec
xor
mov
loop
mov
push
cli
ficom
lods
add
dec
scas
es
cmp
cmp
outs
test
in
push
xor
bound
pop
mov
xchg
icebp
mov
cmp
xor
mov
adc
adc
loopne
push
repnz
adc
adc
bound
outs
mov
mov
inc
pop
mov
pop
adc
js
mov
call
xlat
push
stos
stos
stos
into
pop
mov
push
aam
or
push
retf
inc
rcr
out
test
xor
mov
jmp
lods
lds
cmc
inc
ror
add
arpl
mov
mov
sbb
push
(bad)
and
test
add
mov
pop
mov
and
push
xor
pushf
add
mov
dec
mov
sti
je
jns
cwde
add
in
xchg
mov
pop
cmps
fwait
cs
push
out
pop
enter
xchg
jmp
add
aaa
xor
(bad)
mov
inc
lds
add
(bad)
xchg
out
push
shr
jne
or
push
and
sub
loop
les
pop
int3
mov
outs
sti
pop
shl
jecxz
dec
mov
lock
(bad)
lock
stos
push
xor
sub
jmp
mov
ja
(bad)
mov
push
and
cmc
cmp
out
enter
adc
push
cli
xor
push
sbb
mov
jp
dec
inc
repnz
cmp
or
inc
into
(bad)
xor
pop
push
add
rcr
xor
(bad)
ins
outs
push
inc
loope
ror
in
sub
pusha
pop
lahf
cmp
popa
mov
call
and
pop
int
pop
or
lods
mov
or
cmp
push
aaa
mov
clc
js
add
and
sub
call
fwait
adc
add
icebp
call
and
and
inc
inc
dec
push
xchg
jo
call
xor
stc
jae
pop
mov
adc
inc
sbb
jecxz
sub
lods
sbb
dec
jg
add
ficom
cmp
sub
sbb
xchg
es
sub
jb
test
dec
repnz
iret
mov
or
iret
push
mov
int3
stc
xlat
pop
repz
pop
loope
aad
push
push
sbb
cmp
jge
aad
cmp
xor
or
or
add
mov
jg
in
mov
pop
jmp
in
sub
xor
call
lods
adc
dec
div
jle
data16
movs
xor
xlat
mov
inc
ja
addr16
rcr
repnz
mov
aas
in
xlat
xchg
mov
and
movs
not
ins
add
mov
ror
inc
inc
mov
loopne
jne
or
inc
cld
cmp
loopne
inc
repz
cmovle
out
outs
ja
scas
pop
stos
mov
pop
into
adc
(bad)
cmp
and
mov
cmp
(bad)
(bad)
add
cli
pop
retf
push
xchg
imul
in
repz
inc
jbe
or
loopne
mov
dec
leave
dec
popa
mov
cmc
fiadd
or
lds
and
xor
scas
outs
inc
xchg
sbb
pop
mov
inc
lea
adc
stos
popa
cs
mov
jle
fisttp
test
pop
out
jge
sar
xor
sar
stos
ss
mov
(bad)
jge
jp
mov
inc
and
mov
dec
lea
cmp
mov
sahf
int3
jp
sub
inc
dec
popa
pop
jbe
push
(bad)
sub
jbe
mov
inc
ins
jno
cmps
ret
sub
jnp
ins
mov
fwait
adc
stc
xchg
pushf
dec
jp
mov
mov
xor
test
and
inc
sbb
sbb
out
repnz
es
cmp
xchg
xor
data16
je
dec
mov
cdq
inc
(bad)
out
pop
adc
imul
sub
add
popa
mov
pusha
sub
out
enter
xchg
xchg
jmp
out
int3
cmp
dec
(bad)
ja
pop
cmp
scas
retf
icebp
popa
aaa
jmp
or
adc
mov
adc
aaa
hlt
jne
pop
add
add
es
shl
jmp
cmps
sub
loope
ret
mov
add
and
xchg
xchg
mov
lods
ret
or
call
ficom
fcom
lahf
jg
xchg
cdq
(bad)
out
dec
cli
xor
les
pop
push
out
xchg
add
fild
mov
mov
leave
test
cmp
int
shr
ss
cmp
jle
jns
jmp
jg
xor
mov
sub
push
aaa
dec
xchg
pop
mov
mov
fwait
add
or
add
ins
dec
(bad)
mov
fld
adc
stos
add
cmps
lods
pop
xor
arpl
sub
jge
out
shr
sbb
out
mov
cli
xchg
sbb
mov
(bad)
cmp
je
dec
xlat
mov
pop
ror
jge
js
(bad)
ins
arpl
cmps
push
js
paddd
ss
and
inc
jns
ds
pop
xchg
fisubr
movs
pop
cld
mov
stc
add
push
mov
call
sub
xlat
jbe
fimul
jne
xchg
push
mov
cmp
mov
clc
push
jmp
fs
push
mov
or
int
pop
cmp
push
int3
daa
shl
cwde
jb
lods
pop
xor
mov
ficom
cmp
pop
pop
retf
inc
retf
jmp
cdq
sar
mov
imul
in
test
sub
cmp
test
sbb
daa
xor
enter
jmp
jne
rcr
(bad)
cli
pop
inc
aad
or
xchg
cwde
sub
push
jno
not
mov
rcl
test
or
inc
ja
dec
sbb
inc
sar
push
mul
call
inc
das
push
mov
dec
fdivr
pop
jo
inc
pop
inc
in
adc
mov
sub
xor
popa
pop
mov
rol
dec
(bad)
mov
pop
stc
xchg
int
jbe
loop
test
std
inc
adc
aad
lock
push
shl
ror
push
inc
pop
xor
scas
adc
or
retf
push
inc
cmp
sar
stos
shl
sub
sbb
and
lods
addr16
inc
mov
sub
or
push
xor
mov
jmp
cmp
jno
test
xchg
jnp
ja
call
mov
out
inc
sti
jbe
dec
fld
(bad)
cdq
xchg
add
sbb
push
sar
hlt
aam
cmc
or
es
pop
push
popa
in
mov
gs
call
fbstp
data16
and
fcmovnbe
mov
neg
repnz
sbb
sub
mov
pop
add
inc
clc
push
scas
jp
out
sub
cs
in
jmp
add
dec
dec
fwait
in
xor
icebp
sar
dec
out
cld
imul
ret
repnz
mov
xor
fcom
mov
mov
dec
ja
dec
imul
add
cmp
xchg
loope
mov
cs
and
fwait
outs
xor
cmps
mov
data16
(bad)
lods
or
cmp
cmp
pop
in
cld
jmp
mov
and
pop
xchg
inc
push
mov
int
(bad)
xchg
sub
rcl
dec
into
movs
call
mov
push
fsub
aad
inc
scas
hlt
mov
xor
out
data16
fwait
or
push
nop
xchg
push
mov
imul
xor
stos
mov
loop
mov
mov
inc
pop
sub
cmp
push
stos
xor
(bad)
push
mov
mov
lods
call
in
jg
cs
add
fistp
xchg
pop
xor
xor
mov
dec
or
lds
or
sbb
jno
cdq
mov
int3
jns
ja
mov
push
mov
ds
jmp
xor
in
push
xchg
dec
lds
ror
add
cmp
mov
xchg
jge
inc
xchg
loop
nop
rol
cmp
push
mov
rcl
pop
sbb
test
add
push
sub
sub
int
push
test
add
push
dec
jnp
push
(bad)
cs
out
pop
dec
or
popa
jo
push
mov
jl
movs
cld
pop
add
dec
adc
xlat
std
lahf
sub
and
adc
cmp
xchg
cli
call
cmc
lea
jp
ins
call
imul
std
std
sbb
popf
ds
jbe
imul
loopne
mov
xlat
(bad)
and
call
std
(bad)
and
mov
sub
xchg
dec
mov
push
push
push
jp
repnz
and
xor
movs
call
ror
mov
popf
push
test
or
mov
jb
push
dec
xor
add
cmp
mov
fsubr
sub
and
out
cmp
jmp
xor
bound
xchg
mov
mov
push
xchg
cdq
dec
inc
and
popf
xchg
(bad)
lds
pushf
in
sub
int3
jb
mov
or
dec
xor
cmp
pop
imul
es
mov
in
mov
fmul
adc
(bad)
jbe
scas
dec
mov
push
mov
enter
rcr
push
out
movs
daa
add
fucomi
fs
push
and
mov
pop
in
xchg
mov
in
push
cs
test
dec
jmp
push
pop
pop
mov
and
jb
(bad)
es
or
stos
xor
in
push
add
xor
dec
stos
jae
mov
mov
(bad)
psubusb
test
dec
dec
icebp
mov
or
loope
idiv
sbb
mov
mov
or
sahf
xlat
xchg
sbb
add
mov
adc
or
nop
imul
ret
jmp
fld
lods
dec
push
push
into
pop
int
mov
inc
popf
add
mov
cdq
(bad)
dec
add
mov
mov
or
mov
loop
jl
ins
inc
lods
add
je
dec
ret
in
adc
fnstsw
iret
dec
aam
cmp
repnz
pop
(bad)
xchg
adc
movs
push
jno
inc
call
(bad)
jmp
pop
cmp
xchg
pop
in
dec
js
(bad)
sub
rol
and
div
aaa
push
inc
test
in
adc
and
inc
cmp
out
cmps
jb
jnp
rcr
out
rcr
ins
mov
xor
cmp
adc
jmp
add
sahf
cmp
mov
mov
dec
das
xor
mov
cmp
mov
dec
addr16
xchg
arpl
pushf
test
dec
xchg
mov
add
pop
push
sahf
aaa
(bad)
(bad)
xor
pop
adc
getsec
ds
sbb
rol
retf
sub
adc
xor
int3
ds
cmps
adc
in
sbb
fild
inc
imul
cmc
cmp
gs
sahf
push
push
push
pop
dec
mov
xor
int3
push
std
pop
iret
push
cmps
cld
mov
in
sbb
lea
lea
call
sbb
mov
add
xor
imul
ror
mov
cmp
popa
jo
pop
mov
lock
adc
push
ins
addr16
cmp
and
push
enter
jmp
and
mov
inc
jmp
lods
sbb
out
xor
hlt
mov
pop
adc
mov
fcmovnb
pop
repz
pop
fstp
xchg
jge
xor
ja
mov
js
xchg
xor
fsub
and
clc
adc
in
xor
add
jns
(bad)
pushf
pop
adc
push
cmp
jbe
push
pop
mov
cdq
scas
loopne
pusha
bnd
in
(bad)
dec
sti
and
(bad)
cmps
sbb
not
pushf
xchg
inc
or
hlt
call
les
and
mov
fimul
xchg
inc
aam
jno
imul
jp
xchg
jae
pop
or
call
mov
cmps
in
sbb
popa
sbb
and
and
and
xor
out
inc
pop
push
push
push
add
jl
dec
sbb
loope
pop
dec
arpl
call
imul
(bad)
jmp
(bad)
adc
sub
cmc
pop
xchg
sar
sbb
scas
(bad)
sub
mov
sbb
stos
mov
(bad)
inc
xlat
jg
mov
inc
jb
xchg
push
or
test
xor
jg
(bad)
(bad)
mov
mov
pop
push
es
xor
mov
sub
js
ret
lods
jae
cmp
clc
jecxz
push
fsub
or
retf
mov
xor
addr16
push
xor
pop
push
mov
adc
add
mov
in
sar
pop
ja
pop
les
cmp
and
push
(bad)
jle
pushf
cld
mov
fwait
daa
nop
enter
jl
or
xchg
xchg
rcr
das
sbb
xchg
sub
xlat
in
cmp
loope
cmp
into
fdiv
(bad)
shr
cmp
mov
out
jo
arpl
neg
mov
fdiv
jecxz
sub
push
in
mov
ret
(bad)
movs
jle
ret
cli
fdiv
cmp
in
xchg
outs
(bad)
lds
neg
dec
in
adc
vcvtss2sd
bnd
retf
sahf
mov
gs
repz
xchg
cmp
pop
xchg
inc
out
add
mov
movs
pop
xchg
and
cmc
shl
mov
cmpps
jg
or
js
mov
sahf
push
cmp
jge
add
loopne
mov
xchg
test
dec
push
push
in
(bad)
into
out
add
repz
jmp
mov
xor
pusha
mov
lds
or
fdivr
mov
addr16
jae
xlat
mov
and
add
push
or
aas
push
jae
fisub
stc
mov
mov
adc
sahf
and
sub
dec
cmp
xor
sbb
jge
and
(bad)
xchg
rol
jne
add
and
sar
xchg
xor
inc
push
xchg
(bad)
xor
mov
jmp
inc
cmp
cld
and
in
ret
movs
popa
push
push
cmp
imul
sar
mov
mov
lods
jne
sbb
enter
push
repz
les
mov
jb
pop
stos
push
jp
scas
adc
arpl
cmps
or
cmp
ret
les
repz
cmp
ret
daa
popf
lahf
inc
mov
cwde
xor
pusha
les
jae
pop
mov
rol
lods
adc
inc
sbb
daa
or
cmp
pop
test
rcl
bound
adc
cmc
stos
xchg
aad
mov
shl
dec
cld
inc
sahf
jmp
pop
mov
dec
jmp
dec
call
jno
pop
test
jo
(bad)
icebp
push
inc
sbb
jo
mov
outs
outs
xchg
fstp
or
mov
or
nop
jns
lock
fst
(bad)
movs
mov
dec
in
mov
inc
mov
icebp
call
dec
clc
pop
xchg
test
jmp
fidiv
int
cdq
fild
cmps
loopne
in
or
imul
pusha
push
dec
sub
idiv
stc
add
lahf
call
js
pusha
xchg
jp
dec
jmp
cmps
sub
xor
shl
int
inc
sub
fisub
xchg
or
(bad)
and
inc
mov
xchg
xchg
jbe
es
data16
mov
rcr
arpl
jb
or
test
das
pop
mov
(bad)
inc
adc
into
movs
mov
lock
jb
je
jmp
ror
add
push
mov
jae
ss
xor
sub
sbb
mov
xchg
test
mov
into
xchg
mov
call
adc
movs
test
fst
(bad)
ret
iret
and
or
pop
fs
add
jns
push
push
fsub
aad
push
pop
lock
out
cmp
inc
mov
jp
cmp
pop
test
push
mov
xor
lods
or
out
int3
shl
and
fisub
xor
daa
xor
sbb
shl
xor
rcl
nop
inc
and
dec
(bad)
jmp
mov
cmp
aam
lods
xchg
dec
in
sub
int
jns
and
loop
xor
das
xchg
xor
jne
dec
cmp
pop
loopne
data16
dec
jne
fsubr
fidivr
pop
(bad)
jbe
pop
sub
dec
dec
sbb
loope
mov
adc
xchg
stc
in
xor
fisub
push
lea
test
pop
aad
add
data16
outs
sbb
xor
out
popa
imul
fistp
test
cs
aaa
dec
jle
sti
cmp
cmp
retf
addr16
ins
adc
dec
cmp
cmp
test
inc
dec
inc
add
iret
icebp
mov
push
mov
out
loope
sbb
sbb
push
mov
mov
ins
mov
cwde
loop
ret
ins
fs
scas
pop
(bad)
aaa
dec
jecxz
fwait
enter
(bad)
inc
dec
outs
ins
loopne
xchg
sti
push
lock
fs
inc
ret
stos
mov
out
dec
addr16
lods
daa
mov
std
lds
jne
and
push
lahf
push
fisubr
cld
imul
mov
xor
mov
int
imul
aam
xor
xor
mov
pop
pusha
fmul
jp
xchg
hlt
jbe
out
test
jmp
mov
xchg
and
ret
int
movs
ss
xor
sti
stos
out
cmc
cmp
(bad)
jl
outs
pop
in
(bad)
push
pop
dec
aas
test
mov
add
js
add
mov
jmp
push
aam
test
scas
adc
mov
inc
push
ds
inc
jl
bound
test
push
inc
mov
loope
outs
jmp
adc
xchg
push
mov
xchg
mov
fiadd
cmp
iret
adc
retf
outs
or
mov
jno
and
call
inc
aam
push
mov
sub
mov
jo
push
cmps
dec
pop
loope
mov
cmp
pop
pop
loop
cmps
outs
and
mov
jmp
pop
sbb
xchg
push
hlt
jg
inc
mov
mov
scas
shl
and
and
jb
jbe
scas
xchg
enter
push
add
inc
nop
rcr
push
loopne
nop
push
xchg
push
inc
inc
aam
js
pop
dec
fsubr
mov
mov
fnstenv
fstp
sub
jmp
loope
mov
inc
add
ret
aaa
pusha
pusha
or
xor
ss
dec
leavew
sub
lahf
cld
cmp
pop
xchg
aam
mov
sti
addr16
maskmovq
xchg
lods
and
sub
pop
and
push
pop
sbb
pushf
(bad)
push
xchg
xchg
fstp
hlt
std
fdivr
or
push
push
xor
mov
jecxz
mov
imul
(bad)
or
movs
sbb
sbb
inc
test
sbb
inc
cli
lahf
mov
and
lock
mov
push
shl
sbb
ret
fmul
push
inc
mov
das
mov
inc
fidiv
fistp
das
and
adc
je
push
xor
mov
inc
outs
jns
mov
jl
sahf
fwait
je
lea
int3
cmps
test
xchg
xchg
mov
and
mov
push
pop
sahf
mov
ja
aaa
test
fimul
lock
clc
daa
push
add
repz
adc
es
mov
mov
xchg
mov
cli
hlt
lods
ret
enter
enter
out
cmp
sbb
sub
sar
add
shl
push
fidivr
push
push
mov
es
lods
pusha
nop
sub
mov
not
xchg
loope
jecxz
fild
mov
aad
inc
jns
das
mov
sbb
es
sti
push
sbb
mov
mov
jnp
test
cwde
and
jl
and
mov
sub
cmp
adc
dec
adc
call
out
adc
push
loop
in
push
stos
add
push
mov
mov
lods
fadd
in
sub
mov
mov
lock
inc
(bad)
xlat
jecxz
imul
jp
sahf
jg
push
jae
mov
push
cdq
add
nop
adc
iret
jmp
(bad)
in
jne
cwde
retf
aaa
rcl
rcl
mov
sahf
jb
or
btc
mov
lods
cmp
push
std
jle
or
stos
add
cmps
xchg
pop
loopne
mov
adc
cwde
xchg
dec
or
or
rol
scas
imul
inc
fcomp
xchg
clc
inc
mov
or
sbb
mov
out
mov
and
and
xor
fs
std
lock
sbb
inc
ds
outs
inc
test
hlt
(bad)
push
jns
div
add
pop
(bad)
leave
jecxz
icebp
sahf
mov
mov
iret
push
jo
fdiv
dec
sbb
pop
lahf
jmp
mov
xchg
fstp
sbb
(bad)
out
pop
test
mov
cmp
jo
lods
mov
clc
jg
(bad)
cmps
int
std
ret
pop
mov
xchg
mov
outs
arpl
loope
push
pop
gs
out
mov
fwait
push
jo
cmps
jmp
fwait
das
aas
fiadd
(bad)
inc
fidivr
imul
in
pop
test
lods
jns
popa
and
jae
daa
int
les
inc
pop
sub
mov
jp
dec
jmp
push
stos
xchg
test
int
jle
fld
sub
out
xchg
jae
out
and
out
dec
dec
imul
add
or
or
inc
movs
cmp
dec
jmp
push
lods
sti
stos
fs
mov
les
es
rol
mov
push
sti
(bad)
mov
nop
cmp
les
daa
(bad)
jecxz
or
and
iret
inc
rcl
push
fcomp
adc
outs
cld
dec
fcomp
dec
mov
cmps
xchg
cli
jp
cmps
out
out
in
js
xchg
xchg
or
lahf
popa
jno
mov
ficomp
push
stos
nop
pop
imul
sub
mov
(bad)
into
stc
loopne
cld
pop
cmps
sub
pop
cmp
loop
jno
arpl
or
mov
sbb
retf
pusha
imul
scas
xor
cvtpi2ps
test
outs
mov
xchg
repnz
or
(bad)
inc
pop
ret
mov
inc
scas
inc
sub
xchg
mov
xchg
loopne
sahf
sahf
cs
add
aaa
mov
mov
sub
mov
push
push
stc
mov
call
int
in
jne
js
bound
out
jg
rcr
hlt
pop
add
jge
xor
add
(bad)
pop
mov
cmp
fsubp
cwde
push
sbb
shr
sbb
push
xchg
inc
sar
dec
lods
and
sub
and
aaa
mov
add
xor
xchg
(bad)
scas
add
inc
dec
inc
xor
inc
(bad)
das
rcr
retf
fwait
dec
leave
or
xor
xor
pop
jo
inc
pushf
hlt
jno
dec
cmp
cmc
add
cdq
aas
adc
ret
cmp
inc
mov
lods
or
mov
sahf
int
loop
popa
into
retf
jle
xor
mov
imul
xor
cmc
scas
fmul
in
fmul
call
or
ror
mov
test
xchg
loop
nop
or
fld
cld
push
movs
ret
pushf
lahf
lahf
adc
pop
and
js
ins
xchg
push
test
jmp
adc
jno
rol
fist
mov
push
jmp
out
(bad)
pop
push
push
xchg
(bad)
cs
xor
test
adc
test
mov
xchg
cmp
lods
ss
loopne
mov
add
or
adc
arpl
es
int
adc
inc
xchg
add
inc
xchg
and
sub
mov
loope
test
test
push
das
and
outs
fbstp
shl
sahf
pop
mov
(bad)
jecxz
pop
lds
mov
pop
xor
mov
icebp
cdq
xchg
mov
or
pop
pop
inc
dec
jg
dec
mov
int3
sti
sbb
xchg
ja
adc
sub
add
cmp
cmp
inc
xchg
int3
(bad)
mov
push
stos
cdq
outs
jmp
or
aam
add
cli
(bad)
adc
gs
mov
and
cdq
inc
sbb
and
xor
loope
iret
loop
sbb
sbb
push
nop
movs
sub
mov
es
xchg
shl
popf
dec
pop
aas
sub
(bad)
arpl
and
inc
je
jle
gs
or
loopne
xchg
cmp
xchg
popa
xchg
das
adc
popa
inc
inc
or
xor
jmp
mov
call
dec
pop
pop
ins
cmp
or
jmp
imul
ret
jb
inc
mov
ret
int3
inc
rol
mov
rol
add
aad
rcl
call
je
dec
sbb
repz
(bad)
sbb
jb
and
xor
cmc
daa
cmps
sub
push
(bad)
retf
sbb
add
mov
aam
ror
sub
pop
loope
cdq
in
and
sub
bnd
jne
push
mov
inc
jmp
sbb
add
mov
pop
aas
dec
js
leave
sub
xor
xchg
jl
imul
fadd
in
sbb
aas
sub
add
sub
cli
les
cmc
mov
inc
ftst
jg
cmp
jnp
adc
pop
(bad)
int3
push
jecxz
push
jecxz
out
aad
xchg
sub
loopne
xor
add
retf
ret
xchg
les
or
retf
retf
adc
daa
sbb
mov
mov
jmp
stos
mov
push
xchg
aad
into
or
enter
jge
les
(bad)
repnz
sar
pop
mov
sub
std
data16
cdq
imul
es
scas
inc
jne
or
sbb
jne
mov
sahf
(bad)
shr
in
jle
inc
ins
jno
loop
int3
and
mov
pushf
cmp
jne
mov
mov
sbb
gs
mov
xor
fisubr
cli
xchg
ss
nop
(bad)
pop
gs
adc
idiv
add
jge
sti
push
std
or
jecxz
rep
pusha
cmp
mov
xchg
cmc
loop
sub
pop
inc
or
dec
fisttp
jb
push
cmps
jle
mov
(bad)
or
xor
push
cmp
cld
imul
pop
outs
mov
push
aam
jg
(bad)
mov
fisub
rol
jle
std
fmul
retf
popa
mov
mov
mov
loop
cmp
and
add
inc
mov
ret
ss
add
add
fcmovnb
loop
push
enter
xchg
scas
aam
dec
(bad)
pop
test
pop
pop
icebp
ret
cmp
dec
ds
or
inc
js
add
mov
or
lods
std
sbb
mov
lods
pop
fadd
es
ss
aaa
xor
adc
ins
ds
fidivr
stos
fs
imul
inc
cmps
xor
mov
cmp
call
es
mov
pusha
in
mov
js
or
cmp
mov
in
loope
ja
movs
stos
loop
mov
mov
fsubr
sub
in
sub
enter
cmc
aam
mov
inc
test
pop
push
pop
or
cs
mov
retf
(bad)
sbb
xor
fdiv
in
push
add
mov
shl
(bad)
xchg
jno
mov
mov
pop
fst
mov
div
sbb
fmul
dec
or
pop
and
leave
sub
imul
inc
js
fiadd
scas
mov
adc
test
push
ja
and
adc
adc
mov
out
cs
jge
jns
push
sahf
xchg
ja
mov
les
or
lods
pop
or
sub
mov
or
add
mov
xchg
sub
popa
enter
adc
clc
(bad)
cmp
add
dec
jmp
(bad)
out
xor
push
mov
xchg
inc
imul
mov
ja
mov
retf
pop
mov
push
in
imul
outs
push
pop
mov
cmp
mov
hlt
dec
je
mov
(bad)
stos
pusha
ret
push
cmps
pop
push
cmps
out
jbe
stc
scas
mov
les
jnp
sti
jbe
cmp
cs
lahf
sub
cmp
(bad)
and
cmp
lods
add
addr16
stc
jle
in
mov
push
rcr
lock
in
sub
adc
sar
mov
sahf
imul
cmp
cmp
loopne
lods
ins
ins
push
and
or
xchg
ror
cs
loope
jno
lods
add
sar
pop
xchg
ror
stos
gs
mov
std
xor
jl
pop
mov
(bad)
fabs
into
rcl
aam
push
or
and
(bad)
mov
sbb
scas
daa
push
sbb
inc
xchg
mov
or
das
dec
xchg
dec
dec
inc
mov
mov
mov
sub
iret
adc
jbe
sti
je
xchg
pop
jne
add
aad
jg
add
pop
and
fisttp
add
xchg
push
fadd
adc
fbld
ins
or
inc
es
ja
cli
scas
das
lea
dec
loopne
sub
cmp
leave
stos
inc
mov
jg
jmp
(bad)
shl
outs
and
sbb
pop
rol
rcr
sahf
(bad)
adc
paddb
inc
push
lock
loop
xlat
out
cmp
test
repz
push
mov
and
xchg
jecxz
dec
test
inc
fcmovb
inc
or
out
lock
test
adc
mov
mov
mov
add
sti
push
ficomp
fsub
enter
fwait
jne
xchg
loopne
sbb
mov
bts
inc
jo
xchg
ret
js
xchg
cmps
movs
sub
pop
fisub
fisubr
xchg
mov
loop
in
(bad)
mov
jmp
and
inc
cli
mov
mov
push
sub
out
push
sbb
push
jb
test
dec
adc
inc
(bad)
dec
jge
fwait
stc
and
popf
test
rol
adc
xchg
jecxz
addr16
push
fbld
aad
out
cmp
add
xchg
cmp
sbb
fwait
scas
pusha
sbb
das
mov
clc
cld
pop
lds
cs
lock
int3
xor
mov
mov
div
fiadd
es
mov
pusha
dec
push
sbb
js
push
sbb
mov
jp
xor
or
shr
nop
mov
(bad)
cmp
ret
(bad)
or
jns
jbe
xor
cmp
push
clc
adc
hlt
(bad)
cdq
jo
int
jecxz
pop
retf
or
repnz
push
cmp
movs
loope
inc
gs
dec
and
arpl
xor
and
xchg
fimul
test
data16
(bad)
jg
jns
mov
sbb
add
and
pop
inc
imul
movs
dec
add
dec
cmp
cmps
scas
jns
jge
loopne
test
cwde
mov
mov
jo
or
push
push
popa
inc
cmp
ins
push
(bad)
jmp
inc
fwait
movs
add
push
rol
ss
inc
xor
shr
push
inc
pop
add
out
cli
add
out
mov
xchg
pushf
xchg
shl
xchg
(bad)
inc
cmps
xor
ja
inc
inc
push
pop
sbb
push
fisub
xacquire
rcr
stos
outs
adc
inc
arpl
call
dec
pusha
jno
inc
and
popf
mov
cld
sbb
sub
scas
adc
add
scas
scas
jo
jp
test
xchg
rcpps
mov
sub
dec
push
shl
mov
retf
ror
test
clc
out
scas
cmp
inc
jp
mov
cmp
jnp
sbb
pop
fwait
(bad)
cmc
mov
xchg
retf
xor
inc
imul
inc
xor
inc
(bad)
pop
push
push
pop
in
outs
aam
ror
push
or
push
test
sub
sti
out
fbld
adc
lods
les
adc
mov
or
cmp
cmp
mov
jbe
jl
push
jns
into
push
std
xchg
fstp
fwait
sar
call
idiv
pop
std
pop
dec
cmp
dec
aad
mov
pop
popf
fcomp
adc
pusha
xchg
std
mov
push
fdiv
les
push
addr16
mov
ss
dec
adc
jp
outs
ins
psubsb
(bad)
rcl
adc
add
sbb
imul
xchg
repnz
mov
pop
enter
gs
adc
ss
jmp
xor
or
jmp
xor
and
(bad)
pop
packsswb
mov
div
aas
jge
jb
enter
jmp
icebp
fnstenv
inc
inc
mov
ja
in
test
sbb
popf
inc
pushf
push
cmp
into
pusha
jecxz
arpl
add
inc
or
popa
popa
add
cmp
dec
dec
test
sbb
dec
lahf
popa
nop
rcr
neg
es
outs
repz
cs
push
or
xor
jo
sti
stos
jnp
adc
push
int3
(bad)
mov
pop
add
cmps
addr16
iret
push
rcr
xor
fsubr
xor
push
xchg
outs
inc
std
lods
push
xchg
cs
nop
pop
shl
adc
movs
mov
xchg
mov
call
jmp
add
xchg
or
jp
fist
push
jae
repnz
mov
call
push
addr16
(bad)
jns
add
aas
cdq
les
push
jb
imul
leave
nop
jmp
sbb
cld
(bad)
jns
imul
adc
push
out
jae
(bad)
mov
(bad)
sbb
mov
pop
hlt
je
imul
je
test
ror
pop
push
mov
pop
dec
movs
out
and
push
call
dec
int3
mov
dec
xor
stos
fwait
pop
retf
jge
push
clc
xchg
and
mov
shl
push
adc
pop
pop
inc
shl
mov
fld
mov
pop
sbb
(bad)
out
mov
nop
cmps
mov
or
clc
std
mov
push
ja
(bad)
sbb
adc
pushf
mov
push
cli
nop
mov
adc
and
mov
ja
jnp
rcl
push
pusha
stos
movs
loope
mov
(bad)
xor
adc
inc
mov
nop
dec
lods
rep
mov
(bad)
sub
push
cwde
sbb
sbb
out
les
xchg
and
lock
mov
pop
cwde
jb
cmp
in
inc
lds
imul
retf
ja
std
add
dec
neg
cmc
ja
rcr
leave
in
adc
or
push
mov
inc
outs
sub
sub
xchg
mov
xor
ficom
xchg
test
xchg
int
leave
icebp
xchg
sbb
rol
mov
jb
xchg
xor
es
and
popf
neg
pop
pop
push
(bad)
jecxz
test
push
mov
or
push
pushf
lods
mov
inc
(bad)
shl
stos
mov
add
mov
inc
sbb
ret
or
popf
rcr
outs
push
xchg
jl
hlt
pusha
jne
pop
sbb
cs
pop
call
push
sbb
xchg
push
setp
cmp
fsubr
into
xor
sub
adc
fst
sub
enter
cmps
jge
mul
(bad)
ror
sub
mov
jo
pop
sub
cmp
ss
push
test
lds
add
fild
leave
push
jl
jl
pushf
repnz
xor
or
adc
in
mov
int3
addr16
xchg
mov
rol
jbe
lods
(bad)
jmp
outs
mov
int
xchg
out
jl
xchg
or
jge
rol
or
scas
fcomp
(bad)
int
cmp
dec
mov
push
ins
lahf
(bad)
arpl
cmp
call
and
ins
(bad)
mov
sub
push
(bad)
aam
jp
and
hlt
fdivr
mov
mov
push
and
pop
out
sub
add
or
push
add
imul
hlt
push
push
(bad)
mov
push
push
mov
cmps
icebp
out
mov
inc
cmp
cmps
mov
sbb
sub
ret
in
jbe
or
jno
sub
repz
js
sub
adc
(bad)
imul
mul
cli
xor
mov
int
jmp
pop
jb
mov
ja
iret
add
mov
cmps
cmp
and
int3
mov
mov
aas
xor
cs
mov
dec
pop
fadd
dec
test
and
ins
xchg
jl
fild
inc
push
dec
jge
popf
ds
mov
add
sbb
out
stos
iret
into
or
test
mov
push
test
add
mov
hlt
inc
pop
ja
inc
mov
addr16
mov
ficomp
adc
inc
mov
pop
out
in
jne
sbb
lea
imul
les
xchg
inc
test
pop
test
bound
les
int3
nop
and
mov
ds
cdq
fbld
xchg
inc
pop
jp
(bad)
test
repnz
cwde
xchg
cmp
lahf
mov
push
mov
inc
or
sbb
sbb
jmp
push
stos
push
adc
add
mov
mov
fiadd
adc
lock
sbb
lds
dec
and
dec
stos
stc
js
ss
dec
adc
push
inc
xchg
pusha
mov
retf
movs
(bad)
enter
add
mov
in
inc
loope
int
data16
dec
mov
mov
mov
mov
push
dec
mov
data16
sti
cmp
data16
fucomp
mov
fisub
mov
mov
mov
fisubr
xchg
das
test
fs
jns
mov
aaa
pop
pop
or
push
repnz
mov
push
jno
out
out
xor
push
mov
fisub
aaa
lods
inc
clc
out
xchg
mov
inc
dec
ja
xchg
xor
cdq
sbb
or
daa
mul
and
push
(bad)
sbb
jmp
jae
jmp
or
movs
and
pop
in
out
shr
jno
scas
xchg
int3
inc
mov
sti
sar
and
f2xm1
push
push
test
adc
pop
stos
out
jp
adc
sub
or
stos
mov
jle
aad
not
jo
inc
jo
and
push
retf
out
loopne
jne
les
or
mov
cmp
sub
cld
inc
dec
jle
add
mov
outs
adc
jmp
fmul
add
fmul
push
jns
mov
push
loopne
mov
add
mov
int3
mov
sbb
repnz
xchg
xor
jne
add
sub
or
cmps
call
or
cmps
add
fild
mov
inc
cmp
and
sahf
and
inc
call
fmul
lahf
jmp
cmp
stos
icebp
cmps
cs
ret
cli
xlat
std
data16
cmp
push
pushf
lahf
mov
cdq
jns
pop
sub
xchg
bound
xchg
sahf
pop
loopne
pop
inc
add
jo
sub
data16
xchg
sbb
std
xchg
test
pop
lea
or
and
popf
jl
icebp
ror
in
daa
cmp
(bad)
rol
xor
push
push
cdq
cmp
and
fisttp
imul
adc
inc
cwde
mov
jle
xchg
leave
xchg
jp
pop
or
test
pop
pop
nop
aam
dec
cmp
(bad)
test
loop
movs
div
push
mov
sahf
inc
adc
sub
out
sub
lods
test
inc
nop
adc
fbld
fwait
cmp
push
rcr
pop
mov
xchg
mov
xchg
not
pop
add
out
sub
dec
inc
inc
xor
gs
xchg
fs
xchg
fcomi
cmp
inc
sbb
xchg
stc
stc
sbb
mov
jecxz
nop
sbb
xor
mov
pop
sub
cld
mov
push
int3
(bad)
ins
repz
xchg
cmp
jmp
mov
push
xor
ins
test
ror
fwait
push
popa
jge
(bad)
jmp
int
ins
push
cmps
xor
fadd
or
fld
jne
outs
int
fnstcw
mov
into
out
dec
pop
dec
cmc
pop
vmovapd
jbe
fnstcw
popa
inc
mov
aaa
dec
mov
adc
jbe
mov
loopne
aaa
and
push
pop
cmp
inc
cwde
xchg
xchg
and
dec
sbb
aaa
or
mov
push
scas
mov
xor
and
imul
xchg
sahf
push
mov
lds
or
ror
xor
es
pop
sbb
sub
into
xchg
jns
inc
mov
mov
(bad)
outs
cmps
sahf
sub
lods
inc
add
adc
xor
cmp
or
mov
inc
fst
je
mov
popf
mov
sar
loopne
ficom
in
mov
cmc
ret
mov
pop
iret
iret
aas
loopne
int
mov
stc
mov
pop
int3
test
je
lock
mov
mov
ds
shl
cmp
icebp
mov
cdq
jle
je
aam
inc
rol
in
loope
ss
test
mov
movs
std
cmps
adc
dec
stos
add
test
dec
adc
scas
mov
cmp
div
jmp
test
mov
aad
mov
iret
test
xor
ficomp
stc
sub
addr16
mov
mov
cmp
jecxz
stos
jp
inc
xchg
lock
jl
ret
fdivr
test
std
xchg
mov
arpl
cmp
xchg
ins
push
movs
push
add
test
mov
xlat
adc
jno
dec
push
jb
push
dec
jb
fistp
jns
addr16
pop
popf
xor
pushf
iret
and
and
dec
adc
dec
leave
mov
cmps
cmps
or
cmps
dec
in
imul
sahf
mov
cmp
inc
inc
pop
mov
fiadd
into
test
push
xchg
mov
fbstp
out
jmp
mov
addr16
ffree
xchg
fdiv
icebp
leave
cld
enter
loope
shl
shl
dec
sbb
mov
mov
ja
out
ret
add
addr16
mov
daa
enter
dec
push
das
data16
gs
call
js
add
lods
ret
call
inc
addr16
push
fisttp
out
sbb
push
pop
in
push
outs
push
adc
mov
scas
xor
dec
pop
cmp
push
sbb
jno
pop
xchg
jmp
inc
sahf
jp
sbb
imul
ret
mov
(bad)
(bad)
inc
add
pop
cdq
xchg
adc
sbb
mov
retf
aad
hlt
cmp
outs
lds
mov
(bad)
jl
jno
mov
push
jecxz
adc
mov
rcr
out
(bad)
loope
mov
mov
push
in
mov
xor
xchg
fcmovnu
sbb
fidivr
mov
pop
pop
fdiv
rcr
dec
fcmovnu
int
ins
jg
scas
and
add
push
jnp
leave
rcr
iret
xchg
xor
xchg
idiv
(bad)
push
outs
push
mov
push
sbb
mov
addr16
mov
shl
adc
dec
dec
jns
stos
mov
xchg
xchg
mov
(bad)
inc
(bad)
mov
icebp
xchg
or
lods
imul
xchg
mov
out
icebp
icebp
jno
inc
sahf
and
(bad)
scas
xchg
dec
dec
or
mov
push
icebp
jno
je
les
cmp
jmp
js
push
into
mov
pop
jp
call
push
xor
ret
out
and
jle
cmp
test
int
mov
ins
loopne
lods
mov
shl
cmp
in
arpl
fdiv
clc
ror
lods
test
fsubp
lods
pop
mov
add
push
scas
sbb
mov
adc
xchg
and
ja
inc
or
cmp
jmp
or
call
fs
push
enter
push
(bad)
mov
jle
sub
xor
(bad)
pop
popf
sub
dec
pop
cmp
dec
push
jae
mov
mov
cmp
mov
xchg
sub
xchg
ins
out
jbe
das
ret
mov
mov
fcomp
pusha
xor
or
sti
dec
push
bound
pop
or
mov
jmp
inc
pop
ja
fwait
int
xchg
sub
push
xchg
int3
jle
xchg
cmp
add
shl
jo
(bad)
xor
push
sbb
fst
lods
lds
pop
clc
mov
or
push
pop
int3
fld
dec
mov
pop
ret
xor
mov
xchg
ret
les
jmp
mov
and
dec
jg
repz
cmp
pop
push
sahf
hlt
int
in
pop
ret
or
pop
add
jmp
sti
loop
and
dec
cmps
mov
pushf
sbb
inc
cli
fmulp
lods
mov
scas
pop
push
ins
mov
cmp
pop
pop
push
jmp
mov
loopne
(bad)
addr16
xchg
inc
movs
stos
fistp
vpsubusb
inc
test
fcomi
shr
popf
inc
mov
adc
sti
inc
add
fst
mov
mov
pop
pop
(bad)
je
stc
jmp
add
xor
mov
dec
lds
pop
cmc
jns
sub
lahf
std
xchg
fwait
es
or
mov
inc
call
in
sar
mov
mov
ficom
mov
ret
imul
shl
aas
xor
dec
int3
loop
scas
fsub
ins
sbb
adc
nop
cmp
pop
stos
jo
cld
cli
adc
cmp
dec
rcr
fucomi
dec
mov
ret
es
pop
pop
inc
ja
pusha
inc
cmp
leave
lods
ins
dec
jns
pop
repnz
cmp
pop
or
pop
mov
xlat
add
aas
dec
stos
xchg
dec
mov
clc
or
xor
addr16
mov
or
enter
jmp
push
dec
or
lods
adc
jmp
or
(bad)
hlt
mov
push
mov
data16
or
arpl
xor
jo
jmp
das
sub
std
xor
mov
es
or
sahf
add
mov
inc
sbb
lods
mov
add
push
mov
fs
retf
in
xchg
cld
or
adc
shl
mov
xchg
cmc
push
cs
call
mov
fisub
mov
shl
xchg
test
in
or
xor
mov
and
push
jnp
or
xchg
inc
mov
lock
fstp
shl
hlt
cmp
gs
sti
jge
push
rol
(bad)
cmp
enter
popa
xchg
inc
pop
add
pop
sub
data16
xor
mov
xlat
call
mov
or
dec
retf
xchg
scas
mov
enter
cmps
or
mov
hlt
sti
add
mov
push
mov
push
cmp
jbe
mov
mov
out
mov
mov
mov
scas
jge
popa
pop
push
sub
mov
scas
gs
jp
pop
pusha
inc
scas
cmps
sub
ror
cmps
cmp
xchg
mov
jbe
jne
lea
mov
xor
outs
retf
in
or
jbe
sets
leave
mov
inc
add
mov
movs
jae
(bad)
ffreep
pop
xor
jmp
or
sbb
push
mov
div
mov
jne
dec
mov
push
cmps
or
xchg
retf
inc
adc
xchg
hlt
mov
cmps
xor
add
outs
cmp
jl
aaa
aam
lea
xchg
test
cmps
das
fnsave
and
inc
repnz
popf
xchg
(bad)
cmp
mov
int
lar
xchg
mov
hlt
jb
leave
test
shl
xor
xor
adc
mov
ror
jmp
jns
jecxz
sbb
add
shl
xor
ret
mov
imul
sub
dec
fsub
fnstsw
sbb
inc
jl
fldcw
lds
pusha
(bad)
xchg
mov
and
hlt
jae
or
xchg
scas
loopne
add
loope
aam
ins
add
mov
nop
mov
bnd
pop
cmps
cmp
enter
fnstcw
push
mov
ret
enter
adc
jbe
push
mov
sbb
push
pop
scas
repz
es
mov
shr
mov
push
dec
scas
add
test
pop
xchg
mov
inc
jo
out
aam
(bad)
fistp
arpl
ror
sbb
jmp
push
ins
int
iret
sbb
dec
jbe
inc
adc
push
push
push
pop
sbb
add
push
and
std
or
sub
mov
neg
pop
repnz
call
call
int3
push
adc
jo
popa
xchg
mov
in
pop
ret
or
sbb
sahf
xor
sar
out
stos
cmp
adc
(bad)
(bad)
lds
aaa
pop
pop
(bad)
push
nop
push
jp
and
fcomp
or
mov
iret
adc
(bad)
call
add
xor
cdq
loopne
mov
aam
pop
adc
pushf
inc
sbb
rol
mov
cmps
popa
jo
xor
(bad)
leave
xchg
push
push
test
sbb
stos
mov
jno
adc
fs
mov
sub
xchg
mov
jno
addr16
cwde
mov
xchg
(bad)
(bad)
and
loop
sbb
sub
push
fiadd
in
rcr
and
push
jno
cmps
ds
shl
add
push
cmps
inc
pop
jnp
cli
andnps
push
dec
sub
ja
loop
push
data16
add
pop
adc
push
dec
fbld
xchg
dec
adc
jbe
mov
shl
stc
push
popf
outs
pushf
cmp
push
je
adc
outs
sar
mov
dec
fs
rep
add
loop
adc
mov
cld
mov
test
add
leave
sub
imul
or
xchg
inc
and
outs
mov
or
bound
sub
mov
aam
jmp
cld
push
add
jmp
xchg
sbb
por
sbb
cdq
ror
shl
stc
jecxz
(bad)
push
ins
in
mov
mov
mov
sub
movs
pop
psubusw
xor
mov
dec
pushf
and
mov
adc
leave
ds
xchg
int3
jge
cld
or
ror
dec
pop
fdiv
out
xor
xchg
or
out
push
sbb
loope
les
lea
pop
jmp
addr16
pop
imul
bound
push
movs
into
xor
add
inc
movs
sbb
jecxz
sbb
and
jmp
ins
fild
cmp
jns
sub
fcomp
or
call
fsub
into
in
mov
outs
pop
fld
push
xchg
(bad)
data16
movs
call
clc
xor
movs
retf
sub
fild
(bad)
dec
jno
lds
or
mov
sbb
cmp
cmp
add
stc
aam
cmps
mov
mov
mov
push
sub
hlt
fwait
sub
cdq
pop
imul
jno
out
rcr
xchg
nop
je
loopne
dec
mov
push
inc
push
inc
aaa
addr16
or
mov
mov
pusha
jmp
shr
cmp
pop
test
sahf
aaa
xchg
outs
inc
sbb
mov
xchg
xor
add
cwde
jb
add
pop
sbb
sbb
xchg
in
lea
push
jmp
cmp
cmp
or
(bad)
xchg
or
cmp
xor
push
(bad)
neg
adc
pop
sub
sub
sbb
shl
pop
retf
pop
repnz
jnp
jg
xlat
jnp
imul
sub
cli
jmp
retf
add
loopne
pop
fcmovbe
pop
add
fcmovnu
lods
mov
sbb
sub
adc
jg
hlt
sub
xchg
push
in
adc
popf
(bad)
sbb
sub
xchg
inc
xchg
mov
mov
repz
mov
mov
cs
dec
jbe
jg
pop
adc
push
lahf
mov
add
das
gs
mov
push
mov
aas
movs
or
cwde
fdiv
imul
adc
in
popa
sub
lea
xchg
jne
pop
test
test
sbb
add
dec
bswap
aas
sbb
mov
xchg
jg
dec
or
out
jmp
jl
inc
dec
movs
cmp
fwait
pop
ja
mov
xchg
dec
mov
cwde
pop
loopne
scas
outs
stos
call
mov
sub
(bad)
stc
xchg
sahf
inc
outs
pop
jbe
and
mov
fmul
and
je
push
dec
cld
dec
fadd
add
leave
mov
or
jns
jae
out
fadd
ds
mov
fsub
mov
and
xchg
pusha
mov
and
mov
imul
lock
inc
sbb
fmul
push
outs
out
loope
sbb
out
xor
pop
aas
xor
js
sbb
mov
out
xchg
dec
out
dec
js
add
inc
sbb
out
cld
push
(bad)
(bad)
sbb
inc
inc
cmp
ds
loop
shr
or
dec
imul
xchg
pop
sbb
pop
outs
add
fild
popf
aam
xor
mov
lahf
dec
in
mov
pop
pusha
out
adc
sbb
add
adc
xor
xlat
dec
arpl
inc
test
aas
iret
add
stos
xor
xchg
push
ins
push
fist
or
mov
bound
loopne
out
pusha
ins
pop
pushf
bound
mov
test
sbb
push
in
inc
cmp
xlat
cs
xchg
ds
mov
scas
add
mov
es
fxch
cwde
(bad)
cmps
in
fwait
mov
or
shl
ret
push
repz
inc
mov
mov
nop
cwde
fs
aam
xchg
stc
and
sbb
jo
sub
mov
mov
wrmsr
lds
sub
repz
call
popa
sub
mov
in
pmulhuw
xchg
xchg
ret
mov
jno
sahf
xchg
test
add
cli
das
jp
int3
xchg
and
call
addr16
pop
pop
fld
push
sbb
and
lods
enter
retf
jl
jl
outs
mov
pop
jle
fwait
or
sti
add
or
call
adc
jae
jg
mov
call
adc
xor
jno
and
and
cmp
dec
fucomp
dec
or
imul
sub
cmc
pop
adc
sub
cmp
call
sub
jmp
pop
test
xchg
fisub
cmp
in
push
aad
stc
adc
push
inc
mov
xor
ret
jbe
sar
fdiv
sub
mov
pop
cmps
adc
std
cmp
lods
jge
mov
popa
and
or
mov
adc
sbb
xchg
fnstcw
loope
aam
cmps
cwde
inc
test
sbb
add
hlt
cdq
clc
mov
push
jne
or
cld
sub
mov
test
xchg
cdq
jmp
inc
loop
jg
(bad)
cmp
adc
pop
iret
pop
mov
pusha
test
sub
fsubr
mov
pop
in
lea
add
sub
inc
aas
inc
xor
and
jle
inc
add
call
(bad)
arpl
jecxz
rcr
and
pop
sbb
test
out
daa
imul
mov
ds
xor
pop
or
push
test
loop
push
push
out
cwde
ror
test
cmp
add
aaa
xchg
je
mov
imul
push
xchg
mov
cs
inc
cmp
(bad)
adc
(bad)
dec
out
stos
push
out
and
pop
jg
inc
rol
push
idiv
mov
pop
pop
(bad)
pop
push
call
mov
das
movs
movs
hlt
lods
xor
jg
loop
adc
adc
in
and
xor
int3
ja
enter
cli
mov
pop
call
cmps
jns
dec
(bad)
sar
adc
mov
hlt
sub
pop
cdq
pop
in
sbb
and
retf
repz
push
mov
sbb
pop
sub
push
int3
adc
inc
(bad)
mov
rcl
xchg
sbb
sub
loopne
test
popa
ins
into
das
add
and
cmp
dec
and
sbb
sub
fst
ret
cdq
fs
fs
mov
pop
pop
rcr
pop
les
push
add
retf
int
push
ficom
inc
pop
mov
jmp
sbb
xchg
retf
ja
out
(bad)
pop
sbb
push
xor
mov
xor
mov
push
gs
test
jge
and
xor
test
jnp
push
mul
fwait
lahf
je
jnp
jmp
lods
add
lds
nop
std
jb
sbb
push
mov
jmp
(bad)
sub
dec
push
pop
adc
sahf
dec
int
xchg
(bad)
jnp
add
movs
rcr
mov
mov
test
test
cmp
cld
jns
mov
pushf
pop
sub
or
into
cdq
loop
sbb
(bad)
scas
in
int3
in
push
add
not
jle
pop
jle
imul
int
jne
movs
aas
mov
add
test
les
loop
aad
xlat
loope
mov
sbb
daa
pop
sti
or
into
inc
ret
stos
or
fdivp
out
test
ins
mov
push
pop
xor
cmp
test
lahf
fbstp
jle
stos
mov
sub
fs
rcr
inc
and
rol
and
ja
fmul
and
lds
mov
pop
call
xchg
pop
add
cmps
in
xlat
pop
bound
fbld
jns
ja
pop
jbe
push
icebp
push
retf
sbb
jnp
jmp
in
bnd
int3
pop
stc
mov
(bad)
(bad)
and
dec
inc
jnp
fcomp
push
outs
arpl
sub
nop
mov
fwait
cmp
pop
dec
mov
(bad)
mov
and
pop
cmps
cmp
inc
je
je
mov
cwde
xor
mov
adc
xlat
enter
dec
into
xchg
movs
call
add
mov
cld
xchg
outs
and
mov
cmps
cmp
add
pop
scas
mov
dec
arpl
mov
sbb
(bad)
pop
sbb
mov
ins
xchg
sbb
sub
lds
mov
aad
cmp
sub
aad
jp
cmps
scas
push
push
or
(bad)
sub
xlat
cmps
leave
adc
xchg
out
retf
lods
and
pusha
stc
or
sub
dec
(bad)
adc
xor
sbb
adc
push
fnstcw
call
jp
pop
sar
fld
inc
movs
lahf
pop
dec
or
test
(bad)
out
jmp
sbb
cwde
pop
lods
add
outs
sbb
inc
cmp
in
and
in
or
xor
jo
cmp
inc
or
mov
add
lock
xchg
pushf
mov
mov
outs
jle
inc
and
pop
inc
mov
mov
xchg
inc
cmp
push
mov
push
jns
(bad)
adc
xor
stos
adc
aas
aam
rol
xlat
xor
push
popa
adc
pop
pop
rol
test
jmp
ja
ficomp
inc
pushf
jne
and
cli
inc
push
aam
pusha
fiadd
jns
ds
ret
dec
and
(bad)
or
cmp
hlt
rcr
fnstcw
or
sbb
addr16
push
cwde
test
test
add
xor
lods
cli
popf
inc
fcomp
pop
les
lea
or
xchg
push
pop
pop
mov
in
rcr
sbb
xchg
scas
pop
dec
mov
sub
or
dec
or
xchg
sti
push
loope
push
jae
dec
or
mov
sub
pop
sbb
test
shr
hlt
test
add
pushf
out
repz
mov
cwde
mov
mov
push
xchg
jg
ret
or
(bad)
outs
fst
sbb
xchg
das
stc
mov
into
jl
popf
adc
sub
lods
xor
sub
inc
push
in
les
xchg
int
add
out
jp
(bad)
push
mov
adc
je
push
(bad)
jl
stc
pop
mov
outs
fcom
mov
push
xlat
sti
xchg
(bad)
fadd
stos
(bad)
inc
stos
and
inc
or
(bad)
cdq
jbe
push
xchg
xchg
mov
cmp
movs
sahf
adc
enter
scas
(bad)
fst
adc
mov
je
inc
sbb
mov
cmp
cmps
push
movs
movs
jno
jl
sahf
dec
fs
cmp
add
push
dec
sbb
jmp
addr16
and
jle
ds
add
jg
rol
or
pop
xlat
dec
cmp
xor
int
pop
jg
(bad)
jl
push
cmc
or
jl
fnstsw
add
out
mov
xor
cmp
sahf
xor
lods
ret
xor
xchg
leave
into
sbb
loope
les
pop
dec
jg
mov
loopne
test
pop
jle
sar
out
inc
push
out
jo
sub
sub
sub
sub
xchg
mov
jne
push
call
mov
out
sub
in
add
cmp
inc
into
pop
mov
test
jnp
sbb
cmp
and
and
xor
shr
mov
add
pop
test
jns
dec
ins
and
mov
xchg
inc
mov
sub
xchg
addr16
addr16
jl
cmps
ret
not
ins
sbb
and
adc
iret
xor
sub
popa
mov
pop
out
stos
das
gs
inc
in
and
push
enter
jmp
push
dec
daa
(bad)
and
jmp
mov
jb
stc
xor
(bad)
shl
call
ficomp
out
out
imul
xor
sti
jmp
mov
data16
outs
pop
pop
icebp
shl
leave
xor
(bad)
cmp
mov
lods
aaa
mov
mov
das
sti
sbb
sar
jle
inc
str
mov
cmp
in
xor
movs
pop
dec
outs
outs
add
add
jb
mov
les
inc
mov
sub
mov
fs
pop
jp
pop
or
cmp
in
mov
leave
je
and
sti
or
xchg
mov
or
imul
in
fcomip
push
in
add
in
lahf
das
push
scas
cmc
xchg
inc
mov
pop
mov
xor
sti
popf
sbb
jae
or
adc
dec
sub
mov
dec
and
and
fs
push
mov
aaa
and
in
or
jns
mov
pop
mov
dec
pop
(bad)
(bad)
mov
xchg
or
fcmovnbe
and
out
dec
mov
jo
stc
(bad)
sub
push
shr
mov
push
xchg
fild
icebp
lahf
scas
mov
mov
popf
cmp
in
add
push
adc
shl
lods
push
xchg
push
into
mov
xchg
clc
nop
out
addr16
mov
out
leave
mov
(bad)
jnp
cdq
bound
xchg
stos
nop
jae
rcl
sub
imul
ja
(bad)
and
add
mov
sbb
sbb
sub
out
out
das
sbb
(bad)
push
or
sub
dec
xchg
clc
adc
or
sbb
ja
push
mov
retf
mov
addr16
add
adc
daa
push
jb
sub
mov
cli
cmp
xchg
jmp
sub
cmps
popa
dec
push
jb
pop
cmps
mov
cli
shl
add
lods
aaa
sbb
inc
xchg
jmp
xor
pop
dec
adc
lods
movs
addr16
inc
sub
fnstcw
jl
ins
add
and
sbb
inc
and
push
cmps
jg
cmp
pop
popa
ins
enter
mov
or
inc
std
push
mov
sbb
sub
sbb
mov
xlat
gs
movs
pop
xchg
jno
retf
retf
jns
push
aaa
mov
(bad)
and
scas
test
sbb
push
jne
call
sbb
xchg
or
push
out
pop
sbb
jae
pop
mov
mov
std
inc
sbb
push
sbb
scas
iret
xchg
push
mov
das
mov
sub
mov
dec
lods
or
jp
push
sub
pop
je
cs
mov
inc
jne
adc
xor
push
push
or
jno
repnz
sbb
(bad)
push
in
push
add
ss
hlt
je
fwait
dec
movs
jo
mov
addr16
push
les
ins
and
imul
sub
mov
dec
test
xor
xchg
mov
push
mov
repnz
mov
out
es
ret
mov
push
inc
fadd
add
cmp
or
mov
(bad)
outs
sbb
push
mov
fld
jl
mov
shl
shl
xor
(bad)
push
mov
xchg
push
mov
sahf
gs
not
iret
adc
inc
jmp
nop
hlt
mov
sub
mov
mov
movs
(bad)
sub
sbb
push
call
scas
jns
xlat
fs
fwait
mov
les
stos
xlat
lea
out
scas
movs
jnp
or
add
pusha
mov
in
push
mov
(bad)
stc
mov
or
scas
dec
inc
popa
aaa
stc
sbb
cmp
sub
adc
xlat
and
in
fwait
xchg
outs
fcomp
push
push
xor
in
fldcw
and
adc
cmp
push
adc
std
and
adc
pop
add
push
sub
idiv
ins
outs
clc
addr16
sub
ja
adc
int3
scas
mov
aaa
and
ins
dec
jns
fdiv
frstor
outs
jb
adc
shl
(bad)
xor
sbb
movs
pop
pop
movs
push
icebp
outs
sbb
xlat
shr
fidiv
xor
xchg
mov
add
push
add
xor
ficom
mov
and
aaa
sub
mov
das
push
sub
or
in
pusha
and
movs
xchg
mov
ins
pop
add
mov
pop
push
in
jl
scas
cmc
(bad)
in
imul
sahf
sar
inc
pop
(bad)
aam
dec
and
jg
sahf
jne
jecxz
and
dec
inc
test
mov
out
push
out
jle
or
nop
inc
adc
inc
or
scas
pop
outs
jns
xor
mov
cmp
add
movs
mov
or
jne
ret
inc
mov
xchg
and
les
out
push
mov
cmp
aaa
jge
and
sub
les
dec
rol
xchg
aad
rcr
push
int3
(bad)
push
in
mov
das
sbb
inc
cmp
add
call
fwait
sbb
outs
pop
mov
mov
mov
dec
leave
mov
mov
pop
out
nop
xor
lods
add
repnz
data16
out
in
test
add
enter
mov
fcomp
inc
xor
(bad)
fnstsw
(bad)
scas
mov
and
push
inc
pop
and
out
mov
sbb
cmp
and
add
call
icebp
leave
icebp
jb
das
adc
cli
pop
and
pop
mov
fdiv
retf
xor
mov
cmc
fsubr
les
mov
dec
dec
js
imul
jbe
retf
sub
retf
cdq
sub
xor
mov
push
mov
mov
repz
ins
adc
mov
xchg
aas
mov
jecxz
stos
repz
push
mov
xor
pop
adc
pushf
lods
xor
mov
cmps
jmp
cmp
repz
sub
sbb
cmps
jno
arpl
in
js
scas
movs
sbb
and
dec
mov
pop
loop
mov
add
out
arpl
push
mov
cdq
(bad)
xchg
and
pop
xor
dec
js
retf
jne
daa
push
pop
inc
xchg
mov
mov
or
stc
(bad)
scas
call
or
adc
fs
and
fwait
ins
pop
shr
out
test
dec
fwait
mov
pop
inc
sbb
push
cmp
lods
repz
xlat
or
inc
xor
push
add
imul
or
xor
fcomi
sbb
fild
inc
rcl
(bad)
fnstenv
pop
push
arpl
in
shl
fcmovbe
out
or
xor
test
inc
jne
repnz
inc
(bad)
push
dec
mov
and
sbb
dec
push
fisubr
inc
stos
jmp
sbb
mov
mov
shl
jle
jg
test
out
cmps
mov
pop
xchg
pop
inc
jbe
aas
mov
mov
dec
cmp
ss
loope
imul
inc
sti
sti
jb
mov
mov
jbe
xchg
stos
js
enter
mov
adc
mov
jmp
add
in
push
add
xchg
stc
adc
loope
bound
repz
mov
mov
movs
jmp
mov
mov
dec
fwait
add
data16
add
cwde
inc
int
js
int
sub
or
push
es
or
call
and
add
in
(bad)
fist
into
push
fadd
xchg
cmp
jmp
ret
mov
jns
into
cs
push
jl
adc
inc
xchg
mov
fs
sbb
push
sahf
jg
pusha
call
cmp
sub
inc
xchg
mov
mov
pop
ret
push
mov
pop
or
aad
lods
add
fmul
push
ror
push
fistp
xchg
cwde
loopne
cmps
xchg
xor
jo
dec
shl
sbb
and
jns
xor
inc
cmp
pusha
loopne
ret
ficom
and
sub
out
sub
jb
cmp
icebp
and
cdq
jl
or
or
or
and
mov
or
ja
dec
jl
cs
lock
lods
aas
fnstenv
movs
mov
add
pop
dec
mov
lahf
int
xor
gs
pop
adc
and
js
jge
fcom
fisub
shl
mov
xor
inc
sub
dec
mov
push
les
push
shl
inc
aam
pop
push
in
lock
es
(bad)
(bad)
xlat
js
mov
daa
(bad)
movs
out
leave
les
pushf
cmps
out
push
xchg
mov
outs
cmp
fldenv
xor
xchg
lea
retf
ds
pop
(bad)
push
jae
mov
cdq
(bad)
out
xchg
ret
jp
aam
fsub
cmp
and
mov
mov
mov
lods
add
out
pop
mov
jae
sti
cmp
addr16
sahf
pop
mov
sbb
push
mov
repnz
out
adc
test
fst
sub
xor
mov
pop
inc
out
es
nop
ror
(bad)
fisub
(bad)
cmps
mov
xor
inc
mov
rol
pop
sbb
pop
and
fs
pop
ja
fsub
xchg
mov
pop
pushf
dec
out
push
stos
adc
adc
test
sbb
xor
jae
mov
xor
hlt
retf
in
jge
cmp
rcl
out
dec
leave
aas
out
ret
ja
std
sahf
sahf
and
lea
pop
mov
dec
sub
jge
cwde
arpl
fs
jno
ins
push
call
sahf
sbb
xchg
daa
and
jl
xor
xchg
aaa
xchg
retf
fidiv
mov
jg
stos
sti
xor
or
popf
pop
retf
fwait
cld
and
inc
mov
(bad)
daa
es
adc
aas
cdq
mov
xor
and
push
xchg
fbstp
movs
rcl
and
mov
call
mov
retf
pushf
dec
arpl
jno
pop
mov
mov
xchg
mov
loope
sub
mov
jecxz
mov
jbe
(bad)
out
(bad)
test
dec
out
fadd
dec
(bad)
ja
jle
and
sbb
push
scas
mov
xchg
pushf
cld
or
and
jae
test
movs
mov
loopne
ds
sar
mov
cmp
mov
in
bound
mov
sbb
aad
(bad)
sti
inc
or
movs
cld
pop
push
shr
mov
clc
das
mov
jp
sbb
fistp
adc
aad
push
ds
(bad)
arpl
fdivr
dec
cmps
push
or
dec
adc
inc
jnp
dec
cmp
popa
int3
push
repnz
das
lods
cmp
mov
mov
mov
imul
inc
pop
call
dec
ins
dec
pop
adc
mov
mov
add
fist
or
jae
lods
mov
jg
add
xlat
les
cmp
es
sub
mov
adc
mov
ja
sbb
sbb
les
mov
sbb
pop
and
adc
mov
mov
push
loopne
aam
xchg
popf
jo
or
(bad)
mov
scas
fdivr
test
mov
jle
in
xchg
mov
hlt
xchg
imul
pop
pushf
and
push
ret
cmps
or
loope
movs
ins
xchg
add
(bad)
in
jns
push
loopne
mov
jg
es
addr16
inc
ss
fwait
ja
cmp
pop
fadd
pop
sub
push
sub
lods
fmulp
or
dec
adc
fadd
adc
int
jg
daa
outs
arpl
retf
xchg
movs
lahf
int3
adc
fild
jnp
xor
std
mov
cmp
push
ds
outs
test
(bad)
mov
repz
test
jbe
rol
sub
outs
stos
in
jne
pushf
mov
enter
or
push
imul
adc
repz
push
pop
jg
(bad)
arpl
jmp
jns
movs
push
cmp
push
dec
inc
pushf
fwait
(bad)
enter
push
in
jl
push
imul
fwait
sub
sub
test
xchg
pop
inc
dec
aad
(bad)
jmp
dec
sub
imul
sbb
cmp
inc
xchg
mov
in
loopne
mov
icebp
pop
lahf
outs
jmp
loop
cli
in
jge
add
cmp
pusha
sub
adc
mov
cmp
xor
and
ins
fcomp
loop
sbb
add
jp
cdq
pop
stos
cdq
popf
aas
test
mov
nop
aam
in
iret
push
sub
fwait
cmc
sar
fs
lock
sub
add
jl
repnz
mov
sbb
(bad)
ds
mov
ffreep
cmps
es
cmp
test
jo
(bad)
push
push
(bad)
in
fnsave
push
in
jo
add
stc
(bad)
hlt
idiv
gs
cmp
retf
out
and
fwait
sahf
clc
or
test
add
or
movs
inc
jge
mov
sbb
mov
(bad)
cli
push
fistp
inc
adc
sub
int
xchg
xor
dec
ret
in
inc
int
das
fbld
fdivr
popa
addr16
xlat
aam
jae
and
and
jbe
fdivr
and
in
inc
movs
sub
cs
mov
sub
gs
jns
mov
jge
jg
imul
je
and
inc
(bad)
rcr
push
cmp
xor
fiadd
mov
fs
mov
push
jmp
add
fnstcw
ins
div
scas
add
in
and
push
mov
retf
retf
nop
cmc
dec
adc
pop
mov
out
mov
inc
push
pop
jo
cmp
or
mov
sbb
int
push
inc
cld
(bad)
sub
je
std
sbb
pop
cmp
mov
cmp
sbb
add
sub
repnz
inc
(bad)
mov
xchg
stc
dec
mov
sub
add
bound
inc
jecxz
sub
outs
dec
add
cmp
jg
hlt
cs
(bad)
leave
ins
mov
jmp
mov
jg
jno
push
repnz
leave
dec
stc
aad
inc
fidivr
jns
sbb
cmps
clc
and
adc
and
std
lods
xor
repnz
add
mov
adc
jecxz
in
mov
jnp
adc
(bad)
xor
ins
xchg
xchg
lahf
adc
stos
mov
sbb
stos
in
call
call
sahf
(bad)
jmp
imul
xor
icebp
hlt
or
sub
pop
fsub
movs
mov
or
repz
xor
retf
pop
nop
(bad)
js
cmp
imul
clc
add
jne
inc
sbb
cmp
lea
out
sti
ja
sub
push
jno
pusha
mov
movs
jg
movs
pusha
sbb
jo
inc
ror
repz
outs
stc
stc
je
sbb
fmul
fld
cmps
outs
jle
out
(bad)
mov
sahf
pop
in
mov
sub
(bad)
push
into
(bad)
int3
sbb
(bad)
pushf
push
xchg
clc
sbb
and
ret
push
xchg
es
in
pop
loope
std
loop
adc
sub
adc
enter
mov
ss
mov
pop
dec
sbb
jae
or
xor
stos
cwde
cli
mov
or
mov
add
sub
mov
pop
(bad)
mov
and
movs
mov
ss
fidiv
(bad)
stos
dec
jl
cs
dec
imul
inc
es
stos
sbb
dec
aam
mov
out
ins
jb
xor
das
push
ror
es
pop
adc
mov
test
addr16
jbe
dec
cmp
add
call
mov
inc
popa
dec
pop
and
arpl
das
push
loop
jne
(bad)
daa
pushf
cdq
inc
mov
dec
jecxz
cmp
push
jmp
xor
icebp
out
pop
es
xchg
mov
shr
fmulp
shr
out
push
push
test
dec
pusha
lea
cld
or
test
mov
dec
sbb
retf
push
jge
xchg
sar
add
ja
pop
call
ret
adc
xchg
nop
sbb
fs
sub
push
xchg
jae
icebp
fsubr
jle
and
lahf
mov
adc
jo
mov
ins
pop
push
xor
push
xor
fimul
leave
cmp
add
cmp
mov
adc
or
cmp
mov
cdq
mov
mov
aaa
xor
outs
adc
add
stc
xchg
lds
dec
mov
add
mov
add
mov
fsubr
imul
outs
rol
aam
push
sub
adc
jge
jmp
and
pushf
inc
in
sar
popf
xchg
js
push
add
outs
into
cmp
xlat
jg
xor
mov
cmp
xchg
out
fld
fstp
(bad)
or
loopne
pop
lods
xchg
jecxz
jle
stos
mov
fidivr
cmp
jp
or
pushf
clc
jmp
out
inc
mov
ror
outs
pop
fstp
fsubr
pop
inc
adc
pop
adc
sti
mov
mov
(bad)
in
scas
push
inc
pop
push
or
repz
mov
push
push
(bad)
outs
hlt
dec
fstp
pop
sbb
push
shl
push
mov
xchg
loope
daa
cmp
mov
adc
xchg
and
test
add
les
inc
jecxz
in
(bad)
arpl
xor
stos
ror
push
aam
mov
jo
repz
mov
inc
or
add
mov
mov
push
and
dec
aaa
jne
jmp
push
mov
jne
pop
jae
sub
daa
loop
aam
push
mov
cli
inc
adc
inc
dec
or
(bad)
popf
xchg
retf
vprotq
xchg
or
mov
cmps
fnstsw
mov
je
in
int
mov
and
(bad)
shl
or
mov
mov
cmp
xchg
data16
jb
(bad)
lods
loope
mov
mov
jecxz
cdq
push
inc
and
call
popa
ins
pop
lods
push
test
push
mov
ja
add
pusha
cmp
enter
or
jnp
jmp
push
mov
(bad)
inc
jle
dec
adc
inc
xor
xor
enter
cmc
stos
sub
mov
xchg
adc
pop
xor
adc
(bad)
pop
enter
pop
imul
jb
xor
cmp
mov
pop
dec
xor
pop
pop
push
je
cdq
imul
pop
jmp
xchg
lds
(bad)
int
xor
inc
mov
mov
arpl
je
cmp
sub
movs
outs
fs
cmp
jl
iret
loop
sbb
inc
sbb
test
jo
push
cmp
mov
ret
add
mov
iret
out
mov
xchg
cmc
dec
xor
and
std
in
xchg
daa
xor
sub
or
and
sub
icebp
pop
rol
jmp
outs
xchg
in
js
and
mov
loop
cmp
mov
xchg
inc
dec
in
jg
jg
mov
movs
or
inc
loop
cmp
pop
pop
push
in
pop
sub
add
pop
cmp
jo
and
cmp
stc
out
or
les
adc
add
xchg
loope
aad
adc
cmp
jae
lods
nop
or
mov
push
inc
sbb
in
push
aaa
rcl
dec
mov
pop
mov
imul
rcr
rcl
ds
imul
jl
add
sbb
imul
add
pop
fimul
jl
cdq
gs
jle
inc
outs
xchg
mov
(bad)
js
mul
into
adc
xchg
xor
cmp
push
sub
pop
xchg
add
xchg
repz
mov
mov
dec
mov
repnz
icebp
xor
mov
xor
inc
jl
mov
xchg
icebp
arpl
sub
rcr
xchg
dec
sbb
inc
mov
xchg
(bad)
cmps
lds
and
mov
pop
push
adc
test
pop
shl
std
or
enter
arpl
xor
call
int
test
aad
xchg
mov
dec
mov
cmp
jl
sub
cdq
pop
dec
mul
es
fidivr
inc
push
fild
inc
cmc
xchg
mov
xchg
or
xchg
or
xor
dec
push
sti
inc
xor
dec
ds
cdq
adc
dec
aas
loop
mov
mov
mul
push
mov
cmp
fild
inc
sbb
push
dec
jnp
sbb
mov
test
mov
add
out
sbb
mov
push
clc
movs
and
aaa
adc
ins
pusha
xchg
jp
lds
ins
sbb
fnstsw
mov
(bad)
sub
mov
xchg
pop
popf
cmps
sar
mov
dec
xchg
out
mov
xor
fwait
je
mov
jo
(bad)
outs
daa
or
add
enter
not
repz
mov
push
shl
mov
fild
repnz
(bad)
adc
int
push
add
and
jp
cmp
mov
mov
loope
into
test
rcl
mov
cmp
out
dec
mov
cdq
dec
jmp
sub
dec
add
mov
pop
sub
mov
je
jns
mov
jae
add
bound
push
and
je
clc
jge
mov
push
xchg
mov
mov
pop
xlat
retf
or
sub
or
xor
sub
push
sbb
jns
push
std
mov
call
stos
cld
loopne
rcr
xor
stos
and
sub
jmp
out
loope
dec
push
imul
adc
sbb
neg
lahf
xlat
mov
scas
xchg
xchg
nop
mov
lods
js
pop
shr
jmp
pop
inc
push
cdq
movs
rcr
sti
mov
outs
pop
rol
out
fimul
clc
sahf
rcr
mov
cmp
ffree
adc
mov
jmp
clc
(bad)
jl
out
push
retf
(bad)
cdq
fsubr
xchg
cld
aad
jge
jecxz
rol
jbe
adc
mov
jge
stc
pushf
and
and
and
scas
jle
cmp
jle
retf
mov
into
sti
shl
repz
lods
add
add
stc
jo
xchg
mov
cmc
mov
popf
rcl
pop
inc
jno
adc
adc
js
adc
xchg
(bad)
pop
cwde
push
sub
gs
sbb
sti
dec
xchg
fs
xchg
mov
pushf
call
mov
call
mov
mov
cmp
fadd
inc
sub
lock
and
or
std
aaa
icebp
mov
addr16
pop
cmp
cmps
movs
lock
mov
inc
repz
leave
or
xchg
jg
sbb
sar
arpl
mov
pop
mov
(bad)
pop
loopne
pop
jp
mov
scas
mov
or
int3
sub
aas
call
pushf
sub
aaa
ja
mov
sub
jne
call
in
and
retf
jp
mov
ins
pop
push
ret
es
arpl
shr
mov
imul
dec
imul
into
jecxz
cmp
sti
fcomp
pop
push
icebp
and
pop
vpshlq
test
dec
adc
mov
add
sub
aaa
mov
enter
daa
int
jmp
mov
mov
xor
cmp
lods
hlt
dec
int3
mov
mov
inc
ins
in
fiadd
push
and
xchg
cli
push
adc
lods
add
xor
outs
jo
add
in
in
xchg
xor
movs
adc
cmp
sbb
mov
or
pop
repz
cli
js
out
mov
or
sbb
jmp
jb
sub
mov
sbb
jnp
lock
ror
cmovns
sub
or
jae
inc
mov
sbb
rcl
iret
dec
cs
pop
repnz
aam
mov
add
je
inc
adc
and
adc
jecxz
push
test
cdq
out
mov
inc
mov
dec
sahf
sbb
in
adc
nop
cmps
psubusb
push
stc
aam
arpl
cwde
(bad)
in
xchg
repz
(bad)
repnz
repz
inc
jmp
cmp
adc
aaa
cs
dec
rcl
aam
ins
movs
mov
inc
mov
and
cmp
xchg
clc
push
xor
(bad)
out
int
pop
mov
mov
retf
pop
hlt
mov
dec
mov
test
fldcw
sub
sahf
outs
xor
sbb
pop
push
in
js
mov
xchg
popf
sar
fwait
clc
xor
stos
(bad)
std
nop
das
cmc
sahf
inc
aaa
adc
inc
fisubr
pop
dec
gs
ss
test
xor
imul
push
jmp
jo
push
sub
iret
push
dec
jns
sbb
jnp
fiadd
movs
mov
mov
(bad)
sub
mov
inc
fdiv
cwde
shr
clc
cmp
sbb
inc
and
out
aad
sub
mov
mov
or
les
int
jecxz
and
mov
pop
in
xchg
mov
sahf
cmp
repnz
std
mov
push
cdq
fnstsw
clc
mov
(bad)
mov
movs
cmp
sbb
shl
lods
mov
aad
mov
enter
lock
call
sub
push
mov
retf
pop
int
inc
enter
retf
xchg
cmp
sti
mov
push
xor
and
inc
inc
mov
cdq
sub
pop
rcr
mov
mov
sbb
jge
shl
mov
dec
out
iret
popf
in
mov
mov
test
fsubr
add
cmps
sahf
or
mov
xor
sub
mov
neg
xor
cmp
mov
inc
cmp
or
mov
into
inc
fiadd
push
lea
pusha
arpl
mov
idiv
dec
(bad)
push
inc
arpl
sub
dec
inc
push
enter
pusha
data16
or
jmp
push
pop
imul
dec
(bad)
adc
push
sar
cmp
mov
mov
mov
mov
inc
xchg
dec
mov
push
pop
mov
sbb
mov
mov
lds
cmps
sub
sbb
sbb
push
mov
arpl
adc
ret
jae
fadd
sub
or
jns
aam
push
jle
jle
cmps
icebp
cmps
in
or
push
int3
sbb
test
jb
mov
pop
ror
aas
es
(bad)
sbb
cwde
ja
lds
inc
retf
xchg
mov
adc
ja
push
shr
dec
push
push
les
add
xchg
or
dec
or
test
mov
xor
xor
jns
push
jbe
loope
add
adc
jo
cmp
movs
mov
or
inc
mov
pushf
mov
xchg
push
fst
jge
add
jecxz
and
mov
ins
enter
test
nop
cmc
rol
cmp
jno
call
sub
and
xor
mov
push
pop
in
call
sub
push
and
pop
and
xchg
out
pop
hlt
sub
sbb
sti
ins
add
mov
cmp
sub
movs
mov
push
mov
push
cli
mov
pop
cld
out
in
mov
adc
retf
(bad)
push
lock
pop
out
pusha
xor
dec
sub
popa
(bad)
retf
cli
xor
jnp
cmps
les
bound
lea
mov
pop
imul
jae
(bad)
sub
sti
mov
pop
jae
outs
movs
pop
outs
cmp
xor
rcr
test
adc
pusha
sbb
xchg
dec
xchg
shl
pop
(bad)
aad
pop
pop
mov
mov
(bad)
rcr
mov
xlat
xchg
jmp
xor
fsubp
and
push
shr
jo
push
or
inc
add
mov
stc
push
inc
outs
(bad)
adc
mov
loop
push
lods
push
ror
inc
aaa
lds
jge
daa
mov
outs
jg
fst
mov
mov
inc
push
dec
add
icebp
cli
cs
retf
fnstcw
xor
fldenv
xchg
xor
call
or
pop
xchg
xor
inc
loopne
cmp
jns
add
push
aaa
xchg
pop
repnz
mov
mov
nop
inc
fnstcw
pushf
ins
ins
fadd
imul
rol
(bad)
cmp
imul
lock
or
sbb
and
shl
adc
mov
int
xchg
ja
js
mov
std
sub
lock
inc
cmp
jp
dec
and
or
sbb
fst
pop
sbb
adc
test
push
lock
and
mov
out
dec
dec
xchg
jbe
fs
sub
sub
mov
jne
adc
mov
dec
dec
cmp
mov
fwait
push
mov
xor
inc
sbb
xor
pop
pop
mov
sub
mov
sar
pop
xor
shl
xchg
ja
fwait
or
jmp
xchg
test
xchg
ins
scas
sbb
(bad)
int3
test
add
add
cmp
cmp
or
cwde
xor
fld1
mov
inc
ret
cwde
jp
dec
ret
stc
dec
aam
or
mov
jmp
std
mov
scas
or
dec
cmp
sbb
mov
push
dec
mov
test
bound
mov
mov
into
jnp
pop
mov
jecxz
pop
adc
out
in
aam
dec
adc
jp
mov
das
xchg
inc
outs
jns
jge
shr
push
push
adc
sahf
call
push
stc
inc
sub
ret
xlat
popf
xchg
or
sar
sbb
scas
and
dec
ret
or
std
mov
xor
ret
push
push
dec
mov
nop
cmp
adc
iret
inc
cdq
add
rol
adc
(bad)
mov
leave
jo
jnp
cmc
adc
(bad)
push
leave
js
mov
cmps
jns
mov
repz
clc
into
sub
sub
test
and
aad
lea
scas
cmp
mov
xchg
in
xlat
inc
sbb
(bad)
and
and
ds
and
data16
loopne
ins
loop
movs
add
mov
xchg
mov
data16
fstp
xchg
and
inc
cwde
and
fsub
jne
fdiv
cmp
test
adc
cmp
das
dec
cmp
inc
ret
dec
sbb
mov
mov
inc
shl
cli
mov
je
sbb
das
cmp
add
inc
ret
xchg
(bad)
fisub
jae
dec
push
jbe
mov
inc
sbb
mov
sbb
mov
pop
adc
xor
xor
mov
sub
adc
inc
test
mov
jl
add
shr
xchg
mov
pop
mov
pop
loope
mov
jo
retf
adc
pop
or
(bad)
pusha
test
fnstsw
test
dec
fstp
cmp
repnz
sub
fwait
out
iret
(bad)
mov
rcl
call
add
int
push
mov
shl
push
out
test
push
rcl
(bad)
pushf
test
ret
and
jl
xor
mov
ja
xor
cmp
cmps
retf
mov
cmp
not
rol
cmp
mov
pop
jg
fwait
stc
les
dec
mov
arpl
push
neg
pop
or
jl
fadd
and
(bad)
into
stc
mov
mov
inc
inc
jl
je
xchg
outs
pop
inc
push
fldenv
mov
fbld
shr
and
aam
cld
mov
fbstp
fdiv
add
into
imul
mov
out
dec
pop
fidiv
lahf
shr
ja
cmps
push
cli
ret
xchg
push
dec
data16
push
in
cmp
mov
cmp
mov
arpl
int3
test
adc
enter
cwde
popf
cmp
sahf
xchg
addr16
popf
test
jp
sbb
mov
sub
imul
retf
fisttp
push
jmp
lock
in
leave
mov
scas
inc
daa
jae
xchg
cmc
mov
lds
pop
nop
xchg
or
or
cdq
mov
test
stos
ins
jmp
or
imul
mov
xchg
popf
inc
dec
mov
sar
rcl
pop
mov
jg
or
mov
sub
(bad)
fistp
mov
sbb
std
push
scas
mov
push
jge
in
data16
mov
loopne
cmps
add
shr
ror
jge
je
xchg
cmps
mov
mov
in
xchg
jmp
xchg
js
ja
jecxz
adc
pop
jae
popa
mov
popf
sbb
das
fisub
xor
aad
inc
mov
arpl
jno
outs
xchg
jns
aam
and
mov
push
jb
xchg
lahf
fwait
cmp
sub
jo
ret
js
adc
(bad)
out
sbb
sub
fnstenv
xchg
sub
and
mov
push
fld
aad
jnp
sub
movlps
in
and
repnz
pop
dec
add
xor
test
cmps
cmps
sub
jno
inc
jns
dec
add
mov
xor
sub
pushf
rcl
add
pop
jns
or
lahf
test
jmp
push
hlt
lods
mov
inc
not
xchg
cld
call
mov
ret
js
add
lods
mov
jb
dec
cmps
xor
imul
xchg
popf
fnstcw
lds
sahf
jno
mov
xchg
outs
stos
fwait
mov
int
mov
jne
vprotq
ds
sbb
add
and
fsubr
mov
in
jns
pop
mov
mov
mov
pop
mov
test
and
mov
pop
addr16
shr
jne
(bad)
scas
stos
test
lods
pop
mov
test
lods
rcl
cld
(bad)
cmp
mov
popa
cmp
mov
mov
push
out
mov
loop
test
mov
xor
pop
mov
fild
icebp
dec
nop
cli
push
jno
pop
mov
dec
mov
hlt
stos
jnp
or
inc
pop
add
adc
dec
js
test
mov
sub
adc
dec
and
mov
mov
cmp
jnp
xchg
inc
repnz
js
bound
jns
mov
aam
pop
cs
mov
jbe
jbe
outs
and
mov
pop
mov
popf
retf
xor
xor
cmc
test
push
cmp
or
shl
sbb
xor
(bad)
js
dec
das
mov
mov
std
cwde
repnz
cmp
mov
jns
push
fs
std
sub
add
jle
stc
inc
cmps
and
dec
or
popf
inc
clc
retf
in
rol
sbb
pop
loopne
js
adc
sbb
aad
call
scas
out
jmp
mov
xchg
cmp
push
cmp
stc
ins
les
cmp
loopne
arpl
jp
xor
fs
ins
cli
sbb
push
hlt
sbb
call
ret
jp
mov
sahf
js
in
sbb
sub
mov
imul
pop
test
js
mov
pusha
cwde
aam
rol
push
jo
pop
mov
mov
icebp
inc
add
leave
xchg
mov
xor
iret
loopne
in
inc
or
(bad)
es
xor
and
sub
stos
mov
int3
cmp
push
repnz
mov
stos
fstp
push
outs
pushf
inc
add
mov
mov
das
jecxz
je
cmp
test
pop
add
mov
js
mov
or
or
cmp
scas
jo
out
imul
jae
xor
xor
les
movs
call
xlat
loop
shl
or
pushf
(bad)
fsub
neg
arpl
xchg
xchg
shld
pop
add
loopne
jmp
stos
into
cmp
sti
pop
adc
daa
pop
mov
fwait
popa
pushf
or
mov
xchg
sahf
cld
add
jnp
push
and
gs
mov
xlat
mov
jbe
mov
pop
pop
outs
int
push
lds
inc
(bad)
clc
xlat
call
inc
lods
leave
pop
ins
loope
enter
sub
jnp
xchg
mov
scas
retf
cli
fdiv
cmps
push
inc
xor
push
ret
out
imul
ja
pusha
ins
mov
push
(bad)
icebp
sbb
out
add
mov
hlt
and
test
push
mov
int
ror
call
stos
adc
mov
push
shl
cdq
mov
fsubr
clc
nop
xor
xor
aaa
add
fcomp
nop
xchg
and
dec
mov
enter
xlat
mov
ret
pop
mov
mov
les
jns
shr
scas
push
idiv
cmc
adc
pop
cmps
jg
stos
(bad)
pushf
cli
mov
and
add
sbb
rcl
pop
iret
stos
fldln2
xor
fcom
(bad)
jle
inc
f2xm1
pop
pop
add
stc
xor
outs
enter
fidiv
add
dec
push
sbb
adc
cdq
add
or
jno
outs
dec
inc
cmps
shl
stos
leave
sub
(bad)
data16
add
and
lods
cmp
push
daa
jnp
mov
mov
pop
cmps
or
popf
mov
sub
add
push
inc
loopne
cmps
nop
jnp
int3
(bad)
or
popf
(bad)
and
mov
sub
adc
sbb
push
sub
icebp
mov
repnz
(bad)
jae
lods
push
shl
cli
stc
aas
test
loope
jmp
xchg
es
cmp
popf
test
inc
push
sbb
sub
jecxz
inc
stos
iret
test
pop
and
mov
inc
and
scas
cwde
jne
sbb
jge
add
fild
xor
sbb
pextrw
dec
pop
dec
and
add
jge
inc
pop
call
inc
mov
retf
in
aad
test
xor
xchg
push
push
fsub
repz
mul
inc
in
(bad)
movs
mov
mov
or
sub
xor
mov
sub
and
jle
adc
adc
add
xor
aas
inc
pushf
xor
sub
(bad)
rcl
enter
mov
inc
les
or
cmp
xlat
out
cmp
mov
cwde
movs
mov
adc
lea
inc
push
add
and
jge
or
cmps
fcmovne
std
mov
loopne
xchg
(bad)
sti
in
dec
mov
xchg
dec
cld
addr16
mov
sub
mov
cli
sti
sti
xor
mov
and
sahf
dec
mov
sbb
(bad)
adc
gs
dec
pop
cmp
jp
inc
retf
and
adc
sbb
xchg
dec
(bad)
xchg
inc
dec
lock
inc
aam
stc
lahf
(bad)
xchg
imul
add
sub
sub
sahf
push
fistp
sbb
jmp
inc
jmp
mov
push
pop
icebp
add
retf
rcr
and
iret
add
push
and
pop
push
dec
hlt
cmc
mov
iret
and
and
sbb
jns
adc
add
jno
imul
pop
out
add
or
jne
addr16
ror
jl
and
xor
push
jno
ret
fdiv
in
pop
stos
cld
in
lahf
and
push
movs
out
shl
mov
imul
movs
mov
fist
sahf
jecxz
xor
aas
sbb
cmp
sub
and
adc
mov
repz
xchg
xor
leave
retf
add
out
aad
test
push
es
and
clc
add
jle
inc
or
add
jae
frstor
xor
call
add
pop
mov
mov
mov
(bad)
mov
aas
hlt
mov
adc
jnp
mov
js
pop
sbb
push
call
sub
sub
xlat
stos
push
jp
mov
lods
jne
shl
scas
(bad)
ret
lea
jge
jl
popa
mov
pop
(bad)
inc
std
xor
pop
mov
jle
or
mov
add
test
stc
cmp
out
mov
pushf
aad
push
mov
lea
xor
test
jns
push
ud0
cmp
(bad)
mov
xchg
jmp
enter
inc
jns
xor
and
inc
nop
fist
pop
call
cdq
fcmove
gs
out
and
addr16
test
push
push
out
nop
xchg
mov
adc
xlat
and
leave
in
stos
fstp
mov
pop
inc
test
nop
inc
jecxz
cmp
cmp
scas
retf
bound
pop
push
inc
inc
pop
adc
shr
aam
test
fistp
push
jecxz
(bad)
scas
mov
mov
jle
jae
adc
sbb
cmp
ins
enter
(bad)
enter
cld
lods
bound
shl
xchg
sbb
jl
and
js
jno
jnp
mov
pop
jge
rcl
outs
or
mov
loop
xor
fisub
call
or
repz
shl
retf
pop
and
push
retf
pop
loopne
lods
add
fmul
mov
push
xor
cmp
or
jae
mov
loopne
inc
add
stos
ins
(bad)
je
adc
test
cld
mov
shl
and
inc
jl
sub
stc
(bad)
xor
shr
inc
in
xor
pop
adc
in
or
ret
(bad)
mov
inc
mov
loopne
jg
gs
mov
loop
daa
mov
push
mov
loop
popf
pop
outs
pop
or
pusha
sub
(bad)
int
mov
fcom
ret
dec
jns
pop
fcmovbe
iret
out
or
clc
pop
cmp
cmc
loop
or
mov
xchg
jbe
dec
stos
mov
bound
movs
cmp
sbb
arpl
push
mov
aam
jecxz
cdq
aad
push
stos
xor
or
add
dec
pop
mov
push
enter
ror
popa
cdq
sbb
stc
inc
sub
xchg
pushf
jmp
mov
inc
sbb
mov
mov
jg
addr16
fs
xor
lds
cmps
jnp
add
mov
hlt
in
adc
ss
mov
mov
stc
vmovntdq
sahf
xchg
in
push
(bad)
xchg
dec
jmp
arpl
cmp
jnp
and
inc
xor
in
dec
add
sbb
push
fidivr
pop
ins
repz
das
pop
sbb
jnp
pusha
mov
pop
lods
lods
mov
cmp
ret
(bad)
hlt
scas
and
call
inc
push
mov
pop
jb
cdq
sub
mov
popa
pop
test
inc
loopne
movs
mov
pop
stos
test
test
push
jmp
pop
dec
push
add
aas
mov
inc
clc
cs
lods
fimul
pop
jne
shl
addr16
call
cmc
pop
stos
push
push
dec
imul
gs
mov
(bad)
add
(bad)
pop
fidivr
jne
lea
js
cmp
cwde
inc
add
xchg
xor
inc
dec
add
xlat
jecxz
xchg
and
in
mov
mov
ins
test
mov
mov
mov
daa
jmp
stos
ss
mul
out
mov
sbb
dec
add
lahf
(bad)
sbb
fwait
cmp
hlt
ins
inc
in
loop
std
push
fisttp
mov
popf
stos
rcr
fxch
sbb
mov
sbb
add
fincstp
sahf
xor
mov
bound
pushf
push
jle
pop
std
jae
add
ret
repnz
dec
sbb
ret
pop
push
dec
pop
rol
xchg
adc
jae
jns
jbe
push
or
shr
xor
adc
and
mov
ret
int3
jp
push
add
adc
xor
or
jo
dec
push
arpl
sub
sub
jae
adc
pop
mov
xchg
sbb
cmp
push
inc
push
inc
jne
or
sub
dec
test
rol
shl
cmp
push
jbe
out
pop
adc
fisttp
mov
rcl
repz
gs
inc
fist
out
sub
sub
std
das
sbb
jg
and
gs
or
xchg
mov
mov
mov
or
mov
call
inc
rdmsr
mov
gs
js
sub
sbb
scas
cli
rol
cmp
push
sbb
ja
xchg
ret
dec
pop
popf
loope
fisubr
push
sub
add
ds
pop
dec
push
inc
add
ins
mov
sub
mov
inc
jmp
jbe
jae
mov
out
out
xor
in
dec
aaa
movs
inc
add
mov
mov
retf
in
or
and
shr
adc
adc
cs
cmp
push
cs
cwde
lods
and
dec
and
add
test
int
cmps
imul
fdiv
fcom
mov
aam
xchg
jecxz
mov
sbb
xchg
and
pop
inc
mov
push
or
daa
jno
and
fwait
daa
mov
shl
fnstenv
xlat
aaa
mov
and
shl
push
out
jle
sub
addr16
and
cmp
es
adc
and
jne
fwait
and
loopne
cmp
cmp
cmps
sub
push
cdq
xor
clc
(bad)
loope
addr16
lods
test
add
int
dec
adc
mov
add
push
fisubr
sub
aad
ror
daa
jge
sub
jmp
dec
cs
stos
mov
shl
loopne
push
xor
jnp
dec
je
inc
inc
sub
retf
dec
cwde
add
and
and
add
and
and
mov
xor
sub
rol
sti
dec
int
pushf
dec
mov
or
leave
sub
pop
loope
jle
jge
popf
mov
mov
mov
mov
int
mov
pop
xor
inc
sub
ficom
mov
add
mov
cld
adc
inc
stc
fld
jb
(bad)
add
xlat
mov
(bad)
push
(bad)
jns
clc
shl
repz
mov
jo
sbb
push
movs
push
adc
fwait
int3
das
not
ror
mov
les
xchg
xchg
or
mov
xchg
dec
das
retf
jnp
dec
cld
enter
fwait
lock
mov
mov
cmp
(bad)
sub
pop
rcr
in
xchg
out
test
mov
inc
jg
cmp
adc
ja
or
pop
scas
(bad)
add
outs
cmps
xor
inc
movq
inc
mov
ret
stc
lds
pop
js
sub
push
inc
sbb
xor
js
les
imul
xchg
cli
popa
pop
scas
nop
stc
jbe
or
and
retf
xlat
push
jo
xchg
mov
pop
(bad)
or
ja
ror
or
cmp
fst
jae
jbe
imul
imul
xchg
std
dec
sbb
mov
sub
aaa
push
sbb
mov
or
pop
adc
mov
(bad)
fdivr
mov
mov
ret
cmp
or
sti
xchg
mov
jno
cs
jge
jne
xchg
stos
pop
test
clc
sub
int3
mov
jge
xchg
pop
bound
push
adc
mov
fmul
out
fxch
jno
push
add
sti
fwait
(bad)
fimul
int
xlat
push
xor
cmp
fbld
cdq
mov
(bad)
mov
jbe
sub
or
imul
pop
sub
pop
icebp
retf
frstor
add
mov
push
and
ins
dec
int3
out
std
loop
mov
aad
mov
fwait
in
xchg
mov
cmp
test
das
das
ins
sar
jae
pop
loope
add
adc
movs
js
aam
adc
sahf
dec
mov
in
add
adc
cs
mov
clc
push
pop
push
stc
aas
loopne
cli
jo
mov
add
or
scas
sub
pop
cwde
and
jmp
pusha
popf
add
out
jge
sbb
xchg
inc
adc
lock
xchg
pop
jl
mov
jle
mov
xchg
repnz
sbb
xchg
dec
ret
push
popa
ins
mov
push
rcl
in
popa
fdivr
ror
aad
fdiv
push
push
pusha
mov
addr16
or
jae
cmc
pop
fistp
push
mov
push
mov
pop
in
out
xor
xchg
add
push
jne
bound
add
dec
rol
inc
jmp
adc
shl
fld
gs
icebp
adc
jae
aad
bound
nop
add
pop
or
dec
push
stos
jge
ss
sub
pop
inc
and
push
mov
shl
shl
retf
lahf
adc
shl
push
arpl
inc
daa
mov
adc
mov
sar
aam
loope
add
sub
mov
sbb
mov
loopne
sub
inc
add
call
xor
stos
mov
jnp
fwait
sub
pushf
xchg
jnp
nop
ret
ficomp
in
sub
and
jne
lods
std
test
mov
div
cmp
mov
mov
hlt
xchg
xor
jg
xchg
jecxz
add
nop
pop
mov
mov
ins
(bad)
jg
ret
mov
fcomp
add
cmp
les
xchg
sti
dec
shl
cmp
xchg
in
lods
lahf
imul
xchg
adc
icebp
(bad)
rol
(bad)
fdivr
xchg
sbb
mov
xchg
pop
les
xlat
aas
and
popf
in
add
add
xor
pop
mov
pop
jp
inc
popa
xor
sub
iret
popf
mov
(bad)
out
push
xor
jns
fucomp
ins
mov
adc
int3
inc
(bad)
jno
jmp
xchg
jmp
push
ret
mov
cmps
cdq
dec
sub
enter
mov
sahf
jae
in
mov
data16
jo
sbb
mov
std
mov
mov
std
adc
outs
pop
mov
sti
lods
jge
(bad)
iret
test
shr
dec
cmp
arpl
(bad)
(bad)
adc
es
stc
jnp
jmp
push
xchg
adc
dec
mov
fst
adc
sub
hlt
mov
cdq
dec
repnz
(bad)
jmp
inc
lods
loop
add
bswap
cmc
sub
test
jbe
test
and
mov
push
(bad)
arpl
gs
sub
jg
out
inc
inc
xchg
pop
in
test
push
repnz
loope
pop
mov
loop
lea
enter
mov
popa
sbb
hlt
push
sub
xchg
shl
retf
aas
xchg
icebp
jns
inc
push
xor
mov
push
push
cmp
popf
push
mov
cli
call
iret
and
std
bound
xchg
jno
and
cld
pusha
mov
cwde
test
retf
ror
das
ins
mov
cmp
xor
daa
and
(bad)
int
and
movs
jmp
stc
(bad)
retf
push
mov
das
call
shl
xchg
mov
nop
sub
sbb
jns
sar
lea
lods
aas
cs
xor
add
xchg
mov
mov
(bad)
movs
cmps
jae
jle
xor
mov
inc
adc
mov
adc
out
xchg
dec
ins
sbb
dec
rcr
xchg
retf
and
es
pop
push
call
scas
stc
retf
jge
dec
pop
pop
dec
jne
lods
loopne
mov
cmp
mov
inc
inc
sti
pop
adc
mov
or
popf
rol
es
mov
cs
scas
xchg
je
dec
loopne
mov
mov
gs
ret
test
retf
dec
loope
aaa
pop
out
xchg
scas
sub
cmc
fdivr
call
cmps
push
mov
pop
mov
or
in
sub
icebp
dec
xchg
push
mov
shr
fdivr
mov
cmp
aas
sub
bound
mov
xor
and
sbb
imul
fstp
int
mov
out
out
and
push
(bad)
test
mov
out
xor
test
(bad)
dec
cmp
pop
dec
and
inc
fmul
xor
adc
std
sub
mov
cmp
pop
push
mov
fild
in
xor
stc
inc
loopne
mov
pop
cmc
cmp
ins
mov
mov
or
xchg
sti
xlat
call
ds
push
ret
mov
adc
ror
or
das
mov
movs
sbb
cld
add
imul
cmp
cmp
push
jne
fstp
cmps
retf
jbe
dec
jae
nop
mov
xchg
cmc
in
add
cmp
adc
sahf
xor
dec
cs
mov
add
xchg
xchg
lea
stos
popf
aad
xchg
leave
aaa
mov
repnz
fnstsw
aam
into
ds
mov
mov
mov
cmp
popa
or
mov
fimul
jnp
into
paddw
ins
popf
adc
jae
cmps
pop
xor
xchg
push
or
test
xchg
jle
out
adc
mov
mov
in
sbb
in
push
mov
cmp
call
jb
mov
bound
adc
pop
or
pcmpeqb
mov
pusha
sub
add
in
(bad)
fist
int
inc
sbb
sub
and
fadd
pop
outs
sbb
jae
inc
cld
cmp
lahf
pusha
test
mov
add
(bad)
rol
leave
fwait
int3
inc
cmp
sbb
leave
xchg
jle
aas
or
icebp
push
fisub
test
pop
les
cmc
icebp
or
xchg
stos
add
imul
sub
xlat
add
lock
or
pop
shl
dec
mov
jb
pop
push
push
addr16
outs
test
mov
jmp
(bad)
adc
outs
jns
(bad)
push
sti
(bad)
popf
mov
ja
repz
sub
mov
and
sub
add
dec
(bad)
fdivr
mov
mov
int
movs
add
xchg
jae
mov
and
movs
add
test
jnp
add
pusha
and
gs
mov
out
sbb
aam
iret
mov
mov
in
arpl
fcmovnb
push
jg
or
pop
mov
movs
shr
int3
dec
shl
in
aad
sbb
and
xchg
imul
and
jge
cmp
fcom
pop
loop
xchg
mov
(bad)
cmc
sbb
shr
dec
fwait
stos
repz
mov
dec
not
push
leave
and
sub
mov
mov
jmp
push
jno
enter
push
mov
imul
jno
shl
pusha
rcr
(bad)
pop
sbb
ds
pop
xchg
sti
mov
int3
fild
shl
jo
idiv
(bad)
sub
or
iret
jg
les
(bad)
jns
mov
jns
in
mov
xor
mov
cmps
push
shl
or
pop
push
jle
dec
sahf
xor
mov
arpl
mov
clc
(bad)
dec
mov
(bad)
arpl
mov
jl
dec
pop
cmp
mov
sbb
mov
jg
or
xor
jns
push
cmp
ins
aad
jb
sub
addr16
jecxz
shl
sub
add
rep
xor
fxch
jnp
jnp
in
in
inc
jg
fnstcw
lods
push
mov
inc
or
inc
mov
call
push
fdivr
cwde
mov
sbb
jg
cmp
xlat
shr
popa
call
cmp
cmp
bound
shr
retf
adc
test
cmp
sub
dec
ja
dec
(bad)
push
out
in
mov
pop
hlt
jne
and
test
call
icebp
nop
iret
jno
loop
push
mov
mov
inc
push
adc
ds
pop
in
adc
pop
xchg
loop
lds
cld
fcmovbe
cli
repnz
loop
loop
cdq
call
iret
dec
adc
inc
test
fcom
lock
into
pop
fwait
ja
leave
pop
loopne
mov
mov
push
xor
or
cmps
pop
add
add
dec
add
stos
mov
pop
inc
xchg
mov
dec
mov
pusha
ds
lea
sar
mov
jno
and
outs
mov
popf
cmp
retf
inc
inc
add
mov
mul
cdq
pop
shl
pop
mov
push
cmp
sub
bound
mov
push
fmul
jo
mov
jnp
sub
adc
push
das
sub
fwait
ret
in
test
sub
fdivr
clc
push
loop
loop
fistp
(bad)
push
mov
add
push
nop
push
mov
jmp
imul
jg
sub
sub
das
pop
xchg
movs
mov
imul
ins
repnz
fwait
das
int
or
add
pop
ja
loope
cmp
cmps
dec
mov
pop
scas
pop
add
jnp
out
ss
in
jo
shr
jae
sar
les
and
loopne
add
out
or
cs
aaa
sbb
pop
pop
mov
push
les
jne
xchg
or
xchg
bound
mov
fiadd
push
add
push
push
sbb
lea
push
mov
or
xor
ds
sub
inc
jecxz
and
mov
xchg
rcl
rep
xchg
sub
movs
add
cdq
cmps
push
dec
and
cmps
cs
pop
inc
push
jmp
dec
scas
loopne
loop
lea
in
and
push
adc
das
in
jb
xor
(bad)
jmp
out
(bad)
in
mov
pop
cli
sub
mov
jl
dec
fisttp
mov
push
je
cdq
test
dec
jmp
mov
inc
or
sub
and
mov
jl
into
jmp
xchg
lahf
arpl
xor
sbb
cmps
xchg
mov
sub
add
adc
push
out
cmp
push
adc
lock
sub
jmp
xchg
pop
inc
psrad
ss
int3
mov
cmps
iret
fcmove
mov
adc
sbb
fs
scas
out
neg
jl
rcl
loop
stos
mov
sub
int3
js
mov
jno
leave
sahf
cmp
dec
(bad)
(bad)
cmp
mov
call
cmp
adc
in
jp
sub
inc
mov
xor
in
pushf
jmp
out
icebp
imul
xor
inc
pop
dec
dec
das
push
push
mov
add
sbb
xor
cld
test
aaa
xor
nop
call
leave
lods
das
adc
and
pop
pop
int3
add
imul
adc
push
sahf
loopne
fwait
scas
or
dec
popa
sti
mov
jae
or
or
test
shl
into
(bad)
mov
jo
mov
push
jecxz
pop
and
rcr
inc
mov
push
adc
repnz
je
call
sbb
(bad)
out
adc
mov
mov
adc
fdiv
in
nop
test
sub
aaa
xchg
mov
mov
mov
cmp
pop
or
xchg
push
add
xchg
pop
jno
xor
loope
jb
arpl
lods
and
retf
mov
aas
jl
mov
add
cwde
les
mov
aam
mov
mov
(bad)
jl
in
ja
aaa
(bad)
cs
aaa
push
xor
pop
jmp
inc
fwait
cmp
icebp
dec
sbb
cmps
clc
pop
and
test
jmp
jge
jecxz
sbb
icebp
movs
out
xchg
xchg
imul
shl
sub
ret
cwde
(bad)
js
sbb
sbb
movs
ss
pop
cmp
clc
iret
scas
imul
inc
sub
push
clc
test
fisub
mov
push
cli
adc
(bad)
icebp
or
add
jp
ins
jae
inc
ins
shl
mov
add
adc
jmp
mov
ret
xchg
mov
and
mov
push
pusha
jnp
in
scas
pop
ss
popa
repnz
sbb
jecxz
pop
lock
push
(bad)
push
lahf
jg
aaa
lahf
and
dec
dec
repz
add
push
dec
mov
out
jecxz
das
inc
mov
mov
fwait
cmc
shl
mov
adc
mov
sar
inc
jbe
cmp
loope
add
out
pop
(bad)
cmc
add
push
push
(bad)
fwait
push
sbb
jb
stc
sub
pop
fstp
xchg
inc
cs
call
jo
xlat
pop
push
xchg
mov
sbb
imul
sahf
stos
jmp
fnsave
nop
scas
jg
popf
rcl
mov
jmp
sahf
sub
rcl
sbb
mov
mov
add
and
rcr
push
and
cdq
lahf
arpl
xchg
dec
push
add
cmp
and
rol
stc
mov
lods
mov
add
popa
and
and
mov
xchg
push
fs
retf
mov
push
push
stos
fbld
aas
in
fcomip
jp
push
xor
cmp
mov
hlt
jno
xor
pop
cld
in
ins
xchg
call
movs
sahf
push
fadd
lds
or
shl
jl
repnz
mov
xor
fs
dec
jno
dec
xor
and
cmc
fwait
bound
xchg
(bad)
cmc
test
inc
and
jb
pop
ss
and
das
(bad)
out
or
lods
fstp
push
mov
scas
movs
loopne
mov
push
fidivr
mov
daa
mov
test
pminsw
jl
xor
or
lahf
ret
hlt
mov
push
mov
movs
mov
(bad)
addr16
mov
(bad)
sub
cmp
outs
popf
stos
push
or
xor
cs
jecxz
mov
pop
out
and
sbb
xchg
ret
push
add
out
mov
push
jnp
das
sar
and
mov
jg
pop
mov
sbb
jmp
add
mov
mov
icebp
fnsave
xor
pop
sti
dec
dec
stc
adc
jo
data16
mov
or
pop
jno
outs
add
das
movs
mov
or
or
adc
cmp
push
xor
adc
adc
jp
jo
adc
push
or
imul
add
ret
mov
jno
xor
adc
jo
inc
psrlq
sub
jecxz
mov
xor
fld
cmc
or
iret
pop
sar
jmp
gs
pop
push
sahf
(bad)
pop
pop
inc
test
cmp
sti
pop
cdq
and
cmp
in
fst
sub
mov
pusha
cdq
inc
push
mov
test
inc
int3
mov
add
aam
int
mov
pop
fnstenv
cwde
jge
mov
push
ins
cmp
adc
xchg
sbb
les
inc
das
push
pusha
jns
inc
mov
dec
(bad)
movs
aad
cmps
call
sub
jns
pop
push
xchg
aaa
pop
add
inc
inc
stos
movs
cmp
xor
mov
stos
pop
xor
pusha
and
push
cmp
sbb
movs
xor
ffree
outs
xor
cmp
add
fwait
push
cmps
fst
aas
add
loope
out
stos
rcr
out
in
mov
sbb
cdq
xor
cli
sbb
dec
mov
dec
mov
scas
inc
in
jmp
push
mov
add
mov
popf
cmp
mov
mov
mov
push
push
out
(bad)
arpl
cdq
fist
in
or
mov
jno
add
inc
enter
or
or
int3
and
adc
addr16
dec
fs
loope
neg
aad
outs
lds
dec
je
pushf
ror
xor
adc
dec
mov
out
(bad)
push
loope
clc
push
inc
ins
scas
arpl
lock
mov
sar
stos
push
jns
push
(bad)
inc
pusha
push
sub
push
push
mov
sbb
scas
and
test
dec
test
and
push
addr16
sub
loope
adc
in
mov
ins
repz
dec
fldenv
jno
lods
push
mov
and
(bad)
jae
mov
cmp
arpl
ds
sar
xor
psrlw
scas
pop
xlat
dec
pop
jae
pusha
shl
sub
outs
sub
iret
lods
outs
fiadd
outs
movs
movs
xchg
and
push
inc
or
cmp
outs
mov
dec
sar
push
not
stos
test
bound
add
cmp
dec
xchg
stos
dec
adc
inc
(bad)
int3
inc
xchg
(bad)
imul
sbb
hlt
fisttp
(bad)
cli
outs
xor
ins
mov
fmul
mov
movs
xor
sbb
jb
in
gs
aam
or
aam
add
adc
add
lahf
push
fs
loope
dec
adc
test
clc
fimul
mov
xchg
(bad)
inc
jo
cmp
clc
pop
cmp
dec
jg
or
inc
ins
add
into
inc
cwde
push
xor
add
retf
sbb
xor
hlt
xchg
stos
test
jg
(bad)
mov
nop
loope
or
push
and
dec
mov
push
stos
adc
push
sbb
cdq
movs
or
out
sbb
fdiv
mov
mov
adc
lahf
and
call
mov
mov
mov
mov
outs
mov
inc
sbb
das
ins
mov
cmp
sub
(bad)
loope
int
jb
data16
jmp
(bad)
stos
inc
jb
data16
sub
xrelease
call
mov
or
iret
stc
or
outs
pushf
pop
adc
out
push
dec
mov
cmp
ss
les
call
push
sub
xor
inc
outs
repnz
mov
das
lds
mov
jo
pop
mov
inc
cli
in
sub
dec
scas
jmp
enter
mov
mov
test
xor
or
(bad)
es
sti
test
push
push
in
ins
test
loopne
mov
adc
mov
mov
fwait
mov
out
mov
push
movs
sub
mov
xor
ins
adc
mov
push
call
or
or
jnp
pusha
pop
cld
adc
icebp
xlat
xchg
(bad)
retf
faddp
scas
stos
sub
(bad)
xor
out
outs
push
mov
add
lods
adc
inc
aam
xchg
push
xchg
test
cmp
pop
(bad)
mov
jnp
rcl
xchg
popf
daa
mov
push
xor
jg
sub
gs
inc
retf
mov
adc
add
retf
sbb
mov
call
adc
fild
mov
dec
xchg
test
inc
pop
bound
cdq
mov
dec
pusha
mov
dec
fmul
cmp
adc
xchg
pushf
daa
jo
add
aaa
jl
pop
pop
cmp
adc
mov
xor
xor
rcr
loope
dec
stos
fdiv
jae
xor
cmps
push
xlat
ins
jo
adc
sub
sbb
add
add
fucomi
test
sub
mov
pop
out
gs
faddp
repz
rol
jns
dec
mov
repz
sahf
mov
jge
xor
cli
lea
jmp
mov
sbb
pop
jnp
sahf
fcmovb
ret
cwde
outs
jle
inc
cmp
ja
inc
jo
and
sbb
cwde
dec
ret
imul
pop
les
jmp
scas
clc
adc
sbb
push
dec
push
sub
cmp
nop
ja
cmp
inc
in
sbb
mov
fwait
leave
fmul
movs
jne
mov
sar
mov
lods
sub
mov
movs
mov
pop
push
movs
push
(bad)
aas
lods
and
and
(bad)
nop
mov
cmp
pop
add
sbb
(bad)
ficom
lea
retf
push
or
cmp
call
dec
retf
les
stc
pop
inc
jmp
inc
cmps
int
fadd
stos
jp
mov
out
mov
jb
and
add
fbld
fdivr
mov
ds
sub
or
outs
daa
out
sbb
cld
ds
mov
jne
mov
(bad)
and
test
jns
icebp
cmp
cld
mov
pop
js
push
mov
push
stc
xor
gs
pop
or
sub
sub
cmp
pop
mov
ja
mov
movs
mov
in
mov
cmp
jg
ss
sti
call
and
je
aas
adc
pop
jae
cvtdq2ps
mov
lods
xor
cli
cld
test
movs
mov
push
stc
or
push
div
push
fwait
mov
nop
out
int3
dec
or
mov
std
ret
das
inc
iret
jecxz
cwde
les
mov
scas
pop
or
cwde
xchg
xor
dec
repnz
call
mov
ja
jle
leave
pop
(bad)
fild
inc
in
(bad)
loop
dec
cdq
pop
(bad)
pop
scas
xchg
retf
call
loope
mov
xor
jno
sti
xchg
push
mov
js
dec
push
sub
lds
movs
add
data16
pop
adc
outs
ins
imul
mov
repz
jecxz
clc
xchg
cmp
push
dec
pop
in
ss
add
xor
loope
nop
in
push
popa
jle
out
iret
cmp
popa
inc
xor
hlt
dec
push
mov
iret
mov
retf
call
leave
jns
les
cs
xor
les
and
test
in
mov
inc
sti
icebp
sbb
fsubrp
push
sbb
lds
xchg
push
add
mov
sti
jns
(bad)
push
add
mov
jg
xor
adc
inc
mov
and
addr16
daa
push
add
(bad)
shl
push
cmc
out
xor
mov
push
push
sub
dec
xadd
scas
enter
scas
xor
rcr
push
pop
lea
adc
mov
jl
xor
jmp
(bad)
jmp
in
and
jne
cs
les
xchg
fdiv
(bad)
in
popf
pop
(bad)
adc
test
enter
jmp
iret
jecxz
aas
jno
jns
lock
pop
hlt
sbb
in
sub
inc
adc
mov
push
cmc
loope
xchg
add
out
icebp
xchg
sub
cmp
xor
iret
sub
push
mov
xor
loopne
xor
add
stos
xor
mov
and
in
ins
dec
in
mov
mov
and
lock
push
xchg
aaa
fnstcw
xchg
push
jbe
lods
jecxz
mov
jno
xchg
add
push
pusha
pop
sbb
or
add
or
mov
inc
pusha
neg
cmp
sbb
sub
(bad)
leave
inc
inc
retf
push
cld
add
xor
clc
and
xchg
mov
cmp
mov
adc
add
or
psubusw
jne
mov
repz
adc
inc
clc
fcmovu
push
out
pop
pop
inc
call
mov
sub
mov
out
and
adc
dec
movs
sar
adc
and
mov
daa
into
scas
xchg
data16
inc
jne
in
push
(bad)
mov
cld
ret
ja
push
test
in
lds
jns
das
out
aaa
(bad)
pop
cmps
lds
sub
mov
and
cmps
cmp
retf
jmp
adc
xchg
mov
ins
cld
mov
sub
mov
(bad)
xchg
push
mov
adc
add
jns
inc
xor
icebp
not
pop
pop
mov
sub
mov
jmp
and
xlat
fiadd
outs
int3
popa
jmp
mov
or
jmp
repz
mov
dec
jmp
mov
fisub
xlat
fimul
dec
or
ins
xor
movs
pop
leave
daa
or
ror
cmc
int
repz
std
call
jg
adc
aas
push
das
bound
push
mov
mov
add
cmp
push
mov
xchg
sti
cwde
and
ror
or
sti
and
call
aas
or
mov
sub
or
jae
mov
or
sub
cs
aas
stos
inc
int3
out
sbb
sub
fimul
add
ins
fsubrp
ins
inc
mov
cmp
fisttp
mov
xchg
push
inc
gs
jae
ss
mov
arpl
sbb
aaa
out
(bad)
cmp
test
pop
fisttp
or
stos
lds
test
and
pusha
ins
sub
cmp
cs
daa
hlt
jo
and
push
sar
mov
pop
loope
int
not
xlat
mov
lods
jo
mov
out
jg
out
test
sub
or
call
pop
jge
std
jmp
add
inc
call
push
sbb
call
mov
shr
cmp
repz
aam
in
add
jl
out
cld
adc
mov
or
mov
(bad)
jno
mov
cwde
test
ins
lods
and
xchg
pop
mov
sub
or
sbb
int3
cmps
add
jns
mov
cmp
mov
jb
stos
loope
pop
mov
jge
or
lods
das
xor
xchg
dec
ja
cmp
(bad)
sti
push
push
scas
fcom
inc
push
aad
push
popa
jbe
mov
ds
and
cmps
cmp
mov
shl
and
daa
rcr
jl
rcr
imul
adc
inc
das
mov
mov
jmp
add
push
jmp
xchg
jne
out
bound
push
stos
popa
in
les
push
inc
clc
xchg
call
push
push
aad
imul
shl
jns
sar
mov
dec
lods
xchg
cmp
sbb
mul
fidiv
(bad)
jl
xlat
scas
rcr
pop
mov
jge
aad
push
out
shl
lahf
cld
(bad)
jmp
and
push
test
xor
(bad)
jo
pop
mov
jg
ins
mov
xchg
jp
mov
(bad)
pop
xor
sbb
or
ins
inc
int
icebp
in
ds
cmp
cld
mov
cwde
or
cdq
mov
in
sbb
xor
cwde
repnz
cmp
imul
lock
ror
(bad)
inc
les
xchg
mov
je
push
dec
jp
lock
(bad)
xchg
imul
inc
fs
je
dec
inc
cld
sub
loop
cmp
mov
xchg
or
outs
jnp
enter
add
sub
inc
xor
mov
lods
add
loope
cld
mov
xchg
mov
fcmovnb
xchg
mov
pushf
xchg
mov
sub
out
xlat
in
add
push
push
pop
fwait
jl
repnz
inc
int
cmp
cmps
mov
ror
sbb
in
and
mov
leave
mov
push
int3
in
je
jbe
jp
leave
or
push
push
call
daa
popf
jl
movs
das
ja
ins
push
pop
pop
sub
push
mov
mov
cmc
inc
pop
stos
jne
fldcw
adc
arpl
sbb
mov
pmullw
shr
fsubr
jge
pop
neg
repz
cdq
out
call
cmp
mov
jg
shl
gs
pop
rcr
mov
dec
enter
test
sub
out
sub
out
mov
pop
jnp
scas
xchg
sbb
loope
cmps
and
outs
xor
xchg
push
adc
ret
push
inc
test
mov
sub
shl
inc
ds
out
addr16
pop
sahf
lahf
in
fst
scas
lods
inc
dec
and
pusha
mov
pushf
vpackssdw
jle
dec
fcom
into
pop
jns
sbb
sahf
inc
add
push
(bad)
sbb
mov
adc
or
xor
mov
hlt
add
ins
mov
mov
jae
mov
lods
mov
fld
dec
and
inc
ja
sub
pop
and
push
retf
div
and
sahf
pushf
outs
movs
xchg
pop
mov
xchg
mov
pop
push
xchg
arpl
add
jg
cdq
sbb
cmc
iret
jns
out
jo
add
ror
push
push
sti
fst
cmps
mov
popa
pusha
in
sbb
out
das
in
clc
xlat
and
or
bound
push
jne
mov
popa
push
pop
mov
push
subps
mov
cmp
stc
inc
call
cs
sbb
push
xor
cli
fiadd
pop
imul
cmp
pop
or
xor
aas
dec
pop
ret
sub
loop
cmc
into
mov
ins
jno
xchg
jmp
out
lahf
or
mov
ret
je
dec
push
xor
cdq
or
cdq
mov
shr
pusha
dec
scas
or
xchg
es
ret
jmp
push
xchg
dec
mov
xchg
cwde
push
push
push
sub
call
mov
sti
xlat
jg
pop
fld
lods
push
cld
data16
cwde
xchg
jne
jmp
in
push
sar
or
icebp
lock
aam
jae
sahf
ret
pop
and
pop
cld
movs
loop
daa
repz
mov
pushaw
xchg
imul
hlt
jle
ja
enter
jbe
ins
xchg
iret
mov
xchg
jmp
fcmove
and
dec
aam
cwde
js
shr
dec
push
sti
dec
xchg
sbb
arpl
xor
popf
dec
dec
not
mov
or
pusha
sub
or
ds
fld
xor
aad
mov
aad
xor
outs
pop
add
je
pop
add
imul
adc
cmp
popf
sar
stos
add
or
or
ins
xchg
and
sub
push
cmp
add
imul
jp
out
shl
pop
dec
push
rcr
dec
movs
adc
fiadd
xchg
sbb
inc
and
mov
cmp
imul
js
or
les
aas
xor
jno
xor
les
dec
fs
inc
pop
in
ja
dec
jmp
loope
mov
xor
mov
jbe
jge
xlat
adc
enter
cmps
push
sbb
repz
pop
lods
mov
or
out
pop
(bad)
cmp
mov
pop
sub
sbb
fsub
outs
pop
cmps
ror
adc
out
mov
mov
mov
and
scas
call
icebp
pop
mov
or
sbb
(bad)
xor
popf
push
inc
adc
or
pop
sahf
je
cmps
lds
inc
sar
daa
pushf
popa
scas
int
dec
sub
adc
test
jecxz
jbe
dec
push
test
retf
fs
pushf
pop
xchg
das
or
mov
int
add
daa
mov
cmovg
and
(bad)
inc
cmp
daa
or
sub
inc
pop
mov
stc
imul
jb
arpl
dec
lock
fisttp
push
cli
xchg
xchg
mov
in
scas
sub
sbb
cli
imul
movs
pushf
out
sbb
push
xor
sbb
or
sar
push
xor
add
and
xchg
or
and
rol
lahf
pop
sar
ficomp
fidiv
aad
pop
and
or
mov
add
test
xor
push
jmp
in
jne
xor
xor
or
jnp
fld
push
jge
sub
jecxz
jae
push
(bad)
hlt
(bad)
imul
lea
adc
jne
lea
scas
fmul
xchg
addr16
dec
call
rcr
xchg
scas
and
inc
sbb
push
sbb
dec
das
sbb
lods
mov
pop
and
mov
jl
push
ss
loope
sub
or
sar
repz
imul
or
cs
aam
or
xchg
dec
add
stc
test
data16
xlat
cmps
fld
es
or
mov
xchg
pop
in
call
ficom
sahf
add
xor
fst
mov
iret
fldcw
fmul
aas
xor
dec
aas
mov
lods
pop
je
and
push
inc
out
inc
pop
and
mov
dec
pop
mov
push
cmp
call
jno
das
xor
popf
rcl
mov
push
ins
jno
mov
fs
cmps
je
pop
or
into
scas
pop
push
or
pop
jp
cmp
inc
pop
mov
jmp
(bad)
xchg
xchg
(bad)
pushf
mov
jo
sbb
mov
enter
das
iret
dec
js
test
js
sbb
(bad)
sub
jns
or
out
aam
xchg
mov
pop
add
xchg
pop
shl
sbb
lods
dec
push
cmp
and
adc
je
inc
add
inc
lods
xchg
push
in
sbb
clc
jle
test
sbb
sbb
jns
(bad)
mov
mov
mov
inc
mov
mov
mov
sub
lahf
das
dec
mov
mov
js
sub
ror
popf
sub
cmps
jo
icebp
in
dec
pop
add
sub
int3
pop
or
pushf
sbb
jmp
js
addr16
ss
sti
ror
xor
mov
sub
or
shl
inc
push
adc
sbb
cdq
les
ins
aad
push
xchg
or
xor
inc
test
pop
stos
cdq
mov
dec
in
(bad)
loopne
adc
cdq
jge
enter
adc
out
mov
mov
jle
bnd
cmp
retf
push
xchg
retf
mov
nop
cmp
(bad)
adc
jle
mov
xchg
inc
add
in
mov
rcl
pop
sub
push
jle
xor
dec
push
mov
jmp
retf
sub
loopne
and
mov
in
lods
ret
mov
cld
pusha
mov
clc
je
sti
ja
data16
ins
pop
pop
loopne
sbb
(bad)
jo
sub
pop
and
xor
mov
repz
jle
jl
(bad)
std
adc
(bad)
cmp
sub
clc
add
fadd
loope
xchg
rcr
cmp
push
push
leave
xchg
jmp
out
hlt
int3
mov
repnz
test
(bad)
sbb
inc
je
sub
movs
data16
or
and
mov
out
fnstcw
ficom
ds
loope
test
out
mov
repnz
std
pop
std
push
repz
push
ret
cwde
push
test
pop
add
xchg
dec
jl
out
jmp
push
and
pushf
push
ret
(bad)
cmc
movs
das
fwait
data16
jge
arpl
addr16
mov
outs
push
or
jmp
fwait
and
xchg
nop
cmp
dec
sub
or
in
cld
jne
jnp
repz
stos
sub
pop
push
jmp
int3
jno
jecxz
mov
pusha
(bad)
push
div
jo
mov
mov
ret
daa
and
mov
jl
mov
mov
stos
(bad)
in
scas
int3
leave
xlat
je
in
sub
add
dec
fidiv
cwde
mov
mul
xchg
adc
ins
jno
pop
jmp
inc
jne
mov
sbb
fs
dec
push
cmp
lds
mov
pop
lahf
daa
jecxz
push
aaa
mov
cli
jbe
lds
cmp
xchg
pop
mul
sub
enter
and
fstp
dec
(bad)
sub
dec
xor
sar
stos
loop
push
push
addr16
dec
jg
dec
or
pop
enter
in
std
(bad)
(bad)
jmp
movs
mov
xchg
jmp
sub
movaps
or
adc
stc
(bad)
idiv
lods
hlt
bound
xchg
mov
pop
ins
(bad)
mov
or
cmps
sub
jmp
shr
lahf
push
jae
or
xchg
xchg
in
mov
in
fsubr
and
js
push
sub
jle
or
sbb
fisubr
jnp
pop
dec
push
push
aam
mov
cmp
ror
or
fnstsw
jo
cdq
pop
xor
sti
cmp
mov
cli
out
push
and
test
jl
adc
cmp
jne
shl
push
scas
sbb
xchg
sbb
sub
repz
xor
and
push
(bad)
pop
addr16
mov
nop
xor
mov
(bad)
das
mov
jae
js
arpl
fisubr
and
je
ss
psrlw
jmp
scas
mov
dec
lods
mov
adc
out
sub
push
(bad)
sbb
push
out
push
pushf
and
mov
and
mov
cmp
push
rcl
mov
pushf
(bad)
icebp
pop
and
mov
xor
adc
cmp
xchg
inc
faddp
mov
sub
mov
mov
jae
les
push
mov
jno
or
dec
lahf
in
scas
repz
pusha
dec
jb
es
test
jmp
add
loope
fs
aam
ret
mov
cmp
jmp
popa
loope
sub
jp
fist
mov
mov
aas
out
enter
xchg
je
(bad)
cmp
cmp
mov
into
push
xor
stos
dec
nop
pop
inc
ret
pop
and
fstp
mov
adc
xor
add
xlat
pop
add
neg
sub
rcr
ret
sub
repz
aam
mov
int3
pop
outs
stos
fdiv
sbb
or
dec
sub
sub
aam
(bad)
fsubr
call
or
or
mov
pop
mov
cmp
jnp
xchg
gs
xchg
sub
popa
inc
loop
xor
test
jp
bound
push
(bad)
cs
loop
out
xchg
jl
adc
dec
jns
push
add
push
movs
imul
out
mov
xor
mov
lods
jmp
retf
pop
loop
jnp
mov
or
shr
and
pop
adc
imul
arpl
xchg
fdivrp
jnp
shr
xchg
idiv
pop
loope
mov
mov
push
pop
imul
imul
jno
add
pusha
fisubr
popa
and
xlat
adc
div
cmp
leave
adc
ret
mov
mov
jp
mov
and
ins
outs
add
jmp
mul
ins
mov
push
add
repz
rcl
out
xor
pop
push
mov
sbb
dec
imul
out
mov
icebp
icebp
lock
jle
loopne
pusha
adc
add
pusha
in
xchg
out
fstp
setb
lds
xrelease
sbb
iret
(bad)
adc
(bad)
scas
fwait
and
sbb
add
mov
popf
xor
push
pop
call
mov
lock
mov
in
ja
lds
mov
out
gs
(bad)
je
xor
addr16
push
ror
cmp
sbb
enter
hlt
sbb
popf
pop
in
ret
dec
sub
int
push
outs
test
rol
(bad)
(bad)
mov
cmc
mov
retf
call
inc
lea
mov
sub
sbb
cmps
sbb
sbb
addr16
xchg
int3
jge
arpl
aad
ret
je
in
or
lods
jnp
out
mov
jl
int3
fsubr
adc
mov
stos
les
stc
jbe
pop
lods
ficomp
mov
jge
leave
or
xchg
call
addr16
lock
pop
lea
fwait
mov
mov
aaa
inc
nop
mov
add
lods
jg
ins
xor
test
jecxz
inc
nop
jns
les
in
aaa
add
xor
(bad)
jbe
push
pop
and
xchg
jecxz
shr
jmp
fisubr
cli
xchg
jb
mov
push
aad
adc
in
shl
retf
pop
xchg
into
inc
mov
(bad)
ins
adc
push
sub
push
pop
(bad)
xchg
out
sub
imul
mov
loop
xchg
mov
inc
imul
mov
xor
jecxz
outs
jmp
cmps
dec
add
adc
cdq
add
shl
fs
sar
in
adc
jae
pop
pop
dec
imul
hlt
ins
je
int
inc
sbb
xchg
lahf
dec
outs
loopne
es
push
lods
data16
sub
fwait
jne
and
loop
or
pop
mov
(bad)
rol
cdq
stos
repnz
add
retf
adc
ret
xor
jne
xchg
jno
mov
mov
push
cmp
jno
cdq
pop
les
pop
popa
sub
scas
das
into
(bad)
and
mov
xlat
hlt
aas
sub
xor
(bad)
add
int
call
push
sub
xor
dec
mov
jb
jl
inc
inc
xchg
fsubr
or
jo
mov
add
ss
mov
iret
rdtsc
ret
jbe
enter
cmp
cmc
out
mov
out
cdq
mov
or
dec
pop
mov
(bad)
ins
and
in
pop
or
sub
movs
retf
leave
dec
mov
pusha
fidivr
and
mov
lahf
jne
out
lods
nop
xchg
mov
ds
inc
(bad)
push
aas
cmp
push
call
retf
push
fisub
out
or
nop
fbstp
xchg
sti
cli
fidivr
and
inc
add
xchg
sar
movs
ret
sbb
call
imul
xchg
xor
clc
or
mov
fcomp
scas
retf
(bad)
push
jmp
pusha
out
cdq
pop
in
push
test
or
sub
dec
jmp
movs
and
lahf
mov
call
add
loop
clc
fwait
pusha
jle
fs
je
ds
aad
xor
and
aad
mov
dec
cmps
jbe
rcr
push
jns
xor
or
fisubr
test
sahf
xchg
ja
cdq
(bad)
jg
push
jl
mov
adc
pusha
aaa
jg
movs
push
lods
mov
and
sub
dec
sahf
(bad)
test
movs
inc
sub
cmp
jmp
or
jns
int
das
lea
cmp
ret
pop
lods
pop
mov
loope
in
cs
xchg
popa
out
jbe
inc
mov
mov
pushf
mov
dec
nop
pop
in
sti
cwde
push
mov
cwde
movs
mov
arpl
aaa
in
jmp
movs
jp
int
xor
inc
add
xchg
mov
mov
mov
lods
fcom
xchg
icebp
fsub
jge
(bad)
jmp
pop
jne
dec
inc
mov
sbb
out
das
mov
pop
jne
push
sub
push
cmp
ins
test
jno
ja
inc
dec
jmp
inc
sti
adc
mov
pop
shr
pushf
ror
movhps
leave
dec
shr
and
or
pop
sbb
mov
mov
loopne
loop
(bad)
in
push
sub
jae
loop
loope
pop
add
dec
mov
mov
mov
mov
jae
scas
pop
pop
inc
lods
in
mov
movs
popf
sbb
popa
loop
std
test
add
jne
push
fs
stos
sub
pop
lods
jge
cmp
jl
pop
adc
loope
call
cmp
jecxz
mov
stos
cmc
pop
sahf
scas
sar
clc
and
mov
test
and
retf
cmps
sub
xchg
loopne
cwde
sbb
and
pop
int3
add
push
pushw
dec
xchg
pop
out
add
add
mov
cmps
test
dec
mov
arpl
add
imul
cmps
iret
lea
or
or
outs
cdq
ffree
enter
mov
nop
loope
jl
sbb
out
(bad)
push
push
cmp
mov
mov
fwait
clc
daa
mov
or
xor
cmp
ror
pop
sub
adc
or
push
rcl
cld
gs
aam
sbb
pop
in
mov
sbb
xchg
adc
shr
in
aam
jae
int3
stos
xor
mov
cmp
loop
mov
iret
mov
mov
adc
adc
test
loope
movs
or
repz
imul
lock
dec
mov
pop
into
mov
xchg
mov
test
cmp
fild
pop
(bad)
and
sub
fs
aas
jp
pop
push
lods
pop
push
xor
hlt
ds
movs
dec
sub
xchg
cdq
cdq
adc
idiv
mov
sti
xchg
neg
push
xor
push
mov
mov
daa
push
(bad)
int3
mov
jmp
stc
adc
and
outs
test
adc
inc
push
movs
in
xchg
xchg
ja
addr16
mov
adc
(bad)
bound
sbb
pushf
and
sub
pop
fisub
mov
aas
jno
ss
ret
cmp
mov
call
mov
push
int
push
es
sar
imul
inc
push
repz
sub
icebp
mov
or
mov
fistp
mov
add
and
adc
and
into
xchg
and
push
sbb
cmp
inc
xchg
std
cmp
jbe
xchg
(bad)
repz
add
cmp
loope
jne
jae
sbb
div
inc
and
push
push
aaa
out
cs
fs
dec
daa
cmovns
pop
inc
test
mov
dec
push
neg
push
fldenv
push
push
lea
out
popa
pop
cli
ins
xlat
mov
sar
out
jae
and
mov
sub
ret
jbe
dec
push
(bad)
lods
jns
mov
retf
shl
outs
pop
fcomi
push
adc
js
mov
xchg
mov
adc
test
sbb
call
jp
das
int3
xchg
jno
mov
out
ins
call
mov
sbb
jp
ds
adc
pop
fstp
pushf
lahf
add
aaa
add
in
fdivr
ja
imul
sub
sbb
popf
pop
or
mov
add
loop
and
fnsave
dec
push
fmul
add
or
inc
or
pusha
push
cmps
and
jmp
xchg
mov
push
popa
cdq
mov
out
push
shr
jbe
pop
fs
mov
and
out
lods
pop
in
or
add
xor
xchg
(bad)
sbb
out
inc
jne
add
ret
xor
out
shl
mov
xor
jmp
xor
out
push
test
dec
popf
push
outs
jmp
adc
cmps
xchg
test
lods
jns
sub
inc
pop
fwait
sub
push
xor
xor
inc
fdivrp
xchg
fs
inc
icebp
adc
int3
or
mov
mov
or
ss
call
sub
or
jle
mov
sub
xor
mov
outs
pop
inc
cs
mov
and
loop
add
scas
mov
sub
rcr
aaa
je
push
hlt
iret
nop
dec
loop
stos
fmul
jp
xchg
rcr
push
imul
repz
dec
scas
and
jb
sbb
pop
xchg
ja
cmp
mov
add
push
bound
fisttp
(bad)
jmp
cmp
cmp
jmp
xchg
lea
mov
and
or
mov
cmp
or
xchg
pop
mov
push
ins
js
ret
xor
jge
ds
push
in
pop
inc
cdq
nop
dec
mov
ds
stos
(bad)
out
jae
mov
inc
shl
jns
mov
inc
sbb
push
or
jbe
fdivr
out
dec
mov
clc
xchg
lods
stc
mov
mov
jo
pop
inc
lahf
cwde
pop
int
lods
xor
lods
fiadd
int3
mov
push
cmp
arpl
dec
loopne
jns
stos
pop
mul
loop
dec
js
mov
push
out
pop
xor
jo
fist
sbb
ja
scas
sbb
test
mov
pop
neg
rcl
fsub
in
jno
loop
jge
mov
jmp
div
push
in
clc
sbb
and
pushf
pop
push
(bad)
jnp
push
mov
jg
mov
push
ret
jmp
(bad)
push
bound
loop
addr16
(bad)
movs
movs
add
mov
(bad)
mov
add
mov
(bad)
adc
out
retf
pop
out
pop
pushf
mov
test
frstor
or
mov
cmp
mov
mov
cmp
sbb
jmp
scas
jp
or
shr
jg
cmp
xchg
sub
mov
dec
loope
xchg
mov
mov
jge
aam
cs
out
push
into
adc
mov
es
or
neg
stos
ret
outs
sbb
mov
mov
adc
cwde
call
ins
jl
psubusb
cli
xchg
lock
call
pop
ins
outs
hlt
inc
xchg
jno
mov
lock
add
mov
(bad)
xchg
leave
pop
cmp
das
pop
mov
(bad)
mov
movs
(bad)
fadd
dec
repnz
clc
cwde
sub
mov
hlt
dec
and
in
call
sub
call
out
push
sub
pop
jae
shr
sub
sbb
aam
fwait
pushf
ret
in
xor
les
arpl
sbb
fucomp
sub
loop
imul
inc
mov
jo
outs
mov
mov
jae
jns
push
(bad)
sahf
dec
inc
ret
xchg
std
(bad)
gs
sbb
cld
and
(bad)
in
popa
inc
iret
stos
mov
jl
ss
int3
jp
mov
add
es
inc
(bad)
fisttp
loop
mov
xor
scas
inc
mov
jbe
sbb
push
push
sar
mov
and
pop
test
push
shr
sbb
mov
cmps
mov
std
mov
mov
leave
pop
std
in
push
push
jmp
cmp
adc
lods
mov
in
xlat
sahf
adc
(bad)
jle
mov
dec
sbb
inc
mov
sbb
jmp
scas
sbb
out
sub
inc
jl
pushf
xor
add
xchg
bound
fs
inc
add
cld
loope
lock
fdiv
pop
mov
data16
fs
nop
xor
dec
jmp
test
mov
jecxz
enter
out
jge
mov
sahf
mov
call
out
cmp
or
out
push
dec
data16
popa
mov
in
mov
aam
xor
inc
or
in
repz
mov
fs
add
aam
sti
scas
push
mov
imul
xchg
fadd
js
xchg
ja
ss
rcr
icebp
inc
dec
xchg
adc
xchg
or
pop
lea
cdq
mov
rcl
pop
test
scas
arpl
fimul
in
pop
mov
adc
mov
and
nop
xchg
(bad)
and
out
adc
mov
xchg
adc
test
jmp
xchg
dec
jae
mov
fld
push
pushf
inc
(bad)
lock
xchg
mov
aaa
lods
sub
repnz
pop
xchg
mov
repnz
in
movs
dec
(bad)
mov
pop
xchg
mov
xchg
data16
je
xchg
retf
pop
loop
pop
dec
adc
adc
sub
xchg
xor
mov
jno
enter
xchg
movs
inc
sbb
add
xchg
aaa
rcr
push
int
push
sti
mov
stos
rol
and
(bad)
pop
push
add
nop
movs
dec
or
test
inc
sub
ret
test
hlt
sub
out
loope
fs
mov
cli
fs
je
pop
mov
aam
jecxz
jo
sbb
sbb
pop
push
test
aad
sbb
xchg
inc
dec
pop
int
stos
xor
addr16
adc
pop
sub
and
xor
mov
push
(bad)
leave
sbb
pushf
pop
or
test
(bad)
lock
sahf
mov
nop
xor
inc
inc
outs
or
ja
add
fst
inc
push
gs
pushf
jne
stos
mov
outs
jge
sub
or
mov
mov
adc
sub
stos
sub
and
xchg
cmps
or
in
xor
ret
leave
js
xor
ins
test
scas
(bad)
add
push
mov
enter
jae
lahf
push
int3
test
test
xor
outs
push
push
dec
dec
jb
jge
cmp
not
cwde
inc
test
mov
outs
iret
xor
xchg
adc
mov
or
xor
out
mov
jno
cmps
daa
pusha
call
or
inc
cmp
dec
push
sbb
xchg
cdq
add
dec
sbb
retf
shl
stos
dec
inc
pop
shr
ja
sub
(bad)
in
clc
adc
enter
mov
(bad)
adc
cmp
data16
loopne
cmp
and
icebp
into
cdq
dec
add
adc
in
mov
jl
popa
ja
sbb
mov
sbb
xlat
shl
lods
mov
neg
xor
sub
xchg
pop
inc
sub
pushf
xchg
mov
push
mov
lea
xchg
or
scas
inc
inc
pusha
add
jmp
fld
lahf
sub
dec
sbb
call
lods
push
pop
ret
xchg
ins
cwde
adc
pusha
test
cmp
stc
cmc
int
jmp
data16
xor
loop
idiv
dec
cmps
pop
push
jns
in
in
jmp
lea
jp
(bad)
mov
jbe
mov
dec
out
and
pop
add
mov
gs
jae
pop
pusha
pusha
fcomp
pop
mov
aam
add
mov
ficom
lahf
outs
not
mov
mov
fidivr
sub
addr16
in
outs
test
fbld
push
add
sbb
addr16
sub
daa
sar
std
pop
stc
icebp
push
add
fsubr
mov
push
add
add
sub
push
movs
test
enter
pop
ds
mov
sbb
mov
dec
cwde
jb
call
xchg
imul
xchg
icebp
push
stos
xchg
xchg
daa
mov
stc
mov
les
xor
ds
or
adc
pop
fcomp
popf
retf
dec
retf
xlat
test
data16
lds
lahf
mov
sahf
jge
jbe
xor
clc
jae
sub
pop
jno
bound
fild
xchg
adc
pusha
lahf
movs
jnp
pop
fdivr
pop
xlat
or
lea
into
inc
in
xor
cmp
xor
mov
pop
aad
mov
aas
xor
in
mov
shl
call
(bad)
and
pop
jge
inc
and
scas
or
jbe
mov
loop
and
sub
sub
lea
mov
ins
push
repz
sub
jbe
mov
cmc
shl
add
xor
mov
xchg
xor
lds
xchg
in
inc
pop
push
jne
mov
add
jo
mov
inc
sbb
cmp
shl
pop
fist
mov
xchg
cld
lock
mov
in
(bad)
sti
leave
(bad)
mov
mov
repnz
out
pop
stos
sbb
mov
enter
mov
neg
jge
push
and
adc
xor
or
mov
(bad)
shl
push
xchg
sub
in
test
arpl
fild
loopne
xchg
js
jecxz
(bad)
jmp
test
push
cwde
or
ins
mov
add
into
pushf
adc
inc
stos
rcl
clc
ins
jo
aaa
sub
jbe
movs
push
movs
repnz
into
or
popf
inc
cmp
pop
jb
mov
inc
arpl
(bad)
popa
daa
bound
jge
and
push
jne
lahf
adc
jp
push
ret
stos
outs
adc
dec
sbb
xor
fs
jmp
aaa
ins
mov
outs
pop
jmp
fwait
stc
inc
jnp
pop
cli
cmp
dec
fist
cwde
ins
fisubr
aad
and
sbb
cmp
ins
sub
jns
ret
xchg
pop
ret
push
mov
inc
push
adc
mov
js
nop
iret
dec
push
xchg
cmp
lods
nop
fmul
les
(bad)
cmc
(bad)
xchg
mov
or
out
test
xchg
dec
mov
dec
xor
lds
test
dec
pop
inc
daa
in
fnop
and
ins
lock
mov
rcr
iret
aaa
push
outs
fstp
test
pop
sbb
pop
out
inc
or
add
mov
sub
ds
inc
xchg
and
imul
or
mov
lods
pop
or
bnd
inc
(bad)
loopne
inc
sub
inc
arpl
imul
fldcw
adc
popa
or
(bad)
sbb
add
mov
ins
sbb
sbb
(bad)
or
aaa
add
jecxz
add
loope
lods
(bad)
idiv
add
pop
sbb
daa
sti
inc
sub
int
shl
lods
inc
out
sub
(bad)
js
rcr
push
push
bound
xor
push
(bad)
mov
xchg
leave
dec
les
sti
scas
xor
lds
push
lahf
imul
cld
arpl
lods
inc
adc
das
sti
mov
loopne
sub
loop
add
pop
cmp
add
add
and
dec
jnp
xor
lock
repnz
in
cli
cwde
pusha
mov
pop
pop
(bad)
xor
sub
popa
push
jno
aam
les
rcr
xchg
call
daa
dec
mov
jmp
das
out
ret
push
(bad)
fs
ror
pop
mov
xor
add
jmp
jbe
les
sahf
push
inc
or
lock
into
mov
cwde
push
jb
lea
adc
ins
xor
jmp
js
stc
sbb
sbb
fnstcw
mov
in
lahf
retf
or
lahf
out
fisubr
int3
add
xchg
test
bound
jns
inc
movs
sbb
int
outs
out
or
pop
jnp
rcr
es
inc
(bad)
mov
data16
rol
cmp
(bad)
out
out
ins
inc
loope
nop
push
loope
sbb
mov
pop
add
sub
push
ds
int
outs
aad
mov
daa
(bad)
popf
add
cmps
and
call
add
pop
mov
cmps
es
push
mov
pop
xchg
or
add
loopne
push
adc
ds
xor
jmp
ret
icebp
add
fnsave
pop
cmps
ja
fs
les
jbe
mov
sub
mov
call
in
shr
cmp
add
xor
test
or
mov
call
sub
(bad)
jmp
out
in
or
or
das
retf
ds
sub
xchg
(bad)
and
pop
adc
test
inc
repz
jo
out
xchg
scas
add
push
cdq
sar
and
and
stos
ret
xor
fs
je
xchg
jecxz
xchg
call
jp
jne
call
loopne
stos
mov
sar
rcl
pop
dec
lock
daa
stos
enter
ins
xor
hlt
dec
mov
rcl
stc
push
je
pop
mov
push
mov
sub
sti
inc
es
dec
icebp
daa
imul
sub
jno
loope
and
fbld
or
pop
cmp
aas
enter
xor
and
aas
cmp
int
daa
inc
jno
sti
push
inc
scas
sahf
jecxz
mov
cmp
lock
adc
cs
xchg
mov
fst
scas
popw
ins
ret
mov
adc
mov
dec
rcl
or
jne
or
dec
es
mov
in
es
lock
fadd
icebp
push
je
sahf
sub
or
cli
sbb
add
in
sbb
pop
jg
adc
push
cmp
jmp
rcr
mov
ins
pusha
or
hlt
xor
fiadd
and
scas
and
jns
jns
mov
ficomp
retf
int3
cli
add
inc
bound
(bad)
adc
sbb
pop
es
sub
neg
cli
rcr
les
xchg
push
mov
ins
frstor
and
cwde
or
jmp
test
shl
sub
pushf
lods
out
sub
ret
push
jg
and
or
jns
sbb
mov
jge
nop
xchg
fld
pop
les
cmp
and
mov
sub
push
ds
(bad)
push
aad
mov
pop
xlat
out
add
dec
and
retf
pop
sbb
test
mov
xor
cmp
mov
mov
cmp
push
mov
inc
les
xchg
fisttp
cli
adc
imul
push
test
shl
mov
xchg
inc
mov
pop
scas
pop
aad
js
bound
(bad)
int
movs
jmp
loopne
mov
hlt
add
in
ins
js
xchg
in
fiadd
add
into
sub
pop
(bad)
ja
push
inc
adc
into
(bad)
mov
stos
pop
test
or
sbb
(bad)
(bad)
ss
les
test
jmp
sub
in
cmp
retf
sbb
enter
lahf
mov
in
ins
maxps
pop
mov
inc
mov
sbb
dec
aad
mov
jae
imul
or
cwde
inc
(bad)
xchg
hlt
rol
pop
(bad)
test
sub
scas
push
mov
call
mov
shr
neg
push
pop
pop
cmp
call
out
retf
outs
jmp
xchg
into
add
cmp
mov
mov
(bad)
std
fwait
out
push
pop
out
pusha
xor
iret
inc
mov
jne
shr
test
aas
push
in
sbb
push
mov
ja
test
push
out
jg
call
loop
mov
jl
push
(bad)
sub
enter
add
fadd
push
(bad)
mov
adc
add
sti
in
pop
call
jnp
mov
xor
jno
scas
in
and
cmp
js
cmp
jle
imul
push
je
cmps
fsin
test
es
ss
jbe
pusha
loopne
mov
jno
loopne
adc
add
sbb
jmp
jae
lods
ds
xor
ss
cmps
jno
cmp
out
fdivrp
frstor
xchg
les
lods
xchg
pop
test
jp
aam
jmp
enter
test
sub
not
inc
mov
fadd
add
dec
loope
sbb
shl
pop
add
repz
dec
cmps
mov
mov
repz
push
mov
fild
ins
cmps
jne
xor
add
fwait
jns
cmc
adc
push
repz
xchg
retf
xor
lea
pop
cmc
sbb
sbb
jle
push
add
jbe
push
dec
pop
pop
and
test
dec
data16
lahf
mov
mov
test
jmp
inc
cmp
clc
not
movs
imul
(bad)
pop
lahf
and
dec
test
ds
cwde
mov
push
push
dec
mov
clc
push
std
push
xchg
jmp
pop
mov
push
fild
jne
xor
push
retf
imul
fstp
and
hlt
arpl
pop
mov
ret
and
inc
lods
mov
out
jb
retf
sub
add
inc
imul
stos
test
(bad)
mov
dec
call
pop
adc
push
imul
inc
pop
dec
inc
push
pop
movs
cmp
in
lea
xlat
mov
mov
jns
int
mov
dec
push
cmps
fsub
stos
mov
or
sbb
cld
gs
(bad)
pop
sbb
sahf
mov
ins
mov
jmp
cdq
call
das
cmp
cmc
sbb
popa
aas
adc
out
jae
push
ror
xlat
fisub
shr
bound
adc
in
push
adc
mov
xchg
test
arpl
add
dec
(bad)
mov
imul
sbb
(bad)
fild
jmp
shl
lds
mov
stc
je
lock
adc
repz
in
(bad)
mov
ins
adc
ins
mov
dec
pop
(bad)
je
xlat
arpl
stc
inc
nop
xchg
inc
xchg
adc
and
sub
repnz
loopne
push
in
das
dec
dec
ror
xchg
leave
mov
pop
rcr
or
and
fsub
jg
sahf
call
pop
dec
mov
dec
pop
mov
jo
pop
push
ror
mov
js
test
or
inc
mov
sub
push
lea
cmp
dec
shl
stc
popa
push
js
mov
push
inc
xchg
in
out
or
pop
mov
test
sub
mov
lods
add
adc
mov
mov
cmps
push
into
jge
mov
inc
or
out
call
mov
dec
into
jo
sahf
mov
push
lods
les
sbb
outs
mov
adc
mov
mov
out
bound
ins
in
mov
mov
mov
add
enter
test
enter
adc
fwait
sbb
fs
ins
inc
int
push
rcr
movs
fs
call
jl
sbb
loopne
mov
mov
loope
clc
dec
cmp
mov
mov
std
adc
dec
or
xor
loop
and
or
hlt
jns
add
jle
xlat
inc
ds
mov
mov
push
ficomp
fild
mov
movs
mov
mov
mov
loope
dec
mov
mov
push
sbb
lahf
fld
sahf
sar
push
add
(bad)
xchg
ins
adc
ja
jbe
ja
pop
scas
adc
jecxz
mov
sti
dec
mov
mov
je
pop
iret
mov
inc
mov
cdq
pop
ret
inc
add
xchg
popa
and
mov
daa
pop
imul
inc
stos
jo
popa
push
outs
in
fwait
(bad)
mov
scas
xlat
jns
std
imul
xchg
fnstcw
mov
aam
clc
loope
mov
mov
cwde
nop
clc
and
gs
pop
jns
mov
rcl
imul
loop
js
xor
sbb
push
hlt
aad
cmps
pushf
call
ja
mov
jb
sbb
daa
inc
xchg
in
in
jle
or
jmp
and
xchg
push
or
fcom
adc
jge
jbe
and
sbb
pop
or
fstp
fsubr
add
lods
xor
loopne
lea
and
or
cli
pop
dec
mov
cmp
push
xchg
clc
cdq
and
mov
leave
std
pop
xor
ret
test
cmp
cmp
jmp
(bad)
out
cs
movs
test
mov
call
add
mov
add
sbb
jecxz
dec
xchg
fimul
pop
scas
ror
adc
dec
xchg
jnp
lods
adc
js
and
dec
outs
and
xchg
and
scas
push
add
cmp
push
mov
cmp
jbe
sbb
jnp
sbb
(bad)
mov
add
mov
ja
push
cmp
jmp
arpl
push
retf
shl
call
out
add
pop
rol
cmp
adc
leave
and
xchg
(bad)
(bad)
jmp
(bad)
cmp
xchg
push
mov
inc
xchg
sahf
aad
mov
xor
int3
arpl
in
in
jg
and
fxch
or
sub
inc
jg
cmp
imul
idiv
mov
push
jmp
xchg
mov
jmp
jnp
ins
hlt
or
ret
mov
and
test
adc
push
dec
mov
jmp
in
lds
mov
nop
sbb
adc
sub
retf
push
or
mov
rcr
gs
mov
mov
sar
jmp
mov
int3
lods
and
shl
xor
pop
mov
nop
(bad)
adc
sub
div
xor
cli
jge
dec
ins
mov
push
xor
pop
dec
cmps
sub
sbb
lahf
mov
jle
cwde
fistp
std
sub
xchg
mov
or
jg
dec
pop
push
cmc
pusha
cmps
rcl
fisub
jmp
sub
cmp
jg
call
mov
jbe
dec
or
mov
mov
out
sbb
int
or
inc
or
fcmove
pop
or
sub
jo
xchg
shl
xlat
pop
jbe
jp
and
out
dec
je
leave
add
jnp
dec
in
cmp
jo
push
push
xor
call
fs
loopne
out
pop
lds
jo
cwde
mov
dec
pop
je
adc
fisubr
aaa
stos
leave
adc
lods
adc
test
push
xor
cmp
xor
jge
inc
adc
push
cli
mov
inc
addr16
and
add
jge
addr16
and
jge
mov
in
shl
dec
push
cmp
mov
jno
fimul
sub
mov
mov
sub
sbb
cld
xchg
rcr
cdq
fild
inc
fnstenv
cs
lds
push
ret
and
sub
jmp
in
nop
dec
adc
mov
mov
add
and
std
cs
pop
and
shl
jle
cmc
pop
dec
pop
push
outs
cwde
cmps
mov
neg
xchg
cmp
sbb
test
aas
inc
fnsave
lds
xchg
dec
cmp
or
add
aaa
addr16
mov
repz
sbb
pop
ins
scas
lods
stos
aaa
inc
ds
(bad)
imul
push
stos
and
and
ror
scas
dec
sbb
in
pop
cs
adc
mov
pushf
fist
xlat
push
repnz
inc
cmp
mov
(bad)
xor
mov
outs
xor
jae
enter
loope
inc
adc
(bad)
mov
ret
xchg
test
sbb
mov
ins
scas
inc
movs
mov
mov
mov
clc
shl
or
mov
nop
shl
lock
mov
add
dec
xor
inc
retf
xlat
movs
mov
or
xor
out
(bad)
retf
pop
enter
pop
sbb
xor
sbb
pusha
add
stos
sahf
lods
frndint
aaa
pop
pusha
cli
mov
xor
adc
popa
or
pop
jns
into
cmc
adc
rcr
out
push
aaa
mov
add
mov
pop
xchg
cmc
xor
adc
inc
mov
and
jb
loope
xchg
std
cmp
or
ror
mov
or
les
xchg
mov
jns
sbb
call
adc
mov
mov
xlat
lahf
jl
adc
inc
sub
pusha
push
and
daa
pop
pop
loope
mov
and
mov
xchg
sbb
leave
and
jg
and
push
inc
addr16
adc
into
ja
sbb
stos
jle
idiv
dec
push
adc
pop
mov
repz
daa
push
xchg
mov
dec
xor
and
pop
or
lea
test
or
sbb
retf
xchg
and
sub
adc
(bad)
jge
mov
stos
dec
ret
retf
jge
add
shl
jo
shl
test
mov
inc
push
aad
scas
jnp
cs
push
cmps
into
jne
sbb
repnz
sti
int3
out
pop
leave
enter
loop
push
xor
retf
addr16
cs
fs
sbb
sbb
movs
cmc
rcr
inc
sahf
mov
xchg
mov
movs
sbb
imul
fld
push
xor
repz
ss
mov
and
ds
loope
fwait
dec
fimul
(bad)
mov
push
hlt
in
mov
inc
inc
nop
bsf
cwde
mov
fidivr
popf
xor
ss
mov
mov
add
push
jg
lds
mov
jno
cmps
and
jl
dec
push
xlat
mov
rol
scas
xor
cld
(bad)
sub
push
fisttp
inc
and
jp
adc
shl
or
xchg
sbb
push
fwait
cmp
xchg
and
test
mov
in
cmp
rol
shl
retf
jecxz
dec
xchg
mov
dec
ficomp
mov
les
xchg
or
shr
call
mov
sbb
(bad)
cdq
mov
das
inc
je
fcom
(bad)
stos
and
bound
cld
outs
and
ins
aad
pop
cmps
sub
pop
shl
ins
ret
sbb
jle
and
cmp
jno
mov
hlt
and
in
and
pop
cmp
lods
fcomp
mov
ror
inc
mov
mov
inc
dec
add
ret
pop
mov
push
call
mov
xor
in
mov
out
ins
hlt
pop
movs
xor
fisubr
sti
or
fdiv
out
pop
jb
cs
inc
in
(bad)
data16
push
mov
pop
push
jns
les
inc
fdiv
int
sub
movs
add
sub
in
nop
call
rol
mov
std
mov
xchg
loop
stos
loopne
das
jmp
inc
adc
mov
jmp
mov
rcr
pop
mov
sar
fdiv
mov
fiadd
xchg
test
jge
mov
(bad)
jg
inc
mov
(bad)
test
push
in
cmp
aad
or
inc
lock
enter
cmp
jl
mov
jecxz
sbb
cwde
dec
xlat
popa
mov
xchg
lods
mov
mov
pop
push
xchg
sub
fstp
cwde
or
sub
cmp
jmp
pop
(bad)
das
sub
retf
rol
imul
mov
xchg
lods
mov
jnp
pop
xchg
mov
sub
icebp
mov
pop
repnz
popf
movs
ror
push
stos
lahf
fnstcw
mov
pop
scas
daa
add
in
and
mov
mov
push
mov
dec
data16
dec
movs
hlt
movs
repz
push
push
sub
rol
cli
fld
adc
fdivp
jbe
mov
lds
es
jbe
aad
mov
cmp
mov
inc
sub
push
push
jae
jmp
cmp
pop
mov
aam
sbb
outs
outs
sbb
(bad)
in
in
push
fcom
mov
fcom
cwde
clc
(bad)
xchg
dec
and
lods
repnz
addr16
clc
push
jno
in
in
icebp
in
outs
mov
push
mov
jecxz
push
mov
(bad)
loop
jecxz
push
xchg
out
sbb
je
dec
push
mov
addr16
sub
inc
or
(bad)
lock
xchg
fsubrp
jb
pop
add
inc
imul
jne
retf
movs
fcom
mov
adc
add
sti
or
fst
stos
inc
popa
sub
jae
ds
lods
lea
test
movs
and
push
add
pusha
xor
inc
xchg
add
mov
dec
mov
stc
inc
mov
xchg
aas
and
ja
push
test
pop
mov
xchg
int3
adc
int
pop
dec
lea
jl
mov
inc
call
dec
leave
adc
sbb
jbe
fisubr
retw
add
dec
enter
cld
xor
mov
mov
xchg
xacquire
sbb
mov
mov
dec
jns
imul
push
mov
sub
jp
and
lds
cmp
mul
cmp
shr
scas
cwde
adc
xor
jge
test
mov
adc
or
movs
clc
jmp
mov
fcom
push
jmp
clc
pop
inc
cld
mov
scas
inc
jg
adc
pushf
push
adc
add
dec
call
lods
dec
xor
and
adc
xchg
inc
data16
fdecstp
pusha
xor
daa
jl
jns
jmp
cmp
outs
mov
push
mov
loope
and
pop
pop
inc
jl
gs
push
mov
pop
(bad)
repnz
(bad)
test
and
push
cli
push
mov
jmp
es
fcomi
and
lods
fwait
movs
mov
sbb
push
aad
lea
lahf
or
stos
push
aam
les
call
mov
pop
mov
jno
jmp
push
jnp
push
push
xor
mov
stos
test
test
xor
push
inc
leave
sub
cmp
pushf
adc
xor
pop
xchg
out
adc
inc
cmp
push
push
std
mov
mov
(bad)
outs
jae
sub
(bad)
jg
add
aas
cli
out
adc
lea
jo
retf
pop
mov
add
adc
mov
or
add
push
xchg
pushf
mov
fiadd
lods
push
sbb
or
jns
aaa
sub
sub
sbb
repnz
mov
push
push
dec
out
xor
iret
pop
jbe
imul
mov
jb
fidiv
push
fnstenv
dec
sbb
and
cdq
mov
imul
dec
mov
add
imul
and
(bad)
stc
xchg
mov
dec
sbb
out
cmp
jg
push
mov
mov
add
idiv
jae
mov
mov
lea
fsub
jl
or
mov
dec
pushf
imul
iret
mov
push
mov
push
aad
test
xor
stos
xlat
xchg
mov
retf
(bad)
(bad)
mov
aad
and
pop
mov
mov
mov
add
mov
or
aam
jmp
loopne
into
jno
and
push
pop
in
in
cmp
push
std
xchg
ret
or
push
ja
jns
sub
pushf
fs
mov
into
ins
xchg
adc
loop
das
bound
fmul
mov
sahf
jo
out
in
and
popa
and
test
push
dec
enter
fbld
or
mov
inc
push
sar
je
push
add
out
icebp
es
ret
loope
je
push
dec
dec
add
cld
push
jg
cmp
jmp
mov
sbb
mov
mov
das
adc
add
xchg
cmps
stos
hlt
fidiv
mov
xchg
inc
add
out
add
push
cli
or
aaa
bound
aam
xchg
fldcw
xor
je
push
(bad)
xor
pop
adc
stos
add
stc
cld
test
lsl
jecxz
adc
adc
mov
sbb
inc
add
aaa
aad
mov
sar
push
jmp
jmp
mov
lock
mov
add
aas
pop
pop
fwait
es
stos
cmps
mov
push
inc
add
movs
mov
jmp
jb
or
xor
mov
mov
jbe
jmp
inc
outs
xchg
imul
inc
add
retf
fld
sbb
cwde
test
jle
je
sub
dec
xlat
pop
lahf
pop
push
and
sbb
hlt
inc
icebp
rcl
(bad)
(bad)
and
add
mov
mov
sbb
jo
nop
and
push
dec
(bad)
(bad)
xor
xlat
push
test
nop
shr
(bad)
sar
adc
aam
push
mov
jge
cmc
retf
sub
or
test
(bad)
xchg
fadd
sbb
xchg
cld
mov
push
stos
jg
test
int
push
test
mov
and
stos
adc
test
push
shufps
sub
or
push
lock
repnz
mov
mov
test
mov
and
mov
cmc
rol
adc
into
pop
repz
xchg
gs
fdiv
mov
dec
ret
shr
push
aas
icebp
dec
mov
(bad)
jmp
imul
scas
(bad)
and
or
stos
and
ss
das
mov
stos
ret
mov
jmp
mov
iret
scas
mov
ds
scas
scas
pop
sbb
cli
inc
pop
iret
add
sbb
sahf
fistp
dec
stos
jns
aad
out
jno
mov
xchg
nop
inc
xchg
ret
loopne
adc
dec
pop
std
mov
mov
test
push
pop
not
inc
rcr
int
(bad)
cmp
(bad)
xchg
push
mov
push
push
pop
ins
in
ins
pop
int
mov
jmp
pop
push
ds
xchg
lahf
fst
(bad)
and
inc
xor
inc
adc
jecxz
and
ret
outs
sbb
jo
push
rcr
pop
shl
jo
inc
fist
sub
jle
jmp
inc
push
pusha
ja
push
mov
mov
xlat
arpl
mov
cld
adc
dec
ja
push
push
adc
xchg
xor
and
icebp
and
test
add
in
jne
das
xchg
dec
xchg
jnp
in
xchg
mov
call
les
push
mov
mov
stos
repz
mov
and
mov
sub
ja
cdq
and
out
fdivp
cmp
cmp
fwait
mov
(bad)
jecxz
inc
sbb
push
aas
cdq
xchg
push
and
push
shl
fs
imul
lahf
add
sbb
mov
add
adc
sbb
or
inc
xchg
sbb
sub
mov
cld
movs
jg
ins
push
ficom
fwait
adc
iret
dec
pop
jae
dec
stos
test
lods
cdq
daa
inc
cmps
dec
push
mov
and
push
icebp
cmp
adc
jns
mov
ds
or
dec
jo
lea
fisub
or
jle
mov
push
jmp
and
(bad)
jecxz
les
cs
je
gs
inc
xchg
pop
sbb
xor
scas
hlt
pop
cmp
fnsave
jp
add
mov
jno
or
loope
push
pop
sahf
aad
or
das
xchg
mov
xor
cmp
stc
mov
sub
push
daa
in
jp
cmc
movs
call
xchg
(bad)
or
push
sbb
(bad)
push
out
lock
add
es
push
pop
iret
dec
(bad)
jmp
cdq
dec
daa
mov
inc
sbb
cmp
mov
jne
and
jp
leave
xchg
adc
jge
rcr
ret
xchg
cmps
(bad)
neg
mov
push
inc
xor
mov
std
sub
or
adc
cmc
cmp
mov
popa
call
aam
test
sbb
adc
inc
scas
jg
or
jle
cmp
sub
test
lds
ret
pop
jl
mov
lock
xor
mov
xchg
shl
dec
cs
jmp
lahf
adc
lods
xor
mov
pop
or
add
dec
push
push
xor
leave
push
(bad)
cld
dec
cdq
push
cmc
jno
inc
pushf
mov
dec
xor
pusha
shl
xor
(bad)
in
scas
cmp
call
cwde
jo
xchg
mov
sbb
jbe
inc
push
mov
ins
push
jp
pop
add
int3
imul
clc
out
fdivr
mov
(bad)
popf
movs
adc
ret
ret
test
xchg
jg
and
imul
xor
mov
sub
pop
jge
pop
in
xor
int
push
addr16
xlat
lahf
movs
xchg
mov
ins
pop
cli
xchg
inc
out
cmp
aam
rcr
pop
lock
aas
fwait
jmp
and
ins
inc
inc
fld
jae
push
or
test
or
jae
inc
adc
xchg
push
aad
test
or
adc
add
sbb
cli
inc
cmp
dec
jle
cmps
into
nop
lds
shr
cmp
mov
(bad)
mov
dec
fcom
retf
ds
cwde
aam
mov
jo
das
mov
cmc
loop
aas
clc
add
xchg
xor
leave
pop
inc
(bad)
fisubr
out
adc
aas
shl
add
mov
(bad)
outs
pop
cmp
mov
inc
xchg
rcl
in
shl
xor
xor
cmp
inc
jbe
popf
shl
scas
fs
mov
cs
xchg
xor
push
call
je
mov
pusha
out
(bad)
mov
sub
rcr
cdq
adc
sar
(bad)
mov
sbb
test
(bad)
dec
addr16
cmc
mov
dec
add
popf
add
int3
clc
mov
and
xchg
pusha
xor
movs
or
in
sbb
aam
cli
xchg
cmps
push
mov
xchg
jg
adc
out
push
and
test
icebp
push
pop
mov
pushf
push
mov
mov
lds
ja
sub
mov
mov
xchg
in
inc
push
adc
xor
in
xchg
cmps
lds
popa
aaa
xchg
icebp
adc
jecxz
sahf
inc
movs
arpl
mov
ss
mov
shl
lods
jne
(bad)
push
inc
push
ds
mov
mov
add
stos
cs
imul
mov
cmp
pop
cld
std
adc
mov
fcmovnu
dec
xchg
adc
bnd
and
push
add
xor
mov
cmp
dec
cmp
inc
push
jnp
adc
cmp
mov
stos
and
cmp
ja
iret
and
fwait
in
xchg
add
cmc
and
out
pop
push
push
sbb
hlt
imul
enter
push
(bad)
inc
sbb
push
sahf
or
cmp
xchg
mov
dec
retf
lds
int
mov
mov
(bad)
jle
jnp
inc
pushf
test
jmp
scas
es
in
(bad)
fsub
xor
jbe
xchg
or
ds
daa
imul
sbb
sub
nop
(bad)
bound
xchg
add
or
ds
movs
xor
jge
add
sti
pop
(bad)
cdq
js
repz
mov
int3
mov
jnp
jle
xchg
mov
mov
loopne
arpl
shl
or
mov
sub
mov
pop
ret
cmp
inc
adc
or
mov
inc
in
mul
das
ds
mov
in
sub
lea
mov
arpl
clc
es
or
je
add
add
sub
pcmpgtb
sti
adc
sbb
xchg
stc
lea
adc
adc
ret
sub
add
cmp
sub
test
lods
sbb
sub
aam
push
int3
inc
mov
xchg
retf
adc
mov
ss
sbb
and
adc
pop
dec
fnstenv
xlat
bound
mov
mov
sbb
outs
adc
cli
mov
jne
mov
popf
ror
daa
xor
imul
dec
stc
push
ja
scas
repnz
das
mov
call
add
add
lods
test
sahf
das
sub
arpl
retf
mov
sti
xor
(bad)
xor
pop
arpl
into
cmps
ins
fbld
jmp
or
mov
inc
jo
fild
sahf
fwait
rcr
inc
xor
pop
and
scas
pop
and
scas
jle
popf
sbb
loopne
in
sbb
test
adc
pop
fisubr
outs
cmp
bound
dec
daa
dec
adc
cmp
mov
(bad)
jae
cmc
add
popa
ds
pop
rcl
fdiv
mov
and
outs
test
into
xor
aam
aaa
cwde
dec
pop
imul
in
(bad)
ins
add
pop
stos
loopne
popa
xor
dec
jo
out
mov
sub
jmp
ins
repnz
sub
repnz
in
fist
fdivp
sbb
jno
pushf
mov
dec
pop
sub
inc
mov
loope
aam
pop
in
jbe
mov
jle
nop
out
(bad)
jle
sbb
add
add
(bad)
mov
jmp
or
(bad)
xor
jge
lahf
cmp
ds
daa
mov
push
xchg
outs
push
mov
push
push
add
push
add
dec
mov
or
jmp
push
xchg
mov
add
dec
sub
mov
push
and
mov
retf
xchg
imul
jl
call
dec
ins
push
mov
inc
xchg
mov
ss
imul
fcmovb
add
inc
ss
pop
test
push
pop
(bad)
test
test
dec
test
cld
(bad)
add
test
call
lods
js
mov
mov
push
mul
or
or
pop
(bad)
(bad)
xor
mov
push
fidivr
cmps
(bad)
sub
add
stos
pop
mov
and
cmp
jns
pop
jl
or
mov
pusha
cmp
cmp
mov
mov
les
mov
xchg
xchg
add
push
rol
xor
mov
or
adc
jp
aas
mov
mov
int3
xchg
fdiv
imul
adc
cdq
push
adc
jbe
leave
int
cdq
pushf
dec
mov
sub
mov
hlt
stos
mov
into
stc
je
mov
iret
mov
addr16
and
fnstcw
jmp
stos
adc
mov
cld
leave
popa
lods
sbb
jecxz
mov
inc
xlat
jae
dec
xchg
or
div
test
ror
mov
les
pop
(bad)
sbb
push
inc
sbb
push
add
es
xchg
in
into
cmp
add
add
xchg
in
repz
pop
jmp
jae
sub
dec
fcmovbe
mov
cmps
mov
lods
mov
cli
fistp
push
inc
mov
test
push
mov
push
sbb
daa
icebp
or
(bad)
int
mov
pop
shr
jns
das
shl
inc
je
adc
lea
mov
dec
jmp
ret
test
jg
push
or
add
inc
and
stc
push
xor
pop
retf
loopne
or
inc
pop
aas
inc
(bad)
fs
shl
aam
xchg
add
or
aad
dec
dec
push
mov
inc
inc
fwait
adc
sbb
or
icebp
jb
sar
(bad)
cmc
jns
sub
out
push
in
fwait
add
lods
pop
mov
into
dec
ror
add
inc
daa
cli
jo
mov
jb
mov
dec
cmp
leave
sbb
jmp
repz
jae
test
hlt
setg
in
data16
bswap
cs
xchg
fist
xchg
and
in
jg
push
cmp
cmp
loop
pop
adc
adc
in
mov
out
movs
add
jmp
sar
(bad)
sbb
loop
cwde
sub
pop
xor
aad
or
fwait
(bad)
inc
jno
movs
and
inc
or
out
cmp
lahf
cmp
mov
xor
adc
xor
mov
xchg
imul
jmp
push
(bad)
cmc
add
ror
jae
xor
inc
adc
ins
int
pop
cli
jle
push
lea
jge
ret
rol
in
push
cmp
stc
fs
iret
xor
push
mov
xchg
or
mov
bound
stos
imul
pop
nop
dec
out
sub
push
sbb
jo
mov
push
xchg
fwait
mov
and
lds
out
movs
lods
add
add
push
mov
xchg
scas
daa
mov
and
xor
mov
jmp
jecxz
mov
jo
test
xor
mov
jo
addr16
aam
and
add
jle
inc
xchg
push
call
jbe
mov
push
ins
(bad)
inc
xchg
lds
pop
jbe
cmps
std
cli
sub
test
cmp
mov
jge
inc
cmp
pop
xchg
or
pop
cmp
icebp
aas
or
xor
or
xchg
inc
and
in
(bad)
loop
lock
hlt
mov
pop
retf
push
cmp
push
es
ja
cld
pop
sub
std
int3
popa
sbb
push
out
mov
jbe
ret
das
dec
jl
int3
adc
fimul
pop
test
sahf
stc
jnp
push
pushf
push
dec
add
fcmove
in
clc
aam
jg
and
in
cdq
adc
and
mov
gs
inc
sbb
push
(bad)
mov
add
dec
jmp
jg
xor
fwait
das
imul
outs
leave
outs
and
inc
and
xchg
push
jnp
in
add
leave
mov
and
sub
nop
iret
adc
mov
pop
adc
repnz
push
and
inc
rcr
lea
(bad)
popf
stos
retf
sbb
cmps
rcr
dec
call
cmc
cli
iret
inc
rcr
es
inc
test
rol
jecxz
xor
push
mov
in
inc
cli
adc
hlt
mov
fbld
(bad)
outs
mov
mov
xchg
sub
sub
out
arpl
cmp
mov
ror
pop
popf
dec
sbb
sub
pop
frstor
mov
pop
push
retf
mov
push
pop
cmp
push
movs
out
dec
jae
sbb
mov
cmp
movs
mov
lods
dec
cmp
retf
adc
push
sahf
retf
iret
mov
sbb
lods
aaa
xchg
dec
pop
sub
fistp
add
mov
dec
je
jge
push
movs
jne
cdq
fwait
jno
nop
jnp
je
mov
jae
lea
outs
xor
rcl
xor
ficomp
pusha
push
int3
rol
(bad)
repnz
cmp
cmp
jge
sub
stos
iret
test
sti
out
or
xor
(bad)
fild
rol
xchg
cmp
jns
sub
pop
loope
xchg
outs
fwait
js
scas
iret
adc
in
addr16
or
rcr
movs
jl
sahf
jo
lods
push
push
jmp
xchg
or
mov
mov
(bad)
es
or
aam
cwde
aaa
jmp
nop
inc
rcr
cli
std
inc
pop
mov
or
mov
cmp
in
or
stos
cld
adc
push
ds
xor
mov
sti
shr
je
int3
lods
out
push
jne
dec
mov
in
or
in
in
daa
add
enter
cmc
lock
fld
fstp
loop
int
or
dec
(bad)
xchg
push
bound
cmp
in
push
inc
pop
pushf
stc
nop
nop
scas
xor
rcr
mov
mov
fucomip
jbe
jo
mov
push
shl
push
adc
std
imul
js
cmp
cmp
mov
dec
pop
or
or
adc
loope
int3
lods
das
int3
movs
pop
mov
xor
sbb
xor
mov
sub
cmp
add
push
pop
sub
jge
push
fdivr
push
ror
sar
imul
mov
daa
test
repz
sbb
sub
adc
test
loopne
push
pushf
adc
fs
pop
or
aas
xor
leave
sbb
push
mov
push
jae
ins
adc
(bad)
ja
mov
dec
add
fadd
loop
sub
mov
dec
in
(bad)
in
mov
push
(bad)
dec
pop
push
ret
fld
xchg
outs
add
ins
add
ss
in
cmps
or
jecxz
ficom
shl
stos
jmp
mov
in
mov
pusha
xchg
data16
ds
enter
inc
inc
stos
mov
out
xchg
sbb
test
cld
enter
lock
and
and
int3
dec
push
and
lods
jle
adc
cmp
mov
outs
pop
rcr
push
inc
add
push
int
lods
sub
test
mov
and
push
in
call
pop
movs
fsub
jae
pop
adc
stos
stos
fnsave
and
and
pop
lods
push
inc
jo
jbe
out
pushf
or
and
cmp
inc
stos
or
add
fstp
dec
and
dec
cmps
jmp
mov
test
loope
ja
cmp
ss
int
inc
pushf
xchg
cmp
fld
pop
in
and
(bad)
arpl
retf
daa
es
push
inc
xchg
adc
sub
lock
rcr
xchg
jp
ret
fild
mov
aam
outs
dec
rcr
push
in
push
pop
ja
xchg
ret
mov
dec
mov
movs
jecxz
add
ss
ret
je
inc
out
push
je
jmp
xor
rcr
lock
and
pop
push
jg
and
xlat
iret
lods
fwait
call
mov
int
sahf
push
or
mov
inc
outs
jnp
daa
mov
dec
or
dec
xor
adc
adc
push
mov
mov
aam
mov
ins
pop
sbb
(bad)
mov
test
sbb
inc
adc
xchg
push
pop
mov
dec
adc
test
shl
pop
or
push
adc
adc
mov
xchg
les
movs
imul
mov
inc
sar
add
clc
icebp
out
imul
xchg
and
icebp
sar
xchg
lds
adc
retf
icebp
mov
rcl
mov
pusha
les
or
xchg
push
and
std
repz
cmp
fisub
dec
js
mov
inc
stc
push
aas
nop
mov
inc
and
shl
scas
iret
in
mov
jecxz
fisttp
pusha
jecxz
mov
movs
cmp
int
push
retf
push
in
sbb
(bad)
mov
add
push
mov
add
xchg
add
jmp
jne
or
into
sub
addr16
cmp
and
fcomp
rcr
movs
add
and
(bad)
push
or
loope
jae
inc
xor
xor
jg
popa
stos
fsub
mov
mov
xchg
fisttp
out
std
push
add
inc
es
dec
mov
pop
(bad)
arpl
xchg
cs
call
addr16
mov
arpl
and
loope
fild
outs
outs
cld
adc
ret
push
mov
pop
dec
ins
bound
retf
imul
js
gs
and
dec
sbb
int
sub
retf
clc
fist
mov
es
add
std
sub
test
lods
push
sub
push
jmp
push
mov
cmp
addps
mov
sub
lods
xchg
outs
and
push
mov
ret
or
mov
push
mov
dec
pop
(bad)
jmp
xor
in
jmp
pop
add
lahf
mov
pushw
or
inc
dec
xlat
js
sub
sbb
xchg
(bad)
test
xchg
adc
dec
adc
dec
aam
xor
fdiv
icebp
mov
std
xor
adc
mov
mov
xchg
shl
pop
adc
in
int3
xor
xchg
outs
sbb
neg
push
cmc
xor
addr16
and
stos
rcl
sub
xlat
rcl
dec
fwait
add
inc
stos
(bad)
popa
(bad)
out
arpl
int
xchg
popa
jmp
aaa
sub
add
inc
jp
jmp
adc
ja
movs
jns
mov
pushf
ins
inc
mov
jmp
jbe
inc
mov
cli
pop
mov
test
inc
call
inc
movs
shr
adc
mov
scas
ins
cmps
push
xchg
jae
aam
push
pop
retf
cdq
mov
and
test
fwait
and
rcr
adc
in
aas
mov
imul
mov
cs
outs
mov
push
pop
mul
pusha
cmps
hlt
jmp
outs
arpl
sub
lock
in
cmp
jge
and
idiv
mov
xor
into
push
lods
scas
call
sbb
test
mov
jno
fucomp
(bad)
fild
pop
and
arpl
ins
fdivr
adc
std
mov
xor
cmp
repz
xchg
shl
and
inc
fild
jmp
outs
fbld
xor
inc
inc
sub
cld
add
jb
mov
mov
and
(bad)
mov
test
dec
inc
inc
cmp
cmp
push
mov
(bad)
sti
push
lock
and
test
sbb
sbb
jne
adc
in
dec
push
aam
fwait
or
sti
ficom
loopne
pop
push
sbb
out
call
fwait
call
fs
or
sbb
mov
fild
mov
pop
cmp
imul
xor
mov
add
pop
jmp
mov
push
inc
jg
movs
mov
mov
or
(bad)
jo
push
(bad)
cmp
or
(bad)
dec
mov
inc
fcom
mov
je
(bad)
repnz
cld
ror
(bad)
out
pop
movs
mov
inc
xor
xchg
loop
lea
mov
push
adc
mov
xchg
test
fs
mov
jmp
jmp
mov
dec
push
xchg
and
mov
ins
push
and
cmp
arpl
sbb
or
(bad)
or
sbb
xor
adc
pop
add
es
mov
imul
dec
dec
sub
mov
inc
pop
pop
pop
(bad)
jb
jge
jle
sar
pop
xchg
push
sub
push
call
inc
ds
sub
add
mov
sbb
nop
ins
xlat
pop
xor
mov
push
inc
sub
mov
lock
outs
stc
pop
sub
ret
dec
(bad)
jmp
mov
(bad)
call
imul
mov
or
sbb
aas
out
in
jge
and
jb
mul
ds
mov
mov
add
mov
(bad)
mov
mov
inc
cmp
sbb
sahf
add
cld
dec
repnz
adc
sub
xchg
imul
push
cmp
mov
stos
lds
lods
scas
sbb
xchg
(bad)
repz
in
inc
test
push
mov
int
and
add
imul
sub
cmp
or
loopne
stos
idiv
repz
outs
pop
fidiv
mov
mov
mov
adc
push
mov
sahf
pop
jp
test
cmps
xlat
mov
jo
xchg
adc
loop
add
adc
out
(bad)
pushf
aam
sub
xchg
call
lea
inc
xchg
inc
js
stos
inc
jle
mov
jle
movs
xor
fs
ret
inc
add
dec
fwait
sub
push
daa
mov
jns
sub
retf
xchg
sub
mov
aad
fwait
dec
sub
inc
pop
lock
mov
lods
mov
mov
mov
loop
cli
pop
sbb
jmp
fs
test
ror
sbb
aaa
cmp
mov
lods
out
add
mov
cmps
bound
push
cmp
pusha
mov
pop
lock
dec
or
sahf
inc
cmp
imul
pop
jbe
or
mov
ret
and
mov
sbb
lahf
fadd
pop
dec
dec
cmp
cdq
pop
test
test
movs
leave
outs
and
pop
or
jg
cmc
xchg
push
arpl
mov
lods
test
arpl
lds
jae
cmp
sahf
popa
les
fucomp
xor
test
pushf
xchg
dec
sti
sbb
sub
sub
(bad)
ss
and
ds
add
jbe
and
call
sahf
sub
loop
mov
mov
sti
push
call
pop
cs
(bad)
or
xchg
imul
jb
cld
stc
sub
cwde
bound
cwde
mov
loope
mov
jb
or
cwde
ret
sub
or
push
mov
test
mov
mov
dec
sub
retf
and
mov
int
push
jae
lds
xchg
dec
sub
lds
es
add
xchg
add
or
mov
mov
cmp
cs
or
jb
cmp
xchg
pop
inc
daa
cmp
mov
lock
sti
aam
sub
and
arpl
xor
and
mov
cmp
and
xor
jle
fbstp
std
jmp
hlt
sbb
ret
movs
lock
hlt
cdq
fidiv
pop
or
mov
or
xor
aas
jbe
push
rcl
cdq
inc
aas
or
add
xchg
addr16
jl
push
idiv
or
loope
clc
(bad)
pop
stos
pop
(bad)
cmps
sti
icebp
add
das
sub
cmp
dec
jbe
xchg
int3
push
mov
das
mov
cmp
ds
mov
push
xor
or
aad
and
push
xchg
test
xchg
popf
stos
(bad)
ficomp
cmp
stos
outs
(bad)
fisubr
sbb
jecxz
xchg
adc
(bad)
dec
ss
in
pop
das
pop
shl
push
js
test
cmp
(bad)
mov
enter
ret
leave
add
adc
sub
mov
mov
cmc
lods
adc
or
(bad)
call
cmc
ds
aam
cli
ja
pop
push
jae
dec
mov
xchg
unpckhps
sbb
mov
dec
jecxz
mov
mov
adc
iret
adc
jmp
call
push
adc
adc
fild
mov
lods
mov
aaa
ja
rcl
sbb
push
xor
icebp
shl
sbb
call
pop
sbb
hlt
dec
iret
pop
pop
ins
arpl
dec
ret
sub
mov
push
sbb
iret
push
add
mov
call
lock
xchg
push
adc
cmps
sub
xchg
addr16
pop
cmp
das
pop
cmp
jg
and
pop
push
sbb
fidiv
xor
pop
dec
stos
shl
pop
aaa
shl
jne
add
mov
sti
aas
sub
shl
call
jp
mov
ins
dec
sub
clc
movs
push
dec
push
lods
sub
adc
out
es
shr
jae
jne
inc
or
mov
push
mov
xchg
scas
loope
popf
(bad)
fist
fwait
add
inc
mov
sbb
xor
icebp
shr
scas
loope
adc
in
cli
xor
nop
mov
scas
out
pusha
and
pushf
inc
dec
mov
movs
push
sbb
and
adc
not
std
ss
inc
push
add
pop
mov
call
cwde
out
mov
mul
je
aas
mov
mov
sub
or
dec
xor
(bad)
mov
stc
mov
xor
jnp
xor
sub
fistp
sub
(bad)
arpl
push
test
inc
test
fst
ins
repnz
or
dec
push
jp
fbstp
sbb
into
fcom
out
pop
sar
call
dec
mov
repnz
(bad)
fidiv
xor
js
inc
ja
pop
push
xor
lds
leave
push
sub
(bad)
xor
in
cmp
test
outs
push
adc
cmps
pop
js
popf
(bad)
jb
mov
in
int3
lods
adc
mov
arpl
jge
repz
jo
dec
shr
out
jecxz
outs
into
push
cmp
adc
sub
mov
inc
mov
and
fsub
cmps
push
inc
test
add
shl
dec
ss
test
mul
fcomp
mov
aaa
mov
mov
sbb
cmc
or
out
inc
inc
sub
(bad)
push
pop
bound
in
popf
outs
nop
loop
add
push
test
cmp
mov
stc
pop
imul
mov
mov
jns
pusha
cli
cwde
mov
cmps
adc
outs
repnz
jae
scas
xor
push
rol
push
jg
push
pop
mov
cld
or
sub
mov
es
mov
mov
mov
ins
jle
aad
jae
sub
or
or
sbb
xchg
sub
cmp
cld
jge
xchg
push
mov
int3
frstor
sahf
mov
and
sbb
pop
popf
xor
fcomp
jecxz
and
aaa
(bad)
stos
xor
cmps
ins
sub
mov
cmp
jne
nop
push
adc
retf
fisubr
mov
or
jmp
sbb
inc
adc
adc
or
jge
js
sar
(bad)
mov
sbb
push
sbb
sbb
lds
popa
lahf
dec
idiv
sub
jae
icebp
aad
pusha
adc
cmp
icebp
cli
mov
add
repz
gs
adc
inc
das
push
jg
out
mov
fndisi(8087
leave
cmps
xor
aad
movs
and
push
mov
sub
pop
jo
popa
idiv
xor
out
jnp
pop
and
enter
enter
mov
inc
ret
cwde
call
test
add
push
inc
mov
mov
and
fadd
sbb
mov
or
in
imul
xor
vmwrite
jmp
or
lds
out
lods
mov
add
movs
shr
mov
sbb
xor
scas
and
in
mov
xchg
hlt
movs
xor
dec
and
cmp
inc
jb
dec
repz
movs
pop
mov
xchg
sbb
es
test
imul
and
pop
add
movs
sub
xor
xor
and
push
mov
adc
test
dec
hlt
scas
ins
mov
test
arpl
shl
ds
mov
mov
in
inc
mov
xchg
adc
rcr
pop
mov
imul
mov
ret
scas
in
ret
mov
cmc
test
xlat
into
test
and
jno
cmp
cmps
and
pop
mov
js
fsubr
push
dec
jp
(bad)
retf
cmp
test
and
sbb
outs
and
ja
mov
ds
jo
(bad)
out
sti
cmp
ret
out
push
or
ficom
mov
cmp
adc
test
push
and
neg
js
dec
test
sbb
test
lods
loopne
popa
mov
lods
xor
cmps
movs
jae
je
sub
cmp
mov
pop
dec
and
into
stc
cld
fldcw
pop
xor
mov
xchg
sahf
xor
cmc
leave
aas
mov
mov
cmp
rcl
fsub
mov
xor
stc
ins
push
jno
xchg
sbb
mov
pop
(bad)
jmp
xchg
xchg
jl
fdiv
mov
jae
(bad)
adc
xor
test
lds
xlat
xor
shr
popf
adc
dec
movs
xor
xchg
adc
mov
(bad)
nop
push
(bad)
sub
add
bound
fsub
dec
fmul
pop
test
or
loopne
rep
and
cmp
dec
mov
icebp
add
add
or
pop
repz
mov
cs
ds
mov
imul
stos
pop
jns
add
cwde
add
mov
aam
jge
call
or
jne
aad
jmp
and
outs
ins
pop
out
shl
sbb
adc
sbb
sbb
jmp
ftst
jmp
xor
shl
xchg
int
fdivr
adc
xor
stos
jmp
out
loop
and
adc
in
add
cmps
outs
leave
or
sbb
mov
out
sub
jns
pop
or
mov
sahf
sub
inc
mov
xor
ss
dec
inc
es
adc
fsub
pop
and
mov
gs
lahf
sub
push
repz
rcl
stos
dec
out
push
inc
jb
dec
jg
je
xor
dec
call
ror
std
jp
sbb
arpl
inc
mov
enter
xor
add
or
scas
cmp
push
xor
sub
pushf
dec
or
das
push
add
out
icebp
jle
ffreep
mov
(bad)
movs
div
clc
pusha
lock
cmp
adc
jae
jle
arpl
or
fist
scas
cmp
out
fistp
rcr
and
into
mov
imul
push
in
data16
or
cmps
xor
test
cmps
jo
cmp
aaa
sub
inc
cli
jb
dec
in
gs
hlt
outs
sbb
and
mov
inc
ds
pop
cmp
and
push
fs
push
push
fbld
aad
and
fld
sub
test
mov
push
push
iret
fcom
push
aad
xor
cmc
sub
cdq
jb
sahf
cdq
add
loop
lahf
dec
push
push
jno
cmps
jnp
mov
daa
stos
icebp
popf
fld
(bad)
call
call
xchg
sub
dec
jno
cli
mov
ds
je
scas
out
jg
(bad)
mov
cmp
mov
mov
pop
lds
jnp
enter
cld
mov
enter
mov
stos
cdq
rcr
test
cmp
js
cdq
mov
mov
add
pop
dec
push
adc
stos
out
sub
xchg
and
sbb
mov
push
mov
jmp
(bad)
imul
jne
ins
or
lea
fistp
inc
shr
fsubp
ret
jbe
iret
pop
out
dec
inc
cmp
sub
and
sti
jge
ret
fwait
hlt
add
adc
leave
imul
jle
jmp
pop
test
ss
cmc
push
jg
in
pop
es
outs
mov
mov
jmp
xchg
push
xchg
sar
(bad)
cmp
cwde
dec
xchg
fs
nop
xor
cmp
jno
dec
std
ins
jmp
pop
xor
loopne
retf
movs
addr16
call
cpuid
sbb
xor
imul
and
add
test
mov
lods
imul
xchg
and
daa
mov
dec
ja
out
jbe
test
pop
jns
(bad)
xchg
fimul
repnz
cmp
bound
jnp
cmps
xchg
inc
pop
fwait
mov
mov
push
jne
rol
adc
shl
mov
sti
jge
test
jmp
sub
mov
sub
mov
fldenv
outs
dec
xchg
loopne
adc
sahf
(bad)
push
les
jecxz
and
mov
jl
outs
dec
ror
mov
rol
sub
rol
lock
shl
jb
mov
mov
outs
fsub
movs
mov
xor
adc
stos
jo
shl
mov
and
adc
rol
mov
or
test
push
push
sub
loopne
das
xchg
sbb
aad
rcl
clc
and
out
icebp
test
jge
xor
stos
xor
adc
nop
daa
out
sbb
add
mov
cmc
data16
xlat
aas
shr
ret
or
jno
mov
jl
mov
fcmovnbe
fild
fst
and
les
jmp
ss
(bad)
fwait
push
clc
sub
test
push
fdivrp
dec
xor
inc
and
or
inc
test
pop
sbb
mov
fld
cmps
and
(bad)
in
repnz
outs
or
cmps
jnp
or
stos
and
arpl
loope
pop
xor
fwait
cmps
mov
sbb
stos
leave
mov
cmp
pusha
out
push
adc
mov
shl
xchg
mov
ret
ins
and
push
retf
ret
ficomp
pop
popf
or
push
ja
and
push
push
or
add
xlat
lds
pop
add
fild
xchg
pop
(bad)
sub
popf
call
or
loope
fisub
lea
adc
cmps
xchg
loope
xor
clc
fimul
add
mov
arpl
fistp
mov
loop
inc
test
ficomp
xlat
inc
mov
loop
lods
arpl
cmp
jo
pop
add
(bad)
outs
bound
jnp
fld
or
mov
imul
push
mov
sbb
dec
out
fstp
sub
xchg
mov
mov
enter
(bad)
push
sbb
cmp
pop
cs
es
outs
(bad)
cmp
pop
cli
dec
call
mov
xchg
jmp
aaa
js
(bad)
sbb
loope
shl
xor
ja
aas
sub
sbb
inc
inc
out
movs
jecxz
les
mov
out
or
push
xchg
mov
(bad)
movs
aas
mov
cmps
nop
cmp
inc
pop
dec
sub
into
adc
hlt
ds
out
jb
idiv
movs
pop
repz
inc
call
inc
sbb
dec
repnz
popa
lahf
(bad)
es
pushf
pusha
gs
ror
add
ret
and
dec
outs
or
mov
push
clc
sub
rol
cmp
shr
jo
jl
out
and
adc
jl
push
jmp
and
jmp
mov
jp
lds
or
clc
push
test
enter
inc
pop
hlt
xor
ja
dec
movs
jg
lods
fwait
cmc
addr16
cld
frstor
mov
push
loope
xchg
pop
psllw
scas
ror
loopne
add
ret
stc
mov
mov
popa
mov
xlat
adc
out
xor
push
jae
push
aad
fdivr
mov
dec
pop
sbb
(bad)
outs
push
or
popa
shr
sahf
aas
shr
imul
out
lods
scas
iret
push
sub
out
sbb
sub
mov
test
jecxz
jmp
retf
jae
jge
sbb
push
or
and
add
fdivr
push
ja
pop
push
pop
adc
aad
add
aam
add
ror
push
icebp
cld
mov
xchg
jnp
push
mov
jns
mov
add
test
cwde
xor
inc
mov
retf
lsl
icebp
xchg
mov
push
retf
xchg
mov
out
mov
mov
imul
ins
stos
sub
sub
jns
out
lahf
cld
xchg
imul
in
data16
xchg
and
out
mov
cs
f2xm1
cmps
pop
dec
mov
or
out
cmp
xchg
aam
sub
test
add
std
pop
cmps
or
sbb
cmp
pop
jno
gs
out
mov
dec
cmp
cmp
daa
adc
sti
jl
stc
loope
addr16
adc
inc
imul
dec
rol
dec
cmps
push
xchg
mov
and
mov
sub
inc
rcr
pop
addr16
push
mov
outs
sbb
adc
into
dec
cmps
push
jmp
js
push
loope
mov
inc
shl
cli
test
loopne
cmp
jp
sub
add
(bad)
lahf
push
aas
sub
jnp
addr16
and
ins
loope
stos
push
shr
inc
hlt
ins
mov
in
loope
mov
aad
outs
adc
pushf
mov
dec
jbe
jnp
dec
and
and
ds
xchg
ins
mov
enter
cmps
rcl
vcvtss2si
loopne
es
mov
cmps
ret
outs
(bad)
pop
push
jmp
(bad)
inc
shr
mov
xlat
xor
jg
call
push
adc
mov
xchg
loop
(bad)
fisttp
mov
cmp
test
aaa
mov
lea
dec
popa
sbb
jl
push
mov
pop
std
fwait
cmp
fsub
or
mov
push
inc
sub
or
mov
das
call
int3
xor
xchg
test
loop
pop
lds
ss
repz
sub
fs
or
(bad)
jbe
or
jle
jg
fcomi
push
stos
fcomp
add
loope
in
push
mov
ins
sub
inc
mov
stos
ret
cmps
mov
mov
xchg
sub
(bad)
pushf
js
rcl
not
jno
push
shr
and
hlt
add
or
inc
cli
sub
in
pop
mov
pop
loopne
or
push
in
jo
inc
lea
stc
in
sbb
push
xor
mov
inc
ss
jp
daa
out
push
aas
jno
sub
or
mov
daa
xlat
jl
xchg
cmp
sub
std
neg
lods
inc
rcr
(bad)
cmps
push
xchg
out
sub
inc
xor
fucom
pop
cmp
fxch
loopne
test
mov
inc
hlt
add
jmp
mov
ins
stos
and
xchg
int3
jns
daa
xchg
dec
test
inc
out
mov
or
test
out
mov
(bad)
test
cmp
xchg
out
outs
push
push
xor
inc
cmp
andnps
and
(bad)
mov
mov
data16
add
div
adc
push
ja
jne
popa
pushf
sub
int
xor
inc
fild
data16
sub
cmps
fiadd
push
push
mov
out
cmp
call
test
imul
ss
jo
cmp
(bad)
shr
pusha
mov
sub
xor
outs
mov
into
push
sbb
in
ror
fcomp
pop
mov
inc
push
aas
iret
iret
fidiv
out
jnp
pop
and
xchg
adc
mov
sbb
sahf
nop
xor
retf
add
cld
ror
jne
mov
cmp
sahf
stos
retf
not
xchg
sub
mov
mov
mov
cwde
in
js
xor
mov
pop
mov
lock
xchg
ins
shl
addr16
xor
xor
mov
aaa
aaa
add
aad
jge
aam
in
loopne
jbe
adc
push
or
push
fsubr
mov
sbb
push
or
movs
fisub
pop
popf
fisttp
sbb
pop
sub
out
inc
mov
sti
mov
push
dec
sub
pop
push
mov
mov
inc
push
div
jae
rol
dec
fdiv
inc
xchg
fcom
and
ds
xor
in
aam
push
sbb
inc
loopne
mov
icebp
sub
cmp
pop
je
add
mov
sub
mov
movs
lea
xlat
shr
lahf
mov
(bad)
in
mov
mov
fwait
mov
adc
sbb
or
cmps
mov
mov
jle
aam
pop
std
daa
push
cli
xor
stc
mov
dec
push
and
push
hlt
imul
push
xchg
mov
mov
ins
push
fidivr
ins
or
pop
mov
movs
sub
popf
shl
rcl
in
xchg
dec
test
fdivr
xchg
loope
mov
cs
push
mov
jnp
inc
add
retf
lods
cmp
ret
call
sti
adc
popf
fstp
inc
jmp
daa
popa
cli
movs
stos
xchg
fsubr
ror
add
or
cdq
xchg
inc
adc
popa
jp
jb
pop
mov
es
and
adc
fldcw
test
pop
push
test
add
lods
cmp
(bad)
pop
test
call
inc
xchg
or
(bad)
loopne
xchg
mov
leave
push
mov
lods
dec
ds
mov
nop
jg
jb
mov
ror
aad
lock
fstp
add
adc
mov
push
or
arpl
ja
fwait
outs
in
push
fild
dec
and
add
cdq
mov
or
shrd
and
sti
cdq
sbb
mov
jb
std
sub
mov
mov
jg
dec
fs
inc
dec
jmp
xchg
push
mov
ret
xor
fisub
mov
xor
fld
pop
dec
mov
jl
js
(bad)
das
push
cmp
movs
ja
out
cmp
or
mov
(bad)
or
adc
cmp
mov
ret
or
adc
jbe
rol
hlt
jecxz
sbb
in
retf
mov
push
xchg
lahf
push
push
inc
sbb
ret
call
mov
loope
add
inc
mov
inc
jnp
xchg
xchg
and
jp
and
xchg
inc
push
adc
lock
xor
pop
mov
mov
fild
aas
test
scas
pop
add
retf
lock
bound
fmul
bound
mov
jecxz
sbb
mov
ficomp
ds
xchg
stos
fwait
sub
aaa
adc
popa
mov
push
ret
les
movs
cld
dec
add
push
in
dec
push
call
repnz
add
mov
mov
test
mov
pop
(bad)
and
lock
lea
pop
xor
call
out
adc
fsub
imul
lds
xor
adc
je
leave
lea
mov
in
add
daa
inc
fdiv
mov
addr16
mov
dec
maskmovq
mul
xor
loopne
cmp
popa
outs
sbb
or
mov
test
add
add
popa
sub
in
stos
xchg
int
arpl
xor
cmc
rcl
push
retf
in
dec
xor
sub
inc
lahf
pop
ret
add
mov
mov
inc
sar
les
test
sbb
in
int3
(bad)
mov
bound
mov
sti
adc
and
ins
cmp
adc
sbb
xchg
mov
fimul
jns
push
sbb
and
fwait
sub
je
add
arpl
lahf
outs
out
cmps
jnp
ins
lock
sbb
stos
fbstp
mov
fnsave
xor
pop
in
fist
dec
test
movs
call
gs
ds
and
jmp
aam
jle
xchg
jo
cmp
inc
enter
mov
jmp
xchg
sub
icebp
and
stos
hlt
and
pop
sub
(bad)
out
cdq
(bad)
dec
gs
xor
arpl
sti
or
inc
jmp
arpl
lock
inc
jne
clc
jl
mov
adc
xor
ret
xchg
repz
fmul
cld
xor
or
pop
xchg
mov
mov
mov
(bad)
mov
jmp
inc
mov
jmp
mov
out
aaa
xor
push
cli
fidivr
into
neg
into
or
mov
ror
cmp
daa
fist
and
retf
mov
mov
js
adc
dec
mov
(bad)
push
pop
xor
xlat
adc
mov
add
add
neg
imul
pop
pop
into
in
pop
sbb
imul
mov
mov
mov
std
sub
xor
mov
lea
jno
mov
add
jl
inc
add
inc
inc
loopne
inc
add
xchg
push
call
pop
mov
mov
(bad)
jo
mov
add
popf
pop
xchg
std
sbb
pusha
nop
cmps
cmp
jns
inc
and
sbb
mov
lea
cld
xchg
ins
cld
lods
adc
pop
lock
call
jae
jno
(bad)
mov
push
xor
push
mov
push
xchg
dec
mov
out
or
rcr
int3
pop
dec
xchg
(bad)
cmp
inc
mov
inc
or
cdq
mov
sub
jl
sub
popf
push
stos
xor
shl
sti
adc
xor
cmp
bound
lods
mov
or
jne
mov
dec
sub
aaa
pushf
push
inc
sbb
jmp
les
(bad)
cli
adc
call
jle
(bad)
xchg
xchg
mov
mov
jnp
pop
jecxz
adc
xor
jp
inc
icebp
mov
fbld
pop
adc
in
push
adc
push
jns
xchg
sar
(bad)
(bad)
sbb
adc
inc
mul
inc
outs
jg
add
jmp
(bad)
lahf
addr16
jl
dec
jecxz
mov
cmp
ins
lds
repnz
mov
fdiv
and
sbb
jle
ficomp
test
addr16
cmp
outs
xchg
jne
(bad)
dec
inc
sub
data16
mov
jne
repnz
pop
hlt
call
nop
repz
pop
sbb
mov
jmp
(bad)
sti
pop
imul
ret
adc
xchg
popw
(bad)
sbb
xchg
mov
pop
sbb
xlat
enter
cdq
pop
retf
es
xor
pop
inc
push
fadd
xchg
in
mov
(bad)
rcl
dec
test
cmp
pushf
imul
aas
and
stos
retf
out
rcl
jmp
movsx
mov
scas
dec
sbb
adc
jle
dec
adc
dec
cmp
loopne
in
stc
nop
neg
jbe
jl
pop
push
mov
imul
sbb
ins
imul
or
in
test
pop
loopne
fwait
or
or
mov
popf
cwde
add
xor
push
and
loopne
mov
fdivr
mov
jp
xchg
mov
ins
and
test
fisttp
fisub
fidivr
cmp
rol
xchg
xlat
or
outs
call
push
pop
push
enter
mov
jmp
stos
nop
xchg
inc
aad
clc
mov
(bad)
mov
jns
sbb
arpl
enter
scas
jo
pop
pop
dec
(bad)
or
scas
xchg
lods
pusha
inc
in
mov
call
pop
push
cld
mov
dec
mov
or
xor
fdivr
xchg
jb
out
and
fbld
retf
dec
mov
mov
inc
pop
mov
mov
add
dec
popw
imul
mov
popa
aam
inc
sbb
lock
inc
adc
mov
retf
aad
mov
pop
jnp
or
icebp
popa
int
bound
adc
push
mov
push
mov
jle
jmp
mov
dec
cmc
cmp
mov
shr
rol
add
cmp
jmp
inc
cmp
push
xor
xchg
mov
fcomp
xor
fwait
(bad)
fild
mov
call
mov
ins
in
and
or
repz
jnp
inc
dec
push
inc
fwait
cli
pop
xchg
movs
and
adc
jmp
(bad)
mov
out
call
mov
push
cwde
repz
add
loope
mov
mov
sub
pop
pop
hlt
cdq
push
ret
jnp
cmps
mov
cmp
sub
mov
dec
push
inc
sub
loope
inc
mov
fnstsw
ins
dec
test
xchg
push
push
dec
xor
fld
and
mov
mov
test
in
test
mov
rcr
cmps
pop
(bad)
ins
imul
adc
pop
mov
(bad)
mov
cmp
arpl
jnp
pop
sub
lds
pop
lods
out
aaa
cld
enter
or
jae
push
cdq
mov
nop
pop
inc
inc
ins
rol
pop
jge
js
movs
pusha
jg
xor
idiv
xchg
sub
jmp
aam
aaa
jne
adc
dec
cdq
out
aad
in
sbb
mov
cbw
in
in
(bad)
call
sbb
cmp
dec
cmp
cld
jecxz
movs
mov
cld
enter
push
addr16
mov
mov
cmp
mov
movs
dec
pusha
aam
sbb
sbb
mov
inc
fst
mov
clc
mov
sbb
loopne
inc
lahf
sub
sar
push
push
cmc
push
xor
push
xchg
(bad)
cwde
sbb
xchg
xor
sub
cdq
cmps
and
js
test
sbb
sar
dec
mov
add
mov
sub
pop
nop
mov
cmp
adc
jecxz
dec
lods
fwait
jns
mov
pop
lds
fwait
jnp
mov
lahf
fcomp
pop
xchg
mov
(bad)
jnp
es
lock
ret
enter
sbb
(bad)
leave
pop
test
adc
and
sub
or
and
jno
dec
aas
fnsave
mov
jb
mov
repz
in
sbb
ret
les
pop
or
inc
rol
inc
pop
and
(bad)
dec
xor
pop
mov
mov
xor
push
aam
mov
sbb
nop
cs
push
push
loopne
cmp
jo
addr16
sub
inc
mov
sbb
sub
neg
mov
cmps
xchg
stc
js
push
mov
xchg
rcl
and
stc
cli
arpl
aaa
in
xchg
ret
fmul
adc
cdq
jo
test
lds
or
or
push
jb
add
inc
test
ds
hlt
out
jle
mov
xor
mov
push
stos
xlat
mov
pop
outs
inc
add
rcl
int3
mov
push
sar
aam
sar
scas
pusha
or
clc
push
ficom
cmp
dec
mov
adc
or
adc
push
add
movs
or
or
dec
or
sbb
lock
(bad)
xor
mov
jnp
jo
lock
or
adc
in
push
mov
cmc
adc
dec
sbb
repnz
jge
mov
cwde
int3
sbb
fcmovnbe
stos
mov
or
jp
fnsave
and
lock
clc
and
xor
mov
shl
test
jne
in
mov
std
bound
sbb
jl
aas
mov
dec
sub
fucomp
cwde
int
pop
dec
gs
xchg
popa
pushf
stos
test
call
xchg
mov
scas
and
adc
xor
call
pop
fisttp
dec
xchg
minps
pop
movs
int
mov
cmp
test
xor
or
pop
dec
jle
xchg
popa
dec
imul
out
imul
jl
mov
jecxz
jmp
mov
es
mov
dec
rol
aas
rcl
movs
fs
mov
sbb
in
or
icebp
dec
idiv
fs
std
mov
dec
loope
movs
dec
dec
pop
popf
jl
loop
sti
add
sub
xchg
test
sahf
aaa
daa
mov
push
inc
das
xlat
test
test
jno
ret
cli
call
jmp
mov
dec
fwait
hlt
add
call
sub
(bad)
movs
lods
jmp
lods
sti
test
arpl
cmc
pop
sbb
movs
rcl
movs
loopne
call
fiadd
inc
test
inc
pop
inc
cmc
jg
ret
sbb
inc
pop
cmc
mov
dec
xor
sbb
jecxz
add
(bad)
xor
ja
cmps
mov
sbb
cmp
push
lea
push
mov
push
ins
mov
xchg
je
repnz
es
and
(bad)
iret
pop
jge
push
jmp
adc
add
and
xchg
cdq
js
sar
shl
pop
cmp
outs
and
add
mov
jo
jne
dec
jo
ds
out
push
sub
sub
fwait
outs
cmc
push
sbb
enter
push
jnp
test
(bad)
cmp
adc
jge
fisttp
cmps
loopne
movs
cmp
mov
outs
hlt
adc
sub
sub
in
pop
push
push
lods
mov
mov
pop
pop
sti
xor
xor
fst
add
sar
inc
adc
dec
xchg
ins
es
fucomp
adc
aam
mov
shr
inc
out
imul
or
int
pop
mov
scas
pop
in
retf
(bad)
rcl
dec
add
push
cmp
ja
mov
ret
mov
jmp
bound
xchg
push
(bad)
lods
mov
mov
outs
pop
enter
nop
pop
jb
sbb
pop
scas
and
add
mov
jnp
fcomip
mov
add
sub
(bad)
sbb
sahf
es
xchg
mov
xor
nop
leave
call
out
test
aam
sub
dec
ret
nop
in
pop
adc
scas
les
cli
ins
add
and
sub
stos
cwde
loopne
cmp
imul
pop
nop
or
pop
ss
imul
(bad)
cwde
mov
pop
mov
dec
xchg
test
and
fsub
inc
idiv
push
dec
fs
ret
and
call
or
out
shl
push
pop
in
pop
mov
jne
or
xor
mov
sub
test
loop
push
mov
sbb
mov
ja
fs
jmp
pop
movs
mov
loop
jmp
adc
or
call
mov
push
and
fisubr
je
mov
push
in
call
xor
dec
out
mov
pop
push
or
out
mov
cmps
in
dec
jmp
inc
ins
lea
pushf
mov
or
ins
test
mov
data16
inc
inc
dec
pop
xchg
inc
data16
mov
lea
lds
xchg
in
or
lods
mov
sub
pop
mov
lea
cmp
enter
inc
add
fwait
jl
test
ss
inc
jno
mov
jbe
inc
sbb
inc
je
jnp
inc
shl
mov
das
bound
mov
test
sbb
ret
movs
pop
mov
mov
sub
dec
and
jmp
jmp
mov
data16
hlt
pushf
invd
mov
xchg
ror
and
ins
push
mov
pop
fidivr
xor
mov
daa
jmp
push
push
aaa
push
jmp
mov
adc
cld
inc
sbb
xor
mov
in
or
idiv
xchg
scas
add
sbb
sahf
mov
in
pop
imul
xor
aaa
mov
push
popf
ds
js
ins
sbb
xchg
test
jae
inc
adc
nop
fwait
imul
push
or
mov
sub
xor
fs
pop
fidivr
pop
leave
pop
jle
sar
fsubr
sbb
mov
dec
cmp
arpl
test
sbb
or
cmp
pop
rcr
xor
mov
and
popf
stc
push
cmp
ds
dec
in
arpl
mov
jnp
mov
in
ins
jne
test
iret
rol
push
add
gs
and
inc
dec
and
pop
sub
mov
ja
loopne
sub
and
rol
xchg
xchg
mov
scas
jl
out
es
sbb
dec
dec
add
push
or
aad
fsub
in
mov
inc
aam
in
out
lea
(bad)
lock
cdq
inc
mov
movs
xchg
mov
mov
mov
push
leave
add
or
fisttp
cmp
rol
addr16
push
jnp
shl
xchg
pop
loope
pushf
mov
ja
xchg
mov
adc
jmp
add
pop
test
xchg
rol
(bad)
pop
sbb
mov
adc
and
popf
mov
cmp
jnp
pop
lahf
dec
mov
test
call
mov
aam
ins
scas
dec
xchg
xor
pop
frstor
ret
jmp
mov
add
xchg
rol
sub
push
inc
add
scas
bound
adc
dec
sbb
movs
mov
enter
fstp
sti
dec
dec
cmp
aad
cdq
call
mov
jo
popa
mov
int3
cmp
pop
nop
add
rol
fst
mov
fdiv
dec
ror
cdq
jae
call
ret
cmp
jo
and
dec
pop
daa
movs
(bad)
jge
cmp
sbb
push
sub
fist
xchg
and
cmp
rcl
ins
out
and
xchg
mov
dec
mov
mov
pop
mov
gs
(bad)
cmps
jnp
adc
lods
and
es
imul
aaa
pop
stos
lock
mov
(bad)
out
les
cmp
mov
pop
pop
inc
into
mov
mov
ja
xchg
xchg
jno
xchg
leave
call
test
dec
sub
das
push
mov
pop
in
push
shl
mov
inc
repz
fs
pop
fidiv
in
sbb
fcomp
jge
jno
repnz
mov
inc
aad
xchg
fild
out
stos
add
loope
adc
imul
mov
nop
mov
stos
lock
imul
test
mov
es
js
daa
adc
into
aaa
lds
inc
jl
js
out
scas
xlat
sub
cmp
or
xchg
hlt
cmp
jmp
push
sahf
xor
add
(bad)
sub
jns
adc
hlt
test
inc
and
and
pop
jbe
xchg
or
sub
xchg
sbb
ret
jae
ficom
mov
dec
ret
pop
inc
or
dec
dec
sub
mov
jmp
jle
jbe
mov
je
or
push
mov
sahf
cld
in
ins
into
mov
sar
out
fisttp
jno
out
push
aas
inc
adc
sbb
dec
sub
fisttp
shr
cmp
bound
xchg
pop
fwait
sar
aam
pop
cwde
xor
xchg
xor
lds
jmp
dec
mov
mov
mov
add
das
aad
out
xchg
push
test
inc
cmp
push
test
sahf
fbld
pop
(bad)
jo
mov
sbb
cwde
es
push
das
iret
xlat
in
or
das
mov
out
sahf
mov
cdq
test
movs
adc
xchg
out
cmp
sar
sub
lods
sbb
sahf
outs
leave
das
jmp
pop
mov
test
fisubr
stc
sub
add
js
adc
lahf
xor
inc
adc
cmp
mov
iret
cmp
xchg
sub
imul
gs
mov
or
test
xchg
lahf
jp
add
xchg
test
inc
nop
mov
cmp
lods
shr
xlat
cld
jne
jnp
push
adc
push
lea
cld
or
jmp
xlat
call
mov
or
rcl
dec
lds
fnstenv
data16
push
iret
ja
div
sub
mov
retf
add
lock
mov
or
sub
daa
cs
xor
dec
(bad)
jne
dec
fucomi
les
pop
(bad)
adc
fldcw
sbb
mov
cmp
cmp
hlt
jl
sbb
xchg
imul
sbb
push
fld
mov
mov
inc
cmps
or
or
mov
jb
jbe
mov
(bad)
fisttp
cdq
repnz
mov
loope
adc
sbb
int3
mov
fist
iret
mov
dec
jmp
dec
sbb
pop
rol
sbb
js
pop
add
(bad)
gs
sub
(bad)
adc
(bad)
mov
inc
xor
fwait
out
mov
jno
or
pop
inc
ret
mov
arpl
xor
jns
lods
push
pop
popa
(bad)
adc
aas
(bad)
sti
pop
cmp
test
scas
pusha
pop
pop
lahf
shl
sbb
jno
xchg
data16
aaa
leave
fmul
imul
ins
mov
pop
jne
or
adc
adc
lahf
test
test
jbe
cld
movs
int
std
add
ins
and
push
lock
cmp
mov
(bad)
rcr
ja
mov
sti
jge
pop
mov
adc
pop
jb
movs
jns
fwait
lods
cmp
adc
loope
cmp
mov
(bad)
push
mov
jae
xchg
or
xor
ja
aaa
inc
adc
pop
rcr
int3
repnz
ss
sub
ret
push
shl
dec
mov
dec
fild
popa
cdq
push
(bad)
addr16
pop
push
xor
scas
pop
inc
mov
xor
gs
add
cmp
mov
lea
int
int3
mov
pop
popw
fcomp
cmp
inc
call
add
dec
adc
xchg
cmp
push
mov
nop
jae
sbb
pop
and
out
jle
lock
pop
mov
jbe
pop
sbb
xchg
xchg
cmp
sub
gs
xchg
imul
stos
push
mov
fstp
ret
test
lods
sub
frstor
jno
(bad)
cs
mov
(bad)
push
dec
xor
cmp
shl
xchg
xchg
xor
fs
sub
(bad)
dec
sbb
addr16
adc
pop
mov
lahf
das
add
(bad)
mov
into
dec
ins
xchg
mov
fnstenv
pop
test
sbb
mov
jo
mov
xor
sbb
movs
mov
xchg
add
cdq
xor
mov
or
div
cmps
xchg
in
xchg
xlat
dec
pop
sub
std
dec
test
cmp
xor
and
aas
out
neg
inc
mov
ja
ins
fucomip
sbb
call
mov
pop
arpl
ss
or
shl
sub
dec
ins
jle
(bad)
gs
inc
icebp
mov
movs
pop
push
xor
jnp
xchg
out
push
fisubr
cli
xlat
cmc
dec
icebp
ss
stos
adc
mov
push
cmp
and
call
or
mov
scas
or
repnz
xchg
jnp
(bad)
imul
dec
jne
loopne
pop
inc
mov
aam
fisttp
sub
jp
xor
scas
inc
adc
inc
fxch
stc
bnd
sbb
(bad)
inc
fcmovbe
sar
es
jns
adc
fstp
retf
fcmovnu
adc
jo
xor
ret
mov
cwde
mov
mov
pop
add
stos
adc
sbb
cwde
and
inc
mov
adc
mov
loope
ja
or
icebp
ds
mov
hlt
push
mov
fstp
imul
adc
ja
lahf
xchg
mov
inc
pushf
aas
scas
retf
ret
jmp
dec
in
xchg
bound
(bad)
aam
sub
imul
stos
mov
iret
inc
add
xchg
add
fild
xor
cs
xorps
cdq
jno
sar
cli
ins
lds
(bad)
mov
test
in
mov
xchg
inc
pop
and
xchg
cs
sbb
rcl
mov
sub
jl
sbb
mov
cmc
ds
adc
or
data16
add
mov
into
out
jmp
adc
and
outs
psubb
shl
adc
push
push
push
sar
or
add
addr16
call
(bad)
push
inc
add
add
jmp
lods
add
sbb
fimul
aas
jecxz
lahf
loopne
mov
jno
xchg
nop
and
push
gs
add
dec
xchg
lods
dec
inc
loopne
loopne
scas
push
push
cmp
xor
out
lock
mov
pop
cwde
add
lock
lahf
and
into
xchg
cmp
push
ret
das
or
mov
mov
dec
jae
adc
fmul
xchg
in
mov
xor
int3
pop
mov
leave
fwait
sub
mov
inc
hlt
adc
popf
jns
cwde
cli
scas
jns
dec
cmp
xor
cmc
setp
loopne
daa
and
cmp
cli
pop
push
jl
inc
retf
add
cmp
pop
dec
(bad)
and
mov
pop
ret
sub
mov
mov
pop
add
sub
cmp
mov
cmc
pusha
fiadd
xchg
je
pop
add
fwait
sbb
(bad)
push
cs
std
mov
push
(bad)
sub
stc
hlt
sbb
inc
(bad)
(bad)
pusha
mov
or
jmp
push
in
fnstcw
xor
adc
mov
cmp
cmp
xchg
jl
xchg
mov
shr
out
pop
cmp
ret
mov
sub
jno
pop
(bad)
mov
outs
push
mov
ins
retf
movs
in
mov
call
sar
leave
mov
mov
retf
xchg
jl
mov
or
mov
test
clc
call
lds
push
imul
and
(bad)
jecxz
jmp
mul
jg
in
xchg
dec
ds
int
sbb
lods
push
(bad)
call
and
sahf
inc
adc
idiv
jnp
rcl
sbb
and
(bad)
xlat
mov
push
xor
loopne
punpckhwd
sub
lea
fcmove
sbb
xlat
in
pop
inc
mov
mov
dec
sete
pop
test
stos
mov
push
loop
inc
pusha
push
push
xchg
retf
aam
add
sub
sub
mov
cmp
and
xchg
and
stos
call
cmp
cmp
ins
cmps
jmp
push
or
pop
ja
es
fs
outs
movs
jae
aas
sar
pop
mov
mov
cmp
push
fimul
or
push
mov
bnd
push
xchg
dec
jnp
(bad)
sub
mov
mov
adc
leave
xchg
mov
xor
imul
jecxz
jo
push
and
loope
bound
lods
dec
ret
js
xor
cmp
xor
fstp
mov
test
mov
push
scas
push
xchg
xor
pusha
popa
add
pop
dec
jnp
out
push
jmp
add
dec
out
jo
aaa
mov
or
add
pop
cwde
pop
gs
mov
mov
mov
push
pusha
aam
and
out
in
movs
mov
leave
pop
dec
xor
ret
ficomp
cmp
and
ret
mov
add
cmp
mov
jp
add
(bad)
cmps
sbb
jmp
pop
pop
fidivr
fcom
xor
mov
add
pop
cs
sahf
sbb
adc
clc
pop
ins
jbe
hlt
into
popa
push
jb
xchg
test
mov
adc
push
add
xchg
fsubr
mov
add
or
movs
ins
in
sbb
sub
jns
push
arpl
retf
sbb
bound
stos
mov
pop
jns
sbb
push
sub
xchg
ror
pop
sti
xchg
fiadd
xor
mov
xor
cmp
out
or
sbb
cs
ret
pop
push
cmp
js
mov
jnp
fucomip
(bad)
inc
mov
cmps
leave
mov
mov
clc
aad
push
fnsave
jl
imul
ins
jl
sbb
pop
stos
jns
mov
pushf
sub
aas
cdq
fwait
leave
sub
outs
sbb
int3
inc
cld
movs
and
jmp
call
fsubr
cld
in
inc
xchg
std
(bad)
cmps
lahf
xchg
adc
sti
sar
lods
xchg
inc
mov
mov
cmps
nop
sub
cwde
xchg
cld
fist
cmp
shl
pop
sub
div
and
imul
pop
xor
xchg
push
mov
or
dec
dec
ds
xchg
push
inc
iret
cmp
or
(bad)
mov
fwait
es
jmp
push
leave
and
lds
movs
inc
sahf
pop
mov
pop
and
leave
or
cld
lds
pusha
rol
in
mov
xor
es
jbe
or
mov
hlt
fsub
and
mov
mov
push
scas
and
jns
mov
jns
cmps
xor
dec
mov
imul
and
outs
push
jp
icebp
rep
inc
mov
fwait
xchg
pop
inc
inc
dec
mov
xlat
test
popf
cmp
cmp
jne
mov
sbb
fild
cmp
and
repz
xchg
dec
dec
enter
test
jmp
lea
dec
lods
pop
not
xor
leave
cmp
sub
loope
sbb
xor
jmp
retf
pop
pop
and
in
es
mov
add
loop
inc
and
push
dec
xchg
cmp
cmp
in
lods
jp
sbb
ins
(bad)
gs
shl
popf
mov
fldenv
mov
les
mov
cmps
rol
jbe
pushf
cs
call
ret
int
xchg
or
imul
sub
push
out
mov
push
jl
mov
mov
(bad)
or
xor
inc
(bad)
sbb
mov
adc
cld
out
cmp
cmp
inc
out
xchg
sub
or
inc
out
push
push
out
loopne
add
imul
in
iret
sbb
retf
pusha
push
pop
and
jnp
xor
pop
(bad)
jnp
mov
rcr
iret
dec
jle
dec
call
jle
mov
mov
outs
call
aas
(bad)
cmc
jo
fldenv
inc
mov
call
xor
xor
pop
jo
xlat
lahf
cmp
and
out
mov
cmp
shr
push
push
xlat
cmp
movs
sub
adc
cmc
add
out
out
icebp
rcr
ins
ja
dec
ret
shl
jge
clc
mov
movs
test
call
xchg
sbb
mov
pop
push
dec
mov
xor
inc
xchg
inc
pop
jns
movs
and
xchg
rcl
mov
push
inc
out
inc
pusha
ds
and
ins
inc
imul
aaa
jbe
dec
shl
hlt
cmc
stc
(bad)
movs
xchg
push
jge
add
xchg
outs
cdq
repz
sub
dec
sbb
in
sub
aad
out
xchg
enter
daa
sub
mov
aad
push
jns
(bad)
sbb
pop
mov
mov
jmp
(bad)
xlat
add
xchg
or
push
pop
lahf
das
add
fisttp
(bad)
cmps
mov
aaa
aam
aad
jb
fwait
out
cmps
xor
and
cwde
in
jle
std
add
out
adc
pop
test
stos
ss
mov
outs
push
mov
push
int3
clc
in
iret
mov
rcr
in
mov
mov
in
out
in
mov
aas
pop
jns
mov
pop
iret
arpl
add
adc
cwde
xor
repnz
pop
pop
hlt
imul
pop
les
jo
cdq
mov
je
jmp
into
adc
clc
mov
sub
not
sti
bound
dec
movs
push
sub
push
fwait
dec
push
cdq
jecxz
dec
in
xchg
daa
sahf
mov
(bad)
sbb
cmp
pop
inc
sub
sub
stos
pushf
cld
xor
xor
dec
fld
mov
jge
jp
loope
cwde
sti
bound
dec
mov
inc
retf
adc
(bad)
mov
mov
sub
jge
or
mov
jnp
cmp
mov
call
mov
lds
jbe
punpcklbw
jge
cmp
movs
mov
sbb
addr16
loopne
sar
movs
push
(bad)
sub
pop
icebp
dec
(bad)
shl
out
add
push
repnz
dec
pushf
cs
xchg
iret
push
push
test
je
xchg
mov
jmp
lods
imul
fdiv
pop
aam
add
call
sub
dec
stos
inc
pop
ja
aad
xor
ret
scas
clc
pop
mov
fdivr
xchg
or
adc
mov
lea
cmp
mov
jmp
das
cmps
dec
ja
push
xchg
cld
sbb
xchg
in
xor
scas
dec
(bad)
movs
inc
cwde
les
add
push
(bad)
out
int
sbb
imul
dec
es
fnstenv
xor
mov
imul
(bad)
gs
into
sbb
mov
test
inc
sub
cmp
retf
cmp
mov
rol
(bad)
ins
jb
sahf
push
push
xor
sar
mov
sub
jne
mov
lods
stos
mov
nop
xchg
and
call
add
cmc
sub
jmp
ins
jae
dec
repnz
or
mov
retf
adc
rol
mov
ficomp
clc
inc
adc
sub
jns
and
mov
lock
fild
sbb
in
(bad)
dec
sbb
jns
adc
fucomp
cmp
and
lods
push
cmps
es
mov
adc
push
pop
popa
cmc
test
jp
cli
ret
xchg
mov
retf
push
loope
cld
sbb
lds
(bad)
int3
push
icebp
fistp
out
in
test
add
in
aam
pop
cmp
jns
in
test
stc
std
mov
ja
push
out
les
pop
mov
or
or
adc
pop
in
cmp
hlt
inc
stc
jg
mov
mov
imul
aas
and
cs
lods
jg
push
outs
or
jb
lods
mov
jg
inc
movs
out
sub
sar
push
ds
and
or
sbb
cs
dec
pop
bound
test
aam
inc
ds
sbb
nop
fsubr
out
(bad)
push
push
dec
ror
fisubr
jmp
out
push
cmp
cmp
sub
xchg
popf
call
mov
cmc
pop
jmp
or
(bad)
sbb
data16
sub
mov
mov
out
fcmovbe
add
push
mul
je
hlt
(bad)
adc
fwait
mov
xchg
mov
inc
stc
add
inc
scas
or
mov
hlt
mov
pop
pop
xor
sti
jns
mov
jbe
mov
sub
jge
jnp
idiv
push
and
adc
inc
rcr
pop
inc
pop
aaa
pop
sahf
popf
mov
and
outs
dec
(bad)
xchg
scas
out
pop
jecxz
loop
add
das
scas
mov
loope
mov
sub
lods
lods
call
mov
mov
ja
popa
cwde
jmp
push
sbb
xchg
add
popf
addr16
in
psubsw
mov
inc
xchg
arpl
(bad)
cmp
scas
or
loopne
lahf
mov
loope
jmp
call
dec
rcl
jmp
repnz
dec
mov
push
pop
cmp
adc
out
mov
sub
jmp
ss
lods
push
in
cmps
fiadd
add
bound
pop
out
mov
and
fcomp
inc
(bad)
sub
cmp
shl
gs
push
cmc
mov
mov
or
mov
int3
or
repnz
repz
icebp
jmp
out
scas
lock
add
aad
cwde
bound
push
mov
add
push
push
sbb
jno
loop
mov
int
lods
dec
stc
cmp
xor
sti
push
aaa
xchg
out
movs
and
jmp
(bad)
mov
cs
daa
stos
das
das
cmp
stc
sar
hlt
jmp
hlt
mov
sbb
and
sbb
pop
sub
sbb
push
push
sbb
jecxz
sub
js
(bad)
jle
and
pop
js
adc
cmp
push
cli
jno
sbb
aam
sub
pop
or
pushf
mov
mov
cmp
mov
xchg
sbb
into
cs
les
mov
test
xchg
push
into
sub
push
push
dec
pop
jp
dec
mov
push
or
cmp
movs
xor
xchg
add
jnp
adc
int3
je
nop
and
adc
or
nop
cs
sbb
test
movs
stc
stos
cmc
mov
jge
mov
sub
push
pop
fs
fisttp
(bad)
jmp
mov
or
imul
mov
call
loop
movs
ins
jp
inc
xchg
jns
jbe
adc
inc
lods
scas
(bad)
mov
lds
cwde
leave
mov
in
jbe
adc
push
cmp
retf
dec
mov
jns
add
fisttp
addr16
lods
mov
inc
das
sahf
mov
add
mov
retf
imul
push
adc
sub
mov
in
loop
sbb
or
xor
outs
xor
mov
imul
inc
sub
icebp
dec
ins
push
mov
jmp
xchg
mov
fdiv
and
popf
and
sti
add
jmp
popa
adc
ins
in
cdq
fst
je
fsubr
push
ja
inc
cli
fs
xchg
aam
pop
dec
add
gs
mov
or
pushf
mov
out
pop
pop
adc
int3
gs
aad
xchg
xor
imul
pusha
(bad)
call
lds
add
(bad)
push
push
and
push
in
movs
call
pop
xor
adc
and
mov
enter
jmp
fcom
mov
iret
sti
jge
cmp
mov
mov
push
movs
jecxz
cmp
inc
xchg
jno
adc
idiv
std
movs
inc
add
mov
loope
or
stos
(bad)
xor
loope
cmc
cdq
repnz
dec
adc
add
xchg
jge
test
inc
pop
das
xor
in
sbb
push
call
lods
mov
jge
arpl
sub
clc
or
jecxz
dec
(bad)
push
lods
sbb
mov
xlat
pop
popa
adc
scas
out
(bad)
imul
xchg
repnz
fcom
enter
cdq
pop
iret
add
adc
xor
jecxz
jl
pop
in
mov
out
retf
xor
iret
into
and
icebp
jg
push
xor
pop
push
pop
rcr
xor
adc
outs
retf
jl
cmp
and
and
es
pop
pop
jo
leave
push
div
push
mov
in
adc
pushf
push
mov
pushf
sbb
cli
cmp
inc
loopne
or
xor
pushf
sub
adc
mov
dec
dec
scas
jp
lea
or
dec
cmps
shl
jmp
or
fninit
xor
mov
push
mov
(bad)
xor
out
jb
ror
pop
dec
test
xchg
jge
inc
jae
adc
jl
pop
cmp
je
sub
mov
dec
in
dec
xchg
stos
arpl
ficom
dec
sahf
fiadd
xor
loop
xchg
inc
retf
and
mov
push
or
mov
mov
pop
xchg
xor
mov
jge
xor
pop
sub
mov
stos
push
es
or
xlat
xchg
cmp
adc
dec
std
or
add
and
sbb
cmps
mov
lahf
jo
mov
mov
inc
test
pop
sbb
mov
mov
mov
inc
sub
jbe
mov
sub
lock
retf
sub
ja
dec
push
je
cwde
xlat
(bad)
addr16
push
mov
int
add
adc
rcl
lds
mov
(bad)
xor
aad
push
dec
les
push
jl
xor
jo
inc
pop
jmp
mov
or
enter
cli
cmp
aas
pushf
jmp
dec
xor
int
mov
cmps
push
std
repnz
xchg
dec
sbb
call
in
push
xor
jne
popa
(bad)
(bad)
hlt
aaa
pushf
xchg
out
fld
cdq
mov
repnz
fadd
out
sub
aas
jbe
pop
cli
fwait
and
dec
pop
shl
xchg
mov
sbb
jbe
pop
cmp
xor
xchg
inc
test
dec
les
pusha
jno
adc
shr
popa
in
into
ja
aad
xor
cmp
dec
pusha
hlt
fsub
daa
sbb
inc
push
add
inc
test
pop
stos
push
push
adc
add
xchg
imul
cli
dec
(bad)
sbb
(bad)
push
mov
jmp
inc
push
pop
test
push
cmp
rcr
sahf
out
cmp
mov
icebp
push
and
cli
cmp
int3
hlt
jge
xor
call
fcomip
aaa
pop
jp
pusha
icebp
mov
pop
cmp
popf
or
xchg
in
mov
pop
(bad)
aad
rol
xor
mov
out
out
pop
push
push
scas
mov
sbb
jnp
sub
push
xor
lahf
adc
shl
add
scas
leave
pop
cmp
scas
jle
lods
pop
js
add
cli
mov
xor
push
and
mov
pushf
sti
ja
call
in
jo
ins
xor
aaa
mov
mov
and
pop
sub
arpl
sbb
jbe
dec
sahf
fst
cli
(bad)
fs
(bad)
push
es
pop
jns
cmp
pop
add
enter
imul
mov
cmp
add
add
xor
push
mov
sbb
int3
aas
xor
aad
and
inc
jne
pop
fstp
xchg
addr16
sti
mov
clc
xchg
cld
sbb
xor
ror
loopne
cdq
sbb
out
(bad)
int
ja
std
cmp
sub
loope
dec
(bad)
test
dec
ins
pushf
retf
(bad)
mov
ja
xchg
push
jge
and
cmp
mov
pushf
fwait
mov
jae
sar
and
enter
in
mov
jmp
add
add
add
or
jno
outs
mov
fbstp
mov
cli
in
and
xchg
sbb
jb
and
(bad)
mov
outs
mov
outs
pop
stc
std
ror
jl
adc
lds
xchg
sub
pop
outs
(bad)
push
sar
xchg
xor
jno
int3
sbb
jno
loop
xor
push
xchg
sub
xchg
daa
cmp
in
push
mov
in
lahf
outs
sbb
mul
pop
mov
dec
adc
jle
add
jnp
sub
dec
cmps
xchg
scas
cli
add
xchg
pushf
ins
(bad)
dec
jbe
jg
ds
cmp
cli
sbb
sub
out
ret
pop
mov
outs
js
xor
inc
push
fisub
jmp
xchg
gs
mov
mov
(bad)
push
xor
shl
inc
pop
mov
test
dec
and
repz
adc
and
add
fdivr
xchg
int
dec
xlat
test
loop
dec
mov
test
int
pop
pop
ret
pop
cmp
pop
leave
and
sti
pop
cmps
jmp
aaa
popa
retfw
sbb
sub
popa
or
mov
inc
and
sub
adc
sti
sub
in
mov
xchg
dec
repz
push
jne
mov
outs
fist
(bad)
enter
push
jae
out
pop
stc
sub
and
xor
xchg
mov
out
push
push
mov
popa
aas
or
or
call
std
jge
iret
inc
jae
mov
mov
pushf
cmp
aas
ror
mov
xlat
jae
out
into
pushf
xchg
sar
dec
push
jmp
(bad)
adc
ss
push
or
pop
jle
aas
fimul
(bad)
push
inc
push
pop
ret
dec
jmp
push
es
ror
push
scas
loop
jmp
inc
stos
push
icebp
mov
mov
dec
push
mov
js
out
sbb
mov
scas
outs
call
sti
mov
fucomip
xor
or
test
inc
hlt
pusha
ins
fldenv
int3
push
sub
scas
cmps
or
fsub
fsubrp
nop
mov
clc
xchg
pop
pop
loop
mov
cdq
mov
int3
dec
mov
pop
stos
(bad)
div
sbb
lds
push
jl
push
mov
push
es
jp
aaa
mov
dec
js
xor
cmp
fdivr
loopne
cmps
fs
inc
sti
fldenv
pop
pop
cmc
sub
sbb
lds
push
retf
jbe
retf
or
jle
call
pop
jge
adc
or
sbb
iret
ret
dec
mov
movs
sbb
js
dec
popf
mov
cmps
cmp
xchg
push
and
cmp
or
push
mov
pop
add
jne
pop
xor
or
jmp
dec
jo
in
and
je
xor
push
dec
cld
cmp
mov
add
xchg
es
xchg
push
jo
ja
adc
cmp
pop
add
xchg
gs
and
pop
jp
sbb
test
pop
stc
cwde
call
mov
inc
out
nop
retf
clc
mov
test
loope
sub
push
inc
and
jno
test
cmp
pop
mov
pop
lock
pusha
push
test
dec
je
movs
mov
fisub
or
push
mov
lds
enter
mov
add
call
jo
dec
cmp
cmp
add
stc
mov
js
ret
pushf
iret
mov
es
mov
bound
out
sar
push
sbb
add
sub
inc
pop
lds
mov
push
jno
sub
mov
fs
fsubrp
int3
sub
push
pop
mov
sti
cmp
(bad)
jge
mov
inc
sub
sub
pop
mov
sbb
out
push
pusha
mov
cdq
in
fbld
in
fisubr
ja
sti
sub
adc
sbb
add
hlt
mov
sub
dec
je
jne
in
xchg
rcl
ror
or
jb
xchg
add
mov
cmp
stos
pop
dec
sbb
sar
xor
bsf
loopne
repz
push
xor
hlt
dec
xor
jmp
gs
mov
inc
les
in
pop
ror
sahf
icebp
pop
inc
dec
(bad)
repnz
adc
mov
xchg
fucomp
iret
adc
cmp
mov
jnp
push
cmp
aas
mov
stos
in
jne
fidiv
adc
iret
jbe
cmps
cmp
jle
push
pushf
adc
into
frstor
cmc
(bad)
(bad)
dec
xchg
lock
das
loop
sbb
aad
pop
adc
shl
push
pop
jb
or
fst
jle
js
push
jbe
pop
xchg
call
sar
adc
mov
icebp
sub
outs
call
jbe
stc
adc
hlt
arpl
enter
and
test
imul
sub
sbb
jnp
hlt
aaa
inc
repz
enter
std
out
aaa
adc
movs
test
cmp
call
adc
mov
outs
out
outs
movs
in
lock
scas
cdq
data16
repnz
mov
or
push
cmc
add
push
leave
fbstp
vpaddsw
mov
inc
dec
lea
xlat
add
sub
ja
cmps
loope
inc
fnstsw
(bad)
inc
pop
sub
inc
adc
es
scas
pop
aam
sub
pop
cld
cmps
imul
leave
rcl
dec
ficomp
std
stos
imul
das
retf
dec
push
xchg
jg
mov
add
cwde
mov
lahf
jg
push
mov
or
ror
in
cmc
stc
inc
mov
arpl
jle
or
pop
popf
shr
sahf
jae
push
mov
pop
stc
retf
popa
cmp
or
cmp
shl
or
mov
sub
and
ds
aas
ja
mov
mov
repnz
ja
jno
cwde
xor
into
sbb
adc
lock
fmul
xor
stc
in
sub
xchg
xchg
lahf
pavgw
push
pop
push
mov
clc
sar
repz
and
mov
loope
and
(bad)
cli
popf
mov
and
pop
outs
dec
sub
or
and
loope
loope
push
xchg
iret
mov
jnp
cwde
push
scas
scas
fnstcw
add
mov
sbb
(bad)
sbb
je
mov
or
rcl
xchg
cs
es
inc
mov
mov
sub
sahf
retf
shl
int3
jne
js
xchg
pop
test
fdivr
push
mov
or
xor
nop
mov
and
inc
xor
add
into
js
sbb
inc
sahf
mov
loop
in
out
lds
push
cmp
xchg
retf
call
push
test
data16
xchg
imul
sbb
in
cwde
(bad)
mov
mov
inc
test
or
pop
dec
jae
in
bound
fcomp
std
test
lods
xor
iret
loopne
int
std
xor
dec
arpl
mul
mov
loop
cmc
movs
mov
mov
cmp
shr
xor
pop
ins
icebp
bound
gs
cli
bound
aas
xchg
mov
xor
shl
popf
sub
cmp
mov
cmp
daa
(bad)
lahf
xor
mov
inc
xchg
(bad)
cli
xchg
jge
sub
mov
sub
(bad)
sub
jp
pushw
(bad)
push
in
mov
mov
lock
push
mov
inc
pop
stos
icebp
pop
and
jb
sti
inc
jmp
xlat
sbb
and
sahf
pop
das
dec
mov
push
js
add
mov
and
inc
in
int3
inc
pop
rol
dec
mov
lods
bound
cli
push
cmp
stc
sub
mov
push
movs
or
call
mov
sbb
jno
xchg
das
nop
push
push
mov
es
fdivr
call
sar
mov
fstp
js
test
out
mov
add
mov
sub
cmps
pop
imul
daa
xchg
ins
lahf
popa
mov
outs
dec
pop
adc
jmp
jnp
inc
xor
frstor
ror
jno
pop
push
scas
(bad)
bnd
pop
dec
test
lock
adc
jae
xor
push
shl
push
add
mov
sbb
cmps
(bad)
icebp
xor
data16
adc
xlat
mov
cmp
lds
lds
inc
movsx
inc
and
pop
cmp
inc
es
adc
mov
loope
loop
aad
push
sahf
lods
icebp
iret
cld
pop
clc
mov
jl
mov
or
sbb
leave
sti
push
fs
lds
icebp
fadd
jno
sub
ret
scas
push
mov
inc
fs
sub
pop
push
addr16
call
jns
push
test
push
fmul
add
test
(bad)
dec
mov
add
sub
addr16
add
dec
cwde
add
ss
repnz
inc
push
into
sbb
(bad)
icebp
mov
into
xchg
outs
in
les
cli
or
push
pusha
adc
inc
stc
es
mov
out
lods
dec
inc
call
inc
iret
arpl
das
fwait
fwait
or
out
fwait
aas
clc
ret
push
je
cwde
cmp
(bad)
mov
push
cmps
loop
pop
scas
repz
scas
test
xchg
repnz
cmp
push
sub
call
xchg
mov
jno
sbb
mov
into
inc
lods
idiv
(bad)
bound
mov
or
jp
jb
leave
cli
mov
xor
mov
and
and
or
loope
iret
inc
push
jl
test
inc
dec
fbld
inc
xchg
mov
inc
xchg
jb
pop
jg
pop
int3
loop
jp
out
pop
fistp
in
lds
and
mov
into
in
dec
(bad)
popa
ja
sub
add
mov
push
outs
mov
xor
cmps
aas
test
inc
(bad)
mov
dec
cld
fadd
mov
repz
call
push
mov
xchg
or
dec
hlt
xor
in
pop
dec
mov
push
mov
pop
cs
jmp
xchg
stos
push
add
xor
std
mov
cdq
stos
lods
retf
jbe
cmp
(bad)
je
sbb
fisttp
push
push
iret
xor
pushf
jmp
and
pop
(bad)
div
mov
push
sub
cmp
sbb
stc
and
pushf
repz
imul
cwde
xor
jb
(bad)
sbb
lods
xor
hlt
jg
fstp
add
out
int
push
popf
pushf
aas
fdiv
mov
(bad)
mov
ds
imul
in
popa
es
or
pop
(bad)
in
fiadd
sub
outs
fidivr
cdq
jecxz
clc
and
mov
pop
stc
(bad)
pop
or
mov
and
mov
xor
pop
sbb
mov
jg
pop
cmp
ror
xor
ss
retf
add
inc
cmp
js
repnz
fadd
arpl
scas
xchg
int
push
daa
add
dec
iret
push
fs
or
aaa
pop
push
shl
mov
bound
dec
mul
dec
std
cmp
add
pop
lds
mov
rcr
in
retf
in
loopne
cmp
fcmovb
mov
mov
lods
sbb
pop
mov
mov
je
cmc
icebp
mov
addr16
xchg
fnstenv
cmp
outs
jns
mov
iret
cmps
call
pop
shld
jae
cmp
jb
retf
dec
jae
loopne
pop
jmp
mov
vpcmpeqw
test
mov
ret
or
call
in
jnp
and
popf
repnz
dec
rcr
lods
pop
es
dec
sbb
aas
and
push
inc
mov
pop
outs
not
mov
into
mov
ds
or
mov
dec
bound
ja
jl
mov
pop
pop
dec
and
inc
pop
rcl
retf
cmp
sbb
mov
cli
inc
or
push
retf
cmp
push
add
jb
jnp
add
fisub
push
add
pop
dec
inc
mov
jnp
mov
dec
xor
and
dec
ins
xchg
xchg
add
ins
cmps
jp
arpl
mov
out
repnz
sbb
xchg
gs
and
sub
aas
push
test
movs
sub
jno
out
arpl
jmp
push
and
dec
and
scas
(bad)
das
aam
dec
ins
mov
xchg
add
inc
xchg
push
adc
jbe
sbb
or
aaa
xchg
add
stc
sar
int3
inc
shr
fwait
jg
add
cmp
and
push
ja
sbb
stc
cmp
sbb
test
pop
loope
jecxz
push
xchg
sub
test
xlat
sti
dec
jmp
mov
jl
fisttp
(bad)
lahf
enter
(bad)
mov
gs
sub
loope
cmp
push
mov
pushf
movs
int3
or
push
test
cs
sub
xchg
mov
or
sbb
cdq
xor
(bad)
jmp
mov
pop
fs
std
bound
movs
xchg
adc
mov
jle
fnstsw
add
aam
cld
rol
mov
mov
shr
data16
cmp
aaa
dec
mov
xor
call
xor
outs
test
imul
outs
inc
test
jnp
popa
xchg
push
mov
enter
or
stos
hlt
sbb
popa
pop
ss
iret
pop
ins
in
nop/reserved
mov
push
and
pop
pushf
fsub
scas
ret
mov
push
(bad)
fucom
lods
scas
retf
cmps
xor
dec
jb
sub
mov
or
repz
cmp
push
dec
xor
and
and
dec
repz
push
xor
xor
xor
movs
setnp
push
arpl
mov
mov
dec
mov
xor
and
push
cwde
aas
mov
loopne
adc
outs
popf
mov
sti
pop
xchg
push
mov
pop
fstp
mov
and
leave
test
imul
mov
mov
push
leave
xlat
xchg
fcmovbe
inc
hlt
pop
fmul
or
out
out
sti
ins
cmc
jmp
push
cmp
retf
jp
retf
adc
js
jno
out
imul
imul
and
cs
imul
test
and
dec
inc
(bad)
ins
(bad)
aam
adc
nop
jge
loop
xchg
shr
not
(bad)
imul
add
push
out
fdivr
sar
mov
and
pop
inc
adc
jbe
shr
xchg
or
push
dec
sti
and
jo
cmps
push
xchg
fmul
sar
fst
sub
lods
cwde
mov
loope
push
mov
mov
stc
jns
fsub
sbb
adc
adc
dec
cmp
std
ret
mov
sar
data16
sbb
sub
and
push
cmps
ret
mov
(bad)
das
sti
movs
mov
xor
fist
dec
stos
loop
dec
aas
leave
addr16
pop
jmp
icebp
jnp
mov
ret
mov
mov
mov
inc
and
jae
push
push
sub
xchg
pusha
stos
sub
(bad)
cmps
jae
sbb
and
(bad)
repz
inc
ret
push
mov
pop
std
adc
xor
mov
in
aam
retf
je
mov
(bad)
xor
cmp
or
out
adc
dec
not
push
dec
add
and
mov
stos
fwait
icebp
loopne
lock
les
movs
and
clc
es
jae
aaa
imul
push
xor
cdq
das
ret
jp
(bad)
out
outs
ret
loope
ficomp
adc
jle
sbb
pop
xchg
or
cmp
mov
(bad)
sahf
and
push
and
fisub
cmp
ins
pop
outs
das
in
popf
popa
fwait
ret
push
pop
retf
sbb
outs
and
aaa
les
out
out
pop
imul
loope
pusha
mov
add
movs
adc
adc
aad
sub
(bad)
push
sub
push
mov
jbe
out
div
fimul
test
sbb
es
aaa
lea
test
xchg
dec
jmp
mov
daa
imul
cld
fnstsw
add
lods
adc
add
xor
dec
cmps
push
xor
inc
push
cmp
test
inc
mov
inc
shr
stc
cld
add
mov
push
jns
jge
dec
inc
and
std
arpl
or
stos
rcr
mov
add
stc
sti
addr16
lock
and
or
cmp
mov
shr
jae
pop
and
ins
or
lods
cmp
pop
or
sbb
mov
mov
jecxz
and
ror
mov
int3
jns
repnz
shl
inc
inc
aam
jno
js
dec
rcl
aaa
xchg
cmp
cmc
pop
shr
bound
mov
pop
lock
add
mov
jnp
sbb
push
mov
cli
int3
and
out
mov
call
movs
loop
sahf
loop
lahf
mov
pop
push
fdivr
sahf
dec
mov
seta
mov
data16
mov
add
pop
xchg
test
xlat
xchg
in
gs
daa
and
call
and
(bad)
cmp
cmc
add
adc
jmp
(bad)
cdq
int
jnp
loope
lock
jbe
int
push
ins
(bad)
jmp
and
cmp
ret
pop
repnz
dec
je
mov
sub
cwde
or
unpckhps
ja
lea
cmps
cs
mov
out
jle
test
sub
ss
add
loope
mov
pushf
dec
fist
adc
jne
ja
inc
jge
fucom
adc
or
nop
pushf
sbb
push
enter
arpl
add
mov
sub
xchg
mov
jmp
and
in
cmp
add
es
or
std
push
jo
cmp
popf
sahf
xchg
xchg
aaa
out
sar
xchg
push
mov
loope
push
dec
fwait
les
lods
out
mov
mov
cmp
loope
out
enter
add
add
mov
mov
daa
sub
lahf
rcr
fwait
fwait
je
icebp
mov
ja
fild
ret
push
int
ret
push
xchg
lahf
int
clc
imul
cmc
mov
mov
cmp
and
push
mov
jae
ficom
pop
fisttp
dec
aam
fwait
jo
xchg
or
adc
lods
clc
xor
ja
mov
mov
fsubr
jbe
pop
mov
and
je
call
sub
mov
mov
dec
test
imul
inc
add
mov
xor
jbe
in
jne
add
mov
ds
ror
push
adc
in
xchg
dec
jge
cli
xor
fsub
adc
add
js
std
inc
pushf
cdq
dec
add
mov
jne
push
ss
iret
fisubr
lahf
add
or
(bad)
push
les
test
sti
pop
lods
movs
inc
mov
and
mov
(bad)
pop
sbb
movs
sbb
hlt
xor
enter
pushf
jecxz
lods
enter
scas
pop
aad
mov
(bad)
rcr
add
push
ds
enter
mov
mov
xor
rcr
mov
cmp
clc
fidivr
or
cmp
imul
pop
popa
mov
add
jo
std
ret
mov
jns
add
mov
test
cs
push
nop
pop
jmp
sub
retf
adc
or
lods
xchg
push
imul
scas
sub
xchg
push
inc
das
jg
dec
mov
mov
mov
cmps
jle
test
mov
inc
retf
(bad)
mov
add
and
dec
imul
(bad)
mov
lods
xor
push
test
jl
mov
mov
out
xchg
adc
xchg
jle
call
and
xor
xchg
and
xchg
sahf
mov
mov
(bad)
sbb
mov
in
and
xchg
and
test
sub
push
and
or
jg
into
dec
inc
aas
(bad)
lods
retf
sahf
aam
fidiv
jnp
pop
cmp
in
stos
call
jnp
pop
ror
or
add
jno
xchg
jmp
sub
mov
fdivr
les
inc
dec
add
test
jnp
or
push
xor
not
xor
push
imul
xchg
popf
ins
ret
pop
xchg
stos
add
sub
jmp
sbb
push
jnp
mov
xchg
mov
mov
push
jae
add
shl
or
dec
push
ror
jo
sahf
adc
push
loope
dec
mov
xor
icebp
cld
push
jge
jbe
jno
or
(bad)
adc
rcl
scas
push
adc
int
mov
popa
mov
adc
jnp
sbb
pop
imul
std
sub
ret
add
sub
add
push
sti
lea
sbb
popf
xor
and
retf
jbe
or
push
sub
jbe
aad
loope
xchg
xchg
and
movs
xor
jns
jl
cmp
dec
sbb
push
out
jno
mov
inc
push
bound
add
pop
repnz
lea
ret
stos
movs
mov
pop
(bad)
jb
int
in
cld
jl
xor
inc
mov
dec
mov
shl
in
jo
pop
cmp
mov
ja
retf
les
(bad)
pop
jmp
inc
jecxz
rol
mov
pusha
bnd
push
clc
mov
fcomp
pop
pop
out
aas
sbb
(bad)
dec
mov
mov
loop
popa
sub
lock
mov
add
push
push
test
hlt
xchg
pop
or
dec
test
mov
js
xor
inc
outs
and
mov
push
ja
movs
int3
cmp
pop
out
push
outs
or
iret
push
cld
ret
je
pop
and
push
aam
fld
shr
jmp
popa
mov
(bad)
adc
aas
xlat
(bad)
add
popf
adc
and
mov
mov
ins
mov
inc
(bad)
mov
push
xor
mov
adc
inc
sbb
inc
lahf
xor
push
in
bound
aam
(bad)
sub
and
lock
jbe
dec
jg
loop
xor
cli
jns
sbb
sbb
mov
mov
mov
inc
pop
mov
stc
jnp
cmp
(bad)
js
xchg
add
xlat
stos
add
sub
jmp
imul
mov
inc
xchg
push
scas
ss
stos
test
mov
inc
cmp
pop
inc
mov
retf
mov
xor
out
push
push
cmps
out
fsubr
dec
sbb
pop
push
xor
mov
scas
and
sub
aas
dec
adc
or
out
cs
mov
(bad)
adc
(bad)
in
lods
sbb
ins
lods
inc
cs
adc
lock
pop
enter
out
push
nop
jo
inc
fst
std
xchg
push
fadd
(bad)
test
and
and
mov
pop
or
cmp
outs
scas
loope
out
pop
or
dec
arpl
inc
add
fiadd
jp
pop
mov
add
pop
sub
adc
stos
pop
js
fst
imul
es
sbb
ror
xchg
cmc
or
rcr
retf
cmp
mov
pop
pop
jnp
push
push
jnp
pop
mov
call
out
add
mov
retf
pop
popa
ret
or
push
(bad)
fucom
xchg
or
xor
jecxz
paddb
mov
push
shl
sub
jno
and
mov
call
push
(bad)
js
movs
sbb
fimul
mov
aaa
ret
inc
rcr
shr
dec
lods
pop
arpl
pop
push
and
jbe
lods
sbb
enter
push
(bad)
loopne
movs
sti
jmp
shl
mov
push
and
popf
mov
(bad)
jg
add
daa
(bad)
popa
pop
push
(bad)
sar
xchg
test
mov
adc
arpl
and
movs
mov
jge
imul
icebp
cmp
xor
sbb
mov
fstp
mov
push
cmp
mov
add
fiadd
aaa
cmp
cmp
das
hlt
xchg
test
mov
in
sbb
jo
and
stos
mov
bound
mov
pop
fs
adc
xchg
push
fistp
not
lds
stos
jmp
retf
fdiv
js
outs
adc
pusha
les
mov
jmp
push
(bad)
xor
fnsave
inc
add
cmp
lods
out
adc
fucomip
out
in
push
(bad)
jns
jecxz
and
mov
adc
ja
mul
dec
sar
lods
loopne
stc
jp
or
out
fcom
rol
fist
jno
cmps
fild
fadd
xchg
xor
shr
shl
adc
push
out
retf
xor
shl
cld
adc
inc
sar
push
adc
fst
or
lea
xor
mov
push
and
push
mov
jp
shl
shr
scas
or
pop
jp
xchg
(bad)
sbb
retf
in
sti
pop
mov
lods
test
rcr
out
mov
push
fimul
push
mov
ret
fs
jbe
cmp
add
sub
push
pop
mov
push
cmp
mov
dec
aaa
mov
adc
js
xor
in
arpl
mov
pop
outs
(bad)
fistp
sub
or
mov
pop
not
push
addr16
cmp
movs
stos
leave
out
or
mov
sbb
mov
and
jmp
lds
(bad)
daa
fild
xchg
add
or
lods
dec
pop
js
xchg
addr16
adc
inc
pop
add
mov
pop
ret
imul
or
das
dec
dec
dec
out
pop
test
sbb
imul
fldenv
in
dec
mov
pop
mov
addr16
xor
stos
mov
adc
xor
cmp
adc
sbb
(bad)
loope
mov
icebp
cdq
shl
cmc
sbb
mov
jle
fldcw
aad
ins
in
aam
pop
inc
(bad)
bound
cmp
pusha
adc
jmp
test
popf
in
add
inc
or
jo
dec
jmp
aam
pusha
mov
inc
xchg
dec
jl
mov
push
pmulhuw
repz
adc
add
das
add
cli
mov
xchg
and
ja
test
sbb
mov
dec
out
lds
dec
xchg
mov
ss
retf
ds
or
aas
out
test
retf
ss
imul
sub
add
data16
pop
imul
std
add
shr
js
push
shl
add
push
mov
jo
jo
arpl
cwde
xchg
push
rol
pushf
test
cmp
ret
cmp
ret
popa
lods
or
movs
scas
mov
mov
je
shl
and
lods
in
cs
stos
inc
dec
xor
not
adc
addr16
(bad)
rcr
loop
shr
push
aaa
pop
inc
(bad)
cmc
and
xor
adc
(bad)
scas
inc
xor
push
popf
(bad)
sbb
retf
pop
push
jo
int3
sub
and
xor
sbb
mov
popf
add
mov
push
imul
fdiv
or
popa
xchg
js
mov
(bad)
std
iret
movs
pushf
call
inc
mov
stc
add
movs
inc
loop
jnp
scas
xchg
sub
repz
lods
test
(bad)
stc
cmps
jb
and
(bad)
xchg
stc
or
enter
jns
inc
mov
les
dec
popf
inc
mov
scas
jl
cdq
mov
inc
mov
repz
cdq
mov
sub
mov
push
jg
adc
fs
cmp
mov
int3
sbb
cmp
std
mov
pop
adc
sbb
xchg
or
sbb
sub
js
dec
mov
je
mov
jmp
mov
or
enter
xchg
sbb
mov
xchg
xchg
push
push
mov
jle
dec
mov
fstp
mov
mov
lock
cmp
in
sub
(bad)
pop
xchg
jmp
inc
repz
pop
xor
fstp
cmp
xlat
xchg
pop
sub
loopne
adc
scas
cli
sbb
xchg
jp
(bad)
lea
inc
ins
adc
call
xchg
outs
data16
cmp
in
add
xor
jmp
cmp
lds
icebp
cs
pop
fld
loop
cmc
out
mov
jg
pusha
mov
(bad)
adc
repnz
fadd
scas
lea
lods
lods
and
push
ins
(bad)
xor
pop
lds
clc
push
mov
(bad)
cmp
cmps
add
fdiv
or
lods
sbb
xor
into
dec
jl
dec
xor
adc
mov
mov
fxch
cmp
jne
in
popf
ins
sub
addr16
push
sbb
stos
pop
jo
ret
xor
sbb
jecxz
call
cmp
mov
icebp
sar
mov
inc
cmp
int
rol
pop
push
popa
jmp
out
es
cmp
pop
(bad)
in
gs
in
mov
mov
mov
jbe
dec
sbb
sub
push
lods
sbb
pushw
test
(bad)
in
ins
leave
sbb
js
or
xchg
(bad)
(bad)
adc
popf
add
fnstenv
xchg
bound
sbb
push
pop
pusha
loop
cmp
cmp
add
push
jb
jmp
je
mov
or
repnz
dec
gs
mov
jne
add
ficom
push
into
clc
out
shl
fmul
pop
in
cmp
sti
cmps
sub
xor
dec
in
popf
cli
bnd
sbb
mov
call
fstp
pop
sub
jo
mov
push
in
dec
and
pop
mov
inc
pop
fld
and
mov
inc
inc
mov
daa
jno
aam
ss
jno
xor
in
shr
daa
ss
aam
dec
inc
arpl
and
test
in
mov
cmp
or
inc
xor
imul
sbb
mov
xchg
mov
test
out
outs
jp
js
mov
call
cdq
test
sbb
jp
inc
sub
jno
lods
mov
xor
int
aas
pop
(bad)
fld
dec
push
(bad)
loop
movs
mov
push
inc
adc
dec
pop
mov
sar
ret
mov
mov
jnp
fs
dec
xchg
hlt
dec
fcomp
cmps
neg
jl
in
xor
inc
inc
or
cmp
sub
dec
retf
scas
enter
hlt
add
(bad)
add
data16
popa
sbb
pop
out
jecxz
inc
fild
sub
xor
fst
out
fwait
mov
ins
popf
lahf
lds
mov
leave
cwde
mov
rol
int3
call
sub
adc
fs
fist
adc
xchg
jb
inc
jle
mov
enter
adc
adc
xchg
out
mov
xchg
mov
out
jp
call
das
sbb
fistp
xor
popa
and
push
std
stc
out
sbb
stc
js
cmp
(bad)
mov
dec
fisub
sbb
cli
mov
pop
jb
out
jmp
adc
sbb
hlt
jne
xchg
jle
push
sbb
or
aam
in
mov
xchg
or
js
lea
stc
sub
mov
scas
(bad)
fistp
or
dec
out
test
clc
das
and
inc
int
mov
dec
retf
inc
pusha
push
retf
mov
mov
lock
add
test
push
mov
aas
jne
jg
movs
cmps
dec
adc
ins
call
push
shl
adc
cmp
push
aam
push
loop
or
movs
mov
movs
sbb
add
fisttp
add
daa
aad
pop
jg
rol
xor
mov
iret
addr16
in
xor
mov
mov
in
mov
sbb
daa
nop
rol
rcr
shr
iret
inc
and
add
or
and
ds
pop
xor
test
inc
addr16
and
add
ss
jns
mov
mov
push
xor
and
fstp
sub
prefetch
loop
fs
push
mov
(bad)
lock
rcr
dec
(bad)
pop
cmp
and
dec
jmp
loop
adc
pop
and
mov
das
mov
jnp
mov
fs
in
xor
and
(bad)
int
stc
add
inc
test
adc
lds
(bad)
cdq
jmp
movs
and
pop
and
xor
mov
cmps
sqrtps
pop
(bad)
loopne
test
lds
mov
push
jg
xchg
sub
adc
dec
pop
sub
movs
rcr
xor
into
inc
pop
es
jge
sub
aam
pop
iret
mov
jl
sub
out
xchg
xlat
mov
mov
sub
inc
in
and
cmp
mov
dec
push
call
aam
sub
sub
test
lahf
and
jnp
loope
and
adc
shr
jb
popa
cdq
jmp
shr
ins
cmc
mov
inc
jno
test
cmp
push
sub
push
cmps
fwait
or
xor
or
stc
loop
xchg
ja
pop
idiv
adc
mov
xor
arpl
leave
out
mov
jmp
cmps
mov
mov
mov
mov
inc
and
adc
adc
int3
test
cmp
ja
adc
sub
in
mov
jo
fcomp
push
dec
(bad)
icebp
push
ret
xor
out
pop
adc
sbb
scas
movs
adc
inc
mov
push
sub
mov
xchg
add
jge
mov
dec
retf
out
cmps
popf
enter
push
sub
sbb
mov
ror
mov
mov
and
xchg
mov
jns
pop
aam
adc
shl
into
aam
inc
xor
mov
pushf
mov
jnp
mov
dec
scas
dec
adc
mov
xchg
(bad)
adc
mov
xchg
inc
mov
sbb
xchg
inc
stos
sbb
or
pop
es
inc
les
ins
pop
daa
rol
inc
in
fild
cli
inc
out
dec
dec
test
adc
mov
xor
xor
mov
punpckhbw
shl
adc
bound
push
fidiv
js
(bad)
in
mov
call
jmp
in
and
(bad)
xchg
add
inc
pop
pop
adc
cmp
adc
adc
lea
xchg
stc
fidiv
icebp
into
add
pushf
ds
dec
into
dec
add
mov
push
test
mov
pusha
jl
popa
cwde
stc
jno
mov
loope
mov
sahf
mov
mov
fnstcw
inc
stos
outs
fld
push
sub
lds
jmp
or
and
jne
cwde
sbb
xchg
and
or
cdq
jecxz
mov
retf
fldl2e
and
jne
jmp
arpl
and
and
fadd
or
js
leave
adc
or
pop
lock
daa
mov
mov
int3
pop
rol
adc
ss
add
icebp
cmp
(bad)
shr
or
sbb
or
addr16
es
xchg
sbb
mov
cdq
jmp
push
and
call
stos
xchg
fcom
cmps
xchg
call
fsub
push
fmul
ret
jge
push
ret
and
mov
push
arpl
ret
mov
pop
push
push
cmp
sbb
cli
sub
dec
jmp
and
aam
jmp
sahf
adc
xor
jle
xchg
ja
adc
in
in
mov
mov
cmps
fnstsw
int
cmc
in
dec
enter
bnd
out
push
pushf
and
push
jmp
xor
jle
sub
mov
inc
imul
loopne
cmp
in
sub
mov
mov
ds
es
jg
ins
rcl
mov
jae
std
repnz
jnp
adc
loopne
mov
rcl
cmps
lahf
out
dec
inc
aad
mov
and
stc
arpl
pop
in
adc
lock
jo
jmp
sbb
aad
mov
outs
sub
mov
xor
lea
dec
js
daa
cmps
rcr
rcl
int3
nop
push
and
dec
repz
pop
xlat
in
out
sub
mov
ror
xchg
sub
cld
pop
imul
lds
cmp
mov
pop
jg
into
add
in
repnz
push
fstp
and
cmp
sub
and
mov
arpl
or
sar
cmp
retf
std
test
addr16
out
retf
adc
(bad)
mov
call
rcr
stc
sub
adc
mov
test
fmul
dec
out
outs
dec
aas
maskmovq
imul
jb
xchg
sub
mov
ror
(bad)
push
movs
pop
push
stos
icebp
mov
xor
inc
and
sbb
push
pop
jmp
retf
in
outs
mov
pop
inc
mov
dec
les
or
out
xchg
sbb
push
inc
mov
adc
xchg
push
add
pop
jmp
outs
and
outs
xor
and
inc
bound
and
add
add
add
jp
push
(bad)
mov
in
mov
or
mov
push
cld
iret
push
in
gs
cli
not
stos
cmp
out
retf
(bad)
push
fs
std
add
mov
js
lods
push
adc
sbb
push
mov
xor
out
adc
nop
jge
adc
inc
add
test
cmp
mov
mov
add
lods
fwait
add
dec
les
add
shl
xor
rcl
jmp
mov
cmp
pop
adc
cmp
and
lds
sub
inc
inc
or
clc
push
pop
ret
jl
add
int3
dec
and
pop
pop
jae
mov
mov
ds
mov
loop
aam
inc
xor
aad
loopne
loop
or
push
cli
xor
push
push
sbb
(bad)
hlt
imul
out
mov
aam
xchg
(bad)
mov
test
std
xchg
mov
sti
jge
xor
pop
mov
xchg
mov
fcomp
in
lea
imul
not
loopne
xchg
test
daa
mov
dec
cmp
jl
(bad)
sbb
and
mov
or
inc
mov
or
and
xchg
xchg
mov
mov
xchg
imul
inc
ret
sub
mov
adc
and
push
sahf
dec
dec
mov
out
push
push
in
add
lds
jno
mov
mov
jnp
push
mov
fadd
pop
cld
adc
cmp
adc
pop
mov
gs
imul
mov
xchg
loope
xchg
je
mov
xor
js
and
mov
ins
fwait
adc
adc
mov
lahf
cmp
into
rol
xchg
mov
adc
pop
mov
push
sub
mov
xchg
adc
scas
bound
sti
aad
aam
and
mov
ja
jno
aad
loop
retf
outs
push
mov
aas
dec
adc
popa
cmp
(bad)
in
jo
shl
cmp
fmul
cmp
xchg
sar
sub
cmp
gs
mov
pop
and
xchg
fwait
cmp
fadd
and
fwait
shl
es
div
or
or
stos
xchg
xchg
mov
ins
ja
adc
mov
das
pop
cmp
and
movs
call
add
mov
les
or
aaa
pop
rcl
pop
jns
adc
inc
fwait
sub
loopne
cmp
loopne
sub
mov
stos
pop
mov
das
cmp
test
ds
inc
movs
shl
cmp
xchg
addr16
inc
mov
clc
div
hlt
adc
sbb
leave
fbld
shr
jle
out
loope
jae
in
cmps
sbb
add
movs
push
out
xchg
imul
cld
cmp
repnz
mov
in
fst
mov
inc
cmp
push
sti
stos
inc
or
inc
call
popa
jmp
xchg
inc
out
mov
mov
jne
xchg
adc
in
(bad)
rcr
enter
adc
ins
outs
and
aad
push
retf
pop
mov
pop
cmc
mov
test
cmp
(bad)
in
movs
push
popf
or
dec
mov
mov
sar
fwait
and
mov
sbb
ins
stc
jo
dec
or
repnz
and
sub
stos
sahf
pop
scas
ficom
jge
inc
icebp
(bad)
sbb
and
jge
and
add
mov
mov
cs
fs
(bad)
addr16
imul
out
adc
pop
(bad)
in
push
call
(bad)
mov
xchg
sub
sbb
aad
sahf
mov
xlat
lds
push
sbb
loope
push
shr
jmp
or
iret
popf
pop
inc
sahf
and
stc
fnstsw
jnp
loope
lock
leave
and
inc
mov
dec
xchg
sbb
stos
outs
adc
and
cmps
shr
ret
dec
mov
shl
repnz
pop
push
ja
inc
pop
adc
test
xor
pushf
pop
mov
inc
imul
xchg
call
jo
fsub
pop
fmul
xor
xchg
cmp
inc
pusha
add
mov
fs
xor
loopne
sahf
sbb
adc
push
sub
mov
loope
mov
pop
add
jl
enter
push
das
xchg
aaa
push
daa
test
jge
xchg
int3
js
sub
or
pop
nop
arpl
xchg
pop
add
in
loop
mov
ss
call
xchg
dec
push
std
jl
mov
adc
mov
shl
mov
stc
lea
repnz
mov
jnp
dec
loope
cmc
loope
inc
jno
test
xchg
mov
mov
sbb
jmp
cdq
ja
ret
das
dec
mov
std
fmul
fnstenv
and
loopne
das
jl
imul
sub
cmp
push
cmp
out
cwde
mov
pop
int3
fsub
call
mov
jle
lods
div
cmp
mov
push
jl
(bad)
fiadd
cmps
jae
sub
adc
sbb
(bad)
outs
push
pop
call
enter
aad
arpl
stc
jmp
adc
and
push
push
(bad)
cli
rcr
mov
and
fs
aam
test
mov
jo
cmp
mov
inc
into
add
jg
inc
push
mov
sbb
rcr
(bad)
in
icebp
adc
sbb
pop
inc
mov
xor
xchg
test
scas
jbe
push
mov
mov
mov
mov
push
mov
out
or
shl
leave
test
push
or
pushf
lods
clc
dec
pop
or
mov
xor
inc
lahf
cdq
out
adc
in
pop
jne
or
clc
inc
mov
push
sar
jmp
push
test
lahf
xchg
cmps
sub
dec
data16
jnp
push
dec
cmp
sub
push
mov
movs
xchg
add
and
pop
cmc
jnp
mov
stos
leave
inc
fnstsw
xchg
out
push
and
es
xchg
push
add
xor
xchg
sub
sti
aas
imul
xor
es
push
mov
fcmovnbe
mov
iret
into
mov
sbb
pop
fistp
test
dec
mov
retf
dec
sbb
pop
dec
dec
pop
out
outs
shl
scas
cmp
imul
into
jbe
or
fbld
lods
xchg
addr16
lods
popf
mov
or
pop
das
lea
jae
pusha
inc
and
xor
sbb
dec
sbb
push
jge
sahf
push
out
sub
cmp
mov
dec
sbb
xchg
aam
sahf
ins
dec
icebp
outs
popf
dec
out
dec
mov
and
stos
(bad)
xor
mov
in
mov
sbb
mov
fldcw
push
lock
jbe
or
mov
cmp
rcr
add
aaa
or
push
in
stos
shl
(bad)
repz
or
mov
jl
gs
sbb
(bad)
mov
sub
mov
xchg
and
fld
xor
and
frstor
cmps
mov
xor
shl
aaa
xor
test
cmp
jo
lods
aaa
ja
out
jbe
mov
outs
cld
lahf
jbe
fbld
dec
adc
or
cmps
cmp
ins
xor
(bad)
pop
jno
xchg
xor
pop
add
push
test
jg
pmaxsw
out
cmp
pop
loop
and
jo
dec
not
ins
out
jg
sub
or
mov
int3
mov
fwait
popf
and
xchg
test
bound
adc
and
icebp
push
mov
and
stos
jo
(bad)
add
ins
sbb
mov
pop
aam
sub
and
xchg
inc
ret
ret
aam
xchg
mov
mov
mov
add
clc
stc
int
fsubr
cmp
fnstcw
fcomi
scas
in
retf
dec
sub
mov
xchg
or
jbe
adc
retf
jl
adc
sahf
push
cmps
or
or
inc
sti
fisubr
or
repnz
retf
dec
lods
imul
fdiv
in
mov
sbb
xlat
cli
cmp
sub
adc
fwait
pop
cdq
scas
push
int3
sti
(bad)
loopne
or
(bad)
jle
ins
aad
pusha
dec
dec
add
cdq
cdq
mov
push
imul
ja
xchg
inc
mov
pop
push
ins
test
mov
pop
sub
push
mov
mov
jg
cwde
sub
adc
xchg
mov
mov
hlt
scas
test
sub
sub
sbb
(bad)
cmp
sti
push
jae
aas
xor
pop
jecxz
push
jl
jmp
popf
or
cs
lea
push
pop
(bad)
cs
fs
loopne
xor
pushf
adc
ret
or
and
jo
neg
mov
push
rol
cmp
(bad)
inc
test
mov
mov
hlt
xlat
xchg
push
lods
mov
jne
test
in
fstp
mov
sbb
xchg
sub
(bad)
(bad)
jnp
mov
xchg
mov
rol
idiv
std
ror
loopne
out
bound
push
stos
sti
inc
ret
loope
mov
xchg
sub
inc
pop
cwde
ja
movs
xor
inc
jnp
arpl
adc
shr
cmp
or
mov
clc
push
sbb
aas
popf
and
push
data16
out
test
js
or
icebp
add
leave
pop
xor
ds
imul
fistp
add
dec
repnz
cmp
cdq
push
pop
cmp
popa
call
mov
xchg
jno
sbb
add
inc
inc
pop
cwde
in
push
push
lds
mov
psrlw
pop
sbb
sti
add
xchg
je
push
movlhps
popa
sbb
cmp
daa
push
cmp
adc
dec
xchg
jb
mov
sub
cld
lock
push
push
inc
add
add
xchg
sbb
mov
call
adc
jo
sbb
jge
aam
je
dec
in
cmc
loope
inc
xlat
hlt
mov
push
jno
fadd
dec
or
gs
mov
dec
add
movs
inc
xor
mov
pushf
cmp
outs
neg
ja
add
sub
ins
dec
push
popf
(bad)
pushf
push
loop
int
sub
sbb
sbb
pusha
xchg
jle
push
add
mov
stos
rcr
outs
jg
icebp
push
jns
and
pushf
jne
movs
push
out
sti
jp
sbb
jnp
ja
push
inc
nop
add
jg
rol
sahf
aad
xchg
(bad)
call
jl
js
stos
dec
push
push
imul
cmp
and
iret
ret
jns
jbe
xlat
in
cmp
fst
sahf
sub
in
lahf
mov
ins
jmp
add
das
jle
or
push
mov
ficomp
mov
js
dec
and
pusha
jg
outs
sub
test
push
push
cmp
inc
jp
sub
adc
aam
das
into
cmp
call
inc
add
jmp
lahf
test
leave
or
popa
adc
fdiv
adc
(bad)
in
nop
outs
inc
and
das
je
call
mov
outs
or
dec
adc
out
aas
cmp
test
mov
retf
inc
push
popa
and
inc
sbb
pop
pusha
enter
adc
dec
out
adc
push
pop
or
cmp
or
dec
xor
les
jl
cdq
fs
popa
les
scas
pushf
das
imul
arpl
cmp
mov
in
fwait
push
int
ja
mov
call
mov
(bad)
xchg
xlat
pop
scas
and
not
in
retf
clc
bound
(bad)
div
or
ds
jecxz
std
jmp
stos
fwait
call
aad
std
int
test
adc
jmp
mov
test
dec
cmp
aaa
scas
sahf
sub
sbb
cdq
push
adc
movs
add
pop
pop
xchg
pop
xor
pop
je
mov
lahf
cmps
jl
mov
retf
mov
fst
shr
lods
push
rcl
test
(bad)
sub
mov
and
or
jecxz
outs
cwde
xchg
and
dec
xchg
push
mov
aam
cdq
jle
fild
test
ret
push
cmp
shl
inc
imul
(bad)
data16
xor
sar
sbb
or
xor
adc
pop
scas
cmps
mov
xor
pop
out
mov
test
inc
sar
mov
into
xchg
dec
mov
xor
imul
or
(bad)
test
xor
inc
int
(bad)
mov
mov
dec
out
js
dec
jnp
sub
xlat
mov
sub
push
add
mov
or
add
aas
add
icebp
in
std
mov
and
retf
sbb
(bad)
ficomp
sub
gs
out
xor
sub
ficom
movs
pop
add
pusha
xchg
mov
in
into
jmp
dec
adc
ror
(bad)
in
adc
sub
adc
cdq
cwde
pop
dec
cmps
call
sar
scas
xlat
call
push
ficomp
push
jnp
xchg
push
retf
mov
clc
pop
inc
xchg
mov
pop
out
inc
mov
xchg
stos
cmps
cmp
ret
mov
sub
imul
adc
cwde
jns
bswap
cmp
xchg
cmp
xchg
lock
add
lock
retf
enter
add
cld
fs
into
push
and
sub
pop
loop
pop
xor
ins
or
pop
or
vpmacsww
(bad)
test
pusha
sti
sahf
sbb
inc
cmp
fidiv
loope
xor
jecxz
and
shl
jle
(bad)
pop
xchg
jb
ins
call
nop
sbb
cmp
mov
mov
jmp
sbb
shr
jg
adc
adc
icebp
into
mov
and
sub
push
sub
repz
pop
mov
in
sbb
inc
(bad)
add
fnstenv
std
inc
jb
mov
out
xchg
and
push
scas
pop
inc
mov
sahf
pop
mov
fbld
xchg
(bad)
fs
jne
lea
int
xchg
scas
cmp
hlt
push
fcomp
icebp
mov
rcr
xor
xor
mov
dec
call
dec
mov
mov
in
pop
ja
mov
push
mov
leave
dec
hlt
pop
push
ins
push
aad
enter
push
push
xor
sar
sbb
push
pop
mov
in
and
test
lods
dec
fistp
std
mov
mov
pop
cmp
mov
or
test
pop
mov
out
test
pop
jge
push
pushf
mov
loop
mov
xor
or
or
mov
xor
cmps
mov
in
jae
add
or
repz
push
outs
jmp
popa
inc
and
lods
fs
sbb
push
test
sbb
or
add
loope
dec
add
mov
ret
mov
jg
iret
sbb
and
xchg
ins
push
push
sub
pop
out
outs
inc
js
pop
add
mov
push
dec
inc
push
adc
add
lahf
xchg
loopne
retf
shr
ins
or
stc
jmp
mov
mov
jno
cmc
rol
add
or
rcr
mov
pop
retf
mov
fwait
inc
nop
das
pushf
xor
pop
and
cmp
xchg
les
lods
dec
aam
call
sbb
(bad)
fsubr
add
mov
sbb
or
(bad)
cmp
(bad)
int3
fs
into
mov
mov
les
push
fisubr
(bad)
or
std
in
or
push
mov
mov
unpckhps
cmc
xchg
aad
lods
sub
loop
enter
retf
sbb
mov
and
call
push
mov
push
pop
xchg
dec
cwde
or
(bad)
jne
addr16
add
mov
add
xlat
xor
mov
or
push
imul
jb
adc
mov
clc
pop
and
int3
mov
fistp
bound
inc
push
pop
and
cmp
and
test
push
inc
iret
cmp
add
inc
pop
pop
popa
jo
lods
push
xor
jb
jmp
jl
pushf
(bad)
int
mov
out
aam
aam
adc
neg
clc
jae
cwde
test
push
lods
dec
test
pushf
sub
add
aad
pop
(bad)
std
cmc
push
scas
test
pop
sbb
jno
neg
xlat
or
jl
jb
div
pushf
daa
mov
stc
fstp
nop
aad
inc
push
xor
and
dec
push
cmc
hlt
sub
mov
push
add
inc
mov
mov
jge
jl
cmc
addr16
xchg
pop
loop
jns
inc
xchg
je
sub
(bad)
mov
and
sbb
jmp
mov
xor
aaa
popa
mov
push
vmwrite
addr16
(bad)
mov
fisttp
les
lahf
call
jmp
jecxz
test
into
jge
sub
cmp
fimul
push
dec
loope
sub
sub
scas
movs
loop
cmp
inc
inc
fxch
inc
mul
daa
in
sub
xchg
rcl
xchg
mov
adc
adc
push
sub
ins
and
mov
ins
sbb
pop
ret
pushf
stos
sar
xor
aas
rcl
jne
gs
inc
jne
sbb
into
(bad)
in
sti
add
in
or
std
rol
pop
pop
ja
dec
push
fcmovnu
in
mov
mov
pusha
hlt
xor
dec
(bad)
mov
cmp
jnp
call
xor
js
popf
movs
in
lock
jo
outs
sbb
pop
cdq
or
jmp
and
fnsave
out
xchg
test
xchg
xchg
ror
and
mov
dec
mov
push
pop
mov
test
cmp
push
rdmsr
in
cmp
sti
bound
test
sar
push
hlt
xor
not
sahf
icebp
push
into
mov
dec
ins
cmp
ror
push
jecxz
cli
loope
sub
xchg
xor
movs
mov
inc
pushf
pop
xchg
(bad)
dec
sbb
push
sbb
icebp
out
push
dec
loopne
lea
loope
cmps
in
jp
pushf
fldcw
mov
pop
inc
push
hlt
ins
arpl
pushf
nop
xchg
hlt
jo
int
sub
lods
mov
sbb
(bad)
mov
jne
ins
nop
shl
enter
add
adc
mov
lds
retf
sub
clc
fcmovnu
std
fs
mov
push
into
inc
loop
mov
mov
dec
mov
fmul
nop
ins
xchg
inc
cmp
shl
test
jo
pop
jmp
out
ds
xor
dec
adc
(bad)
rol
ds
dec
call
dec
(bad)
bound
ins
mov
pop
je
cmp
adc
or
(bad)
mov
dec
fldenv
or
cmps
rcr
add
mov
add
inc
pop
jae
jmp
mov
rcr
popf
jae
dec
test
pop
jl
mov
sub
aas
scas
pop
pop
cmp
popf
mov
jp
push
mov
or
xor
mov
mov
imul
sub
push
mov
mov
js
call
stos
lahf
dec
daa
push
test
jg
sub
sub
cmps
adc
xchg
stos
inc
es
jle
fistp
push
ins
cdq
in
push
cmp
sub
(bad)
mov
dec
aas
popa
add
and
es
hlt
mov
jns
xor
int3
inc
imul
sub
or
imul
repz
in
shl
fdiv
stc
cmp
or
das
lds
mov
xor
(bad)
xchg
or
dec
or
cld
nop
dec
cmps
nop
cld
dec
(bad)
push
adc
sbb
dec
(bad)
(bad)
sbb
xor
sub
loope
scas
adc
leave
dec
lods
dec
cmp
and
xchg
dec
add
popf
test
retf
or
mov
imul
hlt
loope
cmp
jp
lods
cmp
adc
enter
out
mov
dec
jo
aas
push
out
aad
cmp
cdq
jp
pop
adc
inc
cmp
or
push
sbb
cld
ins
and
mov
test
push
adc
in
data16
or
xor
test
push
mov
mov
cmp
mov
push
inc
in
stos
popa
jmp
pop
jno
scas
push
mov
xchg
mov
sub
sahf
and
push
es
jp
pushf
arpl
xor
adc
sahf
jmp
(bad)
jg
cwde
mov
imul
ds
jns
cld
xchg
iret
mov
fld
sbb
xchg
mov
push
sub
and
std
(bad)
loop
outs
and
leave
mov
adc
add
scas
mov
scas
fst
mov
fidiv
mov
inc
test
ins
ds
adc
dec
sbb
mov
adc
mov
xchg
inc
sti
mov
bound
xor
mov
push
stos
mov
mov
icebp
xchg
ins
pop
pop
sbb
push
dec
imul
and
and
cmps
xchg
shl
mov
and
fs
popf
cdq
fdivp
enter
jle
mov
stos
daa
stos
retf
shl
fsubr
scas
aad
fmul
push
(bad)
loopne
popf
sbb
aam
int3
or
cmp
and
adc
sub
into
lds
fidivr
push
(bad)
loope
mov
cmp
test
jns
jl
sti
rol
sbb
test
pop
cmps
sahf
pop
and
out
dec
daa
inc
pop
aas
cld
ffree
jp
iret
(bad)
mov
sub
push
adc
inc
pushf
stos
mov
lock
sbb
not
dec
jecxz
pop
fwait
mov
cmps
shr
aam
fs
fist
ins
ss
push
iret
mov
leave
jb
dec
fadd
arpl
shl
or
ds
enter
in
pop
into
mov
xor
shl
inc
jno
outs
push
add
div
sub
fisttp
int
(bad)
mov
fild
clc
push
cdq
(bad)
mov
inc
test
mov
fwait
sbb
ins
and
xchg
cmp
xchg
lods
popa
mov
mov
dec
sbb
fwait
xor
mov
movs
pop
fcmovne
mov
and
loop
popa
ins
inc
mov
or
test
sub
xor
iret
(bad)
pop
push
sbb
cmps
adc
sar
or
ins
leave
sbb
retf
add
enter
or
loop
sbb
mov
add
jae
cs
ja
test
cmp
outs
xchg
sbb
out
std
inc
shr
ror
xchg
aad
shl
call
imul
mov
nop
dec
and
dec
fidivr
ret
pop
movs
mov
push
dec
div
pop
aad
retf
shr
adc
cmp
push
adc
aas
adc
out
cmps
mov
sahf
xchg
mov
leave
retf
scas
lds
mov
inc
mov
in
inc
push
ret
sub
out
sbb
bound
jp
jmp
inc
inc
cld
pop
ret
mov
scas
imul
mov
xor
(bad)
scas
sbb
mov
data16
push
pop
sbb
lock
push
cld
dec
push
rcr
xchg
dec
retf
mov
fwait
les
xor
aad
js
stos
push
ret
mov
inc
movs
jbe
ins
aaa
mul
scas
test
(bad)
push
mov
ror
jnp
and
mov
pop
cdq
call
mov
ror
in
loope
mul
sbb
push
dec
xchg
xor
push
and
test
sbb
dec
adc
ss
leave
es
fs
cmp
je
add
test
test
mov
fscale
fst
into
jmp
stos
movs
xchg
jns
in
jmp
jle
cli
pop
dec
fisttp
cmp
dec
push
ja
mov
ror
push
inc
cmp
adc
shr
dec
mov
or
popf
(bad)
(bad)
mov
cmp
jmp
jmp
ins
(bad)
fistp
mov
fmul
mov
dec
sub
mov
cmps
mov
or
pop
data16
leave
adc
adc
inc
xchg
stc
sub
movs
xor
clc
pop
and
std
jg
clc
movs
fwait
cdq
inc
cmc
loopne
imul
rcl
movs
lds
sub
rcr
clc
mov
adc
or
fcmovne
mov
or
mov
retf
push
and
int
pop
movs
or
jne
jmp
test
sub
inc
cmp
xchg
repz
stc
shl
and
sysenter
mov
mov
and
sub
push
clc
inc
jp
mov
push
xchg
xor
xchg
jp
or
repz
inc
pop
test
nop
pop
clc
jne
cmp
test
push
mov
push
and
cli
ss
xor
and
adc
and
inc
jae
jb
rep
enter
(bad)
push
shr
xor
xor
cmp
out
les
or
cdq
inc
and
mov
mov
sahf
sbb
bound
clc
cmp
int3
inc
mov
mov
add
xor
adc
retf
arpl
enter
les
pop
push
(bad)
in
add
push
cli
fwait
sbb
inc
push
test
mov
pusha
stos
cmps
inc
retf
loop
inc
xchg
lods
addr16
nop
sub
xchg
repnz
push
icebp
(bad)
fidiv
cmp
fwait
int
sub
add
add
fsub
sub
push
(bad)
fiadd
loop
outs
sub
mov
jmp
mov
int
sub
cmps
mov
ret
lahf
test
hlt
pop
pop
movs
aam
dec
pop
sbb
mov
push
and
xor
mov
sbb
popa
das
sub
fisubr
iret
aam
jmp
adc
fsubr
or
ret
ds
push
cmp
mov
ins
pusha
ret
jp
xchg
xchg
adc
stos
push
jnp
fisttp
inc
js
add
sbb
cmps
(bad)
je
sti
adc
repnz
ja
pop
lea
cmp
dec
mul
int3
jmp
sar
fcomi
pop
add
mov
int3
sbb
mov
dec
fisttp
mov
pop
sbb
and
cmp
movs
in
jnp
bound
sbb
in
mov
out
pop
xchg
mov
pop
adc
ja
and
mov
ins
inc
jmp
test
cli
xor
add
loopne
inc
add
(bad)
mov
add
mov
mov
push
mov
lock
test
cmp
pop
sbb
or
push
or
push
pop
mov
cs
and
pop
or
jmp
jecxz
movs
popf
dec
js
(bad)
sbb
mov
mov
inc
movs
cmp
mov
push
aad
mov
cmp
mov
ret
mov
pop
cmc
xchg
pusha
mov
dec
fst
mov
pusha
aam
icebp
dec
push
mov
add
daa
adc
sbb
aas
out
or
in
push
and
sub
xor
dec
or
test
mov
add
out
in
jno
add
loope
sbb
(bad)
mov
xchg
and
imul
mov
dec
mov
ret
daa
add
push
aam
dec
push
stos
mov
push
sub
cmp
fs
icebp
mov
cmp
xchg
ror
push
push
jb
inc
jns
mov
(bad)
rcr
add
call
inc
mov
push
mov
popf
popf
out
cli
test
ret
(bad)
iret
and
or
jmp
jmp
cld
ret
xchg
leave
cs
scas
out
std
out
add
or
bound
xor
xor
and
mov
cmps
add
mov
jne
or
pop
ret
or
cmps
inc
or
mov
ret
(bad)
jg
shl
in
push
movs
outs
xlat
xor
mov
and
sub
add
lock
inc
mov
inc
xchg
pop
lahf
fwait
ins
loop
dec
nop
or
inc
clc
mov
add
das
das
and
push
shr
aam
stos
cmps
repnz
std
xor
xchg
fild
push
xchg
cmps
(bad)
cli
lods
sbb
cmp
sub
shr
jle
mov
imul
das
mov
and
fs
stc
inc
mov
and
outs
fs
cmps
iret
jmp
xlat
add
aad
retf
retf
fmul
and
call
fsubr
addr16
push
popa
mov
adc
or
or
pop
mov
sbb
add
inc
xor
xor
push
(bad)
scas
xor
or
mov
loope
sub
out
sbb
dec
xor
dec
cmp
xchg
jo
add
frstor
jge
stc
xor
popa
mov
not
loope
je
jmp
sti
shr
in
jmp
jmp
les
or
xchg
cli
mov
(bad)
fiadd
push
dec
adc
mov
aam
retf
mov
push
popa
push
push
sbb
ins
pop
mov
xor
push
popa
xor
(bad)
shr
sbb
loope
or
loopne
push
jl
xchg
test
adc
xlat
cwde
imul
pusha
mov
outs
pop
push
push
stos
lods
shl
pop
ds
call
popa
cmp
add
stos
xor
popa
push
sub
jecxz
mov
pop
push
inc
pop
mov
pop
(bad)
in
xor
push
dec
adc
pop
xchg
(bad)
sti
int
div
addr16
(bad)
test
sub
or
pop
stos
xchg
cmp
push
mov
sbb
(bad)
mov
out
fisttp
clc
sar
jl
push
sub
fwait
mov
mov
jl
sbb
cmp
repnz
jne
stos
xor
ror
stos
sti
sub
aaa
jmp
jl
adc
pop
mov
loop
xor
inc
jae
adc
or
xor
adc
lahf
cmp
add
add
jns
push
or
mov
call
pop
jecxz
cmp
jae
inc
xchg
pusha
pop
out
and
loopne
(bad)
jmp
int
pop
hlt
or
mov
mov
xor
test
mov
cmp
or
cdq
push
hlt
iret
mov
inc
ja
out
mov
mov
add
aam
jp
mov
in
stos
mov
jle
hlt
stos
shl
mov
inc
mov
inc
enter
ins
int
inc
jmp
cld
inc
cli
repz
hlt
dec
aad
push
sub
in
gs
clc
push
(bad)
add
jmp
xor
mov
push
xor
dec
adc
push
aad
xor
int
push
call
or
add
ret
dec
add
xchg
inc
fist
cmp
sub
out
out
fdiv
out
fs
jno
mov
in
jge
jmp
ror
xor
ficomp
fisttp
cmp
aad
gs
scas
push
and
push
inc
push
movs
das
popf
lea
(bad)
stc
jae
or
hlt
retf
mov
bound
jbe
in
push
sub
int3
adc
int3
add
xor
xor
xchg
arpl
fdiv
cmps
add
cmps
in
outs
aaa
jmp
mov
fidiv
fwait
sti
cmp
loop
inc
push
cwde
imul
(bad)
into
pop
popf
xor
pusha
cmps
or
sti
(bad)
stos
jecxz
mul
dec
push
mov
jl
mul
sbb
and
into
aas
or
popa
jecxz
(bad)
and
lds
mov
clc
push
adc
jo
scas
jb
dec
bnd
mov
cli
add
hlt
es
int3
xor
push
cmps
loopne
and
ins
or
inc
retf
aad
arpl
out
addr16
sbb
pop
call
cmp
pop
jbe
xchg
mov
movs
ja
pushf
push
mov
sub
(bad)
fxam
pop
push
inc
int3
xchg
ins
xor
xor
lahf
aas
(bad)
int3
cmp
dec
add
lahf
xchg
outs
shl
mov
data16
xchg
cwde
mov
loop
mov
xchg
xchg
mov
jae
cld
(bad)
inc
hlt
sti
(bad)
test
pop
out
test
ret
lods
loope
stc
jns
xor
scas
cmp
test
retf
lahf
mov
(bad)
xchg
test
mov
pop
pushf
enter
ins
cli
cli
xor
inc
add
repz
out
dec
aas
icebp
jp
cmp
push
add
ds
jno
ss
stos
cmp
xchg
sbb
cmp
mov
push
xor
icebp
ins
push
frstor
mov
and
adc
xchg
std
mov
gs
ss
sbb
and
adc
adc
push
push
fbld
mov
jecxz
repnz
dec
mov
mov
xor
adc
dec
test
fisub
leave
inc
pop
call
loop
inc
and
push
test
and
clc
nop
repnz
pop
repnz
int
les
js
fdiv
jle
or
jge
addr16
mov
jbe
add
dec
in
mov
rcr
jae
(bad)
shr
xchg
loope
leave
pushf
xor
jb
or
sar
xchg
lea
movs
in
fisttp
push
aad
cmps
cmps
retf
popa
inc
adc
in
cld
jns
push
(bad)
adc
mov
pusha
leave
addr16
test
mov
loop
pop
hlt
xor
dec
(bad)
daa
pushf
cmps
xchg
push
cmp
dec
push
sti
dec
mov
outs
lods
mov
dec
and
xor
cmp
mov
mov
je
sahf
adc
cmc
push
jmp
cli
push
or
aam
push
mov
mov
rol
movs
or
jmp
fwait
cmps
pop
(bad)
sbb
mov
jne
(bad)
xor
mov
dec
arpl
retf
push
pop
xlat
enter
xlat
cld
fwait
ins
pop
pusha
loope
outs
add
data16
mov
aaa
addr16
scas
sti
popf
mov
mov
test
mov
mov
ja
outs
lahf
jp
bound
and
retf
shl
mov
shl
sub
sub
xor
mov
add
inc
cli
push
pusha
jmp
add
or
adc
push
mov
add
mov
xchg
adc
arpl
xchg
mov
(bad)
lock
retf
and
sub
pop
iret
adc
mov
outs
and
cmps
lods
jl
loopne
pop
(bad)
jo
daa
pop
lahf
push
xchg
jmp
(bad)
lahf
push
add
cmp
dec
mov
push
mov
sbb
aam
nop
push
mov
neg
xor
pop
sti
jnp
ficomp
and
xor
out
pusha
sub
mov
shl
int
retf
pop
mov
jne
lea
aam
rcr
push
mov
adc
add
gs
mov
ffreep
arpl
sub
test
sbb
mov
inc
je
sbb
or
pop
outs
into
je
add
aam
inc
lock
mov
popa
pop
bound
loop
arpl
cvtps2pi
xchg
dec
ins
push
xchg
push
xor
xchg
cmp
or
movs
retf
add
scas
in
ret
sub
in
out
xor
cmp
(bad)
fucom
jo
dec
xor
xchg
aad
inc
fs
lods
ror
mov
and
ds
xchg
mov
lods
adc
cld
xchg
popa
clc
xor
nop
das
lock
outs
dec
xor
outs
xor
mov
js
je
dec
add
xlat
push
mov
sub
inc
test
inc
stos
dec
pop
mov
inc
retf
or
xchg
lods
dec
cmp
call
jp
call
call
sub
stos
pop
test
pusha
mov
mov
sub
call
sti
jb
(bad)
not
popa
dec
retf
out
or
or
cmp
pusha
bound
jg
push
push
shl
and
jge
ret
jge
pop
ins
ja
xchg
fistp
jg
xor
push
sbb
adc
out
(bad)
adc
pop
mov
sub
iret
pop
fdivr
stc
std
push
xor
ins
mov
loope
hlt
push
sub
pop
mov
jno
retf
push
movs
rcr
fimul
stc
cmp
ret
rol
push
mov
loop
xchg
scas
pop
and
xchg
jp
ret
in
test
neg
fstp
or
adc
cmp
imul
mov
inc
jp
xor
(bad)
test
jge
test
bound
push
sub
stc
and
imul
sbb
outs
and
imul
bound
or
nop
and
fisttp
cwde
daa
mov
in
xor
ss
test
sub
pop
cmp
xlat
cmp
mov
sti
sbb
push
jbe
pop
push
push
imul
(bad)
fiadd
push
aas
pushf
xchg
add
xlat
jecxz
pop
repz
jle
sahf
push
sbb
sbb
lock
mov
in
inc
mov
jmp
adc
stos
in
adc
xor
jno
push
push
int
pop
mov
fcomp
jecxz
sbb
ja
clc
sub
ins
mov
or
test
pop
ins
inc
outs
push
push
mov
daa
mov
mov
sub
clc
push
xor
test
imul
sbb
out
ins
xor
pop
retf
jmp
jnp
push
jo
cmp
mov
xlat
(bad)
sbb
jb
ror
mov
cdq
mov
fs
fimul
push
mul
inc
mov
retf
mov
cmc
shl
mov
stc
xor
inc
jp
jp
ins
pop
mov
fwait
ins
lock
pop
sub
fsubp
cmp
push
push
jecxz
sbb
(bad)
mov
outs
cmp
dec
add
jns
xchg
sub
dec
ja
retf
inc
nop
sahf
mov
pop
es
or
test
sar
sti
sbb
jp
cmp
mov
test
or
enter
mov
mov
adc
in
int
leave
jo
mov
(bad)
fisub
pop
cmc
and
stos
add
jge
outs
or
jns
mov
mov
xor
mov
sar
out
sub
mov
cs
mov
cmc
popf
dec
cmp
dec
or
ss
ja
(bad)
sbb
dec
mov
mov
sbb
jmp
sub
jge
stc
push
aam
sti
int
and
jb
mov
mov
enter
push
stc
xor
mov
jg
push
repz
iret
push
bound
nop
adc
enter
dec
into
and
xchg
or
aam
mov
out
call
jecxz
adc
cmp
push
(bad)
popf
push
dec
aaa
sub
(bad)
dec
movs
pop
mov
jnp
std
or
in
dec
sub
popf
pop
shr
jo
int
jbe
fcomp
dec
in
repnz
ds
int3
inc
ja
dec
and
repz
clc
sbb
adc
(bad)
(bad)
sbb
inc
push
cmp
xchg
pop
fcmovne
dec
jge
add
retf
jns
add
mov
pop
in
cwde
icebp
xor
and
movs
test
mov
call
mov
jp
adc
cs
mov
mov
cmp
enter
pop
outs
into
jl
(bad)
lahf
add
aas
outs
mov
int3
mov
jo
loopne
adc
inc
ins
ja
aas
sbb
hlt
jge
aas
mov
stos
rcr
rol
arpl
jae
cdq
add
mov
jl
pop
pop
add
inc
mov
scas
and
sti
aam
dec
js
nop
mov
aam
add
in
mov
cwde
adc
iret
test
or
(bad)
or
inc
sbb
out
cmp
push
mov
daa
pop
pusha
jge
les
loop
les
lea
jns
out
pop
fdivr
enter
mov
sbb
inc
jg
lods
add
shr
sub
leave
inc
gs
push
adc
scas
mov
cmps
mov
xor
movs
bound
dec
mov
adc
dec
pop
mov
inc
or
mov
in
add
scas
sub
mov
jo
outs
(bad)
sub
xchg
outs
jmp
lods
inc
pop
cmps
fs
sbb
(bad)
cmp
bound
inc
scas
aas
cmp
add
loope
ds
fidiv
cdq
mov
std
inc
adc
fmul
inc
scas
int
xchg
das
or
or
pop
and
(bad)
scas
in
xor
aad
jmp
xor
int3
push
sub
jbe
mov
adc
ss
push
fwait
stos
movs
push
mov
pop
inc
inc
retf
jb
adc
call
xor
loopne
push
xchg
mov
fisttp
and
rcl
fcomi
es
lahf
xor
test
cli
or
pop
in
test
call
adc
lea
popf
or
int
push
xor
rcr
lahf
pop
or
sub
mov
ror
mov
sub
retf
rcr
and
shl
cmp
jecxz
mov
push
or
push
sbb
js
pop
ficomp
aad
and
mov
jg
popf
cwde
adc
jnp
mov
cmp
cdq
cmp
stc
xor
sub
pushf
test
jl
xor
mov
sbb
dec
push
dec
(bad)
stos
push
sub
pop
inc
push
lea
daa
add
mov
add
(bad)
daa
pop
push
imul
pop
jne
push
mov
lea
xlat
pop
jmp
shl
cld
(bad)
mov
(bad)
fsub
lods
fsub
or
mov
jg
enter
dec
cwde
sahf
dec
test
mov
or
popa
(bad)
cmp
sbb
xchg
jmp
mov
in
(bad)
push
sub
sbb
push
jnp
and
mov
push
aad
into
or
and
aam
or
adc
lods
push
test
and
or
mov
hlt
mov
gs
jge
and
mov
sub
mov
jmp
push
mov
jmp
sti
repnz
ins
dec
stos
aas
jle
xchg
mov
les
mov
addr16
fnstsw
rcr
inc
pop
sub
and
add
clc
mov
stos
pop
loope
scas
inc
push
lods
dec
adc
inc
outs
jle
popf
add
jg
and
adc
jl
pop
adc
adc
and
out
push
push
jge
or
inc
sbb
loop
mov
jno
or
jne
push
jno
cwde
pop
ss
(bad)
mov
pusha
mov
fcomp
sbb
push
pop
nop
div
dec
push
(bad)
int
mov
mov
into
mov
push
xchg
inc
mov
arpl
hlt
call
test
inc
jmp
mov
adc
ja
and
ret
push
rol
jmp
xchg
adc
aam
in
stos
sbb
mov
inc
push
mov
dec
sub
sbb
lds
cmp
mov
loope
or
das
enter
paddsb
imul
pop
(bad)
rol
mov
ficomp
mov
or
cmc
ins
jmp
stc
loopne
jg
cmp
or
pop
out
mov
jmp
push
and
sub
sub
pop
mov
pop
imul
mov
jne
jmp
loop
aam
inc
(bad)
in
jmp
sub
mov
(bad)
jmp
jg
sbb
aaa
inc
cmp
and
or
mov
or
aaa
in
shl
sahf
dec
or
mov
inc
mov
dec
outs
add
add
adc
fisttp
ss
cli
(bad)
stos
and
xchg
mov
bound
call
les
les
sbb
and
xchg
xor
lea
mov
call
pop
dec
test
mov
xor
ret
(bad)
fldenv
or
in
jns
dec
jbe
mov
push
push
or
xchg
int3
addr16
(bad)
into
out
pop
stos
rcr
sub
inc
inc
outs
leave
adc
iret
and
icebp
sbb
mov
je
or
ds
pusha
(bad)
sub
mov
inc
cdq
jl
sub
mov
sub
and
mov
jae
or
lock
idiv
adc
in
mov
dec
jb
adc
popf
pop
adc
xchg
sub
call
cwde
arpl
lahf
and
inc
mov
jb
dec
sub
scas
jnp
xor
and
lods
jnp
clc
gs
jmp
push
ss
shl
jmp
mov
leave
test
es
xor
es
aaa
out
adc
sbb
jecxz
adc
ins
ret
(bad)
jle
jge
sahf
sbb
ret
push
add
jb
das
dec
repnz
gs
shl
sub
add
xor
and
dec
add
out
xor
inc
call
pop
and
movs
dec
int3
xor
and
aas
inc
or
adc
loop
in
push
xor
pop
sub
mov
jo
cmp
push
mov
pop
sar
call
loopne
ror
mov
pop
ret
dec
jno
xchg
(bad)
jb
in
sbb
sbb
jle
cwde
cli
shl
pop
mov
test
xor
ins
popa
inc
adc
push
arpl
xchg
mov
or
adc
xchg
sbb
adc
ficom
out
xchg
fiadd
(bad)
vpmovsxbw
mov
push
jecxz
es
mov
push
adc
jle
jno
fld
mov
cmp
push
mov
adc
mov
les
xchg
sub
cld
xchg
popa
push
les
std
mov
sbb
add
and
adc
sbb
inc
or
in
and
cmp
scas
sbb
jg
and
mov
push
shl
neg
mov
jle
push
xor
jbe
xchg
mov
not
jg
cmp
xor
mov
(bad)
pop
add
les
mov
mov
test
adc
shl
rcr
(bad)
add
fs
jns
pop
push
out
pop
mov
xchg
gs
or
or
dec
lods
and
push
test
faddp
cmp
xchg
iret
fwait
call
xchg
mov
mov
inc
mov
inc
scas
hlt
inc
mov
(bad)
fstp
push
sub
inc
add
xchg
cmp
scas
aas
inc
or
aas
add
aam
pop
xlat
mov
and
out
loope
js
jg
add
xor
push
jb
or
mov
mov
iret
movs
xor
jl
pop
pop
fcomp
inc
pop
movs
and
sbb
cli
out
xor
sbb
adc
call
dec
mov
cmp
lahf
and
jecxz
cmp
jno
adc
add
inc
sbb
int3
xor
test
pop
(bad)
int
jmp
add
pop
ins
push
stos
jl
(bad)
stc
and
into
sub
add
xchg
push
inc
std
dec
sub
js
mov
jecxz
push
sbb
pop
sub
push
cmp
loopne
je
mov
mov
push
mov
xlat
fcomi
iret
nop
cmps
leave
dec
aad
jae
add
stos
cmp
xor
lock
sub
imul
push
push
mov
push
mov
and
int
cmp
ss
mov
xlat
sbb
in
dec
out
mov
pop
xchg
pop
mov
inc
mov
fs
adc
(bad)
cdq
inc
test
cmp
mov
sub
retf
xor
in
fidivr
jo
mov
and
lods
clc
cwde
push
es
add
inc
scas
out
inc
dec
dec
or
(bad)
in
and
jnp
xchg
sbb
sbb
xchg
pop
xchg
hlt
fisub
test
stos
out
lahf
add
dec
out
mov
pop
pushf
mov
add
rcl
mov
aaa
push
lahf
psubd
cmp
and
jg
stos
in
out
inc
sub
shl
jmp
mov
mov
stos
lods
mov
mov
sti
stc
stc
push
(bad)
inc
jo
jo
cmps
sub
and
(bad)
out
jmp
mov
out
xchg
jecxz
sub
and
push
jge
lock
xor
ret
movs
jne
out
add
inc
test
mov
outs
fwait
daa
pop
mov
add
pop
pop
adc
pop
std
jbe
sub
xor
lods
aad
xchg
pushf
and
js
sub
mov
sub
ror
ret
mov
out
cmps
xor
add
icebp
dec
nop
sub
add
mov
mov
add
jno
daa
scas
pop
dec
fadd
out
inc
rol
mov
sbb
cwde
jbe
sub
add
or
ja
and
loop
push
jb
outs
addr16
cmp
mov
out
fs
fisubr
sbb
dec
cmp
lock
(bad)
push
mov
jmp
sub
jno
jp
pushf
(bad)
inc
(bad)
les
jecxz
pop
dec
adc
ret
mov
cmp
fdiv
rcl
scas
cwde
adc
jp
fadd
or
jmp
ja
dec
xor
int3
(bad)
dec
clc
mov
xlat
jmp
in
mov
rcl
or
xchg
lods
in
add
daa
in
push
adc
sar
cmc
loope
movs
idiv
int
xchg
push
mov
add
add
fmul
xlat
mov
sbb
int3
icebp
add
mul
(bad)
int3
and
in
pop
fwait
jb
dec
jne
mov
pop
jmp
jb
lock
mov
retf
dec
in
fild
inc
add
adc
in
rcl
pop
xor
enter
xchg
mov
int3
push
add
mov
inc
inc
cmp
call
push
mov
jnp
aas
lds
inc
jno
lds
cmp
(bad)
(bad)
and
cmp
imul
les
bswap
ins
enter
xlat
adc
imul
retf
push
ror
and
(bad)
or
fwait
out
mov
jge
ror
fstp
js
xchg
xchg
sbb
xchg
inc
jmp
xchg
imul
rcr
adc
test
push
cmp
adc
(bad)
arpl
dec
movs
xchg
rcr
cmp
stos
mov
dec
outs
(bad)
aas
sub
adc
mov
outs
jle
mov
sti
pop
mov
nop
sub
push
aas
push
and
cmps
aam
and
imul
mov
into
jne
mov
sbb
lock
aaa
cli
(bad)
jne
cli
jmp
addr16
fs
sbb
into
xlat
aas
push
push
adc
jae
inc
push
les
or
cld
leave
mov
cmp
xchg
mov
je
push
arpl
dec
sbb
xchg
dec
inc
mov
push
sahf
loopne
hlt
inc
sbb
inc
in
ret
mov
ret
je
xor
mov
push
loop
out
jg
mov
add
push
call
mov
in
fs
retf
icebp
(bad)
in
jg
xor
push
sub
add
jmp
push
push
aas
sub
jl
jmp
pop
pop
(bad)
mov
rcl
inc
cdq
icebp
sub
xor
or
pop
int3
mov
mov
not
add
repnz
pusha
mov
in
jae
adc
leave
xchg
in
pop
idiv
popf
push
mov
das
call
loop
cmp
iret
push
rol
or
inc
or
sub
arpl
push
dec
adc
ret
lods
bound
pop
sti
movs
(bad)
repz
test
enter
sbb
jmp
test
in
ret
call
hlt
xchg
cmp
push
xchg
fiadd
mov
xchg
jae
sbb
mov
mov
in
ret
iret
dec
xchg
ja
xor
scas
leave
and
jbe
mul
iret
call
test
cmp
cmp
fwait
call
sbb
jnp
mov
out
xor
adc
scas
test
pop
mov
and
jge
add
push
adc
xchg
mov
ret
jmp
out
adc
fnstenv
daa
fidiv
into
shr
mov
cmp
xchg
mov
xor
mov
(bad)
call
sbb
cld
mov
fnsave
push
add
and
push
sub
jle
rcr
(bad)
lods
test
mov
int3
xchg
loopne
ret
daa
dec
arpl
fld
loop
xor
cs
jg
sub
cld
sub
xor
fs
or
pop
cmp
stos
cmp
retf
push
fbld
xchg
(bad)
outs
sub
inc
mov
stc
fsub
mov
and
push
push
mov
call
cli
sbb
lds
rol
pushf
cmp
sbb
mov
cwde
test
int3
popa
jb
push
retf
in
jnp
pop
stc
(bad)
lods
dec
hlt
jge
xchg
or
hlt
cmp
psllw
add
pop
jge
(bad)
popa
jecxz
popf
lods
mov
daa
adc
sbb
(bad)
lea
push
inc
frstor
cld
aad
adc
mov
jge
js
cmps
xchg
push
fimul
xchg
sti
out
mov
scas
jg
push
add
lds
dec
sbb
dec
cld
push
dec
pop
xor
mov
pop
retf
pop
push
mov
cmp
inc
popa
ror
aam
add
imul
pop
das
fimul
mov
shr
push
pop
jo
fldenv
les
mov
stos
mov
xor
pop
and
dec
mov
pop
or
sbb
mov
cmc
dec
ja
out
mov
fwait
mov
add
xor
adc
push
cmc
ret
cmps
lahf
dec
sbb
retfw
add
ja
push
add
jg
push
cmp
adc
je
sub
dec
xor
fdivp
dec
xchg
push
das
jge
out
jp
xchg
lods
jnp
jge
or
mov
and
sub
retf
xor
mov
fcom
dec
call
mov
mov
stc
adc
leave
ret
fcomp
retf
test
stc
loope
in
jle
and
sub
aam
lahf
mov
inc
add
push
maskmovq
neg
daa
scas
test
adc
and
push
lds
icebp
and
mov
pop
and
fdivr
loope
jl
jle
inc
ds
dec
mov
push
cs
sub
ss
jle
hlt
ss
out
ficomp
push
pop
pop
push
fsub
push
call
adc
test
test
enter
mov
in
or
jo
sbb
mov
mov
xchg
or
out
daa
(bad)
mov
xor
or
xchg
into
in
xor
jmp
lahf
mov
loop
lea
push
push
and
retf
mov
cmc
rol
aas
dec
fidivr
sbb
into
mov
inc
imul
push
out
adc
fs
xchg
ret
jae
imul
or
div
sub
outs
les
jbe
mov
mov
sub
ja
shl
sbb
cmps
fidivr
call
gs
or
sub
int3
mov
add
mov
and
push
aaa
shl
jecxz
and
push
cdq
xchg
pop
dec
pusha
xchg
xor
fcomp
sub
outs
mov
mov
sub
pop
mov
or
jl
or
stc
cmps
mov
jo
je
jmp
mul
nop
push
movs
retf
mov
xchg
out
and
(bad)
loope
sti
jae
pop
xor
adc
rcl
cmp
(bad)
retf
add
daa
dec
dec
sub
loop
or
xchg
jae
add
inc
std
outs
mov
sbb
ja
(bad)
inc
clc
cmp
jno
add
out
ret
mov
push
loop
pop
jo
xor
lahf
inc
jle
add
jl
cmp
in
shl
loope
mov
test
fwait
xor
mov
and
jo
movs
xchg
ins
add
jnp
or
mov
sbb
test
mov
pushf
mov
ret
jecxz
dec
aaa
cmp
xor
fimul
in
in
outs
arpl
adc
je
test
or
adc
adc
cld
shl
push
adc
movs
jnp
fneni(8087
and
pop
shl
inc
inc
push
jge
adc
and
cmp
ror
stos
adc
pop
aad
and
pop
aas
or
pushf
inc
retf
mov
stos
shl
jp
jmp
lods
sahf
xor
mov
push
loopne
jecxz
outs
js
sti
mov
xchg
(bad)
push
dec
or
adc
sub
lods
push
mov
loope
cmp
mov
sub
xchg
xchg
aas
dec
jb
rcl
retf
call
push
sub
ror
mov
sbb
call
std
push
arpl
mov
call
ja
push
mov
(bad)
out
retf
fbstp
cmp
clc
cmp
stos
in
aaa
push
lds
cld
cmp
and
arpl
mov
mov
jp
xor
iret
in
mov
mov
fld
jno
add
adc
(bad)
sub
mov
imul
loope
popa
shl
add
push
mov
fiadd
in
cld
iret
push
fucomip
xor
cmp
(bad)
sbb
mov
push
push
popf
push
inc
mov
pop
adc
sbb
fsub
into
out
mov
or
loop
fiadd
jb
jno
jle
mov
xor
aad
push
mov
push
test
out
xchg
imul
sbb
dec
aaa
fistp
scas
daa
push
retf
fs
mov
sbb
imul
inc
pop
mov
aam
jae
sub
std
adc
imul
imul
cmovnp
ret
add
dec
push
lahf
js
sbb
dec
dec
push
cmp
or
(bad)
xchg
bound
add
fnstenv
mov
adc
mov
jge
rcl
xor
xchg
pop
xchg
sbb
sahf
xchg
pop
(bad)
mov
mov
mov
push
arpl
lock
outs
out
(bad)
push
xlat
add
cwde
dec
call
hlt
and
push
test
add
xchg
mov
pop
sbb
mov
ins
hlt
pop
jg
inc
and
imul
mov
sub
mov
pop
fwait
call
adc
push
xchg
inc
mov
jg
pop
div
fimul
push
mov
adc
ss
retf
cmp
sub
psrad
loopne
mov
dec
clc
mov
jp
bnd
pop
lea
xchg
jae
cs
test
push
test
imul
pop
cmps
push
dec
jp
xchg
std
cs
(bad)
pushf
push
mov
stc
sub
dec
jmp
mov
mov
jge
lea
add
sub
popa
xchg
pop
scas
or
jmp
les
sahf
mov
sbb
push
push
stc
pushf
ret
aas
mov
(bad)
push
arpl
in
aam
test
test
mov
retf
mov
inc
(bad)
push
xor
cmp
lods
pop
mov
pop
(bad)
push
mov
adc
or
mov
ds
push
enter
popf
hlt
jne
dec
mov
cmp
adc
outs
push
fmul
cmp
jge
xchg
fwait
std
rcr
cmp
cmp
xor
inc
dec
sti
ret
dec
jns
cwde
call
cmc
ins
mov
xor
call
stos
std
jle
mov
mov
rcr
gs
std
or
loope
mov
out
call
cdq
repnz
and
dec
nop
imul
dec
jle
mov
mov
push
out
sbb
cmp
mov
mov
adc
add
out
fwait
das
ins
loop
push
add
xchg
xor
jb
imul
pop
pop
dec
mov
clc
mov
adc
push
mov
out
scas
fwait
mov
mov
xor
and
mov
cs
push
and
es
push
mov
lods
nop
in
mov
adc
popf
iret
sbb
or
mov
inc
mov
xor
sti
sbb
cmp
repz
push
adc
cmp
daa
loop
ja
xchg
push
je
into
dec
cmp
inc
xor
(bad)
jo
popf
hlt
ret
sbb
in
loopne
cmp
mov
(bad)
fldenv
shl
and
pop
mul
mov
(bad)
out
retf
mov
xor
inc
mov
jecxz
inc
test
daa
stos
mov
or
out
mov
loope
sbb
push
aas
(bad)
icebp
mov
push
pop
jb
add
movs
pop
mov
cmc
imul
daa
stos
out
leave
out
cmp
xchg
lds
aaa
cdq
sbb
cmp
test
int3
aad
clc
mov
or
cmp
cmp
xor
jne
icebp
out
xor
aad
rcr
repz
jne
stos
daa
dec
or
jae
xchg
inc
pop
mov
lock
xchg
jns
mov
jno
pop
sbb
frstor
in
or
dec
lds
pop
mov
pusha
mov
pop
retf
push
mov
loopne
movs
jo
jb
scas
pop
repz
popa
out
rol
fs
xor
or
adc
adc
cmp
fistp
jo
xorps
fiadd
xor
jo
ss
pop
(bad)
(bad)
push
push
ins
pop
mov
jne
push
add
ror
sub
es
stos
das
cmp
inc
je
(bad)
call
inc
dec
cs
push
fsubr
inc
aas
rep
sub
popf
sbb
xchg
inc
stc
aas
push
lods
(bad)
mov
test
jmp
or
je
pop
sbb
xchg
scas
in
bndstx
push
aaa
imul
ds
stc
jl
mov
icebp
and
sub
cmp
dec
adc
pop
jl
retf
es
fld
icebp
in
dec
and
and
xlat
out
or
test
push
sbb
arpl
pop
mov
jmp
daa
mul
imul
inc
lahf
jns
addr16
sbb
paddsb
mov
mov
cdq
mov
js
fs
lahf
rol
cmps
hlt
push
sti
daa
(bad)
sub
icebp
inc
and
push
cld
stc
push
mov
test
sbb
push
xchg
shl
or
and
mov
mov
xchg
(bad)
shl
sub
daa
jecxz
xor
inc
and
pushf
cli
mov
dec
int3
ret
dec
sub
rol
ret
jle
ins
sbb
mov
mov
imul
add
jnp
arpl
inc
pop
popf
mov
xchg
(bad)
aaa
retf
xor
push
ret
sar
mov
adc
xlat
in
stos
dec
adc
jp
jno
push
sahf
fwait
push
cld
and
dec
dec
jns
mov
into
call
mov
jle
ds
icebp
or
push
pop
or
inc
imul
rcr
mov
mov
and
scas
mov
cmp
loop
ss
xchg
std
retf
out
sbb
out
mov
sub
js
adc
mov
fwait
(bad)
out
loope
sbb
cwde
pop
mov
ret
pop
sti
mov
cmp
bound
hlt
xchg
push
adc
shl
idiv
cmp
add
sbb
popa
xchg
mov
push
pop
scas
pushf
and
or
mov
hlt
(bad)
(bad)
pop
out
pop
xchg
retf
mov
jge
fidiv
adc
and
fs
pop
jno
mov
test
push
call
in
jmp
shl
push
inc
mov
addr16
stc
xchg
sub
mov
sub
popf
jge
in
dec
into
loopne
dec
shl
sbb
inc
sub
fild
pop
mov
or
cmp
hlt
add
aas
ret
popa
popf
push
out
aam
shr
icebp
mov
popf
fsub
test
lahf
cmp
xchg
mov
retf
add
jno
cmp
and
repnz
add
jb
je
les
nop
xor
adc
or
cmps
sbb
gs
(bad)
sbb
adc
mov
scas
pop
pop
mov
clc
dec
or
loopne
jns
iret
cmps
icebp
dec
cs
mov
and
sub
aam
(bad)
cmps
scas
xchg
bnd
push
ret
sub
xor
sbb
hlt
dec
inc
mov
enter
idiv
add
xchg
or
(bad)
pop
je
and
add
out
adc
dec
cmc
dec
sbb
je
faddp
out
inc
push
pop
mov
in
sar
icebp
cmps
mov
xor
jp
jecxz
dec
and
adc
adc
mov
dec
push
ret
(bad)
inc
jnp
out
push
xchg
adc
dec
pop
or
sub
(bad)
and
cmp
inc
add
push
xor
je
jge
xchg
das
and
sti
push
or
and
dec
cmp
xor
mov
sahf
and
loope
cmps
and
int3
sbb
push
adc
jecxz
push
into
pop
xchg
cmps
xchg
into
mov
(bad)
pop
pop
pop
xchg
imul
xlat
cmp
and
mov
std
mov
mov
(bad)
retf
mov
fwait
lods
hlt
inc
mov
rol
and
jo
jp
ror
pushf
mov
push
popf
mov
scas
or
jbe
mov
clc
int3
fdiv
std
popf
(bad)
in
ret
(bad)
ins
xor
dec
jle
inc
fs
iret
adc
aad
xchg
pop
loop
mov
cdq
pop
retf
add
cmp
(bad)
in
in
popf
(bad)
retf
cmp
mov
xor
in
xor
sub
jg
and
mov
pop
sub
lds
mov
scas
mov
sub
fiadd
(bad)
xor
jo
or
mov
icebp
js
sub
mov
and
jecxz
or
les
lahf
sahf
iret
outs
ror
cmps
jne
inc
(bad)
fisubr
scas
pop
mov
js
cmp
lock
mov
imul
hlt
jmp
sub
mov
xchg
inc
es
int3
dec
mov
dec
push
pop
mov
(bad)
std
daa
sub
jbe
inc
ss
test
iret
pushf
bound
or
fstp
nop
jno
push
pop
pop
push
pop
fprem1
pop
add
and
add
(bad)
sbb
pop
pop
add
call
repnz
mov
dec
jmp
retf
call
or
mov
ins
mov
or
movs
nop
mov
jg
jp
test
inc
lds
sub
and
ins
push
mov
and
rcr
or
cmc
sti
fcomp
in
mov
in
shl
pop
(bad)
(bad)
shl
imul
add
sub
and
dec
cdq
push
inc
cmps
sbb
clc
and
sub
jno
repnz
sbb
sbb
xchg
cwde
adc
in
movs
mov
sbb
scas
pushf
fcom
addr16
push
ins
cmp
jae
call
sub
or
add
jg
shr
ins
jb
loop
mov
mov
nop
dec
push
inc
popf
push
(bad)
hlt
or
push
fcmovu
adc
add
lods
jge
neg
dec
and
cwde
fist
enter
pop
jne
test
xor
adc
sbb
push
jle
mov
push
sub
adc
add
aaa
gs
lods
and
cmp
or
retf
sub
xor
inc
dec
retf
xchg
enter
loop
mov
inc
adc
add
xchg
movs
mov
and
mov
repnz
xor
sub
and
daa
in
lock
pop
(bad)
mov
aam
dec
pop
cli
out
inc
test
cmp
daa
call
mov
and
loope
pop
jmp
push
dec
mov
xchg
jmp
mov
ficomp
pop
xchg
ja
jge
cmp
jo
jnp
push
in
imul
pusha
aaa
inc
fbld
sub
add
iret
arpl
dec
inc
jmp
xor
and
es
aas
add
into
jns
jecxz
or
ret
push
aad
idiv
xchg
retf
sbb
(bad)
movs
pop
bound
div
int
test
mov
mov
or
(bad)
adc
push
(bad)
daa
adc
dec
dec
cwde
xor
aam
mov
mov
addr16
lahf
int
cmp
dec
xbegin
pop
adc
xor
inc
cmps
and
jns
add
inc
sbb
sbb
(bad)
adc
push
lock
js
cwde
cmp
je
jmp
outs
xor
loope
aaa
xor
xchg
and
inc
es
mov
loopne
add
xlat
das
mov
imul
and
outs
adc
xchg
call
fwait
cmp
and
xchg
cdq
dec
jno
dec
dec
(bad)
jae
movs
loopne
cmp
les
xchg
xchg
fst
push
xor
mov
jnp
pop
adc
not
add
pushf
xor
(bad)
stc
sti
sub
ret
lods
pop
adc
xor
outs
xlat
ds
je
out
jb
jge
dec
in
cs
dec
loope
xor
clc
mov
(bad)
mov
outs
push
sub
xchg
lods
jmp
push
jmp
fwait
sub
adc
cli
pop
sub
xlat
mov
adc
neg
jl
rol
jg
or
fsubp
xchg
sub
lds
aaa
loope
xchg
add
or
test
and
mov
inc
fcmovnbe
lods
inc
repnz
cmp
mov
jae
in
cwde
dec
retf
push
xlat
fadd
xchg
push
pop
shl
in
dec
imul
es
int
push
push
pop
push
dec
jge
pushf
dec
retf
sbb
jecxz
lock
out
loop
lahf
or
dec
mov
stc
cmps
aad
sahf
push
pop
add
jge
push
es
pop
pusha
daa
and
(bad)
imul
ja
into
pop
adc
lahf
jmp
mov
sbb
fwait
imul
mov
stos
push
mov
xchg
cmp
test
pop
mov
scas
ret
bound
and
je
mov
or
nop
adc
sbb
je
int
pushf
mov
push
arpl
mov
push
push
mov
jecxz
mov
add
xlat
jnp
inc
pusha
mov
push
mov
scas
jl
cs
cld
add
jmp
mov
sbb
cmp
sbb
xchg
push
imul
xchg
imul
dec
addr16
or
rcr
cmp
or
ror
repnz
xor
pop
mov
rcr
dec
fs
popf
jmp
(bad)
fcomp
xor
and
mov
push
and
icebp
xchg
ror
mov
mov
jnp
mov
mov
fiadd
add
pusha
aas
cld
aaa
std
test
xchg
mov
in
add
and
test
inc
mov
adc
les
into
sbb
mov
push
adc
rcr
inc
push
aas
and
dec
sti
popf
repz
jno
inc
stos
push
mov
jb
fs
xor
lock
add
ds
and
sbb
popa
imul
adc
stc
sahf
cmp
mov
out
in
sbb
pop
movhps
jp
push
sahf
iret
call
inc
pop
ror
sub
ffreep
inc
xchg
and
jno
(bad)
aas
jmp
add
pop
push
cmp
sbb
sbb
mov
in
stos
in
clc
mov
xor
jmp
mov
int3
out
mov
shr
mov
sub
cmp
mov
jmp
jb
stos
ja
aam
test
mov
pop
cmp
call
std
mov
leave
movs
fiadd
arpl
sti
retf
(bad)
loopne
mov
sub
mov
sbb
nop
add
add
dec
(bad)
(bad)
outs
or
jmp
cmp
ror
cmps
cmp
xor
cmps
ja
jb
cmc
shr
or
(bad)
add
ds
jns
cmp
icebp
add
mov
sbb
sub
sbb
inc
add
pop
xchg
test
paddsb
xchg
out
sub
pop
les
push
mov
je
mov
push
mov
xchg
pop
cmps
mov
cmp
aad
clc
xor
mov
ret
das
ins
ficomp
mov
psubq
lds
data16
push
jo
cmps
or
sbb
cli
dec
pop
dec
stc
adc
xchg
push
xor
leave
cmps
lods
mov
push
pop
add
loope
add
leave
fiadd
les
push
xchg
ret
les
sub
scas
push
adc
mov
adc
sbb
pop
lahf
adc
int3
fmulp
push
imul
out
loop
loope
cs
xchg
push
add
fild
fcomi
sub
je
add
push
test
in
cwde
sbb
daa
jnp
mov
sub
inc
retf
inc
in
shl
cmp
cmp
jae
mov
sub
add
in
and
xor
mov
clc
sbb
add
cmc
popf
add
push
push
xchg
xor
test
pop
jle
push
lods
fldenv
dec
movs
add
in
icebp
add
jno
xor
mov
aaa
or
dec
push
cwde
inc
or
xor
pop
or
aaa
addr16
push
das
xchg
clc
neg
into
push
mov
inc
stos
mov
mov
inc
cmp
repz
ret
xchg
push
lahf
cmp
cwde
pop
pop
add
xor
int3
adc
(bad)
data16
adc
shr
pop
les
inc
sub
adc
dec
in
pop
mov
xor
neg
mov
aaa
cmps
loopne
cmp
cmp
jne
dec
ret
sti
push
sub
and
xchg
push
retf
scas
loop
xlat
rol
retf
xor
jl
mov
cwde
and
push
add
in
jmp
pushf
mov
or
jp
xor
mov
mov
jl
(bad)
push
dec
dec
jl
dec
pop
into
retf
and
jle
fimul
cmp
inc
dec
retf
mov
imul
out
and
popa
push
add
dec
repz
xchg
xchg
test
arpl
cmp
jbe
mov
shl
jnp
inc
lods
clts
mov
test
sub
ins
(bad)
test
pop
sub
les
jecxz
mov
js
push
int3
adc
or
adc
(bad)
push
outs
mov
dec
das
cld
jo
aad
ins
cs
mov
sti
sub
push
(bad)
and
and
mov
jmp
call
loope
mov
or
cs
mov
lods
xchg
jae
imul
cmp
dec
ret
popa
or
jle
cmps
mov
sbb
dec
cli
mov
shl
stos
and
adc
mov
push
and
sbb
clc
lahf
dec
(bad)
fld
mov
pop
in
in
lea
sub
inc
imul
scas
cdq
sbb
push
call
sar
mov
outs
mov
and
test
adc
pop
gs
mov
lods
sbb
inc
push
mov
mov
pop
test
cwde
pop
ret
or
out
mov
inc
test
jl
aas
sub
shl
aad
pop
or
sub
jo
add
mov
dec
xor
out
das
pop
ins
xor
mov
add
push
fwait
loop
(bad)
(bad)
leave
jno
sbb
jne
dec
sahf
rol
mov
imul
ins
(bad)
loopne
adc
xchg
fs
in
xchg
jge
outs
stc
inc
sahf
pop
(bad)
in
cmp
or
inc
fadd
in
out
scas
jnp
retf
pusha
das
call
in
fs
push
aad
sub
mov
cdq
fmul
or
sub
add
xchg
cld
cmp
sbb
outs
dec
or
lahf
sahf
stc
pop
out
mov
push
jno
cmp
or
xor
in
sub
push
scas
ret
(bad)
scas
(bad)
add
lods
sub
ss
sahf
repnz
out
inc
inc
cmp
sub
dec
lods
test
test
push
cmp
and
aaa
mov
cli
adc
or
push
push
cmp
push
mov
aad
bound
adc
rcr
add
or
jo
cmp
adc
movs
jo
or
pop
mov
mov
loope
hlt
arpl
pop
or
jg
mov
and
mov
add
cmps
or
lods
sub
fld
mov
daa
sub
(bad)
or
mov
cld
add
loope
ror
scas
popf
pop
sbb
jne
jl
mov
cdq
call
hlt
cwde
loop
dec
ret
sbb
fnstenv
out
xor
sahf
outs
and
aad
mov
pop
inc
gs
or
ja
inc
xchg
test
xchg
push
arpl
cmp
add
in
fnstenv
out
xor
xchg
push
add
loop
mov
mov
repnz
mov
adc
loop
inc
std
cli
push
in
ins
or
(bad)
int3
outs
mov
adc
mov
jae
xchg
sub
lea
shl
aam
repz
fdivr
lea
ss
and
retf
pop
rol
sbb
add
mov
mov
mov
mov
ins
das
in
pop
xchg
xor
das
pop
xor
rol
out
(bad)
ins
aam
sahf
sub
and
xchg
mov
fisubr
int
mov
push
arpl
mov
bound
call
popf
or
in
xor
and
xor
sub
mov
xor
ficom
rol
xchg
jecxz
out
ss
aam
stos
in
adc
and
fs
adc
xlat
mov
mov
out
cli
sub
arpl
add
(bad)
stc
mov
push
int
push
(bad)
mov
push
and
stc
es
sar
in
xchg
cmp
dec
lahf
pop
pop
aam
fimul
inc
jp
mov
push
xchg
enter
sub
mov
addr16
push
aas
movs
inc
iret
dec
cmp
in
cmp
iret
or
into
fld
push
sub
mov
lds
dec
pusha
or
stc
out
inc
cmp
cmp
and
xor
shl
sub
test
jmp
mov
cdq
rcr
into
xchg
leave
xchg
xor
div
jge
add
sub
scas
(bad)
or
enter
mov
(bad)
pop
pop
cmp
xor
xchg
inc
cmp
movs
call
xchg
xchg
mov
sub
fstp
add
in
mov
out
or
mov
dec
and
jl
ds
ss
sbb
outs
fcmovbe
add
pop
jae
bound
mov
(bad)
cld
shl
fs
repnz
int
ds
jne
daa
loopne
pop
js
mov
aaa
jb
add
pop
jne
add
jns
retf
dec
add
inc
cli
(bad)
sti
mov
sti
cmp
or
mov
pushf
pop
xchg
dec
fnstenv
fnstcw
fild
pusha
jae
push
in
retf
aam
les
leave
rcr
out
jge
lods
inc
push
jge
sbb
jl
shl
jo
push
cmps
cld
xor
retf
push
mov
in
dec
mov
jle
rcl
dec
lahf
xor
aas
xor
adc
mov
add
adc
jno
movs
shl
lahf
xchg
sub
adc
lods
push
xchg
stc
lods
nop
mov
xchg
and
xchg
retf
mov
adc
jp
sbb
rcl
ficomp
pop
popa
add
mov
mov
inc
mov
std
std
add
arpl
cmp
and
push
repnz
loop
push
sbb
adc
mov
add
cmp
(bad)
mov
xchg
mov
adc
pop
pop
ins
pop
retf
sub
std
jmp
frstor
jl
dec
or
pop
pop
cs
outs
xlat
cwde
or
push
xlat
cdq
icebp
mov
(bad)
xchg
mov
xchg
inc
add
cmp
xor
adc
mov
mov
call
and
push
loopne
or
jnp
pushf
and
fs
mov
es
les
(bad)
sub
dec
jp
lods
out
pop
mov
jns
dec
mov
dec
dec
jo
into
jle
and
(bad)
call
xchg
icebp
retf
jp
pop
and
test
in
jno
call
jnp
cmp
pusha
xchg
in
in
inc
loop
cmc
aam
inc
push
addr16
stos
shl
cmp
ss
lods
cs
sub
xor
mov
lods
jecxz
sub
push
cmp
and
stc
(bad)
mov
inc
call
inc
aaa
add
push
xor
pushw
and
lahf
and
rol
ss
aad
mov
mov
and
aam
inc
lods
std
(bad)
retf
xchg
mov
pop
hlt
repnz
dec
sbb
push
push
mov
cmp
jl
into
shr
mov
mov
push
test
mov
or
xlat
ss
pop
inc
pop
popf
push
stos
out
pop
sbb
ror
xor
popw
ret
mov
jmp
sub
scas
jo
push
bound
pop
ins
push
or
pop
sbb
imul
lds
ret
imul
out
dec
(bad)
and
rol
mov
lods
jnp
jge
mov
sbb
out
sub
lahf
jmp
xor
je
fdiv
mov
fs
les
adc
adc
pop
sbb
mov
std
add
popa
loop
ja
mov
xor
mov
and
stos
push
add
movs
and
or
lods
stc
ja
hlt
xor
nop
out
mov
ins
nop
call
test
dec
movs
push
call
or
sub
rcr
and
mov
and
mov
out
cmps
fldl2t
mov
(bad)
shl
fs
pop
cli
movs
test
dec
push
call
cmp
in
mov
jp
ins
out
dec
mov
push
mov
stc
sbb
jb
or
mov
push
mov
push
pop
addr16
cld
sub
add
xchg
inc
jmp
and
jne
mul
add
cmc
int
repnz
push
pop
stos
jle
sti
push
stc
iret
push
cmp
cmp
inc
and
out
sub
push
and
outs
adc
pop
iret
bound
xor
(bad)
lods
mov
fidiv
mov
fstp
xchg
stos
out
int
cmp
outs
outs
push
cmps
sub
and
pop
imul
out
aaa
mul
mov
sar
cmps
xchg
mov
cmp
inc
ror
lods
std
push
add
push
pop
xchg
repz
test
mov
(bad)
aaa
mov
sub
pushf
repnz
bound
pop
(bad)
fisubr
push
lock
js
mov
daa
test
jecxz
out
add
pusha
scas
sub
sub
daa
gs
repz
ror
ret
call
pop
fdivr
add
push
fsqrt
gs
or
outs
(bad)
cld
in
xchg
jne
call
push
jnp
stc
pop
or
inc
mov
mov
jle
and
sub
ins
test
out
xchg
xchg
(bad)
adc
jmp
xchg
aaa
mov
xor
sahf
xchg
mov
sbb
ins
pop
or
cmps
xor
div
mov
push
cmp
fs
ins
call
cdq
jo
xor
pop
xchg
les
gs
pop
xchg
mov
push
jp
pop
loopne
mov
mov
push
outs
popf
push
movs
shr
sub
fsub
sbb
(bad)
cmp
push
rep
add
les
jl
push
pop
jae
out
sar
dec
or
int3
fsubrp
das
adc
pop
mov
imul
mov
mov
cmp
ror
jbe
mov
mov
cmp
cld
retf
mov
inc
jb
fcomp
std
int
aam
fisub
and
xor
mov
adc
dec
fnstenv
push
call
mov
js
test
sbb
push
int3
out
dec
mov
loope
sub
ror
jo
loopne
adc
(bad)
mul
es
inc
out
dec
loopne
fistp
(bad)
imul
(bad)
or
sahf
pop
mov
les
ja
inc
sub
jne
(bad)
fcomp
out
xor
sar
cmp
movs
mov
pop
call
xchg
push
sbb
inc
mov
sti
into
adc
(bad)
mov
pop
push
aas
aaa
ja
jmp
ja
ret
ss
sub
fidivr
bound
rcr
jmp
cmp
ret
rcl
pop
call
adc
mov
mov
(bad)
push
in
dec
jle
adc
test
(bad)
aaa
ins
(bad)
call
movs
push
fsubp
sahf
and
push
xchg
in
dec
ret
fisub
xor
inc
push
xlat
test
in
pop
aas
in
inc
xchg
loopne
sar
shl
sbb
inc
cmp
out
and
cmps
sbb
and
hlt
jg
add
push
je
cmp
and
es
and
sbb
ret
sub
dec
sete
(bad)
xor
es
outs
xlat
adc
mov
jle
dec
pop
jecxz
jmp
outs
(bad)
loop
sub
js
push
(bad)
test
inc
fwait
mov
xor
int
aaa
mov
pop
push
cmps
add
pop
and
in
cmp
fild
jns
sub
dec
enter
inc
ins
jne
dec
repz
pop
mov
stos
ficomp
lods
adc
data16
test
in
cmp
fcomp
push
rep
js
xor
xchg
lahf
imul
in
fwait
and
and
hlt
out
imul
sbb
jge
test
and
ret
imul
cmp
dec
dec
call
mov
scas
add
test
ret
xchg
fidiv
scas
pop
ds
push
mov
imul
(bad)
cmp
jmp
fild
mov
and
repnz
xor
fist
dec
iret
cmp
fdiv
and
call
test
ficomp
jmp
stos
lods
xor
sub
sbb
out
std
mov
std
test
jg
push
push
out
call
rcl
fmul
out
pop
jecxz
mov
push
ror
cmps
push
enter
aad
dec
pop
pop
sti
adc
and
cmps
inc
je
jge
push
adc
out
ret
ret
sar
xor
xchg
(bad)
ins
add
jl
add
shl
ficomp
fstp
pop
pop
out
mov
jo
ds
dec
ja
idiv
xchg
dec
mov
jp
xlat
push
inc
test
les
mov
scas
xchg
or
add
icebp
or
adc
jno
pop
pop
ficomp
daa
xchg
dec
movs
cli
push
mov
ret
inc
leave
scas
pop
or
pop
cmp
jl
add
cmp
dec
ret
neg
repnz
data16
mov
into
(bad)
jmp
lods
add
add
jmp
mov
mov
mov
mov
jbe
shl
loop
rol
and
fidiv
ret
test
sub
mov
xchg
dec
adc
lods
mov
out
adc
int3
xor
rcr
push
mov
sub
inc
pop
mov
in
cmp
popw
dec
outs
add
mov
in
movs
jae
fidivr
js
or
(bad)
push
inc
imul
mov
add
xchg
nop
sbb
clc
lds
mov
loopne
movs
adc
inc
rcl
xchg
push
xchg
inc
xchg
aaa
test
in
and
mov
popa
mov
inc
scas
pushf
daa
mov
popa
push
sub
mov
(bad)
mov
sbb
iret
push
jp
cmps
sub
jp
mov
cmp
cmc
addr16
shl
and
fisubr
xchg
mov
aas
ss
test
sub
fild
jnp
cli
add
push
pop
add
add
rcr
mov
mov
push
gs
mov
adc
mov
clc
data16
adc
jnp
add
inc
out
cmp
enter
mov
mov
pop
stos
xchg
or
or
les
or
shl
push
rol
psubq
or
xor
in
test
jbe
popa
pop
xchg
std
cli
dec
sbb
sub
(bad)
movs
adc
mov
push
stc
inc
retf
and
push
push
bound
ja
mov
ds
pop
int
addr16
xlat
adc
shl
jge
mov
mov
sub
punpckhwd
popf
mov
push
fadd
sub
retf
jg
out
or
aaa
xor
cmp
movs
stc
jns
jge
or
lock
jecxz
cmps
outs
ror
sbb
or
jbe
inc
mov
movs
or
sub
add
out
ss
or
aad
mov
ja
lods
lds
mov
cmp
mov
or
sub
aas
popa
xchg
mov
add
aad
test
aaa
cmpps
(bad)
push
scas
fstp
xchg
inc
mov
jp
popf
xlat
inc
cmp
jle
or
test
dec
out
pop
xor
outs
movs
call
mov
lods
jno
add
in
mov
sbb
mov
cli
jb
mov
jno
pop
enter
mov
or
mov
out
data16
mov
pop
popf
pusha
sub
fst
popf
push
jo
and
and
jb
xor
hlt
pop
repz
mov
fmul
ins
pop
add
in
adc
mov
ins
lds
scas
or
fwait
or
sbb
call
xor
arpl
(bad)
stos
push
push
leave
lods
pop
retf
xchg
in
or
repz
push
in
les
inc
shr
ins
shr
push
and
push
es
stos
rol
rcr
cld
pusha
bound
addr16
push
or
enter
out
in
imul
in
sar
movs
adc
sbb
dec
pop
arpl
jmp
dec
inc
push
dec
lods
lods
cmp
sub
pop
repz
fwait
outs
xor
or
sbb
pop
pop
pop
xor
pop
push
ret
xor
jmp
ins
xchg
ror
jp
jo
pop
jg
sbb
mov
lahf
or
or
js
jg
push
inc
xchg
call
cmp
(bad)
mov
out
scas
xchg
aam
hlt
aad
inc
stc
xchg
aas
scas
test
test
je
xchg
jnp
and
shr
stos
stos
mov
dec
push
leave
enter
outs
pop
sti
add
in
(bad)
fist
mov
pushf
int3
pop
into
mov
lods
push
jmp
cli
add
loopne
into
ss
push
lods
sti
arpl
mov
outs
jnp
mov
leave
leave
fmulp
pop
adc
fwait
leave
sbb
pcmpgtd
ror
lahf
xor
in
and
ins
push
mov
mov
cmp
jmp
sar
sub
ret
test
push
cmp
dec
loopne
sbb
add
jecxz
outs
fwait
jg
and
fistp
dec
sub
mov
arpl
push
cmp
shl
cmp
gs
cs
cmp
out
sti
adc
fidivr
inc
es
imul
std
rcl
add
dec
lea
fwait
cmps
(bad)
loop
cdq
xor
ins
cmp
sahf
pop
pop
add
sub
into
sub
out
cmp
mov
cmc
cmps
xor
es
mov
das
mov
(bad)
cmp
jns
mov
mov
shl
mov
jge
out
ret
push
shl
adc
add
cmp
mov
(bad)
sbb
inc
sbb
cdq
mov
mov
push
dec
cmp
hlt
add
push
or
fidiv
xchg
xor
fadd
into
xor
das
movs
push
xor
mov
or
cwde
icebp
jnp
mov
loope
retf
rcl
jnp
dec
hlt
xchg
mov
pop
repz
inc
xor
ret
xor
pop
sbb
dec
lods
shl
cmp
addr16
xor
stos
or
sbb
pop
sti
push
mov
cdq
mov
jl
bound
jecxz
add
push
add
out
test
fst
in
out
enter
test
push
add
mov
ja
int
pop
add
imul
ins
bswap
xchg
and
add
pop
dec
xadd
cmp
out
pop
jge
pop
cmc
mov
sbb
mov
and
arpl
sti
out
cld
sbb
sub
pop
fimul
out
cmp
inc
cmp
ins
fcom
pop
pop
stc
xor
mov
int3
ficom
cmc
add
and
jg
lods
sub
ficom
enter
int3
pop
daa
movs
sbb
das
cs
jo
cmp
xchg
nop
pop
icebp
pusha
icebp
jge
jmp
fst
shl
and
(bad)
test
fcom
and
mov
or
(bad)
scas
enter
xchg
cdq
jae
adc
mov
les
jne
(bad)
push
or
pop
xchg
xchg
fdiv
cmps
push
cmp
mov
into
pop
sbb
rol
into
pop
outs
cmp
xchg
lds
inc
cwde
add
adc
(bad)
in
dec
and
sahf
je
sub
lds
out
xchg
cmp
and
sub
and
je
test
cmp
inc
mov
das
(bad)
into
rcr
(bad)
out
xor
sti
jg
inc
rcr
mov
add
stos
dec
mov
imul
call
sbb
in
imul
jge
cmps
fdiv
xor
test
ja
jp
and
out
into
lea
arpl
movs
cli
push
or
or
or
xor
jnp
je
fisttp
int
iret
pop
sbb
(bad)
iret
test
jbe
aas
add
and
push
jae
rcl
add
jp
(bad)
cld
hlt
shl
lahf
pop
pop
out
(bad)
and
aad
push
shl
add
out
in
inc
paddb
pop
out
inc
inc
mov
add
jp
inc
pop
mov
pop
add
and
in
stc
in
dec
or
popa
retf
xchg
sbb
inc
es
and
mov
cmp
push
inc
sub
imul
fwait
add
push
mov
lods
cmps
push
cli
mov
icebp
call
pusha
xchg
sets
and
movs
test
lods
jns
sti
mov
xchg
pop
shr
push
cmp
mov
or
inc
and
mov
(bad)
hlt
movs
ror
sub
outs
js
aad
fild
cmp
inc
cld
dec
aad
mov
rcr
fcom
inc
cld
fstp
sub
push
dec
pop
jle
ret
lahf
dec
fld
test
test
(bad)
fucom
mov
sub
sub
rcr
test
mov
ficom
push
mov
pop
mov
mov
fisub
push
ret
shr
push
dec
or
sti
cmp
fisttp
add
cmc
mov
jae
shl
push
cmp
fcomp
movs
hlt
mov
cmps
and
inc
mov
or
jae
push
clc
cs
mov
or
sbb
ret
outs
das
pop
xor
cli
sbb
pop
sub
add
pop
out
xor
std
sbb
enter
jnp
and
icebp
or
add
mov
test
js
nop
sub
xor
data16
pop
or
(bad)
sub
aas
sub
xor
mov
scas
imul
and
sub
push
enter
sub
arpl
outs
and
and
or
xchg
enter
arpl
jmp
stos
xchg
aam
test
(bad)
call
fldenv
(bad)
xchg
mov
lods
shl
repz
dec
xchg
mov
push
in
or
add
cmp
in
fwait
push
ret
add
inc
inc
add
jno
fs
daa
popf
add
cdq
push
(bad)
loop
adc
pusha
sub
add
cmp
test
dec
or
movs
inc
and
(bad)
add
mov
jno
jno
bound
fwait
aaa
inc
outs
jb
loop
inc
icebp
daa
inc
mov
jns
mov
push
sbb
mov
(bad)
sti
mov
stc
jne
popa
and
mov
cs
call
cmp
jge
sbb
push
icebp
xchg
mov
inc
shr
xchg
loop
mov
dec
rol
add
mov
mov
stos
arpl
and
std
xor
sbb
or
repnz
icebp
adc
fld
jl
adc
pop
push
imul
pop
pop
sub
mov
xchg
loope
fcom
jp
sti
movs
push
sbb
mov
out
ret
sbb
fwait
xchg
mov
bound
and
fiadd
inc
sbb
push
stos
pop
push
out
fisub
(bad)
xor
push
stos
mov
cmp
mov
imul
jnp
mov
cli
fstp
jg
lock
sbb
push
data16
push
fldenv
dec
and
fidiv
dec
js
sbb
(bad)
dec
aas
pop
sbb
sbb
push
(bad)
int
xchg
mov
mov
lock
into
aad
adc
lea
outs
repz
sbb
rol
sub
dec
mov
std
fwait
sbb
lods
sub
add
xlat
stos
shr
jne
in
jns
movs
fsub
js
call
mov
gs
dec
inc
in
fdivr
mov
call
push
dec
and
pop
inc
or
into
ins
xor
jmp
jns
sub
push
aaa
sbb
or
pop
into
add
sbb
adc
and
outs
mov
push
dec
movs
movs
mov
in
shr
sar
es
push
cmp
mov
add
es
cmp
rcr
push
in
jno
popf
mov
nop
fbstp
movs
jne
mov
push
hlt
jge
inc
dec
stos
hlt
(bad)
pop
imul
inc
pop
xor
pushf
push
mov
mov
stos
dec
jb
aam
loop
pop
ja
in
push
clc
sbb
in
xor
std
cdq
xor
sbb
pop
addr16
fcomp
sub
dec
inc
rcr
call
lods
xchg
dec
jo
(bad)
in
add
neg
jbe
sahf
enter
call
add
jno
adc
sbb
and
out
mov
dec
iret
xchg
xchg
(bad)
mov
ins
xchg
push
sbb
fld
jne
not
loopne
mov
(bad)
div
inc
inc
sub
div
and
dec
sbb
mov
(bad)
jmp
mov
sub
ror
xchg
fwait
into
or
in
mov
scas
hlt
ja
frstpm(287
jne
sub
mul
shr
dec
mov
mov
ret
lods
cs
xchg
movs
adc
dec
dec
jmp
in
retf
fsub
pushf
push
jae
cs
mov
shl
cmp
loope
inc
pop
in
mov
jge
test
fdiv
movs
pop
cli
jg
xor
call
mov
bound
inc
aad
in
push
test
(bad)
movs
(bad)
lods
stc
iret
cli
test
test
bound
jmp
mov
stc
and
jae
mov
sti
xor
into
push
add
scas
sbb
mov
loope
xor
ror
jno
ret
test
inc
lock
out
out
inc
push
and
or
inc
lea
or
popf
arpl
or
push
aam
cmp
fs
(bad)
nop
or
xchg
or
sub
outs
js
adc
test
inc
sub
inc
mov
dec
sbb
ret
ds
mov
fld
imul
push
mov
pop
pop
mov
stos
ficom
mov
mov
sbb
inc
stc
pop
xchg
jl
loop
imul
add
in
xor
mov
mov
mov
pop
idiv
and
jecxz
or
or
push
dec
pslld
push
(bad)
push
rol
mov
in
xor
inc
xchg
sub
cs
int3
leave
cmp
pop
xor
(bad)
fsub
jo
neg
mov
into
repnz
xor
or
pop
ja
imul
pusha
aaa
sub
and
xchg
jno
test
jl
outs
or
sbb
fcomp
pop
std
dec
mov
test
jmp
inc
(bad)
mov
mov
out
test
and
jne
jl
mov
cmp
out
cmp
in
pusha
jo
xchg
ins
ror
int3
repnz
test
add
or
or
sbb
repnz
adc
push
retf
mov
dec
(bad)
pop
inc
fadd
sbb
or
pop
inc
rcl
sar
xlat
not
push
int3
sbb
div
leave
lods
les
mov
inc
icebp
rcl
mov
jbe
xor
inc
and
in
jp
rol
loope
das
mov
loop
xchg
xchg
xchg
jl
sbb
and
sbb
cmp
jg
add
outs
loope
rcr
pop
inc
add
push
mov
add
mov
cmp
mov
rcl
xchg
jle
adc
call
ins
out
pushf
and
pop
xor
push
mov
and
adc
inc
movs
sub
mov
push
pushf
(bad)
jle
dec
xor
sbb
mov
mov
lea
shr
sbb
push
or
into
adc
jecxz
push
lea
cmp
cld
mov
push
leave
pop
xchg
jo
cmps
xchg
inc
mov
dec
cmc
std
outs
lea
sbb
and
jle
(bad)
movs
mov
ins
mov
mov
cdq
clc
rcl
inc
xor
out
cmp
js
imul
or
outs
xchg
fs
pop
repz
pushf
nop
cwde
sub
and
inc
mov
jae
lods
or
test
imul
sti
adc
add
jge
ds
dec
retf
cli
cld
adc
cmp
add
cmp
std
pusha
xor
jle
mov
jne
sub
or
jae
pop
daa
fbld
pusha
loope
push
pop
inc
pop
dec
aas
add
ret
push
hlt
inc
cmp
jno
jg
cdq
push
add
scas
retf
mov
ss
push
ins
jns
mov
fsubr
dec
loop
gs
inc
aad
fstp
cmp
cmp
dec
test
(bad)
and
outs
adc
(bad)
scas
mov
pop
sar
or
shl
pop
xor
ss
fnstcw
retf
mov
mov
in
stos
movs
push
push
fldcw
xchg
cs
test
push
dec
sub
xchg
pop
bound
or
jo
mov
lahf
mov
mov
dec
ret
and
mov
push
mov
int
loopne
aaa
inc
sub
xchg
(bad)
mov
inc
sti
jmp
push
pushf
xchg
aaa
ss
pop
mov
pop
add
jge
mov
add
or
fst
mov
rcl
push
pop
sbb
adc
adc
jnp
nop
sti
mov
xor
inc
pop
mov
adc
push
push
inc
ficom
sar
add
data16
enter
fcom
mov
sub
xlat
jne
jae
shl
push
ins
call
mov
out
and
inc
mov
mov
or
lods
cmp
jb
dec
mov
ds
jle
(bad)
ins
js
mov
xlat
loopne
cmps
(bad)
pop
mov
in
not
cmp
cmp
dec
pop
(bad)
imul
fidivr
inc
or
scas
xor
fcomp
mov
sub
dec
std
mov
sbb
nop
stos
push
jp
jns
mov
aas
fcmovnb
jecxz
movs
push
add
pop
shl
hlt
lock
xchg
pop
or
dec
int
test
leave
cmp
(bad)
fld
sar
jnp
jmp
inc
mov
rcl
jle
mov
scas
(bad)
adc
or
rol
jno
adc
and
aaa
sbb
sbb
movs
and
jle
jg
pop
jg
mov
iret
cld
sbb
sub
movs
and
cmp
(bad)
test
mov
jg
sub
fiadd
(bad)
jno
and
lods
sub
xchg
inc
add
xchg
jne
sub
push
out
xor
movs
dec
mov
sbb
cwde
sahf
inc
repz
jmp
push
or
sbb
xchg
mov
das
mov
jnp
es
(bad)
xor
jnp
sbb
push
dec
fld
(bad)
movs
jge
rcl
popa
add
sub
cmp
jle
aas
(bad)
sbb
fidivr
loope
rol
arpl
das
adc
adc
std
push
push
dec
and
inc
clc
jne
adc
daa
mov
push
stc
push
outs
sbb
sti
push
dec
inc
mov
ins
xor
lds
ds
sub
adc
(bad)
sbb
adc
push
lahf
loop
(bad)
sbb
ja
rol
mov
imul
mov
xor
popf
xlat
and
sahf
pusha
imul
mov
ins
pop
ins
es
out
or
sub
fsub
mov
sub
jae
and
xor
push
xchg
dec
hlt
or
es
pop
mov
scas
lods
retf
pop
jmp
xor
(bad)
jmp
jmp
ficom
pop
mov
int3
test
call
and
movs
mov
idiv
aas
shl
add
and
aam
ret
ins
xchg
pushf
jbe
sar
cdq
sti
cmps
push
sbb
sbb
push
xchg
cmp
loopne
sub
stos
sub
push
sar
push
xor
xor
adc
test
push
es
call
mov
mov
pop
or
cmp
repz
lea
cmps
inc
sub
test
xchg
push
or
jnp
cli
pop
int
pop
mov
cmp
and
xchg
push
jp
cmp
rcl
pop
jns
repnz
cmps
pop
je
ficom
add
jbe
cmc
or
push
mov
(bad)
hlt
test
shl
scas
aam
mov
mov
xchg
mov
mov
es
jle
fadd
sti
cmps
pop
iret
frstor
cmps
hlt
in
cs
add
dec
mov
or
xor
inc
push
sub
or
sub
call
sbb
into
cwde
push
adc
retf
das
mov
adc
test
lea
mov
xor
or
sbb
mov
and
push
jle
or
push
add
cld
mov
mov
outs
dec
(bad)
jmp
jmp
or
mov
push
add
and
sbb
dec
enter
pop
mov
int3
mov
mov
sbb
(bad)
aaa
aaa
push
lods
inc
pusha
xor
iret
addr16
adc
sbb
cmp
xchg
add
mov
ds
and
pusha
pusha
xor
in
lods
shl
push
xor
push
jecxz
dec
inc
js
movs
jle
sub
dec
add
mov
adc
nop
fidiv
pushf
adc
icebp
xchg
sbb
mov
test
sbb
jo
in
jecxz
ret
scas
mov
sbb
(bad)
xchg
loop
in
xor
or
movs
outs
xor
cmps
icebp
mov
push
in
or
movs
cmp
sub
and
sub
js
je
push
xchg
jl
xchg
ins
or
lods
(bad)
mov
mov
fsubr
test
mov
call
fisubr
jnp
cmp
xor
and
sbb
pop
pop
popa
packssdw
mov
iret
das
add
add
xlat
cli
test
xor
or
dec
xchg
sub
popf
sub
pop
push
sub
mov
adc
hlt
or
imul
push
int
loop
outs
std
aad
add
or
ins
dec
rcl
mov
pushf
xchg
mov
pop
(bad)
icebp
xchg
and
mov
mov
mov
mov
push
jl
test
dec
inc
call
jmp
mov
out
add
and
test
rcr
push
call
push
addr16
pop
(bad)
in
mov
xchg
mov
mov
dec
push
fnstcw
pop
test
mov
push
xchg
lock
push
cmp
mov
inc
adc
adc
dec
sbb
mov
cmps
jecxz
xor
dec
fimul
(bad)
cmc
in
xchg
xchg
push
sti
xor
add
out
loopne
leave
mov
cld
fcomip
add
cdq
xchg
cmp
xor
sub
jmp
xchg
cmp
push
retf
jnp
inc
(bad)
cmp
scas
pop
sti
push
not
jmp
cmp
jl
and
sub
mov
daa
repnz
mov
repz
mov
dec
xor
movs
call
push
or
mov
push
in
dec
adc
jno
les
stc
(bad)
ret
cmp
push
retf
ret
push
(bad)
or
lods
test
push
jno
add
inc
mov
jmp
sub
xchg
or
stos
mov
lods
cld
cmp
xchg
lods
(bad)
sbb
not
std
ja
push
std
fld
jl
scas
xchg
inc
fiadd
cdq
stos
push
ffree
xor
aaa
das
ror
jmp
jbe
or
out
sub
xor
xor
or
jb
jns
stos
pop
(bad)
in
sub
mov
pusha
sbb
xchg
sbb
fdivr
push
dec
test
pop
mov
(bad)
retf
iret
repnz
inc
xor
cmp
repz
xor
test
pusha
arpl
or
add
pop
pop
test
fisttp
ret
or
loop
loopne
sub
mov
jo
nop
inc
pop
pop
fcomp
je
lock
push
xor
fadd
adc
jbe
mov
dec
push
into
sbb
ins
xor
dec
rol
out
call
aam
mov
iret
sar
mov
jbe
jmp
adc
imul
not
outs
cdq
mov
lock
cmp
cmp
repnz
leave
adc
rcr
mov
jne
adc
dec
sbb
mov
sub
push
addps
mov
(bad)
es
movs
scas
mov
sub
imul
cwde
xchg
ret
je
sub
fdivr
xchg
jae
cdq
dec
xor
imul
bswap
sub
retf
or
xor
cs
mov
into
adc
sbb
dec
stc
push
mov
jl
(bad)
movs
xchg
inc
adc
pusha
popf
imul
push
xor
cmps
pop
aad
cmp
xor
nop
cmps
push
jns
xor
test
sar
jne
sub
xor
xchg
(bad)
movs
dec
and
adc
out
sub
adc
push
shl
mov
and
js
add
popf
je
pop
sbb
stc
xor
sbb
jp
and
dec
outs
sub
cmps
xor
push
or
repnz
pop
pusha
fcom
dec
dec
dec
pushf
pop
in
stos
repz
dec
movs
(bad)
(bad)
pushf
mov
movs
ins
push
sub
mov
add
lahf
lahf
mov
push
sar
in
push
mov
sbb
repnz
mov
ror
cmps
mov
sub
iret
dec
rcl
sub
adc
mov
sbb
mov
xlat
movs
repz
and
mov
xchg
es
push
and
retf
jmp
jns
lock
push
push
mov
cdq
xchg
cmp
arpl
and
xchg
outs
pmulhw
mov
les
or
jg
cs
mov
ins
pop
mov
mov
clc
push
push
add
or
fnsave
xor
dec
sbb
data16
ror
sub
push
sbb
or
jnp
push
mov
inc
push
xchg
xor
sub
cli
adc
test
jmp
test
je
or
stos
dec
lods
in
out
daa
fcmovne
loope
cmp
shl
sar
cmp
xor
in
inc
sub
mov
sbb
retf
dec
pop
add
scas
jno
sub
fldenv
sbb
sub
fnsave
nop
xor
lods
mov
jnp
jo
xor
mov
jbe
stos
ds
mov
dec
push
jmp
jmp
cmp
push
xchg
or
mov
nop
stos
cli
jmp
xlat
addr16
loop
into
rcl
arpl
inc
pop
pop
pop
daa
rcr
hlt
push
mov
jmp
mov
dec
aaa
cs
(bad)
call
rcr
daa
xchg
add
fstp
jno
add
aam
cld
inc
test
add
inc
sahf
sar
imul
sbb
js
adc
mov
push
stos
xor
sub
pop
addr16
jns
xchg
and
pop
mov
call
hlt
add
lea
hlt
adc
add
js
jl
adc
jb
xor
aaa
sub
fbld
cmp
mov
pop
cmp
icebp
ins
mov
pop
les
fs
fbstp
scas
jl
es
xlat
sahf
je
push
xor
mov
clc
imul
ds
fs
pop
push
xchg
mov
cmps
sbb
sub
xchg
dec
mov
or
jne
test
and
leave
mov
xchg
das
add
add
sub
push
jae
scas
adc
jne
cmp
push
cmps
jecxz
lahf
pushf
sbb
xchg
jle
sub
mov
(bad)
mov
mov
mov
jmp
stos
test
pop
bound
fcomp
xchg
inc
movs
outs
ret
dec
pusha
ret
dec
push
cmp
(bad)
pusha
sub
xlat
jg
dec
jge
push
inc
jmp
xchg
jae
push
jno
jg
cmp
out
push
pop
test
mov
or
popf
retf
retf
xlat
xchg
mov
loopne
jne
mov
mov
(bad)
cwde
nop
cld
in
xor
std
stos
mov
in
xor
imul
and
xchg
icebp
pop
cmp
inc
push
je
call
out
add
loopne
call
add
mov
xlat
push
repnz
scas
enter
sbb
mov
mov
loopne
inc
(bad)
sbb
mov
test
mov
ficom
scas
adc
mov
xchg
mov
inc
and
ret
iret
fbstp
xor
mov
add
je
das
push
push
dec
test
or
sub
das
imul
lds
(bad)
mov
jg
xor
aas
mov
test
mov
jecxz
mov
mov
sub
lock
push
in
or
push
stos
pop
in
daa
test
push
add
in
es
ss
daa
js
movs
or
jmp
xchg
jno
add
shl
adc
mov
mov
mov
xchg
push
jbe
push
lods
pop
and
ret
cmp
adc
(bad)
xchg
adc
jecxz
movs
imul
jbe
in
es
and
mov
xor
addr16
push
stos
dec
fnop
mov
monitor
sub
cmps
push
dec
push
sub
pop
sar
cli
mov
lods
sub
enter
xchg
fisub
sub
fiadd
retf
or
pusha
cs
fsub
add
ins
inc
test
frstor
rcr
cmp
mov
xor
dec
scas
aaa
xchg
dec
sub
in
rcr
fimul
outs
add
pop
sub
sti
xor
pop
(bad)
or
ret
push
sub
fcom
cmp
add
std
in
push
stos
cmp
xchg
scas
pop
and
pop
dec
xchg
(bad)
dec
jg
pop
gs
xor
pop
adc
test
aas
xchg
pop
in
add
xchg
xor
loopne
jns
in
mov
and
cmp
fwait
jbe
push
cmp
test
mov
rcl
ror
mov
cdq
cmp
rcr
adc
inc
or
aas
inc
enter
jne
daa
sub
xchg
shr
scas
mov
cld
(bad)
js
mov
push
movs
fwait
lea
add
xchg
fwait
movs
dec
sbb
push
clc
mov
jne
lds
cwde
(bad)
push
mov
dec
push
cmp
xor
mov
push
xchg
push
mov
fisttp
scas
bound
mov
push
movs
cmp
fdivr
cmp
out
ins
pop
test
jmp
popf
cmps
jns
mov
dec
(bad)
fcomip
xor
int
jg
add
fwait
cld
addr16
cmp
shl
adc
xor
pop
ror
xor
rol
out
cwde
sbb
pop
xchg
mov
sub
movs
add
lds
test
add
mov
pop
push
sub
iret
lahf
sub
adc
aaa
jnp
xchg
inc
(bad)
(bad)
cmp
xchg
cmp
imul
daa
retf
xchg
fnstsw
(bad)
imul
mov
loope
jmp
jge
jecxz
lods
pop
(bad)
popf
mov
mov
add
adc
jno
fcomi
in
xchg
out
in
push
and
push
mov
pusha
fs
outs
ss
xchg
leave
mov
(bad)
xchg
dec
ins
lods
cmp
jnp
xor
call
cmps
inc
xlat
mov
fld
addr16
aam
and
into
mov
sbb
pop
ror
sar
shl
and
jns
mov
fiadd
popa
cmp
mov
call
dec
dec
sbb
xlat
inc
jecxz
mov
lds
or
pop
xchg
sbb
cmp
fdivr
push
movs
es
adc
mov
xchg
mov
popa
inc
pusha
pop
cwde
imul
jge
dec
xlat
icebp
lods
test
mov
and
fild
push
jmp
(bad)
fiadd
pusha
(bad)
movs
lock
(bad)
gs
cdq
mov
mov
adc
jo
inc
in
stos
mov
imul
adc
in
mov
mov
mov
lock
adc
jmp
cmps
xor
int
ret
je
dec
cmc
test
sti
fldenv
(bad)
and
loop
out
test
sbb
ret
xor
pop
xchg
cld
sahf
inc
xchg
rcr
mov
pop
mov
dec
ret
jo
dec
lock
pop
sub
scas
jp
jp
test
sbb
or
and
call
and
pop
xor
repz
dec
mov
inc
dec
int
pop
mov
idiv
neg
jb
sbb
sub
js
dec
loopne
jmp
hlt
or
pop
aaa
inc
mov
dec
(bad)
cli
mov
popf
inc
xor
fisub
out
movs
inc
cmp
push
iret
mov
xor
jge
call
retf
pop
mov
stos
pop
fist
adc
shl
int3
xchg
jae
mov
inc
and
imul
sahf
pop
mov
pop
and
xor
jp
js
push
stos
adc
imul
pop
outs
pop
out
rol
aam
shr
lock
and
ret
dec
push
test
push
pop
arpl
cmp
xlat
xchg
sbb
inc
inc
daa
xor
xor
push
pop
or
shr
mov
push
fwait
sbb
dec
add
cdq
dec
icebp
cld
push
imul
mov
adc
retf
cmp
lods
inc
xchg
mov
ins
outs
and
pushf
sbb
ss
dec
shl
lea
fstp
into
inc
jmp
add
mov
mov
and
dec
clc
jl
inc
rcl
fist
push
xlat
mov
popf
es
popf
mov
xchg
cmp
mov
int3
lods
xchg
bound
ds
(bad)
sbb
add
(bad)
push
stos
or
jl
outs
sar
mov
xchg
pmaxub
clc
retf
into
xor
addr16
pop
lods
sbb
call
dec
ins
imul
cmp
loop
mov
cmc
xchg
rcr
pop
aas
mov
and
dec
(bad)
cmp
fld
out
mov
xchg
pop
sub
loop
call
inc
mov
sbb
loope
pop
xchg
jbe
in
jne
or
mov
xchg
and
push
clc
out
pop
or
mov
retf
js
or
mov
and
js
gs
aas
not
(bad)
int3
cmp
sub
cmps
push
popf
cmp
cli
in
daa
adc
fldenv
cmp
arpl
mov
bound
add
jg
dec
cmc
sub
ror
in
sar
fistp
aas
mov
xchg
jns
mov
pop
gs
mov
push
fdiv
jle
xchg
ja
adc
cdq
dec
loopne
pop
and
mov
xlat
mov
adc
ja
pop
sub
sub
xchg
mov
test
pop
loopne
dec
push
pop
push
cld
jle
mov
cld
mov
push
xlat
fsubrp
ins
inc
repnz
xor
fisttp
dec
push
push
jecxz
push
and
or
sub
push
dec
jno
pop
cld
lods
cmp
rol
scas
xor
push
imul
jnp
imul
pop
shr
or
xchg
mov
mov
test
jo
sti
xor
mov
adc
call
mov
shl
sbb
xor
push
adc
sub
jnp
mov
std
je
add
mov
aas
jmp
aaa
scas
adc
pop
adc
and
mov
mov
ins
jns
push
or
mov
push
daa
or
sub
dec
and
(bad)
rol
or
iret
clc
mov
dec
adc
inc
hlt
stc
adc
push
div
loope
dec
mul
xor
mov
lods
pop
test
popa
mov
js
pop
test
or
out
(bad)
out
das
xor
xor
jg
das
and
icebp
xor
das
int3
cmps
inc
ficomp
data16
jb
je
std
jne
and
xor
sbb
pop
fwait
lods
loope
cmp
cmc
popa
mov
ins
inc
jmp
aaa
mov
jmp
sbb
les
jp
arpl
pop
dec
cmp
inc
test
inc
adc
ins
pusha
mov
ret
push
inc
dec
or
repz
push
push
ins
jno
pop
scas
arpl
in
jmp
mov
test
xchg
inc
aas
mov
fs
addr16
jmp
add
xor
sub
in
xchg
xor
in
or
inc
jbe
jp
mov
pop
sub
ss
pushf
retf
and
mov
sbb
ins
push
mov
xor
xlat
(bad)
es
sbb
sbb
sub
jno
ins
retf
xor
ret
scas
ret
shr
xchg
push
out
mov
pop
leave
pop
sub
js
mov
pop
aam
adc
adc
jmp
test
xchg
lahf
call
lock
inc
add
dec
add
lods
cmp
push
jecxz
jl
pop
sbb
iret
push
jo
les
dec
sub
sbb
js
mov
pop
aad
xchg
ret
cmps
add
add
jecxz
rcl
xor
dec
add
mov
sbb
or
or
push
sti
push
cmp
xchg
push
jg
cli
loopne
dec
push
dec
aam
xor
addr16
aam
test
lds
pushf
jno
(bad)
cmp
mov
add
jno
inc
loopne
outs
in
iret
repnz
retf
xchg
idiv
leave
and
mov
mov
cld
dec
sub
inc
and
clc
(bad)
jmp
fdivr
int3
stos
dec
lock
(bad)
test
mov
ins
jl
into
adc
xchg
ja
sbb
mov
mov
sub
mov
dec
into
lahf
pusha
jge
repz
(bad)
aas
retf
sub
(bad)
add
fisttp
pop
sahf
inc
mov
mov
lea
push
mov
jbe
outs
sahf
mov
dec
inc
out
sti
fnstsw
jmp
cmp
mov
mov
out
sahf
daa
(bad)
adc
sub
sti
push
mov
sub
xchg
sbb
or
dec
or
es
imul
jns
aas
and
add
stos
jo
mov
and
loopne
pop
pop
mul
add
dec
test
cmp
lods
popf
sub
sbb
hlt
dec
or
sbb
fmul
mov
loop
adc
call
call
mov
(bad)
lock
mov
cdq
push
(bad)
in
cmp
push
loopne
jg
shr
add
inc
aam
or
or
jmp
sub
jmp
pop
sub
push
xchg
into
xchg
in
add
jae
movs
xchg
das
mov
sbb
test
(bad)
push
push
cdq
in
and
mov
test
xor
clc
hlt
inc
cmp
jb
shl
loope
std
jo
hlt
mov
stos
loop
mov
retf
inc
sub
inc
cdq
xchg
inc
sub
inc
addr16
xchg
add
mov
cmp
aad
inc
sbb
cmp
cmc
jbe
cmps
mov
cmps
cmp
(bad)
in
xchg
inc
shr
fwait
lds
fsub
sub
mov
repz
dec
push
or
sti
mov
nop
and
adc
fild
imul
jmp
add
sub
fimul
sti
cli
pop
xor
out
mov
add
mov
xchg
mov
sahf
xchg
mov
push
sub
sar
or
jb
cwde
pushf
leave
adc
cs
not
movs
data16
stos
lea
pop
ret
jmp
icebp
iret
cmps
xor
add
mov
mov
ins
pop
test
scas
mov
ins
imul
mov
out
test
arpl
and
fst
or
daa
lods
fsubr
inc
sub
jl
leave
out
mov
pop
ss
add
mov
loopne
or
fbstp
fimul
out
rcl
fs
xchg
out
mov
push
rcl
test
push
pop
pop
pop
push
pop
or
lahf
enter
mov
cmc
jne
xchg
ins
mov
das
or
sbb
dec
and
(bad)
jno
jle
sahf
inc
push
shr
sti
add
sbb
push
mov
cmc
not
mov
and
cmp
jg
hlt
in
imul
call
and
or
(bad)
rcr
je
imul
pop
dec
ficom
dec
dec
sub
add
pop
pushf
jb
gs
jmp
or
xor
je
outs
out
mov
int
(bad)
out
(bad)
in
pop
cmc
ins
pop
enter
dec
mov
inc
or
imul
xchg
mov
ret
in
mov
adc
xchg
shl
xchg
mov
mov
add
clc
inc
xchg
mov
enter
imul
(bad)
sub
jp
out
mov
jmp
jg
dec
push
in
push
aas
inc
call
fwait
add
xchg
jae
xlat
cmps
loope
fdiv
lods
int
push
pop
push
daa
mov
xor
ss
and
in
mov
pusha
dec
dec
and
jmp
inc
inc
add
jge
mov
out
adc
sbb
xchg
fstp
sahf
add
xchg
call
pop
sbb
ins
add
mov
cmps
push
mov
out
in
push
jne
mov
push
adc
jno
add
retf
jno
cs
loope
rol
push
out
ret
(bad)
jbe
sbb
cmps
test
push
push
mov
xchg
mov
(bad)
out
add
in
sbb
dec
cmps
repnz
shl
dec
push
push
(bad)
jne
outs
movs
ja
adc
push
cmp
rcr
sub
mov
pop
jge
or
and
and
xor
sub
gs
enter
pushf
cmp
dec
pop
(bad)
xlat
dec
sub
xchg
or
cmp
leave
xor
cld
std
sub
add
dec
xchg
sbb
imul
jno
ret
ja
mov
adc
sbb
daa
stc
push
or
cmp
movs
xchg
std
push
mov
mov
movs
add
jnp
xchg
gs
cmp
cmp
ret
or
adc
lahf
jl
cmp
int
loopne
inc
outs
(bad)
mov
inc
xor
dec
sbb
xor
xchg
jecxz
sub
sbb
dec
xchg
stc
adc
retf
inc
cmp
xchg
pop
jae
sti
dec
fidiv
mov
outs
adc
mov
and
and
loop
push
cwde
add
or
cmc
ficomp
sub
imul
test
sub
icebp
dec
aas
pushf
xchg
cmp
into
xchg
xchg
or
inc
dec
std
sub
inc
adc
jne
push
sahf
xchg
iret
fnstenv
dec
push
or
ror
jp
in
push
cmp
fsubr
daa
push
mov
xchg
shl
data16
fadd
lds
in
sbb
and
ja
fsubr
sub
hlt
jmp
xchg
xor
nop
push
xor
fistp
mov
in
xor
xchg
(bad)
ds
(bad)
out
add
mov
mov
mov
in
movs
mov
jmp
lods
aaa
sub
pop
std
nop
out
test
sbb
fild
js
popf
lods
cmp
mov
shl
adc
push
xchg
cmp
inc
fwait
jg
jg
scas
jl
push
sub
dec
ss
adc
push
jl
movs
xor
and
and
sub
mov
dec
xchg
out
inc
cdq
out
leave
push
sti
shl
cmc
cmc
fstp
outs
mov
sbb
pop
pop
sbb
iret
xor
(bad)
fmul
mov
das
nop
fstp
mov
cmps
pop
call
mov
cwde
sahf
iret
pop
fild
sub
push
cmp
xchg
je
stos
int
mov
mov
les
sahf
sahf
push
add
xchg
pop
fild
lods
fwait
add
inc
jnp
mov
adc
ret
pusha
js
lods
cs
push
mov
xchg
jmp
sbb
and
push
in
mov
cmps
stos
inc
fldenv
xchg
mov
dec
imul
mov
adc
jecxz
mov
xor
retf
mov
enter
call
gs
mov
xchg
ins
mov
mov
aad
and
icebp
adc
pushf
mov
nop
mov
ret
xchg
cmps
inc
adc
popa
and
stos
and
jbe
push
lods
addr16
xor
(bad)
sbb
test
movs
lods
xchg
fsin
loop
shr
in
loopne
sub
jnp
popf
or
stos
and
pop
push
cmp
(bad)
xchg
jns
adc
out
jp
test
pop
mov
in
xor
jecxz
fcomp
cmp
scas
aas
xchg
ins
cmp
sbb
dec
push
mov
mov
test
nop
mov
pop
imul
pop
rcr
stos
mov
and
jnp
sub
fsub
loopne
pop
push
movs
or
push
icebp
pushf
inc
adc
sbb
push
test
(bad)
cmp
inc
lods
and
cs
push
jbe
cmp
adc
pop
out
sub
inc
and
int
cmp
imul
aas
ffreep
lsl
adc
or
or
or
jnp
mov
push
(bad)
push
arpl
out
enter
cmps
push
outs
jno
sbb
adc
pop
jg
dec
pop
cmps
push
(bad)
lea
cli
popa
daa
mov
(bad)
xlat
repz
adc
dec
or
mov
test
xchg
push
mov
sbb
(bad)
push
loope
sbb
stos
fsubr
cdq
inc
sub
js
push
test
test
and
mov
add
jl
dec
mov
sub
shl
sbb
out
sbb
fild
adc
jne
or
cmp
aas
sbb
xchg
fistp
and
bound
mov
fsubr
xchg
inc
adc
call
sahf
sbb
jl
(bad)
xchg
add
arpl
scas
outs
test
inc
and
xor
test
pop
cld
fcomp
loope
sbb
xor
pop
mov
sub
pop
movs
dec
xchg
inc
fstp
pushf
iret
adc
inc
mov
sub
mov
into
xchg
imul
cs
xchg
jecxz
rcr
out
add
or
jl
cmp
jbe
xor
xchg
adc
push
test
shl
paddq
jmp
ret
mov
jg
mov
ins
nop
xchg
fbstp
mov
mov
or
jp
data16
lock
mov
mov
push
retf
movd
jecxz
mov
or
push
mov
jmp
ins
sub
(bad)
pop
sub
jecxz
pop
icebp
lods
jae
sub
mov
or
(bad)
cdq
cs
jmp
lds
retf
sbb
into
pop
cmp
in
mov
sar
push
dec
or
scas
imul
neg
and
out
dec
mov
xor
addr16
hlt
dec
pop
fimul
fs
ror
jbe
fld
xor
xor
mov
mov
jg
or
mov
jb
add
xor
ja
sub
lods
jnp
cmp
dec
mov
pop
fist
jns
sub
outs
leave
int3
mov
jnp
xchg
sti
jmp
ret
dec
ins
movs
out
lahf
push
loopne
popa
rcr
and
out
mov
mov
mov
dec
cmc
jo
push
imul
cwde
sbb
call
(bad)
test
dec
xor
dec
mov
cdq
in
dec
lahf
outs
leave
int3
sti
inc
fiadd
test
jecxz
out
cdq
pop
lods
push
xchg
sub
add
mov
fidivr
xor
loopne
mov
icebp
add
ins
test
or
push
inc
vpunpckhqdq
adc
cld
test
jb
ja
in
jae
leave
sub
clc
or
inc
xor
sub
ret
mov
sbb
js
add
std
and
fild
cmp
push
enter
mov
lods
lds
mov
scas
jbe
push
sbb
in
sar
ret
cdq
jle
std
test
sub
leave
jmp
popf
hlt
xchg
stos
mov
stos
stc
mov
ret
nop
aas
sbb
dec
popf
push
xor
inc
mov
inc
add
not
into
in
dec
and
das
hlt
push
xor
pop
inc
bound
jns
or
xchg
iret
add
jnp
push
out
push
mov
mov
lea
(bad)
xchg
clc
mov
pop
jno
xor
xchg
ds
cmp
mov
icebp
push
movs
fwait
std
inc
jl
popa
jle
daa
(bad)
jae
pop
and
dec
movs
cmps
pop
push
loop
pop
pop
test
das
jo
jb
mov
cmps
stos
mov
adc
cmp
leave
aaa
fistp
clc
pop
outs
cld
mov
test
(bad)
out
cmps
adc
test
push
cli
mov
mov
and
iret
push
pop
pop
push
scas
jmp
lahf
loopne
fsubr
arpl
sbb
test
sbb
loope
sbb
mov
dec
push
sub
jne
inc
mov
mov
cmp
pusha
into
into
inc
pop
scas
leave
enter
cdq
adc
push
xor
adc
or
in
out
repnz
mov
push
sub
cli
sbb
cmp
sub
xchg
mov
enter
hlt
push
sbb
sub
movs
in
jbe
or
bnd
inc
ror
and
ins
xchg
pushf
pop
sbb
mov
call
loop
cmps
cmp
mov
ins
stos
out
add
pop
jmp
cmp
popf
jb
imul
add
leave
mov
loopne
popa
ror
cmp
cmc
cmp
(bad)
cmp
pop
shr
xchg
pop
retf
push
(bad)
mov
pop
rol
xor
xchg
inc
ret
js
mov
cmp
adc
mov
stos
pop
sub
cmps
xchg
mov
jbe
in
test
cmp
(bad)
sbb
inc
jne
cmc
(bad)
fs
adc
sti
retf
test
xlat
adc
call
pop
xchg
sub
adc
mov
lds
push
adc
rcr
fidivr
adc
xchg
cmc
sbb
add
jecxz
stc
jp
xlat
fistp
jae
in
pop
push
push
push
xchg
cmps
lock
movs
mov
ins
xor
stos
iret
mov
pop
(bad)
scas
mov
test
adc
mov
dec
mov
pop
push
jno
sbb
mov
inc
push
fdiv
push
push
sbb
repz
out
push
jge
dec
in
sub
lea
fstp
fs
inc
xchg
lods
inc
test
imul
lock
push
inc
repz
scas
sbb
push
mov
jo
mov
jo
aam
mov
jnp
aad
dec
push
mov
sub
cld
jbe
ret
ins
jae
mov
aam
jnp
cmp
push
add
(bad)
mov
pop
fdiv
les
call
int3
inc
pop
scas
fs
repz
jo
das
ins
mov
cmps
mov
stc
retf
neg
push
mov
out
mov
cwde
dec
mov
cwde
shr
push
test
scas
lea
movs
scas
xor
(bad)
fwait
jmp
rol
stc
call
stc
cmp
cli
loope
leave
lea
mov
fisubr
cmps
jb
imul
adc
push
arpl
pop
mov
add
inc
mov
out
dec
inc
sbb
xchg
mov
push
mov
fdivr
cdq
in
hlt
pop
outs
fst
mov
fiadd
js
xor
in
movs
repnz
sub
cmp
xor
dec
pop
int
mov
and
mov
or
pop
mov
arpl
inc
add
xchg
int
and
xchg
out
add
clc
inc
and
sbb
xor
pop
and
test
sbb
xchg
in
xchg
sub
jns
(bad)
ja
fwait
pop
xor
(bad)
popa
call
jl
loop
out
and
lods
std
cmps
push
jp
xchg
leave
(bad)
arpl
inc
rol
mov
mov
int3
fwait
ja
jnp
in
fsub
cmp
sbb
sub
daa
scas
fdivr
inc
(bad)
out
push
(bad)
test
dec
fcom
fnstenv
pop
call
ret
mov
xchg
test
mov
inc
mov
out
pushf
in
and
stos
stos
shl
imul
into
adc
add
das
out
in
sbb
cmp
mov
add
dec
lods
test
pop
inc
test
movs
push
retf
loopne
enter
ds
lds
dec
xchg
pop
sar
out
dec
xor
sar
inc
xchg
imul
mov
adc
sahf
inc
or
mov
cmp
cdq
in
mov
mov
fsubr
xor
mov
jbe
(bad)
push
clc
aaa
pop
outs
cmp
inc
pop
stos
cli
mov
fimul
xchg
xor
call
(bad)
or
cmc
inc
adc
cmps
and
inc
mov
sub
mov
ds
push
dec
mov
mov
loopne
sbb
js
pop
mov
mov
(bad)
ja
je
rol
jp
jnp
inc
push
push
jmp
shl
xor
cs
retf
xor
out
mov
sub
add
xor
sti
test
mov
cmp
add
adc
(bad)
and
sub
mul
stos
addr16
out
jmp
add
inc
jle
sub
jle
xchg
pop
das
into
and
mov
push
pop
jno
jg
imul
fwait
mov
and
in
test
mov
out
adc
xchg
push
ficomp
push
retf
jbe
jmp
sub
lock
adc
sbb
cmp
push
fs
pop
dec
movs
push
ds
inc
add
mov
retf
cmp
mov
js
push
xchg
pop
mov
movs
sbb
shl
mov
or
test
jae
movs
movs
add
sar
lods
push
adc
movs
mov
fs
dec
ins
mov
ins
push
pop
add
cmp
inc
je
jmp
dec
dec
push
dec
inc
stos
sbb
je
add
nop
dec
call
(bad)
xchg
call
or
sbb
pop
mov
aas
ds
jle
cli
dec
leave
pusha
jp
es
add
push
or
cmp
jg
jbe
popf
xchg
mov
push
dec
lods
push
or
xor
inc
pop
mov
xor
call
add
and
jns
scas
or
dec
cmps
ins
mov
popa
dec
cmp
push
int
xor
sbb
fnstcw
push
xchg
mov
mov
lock
les
dec
(bad)
sbb
add
mov
cmps
imul
popa
add
out
ret
sbb
mov
aas
dec
lods
pop
sar
pushf
gs
jbe
loop
mov
repz
jbe
push
loop
mov
xchg
push
jecxz
xchg
cmp
(bad)
cdq
ds
adc
sbb
dec
mov
imul
shr
cmp
push
daa
push
es
add
data16
mov
xchg
icebp
push
arpl
pop
pop
nop
test
push
retf
cmp
imul
push
inc
inc
or
mov
add
movs
cwde
int
and
shl
mov
das
cmps
(bad)
pop
xlat
pop
bound
jmp
fsubr
imul
jmp
pop
shr
fadd
or
scas
mov
sbb
or
retf
inc
lahf
sbb
ja
jge
fsub
dec
fist
imul
mov
sar
mov
or
lea
lahf
and
dec
mov
jecxz
ss
inc
nop
jle
lods
ret
inc
push
sahf
aas
xchg
popa
pop
repz
(bad)
pop
gs
jmp
test
mov
lea
mov
and
cs
inc
and
sub
mov
adc
add
ds
mov
xchg
retf
in
fadd
or
loope
xchg
nop
cmps
into
in
xor
cs
jmp
mov
jnp
aaa
sub
ror
adc
cmp
mov
and
dec
jg
xchg
cmp
test
or
xor
clc
xchg
int3
jbe
aaa
inc
jp
lea
ins
dec
fst
rcl
mov
daa
push
xor
mov
daa
call
bound
ins
mov
or
stos
or
jae
cwde
out
jmp
pop
sbb
int3
test
adc
or
lock
pop
pop
xchg
mov
(bad)
rcr
inc
inc
pop
jecxz
jg
dec
adc
jmp
add
dec
retf
mov
test
test
xlat
pop
cmp
or
xchg
outs
mov
xchg
fild
movs
mov
or
in
adc
cmp
(bad)
and
nop
pop
xlat
clc
je
inc
ja
add
inc
fcom
jne
dec
stos
ss
sub
cdq
mov
jmp
add
xor
fwait
xchg
fmul
loop
sub
les
push
jne
loopne
jae
sub
or
or
aam
inc
ficom
(bad)
push
or
jb
xor
mov
sub
ja
outs
out
pop
ja
jl
push
out
loop
add
daa
lock
cmc
gs
(bad)
out
movs
fwait
test
push
add
inc
cmp
pop
(bad)
and
sub
das
(bad)
into
pop
sub
out
mov
or
adc
leave
retf
pop
shl
push
(bad)
xlat
mov
xchg
ja
push
sbb
fs
mov
xchg
ficom
mov
jns
nop
mov
adc
or
inc
adc
add
mov
mov
hlt
push
sti
clc
sub
cmp
sub
cmp
pop
mov
mov
inc
pop
jns
sbb
out
fdivr
retf
add
pop
fisubr
out
sub
mov
jns
mov
or
inc
mov
mov
stos
mov
xchg
mov
xchg
dec
outs
mov
(bad)
test
fwait
jnp
inc
add
mov
and
jmp
sbb
leave
js
xchg
loop
adc
mul
sub
xor
js
(bad)
out
inc
sbb
xchg
fdivp
push
add
(bad)
daa
xor
test
inc
mov
xchg
pusha
call
scas
xlat
cmp
push
stc
xor
sbb
dec
outs
inc
jg
dec
mov
cmp
fcmovnu
scas
xchg
cmps
gs
pop
sbb
jl
dec
(bad)
nop
xor
inc
push
push
fld
pop
lock
dec
jmp
cmp
dec
movs
xchg
fist
pop
or
mov
pop
(bad)
out
pop
pop
popa
push
mov
cmp
in
mov
loope
pop
cmp
enter
pop
add
btc
dec
inc
cmp
pop
leave
fnsave
sub
ror
inc
je
ins
mov
mov
adc
xchg
pusha
nop
mov
stos
jnp
mov
pop
dec
mov
add
adc
pop
shl
jae
add
and
or
out
push
jb
jne
dec
push
jnp
or
sbb
xor
mov
jge
clc
sbb
mov
inc
gs
jns
sbb
pop
in
ins
push
int3
cmp
adc
sbb
mov
fcmovne
push
std
(bad)
dec
adc
scas
ret
lock
jle
stc
push
mov
(bad)
jb
pop
mov
int3
push
aad
mov
inc
xor
cmp
in
popf
into
rcr
and
and
mov
jmp
in
sub
add
xor
mov
mov
inc
je
mov
adc
lock
jecxz
dec
and
loop
das
lods
or
sub
dec
push
and
push
pop
movs
nop
dec
jb
or
es
(bad)
sbb
add
ror
cmps
xor
xor
popa
call
fisub
and
jns
scas
sub
sahf
xchg
xlat
adc
aas
push
loopne
jmp
cs
fwait
rcr
sub
sub
stos
xchg
je
jg
xor
fist
pop
fild
leave
xchg
loopne
shl
popa
dec
sub
add
mov
or
aas
sbb
mov
push
dec
sub
shl
aam
sbb
jp
push
aam
das
out
or
lahf
rcl
sub
pop
inc
xor
or
jle
in
(bad)
imul
call
ins
pop
cld
je
repz
mov
cld
fwait
ja
and
xchg
je
xor
dec
cmp
pop
mov
(bad)
hlt
pop
sti
mov
sub
scas
call
mov
in
mov
xor
jae
es
jmp
ds
mov
push
push
cmps
stc
mov
movs
(bad)
fidivr
repz
(bad)
out
arpl
push
jnp
in
mov
sbb
(bad)
int3
add
stc
pcmpeqw
inc
cld
ret
adc
add
in
or
sub
(bad)
sub
sbb
pop
int
fwait
mov
jo
int3
adc
jg
je
xchg
fist
mov
sub
push
xlat
aam
daa
in
dec
pop
or
jne
and
push
loopne
add
and
ins
loop
adc
(bad)
out
ins
dec
adc
arpl
stos
repz
iret
pop
mov
and
test
dec
jbe
pushf
mov
sub
test
or
call
dec
iret
call
popa
aas
dec
(bad)
ss
and
mov
inc
sti
sub
dec
fstp
stc
xchg
mov
or
aad
mov
xchg
iret
mov
dec
xor
popf
movs
mov
pop
scas
xchg
and
shl
mov
add
cmp
or
sahf
mov
mov
dec
movs
sub
jo
add
mov
cmp
lock
mov
jae
jbe
adc
fldcw
lods
pop
xchg
rol
xor
jl
out
push
dec
(bad)
cmc
out
gs
add
jg
out
pop
sbb
xor
xlat
pop
jne
mov
in
mov
jge
adc
pusha
outs
je
je
pusha
jmp
in
cwde
aam
scas
add
jne
dec
push
cmp
in
cmp
push
fmul
cli
mov
push
(bad)
pop
add
(bad)
xchg
mov
cmp
xchg
xor
lods
mov
and
stc
loop
aam
lea
fwait
mov
add
icebp
push
add
jns
ret
and
cmc
out
add
mov
popa
jp
or
cli
shl
es
adc
pop
dec
outs
jg
jge
adc
mov
pop
push
in
adc
fdiv
dec
mov
fnsave
jecxz
test
cmp
jl
mov
adc
shl
or
in
mov
inc
sub
sbb
aas
or
cmp
jo
xchg
push
dec
pop
add
cmp
mov
int3
push
fwait
sub
loopne
xchg
dec
pcmpeqw
push
and
sub
cld
popa
mov
and
adc
push
jno
fisubr
pop
xlat
pop
sub
add
cmp
xor
mov
sub
or
adc
call
test
mov
or
adc
lods
mov
ins
adc
gs
pop
(bad)
jo
pop
mov
mov
xchg
jae
aad
cmp
jnp
cmp
repnz
xchg
push
cdq
jns
push
jg
dec
push
pop
movs
xchg
sbb
int3
mov
or
jnp
xchg
sub
mov
movs
std
call
movs
icebp
rol
call
jae
and
inc
test
in
(bad)
in
pop
out
mov
aad
fcom
stc
mov
or
dec
inc
mov
ss
mov
mov
or
adc
mov
or
xor
ftst
pop
dec
mov
leave
jmp
and
dec
xor
sbb
dec
enter
add
out
xchg
jbe
dec
cs
sbb
inc
std
shr
mov
sub
jae
cmp
cmp
push
(bad)
mov
bts
in
sti
scas
imul
cmps
cwde
fnstsw
ja
rol
test
test
retf
out
push
jne
xor
xchg
pop
xchg
pop
mov
cmp
push
lahf
dec
cwde
dec
ss
sahf
in
js
fs
ja
shl
adc
push
cmp
in
mov
imul
lahf
rcl
mov
mov
mov
pusha
inc
and
or
dec
(bad)
sbb
neg
xchg
icebp
mov
mov
int
fs
movs
iret
fsub
mov
mov
dec
pop
cs
pop
icebp
xchg
adc
bound
ins
gs
mov
adc
movs
lea
stos
mov
pop
loopne
out
add
movs
fcom
das
das
dec
jns
and
xchg
neg
lss
addr16
fidivr
jnp
add
in
jo
hlt
addr16
inc
loopne
fld
adc
adc
xor
push
imul
repz
fwait
pop
popf
popa
sbb
inc
cwde
fsubr
pop
sub
into
mov
pop
fdivp
sub
(bad)
sub
cld
gs
push
loopne
jp
xlat
icebp
stos
lahf
sbb
sbb
movs
xchg
or
into
aaa
sti
test
stc
inc
int3
shr
lahf
add
jp
xchg
push
and
add
fcmovne
out
out
inc
int
sub
imul
dec
addr16
inc
scas
cmp
outs
fwait
inc
sub
js
or
fstp
mov
sub
xchg
dec
popf
dec
push
add
int3
into
inc
push
mov
stos
test
test
ja
lods
mov
push
jae
mov
ins
xchg
(bad)
xchg
dec
int
adc
cmps
ins
test
jne
jne
push
test
and
mov
xor
xchg
add
dec
icebp
add
test
push
lods
sub
pop
xchg
or
xor
rcl
cmp
(bad)
outs
arpl
in
adc
cmps
add
lods
data16
es
test
mov
adc
cli
mov
out
jb
popf
jmp
das
out
jns
sub
xchg
fisttp
or
fild
rcr
pop
inc
mov
adc
outs
and
sub
leave
ret
jp
daa
mov
jne
adc
arpl
mov
push
clc
pusha
mov
stos
fsub
jge
xor
adc
mov
mov
xor
nop
xor
lock
pushf
inc
dec
cmp
fisttp
leave
inc
or
ja
push
jmp
(bad)
out
addr16
rcl
dec
pop
out
fstp
cmp
imul
std
xchg
add
hlt
sub
xor
dec
adc
pushf
cmp
jne
lock
shl
stc
mov
jno
mov
movs
dec
out
stc
xor
xchg
pop
sahf
cmp
xor
ja
add
test
mov
mov
mov
xchg
into
pop
dec
xor
stos
sbb
lock
dec
outs
pop
push
cmps
add
and
cli
daa
ins
xchg
push
in
cmps
and
cs
js
mov
mov
adc
mov
xor
fisubr
push
rol
iret
xor
mov
sub
mov
cmps
xor
push
mov
jecxz
or
mov
push
mov
lods
sbb
sbb
or
int
scas
call
or
jns
and
fnop
enter
es
cmp
daa
cmp
mov
lea
or
(bad)
pop
or
jmp
pop
stc
jb
fidivr
stos
aas
ins
cmp
inc
(bad)
ins
jb
in
jmp
in
mov
out
(bad)
dec
and
adc
mov
rcr
or
jg
adc
xor
arpl
test
dec
repz
or
ins
stc
fidivr
push
xor
add
xor
shl
outs
int3
mov
or
jb
push
outs
pop
add
fcmovnu
push
or
add
clc
les
int3
jae
(bad)
fsubrp
push
xor
add
pop
fld
hlt
test
daa
mov
aas
outs
mov
std
clc
int
in
pause
dec
and
pop
cdq
shr
cmp
sub
cmc
cmps
lods
sub
adc
shr
dec
scas
and
and
xchg
jb
xchg
and
inc
pop
arpl
jae
push
out
inc
mov
call
test
lods
dec
mov
fstp
add
sub
xchg
mov
cmp
fld
sub
xchg
jl
cmps
ror
jl
enter
cld
(bad)
out
add
in
cdq
xor
dec
cs
enter
push
in
sub
or
jg
mov
jge
add
xor
ret
scas
ret
loope
mov
fisubr
fwait
inc
jmp
cmp
and
dec
shr
xchg
xor
sbb
jecxz
jmp
in
lds
das
ret
adc
sar
or
inc
jecxz
jmp
cmp
xchg
iret
mov
sbb
xor
xor
xor
cmps
data16
repz
shl
ds
stc
verr
retf
adc
mov
aad
push
xchg
cmp
jno
jae
test
lock
lods
lahf
add
xor
rcr
dec
arpl
or
mov
shl
cmps
jge
add
xor
mov
gs
lock
mov
les
sahf
enter
fld
test
jp
(bad)
xchg
(bad)
in
outs
stos
daa
xchg
dec
cmc
cli
mov
fisub
dec
adc
sub
popf
stos
and
cmp
es
and
sbb
adc
adc
push
lods
les
add
(bad)
fsubr
loope
and
aad
sbb
adc
cld
dec
inc
repz
push
icebp
(bad)
lea
jb
ret
jne
ret
sub
pushf
gs
inc
lds
mov
out
xchg
iret
push
sub
pop
mov
add
sbb
sar
mov
cmp
popa
push
dec
sti
mov
iret
jo
mov
adc
fbstp
cmp
fbld
into
dec
loope
and
cmp
popf
mov
xor
sbb
push
or
sub
adc
mov
push
dec
dec
mov
outs
cmp
pop
dec
mov
fidivr
in
sar
dec
xchg
lahf
push
xor
pop
in
cdq
rol
mov
mov
bound
ror
xchg
push
lods
dec
scas
test
pop
scas
aas
in
popa
jecxz
and
or
xchg
aam
(bad)
pusha
loope
mov
cmp
lods
or
rcl
fadd
or
cmps
push
in
in
inc
mov
ins
jg
push
ss
cs
hlt
sahf
fcomp
and
xchg
cmp
(bad)
cmp
or
push
xchg
cmp
mov
jno
jo
sub
sub
sbb
xchg
xor
(bad)
or
sub
dec
stos
adc
pop
inc
int3
aaa
shl
cmp
ins
inc
in
loop
(bad)
int
sub
jmp
or
int3
aas
int3
aas
xchg
(bad)
stos
mov
inc
xchg
sub
ret
sti
push
fisubr
sub
rcr
arpl
leave
lds
add
ds
dec
mov
sub
xchg
add
cmp
mul
sbb
pop
loop
adc
xchg
jecxz
mov
retf
add
icebp
loope
add
cmp
out
fcom
leave
outs
push
push
scas
mov
inc
jle
pop
mov
adc
sti
nop
or
stos
stos
inc
int
xchg
add
and
adc
imul
push
into
pop
push
xor
add
call
dec
adc
xlat
mov
pushf
add
inc
ror
jl
mov
push
cdq
sbb
ret
jae
rcr
and
pusha
test
and
mov
movs
inc
xor
jl
inc
test
mov
cmps
pop
int
loopne
lds
cwde
mov
dec
jge
int
vaesdec
les
imul
lock
jnp
pop
ins
push
(bad)
push
cmp
iret
dec
jns
aaa
stos
test
sbb
loop
cmp
fwait
lahf
sbb
pop
aam
ss
inc
and
inc
popa
sbb
ins
popf
cmps
inc
cmps
dec
sbb
mov
pop
pop
jmp
aas
shr
addr16
add
sti
hlt
sbb
test
xlat
mov
das
inc
adc
fucom
jge
sar
clc
add
sbb
outs
pusha
xlat
lds
mov
fwait
jmp
push
gs
cs
data16
scas
arpl
cmp
bound
pushf
mov
jae
mov
pop
and
mov
inc
adc
imul
ret
and
add
cmp
xor
in
mov
sub
pop
(bad)
mov
sbb
gs
scas
push
fwait
(bad)
mov
sti
mov
js
inc
mov
adc
rcr
fnstsw
popa
stos
xor
jl
jae
cmp
(bad)
shl
sub
adc
mov
fcom
ret
mov
inc
inc
push
pop
dec
retf
adc
fdiv
dec
jnp
icebp
xchg
sar
loop
cli
ret
das
fs
mov
test
mov
xor
hlt
mov
sub
in
adc
adc
mov
mov
xor
stos
sub
std
inc
jp
xchg
inc
mov
and
in
ss
inc
or
inc
cwde
mov
xchg
cmps
sbb
push
bound
add
push
push
loope
pop
adc
push
dec
enter
pop
in
push
(bad)
and
(bad)
mov
adc
mov
add
inc
or
jmp
(bad)
in
adc
adc
data16
push
cmp
sbb
(bad)
mov
stos
sub
pushf
and
or
jecxz
pop
push
inc
jb
or
enter
es
and
adc
stos
in
fdiv
mov
out
les
aam
nop
aad
imul
sbb
add
xchg
push
test
push
sbb
fcmovnb
jmp
stc
(bad)
fidivr
dec
int3
add
jbe
mov
nop
inc
mov
into
sub
lods
cdq
or
xchg
mov
daa
in
ror
xor
cmps
xchg
ja
lods
xor
adc
ret
jge
push
scas
retf
jne
cmps
das
adc
xchg
ret
xor
add
call
cmps
movs
imul
dec
mov
lea
sbb
cmp
hlt
sahf
pop
xchg
jns
fld
lods
add
sti
iret
jl
xchg
in
out
push
xchg
mov
mov
jl
xor
test
xchg
lock
jo
cld
daa
fs
in
xor
popf
mov
fmul
dec
mov
(bad)
out
cmp
push
xchg
loopne
push
sub
xor
sar
jae
mov
mov
xchg
shl
out
mov
repnz
data16
jne
or
test
fst
pop
inc
push
add
and
mov
sbb
int3
ret
mov
jb
mov
pop
rcr
mov
shl
or
test
xor
ja
inc
xchg
sub
rcr
div
jecxz
pop
bound
inc
xor
push
or
xchg
retf
retf
sub
push
not
cwde
xchg
dec
mov
mov
std
and
sti
leave
stc
ss
push
xchg
push
movs
inc
rol
jle
inc
lock
icebp
sbb
xchg
dec
add
aas
xor
dec
sbb
inc
fmulp
xchg
outs
push
xor
add
gs
outs
movs
dec
add
lahf
shl
loopne
push
push
cmp
call
(bad)
retf
mov
or
or
shl
gs
fwait
push
mov
jg
ror
loop
dec
ss
push
ins
adc
add
inc
call
push
mov
sbb
xchg
xchg
sahf
in
enter
mov
retf
rol
loope
or
xchg
xor
inc
pop
sub
push
dec
mov
dec
xchg
mov
inc
lock
repnz
inc
loopne
cmp
call
sbb
popf
imul
leave
(bad)
jl
mov
xchg
inc
outs
mov
ds
add
inc
repz
jo
cmps
gs
shr
jno
xor
mov
mov
test
jmp
mov
mov
mov
cmps
push
xor
scas
aaa
dec
test
hlt
xor
xchg
adc
mov
xchg
sbb
inc
jle
push
nop
mov
ficom
inc
pop
push
jle
aaa
lods
icebp
adc
je
mov
out
ret
dec
imul
mov
fld
scas
jne
js
out
dec
out
(bad)
inc
(bad)
fldcw
jmp
movs
jl
pop
fadd
fidiv
mov
or
push
mov
or
fmul
stos
fcmovbe
xchg
mov
sbb
std
jbe
vmovaps
push
movs
dec
inc
and
(bad)
icebp
push
mov
xor
sub
les
aaa
ret
(bad)
js
pop
sbb
ret
ret
sahf
sar
sub
xchg
xor
jge
mov
mov
ds
jle
cwde
lods
retf
(bad)
jge
sti
and
cmp
fs
js
bound
pop
ja
inc
adc
mov
pop
or
icebp
cmc
push
ret
sbb
lds
mov
popf
adc
push
pop
mov
pop
add
daa
jle
sti
test
std
leave
adc
(bad)
test
cmp
mov
cmp
in
and
inc
sbb
jg
lea
mov
mov
adc
sbb
dec
jae
stc
push
cmps
cli
cmp
pop
adc
dec
fld
fs
push
das
or
test
jne
mov
movs
test
xchg
jne
jo
movs
loopne
call
jg
adc
into
inc
and
xchg
mov
push
sub
scas
dec
push
jmp
outs
test
mov
mov
mov
ins
inc
iret
xlat
xchg
das
sub
lahf
test
xlat
jns
pop
sub
shr
retf
xor
(bad)
push
int3
pop
xor
sbb
lahf
xor
loopne
or
pop
daa
xchg
call
inc
sub
jmp
cmp
dec
loopne
sar
movs
test
adc
mov
out
data16
add
sti
inc
jae
arpl
in
(bad)
faddp
pslld
arpl
xchg
(bad)
sahf
sub
jo
and
ret
aaa
sbb
and
pop
and
aas
xchg
push
sub
inc
std
cmps
cmps
pop
xor
mov
fdiv
xor
push
or
int
xchg
push
jb
push
push
xchg
into
div
push
xor
sti
ds
jne
hlt
gs
outs
mov
hlt
jnp
cmp
dec
repnz
xor
sahf
jb
xor
popa
data16
out
lahf
outs
in
xor
maskmovq
not
push
push
pop
sahf
push
fsub
inc
bound
mov
sbb
cmps
repnz
imul
pop
mov
(bad)
jnp
gs
jle
sub
add
outs
add
xchg
out
ret
pop
sbb
adc
lahf
stos
fstp
fsub
into
cmp
in
add
test
int3
sbb
int3
xchg
sahf
and
daa
movs
fisttp
mov
sub
cs
fwait
in
inc
je
out
mov
jecxz
xchg
gs
xor
jle
sbb
sbb
cmp
pop
cmps
mov
push
ds
sar
outs
cmps
add
xlat
les
dec
push
inc
hlt
cmc
fldln2
scas
(bad)
push
in
outs
push
les
stos
fld
or
scas
(bad)
jmp
aas
fucomip
stos
cld
std
sub
or
ins
cli
and
adc
fimul
jg
xchg
(bad)
cld
inc
movs
or
add
jmp
fldenv
cmp
ror
mov
je
(bad)
xor
mov
mov
ret
mov
mov
pop
pop
push
cmp
xor
lods
call
(bad)
add
shr
add
jge
repz
or
mov
or
out
arpl
enter
js
pop
out
adc
pop
push
repnz
adc
dec
cs
mov
jbe
jle
aam
cmps
mov
rol
and
sub
push
inc
inc
lahf
gs
out
sub
je
aas
in
jp
popf
rcr
and
jp
pop
popf
pop
jbe
add
int
pop
cwde
(bad)
fcom
fisub
mov
cmp
xchg
cmp
mov
jge
bnd
fsub
stos
pop
cmp
sub
push
ficomp
sbb
and
mov
ss
popf
adc
enter
xchg
imul
je
aas
fild
mov
push
mov
and
jp
sbb
mov
jb
jns
inc
and
lods
idiv
and
inc
cwde
aad
jmp
fisttp
mov
xor
adc
xchg
sti
inc
popa
push
aam
fwait
cmc
(bad)
or
xor
leave
ins
mov
js
stc
jnp
mov
(bad)
mov
mov
pop
scas
jle
push
outs
repz
cmps
or
mov
cmps
test
arpl
loopne
aam
imul
sti
cmc
adc
loope
outs
inc
inc
push
mov
bound
cdq
jmp
(bad)
or
jb
loop
fs
inc
jno
jmp
cmp
add
test
cmc
icebp
push
mov
cdq
jge
icebp
dec
pop
jno
neg
mov
and
outs
in
shr
shl
rcl
loop
sahf
sbb
or
inc
data16
(bad)
call
or
lods
xchg
pop
rcl
jle
jo
mov
fimul
test
cmp
iret
ror
adc
sbb
xchg
mov
(bad)
pop
jmp
jl
ficom
hlt
cli
xor
test
dec
sub
repz
cmps
dec
into
dec
lahf
sbb
div
cld
cmp
ror
mov
inc
xor
dec
sahf
(bad)
pop
iret
es
mov
das
push
into
jge
or
les
xor
loop
repnz
pop
sub
lods
mov
gs
outs
nop
in
pop
sti
adc
and
fild
cmp
and
xchg
std
jle
push
cmp
push
movs
(bad)
xlat
jl
pop
in
pop
xor
push
daa
fidiv
imul
and
or
lahf
je
push
add
jecxz
sbb
gs
mov
or
dec
int3
movs
mov
out
inc
neg
mov
cmp
call
adc
add
jp
outs
fst
mov
pushf
xor
mov
movs
ins
xor
cmps
and
daa
scas
lods
push
cmp
inc
xchg
cmp
jne
popa
retf
lea
imul
sbb
or
pop
mov
outs
dec
inc
(bad)
mov
aam
or
mov
xor
call
mov
fdivr
inc
ins
pop
cmp
xchg
sti
test
repnz
test
sbb
in
jl
jp
add
std
clc
jmp
iret
and
(bad)
pop
add
into
rcl
fisub
sbb
fisttp
jnp
mov
dec
daa
icebp
sar
cmp
mov
pop
psubd
cmp
xor
sbb
(bad)
repz
xchg
mov
add
lds
gs
sbb
and
aam
ret
mov
cmp
es
(bad)
(bad)
retf
inc
xchg
jmp
or
pop
adc
inc
push
sbb
gs
jno
mov
aam
fnstsw
scas
pop
je
mul
xchg
jge
or
or
mov
jb
mov
lods
mov
test
aad
imul
hlt
inc
fisub
ins
jl
dec
pop
aaa
rol
dec
ret
sar
jb
aaa
mov
dec
lea
add
into
dec
adc
out
sbb
test
cmp
test
cli
xchg
inc
bound
xor
outs
ss
mov
loope
fisttp
push
inc
stos
fcmovbe
sbb
in
sbb
add
dec
sbb
popa
hlt
jo
pop
mov
enter
movs
mov
push
iret
mov
fidivr
sbb
rcl
inc
mov
xor
lods
out
inc
hlt
in
xchg
int3
pop
add
fidivr
bound
or
iret
dec
hlt
add
dec
mov
int3
retf
(bad)
aaa
mov
cmp
inc
fstp
icebp
mov
mov
dec
jmp
cmp
jp
in
mov
dec
fbstp
sub
enter
repnz
fst
or
repnz
mov
stos
cmp
dec
mov
fwait
push
ret
aad
and
fs
inc
int3
xchg
ret
cmps
neg
das
enter
push
(bad)
push
cdq
out
and
imul
addr16
pop
mov
fcmovbe
sub
push
mov
fisttp
xchg
xor
jge
mov
cmps
cld
(bad)
lea
add
or
mov
push
or
jno
pop
sbb
retf
std
rcl
movs
push
inc
ror
loopne
dec
stos
mov
rcl
xor
test
and
rdpmc
mov
and
mov
and
push
inc
push
outs
cmp
sahf
test
aaa
ss
lods
repz
outs
arpl
aam
sti
pop
clc
js
in
fistp
ss
jge
cmp
popf
call
or
aad
call
inc
cmps
stc
and
xchg
xchg
push
mov
xchg
pushf
mov
mov
rol
mov
(bad)
dec
data16
aaa
dec
sbb
pop
mov
(bad)
enter
addr16
lods
or
je
ja
out
jb
call
push
or
xor
(bad)
outs
sbb
add
in
ret
mov
xchg
sub
sbb
jecxz
mul
rol
(bad)
xor
mov
cmp
outs
jp
push
mov
gs
jns
adc
shr
in
xchg
lds
int3
adc
xor
(bad)
mov
mov
pop
in
outs
xor
push
pop
inc
mov
ficom
mov
push
pop
fistp
in
or
sub
jp
or
pop
adc
jo
cmp
pop
jb
stos
mov
mov
int3
test
or
out
out
and
call
arpl
sub
cmps
jb
stos
sub
jl
retf
cmc
jp
mov
movs
jle
jne
dec
adc
mov
jge
loope
dec
sar
cmc
call
sbb
in
shl
push
(bad)
push
imul
idiv
or
push
retf
jge
fmul
cmp
fcomp
pop
inc
push
sbb
cmc
repz
jae
xchg
in
fdiv
les
add
mov
ret
jns
bnd
dec
push
leave
push
cmp
dec
ss
xchg
jmp
add
aam
dec
test
repz
int
mov
shl
sbb
jnp
mov
fcmovb
ss
ficomp
cmp
aam
push
and
call
es
pop
stos
test
cmp
jl
push
sub
dec
test
mov
or
test
dec
pop
fdivr
xchg
fnstcw
dec
inc
xor
in
sbb
fistp
(bad)
mov
cmc
mov
inc
xor
movs
stos
stc
pop
sub
lahf
jno
and
mov
push
xor
(bad)
popa
add
daa
shl
mov
push
test
cmps
adc
xchg
xlat
inc
push
mov
scas
sbb
pop
cdq
inc
pop
cmp
xchg
push
out
pop
leave
fld
xabort
jl
pop
pop
adc
or
dec
pop
loop
js
rol
neg
stos
in
adc
out
xchg
jmp
push
mov
pop
int
xchg
out
push
mov
mov
mov
pop
scas
inc
pop
xchg
cmps
fadd
mov
push
sub
jmp
push
fst
add
je
add
imul
ins
add
and
push
or
(bad)
and
mov
(bad)
jo
ss
pop
inc
mov
push
pop
out
dec
pop
sub
sahf
loope
inc
shl
dec
loope
mov
add
xor
dec
ins
fild
int
mov
stos
fisub
or
jge
sti
sbb
and
xchg
or
push
jmp
xor
push
or
out
mov
sub
shl
add
dec
mov
imul
mov
data16
jbe
call
mov
int
sahf
push
cmp
stos
mov
adc
outs
jne
cli
(bad)
mov
nop
scas
mul
xor
sbb
out
inc
sbb
or
push
push
mov
push
data16
fsub
scas
das
rcl
inc
mov
repnz
std
xor
popf
xchg
in
std
xchg
std
jne
push
test
or
push
ins
cs
sbb
add
mov
mov
pop
or
xchg
pop
jbe
push
out
fwait
in
and
movs
or
stos
dec
push
ds
stos
xchg
and
pop
xor
sbb
cmp
xchg
or
xchg
or
add
in
mov
cdq
gs
icebp
shl
sub
dec
in
retf
inc
mov
push
call
div
fs
mov
int3
cmps
cmps
cwde
shl
pop
push
cs
stos
mov
inc
push
fwait
out
xchg
mov
fst
pop
push
dec
shl
inc
dec
call
adc
icebp
xlat
outs
aas
call
mov
retf
outs
retf
(bad)
push
xor
adc
inc
retf
jmp
mov
outs
xor
push
push
cmp
mov
adc
sbb
cld
mov
sbb
loopne
inc
jecxz
jl
jecxz
pop
leave
mov
out
loop
cwde
out
pusha
pop
lods
mov
mov
cmp
(bad)
loop
aam
xchg
ret
lods
fist
(bad)
in
sbb
adc
pop
xor
xchg
cwde
das
rcl
pushf
xchg
js
ret
lods
out
xchg
popf
daa
imul
mov
and
test
push
loopne
mov
cwde
fist
sub
adc
inc
mov
mov
(bad)
mov
adc
sub
sbb
inc
rol
in
(bad)
mov
imul
aaa
or
(bad)
aad
and
xlat
retf
jmp
inc
stc
lahf
xor
aam
push
and
call
cdq
(bad)
sub
or
cmp
push
stc
adc
mov
pop
inc
or
sti
sahf
jmp
ret
xor
lahf
mov
cdq
popf
fild
push
cmovbe
jl
adc
imul
mov
cmp
pop
dec
add
stos
ret
jo
ins
loop
loope
cmc
cmps
xchg
sub
push
cmps
cmp
cld
sbb
(bad)
jge
and
and
les
les
loopne
enter
ins
lods
mov
adc
mov
cli
shl
shl
lea
mov
push
jb
add
in
push
outs
ret
(bad)
fisttp
push
mov
dec
sti
pop
mov
push
mov
loope
nop
jo
int3
outs
ds
out
pop
xor
aam
out
dec
mov
loopne
out
cmp
std
mov
push
and
add
push
xchg
add
pop
cmps
sub
enter
xchg
jecxz
sbb
mov
xlat
test
and
bound
mov
sub
jo
xchg
iret
push
sar
icebp
dec
pushf
stos
jl
test
arpl
and
mov
and
push
add
aad
mov
push
add
xchg
or
fadd
xor
enter
inc
call
sub
add
repz
mov
or
in
push
jno
mov
rcr
in
dec
sar
test
ret
or
push
mov
sbb
out
add
lock
push
aas
and
xchg
adc
sub
imul
shr
mov
pop
push
push
jp
in
sbb
outs
in
enter
sub
sub
test
sub
stos
(bad)
lock
jno
ret
mov
cmps
adc
mov
lahf
xchg
jnp
aam
sbb
mov
inc
inc
inc
(bad)
lods
jno
push
mov
(bad)
cmp
dec
sbb
cwde
ficom
add
fcomp
mov
pop
push
mov
inc
outs
pop
or
fnstenv
loope
repz
loopne
stos
fs
mov
adc
fs
pop
fcmovnu
nop
sub
movs
mov
adc
sar
push
mov
data16
cdq
in
xor
rcr
sub
jmp
and
adc
gs
hlt
push
xchg
sbb
dec
retf
mov
out
retf
or
(bad)
xchg
(bad)
repz
retf
ins
je
pop
aad
cmp
dec
fstp
test
xor
inc
loop
scas
adc
rcr
retf
(bad)
mov
push
inc
imul
mov
add
les
push
cmc
(bad)
jp
cmp
pusha
repnz
ficom
mov
js
xchg
fwait
xchg
jns
xchg
leave
jnp
or
test
or
cmp
dec
mov
aam
fidiv
outs
(bad)
push
mov
or
mov
sbb
jne
jne
adc
inc
nop
into
mov
das
dec
aad
retf
mov
push
jnp
out
mov
and
inc
fstp
mov
fld
aad
test
jae
jns
ins
xchg
mov
adc
lds
and
push
push
add
adc
push
hlt
leave
sbb
(bad)
in
xchg
fdivr
js
pop
mov
imul
push
jl
stos
cmp
jne
pushf
mov
out
mov
dec
loopne
lahf
aaa
or
cmp
fs
cli
movs
cmp
mov
sbb
jae
shl
and
pop
jg
xchg
and
adc
cmp
and
arpl
or
aam
dec
mul
out
inc
retf
sti
in
inc
in
not
fld
and
sti
in
retf
inc
ins
loop
inc
adc
push
xchg
mov
and
jmp
out
xchg
int3
call
mov
inc
and
ds
test
xor
push
daa
imul
outs
pop
loope
fcom
sti
ins
retf
fmul
or
mov
mov
jecxz
adc
adc
retf
lock
leave
mov
call
ret
inc
movs
fcom
in
pop
or
and
push
outs
sub
push
pushf
(bad)
push
test
(bad)
loopne
inc
std
xor
dec
cwde
or
(bad)
cmp
jg
stos
sub
das
inc
push
hlt
outs
dec
mov
icebp
adc
ret
stc
sub
cld
adc
mov
cmp
call
movs
je
inc
dec
in
xchg
aad
sbb
movs
add
or
repz
xchg
mov
scas
xor
pushf
push
lock
icebp
jb
out
dec
jo
in
inc
add
jbe
ror
(bad)
mov
xor
xlat
idiv
sar
pop
sbb
das
sub
nop
int3
jle
push
jmp
jp
outs
rcr
jo
inc
or
pop
js
and
xchg
mov
and
das
sbb
std
test
shr
inc
push
dec
ds
mov
jae
mov
and
lods
retf
ret
(bad)
push
out
iret
rcl
hlt
pop
pop
ins
out
mov
imul
adc
xchg
jo
retf
push
test
clc
push
hlt
cmp
mov
icebp
mov
pop
sahf
pop
mov
outs
mov
dec
retf
jae
test
repnz
nop
ins
mov
dec
push
ins
jl
rol
push
jbe
adc
jge
xor
loopne
fistp
adc
ja
xchg
xchg
xor
and
mov
aam
cmp
pop
jno
mov
jle
test
mov
push
fs
pop
mov
popf
call
jno
sub
imul
stos
xor
aas
pop
loop
inc
sti
lds
ret
sbb
outs
mov
in
xor
test
pop
inc
push
cwde
aas
mov
dec
mov
fst
rcl
out
xor
scas
push
shl
pop
mov
push
push
pop
or
cmp
mov
or
xchg
sub
xchg
rol
mov
sbb
mov
imul
addr16
mov
sar
pop
loopne
jnp
fcmovb
sub
jb
xor
(bad)
push
inc
hlt
cmp
push
(bad)
(bad)
jnp
pop
xlat
adc
adc
(bad)
jae
scas
inc
cmp
sbb
inc
test
dec
icebp
test
cmp
je
adc
cmc
adc
leave
sbb
leave
or
clc
out
cli
enter
pop
inc
clc
(bad)
fucompp
xchg
pop
inc
xor
cmp
mov
or
mov
enterw
sbb
nop
jbe
and
add
cmp
pop
leave
or
in
mov
in
loopne
push
sub
adc
jmp
icebp
jb
ss
enter
dec
mov
es
push
add
leave
jb
sbb
mov
cmp
leave
mov
mov
sub
ret
loop
pop
pop
and
jg
jae
imul
add
lock
mov
inc
push
pop
or
push
fidivr
outs
xor
(bad)
test
sti
ror
xor
jne
jmp
add
(bad)
push
jmp
cmp
repz
mov
je
xchg
pop
or
test
ja
mov
dec
out
dec
outs
std
mov
jnp
adc
popf
sbb
mov
jb
xor
sub
push
or
jmpw
inc
repnz
(bad)
sbb
inc
rcr
inc
inc
loop
gs
cmp
fmulp
mov
cdq
and
ins
mov
lods
pop
movs
retf
daa
imul
fwait
jbe
mov
push
fneni(8087
jb
xor
shr
enter
add
pop
jp
sahf
ins
and
(bad)
xchg
fwait
ins
push
mov
mov
sbb
jno
sub
add
xchg
fwait
sbb
test
mov
cli
mov
mov
(bad)
movs
and
fdivr
sbb
add
cdq
popa
sub
jnp
mov
xor
enter
imul
inc
jbe
cmp
inc
dec
dec
jp
dec
xchg
(bad)
jne
and
jno
push
test
xor
or
inc
inc
add
stos
pop
jnp
fist
push
mov
fisub
sti
pop
inc
std
mov
iret
sub
mov
lea
retf
sub
ds
and
inc
and
pop
setle
mov
pushf
mov
dec
mov
sbb
fdivr
fst
mov
cmps
fsub
gs
sar
xor
or
push
and
(bad)
inc
shr
shr
test
lods
(bad)
mov
ss
adc
stos
mov
fisubr
fist
cld
neg
sahf
cmp
sti
inc
sbb
enter
xlat
cwde
add
add
mov
sub
into
pop
jbe
push
or
jmp
mov
lock
loopne
pop
enter
lds
mov
jmp
fcom
(bad)
cs
enter
xlat
sbb
dec
ror
out
test
or
jg
cmps
sub
shl
and
xchg
fwait
xchg
mov
mov
ins
mov
daa
or
clc
xor
inc
shl
jl
pop
pop
loopne
cmp
das
out
sub
scas
or
inc
je
into
hlt
jge
pop
sub
bnd
fmul
test
nop
out
mov
inc
out
mov
(bad)
adc
aam
sub
push
sar
inc
ss
mov
inc
js
cmp
xchg
xor
sti
sub
enter
push
sbb
pop
(bad)
mov
pusha
push
jno
ficom
fadd
adc
and
test
jmp
loopne
mov
retf
and
(bad)
clc
mov
or
xchg
in
push
pop
jmp
inc
out
jg
or
xor
or
mov
xchg
jne
stos
cwde
hlt
(bad)
sbb
popf
retf
jnp
sub
std
fadd
xchg
and
sbb
in
and
xchg
add
into
repz
into
test
ss
push
jae
(bad)
jnp
das
mov
test
add
inc
ins
lea
cmp
fistp
push
addr16
xlat
movs
pop
mov
mov
sbb
dec
xor
inc
arpl
pusha
shr
adc
jmp
aad
mov
in
das
sbb
mov
rcr
retf
nop
movs
mov
sub
ficom
test
rol
aam
call
int3
xor
mov
or
push
sbb
dec
xlat
push
nop
inc
retf
fmul
mov
pop
mov
jecxz
pop
adc
outs
out
sub
mov
jmp
adc
retf
push
cmp
pop
sub
test
addr16
sub
leave
aam
xchg
adc
inc
cli
or
and
ins
add
scas
test
in
or
loope
push
mov
cmp
loope
cmps
leave
jno
inc
nop
pop
cli
and
stc
dec
dec
xchg
jecxz
cmps
js
enter
xor
xor
push
mov
outs
push
mov
sbb
inc
xlat
inc
scas
addr16
sub
jmp
push
mov
lds
xor
inc
retf
scas
jmp
pop
sub
stos
sbb
mov
outs
fs
sti
mov
icebp
cli
cs
adc
pop
loope
call
(bad)
int3
mov
popa
ss
(bad)
push
fimul
cmps
and
pop
sbb
jp
not
in
lock
jecxz
(bad)
cld
div
pop
dec
mov
xchg
enter
ret
fmul
xor
pop
mov
xchg
dec
pusha
out
push
retf
ins
retf
or
push
ins
iret
cmp
jl
xchg
loopne
not
jge
scas
out
mov
mov
jno
jnp
jl
out
out
test
stc
push
adc
daa
push
es
out
inc
retf
fild
dec
mov
ret
jmp
jb
xchg
(bad)
outs
dec
add
sub
repz
stos
repz
iret
jno
or
outs
(bad)
cmp
xor
xor
adc
fist
push
mov
data16
mov
or
int3
adc
mov
xchg
rol
and
(bad)
rcr
sbb
es
dec
push
xchg
pop
ret
xchg
xchg
les
push
outs
fst
and
mov
fldcw
inc
and
mov
inc
cwde
mov
and
fistp
adc
addr16
iret
nop
loopne
lahf
adc
push
imul
jl
out
sub
int3
xor
add
pop
or
pop
retf
cmp
scas
pop
or
lds
push
dec
push
xchg
les
enter
adc
inc
adc
xchg
scas
out
and
stos
shl
jns
xor
xchg
adc
outs
push
mov
add
cwde
mov
mov
clc
arpl
fstp
cli
sub
xchg
retf
mov
mov
scas
movs
pop
rol
xor
cmps
nop
arpl
jg
push
fdiv
rcl
mov
dec
or
sbb
xor
in
mov
mov
and
adc
mov
jp
and
xchg
cmps
leave
sbb
neg
mov
loopne
(bad)
add
pop
in
pop
setg
xchg
lahf
xor
push
and
push
and
shl
daa
jo
and
std
popf
push
cmp
mov
cmp
iret
xor
cmp
cmp
data16
pushf
sahf
out
jb
les
mov
aas
das
ret
aad
push
outs
adc
add
loop
aaa
and
ffree
fdiv
pop
stos
pop
add
std
dec
arpl
add
pop
xchg
movs
mov
cdq
fild
mov
xor
stc
aad
imul
loop
xchg
pop
lods
inc
lea
(bad)
lea
popa
lods
pop
or
xchg
pop
add
sbb
cmp
sbb
xchg
push
xor
mov
and
fadd
test
jo
and
jb
push
nop
and
jmp
add
test
push
pop
cmp
xchg
movs
(bad)
repnz
out
fld
rcr
jno
mov
outs
in
add
frstor
std
jmp
xor
pop
xchg
bound
leave
and
ja
(bad)
push
mov
lock
jge
dec
sbb
jno
push
(bad)
neg
cmp
jl
inc
stos
das
mov
mov
xchg
xchg
inc
hlt
mov
mov
out
jno
xchg
cmc
hlt
scas
jno
sub
sub
dec
sbb
out
enter
jno
sbb
dec
lahf
add
mov
jmp
pop
jle
mov
loop
leave
movs
add
push
push
mov
sub
push
movs
jb
cmp
ds
test
je
or
(bad)
add
jbe
mov
jb
cmp
(bad)
retf
(bad)
inc
inc
cmps
or
iret
xlat
jp
scas
movs
sti
push
fsub
fstp
mov
stos
inc
leave
stos
add
cmp
fcom
add
or
and
popa
or
xchg
imul
or
push
sar
jmp
loop
movs
mov
cmp
(bad)
cmp
jecxz
mov
xor
dec
cmp
retf
nop
call
enter
test
fsub
leave
lods
add
pop
sub
mov
clc
(bad)
scas
ret
xor
pushf
jmp
and
pop
cdq
jmp
adc
cli
xchg
test
push
mov
pop
fmulp
push
pop
(bad)
loop
fld
jp
(bad)
rep
ret
int3
into
rol
ds
adc
push
stc
ins
fst
cmp
fiadd
jmp
xor
push
mov
fild
jmp
movs
gs
sti
sahf
rcr
xor
lods
jne
ins
xchg
lea
into
test
add
loopne
push
cmp
jg
jo
and
sub
jae
xor
push
idiv
icebp
mov
jo
sub
pushw
xor
pop
jns
aad
inc
jecxz
pop
and
int
test
loope
jg
sar
sbb
ins
mov
shl
mov
jne
sbb
jmp
or
outs
dec
std
inc
pop
push
in
mov
ds
jecxz
mov
fld
sub
xor
mov
cmp
jbe
mov
xlat
sar
jns
pop
or
(bad)
pop
jmp
lds
popf
pop
mov
mov
xchg
lea
stos
or
stc
dec
dec
inc
aam
dec
add
inc
hlt
mov
push
pop
retf
jge
jl
jne
sbb
pop
shr
and
xchg
fdivr
clc
xor
cli
jge
xchg
leave
mov
sub
call
xchg
xlat
jp
mov
inc
pop
push
adc
jmp
retf
stc
test
xor
sbb
lods
pop
push
enter
xor
pcmpgtw
bound
repnz
cmp
cld
inc
add
cwde
add
shl
cmps
adc
cmp
mov
mov
xor
jmp
dec
jnp
aad
loopne
fistp
cld
lahf
int3
push
jge
xor
add
dec
jb
mov
sar
in
push
xchg
inc
xchg
dec
push
(bad)
pop
idiv
pop
ja
cdq
out
scas
sub
leave
sbb
mov
pop
sub
pop
in
xchg
mov
mov
dec
inc
mov
xor
push
pop
push
stc
adc
fild
scas
icebp
xor
ret
cmp
push
push
ins
gs
int
aam
aam
fst
cmps
jle
sub
dec
ins
cmp
push
rol
repz
movs
jge
mov
lods
retf
pop
jmp
push
mov
fimul
sub
adc
lods
pop
mov
cdq
not
clc
sbb
and
push
imul
sbb
addr16
pop
inc
xor
scas
xlat
mov
fs
sbb
js
inc
inc
mov
call
mov
mov
mov
push
jno
mov
test
sbb
movs
out
xor
lea
cmp
push
dec
jne
push
sub
ins
push
fs
xchg
popf
js
xchg
xchg
inc
inc
sub
rcl
mov
dec
iret
mov
stos
push
imul
sub
sahf
ss
and
xchg
je
js
frstor
aam
fbstp
push
or
cmovp
xchg
clc
jo
(bad)
nop
jb
sahf
mov
loopne
push
or
jge
lahf
inc
(bad)
jg
jo
xchg
and
fmul
mov
frstor
in
push
cmc
stos
test
sahf
adc
or
dec
jle
movs
dec
int
pop
mov
push
or
pop
clc
push
sbb
cmp
push
retf
ret
xor
int
loop
lods
add
jae
nop
aaa
sub
enter
inc
shl
mov
popa
(bad)
out
loopne
dec
sub
dec
sti
test
lahf
leave
dec
ffree
rcr
xor
jae
test
xchg
sub
sub
dec
sub
(bad)
cmp
push
stos
jle
add
cdq
or
test
mov
bound
sub
sub
pop
and
mov
cli
xor
add
sub
adc
call
addr16
div
repnz
cmp
cmp
stc
jbe
icebp
(bad)
(bad)
jp
add
adc
and
in
xchg
test
jns
cmp
sub
addr16
xor
dec
mov
inc
push
mov
int3
cwde
dec
pop
jp
call
retf
pop
enter
les
or
cmp
or
jns
dec
mov
mov
(bad)
dec
fwait
mov
fcmovnu
dec
sbb
pop
mov
sub
popa
mov
mov
mov
pop
stos
xor
xchg
jg
jmp
mov
add
jp
sar
gs
add
loope
int
loope
mov
sbb
cmp
mov
pop
pop
cmc
mov
xchg
jle
push
cmp
dec
scas
in
dec
test
cmps
shl
push
sbb
push
or
sub
jne
out
imul
push
add
shr
out
inc
add
test
es
mov
outs
rcl
sbb
sar
sub
sbb
push
movs
mov
add
rol
or
sahf
jge
inc
outs
not
mov
inc
arpl
addr16
inc
inc
inc
inc
and
mov
sub
mov
jl
push
mov
sub
ret
scas
xor
jge
add
mov
sub
inc
mov
aas
pop
xchg
adc
fistp
lea
jl
mov
daa
popa
sbb
bound
les
sahf
jae
das
push
add
retf
dec
aas
mov
sti
dec
mov
jns
xor
ss
shl
scas
dec
and
xor
or
push
or
mov
dec
mov
inc
push
ss
data16
shl
jns
dec
inc
add
mov
pop
cmp
cli
add
dec
jnp
push
cmp
data16
aam
in
push
retf
pop
fdiv
int
sbb
mov
and
clc
cs
cmps
dec
cmp
cmc
cmc
jmp
jne
stos
mov
mov
mov
pusha
shr
or
call
movs
mov
or
(bad)
xor
sbb
or
push
rcl
add
adc
scas
(bad)
jg
xor
retf
fwait
mov
or
cwde
ins
ror
aas
sub
mov
loope
pop
(bad)
scas
call
sbb
inc
ja
add
sbb
pop
scas
popf
dec
sbb
mov
leave
fwait
aam
aaa
dec
push
mov
fwait
pop
nop
(bad)
out
inc
lahf
jl
sbb
cmp
shl
movs
test
lahf
adc
into
add
xor
mov
dec
(bad)
shl
xchg
pop
leave
jmp
xchg
jnp
fnsave
xchg
sbb
nop
cmp
stos
fdiv
outs
xchg
cmp
sbb
aad
ins
add
cmp
mov
ret
or
jl
push
fnsave
pop
adc
fs
nop
mov
pop
je
sbb
xchg
mov
xor
loopne
pop
(bad)
fst
in
jge
dec
int3
das
leave
int
in
(bad)
sti
mov
mov
fdiv
out
inc
icebp
or
push
lea
pop
mov
push
xchg
sahf
jmp
xchg
mov
xlat
leave
adc
(bad)
jno
xor
outs
adc
lea
mov
leave
loope
pop
arpl
jo
jg
mov
push
mov
and
ficomp
mov
sbb
test
mov
js
shl
fwait
(bad)
pop
dec
xchg
inc
fwait
imul
cmp
or
xor
sbb
dec
popa
daa
call
out
repz
nop
xlat
fcmove
rcl
xor
dec
cmp
(bad)
mov
and
inc
push
add
stos
fucomp
inc
or
call
shr
lods
cmp
cld
lods
sub
int
outs
inc
enter
mov
push
mov
mov
(bad)
and
push
pusha
imul
ret
dec
dec
xor
cmp
inc
imul
jbe
fist
test
daa
inc
sbb
pop
iret
pop
pop
cmp
out
sahf
enter
lods
adc
sbb
cmp
jne
bound
(bad)
in
and
sbb
or
lea
aam
lods
inc
mov
xor
inc
push
aaa
ret
sbb
or
push
push
and
add
bnd
movs
ins
mov
push
jmp
stos
(bad)
fisub
shl
daa
adc
ins
retf
out
push
cmp
int3
lahf
and
test
pop
mov
in
std
(bad)
nop
mov
stc
cmp
sti
mov
int
mov
out
shr
nop
and
mov
out
push
and
add
inc
and
in
gs
dec
mov
das
mov
mov
fcom
cdq
shl
push
js
or
jne
mov
push
add
enter
cmp
(bad)
rol
rol
clc
and
jle
scas
xchg
cmp
jbe
xor
test
or
and
jbe
or
popa
mov
popa
mov
dec
push
add
xchg
cwde
jns
(bad)
clc
(bad)
movs
in
mov
pushf
repnz
lods
stos
mov
push
ins
loopne
(bad)
in
popf
jmp
xchg
mov
xchg
ret
arpl
(bad)
jge
mov
scas
test
loop
pop
stc
xor
aam
leave
push
dec
loop
push
popf
pop
pop
int
adc
lahf
jmp
js
sub
sub
out
or
jg
jg
jmp
rol
test
or
out
and
fnsave
adc
cmp
stc
xchg
and
inc
jge
push
mov
inc
in
nop
dec
push
or
shr
jo
jge
add
aad
mov
xchg
jno
and
dec
lock
fcmovnbe
sub
ds
mov
(bad)
call
aaa
cmp
jne
iret
jbe
fsubr
loop
dec
outs
pusha
movs
push
mov
sbb
fbstp
and
rcl
test
ret
mov
mov
iret
push
fldenv
inc
test
lahf
out
xchg
sub
icebp
(bad)
jmp
and
pop
jp
push
push
jge
jmp
push
jno
pop
cmp
in
(bad)
dec
mov
adc
aaa
or
jmp
outs
mov
sbb
sub
daa
ds
inc
mov
sbb
fistp
lods
(bad)
xchg
xchg
push
hlt
or
xchg
mov
iret
push
pop
and
(bad)
test
add
jo
(bad)
sub
scas
out
outs
test
out
jns
mov
aam
push
sti
xchg
or
and
out
xor
lock
dec
xchg
adc
fsubp
scas
dec
lahf
cmps
jns
std
es
push
push
sar
cli
mov
xchg
fsubr
stos
dec
dec
add
movs
inc
cmp
mov
cmp
(bad)
cli
sbb
stos
outs
out
or
mov
xor
xor
fistp
mov
inc
inc
mov
jne
mov
iret
adc
adc
out
inc
mov
(bad)
(bad)
in
and
xchg
in
scas
stc
mov
mov
push
fsub
retf
leave
mov
xor
jmp
mov
popf
out
gs
sub
adc
aaa
jns
sub
out
div
ds
ins
test
xchg
xor
adc
fcomp
hlt
stos
ds
add
repz
fmulp
jne
cmps
push
add
and
xchg
xchg
aaa
or
adc
int3
cwde
ret
and
mov
aas
jmp
xor
and
imul
pop
inc
add
and
xchg
mov
ins
xchg
ins
inc
xor
pop
cmp
daa
aad
push
mov
push
lods
xchg
sub
(bad)
into
and
iret
out
cli
adc
ja
add
scas
shr
mov
rol
js
mov
inc
xor
jb
inc
test
fidiv
stc
retf
or
sub
mov
popf
in
stos
mov
cmp
jnp
psrld
(bad)
dec
shr
aas
cmp
xchg
mov
push
add
gs
jmp
or
loop
pop
retf
lods
mov
cli
call
movs
mov
std
psubw
call
sub
fcom
ja
pushf
mov
add
mov
movs
and
(bad)
call
fsub
lds
movs
cld
or
mov
fisub
(bad)
fnstcw
test
cli
and
push
stos
das
or
push
(bad)
adc
or
inc
fsub
enter
out
lds
adc
icebp
stos
inc
push
cmp
inc
adc
sub
mov
int
rcr
xchg
and
push
cmp
shl
in
(bad)
mov
dec
adc
(bad)
cmp
push
in
add
outs
mov
mov
enter
jle
push
int3
movs
cmp
loopne
push
inc
sbb
and
call
stos
rol
out
out
jo
xor
dec
(bad)
push
shl
aad
test
popf
mov
stc
ins
mov
div
or
cs
pop
rcl
adc
cmp
fs
add
mov
lods
neg
mov
jge
sbb
or
ins
fcomp
cmps
sub
repnz
pop
enter
sub
mov
adc
shl
pushf
movs
jmp
call
adc
inc
js
or
call
jg
pusha
mov
test
add
aam
mov
jp
sahf
mov
lea
push
into
pop
pushf
mov
and
pop
ja
pop
fs
adc
cmp
cmp
inc
ret
movs
push
lahf
push
add
mov
and
sar
and
out
sub
fbld
or
push
add
cdq
jg
mov
bswap
push
sbb
cmp
int
int
imul
ss
cmp
sbb
mov
pushf
pop
dec
es
push
mov
fsub
ds
sahf
dec
sub
sar
jecxz
and
push
sub
mov
imul
xchg
nop
jg
sub
jge
lea
jo
lds
addps
mov
clc
out
popa
or
popf
(bad)
xchg
popf
arpl
inc
not
nop
sbb
fwait
dec
or
or
adc
sub
call
ret
popa
js
jne
adc
dec
adc
rol
test
cwde
or
push
mov
lahf
pop
cmp
stos
je
pop
pop
xchg
push
pop
inc
pop
jbe
fst
cmp
cs
add
mov
inc
mov
popa
xor
add
xchg
nop
add
pusha
mov
mov
ret
push
int
pop
and
nop
icebp
or
gs
pushf
(bad)
jb
addr16
and
dec
push
push
push
ret
fld
xchg
(bad)
cmps
fld
dec
dec
or
dec
push
daa
lods
mov
mov
mov
add
add
jae
hlt
sar
push
in
sbb
inc
jge
vmovdqu
xor
rcr
and
fs
xchg
dec
sbb
movs
and
add
ins
cmp
in
into
pop
ficomp
mov
xlat
test
fsubr
es
sbb
loopne
cld
cmp
in
mov
stos
ins
popf
jns
sub
cld
cmp
sub
sbb
clc
cdq
push
bound
pop
fs
push
mov
push
aas
mov
push
mov
sar
mov
cmps
xchg
push
adc
pop
sbb
loopne
ret
xor
sub
jae
cmp
or
stos
aas
out
or
nop
iret
pop
jg
out
arpl
dec
(bad)
ds
dec
ins
cmp
loop
jnp
inc
mov
imul
or
mov
repnz
xchg
shl
es
adc
loop
leave
sub
add
dec
outs
xchg
movs
stos
jbe
xor
mov
vmptrst
jg
fbld
das
daa
call
cmp
adc
rcl
mov
jns
mov
daa
pop
mov
fistp
push
add
and
adc
imul
mov
jbe
inc
xor
push
or
(bad)
jp
(bad)
jbe
fucomi
push
or
mov
retf
mov
jb
loopne
dec
mov
mov
mov
loope
stos
lock
xchg
and
stos
cld
in
fcmovnbe
int3
repnz
dec
and
stos
(bad)
sbb
cmp
jl
enter
mov
adc
es
cmp
lea
(bad)
clc
mov
mov
push
dec
aad
add
pop
ror
or
mov
adc
mov
add
jecxz
inc
sub
das
xor
hlt
cli
mov
in
mov
sbb
and
add
cmp
mov
loope
lds
add
or
xlat
popa
je
test
aas
js
(bad)
mov
adc
outs
cmps
nop
aam
rep
cmp
and
sbb
popa
js
or
xor
mov
lahf
inc
imul
mov
cli
xor
icebp
mov
push
data16
(bad)
pop
or
mov
dec
(bad)
int3
imul
xlat
or
aad
mov
(bad)
pop
sar
sub
push
mov
xchg
fidivr
xchg
xchg
adc
inc
adc
push
in
adc
mov
mov
dec
jl
push
mov
bound
cmp
addr16
das
pop
sub
cmp
test
popa
inc
xchg
dec
push
in
rol
shl
jmp
scas
call
push
mov
out
popf
pusha
or
inc
jle
cmps
iret
mov
out
cli
(bad)
cwde
aaa
and
jo
push
outs
pop
xchg
pop
adc
loop
out
sbb
jecxz
int
jns
add
mov
clc
inc
or
inc
ret
mov
mov
push
jle
mov
mov
cld
data16
stos
dec
movs
sti
cmp
dec
jns
ficom
sbb
xchg
gs
(bad)
mov
lods
in
not
inc
mov
sbb
in
sbb
cwde
out
push
cwde
dec
(bad)
push
pop
dec
xchg
mov
xor
add
aaa
jb
sub
push
shl
pop
push
lea
hlt
jmp
imul
sbb
xchg
aad
jmp
mov
dec
cmp
xchg
cli
jo
dec
popa
dec
movs
mov
fiadd
and
movs
lock
sub
jnp
ins
xor
cmp
popf
sahf
mov
sbb
shl
call
out
lods
out
inc
loope
mov
fnstcw
scas
add
out
mov
hlt
retf
cmps
cmp
jecxz
lods
cmovns
cwde
inc
pop
jl
mov
int3
sti
mov
dec
fistp
mov
into
ins
push
pop
cdq
xor
sub
and
and
mov
jb
cmp
and
outs
fidiv
dec
mov
or
sbb
sti
xlat
int
mov
mov
sub
pop
stos
in
sub
repnz
test
fwait
push
xor
mov
push
repz
popa
nop
inc
stos
dec
mov
int
dec
mov
aas
int3
sti
or
fld
loopne
mov
das
sub
scas
and
outs
cmp
(bad)
daa
mov
xchg
lea
xlat
and
push
cmp
mov
pusha
push
mov
int
cli
mov
es
and
add
mov
mov
lahf
push
rol
fistp
cmps
test
cli
cmp
pop
or
mov
les
jecxz
rcl
daa
sti
je
aaa
dec
iret
call
sub
pop
loope
and
(bad)
dec
popa
mov
addr16
cmc
repnz
cmp
int3
mov
imul
and
mov
in
sahf
push
xchg
and
inc
mov
popf
cmp
xchg
adc
sub
into
mov
out
das
or
stos
in
dec
mov
movs
and
jge
cdq
sahf
aaa
sub
mov
loopne
xchg
inc
int3
mov
mov
cdq
aas
out
rol
sub
add
out
jnp
popf
cmp
rcl
ds
and
ror
(bad)
xor
cdq
arpl
mov
in
add
nop
jns
push
push
xchg
pop
enter
nop
outs
stos
cmp
es
popf
popa
mov
dec
cwde
mov
sbb
push
push
dec
xchg
(bad)
out
sbb
fimul
xchg
dec
lods
(bad)
cmps
cmp
test
mov
fiadd
and
iret
call
sbb
lods
pop
mov
inc
push
or
add
shrd
test
fsubr
fwait
sbb
xlat
rcl
test
dec
repnz
jge
and
in
sbb
cmps
pop
mov
shl
xor
mov
add
clc
adc
aas
arpl
dec
(bad)
in
out
sbb
push
pop
dec
dec
and
cmp
js
add
push
xchg
inc
imul
pop
or
movs
sub
test
inc
add
sub
pusha
mov
lods
mov
and
sub
sub
int
adc
mov
cli
mov
call
stc
adc
outs
stos
sbb
inc
sub
xor
sbb
ss
rol
dec
pop
out
rol
or
shr
pop
mov
push
test
stos
je
sub
retf
cmc
jge
shl
dec
mov
pushf
loop
sbb
icebp
jno
pushf
ins
shl
ret
idiv
cs
jbe
push
fidivr
push
(bad)
out
inc
mov
jg
das
das
in
aaa
in
(bad)
in
jnp
int
pop
inc
loopne
pop
popf
pop
mov
scas
test
outs
and
in
iretw
push
test
cmc
xor
dec
pusha
(bad)
cmp
int3
cmp
imul
fst
imul
iret
jnp
jmp
pusha
js
push
xor
push
imul
xor
call
xchg
jl
hlt
cwde
sub
nop
fs
mov
pop
idiv
sti
pop
jnp
pop
icebp
add
fld
dec
sti
mov
int
lods
mov
adc
fwait
jecxz
or
jmp
bnd
mov
ins
sub
cs
enter
outs
daa
cmps
lds
icebp
js
test
inc
adc
xlat
dec
rol
cmps
inc
dec
push
cmp
loop
sub
xchg
mov
fisttp
inc
xlat
sub
cmc
lods
imul
loope
daa
mov
jge
test
mov
js
mov
leave
in
inc
aad
or
mov
push
popf
mov
jnp
cmps
dec
loope
out
lods
stc
mov
add
mov
cli
(bad)
xlat
cmp
aad
jbe
push
(bad)
jle
stc
jmp
add
scas
imul
mov
jp
pop
or
js
out
sub
leave
jge
shl
xor
adc
inc
(bad)
fnstenv
xchg
xor
in
mov
dec
lock
fwait
mov
mov
inc
pop
scas
loopne
xchg
mov
leave
push
cmp
sub
jmp
int
ja
pop
mov
scas
xchg
jbe
pusha
jb
mov
pop
ja
mov
inc
inc
hlt
adc
mov
lods
xchg
xor
ret
fist
dec
test
je
dec
push
push
lods
mov
mov
push
and
fistp
push
xchg
test
dec
inc
imul
test
pop
dec
lods
mov
gs
rcl
sbb
dec
sbb
add
mov
movs
xlat
and
call
jno
mov
pop
(bad)
jno
out
cmp
xchg
sub
sbb
dec
add
rcl
xor
pop
and
loope
cmps
jne
cmp
jo
mov
movs
dec
add
jle
pop
inc
movs
pop
cli
leave
sub
(bad)
(bad)
std
loop
xchg
pop
shl
inc
jb
pop
enter
fwait
and
sti
pop
test
jne
and
sbb
mov
fbstp
push
sti
lods
int
jno
lods
jge
mov
lods
out
jo
push
xchg
int
xchg
retf
xor
ds
sub
jb
retf
imul
addr16
or
dec
out
push
retf
out
mov
dec
adc
mov
ficom
js
sbb
ret
inc
stc
mov
popf
icebp
pop
(bad)
jp
mov
mov
cmp
jo
cmps
xchg
add
cmp
and
test
or
in
adc
(bad)
mov
fldenv
and
add
push
sbb
lods
pop
movs
movs
jmp
xchg
dec
or
xchg
add
in
jo
push
mov
xor
sub
or
mov
pop
mov
sbb
push
pushf
mov
or
xor
(bad)
pop
lea
repnz
sub
dec
adc
dec
pop
push
ds
pop
pop
imul
out
hlt
xchg
mov
(bad)
sbb
cmp
sub
jae
pop
rcl
xor
outs
pop
cmp
mov
je
inc
sub
pop
pop
mov
xor
outs
movs
mov
seta
mov
sti
enter
mov
lea
pop
shl
cmp
loopne
inc
test
cmps
std
xchg
push
mov
aad
into
lock
dec
and
imul
stc
xor
stos
cwde
cs
add
jno
pop
inc
pop
or
rcl
dec
mov
(bad)
nop
jp
push
fsubr
(bad)
mov
bnd
data16
xor
arpl
xor
mov
gs
call
xchg
mov
jno
ficomp
mov
addr16
ds
and
sub
mov
outs
pop
in
in
mov
repz
pop
xchg
jae
cmps
sub
or
or
xchg
jp
out
popf
aad
sbb
loop
jmp
jmp
cmps
gs
add
retf
inc
fisttp
icebp
addr16
ja
xchg
ds
inc
daa
and
jae
stc
rcl
ror
mov
in
add
int
fist
jns
enter
mov
(bad)
pop
mov
ss
cmc
xchg
iret
in
cmp
and
and
add
outs
mov
shl
psubw
retf
aas
in
shr
fisttp
gs
ds
in
loope
test
push
les
mov
out
dec
sub
movs
mov
out
inc
(bad)
ss
push
cmc
mov
xor
xlat
pop
fwait
ss
or
cmp
stos
imul
cli
and
inc
rcr
adc
scas
fidivr
dec
xchg
aam
nop
xchg
inc
aaa
xchg
test
fs
mov
lock
pop
loopne
lods
cmps
push
cld
outs
outs
inc
and
xor
mov
rcl
lea
ins
cmp
out
les
mov
mov
adc
imul
es
and
repnz
cmp
jo
inc
jb
sub
sbb
loopne
cwde
and
std
or
mov
xor
movs
adc
pop
adc
jne
xchg
mov
adc
(bad)
dec
and
add
lock
loop
and
test
mov
jle
stos
outs
mov
mov
pushf
or
in
mov
jbe
out
repnz
mov
add
pop
rol
mov
sub
xchg
sub
(bad)
adc
and
and
mov
or
sbb
loope
clc
xor
jmp
jo
jne
pop
pop
dec
xchg
daa
lea
int
mov
call
mov
fsubr
pop
mov
pop
fiadd
sahf
pop
shr
aas
shl
retf
sub
sbb
out
dec
aas
push
lea
push
dec
aas
mov
aaa
les
mov
scas
lods
add
int3
sub
(bad)
sbb
inc
ret
sub
call
gs
dec
cmp
and
jmp
daa
mov
xchg
hlt
pushf
mov
test
pop
dec
(bad)
cld
jae
test
gs
repnz
sub
push
fwait
push
mov
xor
movs
add
adc
test
pop
aas
or
pop
adc
test
jecxz
rcr
ds
lods
int3
pop
push
mov
cli
or
mov
mov
ins
sbb
aas
mov
(bad)
aad
or
icebp
cmps
jno
cmp
jnp
(bad)
jl
jns
dec
jnp
mov
push
sub
ins
mov
and
int
pop
retf
lock
shl
mov
mov
xchg
loop
pop
sbb
fs
mov
mov
hlt
gs
pop
sbb
pop
fbstp
cmp
test
push
mov
push
add
sub
push
mov
or
push
xor
jmp
sbb
add
icebp
inc
xchg
dec
xlat
and
gs
mov
or
int3
call
in
ret
add
mov
mul
je
pusha
pop
jbe
fsubr
icebp
aam
cmp
and
jmp
inc
push
mov
jb
jmp
push
in
stos
pop
ins
mov
sbb
(bad)
out
sub
cmp
shr
push
xchg
lahf
mov
loop
shl
jp
xchg
stc
jo
mov
sbb
rcr
and
cmps
push
inc
push
loope
rcr
mov
dec
mov
scas
inc
(bad)
in
icebp
outs
rcr
loopne
in
or
adc
mov
es
xchg
cld
pop
scas
add
fs
leave
sar
stc
lods
test
fadd
pop
or
mov
cmp
xchg
push
and
scas
movs
xchg
cmp
jl
cmp
(bad)
test
loop
xor
cmc
xchg
push
jbe
push
iret
inc
neg
add
and
adc
push
sahf
and
lds
es
sbb
adc
pop
dec
das
ins
cmps
das
ins
clc
jp
out
push
outs
mov
jmp
sahf
pop
in
mov
xchg
pop
inc
cmps
call
dec
jge
(bad)
sbb
aas
inc
mov
pop
pop
mov
mov
int3
test
push
push
clc
xchg
cdq
imul
pop
loopne
fstp
xchg
mov
jg
jbe
xor
jmp
data16
mov
lods
sbb
mov
and
add
mov
ins
jmp
fild
xor
test
xor
xor
xchg
dec
pop
scas
mov
jle
ds
aad
cmp
adc
ins
pushf
ds
cld
(bad)
jge
out
out
lods
xchg
and
imul
mov
(bad)
fwait
test
and
out
dec
add
(bad)
out
push
(bad)
jecxz
and
mov
shl
xor
retf
sbb
fstp
and
retf
out
and
or
call
dec
pop
es
add
mov
push
cmc
cmps
and
ror
dec
out
nop
sub
loopne
or
pop
shl
adc
enter
lods
cmps
xchg
ins
cdq
cwde
add
sub
es
movs
mov
movzx
les
jp
sbb
sti
ss
cmp
xor
dec
rcr
fstp
sar
loopne
mov
mov
push
mov
pop
xchg
adc
jmp
lock
fldenv
add
add
das
and
ror
xchg
add
shr
nop
jae
add
je
popa
gs
lods
lea
jne
inc
loopne
addr16
dec
jae
fbld
clc
xor
int
dec
cld
sub
pop
adc
daa
outs
mov
(bad)
mov
(bad)
mov
(bad)
pop
adc
repz
hlt
mov
xchg
xchg
jae
fsub
sub
and
pop
mov
dec
cmc
dec
call
cmp
cwde
fisttp
sbb
sbb
bound
dec
shl
cmp
cmp
adc
xor
cld
div
pop
push
repnz
call
stc
fld
or
mov
call
push
jo
xor
popa
and
icebp
ins
jne
mov
lods
pop
adc
xchg
add
fsub
dec
into
sbb
les
xchg
loope
(bad)
jae
sub
mov
xor
mov
jecxz
pop
push
adc
mov
leave
sub
inc
pusha
mov
xchg
jg
sar
add
loop
lods
pop
and
add
cld
cmp
arpl
dec
pop
push
test
push
iret
mov
mov
int
jns
(bad)
popa
jnp
or
jle
in
lods
mov
aas
(bad)
jnp
sbb
int3
je
cmp
jns
add
loope
and
call
or
pop
fldcw
jne
cmp
sub
sub
mov
int
getsec
mov
and
xchg
inc
dec
rcl
lock
lahf
sub
fmul
mov
jmp
retf
push
aas
mov
dec
enter
mov
cmc
mov
mov
push
mov
mov
hlt
enter
test
out
test
in
jge
pop
adc
dec
mov
or
mov
push
rol
mov
mul
mov
sbb
fwait
addr16
add
nop
(bad)
scas
jecxz
je
sbb
loop
cmp
jmp
dec
inc
and
xchg
test
adc
push
dec
cmc
xchg
add
lods
loope
movs
cmp
aad
movs
inc
push
sub
in
ret
mov
mov
ds
or
xchg
ret
lock
outs
add
or
jecxz
jle
add
hlt
pushf
outs
xchg
fdiv
retf
mov
pushf
cmc
ret
shl
push
inc
call
popf
dec
adc
push
and
(bad)
(bad)
idiv
jae
mov
in
mov
ss
je
push
test
jmp
mov
mov
jg
sub
movs
mov
push
mov
bswap
dec
jno
gs
and
sbb
out
xchg
cmps
imul
fisubr
pop
xchg
pop
sti
jo
jmp
sub
repnz
outs
xor
jnp
retf
int3
das
sbb
lds
xor
jbe
and
inc
cld
and
int3
mov
out
mov
imul
icebp
inc
test
frstor
in
jmp
mov
fiadd
(bad)
das
cmps
dec
into
sbb
fwait
and
dec
(bad)
fs
aas
adc
sbb
mov
jo
dec
das
leave
sbb
pushf
jmp
inc
fstp
test
sbb
xor
out
adc
cld
loope
dec
cwde
loopne
or
lock
sub
(bad)
lds
lahf
xor
xchg
jmp
fst
out
call
out
mov
in
je
and
mov
mov
adc
call
repz
lahf
pop
mov
adc
xor
ds
mov
mov
retf
lahf
xor
mov
fdivp
mov
cli
ja
adc
push
leave
jp
inc
clc
pop
loop
sub
int3
mov
sti
xor
cmc
inc
mov
push
cwde
(bad)
out
sbb
pop
fs
retf
cmp
cmps
push
out
(bad)
scas
out
mov
rcl
int3
mov
add
test
out
sub
mov
pop
mov
(bad)
shl
bound
retf
nop
mov
test
imul
aad
hlt
imul
add
repz
ds
daa
fs
loop
cmp
inc
data16
adc
stos
jecxz
cmp
sbb
outs
pop
xor
inc
mov
pushf
mov
cmp
xor
sar
dec
inc
sbb
pop
loopne
push
iret
ja
ja
inc
adc
loope
ds
mov
loope
sbb
in
in
cmp
pop
out
sti
jb
fcom
(bad)
into
xchg
push
fistp
dec
xor
and
pop
imul
lahf
mov
cmovs
iret
fild
enter
dec
xor
add
dec
into
xchg
fadd
or
dec
jecxz
and
push
pop
jg
push
mov
stc
inc
xor
iret
aam
addr16
adc
mov
outs
in
jmp
retf
sbb
push
xchg
inc
mov
push
call
retf
je
add
dec
jmp
xlat
dec
xchg
sbb
(bad)
cmps
sub
(bad)
lds
pusha
add
adc
or
out
add
adc
add
sti
loop
fcomp
mov
rol
mov
cmovge
and
mov
outs
sti
or
jnp
(bad)
dec
loope
test
clc
inc
jns
sti
cld
loop
mov
dec
push
mov
pop
int3
(bad)
mov
cmp
popf
or
in
inc
mov
pop
jg
ss
jmp
push
fistp
out
sbb
mov
imul
add
jne
shl
cld
std
and
mov
mov
cwde
mov
dec
xchg
mov
pop
test
and
pusha
jb
xlat
shr
shl
shr
sub
imul
fisttp
call
daa
push
xchg
in
call
(bad)
(bad)
sti
sub
hlt
mov
cmc
and
push
xor
push
mov
outs
cld
jecxz
sub
pop
clc
push
pop
daa
xchg
xchg
mov
call
pop
xchg
mov
icebp
psubusb
cmps
out
jp
adc
stc
sbb
(bad)
call
ja
xor
fmul
test
(bad)
retf
xchg
mov
xchg
stos
sub
leave
nop
adc
push
sub
and
jb
aaa
dec
jo
gs
jge
sbb
cmp
stc
js
and
sbb
clc
hlt
movs
mov
mov
adc
sbb
or
fcomp
ds
popf
cs
test
inc
(bad)
cmc
int3
and
or
aaa
rep
fstp
mov
cld
dec
mov
cmp
pop
movs
and
jo
add
adc
int
inc
sub
push
or
das
sbb
cdq
out
xchg
jnp
scas
lahf
mov
test
ffree
scas
mov
movs
cmps
mov
and
jns
push
add
imul
mov
addr16
sbb
xchg
or
lock
test
cwde
jmp
push
xchg
mov
loopne
lods
pusha
stc
cwde
xchg
add
push
pushf
mov
cwde
pop
sub
pop
out
bound
sbb
cmp
cdq
(bad)
fimul
add
aam
inc
ficom
call
push
loopne
cld
movs
aam
outs
idiv
jns
jo
aad
ror
pusha
xlat
mov
inc
retf
adc
in
(bad)
in
out
test
stos
test
xchg
cmp
div
mov
xor
in
ds
inc
sbb
cdq
push
icebp
ja
xchg
dec
or
or
mov
xor
jnp
xchg
mov
cli
xor
loopne
cmp
ins
enter
fsubr
(bad)
bound
outs
gs
cmp
mov
out
and
jl
retf
or
ds
jmp
xor
xor
xor
rcr
fnstenv
pop
add
pop
push
aas
leave
mov
mov
into
mov
inc
cwde
ja
sti
loopne
add
or
mov
add
sub
sbb
sahf
mov
arpl
pop
ret
sti
loope
lahf
in
jo
inc
into
loopne
fs
sbb
adc
xchg
dec
xchg
and
loope
ja
sub
mov
das
mov
pop
imul
sahf
xchg
push
(bad)
fld
jecxz
dec
or
jecxz
push
push
push
sbb
out
push
xchg
and
or
stos
fisttp
test
out
xchg
dec
addr16
and
mov
paddw
ficom
das
xchg
fnstsw
sub
rcl
sub
mov
imul
jp
sub
mov
enter
cmp
adc
aas
out
push
or
in
stos
int3
xor
jne
mov
movs
mov
mov
sbb
pop
sub
scas
inc
jg
lock
cmp
adc
or
inc
int
js
call
jmp
std
mov
scas
lahf
mov
mov
int3
fs
or
xchg
sbb
mov
sub
idiv
clc
push
push
lods
leave
dec
mov
sar
push
aaa
out
pop
rcl
jnp
xor
stos
fcomp
lods
push
outs
stos
pop
cmp
cmp
outs
dec
jb
ja
in
push
data16
icebp
test
test
or
ds
popf
xchg
outs
add
mov
repnz
icebp
scas
pop
add
in
aam
dec
sbb
(bad)
xlat
(bad)
into
cld
xlat
dec
push
bound
in
aad
iret
and
mov
repnz
push
xor
mov
sbb
aas
jmp
arpl
adc
xchg
jo
aas
sub
pop
fdiv
dec
jnp
and
push
mov
mov
mov
pop
movs
xchg
mov
xchg
xchg
pushw
mov
movs
cmp
pop
and
inc
jmp
cwde
imul
leave
scas
pop
adc
ja
arpl
sbb
icebp
push
scas
out
cmp
div
cwde
inc
jns
ins
pushf
inc
jns
or
inc
enter
bound
sbb
sbb
in
push
stos
scas
mov
xchg
adc
pop
xchg
push
bound
xor
xchg
aad
inc
clc
push
mov
jb
jl
and
fs
std
sbb
dec
inc
push
sbb
mov
mov
in
jmp
ja
add
(bad)
mov
inc
and
mov
inc
inc
xchg
add
cli
cmp
push
push
cmps
nop
mov
jge
sbb
sahf
arpl
gs
cmp
es
push
js
pop
mov
dec
shr
add
lods
jno
jb
stos
mul
test
adc
aaa
mov
lea
push
daa
jmp
mov
push
jbe
std
stos
adc
push
fld
int3
out
scas
fs
std
cs
or
xchg
fsubr
push
push
inc
(bad)
shl
call
or
(bad)
retf
add
sahf
into
into
pop
adc
(bad)
or
(bad)
cwde
pushf
fwait
movs
jl
adc
mov
mov
in
aaa
aas
jle
and
sub
scas
pop
add
imul
stos
enter
(bad)
mov
and
inc
push
arpl
xchg
gs
sbb
sti
adc
sar
dec
mov
mov
fcom
icebp
add
sbb
jb
stc
ins
sar
(bad)
stos
in
add
sbb
(bad)
sahf
sub
cs
sbb
repz
xchg
ret
(bad)
add
or
xchg
pop
scas
fisubr
and
es
sbb
jmp
and
cmp
test
inc
sar
push
sub
mov
mov
inc
and
xchg
(bad)
out
iret
shr
(bad)
sahf
pop
cmps
out
repz
bound
push
cmps
pop
inc
lea
nop
push
fild
sbb
shl
iret
jo
xchg
(bad)
fld
rcr
sub
fbld
push
mov
dec
pop
push
and
jnp
push
ja
stc
stc
and
aaa
cld
fwait
mov
push
mov
ins
shl
call
dec
jmp
push
call
mov
push
test
mov
div
cwde
inc
sahf
pop
popa
xor
enter
pushf
hlt
or
mov
push
ins
xchg
mov
push
mov
jo
or
jns
and
in
in
jp
or
pop
pop
fidivr
cld
sub
sbb
jns
pop
lahf
mov
ficomp
es
adc
mov
inc
das
dec
shr
xchg
sahf
cmp
inc
xchg
jp
add
stos
pop
push
and
adc
push
add
cld
inc
jae
push
xlat
jo
(bad)
dec
dec
daa
or
mov
cwde
sbb
fwait
sub
cdq
arpl
fistp
xchg
cmp
jp
sbb
jge
test
jb
loope
andps
outs
stc
sbb
rol
mov
pop
adc
jecxz
or
push
js
call
cli
ror
push
mov
xor
nop
xor
mov
jge
adc
pop
push
sbb
aaa
and
icebp
mov
pop
fidivr
stc
mov
fsubr
in
push
cwde
test
imul
inc
add
in
movs
test
mov
or
xlat
cmps
ret
es
and
inc
retf
dec
mov
lds
adc
imul
mov
adc
sbb
jae
mov
add
push
leave
je
xchg
inc
xchg
and
ins
mov
adc
inc
out
pop
xchg
add
and
mov
ror
adc
cmp
xchg
dec
ss
out
xchg
push
sar
aaa
out
mov
lahf
adc
(bad)
shl
sahf
aam
inc
jo
sub
sbb
mov
cld
daa
rol
fcmovnb
ja
(bad)
xlat
aaa
fucomp
std
xor
ins
lds
sbb
in
push
mov
adc
lods
ror
jmp
push
movs
not
idiv
mov
sub
push
xchg
pop
movs
gs
mov
neg
or
sub
in
pusha
push
(bad)
mov
loopne
fldenv
and
scas
mov
cmp
stos
std
adc
test
cmc
push
es
imul
in
imul
data16
mov
mov
adc
cmp
inc
mov
sub
add
cdq
push
push
cmova
mov
xor
push
mov
into
mov
adc
test
(bad)
mov
div
cld
xor
cdq
mov
out
(bad)
arpl
nop
pop
in
jnp
or
into
neg
push
(bad)
int3
lds
(bad)
outs
or
mov
dec
inc
cmp
pop
icebp
loope
in
out
push
mov
pop
frstor
sar
mov
sub
jp
xor
add
dec
pop
out
pop
pop
xor
or
fwait
jp
mov
mov
fdivr
retf
add
adc
sub
into
fadd
xor
mov
sbb
mov
or
xchg
(bad)
jb
xchg
ds
push
int
dec
dec
dec
ja
imul
add
jns
dec
ss
shl
ins
pop
mov
xchg
inc
mov
loop
pop
push
popf
stos
ret
jg
or
mov
or
fild
loop
cmps
xlat
ds
ins
mov
imul
test
retf
aad
mov
jle
fild
pop
lds
push
mov
sar
xchg
pushf
push
jno
in
lea
inc
fild
(bad)
xor
loop
mov
popa
pop
(bad)
in
mov
fstp
inc
ficom
clc
add
lods
add
loop
mov
dec
xlat
repnz
adc
push
fucom
xor
pop
jg
clc
out
mov
cmp
mov
cmp
xor
add
lods
mov
shl
(bad)
aas
adc
fiadd
cdq
push
xor
cs
cli
xor
ins
(bad)
add
fdiv
dec
fdivr
or
scas
fadd
ins
mov
jmp
enter
in
push
lds
jmp
jo
inc
fdivrp
sbb
push
(bad)
adc
or
mov
shl
nop
jbe
aad
jne
jmp
bound
xchg
jmp
jo
add
add
xchg
inc
cmp
mov
add
movs
inc
and
iret
movs
jp
or
dec
mov
mov
push
jmp
out
(bad)
cmp
push
push
mov
mov
sbb
leave
in
sub
inc
sub
adc
cli
mov
ins
pop
int
rol
pop
rcr
dec
scas
sbb
sbb
push
imul
cwde
shr
mov
sbb
jne
xchg
clc
out
inc
xor
int3
jbe
xlat
adc
push
fistp
mov
mov
out
fwait
and
ja
xchg
pop
das
jbe
and
pop
push
add
jmp
ret
test
sbb
and
jbe
jbe
retf
(bad)
and
pop
sub
fld
les
ret
mov
out
xchg
fistp
jo
aaa
push
pop
dec
jno
es
push
div
mov
ss
adc
je
and
mov
shl
aad
(bad)
cwde
mov
jmp
clc
sar
inc
dec
jns
jl
inc
jp
ja
aad
inc
mov
fsubr
cmp
dec
out
inc
inc
mov
mov
jg
mov
jno
lods
aad
push
xchg
repz
cwde
sbb
xchg
cld
dec
lds
inc
outs
dec
or
cmps
xchg
push
ins
outs
aad
jmp
out
pop
dec
inc
xchg
sahf
fcmovne
push
cmc
mov
into
jg
push
and
(bad)
jg
pusha
or
sub
mov
mov
movs
aaa
mov
lods
pusha
cli
nop
or
mov
daa
ins
ret
enter
pop
icebp
push
out
mov
test
(bad)
es
lahf
aam
sbb
xchg
mov
scas
add
dec
dec
inc
jnp
icebp
push
or
cld
(bad)
cmp
std
adc
push
ret
stos
pop
js
sbb
sahf
jl
test
cld
sahf
dec
sub
adc
imul
repnz
jnp
fild
lock
push
aas
add
sbb
adc
shl
add
fldcw
xor
push
call
mov
jo
scas
test
clc
out
popa
out
jbe
inc
mov
mov
pop
leave
hlt
movs
jae
push
bound
dec
movs
lods
adc
push
add
mov
cmp
sbb
ss
pusha
into
xchg
cmc
daa
cli
cmps
cmp
xor
ss
mov
shl
popf
retf
pop
add
loop
in
dec
xor
dec
addr16
sbb
add
mov
adc
outs
and
or
(bad)
sar
or
dec
push
cmps
dec
dec
outs
push
inc
jo
jo
adc
call
push
in
int
outs
sub
test
mov
rcl
and
hlt
xchg
cmp
repz
mov
jl
ret
aas
jmp
mov
mov
xor
mov
pop
cmp
and
jmp
xchg
jmp
push
neg
sub
ja
(bad)
push
loope
rol
or
shr
push
movs
in
and
(bad)
mov
jecxz
fwait
push
int
je
std
mov
out
adc
mov
movs
mov
xchg
cdq
stc
jecxz
xchg
(bad)
pop
xchg
mov
pop
jle
mov
shl
push
push
sub
popa
leave
mov
iret
call
jne
jno
pop
adc
ss
les
jo
mov
sub
xchg
jl
and
cmp
mov
dec
mov
fldcw
(bad)
adc
sub
je
das
movs
icebp
mov
push
outs
mov
clc
jb
popf
mov
or
sub
jp
ret
stos
mov
fcomp
test
jae
sbb
pop
push
push
clc
adc
fld
cli
xor
pop
pop
jbe
movs
or
(bad)
call
xchg
into
xchg
mov
cmp
ins
cwde
mov
ret
xchg
les
mov
sub
push
jo
in
xchg
int
icebp
ror
push
mov
outs
cmp
jnp
sbb
cmp
jmp
iret
pop
jae
std
loop
mov
ret
sahf
xchg
dec
and
addr16
cwde
les
jo
repnz
sbb
mov
clc
scas
cmps
test
jnp
dec
cmps
xchg
aas
call
in
test
mov
adc
fcomp
scas
mov
aaa
cwde
mov
cmc
xor
inc
pop
pushf
and
out
xchg
pop
leave
(bad)
push
jmp
test
jne
outs
and
pop
cmp
push
push
mov
pop
dec
mov
add
cmp
xor
xlat
repz
inc
dec
sub
push
push
gs
dec
enter
mov
gs
sub
imul
loope
add
repz
or
loop
lock
add
or
test
cmps
icebp
adc
cmps
cli
mov
stos
push
sbb
jmp
mov
xchg
test
fidiv
mov
cs
xchg
sti
in
mov
shl
in
push
sub
mov
mov
sub
adc
sub
mov
pop
inc
mov
mov
jo
push
sub
cmp
in
sbb
mov
fiadd
stos
sahf
in
sub
cs
pop
jmp
sti
fdiv
sub
jmp
addr16
call
cmp
xchg
gs
(bad)
xor
int3
sub
call
jmp
hlt
(bad)
scas
(bad)
out
ror
or
aaa
xchg
test
scas
jbe
enter
aaa
rcl
push
test
aam
jae
sub
cs
in
and
lods
adc
push
add
push
outs
scas
mov
call
push
mov
jp
cmc
shl
sbb
mov
daa
ror
les
mov
dec
xchg
imul
shr
mov
loopne
in
out
push
int
dec
ss
xchg
lahf
into
std
into
enter
lds
mov
mov
dec
fnstsw
shufps
xor
out
and
adc
xchg
sub
push
or
sub
addr16
popf
mov
or
xor
pop
push
not
xor
pop
fild
cmps
into
fcmovnbe
sbb
push
jno
mov
mov
xchg
xchg
pop
rcl
rcr
stos
aas
daa
and
lds
outs
ins
push
loope
leave
fwait
retf
aad
jno
ins
dec
push
(bad)
dec
mul
push
xchg
add
push
cdq
xor
cmp
inc
jne
mov
shr
jnp
fidivr
add
pop
test
in
or
mov
lods
pop
in
push
call
stos
adc
aaa
adc
pusha
call
movs
movs
mov
jle
fst
mov
jmp
adc
xlat
out
cmp
mov
pop
dec
mov
inc
xchg
in
add
push
sub
pop
mov
retf
bound
push
das
jmp
rol
or
in
xor
dec
push
jmp
ins
out
sub
lods
jle
loopne
movs
push
and
movntps
sti
sub
mov
test
hlt
imul
inc
cmps
xchg
test
jb
dec
mov
lods
or
in
cld
clc
xor
xor
xchg
cmp
call
gs
mov
adc
ja
or
inc
clc
xor
and
xlat
mov
(bad)
fsubr
sbb
push
push
mov
adc
xor
mov
stos
xchg
dec
inc
popf
xor
xor
pop
jmp
sysenter
or
js
test
mov
inc
mov
(bad)
xlat
xor
rcl
pop
xchg
(bad)
xor
dec
inc
fldenv
and
and
rcl
(bad)
jge
in
xchg
sbb
dec
adc
dec
retf
push
outs
push
(bad)
shr
cmp
xchg
cmps
shl
mov
sar
add
and
ins
fs
mov
gs
sub
int3
dec
hlt
or
js
fstp
cmp
xchg
cld
in
aas
sbb
dec
imul
push
and
outs
xchg
mov
sub
pusha
jns
int3
out
mov
add
fsubr
ss
cmp
sahf
mov
fdivr
or
lea
mov
lods
xor
sub
mov
(bad)
sti
mov
jo
jbe
clc
scas
add
sbb
sub
and
sbb
lahf
lods
sbb
fs
inc
lahf
outs
fs
push
data16
in
jns
les
jp
stos
iret
push
cmp
iret
xchg
fisttp
cmp
mov
cmps
add
push
scas
mov
jmp
inc
enter
test
push
dec
mov
jo
xor
cmp
mov
fwait
iret
mov
jl
or
sti
daa
pop
and
adc
mov
push
cmp
ins
sbb
outs
mov
cmp
jnp
es
add
jmp
dec
xchg
inc
or
test
sbb
xor
cmp
dec
(bad)
stc
mov
add
clc
add
fstp
iret
sub
jg
das
out
pop
add
lds
inc
sub
(bad)
lahf
daa
gs
or
jp
leave
adc
jle
mov
mov
cwde
leave
arpl
mov
mov
sti
push
mov
(bad)
sub
sub
inc
jg
sbb
add
outs
dec
fsubr
jmp
mov
jecxz
movs
cmps
pop
push
mov
sbb
out
je
loope
and
cmp
xchg
rcr
pop
stos
mov
pop
lods
xchg
out
sub
cld
hlt
std
inc
push
aad
gs
cdq
cdq
jbe
adc
sbb
hlt
push
push
sub
dec
call
repnz
ins
movs
jg
pop
cld
add
fild
hlt
cmp
cmp
sub
imul
hlt
mov
ror
imul
lahf
or
xchg
mov
test
retf
xor
xchg
mov
inc
ins
scas
and
shr
sub
jno
dec
and
xchg
xchg
aam
inc
fs
and
or
ss
add
cmc
retf
leave
es
sbb
retf
stos
add
test
in
xchg
inc
sbb
or
cmc
mov
movs
not
pop
sbb
(bad)
(bad)
jno
pushf
push
ss
adc
dec
push
cmp
int
xor
aas
int3
and
xor
das
pop
out
mov
outs
pop
out
mov
xchg
rcl
xchg
dec
pop
hlt
loope
sbb
(bad)
arpl
pop
out
(bad)
ins
lods
sbb
add
popf
mov
dec
cmp
xchg
cld
sti
aam
add
xchg
push
mov
sbb
mov
pop
mov
ret
xchg
dec
fwait
cmp
cli
imul
push
aad
and
mov
sti
adc
das
sbb
push
add
push
cwde
mov
div
xchg
xchg
push
addr16
scas
push
push
addr16
mov
or
xchg
lock
(bad)
jns
popf
aas
pop
push
je
add
stos
cmp
out
inc
jmp
push
aas
test
xchg
icebp
pushf
or
inc
scas
xchg
(bad)
repz
fiadd
sbb
in
loope
in
daa
mov
sti
imul
loope
push
aaa
or
xor
sahf
mov
test
stc
sbb
(bad)
sbb
sahf
je
jno
add
fxam
dec
cmp
popf
aad
call
lahf
cmps
icebp
jnp
in
xchg
test
fsub
mov
or
loop
sbb
loopne
xor
mov
push
ins
loopne
data16
sub
aas
jnp
loopne
jno
outs
(bad)
pop
stos
pushw
imul
iret
sar
fwait
in
push
paddw
je
fbstp
sbb
aad
mov
rcl
add
cmps
cdq
or
mov
sub
ins
mov
or
mov
fstp
inc
int3
call
cld
pushf
sar
mov
loope
push
jmp
icebp
jmp
xor
sub
jecxz
push
jo
xchg
icebp
adc
movs
popa
push
dec
icebp
mov
push
sub
lods
mov
sahf
mov
pushf
dec
addr16
cmp
shl
inc
scas
ins
js
push
rol
xor
ja
sub
stos
cmps
fiadd
jb
adc
cmc
retf
push
pop
std
xlat
ins
daa
aaa
mov
mov
fnstsw
jns
jle
(bad)
aam
push
dec
rcl
jecxz
and
cmps
stc
mov
repz
cdq
fdivr
mov
cmp
aaa
nop
xchg
shl
loopne
xlat
fdivr
lds
mov
sub
fcmovnb
and
push
ret
push
xchg
aad
adc
(bad)
jnp
stos
pop
repz
mov
and
and
xor
dec
jb
inc
(bad)
fs
loope
int3
jnp
fidivr
sbb
and
mov
es
adc
mov
xor
adc
(bad)
ror
or
into
shl
and
jmp
fidiv
dec
mov
mov
scas
and
add
xor
or
(bad)
scas
add
movs
mov
mov
dec
mov
push
sbb
das
ss
mov
stos
cmp
mov
(bad)
fcmovu
mov
sub
adc
inc
dec
(bad)
pop
frstor
pop
cmp
imul
inc
das
mov
adc
lods
ss
jb
pushf
cmp
mov
xchg
pop
xchg
push
(bad)
(bad)
loopne
pop
fnstcw
jno
out
push
mov
xor
jne
jmp
stos
cmp
pop
aas
mov
sub
inc
push
(bad)
sbb
fistp
cmp
fiadd
mov
sbb
in
sub
test
sbb
mov
jmp
sahf
adc
ror
(bad)
jecxz
out
jl
aam
mov
inc
sti
stc
push
jnp
mov
nop
jbe
ss
mov
in
data16
dec
cmp
cmp
pop
and
ja
push
lea
add
data16
add
and
lock
jge
(bad)
cdq
test
dec
es
pushf
rol
pop
cmps
jl
hlt
xchg
arpl
call
lea
pop
das
popf
and
dec
push
mov
gs
lods
ins
sbb
sub
jbe
inc
cmps
movs
loop
or
mov
(bad)
dec
push
inc
mov
sbb
jns
push
mov
into
jmp
sbb
stos
dec
imul
sub
sahf
ins
imul
ja
lock
scas
mov
cmc
jle
cmps
stos
mov
cmp
xor
aam
add
xor
dec
sub
xchg
call
repz
and
and
mov
xchg
outs
sub
mov
push
(bad)
dec
data16
pop
fidivr
popf
jo
adc
call
inc
xchg
cmps
int
pop
es
call
and
hlt
into
neg
in
jne
test
pushf
jmp
xchg
outs
xchg
movs
adc
sub
sub
push
cmp
in
fisub
pop
fidivr
and
push
loope
or
sbb
sbb
jle
xlat
push
int3
push
mov
aad
cmps
lahf
pop
adc
push
cmc
clc
cwde
lea
sar
mov
out
ret
push
mov
mov
inc
mov
jb
pushf
add
pop
ss
mov
jmp
rcr
sub
and
jecxz
xchg
repnz
xor
pop
lock
aas
nop
push
adc
cmps
or
inc
test
jmp
aas
enter
pop
loope
aaa
clc
out
(bad)
es
push
xlat
sbb
adc
test
xor
jae
sbb
rcl
pop
cmp
sbb
or
shl
mov
push
mov
bound
dec
(bad)
push
je
xchg
in
in
xchg
pushf
ret
scas
jo
push
pop
shr
call
jbe
add
call
dec
nop
pusha
addr16
mov
add
or
into
xor
jmp
lea
and
imul
movs
jne
aaa
enter
adc
fnstenv
cmc
push
aas
pop
mul
push
dec
dec
fisttp
sahf
or
aas
adc
(bad)
lock
in
mov
jae
scas
lods
sub
dec
mov
retf
iret
sbb
mov
xlat
pop
jbe
mov
mov
(bad)
(bad)
push
je
cmp
lods
(bad)
xor
add
add
jp
xchg
push
add
sbb
pop
bound
in
ror
rcr
jo
xor
cli
or
pop
ja
fstp
mov
(bad)
in
js
add
leave
cmp
(bad)
adc
sub
rcr
add
mov
sbb
xchg
push
inc
add
mov
(bad)
mov
pop
dec
add
cmp
xor
and
xor
shr
popa
fsub
xchg
std
out
in
call
fist
adc
sbb
mov
push
aas
ss
popa
adc
cmp
gs
aad
xor
sahf
(bad)
loop
jne
je
(bad)
jmp
and
pop
cmps
adc
nop
xchg
dec
jne
jp
adc
pop
adc
mul
into
push
dec
xchg
repnz
dec
jg
ins
adc
sar
sti
stos
inc
xor
add
cmps
ror
push
pop
call
add
aad
cmp
mov
dec
ss
or
mov
imul
div
ins
cld
push
mov
(bad)
out
test
pop
fmulp
inc
popa
fnstcw
xchg
cld
es
pop
pop
dec
daa
cmp
pop
push
std
push
dec
push
hlt
push
stc
sti
shr
adc
mov
mov
(bad)
mov
enter
adc
scas
cmovle
lock
sub
adc
popa
and
add
xstore-rng
cmps
lds
enter
(bad)
push
sbb
outs
cmp
gs
mov
dec
mov
push
aad
xchg
es
cmp
enter
enter
push
aas
in
les
sub
pop
and
sbb
(bad)
sub
sub
test
shr
mov
mov
loopne
cmp
fmulp
sahf
out
jl
push
inc
scas
jecxz
adc
jo
push
add
sbb
and
test
push
push
clc
mul
and
jecxz
mov
mov
push
add
mov
mov
repz
int
and
stos
pushf
xor
pop
mov
mov
fnop
mov
shl
rcl
(bad)
gs
xor
repnz
push
xchg
int
add
rol
aad
int
or
xchg
inc
dec
stos
out
and
mov
rcl
leave
aad
(bad)
adc
jb
pop
mov
scas
mov
mov
push
test
or
add
fcomp
ret
dec
and
mov
aaa
stc
fsub
fidivr
mov
xor
pop
inc
mov
lock
(bad)
shr
xchg
leave
push
cmp
nop
mov
test
pop
or
jns
les
mov
(bad)
and
rcl
push
cwde
sti
mov
mov
pop
mov
outs
mov
lock
sub
clc
call
test
imul
adc
mov
cmp
daa
and
ds
les
iret
cdq
adc
dec
je
adc
fcomp
jnp
in
xor
add
jnp
lea
bound
imul
in
pop
adc
jecxz
sub
cli
mov
xchg
push
ds
in
and
add
inc
repz
call
loope
add
nop
fisttp
sbb
cdq
mov
icebp
test
push
ror
ficomp
dec
mov
inc
inc
push
mov
jge
mov
and
outs
(bad)
js
dec
pop
add
(bad)
nop
xchg
jae
push
dec
adc
movs
mov
cmp
aaa
push
jmp
mov
lods
push
jle
sbb
out
push
cmps
repz
jmp
sub
arpl
scas
adc
neg
jnp
push
das
sbb
rol
mov
imul
std
rcr
sub
fild
mov
or
js
dec
sub
(bad)
addr16
stos
add
mov
or
sub
enter
pop
pop
cld
mov
sbb
xchg
(bad)
std
mov
xor
or
or
fwait
test
dec
in
xchg
xchg
ror
jmp
ss
shl
dec
jge
sbb
cmp
mov
retf
das
inc
jl
sub
xor
add
jbe
jne
(bad)
loop
ins
sub
fld
pop
pop
jge
rol
jmp
out
daa
outs
bound
lds
and
adc
sahf
cld
add
inc
(bad)
addr16
mov
and
aas
sub
xchg
and
pop
daa
xchg
or
mov
fist
bound
sub
xchg
stos
and
int3
mov
test
jo
jo
mov
out
das
xor
xor
or
ss
xchg
xchg
or
mov
pushf
cld
mov
add
xor
ins
mov
or
cmc
pop
push
loope
clc
xor
not
sbb
cmps
enter
cdq
xlat
xchg
and
push
icebp
pop
popa
add
and
pop
pop
and
stos
mov
add
or
adc
cmp
sub
cmp
retf
repz
add
jecxz
push
adc
push
loope
ds
fldenv
fnstenv
mov
mov
int3
(bad)
aaa
add
jmp
(bad)
ds
ror
mov
mov
or
scas
(bad)
lods
fisubr
xlat
push
adc
aaa
psrad
mov
push
dec
js
mov
hlt
bound
retf
fsubr
mov
nop
xchg
jae
(bad)
jnp
ins
dec
lock
aaa
dec
xor
xor
out
sub
xchg
sbb
or
sub
mov
jecxz
sub
sbb
adc
mov
iret
cmps
or
push
aad
daa
push
xor
daa
fwait
pop
mov
fsubr
mov
xor
out
test
xchg
pop
sbb
inc
sbb
inc
(bad)
in
es
dec
aaa
in
mov
sbb
in
bound
dec
into
in
retf
and
xchg
xchg
push
loope
sbb
dec
sub
loopne
fwait
pop
mov
(bad)
in
int3
std
xchg
or
cmp
push
dec
clc
lock
fdiv
xchg
out
sbb
rcl
jmp
cwde
pop
xchg
iret
inc
iret
cmps
test
icebp
jb
rcl
and
add
mov
jne
(bad)
(bad)
call
and
mov
mov
xor
or
int3
jae
and
adc
leave
push
mov
or
loope
idiv
call
and
inc
stos
or
inc
arpl
mov
sti
(bad)
mov
mov
cmp
mov
(bad)
gs
sbb
daa
loop
test
push
inc
adc
inc
cmps
mov
repnz
gs
ds
mov
mov
xor
call
neg
sbb
jb
sti
rol
ds
into
scas
je
inc
scas
or
cmc
add
inc
push
add
xchg
xor
lea
imul
mov
push
or
fdivr
daa
push
pop
adc
std
xchg
pop
jl
sbb
sbb
cwde
call
fild
xchg
jmp
adc
cmp
jmp
dec
mov
scas
lock
fisub
(bad)
fisubr
sub
pop
cdq
retf
int3
mov
push
pop
xor
mov
push
add
push
or
mov
dec
cdq
cmp
or
push
adc
outs
mov
jmp
stc
add
push
xchg
jae
mov
xchg
fisub
fistp
push
or
loop
(bad)
test
frstor
cmp
cs
outs
call
mov
cmp
pop
outs
cmc
or
cdq
and
jnp
inc
push
pop
jg
jecxz
jae
in
popf
shl
and
(bad)
and
cmovge
jg
outs
dec
pop
pusha
inc
sbb
inc
lds
fcmovnb
xor
push
push
arpl
mov
xor
pop
cmp
push
cmp
jnp
dec
shr
mov
jmp
(bad)
mov
push
ret
xchg
fisubr
push
out
dec
pop
scas
sub
mov
pop
aam
pushf
ss
and
xor
jle
pop
pop
lods
pop
push
sub
outs
movs
jl
cmp
add
scas
mov
outs
stc
sub
add
pop
cld
jmp
mov
push
nop
(bad)
jbe
mov
into
gs
cs
xor
pop
xor
add
das
imul
(bad)
loop
ret
fidiv
pop
xlat
lahf
popf
xchg
xchg
adc
sbb
jae
test
mov
mov
clc
fwait
(bad)
out
das
ins
xchg
jecxz
pop
pushf
pop
aad
repz
add
and
(bad)
(bad)
loop
dec
out
sti
dec
jmp
imul
xlat
jo
and
call
sti
pop
mov
add
js
or
outs
push
and
cmp
clc
nop
mov
xlat
cld
push
mov
cmp
xor
aad
mov
mov
enter
push
cmps
mov
lods
int3
adc
pop
inc
mov
push
xor
cmp
mov
pusha
hlt
jns
loope
xchg
mov
sbb
push
int3
aaa
aas
gs
(bad)
js
xor
or
mov
mov
ins
out
jne
cmp
sub
push
(bad)
sbb
adc
lock
fdiv
jmp
nop
inc
imul
inc
xor
(bad)
(bad)
arpl
(bad)
sub
lods
shl
stos
push
scas
hlt
push
gs
cmp
fldcw
call
es
scas
xor
adc
sbb
xor
and
jmp
sbb
and
neg
in
mov
xor
popf
movs
imul
(bad)
dec
mov
mov
push
push
push
xchg
icebp
add
sub
frstor
mov
or
stc
bound
and
rep
pop
cmp
in
mov
in
xchg
loop
js
push
popa
mov
xchg
xor
adc
mov
ins
xchg
sar
push
cmps
dec
cwde
or
mov
mov
enter
bound
and
mov
mov
push
ins
xor
fdiv
cmp
retf
daa
enter
je
sub
(bad)
sub
addr16
(bad)
mov
call
ret
movs
adc
nop
out
scas
pop
push
call
mov
push
mov
aas
hlt
ins
xchg
xchg
test
mov
push
adc
cmp
cmp
ror
add
pop
test
sar
repz
or
push
push
fist
xor
xchg
sbb
out
cld
inc
cmp
retf
mov
repz
cli
push
(bad)
shr
out
std
outs
pushaw
jle
test
scas
pusha
mov
xlat
push
mov
faddp
les
mov
mov
sub
aam
cdq
jp
repz
out
jle
mov
and
or
jns
out
jg
into
fldenv
enter
jae
sbb
shl
inc
xor
movs
pusha
jle
or
icebp
arpl
adc
stos
hlt
sub
sbb
or
inc
test
js
pushf
and
iret
mov
jmp
popa
mov
sbb
pusha
push
push
and
add
xchg
sbb
mov
(bad)
jns
div
cmps
retf
mov
jno
mov
adc
ror
jbe
xor
call
sub
mov
inc
outs
jno
popa
adc
std
sbb
sbb
lock
fimul
lods
sub
mov
sub
ficom
push
cs
mov
dec
jmp
jp
mov
loope
lds
cmp
fdivr
daa
mov
jns
and
shr
into
rcl
and
xor
cmp
mov
cmp
iret
xchg
pop
fild
(bad)
and
scas
push
add
in
jb
int
jns
push
pop
(bad)
jmp
push
bound
popf
leave
push
cmp
mov
mov
repz
xchg
inc
ins
icebp
loopne
aas
gs
push
inc
imul
bound
jae
mov
inc
arpl
mov
retf
lds
pop
push
xchg
mov
jp
inc
test
cs
ins
cmp
mov
test
and
add
aaa
test
int3
scas
inc
push
xor
jae
adc
scas
xchg
dec
sub
push
cmp
pop
mov
jb
mov
stc
imul
loopne
iret
pop
mov
push
sub
cdq
adc
sbb
cmp
sub
test
sub
ja
dec
dec
xor
in
sub
scas
add
aaa
inc
test
mov
xor
jecxz
stc
pushf
mov
or
push
lods
lods
mov
or
inc
mov
mov
cwde
adc
fcomp
sub
push
rcr
cmp
and
or
pop
test
enter
fild
jl
push
dec
in
sub
cmp
push
das
stos
pop
xchg
pusha
test
sub
xchg
stc
popf
sub
inc
mov
ror
sahf
out
dec
aaa
out
adc
cmp
mov
dec
out
lds
pop
cmp
(bad)
xor
popf
pop
data16
sti
inc
pop
fistp
rcr
pop
dec
cmc
or
adc
addr16
lahf
sbb
xlat
addr16
(bad)
bound
retf
enter
(bad)
xlat
push
xchg
icebp
mov
jns
push
ror
adc
imul
push
stos
imul
inc
xchg
pop
ficomp
push
lds
shr
sahf
outs
mov
dec
xor
mov
ret
push
adc
pop
push
cmc
repz
scas
push
jg
cwde
mov
lahf
xor
add
fild
fistp
mov
data16
loop
pop
xlat
inc
xchg
xor
pop
shl
adc
mov
mov
mov
cmp
mov
cld
and
add
lock
xchg
and
sub
xor
ret
pop
cmp
and
add
popf
mov
jb
push
sub
add
inc
nop
mov
gs
les
dec
mov
cdq
mov
loope
mov
add
push
jo
cli
cld
push
or
loope
sub
(bad)
enter
icebp
add
jmp
call
jmp
jmp
pop
fsub
lock
ins
loopne
mov
test
out
mov
fistp
mov
sub
jge
aam
stos
outs
sbb
inc
retf
push
inc
sbb
xchg
mov
or
and
mov
repnz
inc
js
int3
jecxz
sbb
pusha
pop
ds
adc
mov
pop
pop
(bad)
scas
fld
cdq
jg
jno
adc
or
in
mov
and
test
dec
in
adc
pop
rol
cmps
push
mov
lods
cmp
fcom
push
ins
push
inc
in
ins
lods
rol
les
into
outs
push
sub
sbb
retf
cmp
repnz
aad
out
inc
ins
xor
movs
jbe
sub
ret
mov
les
icebp
add
adc
dec
sub
fsubrp
jo
pop
add
ret
fs
pop
call
or
lods
pop
mov
into
lods
jmp
cmp
movs
shl
data16
jecxz
cmc
mov
pop
mov
dec
loop
or
dec
or
cmc
xchg
sub
aam
cld
mov
push
sub
test
sbb
cs
push
sub
pushf
aas
test
scas
and
ins
stos
gs
adc
xor
xor
sub
or
pop
test
jbe
adc
mov
iret
xchg
ja
adc
push
(bad)
pop
popf
or
aas
dec
cmp
stc
jne
jl
xor
test
jmp
out
retf
mov
jo
clc
inc
std
int3
sub
lods
and
dec
mov
leave
fild
movs
ja
fnsave
ja
adc
outs
and
xchg
pop
push
iret
dec
jecxz
mov
pop
cmp
das
push
sub
sub
out
aas
jns
test
pop
jbe
jnp
and
adc
nop
dec
dec
cli
ja
xchg
mov
or
push
pop
adc
sbb
xor
rol
call
jno
cmp
mov
sbb
inc
cmps
add
xchg
cli
cld
fadd
dec
inc
add
or
aad
or
mov
and
clc
icebp
loop
jb
jae
mov
mov
aad
shl
loope
mov
dec
dec
sbb
dec
js
cmp
cmps
fdivr
daa
icebp
shl
cmp
jge
sub
or
xchg
imul
mov
mov
cmp
mov
mov
call
daa
xor
(bad)
and
sub
(bad)
retf
sub
mov
pop
hlt
lods
(bad)
pushf
neg
push
xchg
pop
and
xor
mov
xchg
bound
je
bound
aam
clc
not
loopne
push
cmp
(bad)
xchg
imul
loopne
std
arpl
sub
pop
arpl
fstp
(bad)
xchg
inc
aam
inc
sar
bound
setle
xchg
jbe
lds
or
cmc
inc
loop
ins
popa
in
loop
inc
daa
dec
stc
shl
pop
xor
mul
dec
jl
sub
dec
leave
dec
ffree
leave
aaa
inc
xchg
in
ror
adc
stc
inc
movs
push
fld
mov
cmp
cmc
mov
and
(bad)
mov
jmp
cmp
loop
jecxz
cmps
cmc
leave
and
dec
daa
imul
cs
js
and
or
and
sub
sahf
sub
cmps
push
call
and
int
dec
aam
cmp
xchg
xor
jmp
neg
out
jno
xor
out
cld
in
ss
cmp
and
and
pop
je
ret
loopne
jecxz
cdq
popf
cs
das
scas
add
movs
jnp
pop
mov
ss
mov
push
lock
mov
inc
xor
sar
add
gs
add
add
stc
inc
shl
push
sbb
inc
push
cmp
test
std
sbb
dec
or
popa
(bad)
xor
xor
mov
mov
mov
xor
int
(bad)
clc
outs
leave
mov
push
mov
xchg
outs
inc
sbb
jp
cwde
mov
mov
jo
mov
xor
sahf
js
sbb
sbb
pop
mov
adc
mov
aad
mov
les
push
lock
cld
enter
rcl
je
add
mov
jmp
and
push
(bad)
push
adc
js
jmp
stc
mov
mov
and
add
retf
add
xchg
fs
cmp
test
pop
mov
push
aam
and
mov
ffreep
adc
sbb
(bad)
jecxz
mov
or
pop
das
jns
or
fs
daa
retf
and
xchg
jnp
push
addr16
mov
xlat
aaa
les
mov
scas
cmc
jno
sbb
sub
retf
cli
rcr
inc
dec
cmp
ds
dec
xchg
icebp
add
jl
adc
lods
xchg
scas
sbb
mov
cmp
(bad)
cld
push
shl
add
xor
xor
cmc
sub
push
mov
jo
(bad)
inc
ret
mov
adc
mov
ret
cmp
call
and
mov
sbb
fidiv
pop
lock
neg
call
std
inc
leave
cmps
jp
movs
push
dec
pop
push
fidivr
sbb
mov
jnp
shr
ss
iret
sti
cmps
daa
dec
int3
mov
test
retf
test
aad
mov
es
push
fidivr
(bad)
lods
mov
shl
aad
jbe
ret
popf
dec
gs
jmp
push
test
scas
cli
add
aaa
sbb
push
mov
push
xchg
jmp
popa
adc
sar
(bad)
pop
or
hlt
xor
push
pop
cmps
mov
(bad)
shl
mov
inc
sub
inc
daa
jnp
pop
jmp
(bad)
cmps
add
xchg
mov
sahf
and
jmp
loopne
or
and
mov
mov
pusha
pcmpeqb
mov
(bad)
nop
add
inc
test
push
sbb
cmp
test
sbb
repnz
mov
cmp
add
out
jmp
sub
push
xchg
sahf
lock
adc
pop
push
mov
je
push
scas
fbld
int3
out
stos
(bad)
mul
jmp
xor
call
ss
sub
pop
xchg
sahf
jg
fcomp
jmp
mov
add
out
jle
es
inc
pop
frndint
jae
sub
mov
sub
lea
push
test
inc
cmp
inc
add
mov
mov
mov
into
repnz
mov
push
dec
fwait
neg
jmp
cmps
iret
or
(bad)
cmp
xor
aam
stos
clc
lods
mov
push
popf
std
lock
icebp
cmp
and
aaa
lahf
test
outs
rol
test
(bad)
fistp
in
pop
jmp
jmp
or
cdq
fisub
iret
cmp
lahf
mov
mov
test
mov
out
inc
pushf
or
or
sub
inc
cmp
push
jl
fadd
push
enter
fs
or
xor
mov
jae
mov
xchg
daa
bound
and
sti
stos
imul
(bad)
sub
xchg
pop
cmc
push
mov
inc
ds
rcl
inc
cmp
popf
push
fwait
pop
neg
or
mov
mov
pop
fidivr
imul
xor
jg
dec
and
(bad)
jg
or
jge
mov
rcr
div
adc
push
and
mov
adc
push
inc
xchg
and
(bad)
aad
lods
into
out
lods
push
mov
mov
mov
retf
or
shl
jp
cmp
pop
call
leave
jnp
jmp
pop
cmp
repnz
adc
jnp
icebp
cmc
(bad)
in
call
jp
dec
lahf
(bad)
and
popa
(bad)
(bad)
pusha
xchg
ds
inc
xor
or
xchg
or
push
pop
dec
mov
inc
out
push
mov
ins
jmp
xchg
ss
retf
add
ins
int
mov
mul
call
inc
xchg
xchg
ins
mov
and
add
or
mov
adc
push
or
pop
lods
mov
cmp
cdq
ins
lock
movs
shl
fwait
(bad)
push
cs
and
xor
stos
(bad)
jo
push
dec
jg
ds
outs
cmp
jl
xor
push
fucom
enter
ins
int
(bad)
sahf
int
arpl
cld
loop
jne
add
sbb
leave
call
movs
loop
xchg
scas
mov
jno
lds
je
fild
push
or
and
int3
test
or
sbb
cmc
sbb
mov
sbb
or
sti
clc
pop
jmp
(bad)
sub
lea
sti
bnd
or
jo
mov
les
sbb
shl
sbb
not
mov
jl
dec
test
mov
clc
mov
sahf
or
inc
pop
ins
sbb
sbb
sbb
ins
dec
loopne
sub
push
jo
fdivr
mov
call
dec
xchg
(bad)
ja
popa
test
popa
cdq
cmp
lock
mov
and
dec
(bad)
call
lahf
hlt
aad
scas
mov
sub
add
rol
sub
fsubr
push
push
movzx
call
inc
pop
xchg
sti
out
(bad)
inc
mov
push
xor
arpl
retf
movs
dec
push
mov
scas
int
cmp
fbld
scas
dec
imul
add
imul
or
push
cmp
scas
loopne
fwait
ja
sbb
call
or
mov
(bad)
ficom
test
jnp
push
pushf
sub
push
add
jno
inc
int
jmp
inc
shr
jg
arpl
cmp
push
push
hlt
daa
inc
adc
mov
inc
pushf
stc
mov
dec
mov
pop
ficom
pop
adc
jmp
mov
dec
mov
stos
(bad)
xchg
push
xor
(bad)
jmp
sbb
xor
fisttp
sti
and
jae
(bad)
mov
pop
dec
xchg
or
jg
cmps
hlt
cmp
mov
inc
sbb
div
fcmove
div
and
loopne
pop
push
es
rcl
loope
cmp
rol
ins
pop
xchg
mov
jns
(bad)
dec
pop
sbb
jns
sbb
shl
in
adc
(bad)
jp
cmp
cmc
xchg
mov
icebp
inc
nop
aas
mov
cmp
cmp
call
mov
mov
mov
imul
inc
shl
xchg
shl
ds
pop
jecxz
dec
jnp
add
fadd
std
and
inc
mov
mov
(bad)
push
inc
ds
repz
pop
stc
les
cmp
loopne
or
push
pop
fistp
outs
ja
add
mov
push
aad
in
jmp
shr
adc
mov
rcr
push
clc
xor
cmps
outs
das
mov
or
repnz
push
test
add
(bad)
js
lods
int3
mov
sti
or
mov
or
mov
pop
adc
dec
or
out
xchg
xchg
push
iret
dec
push
mov
pushf
add
cmps
in
out
sub
fldcw
mov
pop
push
int3
clc
and
dec
test
lods
jmp
cmp
sbb
mov
mov
call
mov
push
xchg
pop
jmp
aaa
adc
mov
push
xor
aad
add
call
movs
out
jle
fwait
and
fcomi
out
cmp
imul
mov
mov
jne
sbb
nop
addr16
cmp
aas
popf
out
inc
sti
nop
loopne
xor
cmps
cmps
sub
push
ins
jl
out
or
jae
addr16
push
std
mov
jg
sti
sbb
mov
mov
test
fiadd
and
in
mov
cmp
cmp
ds
mov
sbb
out
aaa
dec
cmps
push
js
lds
push
add
mov
add
pop
jl
push
sahf
and
mov
gs
stc
xchg
sbb
pop
sbb
push
repnz
dec
pop
push
(bad)
sar
cmp
xlat
push
and
pushf
sbb
xor
sti
ins
stc
gs
scas
adc
test
clc
fidivr
xchg
ret
scas
mov
icebp
mov
call
ud0
pop
and
scas
or
add
xchg
add
ror
mov
fdiv
cmps
pop
call
push
test
rcl
sbb
jae
inc
sub
mov
(bad)
rol
sbb
sub
sbb
out
and
sbb
push
aaa
mov
fs
cmp
arpl
int3
daa
addr16
jae
xor
das
call
mov
jmp
jno
add
mov
fbld
pop
mov
ds
popf
jne
push
push
adc
popa
xor
in
test
pop
imul
imul
mov
cmc
outs
fild
or
lldt
mov
scas
and
or
fstp
rol
adc
sbb
call
cmp
call
imul
call
jo
js
xchg
xor
add
xchg
add
ds
mov
ds
mov
adc
stos
arpl
jne
inc
mov
movs
hlt
xchg
adc
mov
add
les
lea
cwde
mov
pop
and
xor
sbb
jecxz
ds
addr16
leave
out
jl
dec
push
mov
cmp
lods
adc
jmp
pop
fsubr
ins
cmp
dec
repnz
mov
sbb
out
pusha
aaa
mov
sub
cmp
fcom
out
lock
dec
mov
daa
mov
pop
(bad)
fs
in
pushf
rol
dec
xor
jle
mov
sar
retf
movs
popa
test
mov
mov
or
xor
js
sbb
(bad)
call
sbb
pop
or
xchg
sub
ficom
repz
mov
dec
or
mov
jge
stc
inc
retf
repnz
daa
cmps
shl
mov
daa
pop
jg
sahf
and
or
mov
lock
inc
ret
aaa
sbb
jecxz
lods
pop
xchg
cdq
dec
(bad)
lods
add
xchg
or
fs
hlt
add
call
and
scas
test
(bad)
jnp
jne
sar
lahf
rcr
loopne
stos
mov
aam
push
cmp
mov
mov
xchg
in
push
cdq
mov
pop
jae
call
jmp
ja
fnstenv
sbb
or
push
jge
mov
push
or
xor
cli
inc
gs
test
xor
sbb
mov
adc
xor
xchg
retf
out
jecxz
lds
sub
cmc
sub
push
add
int
aaa
loop
jmp
xchg
outs
sbb
ja
adc
mov
iret
addr16
mov
add
pop
xchg
and
inc
pop
addr16
push
pop
int
mov
std
xor
mov
xor
push
fwait
mov
cli
pop
rcl
enter
add
sbb
test
mov
mov
adc
fadd
(bad)
cmps
xchg
or
inc
call
cdq
int
xlat
out
or
mov
ficomp
out
mov
mov
dec
xchg
and
out
fnstcw
push
sahf
ss
pop
jmp
fcom
sbb
sar
arpl
or
sbb
jb
pop
int
out
pop
cmp
sub
dec
out
js
add
add
bound
mov
sub
push
outs
inc
(bad)
in
mov
arpl
sar
and
dec
and
das
sbb
cmps
jo
jmp
clc
mov
pop
cmp
push
fiadd
(bad)
imul
jg
pop
stos
xchg
pop
hlt
cmc
and
pop
xor
aaa
imul
sub
mov
addr16
xchg
pop
cmp
push
pop
fs
cmp
js
shr
mov
add
test
push
pop
cdq
fwait
imul
jge
int3
push
mov
dec
mov
jecxz
jb
adc
adc
or
out
sti
sbb
sub
push
adc
pop
add
pop
lea
int
mov
and
jae
jmp
adc
mov
aad
ins
sub
xlat
xchg
mov
add
sub
pop
imul
sbb
jne
xchg
je
(bad)
call
repz
xchg
or
xor
cmc
xchg
repz
jbe
jecxz
mov
daa
jbe
cmp
pop
inc
xor
das
(bad)
jmp
sahf
add
adc
mov
add
inc
cdq
push
(bad)
add
inc
sbb
pop
jno
daa
mov
sub
rol
pop
sub
cmp
jns
adc
pop
ret
cmc
nop
mov
fild
lock
jmp
sub
stos
xchg
cld
jl
lock
popa
pop
adc
mov
nop
mov
(bad)
pop
xor
cmp
jo
nop
imul
fsub
rcl
xor
fdiv
or
ret
sti
retf
int3
sub
inc
fimul
call
popf
(bad)
push
fdivr
lahf
fwait
loop
xchg
push
in
mov
std
(bad)
pushf
leave
jg
jg
pop
daa
stos
out
sbb
push
mov
cmp
push
pop
jg
cmps
mov
sub
sub
cmove
xchg
mov
sahf
mov
pop
cld
es
movs
sti
ins
ins
mov
cwde
mov
lahf
xchg
rol
pandn
sub
in
lahf
dec
sbb
pop
xchg
xor
inc
jne
xor
ret
inc
ror
inc
sbb
cmp
rol
call
pop
push
je
repnz
xchg
(bad)
fild
cmp
and
and
icebp
mov
or
jp
and
rol
mov
mov
and
mov
neg
pop
mov
cmp
imul
mov
retf
jb
retf
ret
cmp
dec
inc
pop
xchg
push
ins
or
test
test
sub
mov
dec
jns
sbb
xchg
icebp
jl
cmps
jmp
gs
xor
fmul
mov
xchg
lea
out
dec
inc
jmp
push
jo
(bad)
mov
and
mov
inc
dec
cmp
cmp
pop
cmp
mov
mov
js
push
push
pushf
sti
dec
xchg
iret
sbb
lds
push
push
pop
sbb
pusha
add
(bad)
lds
repnz
addr16
xchg
sar
retf
adc
call
pop
jae
movs
int
dec
adc
movs
jno
jmp
cmp
push
sbb
push
test
call
repz
jmp
pop
fstp
lds
mov
enter
mov
je
les
retf
or
lods
loop
int
shl
mov
js
sub
mov
mov
xchg
shl
xchg
jle
jmp
std
inc
sbb
inc
ret
les
or
and
daa
cmp
mov
xor
jmp
pop
fnstcw
aaa
bound
mov
data16
ins
xor
add
retf
mov
inc
adc
fisubr
pop
mov
outs
inc
jp
test
das
icebp
pop
lahf
or
jne
mov
inc
hlt
shr
jbe
mov
sbb
iret
test
xchg
push
dec
add
xchg
push
aaa
jbe
mov
xchg
xlat
mov
sbb
push
push
(bad)
push
outs
cmp
dec
sahf
push
sub
fnstcw
clc
je
fisttp
mov
mov
sti
xchg
scas
jmp
movs
scas
jl
gs
rcr
sbb
mov
jbe
enter
adc
or
adc
mov
pop
aad
test
xor
cld
add
stc
adc
or
mov
je
pop
sub
(bad)
retf
loope
ins
test
sbb
ss
sub
adc
pop
je
add
push
sub
pop
stos
inc
sti
cmp
push
fwait
hlt
jo
dec
(bad)
fs
mov
into
addr16
clc
mov
scas
(bad)
and
mov
and
mov
jnp
add
outs
mov
in
(bad)
stc
xchg
add
daa
add
cmp
out
fwait
leave
ss
popa
inc
shl
mov
sbb
push
dec
and
stc
ret
xchg
aad
push
aad
popa
cmp
pushf
inc
mov
jmp
mov
mov
mov
inc
dec
fnstenv
add
xor
mov
pusha
aaa
shr
movs
je
out
pop
stc
aad
and
or
add
xchg
call
or
pushf
jmp
dec
inc
xchg
inc
enter
mov
mov
fmul
imul
lods
cmc
cmp
cmp
jecxz
addr16
xchg
(bad)
mov
pop
test
dec
pop
cmp
mov
(bad)
into
lahf
ret
sar
cmp
xchg
fadd
call
dec
push
data16
or
shl
jne
imul
pop
lds
in
fiadd
out
clc
stos
or
jbe
retf
aas
test
xlat
mov
jne
call
imul
loopne
enter
out
test
retf
or
or
or
stos
xlat
jmp
sbb
pop
fcmovu
in
adc
out
sub
inc
loop
sti
stos
jo
inc
mov
movs
aaa
lea
pop
pusha
out
adc
xor
call
sahf
push
xchg
repnz
cmps
test
xchg
or
adc
sub
jmp
cs
data16
mov
and
add
push
call
imul
or
out
jno
or
xor
add
iret
out
or
int
test
push
addr16
into
push
sbb
or
xchg
jnp
pop
daa
xor
pop
sbb
pop
mov
movs
xchg
mov
push
shl
lock
shl
popa
stos
sbb
div
xchg
ins
dec
test
lock
pop
mov
or
fsubp
adc
lods
jp
sub
into
or
cld
sub
jne
push
mov
pop
in
jno
xchg
fld
leave
fidiv
mov
fsubr
pop
add
dec
sti
xor
cwde
in
jle
int
(bad)
inc
mul
cmps
(bad)
mov
adc
fs
in
jecxz
mov
push
ret
add
xchg
into
push
sub
scas
int
popf
(bad)
fwait
enter
shl
adc
jmp
fwait
sbb
mov
jl
pusha
lea
(bad)
repnz
fs
scas
les
lock
cmp
push
and
mov
or
jb
add
in
sbb
pop
xlat
xchg
lahf
jno
push
and
mov
mov
test
jae
aas
popf
loopne
lds
mov
mov
jle
fst
jmp
jmp
jb
xchg
rcl
xchg
xor
cmp
pop
jne
fdivr
retf
jp
lock
lea
cmp
sub
push
in
sahf
pop
pop
or
lock
push
inc
pop
cdq
inc
iret
int
int3
jecxz
pop
sbb
push
xor
fild
js
dec
pop
pop
mov
add
stos
frstor
push
daa
shr
shr
or
jmp
push
push
adc
dec
push
mov
imul
xor
mov
pop
js
cmp
push
shl
inc
call
lock
sbb
jbe
add
and
jne
in
sbb
push
imul
push
arpl
imul
push
std
jmp
sub
lds
lea
lahf
or
out
std
push
data16
punpcklbw
lods
sbb
jmp
or
aas
shl
xlat
hlt
movs
ret
es
repnz
sbb
dec
hlt
or
outs
or
jecxz
in
pop
aas
pop
loopne
ins
hlt
push
sbb
jb
sbb
sub
mov
xor
sbb
or
dec
fldenv
js
add
call
fldcw
cmps
rcl
stos
cmp
mov
and
xor
cmp
dec
cld
fsub
(bad)
fsub
sbb
test
pop
bound
test
pop
in
sbb
sub
sbb
popf
stos
push
cmp
stos
clc
(bad)
call
cli
mov
and
adc
out
out
jno
fbld
movs
jmp
push
mov
rcl
dec
into
or
ins
mov
shr
jl
jecxz
xchg
nop
cmps
cmp
cmp
stc
xor
jmp
mov
cs
aas
les
push
push
scas
retf
push
cmp
(bad)
mov
sahf
shl
or
sub
mov
or
mov
mov
cmp
int3
rol
gs
mov
aad
cmps
mov
adc
mov
aaa
div
out
pop
(bad)
jae
rcr
mov
aad
pop
(bad)
popf
retf
xchg
mov
cdq
xchg
mov
aas
stc
or
leave
adc
inc
mov
fldenv
stos
jae
mov
out
imul
dec
mov
adc
lahf
ins
mov
loopne
cli
test
push
sub
mov
mov
sbb
in
mov
and
lods
pop
out
mov
or
dec
js
sar
or
pop
aam
rol
mov
xor
and
xchg
dec
rcl
fmul
xor
add
mov
daa
dec
jle
rol
dec
pop
dec
or
pop
jns
sub
nop
xlat
push
call
xchg
popf
mov
sbb
lea
out
xor
out
dec
loopne
add
lea
xlat
call
cmps
xchg
mov
les
into
xchg
or
dec
in
xor
fldcw
pusha
xor
(bad)
gs
jecxz
push
and
in
xchg
sbb
cmp
popf
adc
fadd
mov
mov
push
cmps
loope
lock
sub
das
push
gs
sbb
ss
xor
jle
stos
aaa
xor
xchg
inc
fnstsw
lea
push
push
mov
jae
cmp
dec
mov
pop
push
sub
mov
addr16
jno
sub
outs
and
mov
mov
adc
gs
lahf
sbb
dec
mov
inc
fmul
lods
inc
and
dec
test
push
cmp
scas
(bad)
stos
xchg
add
pop
cmps
xchg
mov
sti
xchg
mov
lds
push
push
popf
push
pop
xchg
mov
in
or
movs
mov
push
cdq
adc
mov
add
jg
adc
and
mov
sbb
loopne
mov
mov
lock
lock
mov
pop
cs
jg
or
mov
push
call
mov
out
and
mov
mov
mov
mov
fcmovne
mov
clc
inc
add
or
leave
adc
sub
ret
xor
add
xlat
(bad)
nop
loop
(bad)
mov
mov
sar
adc
xor
out
(bad)
jns
xor
adc
pop
mov
jmp
dec
inc
xor
push
clc
jo
in
and
xor
add
imul
or
jmp
mov
and
gs
fistp
xchg
cmps
dec
test
mov
xlat
jb
or
(bad)
cmp
es
mov
inc
mov
jge
add
cmps
out
mov
inc
dec
sub
inc
repnz
mov
jo
mov
mov
xor
jne
pop
and
or
cmp
add
inc
xchg
pop
int
dec
xlat
mov
jmp
or
cmp
pop
out
xchg
loop
pop
fist
cmps
pushf
outs
dec
dec
pop
mov
inc
(bad)
sub
sub
ds
pusha
shl
jmp
xor
dec
das
cmp
test
gs
cmp
sbb
(bad)
fsub
mov
bound
mov
mov
mov
fcom
xchg
scas
into
jno
xchg
sub
and
rol
inc
test
sbb
shr
xor
or
xor
pop
test
int
push
adc
adc
scas
cwde
mov
(bad)
push
and
cs
aam
xor
sub
in
ret
mov
dec
and
mov
bound
cwde
movs
xor
ret
xor
ins
dec
nop
jmp
add
push
ins
enter
test
pop
adc
jge
aaa
or
imul
arpl
out
push
iret
sbb
int
in
sub
aam
(bad)
retf
mov
and
ret
retf
out
loopne
xchg
ror
mov
sub
popa
fsubr
jl
fsubr
movs
sbb
jl
mov
pushf
ret
add
(bad)
rcr
js
aas
dec
sbb
pop
test
jb
jmp
es
rcr
or
lea
stos
adc
ds
retf
dec
adc
in
repz
add
ins
inc
(bad)
cmp
dec
xchg
jno
ins
inc
add
stc
pop
and
mov
adc
arpl
mov
dec
push
in
adc
mov
push
push
push
bound
xor
sbb
jb
ror
jl
add
sbb
imul
mov
fcom
dec
dec
sub
adc
retf
fwait
addr16
pop
pop
lock
int
xchg
sbb
push
outs
xor
adc
inc
inc
in
imul
mov
loopne
push
adc
xchg
cs
cmp
or
int3
mov
mov
mov
sar
cmps
xor
cmp
sub
push
sub
sub
pusha
aam
xchg
mov
mov
jbe
add
scas
ins
pop
dec
mov
cmp
add
mov
push
push
fcom
xchg
xchg
and
or
stos
or
les
retf
mov
or
aas
sbb
mov
ss
xor
inc
dec
jmp
(bad)
test
jbe
cld
mov
cld
jmp
lods
cwde
(bad)
pop
push
fdivr
mov
jg
sbb
mov
mov
sbb
sti
daa
iret
aam
sbb
or
jecxz
xor
mov
inc
mov
out
mov
or
sar
repz
cmc
sar
xor
pop
inc
test
sbb
push
push
xchg
push
loopne
sub
(bad)
add
xchg
int3
dec
and
iret
mov
inc
inc
xor
push
daa
fcomi
jmp
in
or
pop
push
push
imul
in
imul
jne
adc
out
fs
cwde
loopne
mov
push
sub
push
std
sti
cwde
cmp
test
ins
fmul
ret
dec
sbb
dec
mov
inc
inc
jg
loope
push
mov
fcmovnb
inc
mov
neg
sub
shl
adc
mov
xchg
jb
mov
and
jns
cld
mov
sbb
stos
test
adc
pop
xchg
sub
js
jmp
(bad)
sbb
adc
push
cmp
cdq
loopne
xchg
xchg
adc
fs
(bad)
std
jno
pop
rcr
ss
push
pop
cdq
add
push
pop
stos
rcl
data16
push
xchg
xchg
ret
lods
arpl
iret
js
mov
cmps
out
push
test
jne
(bad)
ret
movs
ret
ins
dec
dec
(bad)
stos
add
push
stos
rep
sti
and
retf
or
ret
icebp
dec
aas
dec
(bad)
and
dec
jl
fild
rol
pop
lds
dec
mov
lods
loop
jmp
mov
sar
in
adc
ud1
imul
movs
out
dec
jb
cs
inc
xchg
imul
dec
jne
sbb
or
jmp
leave
int
mov
push
push
pushf
mov
mov
xor
pop
cmp
or
cli
fsub
(bad)
mov
mov
jae
adc
or
ds
jge
test
test
dec
dec
nop
(bad)
jg
sbb
jg
int3
(bad)
mov
cwde
lock
and
in
scas
lds
jb
and
ins
adc
jo
push
pop
test
stos
push
or
sti
(bad)
cwde
mov
cmp
mov
inc
sub
dec
rcl
and
outs
popf
ss
pop
call
add
xlat
sub
mov
iret
pop
iret
lds
jnp
fisub
or
ins
(bad)
jo
dec
and
(bad)
push
aad
jmp
aas
dec
test
jnp
mov
std
and
mov
loop
pop
xor
fcomp
or
or
cmp
mov
cmp
(bad)
fs
sub
gs
pop
jg
in
test
mov
fs
je
sub
pop
sub
jg
aad
in
aam
sahf
inc
cmp
inc
push
test
cli
out
stos
or
add
sbb
nop
retf
dec
arpl
jmp
test
mov
outs
daa
dec
and
jno
add
retf
sub
mov
imul
cld
xor
aam
pop
in
ins
repnz
test
pmaddwd
int
ins
pop
push
aad
shl
xlat
stos
dec
cld
pop
push
jns
inc
xor
js
scas
ret
mov
lods
dec
sbb
or
fwait
cld
sub
lods
xlat
mov
pop
xchg
stos
repz
push
xor
out
and
arpl
jb
aaa
bound
xchg
pop
jg
in
jp
out
adc
cmp
(bad)
retf
xchg
add
pusha
retf
icebp
sub
mov
repnz
sti
cmp
inc
sub
jl
jne
pop
xor
fcmove
int3
call
mov
test
xchg
std
or
outs
out
cmc
lods
inc
mov
adc
add
jno
adc
scas
(bad)
mul
(bad)
in
xchg
leave
movs
arpl
icebp
lock
inc
leave
jge
not
dec
jecxz
dec
das
push
(bad)
iret
bswap
pop
xchg
iret
adc
push
and
xchg
adc
popa
mul
cwde
and
adc
mov
adc
inc
(bad)
pushf
mov
aam
std
or
es
cmp
dec
adc
ror
pop
cmp
aaa
repz
stos
(bad)
popf
outs
inc
(bad)
fadd
(bad)
div
das
call
jecxz
and
xchg
push
aam
dec
inc
xchg
arpl
mov
ret
mov
sar
pop
sub
int
dec
jp
(bad)
xchg
add
sar
and
and
aam
fsub
int3
add
mov
adc
xchg
and
inc
cmp
idiv
sbb
mov
pop
lock
outs
push
or
pop
retf
fistp
(bad)
es
ss
mov
scas
in
mov
xchg
icebp
xchg
sub
push
mov
out
sub
scas
or
pusha
add
push
cmp
(bad)
lods
mov
xchg
cdq
xor
xchg
push
or
not
xor
inc
pop
mov
sbb
out
clc
push
in
cmps
(bad)
and
call
mov
in
xor
dec
sbb
or
inc
inc
cld
leave
clc
jns
sbb
movs
sbb
clc
pushf
push
mov
jno
mov
shr
mov
xchg
pop
jecxz
shl
push
test
pop
sub
jl
mov
pop
int
fist
imul
push
imul
pop
inc
fadd
push
imul
int
outs
xchg
sahf
sub
call
jb
pop
mov
lea
and
adc
sub
out
inc
adc
loope
not
cli
add
jmp
mov
rol
xchg
dec
es
call
pop
adc
xchg
aaa
movs
ror
push
add
js
xchg
pop
fld
(bad)
pusha
xor
movs
jecxz
xor
movs
xor
loope
or
bound
or
push
inc
xchg
or
xchg
out
je
and
add
les
lea
jnp
jp
mov
pop
mov
pop
aaa
aam
cmps
xchg
inc
and
out
(bad)
ja
imul
dec
jns
add
mov
push
push
in
push
repnz
and
inc
xchg
fiadd
dec
scas
adc
call
call
and
in
pop
ins
repz
mov
(bad)
int
iret
xchg
jmp
int3
sub
les
sbb
add
cli
outs
mov
ja
add
dec
out
inc
push
and
pop
or
call
psubsw
hlt
and
stos
fadd
xchg
pop
movs
fmul
xor
ret
into
inc
xor
dec
fs
sahf
(bad)
mov
sahf
lock
add
cwde
dec
rol
rcr
imul
or
xchg
neg
inc
ja
inc
retf
xor
test
pop
fld
fist
or
jl
iret
add
shr
adc
imul
jmp
fimul
jb
dec
out
xchg
cmps
ins
mov
std
outs
cwde
rcr
popf
and
add
std
push
out
jecxz
add
push
out
test
adc
or
xor
xor
mov
and
cmp
adc
in
inc
mov
(bad)
sbb
mov
jo
jbe
mov
ret
int
cmps
inc
adc
lods
sti
mov
jecxz
push
test
mov
fmul
cmp
shr
add
les
ret
and
inc
imul
mov
mov
jmp
and
xor
(bad)
mov
cmovbe
adc
push
jae
jae
(bad)
xor
push
pop
adc
push
nop
movs
dec
movs
(bad)
jo
push
jno
mov
push
push
(bad)
in
mov
inc
mov
in
repnz
add
add
fs
leave
add
inc
mov
cmp
in
xor
outs
cs
add
xchg
mov
inc
jle
sar
mov
pushf
jmp
retf
mov
pop
fwait
bnd
adc
and
inc
sub
sub
nop
sub
mov
scas
push
pop
pop
into
or
pop
out
push
pop
mov
pop
and
lods
daa
xchg
mov
jl
push
mov
sbb
jmp
jmp
or
ldmxcsr
scas
loopne
int
add
leave
in
dec
jo
repnz
xchg
cmc
stc
cmps
and
pop
addr16
jne
mov
and
rcr
or
stos
sbb
scas
jb
jp
and
inc
inc
popf
jo
movs
adc
movs
xor
sbb
arpl
or
sti
dec
cmps
add
jbe
jb
xor
or
imul
cvtpi2ps
mov
inc
inc
dec
cmp
and
jp
adc
mov
push
jmp
and
enter
fldenv
jmp
fst
out
xor
and
(bad)
aaa
cmc
sbb
std
add
loopne
dec
dec
imul
or
adc
and
pop
mov
sbb
push
sbb
movs
dec
jl
leave
lea
add
shl
nop
pop
leave
push
inc
inc
daa
gs
xchg
jo
or
pop
jo
mov
mov
call
scas
lea
pop
xor
stos
aad
fcmovbe
jecxz
addr16
mov
outs
(bad)
rol
call
fisub
out
and
cmp
cli
xor
jne
push
mov
inc
add
(bad)
push
mov
fs
jecxz
pop
push
das
xor
xor
call
jbe
inc
iret
mov
add
daa
aaa
ds
in
sbb
cli
pop
jl
mov
imul
(bad)
aas
cmp
xor
fadd
xor
push
daa
add
add
xchg
rcl
adc
cmp
(bad)
aad
mov
add
popf
pop
les
sub
pushf
jbe
pop
xchg
mov
sahf
xor
and
push
loopne
popa
xchg
cmp
mov
mov
lds
mov
sbb
leave
mov
inc
jae
lahf
xor
fild
jae
in
ds
xor
mov
add
enter
out
aas
je
and
jp
xor
loop
xor
int3
or
in
xchg
test
cmps
cmp
enter
int3
inc
cmps
aas
ss
bound
bound
add
(bad)
sub
cmp
cmc
lods
(bad)
stc
mov
mov
xchg
inc
out
fsubr
sbb
fcomp
mov
cmp
adc
pushf
aaa
out
lods
pusha
fwait
and
mov
add
(bad)
sti
adc
loop
mov
daa
pop
addr16
cmp
push
aas
icebp
in
mov
popf
adc
fs
and
xor
add
mov
xchg
push
outs
fiadd
add
in
push
lahf
(bad)
scas
cmps
xor
call
inc
stos
xor
mov
cmp
pop
call
(bad)
(bad)
mov
out
add
xchg
jbe
iret
push
int3
lahf
jnp
xor
inc
inc
rol
test
ds
in
jge
out
dec
push
sub
mov
xchg
jle
mov
into
pop
movs
es
mov
mov
fiadd
pop
shl
cmc
cmc
mov
hlt
jb
and
mov
lods
outs
xor
jmp
push
loopne
das
lock
fdivr
xchg
push
dec
adc
xchg
aad
fwait
icebp
jge
adc
and
mov
ds
add
cmc
cmp
cwde
dec
inc
ret
out
jl
sub
adc
mov
push
sar
aad
xor
retf
mov
inc
inc
mov
xchg
in
mov
movs
mov
xor
jmp
push
mov
cmp
and
je
ja
js
add
fld
fdivr
mov
push
inc
aam
mov
repz
mov
sbb
mov
ins
das
sbb
add
mov
int
fdivr
xor
jle
jge
loope
ins
inc
call
cmp
pop
ret
dec
test
fs
sbb
add
ja
popf
lds
repz
xor
cmps
xchg
push
cmp
xchg
icebp
pop
push
sub
shr
out
out
imul
lahf
push
xlat
aas
call
jg
adc
adc
out
cwde
mov
pop
inc
pop
push
push
pop
sub
ret
mov
add
retf
inc
repz
mov
loopne
es
test
cmp
adc
push
js
nop
shl
loop
mov
xchg
or
(bad)
(bad)
cmp
ret
add
test
sbb
imul
sahf
add
inc
mov
mov
mov
retf
jno
mov
repnz
dec
cmp
xchg
lahf
cmp
nop
mov
ret
cmp
push
test
mov
mov
sub
mov
jnp
dec
test
push
adc
iret
mov
mov
pop
fstp
ss
xchg
or
xchg
fwait
and
and
pop
in
push
cmp
fild
sub
in
add
addr16
addr16
add
pop
sub
in
xchg
ret
pop
inc
mov
cmp
push
lock
inc
xchg
retf
mov
sub
add
mov
rcr
(bad)
mov
mov
push
movs
and
loop
rcr
dec
mov
jle
push
inc
or
fld
jns
mov
push
lock
push
mov
ins
cmc
imul
ror
and
mov
sub
xor
es
test
sub
dec
daa
inc
cmp
adc
hlt
jge
leave
loope
imul
sar
bound
outs
aam
jmp
rcr
cmp
aaa
push
jecxz
pop
rcr
fisub
and
(bad)
and
in
add
fdivr
call
cmp
push
push
les
push
pop
mov
mov
inc
pop
out
dec
stos
sub
sub
xchg
mov
ja
ret
jbe
shr
and
lods
inc
xchg
cmp
xor
fcmovnb
cmp
sub
jae
jnp
mov
div
jmp
movs
imul
fwait
(bad)
outs
adc
add
cwde
sar
xor
call
fistp
mov
pop
inc
sub
pushf
movs
(bad)
xchg
push
or
mov
xor
or
sbb
fwait
movs
scas
sub
int3
mov
add
pop
sub
add
mov
lods
add
mov
add
adc
mov
cmp
xchg
(bad)
sbb
aas
cmp
inc
jo
das
jmp
aaa
jb
adc
pop
add
jmp
repz
xchg
xchg
inc
arpl
mov
pop
fidiv
cmp
ja
rcl
lahf
fsub
push
xor
dec
stos
push
bound
(bad)
mov
mov
test
adc
push
adc
xchg
popa
loopne
pop
mov
cli
adc
imul
sti
jg
push
popa
and
add
jae
out
adc
mov
adc
lds
cmc
xchg
out
daa
add
cmp
stc
int3
jecxz
adc
int
ds
lock
test
sbb
dec
es
in
pop
shl
mov
add
jne
fs
mov
pop
in
sbb
inc
dec
inc
es
(bad)
lods
push
loopne
inc
mov
or
adc
pinsrw
xor
aam
xchg
jae
dec
into
pop
mov
xor
mov
mov
dec
imul
fbstp
push
aam
dec
push
jb
out
stos
pop
arpl
sbb
in
fild
mov
jl
xchg
mov
mov
pop
push
add
test
popf
xlat
dec
ret
push
movs
daa
retf
sbb
pop
xor
xor
add
mov
jle
add
add
stos
jge
scas
mov
add
cmp
ror
or
jmp
pushf
addr16
fldl2e
jmp
cmps
mov
adc
stos
in
sbb
jnp
mov
mov
jle
dec
jne
mov
sub
bound
inc
movs
rol
cmps
adc
(bad)
pop
jbe
dec
push
or
stos
push
mov
mov
cwde
adc
jne
shl
mov
sub
dec
pop
test
and
fmul
jo
div
aaa
mov
int
retf
imul
dec
fiadd
mov
ds
sbb
cmp
cmps
push
push
mov
imul
jns
inc
jmp
inc
sti
(bad)
int3
mov
hlt
mov
outs
adc
scas
ret
(bad)
stos
add
(bad)
mov
xchg
xchg
das
sahf
mov
cdq
aam
cmp
push
test
shl
ins
ja
test
sub
inc
ss
cs
add
out
cmps
fdivr
out
jbe
or
or
sub
jg
clc
outs
mov
je
clc
outs
or
fsubrp
push
cmp
aas
(bad)
shl
cdq
cmp
and
js
cwde
mov
das
cld
popf
test
shl
in
cs
and
clc
scas
fs
adc
mov
popw
retf
add
push
mov
inc
xchg
shr
pushf
adc
out
xor
pop
icebp
adc
cdq
or
loop
xchg
jb
sbb
push
and
dec
clc
jle
cmps
xchg
call
mov
repnz
mov
rol
jle
add
fstp
mov
hlt
loopne
clc
adc
pop
inc
dec
pop
push
sub
ds
lods
out
xchg
push
test
or
fsubr
or
inc
add
cmps
ret
xor
pop
xchg
push
cdq
mov
pop
idiv
pop
dec
aas
out
retf
js
push
idiv
dec
pop
jno
mov
pushf
es
clc
xchg
push
dec
jge
dec
mov
rol
inc
mov
pop
mov
pop
dec
mov
mov
sbb
mov
cmp
dec
dec
push
scas
ret
pop
fiadd
xchg
dec
enter
mov
and
ffree
pop
stos
adc
test
lock
es
ja
test
cmp
xor
outs
mov
push
or
push
mul
push
cmc
xchg
jge
call
jp
aad
lahf
cmc
xor
jp
rol
pushf
out
test
cmp
icebp
retf
inc
imul
sub
stos
jl
cmp
ja
fsubr
lds
sub
mov
movs
lock
aam
push
ins
dec
in
div
push
lods
je
cmp
call
test
mov
xlat
das
mov
je
cmps
mov
xor
fidivr
or
add
cmp
dec
mov
int3
cmp
mov
sub
inc
xlat
fnsave
sbb
fsubr
xor
data16
push
scas
and
int
test
in
and
sbb
pop
loop
cmps
mov
xlat
inc
dec
repz
sub
and
push
test
stos
and
stos
(bad)
xchg
lahf
push
jl
enter
imul
mov
loop
mul
in
daa
lahf
xor
xlat
stos
int3
mov
adc
mov
mov
mov
sti
(bad)
mov
jo
in
mov
sbb
mov
cmp
pop
cmp
or
imul
mov
imul
inc
stos
fisttp
push
gs
dec
jl
lahf
aad
pop
sub
mov
dec
mov
cmp
lods
mov
cmp
inc
fld
push
sub
push
push
mov
popa
sbb
fs
in
lds
div
inc
cmp
lods
in
sahf
or
aas
jnp
pop
out
loope
jmp
outs
cmps
retf
cmps
pusha
mov
in
jge
bnd
(bad)
ret
adc
mov
xchg
std
loopne
ja
mov
fsub
fcmovbe
cmp
arpl
cmp
inc
movs
sub
add
scas
add
test
stc
imul
xor
cmp
(bad)
dec
adc
mov
stos
fild
or
movs
pop
movs
sub
inc
icebp
jmp
je
mov
div
sub
push
pop
jle
adc
leave
cdq
cs
sub
pop
loopne
(bad)
call
jne
or
mov
lock
ror
fsubp
cmp
mov
lock
cmp
int
test
leave
lds
cdq
and
push
ficomp
popf
or
pop
ror
(bad)
xchg
fisubr
inc
mov
xor
ja
push
push
cli
movsx
loop
(bad)
test
stos
aad
std
and
jp
pop
movs
xor
fild
cmp
and
inc
push
aas
in
mov
fs
pop
not
add
and
je
xchg
gs
ds
add
or
add
xor
adc
sub
fisubr
mov
mov
xchg
xor
fldcw
and
stos
jp
jb
pop
xchg
out
jmp
add
push
(bad)
inc
cmp
lock
lods
and
int
mov
les
das
fdivr
cdq
dec
ror
out
pop
mov
or
fnstenv
xor
cmps
jmp
jo
test
inc
ret
sub
jmp
imul
or
into
mov
inc
(bad)
pop
scas
add
jo
cs
stos
lods
daa
mov
jbe
jmp
mov
mov
cmp
ficomp
pop
inc
mov
push
mov
int
dec
mov
sub
sbb
sti
call
mov
adc
or
hlt
xor
test
ret
mov
jbe
jl
pop
clc
dec
sub
jle
xor
into
push
hlt
ss
adc
clc
fisub
aad
ret
ins
mov
jno
das
in
cmp
xchg
mov
vpmuludq
mov
clc
push
bswap
pop
mov
add
inc
xchg
in
ins
dec
push
je
dec
cwde
retf
push
push
lea
out
sub
jl
std
rcr
push
and
mov
gs
lea
es
je
inc
ficom
pop
stos
jmp
jecxz
cmps
stos
or
pop
or
add
jmp
sbb
ret
pop
mov
in
mov
sub
push
xor
jl
stos
arpl
or
ins
or
int
and
fld
xchg
inc
inc
sub
inc
mov
ret
xchg
into
jo
imul
jne
addr16
xor
pop
and
outs
fcomp
aas
leave
mov
mov
adc
xchg
in
cmps
and
lea
jle
in
sar
jge
in
mov
ret
mov
push
pop
xchg
retf
cs
inc
push
stos
cmp
in
dec
lock
jae
mov
imul
lds
mov
leave
inc
jae
lods
repnz
(bad)
cmc
sub
aad
mov
addr16
outs
jmp
xchg
enter
ds
jno
scas
mov
loop
pop
adc
mov
dec
pusha
xchg
mov
mov
dec
or
daa
or
nop
nop
cli
or
mov
mov
int3
xchg
sub
outs
push
cdq
jo
jno
out
daa
mov
inc
xchg
mov
fcmovu
push
and
leave
retf
es
bound
mov
test
scas
xchg
jns
inc
mov
fnstsw
sar
inc
out
les
push
out
pop
bound
stos
xor
fidivr
stos
mov
cli
cmps
lea
cld
mov
pop
sahf
data16
mov
jb
rcl
or
test
sbb
call
das
fld
out
dec
cli
ss
mov
jbe
movs
les
fldcw
inc
sbb
mov
xchg
ficom
lods
and
(bad)
icebp
jg
jmp
mov
inc
gs
cwde
dec
pop
pop
xchg
push
sar
cmc
pusha
es
pop
fcomi
je
pop
mov
mov
(bad)
bnd
retf
enterw
mov
dec
jl
fwait
dec
arpl
outs
test
ins
fdivrp
sbb
push
les
xchg
pop
mov
aam
xchg
or
adc
scas
movs
imul
adc
(bad)
clc
jg
inc
loopne
mov
loop
push
add
xchg
lock
xchg
push
pop
imul
pop
(bad)
jae
std
(bad)
jge
retf
cmp
sahf
cmps
pop
test
adc
add
popa
pop
add
sub
lods
sahf
and
cmc
das
sub
(bad)
inc
imul
sub
aaa
rcl
sbb
gs
add
cmp
mov
rol
dec
(bad)
leave
leave
fistp
jmp
mov
inc
and
jle
jg
pop
pop
sahf
(bad)
jae
std
loop
mov
jmp
inc
and
add
mov
cli
xor
inc
sub
dec
mov
sub
clc
xor
sahf
mov
add
cmp
dec
xchg
push
push
cld
mov
sub
push
stos
cmp
sub
sbb
fadd
out
retf
mov
sub
in
xor
sub
or
into
cdq
js
rcr
sub
jae
xchg
mov
xor
sbb
or
cmp
inc
call
cld
lods
retf
stos
imul
mov
fwait
aas
retf
pop
pop
inc
push
jb
dec
cdq
(bad)
xchg
or
dec
leave
sub
imul
in
sub
call
hlt
xchg
cmp
(bad)
std
add
call
fwait
gs
xor
and
jl
sbb
fidivr
lea
push
inc
lahf
cmp
mov
stos
je
jmp
jg
pop
out
retf
sub
out
shr
mov
dec
jb
jne
in
leave
pop
adc
sub
and
fisttp
dec
dec
(bad)
ds
enter
adc
mov
add
int
adc
cmp
rcl
xor
(bad)
push
movs
or
add
dec
mov
sub
inc
push
xchg
pusha
aam
lods
push
and
or
enter
mov
cmp
add
fcom
sbb
cmp
dec
fcmovu
adc
hlt
fldcw
pop
cmp
pop
xchg
sahf
aam
or
in
dec
into
xor
int
fsub
xor
arpl
inc
fild
adc
gs
or
rcr
pop
shr
jmp
xchg
repnz
sub
push
dec
mov
das
sahf
aam
(bad)
scas
call
mov
into
pop
mov
ds
pushf
pop
add
dec
jp
mov
jo
push
sbb
dec
ror
sbb
dec
and
ds
out
cmp
inc
mov
jmp
xor
imul
jne
cli
xor
movs
pop
add
jb
ins
xbegin
cmc
repnz
xchg
movs
mov
sub
or
push
push
add
cs
enter
jbe
adc
pop
test
std
fbld
adc
popa
mov
inc
sbb
shl
jbe
cdq
sbb
cmp
popf
add
xor
iret
pop
add
push
(bad)
test
pop
mov
ret
and
xlat
test
push
dec
in
push
ret
sub
lock
ins
push
mov
cs
cmps
push
or
jns
inc
cmps
cwde
cwde
cmp
xor
push
push
aad
xlat
xchg
scas
fldlg2
sahf
or
jmp
jl
jb
call
mov
jle
jo
xchg
xchg
fstp
jns
(bad)
jmp
mov
or
xor
arpl
ret
pop
xor
xchg
bound
fldenv
into
loop
lock
call
mov
out
sub
pop
push
jmp
add
je
fild
or
aas
add
test
scas
jo
xchg
xor
jno
or
test
mov
jg
idiv
les
mov
outs
jo
rcr
or
addr16
pushf
inc
sbb
xor
arpl
xchg
push
imul
loop
and
sbb
inc
punpckhwd
xchg
inc
fmul
repz
(bad)
jmp
test
fistp
or
test
and
fsub
pop
push
(bad)
(bad)
repz
popf
retf
push
mov
cs
out
hlt
and
std
out
aad
call
fldcw
cmp
mov
xor
and
pop
inc
pop
dec
lahf
add
jge
jle
or
sbb
es
sbb
out
xchg
nop
daa
ror
xchg
sbb
fnstcw
and
enter
loop
scas
mov
mov
out
cmc
stos
lahf
add
push
stos
gs
xchg
fnstenv
outs
add
fst
sahf
call
jg
sub
into
jg
add
fisttp
inc
std
mov
inc
fsubrp
push
add
and
adc
cs
popaw
aas
dec
cwde
add
or
add
push
mov
sti
addr16
jno
mov
adc
aam
mov
stos
cmp
test
xchg
daa
xchg
dec
jle
ret
mov
test
js
pop
mov
gs
not
shl
(bad)
mov
pop
rcr
fldenv
pop
gs
mov
mov
ja
rcl
adc
popa
data16
sub
fs
sbb
push
and
adc
push
lods
mov
adc
pop
in
jne
pop
ss
sbb
test
xor
cli
lods
das
ds
xchg
inc
and
xchg
xor
push
pop
mov
inc
sub
cmp
push
jecxz
xor
jp
push
xor
scas
jecxz
dec
cmovle
stc
arpl
sbb
or
call
fdivr
repz
(bad)
retf
ss
cs
xchg
das
loop
iret
cs
or
mov
dec
loopne
int3
cld
nop
adc
inc
fidivr
icebp
rol
push
xchg
adc
dec
enter
repz
pop
stos
and
jp
js
cmps
cmp
shl
adc
and
pop
dec
adc
in
aaa
test
das
mov
xchg
sbb
test
xchg
mov
fwait
jmp
sub
in
cmp
fwait
cmc
jle
nop
mov
xor
test
push
dec
mov
fcom
mov
sti
sub
fwait
xor
scas
sub
(bad)
bound
adc
xor
test
dec
jbe
cmps
jg
lds
sahf
test
adc
rcl
movs
add
jns
pop
cmp
push
repz
pop
mov
rcl
or
popf
xchg
jns
out
aad
stos
xchg
mov
mov
hlt
jmp
mov
xchg
test
test
add
mov
les
adc
pushf
(bad)
sub
mov
hlt
mov
nop
bound
xor
popf
push
dec
sub
cmp
(bad)
cwde
jge
(bad)
cmps
bound
call
jg
stos
aad
sar
dec
push
dec
add
fimul
push
mov
in
jmp
push
sti
add
xchg
add
sub
mov
rol
xor
fild
(bad)
cli
jecxz
inc
xchg
repnz
push
xchg
push
in
seta
popa
adc
retf
addr16
push
add
hlt
adc
sbb
ins
add
inc
cmp
pop
into
test
mov
mov
pop
icebp
and
xchg
cmp
sbb
test
and
out
xchg
cmp
or
add
pop
mov
inc
fmul
cmp
jnp
fwait
ja
in
pop
cld
pop
push
in
xchg
pop
jae
push
and
int3
sbb
sbb
push
push
shl
jmp
arpl
dec
or
jmp
xor
cdq
xchg
cmps
jl
fucom
dec
imul
fidiv
(bad)
xchg
xchg
sub
push
jge
cmp
into
mov
inc
fistp
sbb
js
jmp
inc
add
(bad)
popf
aad
inc
in
xchg
popf
push
lea
mov
sahf
jg
aad
int
(bad)
icebp
stc
fcom
daa
call
(bad)
idiv
xor
xchg
mov
pop
pop
bound
out
fwait
mov
cs
fmul
mov
hlt
sbb
mov
cld
mov
or
mov
ret
mov
out
int
div
pop
push
popf
(bad)
mul
retf
or
mov
push
xor
inc
lods
je
sbb
adc
shl
scas
inc
sub
loopne
adc
sbb
aas
ret
fdivr
mov
stos
movs
jnp
push
add
into
pop
adc
cmp
xlat
jnp
iret
icebp
fcomp
gs
pop
add
or
jmp
adc
hlt
in
and
aaa
jmp
stc
jbe
xor
push
cmp
cmp
adc
jge
in
xchg
sbb
adc
daa
pop
fs
popf
out
lds
pop
jl
fnstenv
aas
fwait
idiv
sti
fisttp
add
rcr
into
pop
or
inc
cmp
mov
jne
mov
jge
and
pop
js
js
(bad)
test
loopne
aaa
jbe
pop
lds
xchg
(bad)
sub
and
pop
arpl
sti
cwde
cwde
sahf
in
mov
cmps
int3
mov
cmp
mov
jns
push
sahf
or
ins
cmp
out
repnz
xchg
push
(bad)
sbb
not
sub
call
push
pop
jl
mov
dec
(bad)
xchg
push
push
jnp
push
mul
jne
fst
push
xor
stos
bound
ins
jmp
cwde
inc
lock
push
retf
cmp
dec
fldenv
test
in
push
cld
test
lods
jno
push
pusha
(bad)
push
or
cmps
jns
stos
xor
sbb
out
popf
ret
test
pop
push
cmp
cmp
inc
sbb
ret
idiv
lahf
lods
push
ror
pusha
xchg
mov
jp
jmp
lds
sahf
jecxz
xchg
push
into
repz
jmp
or
inc
aaa
pop
jp
fiadd
in
std
sbb
jecxz
rcl
mov
leave
cmp
loop
sbb
and
mov
sub
pop
popa
scas
retf
fldz
pop
dec
or
mov
jno
hlt
ficom
jnp
pop
jbe
adc
cmovb
mov
sub
adc
push
mov
push
mov
mov
ficomp
outs
test
arpl
je
mov
sti
mov
sar
(bad)
push
in
ret
pop
xchg
xor
push
pop
adc
and
push
and
or
into
mov
push
mov
jae
ja
(bad)
call
push
sbb
xchg
push
pushf
cmp
mov
and
lds
or
pop
xchg
mov
sbb
jge
and
push
test
lods
stos
pusha
push
cwde
pop
cmp
lock
sar
aaa
sar
or
or
xchg
mov
sub
adc
fsubr
fdivr
mov
dec
fstp
add
add
out
sub
cmp
sti
loop
cmp
add
jmp
iret
out
push
and
or
aad
push
jmp
into
mov
nop
inc
gs
fst
test
call
sbb
(bad)
mov
jg
and
inc
xor
data16
dec
and
ins
push
mov
stos
and
mov
pop
dec
inc
xchg
inc
ror
(bad)
sbb
out
in
enter
mov
xor
ud2
aad
out
aas
pushf
pop
mov
dec
enter
aad
lock
cwde
and
jmp
mov
test
adc
push
lods
pop
xchg
popa
mov
sub
inc
add
mov
mov
int
cmp
scas
in
sar
cmp
sub
xchg
lea
jle
in
jne
sub
add
lahf
outs
js
fistp
addr16
outs
pop
jno
mov
js
mov
scas
(bad)
jg
pop
lods
in
sti
xchg
pop
mov
mov
repz
sbb
test
test
adc
add
xchg
add
xchg
xchg
jge
retf
push
clc
xor
pop
jmp
fld
add
icebp
jge
es
mov
scas
(bad)
retf
xchg
daa
or
mov
xlat
fisttp
or
std
shl
fild
lds
inc
fild
mov
or
adc
or
enter
and
xchg
cmp
cmp
mov
mov
jmp
aas
pop
mov
aas
out
out
push
test
jle
les
icebp
fs
xchg
(bad)
sti
movs
stos
inc
and
popa
pop
fisttp
sbb
push
std
xor
sub
push
mov
dec
retf
add
fnsave
and
dec
adc
repnz
sub
pop
ret
into
jns
iret
lods
xchg
cli
rol
fistp
aad
mov
cmc
repnz
dec
and
jno
outs
inc
add
xchg
pop
fsubr
aas
lds
jno
fistp
aad
in
repnz
push
mov
(bad)
mov
and
(bad)
aam
ret
or
icebp
push
mov
and
fidiv
lds
dec
xchg
sbb
pop
add
std
adc
jno
popf
in
call
mov
in
add
or
add
dec
xor
icebp
adc
xor
rcl
fstp
mov
mov
test
sbb
movs
(bad)
xor
dec
push
mov
mov
or
out
arpl
pop
inc
adc
or
xchg
xor
push
shr
iret
fild
push
movs
lods
and
jmp
or
pop
sub
arpl
sbb
adc
nop
clc
stc
sar
ret
mov
lock
xlat
xchg
out
mov
movs
test
sub
fdiv
test
hlt
loope
daa
jbe
push
into
pop
fld
rcl
stos
aas
addr16
sbb
fs
pop
(bad)
fimul
mov
rcl
js
add
pop
cmps
aas
dec
out
mov
mov
mov
adc
sbb
fwait
retf
adc
xor
dec
retf
mul
into
sti
dec
loopne
nop
pop
test
adc
fstp
push
dec
jbe
xchg
dec
into
jmp
mov
test
xchg
xor
push
add
xor
call
mov
push
test
or
xor
or
jmp
adc
or
outs
js
mov
xchg
mov
mov
sbb
inc
shl
sbb
out
cld
mov
mov
dec
adc
ins
xchg
scas
ss
hlt
sub
leave
xor
enter
imul
and
push
push
dec
scas
jg
out
aas
repnz
popa
int
gs
or
dec
jo
sahf
jp
inc
mov
jecxz
aaa
add
lods
daa
pop
test
adc
in
pop
mov
clc
push
pop
(bad)
ins
iret
ins
cdq
jnp
std
iret
rol
cmp
inc
push
(bad)
mov
fisttp
mov
cmps
test
sbb
mov
pusha
dec
pop
js
aaa
out
shr
(bad)
push
jmp
sub
cmp
imul
daa
jo
pop
arpl
push
out
cwde
addr16
xchg
int3
mov
jecxz
dec
imul
test
je
jns
cld
fbstp
ficomp
add
cmp
pusha
test
sub
mov
mov
movs
jae
push
xchg
cmp
das
mov
pop
xchg
call
ds
adc
in
or
in
hlt
dec
les
xchg
js
pushf
fistp
stos
scas
xlat
movs
mov
xchg
cli
in
push
leave
retf
mov
imul
inc
gs
push
fsub
leave
mov
xchg
ret
outs
jae
push
inc
pop
or
adc
mov
(bad)
sbb
mov
test
lock
test
shl
push
add
mov
dec
mov
mov
fisttp
fwait
push
movs
repz
cmp
test
sbb
mov
popa
or
xchg
in
lahf
cld
or
push
iret
jl
or
jns
cmps
mov
jno
dec
stos
cwde
xchg
mov
shl
mov
inc
jns
and
add
fidiv
and
mov
xchg
and
aam
es
sub
std
sbb
fnstenv
popa
ss
mov
(bad)
std
xchg
push
xlat
pop
sub
and
sbb
sahf
popf
jl
movs
xchg
(bad)
imul
and
int3
xchg
mov
repz
push
sbb
xchg
(bad)
lahf
sbb
or
popf
retf
in
out
into
dec
ins
movs
inc
les
mov
sub
sub
xchg
cli
ds
mov
pop
lods
cli
rcr
and
sub
ss
dec
in
or
jmp
pushf
lock
imul
aam
and
pushf
call
fsubr
mov
dec
mov
ffree
test
popf
jne
push
mov
and
scas
sbb
push
dec
inc
jmp
popa
movs
add
jmp
cmp
mov
std
stos
cmps
jge
ins
fwait
call
shl
in
jnp
bound
jle
cmps
cs
inc
cmps
jle
pushf
mov
dec
(bad)
sar
cmp
add
fnstsw
std
or
in
test
and
xor
xlat
push
fnsetpm(287
adc
sub
lahf
jecxz
xchg
dec
and
or
push
cmp
int
or
xchg
out
jmp
ins
pop
daa
fstp
push
ror
aas
push
pop
sbb
cmp
pop
retf
or
and
sub
mov
jb
(bad)
je
jns
lock
add
jno
pop
inc
mov
jne
xor
xchg
(bad)
pop
in
ins
scas
scas
cmps
or
int
int
loopne
inc
retf
leave
in
xor
ret
jge
pop
sbb
adc
xchg
push
jecxz
in
ja
and
sti
jo
xor
retf
lock
jg
xchg
mov
fadd
jge
sti
vxorpd
movs
xchg
xor
cmps
add
push
cmp
jmp
loopne
inc
adc
int3
or
cli
and
mov
push
int3
mov
inc
mov
mov
cmp
jo
ja
mov
loopne
or
xor
mov
xlat
fdiv
push
fsub
jge
xchg
push
mov
test
sbb
jns
and
jmp
sahf
fmul
sti
cmp
xor
stc
inc
and
es
xchg
dec
sahf
scas
mov
xchg
(bad)
hlt
(bad)
mov
into
mov
and
jo
call
or
aam
and
leave
sahf
dec
jb
rcr
shl
aas
sbb
fs
out
mov
mov
mov
shl
mov
shl
scas
sub
xchg
xchg
mov
out
dec
scas
lods
pushf
movs
cmp
data16
loop
pop
out
std
sbb
fidivr
jge
mov
scas
imul
sub
js
jno
fs
or
jecxz
icebp
and
add
jno
or
inc
pop
push
sub
stc
daa
les
pusha
xor
fwait
cli
cmps
mov
jle
out
jbe
fiadd
ins
(bad)
jmp
das
fucom
not
mov
rcl
or
xchg
push
xor
or
loope
cmps
xchg
sbb
lods
and
mov
cs
(bad)
out
cmp
sub
jo
jp
sbb
aam
(bad)
adc
xor
cmps
mov
cdq
jp
and
xchg
pushf
mov
into
sbb
retf
popf
cld
fwait
pop
cli
or
sbb
ss
pop
cmps
xchg
mov
sub
sub
mov
cmps
repnz
stos
call
sbb
mov
leave
arpl
mov
imul
imul
leave
mov
push
pop
enter
popa
fld
mov
push
cmp
or
mov
mov
movs
and
lea
pop
inc
dec
in
xor
pushf
dec
sbb
sub
(bad)
les
call
mov
sbb
push
(bad)
loope
dec
lock
pop
push
sti
in
movs
dec
sbb
retf
(bad)
nop
xchg
jb
frstor
out
rcl
cmps
and
sub
out
cmp
jbe
inc
and
aad
aaa
fiadd
shr
inc
push
leave
push
adc
hlt
ret
shl
inc
and
push
int3
add
or
lds
add
dec
pop
icebp
xor
push
cmp
aas
dec
or
jnp
mov
inc
add
popa
pusha
adc
xchg
gs
xor
jo
mov
sub
inc
sbb
aad
subps
lods
test
dec
popf
scas
sub
xchg
and
(bad)
xor
int3
and
nop
popa
test
sub
stc
(bad)
and
inc
xlat
sub
add
push
xor
outs
add
scas
cs
dec
sub
popa
jnp
shr
test
in
out
and
mov
cmps
xchg
cdq
lods
dec
cmp
out
(bad)
das
mov
iret
pop
dec
push
loop
xchg
in
scas
sbb
fdiv
dec
aad
cdq
and
pushf
dec
sbb
pop
ins
jne
or
enter
das
inc
aaa
stos
das
mov
and
stc
std
mov
call
jp
ds
xchg
push
adc
imul
ret
stos
jmp
mov
jg
xor
mov
ret
jmp
sbb
pop
pushf
xchg
addr16
clc
imul
inc
enter
push
in
repz
fimul
dec
push
xlat
pop
jo
lods
ins
cmps
aad
push
mov
and
jl
inc
cmc
inc
add
call
out
add
xchg
test
ja
fmul
loopne
out
popf
ja
adc
fs
imul
imul
pop
pop
pop
mov
mov
lock
out
cmp
jp
aas
jns
cmps
push
adc
sbb
retf
fild
xchg
inc
jmp
adc
shl
jmp
and
inc
add
iret
xchg
jmp
lea
add
mov
std
cmp
retf
jns
ret
stc
cmp
or
pusha
(bad)
or
adc
jp
repnz
stos
xchg
jg
outs
mov
cld
cmp
mov
outs
adc
leave
dec
push
arpl
jne
aad
stos
mov
cmp
xchg
push
dec
inc
dec
sbb
outs
loopne
mov
pop
sub
mov
ss
pop
mov
add
mov
sub
pop
loope
push
jl
jns
scas
push
dec
mov
int3
sbb
xor
(bad)
add
adc
add
push
mov
jno
mov
dec
cmp
(bad)
clc
and
inc
xchg
stos
test
arpl
test
sahf
pop
jecxz
and
dec
stos
mov
neg
icebp
or
jmp
and
int
pop
xchg
(bad)
retf
adc
inc
inc
aaa
mov
aaa
clc
pop
fild
mov
dec
js
xor
cmp
jecxz
adc
daa
mov
xchg
cmps
clc
loopne
xchg
lock
push
cmps
retf
dec
arpl
shr
xchg
ret
dec
imul
or
stos
pop
mov
bound
out
lods
cmp
adc
out
(bad)
xor
push
fwait
cdq
add
pusha
xchg
xchg
mov
idiv
lods
push
enter
loope
jo
xor
das
inc
sub
xchg
cmps
retf
push
mov
push
imul
sub
loope
or
int3
push
sub
jp
ins
repnz
push
hlt
add
in
std
dec
push
jns
fiadd
mov
arpl
mov
jno
dec
sub
jle
pushf
lock
mov
int
inc
cmp
rcr
xchg
loope
jae
jnp
test
(bad)
jge
jecxz
scas
rcl
pusha
ins
call
lods
push
or
call
mov
add
fst
and
mov
call
cmp
sub
push
dec
jo
stc
mov
mov
mov
in
and
add
loopne
and
adc
or
inc
and
(bad)
fld
(bad)
jl
jge
jmp
jmp
iret
sub
out
ins
iret
mov
scas
inc
jp
inc
add
(bad)
mov
jnp
jae
or
push
push
ror
fld
and
ret
stos
xchg
std
sub
sub
jg
xchg
xor
push
mov
std
(bad)
shl
neg
push
push
pop
mov
mov
push
sub
outs
pcmpeqd
into
mov
mov
leave
adc
add
inc
daa
shl
push
inc
add
inc
mov
int3
lahf
adc
mov
mov
popa
mov
shl
test
fwait
inc
xchg
xlat
call
xchg
push
sbb
jae
pop
sbb
inc
push
movs
daa
fistp
mov
retf
jmp
movs
pop
es
retf
and
in
scas
cld
cmps
add
pop
mov
(bad)
cmp
sub
cmp
sub
cld
or
arpl
sub
xchg
jg
jmp
mov
push
adc
jmp
dec
and
movs
aaa
cmp
imul
dec
lock
cmp
jns
inc
mov
icebp
push
inc
scas
es
repnz
mov
cmps
mov
mov
sbb
cmc
and
mul
ret
push
jb
imul
je
(bad)
sbb
pushf
pop
outs
das
jne
sar
xchg
xor
sar
mov
jl
stos
add
loope
inc
movs
add
cld
add
add
and
sub
cmp
or
rol
pop
int
dec
cmps
and
shl
or
jle
test
dec
xor
dec
mov
and
adc
movs
mov
aam
in
xchg
xor
loopne
ret
out
sbb
cmp
cmp
cmc
inc
mov
add
inc
dec
(bad)
mov
cmc
cmp
ss
sbb
lahf
repnz
pop
leave
pop
rol
or
aaa
retf
sbb
mov
dec
adc
and
sub
pop
jge
mov
movs
jno
jp
fwait
push
rcr
or
cs
outs
rcr
inc
sbb
ins
cwde
lods
cmc
sahf
rcr
jne
inc
add
mov
(bad)
mov
jmp
adc
test
inc
bound
xor
out
xor
icebp
adc
mov
(bad)
pop
cmc
inc
pop
sub
jge
pop
sub
inc
push
xchg
aaa
dec
dec
in
mov
push
out
inc
lahf
stos
or
inc
bound
into
loop
aad
dec
call
js
xchg
or
nop
jle
dec
fdivr
shr
cmps
loop
xlat
jno
dec
ja
push
test
adc
and
or
sti
test
in
jl
mov
mov
sti
pop
lar
xor
clc
fidiv
ret
jnp
aas
pop
daa
sub
gs
add
xor
icebp
loop
jl
xor
push
in
add
cmp
fld
fstp
and
lahf
rcr
popa
xor
sbb
arpl
push
fistp
fsubr
out
popf
or
(bad)
(bad)
push
adc
sbb
adc
ins
cwde
clc
fwait
pushf
cmp
mov
mov
adc
jg
popa
xchg
shl
mov
cdq
cwde
xor
cmp
jae
popf
movs
jmp
cmps
mov
repnz
(bad)
(bad)
and
mov
xchg
pop
(bad)
bound
mov
pop
jl
repz
mov
imul
cdq
test
push
fbstp
ror
je
fild
jmp
inc
lahf
mov
mov
imul
ror
pop
stos
icebp
inc
gs
stos
pop
mov
enter
enter
add
dec
mov
lahf
or
int3
add
sub
in
imul
repz
fld
leave
or
imul
adc
sub
into
scas
xor
js
retf
lods
aaa
gs
push
enter
adc
lock
push
cmp
(bad)
popa
xchg
sub
stos
or
jmp
ins
fsubp
inc
xchg
int3
jb
mov
aas
mov
jbe
(bad)
cs
jns
loopne
aad
jle
jno
les
sub
(bad)
rcl
es
rol
call
in
ja
movs
xor
imul
xor
enter
sub
lahf
and
loope
out
clc
ds
jne
test
test
cmps
jge
pop
xchg
call
sbb
pop
call
pusha
inc
add
push
cmp
(bad)
iret
xchg
adc
mov
jbe
push
mov
jns
jb
in
mov
sti
rcl
cld
sub
inc
sub
mov
sar
push
cwde
push
xor
ret
mov
jle
mov
out
mov
pop
aam
push
sub
or
test
mov
inc
outs
push
push
shl
(bad)
pop
dec
jnp
rcr
cmp
cmp
add
stc
inc
sub
jecxz
out
fnstcw
sbb
mov
add
jne
push
scas
xchg
mov
fbld
sub
adc
cvttps2pi
mov
mov
int
inc
icebp
retf
stc
push
sbb
xchg
rol
xchg
fimul
(bad)
jge
jl
pushf
cs
pop
sub
sub
rcr
imul
xchg
ret
aas
add
push
neg
leave
lahf
mov
movs
push
jg
sbb
add
mov
adc
cmc
push
cmc
dec
push
inc
cmp
jp
xchg
in
and
in
leave
jae
les
xor
mov
jge
into
retf
std
out
pushf
rcl
sbb
movs
out
sbb
popf
add
cmps
inc
mov
sbb
cmps
in
adc
lods
enter
ins
aas
rol
aaa
icebp
xchg
and
push
jne
add
adc
aad
xor
fistp
inc
mov
jmp
add
lahf
fcom
sbb
repz
icebp
call
(bad)
hlt
xor
mov
clc
hlt
push
into
fdiv
sub
pop
stos
into
hlt
out
push
sbb
cmp
cmps
jl
mov
add
mov
jmp
retf
jno
out
les
push
cmp
jg
jl
push
mov
call
cmp
push
adc
inc
xor
mov
pusha
push
adc
retf
in
scas
push
jbe
imul
jae
inc
iret
retf
jno
xor
add
xor
adc
daa
(bad)
xor
retf
es
cdq
push
(bad)
adc
jno
mov
xor
dec
lea
cli
adc
pop
cmp
jmp
outs
push
and
call
mov
mov
mov
jp
inc
adc
add
xor
push
or
or
mov
data16
push
xor
jbe
test
inc
repnz
add
pop
jno
or
mov
adc
sbb
pusha
pop
xchg
dec
add
cmp
in
call
pop
rcl
jmp
jle
imul
add
cmp
dec
xchg
pop
(bad)
and
jg
mov
(bad)
cmp
cmps
cdq
repnz
push
es
mov
sub
das
scas
(bad)
(bad)
ins
mov
mov
shr
mov
push
je
shl
das
dec
mov
popa
xchg
stos
ret
pop
outs
(bad)
add
adc
cdq
out
lock
xchg
adc
(bad)
mov
test
imul
fldenv
fsubrp
mov
and
mov
mov
push
cli
aam
xchg
adc
sbb
int
adc
mov
icebp
mov
mov
shl
cld
mov
sub
cmp
xchg
push
ror
sub
jb
test
and
pop
out
icebp
cmp
mov
and
enter
and
movs
rol
movlps
icebp
pop
fwait
mov
pop
sbb
jmp
sti
cdq
xor
outs
inc
mov
pusha
loope
ror
fisttp
adc
shr
adc
push
or
imul
pop
fadd
mov
daa
push
xor
sbb
les
mov
or
mov
sub
mov
cli
cmp
or
cdq
out
xor
mov
sub
adc
rcr
lods
popf
out
mov
push
push
dec
sub
adc
(bad)
jmp
lods
pop
push
jge
mov
ins
test
fstp
cmp
jmp
adc
add
es
sub
lahf
mov
movs
cmps
sbb
mov
xor
lds
pop
push
out
add
xchg
pop
leave
cmp
fnstcw
mov
sub
cmps
mov
in
jo
add
bound
shl
cmp
into
add
lock
jp
adc
(bad)
icebp
adc
mov
xchg
adc
sbb
push
es
mov
add
lahf
and
jne
xchg
lods
mov
xabort
pop
je
push
or
stos
or
stc
ret
lods
fmulp
rcl
adc
push
(bad)
push
arpl
and
inc
popa
outs
sbb
ret
mov
sub
les
js
mov
adc
scas
leave
mov
xchg
xchg
dec
jge
nop
aas
fucomi
xlat
and
popf
lea
sub
jb
div
arpl
inc
gs
or
outs
dec
popa
fcmovu
inc
fisubr
jns
(bad)
pop
inc
and
test
mov
mov
into
mov
fld
in
or
mov
add
push
pop
or
add
push
cmps
add
daa
add
loope
fst
cmp
xlat
aam
pop
fimul
adc
jmp
in
jg
(bad)
push
jge
inc
retf
inc
dec
sbb
pop
push
xchg
jle
scas
xor
cmc
adc
cli
rol
and
xor
cmp
test
mov
je
xor
ror
push
shl
dec
movs
push
sbb
or
or
or
loope
ror
shl
ret
inc
outs
ret
std
mov
test
xor
fwait
jmp
out
mov
imul
jb
and
cld
inc
xor
add
jl
call
aaa
or
dec
mov
pop
scas
pushf
cs
jno
sahf
or
push
inc
addr16
mov
fimul
and
inc
ret
xor
nop
xchg
xchg
outs
cmp
cmp
mov
mov
cmp
mov
sbb
repz
in
repnz
mov
mov
mov
dec
sbb
getsec
xor
dec
cmp
pop
out
imul
sub
adc
or
xor
int3
push
xlat
fmul
mov
and
pushf
jge
addr16
dec
pop
sar
retf
outs
cmp
ins
fmul
mov
int3
mov
adc
rep
rcl
or
(bad)
and
in
dec
pop
or
cmp
dec
mov
nop
out
push
jnp
adc
outs
sub
sar
dec
cmp
dec
xor
jg
jmp
gs
mov
push
pop
call
xlat
dec
in
push
mov
sbb
mov
(bad)
leave
int3
es
fs
les
inc
mov
cmp
push
imul
dec
pop
mov
add
arpl
cmp
xchg
jge
loope
fistp
cmps
fild
adc
lds
in
inc
sti
adc
outs
lods
bswap
cdq
sbb
push
jmp
cmp
call
pop
or
les
inc
dec
mov
bound
shr
sbb
stos
and
add
and
iret
les
dec
jo
mul
adc
cmp
sub
std
dec
repz
scas
pop
sbb
cmp
(bad)
jg
fwait
stos
ret
adc
(bad)
call
jp
push
add
stos
jmp
mov
mov
js
repnz
add
cmp
or
test
ret
rcl
xor
fwait
add
lods
es
mov
adc
mov
or
mov
es
jmp
mov
loopne
outs
fbstp
je
ror
pop
push
imul
stos
retf
pop
ds
mov
or
data16
sar
pop
fisub
adc
mov
adc
push
ror
cmp
cmp
aam
mov
cmp
mov
sub
loopne
call
dec
push
jle
and
jne
cmp
pushf
data16
ret
pop
ror
sysexit
fadd
push
mov
xchg
arpl
pop
push
bound
ins
xchg
ffree
loope
(bad)
ffreep
add
add
fwait
into
scas
mov
pop
mov
nop
dec
mov
inc
sub
lods
adc
mov
and
inc
sbb
and
push
adc
jecxz
rcr
jle
jno
push
adc
imul
sub
cmp
test
lea
and
rol
out
lods
adc
inc
loopne
call
mov
xchg
and
(bad)
movs
test
xchg
(bad)
mov
out
ror
mov
test
mov
or
inc
or
mov
sub
test
xchg
rcr
nop
cdq
sti
jae
sub
adc
fst
std
push
jb
cmp
and
sbb
fucomi
ins
fsubr
sbb
or
jmp
add
and
test
pop
inc
daa
jge
add
adc
sub
aam
add
inc
cmc
or
das
je
sub
test
jnp
in
pop
cld
ret
mov
cmc
dec
stc
aas
push
xchg
(bad)
sbb
and
mov
fimul
and
loopne
mov
dec
pop
push
aad
fwait
cs
add
or
idiv
fsub
mov
ret
mov
into
mov
enter
sbb
scas
dec
arpl
adc
dec
adc
ja
or
loop
mov
sbb
and
sahf
add
mov
and
xchg
cmp
adc
jnp
push
(bad)
cmp
imul
iret
test
xchg
sbb
idiv
fsubp
jge
mov
sbb
sbb
leave
repz
lea
push
int3
mov
push
scas
pop
jge
sub
fcmovbe
jbe
pop
nop
dec
jecxz
and
js
dec
sar
adc
ss
rol
xor
push
shl
inc
pop
out
mov
iret
mov
into
mov
pop
scas
pop
xlat
mov
or
mov
xor
aad
sub
xor
fwait
mov
mov
mov
bound
call
out
xor
in
xor
cmp
mov
and
mov
cmp
js
inc
dec
clc
sub
test
mov
jne
inc
bound
pop
int
push
(bad)
jge
or
je
icebp
gs
xchg
sbb
mov
sahf
sbb
adc
test
dec
sahf
mov
inc
(bad)
cmps
add
xchg
repz
sti
pushf
imul
or
mov
in
movs
aaa
dec
stc
xchg
cmp
scas
push
adc
mov
js
add
push
pop
xchg
xchg
mov
outs
das
xor
jo
sub
push
cli
add
cmp
cmp
or
mov
add
cmp
les
in
pop
push
xchg
add
pop
ror
ja
cmp
imul
mov
pop
mov
inc
xchg
stos
outs
jmp
mov
imul
shr
push
ret
jp
fisub
mov
stc
mov
test
outs
dec
into
out
add
add
mov
stos
mov
cs
sbb
dec
outs
int
(bad)
jns
aad
dec
jae
adc
mov
xchg
cdq
jp
arpl
xor
(bad)
mov
mov
dec
xchg
pop
repnz
(bad)
lds
push
imul
punpcklwd
out
jg
adc
shl
ret
dec
scas
(bad)
mov
je
push
fisubr
mov
pop
stc
add
add
fsub
jge
xchg
and
mov
xor
mov
stc
mov
popa
idiv
xor
pusha
cmp
imul
inc
rcr
in
mov
jbe
int
gs
movs
cwde
(bad)
pop
push
popa
int
mov
push
xor
out
inc
(bad)
dec
nop
push
test
fisttp
xor
popf
cdq
push
sbb
aam
les
and
test
cmp
or
pop
adc
xor
ins
daa
aaa
mov
push
xor
push
lods
and
jno
rcl
ret
adc
fidiv
dec
test
push
test
dec
(bad)
push
adc
mov
push
xchg
bound
(bad)
rcl
packuswb
mov
cs
hlt
(bad)
xchg
sub
addr16
stc
retf
test
add
xor
add
mov
xor
inc
sbb
xor
add
mov
pop
sub
das
inc
fimul
movs
xor
and
mov
fbld
mov
stc
sub
(bad)
jbe
bound
jae
mov
(bad)
sbb
hlt
lea
inc
cmp
in
pop
gs
or
xlat
push
fsub
add
xchg
das
ins
pop
(bad)
out
into
in
(bad)
dec
sbb
jge
push
ror
inc
pop
lea
pop
xor
clc
adc
dec
adc
loop
push
lds
ins
sahf
ja
fs
xchg
out
inc
jge
sti
sbb
iret
pop
mov
adc
lods
or
test
xor
sub
out
or
dec
test
or
inc
loop
(bad)
xor
sub
test
xor
add
movs
xor
lods
push
jbe
daa
push
aaa
mov
mov
pop
loop
shr
adc
jnp
cli
mov
jmp
xchg
pop
mov
inc
sti
ror
fs
push
xor
in
ja
inc
pushf
(bad)
(bad)
enter
mov
cld
dec
lds
jno
jl
popa
mov
pop
mov
lods
inc
xchg
out
push
ins
mov
pop
push
sbb
pop
cmp
(bad)
jae
fst
cmp
retf
mov
stc
repz
test
ins
cmp
cmp
(bad)
shr
xchg
aaa
(bad)
arpl
call
outs
xor
mov
bound
out
jne
inc
mov
sbb
and
mov
popf
(bad)
ficomp
jecxz
imul
in
xor
dec
call
(bad)
pop
and
push
adc
ja
dec
stos
push
outs
aad
adc
int3
outs
inc
into
cld
pop
inc
and
jae
outs
sub
mov
(bad)
and
sub
jl
dec
das
(bad)
mov
pop
push
nop
call
inc
scas
xchg
cmp
xchg
and
pcmpgtw
imul
lods
je
fdiv
jmp
int
test
mov
loop
mov
mov
fistp
dec
sbb
dec
pusha
cmp
out
push
mov
push
hlt
(bad)
rcr
sub
leave
sbb
and
xchg
xchg
stos
add
in
icebp
test
inc
cmp
mov
and
push
sbb
stos
sar
(bad)
and
fst
ret
std
imul
jns
dec
(bad)
mov
rcl
xor
test
mov
mov
and
vmovd
sbb
inc
pushf
retf
jne
jmp
xchg
mov
push
sub
xchg
int3
push
imul
fwait
or
fist
pop
mov
dec
jmp
test
adc
jae
cmp
sub
into
fstp
rol
fcmovnb
shl
adc
(bad)
or
pavgb
ins
add
lods
mov
shld
mov
movs
icebp
ror
dec
xlat
sub
(bad)
xchg
xchg
pop
dec
jg
loopne
loop
cmp
mov
in
in
sbb
shl
lods
add
enter
test
mov
ins
mov
inc
retf
xor
or
call
loope
mov
dec
sub
pop
mov
sub
fcmovnbe
jnp
ins
pushf
xchg
jmp
dec
push
jne
push
sub
gs
iret
sub
xchg
mov
sub
jl
mov
les
in
cmp
jbe
(bad)
adc
mov
xchg
mov
shl
and
mov
cmp
mov
pop
(bad)
mov
pop
adc
out
pop
push
push
dec
lods
jb
movs
scas
xor
pop
sbb
inc
pop
inc
test
ss
gs
adc
cli
cmp
xchg
scas
fs
sti
mov
jmp
dec
out
lods
into
ret
cwde
and
stc
jae
mov
fmul
fisubr
jne
stos
dec
jge
mov
xchg
dec
test
les
mov
or
pop
stc
mov
ja
shl
add
cmps
and
xor
cs
xor
push
fdiv
sbb
ret
inc
sti
in
jbe
add
mov
imul
push
sbb
mov
sar
fcmovnu
cld
pop
dec
adc
stos
int
dec
jg
push
data16
mov
jnp
push
mov
nop
adc
sub
fsub
xlat
js
popa
scas
jle
aaa
daa
cmc
or
popf
mov
adc
sub
mov
ret
int3
push
jb
pop
inc
aaa
xchg
push
push
movs
mov
fsubr
inc
test
loope
sahf
sub
xchg
lahf
mov
ins
push
loope
outs
test
ror
mov
bound
cmp
call
pop
pop
adc
add
jl
imul
aaa
addr16
xor
mov
out
call
arpl
dec
movs
push
cmp
aad
and
je
fdivr
mov
sti
sub
push
sub
lock
and
(bad)
xor
cdq
fwait
cmps
test
movs
cld
movs
or
test
dec
xchg
and
fcomi
pop
cmp
or
cmps
loop
dec
out
dec
dec
sbb
pushf
lea
clc
pop
inc
movs
xchg
imul
mov
aas
cld
push
mov
shl
adc
mov
pop
ja
mov
in
repnz
loopne
push
dec
mov
xchg
mov
xchg
adc
(bad)
outs
fisubr
adc
xchg
push
lock
push
xlat
and
jmp
bound
and
pop
(bad)
fidivr
mul
call
pop
rcr
mov
adc
call
les
inc
(bad)
jmp
sub
xchg
jno
fstp
pop
fwait
push
cli
loopne
(bad)
lds
arpl
enter
xchg
jnp
ss
sub
xor
and
ja
scas
cmp
adc
(bad)
xor
pop
push
mov
or
inc
mov
adc
mov
inc
mov
pop
xlat
sub
sub
cli
fistp
pop
push
mov
pop
push
sbb
sbb
into
aad
and
xchg
jmp
inc
add
pop
dec
neg
and
and
pushf
add
outs
or
add
mov
pop
fwait
adc
mov
jg
sbb
jae
cwde
iret
mov
adc
ficomp
cmp
daa
das
ret
popf
mov
sub
call
repz
pop
push
fyl2x
jae
jns
lahf
jmp
mov
jl
in
lods
cmp
fs
push
pop
enter
cmps
xchg
pop
mov
pop
push
xchg
mov
cdq
mov
lock
and
bound
jle
xchg
pop
scas
jnp
ins
cmp
xchg
sub
pop
pop
xchg
mov
rol
jg
fisubr
sahf
aas
in
adc
add
call
(bad)
sar
jns
or
dec
movs
fbld
fdivrp
mov
fmul
cmp
clc
mov
xchg
jle
arpl
sub
cdq
cmp
mov
mov
cmp
fcmove
rcr
div
adc
stos
call
sbb
xor
push
and
sbb
repnz
sbb
mov
jno
push
in
xor
or
inc
das
lock
mov
std
mov
cmp
loopne
loope
js
mov
xor
lahf
test
mov
shr
scas
xchg
rcr
sbb
add
sbb
pop
jl
cmp
lock
or
fndisi(8087
test
(bad)
fdiv
popf
enter
leave
pop
xchg
dec
cmps
mov
inc
scas
mov
xchg
push
fadd
jecxz
ja
sub
lds
xor
inc
adc
xchg
jmp
jno
or
push
ss
bound
pusha
cmp
das
dec
or
sbb
into
outs
pushf
div
call
(bad)
xor
(bad)
sar
mov
mov
fwait
ret
out
rcr
(bad)
mov
out
stos
sbb
push
js
dec
ror
pop
xchg
dec
and
sub
mov
into
call
adc
lods
sbb
pop
sub
mov
xchg
mov
fwait
mov
xchg
(bad)
imul
mov
movs
movs
or
(bad)
stc
(bad)
mov
jae
out
cmp
lahf
and
or
retf
in
in
enter
add
xor
call
fistp
adc
and
pushf
lods
leave
jmp
shr
jmp
xchg
fbstp
mov
jnp
adc
mov
mov
jp
push
mul
es
mov
cmp
not
imul
fidiv
mov
sub
popa
call
stos
or
mov
repnz
push
cwde
lahf
into
push
inc
push
movs
xor
inc
pop
xchg
aas
test
es
push
pop
movs
jge
icebp
sbb
mov
clc
cs
imul
push
in
je
jb
mov
mov
cmps
std
movs
xor
retf
dec
and
cmp
push
mov
dec
push
pop
sbb
mov
xchg
fwait
test
rcl
pop
dec
xor
add
rcr
and
pop
jp
pop
sub
mov
scas
add
dec
jl
mov
add
or
cs
xchg
jp
push
call
mov
bound
fsub
jp
fdiv
mov
int3
retf
fcomi
lods
call
jno
movs
fidiv
nop
cmp
xchg
aad
sub
mov
fisttp
fwait
add
add
scas
les
ds
mov
pop
pop
xchg
jl
cmp
aaa
pop
mov
bound
pop
sti
cmp
dec
aaa
mov
ds
adc
xchg
popa
movs
test
and
arpl
push
pop
pop
test
scas
dec
je
je
jno
jl
fcmovnb
adc
pop
jnp
bnd
in
xor
sti
and
cmp
jno
int3
sbb
mov
push
mov
neg
loope
push
popa
fs
jmp
cmc
fiadd
jecxz
bound
cmp
xchg
pop
out
stos
jae
in
push
dec
xchg
hlt
(bad)
mov
pop
sub
scas
jne
xchg
nop
fnstcw
cmp
cli
push
mov
cld
xor
jp
mov
xlat
push
xor
inc
mov
fldcw
sub
jno
dec
int3
ins
cmp
mov
sub
popf
imul
test
pop
out
cmc
nop
cmp
xchg
mov
retf
retf
sbb
xor
push
sub
jns
pop
(bad)
mov
fst
push
out
and
rcl
int3
scas
or
iret
add
jmp
mov
inc
push
jmp
jmp
(bad)
jne
xchg
fistp
jb
xor
ins
cmp
adc
in
add
sti
and
inc
xchg
xchg
jl
mov
xchg
push
sub
outs
inc
addr16
fcmovne
inc
sub
and
lock
sub
bound
pushf
pusha
push
js
dec
idiv
cmc
pushf
into
cdq
cmp
adc
repnz
cmp
cmp
dec
pusha
and
fild
add
or
retf
out
or
xchg
cwde
sbb
jl
sub
cwde
sub
and
into
hlt
dec
pusha
sub
hlt
mov
into
mov
push
lds
dec
inc
jae
ins
outs
inc
cmps
js
int
arpl
or
xor
iret
push
adc
sahf
das
dec
ins
xchg
jge
sbb
push
inc
sbb
pusha
(bad)
shl
daa
add
aas
(bad)
jo
repnz
int3
or
sub
xor
adc
sub
adc
xor
or
ins
inc
mov
adc
(bad)
fiadd
cmp
imul
dec
jecxz
cwde
(bad)
stos
push
adc
mov
inc
fldcw
sub
nop
xchg
pop
bound
scas
pop
cmc
inc
xchg
inc
in
xor
cs
call
dec
bnd
mov
aam
enter
xchg
les
leave
or
dec
shr
and
(bad)
iret
mov
stc
xchg
fisubr
mov
ror
addr16
clc
pop
mov
shl
push
in
xor
dec
xchg
inc
pop
inc
scas
or
add
and
xor
into
ret
and
std
dec
jecxz
adc
jno
arpl
aas
out
call
cmp
or
sub
lea
ficomp
xchg
jp
add
neg
movs
aad
dec
mov
push
inc
add
fild
inc
(bad)
cmp
lsl
xor
dec
sbb
or
mov
pushf
xchg
and
fdiv
sahf
(bad)
xchg
(bad)
in
shl
jmp
sbb
sar
ret
pop
xor
mov
ret
jo
inc
cld
pop
lea
mov
ficom
add
inc
dec
adc
aam
stos
aaa
outs
cmp
jb
stos
pop
cmp
add
repz
pop
push
inc
out
mov
push
add
xchg
imul
popf
aas
loopne
cmp
mov
(bad)
add
or
xchg
fidiv
jecxz
dec
clc
jp
loope
or
mov
fsubr
sub
adc
mov
cmps
cwde
adc
sub
(bad)
cmp
inc
dec
das
pop
mov
outs
inc
and
push
(bad)
rol
jns
fcmovb
cmps
popa
stos
sub
cmps
movs
sti
cs
jmp
cmp
outs
lods
scas
mov
inc
mov
push
xchg
inc
adc
adc
mov
std
loope
or
cmp
pop
aas
or
aaa
sbb
lods
inc
sub
mov
mov
ss
pop
xchg
push
and
xlat
push
ss
mov
pop
stos
arpl
adc
push
int
test
ret
cmps
and
inc
out
mov
jo
mov
mov
sbb
repnz
xor
pop
cmc
out
add
sbb
pop
lods
and
adc
jns
sbb
mov
mov
mov
out
xchg
mov
ret
mov
repnz
jl
mov
pop
jle
shl
cld
cwde
jae
pop
inc
push
mov
idiv
shr
jae
movs
test
adc
xchg
in
test
clc
pop
cmps
sub
daa
jecxz
test
and
test
call
pop
lea
sub
dec
(bad)
sub
add
cmp
push
pop
push
outs
mov
test
or
pop
js
mov
adc
push
pop
jne
(bad)
jmp
(bad)
stos
jmp
push
cmp
push
jmp
fiadd
mov
mov
dec
jp
push
mov
and
rep
fcom
pusha
push
mov
or
aam
pop
xchg
xchg
cmps
ror
stos
pop
push
adc
out
inc
push
outs
xlat
arpl
in
and
sub
jcxz
fldln2
shr
aad
lods
pop
xor
adc
push
test
aad
fld
and
scas
mov
ins
push
(bad)
fst
fiadd
es
fld
mov
sbb
mov
add
mov
mov
cmp
xchg
mov
lods
popa
leave
inc
ret
je
outs
rcr
cmps
jmp
cld
inc
cmp
sbb
test
jl
push
inc
pop
stc
adc
push
add
cmc
or
dec
aaa
sbb
dec
ret
xor
sub
fwait
js
push
mov
loope
mov
out
mov
jno
dec
int3
in
(bad)
jmp
pusha
sbb
lock
pop
or
loope
(bad)
fcmovbe
out
mov
dec
call
leave
inc
out
arpl
jae
inc
pop
scas
std
movs
inc
fdiv
inc
mov
mov
nop
push
fwait
out
fmul
jge
or
into
outs
adc
mov
sahf
or
faddp
cmp
aad
ficom
mov
pop
in
scas
nop
add
iret
daa
adc
aas
adc
mov
mov
add
call
mov
retf
popf
ret
stc
push
jns
lock
pusha
shl
inc
idiv
sti
adc
jne
(bad)
push
fstp
mov
std
and
add
cmc
cwde
out
cmp
mov
pop
sti
xchg
rcr
sbb
mov
repz
jp
ss
mov
imul
daa
mov
pop
jge
out
inc
sub
sbb
shl
mov
mov
xchg
push
jne
mov
xchg
adc
pop
lods
das
leave
add
sbb
retf
cmp
sub
cld
xchg
stos
cmc
test
pop
mov
int
sbb
add
push
xchg
mov
iret
cmps
adc
addr16
int3
or
pop
and
enter
daa
mov
xor
dec
adc
retf
sub
cli
xor
es
adc
icebp
jnp
xchg
sbb
shl
lods
or
ret
pop
pusha
jb
shr
in
lods
and
jmp
adc
mov
cmp
cmp
inc
popa
popf
idiv
cwde
push
movs
ins
fld
sub
sub
push
loopne
nop
mov
adc
sbb
aad
sub
out
add
add
jno
fst
ret
sub
in
pop
test
inc
in
out
and
stc
pop
sub
cmp
(bad)
int3
mov
fwait
mov
imul
jg
enter
outs
mov
pop
iretw
push
sub
add
leave
aad
fcom
sub
test
mov
sbb
xchg
and
sbb
sti
cmp
sbb
sbb
cmc
fidivr
fisub
out
add
or
jbe
inc
inc
scas
rol
adc
loopne
jg
pop
sub
pop
sbb
in
push
and
cdq
cmp
loope
ret
pop
scas
adc
push
cs
pop
pop
sbb
jb
add
enter
xchg
xor
mov
fwait
js
in
aad
out
xchg
or
mov
inc
leave
push
add
ins
and
mov
ds
pop
loopne
shl
dec
bound
mov
test
push
or
les
neg
aaa
pop
cmps
or
fnstsw
xor
and
inc
or
test
adc
mov
ss
(bad)
aas
mov
jo
cmps
call
jno
push
mul
ror
loopne
or
inc
enter
ror
fld
jmp
mov
and
jg
push
fisubr
rol
and
inc
out
inc
ins
push
jnp
inc
aas
sahf
pop
loop
jp
xchg
pusha
push
inc
mov
xor
lods
sbb
mov
push
dec
add
or
shr
test
mov
sbb
xlat
nop
or
jb
out
push
jl
cmp
lods
push
mov
jecxz
jmp
mov
push
ret
arpl
mov
mov
inc
dec
mov
jno
ins
in
(bad)
scas
(bad)
shl
or
in
push
mov
cmp
or
add
inc
cmp
mov
into
(bad)
out
dec
cmp
cmc
xchg
pop
mov
adc
add
push
mov
ins
mov
and
xor
test
push
popf
inc
es
idiv
test
push
sub
mov
int3
ds
jno
clc
dec
pop
mov
mov
xchg
and
popa
push
fnstcw
nop
xchg
cmp
inc
mov
sti
push
(bad)
std
dec
inc
push
cmp
or
adc
dec
dec
adc
mov
adc
jns
dec
rcl
arpl
mov
xchg
sbb
or
ficomp
inc
jg
jl
retf
jbe
pop
int3
clts
rcl
fild
mov
mov
add
push
jmp
repnz
jns
pop
mov
out
push
imul
clc
add
mov
push
sub
stos
push
aad
add
jge
or
dec
lods
aas
arpl
sar
xor
clc
pusha
mov
enter
pop
add
cmc
or
call
les
(bad)
pop
jle
call
aaa
(bad)
push
lods
icebp
(bad)
pop
sub
dec
push
int
inc
imul
inc
cmp
or
xchg
data16
cmp
jns
xchg
test
inc
or
loopne
div
xchg
and
xchg
cs
jno
jle
je
popa
fs
imul
mov
fmul
add
cmps
das
dec
push
fldenv
mov
jmp
add
mov
jecxz
xor
into
pushw
ffreep
imul
and
int3
dec
push
dec
sub
test
stos
mov
aad
xchg
rcl
xchg
test
xor
xchg
push
sbb
mov
inc
mov
ins
(bad)
mov
repz
inc
inc
sub
xor
ds
jl
es
cli
mov
shr
pop
lods
popf
mov
jns
xor
ret
xor
nop
mov
and
and
xor
cdq
inc
stc
pop
(bad)
cli
mov
(bad)
in
dec
out
cmp
sub
mul
enter
pusha
fmul
pop
push
sbb
or
add
clc
test
adc
lock
ss
pop
rcr
and
mov
jno
and
pop
cmps
cwde
add
cmp
cmp
shl
mov
cmp
out
scas
inc
mov
and
pop
out
movs
push
cmp
inc
add
in
push
mov
out
aad
or
cwde
pop
lock
cmp
lods
jne
sbb
pop
shr
out
sub
sub
retf
imul
mov
int3
(bad)
enter
inc
das
mov
xor
mov
ss
xor
jecxz
hlt
out
aam
push
and
test
cwde
pop
pop
mov
sub
retf
push
call
cmp
mov
into
pushf
cmp
inc
sub
cmp
fidivr
mov
cmp
loope
xchg
sub
pop
ins
adc
test
int3
push
je
mov
add
mov
not
push
or
mov
push
in
stos
inc
xchg
arpl
xor
std
mov
or
cmp
aad
dec
mov
push
push
movs
inc
ds
call
mov
daa
adc
call
sbb
jle
cld
jns
pop
lahf
inc
gs
sbb
mov
jae
and
leave
pusha
xor
adc
int
cmps
retf
pop
into
pop
and
inc
inc
out
arpl
mov
and
aam
sbb
xchg
dec
xchg
push
jns
push
out
shl
fistp
into
push
and
arpl
push
aaa
dec
sbb
fld
adc
xchg
retf
sub
or
mov
xchg
ret
jnp
mov
jb
inc
sbb
dec
nop
xchg
mov
ret
xor
stc
(bad)
xlat
jnp
cdq
jbe
mov
adc
fwait
out
in
cmp
mov
cmc
sbb
pushf
and
inc
mov
test
xchg
xchg
push
adc
or
(bad)
cmp
jmp
call
addr16
mov
xor
add
sub
cmp
adc
pop
out
pop
dec
out
sti
jp
aas
jecxz
or
sub
scas
mul
ret
cmp
jne
jmp
dec
and
icebp
push
add
lds
inc
dec
jg
scas
inc
dec
cwde
fistp
jo
pop
push
(bad)
xchg
mov
pop
daa
xchg
cmp
push
inc
in
and
call
js
sbb
add
cli
int3
xchg
jle
jg
jnp
jae
and
xor
mov
cs
ins
dec
mov
fnstenv
xor
fsubr
pop
(bad)
xor
mov
add
iret
cmp
mov
mov
sub
push
mov
sub
xor
adc
arpl
xor
mov
iret
ins
icebp
stc
dec
and
add
outs
imul
mov
stos
xchg
out
adc
cmps
pop
clc
nop
int3
inc
adc
je
and
pop
pop
jmp
(bad)
jnp
push
mov
mov
in
push
xchg
or
pop
cmp
ror
lock
mov
dec
or
cwde
arpl
pop
cmp
xchg
addr16
sub
pop
stos
lods
pop
arpl
adc
nop
sbb
enter
pop
pusha
(bad)
push
je
dec
inc
cmp
loop
neg
push
jns
pop
sub
xchg
(bad)
(bad)
push
push
jbe
popf
int3
push
add
jmp
pop
jbe
in
mov
mov
out
cli
out
sub
and
loopne
adc
ret
push
xor
and
add
faddp
mov
adc
push
inc
xlat
popa
mov
add
pop
mov
mov
dec
and
adc
mov
ret
jg
and
xchg
fisttp
cmp
mov
and
and
mov
xchg
lods
cmps
pop
inc
jb
adc
cmp
mov
jecxz
bound
shr
imul
sbb
(bad)
aaa
jns
outs
add
js
fsubr
push
or
loop
xlat
dec
repnz
xor
test
cmp
pusha
ins
mov
stos
test
sar
jne
or
(bad)
leave
mov
adc
push
dec
fs
(bad)
lea
sub
outs
shr
xchg
push
jae
xor
mov
sbb
mov
mov
add
test
mov
pushf
mov
shl
push
mov
jp
and
push
rcl
test
sbb
outs
or
or
cmp
js
cmps
push
int
or
xchg
mov
cmps
jecxz
mov
div
test
outs
mov
and
xchg
or
sbb
fidiv
push
loopne
add
ret
in
cmp
scas
test
cmp
dec
fbld
inc
sub
ret
add
mov
ins
mov
mov
int3
xor
dec
jg
pop
cmp
sub
sar
jmp
cs
xchg
les
pop
pop
cmp
arpl
(bad)
push
mov
push
inc
jecxz
cmp
push
repnz
aam
frstor
test
gs
push
add
mov
or
mov
or
(bad)
mov
icebp
jnp
pusha
(bad)
out
pop
xchg
cmps
mov
push
nop
stc
jns
adc
aas
jb
sbb
jg
je
loopne
out
(bad)
mov
sti
add
shr
pop
mov
inc
test
sbb
xor
aad
sub
repz
sbb
pop
xchg
lods
jo
mov
mov
test
inc
mov
mov
pop
and
push
xchg
aad
mov
movs
js
les
fisubr
inc
stos
jb
jae
dec
jne
ds
sub
adc
xor
les
lods
in
fld
(bad)
cwde
rcl
shl
jge
or
leave
jnp
jae
mov
jnp
stos
das
pushf
lods
sbb
pusha
jmp
adc
hlt
inc
jo
inc
icebp
das
xor
push
fldenv
xchg
mov
pop
mov
in
and
adc
xchg
(bad)
cld
shr
shl
and
dec
push
or
fcom
xchg
test
and
ja
or
fld
aad
jecxz
popf
stos
shr
add
mov
cwde
(bad)
sub
pop
call
jo
dec
sbb
bound
jmp
repnz
lea
xlat
mov
inc
jno
rcr
data16
xchg
mov
dec
jp
jecxz
cmps
test
cmps
push
aaa
mov
jmp
sti
adc
lock
fld
add
in
mov
jae
sub
add
sub
push
lahf
jmp
inc
mov
les
cmps
push
jmp
call
in
popf
mov
scas
popa
sbb
xor
mov
adc
fsubr
cdq
and
and
std
dec
push
mov
dec
mov
xor
cmc
aam
mov
call
inc
aam
dec
icebp
xor
aas
gs
xor
clc
ss
cmp
mov
dec
and
dec
cmp
cmp
sbb
and
xchg
xchg
or
add
outs
fld
pop
add
push
jb
cmp
xlat
inc
or
das
fwait
pop
xchg
mov
cmp
cmp
dec
push
jae
or
adc
sub
jmp
or
pop
mov
fcmovu
lods
dec
ds
mov
jge
sbb
call
bound
mov
push
ret
jle
lods
fild
inc
push
(bad)
dec
inc
push
(bad)
jmp
(bad)
fwait
enter
call
jmp
int
pop
sub
ds
mov
clc
adc
hlt
or
dec
(bad)
xchg
es
fs
inc
lahf
or
jo
pop
or
call
add
mov
sbb
add
dec
hlt
mov
push
stos
xor
repz
hlt
jo
loop
add
pop
cmc
adc
pop
xchg
jnp
mov
fmulp
inc
mov
jne
jmp
xlat
es
sbb
pop
adc
(bad)
jge
fnstenv
dec
(bad)
push
sub
in
add
rol
xlat
push
pop
nop
or
sub
stc
movs
fnsave
xchg
sub
test
imul
push
dec
mov
(bad)
data16
jmp
paddusw
clc
es
pushf
icebp
pop
sti
or
xchg
(bad)
sbb
mov
mov
sbb
test
push
lods
cmp
xchg
lds
test
aam
inc
scas
das
push
loop
aaa
(bad)
imul
cld
sti
inc
imul
int3
es
sbb
out
xchg
and
mov
pop
cs
adc
xchg
mov
das
cmp
sbb
sub
popa
js
imul
mov
popa
inc
lahf
sahf
ds
and
add
pop
call
mov
test
inc
stc
ror
push
out
loope
jge
mov
aaa
adc
push
add
jge
test
xchg
fsubr
test
adc
gs
pushf
xor
xor
jbe
pop
push
xchg
lock
dec
fisttp
sub
sub
and
imul
popa
jbe
mov
jmp
shl
and
outs
add
movs
test
sub
cmp
popa
mov
jbe
rcl
xor
sub
(bad)
loop
push
leave
fldcw
retf
pop
adc
mov
mov
shl
xchg
jmp
cmp
push
push
mov
inc
jl
pop
cdq
or
data16
mov
mov
pop
or
inc
call
and
mov
mov
mov
call
test
out
ret
jb
data16
add
fstp
scas
push
les
cmc
pop
jbe
ret
dec
xchg
push
sub
dec
add
xor
in
jbe
mov
add
je
es
int
or
ins
imul
test
(bad)
inc
cmp
lock
lods
push
cmp
ins
push
out
sub
test
bound
push
mov
pushf
mov
add
xchg
std
dec
mul
leave
add
imul
jno
stc
pop
(bad)
ds
cmps
mov
cs
sub
ror
std
adc
push
push
ret
mov
into
out
xchg
stc
out
int
pop
cmp
lea
mov
pop
mov
jno
xor
adc
ret
or
push
stc
out
or
hlt
fucomi
call
mov
aam
je
imul
sub
outs
cmp
loop
add
inc
lods
clc
aaa
dec
mov
cld
ret
clc
pop
pop
fnstcw
pushf
jp
push
adc
sbb
adc
scas
jo
jmp
or
jmp
mov
mov
mov
pop
sbb
rcl
xchg
adc
xor
push
jne
stos
or
add
sahf
pop
cs
or
mov
or
inc
(bad)
movs
sbb
repnz
bound
and
inc
and
ja
ins
jp
mov
clc
push
icebp
mov
ss
mov
in
pusha
out
gs
icebp
cdq
ds
retf
movs
gs
idiv
push
das
or
sbb
dec
cmps
dec
dec
loop
ins
cmp
or
and
fmul
les
pop
icebp
xchg
cmps
pop
imul
or
ret
outs
in
pop
stos
test
push
fwait
in
mov
add
jecxz
dec
jecxz
popf
loopne
sbb
je
stc
pop
sub
rcr
inc
mov
inc
shr
cdq
mov
mov
pusha
and
jl
cmc
cmp
pop
loopne
fidiv
xor
pop
aad
inc
adc
test
repz
xchg
clc
test
dec
xlat
(bad)
mov
cmp
and
repnz
push
mul
in
and
stos
je
inc
pop
(bad)
fisubr
in
xchg
or
fwait
sub
inc
or
pop
pop
mov
mov
add
xchg
sbb
mov
push
and
and
or
test
cmc
in
mov
inc
sahf
fdiv
movs
aas
sbb
fiadd
pop
lahf
not
out
fbstp
sbb
rcl
xchg
into
test
jmp
xchg
lods
cld
xchg
pop
mov
xor
adc
mov
iret
xor
cmovbe
nop
jb
scas
xchg
sbb
sbb
jp
mov
mov
inc
test
mov
dec
mov
popf
jae
or
mov
iret
xor
xchg
ret
les
pop
pop
cmp
mov
loop
mov
adc
add
int
or
sbb
ror
cmps
mov
ds
jno
(bad)
fistp
int3
xchg
arpl
mov
cmp
cmp
push
(bad)
in
call
clc
add
cmp
or
bound
inc
mov
sub
jecxz
int3
ret
sbb
inc
xor
fidiv
xchg
mov
mov
add
mov
inc
xor
adc
push
cmc
and
mov
xchg
push
int
push
cmps
push
add
out
out
or
cli
add
sbb
lds
in
xor
test
push
and
jl
add
cmc
popa
test
push
mov
fistp
int
fidivr
pop
mov
dec
inc
cli
pop
cmp
mov
xor
addr16
jl
stos
sub
mov
leave
in
out
retf
xchg
leave
sub
mov
pop
xchg
sub
fs
loop
xor
cmps
xor
dec
sbb
pop
aaa
bound
inc
or
lahf
out
push
push
shr
(bad)
stos
jb
mov
sbb
les
sar
hlt
out
daa
imul
fisubr
sar
aas
adc
sti
pop
in
dec
pop
dec
pop
mov
icebp
push
xchg
add
adc
xor
cmc
mov
adc
adc
push
lods
pop
out
adc
cmp
sbb
aam
into
adc
inc
pop
retf
mov
test
test
mov
jns
adc
or
fs
into
sbb
clc
out
pcmpgtw
pop
mov
cmps
cs
fisttp
or
inc
ret
push
dec
lods
adc
cwde
jne
sbb
add
popf
adc
in
inc
pop
std
push
xchg
add
jl
test
shl
mov
rol
movs
out
jno
test
(bad)
sub
loop
(bad)
sbb
add
mov
and
and
cs
pop
jae
xor
cmp
adc
gs
push
xor
xor
cwde
pop
adc
add
pop
test
mov
ret
lahf
mov
daa
xchg
or
jno
repnz
cs
xchg
lahf
fdiv
xor
adc
bound
add
in
fstp
xor
fcomp
push
adc
add
sub
sub
and
popa
pop
cwde
sub
mov
stc
fnstsw
popf
jecxz
jno
das
(bad)
mov
sub
cmp
adc
jae
fs
add
or
cld
call
cmp
rcl
mov
pop
std
add
xor
popa
pop
dec
retf
not
imul
pop
cmp
stos
pop
push
jp
inc
cmp
pop
xor
mov
int3
cmp
inc
mov
xor
es
mov
test
sbb
mov
pop
or
ins
stos
pmaxsw
and
adc
clc
aaa
pop
xor
jb
sbb
mov
mov
retf
sbb
hlt
cmp
adc
mov
sub
or
and
ss
(bad)
pop
xor
dec
xor
(bad)
rol
scas
sub
aad
test
sub
(bad)
mov
sub
xchg
fninit
call
sub
pushf
lahf
in
jle
push
dec
xor
rcl
in
add
enter
mov
fld
push
cdq
sub
mov
jns
iret
ror
and
push
fwait
jno
sti
lods
leave
push
pop
test
rol
jnp
and
out
and
outs
leave
and
mov
lock
test
arpl
push
dec
mov
scas
cld
mov
adc
push
aaa
xor
test
stos
retf
aas
jae
mov
or
dec
jge
mov
cmp
jne
scas
fst
dec
rcr
dec
mov
push
imul
jmp
and
or
jle
pusha
inc
push
mov
jae
outs
lock
pop
push
stos
test
sbb
cwde
cdq
fwait
cwde
fbstp
nop
leave
xchg
outs
xchg
fidivr
leave
xchg
inc
shl
rcr
inc
add
mov
call
jmp
mov
ins
jmp
(bad)
out
popf
push
dec
inc
or
fbld
stos
push
das
xchg
xor
daa
ins
add
test
sahf
and
outs
xchg
pop
lods
outs
mov
dec
jo
or
popf
rcl
jns
out
sub
loopne
aas
jmp
repz
and
inc
mov
cmp
lahf
jg
xchg
cli
stc
add
jecxz
jp
call
mov
loope
fisub
sub
push
jne
mov
push
in
iret
loopne
xor
push
push
push
sbb
aad
sar
cmc
data16
dec
and
sub
test
mov
xchg
mov
data16
adc
out
outs
ficomp
mov
xor
out
sub
or
sub
loop
leave
fistp
bound
cwde
repnz
inc
adc
ja
jmp
int
push
loop
into
pop
pop
adc
adc
mov
jb
mov
jmp
mov
je
lea
sahf
cmc
dec
lods
ficomp
push
aam
test
xor
and
xchg
jns
rcr
sbb
sbb
ins
stos
pusha
mul
xor
and
mov
mov
leave
fild
xlat
fistp
push
dec
pop
mov
call
ja
jnp
pushf
or
xor
cmp
jecxz
ror
ins
mov
aam
push
rcl
push
les
ficom
pop
scas
test
cmp
ret
pop
(bad)
jbe
test
mov
add
(bad)
jnp
cmp
daa
cmp
rcl
or
cli
repz
and
sbb
sbb
mov
xchg
div
out
sub
pop
sbb
dec
sub
es
cmp
mov
xlat
dec
push
aad
mov
jnp
lahf
stc
mulps
xchg
jns
inc
cli
mov
out
call
ficomp
outs
mov
dec
mov
je
ret
push
test
sbb
pop
not
jecxz
cmp
push
(bad)
nop
rol
lock
shl
add
mov
mov
push
mov
jp
and
outs
xchg
pop
or
push
push
sub
jno
icebp
jb
cli
and
int3
dec
sub
cmps
cmps
(bad)
daa
inc
mov
sbb
loopne
mov
fcmovu
pop
dec
(bad)
pop
and
punpckldq
dec
sbb
dec
lea
(bad)
jnp
add
adc
push
sbb
adc
imul
dec
dec
mov
dec
(bad)
imul
or
push
add
iret
cmp
movs
ins
(bad)
call
sub
fstp
aas
inc
cmp
mov
jge
pop
adc
inc
mov
xchg
pop
jp
pop
xchg
call
mov
loopne
test
mov
test
ret
jg
add
ret
(bad)
sub
neg
cmc
pop
sub
inc
inc
add
out
ins
hlt
dec
imul
push
enter
rol
out
test
dec
and
cmp
fisubr
js
je
sbb
mov
ficomp
mov
sar
inc
sub
jge
inc
loop
movs
push
lahf
pop
out
sub
and
push
int3
jle
push
xchg
in
dec
jo
(bad)
inc
fmul
retf
xor
mov
imul
jns
cmp
jno
jb
push
dec
jmp
jnp
div
pop
es
sbb
stc
call
jns
call
inc
pop
cmc
mov
and
and
scas
sbb
imul
add
jmp
push
(bad)
iret
jl
add
out
lods
test
push
ret
mov
and
cmp
mov
push
clc
aam
inc
lds
jp
cmps
cli
lahf
jmp
sub
mov
xchg
sub
mov
(bad)
xchg
fcomp
sti
out
xor
enter
jne
dec
sbb
movs
mov
xlat
popa
sar
mov
ficom
inc
and
or
sbb
sbb
jl
jge
int
dec
or
xchg
xchg
push
int3
movs
das
jmp
neg
mov
cmp
jns
(bad)
test
ficom
or
fisub
retf
sbb
aam
inc
lahf
mov
pop
ds
retf
out
xchg
sbb
test
jg
lods
push
retf
int3
push
adc
(bad)
std
aaa
cli
adc
adc
aaa
xchg
rcr
mov
xor
pusha
popa
sbb
repz
call
sub
xor
ficom
cdq
(bad)
mov
sub
repnz
nop
stos
push
adc
(bad)
scas
push
xor
jg
dec
pop
cmp
(bad)
sbb
fistp
gs
mov
xchg
sbb
sti
imul
in
rcr
cld
enter
jno
xor
(bad)
sub
xor
jle
loopne
inc
pop
push
scas
es
or
fistp
add
iret
add
aad
pop
sbb
and
(bad)
mov
stos
xchg
push
cmp
call
or
addr16
add
xor
outs
cmp
sub
push
pop
add
cmp
icebp
pop
or
cli
mov
js
mov
in
mov
mov
push
repnz
mov
stos
mov
cmp
outs
pushf
adc
adc
xchg
adc
push
mov
stc
push
(bad)
out
jg
std
sbb
xor
lahf
outs
lahf
lea
loope
pusha
dec
xchg
xor
scas
jge
pusha
loop
das
mov
retf
pop
inc
xchg
fwait
pop
push
add
movs
shr
fimul
mov
sbb
in
ret
ds
out
mov
mov
neg
sub
lea
pop
outs
xor
or
bound
int
xchg
sub
(bad)
pop
call
mov
in
dec
into
xor
push
call
movs
in
push
js
fistp
cdq
jecxz
adc
or
xor
jmp
test
arpl
outs
loop
in
ror
or
add
sub
mov
mov
in
aam
cmp
jns
add
imul
es
push
std
mov
lods
xor
pop
aad
mov
outs
mov
add
sbb
mov
aaa
cld
jg
daa
jno
sub
cld
neg
mov
idiv
xchg
aad
or
stc
push
test
sbb
mov
and
rol
in
adc
jg
jae
dec
mov
sub
or
sub
push
mov
fwait
cli
jl
daa
add
test
push
mov
mov
and
cwde
je
aaa
dec
cmps
xchg
add
pop
jo
(bad)
aam
mov
loop
and
fmul
jmp
ds
adc
in
loop
jmp
cmp
mov
xchg
stos
shl
mov
pop
call
jne
push
lds
mov
stos
cli
jmp
pop
aad
push
cmp
inc
sub
xor
stc
pop
xchg
and
dec
(bad)
mov
out
popf
outs
ins
push
out
ss
call
mov
push
mov
xor
enter
dec
mov
fnstenv
jmp
popa
add
pop
dec
aas
sbb
or
dec
jo
lods
xchg
dec
or
movs
sahf
out
xchg
test
and
inc
adc
pop
add
jle
(bad)
push
mov
nop
(bad)
push
push
and
jg
jno
aam
jp
xchg
fmul
jg
mov
cmp
mov
call
and
sub
sub
sub
inc
dec
(bad)
xchg
mov
in
xchg
and
das
in
push
test
pop
cmps
mov
xor
xchg
cwde
cmp
pop
xchg
loopne
cld
sti
js
or
adc
aam
shr
xor
add
cmp
cmp
mov
pop
inc
fucom
jne
mov
movq
lods
ins
cwde
fldcw
pop
popf
lock
mov
cld
sub
loopne
stos
(bad)
ins
fs
fisttp
loopne
jmp
xchg
movs
js
pop
push
mov
stos
imul
ss
jb
mov
jg
in
dec
or
adc
push
adc
sbb
das
rcl
mov
test
fadd
xor
or
sar
push
stos
scas
(bad)
iret
pop
call
scas
dec
ja
push
mov
cs
mov
add
les
push
push
jb
and
bound
adc
and
jle
and
add
lds
movlps
hlt
inc
mov
das
retf
stos
inc
loope
pop
sub
in
test
ins
xor
xchg
fdiv
xchg
stos
pop
movs
jae
aas
jb
push
out
fadd
pop
pop
je
adc
lods
cmp
lock
shl
push
rol
add
xchg
xor
(bad)
dec
sti
adc
scas
je
iret
push
mov
mov
movs
adc
cdq
aad
jge
popa
(bad)
in
out
ds
push
cmps
ja
out
xor
mov
add
call
fisubr
aad
dec
jbe
mov
push
push
aaa
test
pusha
inc
adc
jb
inc
out
sub
xchg
bound
dec
sbb
cmp
(bad)
in
jno
xor
ret
pop
movs
inc
dec
sbb
(bad)
(bad)
jb
or
push
and
js
jg
je
je
sub
in
sub
sar
pop
es
mov
sahf
aaa
nop
and
ins
add
lahf
add
dec
in
retf
push
xor
test
aad
jecxz
cli
sahf
or
loop
loopne
sub
mov
jmp
cmps
add
loop
jg
fsubr
mov
ins
iret
or
sub
repz
rep
mov
mov
mul
fild
je
ds
ret
ins
pop
retf
cmc
ja
movs
sbb
cmp
pushf
(bad)
imul
test
sbb
mov
fisubr
or
into
(bad)
iret
push
pop
pop
call
xchg
repnz
clc
es
add
or
pop
cld
adc
mov
cmp
imul
lock
cmp
stos
cmp
aam
jl
pusha
jp
lods
jecxz
dec
loop
icebp
pushf
push
or
test
or
xchg
fidivr
jp
fwait
leave
mov
fidivr
in
push
fild
sub
aad
lock
dec
pop
and
sahf
push
std
pushf
std
sub
push
fstp
pop
cwde
jbe
out
hlt
push
movs
inc
std
fsubr
push
mov
and
mov
pusha
(bad)
lahf
es
mov
adc
cmp
xor
lea
test
and
ins
cmps
leave
pop
outs
call
dec
xor
push
pop
push
pop
jp
mov
stos
scas
pusha
cmp
mov
inc
mov
gs
sbb
and
ret
pop
pop
popf
push
xor
neg
mov
pop
xor
and
jb
xor
xor
and
lods
push
xor
retf
stc
mov
into
mov
fidiv
jp
and
outs
aad
xchg
or
xor
jg
mov
xor
ficom
inc
shl
xor
sub
movs
add
mov
repnz
fidivr
cdq
cdq
adc
pushw
or
inc
(bad)
and
inc
sub
loopne
sub
mov
gs
fdiv
dec
sbb
adc
lods
lock
sbb
cdq
xchg
aad
pop
or
inc
int3
sar
pop
xor
ja
lds
xchg
shl
inc
out
mov
mov
push
(bad)
shl
rol
or
outs
adc
test
push
gs
xor
gs
xor
loopne
int3
sub
push
add
rcl
ss
into
outs
pop
push
jnp
dec
mov
mov
inc
mov
xchg
cdq
xchg
out
imul
pusha
cmp
loop
cmp
dec
(bad)
or
movs
scas
xchg
mov
cmp
hlt
mov
aas
(bad)
rol
cs
sub
leave
stos
scas
ds
pop
mov
sbb
sbb
lods
push
pop
retf
inc
aam
cdq
loop
repz
lea
mov
in
jb
jns
fld
call
jge
icebp
das
inc
xor
scas
jge
cs
push
xlat
sbb
ja
shr
xlat
xlat
pop
iret
jl
repz
scas
inc
or
mov
mov
loop
je
popa
ins
xchg
ret
int3
push
xchg
cld
inc
lods
cmp
xor
fwait
iret
leave
gs
shr
leave
icebp
or
mov
bound
pop
push
push
stos
add
inc
imul
push
aas
repz
xchg
push
daa
sbb
fisubr
repz
enter
sub
pop
(bad)
sub
pop
dec
loop
popa
call
sti
sti
adc
and
push
push
sub
mov
jmp
sti
add
popf
xor
and
test
inc
cmp
aam
ins
or
scas
sub
adc
je
loop
xor
sbb
popf
in
push
sub
cmps
jo
aam
adc
inc
xchg
in
and
jl
arpl
mov
mov
mov
xchg
pop
cmp
adc
sub
(bad)
out
mov
es
inc
mov
sti
(bad)
push
daa
scas
sahf
cli
popa
sbb
(bad)
pop
mov
or
aas
mov
pop
out
xchg
or
and
clc
arpl
(bad)
retf
dec
or
test
iret
ins
jmp
pop
idiv
loope
out
and
popa
mov
(bad)
jecxz
idiv
mov
mov
lods
mov
mov
ins
les
xchg
int3
sub
jne
xchg
pop
out
into
dec
and
push
(bad)
sub
push
inc
or
inc
cmp
mov
outs
add
sub
scas
cli
dec
je
das
mov
add
nop
dec
fldenv
int
xchg
cmc
rep
jnp
jo
loope
aad
lock
out
mov
popa
mov
gs
jno
xchg
xor
dec
dec
pop
xor
cmps
not
inc
jae
loopne
ror
lea
cwde
out
rol
push
pop
jg
mov
retf
mov
repnz
and
add
dec
int3
push
jmp
inc
arpl
ja
cmps
mov
xlat
push
or
dec
mov
jnp
or
push
sub
stos
xor
loop
(bad)
mov
or
xor
fcom
mov
gs
mov
movs
inc
jecxz
push
rcl
jg
loope
(bad)
cmc
dec
xchg
mov
jmp
dec
stc
pop
lea
jae
fcomp
mov
pushf
cmp
adc
push
and
dec
push
clc
cmps
and
ror
mov
add
adc
jns
in
add
mov
(bad)
xor
into
dec
mov
arpl
mov
inc
add
sbb
push
add
mov
aad
push
ja
ror
mov
adc
shl
retf
adc
adc
(bad)
mov
or
jmp
xchg
xchg
jp
push
dec
ret
ret
and
cmps
test
addr16
adc
xchg
push
mov
movs
xchg
call
cmc
int
adc
or
rol
lods
fist
xchg
call
outs
(bad)
retf
add
dec
cmp
mov
xor
xor
lods
sbb
loope
and
dec
xchg
inc
lods
cmp
enter
lods
aad
mov
std
cmc
pop
pushf
add
scas
call
iret
adc
lock
push
fst
loopne
cmp
xor
in
mov
and
fs
adc
fistp
jmp
not
sbb
in
repz
or
push
lahf
mov
adc
push
push
je
inc
loopne
inc
shl
pop
push
cld
pop
inc
pop
add
add
repnz
pop
or
imul
sub
mov
xor
mov
jbe
mov
sbb
jecxz
or
lock
add
lods
(bad)
mov
and
mov
dec
sub
cmc
jecxz
push
(bad)
mov
inc
leave
xchg
addr16
fsubr
push
in
test
add
fiadd
std
jp
mov
add
xchg
lahf
dec
jbe
xchg
cmp
(bad)
inc
dec
xchg
jl
in
mov
in
repz
stos
add
gs
pop
sbb
out
call
sbb
xchg
or
dec
cmp
(bad)
aad
xchg
cmp
pushf
inc
lods
shl
outs
xor
rdtsc
sbb
jo
add
stos
adc
xchg
ja
jp
cmps
clc
xchg
adc
inc
adc
rcl
jne
push
aam
mov
and
jg
xchg
dec
rol
iret
shr
add
cwde
and
jnp
jmp
sahf
dec
sahf
jne
loope
popa
mov
rcl
xchg
cmp
sahf
test
test
cmp
sbb
push
cmp
stos
ret
jecxz
pop
pop
mov
pop
call
lods
inc
out
or
push
sbb
in
js
or
xchg
jmp
adc
push
outs
push
pop
js
and
inc
arpl
ret
mov
mov
sbb
popf
(bad)
cmp
mov
loop
inc
adc
and
dec
and
pop
lock
cwde
push
iret
cmp
clc
mov
out
movs
inc
push
mov
loopne
sub
and
dec
sbb
or
out
adc
retf
add
daa
test
inc
int
xor
fnstcw
lods
fstp
out
fcmovnbe
sbb
dec
sahf
inc
clc
mov
test
or
cmps
loop
push
pop
push
jg
fcomip
mov
pop
sub
cli
mov
(bad)
cmp
mov
sub
or
(bad)
dec
sti
inc
adc
(bad)
pop
cld
dec
xor
jmp
lds
mov
inc
imul
dec
cdq
leave
add
or
pop
loopne
add
cmp
loop
mov
or
dec
mov
cmp
mov
push
add
int
dec
bnd
xlat
mov
cli
dec
add
add
ds
jl
pop
fldenv
add
cmps
cmp
icebp
shl
loope
push
call
arpl
nop
movs
inc
or
add
aas
loopne
cmps
jmp
and
std
and
int3
iret
sbb
fcom
mov
sbb
retf
es
sub
jecxz
mov
aas
fs
aam
in
sub
mov
add
or
lods
dec
push
sub
aaa
std
jno
and
cmp
add
in
adc
iret
les
call
mov
mov
dec
loop
pop
add
mov
push
add
out
and
mov
jno
dec
jno
inc
inc
and
retf
ins
pop
ret
jbe
sbb
sub
fld
add
test
imul
test
mov
scas
inc
imul
test
adc
jns
or
fwait
das
or
adc
jb
mul
lods
mov
mov
sbb
test
sbb
pop
push
adc
pop
int3
mov
pusha
fcmovb
shl
add
into
add
mov
or
retf
or
int3
fstp
mov
cmps
ror
lea
cmc
dec
dec
adc
mov
add
push
lods
out
jae
inc
sub
dec
loopne
es
cmp
shr
nop
lods
xchg
or
inc
je
stc
fsubr
mov
wbinvd
fld
cmp
loope
out
movs
outs
int3
repnz
cmp
and
cmp
cmc
loope
add
push
shl
adc
jne
xlat
loopne
loopne
repnz
sahf
int
out
ret
jns
mov
mov
xor
jae
retf
cmp
jne
dec
(bad)
cli
cmp
or
stos
lods
(bad)
xor
gs
ret
sub
add
pslld
push
mov
mov
sbb
push
movs
xchg
arpl
and
adc
popf
jl
cmp
sbb
jmp
jbe
xchg
xor
sub
das
push
adc
(bad)
out
fist
cmp
or
inc
lock
les
sub
push
movs
int3
push
retf
xchg
jl
xor
test
into
xor
out
adc
sbb
dec
cmp
and
add
repnz
cmp
inc
aad
pop
push
cli
sub
dec
aam
fdiv
push
sbb
lea
mov
xor
test
xor
dec
or
(bad)
shl
inc
cmp
cld
cmps
fs
inc
call
jmp
call
shr
sahf
(bad)
out
mov
and
mov
xor
arpl
push
sub
ins
xchg
pusha
loop
repz
pop
in
test
fisub
sbb
dec
es
outs
and
dec
in
bound
cld
dec
pop
movs
mov
lods
push
sub
sub
dec
icebp
pop
cld
dec
call
dec
fcomp
xchg
xchg
cwde
mov
sbb
dec
out
lods
jne
push
mov
dec
shl
pop
add
mov
(bad)
loop
adc
aaa
dec
(bad)
hlt
adc
stos
inc
pop
push
call
mov
mov
cmp
stos
outs
ja
jmp
push
aad
popf
dec
inc
(bad)
jge
sbb
or
retf
test
and
xchg
xchg
int
adc
xor
adc
sub
jl
das
cmps
xor
pop
sub
jbe
jl
sbb
jae
xchg
or
imul
inc
xor
or
daa
out
mov
pop
not
sti
mov
sub
retf
add
xchg
fst
mov
je
ja
ds
dec
pop
out
add
(bad)
dec
gs
fcomp
push
sbb
push
dec
push
daa
fwait
out
ins
mov
inc
ja
sub
in
fdiv
fisub
pop
cmp
adc
ret
xchg
sub
and
call
aad
ja
jne
(bad)
jno
cmps
aaa
inc
pop
(bad)
sbb
jbe
js
mov
dec
cmc
not
inc
add
cmp
inc
pop
push
aaa
in
xor
inc
cmp
sbb
popa
cmp
leave
pusha
or
in
icebp
mov
mov
pop
jle
clc
push
ret
cmp
push
ret
rol
jecxz
in
mov
pop
jno
hlt
stc
pop
arpl
lds
sbb
inc
push
daa
nop
xchg
cmp
retf
sub
mov
(bad)
sbb
ds
or
jg
pop
adc
bnd
(bad)
cmp
xlat
adc
stc
jle
pusha
test
dec
pop
xchg
rcl
xchg
add
bound
sbb
neg
sbb
js
jbe
pop
pop
les
gs
push
outs
jno
scas
adc
xlat
bound
repz
bound
mov
xor
jb
fild
sti
pusha
and
jnp
aaa
ret
cmp
ins
je
ja
jp
push
rcl
call
add
ror
je
cmp
lock
hlt
xchg
dec
and
and
inc
sbb
dec
mov
das
adc
and
jne
pusha
and
jne
mov
inc
mov
push
dec
in
bnd
and
jo
ret
lahf
aad
std
pop
pop
push
ja
jnp
sbb
clc
xchg
lahf
sbb
inc
in
lds
add
xchg
imul
fs
adc
ins
cmp
lds
mov
gs
cmp
retf
and
pusha
cwde
(bad)
mov
sub
and
lock
push
xchg
push
retf
cmp
stos
lahf
pop
cmp
dec
(bad)
pop
jp
jb
(bad)
cmp
adc
std
mov
adc
xlat
mov
adc
rol
jno
(bad)
(bad)
mov
aas
xor
mov
outs
sub
ja
loop
xchg
sub
add
and
pop
mov
xchg
iret
inc
inc
loopne
push
cmp
icebp
inc
outs
and
js
push
cmps
ins
xchg
xor
lds
pop
mov
(bad)
mov
std
sbb
pop
enter
mov
je
in
hlt
mov
pushf
pop
add
adc
loopne
aad
mov
jecxz
adc
or
mov
add
stc
bound
das
and
or
les
mov
pop
cwde
arpl
into
cli
jge
and
adc
sub
mov
or
push
test
cli
std
std
push
repz
int
call
out
jne
jg
mov
push
out
adc
dec
xor
pop
sub
sub
jmp
adc
cwde
jg
clc
inc
mov
dec
ror
xchg
fldcw
scas
(bad)
lock
inc
(bad)
ds
inc
ss
cli
stos
dec
mov
push
and
cmp
rcr
xchg
mov
mov
mov
ja
sahf
xor
mov
and
(bad)
aad
xor
adc
rcr
test
inc
dec
fcom
inc
sahf
out
push
mov
jb
push
jmp
and
movs
xor
mov
pop
std
loope
add
fs
fadd
imul
xchg
les
mov
xor
xor
push
dec
cwde
mov
push
mov
inc
mov
cdq
xor
sti
xor
fdivp
into
xchg
or
lods
cmp
retf
sbb
cmp
xchg
(bad)
lea
pop
jnp
sbb
shl
int3
shl
mov
xor
mov
mov
pop
iret
mov
js
push
pop
pop
and
movs
out
cli
and
outs
mov
mov
ja
scas
out
pop
movs
push
idiv
leave
gs
mov
out
cdq
jmp
rcr
sub
dec
mov
das
inc
mov
cmp
mov
int
inc
push
xchg
xor
push
ror
and
fistp
sbb
ret
mov
push
aad
nop
cmps
push
xchg
lahf
pop
add
dec
(bad)
xchg
test
in
and
sbb
loop
movs
popa
sar
add
in
retf
sbb
jo
xor
pop
jp
dec
ins
lea
ds
adc
jle
xor
pop
dec
add
mov
imul
stc
fcomp
mov
jmp
inc
push
imul
out
add
push
and
mov
test
es
(bad)
push
pusha
dec
pop
addr16
shr
iret
push
pop
lock
cdq
sbb
jbe
fs
aaa
mov
int
mov
iret
movs
call
mov
ins
clc
cmp
repz
(bad)
mov
daa
jg
and
adc
sbb
icebp
int
jnp
cmp
mov
add
repz
xor
or
(bad)
mov
push
cs
loope
jne
shl
push
push
inc
stos
daa
or
push
lods
leave
or
xor
cmc
adc
mov
ins
push
mov
pop
or
fsubr
fistp
aas
nop
fwait
jb
jp
or
sub
or
push
call
push
adc
xchg
scas
adc
mov
cli
adc
mov
sbb
and
(bad)
jns
daa
lock
popf
sahf
fs
dec
push
shl
arpl
sbb
mov
jbe
xlat
inc
sbb
mov
inc
rol
sub
adc
mov
or
fldcw
int3
stos
gs
mov
xchg
mov
addr16
jmp
test
test
icebp
mov
and
rcr
out
ds
jns
ror
add
add
lock
mov
fild
fimul
cmp
shr
push
dec
mov
test
cmp
pop
push
fistp
fwait
mov
out
or
adc
test
xchg
sub
xchg
repnz
mov
sub
cmp
jbe
inc
aam
jg
push
xchg
ffreep
sbb
sahf
rcr
rcr
aam
adc
in
and
cmp
and
fs
mov
add
adc
test
popa
push
and
inc
sbb
push
(bad)
shl
or
imul
shl
rcr
cmc
lods
(bad)
(bad)
push
push
mov
daa
enter
inc
mov
push
xor
iret
call
(bad)
call
loop
jb
into
mov
rcl
ins
add
iret
jne
out
ja
popf
into
xchg
out
fnstenv
in
cwde
rcl
leave
inc
outs
cmp
(bad)
pop
jg
in
and
sub
int
cmp
shl
add
mov
push
bound
inc
cmp
(bad)
jle
std
xchg
aaa
and
mov
xchg
xor
cs
mov
adc
xchg
adc
rcr
or
hlt
movs
sbb
push
pop
pop
adc
push
jae
inc
or
out
dec
fwait
inc
(bad)
icebp
adc
inc
loope
mov
retf
jae
pop
sar
jno
and
pop
jmp
(bad)
pusha
mov
repnz
ins
xor
ins
div
(bad)
pop
cmp
ret
(bad)
repz
cmp
dec
xor
test
pandn
ds
popa
add
jmp
push
stos
cwde
aaa
nop
sub
ror
or
scas
dec
sub
mov
mov
jno
cs
leave
pop
out
adc
xchg
cmc
ins
and
cmc
fiadd
lock
bound
mov
push
fcomp
sti
aas
jecxz
call
ja
jnp
ret
cs
xor
hlt
fld
mov
cmps
and
xchg
popf
loopne
jmp
mov
pop
cmp
test
ret
mov
dec
outs
repnz
jb
fs
les
aam
lods
jns
scas
popa
or
mov
cdq
jns
ret
dec
xchg
jmp
mov
loop
push
jmp
xchg
(bad)
fild
repnz
loop
jnp
in
cwde
add
js
or
(bad)
out
stc
dec
jg
xor
and
mov
xor
cdq
aad
adc
cdq
in
fbstp
sahf
ret
int
ret
lea
add
in
(bad)
out
inc
cli
mov
inc
lock
jge
fnstcw
lds
push
xor
loop
je
mov
mov
add
out
add
out
push
push
movs
ins
jbe
loop
push
fdivr
sub
xlat
arpl
into
jle
int
popf
mov
push
mov
inc
lods
push
ret
mov
sub
xlat
in
push
adc
ja
and
je
jl
and
out
mov
jmp
imul
sar
arpl
rcl
jno
dec
idiv
inc
aas
mov
or
xchg
dec
out
mov
and
retf
and
dec
adc
pop
xchg
adc
jno
sbb
inc
mov
xor
pushf
pop
mov
push
shr
lea
das
test
push
jp
xor
dec
hlt
rol
mov
adc
jne
fmul
jp
int
cmp
popf
hlt
sbb
pop
aam
sbb
call
loopne
cmp
loopne
push
jp
push
xchg
mov
xor
ficom
dec
jle
add
jg
xchg
and
(bad)
fs
es
aam
xlat
das
cdq
stc
lea
adc
cli
(bad)
and
cmp
inc
and
add
mov
push
aad
fiadd
xor
mov
sti
xchg
es
int3
xchg
mov
inc
dec
mov
aam
fsubrp
ins
cdq
xor
popf
or
dec
jnp
dec
cmc
test
popf
jmp
jb
(bad)
adc
sbb
sti
inc
push
mov
outs
inc
or
ins
push
jb
or
adc
movs
jmp
jbe
addr16
repz
shld
movs
push
in
lock
adc
sub
xchg
xchg
std
mov
sti
and
pop
mov
pushf
inc
jp
jo
paddsb
sub
xchg
mov
in
call
(bad)
fdivr
pushf
in
scas
dec
xchg
push
idiv
imul
xchg
push
mov
pushf
call
lahf
cdq
mov
mov
iret
js
fild
enter
rol
aam
cmp
cmp
and
xor
sbb
fisttp
xor
call
call
ins
pop
ficomp
outs
ss
mov
or
pop
or
push
test
mov
sbb
mov
mov
rcr
popf
cmp
stos
add
rcl
mov
cs
cmp
xor
dec
jecxz
pop
fldcw
mov
lods
cdq
add
neg
shl
cld
ja
(bad)
aaa
mov
mov
dec
int3
mov
push
call
jae
rol
ja
cdq
hlt
mov
test
cmp
cdq
sbb
and
push
inc
push
jmp
adc
data16
mov
pop
cli
mov
test
cmps
inc
xchg
ins
fwait
xor
mov
shr
loope
pop
dec
call
dec
and
xchg
sahf
xchg
pop
cli
sbb
jmp
mov
imul
jb
cmps
mov
pop
pop
push
in
and
mul
fimul
mov
adc
mov
cwde
sar
and
mov
in
mov
mov
xlat
push
xchg
not
sub
pop
push
push
int
mov
mov
pop
sti
(bad)
fisttp
ret
outs
les
mov
and
out
shl
repz
sub
mov
jmp
mov
mov
aaa
push
stc
lods
or
int
int3
dec
jl
mov
push
inc
lahf
jns
or
lahf
or
fldcw
add
test
or
loopne
jne
jae
popf
in
sbb
in
shl
cmp
xchg
push
mov
mov
cmp
arpl
js
push
rol
icebp
inc
outs
cmp
test
dec
xchg
adc
pop
xor
outs
into
mov
mov
std
and
test
sub
aam
inc
pop
jp
inc
pop
addr16
push
mov
push
dec
int
mov
sbb
add
xchg
sub
(bad)
jmp
loop
cwde
mov
xchg
outs
add
shl
jle
(bad)
cli
mov
inc
push
mov
aad
cmp
cmp
repnz
adc
and
fsubp
mov
popa
pop
push
out
inc
fdiv
push
dec
mov
mov
test
inc
cmps
test
gs
test
aaa
add
jl
jecxz
xlat
shl
add
xchg
adc
sar
push
setns
push
int
jg
retf
ds
xchg
push
dec
inc
jbe
mov
fwait
mov
and
dec
fistp
fsub
jae
jnp
stc
adc
in
lods
ret
sbb
sub
into
fwait
les
dec
ret
push
mov
in
add
pop
lock
and
inc
arpl
mov
mov
cmp
inc
xchg
push
js
scas
shl
ins
dec
cmp
ins
push
jmp
loop
movs
jb
loop
dec
dec
xchg
in
hlt
fsub
test
pushf
or
(bad)
push
cmp
cmp
sahf
mov
(bad)
aam
jae
das
sahf
das
jmp
xor
out
clc
adc
gs
add
(bad)
and
es
adc
jmp
xor
push
xchg
jae
add
pop
mov
out
mov
jns
pop
inc
push
aaa
mov
fs
cmc
ins
bound
ds
add
and
lahf
push
pop
push
add
int
sub
mov
jp
popa
fld
rcr
cmc
das
push
jp
ror
mov
(bad)
int3
dec
adc
aas
cmp
je
movs
stos
and
mov
or
jbe
pop
inc
pop
and
cdq
and
jbe
and
push
repz
sub
ret
int
jmp
sub
jmp
adc
mov
addr16
add
adc
fisub
cmp
and
inc
and
sbb
mov
fdivr
cmp
nop
aaa
(bad)
xchg
lahf
call
mov
ret
inc
mov
mov
xor
clc
cmp
popa
lods
pop
sub
or
out
xor
lock
push
push
cmp
mov
aam
stos
xchg
xor
call
fbld
fwait
ins
mov
stos
fcomp
sbb
data16
retf
aaa
iret
(bad)
pop
mov
mov
test
or
dec
scas
fbld
and
pop
xor
jl
pop
mov
pop
and
or
lock
retf
inc
inc
mov
pusha
xor
and
fmul
movs
pop
xor
sbb
sti
lods
xchg
mov
inc
dec
adc
sti
xor
or
aaa
or
xor
mov
push
leave
into
shl
(bad)
fnstsw
inc
cmp
add
jbe
or
fcomi
and
xor
retf
ins
lods
pop
in
or
or
pusha
in
mul
xchg
mov
addr16
nop
dec
xor
push
jno
jo
cmp
loop
(bad)
jge
and
adc
xor
push
sar
hlt
jns
mov
inc
jo
lods
push
dec
int
lock
ins
dec
xor
sub
repz
out
out
and
xchg
dec
xchg
js
imul
xor
iret
cmp
shl
xlat
in
xlat
xchg
cmp
outs
sbb
push
push
lods
mov
outs
es
cmp
inc
pop
xchg
jmp
jge
ret
push
cdq
ds
test
mov
mov
(bad)
fmul
test
mov
pop
outs
enter
pop
pop
or
inc
or
jle
and
stc
sti
cmps
rcl
pop
sbb
jns
repnz
push
test
fsub
mov
in
jmp
fidiv
ja
jbe
pop
dec
xor
in
bound
sbb
sbb
cmp
inc
les
loop
iret
loope
cmp
mov
push
lock
xchg
sbb
fadd
xchg
imul
sub
sub
xchg
fcomp
push
dec
jo
pop
pop
xchg
push
jbe
fcmovu
repz
retf
sub
pop
loopne
test
daa
mov
dec
aad
and
mov
imul
fcmovnbe
mov
or
mov
sub
mov
xchg
sub
xchg
bound
mov
inc
daa
(bad)
mov
mov
jns
mov
hlt
int3
adc
sbb
sti
adc
and
inc
movs
dec
sbb
push
das
dec
cmps
repz
add
leave
pop
or
and
call
out
adc
aad
mov
or
cmc
xchg
sbb
push
sbb
stos
scas
inc
or
mov
fcomp
cwde
mov
and
xor
adc
test
ror
dec
sbb
fmul
push
sub
mov
xchg
inc
push
sbb
jl
inc
int3
xor
out
iret
test
aas
inc
int3
iret
cmp
or
mov
pop
js
mov
xchg
cmp
jo
push
das
cmp
xor
mov
inc
enter
pop
xor
out
mov
fstp
cld
aad
dec
fwait
scas
neg
nop
into
or
movs
and
add
ror
mov
rol
jo
sub
dec
ret
or
dec
adc
dec
jae
pop
push
xor
mov
mov
dec
cmp
in
cmp
push
pop
cmp
leave
cdq
gs
inc
mov
xor
and
adc
push
xor
out
jbe
sbb
nop
inc
push
sbb
movs
mov
int3
jnp
xchg
cmp
and
xlat
add
mov
xor
sub
dec
scas
cmps
and
pop
fmul
pusha
enter
cmp
stc
cmps
lods
mov
stc
mov
data16
jecxz
xchg
adc
pop
cmp
sar
inc
xor
add
in
sbb
xchg
shl
repz
(bad)
sub
gs
sbb
and
or
fistp
ins
dec
cmp
test
mov
out
cli
xbegin
ss
jae
sbb
jne
cmovae
xor
push
dec
inc
jbe
aas
or
loope
or
not
fist
movs
pop
cs
pop
jle
mov
out
add
and
sbb
scas
dec
test
shl
jle
stos
cmp
jle
xchg
and
cmp
xor
pop
out
aaa
inc
adc
cmp
jp
add
ret
add
jmp
push
jmp
adc
or
stc
enter
jns
pop
push
out
sub
and
and
push
mov
mov
sahf
ja
pop
repnz
push
fincstp
adc
loop
into
mov
jns
jp
adc
std
call
mov
and
mov
test
fmul
mov
arpl
cmc
dec
jmp
jl
push
xor
push
inc
dec
xor
outs
mov
call
jb
arpl
cdq
ss
rcr
dec
add
push
push
xchg
add
push
ins
push
or
cmc
or
adc
(bad)
std
xor
call
mov
or
mov
sub
pop
pop
mov
mov
in
mov
cdq
loopne
(bad)
cmps
pop
sbb
js
cdq
sub
push
xor
retf
mov
inc
mov
and
jmp
sbb
xchg
xor
lock
add
or
std
jl
or
add
ret
out
gs
cmp
sub
cmps
push
pushf
adc
or
adc
test
cmp
or
and
cmp
(bad)
pop
mov
adc
rcr
lahf
rol
jmp
lods
out
xor
aas
stos
(bad)
sbb
pop
and
enter
dec
mov
outs
ss
es
fwait
cmps
mov
mov
out
adc
push
cmp
ins
std
dec
scas
imul
imul
push
push
cmps
mov
and
adc
adc
xor
neg
dec
jmp
inc
xchg
adc
shl
icebp
cs
sbb
cmp
inc
xlat
repz
lods
icebp
mov
xchg
and
pop
in
or
mov
fdivr
mov
jo
pop
and
aad
mov
into
out
in
jmp
push
ss
sbb
aad
sbb
dec
fs
push
out
rol
rcl
add
scas
out
mov
push
adc
mov
push
xor
ja
loope
adc
cmc
inc
sahf
fcomp
int
mov
add
cmp
les
(bad)
jg
movs
stos
cmp
pop
add
scas
cli
inc
mov
xor
jl
shr
mov
xchg
sub
ret
pop
sub
mul
jae
in
sbb
xchg
pop
push
cmc
aam
and
mov
ss
sub
rol
mov
xor
mov
dec
in
lea
mov
adc
leave
jg
cmc
and
pop
add
mov
retf
sar
mov
pop
clc
sbb
ins
popa
mov
test
xor
add
xor
pop
dec
or
xor
cs
pop
cmp
call
sbb
cmps
jbe
arpl
aaa
outs
hlt
pop
(bad)
popa
out
mov
or
stos
pop
sbb
mov
bound
outs
mov
mov
dec
jge
mov
inc
daa
adc
mov
rol
xor
sub
add
mov
fild
fimul
jmp
iret
in
and
sbb
fsub
mov
test
repnz
pusha
xchg
shl
mov
stos
sub
test
nop
jle
add
leave
dec
and
popa
je
ss
add
and
push
mov
mov
pop
inc
mov
test
xchg
loope
dec
mov
nop
stos
jbe
cmp
and
das
movs
rcl
mov
dec
lock
jne
pop
lea
sbb
inc
out
(bad)
xchg
pop
aaa
dec
leave
adc
stos
mov
push
jae
push
mov
lods
rcl
pop
ret
mov
xor
and
ret
mov
push
icebp
pop
push
jmp
int3
sbb
sbb
jne
setp
pop
or
das
sbb
clc
cmp
sbb
call
and
sbb
push
setno
cmp
dec
cmp
mov
xor
test
lahf
push
dec
dec
add
not
pushf
(bad)
fst
fs
push
or
enter
adc
(bad)
xor
dec
stc
lds
jl
push
arpl
(bad)
int
call
movs
jo
dec
retf
xor
aaa
jb
add
in
push
sub
and
inc
push
cmp
adc
and
stos
dec
in
add
in
popa
jb
mov
sti
dec
aad
xchg
gs
nop
pop
jns
mov
or
call
push
jne
push
jmp
push
fs
iret
pop
icebp
xor
push
cmp
mov
lahf
ins
pusha
or
mov
cmps
sub
icebp
int
sahf
mov
mov
inc
ret
jg
xchg
or
cmp
repnz
xchg
xchg
mov
jb
mov
ficom
xor
rol
adc
das
cdq
mov
dec
sbb
nop
dec
dec
mov
js
lods
jmp
jno
or
sub
xchg
adc
enter
jae
sbb
and
stos
inc
in
push
pop
(bad)
xlat
clc
ret
mov
add
push
xchg
lods
pop
bound
xchg
push
xchg
loop
mov
cmp
dec
lea
jle
sbb
sbb
pop
xor
scas
std
out
(bad)
and
movs
sub
jbe
xchg
rcr
(bad)
lods
jae
ss
out
rcr
pop
mov
addr16
dec
retf
inc
adc
(bad)
movs
push
mov
pop
sbb
(bad)
test
out
mov
mov
inc
fld
mov
and
test
scas
nop
mov
push
inc
loopne
push
sub
mov
ins
mov
sahf
xchg
pop
and
dec
mov
inc
pop
xchg
cmp
mov
jl
sahf
sub
add
fs
xor
shl
das
mov
inc
movs
inc
retf
sbb
addr16
out
push
dec
mov
sbb
enter
out
inc
xchg
xchg
enter
rcl
cmp
int
scas
or
jo
sbb
adc
(bad)
in
fmul
and
mov
mov
mov
xchg
xchg
leave
push
sub
adc
xchg
test
test
sbb
iret
jle
dec
mov
out
pop
pop
into
retf
dec
adc
sti
pop
mov
(bad)
out
pop
mov
push
aaa
dec
(bad)
cmp
jmp
(bad)
mov
pop
imul
fcomp
std
adc
sbb
lock
movs
icebp
jp
cld
adc
sub
and
sub
cmp
xor
clc
call
push
shr
retf
sbb
cli
cmp
cdq
movs
ret
lods
jmp
repnz
std
add
sub
call
je
fdivr
fld
out
loop
lods
mov
adc
jmp
ret
push
push
jmp
push
lea
mov
dec
das
dec
movs
jbe
and
push
add
xor
scas
push
test
sub
je
push
dec
fcom
stc
sbb
sub
cmp
mov
pop
int
xchg
add
add
sti
retf
jg
mov
mov
cwde
lahf
xlat
mov
jl
imul
sbb
or
aam
mov
add
fcom
(bad)
xchg
out
push
ret
call
push
add
rol
pop
rcl
sti
sbb
out
fidiv
add
fsub
and
icebp
xchg
xchg
cmc
xor
loopne
jb
sub
frstor
call
push
cmps
add
aad
push
and
lods
jae
ds
(bad)
test
pusha
out
sahf
aaa
or
inc
mov
or
mov
std
out
shl
adc
mov
mov
pop
outs
inc
and
out
jnp
movs
cmp
aam
aaa
jno
sar
cwde
push
stc
jecxz
cmps
xor
mov
ds
retf
xchg
int3
mov
rol
cmp
sub
ja
push
sub
push
sub
call
sub
dec
inc
retf
scas
xchg
or
dec
sti
out
push
add
fild
stc
(bad)
retf
pop
ret
icebp
loope
jnp
dec
pop
out
scas
stc
mov
mov
test
lods
pop
movs
jp
jnp
ret
pop
rol
fcomp
mov
sti
xrelease
mov
pop
out
iret
and
push
pop
test
fnsave
and
mov
pushf
inc
mov
push
pop
sti
test
sub
jmp
cmp
out
rcr
jmp
sbb
sbb
and
fnstsw
xchg
pop
aaa
shr
adc
pop
in
ds
cli
dec
in
inc
ret
rcl
clc
mov
lahf
adc
mov
fdiv
cmps
sar
sub
mov
jl
cmp
dec
inc
das
mov
(bad)
daa
(bad)
jns
out
jp
(bad)
push
fcom
shl
dec
ins
add
sbb
mov
test
bnd
pop
push
xchg
scas
shl
imul
fwait
pop
xor
out
sub
test
int3
jne
scas
leave
scas
push
fwait
jmp
pop
in
pop
inc
in
(bad)
mov
(bad)
mov
pop
dec
fcom
(bad)
sub
leave
ds
mov
mov
mov
jmp
stos
mov
aaa
outs
or
cmp
cs
inc
pushf
sbb
pop
sbb
dec
loopne
shr
bound
sbb
lahf
add
cld
xor
aam
sbb
pop
xchg
nop
or
xchg
mov
xchg
jns
and
in
inc
xchg
fsub
xchg
xchg
sbb
minps
pop
repz
sti
pop
xchg
jnp
cs
loop
mov
xchg
fild
dec
movs
xchg
jo
aas
sbb
mov
(bad)
xor
aad
lock
xchg
add
jne
fst
push
arpl
mov
movs
mov
fucomi
mov
pop
xchg
jg
xchg
stc
cmc
jmp
push
mov
ds
aaa
enter
xchg
lea
fcmovbe
mov
adc
cmp
stc
mov
loop
xor
jbe
sub
inc
cmp
imul
xchg
aaa
sbb
mov
(bad)
loope
std
xchg
adc
cmp
dec
cmp
and
outs
and
movs
mov
push
fimul
mov
jns
pusha
mov
sbb
xchg
vmwrite
int
mov
pop
jb
jecxz
jl
js
call
test
lea
inc
cmp
mov
jmp
mov
fistp
xor
push
fstp
xor
addr16
aas
not
dec
mov
test
sub
inc
sub
mov
movs
and
jl
xor
xor
bound
inc
call
into
inc
push
or
dec
enter
inc
ror
ja
push
cmps
jo
ja
xor
pop
jbe
dec
jl
ror
and
dec
push
fisub
adc
les
inc
fistp
cmp
inc
std
pop
movs
cld
push
movq
fwait
pop
scas
inc
mov
push
sub
shl
push
add
mov
int3
les
jb
fld
shl
cmp
cld
push
adc
(bad)
mov
lahf
mov
pop
adc
sbb
cli
lods
mov
test
add
sbb
(bad)
in
(bad)
fbld
xchg
dec
mov
xchg
pop
int
push
adc
in
or
icebp
push
lock
in
sub
ret
pop
sbb
mov
adc
and
movs
push
adc
lods
repz
adc
sbb
inc
pop
ror
outs
out
and
push
adc
push
jmp
lods
fs
mov
jns
aas
jo
sub
iret
and
pushf
inc
xor
sbb
fs
jb
shr
push
xor
cmp
int
push
mov
and
push
dec
ins
dec
xchg
into
lock
in
mov
jbe
add
addr16
les
ja
test
hlt
popf
xor
enter
mov
test
and
(bad)
mul
cmps
add
cmps
leave
pop
and
ror
cmp
lds
xchg
je
scas
int
imul
in
pcmpgtb
stos
mov
repz
jmp
mov
add
mov
shl
mov
sub
(bad)
push
xchg
inc
scas
(bad)
scas
inc
or
mov
in
iret
mov
xchg
inc
push
inc
and
sub
inc
and
outs
loop
in
push
neg
inc
ins
mov
cmp
dec
repnz
push
fidiv
outs
jns
ds
test
dec
sub
mov
xchg
xor
cmp
aas
inc
sub
mov
cwde
sbb
and
fs
(bad)
and
(bad)
lods
(bad)
dec
je
fs
xor
(bad)
dec
retf
std
inc
sub
rol
mul
cli
shr
in
lock
icebp
pop
cmp
adc
jo
mov
retf
aam
add
fistp
add
(bad)
adc
rol
or
and
or
fdivr
push
leave
fisttp
sub
and
pop
mov
sbb
mov
shl
xor
aaa
ins
mov
outs
cmp
sbb
jg
out
stc
pop
sub
in
xor
fwait
add
aad
mov
mov
cld
jl
inc
adc
dec
shl
aas
sub
es
int3
outs
push
retf
and
adc
pop
push
jmp
sbb
cld
xor
scas
outs
(bad)
adc
push
repz
and
cmp
fild
push
fild
push
add
mov
inc
add
pop
push
jle
pop
imul
das
pop
bound
aaa
xor
out
test
or
stos
xchg
mov
mov
shl
xchg
stos
push
add
lahf
leave
inc
dec
cmp
mov
xor
rcl
sub
add
pop
mov
xor
and
xor
cwde
push
(bad)
cmc
add
jp
into
add
jg
mov
xchg
mov
dec
push
cmp
mov
jae
shl
and
sub
outs
icebp
arpl
imul
push
repnz
fld
add
and
loopne
cmp
or
mov
jmp
fisttp
mul
xlat
outs
push
mov
daa
test
xchg
sbb
jo
daa
js
fst
mov
add
pop
jnp
and
xchg
ins
clc
mov
imul
dec
mov
popf
xchg
mov
pop
adc
pusha
retf
aas
pop
mov
shl
ret
xor
jne
imul
lock
dec
jno
or
push
loop
(bad)
jmp
popa
int
or
popf
inc
adc
fisttp
shl
out
add
pop
mov
inc
mov
fldenv
mov
sahf
fs
sub
int
test
shl
fstp
adc
push
or
xchg
jle
mov
movs
adc
pusha
xchg
jge
mov
aad
push
(bad)
dec
dec
xor
cs
push
mov
fdivr
or
and
jmp
test
addr16
pop
or
ss
xchg
mov
xor
mov
enter
xchg
pusha
pop
xchg
fisub
test
mov
xchg
pop
add
adc
je
inc
sbb
inc
stos
sbb
and
aaa
dec
and
(bad)
shr
lahf
pop
ins
pop
or
inc
cmp
push
fs
jecxz
cmp
xchg
in
push
shl
jmp
sbb
pandn
sub
adc
push
dec
mov
int3
jmp
int
or
stos
inc
(bad)
mov
add
sti
dec
js
xchg
fwait
neg
scas
jns
test
out
adc
or
sub
cmp
lahf
xchg
xor
push
fbstp
push
jge
pop
mov
sub
call
inc
inc
aad
daa
sbb
or
repnz
mov
rol
mov
and
sti
rol
push
test
scas
xlat
sbb
jnp
je
cmp
cwde
lea
stos
mov
sub
test
xchg
fwait
inc
jp
out
call
faddp
mov
inc
jmp
popa
xor
les
push
xchg
cmp
add
(bad)
xlat
inc
pop
fnstcw
stos
ss
enter
xchg
aaa
sbb
mov
test
or
cmp
retf
das
in
fstp
gs
dec
push
leave
in
pop
add
pop
push
fild
ficom
pop
adc
mov
aaa
cmp
cmp
mov
sub
mov
and
sbb
xchg
ja
jmp
xchg
jg
ret
xchg
sahf
ins
in
fsub
fdivr
jle
out
imul
inc
adc
add
mov
into
mov
fidiv
int3
sbb
add
mov
hlt
mov
mov
sti
retf
inc
popf
mov
pop
ins
adc
cmc
neg
lea
mov
mov
pop
mov
stc
adc
xchg
mov
idiv
rcr
cmc
mov
and
jge
adc
fdiv
jecxz
add
inc
movs
dec
rcl
push
fnsave
adc
mov
rcl
jmp
pop
push
jae
dec
inc
inc
leave
jmp
xor
test
fnstcw
pop
push
hlt
pop
dec
addr16
mov
ret
add
mov
xor
or
(bad)
jo
outs
int
mov
outs
xchg
ja
pop
adc
jg
ret
hlt
mov
adc
stc
retf
xchg
cmp
repz
loopne
js
enter
pop
retf
mov
mov
stos
pushf
xchg
mov
test
jmp
scas
fwait
(bad)
scas
pop
enter
and
sub
push
push
fistp
push
mov
fcomp
(bad)
sub
dec
pop
lock
pop
cmp
stos
lds
nop
clc
call
add
sub
out
sahf
adc
cld
add
xor
test
icebp
push
sahf
push
adc
loope
icebp
scas
xor
ja
cld
scas
mov
adc
adc
ins
and
adc
inc
rol
mov
cmp
push
mov
inc
call
sub
stc
sub
add
bound
add
adc
pushf
cmp
movmskps
jmp
lock
test
or
push
push
and
ins
and
xchg
dec
retf
or
retf
fstp
pop
sub
mov
scas
mov
pop
mov
mov
stos
jmp
cmp
xchg
pop
xor
shr
(bad)
dec
mov
lds
xchg
pusha
rcr
pusha
mov
mov
loope
in
inc
sahf
sbb
das
mov
dec
and
loope
ror
push
cmp
pushf
(bad)
pop
xchg
mov
(bad)
fld
sbb
mov
ins
inc
push
ja
xchg
imul
push
imul
ins
jae
jp
nop
jns
fisttp
sbb
sar
and
mov
inc
mov
xchg
xor
in
jecxz
sahf
fld
je
dec
ret
pop
pop
and
lahf
sub
push
mov
ins
dec
cdq
movs
ins
and
mov
mov
imul
cmps
pop
aas
popw
mov
pop
out
mov
rcr
clc
sub
sub
fnsave
push
sar
idiv
mov
(bad)
jno
sub
cmp
mov
test
mov
xadd
xor
push
cmc
mov
leave
sti
out
mov
pop
mov
and
push
cwde
cmp
ret
ds
daa
fs
into
leave
daa
call
or
push
lds
aam
aam
imul
xlat
pop
add
clc
out
mov
clc
cmp
popf
sbb
rol
lods
in
xor
inc
loop
push
add
jge
sahf
cmp
push
je
outs
add
push
and
cwde
cmp
in
cmp
jmp
mov
fdivr
aas
dec
in
cwde
mov
push
test
sahf
loope
cld
cmp
sahf
xchg
in
mov
sub
rcr
sbb
add
iret
xchg
sbb
jne
out
sti
mov
and
sbb
and
jp
dec
mov
jb
or
jno
movs
mov
and
mov
pop
out
shl
pop
retf
add
dec
xor
push
push
mov
call
mov
cs
sbb
daa
js
popf
out
pop
mov
pop
mov
or
out
loop
xchg
mov
xchg
lods
xor
bound
dec
inc
jne
into
ins
xchg
xor
jl
cli
jl
mov
jb
add
push
xchg
ror
fnsave
push
out
(bad)
bound
inc
dec
ret
pop
sbb
xor
push
push
sbb
mov
dec
lods
adc
lock
cmp
or
pop
jbe
jno
inc
iret
(bad)
adc
lods
cmp
pop
jb
into
add
(bad)
pop
pop
in
pop
inc
dec
mov
fisttp
mov
or
mov
adc
fdiv
les
mov
out
mov
mov
cmc
pop
push
push
mov
stos
rol
mov
jle
outs
fcmovu
out
inc
mov
pop
addr16
cs
dec
pop
mov
mov
in
mov
push
pop
xchg
movs
xchg
xchg
sar
sub
cs
push
popa
add
cmps
cdq
inc
loope
inc
cmp
call
ret
xchg
jo
inc
cmp
(bad)
(bad)
cmc
loop
cmps
push
or
hlt
js
mov
ds
xor
cld
pop
movs
popf
jns
push
iret
add
cmp
dec
add
lods
(bad)
inc
ror
jno
jecxz
jge
lods
arpl
xor
aaa
outs
stos
mov
lods
mov
sub
scas
enter
inc
or
and
or
shl
xchg
div
inc
and
aaa
mov
sti
pop
cdq
lds
pop
iret
ins
inc
(bad)
std
or
lea
(bad)
adc
mov
cmp
jns
clc
imul
out
ja
mov
mov
mov
(bad)
mov
std
push
push
and
push
mov
xlat
fwait
adc
push
dec
or
psrlw
mov
xchg
cmp
xchg
mov
push
repnz
(bad)
loope
xlat
sbb
add
movs
clc
test
popf
push
jmp
aaa
mov
stos
in
loop
dec
(bad)
js
jle
test
and
push
fstp
push
stos
test
mov
outs
test
stc
(bad)
jb
shl
pop
or
jne
test
loope
xlat
xchg
sbb
push
mov
jmp
mov
xor
and
jle
push
push
jno
sbb
aaa
in
mul
inc
sub
imul
sub
adc
shl
add
sub
repnz
lds
jle
in
fild
dec
cld
jbe
add
xor
gs
pop
mov
jb
push
push
shr
cmc
cmp
mov
ret
mov
ret
call
call
mov
cmp
xor
stc
dec
inc
adc
mov
pop
ins
movs
jge
inc
or
out
lahf
mov
mov
push
xor
in
test
mov
sbb
fs
pusha
adc
fabs
movs
push
sbb
pop
jns
pop
jns
test
push
pusha
test
in
dec
push
mov
push
push
dec
mov
(bad)
icebp
xchg
and
sbb
jge
sbb
push
and
loope
add
push
mov
dec
retf
inc
jl
mov
lock
pop
inc
fs
or
pop
mov
xor
ficomp
mov
jne
mov
bound
dec
push
cmp
cmp
mov
or
mov
xor
fadd
sub
and
jbe
outs
and
xor
pop
(bad)
neg
mov
and
test
or
imul
xor
lahf
scas
scas
jbe
add
lds
adc
das
out
xor
pop
xlat
sub
fdivr
mov
nop
cmp
icebp
mov
outs
cmp
addr16
mov
bound
pop
jnp
ret
sub
mov
loopne
xchg
pusha
xchg
jno
cmp
push
sbb
mov
mov
scas
sub
lds
cmp
sti
jg
ja
or
sbb
ret
jecxz
aam
dec
adc
cmp
push
ja
in
call
in
mov
or
xor
lock
test
inc
das
push
es
movs
daa
inc
mov
hlt
and
dec
push
or
add
(bad)
fbld
cli
cmc
inc
jmp
in
dec
add
or
push
and
ucomiss
ins
outs
push
cld
sbb
ins
dec
sar
push
mov
pop
inc
fstp
enter
div
jbe
cmp
xor
rol
ins
scas
fwait
(bad)
xchg
jnp
cmp
sub
cmps
xchg
(bad)
push
pop
mov
inc
out
fisttp
xor
mov
sub
loopne
push
test
aaa
and
jmp
lahf
sbb
xor
fcomp
adc
cmps
xchg
pop
test
adc
pop
mov
(bad)
(bad)
xchg
daa
(bad)
mov
jae
adc
adc
xor
mov
jmp
lea
ja
jmp
inc
aaa
aaa
iret
sbb
jb
fs
inc
adc
add
mov
mov
pop
lds
adc
adc
jecxz
cmp
or
out
or
jbe
retf
js
push
into
dec
xchg
enter
jae
mov
xchg
popf
push
pop
add
add
and
dec
loope
xchg
inc
pop
push
sub
repnz
rol
out
mov
mov
into
aad
sub
cmpxchg
dec
dec
fld
ficomp
inc
adc
xchg
pop
leave
inc
test
mov
jge
scas
cmps
mov
imul
std
sahf
(bad)
mov
mov
mov
xchg
mov
xor
out
dec
inc
shr
dec
lahf
pop
outs
push
sbb
and
ja
add
imul
sti
jmp
lods
pop
aas
enter
adc
scas
popa
ret
mov
xchg
call
mov
movs
(bad)
aaa
lds
dec
or
div
push
sbb
outs
xchg
(bad)
xlat
jecxz
ins
fs
mov
lds
sti
es
pop
lea
dec
fs
idiv
cs
cdq
adc
xor
or
mov
mov
aam
cmp
jne
fld
push
inc
inc
mov
pop
xor
pop
jmp
adc
sbb
pop
xor
sub
adc
push
push
aad
mov
mov
pop
aas
xchg
fnop
mov
pop
or
scas
pop
add
sbb
inc
jbe
push
inc
or
test
ficomp
imul
cli
push
inc
pop
mov
loope
js
scas
(bad)
or
test
lds
and
push
sbb
mov
ds
cs
das
xor
fld
fidiv
adc
sahf
jae
sub
out
dec
xor
push
xor
sahf
sub
sub
lods
inc
and
dec
mov
movs
arpl
out
ror
ins
mov
push
dec
mov
stc
jns
movs
es
lods
addr16
mov
inc
gs
xor
sbb
adc
mov
fiadd
and
jmp
sar
xor
push
icebp
jb
inc
fimul
mov
xor
or
outs
arpl
scas
adc
idiv
inc
jp
adc
fnstenv
(bad)
pop
mov
sbb
jp
loopne
dec
imul
pushf
xchg
retf
and
jecxz
mov
(bad)
aas
dec
xchg
xlat
repz
dec
retf
xlat
iret
jecxz
xor
xchg
xor
cld
hlt
push
mov
mov
xchg
(bad)
stos
and
clc
fldcw
pop
adc
mov
push
jns
adc
arpl
lds
or
pop
mov
jl
sar
scas
or
push
mov
inc
mov
mov
jae
dec
aam
imul
mov
dec
push
fadd
sbb
sbb
mov
fcmovne
xor
jmp
add
movs
sbb
jmp
jl
icebp
js
call
or
adc
loope
cmp
push
sub
icebp
jb
mov
mov
xchg
shr
xchg
xor
cwde
ins
aaa
mov
ret
in
test
xchg
pop
retf
push
mov
loop
and
mov
inc
movs
mov
cmp
in
ja
fnstenv
lods
adc
or
fdiv
iret
repz
jb
mov
sahf
ret
xchg
pop
jb
fist
sbb
add
movs
in
pop
fs
sbb
popf
das
adc
out
call
mov
jp
dec
cmp
and
dec
mov
aaa
cmp
cmp
pop
or
push
dec
mov
xchg
dec
sbb
sub
dec
fild
cmp
xor
out
cmp
jne
movs
push
mul
stos
sub
inc
pushf
and
add
cmps
test
sub
inc
ins
das
and
(bad)
data16
mov
mov
les
xor
sbb
push
ds
push
rcl
adc
leave
stc
push
dec
adc
pop
dec
mov
push
dec
mov
pusha
cdq
sub
scas
call
and
mov
ds
int3
(bad)
ss
and
movs
jae
xchg
jp
(bad)
int3
dec
inc
pop
cli
fisub
sub
jp
test
js
movs
or
rcr
or
ja
addr16
fidivr
cmp
out
dec
inc
test
daa
jmp
out
test
cli
in
mov
sbb
and
mov
jne
fidivr
jns
xor
popf
js
xor
std
sbb
test
mov
movs
sahf
fwait
test
shl
adc
fwait
icebp
dec
bound
repnz
(bad)
xchg
jmp
xor
adc
(bad)
push
outs
mov
out
pop
pop
or
(bad)
mov
jmp
bound
stc
xor
xor
xor
jge
xor
or
mov
(bad)
lods
cmps
inc
in
dec
ss
fwait
pop
dec
and
and
pop
fs
outs
stos
ret
stos
push
or
cmc
xchg
push
cs
mov
dec
push
or
fistp
xor
sbb
mov
inc
dec
push
push
dec
lock
mov
repnz
sub
xor
(bad)
mov
mov
xor
clc
sbb
ror
hlt
pop
int
adc
push
sbb
mov
(bad)
ret
jecxz
jmp
shr
dec
xchg
xchg
jb
retf
loope
mov
call
sbb
hlt
sbb
inc
(bad)
(bad)
pop
jae
pushf
loopne
mov
adc
mov
add
sub
mov
dec
sub
call
add
ds
sar
pop
mov
jo
xchg
xchg
mul
or
fwait
je
mov
xchg
mov
pop
xchg
dec
icebp
push
and
fild
jne
inc
pop
dec
xchg
stc
sub
add
(bad)
push
cwde
push
inc
cmps
add
sti
popf
fld
push
mov
mov
or
dec
test
adc
cmp
mov
mov
mov
push
pop
enter
loopne
dec
scas
mov
mov
mov
cmc
movs
cmp
cmp
pop
stos
or
sub
fwait
mov
fbstp
sbb
cmp
mov
out
(bad)
repz
and
cs
out
mov
adc
inc
test
mov
mov
ins
cmc
in
xor
(bad)
aaa
xor
mov
adc
ins
and
jo
dec
xchg
fistp
not
hlt
xor
cdq
dec
push
add
cmc
mov
lods
fild
xchg
scas
cmp
dec
mov
fucomi
js
movs
lods
jbe
fcomp
fist
xchg
push
push
ins
lea
sahf
fwait
dec
and
mov
sub
jge
mov
bound
hlt
call
pop
xchg
outs
stos
dec
ins
jg
mov
sub
push
rcl
and
mov
inc
(bad)
retf
xor
in
mov
dec
sub
pop
out
ss
ins
in
or
push
sbb
inc
js
sbb
mov
or
xchg
test
call
cmc
push
pop
cmp
shl
out
sbb
(bad)
repnz
stc
push
dec
ret
pop
dec
pop
fisubr
add
mov
and
sbb
stc
adc
hlt
mul
sub
push
fcmovnb
fbstp
popf
jbe
scas
mov
push
inc
inc
fimul
sbb
out
adc
sbb
push
mov
jecxz
test
sub
inc
lahf
lds
and
xor
daa
sbb
and
sbb
outs
(bad)
dec
jmp
dec
dec
lahf
or
(bad)
lahf
repnz
ins
push
ror
add
sbb
jp
je
pushf
nop
movs
int3
mov
into
repz
xor
sub
(bad)
fisttp
xor
mov
je
fisttp
or
sahf
jae
sahf
shl
gs
push
and
dec
sbb
sbb
cmps
hlt
shl
mov
jbe
jb
aad
add
xchg
retf
push
hlt
stc
inc
jmp
in
imul
mov
out
fdivr
std
test
inc
enter
pop
test
add
cmp
dec
lahf
push
dec
cmp
inc
pusha
sbb
scas
xor
ins
pop
mov
gs
in
hlt
ja
jb
cmp
mov
fdivr
and
jl
mov
shr
mov
add
mov
inc
mov
in
loope
xor
xor
lea
call
lock
mov
mov
pusha
daa
test
scas
mov
mov
das
jp
xchg
jne
adc
enter
adc
mov
sti
ret
outs
mov
outs
sahf
lock
pop
ret
jp
sbb
push
jl
std
js
or
div
aaa
and
stos
mov
pop
out
adc
stos
gs
in
or
or
jb
sub
out
js
hlt
scas
or
fs
shl
fsubp
xchg
scas
inc
and
pop
jne
mov
in
sbb
movs
ins
add
int
xchg
mov
cmp
sbb
sbb
icebp
adc
mov
int
scas
pop
and
iret
cld
bound
fs
std
test
xchg
lods
int
add
int
lds
call
jns
ins
es
mov
pop
push
enter
call
pop
inc
jg
and
scas
mov
rcl
push
clc
push
cmps
in
out
stc
mov
out
mov
fist
movs
ins
mul
les
push
cdq
xchg
xchg
push
movs
push
jne
or
shr
or
lock
icebp
stos
adc
jne
or
and
dec
add
push
jb
or
outs
mov
ror
shl
jae
xlat
or
push
out
and
aad
(bad)
ret
push
dec
popf
pop
cmp
cdq
mov
in
pop
mov
leave
dec
fimul
(bad)
mov
sub
push
push
add
shl
(bad)
mov
mov
or
test
cmp
xlat
ja
clc
cs
add
out
adc
ds
pushf
test
pop
ret
(bad)
loop
inc
jmp
inc
arpl
test
jmp
xchg
call
lock
jne
sub
movs
add
xor
pop
mov
bnd
inc
mov
jp
(bad)
cld
add
rcl
gs
xor
pop
xchg
jo
add
sbb
xor
mov
jmp
lea
daa
inc
cmp
sub
out
sub
bound
and
mov
sahf
pop
js
lock
in
push
scas
xor
ja
xchg
daa
inc
loope
jo
add
gs
push
xor
stc
fbstp
(bad)
stos
leave
mov
adc
outs
and
out
pop
aas
mov
ds
and
dec
jp
lods
lods
movs
scas
adc
fadd
ret
mov
sbb
mov
inc
pusha
cmps
inc
neg
scas
rcr
cmc
(bad)
dec
jg
mov
repnz
mov
dec
dec
imul
les
push
test
hlt
add
rol
sbb
mov
in
push
paddusw
and
cmp
and
mov
(bad)
jmp
in
cdq
out
leave
pop
jge
xchg
inc
cmp
in
xor
dec
sahf
loop
sbb
(bad)
iret
int3
cmp
push
in
push
pop
pop
jno
sbb
ss
add
dec
jg
xchg
mov
inc
mov
gs
ret
jg
cdq
inc
push
ror
(bad)
(bad)
(bad)
xchg
xor
sub
add
mov
xor
jb
retf
test
in
cmps
sbb
ins
adc
mov
mov
sub
mov
enter
enter
dec
lahf
call
ins
cdq
mov
(bad)
push
jns
mov
stc
fdiv
loop
and
(bad)
mov
cmp
out
jbe
mov
pop
nop
shl
xlat
or
inc
(bad)
sbb
cmp
jnp
iret
cmp
push
ss
xchg
inc
xor
ret
jle
rcr
icebp
in
test
push
push
test
pop
xor
mov
stc
int3
cmp
sub
mov
pusha
stc
inc
in
rol
aas
and
retf
mov
mov
popa
mov
mov
xor
sub
shl
sti
cli
in
inc
push
mov
cmps
xor
add
mov
xlat
inc
jge
inc
hlt
push
ss
arpl
mov
push
mov
int
pop
ror
pop
ficom
sub
jmp
and
les
xchg
lahf
add
add
mov
cmp
into
movs
lods
mov
xchg
imul
push
push
ins
pop
dec
or
xor
pop
or
adc
mov
data16
mov
nop
jecxz
js
mov
mov
test
imul
cmp
cmp
mov
(bad)
daa
shr
aaa
pop
adc
retf
pop
iret
ds
adc
sti
(bad)
hlt
inc
xor
mov
movs
sub
call
dec
pop
sbb
xchg
and
nop
dec
pop
lods
cmp
sbb
pop
stos
xor
xor
leave
sbb
xor
icebp
jmp
xor
jge
xchg
push
jecxz
out
stc
ret
fcmovnb
inc
std
cmp
daa
loope
(bad)
jle
push
pop
inc
cmps
adc
xor
cmp
mov
fisubr
jbe
xchg
cmps
xchg
fild
sahf
mov
mov
pop
cs
out
test
and
push
bound
fcomp
cld
dec
adc
xchg
aas
jo
popa
sub
fidiv
push
ror
call
xor
in
out
xchg
add
repnz
and
in
xchg
les
fstp
mov
sub
loopne
cmps
xor
sbb
push
push
or
jne
mov
rol
loop
dec
jle
movs
dec
popa
mov
stos
shl
xchg
push
(bad)
dec
lods
dec
test
imul
(bad)
stc
imul
or
neg
aaa
xor
jmp
cmp
inc
xchg
fdiv
xlat
call
sub
ror
jecxz
lock
repnz
hlt
xchg
loope
ins
mov
aaa
mov
or
sbb
add
out
jbe
push
sti
ins
fcmovne
mov
jne
int
in
bound
popa
add
and
xor
ins
sub
push
pop
push
dec
inc
imul
xchg
cmp
or
pushf
mov
imul
cwde
test
movs
pop
mov
shr
and
or
scas
push
dec
test
xor
aas
push
jnp
pop
out
(bad)
loop
fcom
adc
scas
add
or
xchg
aad
mov
cmp
dec
loope
hlt
add
xchg
aad
add
mov
lods
mov
ins
mov
and
fnstenv
add
das
aad
mov
pushf
push
mov
(bad)
shl
cs
dec
addr16
sub
cmp
xor
dec
out
push
ins
arpl
cmp
pop
fwait
xchg
push
into
inc
inc
mov
(bad)
test
mov
(bad)
push
adc
adc
and
sbb
xlat
(bad)
into
jmp
push
mov
ja
cli
xchg
sub
movs
sub
mov
inc
iret
xchg
(bad)
in
mov
xor
mul
in
cmp
mov
stc
div
push
xchg
popa
adc
(bad)
enter
push
int3
add
and
cmc
das
xor
mov
mov
ins
movs
inc
sbb
mov
and
scas
sti
jg
xor
repz
(bad)
mov
ds
sbb
or
pushf
das
add
adc
pop
push
push
rcr
mov
sub
ss
ins
xor
jge
push
dec
mov
xor
ja
(bad)
push
sbb
dec
cmp
add
ins
push
add
dec
add
sbb
movs
sbb
sbb
mov
add
test
movs
dec
dec
inc
sbb
push
pushf
and
sbb
xchg
dec
xor
inc
jmp
inc
test
jne
add
aam
fild
pop
std
sbb
jae
xchg
xchg
or
pop
test
jns
cmp
lods
dec
arpl
mov
ss
or
mov
add
jbe
leave
and
clc
retf
out
ins
test
push
mov
xchg
xor
and
push
pop
jg
mov
into
test
xchg
mov
inc
retf
pop
mov
jecxz
sbb
outs
cmc
push
inc
loope
xlat
and
cld
cmp
in
psubq
cli
xchg
cs
push
xchg
aad
mov
fist
or
mov
ret
out
dec
add
inc
and
inc
rcr
cld
out
je
dec
cmc
test
bnd
or
and
addr16
in
dec
out
push
sub
push
xchg
xor
sub
pusha
outs
fiadd
idiv
fild
sar
xchg
rol
push
in
fdiv
mov
mov
xor
imul
cmp
fwait
push
inc
(bad)
sti
in
loop
(bad)
sti
and
add
imul
push
movs
mov
mov
sahf
push
xchg
sbb
pop
out
and
test
inc
push
mov
cli
lods
stc
test
in
push
stc
mov
out
aam
inc
pop
mov
push
gs
cld
mov
jg
xor
cdq
scas
sbb
aas
sbb
int
jo
clc
mov
dec
fadd
push
and
sub
sub
dec
fwait
(bad)
aam
pop
scas
and
call
add
push
stc
jmp
xchg
lods
xor
fs
lods
fs
mov
mov
jecxz
test
sub
sub
stos
std
out
outs
loopne
mov
(bad)
xchg
pop
in
iret
inc
inc
pop
loopne
lods
and
mov
push
mov
rcl
cmp
mov
xchg
out
cli
mov
add
shr
lock
cmp
iret
xchg
into
in
dec
lea
loop
xor
lahf
(bad)
aas
pushf
sub
xor
adc
cmc
pop
xchg
adc
pop
idiv
push
xor
out
nop
inc
xor
sub
or
pop
fsincos
and
shr
std
sub
(bad)
stc
sub
data16
iret
fwait
dec
or
ror
ror
cli
loopne
cmc
shl
adc
or
cmp
(bad)
mov
cmc
fs
aaa
push
push
das
mov
stos
ins
rcl
data16
(bad)
aaa
nop
jecxz
and
inc
push
js
movs
stos
enter
neg
cwde
xor
pop
ins
iret
or
jns
pop
xor
mov
cli
movs
and
pusha
das
mov
shl
sbb
cmps
daa
cmc
sahf
xchg
(bad)
dec
in
inc
popf
push
addr16
repnz
rcl
lds
out
push
or
fnstcw
push
jmp
fwait
mov
jecxz
retf
int3
lds
mov
ficom
les
cmp
sub
sbb
pop
fidiv
fs
mov
sub
add
dec
sbb
cmp
lahf
out
js
dec
or
mov
xchg
sbb
inc
retf
(bad)
push
xchg
nop
loop
xor
leave
frstor
stc
stos
dec
xor
test
push
and
les
push
inc
pop
inc
fs
mov
cs
add
xchg
jno
dec
mov
adc
xor
repnz
xlat
adc
xchg
in
pusha
retf
jns
imul
test
mov
push
jg
push
das
jmp
cmp
push
nop
mov
adc
mov
sub
popa
les
out
nop
sbb
dec
ficomp
mov
mov
es
loop
repz
sahf
sub
xchg
cmp
lods
into
popa
in
aam
dec
cmp
dec
inc
sub
popa
add
sbb
mov
jbe
in
sbb
xchg
fdiv
(bad)
push
xchg
stc
sahf
mov
xchg
rol
xor
inc
lods
xchg
mov
dec
lock
dec
repnz
pop
imul
cmp
push
jb
push
sub
add
push
stos
cmc
out
mov
mov
je
jmp
popf
sub
and
and
mov
ret
push
cmps
mov
outs
inc
xchg
call
lds
mov
repz
mov
scas
stc
ja
les
popa
push
imul
aaa
dec
or
(bad)
mov
mov
ret
ret
in
stos
mov
lea
cli
fnstenv
ins
xor
pop
mov
in
sub
xlat
pop
dec
inc
pushf
stos
sub
lods
push
ins
adc
fucomip
cdq
sub
adc
(bad)
pop
sbb
adc
push
xlat
lahf
in
je
mov
mov
lock
dec
enter
mov
sbb
xor
mov
and
(bad)
aam
sar
lea
(bad)
dec
adc
sar
sti
or
scas
dec
fs
nop
lahf
xor
sbb
jmp
sbb
popf
popa
dec
cli
inc
ins
(bad)
push
lock
adc
dec
jns
sbb
inc
mov
xchg
jns
pop
jmp
loopne
stc
dec
cdq
(bad)
fbstp
inc
adc
or
push
and
loop
fchs
push
(bad)
out
xor
fstp
rcr
out
ret
popa
xor
out
fisub
fsubr
mov
iret
stos
mov
in
xlat
out
mov
retf
push
cmp
sbb
pushf
push
dec
shl
cmp
bound
cmps
iret
or
pop
and
aad
adc
mov
pop
jne
je
mov
movs
push
xor
push
cdq
addr16
adc
idiv
sbb
add
ja
mov
push
push
add
xor
mov
fcomi
xchg
or
or
(bad)
idiv
mov
jbe
jge
cmp
mov
xchg
repnz
jbe
cmps
fstp
mov
or
into
into
nop
pop
or
gs
mov
pop
aad
add
push
test
xchg
mov
jmp
int
movs
es
xor
ror
outs
pusha
push
call
call
pop
sbb
push
cs
jle
or
pushf
imul
or
mov
jl
imul
pop
jmp
ins
pop
fimul
mov
aad
dec
xor
test
(bad)
imul
mov
xchg
pop
dec
mov
mov
sub
lods
retf
and
mov
xchg
xor
adc
dec
jb
dec
add
aas
pop
cmp
add
scas
or
adc
cmp
in
test
(bad)
mov
sbb
cmp
test
into
fcom
ins
adc
inc
rcl
imul
out
xlat
xor
rol
push
js
xor
xchg
adc
xchg
sbb
loopne
aas
mov
jb
jge
movs
retf
popa
mov
repz
mul
sahf
hlt
pop
sub
cdq
es
or
fsubr
hlt
lods
push
adc
sbb
dec
mov
arpl
popa
fwait
add
(bad)
sbb
push
paddsw
xchg
add
jne
jne
mov
ds
jmp
jo
adc
movs
cmp
and
add
jp
jbe
cmp
sbb
imul
rol
inc
aam
xchg
enter
or
ins
sahf
xchg
jne
out
call
inc
cmp
fidivr
xor
push
sbb
mov
mov
push
ins
ret
std
push
in
call
aaa
xabort
xor
out
jae
inc
inc
adc
ins
sbb
xlat
xchg
leavew
cmps
nop
mov
sub
pop
clc
push
jne
pop
aad
(bad)
and
test
adc
xlat
adc
outs
fs
arpl
cmp
dec
popf
test
and
xchg
push
add
push
ja
or
movs
or
xor
mov
or
inc
adc
fld
sub
popf
js
int
sbb
dec
mov
or
scas
dec
fld
stos
out
enter
mov
(bad)
test
inc
enter
mov
repnz
push
add
cmp
sbb
aas
lods
shr
pop
or
hlt
mov
imul
push
pop
cld
lahf
das
into
out
dec
shl
into
out
pop
cld
jl
and
stos
cmps
je
fcmovne
aaa
add
mov
jl
sub
sub
fwait
sbb
lea
pop
mov
nop
add
mul
pop
ins
adc
in
cwde
fcomp
xchg
or
xor
and
out
cmp
lds
mov
popf
adc
dec
dec
out
adc
pop
sbb
sti
pop
push
out
mov
sub
leave
mov
xlat
in
or
sbb
cmc
sbb
or
xor
dec
and
scas
xor
(bad)
sub
sahf
sbb
xchg
and
inc
test
and
das
cdq
adc
push
in
inc
fwait
add
ret
cmps
sub
(bad)
das
mov
femms
pop
add
loope
retf
mov
lea
loop
mov
adc
iret
cmps
pop
pop
cmps
popf
pop
jge
lea
rcl
pop
mov
fcomp
inc
(bad)
es
mov
pop
iret
outs
jecxz
lods
repnz
pop
js
push
pop
adc
dec
cmps
pop
pop
adc
pop
(bad)
out
mov
test
push
cmc
xchg
and
call
dec
fstp
mov
ja
or
xchg
jns
(bad)
call
dec
fisttp
out
int
dec
imul
adc
cmps
retw
pop
call
pusha
xchg
out
ja
or
mov
popa
sub
sti
adc
retf
mov
aaa
xchg
aad
adc
jecxz
mov
gs
ins
dec
lods
add
or
mov
test
xor
cld
pop
and
cmp
cs
repz
pop
out
fld
or
gs
mov
test
pop
sahf
xor
not
cmp
movs
xor
test
scas
xchg
dec
jbe
mov
loop
out
popf
inc
fsubr
in
jmp
in
call
icebp
fdivr
jnp
pop
inc
mov
mov
fistp
sbb
mov
ret
sbb
jnp
fs
fwait
lea
push
aas
push
push
fnstsw
jno
sbb
das
addr16
xor
pop
adc
mov
lock
inc
inc
pop
out
sub
test
mov
sbb
clc
std
fnsave
cs
sbb
bound
daa
ins
loopne
jbe
in
jns
jle
mov
aad
ins
sbb
or
rcr
sbb
or
shr
sub
push
les
(bad)
aad
mov
mov
fisubr
pop
aam
in
and
mov
ret
cmp
sub
ror
scas
es
loope
sbb
xchg
jl
js
pop
push
test
and
jbe
push
dec
mov
xor
popa
movs
mov
sbb
and
adc
add
xchg
test
xor
inc
sbb
retf
dec
add
loopne
cld
and
std
imul
or
push
stos
inc
xchg
add
in
fisttp
or
int3
cmps
jnp
lods
or
mov
sub
and
je
aam
std
mov
dec
inc
adc
int3
lahf
inc
mov
ret
cmps
pop
hlt
pop
loop
dec
fimul
loop
xlat
int3
test
cmp
and
(bad)
fnstcw
aaa
push
cmc
dec
jb
mov
jmp
in
add
jno
cmps
sahf
pop
mov
push
xor
movq
sti
adc
and
stc
aad
pop
(bad)
dec
xchg
or
scas
and
dec
mov
add
cmps
inc
call
call
mov
movs
mov
ficomp
popf
xchg
dec
imul
in
mov
sahf
or
jae
push
inc
fwait
xor
xchg
loope
jns
mov
add
cs
dec
call
addr16
sbb
cwde
stos
stos
das
aad
das
xchg
pusha
lods
mov
adc
cmp
popa
inc
jns
add
jecxz
push
sbb
inc
inc
inc
sysret
mov
dec
inc
bound
hlt
push
jne
jno
inc
shl
xchg
and
sbb
push
pop
dec
push
jge
rcr
push
jl
mov
jg
es
cmp
mov
ret
pop
fsubp
js
push
fs
sar
pop
std
cmc
lock
shl
stc
jmp
sti
sbb
mov
cmps
sub
lahf
into
sbb
adc
cmp
dec
ins
mov
fmul
xor
sub
mov
adc
pop
dec
jmp
out
loopne
mov
enter
jne
and
rol
sub
fwait
xchg
lods
inc
test
fcmovu
dec
jp
shr
mov
(bad)
mov
xchg
mov
cmp
and
push
dec
je
add
and
shr
jmp
in
cmp
jno
adc
retf
mov
pop
pop
fsubr
xchg
dec
outs
dec
jno
or
mov
mov
xchg
inc
mov
mov
pop
out
push
cmps
lock
dec
fnstenv
dec
pop
xor
push
jmp
sbb
xchg
sahf
mov
in
out
ja
lods
adc
stc
retf
pop
stos
xor
push
and
pushf
dec
push
hlt
push
stos
sub
mov
mov
in
push
and
xor
push
ins
mov
inc
fwait
add
pop
loop
mov
fcomi
int
outs
data16
xor
mov
and
adc
jmp
imul
in
fs
add
in
prefetch
jbe
retf
aam
fwait
cmp
xchg
sub
enter
js
js
jge
push
retf
out
movs
ss
in
sub
jecxz
ror
mov
loope
xor
inc
cmp
sbb
inc
adc
mov
cmp
sti
fs
sbb
sub
push
push
inc
sub
call
and
test
nop
in
(bad)
jno
sti
call
xchg
(bad)
out
jo
adc
sbb
xchg
fsub
xchg
hlt
xchg
mov
jae
pop
mov
ins
fidivr
xor
jmp
mov
mov
jo
mov
int3
push
std
inc
sub
lods
sub
mov
in
outs
pop
pop
sbb
and
add
ds
pop
leave
(bad)
nop
fistp
clc
sbb
xor
xor
push
ins
popf
mov
add
mov
(bad)
hlt
push
pop
mov
sub
xor
mov
data16
stos
mov
ins
sbb
xor
shl
mov
loop
mov
xor
pop
sub
xor
mov
in
inc
(bad)
icebp
sbb
push
loope
pushf
call
ret
aaa
mov
mov
cmps
(bad)
(bad)
sbb
xor
ins
movs
and
test
mov
mov
sahf
fcom
jl
movs
outs
movs
mov
out
dec
or
add
loop
imul
dec
push
xchg
test
or
pop
push
scas
sti
mov
gs
leavew
rcr
popa
pop
mov
and
daa
stc
pop
cmp
adc
in
std
aam
xchg
xor
mov
enter
gs
out
(bad)
pop
sbb
push
imul
jbe
jae
push
and
add
popf
(bad)
in
lods
dec
cmc
in
jnp
fistp
mov
mov
mov
mov
mov
out
add
gs
ror
xor
ss
and
div
adc
jg
loop
push
xor
jae
ret
xlat
unpcklps
sbb
or
in
loope
test
(bad)
inc
push
mov
adc
sti
loope
aas
mov
pop
push
mov
shl
cmp
or
(bad)
jg
cmp
outs
pushf
adc
lods
lods
and
test
movs
push
pop
rcr
out
mov
in
inc
add
stc
cmps
loop
outs
fwait
mov
lds
loopne
xchg
adc
pop
scas
xchg
jne
jle
jecxz
inc
call
sbb
mov
xchg
movs
scas
bnd
add
jle
cmps
jne
popa
jo
inc
mov
mov
pop
jmp
call
out
and
lods
lods
and
dec
cs
out
js
dec
push
mov
jb
call
les
jl
inc
xchg
xor
popa
and
into
fnstsw
pusha
push
aas
push
cmp
adc
sahf
jae
in
hlt
imul
cmp
jb
adc
pop
mov
dec
inc
int3
xor
ins
jns
inc
add
sub
mov
dec
aaa
fld
pusha
loopne
pop
jo
adc
or
call
dec
mov
popf
pop
push
jecxz
ins
mov
fist
add
cmp
sub
or
jnp
push
jmp
xchg
sbb
in
es
mov
out
stos
retf
inc
inc
sub
dec
inc
xlat
mov
inc
mov
sub
fidivr
sbb
pcmpeqd
push
enter
xor
or
adc
bound
imul
inc
fdivr
pop
push
(bad)
test
xor
mov
icebp
sti
les
je
mov
hlt
cmp
dec
hlt
adc
cmc
cmp
pop
aaa
lds
lods
fisubr
retf
sub
sbb
shr
gs
imul
call
sub
(bad)
adc
and
fidivr
sub
sub
and
xchg
xchg
or
xor
loopne
mov
pop
out
xchg
mov
xlat
lds
mov
xor
dec
call
ret
sub
ss
adc
lea
xor
loope
int
popf
pop
popa
loopne
push
or
cli
test
jmp
mov
adc
fisub
loope
mov
pop
fisttp
add
pushf
inc
cli
push
int3
and
(bad)
std
ret
sbb
stos
push
rcr
jo
les
jmp
cmp
cmp
jno
and
mov
jbe
imul
dec
sti
xchg
mov
mov
ret
movs
fisttp
push
dec
or
jge
mov
mov
pop
cmp
lods
jl
jno
mul
push
sub
(bad)
jl
rcl
movs
push
pop
out
add
cmps
ins
jge
call
jl
sub
inc
mov
sahf
(bad)
inc
clc
adc
popf
adc
dec
arpl
or
ja
fsubr
enter
jne
inc
stc
or
mov
adc
mov
(bad)
mov
mov
pop
mov
inc
fnstcw
(bad)
cli
imul
icebp
sbb
xchg
jae
jmp
fsubr
xlat
xor
movsd
imul
call
call
out
mov
test
pop
pusha
cmc
push
lock
mov
mov
pop
adc
mov
pop
cld
in
adc
in
mov
enter
jbe
sbb
inc
xor
jmp
repz
pop
aam
fadd
xchg
mov
cmps
jmp
imul
in
gs
cld
loop
dec
pop
inc
sahf
inc
xchg
shl
rcr
int3
sbb
ins
gs
add
sbb
lds
push
or
xchg
lods
adc
pop
dec
inc
dec
(bad)
in
push
jp
fistp
test
mov
adc
mov
stc
push
inc
movs
inc
push
cmp
mov
lahf
pop
ja
(bad)
dec
cmp
mov
shr
aad
adc
dec
sub
or
add
frstor
and
dec
jns
cmp
dec
cmp
mov
mov
xchg
mov
bound
pop
pushf
mov
in
gs
or
ja
jmp
sar
not
jg
add
das
rol
push
jecxz
movs
adc
push
les
into
icebp
leave
sbb
addr16
xchg
dec
sub
repz
je
pusha
test
or
jne
cmps
mov
jae
test
xor
icebp
imul
sub
xchg
adc
mov
jg
push
jmp
std
pushf
and
jne
jbe
push
pop
xchg
pusha
fwait
mov
lea
and
xchg
jo
outs
std
movs
pop
adc
xor
add
(bad)
push
dec
out
sub
dec
nop
enter
shl
cdq
ret
cmp
std
add
push
daa
movs
mov
xchg
cmp
and
fsubr
lods
mov
inc
sbb
sub
outs
scas
out
adc
sahf
mov
mov
enter
(bad)
sahf
push
mov
int
jo
in
adc
in
out
mov
mov
popf
add
xlat
fs
ds
imul
xor
xlat
mov
enter
fidiv
fsub
sbb
and
and
pop
pop
cmc
imul
fsub
(bad)
and
dec
stc
popf
pop
data16
cmp
push
into
xor
jle
movs
jae
jmp
xlat
mov
push
fs
(bad)
cmp
cmp
rcr
pop
pop
ins
ins
or
push
cli
cmp
xchg
sbb
mov
cmc
mov
mov
pop
jbe
loope
xchg
pop
call
add
fidiv
movs
sub
cmps
push
lds
pop
push
pop
push
add
fcmovnbe
in
pop
ins
int
shr
lods
retf
pop
inc
jnp
jl
ret
inc
mov
int3
add
cmps
inc
nop
cmp
jge
loopne
sub
xor
pinsrw
std
mov
test
bound
mov
sub
pop
mov
or
outs
fisttp
out
pop
sub
xor
mov
and
das
in
ret
scas
sbb
out
push
ins
sbb
cmps
jae
mov
outs
pop
fadd
add
and
cmp
jmp
xchg
loop
outs
in
ret
mov
pop
cmp
inc
call
daa
push
inc
lods
push
cmp
push
hlt
std
push
pushf
or
out
std
retf
hlt
mov
lea
xchg
into
test
div
add
gs
call
jbe
shr
test
add
lea
sbb
xchg
push
cmp
mov
inc
cmps
inc
add
mov
jmp
add
arpl
lods
(bad)
in
cwde
push
inc
clc
in
pop
mov
jmp
loopne
dec
and
sub
mov
mov
jl
pushf
dec
(bad)
loopne
inc
jo
mov
retf
pop
nop
push
or
push
inc
mov
pusha
stc
xchg
adc
es
xchg
pop
mov
stos
xor
push
repnz
shl
cmps
and
rcl
jecxz
pop
js
das
cmp
cld
ror
or
jae
xchg
sar
data16
stos
xchg
jecxz
aaa
call
xor
out
inc
cmp
popa
pop
push
test
retf
mov
sbb
inc
sub
jmp
jbe
ds
and
add
loope
mov
cwde
cwde
(bad)
popa
imul
jnp
pusha
out
mov
add
push
jg
xchg
pushf
add
aas
mov
sub
xor
stos
or
popf
repz
in
fild
(bad)
sbb
retf
jb
jmp
dec
jo
leave
int
or
pushf
jmp
cld
jp
nop
das
xor
(bad)
jl
push
pop
pop
daa
outs
popa
fdivr
jnp
pop
push
loope
cld
imul
rol
(bad)
cmp
sbb
push
in
inc
push
pusha
sub
push
retf
out
add
inc
das
outs
sub
loop
push
push
jns
inc
mov
mov
lods
and
bound
pusha
cmp
pop
dec
adc
aas
mov
scas
xor
jne
data16
add
les
dec
xchg
push
lock
retf
out
jnp
adc
(bad)
into
adc
(bad)
sahf
xchg
test
das
jo
pop
dec
jge
xchg
stc
ror
retf
pop
xor
dec
pop
movs
stos
cmp
adc
push
aam
jecxz
inc
adc
mov
ds
pop
sbb
inc
mov
inc
int
xor
cmp
adc
push
bound
push
mov
push
cmp
xchg
(bad)
(bad)
aaa
dec
xchg
lock
mov
sbb
popa
dec
mov
sub
push
or
add
icebp
retf
xchg
inc
add
lock
mov
fsubr
aaa
icebp
mov
pop
add
cdq
pop
rol
scas
xchg
sub
and
xchg
(bad)
fidivr
in
pop
add
xchg
sbb
test
pop
sahf
aam
mov
fiadd
out
popf
pop
and
push
xchg
sub
sbb
loopne
call
xchg
cmp
out
adc
iret
inc
xlat
inc
ret
mov
loopne
clc
pop
aad
lfs
push
pop
push
xchg
(bad)
mov
or
inc
and
xchg
stos
dec
sbb
dec
xchg
sub
mov
jge
pop
sbb
aam
clc
add
sub
xor
add
mov
pusha
add
xlat
sbb
mov
jecxz
ficomp
inc
(bad)
lock
in
cmp
xor
adc
xor
cli
imul
and
inc
hlt
ja
bound
fmul
xor
sub
mov
aas
mov
shl
push
inc
jb
sbb
dec
shl
lock
cmp
ja
adc
iret
test
push
mov
cwde
xchg
mov
stos
and
push
movs
pop
xor
sbb
test
test
popa
lods
leave
inc
xor
das
xchg
or
fwait
jp
jecxz
and
por
ret
call
mov
dec
dec
mov
jmp
fwait
dec
mov
xchg
imul
sub
retf
stc
jl
(bad)
and
pop
or
add
repz
jge
push
inc
or
out
add
call
cld
enter
ret
dec
hlt
mov
mov
fldenv
sub
push
push
pop
dec
dec
test
mov
pop
ins
push
imul
std
ret
dec
add
in
xchg
sub
mov
clc
inc
lods
mov
aad
int3
(bad)
cmp
lock
push
repnz
jb
push
loope
jge
mov
js
imul
pop
sub
dec
enter
push
ficomp
in
cmps
jecxz
and
daa
aas
pop
popf
and
mov
movs
inc
es
arpl
retf
addr16
xor
test
push
icebp
sub
push
ret
nop
call
(bad)
lods
movs
xchg
push
sbb
xchg
mov
sbb
push
test
femms
and
rcr
in
adc
jecxz
sbb
or
adc
sahf
cmc
xor
jp
inc
jbe
mov
enter
mov
push
add
lods
or
and
(bad)
xchg
cli
or
push
push
movs
xlat
mov
enter
dec
push
cmc
cmp
pusha
dec
pop
sbb
pop
add
push
cwde
mov
and
jle
and
lods
xchg
iret
aaa
adc
jecxz
cmp
cdq
stc
adc
mov
push
div
lods
xchg
ins
(bad)
mov
push
add
or
mov
xor
jl
jmp
popa
das
mov
mov
retf
inc
sbb
(bad)
repz
push
test
clc
aaa
mov
mov
shr
int3
call
inc
cmps
push
arpl
lea
push
(bad)
cdq
jo
retf
rol
push
les
dec
sub
pop
jge
test
mov
cmp
ror
rol
cmps
push
adc
(bad)
pop
inc
xor
loope
js
retf
sub
mul
xor
shl
jg
ins
mov
(bad)
bound
hlt
pop
cld
xchg
cmp
add
or
pusha
inc
mov
test
daa
xor
sub
ja
ins
push
mov
std
mov
(bad)
push
push
imul
jno
fiadd
sbb
push
fsubr
adc
dec
cmp
pop
imul
mov
dec
aad
enter
into
test
fist
imul
cli
test
retf
sub
fcomip
xchg
add
pop
in
and
cmp
loopne
test
pop
push
(bad)
es
adc
popf
aaa
jo
and
sub
dec
jbe
jo
jle
(bad)
and
inc
ret
sub
add
jo
or
inc
mov
pop
cdq
sar
scas
add
outs
xor
mov
adc
mov
push
mov
test
sbb
call
push
les
dec
popa
cmp
fdivr
mov
xor
fwait
rol
sbb
fstp
adc
inc
ret
out
xchg
test
stos
data16
mov
xor
ret
mov
jge
(bad)
les
xchg
push
xor
sbb
(bad)
lods
dec
dec
cmc
mov
(bad)
(bad)
jb
adc
stos
and
adc
adc
mov
test
fmul
(bad)
mov
scas
pop
pop
test
nop
pop
ret
jbe
es
pop
push
jecxz
or
cs
sbb
sub
(bad)
(bad)
dec
and
test
mov
(bad)
lods
mov
pop
movs
lea
test
sub
stos
mov
mov
mov
movs
inc
ss
cld
dec
pop
mul
stos
push
sub
inc
or
test
cmps
and
pop
jecxz
pop
cmc
stc
pop
jnp
enter
call
mov
xchg
push
mov
cmp
loop
arpl
push
sub
and
retf
movs
sub
imul
pop
or
retf
sbb
mov
xor
in
mov
push
jmp
rol
ds
lahf
inc
jecxz
pop
inc
ds
jne
neg
loope
or
scas
jg
add
jnp
pop
outs
mov
dec
push
pop
lods
test
mov
nop
stos
and
mov
fdiv
xor
cmp
(bad)
mov
aaa
xchg
(bad)
rcl
jae
push
pushf
or
add
pop
shl
call
stos
jbe
(bad)
mov
dec
popa
ret
sub
loopne
cmp
cmc
fs
es
dec
test
xchg
mov
mov
lock
or
test
sub
push
xchg
xor
cmp
aad
repz
test
or
in
lds
cmc
push
xor
xchg
add
pop
pop
ss
cld
or
in
ja
mov
shl
shr
mov
pop
scas
push
cmp
test
in
push
mov
push
xchg
lods
xchg
push
mov
mov
adc
xor
mov
cmp
jmp
inc
daa
push
frstor
mov
mov
icebp
push
cmps
shr
mov
mov
in
pop
neg
aam
aad
jae
ins
mov
mov
js
mov
lods
mov
retf
jmp
cmps
movs
(bad)
call
cmps
mov
push
mov
(bad)
jg
jno
mov
cmp
je
leave
(bad)
rol
clc
mov
int3
push
ret
call
jmp
add
mov
ins
ss
test
add
jle
fldcw
dec
sub
dec
add
pop
loop
aad
sub
jb
mov
pop
repz
fcmovu
or
sub
inc
and
test
(bad)
ja
test
stos
aas
add
mov
iret
and
or
movs
mov
jnp
cmps
ins
fcomp
call
or
scas
dec
mov
inc
bound
cmp
cmp
inc
jle
mov
pushf
dec
push
pop
out
in
in
aaa
xchg
xlat
add
das
xor
xor
xchg
and
out
clc
fadd
xchg
push
dec
jae
in
cld
push
mov
(bad)
mov
(bad)
push
mov
dec
inc
mov
pushf
retf
cmp
push
mov
mov
je
sub
(bad)
mov
es
mov
adc
data16
ror
push
imul
sahf
pop
adc
pop
adc
mov
push
xor
out
cmp
js
mov
xor
test
mov
xor
mov
js
cmc
daa
icebp
stc
cmp
leave
jo
inc
mov
push
xchg
and
lahf
retf
push
js
iret
xchg
fsubr
inc
jg
sahf
in
mov
nop
call
dec
or
adc
inc
aad
hlt
sbb
in
aaa
sub
rcl
jno
rol
scas
lods
sbb
loopne
adc
jle
in
push
pushf
mov
fs
jecxz
push
test
ss
loope
jne
pop
lea
clc
rep
xor
xchg
ins
jmp
xor
jbe
lfs
pop
pop
inc
jmp
inc
xor
and
out
test
mov
das
and
in
pop
sbb
sahf
sub
sub
inc
(bad)
arpl
in
push
dec
add
jle
dec
aaa
inc
sub
adc
cwde
in
movs
mov
popa
mov
xchg
loopne
xor
adc
push
jg
rol
cmp
pop
push
cmp
mov
shl
dec
bound
cmps
ins
outs
les
xchg
adc
jmp
ds
and
cmps
mov
xchg
cmp
cmp
sbb
jbe
movlps
lock
dec
icebp
clc
in
jecxz
inc
pop
mov
retf
(bad)
jmp
sub
mov
icebp
inc
cmp
xchg
sbb
retf
inc
add
scas
ret
out
push
adc
icebp
les
fwait
aad
dec
cmps
xchg
pop
inc
in
and
shl
xchg
push
jo
in
dec
jns
pop
test
add
outs
pop
jae
pop
adc
mov
sbb
in
adc
pusha
cwde
ja
sahf
add
fist
adc
pop
mov
sahf
jg
cld
pop
aaa
mov
test
loopne
mov
adc
es
jnp
and
shr
repnz
jl
jb
sbb
out
push
or
fstp
out
aad
mov
jne
(bad)
dec
std
jmp
jle
daa
jbe
jmp
dec
mov
sub
cmp
lock
ja
pop
or
repnz
mov
add
sbb
fs
sbb
jmp
call
daa
pushf
lods
xor
aas
pushaw
ja
fdivr
cmps
add
inc
out
mov
mov
sbb
mov
xor
adc
cmp
add
popa
dec
cld
or
or
fldcw
xor
(bad)
scas
sbb
add
stc
inc
les
xor
not
pop
sub
ss
sbb
ror
pop
xor
add
mov
adc
ror
jle
loope
rcl
cmps
stos
and
jae
and
xor
fmul
sti
unpckhps
imul
inc
and
xor
lods
xchg
(bad)
pop
out
jge
out
pushf
sub
ds
push
push
cmps
leave
push
push
sar
pushf
and
lods
jmp
in
or
mov
push
retf
jno
adc
sar
mov
pop
and
icebp
mov
(bad)
jmp
(bad)
enter
clc
push
in
add
and
sbb
xor
push
jmp
xor
dec
xchg
sti
mov
pop
icebp
sub
dec
test
test
mov
ror
leave
call
pop
hlt
mov
stos
sub
sub
dec
mov
pop
and
icebp
cmp
jp
leave
popa
jmp
add
(bad)
inc
outs
adc
mov
add
loop
aas
andnps
sbb
enter
fs
fsub
fwait
sub
xchg
sbb
push
ja
sub
outs
cmps
add
ds
or
or
mov
sahf
sbb
xor
(bad)
imul
mov
je
lahf
into
mov
mov
sub
cld
shl
adc
adc
out
outs
in
test
cmc
cmp
jae
aas
cs
and
sbb
fwait
test
fsubp
pop
or
xchg
adc
stos
mov
(bad)
dec
aam
sbb
fcmove
fmul
pop
mov
sar
in
adc
repnz
das
(bad)
or
adc
leave
outs
sbb
or
jo
or
outs
js
retf
and
mov
mov
aad
loopne
jnp
lds
ss
imul
push
cmp
mov
or
push
movs
xor
inc
cmp
cmp
jp
add
clc
je
cmp
or
mov
cmps
jae
jmp
adc
mov
(bad)
mov
jl
inc
adc
cmp
icebp
(bad)
hlt
xchg
int
sti
setnp
ret
add
in
pop
cmps
out
jo
inc
jnp
mov
(bad)
aam
mov
jle
pop
or
jle
push
sti
imul
xchg
and
or
xchg
(bad)
leave
lods
je
and
add
shr
out
loop
mov
not
outs
fnsave
add
push
(bad)
adc
pop
xor
xor
lock
inc
ja
sbb
cwde
dec
test
xor
rcr
sbb
data16
movs
adc
add
pop
pop
xor
inc
dec
pop
stc
pop
or
adc
iret
push
mov
pushf
dec
push
iret
in
push
xor
bound
push
in
out
test
inc
jmp
retf
lds
pusha
sbb
(bad)
sbb
cmp
jne
sbb
mov
shl
btc
arpl
dec
arpl
jno
and
dec
sbb
in
fld
ins
lods
xchg
jnp
pop
sahf
sub
dec
arpl
icebp
call
mov
stos
(bad)
in
and
std
jle
int
lods
js
ins
cs
cmp
dec
add
and
or
pusha
pop
adc
out
stc
push
push
imul
aas
pop
sbb
fyl2x
sbb
push
cmp
jmp
aaa
cmps
sub
idiv
jmp
jo
imul
sbb
cli
mov
test
mov
jno
ins
pop
call
mov
fisttp
movs
ins
test
bound
dec
out
ret
jns
or
push
or
and
adc
add
and
repz
(bad)
cwde
outs
repnz
jno
add
lea
(bad)
test
push
cmp
les
jp
xchg
xor
lea
loop
xor
leave
les
jae
arpl
pop
sub
xchg
scas
sbb
repz
jnp
and
push
xor
mov
or
test
ja
sub
mov
rol
or
xlat
test
jno
push
mov
lds
xlat
mov
jle
enter
loopne
cmps
inc
mov
mov
mov
aam
jns
pop
add
bndldx
aas
(bad)
pop
xor
addr16
(bad)
cmp
shl
or
fild
sbb
or
(bad)
mov
sub
inc
(bad)
mov
loop
push
in
or
mov
jae
sbb
dec
dec
sbb
cmc
lods
pop
or
push
or
out
stos
mov
mov
add
xor
mov
std
cs
adc
into
push
cld
arpl
loope
push
dec
fwait
aaa
add
into
push
sbb
(bad)
sbb
cdq
and
pop
mov
adc
cli
add
mov
nop
loopne
add
jg
(bad)
das
fdiv
and
sti
add
push
mov
mul
clc
popa
popf
inc
stos
std
jge
push
outs
lock
inc
in
(bad)
dec
std
fild
jb
push
mov
push
push
pop
daa
in
ficomp
jge
shr
fiadd
test
xchg
rcr
das
cmp
add
fsubr
sub
mov
mov
imul
jg
sahf
ficom
fs
iret
ins
push
push
pop
push
mov
(bad)
iret
push
mov
mov
(bad)
ficomp
xchg
pop
(bad)
imul
mov
cli
(bad)
mov
int3
add
js
sbb
test
fadd
pop
rol
repnz
push
push
jmp
icebp
retf
pop
add
adc
test
fld
nop
xor
lahf
pop
pop
fmul
call
addr16
jge
xchg
inc
pop
(bad)
ins
cmp
pop
sti
xor
out
dec
dec
adc
cwde
fs
arpl
jg
movups
adc
(bad)
jl
test
mov
pop
fsubr
mov
and
ret
cmp
sub
push
cmp
sbb
call
mov
push
jecxz
movs
adc
ins
arpl
push
inc
scas
shr
adc
das
shr
xchg
cmps
es
inc
cmp
inc
ret
push
cmp
or
dec
fiadd
es
push
lds
cwde
movs
bound
lahf
pushf
(bad)
scas
mov
retf
mov
mov
mov
sbb
sub
adc
mov
mov
jno
out
stos
jg
pop
xor
pop
test
ret
add
and
fstp
ds
sub
sbb
push
hlt
jnp
mov
dec
cmp
cmps
lahf
retf
ins
mov
fst
pop
push
xor
ret
jecxz
(bad)
outs
cmps
mov
xor
retf
or
fisttp
or
mov
mov
mov
jnp
inc
fldcw
nop
loop
out
mov
mov
mov
pop
stc
push
dec
mov
daa
xor
xchg
test
loope
mov
or
adc
jecxz
or
xchg
(bad)
adc
sbb
iret
test
stos
outs
xchg
jbe
imul
sub
test
dec
out
ret
pop
sub
adc
into
loope
xchg
sahf
ficomp
loope
mov
test
bound
adc
js
add
in
jb
mov
add
sub
xlat
sub
sbb
adc
cld
ret
jne
call
jno
cmp
cmp
(bad)
xor
cmc
bound
movs
add
mov
lods
ins
sbb
shl
lea
lds
in
ins
push
aad
loopne
sub
or
mov
pop
ins
and
push
shld
cld
mov
ret
push
xchg
daa
sti
xor
jge
retf
rcr
or
retf
cmp
and
dec
push
mov
dec
push
(bad)
(bad)
call
add
jp
cwde
add
out
mov
ror
inc
jle
ret
add
mov
jmp
mov
les
xor
push
lahf
jle
xor
out
int3
(bad)
(bad)
sbb
sub
pusha
mov
jecxz
shl
imul
stos
lods
fisttp
xor
xchg
pop
ins
add
cmps
or
cvtpi2ps
je
lods
dec
icebp
js
mov
push
stc
and
fidivr
into
cs
and
cld
xchg
cmp
call
xlat
cmp
outs
pop
inc
arpl
xor
pusha
cld
dec
push
in
or
jmp
mov
jne
cmp
out
and
push
xchg
mov
fisub
xor
(bad)
push
mov
pop
or
enter
fadd
hlt
dec
cdq
iret
mov
pop
fadd
push
and
fwait
adc
nop
and
in
pop
rcr
pop
fwait
or
adc
loope
adc
pop
dec
sti
retf
arpl
dec
outs
aad
div
sbb
inc
jle
repnz
or
sub
and
test
stos
(bad)
cmc
mov
xchg
dec
jg
loope
(bad)
in
rep
in
sub
sub
out
ss
jno
das
imul
lods
mov
add
mov
pushf
ins
add
push
jmp
icebp
inc
xlat
jno
cdq
push
es
movs
inc
repnz
gs
pop
in
retf
jne
dec
mov
xchg
mov
dec
pushf
jbe
pop
mov
pop
test
adc
shl
stos
nop
add
sbb
in
mov
es
jno
xchg
repz
inc
sbb
and
(bad)
jecxz
in
cmp
mov
mov
dec
es
cwde
iret
jmp
push
cmp
out
(bad)
in
mov
outs
adc
dec
call
aas
adc
jnp
test
nop
adc
jo
ins
pusha
fs
cdq
sub
mov
fldenv
(bad)
outs
out
dec
pop
les
fwait
add
xchg
mov
out
mov
mov
jl
fsubr
push
outs
cmp
stc
or
jns
xchg
jns
mov
into
retf
in
mov
into
das
and
icebp
sahf
test
imul
cmc
imul
push
div
nop
inc
mov
xchg
add
daa
mov
call
data16
jbe
push
movs
retf
xchg
fsub
popa
mov
sub
retf
rcl
mov
push
(bad)
and
ror
arpl
and
pop
cmp
xor
dec
jmp
fild
xor
fldcw
or
jg
cmp
dec
jl
xchg
ins
lock
sub
in
xor
retf
dec
add
jle
faddp
inc
mov
cmp
inc
sbb
add
out
cmps
aad
adc
inc
pop
push
popa
cmps
lock
stc
mov
int
dec
dec
data16
in
in
jae
jae
cmp
int3
pop
and
adc
ret
sar
push
push
es
rcl
in
mov
movs
or
rcl
fwait
add
nop
and
jnp
mov
repnz
sub
jb
into
shl
jno
sub
imul
cs
xchg
cmp
fcomp
adc
sahf
addr16
fsubr
sub
jnp
jb
cmp
cmp
icebp
rol
push
sahf
mov
adc
popa
sub
mov
aaa
stos
fadd
frstor
xor
in
ror
data16
fnstenv
(bad)
xchg
mov
fdiv
cs
mov
(bad)
add
xchg
cmp
inc
test
imul
retf
dec
rol
or
aaa
jle
dec
ret
int3
sub
push
movs
xchg
and
fcmovnu
pop
and
xchg
sbb
lea
ficom
jns
sahf
dec
push
or
mov
ss
(bad)
sub
xchg
push
outs
fstp
cmp
and
std
jge
pop
clc
cmp
fstp
ret
sbb
sbb
inc
cmp
mov
push
and
movs
mov
pop
mov
movs
rol
(bad)
mov
std
ja
push
cmp
xor
add
mov
sbb
aad
cli
adc
xchg
scas
ds
jo
or
sti
out
dec
xchg
cwde
mov
jmp
out
push
adc
mov
je
xchg
fs
dec
xor
mov
mov
fwait
jbe
imul
stos
push
xchg
add
nop
mov
lahf
sub
mov
jne
push
scas
mov
(bad)
adc
and
jp
xor
mov
push
sbb
fimul
dec
(bad)
push
mov
mov
sar
daa
mov
mov
jno
pusha
rcr
mov
ds
test
(bad)
jno
or
fldcw
bound
popa
fldcw
clc
shl
dec
aad
cmp
push
out
xor
(bad)
xchg
pop
jp
push
pop
mov
mov
add
cmc
dec
test
ds
loop
mov
cs
jmp
xchg
xor
dec
(bad)
icebp
pop
icebp
ds
inc
daa
rcl
sub
cmp
mov
or
dec
retf
(bad)
mov
fisttp
pop
and
das
out
mov
test
int3
sub
add
xor
cmp
inc
mov
xchg
fisttp
pop
cmp
enter
out
(bad)
lea
(bad)
sbb
cmps
and
dec
add
sar
dec
inc
inc
stos
jmp
mov
xchg
push
popa
xor
inc
nop
xor
mov
ja
cmp
fs
jbe
sbb
in
inc
cld
sbb
push
pop
scas
jecxz
in
sub
push
xor
jmp
mov
xchg
mov
push
jnp
mov
inc
cli
mov
mov
mov
sbb
push
lods
mov
cmp
jb
mov
stos
in
or
out
lea
mov
inc
cmp
aad
inc
std
inc
in
or
mov
inc
push
pop
mov
push
sub
arpl
jo
add
jno
pushf
add
mov
stos
xor
mov
mov
mov
ds
ret
call
in
pop
pop
push
cmp
inc
xchg
test
mov
jae
dec
inc
dec
inc
rcr
lds
sub
ds
push
mov
push
pushf
xchg
in
(bad)
xor
cdq
mov
mov
fcomp
loop
or
sbb
push
jno
jne
mov
jbe
stos
push
mov
sub
and
pop
sbb
enter
test
lock
jmp
les
(bad)
stos
xchg
repz
inc
pop
mov
xor
push
arpl
mov
sub
imul
jne
ucomiss
rol
xchg
or
mov
pop
ror
loope
and
aad
inc
mov
popa
sahf
xchg
pop
ret
fwait
mov
jl
outs
xor
imul
pop
in
jnp
add
xchg
push
retf
rcl
mov
int3
mov
push
jns
out
es
into
fwait
(bad)
cdq
arpl
popa
lea
push
(bad)
in
out
mov
outs
cli
out
mov
stos
mul
imul
xchg
and
std
nop
dec
pop
gs
add
xchg
cwde
mov
mov
push
jle
gs
bound
into
fisubr
jle
mov
jo
mov
cs
xchg
dec
dec
repz
or
mov
in
pop
stos
mov
imul
mov
dec
and
mov
out
jno
imul
sub
mov
test
aad
push
pop
test
daa
ficomp
adc
cdq
loope
daa
push
adc
out
cmp
mov
das
or
sbb
ret
or
std
jp
test
test
test
dec
mov
push
in
xchg
jle
jno
fdiv
jecxz
jmp
pop
pop
or
push
or
mov
ret
and
push
mov
(bad)
sbb
ret
outs
pop
(bad)
fisttp
pop
mov
mov
sub
jne
aad
push
ror
arpl
stc
and
pop
sub
je
gs
xchg
push
push
movs
test
lock
push
es
push
test
mov
xor
fmul
mov
mov
mov
push
sub
sbb
mov
dec
push
pusha
fisttp
(bad)
and
xchg
pusha
leave
jnp
stos
mov
pop
sub
xchg
add
pop
mov
in
out
inc
imul
sbb
mov
adc
pusha
cs
adc
cli
das
and
aas
xchg
adc
in
imul
xchg
shr
iret
(bad)
cmps
popa
jbe
icebp
iret
test
xchg
push
mov
pushf
fstp
mov
mov
pop
int3
jle
movs
jle
mov
test
sbb
icebp
leavew
int3
frstor
adc
fucomip
iret
scas
shr
add
mov
dec
sbb
xchg
mov
adc
ja
xchg
ss
cmp
repnz
mov
int3
mov
and
sub
fs
pushf
add
lock
cmp
jecxz
jb
push
mov
xchg
sahf
outs
xor
sub
mov
addr16
ds
jno
fdiv
ja
les
hlt
add
sbb
stos
(bad)
fild
inc
or
xchg
push
mov
fst
cmps
ret
int3
nop
shr
fincstp
rcl
retf
mov
or
gs
dec
inc
test
rcr
mov
lea
bnd
in
getsec
dec
ror
sub
lahf
and
popa
push
fwait
loopne
inc
cmp
out
xor
xchg
sub
xchg
mov
fwait
cmps
xor
pop
dec
inc
pushf
leave
loop
jl
push
inc
les
(bad)
fisubr
int3
sbb
rcl
(bad)
mov
jbe
ins
xor
lods
jnp
lea
lods
push
jnp
pop
ins
iret
ror
mov
inc
add
idiv
push
dec
int3
stos
xchg
and
addr16
arpl
add
cmp
cmp
rcr
mov
dec
pop
inc
mov
fist
retf
push
(bad)
sub
sbb
xchg
cmps
sub
cs
adc
fst
and
movs
push
jp
mov
adc
and
mov
xchg
fist
mov
xchg
push
and
cmp
or
jl
lods
repnz
dec
pop
xor
fmul
repz
mov
(bad)
cmp
std
mov
stc
cmp
dec
xor
mul
shr
cmp
cmp
scas
out
jmp
cmps
mov
dec
sbb
pop
ror
shr
xchg
xchg
xchg
clc
sbb
mov
push
pop
es
sti
stc
or
test
sahf
cmps
(bad)
push
cmps
out
addr16
push
popf
xlat
ins
aaa
loopne
sahf
inc
in
movs
dec
scas
fs
mov
cmp
jne
xor
mov
(bad)
adc
adc
mov
repnz
jnp
je
loope
mov
cmp
sub
sbb
aad
pop
mov
mov
mov
pop
in
sbb
fist
inc
repnz
repz
lods
bnd
stos
out
shl
and
jno
ja
cmp
jmp
stos
and
(bad)
mov
shl
adc
ret
xor
out
ins
movs
add
sahf
dec
sub
sbb
cmp
pop
sbb
scas
mov
xor
xchg
xor
adc
xchg
in
call
mov
xor
sbb
fcom
lea
mov
pop
or
sub
test
push
in
jo
pop
scas
adc
(bad)
inc
xchg
jae
or
or
pop
inc
mov
iret
repz
xchg
scas
outs
out
lods
xchg
in
cmp
es
and
push
dec
int
data16
mov
inc
push
mov
add
sub
(bad)
mov
lods
in
inc
(bad)
xor
(bad)
and
(bad)
in
xchg
add
push
dec
fidiv
jmp
push
mov
xor
fidiv
pop
xor
lock
out
or
dec
test
mov
inc
jns
mov
sbb
mov
lahf
outs
aad
and
fwait
push
pop
inc
cmps
sbb
cmp
fild
rol
lods
mov
arpl
dec
pop
fdiv
mov
mov
loopne
add
popa
(bad)
push
sbb
fisub
cmp
jmp
inc
sbb
mul
in
(bad)
and
jecxz
mov
sub
jns
(bad)
fs
add
jl
or
add
xor
cmp
movs
cmps
mov
cmp
dec
lahf
jle
xor
cmp
dec
push
ss
mov
or
pop
addr16
or
std
int3
scas
xchg
add
mov
add
dec
sub
movs
sbb
test
imul
in
pop
inc
sub
aaa
loope
inc
mov
mov
push
inc
(bad)
xchg
jbe
ret
push
add
rol
shl
cdq
es
pop
test
cmp
arpl
popa
mov
leave
xor
mov
fist
add
dec
repz
and
mov
xchg
(bad)
retf
jmp
loop
add
dec
enter
fstp
retf
into
jp
loopne
ds
rcl
ins
fnsave
xchg
lock
js
jnp
pusha
jp
or
aaa
shr
cmp
int3
call
cmp
or
aam
jl
outs
loopne
ins
mov
pop
pop
out
add
mov
sbb
mov
push
sub
jns
test
std
mov
aaa
xchg
pop
push
jp
pop
sbb
imul
ins
popa
xlat
xchg
jmp
arpl
stos
mov
inc
and
push
dec
outs
push
shl
sub
cmc
push
test
xor
cmps
ss
lods
or
cmp
test
push
rcr
je
gs
retf
shl
xchg
mov
push
les
pop
dec
sbb
xor
inc
es
cmc
daa
jge
mov
pop
mov
repnz
into
adc
idiv
test
ret
push
icebp
push
bound
fdivr
mov
sti
mov
test
daa
test
and
xor
cmps
mov
outs
retf
xchg
hlt
cmp
cdq
cmp
test
pop
repnz
cmc
xchg
add
mov
xchg
inc
mov
test
cmc
add
lods
and
out
cmp
jle
in
dec
jg
(bad)
pop
imul
pop
sbb
add
and
pop
push
push
fdivr
mov
(bad)
scas
(bad)
call
out
leave
dec
pushf
push
push
or
sbb
fsubr
cli
cld
and
(bad)
cmp
adc
gs
not
mov
in
repnz
paddusb
popf
or
imul
je
bound
test
mov
sbb
pop
aam
xchg
aam
(bad)
adc
mov
cmps
mov
dec
xor
stc
lea
hlt
inc
sbb
add
ret
pop
test
add
test
push
push
xchg
retf
adc
add
call
pop
jbe
push
fist
test
(bad)
hlt
icebp
and
cmp
(bad)
jl
sbb
xchg
add
fsubr
imul
mov
movs
adc
mov
(bad)
and
ret
cmp
push
dec
aam
popf
(bad)
mul
and
fadd
clc
ins
sbb
pushf
or
es
xchg
sbb
lods
mov
in
(bad)
pop
addr16
xchg
dec
adc
ficom
ficom
and
fnstcw
xor
adc
ficomp
sub
sub
and
inc
jnp
xchg
cmp
sub
add
adc
inc
ins
lods
out
jnp
lods
cmp
push
add
shr
out
and
addr16
outs
f2xm1
and
pop
cmp
push
ret
int
dec
adc
cli
pushf
outs
ds
mov
xchg
nop
cmp
fldcw
cmps
js
out
iret
adc
inc
stc
outs
cmp
fistp
add
test
sbb
stos
lods
outs
pop
popa
mov
mov
or
fwait
inc
or
rcr
pop
mov
dec
aas
inc
lock
sbb
adc
sub
fnstenv
cmp
aaa
or
int3
(bad)
idiv
adc
add
fist
repnz
stc
xchg
mov
jo
cmc
iret
fisub
in
inc
aas
test
and
ret
jmp
cmp
out
cdq
int
test
loop
mov
mov
iret
adc
jne
mov
mov
jne
push
pop
ss
movs
mov
sub
push
xchg
mov
mov
int3
imul
in
shl
ret
pop
ja
outs
xor
pop
out
push
(bad)
jl
inc
pop
mov
iret
inc
jae
mov
xchg
and
jnp
add
push
aad
xchg
adc
idiv
push
loop
mov
jge
or
js
out
push
or
cli
sub
jno
mov
fild
iretw
(bad)
jmp
mov
in
(bad)
popf
test
sub
aaa
sbb
fwait
and
pop
sti
sub
inc
je
mov
and
push
add
dec
aaa
jle
(bad)
add
xchg
int
ret
test
add
pusha
fucom
dec
sub
inc
inc
push
or
in
sahf
les
iret
pushf
cmp
ds
dec
jne
cdq
mov
and
pushf
add
dec
int3
jns
mov
daa
mov
and
mov
stos
jbe
rol
jne
enter
jg
dec
jnp
xlat
test
sbb
dec
fcomp
push
loopne
push
scas
not
test
loopne
(bad)
mov
lds
test
push
dec
retf
pop
or
movs
(bad)
fucomi
rol
lahf
cmp
stos
cs
out
xor
test
xchg
rcl
movs
or
jnp
pop
hlt
push
sub
dec
mov
pop
sbb
mov
out
je
shl
jge
and
dec
nop
push
scas
push
imul
and
test
mov
nop
(bad)
sub
imul
push
xchg
pop
call
push
inc
test
inc
out
and
das
push
aam
pop
pop
iret
outs
push
test
dec
xchg
iret
cld
pusha
pop
pop
mov
cmp
lock
out
mov
jne
loop
ja
mov
repz
or
fadd
rcr
sub
loop
and
cmp
sbb
(bad)
add
out
lds
adc
xchg
lds
lods
inc
arpl
das
(bad)
jb
and
call
sub
or
mov
gs
icebp
and
js
ins
outs
fldcw
enter
inc
rol
lea
ficomp
pop
jo
adc
adc
fwait
je
lds
out
sub
xor
test
retf
outs
in
retf
ins
imul
cld
mov
loop
xor
arpl
loopne
sbb
scas
add
fwait
stos
push
cmp
xlat
stos
sub
pop
mov
clc
adc
xchg
xor
mov
push
jp
xor
ret
repz
fmulp
rol
lods
iret
mov
mov
fwait
pop
mov
sbb
xchg
jae
cmp
push
ds
push
dec
jl
lock
jl
addr16
mov
jge
dec
xchg
outs
mov
call
and
push
sti
lods
cli
sbb
(bad)
shl
je
mov
or
sbb
std
inc
sub
or
jae
outs
unpckhps
xor
popf
dec
and
inc
retf
retf
xor
jge
aad
xchg
push
call
cmp
iret
stos
lods
ficom
push
cmc
ins
push
pop
or
lahf
bound
lea
cmps
mov
mov
sahf
cmp
dec
sar
popa
add
add
lds
movs
dec
test
mov
and
xor
inc
cmp
imul
mov
cdq
jns
mov
movs
jl
pop
test
pop
loope
and
inc
je
call
jmp
mov
leave
cld
and
pop
mov
mov
mov
cdq
xchg
pop
xchg
mov
pop
outs
push
and
retf
inc
imul
xlat
pop
daa
sahf
cmc
add
sti
adc
push
into
pop
out
inc
pop
call
test
cmp
ins
mov
mov
and
adc
(bad)
push
inc
aas
xor
bound
inc
bound
gs
enter
or
xchg
(bad)
out
adc
pusha
sub
adc
dec
xchg
aaa
aad
sti
dec
dec
cmps
retf
out
cld
test
pop
in
retf
jb
sub
push
imul
xor
pop
add
jb
pop
sbb
in
xchg
pop
mov
adc
mov
mov
test
loop
outs
test
loop
pcmpeqb
adc
xchg
push
add
cmp
(bad)
mov
into
(bad)
idiv
rcr
sti
outs
aas
stos
xchg
test
(bad)
std
loope
cld
shl
mov
fidiv
aaa
call
adc
add
fwait
xor
sbb
cmps
ret
data16
push
outs
fwait
sub
ins
or
lods
jne
add
pop
jge
js
xchg
dec
push
cmp
imul
out
jmp
ret
sbb
sbb
imul
jbe
or
daa
mov
mov
lds
mov
mov
mov
ja
pop
jge
mov
xor
cmp
sub
arpl
mov
cmp
jb
enter
or
mov
lea
js
or
jle
stos
dec
add
pop
imul
jo
rcl
mov
mov
outs
adc
or
pop
sbb
das
adc
xchg
outs
fld
lods
arpl
fbld
(bad)
jns
xchg
(bad)
mul
xor
sbb
push
loope
bound
idiv
inc
pop
xchg
je
loope
call
shr
and
inc
mov
cmp
dec
sbb
push
or
adc
xor
ret
scas
das
leave
adc
inc
movs
pop
mov
jg
rcr
movs
push
je
in
pop
(bad)
and
or
movs
pop
mov
jae
in
movs
minps
mov
or
imul
push
rol
aaa
lods
(bad)
jmp
lea
je
(bad)
and
ret
mov
dec
scas
data16
sub
fist
adc
retf
ds
js
mov
sahf
adc
fs
mov
push
jl
pushf
mov
out
ins
and
cmp
inc
imul
dec
dec
inc
outs
mov
mov
getsec
fwait
mov
cmp
inc
(bad)
test
iret
test
repz
outs
mov
mov
mov
stos
mov
int
mov
in
jle
or
shl
dec
inc
or
cmp
mov
sub
dec
cmps
or
lahf
mov
dec
xchg
and
sti
cld
xchg
dec
ror
jp
cmp
movs
sub
xchg
sbb
cli
fdiv
add
dec
out
imul
cmp
cmp
mov
aaa
arpl
leave
sbb
xchg
repnz
lea
loope
jno
xchg
hlt
scas
fstp
sbb
push
mov
ins
pop
cmp
mov
or
push
jmp
cmp
sbb
push
into
and
mov
dec
punpckhbw
ss
jl
aad
sub
loope
out
xchg
push
fwait
mov
mov
xchg
push
push
xlat
xor
stos
xchg
repz
dec
pop
pop
outs
jl
imul
jbe
pop
pop
sub
hlt
ins
push
imul
in
call
call
clc
xchg
fsubr
dec
jmp
stos
ror
inc
int3
pushf
addr16
push
inc
clc
cmp
icebp
adc
loopne
ret
push
(bad)
aaa
loop
xchg
or
sub
push
push
jge
fisttp
in
std
fwait
(bad)
dec
sbb
dec
jb
push
mov
or
adc
iret
adc
inc
gs
inc
loop
push
clc
sbb
push
es
jbe
in
rcl
iret
imul
pop
inc
adc
int
or
inc
mov
adc
sub
ror
mov
cmp
aaa
adc
cmps
call
push
les
imul
imul
sbb
xchg
xchg
dec
jecxz
rcr
pop
ins
fs
cmp
ret
jb
xchg
push
lods
adc
(bad)
sar
mov
and
call
loop
push
addr16
mov
mov
pop
mov
jnp
sub
icebp
emms
call
sti
cmp
or
data16
xor
push
mov
cmps
(bad)
or
in
pusha
div
pop
lods
inc
or
and
mov
popa
movs
js
(bad)
jle
cmps
or
mov
pop
outs
add
sbb
add
loopne
xor
add
jae
cmp
pop
sahf
test
dec
dec
jne
scas
leave
xchg
jge
jne
dec
cmps
push
shl
jno
lea
mov
sahf
mov
clc
and
idiv
pop
or
ror
rcl
adc
pop
mov
push
retf
cdq
cmp
clc
or
xchg
hlt
xchg
push
push
push
sub
je
add
cmp
jecxz
fs
push
push
lods
push
dec
mov
inc
pushf
sub
or
push
mov
imul
into
or
cmp
mov
fs
inc
enter
out
stos
add
mov
sti
adc
shl
rcl
or
dec
(bad)
sub
shl
jo
push
push
pop
mov
jmp
pop
pop
mov
sub
sub
inc
adc
or
pop
aas
mov
lea
lock
adc
adc
fdiv
mul
inc
and
scas
imul
xor
add
rcl
dec
outs
jge
test
adc
jg
inc
imul
mov
in
mov
push
add
pop
push
rcl
cmps
push
push
cmp
arpl
test
mov
leave
lods
jl
fnstcw
das
retf
retf
cmp
sahf
add
jns
enter
sub
pop
mov
(bad)
sti
and
inc
add
or
or
push
cmp
shl
lock
das
mov
fadd
push
mov
sbb
sub
mov
adc
sbb
add
xchg
adc
xor
(bad)
ins
enter
push
sub
arpl
sbb
pop
pop
(bad)
in
mov
mov
mov
inc
mov
cmc
shl
xor
test
fwait
stos
retf
add
push
out
mov
clc
xchg
test
sbb
mov
scas
inc
xor
inc
push
pop
loope
mov
cs
push
and
aad
push
push
sbb
retf
test
imul
mov
pop
ja
inc
push
retf
call
adc
or
mov
ret
cmc
repnz
mov
das
(bad)
pushf
lea
(bad)
loop
mov
xlat
pop
jo
xor
mov
sub
sbb
push
push
ficomp
or
push
mov
popa
inc
rcr
inc
lahf
(bad)
push
lds
fbld
xor
sbb
jge
cld
int
fwait
push
mov
push
adc
jmp
fld
lea
sub
mov
and
mov
dec
cmp
fisub
lds
lods
dec
ds
sbb
mov
push
xchg
clc
xor
loopne
(bad)
shl
mov
shr
sub
test
adc
sub
adc
and
push
call
mov
mov
fnstsw
xor
fstp
and
mov
mov
jo
and
adc
add
and
movs
fwait
adc
pop
mov
pop
fcomp
jne
add
sub
lahf
inc
fisubr
(bad)
cmp
dec
cli
pop
movs
push
dec
into
test
push
in
add
(bad)
xor
mov
dec
(bad)
dec
out
xor
cld
mov
ss
dec
cdq
mov
xor
xchg
call
retf
hlt
gs
jmp
not
mov
adc
dec
adc
popa
dec
cmp
fs
cs
out
add
(bad)
in
mov
mov
and
xchg
inc
add
(bad)
ins
out
add
sbb
adc
std
sbb
(bad)
cvtdq2ps
in
data16
movs
aas
movs
adc
fs
fisubr
dec
std
jno
fild
in
cli
dec
fiadd
std
aaa
arpl
jne
sahf
cli
je
adc
fisub
call
imul
jae
inc
cmc
cmc
sub
mov
pushf
lods
inc
sbb
inc
je
jecxz
pop
sub
mov
stc
xor
mov
rol
dec
popf
jbe
jecxz
stos
leave
mov
mov
bound
xchg
xchg
jo
mov
or
sbb
retf
cmp
mov
sbb
fldenv
ret
mov
rcl
pushf
inc
imul
test
inc
cdq
sbb
clc
(bad)
jecxz
inc
cdq
adc
mov
nop
cmp
retf
stos
push
outs
outs
xor
call
loope
sub
mov
or
out
out
call
inc
sar
in
xchg
cli
leave
cmc
clc
add
xchg
add
inc
and
in
dec
cld
add
into
ret
pusha
mov
xchg
adc
xlat
inc
test
mov
sbb
lea
pop
dec
mov
mov
mov
push
adc
jg
(bad)
scas
pop
and
dec
rcl
jmp
xchg
aam
mov
pusha
cwde
cwde
xchg
outs
cmp
jae
or
pop
and
es
nop
cmp
or
xchg
inc
adc
mov
out
mov
and
mov
sub
push
sub
push
mov
fld
or
push
sbb
cmp
mov
clc
push
int
add
mov
add
add
xchg
shl
rcl
add
push
cmp
addr16
(bad)
cdq
xor
icebp
mov
cmp
pushf
pop
fst
into
lahf
dec
pop
fdivr
sbb
inc
or
arpl
aas
(bad)
and
xchg
mov
loop
out
adc
sti
fucomip
stos
std
imul
push
push
mov
ror
aam
das
popa
jp
js
inc
ja
mov
fcom
sub
sub
pop
xchg
mov
push
(bad)
jp
jns
sbb
stos
push
shl
mov
xlat
movs
fcomp
movs
push
push
scas
ror
lock
ins
and
pop
ins
adc
lock
mov
ins
jg
callw
iret
cmps
retf
lods
(bad)
push
mov
(bad)
dec
enter
cmc
jno
fst
push
nop
xor
sbb
adc
dec
repnz
jnp
fist
mov
sar
jnp
ds
stc
push
dec
sbb
sbb
ja
jb
sub
in
lods
shl
(bad)
icebp
add
or
jecxz
mov
sbb
pushf
in
dec
popf
xchg
rcl
mov
cmp
adc
sub
xchg
push
dec
or
add
xor
int3
(bad)
mov
stos
stos
call
mov
mov
fnsave
cmp
cmps
pop
mov
(bad)
xchg
std
cld
les
adc
push
inc
mov
(bad)
cmp
xchg
sahf
pop
daa
sbb
ss
cdq
jg
adc
xor
les
mov
bound
adc
enter
aaa
ja
xor
retf
adc
cmps
add
in
cld
sti
fistp
in
popf
loopne
(bad)
push
out
out
sub
scas
pop
ins
enter
mov
jg
in
pop
in
test
pop
inc
mov
imul
dec
loope
mov
push
pusha
xor
adc
cli
jmp
and
add
loopne
and
inc
jnp
sbb
outs
jmp
das
and
xchg
cmps
inc
pop
loope
xchg
dec
mov
xchg
js
jp
push
stos
hlt
mov
ret
adc
iret
push
sub
jo
lods
pop
or
xchg
imul
ins
ror
retf
jne
test
fidivr
jns
and
sar
into
cwde
cmp
xchg
lods
cld
push
das
sbb
(bad)
into
mov
or
stos
pop
ja
xchg
and
sub
mov
movs
inc
jnp
xor
xor
mov
aas
jae
outs
mov
ds
iret
scas
rdpmc
loope
lock
jno
pop
adc
cs
jmp
inc
fstp
dec
lods
mov
(bad)
mov
sbb
or
adc
pcmpgtd
cmp
inc
cmp
jae
or
jmp
xlat
imul
mov
push
mov
mov
mov
xchg
sar
aaa
inc
xchg
shl
stc
mov
pop
pop
into
pushf
pop
jns
xchg
jbe
ret
dec
mov
jp
in
(bad)
shr
arpl
push
sbb
xor
sub
pop
(bad)
test
movs
cwde
sbb
jge
add
or
cmps
sbb
add
pop
into
ror
xor
mov
leave
in
and
stos
les
dec
and
mov
push
and
xchg
cmp
sbb
cmp
cwde
mov
mov
inc
and
jle
xor
mov
push
(bad)
jns
fiadd
sub
jge
mov
mov
(bad)
out
mov
mov
jns
lods
leave
out
call
sbb
scas
push
pop
imul
and
jns
and
or
(bad)
xor
pop
in
and
ins
std
jecxz
push
ss
outs
imul
xlat
movs
outs
clc
mov
xor
or
pop
out
xlat
in
jne
push
mov
cmp
pusha
xor
xlat
imul
int
jbe
(bad)
mov
xor
lahf
cli
cmp
push
cmps
ds
inc
pop
push
mov
test
sbb
jmp
sbb
std
jge
pushf
xchg
pop
ret
mov
aad
fdivr
jnp
cmps
pop
add
push
adc
cmps
ins
pop
inc
sbb
enter
stos
arpl
cdq
lods
enter
iret
movs
adc
ja
xor
fld
das
pop
sub
or
(bad)
loopne
pop
pop
ins
mov
stos
or
mov
mov
iret
or
xor
js
or
cld
push
mov
outs
stos
repz
imul
enter
loopne
je
or
test
jne
cmp
or
mov
rcl
cmp
pop
dec
dec
std
das
sbb
push
push
cmovns
outs
call
int3
arpl
neg
mov
sub
jnp
in
mov
ret
jecxz
sbb
and
cmp
aaa
or
fdiv
push
mov
or
and
out
cmp
mov
pop
scas
dec
cmps
inc
adc
fisttp
sbb
popa
mov
fmul
fs
cmps
out
nop
or
inc
cdq
xor
or
lock
xabort
ins
dec
jno
stc
in
mov
adc
iret
es
int
pop
cmp
mov
adc
or
xchg
mov
cmp
and
or
xlat
ins
adc
xor
jnp
nop
add
mov
adc
pop
push
mov
dec
je
inc
pusha
loop
adc
in
icebp
fsubr
repnz
jnp
jo
sar
add
stos
and
pop
xchg
jbe
sub
mov
jmp
dec
test
add
dec
push
or
push
ins
aaa
mov
jl
xchg
cdq
xchg
xchg
pusha
scas
test
jg
hlt
jle
push
inc
sbb
pushf
cmc
cmps
sub
and
push
sub
into
(bad)
stos
or
xor
scas
push
fs
cmp
inc
in
call
pop
mov
pop
jne
sbb
add
sbb
mov
mov
jbe
inc
xchg
push
std
sbb
adc
sti
sar
ret
inc
and
ss
dec
mov
push
or
add
mov
inc
sbb
popf
fdivr
pop
(bad)
sbb
aam
ffreep
lods
mov
ficom
ds
add
std
jb
sub
jecxz
out
jmp
pushw
leave
pop
cld
sbb
addr16
imul
iret
cmp
stc
outs
fwait
dec
push
setne
and
lock
xor
xchg
sbb
or
mov
dec
xchg
inc
push
mov
popa
add
test
xchg
xchg
mov
jo
jne
aas
jno
mov
test
icebp
xlat
clc
pusha
push
push
(bad)
pop
outs
push
push
hlt
stc
push
pop
jg
ror
mov
inc
call
cmp
ja
mov
ins
add
jg
xchg
pop
push
je
mov
retf
aas
push
arpl
fld
test
cmp
cs
aad
push
dec
fisttp
mov
jnp
(bad)
xor
imul
adc
mov
inc
ds
cwde
sub
cwde
push
(bad)
les
push
stos
sub
dec
pop
jmp
jge
shr
aas
gs
(bad)
std
mov
mov
or
jmp
dec
mov
inc
dec
shl
(bad)
cmc
jne
cmps
and
cdq
and
push
lds
lods
push
cmp
cmp
xor
dec
imul
inc
and
fs
sub
xor
push
shr
jmp
jge
int
loop
nop
test
into
adc
lea
pop
int
call
adc
inc
cs
xor
fs
push
sub
stos
mov
xor
fs
ins
leave
pop
jmp
les
push
aas
push
out
xor
sub
popf
cmp
cmp
mov
lds
xchg
jo
adc
xchg
std
arpl
imul
jmp
xchg
imul
mov
push
mov
push
js
or
pop
out
int3
scas
test
xchg
push
ret
pushf
jno
repnz
cmc
adc
push
test
xor
xlat
pop
in
xchg
ret
ds
mov
mov
shl
push
push
ficomp
sahf
push
xor
xor
mov
push
cmp
sbb
jecxz
mov
popf
add
rcl
loop
sbb
mov
or
jl
sar
mov
push
xchg
mov
movs
dec
push
call
cs
or
jle
(bad)
mov
mov
inc
adc
outs
and
sbb
test
jl
pop
test
jecxz
loop
jg
repnz
ja
xchg
xor
(bad)
(bad)
leave
mov
cld
stos
sti
inc
aad
and
add
call
std
in
fisubr
fmul
cmc
ret
mov
xchg
outs
jns
int3
ins
loop
and
fadd
adc
xchg
aas
inc
loopne
mov
daa
(bad)
pop
dec
push
(bad)
cmp
jmp
mov
jne
add
cmp
mov
and
ds
test
arpl
in
mov
and
fbstp
push
ins
xor
popa
mov
loopne
fstp
fst
xchg
or
add
arpl
push
add
push
ret
jbe
jle
int3
repz
jle
xchg
(bad)
xchg
sbb
pop
dec
cs
cwde
in
dec
mov
fild
lds
into
jne
or
xchg
dec
ss
mov
lock
dec
cmps
xchg
divps
lock
test
push
xor
stos
fdivr
push
cld
sub
cmps
or
jmp
(bad)
pusha
and
xchg
sub
leave
pop
inc
or
test
shl
inc
and
sar
mov
mov
or
ins
scas
aaa
cmp
outs
adc
pop
les
ror
test
jnp
jo
pop
mov
mov
mov
sbb
sub
pushf
inc
xor
ret
adc
push
mov
aas
inc
div
push
(bad)
jg
cmp
lods
xor
sbb
int3
mov
nop
xlat
fcomp
mov
movs
cmp
arpl
ss
dec
hlt
mov
scas
mov
mov
cmp
rcr
dec
cmps
add
xor
movs
loope
loope
adc
add
mov
and
sar
xchg
and
stos
repz
dec
mov
jns
sar
inc
lock
sbb
sbb
mov
test
adc
sti
retf
loope
gs
cs
jmp
push
fbstp
inc
fist
rcr
lea
lahf
cwde
jns
inc
and
mov
aad
(bad)
and
jg
jp
jno
rcl
sbb
xor
pushf
outs
push
cmp
aas
cmps
daa
adc
int
ins
mov
sub
std
mov
dec
movs
iret
xor
or
xor
cwde
xor
cmp
pop
sbb
rcl
addr16
push
push
loopne
or
push
adc
out
ins
jne
mov
scas
in
test
pop
mov
pusha
ror
(bad)
out
dec
aad
fist
pop
movs
inc
push
(bad)
jl
out
mov
ins
mov
dec
xchg
in
shl
cwde
mov
nop
pop
bound
sub
ret
popa
out
jg
enter
in
jmp
imul
jb
adc
sar
sub
sub
dec
add
mov
pop
mov
ja
daa
adc
mov
out
or
(bad)
imul
in
in
adc
xchg
stc
aam
aad
loope
xchg
lahf
or
retf
nop
retf
stos
push
stos
test
add
dec
pop
push
pop
test
cs
sub
push
fs
popf
sbb
adc
mov
pop
rcl
test
inc
cmc
mov
and
cdq
mov
xor
ficom
ficom
ins
ja
and
icebp
ds
mov
mov
add
loope
dec
adc
jo
jns
(bad)
scas
sbb
xchg
fldln2
pop
inc
jns
push
neg
jnp
xchg
and
bound
and
pusha
out
jae
movs
popa
(bad)
pop
mov
nop
xchg
or
mov
mov
pop
dec
not
fwait
xchg
lods
ret
mov
mov
gs
mov
out
outs
scas
idiv
arpl
jae
out
cdq
test
xor
adc
out
imul
mov
mov
mov
cmps
jae
jb
add
test
push
cwde
sub
ficomp
mov
div
jecxz
push
mov
aas
xor
fnstenv
inc
push
in
xor
ret
in
or
mov
loopne
and
aad
das
leave
fimul
mov
(bad)
pop
add
inc
add
push
movs
and
(bad)
aad
xchg
clc
and
das
or
sub
(bad)
cwde
pop
mov
or
jae
jg
sahf
dec
shl
xchg
jl
mov
mov
jmp
imul
xor
outs
pop
test
inc
test
fst
and
sub
addr16
push
jmp
cmp
xchg
jecxz
pop
(bad)
jmp
xchg
loopne
ror
repz
(bad)
mov
out
scas
les
out
sbb
dec
arpl
pop
jp
and
je
add
shl
mov
out
loop
popa
cmps
cmp
lds
(bad)
jmp
xchg
mov
and
sti
xor
loopne
push
test
pop
ja
out
mov
push
mov
xchg
or
dec
sub
fldenv
xchg
mov
sti
cmp
fst
out
adc
push
iret
js
scas
call
push
int3
dec
cs
loop
les
add
xchg
or
mov
popa
pop
js
cdq
xchg
(bad)
pop
loop
and
test
cld
jle
test
xor
mov
sub
jle
add
dec
mov
dec
aad
gs
stmxcsr
push
jp
outs
xchg
ret
mov
mov
jno
imul
inc
pushf
or
push
pop
aam
(bad)
icebp
inc
push
sbb
enter
adc
add
std
imul
xor
pop
push
push
or
push
bound
clc
nop
sbb
imul
adc
dec
lock
mov
mov
sahf
mov
movs
jmp
xor
sub
xor
cmp
shl
adc
(bad)
xor
push
popf
jns
fsubrp
call
scas
(bad)
in
ficomp
imul
lahf
push
loopne
push
adc
ins
jp
dec
je
aad
enter
inc
repz
retf
(bad)
rcr
outs
and
pop
and
test
mov
pop
stos
fucom
sbb
jns
imul
xor
cmps
lods
jecxz
adc
clc
or
pop
mov
pop
mov
rcr
cmps
outs
mov
scas
inc
cmp
mov
add
add
inc
cmps
xchg
lods
ins
xchg
jp
push
popf
inc
popf
or
out
xchg
outs
je
(bad)
jl
xchg
call
imul
outs
cmp
add
adc
jno
je
mov
in
sbb
imul
out
addr16
ror
inc
sub
popaw
fwait
sbb
test
inc
daa
mov
inc
push
push
pop
mov
jbe
rcl
test
sub
fsub
jg
adc
pop
(bad)
mov
stos
jge
sub
sbb
pop
xor
cs
or
loop
movs
inc
pushf
sub
stos
repnz
xchg
retf
jg
cmp
sub
xchg
push
jmp
or
cmp
push
mov
out
pusha
in
pop
inc
(bad)
xchg
jns
jp
xchg
or
xor
jne
stc
dec
hlt
sbb
or
cwde
(bad)
push
out
push
ret
test
xchg
ret
dec
movs
mov
les
mov
inc
inc
push
inc
mov
ins
or
aas
pop
xor
pop
push
out
test
jb
scas
cmp
pextrw
inc
mov
es
mov
mov
test
jbe
mov
jb
lea
jb
sub
mul
dec
cmp
push
sbb
jle
jl
dec
cdq
fcom
jp
jne
push
call
pusha
xlat
imul
mov
jae
shl
add
mov
fisub
cmp
scas
or
lock
lea
cwde
sbb
sbb
int
mov
mov
mov
lds
mov
push
cmp
retf
ret
xor
cld
add
dec
retf
jo
push
ret
mov
mov
mov
jle
jae
aaa
xchg
mov
and
jno
jecxz
mov
test
aaa
int
out
int3
fsub
pop
dec
pushf
sub
xchg
xchg
enter
out
push
mov
mov
in
int3
sahf
clc
or
push
hlt
fcom
mov
fidivr
stos
dec
loop
jecxz
cmp
in
in
out
push
or
nop
movs
cmps
sub
sbb
add
pop
cs
pop
imul
pusha
sahf
jmp
repnz
jns
test
push
sub
sbb
addr16
inc
inc
aam
clc
not
lods
imul
mov
out
pop
test
add
cmp
sub
and
fldenv
pop
mov
mov
(bad)
icebp
call
cli
movs
jl
or
push
pop
mov
push
int3
cdq
in
ret
lds
test
repnz
repnz
cmp
jbe
repnz
and
mov
mov
push
(bad)
jo
cmc
fcomp
(bad)
xor
gs
call
bound
push
mov
aam
jle
std
and
push
in
ror
loope
sar
js
outs
pop
and
pop
sbb
xor
pop
jb
ins
xchg
dec
popf
mov
leave
sub
sbb
sbb
nop
push
push
lods
jb
in
sub
xor
jmp
test
sar
loopne
mov
push
shl
adc
xchg
cmp
mov
(bad)
imul
call
(bad)
nop
and
bound
dec
sub
adc
adc
cmps
movs
popa
cmp
fist
xor
sbb
mov
iret
pushf
(bad)
in
mov
xchg
jns
cmp
sub
xor
push
repnz
je
jg
push
paddusb
xchg
jecxz
sbb
mov
out
fild
pop
or
adc
aaa
mov
pop
arpl
jae
imul
shl
jae
and
arpl
push
and
popf
arpl
adc
xchg
ror
shl
jmp
jg
test
inc
jmp
push
imul
in
ins
retf
sahf
sbb
sub
loop
adc
push
cmp
bound
add
mov
idiv
jno
in
movs
call
(bad)
movs
xor
retf
rcl
mov
stos
retf
cmp
lods
sub
push
call
xchg
call
sbb
push
cmp
inc
xchg
aas
jae
inc
cwde
pusha
or
add
in
stos
jns
imul
call
hlt
dec
push
pop
push
popf
neg
dec
fcomp
(bad)
call
xor
and
fisub
dec
das
adc
adc
mov
mov
and
shl
lods
adc
sub
aaa
in
ins
push
jg
jns
dec
xchg
and
jmp
push
ja
in
jno
inc
call
rcr
cmp
pushf
sbb
popa
leave
aad
std
inc
enter
sbb
pusha
xchg
(bad)
in
in
xchg
sub
pusha
fs
push
mov
retf
jae
mov
cli
push
leave
inc
mov
mov
add
fnstcw
inc
popa
mov
jbe
data16
add
cmp
inc
pushf
dec
pop
pop
jns
adc
ja
push
xlat
xor
mov
cdq
test
jle
rcr
xor
mov
ss
jo
dec
loope
out
imul
hlt
popf
test
dec
mov
in
aas
stc
cli
sub
iret
das
mov
push
xor
dec
pop
jb
lods
aad
and
add
out
jne
and
cmc
in
out
cli
push
in
inc
jb
and
sti
pop
push
pop
lods
fs
popa
adc
lods
xchg
ins
mov
stc
retf
arpl
sahf
xor
push
push
fbld
icebp
cmp
sub
adc
cli
rcr
mov
jp
test
inc
jl
pusha
pop
mov
mov
and
mov
int
test
mov
mov
(bad)
(bad)
add
fiadd
cmps
ret
pusha
sbb
hlt
xor
push
je
dec
mov
inc
fimul
sub
lock
push
or
mov
adc
inc
sbb
mov
dec
sti
or
mov
in
test
mov
ins
cli
mov
or
movs
jo
jb
pop
icebp
mov
daa
enter
mov
jo
mov
std
sbb
mov
icebp
sub
jae
xor
xchg
jge
fwait
arpl
test
imul
dec
mov
push
out
cmp
outs
jo
inc
movs
mov
push
sahf
mov
jnp
(bad)
repz
stc
fld
xchg
pop
jmp
mov
enter
sub
iret
sub
pop
add
jl
imul
or
cmp
jmp
xchg
jle
push
icebp
xor
call
bound
add
cmc
lock
jg
test
lds
dec
in
pop
test
jle
push
push
inc
fisttp
mov
ror
aas
sti
aas
xlat
pop
stos
js
(bad)
push
xlat
fimul
xchg
repz
ror
jb
sub
cmp
or
push
add
mov
sub
out
ret
xor
dec
pop
aas
add
mov
mov
loopne
dec
in
push
imul
mov
fs
push
ret
dec
add
xor
or
xor
hlt
fstp
jp
push
adc
mov
dec
push
sub
scas
daa
and
addr16
fldcw
jmp
or
mov
inc
mov
out
and
sahf
push
or
add
mov
sahf
in
xchg
xchg
sbb
cmp
cmp
sti
ins
adc
add
and
inc
scas
sub
loope
mov
mov
add
adc
add
cmp
das
repz
sbb
cwde
int3
movs
mov
cmp
shl
repnz
mov
out
sahf
xor
dec
jp
loope
in
or
scas
lds
cdq
fnstsw
daa
imul
dec
and
stos
stc
aaa
dec
(bad)
test
xchg
xor
(bad)
ds
sub
push
xchg
jns
adc
outs
inc
in
in
inc
dec
xor
inc
rol
pop
repz
add
inc
bnd
es
sub
js
xchg
dec
adc
scas
or
ins
sbb
pop
jbe
out
pusha
xor
fsub
aaa
test
sar
push
sti
xor
imul
jg
sbb
es
sbb
mov
jns
enter
repz
fcom
arpl
cmp
in
std
xor
into
je
es
imul
push
enter
cmp
mov
xchg
fst
call
fidiv
inc
pop
or
push
add
push
fbld
fs
xlat
or
cdq
mov
sub
scas
pop
scas
sbb
shl
stos
cmp
aam
loope
mov
imul
mov
clc
ret
inc
adc
xor
push
daa
xor
dec
mov
aas
js
cmp
fisttp
retf
adc
mov
add
sub
call
and
int3
bound
pop
stos
pop
jns
loop
cmps
mov
scas
pop
cmc
sub
or
push
cdq
stos
inc
fndisi(8087
mov
lahf
rol
push
ins
dec
sbb
fwait
inc
les
popf
movs
push
xchg
cmp
mov
in
mov
and
xor
(bad)
mov
sbb
in
gs
pop
outs
popa
loop
hlt
(bad)
neg
mov
std
iret
test
jae
and
cdq
into
adc
pop
test
(bad)
outs
scas
pushf
add
rcl
or
ins
(bad)
(bad)
dec
fadd
jbe
adc
fadd
into
pop
cmpps
push
sub
mov
int3
mov
fisubr
fdiv
dec
push
xor
xchg
mov
inc
dec
push
jbe
jns
ss
out
enter
movs
mov
xchg
adc
sar
inc
fst
dec
inc
fisub
mov
scas
out
push
xor
movs
outs
cmps
mov
js
loopne
jecxz
es
jb
inc
push
pop
arpl
xchg
fbld
je
das
mov
cs
les
leave
sub
in
iret
cmc
das
mov
stos
push
xchg
and
retf
idiv
fistp
jo
mov
inc
xchg
mov
push
cmp
mov
retf
fisttp
xchg
je
sbb
cwde
loop
loope
fdiv
scas
mov
pop
into
mov
xchg
mov
xchg
mov
shl
or
loopne
aam
push
js
in
jmp
push
stos
push
in
xor
adc
bswap
xor
(bad)
mov
retf
add
(bad)
(bad)
mov
cwde
jecxz
adc
iret
lea
sbb
dec
cmp
jae
xchg
arpl
shl
xor
jo
mov
push
lods
fld
push
xor
cmp
pop
mov
mov
xchg
sbb
das
(bad)
lahf
jno
in
pop
dec
pop
sub
sub
jl
dec
repz
ja
div
lods
fs
cmp
adc
ins
test
out
jo
shl
xchg
cmp
xchg
pop
mov
lock
loop
push
cmps
gs
inc
lock
ficom
scas
fwait
xor
arpl
adc
xor
sahf
sbb
movs
pop
inc
xchg
aam
jp
add
dec
fsub
mov
mov
add
mov
aam
inc
inc
jb
jb
ds
jl
mov
stos
pop
jle
xor
(bad)
fistp
sub
fadd
imul
mov
pop
add
jno
cmp
fld
cmp
repnz
xlat
ret
jno
cmp
loope
or
adc
sub
sub
sbb
or
addr16
sub
bound
dec
sbb
cmp
mov
popf
jecxz
arpl
sub
xor
daa
sub
xchg
xchg
stos
fwait
adc
pop
xchg
in
push
push
dec
pop
xor
das
mov
in
mov
add
mov
dec
fwait
sbb
mov
hlt
mov
mov
adc
lock
clc
cmp
xchg
ins
xchg
add
nop
lea
(bad)
stc
(bad)
mov
nop
and
xor
push
nop
sbb
stos
clc
cmps
add
mov
jl
(bad)
lahf
(bad)
mov
push
mov
dec
xor
(bad)
push
add
and
lds
mov
cs
and
or
popf
adc
cmp
test
test
stos
mov
jl
add
imul
cmps
sbb
inc
dec
cmp
addr16
jmp
(bad)
xchg
jb
ret
dec
out
sub
or
mov
ja
add
pusha
out
sub
mov
xor
jbe
push
mov
rcl
arpl
dec
fidivr
dec
pop
push
inc
cld
imul
jae
mov
pop
out
cmp
push
cmp
mov
xchg
mov
iret
out
pop
add
dec
sub
mov
mov
mov
out
das
(bad)
mov
imul
test
and
sub
test
jb
fiadd
ds
leave
pop
repnz
mov
mov
cs
xor
repnz
das
sub
ja
fmul
jae
pop
xchg
cdq
xchg
or
mov
out
ins
xor
(bad)
dec
jle
aam
xchg
inc
sub
add
dec
dec
inc
call
mov
mov
add
out
dec
xchg
mov
push
(bad)
pop
(bad)
jno
lods
pop
pop
mov
xchg
std
stos
fs
mov
jo
mov
sar
xor
daa
fdiv
stos
inc
ja
mov
adc
cli
retf
fs
ret
int
into
dec
mov
movs
cld
popa
hlt
je
sbb
mov
pop
cmps
retf
jge
je
je
mov
ins
adc
stc
movs
lahf
movs
xchg
imul
fsub
cmp
les
dec
movs
aam
push
mov
dec
lods
cmp
loop
cdq
pop
adc
sbb
xchg
inc
js
in
add
cmp
fwait
cmp
rcr
js
xchg
das
bound
stc
cmc
mov
pushf
mov
mov
push
test
mov
mov
jbe
repnz
xchg
fild
or
lock
in
mov
pop
jecxz
(bad)
leave
push
mov
aaa
cmps
ja
rcl
xchg
call
std
push
xchg
mov
pop
jmp
dec
ret
dec
sub
(bad)
iret
mov
pop
push
sti
adc
add
xor
lods
cmp
loopne
adc
or
in
retf
add
push
sbb
outs
jecxz
test
hlt
sub
dec
loope
sbb
(bad)
jnp
pop
xchg
push
xchg
fcomp
xchg
adc
mov
(bad)
clc
inc
mov
sbb
icebp
pop
cmp
mov
or
and
inc
pop
cmp
ret
add
and
mov
lds
(bad)
cld
fisttp
scas
aas
cmps
divps
loopne
out
sbb
sub
lahf
pop
cdq
add
lds
pop
pop
sub
push
mov
xchg
dec
pop
and
mov
retf
cwde
je
outs
dec
popa
inc
dec
add
mov
(bad)
jl
pop
ds
xchg
mov
loope
lods
sub
lods
lea
pop
and
inc
mov
push
call
xor
out
push
ja
mov
(bad)
popa
xchg
lods
add
mov
adc
sub
addr16
adc
dec
adc
mov
call
inc
nop
pushf
scas
push
das
popf
inc
aad
retf
pop
mov
sti
xchg
mov
and
hlt
xchg
jne
cmc
mov
pop
jl
mov
ret
outs
movs
(bad)
mov
imul
in
test
or
test
scas
fidivr
ror
or
sub
jb
test
stc
ja
push
dec
lock
jmp
push
mov
fiadd
adc
fmul
pushf
and
sub
push
add
loope
inc
sbb
or
test
adc
clc
sub
cmps
daa
(bad)
clc
xor
movs
sbb
cli
int
xor
mov
cmps
adc
or
cmp
mov
sub
mov
popf
js
jne
mov
arpl
sahf
mov
push
sbb
cwde
leave
iret
pushf
aam
xchg
cs
jns
inc
jmp
inc
cmp
sub
stos
popa
sbb
push
iret
mov
xor
sub
adc
mov
fmul
mov
(bad)
(bad)
int
adc
mov
sar
das
in
lea
js
push
test
fstp
ss
rol
or
mov
dec
(bad)
or
and
fist
fistp
xor
imul
test
fisttp
mov
jmp
in
shl
xor
pop
int3
mov
lea
(bad)
movs
popf
xchg
mov
cdq
adc
jno
movs
bound
cld
xchg
js
add
lods
nop
push
fcmovnu
and
lahf
push
js
idiv
pusha
cdq
sbb
jno
push
lahf
push
pop
out
push
push
jmp
neg
inc
pop
pop
test
jmp
cmp
ret
cmps
add
adc
(bad)
dec
dec
cli
sahf
pop
adc
hlt
jmp
pop
test
outs
pop
push
mov
aaa
stos
xchg
inc
ja
or
xchg
pop
xchg
enter
je
sbb
in
jae
out
mov
add
cmp
addr16
or
and
push
push
adc
clc
dec
loopne
ret
mov
dec
push
retf
mov
int
xchg
inc
cmc
fstp
push
push
and
sub
or
stc
cmp
push
dec
push
mov
jno
sub
push
fucomp
xchg
arpl
out
push
pop
xchg
mov
push
or
loop
ins
xor
test
add
mov
jp
aaa
shr
mov
jnp
xchg
mov
lahf
and
cmp
add
loopne
jg
dec
inc
imul
aad
leave
dec
adc
xor
movs
dec
inc
add
das
mov
ficomp
mov
sbb
fisub
mov
mov
jnp
retf
aam
push
pop
jb
hlt
sub
std
mov
inc
in
mov
scas
xchg
adc
fld
scas
ss
inc
das
mov
icebp
mov
fcmovb
xchg
sbb
jnp
arpl
lahf
fistp
xor
lds
and
sbb
scas
(bad)
std
sbb
jne
add
rcl
mov
mov
sbb
sbb
scas
push
xor
test
jno
test
add
std
push
xlat
test
nop
cli
push
out
jnp
pop
add
stos
mov
shr
gs
iret
adc
test
sbb
push
pop
mov
lds
rol
in
or
mov
pop
scas
mov
js
xor
push
mov
mov
mov
int3
stc
ret
(bad)
ins
popa
push
cmp
fmul
push
in
or
in
push
push
cld
test
mov
jo
aaa
inc
jle
mov
lea
(bad)
mov
scas
and
out
jbe
mov
adc
je
in
arpl
pop
push
inc
jo
push
fbld
adc
push
ins
and
sub
push
sub
xchg
cmp
outs
mov
and
sub
mov
push
jne
inc
stos
pop
daa
xchg
pop
dec
test
aam
in
jo
out
sub
jbe
cmp
mov
xchg
lods
sub
mov
inc
sbb
mov
dec
loop
sti
mov
sti
dec
shr
adc
test
(bad)
push
shl
adc
mov
jbe
loopne
xchg
pop
mov
jge
scas
arpl
xchg
fiadd
lock
int3
add
mov
push
mov
mov
jp
daa
es
pushf
out
cmc
pop
out
and
nop
xchg
test
cmp
mov
int3
ror
out
inc
aad
in
rol
cmp
sub
aaa
in
adc
add
jge
mov
fadd
das
jp
jnp
dec
sbb
pop
icebp
cmp
cmp
dec
push
jns
xor
jle
cdq
mov
and
jg
add
xor
stos
mov
or
jecxz
xor
dec
adc
mul
not
jb
aas
out
fadd
rcl
inc
jecxz
in
es
or
ror
imul
sbb
int3
fld
xor
or
(bad)
fld
dec
mov
xchg
fsubr
or
cmps
ja
stos
push
jne
xchg
mov
stc
cmp
lods
sbb
add
ins
test
mov
adc
stc
stc
dec
fidivr
addr16
dec
in
cli
mov
imul
inc
dec
call
sub
and
ret
les
mov
jmp
adc
inc
pop
sahf
mov
lods
push
repnz
cmc
push
jl
jmp
rol
push
adc
mov
push
aaa
mov
or
and
or
sub
adc
mov
rcl
xchg
mov
mov
inc
pusha
and
fstp
int
sub
mov
int
(bad)
out
(bad)
std
add
lahf
aaa
out
xor
jns
pushf
popa
jmp
mov
fmul
adc
xchg
daa
clc
imul
add
pusha
mov
jmp
inc
sbb
dec
jns
dec
or
inc
cmp
push
lock
sbb
dec
js
sbb
pop
cmp
xor
or
neg
bound
xchg
cmp
and
loope
and
adc
mov
sub
inc
add
fidiv
loop
add
jne
fsub
cdq
mov
retf
loop
and
(bad)
jmp
cmp
or
and
mov
mov
(bad)
ss
mov
xchg
not
and
jmp
jp
xor
mov
sbb
jno
icebp
xor
movs
dec
jns
retf
cli
dec
dec
test
push
push
and
xor
mov
pop
ins
push
mov
pop
and
mov
int3
sbb
xchg
xchg
xchg
adc
bound
pop
rcr
frstor
enter
int3
test
(bad)
xor
push
aam
jbe
call
test
pop
das
and
fwait
mov
in
cmps
test
sar
inc
or
ja
outs
mov
pop
push
ret
jmp
sbb
ds
add
sbb
sub
sahf
dec
sub
sbb
cdq
mov
(bad)
xlat
(bad)
mov
mov
sbb
mov
iret
icebp
in
mov
xchg
jp
push
rcl
(bad)
jnp
mov
ds
in
or
rcr
pop
cmp
gs
fcomp
js
int
push
cs
repnz
outs
dec
ret
lds
and
inc
push
pop
jmp
stos
add
xchg
ficomp
mov
pop
sahf
add
pop
mov
hlt
leave
out
mov
or
cdq
adc
mov
mov
mov
test
or
popf
mov
mov
add
cmp
imul
cmp
jne
mov
dec
fld
mov
jg
sbb
or
mov
sar
(bad)
fistp
ret
movs
adc
mov
fiadd
gs
hlt
xchg
pusha
cmp
loopne
pop
ret
stos
icebp
lds
rcl
mov
xchg
mov
cmps
inc
or
push
icebp
repz
add
shr
xchg
aad
dec
mov
push
pop
test
mov
mov
scas
mov
sbb
jmp
sbb
fmul
mov
cmp
mov
mov
mov
mov
stos
cmp
test
and
lock
or
out
jne
sti
adc
ror
xor
icebp
mov
mov
push
ja
je
outs
xchg
out
cmps
cs
push
push
imul
xor
retf
sub
adc
xor
in
fwait
int3
sti
pop
adc
fadd
mov
arpl
dec
into
fidivr
push
enter
loope
(bad)
jns
fimul
inc
mov
jno
rcl
cdq
dec
sub
movs
rcl
rcr
ins
inc
fadd
jno
sti
sti
push
out
and
cmps
xchg
jbe
and
div
sbb
mov
pop
pop
in
dec
(bad)
cmp
pop
push
push
movs
arpl
call
in
pop
jecxz
ja
xchg
sar
bound
repnz
(bad)
out
test
out
(bad)
pop
jecxz
sub
push
pop
push
mov
lock
loopne
dec
repnz
jge
(bad)
popf
jo
neg
add
adc
add
test
inc
and
out
push
or
fsub
pusha
mov
retf
add
cmp
aaa
aam
or
mov
mov
(bad)
xchg
or
retf
jmp
sub
jns
mov
pusha
mov
fimul
pop
fwait
nop
mov
cmps
jno
push
or
jno
and
stos
mov
mov
or
leave
xchg
add
pop
sbb
in
aas
aas
add
or
test
pop
adc
mov
iret
cld
add
shl
sub
test
cli
mov
inc
xor
pop
ss
stos
inc
dec
jmp
out
pop
push
ins
les
int
jle
sar
pop
lds
lock
out
mov
or
int
pop
ret
mov
pop
les
out
icebp
xchg
aam
and
mov
sti
xchg
push
mov
outs
fsubr
jno
xor
xor
push
push
inc
movs
loop
outs
and
cmc
mov
fidiv
and
in
mov
repnz
jle
(bad)
test
add
outs
popf
int3
clc
inc
loopne
xchg
push
jmp
nop
or
jmp
cmp
loope
adc
or
jae
adc
mov
movs
xchg
outs
sbb
add
jb
jne
xchg
(bad)
mov
lds
retf
retf
push
cmps
out
sahf
and
xchg
inc
mov
push
jmp
rcl
bound
lahf
mov
js
inc
or
pusha
dec
push
nop
adc
pop
mov
add
(bad)
shl
pop
outs
bound
cld
test
enter
mov
pop
enter
add
(bad)
xchg
daa
jne
mov
mov
or
push
jae
sbb
jae
inc
sub
mov
or
in
xor
jmp
push
mov
shl
jno
mov
push
and
mov
inc
sbb
scas
and
mov
aaa
gs
push
cmp
jmp
div
das
jge
adc
xchg
(bad)
nop
int3
fisttp
test
ret
and
push
sub
pop
inc
mov
push
std
xor
or
(bad)
and
das
loop
dec
inc
ffreep
pop
outs
ror
mov
and
mov
arpl
pop
icebp
dec
in
pop
imul
ins
and
jnp
jb
movs
inc
inc
into
fs
pop
mov
(bad)
add
(bad)
xor
cmp
je
mov
push
jbe
cmp
inc
xchg
mov
add
and
shl
bound
mov
test
cmp
call
mov
leave
and
(bad)
adc
mov
jns
inc
cmps
aad
ja
jp
call
mov
adc
jl
ret
push
rcr
jb
das
and
jmp
ret
pop
pusha
xor
aad
push
mov
ror
adc
sar
xchg
push
adc
xchg
lahf
ds
xchg
and
xchg
sbb
cdq
push
stos
bound
push
xchg
shl
sbb
aad
stc
cli
iret
and
or
push
adc
xchg
out
stos
sub
dec
push
inc
out
nop
sbb
into
push
jae
loopne
ds
pushf
daa
mov
xchg
lods
jae
shl
pop
pop
sub
pop
xor
and
xchg
jne
adc
pop
or
pushf
sbb
xor
push
cs
outs
xchg
cmp
xor
fwait
mov
xchg
adc
das
add
popf
and
push
add
xchg
in
lock
inc
xlat
add
loope
fcmovnbe
xor
je
(bad)
js
or
stos
cmp
xchg
mov
(bad)
gs
in
inc
add
retf
js
imul
cmc
push
stos
mov
addr16
imul
push
adc
mov
popa
cld
dec
(bad)
xchg
cwde
(bad)
dec
dec
or
and
pop
cs
push
shl
stc
mov
and
add
pusha
gs
aam
push
mov
xchg
repnz
xchg
sub
pop
and
pop
xchg
dec
and
lds
adc
cmp
pusha
outs
push
fs
sbb
(bad)
jo
xchg
pop
cmp
lea
daa
xchg
inc
aaa
cmc
imul
add
in
push
sub
fild
jg
jbe
xchg
cdq
or
mov
pop
dec
jnp
inc
inc
add
arpl
mov
and
and
cdq
add
lds
and
add
fidiv
jb
xchg
lea
mov
and
(bad)
out
shl
mov
lahf
test
sub
xor
sub
inc
mov
fwait
mov
jbe
cmc
push
mov
push
int3
aad
xor
js
mov
lock
push
add
pop
lock
repnz
cmps
out
and
in
mov
call
jno
mov
xchg
cmps
mov
les
sub
and
stos
push
sbb
fdivr
jmp
div
xchg
mov
cwde
xchg
push
(bad)
test
dec
pop
fst
mov
out
sub
xchg
popf
and
popa
cli
pusha
pop
lock
retf
xlat
shr
jns
push
imul
(bad)
ret
dec
es
pop
rcl
adc
cmps
xor
ret
ins
test
aas
scas
jle
je
mov
mov
mov
xor
push
imul
push
mov
ret
stos
mov
cmp
xchg
sub
ficomp
push
int3
xor
adc
int3
popf
jbe
push
fnstsw
inc
and
stos
mov
or
loopne
cmps
fst
add
push
rcr
pcmpgtb
daa
mov
sub
jae
mov
adc
ds
mov
jle
ret
xchg
ins
adc
jae
sbb
and
push
std
jg
cdq
addr16
jecxz
jmp
xchg
stc
inc
adc
jl
inc
test
(bad)
sahf
and
aaa
pop
mov
movs
inc
pop
icebp
adc
cmp
xor
adc
jge
jbe
jecxz
out
fsubr
mov
cmp
fld
arpl
dec
not
jnp
stc
fiadd
(bad)
dec
cmp
fistp
sbb
into
das
dec
lahf
ret
and
retf
adc
sbb
mov
outs
popa
bound
in
sbb
addr16
ins
xchg
dec
mov
imul
cli
push
dec
repz
xchg
xor
mov
lods
mov
push
inc
clc
std
push
or
repnz
ins
mov
pop
leave
mov
mov
sbb
adc
jnp
out
ins
xchg
mov
movs
jmp
sahf
and
imul
xor
cmp
pop
mov
pop
leave
mov
push
rcl
mov
xchg
or
scas
cmp
push
dec
sub
ins
aaa
les
jmp
pop
mov
xchg
sub
scas
aaa
aas
clc
movs
add
mov
adc
cmp
sub
xchg
bound
cmp
mov
inc
fidivr
fcomp
or
xchg
inc
cwde
ins
or
push
mov
and
pop
jmp
adc
out
das
inc
and
inc
(bad)
fmul
xor
cli
mov
rol
jne
or
push
sub
movs
call
outs
retf
dec
push
adc
retf
je
dec
pusha
inc
popa
scas
cmp
jg
push
pop
jo
push
jp
push
int
int
jae
cmps
add
clc
(bad)
seto
out
mov
stc
sbb
sbb
cs
push
data16
lods
xor
mov
xor
cmps
jl
cmps
push
ss
inc
fdiv
das
js
pop
mov
in
ja
jp
or
das
sar
ffree
dec
mov
dec
arpl
xchg
inc
mov
movs
test
ins
cmps
add
cli
nop
mov
adc
fs
ja
cld
call
sar
neg
cwde
cwde
xlat
mov
fidiv
mov
pop
aam
jnp
mov
ja
jmp
fs
jp
(bad)
loope
push
shl
fs
(bad)
int3
and
in
jle
xor
push
dec
pop
int3
loopne
cmp
shl
jmp
xchg
or
repnz
sbb
mov
mov
ror
or
mul
stc
cmp
hlt
cwde
dec
mov
push
jecxz
cmps
xchg
aas
pop
outs
fmul
push
jne
out
and
std
and
faddp
(bad)
sahf
arpl
ins
dec
les
repnz
iret
jno
mov
add
pop
int
movs
adc
or
stc
cmp
xor
jmp
jnp
and
dec
test
push
sub
jmp
xchg
and
fs
push
xchg
lods
sub
(bad)
mov
jns
ret
ja
sbb
xchg
in
aas
cmp
mov
nop
fimul
test
test
sti
adc
(bad)
retf
xor
xor
mov
ja
imul
shl
push
mov
ja
lods
sub
mov
fnstcw
inc
and
cs
repnz
mov
add
dec
in
push
push
sub
mov
push
add
add
mov
fild
mov
mov
xchg
cmc
jge
fsub
jl
les
pop
jns
ja
in
xchg
iret
aas
cmps
sub
pushf
shl
mov
inc
jl
in
retf
pop
in
inc
retf
dec
inc
push
(bad)
cmps
(bad)
mov
jno
jg
les
dec
sar
mov
mov
test
jnp
sbb
mov
test
retf
mov
mov
sbb
jae
shl
arpl
mov
test
retf
fs
movs
mov
mov
inc
cmps
call
sbb
push
(bad)
pop
sub
xor
mov
int3
jo
pop
shl
mov
movs
fimul
stc
call
jmp
or
out
xchg
out
add
jle
push
out
fsubr
ret
push
(bad)
mov
lahf
retf
int3
mov
cld
mov
imul
add
xchg
es
or
pop
dec
cmps
xchg
in
cmps
dec
push
movs
cmp
popf
das
dec
rol
pcmpeqw
in
xchg
iret
cwde
mov
cmp
fldpi
adc
jp
mov
xchg
xor
shr
outs
test
pop
cmp
jno
fwait
jl
adc
and
dec
cwde
jmp
sub
mov
into
pusha
dec
test
cmp
adc
rep
jne
(bad)
cmps
jp
shr
cmp
ficomp
cmps
movs
cdq
add
sbb
in
inc
sub
jecxz
sbb
(bad)
mov
frstor
xor
cs
push
push
or
jp
retf
pop
js
sbb
lahf
retf
push
test
js
std
jmp
pop
fist
dec
jno
imul
xchg
das
or
add
mov
sbb
shl
mov
cs
aaa
jns
call
xchg
fucomip
mov
inc
ror
dec
push
mov
push
repnz
ins
cmp
ss
inc
inc
shr
dec
clc
cmp
mov
mov
cwde
sbb
xchg
ss
sbb
loopne
adc
dec
enter
or
xor
in
pop
jg
pop
inc
(bad)
adc
jl
fdivr
push
jb
xor
movs
mov
hlt
sbb
std
jns
repz
inc
je
inc
bound
jmp
icebp
add
jo
int
ins
test
hlt
dec
cli
not
mov
fstp
daa
mov
cmc
lea
mov
pushf
call
dec
sbb
leave
fcmovnb
fs
inc
adc
jmp
iret
mov
and
sub
(bad)
aas
gs
ins
pop
pop
mov
xor
jns
icebp
je
jns
imul
xlat
jo
jge
push
mov
inc
popf
stos
adc
inc
mov
pmullw
(bad)
sar
jmp
sbb
lods
mov
mov
add
jge
test
adc
add
push
pop
cdq
es
adc
das
aaa
lods
aaa
stos
aam
ins
scas
mov
adc
outs
fxch
mov
lahf
inc
iret
jmp
mov
cli
icebp
retf
out
pop
xlat
into
fld
test
inc
rol
sub
int
outs
jg
add
mov
mov
in
test
xor
in
mov
push
outs
hlt
outs
ds
call
mov
push
jp
repz
shl
inc
jl
mov
aad
clc
jae
push
ret
std
lds
into
loopne
mov
push
stos
cmp
mov
pop
(bad)
std
pop
fucomi
sbb
rol
mov
pushf
in
cmp
xlat
mov
fdivrp
jmp
or
add
dec
inc
fisttp
fbld
rcr
cmp
rcr
pop
mov
or
call
add
jne
loopne
xor
mov
sahf
aad
loop
fistp
jmp
imul
sbb
push
jmp
xor
inc
mov
pusha
idiv
dec
xchg
push
sahf
mov
int3
rep
mov
ins
sub
aaa
(bad)
push
mov
dec
jo
loopne
pop
jcxz
clc
lds
adc
push
cmps
sti
mov
cmps
jecxz
and
add
pop
or
push
pushf
aad
xchg
mov
lock
or
xor
jp
xor
add
daa
inc
sub
stc
loope
pop
lods
retf
xor
xor
leave
sbb
cmp
(bad)
loopne
cmc
je
inc
in
jmp
lods
shl
test
push
xchg
inc
lods
mov
out
retf
stc
sbb
sar
cmp
mov
mov
stc
or
mov
jl
div
push
aas
sbb
aas
les
in
pop
cmp
movs
cmp
in
dec
add
pop
inc
pop
xor
sub
mov
(bad)
mov
cdq
imul
(bad)
lods
movs
jp
or
pop
sar
outs
or
mov
or
les
gs
and
ret
push
add
cmp
or
data16
fsubr
push
jae
inc
lahf
ret
xchg
push
dec
shl
xchg
mov
ins
mov
cld
dec
cli
stos
test
cs
jb
popa
sub
loope
das
stos
aad
loop
jge
leave
mov
ins
dec
mov
jnp
movs
mov
jp
mov
cmp
test
daa
stos
clc
sar
aaa
ret
dec
aam
jne
mov
or
test
stos
jmp
or
xor
(bad)
mov
sahf
mov
div
mov
push
cld
cmp
push
xchg
add
jae
shl
adc
adc
jge
jl
sub
vpcmpeqd
pop
and
cld
fisttp
push
in
mov
push
cmps
pop
and
rcl
stc
out
dec
fxch
pop
jmp
mov
xchg
data16
test
xchg
mov
(bad)
lea
xor
pop
jo
pop
xor
mov
and
sbb
cmp
xchg
cmp
dec
dec
sbb
movnti
nop
neg
add
dec
push
or
push
retf
in
pop
retf
pushf
xlat
pusha
mov
mov
fadd
sbb
jp
pop
jo
adc
movs
xor
or
mov
xchg
movs
enter
aam
mov
out
out
fsubr
ins
inc
fbstp
cmps
pop
adc
ins
stc
jp
cmp
imul
xor
dec
sbb
push
mov
mov
pop
imul
mov
lahf
cmp
mov
or
push
pop
shl
jecxz
hlt
mov
pop
stos
fiadd
push
dec
fbld
mov
cwde
std
test
ffreep
cmp
aad
inc
push
loop
jmp
cmps
gs
push
inc
ret
sbb
out
cmp
mov
xchg
icebp
(bad)
ins
test
(bad)
imul
adc
xor
or
push
cli
in
cli
loopne
jmp
inc
(bad)
js
les
call
call
iret
outs
adc
(bad)
jbe
or
push
xor
(bad)
xchg
sbb
sahf
sbb
cmps
push
test
pop
clc
mov
dec
cmc
xor
add
cmp
fild
mov
and
lock
lea
push
test
(bad)
call
loop
jge
test
icebp
jge
in
mov
jns
push
sub
fs
mov
push
sbb
outs
adc
lods
mov
in
test
fcmovu
fild
push
dec
lahf
ror
or
xor
cli
mov
into
cmp
dec
scas
stos
pop
inc
add
adc
out
sti
sbb
in
bound
js
cmc
out
clc
std
into
sar
mov
xchg
mov
sbb
(bad)
retf
pop
push
push
(bad)
call
scas
mov
aas
cmp
inc
xor
leave
pop
xchg
and
cs
cmp
(bad)
jg
test
data16
movs
out
test
icebp
(bad)
mov
int
ins
pop
cmps
mov
retf
sbb
pop
stos
test
test
mov
sub
pop
(bad)
into
dec
sub
das
(bad)
mov
mov
dec
int
sbb
div
pop
push
int3
xlat
pop
add
ins
stos
push
add
push
mov
cmp
cmps
mov
inc
or
pop
js
mov
push
add
pop
cdq
cli
dec
mov
stos
retf
loopne
jl
ds
mov
push
dec
cdq
push
(bad)
mov
cld
cld
mov
add
enter
mov
(bad)
iret
js
adc
fs
loope
mov
mov
addr16
cmp
loopne
add
or
hlt
retf
dec
sbb
add
add
sahf
fist
jle
nop
inc
cmc
lea
sti
repz
pop
and
xchg
cmps
fs
and
sahf
retf
xchg
fs
cdq
outs
(bad)
out
ins
icebp
mov
in
jns
inc
in
or
cli
dec
push
stc
jb
std
bound
sub
push
sub
xor
inc
mov
push
lahf
retf
xor
dec
sub
(bad)
pop
outs
int3
mov
pop
mov
sbb
add
dec
adc
scas
xor
dec
cmp
es
je
ret
daa
mov
xchg
add
xlat
rol
push
fs
lods
mov
(bad)
ret
clc
bound
into
call
xor
movs
scas
and
std
or
clc
mov
popf
dec
mov
psubd
jl
aaa
inc
dec
retf
and
mov
out
fisub
mov
and
fiadd
in
push
add
adc
sub
mov
or
push
adc
pop
cld
push
out
add
pusha
or
std
retf
adc
sub
xor
dec
repnz
xlat
sub
aad
sub
je
(bad)
stc
cld
and
push
cmc
outs
pusha
or
and
and
test
cmp
mov
jl
mov
nop
mov
push
cmp
sub
and
push
add
fadd
xor
(bad)
cmp
clc
pop
shr
cmp
loop
(bad)
lock
inc
ret
jnp
xchg
test
lock
dec
out
cld
pop
and
dec
in
jecxz
xor
cli
aam
adc
jae
pop
leave
aas
jnp
not
sub
das
sar
mov
push
dec
and
cmps
fsub
sub
jle
shl
mov
and
into
push
adc
fwait
jbe
add
data16
addr16
lods
int
jmp
jbe
inc
ins
jmp
cmc
add
dec
xor
pop
xchg
dec
jb
aam
retf
sub
je
retf
repnz
dec
add
dec
cmp
sti
enter
and
ins
or
fistp
ja
bound
cmps
mov
inc
push
fnstenv
pushf
jg
int
test
lods
inc
pushf
cmp
test
inc
add
and
hlt
add
jmp
ja
js
adc
sbb
cmp
add
xchg
adc
push
dec
push
dec
cmp
int
or
adc
mov
hlt
sbb
or
retf
call
sbb
dec
sahf
pushf
xchg
add
add
and
xchg
iret
shr
fs
lock
ins
xor
pop
ret
popa
and
retf
cmp
clc
xchg
imul
rcl
jmp
jp
jo
dec
fwait
out
call
mov
pusha
push
sbb
dec
cmps
inc
mov
sub
push
inc
pop
aaa
mov
sbb
xchg
(bad)
stos
(bad)
xchg
(bad)
xor
dec
sub
mov
push
ins
push
mov
adc
mov
hlt
stc
fadd
jnp
sbb
jb
xchg
test
movs
pop
sub
ds
and
pop
or
rcr
jne
mov
pusha
sub
inc
stos
addr16
xchg
scas
in
xor
and
repnz
js
inc
jl
cmp
call
stos
fcom
mov
sub
cmp
test
add
adc
mov
sub
cdq
jg
cmp
lds
add
lds
pop
(bad)
outs
in
push
fld
cs
push
jb
popf
jmp
jl
dec
xchg
sbb
adc
xchg
out
mov
test
repz
out
in
adc
ins
cmc
xor
in
lods
cli
div
cli
xchg
push
ficom
neg
mov
add
movs
bound
loop
or
and
dec
sar
pusha
sbb
pushf
je
aaa
jb
adc
jmp
xchg
add
jl
mov
mov
pop
xchg
sub
sbb
and
retf
loop
ret
sti
or
clc
xchg
lahf
mov
dec
or
or
mov
sub
dec
inc
mov
mov
retf
jmp
rcl
pop
dec
ror
mov
mov
pop
adc
ds
push
(bad)
test
and
or
xchg
(bad)
push
nop
xchg
imul
fild
mov
(bad)
iret
arpl
jo
cli
shl
jmp
mov
leave
and
and
pusha
xlat
call
mov
jne
sub
xrelease
xchg
sbb
jle
shl
adc
or
xor
lods
mov
movs
and
test
cs
sub
inc
mov
inc
lds
sbb
sti
xchg
push
ret
outs
jb
sub
push
mov
push
lds
outs
shr
mov
call
and
add
imul
sti
repnz
cmp
or
pop
dec
scas
sub
ret
aam
in
lahf
shr
idiv
xchg
mov
mov
jp
fidiv
and
pushf
int
in
in
inc
jns
mov
and
jne
pop
shl
data16
mov
shr
add
test
ds
js
push
loop
push
mov
push
sti
aas
and
enter
pop
imul
out
leave
bnd
lock
cmp
ret
js
aas
into
mov
and
rcl
leave
leave
in
adc
xor
sub
jl
add
mov
in
add
ror
push
mov
imul
jl
in
lods
mov
dec
idiv
std
loope
mov
and
mov
popa
imul
push
cs
sti
stos
arpl
mov
xchg
ins
jge
fld
adc
enter
adc
xchg
fmul
sar
addr16
lock
out
cwde
xchg
adc
or
in
rcr
(bad)
push
adc
jl
daa
jg
sub
bound
lock
adc
out
sub
ins
arpl
add
fidiv
xor
retf
sbb
xchg
pop
and
push
mov
and
add
loopne
pushf
xlat
dec
mov
add
or
repnz
push
lods
test
inc
loope
dec
cmp
mul
and
aas
push
pop
sub
in
arpl
pop
xor
cmp
mov
inc
inc
pop
inc
xchg
(bad)
jge
arpl
xchg
div
push
mov
or
fist
pop
sbb
pop
and
stos
aad
into
cdq
ret
mov
cmp
push
push
xchg
mov
mov
xor
and
rol
xchg
sub
shr
and
inc
stos
or
fild
inc
scas
xchg
push
xchg
retf
inc
iret
cmp
fisubr
adc
mov
mov
out
xor
neg
test
mov
push
or
ror
dec
push
or
loope
and
cs
jg
das
sbb
retf
movs
mov
push
adc
xor
(bad)
lahf
cmc
imul
daa
jmp
adc
jnp
cmp
loopne
movs
repnz
scas
(bad)
push
and
lahf
pushf
add
ins
xchg
cdq
mov
add
dec
jns
mov
adc
sbb
push
or
fsub
lods
fild
ja
dec
out
in
dec
push
out
fs
ss
outs
sahf
sub
out
ja
or
into
adc
jb
add
adc
test
fmul
pushf
mov
jo
int
or
out
dec
loopne
aam
push
enter
gs
lods
mov
out
mov
mov
je
and
outs
int
(bad)
mov
xor
je
mov
xchg
scas
inc
int
mov
pusha
stc
pop
xchg
xchg
popa
stos
pusha
cmp
jl
adc
or
cs
fpatan
cmp
scas
in
adc
movs
mov
mov
cdq
lock
fistp
hlt
xchg
inc
or
xor
mov
pop
mov
clc
das
or
data16
scas
cmps
adc
int
leave
ins
sub
popf
js
aaa
stc
lock
dec
repnz
and
call
push
pop
sub
mov
and
das
nop
outs
popa
dec
aam
popa
sar
pop
stc
xor
sbb
icebp
sbb
(bad)
mov
repz
xchg
pop
das
loopne
loop
popa
imul
mov
into
aas
mov
cmp
xchg
cmp
lods
xchg
jp
int
adc
add
push
push
mov
mov
fidivr
sti
mul
enter
mov
push
xor
add
dec
adc
push
cwde
pushf
adc
mov
pop
xlat
inc
jnp
mov
(bad)
dec
and
jmp
inc
cmp
outs
adc
add
sbb
sbb
jbe
in
adc
or
jo
mov
and
lods
xor
mov
(bad)
cmp
call
xchg
xor
ret
cmp
xchg
std
push
push
sti
mul
sub
or
aad
test
adc
cld
push
xchg
popf
shr
icebp
inc
jge
pop
scas
lea
ret
(bad)
cmp
sbb
in
jge
add
idiv
mov
int3
daa
pop
mov
adc
imul
jl
add
add
or
jg
push
push
addr16
nop
cmp
retf
add
sub
pop
movs
and
jae
dec
mov
adc
add
jno
dec
out
bound
inc
das
imul
ror
mov
dec
jbe
mov
bound
repz
xor
ds
lods
adc
(bad)
jl
xlat
scas
dec
pop
fdivr
xor
inc
stos
iret
adc
sub
and
gs
or
outs
test
(bad)
mov
inc
mov
call
fisttp
clc
dec
cmps
and
and
jmp
movs
jne
jl
dec
pop
outs
jmp
popf
and
and
xlat
mov
xchg
int3
jns
jno
ret
das
in
mov
sar
push
xlat
jo
int
inc
mov
inc
xor
xchg
mov
adc
xchg
add
clc
test
push
imul
and
scas
daa
popa
push
push
or
push
xor
(bad)
enter
xchg
rcl
cdq
or
fld
sbb
adc
pushw
sbb
mov
outs
icebp
push
jb
imul
inc
or
pop
ins
loop
imul
jb
imul
inc
test
dec
shl
into
(bad)
add
jo
cmc
xor
xchg
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
in
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
loopne
xchg
dec
test
mov
mov
lahf
jmp
(bad)
push
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
push
test
mov
mov
lahf
enter
adc
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
ret
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jecxz
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
fnsave
inc
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
out
pushf
mov
mov
mov
test
mov
mov
lahf
out
fwait
mov
mov
mov
test
mov
mov
lahf
in
popf
mov
mov
mov
test
mov
mov
lahf
out
fbstp
inc
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
in
shl
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
out
fbstp
inc
test
mov
mov
lahf
fisttp
add
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
fimul
sbb
mov
loope
push
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
loopne
cli
mov
mov
mov
test
mov
mov
lahf
loop
loope
push
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
fmul
sbb
mov
retf
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
sti
mov
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
loop
jmp
adc
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
fnsave
inc
test
mov
mov
lahf
in
loopne
adc
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
out
shl
ins
test
mov
mov
lahf
out
shl
push
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
ror
mov
test
mov
mov
lahf
ror
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
loop
int3
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
jecxz
out
push
mov
mov
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
ret
mov
mov
mov
test
mov
mov
lahf
int3
mov
mov
mov
mov
test
mov
mov
lahf
loop
int3
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
loop
adc
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
in
jmp
test
mov
mov
lahf
out
jmp
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
loop
out
push
mov
mov
test
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
cwde
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
popf
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
jmp
outs
mov
mov
test
mov
mov
lahf
jmp
jmp
outs
mov
mov
test
mov
mov
lahf
jmp
jmp
cmp
or
std
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
out
outs
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
loopne
outs
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
sahf
mov
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
loopne
outs
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
ror
sbb
xchg
mov
lahf
call
mov
mov
test
mov
mov
lahf
jecxz
in
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
in
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jecxz
in
mov
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
repnz
mov
mov
test
mov
mov
lahf
ror
sbb
xchg
jmp
sbb
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
int
sti
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
ror
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
loopne
sub
cs
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
int
sbb
mov
mov
lahf
loop
in
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
loope
cmp
sbb
mov
jmp
push
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
dec
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
loope
cmp
or
test
out
mov
mov
mov
test
mov
mov
lahf
loop
loope
cmp
and
mov
loope
sbb
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
loopne
sti
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
fwait
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
loopne
push
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
jmp
xchg
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
jmp
shl
inc
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
pop
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
shl
inc
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
fmul
sbb
mov
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
je
cmc
mov
lahf
jmp
fdiv
push
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
shl
push
je
cmc
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
fdiv
push
je
test
les
ins
test
mov
mov
lahf
jmp
shl
pop
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
in
jmp
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
fnsave
inc
test
mov
mov
lahf
jmp
fidiv
pop
test
mov
mov
lahf
jmp
shl
push
je
pushf
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jecxz
jmp
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
fidiv
ins
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
je
pushf
mov
lahf
jmp
fidiv
push
pop
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
jmp
fbstp
ins
test
mov
mov
lahf
jmp
fdiv
imul
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
inc
test
mov
mov
lahf
jmp
fdiv
ins
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
fidiv
outs
test
mov
mov
lahf
jmp
fdiv
push
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
fdiv
inc
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
les
push
je
mov
shl
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
outs
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
cdq
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
push
push
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
les
pop
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
(bad)
ins
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
les
pop
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
in
sbb
mov
mov
lahf
std
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
inc
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
jmp
shl
outs
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
je
xor
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
dec
test
mov
mov
lahf
jmp
pushf
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
inc
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
fbstp
pop
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
lds
outs
test
mov
mov
lahf
jmp
fnsave
push
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
sahf
mov
mov
mov
test
mov
mov
lahf
jmp
pushf
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
les
imul
lahf
jmp
fnsave
imul
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
fidiv
ins
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
out
adc
test
mov
mov
lahf
jmp
shl
inc
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
fdiv
inc
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
inc
test
mov
mov
lahf
jmp
fdiv
inc
test
mov
mov
lahf
jmp
shl
pop
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
std
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
dec
or
dec
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
lds
push
test
mov
mov
lahf
dec
adc
xchg
out
mov
mov
mov
test
mov
mov
lahf
out
(bad)
push
test
mov
mov
lahf
jmp
(bad)
push
test
mov
mov
lahf
out
(bad)
ins
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
dec
and
push
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
aas
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
aas
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
out
fdiv
pop
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
jmp
les
outs
test
mov
mov
lahf
dec
and
xor
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
dec
jnp
ins
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
les
outs
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
jmp
les
push
pop
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
ins
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
jmp
fdiv
push
inc
mov
mov
lahf
enter
and
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
in
out
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
in
in
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
dec
xor
clc
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
ins
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
dec
jp
ins
test
mov
mov
lahf
enter
adc
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
dec
adc
lahf
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
enter
push
or
dec
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
enter
push
or
dec
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
enter
push
and
fwait
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
ins
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
dec
and
push
inc
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
clc
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
clc
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
dec
adc
(bad)
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
jmp
fdiv
pop
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
out
fdiv
push
dec
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
enter
or
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
enter
and
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
in
call
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
out
cwde
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
les
imul
lahf
lock
mov
mov
mov
test
mov
mov
lahf
in
cwde
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
dec
adc
xchg
shl
outs
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
outs
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
dec
xor
clc
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
fdiv
push
test
mov
mov
lahf
dec
jp
ins
test
mov
mov
lahf
dec
sbb
pop
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
out
cwde
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
dec
sbb
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
dec
and
clc
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
fnsave
push
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
jmp
les
outs
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
out
les
outs
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
cld
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
dec
and
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
iret
mov
mov
test
mov
mov
lahf
enter
and
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
push
add
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
push
and
ins
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
fbstp
push
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
enter
push
and
ins
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
out
fdiv
push
dec
mov
mov
lahf
dec
jp
ins
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
dec
adc
lahf
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
repnz
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
add
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
enter
adc
mov
mov
lahf
out
fdiv
push
dec
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
push
sbb
push
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
enter
or
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
dec
daa
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
jmp
lds
inc
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
les
ins
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
pop
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
stc
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
enter
or
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
bound
mov
mov
lahf
enter
adc
mov
mov
lahf
enter
bound
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
enter
sbb
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
xor
test
mov
mov
lahf
enter
and
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
loopne
sbb
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
push
dec
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
push
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
sbb
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
push
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loopne
sbb
test
mov
mov
lahf
jmp
int3
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
adc
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
fidiv
cmp
xor
jmp
xor
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
int
sbb
mov
mov
lahf
jmp
int3
mov
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
pushf
mov
mov
mov
test
mov
mov
lahf
jmp
fbstp
dec
test
mov
mov
lahf
jmp
fdiv
dec
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
icebp
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
les
pop
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
xchg
mov
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
dec
test
mov
mov
lahf
jmp
lds
ja
jbe
mov
lock
mov
mov
test
mov
mov
lahf
jmp
out
ins
mov
mov
test
mov
mov
lahf
jmp
loopne
ins
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
shl
dec
test
mov
mov
lahf
jmp
(bad)
and
pusha
lahf
jmp
lds
cmp
or
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
jmp
in
imul
lahf
jmp
jmp
sbb
cs
test
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
lds
inc
test
mov
mov
lahf
jmp
out
push
or
mov
mov
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
shl
jns
je
mov
mov
mov
mov
mov
test
mov
mov
lahf
jmp
loop
sub
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
xor
test
mov
mov
lahf
jmp
pushf
mov
mov
mov
test
mov
mov
lahf
jmp
shl
arpl
add
sbb
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
lds
pop
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
out
and
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
loopne
sub
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
shl
arpl
ds
jmp
(bad)
pop
test
mov
mov
lahf
jmp
les
pop
test
mov
mov
lahf
jmp
jmp
cs
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
cdq
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
icebp
mov
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
jecxz
xor
or
cmps
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
sub
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
loope
sub
mov
mov
lahf
jmp
jmp
sub
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
cdq
mov
mov
mov
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
cdq
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
ja
ja
cmps
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
fnstenv
data16
mov
mov
lahf
jmp
les
bound
and
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
repnz
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
fbstp
dec
test
mov
mov
lahf
jmp
(bad)
dec
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
icebp
mov
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
out
cmp
ds
test
mov
mov
lahf
jmp
loop
cmp
ds
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
jmp
shl
jns
je
pushf
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
ins
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
push
pop
test
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
call
test
mov
mov
lahf
jmp
fdiv
jl
ja
cmps
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
dec
test
mov
mov
lahf
jmp
jecxz
sbb
cs
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
lds
dec
test
mov
mov
lahf
jmp
fidiv
and
mov
lahf
jmp
lds
cmp
sbb
sbb
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
jmp
int
pop
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
sahf
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
int
pop
mov
mov
test
mov
mov
lahf
jmp
int
pop
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
int
pop
mov
mov
test
mov
mov
lahf
jmp
int
pop
mov
mov
test
mov
mov
lahf
jmp
lock
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
pop
mov
mov
test
mov
mov
lahf
jmp
loopne
pop
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
sahf
mov
mov
mov
test
mov
mov
lahf
jmp
sahf
mov
mov
mov
test
mov
mov
lahf
jmp
shl
pop
test
mov
mov
lahf
jmp
push
dec
test
mov
mov
lahf
out
pushf
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fbstp
inc
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fidiv
inc
test
mov
mov
lahf
jecxz
cli
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jecxz
cli
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
pop
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
lahf
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
stc
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
retf
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
jmp
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
jo
cs
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
out
fdiv
dec
test
mov
mov
lahf
jmp
jecxz
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
jecxz
cli
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
pop
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
les
jns
je
mov
jmp
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
jmp
shl
gs
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
loope
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
loopne
repnz
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loope
sbb
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
in
sbb
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
shl
pop
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
int
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jecxz
stc
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
lds
pop
test
mov
mov
lahf
jmp
lds
pop
test
mov
mov
lahf
jmp
lds
pop
test
mov
mov
lahf
jmp
push
ds
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
shl
data16
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
int
cli
mov
mov
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
in
sbb
mov
mov
lahf
jmp
les
dec
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
nop
mov
mov
mov
test
mov
mov
lahf
jmp
jecxz
sbb
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
arpl
mov
mov
lahf
jmp
out
add
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jecxz
arpl
mov
mov
lahf
jmp
jecxz
arpl
mov
mov
lahf
jmp
jecxz
push
mov
mov
test
mov
mov
lahf
jmp
jecxz
push
mov
mov
test
mov
mov
lahf
jmp
jecxz
push
mov
mov
test
mov
mov
lahf
jmp
jecxz
push
mov
mov
test
mov
mov
lahf
jmp
jecxz
push
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
imul
stc
mov
lahf
jmp
out
sbb
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
fwait
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
leave
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
push
inc
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
xor
sbb
mov
mov
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
xor
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jecxz
sbb
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
cli
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
cdq
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
fmul
or
test
jmp
mov
test
mov
mov
lahf
jmp
shl
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jecxz
fbstp
dec
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
jmp
stc
mov
mov
mov
test
mov
mov
lahf
jmp
cld
mov
mov
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
(bad)
dec
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
in
fnsave
inc
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
in
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
iret
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jecxz
iret
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jecxz
shl
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
(bad)
push
pop
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
lock
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
iret
mov
mov
mov
test
mov
mov
lahf
jecxz
shl
inc
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
enter
or
test
mov
mov
lahf
enter
push
push
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
jecxz
imul
lahf
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
test
mov
mov
lahf
enter
sbb
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
fidiv
ins
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
jecxz
jecxz
imul
test
fbstp
inc
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
fbstp
inc
test
mov
mov
lahf
out
shl
pop
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jecxz
jecxz
imul
mov
shl
pop
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
enter
sbb
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
cli
mov
mov
mov
mov
test
mov
mov
lahf
jecxz
popf
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
test
mov
mov
lahf
jecxz
xchg
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jecxz
shl
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jecxz
fbstp
inc
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
cli
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
jmp
shl
pop
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fnsave
pop
test
mov
mov
lahf
jmp
(bad)
outs
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
(bad)
push
je
pushf
mov
lahf
jmp
fidiv
pop
test
mov
mov
lahf
jmp
shl
push
je
stc
mov
lahf
jmp
les
push
je
cwde
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
ins
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fidiv
outs
test
mov
mov
lahf
jmp
fbstp
outs
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
fdiv
pop
test
mov
mov
lahf
jmp
fnsave
pop
test
mov
mov
lahf
jmp
fbstp
pop
test
mov
mov
lahf
jmp
fbstp
inc
test
mov
mov
lahf
jmp
fbstp
inc
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
fidiv
push
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
fdiv
pop
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
xchg
dec
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
jmp
loop
sbb
mov
mov
lahf
jmp
clc
mov
mov
mov
test
mov
mov
lahf
jmp
sti
mov
mov
mov
test
mov
mov
lahf
jmp
into
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
iret
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
loopne
xchg
dec
test
mov
mov
lahf
jmp
(bad)
push
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
push
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
sbb
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
and
mov
mov
lahf
enter
and
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
fisttp
and
mov
adc
push
sbb
mov
mov
lahf
dec
and
mov
mov
lahf
loopne
loope
sbb
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
sbb
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
xrelease
ins
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
jecxz
in
mov
mov
mov
test
mov
mov
lahf
loop
in
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jecxz
out
mov
mov
mov
test
mov
mov
lahf
loop
jmp
cmp
sbb
std
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
int3
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
loop
out
mov
mov
mov
test
mov
mov
lahf
jmp
loope
imul
pushf
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
loope
push
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
loop
loope
cmp
or
stos
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
loop
out
adc
mov
mov
lahf
jecxz
loopne
outs
mov
mov
test
mov
mov
lahf
jmp
in
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
loop
loope
cmp
ds
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
int
sbb
mov
mov
lahf
loop
in
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
loope
cmp
sbb
stos
mov
lahf
in
mov
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
std
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
dec
and
cmps
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
out
sti
mov
mov
mov
test
mov
mov
lahf
jmp
int3
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
out
sbb
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
loop
loope
imul
pushf
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
jmp
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
loop
jmp
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
call
mov
mov
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
out
mov
mov
mov
mov
test
mov
mov
lahf
jmp
mov
mov
test
mov
mov
lahf
(bad)
add
cmps
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
loope
fbstp
aas
test
mov
mov
lahf
jmp
jmp
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
dec
or
dec
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
std
mov
mov
mov
mov
test
mov
mov
lahf
enter
push
mov
mov
test
mov
mov
lahf
cld
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
dec
jnp
push
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
enter
or
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
jmp
ret
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
jmp
lds
push
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
enter
push
or
dec
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
enter
or
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
jmp
(bad)
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
les
pop
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
dec
adc
mov
gs
enter
and
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
out
std
mov
mov
mov
test
mov
mov
lahf
dec
and
push
inc
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
enter
bound
mov
mov
lahf
jmp
les
ins
test
mov
mov
lahf
xrelease
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
jmp
les
push
test
mov
mov
lahf
stc
mov
mov
test
mov
mov
lahf
enter
add
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
dec
and
push
je
cwde
mov
lahf
enter
outs
mov
mov
test
mov
mov
lahf
jmp
les
ins
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
push
or
dec
test
mov
mov
lahf
enter
add
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
test
mov
mov
lahf
iret
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
jmp
shl
outs
test
mov
mov
lahf
enter
aas
mov
mov
test
mov
mov
lahf
out
fdiv
push
dec
mov
mov
lahf
dec
jp
ins
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
retf
mov
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
fnsave
outs
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
popf
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
aas
mov
mov
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
out
jmp
mov
test
mov
mov
lahf
dec
push
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
ret
mov
mov
mov
test
mov
mov
lahf
cld
mov
mov
mov
mov
test
mov
mov
lahf
clc
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
push
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
xrelease
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
enter
or
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
jmp
shl
ins
test
mov
mov
lahf
sti
mov
mov
mov
mov
test
mov
mov
lahf
jmp
cwde
mov
mov
mov
test
mov
mov
lahf
dec
xor
mov
in
mov
mov
mov
test
mov
mov
lahf
repz
mov
mov
mov
test
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
xor
mov
mov
lahf
retf
mov
mov
mov
mov
test
mov
mov
lahf
enter
adc
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
mov
mov
test
mov
mov
lahf
enter
aaa
mov
mov
test
mov
mov
lahf
stc
mov
mov
mov
mov
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
enter
sbb
mov
mov
lahf
out
les
outs
test
mov
mov
lahf
into
mov
mov
mov
mov
test
mov
mov
lahf
leave
mov
mov
test
mov
mov
lahf
lock
mov
mov
mov
test
mov
mov
lahf
enter
or
mov
mov
lahf
jmp
shl
push
inc
mov
mov
lahf
jmp
xor
test
mov
mov
lahf
enter
and
mov
jmp
sbb
repnz
int
nop
idiv
(bad)
repnz
xchg
out
xchg
test
cmp
shl
aad
xchg
out
xchg
test
add
(bad)
div
int
cmps
test
lock
sti
neg
cmc
(bad)
aaa
into
cmp
(bad)
div
int3
out
cmps
test
cmp
call
not
in
or
add
lahf
repnz
not
cmc
icebp
fldcw
cmp
fcomip
push
mov
cmc
out
sbb
sbb
fdiv
std
imul
cmc
rcr
sbb
sbb
in
clc
idiv
cmc
repnz
into
sbb
call
out
test
jl
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
loopne
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
loop
clc
idiv
cmc
out
sbb
sbb
stc
repnz
imul
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
out
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
aas
lock
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
sub
repnz
test
out
or
adc
jmp
idiv
enter
sbb
jecxz
clc
idiv
cmc
out
fstp
into
sbb
in
repnz
test
out
fstp
into
sbb
out
repnz
idiv
cmc
out
fstp
into
sbb
call
out
xor
cmc
out
sbb
sbb
call
out
xor
cmc
rcr
into
sbb
fptan
jmp
cdq
out
lods
idiv
(bad)
into
sbb
fptan
jmp
mov
mov
fstp
into
sbb
shl
idiv
cmc
out
sbb
sbb
call
out
xchg
jl
loop
sbb
sbb
call
out
xor
cmc
aam
or
sbb
jmp
idiv
(bad)
into
sbb
cli
repnz
idiv
cmc
neg
add
sbb
cld
repnz
scas
out
mov
jg
(bad)
(bad)
into
sbb
retf
idiv
cmc
(bad)
(bad)
into
sbb
loope
std
imul
cmc
loop
sbb
repnz
imul
cmc
out
fstp
into
sbb
in
clc
idiv
cmc
xchg
fstp
repnz
test
out
cmp
repnz
neg
cmc
int3
fstp
into
sbb
jmp
idiv
(bad)
into
sbb
iret
repnz
test
xchg
(bad)
into
sbb
(bad)
repnz
test
xchg
fstp
into
sbb
(bad)
repnz
scas
out
xchg
idiv
loop
or
sbb
repnz
imul
cmc
int3
fstp
into
sbb
fcomip
out
idiv
cmc
loop
push
into
sbb
jmp
idiv
loop
sbb
sbb
(bad)
repnz
scas
out
xchg
idiv
loop
sbb
sbb
fcomip
call
idiv
(bad)
into
sbb
xor
neg
cmc
int3
fnstcw
into
sbb
shl
jmp
mov
mov
fnstcw
into
sbb
(bad)
jmp
mov
mov
jl
loop
add
sbb
(bad)
bnd
mov
mov
fnstcw
into
sbb
int
div
cdq
out
mov
fnstcw
into
sbb
cli
repnz
cdq
out
mov
fnstcw
into
sbb
jmp
idiv
fnstcw
into
sbb
popf
repnz
neg
cmc
loop
cmp
sbb
fcomip
hlt
neg
cmc
int3
fnstcw
into
sbb
fcomip
hlt
imul
cmc
loop
cmp
sbb
out
repnz
neg
cmc
loop
push
into
sbb
cld
bnd
idiv
fst
into
sbb
int
jmp
idiv
fst
into
sbb
cld
bnd
idiv
fst
into
sbb
leave
repnz
cmc
loop
adc
sbb
clc
repnz
loop
sbb
repnz
cmc
loop
sbb
repnz
scas
out
xchg
idiv
fstp
into
sbb
in
repnz
test
int3
fstp
sbb
xor
neg
cmc
int3
fstp
sbb
fcomip
push
scas
out
mov
jl
loop
sbb
sbb
(bad)
repnz
mov
cmc
loop
sbb
sbb
(bad)
repnz
mov
pushf
idiv
fstp
into
sbb
out
repnz
mov
xchg
idiv
fstp
into
sbb
xchg
repnz
imul
cmc
loop
pop
into
sbb
cwde
repnz
imul
cmc
int3
fstp
into
sbb
leave
repnz
neg
cmc
int3
fstp
into
sbb
push
clc
imul
cmc
loop
or
sbb
stc
repnz
imul
cmc
out
cmp
repnz
imul
cmc
out
cmp
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
cmp
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
or
sbb
stc
repnz
imul
cmc
out
or
sbb
stc
repnz
imul
cmc
out
or
sbb
stc
repnz
imul
cmc
out
cmp
repnz
imul
cmc
out
cmp
repnz
imul
cmc
out
cmp
repnz
idiv
cmc
out
or
sbb
stc
repnz
test
out
cmp
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
or
sbb
stc
repnz
test
out
cmp
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
cmp
repnz
neg
cmc
out
cmp
repnz
imul
cmc
out
or
sbb
stc
repnz
imul
cmc
out
sbb
sbb
cld
repnz
test
jmp
repnz
idiv
cmc
out
sbb
adc
xchg
repnz
neg
cmc
(bad)
fst
into
sbb
shl
std
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
leave
repnz
test
loop
adc
sbb
jmp
test
sbb
cld
repnz
idiv
cmc
loop
pop
into
pop
lock
repnz
idiv
cmc
out
or
adc
loop
sti
imul
cmc
xchg
fstp
into
sbb
(bad)
repnz
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
shl
jmp
cdq
out
cmc
idiv
fst
into
sbb
jmp
test
sbb
std
repnz
imul
cmc
(bad)
fst
into
sbb
cld
repnz
idiv
cmc
out
or
adc
int3
repnz
imul
cmc
aam
sbb
sbb
shl
imul
out
sbb
sbb
jmp
idiv
fstp
into
sbb
(bad)
repnz
scas
out
xchg
mul
fst
into
sbb
jmp
not
rcr
push
into
sbb
std
repnz
imul
cmc
loop
sbb
repnz
idiv
cmc
out
sub
repnz
imul
cmc
loop
adc
sbb
(bad)
repnz
mov
scas
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
shl
jmp
scas
out
xchg
div
fst
into
sbb
jmp
not
rcr
sbb
repnz
imul
cmc
neg
pop
into
sbb
push
cli
idiv
cmc
out
sub
repnz
imul
cmc
loop
adc
sbb
xchg
repnz
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
pushf
repnz
cmc
(bad)
fst
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
clc
repnz
idiv
cmc
enter
sbb
in
repnz
test
out
sbb
sbb
jmp
idiv
fnstenv
into
sbb
shl
neg
cmc
jmp
repnz
idiv
cmc
out
sbb
sbb
cwde
repnz
imul
cmc
(bad)
fst
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
cli
repnz
test
jmp
repnz
idiv
cmc
out
cmp
repnz
idiv
cmc
aam
and
sbb
cld
repnz
test
out
sbb
sbb
jmp
idiv
(bad)
into
sbb
ret
repnz
test
jmp
repnz
idiv
cmc
rcr
into
sbb
cli
repnz
idiv
cmc
loop
pop
into
pop
lock
repnz
idiv
cmc
out
or
adc
fdiv
sti
idiv
cmc
neg
and
sbb
in
cli
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
shl
div
scas
out
lods
idiv
fst
into
sbb
jmp
not
neg
pop
into
sbb
sti
repnz
imul
cmc
neg
adc
sbb
push
cli
idiv
cmc
out
sbb
adc
xchg
repnz
neg
cmc
loop
jne
sbb
(bad)
repnz
cdq
out
test
fstp
into
sbb
jmp
idiv
fstp
into
sbb
shl
jmp
div
fst
into
sbb
jmp
not
rcr
into
sbb
out
clc
test
enter
sbb
in
repnz
test
out
sbb
sbb
jmp
idiv
fldcw
into
sbb
popf
repnz
neg
cmc
jmp
repnz
idiv
cmc
neg
sbb
sbb
fcomi
repnz
(bad)
fst
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
call
out
mov
jg
loop
pop
into
pop
lock
repnz
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
shl
imul
out
sbb
sbb
jmp
idiv
fstp
into
sbb
(bad)
repnz
scas
out
xchg
mul
fst
into
sbb
jmp
not
fst
repnz
test
loop
or
sbb
cld
repnz
idiv
cmc
out
cmp
repnz
neg
cmc
loop
add
sbb
popf
repnz
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
leave
repnz
neg
cmc
loop
adc
sbb
jmp
not
rcr
into
sbb
call
out
xor
cmc
xchg
fstp
repnz
idiv
cmc
out
or
adc
fdiv
clc
neg
cmc
aam
or
sbb
fcomi
sti
neg
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
loop
push
mov
cmc
jmp
repnz
idiv
cmc
rcr
into
sbb
call
out
xor
cmc
(bad)
fstp
into
sbb
stc
repnz
idiv
cmc
out
sbb
adc
cli
repnz
imul
cmc
xchg
(bad)
into
sbb
in
clc
test
out
sbb
sbb
jmp
idiv
fstp
into
sbb
leave
repnz
test
loop
adc
sbb
jmp
neg
out
or
sbb
enter
scas
out
xor
cmc
jmp
repnz
test
loop
push
into
sbb
icebp
repnz
imul
cmc
loop
push
into
sbb
icebp
repnz
test
loop
push
into
sbb
std
repnz
imul
cmc
jmp
repnz
test
jmp
repnz
cmc
jmp
repnz
cmc
jmp
bnd
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
(bad)
call
idiv
fstp
into
sbb
in
bnd
idiv
fstp
into
sbb
(bad)
hlt
neg
cmc
jmp
repnz
imul
cmc
jmp
repnz
idiv
cmc
jmp
repnz
test
loop
sbb
sbb
(bad)
clc
imul
cmc
jmp
repnz
imul
cmc
jmp
repnz
idiv
cmc
loop
push
into
sbb
ret
imul
cmc
loop
push
into
sbb
int
clc
idiv
cmc
loop
sbb
sbb
fptan
clc
test
repnz
into
sbb
jmp
idiv
(bad)
into
sbb
push
clc
imul
cmc
aam
sbb
sbb
icebp
repnz
idiv
cmc
int3
fstp
into
sbb
jmp
idiv
fstp
into
sbb
leave
repnz
imul
cmc
out
or
sbb
jecxz
clc
idiv
cmc
out
sbb
sbb
fcomi
clc
imul
cmc
int3
fstp
into
sbb
jmp
idiv
(bad)
into
sbb
jmp
idiv
fstp
into
sbb
call
idiv
repnz
into
sbb
jmp
idiv
fstp
into
sbb
repz
imul
cmc
out
sbb
sbb
(bad)
std
idiv
cmc
out
sbb
sbb
shl
test
int3
fstp
into
sbb
out
call
idiv
(bad)
into
sbb
jmp
idiv
fstp
into
sbb
icebp
repnz
test
out
fstp
into
sbb
cli
repnz
idiv
cmc
int3
fstp
into
sbb
out
clc
imul
cmc
out
sub
repnz
idiv
cmc
out
fstp
into
sbb
cli
repnz
neg
cmc
int3
fstp
into
sbb
out
clc
imul
cmc
out
or
sbb
jmp
idiv
fstp
into
sbb
in
repnz
idiv
cmc
(bad)
fst
into
sbb
jmp
idiv
fstp
into
sbb
jmp
out
xor
cmc
aam
sbb
sbb
(bad)
cli
idiv
cmc
out
sbb
sbb
jmp
out
test
jl
out
sbb
sbb
jmp
idiv
(bad)
into
sbb
jmp
idiv
(bad)
fst
into
sbb
in
repnz
imul
cmc
(bad)
fst
into
sbb
in
repnz
imul
cmc
aam
pop
into
sbb
in
repnz
neg
cmc
out
sbb
sbb
in
repnz
idiv
cmc
jmp
repnz
idiv
cmc
(bad)
(bad)
into
sbb
in
repnz
aam
push
into
sbb
in
bnd
idiv
rcr
into
sbb
in
repnz
idiv
cmc
out
fst
repnz
idiv
cmc
jmp
repnz
idiv
cmc
lahf
fst
into
sbb
int
sti
idiv
cmc
jmp
repnz
idiv
cmc
(bad)
fst
into
sbb
in
repnz
idiv
cmc
rcr
push
into
sbb
in
repnz
idiv
cmc
neg
sbb
sbb
in
repnz
idiv
cmc
jmp
repnz
idiv
cmc
(bad)
fst
into
sbb
in
repnz
idiv
cmc
jmp
repnz
idiv
cmc
rcr
into
sbb
in
repnz
neg
cmc
xchg
fstp
into
sbb
in
repnz
enter
sbb
in
repnz
idiv
cmc
rcr
into
sbb
in
repnz
idiv
cmc
loop
sbb
sbb
in
repnz
test
jmp
repnz
neg
cmc
loop
adc
sbb
in
repnz
idiv
cmc
repnz
into
sbb
in
repnz
idiv
cmc
xchg
fstp
into
sbb
in
repnz
test
jmp
repnz
idiv
cmc
loop
push
into
sbb
in
repnz
idiv
cmc
xchg
fst
into
sbb
in
repnz
idiv
cmc
aam
adc
sbb
in
repnz
idiv
cmc
repnz
into
sbb
in
repnz
imul
cmc
(bad)
fstp
into
sbb
in
repnz
idiv
cmc
out
pop
into
sbb
in
repnz
idiv
cmc
out
sbb
sbb
jmp
out
test
jl
out
sbb
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
jmp
repnz
imul
cmc
out
sbb
sbb
out
repnz
idiv
cmc
out
fstp
into
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
out
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
out
test
jl
lahf
fstp
into
sbb
jmp
idiv
fstp
into
sbb
call
out
test
jl
out
fstp
into
sbb
jmp
idiv
fstp
into
sbb
(bad)
clc
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fstp
into
sbb
ret
idiv
cmc
loop
sbb
sbb
jmp
test
jae
jmp
div
int3
(bad)
into
adc
cdq
repnz
test
xchg
div
out
sbb
sbb
call
out
test
jl
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fldcw
cmp
fdiv
repz
mov
jl
out
cmp
repnz
idiv
cmc
out
adc
sbb
jmp
div
icebp
fldcw
or
shl
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
test
cmp
fwait
repnz
iret
out
mov
jl
out
or
sbb
lahf
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
rcr
into
sbb
out
repnz
idiv
cmc
out
sub
repnz
mov
cmc
xchg
fstp
into
adc
not
out
sbb
sbb
out
clc
idiv
cmc
out
sbb
sbb
jmp
out
test
jle
xlat
fldcw
or
idiv
cmc
repz
and
std
repnz
neg
cmc
int
cmp
jae
pushf
repnz
mov
lods
div
rcr
ds
ins
lock
std
imul
cmc
fstp
adc
ja
(bad)
repnz
call
fldcw
ins
lock
iret
div
cmc
leave
fst
repnz
mov
xor
cmc
jmp
adc
repnz
shr
pushf
not
repz
and
cli
repnz
test
leave
fnstcw
into
das
lock
test
jecxz
or
and
repnz
popf
out
mov
fldenv
imul
mov
xor
or
imul
repnz
mov
test
dec
cmc
(bad)
fnstenv
repnz
xchg
nop
neg
fnstenv
into
pop
lock
repnz
test
retf
fldcw
into
or
cwde
repnz
idiv
cmc
iret
fnstcw
into
push
lock
repnz
mov
xchg
imul
loope
xor
or
in
repnz
not
cmc
xchg
fnstenv
into
cmp
clc
repnz
out
repnz
xchg
fld
into
cmp
test
mov
fldenv
ds
repnz
stos
out
mov
dec
cmc
in
fldcw
bnd
test
cmp
call
not
(bad)
fnstenv
into
sbb
enter
scas
out
xchg
div
lahf
fldcw
or
cli
repnz
test
repz
add
xor
mul
cmc
sahf
fldcw
(bad)
clc
repnz
test
xchg
imul
xlat
fnstenv
into
cmp
clc
repnz
mul
cmc
(bad)
xor
cmp
leave
repnz
test
cmc
cmc
fldenv
cmp
shl
not
cmc
xchg
fst
cmp
leave
repnz
idiv
cmc
ret
fldcw
add
call
imul
iret
fnstenv
into
push
lock
leave
idiv
cmc
xchg
(bad)
into
adc
not
out
cmp
das
lock
repnz
div
cmc
jecxz
das
into
push
neg
cmc
aad
sbb
imul
mov
mov
jg
vmovupd
ins
lock
repnz
cwde
out
repz
jecxz
pop
into
jae
shl
neg
cmc
xchg
fld
into
ins
lock
repnz
(bad)
out
lock
fst
repnz
xchg
out
stos
div
cmc
fld
into
add
shl
clc
test
xor
cmc
ret
fnstcw
cmp
(bad)
in
imul
cmc
sahf
fldcw
into
add
popf
repnz
out
mov
fst
into
cmp
loopne
shl
out
mov
fldcw
into
adc
idiv
cmc
rcr
and
sbb
into
repnz
test
popf
test
lock
in
mul
call
lock
div
iret
out
xor
sub
add
popf
repnz
cmc
std
fstp
into
cmp
imul
cmc
in
and
cmp
shl
cld
imul
cmc
in
fnstcw
into
cmp
xchg
repnz
out
nop
test
into
(bad)
std
repnz
xchg
out
xchg
dec
cmc
retf
(bad)
into
or
jmp
test
add
fwait
repnz
int
mov
fldcw
or
iret
repnz
out
mov
jg
in
sbb
or
not
cmc
cmc
fstp
repnz
mov
cmc
icebp
(bad)
into
add
sti
repnz
test
repnz
repnz
xchg
out
xchg
div
int3
fst
into
push
lock
not
neg
sbb
sbb
test
(bad)
imul
loop
sbb
pop
lock
aad
cdq
out
mov
or
into
sbb
out
push
xchg
out
xchg
idiv
fldcw
into
adc
(bad)
repnz
(bad)
into
sbb
in
repnz
cmc
int3
(bad)
into
adc
out
repnz
test
xchg
fnstenv
into
adc
imul
cmc
rcr
into
pop
lock
shl
lahf
out
lahf
test
into
xor
div
cmc
lock
xor
ret
repnz
mul
into
fst
repnz
imul
cmc
rcr
into
sbb
icebp
repnz
cwde
out
repnz
xchg
fst
into
jae
fdivp
loopne
aad
mov
jbe
repz
into
ins
lock
repnz
imul
cmc
aad
or
ja
ret
test
repnz
into
ins
lock
repnz
mov
fnstcw
into
pusha
lock
into
div
cmc
int
ds
push
cld
repnz
scas
out
xor
cmc
rcr
into
das
lock
cli
div
cmc
(bad)
into
das
lock
popf
out
xchg
div
leave
fldenv
into
and
pushf
bnd
test
pop
lock
bnd
imul
cmc
int3
fldenv
into
sbb
(bad)
repnz
idiv
cmc
xchg
fst
into
push
lock
shl
mov
cmc
xchg
fst
repnz
lods
out
mov
jns
out
ins
into
adc
into
repnz
neg
cmc
out
(bad)
into
adc
fcomip
in
test
rcr
add
adc
into
repnz
not
cmc
xchg
fnstenv
adc
int
jecxz
xchg
out
pushf
not
repnz
sbb
repnz
cmc
rcr
das
into
pop
lock
retf
idiv
xchg
(bad)
into
sub
int
out
test
mov
dec
cmc
into
fldcw
cs
test
lock
fcomip
mov
xchg
dec
cmc
rcr
add
xor
loopne
xchg
test
scas
not
cmc
loopne
and
aas
lock
repz
fldenv
xor
clc
repnz
mul
cmc
in
jno
xor
test
(bad)
into
xor
lahf
repnz
test
(bad)
fnstenv
push
lock
repnz
not
cmc
xlat
fnstenv
repnz
int3
out
lods
div
(bad)
xor
add
int3
repnz
imul
cmc
sahf
fnstenv
into
add
fcomip
into
not
cmc
sahf
(bad)
into
sub
not
(bad)
adc
or
out
repnz
cmc
mov
pop
into
sbb
test
icebp
fstp
into
xor
imul
cmc
xchg
fldcw
or
(bad)
(bad)
xchg
cld
test
repnz
div
cmc
(bad)
fst
into
add
out
aam
mov
cmc
(bad)
fst
into
adc
sti
repnz
mov
cmc
(bad)
fnstcw
into
cmp
neg
cmc
in
imul
lock
repnz
xchg
out
repz
xchg
fnstcw
into
jae
ret
repnz
int3
out
repz
(bad)
fst
into
or
call
out
test
fldcw
xor
imul
cmc
int3
fnstenv
into
pusha
lock
cli
test
mov
fst
into
and
(bad)
xchg
imul
cmc
iret
fld
into
xor
in
bnd
stos
out
mov
jbe
lock
into
and
std
repnz
fwait
out
xor
cmc
(bad)
into
ins
lock
(bad)
imul
cmc
xchg
fst
into
sub
stc
repnz
mul
rcr
cmp
bnd
test
and
repz
mov
xor
cmc
mov
cmp
or
cli
repnz
mov
mov
or
loope
or
sbb
out
bnd
not
fldcw
repnz
cmc
jecxz
cs
xor
popf
repnz
not
cmc
(bad)
fldcw
or
in
mov
pushf
out
xchg
not
cmc
mov
or
aaa
lock
shl
out
mov
add
into
sbb
fcomi
cli
test
aad
cmp
adc
(bad)
(bad)
test
xchg
fnstenv
into
adc
fptan
jmp
cmc
icebp
fldcw
lock
not
out
xchg
jbe
out
fst
into
push
not
cmc
xlat
fldenv
into
adc
call
div
leave
fnstcw
into
outs
lock
repnz
stos
out
repnz
std
fnstenv
into
xor
xor
mul
hlt
fnstcw
into
sbb
mul
cmc
(bad)
into
ss
aad
cmps
out
mov
fldcw
popa
lock
clc
neg
cmc
(bad)
fst
into
sbb
loopne
int3
test
repnz
into
cs
repnz
div
cmc
std
(bad)
into
add
repz
not
cmc
aad
push
into
pop
lock
ret
div
cmc
(bad)
fld
into
ins
lock
aam
lods
out
mov
(bad)
into
or
int
ret
test
mov
fldcw
into
sub
shl
cld
div
xchg
fstp
ja
(bad)
repnz
mov
cmc
repz
into
xor
jmp
mul
fld
into
or
std
repnz
cmps
out
stos
div
in
fnstenv
sub
shl
int
test
xchg
imul
lahf
fst
into
sub
loope
shl
mov
stos
div
xchg
fldcw
into
ss
bnd
div
cmc
std
fld
into
xor
out
(bad)
not
cmc
rcr
bswap
or
xor
test
fldcw
push
lock
bnd
mov
mov
pop
cmc
hlt
fstp
adc
xchg
repnz
xchg
fldcw
cs
cmc
test
mov
fld
into
sub
test
hlt
fnstcw
aaa
lock
retf
out
mov
fstp
into
ja
clc
bnd
neg
xchg
fldenv
into
sbb
popf
repnz
mov
xchg
div
in
adc
or
fcomip
loope
mov
mov
or
xchg
fldcw
into
push
lock
repnz
test
mov
fnstenv
into
xor
ret
imul
cmc
in
fstp
into
xor
into
repnz
mov
xor
push
into
cmp
cdq
repnz
idiv
cmc
out
push
into
push
lock
fdiv
mov
cmc
rcr
ds
xor
iret
repnz
neg
cmc
(bad)
fst
add
out
(bad)
mul
(bad)
fnstenv
into
ins
lock
repnz
neg
cmc
in
fnstenv
imul
repnz
mov
mov
push
into
xor
fptan
out
not
cmc
lock
into
ins
lock
repnz
xchg
out
xchg
neg
neg
arpl
sub
xor
imul
cmc
jmp
pop
into
xor
pushf
repnz
test
lods
test
into
add
in
repnz
out
mov
fld
into
xor
(bad)
cli
test
std
mul
fnstenv
into
sbb
fcomip
shl
mov
mov
fldenv
into
outs
lock
shl
mov
cmc
in
outs
into
adc
shl
call
idiv
out
adc
cmp
out
xlat
mul
rcr
adc
or
test
jmp
repnz
inc
cmc
in
fst
into
(bad)
(bad)
repnz
not
cmc
(bad)
fnstenv
into
adc
into
repnz
mov
mov
fst
into
cs
repnz
neg
lahf
fnstenv
into
imul
mov
cmc
lock
into
sbb
lahf
repnz
div
cmc
xchg
(bad)
into
ja
out
repnz
cmc
fcompp
ins
into
sbb
leave
repnz
imul
cmc
in
cmp
ins
lock
not
out
mov
fldenv
pop
lock
repnz
cmc
xchg
fstp
repnz
imul
cmc
(bad)
fldenv
and
ret
test
div
pop
cmc
fstp
ins
into
xor
idiv
cmc
jecxz
bswap
push
lock
iret
neg
cmc
out
cmp
repnz
idiv
cmc
std
fstp
repnz
mov
test
jl
out
or
or
xchg
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
std
fstp
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
repz
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
fcompp
sbb
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
loope
pop
into
sbb
jmp
idiv
fstp
into
sbb
sti
repnz
idiv
cmc
ret
fst
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
nop
fstp
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
fcompp
adc
sbb
jmp
idiv
fstp
into
sbb
idiv
cmc
int3
fstp
into
sbb
jmp
idiv
fstp
into
aaa
lock
cli
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
aam
sbb
repnz
out
xchg
idiv
fstp
into
cmp
idiv
cmc
jmp
repnz
test
out
sub
repnz
idiv
cmc
into
fst
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
ret
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
leave
fst
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
retf
fst
repnz
jl
out
or
or
out
clc
idiv
cmc
rcr
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
in
fstp
into
sbb
jmp
idiv
fstp
into
imul
repnz
idiv
cmc
neg
pop
into
sbb
jmp
idiv
fstp
into
sub
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
rcr
adc
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
(bad)
into
cmp
cwde
repnz
idiv
cmc
into
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
(bad)
fstp
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
(bad)
fst
into
sbb
jmp
idiv
(bad)
into
cmp
loop
std
idiv
cmc
repz
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
ret
into
sbb
jmp
idiv
(bad)
into
adc
idiv
cmc
repz
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
repnz
repnz
test
mov
jl
out
or
add
loop
clc
idiv
cmc
rcr
push
into
sbb
jmp
idiv
(bad)
into
and
cwde
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
idiv
fstp
into
cmp
fdiv
clc
idiv
cmc
loopne
pop
into
sbb
jmp
idiv
fstp
into
or
(bad)
clc
idiv
cmc
(bad)
fst
repnz
idiv
out
sbb
xor
(bad)
repnz
idiv
cmc
leave
fstp
into
sbb
jmp
idiv
(bad)
into
adc
idiv
cmc
out
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
mov
push
into
sbb
jmp
idiv
(bad)
into
das
lock
repnz
idiv
cmc
repz
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
(bad)
fst
repnz
test
out
cmp
repnz
idiv
cmc
out
fstp
into
sbb
jmp
idiv
fstp
into
adc
(bad)
std
idiv
cmc
repz
sbb
jmp
idiv
fstp
into
adc
std
repnz
idiv
cmc
in
fstp
into
sbb
jmp
idiv
(bad)
into
sub
(bad)
repnz
idiv
cmc
jecxz
push
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
fstp
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
rcr
or
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
sahf
fst
into
sbb
jmp
idiv
(bad)
into
add
pushf
repnz
idiv
cmc
aad
adc
sbb
jmp
idiv
(bad)
into
ja
jmp
not
rcr
sbb
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
into
fst
repnz
out
sbb
sbb
(bad)
loopne
xchg
out
xchg
jl
out
cmp
repnz
idiv
cmc
out
sub
repnz
idiv
loop
sbb
cmp
in
bnd
idiv
fstp
into
aas
lock
out
test
push
xchg
fld
into
pop
lock
mov
mov
test
jl
int3
fnstenv
into
sbb
int3
repnz
out
xor
cmc
out
or
sbb
fwait
repnz
mov
jmp
into
or
lahf
repnz
idiv
cmc
in
sbb
sbb
int3
repnz
idiv
cmc
aam
sbb
sbb
jmp
idiv
xchg
fst
into
sbb
jmp
neg
rcr
into
pop
lock
test
repnz
imul
cmc
rcr
or
(bad)
jmp
idiv
in
sbb
xor
leave
repnz
out
xchg
pop
cmc
in
sbb
sbb
loopne
hlt
idiv
cmc
aam
sbb
sbb
jmp
idiv
xchg
fst
into
sbb
jmp
neg
xchg
fldenv
into
pop
lock
test
into
neg
cmc
in
sbb
sbb
out
xor
addr16
aam
sbb
sbb
jmp
idiv
xchg
fst
into
sbb
jmp
neg
rcr
and
pop
lock
test
repnz
test
in
sbb
sbb
xchg
repnz
idiv
aam
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
xchg
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
out
sbb
sbb
into
repnz
neg
cmc
out
sbb
sbb
in
repnz
mov
test
jl
loop
sub
repnz
idiv
cmc
lahf
fst
into
sbb
jmp
idiv
fstp
into
sbb
shl
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
(bad)
repnz
idiv
cmc
neg
adc
sbb
jmp
idiv
fstp
into
sbb
loop
in
idiv
cmc
enter
sbb
out
repnz
idiv
cmc
xchg
fld
into
sbb
test
out
sbb
sbb
call
test
sbb
(bad)
cld
idiv
cmc
(bad)
(bad)
into
cmp
loope
xor
add
repz
repnz
imul
out
or
add
out
cli
test
out
sbb
sbb
shl
test
out
fnstcw
into
sbb
jmp
test
clc
idiv
cmc
neg
adc
sbb
jmp
not
cmc
xchg
fnstcw
repnz
idiv
cmc
loope
sbb
sbb
jmp
idiv
loop
xor
popa
lock
mov
xchg
jmp
into
pop
lock
repnz
test
in
sbb
sbb
icebp
repnz
mov
mov
imul
sbb
jmp
imul
loop
or
push
lock
(bad)
scas
out
xor
cmc
loop
and
ja
test
mov
mov
mov
or
xchg
fldcw
repnz
imul
push
lock
cld
test
nop
fnstcw
or
lahf
repnz
test
(bad)
fnstenv
into
sbb
jmp
test
add
push
mov
mov
cmc
rcr
into
sbb
idiv
cmc
int3
(bad)
into
sbb
idiv
cmc
neg
imul
cld
test
scas
mul
retf
(bad)
into
sbb
imul
cmc
loop
and
pop
lock
test
repnz
imul
out
sbb
adc
call
not
cmc
mov
sub
ja
call
out
xor
sub
repnz
test
jmp
repnz
idiv
loop
or
cmp
out
cld
test
nop
fnstcw
xor
test
(bad)
fldcw
repnz
test
cmc
jmp
repnz
iret
out
xor
cmc
rcr
or
sbb
idiv
cmc
repnz
sbb
stc
repnz
xor
or
sbb
not
cmc
mov
sub
ja
xor
not
rcr
sbb
sbb
fdiv
xor
pop
cmc
(bad)
(bad)
into
sbb
test
int
xor
sbb
push
shl
mov
cmc
repnz
popa
lock
bnd
neg
out
or
sbb
idiv
ret
fldenv
into
add
jmp
idiv
fnstenv
into
sbb
stc
repnz
pop
cmc
(bad)
(bad)
into
sbb
idiv
rcr
or
sbb
test
int
xor
sbb
push
fdivp
xchg
out
xchg
imul
sbb
stc
repnz
div
rcr
or
sbb
idiv
cmc
repnz
sbb
stc
repnz
test
fcompp
or
sbb
idiv
cmc
repnz
sbb
stc
bnd
div
out
sbb
sbb
into
repnz
test
jmp
into
adc
lahf
repnz
test
lahf
fnstenv
into
sbb
push
retf
out
xor
cmc
jmp
repnz
idiv
cmc
neg
adc
sbb
jmp
not
cmc
rcr
sbb
sbb
jmp
div
(bad)
into
sbb
jmp
test
repnz
mov
cmc
loop
sub
sub
int3
repnz
mul
lahf
(bad)
into
sbb
not
out
jmp
into
sbb
push
mov
mov
(bad)
div
rcr
or
sbb
(bad)
repnz
test
xchg
pop
cmc
out
sbb
sbb
call
out
xchg
jl
out
or
adc
xor
not
out
jmp
into
pop
lock
hlt
not
cmc
loop
push
repnz
mov
cmc
aam
sub
repnz
test
out
or
sbb
fwait
repnz
mov
cmc
out
sbb
sbb
enter
nop
out
xchg
push
cmc
jmp
lock
repnz
mov
cmc
jecxz
xor
sbb
icebp
repnz
not
cmc
int3
fstp
sbb
jmp
neg
jmp
repnz
neg
cmc
lahf
(bad)
into
sbb
idiv
cmc
int3
fstp
into
push
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
pop
lock
idiv
in
sbb
sbb
jmp
idiv
(bad)
into
and
jmp
test
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
in
sbb
sbb
jmp
out
test
jl
out
cmp
repnz
idiv
cmc
out
sbb
sbb
jmp
out
test
jl
out
sbb
das
lock
test
into
sbb
jmp
out
test
jl
loop
sbb
pop
lock
imul
repnz
into
sbb
stc
repnz
int3
out
mov
ins
cmc
jmp
repnz
idiv
cmc
sahf
fldcw
repnz
idiv
cmc
xchg
fld
into
sbb
neg
cmc
out
cmp
repnz
imul
cmc
jmp
repnz
idiv
cmc
out
xor
repnz
test
neg
sbb
sbb
jmp
idiv
out
sbb
sbb
fcomi
fdivp
mov
cmc
out
sbb
xor
int3
bnd
neg
ret
fstp
into
sub
int
std
test
aam
cmp
bnd
idiv
fstp
into
aas
lock
clc
idiv
cmc
rcr
into
sbb
jmp
not
out
sbb
sbb
jmp
imul
aam
and
(bad)
repz
test
mov
fstp
into
sbb
jmp
not
cmc
retf
fldcw
lock
(bad)
mov
cmc
out
sbb
push
lock
idiv
fstp
into
adc
in
repnz
idiv
cmc
rcr
into
or
int
call
neg
ret
fstp
into
sub
loope
std
idiv
cmc
out
sbb
sbb
push
(bad)
div
cmc
out
sub
repnz
mov
cmc
int3
fstp
into
adc
jmp
test
into
push
lock
repnz
out
xor
cmc
in
pop
into
adc
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
leave
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
test
sti
idiv
cmc
(bad)
(bad)
into
or
jecxz
retf
out
xor
cmc
out
sbb
sbb
in
clc
idiv
cmc
out
adc
sbb
in
repnz
test
fstp
into
sbb
jmp
idiv
xchg
fnstenv
into
adc
loopne
clc
idiv
cmc
rcr
into
sbb
into
repnz
not
cmc
out
sbb
adc
(bad)
repnz
mov
cmc
(bad)
fstp
into
adc
fdivp
clc
idiv
cmc
enter
sbb
jmp
test
sbb
jmp
div
out
sbb
sbb
retf
not
cmc
out
cmp
repnz
idiv
cmc
out
xor
repnz
imul
cmc
xchg
fldenv
into
adc
(bad)
repnz
xchg
xchg
mul
out
ins
into
or
int3
repnz
idiv
cmc
out
or
sbb
idiv
cmc
int3
fstp
into
adc
jmp
out
xor
cmc
aam
imul
lock
shl
out
mov
jl
lahf
fnstenv
ja
xor
div
cmc
int3
fstp
sbb
jmp
neg
jmp
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
fstp
into
sbb
jmp
div
out
sbb
sbb
repz
xchg
out
xchg
jl
out
or
adc
(bad)
repnz
test
fldenv
into
(bad)
repz
div
cmc
out
cmp
repnz
imul
cmc
lahf
fnstenv
ja
test
xchg
idiv
int3
fstp
sbb
jmp
neg
neg
outs
into
cmp
int
shl
mov
cmc
out
sub
repnz
test
jl
(bad)
fstp
into
adc
in
repnz
idiv
cmc
rcr
into
adc
(bad)
repnz
test
out
push
into
sbb
int3
repnz
idiv
cmc
out
cmp
bnd
mov
cmc
xchg
fstp
into
aas
lock
repnz
idiv
cmc
rcr
into
sbb
jmp
neg
neg
and
push
lock
repnz
mov
cmc
in
sbb
sbb
test
xchg
not
out
jmp
into
sbb
enter
mov
cmc
xchg
fstp
into
aas
lock
clc
idiv
cmc
rcr
into
sbb
jmp
not
(bad)
fldcw
adc
(bad)
repnz
test
out
sub
add
int3
repnz
idiv
cmc
out
sub
repnz
mov
cmc
int3
fstp
into
adc
jmp
div
in
sbb
push
lock
out
xor
cmc
in
sbb
repnz
test
mov
jno
int3
fstp
sbb
jmp
neg
jmp
repnz
test
rcr
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
out
sbb
sbb
ret
repnz
xchg
out
xchg
jl
out
cmp
repnz
mov
cmc
xchg
fstp
into
adc
out
repnz
idiv
cmc
out
xor
repnz
imul
cmc
out
sbb
sbb
jmp
imul
xchg
fldenv
into
(bad)
repz
div
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
cwde
repnz
idiv
cmc
out
(bad)
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
(bad)
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
(bad)
into
or
jecxz
retf
out
xor
cmc
neg
sbb
sbb
jmp
div
neg
sbb
sbb
jmp
imul
out
sbb
sbb
out
clc
idiv
cmc
xchg
fstp
into
sbb
in
repnz
test
fstp
into
sbb
jmp
idiv
xchg
fstp
into
sbb
jmp
idiv
out
sbb
sbb
fcomi
fdivp
lods
out
mov
fnstenv
into
push
lock
repnz
mov
cmc
in
sbb
sbb
call
out
mov
jbe
out
sbb
sbb
repz
xchg
out
xchg
jl
out
or
adc
(bad)
repnz
test
fldenv
into
(bad)
repz
test
fstp
into
sbb
jmp
not
cmc
xlat
fstp
repnz
not
cmc
out
sub
repnz
mov
cmc
int3
fstp
into
adc
jmp
not
cmc
in
sbb
push
lock
out
xor
cmc
into
fst
into
adc
jmp
idiv
fnstenv
into
ds
repnz
not
cmc
out
or
adc
(bad)
repnz
idiv
cmc
jmp
repnz
test
out
cmp
xor
int3
repnz
neg
cmc
out
sbb
sbb
(bad)
loopne
mov
cmc
int3
fstp
into
adc
shl
idiv
aam
imul
lock
repnz
cmc
out
fnstenv
into
adc
out
repnz
idiv
cmc
out
xor
repnz
neg
cmc
cmc
fstp
into
sbb
jmp
mul
(bad)
fldenv
into
ja
test
xchg
test
rcr
or
(bad)
jmp
imul
fstp
into
xor
jmp
mul
in
or
sbb
out
repnz
idiv
cmc
out
xor
repnz
imul
cmc
out
sbb
sbb
jmp
imul
xchg
fldenv
into
(bad)
repz
neg
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
out
fldcw
into
sbb
jmp
not
aam
xor
sbb
test
xchg
not
out
jmp
into
sbb
icebp
repnz
idiv
cmc
(bad)
(bad)
into
adc
(bad)
repnz
mov
(bad)
div
out
fldcw
into
sbb
jmp
not
out
sbb
sbb
jmp
imul
aam
and
(bad)
repz
neg
out
cmp
repnz
cmc
out
or
sbb
xor
not
cmc
hlt
fstp
into
sbb
jmp
mul
fstp
into
xor
fptan
into
imul
cmc
in
sbb
sbb
jmp
div
neg
adc
sbb
jmp
neg
int3
fnstcw
repnz
idiv
cmc
rcr
into
sbb
int
call
neg
ret
(bad)
into
sub
icebp
repnz
idiv
cmc
(bad)
fnstcw
repnz
idiv
cmc
rcr
into
push
lock
repnz
leave
out
mov
jo
xchg
fnstenv
into
sbb
jmp
out
test
push
xchg
fst
into
adc
out
repnz
idiv
cmc
out
xor
repnz
imul
cmc
out
sbb
sbb
jmp
imul
rcr
into
(bad)
repz
test
mov
fstp
into
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
rcr
push
into
sbb
jmp
idiv
fstp
into
sbb
in
sti
idiv
cmc
rcr
into
or
loop
into
test
neg
sbb
sbb
jmp
imul
out
sbb
sbb
out
clc
idiv
cmc
out
sbb
sbb
in
repnz
test
fstp
into
sbb
in
repnz
idiv
cmc
in
sbb
repnz
idiv
cmc
out
sbb
sbb
idiv
cmc
out
sub
repnz
test
aam
or
sbb
into
repnz
mov
cmc
(bad)
fstp
into
adc
in
repnz
idiv
cmc
lahf
fstp
repnz
neg
cmc
xlat
fnstenv
adc
icebp
repnz
leave
out
mov
jno
int3
fstp
sbb
jmp
neg
jmp
repnz
scas
out
xor
sbb
sbb
jmp
not
enter
sbb
jmp
idiv
out
sbb
sbb
loopne
(bad)
not
cmc
out
sbb
sbb
push
xor
jl
out
cmp
repnz
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fstp
into
sbb
cwde
repnz
idiv
cmc
xchg
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
(bad)
into
or
jecxz
retf
out
xor
cmc
aam
sbb
sbb
out
repnz
idiv
cmc
xchg
fld
into
sbb
neg
cmc
out
sbb
sbb
fdivp
sti
neg
cmc
aam
xor
adc
retf
not
cmc
out
cmp
repnz
idiv
cmc
lahf
fnstenv
into
sbb
loopne
(bad)
mov
cmc
enter
sbb
jmp
mul
(bad)
fldcw
repnz
idiv
cmc
jmp
repnz
test
std
fstp
into
sbb
jmp
not
cmc
repz
into
sbb
jmp
not
out
(bad)
into
sbb
imul
cmc
out
sbb
sbb
(bad)
clc
neg
cmc
jmp
repnz
idiv
cmc
out
sbb
imul
mov
cmc
out
sbb
sbb
repz
idiv
cmc
out
sbb
pop
lock
div
out
sub
bnd
idiv
fnstenv
into
ds
idiv
in
sbb
sbb
jmp
not
cmc
std
fnstcw
repnz
idiv
cmc
rcr
into
sbb
jmp
imul
fnstenv
into
sbb
jmp
out
xor
sub
sbb
jmp
not
loop
sbb
sbb
jmp
mul
(bad)
fnstcw
repnz
idiv
cmc
rcr
into
sbb
jmp
imul
fnstenv
into
sbb
loopne
cld
idiv
cmc
rcr
or
xor
icebp
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
(bad)
repnz
idiv
cmc
repnz
into
sbb
jmp
idiv
fstp
into
sbb
in
repnz
idiv
cmc
int3
(bad)
into
sbb
idiv
cmc
out
sbb
sbb
lahf
repnz
neg
cmc
jmp
repnz
idiv
cmc
rcr
into
sbb
jmp
not
neg
sbb
sbb
jmp
idiv
out
sbb
sbb
out
repnz
not
cmc
out
or
adc
(bad)
repnz
idiv
cmc
enter
adc
(bad)
repnz
xchg
xchg
mul
out
push
into
pop
lock
repnz
neg
cmc
(bad)
fstp
into
sbb
jmp
idiv
xchg
fstp
into
sbb
(bad)
loopne
shr
mov
pop
cmc
lahf
fnstenv
ja
test
xchg
div
cmc
jmp
repnz
neg
cmc
jecxz
and
xor
ret
imul
out
fldenv
into
adc
not
cmc
loop
sbb
repnz
out
xchg
jl
out
sbb
pop
lock
div
neg
sbb
sbb
jmp
test
repnz
idiv
cmc
ret
fnstcw
repnz
idiv
cmc
aam
xor
sbb
fptan
clc
idiv
cmc
rcr
into
sbb
loop
call
idiv
fldcw
repnz
cmc
repnz
into
cmp
loopne
clc
idiv
cmc
rcr
into
sbb
jecxz
retf
out
xchg
outs
cmc
rcr
sbb
sbb
push
(bad)
not
cmc
out
sbb
sbb
in
repnz
div
cmc
out
or
add
jmp
test
sbb
jmp
idiv
fstp
into
adc
jmp
not
out
sbb
sbb
jmp
idiv
(bad)
into
add
jmp
div
repnz
into
sbb
stc
bnd
mul
repnz
repnz
idiv
cmc
xchg
fld
into
sbb
test
out
sbb
sbb
sti
repnz
test
jmp
repnz
test
int3
fstp
sbb
jmp
neg
neg
add
adc
imul
cmc
rcr
sbb
sbb
push
(bad)
imul
(bad)
fnstcw
repnz
idiv
cmc
(bad)
fnstenv
into
sbb
fptan
clc
idiv
cmc
rcr
into
sbb
loop
call
idiv
fldcw
repnz
cmc
repnz
into
cmp
loopne
clc
idiv
cmc
rcr
into
sbb
jecxz
retf
out
xchg
je
rcr
sbb
sbb
push
shl
mov
cmc
out
sbb
bnd
neg
repnz
into
sbb
idiv
cmc
(bad)
fnstcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
or
jmp
imul
out
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
loop
sbb
sbb
push
fdivp
lods
out
xchg
imul
sbb
jmp
imul
out
sbb
sbb
in
repnz
idiv
cmc
enter
sbb
out
repnz
test
fnstcw
repnz
idiv
cmc
out
xor
repnz
imul
cmc
out
sbb
sbb
jmp
imul
int3
fldenv
into
(bad)
repz
test
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
test
push
lock
repnz
out
xor
cmc
mov
adc
adc
jmp
div
int3
fstp
sbb
jmp
neg
neg
adc
sbb
jmp
neg
rcr
into
sbb
jmp
idiv
fstp
into
sbb
jmp
div
out
sbb
sbb
in
fdivp
xchg
out
xchg
jl
out
or
sbb
(bad)
repnz
mov
cmc
neg
sbb
adc
out
repnz
idiv
cmc
xchg
fnstenv
sbb
jmp
not
loop
sbb
sbb
jmp
div
out
sbb
sbb
out
fdivp
xchg
out
test
jl
out
sub
repnz
idiv
cmc
out
fstp
into
aas
lock
repnz
idiv
cmc
jmp
repnz
idiv
cmc
out
sbb
sbb
out
sti
idiv
cmc
loop
sbb
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
(bad)
into
or
jecxz
retf
out
xor
cmc
neg
sbb
sbb
jmp
imul
out
sbb
sbb
out
repnz
idiv
cmc
enter
sbb
out
repnz
test
fstp
into
sbb
jmp
idiv
xchg
(bad)
into
sbb
jmp
idiv
out
cmp
repnz
test
out
sbb
sbb
jmp
not
cmc
mov
jne
ja
jecxz
shl
xchg
out
xchg
jl
out
cmp
repnz
idiv
cmc
rcr
into
adc
jmp
neg
(bad)
into
sbb
fptan
in
neg
cmc
rcr
or
sbb
repz
xchg
out
xchg
jl
out
cmp
bnd
idiv
fnstenv
into
ds
iret
imul
cmc
out
sub
repnz
test
sahf
fstp
into
sbb
stc
repnz
enter
jae
(bad)
fstp
into
sbb
fcomip
mov
retf
out
popf
idiv
fstp
into
sbb
shl
cli
test
xchg
fldcw
repnz
idiv
cmc
xchg
fldcw
xor
in
repnz
out
xchg
jl
out
cmp
repnz
into
out
(bad)
idiv
out
sbb
sbb
retf
mul
cmc
(bad)
fstp
into
sbb
jmp
idiv
out
sbb
sbb
fcomi
fdivp
xchg
out
xchg
neg
neg
sbb
adc
leave
repnz
mov
cmc
jecxz
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
or
jmp
div
fstp
into
sbb
jmp
idiv
fstp
into
or
jmp
idiv
repnz
into
sbb
in
retf
out
test
dec
cmc
enter
push
fptan
retf
out
xor
cmc
rcr
sbb
sbb
jmp
not
cmc
in
sbb
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
repnz
sbb
out
fdivp
mov
cmc
neg
sbb
sbb
jmp
imul
out
sbb
sbb
in
repnz
idiv
cmc
out
pop
into
sbb
in
repnz
test
fstp
into
sbb
jmp
div
out
sbb
sbb
jecxz
fdivp
xchg
out
mov
jl
out
cmp
repnz
idiv
cmc
lahf
fnstenv
into
sbb
jmp
not
neg
sbb
sbb
jmp
idiv
out
sbb
sbb
out
(bad)
div
cmc
out
sub
repnz
not
out
mov
pop
cmc
aam
(bad)
into
adc
out
shl
mov
cmc
lahf
fnstenv
jae
int3
bnd
idiv
fstp
into
xor
idiv
cmc
(bad)
fstp
into
sbb
jmp
idiv
fstp
into
sbb
retf
idiv
cmc
jmp
repnz
idiv
cmc
out
sbb
sbb
retf
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
in
repnz
test
xchg
jno
int3
fstp
into
sbb
out
repnz
idiv
cmc
xchg
fld
into
sbb
idiv
cmc
out
sbb
sbb
retf
idiv
cmc
jmp
repnz
out
xchg
idiv
(bad)
into
adc
in
clc
test
sahf
(bad)
into
sbb
in
repnz
idiv
cmc
rcr
into
sbb
jmp
neg
(bad)
fstp
into
sbb
jmp
test
lock
repnz
idiv
cmc
call
lock
repnz
int
(bad)
div
fldenv
adc
out
fdivp
mov
cmc
neg
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
repz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
in
repnz
test
xchg
jno
(bad)
(bad)
into
sbb
out
repnz
idiv
cmc
xchg
fst
into
sbb
out
repnz
idiv
cmc
xchg
fld
into
sbb
test
out
sbb
sbb
int3
repnz
neg
cmc
jmp
repnz
neg
cmc
out
sbb
sbb
loope
fdivp
xchg
mov
dec
cmc
rcr
sub
repnz
idiv
cmc
lahf
fnstenv
into
sbb
loopne
loopne
mov
cmc
neg
sbb
adc
in
repnz
idiv
cmc
rcr
into
sbb
jmp
neg
(bad)
fstp
into
sbb
jmp
idiv
out
sbb
sbb
icebp
repnz
not
cmc
out
sub
repnz
imul
cmc
out
sbb
sbb
stc
repnz
idiv
cmc
aam
sbb
sbb
jmp
idiv
fstp
into
sbb
fptan
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
iret
fstp
into
sbb
cld
repnz
idiv
out
fstp
into
sbb
jmp
idiv
fstp
into
adc
neg
cmc
enter
sbb
jmp
mul
(bad)
fnstcw
repnz
idiv
cmc
jmp
repnz
test
std
fstp
into
sbb
jmp
not
cmc
repz
into
sbb
imul
cmc
out
sbb
sbb
leave
repnz
neg
cmc
jmp
repnz
idiv
cmc
rcr
into
push
lock
repnz
idiv
cmc
rcr
into
sbb
jmp
neg
neg
sbb
sbb
jmp
mul
xchg
fstp
sbb
(bad)
(bad)
idiv
cmc
out
fstp
into
adc
retf
idiv
cmc
neg
sbb
sbb
jmp
div
out
sbb
sbb
jmp
out
xchg
jl
out
or
pop
lock
repnz
lods
out
test
jl
out
or
sbb
in
cli
idiv
cmc
xchg
fstp
into
adc
out
repnz
idiv
cmc
out
xor
repnz
imul
cmc
neg
sbb
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
fstp
into
sbb
ret
not
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
out
sbb
sbb
in
repnz
idiv
cmc
jmp
repnz
jl
out
sbb
push
lock
repnz
imul
cmc
out
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
in
adc
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
in
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
test
sbb
jmp
idiv
fstp
into
aas
lock
idiv
fstp
into
sbb
jmp
test
cmp
fdivp
clc
idiv
cmc
out
pop
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
neg
in
sbb
sbb
jmp
idiv
fstp
into
sbb
shl
test
cmps
test
lock
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
adc
out
repnz
idiv
cmc
neg
adc
cmp
not
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
adc
loop
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
loop
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
enter
mov
cmc
(bad)
adc
repnz
idiv
cmc
out
sbb
aas
lock
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
add
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
imul
fstp
into
sbb
cli
repnz
idiv
cmc
out
sbb
sbb
idiv
cmc
out
or
xor
jmp
idiv
fstp
into
sbb
jmp
idiv
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
or
xor
idiv
cmc
out
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
aam
or
sbb
call
out
icebp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
push
lock
sti
test
jmp
repnz
idiv
cmc
in
sbb
sbb
jmp
idiv
fstp
into
sbb
shl
imul
cmc
xchg
(bad)
into
add
shl
imul
cmc
jmp
repnz
not
cmc
in
xor
cmp
call
not
in
fstp
repnz
out
cmps
test
add
int3
repnz
test
cmc
ret
fldcw
cmp
shl
sti
div
cmc
retf
fstp
repnz
lods
out
mov
fstp
into
sub
neg
cmc
in
cmp
repnz
not
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
neg
sbb
sbb
jmp
idiv
fldcw
into
(bad)
in
sti
idiv
cmc
out
sbb
adc
jmp
idiv
fnstcw
repnz
div
cmc
in
or
cmp
jmp
idiv
fstp
into
sbb
out
std
idiv
cmc
out
cmp
repnz
cmps
out
mov
(bad)
into
or
cli
bnd
stos
out
xchg
imul
fstp
into
sbb
jmp
idiv
(bad)
into
sbb
jmp
idiv
neg
add
add
push
out
test
pushf
test
lock
out
not
cmc
xchg
(bad)
repnz
test
cmc
xchg
fldenv
into
cmp
(bad)
repnz
xchg
out
cmps
test
repz
cmc
icebp
fstp
repnz
int
nop
not
int3
fstp
into
pop
lock
in
idiv
cmc
int3
(bad)
into
adc
test
fldcw
push
lock
repnz
cmc
icebp
fldcw
cmp
(bad)
jmp
test
mov
fldcw
add
fcomi
shl
out
pushf
test
into
imul
cmc
cmc
fld
into
cmp
(bad)
repnz
test
cmc
in
fld
into
cmp
fwait
repnz
out
mov
fstp
into
adc
fdiv
(bad)
idiv
cmc
out
xor
adc
shl
mov
xchg
out
cmps
test
cmp
shl
out
not
cmc
rcr
xor
add
fcomi
shl
out
cmps
test
cmp
fcomip
sti
idiv
cmc
icebp
fstp
repnz
not
cmc
jmp
lock
not
in
fnstenv
into
adc
shl
out
test
pushf
test
lock
out
not
cmc
xchg
(bad)
repnz
cmps
out
mov
fstp
repnz
imul
cmc
out
sbb
sbb
jmp
out
repnz
nop
fst
into
sbb
jmp
idiv
fldenv
into
push
lock
repnz
idiv
cmc
out
adc
sbb
jmp
test
into
sbb
not
cmc
repnz
into
sbb
jmp
not
neg
sbb
sbb
jmp
idiv
out
fnstenv
into
adc
cld
repnz
cmc
out
sbb
sbb
ret
not
cmc
neg
sbb
sbb
jmp
idiv
out
fnstenv
into
ss
imul
loop
sbb
adc
int
loopne
scas
out
xor
cmc
jmp
bnd
div
loop
or
push
lock
(bad)
idiv
cmc
neg
adc
adc
repnz
xchg
(bad)
idiv
loop
sbb
sbb
(bad)
loopne
xchg
out
test
dec
cmc
(bad)
fstp
into
sbb
jmp
idiv
fnstenv
into
pop
lock
repnz
idiv
(bad)
(bad)
into
sbb
idiv
cmc
aam
imul
call
div
out
sbb
sbb
into
repnz
mov
cmc
aam
add
adc
not
cmc
lahf
(bad)
into
sbb
idiv
lahf
(bad)
into
sbb
idiv
lahf
(bad)
into
sbb
stc
repnz
not
cmc
xchg
fnstenv
into
sbb
jmp
not
out
cmp
repnz
retf
imul
jmp
repnz
imul
loop
sbb
sbb
jmp
test
into
sbb
idiv
cmc
iret
(bad)
into
cmp
in
div
lods
out
xor
cmc
jmp
repnz
idiv
jmp
repnz
idiv
cmc
loopne
or
sbb
imul
cmc
out
fldenv
into
sbb
idiv
cmc
iret
fstp
into
(bad)
(bad)
repnz
outs
cmc
neg
or
sbb
idiv
cmc
neg
adc
adc
repnz
test
loop
sbb
sbb
cli
repnz
not
cmc
out
sbb
cmp
(bad)
repnz
mov
cmc
xchg
(bad)
into
sbb
test
mov
ins
cmc
jmp
repnz
not
cmc
out
or
ss
repnz
mov
cmc
loop
sbb
sbb
in
hlt
idiv
out
sbb
sbb
lahf
repnz
idiv
cmc
enter
push
lock
out
xchg
jl
out
sbb
adc
(bad)
repnz
neg
cmc
loop
sbb
sbb
out
cld
idiv
out
sbb
sbb
pushf
repnz
cdq
out
xor
cmc
(bad)
fnstenv
into
sbb
fcomip
into
imul
cmc
jmp
repnz
neg
cmc
out
push
adc
jmp
idiv
(bad)
into
sbb
stc
repnz
mov
cmc
out
sbb
sbb
pushf
repnz
cdq
out
xor
cmc
jmp
repnz
mov
cmc
rcr
sub
repnz
idiv
cmc
rcr
into
or
int
clc
idiv
cmc
out
sbb
adc
loope
cld
imul
neg
sbb
sbb
jmp
idiv
out
fldenv
into
sbb
push
loopne
xchg
out
xchg
imul
sbb
jmp
mul
fldcw
adc
out
repnz
idiv
jmp
repnz
idiv
cmc
rcr
into
or
imul
cmc
enter
push
lock
out
xchg
jl
out
or
adc
(bad)
repnz
scas
out
xor
cmc
out
sbb
sbb
out
retf
out
test
outs
cmc
out
fldenv
into
adc
imul
enter
push
lock
out
xchg
jl
out
sub
repnz
neg
cmc
rcr
into
sbb
test
neg
sbb
sbb
jmp
idiv
out
fstp
into
sbb
push
loopne
xchg
xchg
imul
adc
int
loopne
scas
out
xor
cmc
(bad)
fnstenv
into
sbb
fcomip
loopne
mov
cmc
loop
sbb
adc
in
repnz
idiv
out
or
sbb
pushf
repnz
cdq
out
xor
cmc
in
or
sbb
jmp
imul
(bad)
(bad)
into
sbb
imul
out
sbb
adc
in
cli
idiv
cmc
jmp
repnz
not
cmc
out
sbb
cmp
(bad)
repnz
mov
cmc
neg
or
sbb
test
out
sbb
sbb
fwait
repnz
mov
cmc
neg
cmp
repnz
cmc
out
sbb
sbb
int3
repnz
xchg
test
outs
cmc
out
fnstcw
repnz
idiv
cmc
aam
sub
ds
not
cmc
out
sub
repnz
idiv
cmc
aam
sub
ds
lock
out
sbb
sbb
enter
xchg
test
dec
cmc
in
cmp
repnz
test
xchg
dec
cmc
(bad)
fstp
into
adc
idiv
cmc
out
sbb
adc
out
xacquire
cmc
neg
xor
sbb
jmp
not
cmc
xlat
fnstenv
into
push
lock
clc
idiv
cmc
xchg
fnstenv
sbb
jmp
not
cmc
ret
fnstcw
repnz
not
cmc
out
cmp
repnz
idiv
cmc
out
sbb
sbb
idiv
cmc
int3
fst
into
adc
loopne
clc
idiv
cmc
into
fnstenv
into
sbb
jmp
not
out
fstp
into
sbb
jmp
idiv
out
fnstenv
into
sbb
jmp
imul
xchg
fnstenv
sbb
clc
repnz
cmc
int3
(bad)
into
push
lock
neg
cmc
enter
sbb
jmp
idiv
out
adc
sbb
call
out
cmps
div
(bad)
fstp
into
sbb
jmp
idiv
(bad)
into
sbb
test
out
cmp
repnz
neg
cmc
jmp
repnz
idiv
cmc
neg
xor
sbb
loopne
(bad)
idiv
cmc
repnz
cmp
out
repnz
idiv
cmc
xchg
fst
into
cmp
jmp
test
lock
imul
out
sbb
sbb
in
clc
idiv
cmc
rcr
sbb
sbb
out
repnz
test
fnstcw
repnz
idiv
cmc
out
xor
repnz
idiv
cmc
out
cmp
repnz
not
cmc
out
sbb
sbb
loope
(bad)
div
cmc
out
or
sbb
jmp
div
out
sbb
sbb
out
repnz
nop
out
xchg
jl
out
sbb
xor
(bad)
leave
idiv
cmc
xchg
fstp
into
adc
call
out
test
jp
out
adc
cmp
jmp
test
lock
clc
idiv
cmc
into
fstp
into
push
lock
repnz
idiv
cmc
xchg
fld
into
sbb
imul
cmc
out
sbb
sbb
shl
clc
neg
cmc
jmp
repnz
neg
cmc
out
sbb
sbb
push
fdivp
xchg
out
test
pop
cmc
enter
sbb
jmp
not
out
fnstcw
bnd
idiv
fstp
into
aas
lock
repnz
idiv
cmc
jmp
repnz
cdq
out
xchg
jl
out
sub
repnz
cdq
out
test
jbe
out
sbb
sbb
out
shl
lods
out
movs
div
ret
into
push
lock
(bad)
idiv
cmc
xchg
fldcw
cmp
repnz
not
cmc
out
sbb
sbb
in
shl
xchg
out
test
outs
cmc
rcr
cmp
repnz
neg
cmc
std
fldcw
repnz
neg
cmc
enter
sbb
jmp
imul
(bad)
(bad)
into
sbb
clc
repnz
idiv
cmc
aam
adc
adc
retf
test
out
sbb
sbb
loopne
xchg
not
cmc
loop
sbb
sbb
jmp
neg
fnstcw
repnz
imul
cmc
in
cmp
repnz
mov
cmc
enter
sbb
jmp
div
out
sbb
sbb
jecxz
xchg
not
cmc
out
sbb
sbb
in
repnz
not
cmc
out
sbb
sbb
out
clc
idiv
cmc
int3
fstp
repnz
test
fstp
into
sbb
out
leave
idiv
cmc
enter
sbb
jmp
idiv
fstp
into
sbb
idiv
cmc
rcr
into
sbb
into
bnd
imul
cmc
out
sbb
adc
in
fdiv
xchg
out
(bad)
div
xchg
fst
sbb
in
repnz
idiv
cmc
rcr
into
sbb
out
cld
idiv
cmc
(bad)
fstp
into
cmp
loopne
clc
idiv
cmc
mov
sbb
repnz
cmc
std
fnstcw
repnz
idiv
cmc
call
lock
not
out
adc
sbb
call
out
cmps
imul
out
sbb
sbb
out
clc
idiv
cmc
(bad)
fstp
into
sbb
call
out
xor
cmc
out
cmp
repnz
idiv
cmc
mov
or
repnz
cmc
enter
sbb
jmp
div
xchg
fstp
into
sbb
stc
repnz
idiv
cmc
lahf
fldcw
cmp
repz
div
out
sbb
sbb
xor
idiv
cmc
loop
xor
sbb
jmp
test
sbb
stc
bnd
div
out
sbb
sbb
xchg
repnz
nop
out
xchg
jl
out
sub
repnz
xchg
out
scas
div
fstp
into
sbb
cld
repnz
mov
cmc
out
sbb
sbb
shl
not
cmc
enter
sbb
jmp
div
out
sbb
sbb
sahf
repnz
out
test
jbe
out
sbb
sbb
lahf
repnz
xchg
out
xchg
jbe
enter
sbb
jmp
imul
out
sbb
sbb
loopne
clc
idiv
cmc
xchg
fstp
sbb
in
repnz
test
fstp
into
sbb
loopne
clc
idiv
cmc
sahf
fldcw
sbb
(bad)
repnz
idiv
cmc
repnz
cmp
fcomi
mov
mov
xchg
push
rcr
into
sbb
out
cld
idiv
cmc
neg
or
xor
repnz
lods
out
xchg
mul
enter
sbb
jmp
imul
out
fldcw
repnz
idiv
cmc
jmp
lock
repnz
neg
cmc
out
cmp
repnz
lods
out
xchg
neg
fnstenv
into
xor
call
out
test
outs
cmc
out
sbb
sbb
loope
clc
idiv
cmc
aam
push
into
sbb
out
repnz
test
fstp
into
sbb
(bad)
loopne
xchg
out
xchg
jl
out
sbb
adc
(bad)
xacquire
cmc
out
or
or
xor
neg
cmc
(bad)
fnstenv
into
cs
shl
xchg
out
scas
div
rcr
into
sbb
repnz
mov
cmc
out
sbb
sbb
lahf
repnz
xchg
out
xor
cmc
jmp
repnz
imul
cmc
std
fnstcw
repnz
imul
cmc
xlat
fstp
into
sbb
jmp
mul
fnstenv
into
sbb
jmp
not
out
adc
sbb
call
out
cmps
div
repnz
into
adc
in
in
not
cmc
out
sub
repnz
idiv
cmc
out
imul
(bad)
neg
cmc
(bad)
fstp
into
or
fptan
into
neg
cmc
enter
sbb
jmp
imul
out
sbb
sbb
loop
clc
idiv
cmc
xchg
fstp
into
sbb
call
out
xor
cmc
out
sbb
sbb
jmp
not
fstp
into
sbb
iret
repnz
neg
cmc
out
sbb
sbb
neg
cmc
enter
push
lock
out
xchg
jl
out
cmp
repnz
div
cmc
int3
fldcw
cmp
in
repnz
test
rcr
xor
sbb
jmp
test
sbb
jmp
out
cmps
idiv
enter
push
lock
out
xchg
jl
out
cmp
repnz
div
cmc
jmp
repnz
test
out
or
cmp
(bad)
aad
cdq
out
xchg
dec
cmc
int3
fnstcw
repnz
neg
out
sbb
sbb
fdiv
xor
out
xchg
jbe
out
sbb
sbb
fptan
xor
out
xchg
jl
out
sub
repnz
idiv
cmc
enter
cmp
loopne
clc
idiv
cmc
iret
fnstenv
into
sbb
jmp
test
sbb
jmp
out
cmps
div
fstp
into
adc
fdiv
(bad)
idiv
cmc
rcr
into
cmp
fdiv
sti
imul
cmc
in
fst
into
sbb
out
cld
idiv
cmc
out
sbb
cmp
loopne
clc
idiv
cmc
sahf
(bad)
repnz
out
xor
sbb
sbb
(bad)
repnz
out
xchg
jl
out
or
add
(bad)
(bad)
mov
xchg
jbe
out
sbb
sbb
shl
div
cmc
loop
sub
repnz
neg
cmc
out
sub
repnz
mov
cmc
(bad)
fstp
into
sbb
jmp
idiv
fstp
into
adc
idiv
cmc
loop
sub
repnz
idiv
cmc
out
sbb
sbb
jmp
imul
fstp
into
sbb
jmp
idiv
out
sbb
sbb
cli
repnz
mov
cmc
(bad)
into
sbb
into
repnz
mov
cmc
jmp
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
not
cmc
std
fnstenv
into
sbb
jmp
test
ja
test
xchg
imul
cmc
out
sbb
sbb
ret
repnz
mov
cmc
out
sub
repnz
xchg
out
div
jle
jmp
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
idiv
fstp
into
sbb
sahf
repnz
neg
cmc
aam
or
sbb
jmp
idiv
repnz
into
adc
test
out
or
sbb
jmp
idiv
neg
sub
bnd
idiv
(bad)
into
sbb
jmp
idiv
neg
or
das
lock
idiv
(bad)
into
sbb
jmp
idiv
neg
sbb
cs
bnd
idiv
(bad)
into
sbb
jmp
idiv
neg
cmp
bnd
idiv
(bad)
into
sbb
jmp
idiv
neg
or
cmp
loope
call
idiv
(bad)
into
sbb
jmp
idiv
neg
or
add
shl
call
idiv
(bad)
into
sbb
jmp
idiv
out
fstp
into
ja
clc
repnz
neg
cmc
out
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
iret
fstp
into
sbb
into
repnz
xchg
test
pop
cmc
aad
sbb
sbb
jmp
not
enter
sbb
jmp
test
lock
not
enter
sbb
idiv
cmc
rcr
sbb
adc
(bad)
cld
test
enter
sbb
jmp
test
lock
(bad)
idiv
cmc
lahf
fstp
into
adc
fdiv
sti
imul
cmc
out
fnstenv
sbb
jmp
not
repnz
into
adc
xchg
repnz
idiv
cmc
repnz
adc
loopne
clc
idiv
cmc
rcr
into
add
int
clc
neg
cmc
jmp
repnz
idiv
cmc
(bad)
fstp
adc
out
repnz
idiv
int3
fnstenv
into
xor
loopne
clc
idiv
cmc
iret
fstp
into
cmp
jmp
test
lock
repnz
idiv
cmc
xchg
fldcw
adc
fdiv
retf
out
xor
cmc
xchg
fldcw
into
adc
out
repnz
div
cmc
(bad)
into
sbb
into
repnz
idiv
cmc
rcr
into
cmp
(bad)
repnz
idiv
int3
(bad)
into
sbb
idiv
cmc
lahf
fldcw
push
lock
cld
imul
enter
sbb
jmp
div
out
sbb
sbb
std
repnz
not
cmc
out
sbb
sbb
imul
cmc
rcr
xor
pop
lock
repnz
mov
cmc
jmp
repnz
idiv
cmc
xchg
fst
into
sbb
jmp
not
cmc
in
cmp
repnz
neg
cmc
out
sbb
sbb
cld
repnz
xchg
out
xchg
jl
out
sub
bnd
idiv
fldcw
into
adc
out
repnz
test
out
or
add
(bad)
repnz
cdq
out
xchg
jl
xchg
fldcw
into
adc
out
repnz
test
out
sbb
add
(bad)
bnd
div
rcr
xor
sbb
jmp
not
neg
or
sbb
not
cmc
out
sub
bnd
div
out
sbb
sbb
enter
lods
out
xchg
jp
rcr
xor
sbb
jmp
not
int3
fnstcw
repnz
idiv
cmc
aam
sbb
adc
loope
loopne
xchg
out
xchg
jl
out
cmp
repnz
idiv
cmc
out
fstp
into
adc
fdiv
sti
idiv
cmc
in
fst
into
sbb
stc
repnz
idiv
cmc
loop
and
ja
test
xchg
neg
cmc
int3
(bad)
into
sbb
idiv
rcr
into
push
lock
repnz
not
cmc
out
sub
bnd
idiv
fnstcw
repnz
idiv
(bad)
fnstenv
into
sbb
jmp
not
(bad)
(bad)
into
sbb
idiv
cmc
iret
fstp
into
adc
stc
repnz
lods
out
xor
cmc
out
sbb
sbb
cld
repnz
xchg
out
(bad)
imul
(bad)
(bad)
into
sbb
not
cmc
out
sub
repnz
cmc
out
sbb
sbb
xor
test
rcr
sbb
adc
(bad)
repnz
not
cmc
(bad)
fstp
into
sbb
jmp
not
loop
or
sbb
fdiv
cld
imul
(bad)
fstp
into
sbb
jmp
div
out
sbb
sbb
icebp
repnz
mov
cmc
out
sub
repnz
mov
cmc
aam
push
into
xor
shl
not
cmc
aam
sbb
sbb
jmp
neg
fstp
adc
ret
repnz
idiv
repnz
into
sbb
idiv
cmc
repnz
into
xor
imul
rcr
into
sbb
imul
out
or
or
(bad)
repnz
xchg
neg
(bad)
into
sbb
test
loop
sbb
sbb
jmp
neg
(bad)
pop
lock
repnz
idiv
out
fldenv
into
sbb
idiv
cmc
neg
xor
xor
imul
rcr
into
sbb
not
cmc
out
or
sbb
idiv
cmc
into
fstp
into
adc
push
loopne
mov
cmc
out
sub
repnz
imul
cmc
out
sbb
sbb
loopne
xlat
imul
cmc
(bad)
fnstenv
into
sbb
jmp
not
out
and
adc
cld
repnz
ins
cmc
loop
or
sbb
fdiv
in
imul
cmc
rcr
xor
sbb
stc
bnd
idiv
fstp
into
aas
lock
repnz
idiv
cmc
rcr
into
sbb
jmp
not
cmc
sahf
fstp
into
adc
stc
repnz
not
cmc
out
sbb
pop
lock
repnz
xchg
out
xchg
dec
cmc
(bad)
fstp
into
sbb
jmp
div
rcr
and
sbb
idiv
cmc
rcr
into
adc
cld
repnz
mov
cmc
out
sbb
sbb
stc
repnz
lods
out
xor
or
sbb
test
xchg
fldcw
into
sbb
jmp
not
neg
sbb
sbb
jmp
neg
loop
sbb
sbb
fptan
loopne
xchg
out
xchg
jl
out
sub
repnz
jbe
out
sbb
sbb
cld
repnz
xchg
out
(bad)
imul
enter
sbb
jmp
test
sbb
shl
cmc
test
(bad)
imul
lahf
fldenv
into
sbb
idiv
cmc
iret
fstp
into
cmp
jmp
test
lock
into
not
cmc
out
or
push
lock
repnz
idiv
cmc
neg
sbb
adc
int
cld
not
cmc
out
sub
repnz
push
cmc
(bad)
fstp
into
sbb
jmp
div
out
sbb
sbb
call
out
cmps
idiv
fldcw
repnz
out
xor
cmc
jmp
repnz
test
lahf
(bad)
into
sbb
test
enter
sbb
jmp
neg
loop
and
sbb
fptan
(bad)
idiv
cmc
out
fstp
adc
loopne
clc
idiv
cmc
iret
fnstenv
into
sbb
jmp
test
sbb
idiv
cmc
iret
fstp
into
pop
lock
fdivp
lods
out
xor
cmc
out
sbb
sbb
call
out
xor
cmc
xchg
fldenv
into
sbb
idiv
cmc
rcr
into
push
lock
repnz
imul
jmp
repnz
neg
cmc
xchg
(bad)
into
sbb
imul
enter
sbb
jmp
imul
loop
sbb
adc
push
(bad)
idiv
cmc
rcr
push
cmp
leave
repnz
not
cmc
out
sub
repnz
test
out
sbb
sbb
xor
imul
cmc
int3
fnstcw
repnz
lods
out
xor
cmc
out
sbb
sbb
std
repnz
idiv
cmc
neg
sbb
sbb
jmp
idiv
(bad)
fldcw
repnz
idiv
cmc
out
xor
repnz
test
out
adc
sbb
jmp
div
out
sbb
sbb
loopne
shl
mov
cmc
neg
sbb
sbb
jmp
div
out
sbb
sbb
test
fdivp
mov
cmc
out
or
and
shl
leave
idiv
cmc
enter
adc
shl
retf
out
test
jl
out
sbb
push
lock
test
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
repnz
adc
stc
repnz
out
xor
cmc
loop
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
neg
(bad)
into
sbb
jmp
not
(bad)
fst
into
(bad)
loopne
cld
imul
rcr
into
sbb
imul
out
sbb
adc
(bad)
repnz
xchg
div
loop
sbb
sbb
imul
cmc
jmp
repnz
neg
cmc
(bad)
fst
into
(bad)
loopne
cld
test
rcr
into
sbb
imul
out
cmp
repnz
xchg
div
loop
xor
sbb
int
fdivp
scas
out
xor
cmc
jmp
repnz
imul
cmc
xlat
fst
into
(bad)
loopne
cld
imul
rcr
into
sbb
imul
out
or
adc
fwait
repnz
div
loop
sbb
sbb
int
fdivp
scas
out
xor
cmc
jmp
repnz
neg
cmc
(bad)
fst
into
(bad)
loopne
cld
test
rcr
into
sbb
imul
out
cmp
repnz
xchg
div
loop
xor
sbb
int
fdivp
scas
out
xor
cmc
jmp
repnz
neg
cmc
(bad)
fst
into
(bad)
loopne
cld
imul
rcr
into
sbb
imul
out
cmp
repnz
xchg
div
loop
xor
adc
loop
cld
idiv
enter
sbb
jmp
neg
fnstenv
into
sbb
stc
repnz
mov
cmc
lahf
fldcw
repnz
idiv
cmc
sahf
fnstenv
into
xor
imul
cmc
rcr
into
sbb
imul
out
cmp
repnz
xchg
div
loop
and
pop
lock
cld
imul
loop
sbb
sbb
jmp
neg
fnstenv
into
sbb
stc
repnz
idiv
rcr
sub
repnz
idiv
cmc
repnz
into
xor
imul
cmc
rcr
into
sbb
imul
out
cmp
repnz
xchg
div
loop
sbb
pop
lock
cld
not
cmc
enter
pop
lock
cld
imul
loop
sbb
sbb
jmp
neg
fstp
into
sbb
stc
bnd
idiv
fstp
into
aas
lock
repnz
idiv
cmc
neg
xor
xor
imul
cmc
jmp
repnz
test
std
fstp
into
sbb
jmp
div
out
sbb
sbb
jecxz
shl
xchg
out
xchg
jl
out
cmp
repnz
cdq
out
xor
cmc
out
sbb
sbb
repz
xchg
out
xchg
jl
out
sub
repnz
idiv
cmc
(bad)
fstp
into
adc
in
repnz
(bad)
fldcw
repnz
idiv
cmc
jmp
repnz
mov
cmc
xchg
fstp
into
adc
in
repnz
idiv
cmc
rcr
into
adc
in
repnz
idiv
cmc
rcr
into
sbb
jmp
not
out
adc
sbb
jmp
idiv
repnz
repnz
idiv
cmc
iret
fnstenv
into
sbb
jmp
not
enter
sbb
jmp
div
enter
sbb
jmp
idiv
(bad)
fnstenv
into
sbb
jmp
not
(bad)
fldcw
repnz
idiv
cmc
out
pop
into
adc
jecxz
call
div
out
sbb
sbb
call
out
cmps
idiv
(bad)
into
ds
(bad)
scas
out
xor
sbb
sbb
call
out
cmps
idiv
fldcw
repnz
cdq
out
(bad)
div
out
sbb
sbb
jmp
out
xchg
jne
xchg
fstp
into
sbb
out
(bad)
idiv
cmc
out
pop
into
adc
jecxz
retf
out
xchg
jl
out
sub
repnz
div
cmc
lahf
fnstenv
into
cmp
loopne
clc
idiv
cmc
rcr
into
pop
lock
(bad)
neg
cmc
out
or
or
(bad)
leave
idiv
cmc
enter
cmp
loopne
clc
idiv
cmc
rcr
into
sbb
neg
cmc
out
or
sbb
popf
repnz
idiv
cmc
aam
sbb
sbb
(bad)
(bad)
idiv
cmc
rcr
push
into
adc
repnz
xchg
xchg
jp
aam
cmp
repnz
idiv
cmc
rcr
and
adc
in
repnz
neg
cmc
out
sub
repnz
idiv
cmc
enter
cmp
loopne
clc
idiv
cmc
rcr
into
sbb
imul
cmc
out
sbb
sbb
shl
test
jmp
bnd
idiv
fstp
into
aas
lock
idiv
cmc
(bad)
fstp
into
adc
jmp
idiv
jecxz
xor
sbb
jmp
test
sbb
jmp
idiv
out
sbb
sbb
jmp
out
xchg
jl
out
cmp
repnz
mov
cmc
rcr
cmp
repnz
idiv
out
cmp
repnz
(bad)
out
mov
jbe
out
sbb
sbb
lahf
repnz
xchg
out
xor
cmc
out
sbb
sbb
cwde
repnz
mov
cmc
(bad)
fstp
into
push
idiv
cmc
repnz
into
aas
lock
imul
cmc
neg
sbb
sbb
jmp
not
cmc
xlat
fnstenv
into
sbb
jmp
test
sbb
jmp
test
ja
test
mov
scas
out
mov
push
cmc
int3
fldcw
push
lock
call
idiv
jmp
bnd
div
out
sbb
sbb
(bad)
repnz
jl
out
or
adc
idiv
cmc
neg
push
into
adc
loopne
clc
idiv
cmc
lahf
fldcw
sbb
loop
loopne
xchg
mov
jbe
out
sbb
sbb
(bad)
repnz
jl
out
sbb
adc
idiv
cmc
jmp
repnz
scas
out
mov
dec
cmc
enter
sbb
jmp
idiv
out
sbb
sbb
(bad)
into
not
cmc
out
cmp
repnz
mov
cmc
aam
xor
sbb
jmp
test
sbb
jmp
div
out
sbb
sbb
shl
xor
je
lahf
fldcw
adc
loopne
clc
idiv
cmc
lahf
fnstenv
into
sbb
jmp
test
sbb
iret
repnz
xchg
out
xchg
jl
out
or
adc
(bad)
push
mov
cmc
rcr
sbb
xor
loopne
clc
idiv
cmc
lahf
fldcw
sbb
loop
clc
test
mov
jbe
out
sbb
sbb
(bad)
repnz
jl
out
sub
repnz
test
jl
lahf
fldenv
into
cmp
jecxz
fdivp
mov
cmc
out
sub
repnz
idiv
cmc
repnz
into
cmp
jmp
out
test
dec
cmc
rcr
xor
repnz
neg
cmc
ret
fstp
into
sbb
jmp
mul
into
fnstenv
into
sbb
jmp
test
sbb
jmp
div
out
sbb
sbb
fcomip
xor
je
out
sbb
sbb
jmp
div
out
sbb
sbb
(bad)
repnz
jl
out
sbb
adc
out
enter
test
jl
(bad)
fldenv
into
cmp
jecxz
fdivp
mov
cmc
out
or
and
lahf
repnz
idiv
cmc
repnz
into
cmp
jmp
out
test
push
cmc
rcr
xor
repnz
idiv
cmc
ret
fstp
into
sbb
jmp
neg
int
xor
sbb
jmp
test
sbb
jmp
div
out
sbb
sbb
fptan
xor
je
out
sbb
sbb
jmp
div
out
sbb
sbb
(bad)
repnz
jl
out
cmp
repnz
idiv
cmc
int3
fldenv
into
cmp
jecxz
fdivp
mov
cmc
loop
sub
repnz
idiv
cmc
repnz
into
cmp
jmp
out
test
push
cmc
rcr
xor
repnz
idiv
cmc
ret
fstp
into
sbb
jmp
neg
rcr
into
sbb
jmp
test
sbb
jmp
div
out
sbb
sbb
(bad)
repnz
jne
rcr
into
sbb
jmp
test
into
sbb
jmp
idiv
out
sbb
sbb
shl
not
cmc
out
sub
repnz
mov
cmc
out
or
sbb
loopne
shl
xchg
out
xchg
jl
out
or
adc
(bad)
push
mov
cmc
out
fstp
into
xor
loopne
clc
idiv
cmc
lahf
fldcw
sbb
loop
clc
idiv
cmc
out
sbb
repnz
imul
cmc
in
sbb
sbb
jmp
out
test
jl
loop
or
adc
jmp
imul
out
sbb
sbb
jmp
out
test
jl
out
or
popa
lock
not
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
in
sbb
sbb
jmp
idiv
fstp
into
cmp
jmp
neg
in
sbb
sbb
jmp
idiv
(bad)
into
adc
idiv
cmc
out
sbb
sbb
jmp
idiv
(bad)
into
sbb
imul
cmc
jmp
repnz
test
out
sbb
sbb
shl
test
xchg
jl
out
or
sbb
call
out
xchg
imul
sbb
loopne
clc
idiv
cmc
lahf
fldcw
sbb
out
(bad)
idiv
cmc
out
fldenv
into
cmp
out
(bad)
idiv
cmc
loop
and
cmp
loopne
clc
idiv
cmc
rcr
into
sbb
loopne
(bad)
idiv
cmc
lahf
fldenv
into
cmp
out
repnz
idiv
neg
sbb
sbb
jmp
idiv
fstp
into
adc
not
cmc
enter
sbb
jmp
imul
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
imul
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
div
lahf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
neg
enter
sbb
jmp
idiv
out
sbb
sbb
fcomi
clc
test
out
sbb
sbb
into
repnz
jbe
out
sbb
sbb
iret
repnz
lods
out
test
jl
out
sbb
adc
cli
repnz
cdq
out
xchg
jl
out
cmp
repnz
out
xchg
jl
out
or
adc
(bad)
repnz
idiv
cmc
(bad)
fstp
into
push
idiv
cmc
xchg
fldenv
into
cmp
leave
repnz
idiv
cmc
xchg
fstp
into
adc
jmp
out
test
push
cmc
out
cs
sbb
loopne
clc
idiv
cmc
lahf
fnstenv
into
pop
lock
clc
idiv
cmc
rcr
into
pop
lock
imul
fnstcw
repnz
neg
cmc
retf
fnstenv
into
sbb
jmp
not
loop
sbb
sbb
jmp
idiv
enter
sbb
jmp
mul
fstp
into
sbb
jmp
neg
out
sbb
sbb
call
out
xchg
jbe
out
sbb
sbb
into
repnz
jbe
out
sbb
sbb
iret
repnz
lods
out
test
jl
out
sbb
adc
cli
repnz
cdq
out
xchg
jl
out
cmp
repnz
xchg
out
xchg
jl
out
or
adc
(bad)
repnz
idiv
cmc
out
fstp
into
push
neg
cmc
out
sbb
adc
shl
leave
idiv
cmc
jmp
repnz
idiv
jmp
repnz
idiv
cmc
jmp
repnz
idiv
cmc
loop
sub
repnz
test
fstp
into
sbb
jmp
imul
fstp
into
sbb
(bad)
clc
neg
cmc
jmp
repnz
idiv
cmc
rcr
into
sbb
in
repnz
idiv
cmc
lahf
fstp
repnz
neg
cmc
in
fldcw
bnd
idiv
fldcw
repnz
xchg
out
xchg
jl
out
sub
bnd
mov
cmc
jmp
repnz
xchg
out
xchg
jl
out
cmp
bnd
mov
cmc
jmp
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
adc
not
cmc
out
sbb
sbb
icebp
repnz
jl
out
sub
repnz
cmc
enter
sbb
jmp
idiv
enter
sbb
loopne
clc
idiv
cmc
lahf
fldcw
push
lock
retf
out
xchg
jl
out
cmp
repnz
idiv
cmc
repnz
into
cmp
in
repnz
idiv
cmc
(bad)
fnstcw
bnd
idiv
(bad)
into
ds
clc
idiv
cmc
jmp
repnz
imul
cmc
ret
fnstenv
into
push
lock
out
test
jl
jmp
repnz
idiv
out
fstp
into
sbb
jmp
idiv
fstp
into
adc
idiv
cmc
enter
imul
repnz
cdq
out
xchg
jbe
aam
sbb
sbb
jmp
div
rcr
into
sbb
jmp
test
repnz
idiv
cmc
neg
xor
sbb
jmp
not
jmp
repnz
cdq
out
xchg
js
out
sbb
sbb
call
out
test
outs
cmc
out
sbb
sbb
jmp
out
test
jl
int3
fstp
into
sbb
out
repnz
test
fstp
into
sbb
(bad)
xor
jne
(bad)
fnstcw
repnz
idiv
cmc
rcr
into
sbb
loop
call
idiv
fstp
into
ds
out
test
jl
out
sub
repnz
idiv
cmc
out
sbb
adc
out
repnz
mov
xchg
jp
enter
sbb
jmp
test
into
sbb
imul
cmc
out
sbb
sbb
fcomi
clc
test
jmp
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
rcr
into
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
call
out
test
jl
rcr
into
sbb
jmp
idiv
fldcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
cmp
jmp
idiv
out
sbb
sbb
jmp
idiv
fstp
into
sbb
out
clc
idiv
cmc
sahf
fstp
repnz
cmc
in
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
test
lock
idiv
fstp
into
aaa
lock
idiv
fstp
into
sbb
jmp
test
lock
clc
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
cmp
jmp
neg
out
sbb
sbb
jmp
idiv
fstp
into
sbb
fwait
repnz
cmps
out
lahf
test
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
adc
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
sti
repnz
idiv
cmc
fcompp
adc
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
idiv
cmc
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
jecxz
sbb
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
out
sbb
sbb
jmp
idiv
fnstcw
repnz
idiv
cmc
out
sbb
sbb
idiv
cmc
out
sbb
aaa
lock
neg
out
sbb
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
out
sbb
sbb
jmp
idiv
(bad)
into
sbb
out
cld
not
cmc
out
adc
repnz
idiv
cmc
out
sbb
sbb
jmp
not
(bad)
fstp
into
sbb
out
repnz
idiv
cmc
out
or
or
cli
repnz
idiv
cmc
out
sbb
sbb
jmp
div
xchg
(bad)
into
sbb
fdivp
in
idiv
cmc
xchg
fstp
repnz
out
xchg
neg
xchg
(bad)
repnz
imul
cmc
in
or
add
ret
idiv
cmc
xchg
fnstenv
into
cmp
ret
repnz
mov
cmc
loope
aaa
into
cmp
(bad)
not
cmc
in
and
cmp
fcomi
shl
mov
cmc
xchg
fst
into
or
jmp
out
mov
jae
leave
fstp
into
sub
jmp
neg
xchg
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fstp
into
sbb
jmp
idiv
fst
into
sbb
jmp
idiv
fstp
into
sbb
out
repnz
idiv
cmc
jmp
repnz
xchg
neg
neg
neg
idiv
jmp
jmp
jb
nop
out
nop
jmp
mov
pop
loopne
or
xchg
mov
sbb
cmps
add
push
into
sub
cmp
rol
dec
push
fldcw
push
cmp
push
jo
push
in
adc
ins
pop
je
ins
fisubr
inc
in
push
clc
push
push
jns
pushf
outs
xor
sbb
add
add
(bad)
popf
add
in
sldt
push
inc
add
jae
add
add
dec
cwde
add
hlt
repz
jp
add
fnstsw
add
stos
add
xchg
add
stos
add
add
push
add
cdq
pop
add
mov
add
gs
add
sub
add
add
ret
add
add
arpl
add
and
mov
add
pop
mov
add
and
add
or
add
adc
add
rol
add
jae
add
add
add
mov
add
sbb
lea
add
sbb
add
push
add
mov
add
hlt
xlat
add
or
add
cwde
mov
add
dec
test
add
inc
add
hlt
cmp
add
sti
add
sub
add
sbb
add
(bad)
rol
add
leave
add
(bad)
sbb
add
cmp
add
inc
add
mov
add
add
cmps
lahf
add
jp
add
adc
add
call
and
add
xchg
add
add
inc
or
add
hlt
add
sbb
add
sub
add
inc
add
add
add
mov
add
xor
(bad)
add
jo
add
shl
add
dec
add
and
add
push
cli
add
add
add
stos
add
ins
fild
add
add
rol
adc
add
cmp
add
add
shl
xchg
add
and
add
data16
cli
add
add
pop
mov
add
sub
add
add
out
add
xchg
sti
add
stos
cmp
add
mov
add
dec
pop
add
data16
add
and
add
imul
add
cmps
add
or
add
cmp
add
add
add
sbb
add
add
add
mov
jg
add
xor
add
addr16
add
mov
add
add
pushf
test
add
add
jl
add
xchg
ins
add
pop
mov
add
stos
add
(bad)
ret
add
in
xor
add
inc
add
fst
add
jmp
add
mov
add
movs
sub
add
add
sub
add
push
iret
add
mov
add
(bad)
jmp
(bad)
add
dec
jp
add
aad
add
test
add
add
inc
add
jbe
add
out
mov
add
and
add
adc
add
add
add
pushf
add
test
add
fild
add
xchg
add
into
and
add
add
add
mov
add
xchg
mov
add
dec
add
push
jne
add
xchg
add
mov
add
jmp
add
push
adc
add
mov
add
and
add
dec
add
jmp
add
or
add
into
add
jp
add
je
add
mov
mov
add
repz
mov
add
jno
add
mov
sub
add
out
add
int3
data16
cmc
enter
out
add
add
cwde
aaa
add
push
dec
add
ja
add
mov
add
lahf
push
add
aaa
mov
add
outs
add
stc
mov
add
hlt
add
(bad)
outs
add
ins
loope
add
loopne
add
add
mov
add
enter
repz
add
push
mov
add
mov
add
sub
add
fisttp
add
cmp
add
mov
dec
add
cmp
add
loop
add
or
add
and
add
sub
add
movs
add
ins
xor
add
add
jb
add
cmc
fiadd
add
jnp
add
add
aad
add
pop
add
mov
add
cs
add
outs
ja
add
add
mov
test
into
and
add
add
fsub
add
mov
cdq
add
imul
add
add
out
add
dec
push
add
std
mov
add
push
add
jbe
add
mov
xor
add
retf
(bad)
mov
add
add
cdq
xor
add
add
cmc
add
les
add
aam
add
movs
add
pop
xor
add
retf
add
retf
add
cdq
add
dec
hlt
add
jge
add
rol
add
mov
add
test
add
cwde
add
pop
add
mov
add
pop
in
add
(bad)
add
ja
add
je
add
add
sbb
add
add
add
adc
add
test
mov
add
push
add
xchg
add
mov
add
xor
add
adc
add
ret
pop
add
retf
add
jno
add
add
cli
leave
add
(bad)
adc
add
add
clc
xor
add
mov
add
ret
add
cdq
add
jl
add
inc
jno
add
imul
push
add
les
add
rol
add
rol
std
mov
push
pop
add
mov
add
pop
add
inc
dec
add
and
add
cmp
add
mov
add
dec
fild
add
sub
add
add
add
pop
das
add
dec
fiadd
add
push
add
ret
add
lods
add
jecxz
add
les
add
jmp
dec
add
mov
add
nop
stos
add
jl
add
mov
loope
add
add
ins
stos
add
xor
add
cmps
sti
add
add
add
cmp
add
mov
add
sub
add
fwait
fwait
add
mov
add
pop
jb
add
mov
add
fbld
add
adc
add
jmp
rcl
add
dec
fld
add
jo
add
sbb
add
jae
add
xchg
add
dec
add
mov
add
test
add
loopne
add
mov
add
popf
mov
add
jg
add
add
adc
add
adc
add
add
arpl
add
rol
shl
add
add
add
into
add
retf
mov
add
loop
add
xor
add
xor
add
retf
fld
add
mov
add
js
add
mov
pop
add
push
pop
add
cmp
add
retf
add
rol
out
movs
add
(bad)
nop
add
pushf
xchg
add
out
add
pop
nop
add
mov
add
cmp
add
rcl
add
sahf
in
add
add
jmp
add
and
add
add
mov
retf
mov
pop
add
and
nop
add
fnsave
add
sti
mov
add
dec
or
add
add
sbb
add
mov
xchg
add
adc
add
sub
add
dec
sldt
movs
imul
add
mov
add
add
sldt
xor
add
out
add
jle
add
pusha
inc
add
and
add
rol
add
add
(bad)
mov
add
add
pop
mov
add
add
add
mov
add
adc
add
out
add
jecxz
add
fild
add
retf
add
xchg
xor
add
add
sar
add
dec
mov
add
data16
push
imul
popf
jo
add
inc
add
(bad)
or
add
arpl
add
mov
add
cmps
aas
add
sbb
mov
add
or
add
fiadd
add
add
push
clc
add
xchg
stos
add
mov
add
xchg
aad
add
or
add
push
add
inc
add
add
add
dec
add
dec
mov
add
mov
mov
add
nop
add
add
add
adc
add
add
aas
jnp
add
inc
add
mov
add
(bad)
add
fwait
sub
add
add
test
mov
add
push
retf
add
xor
add
add
shr
add
add
js
add
cmp
add
mov
add
and
pop
cld
add
sbb
add
pushf
add
shl
add
inc
imul
add
add
mov
and
add
sbb
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
sub
add
and
jb
outs
addr16
add
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
xor
add
adc
add
adc
add
cmp
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
push
add
add
add
xor
or
fwait
add
add
add
add
add
add
add
add
add
add
cmp
push
add
adc
or
push
add
add
add
add
add
add
add
add
add
add
pusha
add
add
mov
adc
or
rol
mov
xor
add
add
add
gs
add
add
add
add
add
add
add
adc
xor
or
mov
pushf
add
rol
add
call
add
pop
push
or
jl
mov
push
add
push
xor
add
push
xor
add
add
pop
aaa
pop
or
dec
pop
ins
pop
push
add
add
pop
mov
pop
mov
or
add
add
add
add
add
add
add
sbb
add
add
add
add
call
add
add
add
add
add
add
add
add
sub
add
add
add
or
sub
pop
add
add
add
add
add
add
add
add
add
or
sub
or
and
adc
add
and
add
mov
or
add
add
or
add
add
or
sub
add
add
add
add
xor
add
adc
and
sub
add
add
add
add
sub
add
add
add
add
add
mov
adc
cmp
adc
add
les
add
mov
adc
cmp
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
push
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
and
add
add
add
add
and
add
add
add
xor
add
add
les
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fsub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
add
add
add
push
add
add
add
add
add
add
add
add
xor
adc
mov
add
add
add
adc
and
mov
adc
add
add
add
add
int3
cmp
add
add
add
out
adc
add
add
add
push
inc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xchg
aaa
add
add
add
add
add
xchg
sbb
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
push
adc
fld
adc
xor
aaa
add
add
pop
add
cmp
mov
pop
add
add
add
jns
cli
add
add
add
add
nop
add
add
add
test
xor
xor
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
in
repz
add
add
add
add
add
sub
dec
add
pop
add
ins
add
add
add
add
add
add
add
add
rol
retf
add
mov
pop
add
adc
add
add
push
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
nop
add
add
add
add
add
nop
add
add
add
add
add
xor
ret
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
pusha
add
add
add
rol
add
add
xchg
add
add
push
xchg
add
add
xchg
add
add
add
add
or
add
xor
add
sldt
and
add
adc
xor
inc
add
add
add
add
add
add
add
inc
add
test
mov
add
add
add
or
add
add
add
add
add
push
cdq
add
add
xor
add
add
add
add
add
add
sbb
add
add
inc
mov
add
add
add
or
push
add
or
add
add
add
add
adc
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
or
cmp
add
add
inc
add
add
add
add
add
jo
add
add
add
test
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
xor
mov
add
add
add
pop
add
add
cmp
retf
add
add
add
pop
add
add
cmp
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
retf
add
add
mov
add
add
mov
add
add
retf
add
add
mov
add
add
retf
add
add
mov
add
add
mov
add
add
retf
add
add
mov
add
add
retf
add
add
into
pop
add
add
gs
pop
push
add
add
add
bound
add
jae
add
cmp
xchg
add
xchg
add
xchg
add
add
xchg
add
mov
add
add
add
pop
add
add
add
add
add
add
add
and
add
add
add
add
or
sbb
or
sbb
or
jge
or
jge
or
sbb
add
add
(bad)
jge
adc
and
add
add
add
sbb
add
add
add
add
jb
addr16
gs
add
jb
addr16
push
jns
je
ins
cs
imul
inc
outs
jb
jae
ins
jae
outs
jb
imul
gs
add
jae
gs
cs
jb
ja
outs
add
jb
addr16
push
jo
arpl
jb
jae
jne
arpl
add
jb
addr16
push
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jne
arpl
cs
jae
jne
arpl
add
gs
popa
jb
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
xor
arpl
outs
jb
push
jo
arpl
inc
outs
jb
add
jb
add
jo
add
jp
add
gs
bound
arpl
add
je
je
add
gs
je
add
outs
je
outs
ins
add
push
arpl
jns
popa
ins
imul
add
arpl
dec
outs
popa
add
outs
je
jb
jae
jae
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
arpl
popa
je
inc
gs
gs
je
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
gs
outs
add
je
outs
fs
outs
outs
add
imul
ins
add
jo
jae
add
jo
jae
outs
add
jp
add
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jb
popa
je
inc
gs
gs
je
add
je
push
je
arpl
je
gs
gs
je
add
push
arpl
gs
outs
add
jbe
imul
popa
je
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
push
gs
add
popa
outs
outs
imul
ins
popa
dec
bound
arpl
inc
ins
popa
jae
aaa
add
add
inc
jb
jae
inc
jb
ins
outs
jae
inc
ins
popa
jae
cmp
inc
fs
inc
fs
add
je
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
outs
arpl
outs
outs
imul
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
imul
add
popa
bound
imul
jns
gs
jne
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
outs
popa
add
gs
outs
arpl
jno
popa
ins
jae
js
jae
je
push
imul
outs
add
je
inc
ins
imul
add
jno
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
popa
jae
cmp
ja
add
dec
popa
outs
jne
ins
push
gs
je
jbe
outs
je
push
jns
je
ins
cs
push
imul
je
popa
outs
fs
add
outs
push
dec
inc
ins
outs
outs
gs
bound
dec
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jb
outs
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
je
imul
gs
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
ins
jne
push
jns
add
push
popa
imul
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
jae
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
ins
add
je
dec
jo
arpl
jns
push
jb
addr16
ins
add
outs
add
imul
push
inc
je
jb
bound
add
jno
popa
je
bound
xor
inc
outs
outs
arpl
add
addr16
inc
jae
gs
bound
arpl
dec
push
gs
arpl
gs
jns
add
je
dec
popa
ins
add
dec
gs
bound
dec
outs
outs
add
gs
outs
fs
outs
outs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
push
jne
jo
outs
fs
popa
jns
jne
add
jae
jne
arpl
add
jb
addr16
push
jb
jo
jb
imul
outs
jne
arpl
popa
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
jne
je
jb
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
ins
je
jb
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
je
outs
addr16
inc
jo
ins
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
ins
add
and
add
and
add
and
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
add
add
jno
jmp
sub
movs
xor
and
or
xor
mov
mov
pop
jg
aad
cmp
add
add
or
add
add
adc
add
or
push
adc
and
add
pop
add
or
push
push
add
add
adc
sbb
or
adc
and
sbb
sbb
and
add
sub
sbb
add
sbb
add
adc
and
push
add
push
add
add
cmp
add
add
pop
add
or
add
or
add
sbb
and
adc
and
add
add
dec
or
add
or
or
push
add
push
or
add
and
sbb
add
add
push
push
adc
push
and
sbb
and
sbb
sbb
adc
sbb
add
push
add
adc
push
sbb
sbb
pop
add
or
add
push
or
pop
or
or
or
push
add
adc
pop
or
add
adc
add
push
add
add
add
pop
pop
or
or
sbb
add
add
push
or
pop
or
or
or
add
adc
add
xor
or
push
or
or
sbb
push
add
sbb
adc
add
push
add
add
push
or
or
or
or
sbb
adc
add
push
add
push
add
pop
push
or
or
and
add
inc
or
add
push
add
inc
add
add
adc
push
sbb
push
adc
add
add
xor
jno
pop
adc
or
jne
jns
or
or
adc
sbb
sbb
push
and
adc
add
or
add
or
add
xor
adc
add
push
add
add
sbb
or
add
or
adc
add
push
add
push
add
add
add
add
add
or
or
pop
or
or
or
or
or
or
add
or
add
add
add
adc
adc
pop
or
push
or
or
add
push
push
push
or
add
push
add
add
or
or
or
sbb
and
adc
adc
or
push
or
adc
or
push
or
add
sbb
add
add
add
push
or
add
push
add
add
or
pop
or
adc
or
add
adc
add
sbb
push
pop
or
adc
or
adc
add
cmp
add
add
add
pop
add
sbb
or
add
and
sbb
add
push
add
add
push
or
or
or
or
sbb
adc
add
push
add
push
add
adc
and
push
sbb
sbb
or
or
sbb
add
add
sbb
push
adc
and
movs
push
add
add
and
mov
adc
add
add
add
add
movs
add
push
push
add
add
add
add
adc
add
add
cmp
add
pop
add
add
cmp
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
push
cld
or
outs
cld
or
add
add
pusha
cld
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
