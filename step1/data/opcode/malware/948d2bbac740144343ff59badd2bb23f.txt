mov
jno
enter
lds
aaa
xor
movq
and
test
xor
xlat
ins
mov
and
lds
xchg
jnp
push
jnp
xor
mov
mov
adc
cmp
adc
lock
emms
adc
mov
mov
popa
aaa
xor
in
mov
xor
inc
aaa
outs
imul
fs
rcl
pop
test
and
mov
fild
fisub
(bad)
clc
int
or
push
ins
cmp
jle
xchg
or
jae
or
cmp
jne
cmp
mov
test
xor
mov
leave
daa
stos
icebp
ja
mov
int
js
mov
mov
cdq
xor
repnz
inc
dec
shr
pop
xchg
mov
(bad)
cmp
ja
mov
(bad)
cmp
mov
inc
jns
arpl
push
and
icebp
ja
mov
add
(bad)
and
xor
bound
jnp
mov
push
lods
inc
add
(bad)
push
data16
clc
iret
retf
cmc
cmp
xor
mov
inc
mov
jnp
into
add
rol
or
pop
jnp
fldenv
inc
aaa
pop
xor
(bad)
cmp
xor
ins
loopne
xor
(bad)
sti
inc
adc
cmp
xor
xor
xor
xor
icebp
cmp
xor
cmp
fisub
adc
mov
icebp
ja
rcl
icebp
mov
add
inc
jns
(bad)
mov
xor
test
xor
or
push
sbb
inc
add
frstor
push
cmp
arpl
ficom
nop
xor
or
daa
icebp
ja
push
stos
and
or
cmp
bound
pop
adc
xor
pop
push
pop
lods
sti
jae
in
pop
icebp
ja
push
adc
(bad)
cmp
test
cmp
retf
icebp
ja
les
inc
jns
retf
icebp
ja
mov
and
(bad)
jmp
add
mov
leave
aam
lahf
add
repnz
push
mov
cmp
shl
mov
add
mov
retf
icebp
ja
mov
push
int
rcl
loope
xor
les
inc
jns
add
ror
mov
movd
cmp
aas
xor
cmp
(bad)
push
dec
xor
rol
les
repz
jne
pop
xor
js
and
ror
jo
add
ds
mov
inc
jl
les
repz
jne
pop
xor
test
cmp
jnp
mov
test
inc
int3
mov
or
test
fidiv
add
cmp
fcomip
repnz
or
cmp
fnstsw
mov
mov
leave
jnp
into
or
push
mov
jnp
repz
mov
leave
jnp
into
retf
icebp
ja
mov
cmp
jnp
mov
test
inc
int3
mov
mov
xor
into
mov
ficom
mov
cmp
adc
xor
pop
inc
fstp
jnp
mov
jnp
into
mov
jnp
xchg
int
(bad)
add
into
retf
jnp
mov
jnp
into
mov
add
xor
add
xor
jnp
cmp
pop
inc
xor
dec
clc
fs
shr
mov
je
mov
push
int
xchg
cmp
add
rcl
(bad)
mov
xor
push
jbe
and
outs
cli
retf
xor
cs
mov
ins
or
mov
add
add
dec
push
or
test
(bad)
push
js
je
or
xor
xor
repnz
or
push
cmp
pop
leave
or
xor
loope
mov
leave
mov
ficom
ins
fadd
cmp
xchg
push
hlt
jae
lock
cmp
sub
mov
mov
pop
mov
jmp
in
mov
xor
mov
leave
jnp
movs
cmc
(bad)
cmp
sub
test
(bad)
push
js
je
or
pusha
clc
not
mov
fs
bound
dec
and
js
push
shl
pop
leave
lds
movs
cmc
(bad)
cmp
jo
xor
xor
jl
mov
inc
xor
jl
jmp
xor
loope
mov
leave
mov
outs
imul
repnz
or
ins
mov
mov
sbb
imul
icebp
aaa
pop
xchg
jbe
xor
add
retf
je
pcmpgtd
mov
(bad)
into
retf
ins
leave
(bad)
push
into
retf
adc
ret
je
or
repnz
or
mov
cmp
mov
mov
mov
xor
mov
cmp
mov
test
sub
cmp
push
xor
mov
ret
xor
or
cmp
push
xlat
ins
mov
mov
sti
scas
push
mov
sub
test
xor
inc
jns
gs
data16
xor
cmp
or
or
cmp
rcl
push
inc
outs
mov
data16
mov
int
ret
mov
mov
inc
mov
xor
pushf
nop
xor
in
outs
ret
ja
rol
lahf
test
mov
int
cld
add
(bad)
loopne
test
(bad)
sti
inc
imul
cmp
out
cmp
cmp
mov
pop
xor
cmc
or
dec
or
push
aad
(bad)
cmp
and
test
xor
cmp
ror
or
cmp
xor
cmc
or
dec
xor
inc
jnp
and
push
xor
shl
repnz
(bad)
retf
jnp
push
outs
dec
clc
fs
test
fldcw
das
cmp
data16
xchg
push
and
call
mov
mov
inc
jns
mov
inc
mov
xor
inc
jns
gs
into
arpl
xor
or
cmp
mov
jnp
into
inc
mov
iret
cwde
test
pop
xor
or
ja
mov
aam
(bad)
ins
or
retf
cmc
cmp
dec
cmp
ja
cmp
daa
test
xor
mov
rcl
je
(bad)
xor
bound
inc
lds
test
mov
js
ds
cmp
xor
add
cmp
ins
push
mov
mul
cld
je
xchg
mov
fisttp
jle
or
mov
sub
xor
stc
xor
or
adc
fdivr
retf
mov
js
inc
fs
sti
icebp
ja
push
xor
jo
imul
test
xor
or
mov
(bad)
iret
retf
mov
retf
icebp
cmc
(bad)
cmp
mov
cmp
mov
icebp
xor
jmp
mov
mov
mov
sti
icebp
ja
cmp
and
imul
rol
jo
add
mov
mov
inc
sti
jae
test
mov
jnp
into
mov
dec
clc
fs
shr
pop
mov
push
xor
arpl
pop
xor
out
cmp
in
cmp
xor
ins
mov
xor
xchg
pop
test
mov
cmp
mov
pop
repz
jne
pop
xor
out
cmp
icebp
aaa
frstor
xor
test
pop
xor
out
cmp
jbe
xor
cmp
xor
cmp
push
pusha
clc
not
mov
lea
xor
test
bound
push
pop
cmps
sar
retf
xor
leave
jae
ins
add
sar
mov
jnp
fsincos
js
into
ins
(bad)
sti
ds
cmp
xor
or
cwde
pushf
xor
test
mov
retf
mov
jnp
into
gs
pop
int3
retf
cmc
cmp
cmp
xor
jb
xor
xor
iret
retf
mov
retf
icebp
cmc
(bad)
cmp
mov
jle
cmp
dec
nop
mov
add
repnz
jnp
pop
xchg
jbe
xor
jnp
mov
xor
rol
cmc
mov
mov
mov
(bad)
iret
retf
add
or
(bad)
iret
retf
icebp
cmc
(bad)
cmp
mov
jle
cmp
xor
xchg
cmp
pop
xor
jo
jnp
icebp
retf
fst
(bad)
into
mov
xor
int
(bad)
add
into
retf
jnp
test
mov
mov
popa
xchg
inc
sti
jae
aam
or
rol
jo
xor
cmp
data16
xor
cmp
iret
retf
mov
test
xor
jnp
ds
cmp
pop
xchg
jbe
xor
jnp
fnstenv
jl
into
mov
aaa
mov
lahf
jnp
into
mov
inc
xor
mov
(bad)
iret
retf
into
xor
test
xor
xor
jno
or
popa
pop
xor
jo
ins
dec
popf
xor
mov
repz
stos
lds
xor
mov
xor
test
pop
xor
mov
cmp
cmc
(bad)
cmp
xor
jo
ins
mov
retf
cmc
cmp
dec
sub
retf
jnp
pop
xchg
or
fucomp
(bad)
into
retf
cmp
loope
jmp
cmp
mov
mov
retf
xor
inc
jns
mov
les
mov
mov
xchg
jnp
into
xor
mov
push
or
les
add
xchg
add
xor
inc
jns
xor
jnp
mov
retf
loope
(bad)
cmp
ss
into
mov
xor
xor
jp
xor
call
push
test
mov
test
jmp
mov
jnp
mov
mov
mov
mov
loopne
xor
jp
popa
mov
jnp
mov
mov
mov
mov
push
(bad)
iret
retf
push
adc
cdq
retf
mov
retf
xor
jnp
ds
add
cmp
add
xor
add
xor
jnp
into
or
popa
mov
jnp
mov
mov
and
gs
out
ret
ja
mov
movs
jnp
into
gs
and
mov
leave
(bad)
sti
ds
aas
xor
jp
popa
mov
jnp
mov
xor
js
dec
xor
cmp
(bad)
or
les
xor
test
mov
retf
mov
jnp
into
gs
bound
ds
cmp
xor
test
sar
mov
fisub
(bad)
movsx
retf
popa
mov
or
adc
mov
test
xchg
adc
xor
jnp
into
gs
retf
popa
mov
or
xor
xchg
xor
lahf
into
retf
jnp
repnz
retf
into
retf
jnp
into
cmp
in
mov
enter
gs
int3
cwde
xor
pop
sahf
(bad)
jp
xor
jbe
xor
sub
int3
sar
mov
retf
into
retf
jnp
mov
jnp
into
gs
es
ja
mov
enter
gs
enter
mov
xor
or
mov
xor
jnp
mov
jnp
into
mov
jnp
mov
retf
and
cmp
nop
or
mov
xchg
mov
mov
sahf
mov
retf
push
retf
mov
ret
mov
jnp
into
mov
test
js
cmp
mov
cmps
into
retf
jnp
mov
test
lods
retf
popa
pop
inc
leave
jae
movsx
mov
test
xor
inc
xor
cmp
adc
mov
jnp
into
movsx
mov
or
xor
loop
cmp
mov
fwait
into
retf
jnp
fmul
rcl
mov
inc
pop
div
xchg
mov
test
xchg
retf
mov
retf
inc
retf
popa
mov
jnp
frstor
test
xor
and
into
mov
sub
xor
cmp
mov
mov
mov
mov
lock
iret
retf
jmp
mov
jnp
pop
xor
into
retf
jnp
mov
xor
rol
cmc
mov
mov
lock
iret
retf
mov
test
xor
jnp
pop
xor
jp
mov
retf
or
rcr
mov
ret
mov
jnp
into
mov
test
lea
popa
retf
cmp
add
mov
(bad)
mov
mov
retf
test
(bad)
fwait
int
retf
cmp
(bad)
int3
retf
jae
test
mov
leave
(bad)
int3
retf
inc
repnz
into
retf
jnp
xor
jnp
into
mov
jnp
pop
and
xor
jnp
ftst
and
xor
enter
or
mov
jnp
mov
test
inc
int3
or
(bad)
into
or
int3
retf
jl
jns
popa
mov
jnp
mov
jns
iret
retf
addr16
test
mov
mov
xor
jnp
inc
xor
test
mov
retf
add
shl
into
mov
(bad)
iret
retf
test
mov
(bad)
iret
retf
add
jnp
mov
retf
add
shl
mov
and
mov
popa
mov
jnp
(bad)
jp
mov
retf
(bad)
jp
ds
(bad)
into
retf
ror
les
inc
cmp
enter
xor
or
(bad)
iret
retf
add
shl
mov
push
(bad)
iret
retf
cmp
retf
jnp
mov
mov
pop
daa
xor
jnp
into
xor
push
(bad)
iret
retf
add
shl
mov
retf
add
shl
mov
retf
add
shl
mov
dec
and
xor
jp
popa
mov
ins
dec
leave
retf
outs
outs
dec
clc
fs
pop
sti
jae
in
mov
nop
xor
loopne
adc
test
xor
shl
aad
sar
sub
div
cmp
xor
popf
daa
xor
test
out
test
mov
adc
ret
mov
ret
je
cmovbe
mov
inc
sti
jae
test
fidiv
(bad)
into
retf
div
cmp
xor
inc
mov
fld
in
and
stc
out
int
fdivr
in
or
cld
je
jnp
into
retf
push
movd
push
daa
cmp
xor
cmp
mov
rol
int
fdivr
retf
pop
in
jns
fld
xor
and
jo
ins
mov
in
push
ja
push
xor
push
fist
out
cmp
js
cmp
mov
arpl
addr16
call
shl
js
icebp
and
repnz
push
icebp
cmc
(bad)
cmp
inc
or
fidivr
cmp
jo
dec
xor
mov
test
or
mov
rcl
stos
lds
into
inc
mov
retf
xchg
test
mov
mov
test
gs
not
mov
fs
bound
cmp
data16
cmp
aaa
xor
rol
repz
movs
cmc
(bad)
cmp
retf
fldcw
inc
jmp
jae
mov
cmp
dec
add
shl
mov
leave
sub
or
inc
cmp
jmp
xor
outs
mov
and
test
aaa
mov
test
div
outs
outs
dec
clc
fs
test
fldcw
cmp
data16
ror
mov
sar
mov
ja
dec
xor
nop
cmp
mov
sti
cmp
inc
jns
mov
ret
addr16
jnp
into
xor
jp
mov
xor
test
xchg
mov
add
retf
jnp
repnz
fadd
iret
retf
cmc
retf
xor
jae
mov
retf
pop
aas
jbe
xor
clc
fwait
xor
jp
cmp
mov
pop
shl
retf
into
retf
jnp
rep
test
mov
retf
inc
sub
jp
fldenv
cmp
mov
inc
or
(bad)
cmp
xor
jp
mov
retf
pop
xor
jo
into
mov
or
scas
icebp
ja
xor
inc
pushf
les
push
movs
xor
or
cs
pop
mov
mov
or
cmp
mov
(bad)
mov
retf
stc
retf
popa
pop
test
retf
into
mov
or
dec
sub
retf
jnp
dec
stos
test
mov
retf
aaa
xor
fwait
cmp
retf
icebp
ja
mov
add
mov
mov
jnp
xor
mov
mov
jnp
(bad)
retf
cmp
mov
jnp
mov
retf
xor
xor
into
retf
jnp
movs
xchg
jp
into
mov
inc
(bad)
iret
retf
cmc
retf
push
inc
xor
inc
fbstp
into
mov
or
lock
mov
into
retf
jnp
test
jnp
into
retf
into
retf
jnp
je
movd
mov
add
cmp
mov
jnp
inc
sar
retf
mov
xor
xor
test
sbb
test
mov
mov
stos
int
jnp
mov
jp
into
gs
cmp
aam
xor
icebp
iret
into
mov
or
cmp
mov
jnp
into
xor
or
(bad)
aam
mov
jnp
into
gs
cmp
sbb
iret
retf
xchg
retf
jp
mov
mov
into
mov
xchg
retf
jnp
inc
xor
mov
mov
mov
add
retf
jnp
repnz
mov
into
retf
jnp
test
adc
into
retf
jnp
je
add
cmp
mov
sub
mov
ret
mov
js
into
mov
pop
sti
gs
js
into
mov
jnp
pop
xor
jp
popa
mov
jnp
pop
xor
adc
je
pop
sahf
icebp
retf
xor
ja
retf
jnp
repnz
jnp
xor
loop
inc
sti
cmp
mov
add
mov
retf
xor
xor
movs
mov
rol
mov
(bad)
iret
retf
icebp
retf
fnstenv
test
inc
xor
mov
mov
mov
dec
mov
mov
retf
mov
jp
into
mov
or
(bad)
cmp
and
add
retf
jnp
repnz
or
fs
xor
(bad)
mov
retf
mov
retf
mov
jnp
into
gs
cmp
inc
jo
movs
mov
(bad)
rol
jo
mov
mov
test
mov
mov
js
into
pop
test
into
or
popa
mov
jnp
pop
xor
adc
je
movd
mov
add
cmp
mov
jnp
xor
jnp
mov
retf
mov
jnp
into
gs
test
mov
(bad)
iret
retf
mov
jnp
into
gs
cmp
inc
jo
movs
dec
js
into
mov
adc
jae
in
cmp
xor
add
f2xm1
sbb
xor
jae
mov
retf
pop
xor
test
into
gs
cwde
scas
xor
test
pop
xor
jp
popa
fst
xor
jp
mov
xor
neg
jb
xor
test
xor
jnp
pop
retf
int
hlt
ror
movsx
jp
mov
xor
xor
test
into
gs
(bad)
into
inc
js
jnp
jnp
pop
xor
test
into
gs
(bad)
into
sbb
retf
cmc
push
jnp
(bad)
jp
(bad)
sbb
xor
dec
cmp
jnp
inc
xor
xor
addr16
or
popa
fnsave
(bad)
cmp
xor
test
pop
xor
fadd
ja
mov
lods
js
into
bound
retf
cmc
cmp
xor
adc
xlat
into
retf
jnp
dec
xor
xor
and
cmp
cmp
xor
xor
test
xor
test
retf
mov
retf
test
jnp
into
retf
into
retf
jnp
mov
xor
in
ja
mov
popf
jp
into
gs
xchg
fmul
jnp
cmc
adc
test
pop
xchg
(bad)
(bad)
cmp
aam
mov
icebp
mov
into
retf
inc
sub
cmp
jne
xor
jnp
fld
into
mov
aaa
div
jnp
mov
idiv
in
jp
div
test
xor
jp
xor
mov
(bad)
cmp
(bad)
les
inc
lods
mov
jno
vdivss
jnp
retf
jnp
mov
test
movs
xor
iret
retf
mov
(bad)
(bad)
iret
retf
movs
cmc
or
(bad)
into
mov
(bad)
iret
retf
ror
les
imul
jno
(bad)
xor
repnz
cmp
mov
jnp
mov
retf
in
(bad)
cmp
inc
mov
repz
cmp
cmp
jp
mov
jne
pop
xor
mov
inc
aaa
xor
inc
cmp
dec
cmp
xor
jp
mov
cmp
xor
jne
xor
jnp
fnstcw
inc
aaa
or
jnp
xor
push
xor
retf
or
popa
(bad)
ror
retf
cmp
retf
jp
xor
jnp
ficom
movsx
jp
mov
or
inc
cmp
mov
div
jnp
into
mov
(bad)
iret
retf
ror
les
imul
jno
(bad)
dec
mov
sar
or
popa
pop
dec
retf
jnp
cmp
jl
xor
inc
iret
or
or
les
jne
pop
xor
(bad)
(bad)
iret
retf
aaa
xor
inc
cmp
les
adc
xor
(bad)
cmp
jns
(bad)
into
mov
inc
mov
cmp
jnp
mov
test
inc
int3
or
jecxz
retf
jnp
mul
jae
mov
retf
jne
jp
mov
retf
outs
imul
repnz
or
cmp
xor
mov
int
ret
mov
cmc
(bad)
cmp
xor
aam
shl
(bad)
int
jnp
fxch
pop
cmp
mov
aam
xor
xchg
mov
js
into
retf
mov
js
into
gs
repz
mov
jns
into
gs
xor
mov
xor
mov
cmp
js
into
gs
xchg
stos
xor
jl
idiv
xor
repz
int
jnp
xor
jnp
mov
retf
repz
(bad)
cmp
aam
mov
mov
mov
mov
les
mov
mov
mov
cmp
xor
int3
retf
div
cmp
fisub
repz
(bad)
icebp
ja
mov
xor
add
iret
enter
xor
xor
jo
xor
mov
mov
aam
sub
int3
retf
xor
inc
jns
retf
icebp
ja
or
jne
aaa
mov
bnd
movs
cmc
(bad)
cmp
dec
stc
cmp
push
mov
cmp
fstp
xor
sub
(bad)
ror
push
xor
ins
mov
xor
test
(bad)
(bad)
cmp
push
inc
mov
xor
retf
rcl
lahf
mov
js
adc
inc
jns
xor
(bad)
cmp
(bad)
repz
xor
jo
neg
push
es
les
pop
retf
xor
push
xor
rol
data16
xor
and
mov
or
mov
cmp
jnp
xor
adc
xor
retf
mov
ja
outs
outs
dec
clc
fs
xlat
ins
mov
push
mov
loop
pop
lea
push
xor
pusha
mov
retf
icebp
ja
push
xor
push
xor
pop
test
xor
jnp
cmp
test
mov
inc
push
xor
icebp
retf
fstp
ret
mov
and
aam
xor
adc
xor
js
mov
imul
cmp
jl
into
inc
je
mul
adc
jae
add
cmp
cmp
cmp
mov
pop
repz
jne
pop
xor
loop
fs
movs
cmc
(bad)
cmp
jo
mov
in
clc
div
cmp
xor
test
xor
fs
jp
rcr
xor
pop
xor
aam
xor
aam
inc
cmp
retf
cmc
and
or
clc
mov
xor
fcomi
xor
mov
in
or
clc
into
jo
mov
int
jle
or
fild
jnp
movs
cmc
(bad)
cmp
test
inc
cmp
jle
ss
(bad)
out
lods
test
mov
mov
jo
cmp
jle
ss
xor
mov
sbb
mov
mov
js
xor
leave
mov
fisub
movd
mov
nop
sub
dec
xchg
dec
fdivr
les
mov
jle
cmp
ror
retf
xor
inc
jns
pop
test
inc
leave
movd
xor
imul
je
add
mov
xor
test
into
inc
je
addr16
outs
imul
repnz
or
test
or
repnz
xor
(bad)
cmp
repnz
gs
add
cmp
into
inc
mov
dec
mov
test
xor
icebp
das
pop
xor
cmp
inc
xchg
les
inc
cmps
xor
ins
push
imul
(bad)
ror
fs
not
mov
mov
das
data16
xor
or
jle
mov
inc
jns
mov
inc
mov
leave
aam
push
xor
jnp
cmp
sub
cmp
retf
into
inc
pushf
mov
int
push
xor
icebp
sub
inc
js
aas
mov
stc
cmp
ret
je
or
rcl
mov
jl
cmp
xor
push
clc
fs
test
xor
ins
mov
jecxz
lea
xor
push
scas
xor
lods
ret
mov
jo
imul
scas
xor
jne
xor
add
into
retf
cmp
xor
test
mov
repnz
gs
pop
mov
pusha
adc
inc
xor
test
xor
fs
mov
inc
out
fstp
xor
cmps
cmp
ret
je
or
jle
gs
daa
mov
je
inc
jle
inc
rol
div
cmp
cmp
cmp
pusha
scas
xor
push
cmp
inc
outs
mov
xor
cmp
xor
xchg
xor
pop
movs
xor
test
pop
xor
cmp
xor
adc
xor
sub
in
or
cmp
xor
ins
adc
lds
xor
rcr
jo
push
ja
test
ds
cmp
xor
rcr
das
test
xor
add
xor
scas
jle
or
cmp
xor
cmp
pop
fstp
xor
shl
test
mov
xor
rcl
pop
mov
or
cld
mov
arpl
xor
shr
fimul
sub
mov
call
or
ficomp
dec
xor
push
cmp
cmp
cmp
je
xor
push
cmp
inc
outs
mov
xor
mov
(bad)
(bad)
pop
cmp
mov
retf
jae
add
dec
(bad)
icebp
xor
sub
clc
mov
cmp
xor
leave
xor
mov
pop
test
xor
jnp
popa
arpl
xor
aam
fld
cmp
mov
icebp
out
fstp
xor
nop
mov
leave
ret
mov
jp
into
mov
xchg
push
xor
mov
dec
je
push
xor
icebp
out
mov
aad
mov
jmp
inc
imul
icebp
aam
xor
cmp
into
retf
movs
(bad)
(bad)
cmp
ins
xor
mov
sub
add
neg
shl
mov
inc
push
xor
or
inc
cmp
xchg
cmps
test
into
inc
inc
sar
mov
out
cmp
test
xor
mov
xor
xchg
push
xor
push
shl
ror
test
mov
repnz
cmp
in
retf
test
push
pop
cmp
pop
test
mov
icebp
sub
add
xor
test
xor
pusha
clc
not
dec
cmp
cld
xor
xor
sti
jae
in
jg
ja
push
jns
(bad)
cmp
jne
xor
cmp
mov
int
retf
(bad)
push
mov
retf
in
xor
ja
push
sub
(bad)
cmp
test
mov
push
ror
jnp
movs
cmc
(bad)
cmp
jne
xor
retf
jae
in
and
ja
push
xor
jg
into
mov
fidiv
test
(bad)
(bad)
cmp
je
xor
retf
in
cmp
xor
jnp
mov
les
or
shl
in
or
cmp
ror
shr
jnp
mov
repnz
in
push
jne
push
push
pop
cmp
xor
(bad)
cmp
and
cmp
push
clc
fs
xlat
ins
mov
push
mov
pushf
pop
push
jl
leave
mov
inc
jns
pop
xor
iret
aam
inc
cmps
test
mov
mov
xor
cmp
je
cmp
cmp
jo
std
je
test
xor
rol
cmp
dec
and
xor
or
xor
jo
push
into
xor
jnp
test
cmp
retf
lock
push
xor
mov
ret
aam
je
jnp
xor
xor
test
add
(bad)
cld
inc
outs
mov
xor
rol
arpl
mov
cmp
dec
and
add
cmp
xor
push
cmp
ins
pop
sahf
int
jnp
xor
mov
into
jne
sub
retf
int
jnp
mov
retf
mov
jp
into
jne
sub
retf
int
jnp
mov
retf
xor
inc
jns
mov
inc
mov
into
xor
jnp
jno
xchg
mov
sar
retf
int
jnp
lea
pop
xchg
leave
jnp
jno
xchg
mov
sar
retf
int
jnp
test
pop
sahf
leave
enter
mov
add
int
jnp
repnz
ret
int3
retf
inc
es
leave
enter
mov
(bad)
into
retf
movs
leave
jns
into
mov
ret
int3
retf
inc
es
leave
enter
mov
(bad)
into
retf
movs
leave
jns
into
retf
lock
mov
add
mov
mov
ror
retf
div
loopne
xor
test
mov
retf
mov
js
into
or
popa
mov
jnp
pop
aaa
ins
inc
mov
leave
jp
into
gs
sar
mov
mov
retf
fprem
push
cmp
cmp
xor
lods
test
xor
push
into
retf
mov
retf
fld
(bad)
xor
mov
data16
xor
test
add
ins
fwait
xor
inc
jns
mov
retf
int
jnp
inc
es
xchg
mov
mov
mov
dec
test
xor
jnp
mov
ins
(bad)
iret
retf
xor
inc
jns
pop
test
mov
(bad)
iret
retf
(bad)
push
cmp
mov
les
rcl
test
mov
lods
cmp
ret
mov
js
into
mov
mov
mov
popa
bound
xor
add
movs
int
(bad)
into
addr16
cmp
mov
pop
xor
test
into
gs
inc
mov
je
into
retf
into
inc
cwde
ins
fnstenv
cmp
lea
fdivr
retf
add
ins
out
xor
js
into
xor
cmp
xor
test
mov
(bad)
cmp
fadd
cmp
mov
js
into
repz
fmul
jp
xor
push
xor
xor
int
jnp
mov
js
into
gs
and
jnp
and
mov
xor
mov
rcr
add
int
jnp
addr16
mov
xor
jnp
xor
add
mov
aad
(bad)
inc
ins
fldcw
xor
jnp
or
cmp
aam
fldcw
or
dec
and
or
xor
pop
mov
add
jnp
and
int
jnp
icebp
fimul
mov
sar
into
mov
dec
clc
fs
shr
mov
(bad)
inc
xor
(bad)
cmp
(bad)
inc
cmp
xor
je
xor
repnz
fldenv
xor
xchg
push
xor
push
inc
(bad)
cmp
inc
adc
mov
loop
xor
arpl
add
outs
dec
into
xor
and
xor
ror
bnd
xor
jo
ds
bound
xor
ror
jo
cmp
jo
cmp
ret
je
or
retf
mov
cld
imul
cmp
mov
aaa
mov
retf
push
jge
mov
out
xor
adc
mov
loope
xor
dec
clc
fs
mov
mov
inc
les
inc
jns
cmp
jle
gs
cmp
mov
into
retf
cmp
sar
ja
mov
add
mov
push
clc
fs
shl
pusha
push
mov
xor
cmp
dec
jbe
dec
js
je
icebp
jo
rol
mov
cmp
xor
xor
dec
adc
cmp
leave
sbb
mov
pop
test
dec
jnp
into
mov
xor
xor
out
je
(bad)
cmp
mov
mov
addr16
mov
hlt
xor
out
mov
cmp
ins
ja
xor
cmp
repnz
xor
cmp
jmp
loop
fiadd
repnz
aas
xor
(bad)
cmp
sbb
ds
adc
cmp
fiadd
repnz
or
push
pusha
clc
not
mov
xlat
ins
mov
mov
inc
cmc
jno
test
xor
inc
jns
arpl
retf
pop
xor
cmp
ins
mov
mov
test
xor
mov
xor
test
ds
popa
(bad)
push
mov
test
mov
xor
cld
and
cmp
or
cmp
gs
mov
test
ftst
add
xor
dec
adc
cmp
leave
ret
je
or
rcr
jnp
mov
mov
test
fisubr
ds
repnz
adc
xor
repnz
into
retf
cmp
outs
outs
dec
clc
fs
test
xor
ins
mov
xor
outs
mov
add
xor
jnp
xor
xlat
iret
retf
test
aas
lock
mov
into
xor
test
mov
js
into
retf
daa
mov
jnp
mov
jp
into
mov
sbb
into
retf
mov
jp
into
xor
iret
retf
mov
retf
xor
mov
leave
jp
into
gs
cmp
push
add
xor
cmp
mul
repnz
mov
jnp
into
inc
adc
mov
cmp
cmc
lock
out
cmp
aam
inc
xor
xor
mov
xor
sahf
les
inc
jns
mov
inc
cld
ja
test
xor
test
xor
xor
fidivr
cmp
ds
add
iret
retf
imul
pusha
clc
not
mov
lea
in
mov
test
bound
cmp
rol
cs
mov
jl
das
xor
or
cmp
(bad)
jp
into
mov
movd
mov
rol
(bad)
fnstsw
(bad)
pop
(bad)
cmp
js
xor
pop
in
xor
jnp
push
test
in
mov
out
dec
arpl
sbb
or
push
into
cmp
into
retf
inc
xor
xor
ins
je
xor
or
cmp
xor
xor
inc
jns
lea
xor
shl
jo
push
into
data16
push
iret
retf
repz
mov
into
retf
mov
int
daa
xor
jnp
mov
xchg
mov
mov
lds
inc
cs
xor
xchg
push
ss
jp
retf
cmc
cmp
test
xor
cmp
je
or
outs
leave
mov
idiv
or
cmp
jnp
mov
mov
icebp
fsubr
cmp
xor
inc
or
mov
(bad)
js
rol
mov
rol
xor
sahf
int3
retf
mov
mov
js
inc
mov
jbe
jnp
jo
mov
ss
xor
js
xor
ins
dec
int3
retf
mov
mov
rol
jo
add
fdivp
jno
jg
mov
ret
lods
and
retf
retf
mov
jbe
(bad)
into
mov
xor
retf
lock
mov
cmp
mov
cmp
sti
fidiv
mov
push
inc
outs
mov
mov
mov
xor
inc
jns
mov
cmp
jnp
fld
xor
mov
cmp
repnz
fldcw
cmp
mov
xor
inc
mov
inc
cmp
test
cmp
repnz
fnstenv
xor
mov
xor
add
xor
test
xor
inc
jns
mov
aas
xor
sar
xor
js
imul
repnz
or
ins
mov
(bad)
iret
nop
cmp
mov
inc
ins
(bad)
jle
into
ins
jnp
xor
lds
cld
mov
test
xor
test
jb
imul
push
cmp
mov
add
xor
add
shl
test
test
mov
test
popa
retf
fldenv
dec
adc
xor
jnp
dec
pop
fsubr
jno
into
mov
sub
cmc
(bad)
shl
xor
mov
mov
inc
mov
repz
cmp
cmc
lock
xor
retf
sbb
or
inc
popa
retf
pop
imul
les
inc
test
(bad)
ror
or
jne
inc
mov
sub
xor
(bad)
cmp
add
popa
retf
pop
outs
rcl
and
jnp
mov
xchg
cld
je
xchg
cmp
xor
or
cmp
gs
cmp
ins
mov
cmp
ror
std
into
xor
mov
gs
xor
xor
xor
(bad)
retf
xor
ins
xchg
retf
cmc
and
or
jle
mov
dec
clc
fs
xlat
ins
data16
inc
or
cld
mov
call
int
cld
mov
cmp
into
mov
jnp
xor
repnz
xor
jnp
mov
mov
mov
les
inc
add
test
div
cmp
ds
jmp
mov
int3
xor
jnp
fcomp
push
xor
retf
jae
jnp
xor
xor
jnp
push
xor
push
into
xor
ret
xor
or
ret
fnsave
icebp
inc
mov
lea
frstor
(bad)
cmp
int3
add
xor
jae
mov
mov
cmp
shr
enter
cmp
dec
sub
repnz
into
inc
mov
pop
jo
into
mov
aaa
into
inc
adc
mov
cmp
repnz
adc
jnp
push
mov
nop
sbb
outs
dec
stc
xor
mov
daa
bound
test
mov
ret
mov
hlt
(bad)
cmp
xor
test
fld
mov
pop
div
cmp
mov
inc
push
xor
or
xor
xor
popf
cmc
(bad)
cmp
add
push
mov
or
gs
xor
add
cmp
pop
add
xor
add
inc
sub
(bad)
cmp
mov
rcr
repnz
jno
js
xor
(bad)
cmp
jo
mov
repz
mov
repnz
je
test
fisubr
in
sti
xchg
xor
cmp
inc
cmp
les
mov
cmp
xor
mov
cmp
pop
push
lds
and
xor
or
sub
xor
aam
xchg
push
icebp
xchg
test
xor
les
popa
retf
mov
rol
test
mov
data16
mov
jnp
or
test
jo
push
icebp
xchg
test
xor
cmp
add
pop
in
cmp
xor
push
jnp
cmp
jle
pop
inc
lahf
xor
mov
jno
(bad)
push
xor
les
popa
pop
jp
jno
out
cmp
ins
mov
mov
inc
push
xor
sahf
(bad)
into
retf
push
inc
aas
xor
fidiv
mov
shl
sbb
enter
push
xor
jl
test
aas
lock
mov
xor
jle
push
daa
xchg
icebp
ja
std
xor
inc
jns
xor
and
xor
jmp
xor
test
xor
fisubr
jle
gs
cmp
in
aaa
jno
test
pop
test
pop
mov
cmp
int
cld
(bad)
xor
(bad)
cmp
repnz
cmp
in
add
xor
cmp
(bad)
cmp
inc
ins
les
inc
jns
mov
ror
repnz
xor
repnz
or
push
mov
dec
cmp
mov
inc
jns
mov
bnd
xor
test
mov
adc
xchg
sbb
xor
lds
xor
add
xor
test
(bad)
aam
jle
mov
add
xor
mov
je
xor
xor
ds
mov
xor
dec
xchg
xor
mov
cmp
xor
test
into
xor
sti
jae
mov
mov
movs
xor
cmc
int3
mov
je
test
xchg
stos
lds
fdivr
cmp
mov
scas
mov
xor
xor
cmp
inc
cmp
cmp
sbb
fiadd
jp
mov
je
xor
test
into
xor
movs
jo
ins
cmp
xor
inc
jns
ret
sub
fdiv
cmp
mov
mov
cmp
or
and
test
fadd
jnp
into
ret
sub
fsubr
xchg
xor
mov
xor
ins
sub
retf
xor
or
cmp
ins
ret
xor
dec
mov
mov
scas
mov
xor
sub
jo
ins
(bad)
retf
xor
or
xor
cmp
cmc
ins
div
xor
dec
mov
mov
scas
mov
xor
mov
xor
ins
or
mov
lock
cmc
ins
fwait
xor
dec
mov
mov
scas
mov
xor
xor
add
cmp
mov
sub
xor
mov
xor
xor
xor
lds
xor
and
xor
ror
hlt
add
movs
mov
arpl
xor
test
xchg
stos
lds
fsub
test
xor
ror
cmp
icebp
test
xor
ds
stos
lds
fadd
sub
xor
ins
cdq
xor
lahf
cmp
mov
lahf
scas
je
cmp
movs
test
xor
shr
xor
cmp
xor
clc
cmp
mov
mov
xor
jae
(bad)
sti
dec
outs
pop
ret
cmp
les
xor
test
or
xor
add
ja
mov
xor
push
into
xor
sti
jae
outs
push
nop
dec
(bad)
xor
lahf
scas
je
rcr
retf
scas
je
adc
test
(bad)
aam
jle
mov
or
jne
ss
ins
xor
test
xor
sub
xor
mov
mov
xchg
inc
fwait
jae
or
cli
add
icebp
xor
jae
xchg
inc
fwait
jae
pop
(bad)
mov
ror
cmc
test
xor
add
dec
ret
aaa
retf
dec
je
mov
xor
xor
or
xor
add
xor
fisttp
mov
xor
icebp
cs
jae
inc
addr16
(bad)
xor
ja
xor
xor
stc
int
inc
mov
jp
mov
repz
or
mov
xchg
lock
xor
(bad)
xor
jb
dec
ret
or
inc
cmp
xor
cmp
xor
je
mov
xor
xchg
ret
mov
test
xor
stc
jp
xchg
fs
jo
mov
cmp
or
jle
mov
stc
jp
xor
ret
(bad)
jp
mov
xchg
xor
(bad)
cmp
or
ror
dec
jmp
mov
sbb
cwde
xor
cmp
cmc
(bad)
shl
mov
inc
gs
inc
outs
mov
mov
sbb
cwde
push
adc
jae
in
mov
pop
dec
test
mov
ja
ins
(bad)
xor
add
cmp
inc
jns
arpl
xor
lds
pop
clc
inc
jns
arpl
xor
lds
pop
out
inc
jns
arpl
xor
lds
mov
jo
mov
pop
push
jae
rcl
sbb
cmp
push
repnz
or
cmp
xor
mov
xor
jle
mov
inc
jns
pop
nop
cld
jae
or
gs
lea
ins
and
xor
addr16
mov
push
mov
lds
lds
cmp
(bad)
rcr
jae
mov
mov
ret
xor
sub
jmp
mov
out
xor
shl
xor
pop
cmp
xor
(bad)
cmp
mov
test
movs
cmc
(bad)
cmp
jo
cmp
xor
addr16
mov
xor
xor
test
je
or
mov
in
xor
rcl
pop
test
aaa
xor
jnp
mov
lds
mov
addr16
mov
clc
mov
xor
out
cmp
out
aas
pop
xor
aad
adc
xor
jnp
xchg
mov
test
stos
dec
test
into
xor
sti
jae
out
cmp
inc
and
xor
push
xor
shr
xor
lds
xor
icebp
(bad)
loopne
cmp
retf
icebp
ja
mov
fst
les
jle
gs
mov
lds
mov
lea
xor
add
repnz
pusha
clc
not
mov
mov
pop
div
test
movs
mov
xor
ror
js
mov
int
pop
lds
push
aas
pop
xor
jl
mov
inc
jl
xor
jnp
inc
cmp
lds
mov
mov
pusha
mov
aad
pop
aad
shl
jo
repnz
or
xor
outs
or
cld
into
xor
sti
jae
jnp
cmp
les
imul
xor
shl
bound
mov
cmp
sub
invd
jnp
xor
ror
jnp
xor
ror
jnp
xor
ror
jnp
xor
ror
mov
mov
xor
xor
xor
cmp
aas
xor
dec
jns
cmp
das
(bad)
inc
xor
mov
jle
adc
mov
iret
pop
shl
cmp
das
daa
or
dec
dec
mov
mov
inc
pop
or
xor
xor
cmp
lea
sti
ds
(bad)
cmp
les
xor
out
jmp
push
cld
(bad)
cmp
ins
js
xor
pop
repz
mov
xchg
ds
pop
shl
int
shl
jo
mov
cmp
mov
xor
sbb
add
pop
cmc
nop
mov
jae
test
mov
les
fdiv
movs
cmc
(bad)
cmp
popa
or
cmp
leave
mov
cmp
jne
ret
mov
xchg
add
jl
fnstenv
mov
inc
daa
mov
dec
cmp
pop
aaa
adc
sub
and
outs
aas
mov
xor
xor
icebp
pop
mov
xor
mov
aaa
aaa
icebp
push
int
shl
mov
cmp
leave
mov
aas
add
xor
push
fdiv
pop
repz
mov
xchg
ds
pop
shl
mov
aas
mov
and
test
mov
xor
xor
cmp
mov
add
leave
jge
pop
aaa
xor
jb
int
shl
mov
cmp
leave
mov
cmp
push
or
xor
xor
push
iret
xor
mov
dec
sub
in
xor
shr
xor
jle
(bad)
or
cmp
jb
les
xor
into
retf
push
inc
outs
mov
data16
adc
jae
cmovle
ficomp
mov
cmp
(bad)
fnstenv
test
inc
les
cmp
ret
cmp
add
inc
pop
rcr
xor
mov
xor
inc
jns
cmp
outs
and
cmp
je
or
mov
ins
popa
(bad)
retf
into
xor
sti
jae
mov
xor
ins
cmp
xor
js
fidivr
or
mov
xor
aaa
retf
nop
xor
rol
(bad)
mov
sub
jg
xor
cmp
xor
adc
mov
push
mov
ror
das
xor
outs
lds
jp
mov
ds
mov
jbe
jmp
push
mov
xor
cmp
mov
aas
mov
push
ins
mov
sub
sub
xor
sti
jae
pop
repz
sbb
mov
sub
aas
mov
fmul
cmp
data16
pusha
xchg
cli
shl
jnp
and
dec
jns
(bad)
(bad)
into
retf
cmp
not
mov
(bad)
fcomp
xor
test
bound
retf
mov
pop
(bad)
into
xor
test
xor
inc
mov
xor
add
fmulp
jnp
into
xor
sti
jae
add
shr
jnp
xor
xor
mov
aam
retf
xor
dec
jns
xor
and
retf
and
xor
mov
or
inc
aaa
outs
gs
fmulp
jnp
movs
popf
pop
(bad)
into
pop
dec
xor
cmp
push
test
cmp
mov
jnp
xor
xor
imul
pop
dec
and
stc
ja
push
xlat
xchg
into
retf
shl
icebp
cmp
mov
jnp
xor
xor
jnp
xor
xor
pop
cmc
call
xor
jnp
into
repz
fmulp
jnp
adc
fmulp
jnp
shl
pop
pop
and
stc
jp
xor
test
adc
fmulp
jnp
shl
comiss
adc
out
retf
xor
inc
jns
mov
fsubr
retf
ds
cmp
xor
jnp
mov
pop
(bad)
into
retf
icebp
ja
mov
loope
(bad)
into
mov
inc
fsub
mov
les
mov
retf
ficom
cmp
xor
icebp
cmp
mov
inc
fnsave
mov
jnp
jbe
inc
cmp
xor
imul
inc
push
mov
mov
(bad)
into
gs
push
xor
inc
jns
mov
xlat
fmulp
jnp
fdivr
jnp
xor
jnp
into
sbb
ins
sub
retf
cmc
cmp
dec
push
mov
mov
mov
retf
add
or
cli
shl
xchg
mov
add
mov
retf
jbe
jnp
xor
mov
les
xor
pop
xor
add
into
retf
mov
test
xor
test
inc
cmp
fst
mov
into
xor
add
into
retf
or
mov
into
xor
sti
jae
jnp
jmp
adc
cmp
fadd
cmp
xor
imul
hlt
cmp
je
mov
shr
mov
iret
fmulp
jnp
mov
retf
xor
fidiv
ss
(bad)
mov
and
retf
(bad)
(bad)
lock
xchg
lock
cmp
icebp
mov
xchg
mov
imul
mov
iret
fmulp
jnp
xor
retf
icebp
ja
mov
into
xor
dec
jns
fst
xor
jnp
mov
or
out
retf
repz
xchg
mov
retf
xchg
jmp
les
retf
sub
mov
add
movs
mov
xchg
into
mov
jnp
mov
pop
(bad)
into
mov
jnp
sub
retf
into
sbb
retf
inc
xor
pop
(bad)
into
or
xchg
retf
jb
add
out
retf
mov
pop
(bad)
into
xor
out
retf
mov
pop
(bad)
into
xor
test
movs
sbb
arpl
jnp
fstp
(bad)
push
cmp
test
into
mov
outs
mov
jae
mov
into
hlt
cmp
retf
in
jnp
mov
je
xor
mov
inc
fnstenv
mov
lds
mov
retf
and
idiv
xor
xor
cmp
pop
xor
test
mov
jnp
xchg
test
mov
xor
cmp
pop
xor
test
mov
retf
xor
test
xor
xchg
mov
retf
xchg
jmp
les
mov
fucomip
retf
mov
retf
jns
mov
retf
mov
xchg
mov
mov
cmp
retf
mov
cmp
lds
shl
retf
retf
icebp
ja
xor
mov
inc
fnstenv
mov
jnp
mov
daa
in
retf
xchg
mov
dec
daa
mov
test
mov
jnp
jne
xor
fiadd
mov
fimul
(bad)
into
xor
adc
mov
mov
les
add
xchg
jmp
les
cmp
scas
xchg
jmp
(bad)
lock
xchg
into
retf
xor
test
xor
mov
xor
mov
cmp
inc
nop
mov
xor
mov
cmp
inc
xchg
mov
into
cmp
inc
xchg
mov
xor
inc
cwde
xor
mov
aam
retf
test
pop
(bad)
into
retf
out
retf
inc
int3
jnp
mov
mov
into
xor
jo
into
retf
movs
shr
hlt
cmp
hlt
cmp
js
mov
and
retf
and
add
fmulp
jnp
mov
imul
xor
push
les
inc
jns
fsubr
mov
xor
xor
pop
cmc
call
xor
jg
into
push
pusha
clc
not
mov
fs
mov
jo
test
cmp
das
mov
xlat
dec
xor
(bad)
cmp
add
pop
cmc
nop
les
xor
test
je
out
sti
and
inc
lds
xor
sub
icebp
and
pop
xor
bnd
xor
and
add
pop
cmc
nop
mov
jo
test
je
or
outs
mov
mov
shl
mov
sub
xor
jl
test
scas
icebp
ja
xor
jo
push
icebp
and
xor
bnd
(bad)
push
xor
sub
icebp
and
pop
xor
bnd
xor
shl
cmc
nop
cld
xor
xor
outs
xor
add
pop
cmc
nop
mov
jo
test
imul
clc
fs
shl
je
cmp
mov
arpl
into
xor
sti
jae
pop
push
xor
inc
add
inc
or
cld
push
mov
push
ds
xchg
(bad)
cmp
mov
inc
push
loope
test
pop
xor
test
pop
inc
test
mov
mov
xor
push
pop
pusha
les
pop
xor
cmc
cmp
xchg
pushf
xor
mov
xor
ror
repnz
cmp
shl
xor
icebp
xchg
(bad)
cmp
inc
les
mov
xor
icebp
xchg
(bad)
cmp
inc
outs
mov
arpl
test
fdivr
repz
sbb
xor
(bad)
cmp
retf
xor
test
(bad)
ror
and
cmp
inc
mov
jo
test
retf
icebp
ja
mov
ret
je
or
cmp
ret
je
jnp
xor
bnd
fstp
das
xor
ror
add
shl
pop
test
mov
test
xor
arpl
xor
bnd
xor
or
cmp
ret
je
pop
pop
xor
bnd
xor
mov
pop
in
cmp
pop
test
inc
lds
fst
cmp
mov
aaa
mov
push
xor
(bad)
cmp
cwde
out
cmp
mov
aas
sti
ja
cmp
xor
pushf
xor
cwde
pop
xor
cmp
xor
mov
movs
cmc
(bad)
cmp
dec
clc
fs
xlat
ins
data16
pop
in
jge
ret
xor
or
dec
xor
(bad)
cmp
out
cmp
ins
in
pop
xor
(bad)
cmp
repnz
je
xchg
add
fst
cmp
mov
push
push
lds
xor
mov
(bad)
les
dec
jns
fisttp
xor
dec
jns
fstp
push
xor
inc
dec
sub
cmp
mov
repz
ret
je
or
(bad)
into
fsubr
xor
(bad)
cmp
repnz
xor
lahf
or
xor
(bad)
cmp
push
icebp
jae
ins
mov
div
loop
je
test
ficom
mov
mov
and
cmp
inc
mov
jo
test
mov
pop
addr16
jp
xchg
mov
into
xor
sti
jae
loop
dec
retf
loopne
and
pop
pop
xor
arpl
fisub
out
sti
and
inc
lds
mov
test
mov
jmp
rol
adc
loop
xor
xor
(bad)
cmp
mov
mov
lds
popa
pop
pop
arpl
out
cmp
ins
mov
xor
call
(bad)
into
retf
lock
test
outs
imul
repnz
or
push
and
add
cmp
xor
sti
jae
out
xor
je
aam
imul
mov
mov
(bad)
ror
std
je
test
xor
inc
jns
mov
jnp
mov
test
inc
int3
aam
fs
(bad)
sar
pop
test
mov
repnz
cmp
jbe
xor
loopne
into
retf
cmp
retf
inc
aas
cmp
into
retf
mov
test
mov
pushf
cmp
cmp
je
xor
mov
(bad)
cmp
mov
xor
pop
repz
(bad)
cmp
xor
or
js
repnz
xor
rol
popa
pushf
cmp
js
mov
and
das
aaa
push
jnp
iret
cmp
jle
mov
fs
xlat
add
cmp
in
cli
shl
(bad)
ds
into
mov
aaa
mov
retf
outs
imul
lds
xor
rol
popa
pushf
cmp
and
das
aaa
push
jnp
iret
cmp
jle
mov
fs
xlat
or
cld
pop
xor
cdq
ret
ja
ins
fldcw
inc
aaa
mov
retf
mov
sbb
aas
push
retf
into
xor
sti
jae
out
cmp
jne
xor
dec
mov
jnp
cmc
cmp
mov
or
jnp
xor
mov
mov
jnp
mov
fidivr
mov
aas
aaa
xor
mov
dec
jno
xor
mov
ins
clc
pop
xor
adc
leave
ret
je
or
cmp
out
aas
mov
inc
nop
ror
icebp
mov
jo
std
xor
sbb
mov
retf
icebp
ja
ins
fldcw
in
cmp
mov
jl
idiv
dec
cmp
jp
into
retf
mov
bnd
movs
cmc
(bad)
cmp
mov
dec
clc
fs
cmp
sbb
cmp
data16
movs
cli
inc
mov
add
repnz
icebp
ja
mov
add
mov
push
inc
mov
xor
or
les
into
jg
mov
xor
test
xchg
push
inc
mov
xor
js
popa
xor
test
mov
retf
xor
xchg
(bad)
div
test
xor
test
sar
mov
mov
jnp
pop
dec
loop
mov
shl
add
test
xor
inc
jns
pop
test
dec
pop
test
push
retf
mov
retf
je
jnp
fstp
xor
shl
push
test
mov
retf
leave
retf
xor
mov
cmp
aam
test
test
mov
in
lods
jecxz
test
leave
retf
into
cmp
lods
xor
jg
into
or
sbb
xor
mov
push
ja
test
inc
and
jle
cmp
jnp
gs
mov
pop
xor
test
xor
inc
jns
mov
cmp
mov
(bad)
into
retf
and
lock
mov
retf
into
jne
pop
xor
jl
iret
retf
or
add
mov
jg
into
mov
jnp
into
mov
jnp
mov
retf
jecxz
test
mov
mov
into
repz
into
retf
xor
push
aas
xor
jnp
into
xor
test
mov
retf
into
jne
pop
xor
jl
iret
retf
sbb
or
(bad)
iret
retf
ret
les
add
into
retf
jnp
(bad)
xor
jl
iret
retf
xor
jnp
into
xor
test
fisubr
mov
mov
push
scas
and
jnp
into
mov
js
push
retf
ds
adc
into
enter
dec
push
mov
xor
xor
sbb
int3
pop
mov
retf
xor
inc
jns
fnstsw
inc
cmp
mov
in
test
mov
xor
into
retf
cmp
xor
gs
sbb
retf
pop
xor
test
repnz
int3
push
xor
or
mov
cmp
mov
push
repnz
xor
rol
mov
jnp
movs
xor
les
mov
mov
dec
jmp
enter
cmp
rol
xor
rol
mov
jnp
movs
xor
iret
retf
je
mov
ret
jnp
into
or
inc
jmp
rcl
cmp
jle
cmp
scas
(bad)
retf
mov
mov
mov
mov
jnp
iret
retf
je
mov
retf
dec
out
mov
add
into
retf
jnp
mov
jnp
into
mov
add
repnz
inc
mov
xor
jp
div
jnp
pop
xor
add
test
into
gs
sbb
cmp
dec
cmp
jnp
inc
xor
cmp
inc
jns
repz
into
retf
jnp
add
into
retf
jnp
pop
cdq
je
xor
jnp
fnop
xor
into
mov
aaa
or
jnp
xor
add
xchg
aam
xchg
(bad)
mov
retf
pop
mov
into
retf
inc
pop
loop
mov
jnp
into
push
or
xor
jo
xor
mov
or
scas
cmp
jnp
into
mov
jns
push
retf
ds
adc
into
retf
jnp
movs
int
(bad)
push
inc
sti
cmp
mov
xor
loop
mov
jnp
into
fadd
(bad)
into
retf
or
add
repnz
enter
cmp
or
into
retf
icebp
ja
std
mov
jnp
into
aaa
movd
mov
aas
xor
xor
mov
(bad)
int3
retf
dec
xor
ret
les
mov
jnp
mov
jg
into
cmp
mov
popa
pop
sub
jae
or
popa
fnsave
retf
cmp
dec
jp
enter
(bad)
(bad)
or
les
retf
mov
xor
mov
jno
in
xchg
shl
mov
jnp
into
gs
xchg
test
jnp
cmc
cmp
iret
into
retf
jnp
(bad)
xchg
xor
xor
or
jnp
xor
mov
int
vrcpss
les
add
into
retf
jnp
mov
jnp
iret
retf
xchg
mov
xor
iret
retf
into
jne
pop
xor
pop
cld
xor
mov
xchg
jnp
into
bound
(bad)
into
mov
js
data16
xor
pop
adc
mov
jbe
int3
retf
movs
sar
cmp
jbe
sbb
mov
and
jbe
int3
retf
mov
jnp
into
push
add
into
retf
jnp
cmp
mov
div
jnp
mov
ja
iret
retf
in
sbb
mov
imul
iret
retf
mov
mov
pop
aaa
in
xchg
shl
mov
jnp
into
gs
mov
cmp
iret
into
retf
jnp
repnz
cmp
cmp
mov
or
jnp
xor
xor
mov
(bad)
iret
retf
xor
jnp
into
xor
jp
mov
jnp
mov
test
inc
int3
or
(bad)
into
xor
sti
jae
movsx
retf
jno
or
popa
mov
jnp
fnstenv
cmp
pop
test
(bad)
mov
retf
jbe
pushf
mov
push
or
aaa
xor
or
retf
retf
ds
or
jnp
xor
pop
into
jo
mov
xor
xchg
xor
jo
mov
xor
scas
xor
jnp
into
push
jnp
iret
cmp
jle
mov
jnp
or
clc
loopne
xor
stos
shl
mov
jnp
into
gs
in
or
mov
push
mov
mov
mov
retf
mov
dec
push
pop
test
mov
lds
jnp
fst
inc
aaa
mov
push
or
les
mov
ror
or
mov
mov
inc
cmp
mov
jp
mov
retf
jnp
into
jo
xor
jo
mov
int
(bad)
mov
cmp
je
xor
jnp
fnstenv
(bad)
into
mov
aaa
mov
retf
cmp
pusha
xor
add
repnz
jle
or
xor
rol
xor
movnti
xor
jo
mov
xor
iret
retf
aaa
xchg
mov
mov
push
mov
jnp
ret
cmp
fisub
xor
mov
or
scas
cmp
jnp
into
mov
jp
push
retf
ds
mov
retf
loope
push
mov
retf
into
mov
les
mov
mov
int
(bad)
sub
into
retf
jnp
mov
retf
rcpps
jmp
mov
ror
add
repnz
into
leave
jnp
pop
xor
cdq
ret
ja
mov
retf
into
gs
fs
mov
into
xor
test
mov
(bad)
iret
retf
jae
jnp
mov
mov
mov
dec
(bad)
int
test
pop
pop
retf
jae
or
popa
frstor
(bad)
cmp
xor
push
cmp
xor
js
mov
retf
mov
jg
into
or
popa
retf
fldcw
inc
das
mov
retf
into
inc
cmp
int
jnp
es
adc
xor
jp
popa
retf
fxch
cmp
mov
aaa
mov
sar
xor
js
iret
inc
xchg
push
movs
xor
cmp
aam
inc
cmp
test
cmp
xor
gs
mov
pop
xor
test
repnz
icebp
ja
mov
into
xor
test
pop
xor
mov
popa
mov
jnp
fldenv
into
mov
aaa
mov
retf
(bad)
(bad)
or
les
into
js
mov
jnp
mov
test
inc
int3
or
xor
add
add
icebp
add
or
popa
retf
into
leave
jnp
push
push
test
mov
mov
into
mov
les
mov
mov
mov
cmp
mov
retf
xor
or
ror
pop
repz
jne
pop
xor
jnp
iret
retf
leave
retf
xor
shl
into
(bad)
in
inc
shl
mov
jg
into
bound
xor
jnp
movs
cmc
(bad)
cmp
out
cmp
ins
or
test
xor
mov
pop
(bad)
int
xchg
add
into
leave
jnp
(bad)
inc
pop
mov
retf
fxch
js
mov
retf
mov
retf
je
jnp
xor
xor
jp
mov
jl
iret
retf
jge
adc
xor
jp
popa
retf
fst
cmp
mov
aaa
mov
xchg
xor
jnp
movs
cmc
(bad)
cmp
jne
imul
imul
mov
aas
pop
xor
test
mov
jg
into
mov
jnp
repnz
xlat
into
leave
jnp
inc
ins
jnp
movs
cmc
(bad)
cmp
test
in
into
jg
mov
jnp
mov
test
inc
int3
out
cmp
cmp
retf
ins
mov
xor
xor
jg
into
mov
mov
inc
sub
test
add
test
inc
cmp
pop
fnstcw
cmp
mov
aas
ficomp
jle
popa
pop
test
inc
cmp
test
pop
test
daa
push
test
popa
frstor
xchg
retf
xor
add
retf
xor
inc
jns
mov
inc
mov
test
into
mov
les
mov
push
xor
xchg
mov
ins
clc
ins
xor
jg
into
mov
mov
ds
into
into
retf
push
test
add
test
ds
iret
into
retf
(bad)
cmp
mov
aas
ficom
test
pop
xor
jp
mov
retf
je
jnp
xor
xor
jg
into
xor
sti
jae
pop
ret
into
cmp
test
retf
xchg
outs
test
or
mov
xchg
(bad)
push
push
(bad)
rol
not
mov
lea
and
push
push
adc
retf
retf
icebp
ja
mov
add
mov
mov
retf
into
leave
jnp
mov
jo
int
test
into
xor
test
push
repnz
into
enter
repnz
xor
js
pop
dec
loop
mov
shl
inc
adc
outs
test
div
test
xor
inc
jns
pop
test
fwait
push
test
push
retf
mov
retf
je
jnp
xor
xor
je
xor
jo
int
(bad)
sti
inc
pop
mov
les
pop
inc
int
icebp
daa
mov
jne
imul
imul
cmp
test
lahf
imul
int
lock
xor
mov
jne
imul
imul
cmp
test
dec
imul
mov
jnp
into
mov
jnp
arpl
dec
and
xor
jp
push
xor
jnp
into
mov
les
popa
frstor
into
retf
mov
jnp
into
xor
mov
into
mov
adc
jae
out
cmp
sub
cmp
mov
fstp
xor
js
int3
retf
ds
mov
fidivr
push
mov
into
mov
jg
jbe
stc
(bad)
dec
(bad)
mov
mov
cmp
mov
into
mov
jns
jbe
xor
or
clc
fld
retf
add
into
enter
xor
mov
or
retf
mov
into
jb
inc
int
gs
mov
(bad)
int3
retf
int
rol
repnz
into
enter
mov
mov
je
inc
mov
into
xor
(bad)
cmp
retf
sub
test
(bad)
mov
retf
mov
icebp
mov
into
retf
inc
xor
xor
and
jae
or
popa
fucomp
nop
into
retf
mov
int3
cmp
ret
mov
jnp
into
mov
test
iret
retf
popa
ffree
nop
into
retf
sub
mov
xor
push
into
retf
inc
js
mov
sahf
xor
mov
(bad)
int3
retf
sbb
push
mov
into
mov
js
jbe
xor
xor
add
dec
pop
xor
mov
(bad)
int3
retf
int
or
(bad)
fcomp
ja
sbb
pop
mov
retf
mov
retf
mov
jnp
into
gs
dec
outs
xor
or
popa
ffree
xor
(bad)
cmp
in
push
shl
mov
jnp
into
gs
mov
cmc
sub
test
mov
add
into
leave
jnp
repnz
test
inc
leave
or
popa
mov
ins
les
test
into
mov
les
add
test
add
test
inc
aas
out
pop
f2xm1
fidivr
xor
mov
jne
imul
outs
(bad)
into
ins
out
cmp
cmp
cmp
pop
test
(bad)
mov
retf
pop
lahf
jnp
mov
mov
jge
test
xor
sar
xor
mov
pop
add
pop
or
jl
dec
js
fidivr
push
int3
retf
or
or
cmp
xor
add
shl
mov
(bad)
into
retf
jnp
mov
test
or
jnp
into
gs
pusha
outs
xor
jnp
into
pop
test
(bad)
mov
retf
fwait
pushf
jnp
mov
add
shl
mov
jnp
into
gs
mov
retf
cmc
sub
les
xor
jl
int
movd
sbb
cmp
mov
aas
mov
retf
mov
retf
int
adc
into
leave
jnp
loope
ins
cmp
retf
movs
cmc
(bad)
cmp
and
mov
mov
xor
ret
into
leave
jnp
xor
icebp
(bad)
mov
retf
je
jnp
fstp
ror
leave
jnp
leave
retf
fnop
sar
xor
mov
xor
ins
push
ins
xor
movd
xor
retf
into
leave
jnp
jmp
mov
cmp
(bad)
cmp
test
push
add
xor
pop
(bad)
int
or
repnz
or
mov
cmp
jle
push
or
pop
loope
add
cmp
xor
sti
jae
loop
dec
and
in
sbb
test
dec
fnstcw
xor
mov
mov
and
in
xor
fst
xor
pop
repz
jne
pop
xor
aam
mov
(bad)
xor
test
outs
imul
repnz
or
cmp
xor
pop
inc
push
push
add
cmp
xor
or
(bad)
fcmovnb
cmp
mov
(bad)
into
retf
(bad)
fdivr
xor
aad
lock
retf
xor
cs
mov
ins
or
mov
mov
jnp
shl
div
rol
fisubr
cmp
cmp
mov
leave
pop
and
(bad)
fild
ss
jge
sbb
or
mov
or
jp
into
mov
les
mov
repnz
test
dec
imul
mov
jnp
into
push
inc
mov
add
mov
retf
into
gs
fild
fcmovnb
cmp
aam
imul
pop
xor
out
cmp
in
cmp
xor
jns
into
gs
xor
xor
jns
into
retf
mov
pop
jns
gs
adc
test
neg
mov
lds
into
gs
cmp
inc
cmp
xor
retf
push
sar
fld
xor
(bad)
cmp
inc
aad
xor
jnp
popa
frstor
xor
test
mov
retf
cmc
fcmovnb
cmp
aam
xor
test
xor
sub
pop
sub
mov
jnp
pop
xor
cmps
cmp
xor
or
aad
xor
test
xor
test
xor
fcomip
repnz
or
push
and
add
cmp
xor
sti
jae
or
cld
mov
js
mov
jo
imul
add
cmp
xor
icebp
aaa
into
inc
mov
ja
test
mov
repnz
jnp
or
jle
retf
addr16
test
retf
into
inc
js
jg
test
mov
jo
mov
ror
daa
outs
test
outs
imul
repnz
or
ins
mov
mov
loope
sbb
xor
js
test
fdivr
pop
jnp
xor
hlt
ins
xor
jnp
mov
test
inc
int3
or
pop
punpckhwd
cmp
jno
cmp
fiadd
inc
fsubr
pusha
clc
not
mov
fs
data16
aam
jns
cmp
repnz
cmp
test
xor
push
xor
push
xor
mov
pop
bound
into
inc
or
fidivr
neg
push
xor
ins
fldenv
cmp
pop
test
inc
and
ins
cld
xor
fxch
sar
xor
jnp
cmp
ret
(bad)
ror
outs
cld
inc
outs
mov
data16
aam
jp
jl
leave
mov
add
xor
out
cmp
test
mov
icebp
xor
hlt
sar
xor
daa
mov
mov
inc
xor
jle
mov
cmp
ret
je
or
pusha
pop
xor
test
mov
gs
jnp
je
cmp
mov
jae
mov
pop
test
cmp
je
aaa
mov
je
inc
(bad)
inc
leave
rcl
push
arpl
xor
test
mov
mov
inc
outs
outs
dec
clc
fs
shr
popf
lods
adc
adc
or
push
xor
cmp
xor
out
cmp
test
icebp
retf
fnstenv
sar
xor
aas
add
outs
ins
pop
aaa
out
cmp
rcl
sbb
cmp
(bad)
cmp
retf
or
mov
rol
arpl
dec
cmp
xor
rol
pop
xchg
mov
ins
xor
test
mov
mov
xor
test
dec
clc
fs
xlat
ins
mov
pusha
or
clc
int3
push
test
push
repnz
xor
pop
pop
fnstenv
or
mov
test
ret
clc
fisttp
test
mov
xchg
cmp
cld
je
pushf
cmp
jne
mov
retf
mov
test
jne
jne
icebp
sub
les
inc
cmp
add
mov
mov
les
mov
les
inc
push
mov
cmp
jle
fisubr
cmp
cmp
jle
cmp
jg
les
sti
das
xor
shl
xor
push
fnstenv
or
clc
mov
jp
mov
jp
inc
in
jle
cmp
cmp
daa
lods
jmp
cmc
jmp
mov
xchg
repz
fisttp
ret
je
or
mov
push
rcl
or
(bad)
aam
jle
xor
fistp
jne
mov
cmp
lods
jmp
adc
ds
cmp
mov
(bad)
xor
in
jle
mov
shr
test
aad
lea
je
or
repnz
or
push
cmp
rol
dec
inc
adc
xor
test
psrlq
cmp
(bad)
and
sbb
or
out
mov
xor
test
xchg
mov
fcmovu
jae
cmp
enter
ret
pusha
push
test
mov
jecxz
es
jle
xor
jle
mov
inc
int3
push
std
or
ret
div
cmp
and
cmp
adc
or
fild
jle
xor
mov
jae
mov
jae
inc
rol
cmp
repz
fsubr
cmp
xor
ror
or
out
ds
cmp
xor
cmp
push
xor
or
ret
ds
or
test
xor
xor
jbe
push
icebp
xor
les
mov
les
cmp
js
mov
pop
shl
icebp
xor
mov
les
mov
ret
sub
test
ds
(bad)
jbe
sti
inc
cmp
(bad)
mov
ds
xor
into
mov
xor
test
inc
xor
into
xor
cmp
xor
test
inc
xor
into
xor
cmp
mov
int
mov
int
cmp
jo
retf
je
test
daa
mov
jno
jne
dec
dec
aaa
mov
les
fimul
mov
aad
fild
xor
shl
jo
xor
ss
dec
xor
cmp
jle
push
pusha
clc
mul
stos
mov
xor
aas
jmp
jne
stos
mov
xchg
push
inc
movs
add
mov
sbb
mov
movs
adc
jno
adc
mov
movs
adc
jno
adc
mov
movs
adc
or
adc
mov
movs
adc
mov
aas
das
ret
stos
mov
movs
retf
sbb
adc
inc
sub
mov
movs
adc
mov
sub
movs
adc
inc
fst
mov
movs
adc
push
fmul
pop
mov
push
ins
cmp
xor
adc
mov
xor
les
mov
movs
adc
jns
adc
mov
movs
adc
and
inc
aas
mov
movs
adc
mov
movs
adc
icebp
cmp
mov
movs
adc
stc
movs
adc
mov
movs
adc
fadd
xchg
jnp
in
jnp
xor
jns
and
xor
movs
retf
sbb
in
mov
xor
out
aas
mov
movs
adc
mov
movs
adc
inc
addr16
mov
jne
stos
mov
movs
lods
cli
mov
out
stos
mov
movs
adc
mov
movs
jae
mov
movs
adc
mov
movs
adc
(bad)
xor
or
int
stos
mov
movs
adc
mov
pop
ret
xor
adc
mov
ja
stos
mov
movs
lods
cli
mov
out
stos
mov
movs
adc
mov
movs
jae
mov
movs
adc
mov
movs
adc
(bad)
cmp
or
int
stos
mov
movs
adc
push
movs
adc
mov
les
repnz
mov
mov
daa
bound
mov
cmp
mov
cmp
clc
xor
mov
sbb
mov
ret
je
or
cld
je
test
fcom
test
xor
aam
sbb
jnp
push
retf
(bad)
(bad)
or
mov
aaa
repz
fisubr
cmp
dec
test
mov
test
xor
xor
mov
jae
mov
lods
jae
mov
mov
add
inc
xchg
pop
dec
inc
xchg
mov
cmp
xor
ds
sbb
or
mov
xor
cmp
jle
xor
jnp
adc
mov
pop
mov
pop
mov
xor
jb
(bad)
(bad)
cmp
cmp
jle
movd
xor
imul
cmp
gs
cld
arpl
ror
mov
aam
xchg
cmp
ret
je
or
pop
into
jo
xor
jo
jae
repz
outs
imul
repnz
or
push
push
inc
xor
fstp
imul
ss
push
hlt
jae
xor
inc
sar
and
dec
mov
fiadd
cmp
xor
inc
shr
cmp
xor
jnp
cmp
aad
into
retf
cmp
add
xchg
cli
(bad)
aaa
comiss
bound
push
nop
push
pop
rol
cmp
fnstsw
or
shl
repz
dec
imul
aaa
jnp
or
bound
mov
bound
bound
xor
test
xlat
ja
cmp
shr
test
mov
pushf
call
js
es
and
test
mov
xor
js
nop
mov
xor
nop
mov
rol
and
mov
test
xchg
mov
xor
adc
jae
xchg
test
jo
dec
call
xor
add
xor
xor
mov
hlt
sub
loop
push
mov
push
aad
xor
cmp
mov
jnp
repz
jmp
out
mov
mov
add
mov
pop
les
rol
cmp
rol
cmp
mov
xor
or
jae
or
mov
xor
mov
and
and
cmp
bound
or
iret
inc
in
and
mov
lds
mov
mov
test
and
jmp
repz
jle
xor
cmp
ror
jecxz
in
or
fnsave
mov
mov
ja
mov
movs
bound
mov
mov
mov
in
std
mov
rol
cmp
adc
loopne
comiss
mov
cmp
xor
aas
mov
ins
and
add
popa
mov
bound
gs
mov
cmc
cmp
or
cmp
out
cmp
in
cmp
xor
ins
sbb
xor
add
cmp
or
gs
shl
dec
aad
dec
jbe
xor
js
xor
test
(bad)
fnstsw
ja
xor
fisub
not
mov
rol
bnd
xor
(bad)
cmp
inc
shl
mov
ss
pop
les
xor
enter
mov
sbb
or
imul
jmp
ja
push
ret
dec
les
pop
xor
leave
cmp
gs
mov
xor
shl
mov
js
mov
repnz
push
cmp
add
add
ss
fld
xor
test
ficomp
int3
and
test
ds
pop
cmc
movs
cmp
xor
(bad)
cmp
sub
in
sti
adc
cmp
xor
or
xor
in
sti
adc
cmp
xor
test
cmp
jle
pop
inc
sbb
xor
cmp
xor
lock
xor
mov
dec
or
add
cmp
xor
sub
xor
test
mov
mov
clc
not
mov
fs
push
imul
mov
(bad)
(bad)
cmp
inc
cmp
xor
rol
cmc
movs
cmp
xor
(bad)
cmp
xor
and
rol
add
mov
mov
out
dec
int3
sar
repz
cld
inc
outs
mov
arpl
mov
cmp
or
shl
je
or
ins
fnstenv
inc
xor
jnp
cld
je
test
fisub
mov
sbb
xor
add
div
and
rol
fnsave
xor
mov
int
arpl
jns
mov
ins
pop
gs
xor
or
test
push
repnz
xor
rol
or
mov
aas
ss
les
rcl
sbb
or
clc
out
lds
mov
mov
cmp
xor
jge
aas
ss
inc
outs
mov
ds
mov
lods
inc
xor
(bad)
cmp
inc
cmps
mov
cmp
ret
pop
movs
cmp
xor
mov
mov
test
mov
mov
xor
cmp
xor
test
imul
clc
fs
xlat
ins
data16
call
cmp
jo
sub
xor
mov
jmp
ja
mov
xor
mov
pop
les
xor
mov
jl
test
pop
test
fnstsw
xor
test
mov
ror
pop
div
cmp
mov
aam
mov
test
mov
(bad)
out
sub
push
mov
ins
adc
xor
mov
xor
les
clc
jge
xor
or
gs
test
test
sbb
or
imul
mov
ins
fdiv
mov
mov
pop
adc
retf
mov
mov
into
mov
lock
mul
cmp
xchg
idiv
test
adc
xor
pop
stos
or
xor
push
xor
mov
xor
test
pop
jns
jns
pop
inc
sbb
xor
cmp
xor
ins
fs
test
fld
jle
xor
or
gs
sub
xor
or
jle
mov
jnp
outs
imul
repnz
or
cmp
xor
daa
dec
das
sub
aam
jno
cmp
xor
mov
retf
into
gs
cmp
xor
or
cld
div
cmp
sub
xchg
jp
into
sbb
aaa
ds
div
jnp
mov
jnp
mov
retf
pop
jl
cmp
xor
or
clc
cmc
pop
xor
jno
ja
mov
retf
into
gs
cld
cmps
retf
not
mov
retf
jnp
pop
xor
jno
ja
mov
retf
into
gs
nop
cmps
retf
not
mov
retf
jnp
mov
aam
xor
jp
into
repz
into
retf
jnp
xor
xor
div
jnp
mov
repnz
popa
retf
fldenv
cmp
mov
jnp
xchg
or
xor
rcr
jg
cmp
retf
jnp
mov
repnz
adc
iret
retf
jne
test
lock
cmp
mov
adc
retf
jnp
cmp
iret
retf
xchg
mov
ret
imul
pusha
clc
not
mov
mov
aaa
xor
cmp
neg
mov
xor
jae
mov
retf
mov
sbb
add
or
popa
mov
ins
xor
retf
cmc
cmp
je
test
(bad)
mov
jnp
idiv
jnp
fstp
int3
cmp
repz
retf
les
fidivr
(bad)
iret
retf
mov
sub
sar
into
jnp
into
inc
mov
into
gs
jle
ja
mov
leave
jp
into
gs
ins
jnp
test
sbb
or
(bad)
aam
repz
cmp
(bad)
test
mov
(bad)
xlat
mov
leave
jp
into
data16
sbb
test
pop
add
xor
out
cmp
test
mov
add
iret
retf
fchs
ret
mov
jl
div
in
add
ja
sar
xor
(bad)
cmp
fld
xor
or
ret
sbb
or
shl
test
popa
pop
mov
jae
or
(bad)
fnsave
jb
xor
jl
leave
mov
jp
into
gs
add
test
or
mov
into
add
xor
sar
push
pusha
clc
not
mov
mov
aaa
xor
je
jecxz
or
cld
xor
or
mov
pop
xor
mov
popa
mov
ins
lahf
retf
retf
cmc
cmp
cmp
aam
jecxz
test
div
jnp
fimul
cmp
aam
je
pop
sti
sub
retf
inc
cmp
mov
popa
pop
rcl
xor
jnp
popa
fnstsw
xor
imul
test
mov
jnp
fst
xor
dec
jb
add
iret
retf
pop
adc
xor
jnp
frndint
int3
cmp
mov
aaa
mov
repnz
popa
fst
jge
xor
xor
int3
retf
mov
ffree
jns
xor
push
xor
mov
xor
mov
dec
cmp
mov
pop
ja
cmp
xor
shl
xor
daa
js
inc
or
mov
mov
mov
(bad)
aam
je
pop
sti
sub
retf
leave
add
mov
retf
mov
retf
je
(bad)
cmp
aam
pop
jge
cmp
leave
jp
into
gs
lods
jb
test
into
mov
pop
lds
inc
xchg
mov
in
jmp
jnp
fnsave
xor
jnp
and
mov
leave
jp
into
gs
cld
jne
test
icebp
inc
fcom
fcmovnb
cmp
pop
sar
pop
test
das
push
xor
ins
pop
jo
test
neg
shl
into
gs
push
je
test
icebp
inc
mov
cmp
or
cmp
pop
test
das
push
xor
ins
adc
xor
jl
neg
cmps
push
and
(bad)
cmp
and
cmp
pop
test
and
icebp
xor
add
xor
sar
xor
repnz
or
cmp
xor
pop
fs
or
std
xor
or
mov
popa
mov
cwde
imul
jl
into
mov
add
iret
retf
test
jo
into
retf
je
(bad)
cmp
aam
aaa
jb
cmp
sar
gs
dec
jae
test
shl
shl
xchg
mov
in
jmp
jnp
arpl
pop
js
xor
test
xor
push
xor
push
xor
jo
into
retf
mov
jo
mov
pop
and
sar
out
cmp
xchg
aad
xor
mov
or
cmp
mov
xor
push
std
pop
xor
jns
fst
cmp
test
jae
movd
retf
cmp
cmp
add
xor
rcl
ja
cmp
xor
movd
retf
ftst
mov
or
mov
mov
xor
(bad)
into
inc
xchg
and
mov
int
ins
(bad)
retf
fstp
mov
cmp
mov
aad
dec
test
pop
ret
imul
xor
jb
jae
cmovbe
retf
mov
(bad)
jns
xor
and
xor
test
outs
imul
repnz
or
cmp
xor
fnstenv
mov
stc
dec
mov
inc
or
mov
add
push
inc
mov
xor
jnp
mov
fnsave
into
retf
cmp
xor
jp
into
gs
and
xor
ja
into
retf
maxps
(bad)
into
gs
imul
jb
into
mov
add
iret
retf
test
aaa
mov
retf
je
(bad)
cmp
aam
pshufw
pop
add
xor
out
cmp
test
mov
add
iret
retf
(bad)
lds
xor
dec
sbb
xchg
aad
xor
test
gs
sub
ja
les
frstor
cs
add
iret
retf
neg
and
xor
test
dec
ja
cmp
aam
xor
(bad)
cmp
push
ins
dec
sysexit
test
neg
mov
fnstenv
cmp
mov
rol
pop
test
inc
int
mov
leave
ret
mov
jp
into
mov
test
pop
test
inc
leave
rol
inc
xor
xor
jl
neg
inc
les
ins
cwde
or
test
fadd
cmp
cmp
cmp
pop
test
ret
imul
or
mov
retf
frstor
xor
mov
xor
inc
outs
mov
xor
ror
arpl
sbb
popf
cmp
ret
mov
jns
into
mov
mov
inc
iret
retf
jnp
add
bound
mov
sahf
mov
nop
add
fdiv
sar
xor
(bad)
cmp
fld
push
xor
cld
(bad)
iret
retf
je
pop
sti
sub
retf
cmc
cmp
cmp
sub
mov
popa
pop
data16
jae
or
popa
frstor
js
xor
call
enter
pop
rcl
xor
jp
popa
fld
js
xor
inc
xchg
pop
xor
test
pop
push
(bad)
jae
ins
cmp
xor
in
out
fdiv
mov
cmp
js
xor
xor
iret
retf
mov
jp
into
or
popa
fstp
add
popf
retf
jp
mov
mov
ds
cmp
xor
add
mov
jp
into
or
popa
fstp
or
push
xor
mov
(bad)
aam
xchg
aam
xchg
aam
xchg
inc
fdiv
mov
jp
retfw
iret
retf
mov
jp
into
mov
sub
out
les
cmp
stc
mov
retf
inc
enter
mov
push
pop
adc
jae
or
frstorw
xor
pop
or
mov
jp
into
gs
sbb
xor
or
mov
into
inc
adc
or
into
retf
test
adc
xor
cmp
xor
test
mov
retf
mov
jp
into
gs
jo
xor
jp
into
mov
mov
mov
mov
hlt
arpl
mov
retf
jnp
into
and
jbe
mov
xchg
or
mov
sub
mov
jns
into
pop
cmp
retf
jnp
mov
test
jns
mov
jnp
fldlg2
lds
xor
adc
xor
jp
popa
fucom
add
xor
cmp
mov
xor
xor
jnp
into
sub
iret
retf
or
sbb
mov
mov
adc
je
jns
frstor
popa
pop
jb
jae
cmovbe
retf
daa
push
test
outs
imul
repnz
or
cmp
xor
icebp
xor
fs
xor
ret
mov
jp
into
mov
test
(bad)
ror
les
mov
(bad)
aam
shl
leave
into
retf
cmp
mov
cmp
xor
mov
mov
xchg
ds
cmp
xor
jnp
popa
fst
add
xor
or
fcomp
aam
xor
sub
xor
or
xor
jo
mov
inc
add
cld
ds
div
jnp
pop
xor
cwde
imul
ror
les
mov
mov
mov
fisubr
xor
mov
xor
xor
add
xor
les
std
jne
xor
jnp
fst
xor
xchg
cmp
ret
mov
jp
into
mov
(bad)
cmp
inc
cdq
push
xor
jnp
fld
les
xor
pop
jbe
xor
add
iret
retf
pop
mov
add
iret
retf
fldenv
cmp
mov
sub
repnz
popa
(bad)
add
xor
cmps
push
xor
mov
iret
jp
into
gs
pop
ror
mov
sbb
or
shl
add
outs
outs
dec
clc
fs
xlat
ins
mov
mov
stos
ja
jl
leave
mov
test
fstp
add
xor
inc
in
aaa
xor
test
push
or
div
cmp
mov
inc
xor
jae
imul
mov
pop
mov
mov
aaa
popa
fst
xor
xchg
mov
(bad)
inc
xor
xor
lock
inc
cmp
and
xor
retf
cmc
cmp
icebp
aaa
into
inc
xchg
ins
fst
(bad)
into
mov
xor
xor
icebp
sbb
inc
xchg
ins
fprem1
jae
into
mov
xor
sub
sub
ja
rcr
xor
(bad)
cmp
add
xor
ins
sbb
xor
arpl
outs
imul
repnz
or
xor
fnstenv
mov
ficomp
inc
mov
xor
jl
test
fdivr
retf
pop
dec
imul
xor
(bad)
(bad)
jae
jnp
fnstenv
cmp
pop
test
xor
into
retf
add
pushf
add
xor
lods
ret
mov
xor
(bad)
sub
je
into
ins
inc
mov
into
xor
jnp
mov
mov
or
mov
mov
mov
(bad)
into
retf
mov
jg
into
gs
les
cld
(bad)
jae
or
popa
fnstsw
jmp
or
xor
in
inc
fdiv
mov
xor
ins
and
retf
cmc
cmp
xor
js
into
xor
test
pop
xor
dec
fdiv
mov
xor
ins
sar
mov
dec
das
pop
test
fadd
cmp
aam
out
mov
mov
mov
test
into
retf
mov
jg
into
or
push
pop
test
dec
outs
mov
xor
xchg
xor
push
popa
(bad)
shl
mov
cmp
xor
test
or
iret
jg
cmp
pop
xor
xor
je
add
or
jle
jo
mov
fcom
cmp
or
jb
jo
mov
fsub
cmp
or
je
popa
lock
sbb
xor
xchg
test
xor
push
bound
imul
xor
test
popa
je
push
xor
test
jge
xlat
outs
ds
cmp
xor
shr
add
xor
test
or
(bad)
cmp
dec
xor
test
pop
xor
dec
fdiv
mov
xor
ins
aam
retf
cmc
cmp
dec
pop
pop
adc
(bad)
cmp
(bad)
shl
mov
les
retf
inc
jp
mov
popa
mov
jnp
fld
(bad)
into
mov
adc
mov
popa
mov
aam
mov
test
mov
xchg
push
pop
fadd
cmp
and
imul
jns
retf
aas
add
xor
aad
xor
test
gs
sub
ja
les
fnsave
xor
or
cmp
mov
aaa
xor
add
xor
js
into
sbb
popa
mov
add
retf
pusha
mov
jnp
fld
add
retf
retf
(bad)
(bad)
jecxz
xor
add
retf
retf
xor
add
retf
retf
repz
aas
mov
retf
movs
xor
fxch
jnp
mov
retf
fxch
jnp
inc
out
xchg
inc
mov
pop
test
(bad)
jg
into
mov
aaa
fisub
or
mov
sub
into
jnp
mov
mov
neg
xor
xor
lock
retf
xor
out
cmp
xor
into
retf
cmp
xor
test
mov
mov
inc
and
mov
mov
sub
into
jnp
mov
mov
neg
out
cmp
xor
jnp
mov
sub
push
ret
pop
(bad)
cmp
dec
jae
pop
mov
push
(bad)
cmp
aam
adc
test
mov
mov
xor
jnp
fstp
imul
les
frstor
xor
test
fcmovnb
cmp
mov
test
push
push
xor
mov
mov
test
fadd
test
xor
jnp
inc
adc
mov
mov
sub
retf
cmp
jae
mov
retf
fdiv
test
xor
aad
xor
test
gs
sub
ja
les
fnsave
sahf
xor
js
into
xor
test
into
retf
xor
xlat
shl
icebp
mov
xor
cli
cmp
xor
test
mov
aam
or
(bad)
cmp
push
ins
aam
xor
test
mov
repnz
jne
ja
shl
add
jg
(bad)
cmp
push
ins
lock
mov
xor
mov
xor
test
lahf
add
jb
(bad)
cmp
push
ins
pushf
add
xlat
cmp
fcom
sub
ja
sar
xor
(bad)
cmp
push
ins
mov
lds
cmp
ror
les
xor
inc
daa
popa
pop
mov
mov
popa
fnsave
add
xor
cmp
jae
mov
retf
mov
retf
add
test
pop
xor
jle
into
addr16
fstp
cmp
fcomp
cmp
xor
test
and
test
pop
xor
(bad)
cmp
push
ins
xor
xor
mov
mov
xor
inc
aas
popa
data16
hlt
fmulp
jnp
cmc
cmp
test
fisubr
xchg
leave
jnp
jo
lahf
push
adc
(bad)
cmp
clc
mov
xor
imul
jns
retf
test
in
sub
ja
rol
xor
(bad)
cmp
push
ins
nop
add
out
xor
popf
push
xor
movs
mov
xor
imul
jns
retf
mov
int
ret
mov
retf
outs
outs
dec
clc
fs
shr
retf
lea
fdivr
retf
pop
xor
mov
xor
mov
int
cld
cmp
icebp
aas
add
outs
and
rcl
test
rcl
add
in
outs
cmp
mov
cld
inc
outs
mov
aaa
test
bound
test
add
mov
pop
daa
xor
jl
leave
mov
push
(bad)
test
mov
mov
(bad)
into
retf
mov
mov
xor
test
fwait
add
into
retf
fnsave
imul
mov
xor
cmp
pop
dec
xlat
jae
jnp
cmc
retf
jnp
fnop
mov
xor
push
lock
cmp
add
retf
add
jp
into
cmp
dec
ss
shl
xor
add
cmp
jnp
mov
retf
jmp
xor
cmp
push
xor
pop
mov
xor
or
jbe
loopne
sub
mov
popa
retf
iret
retf
movs
stc
jp
into
cmp
dec
sub
(bad)
mov
in
jp
into
gs
loope
jnp
into
mov
(bad)
sti
inc
push
or
cld
add
loop
mov
jp
into
mov
jnp
into
and
mov
rcl
fld
cmp
ror
xor
jl
leave
mov
xor
iret
retf
aaa
push
test
mov
bnd
cmc
retf
jnp
fld
mov
xor
xor
outs
imul
repnz
or
cmp
frstor
xor
stc
xor
mov
inc
or
mov
mov
push
leave
test
(bad)
or
fistp
cmp
mov
cmp
xor
jnp
xor
xor
add
cmp
inc
xchg
les
(bad)
xor
test
neg
mov
leave
aam
xor
push
xor
repz
fst
cmp
cmp
xor
stos
test
xor
mov
(bad)
popa
pop
test
pop
test
inc
and
test
div
add
jmp
imul
cmp
mov
jnp
cmp
lock
int
(bad)
into
fimul
mov
into
cmp
ins
sub
xor
bound
into
mov
cmp
into
or
popa
fisttp
xor
js
mov
cmp
into
gs
fstp
cmp
mov
nop
mov
into
add
xor
push
sub
jnp
outs
imul
repz
cmp
inc
mov
add
lea
mul
ins
add
or
mov
into
or
cld
div
call
sbb
xor
out
jmp
mov
push
jle
mov
mov
mov
ror
outs
outs
dec
clc
fs
cmp
data16
mov
int
ret
mov
test
fst
xor
popf
les
fucomp
adc
xor
test
push
xor
test
mov
retf
xor
pop
mov
pop
test
sti
pop
test
popa
fstp
xor
or
cmp
xor
jnp
fnstenv
(bad)
retf
mov
cmp
icebp
pop
into
add
xor
add
retf
imul
mov
inc
cmp
test
(bad)
ror
les
xor
test
test
mov
retf
xor
js
into
xor
or
les
ja
mov
xor
ins
sub
cmp
in
cmp
test
fnsave
xor
popa
ror
fnsave
mul
enter
push
xor
les
fnsave
xor
test
neg
push
mov
mov
(bad)
into
retf
(bad)
retf
jnp
mov
mov
icebp
cmp
fnstenv
xor
js
into
ins
mov
xor
mov
mov
js
into
retf
leave
add
mov
mov
jnp
pop
mov
jns
mov
jnp
icebp
xor
ror
push
test
mov
mov
into
xor
push
or
xor
lock
jae
jnp
fst
cmp
mov
cli
outs
xor
test
mov
or
xor
jnp
fsqrt
jle
into
ins
(bad)
sti
inc
cmp
outs
fld
cmp
retf
mov
xor
jnp
into
xor
retf
int
jnp
pop
push
push
cmp
retf
fstp
xor
test
into
retf
mov
js
into
addr16
(bad)
test
xor
mov
leave
xor
mov
mov
jnp
ftst
mov
xor
mov
leave
jg
into
addr16
movs
xor
jnp
cmp
sub
xor
test
fdiv
jp
into
push
pusha
clc
test
ins
data16
fiadd
test
(bad)
mov
mov
mov
xor
xchg
mov
add
cmp
addr16
rcr
repnz
cmp
fld
xor
mov
sbb
mov
cmp
jle
gs
cmp
xor
or
jle
aaa
test
mov
ins
mov
xor
xchg
push
xor
out
repnz
fmul
sub
mov
inc
cld
je
xchg
cmp
xor
or
mov
leave
aam
je
aam
fst
xor
and
js
je
pop
pop
xor
add
xor
js
dec
leave
mov
mov
(bad)
cmp
ins
fnstcw
xor
fidiv
je
or
cmp
ret
mov
xor
(bad)
ror
mov
fst
push
xor
jae
int
shl
xor
imul
jnp
pop
test
fld
adc
xor
test
mov
jo
mov
(bad)
(bad)
into
retf
push
inc
aas
xor
fisub
rol
fcmove
adc
xor
out
cmp
inc
mov
mov
out
cmp
je
cmp
gs
je
xor
test
(bad)
ror
fs
not
mov
mov
dec
bound
mov
cmp
sar
xor
mov
xor
ror
jo
cmp
xor
test
mov
rcl
cmp
rol
test
mov
repnz
cmp
pop
sti
cmp
jle
gs
pusha
pop
xor
ror
mov
aam
ja
test
pop
jno
cmp
mov
xor
mov
jle
jno
cmp
mov
jl
je
or
int3
(bad)
mov
movd
jo
cmp
xor
push
scas
popa
mov
test
pop
movs
push
xor
push
xor
test
inc
cmp
(bad)
cmp
xor
es
cmp
test
xlat
sbb
mov
xor
cmp
inc
sbb
pop
sbb
pop
sbb
xor
movs
pop
xor
pushf
pop
xor
icebp
aas
add
outs
xor
xor
fisub
not
mov
shr
mov
int
ret
mov
frstor
xor
pop
adc
xor
push
adc
xor
test
pop
xor
dec
xor
xor
cmp
xor
rcl
mov
test
mov
mov
je
or
clc
fs
mov
cmp
mov
ins
fs
test
gs
and
inc
mov
inc
cmp
test
repnz
or
inc
icebp
dec
or
cld
pop
xor
aas
mov
inc
xchg
les
dec
cmp
cmp
xor
fprem
fs
rol
int
ret
mov
sbb
mov
xor
test
pop
test
retf
into
inc
mov
sbb
cmc
lock
add
outs
push
into
inc
pushf
les
dec
sub
and
in
adc
inc
cmp
int
mov
sti
fisub
cmp
dec
xor
ror
bnd
int
movs
adc
jno
dec
clc
fs
shr
nop
mov
sub
cmp
test
cmp
mov
inc
std
aaa
xor
or
mov
leave
aam
sub
jnp
cmp
aam
cmp
cmp
dec
xor
mov
out
cmp
jnp
and
icebp
(bad)
ftst
test
dec
cmp
cwde
test
shl
icebp
(bad)
fst
int3
(bad)
mov
mov
not
mov
fs
data16
test
dec
test
mov
ins
fnsave
test
fnsave
xor
test
mov
sbb
mov
xchg
ins
fnsave
mov
or
jne
jbe
repnz
jl
xor
test
xor
push
xor
push
add
(bad)
cmp
inc
test
xor
or
hlt
cmp
icebp
aas
add
outs
es
add
xor
test
and
rol
(bad)
int
(bad)
repnz
pop
and
rcr
jno
aas
mov
xor
shl
mov
inc
mov
mov
repz
push
mov
mov
inc
mov
cmp
mov
xor
imul
sbb
fild
jl
je
movd
repz
mov
add
leave
mov
cmp
push
ret
mov
xchg
movs
mov
sub
xor
jle
repz
mov
pusha
push
xor
outs
(bad)
in
xchg
gs
call
div
xor
inc
lahf
mov
shl
retf
frndint
mov
aaa
xor
outs
xor
repz
outs
imul
repnz
or
push
cmp
ror
ds
cmp
ret
mov
(bad)
dec
pop
test
mov
lds
ffreep
push
ins
mov
aad
jle
mov
pop
cld
cmp
jnp
jo
cmp
mov
outs
sub
mov
cmc
xor
inc
mov
xor
aas
add
dec
leave
inc
popa
mov
xor
test
fidivr
mov
lea
das
test
xor
std
push
arpl
cmp
(bad)
retf
xlat
cmc
jnp
f2xm1
fild
in
mov
in
mov
sbb
xor
jo
xor
loop
je
mov
inc
sub
push
inc
outs
mov
aaa
test
adc
cmp
rol
mov
repz
sahf
(bad)
les
mov
xlat
into
enter
lds
mov
retf
mov
retf
inc
cmp
retf
cmc
cmp
icebp
cmp
cmc
ins
in
xor
jnp
into
xor
loopne
xor
xchg
xor
icebp
das
fldcw
cmp
mov
jnp
sub
js
iret
retf
jmp
mov
int3
retf
in
retf
add
jnp
lea
test
xor
xchg
adc
xor
jp
mov
bound
into
mov
in
aas
xor
test
mov
pop
inc
xor
add
into
enter
mov
les
mov
mov
pop
mov
into
xor
imul
mov
xor
push
xor
js
cmp
mov
xor
inc
xchg
les
(bad)
fidiv
push
(bad)
faddp
cmp
cmp
ins
xor
xor
in
stos
fidiv
les
mov
popa
pop
pop
shl
aam
fistp
test
mov
nop
mov
mov
test
xor
add
into
enter
xor
test
mov
int
xor
jnp
xor
jnp
fiadd
mov
xor
mov
les
add
cmp
retf
stc
retf
cmp
xor
pop
stc
push
addr16
cmp
(bad)
retf
xlat
cmc
jnp
f2xm1
fild
(bad)
into
mov
shl
into
(bad)
in
pop
fnsave
mov
xor
ins
je
xor
jnp
stc
retf
mov
dec
(bad)
int3
retf
xor
jnp
into
xor
retf
sub
jnp
mov
retf
ins
faddp
cmp
nop
adc
xor
dec
xor
inc
(bad)
int3
retf
mov
dec
(bad)
int3
retf
xor
jp
mov
retf
std
retf
ds
(bad)
into
retf
(bad)
jns
fmul
test
xor
js
iret
retf
pop
push
test
fdiv
test
xor
jnp
ds
cmp
xor
test
mov
std
test
or
mov
mov
retf
(bad)
jns
mov
pop
lock
mov
test
inc
add
xor
nop
push
push
mov
(bad)
int3
retf
push
sbb
cmp
inc
(bad)
cmp
mov
jnp
stc
retf
or
mov
outs
(bad)
int3
retf
xor
xor
mov
enter
loopne
cmp
mov
out
xor
jnp
into
gs
xor
cmc
xor
(bad)
fisub
or
popa
fnsave
into
retf
mov
jnp
into
retf
into
retf
jnp
inc
sub
jp
mov
retf
ins
faddp
cmp
pop
adc
xor
je
sar
into
fstp
push
xor
jp
mov
retf
test
jnp
into
data16
in
retf
cmc
cmp
les
cmc
mov
pop
out
jns
retf
into
retf
jnp
lahf
sbb
mov
neg
push
xor
push
xor
push
xor
mov
or
test
mov
retf
leave
retf
fld
mov
mov
sar
(bad)
aam
test
jnp
into
retf
into
enter
adc
mov
retf
fld
cmps
cmp
retf
into
retf
jnp
xchg
test
mov
repz
rcr
mov
(bad)
int3
retf
mov
fst
xor
inc
outs
mov
xor
cmp
pop
cmp
and
cld
div
cmp
jb
ret
(bad)
ror
les
retf
mov
mov
(bad)
aam
not
test
pop
xor
test
into
gs
cmp
xor
jnp
mov
cwde
mov
xor
rol
xor
mov
in
add
ja
push
jl
(bad)
cmp
test
mov
pop
int3
into
retf
shl
in
fadd
cmp
ins
jns
pop
xchg
xor
jnp
cmc
adc
test
outs
cld
inc
outs
mov
aaa
test
bound
test
add
bound
repnz
sahf
lods
enter
mov
inc
mov
cmp
adc
mov
test
into
mov
cmp
mov
jns
into
(bad)
iret
js
xor
clc
(bad)
into
retf
add
movd
mov
rcl
cmps
adc
gs
cmp
retf
(bad)
ror
les
adc
into
retf
xchg
enter
push
mov
xor
retf
cmp
or
xor
mov
lods
jns
into
arpl
xor
jns
into
retf
int3
retf
pop
adc
into
retf
test
adc
xor
retf
cmp
movzx
jnp
mov
popa
xchg
jae
adc
idiv
cwde
cmp
pop
push
cwde
adc
jns
into
mov
inc
push
and
mov
xchg
jns
into
gs
xor
xor
test
popa
fnstsw
aas
xor
jns
into
gs
(bad)
fdiv
push
mov
(bad)
cmp
test
mov
xchg
int3
into
retf
adc
arpl
xor
std
cmp
xor
or
(bad)
into
pop
cmp
xor
jnp
popa
mov
jnp
frndint
movs
cmp
retf
int3
retf
test
xor
test
xor
test
or
popa
(bad)
ret
pop
call
mov
jnp
icebp
inc
xchg
ins
fstp
cmp
mov
inc
or
fadd
pushf
fdiv
mov
leave
jp
into
gs
mov
leave
xor
mov
mov
jnp
mov
retf
mov
test
fnop
jb
into
mov
jnp
(bad)
retf
xchg
cmp
pop
rcl
add
fnstcw
mov
daa
mov
push
xor
jnp
jne
test
div
test
xor
jp
into
xor
xchg
cmp
mov
mov
inc
sub
cld
mov
jp
into
xor
mov
sbb
mov
mov
jnp
fnstcw
or
popa
mov
jnp
pop
xor
out
cmp
out
cmp
aam
xor
mov
sti
ds
cmp
xor
jnp
(bad)
xor
jae
mov
retf
into
adc
into
retf
fidiv
push
mov
(bad)
cmp
aam
mov
test
mov
xchg
std
mov
jns
into
xor
fadd
int
jnp
popa
pop
clc
shl
ins
jl
xor
inc
dec
sub
cmp
xor
test
into
xor
mov
or
out
lock
pop
xor
fcomp
xor
test
mov
adc
into
retf
cmp
retf
xor
test
xor
cmp
aam
fchs
movs
cmp
pop
test
fadd
cmp
aam
cmp
les
retf
inc
push
pop
sahf
lods
enter
mov
inc
shr
retf
mov
repnz
ss
sbb
into
retf
ficomp
cmp
mov
jnp
fld
cmp
arpl
xor
jl
neg
les
dec
sbb
xor
jnp
fldcw
xor
jnp
aaa
mov
inc
outs
outs
dec
stc
xor
mov
and
shl
and
xchg
je
or
cld
into
inc
mov
ret
adc
loop
fs
jnp
cmp
xor
rol
into
inc
xchg
shl
adc
loop
fs
or
jle
mov
movs
cmp
mov
jo
xchg
xor
pusha
js
loope
xor
xor
xor
pusha
jo
jne
lods
imul
mov
test
xor
cmc
or
mov
xor
mov
sub
aam
scas
pop
test
mov
mov
inc
cmp
sub
mov
inc
les
mov
jg
xor
imul
cdq
cmp
retf
ds
mov
adc
mov
ffree
xor
jp
jne
xor
cmp
outs
(bad)
mov
ins
sbb
xor
aam
xor
adc
pop
test
sub
or
cld
pop
retf
repz
fld
xor
test
mov
(bad)
leave
push
pusha
clc
not
mov
(bad)
int3
and
xor
test
bound
cmp
or
cld
xor
or
fcmovne
retf
xor
or
les
aad
les
add
ror
jnp
pop
pop
ins
jns
fnstsw
xor
mov
mov
repnz
les
call
(bad)
cmp
dec
sub
xor
ror
jnp
inc
cmp
xor
outs
pop
mov
mov
xor
jnp
jno
test
mov
cmp
xor
jnp
popa
mov
jnp
frstor
and
xor
xlat
les
pushf
sbb
xor
inc
dec
sub
xor
ror
jnp
inc
cmp
xor
jl
test
fidivr
outs
xchg
add
outs
cmp
xor
inc
outs
mov
xor
test
bound
mov
cmp
jecxz
leave
xor
mov
add
mov
arpl
aas
xor
test
mov
popf
cmp
ret
mov
pop
(bad)
into
mov
dec
les
mov
mov
pop
mov
fyl2xp1
jmp
xor
push
cmp
xor
jnp
cmp
icebp
outs
jns
pop
pop
shl
or
popa
fld
xor
jl
leave
mov
test
pop
test
pop
test
xor
rol
test
mov
pop
test
mov
retf
pop
sub
int
jnp
or
jnp
data16
xor
xor
cwde
cmp
mov
out
popa
xor
test
fisub
or
mov
mov
retf
outs
imul
repnz
or
aas
xor
mov
lahf
ins
add
cmp
retf
leave
add
mov
add
mov
cmp
test
(bad)
fnstsw
xor
sar
xor
mov
sbb
mov
fnstsw
xor
test
fld
jae
into
lea
xor
add
into
retf
pop
fldenv
xor
test
xor
jnp
mov
repnz
sub
or
popa
fst
and
xor
test
into
gs
(bad)
fdiv
push
mov
(bad)
cmp
test
mov
and
into
retf
adc
cmc
xchg
xor
cmp
xor
jnp
popa
mov
jnp
fld
xor
les
or
popa
frstor
(bad)
cmp
mov
cmp
pop
and
jae
or
popa
(bad)
and
xor
test
mov
retf
mov
jp
into
gs
ins
cs
jnp
mov
retf
cmp
cmp
out
cmp
aam
shr
test
mov
cwde
mov
sbb
mov
repnz
xor
jp
into
xor
cmp
mov
mov
inc
adc
cld
mov
jp
into
xor
or
test
(bad)
ror
les
retf
jnp
popa
frstor
into
retf
mov
jns
into
or
popa
pop
test
pop
movs
push
xor
push
xor
jnp
pop
xor
test
icebp
cmp
mov
xor
jns
into
fst
and
xor
or
(bad)
into
retf
fidiv
push
mov
(bad)
cmp
aam
pop
sub
mov
jg
into
xor
sub
xor
jnp
popa
pop
clc
shl
ins
adc
cmp
dec
sub
cmp
xor
test
into
xor
mov
or
ret
mov
pop
xor
mov
aas
xor
js
into
gs
jmp
test
mov
fist
xor
ins
jns
mov
jnp
fxch
in
(bad)
into
mov
aaa
or
jnp
xor
add
xor
jg
into
xlat
shl
icebp
mov
icebp
cmp
(bad)
xor
xor
mov
jg
into
gs
aam
xor
jns
into
gs
movs
enter
dec
inc
(bad)
into
mov
jl
test
scas
int3
retf
jnp
test
pop
out
jns
fstp
push
jecxz
(bad)
cmp
xor
xor
inc
dec
sbb
shl
ins
les
xor
jns
into
mov
add
inc
cmp
data16
movs
enter
test
into
mov
aaa
fisubr
movsx
fnsave
scas
int3
retf
cmps
idiv
mov
mov
mul
mov
xor
jl
div
add
xor
jns
into
gs
clc
sub
jl
neg
les
movs
and
xor
or
(bad)
into
retf
sub
jns
into
push
pusha
clc
test
ins
mov
mov
jl
leave
mov
rol
repnz
sar
test
mov
cmp
xor
or
and
cwde
and
xor
ins
or
xor
sahf
cmp
retf
mov
frstor
ret
xor
or
sub
int
out
cmp
mov
jno
out
cmp
ins
xor
xor
jnp
(bad)
pop
xor
je
idiv
ins
nop
es
xchg
cmp
mov
cmp
add
mov
(bad)
cld
inc
outs
mov
arpl
test
es
ret
xor
jl
inc
push
pop
ret
xor
mov
mov
xchg
dec
pop
retf
frndint
sahf
cmp
mov
rol
repnz
inc
pop
xor
test
inc
pop
test
and
sub
xor
add
sbb
shl
ins
dec
es
(bad)
cmp
add
xor
jl
leave
mov
test
pop
xor
les
mov
stos
(bad)
cmp
xchg
icebp
(bad)
into
mov
xor
sub
and
inc
mov
inc
cmp
test
cmp
xor
jl
imul
pusha
clc
not
bound
mov
cmp
mov
(bad)
push
mov
mov
xor
in
sub
test
fldcw
(bad)
into
mov
xor
cmc
lock
xor
test
pop
xor
aam
xor
cmps
cmp
push
pusha
clc
test
test
jo
pop
mov
stos
pop
xor
pusha
inc
jo
ins
in
aas
xor
rcr
fucom
and
xor
test
(bad)
mov
or
gs
ins
sub
test
mov
mov
xor
(bad)
shl
mov
test
xor
xchg
cmp
sbb
cmp
sbb
cmp
data16
xchg
nop
pop
mov
inc
mov
xor
mov
xor
jae
mov
retf
mov
adc
jae
mov
adc
inc
jns
retf
icebp
ja
mov
xor
int3
sub
addr16
test
fldcw
cmp
xor
jnp
pop
fld
and
xor
cmp
(bad)
retf
inc
xor
cmp
frstor
mov
mov
jae
into
gs
mov
outs
test
(bad)
ror
les
ret
mov
jnp
mov
test
inc
int3
or
std
mov
je
into
retf
xor
push
popf
ffree
cmp
or
mov
jnp
pop
test
jns
ffree
int
retf
sub
in
mov
and
xor
mov
in
popf
fnstenv
mov
leave
jl
into
gs
mov
xor
je
neg
mov
leave
jl
into
gs
addr16
jnp
cmc
sub
jnp
cmp
mov
add
add
cmp
icebp
xchg
xor
jnp
ds
cmp
xor
jnp
adc
add
xor
retf
or
popa
ffree
pop
into
retf
cmp
mov
iret
into
retf
cmp
test
add
(bad)
push
into
retf
ds
cmp
xor
jo
into
repz
int
jnp
xor
test
or
mov
rcl
pop
adc
jo
or
data16
and
stos
cmp
xor
jo
into
cmp
mov
mov
retf
mov
retf
arpl
test
mov
fs
xor
jnp
popa
mov
jnp
(bad)
cmp
fdivp
mov
into
jnp
cmp
retf
mov
test
xor
add
int
jnp
mov
dec
jp
xor
jnp
popa
pop
adc
jae
or
popa
fucom
and
xor
cmp
leave
retf
inc
sbb
sbb
xor
lahf
pop
pusha
mov
jle
lock
fwait
adc
mov
ret
add
add
xor
mov
retf
mov
jnp
cmp
leave
jl
into
gs
in
and
test
(bad)
ror
les
int
les
push
shl
or
popa
fst
xor
test
into
gs
fsub
xor
outs
js
xor
add
leave
retf
ftst
xchg
cmp
mov
inc
mov
leave
jl
into
gs
dec
fnstenv
mov
leave
jp
into
gs
mov
xor
(bad)
cmp
aam
scas
and
mov
jp
into
gs
adc
test
(bad)
ror
les
leave
jnp
mov
sub
js
into
retf
ins
ffree
cmp
aam
or
test
mov
xchg
push
xor
jnp
fstp
inc
mov
xor
rcl
jae
or
popa
frstor
(bad)
cmp
pop
test
xor
jnp
icebp
xor
rcl
mov
jnp
leave
cmp
cmp
xor
inc
jns
retf
icebp
ja
les
mov
in
jl
ja
mov
leave
jl
into
gs
mov
xor
add
cmp
aaa
jns
mov
jnp
fnstcw
xor
jnp
fstp
nop
cmp
mov
jnp
pop
mov
jnp
lea
js
into
retf
and
jnp
mov
js
into
retf
ds
(bad)
mov
into
ss
or
popa
pop
mov
mov
popa
fnstsw
jmp
mov
inc
mov
leave
jl
into
gs
clc
and
jo
into
mov
jnp
fld
scas
(bad)
mov
xor
and
jl
into
mov
cmp
xor
jl
into
gs
(bad)
(bad)
fldenv
(bad)
leave
retf
fld
cmp
mov
jnp
mov
retf
ss
rcr
test
mov
retf
xor
xor
leave
retf
sbb
out
cmp
ins
xchg
cmp
gs
pop
and
je
idiv
jnp
(bad)
retf
leave
retf
mov
jnp
mov
mov
mov
js
into
retf
leave
retf
xor
test
mov
sahf
adc
xor
inc
aas
xor
fisub
cmp
imul
cmp
mov
scas
icebp
ja
xor
adc
sti
jae
jnp
movs
cmc
(bad)
cmp
xor
out
cmp
in
in
jne
push
xor
shl
daa
test
popa
frstor
xor
test
rol
cmp
cmp
ins
dec
jecxz
push
pop
test
(bad)
ror
les
repnz
aas
xor
jp
into
gs
aad
lds
fnstcw
jl
leave
mov
add
xor
out
cmp
or
popa
fisttp
sub
xor
jl
pop
xor
shr
xor
or
gs
mov
sti
and
cmc
retf
jnp
mov
or
gs
mov
xor
xchg
cmp
mov
pushf
sub
xor
test
(bad)
mov
jnp
neg
mov
in
mov
aad
sar
icebp
mov
icebp
ja
inc
and
jae
mov
retf
fimul
in
cmp
ffree
cmp
jne
xor
cmp
mov
jle
retf
leave
sbb
mov
pop
push
fwait
jae
in
sbb
ja
push
sub
(bad)
cmp
test
mov
mov
call
push
repnz
add
cmp
rol
int
ret
mov
mov
(bad)
or
cmp
pop
(bad)
shl
test
mov
xor
xor
mov
in
popf
fnstenv
mov
int
(bad)
into
gs
pushf
and
inc
jns
cmp
(bad)
cmp
xor
sti
jae
rcl
lds
les
sub
cmp
cmp
jle
gs
cmp
aaa
test
mov
(bad)
aam
xor
mov
mov
jp
xor
adc
lods
inc
into
retf
int
xor
gs
cmp
aaa
test
mov
(bad)
aam
in
jnp
mov
nop
mov
add
mov
arpl
xor
inc
jns
cmp
(bad)
cmp
xor
sti
jae
out
aas
mov
aas
ins
jns
pop
mov
jae
in
cmp
xor
jnp
mov
nop
xor
inc
cmp
ret
mov
jp
into
mov
icebp
(bad)
pop
cdq
ins
jns
pop
adc
jo
in
mov
mov
jp
into
gs
push
cmc
sub
lock
addr16
mov
jae
in
fnstenv
push
xor
addr16
into
mov
sub
mov
(bad)
or
sti
jae
mov
adc
inc
jns
retf
icebp
ja
mov
xor
pusha
clc
not
mov
lea
xor
test
mov
mov
add
cmp
xor
inc
jns
retf
icebp
ja
mov
xor
add
(bad)
jnp
xor
je
neg
push
xor
cmp
push
xchg
cmp
mov
xor
cmc
mov
mov
out
adc
xor
test
into
gs
test
mov
jnp
fld
xchg
cmp
repz
mov
repz
popa
fst
xor
or
aad
retf
sar
test
mov
retf
pop
cmp
into
retf
mov
jb
into
bound
(bad)
into
bound
(bad)
into
bound
mov
mov
mov
outs
mov
xor
cli
retf
xor
cs
imul
cmp
jae
in
stos
mov
or
sti
jae
shl
or
jae
rcl
fcmovnb
cmp
retf
or
jb
into
bound
xchg
fstp
data16
sub
xor
or
les
ja
push
popa
fcmovnb
cmp
aam
or
cmp
aam
sti
cmp
xor
jp
into
bound
retf
ffreep
mov
rcr
retf
mov
retf
test
xor
ins
jns
pop
adc
xor
jnp
popa
mov
jnp
fstp
into
mov
push
mov
retf
loope
test
mov
retf
mov
mov
retf
and
add
xor
jnp
cmp
push
mov
(bad)
cmp
mov
inc
or
push
repnz
or
cmp
xor
cmp
mov
mov
(bad)
into
retf
pop
scas
ins
jns
pop
mov
in
popf
fnstenv
mov
leave
jp
into
gs
pop
and
jp
into
gs
retf
xor
mov
jnp
mov
pushf
mov
xor
mov
push
stc
xor
rol
ret
xor
out
cmp
in
rol
pop
test
out
test
popa
frstor
xor
test
rcl
ins
mov
dec
gs
inc
mov
xor
(bad)
cmp
xor
sti
jae
in
sbb
jne
push
mov
xchg
cmp
scas
cmp
retf
test
shl
cmp
xor
test
inc
lahf
cmp
test
retf
test
rcl
cmp
pop
xor
sub
pop
test
fstp
xor
test
mov
repnz
aas
sbb
xor
fld
xor
or
cmp
xor
ficomp
dec
or
clc
mov
mov
movs
cmc
(bad)
cmp
in
scas
icebp
ja
les
inc
jns
pop
cmp
xor
jnp
popa
pop
test
ret
aas
test
mov
imul
cmp
aam
mov
jp
into
gs
cld
cmp
pop
ret
into
cmp
cmp
xor
icebp
ret
fldcw
test
mov
(bad)
les
xor
xor
mov
pop
test
into
gs
ds
retf
inc
int
cmp
test
into
pop
lock
inc
jl
cmps
aas
test
mov
imul
xor
call
iret
iret
retf
je
out
cmp
inc
jl
pop
aas
test
pop
xor
scas
outs
int
jnp
leave
frstor
xor
xor
(bad)
shl
test
mov
retf
jnp
mov
sbb
xor
push
mov
leave
pop
shl
ins
js
xor
pushf
xor
xor
mov
mov
mov
add
mov
leave
pop
shl
inc
dec
out
mov
scas
icebp
ja
xor
adc
sti
jae
jnp
movs
cmc
(bad)
cmp
jne
pop
xor
pop
stc
xor
push
xor
cmp
loopne
cmp
mov
aaa
mov
mov
(bad)
movsx
jnp
mov
std
jnp
mov
test
inc
int3
or
xor
xor
std
jnp
mov
test
inc
int3
or
imul
ins
test
xor
or
std
jnp
mov
test
inc
int3
or
xor
clc
mov
test
mov
jne
pop
xor
pop
stc
xor
push
rol
cmp
mov
aaa
mov
jne
pop
xor
cmp
pop
mov
xor
sti
jae
or
std
jnp
mov
test
inc
int3
or
xor
sar
jo
cmp
mov
sub
jae
or
std
jnp
mov
test
inc
int3
or
xor
xor
std
jnp
mov
test
inc
int3
or
imul
ins
sar
cmp
mov
mov
retf
mov
jne
pop
xor
cmp
cmp
repz
jne
pop
xor
pop
stc
xor
push
xor
mov
xor
pop
repz
jne
pop
xor
cmp
cmp
repz
jne
pop
xor
pop
stc
xor
push
loope
(bad)
cmp
dec
mov
xor
imul
mov
jnp
mov
test
inc
int3
or
xor
shl
test
mov
sbb
in
lods
jecxz
test
mov
jnp
mov
test
inc
int3
or
xor
shr
cmp
xor
pop
repz
jne
pop
xor
cmp
div
ror
test
mov
sbb
xor
ins
hlt
cmp
mov
xor
icebp
ret
fld
cmp
mov
scas
icebp
ja
xor
adc
sti
jae
jnp
movs
cmc
(bad)
cmp
fcomip
repnz
or
aas
xor
and
outs
or
or
cmp
(bad)
xor
test
(bad)
cmp
pop
sbb
jae
out
cmp
test
fld
xor
xor
jnp
cmp
lock
cmp
mov
add
int
jnp
neg
nop
cmp
xor
jnp
fld
cmp
pop
test
dec
xor
mov
retf
pop
xor
mov
ins
push
ss
je
neg
cld
cmp
xor
test
pop
xor
out
int3
retf
into
add
jo
ins
sub
xor
mov
or
popa
fucom
ins
into
retf
and
xor
ja
cmp
mov
scas
icebp
ja
xor
ret
icebp
ja
mov
adc
into
xchg
adc
jae
jnp
movs
cmc
(bad)
cmp
mov
ror
or
cmp
(bad)
push
jbe
and
inc
shl
jge
sbb
or
mov
mov
jnp
rol
mov
sub
into
mov
js
into
xor
or
hlt
mov
xor
xor
mov
leave
pop
and
cmp
int3
fwait
adc
mov
or
or
js
into
mov
add
retf
mov
retf
inc
repz
mov
xor
add
xor
test
repz
int
jnp
div
mov
shl
idiv
jnp
pop
aad
jns
pop
jae
jae
or
popa
fucom
xor
xor
scas
ror
aam
mov
jns
into
gs
mov
xor
jg
into
gs
dec
xchg
jnp
rol
mov
sub
inc
mov
sbb
into
gs
aad
retf
cmc
sub
scas
ror
aam
stos
xor
mov
retf
pop
xor
loopne
xor
(bad)
cmp
arpl
pop
xor
jae
ins
aam
xor
sar
mov
test
dec
je
mov
fisttp
ds
sahf
les
mov
sbb
mov
pop
test
out
cmp
call
ror
push
push
cmp
jo
xor
je
div
shl
xor
cmp
repz
jle
gs
lock
inc
jns
adc
sub
dec
je
push
xor
push
xor
push
xor
test
mov
test
(bad)
xor
test
rol
cmp
ins
and
xor
(bad)
cmp
inc
jns
pop
test
(bad)
cmp
(bad)
ror
les
leave
jnp
popa
pop
xchg
xor
test
rol
cmp
lock
fnsave
cmp
xor
or
jns
pop
add
jo
ins
movs
xor
(bad)
cmp
aaa
jns
fst
xor
test
mov
xchg
xor
push
jl
(bad)
cmp
xor
fucomp
cmp
xor
test
xchg
(bad)
cmp
push
sbb
xor
je
neg
mov
xor
test
xchg
lods
or
fld
push
cmp
or
cmp
xor
test
cdq
cmc
(bad)
cmp
test
xor
jnp
pop
ret
bound
pop
jle
jae
in
cmp
xor
jnp
mov
movs
xor
inc
leave
push
cmp
jnp
fnstcw
rol
into
mov
scas
jg
test
into
gs
stos
mov
rol
cmp
or
fst
mov
rol
cmp
bound
pop
xchg
xor
jnp
cmc
sbb
pop
(bad)
aam
mov
mov
xor
cdq
cmc
(bad)
cmp
push
test
retf
xor
inc
jns
gs
fnstenv
inc
jmp
retf
fnstenv
push
rol
ins
jns
mov
jnp
fst
adc
mov
jp
into
gs
je
xor
test
pop
test
or
jnp
pop
inc
xor
pop
xchg
sbb
xor
test
add
xor
fst
xor
test
pop
inc
ss
pop
inc
sbb
xor
test
add
xor
(bad)
xor
or
cmp
out
cmp
sub
into
retf
icebp
ja
sar
cmp
repz
push
xor
(bad)
cmp
push
push
(bad)
into
mov
sbb
fcomip
repnz
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
rcl
and
cmp
inc
cmps
push
adc
xor
rol
cmc
lock
jb
add
inc
jle
sub
cmp
dec
xor
jl
inc
(bad)
outs
cmp
cmp
cmc
lock
movs
dec
ret
ror
xor
cmp
rcl
gs
push
fcmovne
jnp
clc
neg
mov
xor
test
xor
test
xor
add
adc
xor
mov
mov
jnp
into
mov
leave
lahf
ret
js
movq
adc
in
mov
cmp
jnp
adc
movs
test
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
xor
(bad)
cmp
.byte
