out
jmp
inc
add
push
dec
add
int3
test
push
mov
mov
push
call
add
mov
pop
ret
int3
push
push
mov
movsx
test
push
jge
inc
(bad)
(bad)
(bad)
dec
mov
and
neg
lea
sbb
inc
imul
add
mov
cdq
and
(bad)
(bad)
out
add
ret
sar
add
mov
imul
add
lea
sbb
and
mov
imul
sar
mov
shr
add
mov
cmp
(bad)
(bad)
mov
jl
add
mov
div
mov
pop
pop
inc
mov
mov
mov
stos
push
lea
test
or
fsincos
jmp
inc
mov
adc
sub
pop
sub
aaa
arpl
jbe
xor
dec
add
(bad)
xor
test
setne
cmp
sti
inc
in
(bad)
(bad)
aas
mov
test
je
call
test
je
mov
push
mov
call
pusha
scas
in
nop
aas
int3
stos
dec
add
(bad)
fdivr
inc
and
mov
push
mov
mov
mov
ret
dec
adc
mov
pop
pop
pop
jle
fstp
int3
mov
mov
clc
mov
mov
sti
lahf
pusha
sub
mov
lahf
sub
fbstp
fldlg2
ret
test
push
mov
(bad)
(bad)
jmp
mov
je
cmp
jb
test
mov
push
lea
jbe
push
mov
mov
shr
aas
xchg
dec
retf
add
movs
pop
push
test
mov
(bad)
mov
(bad)
out
inc
sbb
scas
mov
pop
pop
ret
xchg
sti
xchg
jle
or
ss
mov
mov
mov
pop
sub
neg
jmp
je
adc
adc
ja
mov
jae
ins
outs
pop
mov
jmp
sbb
out
cmp
jae
mov
cmp
mov
jne
push
add
push
fild
sub
push
mov
(bad)
mov
or
pop
mov
pop
call
test
je
(bad)
(bad)
inc
mov
mov
jb
mov
jmp
lea
cmp
lea
jb
mov
jmp
mov
gs
test
or
jb
mov
mov
push
cmp
ret
and
outs
adc
stos
jg
or
adc
lds
(bad)
stos
clc
test
jbe
mov
scas
stc
(bad)
sbb
pop
outs
adc
push
jp
out
out
(bad)
fisttp
retf
sub
add
push
add
push
add
push
jmp
sub
loope
or
add
and
add
add
ret
or
cmp
mov
jbe
clc
dec
sub
(bad)
jae
mov
push
mov
adc
xor
cmp
sbb
pop
neg
cmp
dec
and
test
je
cmp
jae
outs
clc
(bad)
push
mov
cmp
cmps
fiadd
test
mov
jge
jbe
adc
ret
test
jl
mov
mov
(bad)
rcr
jge
pop
arpl
mov
jb
mov
out
xor
xor
inc
mov
add
or
pop
and
dec
int3
push
mov
push
push
fs
(bad)
sti
xchg
mov
mov
push
push
mov
or
cmp
(bad)
(bad)
sti
(bad)
push
mov
mov
mov
jbe
mov
jmp
mov
mov
mul
mov
shr
rcr
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
sar
ja
lea
lea
push
mov
sbb
sub
rol
mov
jmp
push
mov
inc
(bad)
out
mov
dec
push
mov
sbb
mov
ret
mov
arpl
(bad)
call
push
or
jbe
iret
add
jne
jge
mov
sbb
ss
(bad)
std
sub
and
cmp
(bad)
mov
sti
adc
add
mov
fistp
pop
mov
mov
pop
mov
test
in
int3
dec
inc
or
push
add
xchg
jno
add
jnp
cmp
inc
adc
push
mov
sbb
cld
adc
shl
mov
dec
add
fwait
pop
inc
pop
and
enter
mov
popa
or
ret
ja
test
jbe
outs
adc
jmp
cmp
jbe
mov
push
outs
call
dec
adc
push
jle
idiv
add
test
jbe
fwait
sub
jne
cmp
rcr
out
outs
adc
push
out
fild
test
movsx
push
mov
mov
std
sbb
sti
mov
mov
add
gs
shl
data16
stos
xchg
jmp
pop
mov
jle
push
ins
fstp
push
int3
stc
add
popa
and
rol
push
pop
adc
mov
sbb
inc
leave
jne
sub
push
push
mov
xlat
jmp
(bad)
adc
sbb
sbb
adc
adc
lock
push
sti
fbstp
or
jnp
add
cmp
jbe
push
lods
fild
mov
ins
adc
sub
push
push
jns
clc
jp
add
std
adc
ds
xor
nop
or
inc
push
adc
push
sub
call
or
push
jnp
jmp
ds
ret
push
jle
adc
emms
pop
pop
aas
pop
or
cmp
xchg
dec
mov
mov
inc
pusha
adc
xlat
cmps
adc
sbb
je
test
add
jle
aaa
xor
cmp
dec
or
cs
push
push
mov
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
inc
mov
adc
retf
ffreep
int3
xor
and
push
or
enter
repnz
fmul
adc
fdivr
and
push
inc
adc
ret
ffree
lea
int3
int3
push
imul
(bad)
push
stos
mov
dec
add
scas
imul
lods
gs
jmp
je
movs
(bad)
(bad)
aas
fnstsw
xor
lea
mov
push
mov
mov
push
mov
mov
mov
lds
add
icebp
and
jns
add
push
and
call
mov
add
scas
icebp
xchg
push
xor
cmp
je
mov
push
call
mov
dec
enter
ds
mov
mov
adc
movs
pop
push
jmp
mov
mov
pop
loope
pop
pop
sbb
cmps
sub
push
push
cmps
out
inc
pop
add
push
pop
sbb
jnp
leave
les
(bad)
loope
or
add
push
and
sbb
or
pop
dec
outs
mul
push
push
and
div
or
int3
int3
outs
das
std
sbb
test
xor
xor
push
aaa
mov
add
ss
push
cmp
inc
jo
and
or
xchg
xor
cwde
add
push
push
mov
sub
int3
mov
loopne
pop
pop
(bad)
fwait
call
or
and
mov
push
ret
pop
mov
cmp
popa
imul
or
or
pop
or
adc
fimul
pop
fcomip
cmps
in
mov
sub
mov
shl
mov
mov
pop
(bad)
inc
dec
loopne
dec
or
or
push
in
in
rcl
mov
dec
call
cmp
outs
inc
sbb
clc
add
jge
cmp
clc
sbb
or
retf
add
jle
sub
cmp
jae
(bad)
in
adc
or
iret
cmp
mov
retf
shr
adc
or
das
fdiv
add
ja
cmpxchg
cs
adc
sub
cmp
mov
shl
push
mov
(bad)
mov
dec
add
push
adc
fcom
cmp
retf
repz
fmul
push
lea
push
mov
push
sti
push
fadd
adc
add
push
mov
iret
sar
fmul
push
jno
dec
add
test
fnstenv
clc
hlt
or
loopne
push
fcmovbe
cmp
add
shl
add
mov
or
dec
hlt
inc
ror
mov
out
mov
push
sbb
add
or
outs
xchg
sbb
mov
mov
sub
xor
iret
mov
jae
mov
shl
adc
push
push
add
push
push
stos
mov
mov
call
ror
cli
add
cli
push
push
mov
(bad)
add
cmp
popf
int
or
jle
test
test
daa
cld
dec
iret
fimul
mov
mov
push
mov
sub
push
push
imul
dec
push
fadd
ja
push
sub
ins
or
add
lea
popa
mov
aas
mov
shl
mov
js
mov
idiv
jge
fnstenv
or
inc
dec
dec
add
sahf
outs
mov
mov
sahf
addr16
mov
mov
repz
or
mov
bound
and
(bad)
shr
test
je
mov
cmp
jae
lds
mov
push
push
adc
sbb
xchg
add
add
mov
pop
xchg
add
(bad)
pusha
js
push
push
xor
fcom
rol
in
adc
cmp
mov
test
add
adc
(bad)
jg
adc
add
and
jae
cmp
je
push
mov
(bad)
jg
inc
or
push
jne
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jne
(bad)
mov
or
mov
mov
mov
stos
adc
and
mov
xlat
std
and
push
lea
adc
sahf
or
in
xlat
or
fdiv
pop
pop
pop
test
or
or
sbb
test
ja
or
push
lea
je
lock
jns
cmp
popa
mov
mov
xchg
jg
adc
add
inc
mov
mov
sub
push
mov
call
test
jl
mov
mov
dec
(bad)
call
or
adc
xor
inc
mov
mov
push
(bad)
out
push
push
fcomp
push
and
pop
push
push
test
inc
push
call
test
pop
setge
outs
sbb
rcl
je
push
add
or
mov
es
mov
bound
mov
mov
sub
sub
and
pop
(bad)
fcomip
mov
and
cwde
adc
mov
and
push
movzx
pop
push
fcomip
dec
add
lods
add
test
mov
jne
in
sbb
cmp
jg
inc
jne
dec
je
sub
je
sub
jne
add
push
mov
xor
call
adc
sub
les
inc
lea
mov
mov
mov
cmp
pushw
inc
dec
pop
add
fdiv
mov
and
pop
pop
das
icebp
in
xchg
cmp
and
fld
inc
sub
loopne
push
dec
test
setne
es
fimul
ror
test
push
and
cmp
add
adc
mov
add
addr16
lock
push
jmp
jo
cmp
jmp
jg
or
and
es
fld
or
pop
sbb
mov
mov
fstp
mov
(bad)
mov
js
dec
(bad)
cwde
mov
popa
(bad)
in
adc
or
ret
sbb
and
mov
popa
ret
das
sub
inc
inc
neg
hlt
add
adc
pop
adc
add
inc
and
mov
pop
mov
push
push
out
mov
jl
enter
shr
scas
loope
add
dec
or
or
jmp
shl
test
enter
enter
adc
cli
or
push
mov
mov
jmp
aas
bound
push
mov
lea
push
cmps
out
fbstp
dec
inc
and
mov
push
(bad)
(bad)
(bad)
call
xlat
mov
xor
xor
test
je
mov
test
jns
mov
test
je
test
je
mov
or
nop
push
add
fs
(bad)
inc
orps
push
push
push
push
call
pop
mov
aaa
dec
or
leave
adc
iret
push
nop
call
jo
sub
push
and
rol
add
sbb
ret
mov
push
sar
sar
sub
in
dec
mov
enter
mov
adc
fisttp
jne
(bad)
or
and
cwde
jmp
xor
outs
and
outs
sub
outs
sub
push
shl
inc
jge
shl
lea
pusha
add
or
adc
(bad)
aas
and
dec
sbb
div
fild
mov
mov
sub
cmp
jne
test
jne
mov
call
out
jmp
xor
mov
lea
mov
inc
icebp
iret
cmp
(bad)
(bad)
push
je
inc
cmp
jne
pop
pop
pop
xor
pop
ret
mov
xor
lea
mov
inc
test
out
stos
loope
adc
test
jle
jbe
xor
ins
and
mov
cmp
mov
mov
mov
inc
daa
lea
sub
mov
jl
dec
mov
sahf
int3
push
fadd
(bad)
shl
pop
push
dec
add
mov
mov
mov
push
ficomp
adc
mov
ja
popf
jne
mov
cmp
mov
adc
(bad)
push
push
clc
fdivrp
int3
pop
ins
je
push
push
or
pop
lock
lods
test
rcl
mov
inc
(bad)
rcl
sub
aad
pushf
(bad)
jecxz
sbb
adc
inc
pusha
mov
push
in
dec
test
jne
mov
push
jne
push
pusha
or
adc
in
push
call
and
jge
xor
out
(bad)
(bad)
jmp
cmp
mov
push
aam
fisub
call
call
lock
or
mov
sub
and
sti
cmp
mov
or
mov
mov
mov
and
or
jl
jl
add
aas
mov
adc
add
cmp
mov
cs
jmp
clc
daa
nop
push
mov
test
add
adc
cmp
and
test
adc
xor
or
cmp
sbb
rcr
aaa
dec
dec
push
push
lea
fucomp
scas
jmp
ins
ss
and
mov
je
aaa
not
cwde
mov
and
mov
and
push
xchg
push
mov
aaa
popf
jmp
xchg
push
xchg
and
cwde
call
ja
mov
test
je
push
sub
adc
mov
out
jle
sub
and
je
and
cmp
test
and
enter
cmp
or
int
inc
sbb
rol
retf
jne
mov
mov
cmp
call
repnz
and
int3
add
ja
lock
push
push
mov
in
push
push
push
push
or
mov
mov
lods
push
lock
aaa
and
push
xor
adc
lds
jmp
lock
push
inc
adc
push
scas
cmp
inc
mov
mov
mov
call
and
aas
(bad)
jg
mov
ret
jmp
retf
shr
add
cmp
(bad)
(bad)
and
mov
jg
mov
movzx
movzx
add
sbb
(bad)
jg
pop
adc
shr
movzx
movzx
add
sbb
adc
popa
fs
dec
dec
imul
and
les
frstor
add
mov
(bad)
fistp
jle
sbb
add
jmp
or
lea
xor
add
jge
aaa
and
mov
cmp
and
ja
mov
adc
sub
adc
ja
mov
or
jb
add
adc
add
inc
cmp
jl
xor
jle
ja
call
jb
cdq
xor
adc
out
cmp
inc
jbe
add
push
mov
rcr
and
(bad)
(bad)
fisttp
push
or
add
push
shl
push
add
mov
jae
and
mov
cmp
lea
jge
mov
sub
fld
or
cmp
jle
mov
cmp
pop
jle
mov
out
cmp
inc
mov
cmp
or
sub
and
mov
adc
je
add
mov
xor
mov
mov
or
add
sbb
mov
add
mov
lods
(bad)
out
call
or
cmp
scas
sti
jnp
lea
call
and
sbb
and
cmp
and
push
xor
mov
push
inc
mov
jg
jnp
and
push
popf
out
mov
movs
dec
inc
adc
push
xor
iret
ret
adc
and
pop
pop
pop
pop
add
js
dec
out
or
mov
jo
(bad)
aas
fadd
push
and
push
mov
call
sti
mov
mov
jmp
das
mov
jp
add
add
loop
sbb
dec
or
mov
mov
mov
xchg
add
add
shl
fs
mov
je
loopne
aaa
pushf
mov
xchg
sbb
out
wrpkru
movsx
or
icebp
pop
dec
pop
jl
or
or
call
adc
(bad)
(bad)
or
pop
dec
pop
mov
sbb
push
inc
iret
push
push
and
mov
push
dec
mov
inc
fs
sahf
jmp
lahf
add
ins
jae
daa
cmp
(bad)
jg
sub
push
push
popf
icebp
mov
in
sbb
call
push
or
lods
xchg
sbb
and
js
xchg
aas
not
jns
fstp
fmul
stos
adc
fldcw
xchg
xor
jmp
xor
add
shl
pop
push
call
push
call
enter
pusha
push
(bad)
push
push
xor
and
jne
daa
xchg
fiadd
push
push
and
cmp
in
and
mov
mov
xlat
push
mov
jo
cmps
sbb
aad
xchg
adc
xor
and
stc
int3
lods
mov
(bad)
frstor
mov
call
jb
and
test
shr
sub
push
scas
sbb
sar
pusha
push
shl
addr16
add
and
mov
jne
cwde
cmp
mov
mov
shl
push
neg
dec
push
call
sti
xor
mov
and
dec
and
push
push
jnp
arpl
cmp
je
pusha
aam
and
enter
out
sub
adc
rol
outs
inc
add
jnp
add
or
mov
aas
inc
not
mov
mov
cmc
mov
cli
je
into
in
jg
call
shl
pusha
dec
adc
push
add
xor
push
sti
inc
repnz
outs
sub
pop
push
push
push
inc
aas
sbb
or
sbb
mov
ret
mov
add
pop
rol
icebp
dec
sub
mov
xor
jns
xchg
push
push
ss
cld
lahf
mov
mov
push
shr
push
movzx
mov
jle
push
sbb
or
dec
add
xchg
xor
les
or
das
mov
mov
(bad)
jae
xor
mov
or
lods
int3
int3
jne
in
adc
sar
fsubr
cmp
outs
or
les
loop
es
jg
mov
push
inc
mov
mov
mov
call
aaa
push
jmp
dec
cdq
xor
xor
mov
jg
jmp
call
or
adc
and
outs
and
inc
aas
add
push
cmp
mov
mov
call
push
ret
jle
setne
retf
imul
outs
xchg
comiss
mov
sbb
inc
jb
adc
lods
adc
xchg
mov
outs
jnp
pusha
and
and
fcom
mov
xlat
call
mov
test
jne
jns
(bad)
(bad)
(bad)
call
lock
jmp
(bad)
rcl
jns
je
push
pop
inc
pusha
push
jl
inc
xor
sub
add
test
iret
int
lock
inc
and
inc
or
xchg
jo
dec
mov
add
outs
adc
fwait
jle
mov
dec
add
cmc
add
leave
hlt
jb
aad
adc
fwait
jne
rcl
nop
pop
mov
push
mov
fadd
cmp
mov
dec
lea
inc
int3
or
push
jmp
popf
rol
push
or
add
cmp
jmp
mov
jmp
adc
jo
call
clc
sbb
jo
mov
jae
jne
or
push
or
dec
lds
out
sub
pop
div
cmovp
sub
aas
add
rcpps
outs
sbb
and
jmp
pop
jno
jno
lds
xor
adc
cmp
ud0
push
pusha
aaa
lods
cmps
mov
rcl
inc
adc
adc
enter
adc
mov
and
adc
bound
mov
int3
jge
(bad)
mov
fimul
test
je
fisubr
xchg
push
mov
mov
push
push
out
or
mul
jne
or
gs
sar
push
sar
sub
push
mov
lock
push
call
mov
lds
int
in
sbb
xor
add
mov
es
or
enter
dec
xchg
imul
add
dec
inc
cli
add
ret
pop
add
das
push
and
mov
push
push
mov
mov
(bad)
(bad)
mov
sub
mov
mov
mov
mov
cmp
jne
mov
fld
push
or
mov
or
out
add
or
add
mov
mov
test
dec
xchg
je
mov
pop
adc
jge
call
jne
lea
lahf
xor
lahf
or
mov
std
aaa
add
xor
mov
lahf
cmp
mov
pop
adc
adc
ret
or
cmp
adc
gs
or
add
pop
lock
mov
std
ret
(bad)
jp
mov
push
mov
sbb
out
cmp
pop
ins
ror
pop
ret
mov
das
sbb
idiv
or
mov
cmp
retf
in
mov
pop
sbb
mov
je
lahf
jmp
push
mov
mov
rcr
mov
mov
pop
or
ror
je
arpl
out
xchg
std
mov
push
outs
adc
adc
je
mov
sbb
jbe
jne
gs
add
xor
sub
or
fild
ror
mov
fistp
mov
cmp
je
add
push
mov
mov
mov
add
jne
ja
pop
inc
mov
cmp
cmp
sub
sub
sub
cmp
xchg
ds
adc
dec
je
adc
push
xor
push
push
mov
out
add
push
add
adc
xor
call
out
cli
movs
retf
je
pop
outs
test
push
ins
(bad)
popf
and
or
test
jne
mov
ins
xlat
ja
sbb
add
adc
pop
(bad)
mov
jmp
mov
add
cmp
mov
jb
xor
arpl
adc
mov
div
mov
mov
enter
out
out
mov
or
push
adc
mov
and
pushf
adc
imul
sub
cmp
mov
shr
or
mov
adc
test
out
and
xor
xchg
fdivr
add
sub
mov
sub
mov
test
mov
leave
out
push
test
cmps
and
xlat
mov
push
call
sub
(bad)
mov
push
inc
lods
adc
cmp
jae
add
adc
sub
mov
cmp
and
aas
test
(bad)
call
pop
xor
pop
loop
clc
ret
(bad)
test
mov
outs
clc
xor
test
push
or
add
add
add
mov
add
add
test
or
mov
cmp
fsub
outs
test
mov
or
jmp
dec
push
add
je
(bad)
stc
es
mov
adc
add
push
and
test
imul
je
push
inc
sub
je
sbb
push
and
pop
or
dec
and
mov
sbb
push
sti
(bad)
pushf
add
jmp
test
lahf
add
test
or
in
(bad)
sbb
xor
das
adc
ins
and
pop
add
call
outs
sbb
mov
mov
call
push
mov
call
mov
jmp
dec
cmp
out
outs
jmp
and
add
add
mov
add
add
push
push
sti
jle
aam
and
fs
ins
and
adc
cmovge
lahf
sbb
fmul
or
mov
ins
cwde
cmp
push
mov
inc
mov
adc
push
push
push
push
sub
add
nop
jmp
add
xchg
mov
or
mov
stos
inc
js
or
sbb
fadd
push
jmp
sbb
adc
pop
ret
in
fldcw
cmp
pusha
xor
cmp
je
outs
fwait
test
nop
mov
je
rcr
ins
mov
xchg
pop
int
fs
push
call
mov
aaa
add
jl
dec
je
neg
mov
mov
mov
repz
mov
adc
xchg
in
dec
rcr
repz
sbb
push
push
lea
pop
mov
xchg
push
add
push
sbb
xchg
and
out
lds
add
xor
jle
retf
jmp
inc
js
je
ficom
xor
out
mov
mov
push
sbb
fsubr
push
call
cmps
adc
xor
push
dec
cmp
push
mov
push
and
ficom
push
push
jns
push
push
jp
jl
mov
jg
mov
xchg
in
lods
cmc
pusha
popa
sbb
mov
xchg
daa
sbb
fs
fisttp
cmp
jne
pop
dec
sbb
ret
push
cmp
xchg
sbb
sub
sub
rcl
inc
and
in
mov
cmp
rol
je
sbb
or
add
and
icebp
add
out
mov
popf
and
push
push
push
push
push
(bad)
or
sbb
mov
jne
stos
cs
pop
dec
(bad)
adc
aad
xor
inc
dec
(bad)
shr
add
cmp
inc
xchg
inc
push
pusha
cmp
ja
sbb
push
ins
push
push
dec
scas
add
jl
inc
sbb
push
inc
fs
xlat
inc
fs
ret
pop
add
js
sbb
(bad)
mov
push
jmp
mov
push
push
(bad)
aaa
cmp
push
jmp
push
mov
clc
add
inc
js
clc
fs
push
add
hlt
jecxz
mov
cmp
jge
mov
sbb
repz
(bad)
sbb
mov
sbb
pop
cld
clc
push
inc
js
dec
pusha
push
mov
loope
push
test
mov
pop
iret
hlt
int
adc
clc
dec
jge
nop
sub
xor
fnsave
or
int3
mov
push
add
push
and
loope
aas
push
dec
cwde
push
dec
add
xchg
lods
xor
add
mov
inc
jo
test
fisttp
call
dec
mov
add
stc
test
shr
mov
and
mov
jae
sti
cmps
jmp
pusha
pop
add
adc
adc
sub
jbe
jp
shr
mov
fimul
or
call
xsaves
adc
add
into
cmp
scas
push
enter
push
xchg
test
lods
sbb
or
add
mov
sub
nop
mov
add
jae
je
mov
data16
push
jp
push
mov
loope
push
xchg
(bad)
out
jne
les
and
aam
xor
xchg
shl
mov
aad
push
stos
jle
and
add
xchg
shl
push
int3
repnz
faddp
push
pop
into
call
cmp
pop
test
adc
add
int3
out
outs
clc
aam
mov
imul
push
adc
retf
sub
push
shr
add
push
cmp
mov
int
(bad)
retf
dec
int3
fcom
adc
mov
add
add
jae
xchg
rol
fsubr
fdivr
sub
push
mov
cld
mov
ins
ret
ror
(bad)
pop
sub
sbb
adc
jnp
adc
mov
dec
jae
aaa
sbb
adc
xor
ret
and
xor
ret
cmp
fmul
adc
mov
cld
cmp
(bad)
lods
out
das
push
leave
mov
xchg
pushf
adc
mov
and
adc
sbb
add
call
push
mov
or
ror
(bad)
imul
jnp
rcr
add
dec
ja
mov
jae
mov
mov
cmp
lea
adc
mov
sbb
mov
jmp
mov
lods
(bad)
jg
jp
lea
aas
mov
cmp
jne
test
mov
mov
sbb
(bad)
dec
mov
cmp
jne
add
add
dec
jne
enter
(bad)
std
jl
sbb
jb
inc
pop
pop
sub
pop
sar
jge
mov
cmp
sbb
or
out
out
loop
inc
data16
aad
test
outs
(bad)
call
sub
jmp
pop
mov
cmp
or
pop
push
les
pop
loopne
sbb
jg
cs
push
jg
jg
add
add
popa
or
sbb
(bad)
fbstp
inc
jl
adc
mov
mov
jne
mov
rcr
ss
fisttp
jae
mov
jae
ja
dec
and
je
pop
pop
rcr
lods
or
add
lock
pop
push
mov
sub
sub
cmp
mov
jp
xor
jne
and
adc
sub
cmp
bound
fwait
xchg
ret
fadd
inc
cmp
mov
jb
sbb
add
or
inc
int
add
ror
sbb
add
jbe
mov
mov
cmp
jne
add
mov
push
jmp
movzx
cmp
sbb
and
inc
jne
cmp
jae
cmc
and
pop
pop
ret
xor
cmp
setne
adc
nop
and
dec
aas
sbb
sar
shl
or
retf
fld
call
or
xchg
mov
jg
sub
mov
push
pusha
loopne
inc
mov
rol
fwait
aaa
xchg
imul
sar
xlat
mov
xor
xor
test
je
mov
test
jns
rol
lock
scas
(bad)
add
aas
sbb
repz
(bad)
mov
(bad)
movzx
mov
shr
movzx
lea
push
shl
xchg
push
dec
and
push
add
xor
call
add
in
and
sub
test
xor
fs
test
mov
push
push
je
xor
data16
add
mov
xchg
rep
stos
cmp
aad
push
add
mov
or
adc
push
adc
sub
adc
push
xchg
pop
pop
xor
add
add
add
lds
pushf
mov
mov
or
push
(bad)
aam
mov
push
adc
aad
add
or
inc
xchg
mov
hlt
xchg
lahf
neg
mov
add
cmp
cs
sahf
sbb
add
pop
xor
dec
ret
jp
dec
sti
ret
jp
sub
inc
push
call
add
push
sbb
jb
(bad)
sbb
loopne
push
and
jmp
push
mov
or
adc
xchg
or
inc
pop
sbb
adc
inc
out
push
add
push
mov
mov
ret
(bad)
mov
iret
dec
inc
and
cmp
pop
or
push
adc
fs
adc
lock
and
sbb
xchg
adc
mov
icebp
arpl
sbb
rol
push
xchg
adc
xor
add
jbe
jecxz
mov
pop
mov
push
pop
leave
jno
sbb
push
sbb
imul
lea
test
je
(bad)
das
or
pop
or
dec
mov
mov
inc
nop
out
in
push
aas
dec
dec
aaa
inc
or
adc
repz
pop
xor
je
jp
repnz
ret
ffreep
inc
push
call
mov
add
lea
jne
pop
lds
cmp
pop
pop
ret
or
sbb
or
bound
mov
push
scas
dec
sbb
jp
jmp
jne
(bad)
int3
jno
icebp
nop
out
mov
dec
or
jmp
lahf
or
mov
loopne
lea
lea
push
lea
cmc
test
cmp
add
mov
test
adc
sbb
add
add
nop
inc
jge
outs
push
push
pop
aam
pop
cmp
xor
dec
sbb
aas
or
push
call
outs
inc
or
or
sbb
mov
shl
mov
cmc
add
or
aam
test
call
or
das
mov
jg
mov
sti
data16
mov
mov
mov
xchg
hlt
or
ja
push
add
mov
shl
jge
add
pop
push
cmc
or
xor
rcl
sbb
fdivp
jno
push
mov
jg
hlt
pop
sub
push
mov
mov
push
cmp
(bad)
jg
fistp
jne
mov
cmp
jge
mov
jmp
mov
mov
sbb
out
loop
je
mov
cmp
test
je
mov
cmp
jl
pop
jg
or
pop
pop
mov
pop
pop
adc
and
mov
jmp
and
add
test
jae
push
out
sbb
jb
push
sahf
add
or
or
push
ror
push
hlt
cwde
jo
clc
pop
mov
neg
sbb
inc
int3
mov
fild
xor
pushf
xor
push
cmp
out
mov
ss
test
push
setne
(bad)
(bad)
(bad)
(bad)
jmp
test
je
and
jmp
or
push
cmp
push
push
xchg
cmp
nop
inc
mov
mov
push
xchg
rol
les
loopne
dec
sbb
cld
xlat
push
push
pop
adc
sub
cmp
mov
jbe
cmps
mov
out
push
xor
into
je
mov
call
lock
add
cmp
dec
dec
dec
sar
mov
push
push
call
mov
(bad)
out
sub
lock
push
mov
mov
sub
aaa
dec
ins
and
mov
push
push
push
mov
jae
inc
pop
jne
test
jns
and
jmp
push
(bad)
ss
adc
je
sbb
sub
das
push
or
fstp
or
sbb
jg
add
out
(bad)
sti
(bad)
jmp
push
leave
test
push
cmp
dec
add
add
push
mov
jp
push
push
push
push
jmp
sti
add
push
int3
das
sar
je
lock
rol
ins
mov
or
push
pusha
sti
outs
ret
and
addr16
pusha
pusha
push
jmp
push
xchg
and
add
imul
test
push
push
icebp
jecxz
pushf
pop
push
xor
test
jo
outs
aam
ss
int3
adc
add
push
mov
and
inc
push
pop
call
inc
std
mov
xchg
jecxz
std
add
push
jns
mov
vmptrld
leave
pop
pop
xor
xor
jbe
movq
cmps
into
inc
or
lds
mov
xor
pushf
je
ins
idiv
push
cs
or
jbe
(bad)
inc
mov
pushf
push
mov
lahf
(bad)
and
cld
xor
mov
push
push
push
adc
xor
dec
push
dec
add
add
mov
ins
shr
sbb
aad
dec
and
push
test
push
icebp
or
adc
xor
jo
mov
sub
pop
scas
sub
ja
fwait
add
inc
inc
add
push
ret
aam
and
mov
jmp
scas
outs
or
pop
inc
jg
mov
clc
addr16
adc
xor
mov
sar
mov
inc
push
or
cmp
jl
fild
mov
scas
shl
add
push
fmul
test
sub
pop
mov
pop
adc
inc
shl
adc
(bad)
mov
add
add
mov
ret
ja
inc
or
mov
test
sbb
mov
add
cmp
loope
sbb
jae
mov
add
mov
cmp
jg
fiadd
mov
dec
sbb
mov
add
cmp
das
test
jne
cmp
aas
clc
add
or
pop
pop
ds
shl
add
adc
inc
rol
(bad)
mov
mov
lea
mov
jnp
lea
aam
loop
das
cmp
add
add
daa
jnp
pop
test
mov
leave
sbb
aaa
inc
lea
add
add
jg
or
cmp
jbe
pop
jb
mov
mov
sub
push
sar
xor
xor
add
cmp
mov
rcl
imul
mov
add
out
sbb
jb
lock
inc
out
fnstsw
push
leave
or
add
lea
loop
test
adc
ror
pop
xor
adc
outs
add
and
jb
mov
mov
js
add
rol
sub
add
into
adc
mov
xor
fs
or
icebp
or
add
ret
aas
cmp
push
jp
cld
add
or
and
inc
add
and
push
(bad)
sbb
inc
ret
(bad)
pop
pop
pop
push
pop
sbb
adc
(bad)
mov
jnp
lea
lea
lea
and
and
jae
cmps
adc
cmp
mov
add
inc
dec
dec
shufps
xor
dec
push
add
mov
adc
push
sbb
mov
cmp
(bad)
aas
fld
movlps
lods
pop
add
pop
loopne
in
sub
popf
cmp
inc
nop
xchg
inc
add
xor
mov
push
clc
add
scas
sbb
movs
aas
add
xor
push
pop
or
outs
cmp
es
daa
or
cwde
and
inc
std
mov
mov
push
or
imul
in
and
jns
adc
sub
cmp
ja
adc
adc
inc
and
sbb
fdivr
mov
(bad)
and
sbb
inc
xor
loopne
arpl
pop
jb
add
mov
call
add
and
add
add
push
push
add
lahf
imul
push
xor
rcl
dec
cmp
rcl
dec
les
push
push
pop
mov
ret
add
adc
sbb
xchg
adc
or
(bad)
or
mov
test
(bad)
jg
ins
sti
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
sahf
mov
mov
gs
adc
jmp
and
out
loopne
inc
ja
cmp
push
xor
push
mov
je
dec
in
(bad)
and
mov
xchg
in
lea
cwde
sub
je
pop
adc
popa
or
sub
push
jg
aas
pop
cmc
ja
push
fs
push
push
push
push
mov
xchg
clc
leave
sbb
pop
or
lock
mov
jne
mov
hlt
(bad)
mov
mov
mov
jmp
mov
sub
mov
(bad)
jg
ja
cmp
jne
mov
jmp
mov
or
mov
mov
cmp
clc
(bad)
jp
add
mov
jne
imul
(bad)
(bad)
std
retf
mov
and
mov
mov
mov
mov
mov
mov
mov
jb
jmp
cmp
jne
mov
push
es
dec
idiv
pop
adc
dec
add
mov
add
dec
add
sbb
add
je
cmp
xor
and
add
dec
adc
leave
lea
je
xor
nop
jo
ret
mov
pusha
xchg
wbinvd
loopne
pop
repz
and
sbb
les
dec
aad
ret
mov
and
pusha
fdiv
sbb
sbb
jg
nop
call
jmp
push
mul
push
lock
push
jl
dec
mov
and
data16
add
push
xlat
mov
sbb
and
(bad)
cmp
std
pop
sub
mov
push
mov
mov
sbb
mov
ss
and
or
inc
and
sub
les
setg
and
pop
xor
pop
xlat
jge
xchg
mov
popa
add
adc
push
and
pop
lock
ror
xchg
jne
push
and
fiadd
adc
jg
add
adc
and
push
and
cmp
(bad)
mov
(bad)
aam
push
lods
cmp
cmps
sbb
sub
stos
inc
mov
popf
into
retf
cmc
adc
stc
and
jmp
pop
sub
scas
inc
and
mov
aaa
or
mov
adc
or
push
je
aam
fs
sub
out
bound
adc
sbb
adc
xchg
xlat
dec
and
mov
shr
adc
rol
push
and
jb
mov
sbb
jmp
xor
scas
xlat
sub
push
add
pop
dec
(bad)
add
inc
out
pop
ret
aas
add
mov
mul
aas
add
xchg
sub
jl
sub
pop
inc
int3
popf
pop
shl
pop
add
and
popa
push
add
das
jecxz
in
mov
adc
xor
(bad)
aas
sub
push
mov
mov
test
push
je
push
or
jbe
addr16
push
add
int
sbb
add
sub
pop
mov
inc
pop
ror
xor
pop
shr
or
push
mov
mov
adc
ja
pop
jnp
cmp
add
add
sbb
jne
add
arpl
mov
jl
cmp
mov
jne
mov
(bad)
(bad)
mov
add
inc
add
pop
add
add
or
push
jne
mov
jmp
(bad)
add
add
add
inc
and
jne
das
inc
(bad)
jmp
push
call
adc
dec
ins
pop
mov
and
cmp
jne
fnstsw
mov
mov
jmp
and
and
cmp
cli
adc
jmp
sub
jno
mov
mov
mov
stos
mov
dec
mov
pop
dec
add
push
pop
cmp
mov
push
(bad)
dec
or
add
push
adc
inc
adc
push
adc
inc
cld
and
ffreep
adc
cmp
jne
jns
jmp
cmp
jne
out
mov
jne
mov
sub
leave
jne
add
int
ja
rol
out
ret
sbb
jne
mov
cmp
jne
mov
cmp
je
pop
jne
or
xlat
add
xor
outs
out
jg
mov
mov
mov
mov
dec
and
adc
sbb
fldpi
js
adc
push
xchg
fstp
iret
sbb
and
push
mov
jbe
(bad)
cmp
mov
jne
cdq
jnp
xor
pop
pop
jnp
mov
jbe
mov
jp
jns
mov
and
mov
xchg
loopne
(bad)
pop
pop
jbe
dec
mov
psrld
push
pusha
mov
pop
mov
or
mov
(bad)
jo
scas
fs
rol
stc
mov
pop
test
mov
mov
jne
mov
push
or
xchg
rol
jmp
mov
adc
aam
cmp
je
push
(bad)
das
xor
mov
sbb
push
push
push
jge
lods
mov
sbb
mov
pop
cld
ja
popa
aas
imul
es
adc
or
push
mov
push
mov
fidiv
or
or
ss
adc
fwait
adc
add
add
xchg
inc
pop
push
out
push
jmp
je
cmp
jne
mov
mov
add
cmps
mov
mov
mov
add
adc
push
outs
push
cmp
je
mov
into
jne
pop
arpl
mov
sahf
or
dec
cmc
jmp
and
adc
fisttp
lahf
xor
out
mov
push
jb
adc
(bad)
in
repz
push
xor
add
pusha
xor
fist
xchg
mov
inc
push
repnz
push
out
sub
cmp
pusha
adc
push
add
icebp
mov
mov
push
pop
repnz
mov
leave
adc
sar
es
and
pop
cmp
jmp
mov
sub
sar
mov
cmp
mov
adc
fcomp
mov
add
cmp
jae
jmp
adc
push
xchg
or
cs
adc
jg
add
shl
push
adc
aaa
std
push
ficom
clc
(bad)
push
push
push
push
mov
(bad)
push
lock
mov
add
sbb
aad
fadd
xor
cmp
mov
dec
lock
or
add
out
or
cmp
fdiv
adc
add
fadd
add
lea
mov
push
and
cwde
shr
adc
mov
xor
(bad)
jmp
enter
stc
add
retf
lea
inc
add
jae
add
push
pop
add
adc
aam
aas
xlat
lea
push
popa
sub
push
mov
stos
loopne
mov
cmp
pop
adc
sub
std
fmul
repz
add
aas
stos
sub
les
push
mov
sub
cld
fdivrp
push
jecxz
sbb
pop
inc
adc
das
ss
cdq
out
mov
add
push
(bad)
sub
pushf
sub
sub
add
pop
push
cmp
sub
and
cmp
pop
dec
mov
rol
mov
rcl
xchg
fisubr
lods
or
xchg
pop
pop
jp
aad
xchg
mov
pop
cmp
dec
mov
push
adc
cmc
mov
shr
add
inc
sub
leave
enter
pop
mov
shl
pop
jp
push
pop
sub
in
clc
xor
add
jmp
dec
(bad)
or
adc
div
xor
(bad)
and
retf
pop
adc
mov
icebp
adc
inc
div
pop
mov
mov
ja
je
adc
fidiv
outs
sub
sub
xor
add
inc
mov
je
add
mov
pop
in
mov
outs
sub
xor
mov
xor
std
(bad)
push
stc
jne
mov
nop
cmp
je
mov
cmp
mov
je
push
push
arpl
mov
(bad)
(bad)
call
mov
add
jmp
mov
mov
adc
ret
adc
jbe
sbb
icebp
scas
clc
or
cs
hlt
pop
jl
push
ins
mov
dec
ret
mov
cmp
inc
fidivr
mov
and
push
mov
outs
push
xor
push
ficomp
sbb
inc
add
or
jl
jnp
retf
ins
jbe
daa
or
daa
push
push
lea
sbb
dec
ror
push
mov
pop
add
mov
test
das
mov
jne
lea
jle
sbb
fsubr
push
or
mov
add
mov
sti
inc
mov
loopne
jb
mov
push
xchg
pop
stos
push
call
sar
psadbw
(bad)
cmp
cmp
ja
shl
retf
and
outs
pop
cmp
(bad)
push
pop
xchg
or
std
jg
cmp
je
push
popf
add
or
loopne
mov
ins
lods
fs
adc
push
jg
jmp
add
add
int3
neg
push
outs
int3
mov
test
sbb
movs
add
mov
rcl
daa
push
push
popa
xor
mov
push
jmp
addr16
mov
sbb
dec
(bad)
jae
rcr
sbb
mov
dec
inc
adc
jg
adc
push
mov
sub
jns
push
push
inc
mov
cmp
ftst
mov
jbe
fs
push
jae
push
cmp
add
inc
or
lahf
mov
leave
and
add
pop
ror
jae
and
nop
or
inc
cmp
push
sahf
clc
call
pop
and
cmc
xor
and
push
ja
jmp
push
xor
bound
xor
scas
bound
cdq
and
add
sub
adc
xchg
je
cmp
sbb
and
push
dec
cmp
jb
out
test
jo
mov
fnsave
cmp
test
pop
jnp
out
jl
xor
sbb
int3
jb
xchg
jl
pop
or
push
ss
add
add
cmp
jne
cmp
into
add
mov
out
cdq
mov
cmp
sub
std
in
mov
mov
jae
lea
and
lea
dec
xor
xor
add
ja
stos
push
xchg
cmc
add
lods
xor
add
push
dec
cmp
and
mov
jae
lea
adc
lea
mov
dec
push
inc
and
call
lods
jb
out
ja
push
inc
or
fmul
adc
cdq
or
inc
(bad)
enter
sbb
inc
cmp
ds
lock
mov
cmp
cmp
idiv
and
adc
scas
addr16
nop
adc
or
pop
mov
mov
push
and
mov
xor
and
push
inc
lahf
jo
pop
pop
arpl
or
adc
mov
push
lods
loope
add
xor
push
call
and
dec
enter
je
xor
scas
jae
sbb
in
cmp
sbb
sahf
xor
jb
ss
addr16
popf
add
push
xchg
sbb
push
ds
outs
icebp
xor
push
sbb
aaa
movs
push
test
adc
call
dec
sti
push
pop
nop
mov
rcl
and
mov
fistp
jo
mov
mov
mov
sbb
dec
mov
mov
jae
ins
mov
ret
ins
or
out
mov
push
shl
call
cld
sbb
push
push
push
push
push
adc
popf
mov
je
sti
popa
fdivr
push
xchg
pop
adc
adc
add
out
call
je
aas
push
push
out
loopne
cmp
je
adc
adc
push
push
push
js
sub
call
push
xor
cmp
out
mov
mov
out
push
push
push
xor
push
push
call
add
mov
mov
sbb
popf
cmp
xchg
in
push
shl
add
mov
pop
pop
sub
push
js
int
mov
clc
outs
pop
out
pop
leave
sahf
or
fisttp
je
or
sbb
sub
aam
ret
sbb
add
pusha
pusha
cmp
xchg
mov
popa
daa
addr16
dec
and
pop
aam
outs
mov
fdiv
xor
dec
jae
pop
mov
jno
adc
add
xlat
push
cmp
and
or
sbb
pop
push
push
and
mov
sub
adc
inc
ins
push
scas
sub
les
imul
(bad)
fist
(bad)
rol
jle
pop
mov
xor
xchg
jne
pop
cld
mov
jmp
pop
loope
xor
(bad)
shl
sbb
rol
icebp
(bad)
cmp
sub
mov
fisubr
xor
push
xor
fcmovb
push
sub
sbb
data16
sbb
and
adc
div
add
cmp
cmp
daa
or
jmp
and
je
push
js
xchg
inc
pop
or
inc
aas
mov
jl
sub
cmp
xor
test
sbb
and
icebp
xchg
popa
xor
jmp
cmp
add
push
iret
icebp
push
aam
adc
add
sub
or
cmp
std
mov
inc
and
pop
mov
je
xor
and
mov
adc
or
add
add
mov
mov
inc
mov
and
call
outs
cmp
sbb
push
call
mov
and
fmul
mov
stos
(bad)
ficom
push
xor
cli
dec
and
push
call
and
pop
cli
loope
mov
inc
and
lods
cmp
cmp
dec
cmp
add
outs
and
dec
aas
cmp
and
test
addr16
jno
lahf
fs
and
pop
sub
dec
and
sbb
push
js
scas
sti
mov
fimul
push
and
pusha
fadd
out
jl
and
xchg
pop
in
adc
inc
pop
cmp
add
mov
cmp
pusha
out
fwait
jns
aaa
lods
push
test
jnp
sbb
pop
push
int3
mov
push
or
cmps
and
movs
or
mov
or
(bad)
int
(bad)
aas
out
adc
pop
sbb
add
shl
pop
pop
dec
and
add
or
add
jo
js
and
pop
aam
ficom
fcom
adc
or
sbb
xor
imul
hlt
aas
stc
xor
sub
mov
(bad)
sahf
pushf
loope
pop
adc
in
je
jo
pop
adc
sub
and
cmps
repz
xchg
sub
sub
lock
push
inc
push
inc
sub
push
sub
(bad)
rcl
mov
dec
push
mov
rcr
fs
pusha
out
sub
and
mov
outs
movs
and
inc
sub
(bad)
xor
dec
and
inc
(bad)
cmp
and
rcr
je
jle
pop
pop
sbb
jecxz
pop
sub
push
and
in
dec
xchg
jl
add
pop
pop
dec
add
in
jo
or
rcl
inc
scas
std
inc
add
sub
les
push
rcl
or
mov
cmp
or
aad
or
jo
aaa
mov
cmp
aas
add
loop
ins
mov
scas
(bad)
and
sub
push
cmp
xor
push
mov
dec
mov
aas
push
and
sbb
pop
ror
xor
lahf
mov
pop
cmp
add
retf
add
xor
fstp
xchg
mov
iret
pop
add
js
mov
lea
fwait
pushf
adc
mov
pop
stos
daa
idiv
add
adc
gs
dec
cmp
es
enter
inc
push
mov
push
push
test
sbb
das
and
test
sti
xchg
mov
std
sbb
and
or
inc
ins
fcom
ss
and
ins
xchg
push
adc
and
shr
sti
or
cmp
and
and
inc
pop
add
pop
scas
push
xchg
sbb
dec
pop
inc
daa
mov
xchg
push
and
lds
and
clc
mov
inc
inc
ins
adc
push
sub
pop
xchg
dec
out
sbb
js
push
add
mov
out
adc
into
push
sub
xor
inc
movs
or
test
in
sbb
adc
inc
int3
nop
sahf
sbb
mov
xchg
push
mov
or
and
nop
ror
das
shr
mov
or
cmc
test
das
or
loopne
and
fstp
in
and
das
xchg
and
inc
ror
(bad)
adc
sbb
mov
pusha
bound
test
rol
call
nop
jle
jb
call
cwde
dec
or
xor
test
add
mov
fsub
mov
dec
and
sub
mov
rcl
das
fs
pusha
pop
push
dec
push
cmps
js
push
mov
jbe
push
push
pop
xchg
mov
and
imul
sbb
sub
jl
jl
sbb
frstor
push
mov
cdq
jp
cwde
jae
in
sub
mov
and
push
and
pop
or
cmp
jnp
pop
lea
imul
test
adc
xchg
jecxz
call
mov
pop
inc
push
add
xor
cmp
and
jns
adc
jl
les
pop
pop
pushf
mov
and
sub
jb
and
mov
jg
sbb
out
sbb
adc
dec
and
jns
sbb
adc
or
iret
pushf
jg
and
aaa
and
loopne
pop
je
jg
pop
call
pop
sub
xor
jg
add
or
pop
mov
out
jo
jg
push
sbb
xor
adc
or
aaa
jb
jl
jg
sahf
pop
push
fs
mov
jo
jae
jg
xor
iret
rcl
or
jg
cdq
xchg
jno
and
div
mov
sbb
dec
loopne
cmp
dec
jg
sbb
add
inc
jg
int3
lock
mov
jae
ror
dec
add
push
and
xlat
and
test
push
icebp
pop
sub
adc
fadd
jp
dec
pop
inc
(bad)
fist
jo
loope
jg
ja
loopne
lods
xor
daa
and
add
jg
inc
sbb
xor
dec
rol
cmp
mov
shr
xchg
jg
jnp
sbb
jg
out
das
jnp
push
add
pop
or
add
mov
pop
mov
add
push
sbb
jg
jno
ret
pop
or
xchg
jg
jno
les
cmp
or
shl
dec
(bad)
xor
and
jle
add
jo
sti
test
jne
mov
push
lods
loop
sbb
sbb
adc
sahf
sbb
push
or
shl
jo
(bad)
rol
fwait
mov
sub
pusha
out
clc
gs
fadd
add
retf
push
mov
cmp
mov
adc
or
pop
sahf
mov
push
pop
out
mov
dec
sbb
mov
mov
gs
sub
mov
or
push
bound
ret
loopne
aad
dec
retf
mov
fdiv
and
lock
add
sahf
lock
daa
inc
in
shl
and
xor
ret
(bad)
jmp
add
mov
jb
aam
mov
and
and
mov
retf
inc
dec
je
je
pusha
jo
out
je
icebp
push
and
cdq
jnp
push
imul
and
inc
jnp
xchg
test
inc
mov
ret
xchg
js
fst
and
jp
and
and
adc
(bad)
out
rol
jp
push
das
test
and
test
dec
aaa
mov
aad
neg
sub
and
and
or
iret
shl
and
daa
sub
daa
dec
or
inc
xchg
dec
cwde
dec
push
xchg
inc
mov
inc
push
cmp
mov
or
nop
and
xor
jo
emms
push
and
adc
inc
popa
adc
jo
aas
jle
std
dec
adc
xchg
gs
inc
arpl
mov
dec
xchg
lds
scas
ds
push
and
pop
call
loop
inc
pop
cmp
mov
adc
inc
push
add
dec
cmps
test
inc
cmp
in
sub
pusha
push
out
mov
loop
rcl
pop
lods
retf
jg
outs
test
sub
es
and
shr
fisttp
test
test
add
push
test
and
lds
das
imul
mov
in
aaa
mov
in
les
aad
test
sub
bound
push
inc
lds
inc
and
push
sbb
or
mov
xchg
pop
pop
dec
and
lods
fidiv
inc
test
inc
ret
in
mov
(bad)
push
popf
jo
dec
sub
fmul
outs
nop
mov
pop
xor
or
xor
dec
lock
sbb
jb
scas
mul
ins
mov
and
mov
ins
pop
ror
jb
adc
and
pusha
add
mov
adc
lock
sub
xchg
dec
adc
rcl
pop
das
push
and
ret
add
jp
inc
adc
jmp
inc
pop
xor
int3
inc
dec
and
out
adc
adc
pushf
mov
mov
ins
int
lock
sbb
ins
pusha
lock
xor
push
add
jge
cwde
or
pushf
or
mov
int
adc
add
mov
ror
daa
and
retf
cmp
js
retf
clc
loop
jbe
jl
fadd
and
shr
pop
push
cwde
out
inc
stos
add
sbb
inc
and
mov
mov
push
xor
je
je
pop
dec
jo
stos
and
fwait
dec
int3
fstp
or
sbb
stos
dec
cmp
xchg
and
mov
fdiv
sbb
add
xor
jae
push
sbb
loop
pop
imul
pop
cmp
pop
sub
and
xor
pop
out
adc
inc
add
inc
jo
aaa
ret
dec
sub
jl
rcr
mov
pop
sub
mov
xchg
dec
and
int3
out
push
mov
ret
pushf
cmp
pop
add
test
inc
xor
adc
and
fs
ins
push
adc
or
and
das
js
ins
ret
das
mov
sub
pop
cmp
(bad)
into
adc
or
int3
mov
lock
stos
rcl
push
mov
sub
pusha
cmp
xchg
retf
cmp
call
xor
loope
call
js
and
mov
sahf
cmps
jo
pop
or
dec
dec
jo
sahf
clc
rcr
mov
jae
sub
add
mul
jp
push
mov
xor
sub
outs
jge
ret
jnp
xchg
jb
addr16
out
aas
jp
mov
and
push
mov
jmp
je
dec
repnz
(bad)
sub
push
mov
sbb
sbb
mov
pop
xchg
pusha
cwde
mov
int
cmc
or
adc
mov
sub
or
out
mov
dec
(bad)
or
(bad)
or
mov
scas
sbb
fadd
xchg
dec
subps
jo
add
test
add
mov
pop
das
push
and
jl
adc
pop
xor
pop
icebp
andnps
xor
mov
loopne
sar
mov
mov
pop
and
mov
and
jg
rol
pop
and
stos
mov
ret
add
adc
push
sub
(bad)
adc
jmp
ret
mov
add
xor
lock
xchg
add
pop
bound
test
push
lock
or
pop
ror
fnstsw
dec
stos
ss
mov
xor
daa
movs
inc
ins
and
adc
xchg
cmps
xchg
sbb
inc
and
loopne
or
xor
je
sub
lods
xor
je
inc
xor
pop
mov
and
pop
and
sbb
or
out
daa
add
inc
out
out
jl
sub
and
or
pop
cmp
cs
xchg
inc
out
push
sub
add
out
adc
test
shr
outs
and
or
add
and
sbb
in
or
rcr
and
pusha
test
cmp
adc
and
out
test
sub
and
cmp
jo
fldenv
sbb
inc
scas
dec
popa
pop
mov
das
and
scas
sbb
and
xor
ret
scas
mov
and
scas
xchg
loopne
or
xchg
mov
add
or
test
test
mov
add
jmp
and
push
lea
push
push
push
call
es
add
jg
(bad)
pop
mov
mov
and
cmp
jl
(bad)
sbb
ins
test
or
xor
mov
lods
imul
adc
and
xchg
jl
adc
stos
les
xchg
add
(bad)
and
sbb
lock
push
mov
push
mov
mov
scas
je
test
jle
test
pushf
fcom
xor
jo
loopne
sub
add
arpl
inc
enter
xor
push
loopne
sub
xor
pop
xor
movs
cmp
xor
sub
mov
jo
sub
lds
jl
fmul
or
adc
pushf
int
and
mov
sbb
xchg
mov
test
xor
push
cwde
mov
mov
sub
adc
jo
cmp
add
mov
and
daa
adc
inc
and
mov
test
add
gs
and
mov
add
sbb
mov
mov
inc
xchg
add
mov
and
lds
ins
or
mov
mul
mov
sub
mov
movs
xchg
mov
add
sub
mov
xor
add
mov
or
and
mov
or
xchg
mov
and
and
ins
xchg
dec
adc
and
mov
arpl
or
and
add
mov
test
dec
mov
or
ret
push
push
jl
dec
and
mov
inc
mov
dec
pusha
sub
and
or
ins
and
shl
mov
pop
popw
push
add
nop
in
inc
sbb
gs
mov
push
nop
out
mov
clc
add
adc
call
sbb
push
push
pop
mov
in
fistp
fadd
je
push
or
sbb
lock
lds
cmp
xchg
das
call
add
jne
bound
pop
inc
mov
sbb
or
lods
add
xchg
retf
mov
push
jo
adc
inc
nop
mov
push
or
xchg
ret
mov
adc
mov
in
inc
xor
in
inc
sbb
adc
add
jno
pusha
xor
jp
cdq
adc
sub
jo
sub
movs
inc
add
pop
adc
push
rep
jo
mov
push
and
xor
mov
int
dec
pop
push
hlt
inc
ds
jne
dec
out
add
clc
ret
jmp
leave
jnp
and
fadd
sbb
add
or
or
(bad)
push
cmp
and
(bad)
into
inc
xchg
frstor
ss
jo
or
add
dec
pop
push
fst
dec
aas
or
pop
mov
loop
jae
iret
push
push
jbe
inc
mov
add
pop
jb
loopne
jmp
push
inc
cs
mov
push
sub
jmp
fadd
sti
mov
or
inc
sbb
add
dec
adc
inc
fdiv
and
outs
or
movs
(bad)
mov
jmp
push
xor
mov
jb
sbb
adc
and
into
adc
in
and
mov
sbb
add
enter
push
mov
pop
fmul
adc
loope
push
mov
xchg
fwait
scas
xchg
add
xlat
js
and
adc
fs
pusha
push
retf
jo
in
mov
adc
das
jmp
push
xor
dec
adc
imul
scas
call
cdq
jb
jno
add
add
xchg
adc
cmps
sbb
dec
mov
fdivr
or
popf
adc
pushf
sbb
test
sub
loop
mov
pusha
cdq
xchg
lea
call
ins
mov
and
mov
hlt
cmp
xchg
retf
js
add
xor
push
mov
inc
adc
xchg
mov
push
jno
adc
std
adc
lea
or
adc
inc
or
push
mov
mov
sbb
(bad)
push
push
or
add
ret
push
clc
fdiv
fucom
ins
mov
push
inc
sbb
inc
add
add
out
add
or
ror
ror
mov
or
push
inc
jne
daa
and
or
cmp
cmp
add
sub
inc
mov
add
adc
or
dec
je
pop
jmp
mov
and
or
pop
mov
(bad)
pop
mov
cmp
jne
lahf
retf
xor
inc
push
or
arpl
inc
add
mov
inc
iret
pop
adc
add
sub
lock
jmp
inc
sub
push
sub
inc
sub
inc
sub
add
ret
jne
adc
call
push
js
je
lea
cmp
jne
jmp
inc
or
jne
dec
out
dec
inc
sub
add
jl
cmp
loop
mov
mov
sbb
sub
or
aas
sti
or
je
pop
jne
mov
mov
push
mov
xchg
xor
and
push
sub
pop
sub
inc
or
cmp
jmp
adc
gs
cs
xor
adc
ins
mov
push
mov
(bad)
inc
(bad)
jmp
pop
push
cs
ss
jge
dec
jl
pop
adc
mov
cmp
dec
cld
mov
push
xchg
test
cmp
and
dec
jne
push
mov
mov
mov
mov
retf
pop
pop
scas
mov
in
or
and
mov
cmp
pop
sub
in
in
or
shl
dec
stc
or
sbb
outs
add
(bad)
leave
push
push
icebp
pop
aad
pop
dec
lods
loopne
les
ret
sbb
stc
mov
mov
push
add
cld
call
fst
daa
mov
cmp
jae
xchg
ins
sbb
push
aaa
pop
pop
cmp
fdiv
int3
inc
cmc
aaa
push
mov
cmp
jae
or
gs
or
push
call
movs
dec
(bad)
fwait
mov
or
cmp
mov
mov
out
(bad)
ds
mov
je
inc
mov
lods
inc
push
xchg
mov
xchg
xor
push
add
push
and
add
je
cmp
or
dec
cdq
sti
bound
lahf
inc
push
sbb
adc
adc
ret
daa
adc
or
adc
push
mov
cmp
lds
loopne
dec
test
sub
dec
or
xor
repnz
push
dec
dec
test
mov
pop
outs
sub
es
test
mov
enter
add
cmp
cs
and
sub
xchg
cld
call
mov
mov
mov
mov
mov
dec
xor
dec
fsub
dec
add
dec
sbb
fs
mov
dec
dec
dec
dec
(bad)
cdq
cmp
fmul
mov
mov
pop
dec
cld
ror
es
jmp
scas
pop
gs
fmul
cmp
dec
dec
jne
dec
popa
ins
mov
jl
pusha
xchg
std
push
or
push
jl
(bad)
fsubr
jnp
mov
cmp
mov
test
dec
jbe
jne
and
dec
adc
jae
and
mov
lds
pop
and
jb
in
add
mov
lock
lock
jne
mov
inc
icebp
jne
test
xor
mov
mov
mov
push
mov
(bad)
or
or
mov
push
push
fwait
inc
adc
jp
mov
cmp
ret
mov
pop
push
data16
adc
or
jb
dec
xchg
and
(bad)
pop
push
sbb
jb
lods
add
fnstsw
xchg
and
mov
xchg
repnz
or
inc
dec
sub
stc
cmps
mov
iret
das
mov
mov
mov
mov
mov
fwait
mov
push
or
push
lea
adc
outs
mov
push
sbb
dec
out
inc
add
jecxz
add
in
or
int3
lahf
popa
pop
repnz
adc
or
pop
int3
cmp
pop
mov
sahf
pop
adc
mov
push
ss
pop
clc
sbb
add
inc
mov
iret
cmp
mov
or
inc
leave
div
(bad)
mov
rol
cdq
and
push
jb
add
mov
push
and
mov
add
idiv
std
out
jae
mov
push
mov
ds
mov
mov
out
jp
fstp
shl
mov
push
cmp
icebp
mov
xchg
add
add
test
ja
in
xchg
je
call
ror
mov
arpl
jge
push
add
add
fs
add
push
mov
inc
or
fdiv
into
xchg
enter
jl
ins
adc
push
push
call
sbb
adc
call
add
add
adc
mov
push
or
inc
rcr
jmp
cmp
je
lea
push
je
mov
aas
push
jo
rol
xor
sbb
and
ror
add
push
add
call
sub
mov
push
dec
adc
(bad)
sub
out
je
in
test
jl
sub
test
lahf
sti
es
cmp
fucomip
xchg
fist
fstp
xor
cmp
jl
cmp
retf
sub
jne
jbe
cmp
mov
and
pop
mov
push
add
std
cmp
je
jne
mov
fist
cld
pop
dec
xor
cmp
enter
push
call
xchg
xchg
cmp
jne
cmp
in
push
add
mov
(bad)
jle
mov
inc
and
je
scas
adc
xchg
(bad)
cmp
test
and
cmp
cmp
test
sahf
dec
je
ja
mov
movsx
shr
imul
mov
pusha
inc
rcr
(bad)
scas
xchg
adc
add
and
jg
and
jmp
sahf
push
sub
add
mov
sub
ins
and
push
mov
add
push
add
push
push
xor
sbb
lahf
xor
push
mov
std
(bad)
inc
test
jmp
mov
jne
push
or
cmp
je
out
cmp
(bad)
pop
(bad)
and
cmp
cld
push
add
je
push
fs
pusha
aas
mov
out
and
lea
mov
sti
dec
and
mov
sbb
xchg
fmul
clc
in
mov
(bad)
mov
pop
adc
and
jbe
and
push
aas
pusha
push
jl
xchg
mov
sbb
mov
add
adc
ret
cmp
push
sar
adc
jno
test
arpl
inc
js
or
cmps
fs
push
and
sub
sub
fsub
pop
mov
mov
push
push
ins
scas
cwde
movs
(bad)
dec
inc
inc
ins
jecxz
mov
je
fisttp
xor
push
icebp
test
jmp
cmp
inc
sbb
fdiv
dec
mov
push
pextrw
push
in
in
inc
xor
mov
fstp
lods
jne
sbb
movzx
mov
shr
cmc
sbb
adc
pop
cmps
push
rol
pop
jp
inc
sbb
sbb
shl
loopne
outs
je
add
push
mov
xchg
test
mov
mov
ja
mov
push
les
scas
test
pop
pop
dec
cld
rcr
sbb
les
adc
adc
jae
(bad)
(bad)
dec
adc
sub
mov
mov
std
add
mov
aaa
mov
or
lds
scas
loop
inc
push
and
rcl
ja
adc
lea
rcl
loop
jg
ja
and
cmp
pop
push
fwait
call
sub
xchg
(bad)
push
dec
add
mov
push
push
push
jmp
mov
push
scas
jmp
inc
sbb
and
cld
mov
shr
loopne
mov
call
(bad)
lock
or
or
inc
pusha
pop
mov
fisubr
pop
pop
jnp
adc
icebp
and
inc
mov
shl
loop
fcomp
add
fmul
pop
sbb
sub
add
jo
aas
push
bound
push
int3
sub
push
push
push
and
add
cld
mov
outs
fadd
push
loopne
lea
nop
add
cmp
movs
je
sbb
mov
push
adc
call
or
adc
mov
test
jne
jecxz
aas
or
dec
pusha
mov
arpl
xor
call
adc
and
add
(bad)
stc
adc
sbb
adc
adc
sub
loop
and
add
pop
aaa
sub
mov
mov
sub
push
arpl
jge
add
mov
lahf
cmp
sbb
cmp
dec
push
pop
push
cs
cmp
jae
mov
xchg
mov
jno
loop
push
aam
push
mov
xor
rcl
jecxz
or
inc
sbb
int3
jg
stos
inc
and
add
ror
mov
rcl
push
and
inc
(bad)
and
add
pop
dec
sub
add
enter
fisub
inc
dec
iret
or
or
inc
fst
pop
adc
adc
inc
enter
inc
dec
mov
outs
push
inc
jb
scas
pop
add
sub
add
xor
and
pop
sub
sub
shr
mov
inc
add
pop
sub
scas
or
inc
outs
and
or
sub
pop
mov
inc
rcl
push
scas
sub
lods
inc
enter
std
(bad)
clc
add
mov
inc
mov
mov
test
sbb
jne
jne
xor
adc
dec
mov
lea
push
mov
(bad)
(bad)
daa
cmp
test
mov
mov
mov
je
mov
mov
push
inc
add
sbb
lea
dec
or
ja
push
or
or
hlt
mov
cmp
add
mov
rol
lods
adc
push
inc
inc
inc
add
arpl
mov
cmovs
pop
in
dec
dec
mov
(bad)
or
enter
or
and
jl
cmovs
fsub
jecxz
push
xor
dec
pop
movs
nop
or
add
and
adc
push
add
pop
ins
add
adc
add
or
mov
shr
or
repnz
int3
mov
pop
enter
or
ja
ror
push
add
fcom
mov
pop
jo
inc
mov
sub
test
push
mov
jne
push
push
adc
jbe
mov
leave
(bad)
out
jbe
xchg
inc
sub
sar
cmp
jae
inc
jmp
mov
adc
sbb
call
cmp
cmc
test
jl
test
je
and
cmp
jae
cwde
cwde
inc
push
dec
push
add
dec
adc
and
adc
adc
push
sub
adc
mov
xchg
mov
ret
add
retf
add
ja
adc
add
shl
sbb
ret
pusha
push
push
push
jle
sbb
pop
pop
pop
dec
add
js
and
add
xor
mov
push
push
xrelease
add
pop
stos
and
call
jo
aaa
or
int3
cmp
mov
adc
ins
push
ja
push
lea
or
sub
ins
test
sbb
jb
pop
aam
retf
sbb
or
mov
push
mov
call
pop
adc
and
lock
pushf
add
cmp
call
jge
std
dec
xor
je
mov
dec
mov
mov
and
fwait
clc
test
rcl
cmp
and
ret
sub
sar
dec
shl
sbb
in
jbe
jo
sbb
add
xor
add
(bad)
(bad)
cmp
jmp
mov
mov
push
cld
mov
fmul
fwait
mov
mov
add
sti
loope
jne
int3
jne
and
retf
dec
mov
(bad)
scas
push
pop
inc
push
call
cmp
sub
adc
and
xlat
push
pop
mov
pop
or
mov
aas
jne
mov
mov
cmp
je
mov
cdq
(bad)
es
cdq
jne
fwait
cmp
pop
push
call
je
lea
(bad)
mov
mov
call
jg
mov
mov
mov
retf
je
mov
leave
aas
popa
(bad)
jle
je
mov
push
jmp
mov
out
and
add
cli
or
or
jne
test
jno
dec
add
or
push
cmp
pop
je
dec
icebp
cs
stc
push
mov
pop
pop
sub
cmc
sbb
les
adc
test
push
inc
ret
mov
mov
rcr
fisttp
or
test
jo
fbld
das
mov
jb
jle
add
mov
push
rol
pop
das
add
add
(bad)
fist
gs
inc
add
dec
dec
test
jne
mov
mov
mov
clc
dec
test
jne
pop
adc
add
scas
add
mov
mov
scas
repz
push
je
pop
dec
pop
(bad)
out
adc
adc
pop
mov
or
call
mov
loop
or
imul
adc
mov
fcos
(bad)
(bad)
(bad)
mov
dec
sub
mov
cmp
inc
and
jne
cmp
mov
(bad)
dec
mov
jb
mov
jmp
lea
push
push
mov
push
push
or
inc
pushf
rol
jmp
mov
cld
(bad)
jmp
je
test
mov
mov
je
mov
cmp
jne
push
push
push
push
lahf
xor
push
adc
push
sbb
fnstenv
pop
add
jne
mov
push
(bad)
sbb
sbb
mov
lea
jg
scas
cmp
xor
push
mov
push
push
sbb
jge
mov
cmp
push
mov
sub
stos
pop
adc
jmp
add
sbb
pop
mov
pop
pop
adc
sub
mov
out
pushf
shr
jge
adc
adc
add
pushf
dec
dec
sub
out
jge
pushf
test
adc
out
scas
adc
mov
push
push
movs
xor
lods
mov
jg
xchg
loop
push
push
lea
mov
mov
rol
jge
mov
or
mov
cmp
mov
pusha
inc
adc
fidivr
retf
sbb
retf
pop
mov
mov
mov
add
test
sub
jmp
adc
mov
sub
sub
hlt
aas
dec
adc
sub
cmp
push
fldcw
xchg
pop
test
aaa
add
in
psubd
cmp
jae
inc
shl
xor
mov
add
enter
fcomi
sbb
mov
add
imul
push
mov
xlat
outs
sub
push
or
(bad)
cmp
loope
pop
int3
mov
push
push
push
push
push
mov
push
in
ss
adc
(bad)
rcl
push
mov
adc
hlt
cmp
enter
push
mov
push
adc
push
mov
mov
inc
inc
shl
xor
add
fstp
mov
arpl
loope
ja
int
pop
ins
aam
inc
sar
and
adc
dec
les
sbb
retf
add
push
add
or
add
retf
enter
rol
ror
xchg
bound
jnp
push
pop
or
shr
ror
add
xchg
cmp
call
mov
enter
mov
push
push
in
clc
push
add
push
push
mov
ret
mov
or
retf
lea
push
inc
jmp
push
jmp
mov
sub
stos
loop
jmp
push
rcl
jmp
cmp
les
pop
mov
outs
push
push
or
rcl
add
lock
fisub
mov
sub
xchg
in
(bad)
mov
les
mul
push
push
movs
lods
popf
add
push
std
cmp
pusha
xor
scas
xchg
rcl
sub
jo
loope
push
mov
xor
pop
and
(bad)
push
in
inc
mov
or
xchg
cmp
in
mov
pop
jg
sub
add
push
mov
mov
ja
mov
and
mov
mov
ror
inc
(bad)
das
fsubr
fild
(bad)
push
push
push
clc
push
add
lea
add
cmp
push
xor
sbb
scas
sub
pop
xor
aaa
push
xor
loopne
sub
xlat
sbb
dec
xor
test
or
jne
mov
jmp
cmp
jne
fild
fsub
fild
fmul
mov
and
dec
jb
fbstp
xor
mov
mov
inc
test
je
or
mov
or
or
mov
or
call
inc
cmp
or
add
add
dec
cmp
jne
repnz
test
add
cmp
add
sub
repnz
or
jmp
cmp
adc
jmp
cmp
jne
arpl
sti
lahf
dec
and
mov
mov
dec
adc
and
outs
call
mov
jne
cmp
or
inc
dec
cdq
adc
and
in
mov
or
mov
inc
addr16
jg
je
or
sbb
(bad)
out
pop
sub
dec
add
les
add
add
mov
cli
inc
inc
add
test
mov
sub
add
or
dec
js
pop
stc
(bad)
out
sti
fmul
push
add
or
add
add
jae
sete
mov
(bad)
(bad)
call
cmp
sete
mov
test
jne
mov
test
jne
mov
mov
(bad)
icebp
fst
or
dec
push
mov
xor
cli
push
bound
xor
add
push
add
es
mov
mov
int
push
add
or
mov
pop
test
inc
add
push
inc
and
xor
(bad)
fild
jbe
jne
sub
outs
mov
inc
je
xor
cmp
fistp
xlat
push
mov
jg
and
jmp
inc
cmp
jp
jne
cmp
jne
xor
jmp
mov
scas
call
mov
mov
hlt
(bad)
fwait
dec
cmp
retf
mov
mov
fsub
add
pop
ret
mov
mov
jne
and
and
push
lods
add
and
adc
push
push
push
push
push
fiadd
aaa
cmp
int
je
cs
add
cmp
pushf
dec
pusha
loop
loop
adc
fs
and
add
adc
stos
(bad)
sbb
and
mov
mov
sub
push
sub
mov
iret
adc
adc
int
inc
mov
push
loope
jne
mov
iret
call
sub
cli
push
(bad)
test
ja
cld
add
inc
fdivr
push
adc
and
rcr
lea
mov
nop
xlat
es
add
or
lea
mov
push
mov
js
ret
push
add
sub
push
and
sub
dec
push
xchg
es
mov
scas
add
push
cmp
jp
int3
stos
arpl
sub
mov
enter
lock
ins
mov
adc
adc
fsub
and
test
lea
and
inc
sbb
mov
test
add
popf
or
mov
mov
test
mov
daa
add
je
inc
aas
inc
fbld
mov
adc
dec
push
sbb
sbb
fdiv
les
std
pop
push
addr16
push
movzx
ins
inc
xlat
inc
jne
and
je
sub
jl
ds
inc
shl
inc
and
add
cmp
add
inc
sbb
sub
mov
push
and
add
cmp
jo
mov
loope
push
loop
out
(bad)
fadd
or
(bad)
push
dec
jge
push
pusha
mov
inc
push
push
xchg
cmp
bound
inc
shr
and
je
lods
and
push
dec
int3
xchg
inc
adc
or
sbb
out
cmp
sbb
stos
mov
adc
je
gs
push
cmp
enter
cmp
fwait
mov
and
mov
into
xchg
test
dec
and
xchg
into
mov
js
or
shl
xor
and
mov
mov
add
pop
push
je
add
inc
mov
dec
loopne
inc
push
inc
adc
adc
adc
(bad)
xor
clc
(bad)
mov
fcom
js
bound
add
add
aad
jb
or
add
dec
retf
jae
and
iret
or
push
ds
fdiv
not
mov
in
cmp
dec
and
push
enter
adc
or
and
sbb
mov
push
cwde
xchg
dec
cmps
cmp
mov
sub
sbb
or
fcomp
sar
jne
adc
dec
mov
je
into
xor
sub
das
outs
movs
es
sub
inc
xor
je
cmp
jne
addr16
push
das
mov
aam
push
xor
ss
adc
cmp
add
std
pop
adc
cmp
es
test
inc
jb
outs
add
mov
sti
pop
add
sub
leave
cmp
js
xchg
test
and
test
cmp
je
rcl
je
pop
lahf
adc
pop
mov
add
pop
pop
jne
sbb
or
ret
mov
std
(bad)
or
shr
or
sbb
fld
push
(bad)
xchg
lea
mov
add
stos
mov
adc
adc
int3
sub
pop
(bad)
(bad)
xor
test
push
(bad)
dec
add
jl
adc
xchg
add
mov
stos
je
ficom
or
dec
mov
mov
jne
lea
pop
(bad)
mov
test
pop
loope
mov
pop
neg
inc
cmp
jne
mov
add
xchg
mov
pop
dec
or
mov
push
lea
icebp
add
mov
cmp
push
mov
push
lea
push
jg
pop
mov
or
leave
mov
je
out
shl
push
pop
mov
(bad)
push
out
mov
gs
push
popa
dec
mov
add
jmp
outs
add
adc
jo
or
enter
jb
push
push
cmp
cmp
mov
mov
bound
push
xor
cmp
scas
dec
cld
and
adc
out
and
dec
je
jne
xor
lea
jo
xchg
(bad)
loop
or
jno
cmps
lea
pusha
dec
inc
aas
jle
inc
and
jnp
adc
jge
dec
ins
push
xchg
mov
xchg
inc
loop
data16
or
loope
push
mov
xor
inc
aas
pop
aas
dec
fdiv
mov
test
pop
aas
inc
or
adc
ret
aas
mov
(bad)
out
push
jno
add
div
dec
or
into
inc
inc
or
ins
in
mov
adc
add
imul
pop
mov
and
scas
mov
add
iret
in
mov
ja
xchg
push
in
adc
bound
and
iret
pop
mov
mov
nop
or
outs
jl
jb
sbb
pop
das
mov
adc
jmp
daa
sub
sub
mov
lock
push
enter
or
fiadd
mov
mov
ret
loope
cli
std
add
push
mov
ss
mov
mov
fwait
mov
out
aaa
cmp
jb
mov
dec
ss
mov
mov
mov
or
sti
cmp
mov
sbb
push
cld
pushf
sub
cmp
pop
vmovaps
cld
pushf
stos
loop
sahf
sbb
sbb
scas
cmp
sub
adc
sahf
pop
sub
fwait
sbb
or
test
push
sub
jp
sbb
sbb
mov
mov
or
push
aam
mov
lea
bound
xor
xchg
jge
rol
sbb
sbb
push
nop
sub
gs
clc
daa
cmp
add
in
mov
mov
jmp
jno
mov
pop
lods
adc
into
add
inc
jo
or
jle
xchg
mov
punpckhbw
call
mov
cs
jmp
cld
mov
cmp
je
nop
out
(bad)
push
pop
cmps
or
or
popa
push
das
ret
and
popf
xor
in
adc
icebp
test
test
mov
cmc
ret
movs
push
aas
sub
xchg
pop
inc
je
sbb
adc
add
sbb
push
push
mov
aam
mov
call
dec
inc
ja
mov
or
dec
sbb
jne
inc
jmp
mov
push
xchg
pop
stos
jno
jno
and
dec
scas
cmp
adc
dec
jl
add
sub
call
xchg
sbb
cmps
jmp
or
xor
js
je
add
add
mov
mov
or
jns
or
aad
int3
js
movs
add
or
ins
and
xlat
inc
add
hlt
jg
and
mov
jmp
lock
push
cmp
mov
inc
push
loopne
add
sbb
mov
ret
inc
pop
dec
movs
cmp
imul
and
lock
cmp
cmp
mov
mov
mov
je
pop
adc
and
xchg
pop
sbb
(bad)
(bad)
mov
cmp
xor
jmp
je
and
and
bnd
and
xchg
mov
or
rcl
dec
js
aad
inc
and
adc
add
inc
inc
gs
and
call
data16
and
mov
and
jo
pusha
je
out
dec
stos
push
(bad)
movs
mov
xor
push
mov
adc
jne
xor
cmp
cmc
xchg
add
mov
mov
adc
xor
lea
add
and
ret
test
add
inc
in
jle
sub
inc
and
push
push
push
data16
push
aam
add
mov
jb
xor
cmp
ret
xlat
xor
addr16
loope
or
sahf
and
lock
hlt
js
call
(bad)
add
enter
add
inc
ins
xor
inc
sar
ret
je
mov
cmp
jae
push
nop
in
or
or
push
fidiv
ret
mov
(bad)
sbb
mov
and
jo
pop
or
jbe
in
xor
jecxz
push
add
into
sbb
dec
fs
add
sub
inc
mov
pop
xchg
test
xor
cmp
cmp
inc
push
je
mov
pop
call
mov
pushf
xor
mov
jae
and
or
xchg
adc
mov
push
add
or
xor
push
push
push
cdq
push
mov
inc
add
jne
std
xor
cmp
je
xchg
jb
aam
and
movs
sbb
aas
adc
call
pop
sbb
xor
mov
and
sbb
inc
mov
popf
sub
sbb
adc
stos
ja
int3
pop
mov
fwait
sub
sbb
xor
cwde
movs
cli
lea
pop
pop
mov
cmp
(bad)
cmp
add
inc
dec
add
pop
aas
call
or
mov
sbb
push
in
das
add
dec
mov
add
dec
dec
xor
cmp
rcr
popa
dec
xor
mov
cmp
(bad)
inc
add
pop
dec
je
cmp
je
mov
cmp
nop
xor
or
lea
sbb
sbb
cmp
adc
push
je
inc
cmp
clc
inc
aad
dec
mov
push
and
adc
into
or
inc
leave
or
aad
jl
mov
gs
les
dec
pop
jl
cwde
in
xchg
push
push
test
adc
addr16
add
pop
push
xchg
add
imul
sbb
jmp
(bad)
dec
or
addr16
jle
cmp
mov
adc
push
push
push
jg
loop
aas
test
mov
mov
arpl
mov
push
push
out
je
push
adc
iret
mov
xor
xchg
inc
xchg
popa
jg
push
sub
and
inc
xlat
adc
stc
add
fistp
fisttp
inc
pop
mov
mov
mov
mov
lock
jmp
je
mov
mov
mov
mov
mov
loopne
pop
or
dec
mov
sbb
sahf
(bad)
ret
xchg
mov
clc
les
xor
sahf
test
mov
bound
mov
sub
add
in
lea
or
mov
lahf
sub
sbb
cmp
inc
mov
mov
or
mov
js
jae
(bad)
in
in
pop
and
push
mov
pop
(bad)
imul
pop
aad
sahf
nop
mov
ror
mov
add
mov
inc
or
inc
jo
loop
or
xchg
add
popa
outs
mov
mov
adc
sahf
dec
dec
adc
or
aaa
mov
mov
add
sbb
fisttp
adc
adc
cdq
add
add
jne
push
enter
inc
push
mov
sbb
daa
adc
pop
jge
mov
cmp
mov
test
ret
sahf
fsubr
push
lock
gs
sbb
mov
push
aad
dec
mov
push
push
fwait
sub
jmp
xchg
mov
mov
retf
dec
call
aaa
fwait
add
mov
cli
dec
ror
(bad)
lods
ss
cmp
out
sub
mov
lahf
mov
call
sub
xor
push
jno
test
push
std
fwait
(bad)
sbb
and
dec
add
and
xlat
les
cmp
cmp
inc
xor
cmp
mov
xor
jg
into
xor
rcl
or
add
test
shl
leave
push
icebp
push
icebp
cmp
add
shr
mov
pop
sub
loop
gs
ja
push
out
imul
mov
sub
xor
dec
xchg
add
jnp
into
add
add
out
adc
cmp
loop
cmc
js
daa
into
push
mov
jns
int3
add
add
and
lahf
mov
add
mov
lea
inc
adc
es
shl
jge
loop
pop
pushf
push
xor
jae
pusha
pushf
add
pop
dec
ficomp
inc
int3
push
mov
(bad)
pop
out
outs
fldenv
ss
pusha
mov
or
pop
or
jnp
pusha
mov
xor
add
xor
and
and
inc
pop
adc
iret
inc
js
outs
cmp
cmp
and
jmp
iret
adc
loope
push
pop
aaa
or
daa
mov
and
mov
mov
je
xchg
add
not
sbb
inc
inc
add
outs
ret
out
pshufw
pop
inc
mov
mov
adc
xlat
inc
jp
dec
out
add
pop
sti
pop
or
or
loopne
movs
sbb
icebp
sub
stos
cmp
int3
icebp
and
jl
jg
push
add
pop
adc
gs
scas
lods
pop
sub
call
fld
nop
pop
out
mov
sbb
lods
sbb
out
mov
and
(bad)
add
je
fld
and
cli
js
push
rcl
rcl
add
add
jmp
fisub
(bad)
pushf
or
and
cs
add
addr16
add
int3
popf
shr
xor
neg
cs
add
mov
add
call
rol
inc
pusha
mov
cmp
jo
adc
fstp
loopne
loope
cmps
out
cmp
pop
pop
and
add
push
mov
cmp
sbb
mov
sbb
xor
test
enter
or
add
cli
je
fs
jb
mov
push
push
push
bound
cmp
add
inc
push
icebp
(bad)
out
and
xor
and
cmp
push
dec
and
push
sar
call
fldcw
xchg
loope
and
and
iret
push
dec
jb
push
and
cmp
fs
adc
call
(bad)
(bad)
(bad)
jmp
rsm
pop
out
fisubr
push
lea
scas
aad
xlat
jl
mov
or
adc
cld
mov
jg
jmp
add
push
push
push
or
adc
sub
or
mov
jmp
cmp
add
je
pop
sub
lods
jmp
fs
fs
lahf
js
call
sub
and
lea
push
lea
push
fcomip
out
cdq
sbb
jl
sbb
inc
mov
jmp
jno
call
sub
push
dec
mov
es
jg
sbb
lea
cmp
stos
retf
inc
add
push
into
push
add
inc
or
push
mov
push
and
pop
mov
dec
xor
dec
sbb
push
and
mov
hlt
out
dec
fdivr
inc
and
inc
mov
movs
inc
mov
call
inc
dec
mov
mov
mov
sub
and
push
xor
add
pmuludq
and
push
cmp
mov
adc
mov
mov
jmp
push
shl
mov
and
ret
call
or
mov
inc
or
or
ret
cmp
mov
lock
xor
push
addr16
dec
jo
js
or
mov
sbb
sbb
adc
and
sbb
xor
sub
es
sbb
and
push
push
dec
retf
xor
add
and
adc
pusha
shl
mov
push
push
and
ret
lods
aas
loopne
push
inc
push
mov
add
retf
mov
push
push
xchg
or
and
mov
ret
mov
lock
rcl
push
sbb
pop
mov
or
cmps
jmp
push
aaa
mov
mov
pusha
mov
mov
push
ret
sub
inc
xor
shl
in
popf
and
pusha
xchg
dec
sbb
adc
or
call
loope
mov
ins
mov
cmp
mov
neg
lea
add
sbb
add
push
and
fsubr
pop
jmp
push
call
inc
enter
pop
idiv
mov
xor
test
sete
pop
push
int
and
add
das
fs
outs
mov
or
xor
adc
mov
daa
cwde
test
cmp
adc
adc
fs
mov
add
mov
retf
in
lahf
add
cli
mov
mov
add
icebp
mov
mov
jl
pop
adc
mov
mov
xchg
cmc
xor
jmp
mov
xchg
mov
ficom
push
arpl
pop
cmp
ja
sbb
lea
cmp
ja
sbb
mov
inc
add
and
nop
push
push
or
test
rcl
adc
pop
add
sub
push
(bad)
xchg
add
je
mov
std
test
je
int
push
es
cld
cmp
dec
or
add
call
bndldx
jb
cmp
cli
and
dec
push
mov
cmp
and
cmp
jge
bswap
pop
and
pop
add
jae
(bad)
ds
mov
stos
test
je
gs
jnp
push
push
cs
fwait
gs
jle
or
cli
push
jmp
lock
push
ja
loope
call
inc
hlt
neg
ja
push
push
or
call
sbb
sti
sahf
or
jnp
out
mov
inc
repnz
movs
shl
jmp
jmp
test
jne
jp
mov
sti
add
xor
push
dec
pusha
add
jg
xchg
jecxz
and
leave
dec
std
pop
inc
stc
ins
and
mov
int
ret
mov
hlt
jmp
jle
mov
mov
mov
mov
cmp
pop
retf
test
je
mov
hlt
or
push
push
push
fisubr
into
adc
cmp
mov
jmp
pop
add
cs
inc
scas
ins
mov
adc
mov
inc
and
adc
fcom
push
jmp
push
jne
psubsb
sbb
mov
cmp
inc
push
sub
mov
cmp
sub
rol
push
pop
add
mov
add
xor
sbb
neg
lods
and
pop
mov
xchg
add
js
push
fs
(bad)
xor
push
push
push
mov
fsubr
push
pop
or
jg
adc
clc
je
push
add
cmp
nop
aas
adc
loope
fstp
into
call
les
pop
les
pop
add
mov
mov
mov
mov
xchg
push
les
add
add
adc
mov
push
call
mov
add
mov
jne
push
daa
jne
xchg
adc
daa
sbb
cmovbe
push
jmp
xchg
push
inc
ja
push
push
scas
inc
xchg
cld
inc
pop
fsubr
add
ror
int
jmp
adc
rcr
add
dec
push
cmp
(bad)
je
xchg
test
in
cmc
add
xchg
cmp
mov
loopne
jmp
shr
test
lahf
jp
out
jne
movzx
ret
sub
ds
add
das
cmp
pop
out
je
add
inc
and
and
lods
xor
fdivr
loopne
fisttp
sub
mov
loopne
or
dec
jnp
jp
mov
psrld
cmps
fwait
jo
mov
add
sbb
pop
dec
adc
xor
jg
add
je
mov
adc
xchg
or
call
mov
mov
push
mov
mov
push
pop
jbe
lods
arpl
inc
jbe
or
fdiv
jbe
jne
mov
scas
call
jne
xchg
jnp
je
out
push
mov
and
icebp
dec
mov
adc
cmps
call
sbb
daa
adc
cmp
jne
cmp
xchg
xchg
push
or
js
into
add
cmp
add
loopne
imul
push
mov
sbb
sub
cmp
and
inc
mov
xchg
add
shr
jne
rcr
push
push
inc
ins
push
push
adc
adc
loope
mov
mov
in
mov
ja
inc
add
fdivr
or
mov
bound
mov
push
inc
jb
mov
sbb
test
mov
loope
push
or
jge
hlt
and
cmc
addr16
enter
mov
mov
ror
inc
sete
mov
sahf
add
test
(bad)
cwde
in
inc
pushf
jne
mov
(bad)
cmc
sbb
or
repnz
repnz
add
je
mov
sub
cmp
(bad)
adc
test
pusha
fadd
call
scas
sbb
in
movs
add
cmp
or
pushf
pop
std
neg
std
jge
ja
sbb
je
sub
fwait
add
test
dec
sub
mov
and
pop
mov
adc
daa
mov
clc
jg
dec
inc
mov
push
push
push
call
lea
or
test
jne
repz
inc
clc
(bad)
cmp
fstp
clc
mov
je
lahf
mov
mov
test
lds
dec
inc
test
jne
mov
call
leave
je
cmp
inc
sub
mov
jmp
lea
mov
in
mov
inc
inc
push
adc
jmp
push
and
push
jmp
call
push
inc
mov
push
push
or
dec
xor
or
daa
pusha
cli
fist
test
call
ds
inc
adc
xor
mov
sbb
test
cmp
xchg
or
shl
adc
lock
mov
mov
aas
jae
cmp
push
xchg
mov
cmp
aam
fcom
cs
int3
mov
enter
inc
int
ja
nop
add
or
push
or
add
loopne
dec
jge
cmp
inc
dec
mov
inc
or
push
out
xor
or
mov
adc
mov
(bad)
jmp
or
rcl
mov
push
or
inc
jle
adc
nop
jl
inc
add
rcr
add
xlat
jge
sti
inc
add
add
pop
pop
pop
add
pop
add
add
je
mov
add
inc
add
add
xor
inc
add
arpl
xlat
xor
das
sub
mov
sub
pop
add
push
add
and
popa
mov
push
add
in
add
push
(bad)
mov
push
push
call
pushf
and
arpl
push
das
adc
imul
xchg
and
out
sbb
pop
jo
sbb
or
push
cli
pop
push
rol
pop
out
in
pop
pop
or
cwde
add
imul
add
add
and
push
mov
and
adc
pop
jecxz
and
imul
cmps
call
enter
add
push
adc
loopne
shl
cld
sub
rol
mov
adc
mov
and
and
test
sbb
mov
test
shr
or
fild
sub
jg
ins
and
push
jns
outs
sub
clc
add
jg
inc
movs
or
inc
inc
and
cmp
je
cdq
add
cld
mov
pop
cs
jmp
xor
dec
iret
call
inc
jmp
call
push
cmp
(bad)
pop
and
test
jb
je
idiv
repz
cmp
mov
push
mov
cmp
mov
sbb
push
jno
rcr
jl
adc
xchg
jno
nop
add
cmp
push
pop
sbb
cmp
and
cmps
mov
add
jno
push
ss
inc
loopne
jno
xchg
cmp
jno
xor
jge
or
add
mov
add
test
ss
sbb
jno
or
xor
mov
cdq
retf
inc
cmp
push
fnstenv
cmp
inc
sub
jno
ret
push
int3
movs
stos
ins
cmp
fadd
jno
mov
xchg
and
ss
jno
cmp
jno
sbb
mov
or
mov
fwait
retf
stos
in
jb
push
fnstenv
cmp
das
ins
sub
jno
cmp
add
pop
xchg
or
cmp
popa
pop
xor
xor
jno
in
cmps
sbb
dec
jno
pop
fcom
pop
int3
push
nop
retf
jecxz
gs
push
jo
jno
test
cmp
or
cwde
jno
and
ss
cmp
mov
gs
cmp
mov
ins
fcom
cmp
cmp
jno
dec
and
add
int3
jmp
ficom
pop
or
aaa
or
outs
adc
test
jne
cmp
jbe
mov
cmp
push
push
push
jae
shl
adc
sub
mov
cmp
ja
sub
sub
add
push
loop
push
mov
add
cli
or
pop
hlt
jmp
add
test
mov
mov
daa
push
rcl
push
(bad)
dec
add
je
add
dec
jne
pop
pop
or
pop
jmp
test
je
test
mov
mov
mov
jbe
shl
sbb
repnz
sbb
std
arpl
sub
pop
sar
cmp
pop
and
mov
sub
sar
fnsave
stc
or
sub
add
outs
jmp
jecxz
jns
or
mov
sub
test
add
lds
lea
adc
add
cli
pop
ret
push
jmp
mov
sub
sar
and
rcl
push
fdivr
sbb
xor
lea
pop
enter
push
or
mov
adc
mov
pop
ins
mov
inc
outs
lods
cmp
test
xchg
push
daa
xor
mov
inc
sbb
and
mov
dec
nop
test
add
call
stos
pop
push
inc
gs
sti
jg
and
push
jne
or
imul
add
rcr
xor
push
mov
add
out
jg
dec
mov
dec
dec
add
add
sub
out
ficomp
mov
sub
int
pop
sub
cs
and
mov
mov
or
and
out
mov
loop
jecxz
imul
add
lea
out
jno
cwde
ins
push
mov
lea
pop
mov
dec
les
push
pop
test
dec
pop
dec
mov
add
xor
dec
jo
test
push
mov
je
mov
sub
jg
cmp
jb
push
call
mov
mov
ja
pop
jb
mov
mov
pop
(bad)
retf
lea
jo
xor
(bad)
shl
call
mov
call
fisttp
sub
mov
cmp
out
adc
push
addr16
ins
mov
push
repnz
pop
movs
or
pop
enter
out
aaa
sbb
jbe
pop
test
cmc
mov
es
push
dec
and
push
dec
in
adc
inc
sub
fadd
inc
(bad)
cmps
sbb
and
push
dec
mov
rol
sbb
add
adc
xchg
inc
ins
ss
add
xchg
ret
and
adc
cwde
pop
outs
and
inc
pop
sbb
pop
adc
test
fadd
sbb
pop
(bad)
outs
dec
loop
sub
add
fist
lods
inc
aas
inc
hlt
scas
add
cmp
and
add
adc
lea
mov
push
push
call
cmp
in
add
mov
ror
mov
adc
out
iret
sbb
out
loop
popa
mov
je
mov
mov
push
call
mov
pop
mov
lock
int3
push
mov
push
lea
push
and
sub
mov
mov
cs
jl
adc
popf
mov
je
sub
mov
add
add
mov
jne
mov
jmp
push
inc
rcl
dec
xchg
out
stos
mov
test
in
add
inc
into
jne
shl
daa
ds
je
movs
adc
ins
test
mov
test
jne
or
xchg
rcl
push
mov
push
popa
add
or
mov
mov
sbb
(bad)
stos
fld
(bad)
cmp
add
mov
idiv
test
cmp
ins
pusha
adc
das
push
jl
cmp
inc
dec
clc
lock
push
test
jne
add
nop
leave
sbb
add
pop
sub
out
xor
or
add
cmp
add
rcl
push
fsubr
sbb
or
cmp
push
cs
push
push
push
and
pop
sub
(bad)
mov
push
xchg
mov
cmp
ins
icebp
mov
mov
dec
add
push
mov
sbb
push
pusha
sar
adc
jbe
sbb
add
adc
xor
adc
jl
(bad)
(bad)
push
xor
inc
cmp
push
inc
inc
mov
xchg
mov
push
jp
and
xor
add
inc
int3
mov
push
add
add
mov
xchg
inc
rcr
mov
or
in
in
and
add
adc
pop
add
or
or
adc
add
jb
not
cmp
pusha
das
adc
fmul
aas
nop
jb
not
adc
mov
pop
pusha
das
adc
add
adc
clc
adc
js
ins
jg
aas
in
and
aas
jnp
in
inc
adc
add
inc
sar
adc
aas
ins
or
add
adc
add
aas
cwde
inc
rcr
movs
nop
or
in
in
and
add
adc
pop
add
test
call
jb
adc
pop
pop
adc
pop
push
enter
aas
mov
adc
aas
mov
in
push
cmp
loope
fstp
repz
cmp
iret
add
ret
mov
enter
push
push
jp
jne
push
inc
loope
xchg
push
inc
mov
and
call
add
push
mov
add
push
fisttp
sbb
clc
inc
je
dec
std
jge
cmp
xor
jge
push
in
push
mov
inc
lds
jmp
adc
or
dec
leave
jb
inc
cmp
mov
sub
xor
into
sbb
(bad)
mov
call
add
ret
arpl
cmp
mov
adc
pusha
add
dec
add
push
and
and
je
ss
xor
push
rcl
out
sub
adc
and
lds
sub
cmp
je
mov
push
mov
clc
add
inc
and
jge
mov
sbb
xor
push
icebp
inc
ins
pop
out
jmp
xor
xor
arpl
adc
call
or
shr
and
div
sub
push
push
lea
mov
inc
add
xor
sub
lea
push
mov
stos
fsub
jmp
adc
xchg
add
and
pop
mov
jb
rol
pop
inc
and
(bad)
pusha
or
push
or
les
mov
dec
and
add
inc
pop
mov
or
mov
push
or
test
ja
xchg
mov
stc
mov
add
popa
adc
mov
loopne
je
sbb
cmp
cmp
ret
(bad)
fmul
mov
cmps
test
je
mov
loope
call
call
inc
and
or
pushf
sbb
sbb
and
int3
cmp
ja
add
and
test
mov
or
and
mov
jo
cwde
xlat
dec
and
push
sub
dec
push
and
lea
pop
inc
mov
pop
cmp
add
mov
ja
clc
push
ret
and
mov
bound
sub
lahf
inc
nop
mov
pop
add
bound
push
inc
je
push
xor
push
cs
add
mov
jae
or
daa
fst
clc
dec
add
retf
mov
sub
(bad)
mov
add
add
test
leave
mov
pop
sbb
add
cli
xchg
jmp
aam
cmp
xor
sbb
push
hlt
sbb
jl
sbb
or
retf
xor
fs
loop
fdivr
xor
inc
cli
sbb
xchg
mov
pop
add
push
sahf
stos
retf
pop
sbb
sbb
add
xchg
rol
pop
mov
sub
and
mov
test
pop
or
retf
push
jl
ss
xchg
hlt
push
movs
in
je
outs
lea
and
mov
jge
lds
sahf
dec
and
lock
or
or
push
add
adc
push
push
xor
push
inc
scas
and
and
loop
add
mov
sub
or
jmp
leave
adc
nop
(bad)
adc
clc
movs
mov
fmul
adc
adc
jno
jnp
adc
cmp
sub
add
sbb
xchg
xchg
mov
inc
bound
lods
stos
and
push
hlt
xor
repz
dec
cld
sbb
js
add
cmp
push
push
mov
daa
loop
and
fbld
jmp
dec
mov
ins
push
js
xchg
jbe
and
xchg
jo
jb
lds
and
jns
(bad)
mov
mov
adc
pop
mov
add
cwde
ror
add
mov
push
clc
pop
xchg
jle
push
mov
inc
ja
jl
sub
je
add
es
(bad)
outs
dec
outs
and
loope
and
sub
push
and
push
and
dec
sub
retf
test
fcom
mov
pop
cmp
add
xchg
xchg
loopne
ret
adc
inc
and
fs
jp
je
add
ja
jmp
sub
dec
dec
and
xor
add
imul
and
retf
sbb
adc
or
and
adc
ret
mov
add
dec
sub
iret
das
sub
aaa
xor
inc
mov
pop
and
ret
ss
les
mov
stos
or
popf
adc
call
add
inc
je
or
sti
dec
ds
cmp
jb
add
xchg
jae
push
sbb
push
inc
add
(bad)
mov
add
xchg
stos
xchg
xor
push
data16
fidiv
jle
int
out
and
cmp
xor
cmp
or
dec
xor
loop
dec
iret
sahf
xor
xor
pop
cmc
cwde
pop
pop
push
outs
clc
pusha
adc
push
shl
stos
sti
gs
inc
and
push
add
sbb
sbb
lea
jle
cmps
add
push
and
lea
push
push
and
push
add
add
out
ret
push
cmp
mov
(bad)
enter
cmp
je
sub
je
(bad)
pop
or
jae
es
into
adc
adc
scas
pop
sbb
imul
mov
sub
add
jl
test
dec
add
pop
cmps
mov
add
pop
std
pusha
pop
pop
push
dec
popf
push
sbb
sbb
pushf
sbb
pusha
imul
cmp
js
dec
pusha
push
inc
ret
int3
adc
dec
or
rol
add
adc
jecxz
pusha
mov
test
je
push
jmp
inc
and
cmp
mov
pop
or
and
scas
aas
div
mov
add
sub
and
xchg
sti
cmp
sbb
rcl
inc
add
loope
inc
and
mov
jae
xor
in
sub
jo
loopne
arpl
loopne
jo
in
or
or
pop
ins
movs
fidivr
fnstsw
and
out
loopne
inc
std
out
cmp
mov
push
cmps
add
std
dec
test
or
pushf
lock
mov
add
js
mov
mov
dec
cmp
dec
sbb
bsf
jge
iret
xchg
push
xchg
add
loopne
ror
repnz
jl
test
inc
(bad)
xchg
mov
inc
add
es
and
cmp
test
inc
mov
adc
pop
add
push
push
in
lea
mov
lods
in
add
lds
mov
nop
or
daa
ror
adc
mov
and
(bad)
js
ror
scas
push
push
dec
sub
in
or
(bad)
aas
add
lock
je
cmp
jbe
adc
out
sub
or
add
cwde
outs
add
pop
inc
ins
inc
loopne
aad
push
dec
push
cmp
jle
mov
sar
ins
and
imul
call
dec
pop
dec
mov
mov
stos
jl
and
or
inc
dec
dec
inc
inc
rol
xchg
pop
xor
js
(bad)
jl
inc
outs
(bad)
and
or
inc
xchg
and
mov
and
jl
xchg
shl
les
lahf
inc
inc
enter
cmp
dec
dec
pop
sub
pop
pop
mov
push
adc
rol
fwait
add
and
add
adc
add
loopne
and
dec
jecxz
sbb
lahf
test
mov
lea
mov
sbb
shr
mov
sahf
dec
inc
(bad)
call
cmp
mov
mov
call
pop
xor
xor
dec
movs
mov
daa
inc
jnp
push
ror
cld
ins
add
push
push
es
adc
xchg
cmp
xor
inc
loopne
lea
loopne
adc
or
pop
into
or
daa
hlt
ret
call
fstp
adc
fild
call
push
dec
add
push
push
inc
rcr
retf
sub
pop
out
push
add
pop
push
popa
aas
ss
dec
push
call
adc
dec
and
push
push
adc
jle
mov
push
xor
in
cmp
repz
jno
or
mov
nop
inc
scas
stos
retf
aad
packsswb
sub
mov
sti
(bad)
mov
jmp
add
push
call
fnstsw
call
push
push
(bad)
fdiv
cmp
jmp
push
or
pop
and
pop
je
cdq
sub
dec
maskmovq
idiv
add
inc
mov
xor
push
push
push
je
ret
int3
inc
cmp
adc
inc
shl
je
push
pop
jle
pusha
loop
sub
push
jl
push
int3
push
push
popa
add
cs
mov
adc
cmp
mov
push
mov
jmp
xor
ds
inc
pop
arpl
or
add
push
mov
xchg
push
or
jl
jnp
and
jl
out
push
lock
or
jbe
imul
pop
js
add
jmp
adc
out
jae
scas
and
add
pop
scas
sbb
mov
xchg
cdq
retf
stos
jb
retf
loopne
pop
cmp
(bad)
inc
fmul
jl
and
dec
add
mov
mov
mov
es
in
scas
jmp
push
push
jo
jmp
inc
and
add
add
cmp
jne
cld
mov
int3
sbb
mov
mov
in
je
int3
dec
addr16
js
cs
xor
xor
cmp
pop
sub
push
pop
inc
rcr
or
ret
or
mov
cmps
push
and
add
inc
add
movs
sub
test
aaa
(bad)
pushf
add
sbb
pop
jmp
adc
or
sub
test
xor
test
sub
sub
push
std
std
inc
iret
jne
or
imul
int3
cmp
add
icebp
fisub
nop
rcl
xchg
sar
movs
mov
and
adc
adc
and
ss
call
aas
and
adc
pusha
inc
lahf
lods
add
adc
push
push
and
push
mov
pop
pop
mov
aaa
inc
push
pop
ins
cmp
pop
aas
inc
ret
lods
pop
cmp
shl
add
test
jno
sbb
pop
test
jno
push
int3
inc
stc
jno
cmp
dec
gs
test
sar
jno
rcr
in
mov
clc
cmp
inc
and
jo
ss
ret
and
jno
mov
push
pop
xor
cmp
xchg
or
and
cmp
pop
pop
push
pop
pop
cmp
push
xchg
retf
jo
movs
mov
cmp
ins
fadd
or
jecxz
cmp
lods
sub
dec
gs
cmp
push
fnstenv
ss
ret
aam
jno
fmul
cmp
cmp
nop
add
jno
icebp
ret
adc
pop
push
xchg
retf
and
adc
adc
loopne
inc
loopne
add
push
add
mov
je
daa
or
push
push
add
sbb
or
jnp
pop
push
das
outs
or
test
je
addr16
and
add
push
call
pop
mov
push
fs
imul
in
dec
or
push
cmp
aas
or
leave
je
retf
call
mul
xor
add
xchg
inc
pop
add
test
shl
outs
dec
inc
repnz
push
or
and
push
xchg
scas
and
push
pop
add
push
or
aas
pop
add
nop
mov
ret
jo
and
or
outs
scas
xor
repnz
scas
add
xchg
icebp
pop
cmp
lock
add
adc
mov
inc
dec
outs
push
dec
fucomp
pop
test
test
push
jle
call
push
call
adc
push
mov
pop
loopne
adc
xchg
and
jo
in
in
adc
add
aas
test
rcr
int3
nop
or
cli
add
and
dec
outs
and
fmulp
adc
aas
xor
aas
pop
add
add
adc
cmp
pusha
das
adc
fmul
aas
lock
not
adc
mov
inc
mov
and
add
in
adc
mov
xchg
inc
cs
adc
or
add
adc
add
mov
cwde
aas
cmp
jg
add
adc
fcomp
aas
adc
or
jmp
das
pop
sti
daa
add
push
push
mov
and
push
clc
mov
call
mov
xor
imul
mov
xchg
and
test
jo
ret
or
cmp
mov
add
add
jecxz
cmp
jb
outs
mov
push
add
sub
js
je
or
jmp
icebp
cmp
je
sbb
push
sub
ins
and
push
adc
sbb
mov
mov
dec
sbb
jae
inc
cmp
lea
sbb
int
xor
ins
mov
jbe
adc
adc
or
adc
push
pop
push
loopne
mov
mov
inc
xchg
mov
push
mov
mov
(bad)
mov
mov
mov
inc
lods
mul
or
mov
enter
inc
lahf
cs
lahf
dec
and
mov
push
push
out
or
jo
mov
dec
fs
lahf
adc
lahf
ja
adc
pop
loopne
sbb
fisttp
out
(bad)
jmp
jmp
xor
mov
or
push
mov
mov
dec
xchg
movs
cmp
mov
add
add
mov
fld
call
or
movs
cmp
cmp
sar
push
popa
xchg
push
dec
gs
loop
jne
dec
and
cmp
xchg
inc
lock
jecxz
jns
out
add
jl
pop
add
sbb
add
push
or
test
lgs
adc
gs
rol
and
push
jb
lea
push
push
loop
adc
scas
mov
jecxz
add
add
add
jae
rcr
sub
add
cmps
sub
push
dec
xor
dec
sub
test
cmp
lock
add
adc
or
test
mov
test
rcr
les
aas
scas
mov
lahf
sub
lods
mov
pop
or
icebp
pop
inc
popf
xor
pop
and
cmp
inc
add
ret
xchg
push
je
mov
ja
mov
and
loop
jbe
or
push
scas
mov
mov
push
add
mov
adc
cmp
mov
and
repz
bound
add
cmp
fild
mov
add
ret
mov
dec
xchg
jp
pusha
clc
mov
cmp
addr16
lahf
or
sbb
(bad)
(bad)
mov
loopne
sbb
(bad)
xor
(bad)
push
in
jnp
call
pop
test
adc
les
adc
(bad)
push
push
outs
add
loopne
jbe
cmps
mov
retf
mov
enter
cmp
add
jnp
cmp
pusha
shr
aam
pop
sub
aas
pop
out
add
sbb
jb
or
cmpxchg
or
or
adc
push
pushf
popf
jmp
mov
nop
inc
or
ja
or
add
scas
das
adc
sbb
pop
call
cmp
adc
add
add
pop
add
les
ror
inc
jle
add
jne
fwait
and
or
adc
out
movs
movs
and
out
dec
inc
adc
adc
out
dec
out
jno
mov
out
adc
lahf
push
dec
enter
xchg
jmp
xchg
push
xor
ret
mov
mov
test
inc
add
xchg
or
xchg
mov
cmp
fwait
cmp
or
inc
dec
shl
fmul
xor
and
push
das
or
loope
out
mov
adc
mov
push
pop
add
mov
add
sbb
adc
retf
xchg
rol
arpl
jecxz
pusha
out
adc
xor
mov
in
add
add
and
xor
sbb
cwde
xchg
aas
jl
and
sbb
adc
nop
scas
xor
inc
idiv
pop
jnp
dec
mov
mov
je
jmp
lea
mov
xlat
das
(bad)
outs
pop
test
movs
dec
adc
or
cmp
cmp
fdiv
ds
add
inc
adc
mov
es
mov
jne
and
sbb
pop
or
push
add
daa
mov
jg
add
add
mov
pop
inc
mov
lds
out
or
dec
inc
fistp
les
and
inc
add
push
adc
sub
adc
and
add
inc
add
out
inc
sub
add
sahf
aas
sub
adc
dec
add
popa
bound
push
jg
push
inc
fs
cmp
inc
add
add
psubsb
adc
aas
jg
add
scas
pushf
(bad)
cmp
push
add
call
add
movs
add
(bad)
or
mov
popa
adc
jg
mov
add
or
dec
not
loopne
and
aaa
dec
and
and
aas
and
inc
mov
aas
and
lock
hlt
inc
aas
pop
dec
mov
jg
fs
or
aas
adc
dec
and
aas
or
into
add
das
inc
xchg
or
xchg
nop
and
inc
inc
push
mov
push
add
add
sbb
adc
or
iret
test
pop
clc
das
push
sub
jle
or
push
adc
shl
and
and
add
lock
mov
and
jl
rol
jmp
mov
add
push
add
test
test
mov
xor
lahf
and
retf
je
push
lods
lahf
jge
push
dec
xchg
rcl
sub
push
test
ja
dec
sbb
stc
sbb
add
adc
dec
mov
lock
call
or
and
mov
or
or
pop
xor
stc
imul
jnp
rcl
sbb
mov
(bad)
or
lock
mov
(bad)
rol
push
int3
push
jp
mov
inc
xor
mov
adc
or
pop
inc
inc
push
jb
mov
jl
or
pop
jl
lock
or
rol
jecxz
lea
lock
(bad)
and
je
mov
fs
or
add
xchg
inc
and
sub
inc
add
ss
mov
cmp
mov
dec
pop
and
add
lods
cmp
clc
das
sbb
stc
mov
inc
or
xor
cmp
push
adc
xchg
mov
lds
push
data16
and
and
push
lea
add
mov
and
mov
mov
adc
out
sti
or
in
add
pop
ret
mov
push
sub
jle
test
mov
adc
sbb
iret
dec
add
push
imul
lods
retf
xchg
mov
ret
push
add
push
leave
mov
pop
aad
add
mov
add
jo
inc
xchg
test
adc
mov
adc
setne
mov
call
shl
call
sbb
adc
sbb
mov
sbb
lods
ret
inc
mov
and
xchg
aas
pop
fistp
inc
cli
or
das
into
mov
das
aas
or
pop
lods
sub
aas
and
icebp
mov
push
pop
test
dec
xor
dec
adc
sub
inc
sahf
iret
sub
pop
aas
push
inc
or
inc
lds
aaa
adc
adc
or
test
or
mov
cmp
mov
lods
iret
push
fnstenv
fnstenv
cmp
dec
mov
or
jno
cmp
cmp
or
xor
push
mov
dec
mov
cwde
xor
sbb
xchg
add
xor
push
jne
mov
cmc
add
jo
pop
or
ins
mov
add
rcr
add
mov
and
loopne
cmc
add
cmp
pusha
outs
or
push
and
add
or
mov
imul
fcom
sbb
and
cmps
add
retf
jb
sub
or
das
adc
xchg
outs
and
outs
and
dec
and
pusha
aas
xor
adc
add
jb
not
cmp
pusha
das
adc
fmul
aas
outs
jo
inc
add
adc
xchg
dec
shl
jo
aam
inc
pop
data16
add
mov
(bad)
sub
push
jle
mov
sub
scas
xor
jle
sub
daa
test
fadd
leave
bound
or
scas
sub
adc
add
push
lea
scas
sahf
push
inc
sub
or
xchg
push
cli
jle
ins
jp
or
inc
and
jp
push
cli
dec
and
test
popf
xchg
mov
imul
jno
jns
mov
inc
cmp
nop
(bad)
cmp
(bad)
inc
int3
and
scas
push
mov
xchg
cwde
xor
data16
fadd
or
mov
stos
add
push
push
add
push
test
int3
mov
in
adc
mov
pop
add
test
inc
ror
jmp
(bad)
xor
sysexit
dec
mov
test
jmp
shrd
xchg
and
push
mov
pop
adc
shr
aaa
push
or
push
mov
mov
mov
lods
mov
mov
call
out
call
sbb
and
xor
cmp
jb
mov
push
les
adc
adc
daa
es
fist
pop
adc
push
push
call
sbb
or
adc
int
sbb
out
jmp
loop
inc
(bad)
aam
push
iret
inc
loope
cli
pop
ret
mov
loopne
std
pop
push
xor
test
mov
add
pushf
jmp
sbb
shl
push
jns
xor
adc
or
arpl
add
daa
and
lahf
rcr
mov
mov
fadd
push
adc
pop
inc
mov
add
dec
call
je
mov
push
sub
push
call
inc
ror
mov
or
fs
mov
cmp
push
loopne
(bad)
or
push
add
cmp
cmp
add
jb
mov
add
and
add
dec
out
or
inc
mov
cmp
inc
add
rcl
imul
pusha
push
mov
add
mov
adc
popa
inc
and
fstp
push
cmp
movs
add
inc
sub
je
sub
ret
sahf
sti
adc
adc
push
mov
cmps
adc
mov
or
loope
xor
mov
inc
mov
push
stos
adc
cmp
lahf
push
xor
inc
mov
dec
adc
inc
test
inc
int3
(bad)
lock
inc
rcl
inc
xor
loopne
clc
mov
mov
mov
mov
jl
inc
inc
and
sbb
mov
ins
cmp
and
and
mov
and
popa
lods
in
(bad)
adc
es
popw
ss
add
test
loopne
pop
add
sbb
mov
inc
adc
adc
jbe
les
repz
xchg
adc
push
add
mov
test
data16
pusha
clc
inc
setno
fdivr
(bad)
push
dec
add
jg
test
jnp
call
add
je
mov
inc
sub
sub
cmp
sub
add
std
jae
popa
add
adc
cmps
and
adc
push
push
pop
fld
add
add
add
jne
shl
push
add
outs
sub
cld
jle
stos
and
jg
mov
inc
adc
sbb
ret
(bad)
fistp
push
push
push
push
push
push
inc
push
in
aas
test
setge
bound
xlat
jnp
add
sub
cmp
jle
enter
cwde
sub
test
or
das
dec
shr
push
mov
mov
push
push
call
add
test
outs
pusha
push
loopne
(bad)
dec
call
(bad)
stos
mov
pop
ret
sub
adc
add
xor
or
push
(bad)
sar
adc
call
mov
adc
sub
dec
inc
test
ja
dec
and
xor
push
sti
popf
sub
lea
call
dec
std
(bad)
mov
neg
cmp
mov
mov
dec
xchg
dec
and
cmp
les
mov
or
cld
and
sar
sub
or
(bad)
dec
fmul
sar
sar
sub
push
mov
push
mov
das
sub
push
lea
xchg
fcmovnu
in
ds
jg
mov
push
mov
inc
adc
inc
dec
mov
and
(bad)
stc
xchg
xlat
lods
loope
stos
xor
sar
icebp
scas
jnp
push
call
adc
out
and
adc
(bad)
inc
and
ds
mov
cwde
mov
popa
jge
push
call
test
mov
in
push
in
les
cmp
loop
ret
mov
(bad)
mov
sub
xor
xor
jl
iret
inc
and
push
xor
xor
icebp
sub
xor
xor
sbb
jmp
pop
mov
shl
stos
sub
cmp
and
inc
dec
adc
xchg
rcr
ror
adc
sbb
add
and
adc
jb
div
xor
int
add
faddp
rcr
loope
in
dec
pop
sub
pop
add
push
lea
jle
xor
call
adc
push
and
aas
adc
test
call
lds
push
push
test
jl
mov
sub
or
shl
jnp
ret
jns
ja
push
jo
mov
push
add
(bad)
lock
sbb
push
xchg
jbe
jg
bound
push
mov
xchg
ins
add
mov
js
xchg
add
adc
pop
test
mov
pusha
cli
pop
inc
push
lea
cmc
adc
sti
les
xchg
push
push
add
call
mov
add
mov
cmp
imul
mov
sbb
cmp
dec
div
sbb
(bad)
jne
pop
pop
add
push
fs
or
xchg
repz
mov
mov
sbb
push
pop
push
in
aas
add
mov
sbb
mov
cmp
adc
xchg
push
adc
cmp
je
mov
adc
(bad)
inc
call
mov
cmp
mov
mov
shl
mov
je
lea
mov
aas
leave
jmp
mov
mov
mov
push
push
xchg
add
push
add
mov
xor
mov
add
xor
cld
jne
mov
fild
je
jnp
fwait
mov
inc
xor
mov
mov
mov
or
and
(bad)
dec
add
pop
add
mov
push
push
inc
push
call
jmp
pop
xchg
sbb
push
push
mov
cmp
cmp
push
push
call
adc
std
mov
mov
cmp
(bad)
dec
pop
mov
push
add
mov
mov
(bad)
out
mov
cmps
iret
adc
inc
xor
dec
inc
xchg
std
lahf
fisub
dec
add
push
push
push
push
call
pop
adc
push
mov
and
sbb
pop
sub
loopne
cli
dec
mov
loopne
push
pop
jo
cmps
add
pop
dec
ret
mov
push
nop
scas
loopne
int
adc
and
adc
fadd
mov
sub
cmp
jns
loopne
push
(bad)
adc
je
or
in
inc
cmp
addr16
cmp
je
ins
add
inc
lds
push
adc
mov
rcl
cwde
adc
ret
xor
popa
sub
push
loopne
(bad)
add
add
and
add
pop
jmp
jo
and
add
loope
pop
add
dec
xchg
lds
in
unpckhps
push
mov
pop
adc
fnstsw
xor
jno
mov
fild
adc
mov
push
outs
cmp
mov
jbe
cmps
lea
jb
add
sub
(bad)
xor
adc
inc
push
inc
mov
pop
mov
pusha
es
fisttp
push
outs
mov
out
mov
dec
push
lea
sbb
mov
in
add
rep
adc
rep
pop
mov
aaa
in
out
mov
pop
add
dec
(bad)
dec
pop
or
shr
ror
call
je
and
push
adc
stos
sbb
data16
xor
sub
in
aas
rcl
ror
xor
mov
inc
call
cmp
mov
scas
adc
add
es
adc
sub
loope
out
adc
aad
fcom
pop
mov
pop
sub
adc
mov
bound
add
jmp
xor
add
jae
inc
or
(bad)
out
push
mov
cmp
pop
jae
push
push
call
and
xor
push
das
add
inc
and
pop
inc
icebp
or
call
and
ret
and
and
inc
sub
sub
dec
push
add
mov
adc
and
cld
hlt
das
adc
mov
and
mov
push
add
push
and
sub
das
jne
mov
push
fucomip
int3
jge
jmp
push
das
adc
and
das
sbb
add
xor
das
mov
imul
jge
inc
es
and
add
mov
jnp
push
or
mov
mov
in
call
popa
iret
mov
aas
push
lea
adc
out
sbb
pop
cmp
mov
inc
sub
add
or
pop
pop
jl
xor
fldcw
push
ds
xchg
daa
das
push
lea
sub
mov
or
push
push
sbb
fdivr
outs
int3
jg
mov
mov
adc
js
mov
mov
inc
mov
add
pop
daa
cmp
jne
pop
mov
adc
cmp
jne
mov
aas
mov
popf
int3
int3
sub
test
mov
add
call
sbb
inc
les
jne
xor
pop
push
pop
adc
imul
ret
outs
push
mov
ins
pop
clc
fimul
push
pop
and
push
nop
scas
pop
xchg
imul
sbb
adc
lea
retf
adc
xchg
mov
mov
xor
pushf
scas
clc
(bad)
out
pop
xor
rcl
mov
lahf
pop
test
pop
setne
push
add
adc
cwde
or
and
sub
and
push
lea
sub
or
test
int3
test
sub
add
push
add
mov
sti
or
fdivr
and
sbb
xor
adc
aas
inc
(bad)
mov
in
lds
push
stos
adc
jmp
push
inc
adc
call
je
ss
or
mov
add
push
jne
mov
add
fs
lea
mov
push
inc
int3
push
fadd
test
sub
adc
push
sbb
and
or
xchg
xchg
push
in
sub
push
adc
ret
or
sub
ja
(bad)
pop
inc
and
icebp
add
cmps
pop
inc
nop
and
aam
cmc
add
adc
arpl
les
push
scas
hlt
and
or
xor
rol
repnz
pop
dec
jmp
dec
ss
push
add
xor
loopne
(bad)
loope
pop
sub
pushf
outs
es
and
push
cmp
sub
inc
and
inc
mov
cld
test
pop
push
cmp
mov
(bad)
(bad)
push
adc
sbb
adc
adc
cmp
dec
inc
(bad)
cmp
inc
inc
stos
js
jge
fadd
mov
aam
pop
outs
xor
mov
sbb
inc
inc
inc
inc
(bad)
mov
push
mov
push
and
or
dec
mov
mov
push
inc
je
cmp
and
mov
mov
jne
and
add
inc
adc
je
xor
push
sub
add
out
inc
push
pop
sub
and
cmps
jo
bound
mov
and
push
lock
lock
cld
rol
ja
sar
fistp
(bad)
ret
sub
mov
and
add
cmp
test
dec
xchg
imul
pusha
mov
jmp
adc
push
ins
dec
jmp
mov
xor
adc
(bad)
mov
mov
cmp
jne
inc
cmp
je
add
fcom
add
ja
sub
jmp
fwait
or
push
sbb
adc
push
(bad)
dec
fdivr
xor
push
or
cmp
adc
mov
push
in
scas
or
call
or
add
mov
pop
sub
popf
or
js
adc
(bad)
fcomip
push
or
push
test
mov
add
je
pop
je
mov
mov
cmp
adc
sbb
hlt
add
movs
loope
stc
jo
mov
jmp
fwait
mov
enter
pslld
(bad)
pop
lods
cmp
add
ret
push
push
mov
lea
xor
push
sub
loopne
adc
xor
xchg
leave
aam
and
and
jb
sbb
(bad)
sbb
sub
ins
pusha
cs
adc
mov
mov
outs
daa
sub
fs
mov
pop
outs
sub
add
dec
test
cmp
fisttp
sub
cmp
jl
cmp
cs
inc
fsubr
xchg
psadbw
inc
add
sub
inc
fdiv
cmp
dec
pusha
cmp
xchg
mov
test
leave
xchg
loope
mov
fucomi
js
mov
fsub
pop
jl
shl
je
push
div
cmp
adc
je
bound
lods
pop
fstp
or
jns
pop
lods
push
jne
jo
outs
or
mov
mov
xlat
mov
dec
mov
ds
xchg
mov
xor
les
pusha
sqrtps
(bad)
pop
push
dec
xor
push
push
pop
cmps
call
inc
cwde
xchg
in
mov
or
leave
xor
sar
add
push
ficom
push
mov
test
jne
jb
ds
jp
(bad)
adc
pop
adc
sbb
push
aas
rol
test
mov
jl
dec
scas
push
scas
mov
mov
sub
(bad)
in
mov
gs
scas
ror
aaa
pop
push
lea
ds
and
loop
lock
fdivr
cmps
loop
adc
ror
xchg
stos
and
mov
pop
lods
pop
mov
adc
and
sbb
dec
sub
add
or
mov
add
scas
retf
adc
repnz
mov
add
inc
adc
ret
mov
pop
adc
gs
sbb
add
fild
ja
push
mov
iret
pop
mov
ret
push
cli
sbb
loop
test
inc
enter
test
lds
mov
mov
call
mov
mov
out
out
mov
sbb
add
jne
mov
push
push
cld
jmp
mov
push
dec
add
mov
mov
jne
mov
or
push
lea
lods
push
and
push
push
cmp
adc
cmp
pop
jne
push
push
mov
call
(bad)
in
push
jmp
mov
adc
call
mov
mov
pop
mov
push
mov
push
jmp
shl
jne
mov
and
js
mov
shl
or
call
jb
cmp
xchg
jmp
loop
inc
add
mov
inc
dec
cmp
fs
les
mov
and
pop
add
es
das
xchg
leave
add
aad
dec
jo
dec
outs
push
pushf
shr
scas
add
jo
mov
push
fnsave
ficomp
sub
jle
loop
aam
push
pop
and
push
cmp
pop
or
and
push
test
pop
data16
fcom
lods
jae
pusha
add
or
cmp
je
sub
or
aad
scas
or
pop
xchg
inc
adc
xor
nop
sbb
mov
and
in
add
inc
rol
and
dec
or
push
push
mov
add
aas
ror
lock
mov
mov
jg
push
mov
cmp
xor
rol
clc
cmp
je
pop
cmp
pop
enter
push
mov
clc
adc
ror
movs
sbb
push
add
mov
pop
mov
test
(bad)
lds
rcr
and
push
fsubr
adc
mov
pop
xor
cmp
pop
mov
pusha
add
icebp
jb
mov
icebp
cwde
push
dec
push
cmps
and
sub
icebp
pop
(bad)
add
and
dec
or
inc
adc
ss
xchg
shl
icebp
add
mov
add
sbb
loopne
mov
push
xor
and
ror
test
out
or
add
cmp
push
adc
and
and
nop
call
pusha
add
ins
test
adc
ficom
enter
scas
cmp
pop
inc
sub
fiadd
mov
xchg
xchg
sbb
adc
dec
push
nop
adc
and
jl
push
mov
cmp
mov
pop
adc
add
fadd
(bad)
je
fdivr
jge
push
sbb
add
fcom
daa
xor
mov
xor
fistp
jb
dec
sbb
or
push
loop
bound
scas
sub
push
xor
add
mov
push
cmp
cmp
sahf
xchg
or
fld
ret
ins
and
cmp
and
test
enter
or
out
mov
cmp
and
add
mov
iret
outs
push
mov
fnsave
add
add
popa
add
jg
push
xor
mov
sahf
or
push
adc
pop
movs
mov
push
repz
push
xchg
lock
pop
and
ins
cmp
mov
jno
fnstsw
inc
sbb
or
lds
adc
(bad)
jmp
push
sub
mov
mov
cmp
outs
push
push
mov
xchg
gs
and
retf
jb
or
and
ins
outs
adc
mov
pop
xor
pop
pusha
or
jne
shl
push
push
idiv
jl
add
and
pop
pop
pop
pop
call
push
daa
inc
mov
jp
clc
or
jbe
push
add
sbb
lea
pusha
pusha
bound
dec
mov
add
loop
hlt
mov
or
dec
pusha
pop
test
adc
scas
(bad)
jmp
xchg
aas
imul
inc
xchg
push
int3
and
add
lock
mov
rol
sub
out
inc
pop
add
data16
pusha
add
cwde
adc
pop
imul
outs
aad
add
dec
add
cmp
add
loope
jo
mov
and
pop
add
push
mov
xor
fs
xor
mov
push
mov
cmp
mov
jo
cmp
cmp
cmp
sar
ins
je
xor
mov
pusha
(bad)
pop
xchg
dec
push
mov
fist
jae
xor
lds
jge
stc
dec
and
pusha
add
adc
sbb
mov
cwde
cmp
dec
pop
mov
push
mov
retf
pushf
jge
sbb
aam
mov
scas
sbb
icebp
syscall
in
add
jnp
cmp
shl
cmp
addr16
cs
mov
adc
fadd
cmps
in
xchg
fisttp
jmp
daa
mov
cmp
mov
push
push
jb
adc
cmp
adc
mov
ret
adc
push
cs
mov
dec
push
cs
or
out
stos
xchg
add
cli
cli
leave
loopne
scas
ror
in
push
dec
aam
pop
mov
inc
xlat
or
mov
cmp
jne
xchg
daa
pop
adc
data16
pop
out
push
or
add
sbb
dec
ret
xor
dec
shl
aas
dec
fs
and
mov
mov
dec
imul
lods
cmp
lods
clc
sbb
dec
or
push
inc
loopne
jnp
push
sbb
inc
(bad)
mov
out
test
xor
push
hlt
shl
js
pop
jb
ret
inc
int3
jnp
jp
jle
push
push
sub
mov
xchg
cmp
adc
or
imul
adc
fnsave
add
je
cmp
push
mov
test
dec
loop
add
push
pop
pusha
js
add
ins
xor
loope
mov
push
inc
popa
les
xchg
popa
into
inc
retf
outs
loopne
adc
iret
mov
pop
in
inc
movs
pop
and
cs
and
loop
sbb
xor
cmp
nop
jbe
mov
ficom
add
cmp
fdiv
dec
sub
sbb
mov
call
cli
add
dec
and
dec
add
movs
mov
add
and
ss
xor
inc
cmovl
cwde
stos
pop
sub
pop
adc
adc
inc
fbstp
js
mov
xor
push
mov
cmp
mov
mov
xlat
adc
adc
fwait
je
mov
mov
pop
lea
xor
shr
adc
test
add
ret
xor
mov
call
add
scas
pop
adc
add
or
pop
dec
int3
mov
sub
test
and
or
adc
into
fs
retf
clc
fcomp
mov
test
sbb
sbb
lahf
xchg
push
add
js
mov
mov
out
loop
jp
cmp
clc
int
mov
mov
jno
pop
sahf
(bad)
jae
out
ja
add
and
adc
or
int
push
icebp
pop
cmp
sub
cmp
adc
test
xchg
loop
xchg
lock
mov
or
and
shl
ins
dec
push
fadd
pop
xchg
xchg
xchg
xor
xchg
xchg
xchg
xchg
and
into
inc
je
pop
sahf
lock
test
xchg
loopne
test
sub
push
shl
xchg
xor
or
cmp
sbb
push
mov
adc
mov
xchg
adc
out
outs
enter
xchg
rol
and
xchg
push
push
cs
jno
jle
icebp
pop
loope
jnp
mov
xchg
test
xchg
ficom
xchg
inc
and
adc
cmps
dec
adc
adc
aas
fidiv
inc
ja
jge
jge
or
mov
pop
fisubr
push
push
ret
sbb
clc
xor
sub
dec
push
retf
push
enter
push
xor
dec
push
jae
push
test
sbb
and
pop
fnstsw
hlt
push
nop
xor
ds
dec
es
jnp
push
push
inc
cwde
pop
mov
push
mov
test
fadd
lods
xchg
mov
rcr
inc
mov
inc
jns
inc
fbstp
sub
mov
sbb
je
data16
jo
push
jl
jnp
mov
pop
jnp
popa
loopne
shr
test
je
in
cs
rol
inc
out
je
push
mov
xor
push
ret
pop
ret
add
fwait
clc
cmp
mov
arpl
sub
les
cmp
sahf
loope
fdiv
test
sti
cmp
dec
adc
cmp
and
jge
in
imul
adc
sbb
or
push
ficomp
addr16
cmp
jp
in
inc
out
adc
or
xchg
adc
jb
lds
and
lds
lds
inc
enter
lds
nop
add
sbb
lds
jnp
inc
cs
mov
mov
out
sbb
outs
ins
mov
aam
push
or
mov
jl
sub
xor
and
pop
adc
push
je
xchg
add
push
stos
rol
sti
js
div
stc
xlat
xor
xchg
lds
xchg
sub
xchg
xchg
or
cmp
mov
mov
xchg
inc
and
cmp
xchg
mov
jo
inc
or
sub
sub
pusha
test
cmp
pop
add
mov
pop
rol
push
loopne
loope
xor
mov
cmp
sbb
loope
fs
mov
mov
leave
inc
inc
add
xchg
xor
or
or
dec
and
jb
xchg
mov
cli
(bad)
sbb
cmp
outs
add
loopne
dec
xchg
xor
pop
mov
inc
jg
adc
add
je
scas
or
je
pop
add
test
or
arpl
xor
cdq
dec
and
mov
fimul
jmp
jge
mov
add
ret
jb
ror
lock
lock
and
push
lds
adc
inc
aad
iret
stos
adc
lea
rol
mov
mov
adc
sbb
scas
test
dec
sbb
and
sbb
data16
cmp
ss
add
xor
pusha
enter
adc
sbb
cld
sbb
test
pop
sub
in
push
adc
add
loopne
ins
lock
xor
inc
fsubr
adc
lods
clc
add
stos
xchg
adc
pop
jg
inc
sub
mov
cli
or
iret
out
or
add
mov
test
add
push
inc
loope
jle
xchg
add
shr
pop
ins
and
(bad)
pop
ror
and
lea
and
xor
fisub
xchg
test
cmp
loope
adc
mov
push
mov
mov
push
arpl
test
add
mov
mov
test
nop
adc
mov
cmp
sbb
pop
adc
jb
imul
daa
xchg
lods
xchg
sbb
sbb
pop
sub
sub
aaa
pop
test
lods
sub
jae
ins
push
pop
cmp
icebp
adc
cld
lock
jecxz
jo
ins
int3
lahf
mov
fsubr
jae
imul
imul
std
pop
or
mov
aam
push
dec
sahf
jbe
inc
fsubr
(bad)
(bad)
sar
and
mov
aam
mov
mov
pushf
add
add
dec
push
out
mov
bound
cli
data16
mov
cmp
inc
fmul
(bad)
cmp
lock
mov
mov
xchg
and
popa
test
in
push
adc
sti
pop
sub
test
ret
rcr
imul
dec
lahf
sub
xchg
clc
jle
inc
cmp
xchg
sbb
or
les
outs
ds
xchg
ds
sbb
add
inc
inc
ja
pop
and
xor
mov
call
and
cld
jmp
mov
pop
ins
and
clc
and
add
jo
xchg
push
jae
mov
mov
popa
dec
cmps
xchg
retf
push
mov
ds
and
mov
in
sbb
stos
cli
in
fsub
inc
jo
popa
sahf
std
mov
sub
adc
push
imul
jb
sub
jmp
inc
or
jb
cmp
test
xor
xor
cdq
jmp
dec
inc
das
dec
jae
adc
iret
aam
dec
out
jae
or
cmp
dec
std
stos
int3
or
inc
and
add
or
test
je
retf
add
sti
and
push
inc
fdiv
ret
in
adc
mov
mov
iret
jbe
xchg
outs
in
loopne
sub
sbb
adc
and
cmp
test
or
loopne
dec
mov
es
loopne
push
ror
fcomp
ror
out
mov
jnp
dec
xchg
adc
or
movs
mov
jle
pop
inc
mov
sbb
(bad)
dec
cmp
dec
inc
iret
cmp
jle
and
out
jecxz
mov
mov
xchg
dec
sbb
jle
inc
std
dec
(bad)
cmp
jle
mov
push
jle
add
jno
mov
cmps
gs
and
sub
out
fiadd
add
out
test
adc
fwait
dec
xchg
in
pop
out
add
cwde
add
enter
fist
rol
or
pop
fcomip
jae
retf
sbb
call
adc
cmp
pusha
push
inc
daa
mov
cmp
mov
adc
arpl
popa
rcr
ret
and
sub
mov
add
loopne
push
or
stos
dec
mov
dec
xchg
and
cmp
loopne
daa
add
das
dec
jo
or
cdq
mov
mov
mov
cs
inc
dec
cdq
test
and
retf
rcr
and
and
sbb
mov
xchg
xchg
sub
cmp
mov
push
jbe
cmp
xor
mov
pop
adc
jb
sub
test
and
jge
cmp
add
test
and
mov
jb
add
xchg
and
hlt
scas
stos
fcom
das
push
push
sub
add
sub
or
push
xor
fsubr
xchg
sbb
(bad)
nop
rcr
jmp
and
add
ins
add
cmp
jecxz
push
ins
add
mov
and
adc
or
ins
loopne
dec
push
xchg
dec
shl
xlat
cwde
add
sbb
cmp
pop
and
cmp
inc
js
aad
and
xchg
sub
push
inc
mov
adc
add
test
sti
jb
in
cmp
cmp
fmul
dec
cmp
lahf
inc
jo
adc
ins
out
hlt
fadd
jle
jg
inc
push
int3
jge
cmp
jle
mul
and
dec
push
cwde
shl
jle
xor
popa
add
xor
mov
pusha
sbb
pusha
xchg
xchg
aaa
cmp
sbb
jbe
cmp
dec
dec
inc
ss
adc
pop
push
mov
adc
fistp
test
jnp
sub
aaa
mov
aas
push
sbb
sub
cmp
xchg
lods
mov
adc
push
cmp
hlt
or
fs
ret
pop
rcl
out
int3
mov
inc
je
and
and
ja
mov
movs
add
add
xchg
mov
and
mov
push
push
movs
pusha
cwde
or
and
mov
jae
dec
adc
push
gs
push
retf
xchg
pop
mov
loope
inc
xor
pop
test
clc
pop
inc
mov
jle
mov
scas
je
sbb
enter
sub
enter
sub
mov
(bad)
xor
inc
xchg
xor
and
cmp
or
fwait
mov
cmp
mov
shr
jb
mov
movs
xor
daa
and
stos
mov
jmp
icebp
mov
jb
push
push
mov
fdiv
lods
lock
inc
hlt
jns
and
call
xchg
sbb
aam
test
pusha
sub
lds
mov
add
js
xchg
push
and
js
jl
add
(bad)
sub
inc
js
fstp
ret
push
bswap
mov
stos
test
lea
or
sub
retf
push
mov
lock
addr16
jo
adc
jo
mov
push
and
add
push
push
add
or
movs
inc
cmc
sbb
add
stc
mov
rol
cmp
push
adc
sub
add
addr16
inc
sbb
idiv
shl
ins
sub
or
inc
and
cmp
adc
jmp
cmp
jne
scas
and
je
outs
int
loopne
rcl
push
inc
pop
xor
cmp
add
xor
jle
mov
cmps
add
or
jmp
adc
or
inc
jb
push
call
ficom
add
lds
xor
inc
push
add
shr
pop
xor
mov
xchg
xchg
lods
loop
scas
push
hlt
inc
jmp
mov
push
push
call
ret
popf
nop
push
les
js
add
test
in
xchg
dec
mov
push
push
jl
call
pavgw
mov
add
cmp
stos
push
out
add
scas
sub
sub
add
das
or
mov
stc
inc
sub
pop
pop
adc
push
mov
push
pop
push
inc
add
sbb
pop
aad
je
sar
push
push
call
mov
test
je
xchg
std
pop
outs
ins
sldt
mov
ins
mov
xor
mov
jmp
pop
push
jns
cmp
(bad)
ud0
mov
and
mov
mov
xor
xor
cmp
add
jnp
sub
and
mov
jl
jl
int3
mov
loop
sbb
iret
push
push
test
add
nop
cmp
xor
jle
push
dec
push
dec
push
and
jo
cmp
clc
or
push
fnstenv
ja
or
call
test
cmp
je
pop
adc
(bad)
call
mov
js
or
or
lea
jno
mov
jp
add
data16
push
mov
add
mov
pop
inc
lock
pop
inc
dec
jo
inc
pusha
pusha
or
ret
mov
stos
sbb
inc
sbb
or
test
jne
pop
adc
(bad)
jo
fcmove
sbb
pusha
jge
add
mov
add
cmp
ror
fs
mov
mov
mov
push
pop
lahf
push
xor
push
xchg
mov
iret
or
les
adc
ins
and
pushf
das
lds
add
jnp
fadd
and
or
sub
jb
or
jmp
push
push
mov
xchg
dec
xchg
fwait
and
ins
and
xchg
pop
sub
jb
fdivr
add
pop
in
imul
or
imul
jge
ret
and
fistp
sbb
add
mov
pusha
mov
cmps
jmp
or
test
and
test
(bad)
imul
push
fadd
adc
je
or
add
xchg
sahf
sub
je
inc
jne
jb
and
js
call
and
or
loope
xchg
lahf
adc
jbe
es
adc
adc
adc
aad
sub
jp
js
cmp
or
sbb
sti
mov
mov
mov
adc
push
push
ins
mov
stos
push
outs
push
xchg
es
pop
mov
aam
add
push
cmp
mov
pushf
mov
sbb
xchg
in
mov
dec
sub
ret
dec
sbb
xor
push
mov
pop
xor
aam
xchg
adc
int3
fiadd
icebp
push
sbb
mov
mov
iret
mov
lea
push
mov
sub
push
dec
and
add
cld
mov
jmp
and
mov
mov
push
cmps
push
xor
add
mov
pop
mov
add
inc
mov
scas
jecxz
pop
gs
rol
mov
and
ja
loopne
pusha
mov
jge
inc
scas
add
jo
mov
fdivr
inc
sub
mov
add
jne
sub
add
or
add
mov
stos
js
add
(bad)
sbb
mov
adc
stos
bound
or
cmp
push
add
jle
test
int3
add
test
test
inc
mov
pop
scas
rcr
mov
mov
aas
ds
cmc
xor
shr
jnp
add
je
xchg
mov
and
and
and
sub
(bad)
popa
or
mov
inc
pop
sbb
int
cmp
imul
adc
pusha
xor
cmp
cmps
add
hlt
sbb
mov
push
sbb
jo
ret
xor
jo
mov
pop
mov
sub
push
in
dec
sbb
sbb
in
aad
push
mov
int
test
cmc
dec
push
xor
stc
adc
ret
jne
adc
add
test
pop
lock
mov
ins
jo
mov
ret
xor
(bad)
pop
and
push
cmp
je
mov
call
jmp
mov
lea
mov
movs
add
push
push
aad
add
sbb
cmps
sub
dec
add
add
jg
pop
dec
sbb
sbb
push
push
lock
test
push
push
push
add
xor
ja
and
adc
clc
add
aas
call
xor
jmp
pop
mov
pop
jb
pusha
or
push
xchg
push
sub
adc
sbb
sbb
adc
pop
outs
loopne
and
and
add
out
pusha
mov
add
add
sub
push
or
add
jns
mov
sub
dec
push
inc
out
add
add
out
inc
inc
dec
cmps
add
je
add
rol
add
les
dec
outs
dec
mov
sub
pusha
mov
sbb
outs
add
bnd
test
jne
lea
mov
ror
add
(bad)
xchg
test
dec
sub
push
mov
add
and
xor
mov
je
or
sub
loop
push
les
pop
inc
or
into
(bad)
stos
push
add
inc
fild
dec
out
and
in
call
aam
add
add
adc
inc
(bad)
in
sub
jb
dec
pusha
inc
mov
or
sbb
push
je
push
push
dec
cmp
test
sub
inc
cmc
cmps
mov
mov
mov
je
jge
(bad)
fisttp
lock
dec
add
ret
lea
fild
je
mov
mov
push
push
jmp
inc
sub
add
mov
lds
adc
(bad)
retf
movs
pusha
jb
mov
popa
jmp
pop
mov
and
idiv
es
cwde
add
fdivr
mov
cmp
lock
add
(bad)
pushf
sti
cmp
add
sbb
mov
out
sub
pop
push
or
mov
data16
dec
sub
mov
mov
iret
popf
and
das
and
ja
iret
pop
cmp
fs
push
cmp
mov
mov
es
cmp
bound
mov
dec
add
mov
push
scas
cmp
shr
cmps
jg
mov
mov
mov
xchg
mov
sub
dec
dec
inc
dec
push
sub
fst
pop
mov
and
push
mov
sbb
mov
jmp
xor
xor
mov
les
xor
pop
mov
push
mov
repnz
xor
jae
xor
sbb
scas
xor
test
xchg
push
int
into
inc
or
xor
jl
and
xchg
hlt
mov
addr16
nop
fs
fwait
push
inc
std
pop
adc
sbb
pop
mov
mov
ret
or
in
add
ja
int3
int3
push
icebp
mov
mov
add
inc
push
dec
fisttp
add
cmp
ja
call
dec
jp
imul
fcom
push
adc
rcr
mov
mov
bound
mov
push
popa
xor
adc
mov
outs
enter
fiadd
lea
stos
mov
movs
dec
pop
fimul
mov
or
pop
pop
je
push
push
cld
fwait
cmp
add
inc
jl
adc
sbb
ficomp
dec
and
xor
repnz
push
inc
popa
nop
add
inc
inc
xor
in
xchg
lahf
mov
and
add
pop
inc
lods
or
sub
ins
mov
or
xchg
inc
mov
jb
test
mov
cmp
dec
pushf
add
add
retf
inc
sbb
add
push
inc
add
je
push
je
xor
add
or
push
adc
push
je
lea
inc
test
push
and
inc
sub
or
or
xchg
adc
xor
pushf
or
je
inc
lock
jne
cmp
sti
int3
mov
es
test
or
cmp
adc
aas
dec
push
add
ds
test
push
sbb
hlt
fldcw
loop
cmp
icebp
fadd
into
or
out
add
or
cmp
jl
pop
inc
pushf
push
adc
mov
nop
sub
push
in
push
sbb
cmp
lock
pop
ja
leave
mov
mov
cmp
pop
dec
stos
xor
sub
imul
jmp
and
jb
pop
xchg
jg
cmp
jmp
fiadd
cwde
fdivr
scas
push
sbb
adc
and
addr16
and
push
xchg
cmp
jo
cli
or
out
add
(bad)
pusha
push
dec
es
aad
mov
lds
cmp
jmp
add
and
sub
test
and
sar
shl
es
xor
dec
pop
enter
and
add
push
rol
xor
adc
inc
(bad)
loop
inc
xor
ror
cmp
lock
mov
stos
cmp
inc
cmp
adc
(bad)
pop
mov
adc
or
sub
inc
xor
div
mov
push
cmp
movs
leave
jo
in
shl
or
dec
add
movs
xchg
sbb
xchg
mov
xchg
mov
mov
push
lea
cs
jg
xchg
call
sub
jle
je
adc
inc
shl
add
xchg
in
mov
add
jl
xchg
dec
adc
je
push
imul
repnz
adc
test
retf
adc
test
sub
sbb
test
mov
push
imul
sbb
test
std
adc
and
test
push
mov
inc
and
test
mov
je
cmp
sub
test
mov
adc
into
push
xchg
adc
test
je
sub
std
cmp
inc
je
push
xchg
push
inc
je
push
push
jg
je
push
push
pop
bnd
push
push
push
add
sub
mov
cmp
repz
inc
aad
in
jne
pop
test
jo
inc
in
pop
dec
and
push
and
mov
add
js
sub
mov
xchg
adc
cmp
ins
pusha
scas
or
fwait
push
mov
xchg
call
lea
jecxz
sbb
jle
xlat
jl
sub
(bad)
mov
outs
sub
sbb
call
and
xor
leave
scas
mov
scas
scas
sti
inc
and
inc
add
jmp
and
push
lea
mov
push
and
fwait
push
add
and
and
xor
jb
cmp
aas
xor
xor
dec
pop
mov
push
sub
or
xor
jb
js
mov
aas
mov
(bad)
push
imul
add
and
stc
inc
xor
jl
adc
push
xor
and
pop
or
jmp
inc
jle
and
xor
adc
bound
aam
and
dec
cmps
pop
pop
and
or
jns
inc
mov
and
inc
sbb
adc
push
add
or
pop
adc
xchg
mov
outs
jmp
xchg
pop
jne
dec
sbb
mov
inc
mov
dec
and
mov
dec
mov
xor
inc
popa
adc
not
pop
mov
inc
mov
rol
inc
and
cmp
mov
inc
pop
aaa
adc
je
or
stos
loopne
add
loop
sbb
test
mov
mov
sub
pop
add
hlt
push
into
retf
and
out
(bad)
retf
push
dec
mov
adc
add
pop
or
test
sub
inc
mov
aas
nop
lods
or
and
lods
pop
mov
mov
retf
pop
gs
aaa
adc
dec
and
sub
mov
aas
pop
mov
sub
loope
mov
mov
cmp
(bad)
dec
xor
lea
mov
mov
mov
mov
mov
mov
retf
mov
and
js
pop
mov
mov
loopne
jmp
mov
sub
add
lock
xchg
adc
sbb
adc
add
xchg
sub
add
pop
jno
outs
lods
mov
je
xchg
stos
push
mov
jo
data16
bound
in
or
push
mov
jmp
call
clc
push
sar
mov
sub
adc
inc
and
mov
outs
or
or
and
or
cs
mov
cmp
sahf
add
lods
mov
add
inc
sbb
xchg
mov
lahf
mov
add
mov
cwde
jno
push
pop
add
shr
retf
push
mov
js
lea
add
jns
call
call
push
push
push
push
adc
xor
aas
mov
push
call
or
punpckhdq
pop
aaa
add
push
cmp
add
or
stos
loop
scas
sti
push
jg
or
and
pop
fist
les
pop
aas
ror
push
aaa
sub
cmc
and
lods
add
xor
jecxz
scas
inc
add
mov
or
jbe
dec
inc
cli
ja
xor
mov
test
mov
data16
sbb
jne
mov
push
lock
inc
inc
mov
lods
cmp
or
xor
js
sar
inc
add
jg
cmp
dec
sub
test
or
cwde
mov
mov
jmp
mov
add
sti
(bad)
jg
mov
and
dec
add
fcmovnbe
jge
push
mov
push
inc
jge
pusha
mov
xor
out
aas
add
je
pop
and
je
push
inc
test
jmp
add
add
mov
fist
mov
push
mov
call
das
mov
and
lea
pop
int
add
pop
add
pop
cdq
imul
or
sbb
call
(bad)
in
mov
dec
add
ins
and
je
push
and
and
icebp
jmp
or
adc
les
xchg
mov
or
push
mov
test
ja
add
or
xchg
xlat
and
push
cmp
mov
or
and
aam
add
add
or
lahf
inc
xor
inc
mov
test
mov
sbb
neg
cmc
jmp
mov
mov
adc
jg
or
sbb
je
mov
or
lock
jne
dec
adc
xor
adc
cmp
inc
mov
adc
shl
lahf
sbb
call
adc
push
mov
lea
xchg
or
push
cmp
fs
add
pop
push
adc
sbb
rol
ret
rcr
and
push
pop
stos
sub
mov
out
bound
mov
inc
shr
sub
add
xchg
icebp
mov
icebp
inc
cmp
and
jne
pop
test
je
mov
mov
adc
lods
sub
ins
sub
dec
and
pop
push
push
pushf
mov
jne
adc
inc
cwde
mov
ret
adc
fisttp
sub
daa
test
rcl
cmovo
sub
sub
nop
inc
frstor
push
sub
out
or
je
dec
jne
mov
inc
je
lds
je
push
add
or
sub
adc
lock
sbb
scas
mov
(bad)
push
mov
mov
aam
lea
push
mov
add
movzx
push
nop
cs
xchg
aam
sbb
push
add
or
sbb
sbb
push
int3
in
clc
adc
add
jecxz
mov
loopne
pop
cmp
fild
ret
mov
lock
inc
into
add
and
add
add
sub
mov
fbstp
sub
and
push
dec
push
push
retf
outs
push
inc
cmp
in
push
mov
ja
cs
lods
mov
jl
lea
sbb
jg
psllq
jnp
test
jne
and
dec
ficom
dec
push
sbb
add
inc
adc
cmp
and
loope
leave
test
dec
add
and
ror
out
lods
xor
add
jne
cmp
dec
das
inc
repz
aaa
popf
cli
call
fs
std
jb
aas
lds
mov
adc
mov
jne
cmps
mov
or
clc
add
(bad)
mov
and
push
mov
xchg
adc
in
jecxz
jns
cdq
or
jns
xchg
or
pop
push
push
gs
or
mov
pop
jne
or
add
push
or
push
add
add
inc
cmp
fdiv
adc
xor
test
data16
out
or
mov
add
enter
mov
shr
adc
fnsave
shl
mov
jl
in
out
add
cmp
adc
(bad)
pop
cmp
mov
stos
ins
or
sub
inc
adc
mul
in
arpl
or
stos
and
adc
stos
stc
jbe
fadd
ret
mov
inc
in
sbb
pop
sbb
lock
xor
pushf
test
jne
adc
mov
pushf
mov
mov
je
aad
sub
jo
ffreep
ja
push
je
sbb
adc
shr
call
push
mov
ret
sbb
jo
adc
shl
ja
je
lahf
iret
and
ds
sbb
sbb
loopne
or
dec
mov
or
test
pop
rcr
or
inc
inc
pop
pop
call
pushf
or
jmp
push
cwde
inc
and
xor
jo
pop
xor
inc
cmp
xor
scas
loopne
xchg
std
int3
int3
mov
mov
mov
add
sub
jecxz
mov
mov
mov
mov
push
mov
cmp
icebp
mov
data16
fistp
adc
adc
or
rcr
jg
data16
push
push
lea
mov
stos
lea
add
movs
call
(bad)
shr
and
add
push
push
mov
jg
fild
pop
push
dec
add
add
jo
inc
add
aad
inc
hlt
pop
test
pop
push
push
ret
adc
inc
mov
push
cmps
dec
iret
test
out
dec
inc
ins
(bad)
mov
sub
xor
push
add
jecxz
hlt
pop
test
inc
and
add
adc
pop
mov
mov
pop
mov
neg
gs
pusha
test
add
test
push
push
jecxz
verw
push
call
pop
push
xchg
add
shl
pusha
out
xor
or
push
aas
xor
sbb
push
or
inc
cmp
add
push
xchg
push
call
or
lea
std
addr16
adc
add
push
push
call
(bad)
or
xchg
pop
xchg
(bad)
sbb
jl
sub
pop
add
add
das
push
push
fcom
data16
call
into
push
out
mov
push
js
rcl
scas
add
add
in
in
(bad)
(bad)
push
cld
inc
push
mov
repz
sub
mov
add
push
push
inc
adc
sbb
call
inc
and
into
shl
jmp
inc
nop
or
sub
iret
or
mov
mov
cmp
lea
les
mov
lea
xchg
push
pop
mov
xchg
fist
add
push
push
push
add
sbb
in
arpl
call
mov
scas
and
je
in
fdiv
mov
add
inc
push
adc
jne
push
inc
mov
pop
cmp
or
push
push
mov
adc
or
enter
adc
push
or
push
sub
ja
mov
outs
lea
mov
loopne
or
in
mov
arpl
sbb
(bad)
lock
rol
mov
mov
push
nop
dec
or
inc
and
aas
outs
sub
mov
(bad)
loope
stc
cmovs
xor
inc
mov
mov
mov
mov
sub
mov
shr
adc
mov
pop
inc
inc
fisttp
mov
dec
or
xor
add
cmp
out
push
jl
adc
dec
fcomp
xor
push
push
add
and
mov
sub
pop
xor
mov
cvttps2pi
sbb
inc
int3
push
and
inc
adc
inc
sub
js
pop
pop
(bad)
mov
pop
lea
mov
adc
dec
sbb
outs
cdq
sbb
or
sbb
sub
bound
cmp
retf
dec
push
sub
sub
or
add
mov
into
ins
and
popa
add
push
push
add
adc
adc
add
sbb
inc
stos
ret
and
ror
jmp
add
scas
cmps
mov
ins
jbe
mov
adc
mov
push
push
cld
scas
mov
dec
and
push
push
push
mov
in
xchg
mov
iret
outs
add
test
jne
js
push
sbb
cli
pcmpeqb
cmp
sbb
mov
cdq
stos
jb
jnp
pop
mov
cmc
add
jno
hlt
push
(bad)
sbb
sbb
push
jne
push
daa
add
inc
int
cmp
push
fisubr
pop
jns
sub
jmp
cmp
push
sub
nop
cmp
aad
sbb
jne
outs
pop
pusha
fiadd
adc
dec
push
mov
push
call
mov
add
aaa
inc
std
mov
and
js
push
push
adc
xor
push
aas
dec
and
in
(bad)
test
push
xor
jne
cmp
add
jb
mov
sbb
fwait
shl
adc
hlt
inc
rcl
int3
and
push
add
dec
jne
ss
sbb
push
fdivr
xor
stos
andps
test
movs
movs
add
push
add
cld
add
mov
fbstp
gs
ins
je
push
sub
mov
lock
add
sbb
sub
push
push
push
xchg
xor
mov
or
rcr
add
jg
fiadd
jne
pop
add
in
lock
push
add
mov
adc
push
mov
mov
rol
adc
inc
or
adc
popf
in
and
adc
js
dec
pop
mov
push
mov
xor
xlat
or
cmp
jae
push
outs
pop
mov
mov
fwait
rcl
cmp
jae
mov
test
mov
ror
inc
cmc
add
adc
ret
add
aaa
(bad)
sbb
xor
xor
cli
ffreep
push
cmps
pop
je
sbb
sbb
je
cmp
jae
pop
pop
or
jbe
sub
xor
cmp
mov
pop
sbb
mov
or
add
xor
sbb
les
ins
cmp
out
mov
cdq
or
les
push
mov
push
aam
stos
mov
push
out
push
push
mov
cmp
cmp
into
fdivp
or
call
iret
or
call
dec
and
cmp
or
jne
sbb
cmp
shr
test
dec
pop
pop
cmp
popa
and
movs
inc
addr16
or
sbb
add
clc
call
fist
push
ret
rcr
ror
stos
mov
or
dec
adc
push
add
dec
add
xchg
sub
mov
sbb
cmp
gs
cld
int3
aam
jmp
mov
sbb
push
in
ret
mov
add
aas
inc
cmp
dec
and
add
ret
mov
mov
mov
nop
or
sahf
call
lahf
out
int3
push
push
jo
imul
mov
mov
push
popa
mov
cmp
in
cli
sbb
adc
add
repnz
dec
adc
jne
movs
call
or
or
scas
ret
xor
add
or
inc
repnz
jbe
outs
pop
jo
dec
and
repnz
ja
adc
nop
sbb
xor
mov
std
stos
dec
add
mov
jb
cmc
or
xor
push
arpl
aaa
inc
pop
clc
adc
adc
adc
scas
sub
adc
push
adc
adc
cwde
push
into
sbb
pop
ja
sbb
(bad)
jg
add
push
mov
call
mov
push
call
adc
cmps
and
sbb
dec
mov
mov
sub
dec
scas
add
pop
ret
retf
push
push
mov
add
pop
adc
inc
inc
mov
push
or
mov
aad
adc
dec
mov
(bad)
je
cmp
add
not
out
call
push
(bad)
sub
adc
lods
dec
add
pop
inc
xor
push
mov
mov
mov
xor
xor
aad
test
push
je
nop
mov
inc
icebp
test
(bad)
mov
pop
(bad)
std
call
(bad)
cmp
jne
xor
nop
cmp
add
mov
outs
pop
jae
out
cmc
call
mov
cmp
jne
inc
jmp
movs
jns
pop
test
sbb
pop
shl
add
cmp
cli
push
or
stos
push
sub
or
mov
lods
add
call
adc
lods
test
sbb
and
dec
cmp
cmp
loop
add
test
add
enter
adc
push
push
jg
push
add
cdq
dec
cmp
cli
add
dec
push
fdivr
sub
daa
add
push
data16
add
mov
jbe
or
cmp
push
sbb
inc
ret
mov
adc
or
or
add
das
fiadd
ret
pushf
paddsb
neg
aad
add
adc
fcomip
mov
jmp
push
mov
rcl
call
add
push
or
push
out
dec
adc
push
ja
inc
jae
cmp
sar
cmp
jl
test
je
enter
mov
std
adc
xor
(bad)
hlt
push
or
pop
pop
test
sbb
inc
mov
stos
jg
popf
nop
sub
xchg
cdq
adc
loopne
(bad)
mov
adc
inc
fadd
pusha
jne
popa
xor
add
popa
sub
sub
sub
mov
push
sub
mov
cmp
mov
xor
push
dec
pop
ret
add
dec
xchg
lds
xor
xor
leave
cmp
mov
push
or
add
and
cmp
jne
push
lea
mov
cwde
aam
cmp
xor
add
add
sub
jl
or
clc
xor
stos
xor
push
imul
xlat
jg
mov
adc
push
dec
mov
mov
stos
(bad)
mov
add
add
out
or
inc
mov
fcom
mov
sbb
movs
je
adc
or
clc
lea
or
pop
cs
and
sbb
pop
inc
pop
and
sub
ins
xor
(bad)
inc
test
test
arpl
or
(bad)
sti
jg
mov
jmp
test
push
jne
call
into
jne
mov
cld
push
add
push
push
push
xor
xor
mov
mov
mov
sti
inc
enter
call
inc
test
mov
das
add
push
sub
pop
mov
idiv
fld
neg
je
push
fmul
add
pop
out
lods
mov
mov
dec
push
jne
mov
repnz
mov
test
pop
push
push
xor
inc
inc
movs
sbb
push
xor
fadd
push
xor
inc
into
cmc
bound
adc
cmp
inc
cmp
adc
inc
sbb
aam
mov
int3
(bad)
inc
push
imul
adc
dec
imul
sbb
mov
mov
add
add
mov
cmc
sbb
out
push
test
dec
xchg
or
sub
pop
ret
stos
sahf
mov
fwait
push
sub
lea
call
sbb
iret
pxor
push
add
or
shl
sub
or
or
add
jmp
add
sub
xor
xchg
fdivr
sbb
in
cmps
fcom
push
push
and
adc
or
add
push
jne
in
aad
push
xor
push
int3
push
std
test
add
fisttp
push
and
jmp
add
add
fistp
jae
or
push
push
call
push
sbb
mov
int3
fbld
dec
jg
push
push
push
out
mov
dec
js
popa
clc
(bad)
out
mov
das
lea
cmp
jne
push
in
into
cwde
xchg
push
push
dec
test
jge
push
jmp
out
retf
mov
push
xchg
jo
inc
and
jne
jmp
cmp
aaa
cmp
test
popa
je
pop
push
push
and
sbb
add
pop
or
or
push
sub
xchg
mov
cmp
retf
xor
aam
fcom
push
and
rcr
aaa
add
dec
and
stc
out
sbb
scas
jp
das
mov
pop
icebp
fwait
bound
pop
mov
call
cmp
adc
int3
int3
pop
inc
imul
or
jo
imul
dec
or
xlat
or
sub
je
add
push
sbb
mov
pop
xor
dec
mov
imul
pop
sbb
sbb
sub
sbb
push
mov
sti
mov
add
ret
cmp
nop
xchg
adc
cmovl
sub
sbb
push
xchg
dec
push
lods
call
pop
push
aad
push
mov
sub
jecxz
cmp
add
cmps
out
add
dec
into
pop
pop
inc
call
adc
push
pop
mov
jo
mov
xor
ins
pop
adc
adc
push
test
add
pop
popa
cmp
jle
sub
push
push
sub
stos
pop
add
fld
cmp
adc
adc
add
clc
hlt
or
sub
pop
mov
cmps
dec
mov
inc
jne
mov
add
pop
mov
clc
inc
mov
mov
mov
mov
push
in
inc
add
adc
adc
cmp
ja
cld
scas
add
movs
outs
mov
test
push
push
je
sub
mov
mov
mov
cmp
je
movs
(bad)
dec
hlt
jne
in
add
mov
test
je
mov
mov
mov
ja
std
ja
add
cmp
add
inc
add
adc
sbb
cmc
sub
call
dec
bound
cmp
jl
mov
cmp
sub
sbb
inc
push
mov
mov
jbe
jg
add
mov
mov
das
shl
mov
lock
sub
out
icebp
popf
dec
cwde
js
push
je
push
xor
mov
test
jbe
and
pop
mov
and
mov
mov
mov
mov
mov
inc
cmp
jb
sub
adc
sub
ins
add
shl
dec
pop
push
mov
cmc
jle
mov
je
lods
dec
ins
loop
aad
push
scas
jmp
jmp
repz
add
xchg
add
xchg
jae
aad
cwde
add
pop
pop
mov
dec
cmp
push
orps
cs
or
out
jg
mov
mov
test
mov
xor
jb
fimul
mov
pop
pop
mov
aad
inc
test
repz
outs
je
add
adc
mov
cmp
ins
je
test
jne
cdq
add
add
es
adc
neg
stc
cmp
push
mov
push
mov
leave
outs
shl
cmp
push
call
add
jmp
dec
push
stos
lahf
or
push
pop
pop
retf
push
out
mov
pop
stos
lahf
pop
add
xchg
ss
xor
xchg
fsubr
inc
(bad)
ins
(bad)
imul
push
inc
inc
sti
push
lea
(bad)
pusha
sub
inc
and
mov
mov
add
test
out
sbb
jo
mov
mov
clc
clc
es
xor
and
mov
mov
add
jmp
movzx
jo
and
add
in
cs
sbb
cmp
stos
mov
or
lds
pusha
mov
sub
pop
sbb
or
cmp
fwait
xchg
or
xor
pop
mov
or
out
pop
add
cmc
pop
push
ins
sub
push
popa
loop
inc
aad
call
call
jne
push
push
push
push
les
call
out
jb
ror
dec
sbb
xor
jae
test
push
aaa
push
shl
and
test
pusha
fidivr
push
sub
aas
in
xor
mov
push
sub
jne
push
mov
push
push
push
call
add
push
dec
add
je
rcl
shl
lahf
les
add
push
fnsave
call
cdq
sbb
cmp
imul
push
xchg
enter
cmp
mov
and
mov
add
dec
push
and
or
adc
adc
jmp
or
test
shr
add
push
cld
jmp
mov
cmp
inc
inc
(bad)
cmc
sbb
repz
fs
pop
add
dec
leave
push
push
mov
push
aad
dec
xor
mov
mov
mov
or
mov
cmp
add
inc
ret
call
in
mov
push
push
mov
or
dec
mov
sub
or
and
adc
or
dec
inc
stc
cmp
xor
ret
mov
out
sbb
loope
rol
adc
ins
and
lea
push
push
ret
jmp
push
idiv
mov
mov
mov
jmp
cmp
inc
hlt
xor
cmp
inc
or
sbb
and
gs
pop
jae
adc
add
ficom
add
scas
mov
ja
mov
add
lock
and
popa
js
call
call
fsub
rol
xor
loope
jmp
fimul
add
pop
sbb
in
(bad)
push
fld
adc
mov
push
fst
and
mov
leave
je
ins
jo
add
and
mov
mov
sub
adc
mov
mov
test
jbe
in
fcom
call
retf
repnz
pop
loopne
outs
aad
dec
inc
mov
adc
repz
data16
push
in
and
nop
in
push
lahf
pop
mov
mov
mov
mov
loop
shr
test
ss
pop
add
mov
add
push
inc
mov
xchg
or
cmp
sbb
mov
fdiv
pop
inc
and
sbb
jl
or
inc
inc
add
mov
jns
jnp
mov
cmp
adc
mov
cmp
push
inc
lock
xchg
ret
or
rcl
adc
(bad)
mov
stos
or
sbb
mov
push
xor
sub
icebp
or
add
or
adc
test
shl
ret
fimul
retfw
jl
fmul
mov
and
push
sbb
retf
sbb
push
push
sub
mov
jp
les
sbb
push
sbb
or
mov
pop
and
das
ret
cld
(bad)
push
test
mov
ins
cwde
jne
add
or
and
and
in
jmp
cmp
bound
je
ret
mov
(bad)
fimul
inc
cdq
or
loop
dec
jl
cld
mov
mov
or
push
sub
mov
idiv
mov
jne
call
mov
add
call
js
adc
cmp
call
cmp
jno
dec
add
mov
inc
jmp
jo
mov
adc
push
push
add
or
push
std
call
enter
add
cmp
jne
loop
add
cmp
mov
jle
cld
outs
movsx
imul
mov
pop
inc
sbb
add
lock
inc
cmc
jl
jmp
inc
add
je
mov
test
inc
add
jmp
or
sti
add
dec
or
adc
in
fild
sub
mov
loope
mov
xchg
push
inc
cmp
jl
pop
pop
xor
je
sub
pop
mov
adc
int3
add
sub
push
pop
test
fild
test
push
mov
jne
adc
adc
outs
into
loop
or
or
xor
pop
aad
add
cmp
add
or
aam
retf
aas
sbb
dec
iret
add
adc
sbb
lea
xchg
mov
retf
mov
lods
sub
dec
and
les
das
pop
add
(bad)
inc
jnp
inc
shr
lea
sub
or
jl
xchg
xor
push
das
sbb
sbb
leave
das
and
lods
and
push
and
popf
int3
pop
dec
int3
and
or
les
mov
add
xchg
fs
xor
lea
test
mov
push
icebp
jmp
xor
add
pop
add
sti
test
and
pop
dec
push
inc
shl
adc
cld
outs
mov
bound
jle
scas
mov
add
jg
add
inc
add
aaa
jae
ror
lahf
push
push
push
outs
ss
jnp
fdivr
or
pusha
mov
mov
push
lea
xor
ja
shr
test
dec
lds
jb
sub
xor
sbb
add
fnstsw
mov
lea
mov
push
add
add
xor
mov
cmps
dec
adc
pop
mov
ror
mov
lock
sahf
ret
cmp
mov
test
push
mov
add
movs
mov
cdq
or
push
xchg
rcr
or
sbb
xor
add
out
mov
pop
mov
add
mov
add
xchg
pusha
xor
ss
adc
pop
sbb
jge
in
push
push
jbe
call
adc
jbe
call
enter
jp
(bad)
adc
mov
mov
pop
stos
data16
push
xor
cmp
lock
dec
dec
je
mov
push
push
call
mov
sahf
cmp
mul
push
sbb
je
push
mov
or
mov
inc
adc
clc
ss
test
mov
jmp
fmul
mov
adc
(bad)
jle
mov
mov
sub
mov
shl
mov
clc
in
push
repz
popa
ret
cmp
adc
sbb
fs
push
mov
or
add
cld
sub
cmps
adc
mov
mov
clc
mov
dec
xchg
cmp
jp
cs
dec
popa
pop
jmp
fbstp
mul
mov
enter
enter
sub
jle
pop
push
push
mov
std
pushf
(bad)
sub
lods
add
clc
jl
dec
push
cli
adc
std
pop
inc
pop
mov
stc
cmp
cmp
xor
ror
mov
cs
cld
mov
scas
out
dec
and
adc
test
test
or
add
pop
mov
jno
out
lods
add
ins
pusha
icebp
inc
add
or
dec
jecxz
add
add
ret
mov
mov
inc
jns
pop
repnz
scas
adc
sbb
add
cmp
and
jmp
cmp
inc
mov
inc
push
jae
scas
sub
cmp
cmp
nop
sbb
(bad)
scas
add
dec
push
rcl
scas
loopne
outs
jne
retf
mov
addr16
daa
daa
push
push
push
push
cmps
cmp
mov
xor
mov
shr
cmc
and
js
inc
sub
ins
movzx
or
inc
adc
test
inc
mov
ss
adc
jne
movs
adc
pop
pop
mov
fs
ja
or
and
or
loop
test
stos
adc
adc
mov
clc
adc
and
push
jae
bound
or
xlat
push
pop
adc
or
lds
std
sbb
sbb
jl
and
xchg
add
cld
dec
adc
test
or
mov
sub
add
or
shl
push
aaa
push
jo
scas
add
int3
call
xor
fisttp
and
popa
pop
add
imul
nop
cld
clc
addr16
and
push
adc
inc
add
test
outs
and
xchg
or
inc
add
mov
xor
cmp
jne
jle
inc
and
push
lds
xor
mov
or
and
call
je
inc
rol
sbb
sbb
mov
push
dec
ja
les
pop
ins
and
xor
stos
shl
add
add
add
addr16
adc
lock
je
push
or
pop
shl
push
xchg
mov
mov
adc
add
call
mov
mov
cmc
mov
stc
fistp
push
inc
or
mov
sbb
pop
add
push
or
add
cld
adc
loopne
sbb
cmp
dec
add
cmps
jle
add
mov
call
cmp
mov
mov
pop
test
inc
aas
push
jns
push
push
lock
sbb
cmp
sbb
enter
and
push
push
mov
gs
nop
mov
pop
ss
pop
nop
mov
cmp
push
add
nop
add
mov
add
lock
call
fs
xor
fcomp
pusha
or
xor
fld
cmp
sbb
mov
je
ins
retf
pop
fs
test
pop
dec
push
mov
or
stos
test
das
push
and
jle
les
push
push
mov
mov
add
inc
push
fwait
cmp
sahf
jg
into
(bad)
faddp
rol
lock
loopne
dec
adc
jge
push
push
jnp
cmp
push
sub
sub
in
or
dec
or
gs
add
jne
rcl
add
add
add
jae
adc
sbb
sbb
push
add
shl
call
adc
add
sbb
je
(bad)
dec
add
push
pusha
scas
mov
sub
push
stos
cli
push
call
mov
xor
push
into
(bad)
mov
xchg
mov
or
mov
push
jnp
or
rcl
aas
inc
or
(bad)
data16
je
aas
pop
jg
push
jge
shl
push
xor
mov
pop
leave
sar
sub
lea
das
(bad)
sub
jae
shl
jmp
or
or
jne
inc
add
jmp
pop
aas
pop
pop
add
inc
pop
les
push
loope
mov
pop
or
fwait
iret
cmp
lea
(bad)
(bad)
fstp
je
pop
add
lahf
cmp
jne
xor
mov
cmp
lea
je
pop
sti
jg
adc
xor
cmp
jae
sub
jg
ret
adc
mov
jae
das
sub
jne
sub
adc
(bad)
cmp
jb
pop
pop
sub
and
or
xor
sub
cmp
jb
pop
pop
inc
jg
fs
and
add
lea
call
add
call
mov
add
loopne
jp
inc
push
adc
sbb
and
jg
in
sub
stos
add
add
in
push
add
xor
cmp
push
mov
push
mov
inc
in
adc
jg
into
xor
cmp
push
in
(bad)
call
fs
dec
jle
cmp
jb
movzx
sub
imul
lea
cmp
add
shl
cmp
jae
push
push
loopne
test
ret
mov
or
shl
cmp
dec
lahf
add
inc
dec
or
push
pop
mov
jne
mov
sub
mov
add
mov
cmp
push
push
pusha
out
xchg
in
inc
sbb
adc
(bad)
call
dec
add
cmp
add
push
or
add
clc
sbb
sar
or
rcr
stos
adc
inc
and
cmp
(bad)
push
push
je
jmp
adc
addr16
pop
pop
push
lea
inc
mov
add
jmp
or
test
jmp
cmp
(bad)
sbb
inc
aaa
(bad)
test
jmp
push
inc
cmp
push
xchg
sti
jmp
add
les
aas
mov
rol
jmp
push
aas
popa
inc
rcl
add
cmps
or
hlt
push
xor
add
imul
aas
loope
rcr
test
shr
fs
and
adc
or
cmp
or
xchg
xor
inc
int3
add
clc
aaa
mov
mov
xor
dec
cmp
mov
je
mov
outs
xor
aas
cmp
scas
push
cmp
inc
sar
push
or
add
fsubr
mov
out
cmp
pop
and
shl
cmc
iret
sbb
inc
mov
adc
cmps
dec
or
ins
and
adc
mov
cmp
arpl
xchg
mov
mov
mov
push
idiv
fnstenv
lea
mov
nop
fist
sub
mov
inc
pushf
or
inc
mov
pop
jmp
inc
inc
inc
sbb
mov
sub
push
sbb
mov
das
sbb
adc
mov
mov
cmp
cmp
and
ret
or
mov
fnstenv
mov
inc
cmp
sti
cmp
stos
dec
ins
push
adc
mov
retf
mov
or
mov
add
pop
adc
mov
jb
sbb
mov
jl
(bad)
sbb
stos
sub
popa
add
ja
test
mov
adc
dec
adc
sub
ror
rol
ins
inc
mov
aad
std
push
push
ret
test
je
aam
cmp
jne
and
fwait
pop
or
adc
je
or
lock
jmp
cwde
inc
and
cmp
and
out
sbb
dec
mov
mov
sub
add
sbb
mov
rcr
or
cmp
or
fsubr
pop
movzx
pop
jo
and
mov
mov
dec
xor
lds
jmp
dec
in
fmul
data16
inc
jno
xchg
mov
inc
adc
push
push
xchg
mov
call
pusha
sbb
retf
loopne
std
jne
push
and
lea
mov
dec
and
lods
pop
rcl
popa
das
adc
adc
bound
cmp
cli
or
outs
not
add
adc
lahf
daa
inc
or
mov
add
loopne
mov
test
int
mov
test
inc
pop
mov
lahf
mov
test
je
xor
mov
shr
lock
xchg
adc
add
jp
(bad)
sbb
call
xor
int3
mov
lahf
add
push
jmp
sub
add
mov
scas
inc
push
outs
push
push
push
sbb
dec
pop
cmp
mov
daa
or
jbe
nop
fdivr
rcr
push
inc
or
mov
dec
(bad)
pusha
push
push
ror
and
add
mov
sub
sbb
mov
push
lea
add
add
scas
popf
mov
loope
jnp
mov
mov
mov
dec
and
add
ja
and
nop
add
pushf
mov
inc
mov
inc
test
les
mov
sub
or
add
pusha
(bad)
stc
lea
shr
inc
cld
ja
test
je
mov
cwde
sbb
fist
cld
dec
add
leave
mov
je
push
mov
push
push
push
call
test
or
and
jne
pop
pop
push
jb
bound
and
xchg
adc
iret
icebp
or
add
sbb
in
rol
sbb
xchg
pop
sbb
scas
int3
cmp
mov
mov
aas
mov
cmp
outs
sub
add
sbb
iret
pop
pop
mov
sub
push
inc
add
scas
sub
test
inc
jg
loopne
dec
add
push
and
mov
cmps
inc
mov
sbb
inc
hlt
lods
shr
adc
or
popf
jae
xor
xor
cmp
loope
test
xor
inc
mov
adc
imul
adc
add
push
rcr
pop
and
sbb
mov
loopne
js
jb
mov
add
je
xor
rol
ficom
(bad)
ret
bound
rcr
mov
fcomp
and
inc
cmp
add
add
scas
or
push
and
add
ret
pusha
sub
shl
in
mov
es
adc
xor
fadd
call
mov
xor
cmp
dec
xchg
inc
into
cmovle
inc
add
mov
jl
push
mov
bound
push
daa
arpl
xchg
test
js
dec
inc
in
mov
push
mov
and
loopne
add
jl
loopne
mov
lods
push
aam
add
(bad)
mov
add
and
push
lea
stos
(bad)
xadd
jl
xor
cmp
sbb
adc
and
push
rol
dec
stos
les
aam
xor
or
jg
adc
mov
push
or
jbe
shl
jne
xor
loope
lahf
jmp
adc
cmp
test
and
dec
push
je
cld
icebp
(bad)
jb
sbb
out
ret
js
cmp
push
into
adc
or
pop
dec
jl
push
lock
sbb
xor
gs
ret
xor
nop
retf
mov
je
comiss
repnz
xchg
jne
jo
pop
add
icebp
das
imul
jl
aas
inc
shl
and
inc
dec
push
sub
push
push
mov
rcl
adc
(bad)
jmp
movs
add
xor
sub
xchg
int3
sbb
inc
inc
push
cmp
dec
add
aas
dec
adc
adc
dec
int3
sbb
xor
pop
jg
mov
sub
cmc
je
push
mov
ins
clc
lahf
in
jle
add
outs
push
mov
mov
inc
mov
mov
pop
lods
rcl
mov
push
lea
push
movs
or
in
inc
add
cmps
mov
adc
pop
outs
inc
(bad)
(bad)
(bad)
out
adc
inc
adc
push
mov
push
call
cmp
mov
jne
mov
mov
mov
out
fadd
jae
sbb
mov
mov
sbb
(bad)
(bad)
call
mov
push
mov
xor
cmp
je
push
nop
mov
cmp
mov
je
dec
pop
das
cmp
mov
mov
sar
inc
outs
mov
or
sti
mov
jne
pop
pop
mov
mov
inc
(bad)
push
sub
pusha
loopne
cmp
(bad)
js
imul
dec
fs
sahf
sar
xchg
mov
push
push
jns
push
jle
or
nop
add
int3
mov
xchg
dec
xor
rol
xchg
sub
xor
ins
loop
in
fcmove
aas
sbb
xor
push
and
add
jp
add
mov
rol
fs
aas
les
and
dec
sbb
ret
(bad)
popf
jnp
mov
and
call
pop
imul
and
out
scas
and
jl
dec
mov
inc
ins
add
cmp
repz
mov
aad
push
and
push
push
push
adc
mov
call
outs
mov
inc
and
jp
and
pop
imul
pop
and
adc
push
adc
push
mov
jo
add
add
shl
cmp
jmp
jb
test
sbb
xor
push
adc
add
add
push
rol
mov
mov
add
cmp
add
mov
pop
inc
add
cmp
aam
jb
push
pop
mov
xor
inc
and
dec
dec
mov
pop
lea
stos
mov
cmp
lea
dec
dec
xchg
cmp
into
cmc
and
push
ret
mov
mov
jae
test
add
or
cmp
je
jmp
push
mov
mov
mov
sub
mov
sbb
xor
xor
aad
in
jmp
int3
dec
push
push
stos
retf
mov
fist
xor
sub
sbb
xlat
add
sbb
pop
add
jp
aas
leave
adc
je
mov
adc
outs
dec
rol
or
push
jmp
mov
test
je
mov
mov
cmp
jne
push
icebp
cmps
(bad)
mov
cmp
push
mov
sbb
jbe
mov
pop
adc
aam
mov
arpl
loope
inc
not
push
mov
push
pop
test
pop
pop
in
pop
xor
call
cmp
pop
sbb
add
or
retf
mov
jl
(bad)
mov
(bad)
fild
jg
test
inc
and
outs
fidiv
mov
in
push
jnp
pop
push
pop
cmc
adc
mov
pop
adc
adc
mov
dec
lea
pop
jle
out
shr
or
dec
lea
adc
pop
ins
nop
or
ss
out
and
pop
pop
ret
inc
push
cld
loope
mov
push
out
loope
dec
cmp
push
cmp
sub
movs
je
pushf
leave
inc
es
lea
push
adc
sbb
shr
icebp
aas
adc
push
jmp
mov
mov
(bad)
cmp
mov
je
push
les
mov
ror
sub
pop
mov
xchg
add
add
lea
mov
mov
clc
sar
pop
and
mov
lods
cld
(bad)
(bad)
stos
sub
jle
mov
mov
mov
mov
push
paddusb
sub
fsub
mov
cwde
nop
ror
hlt
ret
das
cwde
sbb
lea
pop
mov
xor
dec
pop
and
or
fcomp
pop
ins
sbb
mov
adc
test
or
pop
mov
xor
add
ja
add
dec
call
fcom
out
push
mov
push
push
stos
call
jmp
adc
sub
push
aas
rcl
xlat
xchg
sti
and
nop
rol
push
or
sbb
dec
(bad)
clc
stos
jb
jmp
jg
sub
add
and
push
lea
out
pusha
push
retf
cmp
jne
sub
adc
pop
pop
xchg
es
mov
(bad)
jmp
sbb
(bad)
outs
sub
int3
xlat
fdiv
neg
push
push
push
or
and
adc
or
rol
mov
ds
cmp
jnp
shr
and
push
ret
xchg
imul
add
cmc
loopne
out
inc
sbb
mov
dec
adc
and
cld
mov
cmp
sahf
push
je
pop
loop
cmp
jbe
push
or
cmp
jne
call
mov
or
sar
dec
add
push
push
rcl
inc
sti
push
dec
scas
(bad)
loopne
jne
pop
mov
add
in
push
or
mov
sub
out
sub
cdq
je
push
inc
mov
adc
(bad)
in
mov
shl
mov
test
aaa
inc
jno
mov
pop
inc
pop
loopne
neg
outs
(bad)
cmp
pop
push
cmps
cmp
bswap
add
cmp
jne
cmp
out
clc
add
je
je
cmps
sbb
xor
sbb
sub
jno
pushf
mov
aad
jb
mov
xchg
push
mov
adc
lock
mov
push
add
cwde
out
jne
out
mov
retf
je
push
adc
and
and
push
add
inc
shl
sbb
xor
add
or
xor
aaa
cmp
or
or
mov
mov
je
xor
jle
mov
inc
and
xor
fs
add
fsubr
dec
mov
test
pop
bound
addr16
data16
xchg
scas
sub
add
or
or
xchg
retf
ja
or
jbe
dec
in
adc
fistp
inc
jg
(bad)
cmps
sbb
dec
dec
dec
aas
push
xchg
dec
int3
cmovae
xor
sub
dec
cmp
add
lock
push
add
push
lock
dec
add
push
and
or
pop
test
mov
mov
out
(bad)
jg
in
or
movzx
mov
lea
mov
add
aas
jge
or
inc
cmp
jb
into
adc
(bad)
ja
sbb
int3
sub
mov
push
cmp
mov
inc
movzx
add
push
movzx
xor
add
test
fiadd
pop
mov
lea
or
mov
out
mov
and
push
shr
add
add
call
and
cmp
js
imul
add
test
popa
sub
push
ins
inc
and
sub
add
lea
cmp
lea
dec
gs
add
sub
adc
adc
add
mov
popa
and
inc
add
dec
and
push
mov
add
idiv
das
call
(bad)
push
and
push
push
push
adc
enter
push
push
xor
(bad)
je
test
je
cs
push
adc
pop
adc
or
adc
mov
push
imul
push
cmovo
add
add
cmp
gs
in
pop
fistp
retf
rcr
and
adc
push
xor
(bad)
shl
ins
js
ins
and
inc
sbb
sbb
dec
(bad)
add
add
test
dec
sbb
push
and
mov
aaa
jno
lods
lahf
cmp
out
adc
sub
pop
xrelease
jne
cmp
fdivr
jbe
cmp
jne
add
cld
out
and
sbb
or
ret
add
cmc
cmp
dec
jle
cmp
scas
clc
(bad)
adc
jl
pop
pop
pop
icebp
mov
add
mov
inc
popf
fwait
xor
popa
jmp
adc
mov
fwait
push
xchg
aas
dec
sub
push
mov
je
mov
and
pop
and
dec
popf
fst
dec
scas
stos
adc
jne
xchg
out
psrad
add
inc
add
add
mov
inc
and
mov
(bad)
(bad)
call
mov
test
inc
ror
xor
movs
or
add
inc
inc
pop
mov
pusha
inc
or
pop
pop
mov
dec
sub
enter
or
pop
push
push
and
sbb
push
push
push
push
push
sub
lahf
call
sbb
push
adc
sbb
sbb
adc
fsub
clc
xchg
and
inc
push
fld
xor
or
and
push
fwait
or
cmp
mov
push
mov
xor
mov
lahf
inc
fnstsw
mov
mov
xor
xchg
or
add
(bad)
cmp
mov
jne
pop
pop
mov
mov
(bad)
fwait
clc
outs
sub
mov
test
je
mov
je
stos
ja
(bad)
push
push
push
call
test
push
call
rcl
cmp
inc
cdq
or
sbb
sub
add
push
mov
lds
push
adc
xlat
mov
movs
add
inc
out
js
pop
fistp
jmp
xor
fwait
int
repz
push
mov
or
mov
sub
fwait
cli
mov
pop
or
fist
mov
or
rcr
stos
push
mov
adc
push
jmp
cmovl
mov
mov
cmp
jb
xchg
loopne
jne
mov
mov
mov
inc
add
push
mov
sbb
test
add
and
call
lahf
mov
add
dec
or
adc
dec
sbb
(bad)
sbb
dec
and
push
mov
test
push
push
mov
and
mov
test
lea
je
push
and
mov
xor
push
scas
dec
pop
ret
add
and
push
and
jmp
lea
add
stos
fwait
(bad)
mov
in
jnp
mov
sub
and
mov
add
lea
push
push
lock
push
push
aas
push
aam
and
mov
push
mov
push
or
add
ffreep
mov
loopne
cmp
lea
adc
lea
mov
lock
clc
mov
leave
add
push
push
and
inc
cmps
sahf
scas
lods
pop
sbb
ror
push
jnp
clc
jg
cmp
jmp
movzx
add
inc
add
mov
out
adc
lods
mov
icebp
mov
mov
cmp
add
mov
mov
out
dec
call
ror
and
(bad)
call
shl
test
je
and
add
add
add
adc
rol
and
aam
mov
sub
cmp
loopne
aas
cmc
jl
mov
or
frstor
and
call
add
pop
add
mov
sbb
lock
dec
adc
mov
outs
jmp
mov
cld
jne
mov
mov
jmp
mov
clc
fwait
clc
fisttp
mov
cmp
add
sbb
(bad)
mov
add
scas
jbe
test
ss
dec
add
jns
jl
add
adc
inc
add
xor
and
pop
or
dec
pop
mov
add
sbb
and
push
push
sub
or
or
shl
dec
mov
fisubr
mov
dec
pop
add
push
push
jbe
dec
push
push
pop
ret
cmps
pop
push
push
iret
hlt
shl
in
pop
or
mov
cmp
mov
or
fimul
call
adc
ror
fdiv
mov
test
pop
adc
fwait
or
xchg
add
(bad)
jne
jle
dec
sub
add
jmp
mov
xor
test
je
dec
add
and
and
loope
xchg
cmp
cmp
push
xlat
push
xor
xor
jmp
push
les
cs
cmp
adc
push
or
cs
pop
es
xchg
cmp
xor
jge
mov
add
sbb
rol
jp
ret
adc
mov
(bad)
push
je
push
and
push
cmc
loop
mov
inc
jecxz
dec
sub
add
sub
je
or
push
call
push
add
and
cld
call
mov
xchg
gs
xor
xor
adc
iret
sub
xor
mov
add
out
out
sub
mov
std
mov
push
ins
js
rol
sbb
dec
add
or
add
mov
or
mov
add
push
dec
dec
or
and
push
add
mov
push
mov
fld
adc
ins
arpl
inc
loopne
mov
sbb
mov
xor
jecxz
mov
mov
mov
mov
or
rcr
mov
push
inc
and
mov
loop
sar
push
push
push
push
jmp
js
add
rol
push
add
or
ror
push
dec
and
add
sbb
clc
daa
add
and
iret
mov
stos
mov
fadd
jbe
mov
mov
in
xchg
repz
xor
lock
pop
adc
push
mov
mov
je
lahf
scas
or
call
push
push
call
xchg
sbb
test
sbb
(bad)
or
mov
mov
stos
mov
arpl
or
jl
ss
or
mov
cmp
jae
jbe
fcomp
ficom
and
mov
push
ja
add
je
jne
inc
mov
(bad)
jmp
fld
inc
cmp
jb
pop
xor
cmp
pop
pop
setne
pop
fist
dec
or
shl
or
dec
and
cmp
jbe
dec
mov
sti
popa
ret
mov
jbe
(bad)
pop
jmp
hlt
mov
mov
mov
add
add
test
fs
ss
sub
mov
mov
mov
cmp
les
test
test
add
pusha
aaa
cmc
das
adc
dec
lea
cmp
add
pop
and
push
mov
pop
dec
pop
inc
or
retf
sbb
and
sbb
and
sbb
and
add
fsub
mov
stos
in
ja
in
(bad)
mov
test
je
lea
jmp
push
push
push
adc
push
push
push
(bad)
jmp
int3
mov
test
adc
iret
loopne
add
and
push
adc
mov
mov
ins
add
lea
xchg
dec
and
mov
je
xor
cld
and
xchg
les
call
mov
inc
mov
mov
cmps
call
dec
jo
and
add
or
or
ja
jae
inc
xor
dec
xor
sub
test
or
mov
mov
or
in
arpl
mov
retf
sar
add
leave
push
push
je
fiadd
je
cmp
and
adc
fstp
push
sbb
cld
push
lea
push
call
mov
into
(bad)
fwait
and
push
call
mov
push
push
push
inc
push
or
mov
adc
or
jb
dec
dec
push
dec
add
mov
pop
pop
mov
mov
std
pop
add
lea
inc
or
inc
push
xor
rcr
mov
add
aad
pop
cwde
or
sbb
pop
div
sub
or
mov
adc
mov
inc
scas
jo
rol
fdiv
sub
iret
je
adc
ror
loope
sar
dec
add
inc
add
addr16
je
(bad)
out
xchg
push
or
dec
add
jl
jmp
outs
sbb
pop
pushf
sub
add
mov
jmp
push
ror
fistp
adc
xchg
add
mov
pop
or
in
adc
mov
popf
mov
pop
je
test
mov
xchg
pop
push
sahf
or
call
jg
add
ins
mov
push
mov
pop
into
je
push
aaa
adc
or
jmp
mov
push
and
or
xchg
jmp
icebp
cs
adc
adc
rcr
adc
jnp
jns
pop
jb
je
ret
idiv
adc
push
dec
jmp
mov
(bad)
clc
pop
test
ins
sbb
inc
jl
xchg
push
or
les
mov
stos
dec
pop
cmp
sahf
jne
jb
push
pop
add
sub
fwait
and
and
adc
mov
adc
dec
ret
mov
cmp
push
out
push
sbb
pop
cwde
add
mov
(bad)
fistp
aas
and
adc
lea
mov
jo
push
xchg
pop
push
and
mov
bound
and
fdivr
ret
jo
test
mov
sbb
setae
ins
mov
sub
test
fcomp
add
aaa
popf
int3
int3
paddd
ins
pop
mov
cld
jmp
mov
cmp
push
mov
call
aaa
xchg
test
mov
lea
sub
add
ss
mov
adc
dec
(bad)
or
sbb
jo
loopne
or
stos
sbb
mov
fidiv
inc
inc
mov
sub
scas
sub
ror
add
jmp
push
ins
xchg
shl
stos
pop
cdq
fsub
icebp
ins
mov
scas
div
adc
xchg
push
adc
jge
fwait
adc
jge
adc
mov
xchg
mov
(bad)
retf
adc
sbb
xchg
loope
popa
scas
adc
add
fadd
inc
test
(bad)
mov
push
mov
inc
sub
ror
sub
ror
adc
aad
sub
cwde
or
scas
or
add
mov
in
or
add
(bad)
mov
mov
push
push
or
pop
pop
mov
pop
pop
ds
pop
and
inc
pop
dec
(bad)
or
push
push
call
pop
adc
sbb
mov
iret
and
pop
push
aad
inc
pushf
arpl
cs
in
push
(bad)
jo
sub
sbb
fs
pop
or
adc
ins
test
mov
adc
jae
sub
push
loopne
add
mov
dec
fstp
add
mov
inc
and
xchg
rcr
cwde
xor
dec
pop
push
add
xor
icebp
mov
adc
mov
and
sbb
or
jp
mov
packsswb
test
sbb
imul
jp
and
out
and
jmp
sbb
adc
mov
lds
dec
dec
cmps
mov
cmp
pop
inc
xor
xchg
aas
out
xchg
dec
cmp
push
and
add
jl
sar
mov
dec
push
mov
test
mov
jne
popa
xor
pop
mov
pop
data16
cmp
data16
into
(bad)
daa
add
clc
cmp
pop
imul
jp
pop
out
and
push
cld
fwait
and
push
lea
push
push
push
daa
inc
rol
add
push
push
call
or
pop
sahf
pop
pusha
lock
adc
xor
push
mov
add
adc
mov
mov
ins
mov
add
adc
pusha
enter
mov
dec
add
xor
das
fwait
adc
getsec
mov
addr16
aaa
adc
je
pop
adc
rcr
lea
in
xchg
ss
sub
test
jge
and
jp
les
mov
(bad)
mov
lea
or
inc
dec
push
push
push
call
push
ja
or
mov
les
or
je
sbb
sbb
dec
xor
sbb
cmps
adc
je
mov
mov
sbb
mov
sbb
add
cld
cmp
mov
aas
jno
and
inc
or
cld
call
adc
cmp
scas
es
pop
(bad)
inc
fisttp
jecxz
push
fiadd
ja
mov
mov
and
dec
or
xor
pop
mov
pop
mov
gs
jne
test
mov
add
ins
mov
push
cmp
pop
pop
sub
add
add
push
inc
rol
popf
lea
add
jmp
fimul
add
jge
adc
rcr
out
ja
sbb
mov
je
mov
cmp
jno
dec
cmp
push
rcl
pop
xchg
sti
ja
push
pop
add
fs
je
mov
push
cmp
lock
mov
test
clc
mov
jl
adc
pop
jbe
push
and
xchg
cmps
push
ja
jg
and
mov
sbb
jmp
fcomip
dec
cmc
lea
sub
cmps
lods
sub
xchg
and
adc
add
push
add
adc
sub
mov
sbb
dec
add
add
or
xor
jne
and
clc
cmp
(bad)
adc
sahf
jp
dec
mov
jecxz
jns
cmps
cs
adc
mov
lea
cmps
push
stc
mov
and
add
or
enter
fwait
cmp
jl
mov
mov
mov
outs
adc
mov
mov
mov
sar
movzx
loopne
add
xchg
inc
loop
or
or
sub
pusha
das
mov
xchg
lahf
pop
sub
jp
stos
js
push
add
or
nop
push
push
push
xor
sbb
mov
inc
or
popa
pop
fdivrp
(bad)
aas
push
retf
cmp
enter
ror
adc
loope
jmp
ja
mul
shr
test
mov
fsubr
cmp
inc
mov
sar
and
mov
test
fmul
push
and
icebp
jmp
inc
je
mov
xor
sub
mov
mov
pop
xchg
out
out
push
xchg
sbb
push
adc
cmp
mov
aas
in
push
loopne
push
and
and
adc
leave
xchg
retf
lods
in
mov
jg
inc
push
imul
mov
aas
cwde
jmp
sbb
adc
outs
jb
daa
add
mov
cmp
cmp
inc
js
dec
and
sub
mov
mov
jne
or
cmp
add
push
pop
fnsave
stos
out
stc
popf
mov
jnp
jle
jmp
jae
add
test
cmp
loop
pop
xor
sub
or
lar
and
push
not
je
sti
loope
es
adc
dec
test
jae
cdq
sub
(bad)
cld
xchg
call
mov
mov
sar
add
mov
or
retf
xor
or
mov
es
js
popf
rcr
popa
add
xchg
clc
dec
pop
inc
xor
sub
ret
int
add
(bad)
mov
xchg
sub
fs
(bad)
sbb
arpl
sbb
cmc
inc
mov
inc
jl
inc
and
ret
outs
jbe
je
jmp
push
xor
and
ror
clc
enter
push
out
cmp
push
nop
jmp
sub
ret
jge
pop
das
retf
stos
clc
lds
push
sahf
adc
add
push
mov
rcl
adc
xor
cmp
pop
std
push
mov
sub
lahf
sbb
fcom
(bad)
fist
and
call
pop
inc
push
push
jo
adc
mov
sbb
data16
dec
lods
movs
pop
cmp
out
movs
cmp
fstp
mov
jne
stos
xlat
jae
sub
into
cmc
push
test
cmc
jnp
add
mov
test
shr
mov
lds
push
xor
retf
jmp
cmp
inc
inc
sub
xor
or
xchg
cmp
dec
add
or
dec
lea
or
rcr
shl
(bad)
push
rcl
sar
sti
mov
sar
pop
or
and
push
or
push
xor
xchg
xor
add
arpl
push
or
pop
(bad)
push
xor
je
iret
iret
pusha
or
pop
add
mov
enter
je
popa
mov
rcl
(bad)
or
adc
dec
sub
dec
imul
add
sub
sub
lea
lock
jp
sar
lahf
test
add
add
add
cmp
aaa
add
lea
xchg
shl
adc
or
mov
and
(bad)
adc
inc
nop
mov
mov
les
and
not
and
ja
rcr
add
sub
dec
(bad)
fist
add
rol
add
fucom
jmp
jl
sbb
ret
add
add
jno
xlat
ror
loop
jl
sub
bound
add
mov
(bad)
sar
add
jo
nop
iret
mov
jl
dec
xor
push
push
mov
add
dec
and
test
cdq
clc
mov
hlt
daa
jle
inc
xor
push
cmp
stos
std
push
lods
scas
jmp
pop
adc
pop
inc
js
lea
jl
mov
mov
push
push
and
push
mov
scas
and
inc
inc
adc
pusha
push
push
mov
mov
or
and
push
call
xchg
mov
add
push
call
push
mov
call
hlt
call
inc
sub
sbb
jp
and
fcmovbe
push
inc
mov
pop
add
shl
inc
movs
add
outs
sub
stos
or
and
pop
push
movsx
shr
movsx
stos
cli
(bad)
call
jle
lea
add
add
mov
mov
sub
lea
mov
mov
mov
fdiv
or
cmp
mov
mov
or
inc
sbb
pop
or
je
mov
push
push
push
call
std
cs
je
mov
push
lea
sbb
pop
sahf
xor
push
(bad)
mul
les
adc
dec
sbb
ror
sub
inc
add
dec
mov
test
je
mov
xchg
or
mov
std
out
aas
hlt
(bad)
mov
mov
add
push
push
call
sbb
jle
mov
mov
push
push
sub
push
(bad)
push
sbb
and
out
out
sbb
mov
rcr
std
mov
cmp
jne
(bad)
fwait
jb
adc
bts
push
mov
test
mov
je
mov
test
je
mov
fist
(bad)
into
fwait
sbb
push
push
call
cmp
popa
push
test
adc
or
dec
xchg
push
repnz
(bad)
cmp
sbb
push
adc
push
call
mov
pop
xor
daa
cwde
or
popf
xchg
or
inc
adc
psadbw
aas
jne
sbb
inc
lock
sub
push
add
pop
push
push
push
adc
mov
mov
lds
int3
lds
mov
in
inc
push
inc
cmps
loopne
push
aas
adc
mov
leave
inc
call
popa
push
mov
mov
outs
fild
push
cmp
dec
inc
and
gs
cmp
ror
retf
or
mov
and
dec
inc
and
ret
ins
sub
push
cmp
(bad)
push
mov
push
push
push
fwait
dec
in
addr16
or
dec
cmp
clc
mov
leave
les
push
hlt
outs
mov
daa
push
adc
adc
mov
das
sbb
pushf
or
call
inc
icebp
sti
daa
call
jl
push
push
stc
mov
test
push
inc
and
push
test
push
add
add
outs
pusha
call
outs
dec
ja
and
and
push
or
mov
add
add
lods
nop
je
inc
jno
adc
adc
and
ds
or
sbb
adc
dec
and
out
mov
cmp
sub
xor
inc
sub
push
add
and
mov
mov
aaa
sbb
dec
pusha
in
js
inc
push
pop
fs
jg
adc
lea
lea
cmp
jge
sbb
jne
add
repz
or
pop
sub
(bad)
std
jae
dec
add
and
cmp
jge
mov
sub
pop
bndldx
jecxz
punpcklwd
stos
jecxz
mov
fcom
mov
loopne
jne
pop
dec
inc
add
add
add
dec
out
inc
jne
add
je
adc
jae
push
mov
xor
inc
xor
(bad)
test
(bad)
or
mov
xor
scas
(bad)
cmps
push
push
ror
je
pop
cwde
cli
pop
xor
mov
push
jae
inc
pop
dec
push
mov
popa
inc
push
imul
push
jnp
push
lods
cmp
or
lahf
push
push
push
pop
mov
push
mov
scas
jle
jne
outs
mov
push
jne
sbb
call
xor
adc
adc
push
push
loopne
mov
fld
push
push
in
adc
pop
push
fwait
test
mov
push
lock
add
ror
ret
mov
inc
mov
pop
mov
inc
lods
add
pusha
mov
jns
jge
jmp
stc
and
aas
adc
loopne
cld
xor
inc
ds
or
rol
or
mov
add
and
js
xchg
add
adc
inc
or
xor
inc
test
push
add
ins
mov
xchg
and
stos
cmp
jae
ins
xor
mov
mov
mov
mov
and
mov
mov
push
push
call
das
mov
in
fisttp
adc
mov
add
fstp
ret
nop
sbb
pop
test
arpl
fcos
mov
rol
clc
add
mov
xor
call
les
push
mov
push
push
call
mov
sbb
xor
dec
add
pop
gs
cs
mov
push
mov
sbb
push
add
addr16
gs
add
or
fcomip
mov
aaa
add
mov
push
jmp
sbb
pusha
inc
mov
push
push
push
and
pop
jnp
icebp
mov
adc
pop
adc
pop
mov
mov
push
cmp
add
sbb
add
add
(bad)
inc
push
add
es
push
test
pop
mov
add
mov
dec
(bad)
push
inc
cmps
inc
sbb
scas
dec
lsl
lahf
pop
scas
sbb
movs
or
push
fwait
ins
mov
add
mov
dec
push
push
test
add
mov
xor
and
push
enter
xor
shl
inc
inc
add
and
push
call
fild
jo
pop
ficomp
movhps
mov
fimul
jl
cwde
std
sbb
jo
pop
or
add
sbb
xor
adc
and
shr
mov
ja
xor
add
add
iret
sar
ret
cmp
push
mov
sub
pop
stos
cmp
add
js
xchg
rol
xchg
pop
mov
mov
inc
popa
cmp
popa
adc
cmp
(bad)
cmp
(bad)
cmp
js
adc
adc
cmp
(bad)
cmp
(bad)
cmp
or
pop
mov
mov
(bad)
cmp
or
mov
pop
(bad)
push
aas
and
int3
loopne
xor
mov
xchg
inc
add
add
xor
inc
inc
inc
ss
add
xor
inc
popa
ret
loopne
pop
dec
inc
push
cmp
ret
mov
mov
mov
and
mov
adc
push
inc
sub
and
inc
lahf
inc
int3
push
ret
cmp
lahf
(bad)
loopne
sbb
setno
test
scas
cmp
inc
enter
add
inc
push
push
inc
dec
es
dec
mov
dec
inc
enter
pop
push
inc
add
lds
add
push
rol
adc
and
or
shl
add
jmp
lea
popw
inc
inc
inc
add
mov
inc
add
enter
inc
ins
ret
pop
mov
cld
or
add
mov
push
push
call
dec
mov
xchg
pusha
mov
xor
or
or
add
nop
xor
scas
inc
add
or
inc
and
xchg
scas
inc
or
mov
scas
inc
scas
nop
xor
or
or
test
sbb
and
icebp
mov
pop
rol
loop
sbb
mov
lea
xchg
popa
shr
push
mov
sbb
add
in
push
dec
add
adc
dec
add
xchg
dec
push
and
pop
xchg
dec
pop
daa
sbb
or
push
and
das
inc
push
push
jmp
adc
push
sub
push
jg
push
and
inc
imul
xchg
push
popa
and
inc
inc
or
aas
stos
and
push
jmp
aam
add
mov
mov
jne
xor
jmp
test
int3
or
call
mov
call
xor
sbb
sub
add
call
sbb
mov
xchg
mov
std
daa
sbb
mov
fwait
lds
ror
lds
or
sbb
es
cs
sbb
add
retf
js
ins
rcr
sbb
out
mov
inc
movs
push
and
adc
xor
mov
call
pop
pop
pop
and
mov
jg
dec
nop
ss
ja
or
sbb
and
mov
jle
jo
ret
(bad)
aas
add
fs
ret
aas
push
cmp
fs
mov
popa
inc
mov
add
shl
inc
stos
push
call
ins
int3
push
xor
lahf
and
sub
lahf
sub
movs
ret
aas
ret
sub
sub
cmp
lahf
cmc
xor
sbb
adc
lds
cmc
shl
pop
hlt
push
sub
inc
pop
inc
es
xchg
add
fldenv
push
pusha
pop
sub
xor
push
mov
leave
add
pop
pop
push
inc
xchg
adc
cmp
call
pop
or
pop
and
lods
add
dec
test
push
pop
aas
pop
pop
dec
dec
test
pop
aas
loope
movs
inc
pop
cmp
je
push
sub
loopne
iret
xor
pop
inc
inc
sub
inc
nop
or
dec
iret
inc
movs
ret
iret
inc
mov
or
add
ds
and
xor
jg
es
inc
int3
and
movs
and
add
xchg
dec
movs
push
pop
and
dec
dec
dec
test
push
pop
aas
dec
pop
dec
pop
test
dec
cmp
adc
push
sub
movs
ret
dec
push
shl
sub
dec
or
adc
dec
mov
push
sub
dec
sub
movs
ret
aas
ret
sub
or
and
dec
cmp
test
mov
lahf
inc
or
test
xchg
xchg
dec
inc
mov
dec
dec
dec
inc
sub
stos
dec
mov
scas
add
dec
aas
dec
test
dec
nop
xchg
or
aas
dec
or
mov
dec
cmp
nop
push
ret
push
dec
sub
dec
mov
mov
dec
inc
mov
xchg
or
or
test
xchg
mov
ds
adc
lods
or
mov
aas
test
aas
xchg
or
dec
dec
aas
dec
mov
xchg
push
ret
mov
sbb
lahf
and
dec
push
movs
push
pop
add
pop
inc
lahf
inc
push
rol
and
test
or
popa
inc
lahf
pop
nop
adc
mov
adc
mov
and
pop
dec
dec
test
push
pop
aas
pop
pop
dec
pop
test
pop
cmp
xchg
xchg
adc
mov
lahf
pusha
mov
pop
inc
lahf
sbb
nop
or
scas
xchg
inc
sub
scas
push
push
mov
xchg
lock
scas
test
nop
xchg
or
dec
or
mov
dec
aas
mov
xchg
or
ret
mov
mov
dec
sbb
and
adc
cmps
push
mov
in
add
jne
es
push
inc
and
je
inc
retf
cdq
push
cmps
(bad)
dec
dec
hlt
es
inc
pop
(bad)
and
pop
adc
sbb
or
cmp
push
and
and
fld
and
inc
mov
add
inc
sub
or
sbb
push
popa
inc
fisttp
and
aas
mov
add
stos
nop
push
jg
nop
or
inc
ss
sbb
push
fadd
imul
jg
int
inc
sbb
adc
add
lea
jg
and
jg
inc
push
xchg
push
jg
push
popa
and
inc
dec
or
xchg
jg
mov
or
push
jg
movs
xchg
pusha
imul
jg
nop
push
fs
jg
inc
sbb
add
adc
and
int
xchg
loopne
push
retf
and
movs
jg
movs
add
jg
jg
dec
test
and
mov
push
push
push
push
xchg
inc
and
adc
add
js
mov
sbb
dec
and
adc
mov
dec
call
mov
cmp
mov
je
lods
add
adc
xor
adc
pop
ret
cmp
add
jp
mov
mov
arpl
mov
mov
mov
mov
mov
cmps
call
mov
mov
and
add
cmp
jb
sub
xor
pop
mov
pop
sahf
add
fadd
mov
or
hlt
cmp
rol
push
push
dec
add
cmp
xchg
adc
mov
or
in
loop
(bad)
fbstp
push
push
mov
test
push
jne
test
jne
xor
mov
xchg
or
xchg
add
add
xor
mov
push
lahf
and
sub
mov
cmp
je
lea
cmp
ja
call
mov
sub
aaa
inc
pop
mov
repz
jg
cmp
push
push
lea
fistp
mov
sbb
mov
mov
call
add
jne
or
push
rol
pop
(bad)
jne
fcomp
loopne
es
mov
fmul
sub
jl
addr16
inc
mov
fist
xor
inc
mov
lea
out
pop
cmp
(bad)
cmp
dec
dec
sahf
punpckhbw
cli
adc
cmp
xchg
and
dec
add
push
jmp
pusha
add
inc
js
jl
and
inc
xchg
int3
add
dec
scas
inc
mov
inc
sbb
inc
and
dec
and
inc
(bad)
and
cdq
sbb
mov
inc
push
and
ds
fs
xchg
sub
mov
inc
ret
dec
and
or
add
cmp
inc
inc
xchg
cmp
cmp
je
(bad)
xor
add
es
mov
jmp
mov
push
std
(bad)
pop
push
pop
adc
xor
sub
in
mov
mov
add
cmp
sbb
adc
adc
call
inc
sub
inc
test
sbb
and
push
call
test
jne
js
ror
(bad)
imul
dec
and
adc
add
in
into
jl
shl
inc
and
and
cmp
adc
cwde
aam
inc
sar
cmp
push
inc
pop
in
push
push
das
mov
pop
mov
mov
push
push
lds
mov
aam
lea
cmp
adc
outs
and
and
cmp
sti
(bad)
(bad)
fimul
sar
push
push
sar
mov
xchg
daa
or
sbb
adc
pop
mov
add
mov
test
jle
dec
cld
push
or
mov
mov
sub
mov
sub
adc
and
add
(bad)
int3
add
scas
sub
add
and
les
jbe
and
lods
pop
(bad)
out
inc
clc
mov
mov
push
add
push
add
mov
mov
mov
push
jl
push
mov
call
call
push
(bad)
cli
push
xlat
add
push
push
push
xchg
xchg
sbb
adc
adc
or
mov
sbb
dec
mov
adc
sub
sbb
and
ret
jo
lods
sub
push
lea
xor
xor
pop
or
sub
(bad)
pop
mov
adc
cs
int3
inc
inc
add
mov
rcr
add
mov
mov
adc
sub
inc
sbb
call
scas
or
push
mov
pop
ja
mov
test
into
mov
mov
push
xor
sbb
and
rcl
fild
popf
push
adc
add
enter
sbb
mov
mov
push
(bad)
in
mov
rcl
add
neg
scas
stos
or
pop
push
fwait
dec
dec
and
sub
push
sar
add
cmp
popf
add
icebp
adc
adc
mov
inc
add
shl
sbb
push
sbb
call
pop
add
pop
sbb
add
call
cmp
mov
lock
adc
popf
inc
push
push
call
repnz
mov
or
test
popa
or
sbb
ret
sub
mov
in
sub
add
push
ins
jne
js
cmp
(bad)
addr16
inc
sbb
sbb
movs
cmp
jae
mov
rcr
adc
or
xor
popf
inc
push
xor
or
in
(bad)
jmp
dec
jnp
sbb
inc
iret
adc
push
xor
mov
pop
scas
or
js
jnp
daa
test
(bad)
jg
jle
mov
mov
mov
test
(bad)
jo
or
mov
cmp
out
je
push
stos
mov
push
adc
or
enter
or
adc
mov
push
xlat
sbb
lea
rcl
dec
mov
mov
fist
ret
xchg
jnp
push
xor
shl
or
outs
and
lds
push
and
adc
jbe
or
arpl
adc
xchg
loopne
and
je
xor
ins
sub
push
mov
and
push
push
mov
push
imul
sahf
or
cmp
sub
adc
bound
in
sub
lds
lds
sbb
add
mov
add
cwde
adc
data16
outs
cmps
add
dec
iret
or
test
dec
out
push
add
mov
nop
adc
mov
mov
pop
repz
cmp
adc
mov
mov
js
outs
mov
jno
in
call
out
cld
inc
ret
sbb
or
sbb
adc
pop
push
rol
add
sub
aad
cmp
std
shr
add
pop
mov
sbb
into
mov
add
fs
aas
repnz
add
call
add
add
add
(bad)
jnp
adc
aam
(bad)
push
and
adc
cmp
pop
cmp
push
imul
pop
jne
and
pop
and
push
cmp
jne
mov
push
pop
push
cmp
jne
dec
cs
add
es
dec
call
cmp
lea
pop
mov
push
xlat
pop
and
mov
jne
repz
nop
jmp
je
pop
inc
push
xchg
adc
jp
push
push
push
xchg
mov
xor
mov
sbb
loope
out
mov
mov
mov
ss
adc
push
sbb
mov
lds
adc
or
mov
or
gs
add
mov
ret
sbb
test
and
push
push
dec
push
push
jmp
jecxz
xchg
ret
pop
cdq
imul
jne
inc
lock
sbb
mov
push
pop
pop
cmp
pop
clc
fild
push
push
push
push
push
cmp
and
jae
inc
out
or
mov
and
sub
inc
and
add
xlat
dec
shl
sbb
jmp
inc
jmp
mov
mov
shr
jmp
mov
mov
pop
adc
adc
push
push
push
call
sbb
stos
cmp
loopne
cmp
inc
rol
jbe
push
cmp
or
and
ja
mov
jo
jne
imul
lahf
jno
jo
add
lahf
push
mov
push
push
push
call
lods
push
jo
out
fadd
mov
loope
jo
push
outs
add
jo
test
add
ficom
ficom
rcl
push
add
ret
jecxz
adc
bound
movs
fsub
jo
pop
ins
xor
jo
fadd
arpl
add
mov
iret
inc
add
mov
push
mov
push
loopne
push
add
adc
je
xchg
lahf
mov
adc
inc
lahf
jo
dec
pop
add
push
adc
sahf
jo
add
or
jo
loope
fsub
iret
jo
ds
test
xor
add
pop
push
or
lahf
add
ins
or
shl
jo
jo
add
iret
jo
add
iret
jo
add
iret
jo
add
push
iret
ins
xchg
mov
aas
mov
xchg
sub
mov
cmp
mov
cmp
xchg
cmp
hlt
aam
aaa
jae
aaa
sbb
mov
adc
test
pusha
add
inc
mov
sbb
push
inc
add
mov
add
and
xchg
data16
xor
movs
mov
xor
cli
mov
add
add
cs
mov
and
pop
mov
jge
jne
sub
xchg
ror
mov
sbb
rcpps
add
popf
sub
lds
inc
mov
mov
mov
add
mov
and
pop
adc
sbb
and
sub
movs
pop
inc
jb
out
or
int3
lea
xchg
mov
out
mov
out
mov
out
mov
out
lahf
test
mov
or
dec
or
sbb
scas
out
rcl
mov
lea
jg
push
pop
stos
adc
adc
shr
loope
add
popa
add
mov
xchg
cmp
pop
xor
xchg
add
pop
xor
test
fsub
jo
arpl
add
arpl
add
and
add
mov
iret
call
sub
push
push
mov
xor
or
push
mov
mov
jne
inc
jl
push
and
outs
jl
ja
xor
sbb
add
je
jl
cdq
adc
pop
jecxz
movs
jge
dec
and
mov
mov
lea
fld
push
call
or
rcr
mov
outs
inc
adc
push
out
sbb
das
xor
push
call
lock
dec
add
inc
or
jge
cld
sbb
mov
push
and
jo
xor
push
shl
push
jbe
les
and
inc
pusha
jb
pusha
stos
add
mov
push
add
stos
add
enter
sub
pop
and
gs
inc
and
je
add
loopne
adc
cmps
push
mov
and
inc
sub
call
mov
lods
imul
or
(bad)
mov
test
lods
imul
imul
xchg
loopne
pop
outs
jge
cmp
inc
ret
sub
push
sbb
loop
sar
mov
push
out
xchg
cmp
cli
dec
push
adc
ret
jne
mov
je
sub
inc
inc
outs
add
cmp
jne
add
dec
aaa
push
pop
and
mov
push
in
pop
mov
jne
push
pusha
sbb
jb
jns
lods
leave
push
push
jle
mov
push
add
adc
mov
add
push
ins
jbe
xchg
push
nop
(bad)
cmp
je
mov
push
call
jb
lods
jno
push
popf
sub
inc
and
pop
lock
popa
enter
adc
push
mov
add
or
xchg
inc
pop
scas
or
adc
popa
cmp
cmp
or
adc
addr16
push
mov
or
add
movs
dec
cmp
xchg
mov
xchg
ins
dec
fldcw
ret
xchg
ins
sub
pop
push
ins
mov
sbb
imul
sbb
adc
xchg
sub
xor
jo
add
fsubr
arpl
ins
mov
ins
mov
ins
mov
imul
add
push
rcl
jg
ret
mov
sbb
mov
sub
and
bound
or
mov
jge
dec
or
jle
into
sbb
pop
adc
sar
mov
sar
mov
add
sub
repz
test
sub
fdivr
jg
pusha
add
and
fcom
fsubr
pusha
add
fcomp
aaa
or
or
int3
lea
mov
cdq
test
push
xchg
sub
and
iret
sub
or
add
xchg
push
adc
adc
push
and
xchg
dec
mov
add
sub
inc
add
mov
add
or
rcl
add
fisubr
fmulp
iret
dec
inc
mov
push
adc
sub
mov
pop
ja
dec
or
or
inc
push
int3
dec
fcom
pop
or
cmps
add
xor
adc
mov
mov
out
mov
add
dec
mov
push
nop
aaa
push
and
enter
sub
add
mov
cld
sbb
cmps
push
mov
add
int
push
cmps
sub
inc
or
or
rol
cdq
test
cmps
repz
push
dec
inc
or
add
cmps
dec
or
sub
cmps
dec
sbb
inc
add
dec
add
cwde
sub
ret
mov
mov
cwde
rcpps
push
repz
add
(bad)
(bad)
rcr
xchg
and
pop
mov
jl
adc
(bad)
pop
cwde
or
nop
pop
or
sub
push
dec
pop
cmps
dec
jbe
movs
inc
pop
mov
pop
xchg
pop
or
pusha
inc
dec
ficomp
sbb
adc
and
adc
xchg
inc
dec
or
pop
xchg
stos
pop
cmc
jmp
push
jl
cmp
or
xor
inc
adc
les
or
test
inc
xchg
inc
in
mov
dec
jne
cmc
pushf
shl
add
ins
mov
xchg
sub
dec
packuswb
sbb
and
xchg
add
push
call
jae
rcl
or
(bad)
call
test
fistp
das
rol
push
adc
lods
in
push
ja
and
cmps
fild
or
add
pop
mov
add
mov
mov
mov
mov
inc
push
push
jo
xor
jbe
jbe
sbb
push
int3
add
das
add
push
pusha
sbb
add
xchg
pop
mov
lods
loopne
xchg
push
xchg
not
xchg
push
and
cmp
or
dec
into
bound
rcr
jo
sub
jo
ret
into
jo
ins
and
dec
mov
dec
dec
sbb
sub
mov
pop
cmp
xor
pop
xor
test
test
test
xchg
add
jno
push
push
(bad)
inc
sbb
inc
dec
pop
sbb
jmp
inc
sbb
or
sub
aas
add
sbb
aas
mov
aas
lahf
and
push
adc
adc
add
invd
nop
adc
scas
dec
add
(bad)
out
sub
ret
add
adc
xchg
mov
dec
mov
dec
mov
dec
add
movs
mov
dec
xor
das
push
aas
or
push
sub
and
mov
dec
mov
cmp
and
add
fld
adc
push
adc
sbb
sbb
push
bound
adc
and
add
jne
push
fs
jg
push
push
rol
leave
pop
mov
mov
inc
add
enter
hlt
pop
push
call
add
out
jl
adc
and
xchg
add
xchg
add
nop
add
add
xor
mov
test
xor
cmp
push
sbb
sub
inc
inc
inc
stos
clc
ror
dec
sub
add
je
xchg
cmp
or
fs
sub
mov
mov
inc
cmp
shl
das
je
shl
pop
es
ins
mov
inc
adc
rol
rol
push
test
xor
jge
outs
arpl
and
push
pop
add
push
pop
add
mov
jno
cli
les
mov
mov
inc
shl
mov
movs
adc
adc
test
mov
jnp
sub
popa
pop
fist
mov
adc
xor
movs
push
cmp
and
mov
mov
movs
adc
jno
adc
sub
adc
sbb
adc
lock
pop
inc
push
or
pop
lahf
xor
mov
push
sbb
imul
push
popa
xchg
imul
push
cmp
pop
imul
sbb
add
cmp
and
mov
sub
mov
movs
dec
pop
or
mov
scas
imul
imul
imul
imul
data16
test
or
jg
or
ret
and
inc
nop
and
out
add
mov
sbb
cmp
mov
rcl
call
cmp
mov
jl
adc
(bad)
push
sub
aad
lea
push
je
sbb
push
fist
mov
or
inc
push
xor
sbb
push
loop
push
push
jno
pop
and
push
rcl
add
jne
mov
mov
add
add
mov
or
mov
das
sub
popf
mov
add
imul
pop
lea
daa
inc
mov
mov
dec
das
ret
adc
and
mov
push
or
dec
mov
add
jb
adc
bound
mov
bound
das
mov
sub
push
lods
pop
or
sub
mov
xchg
popa
adc
cmps
sub
add
sub
pop
mov
inc
imul
sub
ja
pop
dec
pusha
lods
inc
cmp
add
inc
and
pusha
sbb
(bad)
cmp
lods
and
jne
push
test
inc
ror
scas
test
les
das
add
sub
outs
ins
retf
add
rcr
ins
push
inc
shr
sbb
sub
ins
das
add
or
loope
ins
gs
imul
bound
add
mov
mov
mov
mov
mov
sbb
movs
outs
mov
or
cmp
jne
inc
mov
test
jbe
mov
mov
mov
mov
and
inc
pusha
mov
pusha
mov
mov
mov
and
inc
pusha
mov
mov
xchg
and
dec
pop
mov
ror
and
fs
add
lods
nop
aas
jg
push
je
lahf
xchg
rol
jne
jg
xor
ja
int3
xchg
mov
(bad)
mov
(bad)
mov
xchg
mov
xchg
mov
lahf
mov
ins
mov
ror
add
pop
inc
pop
mov
add
scas
or
scas
ins
add
sbb
add
ins
test
popa
add
test
xchg
adc
stos
xor
cmp
xchg
and
sub
mov
ins
mov
ins
mov
imul
or
sub
daa
mov
adc
mov
push
lods
xchg
push
test
test
mov
ror
int3
pop
mov
int3
push
test
mov
mov
test
or
mov
in
push
mov
mov
ins
test
scas
mov
add
out
add
mov
push
push
push
mov
scas
jb
add
inc
pop
and
mov
retf
and
mov
popa
lahf
mov
cmps
mov
dec
clc
scas
xchg
sbb
rol
scas
ins
add
mov
jne
pop
ins
mov
and
aam
ins
adc
imul
inc
scas
inc
sub
mov
scas
ins
jno
add
mov
nop
mov
sbb
sbb
add
rol
mov
cmp
mov
mov
push
pop
out
push
fnstenv
push
imul
inc
pop
mov
ss
mov
add
pusha
scas
out
inc
adc
or
mov
retf
jbe
rcl
scas
mov
xchg
mov
inc
aas
lahf
inc
pop
and
mov
retf
mov
scas
cmp
push
mov
in
add
ins
add
sbb
imul
push
test
or
inc
pop
add
inc
sub
imul
(bad)
scas
add
stos
mov
add
add
mov
sub
sar
mov
push
sub
test
cmps
sub
test
add
pop
mov
mov
push
inc
and
mov
xor
retf
mov
push
inc
and
mov
mov
and
mov
mov
push
scas
mov
add
add
xchg
aam
scas
inc
add
sub
(bad)
jbe
add
scas
mov
xchg
mov
(bad)
aas
lahf
mov
lahf
mov
cmps
mov
scas
cmp
mov
sub
scas
nop
sbb
test
ins
or
scas
add
inc
sub
out
xchg
inc
sub
imul
and
inc
scas
add
inc
sub
mov
adc
adc
and
push
and
mov
retf
pop
mov
inc
sbb
inc
mov
push
inc
pop
mov
and
inc
movzx
inc
and
push
mov
adc
and
mov
nop
add
mov
scas
xchg
aam
add
add
scas
mov
(bad)
jbe
ret
scas
mov
xchg
mov
xchg
aas
imul
lahf
mov
or
fdivr
inc
cmp
mov
or
add
sbb
imul
push
test
or
inc
pop
add
inc
sub
imul
(bad)
scas
add
stos
mov
add
add
mov
sub
sar
mov
push
sub
test
mov
mov
add
pop
mov
mov
push
inc
and
mov
xor
retf
mov
push
inc
and
mov
mov
and
mov
mov
push
scas
mov
add
add
xchg
aam
scas
inc
add
sub
(bad)
jbe
add
scas
mov
xchg
mov
(bad)
aas
lahf
mov
lahf
mov
cmps
mov
scas
cmp
sub
xchg
adc
lock
inc
sub
pop
adc
cmp
movs
bound
imul
add
fisttp
adc
adc
inc
fsubr
sub
ins
jne
adc
popa
test
mov
out
add
inc
mov
adc
cmps
test
and
aaa
jae
stos
sub
fbstp
test
or
push
xchg
dec
outs
test
mov
test
jg
dec
mov
shufps
imul
cmps
adc
mov
outs
or
xor
mov
inc
mov
sar
daa
mov
xor
mov
test
mov
mov
add
add
(bad)
nop
mov
mov
test
call
add
or
or
mov
les
imul
test
scas
(bad)
and
(bad)
es
or
and
pop
pop
inc
xchg
or
and
and
xchg
inc
je
sbb
and
sbb
inc
test
adc
dec
push
inc
cmp
jo
jno
mov
adc
mov
hlt
js
inc
sbb
and
fisttp
lea
in
push
hlt
leave
je
add
pop
xor
popf
inc
je
mov
or
sub
sub
xor
outs
stos
or
fild
sub
mov
clc
fbld
xor
mov
sub
mov
cmp
jne
aaa
and
push
push
jne
push
add
and
lock
push
mov
mov
mov
outs
test
inc
lds
int
adc
ds
mov
push
jg
push
call
inc
adc
push
ja
inc
cmp
add
mov
jmp
add
adc
test
xchg
jmp
rcr
inc
xchg
or
dec
in
add
push
and
pop
lahf
push
test
cmps
xor
and
sub
jnp
mov
aaa
add
ret
add
ret
lahf
sub
jbe
xor
or
xchg
xchg
cmps
ss
sbb
or
dec
add
sub
sub
ins
sbb
scas
call
xchg
xor
test
dec
sub
add
enter
add
mov
and
add
dec
or
inc
dec
or
xchg
out
xchg
dec
shr
adc
dec
jl
push
nop
or
mov
mov
and
mov
imul
mov
dec
inc
or
and
add
inc
add
inc
dec
test
add
out
dec
test
dec
fist
push
push
push
mov
lea
enter
aam
mov
add
std
push
jnp
outs
sbb
push
mov
mov
ss
mov
adc
adc
sbb
mov
push
dec
add
in
sub
adc
jle
sbb
mov
inc
xchg
mov
imul
adc
add
in
push
mov
clc
adc
mov
icebp
sub
cmps
push
inc
push
jg
retf
mov
or
sub
adc
sbb
jmp
pop
mov
and
or
fxch
add
sub
and
or
push
adc
test
mov
jp
rcr
or
rcl
dec
push
call
adc
or
inc
or
mov
adc
mov
cmp
mov
les
adc
mov
and
or
ss
leave
or
getsec
cld
cmp
mov
cmp
or
test
comiss
sbb
dec
fsubr
adc
adc
add
mov
push
iret
(bad)
pop
mov
push
dec
iret
adc
(bad)
mov
mov
cmovg
das
jnp
jnp
comiss
das
inc
xchg
in
sbb
sub
fcomip
ret
sbb
sub
xor
xor
test
mov
cmps
nop
pop
inc
and
lahf
std
jmp
inc
jmp
lock
and
cmps
pop
add
cmp
lods
sbb
nop
push
jmp
mov
push
mov
sub
jge
iret
cmp
(bad)
push
mov
push
mov
adc
sub
dec
mov
mov
outs
mov
es
inc
test
adc
call
sbb
sub
adc
icebp
or
or
inc
jb
push
add
add
(bad)
pop
pop
pop
pop
scas
mov
inc
pop
std
mov
mov
push
sub
mov
inc
mov
mov
mul
jl
xor
sub
pop
icebp
mov
push
mov
ret
and
mov
mov
fmul
pop
mov
add
push
nop
xor
cmp
sub
xor
add
mov
xor
lds
les
adc
add
cmp
les
sub
scas
and
cmp
stos
pop
sti
or
xor
loop
jge
push
push
push
jmp
mov
ret
xor
ret
or
and
push
and
xor
jp
dec
mov
test
add
and
jo
sahf
sub
mov
xor
jmp
test
mov
cdq
call
ins
pop
inc
mov
add
les
and
inc
neg
in
sbb
and
iret
popa
or
sbb
xor
push
iret
ins
jecxz
sub
call
push
ds
call
cmps
sbb
sbb
cmp
sbb
xchg
test
or
inc
push
sbb
int
mov
pusha
and
add
sbb
mov
ss
test
sti
jae
pop
jae
jl
and
sub
push
mov
and
and
fs
and
push
and
push
push
cmps
and
mov
add
adc
and
inc
je
inc
cld
sbb
sti
cmp
inc
pusha
test
jne
inc
sub
pop
adc
push
adc
inc
adc
leave
je
das
fistp
push
mov
push
push
sti
push
call
test
pop
je
mov
stos
push
lahf
push
or
adc
cmp
out
mov
add
push
or
xchg
push
cmp
clc
and
xor
mov
mov
daa
aam
or
cmc
add
adc
ficomp
inc
lods
dec
inc
mov
pop
adc
ret
or
push
ss
or
push
push
jae
cli
clc
shl
pusha
jno
sbb
push
xchg
jno
dec
dec
mov
mov
dec
(bad)
adc
adc
add
mov
and
push
(bad)
mov
mov
mov
jg
adc
out
xor
idiv
test
adc
mov
jne
ins
inc
inc
mov
(bad)
jg
js
fdivr
jbe
inc
push
les
clc
je
and
jl
and
or
push
mov
jmp
sbb
pop
test
ret
dec
adc
dec
inc
loope
ror
jecxz
aaa
movs
sbb
inc
ja
add
sub
adc
mov
loopne
inc
add
xor
jle
adc
add
and
mov
add
jl
inc
rol
push
push
push
call
add
or
and
mov
stos
add
pop
push
inc
rol
loopne
test
call
xchg
icebp
lea
push
mov
mov
push
fbstp
mov
dec
push
inc
popa
gs
add
add
cmc
jmp
adc
cmp
mov
les
or
cld
outs
push
mov
mov
add
call
mov
je
dec
dec
mov
inc
cmps
or
pusha
mov
inc
inc
sbb
icebp
mov
mov
mov
cmp
pusha
pop
push
cmp
sahf
ja
sahf
or
sbb
pop
retf
lods
cld
mov
adc
or
jp
pop
and
mov
(bad)
add
repnz
or
sbb
xchg
mov
mov
inc
mov
rol
adc
jmp
mov
inc
popf
add
cmp
or
mov
push
sahf
dec
mov
mov
or
cmps
call
cmp
adc
pusha
or
lea
xchg
call
sbb
mov
mov
add
clc
push
push
mov
(bad)
mov
jg
mov
arpl
push
adc
mov
test
sbb
push
sar
cld
dec
add
and
adc
shl
shl
cmp
and
enter
adc
push
push
dec
call
cmp
push
gs
xchg
mov
mov
scas
mov
xor
je
push
xlat
jae
(bad)
imul
or
push
aas
or
(bad)
je
mov
cmp
cmp
and
mov
mov
mov
int
mov
mov
outs
loop
les
cdq
sub
mov
mov
dec
and
push
push
shr
mov
add
fisub
mov
(bad)
aam
xchg
jae
mov
and
inc
les
sub
or
in
pop
lahf
xor
cmp
push
ret
cli
pop
jnp
fs
add
test
sti
dec
and
push
push
imul
je
cmps
bound
mov
inc
sbb
addr16
leave
je
mov
sbb
or
ficom
mov
dec
pop
mov
jge
cmp
adc
in
or
sbb
inc
sub
adc
sbb
xchg
and
test
sub
shl
jg
ret
cmp
push
push
jne
push
sub
sub
xor
sbb
jmp
jle
push
jmp
cmps
and
jg
or
pop
inc
adc
sub
push
push
push
mov
sti
ja
pop
mov
mov
pop
pop
xor
addr16
add
out
add
sub
jmp
fmul
push
push
lea
mov
pusha
xlat
vunpcklps
test
add
cmp
or
sub
neg
add
push
xor
call
sub
fild
inc
xor
adc
retf
push
jne
rol
mov
aas
pushf
add
neg
std
sub
push
push
push
dec
dec
or
jns
pusha
pop
(bad)
mov
and
push
xor
and
lea
mov
xchg
pop
jne
jl
jge
add
leave
lods
test
(bad)
inc
push
cld
xor
inc
mov
jmp
cmp
pop
push
ins
or
ret
mov
test
cmp
add
dec
cmp
xor
ficom
adc
das
fistp
lods
push
add
sub
nop
sbb
in
add
inc
test
push
push
adc
nop
dec
or
push
push
add
ror
sub
cmps
jle
xor
mov
add
sub
adc
popa
test
lahf
loope
out
cmp
mov
es
push
adc
and
(bad)
dec
adc
in
test
or
sbb
cwde
add
movzx
leave
(bad)
lock
xchg
dec
xor
int3
push
xchg
pushf
and
jmp
sbb
push
dec
sbb
add
fist
jne
stos
push
in
mov
sub
sbb
mov
xor
jg
jl
adc
(bad)
fmul
push
addr16
cld
iret
lods
and
lea
and
out
dec
ins
pop
cld
dec
fld
call
mov
fsubr
add
gs
daa
ins
and
sbb
ins
jbe
add
fsubr
and
cmp
fsubr
rol
bound
fwait
cmp
or
or
and
int
test
or
or
and
fwait
sbb
or
gs
or
and
push
adc
ins
test
outs
xor
and
ins
ret
in
xor
inc
mov
mov
test
inc
gs
dec
fsubr
adc
lods
fwait
mov
test
test
adc
gs
fwait
cmp
adc
mov
popa
mov
loope
pop
jne
and
fld
gs
mov
fwait
rol
test
(bad)
leave
sbb
fsubr
enter
gs
test
and
mov
fwait
into
retf
sbb
adc
rol
int
ins
jo
pop
and
adc
aam
and
gs
mov
popa
fdiv
and
gs
test
gs
mov
fild
in
inc
cmp
mov
ins
and
and
ret
and
gs
test
test
mov
fwait
out
test
fld
gs
mov
cdq
cmc
sub
gs
ss
test
mov
imul
shl
std
xchg
test
add
pop
and
and
add
das
and
fs
and
gs
add
add
xor
int
in
and
adc
test
test
ins
inc
pusha
ret
dec
xor
fld
and
jge
xor
gs
cmp
xchg
or
aaa
mov
ss
gs
es
or
jno
test
ins
ret
inc
and
and
dec
fsubr
cmp
xchg
fwait
dec
or
adc
add
test
gs
ss
hlt
add
push
cmp
sbb
add
cmps
mov
jae
(bad)
in
gs
test
ss
inc
add
es
and
mov
ss
mov
inc
and
in
lock
and
sbb
ins
ss
cmp
adc
mov
mov
jmp
retf
adc
inc
fld
dec
and
mov
sub
inc
and
test
retf
pop
and
ret
and
and
fsub
mov
dec
and
push
fsub
mov
mov
or
and
dec
or
int3
and
aaa
fisttp
es
xchg
add
(bad)
test
(bad)
push
and
inc
pop
push
and
pusha
retf
add
push
and
test
gs
push
fwait
adc
push
and
mov
ss
or
mov
pop
and
xchg
xchg
and
push
and
xchg
dec
(bad)
ss
and
push
sti
mov
dec
pop
and
push
cmps
test
adc
add
ins
ret
pop
gs
in
rol
cwde
mov
test
dec
fsubr
pop
and
cwde
mov
test
pop
gs
dec
fsubr
arpl
gs
es
ss
cmps
and
dec
fsubr
popa
and
es
ss
test
gs
ss
adc
int
and
push
dec
enter
gs
ss
mov
and
adc
fwait
xor
and
or
and
ss
mov
inc
imul
ss
inc
push
gs
fsub
outs
gs
ins
ss
jo
gs
ss
adc
and
es
ss
inc
outs
and
dec
fsub
jae
sbb
and
adc
fwait
nop
scas
jno
and
ss
inc
jb
add
cmp
ror
xchg
add
add
fiadd
loopne
mov
inc
mov
sbb
sbb
ret
inc
aam
push
cmp
and
dec
mov
push
movsx
push
lea
rcl
adc
aad
sub
fdivr
cmp
jmp
je
cmp
jne
mov
jg
jne
mov
(bad)
inc
add
(bad)
pop
add
push
push
push
jmp
cmp
adc
push
adc
cmp
sub
rcr
lea
jle
fbstp
jmp
cmp
cmp
push
std
add
cmp
pop
xchg
jne
(bad)
fwait
std
inc
cmp
cmp
std
mov
and
adc
std
or
sub
out
out
or
cmp
mov
je
add
adc
bound
test
inc
push
mov
push
test
je
push
and
mov
inc
adc
stos
test
sub
loope
add
rol
mov
push
ds
push
jo
rol
ds
loope
inc
sbb
rcr
sbb
cmp
and
jmp
cmp
push
outs
jmp
cmp
sub
adc
loop
add
(bad)
sub
adc
inc
push
xor
push
test
inc
inc
and
mov
ja
lods
mov
jne
cmp
jne
sbb
adc
lahf
add
sub
lock
mov
xchg
out
mov
push
mov
mov
jmp
add
shl
mov
and
rep
pop
ret
es
and
or
(bad)
mov
adc
mov
inc
cmp
jb
add
push
mov
(bad)
(bad)
dec
test
jl
adc
clc
mov
mov
cmp
jb
ja
sub
(bad)
adc
cmp
jb
mov
pop
pop
or
and
hlt
jmp
push
push
jge
xor
cmp
push
push
mov
je
inc
dec
adc
or
push
add
sub
pop
add
out
add
ficom
call
push
or
and
push
sub
mov
call
cmp
mov
hlt
push
mov
add
push
dec
mov
es
jge
inc
adc
add
in
mov
jle
push
outs
xor
inc
xchg
mov
inc
push
push
daa
xchg
rcr
and
or
(bad)
out
mov
add
icebp
push
call
mov
fcomp
adc
ror
int3
int3
mov
or
sti
scas
or
dec
pop
mov
call
and
(bad)
daa
sbb
rcr
add
add
adc
in
stos
mov
add
std
imul
mov
inc
dec
cmp
jmp
adc
inc
and
ret
mov
or
sbb
or
prefetcht1
mov
or
cmp
mov
mov
sbb
mov
test
dec
dec
add
mov
mov
test
add
adc
cli
xor
sbb
das
inc
jmp
xor
popa
or
fwait
adc
cld
cwde
pop
and
adc
pop
adc
or
iret
add
pop
sbb
add
push
fsubr
aas
and
add
sub
ret
aas
add
inc
fldcw
pop
sub
ss
aas
xor
lahf
dec
popa
mov
xor
lahf
cmp
ins
xor
xchg
mov
ins
ss
pop
mov
dec
xchg
push
pop
or
add
aas
ja
add
lahf
jg
push
xor
inc
(bad)
cmps
nop
scas
inc
mov
cmps
mov
call
mov
mov
jae
mov
fld
mov
dec
adc
or
jmp
mov
push
dec
xlat
fwait
push
inc
mov
scas
pop
mov
pop
cmps
mov
and
mov
loop
inc
xchg
nop
or
outs
loopne
adc
add
mov
inc
add
or
add
push
and
push
xchg
or
call
push
adc
or
sub
mov
and
and
arpl
inc
and
push
mov
push
xlat
add
mov
and
mov
or
mov
xchg
loopne
xchg
aad
and
add
push
iret
add
and
fdiv
ja
xor
(bad)
or
scas
adc
push
add
loope
(bad)
pop
bound
fild
in
in
in
adc
sbb
jae
and
hlt
test
lahf
pop
loope
add
lahf
test
jne
nop
jmp
jle
dec
or
add
cld
je
mov
pop
or
push
call
retf
mov
fadd
popf
int3
iret
push
xor
adc
jle
mov
mov
inc
sar
inc
pop
cmp
mov
je
or
mov
mov
pop
push
mov
call
or
sub
inc
adc
mov
popf
movd
inc
inc
call
int3
push
push
push
sub
cld
push
push
push
sub
mov
jecxz
rcr
ror
cli
adc
popf
pop
push
adc
lock
fnsave
adc
add
sbb
shl
aaa
fisttp
outs
jg
push
push
enter
je
add
out
sahf
stos
cmp
test
adc
std
sbb
mov
xor
adc
sub
and
adc
pop
adc
sbb
xor
sbb
ins
jbe
jbe
sbb
mov
pop
add
sub
push
daa
or
lock
push
adc
call
or
sub
rcr
sub
jnp
lea
or
scas
stc
add
sub
adc
inc
or
popa
loop
mov
dec
xor
xchg
shl
ret
and
pop
aas
inc
xor
mov
mov
mov
inc
sub
sub
or
sub
cli
dec
rcr
call
mov
mov
sub
daa
mov
push
push
call
lds
xor
add
in
xor
sbb
pop
push
add
ret
fimul
add
scas
sub
test
and
scas
(bad)
or
add
stos
gs
or
or
inc
(bad)
loopne
add
push
lods
sub
inc
sbb
data16
add
scas
mov
ja
call
inc
pop
ss
out
mov
push
push
push
cmp
jo
mov
retf
inc
inc
cmovs
dec
sbb
push
mov
ret
sbb
fist
aaa
sub
mov
push
push
daa
xor
popf
sub
xor
add
mov
scas
sub
mov
fstp
mov
push
call
inc
mov
stos
ret
xor
shl
add
ret
mov
push
mov
dec
pop
jg
aaa
inc
aas
adc
sub
dec
xor
cmp
jne
test
inc
inc
sbb
mov
les
adc
loopne
loopne
ret
push
xor
cmp
mov
(bad)
fwait
or
cmp
jne
mov
push
push
int
add
adc
push
push
add
call
push
and
sbb
mov
push
push
sub
mov
push
(bad)
(bad)
or
ins
sbb
sbb
enter
add
or
add
xchg
pop
and
sbb
xchg
cs
add
add
das
dec
dec
rcl
pop
pop
neg
je
add
xor
push
push
and
fbld
xor
cmp
and
call
xor
add
adc
dec
mov
pop
pop
aaa
add
or
dec
lds
(bad)
aas
js
and
push
push
call
add
and
cdq
sub
add
adc
hlt
enter
sub
pop
je
dec
call
push
test
add
inc
add
dec
mov
mov
xor
sub
cmp
jp
mov
cmp
je
pop
mov
es
inc
mov
std
lods
cld
lea
(bad)
(bad)
inc
mov
push
push
mov
mov
mov
push
mov
mov
mov
add
adc
mov
leave
fsub
dec
dec
xor
(bad)
test
and
call
mov
pop
mov
pop
xchg
ret
mov
pop
mov
pop
sbb
or
and
mov
addr16
inc
mov
mov
push
test
aas
push
sbb
mov
push
mov
push
(bad)
fs
mov
ret
das
mov
and
or
jp
stos
sbb
sbb
fistp
mov
jbe
cld
test
jne
sahf
mov
jle
int
mov
ins
ret
loope
mov
inc
or
fsubr
rcr
pop
je
add
pop
loopne
loopne
sbb
adc
inc
ret
mov
mov
sbb
inc
imul
sub
xor
or
or
cld
pop
and
or
ret
add
push
cmp
pop
fadd
mov
cmp
add
push
push
sbb
push
mov
mov
adc
push
fild
jg
mov
push
pop
inc
jne
push
jg
movs
mov
nop
retf
inc
jg
cld
xchg
sub
push
mov
push
inc
push
aas
lods
dec
mov
add
push
push
sub
xor
(bad)
outs
mov
add
pinsrw
cwde
fwait
ror
js
shr
jg
or
aaa
mov
sbb
jle
and
push
rcl
mov
jmp
or
mov
adc
xchg
and
loope
cmp
aas
aas
adc
jae
add
push
movs
jl
sbb
mov
iret
push
mov
mov
aaa
or
mov
push
push
mov
add
add
mov
or
adc
adc
xor
push
push
push
ror
call
scas
call
add
cmp
push
sbb
maxps
call
adc
adc
dec
dec
or
push
mov
sahf
pop
inc
add
push
lahf
int3
dec
mov
inc
cmp
or
scas
mov
sahf
push
jle
icebp
jecxz
push
mov
push
xor
sbb
adc
adc
push
fs
sbb
int
or
js
(bad)
hlt
ds
call
push
pushf
cli
push
pop
push
test
daa
(bad)
(bad)
adc
ins
sbb
pop
dec
push
loope
inc
mov
or
add
inc
push
add
push
mov
inc
push
add
pop
jb
fadd
test
je
mov
pop
xor
pop
pushf
pop
out
sbb
xor
bsf
sbb
or
stos
lahf
js
cdq
lahf
pop
push
push
pop
and
dec
or
sbb
sbb
(bad)
ins
outs
push
int3
push
adc
dec
sub
mov
push
push
rol
push
mov
sbb
xchg
fstp
or
sub
sub
and
cmp
mov
je
mov
retf
adc
inc
int3
and
adc
inc
lock
stc
lahf
shl
sbb
retf
adc
mov
xchg
out
cwde
mov
mov
cwde
sub
inc
inc
pop
add
mul
xchg
cmc
jge
and
mov
sbb
mov
mov
mov
mov
cmp
push
push
push
push
call
lahf
je
sbb
scas
add
inc
scas
xor
xchg
jg
push
aam
jo
retf
mov
mov
jbe
or
mov
mov
jg
mov
popw
or
push
call
fadd
mov
xlat
(bad)
or
hlt
add
pop
xor
sbb
jmp
jne
rcr
fwait
clc
call
adc
in
push
push
jbe
mov
test
jbe
mov
cmp
jb
lea
mov
cmp
sbb
jns
cld
mov
add
adc
add
add
mov
mov
jg
(bad)
(bad)
fdiv
rol
jne
cmp
jb
mov
sub
cmp
je
sub
mov
fcom
pop
sub
xor
adc
retf
scas
or
add
xchg
sbb
mov
inc
or
xor
fild
inc
or
mov
test
jne
mov
mov
ficom
or
movs
or
inc
pop
mov
mov
jo
dec
add
adc
mov
adc
xchg
jge
inc
or
pop
mov
out
sub
sar
shl
loopne
cli
mov
jno
or
sub
cmc
push
or
aam
add
push
adc
xor
pop
jmp
(bad)
rcl
mov
test
mov
mov
jne
aam
or
ds
test
or
ss
je
mov
adc
loope
sub
call
loop
outs
cmp
sti
or
inc
aam
call
adc
dec
adc
adc
ror
jb
push
pop
inc
cmps
jmp
and
outs
push
push
lds
jbe
mov
inc
sbb
daa
cmp
mov
out
xchg
jnp
jne
fst
jnp
cmps
fmul
push
sbb
mov
jle
loope
push
and
jae
jne
xor
jmp
sub
sar
mov
fistp
add
sub
mov
and
xor
pop
call
push
push
dec
mov
push
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
cmp
jge
mov
mov
jmp
mov
sbb
jmp
clc
fmul
or
sbb
in
mov
jmp
mov
mov
sbb
or
ret
iret
jae
mov
add
and
in
loop
cmp
pusha
adc
or
xchg
test
nop
inc
add
cmp
jl
or
out
pop
pop
loope
pop
push
and
out
inc
mov
test
or
xchg
clc
or
pop
fisttp
inc
rcr
xor
xor
mov
adc
jmp
adc
(bad)
jb
cmp
jae
dec
test
or
mov
fnstsw
shr
cmp
jae
mov
mov
sub
div
or
jae
mov
cld
sub
sub
cmp
ja
(bad)
mov
std
sbb
fisubr
iret
add
sub
cmp
add
and
inc
cmp
(bad)
(bad)
(bad)
jg
or
outs
call
adc
aad
loope
ss
cmp
rcl
pop
sub
jmp
mov
adc
adc
sub
inc
add
cmps
jmp
and
lea
je
mov
mov
sbb
sar
mov
jg
xchg
sbb
xlat
lea
lea
push
std
xlat
or
jmp
fucomp
les
mov
pop
push
add
cmp
(bad)
jg
fadd
or
out
lea
mov
shr
lea
rep
mov
out
push
enter
enter
ja
jle
mov
and
jbe
jae
jp
push
mov
sub
movs
scas
add
aaa
in
jge
hlt
imul
lahf
cmp
popa
popa
mov
ins
fs
pop
mov
mov
retf
push
mov
or
xor
xor
shl
xor
rol
(bad)
out
clc
lea
push
std
and
inc
and
add
lea
push
lea
mov
ret
and
xchg
push
sbb
pop
call
std
icebp
pop
inc
mov
loop
and
(bad)
xor
and
loop
cmc
div
mov
sbb
mov
pop
int
retf
mov
jg
mov
cmp
push
ins
inc
lea
xor
sbb
enter
or
mov
call
jbe
pop
push
rcr
jmp
sar
push
push
out
xor
in
or
test
ja
jl
adc
jnp
adc
je
jno
iret
cmp
movs
icebp
arpl
or
sub
sub
cmp
stos
daa
call
adc
iret
sub
cmp
sahf
jae
cmp
mov
mov
loope
lds
jmp
repz
outs
clc
jp
xlat
lea
push
lea
lea
(bad)
or
fcomip
dec
and
or
test
add
std
mov
sub
add
adc
jmp
dec
and
mov
cmp
jae
inc
mov
push
dec
add
push
test
jbe
scas
retf
and
jae
and
mov
(bad)
and
xor
mov
jb
mov
mov
pop
or
stos
mov
pop
sub
or
cmp
adc
shl
ret
dec
and
lea
retf
lea
add
xor
xchg
and
sbb
leave
mov
hlt
cmp
test
sub
out
fucom
sub
push
adc
sub
mov
aas
adc
add
out
loopne
in
inc
dec
stc
cmp
push
xor
add
loop
sbb
jbe
shr
movnti
or
jne
mov
pop
mov
mov
push
sub
jmp
or
push
mov
mov
push
push
push
push
cmp
sbb
xchg
loopne
pop
or
lock
mov
jne
mov
(bad)
(bad)
mov
mov
mov
jmp
mov
test
je
mov
push
cmp
jne
mov
jmp
mov
or
or
out
push
adc
inc
add
icebp
mov
jne
or
mov
jg
add
retf
mov
and
mov
mov
mov
mov
iret
(bad)
(bad)
fistp
or
jmp
cmp
jne
mov
push
xchg
add
dec
mov
push
and
inc
add
pop
adc
push
add
inc
and
inc
add
dec
add
add
jae
dec
cmp
xor
pop
push
push
add
dec
adc
leave
lea
je
and
jo
ret
mov
pusha
xchg
xchg
sub
pop
repz
and
pop
pop
inc
adc
jmp
mov
call
mov
push
mov
xor
ror
movs
add
ja
loope
adc
fnstenv
sahf
and
add
(bad)
push
mov
call
dec
push
mov
movs
jecxz
jmp
leave
push
je
push
and
mov
sub
or
and
adc
sub
sub
pop
jns
sbb
sub
mov
and
fdiv
ins
mov
dec
mov
data16
(bad)
aas
je
mov
jmp
mov
mov
je
jmp
ins
cmp
mov
jne
add
stos
jmp
loop
(bad)
(bad)
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
mov
cmp
mov
fbstp
das
inc
(bad)
jmp
fcmovnbe
sbb
and
cmp
lahf
mov
and
mov
mov
jmp
dec
add
mov
adc
lahf
sbb
sub
mov
fist
into
adc
popa
mov
jmp
xchg
cmp
mov
add
fisubr
push
adc
inc
adc
push
adc
movsx
(bad)
cmp
add
retf
jne
cmp
add
cmp
(bad)
jne
in
mov
cmp
jne
in
sub
leave
jne
jmp
int
inc
adc
arpl
aaa
cmp
mov
cmp
jne
mov
jo
std
or
pop
adc
arpl
jne
push
xor
call
cmps
inc
mov
mov
mov
mov
mov
cmp
into
dec
and
arpl
mov
push
xchg
jne
cs
sti
sti
arpl
mov
sbb
push
mov
add
(bad)
jnp
sbb
jbe
jne
pop
pop
pop
in
mov
cdq
jnp
push
jp
jns
cwde
pusha
aaa
popa
mov
les
aas
je
pop
mov
jl
rcr
add
mov
xchg
sub
es
pop
pop
push
and
mov
(bad)
das
mov
pop
cli
mov
pop
adc
ret
push
fsubr
sbb
pop
add
sbb
inc
add
addr16
mov
jge
jbe
mov
jmp
int
mov
mov
xor
push
pop
ret
xor
pop
add
sub
inc
mov
rcr
ja
mov
cmp
jne
dec
je
jl
bound
mov
mov
or
mov
inc
push
or
cmp
mov
inc
mov
sub
inc
sub
push
sub
inc
sub
inc
sub
ret
jne
aad
add
adc
js
inc
add
and
cmp
ud0
sbb
test
mov
shl
mov
push
mov
fcomp
push
fcom
mov
sbb
icebp
aaa
pop
shr
cmp
je
ins
sub
push
jmp
jg
mov
mov
push
mov
and
push
sub
pop
fcomp
scas
stos
sub
push
push
call
mov
jge
fcom
adc
push
outs
(bad)
in
xor
sub
and
add
xchg
(bad)
cmp
ret
inc
pop
mov
addr16
jl
or
mov
(bad)
add
mov
cmp
jb
ins
enter
retf
jae
scas
mov
test
and
push
mov
push
mov
cld
arpl
mov
loope
mov
cmp
pop
pop
inc
or
pusha
int3
mov
push
pop
mov
pop
in
mov
cmp
mov
push
push
push
mov
dec
mov
push
mov
push
mov
dec
mov
mov
xor
and
mov
iret
(bad)
es
mov
lea
adc
mov
push
cmp
or
mov
jae
lea
idiv
and
mov
push
out
dec
push
fidiv
pop
or
mov
push
dec
xchg
push
pop
ins
test
jns
inc
punpckhdq
push
jg
out
fisttp
fsubr
jno
test
pushf
sti
pop
out
add
lock
stos
in
push
jmp
outs
cdq
(bad)
sub
sbb
aam
idiv
push
cmp
pop
cmp
data16
sbb
mov
cmp
xlat
inc
inc
pop
push
push
fsubr
cmp
dec
and
add
sub
pop
mov
fcmovnb
and
and
add
push
sbb
adc
push
call
cld
push
sub
sar
jb
cmp
pop
xchg
add
adc
stos
push
pusha
ja
inc
mov
pop
or
test
add
punpckhbw
test
gs
loopne
jno
and
mov
lea
xor
pop
into
push
inc
out
add
hlt
sbb
pop
cmp
jnp
sbb
cmp
cmp
push
xchg
and
pop
pop
mov
mov
push
dec
sbb
iret
icebp
mov
(bad)
jo
adc
adc
xor
and
mov
neg
je
je
int3
mov
dec
stc
adc
retf
pop
ss
pushf
and
dec
pushf
dec
xchg
mov
push
dec
mov
mov
xchg
cld
mov
cmp
mov
cmp
cdq
or
loopne
push
aaa
cmp
sbb
sbb
adc
push
sti
or
(bad)
mov
and
sahf
jnp
je
je
mov
sbb
je
sti
test
ins
(bad)
xor
fs
push
arpl
in
fdiv
dec
(bad)
sahf
test
out
add
stos
adc
bswap
in
mov
clc
or
rcr
push
cmp
gs
or
fmul
mov
or
push
shl
mov
mov
cld
test
pop
(bad)
out
jo
je
je
je
xadd
and
cld
add
fs
push
loopne
aam
add
xor
xor
mov
push
or
or
jb
and
gs
or
div
jecxz
int3
mov
lea
out
leave
jo
js
or
and
in
mov
xor
jmp
and
call
inc
test
enter
ds
in
stos
sub
in
cmps
push
or
inc
add
fidivr
not
lea
or
ror
sbb
mov
ins
and
jl
and
jnp
pop
push
out
mov
scas
mov
push
jno
inc
fs
dec
ret
call
adc
(bad)
iret
int3
add
fsub
cmps
adc
push
loope
(bad)
les
jecxz
xor
pop
data16
mov
jae
or
stos
xor
or
scas
stos
mov
push
or
mov
ret
cmp
pop
loopne
in
cmp
cmp
and
push
add
shl
xor
pop
fsub
adc
jnp
add
jp
not
lock
and
and
mov
mov
mov
sub
cmp
outs
stos
outs
cs
in
dec
jmp
or
mov
or
fadd
sub
sbb
test
(bad)
(bad)
cmp
imul
ret
imul
int3
sbb
imul
int3
sbb
cs
mov
call
and
adc
(bad)
mov
push
hlt
ret
loopne
xchg
mov
nop
das
in
ret
inc
mov
xor
ins
jg
add
dec
ss
mov
add
out
out
xchg
mov
push
(bad)
xor
stos
aas
mov
adc
jl
add
mov
dec
mov
cmp
sub
mov
mov
inc
call
not
or
mov
adc
add
ror
mov
mov
add
div
data16
ins
pop
ds
push
push
push
jmp
das
pusha
retf
add
add
fmul
ds
retf
dec
add
xchg
add
addr16
or
push
push
dec
add
mov
outs
call
fcomp
sar
mov
mov
movups
jb
sar
aas
dec
mov
pop
mov
ds
xchg
sub
je
loope
jmp
cdq
gs
mov
sub
in
add
push
adc
sahf
push
push
loop
enter
scas
inc
aaa
inc
ins
push
ret
and
or
dec
sti
sbb
and
stos
push
daa
dec
mov
dec
inc
popw
push
cmp
iret
lds
pop
retf
in
inc
and
dec
jo
xchg
dec
push
js
call
inc
inc
adc
mov
xor
ror
sbb
add
test
sar
push
xchg
mov
in
pop
test
and
or
sbb
leave
push
or
mov
fmul
pop
inc
or
push
ja
dec
or
and
sbb
and
sbb
(bad)
push
or
push
xor
sbb
or
dec
retf
sbb
sbb
das
call
xchg
mov
or
sbb
popa
fstp
jns
or
outs
fstp
or
mov
imul
or
in
mov
jnp
fidiv
sbb
sbb
sbb
sbb
sbb
mov
in
or
test
pusha
ret
das
popa
xchg
mov
or
sbb
retf
pop
inc
cs
or
fdiv
les
or
not
or
xchg
mov
mov
sbb
aaa
or
sbb
pop
jbe
xchg
sbb
popa
xchg
sbb
xchg
not
sbb
adc
or
fidiv
ret
retf
sbb
push
retf
pop
or
cmp
or
cmp
xchg
mov
or
pop
xor
sbb
in
gs
and
or
pusha
sub
sbb
in
or
fidiv
sbb
sbb
outs
or
(bad)
cmp
jnp
push
cmp
in
sub
sbb
mov
in
cmp
push
retf
fidiv
jnp
jnp
sbb
mov
sub
mov
mov
or
push
retf
fimul
adc
jnp
sbb
xor
sbb
push
retf
sbb
sub
or
mov
sbb
ret
and
jnp
push
and
in
sub
sbb
mov
in
and
push
retf
fidiv
sbb
jnp
sbb
fldenv
sbb
xchg
or
sbb
and
test
fldenv
sbb
xchg
and
popa
xchg
sbb
(bad)
xor
outs
fst
sbb
fldenv
dec
or
xchg
or
sbb
or
pop
jbe
test
fldenv
sbb
sbb
sbb
sbb
sbb
sub
or
in
sub
sbb
aaa
cmp
or
mov
sub
mov
mov
or
push
retf
fimul
cmp
or
in
mov
or
fidiv
sbb
sbb
sbb
sub
sbb
mov
pop
test
mov
pop
scas
xchg
mov
pop
loopne
add
inc
adc
push
push
(bad)
mov
add
lea
push
push
mov
add
aad
test
adc
ret
test
push
pop
mov
call
dec
out
and
push
adc
mov
sbb
fidiv
loopne
int3
push
push
mov
adc
push
outs
mov
mov
add
std
inc
mov
adc
jb
mov
add
movs
xchg
inc
mov
and
mov
js
add
push
xor
out
adc
add
push
mov
ret
adc
jae
mov
movs
and
sub
jmp
add
pop
mov
cmp
push
adc
pop
and
inc
cmp
loopne
dec
pop
pop
mov
adc
jl
ins
lds
nop
outs
push
or
ins
shl
inc
xor
hlt
push
sbb
mov
loopne
jb
out
ja
jl
(bad)
outs
pop
inc
add
inc
and
jae
lea
jne
mov
movs
or
ret
mov
adc
enter
sbb
push
jbe
dec
js
dec
add
jo
or
add
leave
pop
or
jg
cld
and
dec
and
and
sub
jno
test
je
inc
push
(bad)
fsubr
push
push
ins
iret
push
enter
pop
pop
and
enter
into
push
iret
xor
pop
inc
cmp
and
sub
hlt
hlt
mov
xor
cmp
je
push
inc
rcr
inc
mov
mov
push
or
sbb
push
test
xor
or
push
and
sbb
and
popa
das
popa
dec
or
mov
(bad)
jmp
push
imul
mov
and
pop
dec
enter
sbb
or
sbb
retf
pop
inc
cs
or
fdiv
mov
test
or
xchg
mov
push
or
sbb
or
mov
push
or
(bad)
sbb
xchg
jecxz
test
dec
add
(bad)
ss
in
push
xchg
push
mov
outs
mov
cmp
std
sub
mov
fs
inc
and
sbb
sbb
call
jo
not
jb
or
mov
add
or
pop
mov
shl
js
sbb
mov
aaa
or
sbb
loopne
retf
jnp
xchg
or
add
jo
dec
cmp
or
or
add
mov
pop
das
popa
movlps
dec
xchg
or
aaa
and
mov
cld
sbb
and
jl
call
(bad)
push
dec
enter
dec
and
popa
xchg
pop
xor
xchg
loope
xchg
or
adc
add
dec
and
sub
sbb
daa
shl
inc
js
and
cmp
and
test
push
lock
xchg
and
mov
sub
pop
push
popa
js
sbb
and
and
or
mov
fcomp
or
fs
xchg
adc
add
mov
pop
test
inc
sbb
inc
adc
popa
push
test
xor
adc
sub
movs
popa
and
popa
or
sbb
daa
add
mov
or
xchg
mov
inc
adc
mov
mov
add
ret
and
or
pusha
xchg
mov
pop
xchg
or
add
and
xchg
mov
inc
sbb
mov
or
sbb
sbb
daa
add
mov
or
xchg
mov
sbb
pop
ret
xchg
or
or
add
add
not
or
inc
push
cmps
sbb
fdiv
fst
sbb
xor
fwait
add
sub
or
add
adc
add
xchg
or
pop
mov
or
push
xchg
mov
loopne
or
test
popa
or
mov
aaa
mov
cmp
push
and
xchg
xor
sub
or
push
fcom
test
add
scas
or
pop
mov
sbb
mov
adc
push
push
and
call
xchg
push
in
and
popa
data16
mov
pop
or
test
sbb
or
sbb
mov
or
xchg
mov
mov
gs
or
popa
xchg
mov
or
sbb
or
popa
and
mov
or
sbb
outs
fstp
and
not
sbb
sbb
fstp
sbb
sbb
popa
xchg
mov
or
sbb
aaa
fsubr
xchg
in
xchg
or
mov
or
outs
(bad)
aaa
inc
cmps
cmp
sbb
stos
not
aaa
inc
push
fidiv
ja
lods
inc
aaa
or
push
mov
mov
pop
cmp
cmp
nop
or
nop
or
nop
or
nop
or
ret
xchg
or
jb
test
aaa
test
add
adc
not
or
not
or
not
or
not
or
and
sbb
nop
mov
or
jb
not
or
not
or
pop
xchg
ror
out
jae
or
adc
pop
or
pop
test
mov
nop
retf
sbb
sbb
idiv
movs
aaa
or
mov
or
sbb
mov
in
or
retf
pop
inc
cmp
fsubr
mov
test
or
xchg
mov
push
or
sbb
sbb
jnp
mov
mov
push
or
(bad)
sbb
sub
or
xchg
mov
or
das
or
add
sbb
sahf
push
or
mov
xchg
nop
push
or
in
and
outs
das
and
or
sbb
or
jnp
pushf
push
or
pop
inc
or
mov
or
mov
sbb
sbb
sbb
dec
enter
mov
jnp
or
retf
pop
or
adc
sbb
test
push
aaa
nop
and
sbb
or
sbb
cwde
push
jnp
mov
or
sub
dec
sub
or
aaa
in
mov
mov
nop
retf
pop
inc
or
mov
or
mov
xchg
mov
sbb
push
sbb
popa
fstp
pop
lods
outs
or
jl
pop
inc
cs
sbb
xchg
nop
retf
sbb
or
in
or
xchg
mov
mov
in
sub
inc
cs
sbb
mov
nop
retf
sbb
or
not
xchg
mov
mov
dec
enter
sbb
not
jb
sbb
or
pop
fcom
mov
nop
movs
or
in
and
pusha
das
jnp
sbb
dec
enter
or
arpl
aaa
mov
aaa
hlt
xchg
outs
or
sbb
test
add
pop
or
or
outs
or
aam
adc
cld
(bad)
aas
outs
sbb
into
mov
call
cmp
jb
mov
shl
sbb
mov
mov
or
cdq
jb
pop
rol
je
sub
push
pop
les
mov
popa
je
lahf
mov
sub
add
push
das
pushf
and
xor
mov
adc
dec
add
pop
mov
push
or
adc
push
push
inc
push
pop
jmp
fild
call
fmul
fist
add
mov
mov
inc
sub
pop
and
stos
sbb
sub
fwait
adc
mov
dec
cmp
mov
and
mov
test
inc
mov
mov
sbb
rcr
inc
ins
mov
dec
adc
pop
add
xchg
dec
fsubr
adc
xchg
ret
jmp
inc
cmp
cmp
jne
push
leave
pop
or
aaa
dec
inc
and
daa
(bad)
push
test
adc
ja
jne
movs
lea
(bad)
std
inc
and
mov
mov
mov
cmp
loope
xor
push
sub
adc
pop
and
and
bound
test
pop
inc
inc
adc
lea
add
fild
push
adc
mov
jne
rcl
setl
aas
add
test
adc
fnsave
(bad)
or
inc
add
or
cmps
test
sbb
push
push
push
jg
les
mov
pop
pop
mov
icebp
sbb
pop
call
mov
fstp
add
inc
or
inc
add
movs
or
push
loopne
test
retf
(bad)
ss
mov
mov
cmp
mov
adc
pusha
pop
adc
cmp
lahf
jns
test
pop
lahf
mov
call
(bad)
inc
lods
mov
push
push
mov
inc
sub
adc
mov
je
das
adc
add
popa
jmp
lock
jge
push
mov
mov
jne
cmp
jne
mov
ins
sub
std
fiadd
ret
or
mov
mov
add
dec
add
cmp
ss
dec
adc
ret
sbb
inc
cmp
je
mov
into
jne
xchg
ds
and
sbb
sub
dec
std
xchg
je
jmp
outs
jne
cmp
jne
sbb
pop
ret
lahf
xor
push
in
sbb
jne
call
mov
pop
pop
push
add
jmp
test
adc
icebp
mov
test
mov
push
inc
std
(bad)
(bad)
sbb
xor
jmp
mov
sub
sar
mov
mov
lods
add
add
or
retf
xchg
mov
cmp
jae
adc
dec
and
iret
cmp
push
jae
mov
shr
adc
push
pusha
jg
(bad)
fdiv
add
shr
adc
mov
(bad)
or
cmp
fwait
mov
mov
sbb
pop
and
mov
mov
mov
dec
push
push
push
dec
add
jg
add
and
lds
std
mov
mov
jge
loope
push
push
iret
jg
inc
add
test
(bad)
dec
jp
mov
test
je
and
(bad)
(bad)
out
xor
or
add
pop
mov
mov
mov
pop
inc
mov
outs
or
sbb
cli
add
xlat
lea
lods
cmps
aaa
cld
jg
jae
add
push
push
push
call
ror
fnsave
mov
and
sub
cwde
pushf
sbb
enter
fist
icebp
and
lock
xor
pop
pop
xor
mov
sub
add
mov
inc
or
adc
ret
and
jo
popa
into
adc
js
test
add
aas
loop
in
or
jecxz
out
cli
mov
push
push
lock
(bad)
call
jne
test
mov
je
mov
mov
xchg
adc
inc
or
mov
push
push
cli
bound
or
dec
hlt
test
pop
test
sbb
push
add
into
push
xor
pop
jg
ins
mov
outs
add
(bad)
push
mov
lea
mov
push
gs
ffreep
or
add
call
mov
mov
mov
jnp
les
add
ja
push
shl
sbb
push
mov
adc
mov
in
loope
push
adc
and
mov
bound
mov
pop
add
sbb
adc
and
jb
xor
enter
icebp
or
sub
pop
sub
dec
add
inc
sub
and
push
add
jo
pop
and
pop
sub
pop
push
mov
mov
xor
xchg
sub
add
sbb
outs
and
adc
outs
or
cs
or
xchg
shr
sbb
or
add
in
outs
iret
sub
mov
rol
call
dec
add
xor
pop
pushf
clc
inc
popa
fdivr
jmp
jbe
rcr
or
fstp
lock
mov
xor
dec
sub
sar
push
push
or
mov
lds
sub
call
or
je
jbe
call
adc
add
lock
xchg
ret
std
call
mov
mov
mov
mov
mov
mov
lea
and
sbb
aas
or
aas
hlt
sbb
mov
or
push
(bad)
inc
add
cmp
mov
jne
lea
arpl
ss
or
cmp
loope
fwait
push
add
or
mov
push
out
icebp
mov
stos
clc
(bad)
fdivr
dec
add
mov
cmp
jne
pop
xor
scas
mov
add
pop
dec
pop
mov
jmp
push
push
push
mov
push
mov
mov
popa
call
mov
xchg
sbb
lds
cmp
call
out
jb
mov
add
call
push
push
mov
push
push
jmp
xor
adc
setl
test
adc
les
add
ret
cli
cmc
mov
adc
clc
push
dec
add
sub
push
push
push
jp
push
inc
xlat
jmp
add
pop
pop
push
pop
pushf
jns
mov
xlat
push
out
inc
mov
jg
or
or
adc
cmps
mov
inc
add
mov
push
push
or
jge
adc
xor
ret
push
push
add
push
pop
or
lds
pop
aam
inc
mov
add
leave
add
inc
mov
sti
fisttp
push
push
xor
push
push
mov
pop
inc
shl
push
or
int
mov
dec
fs
aam
add
cmp
icebp
fs
xor
dec
pushf
shr
sbb
or
cld
jg
adc
adc
inc
and
add
push
stos
sub
xchg
xor
call
push
cmp
sbb
jl
dec
pop
dec
and
inc
xchg
jnp
ins
pop
and
add
js
and
pop
adc
and
add
popf
nop
mov
aas
sbb
inc
jb
aas
movd
rol
cld
in
jl
or
xlat
inc
loopne
inc
add
xchg
std
or
into
retf
sub
shl
int
or
sbb
mov
mov
adc
out
sbb
dec
and
cdq
mov
dec
mov
adc
loop
pop
sub
pop
ins
mov
sbb
test
ror
mov
add
ret
pop
loopne
push
mov
sub
imul
sub
push
push
sbb
fdiv
inc
mov
(bad)
mov
mov
je
push
mov
sub
shl
(bad)
add
mov
retf
call
xor
lods
pop
(bad)
cli
add
pushf
test
movups
(bad)
mov
das
and
fdivr
mov
cmp
add
jb
mov
mov
fst
xlat
test
mov
or
aas
out
add
push
jne
mov
rol
inc
and
les
fisttp
aad
inc
int3
ds
push
loopne
stos
sub
cmc
sbb
scas
adc
xor
mov
and
xor
inc
sahf
sti
fmul
enter
mov
lock
cmc
jne
xor
jmp
jb
and
adc
xor
jmp
call
loop
shl
test
enter
inc
or
mov
jmp
or
adc
test
push
pop
mov
(bad)
cmp
iret
or
xor
sbb
mov
pop
add
and
inc
adc
or
mov
mov
push
adc
inc
sub
adc
push
shl
mov
pusha
jg
(bad)
adc
adc
jp
sti
cli
mov
push
les
ret
shl
pop
mov
stos
into
push
addr16
fadd
add
fsubr
and
and
xchg
sub
push
ror
or
mov
fs
out
pop
inc
pushf
sub
adc
jg
pushf
and
push
push
push
mov
push
xor
mov
adc
scas
scas
mov
jl
mov
call
mov
pop
mov
push
mov
pusha
xor
dec
cmps
add
mov
or
es
dec
add
stos
pop
out
mov
push
push
call
push
pop
out
shr
push
stos
xchg
in
les
adc
clc
sti
xchg
movs
adc
enter
or
cmp
mov
xchg
loopne
fcmovb
lea
sub
jmp
xchg
and
fisub
pop
call
push
out
ins
ficom
inc
adc
push
dec
adc
or
push
movs
add
test
jmp
cmp
push
xchg
add
and
mov
je
adc
adc
div
or
inc
sub
jl
lea
gs
mov
aad
ins
xchg
add
sbb
push
xchg
dec
psubusb
adc
and
hlt
sbb
inc
mov
je
pop
jmp
in
add
int3
adc
imul
or
and
icebp
mov
mov
mov
dec
push
xchg
pop
add
js
arpl
ret
fadd
xor
push
test
push
(bad)
iret
outs
and
jnp
inc
adc
lea
clc
pop
xchg
imul
call
retf
jg
mov
xchg
mov
test
je
ja
push
inc
push
dec
aas
dec
push
mov
bswap
inc
in
fimul
add
cmc
push
adc
adc
add
push
or
jb
add
inc
push
mov
cmp
xor
push
push
mov
mov
mov
ja
ja
ror
je
sbb
iret
je
push
mov
add
and
sbb
cld
fisub
dec
int3
push
mov
jns
mov
xlat
pop
clc
jo
add
sbb
sbb
or
mov
pop
sub
mov
adc
pop
ja
push
in
mov
(bad)
in
jg
addr16
dec
and
dec
fs
lds
js
fs
out
or
dec
and
punpcklwd
mov
sub
jns
push
out
pop
cmp
push
jae
shl
and
ja
pop
jne
test
or
call
adc
or
cmp
add
icebp
mov
(bad)
dec
lock
fist
ja
xor
test
mov
aaa
mov
add
or
sub
mov
add
cmps
mov
mov
int
sbb
pop
xchg
mov
sub
maskmovq
imul
adc
call
sbb
and
div
jnp
push
sbb
jb
mov
jmp
lea
xor
mov
(bad)
or
mov
push
adc
pop
popa
and
fiadd
imul
xchg
mov
or
pushf
aam
je
es
adc
xlat
ret
ficom
retf
or
mov
es
mov
push
ja
adc
test
cmp
inc
inc
ins
push
and
dec
and
push
push
out
xor
and
push
sti
fnsave
sub
or
and
les
jo
scas
mov
int3
ss
push
div
push
sahf
outs
ds
pop
mov
mov
sub
sldt
jae
jbe
mov
or
call
cmp
lds
cmp
pushf
jbe
cld
rcr
cmp
int3
sti
mov
add
mov
cmp
je
out
and
add
add
mov
or
xor
cmp
and
add
pop
sub
or
inc
xor
les
call
pushf
xor
adc
fisttp
xchg
mov
lea
cmp
jne
cmp
jmp
inc
add
imul
mov
adc
out
xor
retf
fstp
add
sbb
out
xlat
je
adc
je
inc
xchg
push
jl
(bad)
pop
or
mov
popa
adc
or
fcom
addr16
sbb
retf
in
xchg
and
or
jo
mov
and
gs
or
and
and
cmp
sbb
lods
dec
fadd
push
mov
jo
data16
or
lock
push
pop
mov
fs
add
test
pop
les
jbe
and
popf
pop
push
push
sbb
adc
out
cmc
mov
adc
addr16
mov
and
adc
(bad)
leave
cmp
std
add
sbb
cmc
push
out
mov
lock
sub
ret
stc
jo
fcmovnb
dec
int3
cmp
xchg
data16
pushf
or
add
jne
or
xchg
mov
or
cmp
iret
inc
mov
test
mov
sbb
iret
mov
push
dec
adc
adc
push
mov
test
retf
iret
call
iret
pusha
iret
in
or
iret
and
and
test
mov
and
test
nop
iret
fcom
jl
inc
imul
test
add
int3
mov
into
xor
adc
cwde
dec
pushf
mov
hlt
fwait
mov
adc
ret
je
adc
lock
or
add
leave
jne
or
lahf
and
and
pusha
or
and
and
dec
pusha
dec
ret
ret
or
enter
cmp
js
add
js
xchg
xor
sbb
dec
cmovl
inc
cli
imul
loope
mov
fmul
pusha
mov
pusha
js
cmp
ins
ins
fld
je
lods
mov
inc
ins
jbe
push
sub
out
jg
add
pop
imul
sub
mov
and
push
test
push
repnz
std
inc
and
adc
mov
mov
cwde
add
sub
jb
ss
and
or
scas
addr16
xchg
xchg
ins
add
mov
movs
add
out
lods
fiadd
das
mov
mov
sub
test
jl
int3
int3
push
out
inc
xor
add
push
call
std
ja
inc
(bad)
push
mov
mov
cmp
sbb
jecxz
dec
adc
mov
add
sbb
dec
adc
cmp
je
outs
add
push
pop
je
xor
mov
mov
inc
mov
test
jne
mov
inc
jne
or
add
dec
je
jmp
mov
lock
nop
xor
pop
push
cmp
enter
(bad)
or
sub
adc
xor
jmp
rol
or
and
pop
add
xor
jb
cli
test
fld
inc
mov
mov
add
push
add
lahf
jp
sti
mov
push
and
or
sub
int3
jo
pop
adc
mov
mov
sub
and
inc
int3
xor
in
mov
popf
push
pusha
mov
nop
fnstenv
and
cmc
and
sti
sub
int3
xor
out
lods
mov
add
mov
inc
ficom
mov
je
popa
mov
sahf
or
and
and
ss
(bad)
call
inc
sub
push
(bad)
and
push
sub
daa
add
pop
sbb
fwait
call
jl
xor
mov
add
push
and
dec
(bad)
jmp
mov
push
mov
mov
push
push
dec
rcl
mov
and
sbb
push
xor
(bad)
push
lea
lock
push
adc
adc
or
fidiv
sub
xchg
in
add
sub
lods
inc
mov
cmc
push
adc
pusha
dec
and
sbb
sar
ins
and
adc
add
inc
push
sbb
sbb
les
js
sbb
push
out
sbb
jp
sub
dec
into
inc
fild
outs
or
bound
mov
mov
xor
frstor
je
sbb
jo
popa
mov
xchg
push
scas
or
adc
inc
add
dec
rol
in
cmps
or
push
mov
call
loopne
sub
or
aam
cmp
xchg
jmp
add
push
push
ja
mov
lea
push
verw
jl
std
out
aas
inc
add
mov
call
mov
xchg
rcr
cli
mov
adc
nop
test
dec
dec
lahf
sub
xchg
push
cmps
cmps
out
pop
fs
push
xor
add
enter
push
or
push
cmp
or
ud0
add
push
push
jbe
mov
leave
or
mov
(bad)
cmp
xor
pusha
mov
adc
or
add
ins
bound
sbb
lahf
add
dec
push
clc
je
cmp
xor
inc
and
mov
dec
inc
dec
xor
inc
mov
lds
add
call
inc
ins
cmp
fs
jb
mov
jmp
mov
into
aad
je
push
cli
push
push
sub
inc
mov
push
dec
test
out
xchg
push
sub
ins
sbb
cld
cmp
xchg
cmp
push
loope
cmp
add
div
dec
xor
adc
test
jo
(bad)
je
and
rcl
push
(bad)
and
push
out
add
stc
ror
daa
mov
adc
pop
jmp
dec
dec
and
jbe
test
push
sub
(bad)
js
xchg
rcl
pop
cmp
mov
pop
xor
pop
mov
sub
mov
imul
ds
(bad)
mov
pop
data16
jmp
les
dec
pop
inc
jne
sbb
adc
dec
xor
or
adc
nop
mov
mov
inc
stos
es
xor
mov
mov
jle
or
or
inc
loope
sbb
inc
inc
pop
test
jle
mov
cmp
dec
fbstp
dec
push
mov
cmp
push
inc
jl
push
cmp
imul
std
mov
mov
pop
ret
outs
ffreep
or
mov
syscall
lock
aam
stos
jg
push
xor
fdivr
jbe
mov
mov
push
mov
push
add
in
jmp
cmc
js
cmp
bound
pop
and
stc
adc
stc
mov
mov
loop
or
aam
inc
(bad)
(bad)
imul
call
or
jp
mov
js
jmp
ret
mov
sahf
call
ins
and
mov
push
adc
pusha
xor
push
jge
and
and
push
push
push
mov
and
jb
push
push
sahf
out
ins
and
inc
pop
dec
movs
xchg
or
mov
retf
nop
stos
xlat
and
arpl
test
das
inc
cmp
xor
and
pushf
mov
inc
pushf
sub
push
mov
lods
cli
or
mov
xlat
pop
or
scas
cmp
test
(bad)
dec
dec
cmp
je
push
call
adc
out
mov
inc
es
xlat
jne
pop
enter
push
js
iret
add
sub
xchg
mov
rcl
pop
mov
xlat
or
leave
dec
sub
or
or
and
inc
ins
add
sub
sub
push
sub
adc
cld
sub
fidiv
sub
(bad)
push
int3
call
sbb
dec
inc
fwait
mov
inc
and
into
test
cmp
push
cld
mov
daa
xchg
int3
sbb
je
js
gs
sub
pop
out
fs
jmp
cld
pusha
pcmpgtd
test
push
sbb
ret
pop
fst
pop
shl
and
pop
ins
inc
xor
or
adc
or
add
rcl
mov
adc
lahf
inc
pop
xchg
fnstcw
or
jmp
mov
pusha
dec
add
adc
or
inc
ins
jmp
adc
sbb
inc
sub
dec
xor
jo
mov
mov
sub
enter
aaa
xor
call
mov
cmp
cmp
ja
mov
cwde
inc
and
sbb
inc
pop
cmp
or
jae
sti
jmp
cmp
jne
push
lea
cmp
das
pop
pop
fst
pop
inc
inc
inc
dec
sub
hlt
jmp
xor
cmp
pop
jne
add
push
lahf
xor
xor
daa
dec
cmp
pusha
cmp
leave
inc
or
ret
sub
aam
outs
enter
xor
inc
mov
dec
lds
and
das
inc
and
sub
or
inc
mov
xchg
ror
aas
(bad)
inc
push
nop
cmp
mov
jmp
dec
pusha
aam
inc
jnp
push
int
pop
xchg
inc
xchg
inc
push
jl
inc
inc
jo
inc
pop
dec
mov
test
xchg
pop
es
movs
sbb
popa
test
cmp
test
ds
scas
or
or
sub
sub
add
push
cmp
jne
cmps
bound
push
mov
xchg
out
dec
and
mov
push
js
neg
sub
adc
adc
xor
rcl
loopne
jmp
sub
push
adc
or
pop
fs
xchg
je
dec
and
or
jb
and
and
fs
lods
loop
cmp
outs
sar
mov
cmp
mov
cmps
or
push
ret
mov
push
pop
test
push
jbe
sbb
icebp
loopne
repnz
and
cdq
mov
rol
dec
push
mov
push
add
mov
dec
inc
cmp
xor
inc
dec
xor
jno
or
or
sub
or
cmp
cmp
inc
and
mov
mov
inc
int3
cmp
cmp
add
add
lods
cmp
call
rol
add
mov
aas
popf
dec
and
cmp
scas
fs
dec
jmp
faddp
fcos
(bad)
call
cmp
jne
lea
cmp
xor
or
jmp
jne
add
push
fdiv
ins
shl
cmps
fsubr
xor
rcl
xchg
nop
and
and
lods
xor
jmp
sub
dec
cs
add
adc
mov
cmp
je
retf
out
jmp
call
push
lock
ror
sbb
jne
popa
stos
cmp
and
jnp
sbb
pushf
jbe
push
jbe
jo
mov
pusha
retf
push
add
in
and
xchg
lea
out
ds
dec
xor
jl
fld
popa
mov
dec
pop
xchg
dec
int3
mov
out
mov
push
sub
(bad)
xor
fmul
(bad)
fsubp
pop
fist
add
dec
pop
lods
inc
ins
and
jnp
rcl
mov
push
pop
cld
dec
dec
daa
cmp
jne
push
ficom
add
int3
inc
lods
ret
ret
mov
mov
lds
jbe
aaa
or
dec
scas
sbb
and
or
pop
mov
je
mov
and
sbb
adc
push
les
and
mov
retf
adc
adc
and
dec
or
dec
inc
int3
mov
and
sbb
and
mov
mov
push
mov
mov
lods
and
or
add
push
push
cmp
fcomp
jl
cwde
sub
mov
or
loopne
add
xor
push
lea
and
ret
cwde
jecxz
push
mov
into
jl
mov
aaa
cmp
pusha
mov
movs
and
mov
scas
xchg
test
test
add
sbb
dec
xor
mov
mov
jle
(bad)
jle
pop
mov
dec
ins
into
fld
popf
xor
mov
cmp
pop
dec
int3
int3
lahf
nop
or
adc
pop
call
sbb
call
das
sub
add
test
out
mov
sub
add
fs
cmp
pop
das
inc
or
push
mov
dec
inc
sbb
fdivr
fist
loopne
mov
mov
test
jne
mov
mov
or
je
add
mov
or
pop
sub
mov
push
std
addr16
mov
je
mov
pop
ret
mov
lods
iret
add
dec
sbb
adc
push
jle
and
in
mov
shl
or
add
aas
add
pop
dec
add
das
inc
mov
mov
add
adc
mov
mov
push
test
es
jg
mov
dec
or
push
mov
push
add
add
mov
push
daa
mov
inc
clc
mov
mov
pop
mov
mov
add
sahf
xchg
es
outs
enter
arpl
mov
push
xor
push
mov
mov
xor
and
sub
stos
add
mov
outs
std
mov
push
lea
loopne
rcl
lods
sbb
and
lahf
adc
loope
cmp
out
pop
test
pop
adc
inc
sub
stos
aas
sub
add
ret
and
push
xor
pop
pop
adc
lahf
icebp
ret
add
lahf
dec
ins
dec
inc
dec
or
adc
adc
cmovo
add
(bad)
clc
fwait
mov
jl
adc
push
xor
(bad)
out
and
in
pushf
cmovs
nop
and
add
add
cmp
push
cmovns
jb
sub
cmp
pop
adc
lahf
add
push
push
in
das
add
mov
mov
call
adc
dec
sub
xchg
mov
push
icebp
mov
outs
lds
cmp
xor
add
int3
(bad)
jmp
sbb
mov
sub
inc
retf
push
dec
into
mov
fnstcw
jmp
xchg
or
fs
push
push
mov
xchg
push
and
aas
add
push
mov
call
push
cmps
mov
inc
mov
das
fiadd
test
mov
lods
inc
mov
push
scas
jne
iret
mov
or
je
add
repnz
and
mov
and
aad
adc
lea
sub
fadd
mov
ins
std
cmp
inc
int3
cmp
jle
sbb
cmp
xor
adc
das
lods
or
mov
pop
and
mov
push
dec
or
leave
dec
mov
inc
xor
jmp
sub
test
or
dec
mov
mov
in
add
push
and
sbb
jmp
cmps
or
or
cmp
pop
inc
scas
or
mov
jo
lea
fwait
mov
mov
mov
or
(bad)
and
xor
mov
mov
and
mov
push
lea
test
pop
sbb
xchg
mov
dec
and
push
lea
int
mov
add
addr16
add
dec
or
(bad)
aas
test
push
sbb
rol
inc
sbb
dec
js
fs
sbb
jb
(bad)
add
add
mov
xchg
mov
in
mov
adc
add
lods
(bad)
cmp
mov
pop
out
loopne
jle
nop
pop
adc
std
daa
pop
mov
pop
jmp
dec
and
lahf
push
pop
vmread
in
iret
mov
scas
ret
pop
adc
push
int3
pop
push
mov
push
xor
inc
push
imul
jne
push
jg
add
movs
inc
inc
sbb
inc
and
xchg
sbb
mov
jmp
pop
push
test
mov
jne
xor
inc
add
aaa
sbb
lea
mov
test
(bad)
dec
or
add
(bad)
jmp
mov
sub
sar
test
je
mov
sub
rol
(bad)
(bad)
cli
add
cli
jae
mov
mov
add
pop
mov
mov
hlt
cmps
or
mov
push
or
(bad)
add
cmp
nop
aas
pusha
call
cmc
adc
cld
jg
adc
sub
dec
call
push
push
call
mov
mov
lea
(bad)
jg
add
add
ins
test
je
inc
cmp
jl
cmc
pop
jnp
push
ret
pop
pop
sub
int3
stos
dec
add
fistp
out
dec
push
add
inc
or
or
dec
aaa
mov
pusha
clc
jmp
sbb
inc
fcom
pop
test
je
mov
mov
or
and
push
mov
mov
sbb
or
push
adc
and
jmp
xchg
inc
and
mov
mov
pop
ret
int3
mov
add
mov
call
je
lea
fwait
outs
and
lea
mov
lea
in
(bad)
(bad)
dec
or
sub
or
inc
adc
push
sub
push
xor
mov
outs
adc
add
mov
sbb
in
pusha
pop
push
and
adc
sub
loopne
test
add
mov
push
sbb
push
ret
mov
adc
sub
call
ror
lea
mov
mov
test
or
mov
out
sbb
sbb
repnz
js
adc
add
xchg
pop
or
sub
loopne
outs
movs
jmp
add
neg
pop
into
mov
in
xor
push
jbe
rol
mov
je
adc
cmc
fwait
je
and
inc
adc
pop
xor
mov
mov
sti
loopne
cmp
add
cmp
jne
pop
stos
pop
cmp
add
aas
je
lds
fwait
iret
stc
or
pop
addr16
inc
lahf
cmp
je
push
lea
cdq
push
das
js
cmp
mov
cwde
xor
aaa
nop
and
pop
rcr
cmp
sbb
retf
fs
jo
pop
xor
in
or
rcr
add
es
cmp
inc
and
sbb
loope
arpl
sub
idiv
add
test
jg
mov
mov
cmc
xchg
test
jae
adc
sbb
imul
pop
and
adc
and
and
fld
lock
sub
jmp
or
sbb
pop
pop
dec
enter
mov
xor
mov
sbb
xor
add
js
jb
mov
pop
or
pop
in
out
and
sbb
add
adc
jl
mov
sbb
sbb
jl
sub
mov
ja
sbb
lea
dec
jg
cmp
add
inc
mov
fs
or
ror
adc
inc
enter
je
and
adc
mov
pop
scas
pop
(bad)
daa
sbb
movs
lods
mov
xchg
je
mov
cmp
aaa
int3
jne
je
pop
add
scas
fild
clc
aad
repnz
jne
push
ins
or
mov
push
sbb
or
or
mov
add
jns
pop
pop
mov
add
push
jg
mov
loopne
or
or
push
jg
aaa
adc
mov
ret
push
push
push
jnp
test
cmc
inc
add
je
push
mov
call
adc
or
jg
or
dec
cmps
ins
fdiv
out
lods
xchg
or
and
and
add
mov
or
lea
or
pop
pop
pop
iret
rol
or
xor
jecxz
mov
mov
adc
push
lahf
mov
call
cmp
jne
les
(bad)
pushf
pop
ret
repnz
or
mov
mov
push
mov
dec
mov
mov
dec
dec
mov
ret
pop
push
pop
sbb
cdq
sbb
in
mov
jp
jle
and
nop
mov
mov
shr
mov
(bad)
(bad)
dec
mov
shl
sar
test
jle
cmp
jge
mov
mov
lea
mov
mov
shr
mov
movs
mov
mov
dec
sub
mov
daa
sbb
lock
dec
mov
add
add
mov
jmp
mov
pop
adc
je
arpl
jmp
inc
dec
test
mov
dec
add
jbe
jg
jb
fsubr
pusha
or
add
dec
ins
and
jg
inc
and
jle
retf
fisttp
and
or
mov
jg
sbb
and
mov
mov
ja
loop
sub
mov
repnz
dec
jno
retf
push
call
rcr
cwde
pop
add
and
ret
scas
mov
(bad)
(bad)
inc
add
adc
(bad)
(bad)
dec
pop
and
or
add
push
or
mov
mov
shr
adc
int3
das
and
pusha
lahf
addr16
jno
push
jl
lds
pop
ret
inc
pop
and
(bad)
aas
push
je
mov
cmp
jbe
mov
cmp
je
cmp
je
test
add
cmp
sub
pop
mov
je
sbb
mov
mov
movzx
xchg
pop
jnp
dec
sub
push
mov
call
sti
xor
ret
mov
push
push
mov
mov
lea
cmp
jae
(bad)
clc
fnstsw
imul
ret
arpl
ins
je
cmp
(bad)
(bad)
(bad)
push
cmp
jbe
cmp
jae
mov
mov
mov
sub
sar
mov
mov
adc
add
pop
pop
push
imul
call
mov
test
push
push
push
push
je
cmp
test
cmps
cli
outs
adc
icebp
xor
ss
or
add
add
loopne
add
sub
sar
add
jmp
mov
in
pusha
test
jne
sbb
xchg
std
mov
je
mov
jmp
xor
jg
(bad)
dec
sub
sar
cmp
jg
sub
mov
mov
dec
ret
mov
mov
scas
out
(bad)
and
clc
dec
mov
je
and
std
outs
and
and
mov
lea
mov
aaa
mov
sub
hlt
out
pop
push
mov
jmp
out
add
push
cmp
je
mov
sbb
je
jmp
mov
std
xor
mov
ror
lahf
jmp
pop
cmp
fcom
sti
cmp
jg
xor
ds
ret
lock
clc
mov
mov
mov
mov
mov
jmp
mov
(bad)
clc
adc
adc
dec
mov
or
cld
jecxz
mov
adc
call
add
jnp
outs
addr16
clc
add
cli
test
sub
(bad)
cmp
je
xor
aam
js
mov
pop
test
jl
ret
cmp
clc
sar
cmp
jg
addr16
fsubr
je
push
push
mov
inc
mov
test
je
enter
dec
pusha
jno
sub
sar
cmp
jg
mov
sub
adc
aad
(bad)
adc
cdq
pop
pop
pop
ret
lea
pop
mov
add
dec
and
aad
mov
and
cld
or
dec
lea
imul
fistp
cmp
add
add
push
in
ins
xchg
sbb
in
push
and
jg
pop
push
and
test
jg
mov
mov
ins
push
mov
loopne
dec
sbb
mov
inc
dec
pop
mov
in
sbb
inc
adc
push
xlat
mov
mov
push
nop
pop
stc
or
jge
dec
les
mov
fld
inc
mov
(bad)
add
imul
and
mov
mov
rol
jmp
and
push
add
add
jne
out
into
jmp
jle
push
das
retf
cmp
and
jnp
out
or
xchg
and
or
pop
cmp
jne
jo
xor
imul
push
sub
and
dec
js
adc
adc
or
add
jb
mov
popa
cmp
push
cmp
arpl
cmp
rcl
cs
add
add
mov
push
xor
test
neg
adc
sub
push
sub
jne
mov
sub
into
(bad)
pop
mov
mov
or
test
jne
and
hlt
enter
xchg
ins
lds
xchg
or
mov
cmp
mov
push
mov
or
mov
or
push
push
sar
sbb
inc
cld
mov
xor
cdq
and
sbb
clc
jg
out
imul
push
mov
test
push
je
mov
cmc
call
lods
je
mov
cmp
jae
mov
clc
jo
ror
mov
shl
push
inc
mov
(bad)
(bad)
push
push
je
mov
mov
lea
cmp
jb
pop
add
or
add
jmp
inc
xor
mov
sbb
or
shl
push
hlt
(bad)
sub
add
sar
out
mov
mov
shr
cmp
mov
jae
mov
leave
jbe
out
(bad)
inc
icebp
cmp
jae
shr
test
ja
jmp
push
sbb
ret
add
add
sub
out
add
test
cli
add
push
mov
mov
lea
fs
out
data16
sbb
enter
add
inc
mov
mov
das
jae
sbb
outs
sub
mov
or
test
mov
jne
std
mov
adc
pop
cmp
sbb
dec
and
mov
lea
ret
mov
or
outs
call
adc
fcmovnb
aas
push
xor
sti
mov
sub
pop
aaa
and
xor
add
add
xor
mov
mov
sub
sar
lea
mov
mov
arpl
sub
sub
rol
mov
mov
mov
push
das
(bad)
lock
add
sub
mov
add
xor
jnp
sti
cmp
bound
dec
jnp
jmp
inc
mov
bound
mov
sub
sar
lea
test
sub
mov
(bad)
(bad)
out
std
mov
add
inc
(bad)
pop
dec
mov
mov
pop
lea
mov
adc
mov
mov
aas
adc
dec
inc
iret
mov
rol
jne
sbb
icebp
pop
mov
rol
add
ror
call
or
xor
mov
addr16
vmread
push
cmps
(bad)
les
mov
adc
aaa
sbb
inc
std
outs
sbb
mov
inc
loopne
aam
(bad)
push
dec
jne
clc
mov
loopne
inc
sub
pop
mov
mov
pop
mov
cmp
xchg
ror
sub
sub
(bad)
cwde
inc
push
push
lea
pop
fsub
in
xlat
add
ins
movs
mov
mov
enter
in
push
scas
sbb
outs
loop
push
add
leave
push
xchg
ror
push
mov
jmp
mov
int
mov
pop
sub
adc
scas
adc
ror
clc
(bad)
dec
jl
sbb
rcl
stc
sar
cmp
jg
mov
sub
jmp
inc
xchg
mov
je
scas
(bad)
jmp
mov
cmp
jne
add
jmp
or
sar
cmps
call
and
loop
or
mov
pop
dec
dec
or
call
sbb
push
jl
pop
icebp
pop
ins
pop
pop
mov
lea
out
rcl
ds
and
fld
leave
adc
or
ret
aas
les
inc
and
lock
test
jne
iret
mov
sub
inc
or
add
pop
push
xor
push
pusha
adc
sbb
jecxz
daa
and
xor
jo
ret
outs
shl
dec
sar
push
mov
mov
jge
mov
pushw
(bad)
(bad)
dec
idiv
(bad)
mov
mov
mov
jle
cmp
jbe
sub
inc
call
call
fbld
mov
test
mov
jne
mov
sbb
push
inc
dec
add
inc
cmp
and
ins
cmp
push
fwait
jp
call
inc
call
mov
ror
dec
push
cs
cmp
je
clc
jl
pop
std
jg
lea
cmp
jae
mov
dec
or
mov
mov
add
ja
idiv
push
jne
or
mov
movs
jne
in
call
shl
or
dec
jmp
lea
mov
or
mov
je
popf
dec
jmp
lea
cmp
jae
imul
cmp
pop
or
or
icebp
inc
test
jne
out
int3
retf
fiadd
dec
jmp
jo
cdq
nop
sub
or
jbe
and
sub
rcl
pusha
out
inc
cld
and
add
mov
aaa
aad
xchg
mov
jmp
jae
inc
ret
jno
inc
clc
fist
jp
add
mov
aaa
xor
loop
test
sar
inc
or
inc
bound
cmps
cld
ret
xor
cmp
pop
fmul
aaa
sub
fimul
or
imul
ret
add
or
mov
ret
retf
ret
or
arpl
retf
add
mov
mov
mov
movs
dec
hlt
loope
or
dec
add
mov
scas
fdiv
cmp
adc
fwait
xor
push
lea
lds
call
jne
lock
sub
test
push
stos
(bad)
dec
xor
addr16
jg
inc
adc
mov
push
sbb
ss
aas
cmps
adc
pop
jecxz
jne
mov
mov
jg
add
int3
cmp
add
add
fwait
and
pushf
push
or
pop
mov
or
and
adc
movs
in
and
pop
cli
pop
ins
cmp
ror
leave
(bad)
out
jmp
and
sbb
fistp
shl
mov
mov
js
call
add
enter
push
mov
adc
xor
fadd
xor
sbb
pop
stos
clc
aaa
cmc
sbb
and
mov
call
pop
cmp
jb
ja
jmp
add
mov
cmp
je
mov
mov
rcr
les
mov
ins
adc
sbb
scas
pop
(bad)
inc
push
add
dec
mov
adc
jmp
mov
mov
cmp
push
pusha
enter
inc
or
int
mov
je
loopne
xor
push
and
rol
mov
and
adc
mov
jmp
adc
push
add
pop
inc
or
push
add
and
in
sub
stos
sbb
call
adc
or
push
inc
int3
mov
adc
sbb
jp
inc
adc
jg
mov
or
push
push
lea
loop
inc
popf
ss
sbb
and
cmp
sbb
add
add
push
inc
repz
push
push
pop
add
std
mov
out
jbe
sub
mov
push
push
lea
lea
inc
loopne
or
clc
inc
sub
fdivr
add
add
inc
push
push
inc
mov
js
call
pusha
pop
mov
and
loop
shl
ins
mov
cmp
jg
sbb
push
test
mov
or
inc
inc
(bad)
mov
xor
cmp
in
cmp
pop
jl
ins
and
je
mov
pop
sub
inc
dec
test
push
cmp
add
stos
inc
xchg
mov
add
dec
mov
and
pop
sub
push
xchg
mov
inc
xor
outs
sub
mov
push
add
outs
and
cmps
push
mov
dec
inc
jl
fidiv
push
pushf
push
call
add
clc
push
xor
cmc
cmps
adc
adc
push
lods
or
add
iret
inc
jne
and
xor
adc
cmp
shr
in
outs
out
push
sar
xor
mov
or
add
xor
mov
jb
mov
loop
adc
dec
add
push
ss
or
add
cmp
inc
call
jo
fdiv
imul
xor
push
push
or
mov
cmp
pop
je
inc
hlt
jnp
outs
dec
arpl
sub
lea
push
inc
pushf
imul
jo
xor
or
add
not
mov
mov
dec
fld
loope
daa
cmp
and
mov
jge
push
inc
je
and
mov
je
xor
cmp
ss
pop
cmp
pop
outs
add
loopne
dec
mov
test
or
inc
push
xor
rol
dec
popf
dec
dec
xchg
or
aad
xchg
sbb
push
add
push
mov
xor
(bad)
(bad)
call
mov
sub
mov
imul
add
sar
mov
shr
add
push
sar
ret
jle
dec
add
test
mov
std
push
add
push
inc
sub
inc
ins
inc
(bad)
jg
clc
adc
jmp
xor
add
dec
jne
mov
xor
cmp
imul
xor
cdq
or
or
push
push
and
inc
pop
bound
mov
mov
xor
push
shr
and
or
sub
(bad)
add
pop
cwde
sub
popa
sbb
pop
add
push
mov
cmp
push
dec
jae
lds
hlt
out
mov
adc
sbb
push
inc
add
ins
add
retf
cmps
mov
push
sub
push
dec
jne
nop
jae
jne
adc
sub
jmp
mov
dec
dec
add
aas
aam
add
push
push
push
push
lea
or
outs
loopne
push
sahf
add
ins
mov
add
cmp
or
outs
inc
sub
adc
add
sbb
inc
imul
pop
or
adc
ins
mov
jae
push
add
and
dec
add
pusha
xchg
mov
adc
adc
cmp
je
push
inc
jmp
and
sti
test
je
cmc
add
cmp
inc
sub
clc
add
xchg
inc
retf
test
(bad)
jo
mov
push
mov
pop
xchg
cmp
add
push
push
mov
cli
jle
dec
and
push
push
push
pusha
in
shr
sbb
or
push
add
xchg
mov
aad
sar
push
mov
push
push
or
mov
pusha
inc
cmp
je
xor
cmp
jmp
mov
mov
cs
sub
ret
js
pop
jg
iret
mov
xchg
sar
icebp
sbb
mov
test
cmp
add
fsubrp
mov
jmp
inc
ret
pop
(bad)
pop
mov
mov
dec
pop
ret
mov
cmp
adc
fidiv
mov
test
inc
mov
sbb
inc
sahf
retf
cwde
loope
stos
push
adc
pusha
dec
fistp
mov
push
push
mov
push
jo
dec
jo
push
mov
cmp
xor
int
sti
aaa
add
pop
add
pop
add
rcl
mov
outs
clc
add
adc
or
pop
push
push
push
pop
aaa
adc
(bad)
je
ds
(bad)
loopne
ret
pop
out
mov
mov
cdq
and
mov
sar
and
inc
add
dec
or
inc
mov
xor
test
mov
mov
jle
clc
jmp
(bad)
mov
fisttp
mov
or
fiadd
(bad)
in
sub
ret
sub
mov
inc
add
cmp
jl
xchg
adc
idiv
xor
add
std
js
push
adc
je
mov
and
adc
push
inc
(bad)
push
ret
xor
mov
out
xor
dec
call
lea
pop
mov
inc
test
jne
sub
push
push
inc
ja
add
inc
push
in
push
xchg
inc
and
mov
sbb
lea
add
add
outs
add
jne
cmp
sti
adc
jmp
adc
mov
jns
add
push
xor
cmc
cmp
mov
add
push
and
mov
adc
push
cmp
mov
ins
push
push
inc
xor
dec
pop
sti
pop
add
and
sbb
inc
and
inc
rol
sbb
inc
fadd
imul
jecxz
xor
jno
pop
mov
mov
je
adc
mov
cmc
jb
out
xor
xchg
ret
cmp
in
xchg
pop
out
ds
mov
test
pop
je
cmp
jmp
push
push
push
xor
call
jmp
aaa
cld
or
xchg
bound
clc
call
dec
xchg
sbb
jne
push
push
sub
push
xchg
cmp
test
dec
popa
xchg
popa
mov
add
cmp
je
push
xchg
inc
je
fisttp
mov
test
ins
jnp
or
lock
pop
xor
ins
and
ret
test
add
cmps
idiv
mov
mov
add
pusha
mov
jg
adc
and
jg
ret
and
xchg
arpl
jne
push
add
repz
mov
adc
cmp
jmp
test
clc
das
pop
add
push
push
push
add
and
mov
pop
xor
pop
lea
div
ds
mov
add
div
pop
pop
sbb
push
rcl
xor
mov
pop
jae
cmps
push
push
add
fwait
dec
inc
aas
add
fwait
dec
mov
add
adc
mov
stc
or
and
jp
mov
pop
lea
push
addr16
fiadd
fnstenv
shl
jle
mov
fsub
loopne
jle
dec
les
xor
inc
pop
ins
adc
add
and
adc
xlat
jne
mov
push
sub
call
cmp
xchg
mov
add
dec
or
xor
out
adc
out
xor
xor
push
mov
fsub
push
mov
enter
test
fst
or
inc
sbb
dec
fwait
push
popa
mov
and
dec
push
fstp
xchg
dec
inc
arpl
adc
loopne
push
push
sbb
lock
xchg
mov
and
shl
sbb
jg
icebp
sub
or
mov
pop
dec
and
push
or
pop
push
pushf
and
push
mov
xor
cdq
sub
sbb
cmp
movs
cmp
lock
mov
test
les
sbb
fstp
and
sbb
ja
es
inc
and
jl
cmp
je
mov
dec
and
mov
push
push
push
push
call
repz
sbb
aaa
mov
mov
add
std
or
or
leave
je
push
fst
icebp
sbb
int3
cmp
data16
inc
and
adc
mov
call
adc
push
push
dec
cmp
push
and
outs
sbb
lahf
sub
pop
pop
pop
xor
xor
and
psrad
jg
push
or
call
mov
push
mov
sub
clc
push
xor
dec
cmp
ja
jmp
mov
dec
jmp
mov
mov
mov
add
das
dec
mov
cmp
and
mov
(bad)
mov
pop
je
pop
add
add
or
jmp
cs
inc
or
jmp
push
dec
push
pop
sbb
or
daa
adc
call
push
fdiv
ret
jmp
mov
add
cmc
fistp
call
mov
mov
pop
add
sar
push
lahf
push
add
mov
cmp
dec
adc
cld
scas
and
clc
jne
mov
pop
inc
int3
xor
in
js
test
je
dec
jne
cli
(bad)
mov
lea
cmp
ja
jmp
sbb
add
or
or
int3
lds
ret
in
mov
cdq
or
dec
neg
lea
add
xor
add
shl
jl
scas
loopne
ret
xor
sahf
fsub
leave
loopne
mov
pop
inc
(bad)
pop
mov
push
mov
rcr
jg
int
adc
pusha
pmulhuw
mov
push
scas
push
mov
add
cmovp
jb
xchg
pop
sub
jb
lods
pop
lea
xor
mov
mov
and
dec
adc
push
jl
mov
mov
push
push
mov
inc
dec
sbb
clc
push
call
fs
sar
sub
push
add
ficom
xor
adc
call
(bad)
rol
xor
mov
push
or
sub
test
sbb
dec
sbb
push
mov
xor
jbe
push
or
sbb
ret
jle
add
sub
pop
pop
push
xchg
es
test
enter
adc
iret
(bad)
mov
lods
fmul
dec
pop
sub
add
jl
dec
xchg
sub
add
push
pop
or
and
sbb
and
xchg
das
sub
dec
and
inc
xchg
and
iret
stos
sub
push
sub
sbb
imul
and
push
or
push
fcomp
or
push
push
mov
loopne
nop
imul
push
cld
loop
rol
xor
ss
dec
outs
test
push
pop
inc
cwde
retf
leave
adc
xchg
movs
inc
and
cmp
mov
mov
das
lahf
test
cmp
test
not
add
cs
popa
inc
je
je
mov
push
call
or
dec
cs
inc
mov
dec
or
dec
out
jl
mov
sub
fadd
mov
mov
std
inc
and
mov
push
dec
push
adc
pop
push
sar
cli
mov
shl
push
adc
sbb
mov
xor
(bad)
in
add
add
pop
mov
and
cmp
adc
test
sub
xor
add
or
and
fsubr
ficom
test
je
pushf
pusha
mul
iret
test
jne
pop
jae
je
jno
inc
jb
mov
sub
and
arpl
or
xchg
xchg
add
add
adc
inc
jg
aam
add
das
mov
xor
dec
inc
(bad)
cmp
add
das
adc
add
xor
sbb
mov
push
push
push
outs
cmp
push
pop
fcom
mov
dec
inc
ror
push
add
or
lea
scas
ret
add
and
ins
or
je
add
(bad)
je
out
(bad)
and
mov
mov
sub
(bad)
and
mov
or
inc
je
mov
cdq
and
add
sar
lea
rcl
clc
add
rol
mov
je
mov
sub
xchg
push
inc
je
mov
lds
inc
add
test
or
push
inc
push
jbe
cwde
sbb
shl
add
outs
adc
jge
movs
in
sbb
les
test
jb
pop
rol
fs
or
add
xchg
and
inc
add
mov
test
inc
xchg
sub
lahf
test
sbb
rcr
scas
pop
rcl
push
stos
loop
adc
or
fnstenv
in
push
mov
mov
and
add
mov
jl
or
push
call
sub
jne
lea
xor
je
mov
cmp
jle
xor
cmp
push
cmp
inc
adc
ja
add
sbb
push
je
xor
jmp
cwde
sub
inc
shr
scas
sub
sbb
mov
push
inc
mov
jne
mov
add
and
adc
add
pushf
jecxz
sbb
xchg
push
and
dec
dec
(bad)
mov
mov
pop
test
and
adc
mov
add
xchg
mov
xor
mov
mov
popa
pushf
sbb
mov
xor
sbb
rol
sbb
pop
ret
stos
inc
retf
(bad)
cwde
sbb
mov
push
lock
jg
popw
scas
cmp
mov
ret
jo
fisttp
jge
jle
xor
add
xor
or
push
inc
jge
fadd
clc
fistp
fbstp
dec
or
inc
add
inc
mov
pop
or
out
cmp
add
js
out
sub
inc
push
jg
mov
ret
fiadd
pushf
mov
mov
pop
inc
inc
add
mov
lds
mov
jb
enter
inc
add
por
call
(bad)
rcl
add
and
sar
and
ret
lahf
scas
pop
mov
sub
pop
or
or
inc
or
(bad)
and
mov
add
scas
(bad)
mov
cmp
dec
and
je
retf
pop
or
(bad)
mov
fadd
push
push
xor
jge
pop
jbe
cmc
sbb
mov
mov
shr
(bad)
jmp
add
test
rep
je
data16
call
adc
dec
add
push
and
pop
add
cmp
jne
push
mov
or
shr
sbb
loopne
ds
push
or
rcr
mov
adc
leave
pop
pop
outs
adc
fild
leave
sbb
dec
add
pushf
loopne
push
mov
mov
add
retf
loopne
rol
sub
jo
test
cmp
cmp
retf
push
sub
aaa
cmovns
cmp
mov
push
ja
arpl
lea
test
cwde
mov
xchg
inc
sub
dec
add
add
add
neg
rol
enter
mov
cmp
je
inc
es
pop
and
mov
jg
cmp
jmp
lea
mov
inc
cmp
jne
push
sub
push
push
lock
in
push
mov
pusha
xor
push
pop
sub
add
in
cmps
pop
cmp
add
je
jmp
into
lock
pop
jae
push
push
push
je
pushf
mov
shr
out
dec
cli
mov
mov
sbb
inc
and
xchg
or
or
sbb
adc
call
push
ret
or
xor
jmp
cs
push
mov
mov
xor
push
mov
(bad)
out
iret
movzx
dec
cmp
ja
jmp
mov
cld
sti
jmp
mov
nop
push
push
mov
add
mov
pop
pop
ret
cmp
push
jb
lock
scas
int3
push
mov
sub
mov
fild
mov
mov
ror
mov
dec
pop
or
outs
inc
(bad)
fistp
add
dec
jne
cmp
jl
adc
std
and
adc
(bad)
neg
sbb
adc
xor
mov
add
xor
outs
adc
push
mov
add
fcomp
les
pushf
xchg
dec
adc
xchg
rcl
sbb
dec
or
es
add
mov
mov
mul
xor
xor
mov
mov
pushf
mov
std
in
jg
push
mov
mov
repz
pop
in
xchg
mov
push
cmp
repz
xor
mov
dec
pop
cs
dec
push
and
pop
rcl
lahf
psubusw
fwait
pop
dec
xor
cvttps2pi
jg
mov
mov
div
jno
xor
dec
cdq
or
and
fcom
dec
cmp
dec
cmp
mov
loope
repz
and
mov
mov
cmp
push
leave
adc
cmp
jbe
adc
cdq
outs
sub
ja
or
cmp
cmp
mov
add
inc
mov
fbld
mov
mov
pop
mov
sqrtps
std
cli
sar
mov
push
mov
cmps
adc
adc
mov
ins
adc
cmp
pop
mov
mov
xor
ss
dec
loopne
movs
hlt
adc
xor
sbb
dec
cmp
xchg
add
adc
sub
loope
mov
dec
lahf
rcl
xor
adc
push
xor
pop
xchg
add
cdq
xor
shl
dec
cdq
cmp
loope
or
or
adc
fnstcw
and
test
cdq
and
loope
and
cmp
add
pusha
cli
and
imul
or
inc
outs
cmp
jo
push
cmp
adc
or
add
adc
mov
jge
and
push
mov
pop
lea
add
test
jmp
shl
add
ins
mov
add
lea
jbe
test
loope
push
push
push
loopne
clc
cmps
mov
and
jmp
add
jl
les
popa
icebp
add
loope
push
mov
xor
fiadd
std
pop
jmp
(bad)
xor
mov
xlat
std
sub
xor
ja
aas
sbb
mov
mov
xor
mov
pop
lock
dec
pop
inc
test
jne
sub
push
xor
lea
mov
jg
rcr
inc
mov
mov
push
hlt
push
sub
add
push
inc
and
xor
dec
add
test
add
mov
or
jbe
lds
sbb
push
add
mov
xor
mov
mov
or
push
or
add
or
sbb
and
xor
call
adc
ror
push
hlt
jne
jp
cmp
mov
fdivr
(bad)
cld
sub
jmp
mov
mov
sar
adc
jle
xchg
mov
sahf
mov
adc
adc
add
push
cmp
mov
dec
cld
mov
add
dec
jne
dec
jne
mov
pop
mov
pop
pop
cmp
push
aad
mov
cmc
loope
mov
push
mov
pop
mov
mov
mov
adc
push
and
mov
call
call
mov
mov
and
pop
mov
or
pop
adc
dec
push
mov
mov
sub
push
or
out
inc
and
pop
clts
or
fbld
sbb
pop
mov
cmp
sub
out
pop
in
pop
scas
or
call
jmp
jae
mov
(bad)
or
add
into
arpl
addr16
mov
loopne
add
adc
or
dec
sbb
adc
stos
out
adc
pop
mov
pop
sbb
in
add
xchg
or
and
or
xor
sbb
lds
mov
test
jle
cmp
and
mov
push
mov
or
sbb
mov
mov
out
pop
sbb
int
loope
loopne
dec
add
and
jns
dec
or
inc
je
mov
test
adc
mov
test
jne
jbe
idiv
mov
cmp
and
push
push
adc
mov
out
(bad)
and
and
call
aam
jne
cmp
jae
lea
adc
fwait
in
add
mov
shr
push
push
loop
lock
sbb
pop
and
jmp
mov
dec
shr
inc
mov
fisttp
mov
(bad)
(bad)
push
enter
or
xor
mov
lea
mov
mov
xor
mov
(bad)
fistp
inc
add
inc
add
add
add
push
add
or
(bad)
std
mov
mov
sbb
mov
xor
dec
aam
xor
jo
in
sar
pop
dec
js
dec
mov
cmp
ror
and
push
push
and
and
sbb
add
out
leave
(bad)
popa
sbb
inc
and
(bad)
push
xor
xor
push
push
add
pop
mov
outs
cli
inc
mov
mov
push
data16
mov
mov
add
cld
ja
mov
adc
mov
mov
mov
jb
mov
enter
mov
push
in
jmp
repz
jno
sbb
data16
mov
dec
dec
push
shl
push
and
imul
scas
imul
rcr
mov
enter
leave
xor
adc
stos
jne
shr
mov
xor
mov
adc
sub
adc
mov
test
xchg
sub
leave
xor
or
xor
add
add
pop
sub
or
xchg
push
mov
and
sub
into
clc
inc
je
sub
sub
nop
push
push
jmp
inc
sub
jmp
je
adc
push
sub
and
sub
sub
lea
lea
jo
xor
std
jae
dec
cs
mov
or
sbb
das
popf
sbb
cmp
jb
pop
test
mov
adc
test
(bad)
sub
les
sbb
dec
shr
inc
mov
adc
mov
mov
lea
mov
(bad)
aaa
cld
adc
mov
mov
mov
lds
mov
inc
add
inc
add
sti
push
dec
add
push
add
add
add
dec
(bad)
mov
xor
mov
push
cmp
add
inc
pop
xor
mov
(bad)
mov
mov
push
adc
test
out
mov
rcr
test
add
sbb
iret
lahf
jmp
add
sbb
dec
mov
mov
mov
push
add
mov
add
dec
add
dec
add
std
iret
call
add
inc
add
dec
add
mov
ret
mov
mov
shl
shr
jne
mov
mov
jae
sub
mov
(bad)
push
or
jl
test
xor
and
rcl
mov
mov
add
test
xor
mov
push
add
cmp
cdq
movs
dec
and
sbb
and
int3
push
dec
ins
pop
fs
lds
jo
push
(bad)
loop
mov
jl
pop
sahf
sti
popf
jmp
mov
and
add
inc
add
xor
div
imul
and
push
push
mov
push
mov
mov
xor
lea
(bad)
dec
mov
push
mov
mov
mov
mov
sbb
add
or
and
add
das
iret
and
lods
pop
adc
outs
imul
pop
shl
jle
clc
pop
and
mov
mov
out
or
adc
add
jl
mov
cwde
lds
xor
push
(bad)
or
push
add
(bad)
rcl
scas
jp
leave
call
out
xor
sar
adc
jo
jne
sbb
jns
inc
(bad)
pop
mov
adc
fstp
retf
push
push
je
cdq
sbb
inc
add
jo
clc
add
call
push
xor
cmp
jae
mov
pop
inc
push
xor
mov
xor
dec
mov
add
dec
je
dec
jne
fwait
(bad)
(bad)
cmps
mov
rol
push
push
mov
mov
fadd
jecxz
shl
or
shr
adc
and
add
loop
or
mov
shr
nop
adc
(bad)
sub
dec
je
dec
je
out
clc
inc
pop
mov
mov
mov
inc
and
mov
mov
out
or
or
add
inc
mov
mov
sub
adc
adc
loop
cld
(bad)
adc
cmp
cld
adc
xor
(bad)
xlat
loopne
push
pop
jmp
pop
push
adc
xchg
inc
pop
ret
mov
mov
rcr
lea
dec
cmc
mov
rcl
je
jae
xor
sub
adc
fdivr
dec
add
gs
lock
int
int3
vphaddwq
or
push
ins
stos
inc
std
pop
xor
icebp
test
je
mov
repz
or
sbb
jg
mov
and
or
mov
mov
or
scas
mov
add
mov
add
and
gs
dec
call
lea
scas
sub
xchg
dec
pop
cld
push
xchg
cmp
push
ins
scas
cmp
call
in
xchg
pop
mov
fdiv
iret
inc
repz
dec
aam
and
cmp
je
lods
jbe
out
inc
cdq
rol
div
add
not
lahf
xor
hlt
sub
inc
add
aaa
mov
lock
lahf
jg
push
xor
mov
fdivr
ja
mov
mov
inc
mov
mov
pop
adc
sub
popa
movzx
mov
movhlps
jg
fwait
push
adc
mov
mov
jmp
and
out
fdiv
sti
xor
mov
mov
shl
ja
out
clc
mov
shr
mov
fmul
inc
mov
and
adc
push
or
(bad)
cmp
ret
inc
mov
mov
sti
cmp
jne
dec
cmp
jne
dec
pop
stos
ds
sbb
stos
mov
adc
pop
jecxz
les
call
aam
add
neg
cdq
adc
(bad)
aaa
xor
mov
iret
dec
and
test
jbe
test
mov
rol
into
push
and
cmc
call
les
(bad)
xlat
add
shl
push
cmps
loop
ret
mov
jmp
rep
mov
add
pop
mov
mov
mov
mov
pop
or
pop
pop
mov
sub
push
or
(bad)
pop
add
mov
add
push
cmp
push
aaa
cmp
push
stos
dec
mov
mov
mov
dec
mov
pop
push
mov
cmps
add
pusha
mov
push
mov
lea
int
aaa
out
push
mov
pop
mov
or
pop
mov
jo
mov
ins
mov
sub
and
and
mov
outs
aas
inc
add
pop
mov
mov
(bad)
jg
loopne
ror
adc
ror
sar
or
mov
mov
(bad)
out
loop
mov
shrd
shr
mov
inc
jmp
movs
repz
movs
lds
shl
push
out
cmp
enter
out
or
add
into
out
loop
xor
pop
sti
mov
mov
shrd
outs
ror
sub
shld
shr
shl
xor
adc
cmc
shl
cmp
mov
pop
test
xor
movs
retf
pop
mov
mov
shl
sar
sar
or
or
mov
mov
xor
shl
aam
jl
ficomp
xor
inc
xor
sti
mov
xor
mov
sbb
adc
or
xor
sbb
xchg
(bad)
fnstsw
mov
not
and
pop
pop
mov
not
and
or
daa
sar
pushf
sti
(bad)
(bad)
call
mov
add
mov
adc
mov
mov
add
mov
adc
add
adc
xor
cmove
jl
ins
mov
aad
lahf
std
mov
shl
out
jg
or
cmp
push
shl
mov
or
mov
sar
or
aaa
cld
cmps
mov
repnz
mov
sbb
loopne
push
pop
arpl
in
stos
or
and
(bad)
fdivr
and
mov
xor
and
mov
ins
and
and
xor
xor
add
or
rol
adc
jno
pop
pop
loope
fisubr
push
ror
cmovo
jmp
ja
or
push
daa
pusha
or
sub
std
fld
ror
je
jmp
adc
mov
and
pushf
pusha
jecxz
or
jne
fs
cmp
ins
sbb
icebp
sub
sbb
cmp
sar
or
cmp
sub
inc
ja
push
ret
bound
test
push
jg
loopne
cmp
in
lea
and
(bad)
(bad)
mov
mov
and
ss
cmp
and
cmp
mov
sbb
(bad)
out
lea
mov
mov
mov
mov
mov
mov
push
fmul
shld
mov
sar
popf
lock
sbb
es
or
xor
xor
fwait
call
cs
js
jl
fst
std
(bad)
fidiv
sub
leave
sub
xlat
mov
std
out
push
dec
call
shl
or
ins
lods
or
jl
and
add
mov
and
fcomp
pop
(bad)
ffree
inc
sub
inc
adc
and
add
lea
adc
aas
(bad)
mov
sbb
or
mov
sbb
adc
add
push
xor
xor
cmp
loope
and
data16
sti
xor
popf
(bad)
mov
mov
in
adc
aad
(bad)
sbb
das
in
lds
movs
mov
sbb
add
ret
aaa
les
mov
std
xor
pop
loope
jl
inc
stc
(bad)
mov
shl
cli
or
ret
mov
or
xor
mov
inc
and
xor
mov
adc
push
(bad)
in
out
or
inc
and
es
push
mov
cli
xor
jmp
std
push
pop
inc
clc
jecxz
xor
push
add
pop
in
add
fbstp
pop
push
pop
mov
inc
push
push
scas
pusha
into
call
call
sti
aad
pusha
cli
shl
and
mov
and
xlat
add
ret
pop
iret
push
dec
dec
dec
shl
phsubsw
dec
inc
mov
imul
add
adc
sbb
inc
inc
cmp
inc
sbb
pushf
fidivr
jl
push
xor
in
add
mov
adc
mov
mov
cld
fist
cmp
stc
mov
adc
mov
ds
fsubr
add
push
pusha
mov
dec
mov
mov
es
fst
fldenv
mov
mov
add
cli
(bad)
in
sub
cmps
sub
lock
out
(bad)
xor
mov
sub
jmp
adc
pop
sub
cmp
fstp
js
push
and
mov
xor
adc
dec
cmp
js
pop
mov
cmp
push
push
adc
pop
mov
mov
pop
add
mov
ror
loop
test
push
adc
mov
mov
push
push
mov
leave
push
movs
add
test
mov
or
sbb
mov
adc
jl
push
jb
sub
loop
push
push
mov
inc
push
jne
dec
or
sub
and
cmp
mov
mov
jg
mov
push
mov
cmp
jae
mov
mov
add
adc
mov
mov
pop
lea
(bad)
es
push
push
push
sub
add
enter
les
cmp
std
mov
out
pop
mov
(bad)
(bad)
std
fistp
add
add
enter
mov
ror
jl
cmp
(bad)
(bad)
mov
mov
add
adc
mov
mov
sub
push
sti
inc
in
jbe
mov
mov
xor
std
jg
in
xor
add
adc
mov
cmp
jmp
aad
mov
jae
in
and
dec
aas
pop
push
mov
jnp
mov
xlat
jle
cld
rcl
dec
call
ret
mov
sar
or
xor
or
cdq
xlat
mov
mov
shrd
(bad)
call
movs
frstor
or
aad
jecxz
xor
and
sub
add
or
rcr
les
stc
mov
adc
retf
shr
sub
and
enter
jg
jg
xlat
or
mov
mov
jbe
mov
xor
outs
mov
movs
ror
lods
fimul
shr
mov
mov
add
push
jae
xor
jns
jge
pop
add
jge
mov
jne
sahf
mov
fadd
adc
inc
in
leave
outs
push
and
xchg
enter
dec
ret
call
dec
jle
jbe
mov
push
inc
cmp
ja
mov
and
retf
xor
(bad)
call
inc
cmp
jae
sbb
sbb
or
cmp
(bad)
jmp
jmp
lea
mov
loopne
outs
jmp
mov
mov
mov
mov
mov
xchg
push
mov
pop
mov
push
clc
mov
in
or
adc
sar
mov
push
mov
mov
mov
mov
xor
stos
loope
fisttp
retf
enter
repz
jmp
shl
mov
or
or
lds
mov
ret
lods
fst
mov
jb
push
xchg
pop
movs
retf
xor
aaa
test
cmp
adc
jmp
inc
and
pop
mov
jno
mov
mov
mov
mov
inc
or
push
or
in
jns
out
xchg
nop
jmp
fucomi
or
in
aad
in
fcomp
xor
push
mov
mov
sbb
enter
xchg
push
add
xchg
cdq
aas
mov
mov
mov
outs
or
aad
push
push
mov
mov
mov
je
iret
stos
xchg
sub
cmp
sbb
fsubr
mov
pop
retf
cs
idiv
mov
mov
nop
lock
mov
mov
xchg
fwait
add
ret
mov
push
sub
into
sub
call
mov
test
inc
sbb
inc
and
push
and
mov
mov
sbb
les
dec
cdq
xor
popa
fwait
mov
test
and
mov
cmp
fucomip
cdq
push
and
inc
sub
dec
sub
add
rcl
retf
jmp
xor
add
adc
xchg
jmp
xor
addr16
call
les
scas
scas
(bad)
pop
mov
xor
xchg
shl
mov
mov
shld
daa
xchg
sti
sbb
xor
in
xor
(bad)
mov
shr
pop
sub
ret
sub
sub
dec
sub
inc
mov
xchg
ret
shrd
ror
out
nop
nop
dec
pop
in
dec
push
daa
mov
or
lds
dec
xchg
loop
ror
xor
outs
jmp
mov
mov
repnz
shr
(bad)
fisttp
or
xchg
mov
xchg
and
test
mov
mov
sub
shld
adc
out
adc
push
cmp
cmp
call
cmp
push
(bad)
add
pop
and
(bad)
and
clc
call
jmp
pop
add
stc
add
add
mov
and
or
das
add
add
adc
das
rol
cmc
inc
cmp
jmp
push
movs
aas
mov
jg
movs
dec
sub
jbe
jnp
cmp
mov
js
call
xchg
sar
pop
cwde
xchg
jbe
sbb
movs
add
mov
nop
add
inc
and
sub
ret
aad
nop
add
fs
pop
xor
dec
dec
mov
lea
les
and
cmp
push
jo
mov
mov
es
mov
mov
dec
(bad)
call
shl
lea
movzx
mov
shr
mov
cmp
out
dec
mov
mov
push
inc
push
add
test
aas
movzx
inc
sbb
jns
sbb
inc
dec
jns
or
jg
inc
add
dec
jp
sar
test
(bad)
call
mov
mov
sub
and
pop
adc
push
add
(bad)
sbb
add
push
cmp
jg
add
cmps
add
shl
push
push
push
lea
loopne
je
mov
mov
lock
scas
rol
pop
ret
add
imul
add
add
aaa
add
add
jl
dec
adc
jg
inc
and
test
je
mov
mov
ret
xor
inc
int3
mov
mov
xor
cmp
setne
mov
pop
sub
clc
jg
pop
das
daa
dec
and
add
test
je
mov
add
cmp
add
pop
in
push
ss
test
aas
push
mov
add
pop
adc
pop
mov
gs
or
inc
xchg
sti
sub
jne
ret
and
mov
and
je
mov
inc
add
(bad)
fsincos
or
xor
lea
jo
or
sub
and
test
or
lahf
or
cmp
pop
mov
cmp
jne
cld
pop
push
sbb
je
fadd
push
fs
pop
idiv
arpl
or
mov
mov
push
mov
mov
add
dec
push
outs
cmp
pop
jne
scas
stos
(bad)
dec
or
add
inc
int3
and
adc
mov
add
push
or
add
aas
sbb
je
mov
(bad)
push
xor
add
adc
add
pusha
adc
add
or
adc
(bad)
in
jle
push
mov
xor
inc
or
add
test
ror
pop
ins
shl
jo
adc
out
shr
outs
add
or
push
jge
daa
push
je
mov
add
push
dec
mov
stos
or
ds
inc
ins
sbb
sub
ror
scas
jl
ror
into
mov
mov
mov
mov
shl
cmc
and
push
jecxz
int3
iret
cdq
dec
pusha
xor
and
inc
add
sub
das
adc
ins
ret
das
and
or
jle
scas
movzx
xor
xor
adc
fcomp
das
or
leave
mov
push
mov
and
je
mov
iret
fidivr
add
adc
call
rcl
aaa
sbb
out
invd
add
lods
ins
dec
sbb
and
data16
aaa
test
movaps
jae
push
das
cmp
popa
mov
shr
test
push
adc
test
mov
pushf
leave
dec
test
dec
sahf
lahf
dec
ret
pop
pop
jne
sbb
scas
dec
jl
cmp
xor
ins
or
scas
and
push
xor
int
das
sub
(bad)
call
or
or
leave
or
aas
cmp
add
lods
cmp
mov
cmp
xchg
and
into
or
movups
adc
mov
out
fldenv
int3
dec
adc
call
mov
(bad)
(bad)
dec
mov
cmp
je
add
cmp
ja
jmp
xor
jmp
mov
test
ret
sahf
adc
sbb
pop
ret
add
shl
mov
ror
mov
cmp
push
push
ja
adc
add
(bad)
out
clc
out
push
push
call
mov
mov
add
cmp
jne
std
idiv
sbb
add
stc
push
adc
cmp
je
xchg
adc
and
add
and
add
cmp
jne
pop
pop
pop
xor
dec
mul
mov
mov
arpl
mov
mov
sub
ret
pop
mov
jle
lea
idiv
(bad)
dec
add
cmp
jne
movzx
cmp
je
cmp
jne
xor
add
pop
jns
(bad)
jg
out
add
into
jl
pop
xor
pop
test
pop
setne
add
mov
ja
mov
add
mov
loope
xor
aas
(bad)
ins
or
jae
push
sbb
or
nop
out
mov
les
xor
cmp
lock
je
or
or
or
out
inc
mov
fiadd
imul
call
nop
push
aad
add
movs
or
in
cmps
imul
add
add
int3
mov
add
pop
add
rol
outs
adc
add
pop
test
fisttp
test
cmp
sar
jle
inc
jle
inc
adc
lods
ret
rol
or
xchg
fmul
xchg
sbb
pop
xor
pop
lea
test
jecxz
(bad)
aas
push
(bad)
and
push
xor
jae
mov
cmp
jne
mov
cmp
out
(bad)
inc
jne
mov
cmp
je
add
add
jmp
out
push
add
adc
add
or
add
loope
ret
out
mov
scas
(bad)
mov
xchg
jbe
and
xchg
shl
mov
adc
and
push
ja
adc
dec
adc
cmp
jne
ss
cmp
pop
jecxz
ret
cmp
add
imul
mov
rcr
or
or
ja
loope
and
and
aas
je
and
or
inc
adc
ror
jmp
or
cmp
(bad)
add
pusha
imul
adc
pusha
rol
or
xlat
adc
inc
aas
adc
mov
mov
aam
sbb
cmp
sbb
push
or
mov
adc
ror
(bad)
stos
push
iret
nop
mov
xchg
jmp
cs
or
adc
mov
dec
add
dec
dec
adc
adc
pop
and
cmp
mov
mov
xor
add
xor
(bad)
jmp
mov
je
pop
pop
call
jno
or
into
je
jp
jl
jg
add
outs
jne
mov
sbb
pop
hlt
sub
je
jmp
push
out
lahf
lds
dec
or
es
enter
je
mov
cmp
jne
push
scas
scas
add
dec
push
mov
add
sub
scas
jae
int3
pop
fld
cli
ror
ror
cld
fucomp
or
mov
cmp
add
test
cmps
xchg
je
adc
adc
push
pushf
push
add
jle
or
push
sbb
mov
ss
mov
or
add
mov
cmp
jae
fs
fmul
enter
(bad)
cmp
jb
mov
jmp
lea
xor
repz
je
sbb
sbb
test
jne
cmp
jb
std
(bad)
(bad)
push
sar
fmul
xchg
ret
jge
mov
jmp
mov
mov
xchg
je
jmp
mov
in
xor
add
mov
mov
inc
push
je
mov
mov
mov
mov
fwait
std
jno
inc
and
imul
fnstenv
cwde
push
push
fs
call
or
nop
and
sbb
or
mov
mov
fmul
sub
cmp
push
mov
jmp
sub
push
add
push
push
xor
cmp
dec
(bad)
fist
je
cmp
je
lea
add
cmc
rol
std
pop
addr16
(bad)
jne
inc
push
retf
jle
ror
add
popa
cs
inc
add
push
cld
sub
adc
sbb
cmp
inc
mov
adc
cmp
and
inc
xor
inc
mov
rol
pop
rcl
adc
mov
fstp
jl
pop
mov
pop
mov
xor
jl
sbb
or
iret
push
push
or
aas
clc
enter
mov
cmp
mov
add
enter
cmp
add
adc
adc
mov
ins
clc
or
in
mov
jmp
lds
mov
jo
les
adc
xchg
out
add
cld
jmp
mov
ja
shl
add
lock
or
inc
add
push
add
push
add
add
add
inc
pop
dec
xchg
mov
cmp
jne
mov
jmp
mov
xchg
inc
add
add
cmp
lea
cs
jmp
inc
add
and
inc
or
mov
scas
fbld
and
add
mov
add
adc
out
daa
mov
add
mov
add
sub
sti
je
add
inc
sub
loopne
and
add
adc
rol
out
push
mov
call
jno
add
and
push
add
mov
jmp
mov
add
dec
sub
add
add
sub
aas
mov
cmp
jne
fcomp
es
sub
or
add
push
mov
push
mov
push
add
repz
sar
and
popa
cmp
jne
arpl
and
add
imul
sbb
dec
jmp
cmp
ffreep
or
xor
mov
pop
pop
adc
push
inc
add
add
paddd
jp
mov
dec
add
jmp
add
add
adc
pop
pop
mov
add
outs
push
dec
xchg
adc
mov
and
bts
inc
add
add
dec
add
mov
xchg
clc
dec
cld
pop
and
push
or
lock
test
mov
inc
adc
call
xchg
and
push
push
mov
add
xor
mov
sbb
mov
jae
ss
mov
and
dec
loopne
fbstp
cmp
jne
mov
xchg
or
add
pop
mov
cmp
jne
xchg
jnp
fsubr
ds
cmp
push
inc
addr16
push
repz
adc
or
unpckhps
clc
das
add
jl
into
pushf
cmp
jne
xor
jb
mov
mov
dec
das
pop
movs
add
sbb
push
mov
push
mov
cmc
ss
and
jo
ficom
adc
nop
add
cmp
mov
mov
leave
ror
mov
cli
jae
add
push
add
shr
push
mov
rcl
mov
std
xor
sbb
lea
mov
add
add
mov
dec
clc
mov
add
adc
rcl
imul
shl
or
js
add
enter
(bad)
fmul
push
jo
mov
loopne
or
arpl
cwde
clc
lock
add
fadd
ins
xor
js
or
fsubr
jbe
push
add
arpl
xor
push
aad
bound
sub
xchg
sbb
in
push
(bad)
mov
inc
add
push
or
pop
mov
add
sub
in
(bad)
aad
inc
or
call
add
rol
inc
cmc
or
inc
and
push
mov
pop
jne
cmp
mov
adc
pop
pop
jbe
jl
add
mov
lods
push
push
lock
addr16
retf
and
push
stos
cmp
add
lods
jg
xor
cmps
fist
or
cmps
dec
(bad)
push
mov
pop
(bad)
jl
call
ror
sub
ja
xchg
scas
or
add
adc
xchg
sbb
je
adc
sbb
int3
mov
scas
add
ret
mov
call
mov
sbb
daa
mov
cmp
jge
retf
pop
movs
and
add
pop
jnp
mov
mov
stc
mov
loopne
cmp
jge
add
adc
mov
cmp
jle
and
and
mov
inc
and
cmp
jge
or
sti
fmul
push
ins
mov
je
inc
and
xchg
mov
mov
outs
xchg
sub
push
push
mov
mov
and
inc
add
add
cmp
je
sub
mov
inc
pop
aad
cdq
push
adc
jne
push
adc
and
jbe
sbb
mov
pop
std
push
add
or
adc
cmove
pop
push
and
jg
nop
call
jb
jg
lds
dec
sub
fldl2e
enter
mov
sub
sub
call
xor
jg
add
lods
in
mov
jg
adc
(bad)
jg
stos
add
cdq
push
test
les
in
inc
movs
adc
push
mov
cmp
jge
fwait
jo
dec
add
add
ror
add
out
loopne
push
add
push
cmp
jge
mov
mov
jmp
sbb
inc
call
add
int3
std
adc
arpl
(bad)
dec
add
lea
push
mov
push
and
ret
fcomp
or
sub
xor
or
popa
or
add
das
mov
sbb
sbb
mov
or
pushf
add
sub
and
lock
adc
or
into
sub
dec
and
and
les
push
jne
mov
jo
add
or
mov
mov
int
jne
mov
mov
adc
inc
repz
(bad)
mov
add
sub
ror
retf
cmp
xchg
push
mov
add
ja
xor
sbb
sbb
test
mov
jne
cmp
jae
pop
xor
inc
inc
cmp
setne
test
cs
loopne
push
ins
or
test
outs
mov
adc
ror
mov
je
add
sbb
push
or
mov
icebp
sub
mov
repnz
add
or
sub
rol
mov
sbb
mov
mov
adc
jge
mov
add
sbb
xor
add
cmp
aam
push
inc
ds
inc
lock
push
mov
mov
mov
push
jp
or
shr
call
into
mov
loopne
and
test
jne
add
push
pop
mov
ins
sbb
sub
jge
pusha
xlat
es
ficomp
dec
push
out
fiadd
sahf
(bad)
(bad)
je
push
push
push
clc
pop
test
xor
mov
mov
push
js
mov
dec
sub
mov
pop
ret
push
xor
rol
inc
sub
or
inc
add
loope
dec
jne
and
mov
lds
cmp
mov
shl
dec
out
dec
jne
push
mov
retf
fcom
les
sbb
pop
adc
leave
pushf
add
lea
xor
rcl
jbe
or
pop
int3
int3
fnstcw
push
adc
xchg
cmp
push
das
dec
add
inc
test
xchg
xor
(bad)
mov
or
mov
jne
lea
push
jp
lds
add
cld
or
add
add
mov
scas
mov
ds
pop
mov
pop
dec
and
aaa
ss
out
inc
xor
or
lds
push
into
jecxz
cmp
cmp
cmp
mov
cmp
imul
dec
(bad)
ins
and
push
lea
out
mov
inc
mov
retf
call
je
push
push
push
fiadd
push
cdq
or
sub
push
outs
add
mov
lea
out
push
outs
inc
rcr
pop
adc
push
add
jl
adc
dec
(bad)
dec
pop
ins
push
jecxz
dec
out
push
cwde
call
in
je
loopne
dec
cmp
xor
sub
add
cmp
sbb
dec
mov
jmp
fisttp
push
movzx
js
sbb
fdivr
call
mov
push
jmp
mov
inc
jmp
mov
cmc
jmp
mov
fwait
inc
fstp
sbb
lds
adc
popf
mov
ja
jg
test
mov
je
dec
rol
enter
mov
retf
inc
push
mov
(bad)
mov
mov
mov
mov
mov
mov
xor
mov
(bad)
out
call
mov
mov
or
mov
rep
mov
pop
rol
push
mov
mov
push
adc
inc
and
add
ins
stc
push
mov
gs
mov
push
or
loopne
sub
fcmovb
add
pop
inc
fbstp
(bad)
out
add
mov
jl
cmp
ja
sti
or
mov
shl
inc
rcr
adc
add
pop
mov
mov
mov
mov
call
pop
ret
push
ja
push
ret
(bad)
jg
(bad)
in
out
inc
add
add
jmp
add
or
pop
jge
pop
push
add
add
add
add
sub
push
setl
push
in
pop
mov
adc
xor
es
test
jge
int3
call
adc
push
xor
xor
and
pop
test
mov
push
shr
push
push
mov
dec
ins
lock
fadd
inc
add
fstp
lock
jg
dec
call
inc
adc
push
mov
(bad)
dec
push
push
cdq
test
shr
push
mov
mov
add
adc
and
pop
and
cli
mov
jl
sub
mov
jb
test
pop
lea
pop
ds
lods
ds
jle
dec
add
adc
pop
xor
mov
inc
adc
jge
outs
adc
push
push
fild
or
jo
sub
add
sbb
and
push
mov
push
sahf
xor
mov
mov
outs
jo
add
in
mov
je
jne
push
stos
jmp
mov
int3
mov
xor
push
pusha
cmp
cmp
push
sbb
sar
(bad)
lahf
in
shl
lock
mov
mov
cmp
jne
(bad)
fnstsw
add
add
add
add
test
jne
xor
jmp
add
je
sbb
jmp
cli
sbb
or
hlt
clc
jl
mov
scas
idiv
scas
lock
pop
mov
sbb
pushf
jmp
stc
fadd
push
sbb
rcr
lock
xor
jne
push
push
enter
data16
fucomip
(bad)
push
push
push
sbb
(bad)
mov
lds
add
lods
or
or
std
and
cld
mov
xchg
add
popa
push
xchg
mov
add
je
or
lods
add
dec
and
sub
stos
cmc
dec
loopne
mov
push
mov
in
mov
dec
cdq
push
sar
and
(bad)
cmp
adc
pop
mov
dec
and
stos
xchg
dec
loope
xor
dec
push
in
mov
mov
push
push
jbe
add
pushf
cmp
jl
data16
jae
push
mov
xor
and
cdq
xor
dec
aaa
jle
jo
jg
inc
and
jne
inc
add
(bad)
xchg
loope
call
dec
jae
or
xor
cld
mov
jo
(bad)
push
je
sub
ins
push
loop
push
dec
inc
cmp
mov
and
lock
cmps
cmp
je
js
fimul
mov
inc
clc
div
pop
pop
aad
fisttp
(bad)
or
leave
adc
sub
xor
cmp
or
ret
rcr
or
aaa
xchg
je
dec
and
mov
xor
je
call
jle
ret
sbb
test
cmp
cmp
clc
je
cld
out
mov
leave
jb
inc
add
xor
in
mov
mov
or
ins
mov
loop
lea
lock
or
scas
and
cmp
loope
lock
je
add
inc
cmps
sbb
cmp
dec
cli
add
jne
sbb
(bad)
test
js
adc
(bad)
cmp
clc
mov
clc
stos
test
add
test
pop
rol
mov
hlt
jae
mov
hlt
pushf
out
add
pop
pop
out
and
push
or
push
lahf
mov
sub
loope
mov
add
xchg
mov
cmp
loop
adc
ins
(bad)
push
lea
pop
les
mov
frstor
inc
xchg
(bad)
xchg
imul
dec
movsx
xchg
mov
out
call
pop
ret
add
add
icebp
je
jge
sub
pop
mov
pop
sbb
jne
adc
loope
pop
ror
adc
pop
inc
mov
(bad)
cmp
and
call
aas
stc
mov
outs
lock
aaa
and
mov
test
je
mov
jmp
sub
sbb
out
sbb
adc
adc
or
pop
or
aas
add
jmp
push
push
hlt
out
adc
sbb
mov
cmp
jne
xor
cmp
test
popa
shr
das
add
sub
or
fucomip
inc
test
cmp
popa
out
adc
jne
loopne
or
jmp
out
pop
add
outs
or
outs
push
pop
mov
unpckhps
inc
movs
shr
cmp
ss
loope
push
push
(bad)
test
test
sbb
dec
loope
out
in
or
out
sbb
icebp
mov
and
jmp
sub
push
cdq
cmp
sub
mov
adc
sub
sub
outs
inc
or
loop
push
push
loop
adc
pop
nop
inc
outs
inc
add
fwait
inc
outs
adc
les
dec
in
mov
dec
mov
(bad)
out
push
pop
movs
nop
cmp
add
pop
inc
aaa
push
push
mov
enter
stos
(bad)
push
jno
outs
sub
fdiv
es
sar
push
push
mov
push
and
scas
sub
les
push
add
(bad)
jmp
mov
mov
call
add
push
loopne
loopne
test
mov
lods
jecxz
mov
adc
jo
mov
sub
fistp
mov
mov
mov
mov
(bad)
push
adc
loopne
mov
push
mov
mov
dec
std
jg
pop
lock
pop
mov
mov
pop
pop
pop
ret
or
mov
sbb
sbb
and
mov
loopne
push
into
xchg
add
dec
adc
adc
dec
push
xchg
ficom
cmp
xchg
movs
xchg
mov
aaa
inc
add
push
pop
jp
sbb
or
out
jl
push
ret
mov
sbb
or
jns
ss
pop
sar
das
fistp
xor
mov
and
call
enter
inc
cld
push
add
test
mov
aad
push
inc
mov
add
xor
jp
mov
jmp
repnz
jmp
xor
cmp
mov
cmp
inc
mov
add
cs
dec
jo
mov
cmp
jne
and
add
add
push
adc
and
jmp
jg
call
push
inc
push
lea
push
push
in
out
(bad)
in
call
mov
adc
push
test
xor
(bad)
(bad)
aaa
mov
in
cmp
jle
call
push
mov
fist
mov
lea
sub
mul
test
sar
jne
lea
add
mov
scas
(bad)
jg
shl
fsubr
dec
add
or
data16
fiadd
add
sbb
mov
lahf
sub
fisttp
cmp
rol
pop
lods
das
pop
push
pop
mov
mov
arpl
add
lea
push
push
lock
aaa
fdivr
test
je
push
aad
pop
mov
add
add
xor
adc
add
sbb
pushf
or
push
dec
mov
nop
loope
clc
push
or
ficom
jo
add
cmp
mov
(bad)
and
movs
je
rol
xchg
lock
addr16
sbb
aas
sub
test
ret
mov
push
je
shr
xor
inc
ins
add
iret
adc
test
mov
or
mov
mov
movzx
and
add
mov
and
add
jo
mov
cmp
push
inc
scas
bound
shl
inc
pop
mov
pop
mov
dec
adc
mov
arpl
or
int3
and
aad
or
jbe
aaa
mov
lock
repnz
inc
adc
add
mov
fisttp
test
jne
jmp
push
pop
cmc
pop
mov
test
jne
pop
pop
ret
mov
data16
xor
push
mov
mov
or
cs
xor
mov
sub
or
add
sbb
add
add
add
ret
repnz
adc
xor
call
mov
mov
(bad)
mov
or
push
or
mov
movzx
sub
je
mov
push
and
outs
ja
jae
adc
mov
ret
hlt
std
mov
rep
dec
retf
pop
pop
mov
shl
sub
inc
adc
adc
xor
add
shl
sbb
repnz
adc
out
mov
mov
or
iret
fisttp
push
test
push
sbb
mov
mov
pop
add
pop
pop
adc
mov
je
push
mov
push
mov
push
or
mov
adc
cs
fisttp
rcr
push
je
mov
pop
ins
pop
pop
inc
jno
cs
adc
pop
and
jae
push
sbb
push
sub
or
(bad)
test
pushf
ds
call
and
cli
dec
add
cmp
movzx
mov
jg
sbb
jg
test
pop
xchg
mov
or
(bad)
dec
enter
je
mov
aam
add
movzx
cmp
push
sub
adc
or
sbb
jo
sub
bound
add
mov
push
outs
xor
push
cmp
mov
mov
mov
jbe
adc
int
std
mov
mov
and
inc
add
push
adc
xchg
dec
inc
aam
dec
pop
das
outs
loopne
inc
dec
retf
add
mov
dec
pop
sbb
in
cs
(bad)
inc
add
cmp
adc
mov
or
mov
fisttp
mov
and
or
inc
and
or
mov
mov
mov
mov
xor
xor
test
test
dec
mov
xor
cmp
jmp
mov
mov
lea
mov
cmp
jne
ja
cmp
jge
movsx
sti
pop
add
popf
fild
push
ja
sti
mov
or
add
and
inc
push
mov
jmp
lds
and
hlt
add
push
inc
push
push
jbe
push
popa
and
cmps
cmp
mov
and
test
jne
aad
sar
fadd
mov
stos
mov
leave
jne
mov
rol
xchg
xor
movs
hlt
pop
add
mov
mov
push
mov
bound
and
test
int
and
nop
mov
add
fdivr
or
push
pop
or
mov
imul
xor
dec
mov
clc
outs
call
sbb
add
in
aaa
cmp
sub
push
mov
mov
retf
jle
out
lds
add
xor
dec
inc
add
mov
add
or
js
jmp
mov
dec
inc
and
fbld
fs
adc
jg
mov
push
pop
je
pop
mov
stos
xchg
jmp
xchg
push
or
push
(bad)
mov
adc
pop
pop
add
inc
add
call
jmp
dec
add
add
add
add
in
cmp
dec
push
or
xor
mov
cmp
and
cmp
pop
push
call
dec
add
clc
push
sbb
xor
pusha
sar
inc
add
cmps
call
push
push
xchg
push
clc
out
aas
jle
and
mov
(bad)
cmp
je
ja
(bad)
sbb
ss
icebp
cmp
je
cmp
jne
loop
push
fsub
add
add
ret
pop
push
mov
xchg
in
adc
dec
jl
push
push
xor
pop
sbb
sub
sbb
leave
ret
stos
fmul
pop
adc
cs
pop
sbb
push
cmc
mov
test
retf
into
pop
jne
cmp
stos
jb
out
pop
out
retf
jb
out
sbb
retf
out
sbb
xor
push
jo
inc
scas
(bad)
hlt
xchg
popa
sbb
adc
mov
mov
push
scas
aas
dec
add
jl
sbb
add
push
test
xchg
ffreep
scas
test
and
mov
cmp
cs
adc
add
stos
pop
xchg
inc
pop
add
or
outs
mov
and
push
add
stos
mov
lock
shl
leave
mov
add
cmp
inc
mov
cmp
jae
test
adc
or
or
iret
dec
and
pop
mov
push
mov
rol
push
sub
fild
push
fbstp
push
sbb
push
mov
add
mov
cmp
mov
rol
(bad)
jmp
cmp
jne
les
dec
jecxz
jae
lds
jg
or
lock
data16
(bad)
pop
push
adc
or
cmp
mov
add
fild
std
mov
adc
leave
dec
push
sti
push
sub
mul
push
cmp
sub
or
shl
pusha
sub
stos
add
add
bndldx
mov
cmp
jae
aaa
cld
pop
adc
or
pop
inc
or
inc
sbb
rcl
mov
sahf
add
cmp
inc
int3
add
add
movs
sub
push
ds
popf
stos
clc
or
push
push
lea
sbb
mov
add
mov
mov
cmp
stos
mov
out
push
adc
push
mov
mov
mov
ss
loop
mov
repz
mov
mov
fistp
je
mov
or
ror
add
sbb
std
mov
add
xchg
test
mov
or
leave
or
pop
int
das
or
xchg
sbb
cld
and
(bad)
(bad)
cmp
jne
loop
mov
and
div
sahf
inc
jg
ret
(bad)
mov
add
ins
mov
jmp
cli
sbb
cmp
je
fild
add
test
and
retf
popa
mov
jg
cmp
mov
shl
mov
dec
or
popa
mov
pop
push
mov
cdq
(bad)
(bad)
mov
and
cli
mov
cmp
cli
jg
push
push
mov
jmp
into
ss
or
movs
jns
mov
neg
add
cmp
sar
sbb
or
test
xor
jnp
neg
or
or
aas
test
push
add
sbb
or
cmp
test
sbb
sbb
nop
pop
sbb
or
test
adc
adc
and
inc
mov
out
out
and
or
or
inc
adc
or
mov
test
sbb
(bad)
(bad)
inc
mov
xor
cmp
mov
je
push
mov
cmp
je
mov
xchg
add
adc
push
(bad)
aas
mov
xor
or
adc
or
pop
shr
(bad)
adc
mov
or
lahf
adc
imul
sbb
jae
or
inc
add
je
mov
jne
pop
mov
push
mov
mov
jo
repz
ror
dec
test
xor
mov
add
pop
or
cmps
fwait
xor
push
add
sbb
push
add
sub
fstp
add
or
adc
or
mov
and
lock
adc
mov
push
xor
adc
add
call
add
test
pop
je
test
jne
icebp
inc
hlt
pop
push
add
cmps
adc
push
dec
pop
jg
cmp
dec
push
dec
inc
and
std
and
push
call
dec
das
push
add
cmps
or
pop
and
xchg
xchg
scas
mov
or
xor
or
xor
push
push
fist
cmp
test
cmp
je
test
sub
jmp
pop
and
xor
xchg
sub
ss
div
mov
jmp
mov
jl
xor
and
sbb
mov
out
cli
cmps
lock
pop
push
dec
and
push
ror
scas
outs
adc
aaa
adc
add
push
push
xor
dec
sar
fadd
jne
out
test
fcomp
lea
mov
xlat
push
cmc
pop
mov
mov
popa
sbb
or
mov
shl
or
scas
jno
or
inc
mov
dec
idiv
mov
shl
mov
add
adc
xchg
or
aam
arpl
adc
pop
les
cmp
fist
jae
enter
add
pop
pop
mov
test
and
or
int3
int3
mov
mov
sub
jnp
outs
sub
or
inc
and
add
xor
push
push
or
cdq
cmps
imul
inc
test
push
jne
mov
(bad)
or
in
jbe
loop
dec
or
inc
add
or
es
adc
sar
or
inc
loopne
repz
pop
sete
pop
sbb
push
push
pop
cmp
je
cmp
je
cmp
je
cmp
je
add
ror
dec
pop
xor
das
sub
or
inc
and
sub
mov
mov
(bad)
(bad)
dec
push
xor
cmp
push
push
mov
mov
mov
mov
je
cmp
je
push
or
loopne
inc
add
push
and
ret
jmp
clc
mov
je
push
add
push
je
mov
out
(bad)
mov
sub
test
je
lea
push
lea
push
aaa
(bad)
pop
push
sbb
pop
ret
mov
sar
inc
rcl
and
jge
inc
fild
add
lods
push
mov
ja
sbb
repz
cmp
jbe
mov
pushf
popa
push
push
clc
cmp
mov
mov
push
mov
neg
mov
inc
hlt
adc
into
outs
push
sub
dec
mov
jne
call
std
adc
sti
or
movs
mov
jmp
add
mov
scas
mov
dec
outs
or
pusha
cmps
ja
rcr
jle
and
addr16
mov
mov
adc
rol
push
push
push
mov
fs
adc
and
mov
mov
mov
lea
leave
push
lods
call
and
in
sub
test
jle
lea
add
jg
clc
add
movzx
mov
movzx
mov
call
and
or
mov
das
rol
jmp
popa
add
mov
mov
push
push
pop
add
int
jmp
mov
push
stos
push
push
push
push
push
push
mov
xor
jge
add
cwde
push
jmp
pusha
into
lock
xor
push
push
stc
loopne
fwait
ins
sub
or
in
clc
sbb
xor
lods
mov
add
leave
je
mov
sbb
inc
test
inc
push
mov
sbb
mov
ja
jge
mov
jne
lds
inc
(bad)
push
(bad)
mov
mov
pop
sub
sub
fdivr
push
push
int3
pop
clc
(bad)
or
(bad)
shl
in
shl
fsubp
arpl
mov
(bad)
push
enter
enter
int3
pop
aam
mov
mov
or
loopne
xchg
enter
mov
aad
adc
out
iret
cmp
push
or
lock
adc
(bad)
push
cmp
jmp
jne
cmp
jne
mov
lea
in
push
jbe
cmp
jl
test
jbe
lea
mov
sbb
ret
out
neg
cmc
cld
out
push
mov
pop
out
adc
jmp
sub
jne
(bad)
aas
add
mov
test
jbe
lea
push
xchg
call
in
add
xor
sub
xor
pop
xchg
mov
jnp
jl
cld
mov
xchg
std
sbb
or
dec
cld
ins
mov
inc
adc
je
(bad)
frstor
inc
add
lds
int
add
and
or
sub
aam
add
in
or
inc
and
cmp
sbb
adc
push
xor
push
mov
push
pop
ja
add
push
cmp
ins
and
or
mov
push
sbb
pop
mov
test
je
mov
mov
std
mov
or
lock
mov
sbb
pop
push
cmp
pop
mov
sub
add
mov
mov
push
sub
push
push
inc
clc
pushf
in
mov
cs
pusha
and
int
ror
jne
mov
adc
push
or
xchg
push
jbe
adc
jmp
sbb
xchg
and
test
add
xlat
cmp
ss
pop
sbb
sar
add
cmp
retf
sbb
mov
sbb
sub
nop
jnp
ret
or
cmps
and
xor
int3
pop
or
push
cmps
sbb
or
sub
mov
call
mov
mov
mov
mov
mov
jle
mov
mov
mov
je
push
add
push
mov
dec
scas
sub
adc
adc
or
aaa
pop
cmc
in
cmp
and
test
je
sub
pop
add
push
push
lea
push
inc
cmps
fild
icebp
imul
and
xor
dec
in
push
out
bound
push
push
mov
outs
sbb
test
and
ja
cmp
call
lods
push
aaa
aad
mov
mov
lods
in
mov
push
jb
aam
mov
mov
push
in
sbb
outs
ins
mov
cli
or
mov
xor
jge
adc
jne
cmp
inc
outs
cmp
jne
mov
sti
xor
cmp
xor
(bad)
adc
inc
jmp
cmp
adc
or
ds
adc
add
inc
mov
stos
je
cmp
je
cmp
mov
je
mov
clc
push
ja
out
aad
(bad)
mov
inc
jne
(bad)
fiadd
(bad)
loopne
idiv
add
pop
addr16
leave
jge
sub
pop
pop
mov
cmp
or
ja
or
adc
push
push
mov
jge
sti
ins
int3
or
sbb
push
(bad)
out
call
mov
mov
mov
or
mov
mov
loope
add
call
dec
scas
fstp
lea
aaa
sti
call
and
jne
fld
jns
(bad)
fild
or
add
fstp
inc
mov
or
mov
ins
mov
mov
test
popa
jo
or
ja
loopne
data16
(bad)
fisub
shl
ret
push
sbb
add
sbb
jmp
mov
lods
rol
push
push
fcmovu
lods
mov
ss
and
sbb
adc
neg
pop
mov
mov
and
jbe
pusha
xor
mov
xchg
popf
and
push
sbb
fist
mov
in
and
push
in
inc
jno
jno
aam
out
and
pop
lea
out
(bad)
jmp
xor
sub
inc
movzx
mov
or
movzx
or
mov
mov
add
jmp
mov
test
sbb
adc
jmp
retf
mov
jb
add
push
or
clc
mov
push
out
xor
loop
add
xor
idiv
jmp
cmp
jge
mov
shl
sub
lea
cdq
idiv
add
mov
add
clc
dec
std
dec
cmovne
xor
test
cmp
enter
call
or
inc
jo
jmp
sub
jecxz
repz
fadd
cmp
(bad)
call
test
in
lea
push
push
push
mov
lea
iret
std
sbb
cmp
jne
mov
pop
les
push
test
mov
mov
push
add
mov
aaa
lea
push
lea
push
call
dec
aas
jns
push
movs
je
movs
mov
mov
pop
outs
dec
out
inc
push
mov
jle
shr
xchg
lea
(bad)
out
loop
(bad)
test
mov
jne
test
je
push
mov
add
mov
es
icebp
adc
xor
icebp
add
test
jle
xor
sub
adc
inc
mov
add
jmp
sub
cmp
push
jb
jge
mov
cmps
sbb
push
jne
push
add
popf
lds
jne
push
jmp
jle
std
dec
loop
mov
or
test
adc
mov
push
push
pop
in
adc
retf
mov
jge
add
inc
call
push
and
add
adc
je
and
mov
aas
jnp
adc
pushf
push
mov
nop
jae
or
inc
ror
pop
push
jae
(bad)
es
inc
xchg
mov
sbb
jge
add
or
imul
or
lock
repnz
jne
fldcw
pslld
inc
add
sbb
push
out
or
adc
mov
jmp
faddp
sbb
cdq
or
leave
mov
idiv
mov
mov
or
jge
sbb
dec
adc
inc
and
arpl
jle
test
inc
and
and
sub
and
inc
sub
push
xor
fdiv
push
cmp
(bad)
call
xor
cmp
je
mov
cmp
je
mov
mov
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
mov
add
cwde
push
ins
mov
mov
push
(bad)
jae
and
add
or
(bad)
minps
jge
test
jne
add
jl
adc
jne
cmp
cmp
mov
jne
mov
std
inc
mov
cmp
jne
mov
sub
and
sbb
sar
and
pop
mov
mov
or
iret
mov
jge
mov
neg
jmp
mov
and
popa
or
xor
dec
jge
and
cmp
jl
cmp
jg
push
mov
mov
gs
clc
icebp
out
fwait
aam
pop
pop
ret
push
pop
push
call
loop
sbb
out
adc
xchg
ret
mov
nop
and
pop
(bad)
push
push
out
and
int3
push
mov
add
(bad)
mov
xor
lock
mov
loop
ja
add
loopne
dec
sub
mov
jne
call
mov
cmp
jne
sub
(bad)
jg
jmp
mov
sub
mov
mov
cmp
jb
mov
loope
adc
sub
repz
or
in
rep
push
inc
mov
mov
dec
ret
sub
cmp
mov
jbe
mov
lds
mov
or
jnp
push
jmp
outs
sbb
ins
cmp
shl
sbb
clc
mov
mov
sub
std
push
(bad)
dec
sub
inc
sub
add
mov
jg
clc
adc
rcr
cmp
jae
add
mov
jg
xchg
mov
cmp
cmps
stos
clc
test
push
je
call
icebp
mov
add
test
add
hlt
inc
cmp
jne
cmp
jne
cmp
cmp
jne
mov
or
push
adc
imul
xor
js
mov
loop
add
mov
cmp
adc
enter
sbb
xor
in
lock
pop
jbe
inc
add
pop
pop
xchg
jge
jg
in
nop
jmp
or
jne
cmp
fwait
cwde
arpl
aad
std
adc
dec
(bad)
adc
add
mov
mov
shl
sub
fs
pop
mov
or
ret
je
aad
(bad)
(bad)
push
inc
or
je
cmp
jne
xor
push
push
push
dec
fstp
inc
sbb
xor
scas
sti
lea
mov
add
mov
mov
jae
(bad)
in
call
mov
jge
inc
add
inc
aam
cld
sbb
pop
mov
mov
dec
and
mov
and
dec
jmp
shl
out
add
test
fcomip
jg
les
mov
and
cmp
je
jbe
mov
sti
and
mov
(bad)
iret
shr
adc
add
lahf
add
or
and
hlt
dec
xor
mov
jg
adc
push
adc
fsub
dec
inc
inc
pop
shr
not
and
jns
mov
inc
xor
into
enter
test
or
push
cmp
push
aas
add
cmp
mov
fdiv
test
cmp
int3
pop
div
(bad)
loopne
push
pop
inc
sbb
inc
cmc
and
loopne
mov
test
je
pusha
call
inc
and
shr
and
mov
jl
mov
push
mov
add
or
(bad)
popa
(bad)
dec
clc
cmps
scas
adc
lds
add
(bad)
jle
jecxz
fs
jae
mov
outs
aaa
popf
loope
inc
cmp
shr
sahf
jl
jae
sbb
push
sub
push
and
xchg
sub
jmp
and
adc
das
aas
(bad)
sub
jg
adc
rol
inc
mov
mov
inc
or
pop
daa
js
ret
add
xchg
sub
cli
outs
or
aad
in
mov
pop
ret
je
mov
setg
mov
test
mov
je
iret
push
and
jmp
je
cmp
inc
push
add
ja
pop
add
je
jo
dec
inc
fimul
ror
fcomp
call
mov
test
je
mov
test
(bad)
mov
adc
jnp
mov
lea
cmp
jbe
sub
lods
sbb
xchg
add
(bad)
jae
dec
push
fdiv
sbb
inc
sbb
add
sbb
mov
clc
clc
push
(bad)
sub
adc
std
sub
add
sub
fadd
in
cli
cmp
jle
lods
inc
lock
ficomp
add
add
inc
or
test
inc
and
lods
dec
mov
test
sbb
mov
mov
mov
je
mov
mov
cmp
jae
loope
adc
cmp
and
mov
sbb
inc
inc
jnp
cmp
test
mov
inc
add
into
sbb
jmp
test
mov
xor
retf
add
inc
jno
add
ret
(bad)
cmp
adc
test
nop
and
leave
mov
mov
scas
or
nop
mov
lods
mov
inc
andnps
sub
or
imul
xor
aam
mov
mov
ret
push
je
mov
sbb
(bad)
adc
stc
or
xchg
xor
add
pop
and
mov
and
sub
adc
xchg
and
test
aad
and
sub
loop
add
xor
mov
shl
sbb
retf
xor
and
push
les
mov
cmp
(bad)
and
xchg
inc
xor
mov
add
cmp
mov
sbb
shr
sub
mov
jne
adc
mov
cld
lds
mov
add
adc
fbstp
and
call
add
add
add
lock
mov
add
mov
adc
inc
dec
mov
out
adc
push
mov
dec
xchg
pop
or
loopne
add
add
rcl
sar
loope
add
or
fcomp
lea
mov
sbb
shl
loop
retf
clc
fmul
inc
sbb
iret
xchg
mov
mov
add
lods
je
add
out
xchg
test
cli
call
xor
mov
sub
sbb
add
pop
and
mov
xor
cmp
js
pop
push
sahf
in
add
test
int3
push
sahf
pop
shr
add
inc
jge
ror
loop
std
dec
jp
ret
add
in
push
cmp
fbld
mov
mov
adc
xchg
push
cmp
outs
mov
push
ja
push
mov
mov
dec
push
pop
cmp
jae
dec
adc
sub
cmp
call
movzx
mov
shr
idiv
pop
mov
add
pop
scas
clc
or
popf
add
dec
push
idiv
mov
cmp
inc
push
jo
add
inc
push
cmp
(bad)
mov
mov
mov
lea
out
mov
cmc
push
push
mov
inc
jo
mov
sar
inc
inc
xchg
scas
fidivr
jl
ror
push
add
ja
es
rep
add
pusha
cmp
add
push
inc
mov
jmp
movzx
cmp
cmc
inc
jbe
lds
frstor
jo
xchg
lds
stos
cmp
inc
ja
lea
inc
mov
cli
adc
movzx
cmp
pop
sbb
sub
sub
pop
pop
out
rol
dec
jb
sbb
(bad)
inc
inc
jecxz
mov
mov
dec
sub
lea
cmp
mov
mov
push
sbb
ins
mov
or
pop
rcl
cmp
hlt
add
movzx
dec
sahf
fs
mov
loope
add
xchg
nop
sub
call
sbb
dec
lea
cmp
jae
mov
daa
ret
mov
add
cmp
and
retf
retf
ret
dec
ja
clc
call
jmp
lea
dec
movs
sub
xchg
out
adc
and
inc
jg
ror
call
cld
xchg
out
mov
jo
jnp
cs
lock
cmp
sub
xchg
sub
pop
pop
mov
xchg
out
dec
aas
shl
sub
jne
mov
dec
add
xchg
jb
cmp
je
adc
mov
(bad)
jo
in
and
push
mov
shl
mov
xor
jae
fadd
shr
xor
int3
int3
icebp
pop
leave
seta
adc
ds
push
push
pop
push
push
mov
enter
mov
fs
lea
push
push
jo
cmps
pop
inc
and
mov
add
sbb
or
pop
icebp
jg
inc
jb
cmp
rol
imul
sub
dec
or
adc
xor
(bad)
mov
push
mov
mov
arpl
adc
cmp
in
xor
mov
and
lea
loopne
rol
or
outs
out
das
daa
dec
mov
into
cmp
inc
pop
jo
jo
in
cs
add
pusha
dec
repnz
ss
jmp
ja
test
je
cmp
ret
test
jmp
mov
sbb
retf
inc
add
mov
ins
push
shl
rcr
shr
or
jmp
rol
shl
mov
push
sub
das
pop
aas
cmp
inc
movzx
movzx
das
(bad)
sbb
pop
(bad)
or
gs
mov
mov
cmp
retf
ins
inc
and
arpl
aam
jmp
(bad)
sbb
ja
add
push
fucomp
jp
shr
add
aas
call
test
xor
repnz
add
loopne
dec
test
je
cwde
popa
add
lock
int3
pusha
cwde
out
add
lahf
and
and
mov
mov
scas
mov
call
xor
(bad)
sar
mov
mov
shl
sbb
push
(bad)
pop
and
pusha
or
dec
push
push
aaa
retf
push
pushf
mov
dec
jg
xor
mov
push
int
push
neg
push
ja
inc
int
aaa
inc
inc
lds
lds
xchg
shl
xchg
xor
dec
xchg
rcr
adc
fimul
adc
mov
fdiv
push
cmps
inc
sub
idiv
or
xchg
test
dec
jne
hlt
sbb
sub
mov
cmp
jbe
gs
ds
pusha
add
push
jae
and
minps
cmp
test
test
sub
mov
fstp
retf
xor
sbb
adc
add
xchg
fcomip
sbb
shr
or
push
xor
rol
push
xor
int
call
stos
sub
cmp
mov
jmp
dec
sub
xor
call
add
scas
and
ja
rcr
inc
cmp
fadd
shr
push
inc
nop
dec
sub
(bad)
sub
arpl
push
and
add
sub
sub
cmp
pop
dec
aas
mov
test
mov
cmp
mov
add
sub
test
daa
mov
jne
cmp
shl
std
and
(bad)
push
cmp
cmp
sub
or
sbb
dec
aad
add
add
test
mov
je
(bad)
jmp
mov
sbb
enter
add
push
je
inc
ss
push
fstp
add
inc
pop
cmp
or
jne
and
jne
pop
cmp
retf
sub
dec
sbb
add
fmul
not
lods
mov
xor
mov
pop
pusha
ja
cs
jbe
and
xor
cmp
je
dec
arpl
lds
xchg
aam
cld
in
(bad)
call
pop
cwde
pop
mov
add
sub
sub
jns
jp
inc
mov
mov
pop
and
adc
inc
mov
mov
pop
add
or
add
jno
push
adc
cmp
mov
jne
cmp
jge
mov
cmp
je
jb
fadd
inc
xor
mov
mov
sahf
mov
and
clc
jmp
xchg
sub
add
add
add
or
xor
dec
icebp
inc
je
sub
adc
sbb
(bad)
out
push
loop
jmp
mov
mov
sub
jo
sbb
(bad)
(bad)
mov
inc
xor
sbb
and
xor
cmp
setne
mov
and
dec
cmp
in
mov
jne
pop
lock
mov
sbb
test
jmp
inc
mov
ds
(bad)
(bad)
call
inc
mov
push
jmp
inc
add
xor
jne
inc
add
repz
ja
jg
inc
add
xor
ss
add
inc
add
aaa
fbstp
cmp
add
aam
cmp
repz
add
mov
inc
add
inc
inc
add
inc
inc
inc
add
jbe
inc
add
and
and
jne
call
inc
inc
add
lds
add
or
pop
or
xor
mov
dec
adc
xchg
dec
sbb
push
sub
jle
inc
mov
adc
xor
aam
loopne
xchg
(bad)
pusha
push
sub
cmp
jle
push
push
es
mov
mov
pushf
shr
(bad)
mov
mov
icebp
fbstp
jno
cmp
mov
mov
pop
shl
xchg
sbb
inc
and
sbb
pop
mov
cmp
jb
out
add
cmp
or
add
ret
(bad)
call
cmp
and
enter
push
lea
lea
loop
mov
cld
pop
pop
je
out
adc
cmp
call
xor
div
mov
or
mov
cmp
jbe
push
fidivr
inc
imul
mov
push
or
inc
adc
push
mov
sbb
jl
jle
pop
or
pop
push
cmps
mov
das
sbb
in
test
outs
add
adc
or
and
lock
and
jne
pop
ret
test
jne
cwde
mov
std
and
mov
test
das
adc
and
fld
(bad)
iret
add
pop
adc
repz
mov
adc
(bad)
inc
je
pop
and
stc
push
inc
cmp
ret
je
lea
add
jmp
loopne
add
xchg
adc
add
(bad)
fbld
dec
cmp
xor
in
cmp
jle
pop
(bad)
mov
add
add
lds
add
cmp
jl
loope
push
loopne
push
cmp
mov
mov
and
ins
and
cmp
xchg
std
popf
jae
and
mov
and
fiadd
or
hlt
mov
xor
xchg
xchg
jb
sahf
ss
(bad)
out
mov
sahf
and
xor
cmp
mov
sbb
jns
mov
inc
adc
mov
or
jmp
lds
cmc
mov
ins
and
pop
inc
rcr
mov
fwait
test
je
mov
mov
out
mov
mov
xlat
mov
(bad)
lds
test
mov
add
retf
call
in
mov
push
pusha
outs
mov
xlat
mov
call
mov
mov
mov
scas
loope
sub
push
sub
jmp
or
sbb
lods
ds
cmp
jle
push
push
xchg
mov
loope
scas
pop
xchg
jno
ja
ins
fsub
dec
sahf
and
pusha
popf
mov
adc
sahf
call
fisttp
and
test
adc
loope
test
sub
sbb
xor
sub
cmp
sub
or
iret
adc
mov
jmp
mov
xor
cmp
sbb
imul
and
jl
mov
test
sahf
or
sahf
sbb
fcomi
pop
pop
cwde
mov
ret
inc
jl
push
mov
lods
adc
push
adc
fistp
test
adc
lds
sahf
mov
je
loopne
jle
faddp
js
lahf
mov
sti
pusha
cmp
xor
add
fsub
test
adc
jg
and
mov
je
and
not
and
pop
pop
pop
pop
add
pop
or
adc
push
adc
xor
dec
les
cmp
add
xchg
jle
(bad)
(bad)
jo
sbb
mov
mov
sahf
jge
jp
out
test
inc
push
pusha
cmp
out
or
shl
sub
fistp
je
cmp
or
push
out
dec
lea
repz
xor
call
pop
es
xor
movzx
pop
ret
xor
push
sbb
push
add
mov
dec
add
xor
push
in
mov
add
push
stos
mov
pop
mov
cmp
sbb
(bad)
sub
pop
adc
jmp
push
push
cld
xor
and
mov
cmp
and
push
pop
lds
sti
popf
stos
mov
push
xchg
into
adc
or
call
pop
fld
fucompp
fnstsw
test
jp
cmp
xor
push
and
sbb
fnstcw
adc
xor
xor
and
cmp
leave
and
or
pop
adc
pop
out
loopne
loop
icebp
pop
xchg
ret
stos
fcomp
jg
add
adc
daa
adc
and
sub
into
xor
idiv
xor
xchg
or
cdq
loope
int3
or
cdq
nop
inc
mov
fnstcw
not
call
test
mov
adc
cmps
cmp
adc
cmp
mov
adc
cmps
jae
aam
adc
out
out
adc
push
add
imul
fstp
cdq
out
and
mov
out
rcr
outs
adc
cdq
mov
adc
fstp
or
cmp
cdq
add
inc
fstp
mov
dec
fstp
ror
fmul
and
fadd
movzx
pop
cld
dec
int3
or
add
fldcw
fistp
mov
sub
xor
and
jae
ror
xor
cmp
sub
sbb
inc
adc
xor
das
fisubr
arpl
inc
hlt
push
leave
cmp
fidivr
xor
inc
arpl
aas
inc
push
xor
or
add
popa
shl
ds
xchg
dec
aas
pop
and
push
mov
and
dec
adc
clc
sub
cmp
je
icebp
mov
xchg
mov
mov
mov
(bad)
(bad)
frstor
inc
cmp
jne
cmp
jne
cmp
jne
test
jne
push
(bad)
push
test
jne
test
pop
or
ja
leave
push
pop
int3
or
jg
ret
jl
adc
jl
lahf
or
paddb
neg
mov
mov
mov
ss
(bad)
(bad)
inc
adc
push
and
fcomp
jo
pop
mov
adc
push
sbb
adc
and
sbb
and
enter
xor
xor
and
icebp
xor
fstp
pop
inc
fnstcw
fadd
mov
mov
movs
cmp
sbb
or
mov
and
mov
sbb
jnp
cmp
sbb
and
(bad)
xchg
mov
mov
xchg
lds
sub
dec
push
mov
inc
int
mov
mov
shl
cmp
in
popf
xchg
(bad)
cld
and
dec
or
and
or
inc
mov
xor
sub
adc
inc
test
je
inc
shl
outs
(bad)
jmp
cmp
fld
es
push
pop
jo
or
outs
adc
push
sub
add
pop
ja
leave
xchg
or
jl
shl
and
mov
iret
mov
jp
leave
js
mov
cmp
xor
jg
add
imul
xlat
add
cmp
jle
sahf
cmp
(bad)
jmp
test
jge
push
test
sbb
sbb
xchg
cmp
(bad)
je
ret
xchg
test
sar
dec
mov
test
je
cmp
ja
push
push
push
dec
add
xor
es
sbb
pop
add
cmp
lds
jle
cmp
jbe
and
in
(bad)
(bad)
mov
sbb
mov
movzx
add
cmp
jl
pop
mov
pop
mov
cmc
or
test
out
outs
xor
repz
or
push
mov
rol
imul
ds
adc
cmp
cmp
push
in
fstp
push
and
mov
imul
jle
(bad)
call
adc
(bad)
inc
and
clc
add
clc
add
mov
or
cmp
je
push
(bad)
call
mov
test
jl
cmp
je
cmp
je
cmp
jle
push
cli
add
mov
jmp
cmp
mov
sbb
adc
pushf
xor
and
add
js
xor
adc
rcl
outs
push
xor
and
ins
enter
ds
jmp
fcomip
xchg
add
adc
clc
inc
jne
xor
add
cmp
popa
(bad)
push
push
add
cmp
sbb
icebp
adc
sti
add
mov
sbb
push
and
mov
mov
mov
push
xor
inc
sbb
mov
mov
mov
mov
je
(bad)
(bad)
(bad)
mov
sbb
add
ret
add
je
add
mov
imul
or
js
inc
push
jbe
sbb
or
mov
jb
shr
imul
mov
adc
add
int3
fadd
pop
adc
cs
and
and
mov
push
test
sbb
or
mov
mov
(bad)
nop
(bad)
adc
push
push
inc
or
ret
inc
adc
xchg
mov
ret
in
test
(bad)
cdq
mov
or
js
push
pop
std
dec
mov
sbb
and
adc
es
add
push
jmp
iret
pop
mov
iret
mov
adc
mov
or
and
inc
xchg
movs
xchg
popf
mov
out
sti
xor
fwait
(bad)
push
aam
cmp
mov
add
into
add
imul
adc
pusha
enter
hlt
mov
ja
pop
jnp
and
or
ss
lea
mov
mov
sub
inc
pop
add
push
data16
sbb
and
mov
adc
dec
xchg
mov
jo
inc
maskmovq
sti
push
cld
mov
mov
fsubr
jmp
into
mov
sahf
mov
aad
add
cmp
jl
mov
dec
or
mov
movs
adc
pop
lock
jno
out
sub
xor
ficom
push
or
inc
fstp
xchg
adc
mov
rol
out
pop
xor
das
or
xchg
sbb
and
outs
xor
lods
push
das
dec
cld
pop
push
or
sbb
idiv
dec
adc
jnp
add
pop
jne
call
push
js
mov
cmp
xchg
or
mov
mov
(bad)
outs
cmp
lea
and
call
and
mov
pop
mov
mov
mov
or
and
mov
pop
pop
jbe
pop
sbb
fnstenv
repnz
pop
inc
das
push
rol
cmove
or
movs
clc
or
mov
add
jb
fadd
out
loop
cmp
fld
or
xchg
(bad)
mov
(bad)
sbb
push
push
mov
jmp
cmp
(bad)
mov
inc
in
aad
jbe
push
push
jmp
ja
push
(bad)
mov
jp
inc
int3
fld
inc
sub
fstp
adc
mov
or
fld
stc
pop
js
and
add
push
in
add
pop
cdq
xchg
cmp
pop
xlat
les
or
xchg
daa
out
or
xor
iret
push
adc
cli
clc
xchg
sbb
aaa
and
je
popa
add
cmp
popa
les
inc
and
adc
push
pop
pop
pop
pop
ret
mov
div
rep
mov
push
daa
scas
mov
and
jne
out
inc
mov
sub
push
frstor
mov
and
dec
je
add
std
rep
rcl
xlat
out
pop
outs
push
push
rep
in
cmp
add
movs
xor
push
adc
cmps
adc
mov
int3
fnstsw
stos
mov
dec
std
fisttp
push
inc
add
in
adc
leave
push
fcmovbe
out
mov
and
lds
ja
pop
pop
mov
pushf
mov
iret
add
xor
(bad)
cmp
call
jle
cdq
jno
ror
adc
xchg
add
mov
rol
rcl
mov
and
(bad)
pop
inc
cmp
sbb
test
mov
adc
lea
add
add
(bad)
shl
or
push
int3
and
xor
push
or
jne
retf
or
cmp
xor
cmp
push
pusha
loopne
xchg
jle
add
jge
push
add
mov
lea
enter
or
push
test
lea
je
out
enter
in
sub
sub
adc
push
mov
inc
std
pop
and
jmp
mov
xchg
popf
mov
adc
loop
pop
lahf
add
pop
mov
add
aaa
hlt
mov
fldpi
add
fisttp
cmp
pop
fsubr
add
mov
aas
sbb
xor
lock
cmp
lahf
rol
sub
inc
add
(bad)
aaa
sar
retf
add
lea
bound
clc
inc
add
inc
add
test
jbe
add
call
dec
sbb
retf
popf
sbb
sar
push
in
jle
mov
(bad)
adc
add
jl
fcom
mov
mov
mov
dec
adc
cli
mov
xchg
jge
inc
or
sbb
(bad)
out
ds
add
and
lea
xor
jmp
mov
mov
mov
inc
std
fbstp
cmp
mov
je
mov
cmp
retf
(bad)
cli
dec
or
std
(bad)
(bad)
aas
cmp
jle
mov
mov
jmp
mov
mov
test
add
test
mov
and
rcl
jge
(bad)
cwde
xor
mov
sbb
mov
repnz
cmc
adc
scas
cwde
adc
pop
pop
in
int3
mov
mov
test
or
jmp
dec
sub
mov
mov
or
mov
inc
das
push
mov
loop
mov
aas
mov
push
push
movaps
test
inc
neg
hlt
shl
idiv
rcl
sbb
dec
mov
xchg
jg
mov
mov
repz
dec
push
int3
cmps
test
(bad)
(bad)
(bad)
in
mov
lea
mov
mov
mov
mov
mov
jne
mov
fwait
push
add
imul
pop
push
inc
adc
jo
cmps
(bad)
jmp
iret
xchg
cmp
ja
add
push
shl
and
mov
mov
adc
sti
call
adc
pop
pop
add
ret
mov
hlt
mov
mov
push
shr
xchg
jmp
sbb
scas
cmp
rol
or
inc
and
mov
aas
shr
xchg
in
lds
aaa
jge
movs
or
pop
add
inc
hlt
sbb
out
shl
or
or
push
xor
xor
test
mov
sub
hlt
mov
adc
sbb
add
add
cdq
cld
pop
mov
pop
ja
add
mov
(bad)
or
movs
adc
and
lock
pusha
xchg
mov
sub
div
mov
fstp
mov
push
clc
add
cmp
mov
fld
lahf
and
mov
(bad)
jns
xor
loope
sahf
sub
jns
and
and
stos
xor
loope
js
fwait
add
call
mov
das
bound
ja
mov
mov
add
fst
mov
arpl
mov
xor
dec
pop
pop
cmp
cmp
push
cwde
mov
fsubr
pop
rol
lods
sub
cmp
and
mov
out
and
ret
or
push
mov
lahf
xchg
mov
mov
data16
sub
lea
mov
mov
mov
mov
mov
dec
mov
mov
mov
pop
sar
dec
js
inc
or
push
mov
mov
add
mov
ja
outs
call
mov
mov
mov
push
and
sti
add
fwait
mov
dec
and
aas
hlt
loope
add
add
popf
fild
mov
and
jmp
or
ret
outs
sbb
push
push
cmp
inc
fbstp
dec
inc
and
sub
(bad)
clc
add
pop
mov
clc
add
mov
push
mov
push
je
mov
cwde
push
lea
push
mov
cld
mov
test
je
mov
push
xor
shr
icebp
mov
or
daa
mov
inc
call
sbb
jmp
xor
adc
xlat
jge
leave
je
ins
mov
rcl
mov
mov
add
mov
jnp
sub
push
mov
pop
int3
dec
add
leave
fst
xchg
ror
popf
scas
enter
push
inc
sbb
fmul
pop
push
div
ret
shl
mov
jmp
push
int3
(bad)
icebp
xor
add
add
push
inc
test
shl
jmp
aad
mov
mov
scas
shr
push
adc
adc
push
scas
or
inc
push
or
cmp
add
push
je
push
add
cmp
push
push
adc
adc
inc
outs
adc
les
je
pushf
out
out
mov
jmp
das
out
fimul
mov
mov
mov
std
aaa
adc
add
loopne
call
rcr
je
or
inc
or
ret
push
cmps
pop
ds
or
(bad)
outs
movs
jg
or
inc
imul
or
push
test
(bad)
es
or
and
sbb
and
in
or
mov
std
jg
sbb
mov
sbb
mov
sbb
mov
sbb
sbb
rcl
sbb
push
add
dec
cli
fbstp
in
test
je
fld
dec
push
inc
cld
ins
add
test
jmp
xor
push
adc
sti
jle
je
add
ror
push
ja
mov
(bad)
push
push
push
and
adc
add
mov
push
lea
push
or
pop
(bad)
and
mov
dec
fld
fcos
mov
pop
and
fld
fstp
out
xchg
pop
lahf
cmp
fstp
push
add
sub
ror
adc
cmp
jae
inc
stos
jmp
xlat
cmp
ret
cwde
je
mov
test
je
xchg
mov
inc
add
jne
cmp
je
test
dec
aaa
out
mov
mov
xor
push
adc
aas
add
lea
cwde
add
lea
cmp
jb
or
pop
push
mov
scas
cmc
es
icebp
jnp
jecxz
cld
(bad)
jge
push
dec
or
or
mov
adc
dec
adc
mov
or
jmp
cmp
ja
js
lods
mov
dec
add
(bad)
std
test
je
pop
and
shl
push
jbe
ret
(bad)
(bad)
jmp
dec
lea
or
sub
add
mov
movzx
cmp
jl
jle
xlat
sbb
push
lea
push
push
add
in
jb
and
std
frstor
cld
jle
pop
lahf
inc
pop
mov
adc
inc
jl
cmp
call
ja
add
mov
mov
push
sbb
or
sbb
cmp
xchg
cmp
mov
mov
(bad)
loop
mov
xchg
repnz
mov
or
mov
hlt
out
sub
les
aam
jle
inc
je
fst
movzx
shl
fdivr
xchg
sbb
push
mov
sbb
call
or
mov
(bad)
or
test
lods
push
mov
inc
cmp
lds
(bad)
or
jge
movs
and
xor
(bad)
cmp
ins
jle
leave
lea
sbb
call
retf
push
add
sti
jecxz
mov
sub
fstp
pop
xor
mov
(bad)
(bad)
aas
xor
lea
mov
mov
test
jle
mov
mov
cmp
jg
xchg
add
push
mov
push
stos
mov
sbb
in
sbb
dec
jg
mov
js
cmp
(bad)
(bad)
push
loope
add
mov
mov
push
push
inc
add
add
je
mov
add
xor
ja
jne
sub
add
add
jmp
add
dec
add
rol
gs
sub
jp
cmp
jbe
mov
(bad)
cwde
out
popa
or
push
and
jg
test
je
test
jne
push
mov
add
pop
ins
xchg
or
push
add
pop
pop
ret
call
or
test
pop
fmul
adc
and
inc
je
test
jne
mov
xchg
ja
pop
xor
mov
jnp
sbb
pop
sub
in
loope
and
jg
nop
and
mov
dec
ss
cmps
cs
je
js
pop
stos
pop
pop
or
mov
mov
add
sbb
je
out
add
cmp
inc
imul
icebp
aas
mov
cmp
test
xor
jo
je
cmp
push
sbb
jmp
test
pop
je
or
rol
or
jae
xor
daa
inc
inc
sar
pop
cmp
je
push
in
sbb
dec
test
cmp
dec
pop
add
jg
mov
cmp
je
sbb
leave
addr16
jne
add
sbb
add
xor
loope
fwait
jmp
inc
mov
sub
mov
lea
inc
lds
mov
mov
mov
mov
shr
mov
ret
mov
xchg
lods
adc
add
jo
mov
call
hlt
nop
je
mov
jae
pop
je
movzx
sub
sbb
add
call
adc
cli
lahf
loopne
dec
pop
pop
ret
cmp
je
daa
ds
adc
and
xchg
add
sbb
mov
aaa
loope
jne
xor
sub
outs
or
push
cmovl
sub
and
cmp
inc
push
test
std
ja
or
jecxz
ins
inc
add
outs
inc
add
add
ret
xor
push
mov
adc
popf
cmp
pop
jae
je
add
es
js
push
sbb
lds
push
jmp
push
clc
mov
cmp
xor
int3
mov
inc
sbb
or
arpl
cli
ja
xor
pushf
mov
jmp
mov
push
mov
cmp
fwait
movs
add
or
jmp
xchg
adc
mov
dec
push
push
lea
sub
jl
push
push
sub
mov
cmp
mov
std
pop
mov
or
lock
add
int3
push
es
es
cld
int3
adc
inc
hlt
es
add
xchg
sbb
sub
data16
cdq
movs
es
sbb
inc
mov
adc
mov
lea
shl
cmp
data16
jge
xchg
pop
dec
and
mov
ret
call
inc
add
add
sub
jmp
int3
dec
inc
and
cmp
or
adc
(bad)
xchg
or
test
jne
jmp
xchg
fisttp
test
adc
ss
aaa
hlt
test
je
xor
mov
add
jle
dec
cmp
sub
(bad)
sti
add
cmpxchg
rol
clc
jmp
adc
add
inc
jl
cmp
sbb
mov
ss
push
mov
shl
inc
aaa
jns
pop
mov
jmp
add
add
mov
add
xor
iret
add
cmps
mov
inc
es
sar
iret
jp
inc
jp
in
pop
imul
ficom
ror
adc
or
psadbw
imul
jbe
push
dec
mov
jns
inc
cmp
cmp
jl
cmp
mov
mov
popf
pop
mov
(bad)
sti
out
(bad)
adc
sub
sub
push
mov
sub
movs
mov
mov
imul
add
xchg
es
cmp
cmp
push
cmp
xor
or
add
jg
sbb
pop
fld
adc
dec
push
lock
adc
jne
fld
fdiv
pop
and
cmp
sub
add
jmp
cwde
sub
adc
inc
mov
or
pop
pop
cmp
or
lahf
in
push
mov
mov
push
push
push
push
sub
imul
xor
lock
sti
cld
je
mov
push
mov
jo
mov
mov
xor
and
push
push
mov
xor
fnstsw
mov
inc
and
sbb
xchg
sub
inc
adc
dec
adc
addr16
loopne
mov
ror
sti
(bad)
jg
cmp
mov
add
cmp
je
or
adc
xchg
add
test
jne
test
call
test
je
and
or
cmp
(bad)
cmp
adc
add
cmp
jne
cmp
inc
mov
xor
jae
push
lods
push
cmp
ja
or
scas
sbb
cmp
push
cld
xchg
mov
out
loopne
push
inc
ins
test
das
push
adc
push
sub
jle
pop
data16
adc
pop
ins
cld
punpckhdq
push
add
sti
xor
pop
adc
(bad)
dec
jp
jmp
mov
pop
push
stos
xor
sub
outs
jle
ret
outs
push
div
(bad)
in
jp
mov
mov
in
(bad)
and
inc
and
adc
adc
xor
push
lds
nop
xor
mov
mov
inc
loope
xchg
mov
add
xchg
or
pop
test
je
(bad)
pop
lods
pop
cmps
pusha
mov
and
in
pop
add
dec
pop
pop
pop
ret
lahf
add
fadd
add
aad
adc
add
add
into
das
adc
and
mov
loope
out
jp
movups
mov
loope
add
dec
mul
xor
adc
or
adc
jnp
or
add
cmp
fisttp
cmp
mov
and
lock
das
add
dec
jb
fdiv
add
add
inc
inc
std
mov
dec
add
leave
pop
or
mov
not
mov
mov
bnd
cmp
jne
cmp
cs
bound
jmp
popa
sub
xor
fild
jbe
or
fdivr
movzx
pop
push
dec
mov
jg
fbstp
add
call
jp
pop
ds
adc
movzx
imul
xchg
sbb
icebp
fisttp
cmp
add
add
out
test
call
inc
and
mov
cmp
jae
mov
aaa
lds
or
enter
jp
sub
jmp
cmp
fucomip
sbb
sub
or
mov
cmp
fadd
out
fidiv
pop
xchg
mov
sti
cmp
jb
pop
pop
jl
pop
push
mov
scas
or
inc
out
mov
dec
out
adc
mov
mov
mov
je
cmp
emms
dec
jge
test
add
or
jge
add
lock
jne
rol
add
add
jbe
ja
jg
inc
mov
mov
movzx
in
arpl
cmc
fadd
add
mov
mov
mov
jmp
test
jbe
mov
pop
xchg
mov
or
pop
sub
mov
adc
add
movs
or
cmp
inc
xchg
bound
lea
jbe
or
sbb
ror
leave
pop
push
and
out
out
add
jbe
jmp
stos
pop
mov
outs
push
add
in
add
mov
sar
mov
xor
add
(bad)
aam
push
dec
ret
add
sbb
test
fwait
xchg
mov
test
fild
fdiv
or
mov
cmp
psrlw
jne
add
sahf
inc
mov
(bad)
inc
in
sbb
jmp
mov
jge
lock
sub
mov
mov
daa
sar
in
daa
jmp
push
sub
and
(bad)
push
add
inc
add
dec
mov
out
inc
jo
add
jmp
push
xchg
mov
xchg
sbb
in
sbb
jae
and
mov
popf
je
and
aas
jmp
add
(bad)
cmp
sti
pop
scas
inc
adc
test
mov
mov
jg
or
push
jne
mov
jbe
cli
pusha
outs
mov
cdq
or
pop
jne
xor
adc
sub
mov
mov
pop
pop
jg
pop
ja
add
das
cmp
jne
pop
xor
pop
shl
nop
or
pop
dec
(bad)
(bad)
cmps
out
mov
dec
dec
dec
add
rol
jmp
ret
ins
jne
cmp
data16
xor
cwde
add
or
mov
and
jg
test
loopne
or
aas
jg
call
mov
or
aad
pop
push
(bad)
cmc
scas
fdivr
inc
sub
(bad)
pop
je
push
sub
pop
sub
adc
mov
and
aaa
in
pusha
xchg
mov
or
inc
hlt
jmp
add
pop
mov
inc
add
in
mov
or
out
mov
sbb
and
pushf
nop
js
test
push
dec
cmp
sbb
je
ins
lds
inc
or
xchg
pop
out
add
in
mov
sub
add
inc
sbb
xor
add
loope
push
xor
test
je
add
jmp
pop
mov
xchg
sub
or
add
xchg
cli
fld
cmc
fstp
das
push
je
ja
sbb
mov
test
je
out
(bad)
sbb
and
mov
test
je
jo
test
je
or
hlt
cs
mov
mov
mov
mov
imul
and
inc
mov
lahf
xchg
je
adc
fdivp
add
pop
and
stc
inc
mov
push
push
sub
(bad)
std
and
ror
loope
jl
sub
push
mov
mov
ja
inc
push
add
mov
sbb
add
add
adc
data16
or
in
sar
mov
cmp
sbb
or
sbb
push
adc
pop
movs
or
ror
pop
xor
call
stos
xchg
mov
mov
pop
aam
ds
inc
ret
ficom
push
push
icebp
mov
xor
ss
jo
in
add
sar
je
cmps
loope
call
test
je
xchg
fisttp
dec
mov
mov
mov
adc
or
jno
mov
or
jecxz
loopne
pop
and
and
or
lock
or
emms
mov
aas
or
(bad)
popa
pushf
aas
adc
mov
xchg
mov
sbb
pushf
dec
mov
aas
jae
call
aas
and
js
add
aas
out
add
add
or
test
dec
xor
adc
cmps
sub
or
add
jae
add
sub
push
leave
inc
sub
pop
and
pop
push
pop
in
das
stos
adc
push
and
sbb
pusha
dec
inc
fbld
adc
or
cmp
stos
pop
lea
and
and
pop
sbb
add
push
test
mov
aas
aam
popa
push
mov
lea
std
pmaddwd
(bad)
jecxz
dec
inc
add
mov
rol
sti
add
pushf
pinsrw
push
cld
mov
jmp
push
push
sub
jle
retf
or
pop
push
mov
cmc
jne
mov
rcr
or
pop
cdq
scas
sti
enter
inc
popa
dec
add
pop
xor
add
sbb
fist
mov
xor
or
add
sbb
or
inc
fild
dec
push
jae
movzx
add
(bad)
es
mov
push
lea
ja
(bad)
dec
(bad)
and
lea
push
push
(bad)
or
cmps
out
mov
sbb
sub
inc
add
push
push
and
sti
and
jmp
push
(bad)
fist
or
mov
mov
arpl
ror
inc
mov
add
inc
mov
push
or
(bad)
scas
pop
add
jae
je
test
dec
pop
addr16
pop
pop
and
push
jae
mov
(bad)
out
and
dec
add
inc
mov
mov
and
inc
mov
inc
pcmpeqw
jo
cmc
dec
xor
sub
sbb
pop
inc
xor
jbe
cmp
add
dec
ds
adc
mov
arpl
mov
jg
inc
(bad)
or
addr16
inc
dec
dec
dec
xchg
es
pop
(bad)
popf
mov
ds
mov
outs
out
cs
inc
add
push
push
imul
cmp
and
fnstsw
cmp
pop
mov
mov
outs
maxps
pusha
or
jo
and
cmp
jg
dec
pop
adc
sub
sub
das
push
xor
mov
xor
repnz
jns
scas
jmp
ins
inc
outs
outs
xchg
imul
dec
js
push
out
xchg
jae
push
adc
jnp
call
adc
cmps
inc
inc
push
inc
ret
pop
mov
std
inc
inc
mov
adc
add
pop
or
enter
aas
adc
ss
ja
nop
xor
inc
push
cld
push
nop
imul
pop
add
sub
fst
inc
jp
dec
in
inc
jno
cmps
(bad)
mov
cmp
(bad)
push
scas
push
lea
sbb
mov
add
pop
rol
dec
pop
ja
cmp
add
(bad)
fild
push
cmp
dec
and
add
cmp
jne
mov
test
cmp
push
int3
and
lea
or
push
cmp
add
push
push
jl
les
mov
xchg
sbb
mov
fs
add
out
cmp
rcl
add
dec
push
(bad)
je
push
inc
and
cs
or
push
pop
outs
add
mov
mov
mov
jne
es
push
pop
pop
add
rol
mov
pop
adc
cmp
mov
dec
or
adc
or
test
ds
push
mov
add
jne
call
daa
and
lahf
adc
sbb
mov
inc
pop
sahf
push
push
sub
jmp
loope
idiv
test
popa
mov
fnstenv
inc
push
sar
push
xor
pusha
andps
inc
ins
dec
jne
fldenv
pop
inc
cmp
inc
and
jb
inc
push
lods
push
inc
push
int3
lds
inc
pusha
ret
mov
push
inc
jo
add
rcr
ret
inc
jo
mov
adc
hlt
pop
ss
dec
outs
sbb
cdq
add
in
mov
fs
jnp
dec
push
dec
jno
lods
ins
mov
xchg
dec
jb
push
pand
cmp
add
test
jne
push
mov
sbb
pop
pop
jmp
xor
inc
fnsave
mov
ss
test
je
test
jne
mov
jl
inc
in
adc
xchg
pop
ret
push
fadd
push
out
sbb
inc
aaa
push
cld
stos
push
xor
mov
scas
pop
call
push
inc
hlt
(bad)
adc
add
mov
or
inc
jb
jbe
and
xor
or
retf
ja
sub
sbb
jbe
out
jno
cmp
pop
outs
cmp
inc
ret
dec
je
in
add
add
push
dec
(bad)
pop
or
sti
fwait
js
out
or
mov
xchg
mov
fwait
jle
mov
ret
or
cmp
jle
push
inc
mov
jbe
add
xchg
mov
dec
mov
push
adc
inc
cmp
pop
stos
(bad)
shr
jmp
adc
enter
cmp
je
adc
ins
add
push
push
jmp
and
mov
push
pop
jp
inc
dec
mov
add
je
test
je
bound
push
push
sub
xchg
aaa
push
cmp
mov
nop
je
fist
or
test
aaa
test
aam
fisub
mov
inc
ret
mov
add
outs
je
cmp
pminsw
js
hlt
and
lea
jne
mov
dec
jo
fadd
mov
pop
sbb
rcr
fcomp
xchg
cmp
adc
dec
(bad)
gs
adc
xor
cmc
sbb
mov
in
jbe
mov
mov
js
jle
cmp
js
sub
add
add
clc
add
push
pop
mov
shl
mov
mov
into
mov
test
sbb
cs
jne
repz
iret
add
jg
xchg
xor
push
and
mov
inc
mov
jecxz
pusha
sub
mov
push
jb
add
ror
push
xchg
dec
nop
test
xor
std
lahf
and
mov
test
je
mov
mov
mov
push
add
outs
jo
ja
mov
dec
not
xchg
adc
add
add
lock
jo
or
pop
es
mov
dec
jle
add
test
stos
add
adc
push
or
dec
je
adc
jae
adc
jo
int3
outs
fist
cmovo
inc
out
add
movs
inc
fdiv
movzx
xor
sub
inc
(bad)
inc
dec
push
out
dec
mov
xchg
xchg
movs
adc
rcl
or
out
sub
scas
test
add
xchg
imul
xor
mov
shl
mov
mov
mov
mov
cmp
sbb
in
pop
sbb
mov
jnp
out
clc
push
(bad)
jns
je
mov
add
sub
loopne
out
jne
xchg
aam
int3
lahf
cmp
gs
jg
and
cmp
push
inc
push
and
cmp
dec
sbb
jp
dec
sbb
pop
sbb
mov
xor
clc
cli
push
xor
xor
lock
sbb
jmp
xchg
mov
adc
pop
nop
test
inc
popf
jmp
adc
adc
push
inc
inc
cli
inc
adc
add
into
inc
mov
mov
cmp
jmp
or
sahf
jp
and
and
push
and
push
ss
and
jne
mov
and
inc
es
out
fild
sbb
add
and
xlat
rcr
xor
xor
and
mov
pop
pushf
jnp
cmp
das
pusha
and
idiv
or
cmp
jg
test
shl
fcom
call
sub
sub
sub
sub
pop
add
sub
and
sbb
iret
cmp
mov
out
xor
jb
je
push
jae
xor
sub
adc
pop
dec
or
inc
push
dec
out
jns
imul
sub
push
jp
adc
jl
fmul
mov
cmp
cmp
adc
adc
inc
and
cmc
and
push
mov
mov
sbb
add
mov
push
mov
and
and
mov
inc
add
cmps
sahf
imul
nop
xor
and
mul
test
pop
push
xor
pop
(bad)
jl
sbb
xchg
jge
cmp
push
fadd
jb
sbb
xlat
sbb
and
sub
imul
adc
mov
(bad)
shl
dec
and
cmp
jne
or
cmp
mov
mov
daa
fsubr
lds
dec
(bad)
mov
sub
sbb
cmp
lahf
mov
sbb
inc
cmp
call
fs
pop
mov
sbb
push
mov
push
dec
lock
cwde
imul
data16
es
adc
sbb
dec
sub
pushf
fld
ds
bound
and
inc
ins
pop
pop
add
inc
and
inc
push
xchg
push
lods
das
inc
xchg
push
jb
pop
cld
pop
inc
cmp
and
inc
je
pop
adc
pop
or
jnp
sahf
dec
pop
sub
jmp
out
adc
ror
adc
dec
jae
popa
cwde
lock
pop
bound
xor
xor
inc
jno
jmp
mov
mov
test
je
cmp
pusha
fs
or
fist
push
push
push
je
sahf
cmp
xor
mov
adc
arpl
push
int3
mov
mov
xchg
fs
inc
scas
shl
and
push
inc
scas
xchg
fs
es
data16
sub
es
inc
nop
mov
pop
xchg
out
push
(bad)
or
xor
xor
and
out
pop
and
and
sti
cdq
sub
adc
test
and
pop
inc
mov
pop
or
test
test
add
sub
mov
test
jle
pop
inc
xor
outs
mov
pop
xor
(bad)
jl
mov
fld
je
mov
jnp
sub
js
in
and
add
mov
icebp
lea
test
ret
shl
sub
int3
ret
add
rcl
imul
imul
inc
add
mov
loop
or
lods
loopne
and
pop
pop
mov
push
lock
iret
pop
rep
mov
pop
pop
add
aas
mov
pop
mov
pop
outs
nop
cmp
push
push
adc
xor
test
ret
mov
je
mov
add
shr
push
xchg
jge
rol
push
xor
pop
xchg
test
je
push
mov
ud2
cmp
lods
xor
fcomp
sbb
mov
sub
and
mov
mov
jne
sub
xchg
mov
jp
sahf
aas
add
dec
out
mov
fldenv
inc
and
add
fld
fmul
fsub
sbb
push
add
push
mov
in
clc
push
cmp
jne
or
fstp
inc
neg
pop
or
add
adc
xchg
in
pusha
ins
mov
inc
sbb
sbb
push
jo
(bad)
adc
jge
push
mov
pusha
push
cmp
xchg
(bad)
aaa
mov
inc
sbb
jmp
add
adc
(bad)
jmp
add
add
add
mov
cmp
jae
mov
mov
adc
jo
je
and
push
adc
repz
lea
mov
mov
mov
std
jg
fiadd
pop
test
je
mov
mov
xor
mov
or
mov
in
pop
adc
inc
je
sbb
test
mov
popa
sbb
pop
inc
je
rol
add
push
jne
addr16
jmp
cmp
add
fdivr
or
movs
sub
or
call
push
sbb
shl
arpl
(bad)
sti
test
je
add
xor
test
jne
adc
call
or
and
mov
cmp
jae
mov
mov
mov
inc
sbb
sbb
imul
add
add
scas
add
aas
sbb
add
inc
or
jae
loopne
push
xor
mov
psubb
and
je
sub
jne
pusha
xchg
into
sbb
shr
add
lea
and
jmp
rol
xchg
push
adc
or
(bad)
dec
jmp
jecxz
cmp
mov
jne
xor
sub
jmp
add
or
mov
jge
and
add
in
std
out
je
test
jbe
mov
dec
add
fild
add
add
jmp
nop
ret
or
dec
add
stc
and
rol
cmp
ja
nop
or
or
cld
mov
add
add
adc
mov
mov
add
cli
dec
or
in
mov
call
add
test
or
mov
test
xchg
and
sub
test
(bad)
push
xor
mov
add
add
in
jmp
mov
jmp
movzx
sub
mov
and
idiv
or
push
and
je
movzx
sbb
mov
shl
jo
add
xor
mov
jl
adc
jg
mov
mov
add
cmp
jl
dec
push
cmp
sbb
clc
push
ja
inc
movzx
outs
inc
push
test
push
mov
test
in
sub
pop
or
jmp
in
add
mov
pop
inc
adc
daa
mov
je
icebp
sub
clc
mov
pop
sar
and
or
test
jp
dec
shr
add
and
pop
mov
jne
cmp
mov
jmp
fild
dec
add
neg
(bad)
fild
add
outs
(bad)
cmp
jb
xor
mov
iret
fsubr
addr16
movzx
add
gs
loopne
(bad)
mov
movzx
shr
cmp
mov
mov
jb
inc
jbe
sar
nop
pop
fwait
inc
add
repz
inc
push
xor
(bad)
mov
cmp
jne
movzx
imul
and
jg
test
push
or
enter
mov
nop
mov
mov
icebp
push
mov
icebp
pop
mov
shl
inc
cs
or
call
add
dec
or
push
push
jne
xchg
cmp
mov
jne
add
enter
mov
jp
add
out
adc
add
shl
sbb
or
jno
fistp
adc
pop
pop
ret
dec
push
inc
mov
jmp
xchg
sbb
(bad)
dec
inc
out
push
aad
or
ret
push
push
jmp
sahf
or
nop
or
dec
rcl
or
add
dec
test
fcomp
(bad)
sub
mov
cdq
cmp
mov
add
in
jbe
add
inc
ret
sub
mov
test
loope
les
jg
mov
pop
xchg
and
test
jbe
into
xor
or
sub
sub
mov
inc
in
lock
pop
push
and
mov
push
push
jmp
retf
adc
paddsw
mov
adc
push
pop
ret
hlt
jne
retf
cmp
xchg
xor
fcomp
std
or
jecxz
pusha
add
scas
cmp
les
inc
sub
mov
push
jmp
push
mov
shr
test
push
call
aaa
mov
lahf
mov
jne
test
pop
jecxz
fisttp
lea
je
cmp
jbe
lea
adc
out
sar
mov
jne
pop
mov
lea
pop
mov
(bad)
mov
add
pop
ret
test
jbe
mov
sub
sbb
adc
adc
jns
jl
cld
jo
add
je
xor
or
adc
test
les
pop
push
or
push
ja
(bad)
sub
add
mov
mov
movzx
(bad)
into
xor
mov
adc
jb
inc
cmp
sub
test
test
ret
add
retf
fcomp
(bad)
movzx
jbe
fcomi
adc
mov
push
out
mov
mov
adc
push
shr
pop
lea
pusha
pop
mov
add
and
fadd
mov
jae
xchg
dec
adc
jmp
fs
cdq
(bad)
push
mov
lea
lea
lea
je
icebp
xchg
imul
adc
into
cmp
stc
jle
add
or
pop
jmp
pop
into
mov
xor
(bad)
out
add
adc
lahf
sbb
addr16
fcomp
shl
pop
push
adc
loopne
xchg
lahf
lea
icebp
loopne
fld
test
inc
or
cmp
stos
and
push
mov
cmp
jne
jb
jne
mov
test
jne
rol
mov
jne
test
lock
adc
inc
jl
add
les
retf
sbb
cmp
movs
test
mov
xchg
lods
cmp
mov
xchg
data16
cmp
movzx
push
nop
adc
mov
dec
rcl
push
out
add
pop
cmp
jne
sti
mov
jno
xchg
mov
sbb
imul
fisttp
jbe
movs
sub
pushf
push
(bad)
in
aaa
jge
in
mov
cmps
add
inc
mov
sub
hlt
dec
push
or
jmp
cmp
pop
pop
xor
(bad)
pop
mov
pop
cmps
mov
pusha
push
pop
rol
leave
xor
dec
or
rol
push
std
xchg
cmp
add
jne
sbb
stos
sub
push
movzx
xchg
mov
or
cmp
mov
sub
jne
add
sub
test
fadd
cmp
cmps
fld
(bad)
adc
fadd
outs
movzx
ja
mov
mov
call
ja
mov
sahf
add
retf
jne
cmp
jne
mov
in
dec
(bad)
jmp
and
ror
movzx
movzx
imul
imul
stos
or
sti
mov
mov
mov
and
jno
jne
jo
(bad)
(bad)
xchg
repnz
mov
sub
push
mov
pop
jnp
ror
sti
push
cmp
jne
mov
mov
jmp
ja
mov
adc
test
xchg
add
add
shr
mov
inc
inc
rol
ins
and
add
ins
test
sbb
and
loopne
sub
(bad)
mov
mov
xor
mov
cmp
inc
mov
add
inc
sti
mov
mov
xor
cmp
mov
ja
sar
xor
ret
imul
jl
mov
dec
mov
and
(bad)
ja
or
sahf
shr
shr
movzx
mov
test
inc
inc
add
inc
lock
jl
add
scas
std
add
mov
shr
shr
mov
movzx
imul
lahf
loope
mov
gs
out
mov
or
mov
out
test
mov
fsub
adc
jo
jnp
je
and
test
mov
pop
cmp
add
setg
pop
(bad)
cli
xor
mov
push
add
dec
jg
clc
out
std
mov
sbb
cmp
(bad)
sub
jne
cmp
je
jg
mov
outs
inc
and
(bad)
aad
movzx
int
test
and
shr
call
jne
mov
push
sbb
inc
add
or
jne
test
jne
or
nop
aam
cld
fwait
add
aad
mov
mov
jbe
jae
inc
xor
movzx
jmp
add
(bad)
mov
out
jno
inc
sbb
add
cmp
jb
sti
add
fdiv
movzx
imul
gs
lds
inc
jo
inc
mov
mov
xchg
mov
add
shl
ins
(bad)
jne
pop
cdq
hlt
mov
leave
cdq
or
stos
mov
out
pushf
ret
aad
syscall
add
retf
jmp
retf
ja
imul
ror
scas
aad
mov
call
fiadd
fld
jmp
mov
mov
mov
add
data16
cmp
sub
ins
(bad)
scas
jecxz
loope
and
(bad)
and
sub
adc
adc
xor
pop
and
and
sbb
add
sti
mov
cli
(bad)
jmp
popa
cld
mov
mov
xor
cmp
mov
mov
jne
cmp
jne
mov
mov
mov
movzx
movzx
mov
movzx
mov
pop
retf
into
imul
int3
int
sbb
jmp
and
mov
mov
movzx
mov
mov
ret
ins
and
cwde
loopne
inc
fild
jne
loopne
inc
pop
ror
xchg
sbb
ja
add
inc
mov
loope
call
clc
adc
mov
mov
cmp
or
push
je
ret
clc
ret
inc
in
jmp
idiv
add
movzx
cdq
and
aaa
fwait
mov
ret
add
mov
loope
jne
mov
inc
or
mov
inc
sar
dec
or
inc
or
mov
adc
loopne
push
adc
inc
and
add
inc
std
das
(bad)
sub
sbb
pop
pop
adc
push
add
push
mov
pop
add
ret
int3
sub
xchg
(bad)
inc
test
xor
je
mov
test
ret
loopne
je
jecxz
packuswb
or
and
and
and
std
paddd
and
or
inc
mov
mov
or
push
(bad)
ja
add
sub
hlt
popa
out
ins
adc
pushf
mov
jmp
(bad)
sbb
aaa
pusha
or
push
mov
mov
shr
and
dec
and
or
push
retf
jg
add
clc
mov
and
mov
mov
shl
or
mov
adc
push
test
jne
dec
pop
jmp
sub
adc
int
mov
test
outs
sub
add
jp
add
ror
mov
loop
call
jge
mov
mov
jnp
cmp
jne
mov
cmp
and
jns
or
xor
fadd
add
or
fs
xor
add
mov
sti
shr
mov
shl
or
test
mov
scas
pop
sahf
icebp
dec
sub
test
test
shl
test
pop
mov
sbb
cmps
pop
or
pop
add
outs
pop
lar
pop
add
test
adc
cmovo
adc
xchg
pop
xadd
pop
xor
pop
sbb
ror
enter
mov
adc
jnp
mov
ret
mov
or
jnp
and
(bad)
and
and
and
je
stc
sub
icebp
xor
je
outs
push
push
and
inc
xor
fcomip
fldenv
pop
or
or
dec
leave
mov
mov
jmp
jge
in
xor
je
nop
aaa
adc
push
push
or
dec
jne
das
and
out
test
mov
je
je
add
cmp
cmps
fist
adc
mov
mov
cli
dec
jmp
jmp
or
(bad)
(bad)
inc
cdq
push
or
jmp
movzx
mov
shr
movzx
mov
mov
ins
or
mov
in
jne
jne
push
mov
jne
xor
arpl
pop
adc
js
shl
add
stos
or
(bad)
out
mov
or
add
inc
push
shl
push
jnp
sbb
rcl
je
push
push
into
in
sbb
pushf
cwde
jg
cmp
push
adc
add
pop
inc
dec
std
ja
jne
or
or
jne
movzx
mov
dec
mov
pusha
test
jmp
leave
movzx
push
adc
jnp
or
or
pop
lods
sub
sbb
cmp
mov
cmp
jp
aas
addr16
xchg
dec
call
jge
mov
mov
add
push
bound
movs
rcl
mov
push
jae
mov
test
imul
out
inc
test
out
xlat
xor
mov
push
add
push
jmp
sub
loopne
sbb
ins
ds
inc
push
add
add
fdivr
sub
mov
add
movs
popf
dec
add
rcl
mov
clc
(bad)
(bad)
out
cmp
mov
jmp
movzx
movzx
mov
shr
movzx
mov
mov
dec
bswap
dec
call
mov
fdivr
sbb
pop
pop
add
add
add
sti
jmp
sub
push
nop
cmc
xchg
test
js
jo
mov
movzx
mov
inc
add
adc
push
add
ds
xor
adc
js
push
les
add
push
add
pop
mov
push
pop
mov
or
xchg
out
add
aad
rol
and
mov
mov
outs
mov
mov
add
dec
or
cmp
rol
je
and
inc
mul
ret
push
es
les
xchg
inc
add
inc
jne
jg
outs
enter
jmp
test
jne
or
mov
jmp
ud0
aam
mov
and
sub
imul
imul
lea
out
mov
fild
add
sar
ret
mov
arpl
loopne
nop
inc
pop
dec
jne
into
rol
(bad)
xchg
add
jne
mov
jmp
test
cs
(bad)
and
mov
jmp
jbe
sar
xor
bound
outs
xor
xor
add
popf
sub
loop
mov
mov
mov
xchg
inc
and
jp
ret
rol
sbb
jne
sbb
bound
push
add
ja
call
mov
inc
dec
jne
adc
cmc
(bad)
pop
cmp
push
mov
adc
mov
jl
add
mov
dec
ficom
out
pop
enter
ins
stos
pop
sub
int3
lea
mov
adc
adc
sub
xchg
out
test
or
dec
mov
jae
inc
jecxz
clc
mov
inc
add
dec
inc
mov
loop
or
sub
add
jno
xor
repnz
sbb
ret
or
inc
std
lock
sti
mov
jmp
into
or
mov
or
jbe
fist
(bad)
xchg
shl
mov
inc
jecxz
imul
lea
out
mov
cmc
xor
mov
mov
shl
jbe
add
jne
pop
int
mov
inc
jns
dec
cmps
ins
and
rol
push
call
cmp
cmp
inc
push
jmp
clc
lahf
scas
add
pop
and
lea
adc
xor
icebp
or
jge
inc
add
movzx
pop
pop
mov
pop
movzx
ja
push
add
movs
sub
movzx
outs
imul
inc
add
inc
push
inc
push
lahf
movs
sub
mov
sub
push
sar
mov
enter
pushf
sub
jmp
ffree
fnsave
(bad)
jmp
add
in
cmp
sti
or
movzx
or
fisttp
add
ds
(bad)
add
xor
fdiv
out
mov
cmp
lea
push
xchg
sti
pop
popa
jmp
stc
jb
push
push
inc
es
cmp
(bad)
adc
dec
jne
iret
cmp
pop
jo
cmp
and
add
push
out
jnp
inc
dec
inc
xor
popa
cmps
pop
sub
cmc
add
sub
or
loopne
jmp
out
or
and
pop
adc
std
mov
and
sahf
mov
(bad)
cli
mov
sub
aad
jmp
adc
loope
pop
aaa
add
test
xor
cs
dec
xchg
xchg
dec
or
add
sbb
fdivp
mov
jb
add
push
in
add
add
mov
add
mov
retf
rcl
or
mov
push
dec
outs
push
push
inc
les
push
shr
sbb
pop
nop
mov
bnd
sbb
push
sar
test
jne
xor
mov
mov
(bad)
xchg
or
mov
xor
sub
aaa
icebp
adc
add
retf
movzx
in
jb
sbb
jmp
imul
mov
add
xchg
mov
aas
dec
scas
fisttp
lock
iret
lahf
add
mov
movzx
sbb
sqrtps
shr
arpl
and
cmps
sub
pop
shrd
jmp
mov
into
test
pop
add
push
pop
and
xor
mov
neg
shl
pop
imul
ror
into
fdivr
test
adc
jecxz
mov
imul
or
adc
in
ret
mov
sbb
push
fisttp
xchg
adc
xor
adc
pop
jg
dec
rcl
cmovp
(bad)
(bad)
dec
add
cmp
jne
lea
mov
lea
mov
mov
mov
das
mov
test
ror
addr16
inc
out
push
aam
pop
ja
pop
rol
int3
push
enter
(bad)
test
add
cld
pop
inc
stos
fstp
push
movzx
xchg
adc
mov
mul
jl
sti
mov
and
sbb
movzx
shl
jo
pop
mov
mov
cmc
sbb
scas
sub
mov
mov
add
scas
retf
lea
loope
es
and
lods
retf
movzx
neg
fucomip
adc
scas
out
imul
cs
sub
jge
lea
ret
add
call
inc
ins
pop
pop
mov
add
cmp
outs
or
add
mov
push
or
mov
movzx
jb
retf
mov
les
mov
jg
adc
mov
scas
pop
push
mov
(bad)
fstp
rcr
stos
inc
add
inc
add
inc
add
add
adc
sub
add
sub
add
mov
cmp
add
add
outs
add
add
push
(bad)
out
jg
ja
test
je
dec
or
dec
or
jg
call
and
call
mov
jbe
sahf
push
outs
movzx
lock
ins
adc
add
or
sbb
add
sbb
es
cmp
add
ret
inc
jnp
mov
inc
mov
inc
push
mov
mov
xchg
inc
or
mov
popa
mov
jne
addr16
xchg
mov
outs
test
movzx
mov
cmp
test
in
das
or
popf
or
xor
inc
ret
scas
mov
shr
scas
push
out
cmp
or
xchg
fsub
arpl
inc
cwde
xchg
adc
inc
outs
call
sbb
jne
outs
push
jbe
or
shr
add
inc
std
dec
mov
mov
and
lea
add
fiadd
fisttp
fisttp
or
or
mov
lea
fdivr
mov
add
add
cmp
jle
out
mov
sar
or
or
shl
fbld
cmp
and
or
(bad)
push
push
into
or
scas
cmp
test
sbb
loope
or
jg
inc
push
mov
adc
adc
test
sbb
jns
push
xor
inc
and
sbb
cld
dec
aam
add
dec
test
mov
jbe
shr
add
adc
xchg
add
(bad)
(bad)
call
int
fld
sti
add
(bad)
jnp
or
mov
and
or
es
call
or
test
cmp
sbb
div
popf
mov
std
and
(bad)
sub
test
mov
test
and
add
mov
or
movs
mov
aas
nop
pop
mov
cdq
mov
adc
out
int3
add
cmp
mov
jne
lds
add
push
not
push
jae
out
push
sub
cmp
je
jmp
or
loope
mov
and
lea
shr
add
enter
add
add
test
lea
jbe
out
dec
adc
pop
or
jnp
mov
adc
jne
scas
daa
lea
xor
dec
rol
add
rcl
mov
dec
ret
pop
test
add
inc
(bad)
or
out
add
jne
rcr
rcr
xchg
inc
jg
std
add
mov
nop
jmp
or
mov
cmp
adc
loopne
push
and
lea
dec
inc
(bad)
call
je
adc
ins
loop
jbe
and
mov
(bad)
push
mov
add
or
mov
mov
xor
add
xor
jae
sbb
add
and
fild
bound
add
jmp
(bad)
mov
adc
jae
pop
pop
call
inc
or
push
icebp
(bad)
stos
pop
pop
ret
lea
adc
jo
and
pop
out
jle
jg
mov
lea
push
push
add
pop
mov
or
mov
sub
push
call
cmps
imul
add
adc
sbb
push
mov
push
jne
or
out
adc
push
or
pushf
jp
call
jae
gs
push
test
push
mov
rol
push
inc
mov
enter
loope
add
lea
mov
shr
mov
sub
in
add
xchg
push
adc
xchg
sbb
mov
mov
shr
xchg
mov
cmp
mov
mov
xor
add
cmp
jne
mov
ja
jmp
add
loopne
add
lea
jle
lea
mov
(bad)
out
loopne
(bad)
mov
add
rol
std
add
test
lea
popa
cmps
mov
sti
mov
xor
adc
jge
add
add
ja
jmp
jecxz
test
sub
aad
out
shr
cs
test
push
xor
nop
add
fistp
fstp
mov
xchg
je
add
push
dec
adc
je
sub
mov
or
mov
add
out
xlat
fist
jle
dec
mov
outs
(bad)
sbb
cmp
jne
add
add
dec
add
inc
mov
jb
sti
push
(bad)
fucomp
push
cmp
jne
sub
lea
inc
push
(bad)
jmp
sar
jne
cmp
jne
mov
sub
add
cmp
js
jmp
inc
jmp
add
loopne
les
mov
or
or
or
aas
push
aaa
aas
shl
(bad)
pop
pop
pop
mov
pop
mov
adc
push
fild
(bad)
adc
jne
sub
mov
ror
test
fist
sbb
rcl
movzx
inc
add
push
push
mov
mov
and
push
mov
push
or
lea
dec
std
mov
mov
or
inc
(bad)
jne
or
cmp
jne
adc
add
and
mov
mov
or
mov
(bad)
jge
add
push
ins
pusha
(bad)
sbb
mov
out
test
pop
idiv
mov
add
repz
xlat
or
add
movzx
cmps
mov
inc
and
adc
mov
add
push
adc
inc
lock
fucomp
xchg
jne
mov
cmp
jne
or
cmp
jne
adc
push
(bad)
jne
in
sar
adc
push
push
adc
fwait
jp
inc
adc
es
bound
or
pop
jge
gs
push
jmp
or
mov
enter
xor
mov
sbb
lds
or
cmc
pop
dec
push
mov
mov
push
push
(bad)
push
jo
cwde
(bad)
fwait
mov
call
jle
fisttp
dec
lea
mov
rol
add
std
(bad)
(bad)
in
push
and
rol
add
rol
add
mov
cmp
(bad)
into
ret
nop
idiv
jle
stc
sbb
xchg
inc
or
mov
loope
bound
jb
stos
imul
into
push
inc
stc
pop
or
and
pop
adc
jne
pop
xchg
in
inc
nop
lahf
and
popf
add
lahf
adc
mov
add
lock
add
sub
jmp
(bad)
mov
test
je
lea
mov
jbe
add
cmp
mov
adc
stc
lock
sub
inc
nop
iret
jg
sbb
or
push
jge
aas
cmp
xchg
inc
ja
fwait
sub
sbb
and
jne
fld
loop
adc
add
mov
and
push
call
fst
jge
xor
mov
pop
sub
and
fmul
adc
push
in
push
or
adc
sbb
retf
xor
jg
cmp
test
je
test
fadd
aas
inc
xor
aaa
add
or
jg
cmp
add
xchg
fimul
mov
call
jne
sbb
push
cmps
xor
popf
xor
adc
shl
in
ret
test
mov
jl
mov
mov
jge
cmp
jle
or
sub
mul
or
jle
cmp
retf
jle
mov
add
add
call
jno
je
cmp
jge
rcr
xchg
adc
jmp
cmp
jle
stos
adc
or
ret
push
loopne
cmp
addr16
pusha
adc
movzx
or
sar
ror
out
xor
and
adc
popa
inc
adc
dec
aam
sub
inc
out
add
test
test
jle
mov
jae
xchg
sbb
call
cmp
jl
jbe
std
jmp
and
shl
xor
xor
test
mov
shr
and
jae
jge
fadd
(bad)
shr
jp
or
sbb
cmovnp
shr
jle
dec
and
push
and
ins
and
fbstp
and
inc
mov
sub
or
inc
(bad)
add
adc
ror
inc
es
sbb
jo
cmc
addr16
mov
shr
data16
mov
cmc
mov
dec
mov
jbe
mov
fdivr
rcr
arpl
sbb
mov
and
femms
in
cmps
add
add
test
cmp
(bad)
push
shr
push
and
add
(bad)
push
add
push
retf
test
inc
nop
mov
mov
mov
mov
mov
add
mov
mov
add
leave
jge
inc
fmul
sti
daa
mov
adc
test
add
mov
dec
xor
(bad)
outs
jl
in
pop
and
jl
leave
add
dec
movs
xchg
xor
fcom
push
(bad)
xlat
mov
cmp
xor
ror
ins
rcl
sub
sub
fs
mov
push
shl
and
and
adc
inc
ja
sub
adc
xor
shl
inc
inc
js
inc
mov
lods
mov
call
fisubr
sub
sar
cmp
rol
and
mov
mov
mov
push
jne
cmp
xor
or
jne
loop
cmp
aas
inc
test
pandn
fisttp
add
inc
dec
inc
pop
inc
outs
call
jne
pop
ret
jle
cmp
push
dec
jmp
cmp
out
punpckhwd
push
push
add
das
cli
out
(bad)
push
fisttp
mov
xor
mov
mov
add
cmps
ss
dec
xchg
ror
mov
mov
add
aam
mov
mov
pop
dec
add
out
add
pop
cld
aas
jno
out
in
or
mov
movzx
push
xchg
adc
add
sub
shl
lds
and
mov
ja
cmp
out
sub
scas
pcmpeqw
mov
or
ja
adc
cmps
adc
lds
je
inc
icebp
ret
add
test
cmp
sbb
mov
aam
out
mov
mov
jmp
push
rol
neg
add
adc
xchg
ja
test
test
mov
xor
or
push
cmp
mov
push
sti
mov
mov
bound
rcl
adc
add
xor
in
bound
jmp
or
imul
aas
out
xor
xor
mov
fisttp
cmovb
or
jb
ins
daa
cmp
lea
mov
or
add
cwde
loope
mov
addr16
mov
add
or
sti
jo
movzx
pop
je
sub
add
movzx
inc
jle
ror
mov
add
xchg
sti
sbb
cmp
mov
jl
jno
adc
dec
inc
adc
mov
mov
ret
pop
aam
push
sub
push
cmp
test
je
cmc
fmul
mov
xor
xor
sub
cli
aas
fdivr
movzx
mov
or
je
dec
cmp
cmp
jl
test
jne
and
sub
into
test
push
inc
stos
call
ds
popf
mov
and
test
ret
js
retf
add
add
mov
and
push
outs
or
add
mov
xor
popf
movzx
sbb
aas
cld
sub
xchg
mov
movzx
shr
std
mov
mov
sbb
mov
or
sub
fisubr
pop
add
sub
daa
mov
or
adc
icebp
sub
push
ss
adc
shl
dec
inc
jge
add
jnp
pop
or
outs
and
rcr
(bad)
dec
and
mov
rcr
mov
and
in
xor
mov
das
dec
ficom
dec
push
ins
xchg
je
adc
add
daa
dec
push
ss
xchg
cwde
adc
sub
ja
add
mov
xor
fs
adc
sbb
arpl
push
in
jle
xchg
cmp
jmp
popa
or
cmp
jge
cmp
xlat
cmp
je
pop
add
mov
inc
(bad)
mov
mov
mov
(bad)
call
pop
ret
out
movzx
movzx
mov
jg
syscall
movs
sub
imul
push
ror
scas
jmp
add
movzx
mov
shr
push
cmps
mov
and
add
push
xor
dec
add
push
and
push
jb
dec
enter
adc
xor
push
movs
adc
xor
scas
(bad)
mov
adc
mov
dec
mov
push
jmp
cld
aas
mov
fcmovnb
add
std
jl
inc
mov
sub
sub
adc
add
fs
xchg
and
and
fnsave
sub
enter
sbb
jne
pushf
sbb
push
mov
and
jno
into
pop
ja
ja
fldenv
sub
dec
fmul
xchg
leave
jne
xor
fadd
add
and
jae
mov
popa
xor
xchg
ds
mov
cmp
idiv
out
push
inc
cmp
cmp
jne
and
mov
mov
push
inc
adc
inc
inc
inc
push
(bad)
cwde
jnp
adc
sub
dec
mov
and
cld
movzx
jmp
or
mov
(bad)
stos
fdivr
jmp
dec
inc
push
loope
iret
and
xor
test
in
lock
jge
xor
inc
pop
adc
out
mov
je
out
test
and
fadd
jnp
and
mov
inc
xchg
add
daa
icebp
add
leave
jle
mov
les
xchg
mov
cdq
cmp
adc
mov
movups
pop
lock
jl
leave
jns
sbb
jne
inc
scas
push
movzx
popa
test
fnsave
mov
sar
jp
ror
mov
and
jmp
jno
iret
mov
add
test
jne
mov
lea
call
mov
(bad)
out
sub
inc
cwde
push
xchg
das
or
mov
and
mov
imul
punpckhbw
imul
lea
ror
ins
and
leave
mov
cmp
pop
(bad)
and
sbb
cmp
add
mov
xor
(bad)
mov
jmp
jmp
(bad)
outs
sbb
sub
test
pop
or
sbb
adc
sub
cdq
ins
cmc
or
movzx
or
fmul
push
shr
sbb
cmp
ja
jecxz
jl
cmp
jle
xor
mov
out
fstp
(bad)
or
or
inc
(bad)
in
test
xlat
jbe
xor
sar
mov
retf
shr
jmp
sbb
movs
inc
adc
fisttp
shr
lea
mov
enter
fistp
add
ret
nop
repnz
add
inc
add
inc
add
ds
add
mov
add
cmps
push
inc
add
push
xchg
cmp
mov
or
jne
jmp
push
push
push
lea
push
es
lds
jle
xchg
lea
push
fsub
not
inc
sbb
push
push
add
fist
or
adc
out
sub
cmp
rcr
js
mov
aas
push
movs
push
push
add
push
lea
cmp
or
les
inc
mov
push
mov
je
sub
xor
pop
jmp
mov
add
test
ja
push
lea
add
loope
cli
or
inc
ins
and
iret
xor
or
add
push
push
lea
je
push
pusha
je
pusha
jnp
or
mov
xchg
in
inc
test
je
aad
stos
fistp
dec
mov
add
push
les
dec
sub
add
cmp
push
cmp
inc
jno
add
fdivrp
je
test
jne
mov
and
div
je
std
jne
mov
mov
pop
add
pop
mov
xchg
sub
pusha
jo
xchg
popa
push
mov
dec
push
mov
adc
dec
sbb
push
push
push
pop
sbb
test
mov
call
fcomip
les
je
test
jns
jge
or
aaa
outs
je
xchg
iret
int
jns
jno
(bad)
lahf
jo
sbb
add
sbb
repz
jg
sahf
mov
ins
xor
jl
je
mov
pop
fld
dec
mov
cmp
sub
pop
and
fnsave
bound
push
out
invd
push
repz
xchg
and
daa
mov
js
loope
cmps
xchg
mov
jb
mov
jnp
cld
and
adc
push
arpl
into
add
or
(bad)
rcl
or
jno
je
mov
adc
cmp
push
push
lods
add
sbb
scas
popf
sbb
mov
int3
push
add
jne
adc
lods
sbb
shr
adc
inc
jle
movs
pop
or
push
pop
mov
test
push
add
shl
inc
gs
std
bound
add
push
xor
inc
movs
adc
iret
dec
adc
xor
adc
iret
pop
adc
dec
adc
cli
and
mov
sub
dec
jno
imul
and
das
test
das
pushf
xor
fidiv
xlat
cld
out
dec
inc
push
jmp
mov
std
fld
cmp
loopne
push
mov
xchg
aad
adc
push
add
cld
adc
sbb
push
or
or
add
sbb
adc
loopne
lock
sbb
in
cmp
call
push
mov
and
out
add
adc
dec
cmp
(bad)
jg
mov
mov
mov
sub
sub
lea
loopne
sbb
mov
jle
outs
mov
js
mov
mov
jno
cmps
scas
sub
mov
or
je
mov
cmp
sbb
arpl
rcr
jge
mov
cdq
cmp
mov
loopne
cli
jg
inc
ds
cmp
dec
jae
movzx
out
(bad)
ja
mov
iret
shl
push
add
mov
add
movzx
sub
push
mov
cmp
and
mov
movzx
shr
aaa
fcom
sub
mov
adc
push
test
jne
push
add
push
fucomp
mov
mov
shr
je
mov
add
cld
and
jmp
jne
push
popa
mov
sbb
rol
sbb
je
cmp
jae
movzx
in
adc
pop
add
add
sahf
enter
sub
and
adc
jne
add
adc
push
clc
loopne
push
pop
aaa
cmp
and
fadd
mov
add
mov
test
je
retf
cmp
fwait
mov
jae
leave
ret
int3
loope
aas
ret
mov
mov
shl
sub
in
sbb
add
mov
sub
rcr
inc
and
shr
cmp
fst
jbe
cmp
test
mov
xchg
add
test
jne
xchg
lds
enter
sbb
sbb
(bad)
outs
mov
sti
mov
shr
jae
sub
sub
xor
ins
cmp
inc
sbb
xchg
and
jae
sub
out
fdiv
test
xor
adc
or
push
cmp
jbe
cmp
dec
stos
stos
stos
mul
mov
shr
add
scas
fiadd
shl
mov
mov
push
imul
jb
or
retf
vandpd
push
adc
je
push
add
cmc
jbe
mov
push
jmp
dec
lds
movzx
mov
or
add
and
push
push
push
sub
cmp
iret
push
ja
test
je
mov
pop
jae
sub
mov
jbe
mov
push
xchg
call
xchg
cmp
jae
cmp
jb
jmp
aaa
add
dec
inc
leave
sbb
inc
sbb
or
add
call
mov
jmp
test
je
mov
pop
xchg
test
inc
sbb
cmp
std
pusha
add
sub
mov
loopne
hlt
popa
add
je
lea
mov
lea
push
xchg
cld
mov
rol
mov
mov
mov
pop
pop
mov
mov
test
xlat
cmp
sub
xor
or
inc
add
shl
inc
mov
mov
es
jg
push
je
es
adc
inc
pop
pop
pusha
(bad)
aas
push
ja
push
mov
inc
add
lea
add
dec
add
lds
mov
arpl
mov
mov
das
cmp
jne
hlt
pop
push
and
cmp
ja
mov
jbe
and
mov
jle
mov
stos
inc
adc
(bad)
adc
adc
sahf
std
pop
ficom
mov
add
mov
pop
mov
add
add
ret
(bad)
xor
pop
je
pop
dec
add
call
jne
push
add
push
add
add
cmp
(bad)
(bad)
fcomip
jbe
jmp
icebp
jmp
add
jmp
add
jmp
add
cmp
jae
mov
jg
and
push
mov
movzx
add
sub
js
fild
clc
pcmpeqd
test
jle
cmp
add
inc
cld
or
pop
or
jl
mov
(bad)
(bad)
jmp
mov
add
mov
add
mov
jmp
add
dec
clc
push
jb
mov
call
test
jbe
cmp
je
movzx
xchg
mov
mov
or
push
ins
add
rcl
test
xchg
xor
(bad)
out
iret
pop
(bad)
push
je
jp
mov
jbe
sub
sub
ss
je
sub
pusha
aam
inc
ror
cmp
jmp
lock
sub
add
add
inc
add
icebp
and
fild
add
dec
addr16
inc
pusha
clc
mov
or
jae
inc
rcr
and
mov
mov
sub
ret
mov
mov
movzx
cmp
jle
(bad)
jp
mov
call
movzx
add
mov
(bad)
cs
mov
aas
and
inc
rol
adc
cli
outs
loopne
call
and
shl
mov
mov
shr
and
add
lea
add
lea
mov
sub
sub
test
mov
jne
test
lea
clc
aas
fmul
xlat
test
je
shr
test
jne
test
dec
and
add
mov
jmp
xor
add
add
inc
push
dec
inc
dec
sbb
aam
cmps
mov
push
and
movzx
mov
ja
and
pop
adc
xchg
(bad)
jmp
adc
sbb
cwde
add
(bad)
fstp
pop
inc
sub
lea
scas
sbb
arpl
sub
cmp
nop
lea
shl
inc
sbb
sub
call
or
test
jle
shr
add
shl
out
dec
aaa
xchg
sbb
loopne
xlat
pushf
dec
or
jne
cmp
pop
add
push
mov
mov
mov
add
and
mov
(bad)
and
enter
cmp
clc
push
and
movs
nop
add
aad
mov
cs
sub
test
mov
mov
cmp
jp
mov
and
inc
and
cmp
add
neg
adc
aaa
xor
xchg
mov
mov
fwait
(bad)
and
mov
jl
add
adc
lea
jg
stos
add
retf
sub
add
aaa
jne
inc
add
adc
mov
xor
outs
adc
ret
or
pop
or
mov
addr16
or
shr
add
sti
add
(bad)
(bad)
mov
retf
icebp
inc
add
sub
add
cmp
pxor
mov
shl
pop
or
pop
ret
jp
and
(bad)
adc
div
pop
sbb
cmp
jae
fcomip
mov
mov
add
dec
add
sub
jne
push
out
(bad)
out
dec
nop
mov
xor
mov
pop
pop
mov
dec
or
ret
cmp
loope
scas
test
sbb
jmp
push
mov
shr
sub
(bad)
movzx
call
add
movzx
add
pop
add
nop
inc
push
sbb
fs
or
push
sbb
or
push
bswap
(bad)
mov
test
inc
add
sti
cwde
(bad)
icebp
mov
mov
mov
add
and
addr16
jb
call
retf
jmp
(bad)
jb
sbb
add
loope
inc
stos
(bad)
mov
mov
pop
scas
jmp
std
pop
and
push
mov
test
not
je
(bad)
imul
cmp
sbb
push
aaa
cmc
dec
shr
xor
icebp
jne
and
inc
cld
(bad)
and
jb
out
add
jmp
std
call
adc
and
dec
add
adc
and
dec
add
out
pop
push
mov
rol
lds
not
push
clc
add
adc
push
in
cmp
movzx
xor
fidivr
or
cs
jae
loope
inc
adc
in
pusha
inc
inc
lock
sub
jne
xor
mov
frstor
add
xor
jo
into
lock
cmp
test
leave
jo
and
sub
retf
cld
add
and
and
push
cld
rcl
add
test
inc
test
or
jb
mov
shr
lock
stc
test
movzx
mov
fmul
test
fmul
cld
cmp
out
add
jmp
(bad)
jne
test
pop
pop
je
pop
push
inc
push
pmulhuw
shr
sub
leave
lock
and
mov
jnp
ins
std
pop
loopne
int3
add
clc
xor
mov
xor
dec
cmp
dec
pop
mov
mov
(bad)
(bad)
stc
inc
jl
cmp
jg
cmp
jle
cmp
jl
mov
jmp
mov
mov
sar
call
jp
rol
sbb
and
mov
icebp
or
cmps
sub
cmp
jl
test
jne
out
lock
ret
pop
cmp
inc
cmp
ds
cld
add
add
(bad)
fisttp
mov
aas
add
jmp
cmp
push
jne
lahf
stos
xchg
pop
sub
cld
(bad)
(bad)
jg
lea
lea
lea
sub
sub
lea
xor
sub
sub
add
ins
and
mov
scas
xlat
or
scas
cmp
mov
lea
mov
je
cmp
mov
mov
add
ss
add
pop
imul
aaa
fstp
mov
je
sbb
nop
adc
jl
cmp
call
pop
jle
pusha
jge
mov
add
push
(bad)
push
jl
push
mov
or
jmp
push
push
push
gs
adc
ret
out
cmp
test
pop
je
push
sub
mov
test
push
arpl
sub
sahf
cli
imul
shr
and
and
stc
sub
jbe
pop
ins
mov
adc
or
cmp
push
add
aaa
mov
adc
je
pop
push
pop
sub
and
adc
adc
and
inc
push
xor
sub
sub
xchg
daa
pop
add
jo
fnstcw
push
add
in
fwait
shl
ret
push
push
or
sbb
fst
xchg
pop
inc
mov
mov
mov
add
mov
test
fisub
dec
(bad)
mov
ins
addr16
je
cmp
jne
mov
mov
cmp
jbe
push
je
cmp
je
add
or
in
xor
add
das
or
je
add
ins
cs
adc
push
mov
sbb
or
test
idiv
pop
mov
jmp
add
jmp
ss
push
or
add
add
inc
inc
mov
push
push
adc
aam
sbb
push
mov
jecxz
adc
jmp
or
push
jmp
inc
outs
mov
mov
in
mov
cmp
mov
(bad)
aas
xchg
adc
je
add
push
push
call
add
sbb
adc
or
out
fidivr
(bad)
test
int3
sub
sbb
call
inc
and
dec
rol
adc
push
xchg
pusha
call
fnstsw
add
adc
push
in
adc
dec
push
loope
or
cld
sub
dec
and
mov
sbb
call
jmp
mov
mov
ret
inc
add
cs
test
je
sbb
mov
shr
xor
mov
and
popa
or
adc
dec
or
rcr
test
ins
pop
cmp
add
adc
stc
(bad)
lds
jnp
push
cmp
sub
cs
mov
xor
jg
adc
sbb
out
cmp
loope
pop
pop
ins
xor
setle
or
das
xor
inc
cmp
sbb
fst
or
movs
inc
and
push
shr
push
inc
(bad)
mov
add
in
call
jo
mov
pop
push
ja
xor
movzx
shl
pop
mov
push
add
push
push
push
xor
xor
adc
adc
adc
jmp
dec
cmp
or
or
mov
loop
call
xor
push
mov
mov
mov
mov
mov
mov
jne
sbb
mov
pop
mov
(bad)
pop
jne
ret
xchg
or
push
jmp
test
xor
inc
add
sbb
lock
and
jae
mov
mov
ss
mov
je
push
push
xchg
sub
out
xor
sub
out
loop
pop
jne
loopne
cmp
(bad)
mov
or
jl
mov
add
test
mov
mov
and
retf
(bad)
mov
push
mov
push
mov
mov
push
mov
movs
or
adc
adc
fimul
ds
push
inc
mov
fidiv
xchg
mov
inc
adc
mov
inc
mov
mov
out
add
mov
add
mov
mov
mov
xor
pop
out
jne
imul
sub
loop
dec
and
pop
jne
outs
dec
jnp
add
inc
and
push
rcr
test
popf
sub
xchg
sub
jge
cmp
dec
or
mov
(bad)
or
cmp
ds
push
mov
inc
shr
(bad)
js
sbb
(bad)
or
mov
sbb
xchg
sbb
fwait
pusha
push
(bad)
jg
imul
cmp
jae
sub
add
sbb
lahf
nop
mov
push
push
mov
mov
or
add
test
paddsb
and
xchg
aaa
mov
cmp
or
rol
sar
cmp
push
jle
lea
mov
mov
test
mov
push
je
lock
jbe
push
frstpm(287
pop
push
push
cmp
lods
aas
push
cmp
or
repnz
int3
mov
(bad)
or
push
mov
xchg
adc
idiv
pop
or
in
cmp
je
sub
mov
add
dec
or
gs
aas
add
cmp
jae
mov
sub
cmp
mov
je
cmp
sbb
adc
pop
ins
lea
jg
inc
jmp
mov
push
pop
mov
inc
add
sub
cmp
or
or
sub
add
test
push
std
mov
cs
xor
and
push
push
jne
test
int3
mov
daa
stos
or
ins
add
adc
mov
fidiv
loop
mov
and
lods
or
pop
inc
fwait
mov
loope
xlat
inc
sub
das
cmp
and
and
aas
push
call
in
add
pop
pop
mov
and
xor
inc
or
int
push
data16
cmp
or
dec
push
scas
daa
fisttp
scas
sbb
mov
xchg
pop
or
dec
or
sub
pop
mov
or
jle
push
jl
jns
pop
pusha
or
push
lea
pop
lods
and
cmp
fdivrp
dec
cld
xor
test
jle
and
mov
jne
push
lea
sub
cmp
fsubr
jg
sub
mov
les
cmp
jl
pop
mov
mov
frstor
and
fisubr
dec
cmp
pusha
jb
les
xor
in
sub
lock
loopne
inc
(bad)
sbb
call
and
jp
pusha
loopne
loopne
push
out
mov
je
pop
retf
inc
add
cld
inc
test
add
push
pop
inc
sbb
test
les
cmp
mov
je
dec
mov
cmp
jle
(bad)
push
cmp
jbe
cmp
jb
imul
and
add
loopne
adc
and
add
inc
and
pop
cmp
mov
(bad)
dec
jne
jg
adc
dec
bound
cmp
lea
(bad)
je
push
push
sub
jmp
or
sub
jl
je
mov
push
jne
sub
sub
fisttp
and
mov
xor
test
je
cmp
jne
rcl
scas
mov
add
arpl
fadd
mov
xor
mov
aas
test
jne
cmp
mov
je
push
out
aas
test
jne
mov
push
test
sbb
or
mov
inc
sub
cmp
jbe
push
ins
push
sbb
mov
mov
sar
pop
sub
or
jns
aaa
popa
dec
call
add
adc
mov
test
std
adc
in
jne
or
or
xchg
ss
jb
sbb
xor
cld
adc
test
arpl
pop
aas
popa
mov
push
add
jmp
xor
lea
pop
add
aas
loop
sbb
pushf
dec
cmc
(bad)
mov
sbb
mov
test
jbe
test
pop
mov
sub
mov
icebp
scas
or
xor
int3
xor
pop
jnp
mov
push
or
jae
xor
jecxz
fild
push
xor
cmp
jmp
adc
adc
adc
mov
sub
popf
sbb
sbb
popf
nop
push
ret
test
pop
pop
or
std
test
sbb
push
and
cmp
push
je
pop
cmp
je
inc
js
pop
inc
push
ret
loope
js
sbb
sbb
push
mov
leave
retf
mov
lea
sbb
bndldx
add
push
and
repz
cmp
add
cmp
and
test
cmp
mov
sbb
out
adc
out
aaa
mov
and
push
push
dec
jmp
push
sbb
push
mov
out
or
sbb
out
sahf
sbb
sbb
sub
push
fnsave
test
cwde
adc
mov
lds
mov
test
adc
gs
(bad)
rol
les
dec
sbb
out
dec
cmp
jne
pusha
cwde
jo
or
outs
ja
pop
and
cmp
jne
xor
or
adc
and
adc
lock
lea
and
jo
add
sbb
jl
add
lea
lods
sub
les
stos
fcomp
test
add
arpl
lods
pop
push
sbb
fcom
and
cmp
std
(bad)
mov
inc
add
inc
add
fmul
dec
mov
retf
push
inc
adc
inc
scas
nop
sbb
inc
dec
and
loop
lea
test
lea
pop
xor
je
je
test
xor
cs
aaa
dec
call
inc
in
add
adc
mov
jno
dec
sub
imul
xchg
adc
retf
js
ret
push
jbe
in
mov
dec
imul
push
sbb
jmp
jl
push
add
mov
mov
jae
pop
sbb
jmp
add
sar
dec
mov
lahf
mov
test
jne
jmp
sub
xor
test
setne
lea
add
add
mov
(bad)
retf
jmp
(bad)
xchg
mov
test
dec
jle
pusha
sar
sar
adc
add
adc
add
sbb
sub
movs
out
pop
sub
mov
sbb
call
(bad)
cmp
pusha
mov
xchg
loope
ror
mov
jl
push
in
scas
jbe
cmp
es
cmp
cmp
jo
imul
pop
sbb
rcl
inc
push
push
out
js
dec
jne
pop
aad
mov
jg
mov
push
inc
and
mov
pop
imul
loop
stc
sbb
cli
adc
out
jnp
add
push
sub
shr
cli
out
sub
enter
sar
sub
inc
and
mov
sbb
xor
cmp
sub
jae
pusha
mov
jb
adc
icebp
push
mov
ret
fwait
add
sub
sub
dec
jge
push
cmp
sbb
mov
je
test
into
sahf
rcr
cmp
pop
ins
les
addr16
jmp
push
xchg
dec
add
pop
dec
nop
push
and
mov
pop
je
mov
sub
and
mov
and
push
shr
shr
dec
fimul
pop
scas
or
pop
and
inc
add
aas
inc
mov
pop
movzx
imul
outs
or
inc
shr
imul
pavgb
inc
add
ds
popf
push
lea
in
jl
(bad)
adc
mov
test
adc
mov
add
jae
mov
scas
inc
jge
inc
pop
mov
and
je
sub
push
jl
retf
ret
adc
(bad)
mov
or
mov
rep
xor
push
iret
add
gs
or
push
xchg
and
add
adc
jae
and
out
int3
mov
mov
ret
(bad)
xchg
jmp
push
lds
inc
jo
adc
add
jne
mov
ret
inc
pop
mov
jle
icebp
sub
mov
movs
dec
mov
test
sbb
mov
mov
pop
ret
dec
adc
or
inc
test
jmp
cmps
aas
mov
xor
iret
or
scas
mov
push
or
inc
add
pop
cmp
push
mov
cmp
cdq
jg
stos
mov
push
inc
pop
dec
dec
pushf
or
jmp
pusha
push
daa
mov
dec
cld
lea
add
push
dec
pusha
movzx
mov
sub
je
out
pop
scas
sub
mov
ins
push
push
xor
jo
fist
je
mov
shr
cmp
cwde
jle
cmps
adc
mov
mov
sbb
out
out
es
scas
retf
imul
or
add
cmp
je
fcom
pop
add
add
(bad)
pop
loopne
and
rep
pop
ja
cli
fild
sbb
push
and
add
add
cmp
mov
loope
lock
sub
cmp
mov
arpl
(bad)
dec
mov
and
add
add
mov
sub
mov
shr
movzx
shr
mov
pop
xchg
jmp
shl
or
test
jne
sub
ins
rol
dec
and
xor
jmp
sub
add
cmp
daa
ins
adc
cmps
cmc
shl
mov
nop
jnp
mov
adc
xchg
js
or
jg
xchg
mov
fbstp
add
jle
daa
cdq
sub
inc
jle
mov
(bad)
rsm
jmp
xchg
outs
jo
pop
jge
push
cmp
ja
pop
mov
add
xchg
leave
bound
aaa
jge
mov
cmp
je
adc
and
pusha
int
push
and
pop
lea
cld
inc
xor
div
pop
mov
mov
and
cs
push
inc
mov
out
sbb
lock
mov
dec
(bad)
sbb
add
dec
stos
sbb
add
je
pop
je
mov
call
mov
pop
and
cmp
or
ret
rcl
xor
(bad)
xchg
adc
lods
push
push
add
loopne
pusha
inc
lock
inc
add
sub
sub
mov
call
dec
push
or
jle
mov
xchg
dec
(bad)
jmp
out
clc
emms
push
movzx
jl
adc
push
dec
add
or
adc
xlat
add
inc
pop
pop
cmp
xchg
(bad)
mov
adc
div
movzx
out
inc
jmp
add
arpl
mov
and
cmp
dec
push
in
push
dec
or
add
push
add
aaa
and
mov
std
xchg
add
adc
push
bound
xchg
adc
inc
add
push
push
push
adc
(bad)
push
dec
mov
pusha
sbb
inc
imul
stos
or
xor
clc
add
shr
dec
idiv
je
inc
cmp
call
sbb
and
push
jg
cmp
and
mov
mov
jb
cmp
xchg
mov
imul
mov
ss
mov
mov
mov
mov
loop
mov
call
inc
mov
mov
mov
shr
aam
or
or
adc
or
fisttp
cli
adc
call
adc
sahf
cmp
shr
imul
movs
sbb
mov
sbb
mov
sbb
sahf
imul
in
push
daa
pop
pusha
shr
pop
loop
cs
xchg
test
or
push
xchg
add
mov
mov
icebp
xchg
or
push
shl
cmp
add
jl
and
jae
jle
sbb
and
adc
jmp
les
(bad)
jnp
jmp
or
mov
test
jne
xor
add
mov
dec
or
xchg
shr
(bad)
test
jne
mov
loopne
std
mov
xor
or
xor
mov
mov
mov
mov
rcl
adc
push
mov
dec
mov
push
push
push
push
dec
cmp
add
adc
xor
shl
lds
xchg
inc
std
xor
inc
ins
add
xor
dec
push
inc
add
add
pop
mov
mov
inc
add
pop
add
mov
daa
les
test
dec
add
idiv
call
add
and
or
jge
pushf
mov
mov
(bad)
lahf
add
test
push
movzx
mov
and
cmp
jne
aas
mov
and
xchg
cmp
add
or
xchg
repz
jae
(bad)
(bad)
rol
cmp
jmp
mov
cmp
movzx
or
or
shr
lea
sti
jg
pop
aas
shl
pop
cmp
ja
mov
dec
(bad)
(bad)
(bad)
fild
sub
cmp
jbe
shl
or
mov
cmp
je
mov
and
ja
jmp
movzx
mov
shl
add
xor
mov
sub
add
mov
jmp
lods
xchg
push
push
pop
into
daa
sbb
adc
or
or
pop
in
add
mov
inc
or
add
call
rol
xor
add
add
xchg
jmp
lock
stos
dec
adc
clc
xchg
cmp
sbb
xchg
in
sub
fld
mov
fadd
imul
jl
mov
movzx
mov
int3
inc
ret
pop
add
sbb
push
push
dec
adc
add
ins
and
fistp
add
push
pop
or
adc
jmp
adc
push
arpl
mov
push
bound
sub
dec
xchg
sbb
(bad)
leave
gs
inc
push
xor
sbb
jg
adc
sti
in
add
add
dec
or
inc
jge
(bad)
or
sbb
and
mov
lods
cs
fisttp
lods
fisttp
lahf
lods
add
(bad)
lods
rcr
or
das
adc
repz
cld
xchg
sbb
push
mov
into
cmp
xlat
lock
xor
(bad)
adc
jbe
jne
addr16
adc
adc
fs
mov
add
test
loopne
pop
inc
xor
add
jno
push
cmp
jae
cmp
je
push
jg
ffreep
sbb
xlat
je
and
inc
jle
movsx
(bad)
mov
imul
fisttp
shl
or
add
cmp
add
sti
jge
push
sbb
jle
mov
add
push
inc
call
mov
push
push
xor
mov
jge
inc
cld
scas
jecxz
or
data16
jmp
inc
mov
add
mov
push
mov
inc
rol
or
xchg
ins
and
and
sbb
push
xor
lahf
scas
outs
cli
pop
sub
rol
setne
lea
dec
adc
adc
mov
lea
push
xor
das
or
sbb
(bad)
punpckhdq
push
int
push
stc
mov
cld
mov
test
je
xor
outs
mov
scas
sbb
or
dec
jae
je
mov
xor
push
cmp
xchg
cmc
jg
loopne
lea
test
je
push
push
and
fmul
pop
jecxz
idiv
jg
or
dec
cmp
jae
movzx
xchg
jne
dec
jns
jg
jp
mov
arpl
movzx
pop
movzx
xor
push
pop
and
aas
and
push
jle
shr
scas
add
ins
pop
sbb
mov
xchg
adc
and
xor
push
and
sub
rcl
and
inc
or
mov
(bad)
mov
push
imul
sub
(bad)
(bad)
jmp
lea
mov
add
lea
cmp
jb
into
or
stos
jae
xor
imul
shl
and
jle
fnstsw
add
add
ds
outs
cmp
loopne
mov
or
jl
aas
push
add
test
push
push
lock
shl
cmc
sbb
adc
adc
adc
jg
cmp
adc
adc
je
cmp
mov
je
mov
jb
and
loopne
push
cmp
ja
mov
test
je
dec
add
(bad)
cmp
ja
mov
test
je
cmp
ja
sub
push
mov
imul
mov
jmp
ds
idiv
inc
cmp
or
or
(bad)
mov
rol
mov
sub
sbb
sbb
mov
gs
adc
mov
push
sbb
sbb
pop
or
push
xor
inc
or
xor
cmp
arpl
retf
rcl
jl
or
add
jnp
add
fcomp
add
add
inc
xor
adc
cmp
pop
mov
adc
adc
fadd
adc
scas
inc
je
mov
cmp
adc
stc
mov
cmp
or
dec
add
push
push
and
lods
fist
loope
ss
xor
nop
leave
shl
inc
jb
jmp
bound
loopne
call
push
cmp
loope
fcomp
test
dec
mov
mov
cmp
dec
mov
or
sub
cmps
mov
test
jl
pop
xlat
int
jmp
add
mov
repnz
or
mov
pop
mov
test
pusha
adc
pop
outs
(bad)
fadd
sbb
and
and
adc
xor
add
add
and
push
cmp
mov
mov
mov
into
jne
add
mov
sahf
mov
pusha
mov
sbb
leave
sbb
sub
cmp
daa
js
imul
or
xor
push
and
inc
inc
ins
push
xchg
mov
xchg
mov
push
dec
pop
lods
arpl
add
sub
gs
and
push
fsubr
add
inc
adc
dec
sub
fwait
adc
jae
sbb
fstp
ja
dec
or
and
push
dec
out
or
push
sahf
int3
jg
and
clc
add
hlt
add
add
(bad)
mov
aaa
in
aad
dec
and
jle
xchg
arpl
add
ret
mov
mov
or
rcl
add
ret
push
ror
adc
test
push
jne
cmp
dec
out
pop
icebp
movzx
(bad)
shl
cmp
jl
push
add
dec
inc
cli
inc
and
push
jmp
mov
mov
lock
mov
cmp
jne
in
sbb
push
in
or
movzx
push
fadd
out
sbb
adc
mov
shr
jge
call
add
mov
jp
sti
jg
outs
adc
adc
jne
or
or
je
push
(bad)
xchg
xchg
push
in
pusha
or
jmp
fsubr
xor
xchg
push
inc
cdq
and
das
add
pop
call
add
pop
dec
jne
inc
mov
sub
es
sbb
or
cmp
cmp
jbe
push
add
out
inc
add
cmp
fstp
sbb
and
mov
and
dec
jo
jl
icebp
add
inc
icebp
dec
dec
icebp
aas
jne
test
in
adc
sub
call
les
outs
je
inc
sbb
lods
or
ins
pop
in
jno
cmc
inc
mov
adc
jne
je
cli
or
mov
cmp
sbb
pop
xor
pop
dec
adc
adc
rol
cmp
popf
jb
and
movs
sub
push
xor
js
movs
or
mov
pop
popa
sbb
pop
push
push
sub
push
sbb
test
push
inc
jmp
dec
lahf
sub
xlat
push
mov
ja
dec
loop
and
adc
dec
add
adc
and
test
mov
adc
sbb
sub
add
cmc
fist
jbe
jl
push
push
sub
lea
aaa
mov
cld
arpl
(bad)
push
lea
fild
(bad)
fadd
cmp
(bad)
sub
push
inc
lahf
jne
dec
cli
jge
test
dec
or
and
test
sub
xor
jmp
jmp
fsubr
ret
push
scas
adc
mul
adc
pop
mov
mov
cmp
popa
es
mov
pop
(bad)
out
(bad)
inc
ja
cmp
jb
mov
cmp
ja
or
jns
pop
ja
mov
cmp
mov
push
movzx
push
mov
ret
push
push
sub
mov
push
jp
mov
jmp
add
push
bound
push
in
retf
mov
push
shl
jecxz
or
sti
xor
ret
pop
xor
adc
push
rol
add
cli
jo
push
xor
test
xchg
sahf
rcr
cmp
cmp
lds
inc
cmc
adc
push
jno
ins
and
adc
mov
cmp
pop
and
mov
mov
fmul
int
mov
sub
ins
pop
jo
inc
xchg
jmp
je
adc
scas
jmp
mov
dec
pop
push
pop
ja
in
push
add
add
add
mov
test
push
add
mov
div
mov
mov
out
cmp
add
mov
sbb
sti
pop
jae
sbb
mov
arpl
inc
or
mov
aam
or
xor
lea
div
out
push
or
mov
mov
es
clc
lea
xor
mov
pop
mov
shl
adc
pop
pop
jae
mov
scas
fadd
gs
loopne
mov
inc
icebp
jg
movzx
cmp
jl
shl
add
adc
mov
arpl
scas
lock
shr
lea
daa
scas
sbb
pop
mov
loope
pop
jo
mov
mov
mov
cmp
aad
out
mov
sbb
test
add
push
nop
mov
sbb
cld
jmp
cmp
je
sbb
lds
(bad)
cwde
retf
pushf
inc
mov
adc
mov
jmp
imul
in
or
sub
pop
xchg
adc
fldenv
dec
pop
jo
imul
push
or
mov
fnstsw
rol
pop
mov
loop
aad
fistp
lods
je
adc
mov
or
jle
push
outs
push
sar
sbb
jne
cmp
jne
mov
or
adc
mov
movaps
(bad)
push
or
xor
mov
add
mov
jg
add
or
ret
add
pop
push
mov
ror
jg
fstp
mov
movzx
aaa
push
movzx
push
call
push
cmp
test
add
ror
push
rcr
mov
ret
adc
jno
pop
adc
inc
popa
add
mov
mov
mov
push
xor
xor
test
cs
push
lds
(bad)
pop
fwait
dec
sbb
mov
adc
cmp
into
jmp
mov
outs
and
add
add
cmp
jb
cmp
(bad)
jmp
pop
call
aas
add
leave
add
cmp
mov
jle
dec
adc
cmp
jne
mov
mov
mov
adc
scas
(bad)
imul
shr
loop
ret
sbb
xlat
mov
les
cmp
mov
(bad)
sub
ret
mov
imul
shr
cmp
call
jmp
imul
rol
outs
add
loope
add
jo
jne
adc
add
popf
sbb
sub
inc
icebp
mov
xor
adc
loope
inc
add
pop
(bad)
icebp
mov
cmp
jae
sub
nop
mov
sub
jnp
bound
fstp
mov
mov
test
push
inc
cmc
adc
je
pusha
(bad)
jecxz
in
stc
mov
jne
rcr
imul
or
idiv
and
dec
jle
aas
outs
(bad)
cmp
push
add
add
jo
clc
mov
(bad)
mov
out
inc
add
(bad)
jne
and
jmp
push
jbe
and
dec
push
jmp
test
je
in
push
mov
xor
cdq
mov
push
cdq
xor
mov
call
and
sti
mov
xor
add
xchg
mov
(bad)
imul
add
or
lock
int
cmp
mov
aaa
outs
mov
in
mov
cmp
jecxz
inc
mov
mov
mov
movzx
imul
mov
mov
aaa
mov
sar
cmp
mov
add
inc
add
outs
adc
sar
adc
sub
add
cmp
ja
sti
scas
enter
add
out
push
test
shl
jb
sub
test
iret
shr
stos
jmp
or
mov
and
dec
add
pop
test
jae
sub
mov
out
sbb
mov
jl
mov
sbb
loop
jbe
mov
sbb
cld
imul
shr
and
mov
test
jae
ins
fcomip
sbb
or
jl
jno
cmp
dec
cmp
add
dec
adc
jp
jbe
mov
sub
add
adc
arpl
mov
rol
(bad)
jo
jmp
lock
(bad)
imul
mov
clc
xchg
mov
jne
inc
clc
pop
inc
leave
xor
test
jle
add
ret
imul
ret
xor
and
sahf
nop
push
jbe
clc
loope
mov
push
mov
rol
sti
and
mov
aas
mov
rcl
cld
dec
push
and
lock
inc
ret
icebp
and
shl
clc
jmp
sbb
cmp
ins
push
adc
xor
js
or
std
xor
les
jne
int
(bad)
js
in
or
and
ss
sub
and
adc
lahf
mov
mov
cmp
and
xchg
mov
pop
rcr
jmp
cmps
or
mov
inc
jne
setns
mov
sub
xor
or
retf
add
test
mov
jbe
dec
(bad)
mov
mov
shr
sub
aaa
sbb
mov
jne
(bad)
cmp
jae
(bad)
out
mov
dec
adc
shl
movzx
push
(bad)
fcomip
push
add
cdq
sub
mov
sar
sub
mov
ret
js
cwde
cmp
mov
add
or
lea
or
or
jne
dec
cmp
inc
jb
xor
xchg
jle
and
jbe
sbb
jo
lds
adc
repz
xor
cmp
xor
dec
ins
add
xlat
xor
add
fistp
fadd
push
mov
dec
shr
pop
sbb
shr
xor
inc
push
and
sub
xchg
(bad)
lock
mov
aas
movzx
movzx
dec
mov
mov
sar
test
dec
inc
xchg
inc
xchg
and
ret
adc
cmps
xor
jb
popa
fbstp
pusha
(bad)
jmp
mov
shr
sahf
add
or
leave
and
icebp
mov
jle
mov
or
xor
mov
push
(bad)
retf
pop
and
cmps
xor
loopne
scas
and
sbb
lods
or
fld
xchg
jmp
adc
addr16
adc
xchg
mov
sub
mov
ret
and
mov
mov
mov
push
lods
mov
jnp
in
add
out
outs
mov
xor
pop
and
jae
stc
retf
sub
inc
call
jmp
mov
movzx
movzx
aaa
adc
jmp
sub
add
jg
lds
sub
test
jge
mov
neg
cmp
dec
cmp
add
fild
clc
out
mov
neg
inc
cmp
retf
jg
cmp
jg
mov
or
fdivr
or
xor
movd
jb
retf
into
xor
ss
out
cwde
inc
mov
sbb
adc
mov
pusha
cmp
xor
sub
mov
cmc
jmp
sbb
out
sub
push
cmp
test
or
sbb
fxch
mov
ficomp
jg
mov
add
mov
inc
(bad)
mov
adc
int
sbb
lds
add
sub
mov
adc
xor
mov
sub
mov
push
call
jg
mov
sub
xor
xor
xor
into
jg
add
aad
fdiv
shl
lock
xor
add
pop
adc
add
mov
mov
and
je
sbb
cld
jb
add
add
and
mov
inc
or
stos
(bad)
jle
jmp
pop
inc
aas
lods
add
and
lods
movs
inc
and
adc
pop
mov
scas
or
jg
or
cmp
jae
fld
push
in
ins
sbb
aam
fidivr
stos
add
nop
jecxz
inc
aaa
and
jle
sub
xchg
movs
lea
mov
test
mov
jl
push
jg
in
push
mov
lods
mov
ret
clc
or
fnstsw
(bad)
outs
pop
cmp
jne
sub
push
clc
mov
pop
or
jmp
sbb
sbb
mov
jbe
add
bound
test
jne
mov
dec
pop
ja
paddb
jmp
jne
cmp
leave
sbb
mov
pop
jbe
mov
dec
into
fiadd
inc
add
(bad)
in
push
jmp
ds
je
or
fwait
std
mov
jle
sar
jmp
xchg
xor
cmp
cli
mov
je
mov
sbb
inc
or
js
cli
imul
pop
pop
xchg
pop
dec
jb
jo
inc
ja
imul
mov
pop
mov
or
xor
mov
or
jg
ret
clc
outs
js
arpl
je
movzx
movzx
or
and
iret
and
loop
out
xchg
call
jno
sub
call
jnp
adc
cmp
mov
mov
add
adc
xor
dec
je
movzx
push
sbb
cli
movzx
sub
lods
xor
les
(bad)
fsubr
or
fild
ror
dec
mov
jne
sti
(bad)
dec
sti
add
mov
jmp
cmp
jne
cmp
push
adc
jg
repz
inc
jmp
push
cwde
add
mov
cmp
clc
outs
fidivr
mov
inc
adc
xor
or
mov
mov
mov
shl
jmp
mov
mov
rcl
scas
(bad)
(bad)
jmp
pop
and
sub
or
sub
cmp
jg
ret
(bad)
fwait
and
ror
add
ret
mov
jne
mov
dec
imul
xor
fst
adc
xchg
push
xchg
xor
mov
div
movzx
mov
inc
cmc
dec
scas
adc
ffreep
push
adc
xchg
xor
(bad)
lea
jle
mov
cmps
adc
neg
xor
mov
sar
enter
mov
mov
(bad)
mov
or
sub
neg
jg
mov
js
xor
test
in
in
and
xchg
jl
mov
je
xor
(bad)
sbb
adc
cmc
sti
jmp
xor
shl
lea
add
mov
(bad)
sbb
fidivr
ret
mov
neg
sub
mov
pop
adc
jne
test
shr
adc
(bad)
sbb
(bad)
xchg
jae
or
mov
pop
push
mov
adc
mov
sub
mov
cmp
or
mov
cmp
enter
ret
repnz
idiv
add
adc
push
sbb
call
sub
rol
data16
cs
jg
movs
sub
pop
pop
ret
mov
test
js
add
adc
jg
sbb
inc
dec
pop
and
(bad)
inc
xor
pop
inc
pop
add
or
pop
add
outs
add
int3
or
(bad)
and
sbb
out
inc
imul
xchg
xchg
mov
or
jg
sub
lock
adc
retf
mov
xor
jmp
mov
or
add
xchg
push
outs
jmp
lock
push
mov
xchg
cmps
or
test
jbe
or
xchg
sar
mov
jne
ret
sbb
out
add
pop
sbb
dec
inc
add
sub
es
and
out
mov
jbe
push
mov
mov
cmp
fwait
mov
cli
mov
pop
ret
mov
push
inc
and
jbe
add
in
popf
or
sbb
add
dec
xchg
adc
sub
in
and
sub
cmp
mov
inc
jb
and
call
je
mov
test
je
pop
ficom
inc
rcr
push
dec
push
(bad)
or
inc
jno
je
mov
pop
cdq
or
lds
call
lahf
enter
add
and
mov
add
push
push
imul
call
sbb
popa
mov
xor
lds
inc
jno
inc
out
lea
out
push
sbb
inc
xor
out
sbb
mov
add
lock
dec
mov
scas
mov
inc
in
push
and
arpl
mov
push
jo
je
ret
mov
push
adc
push
mov
sbb
call
jo
push
mov
mov
mov
mov
jo
mov
mov
or
(bad)
fld
mov
xor
push
adc
shl
jmp
jbe
push
inc
or
retf
shr
cmp
sbb
(bad)
(bad)
inc
push
or
push
adc
push
adc
push
adc
adc
inc
sbb
js
add
jne
mov
jge
or
sbb
test
push
je
clc
jnp
add
(bad)
or
inc
jg
leave
or
mov
pop
cmp
je
add
add
cmp
movq
jmp
mov
cmp
xor
mov
cmp
jne
mov
fs
inc
sbb
sti
sbb
clc
sub
clc
sub
mov
jecxz
mov
(bad)
jne
jne
mov
sbb
test
jmp
add
inc
xor
or
or
mov
add
adc
push
or
mov
sbb
sbb
jle
cs
jne
add
or
mov
add
inc
or
(bad)
adc
jge
pop
fist
icebp
das
cmc
jmp
cmp
clc
mov
jl
xor
jmp
nop
mov
fstp
adc
or
inc
add
mov
mov
loopne
mov
neg
sbb
and
neg
in
pushf
sbb
sbb
and
add
cmps
or
pop
in
(bad)
fstp
add
rol
xchg
rol
mov
dec
mov
cmp
hlt
sbb
mov
add
bound
dec
packuswb
jge
dec
add
adc
push
push
push
mov
pusha
adc
xor
dec
adc
jmp
pop
adc
inc
sahf
imul
in
inc
add
mov
jo
push
sbb
push
inc
fcomip
jp
add
push
mov
sar
or
mov
cs
dec
xor
or
rol
add
cmp
(bad)
fsub
jbe
sbb
adc
xor
push
(bad)
fist
xchg
ret
add
gs
or
cmp
je
or
mov
maskmovq
test
retf
call
and
sub
nop
sub
mov
lahf
cmp
jne
jmp
inc
mov
cmp
jae
repz
cmp
inc
or
ss
sbb
shl
rcl
shl
jae
hlt
mov
ins
mov
mov
je
xor
jle
mov
mov
sbb
(bad)
js
inc
adc
inc
and
imul
ret
out
jb
adc
and
iret
xchg
imul
clc
pop
cmps
cmp
and
push
adc
push
data16
add
mov
pop
jne
pop
dec
sbb
fimul
xchg
sub
outs
pop
ins
neg
(bad)
iret
dec
sbb
jns
sbb
ret
(bad)
sub
shl
inc
je
mov
mov
mov
mov
or
mov
xchg
sbb
add
test
(bad)
jne
jmp
mov
jne
lds
pavgb
push
xor
jno
lock
das
or
mov
inc
xchg
and
add
mov
add
push
mov
stos
mov
scas
addr16
stos
jmp
add
cmp
jbe
add
or
xor
cmp
pop
in
cld
and
ds
jle
pop
outs
or
xor
add
jle
add
jns
mov
pop
jmp
mov
jne
push
cmp
push
pushf
pop
pop
mov
xor
pop
fbstp
or
sbb
(bad)
fst
lds
sbb
adc
add
jg
mov
or
xchg
mov
dec
add
mov
jne
sub
fsub
retf
sbb
icebp
pop
mov
arpl
fbstp
xor
nop
or
add
sti
add
jmp
cmc
push
pop
(bad)
dec
adc
mov
mov
mov
enter
dec
mov
lea
push
cmp
stos
mov
and
sbb
sti
add
stos
fcom
test
(bad)
(bad)
(bad)
cli
or
test
or
jg
mov
(bad)
clc
push
inc
and
add
jae
inc
jo
pop
cmps
outs
jae
rdmsr
xchg
rdpmc
and
xchg
and
or
add
xchg
or
jmp
xchg
cdq
pop
mov
push
sub
xchg
retf
mov
mov
test
inc
pop
xor
cmp
pop
pop
sete
ret
jae
test
mov
inc
fcomp
pop
pop
call
pop
mov
fmul
loope
and
out
jmp
dec
(bad)
aas
pop
(bad)
(bad)
(bad)
inc
jmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
or
je
pop
and
mov
sub
push
mov
push
inc
inc
adc
inc
push
adc
push
pop
arpl
inc
push
or
fs
push
add
test
mov
jne
inc
aad
or
sub
xchg
or
add
mov
or
(bad)
dec
mov
mov
push
push
xor
mov
adc
cmp
mov
jp
xor
xor
and
fild
lea
add
movzx
mov
movzx
pop
adc
into
pop
or
and
out
mov
scas
or
mov
mov
mov
mov
push
fist
mov
mov
pop
mov
mov
pop
pop
adc
dec
jl
bound
call
push
push
mov
push
mov
dec
inc
mov
lea
cmp
jbe
sub
mov
inc
lds
jmp
add
pop
(bad)
push
jp
add
scas
xor
push
rol
lea
(bad)
push
shr
mov
cmp
sbb
lahf
adc
mov
cmp
loopne
mov
add
cmp
jne
pop
loopne
inc
hlt
sub
jne
sbb
test
add
cmp
xchg
sub
xchg
lahf
sar
fsub
nop
mov
ret
sbb
or
inc
push
in
inc
cmp
in
push
sub
adc
cmp
inc
add
into
iret
sar
xlat
out
xchg
clc
cmp
lea
shl
(bad)
inc
mov
jge
mov
mov
mov
jnp
push
ror
add
cmp
jbe
add
or
inc
and
cmp
ja
mov
push
push
stos
xchg
aam
pop
and
cmc
mov
add
add
cmp
push
lea
je
movs
mov
cmp
inc
shl
jo
shl
adc
mov
xor
or
sbb
add
nop
add
sub
add
nop
push
adc
(bad)
jb
sub
add
mov
mov
cmp
mov
jbe
pop
mov
pop
ret
pop
add
imul
out
pop
or
or
(bad)
jg
mov
je
dec
ins
mov
lea
loope
rcr
jnp
mov
iret
retf
je
xor
xchg
xor
hlt
(bad)
(bad)
dec
jo
inc
ins
sub
lea
movzx
sub
cmp
jb
sub
test
push
push
leave
sub
mov
jne
mov
mov
lea
and
(bad)
add
mov
xor
test
(bad)
jnp
add
mov
add
cmp
mov
jbe
xlat
or
add
sub
xchg
pop
mov
scas
(bad)
call
into
mov
mov
cmp
jne
mov
out
lock
jmp
cmp
jne
mov
mov
xor
je
gs
xor
pop
adc
mov
dec
dec
add
dec
or
dec
je
cmp
jb
or
in
(bad)
(bad)
dec
push
mov
mov
shl
movzx
xor
and
or
jmp
cmp
mov
dec
xchg
mov
jg
dec
sar
jge
push
aam
push
inc
adc
jae
sar
adc
inc
je
clc
add
retf
or
lock
add
inc
ins
mov
ffreep
(bad)
adc
je
add
cmp
jb
dec
sub
test
mov
mov
jl
mov
add
push
ret
ja
sub
xchg
cld
mov
mov
adc
dec
pop
add
cmp
add
rol
sar
pop
jne
mov
mov
mov
cmp
aas
cld
test
sub
js
mov
xchg
inc
cmp
ret
add
add
xchg
(bad)
jg
stos
test
pop
ret
mov
test
je
push
inc
xor
mov
test
(bad)
into
jg
call
dec
xor
cmp
sete
sub
push
push
cdq
inc
ins
mov
mov
les
pop
inc
adc
out
cmp
sub
and
pop
ret
adc
xchg
xchg
lea
fwait
and
or
xor
loope
ret
push
fst
nop
sar
inc
lock
mov
fild
add
repnz
mov
dec
mov
cli
(bad)
fistp
data16
mov
shl
mov
movzx
xor
and
jmp
or
mov
push
and
mov
mov
imul
xchg
and
or
mov
dec
cmp
clc
jecxz
stos
mov
mov
test
je
mov
sub
in
outs
stos
dec
xor
cmp
ja
mov
inc
rcr
add
mov
mov
cmps
sub
cli
sbb
jnp
add
add
xor
jnp
(bad)
ja
sub
mov
mov
mov
push
jmp
add
pop
or
xchg
dec
jae
add
mov
add
sbb
jae
movzx
movzx
sti
jno
add
xchg
jbe
test
repz
inc
je
adc
retf
enter
inc
jmp
dec
jb
or
xchg
pushf
jge
shr
cmp
mov
sub
cmp
pop
adc
pop
jb
add
mov
add
pop
push
inc
or
mov
xchg
pop
xor
bound
and
test
add
push
in
ds
and
inc
pusha
jmp
stos
mov
jg
mov
cmp
inc
pusha
data16
fdivr
add
mov
add
loopne
ret
jmp
jp
outs
xor
mov
mov
ret
cmp
or
mov
adc
js
test
cmp
je
push
mov
fstp
and
popf
icebp
dec
pop
test
cmc
rol
sbb
out
mov
mov
add
dec
or
xor
xchg
mov
movs
adc
jg
inc
sbb
test
inc
test
add
movs
cs
and
inc
test
dec
mov
mov
adc
sar
shl
push
jo
dec
pusha
mov
jecxz
adc
adc
sbb
jp
addr16
je
mov
movs
jae
adc
ret
sar
dec
pop
je
mov
push
ror
pcmpeqw
cmp
jne
push
es
sbb
add
loopne
adc
aaa
in
retf
stc
sub
cmp
jbe
jns
add
mov
sbb
xor
inc
pusha
ja
pop
jb
je
mov
xchg
lea
lock
fisubr
lds
push
inc
cmp
jo
and
leave
paddsb
in
or
dec
cs
retf
lods
aad
int
les
xchg
mov
stos
sub
xchg
add
mov
(bad)
jp
js
imul
ja
out
pop
mov
lar
sbb
and
sub
mov
ins
sbb
test
and
in
inc
mov
inc
add
add
inc
into
test
retf
mov
(bad)
dec
cmp
retf
push
shl
imul
es
add
outs
mov
and
xor
xchg
jae
icebp
cmp
fist
xor
or
ins
add
pop
mov
dec
or
pop
or
push
push
add
(bad)
sub
add
sub
popa
adc
xor
inc
jb
adc
xor
shl
jg
cmp
mov
push
in
add
fbstp
xchg
repz
jo
out
xchg
or
mov
inc
and
push
push
jne
(bad)
(bad)
mov
sti
je
mov
cmp
je
cmp
je
cmp
je
mov
mov
adc
sbb
inc
mov
fild
adc
mov
jge
adc
pop
hlt
push
das
mov
cmp
push
mov
push
jne
fwait
jmp
mov
xchg
mov
out
out
clc
xor
pop
sub
mov
add
mov
or
xchg
sub
pop
ins
ret
pop
into
xchg
jae
sbb
add
cmc
or
test
sar
ret
je
mov
cmp
jne
rol
or
cli
jne
pop
ret
xchg
scas
or
cmp
mov
inc
ror
push
sub
push
inc
dec
mov
cmps
add
(bad)
cmps
add
sbb
fidivr
xor
test
or
or
adc
add
mov
cmp
jg
aam
sbb
jne
jl
call
sti
(bad)
jg
jl
outs
cmp
pop
inc
and
ret
cli
or
icebp
aaa
jno
test
jne
mov
sub
sar
aaa
in
push
push
call
mov
xor
and
sbb
mov
mov
add
loopne
mov
loop
dec
mov
lea
shl
mov
add
push
mov
lock
loope
jmp
push
mov
mov
mov
push
push
arpl
or
push
push
push
jnp
hlt
mov
or
arpl
into
add
add
xchg
sub
clc
mov
xor
(bad)
(bad)
mov
or
dec
cmp
je
cmp
je
test
je
mov
loopne
test
shr
lea
lea
add
js
jg
mov
push
mov
paddb
inc
and
sbb
inc
jbe
pop
pop
pop
ret
mov
dec
add
mov
add
inc
sbb
in
inc
sbb
inc
cld
add
ret
pop
gs
retf
sbb
or
or
add
cld
and
movzx
fisttp
add
jno
mov
adc
sbb
int
pop
and
ins
stos
jl
pop
arpl
test
push
and
add
add
out
jmp
je
xor
scas
enter
cmps
clc
jg
push
mov
mov
shl
movzx
add
outs
test
mov
lsl
adc
les
shl
sar
sub
xchg
rcr
or
inc
or
es
rol
ficom
dec
add
dec
mov
pop
leave
mov
mov
pop
pop
sub
js
jg
ins
mov
mov
je
sbb
jne
push
mov
adc
ror
cli
test
jp
jbe
lea
leave
adc
idiv
and
test
jne
mov
sub
add
push
inc
mov
inc
jbe
jne
scas
jne
pop
push
add
mov
mov
pop
out
mov
mov
mov
push
repz
je
pop
mov
and
scas
mov
movs
shl
pusha
sub
mov
dec
icebp
je
push
mov
lea
push
mov
push
mov
cmp
jg
push
je
or
push
int3
jno
int3
or
and
ffreep
cs
imul
mov
(bad)
fld
daa
cwde
sbb
pop
rol
repz
fisttp
cli
add
mov
add
sub
or
je
hlt
mov
mov
push
push
adc
js
aad
mov
jb
inc
xor
mov
or
sub
inc
or
loopne
pop
test
mov
and
sbb
and
es
adc
stc
sub
mov
mov
test
pop
sub
mov
lea
mov
xchg
push
jb
push
cmp
(bad)
jg
lea
mov
add
shr
mov
aad
scas
adc
lock
cmp
jne
(bad)
push
add
push
lea
push
jmp
cmp
mov
test
push
push
jg
dec
and
push
jmp
lea
inc
and
cmp
out
or
and
mov
cmps
test
not
lea
sbb
add
jecxz
or
in
pop
orps
push
jo
mov
jle
call
jg
mov
lea
and
push
rcr
add
gs
cmp
pusha
std
mov
mov
mov
pop
add
ret
push
push
ficomp
inc
and
jno
push
sahf
jecxz
jne
sbb
loopne
mov
cmps
sub
les
mov
mov
cmp
sti
(bad)
jmp
add
jb
cmp
ja
cmp
jbe
cmp
jb
mov
xlat
jge
out
cs
and
ds
sbb
mov
or
js
ret
call
cmp
jae
mov
add
mov
sub
and
jne
mov
mov
test
loop
or
in
or
or
imul
ror
push
jae
and
jmp
mov
adc
movzx
add
mov
push
mov
mov
rcl
test
jmp
ror
test
add
nop
or
push
add
test
mov
cmc
mov
jbe
adc
cmp
(bad)
dec
and
test
je
mov
retf
mov
ja
(bad)
je
movs
pusha
ins
adc
std
sub
push
add
cmp
aas
jne
mov
jmp
shr
sub
jne
cld
fldlg2
xchg
cmc
adc
mov
jb
mov
adc
adc
mov
adc
sbb
adc
push
pop
pop
sbb
(bad)
fld
sbb
(bad)
(bad)
inc
xchg
(bad)
call
test
and
outs
mov
adc
dec
int
sub
push
in
dec
and
mov
shl
and
or
mov
movs
jg
add
aad
sti
jmp
add
sub
and
cmp
inc
xchg
add
add
sar
mov
jne
adc
jo
xchg
and
test
stos
sbb
out
add
out
les
pusha
scas
sbb
mov
pusha
inc
and
mov
jle
test
je
dec
mov
in
adc
and
mov
es
pop
out
sbb
jo
mov
arpl
jbe
mov
cmp
and
es
cmp
push
fs
movs
movhps
imul
in
inc
cmp
ja
inc
mov
push
push
mov
lea
test
movzx
inc
in
add
sub
ss
mov
push
inc
sub
pop
out
add
fstp
pop
and
xlat
sub
je
cli
add
add
jl
xor
je
or
out
mov
out
fnstsw
je
test
out
add
aas
cmp
lea
je
or
imul
imul
add
add
pop
loopne
icebp
shld
retf
lea
prefetchnta
xor
fwait
test
add
jle
push
dec
fisttp
sub
std
lea
jmp
std
push
add
movs
jne
sti
and
adc
rol
fidivr
push
les
sbb
mov
cmp
mov
cs
sub
mov
jb
pop
pop
sti
out
mov
pop
mov
inc
ret
lea
shr
shr
pushf
inc
outs
xor
loop
je
lea
cli
call
sbb
sub
or
lea
inc
std
fwait
je
sub
and
and
je
cmovae
push
int
and
or
(bad)
jbe
cmp
mov
cli
es
adc
loop
inc
test
jno
or
fisubr
arpl
sbb
adc
and
mov
lock
cmp
les
and
test
mov
jle
mov
jmp
arpl
in
push
inc
sub
mov
mov
mov
mov
jne
pusha
or
lea
int3
or
pop
and
(bad)
sbb
or
jo
sub
jmp
loope
mov
jb
cld
push
ret
cs
shr
shr
mov
sub
sub
je
in
push
and
jmp
nop
je
into
jmp
lea
add
mov
add
add
and
shl
pop
and
mov
add
xor
lock
xor
or
cmp
xor
or
or
and
sbb
and
sub
or
add
out
add
xchg
jne
pop
and
retf
or
and
and
lock
or
jne
jnp
or
mov
in
pop
and
loope
jnp
pop
inc
push
mov
push
or
call
push
add
push
fwait
add
into
mov
jl
mov
add
and
or
adc
pop
push
in
popa
add
add
cmp
enter
pusha
add
ror
xchg
imul
loopne
mov
call
(bad)
dec
adc
cmp
and
xchg
jmp
lds
sub
(bad)
mov
inc
clc
add
enter
and
jmp
shr
lock
add
mov
loop
stos
imul
adc
sub
pop
add
xor
test
jbe
mov
cmp
cmp
into
jb
test
and
movzx
mov
sub
std
(bad)
jmp
ror
adc
out
add
mov
shr
btc
jno
je
add
hlt
xchg
mov
jmp
movzx
movzx
mov
sar
sub
icebp
mov
leave
(bad)
mov
popf
inc
and
add
jmp
repz
mov
movzx
mov
mov
add
enter
xor
out
jbe
mov
mov
add
ffreep
mov
call
xor
leave
jbe
jnp
adc
setl
pop
lods
cmps
sbb
cmp
mov
push
push
hlt
dec
or
movzx
mov
mov
add
inc
jb
cmp
sbb
or
es
mov
xchg
mov
jmp
movups
int
xchg
cmp
jg
mov
test
cmp
pop
in
pop
cmp
test
and
arpl
test
test
push
cmp
xor
and
sbb
test
mov
jmp
pop
inc
add
inc
mov
shr
cmp
enter
sbb
and
mov
jmp
imul
stos
fstp
js
mov
sbb
sub
loope
jecxz
add
sub
mov
loopne
adc
out
and
mov
add
mov
aad
push
add
lea
xor
div
mov
adc
xchg
adc
mov
inc
add
or
pop
adc
mov
xchg
sub
inc
inc
fisttp
mov
test
jl
jo
es
mov
jae
mov
mov
and
mov
cmp
jne
xor
cmp
bound
xchg
ror
jle
adc
sbb
sar
shl
adc
add
jmp
mov
pop
adc
mov
push
imul
daa
fldcw
ret
and
sti
jg
jne
push
jmp
test
jne
xor
pop
sbb
mov
jmp
add
jmp
push
pop
and
pavgb
test
je
outs
mul
adc
ss
jne
push
add
daa
dec
add
fnstcw
adc
rol
and
jmp
out
inc
stos
pop
inc
jmp
xor
cmp
setg
and
add
mov
(bad)
(bad)
mov
je
movzx
movzx
imul
cmp
jle
mov
lea
sti
push
pop
and
pop
mov
jl
fwait
retf
inc
adc
retf
clc
add
sub
adc
push
(bad)
dec
add
mov
adc
push
push
int3
ficom
dec
adc
(bad)
push
adc
mov
jg
pop
push
push
push
mov
xchg
(bad)
cmp
add
or
sub
mov
inc
or
movzx
push
or
dec
mov
movzx
shl
add
add
lock
(bad)
jg
adc
or
jbe
mov
xchg
mov
cmp
mov
or
cmp
jbe
push
scas
mov
mov
xor
int
pop
je
sti
mov
mov
pop
test
je
mov
arpl
int
out
ds
aaa
adc
mov
and
je
push
fist
clc
add
ror
add
pop
push
dec
add
adc
pop
fisttp
mov
pop
ret
push
lea
push
shl
in
jg
into
or
push
push
lea
js
dec
clc
test
add
shl
inc
pop
int
or
fwait
mov
pop
cmp
aaa
mov
xor
mov
and
movzx
icebp
iret
xlat
inc
fdivr
add
stc
add
or
outs
js
pop
ins
and
std
sbb
pop
adc
pop
shl
add
shl
add
mov
mov
cmp
push
cmp
nop
pop
and
pop
and
cmp
and
mov
pop
movzx
cmp
mov
scas
call
xor
jmp
sub
adc
bound
sbb
add
pop
vpor
add
xor
push
push
inc
mov
hlt
je
(bad)
(bad)
or
add
pop
call
xor
push
jnp
push
push
std
addr16
dec
rol
add
rcl
lods
popa
inc
add
fsub
rol
mov
mov
pop
and
test
sbb
add
inc
jo
jmp
test
je
push
mov
inc
dec
jnp
sahf
adc
les
add
ret
test
loope
and
or
test
jne
push
mov
test
mov
adc
les
xor
mov
outs
add
mov
shl
push
push
loopne
add
cmps
aaa
in
pop
pop
mov
ja
jg
(bad)
jg
mov
shr
add
test
jle
push
xchg
mov
mov
push
retf
adc
loop
push
and
ja
mov
add
mov
mov
mov
mov
mov
mov
imul
mov
cmps
and
jmp
add
mov
cmc
sbb
fwait
sahf
push
out
jne
xchg
cmp
inc
or
je
cmp
loopne
adc
es
in
aas
mov
mov
cmp
jbe
push
loope
xchg
lahf
iret
xchg
jg
clc
pop
push
je
test
jne
push
jl
fcomp
xchg
clc
push
push
or
pop
mov
cmp
or
inc
push
push
cmp
or
jmp
in
sbb
sub
inc
sbb
or
sub
aaa
push
scas
fs
fisubr
adc
fisttp
sub
je
test
jne
push
stos
cli
int3
in
xchg
and
inc
pop
pop
pop
mov
inc
cmp
je
push
ja
mov
pop
popa
js
inc
sbb
in
and
add
add
and
add
pop
push
mov
lock
mov
push
sbb
rol
icebp
mov
ja
popf
pop
lock
jne
push
lds
mov
or
dec
scas
add
jne
idiv
jl
cmp
jle
push
push
gs
mov
cmp
or
push
inc
in
or
or
icebp
and
and
inc
cmp
sbb
dec
sbb
sub
scas
and
shl
fld
icebp
or
pop
or
or
outs
cmp
xor
and
cmp
lods
sub
and
and
adc
cmp
sbb
je
push
mov
cli
xchg
push
push
xchg
je
movzx
sub
aam
aam
retf
cmp
ja
mov
adc
push
sbb
mov
add
and
xchg
or
adc
push
jg
and
mov
sbb
sbb
dec
and
push
push
mov
jmp
pop
pop
pop
pop
ret
xchg
push
and
add
mov
or
fidivr
adc
pop
imul
data16
mov
lea
ret
or
jne
xchg
ret
dec
bound
pop
loopne
jmp
jne
push
inc
pop
cld
mov
inc
push
mov
fst
call
mov
call
mov
lahf
ss
je
or
push
adc
jmp
icebp
inc
mov
cmp
je
push
xchg
xchg
mov
and
push
sub
stc
or
js
xchg
clc
aas
and
sbb
es
clc
out
fdiv
fadd
cli
xor
push
add
bound
sbb
push
and
pop
in
loopne
dec
dec
and
mov
ja
lods
jecxz
shl
or
add
movzx
or
jmp
add
cmp
ja
push
lea
cmp
push
pop
and
rcl
push
outs
mov
fmul
cmp
pop
and
daa
out
pop
std
sbb
jbe
lea
shr
jbe
push
or
(bad)
outs
pop
push
cmp
mov
and
and
jo
call
lea
dec
push
aas
aam
adc
sub
bound
lods
bound
add
mov
push
or
jmp
mov
mov
lea
retf
cmp
xlat
jmp
into
push
dec
cwde
imul
xor
pop
mul
pop
and
adc
or
dec
sbb
sbb
xor
dec
adc
adc
imul
or
sub
test
je
inc
or
push
sar
xchg
mov
ds
add
mov
js
fist
jg
push
and
cmp
ins
test
push
pop
cmp
mov
add
cmp
out
dec
mov
cmp
cdq
ja
inc
adc
cmp
fwait
out
cmp
movups
cmp
jae
push
and
dec
neg
or
or
and
pop
pusha
or
sbb
sub
adc
dec
int3
cmc
jl
xor
xor
xor
xor
add
into
xor
add
ins
cmp
and
je
pop
or
pop
jo
mov
and
jl
adc
or
xor
test
or
or
shl
std
gs
(bad)
xor
sub
ficom
jo
js
inc
aas
sbb
xor
mov
inc
int3
add
rcr
mov
loopne
push
adc
add
lods
sbb
or
mov
mov
sbb
cmps
add
lds
push
push
cmp
ins
xchg
mov
dec
cld
imul
adc
mov
ret
test
jmp
and
pop
pop
and
cmp
je
push
mul
cli
pop
pop
and
xchg
adc
add
in
and
sub
das
dec
xor
aaa
in
(bad)
movzx
cmp
jl
push
add
lahf
dec
test
je
test
mov
dec
sbb
cmp
or
scas
mov
push
push
mov
add
test
(bad)
or
arpl
(bad)
xor
fwait
mov
xchg
(bad)
in
loopne
jg
mov
pushf
add
mov
adc
leave
dec
add
sbb
cmp
sub
cmp
leave
dec
mov
push
das
sub
inc
xor
or
mov
inc
outs
cmp
or
pop
test
jg
push
and
dec
lods
add
adc
leave
or
pop
push
iret
int3
bound
cmp
add
sbb
pop
outs
test
mov
push
push
(bad)
ret
sbb
push
add
push
jl
fcom
add
int
pop
stos
sub
(bad)
add
sbb
out
ss
inc
add
repz
add
add
inc
sub
test
idiv
lock
sub
les
pop
cmp
ja
xor
xchg
sbb
pop
add
xor
jo
repz
movzx
push
push
push
aad
cwde
add
fdivr
(bad)
ja
sbb
mov
mov
retf
cmp
ja
hlt
(bad)
jmp
clc
add
arpl
ror
movzx
mov
pop
adc
sub
push
mov
(bad)
cmp
jae
mov
adc
sbb
push
push
or
fdiv
mov
adc
mov
mov
add
out
sahf
aaa
adc
push
sbb
add
or
dec
cmp
push
push
mov
fst
sub
call
call
test
pop
push
xchg
jnp
cmc
adc
adc
push
inc
les
ret
inc
pop
ret
out
add
add
lock
js
jg
adc
mov
cs
and
cmc
je
mov
lea
cmp
jbe
push
push
fsub
adc
mov
jg
push
ret
xor
mov
xchg
ror
cld
mov
cdq
lea
add
stc
test
je
seto
inc
and
or
mov
inc
sbb
push
push
test
add
mov
sbb
inc
nop
fwait
div
push
or
and
leave
cmp
and
jle
push
ret
out
(bad)
mov
jl
adc
jne
movzx
stos
mov
or
add
add
push
movzx
and
jae
mov
add
xor
add
jle
adc
mov
pop
call
in
add
sbb
add
xchg
mov
mov
adc
rol
sbb
sbb
mov
mov
icebp
push
(bad)
(bad)
inc
mov
adc
fistp
dec
and
push
push
push
mov
push
jl
or
sbb
repnz
pop
sub
cmc
iret
xchg
or
push
jp
mov
in
shl
sub
test
jne
push
and
mov
add
aas
test
push
pop
mov
pop
mov
xor
sti
adc
mov
and
enter
mov
aam
data16
iret
add
push
adc
iret
mov
jl
adc
fs
xchg
enter
push
retf
xchg
mov
xor
add
and
je
adc
mov
je
cmp
ins
and
dec
out
jb
mov
push
je
popa
xor
push
inc
or
(bad)
sbb
rcl
cmp
xchg
inc
ins
push
outs
cmp
cwde
aad
inc
and
cs
test
bound
mov
leave
(bad)
arpl
test
jne
push
pusha
add
mov
mov
cmp
ja
shr
push
push
leave
xor
pop
cmp
mov
rcl
adc
or
sbb
xchg
sbb
add
jae
fstp
jl
lea
xchg
sbb
mov
mov
inc
jmp
test
movs
adc
sbb
inc
pop
push
mov
jno
lods
icebp
lds
pop
cmovnp
ret
test
daa
push
mov
cmp
push
in
shl
gs
push
sub
cmp
lahf
add
loop
and
add
sub
test
je
add
gs
inc
or
je
push
and
dec
int3
and
and
or
add
dec
nop
in
outs
add
fbstp
je
adc
mov
adc
and
pop
or
leave
adc
mov
jne
add
fadd
sti
mov
inc
out
xor
add
mov
cmp
popa
cs
add
jno
push
daa
add
movzx
test
movzx
add
ror
add
mov
xchg
into
inc
cmps
sub
scas
popa
adc
shr
jl
das
sbb
fild
inc
and
dec
and
shl
xchg
or
cmp
(bad)
cmp
dec
jmp
cs
push
inc
aaa
and
add
pop
xlat
ficom
adc
push
and
aam
adc
add
movs
or
in
int3
icebp
rcl
(bad)
adc
mov
cmps
or
test
js
inc
cmp
cmp
pusha
gs
nop
and
pop
dec
mov
mov
shr
cmp
jne
adc
xchg
loopne
loopne
inc
xor
test
jbe
lea
inc
aad
cmp
push
idiv
shr
and
add
mov
rcr
iret
les
mov
adc
sbb
test
dec
into
inc
pop
pop
pop
pop
add
daa
mov
sahf
in
pop
rcr
sub
jne
push
mov
sub
popa
loopne
test
je
je
in
or
ss
retf
rol
sub
test
pop
mov
ret
ds
lahf
sbb
xor
enter
das
dec
lahf
mov
je
push
inc
mov
fstp
call
push
cld
(bad)
jg
add
je
test
je
push
retf
sub
lds
adc
pop
sub
xchg
ret
or
xchg
inc
cmp
pop
push
jne
ret
mov
movzx
adc
mov
ror
ror
es
or
in
push
das
adc
mov
retf
add
call
and
xor
pop
xor
or
sbb
pop
pop
cmp
ins
cld
mul
xor
sub
mov
pop
add
add
add
sbb
movs
or
mov
or
cmp
inc
cld
sbb
jg
bound
test
mov
jne
push
out
push
add
pop
push
inc
push
push
and
pop
dec
sti
je
test
je
push
test
dec
and
sub
int
pop
add
pop
inc
adc
pop
mov
dec
jge
or
mov
aas
push
pop
xor
mov
(bad)
das
rol
cmp
dec
xchg
in
push
lea
cmp
ja
push
mov
mov
push
add
mov
add
dec
add
mov
push
shl
add
or
adc
mov
pop
adc
mov
pop
fimul
or
adc
cld
idiv
jne
cmp
jne
jmp
cmp
or
jne
jmp
mov
dec
aam
add
jmp
cmp
jne
cmp
je
push
rol
popf
cmp
jb
push
sbb
mov
push
sar
push
loopne
lock
das
add
jne
movzx
or
outs
sub
sbb
cld
xchg
fwait
sbb
and
(bad)
xchg
in
int3
push
xor
scas
and
push
test
(bad)
cmp
mov
ja
mov
pop
je
adc
dec
add
pop
mov
imul
scas
shl
pop
je
jne
ret
push
cmp
ja
add
cmp
add
std
cmps
cmps
or
pop
cld
xor
push
push
push
push
jmp
add
dec
xor
mov
add
dec
xlat
add
add
jmp
clc
cmp
les
xor
push
jne
push
pop
sbb
mov
movs
sbb
js
and
pop
adc
inc
or
movs
int3
lock
fldcw
sub
data16
mov
shl
jecxz
add
dec
lahf
sbb
lea
add
push
mov
jbe
fild
and
and
cmp
jae
cmp
adc
idiv
popa
xor
mov
add
cmp
jae
push
(bad)
push
call
push
dec
adc
in
sbb
sbb
inc
xchg
mov
add
jnp
fcom
sub
daa
clc
scas
sti
mov
xchg
or
and
sbb
push
dec
mov
dec
iret
and
fstp
push
and
out
aam
pop
into
les
sbb
sbb
add
inc
push
fdivr
cmp
or
cmp
je
push
dec
pusha
stos
adc
mov
and
add
add
mov
push
adc
clc
lds
pop
lea
mov
pop
cmps
cmp
jge
push
mov
add
or
sbb
cs
mov
and
pop
aam
sbb
push
sbb
xchg
inc
lock
ss
and
mov
jbe
push
mov
stos
push
jo
push
sub
mov
cli
xlat
push
imul
inc
jo
std
int3
scas
sub
sbb
inc
push
sub
neg
(bad)
sbb
cld
mov
cli
test
jne
push
test
ret
pop
ret
push
mov
mov
mov
dec
xor
sbb
or
lea
mov
push
mov
je
mov
mov
cmp
cmp
je
cmp
sbb
lock
jae
lock
push
jl
dec
ret
mov
jg
mov
mov
mov
out
dec
or
pop
jns
push
push
push
sub
push
mov
call
push
push
mov
or
dec
dec
(bad)
push
int3
pop
and
push
inc
cs
and
in
cs
das
test
call
das
xor
adc
xor
and
out
pop
pop
ret
dec
jl
retf
das
clc
sub
and
jge
add
xor
or
jg
es
dec
sub
cmp
jb
push
inc
sub
imul
ret
movsx
out
fcomp
sub
and
fnsave
mov
sub
and
loope
icebp
push
push
push
push
arpl
adc
mov
int
push
cmc
and
push
pop
inc
xchg
add
inc
push
add
push
mov
jge
or
ret
data16
cmp
call
mov
inc
cli
xchg
fwait
push
jne
push
ja
je
sub
lods
clc
fld
push
push
xchg
and
test
xchg
and
loop
je
adc
movs
or
lea
fdivr
add
(bad)
mov
push
std
cmp
jb
push
stos
cmp
outs
jbe
movsx
sub
ficom
push
and
clc
fild
adc
inc
or
fnsave
or
jmp
xchg
pop
mov
adc
jb
push
sub
test
sub
jl
sbb
sub
sub
xor
fsub
call
mov
jmp
add
adc
add
das
pop
dec
aas
xor
push
lock
clc
and
jb
ret
push
push
jae
lds
cld
aas
cmp
sub
fadd
sub
and
push
mov
clc
inc
add
add
push
mov
mov
pop
inc
cmc
lods
pop
mov
inc
jo
cmp
lods
push
push
push
int3
mov
push
les
(bad)
mov
loopne
sbb
or
jecxz
pop
or
push
add
add
adc
jns
and
jo
test
inc
add
mov
inc
lea
test
jne
push
add
mov
je
cmp
jo
pop
adc
sub
ret
popa
aas
inc
ins
xor
adc
cmc
mov
jp
pop
or
sti
(bad)
dec
mov
mov
lea
mov
push
mov
push
mov
test
push
mov
cmp
mov
imul
fisttp
pop
lea
sub
push
call
mov
adc
xchg
pop
bnd
out
ret
sbb
mov
mov
xor
jge
ins
adc
xor
leave
sbb
pop
pop
push
push
(bad)
sbb
test
jle
int3
sub
inc
mov
test
sub
inc
loope
retf
add
sbb
and
je
out
adc
lds
mov
and
retf
pop
inc
xor
in
and
ret
pop
and
sub
in
pusha
fst
sbb
jo
push
jl
mov
dec
cmc
push
pop
mov
arpl
or
stc
push
jl
mov
cmp
ins
jb
adc
or
mov
add
push
push
push
aaa
adc
xlat
mov
lock
jmp
gs
bound
stos
and
jmp
cmp
or
mov
lea
cmp
clc
adc
aaa
adc
cmp
mov
sbb
imul
mov
sub
mov
lea
cmc
xor
test
push
ffreep
arpl
test
cmp
jb
push
lahf
or
test
jne
dec
in
adc
inc
and
fist
sbb
sbb
sbb
cmp
mov
and
js
cmp
push
(bad)
mov
ror
add
in
int
adc
pusha
sub
mov
movzx
add
mov
sub
out
movzx
add
movzx
or
cli
add
add
add
inc
and
pop
out
pop
pusha
and
outs
or
ja
and
dec
add
add
cmp
je
adc
add
add
inc
sub
pop
add
lock
adc
lock
add
js
jl
jbe
ja
mov
pop
push
js
xchg
fdivp
xor
cmp
push
pop
sub
jns
cmp
je
inc
xor
sub
mov
xchg
mov
jle
test
(bad)
(bad)
jmp
dec
stos
or
jle
or
mov
adc
lahf
inc
jne
push
push
rol
cmp
mov
pop
xor
xor
or
rcr
je
push
jmp
ins
add
lea
popa
mov
cmp
mov
add
sub
jne
lea
outs
mov
or
add
jecxz
adc
mov
jns
mov
add
sub
mov
push
mov
jno
(bad)
aas
ret
lods
mov
or
add
js
jg
dec
push
jge
mov
mov
data16
(bad)
dec
sbb
cmp
jb
jne
mov
sub
ja
jnp
adc
xor
in
dec
xor
mov
fdivp
jbe
movs
adc
mov
sub
mov
retf
ins
pop
pop
mov
es
fisttp
sub
fcomp
jns
stos
or
fdivr
mov
mov
mov
mov
in
out
call
push
mov
push
mov
mov
inc
add
inc
dec
dec
push
fsubr
fs
pop
mov
jnp
std
out
push
leave
push
mov
mov
cmp
adc
inc
fistp
jge
cmp
mov
sbb
or
test
add
data16
jae
dec
aas
dec
add
add
shl
arpl
into
jle
adc
mov
cmp
push
inc
(bad)
mov
and
add
xlat
jl
mov
sub
cld
dec
mov
mov
xchg
add
imul
add
fwait
pop
adc
mov
xchg
add
(bad)
imul
add
sbb
mov
jns
add
bound
aaa
xor
outs
js
outs
sbb
push
jmp
sub
mov
arpl
sub
cmp
inc
int3
(bad)
dec
jmp
cmp
je
adc
ds
or
test
test
and
movzx
jg
rcr
push
lea
ins
and
jbe
les
add
(bad)
(bad)
jmp
scas
sub
movzx
cmp
lea
je
movzx
mov
sub
mov
(bad)
sti
imul
add
mov
ss
out
push
inc
cld
dec
test
jne
or
sub
mov
out
add
je
and
jbe
pop
cmp
gs
retf
and
mov
push
push
movzx
mov
fld
inc
and
or
std
inc
mov
or
mov
mov
cwde
push
add
(bad)
pop
jle
call
mov
add
cmp
jge
cmp
je
cmp
jge
add
shl
je
div
jge
add
mov
adc
or
rol
les
pop
xchg
sti
gs
sbb
(bad)
ud0
xchg
xchg
jmp
scas
xlat
adc
xchg
push
aas
addr16
jne
sub
jo
jg
(bad)
push
push
xor
test
push
mov
sbb
add
adc
std
adc
in
jmp
cli
test
jl
jbe
add
push
and
in
and
stos
push
(bad)
push
stos
jo
adc
cmc
cmp
sub
add
cmp
je
inc
icebp
cmp
jge
movzx
loope
(bad)
scas
mov
sub
cmp
jle
movzx
dec
dec
or
nop
mov
push
mov
mov
outs
ja
std
add
mov
adc
adc
push
mov
sub
shr
lea
mov
aaa
arpl
neg
je
adc
adc
mov
or
xor
mov
add
mov
rcr
dec
push
mov
pop
pop
and
mov
shl
mov
jne
push
mov
cmp
fdiv
out
cmpxchg
adc
mov
pop
retf
push
sbb
dec
or
mov
mov
mov
push
mov
mov
call
mov
push
mov
pop
mov
add
cmp
sbb
rcr
shl
jl
xor
adc
adc
inc
adc
fwait
shl
or
call
rol
int3
cmp
inc
jg
cmps
movzx
sbb
cmp
mov
add
add
repz
mov
(bad)
fiadd
pop
pusha
cmp
repz
cmp
push
ja
scas
adc
sti
div
cmps
fld
pop
arpl
add
outs
sbb
shl
ror
bound
jbe
(bad)
ror
sbb
ins
and
inc
sti
dec
je
xor
adc
sysret
add
cmp
pop
(bad)
jp
push
adc
push
push
call
jb
jno
add
mov
mulps
movs
mov
pop
pop
lods
adc
mov
sbb
add
mov
adc
lock
xchg
jle
mov
or
add
test
sbb
ret
in
pop
popa
or
lea
jle
std
inc
cmp
add
lea
jp
sbb
jle
ret
or
ins
dec
add
cmp
(bad)
and
push
cmp
bound
add
and
xchg
and
jp
xchg
repz
data16
daa
add
pop
xchg
add
std
cmp
jl
sbb
mov
add
lea
jle
es
adc
mov
mov
jmp
xor
cmp
jge
test
add
adc
push
cmp
cmp
movzx
xor
push
sub
cld
mov
sbb
adc
push
test
xlat
sbb
popa
xor
xchg
or
mov
add
pop
mov
pusha
mov
push
mov
pusha
mov
loopne
(bad)
pop
inc
mov
add
adc
mov
popa
bound
mov
xchg
push
jecxz
mov
adc
outs
fwait
adc
arpl
xchg
add
xlat
(bad)
and
xlat
ja
xor
sbb
xchg
mov
mov
adc
jmp
sub
adc
loop
ret
cmps
mov
test
loope
es
xor
dec
je
add
push
cmp
popa
fs
ss
ss
inc
cld
mov
mov
sub
cmp
jae
movzx
shr
ret
adc
pop
movzx
or
fwait
mov
add
sbb
popa
or
imul
cs
pop
pop
and
mov
mov
iret
or
jns
mov
jle
mov
add
mov
adc
inc
dec
jb
jecxz
test
lahf
xor
adc
in
lea
cmp
test
or
add
mov
aas
rol
dec
and
cmp
jb
movzx
lock
and
and
test
fnstenv
push
inc
inc
call
mov
jge
mov
or
mov
pop
pop
and
mov
push
sbb
ss
mov
push
pop
jg
xchg
jmp
xchg
jbe
pop
mov
add
jge
ret
mov
xchg
or
movzx
(bad)
jg
xor
lea
add
add
add
cmp
jl
sbb
push
aad
cmovnp
mov
aas
cmp
fimul
xor
aas
aad
aaa
out
push
or
jne
or
jne
adc
jne
fcomp
std
call
and
adc
leave
or
xchg
ror
ss
mov
add
add
popa
outs
adc
inc
aas
and
cmp
push
cmps
or
xlat
jne
imul
sbb
or
or
dec
jg
and
xor
pop
mov
pop
ds
std
ret
cmp
jl
xor
test
sar
cmp
add
(bad)
and
bound
mov
jle
jae
mov
dec
or
std
or
les
cmp
xor
pop
dec
xchg
dec
mov
xor
cmp
jle
mov
push
or
jnp
sub
mov
or
mov
or
cmp
sbb
stos
arpl
cmp
or
or
push
dec
std
sbb
mov
not
mov
adc
push
or
sub
cmp
maxps
iret
adc
pop
add
mov
add
sub
jne
pop
pop
xor
add
ja
je
mov
mov
pop
(bad)
sahf
mov
and
fnsave
or
sub
or
mov
mov
cli
push
sub
push
lea
add
and
xor
test
(bad)
lea
mov
add
sbb
call
clc
jnp
inc
add
ret
in
(bad)
jg
cmp
test
je
mov
movzx
sub
(bad)
(bad)
(bad)
fisttp
xor
nop
mov
and
or
sub
shr
add
test
jg
shr
mov
add
xchg
clc
add
repz
inc
test
in
inc
push
jl
sub
mov
push
push
push
mov
mov
cld
jg
mov
xor
or
xor
cmp
adc
or
xchg
jecxz
xchg
mov
cmp
je
add
fnstsw
mov
inc
and
mov
jg
fsubr
add
add
jl
cmp
inc
sti
(bad)
sti
add
add
mov
jmp
xor
inc
mov
fild
add
or
cwde
and
movzx
sub
mov
movs
sbb
cdq
sub
mov
sar
cmp
clc
adc
add
dec
jp
dec
add
and
mov
adc
jge
and
das
mov
or
cmps
movs
pop
inc
push
cld
test
sub
xchg
or
add
or
cmc
adc
mov
mov
add
je
mov
mov
adc
shl
movzx
jmp
movzx
add
mov
adc
add
add
rol
out
jge
rol
(bad)
dec
mov
(bad)
xor
jmp
lea
push
push
mov
cld
or
lock
ja
adc
push
daa
jge
mov
addr16
in
adc
mov
scas
push
sbb
add
mov
push
sbb
inc
push
cmp
mov
add
lea
add
sbb
push
mov
repz
jle
jle
push
fwait
mov
(bad)
add
ret
and
hlt
inc
enter
mov
clc
adc
lock
push
movs
adc
mov
ja
les
push
and
shl
int3
vandnps
lds
sub
ja
mov
push
push
push
pop
add
mov
aaa
mov
cmp
sbb
lahf
mov
shr
mov
mov
daa
fwait
or
popa
out
xchg
dec
stc
or
push
push
mov
test
mov
dec
pushf
mov
ret
cli
or
lea
repnz
push
and
jmp
shr
add
fbstp
(bad)
loopne
pop
(bad)
push
sub
rcr
call
cmp
adc
call
mov
mov
jle
test
jbe
mov
cmp
inc
icebp
sub
jne
fisttp
and
sar
xchg
or
and
mov
mov
jg
or
add
jmp
mov
inc
dec
add
add
ret
outs
sbb
sbb
and
push
push
push
push
(bad)
pop
add
cmp
out
jns
je
sbb
dec
mov
aas
cmp
push
lea
jle
mov
shl
mov
xchg
mov
jne
mov
mov
sahf
jo
jmp
dec
adc
inc
or
inc
sbb
cmp
shr
add
mov
mov
fsub
test
mov
mov
rol
pop
jnp
jae
sub
sti
or
add
retf
popa
mov
inc
mov
add
or
mov
mov
adc
enter
adc
ja
arpl
mov
mov
or
dec
bound
mov
shl
add
ins
dec
add
or
jns
test
pop
je
mov
or
jnp
in
xor
add
sub
mov
xor
mov
add
icebp
dec
out
xor
ret
mov
cmp
pop
mov
add
xor
mov
ret
pop
es
dec
(bad)
icebp
mov
push
mov
call
xchg
add
ror
popa
add
inc
das
mov
mov
mov
xchg
int3
repz
aas
mov
leave
test
pop
jle
push
mov
(bad)
(bad)
(bad)
dec
mov
imul
add
mov
add
xor
mov
mov
inc
cmp
jl
pop
pop
mov
daa
or
js
call
(bad)
push
mov
mov
mov
push
clc
pop
add
ret
mov
rol
dec
je
mov
pop
add
lds
or
mov
jg
mov
mov
mov
imul
mov
add
mov
out
stos
shr
inc
cmp
jl
mov
sar
dec
rcl
and
mov
call
inc
out
pop
push
add
fucomi
and
jl
(bad)
out
mov
xor
push
adc
mov
test
je
push
add
or
and
(bad)
(bad)
inc
xlat
outs
adc
or
pop
mov
cmps
and
or
jmp
pushf
push
xor
cmp
sub
xor
push
xlat
sbb
xchg
pop
enter
adc
push
ss
test
push
mov
add
and
jmp
mov
xor
sar
(bad)
sbb
(bad)
cmp
test
je
push
lea
push
fwait
out
es
add
pop
adc
lea
add
fsub
push
adc
cdq
rcr
lea
inc
dec
cmp
lea
cmp
mov
mov
adc
xor
adc
cmp
fcomp
cmp
and
test
inc
cmp
sub
inc
mov
xchg
inc
lea
inc
add
pusha
cmp
out
mov
cmp
repnz
mov
xchg
into
test
lea
shl
je
inc
dec
cmp
sbb
sbb
and
dec
lea
jno
add
inc
dec
cmp
add
dec
push
cmp
je
lea
jg
mov
lea
xor
dec
pop
popa
inc
ds
sub
lea
xor
mov
fs
add
fdiv
xchg
je
lea
sbb
adc
pop
xor
fwait
lock
push
fist
sahf
pusha
push
into
jl
adc
sbb
mov
xlat
arpl
stos
sbb
push
gs
pop
movs
(bad)
jg
sbb
add
cmp
jl
(bad)
enter
popf
jle
mov
push
je
jae
and
int3
add
add
xchg
ret
cwde
das
push
pop
sbb
call
mov
jo
add
pop
push
mov
test
sbb
ror
push
test
pop
xor
cld
mov
gs
jl
push
jg
cmp
je
jo
(bad)
call
pop
test
pop
lock
lea
adc
jmp
dec
mov
leave
dec
jne
inc
mov
sahf
pop
cmp
out
cmp
fsub
stc
cmp
dec
cld
lahf
or
add
or
and
and
in
add
rcl
pusha
xor
sbb
pusha
cmps
cmp
std
(bad)
dec
outs
test
adc
lea
daa
stos
mov
pop
fnstenv
(bad)
call
xchg
daa
inc
or
(bad)
ja
(bad)
pusha
pop
jp
push
jl
add
adc
add
pop
sbb
or
js
pop
mov
mov
or
push
mov
les
push
xchg
fadd
getsec
jl
adc
inc
and
xchg
mov
mov
cmp
jb
mov
push
sub
inc
jl
jle
mov
cmp
mov
dec
test
jle
jle
mov
inc
or
xchg
out
pop
fwait
cmp
inc
and
add
push
add
pop
or
jg
aad
fdiv
test
push
cli
call
or
jl
push
xor
test
enter
fxch
arpl
mov
adc
dec
mov
add
add
test
add
or
sbb
in
add
cmp
iret
repz
inc
dec
dec
push
repz
repz
pop
pop
pusha
fs
repz
push
jl
iret
repz
test
iret
repz
cwde
pushf
mov
iret
test
mov
mov
cmp
(bad)
enter
fcmovnbe
ffree
add
mov
add
ja
int
mov
(bad)
mov
add
lock
sbb
or
hlt
aaa
clc
in
call
push
add
inc
cwde
xchg
data16
or
jbe
or
or
mov
repz
sbb
and
mov
xor
xor
out
mov
mov
movs
sbb
or
add
or
xor
jno
add
out
or
dec
aaa
(bad)
fucom
mov
out
scas
int3
pop
inc
mov
or
lods
mov
ins
or
sbb
adc
or
(bad)
mov
js
adc
data16
sbb
popa
inc
call
fisttp
mov
cwde
add
(bad)
repz
movs
test
add
mov
mov
mov
sbb
jb
adc
add
loope
sub
add
add
(bad)
or
daa
int3
or
shl
outs
mov
mov
fmul
es
push
cwde
xchg
daa
in
and
pop
out
or
adc
or
lock
mov
hlt
or
mov
sbb
add
push
add
add
aaa
(bad)
fnsave
xor
or
xor
mov
sahf
outs
mov
and
sahf
out
sahf
sub
xor
cmp
jns
out
inc
dec
dec
push
push
out
sahf
out
pop
pusha
fs
ins
jo
js
cmp
jns
mov
out
pushf
mov
jns
lods
mov
mov
out
(bad)
enter
out
sahf
out
fsub
in
lahf
out
sahf
in
lock
clc
cld
add
iret
repz
leave
add
or
adc
iret
repz
sbb
and
repz
repz
xor
cmp
repz
inc
inc
dec
dec
push
push
cmp
repz
pop
pusha
fs
ins
jo
js
iret
repz
add
repz
pushf
mov
iret
rep
mov
mov
iret
rol
int3
rcl
cmp
repz
fsub
in
repz
repz
lock
clc
cld
sahf
out
rol
mov
adc
out
adc
sbb
and
xchg
mov
cmp
fnstsw
ror
cmp
or
mov
push
push
lea
add
inc
xchg
sub
fsubr
jae
mov
cmp
jbe
(bad)
jmp
jo
mov
add
cmp
jb
push
(bad)
inc
pop
jmp
mov
movzx
mov
(bad)
(bad)
cld
fwait
bswap
movzx
mov
shr
shl
and
or
mov
or
push
lock
ins
idiv
iret
jle
fadd
cmc
jae
mov
mov
inc
pop
nop
cs
jg
cmp
cmp
xor
inc
and
xor
mov
shr
and
shl
or
int
push
lahf
and
in
call
sub
mov
sti
mov
aas
dec
aaa
mov
shl
or
aas
push
inc
lahf
cdq
add
jb
mov
sbb
imul
sub
inc
jmp
push
mov
mov
xor
jne
pop
jb
outs
add
xchg
inc
and
pop
pop
push
clc
fisttp
or
mov
pop
xor
xor
mov
and
dec
pop
dec
(bad)
sub
sub
sub
inc
lods
xor
shl
dec
xor
test
inc
(bad)
jge
dec
inc
or
inc
inc
adc
movd
add
or
or
add
push
in
push
(bad)
xor
test
jp
and
inc
les
gs
lea
test
or
add
ja
cld
aas
shr
inc
cmp
mov
xor
loope
add
dec
cmp
clc
xor
cmp
or
sub
sbb
add
arpl
lea
jmp
adc
(bad)
and
cmp
dec
mov
jg
(bad)
fisttp
add
cmp
mov
push
movsx
test
mov
sbb
(bad)
outs
pusha
sbb
dec
sub
and
pop
aas
mov
mov
stc
and
loope
or
cmp
jne
lods
push
pop
add
dec
ds
and
push
jmp
inc
push
xor
mov
sbb
cmp
not
adc
(bad)
push
jmp
inc
dec
scas
out
adc
pushf
adc
push
mov
cmps
mov
inc
cmps
or
mov
iret
sbb
inc
cmp
xor
movs
push
xchg
cwde
cmp
push
test
cmps
push
cmps
movs
jecxz
ret
int3
lahf
out
push
es
add
fcmovnbe
(bad)
out
mov
mov
mov
aad
mov
mov
mov
mov
add
pop
sub
xor
call
mov
inc
mov
mov
mov
mov
mov
(bad)
(bad)
dec
pop
dec
mov
mov
mov
mov
mov
mov
mov
lock
inc
rcr
dec
push
jne
inc
push
ins
sbb
aas
mov
sahf
jg
mov
fadd
mov
sahf
jnp
mov
sub
cmp
pop
cmp
dec
das
loope
inc
sbb
sub
mov
jecxz
push
sbb
xchg
iret
(bad)
mov
ja
pop
xor
adc
lock
loop
sahf
test
or
sahf
or
mov
jl
push
mov
sahf
and
adc
inc
pop
xlat
mov
or
les
jp
test
pcmpgtw
dec
add
push
mov
lods
popf
popf
mov
jbe
adc
add
inc
or
mov
sbb
pop
test
xchg
mov
mov
sub
ja
lock
add
repz
mov
jne
mov
ja
call
mov
xor
test
jle
lea
(bad)
cmp
mov
add
mov
add
xor
and
(bad)
dec
cmp
jl
jmp
mov
movzx
mov
jg
mov
inc
adc
shl
rcr
push
push
push
push
mov
adc
inc
cmp
and
inc
ins
and
inc
and
inc
ins
mov
mov
add
cmp
add
fwait
clc
cmp
mov
ja
out
in
mov
push
aas
add
inc
sub
inc
mov
lea
push
(bad)
push
inc
aas
in
mov
adc
outs
cli
pop
mov
adc
test
mov
mov
shr
iret
push
xor
lods
jg
aam
les
in
ss
jg
lock
push
cmp
mov
add
call
push
aas
test
add
inc
(bad)
and
enter
test
and
outs
sub
mov
mov
lods
push
and
jg
pop
xor
mov
adc
lods
add
push
in
lea
aaa
xor
inc
add
movs
cmp
les
pop
push
sub
sbb
add
add
adc
hlt
cmp
or
dec
and
loope
sbb
paddb
mov
loope
repz
mov
clc
stos
stos
push
stos
and
int3
mov
mov
sub
repz
or
cmp
jg
les
ret
mov
mov
add
fcomp
test
or
jecxz
enterw
lock
sub
xor
fcmovne
adc
jge
cmp
fild
scas
push
in
cmp
out
aas
xor
lea
fdiv
jbe
push
pop
mov
pop
cmp
or
rcl
jo
jnp
add
sbb
xchg
sbb
dec
pusha
adc
sub
lahf
or
repnz
arpl
loopne
repz
rep
mov
movs
idiv
je
test
jne
outs
push
push
fcom
pop
in
sub
pop
cmp
outs
in
ja
mov
jmp
inc
mov
dec
add
into
push
cmp
repz
int
sbb
pusha
adc
jno
lea
push
inc
adc
cmps
mov
inc
cs
add
lea
rcr
fist
retf
and
add
retf
cmp
dec
inc
add
cmp
cmp
mov
gs
sub
int3
shl
mov
int3
mov
xor
jb
sar
xlat
jne
push
rep
cdq
cmc
sub
cmc
and
sbb
push
xor
xchg
add
inc
adc
jnp
cmp
sub
dec
adc
xchg
xchg
adc
in
push
aaa
or
pop
push
and
lea
inc
or
add
sbb
rol
div
enter
movs
lahf
test
dec
imul
ret
mov
and
mov
inc
shl
push
es
mov
lods
push
cmp
cs
sbb
mov
sbb
bound
repz
adc
stc
pop
inc
stc
(bad)
call
jl
mov
push
(bad)
jb
push
ret
rol
scas
mov
(bad)
xchg
dec
mov
(bad)
sar
(bad)
call
cmp
xor
mov
xchg
in
test
aaa
pop
adc
xor
pop
sar
add
loope
in
ret
int
loopne
add
clc
iret
pop
or
add
sbb
jbe
lock
push
mov
icebp
push
xor
lea
mov
push
dec
adc
ror
add
outs
sub
popa
mov
mov
mov
push
mov
xor
and
lods
cmp
retf
push
out
sbb
mov
mov
add
adc
ja
add
push
push
out
add
lods
adc
fsubr
mov
jne
or
or
jnp
shl
add
xor
ins
or
js
mov
cwde
ins
aam
push
sbb
pop
mov
inc
or
sub
stos
add
arpl
mov
or
add
push
push
xor
mov
push
iret
jl
aas
push
push
lock
mov
mov
ins
(bad)
pop
and
hlt
pop
adc
mov
mov
mov
popa
sub
adc
sbb
rol
icebp
pop
adc
xor
ror
sti
add
push
mov
or
xor
add
ss
push
or
adc
and
out
loope
or
dec
aam
dec
adc
retf
mov
out
lods
jmp
add
push
les
hlt
xor
push
aaa
sahf
mov
int
pop
push
sar
or
cmp
leave
xchg
sbb
mov
jmp
mov
adc
jmp
cmps
test
outs
mov
or
jmp
mov
mov
pop
push
mov
cli
outs
lods
sbb
pop
jg
cld
lea
sub
mov
add
mov
adc
add
xchg
sbb
add
sbb
jl
inc
adc
mov
(bad)
push
add
push
xchg
sub
sub
ret
pusha
adc
movs
push
or
jg
sahf
inc
sub
push
mov
sub
bound
mov
mov
sbb
mov
fwait
stos
sbb
push
push
ins
add
outs
inc
add
mov
and
mov
sbb
lahf
imul
jnp
out
loop
call
inc
and
push
sbb
xor
fcomp
jno
sub
aas
lea
sbb
ins
jo
push
push
outs
bound
dec
xor
mov
mov
pop
xchg
jp
fs
add
xor
jnp
and
mov
inc
adc
aad
xchg
add
jae
mov
out
sbb
cmp
arpl
jae
shr
add
out
jp
and
mov
ins
mov
(bad)
in
movs
add
out
fmul
xchg
shr
(bad)
push
push
mov
mov
xchg
inc
push
mov
add
(bad)
jge
push
mov
pushf
adc
leave
shr
mov
cld
push
xor
out
call
jl
adc
fst
inc
sbb
add
pop
mov
ret
mov
jb
mov
mov
hlt
adc
ror
jp
xor
mov
leave
cmp
jo
jle
inc
pusha
or
xchg
mov
dec
dec
cmp
and
push
fs
cld
das
pop
lahf
cs
das
add
retf
add
push
push
pop
xor
jo
cwde
push
cmps
movs
mov
and
adc
xor
cwde
sbb
test
loopne
es
inc
cs
pop
aaa
add
(bad)
cli
mov
aam
inc
movs
test
sbb
(bad)
mov
pop
jnp
and
mov
mov
popf
dec
adc
std
mov
shl
sub
sbb
and
sbb
idiv
cdq
sbb
xchg
(bad)
push
in
mov
push
mov
and
cmp
retf
mov
xchg
test
pop
xchg
or
int
sahf
daa
sub
xchg
ret
mov
cmp
adc
dec
fidivr
pushf
push
aaa
dec
push
sbb
xchg
fadd
jb
(bad)
dec
pop
fwait
inc
and
mov
fdivr
and
xor
sbb
push
xchg
ins
jb
push
xchg
in
into
jne
dec
xor
cmp
cmp
cld
pushw
data16
mov
lods
inc
push
xchg
mov
mov
mov
xor
test
mov
sbb
mov
test
je
mov
idiv
inc
mov
ret
mov
push
mov
test
jne
mov
mov
or
sti
pop
int3
aam
je
mov
pop
ret
mov
xor
lea
inc
push
inc
mov
cmp
jne
mov
jno
ds
out
push
jne
mov
cdq
add
or
shl
push
mov
mov
sar
shl
and
push
mov
mov
mov
inc
or
mov
cmp
push
mov
sbb
cld
xchg
js
xor
pop
in
or
push
mov
mov
sbb
call
shl
jbe
das
xchg
add
lahf
inc
mov
cwde
xor
sub
jmp
cwde
sub
mov
inc
mov
pop
add
ja
or
rcl
add
shr
adc
or
or
mov
or
idiv
out
cli
push
addr16
(bad)
jbe
sbb
into
push
mov
mov
add
dec
(bad)
dec
(bad)
jne
pop
lea
pop
das
mov
push
push
mov
mov
mov
test
jne
add
cmp
cmp
dec
add
add
add
push
push
sbb
mov
jbe
jmp
lock
sti
add
out
mov
inc
je
pop
pop
pop
mov
pop
ins
cmp
jle
ret
fist
aas
dec
mov
and
mov
mov
push
mov
inc
adc
out
jns
clc
dec
icebp
push
sub
mov
push
mov
adc
sub
add
(bad)
jg
jge
mov
mov
xor
cmp
mov
add
or
add
sbb
push
ja
push
mov
sbb
mov
jg
inc
inc
and
neg
sbb
inc
cmp
cmp
cli
ds
lods
sbb
ins
and
data16
jne
adc
and
inc
add
stc
jne
pop
pop
pop
xor
mov
das
mov
sub
and
xor
mov
cmp
push
inc
mov
jecxz
loopne
or
(bad)
xlat
ja
(bad)
cmp
adc
jne
mov
rcr
outs
ret
sub
rol
sub
das
jg
imul
push
and
pop
fadd
mov
or
or
mov
lea
cwde
int
aas
add
fild
or
cmp
cmps
and
lods
dec
sub
jg
or
add
into
outs
outs
push
dec
mov
mov
test
not
test
inc
sbb
inc
add
sti
sbb
je
jmp
sbb
jbe
add
mov
test
icebp
push
inc
sub
pop
fadd
sub
jmp
add
imul
adc
add
inc
mov
cmp
jne
and
(bad)
pop
mov
mov
jmp
and
inc
or
inc
adc
add
push
add
icebp
jmp
stos
test
cmp
dec
cmp
jne
xchg
dec
popf
push
push
sub
jnp
add
mov
jne
mov
(bad)
clc
jne
mov
mov
test
sub
inc
jl
stos
adc
stos
mov
cs
and
sar
sub
push
sub
pop
dec
call
jmp
gs
test
cwde
mov
(bad)
push
push
lahf
ins
sbb
inc
xor
mov
cmp
mov
mov
jmp
pop
xor
jae
mov
jl
fld
sub
jge
inc
push
lea
xor
test
add
jne
push
mov
mov
adc
mov
(bad)
pop
pop
jbe
dec
mov
pusha
pop
or
xor
int3
aad
push
scas
push
cmp
mov
es
popa
js
xchg
push
mov
std
std
dec
sbb
shld
add
push
fcom
aam
je
lock
test
mov
loopne
push
lock
or
pop
add
adc
(bad)
frstor
add
rcr
leave
jmp
mov
sub
shl
push
mov
sub
cmp
jae
or
(bad)
in
push
mov
cmp
push
jae
mov
fwait
xor
jae
add
shr
push
pusha
das
jae
adc
dec
jne
pop
dec
and
mov
ret
sub
enter
add
push
push
mov
hlt
pop
mov
push
shl
dec
add
mov
loope
push
push
mov
pop
(bad)
cld
jg
mov
mov
add
(bad)
clc
call
pushf
or
jae
mov
cwde
add
mov
pop
mov
(bad)
dec
pop
mov
mov
mov
pop
pop
out
outs
cmp
adc
sub
sar
cmp
push
adc
and
bnd
sbb
add
push
out
push
mov
cmp
shr
ror
cli
cwde
sbb
ffree
inc
sbb
enter
and
in
out
(bad)
and
push
mov
sahf
pop
pop
pop
imul
mov
sub
mov
push
mov
mov
cli
or
adc
ret
jmp
push
call
sub
add
(bad)
or
dec
hlt
pop
mov
mov
add
mov
sbb
add
int3
push
and
stos
pop
xchg
inc
and
mov
arpl
(bad)
(bad)
stc
cmp
jb
push
xor
push
popa
jmp
inc
add
add
pop
fmul
inc
and
or
push
pop
sbb
in
or
sub
push
je
fs
xor
cmc
aas
adc
add
mov
inc
sbb
cld
shl
inc
add
popa
add
dec
or
and
add
or
xor
mov
jmp
cmp
push
movs
inc
add
jo
jne
mov
shl
scas
mov
add
mov
and
out
and
and
mov
jmp
dec
cli
push
stos
jb
push
sub
dec
add
jbe
test
mov
je
cmp
jne
mov
or
jbe
mov
add
push
add
dec
sub
push
xor
jp
push
add
stc
popa
inc
aad
fld
mov
out
mov
adc
loopne
out
(bad)
adc
stc
mov
xor
cmp
jne
inc
xchg
fcomi
mov
xor
sbb
mov
add
mov
mov
pop
outs
cli
movsx
pop
pop
mov
pop
sub
repz
sub
mov
or
sub
or
jge
push
aas
lock
or
cmc
jmp
(bad)
or
std
jo
adc
mov
jne
je
hlt
invd
inc
add
mov
movs
pop
push
mov
mov
fdivr
test
push
lods
add
outs
pop
add
ror
mov
or
jae
cmp
push
je
mov
xor
cmp
jb
push
call
cld
aaa
inc
in
iret
lock
jmp
xor
mov
adc
stos
cmps
jae
cmp
fmul
or
mov
cmp
adc
mov
inc
mov
mov
cmp
je
mov
mov
mov
mov
dec
sub
and
add
inc
mov
cmp
xchg
push
fidiv
leave
sbb
jg
mov
and
adc
fistp
and
mov
mov
jge
xor
mov
out
jmp
push
mov
mov
mov
mov
test
ins
jns
pop
repnz
dec
out
mov
fisubr
mov
or
test
jbe
mov
mov
je
sub
push
daa
fwait
fs
pop
mov
inc
aas
adc
sub
inc
imul
mov
iret
jnp
int3
add
stos
pop
sbb
mov
mov
fwait
mov
je
dec
mov
test
sbb
sbb
(bad)
out
dec
add
push
mov
aad
mov
clc
inc
daa
(bad)
cld
cmp
je
out
cld
mov
sahf
mov
rcr
mov
ins
and
adc
xchg
inc
mov
popa
adc
inc
jne
nop
or
das
add
pop
jne
jcxz
outs
cmp
lock
lea
add
(bad)
daa
dec
or
pop
ss
in
imul
mov
cld
mov
mov
mov
je
and
jg
add
ficom
push
jle
jl
or
(bad)
push
add
cs
mov
sub
mov
enter
adc
adc
cmp
or
sbb
std
ja
push
int3
push
mov
int3
push
push
mov
add
mov
mov
push
rol
test
push
and
adc
test
jne
mov
out
jb
mov
dec
fisubr
int
setl
test
mov
test
fsubr
out
ss
mov
dec
je
cld
push
(bad)
fild
mov
cmp
jne
push
push
push
or
mov
rcr
movs
mov
push
sbb
pop
stc
xchg
pop
jl
pop
ret
or
mov
sbb
adc
out
loopne
mov
add
push
adc
and
xor
sbb
push
push
ins
push
pop
sub
push
cmps
xor
pop
jg
push
(bad)
int3
test
cmp
dec
pop
(bad)
jmp
rol
adc
or
sbb
add
shr
(bad)
loope
scas
push
add
or
or
fwait
repnz
fst
into
rol
rol
add
arpl
jmp
push
inc
cmp
dec
sub
ja
rol
fiadd
mov
or
or
std
mov
add
sbb
push
mov
xor
je
cmp
sbb
add
inc
test
cwde
or
mov
push
inc
push
add
push
push
push
test
add
cdq
cmp
add
dec
popa
repz
sub
sbb
sbb
mov
shl
mov
xor
call
scas
pop
adc
adc
dec
push
leave
int3
push
adc
or
scas
mov
or
std
scas
mov
adc
les
ret
scas
push
scas
adc
or
adc
mov
sub
pop
scas
adc
leave
xor
retf
jmp
shl
loopne
jmp
loopne
mov
retf
adc
dec
outs
ret
inc
and
hlt
push
push
dec
jo
or
and
and
rol
test
mov
or
ret
jb
mov
cwde
sub
mov
mov
add
fisttp
int3
cmps
xor
daa
xor
mov
sbb
loopne
stos
lahf
sbb
sahf
xor
mov
sub
mov
jne
sbb
sahf
cwde
mov
and
sti
push
hlt
or
mov
cmc
or
lock
xor
sub
mov
mov
sbb
cmp
call
pop
shr
mov
add
sbb
sahf
lods
sub
loopne
rol
call
add
mov
icebp
mov
push
pop
mov
push
lea
mov
sbb
mov
mov
call
mov
and
mov
xor
data16
int3
jmp
ja
or
xor
lea
shl
js
adc
sub
rol
mov
sbb
push
mov
lods
jo
push
out
mov
and
jmp
jmp
jb
xor
or
xor
jbe
add
lock
inc
jl
xchg
js
shr
mov
inc
add
or
dec
push
mov
pop
adc
(bad)
jle
mov
cmp
jb
mov
or
outs
dec
inc
push
repz
mov
sbb
pop
sub
inc
ins
mov
mov
hlt
or
rcr
sbb
jbe
dec
and
and
fild
fdivr
mov
sbb
cwde
mov
adc
xor
pop
pusha
cmp
and
aad
(bad)
xor
push
push
push
jg
mov
inc
mov
ret
jg
ret
sub
jl
adc
push
sub
push
push
push
jmp
inc
and
xor
add
mov
adc
inc
mov
cdq
sub
mov
push
out
imul
(bad)
adc
int3
mov
cmp
jb
mov
in
add
push
mov
int
push
in
jb
inc
popf
xor
lahf
mov
cmp
mov
mov
mov
jle
sub
arpl
sbb
sbb
pop
inc
out
call
mov
mov
mov
inc
pop
cmp
aaa
adc
mov
mov
mov
mov
pop
mov
fisttp
icebp
mov
add
sub
inc
add
sub
scas
(bad)
or
popf
dec
mov
lea
add
inc
mov
stos
mov
aam
adc
pop
sub
mov
xchg
add
mov
sbb
test
das
addr16
sbb
push
pop
jge
adc
mov
sbb
cli
pushf
mov
push
adc
loopne
sahf
out
mov
or
jno
adc
scas
push
sahf
cmp
or
sahf
sahf
cmp
and
mov
out
xor
sahf
sahf
mov
cmp
sahf
sahf
pop
mov
data16
pop
sub
inc
sub
add
sbb
in
push
adc
and
(bad)
aad
and
mov
push
pusha
inc
dec
cld
adc
mov
adc
or
or
xlat
movs
xchg
add
sub
adc
in
or
xchg
out
lahf
adc
xor
or
pop
je
lea
cmp
sti
(bad)
test
je
lea
xor
je
lea
sub
push
cmp
cmp
inc
lea
cs
xor
mov
cs
and
je
retf
(bad)
rcl
rcl
mov
pop
ffree
jns
add
jle
push
sbb
je
test
xor
xor
or
outs
call
ins
les
mov
pop
dec
sbb
inc
xor
cmp
jl
mov
jl
in
inc
mov
adc
jne
adc
(bad)
jle
xor
add
add
sbb
jmp
fucomp
add
fimul
mov
push
mov
jmp
loop
les
cmp
fsub
loopne
push
push
jg
jmp
inc
jno
push
fisubr
sbb
sbb
dec
js
adc
(bad)
xor
dec
out
add
cmp
es
lahf
lahf
out
and
inc
jbe
add
push
(bad)
push
mov
push
push
add
dec
mov
push
and
cdq
cdq
add
ds
test
(bad)
dec
sahf
in
sbb
push
mov
xchg
xchg
pop
adc
cs
adc
jo
xchg
xchg
int3
cli
clc
or
cmp
xor
sar
jg
add
(bad)
(bad)
call
jp
scas
jnp
or
aaa
inc
fcomp
inc
and
mov
adc
frstor
mov
(bad)
push
wrmsr
inc
lods
lock
jle
shr
in
arpl
je
test
mov
call
push
pop
push
jnp
cmps
sahf
icebp
push
adc
aad
jle
dec
mov
je
stos
and
lea
in
test
leave
inc
in
cmp
aas
inc
jo
jl
inc
lock
jmp
inc
ds
js
gs
sbb
mov
xchg
add
or
imul
ret
imul
jl
lea
es
je
jecxz
lea
test
into
or
cmc
adc
adc
jp
out
inc
or
loope
cld
out
xchg
inc
ret
dec
je
into
cwde
mov
pop
lea
es
sub
cwde
jecxz
in
inc
inc
je
cld
add
pop
lea
inc
mov
test
jbe
pop
mov
push
scas
mov
daa
jb
push
mov
dec
push
and
mov
sbb
pop
je
icebp
call
popa
pop
sub
lahf
sub
cli
or
mov
in
push
jmp
mov
lea
out
push
mov
sti
fadd
cmp
jle
gs
or
jle
lock
fisub
jle
test
daa
pop
or
mov
rcl
into
jecxz
adc
aaa
cwde
pusha
mov
fsubr
inc
and
sbb
pop
or
add
jne
jle
inc
xor
fldenv
test
fdiv
push
mov
call
pop
lea
dec
ficomp
xchg
in
inc
dec
std
and
or
mov
mov
shl
pop
xchg
inc
or
int3
mov
pop
test
stos
pop
ins
xchg
aam
and
xchg
pop
xchg
mov
inc
jnp
test
mov
jae
inc
arpl
(bad)
rcr
jg
rol
mov
jl
add
mov
test
sbb
add
inc
aad
jnp
scas
push
(bad)
std
adc
or
inc
mov
push
cmp
shr
call
mov
aam
mov
xor
mov
mov
or
loop
mov
daa
inc
rol
inc
or
add
bound
add
or
iret
loop
inc
pop
or
stc
push
mov
push
icebp
jns
add
scas
sbb
ja
push
adc
pop
pop
xor
pop
and
test
jle
pop
outs
jo
in
pop
retf
jno
je
cmp
pop
add
pop
inc
and
scas
mov
sbb
or
pusha
adc
lock
pop
int3
mov
ret
test
mov
mov
int
mov
and
sbb
or
sbb
mov
mov
mov
mov
mul
adc
mov
cwde
sbb
jb
das
sbb
(bad)
jl
int
shl
in
scas
loope
and
jle
push
inc
nop
jl
mov
cdq
jg
sub
inc
cdq
mov
das
xor
ins
xchg
mov
cmp
repnz
cmp
cld
mov
imul
stc
out
push
jno
mov
jle
xchg
hlt
push
(bad)
je
fidivr
adc
mov
jb
pop
pop
int
stc
out
mov
dec
adc
movs
push
jnp
fs
pop
ret
outs
mov
pushf
ins
adc
sub
mov
(bad)
mov
pusha
sub
jns
retf
cmp
mov
adc
mov
cmc
inc
std
test
sbb
pusha
or
fdivr
rol
mov
mov
add
std
add
shl
or
daa
dec
xor
mov
js
daa
pusha
pop
pusha
push
cmps
fdivr
jo
aaa
repz
and
daa
not
bound
aas
jo
jnp
adc
arpl
dec
push
retf
pop
out
pop
inc
mov
stos
sub
mov
inc
call
scas
xchg
fiadd
or
or
adc
mov
int3
add
mov
adc
jns
lds
out
or
je
push
push
cmp
into
or
push
xchg
xchg
dec
mov
pop
iret
and
test
push
xor
cmp
xchg
sub
pop
fcomp
or
cwde
dec
(bad)
cmp
in
enter
scas
mov
sbb
mov
jne
adc
cmp
or
popa
or
pop
add
or
pusha
lods
jl
or
xor
adc
paddusb
test
or
jne
inc
out
pop
mov
and
fmul
out
or
sbb
or
mov
or
lds
in
aaa
rep
ins
(bad)
mov
inc
hlt
or
jnp
adc
add
xor
imul
test
imul
call
or
inc
push
(bad)
and
ins
call
push
out
popa
pushf
or
adc
jno
mov
stos
or
out
mov
push
add
cmps
setbe
xor
std
xor
ins
or
outs
adc
and
or
cmp
or
cwde
sub
jle
jo
fcomp
loopne
sbb
jbe
scas
cmp
imul
mov
inc
xchg
jnp
mov
xchg
mov
mov
mov
outs
inc
or
jge
outs
add
or
mov
cmp
fdiv
loopne
mov
out
pop
mov
inc
sbb
ja
in
cdq
cmps
push
push
or
bound
mov
ja
or
push
jb
(bad)
sbb
int3
cmp
fcomp
ror
and
shl
or
outs
add
dec
adc
ror
rcl
jmp
jmp
icebp
dec
or
leave
jb
pop
les
sbb
aam
or
loopne
push
pop
neg
call
(bad)
jecxz
test
dec
jns
or
ss
loopne
xchg
or
mov
mov
test
rol
lahf
rcr
aas
jo
xchg
ret
pop
adc
sbb
ret
add
scas
outs
sti
push
add
push
ins
or
loope
sub
pop
cmp
push
xor
pop
pop
push
cld
ins
and
sub
xor
adc
int3
adc
sahf
or
fiadd
mov
xor
add
mov
pop
sub
mov
add
frstor
mov
add
test
shl
and
out
pcmpeqb
mov
or
out
sub
cmp
rcl
mov
or
pop
add
pop
or
adc
faddp
add
aaa
add
icebp
inc
inc
(bad)
and
jp
cmc
int3
mov
add
clc
jmp
add
clc
and
xchg
adc
fiadd
fist
jne
inc
push
push
mov
popa
std
or
imul
das
or
push
add
mov
cmp
pusha
xchg
sub
dec
jnp
push
adc
repnz
dec
xor
push
pop
fcomp
mov
out
mov
push
xchg
pop
fcomip
or
call
out
test
mov
nop
jnp
add
(bad)
xor
adc
sti
jae
dec
loopne
jnp
or
xchg
inc
enter
loopne
jns
and
loope
mov
inc
jne
scas
cwde
cmp
out
mov
and
cld
dec
adc
fimul
pop
rcl
sub
call
inc
clc
addr16
mov
out
push
mov
and
or
repnz
jne
ins
les
xor
dec
enter
sti
bound
add
adc
pop
rcr
xlat
fst
adc
aam
add
rcr
fstp
or
sahf
jle
fmul
mov
icebp
jne
add
mov
xchg
inc
in
mov
xchg
nop
scas
or
jno
lods
jmp
aad
imul
inc
mov
loopne
(bad)
jge
adc
mov
or
out
pop
jp
loop
pop
add
add
repnz
aaa
push
pusha
ficom
mov
lock
nop
or
adc
or
ret
(bad)
push
loopne
cmp
icebp
iret
rcl
sub
xor
mov
das
and
push
imul
or
out
mov
sub
mov
xor
getsec
int
out
mov
outs
mov
(bad)
rep
ret
or
cdq
loop
xor
rcr
adc
inc
or
jo
mov
or
or
test
mov
push
or
pop
push
inc
push
or
mov
adc
int3
xchg
adc
retf
ja
sbb
pusha
adc
or
xchg
mov
and
cmc
inc
push
(bad)
or
loopne
jmp
jo
or
int
je
div
mov
js
rcr
inc
outs
jl
pop
jne
jo
jle
mov
and
pop
test
pop
mov
and
mov
mov
out
fst
aaa
scas
loopne
repnz
or
dec
aaa
int
xchg
or
mov
xchg
arpl
pushf
das
out
mov
fistp
mov
push
jge
fnstsw
pop
fst
jge
lods
ds
mov
or
es
test
push
sbb
xor
adc
shl
cmp
inc
ret
dec
test
inc
fidivr
xlat
int3
or
mov
push
psllw
or
(bad)
fwait
mov
jnp
jno
movs
pusha
mov
or
je
adc
mov
sbb
call
fst
ja
jb
or
or
mov
arpl
mov
mov
cs
xor
cld
or
lds
in
pop
sub
mov
lahf
test
inc
ins
je
(bad)
fisttp
push
test
or
jo
jne
jno
cmps
adc
inc
sub
or
js
div
sbb
and
sbb
cmpxchg
fidivr
jge
cmps
popf
sub
mov
sub
xlat
mov
in
cmp
or
stos
in
adc
div
pop
call
sub
push
mov
sahf
mov
and
movs
add
loop
imul
dec
or
dec
or
pop
mov
mov
push
call
dec
repz
inc
pop
pop
(bad)
in
call
pop
ja
neg
pushf
rcl
fs
mov
call
cmp
rcr
mov
or
je
es
mov
js
jmp
pop
int3
ja
mov
or
imul
test
leave
out
mov
rcr
sbb
sbb
nop
or
mov
mov
fnsave
add
pushf
aaa
pop
push
jmp
ja
sbb
pop
dec
movs
or
jg
test
sti
mov
jge
lods
or
or
out
sahf
mov
mov
or
neg
inc
mov
pop
sbb
mov
scas
(bad)
rcr
ror
cmc
or
les
mov
mov
enter
ja
pop
jp
aas
or
mov
stc
adc
das
test
inc
fmul
jae
xor
cmc
loop
jnp
cmps
loopne
and
or
fcmovb
jo
mov
xor
mov
adc
repz
jge
lock
inc
mov
or
add
ja
ja
jo
or
(bad)
enter
inc
push
jne
mov
add
cmp
inc
add
das
push
jmp
or
or
push
je
xor
mov
ja
cmps
adc
or
add
mov
outs
inc
sbb
mov
or
xlat
pop
not
and
jns
xchg
push
sub
jb
rcr
(bad)
mov
xchg
sub
scas
mov
or
xor
adc
mov
dec
cmp
adc
cs
mov
xor
pop
jb
lea
jno
imul
test
out
sbb
dec
or
int
lahf
push
sbb
sbb
cmc
jmp
fst
fistp
mov
lds
cmp
rcr
ret
in
jp
fs
sbb
data16
ffree
inc
or
fs
jo
inc
ffree
ffree
sbb
je
or
adc
out
mov
fnstsw
or
mov
inc
dec
mov
jne
test
push
les
mov
add
xchg
fidivr
or
in
(bad)
nop
or
mov
or
xor
cwde
or
ja
fnsave
mov
sbb
pop
and
xlat
add
pop
movs
or
mov
jo
jno
sbb
jb
or
movs
and
out
jmp
or
mov
push
mov
icebp
pushf
mov
add
out
or
adc
jo
jecxz
(bad)
sti
out
sahf
mov
enter
push
adc
xlat
mov
and
or
pop
test
jmp
jge
or
push
cmp
fsub
and
or
sbb
(bad)
mov
add
push
out
sahf
out
or
or
dec
ret
out
mov
adc
lock
hlt
jmp
cmp
loop
clc
or
cld
movs
adc
aam
hlt
sub
dec
neg
jge
jg
add
add
cmp
or
cmp
or
pusha
jns
xlat
mov
cmps
and
adc
dec
sbb
neg
cmp
dec
sbb
popw
ret
icebp
and
fwait
mov
jne
inc
mov
outs
mov
sub
adc
or
dec
xor
fnsave
ret
xor
pop
ins
jnp
inc
mov
pop
gs
cmp
cwde
stos
cwde
inc
or
movs
into
out
adc
inc
or
xchg
das
addr16
or
test
das
outs
imul
sub
out
loope
push
or
pop
push
pop
or
(bad)
pop
or
adc
xor
ds
or
or
(bad)
xor
jo
jne
inc
ins
or
arpl
sti
jo
nop
pop
jae
paddusb
je
cmp
or
inc
jmp
stos
retf
or
xchg
or
mov
cmps
sub
jg
stos
mov
stos
lods
mov
outs
test
mov
nop
or
int
fs
retf
jne
or
fld
pop
pushf
or
pop
adc
not
pop
push
mov
mov
or
jmp
inc
lods
or
mov
jo
mov
fdiv
and
call
cdq
not
mov
push
ror
mov
clc
and
pop
fdivr
or
jecxz
enter
in
imul
fld
or
or
mov
mov
pop
out
fmul
mov
out
call
in
or
xor
in
arpl
mov
or
jmp
in
or
or
xlat
mov
push
hlt
or
push
clc
add
fmul
in
fnstenv
mov
mov
out
bnd
jne
scas
mov
jmp
popa
in
sub
mov
jae
jl
adc
fst
ja
mov
jecxz
fs
pop
adc
in
adc
ror
loop
sar
jmp
jnp
jno
dec
ins
jb
or
dec
retf
cli
adc
add
inc
hlt
inc
cld
cld
mov
push
cmp
sbb
add
pop
jo
sub
sahf
jns
dec
inc
or
dec
test
pop
ja
adc
or
dec
xor
or
int
out
bound
repnz
es
out
mov
or
pop
or
scas
or
or
and
test
out
mov
ret
push
inc
sub
pop
fmul
test
add
rcr
je
popf
dec
sbb
js
je
bound
sbb
pop
test
push
cmp
push
out
adc
test
jmp
inc
fimul
ds
lods
sbb
mov
nop
adc
xchg
or
xchg
(bad)
fdivr
rcr
pushf
or
cmp
test
or
fidiv
div
out
sub
test
lods
or
jge
outs
xor
mov
test
es
or
push
fsubr
ret
jmp
xchg
fld
ror
cmps
imul
les
ret
gs
add
cmp
ror
sti
mov
inc
rcl
test
out
mov
xchg
fmul
leave
sahf
push
loopne
pmaxsw
out
or
(bad)
in
int
push
pop
mov
or
pop
(bad)
in
or
addr16
mov
gs
js
or
cmp
mov
clc
or
or
jmp
jno
cmc
aaa
sbb
out
mov
mov
jge
mul
or
sub
imul
idiv
or
cmp
inc
sbb
sbb
sbb
dec
xor
or
pop
ja
sub
and
mul
adc
add
dec
fdiv
sub
cs
sub
push
out
mov
jno
or
hlt
and
mov
mov
mov
and
scas
popa
add
fdivr
idiv
cmp
inc
and
pop
ja
pop
dec
or
cmp
mov
mov
cld
xchg
mov
ja
mov
or
(bad)
jo
pop
or
mov
cmp
in
or
jno
rcl
ins
lods
aad
or
ja
jne
test
fidiv
mov
jmp
je
inc
sbb
loop
cmp
into
adc
ja
and
call
ja
jo
js
je
or
sub
mov
out
mov
sub
sub
nop
mov
adc
xchg
or
imul
cwde
or
out
lea
fld
or
or
rcr
or
loopne
sbb
pop
fdivr
push
into
cmp
sub
adc
js
ds
ds
adc
ror
sahf
(bad)
mov
les
mov
or
scas
cmp
int3
or
or
loopne
jmp
aam
push
sbb
fmul
jne
or
mov
mov
jecxz
loopne
cs
ja
je
outs
dec
xor
loop
mov
mul
inc
fucomi
or
and
or
sbb
lock
or
hlt
or
out
jmp
mov
scas
clc
or
push
(bad)
scas
mov
add
add
cmp
push
add
sti
out
or
or
xlat
add
xchg
int3
adc
mov
not
fst
pop
call
test
imul
fndisi(8087
out
and
push
xor
sub
and
stc
and
pop
push
fmul
sbb
hlt
out
sub
jl
sub
cmp
or
call
jo
daa
and
(bad)
cmp
pop
adc
mov
sub
adc
pop
cmc
inc
or
ins
(bad)
je
or
scas
xor
shr
fadd
out
leave
stc
retf
cmp
nop
pop
pop
fdivr
inc
lods
pop
or
outs
mov
(bad)
ja
jmp
pop
enter
rcr
push
pop
ins
or
fdivr
test
int
or
sub
adc
pop
adc
mov
or
jmp
jnp
ins
arpl
scas
or
mov
add
xor
and
div
adc
mov
nop
or
or
retf
loope
ds
cwde
pop
ja
ja
bound
and
pushf
or
mov
xlat
inc
ja
push
mov
cdq
or
imul
mov
dec
lods
or
mul
aas
or
adc
mov
std
xchg
out
mov
or
jge
mov
loopne
cmc
int3
in
or
dec
push
mov
fmul
cli
dec
jge
enter
popf
pop
cmps
mov
push
lea
repz
or
inc
test
or
stc
fmul
stos
outs
outs
test
fmul
aaa
std
clc
hlt
sub
or
adc
outs
clc
fucomp
cmp
or
ss
or
outs
daa
lock
push
jnp
je
lds
aaa
sub
sub
or
aam
cld
or
or
ror
add
add
(bad)
or
jp
add
cmp
adc
(bad)
or
or
cmovge
or
fst
fst
lahf
jnp
adc
pushf
jge
mov
je
ror
xchg
lahf
sbb
mov
or
das
adc
and
and
pop
push
mov
out
or
or
(bad)
cmp
xor
mov
cmp
ja
out
mov
xchg
loop
mov
ja
ja
pop
inc
or
or
sub
jmp
jge
dec
or
dec
jne
bound
icebp
fisttp
or
inc
adc
xor
pop
or
mov
or
pop
mov
arpl
pusha
or
adc
jo
rcr
fs
in
retf
or
mov
jge
ins
or
ret
loope
jo
pop
mov
inc
inc
inc
je
xchg
adc
js
outs
in
dec
aaa
inc
mov
jmp
ja
dec
scas
and
xchg
mov
mov
mov
ret
in
cmp
cmp
idiv
cwde
or
jnp
and
call
sti
movs
or
mov
add
inc
push
lods
or
out
push
mov
mov
xor
aas
add
jno
push
push
mov
popf
mov
pop
pop
add
jp
push
inc
mov
scas
stos
out
push
and
call
inc
inc
mov
int3
or
pop
test
or
mov
mov
or
out
mov
lods
fmul
ret
add
or
stc
mov
jl
or
je
imul
bnd
in
or
je
rcr
popa
es
hlt
or
or
push
push
cld
or
cmp
mov
lock
add
add
jo
mov
or
imul
dec
fiadd
leave
adc
lods
or
mov
rol
ret
dec
pop
dec
bound
cmp
sahf
test
sbb
fwait
mov
xor
fsubr
push
mov
or
mov
mov
jno
mov
adc
call
lock
sub
(bad)
pop
ja
lock
(bad)
outs
test
sbb
add
addr16
movs
movs
or
(bad)
repnz
adc
add
imul
mov
mov
push
scas
inc
cmp
sbb
fwait
into
loop
pop
es
ja
push
jg
test
xlat
mov
adc
push
cmps
push
push
je
mov
fwait
ins
or
shl
or
fdiv
je
inc
xchg
out
js
fnstsw
or
dec
pusha
mov
test
add
pop
ja
sub
xor
sbb
or
or
fsubr
push
out
mov
xlat
sahf
out
xchg
or
cmp
cwde
or
xor
jnp
jmp
ret
or
retf
and
mov
leave
test
mov
out
jmp
lods
or
pop
popa
mov
or
add
and
mov
mov
mov
dec
shl
push
in
or
jg
mov
(bad)
pop
enter
shl
cld
mov
test
or
out
sbb
fmul
sar
ja
fst
int3
les
lods
shl
pop
out
push
xor
in
clc
out
(bad)
call
or
adc
mov
adc
lock
out
aad
hlt
or
dec
loope
clc
loop
or
or
mov
aaa
enter
jmp
add
xor
call
xchg
dec
jno
aam
or
mov
push
push
or
loopne
pusha
ja
fdivr
into
cmp
adc
iret
cmc
cli
call
lods
aaa
ja
out
sahf
mov
sbb
sahf
addr16
fnstsw
jne
and
inc
aaa
mov
daa
sbb
jo
ss
mov
or
fnstsw
xor
adc
or
sub
mov
or
add
inc
or
rcr
rcr
mov
inc
or
mov
adc
or
or
div
das
stos
or
jnp
out
test
shl
mov
or
ret
pusha
or
clc
(bad)
mov
or
(bad)
shr
sbb
loopne
or
or
dec
shr
or
mov
mov
inc
mov
es
mov
jl
add
pop
pop
cmp
sahf
out
or
aad
sub
sub
mov
out
xchg
mov
and
xchg
mov
mov
or
cs
out
cmp
out
cwde
or
or
or
rcl
stos
mov
jmp
adc
call
pop
and
mov
mov
loope
cmp
test
retf
jmp
or
out
jmp
mov
or
not
enter
ds
int3
or
cli
mov
cmp
or
xchg
out
fmul
lods
out
mov
or
jnp
out
loopne
pop
std
nop
out
or
mov
fnstenv
scas
out
push
mov
lock
lods
aad
mov
or
jge
clc
or
ds
cli
lahf
out
ds
or
sub
add
iret
and
push
stos
add
fwait
mov
fwait
out
jecxz
mov
mov
dec
cmc
mov
jno
fwait
out
sub
movs
sbb
std
lods
jnp
imul
cli
xchg
nop
and
push
out
push
mov
and
int3
push
cmp
sub
scas
and
or
data16
sub
sub
adc
cmp
or
or
jne
div
inc
cmp
inc
push
xchg
ds
mov
xlat
add
fwait
inc
or
ins
add
mov
hlt
and
test
popa
mov
lock
or
or
out
sahf
and
in
sbb
neg
loop
jecxz
pop
cmp
or
jne
mov
arpl
push
cmc
movs
ins
pop
ja
fisttp
sbb
fcom
xor
fst
fnsave
std
push
dec
js
xor
jl
out
mov
mov
adc
cld
test
sahf
out
push
mov
mov
addr16
int3
repz
mov
xchg
lods
xor
dec
ss
xchg
ja
mov
xor
cwde
bound
pop
mov
or
or
nop
jp
stos
mov
into
jnp
out
test
sti
mov
and
dec
addr16
push
out
ds
mov
inc
cmp
mov
push
fidiv
mov
ret
mov
or
or
mov
out
ds
std
sub
and
imul
or
mov
out
mov
fmul
iret
fisubr
inc
fdiv
or
loopne
(bad)
mov
pop
in
inc
lea
call
cld
in
(bad)
push
ja
mov
or
mov
add
inc
call
clc
or
lock
xor
int
lea
push
add
test
jmp
or
or
adc
or
inc
outs
cmp
adc
xor
in
call
push
ja
out
or
ja
mov
or
fnstsw
mov
or
not
pop
and
push
adc
sub
jno
jb
mov
pop
jge
ret
or
inc
out
mov
or
loop
push
cmp
sahf
out
call
or
imul
or
add
lahf
inc
or
out
mov
lahf
mov
mov
outs
aaa
push
or
or
mov
xor
sbb
sahf
mov
jb
pusha
or
sahf
mov
aas
xchg
scas
push
movs
ins
mov
mov
or
cmp
ds
or
into
xor
mov
xor
out
mov
leave
mov
jle
sbb
loop
loope
test
not
(bad)
jne
or
adc
mov
mov
(bad)
stos
call
xchg
loop
mov
mov
scas
add
or
(bad)
jge
or
fimul
mov
mov
sub
xchg
out
push
out
ds
test
jl
stc
mov
or
mov
sti
mov
mov
sahf
or
(bad)
out
push
xlat
mov
mov
or
fld
ror
and
cld
imul
or
xchg
push
int3
or
out
push
mov
ror
popa
xchg
in
aam
out
push
out
or
pushf
mov
fmul
pop
fs
fadd
shr
pop
pop
shr
out
cmp
in
or
add
push
sar
in
or
add
out
or
outs
in
mov
cwde
ins
lock
mov
cwde
add
or
xor
jne
(bad)
add
add
xor
fist
div
or
sub
out
or
bnd
mov
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
div
adc
je
je
or
jp
xor
jno
jmp
sbb
fdiv
jbe
fmul
ja
jo
lahf
xor
das
cdq
sub
jecxz
outs
or
adc
sbb
push
fimul
out
adc
adc
fnstsw
jns
dec
cmp
outs
jle
ffree
pop
adc
or
sbb
or
sbb
(bad)
pop
dec
add
ja
cdq
and
jg
or
and
xor
and
dec
pop
or
xor
ltr
int
cdq
pusha
or
jo
lds
mov
jne
push
or
or
jae
pop
pop
fdivr
jo
xchg
bound
cmp
mov
nop
push
fwait
jl
pop
push
fmul
adc
(bad)
icebp
or
mov
emms
or
adc
mov
or
shl
jne
jo
inc
mov
call
push
stos
pop
pop
fnstsw
xchg
or
push
lea
fst
mov
not
mov
fld
fild
bound
test
jl
ret
ffree
iret
retf
popa
lods
or
pushf
jbe
mov
shl
not
adc
or
jecxz
ds
jo
mov
lock
inc
mov
pop
ror
and
mov
or
inc
fdivr
div
enter
scas
or
or
jne
les
popa
ror
dec
dec
aas
aam
ja
fmul
fmul
mov
stos
je
jo
mov
stc
adc
or
fst
ja
mov
or
in
rcr
xlat
push
xchg
or
loope
push
or
clc
aam
hlt
or
dec
ja
fmul
sub
or
(bad)
outs
sub
xor
mov
add
pop
loop
rcr
sub
(bad)
(bad)
(bad)
fisttp
out
ret
cmp
or
xor
inc
xor
mov
mov
mov
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
lea
inc
inc
sbb
sub
xchg
rol
jb
ja
leave
imul
push
inc
(bad)
out
or
and
push
push
mov
shr
mov
aaa
add
add
adc
mov
mov
stos
fadd
imul
test
jmp
mov
sbb
ret
mov
xor
xor
mov
(bad)
jmp
ffree
jmp
fisttp
shr
add
movzx
xor
cmp
add
pop
push
mov
xchg
pop
dec
adc
int3
push
lds
sar
jmp
and
add
sub
push
jae
inc
and
movzx
jnp
ja
add
neg
repnz
out
mov
jae
mov
div
(bad)
or
(bad)
and
popf
xlat
sub
and
nop
jmp
push
push
xchg
or
fild
stos
push
pusha
mov
out
jo
cwde
jae
jmp
or
and
mov
inc
jmp
imul
push
fnsave
shl
enter
pop
xlat
jp
inc
aad
in
into
int3
iret
dec
push
inc
enter
iret
inc
and
sub
test
or
pusha
cdq
push
ud2
adc
mov
jp
push
iret
seto
inc
xor
xor
add
rol
dec
xor
pop
push
ret
dec
adc
add
sbb
jmp
dec
cwde
and
mov
jae
enter
xor
or
(bad)
or
add
push
jecxz
enter
or
std
adc
dec
add
push
mov
mov
and
adc
fistp
adc
inc
and
add
lock
and
test
mov
je
push
sub
add
pop
je
pop
or
(bad)
adc
test
jle
push
mov
inc
cmc
mov
lea
push
adc
or
add
dec
test
hlt
jne
pop
pop
jmp
dec
rol
inc
setl
jg
fimul
mov
mov
or
inc
shl
jmp
add
push
lea
arpl
sbb
leave
mov
add
dec
xor
push
mov
add
mov
shl
jmp
adc
shl
xor
and
ret
xor
push
adc
shl
xor
and
mov
repnz
sub
sbb
sbb
push
lock
xor
sbb
(bad)
outs
mov
out
or
dec
pop
sbb
mov
jle
ins
addr16
xor
xor
(bad)
and
adc
mov
xor
aas
cli
xor
inc
mov
mov
xor
div
xor
xor
int
mov
arpl
dec
test
clc
mov
aaa
fst
cli
adc
test
(bad)
call
mov
xor
lsl
push
and
sahf
mov
ja
lock
and
sbb
adc
rcr
jmp
inc
neg
out
daa
dec
jne
mov
lea
mov
or
adc
mov
es
add
push
push
(bad)
mov
mov
inc
cld
mov
cmp
dec
dec
inc
ffreep
jne
mov
add
ret
rol
mov
sub
and
dec
add
inc
ror
jg
jg
or
or
jg
inc
lods
shl
add
(bad)
(bad)
inc
aad
mov
mov
mov
mov
push
(bad)
jmp
inc
sbb
inc
sbb
dec
cli
mov
fnsave
and
dec
push
ins
retf
push
cmps
adc
out
lds
push
scas
addr16
jb
outs
cmp
cmc
dec
movs
jg
push
push
mov
fwait
sbb
fwait
aaa
stos
fld
pop
aam
data16
jg
sbb
out
test
mov
into
mov
sbb
add
push
mov
add
jo
out
mov
or
ja
jp
mov
and
pop
sbb
cmps
sbb
sub
test
sbb
xor
pop
and
je
mov
push
mov
rol
mov
rol
add
push
pop
not
and
aaa
cld
fild
jmp
push
and
add
hlt
sub
mov
ja
add
and
dec
cmp
jne
dec
fld
ret
push
mov
rol
xor
sbb
xor
and
fwait
(bad)
and
xor
add
add
sbb
push
bound
add
pop
dec
and
ret
sbb
pop
out
jns
push
pop
das
cli
outs
neg
pop
call
cmp
out
aaa
pop
add
adc
mov
jno
sbb
xlat
(bad)
adc
mov
rol
fstp
jne
xor
push
or
or
and
xor
scas
mov
add
sub
js
mov
or
aas
(bad)
(bad)
sbb
xor
push
pop
not
and
fist
xor
add
add
lds
mov
mov
sbb
imul
adc
jg
in
push
ins
sti
and
xor
and
and
xor
add
fucomp
out
jno
pop
or
pop
and
mov
rcr
push
fld
fstp
out
xlat
mov
xor
jmp
and
mov
add
fisttp
push
aaa
sbb
xchg
adc
ficomp
lods
or
pop
ss
xlat
and
mov
adc
aad
rcr
sbb
mov
xchg
iret
cmp
out
and
fistp
data16
push
cmp
ins
push
sbb
jae
mov
push
and
xor
push
or
xor
and
rcl
and
std
mov
sbb
sti
mov
push
jg
sbb
ret
adc
pop
or
or
inc
ficom
adc
icebp
xor
sbb
add
lea
sbb
repz
not
push
in
in
jnp
cld
(bad)
out
sbb
adc
add
push
fidiv
fbld
pop
and
js
add
mov
and
push
push
js
sbb
test
je
push
sti
fidivr
fincstp
ins
and
jl
xor
sub
aas
xchg
add
mov
and
mov
jge
and
jg
mov
jmp
and
xor
sbb
mov
mov
adc
div
out
xor
sar
out
sub
pop
sbb
add
mov
fnsave
outs
push
xor
leave
rol
xor
or
je
loope
or
je
sbb
dec
and
dec
or
xor
retf
std
stc
(bad)
mov
rcr
repnz
xor
push
pop
not
and
(bad)
mov
cmc
add
add
pusha
adc
mov
cwde
stos
pop
fadd
inc
add
adc
add
ja
xor
dec
cmp
iret
rol
stos
adc
repnz
fucomp
shl
(bad)
or
iret
into
sbb
adc
adc
fnsave
cmc
dec
dec
pop
js
retf
add
adc
loopne
adc
and
mov
not
(bad)
out
out
cmp
std
cmp
stc
sbb
cmp
adc
push
mov
out
std
std
into
rol
xor
push
or
jmp
into
xor
push
aaa
cld
mov
add
and
dec
out
test
jnp
test
sub
hlt
cvtdq2ps
mov
and
inc
dec
and
inc
lds
xor
lea
mov
xor
cmps
cmp
(bad)
sub
pop
idiv
ret
inc
ja
retf
and
sub
jns
out
jp
jecxz
push
sub
xchg
and
data16
int
cmp
lea
mov
push
aam
sbb
ficomp
mov
sub
retf
ret
jge
and
push
xchg
xor
stos
jmp
xchg
xor
xor
dec
ret
js
mov
js
mov
cmps
and
sbb
daa
iret
jl
(bad)
push
retf
je
mov
retf
sub
jecxz
cmp
dec
fxch
pop
out
mov
push
push
pop
and
mov
int
mov
xor
add
retf
and
cmp
mov
add
pop
fmul
and
sub
(bad)
sub
rcr
mov
push
or
pop
jmp
mov
xor
and
cld
cmps
fbld
sub
sbb
jmp
jl
iret
out
push
or
xlat
mov
mov
dec
cmp
mov
mov
or
rcl
adc
cmp
pop
xor
and
mov
dec
sub
cld
sbb
(bad)
xor
xchg
adc
sar
les
pop
mov
sub
push
rol
sbb
mov
add
mov
jmp
adc
sub
movzx
shl
movzx
shl
or
xor
inc
mov
inc
or
mov
or
lods
adc
push
inc
push
dec
add
push
adc
and
inc
test
movzx
add
inc
cdq
xchg
add
popf
inc
sahf
popf
aas
addr16
or
mov
mov
rol
lds
sbb
push
movs
fcom
outs
jp
and
test
add
addr16
and
arpl
rol
ret
push
and
pop
dec
or
dec
fsubr
es
bound
aad
sub
nop
(bad)
and
add
rol
outs
call
adc
fistp
jo
jo
clc
out
aad
cs
sti
test
cmp
add
pusha
pusha
aaa
mov
dec
adc
adc
mov
sbb
xor
shl
jmp
and
movzx
add
fbstp
mov
ret
jecxz
or
xor
inc
mov
je
mov
rcr
or
js
inc
mov
fs
fs
mov
mov
inc
xor
mov
adc
(bad)
bound
das
(bad)
pusha
je
adc
aad
ret
std
cli
jo
pop
mov
les
std
and
and
and
loope
lahf
ret
pop
aam
cli
and
sbb
adc
icebp
push
xor
sbb
lea
jmp
mov
leave
jo
xor
cmp
push
jmp
add
call
push
shl
mov
push
out
xchg
and
adc
add
adc
loop
inc
xor
and
cmp
cmp
adc
rcr
jl
rol
ds
ret
not
cdq
clc
ret
(bad)
inc
pop
(bad)
pop
outs
mov
push
push
xchg
lea
pop
mov
dec
je
popf
or
xchg
or
xlat
xor
dec
cdq
add
jmp
cmps
xchg
popf
sub
mov
lock
jno
mov
pop
pop
arpl
retf
sbb
cmp
retf
xor
push
sub
cmp
mov
mul
mov
sbb
and
fcmovb
ret
cli
push
ret
or
add
bnd
bswap
jl
sub
shr
add
ret
xor
das
or
pop
pop
pop
and
adc
repnz
and
xor
adc
loopne
les
inc
mov
mov
sbb
fldenv
push
xchg
jmp
push
mov
(bad)
sahf
ror
mov
add
aad
lds
mov
shl
sub
adc
icebp
add
cmp
add
jg
push
test
xor
icebp
sub
icebp
cmp
je
neg
mov
mov
bound
call
dec
push
mov
dec
and
mul
stos
cmp
repnz
cmp
push
ficom
xor
push
scas
jnp
rcr
jo
inc
and
repnz
fwait
or
loope
cs
and
ret
push
and
retf
retf
mov
js
int
das
adc
jno
mov
pop
jae
mov
and
test
dec
push
xchg
imul
cmp
xchg
or
fidivr
adc
arpl
clc
mov
fldcw
mov
loopne
and
mov
sub
jb
retf
adc
sbb
sbb
retf
sbb
fidivr
pop
retf
icebp
pop
push
ja
scas
fcmovb
fisttp
mul
jns
fiadd
dec
xor
mov
or
sbb
mov
sbb
xor
or
push
dec
iret
xchg
movzx
xadd
sbb
retf
cmp
lods
jg
inc
xor
mov
or
cli
data16
icebp
fst
test
retf
ret
jp
jp
xor
hlt
sbb
ss
jp
loop
xor
es
mov
adc
push
pop
aas
pusha
loop
repz
shl
rcl
inc
shl
(bad)
and
ins
repz
mov
pop
sub
hlt
xchg
mov
cmc
xor
xlat
mov
cdq
icebp
adc
test
pop
clc
mov
iret
les
test
lock
hlt
fmul
mov
(bad)
rcl
push
dec
mov
(bad)
sub
fwait
cmps
(bad)
or
and
popa
cmp
jo
add
sbb
cwde
sbb
lock
sbb
adc
dec
lahf
cmp
rol
jmp
ror
jle
inc
sub
fiadd
push
(bad)
add
push
ret
adc
sbb
aaa
or
fiadd
inc
push
lods
loopne
push
xlat
mov
inc
out
test
sbb
lods
(bad)
cmp
rol
adc
loop
sbb
inc
sbb
sbb
enter
inc
adc
inc
dec
call
call
outs
mov
into
xor
adc
add
outs
sub
and
jbe
add
jecxz
mov
aaa
lock
cmps
inc
mov
add
adc
(bad)
dec
sbb
jge
lds
inc
push
mov
shr
rol
rol
lock
xor
arpl
sbb
ret
std
mov
xchg
push
and
shr
or
jmp
ret
mov
or
mov
jmp
sub
sub
dec
daa
in
dec
bound
mov
jno
ror
mov
inc
(bad)
fcom
adc
(bad)
mov
test
xor
xor
cmp
add
jbe
cdq
adc
fild
xchg
rol
xor
cmp
cmc
xor
mov
xchg
lea
xchg
int3
leave
sub
adc
adc
mov
call
jmp
mov
or
or
fld
enter
ins
in
add
add
dec
sbb
gs
cmp
jb
outs
(bad)
outs
xor
xlat
in
dec
pop
loop
call
dec
cdq
fcomp
jmp
mov
adc
lods
add
icebp
fldenv
and
icebp
fiadd
call
fwait
or
(bad)
loope
xchg
push
xlat
enter
cli
inc
xlat
sub
jmp
xlat
cmp
ins
and
mov
mov
adc
and
jbe
mov
xor
aam
out
sar
jmp
int3
mov
pop
int3
mov
cmp
jmp
call
mov
or
lds
mov
pusha
outs
or
dec
fadd
mov
add
mov
dec
sub
xor
jno
xchg
stos
and
jb
int3
outs
hlt
xor
mov
xchg
xor
call
xor
imul
rcr
movs
push
test
out
ins
dec
cs
fiadd
mov
loopne
into
cmp
and
xlat
cmc
ins
cmpps
cmp
cmp
xor
sbb
test
mov
imul
neg
mov
push
jl
and
sub
outs
cmp
and
mov
add
pop
dec
call
and
mov
movd
clc
pushf
or
mov
call
(bad)
lock
retf
or
pusha
scas
push
cmps
cmps
push
test
and
mov
fadd
dec
add
fisubr
scas
arpl
sbb
lahf
xchg
sbb
adc
aad
or
xor
and
add
loopne
and
sbb
xchg
aam
retf
je
push
dec
popa
outs
fadd
xor
xchg
push
mov
dec
add
loop
sar
adc
pop
add
repz
shr
sbb
adc
int3
lahf
out
and
xor
(bad)
add
dec
(bad)
inc
adc
cmp
or
mov
pop
adc
std
push
or
cmp
shl
mov
retf
mov
jl
adc
std
mov
and
test
popa
push
fwait
mov
inc
fimul
or
jle
ror
xor
test
jnp
sbb
les
jmp
and
xchg
add
(bad)
std
scas
test
adc
add
add
adc
paddw
jno
jl
mov
repz
retf
dec
clc
cmc
jp
mov
sbb
jns
mov
mov
lock
inc
or
jp
mov
add
mov
mov
add
mov
mov
(bad)
(bad)
jmp
add
mov
mov
add
mov
mov
in
and
or
test
out
jo
or
les
add
pop
xor
adc
mov
add
add
aas
stos
(bad)
adc
dec
and
jae
inc
mov
dec
aam
imul
add
push
push
inc
and
ja
les
test
mov
mov
add
shr
and
sub
inc
lea
jb
mov
retf
push
jmp
push
mov
shl
inc
movzx
rcr
inc
fidiv
mov
syscall
mov
inc
cmp
jae
nop
pop
movzx
shr
mov
inc
test
sub
push
push
push
mov
cmp
pop
pop
dec
mov
add
lea
mov
call
jmp
test
jbe
push
push
cdq
and
outs
out
and
jecxz
add
sub
addr16
mov
mov
lea
je
mov
mov
movzx
jg
dec
lea
sbb
mov
add
or
(bad)
(bad)
mov
ret
cld
inc
dec
jne
mov
xor
add
dec
je
dec
je
dec
jne
mov
(bad)
sti
push
dec
movzx
dec
shl
or
or
loopne
or
mov
pop
pop
pop
(bad)
(bad)
call
cmps
pop
pop
ret
mov
lea
cmp
jae
sub
mov
je
dec
je
or
mov
es
sub
cs
adc
jmp
or
mov
or
sub
clc
add
out
add
push
jmp
mov
inc
add
and
inc
dec
imul
jns
mov
inc
mov
push
adc
inc
inc
xchg
jmp
(bad)
mov
test
lock
jb
movups
sbb
dec
je
dec
je
dec
pop
push
out
or
dec
(bad)
aas
pusha
xchg
out
in
inc
add
add
add
add
ja
cmp
xchg
imul
push
dec
push
add
les
add
xor
jmp
out
or
xor
cld
inc
inc
add
and
and
ss
pop
(bad)
mov
inc
adc
stc
mov
push
jle
jo
rcl
jge
pop
mov
add
and
jge
mov
sub
cld
fcos
pop
sub
push
mov
mov
push
sub
adc
mov
xor
cmp
push
jbe
aas
add
pop
pop
fcmovnb
xor
test
jbe
fisttp
or
xchg
int
aas
loop
sbb
or
or
shr
cmp
jb
pop
mov
mov
pop
pop
ret
mov
aas
rol
cmp
dec
dec
popa
mov
add
push
or
inc
jb
or
scas
mov
push
inc
mov
cdq
sbb
mov
adc
test
fdivr
sbb
adc
xor
repnz
sbb
jmp
iret
adc
call
push
cdq
pop
add
push
mov
out
push
push
push
dec
add
adc
gs
lock
pop
cmp
jne
push
rcr
push
push
pop
jb
add
pop
xor
adc
out
call
mov
cmp
jne
adc
(bad)
ja
dec
lods
adc
fisttp
push
push
pop
fadd
jne
push
adc
es
out
jle
ja
addr16
les
pop
dec
mov
jmp
adc
inc
(bad)
mov
or
(bad)
je
push
pinsrw
jne
push
popa
inc
sub
leave
popa
aas
daa
pop
ins
push
sbb
dec
or
call
mov
lea
mov
mov
mov
mov
mov
scas
mov
and
jle
mov
mov
mov
mov
jmp
mov
mov
mov
mov
push
push
mov
pop
lods
mov
shr
cs
cmp
xor
(bad)
jns
jae
jbe
in
pop
xchg
add
xor
pop
cld
mov
xor
pop
ret
dec
adc
pop
or
push
cwde
inc
inc
push
(bad)
cdq
int
lea
push
mov
xor
(bad)
sbb
jbe
scas
pop
push
je
test
clc
mov
sbb
xor
mov
fs
sbb
mov
jp
mov
comiss
xor
sbb
adc
shl
and
xchg
add
ss
sub
sbb
adc
pop
jbe
out
mov
cld
cmovb
popa
pop
dec
das
gs
add
jo
adc
add
and
push
xchg
push
add
icebp
pop
xchg
aaa
sbb
ror
das
mov
pop
jp
add
cdq
and
ja
out
pop
add
jp
clc
add
adc
push
je
jmp
int3
or
(bad)
adc
fnsave
mov
mov
add
inc
and
test
cmp
and
or
call
fisttp
pop
xor
mov
inc
mov
or
push
add
aas
(bad)
loopne
mov
dec
pop
mov
push
je
push
inc
jge
xor
fnstsw
push
mov
lods
add
je
inc
fst
hlt
adc
push
dec
pop
sti
and
xor
mov
(bad)
out
mov
mov
pop
fs
and
js
adc
rcl
std
arpl
test
jne
jbe
in
adc
cmps
mov
ret
or
cmp
ret
stos
fadd
mov
jnp
shl
sbb
mov
push
or
mov
test
jne
mov
mov
mov
fld
sbb
pop
cmp
or
les
dec
inc
push
test
jne
adc
inc
mov
cmp
je
or
mov
mov
aad
mov
and
inc
or
mov
in
sbb
or
push
adc
push
push
xchg
ja
ja
fwait
lods
jmp
test
xlat
xchg
rol
adc
fucomp
cmovne
retf
push
std
or
xchg
mov
clc
fidiv
mov
jne
call
lock
jne
mov
push
pop
add
or
pop
cld
outs
js
push
hlt
cmps
je
adc
dec
push
ror
das
jle
mov
mov
pop
adc
ja
and
inc
sub
jle
mov
fwait
cmc
in
pop
mov
xchg
pusha
loope
mov
mov
mov
pop
imul
jg
rol
or
adc
pop
inc
in
cli
jg
mov
je
cmp
push
addr16
mov
lea
push
push
xlat
pop
cld
mov
mov
maskmovq
div
mov
or
ins
aad
xchg
movs
fmul
jp
jle
clc
call
adc
shl
ror
or
pop
inc
adc
inc
and
xlat
adc
mov
sub
add
or
sub
add
cmovno
je
mov
lock
push
pushf
js
adc
adc
mov
js
push
test
je
int3
push
push
push
push
call
je
sar
test
and
or
or
js
outs
push
inc
out
outs
jp
jl
pop
ret
mov
sbb
jge
popa
call
lock
add
push
in
push
push
fmul
add
push
sub
xor
jns
sbb
sub
int3
(bad)
idiv
je
mov
leave
je
test
lds
sbb
adc
xor
retf
jno
pushf
arpl
or
aaa
int
sub
push
ret
pop
add
add
pusha
dec
mov
sar
rol
jns
mov
mov
leave
outs
mov
shl
jbe
push
fs
stos
cmp
ja
push
nop
jge
push
mov
jbe
out
pusha
rol
push
(bad)
jns
mov
mov
xchg
jne
mov
jb
stos
clc
sub
dec
jns
pop
rcl
jle
jecxz
jmp
js
dec
adc
jno
js
fldcw
mov
push
mov
imul
inc
xor
sub
loopne
jg
push
and
call
enter
scas
inc
scas
into
cmc
retf
je
xlat
mov
adc
push
sbb
sub
xchg
push
push
push
push
loop
mov
sar
push
push
call
sbb
jb
push
cwde
xchg
xor
fist
pop
add
and
das
mov
mov
mov
imul
rol
cmp
cmp
jg
in
es
pop
dec
out
aam
push
push
(bad)
jecxz
jmp
div
push
out
shl
ins
addr16
les
add
push
imul
dec
or
xor
aas
add
jne
or
add
push
mov
pop
inc
cmp
sub
adc
rcr
add
mov
(bad)
mov
jne
jno
mov
test
je
mov
js
jo
mov
mov
mov
and
add
lds
ss
adc
jl
add
pusha
inc
push
xor
inc
xchg
pop
mov
inc
icebp
add
nop
mov
neg
sbb
push
inc
js
jae
jle
pop
dec
dec
(bad)
adc
ds
push
dec
fiadd
popf
jne
pop
pop
ret
mov
jg
jmp
mov
mov
mov
adc
leave
add
add
pop
mov
mov
add
rol
outs
ins
into
int3
shr
inc
inc
sbb
ds
and
or
inc
stc
mov
and
add
out
das
adc
xor
in
xor
je
mov
pop
mov
test
je
(bad)
mov
sub
shl
add
inc
inc
enter
adc
pop
and
pop
add
jl
add
sbb
jge
call
data16
out
stos
cli
je
test
jle
mov
mov
ror
mov
cmc
mov
loopne
adc
mov
test
push
call
ret
mov
test
lea
jle
sub
cld
cmp
nop
mov
mov
mov
inc
inc
cmp
jl
and
mov
pusha
inc
inc
call
aad
fiadd
cmp
or
scas
push
mov
add
or
test
push
mov
cmp
mov
loope
inc
nop
push
sbb
mov
mov
(bad)
cld
das
test
lea
ret
pop
sar
cmp
call
jne
mov
mov
sbb
rol
rol
outs
shl
jmp
cmps
or
and
xor
test
push
lock
and
je
adc
xchg
pop
ja
inc
fwait
clc
inc
test
push
inc
add
(bad)
jmp
les
je
mov
mov
sub
add
pop
mov
fcomp
inc
pop
mov
mov
inc
dec
or
mov
add
stos
cmp
(bad)
pop
add
push
add
fimul
aam
xchg
ret
adc
outs
push
mov
cmp
mov
je
jne
mov
mov
pop
mov
adc
inc
sub
and
mov
inc
and
pop
jnp
push
xor
mov
pop
adc
mov
dec
pop
mov
sbb
(bad)
in
fmul
adc
add
ficomp
mov
call
(bad)
jae
sti
add
add
add
add
push
push
pop
or
fwait
je
cmps
or
bound
mov
push
or
add
mov
mov
adc
dec
or
cmp
je
inc
int
cmp
jne
mov
adc
cmp
jge
jo
rcl
mov
mov
adc
retf
sahf
jecxz
mov
mov
cmp
add
or
add
and
nop
lods
(bad)
in
or
xchg
sub
ins
ss
mov
jns
sub
leave
dec
cmp
(bad)
das
inc
jnp
test
mov
mov
jge
pop
and
xor
aas
shr
loopne
ret
je
(bad)
dec
jg
imul
(bad)
sub
jl
jne
sub
scas
mov
push
mov
mov
xor
call
mov
rol
push
xor
adc
xor
jmp
ins
and
jae
push
lock
test
mov
je
push
mov
dec
(bad)
aas
sti
pop
mov
mov
pop
inc
mov
and
add
add
dec
jle
std
mov
sbb
pop
movzx
xor
or
pop
je
adc
test
and
mov
sub
xchg
in
pop
out
or
add
jp
add
les
cmp
add
imul
popa
stc
pop
sub
aad
mov
adc
push
ss
xor
out
inc
push
jmp
push
push
dec
or
add
arpl
clc
jle
mov
push
adc
pushf
cmp
clc
jmp
mov
mov
test
je
fbld
or
or
mov
retf
mov
xor
inc
add
sub
add
inc
bound
cld
je
fwait
jle
inc
add
je
scas
sbb
or
cmp
jg
sub
cmp
ja
push
pop
mov
push
push
push
push
fdivr
pop
jmp
in
push
sbb
push
push
push
sbb
mov
jmp
sub
adc
mov
jmp
fmul
pop
in
aas
lock
pop
mov
mov
xor
aas
jle
dec
(bad)
loope
je
inc
addr16
dec
sub
pop
lds
and
adc
xchg
sar
(bad)
call
jle
adc
dec
cli
test
je
mov
test
lea
jne
xor
push
push
push
out
mov
out
dec
adc
inc
or
(bad)
pop
fisttp
push
inc
xor
push
push
call
pop
test
pop
rep
fadd
clc
test
into
pushf
dec
and
or
push
mov
leave
jle
mov
adc
xor
mov
and
jmp
push
jbe
or
or
sub
inc
call
enter
test
mov
xor
or
dec
or
lea
mov
xor
pop
inc
add
add
leave
fmulp
push
push
push
bound
push
xor
lahf
mov
mov
cli
jne
push
popa
push
push
sbb
adc
adc
inc
sub
or
dec
jp
jno
lods
out
cld
mov
or
mov
mov
shr
push
mov
inc
push
rcr
add
dec
cmp
pop
jne
es
fsubr
jmp
sbb
mov
dec
lock
popa
je
xor
mov
cmp
xchg
inc
in
cli
push
mov
ins
sbb
dec
std
outs
push
or
xchg
pop
mov
pop
ret
push
pusha
sbb
xchg
mov
das
push
mov
push
mov
je
push
push
fiadd
jbe
xor
add
push
xor
sbb
adc
daa
fstp
xor
push
push
push
push
fild
push
into
sbb
sbb
int3
inc
scas
pop
jne
mov
int3
push
adc
pop
mov
mov
push
push
push
xor
adc
jae
adc
hlt
ja
call
jp
cld
adc
push
dec
sub
(bad)
xor
mov
or
jp
xor
push
xor
adc
mov
push
aam
sti
inc
push
mov
adc
push
test
xor
xchg
movs
adc
popf
sbb
push
mov
outs
adc
dec
sub
je
add
push
and
ror
add
jmp
mov
sbb
lock
cli
in
jmp
adc
pop
inc
dec
and
test
mov
inc
and
push
cmp
scas
cmp
inc
push
dec
inc
loopne
cmp
and
call
mov
test
js
xchg
and
push
fmul
shl
fwait
lods
mov
inc
cmp
dec
adc
push
rol
fs
add
je
sar
in
mov
test
jne
test
je
inc
inc
repz
mov
push
sbb
push
xchg
sub
std
inc
adc
add
dec
fwait
xor
jnp
mov
call
cmp
lods
fs
cmp
and
mov
mov
or
fadd
loop
and
or
or
cli
push
and
inc
jmp
mov
stc
jns
loopne
test
inc
push
adc
adc
inc
mov
mov
rol
push
xor
push
icebp
xchg
nop
push
jne
shl
js
ficom
in
pop
jg
pop
sbb
or
outs
or
xor
push
push
push
add
push
rol
dec
ret
and
xadd
cmp
jne
mov
sub
jp
dec
mov
shl
adc
icebp
inc
xlat
inc
or
add
adc
jp
push
xor
call
retf
pop
inc
adc
mov
mov
adc
adc
add
(bad)
xor
push
push
aam
sbb
(bad)
test
sti
aas
mov
add
test
je
mov
inc
inc
fld
inc
push
mov
pop
icebp
add
ret
xchg
in
test
mov
push
inc
jb
scas
inc
push
sbb
pop
stos
mov
sbb
dec
stos
cmc
pushf
stos
xchg
or
mov
xchg
adc
pop
test
push
mov
cmp
jle
nop
ds
xchg
ins
push
mov
push
sub
pusha
pushf
mov
dec
arpl
push
adc
int3
jge
mov
inc
push
(bad)
inc
pusha
xchg
hlt
fcom
push
shl
xchg
mov
xor
cmp
pusha
sbb
stc
add
repnz
cmp
rcr
cs
mov
pop
and
jmp
adc
jge
push
fld
sti
test
lds
jne
or
add
pop
mov
adc
xor
add
clc
cmp
dec
pop
popa
and
and
or
or
mov
inc
push
inc
push
inc
xchg
rcl
movs
pop
test
adc
test
cmps
inc
inc
mov
or
mov
pop
lock
and
push
call
jbe
xchg
ins
xor
or
nop
fwait
dec
push
call
gs
stos
xlat
es
or
movs
xor
sbb
je
cmc
adc
imul
dec
and
mov
ja
jmp
dec
je
pop
jge
push
push
push
push
fwait
cli
or
xor
cmp
adc
cmc
cld
cs
aam
es
mov
in
jmp
call
or
outs
xor
push
adc
push
ret
push
mov
jbe
push
call
jl
jbe
xor
and
(bad)
mov
xor
xor
(bad)
bound
mov
push
cmps
jmp
jne
enter
cmp
les
out
mov
ud0
add
mov
(bad)
jg
or
gs
xchg
arpl
adc
push
adc
and
mov
adc
std
enter
and
je
mov
pop
(bad)
(bad)
pop
cmp
int3
add
(bad)
jle
push
cmp
repz
jmp
inc
(bad)
cmp
inc
dec
adc
(bad)
adc
mov
inc
mov
push
and
retf
lahf
push
push
push
inc
sbb
fwait
je
push
imul
sbb
add
add
cmp
jmp
push
mov
test
mov
das
fiadd
jle
dec
je
add
add
push
jg
(bad)
jmp
clc
and
push
push
push
hlt
sti
jl
push
push
icebp
sub
mov
push
cmp
mov
jo
sub
mov
adc
inc
mov
or
add
sbb
fistp
test
ins
mov
loopne
push
inc
cld
sbb
cs
sbb
iret
add
pop
add
push
push
add
jbe
mov
or
add
push
cmp
sbb
shl
je
je
sub
jmp
mov
mov
test
lea
jne
mov
aaa
sbb
scas
out
sub
dec
dec
es
loop
dec
push
and
push
jbe
loop
dec
dec
adc
pop
cmc
pop
aaa
mov
xchg
pusha
push
push
push
push
mov
or
test
cmp
sbb
and
sub
(bad)
lock
jmp
cmp
mov
lods
push
push
dec
rol
xchg
pop
je
lahf
mov
jle
aaa
add
add
out
add
push
inc
loopne
out
pushf
mov
push
push
shl
jmp
adc
std
scas
rol
dec
popf
js
mov
rcl
out
into
xor
xchg
mov
imul
push
sub
fidivr
test
into
aad
push
inc
sbb
push
push
ret
sbb
lea
xchg
popf
inc
jo
sbb
dec
lods
add
out
fld
jp
(bad)
in
cwde
out
push
mov
leave
ficom
je
test
popf
cmp
lahf
adc
out
jmp
inc
and
push
push
popa
loop
xor
xchg
not
sbb
imul
mov
adc
push
stos
loope
mov
inc
add
(bad)
xor
sahf
cmp
dec
pop
dec
add
cmp
push
push
inc
lock
add
push
cwde
sbb
jo
xchg
adc
jo
cwde
cwde
retf
je
or
add
add
adc
sbb
add
fisub
aad
adc
cmp
ret
dec
fsub
mov
test
les
add
add
jbe
push
add
inc
mov
shl
std
or
jge
mov
test
xor
inc
adc
(bad)
jnp
jg
push
mov
pop
inc
inc
mov
mov
xor
jge
aas
inc
push
dec
xor
gs
mov
jne
dec
inc
sbb
adc
(bad)
popa
push
loop
sub
call
add
fisttp
clc
pop
and
ins
jmp
push
pop
or
mov
loop
fwait
movs
jne
push
and
sbb
ja
retf
pop
xor
fimul
jmp
jle
inc
push
sub
push
push
jo
adc
add
sti
jne
mov
push
sbb
call
mov
mov
and
inc
mov
jecxz
xchg
ins
cwde
add
inc
aam
inc
dec
sbb
pop
(bad)
sbb
out
stos
push
imul
mov
pop
cmp
jne
mov
ret
dec
js
sub
xlat
add
and
ds
xchg
sbb
jmp
data16
cmp
test
adc
sbb
sbb
push
jne
jecxz
js
add
add
add
int3
push
push
dec
add
push
ret
stos
mov
cmp
cwde
call
ja
call
inc
add
movs
dec
inc
or
cld
mul
pop
jne
xor
push
fild
mov
loop
cmp
test
adc
add
rcl
scas
jb
xor
or
inc
aas
or
ffree
xchg
inc
mov
or
sbb
or
push
push
cwde
outs
or
xchg
or
dec
stos
adc
or
(bad)
les
xchg
and
pop
loope
stos
or
jl
pop
add
outs
jo
mov
mov
call
test
sti
daa
dec
inc
push
sub
adc
fcmovb
out
or
or
xchg
cdq
add
jbe
sbb
sbb
xchg
clc
inc
push
push
stc
jo
cmp
cld
cdq
add
out
push
push
push
push
jnp
adc
retf
push
xchg
jne
push
fstp
dec
pop
xor
mov
mov
adc
cs
push
prefetch
or
mov
and
mov
sbb
dec
in
sbb
mov
or
or
jg
mov
push
or
pop
pop
jg
adc
dec
add
or
inc
add
jle
scas
inc
add
or
or
mov
jl
push
addr16
mov
fld
mov
fstp
jmp
(bad)
outs
jno
push
cld
adc
mov
add
out
xor
push
mov
inc
lds
mov
(bad)
pop
add
inc
adc
test
loopne
fisttp
int
fisttp
add
cwde
inc
pop
movs
add
mov
add
pop
pop
cld
test
pop
jne
add
pusha
data16
push
cmp
sub
sbb
sbb
push
(bad)
call
adc
mov
dec
es
aas
push
fwait
mov
adc
fisttp
or
cld
push
call
xor
inc
adc
jmp
pop
dec
pavgw
adc
or
out
jne
xor
sbb
scas
and
xor
pop
ret
mov
push
aam
push
(bad)
or
sub
repz
mov
push
push
jmp
cmp
jle
sbb
loop
mov
xchg
or
sbb
cwde
or
pop
ret
push
xor
pop
or
jg
mov
cld
int
add
or
push
push
push
popa
mov
and
hlt
sbb
lods
call
ds
cmp
adc
add
mov
push
clc
mov
push
xor
and
sbb
add
mov
add
inc
cmp
jl
int3
add
jmp
jecxz
push
adc
and
pop
push
fs
sub
pop
pop
arpl
pop
push
mov
loop
push
aas
in
adc
loop
dec
repz
mov
stos
or
or
aas
sar
or
or
mov
push
mov
push
push
inc
sub
dec
mov
xchg
scas
mov
inc
inc
jo
(bad)
imul
adc
popa
clc
sbb
or
sbb
fs
adc
in
es
xor
add
shl
sbb
add
inc
sub
test
wbinvd
add
movq
jge
xchg
jle
push
cdq
lea
rcl
push
fstp
nop
xchg
pop
pop
inc
rcr
jle
sbb
es
and
jge
xchg
loopne
les
dec
adc
jl
pop
pusha
fstp
aas
mov
ins
and
mov
cmpps
or
mov
add
adc
hlt
sbb
inc
rol
mov
sbb
sti
adc
mov
push
push
mov
fnstsw
or
and
ret
and
fwait
sbb
push
xchg
pusha
lea
loopne
adc
mov
data16
mov
mov
adc
or
add
mov
lods
lods
sub
mov
icebp
aaa
or
push
in
jle
mov
push
iret
or
test
mov
mov
push
cs
mov
push
push
xchg
and
push
inc
pop
pop
cmp
into
add
jmp
inc
mov
icebp
inc
xchg
cmp
in
sbb
or
mov
xor
mov
inc
or
push
mov
fadd
push
sbb
or
push
add
call
aas
add
push
push
jmp
mov
adc
jbe
idiv
add
int3
mov
sbb
or
or
add
not
adc
mov
mov
jne
neg
or
iret
xor
cmp
jg
xor
pop
ret
mov
test
ja
add
mov
push
push
push
push
push
mov
out
inc
adc
call
xor
and
pop
js
je
push
sbb
lock
cmp
sar
mov
pop
and
aaa
inc
rol
jo
in
push
jns
cmp
lahf
pop
fcomp
clc
out
or
ret
mov
add
movs
mov
out
sbb
sbb
or
add
cmp
sbb
sub
or
jbe
leave
sbb
adc
ds
jle
rcr
pop
pop
pop
pop
ret
jg
fsubr
adc
sbb
lds
test
jg
fdiv
nop
jmp
stc
nop
xchg
mov
push
push
jge
js
loopne
xlat
sbb
push
xor
mov
pop
add
cld
add
add
cld
std
or
push
call
sub
dec
push
and
adc
loopne
push
xor
pop
ret
adc
and
push
dec
sbb
lods
call
jl
add
movs
push
mov
ficomp
and
push
add
add
mov
adc
iret
mov
not
shl
push
jle
es
jae
loope
sbb
mov
ins
jmp
mov
xchg
push
call
xchg
int3
inc
sar
pop
push
pop
hlt
pop
xor
aad
or
cmps
add
dec
nop
mov
adc
and
or
mul
lahf
test
xor
add
push
mov
rcr
add
xchg
sbb
cmc
xor
xchg
or
ja
sub
push
xor
pop
xchg
sti
sbb
scas
bound
sar
(bad)
out
dec
les
jp
mov
add
push
ja
add
jne
pop
ret
push
push
popa
call
jecxz
das
gs
pop
xchg
lea
and
call
cmp
test
and
popf
stos
add
mov
dec
out
test
push
push
and
aam
mov
jmp
out
pop
pop
push
mov
jp
cmp
test
je
push
push
lea
int
adc
mov
test
adc
inc
add
fld
(bad)
out
adc
mov
add
jne
jecxz
test
xor
(bad)
fadd
or
mov
loope
push
dec
sbb
add
push
push
push
loopne
and
lods
inc
add
push
sti
aas
inc
pop
int3
jg
shr
and
test
aas
neg
or
loope
adc
push
mov
call
arpl
(bad)
aad
jle
push
push
mov
lea
push
push
dec
mov
sbb
mov
mov
movs
add
inc
in
mov
pop
mov
ins
call
mov
mov
xor
xor
push
mov
aaa
mov
pop
mov
imul
pop
jmp
rcl
xor
(bad)
vmwrite
xor
or
push
jne
cmp
out
dec
cmp
test
clc
jecxz
mov
adc
push
sbb
xor
cmp
jne
push
inc
mov
or
inc
mov
mov
pop
(bad)
cld
(bad)
cmps
mov
mov
mov
cmp
pop
push
leave
cmc
fs
call
mov
ja
mov
push
sar
(bad)
je
mov
sub
fsubr
(bad)
pop
pop
mov
pop
add
je
sbb
ret
mov
pop
sbb
ins
cld
mov
mov
hlt
pop
adc
jb
aaa
adc
test
push
fs
jb
jnp
dec
mov
and
add
or
loopne
adc
fcom
adc
sbb
neg
adc
bound
sbb
xchg
pop
(bad)
pop
push
push
push
push
cdq
mov
jg
jp
cmp
mov
sti
je
mov
push
mov
mov
jle
jns
mov
xor
jg
imul
mov
lea
aad
fdivr
cmpps
cmp
jle
push
adc
sub
or
mov
cld
sub
fdiv
cmp
pop
inc
es
(bad)
rcr
aas
and
push
outs
cli
sbb
cmp
dec
adc
add
outs
ja
stos
call
les
lods
jno
iret
push
push
aam
adc
xor
ret
sub
mov
jne
cmp
mov
in
sub
shr
mov
fsubr
es
pop
fistp
push
sbb
mov
ret
jno
mov
stos
cmp
icebp
or
int3
push
push
bound
cmps
sub
out
jg
sti
inc
add
push
aaa
nop
lock
jg
ret
or
add
xchg
sbb
push
mov
iret
pop
xchg
push
ret
or
push
push
lahf
jmp
mov
clc
add
mov
shl
mov
sbb
adc
repz
movs
fldz
mov
les
mov
jg
lock
nop
xchg
outs
lock
cli
aaa
mov
jns
dec
or
inc
jecxz
mov
jnp
ror
loope
dec
or
inc
mov
push
adc
mov
pop
mov
jl
cmp
add
xchg
shl
shl
or
mov
mov
call
or
mov
mov
test
sub
mov
test
or
pop
inc
cmp
iret
je
test
cdq
dec
xor
xchg
mov
mov
pusha
ret
xchg
mov
jmp
push
or
push
(bad)
(bad)
cli
mov
mov
push
cmp
mov
mov
cmc
jne
mov
adc
adc
outs
push
scas
mov
jl
shl
mov
aas
mov
mov
mov
mov
add
shr
(bad)
out
or
ficom
out
and
push
pop
add
(bad)
ins
jl
mov
cmp
dec
adc
ja
jne
mov
int
push
lea
sub
pop
add
out
push
push
pusha
push
jg
(bad)
int3
push
sbb
test
jne
push
push
and
push
cmp
fist
push
mov
cmp
jne
or
loopne
lods
and
mov
sub
push
push
push
push
fistp
and
push
mov
add
(bad)
call
pop
fmul
jne
cmp
jbe
mov
xor
add
mov
cdq
mov
mov
stos
lea
loope
(bad)
sti
cmp
jbe
lea
mov
inc
inc
cmp
jl
sub
and
rcr
les
xchg
cmp
cld
lahf
mov
and
out
dec
or
inc
mov
pusha
ret
mov
mov
inc
xchg
add
clc
scas
sub
ins
pop
out
ja
sbb
mov
jmp
mov
push
jb
rcr
adc
sbb
xchg
inc
div
mov
inc
mov
cmp
jae
or
loope
fstp
pop
cmp
mov
inc
jp
add
enter
pop
ret
push
loopne
test
nop
je
mov
xchg
sbb
imul
mov
xor
ret
push
or
inc
jns
inc
mov
jge
adc
das
sub
pop
test
mov
ret
sub
sbb
mov
sbb
pcmpgtb
add
(bad)
or
mov
call
sti
daa
pushf
sbb
inc
cmp
ins
test
mov
jge
dec
jne
lock
stos
ja
and
mov
mov
lods
sub
std
or
mov
rcr
ds
es
push
stos
push
retf
fs
add
push
or
cdq
jbe
cdq
stos
or
pop
mov
aad
aaa
popf
mov
and
mov
ror
or
out
pop
(bad)
leave
dec
adc
fs
(bad)
(bad)
dec
pop
ret
xor
mov
mov
mov
mov
mov
mov
mov
mov
pop
adc
sbb
loop
mov
mov
xor
mov
jmp
mov
xor
xor
mov
jne
jnp
test
mov
bswap
sbb
fst
jne
(bad)
adc
test
push
jl
sbb
sub
ret
mov
xor
cmps
sub
inc
(bad)
dec
gs
and
add
inc
jle
and
push
or
push
add
fadd
add
and
iret
add
inc
ja
adc
and
jnp
(bad)
pop
pop
jbe
call
ins
jne
test
je
and
jg
push
jne
jmp
push
push
fstp
and
mov
push
mov
push
out
add
push
add
push
call
ret
pop
into
fdivr
mov
push
push
sbb
jmp
inc
les
je
pop
or
add
add
dec
push
loop
neg
std
push
je
mov
mov
dec
jne
mov
or
test
jne
out
inc
icebp
sbb
push
push
test
jg
mov
fucomp
xor
add
mov
fwait
push
jl
inc
addr16
ss
push
xchg
xchg
sbb
popa
jmp
cs
in
adc
clc
mov
sbb
ror
push
adc
pop
gs
and
ret
lods
call
je
sub
jo
add
or
leave
(bad)
not
std
mov
pop
mov
push
push
jmp
nop
push
adc
mov
add
adc
test
add
mov
fwait
and
(bad)
leave
and
or
fist
add
add
(bad)
push
mov
push
movsx
sbb
shr
lea
adc
and
adc
or
scas
(bad)
mov
mov
lea
jne
ret
mov
mov
sbb
pop
jp
shl
ret
add
aad
or
comiss
inc
aaa
mov
mov
loope
cmp
outs
or
inc
cld
mov
or
push
inc
call
push
mov
push
push
and
sub
mov
sbb
adc
sub
dec
lods
aas
repnz
outs
pop
xor
add
(bad)
data16
pop
sub
inc
adc
ret
or
or
mov
cmps
sbb
add
ror
cmovno
mov
pop
ret
jle
adc
push
push
je
in
js
jl
or
sbb
inc
push
xchg
and
mov
add
or
dec
or
fmul
cwde
jle
push
imul
js
sub
hlt
jnp
ret
int3
je
addr16
mov
push
in
shl
inc
mov
mov
xor
or
sbb
push
mov
scas
sub
push
mov
sar
test
jle
push
(bad)
dec
sqrtps
jno
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
dec
adc
loope
je
adc
pop
mov
and
dec
pop
je
dec
je
dec
fnsave
add
jne
lods
push
or
jo
or
or
out
ret
inc
clc
or
or
pop
or
sub
test
xchg
jnp
out
fdiv
aas
mov
mov
mov
mov
inc
cld
cmp
cmp
cli
dec
inc
or
mov
jmp
add
stos
cwde
jl
jne
mov
push
add
push
mov
(bad)
sar
add
xchg
push
pop
in
aam
pop
mov
push
adc
xlat
inc
push
add
inc
or
inc
or
adc
add
push
mov
xor
cmp
je
mov
ficom
lock
push
pop
stos
pop
pop
mov
mov
adc
(bad)
iret
cmp
push
jge
push
gs
loopne
jo
cmp
mov
outs
mov
xor
test
setne
mov
or
mov
repnz
gs
fwait
(bad)
pop
cmp
xrelease
jne
dec
jnp
loop
or
lock
pop
xor
sbb
cmp
jne
mov
ja
gs
adc
adc
shr
inc
or
clc
ins
stos
pop
lahf
mov
rol
jb
sbb
mov
aas
fadd
add
pop
pop
push
push
and
mov
adc
add
lea
(bad)
push
mov
mov
shl
or
inc
mov
dec
test
jne
cmp
sub
mov
xor
mov
aaa
sbb
sbb
cmp
test
jne
jae
cli
cmp
ror
jg
add
int3
out
enter
mov
cmovs
je
ret
adc
add
dec
test
mov
je
cmp
dec
mov
cdq
retf
add
mov
mov
sar
and
(bad)
mov
inc
mov
shl
shr
inc
test
mov
jne
loope
sbb
mov
(bad)
outs
clc
mov
mov
sub
jne
mov
mov
inc
test
jl
(bad)
mov
sub
mov
mov
cmp
jne
dec
sub
jge
xor
lods
ror
jg
rol
xchg
sbb
lds
dec
push
adc
jae
push
shl
cmp
je
lock
rcr
out
mov
dec
or
std
xchg
std
jmp
or
mov
add
cmp
jg
jge
(bad)
(bad)
call
lea
test
push
jl
mov
mov
lea
sub
mov
mov
jmp
(bad)
(bad)
cmp
ja
jb
dec
xchg
sar
adc
pop
xor
inc
inc
xor
rol
setne
add
jne
push
jmp
cdq
push
cmp
(bad)
fucomip
ret
fcom
sti
add
add
jecxz
out
js
cmp
jg
aam
jnp
inc
cmp
inc
push
or
sahf
jmp
(bad)
out
and
iret
mov
mov
jl
inc
jg
hlt
push
dec
add
mov
xor
or
out
adc
mov
and
mov
xor
shl
add
ret
call
shl
mov
and
neg
sbb
neg
adc
test
add
dec
ins
leave
inc
adc
or
inc
push
add
js
mov
add
jmp
add
or
mov
cld
cmp
jne
lea
test
inc
pop
mov
dec
adc
aas
int
jge
(bad)
push
add
outs
dec
push
xor
call
jge
mov
sub
mov
lea
cmp
jne
inc
sub
fild
test
jle
add
lea
jmp
pop
das
cmp
jne
gs
mov
mov
lock
cld
cmp
je
pop
sbb
pop
outs
pop
dec
pop
ret
jae
cmp
pop
or
lea
mov
sti
mov
sbb
(bad)
in
int3
scas
sbb
cmps
mov
pushf
movs
and
and
jo
adc
push
sbb
out
inc
(bad)
push
aas
je
sub
dec
push
add
retf
adc
shr
mov
push
sbb
(bad)
adc
jg
or
jge
scas
mov
sbb
(bad)
or
cmps
(bad)
pop
push
and
mov
jg
mov
clc
push
push
pop
lods
jmp
(bad)
mov
pop
and
pop
div
icebp
ficomp
repz
call
aad
cmp
shr
push
fldenv
xor
sbb
and
xor
call
push
push
jbe
(bad)
sbb
pop
add
and
inc
push
ret
inc
mov
dec
add
int3
mov
rcr
push
jmp
jmp
adc
push
mov
jo
aas
xor
push
call
call
and
je
push
into
sbb
imul
push
pop
sbb
(bad)
jg
jno
adc
jne
mov
cmp
ja
lea
and
lea
jg
inc
add
and
mov
fmul
push
push
push
inc
ret
(bad)
fld
je
xor
mov
shr
push
adc
push
mov
or
ja
dec
mov
in
ret
and
ret
mov
arpl
push
call
je
mov
adc
mov
lea
mov
scas
ss
lea
pop
pop
mov
mov
push
or
push
lea
retf
ja
or
sti
add
adc
outs
and
xor
test
xlat
(bad)
inc
push
or
dec
add
mov
and
add
add
dec
push
mov
call
adc
popf
mov
mov
ja
dec
in
retf
add
fild
fdivr
and
push
push
push
push
push
sub
sub
fistp
jmp
ja
or
idiv
mov
mov
int3
xchg
jo
mov
jo
jns
adc
inc
cld
push
and
pop
ret
push
push
dec
pop
push
or
push
add
sub
mov
or
push
push
clc
adc
fldcw
and
mov
loopne
adc
loopne
mov
and
push
aaa
jo
movs
push
les
mov
stos
sub
xor
cmc
inc
icebp
push
push
mov
push
int3
pop
dec
add
add
mov
imul
shl
clc
mov
jp
cmovne
popa
or
lea
in
test
add
retf
jl
pusha
add
or
in
jne
stos
outs
pusha
push
ins
mov
je
mov
push
adc
and
and
inc
cmp
ret
mov
not
mov
mov
mov
test
jle
ds
and
mov
push
inc
add
loopne
fisub
or
daa
stos
mov
aas
add
push
jmp
sbb
aaa
inc
add
inc
jl
sub
cmps
add
mov
in
mov
mov
dec
adc
popa
mov
inc
pop
mov
dec
mov
cmp
lods
pop
or
jne
push
cld
ret
loope
inc
pop
pop
mov
mov
ret
retf
dec
cld
xchg
jnp
fiadd
icebp
pop
mov
(bad)
imul
(bad)
inc
jne
mov
jmp
mov
mov
mov
scas
or
aad
cli
(bad)
inc
(bad)
mov
pop
ret
test
jne
mov
jmp
test
jne
dec
mov
das
push
inc
mov
and
lea
inc
lea
cmc
and
or
icebp
lea
mov
mov
inc
or
sbb
mov
mov
ret
test
dec
dec
jne
sub
mov
loop
mov
test
and
push
mov
rol
dec
add
aam
and
dec
adc
dec
sbb
dec
sbb
cmp
push
sub
lds
and
mov
les
lods
ins
mov
add
rol
aas
sub
add
stos
and
cmp
test
cld
inc
and
lea
xchg
mov
add
mov
add
ins
mov
mov
int
call
add
inc
(bad)
(bad)
push
je
dec
mov
ret
mov
dec
mov
mov
mov
push
mov
mov
cmp
jae
sub
mov
mov
add
fild
push
mov
cld
mov
or
adc
and
pop
and
push
push
mov
add
fstp
dec
icebp
(bad)
in
(bad)
sub
vandps
pop
mov
add
mov
push
cmp
dec
and
mov
test
je
test
adc
test
je
push
push
jnp
loopne
sahf
mov
push
or
mov
fwait
or
and
jge
mov
mov
mov
jmp
popf
mov
not
jmp
inc
pop
mov
test
jne
xor
push
xor
es
inc
sbb
loop
(bad)
(bad)
jne
test
je
push
sub
ins
out
shl
and
ss
ret
mov
(bad)
sbb
into
push
mov
push
jmp
push
data16
rcl
inc
popa
inc
pop
inc
mov
icebp
mov
xor
movntq
pop
adc
xor
and
push
add
sub
not
cmp
les
sub
cld
sbb
and
je
jne
loop
ret
inc
and
je
add
sbb
fdiv
and
push
pop
or
js
push
adc
cmp
cmp
and
or
test
pusha
mov
sbb
push
sahf
nop
test
fdiv
adc
ret
xchg
adc
cmp
sbb
je
(bad)
push
je
xchg
dec
mov
mov
mov
hlt
ja
add
jp
cmp
jg
aas
fist
add
ins
and
sbb
fist
add
mov
mov
je
mov
push
pushf
test
push
stc
pop
lahf
pop
je
aas
xor
cmp
test
inc
je
test
js
outs
in
jle
push
mov
cmp
out
jo
std
jmp
pop
pop
jo
add
pop
mov
dec
jbe
xchg
jno
jno
cmc
fsub
adc
adc
jae
inc
dec
je
jne
aaa
fldcw
ss
xchg
adc
loopne
and
pop
push
ja
cs
aad
and
jmp
push
imul
add
pop
arpl
or
stc
dec
ret
mov
aas
jmp
pop
pop
aad
fdiv
sbb
pop
jp
mov
jnp
or
(bad)
jne
push
mov
jge
imul
(bad)
mov
pop
gs
pusha
mov
push
lahf
clc
push
inc
jmp
inc
jne
sub
call
and
test
pop
cmp
icebp
fidivr
ins
mov
jle
push
adc
cmp
daa
push
xor
cld
inc
cmp
and
jge
(bad)
mov
int3
jmp
push
cmp
xchg
or
sar
dec
inc
das
(bad)
aad
dec
pop
adc
cmc
dec
adc
sub
push
inc
add
clc
add
cmp
mov
jne
or
inc
cmp
jne
mov
pop
outs
ret
or
push
push
and
neg
jne
and
and
out
or
sbb
sbb
and
out
in
dec
add
sbb
lock
and
imul
and
lock
mov
fstp
cmp
push
(bad)
jmp
movs
sbb
inc
inc
add
mov
or
inc
aaa
and
sbb
pop
adc
neg
inc
and
and
test
std
(bad)
call
xchg
scas
mov
sbb
ins
cmp
adc
fst
out
sbb
cmp
jne
mov
adc
mov
loopne
jmp
cmp
jge
sbb
(bad)
jmp
xchg
add
nop
cmp
push
push
sbb
push
je
mov
xor
sub
or
outs
dec
push
push
out
push
xor
pop
hlt
imul
mov
pop
pop
add
sbb
inc
dec
xchg
adc
push
push
xor
leave
push
shl
enter
mov
test
je
pusha
je
sbb
inc
je
pop
sbb
push
cmp
push
and
mov
jl
cmp
(bad)
mov
outs
iret
mov
arpl
neg
iret
adc
cmp
test
and
retf
imul
or
rcr
ficom
push
aad
jg
ja
leave
je
outs
add
add
add
test
jge
(bad)
mov
lea
neg
test
mov
je
enter
sub
mov
retf
push
out
sbb
sbb
fs
cmp
xchg
dec
test
push
or
or
mov
add
add
jmp
jnp
mov
mov
sub
idiv
add
ror
xchg
pusha
pusha
aas
fdiv
jle
mov
sub
and
in
pop
or
mov
add
jecxz
test
add
int3
std
jae
push
mov
jle
push
or
jle
dec
or
(bad)
cwde
jnp
jle
inc
or
adc
ret
js
adc
jg
add
push
push
jle
scas
ret
sbb
(bad)
jge
adc
fwait
sub
sub
cmps
adc
rcr
ds
adc
neg
adc
mov
mov
mov
dec
test
adc
shl
dec
js
mov
cld
dec
push
lea
add
add
sub
bswap
add
push
pop
sbb
out
cmp
or
cld
pop
inc
inc
cld
jle
xadd
stc
push
push
sub
gs
mov
sbb
push
ja
(bad)
push
lea
and
fild
inc
add
aaa
jge
dec
scas
sbb
push
ja
pushf
jmp
and
sub
ret
mov
clc
cs
jo
inc
(bad)
inc
lock
sbb
mov
stos
iret
test
ret
cdq
push
push
add
sub
push
mov
cmp
inc
cmp
(bad)
xlat
xor
jne
fwait
sub
and
xor
outs
sub
xlat
xor
sub
sbb
cmp
jge
xor
pop
inc
xor
and
rcr
xchg
fdiv
ficom
xlat
cmp
cmps
in
inc
std
push
fld
loope
lea
add
lea
mov
sub
rol
aas
ss
sub
push
lea
push
push
push
sbb
adc
mov
mov
xor
xchg
and
push
sub
add
add
lock
adc
or
push
adc
outs
cmp
ja
scas
pop
test
sub
sbb
xlat
sub
push
push
push
sbb
xchg
test
fisttp
mov
mov
fs
push
(bad)
(bad)
out
sub
fisttp
sub
push
push
lea
dec
ror
and
mov
dec
loop
cmp
sbb
mov
mov
sub
push
push
push
push
lea
(bad)
cmp
inc
mov
jmp
sub
sti
xor
xchg
int3
xor
push
and
dec
pusha
sub
add
mov
pop
add
cmp
jne
fadd
and
ins
outs
inc
or
lahf
ret
sbb
in
lock
jmp
adc
loopne
fcomp
jmp
xor
mov
mov
dec
adc
dec
nop
jae
movs
xor
clc
out
lea
or
rcl
xchg
push
outs
mov
and
mov
mov
cdq
jne
ror
jne
xchg
mov
outs
xchg
clc
adc
repz
adc
xor
xor
std
add
loopne
or
je
add
outs
not
mov
adc
and
adc
loop
and
out
pop
inc
push
(bad)
mov
add
push
pop
xchg
mov
(bad)
jmp
inc
lea
inc
and
and
enter
nop
and
mov
xlat
xor
mov
push
push
sbb
es
sti
iret
rol
cmp
inc
push
push
push
daa
dec
dec
ins
or
or
adc
out
cmps
sbb
mov
add
pop
out
cmp
popf
ss
and
rcr
mov
fdiv
cmp
scas
loopne
out
push
xor
add
jle
aam
mov
cmp
add
push
lods
(bad)
jg
jb
sub
fdiv
add
mov
lea
add
cmp
(bad)
inc
mov
jae
mov
add
inc
mov
je
mov
adc
cmp
add
sbb
jno
mov
pop
cwde
mov
aas
in
cmp
jge
pop
add
stos
sub
sub
jg
sub
call
pop
pop
push
test
jbe
ret
push
mov
ret
lea
push
push
outs
pushf
leave
adc
(bad)
fild
fstp
mov
sub
push
push
lea
push
push
fdiv
adc
cs
icebp
mov
adc
dec
and
lea
dec
mov
ds
inc
in
push
push
adc
cdq
sti
mov
in
jo
aam
dec
jo
cdq
retf
rcl
inc
stos
push
push
rcl
mov
es
and
dec
jp
jmp
pop
push
lds
add
sbb
add
jo
or
fs
imul
mov
jecxz
(bad)
mov
cmp
add
jbe
addr16
and
movs
push
push
sahf
pushf
fwait
cmp
mov
jmp
pop
push
push
lea
jecxz
jl
(bad)
inc
loopne
adc
sub
push
and
or
push
push
inc
inc
pop
sbb
xor
(bad)
xor
dec
xor
jg
push
xlat
inc
push
xor
inc
sub
jbe
pop
and
inc
jno
fmul
jmp
into
sub
add
enter
ror
cmp
mov
xchg
outs
fadd
stos
xor
push
cld
xchg
push
sub
adc
push
jg
enter
mov
(bad)
xchg
and
clc
push
xchg
pusha
mov
sbb
fild
(bad)
cmp
std
cmp
mov
jg
out
xchg
sub
fs
xchg
das
shl
sbb
cmc
push
push
inc
mov
(bad)
out
icebp
inc
push
and
mov
imul
add
add
and
ret
test
ror
push
std
cmp
ret
inc
shr
aad
sbb
push
push
push
push
add
mov
pop
adc
mov
xor
mov
sti
dec
or
cmp
mov
daa
inc
sbb
jge
and
jecxz
test
or
mov
jmp
mov
sar
mov
cmp
jge
cmp
jl
cmp
jmp
jmp
out
bnd
adc
imul
inc
scas
push
adc
sub
pop
das
pop
iret
xor
paddd
in
lea
push
push
imul
cmps
inc
mov
push
xor
fcom
fsub
jp
cmp
sub
jmp
in
push
icebp
jmp
ds
xor
cwde
pop
jmp
jo
mov
push
pop
and
adc
clc
jbe
sbb
sub
stos
sbb
clc
push
inc
and
add
mov
lea
add
cmp
mov
dec
inc
cli
mov
or
jmp
or
int3
or
xor
jo
add
lsl
pusha
push
push
mov
sbb
xor
cmp
idiv
mov
xor
test
add
cmp
je
icebp
das
inc
sub
adc
pop
sbb
aad
sbb
sub
cmp
cmp
and
je
mov
jmp
clc
mov
loop
or
add
ja
mov
sub
inc
or
sti
sub
mov
jne
pcmpeqw
inc
or
jg
jge
(bad)
jl
or
add
je
ss
inc
add
and
xor
sbb
add
mov
mov
std
adc
mov
cmp
jl
cli
cmp
jg
xchg
sti
aad
or
leave
adc
jne
dec
out
or
jmp
add
aam
sbb
push
mov
aad
add
nop
cmps
and
call
jg
cmp
jg
mov
lea
add
dec
jbe
jle
sbb
int3
push
jmp
or
dec
or
enter
mov
push
adc
adc
sbb
sub
push
sub
push
push
push
mov
imul
neg
push
add
arpl
add
add
fs
pop
mov
jmp
push
adc
jle
add
jp
je
mov
and
or
mov
push
movs
pop
les
push
cmps
dec
mov
sbb
call
push
lea
mov
add
inc
and
(bad)
je
js
cmp
cmps
mov
cwde
mov
lock
xchg
les
cmp
or
pop
icebp
sbb
add
pop
jge
mov
cmp
fwait
shl
push
jge
enter
rcr
clc
jns
mov
inc
dec
call
out
lea
sub
aaa
push
push
pop
xchg
and
icebp
dec
and
push
add
push
push
adc
sbb
jg
jmp
in
je
out
and
adc
pop
dec
mov
inc
dec
add
in
adc
sar
cmc
inc
cld
in
je
cmp
je
mov
es
push
aad
dec
jne
jmp
mov
mov
popa
add
pop
stos
and
or
dec
cld
adc
dec
add
adc
inc
add
sub
add
sbb
push
push
push
jae
lahf
ds
pop
ret
mov
cmp
push
shr
loop
jmp
sar
jne
inc
cmc
and
jbe
sbb
add
or
mov
xor
test
je
mov
dec
sbb
pop
add
push
add
inc
mov
je
cmp
sbb
hlt
clc
call
or
add
jmp
cmp
sbb
neg
sub
mov
std
(bad)
push
cli
add
cmp
test
je
test
je
mov
lea
mov
dec
ins
or
repz
rcl
jmp
cmp
je
and
mov
dec
mov
mov
dec
xor
mov
fnsave
add
push
add
sbb
or
jg
xor
add
test
jne
pop
cli
push
or
push
mov
mov
jae
inc
inc
pusha
xor
daa
push
add
pop
xor
inc
nop
mov
cld
push
or
inc
or
adc
ror
test
inc
ret
shl
mov
mov
mov
cmp
add
scas
adc
add
inc
xor
jmp
mov
xor
cmp
jo
call
jp
adc
push
pusha
mov
pop
push
fild
mov
fdiv
retf
add
cmp
imul
int3
jne
daa
and
add
test
adc
adc
xor
je
retf
xor
push
jge
mov
lock
bound
and
mov
adc
out
(bad)
int3
int3
test
test
sub
mov
pop
or
mov
push
das
jne
in
or
fisttp
arpl
sbb
lods
fiadd
mul
adc
call
adc
mov
clc
je
and
hlt
fld
cdq
add
xchg
call
push
push
add
out
cmp
ret
mov
int3
outs
mov
adc
jmp
and
loopne
push
jmp
sbb
mov
scas
pop
test
mov
pop
xor
mov
mov
push
mov
sbb
sbb
add
cwde
stos
xchg
sbb
into
jae
add
push
std
jmp
pusha
inc
push
adc
not
xor
nop
clc
sbb
sub
cmp
jle
xor
jl
or
clc
repz
and
pop
ret
fldcw
aam
(bad)
push
mov
dec
or
adc
sbb
clc
rcr
and
pusha
scas
dec
inc
jnp
pop
nop
add
jmp
ret
add
dec
push
push
test
ss
push
push
add
dec
add
push
mov
mov
adc
popa
adc
les
stos
aad
pop
sub
or
xchg
dec
push
push
push
jmp
jbe
std
push
sub
lds
rcr
or
jmp
dec
add
ret
add
push
mov
lea
cmp
(bad)
jg
xor
test
jle
xor
lea
aas
jmp
xor
jmp
adc
ror
cmp
push
dec
push
sar
mov
inc
add
ret
mov
mov
pop
pop
add
jo
sub
cmc
mov
push
jmp
(bad)
jg
mov
cmp
jne
test
je
mov
or
jmp
stos
xor
pop
mov
leave
jne
xor
aas
test
sbb
sbb
aad
lods
pop
ret
push
mov
(bad)
jmp
repz
(bad)
dec
aam
jne
mov
adc
sbb
pop
ret
mov
bound
xchg
lea
adc
sar
test
push
and
mov
pop
scas
mov
bound
out
es
mov
inc
push
je
mov
jge
mov
cmc
movs
sets
jle
test
daa
xor
repnz
jmp
adc
test
daa
cmp
pusha
scas
push
in
popa
daa
jmp
ja
add
or
sbb
or
push
(bad)
shl
mov
cmp
test
add
jno
fwait
jp
stos
and
imul
jg
stos
xor
jae
rol
psrld
jge
inc
xor
test
push
and
xchg
movs
mov
and
push
lock
and
test
jg
push
jb
sub
push
add
pop
pop
push
aad
or
push
jne
fild
push
push
push
lea
ja
inc
xor
jl
mov
out
or
lea
push
push
add
mov
cld
mov
push
lea
xchg
ficom
lds
jnp
mov
and
jmp
shl
dec
and
sbb
jl
push
hlt
fidivr
xor
sbb
jbe
mov
adc
ja
out
mov
fiadd
jbe
push
pop
pop
inc
hlt
mov
xor
les
add
and
adc
and
test
cdq
push
mov
neg
mov
add
shl
out
cli
sbb
push
jle
mov
mov
in
and
adc
pop
mov
inc
add
jl
cmp
jg
movsx
sub
jmp
cmp
cmovbe
inc
jmp
cmp
jl
cmp
jg
pop
push
(bad)
outs
or
cdq
sub
sar
mov
mov
not
push
jmp
and
xlat
shl
inc
or
inc
cmp
mov
jl
sti
or
pop
jl
pop
pop
mov
rol
or
daa
sbb
mov
add
adc
scas
mov
and
dec
cdq
sbb
push
push
lock
pushf
jnp
iret
add
and
and
je
push
aam
push
cmc
sbb
call
jno
clc
or
test
mov
je
push
cmc
adc
(bad)
movsx
std
mov
call
test
shl
(bad)
popa
dec
std
jle
dec
jne
push
dec
add
push
hlt
push
or
stc
(bad)
fsubrp
fiadd
cmp
jne
aad
inc
gs
je
push
mov
or
retf
dec
inc
ret
inc
sbb
inc
push
push
xor
jg
inc
out
les
mov
ins
and
jle
scas
jmp
jo
cmp
add
(bad)
mov
mov
lea
mov
fcom
sbb
sub
rcr
and
test
je
jne
clc
mov
ds
outs
cmp
ror
or
ror
pop
imul
add
sub
add
test
cwde
lock
call
jge
and
and
mov
aas
aaa
test
jle
je
cmps
int3
jl
adc
jmp
add
push
mov
sub
add
mov
add
add
mov
adc
adc
push
out
and
rcr
add
ret
fs
xor
push
mov
test
jo
fidivr
jae
jp
ins
mov
or
fsub
adc
shr
mov
add
pop
and
je
test
add
rol
rcr
mov
pusha
sub
xor
mov
clc
ds
cmp
jle
inc
ret
dec
sub
jg
dec
jns
push
inc
mov
lods
outs
out
mov
xor
push
add
pushf
test
jne
(bad)
aas
popa
je
aaa
jl
push
lea
mov
jge
sub
je
push
out
jb
xchg
push
jmp
std
pop
mov
lea
fs
adc
es
jne
push
add
ja
inc
and
lea
lea
dec
call
mov
push
std
rsm
xchg
mov
push
cmp
dec
mov
out
sbb
cld
std
aas
fadd
jle
adc
test
std
inc
mov
add
sub
fs
or
or
push
push
xor
and
aas
or
jbe
ror
mov
inc
loope
and
sar
add
adc
push
add
or
loope
fs
add
push
mov
push
add
aas
mov
(bad)
(bad)
jl
adc
je
sbb
ds
mov
retf
push
dec
push
mov
push
xor
jle
jmp
mov
push
add
jne
ret
ds
inc
dec
add
ret
mov
in
jl
xor
std
inc
cmp
sbb
add
xchg
or
daa
mov
push
cmp
test
sub
cs
hlt
bound
lea
inc
push
rcr
or
mov
jp
add
test
inc
inc
mov
gs
adc
inc
and
loope
add
mov
adc
int
ror
jnp
pop
jne
lea
clc
retf
(bad)
ss
jmp
push
(bad)
mov
cmp
cmps
dec
mov
jmp
inc
push
enter
sub
add
add
and
add
or
cmp
or
jecxz
jmp
ret
int
and
add
cdq
test
ret
cmp
inc
popa
dec
xor
mov
test
and
fisub
in
ins
or
hlt
pop
mov
adc
push
ret
sbb
cld
jle
shl
leave
mov
test
jge
push
adc
fs
(bad)
add
adc
sub
rcl
or
pop
test
dec
ret
ss
idiv
push
js
ds
inc
adc
dec
and
pop
je
adc
jo
imul
adc
inc
sub
push
cmps
adc
xchg
sbb
sbb
inc
mov
fiadd
cmp
mov
sbb
sbb
mov
mov
sbb
push
jnp
ret
mov
add
pop
rcr
pop
cld
or
mov
dec
xchg
shr
shr
pusha
daa
mov
and
sub
cmps
ss
std
enter
lahf
push
popf
fiadd
or
and
cmp
cmps
mov
neg
je
pop
or
add
cmp
or
adc
lock
dec
adc
imul
jbe
mov
nop
test
(bad)
fiadd
push
push
call
cmp
and
push
not
mov
or
mov
adc
jle
dec
add
loope
mov
jne
push
(bad)
sbb
cmp
sbb
push
push
les
push
cwde
push
mov
retf
sbb
test
jne
xchg
aas
xor
mov
test
retf
adc
jae
jnp
dec
mov
popf
es
shl
jbe
push
test
adc
mov
js
lea
jb
and
or
call
fstp
fsub
dec
adc
push
push
or
jne
xchg
or
inc
cmc
jp
lock
mov
cmp
ret
push
inc
out
cmps
cmp
jno
and
dec
in
xchg
int
cmp
jne
mov
retf
push
ds
and
cld
mov
mov
out
mov
mov
sub
lea
cmp
cld
data16
sub
lds
dec
inc
inc
mov
push
jns
dec
lock
inc
push
mov
push
inc
out
ret
push
xchg
and
xchg
mov
shl
pop
rcr
je
dec
push
push
jae
jb
es
push
push
movs
mov
xor
or
mov
repz
adc
push
mov
out
and
or
push
pop
hlt
rol
xor
ins
fs
call
xor
and
add
out
cmps
test
push
popa
or
outs
jmp
xor
inc
add
add
add
jmp
les
out
push
add
add
inc
cmc
ret
xor
push
push
dec
lahf
sub
push
repnz
add
stos
loop
(bad)
adc
fcomp
mov
jo
pop
pop
jge
(bad)
sub
je
fsubr
sar
test
xchg
and
data16
aas
mov
div
and
aam
push
jmp
jg
adc
test
mov
add
xchg
mov
push
icebp
scas
mov
adc
push
retf
push
xor
add
lahf
shr
add
pop
xor
pop
ret
mov
add
cmp
jne
mov
cmp
jne
inc
into
dec
push
xor
shl
xchg
jns
push
cmp
je
mov
test
je
dec
gs
xor
cmp
mov
xor
inc
cmp
or
addr16
xor
jg
imul
dec
jl
ret
(bad)
(bad)
inc
cmp
je
cmp
jl
cmp
jg
inc
jmp
push
mov
aaa
in
mov
or
jne
inc
mov
inc
test
pop
and
pop
xchg
loope
jb
inc
aas
and
lds
jb
fcomp
lods
(bad)
fwait
nop
and
mov
ret
pop
iret
mov
mov
jne
push
(bad)
ret
sbb
les
(bad)
sbb
push
dec
cmp
popa
cmp
cld
aad
call
push
shl
clc
inc
aas
mov
cmps
cmp
jne
or
inc
ins
adc
ins
es
out
(bad)
fisttp
push
and
ds
sub
jle
je
xor
pop
lods
fst
shr
jne
pop
jbe
jmp
push
push
push
outs
clc
test
rcl
ret
or
and
pop
mov
mov
mov
inc
adc
dec
jb
and
sub
xchg
stos
mov
test
or
jo
xchg
sub
sbb
sbb
adc
cld
clc
add
add
sub
les
(bad)
add
xor
xchg
xor
mov
int3
int3
mov
in
adc
aam
outs
sub
fmul
mov
mov
mov
stos
clc
ror
jmp
pop
clc
push
add
sbb
inc
mov
add
jne
push
adc
mov
push
dec
repz
enter
and
dec
push
hlt
pop
dec
add
jne
inc
clc
xchg
aam
ret
adc
mov
mov
ret
nop
sub
repz
ss
popa
or
mov
cmp
mov
add
ret
movq
sbb
push
mov
push
call
mov
call
adc
add
mov
adc
mov
push
push
gs
shr
not
aaa
mov
push
dec
adc
mov
aaa
jge
rol
ins
add
mov
or
dec
adc
or
push
test
jg
jns
xchg
sti
ror
ret
mov
pop
cmp
and
inc
jg
je
xor
cmc
inc
cli
cmp
ja
movzx
push
inc
ret
ss
cmp
je
stos
xchg
adc
adc
and
std
or
mov
cs
popa
xor
xchg
es
add
add
adc
sti
push
pop
or
add
int3
mov
popf
xor
call
rol
push
int3
popf
andps
dec
or
sbb
sahf
xor
loope
push
or
test
loop
sbb
xor
inc
jne
mov
les
scas
sti
pop
rcr
ret
mov
jmp
inc
sub
dec
data16
call
out
or
lea
loopne
push
cmps
dec
stc
pop
mov
or
add
adc
dec
add
add
xchg
test
add
ror
ret
das
loopne
cmp
inc
push
lea
add
add
and
dec
push
pop
je
push
add
pushf
or
pop
aas
idiv
or
outs
outs
shr
mov
rcl
sub
inc
and
pop
sbb
dec
cmp
push
push
aaa
hlt
icebp
shl
sub
mov
sbb
rcl
les
mov
scas
jle
push
sbb
or
mov
mov
and
test
or
jle
sbb
push
test
mov
sbb
mov
xchg
out
cmp
xor
and
adc
pop
mov
in
dec
push
pop
dec
cmps
mov
jno
fmul
retf
fisubr
mov
or
imul
adc
ret
mov
push
mov
pop
sbb
push
push
pop
arpl
and
test
push
loopne
loopne
bound
call
jmp
jmp
jns
mov
test
jg
push
push
mov
push
dec
loopne
push
out
sbb
ins
mov
push
add
sbb
cmp
jb
scas
or
mov
test
mov
popf
jae
dec
or
jne
push
cmp
xchg
in
test
enter
imul
inc
push
jmp
je
dec
cwde
xchg
mov
fsubr
(bad)
sbb
sub
push
loop
add
lock
or
ins
aaa
or
(bad)
sub
jne
mov
in
sbb
add
and
aaa
in
add
fist
icebp
dec
add
lods
(bad)
dec
add
add
fimul
push
cli
xor
xchg
add
sbb
add
dec
int3
iret
or
add
pop
or
nop
nop
sub
test
push
push
push
push
mul
gs
sbb
sbb
mov
jg
adc
push
mov
mov
test
mov
imul
dec
es
dec
daa
add
aaa
jb
sar
inc
or
jl
inc
inc
out
outs
or
mov
cmp
add
(bad)
push
jne
push
dec
inc
sub
imul
out
lea
push
mov
mov
das
add
mov
jle
and
dec
cli
(bad)
jle
mov
mov
push
push
mov
pop
lods
mov
mov
pusha
adc
or
xchg
sbb
xchg
pop
pop
mov
pop
pop
add
test
push
push
daa
push
jecxz
or
mov
sub
inc
xchg
je
sbb
add
iret
je
in
jo
lea
push
stos
ins
pop
cld
or
(bad)
push
js
inc
loop
pop
movs
add
div
mov
sbb
xor
jnp
pop
inc
aas
shl
pop
xchg
leave
pop
dec
jge
dec
or
int3
cwde
loope
adc
adc
sub
push
loop
push
imul
adc
add
fs
add
js
mov
cdq
mov
es
out
xchg
dec
push
or
mov
inc
jb
rcr
pop
add
jg
pop
neg
int3
mov
dec
pushf
out
xor
leave
(bad)
or
mov
dec
push
inc
push
mov
add
push
xchg
pop
aad
int
mov
add
mov
push
pslld
outs
push
add
test
and
dec
mov
ins
js
mov
mov
push
mov
cwde
inc
sub
cmp
lea
je
xchg
pushf
push
shl
cwde
cwde
or
adc
outs
mov
dec
pop
mov
pusha
inc
and
push
shr
or
mov
mov
mov
scas
sub
cmovbe
sub
dec
call
or
or
not
setne
mov
pop
std
push
les
push
jnp
retf
xchg
cld
jne
pop
dec
jl
inc
xchg
clc
out
jmp
and
mov
out
mov
push
push
add
inc
xchg
out
ins
mov
sbb
push
push
push
popf
or
popa
adc
ret
movs
shl
adc
adc
stos
mov
or
mov
nop
popf
adc
mov
cs
sub
inc
jbe
xchg
das
mov
or
add
sbb
push
mov
jmp
and
and
adc
sbb
sbb
test
call
cmp
je
fistp
inc
or
(bad)
je
iret
je
or
test
out
xor
pop
or
js
(bad)
jp
(bad)
out
add
add
push
sar
jg
mov
outs
inc
and
jne
push
push
xor
add
jmp
and
xchg
cmp
adc
cmp
(bad)
(bad)
push
inc
cmp
jno
push
add
push
adc
or
sbb
and
dec
or
pop
aam
inc
mov
out
loopne
xor
movs
pop
and
jge
add
sbb
mov
ficomp
stos
jne
jge
cmp
jne
outs
and
(bad)
test
inc
cld
jg
fidivr
idiv
test
jle
in
cmp
shl
push
leave
sahf
retf
pop
adc
cmp
push
push
dec
enter
add
mov
xchg
dec
out
mov
test
(bad)
push
mov
int3
test
inc
loopne
and
or
lock
ror
hlt
lahf
mov
enter
sub
xor
hlt
jbe
mov
jl
sbb
push
xchg
test
cdq
test
ret
(bad)
pop
sbb
dec
sahf
and
shl
neg
rcl
das
mov
jg
out
xchg
pop
push
ret
or
mov
mov
jmp
mul
imul
xchg
sub
push
pusha
punpckhdq
push
fld
int3
test
in
test
jnp
mov
addr16
push
cmp
dec
fild
or
sbb
jnp
or
jg
js
jne
or
cmps
jmp
or
popa
inc
and
popa
dec
lock
xor
aas
or
or
or
cdq
lods
fwait
imul
loopne
dec
push
je
mov
rol
(bad)
rol
add
dec
or
pop
or
inc
mov
inc
cmp
adc
dec
jne
push
retf
or
or
or
pop
jne
jl
or
adc
adc
cs
je
(bad)
std
xchg
je
test
je
jl
sbb
je
sub
shl
and
sahf
or
sub
les
popf
dec
xor
push
xchg
xchg
repz
mov
sub
int3
or
enter
mov
and
test
test
je
or
sub
shl
or
and
push
mov
jo
aas
ret
adc
xchg
adc
dec
ins
cmp
add
or
cld
mov
mov
push
(bad)
retf
jecxz
or
or
loopne
xchg
inc
jmp
popa
xlat
dec
jp
into
and
adc
xor
inc
jecxz
jp
cmp
test
jne
imul
xor
and
cmp
(bad)
push
cmp
movs
add
pop
sbb
pusha
test
(bad)
(bad)
jmp
push
aad
jne
sub
jg
xchg
popf
lock
pop
adc
push
adc
push
cld
es
lahf
adc
or
mov
push
sti
xchg
addr16
push
or
push
out
add
add
jae
cdq
mov
or
out
pop
xor
pop
sbb
mov
jl
retf
adc
push
jne
add
pop
outs
dec
popa
add
scas
jnp
jne
push
not
les
pop
ret
aaa
or
hlt
jg
(bad)
pop
ret
cmp
jne
mov
pop
mov
mov
test
aam
sbb
call
int3
inc
add
xchg
sbb
mov
mov
cli
les
jb
pop
push
push
or
sub
cmp
add
les
fdivr
adc
sbb
rcr
es
xor
push
std
sar
les
das
popa
test
adc
inc
shl
ffree
jo
mov
pop
adc
adc
fist
lahf
push
lock
add
add
out
xor
sub
mov
push
adc
hlt
inc
mov
push
inc
iret
push
lock
nop
xor
mov
pop
aaa
cmp
cmc
sti
xchg
cwde
int3
pop
shr
je
mov
stos
add
cmps
xor
mov
sub
in
mov
out
loopne
mov
push
or
cmps
or
xchg
std
ror
int3
std
mov
pop
inc
sbb
(bad)
jge
mov
mov
movs
fild
cmc
jmp
mov
pop
mov
clc
mov
mov
stos
pop
icebp
out
ins
mov
inc
or
xchg
pop
push
clc
and
mov
test
cwde
fadd
mov
cwde
into
inc
or
push
aaa
xchg
inc
or
dec
or
or
mov
and
out
push
fcos
and
jle
xor
adc
shl
cmps
jp
ret
adc
or
mov
dec
sbb
cmp
mov
sbb
sub
pop
repz
lock
(bad)
push
or
cmp
je
aam
cs
xchg
pop
push
push
sub
aad
add
inc
and
push
lea
cs
js
call
push
push
addr16
aam
adc
pop
ret
push
xchg
es
xor
pop
icebp
jo
jmp
dec
adc
test
inc
pop
or
cmp
mov
push
add
add
scas
sbb
or
int3
push
jo
and
lods
jae
mov
dec
jne
mov
or
add
xor
inc
adc
mov
pop
pop
mov
(bad)
jmp
aad
pop
mov
mov
pop
pop
ret
cmp
push
jl
mov
mov
sub
lock
retf
push
pop
xchg
add
shl
dec
add
mov
(bad)
(bad)
jmp
mov
shr
add
shl
jbe
push
ret
xchg
js
clc
jmp
push
adc
mov
inc
ror
rol
jae
sbb
sti
push
push
push
pop
xor
pop
mov
xor
lea
sbb
add
mov
loope
mov
cmp
int
mov
cmp
(bad)
(bad)
(bad)
call
or
retf
xor
add
jmp
mov
cmp
jl
adc
sub
inc
data16
stos
pop
mov
adc
ret
lea
xchg
test
int3
retf
or
ror
mov
adc
mov
pop
data16
loopne
out
cmp
push
(bad)
push
nop
imul
or
dec
inc
nop
mov
inc
or
add
or
jbe
(bad)
call
mov
test
je
inc
mov
inc
inc
dec
adc
test
je
mov
lea
inc
or
je
loop
xor
push
and
push
xor
test
push
jbe
out
mov
sbb
test
ja
dec
pop
adc
sbb
inc
test
je
inc
mov
inc
add
jmp
pop
mov
ret
pop
add
sbb
jg
xor
xor
inc
xchg
adc
mov
jo
push
xchg
sbb
test
xchg
push
leave
je
pushf
(bad)
mov
fs
lahf
sub
mov
dec
ret
pop
aam
test
mov
int3
int3
mov
stc
mov
push
sbb
repnz
pop
mov
or
adc
push
mov
xor
adc
fisub
dec
(bad)
dec
dec
test
(bad)
out
mov
cdq
sub
mov
mov
sar
sub
std
adc
and
je
fstp
inc
sbb
je
psrad
mov
sbb
test
add
adc
test
pop
int3
adc
fxsave
call
add
push
and
test
cmp
scas
add
push
and
test
stos
add
hlt
gs
je
sub
sub
test
jo
mov
push
jge
cmc
pop
jge
xor
inc
sbb
pop
mov
add
(bad)
inc
and
or
mov
add
addr16
cs
push
jl
shr
sbb
adc
push
(bad)
sub
nop
(bad)
dec
dec
cmp
jne
mov
cmp
jne
mov
loop
mov
sub
push
sbb
add
cmp
cmp
adc
jle
or
inc
push
cmp
add
and
or
retf
test
je
(bad)
xsavec
push
sbb
sub
push
outs
mov
mov
mov
add
jb
hlt
out
sbb
lea
dec
jns
cmps
mov
jne
inc
cmp
jb
add
jo
and
shl
dec
inc
or
sub
scas
or
je
jo
dec
inc
aad
push
adc
mov
and
jne
xor
mov
mov
or
and
daa
mov
push
push
out
mov
ror
repz
in
fld
add
addr16
jge
out
mov
cmp
(bad)
dec
(bad)
pop
mov
push
in
jle
add
xchg
(bad)
in
add
cmp
jp
push
cs
or
or
imul
xor
push
mov
cmp
mov
mov
jo
push
sbb
(bad)
sti
sub
je
mov
push
push
into
or
push
cmp
cld
or
(bad)
gs
(bad)
mov
inc
sub
push
push
jmp
xchg
lods
sub
sub
lds
mov
sbb
xor
lock
or
cmps
cmp
mov
or
es
aam
arpl
pop
dec
mov
and
pop
test
xor
add
push
push
cmc
(bad)
push
jge
or
jo
pop
fild
stos
push
nop
jmp
fldl2e
sbb
push
xor
pop
sub
push
scas
mov
ror
add
cwde
add
adc
fist
je
pop
mov
sbb
sbb
mov
mov
push
shl
mov
and
sbb
mov
test
and
mov
push
jmp
push
cli
inc
or
inc
mov
add
mov
adc
sbb
test
sbb
push
fwait
cmp
xor
mov
int
add
dec
fsub
cmp
cmp
jmp
cmp
in
mov
(bad)
in
cmp
push
dec
add
adc
pop
setg
lea
ffreep
or
aad
dec
and
jle
jmp
fmul
ss
mov
pusha
mov
push
dec
outs
add
jmp
out
jle
nop
cmp
dec
sub
sbb
mov
leave
sti
mov
xchg
inc
into
inc
cmp
jl
scas
mov
aas
ret
ror
push
ror
or
jo
test
aaa
dec
jmp
mov
inc
sub
sbb
into
inc
je
xchg
pop
mov
fisub
xor
sbb
cmps
adc
mul
loopne
bsf
mov
aas
sub
das
adc
mov
xor
cmp
jle
lock
push
imul
sub
arpl
arpl
inc
std
jg
or
jecxz
inc
pusha
jg
inc
dec
cmp
jl
ret
loopne
push
retf
inc
add
xor
test
jle
(bad)
fist
test
(bad)
cdq
pop
out
or
fiadd
outs
out
fild
cmp
cmps
and
sar
mov
sub
mov
cs
or
sub
mov
add
mov
jmp
ror
jmp
and
or
cwde
mov
or
xchg
push
cmps
and
pop
pop
add
and
adc
stc
mov
inc
std
pop
add
ret
cmp
jge
mov
jg
adc
inc
mov
cmp
mov
jl
rol
add
jbe
(bad)
jg
cmp
retf
mov
mov
inc
add
cmp
jb
add
and
leave
and
adc
push
loop
pop
mov
pusha
push
je
or
call
jno
movs
pop
mov
add
push
lea
add
and
mov
fcom
add
push
scas
mov
mov
mov
mov
inc
add
sub
test
mov
jle
mov
lea
sub
(bad)
cld
mov
sub
test
jne
int3
dec
scas
xchg
mov
mov
sbb
inc
mov
mov
push
xor
test
mov
cmps
or
mov
inc
loope
dec
push
and
sbb
adc
sub
jl
jmp
scas
pushw
mov
add
ss
mov
inc
add
cmp
push
mov
jle
jne
inc
push
mov
pop
data16
and
inc
dec
add
popa
sub
test
adc
bound
fcmovbe
lock
sbb
cmp
add
add
add
pop
in
ins
mov
(bad)
jns
jecxz
cmp
jl
push
cmp
jmp
cmp
mov
call
push
inc
jmp
adc
rol
sbb
std
dec
pop
push
adc
mov
push
je
test
sub
rcl
loopne
ins
cwde
push
lods
and
jnp
clc
mov
and
sub
or
inc
xor
jmp
sbb
stos
std
adc
dec
add
and
mov
and
pop
out
mov
push
sub
sub
lds
push
push
mov
push
mov
sub
mov
xor
xor
inc
adc
pop
sbb
rcr
and
cmc
idiv
add
sub
and
add
loopne
cmps
mov
jmp
aaa
sbb
mov
jp
ss
sbb
xchg
jno
sti
shl
es
pushf
and
add
push
push
push
mov
inc
std
shl
cmp
daa
and
pop
mov
mov
dec
pop
push
and
cmp
jle
jno
push
or
push
ins
je
mov
sbb
mov
push
push
push
sti
xchg
std
jl
pop
mov
cmp
idiv
mov
imul
dec
js
loop
and
xor
xor
mov
mov
add
xor
or
sbb
cmp
adc
clc
jl
fs
sub
cmp
(bad)
push
inc
lds
push
pop
adc
and
mov
push
int3
sar
pop
je
test
jge
jae
aaa
and
inc
add
cwde
mov
inc
scas
xor
or
push
jne
mov
cmp
test
in
adc
xor
cwde
add
mov
pushf
mov
dec
xor
jo
add
cmc
pusha
mov
iret
icebp
pop
jge
xor
bound
add
rol
fwait
dec
cmovno
or
inc
std
or
or
mov
je
lods
shl
pop
shl
cmp
retf
adc
fdivp
pop
les
mov
call
test
jae
mov
and
shl
popa
adc
and
test
jne
enter
xchg
mov
push
cmp
jne
mov
xor
and
ds
add
sbb
(bad)
shr
aam
or
jnp
pop
sbb
sub
adc
pop
jg
int3
mov
fisttp
test
or
je
(bad)
out
push
sbb
mov
xchg
lods
or
fnstenv
cmp
xor
and
mov
cmp
js
lahf
pop
fisttp
scas
fbstp
ror
(bad)
je
test
push
push
je
icebp
and
xchg
jnp
xor
add
sbb
pusha
ret
aad
popf
and
xor
mov
xor
popa
hlt
dec
xor
push
push
push
push
jmp
adc
mov
cld
sub
and
test
mov
inc
sbb
mov
and
pop
jl
popa
jno
push
cdq
je
(bad)
sub
scas
fld
icebp
push
pop
enter
lock
adc
pop
xchg
cdq
add
xor
cdq
xor
enter
sti
leave
pop
enter
les
mov
daa
lds
dec
xlat
sbb
mov
xor
pop
and
cmp
push
xor
xchg
pop
jb
pop
je
push
xor
(bad)
je
adc
adc
sub
push
pop
fadd
imul
jp
sub
push
in
cmp
cmp
iret
je
or
(bad)
sub
call
je
mov
jmp
test
je
pop
hlt
adc
sub
jmp
push
or
push
push
xor
and
or
cld
aaa
add
dec
adc
div
rol
sbb
add
cmp
inc
pusha
jge
xchg
out
or
sbb
push
(bad)
test
add
cmp
adc
lods
add
pop
add
push
ret
add
cmp
jle
repz
test
xlat
aaa
inc
xchg
sahf
sub
dec
or
sbb
or
jae
jg
loopne
bound
daa
or
xchg
daa
push
adc
add
or
mov
jnp
pop
daa
jns
shl
or
add
pop
mov
and
and
or
pop
adc
inc
jne
push
idiv
mov
(bad)
jmp
and
inc
je
popa
pop
mov
loope
jmp
jmp
aad
adc
lea
push
push
aas
or
stos
fs
neg
adc
stc
mov
push
mov
cmp
push
adc
aad
mov
push
bound
adc
sbb
jne
stos
pop
jb
out
push
push
mov
popf
pop
sbb
loop
or
mov
aad
jno
nop
push
mov
push
xchg
push
mov
(bad)
mov
push
push
push
mov
test
aad
lea
idiv
rcl
push
push
lea
push
sahf
sub
mov
cli
push
mov
push
pop
push
add
jmp
cmc
xor
sbb
xchg
sub
bound
push
test
(bad)
cmp
push
fist
sbb
add
pop
mov
inc
cmp
sbb
pop
in
cmps
lods
ror
out
fiadd
push
xchg
mov
test
lea
jne
test
adc
jle
lea
scas
or
and
inc
adc
icebp
mov
inc
lea
cmp
mov
lock
mov
or
xor
sbb
and
sub
cwde
sbb
loopne
test
imul
mov
push
xor
push
lods
sbb
pop
dec
pop
adc
xchg
pop
pop
les
cmp
popf
and
nop
pop
xchg
jo
and
fidiv
mov
jle
mov
jecxz
mov
or
jg
(bad)
mov
mov
test
jne
test
jne
push
mov
mov
pop
or
push
retf
adc
scas
fsub
ret
sbb
push
cmp
ss
ds
loopne
fstp
mov
add
push
xor
push
aas
retf
out
stos
pusha
inc
mov
jl
and
ds
aas
fwait
or
sbb
pop
sbb
std
aaa
adc
cmp
mov
inc
adc
or
cmp
js
cmc
je
add
outs
lock
push
push
imul
or
retf
hlt
xor
push
or
inc
outs
je
fiadd
dec
xor
or
add
jg
mov
cmp
lea
jge
mov
rcr
pusha
enter
repnz
xchg
add
mov
mov
mov
push
jle
sub
fisttp
sbb
jo
mov
push
push
cmp
ja
outs
dec
push
add
add
mov
sbb
mov
jae
call
jmp
pop
inc
jne
mov
lea
inc
mov
jne
mov
or
push
je
inc
jne
mov
mov
mov
inc
or
dec
scas
in
xor
or
jge
stos
mov
lea
mov
and
add
imul
imul
call
mov
mov
sub
(bad)
idiv
lea
sub
and
push
cmp
push
jmp
lea
rol
xchg
add
push
mov
out
mov
mov
xrelease
push
sbb
imul
dec
jne
sub
pop
cmp
xor
cmp
jge
mov
sub
lea
sub
dec
and
adc
test
cmc
add
and
jl
push
jmp
add
js
into
cmp
inc
add
inc
mov
(bad)
and
fistp
mov
push
aas
inc
std
or
les
lea
(bad)
cld
jg
call
cmp
inc
inc
add
test
push
popf
mov
imul
and
adc
adc
pop
in
adc
add
inc
xor
cmp
push
cmps
sub
inc
sbb
(bad)
in
or
pop
xor
ret
push
mov
inc
inc
rcr
mov
test
shl
push
mov
and
iret
xchg
cmp
sub
test
mov
xor
adc
cld
inc
and
fwait
stos
mov
and
test
scas
call
push
pop
add
jmp
push
and
popa
pop
icebp
ror
iret
aam
add
or
call
xlat
cmp
je
push
push
les
outs
sub
or
ror
rcl
imul
les
sbb
dec
ss
add
add
rcl
inc
les
mov
shl
and
xchg
pop
adc
ret
jp
in
sbb
pop
pop
fs
mov
jo
test
nop
add
push
add
push
loopne
and
test
je
lea
jg
push
push
scas
iret
pop
je
lea
push
xchg
ror
adc
dec
clc
lea
push
(bad)
out
adc
hlt
jg
mov
dec
inc
mov
jmp
ror
pop
sbb
test
jecxz
adc
je
jns
(bad)
cli
pop
in
sbb
rcl
movs
or
cld
cmp
or
call
pop
mov
mov
push
or
add
aad
xchg
shl
cli
sub
int3
int3
push
push
loopne
xor
lods
gs
mov
cmp
xchg
add
ret
adc
fsub
jge
jl
jl
std
test
mov
mov
sub
vmovsd
push
push
out
push
push
push
test
out
cli
mov
test
lahf
cli
rcr
and
push
xor
push
adc
loope
and
xor
les
mov
out
cmp
call
pop
sbb
fiadd
push
in
jne
and
cld
inc
xchg
jmp
mov
pop
test
mov
je
push
outs
push
test
sbb
and
fmul
sbb
add
inc
and
cmp
jle
mov
clc
mov
imul
rol
sbb
push
mov
shl
inc
inc
je
mov
adc
or
sub
jle
call
or
sar
push
inc
ins
push
pusha
pop
aas
ins
(bad)
fistp
loopne
push
push
retf
push
adc
aas
add
push
sbb
mov
bound
cli
sub
mov
mov
repz
sub
rcl
cmp
add
and
mov
cmc
cmp
jle
das
cmp
mov
shr
xor
pop
add
or
sub
lea
sub
or
pop
add
call
pop
daa
jg
jmp
ret
push
xor
test
jle
pop
cmp
jne
shl
ja
sbb
and
in
inc
inc
cmp
jl
aam
adc
add
mov
scas
test
lock
rol
pop
add
or
mov
pop
into
movs
push
jnp
xchg
ror
jmp
or
push
push
cdq
stos
retf
clc
aas
mov
cmp
push
jne
add
jno
inc
dec
(bad)
pusha
lds
push
inc
test
je
(bad)
mov
cmp
je
cmp
jl
mov
inc
call
cmp
jne
inc
js
cmp
xor
sub
and
push
inc
add
scas
cld
or
mov
dec
jne
ins
sub
and
aam
jbe
mov
push
nop
xchg
mov
sbb
int3
mov
add
fs
jp
push
sub
aad
mov
idiv
jl
(bad)
fcomp
sbb
in
cmp
cmovb
jle
rol
or
push
std
cli
sbb
inc
(bad)
cmp
push
mov
mov
mov
sar
push
mov
rcr
push
mov
mov
mov
push
scas
sti
mov
sbb
clc
in
adc
push
push
call
jp
add
lea
cmp
test
add
jo
stc
lea
sbb
clc
(bad)
inc
and
fbld
jmp
js
int
iret
(bad)
or
sbb
and
daa
enter
or
inc
retf
mov
lea
sub
or
jl
les
dec
xor
js
les
push
int3
jg
xchg
movs
iret
fwait
and
mov
lea
pop
(bad)
dec
(bad)
cmp
jle
push
push
in
fist
cmp
jge
push
and
push
aaa
lea
pop
adc
call
jbe
aas
call
sbb
inc
cmp
dec
inc
add
lea
push
add
sub
xchg
dec
fst
adc
cli
or
inc
jo
aaa
sub
push
lea
clc
mov
stos
sub
mov
sub
add
dec
jmp
add
sub
(bad)
push
push
mov
cwde
push
jg
pop
lock
cmp
je
xor
push
sub
repz
fnsave
adc
mov
pop
mov
pop
xor
inc
dec
jne
xor
adc
or
sub
adc
sbb
sub
add
mov
retf
sub
sub
sub
mov
sub
and
jg
sbb
xor
mov
xor
mov
xor
mov
xor
mov
xor
test
add
dec
outs
cmp
outs
xlat
dec
and
or
sub
outs
pop
mov
dec
pop
cld
cvttps2pi
dec
xor
dec
cmp
xchg
mov
mov
popa
stos
or
clc
jns
jg
push
and
xor
push
sub
lea
inc
xor
adc
lds
(bad)
scas
and
test
jne
push
mov
xlat
add
jp
pop
pop
gs
jecxz
sbb
push
push
push
(bad)
dec
scas
mov
xor
call
(bad)
jge
mov
add
mov
xor
mov
add
daa
cld
inc
cmp
jl
cmp
arpl
test
jle
mov
push
and
xor
inc
dec
jne
add
pop
mov
pop
enter
lahf
sbb
fnstsw
mov
mov
xor
repz
hlt
add
dec
imul
pop
adc
jle
mov
cmp
add
inc
cmp
jl
or
jne
mov
inc
cmp
jge
mov
sub
or
push
cdq
clc
ins
push
or
mov
cwde
push
test
dec
push
(bad)
push
outs
jl
inc
mov
cdq
xor
fwait
adc
jb
mov
push
jns
adc
push
(bad)
jb
test
sbb
or
aaa
lock
cmc
cmp
scas
lock
and
jmp
push
mov
sub
sub
mov
push
mov
inc
mov
mov
xchg
or
mov
mov
stos
mov
sbb
int
sub
sub
mov
jge
loopne
aam
dec
adc
lea
cmp
push
int
push
jle
in
adc
push
mov
mov
push
scas
cmp
jne
inc
dec
push
sti
jg
cmc
cmp
jne
push
push
xchg
mov
ja
pop
ret
cmp
jne
inc
jmp
push
and
add
mov
aaa
sbb
and
jmp
jno
jb
sbb
sub
pusha
inc
mov
mov
into
xor
sti
inc
jl
xchg
pop
jg
jle
push
out
outs
push
shl
add
loop
and
or
ja
adc
pop
subps
sub
xor
scas
lahf
scas
add
add
scas
mov
and
jp
pop
repnz
stos
dec
fbstp
jno
jae
inc
mov
rcl
addr16
or
sub
or
and
data16
imul
pop
xchg
or
out
add
push
push
out
test
imul
push
lods
jl
ret
test
(bad)
out
sub
add
mov
jmp
cmp
mov
jle
sbb
(bad)
hlt
push
lea
pop
mov
mov
scas
call
call
add
retf
gs
dec
inc
add
pop
pop
mov
jg
sbb
cmp
jne
dec
mov
cmp
je
cmp
mov
mov
dec
lea
xor
test
jle
mov
inc
cmp
je
cmp
lock
push
inc
cmp
jl
sub
test
jne
hlt
jmp
xor
push
and
adc
call
test
xor
je
das
and
dec
popa
std
push
and
sub
int3
cmp
add
push
xor
and
je
jo
jp
clc
jne
push
repnz
cmp
loop
mov
add
jge
xor
xor
test
inc
aas
inc
cmps
add
dec
sub
or
push
comiss
sbb
or
xor
adc
pop
stos
mov
clc
push
mov
pop
push
mov
adc
mov
sbb
test
mov
out
add
add
mov
add
pop
jp
and
pop
lods
loopne
mov
out
or
push
adc
outs
mov
adc
add
push
push
push
mov
mov
cld
lods
mov
or
mov
adc
aas
mov
mov
sub
in
jg
aam
pop
add
add
ror
(bad)
jg
xlat
inc
mov
sub
cmp
mov
mov
mov
push
popf
fadd
test
lea
jmp
mov
and
inc
ins
add
stos
mov
mov
xor
(bad)
fild
ins
fwait
mov
lea
cmp
mov
jg
mov
pop
push
and
jmp
jbe
fistp
test
ret
add
or
adc
mov
lea
sar
xor
addr16
xor
(bad)
sbb
in
add
stos
sbb
adc
push
add
add
add
or
inc
popa
push
pop
inc
dec
hlt
or
add
into
or
jmp
sub
dec
test
sysret
inc
sbb
inc
inc
clc
(bad)
(bad)
dec
cmp
mov
jne
or
jmp
xor
push
push
xor
or
or
push
xor
scas
frstor
inc
and
sub
xor
push
add
scas
fmul
pop
clc
or
mov
or
or
cmp
jb
ja
cmp
jbe
adc
fistp
lock
cmp
jb
or
xor
fmul
add
dec
xlat
lock
pop
adc
inc
clc
jbe
aas
fcmovnb
aad
(bad)
fdivr
shl
jb
cmp
ja
mov
sub
or
push
cmp
cmp
shl
inc
dec
sub
lea
lock
sub
push
mov
and
adc
mov
cmp
push
push
push
sti
loope
cld
dec
call
and
inc
pusha
mov
aas
sub
adc
adc
cmp
adc
test
push
enter
jl
sub
cmp
adc
je
pop
test
dec
mov
pop
mov
loope
sub
sub
pop
jp
add
cmovnp
pop
and
outs
sbb
cmps
and
cmc
or
jg
push
ins
push
jl
lahf
mov
je
push
and
lea
push
pop
mov
dec
mov
sbb
(bad)
bound
into
fwait
add
push
aas
lea
push
push
outs
adc
add
pop
dec
outs
call
or
inc
mov
call
xor
test
jbe
push
mov
mov
rcl
nop
and
out
(bad)
jne
sub
clc
rcr
pop
mov
clc
pop
or
push
dec
js
bound
sbb
add
dec
cmp
jo
push
out
mov
push
add
out
dec
jns
pop
pop
pop
cmp
jg
push
mov
dec
js
call
popf
adc
add
inc
adc
rcl
cli
add
call
dec
test
sub
pop
jle
dec
sbb
fcomip
call
inc
or
pop
adc
push
mov
mov
inc
add
mov
sub
lea
mov
jne
(bad)
mov
sub
div
cmp
je
mov
or
inc
fist
ret
(bad)
cmp
add
add
add
jne
mov
cmp
jb
mov
inc
loopne
mov
inc
shl
push
and
adc
cld
gs
mov
xor
xchg
cmp
jne
mov
pop
mov
inc
pop
mov
pop
pop
ret
add
mov
mov
cmp
jae
and
add
sub
dec
adc
dec
sbb
mov
xchg
sbb
das
ret
push
sbb
and
sbb
push
mov
mov
sar
inc
div
mov
push
jo
push
jnp
mov
loop
test
syscall
inc
in
inc
mov
dec
sbb
loopne
fucomp
jmp
mov
dec
adc
push
jmp
dec
fdivrp
aaa
adc
mov
mov
dec
mov
out
lea
lods
out
sbb
xchg
inc
add
cmp
jbe
xor
je
pop
inc
xor
js
loope
inc
mov
add
push
popf
push
or
jg
inc
add
mov
mov
ss
ror
cmp
jae
mov
ror
or
push
mov
test
inc
lea
movs
sub
jg
je
inc
cmp
aaa
lahf
sar
mov
push
push
call
je
(bad)
ret
test
jne
pop
sbb
and
sbb
das
dec
add
inc
fist
pop
test
je
push
push
mov
or
mov
rol
jmp
mov
push
sub
mov
shr
mov
shl
mov
imul
mov
or
xor
add
inc
ror
(bad)
pop
shr
pop
xor
pop
ret
mov
(bad)
dec
adc
out
xchg
add
inc
and
xor
inc
adc
cld
ret
int3
push
push
push
jnp
or
mov
sbb
push
call
dec
cmps
inc
add
mov
jne
ds
jg
mov
push
pushw
mov
add
cmp
jl
pop
inc
add
mov
add
add
inc
cwde
pop
adc
dec
or
add
jle
lahf
pop
add
sub
mov
mov
cmc
adc
mov
dec
cmps
pop
mov
mov
push
fiadd
daa
mov
add
jle
loopne
add
shl
icebp
sbb
sbb
mov
add
call
(bad)
rcr
add
stos
adc
sub
clc
mov
fwait
dec
ror
std
leave
jne
push
fwait
ss
or
add
ja
rcr
mov
mov
jl
cmps
and
pop
dec
xor
inc
inc
pop
mov
push
and
and
dec
inc
adc
push
adc
inc
xor
cmp
inc
and
push
push
cdq
xchg
xchg
test
(bad)
sbb
pop
inc
ins
ret
mov
push
mov
mov
lahf
hlt
fld
dec
dec
aad
mov
dec
or
cmp
es
jno
jbe
fwait
icebp
and
inc
and
add
in
dec
and
add
jne
push
adc
add
push
scas
add
inc
inc
or
and
mov
mov
inc
aas
jge
les
adc
into
out
je
push
sbb
add
aas
inc
add
fs
inc
mov
dec
mov
add
mov
mov
adc
xchg
sbb
pop
and
jg
sar
mov
inc
cmp
jg
push
mov
je
adc
add
or
loope
sti
inc
adc
fdivr
test
jl
cmp
jno
(bad)
(bad)
mov
jl
lea
sub
sub
inc
mov
mov
sub
dec
jne
sbb
loop
sbb
call
push
mov
pop
xchg
adc
adc
mov
sbb
cs
push
outs
loop
or
leave
jl
mov
cmp
jge
ret
mov
jb
cmp
jge
push
(bad)
dec
sbb
lea
inc
cmp
mov
jl
pop
mov
dec
xchg
test
hlt
pop
mov
pop
mov
cs
and
xchg
adc
call
inc
pop
inc
outs
dec
and
test
je
mov
jg
ret
sysexit
gs
(bad)
or
mov
adc
retf
jo
aas
sbb
pop
int3
push
xchg
push
jb
adc
inc
ins
jo
jnp
jbe
inc
imul
out
jmp
sar
jge
mov
mov
stos
pusha
xlat
push
in
pop
add
out
out
out
sbb
(bad)
or
xchg
push
or
add
and
xchg
push
add
push
ins
xlat
call
sar
cmp
push
mov
rol
push
jle
mov
sbb
cld
(bad)
cmp
je
mov
inc
add
cmp
jl
mov
mov
cmp
jge
mov
dec
pop
adc
add
sbb
push
adc
std
into
shl
push
and
je
retf
(bad)
sbb
add
pop
out
mov
das
cmp
je
mov
push
(bad)
jl
in
xor
mov
add
jne
dec
push
mov
push
ret
inc
inc
aas
inc
or
add
jge
test
je
or
pop
out
daa
push
sub
rol
data16
mov
push
sub
sar
in
add
mov
push
push
xor
xor
inc
sbb
sub
sbb
mov
daa
cmp
inc
sub
out
jl
pop
pop
test
pop
pop
int
and
cmp
sbb
pop
push
jne
or
(bad)
ret
push
adc
(bad)
cmp
xor
test
dec
scas
fcmovu
or
(bad)
add
loop
test
fisttp
push
je
retf
pop
pop
or
jecxz
adc
mov
jmp
clc
dec
add
mov
call
je
pop
(bad)
(bad)
dec
jg
test
jne
mov
and
ror
sbb
add
out
call
iret
jmp
cmp
je
daa
je
sahf
add
dec
cli
mov
hlt
inc
hlt
or
inc
jns
push
cmp
int3
call
or
push
mov
jmp
push
jbe
pop
push
mov
sti
push
sub
mov
sbb
jmp
test
add
add
add
ins
in
jge
jmp
xor
mov
imul
dec
scas
and
je
mov
test
sar
push
push
dec
jbe
or
sbb
outs
lods
sbb
mov
sub
std
and
add
jne
test
call
jmp
jge
ss
dec
call
mov
push
or
push
push
mov
mov
bound
dec
das
push
push
shr
movs
mov
sbb
dec
add
pop
jmp
or
rol
dec
push
push
sbb
cmp
pop
push
test
jo
out
add
ins
or
pop
add
inc
add
add
lds
add
idiv
dec
pop
push
mov
(bad)
nop
(bad)
xor
cmp
setne
dec
pop
ror
imul
shr
imul
imul
pop
add
jo
cmp
mov
mov
cmp
xchg
leave
je
ins
push
mov
push
xlat
jge
aam
pop
or
div
jle
dec
les
clc
pop
mov
mov
mov
xchg
arpl
inc
adc
add
xchg
cmps
or
adc
pop
test
fmul
add
add
dec
adc
mov
mov
int3
ds
mov
pusha
cmp
mov
dec
add
push
stos
add
adc
data16
xor
add
popa
push
inc
cwde
outs
mov
mov
sbb
add
xor
jp
sbb
sbb
aam
call
jl
(bad)
xchg
or
inc
sbb
clc
aas
push
push
mov
mov
mov
dec
dec
addr16
add
adc
sub
fwait
or
xor
and
push
arpl
or
pop
daa
mov
xor
mov
ds
aaa
or
mov
and
adc
lahf
bound
add
pop
test
and
ins
xor
inc
push
sbb
push
cmp
jb
sbb
mov
cmp
mov
jne
cmp
fwait
loop
cdq
push
sbb
push
rcr
add
adc
leave
jbe
adc
mov
pop
repz
mov
lds
mov
mov
jmp
push
sbb
arpl
inc
add
pop
test
pop
mov
jmp
jle
add
leave
mov
je
mov
inc
pop
adc
vminss
mov
mov
or
add
sbb
sbb
mov
add
dec
add
rol
add
imul
clc
jns
xor
test
je
(bad)
mov
sub
je
sub
mov
and
pop
push
jno
push
push
(bad)
mov
mov
(bad)
jg
mov
test
je
(bad)
sbb
leave
das
add
movsx
data16
shl
inc
add
mov
shl
(bad)
jge
mov
pop
inc
sbb
add
adc
mov
aas
xchg
sbb
adc
xor
cmp
push
mov
inc
vandnps
and
mov
dec
pusha
test
mov
mov
mov
mov
jne
mov
(bad)
jg
jl
cmp
jae
neg
adc
neg
ss
fist
call
add
loopne
jl
pop
jmp
test
jbe
mov
ret
and
cmp
jl
(bad)
aas
adc
in
jge
add
or
sar
and
pop
test
xor
add
in
nop
jne
jg
scas
sbb
dec
add
mov
adc
jae
dec
les
mov
mov
mov
inc
test
sti
dec
ror
add
enter
mov
outs
out
mov
sub
cmp
mov
jno
aaa
into
push
mov
jge
mov
sbb
lea
ror
sub
(bad)
push
adc
fild
sub
sub
sub
xor
cmp
mov
jge
mov
call
sti
push
mov
cmp
or
mov
test
je
cmp
adc
pushf
jmp
shl
pop
pop
push
inc
mov
cmp
jle
mov
adc
out
inc
and
mov
cmp
pop
and
or
add
ror
sub
cmp
inc
je
ja
icebp
mov
jae
adc
adc
and
icebp
jne
dec
ror
outs
ret
cmp
mov
sub
mov
and
mov
push
addr16
jle
push
cmp
pop
in
mov
pop
inc
and
push
jbe
jne
daa
idiv
lahf
movsx
xchg
ins
add
cmp
pop
sub
mov
arpl
(bad)
loopne
out
and
in
jmp
add
jecxz
inc
fwait
bound
data16
outs
mov
ins
dec
push
ja
jbe
ja
adc
pusha
push
and
inc
and
clc
(bad)
mov
inc
push
dec
add
loopne
les
jg
pushf
mov
fistp
fchs
jmp
xchg
fs
adc
test
adc
inc
fld
imul
mov
pusha
cmp
xor
fistp
pusha
or
fld
je
pusha
cmp
adc
dec
fmul
cmp
neg
xchg
fisttp
jo
fstp
fnstenv
stos
jle
call
cmp
mov
xor
fsubrp
fxch
(bad)
inc
push
mov
dec
xchg
adc
outs
and
enter
push
cmp
jl
jecxz
inc
inc
sub
mov
cdq
mov
inc
mov
pop
cli
cmp
cdq
call
cmp
std
ja
popa
sbb
cmp
add
cmc
inc
mov
stc
inc
xor
mov
es
jl
cmp
mov
jo
mov
inc
and
xor
xor
cmp
setne
sbb
sub
fnstsw
(bad)
sub
dec
sub
jmp
adc
add
jmp
ds
ret
in
and
mov
adc
je
arpl
fcomip
fsub
test
je
cmp
pop
cmp
je
add
(bad)
jl
jo
dec
push
push
push
nop
stos
inc
and
dec
jnp
mov
cmp
test
jle
pop
xor
loop
or
pop
lock
push
push
pop
mov
(bad)
fsubr
xor
ret
jle
ss
ja
rol
jae
pop
mov
push
push
jo
sti
push
retf
xchg
pop
test
je
lahf
pop
ud0
test
jle
movsx
repz
mov
dec
dec
push
(bad)
(bad)
mov
jne
test
jg
lock
jp
or
test
push
xor
and
add
test
jle
movsx
hlt
pushf
mov
retf
ror
or
out
push
jo
and
aam
stc
inc
jmp
inc
cmp
cmps
jb
mov
mov
inc
jmp
dec
pop
pop
xor
mov
cmp
das
mov
or
ret
call
mov
xor
inc
lea
xor
add
pop
add
push
cmps
or
xchg
out
cli
shr
je
sbb
test
ja
inc
sbb
cmp
jmp
sbb
clc
push
adc
inc
ja
jmp
cmp
ret
inc
arpl
movsx
push
lea
push
std
cmp
loope
mov
cmc
in
inc
cmp
jne
frstor
mov
in
inc
xlat
outs
mov
outs
mov
je
mov
ins
shr
add
aaa
add
or
sti
jg
jmp
mov
inc
and
jno
shl
clc
adc
movzx
into
mov
push
cs
jne
leave
xor
(bad)
mov
jmp
adc
retf
adc
nop
and
add
sbb
(bad)
sbb
cmp
sbb
rcl
js
ja
lock
je
and
mov
retf
or
rol
xchg
mov
inc
add
add
xchg
mov
pop
push
and
shl
out
dec
cmp
jne
pop
bound
add
movzx
dec
or
mov
mov
and
adc
ss
cmp
adc
jae
sub
push
push
ss
cmp
ja
shl
mov
pusha
dec
jmp
cmp
mov
in
sti
pop
cmp
jne
mov
push
sbb
mov
push
pop
retf
sbb
sbb
jl
mov
jg
add
cmp
ja
popf
movs
js
fistp
dec
je
dec
adc
add
jmp
bound
mov
mov
add
add
jmp
movsx
inc
aad
jbe
cdq
hlt
cmp
je
(bad)
aaa
frstor
add
sub
or
jp
push
pop
out
xchg
adc
adc
(bad)
ja
xor
shl
dec
and
and
push
jmp
adc
adc
jmp
jns
fist
mov
sub
sti
outs
jne
lock
rol
mov
rol
and
dec
div
cli
add
enter
sub
add
inc
test
dec
andps
dec
inc
pushf
mov
fucomp
(bad)
fstp
aam
mov
adc
add
jb
dec
mov
repnz
adc
into
cmp
cmp
dec
jp
popa
adc
mov
data16
or
out
xor
sub
mov
jge
and
adc
(bad)
(bad)
(bad)
jg
mov
mov
adc
inc
xlat
in
icebp
mov
push
adc
fld
or
addr16
sub
push
push
xchg
push
cdq
inc
dec
ret
jge
dec
fadd
push
cwde
daa
sti
ja
add
add
clc
add
mov
push
out
aas
int3
mov
imul
mov
test
adc
pop
arpl
ds
add
inc
ret
add
rcl
dec
inc
xchg
in
xchg
adc
aad
mov
mov
nop
test
dec
add
sub
out
fwait
out
mov
add
dec
add
jne
sub
push
fwait
cmps
imul
pop
idiv
in
add
add
lea
std
xor
xlat
xor
or
add
mov
sbb
add
mov
shr
dec
add
cmps
jmp
pop
movs
or
pop
sub
mov
pop
clc
add
fst
adc
add
add
lahf
sbb
add
arpl
push
add
push
pop
or
or
or
or
pop
pop
adc
loop
dec
and
or
add
inc
push
push
mov
or
sar
popa
sub
mov
pop
(bad)
sub
and
sub
xchg
lea
xor
sub
mov
mov
xchg
and
add
test
je
inc
mov
mov
cmp
daa
xor
xor
sbb
setg
loopne
sub
xchg
mov
adc
sub
and
or
add
hlt
sbb
adc
pop
pop
or
pop
movs
gs
mov
mov
adc
out
jmp
and
adc
add
or
dec
mov
add
xor
inc
and
add
test
jne
cld
pop
inc
je
add
jg
add
test
jmp
push
mov
adc
push
push
push
add
pop
dec
dec
or
inc
or
sbb
mov
add
mov
push
push
int
clc
add
fsubr
pop
add
pop
and
push
jno
dec
in
push
shl
retf
aad
pusha
push
jb
push
mov
mov
sub
int3
add
es
aas
sub
pop
mov
out
pop
rol
mov
xchg
jecxz
mov
add
int
add
or
(bad)
out
adc
mov
or
pusha
inc
iret
imul
iret
mov
xor
mov
test
push
in
xor
inc
xor
adc
rol
xchg
inc
add
lods
or
and
test
inc
clc
dec
adc
add
or
cli
out
lds
cmp
cmp
je
rcl
and
cmp
cmp
mov
test
push
push
jle
jnp
sub
push
(bad)
dec
add
lds
in
ret
jp
mov
and
lock
cmp
jle
mov
outs
adc
add
mov
sub
pusha
pop
jmp
inc
dec
push
dec
and
fsubr
aaa
les
jg
pop
pop
pop
ins
pop
arpl
pop
ret
mov
xchg
test
outs
push
shl
push
ret
bound
cmp
add
retf
cmc
xchg
dec
test
push
mov
inc
outs
add
jne
loopne
hlt
cmps
enter
shr
pop
mov
lea
cdq
push
and
push
add
mov
lea
sar
and
push
jns
dec
or
inc
lea
mov
inc
shl
mov
and
push
adc
and
stos
mov
push
push
movs
pop
sub
sub
test
imul
mov
lds
adc
cli
fstp
(bad)
and
pop
fbstp
test
push
push
je
mov
mov
je
xlat
cmp
jne
xor
test
jle
mov
inc
mov
jmp
mov
sub
and
aad
pop
clc
sbb
or
pop
adc
dec
rcl
jle
mov
pop
cmp
jae
mov
jmp
cmp
jae
or
fdivp
mov
adc
je
and
(bad)
call
mov
push
add
mov
lea
mov
sar
or
mov
in
mov
shl
or
jne
mov
not
and
into
add
mov
je
or
sbb
and
mov
pusha
or
lds
adc
mov
leave
adc
(bad)
loop
dec
adc
rcr
and
inc
push
stos
ret
pop
pop
fsubr
scas
dec
and
mov
add
rcl
xor
push
mov
(bad)
(bad)
test
je
pop
mov
add
or
add
add
out
lods
(bad)
icebp
and
sti
add
push
inc
mov
pop
jg
inc
cli
pop
ret
lea
aaa
inc
cmp
std
daa
mov
and
ret
or
add
push
push
lds
outs
nop
dec
dec
mov
sti
add
mov
pop
jl
sbb
dec
je
aas
or
movs
pop
jge
xor
push
mov
jp
mov
pop
add
cwde
fs
sbb
out
fiadd
or
dec
jae
and
add
inc
pop
jae
add
popa
and
int3
sbb
add
push
or
fdivrp
sbb
mov
add
sar
ret
jmp
pop
stos
jb
adc
add
add
dec
add
adc
test
push
mov
test
sub
or
shr
mov
or
add
rol
sar
fdivr
rcr
(bad)
adc
inc
mov
add
and
sahf
pop
push
jg
mov
mov
adc
mov
add
xor
or
pusha
adc
mov
(bad)
sti
fbld
mov
mov
mov
push
mov
xor
dec
push
mov
js
lea
(bad)
(bad)
inc
sub
lea
mov
mov
shr
or
mov
shl
sub
dec
mov
jne
popf
add
pop
jle
mov
test
aas
stos
bound
add
imul
inc
add
add
jb
les
mov
sti
pop
test
mov
sar
lea
mov
mov
ins
jno
fsub
pop
xchg
push
ret
and
xchg
loopne
inc
and
mov
loop
mov
lahf
sub
test
mov
xor
dec
push
mov
dec
js
lea
lea
mov
pop
dec
add
sar
cmp
js
lea
lea
(bad)
dec
mov
mov
mov
shr
mov
sub
or
mov
mov
sar
add
jmp
dec
test
mov
jge
xchg
and
ja
das
sbb
int
ror
cmp
lea
test
pop
jle
add
push
lea
outs
lea
sub
adc
fmul
and
or
mov
(bad)
and
mov
sar
add
ret
jmp
cmps
and
sub
(bad)
jecxz
std
test
pop
add
xchg
adc
jmp
push
or
pop
mov
inc
jbe
jmp
jo
sbb
mov
inc
adc
ret
(bad)
push
mov
cmps
jge
sub
test
lea
mov
jne
push
dec
clc
pop
test
je
dec
std
cmps
mov
xor
pop
fbstp
(bad)
mov
cs
jo
test
pop
cwde
xor
xor
cld
dec
sub
inc
adc
out
mov
mov
das
dec
add
xchg
add
shl
lahf
push
add
jmp
cld
jmp
and
cmp
iret
adc
adc
(bad)
sar
mov
mov
dec
add
js
mov
push
push
push
lea
lea
mov
xor
or
and
in
push
or
mov
fbld
mov
sub
dec
mov
jne
adc
int3
int
xor
xchg
push
push
push
pop
rol
jne
es
hlt
jne
pop
ret
pusha
adc
push
call
addr16
lahf
add
pop
dec
push
push
add
dec
je
sub
in
std
(bad)
aas
jnp
cwde
jne
pop
pop
ds
mov
dec
js
mov
mov
pop
aaa
adc
add
rol
adc
aam
clc
imul
sub
xchg
inc
mov
(bad)
call
jns
ins
pop
jle
mov
mov
test
jne
dec
mov
neg
mov
mov
pop
pop
shr
xchg
mov
push
sbb
pop
pop
lock
mov
div
push
js
and
add
std
or
mov
push
push
(bad)
pop
lods
sub
cli
ja
add
pop
imul
mov
dec
dec
or
push
jl
dec
call
sbb
aam
xor
cmp
jl
(bad)
inc
out
pop
mov
mov
add
cmp
mov
mov
jbe
mov
inc
jmp
mov
enter
mov
cdq
jae
mov
xor
mov
xor
jnp
pop
add
test
lds
sbb
or
je
push
pop
icebp
push
inc
add
pop
stc
sbb
test
cmp
jae
sub
mov
sbb
ret
mov
sar
cmp
clc
jae
xor
push
pop
ds
sub
mov
inc
arpl
sbb
sub
cmp
neg
jb
pop
das
cmp
lea
sub
mov
mov
cmp
jne
sbb
in
dec
cmp
jne
fbld
sar
sub
adc
and
out
adc
mov
push
push
ins
shl
je
sub
mov
xor
dec
push
mov
inc
inc
dec
dec
push
xor
enter
adc
push
inc
cld
xor
push
ins
xor
push
mov
inc
cld
fnstsw
sbb
fstp
sbb
retf
or
jmp
mov
push
push
je
cmps
mov
push
fdiv
or
test
adc
pop
jnp
sbb
pop
push
mov
loopne
sub
push
jnp
xor
and
xchg
inc
adc
jbe
sub
mov
out
cmps
mul
adc
sti
fistp
mov
sub
adc
clc
add
cmp
inc
add
sbb
adc
cmp
jbe
ror
mov
mov
sub
stc
mov
sub
(bad)
scas
out
shr
adc
cs
idiv
jge
cmp
jle
mov
mov
shl
stc
inc
mov
add
add
dec
or
in
push
fld
(bad)
xchg
mov
fnstenv
imul
shr
push
xor
mov
dec
mov
shr
inc
fist
ret
adc
push
dec
cmp
mov
xor
jle
mov
cld
push
mov
(bad)
and
(bad)
lock
pop
xor
in
lea
clc
pop
ja
push
fist
jle
mov
sub
rcl
sub
clc
in
xor
js
sbb
cmp
jmp
push
sbb
or
or
in
push
data16
in
push
pusha
add
pusha
push
and
es
fidiv
push
clc
or
icebp
dec
push
dec
inc
add
xor
jne
and
in
call
push
pop
mov
xor
fimul
js
cmp
inc
(bad)
jl
and
icebp
adc
jmp
adc
xor
jne
sbb
ret
pop
add
add
and
or
push
xor
pop
add
ror
dec
add
mov
clc
mov
adc
mov
xor
jnp
fimul
fild
mov
jno
xor
mov
mov
fst
imul
(bad)
out
sahf
fld
fcomp
adc
std
movs
pop
inc
and
dec
test
pop
pop
cmps
cmc
xchg
popa
sub
add
data16
jmp
add
add
fstp
ror
cs
pusha
dec
outs
jbe
sub
(bad)
js
hlt
(bad)
mov
test
jg
iret
pop
pop
(bad)
dec
neg
data16
sar
mov
sti
sub
pop
xchg
lea
add
cmp
push
shl
mov
test
das
push
adc
test
xor
jne
fucompp
or
mov
or
mov
ja
ficom
cld
cmp
sbb
test
jne
mov
and
icebp
and
xor
adc
xor
stos
dec
or
fsubr
pop
fst
jge
stos
pop
div
sub
adc
sbb
mov
mov
lock
adc
push
loope
ds
jne
je
adc
(bad)
jnp
push
mov
dec
push
loope
sbb
or
stos
jnp
lds
xor
arpl
dec
pop
mov
stc
inc
nop
lods
scas
ror
pop
xchg
jmp
dec
adc
or
clc
xor
popf
aas
inc
mov
or
ins
add
pop
sti
into
add
aaa
(bad)
ins
and
cmp
jl
mov
add
dec
sub
push
cmps
xchg
outs
pop
and
cmps
inc
and
xchg
add
and
in
out
inc
inc
inc
mov
sub
add
add
les
test
sbb
popa
fld
sub
sbb
pop
xchg
or
or
xor
imul
pop
adc
mov
mov
dec
ret
les
jnp
aaa
lar
idiv
int
pop
sbb
mov
inc
push
xor
xchg
sub
arpl
fcomp
lea
cmp
push
cmp
cmp
cmp
cmp
sbb
cmp
in
or
push
xor
aaa
test
add
lds
add
clc
cmps
(bad)
cli
dec
mov
inc
and
xchg
sub
adc
push
pop
cs
in
push
pop
(bad)
mov
xchg
push
and
je
fmul
lahf
xchg
add
xor
leave
mov
mov
clc
cld
push
sbb
mov
stc
or
pshufw
test
add
cmp
add
or
jb
push
mov
sbb
xor
add
add
popa
nop
mov
dec
pop
mov
outs
jne
jbe
mov
push
add
aaa
inc
aam
add
jno
and
mov
outs
and
add
push
push
retf
pop
pop
dec
clc
push
add
adc
sub
rcr
and
std
pop
jecxz
mov
mul
push
push
mov
adc
pop
mov
mov
mov
pusha
xchg
ss
inc
sbb
loope
in
ins
cwde
mov
jle
loop
ret
ret
xor
or
icebp
mov
add
push
cmp
adc
xlat
dec
mov
outs
rol
add
sbb
mov
pop
iret
aam
cwde
pop
push
imul
mov
inc
dec
mov
nop
and
pop
int3
sbb
adc
cmp
mov
test
mov
or
jmp
and
mov
psubsb
das
ret
dec
lahf
pop
sub
jb
xor
push
ret
pop
adc
out
sub
xor
and
cmp
pop
inc
xor
je
enter
and
mov
bsf
inc
cs
inc
adc
test
push
out
out
adc
popa
add
pop
push
xor
test
ret
adc
add
in
pop
fsub
outs
cwde
jnp
in
adc
xor
xchg
imul
push
add
push
je
sub
add
inc
aam
mov
cmp
sub
test
push
push
test
div
push
sub
les
movs
sbb
xor
sub
mov
int3
(bad)
cmc
inc
add
xor
icebp
aas
out
mov
push
imul
jl
add
push
fs
jg
xchg
adc
pop
shl
push
or
int3
adc
rol
(bad)
mul
mov
xor
xor
sub
push
push
loopne
mov
fist
je
pusha
push
sbb
add
or
mov
cmp
adc
mov
aas
in
loope
push
mov
cmp
je
mov
pop
in
dec
mov
test
test
pop
dec
hlt
adc
aam
imul
cmp
test
add
loop
dec
sbb
dec
pop
into
inc
cmp
sub
adc
push
or
push
test
icebp
and
dec
and
fbld
test
jle
outs
dec
adc
arpl
mov
or
outs
add
jg
or
pop
push
mov
mov
in
call
push
inc
pusha
js
pmulhuw
clc
jl
scas
js
fmul
mov
push
inc
pop
or
fdivr
inc
popa
and
xlat
sbb
inc
add
sub
cmp
add
pop
pop
pop
movs
ret
push
pop
and
add
and
and
sbb
mov
lods
scas
les
add
imul
in
test
and
call
dec
mov
or
scas
stos
bound
inc
adc
test
adc
clc
mov
aas
ficomp
and
je
ror
mov
pop
xchg
xor
jne
dec
sbb
sti
jg
xchg
or
cmp
punpckhdq
(bad)
aas
call
push
and
or
or
fs
or
mov
fwait
cmp
sbb
xor
or
mov
adc
lock
loop
push
inc
push
xchg
and
jp
ret
mov
mov
or
push
add
inc
and
sbb
inc
in
into
jne
sub
jp
mov
mov
pop
pop
mov
addr16
mov
jne
stos
fild
out
or
rol
(bad)
mov
jbe
mov
je
mov
push
push
mov
mov
mov
push
cmc
movs
mov
test
mov
lea
inc
or
or
xchg
sbb
scas
call
mov
lock
inc
adc
icebp
dec
add
ins
and
je
mov
cmp
je
loop
xor
add
push
xor
and
cmps
sbb
cmps
clc
or
jns
cld
loope
push
push
jne
mov
loopne
std
and
jge
sub
movs
je
cs
mov
jmp
cmp
cmp
je
push
(bad)
or
mov
loop
inc
aaa
mov
add
jl
and
pop
inc
mov
xchg
je
cmp
inc
into
mov
push
dec
push
pop
sub
rcr
or
inc
inc
pop
cmp
jmp
xchg
push
test
rol
mov
hlt
aam
xchg
push
adc
cmp
mov
push
mov
je
ja
mov
push
ret
mov
in
push
cmp
je
push
cmps
cmp
push
jmp
and
mov
mov
js
pusha
mov
lds
jmp
adc
dec
loope
inc
xchg
xchg
sbb
push
cmp
sub
les
(bad)
out
je
cmp
jne
push
sub
mov
and
adc
sbb
aas
dec
push
into
sar
xor
and
inc
adc
push
rcl
push
sub
fcomp
jmp
xlat
out
push
and
or
push
inc
cmp
(bad)
or
les
call
stos
into
push
cs
sbb
push
inc
daa
add
sbb
or
popf
loop
or
sti
loopne
add
add
and
lea
jmp
(bad)
scas
cld
or
inc
push
dec
add
add
dec
dec
add
mov
or
lea
xlat
mul
jne
push
add
(bad)
leave
push
cli
add
ret
mov
mov
inc
int
add
shl
pop
pop
add
outs
dec
push
inc
int
adc
ret
add
jl
mov
cmp
jne
mov
test
jmp
or
mov
rol
pop
hlt
aas
inc
and
mov
mov
test
call
dec
mov
je
cmp
je
mov
cli
dec
sbb
retf
xor
mov
inc
mov
add
pop
je
dec
sbb
adc
sbb
sub
jge
pop
call
sbb
push
jo
push
pop
lock
dec
ret
xlat
test
(bad)
(bad)
call
mov
mov
mov
jne
add
cmp
jle
push
xor
mov
adc
movs
push
sub
push
add
dec
and
test
jns
push
jb
cmp
ja
std
das
imul
push
and
test
jl
cmp
fcomp
jae
inc
or
jne
sub
scas
jmp
adc
sub
add
mov
push
sub
pop
loope
mov
push
sbb
test
je
and
mov
sub
mov
je
or
mov
mov
scas
push
sub
or
inc
xor
inc
test
je
push
mov
inc
inc
cmps
push
or
push
bound
mov
dec
mov
sub
and
test
in
jb
push
mov
aaa
cmp
je
popa
stos
mov
push
sahf
or
add
xor
cld
loop
jnp
push
push
cmp
push
call
pop
mov
and
cwde
stos
jl
ins
std
outs
idiv
cmp
jne
pop
pop
or
jne
push
xchg
push
jmp
jne
and
ja
and
xor
scas
bound
push
clc
add
add
fwait
xor
cli
add
and
dec
xchg
and
sbb
xor
cs
sahf
fidiv
push
sti
aas
add
jmp
test
je
push
jbe
sub
or
or
int3
in
push
scas
mov
xchg
mov
shl
push
xor
add
mov
xchg
xor
cwde
and
arpl
test
inc
dec
test
push
push
clc
cmps
jmp
inc
jl
inc
jne
mov
aas
inc
shr
jae
and
xor
jmp
dec
outs
or
pop
jmp
mov
inc
jp
shr
stos
adc
sar
call
mov
sub
push
and
and
mov
inc
jmp
popa
std
jmp
sbb
add
test
jg
test
je
push
inc
test
fs
dec
mov
xor
push
adc
push
test
cmp
push
ret
idiv
sub
and
test
push
sbb
mov
xchg
mov
and
jecxz
test
pop
icebp
jg
adc
(bad)
add
pop
mov
xchg
int
inc
ror
push
jle
adc
mov
jl
das
or
pop
pop
xor
and
and
mov
fdiv
xor
dec
and
fwait
and
jne
xor
and
test
pop
inc
or
xchg
sbb
add
jmp
icebp
push
adc
jne
imul
cmp
in
inc
pushf
add
je
adc
out
add
sbb
cli
test
jg
pop
inc
xor
push
test
jb
push
pop
pop
mov
adc
std
das
fsub
dec
ret
mov
test
adc
mov
cmp
cmp
inc
or
das
jmp
push
cmp
test
xchg
or
sub
jo
mul
push
mov
mov
jne
push
ins
inc
nop
pop
std
pop
sbb
push
lock
jg
cmp
push
jne
mov
or
jmp
mov
cmp
cmp
fimul
adc
jne
and
cmp
jg
std
sub
pop
inc
push
aas
and
ins
pop
pusha
xchg
outs
jle
ret
mov
dec
add
pop
push
push
add
jo
add
imul
push
xor
in
inc
and
gs
retf
jge
cmp
mov
pop
and
sub
out
mov
mov
mov
xor
imul
pop
inc
and
mov
shr
dec
push
push
arpl
adc
sub
rol
clc
out
das
mov
or
ja
sub
(bad)
jne
push
or
cld
or
mov
cmp
sbb
test
add
cmp
je
movs
cmp
je
and
push
push
mov
and
aam
inc
loopne
push
xor
stos
xor
or
rcl
jp
mov
mov
frstor
lea
adc
push
call
pop
mov
int
test
aaa
mov
add
mov
jg
add
jnp
ins
and
sbb
ins
xchg
sub
dec
cmp
je
mov
lea
cmp
je
ds
dec
or
and
jle
ja
adc
cmc
sub
jmp
(bad)
jne
push
scas
mov
nop
mov
lock
add
add
lahf
ret
push
xchg
out
in
push
xor
cli
inc
cmc
adc
aas
or
sub
popf
ja
mov
sub
xchg
popa
adc
add
xlat
push
loopne
popf
test
and
outs
mov
and
and
(bad)
(bad)
js
sub
cmp
div
sar
ficom
jge
sub
or
push
mov
cld
fist
fiadd
add
cmp
je
mov
fadd
xor
mov
dec
add
and
ja
cli
jmp
pop
inc
enter
les
sub
xchg
add
(bad)
or
cmp
push
push
xor
mov
rol
push
ds
mov
das
push
sub
push
loop
push
fild
pop
dec
stc
inc
or
and
push
pop
or
cdq
bound
adc
and
jmp
cmps
fwait
das
dec
sub
sub
icebp
inc
ror
mov
dec
adc
sub
jge
cs
jp
inc
push
das
add
mov
in
xor
pop
adc
popa
push
or
in
mov
add
test
out
adc
sub
fstp
call
push
mov
add
addr16
dec
inc
mov
and
mov
inc
inc
test
push
call
add
div
out
call
idiv
je
cmp
mov
out
test
add
add
test
push
xor
add
scas
test
add
lods
push
mov
mov
adc
inc
jg
sub
mov
dec
and
jne
push
and
mov
mov
and
or
dec
inc
mov
out
sbb
dec
cli
or
or
clc
fwait
out
mov
test
jne
inc
pop
mov
push
scas
add
add
in
aad
fbstp
pop
push
mov
shl
jl
out
push
data16
mov
adc
push
ud0
xor
test
jle
or
mov
and
pop
and
push
mov
clc
jmp
mov
add
cmp
jl
cmp
jne
dec
add
pop
je
jno
stos
test
test
scas
or
ja
sar
sar
sub
add
adc
adc
bound
xor
or
push
pop
sbb
push
push
cmp
in
inc
add
jmp
iret
pop
adc
inc
stos
add
jne
call
sub
std
push
cmp
cmp
rol
mov
add
retf
cli
adc
cld
and
push
test
jae
std
out
or
inc
add
je
jl
jmp
dec
clc
data16
jmp
sbb
retf
inc
inc
inc
jae
jno
pop
push
ret
fiadd
adc
mov
push
movs
test
clc
cmp
mov
and
inc
inc
sub
in
mov
cmc
push
pop
adc
add
and
sbb
mov
adc
loop
shr
das
or
sar
add
or
test
fstp
aad
pop
add
push
sub
test
jmp
or
and
dec
mov
sbb
cmp
jne
xor
jmp
mov
and
or
push
sbb
cmps
xlat
and
mov
test
sub
cwde
xchg
mov
fwait
inc
inc
and
dec
add
sub
inc
and
add
pop
inc
out
call
adc
shl
sub
mov
bound
cmp
pop
nop
jne
mov
aad
sbb
mov
stos
sbb
cwde
mov
and
xor
mov
cwde
sbb
inc
into
mov
mov
sbb
dec
or
push
pop
or
mov
test
je
jmp
dec
scas
sub
les
inc
(bad)
out
push
push
iret
ins
sbb
mov
cmp
std
adc
sub
push
test
xor
jne
jg
xchg
adc
mov
je
leave
jp
inc
arpl
test
mov
dec
cs
dec
add
fwait
cld
je
mov
mov
push
push
pushf
add
push
sub
enter
call
bound
or
push
jmp
mov
push
push
xchg
cs
(bad)
dec
adc
pop
dec
add
pop
dec
add
pop
dec
add
dec
add
xchg
add
jbe
pop
pop
adc
aas
adc
or
dec
(bad)
mov
push
and
push
and
movs
test
push
scas
adc
test
sub
mov
xor
ror
cld
inc
xchg
push
inc
xor
out
sbb
add
iret
hlt
cmp
or
xor
daa
mov
rcr
pop
and
mov
je
cwde
mov
test
jne
or
pop
push
jb
shr
mov
call
add
add
sub
ret
or
jg
(bad)
xor
adc
adc
jae
aaa
adc
and
idiv
cmp
or
mov
jl
mov
mov
test
je
push
adc
push
test
push
into
cmp
aam
adc
or
inc
add
call
sub
add
mov
dec
add
idiv
ficomp
add
add
int3
ror
sbb
add
adc
mov
add
das
push
adc
cmp
(bad)
out
dec
push
push
or
or
loope
and
push
adc
out
(bad)
sub
push
push
mov
push
scas
adc
mov
scas
jne
push
arpl
xchg
push
add
ret
into
test
sub
mov
(bad)
aas
inc
lds
sar
mov
cmp
jne
sar
sbb
cmp
int
test
ror
inc
sub
bound
lds
clc
les
mov
and
mov
sbb
fisttp
clc
dec
dec
lock
add
add
je
sub
add
adc
mov
sub
push
push
push
rol
leave
popf
jle
mov
pop
add
ret
xor
sti
cs
inc
pop
out
sub
std
xor
xchg
xor
push
je
cmp
inc
ins
pcmpeqb
retf
ret
jle
xchg
mov
mov
stos
mov
or
ss
mov
inc
xchg
rcl
fstp
or
or
sbb
pop
sbb
add
ret
mov
xor
(bad)
lds
push
mov
je
test
mov
pop
mov
add
rol
je
lock
fidiv
pop
pop
pop
cmp
ret
add
test
out
dec
sbb
push
ins
inc
add
jl
jmp
sbb
add
call
jne
pop
inc
ins
test
and
(bad)
sbb
mov
setne
les
shl
xor
xor
cmp
and
or
jg
or
jle
call
jg
dec
push
inc
and
mov
push
inc
call
sbb
(bad)
or
push
xchg
lea
and
xor
out
shr
sub
adc
pop
sbb
outs
mov
idiv
sbb
cmp
sbb
sub
fisubr
xor
push
dec
or
daa
mov
and
adc
cld
and
(bad)
std
fild
add
push
push
call
push
push
mov
sbb
add
mov
rcr
inc
cs
or
into
loop
sbb
daa
add
test
je
push
loope
or
add
test
push
mov
int3
std
mov
jl
adc
inc
mov
mov
lods
cwde
sbb
dec
xor
pop
xor
fcomp
movs
xchg
test
xchg
adc
sbb
add
or
push
push
pusha
aaa
fmul
loope
ins
ret
cmps
out
sbb
and
add
or
adc
mov
jl
mov
push
mov
mov
xor
repz
pop
je
loop
mov
jne
mov
sub
pop
cmp
mov
int3
call
jmp
test
or
inc
mov
jl
ret
mov
test
sbb
jne
clc
mov
add
je
cmp
push
pop
ret
cmp
push
mov
fwait
hlt
jne
mov
ficom
pop
jmp
cmp
jne
mov
adc
add
jmp
mov
mov
cmp
jg
sbb
jmp
ja
jmp
sub
ret
js
mov
mov
fmul
dec
push
adc
adc
or
or
or
sbb
sbb
jmp
ror
neg
sbb
sbb
adc
ror
or
aam
mov
sbb
std
mov
call
call
add
pop
test
jne
cld
sbb
test
je
pop
add
sub
add
out
call
je
mov
clc
cs
fcomp
rcl
and
add
ret
xchg
or
data16
je
jbe
imul
dec
cmp
fcom
sbb
(bad)
sub
push
push
adc
call
test
mov
sbb
pop
jp
dec
(bad)
call
cmp
je
cmp
je
cmp
in
and
mov
inc
mov
or
and
loop
jne
fdiv
test
add
mov
test
je
mov
xlat
xchg
and
pop
cwde
sbb
adc
dec
and
add
pop
or
or
sub
xor
add
jne
add
push
add
retf
pop
pop
pop
daa
add
push
sbb
ins
int3
stos
dec
mov
mov
adc
ror
loope
pop
cmp
push
cmp
jne
or
adc
lahf
or
shl
sbb
jmp
call
dec
push
outs
dec
and
mov
loopne
adc
xor
je
jne
leave
cdq
ds
inc
push
mov
test
or
mov
scas
push
inc
push
pusha
push
in
and
push
aam
cmp
or
push
shr
je
clc
jg
push
inc
or
fsubr
test
jl
cmp
jge
mov
fiadd
or
cmp
dec
or
aam
add
call
or
jno
test
rcr
je
push
pop
xor
fwait
push
ret
push
shl
inc
and
sub
push
sub
xor
cmp
sbb
push
mov
iret
sbb
push
push
push
call
sbb
test
je
push
shr
cmp
and
mov
pop
or
mov
icebp
loopne
dec
in
xor
les
je
mov
dec
push
out
and
push
sbb
jle
mov
jp
mov
stos
or
pop
icebp
push
mov
hlt
jne
xor
and
nop
cmc
and
aam
je
fsub
mov
sbb
in
test
push
jg
push
sub
push
and
lahf
add
xchg
add
rcl
pop
call
cmp
jp
or
mov
pop
lods
dec
add
ja
les
inc
cmp
jg
shr
push
push
mov
ins
and
mov
adc
xor
sbb
seta
pop
pop
adc
loop
jbe
leave
or
pop
inc
lahf
mov
dec
inc
mov
mov
mov
ins
js
gs
in
mov
cmp
dec
xchg
push
inc
xor
sysret
je
pop
and
jmp
and
dec
add
xor
push
add
or
mov
xor
push
sbb
call
cmp
adc
clc
and
mov
ins
outs
push
add
shl
mov
push
call
adc
push
les
xor
cmp
xchg
(bad)
and
add
adc
push
sub
mov
out
sub
jg
cmp
sbb
push
inc
sub
pop
sbb
and
or
pop
sub
adc
push
mov
call
push
test
push
mov
mov
mov
pop
mov
mov
push
inc
(bad)
addr16
(bad)
or
dec
and
clc
jl
inc
sbb
jo
dec
push
cld
xor
add
push
add
adc
ja
inc
and
mov
push
popf
cmp
adc
call
add
mov
mov
jecxz
std
add
loop
add
push
and
sbb
rol
mov
ret
jle
add
out
cmp
ret
cmp
pop
sub
or
inc
jle
lea
loope
aas
loope
pop
push
cmp
add
adc
mov
pop
addr16
cld
push
xchg
add
pop
and
test
sbb
outs
add
ficomp
scas
mov
cmp
jne
push
add
mov
ret
in
jg
cmp
ret
push
push
add
sbb
jne
hlt
pop
pop
ret
cmp
or
and
push
ins
and
inc
and
adc
cmp
add
js
rol
adc
push
push
add
mov
push
push
mov
fwait
or
call
or
add
add
add
(bad)
jmp
cwde
or
loope
cmp
add
add
add
std
fild
xchg
jb
add
and
sub
(bad)
scas
ret
or
or
enter
icebp
pop
inc
lock
clc
inc
and
mov
inc
push
pop
mov
add
sbb
andps
(bad)
dec
push
aad
add
lea
enter
and
shl
outs
mov
mov
mov
mov
xor
test
push
ret
cmp
jmp
cmps
sti
fdiv
add
lods
loope
loopne
(bad)
add
dec
ds
ror
push
xor
pop
lahf
sbb
dec
xchg
lea
inc
or
mov
movs
add
ret
and
das
push
mov
mov
lahf
push
jns
mov
mov
push
push
add
inc
iret
mov
jne
mov
addr16
cmps
cmc
clc
push
ja
push
test
cmp
add
je
mov
orps
mov
je
int3
adc
and
lahf
mov
fucompp
call
mov
jmp
inc
jl
aas
add
enter
jmp
ds
sbb
add
test
je
pop
cmps
je
test
jne
mov
push
out
push
aaa
and
mov
cmp
jbe
in
mov
stos
add
aad
push
push
or
pop
or
scas
sub
dec
bound
jne
dec
xchg
mov
jae
mov
push
and
mov
test
stos
add
pop
aas
jbe
test
push
push
rep
mov
add
jmp
or
jle
push
jge
shr
and
fsub
push
out
push
pop
xchg
mov
add
leave
out
es
jl
repnz
test
mov
test
xor
push
push
push
ret
push
or
addr16
xor
rol
pop
and
ficom
pop
inc
sar
add
jae
add
sub
jae
fadd
and
adc
pop
les
mov
mov
ja
pop
(bad)
out
test
icebp
and
sub
push
xor
add
jecxz
inc
add
add
call
and
ffreep
test
add
mov
stos
add
ret
fs
(bad)
ret
jae
pop
add
push
and
sahf
jmp
add
sbb
movd
adc
or
add
mov
xor
call
mov
shl
test
nop
je
or
ja
retf
and
dec
or
mov
test
sub
and
sbb
lahf
inc
rcl
push
je
ret
icebp
mov
into
shl
push
cwde
or
push
push
loop
(bad)
xor
pop
pop
or
pop
jge
and
enter
mov
inc
sub
push
and
push
xor
lea
mov
add
xor
push
lock
in
setle
pop
dec
and
jle
ret
xlat
icebp
imul
adc
mov
mov
je
pop
outs
adc
jns
or
lea
jmp
cmp
dec
jne
mov
jmp
mov
cmp
je
dec
je
cmp
out
or
or
movzx
sbb
mov
arpl
clc
fwait
jp
ret
addr16
mov
mov
pop
mov
adc
or
mov
(bad)
int3
add
push
sub
jnp
or
inc
in
dec
add
add
retf
jne
adc
pop
inc
jmp
popf
add
jecxz
test
lods
add
(bad)
stos
lods
mov
test
je
scas
(bad)
aaa
cmp
scas
mov
mov
test
add
pop
mov
ds
mov
mov
lods
ja
sbb
loop
or
jmp
or
(bad)
add
data16
push
adc
push
push
sub
inc
jmp
jbe
sti
fisttp
popa
mov
mov
outs
call
lea
mov
lea
lea
dec
xchg
leave
add
jecxz
adc
or
adc
adc
push
or
fimul
jp
add
loopne
sbb
add
add
push
mov
dec
and
fisub
or
jno
(bad)
div
cwde
mov
mov
push
xchg
cdq
lea
lea
dec
lds
xor
pusha
inc
shr
add
loop
adc
push
or
aas
adc
or
dec
or
in
adc
enter
inc
and
jl
addr16
sub
or
sub
adc
fisub
jne
mov
inc
adc
xchg
and
mov
pop
js
add
cmps
sbb
adc
pop
sub
popa
add
jg
mov
test
push
je
pop
adc
mov
push
push
add
mov
xor
mov
xor
clc
jmp
adc
lock
scas
add
addr16
popf
mov
inc
add
cmp
or
pop
neg
ret
and
mov
cmp
mov
mov
pop
stos
das
ss
sbb
sub
adc
pop
push
or
inc
xchg
pop
mov
pop
(bad)
mov
out
jne
inc
xchg
or
lods
or
or
mov
sub
adc
leave
jne
add
push
jmp
pop
ret
push
push
lea
loopne
or
or
adc
movs
mov
in
adc
mov
and
add
fcomp
shl
add
(bad)
ja
outs
lods
and
jle
ja
test
push
push
jne
sub
fucomip
ja
or
mov
xor
fild
jge
mov
mov
mov
or
test
in
pop
cdq
fwait
aaa
test
je
xor
cli
cdq
jnp
push
sub
cs
add
hlt
cmps
cmp
or
dec
lods
or
sbb
pop
(bad)
mov
out
jmp
pop
pop
add
jl
pop
fist
xor
or
mov
push
add
xor
cmp
or
adc
xor
daa
sub
push
retf
xchg
lahf
mov
out
cmp
sbb
push
jp
cmp
jne
stos
fdiv
push
movs
adc
mov
je
in
cmp
mov
adc
test
and
dec
gs
inc
mov
imul
mov
push
scas
mov
sub
inc
ret
test
jl
in
inc
aad
js
push
mov
sub
push
push
adc
call
adc
push
cld
mov
xor
dec
sbb
xchg
lahf
pop
jo
add
test
add
jl
clc
in
pop
aas
inc
adc
push
inc
pop
or
adc
in
and
jne
adc
push
cmp
je
pop
cs
or
jne
stos
(bad)
dec
mov
mov
mov
inc
mov
push
inc
sub
dec
sbb
adc
arpl
pop
and
test
jne
and
leave
pushf
mov
dec
push
xchg
mov
fcomp
adc
js
addr16
jl
js
aad
sub
cmc
cmp
sbb
or
sub
inc
aas
pop
add
leave
ja
mov
mov
ds
(bad)
xor
sub
imul
cmp
pop
fadd
je
adc
xchg
stos
inc
loopne
les
add
inc
and
or
and
dec
ret
outs
xor
or
retf
jo
in
dec
js
push
push
push
scas
test
xchg
popa
mov
mov
cmp
push
js
jae
push
mov
fmul
add
cmps
enter
mov
mov
add
dec
(bad)
xchg
sub
mov
movs
(bad)
sbb
inc
and
sbb
push
push
sahf
or
data16
stc
scas
pop
add
pop
cmc
rol
dec
add
push
cli
ja
(bad)
movzx
add
and
adc
std
call
mov
pop
pop
ret
mov
pop
and
adc
jo
add
xor
sbb
ins
mov
and
inc
aaa
lock
xor
mov
mov
call
cdq
test
lock
mov
je
push
push
pop
xlat
mov
push
xor
retf
and
push
fwait
or
inc
or
test
push
je
push
push
mov
dec
push
jmp
mov
and
je
test
je
push
push
mov
int
sbb
jmp
adc
mov
push
jmp
pop
or
stos
jle
adc
mov
fld
dec
sub
adc
scas
jne
out
gs
dec
shl
mov
por
adc
add
cmp
push
(bad)
std
mov
fld
or
not
ja
es
test
push
je
int3
cmc
xchg
test
push
lock
add
push
inc
xor
xor
pop
pop
cmp
icebp
or
lock
fs
cmp
xor
mov
cmp
lods
and
pop
mov
sbb
mov
push
gs
mov
cmp
pop
xor
call
add
add
lods
and
out
mov
pop
repz
add
neg
fwait
pop
add
add
add
add
add
add
mov
or
pop
add
push
scas
fmul
push
icebp
aam
or
or
mov
shl
rcl
clc
or
and
call
or
test
jne
pop
sub
fnstenv
out
pusha
pop
inc
int3
pop
jl
mov
les
fistp
mov
cmc
outs
pop
or
ret
or
lock
push
inc
and
pop
pop
pop
dec
mov
or
sub
les
cmp
cmp
mov
push
cmp
les
sti
jmp
adc
mov
cmp
jne
push
cmp
mov
inc
adc
pop
ret
push
retf
jg
pusha
sbb
adc
adc
or
ins
and
cmp
icebp
add
fdivr
cmp
xor
pop
sub
aas
lods
in
retf
out
fwait
lahf
adc
add
mov
cmp
jg
ins
and
test
push
jg
push
fidivr
outs
mov
adc
jnp
cmp
imul
sub
ja
pop
adc
add
push
mov
les
pop
mov
jmp
mov
adc
jb
mov
(bad)
cmc
adc
pop
push
mov
pop
ins
test
je
dec
jge
jno
sub
jl
xor
inc
or
lds
(bad)
push
xchg
inc
and
into
sbb
sti
xor
sub
aaa
sti
outs
enter
sbb
xor
mov
jne
pop
ds
and
shl
inc
and
aad
or
pop
imul
mov
push
and
jo
les
jmp
mov
bndldx
sbb
cmc
sub
test
push
jo
adc
and
dec
and
out
js
sub
je
in
add
test
aam
mov
sti
add
arpl
jnp
je
and
jae
xchg
je
adc
clc
stos
sub
push
aam
and
cld
std
and
push
(bad)
pop
or
cmp
jne
in
dec
fcmovb
inc
pop
ret
mov
test
or
pop
movs
call
inc
adc
dec
pop
jge
and
retf
push
and
pop
(bad)
call
sbb
dec
adc
sub
cmp
jae
push
mov
lahf
push
(bad)
fmul
xor
push
mov
shl
mov
repz
mov
pop
mov
sub
jae
and
sti
adc
xchg
mov
pop
pop
cmps
pop
jle
cmp
icebp
sbb
dec
adc
xor
push
and
mov
add
std
adc
push
jbe
or
les
cmc
and
add
adc
push
imul
mov
inc
fs
push
xor
or
sar
clc
lea
inc
add
repz
jne
cmp
sub
cmps
jmp
sbb
push
outs
and
pop
push
mov
and
xor
mov
cmp
pop
pop
xor
xor
mov
sbb
mov
mov
mov
jb
lock
pop
pop
jmp
jmp
and
jle
add
cs
push
mov
adc
test
inc
hlt
jne
adc
mov
(bad)
test
bound
push
(bad)
loopne
xchg
adc
sbb
and
call
pop
bts
ins
mov
test
dec
inc
mov
test
mov
aaa
imul
xchg
test
lea
lea
movzx
dec
cmp
jne
call
dec
add
test
jle
jne
call
push
push
ins
mov
inc
cmp
jl
fmul
add
add
mov
push
(bad)
fdiv
sub
mov
loopne
arpl
stos
ret
and
mov
inc
js
pop
adc
bound
mov
sahf
mov
inc
sbb
or
add
add
mov
inc
pusha
adc
mov
mov
or
adc
mov
and
ins
fdiv
shl
stos
cli
ret
push
adc
dec
jne
push
or
add
rol
inc
push
or
cmc
push
push
data16
push
push
and
or
data16
add
add
sbb
clc
dec
pop
mov
sbb
or
aaa
inc
pop
leave
pop
sub
aad
add
xor
cmp
dec
cli
sub
std
je
add
rol
shr
dec
fist
jnp
cmp
lock
ss
je
cmp
je
fsubrp
aaa
je
sbb
je
xor
bnd
xor
xchg
(bad)
sbb
ds
inc
push
jmp
je
sti
and
or
and
mov
xchg
sbb
jp
or
jne
mov
jne
lock
jmp
mov
mov
adc
push
aam
cmp
mov
xchg
pop
gs
or
lds
push
adc
push
push
pop
(bad)
dec
loopne
jp
mov
mov
mov
mov
mov
idiv
adc
pop
push
push
push
mov
mov
dec
push
movs
inc
xchg
cmp
sub
xor
outs
and
mov
mov
mov
and
scas
fwait
sbb
push
dec
jg
or
ins
and
add
xchg
or
adc
lock
mov
pop
adc
jmp
mov
jecxz
test
lds
out
in
sub
pop
sar
je
inc
sub
cmc
lea
fcmovb
add
call
imul
sbb
jnp
sbb
lock
jno
add
idiv
(bad)
jne
mov
test
pop
inc
lock
dec
and
mov
push
push
push
push
hlt
aaa
cwde
mov
or
mov
mov
pop
pop
dec
mov
loop
mov
scas
and
add
rol
push
sub
jl
push
xor
jae
jbe
inc
and
jne
cmps
pop
push
xor
fdiv
jbe
pop
pushf
xchg
or
add
or
pop
xor
dec
cs
add
das
add
mov
or
xchg
add
inc
or
or
mov
inc
neg
jle
xchg
or
ror
and
ror
mov
push
lds
add
imul
and
add
xchg
adc
in
sets
mov
adc
call
add
mov
add
ror
shl
push
lds
sar
mov
mov
(bad)
inc
add
push
cld
jg
jg
mov
inc
and
mov
movzx
shl
cmp
ins
xchg
fst
mov
push
inc
sti
es
jle
add
mov
jmp
movzx
mov
sub
inc
add
add
mov
(bad)
(bad)
call
mov
mov
js
mov
rdpmc
leave
adc
adc
cmp
pop
mov
lds
dec
adc
leave
mov
xor
mov
and
or
loope
cmp
lea
ret
(bad)
jle
inc
sbb
dec
and
cmp
pop
xor
and
xor
mov
and
mov
sbb
repz
dec
and
mov
and
jns
dec
dec
cld
inc
je
pop
call
std
push
jle
addr16
inc
push
xor
movzx
fucomp
bound
inc
add
pop
add
inc
movzx
std
and
movzx
fistp
out
mov
sbb
pop
test
js
mov
test
js
xchg
pop
inc
shl
or
and
add
sbb
mov
shr
mov
inc
pop
(bad)
lock
mov
add
pusha
inc
cmp
dec
adc
mov
and
sbb
push
or
xor
pop
ret
pop
mov
and
outs
adc
clc
das
dec
adc
lea
loop
in
and
jge
stos
and
xchg
cli
mov
ret
adc
push
lahf
in
lds
jge
call
mov
(bad)
nop
sub
mov
and
jmp
mov
lea
cmp
push
push
jge
mov
lds
and
int
jl
mov
mov
movs
mov
pop
retf
add
mov
je
daa
sub
mov
sub
je
sbb
enter
mov
adc
add
push
lea
add
jl
add
cmps
cmp
stos
add
mov
inc
inc
mov
(bad)
out
dec
add
add
cmp
ins
sub
adc
and
adc
into
adc
xor
lock
sub
cmp
adc
sbb
cmp
add
cmps
jbe
mov
jge
or
shr
pop
cdq
shl
mov
mov
fwait
push
out
out
push
pop
mov
pop
mov
mov
pop
ret
add
or
call
xchg
inc
or
call
and
add
or
pop
add
popf
mov
pop
mov
test
ret
sar
aas
push
mov
mov
mov
scas
jg
int3
xor
rcl
sub
cmp
adc
jo
push
push
cmp
cmp
retf
jbe
sub
rol
pop
inc
rol
test
mov
mov
dec
cmp
jge
mov
sub
call
fs
mov
test
jg
ss
jl
push
xor
adc
ret
and
(bad)
xor
dec
mov
or
mov
sub
or
(bad)
push
push
sbb
mov
adc
jge
sti
cmp
push
sbb
(bad)
jg
mov
cmp
push
and
jne
jo
lahf
dec
ret
(bad)
(bad)
push
adc
test
je
cmp
je
mov
xor
cmp
mov
imul
push
mov
push
(bad)
cmp
and
dec
(bad)
aaa
sti
div
jmp
cmp
stc
inc
jl
jmp
inc
int3
adc
add
retf
test
mov
xor
or
or
dec
add
jl
and
aaa
inc
mov
adc
xor
fucomi
(bad)
fsubr
pop
xor
cmp
jge
jne
jns
mov
pop
adc
sub
inc
and
clc
or
(bad)
mov
(bad)
(bad)
rcr
int
or
xor
push
push
cmp
dec
xor
mov
aam
or
pop
mov
and
mov
mov
xor
xor
dec
and
(bad)
cmp
push
in
daa
out
lea
mov
aas
fs
shr
dec
lea
lea
fist
les
ret
mov
test
je
mov
lea
push
and
add
mov
inc
addr16
xlat
int
cli
push
or
push
pop
std
or
cdq
add
dec
add
ins
mov
xor
push
sti
pop
lahf
xchg
std
cmp
cmp
dec
lea
mov
ret
inc
das
lahf
lea
add
enter
lahf
mov
push
or
xadd
lahf
or
dec
add
inc
add
imul
mov
or
adc
xor
mov
jle
mov
in
jle
lea
pop
inc
sub
sar
sar
mov
imul
add
adc
call
mov
jge
mov
jmp
jle
lea
cmp
jl
leave
adc
inc
and
add
xor
pop
dec
adc
call
je
test
stos
and
aam
fbld
lea
imul
mov
neg
push
dec
cld
mov
push
cmp
pop
dec
add
test
jg
cmp
ja
sbb
scas
cmc
add
mov
dec
cmc
add
lahf
push
ret
add
push
call
jg
sbb
fstp
repz
pop
xor
adc
mov
(bad)
sub
or
ret
cmp
or
push
dec
and
push
push
xor
xor
lods
sbb
push
mov
cmp
cmp
ret
call
mov
xor
sar
mov
lea
mov
sub
sub
and
into
mov
pop
loope
push
shl
cmps
je
sbb
sbb
test
adc
sbb
mov
lods
push
test
jne
pop
shl
adc
sub
and
cmp
or
pop
and
cmp
test
adc
sbb
jmp
loopne
(bad)
je
test
push
or
jne
push
add
test
test
or
xor
jl
cmp
pop
cmp
sbb
pop
xor
xchg
push
les
add
mov
inc
cwde
and
les
sbb
inc
adc
mov
inc
jmp
dec
jg
push
aas
mov
inc
and
mov
sbb
or
jne
test
js
je
cmp
arpl
pop
bound
sbb
punpckhdq
push
fadd
or
shl
lock
or
test
jns
sub
pop
(bad)
inc
mov
inc
ret
jbe
cmp
xor
cmp
and
je
pop
pop
sub
push
(bad)
test
enter
push
sbb
mov
test
call
or
pop
jnp
mov
cmp
out
jle
mov
jb
test
mov
push
mov
iret
je
lahf
inc
jmp
sub
jmp
sub
(bad)
fcmovb
jmp
mov
imul
add
add
outs
cmp
inc
test
jle
add
mov
inc
push
inc
inc
sti
xor
or
push
mov
je
outs
call
ret
mov
je
cli
inc
test
jle
call
inc
dec
push
iret
push
cmp
or
add
or
(bad)
add
sub
cmp
lea
(bad)
and
push
push
xor
sbb
pop
cld
or
add
inc
shr
inc
test
jle
push
sub
rcr
div
(bad)
push
mov
lock
add
jo
cmp
or
push
jnp
adc
pop
jne
cld
icebp
pop
and
cmp
sti
pop
(bad)
fild
pop
sbb
and
mov
rcl
in
test
or
pusha
js
and
lea
dec
or
or
rol
mov
or
loopne
inc
or
push
adc
xor
mov
jg
jnp
lea
push
sbb
clc
sar
mov
mov
(bad)
jg
add
sbb
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
cmp
clc
mov
shl
xor
push
add
outs
or
cmp
jl
out
dec
or
add
mov
sub
mov
mov
(bad)
(bad)
mov
cmps
or
and
mov
sbb
pop
xor
fimul
fiadd
adc
mov
pop
inc
and
lahf
or
add
pop
add
dec
adc
mov
je
je
lds
push
adc
sub
scas
adc
stos
mov
(bad)
jg
pop
mov
mov
add
lea
ss
mov
sbb
idiv
stos
sbb
pop
pop
dec
push
push
mov
sub
lds
nop
cld
push
push
add
shl
cmp
add
jae
and
push
mov
loopne
outs
xor
stos
inc
mov
and
sbb
mov
cwde
and
or
add
push
adc
test
inc
outs
fadd
sbb
das
dec
and
and
inc
or
or
or
pop
or
mov
cwde
(bad)
push
outs
les
clc
sbb
(bad)
in
xchg
jge
movs
pop
mov
and
sar
mov
jle
cmp
jl
inc
in
inc
push
and
mov
cli
xor
dec
cmp
jl
cmp
jne
cmp
adc
inc
add
xor
pop
je
pop
pop
ret
dec
mov
clc
jg
outs
mov
rol
je
cmp
ja
mov
call
sbb
jbe
iret
movzx
shl
or
(bad)
in
icebp
dec
inc
sbb
test
ja
jmp
mov
jmp
jbe
xor
loopne
add
mov
add
inc
add
mov
or
stc
stos
(bad)
dec
add
leave
jle
sar
inc
test
jg
xor
add
jne
add
ret
inc
cmp
jle
test
sbb
or
sar
clc
mov
test
ins
adc
and
mov
pop
ret
adc
ds
mov
mov
rol
outs
stos
(bad)
cmp
push
jl
mov
push
inc
in
cdq
sbb
inc
add
stos
add
add
jmp
push
add
adc
add
jae
pop
cmp
push
inc
push
nop
xchg
inc
sbb
ds
mov
mov
cld
pop
movs
test
mov
je
mov
inc
mov
or
add
add
mov
clc
xor
int3
push
push
ror
xor
push
jb
push
add
mov
and
outs
xor
rcl
push
mov
jecxz
dec
mov
inc
mov
sbb
pop
xor
xchg
adc
push
push
sti
cs
inc
mov
sub
mov
mov
sub
jne
mov
lahf
xor
int
mov
or
jmp
sub
test
push
rcl
inc
aam
loope
stos
(bad)
push
push
aam
rcr
adc
adc
dec
add
fiadd
push
push
or
jmp
fwait
sbb
or
movzx
mov
inc
mov
and
pop
inc
cmp
jbe
clc
pop
lea
jne
je
ret
test
or
dec
ror
(bad)
std
(bad)
rol
inc
dec
mov
inc
mov
test
js
mov
in
sub
jmp
test
mov
je
(bad)
out
add
sbb
mov
and
sub
sbb
in
mov
lock
jb
adc
imul
hlt
sbb
mov
je
mov
sub
add
cmp
jle
xor
add
add
cmp
cmps
xor
das
adc
lds
add
imul
adc
aas
adc
mov
dec
loopne
and
push
or
cmp
popf
(bad)
(bad)
(bad)
jge
and
or
mov
inc
jmp
or
mov
inc
xor
test
mov
pusha
push
xor
fwait
mov
jle
lea
dec
mov
or
cmp
mov
je
or
pop
sar
test
jg
add
jmp
add
pop
pop
add
sbb
mov
adc
sbb
jle
mov
sar
test
mov
scas
call
jle
dec
mov
sar
jg
add
inc
int3
jg
xchg
pop
dec
add
rcr
inc
(bad)
adc
mov
inc
test
je
clc
mov
mov
push
and
mov
inc
or
add
xchg
xor
add
ins
sbb
or
push
rcl
(bad)
mov
aaa
xor
mov
mov
mov
push
mov
sub
or
inc
shr
cmps
sub
je
add
test
inc
adc
(bad)
cmp
push
cmc
dec
mov
adc
int
and
or
sahf
mov
fucomi
mov
(bad)
pop
cld
mov
(bad)
clc
scas
and
push
ror
dec
mov
call
and
mov
jmp
and
adc
jle
(bad)
and
xchg
and
call
inc
add
and
adc
jle
mov
fwait
pop
mov
ja
fcomp
jg
(bad)
int3
mov
push
push
(bad)
fisttp
dec
hlt
sbb
or
sahf
or
jl
sbb
(bad)
xor
push
mov
xor
pop
sub
jmp
cmp
jne
push
push
ror
mov
pop
ret
cmp
push
push
xchg
sbb
ins
cmp
mov
push
sbb
or
(bad)
mov
or
div
push
sbb
ss
and
adc
mov
and
adc
setno
js
gs
jnp
push
aad
ss
mov
loope
fcos
push
add
sbb
jp
loopne
dec
inc
mov
or
mov
mov
add
shl
leave
mov
pop
ret
mov
test
or
rcl
jecxz
or
pop
mov
jne
xchg
inc
or
(bad)
std
sub
jne
mov
jo
pop
adc
jbe
jbe
jge
dec
inc
iret
sbb
fbstp
sbb
mul
je
lock
push
and
mov
jne
pop
sbb
mov
mov
pop
mov
inc
push
clc
cmp
in
mov
ror
dec
jne
push
push
mov
fistp
loop
sbb
jl
push
push
(bad)
das
push
xor
add
mov
sbb
push
mov
retf
icebp
push
mov
pusha
push
jne
dec
test
adc
sbb
std
jmp
dec
(bad)
sbb
dec
or
cmp
jne
cmp
je
mov
cmp
enter
bound
and
je
(bad)
out
push
add
es
pop
pop
pop
ret
push
mov
ins
push
xor
inc
sub
mov
mov
mov
mov
pop
loopne
int
or
inc
and
and
xchg
push
je
in
ja
mov
push
dec
adc
dec
bound
inc
dec
push
push
aas
pop
dec
movs
mov
lock
ins
sub
in
adc
push
fnstsw
mov
out
sahf
push
lock
pop
jp
std
das
es
hlt
cmp
push
mov
out
or
inc
cmp
sbb
sbb
xchg
or
push
or
call
push
out
pop
adc
or
pop
aas
in
fmul
(bad)
aas
inc
in
push
add
xchg
jns
add
pop
mov
test
and
in
add
lds
and
test
stos
jmp
pusha
inc
cmps
or
xchg
mov
(bad)
aaa
pusha
mov
iret
pop
push
mov
call
inc
leave
mov
test
and
add
or
xor
rcr
je
mov
mov
jl
xor
sub
mov
test
je
push
call
jmp
daa
lods
mov
push
inc
shl
adc
or
push
mov
enter
loop
aas
inc
xor
ret
enter
or
add
xchg
dec
div
mul
gs
jne
call
ret
push
push
call
sbb
add
or
pop
and
or
inc
and
loopne
cmp
es
out
cdq
cmp
sub
inc
inc
test
cmp
js
loopne
aas
or
loope
pop
adc
jg
enter
mov
jb
sub
gs
leave
add
or
mov
pop
popa
pop
rcl
inc
push
pop
cmp
gs
and
push
imul
mov
inc
test
mov
stos
inc
push
outs
lea
sub
call
xchg
and
into
data16
adc
std
sbb
aas
outs
push
push
xchg
mov
cmp
je
push
leave
adc
xchg
leave
push
pop
fs
inc
or
jnp
jb
inc
push
inc
lahf
xchg
addr16
push
ss
or
lods
sbb
mov
jg
and
or
push
dec
ret
push
data16
iret
push
or
nop
cdq
jge
iret
pusha
leave
(bad)
push
outs
push
push
push
dec
jbe
adc
dec
sub
sbb
iret
iret
pop
push
xor
and
bound
fstp
or
mov
push
mov
sbb
xchg
cmp
sub
ret
add
xchg
jne
mov
ja
sbb
sub
or
push
fadd
jne
mov
push
push
cmps
jbe
adc
mov
pop
inc
push
xor
dec
push
xchg
push
or
test
scas
and
jle
ins
push
jo
push
jmp
aaa
push
mov
push
push
push
push
bextr
push
loope
or
outs
mov
pop
push
mul
mov
inc
push
jno
or
push
jno
push
push
xor
je
adc
in
adc
outs
push
pop
(bad)
int3
add
iret
pusha
jo
push
pusha
lahf
adc
jbe
inc
iret
pushf
sbb
add
or
and
xchg
pop
fs
ja
cmp
adc
gs
and
and
push
fs
leave
inc
es
push
or
pop
fstp
lea
lahf
ja
and
fidivr
lahf
or
enter
aaa
outs
js
add
fnstenv
add
push
and
sti
aas
sbb
out
push
mov
test
jne
push
push
sub
stos
ror
push
sar
xor
sbb
push
nop
mov
cmp
jne
inc
cmp
jb
adc
push
jge
push
push
push
push
scas
test
pop
inc
adc
cmp
dec
pop
xor
mov
neg
out
and
pop
adc
jae
mov
push
jne
push
jle
je
dec
pop
ret
jg
ds
jmp
clc
or
sbb
sbb
add
test
outs
mov
dec
or
in
add
pop
push
jl
sub
sbb
or
(bad)
or
addr16
push
or
add
hlt
add
outs
mov
fisub
aaa
in
jne
ins
mov
rol
add
and
jae
stos
add
ret
fmul
mov
inc
sub
cmp
pushf
mov
mov
inc
pop
mov
sbb
cmp
push
call
jmpw
jnp
lea
int3
loop
sar
jo
lds
pop
dec
jle
hlt
add
aaa
jge
add
pushf
mov
outs
or
sub
jmp
test
push
jnp
mov
lea
jp
jnp
ja
js
push
mov
pop
inc
cld
mov
inc
prefetchnta
addr16
jo
mov
push
or
dec
inc
push
scas
call
inc
adc
inc
add
mov
and
and
cmp
jne
ins
push
push
lea
or
inc
(bad)
imul
retf
cs
or
dec
inc
adc
cmp
sub
mov
aaa
mov
ror
mov
adc
adc
neg
push
retf
je
mov
sbb
test
pop
pushf
sbb
jmp
sub
add
push
clc
(bad)
push
dec
fidivr
je
lea
push
lea
inc
mov
mov
mov
mov
mov
mov
cmp
inc
cmp
arpl
(bad)
adc
push
mov
aas
add
push
inc
push
add
mov
cmp
test
push
jl
mov
inc
mov
out
xlat
repz
dec
adc
rep
je
mov
push
push
mov
call
rcr
or
sti
mov
jae
mov
mov
jnp
mov
lods
cmp
or
jmp
ret
adc
sbb
int
inc
push
add
sbb
cli
sbb
sub
repnz
ss
lock
add
sub
sbb
cmpps
mov
je
push
ds
sub
push
or
xchg
movs
xor
sbb
sub
mov
lock
pop
pop
mov
pop
mov
adc
add
outs
push
and
dec
add
call
loope
into
push
inc
push
push
jmp
mov
adc
shl
or
adc
sti
out
in
aaa
pushf
mov
or
jle
jne
inc
lods
mov
retf
dec
popf
mov
inc
or
lahf
and
into
dec
aam
sub
je
pop
retf
or
stc
inc
idiv
jg
mov
mov
lea
push
push
push
mov
pop
mov
push
icebp
add
sbb
push
mov
movs
lods
xlat
int3
add
pop
out
lahf
pop
mov
pusha
mov
out
adc
cld
push
retf
(bad)
hlt
fcom
push
push
in
mov
add
or
pop
lds
mov
jne
jbe
ins
pop
ins
out
pop
jne
pop
ret
sub
jbe
mov
push
adc
cmp
ret
mov
or
ret
imul
push
sub
ja
rcl
test
mov
js
cmp
jge
int3
mov
pop
push
scas
inc
je
sahf
pop
fsub
mov
or
push
popa
int
inc
aam
dec
or
adc
inc
inc
dec
mov
cmp
adc
pop
cmp
mov
jne
xchg
xor
lea
push
inc
mov
push
inc
lea
add
xor
ret
call
mov
test
mov
(bad)
pop
mov
push
push
adc
mov
add
lods
mov
mov
shl
push
xor
(bad)
push
xor
sub
mov
dec
cwde
add
and
xor
sahf
push
sbb
and
inc
mov
outs
out
cmp
popa
push
push
or
inc
sbb
je
push
pop
and
mov
and
jmp
pusha
mov
das
sub
inc
cwde
or
shl
inc
pop
sub
fcomp
mov
add
vmwrite
js
xchg
test
cmps
fwait
adc
es
loop
test
ror
sbb
add
shr
ror
xor
rol
es
and
rcl
or
adc
xchg
inc
das
sbb
pop
xor
inc
in
add
pop
pop
das
in
jo
push
or
repnz
int3
push
mov
mov
inc
sub
outs
pop
out
fbstp
jnp
add
sbb
ret
aas
add
loope
add
sbb
pop
sub
wrmsr
jl
inc
or
fisttp
jmp
mov
xor
cmp
sbb
pop
mov
je
inc
push
pop
push
test
rcl
pop
sbb
sbb
adc
or
dec
adc
daa
test
adc
mov
(bad)
adc
push
push
pop
sbb
push
add
xor
cmp
fldcw
outs
loop
add
je
je
adc
mov
imul
xor
pop
cmp
es
push
lea
push
rcr
push
push
test
mov
mov
adc
inc
adc
fisubr
lea
rcl
sub
loopne
xor
push
adc
jb
ficom
cmp
fisub
push
adc
add
je
inc
mov
cmp
je
popa
test
icebp
inc
adc
out
mov
ret
mov
dec
and
or
pushf
scas
aad
mov
push
lods
mov
sub
dec
dec
sbb
(bad)
pop
add
mov
add
aas
mov
push
sbb
adc
lods
lods
mov
dec
inc
sbb
sub
icebp
add
add
add
jbe
or
or
test
and
adc
test
cmp
add
and
into
mov
mov
xchg
push
push
mov
test
jne
jb
dec
pop
les
and
and
jne
pop
add
lods
and
mov
daa
jg
rcr
inc
mov
int3
xor
rcl
jmp
adc
rcr
(bad)
int3
push
add
jo
sub
push
jne
xchg
jae
mov
pop
add
les
push
icebp
or
push
jne
sbb
cwde
push
adc
sub
daa
add
jmp
fiadd
and
and
adc
test
popf
mov
inc
out
in
and
addr16
xchg
xor
xchg
mov
aaa
test
cmp
and
cmp
jne
cmp
loop
inc
dec
sub
dec
dec
add
jl
sti
fwait
test
adc
xchg
and
inc
loope
scas
ficomp
add
mov
push
sbb
pop
adc
add
or
(bad)
adc
jge
jo
or
push
add
mov
jmp
sti
jg
jnp
mov
cmp
jne
mov
cmp
cld
xor
dec
scas
or
mov
jmp
push
add
(bad)
(bad)
rol
push
sbb
aaa
int3
mov
inc
cs
dec
xchg
adc
es
or
je
fiadd
inc
add
or
scas
dec
loop
adc
mov
fwait
add
cmp
ret
mov
dec
and
or
out
push
and
jo
loope
or
dec
test
dec
outs
jo
in
xchg
inc
xor
inc
mov
add
scas
sbb
ja
cwde
or
xor
pop
cmp
call
mov
mov
mov
push
push
mov
push
mov
mov
push
adc
and
sub
dec
out
(bad)
adc
push
cmp
inc
fdiv
mov
je
lods
jo
adc
je
cwde
mov
fstp
les
aaa
or
inc
cdq
push
mov
imul
inc
mov
sar
add
popa
mov
fidivr
and
inc
movnti
adc
cmp
ror
out
xor
or
test
add
and
mov
out
mov
dec
add
xor
and
push
push
xlat
mov
push
mov
inc
or
test
je
sub
lods
inc
cmc
sti
rsm
jne
push
push
sbb
jns
aam
cli
inc
and
push
ret
das
mov
push
mov
pop
nop
je
mov
push
or
and
movs
jmp
or
adc
add
lock
push
popa
and
ja
fwait
cmps
lahf
cmc
sub
jbe
ins
out
or
xchg
push
lock
push
jmp
into
inc
jo
mov
jb
pop
mov
jg
cs
pushw
cmps
sar
cmp
je
pop
add
cmp
aaa
lea
mov
jmp
jnp
out
test
mov
add
or
(bad)
es
or
inc
adc
push
je
add
pop
sub
push
sti
popf
sqrtps
xchg
mov
push
add
mov
lods
and
das
add
outs
ds
mov
cmp
jg
push
push
sbb
stos
loop
push
pop
cdq
xor
or
xchg
lahf
fild
test
mov
mov
pusha
mov
dec
mov
push
jo
add
jne
ja
dec
push
sub
adc
mov
adc
fsubrp
fs
adc
lock
and
aas
mov
inc
adc
mov
data16
adc
bound
jo
cdq
rcl
pop
sbb
inc
mov
mov
cmp
jne
pop
ret
test
push
push
push
clc
mov
or
sub
jmp
mov
mov
je
sbb
rol
inc
cmp
lea
sbb
inc
sar
sbb
cs
je
test
setge
dec
and
(bad)
(bad)
inc
inc
inc
in
mov
jge
mov
not
mov
shr
dec
jns
lea
pop
mov
add
sub
scas
adc
lahf
jmp
adc
je
cmp
jns
call
(bad)
(bad)
jmp
xor
xor
xor
test
jle
shl
test
mov
not
movzx
jmp
(bad)
(bad)
inc
mov
xor
ret
int
in
call
enter
or
sub
adc
aaa
xchg
sbb
dec
adc
and
push
pusha
daa
mov
ins
and
xor
pop
mov
sub
in
int3
int3
loop
jg
pop
dec
and
push
push
xor
cmp
mov
lea
mov
cs
ret
mov
pop
add
ret
cmp
jge
mov
jg
push
jne
mov
lea
pop
(bad)
call
movsx
dec
cmp
push
lea
jl
out
jle
clc
xor
(bad)
adc
cmp
lea
ins
mov
and
push
fs
jae
xchg
stos
pop
xor
push
inc
mov
mov
mov
push
rol
mov
jmp
or
mov
clc
cs
cmp
jne
push
mov
call
iret
in
push
aam
dec
inc
and
mov
sahf
and
mov
clc
cs
jl
jg
xchg
jecxz
push
cmp
jbe
inc
inc
or
inc
sbb
mov
xor
enter
push
sbb
(bad)
std
es
push
pop
rol
loopne
push
cmp
test
cmp
add
shl
xchg
jmp
push
sbb
jmp
lea
lea
mov
inc
ror
(bad)
cmp
mov
(bad)
ds
jge
cmp
jae
lea
xor
shl
dec
mov
xchg
mov
adc
mov
sbb
xor
test
je
out
call
cdq
es
add
mov
imul
das
lock
(bad)
jmp
add
sar
mov
shr
add
add
cmp
jle
lea
cmp
je
inc
add
js
inc
xchg
inc
and
stc
stos
add
xor
gs
je
and
pop
mov
xchg
int3
std
cmp
pop
or
or
mov
inc
dec
jne
push
cmp
mov
inc
cs
lea
cmp
jg
xor
push
(bad)
fbstp
cs
mov
inc
adc
add
jmp
hlt
mov
adc
shr
inc
std
lock
add
test
sbb
mov
std
inc
or
shl
bound
test
adc
bound
les
clc
ins
pop
adc
nop
sti
cmp
cld
leave
sub
inc
popa
adc
int
xor
jmp
push
fadd
xchg
jmp
push
mov
push
jmp
push
sbb
add
add
jae
add
push
jmp
add
shl
pop
mov
jno
sub
je
or
push
adc
add
sbb
push
push
push
mov
test
xchg
cmp
jle
push
ins
lea
mov
jg
lock
jne
pop
pop
outs
add
mov
cmp
dec
add
(bad)
jo
or
loope
fisubr
movs
mov
outs
or
ret
mov
test
dec
sbb
xor
inc
mov
sub
push
push
inc
loopne
sbb
int3
push
jne
cli
push
shl
sbb
sbb
mov
dec
add
xchg
add
mov
adc
ds
inc
(bad)
pusha
test
daa
js
push
inc
adc
je
outs
out
inc
xor
sbb
mov
loopne
mov
aaa
xor
je
loope
shr
fsub
ins
pop
lods
fwait
add
add
pop
ret
pop
inc
xchg
inc
outs
push
sub
pop
fcom
adc
test
je
test
or
mov
movs
jne
pop
xor
push
dec
jmp
(bad)
push
adc
imul
loop
test
mov
jne
ds
stos
or
inc
cld
inc
mov
cmp
adc
xor
sbb
inc
push
adc
add
pop
je
popf
and
xchg
or
ds
ret
mov
sbb
ins
push
and
add
jb
or
or
add
add
mov
pop
pop
mov
dec
xor
add
inc
push
ficomp
jge
mov
rcl
add
and
or
stos
xlat
add
cmc
cmp
test
jns
mov
add
push
pop
add
je
jo
xor
rol
sub
or
dec
mov
mov
jmp
test
or
jge
and
and
add
out
nop
add
aaa
out
push
xor
mov
(bad)
mov
ins
and
sub
add
lahf
mov
xor
cmp
mov
jo
and
adc
pushf
cmp
inc
ja
pop
adc
test
and
xor
adc
test
rcl
adc
je
je
and
setle
je
pusha
inc
xlat
dec
scas
test
out
or
int3
or
sub
fcom
shl
sbb
mov
add
adc
and
cmps
pop
mov
cmc
adc
xor
push
push
push
inc
cmc
add
in
adc
cmc
jne
push
ja
push
push
mov
pop
in
push
adc
stos
test
inc
clc
or
or
jo
mov
jmp
xchg
xor
mov
and
stos
mov
inc
push
shl
xor
cmp
call
push
push
mov
add
pop
rcl
popf
pop
dec
cld
xor
add
test
push
dec
inc
pop
or
aad
lock
sahf
je
js
test
rcr
sti
jmp
test
push
push
mov
cmp
mov
jo
push
and
xchg
sub
jge
push
in
add
push
sub
aas
rcl
cmp
jmp
push
inc
sbb
mov
adc
inc
push
stos
inc
inc
nop
and
add
aad
and
outs
cmp
mov
push
and
pusha
ret
adc
test
and
and
pop
jbe
and
(bad)
pop
sub
mov
call
test
jle
mov
test
push
jbe
cmp
je
mov
cmp
jb
jmp
push
mov
or
adc
fld
cld
gs
dec
sti
pop
xor
pop
ret
daa
xor
sbb
std
(bad)
mov
mov
int3
mov
mov
inc
fild
cmp
and
xor
jp
bound
mov
jmp
inc
aas
pop
jnp
or
or
cmp
je
xchg
cmp
push
sub
or
inc
xor
jmp
inc
and
mov
rol
clc
add
call
std
fist
cmp
je
sbb
fisttp
sar
aas
inc
test
je
mov
cmp
je
out
aaa
adc
jl
mov
adc
mov
or
dec
push
mov
push
ins
out
je
lea
push
push
dec
and
pop
popa
xchg
mov
push
and
mov
mov
fnsave
or
mov
je
xor
pop
cmp
push
lods
ss
xor
ds
sar
fld
mov
sbb
in
mov
push
push
push
adc
xchg
sbb
add
mov
mov
jmp
mov
add
cmps
sub
sub
push
push
or
mov
icebp
push
adc
add
add
and
scas
cmp
mov
adc
test
pop
jg
loope
cmp
stos
pop
and
or
sub
pop
sub
or
pop
mov
mov
dec
jne
jae
jle
sub
cmp
cmp
pop
add
jo
jno
sbb
and
popf
mov
cmp
cdq
add
pop
inc
jg
cmps
dec
sub
push
add
sbb
jmp
or
sbb
add
movs
sbb
fisttp
inc
sub
dec
and
add
add
dec
or
push
lea
push
inc
xor
out
mov
add
test
jne
dec
call
mov
or
imul
mov
in
or
loopne
aad
test
inc
or
pop
mov
call
in
(bad)
cmp
sbb
pop
adc
xor
ret
shl
cmp
test
sar
mov
or
sub
add
sbb
adc
pextrw
ror
adc
mov
push
push
mov
adc
adc
mov
mov
cwde
push
push
push
pop
fnsave
xor
je
test
jg
add
and
pop
mov
popa
or
je
or
mov
adc
mov
xor
dec
pushf
fist
jb
push
bound
jecxz
dec
inc
(bad)
add
pop
mov
jge
repnz
fwait
xor
mov
pop
leave
xlat
or
xchg
imul
push
sub
les
pop
jp
adc
xchg
xor
sbb
jge
dec
and
int3
int3
das
test
pop
sub
fild
shl
aam
je
sub
xchg
outs
or
stos
jmp
sbb
jp
dec
cmp
(bad)
je
cdq
mov
jmpw
(bad)
aaa
dec
and
daa
add
sbb
xor
jle
push
and
xchg
push
aam
add
bound
rol
adc
rol
inc
or
pop
dec
add
push
sub
out
aaa
fmul
test
or
jae
cli
sub
jge
sub
je
sbb
pop
sub
adc
mov
push
push
rol
mov
add
inc
cmc
addr16
movs
adc
call
fimul
push
call
mov
(bad)
xorps
cmps
(bad)
cmp
push
mov
adc
ja
cmp
push
or
dec
mov
inc
outs
into
out
mov
syscall
shr
pop
loope
popa
cmp
push
je
mov
inc
aad
or
push
sub
mov
pop
push
cld
and
pop
mov
adc
cmps
xor
mov
mov
mov
xor
pusha
mov
jne
stc
sbb
pop
mov
push
and
push
mov
pop
mov
cmp
mov
je
add
and
cmp
add
fcom
mov
jnp
push
sti
fld
fxam
xor
lods
dec
inc
add
into
xor
push
pop
cld
test
add
xor
dec
sub
mov
jmp
push
adc
js
cmps
jg
push
nop
shr
int3
push
add
inc
cmc
push
fistp
or
dec
push
mov
add
pop
ror
and
das
cmp
pop
int3
or
cmp
sub
int3
xor
das
lods
das
or
pop
pop
jp
mov
mov
and
inc
pusha
mov
mov
mov
inc
aas
and
inc
jns
inc
dec
push
lea
lahf
pop
loopne
inc
les
push
lea
push
lea
(bad)
inc
pop
pop
pop
ret
push
lea
ffreep
pop
lock
(bad)
push
add
mov
mov
mov
mov
mov
mov
mov
inc
add
jmp
js
rcr
push
ins
cdq
dec
sub
or
pop
pushf
mov
mov
faddp
and
je
inc
js
adc
push
adc
(bad)
in
stos
js
out
mov
jge
jmp
cmp
xor
sub
nop
cmp
xor
mov
adc
ret
jge
dec
push
loope
fmul
sub
aaa
retf
add
popa
inc
(bad)
out
fmul
clc
add
add
push
call
test
shr
and
push
push
inc
xor
(bad)
and
jecxz
pop
mov
jnp
pop
adc
dec
js
out
mov
jae
scas
and
sahf
test
push
nop
or
daa
and
cmovl
adc
jns
bound
mov
adc
jo
add
dec
test
mov
inc
jmp
fild
je
lea
add
sub
push
sbb
add
fstp
mov
aaa
je
mov
out
or
add
ror
bound
sbb
aas
push
and
adc
in
xor
test
jne
clc
adc
mov
sbb
loopne
lahf
push
push
pushf
jmp
gs
inc
push
push
test
cmp
sub
lea
push
add
lock
pop
sub
adc
mul
push
ror
cmp
sub
push
xchg
xchg
mov
xchg
add
nop/reserved
jl
(bad)
sub
sub
out
ds
or
mov
das
comiss
xchg
aas
sub
lock
mov
push
add
add
(bad)
push
es
and
jl
ja
ins
mov
in
arpl
jle
push
hlt
fild
xchg
popf
inc
push
or
sbb
pop
ret
retf
adc
mov
ins
je
pop
sub
jp
dec
stos
and
div
adc
stos
mov
inc
mov
add
lock
mov
sbb
inc
mov
mul
xchg
jl
mov
pop
or
sbb
cmp
push
push
pop
add
inc
push
and
sub
push
or
ret
pusha
loope
pop
jmp
retf
fs
inc
jmp
sbb
push
icebp
mov
stos
add
aam
xor
inc
add
push
push
sub
and
push
adc
sub
stos
mov
xor
fcmovb
test
add
inc
int
inc
add
pop
mov
sub
add
jno
push
jge
mov
pop
arpl
add
mov
cmps
mov
push
mov
push
movs
xchg
add
and
xor
or
das
cmp
jae
not
cdq
dec
mov
push
add
dec
rcl
sbb
adc
fbld
mov
sar
test
lea
in
(bad)
pop
push
xor
xor
push
or
pop
popf
mov
in
fiadd
and
je
sub
mov
and
mov
cmp
mov
adc
sbb
pop
adc
pop
mov
iret
and
push
inc
or
inc
test
xchg
mov
push
or
jb
push
cmps
sub
sar
sar
mov
sub
inc
cmp
jbe
adc
adc
rol
inc
repnz
hlt
add
stos
mov
mov
lea
add
or
push
jg
add
imul
or
bnd
cmp
arpl
mov
cmp
jmp
fs
mov
pop
push
std
or
lea
xor
icebp
(bad)
daa
or
stos
add
mov
arpl
out
fdivr
lahf
arpl
or
lock
push
out
inc
movs
adc
push
ret
dec
dec
shl
sub
mul
adc
ret
adc
sar
inc
or
or
adc
loopne
imul
sbb
inc
and
add
pop
test
mov
push
xor
cmp
cmc
and
dec
and
jne
push
push
mov
pop
push
adc
sar
(bad)
stos
push
movzx
mov
and
and
jecxz
je
cmp
fs
std
add
inc
push
je
push
ja
or
ret
sub
std
ja
pusha
xchg
in
jmp
cmp
jne
cmp
or
retf
jmp
push
dec
popa
dec
sbb
stc
call
push
and
(bad)
xlat
rol
rol
mov
out
fs
shl
(bad)
sub
sar
adc
adc
lock
jecxz
add
stos
call
pop
out
inc
add
das
(bad)
movs
stos
cmp
sub
inc
xchg
add
xor
loop
dec
sub
out
cmc
(bad)
pusha
inc
jl
push
xchg
scas
push
in
mov
sub
cmps
shl
push
push
adc
cli
ds
cmp
fisttp
adc
hlt
pop
aam
push
dec
fisttp
repz
scas
add
push
inc
dec
sbb
sub
sbb
mov
push
push
push
push
push
jmp
(bad)
mov
fcom
adc
mov
push
dec
push
or
repnz
xor
adc
je
push
ds
pop
jmp
pop
sub
mov
add
sbb
lahf
jl
or
inc
xchg
dec
les
inc
(bad)
imul
adc
xchg
cmp
sbb
pop
add
scas
std
aam
and
xor
xor
fist
les
xor
mov
or
or
rcl
in
stc
xor
test
inc
pop
or
fcomp
rcr
dec
and
cmp
xor
or
pop
retf
xchg
pop
jbe
sub
and
cmp
jne
mov
dec
les
lock
push
mov
bound
sbb
push
and
sub
retfw
or
test
and
and
test
add
dec
inc
test
je
and
mov
cmc
nop
js
push
je
mov
and
adc
push
push
cli
mov
inc
cmp
push
inc
add
pop
loop
in
inc
sbb
add
je
aas
or
je
mov
lds
push
lods
jmp
push
(bad)
push
adc
sbb
movs
(bad)
jge
jb
xchg
push
push
or
pushf
and
push
test
and
pop
sbb
mov
and
push
sar
push
push
call
mov
push
push
push
call
aad
inc
imul
pop
es
js
inc
xor
pop
push
adc
add
sbb
fisttp
add
loopne
pop
ror
xor
pop
data16
xor
mov
and
mov
movs
xchg
xchg
outs
or
ins
lea
popa
js
stos
xor
je
dec
aaa
fldenv
lahf
sub
push
addr16
sbb
adc
push
add
fsub
in
dec
push
jge
scas
cmp
pop
adc
je
repnz
add
xor
jle
retf
scas
jl
mov
push
and
xchg
pusha
pop
dec
enter
push
mov
pop
fwait
ret
push
pop
ja
or
test
shr
jnp
add
nop
rcr
das
les
mov
test
adc
add
dec
adc
ss
stc
pop
pop
ret
ret
sbb
add
sbb
(bad)
or
xor
add
rol
bts
sub
test
push
sbb
pushf
pop
mov
jmp
cmp
adc
or
cld
dec
cmp
les
ret
mov
mov
or
inc
test
push
jo
mov
and
mov
fisttp
test
jne
loopne
cmovb
adc
clc
jne
mov
sbb
ret
pusha
pop
add
mov
inc
or
cmp
test
int3
pop
inc
fbstp
or
push
push
push
push
push
call
cmp
std
jne
xchg
sti
sbb
pusha
sub
adc
push
mov
sub
lea
push
test
and
sti
inc
xchg
sbb
push
push
push
push
xor
add
int3
sbb
push
mov
dec
lds
cmps
xchg
xchg
ja
push
sbb
test
jg
outs
pop
cmp
lds
sbb
pop
sbb
outs
adc
sbb
sbb
ss
or
add
outs
adc
cmp
scas
and
sbb
pop
inc
dec
inc
add
je
cld
arpl
and
cmp
push
pop
lods
pop
push
add
sbb
clc
sbb
ret
sbb
and
bound
frstor
adc
or
shl
xor
adc
xor
repnz
add
or
mov
test
je
stc
push
push
push
in
jl
sub
push
je
test
sub
push
push
and
sbb
mov
cmps
sub
and
sbb
add
and
int
dec
jg
inc
sub
test
pop
loopne
xchg
dec
imul
ret
movs
mov
inc
cmp
mov
ja
std
inc
inc
push
xor
cmp
or
test
inc
and
hlt
lock
and
pop
stos
and
test
jae
ss
lahf
retf
add
ret
adc
mov
call
inc
xchg
repz
xchg
das
fidiv
lea
out
push
sbb
adc
push
add
inc
cmc
test
test
cli
jnp
jo
or
jp
pop
pop
cwde
ret
adc
sbb
cmp
xor
test
push
jbe
sbb
mov
daa
inc
pop
sbb
dec
mov
mov
push
push
push
push
xor
push
ins
pusha
je
sbb
and
and
jb
enter
xchg
mov
dec
ror
or
femms
adc
test
cmp
jp
(bad)
cld
(bad)
jp
das
out
mov
jmp
push
or
push
xchg
add
or
aam
and
neg
pop
dec
sub
aad
addr16
and
mov
push
mov
mov
add
in
test
mov
sysret
inc
jno
std
mov
test
cdq
push
or
gs
(bad)
nop
arpl
pop
jo
dec
test
movzx
loopne
(bad)
jmp
xor
pop
and
jmp
cmp
and
add
cmp
add
sar
cmp
jne
adc
push
push
por
dec
adc
add
and
add
xlat
out
hlt
sbb
ret
test
mov
je
mov
cld
dec
and
mov
inc
arpl
mov
mov
fnstsw
rcr
adc
jne
call
dec
fst
and
int
(bad)
(bad)
mov
test
lea
lea
jne
mov
mov
dec
dec
dec
test
je
mov
not
inc
dec
mov
dec
dec
test
jle
lea
adc
inc
lock
jbe
(bad)
rcl
das
mov
leave
push
mov
test
jne
dec
sbb
call
in
clts
pop
xchg
ret
mov
mov
pusha
and
xor
mov
aas
xchg
lea
lea
push
das
retf
pop
xchg
xchg
adc
push
(bad)
push
push
push
xchg
adc
cmp
ror
jae
mov
in
add
shl
mov
test
jne
jne
ffree
push
scas
pop
inc
data16
(bad)
jg
lods
pop
cmp
je
inc
dec
mov
test
pop
adc
inc
push
dec
push
adc
push
dec
dec
test
je
(bad)
(bad)
jg
lods
or
add
mov
inc
jmp
mov
not
inc
dec
mov
dec
dec
out
(bad)
inc
mov
not
mov
dec
dec
dec
jne
jmp
gs
jno
mov
jne
cs
or
push
inc
jo
clc
(bad)
jle
inc
test
xchg
add
push
inc
push
stos
cld
rcl
pop
pop
mov
pop
mov
xlat
jge
ret
add
add
rol
ds
mov
loope
sbb
pop
les
je
xor
mov
mov
xor
mov
(bad)
bound
push
push
xchg
adc
leave
jge
idiv
mov
inc
sub
je
mov
sar
ja
icebp
inc
clc
add
out
xor
dec
js
push
dec
pop
add
xchg
mov
inc
dec
jns
pop
mov
and
les
iret
inc
aaa
out
popa
inc
inc
push
jge
adc
jecxz
test
add
pop
mov
cmp
jle
jb
or
(bad)
(bad)
mov
xor
test
jle
push
movzx
shl
or
inc
cmp
jl
mov
repnz
or
cwde
mov
jmp
mov
push
repz
lock
and
je
cmp
pop
(bad)
cmps
daa
fimul
inc
and
push
mov
ss
stos
push
int3
jp
or
sbb
clc
add
push
icebp
cmp
jge
mov
ret
lock
or
push
popf
mul
mov
aad
fsubr
push
inc
pop
inc
jmp
push
les
cmp
pop
lods
push
sbb
ret
mov
push
inc
je
or
adc
mov
stc
and
ret
or
or
sbb
test
mov
push
jne
push
sub
cld
pop
dec
ret
cmp
mov
cmp
mov
push
outs
(bad)
(bad)
jg
call
push
test
jle
mov
test
je
and
jmp
or
sbb
mov
rcr
jg
movzx
test
jne
test
je
inc
stos
mov
or
or
cmp
pop
sti
jmp
jmp
test
adc
or
sbb
sub
cmp
adc
mov
or
add
mov
sbb
push
inc
push
jmp
cli
push
(bad)
inc
retf
movs
add
test
pop
pop
jle
mov
mov
test
retf
call
jecxz
ret
mov
xor
inc
push
and
(bad)
mov
sbb
xor
cmp
movs
sbb
pop
mov
or
imul
in
mov
inc
(bad)
mov
push
inc
and
mov
movzx
mov
push
jb
stos
and
or
inc
or
mov
dec
cmp
mov
outs
add
or
mov
imul
jecxz
or
and
ds
sub
push
push
cmp
dec
les
xor
dec
xchg
cmp
enter
std
xchg
jg
inc
sahf
sbb
retf
loop
push
sub
aas
adc
and
and
icebp
jg
stos
push
rcl
adc
mov
je
pop
add
push
inc
dec
jl
cli
cs
or
pop
mov
pop
adc
jecxz
shl
add
jmp
add
call
mov
mov
shl
push
nop
jmp
dec
sar
sar
mov
not
jne
sbb
adc
div
jmp
push
and
mov
cmp
and
(bad)
jl
cmp
jne
adc
mov
cmp
and
das
xor
jmp
inc
adc
sbb
retf
push
bound
call
push
cmp
dec
jo
inc
push
inc
add
inc
mov
mov
sub
lea
add
add
mov
push
and
jecxz
add
mov
mov
repz
(bad)
mov
add
and
or
mov
cmp
jle
adc
fs
mov
mov
ds
push
add
pop
dec
mov
pop
inc
mov
mov
push
or
jg
adc
dec
test
push
je
mov
lea
cmp
jl
mov
fwait
mov
add
dec
add
dec
test
loop
pop
and
neg
aas
or
out
adc
lea
xchg
pop
or
push
clc
nop
add
jne
pop
and
scas
add
(bad)
aad
sahf
es
and
push
ss
icebp
pop
fwait
jb
adc
ins
add
mov
cmp
jne
jmp
mov
pop
cmp
cmps
push
mov
pop
mov
jae
ins
sub
pusha
pop
pop
mov
pop
cmp
ror
pop
pop
mov
push
mov
sub
cmp
xor
mov
sbb
fsubr
rcr
sub
or
lods
adc
sbb
rol
aaa
mov
dec
je
dec
mov
dec
test
mov
(bad)
or
pop
xchg
rcl
or
sub
and
mov
adc
mov
push
push
push
or
aas
inc
rol
push
cmp
adc
adc
jns
pop
push
xchg
je
dec
je
push
push
pop
shl
fst
xor
cmp
adc
leave
iret
or
jne
or
add
push
mov
test
push
push
test
scas
outs
bound
je
outs
xor
mov
call
stos
sub
mov
add
mov
(bad)
cld
pop
add
(bad)
mov
xor
xor
cmp
inc
or
add
xor
div
mov
loopne
mov
(bad)
cmp
and
mov
fs
jb
les
into
mov
cwde
mov
xor
cmp
out
popa
sub
cwde
add
cmp
fsub
lock
xor
sbb
out
inc
adc
sbb
test
sub
mov
push
push
mov
out
inc
inc
or
or
cmp
test
push
inc
sbb
or
daa
je
jmp
and
icebp
jmp
mov
outs
dec
add
mov
jl
sub
sbb
sti
cmp
or
xchg
adc
xchg
jne
mov
jae
or
sbb
xchg
sbb
push
and
add
jbe
mov
mov
or
mov
or
aaa
sbb
in
je
push
jp
push
push
xor
mov
mov
sbb
dec
mov
or
push
adc
imul
pop
jb
or
lock
dec
daa
sbb
xor
inc
cmp
push
pop
dec
sbb
xchg
mov
or
rcl
and
or
call
arpl
es
push
and
in
call
mov
push
aam
jl
imul
mov
xor
xchg
pop
dec
stos
pop
pop
ret
push
cmp
adc
add
xor
add
sbb
ins
push
mov
and
sbb
mov
or
stos
inc
call
cmp
bound
test
jmp
add
(bad)
int3
lds
sbb
cwde
adc
cmp
or
es
inc
enter
adc
sbb
adc
add
sbb
sbb
or
retf
jbe
aam
sub
mov
sbb
jno
sbb
add
sti
xor
inc
rcr
mov
int3
adc
ret
inc
xor
xor
push
test
jmp
setl
dec
and
add
mov
mov
cmp
jle
xchg
adc
mov
mov
push
je
sbb
push
ret
add
jecxz
adc
test
add
out
js
xchg
cmp
lds
add
push
std
jno
jne
push
mov
pop
test
mov
xor
std
xchg
ficom
jl
inc
fwait
jb
sub
inc
pusha
js
push
test
outs
or
aas
cmp
loopne
jmp
pop
sbb
int
dec
push
add
jae
add
jmp
mov
pop
mov
add
add
add
push
js
push
popa
into
movs
pop
mov
adc
js
ins
mov
adc
adc
sbb
sbb
add
xor
in
mov
xor
jmp
fdiv
inc
jb
jbe
out
pusha
push
je
mov
and
mov
sub
mov
jo
cmp
out
cmp
inc
or
lods
stos
dec
out
push
mov
and
je
jg
lock
inc
jle
jmp
mov
cmp
inc
iret
mov
pop
dec
cmp
or
and
sbb
jge
pop
jmp
in
sbb
xor
(bad)
(bad)
mov
xchg
push
push
test
push
add
je
add
cmp
and
xchg
inc
push
xchg
inc
dec
pop
sbb
adc
or
xchg
sub
inc
and
cwde
sub
add
js
adc
test
ret
xor
call
lahf
jne
mov
cmp
jne
cmp
jne
call
push
push
xchg
mov
xor
cmp
xor
dec
cli
and
sub
inc
xchg
pop
nop
or
ret
dec
shl
pop
sbb
mov
sub
jns
jge
add
add
jo
sti
test
movs
aas
lds
test
pop
cmp
push
lea
jmp
cmp
shl
cmp
cmp
test
xor
cmp
inc
dec
and
add
or
mov
and
in
jbe
test
call
cmp
sbb
test
adc
test
jb
mov
and
lods
sub
jo
sub
inc
and
push
cmp
mov
or
in
jmp
push
(bad)
cmps
xor
push
push
push
push
mov
shl
ffree
sbb
in
jmp
push
push
push
inc
adc
dec
js
xor
dec
je
icebp
outs
mov
xor
jmp
adc
push
push
call
dec
icebp
xchg
fisub
jmp
lds
dec
mov
jl
out
fadd
test
adc
mov
rcl
rol
add
popa
call
or
sbb
rep
adc
sahf
loop
out
adc
outs
xor
jmp
inc
and
je
rcr
shl
fstp
int3
jge
push
(bad)
pop
out
and
mov
and
and
jns
jnp
pop
les
xchg
iret
pusha
cmp
shl
push
push
mov
cmc
jo
test
jmp
(bad)
mov
xchg
call
push
ins
and
push
lea
lea
test
rcl
sbb
inc
(bad)
cld
lea
cmp
ja
call
lea
jle
mov
add
push
xor
adc
or
mov
add
xor
sbb
add
test
jle
mov
mov
and
cld
aaa
adc
sub
sbb
push
mov
or
push
and
rol
add
add
std
adc
xor
or
loopne
sub
push
ja
add
and
mov
inc
pop
out
in
adc
ret
cdq
pop
sbb
fcom
add
(bad)
ja
or
jne
push
pusha
mov
popa
in
scas
scas
xor
fdivr
adc
push
push
cmp
adc
inc
adc
and
xchg
inc
sbb
sub
fs
mov
push
ins
mov
xor
pop
cmp
out
sbb
or
test
jmp
jge
cmp
(bad)
and
push
adc
inc
in
adc
cdq
cli
jmp
rcl
and
jne
push
push
lea
adc
and
jmp
cwde
add
cmp
test
data16
push
cmp
and
mov
xor
lea
adc
xchg
mov
call
punpcklbw
inc
jmp
push
sub
push
xchg
xchg
xchg
pusha
(bad)
aad
push
pusha
xor
les
sub
lea
and
mov
clc
ja
sub
add
mov
lea
xchg
add
push
and
pop
xlat
add
add
fs
push
push
mov
mov
imul
adc
mov
pop
test
(bad)
lds
mov
cs
inc
and
push
je
je
out
jne
aaa
add
xor
mov
push
mov
bound
lds
out
add
push
adc
mov
pushf
bound
aas
into
daa
inc
push
cld
jg
cmp
jne
mov
mov
fadd
mov
stos
repz
and
dec
add
or
mov
(bad)
and
(bad)
bound
hlt
adc
sti
jmp
sbb
dec
push
loop
inc
shl
cmp
sbb
icebp
fwait
cmp
lea
cmp
sbb
fadd
pop
push
push
cwde
or
xchg
xor
dec
fcom
je
mov
(bad)
call
add
retf
and
cmp
jne
clc
sub
dec
mov
cs
adc
fist
inc
add
test
lods
mov
pop
inc
inc
aad
adc
or
enter
or
shl
sub
jg
jnp
lea
jnp
or
or
xor
inc
push
push
xchg
das
data16
in
jnp
xor
inc
sbb
test
bound
popa
ins
xor
adc
adc
ss
inc
sub
adc
cmp
mov
jno
push
ins
add
or
sbb
or
outs
loopne
add
xor
sbb
add
shl
sub
aas
test
push
push
mov
pop
add
add
cmp
push
push
push
sub
and
outs
push
or
das
adc
mov
add
call
mov
jo
adc
gs
inc
outs
sub
in
je
fbld
fisttp
test
cwde
pop
pop
push
jno
cmps
loopne
jnp
pop
sbb
push
xor
sub
test
mov
pusha
sbb
cmp
lods
int3
cmp
jmp
adc
add
add
(bad)
mov
jle
mov
cmp
je
test
dec
jl
push
push
lea
dec
hlt
mov
cli
out
out
inc
sub
jle
dec
test
mov
loopne
adc
jne
xor
or
ret
inc
push
in
inc
and
push
je
lock
jle
(bad)
and
or
adc
lahf
test
push
push
mov
in
xchg
icebp
mov
lds
push
adc
xor
sub
add
push
and
mov
aas
or
data16
aad
cmp
jg
inc
inc
and
mov
cwde
les
cli
fs
push
push
jbe
sbb
xor
aad
adc
and
fadd
into
push
add
test
push
cmp
inc
repnz
or
push
or
push
sbb
add
jecxz
sub
xchg
jmp
adc
cli
add
inc
mov
rcl
sbb
and
dec
pop
pop
add
push
shl
rol
stos
inc
and
ss
or
(bad)
pushf
mov
in
adc
fmul
test
fwait
adc
and
xchg
push
adc
jae
and
pop
jl
mov
jl
out
xchg
sbb
cmp
inc
sbb
outs
popf
mov
scas
jl
pop
cmp
cvttps2pi
out
loopne
and
pop
aad
mov
pop
test
and
lea
adc
add
push
push
add
popa
clc
int3
mov
pop
(bad)
cmp
fmul
outs
std
add
fadd
(bad)
or
push
or
std
(bad)
push
clc
mov
mov
cmp
je
test
je
mov
(bad)
mov
mov
mov
mov
mov
loope
mov
jo
and
aas
shl
push
push
call
sbb
(bad)
and
add
push
shr
add
and
or
push
sub
daa
loope
adc
jmp
aas
mov
int3
inc
mov
inc
push
jle
push
adc
add
repz
push
push
push
call
retf
fistp
push
mov
mov
mov
xchg
jl
out
push
push
call
mov
or
dec
inc
mov
pop
repz
stos
jle
adc
push
xcrypt-ctr
cmps
pop
mov
sbb
inc
pop
or
popf
rol
outs
aas
jno
cmp
mov
sub
or
sub
jo
add
aas
in
xor
inc
cld
mov
adc
mov
or
xor
mov
mov
xchg
cli
mov
mov
stos
pusha
sub
fwait
cmp
or
push
xlat
inc
push
movs
sbb
or
xor
push
je
dec
or
popaw
call
sbb
cld
and
rcr
or
mov
pusha
je
js
push
movups
into
dec
ss
sbb
retf
mov
push
xchg
jg
lods
and
sahf
ret
sbb
not
cmp
dec
or
cmp
leave
add
xchg
xlat
mov
pop
sti
cmp
xchg
cmp
shl
mov
int3
adc
retf
dec
pop
push
js
(bad)
retf
push
or
pop
pop
xor
xor
pop
pop
pop
xor
push
data16
pop
dec
add
das
dec
inc
cmp
(bad)
int3
adc
mov
dec
sub
(bad)
mov
push
lahf
test
add
push
add
inc
push
add
out
jle
adc
jne
mov
ins
pop
pop
test
or
out
xor
ds
sub
adc
in
push
dec
add
mov
rcr
mov
or
cmp
push
mov
and
mov
push
rol
xor
test
add
xor
mov
inc
adc
and
test
nop
call
fadd
push
call
mov
push
and
call
push
sar
mov
fimul
add
test
adc
cld
idiv
(bad)
push
call
test
sbb
cmc
pop
sbb
sub
jecxz
push
in
out
fisubr
push
call
loope
fld
fcomp
adc
sbb
and
push
sbb
jo
and
mov
jo
push
xchg
inc
push
inc
push
call
loope
stc
sub
adc
dec
imul
mov
inc
pop
mov
or
loope
cmp
bswap
imul
jo
adc
sub
cmp
fld
push
test
mov
add
xor
mov
sar
dec
pop
and
xchg
and
push
ret
fild
mov
test
inc
es
mov
lahf
pop
mov
jb
cs
call
push
fadd
jb
add
xor
push
and
ds
cmp
fs
push
push
sub
fs
sbb
loope
loope
or
cmp
inc
pop
add
cmp
ins
fimul
test
outs
add
inc
push
sbb
sahf
lds
adc
fiadd
clc
push
jmp
jmp
sub
sub
aad
adc
jo
rol
outs
mov
or
dec
or
adc
add
cmps
stos
inc
jmp
mov
and
dec
int
adc
adc
sub
in
call
test
xchg
mov
or
cmp
sub
mov
rcl
in
sbb
scas
jnp
and
dec
pusha
adc
nop
data16
dec
sbb
xchg
data16
cld
jno
add
and
out
cmp
in
inc
fadd
int3
inc
cli
ret
xor
push
mov
rol
enter
fld
lods
inc
call
xchg
icebp
or
movs
or
jns
sahf
xor
cmp
dec
dec
and
or
jge
and
and
cmp
push
push
push
cmp
scas
sbb
(bad)
push
sbb
or
call
add
adc
ret
stos
call
jmp
adc
test
fld
add
and
push
dec
(bad)
stc
push
and
pop
std
int3
add
ins
js
ret
mov
dec
mov
sbb
dec
inc
inc
lods
or
dec
(bad)
xor
xor
test
jle
cmp
fstp
ror
sbb
cmp
jb
cmp
add
jns
mov
loop
jne
out
test
push
push
aaa
cmp
dec
and
xchg
jge
add
and
cmp
in
fwait
in
addr16
fnstsw
xchg
int3
xchg
inc
fld
call
cmp
jb
cmp
pusha
and
(bad)
jae
and
push
jo
dec
fldenv
inc
aas
(bad)
add
push
(bad)
stc
cmp
test
mov
in
lds
add
and
dec
mov
fbld
push
xchg
xchg
sbb
stos
and
push
int3
mov
fs
lock
(bad)
pop
test
push
je
call
jmp
call
ret
data16
lods
adc
mov
inc
mov
pop
mov
out
leave
inc
fsubrp
call
inc
xchg
imul
pop
pop
xor
push
mov
cld
fild
cmp
mov
je
scas
or
xlat
pusha
mov
dec
and
mov
pop
inc
aaa
or
mov
nop
sti
enter
inc
push
ja
jae
movs
adc
or
inc
cs
add
in
sbb
or
cwde
xchg
vandps
add
mov
mov
jno
jmp
add
push
jne
mov
out
outs
loop
mov
add
add
inc
or
xor
mov
mov
fild
bt
push
(bad)
add
xchg
cs
xor
adc
xchg
sbb
inc
je
or
jmp
add
inc
adc
shl
adc
xor
xor
aas
inc
cmp
jg
xor
mov
add
je
popa
aad
xchg
inc
pop
(bad)
(bad)
xor
stos
pusha
dec
call
(bad)
push
je
push
(bad)
mov
xchg
nop
or
adc
fnstenv
mov
mov
addr16
cwde
mov
push
or
ror
and
adc
ins
adc
mov
pop
mov
adc
(bad)
cmp
(bad)
sahf
sbb
mov
adc
sbb
push
inc
xchg
test
je
rcl
mov
mov
push
mov
ds
sar
ss
adc
sbb
add
int3
adc
push
inc
pop
fadd
add
adc
and
mov
test
sbb
mov
pop
push
mov
add
shl
push
test
jne
sahf
ret
push
cmc
inc
push
sbb
add
jne
push
test
add
add
mov
test
je
mov
or
jg
mov
mov
push
ret
leave
test
jle
cmps
cmp
cmp
je
inc
add
cmp
jl
mov
pop
mov
push
xor
and
add
or
xchg
and
push
lahf
or
inc
sbb
je
mov
jg
or
cmp
push
add
cmp
jne
mov
je
add
bound
cmp
rol
or
in
ja
sbb
test
push
push
add
jg
int3
lea
push
push
push
call
js
dec
add
pop
mov
mov
cli
push
push
push
clc
sub
mov
or
(bad)
mov
inc
je
cmp
jne
test
cmp
imul
sbb
push
aas
or
sar
pop
aam
hlt
or
xchg
ror
or
dec
sbb
cmp
movs
pop
sbb
cmp
adc
push
mov
or
loope
loop
fbstp
mov
mov
xor
xchg
and
push
xchg
lds
inc
mov
je
add
mov
and
mov
mov
mov
sub
adc
jo
sbb
or
int3
popa
mov
pop
jnp
gs
fmul
cmp
jmp
out
adc
adc
push
push
clc
call
sbb
pop
jnp
idiv
add
and
inc
pusha
das
loopne
rol
or
sub
mov
das
sbb
scas
retf
pusha
loopne
mov
add
stos
dec
test
mov
sub
adc
xchg
sbb
add
or
push
loopne
or
add
and
leave
(bad)
iret
leave
add
mov
cmps
and
je
sub
push
push
clc
out
inc
test
adc
add
adc
je
cmp
cld
mov
push
push
push
mov
sub
fisttp
mov
adc
push
mov
pop
add
call
iret
jp
jecxz
jg
push
inc
ss
jl
mov
mov
je
push
sbb
dec
pop
ja
push
push
xor
inc
push
bound
mov
adc
mov
out
or
pop
pop
adc
in
mov
je
sbb
jno
or
or
add
adc
mov
jmp
pop
je
je
inc
aam
dec
push
ficomp
xor
mov
pusha
iret
pop
sbb
ss
in
xor
mov
add
in
jne
mov
pop
je
inc
pop
mov
cmp
jg
or
lock
pop
xor
sub
jne
mov
mov
jno
std
cmp
mov
mov
mov
(bad)
mov
ret
inc
dec
adc
cmp
(bad)
icebp
jle
pop
add
test
mov
push
dec
cmps
imul
(bad)
mov
ret
mov
or
xor
(bad)
sbb
pop
mov
or
mov
or
mov
sub
dec
xor
and
ss
ins
bound
adc
push
jne
adc
push
and
test
or
mov
push
adc
or
push
xchg
imul
inc
jge
mov
push
mov
enter
inc
xor
pop
(bad)
test
inc
and
push
push
fs
out
fisttp
push
fdivr
and
mov
cld
lods
push
push
push
and
push
jbe
(bad)
inc
repz
dec
jmp
inc
push
xor
rcr
inc
or
les
sti
cmp
stos
gs
cmp
push
push
(bad)
call
ds
push
stos
xor
pop
ret
mov
outs
and
inc
sub
mov
inc
add
ret
push
out
xor
or
inc
es
test
cs
rcl
jmp
push
push
mov
clc
mov
xor
ret
jg
ret
push
push
add
mov
inc
jmp
xchg
scas
push
cli
push
mov
xor
xor
test
xlat
dec
add
xor
push
add
inc
sub
ret
je
sub
stos
pop
adc
push
loopne
sbb
and
jg
pop
cmc
sbb
inc
cmp
push
jne
sbb
push
dec
mov
and
push
jmp
js
xor
rcr
(bad)
or
pop
and
(bad)
push
icebp
sbb
xor
lock
dec
and
mov
rcr
cmp
jne
push
dec
inc
dec
cwde
cmp
sahf
cmp
and
and
add
and
je
aas
movs
mov
mov
push
sbb
(bad)
or
push
push
adc
cmp
std
pop
aad
or
(bad)
icebp
sub
pushf
jge
jle
push
ins
jo
jl
inc
jb
js
sti
je
push
inc
es
mov
fld
push
cmp
sti
or
sbb
mov
xchg
cli
adc
cmp
push
push
mov
cmp
cmp
add
imul
sub
and
mov
jbe
mov
js
adc
mov
inc
cld
push
cmps
or
retf
xor
retf
mov
cli
sbb
add
lods
cmp
mov
(bad)
repz
mov
push
icebp
inc
or
int
or
test
xchg
add
inc
dec
lds
inc
sbb
push
cmp
loopne
push
xchg
sbb
mov
push
mov
mov
and
cs
xor
sbb
push
and
cmp
lock
cmp
sbb
push
daa
out
xor
inc
outs
and
sahf
jg
mov
popa
mov
clc
outs
adc
sub
push
push
or
cmp
call
sbb
sbb
inc
cmp
out
jl
and
cmp
cmps
sub
mov
arpl
out
mov
or
push
push
mov
or
push
push
shr
call
add
adc
add
xor
add
and
fdiv
add
daa
sub
pop
outs
jmp
mov
mov
inc
daa
add
and
(bad)
je
(bad)
adc
sbb
pop
push
icebp
jmp
adc
cmp
jne
push
(bad)
clc
ja
loopne
stos
xor
inc
jecxz
cmp
jne
push
xlat
icebp
pop
mov
and
(bad)
cmps
pop
pusha
mov
push
push
dec
sbb
jmp
inc
and
or
push
xor
add
push
cmp
adc
sar
mov
dec
adc
dec
sbb
inc
mov
mov
shr
push
mov
outs
mov
adc
inc
adc
test
mov
mov
(bad)
and
aad
out
cmp
push
sbb
cmp
scas
mov
mov
ja
jmp
popa
(bad)
(bad)
cmp
xor
mov
or
inc
movzx
shl
or
ja
int
mov
xchg
adc
and
shl
or
movzx
inc
daa
or
push
sbb
cmps
fist
push
pop
stos
lea
mov
mov
shr
test
jbe
imul
in
or
(bad)
cmc
in
imul
mov
add
inc
clc
mov
movzx
xor
mov
sahf
dec
add
lds
mov
ret
add
rol
(bad)
(bad)
inc
mov
inc
dec
jne
mov
xor
add
dec
je
dec
je
dec
jne
movzx
dec
shl
dec
and
or
movzx
or
add
mov
lea
adc
mov
je
dec
je
dec
je
pop
mov
pop
adc
add
test
sbb
inc
dec
je
dec
stc
or
sub
dec
sbb
sub
shr
and
test
je
mov
inc
pop
rol
out
jmp
sbb
or
movs
popa
ja
jae
or
add
(bad)
aas
sbb
sar
or
or
inc
mov
inc
cmp
jae
xor
mov
daa
jle
je
adc
mov
inc
inc
cmp
jb
sti
inc
movs
sbb
jle
int
test
or
lods
retf
inc
dec
icebp
pop
pop
pop
xor
(bad)
and
xchg
add
mov
or
leave
shl
mov
dec
pop
aaa
std
sbb
loope
push
mov
sbb
and
lahf
sub
in
fmul
add
and
shl
adc
ret
or
inc
movzx
shl
push
mov
call
mov
jge
adc
adc
dec
xor
sbb
mov
into
adc
and
scas
or
mov
shr
mov
or
mov
and
(bad)
push
inc
sbb
addr16
or
push
add
rcr
into
adc
pop
pop
mov
dec
ret
lock
cli
rol
xor
or
inc
std
(bad)
(bad)
(bad)
jg
xor
mov
mov
mov
mov
(bad)
adc
dec
pop
and
add
loop
je
cld
data16
add
xor
hlt
outs
mov
test
jne
mov
push
jg
test
call
push
or
gs
adc
mov
inc
or
push
push
pop
sub
aaa
cmp
gs
test
mov
fwait
mov
jne
adc
dec
inc
mov
inc
mov
mov
and
lods
cmp
dec
mov
push
lea
shl
les
mov
dec
inc
add
dec
mov
mov
inc
jmp
jo
or
dec
cs
lds
jmp
dec
inc
in
seto
jne
push
gs
xor
jmp
icebp
sbb
or
mov
add
mov
xor
mov
add
cmp
fdivr
pop
sub
or
mov
pop
and
jg
mov
jb
imul
xor
lock
sbb
pop
(bad)
int3
ror
aas
cmp
rcl
inc
or
jp
lea
mov
ror
adc
push
mov
aad
add
shr
(bad)
call
add
imul
sar
mov
shr
add
lea
push
hlt
(bad)
lea
push
sub
push
lea
adc
fcmovnu
add
dec
sbb
adc
mov
add
xchg
add
js
sti
xchg
mov
loop
pop
mov
test
mov
jne
mov
mov
mov
cmp
sbb
add
or
mov
lea
sub
push
add
adc
push
mov
loop
or
push
sbb
add
cmp
test
cld
sub
push
mov
sub
jns
aas
push
cmp
add
out
and
je
mov
(bad)
clc
cmp
in
push
in
adc
xor
inc
out
dec
xor
cwde
leave
jge
into
mov
and
jmp
push
xchg
adc
sbb
mov
cdq
add
nop
sub
aas
loope
mov
test
jne
test
je
or
and
xchg
xor
pop
aas
push
dec
dec
sbb
in
cmp
ret
push
jo
je
xor
test
cmp
jne
inc
mov
dec
mov
pop
push
push
je
mov
jbe
lods
pop
jg
jg
pop
movzx
inc
push
call
mov
fcomip
mov
std
lea
adc
pop
cmp
push
jne
call
jnp
fnsave
mov
mov
mov
dec
mov
dec
or
add
pop
das
cdq
(bad)
jg
das
movs
test
cmp
jne
cmp
jne
adc
jmp
adc
rcr
add
xchg
(bad)
jle
cmp
mov
sub
mov
sub
into
xor
add
scas
iret
idiv
(bad)
mov
jl
cmp
jg
add
jmp
cmp
push
test
out
jmp
cmp
inc
leave
jae
(bad)
(bad)
inc
loop
or
dec
inc
test
jg
mov
mov
sub
inc
test
jg
test
mov
cmc
or
inc
test
fs
push
jbe
add
adc
jl
sbb
shr
pop
adc
add
int3
jg
push
ja
or
fisttp
test
mov
xor
add
xor
add
adc
ret
sub
push
adc
and
sar
inc
sub
adc
adc
push
mov
clc
or
push
loope
je
pop
ret
enter
push
mov
jno
add
adc
add
dec
inc
mov
test
(bad)
cdq
aas
idiv
mov
test
fild
add
ror
je
shld
jge
movsx
xchg
or
push
shl
jo
pop
rcr
sub
mov
div
test
jne
imul
cmp
fdivr
outs
inc
and
mov
xchg
jmp
mov
test
pop
sub
sbb
es
jne
mov
je
mov
pop
inc
in
arpl
cmp
jle
sbb
mov
pop
js
dec
push
add
les
mov
nop
(bad)
std
(bad)
mov
mov
mov
cmp
jne
rcl
mov
mov
movups
test
fadd
push
jl
pop
pop
mov
pop
ds
sub
enter
sub
outs
cli
dec
or
adc
pop
xor
pop
ret
mov
xchg
hlt
adc
test
push
fadd
mov
call
sub
xor
or
sub
add
sub
inc
or
push
mov
mov
or
sub
iret
dec
or
clc
popa
xchg
fist
sbb
fstp
or
rcl
pop
pop
ret
ins
mov
sbb
push
cmp
and
mov
and
xchg
or
and
push
push
and
or
xor
int
dec
mov
test
jne
inc
cmp
jg
mov
inc
rcr
dec
or
sahf
loope
ret
pop
jl
inc
or
or
push
out
add
dec
sbb
sub
mov
mov
test
sbb
into
or
dec
or
cmp
push
push
push
push
lea
sbb
push
mov
mov
pusha
jne
retf
push
xor
jne
ret
push
or
mov
mov
ret
xor
add
add
cmp
jne
mov
lea
cmp
adc
shl
sub
mov
mov
sbb
std
mov
mov
push
sahf
mov
push
dec
xchg
or
pop
es
add
inc
rcl
push
jb
mov
sbb
gs
rol
adc
pop
cmc
or
add
dec
push
mov
push
push
mov
jmp
sbb
sti
or
xor
cmp
jne
mov
cmp
pop
sti
call
jp
stc
sub
stc
sub
jl
cmp
fwait
or
jg
xor
ret
jg
or
push
and
cmps
retf
cmp
cmp
mov
mov
pop
cmp
jl
ja
cmc
(bad)
or
inc
jl
or
mov
cmp
cs
cmp
(bad)
das
jle
or
std
mov
jl
cmp
adc
mov
inc
cmp
jge
cmp
je
loop
pop
jne
inc
xor
xchg
xchg
rcr
call
mov
jg
xor
pop
(bad)
jnp
xor
inc
mov
rcr
int3
in
jbe
jl
ret
jg
mov
mov
mov
cmp
add
inc
cmp
jl
push
adc
pop
pop
retf
ins
xchg
xchg
or
mov
jae
and
outs
add
or
mov
(bad)
cmp
(bad)
lahf
outs
push
cmp
jnp
jg
mov
sbb
jg
jl
(bad)
je
test
or
outs
push
or
not
aaa
push
xor
sub
fadd
xor
xor
sbb
cwde
int3
out
test
sub
in
jp
push
std
mov
push
xor
or
sbb
mov
nop
(bad)
jle
mov
xchg
mov
test
mov
mov
pop
pop
push
jo
bound
inc
in
fist
jne
sub
ins
mov
lahf
mov
add
add
lock
test
cmc
jmp
add
mov
pop
mov
icebp
dec
clc
jne
cmp
je
mov
push
mov
pop
addr16
lods
daa
adc
pop
mov
ja
add
je
jle
mov
and
jmp
ret
mov
dec
push
mov
test
and
sbb
test
inc
pop
mov
mov
inc
push
xor
xor
add
movs
xor
jo
xor
outs
rol
inc
adc
inc
inc
pop
ror
mov
movs
cmp
out
(bad)
push
and
and
xchg
int3
sbb
js
mov
lea
xchg
cli
xchg
sbb
sbb
and
mov
enter
push
or
(bad)
cmp
mov
and
add
jmp
adc
mov
mov
clc
jl
pushf
addr16
enter
je
mov
shl
mov
xor
and
pop
pop
clc
std
ja
adc
sub
and
shl
cmp
jle
mov
cmp
je
in
inc
cmp
jb
jle
out
sub
test
fist
data16
aad
xor
into
mov
lea
sbb
sbb
push
popf
mov
(bad)
adc
mov
jmp
cmp
sub
mov
jle
add
mov
aam
inc
push
dec
dec
and
add
mov
mov
mov
inc
xor
(bad)
inc
fstp
dec
mov
test
je
movzx
sub
(bad)
(bad)
stc
and
stc
jle
and
add
sar
inc
mov
and
mov
out
mov
and
mov
inc
cmp
jl
mov
jge
jne
add
nop
jecxz
sbb
cmp
jl
pop
dec
in
js
loop
pop
and
or
rol
adc
push
push
sbb
lock
dec
push
xor
test
ja
out
retf
cmc
xor
loop
inc
out
pop
pop
mov
pop
cmp
call
push
push
inc
sbb
fsub
call
aas
add
inc
lahf
push
sub
sbb
or
jmp
aaa
push
mov
and
ja
cwde
int3
mov
mov
mov
daa
aaa
or
(bad)
loop
mov
push
and
pop
dec
xor
loop
push
cld
push
jno
pop
lock
cld
mov
mov
xchg
stos
loop
repnz
add
add
or
mov
cld
inc
mov
adc
mov
pusha
loop
push
cmp
jg
mov
mov
clc
dec
shl
test
lea
mov
jae
adc
lods
bound
dec
adc
into
sbb
mov
inc
sub
dec
cmp
sahf
or
test
loop
adc
dec
add
cld
scas
mov
xor
fidiv
imul
jmp
test
jne
adc
call
jae
ret
add
fisttp
inc
sbb
icebp
or
dec
and
jb
mov
sar
and
mov
neg
cmp
jle
cmp
jge
cmp
inc
mov
or
pop
leave
add
fnsave
mov
idiv
cmps
mov
inc
lea
mov
daa
sub
icebp
or
imul
sar
add
pop
fstp
fmul
mov
jg
je
push
je
and
push
xchg
sbb
jmp
push
mov
(bad)
jmp
loope
and
movs
xor
adc
in
push
sub
sbb
mov
adc
scas
push
or
xor
cmp
or
adc
mov
lds
add
xor
idiv
ret
add
pop
dec
pop
inc
mov
inc
cdq
cmps
jmp
xor
sbb
mov
cwde
dec
pop
in
test
out
mov
pusha
je
inc
cmp
aad
cmps
gs
cmps
inc
call
dec
pop
add
ret
cmp
adc
loopne
pop
jl
push
cmp
jne
push
out
inc
mov
ret
sar
pop
cmp
aam
fbstp
mov
cmp
and
push
inc
cmp
jb
mov
cmp
mov
mov
pop
mov
add
out
pop
inc
fcomp
je
mov
add
test
jle
ja
in
sbb
jno
push
xor
push
ins
pop
rcr
mov
dec
inc
push
add
mov
out
push
inc
xchg
cld
and
out
clc
cmp
out
inc
je
cmp
je
into
out
rcl
mov
mov
jecxz
jg
jmp
lahf
fadd
jne
and
js
jne
mov
jp
xor
adc
neg
mov
mov
inc
cmp
or
pop
mov
dec
xor
pop
dec
ret
test
push
mov
lea
cmp
add
push
call
add
cmc
and
push
push
fwait
je
jl
mov
adc
ins
push
inc
adc
add
and
sub
pop
add
inc
jge
add
out
inc
and
je
sbb
je
cmp
je
ret
fdiv
dec
call
cmp
push
xor
push
je
mov
xor
call
inc
sub
sub
sub
mov
mov
sub
sub
xchg
stc
push
lock
xor
js
push
mov
push
jmp
adc
add
cmp
jb
inc
xor
ror
sub
adc
clc
inc
loope
aaa
loope
mov
clc
adc
rol
pop
sti
das
or
and
mov
add
cmp
test
mov
outs
or
and
add
jmp
mov
jle
mov
lea
pop
or
rcr
out
mov
xor
test
ja
ins
add
ins
and
jbe
or
push
inc
retf
sub
inc
int
adc
sub
sbb
jo
inc
inc
shl
sbb
js
clc
aaa
cmp
test
leave
add
ja
adc
je
inc
adc
sti
mov
and
push
mov
call
leave
rcl
mov
nop
inc
and
cmp
ja
ja
mov
or
ds
inc
mov
add
popa
test
and
push
js
fist
scas
xlat
cmp
jae
xor
lea
sub
cmp
jbe
push
inc
jne
pop
add
pop
and
inc
mov
ja
mov
jae
cmp
adc
mov
sub
pop
inc
push
sub
and
add
stos
sti
sub
jae
or
add
lock
mov
jb
jmp
or
or
out
getsec
push
mov
push
rol
dec
fs
mov
scas
mov
jg
push
je
lock
fst
mov
repz
ret
loope
test
movs
mov
or
cld
cmp
je
xchg
sub
push
adc
ins
test
dec
add
adc
xlat
inc
pop
add
push
mov
test
(bad)
es
fcmovbe
(bad)
xchg
rol
push
cli
cmp
fwait
sbb
and
inc
and
je
lea
nop
in
cmp
push
sub
fistp
jbe
sbb
and
push
sub
outs
jns
adc
sbb
pop
rcr
cdq
ror
fstp
aam
cmp
cs
push
mov
mov
xor
and
add
js
fst
and
push
je
xchg
cmp
je
xor
jb
aas
retf
mov
cmp
je
xchg
bound
sub
test
add
cmp
xor
mov
sbb
adc
(bad)
jp
test
sub
and
sub
sbb
cmp
mov
fsubrp
aaa
or
jmp
dec
add
adc
add
neg
push
je
pop
mov
pop
cmp
cmp
add
and
je
sub
(bad)
aas
fnstsw
mov
lea
dec
mov
shl
cmp
jbe
mov
into
push
mov
lea
mov
dec
lds
or
push
jmp
fcom
xlat
cs
cmp
add
jb
stos
sbb
push
xor
cmp
and
je
mov
or
je
sbb
push
inc
je
inc
out
aad
push
rol
add
aas
data16
inc
dec
push
and
push
push
icebp
cmp
xor
inc
nop
adc
inc
jo
pop
or
xor
std
and
call
mov
lea
inc
add
dec
push
cld
(bad)
cmp
jbe
movsx
(bad)
ret
xor
or
inc
mov
add
fiadd
je
scas
mov
stc
mov
push
sbb
xchg
cmp
lsl
sbb
in
sub
sar
test
mov
je
sbb
aam
sub
or
test
fadd
add
sbb
and
add
adc
or
dec
and
inc
or
cmc
aaa
pop
dec
jns
adc
jo
xlat
add
push
in
dec
pop
mov
inc
sbb
adc
sub
data16
add
dec
push
mov
gs
iret
push
inc
adc
dec
inc
mov
aam
mov
in
test
stos
scas
push
sbb
and
mov
mul
sub
aam
dec
pop
mov
cmp
cwde
lods
sub
xchg
and
movs
cwde
bound
das
push
int3
cld
loop
pop
ret
lea
push
sub
adc
dec
dec
dec
xor
and
lock
(bad)
cmp
je
push
fs
jg
inc
sbb
mov
mov
mov
inc
repnz
mov
mov
in
rol
mov
xor
sbb
mov
dec
jno
ss
enter
pop
xor
cmp
pop
mov
sub
fimul
test
jo
add
loop
call
or
inc
or
ja
or
mov
jbe
pusha
mov
in
cmc
adc
ins
jb
loopne
jo
cmp
ss
inc
jae
jae
xor
mov
dec
daa
leave
add
cmp
jbe
mov
adc
inc
push
add
xor
adc
ffree
in
add
sub
jb
mov
jmp
cmp
sbb
add
pusha
fsubr
or
jmp
and
pop
shr
dec
mov
mov
mov
fwait
jo
lea
add
mov
cmp
iret
jge
jne
push
test
mov
mov
sub
jbe
push
add
add
dec
jmp
add
je
addr16
test
jb
and
sbb
aam
out
and
je
je
sub
ja
cmp
movs
xchg
cs
adc
sbb
inc
and
rcl
jbe
jle
fst
sbb
push
mov
xchg
mov
push
adc
and
mov
push
dec
and
out
bound
pop
cmp
jbe
jg
dec
mov
(bad)
xor
jbe
sbb
ss
add
test
and
stos
cmp
fdiv
fdivr
fmul
shl
mov
jp
mov
or
fisttp
dec
add
fsub
xor
adc
cmp
jb
cld
ret
shl
lock
loopne
sbb
sbb
xchg
mov
imul
push
jb
dec
loopne
mov
jmp
jno
jg
dec
ins
mov
sbb
xor
push
cmp
mov
and
pop
adc
movs
or
adc
cwde
add
sbb
add
and
clc
jmp
push
js
lds
jecxz
rcr
nop
or
xor
cmp
jl
or
mov
lea
adc
adc
sti
test
adc
lds
fnsave
lds
leave
jb
sahf
cmp
jne
xor
jo
push
sbb
and
jno
push
test
cmp
xor
and
adc
aaa
jmp
sbb
mov
push
aas
int3
int3
mov
js
test
addr16
(bad)
popa
push
dec
jl
sub
or
icebp
je
and
cmp
jne
sbb
mov
mov
or
push
push
push
and
and
jmp
push
push
pop
add
xor
je
or
pop
jnp
or
imul
dec
adc
out
jnp
adc
adc
out
push
mov
(bad)
mov
sbb
push
jns
or
adc
adc
popa
sbb
test
adc
adc
(bad)
cmp
and
inc
je
push
in
push
push
push
xchg
sbb
adc
jae
adc
push
push
pop
xchg
or
adc
fwait
xchg
dec
push
jne
lds
mov
add
add
mul
inc
loope
pop
jne
ja
or
sbb
mov
adc
je
push
adc
pop
aad
and
xor
sahf
push
ret
xor
push
cmp
jb
jmp
aad
mov
or
mov
lds
adc
pop
cs
push
addr16
or
sub
mov
je
ja
fdiv
adc
add
(bad)
mov
jns
out
in
add
push
cs
scas
push
xchg
pop
adc
cmp
sbb
dec
dec
jnp
dec
inc
xor
mov
in
cmp
(bad)
shl
push
pop
(bad)
fldcw
add
ret
loopne
in
repz
inc
test
xor
not
das
xor
loop
rcr
push
movs
les
(bad)
aad
cmp
fwait
mov
je
je
scas
cmp
pop
call
mov
adc
mov
push
mov
dec
mov
pop
xor
loopne
cmp
and
jmp
jp
bound
push
sbb
test
xchg
sbb
nop
js
pop
cmc
push
jmp
bound
cmp
mov
mov
rcr
push
test
adc
call
das
gs
cmp
addr16
loope
aad
sub
jge
adc
daa
add
lds
sbb
je
pop
fst
adc
test
sub
test
mul
das
push
jge
retf
add
push
mov
or
addr16
pop
jbe
jae
mov
xor
pop
out
push
or
movs
ins
xchg
mov
ror
and
and
or
sbb
push
loop
cmp
pop
or
jb
or
jne
rol
test
push
ror
jmp
add
arpl
adc
je
adc
jb
xor
sub
and
push
ss
cwde
sbb
cmp
sbb
add
ret
or
xchg
or
mov
jmp
fld
xchg
mov
and
pop
mov
test
in
xor
and
sbb
push
xor
push
push
mov
adc
cld
lods
inc
push
adc
xor
or
enter
shr
sbb
jg
sub
mov
dec
add
test
xchg
jae
lock
adc
mov
adc
jo
fcom
icebp
mov
xchg
lds
xor
push
and
ja
cmp
in
push
adc
xor
test
add
and
inc
popf
or
fsub
inc
inc
add
pusha
adc
fsub
adc
cli
sub
mov
mov
and
adc
jb
mov
mov
xor
inc
sbb
inc
shr
sbb
and
mov
push
push
mov
add
xor
jge
stos
xor
ror
xor
sub
lea
jae
and
push
push
push
addr16
add
jne
inc
pop
jbe
jne
or
sub
cdq
adc
xchg
cwde
sbb
xchg
adc
icebp
adc
push
inc
push
out
dec
inc
(bad)
push
ror
and
push
push
aaa
cmp
xor
push
cmps
pop
or
adc
rol
push
push
jne
ds
and
add
add
jmp
sbb
out
add
scas
jne
push
test
call
jo
and
dec
mov
and
sub
lds
loope
jmp
mov
mov
(bad)
test
adc
and
pop
add
xor
inc
adc
add
add
add
sbb
adc
aaa
sbb
pop
pop
push
add
and
cdq
popf
mov
jge
mov
inc
inc
pop
jmp
add
add
ja
mov
inc
adc
mov
mov
leave
add
outs
push
push
sub
aas
mov
jo
mov
inc
rcr
xchg
adc
test
adc
add
add
jb
xor
out
inc
icebp
sbb
add
xor
fsubr
or
aaa
push
cmp
dec
or
lea
push
add
push
out
rcl
cld
or
jl
mov
jne
inc
cmc
or
pop
les
les
sub
push
je
push
aam
mov
lea
mov
mov
adc
push
sbb
mov
and
aaa
add
mov
sub
rcr
xlat
xor
add
ror
mov
mov
jmp
dec
and
cld
(bad)
adc
lahf
push
push
mov
push
push
push
call
pop
les
test
je
bound
jl
add
sbb
inc
mov
dec
cmps
enter
enter
(bad)
adc
sbb
adc
dec
mov
bound
mov
lahf
iret
xchg
sub
adc
inc
or
fisttp
add
add
pop
add
les
xor
push
dec
sub
repnz
pop
inc
sub
jecxz
sbb
pusha
pusha
(bad)
mov
adc
dec
mov
pop
add
hlt
test
xorps
adc
xor
dec
adc
ja
sbb
add
adc
mov
or
dec
and
sub
inc
mov
ret
jge
inc
push
mov
xor
xor
push
mov
sbb
jne
mov
cmp
sbb
jae
add
mov
out
int3
add
pusha
push
dec
or
push
outs
or
shl
add
in
mov
test
inc
sbb
in
mov
mov
mov
cdq
sbb
sub
and
call
jmp
adc
add
xor
dec
sbb
add
cwde
mov
rcl
sub
and
out
int3
mov
dec
lahf
scas
loopne
sbb
or
mov
and
inc
cwde
enter
and
sbb
inc
xor
aas
(bad)
paddb
push
mov
mov
push
pushf
(bad)
jne
push
push
add
add
push
push
xor
xor
imul
ret
push
push
push
adc
scas
or
hlt
or
pop
mov
rol
(bad)
xor
pop
gs
fadd
cmp
pop
push
daa
push
dec
jmp
cdq
rol
icebp
jp
push
and
rcr
add
pop
pop
jnp
sbb
cld
cs
clc
push
add
push
push
pop
jnp
mov
jne
pop
addr16
popa
or
into
push
je
sbb
mov
movs
sbb
test
push
add
add
mov
cld
rcl
into
cld
adc
mov
dec
shl
push
or
loopne
dec
push
repz
adc
sbb
cwde
ss
dec
and
or
push
ret
mov
push
(bad)
jne
push
and
push
test
es
iret
and
push
loopne
and
cmp
and
jb
mov
add
je
cmp
cmp
hlt
or
sbb
add
add
mov
push
mov
xor
pop
cmc
mov
dec
test
test
xor
push
lds
jo
or
add
cld
aaa
pop
sbb
div
push
push
jg
adc
or
pop
push
outs
xor
scas
jb
adc
mov
add
or
call
pop
push
pop
or
push
or
add
dec
jns
jbe
rcr
push
push
out
or
shr
or
adc
sahf
test
sbb
test
push
push
ret
or
jge
cdq
test
rcl
cmp
sub
(bad)
popa
cmp
fld
jp
inc
lds
scas
(bad)
pusha
ss
or
or
fild
sub
and
pop
push
or
ss
jg
adc
js
push
push
push
mov
xchg
mov
pop
xor
inc
cmc
add
add
cmp
jl
pop
inc
std
(bad)
mov
or
dec
cld
ror
add
loope
call
popa
shr
mov
je
sbb
inc
in
push
adc
and
sub
lahf
hlt
sbb
push
sub
aaa
fist
xor
or
jle
or
mov
sub
adc
inc
pop
adc
adc
lds
loope
sub
ret
add
fcomp
and
mov
or
push
movs
cld
addr16
adc
ja
test
adc
arpl
push
mov
xor
add
daa
sub
inc
jo
and
pusha
inc
add
outs
inc
ss
add
outs
mov
mov
pop
call
xchg
pop
out
xor
fdiv
aas
fistp
clc
dec
test
mov
jne
xor
jmp
imul
fisubr
xor
xchg
dec
into
jmp
push
sub
lea
adc
cmp
push
sub
add
push
xor
mov
(bad)
sbb
shl
mov
inc
fwait
fwait
pop
cmp
add
rcl
gs
dec
and
mov
push
and
je
sbb
adc
pop
mov
dec
and
ins
fadd
adc
xor
and
pop
pop
fsub
mov
jge
clc
and
sti
sub
add
mov
cmp
xchg
pop
lock
jae
pusha
dec
jmp
adc
inc
jge
test
jne
setle
jmp
push
or
sub
or
out
(bad)
fst
push
jl
mov
dec
and
push
push
push
add
stos
daa
test
add
cld
dec
push
cmp
cmp
jb
sub
xor
mov
setno
movs
and
nop
xor
in
cwde
mov
jno
mov
push
push
call
(bad)
and
cli
pop
add
lods
xor
cmp
je
push
scas
add
mov
push
adc
push
mov
loope
sub
mov
(bad)
cmp
add
popa
or
sbb
loopne
int3
mov
shl
mov
push
xor
test
test
or
push
or
push
pop
or
repnz
xor
pop
add
xor
push
sbb
ja
hlt
jb
ds
or
div
jne
or
cmp
jne
mov
pop
nop
add
xchg
pop
inc
pop
sbb
jo
inc
push
or
cmp
imul
call
and
push
mov
or
call
test
mov
test
je
cmp
pop
sub
loope
lods
pop
jbe
xor
in
je
mov
jmp
inc
ja
bound
imul
xchg
and
adc
jl
push
xor
sub
iret
sbb
setl
mov
into
std
out
adc
mov
cmp
or
cwde
add
xor
cmp
adc
lods
sbb
arpl
push
shl
cmp
inc
xor
scas
mov
inc
or
lock
pop
xchg
mov
jmp
xor
sbb
add
jp
and
out
aas
and
(bad)
and
jmp
xchg
or
(bad)
enter
loope
cmp
loop
fadd
lahf
ror
out
add
cs
inc
popa
sub
push
sub
lea
mov
push
push
jge
jl
adc
and
ficom
jbe
sbb
mov
dec
(bad)
mov
(bad)
out
jmp
ds
cmps
pop
fild
out
mov
sub
adc
add
push
leave
pop
dec
inc
mov
inc
cmp
jl
xlat
data16
add
(bad)
and
jge
mov
jmp
enter
push
push
mov
pop
xor
out
cmp
hlt
test
mov
es
xchg
mov
mov
dec
test
mov
add
cmp
jle
(bad)
cdq
dec
pop
push
fnstcw
dec
nop
inc
sbb
cmp
add
inc
mov
xchg
fcmovnb
lods
arpl
mov
ins
cld
add
mov
inc
sbb
and
adc
lock
(bad)
fidivr
mov
and
mov
sub
mov
(bad)
and
(bad)
or
adc
mov
xchg
xchg
ret
fild
sub
lock
and
and
cs
sub
push
test
jne
mov
inc
adc
add
sub
icebp
fistp
or
ss
pushf
and
add
lea
in
inc
or
sti
jne
inc
push
ds
test
cmp
mov
and
int3
lock
shl
mov
add
test
fbstp
dec
cmp
jge
xlat
test
adc
add
add
xor
mov
sbb
cmp
idiv
xor
or
adc
cmp
cld
sbb
and
push
push
ror
xor
and
add
cmp
je
adc
inc
and
jne
scas
pop
adc
push
adc
dec
ds
adc
js
xchg
xor
scas
xor
push
add
cmp
cwde
and
xchg
and
push
adc
pshufw
dec
sub
cmp
jl
inc
in
jl
outs
cli
sbb
mov
dec
aas
inc
and
subps
dec
ror
lea
xor
mov
adc
retf
add
sub
test
inc
jne
pusha
push
add
sbb
test
test
sbb
call
xchg
movs
(bad)
mov
xchg
add
js
out
mov
mov
arpl
or
sbb
cld
pop
cmc
aaa
add
sub
push
inc
push
inc
in
add
jg
enter
mov
push
push
push
push
call
out
je
cmp
or
add
xor
shl
pusha
push
inc
cdq
push
call
fimul
je
es
dec
add
dec
sbb
aas
adc
push
pop
rcr
jne
or
adc
inc
stos
popa
ror
lock
pop
xor
mov
sbb
fs
push
pop
iret
popf
adc
aam
xchg
je
inc
lds
adc
sbb
pop
push
push
push
push
push
call
mov
add
sbb
sbb
mov
push
push
push
and
push
add
int3
in
call
ins
cmp
or
cmp
sbb
dec
add
mov
sbb
repz
inc
pop
aad
(bad)
sti
or
adc
sbb
mov
inc
push
or
add
and
adc
xor
in
push
or
xor
or
add
sbb
ss
and
stos
inc
mov
jne
and
into
xchg
ret
xor
and
cmp
lods
scas
add
and
sbb
adc
jl
push
jl
add
and
rcr
je
and
push
(bad)
sbb
in
add
or
xlat
cld
xchg
jns
sahf
mov
and
sub
cwde
popf
fstp
pop
ret
jae
sbb
test
push
push
add
out
push
dec
push
and
push
or
je
and
push
dec
lods
push
or
and
add
push
and
sub
push
xlat
popf
or
dec
cmp
mov
add
inc
and
push
scas
jae
ret
xor
push
mov
lock
or
dec
repz
ja
cmps
ja
push
push
daa
xlat
inc
xor
sti
and
push
push
jle
je
lock
add
in
sub
jbe
cs
or
sbb
sti
sbb
fadd
mov
add
int3
test
(bad)
das
out
dec
adc
push
push
out
sbb
sub
cmp
push
cmp
jne
push
mov
jo
jo
and
add
jno
add
call
test
or
add
jge
ror
test
mov
mov
push
aas
sub
mov
sub
je
jg
inc
and
lea
add
push
push
cdq
mul
pusha
outs
mov
nop
mov
xchg
cmp
sbb
dec
add
lea
push
push
dec
add
out
add
test
sbb
push
sbb
add
push
cmp
test
jo
push
fdivr
test
sbb
sbb
jnp
test
fidivr
mov
add
adc
test
rcr
adc
add
in
out
fsubrp
je
adc
adc
jmp
dec
and
je
adc
in
js
inc
fadd
adc
xor
out
inc
cmc
jbe
aad
mov
jmp
sbb
adc
ds
jl
jb
ins
and
or
je
leave
(bad)
jg
sbb
into
and
mov
mov
or
pushf
cmp
dec
and
sti
in
dec
inc
add
jmp
in
push
xor
jmp
aaa
mov
pushf
mov
push
pop
and
sbb
lds
xchg
in
lahf
cld
cmp
jb
ins
xor
pop
and
shr
dec
inc
nop
and
adc
test
aaa
mov
mov
(bad)
jmp
pop
daa
add
xor
and
mov
(bad)
pop
and
adc
stos
inc
push
push
add
push
push
lea
push
outs
adc
shl
adc
adc
sbb
and
sbb
ss
mov
cmp
mov
or
push
push
adc
mov
push
leave
pop
or
loope
pop
adc
pusha
sbb
lahf
inc
aam
sub
idiv
das
jmp
adc
in
enter
cmp
push
pop
rcr
int3
mov
sbb
and
ja
or
jl
push
cmp
mov
mov
adc
add
cs
and
lahf
sub
dec
cld
jg
test
je
mov
push
push
xor
pop
or
stos
and
inc
xchg
sti
outs
icebp
je
mov
push
push
push
call
push
lgs
and
push
push
mov
dec
icebp
repnz
adc
out
gs
cli
nop
loope
jle
jbe
rcr
sub
and
fdivr
adc
mov
push
push
jbe
dec
mov
or
ins
sub
pcmpeqb
push
sbb
jo
(bad)
(bad)
lods
mov
inc
and
jb
cmp
lahf
xor
nop
std
mov
fmul
mov
adc
and
lea
cmc
cmps
scas
xchg
jo
dec
adc
ret
fild
getsec
ins
sbb
jg
add
ret
fsub
xor
mov
xor
cmps
aaa
add
ss
sbb
jmp
and
in
sub
sub
outs
dec
and
or
outs
out
mov
sbb
loop
mov
cld
add
test
add
add
lds
(bad)
mov
mov
shr
shr
xor
shl
sbb
cmp
push
jnp
sbb
pop
or
adc
in
mov
dec
adc
repnz
adc
inc
push
shl
pop
in
shr
shr
xor
pop
adc
mov
or
es
mov
sbb
dec
sbb
and
add
pushf
mov
mov
mov
sbb
push
xor
push
jmp
jg
ret
add
loop
shr
xor
xor
xor
mov
pop
pop
mov
mov
sub
mov
push
xchg
inc
xchg
sub
loopne
and
stos
or
pop
or
mov
ficomp
push
inc
cmp
ss
adc
fadd
xor
xor
add
in
fild
lea
push
inc
or
jle
(bad)
(bad)
fbstp
mov
lea
mov
xor
xor
xor
mov
mov
xor
xor
fidivr
xchg
cmp
xor
pop
pushf
loop
mov
dec
scas
(bad)
call
cmp
push
push
jge
mov
mov
jmp
mov
inc
std
mov
inc
add
inc
or
daa
fst
mov
aaa
jle
push
das
or
sub
mov
mov
mov
xor
imul
sti
inc
cmp
jl
pop
cmp
jge
nop
sbb
sbb
dec
out
or
(bad)
out
mov
test
mov
pop
lea
xchg
add
pop
sbb
mov
pop
mov
mov
pop
inc
xchg
add
sbb
ret
push
push
loop
xlat
pop
aad
cmps
and
sti
je
mov
cmp
or
aas
cmp
or
pop
pop
mov
adc
out
or
mov
mov
adc
out
mov
mov
int3
cmp
(bad)
jmp
jmp
shr
dec
cmp
xor
jle
ret
xchg
cmc
sbb
test
jne
or
adc
xchg
cwde
fwait
mov
add
je
nop
mov
sub
mov
and
dec
or
inc
ret
(bad)
jmp
mov
sub
lea
mov
mov
shr
mov
xor
aaa
es
jnp
or
shr
adc
xor
pop
ffreep
pop
imul
or
pop
sbb
cmps
mov
mov
and
xchg
sbb
(bad)
rcr
adc
mov
rol
mov
mov
adc
jmp
lock
fimul
inc
mov
mov
shr
xchg
cmp
inc
pop
shl
shr
mov
xor
stos
inc
shl
retf
mov
mov
and
cmp
call
mov
mov
shl
shr
xor
xor
shl
fist
or
dec
xchg
into
mov
fdivr
mov
inc
add
jne
test
stos
sbb
test
inc
pop
jle
and
cld
sbb
or
adc
inc
adc
les
add
sub
stc
mov
mov
je
xor
div
xor
pop
pop
ret
mov
sub
shl
cmp
push
adc
jb
xadd
sbb
mov
dec
pop
mov
mov
shr
mov
or
jae
or
adc
adc
loop
sbb
shr
or
aas
(bad)
mov
loopne
test
push
or
mov
mov
mov
mov
adc
cmp
test
loop
and
or
ins
add
clc
fild
or
dec
mov
jns
sbb
mov
mov
shl
test
mov
jle
mov
lea
xor
push
punpckhbw
and
test
pop
loopne
cmp
push
inc
shl
xchg
je
inc
sub
dec
ss
and
adc
xchg
pop
les
dec
and
adc
push
sub
iret
sub
js
push
mov
out
pop
add
cmp
add
cmp
push
inc
cld
(bad)
lea
je
cmp
jge
mov
mov
std
push
scas
adc
shr
dec
jns
dec
sub
test
jge
pop
pop
neg
(bad)
xchg
cmc
ret
pop
xor
xlat
jg
push
push
enter
jg
movs
mov
xchg
add
enter
lahf
cli
jp
sub
xchg
or
add
loopne
cmp
jg
push
(bad)
or
inc
hlt
icebp
push
add
hlt
stos
pop
add
mov
pop
sub
push
push
jmp
dec
hlt
inc
cmp
pop
sub
ret
(bad)
jo
pop
mov
jmp
and
xchg
pop
jnp
cmp
or
push
sbb
dec
cli
and
inc
pop
dec
lock
or
inc
add
loop
fbld
je
add
ja
(bad)
jmp
sub
adc
jle
mov
pop
scas
outs
push
adc
retf
adc
add
out
mov
lock
add
mov
mov
jb
cmp
pop
push
pusha
call
cmp
xor
rol
add
(bad)
pop
outs
mov
lea
lea
cmp
sbb
outs
mov
mov
adc
fild
mov
pop
cld
mov
mov
jmp
hlt
xor
dec
xor
or
add
lea
mov
adc
mov
pop
xor
fnstsw
or
or
jo
sbb
cmp
jl
dec
adc
mov
add
cmp
adc
mov
int
and
pop
lea
and
xor
cmps
test
cdq
push
add
add
or
sbb
movs
jecxz
pop
lods
js
in
pop
xor
or
(bad)
cs
add
pop
push
movs
pop
adc
mov
push
push
push
bound
push
xor
cdq
sti
pop
sbb
cdq
and
mov
mov
das
enter
sbb
pop
adc
pop
xor
jae
lock
mov
rol
lds
push
jns
stos
call
push
xchg
add
sub
xchg
pop
(bad)
and
bound
iret
mov
push
je
jle
push
test
sbb
xor
lea
mov
test
jne
nop
test
adc
sub
test
test
add
call
inc
and
push
jae
(bad)
sub
ss
add
adc
ret
or
sub
inc
cmp
je
pop
jp
dec
ret
jge
mov
mov
mov
mov
and
ret
xchg
loop
je
push
je
mov
in
inc
inc
adc
inc
push
sbb
inc
popf
mov
add
pusha
fidiv
das
xchg
dec
mov
inc
popa
dec
pusha
movs
mov
push
mov
cmp
rcr
cmp
icebp
(bad)
and
mov
inc
mov
add
les
or
loop
xor
pop
leave
(bad)
ror
push
int
imul
fwait
dec
mov
mov
dec
mov
or
in
or
call
imul
in
fst
add
mov
adc
or
push
fdivr
xor
dec
test
mov
xor
push
mov
add
mov
push
sbb
or
mov
pop
push
mov
jmp
mov
out
xor
pop
or
sbb
sbb
mov
and
add
and
xor
add
xor
push
scas
or
inc
out
pop
jne
or
sahf
lock
imul
lds
and
sbb
cmp
add
add
add
add
adc
fdiv
pop
add
mov
dec
and
and
cs
xor
sbb
or
dec
add
push
dec
push
jmp
mov
cld
inc
adc
lea
or
daa
push
movs
dec
pop
cmp
add
pop
mov
mov
mov
mov
lea
jne
mov
(bad)
cld
in
mov
fild
adc
cmp
mov
or
jo
mov
std
push
loopne
inc
dec
sbb
ffree
and
ja
push
add
push
lock
jne
push
dec
loop
icebp
inc
and
clc
les
xor
adc
(bad)
or
fs
inc
dec
or
fwait
sub
nop
dec
push
and
push
sub
mov
pop
adc
cwde
dec
data16
in
adc
dec
mov
add
ror
mov
push
push
dec
xor
dec
push
out
adc
cwde
add
nop
lds
adc
and
cmp
or
add
pop
sahf
dec
or
inc
aas
xchg
dec
cmc
ret
cmp
push
fmul
int3
shr
mov
jae
fnstsw
mov
xchg
or
mov
mov
push
sub
mov
add
push
xor
inc
mov
jg
push
mov
div
rcl
shl
xchg
cmp
rol
pop
cmp
jae
mov
dec
jnp
mov
mov
and
mov
pusha
add
aad
jae
and
sub
push
test
int3
dec
and
pop
inc
inc
fsub
mov
push
cmp
mov
and
pusha
push
aad
rcl
dec
cmps
push
and
pop
jle
push
jmp
loopne
jp
add
push
xchg
pop
add
xchg
rcl
cli
test
sub
jbe
jns
push
or
shl
out
in
test
push
adc
je
sbb
addr16
sbb
out
push
push
adc
push
and
dec
or
pusha
and
mov
lock
mov
and
add
sub
add
loop
aas
sbb
dec
dec
cmp
aad
cmps
jmp
daa
push
push
mov
aas
or
adc
mov
push
pop
outs
adc
mov
iret
cdq
adc
fild
daa
push
dec
cmp
jnp
ficom
and
div
fidiv
pop
add
mov
je
push
lea
xchg
sbb
sub
sub
stos
loope
dec
push
adc
lds
add
mov
mov
icebp
cs
mov
push
rol
push
and
mov
pop
inc
and
push
call
or
scas
sar
enter
inc
adc
add
scas
inc
sbb
jge
add
test
mov
mov
(bad)
mov
add
std
fist
cmc
mov
inc
lea
jb
mov
jecxz
inc
scas
push
or
mov
mov
out
inc
cmp
add
stc
ud2
stc
inc
mov
lds
add
cld
aas
sub
loope
or
xor
mov
not
sub
add
jmp
push
js
inc
mov
jg
std
scas
mov
adc
or
cld
shl
add
(bad)
inc
or
fild
test
mov
jg
jmp
mov
dec
movzx
movzx
shl
inc
dec
call
mov
inc
ret
cld
inc
dec
jne
mov
xor
add
dec
je
dec
je
dec
jne
mov
dec
inc
fld
mov
enter
(bad)
clc
or
pop
pop
pop
rcr
mov
lea
test
jae
mov
dec
je
test
and
fnstsw
push
mov
or
sub
sbb
add
daa
loope
je
notrack
loope
je
and
gs
add
push
mov
push
fist
push
ins
or
fstp
or
inc
ret
xchg
sar
lds
add
mov
mov
and
ins
test
inc
jecxz
jb
(bad)
add
not
fisttp
adc
pop
xor
je
dec
mov
loopne
out
mov
dec
into
out
pusha
pop
nop
out
cmps
sti
cmp
dec
push
lods
or
call
hlt
into
mov
adc
dec
pop
ret
mov
mov
sbb
test
ret
cmp
add
jg
out
mov
mov
dec
add
stc
inc
xor
mov
sar
add
clc
push
jle
cmp
mov
sbb
add
sub
push
add
inc
mov
inc
dec
or
adc
or
aas
test
push
or
mov
mov
jp
data16
mov
inc
inc
mov
hlt
inc
ficomp
scas
jecxz
add
nop
mov
mov
call
inc
add
mov
mov
mov
(bad)
shl
cmp
mov
and
pop
cld
mov
lea
sbb
aaa
adc
loop
sub
cmp
push
je
jne
and
push
mov
pop
push
lea
jge
in
mov
fld
push
or
add
mov
or
sub
push
mov
push
and
push
loop
push
push
or
cld
lea
hlt
add
(bad)
fist
xor
popf
cmp
xlat
js
push
loopne
and
jge
in
shl
fdivr
les
jmp
int3
mov
test
dec
or
or
cmp
clc
add
sub
mov
sbb
or
add
mov
aad
or
movs
sub
push
adc
pop
(bad)
fiadd
add
add
push
test
or
or
jmp
loopne
(bad)
push
ret
push
xor
in
and
adc
add
rcl
sbb
sbb
jne
mov
pop
add
cmps
and
pop
loope
or
sub
mov
js
ss
inc
mov
arpl
cmp
add
add
or
pop
jnp
add
std
int3
int3
mov
std
add
push
jnp
add
sub
adc
or
or
jae
inc
je
or
or
or
adc
orps
aas
add
enter
inc
stc
test
mov
je
add
icebp
jg
call
cmp
jne
(bad)
(bad)
cmp
mov
inc
cmp
je
test
jne
push
mov
(bad)
mov
and
push
call
pop
fs
or
std
ret
int3
push
mov
or
pop
in
cmp
add
fiadd
or
fist
in
jne
adc
mov
pop
add
mov
jg
dec
adc
ja
cmp
mov
pop
and
jne
mov
sub
out
pop
jbe
xor
jmp
int3
mov
jmp
test
hlt
fistp
ret
je
mov
push
lock
or
jne
xchg
sub
xchg
push
or
out
mov
mov
jmp
push
mov
pop
add
inc
ror
mov
cmp
or
ja
sub
pop
test
jl
cmp
add
or
cmp
jne
sub
inc
hlt
dec
pushf
xchg
cmp
add
jbe
or
rol
push
dec
or
adc
lahf
dec
cmp
add
je
dec
jne
aaa
test
rcr
or
out
shl
pop
mov
mov
and
or
jl
add
fild
mov
pushf
jmp
cld
enter
jg
mov
sub
test
push
inc
add
add
or
int3
xchg
sub
sti
or
lods
pushf
pop
mov
mov
fs
mov
or
jg
add
add
shr
fadd
and
pop
pop
je
repz
int
aad
xor
pusha
inc
jb
jmp
or
aas
cmp
add
test
or
xor
fidivr
mov
push
icebp
inc
add
adc
mov
or
mov
push
inc
inc
leave
add
movs
mov
daa
imul
fadd
mov
push
adc
mov
in
das
mov
pop
jbe
mov
mov
mov
add
iret
or
pop
mov
push
das
call
(bad)
dec
sbb
inc
hlt
pusha
inc
xchg
es
inc
repz
push
add
jle
ja
or
jge
add
adc
inc
add
push
clc
pop
cwde
mov
lahf
dec
ret
mov
dec
ret
xor
icebp
test
or
mov
ror
or
or
out
add
int3
arpl
or
fmul
cmp
in
and
add
jg
push
sub
fiadd
das
dec
add
out
dec
jle
push
mov
mov
add
test
je
push
pop
fisttp
push
mov
(bad)
fsubr
loope
or
ja
sbb
lock
pop
cmp
pushf
mov
xchg
and
pop
pop
or
sbb
push
test
ds
adc
push
push
and
mov
sbb
cmp
adc
mov
push
fldcw
adc
add
je
aam
mov
xchg
sbb
inc
out
fmul
add
push
mov
or
push
mov
ret
xchg
ds
cdq
stos
cmp
mov
add
out
(bad)
loopne
neg
mov
inc
mov
mov
mov
hlt
fisttp
xchg
inc
push
pusha
mov
aam
imul
cmp
mov
iret
rcl
clc
inc
nop
or
mov
mov
add
mov
jg
push
push
mov
test
jne
push
push
adc
inc
es
call
leave
je
mov
mov
(bad)
jmp
mov
mov
or
mov
aas
ja
inc
sub
push
push
jmp
mov
mov
adc
jne
test
jne
push
cs
je
or
(bad)
add
into
cmp
ds
test
xchg
xor
(bad)
mov
add
jnp
push
push
xchg
push
sub
je
cmp
sbb
push
mov
jmp
aas
mov
lahf
jecxz
or
adc
shr
sub
add
test
sub
enter
xchg
jmp
mov
in
adc
or
sar
push
xchg
in
pop
movs
jmp
push
add
dec
mov
mov
push
push
sbb
add
ja
mov
xchg
xor
ja
sub
inc
mov
adc
adc
push
cmp
aad
ja
ja
push
test
cdq
je
dec
add
sub
inc
cwde
fwait
inc
cli
and
rsm
or
pop
leave
adc
jmp
push
push
lea
cmc
inc
jmp
les
sbb
ds
or
push
(bad)
loopne
test
push
inc
jle
cmp
jl
pusha
push
pop
pop
arpl
and
data16
je
int
sbb
xor
arpl
mov
(bad)
(bad)
xor
ret
icebp
call
movs
clc
in
ret
mov
cs
sbb
inc
mov
ret
je
shl
lock
test
pop
mov
scas
mov
je
mov
push
or
and
movs
jmp
cmp
sti
mov
push
xchg
test
mov
test
inc
add
inc
add
jnp
or
in
xor
mov
loopne
lds
jl
aaa
add
push
jno
shr
pop
in
idiv
je
into
push
in
nop
push
retf
mov
xor
mov
cmp
popf
in
inc
shl
or
dec
les
inc
pop
jae
pop
ret
push
outs
jmp
aas
push
cmp
mov
push
les
push
movs
jmp
or
inc
and
push
jmp
shl
adc
loop
add
loop
adc
mov
aam
test
fldcw
ss
sbb
push
sbb
xor
dec
dec
pop
and
ds
push
dec
adc
pop
sahf
and
lock
cmp
cmc
push
lea
ret
add
and
int3
sbb
jl
pop
pop
and
fist
lods
xor
push
xchg
stos
and
add
inc
es
xor
cmp
push
and
(bad)
mov
adc
lods
add
and
push
ins
dec
inc
stos
sbb
xor
neg
mov
mov
mov
push
sbb
ftst
xchg
ja
add
ror
je
dec
inc
pop
sahf
sub
inc
out
mov
pop
xor
call
and
push
ja
(bad)
jmp
mov
mov
add
(bad)
add
adc
out
or
or
mov
in
sti
jmp
std
mov
mov
test
je
pusha
stos
test
jmp
test
mov
leave
or
inc
push
not
test
add
xor
dec
add
pop
pop
inc
movs
sbb
jo
cmp
and
int3
cld
cmps
adc
mov
adc
leave
enter
push
into
sub
mov
outs
shr
push
retf
popa
cmp
sbb
mov
sub
jbe
sar
ffreep
mov
push
or
pop
mov
lea
push
push
push
push
adc
add
jnp
int3
bound
outs
push
push
ret
mov
ins
test
cmp
push
cli
fs
or
(bad)
pop
bound
jle
nop
sbb
mov
and
das
sbb
push
sti
or
out
in
fistp
or
cld
jmp
mov
stos
and
bound
test
cmp
mov
je
xchg
mov
and
push
dec
pushf
aad
adc
popf
jne
jo
sub
out
push
sbb
cmp
push
pusha
add
daa
jno
lock
jge
pop
push
inc
ret
xchg
pop
ret
call
dec
add
add
dec
and
dec
xchg
(bad)
pushf
adc
jecxz
push
test
add
adc
push
shl
enter
xor
fild
xchg
adc
cmps
rcl
or
pop
mov
fmul
push
imul
(bad)
rol
out
add
ja
adc
push
pop
popa
mov
das
scas
or
push
mov
cmp
cmps
and
dec
and
mov
icebp
daa
sub
push
push
push
cli
xchg
aas
cmp
pop
ret
int3
push
push
mov
pop
pop
rcl
fwait
xlat
jnp
mov
leave
pop
and
out
cli
inc
cld
jge
mov
bound
jg
mov
lmsw
adc
jne
in
mov
sub
sub
es
jl
fisubr
fisub
add
push
loope
adc
(bad)
jnp
ret
inc
inc
sbb
dec
and
push
sbb
ins
inc
add
push
or
push
test
das
test
jecxz
das
mov
xor
mov
adc
add
mov
sar
shl
push
and
(bad)
cmc
sbb
adc
or
adc
push
cmps
scas
pusha
add
pusha
push
rcr
aaa
cmp
sbb
test
mov
jne
and
les
mov
dec
and
mov
fidiv
jmp
mov
push
and
lock
scas
cld
adc
loope
sub
add
lods
push
jecxz
push
in
fmulp
jg
out
push
pop
mov
mov
das
or
lock
dec
jl
les
xchg
data16
add
aas
jp
lea
or
pop
adc
add
das
adc
out
jecxz
add
lea
add
cmp
cs
inc
jo
iret
xor
dec
jmp
push
xor
sar
lea
sub
adc
mov
sub
jg
dec
mov
push
mov
add
jbe
aam
sbb
(bad)
cmp
jle
aam
cmp
adc
(bad)
stos
add
cmp
inc
jp
push
fcomp
mov
aaa
or
aaa
adc
adc
or
jmp
sbb
mov
shl
ja
sbb
lea
cld
mov
fld
arpl
pop
or
cmp
or
(bad)
mov
xor
sbb
adc
or
cmc
xor
sub
data16
add
push
sbb
push
push
push
lea
dec
adc
mov
mov
inc
jmp
push
sbb
(bad)
int
bound
push
xchg
adc
inc
mov
or
pop
cmp
rcr
je
shr
adc
lock
mov
push
dec
add
cwde
add
push
or
mov
int3
jg
adc
pop
(bad)
cwde
adc
and
rcr
loope
out
stos
test
and
fistp
sub
cmp
cs
cmp
scas
je
mov
test
jl
pop
adc
test
je
mov
push
mov
xor
push
test
je
mov
push
lea
cmp
sub
add
je
cmp
je
adc
je
xchg
test
cmp
mov
ret
mov
mov
add
or
outs
mov
hlt
pop
ins
pop
jp
pop
jo
aas
(bad)
mov
fstp
repz
enter
add
das
into
mov
mov
fcom
mov
jne
push
retf
test
test
in
push
lea
sbb
mov
jae
add
xor
cmp
inc
xor
imul
inc
or
sub
rol
in
and
push
scas
push
push
inc
add
or
imul
test
and
inc
push
push
push
call
test
test
xor
jo
cmp
inc
je
outs
add
dec
mov
test
mov
mov
test
lea
sub
and
push
nop
and
jo
iret
cmp
xor
mov
and
push
cmp
je
inc
mov
or
cmp
push
enter
push
inc
(bad)
loopne
push
stos
dec
push
push
and
cli
bndstx
mov
fmul
out
and
and
pusha
sbb
and
sahf
and
adc
aas
push
pop
jnp
and
or
(bad)
sub
dec
or
test
mov
sub
inc
in
mov
call
lea
fs
sub
inc
sbb
std
xchg
adc
dec
sub
lea
adc
jg
jns
inc
mov
jae
inc
mov
pop
sub
pushf
or
mov
je
dec
add
hlt
sbb
cmps
or
scas
and
cmp
aaa
cwde
popa
mov
push
lea
(bad)
fs
lock
mov
or
pavgw
data16
loop
and
pop
es
call
imul
pop
adc
cmp
mov
cmp
jne
mov
or
pop
sbb
add
in
pop
mov
leave
je
cmp
dec
or
in
push
pop
pop
imul
stos
rol
loopne
and
je
and
or
jp
mov
dec
or
xor
test
add
push
jo
dec
push
cli
adc
fld
in
test
mov
je
in
sub
in
scas
add
inc
sahf
mov
jmp
dec
inc
and
test
data16
mov
push
je
in
loop
push
add
call
sbb
cmp
sbb
sbb
and
cmp
fcomp
aas
je
add
mov
mov
sub
pusha
mov
cmp
adc
out
cdq
add
push
adc
sbb
xchg
pop
jmp
sbb
push
ds
outs
ror
or
fs
loopne
outs
add
ret
and
dec
pop
rcr
popf
fs
push
in
sbb
or
ret
push
adc
inc
push
movs
(bad)
mov
stos
dec
push
sbb
push
cmp
cmps
push
pop
and
xchg
jo
lahf
push
inc
je
push
push
push
popa
ret
push
pop
jo
push
inc
pop
add
xchg
les
fnstcw
add
pop
or
mov
or
je
scas
sbb
je
loope
push
add
push
push
test
inc
jmp
jmp
lea
cli
scas
fadd
jne
cmp
dec
push
adc
mov
mov
mov
loopne
adc
add
out
push
xor
loope
rol
(bad)
or
rol
adc
in
jo
add
adc
lods
add
pop
or
test
and
ds
cmp
mov
ret
outs
add
pusha
and
and
cmps
push
jne
push
dec
mov
or
ins
jae
inc
mov
add
dec
sub
rol
mov
je
inc
xor
pop
inc
jnp
js
adc
push
hlt
pushf
jmp
pop
dec
xor
bound
pop
test
xor
mov
fidivr
dec
sbb
shl
adc
jne
pop
lds
and
stos
sbb
jbe
pop
and
inc
adc
push
jmp
in
jl
sub
popf
rcr
and
leave
lock
imul
cwde
add
push
ror
mov
sbb
dec
sub
sbb
test
jg
push
mov
or
push
lea
push
jmp
test
xchg
dec
leave
push
jne
inc
pusha
mov
cmp
je
add
test
xchg
aaa
xor
adc
push
push
inc
ja
adc
sub
pop
in
aaa
or
lods
ins
jbe
and
mul
cmp
push
sub
addr16
jecxz
sbb
mul
dec
mov
adc
cmovbe
test
jp
shl
push
push
push
or
dec
jmp
mov
or
mov
je
cli
add
push
in
ror
test
add
adc
push
inc
pop
dec
ficom
push
in
popa
iret
or
inc
and
(bad)
hlt
movs
mov
test
and
xor
push
fadd
sub
jnp
je
stos
push
sbb
aad
div
cmp
jmp
xor
lea
sar
adc
push
xor
popa
pusha
out
push
jne
pushf
jbe
jl
jne
jne
cmp
jne
push
jae
and
outs
mov
inc
push
gs
ficomp
lock
pop
mov
dec
add
leave
jle
mov
test
je
mov
aaa
sar
je
test
jne
ret
aas
cwde
cmp
call
xchg
cmp
je
pop
cmp
jne
push
inc
jb
jmp
push
out
adc
shl
std
pop
es
cmp
test
sbb
je
mov
inc
and
jl
in
enter
sahf
or
sbb
sub
push
and
pop
nop
ror
pop
mov
cmp
xchg
cwde
pushf
(bad)
test
call
les
push
rol
(bad)
mov
inc
daa
cmp
je
sub
arpl
push
inc
jnp
fwait
and
cmp
inc
and
adc
cmp
push
mov
jae
inc
(bad)
cmp
(bad)
dec
scas
jne
inc
pop
push
pop
call
addr16
stos
jne
lea
mov
push
sub
add
mov
mov
jl
lds
push
adc
sub
sbb
adc
je
and
dec
pop
add
dec
and
mov
and
push
out
adc
mov
mov
into
hlt
nop
sub
jne
cld
(bad)
jg
(bad)
jle
mov
add
inc
push
mov
dec
mov
push
mov
jp
out
sar
or
xor
repz
jbe
push
(bad)
cmp
test
retf
adc
dec
rcl
popa
mov
lea
lea
or
push
dec
lea
(bad)
cmp
je
call
xchg
add
push
push
pop
xchg
jae
jge
test
sti
jmp
jo
cmp
sti
shr
add
jno
hlt
mov
add
push
sbb
mov
lock
je
push
shl
add
add
xor
sbb
and
push
daa
xor
test
xchg
pop
pop
push
sbb
(bad)
add
sub
jb
mov
dec
push
jecxz
les
(bad)
fistp
and
mov
mov
and
and
mov
xor
xor
lds
je
add
mov
iret
cmp
sub
inc
mov
jne
inc
pop
push
and
(bad)
clc
or
dec
push
pop
cmc
xchg
inc
sbb
ror
fstp
sub
xchg
pop
add
fcom
mov
pop
mov
adc
push
cld
pop
and
cmp
iret
mov
aad
and
mov
je
xor
cwde
sbb
dec
inc
in
cmp
sub
scas
sub
xor
pop
cld
and
cmps
movs
test
and
jmp
call
popf
imul
cmp
ja
mov
mov
scas
mov
or
push
lea
out
sub
test
and
mul
push
or
push
lea
add
jle
mov
mov
or
cmps
adc
shr
sbb
aad
shl
in
push
mov
add
outs
aas
xor
rol
sub
push
and
imul
push
rcr
jb
ret
push
mov
mov
mov
adc
je
inc
and
cmp
cmp
addr16
inc
push
cmc
mov
add
dec
xchg
mov
data16
mov
in
mov
or
add
rcl
or
aam
sub
inc
jo
je
popa
and
fldenv
sub
xchg
cmc
test
inc
inc
mov
and
call
ror
cmp
lea
popa
mov
adc
jg
mov
xor
lock
aaa
push
pop
icebp
inc
pop
sub
adc
push
xor
mov
int3
pop
push
inc
sub
adc
or
dec
sbb
lods
adc
into
push
or
push
add
add
xor
mov
push
mov
aad
pop
sub
dec
je
mov
push
and
pop
inc
mov
popa
push
add
push
mov
push
jb
push
and
mov
and
mov
dec
mov
add
pop
mov
test
dec
dec
ss
aad
or
cmp
xor
fbld
adc
sysret
xor
ja
xchg
int3
inc
mov
push
sbb
and
xor
cmps
jb
pop
add
sub
and
cmps
popf
mov
call
inc
mov
xor
mov
xor
add
push
cmp
fwait
and
and
jb
inc
jmp
pop
pop
je
xchg
pop
movs
popf
and
mov
xor
and
pop
push
outs
mov
mov
inc
sti
sub
inc
add
shl
sbb
inc
push
push
cmc
adc
arpl
mov
sbb
lea
adc
mov
in
sbb
pop
adc
adc
and
adc
push
mov
mov
or
out
xlat
push
xchg
inc
mov
test
fdivr
jae
je
cmp
je
adc
ret
add
and
dec
sbb
test
push
adc
mov
add
sbb
or
push
or
popa
jmp
sbb
sub
pushf
mov
test
push
inc
jmp
and
stos
mov
push
mov
inc
push
mov
xor
ret
pop
scas
xor
cmp
mov
adc
cmp
add
not
pop
mov
push
push
arpl
inc
or
test
test
sub
inc
inc
sbb
popa
and
mov
arpl
int3
add
add
sbb
bt
pushf
adc
dec
je
and
add
or
adc
push
gs
xor
popa
push
cld
iret
call
mov
test
je
cmp
adc
push
xor
sbb
pop
cli
sub
dec
test
xor
adc
scas
mov
lahf
xor
pop
or
mov
mov
outs
je
push
push
push
xor
repz
push
dec
jno
je
test
cs
cmp
sbb
clc
pop
add
ret
push
or
or
cld
jmp
push
push
sbb
or
fwait
pop
sub
or
sbb
int3
xor
adc
or
arpl
and
test
inc
inc
mov
push
je
cmp
add
shl
aas
and
inc
outs
adc
mov
push
add
or
or
xchg
ficomp
mov
pop
loopne
hlt
push
lea
push
push
pop
(bad)
data16
xor
cmp
sub
mov
pusha
scas
xor
or
into
mov
and
pop
add
push
rcr
fldenv
pop
sbb
loopne
cmps
fisub
je
shl
fisub
cmp
mov
or
add
jne
push
(bad)
test
mov
push
mov
mov
inc
push
lahf
fild
rol
mov
adc
sub
and
scas
cmps
add
les
mov
nop
mov
adc
push
femms
and
jns
lea
(bad)
mov
mov
mov
call
and
js
cs
cmp
mov
or
dec
and
xchg
jo
sub
cmp
push
push
push
lods
inc
or
mov
cmps
inc
inc
call
push
jle
push
push
and
test
add
neg
dec
and
mov
push
mov
rcr
(bad)
shr
push
je
dec
and
inc
imul
and
push
push
js
pusha
mov
jg
push
sub
ror
dec
push
cmp
sbb
cli
je
push
push
push
or
cmp
rol
(bad)
push
xor
call
inc
jne
leave
mov
push
lea
in
cdq
pop
into
push
mov
dec
leave
psrad
mov
unpcklps
mov
push
rcl
pop
hlt
rcl
and
popa
sbb
push
pop
adc
mov
mov
inc
inc
arpl
fld
add
test
push
add
shr
sbb
ss
inc
inc
mov
add
sbb
xchg
lds
push
les
sbb
test
sahf
inc
call
push
push
push
cmp
xchg
je
cmp
mov
sub
and
jae
leave
pop
adc
push
cmp
dec
adc
adc
sbb
push
out
mov
sbb
jne
rol
push
in
ror
and
pushf
inc
inc
and
and
pop
sahf
aas
xchg
push
adc
sbb
push
aam
push
daa
mov
jmp
jo
in
push
stos
call
loope
in
and
icebp
xor
jne
push
xchg
ja
fldenv
nop
jmp
push
rdpmc
jne
fnstsw
pop
ins
or
je
sub
inc
adc
or
cmp
or
test
adc
mov
inc
mov
pop
test
mov
sub
(bad)
cli
mov
mov
call
jo
or
inc
call
dec
sbb
adc
add
sub
inc
inc
test
push
je
mov
cmc
pop
cmp
push
add
shl
outs
test
(bad)
sbb
cdq
cmp
nop
sbb
pop
pusha
push
mov
cmp
mov
push
mov
cmp
bound
loopne
jle
jne
cmp
fisubr
pop
pop
js
daa
add
and
xchg
xchg
fwait
inc
sbb
adc
adc
or
je
outs
mov
mov
jne
iret
arpl
mov
mov
mov
and
addr16
push
pop
scas
mov
(bad)
xchg
jle
(bad)
or
icebp
cmp
xor
sub
lea
rcr
jmp
inc
add
or
cmp
pop
repz
or
gs
inc
xor
and
mov
jmp
ja
adc
dec
push
jg
cmp
add
loopne
mov
sbb
lods
aad
jl
xor
data16
jae
lods
jo
xor
cmp
dec
or
cmp
cmp
push
push
test
jl
retf
test
adc
dec
ret
inc
xchg
jo
xor
sbb
xor
adc
push
and
lock
aas
cmp
call
loopne
cmp
ret
add
into
dec
pushf
add
mov
adc
inc
(bad)
mov
xchg
xchg
test
jne
sub
aad
or
push
mov
jne
rcl
dec
sbb
push
push
call
push
je
loopne
cdq
das
adc
(bad)
pop
icebp
push
ja
xchg
fcomp
push
dec
inc
cmp
push
in
mov
fcomp
and
shl
rcl
xor
push
sub
sti
mov
mov
and
add
or
and
xor
std
ret
jmp
cmp
jne
and
mov
cmp
mov
test
and
out
add
(bad)
sti
lock
lock
jo
push
adc
out
cmp
push
inc
mov
retf
or
ret
je
xor
aad
push
shl
cmp
ja
shl
push
pop
mov
cli
shl
call
adc
test
cmp
clc
jg
cli
icebp
shr
lea
mov
mov
test
daa
sub
mov
mov
jbe
(bad)
out
mov
dec
mov
rol
mul
lahf
mov
add
mov
inc
adc
(bad)
jb
adc
push
std
or
sbb
add
daa
sbb
or
test
lea
or
stos
sub
jge
mov
pusha
nop
ret
jnp
in
mov
(bad)
call
stc
test
je
mov
test
je
mov
test
je
mov
faddp
fild
jne
push
jmp
mov
ins
push
push
call
inc
dec
jmp
xchg
mov
dec
stos
dec
xor
jne
mov
cmp
push
clts
aad
xchg
xchg
and
mov
mov
add
out
sub
jb
ds
sub
hlt
cli
bound
and
aaa
add
ror
push
push
adc
in
and
sbb
sbb
(bad)
adc
lds
xchg
add
mov
js
jno
adc
std
sbb
or
push
stc
sbb
mov
push
push
push
lahf
jl
inc
xor
outs
pop
cmp
dec
out
(bad)
out
cld
mov
pop
mov
push
push
push
and
mov
and
mov
enter
icebp
or
mov
mov
shr
sbb
add
dec
cld
in
mov
arpl
fiadd
add
add
cmp
jb
int3
dec
and
jmp
out
dec
int3
add
xor
mov
pop
and
mov
push
push
push
inc
or
cmp
fisttp
xchg
push
popa
or
adc
push
or
dec
cld
push
bound
mov
push
shl
retf
stos
cwde
ss
dec
mov
ret
sub
test
push
push
popf
add
add
or
or
mov
jb
jge
sbb
inc
icebp
sbb
lods
retf
inc
mov
xor
mov
cmp
cmp
dec
cwde
test
jg
inc
add
out
dec
je
mov
mov
mov
jmp
dec
aad
mov
sbb
bextr
lods
and
xlat
es
fmul
cmp
cmp
js
or
push
cmc
scas
mov
ret
mov
fld
test
rcl
sar
mov
mov
and
retf
sbb
mov
hlt
call
add
dec
jne
pop
sub
mov
mov
stos
or
and
pop
mov
dec
mov
mov
call
adc
or
or
loopne
sbb
pop
and
adc
xor
adc
stos
xchg
dec
mov
mov
adc
inc
push
call
fcomp
rcr
ret
cmp
jne
pop
mov
mov
push
pop
add
inc
inc
xor
or
adc
jg
cmp
je
cmp
sub
push
sbb
jl
add
jg
or
sub
mov
mov
sub
mov
std
add
outs
dec
jne
test
repz
call
lea
push
lea
push
mov
mov
fisub
jmp
push
inc
sub
lea
push
xor
retf
add
imul
ins
stos
pop
push
aam
or
dec
stos
or
lods
cmp
push
and
push
xor
ins
and
inc
iret
add
mov
scas
pop
shl
cmp
fild
sub
adc
loopne
outs
mov
add
inc
inc
cdq
xlat
add
xor
xor
push
push
sbb
or
test
or
cmp
jne
mov
mov
mov
sub
jne
clc
pop
lds
mov
call
and
sahf
test
clc
dec
pop
fdivr
mov
sar
lds
mov
xchg
and
mov
lea
scas
bound
pop
dec
fwait
xor
adc
sub
repnz
push
mov
push
inc
sbb
js
adc
cmp
jne
leave
xchg
jno
push
aad
cmp
push
sub
push
es
cmp
adc
cmc
cmp
inc
jecxz
dec
or
iret
or
and
inc
cmp
add
(bad)
jmp
add
ret
jo
jmp
dec
cmp
mov
inc
inc
scas
adc
inc
js
push
add
push
push
xchg
retf
and
dec
or
and
push
and
push
ret
add
cmp
pop
dec
pop
sbb
dec
push
inc
adc
(bad)
push
add
mov
fadd
dec
push
cdq
add
add
and
call
add
add
je
mov
inc
cmp
jo
je
in
fcomp
dec
xchg
imul
popf
(bad)
fadd
scas
mov
or
int3
std
popa
mov
dec
xor
into
sbb
xor
adc
add
data16
add
ss
aas
pop
inc
pop
mov
sti
jle
push
push
xor
sbb
sbb
push
mov
inc
cmp
les
enter
enter
inc
retf
pop
inc
pusha
cmp
leave
enter
test
and
ret
jle
lds
adc
xor
cmp
push
push
mov
jbe
mov
add
mov
inc
out
dec
inc
xchg
push
push
shr
push
mov
xor
out
mov
add
push
or
lock
cmps
dec
das
rcl
cmc
or
das
xor
push
inc
cld
in
cmp
push
mov
xor
and
jo
sbb
and
fld
mov
pusha
and
and
push
sahf
mov
aaa
das
movs
jno
loopne
nop
pop
ins
ret
jle
mov
in
adc
popa
or
add
push
xchg
ins
pop
popa
mov
push
fs
fbld
sub
dec
outs
dec
addr16
or
gs
push
xchg
cmp
movs
push
outs
pop
inc
sar
call
or
push
pusha
and
repz
test
xlat
cmp
add
movs
arpl
fwait
mov
push
fadd
push
inc
(bad)
jo
cmps
dec
sbb
mov
cwde
push
sbb
lock
or
test
lds
scas
and
mov
xor
pop
adc
leave
cmp
adc
or
mov
cld
(bad)
sti
shr
mov
mov
adc
and
inc
arpl
jne
test
dec
mov
pop
aaa
imul
lds
mov
scas
sbb
shl
jne
sbb
and
cmp
adc
jne
es
inc
enter
adc
push
dec
and
push
or
popf
rcl
stos
shl
xchg
inc
inc
sbb
inc
cmp
dec
(bad)
popf
jae
icebp
and
and
rol
or
pop
pop
idiv
sbb
and
popa
pop
dec
sub
push
jp
test
push
inc
xchg
inc
xor
cmp
bound
xchg
pop
retf
dec
fist
and
leave
xor
popf
adc
mov
popa
scas
test
add
cdq
push
pop
jne
das
imul
out
fwait
pop
and
push
dec
mov
lock
inc
jge
adc
loopne
jge
pop
mov
je
dec
cmp
je
push
jle
shl
lea
push
xor
adc
mov
jmp
inc
loopne
int3
arpl
and
dec
add
leave
xchg
sbb
jo
mov
sti
lock
cmps
test
arpl
and
and
das
sub
sbb
lock
int
int3
pop
or
mov
xor
push
pop
out
pcmpeqb
mov
push
jle
rcr
pop
xor
es
shr
cs
inc
dec
mov
jl
sub
pop
loope
js
or
adc
xchg
inc
sbb
sub
pusha
fbld
mov
sbb
push
lods
pushf
xchg
xchg
jne
jne
aam
dec
and
jg
dec
cmps
sub
fs
and
nop
fs
mov
clc
js
push
inc
das
cmp
cmp
mov
cmp
pop
mov
jne
xor
xor
mov
jo
cmp
xor
js
inc
mov
hlt
push
mov
pop
rol
daa
js
mov
adc
imul
add
add
adc
sar
mov
adc
rcr
sbb
cwde
sbb
outs
xor
xchg
pop
pop
or
dec
stos
xor
add
dec
push
cmps
jo
(bad)
ds
rol
add
cmp
add
call
cmp
xchg
jmp
adc
ins
mov
pop
push
cwde
cmp
xchg
test
and
mov
inc
sbb
dec
fbstp
ret
out
inc
pop
pop
ins
gs
inc
loopne
mov
sar
ret
sbb
sahf
fs
ret
adc
push
loope
jae
lock
adc
fs
and
out
push
rol
push
push
jp
rcl
cld
dec
jl
or
shr
inc
mov
rcr
ins
sub
dec
inc
lods
jae
pop
stc
pop
js
lods
xor
mov
imul
fwait
and
lock
add
cmc
sbb
sub
ror
sbb
fs
sbb
out
loopne
(bad)
mov
sbb
mov
push
les
adc
add
movs
fs
xlat
adc
popa
push
and
jbe
xchg
xor
add
rol
add
and
retf
pushf
sub
pop
jl
xor
pop
es
loopne
ins
cwde
retf
push
jo
rol
call
into
out
or
je
push
jle
(bad)
inc
add
adc
shl
lea
dec
pop
add
loope
mov
mov
js
add
mov
mov
nop
dec
push
out
and
cmp
mov
mov
scas
pop
and
outs
or
clc
cli
push
add
outs
aaa
adc
(bad)
jle
dec
or
or
dec
add
inc
add
mov
dec
cs
test
or
clc
adc
cmp
pop
cwde
add
jl
pop
test
inc
add
and
sbb
pop
push
or
add
cmps
cmps
mov
jmp
jl
or
or
push
xor
mov
mov
mov
mov
scas
sbb
or
std
repz
mov
mov
dec
ins
loopne
push
inc
mov
shr
inc
retf
shl
fistp
pop
push
or
push
rol
gs
push
jg
add
lods
lahf
pop
add
push
cmp
mov
jne
int3
je
call
cli
mov
rol
pop
inc
mov
imul
stos
pop
push
push
lahf
mov
push
rcl
xor
pop
mov
inc
sbb
pop
test
cmp
or
(bad)
jne
ret
mov
jae
jo
cmp
add
mov
xor
xor
fidiv
(bad)
pushf
xchg
add
(bad)
in
xchg
add
cli
jg
xor
push
push
push
push
xchg
mov
div
add
fisttp
cmp
ret
add
aam
and
mov
mov
mov
xor
pop
sub
inc
inc
push
add
cwde
add
rcr
or
jo
ret
jns
ficom
rcr
call
addr16
xlat
add
aad
sbb
sbb
loope
jne
repnz
mov
add
mov
bswap
pop
lds
mov
pop
daa
jmp
aaa
jg
dec
mov
add
inc
or
pop
push
xor
test
int
clc
and
cld
mov
je
or
cmp
push
jne
inc
add
loop
and
jge
pop
inc
xor
cmp
pop
add
dec
push
shr
js
add
dec
pop
(bad)
cmp
mov
jne
das
sbb
mov
ins
push
xlat
mov
jnp
ret
ds
jmp
xor
(bad)
(bad)
inc
mov
cmp
je
cmp
jne
add
pop
or
sar
sbb
jmp
xchg
or
inc
dec
je
cmp
jne
test
or
leave
cli
mov
mov
fistp
push
mov
and
push
push
inc
cdq
gs
ret
mov
add
aaa
xor
in
pop
jnp
and
test
fwait
cmp
popa
xor
lock
int3
mov
mov
(bad)
sub
loopne
pop
xor
or
mov
push
cmp
sub
je
or
or
sub
je
mov
dec
mov
(bad)
(bad)
mov
ret
push
lock
add
add
mov
adc
test
mov
cmp
bound
mov
popw
dec
inc
(bad)
out
rcr
(bad)
popa
mov
int3
adc
sub
mov
pop
inc
daa
jnp
mov
je
mov
adc
mov
and
inc
dec
je
mov
mov
push
push
outs
add
sbb
push
push
dec
sub
out
add
add
inc
sahf
cmps
in
push
and
(bad)
pop
xchg
sahf
adc
pop
imul
adc
adc
call
bound
or
mov
frstor
sub
add
push
add
sbb
jg
add
or
icebp
cmp
je
jmp
loopne
adc
movzx
sbb
or
out
jge
test
jne
cmp
jne
or
adc
add
jmp
jg
lea
cmp
je
movzx
push
(bad)
inc
pop
and
dec
cmp
jne
mov
neg
pop
sbb
and
pop
adc
inc
cmp
je
mov
adc
stos
(bad)
icebp
push
dec
test
push
pxor
je
mov
jnp
arpl
inc
jbe
pusha
in
movs
clc
stos
and
pop
xchg
sbb
add
cwde
sbb
cmp
leave
jne
test
mov
mov
jle
call
inc
movzx
shr
mov
xor
mov
inc
and
cli
(bad)
jmp
inc
mov
inc
inc
dec
jne
call
mov
ret
mov
mov
sbb
adc
fwait
or
fwait
(bad)
lea
cmp
clc
sub
mov
sbb
jne
mov
mov
add
sbb
jno
icebp
aaa
les
dec
jge
push
push
mov
mov
aam
mov
iret
mov
inc
cmp
les
pop
inc
test
mov
rcr
or
retf
shr
popf
fisttp
and
jnp
jae
sbb
add
inc
cmp
jb
cmp
(bad)
(bad)
sti
cmp
add
jmp
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
and
(bad)
(bad)
jmp
cmp
jb
cmp
ja
add
mov
shl
or
push
test
ja
cdq
mov
sub
mov
lods
mov
adc
pop
pop
ret
dec
jo
mov
jo
in
sbb
and
retf
icebp
bound
div
push
dec
jnp
mov
sbb
xor
and
add
or
ret
jo
sub
inc
mov
sub
inc
push
test
scas
pushf
je
jne
mov
test
cmp
cs
xor
fwait
sbb
lds
adc
sbb
in
mov
sbb
popf
jecxz
adc
or
push
mov
sbb
clc
add
leave
adc
jp
pop
clc
add
fstp
sti
sar
inc
mov
or
cli
(bad)
or
leave
jl
cmp
fadd
cwde
sbb
aas
jmp
mov
mov
mov
mov
std
add
ret
push
in
cmp
add
xor
cmp
jg
mov
inc
(bad)
jmp
or
mov
sub
jmp
cmp
jb
cmp
ja
dec
ret
addr16
jmp
mov
sbb
mov
or
test
jne
or
sub
das
or
sbb
or
push
jg
ror
ins
and
add
mov
fwait
jp
add
or
leave
mov
je
fdivr
(bad)
dec
cmp
je
cmp
je
cmp
je
mov
inc
test
jne
jmp
aaa
sar
aas
je
mov
cmp
jne
mov
leave
mov
cld
sbb
jmp
push
push
push
pop
or
sbb
cmp
mov
cmp
jl
shr
aam
sub
pop
out
push
or
add
arpl
jmp
call
fdivr
dec
iret
sbb
add
shl
push
jne
mov
or
call
dec
mov
dec
je
dec
jne
cmp
jne
mov
nop
add
(bad)
add
adc
leave
ins
call
adc
fdivr
sbb
dec
cmp
jne
xor
xor
je
sbb
retf
sbb
popf
mov
dec
adc
mov
jne
test
cmp
jne
icebp
cwde
add
push
ins
and
jmp
push
jle
ins
jmp
push
push
jmp
dec
jmp
mov
jmp
cmp
ds
ins
(bad)
rcl
aad
xor
push
and
push
add
mov
sub
or
xlat
ret
jmp
sub
push
mov
js
popa
cdq
xor
sub
lds
inc
xor
lds
loop
ja
and
push
mov
inc
xchg
std
xor
ret
cmp
jne
or
(bad)
out
cli
cmp
jg
add
cmp
jne
push
push
lea
or
dec
and
add
inc
or
(bad)
push
lea
int
test
adc
sbb
ret
and
fs
sbb
orps
push
clc
jg
push
xor
push
push
push
hlt
sub
sub
dec
xor
out
ins
push
(bad)
jmp
(bad)
sbb
jne
cmp
xlat
jno
adc
fwait
ret
or
test
inc
jne
cmp
jle
sbb
add
cmp
je
cmp
je
cmc
outs
mov
mov
push
mov
adc
unpcklps
mov
test
or
mov
out
nop
sub
lea
jmp
inc
xchg
mov
mov
jg
pop
sbb
ret
mov
sub
lea
sub
mov
inc
cld
cmp
sbb
sub
and
mov
and
pop
cmp
push
or
mov
mov
rcr
add
push
pop
and
pop
dec
or
pop
add
inc
ins
push
and
pop
ret
cvtpi2ps
mov
sbb
into
or
adc
rcr
pop
je
mov
outs
fmul
xor
mov
(bad)
int3
cmp
sbb
push
xor
or
or
cld
imul
in
or
jmp
push
jno
xor
or
jmp
(bad)
fild
sub
das
push
or
jle
out
or
(bad)
and
push
mov
mov
test
je
sub
or
clc
push
push
dec
loop
mov
rcr
test
je
inc
lea
sbb
or
pop
cli
sti
mov
or
dec
cmp
jne
mov
add
mov
ror
adc
(bad)
aas
out
and
mov
outs
cmp
adc
add
dec
sbb
inc
je
js
lds
lds
je
pop
add
pop
cmp
xor
add
stc
xchg
add
inc
inc
or
sub
pop
or
push
in
loopne
ja
pusha
stc
sub
jmp
pop
inc
mov
pop
ret
xchg
paddd
xor
sbb
mov
mov
push
mov
loopne
ss
push
adc
jmp
pushf
and
push
push
aam
xchg
jle
inc
icebp
add
dec
clc
mov
outs
or
loop
push
or
cmp
push
je
and
lea
pop
cs
lea
lea
movs
add
xor
lock
pop
mov
push
lds
cmp
(bad)
or
loope
and
sbb
jp
nop
xlat
push
ret
inc
pop
jo
inc
rol
add
test
jle
jne
adc
lock
sbb
cmps
or
ficomp
ja
test
inc
test
adc
or
mov
fiadd
jae
(bad)
adc
sub
mov
scas
and
cmp
or
fsubr
add
call
out
push
xchg
pop
mov
shl
or
mov
into
test
aam
int3
add
int3
push
inc
in
outs
cmp
and
fsub
ret
xor
xchg
add
push
xor
or
jb
int3
push
test
test
je
adc
jns
xor
or
xchg
sbb
cmp
jge
mov
and
dec
mov
rol
or
mov
shr
clc
inc
cmp
jl
mov
call
pop
pop
movs
push
lds
outs
jb
sbb
or
mov
sar
add
cdq
or
dec
add
xor
fs
add
add
push
mov
rcl
cld
or
(bad)
jne
in
dec
stos
mov
adc
shr
rcr
int3
outs
(bad)
aaa
paddw
add
inc
inc
push
push
push
mov
icebp
arpl
adc
cmp
or
je
mov
cmp
mov
xor
mov
jmp
and
and
and
push
les
sbb
int3
out
stc
or
les
popa
in
shl
adc
or
fadd
fstp
dec
or
js
icebp
xlat
push
or
rcl
mov
jbe
push
xor
or
jl
fmul
push
adc
ins
sub
out
outs
pop
or
sbb
arpl
(bad)
bnd
fwait
das
cmp
movzx
inc
mov
dec
jmp
cmp
pop
inc
mul
adc
mov
or
or
out
sti
jmp
cmp
shl
or
mov
aas
mov
push
add
mov
mov
inc
xor
cmp
(bad)
movzx
or
cmp
sbb
sbb
sbb
xor
sub
mov
add
or
(bad)
push
fdivr
or
(bad)
out
mov
jle
pop
ret
pop
jo
fs
add
or
or
lds
pop
add
mov
xor
adc
adc
mov
sbb
mov
cmp
rol
fild
or
add
adc
shl
jo
in
dec
push
push
sub
pop
adc
or
add
jo
rcl
enter
inc
hlt
and
cmp
test
shr
aad
das
push
push
push
pusha
push
in
add
mov
sub
clc
jg
xor
mov
cmp
jle
mov
add
and
or
popa
rol
jle
cmp
je
push
push
or
call
jne
add
xchg
adc
pop
and
test
push
or
shl
and
idiv
adc
or
test
je
mov
mov
sti
test
je
and
mov
push
and
test
jne
xchg
pop
dec
push
or
ret
mov
sbb
or
inc
push
add
inc
adc
xor
cmp
push
jbe
adc
adc
jne
mov
cli
cmps
push
push
cmp
or
or
add
cmp
ja
jmp
sar
and
cmp
dec
add
outs
push
aaa
popf
icebp
(bad)
fisub
shr
mov
pusha
cmp
jle
push
cmp
adc
dec
inc
shr
lahf
hlt
iret
and
cli
push
push
adc
push
ret
ja
push
and
push
push
inc
add
(bad)
test
call
jns
dec
mov
mov
clc
add
cmp
mov
lock
shl
std
je
and
adc
icebp
jmp
cmp
jl
mov
sub
add
je
mov
dec
adc
std
mov
lods
jmp
cmp
jne
push
fcmovb
jge
je
push
cmp
xor
ficomp
mov
mov
push
mov
and
fdivr
out
push
push
sbb
movs
pop
jb
xchg
pop
push
push
mov
mov
out
lock
call
dec
imul
xchg
mov
test
mov
cli
je
mov
adc
push
aad
or
aaa
add
adc
stos
mov
add
lods
or
clc
mov
popa
jmp
test
je
mov
mov
mov
adc
hlt
mov
inc
sub
cmc
test
mov
xchg
add
add
scas
add
inc
mov
jmp
push
and
or
add
pop
adc
xor
jne
mov
dec
inc
adc
dec
fisub
mov
pop
add
cmp
jne
jmp
push
mov
jne
or
push
jmp
xor
(bad)
arpl
jmp
in
stos
test
lock
cwde
mov
lea
std
adc
ja
ret
adc
jmp
adc
or
cmp
sbb
sub
scas
stos
loope
imul
rol
dec
cmp
mov
out
nop
push
push
lods
inc
enter
lods
(bad)
cmp
pop
mov
test
sbb
lock
aam
out
push
jmp
ins
mov
sbb
nop
mov
stos
jb
sub
jmp
mov
adc
xor
in
pop
mov
push
jg
les
ret
test
mov
and
jmp
add
jmp
scas
mov
outs
in
dec
add
add
mov
cdq
push
fadd
inc
push
rol
pop
adc
adc
cwde
adc
or
add
inc
aad
and
xchg
lock
pop
cmps
inc
in
cli
xchg
pop
mov
call
sahf
add
ret
sbb
mov
mov
neg
sbb
inc
jne
and
sbb
sbb
dec
ret
mov
jne
dec
cmp
add
sbb
mov
cmp
add
shl
loopne
push
std
loopne
cmp
jle
(bad)
cmp
jle
add
test
add
dec
inc
pop
outs
nop
mov
jg
movs
cmp
adc
and
aaa
pop
pushf
gs
adc
lahf
stos
sub
shl
xor
call
sbb
pop
test
out
call
push
ins
loop
mov
je
dec
add
mov
shl
dec
adc
fisub
pop
push
jmp
xor
wbinvd
add
mov
jp
push
je
xchg
lahf
adc
jae
lds
lahf
and
fs
add
imul
mov
jg
je
loope
fdivr
jmp
mov
mov
pop
cmps
cmp
cmps
loop
add
mov
add
leave
dec
xor
std
dec
add
mov
sub
xor
ja
jb
jne
mov
mov
mov
mov
add
ror
daa
inc
cmp
jne
inc
cmp
mov
and
mov
retf
jmp
add
dec
sbb
pop
or
neg
pop
pop
mov
add
inc
pop
leave
fistp
push
xor
lock
leave
xor
mov
mov
cmp
fwait
loopne
imul
inc
loopne
sbb
or
or
xchg
cmp
syscall
rol
fld
pop
adc
jge
fmul
dec
push
pusha
add
daa
jg
stos
xor
popa
xor
inc
add
push
or
adc
xor
add
test
ja
xor
test
mov
outs
out
jmp
test
fcom
ins
sbb
push
loop
xor
sbb
dec
xchg
inc
pop
mov
xchg
cmp
fwait
mov
sbb
leave
je
lock
cwde
fmul
add
mov
jp
clc
scas
push
push
mov
lods
pushf
inc
adc
loopne
cwde
retf
or
mov
cld
cmp
jae
clc
add
test
mov
sti
es
jb
add
jbe
mov
and
push
(bad)
sti
leavew
ins
push
xchg
xor
adc
add
out
inc
stos
retf
sbb
pop
mov
sbb
and
push
inc
rcl
jb
sub
jo
cmp
lahf
xor
jb
pop
dec
inc
and
add
shl
mov
push
push
in
push
lods
pusha
scas
ret
mov
cmp
sbb
cmp
jge
push
clc
out
or
push
jmp
es
cmp
scas
mov
mov
and
or
or
inc
cwde
fsub
mov
jmp
adc
mov
jns
adc
inc
and
xchg
jne
sub
prefetcht1
rcr
inc
ja
pop
sub
push
fld
dec
mov
cmp
je
je
jecxz
inc
adc
pop
rol
cld
ja
ror
push
dec
add
push
mov
sbb
jmp
dec
(bad)
movs
sbb
add
and
es
lds
mov
xchg
ret
add
cmp
or
add
sbb
jne
cmp
shr
mov
jne
jo
test
cmp
adc
test
sub
push
push
test
jmp
dec
push
push
pop
into
inc
add
je
sub
adc
inc
rol
fwait
xor
mov
pop
add
pop
sbb
je
adc
stos
jb
add
fisttp
mov
jb
mov
inc
movs
add
push
out
sub
pop
lods
add
loope
xor
jmp
adc
add
retf
jne
mov
cmp
jne
dec
cdq
or
sbb
xchg
outs
loopne
mov
cmp
mov
and
fdivr
add
aas
je
inc
and
sbb
test
add
fadd
push
push
adc
and
out
push
jne
popf
adc
jg
js
mov
sbb
dec
sub
and
push
fdiv
adc
shl
mov
outs
and
test
out
ret
xchg
icebp
cmp
retf
mov
push
add
and
pop
and
dec
test
jle
fs
fisub
popf
mov
jne
scas
mov
rol
push
jg
cmp
and
sbb
push
adc
adc
mov
and
and
dec
test
hlt
in
pop
div
pop
xchg
xchg
add
es
pop
lock
cli
xchg
stos
dec
or
push
clc
cmovne
mov
xor
outs
add
lahf
xchg
inc
test
jne
xor
push
pushf
mov
sub
add
cdq
or
mov
jne
adc
test
(bad)
fld
in
mov
inc
cdq
and
ret
pop
test
aas
out
dec
mov
cmp
jne
popa
sahf
in
dec
sbb
pushf
imul
adc
adc
jne
rol
je
pop
jae
mov
(bad)
dec
or
sbb
push
ret
or
add
rcr
inc
pop
inc
add
xchg
fisttp
jne
xor
sub
mov
and
mov
imul
pop
mov
pop
ret
cmp
pusha
xor
clc
or
pop
xor
add
outs
sub
add
mov
jmp
push
add
aam
jg
icebp
push
adc
into
call
push
mov
or
pop
into
call
repz
out
and
sbb
or
loope
push
mov
in
test
dec
or
inc
bound
push
outs
and
sub
test
jl
push
mov
pushf
sub
lods
jae
ret
pushf
or
or
add
jg
mov
and
cmp
jle
fisttp
test
jl
push
push
mov
popf
pop
mov
and
fadd
jbe
(bad)
mov
dec
test
je
lea
lods
je
push
stos
jmp
adc
push
dec
int3
std
xlat
lds
fmul
inc
cmp
jge
div
push
aaa
jl
push
or
mov
jl
sar
mov
pop
pop
pop
pop
ret
pop
xor
mov
out
pop
inc
add
sub
push
sub
(bad)
add
clc
jg
test
jge
mov
or
add
dec
add
es
jne
xor
push
lea
pop
out
jae
xchg
sahf
jo
mov
jmp
cmp
jl
test
je
lea
int3
in
fnstcw
out
and
adc
imul
or
js
test
test
ret
les
jp
cmp
test
je
push
push
push
mov
xor
arpl
cmp
mov
push
jb
or
sub
pop
inc
cmp
je
push
pop
je
xor
xchg
ja
(bad)
cmc
jge
fild
mov
(bad)
pop
mov
in
into
pop
sbb
sahf
and
add
push
je
inc
jo
not
fcomp
sub
pusha
or
jp
rol
push
pusha
push
pop
pop
mov
ret
push
xchg
push
xor
lock
adc
mov
popf
test
push
sbb
jmp
inc
push
mov
fwait
loopne
push
sbb
vpcmpeqb
mov
sbb
sub
lock
or
lods
sbb
ret
or
adc
inc
test
ret
mov
jg
test
push
lea
pop
pop
pop
pop
inc
cld
jecxz
ret
cmp
je
cmp
jne
dec
or
pop
pop
dec
or
mov
pop
or
xchg
add
push
jo
mov
jo
jmp
cmps
and
invd
popf
popa
nop
shl
int3
cmps
jg
jecxz
cmp
jl
push
mov
inc
mov
call
sbb
je
cmp
add
jmp
sub
cmps
cld
pop
dec
pop
arpl
push
push
sbb
ror
dec
int3
push
push
sbb
ds
adc
adc
icebp
fadd
push
div
add
push
mov
cdq
jmp
pop
jo
mov
fnsave
push
fsubp
and
push
adc
add
mov
adc
pop
pop
adc
dec
in
(bad)
adc
arpl
mov
outs
add
mov
lds
test
lods
jge
test
les
xchg
push
dec
jmp
int
dec
int3
inc
icebp
ret
push
adc
xchg
out
push
and
je
mov
test
je
mov
movzx
outs
and
call
jbe
inc
cld
(bad)
(bad)
cmp
fidiv
add
(bad)
jnp
jmp
sbb
pop
push
int3
rcr
sahf
call
pop
fcom
fcomp
dec
jne
sub
push
inc
push
push
jmp
push
push
icebp
push
ins
call
and
add
or
jl
inc
pop
xor
fwait
pop
pop
cmp
bound
or
bound
hlt
or
cmovl
inc
aam
dec
das
push
mov
test
push
mov
je
jge
or
mov
(bad)
(bad)
mov
cmp
je
lea
cmp
ja
inc
test
jge
push
dec
add
sub
fcomp
xchg
lods
loopne
cmp
test
nop
adc
add
icebp
add
ror
add
add
(bad)
(bad)
clc
adc
inc
movzx
jmp
out
(bad)
vpsubsb
adc
push
ret
adc
or
and
mov
mov
aad
inc
and
dec
jb
enter
sbb
push
adc
(bad)
mov
dec
xlat
std
xor
dec
add
mov
or
xor
add
push
int3
adc
add
sbb
ss
pop
adc
jle
cmp
test
jne
push
inc
inc
and
(bad)
sbb
push
lock
xor
ret
push
mov
sub
popa
and
out
inc
cmp
dec
mov
inc
pop
lea
mov
jmp
xor
add
add
or
mov
or
stos
neg
mov
add
xor
xchg
mov
mov
jne
popa
mov
adc
aas
cmp
sub
clc
mov
mov
xor
cmp
add
add
mov
jnp
dec
je
mov
or
(bad)
das
sub
test
ret
mov
xor
xchg
lods
outs
inc
mov
mov
inc
adc
pop
add
or
ja
sbb
or
repnz
jne
outs
adc
ja
xor
daa
inc
jmp
push
or
or
or
clc
mov
adc
dec
and
inc
push
cmp
sbb
call
add
inc
ja
sbb
in
or
(bad)
(bad)
(bad)
mov
cmp
je
inc
inc
cmp
jl
jmp
lea
mov
sub
add
sub
mov
mov
adc
icebp
jl
clc
push
push
ror
jbe
cld
addr16
inc
jmp
call
test
jne
test
inc
jge
adc
cmp
je
push
pop
dec
or
aad
sbb
hlt
stos
sub
dec
or
cmp
inc
fsub
push
ja
add
jnp
mov
cmp
cmp
inc
adc
add
mov
dec
lahf
sbb
(bad)
mov
ins
xor
fcom
or
hlt
push
lea
sbb
mov
inc
(bad)
aaa
in
cmp
je
mov
arpl
mov
adc
cs
jmp
lea
lea
inc
mov
out
aaa
dec
icebp
fisttp
mov
mov
mov
and
dec
pusha
xlat
mov
and
adc
ficom
cmp
adc
sti
(bad)
sbb
push
push
jmp
or
add
add
sub
xchg
mov
pusha
lods
mov
push
and
movs
xchg
jne
add
or
pop
mov
add
inc
stc
and
mov
out
pop
pop
mov
pop
push
imul
aas
sbb
push
add
scas
xchg
jge
push
(bad)
popa
sub
cmps
pop
ret
push
cwde
scas
sahf
and
scas
popa
cs
dec
add
jmp
xchg
add
or
pop
and
dec
scas
aas
add
int3
jg
loop
mov
(bad)
mov
adc
jne
push
sub
das
jo
add
xchg
fcmovnb
adc
cld
pop
loopne
and
lea
sbb
pop
mov
or
shr
sbb
test
mov
add
cmps
rcr
or
icebp
pop
fild
sub
addr16
je
push
mov
jae
rol
xor
dec
add
adc
xor
cli
adc
mov
aam
call
mov
mov
call
fsub
sub
fyl2xp1
cmp
mov
sbb
bound
and
add
mov
jne
call
xor
(bad)
aam
push
inc
sub
mov
inc
pop
shl
inc
add
add
pop
inc
int3
pop
inc
shl
fisub
sub
rcr
sbb
test
push
imul
test
push
sub
push
dec
enter
mov
mov
mov
mov
bound
push
mov
movs
jne
and
aad
mov
xor
dec
ss
ds
push
push
push
lea
jae
fidivr
sub
dec
(bad)
rol
push
nop
ja
jecxz
xor
in
push
les
adc
add
lea
or
fisttp
mov
adc
add
les
add
cmc
adc
or
push
inc
and
cmps
cmp
jle
and
dec
inc
add
pusha
or
and
cld
push
sub
mov
mov
fld
adc
add
inc
mov
jmp
cmp
jne
dec
push
mov
lock
push
push
inc
xor
fisttp
pop
mov
push
dec
sub
aas
push
and
and
(bad)
push
pop
setns
push
push
jb
nop
cmp
ja
add
dec
add
or
mov
lahf
(bad)
(bad)
jge
pop
dec
add
pop
xor
add
add
add
pop
pop
add
add
add
add
pop
xchg
add
mov
call
mov
stc
push
and
push
(bad)
jg
xor
or
push
push
mov
add
dec
das
retf
out
shl
add
lea
shl
je
and
les
or
cld
fild
push
je
cmp
je
xchg
stos
call
cmc
sbb
add
loopne
cmp
jne
inc
cmp
and
adc
jae
push
out
inc
lock
dec
lock
je
cmp
jne
add
or
adc
je
sub
cmp
call
xor
rcl
and
jne
and
push
(bad)
je
push
jae
push
sbb
js
push
js
mov
fmul
jne
sbb
sub
add
test
dec
and
scas
push
adc
call
jmp
and
cmc
sbb
sbb
push
int
push
out
popf
or
cmc
push
popf
lea
lea
jle
add
mov
push
mov
mov
or
sub
out
js
mov
jge
imul
fmul
mov
ja
pop
and
jle
lea
nop
mov
mov
add
out
loop
clc
push
push
stos
sub
cld
mov
lds
and
sti
(bad)
adc
add
mov
inc
xchg
inc
or
push
add
sbb
test
add
pop
sbb
nop
mov
mov
clc
out
bound
sub
loope
push
rep
push
sub
cmp
pusha
push
test
lods
ja
add
or
push
mov
int3
mov
or
jb
mov
lods
mov
dec
test
outs
sub
stos
(bad)
test
rol
fbld
popa
inc
push
repnz
and
mov
sub
or
jbe
sbb
or
cmp
stos
enter
push
and
ret
cmp
xor
mov
inc
cmp
or
clc
jl
imul
adc
jg
fcomip
xchg
ror
dec
dec
add
aad
push
inc
mov
pop
add
pop
and
push
adc
push
and
pop
ret
xchg
repnz
mov
pop
fld
call
nop
inc
(bad)
push
mov
add
inc
add
push
adc
mul
jge
mov
add
fbld
jmp
add
mov
inc
adc
inc
xchg
mov
xor
xlat
loopne
jp
adc
stos
clc
push
gs
or
rol
push
xlat
cmps
mov
pop
push
ret
push
push
shl
jne
sbb
inc
jb
jnp
imul
(bad)
daa
inc
mov
or
jo
cmc
dec
fwait
test
adc
or
std
or
dec
test
jne
push
pop
retf
ds
ins
jns
mov
xor
xchg
sub
out
xor
push
push
sub
out
push
sub
and
or
dec
xor
pop
ins
and
add
or
mov
or
cmp
call
ds
stos
or
sbb
std
cwde
or
ins
ret
add
pop
add
bound
ss
push
push
or
in
add
push
out
fnstcw
and
push
push
in
mov
lea
sbb
(bad)
xor
adc
fdiv
or
jne
mov
into
inc
add
add
adc
je
loopne
popa
mov
or
push
lock
stos
js
lods
mov
mov
xchg
call
push
sbb
clc
mov
dec
adc
test
inc
sub
dec
and
aas
jb
mov
push
push
mov
les
scas
cld
cmp
ror
inc
or
das
push
push
push
add
mov
arpl
fistp
mov
test
mov
mov
inc
loopne
push
push
sar
sahf
dec
and
push
dec
inc
and
rcr
adc
hlt
es
les
cmps
push
cmp
jmp
add
imul
inc
and
sbb
xor
fidiv
sub
daa
adc
cmp
jl
inc
push
pop
ret
sub
push
popa
add
mov
push
jmp
jne
or
bound
or
add
mov
inc
push
pop
sub
(bad)
mov
adc
stos
stos
pushf
xor
inc
xor
jg
add
test
(bad)
dec
sti
or
movzx
movzx
movzx
push
or
jle
je
push
or
add
push
push
push
push
iret
cmp
pop
or
pop
mov
pop
inc
xor
xor
push
pusha
and
add
cmp
jne
push
ja
ins
(bad)
mov
shld
jl
fcomp
in
popa
dec
push
adc
setae
jmp
jo
ins
mov
mov
jmp
rcr
push
sbb
push
fsub
push
push
rol
packssdw
or
imul
or
and
jae
mov
fdiv
jl
inc
aaa
mov
inc
stos
mov
add
sbb
or
jnp
sub
push
inc
nop
adc
pop
jo
loope
jl
test
pop
scas
add
(bad)
mov
sbb
pop
push
ja
push
aad
pop
mov
inc
xchg
out
add
in
push
xor
aas
adc
push
iret
push
ror
dec
push
stos
push
pop
outs
inc
in
pop
das
add
cmp
dec
lods
jmp
push
xor
aas
dec
loopne
cmc
leave
push
mov
mov
inc
add
push
add
inc
add
les
loopne
mov
inc
sti
sub
out
add
mov
aas
ins
shl
add
(bad)
add
sbb
inc
add
push
mov
jbe
mov
or
jg
xor
jp
mov
and
jb
fnstsw
add
push
push
jmp
cmp
inc
or
add
adc
add
retf
(bad)
fwait
cli
mov
jne
dec
push
inc
(bad)
xchg
cwde
dec
dec
inc
add
push
mov
sub
xchg
jge
jne
push
mov
cmp
je
jae
popf
mov
cs
push
mov
push
jl
xchg
out
rol
test
push
neg
push
mov
mov
dec
mov
shl
jne
xor
in
mov
bound
and
cmp
add
push
cmp
in
test
xor
mov
push
add
add
sbb
loop
xor
pop
add
inc
pop
inc
add
cs
ds
or
push
mov
imul
add
pop
xchg
test
cmc
std
pop
add
or
or
lea
mov
push
mov
mov
mov
or
mov
mov
xor
mov
or
call
sbb
sub
mov
add
adc
add
jo
push
jb
mov
adc
jne
jmp
lock
mov
or
sti
fcomp
pop
or
lea
adc
add
cs
or
and
pop
cmp
push
inc
fild
sbb
jne
jne
and
jmp
dec
int
das
or
fcomp
or
mov
mov
push
add
or
imul
hlt
ds
sbb
repz
inc
out
adc
sbb
add
mov
adc
(bad)
js
dec
add
add
ins
push
jl
test
inc
or
add
and
jns
out
stc
mov
inc
or
test
mov
mov
sub
or
jmp
hlt
adc
lea
jl
adc
test
dec
mov
mov
ja
(bad)
pop
and
add
add
sar
movs
sub
add
in
jne
push
lock
sbb
jmp
push
icebp
jae
cmps
push
xor
cmp
mov
push
in
mov
sub
sbb
imul
push
ficomp
dec
and
or
rcr
xor
push
movs
enter
fistp
je
test
into
cmp
cmp
loope
mov
jle
test
and
pop
pop
sbb
add
popf
cmp
add
cmp
je
mov
test
je
loope
jne
mov
inc
push
push
inc
inc
inc
(bad)
push
mov
jle
xor
or
xor
add
iret
rcr
call
add
push
push
jb
mov
aam
div
mov
inc
test
jne
push
jo
add
cwde
xchg
mov
fcom
pop
in
and
pop
inc
lea
cmp
jle
cli
test
je
loopne
add
add
add
or
mov
imul
adc
inc
mov
push
push
clc
ja
xchg
sub
or
add
add
fist
jp
pusha
and
pop
jne
inc
or
or
leave
inc
ins
or
push
adc
xchg
jmp
cmp
std
(bad)
adc
cmp
je
cmp
inc
sub
rcl
push
sbb
dec
jl
call
pop
pop
xchg
jmp
adc
push
inc
add
jle
repz
das
sbb
rcl
lahf
mov
adc
mov
adc
add
daa
adc
jge
or
arpl
je
dec
add
sbb
pop
or
or
ror
out
jle
loope
clc
out
or
or
jmp
pop
adc
cmp
xchg
cmps
dec
popf
mov
sub
movs
push
and
jb
ret
pop
add
inc
xor
out
push
inc
inc
or
dec
or
(bad)
rcl
jl
clc
repnz
mov
mov
clc
dec
pop
dec
dec
(bad)
bound
cmc
cmp
dec
mov
out
push
fwait
mov
je
pop
jo
gs
dec
je
ror
fnstenv
inc
je
inc
or
pusha
or
and
loopne
or
add
jne
in
push
push
adc
xor
shl
popa
push
push
fwait
pop
jns
pop
sub
pop
call
fs
pop
xchg
aas
inc
out
lods
cmc
call
mov
adc
cmp
mov
add
mov
push
inc
push
pop
or
ret
mov
mov
add
add
iret
cmps
aas
add
or
je
mov
div
hlt
scas
pop
mov
cmp
clc
int3
sbb
sbb
adc
xor
loopne
loopne
push
cmp
int3
or
adc
or
push
push
mov
inc
daa
sahf
inc
lock
std
jg
mov
add
test
mov
je
mov
jbe
test
xchg
pop
jle
and
push
mov
push
pop
xor
mov
lahf
ret
ret
inc
add
dec
cmp
ds
bound
add
out
adc
push
mov
popf
adc
add
add
mov
pop
or
(bad)
mov
push
add
lea
shl
sar
lea
mov
add
or
bound
test
dec
cdq
jb
add
dec
mov
and
push
js
daa
push
adc
out
sub
lods
add
adc
fst
xchg
dec
xchg
or
jg
mov
add
fiadd
inc
and
add
imul
fdivr
sub
cmp
xchg
aaa
push
add
push
ins
mov
dec
aad
push
xor
and
stos
mov
add
push
push
mov
sub
stos
loopne
pusha
inc
adc
mov
sub
mov
mov
lea
fdivr
adc
adc
add
rol
gs
fdivp
je
xchg
lock
into
adc
pop
rcr
jnp
fmul
pop
or
test
cmp
inc
lock
jb
mov
xor
add
jbe
aam
sub
ins
out
add
mov
sbb
push
ret
push
jb
and
cmp
test
out
pop
addr16
or
rcl
int3
lahf
jnp
mov
aas
test
sbb
or
inc
or
mov
pop
scas
pop
xchg
xor
adc
adc
and
inc
mov
fadd
das
or
and
xchg
cmp
push
lahf
sbb
xor
and
jmp
add
cmp
dec
xor
lods
mov
mov
stos
mov
sub
adc
mov
dec
sbb
mov
xor
les
retf
je
or
lea
xlat
xchg
clc
push
mov
je
push
push
mov
adc
cmp
cmp
mov
cmp
xchg
add
repz
lock
ins
xor
movs
add
add
inc
arpl
cmp
pop
push
les
and
and
xor
and
sbb
aas
int3
mov
push
lock
dec
add
or
xor
imul
or
pop
push
inc
pusha
add
mov
inc
pop
inc
push
cmps
mov
inc
dec
dec
and
test
push
pop
clc
inc
mov
sbb
int
arpl
outs
pcmpgtb
push
push
inc
add
aaa
add
jne
push
push
add
inc
addr16
sub
xor
rcl
ss
fistp
dec
shl
into
gs
add
rcl
sub
pop
fmul
(bad)
pop
pop
pop
std
pop
adc
imul
mov
popa
sub
inc
or
lock
push
push
jno
mov
dec
xor
mov
jno
or
nop
add
inc
sub
jnp
fadd
push
push
cmp
xchg
push
and
lock
push
and
pop
push
push
nop
adc
adc
pusha
xor
sbb
in
fldcw
push
sbb
push
fcom
pop
mov
xchg
or
pop
inc
push
adc
test
pop
jne
stos
sub
mov
pop
mov
or
add
(bad)
shl
call
sahf
rcl
(bad)
aaa
je
mov
jmp
push
add
nop
jae
shl
bound
das
or
fstp
xlat
inc
je
jmp
lsl
sbb
push
add
daa
add
clc
cmp
jle
xor
fimul
test
ds
ret
push
mov
loope
out
das
push
sub
int
test
cmp
xor
adc
inc
lea
mov
dec
and
xor
push
mov
push
add
js
das
loopne
test
je
mov
mov
mov
add
push
je
ins
cmp
and
ret
cdq
bound
or
jb
cmp
les
add
cdq
mov
scas
or
popa
test
inc
and
inc
nop
fdivr
sbb
in
in
push
and
mov
sub
mov
stc
je
adc
sub
add
and
jo
mov
xor
mov
push
(bad)
lahf
movs
arpl
adc
inc
je
jl
cmp
jl
les
xor
xor
adc
jge
rol
pop
mov
lock
or
pushf
inc
adc
lock
jns
push
cmp
je
mov
add
push
mov
mov
dec
cld
or
ret
mov
aam
add
out
pop
(bad)
push
adc
pop
ins
or
out
cmc
aas
clc
lock
and
cmp
jne
sub
dec
sbb
jmp
jle
mov
push
push
push
int3
add
imul
sti
dec
mov
dec
and
push
sbb
or
lea
adc
xor
jno
popa
jge
push
cmps
mov
sbb
jbe
punpckhbw
adc
bound
jo
or
or
xor
cmc
add
adc
and
push
inc
es
aad
push
and
hlt
jecxz
lods
and
or
jo
(bad)
cwde
les
pushf
div
cmps
test
fadd
je
shl
(bad)
lds
jnp
es
neg
sti
ror
xor
das
or
dec
mov
xor
or
div
into
bound
or
rol
sbb
xchg
js
mov
xchg
cmp
mov
fimul
and
mov
stos
mov
or
cld
je
and
push
push
dec
inc
loopne
xchg
sbb
in
test
adc
push
push
mov
jge
daa
mov
out
pusha
mov
inc
dec
inc
pushf
sub
sub
xchg
dec
add
dec
loop
mov
data16
scas
sbb
outs
clc
and
mov
add
add
std
push
ror
pop
and
add
push
pop
and
push
(bad)
add
nop
xor
jl
cmp
and
adc
adc
je
mov
adc
out
and
ds
jmp
mov
sbb
cmovae
ret
push
add
adc
je
add
adc
xor
mov
ins
js
aas
add
push
add
add
ffreep
add
outs
inc
mov
test
je
push
push
mov
xchg
or
sar
inc
mov
push
(bad)
jns
sbb
jne
fisttp
jne
les
push
jmp
(bad)
rcr
lea
js
ja
pusha
dec
cmp
push
add
jns
daa
add
add
mov
add
add
or
inc
les
add
lahf
outs
cmp
fs
pop
xchg
xchg
int3
push
cmps
outs
add
xchg
shl
or
outs
jp
outs
and
and
fs
shr
and
lods
je
and
pop
(bad)
xor
icebp
adc
into
add
out
(bad)
mov
push
mov
mov
mov
mov
pop
mov
xor
aaa
and
inc
or
lock
div
cmp
test
(bad)
or
add
cdq
mov
data16
dec
jmp
sbb
jns
sub
dec
sub
xchg
add
mov
jge
daa
aas
push
dec
adc
push
add
and
mov
(bad)
aam
jo
xchg
sub
out
mov
out
popa
(bad)
push
push
add
je
imul
cld
push
mov
data16
xor
pop
or
jle
mov
push
push
add
mov
jmp
xchg
add
popa
mov
inc
fist
xor
(bad)
lods
jmp
mov
rcl
jmp
sbb
call
and
fstp
pop
sbb
push
sbb
mov
bound
adc
scas
adc
sub
inc
xor
xchg
aas
jo
add
push
rcl
call
call
mov
or
xchg
dec
add
test
push
push
aam
mov
cmp
test
push
in
out
push
call
les
lea
adc
push
les
cmp
push
push
enter
xchg
push
mov
push
push
push
jl
enter
mov
mov
sbb
mov
and
ficom
sbb
push
jo
stos
scas
or
(bad)
(bad)
dec
add
pop
or
movzx
movzx
movzx
push
movzx
and
xlat
xlat
and
jmp
sbb
and
xor
cmp
jne
test
stc
sbb
xor
aas
xor
mov
xor
mov
fst
add
push
cmp
pop
add
mov
mov
mov
inc
xchg
pop
hlt
(bad)
jg
jl
sbb
ror
inc
test
jne
mov
dec
adc
std
pop
rep
je
and
sbb
mov
inc
cmp
jl
in
pop
adc
adc
movs
in
cmp
add
sti
cwde
and
cmps
js
xchg
jne
adc
mov
fisttp
or
push
and
push
jg
push
push
out
push
push
dec
add
add
pop
xor
dec
add
sbb
ins
add
aam
stos
daa
or
pop
cmp
ja
jmp
(bad)
or
js
dec
add
popa
and
xchg
mov
pop
call
out
cmp
cs
push
and
push
dec
dec
loopne
cmp
or
push
dec
ror
and
inc
leave
xor
je
popf
or
jl
sbb
mov
inc
add
add
and
sbb
add
jo
jne
jo
loopne
push
sbb
mov
adc
add
cld
das
ins
cwde
lds
adc
mov
push
fs
and
lock
pop
jecxz
and
leave
mov
mov
push
push
pusha
cwde
push
cmp
dec
sar
inc
jae
pop
aaa
sti
ss
mov
out
sar
push
and
out
int3
dec
test
add
ja
xor
shl
cmp
in
lock
iret
in
add
mov
test
push
je
aaa
mov
sub
push
add
add
sbb
mov
jae
xlat
pop
pop
je
push
xor
pop
mov
daa
lea
push
mov
pop
loopne
mov
(bad)
or
mov
add
sbb
and
nop
xor
aad
and
dec
mov
push
in
adc
sbb
inc
xlat
mov
in
das
and
and
inc
mov
shl
test
test
mov
push
fild
jne
mov
push
ret
sbb
test
mov
out
dec
lahf
ss
dec
inc
or
or
iret
or
shl
movs
fs
idiv
aaa
aam
or
sbb
dec
or
add
or
cmps
push
stos
sbb
in
or
or
jle
imul
push
xor
rol
jp
retf
push
call
fstp
push
push
push
pop
outs
mov
xchg
ins
xchg
jne
xchg
jmp
push
scas
test
sbb
je
in
ja
xchg
adc
dec
xchg
ret
int3
sbb
or
cmp
or
fstp
les
test
mov
je
hlt
mov
lock
lea
mov
adc
mov
mov
adc
lds
neg
push
cmp
cmc
lea
xchg
mov
aaa
mov
jl
mov
push
or
lock
test
add
addr16
or
adc
hlt
test
pop
setne
push
push
push
adc
mov
cdq
ds
or
in
jne
sub
sbb
and
cmc
js
push
outs
mov
cmp
pop
sbb
mov
std
shr
mov
mov
and
mov
sub
iret
or
fs
or
or
aam
pop
jbe
jle
dec
adc
push
popa
or
inc
or
or
mov
ror
loope
test
test
out
sbb
or
lods
(bad)
jmp
cdq
sub
sbb
(bad)
pop
inc
push
fisubr
push
fsub
es
cmp
mov
test
(bad)
or
xor
in
or
push
dec
adc
mov
retf
xchg
push
add
scas
jne
push
xor
icebp
add
or
cli
sbb
into
push
lea
pop
push
les
adc
int
mov
sbb
xchg
cwde
leave
popa
add
je
mov
idiv
je
add
icebp
mov
sbb
loope
and
pop
es
sbb
sbb
scas
push
mov
and
adc
pop
ja
push
in
ror
mov
or
mov
mov
(bad)
int3
dec
jnp
outs
or
je
out
sub
add
mov
pusha
add
adc
jbe
dec
es
mov
sub
push
push
mov
push
or
mov
ror
fdivr
dec
loope
enter
mov
and
sub
dec
xchg
pushf
push
popa
outs
fsub
xor
ins
and
push
mov
jnp
(bad)
pop
retf
sub
or
add
add
jl
xchg
xchg
or
btc
inc
xchg
add
sbb
inc
cmc
int3
les
pop
pop
ret
push
mul
push
sub
adc
mov
push
loopne
ja
inc
add
inc
or
or
push
sar
fstp
mov
rol
jne
mov
retf
mov
push
sub
and
sub
sahf
sub
pop
push
int
pop
test
jmp
sbb
add
(bad)
popa
cmp
sbb
and
out
mov
add
jl
adc
add
jmp
jle
xor
xchg
mov
jne
inc
mov
cmp
sub
int
cmps
add
xor
push
mov
out
js
cld
mov
mov
enter
test
and
mov
aas
or
or
inc
mov
imul
jmp
rep
push
or
rcl
xchg
daa
loopne
test
jbe
xchg
jne
pop
adc
fsub
or
add
mov
dec
js
cmp
and
inc
and
fadd
mov
pushf
loope
lods
sub
fadd
mov
rol
outs
push
adc
and
ds
sti
sbb
leave
les
push
fild
mov
pop
or
lds
sbb
test
xor
cmp
in
add
pop
adc
adc
fist
sbb
push
sub
jnp
aaa
xor
xchg
inc
xchg
ins
add
inc
jl
xor
aas
xor
mov
xor
jecxz
adc
(bad)
in
xor
push
and
push
das
arpl
cmp
inc
adc
es
xchg
pusha
mov
call
rol
std
(bad)
mov
sbb
jno
mov
gs
or
scas
mov
sbb
cwde
push
das
aas
mov
sub
add
mov
sbb
mov
mov
mov
outs
or
push
jne
test
add
leave
jmp
inc
call
cli
sbb
sbb
cmp
mov
mov
cmp
xor
dec
push
fcomp
inc
cmp
cmp
xor
xor
les
cmp
or
jge
add
(bad)
jmp
mov
sbb
cli
inc
ins
cmp
je
jae
mov
in
pop
je
or
sub
inc
es
or
xor
ret
push
sub
pop
push
loope
mov
shl
iret
push
aad
ret
add
outs
push
sbb
jne
(bad)
test
mov
sbb
or
cmp
mov
sub
cs
call
test
sahf
jne
push
push
call
sub
sub
or
inc
or
call
adc
pop
in
mov
mov
mov
neg
xor
mov
push
push
push
mov
add
je
loope
or
xor
or
pop
adc
ret
jbe
ins
inc
ret
lahf
clc
enter
test
jae
push
clc
mov
push
add
cmp
je
mov
or
push
mov
call
inc
adc
dec
or
cmc
add
adc
jmp
push
add
mov
outs
stos
dec
adc
dec
ficomp
call
or
xor
push
and
sub
hlt
daa
les
jl
jmp
fldcw
xchg
mov
push
add
and
test
xor
out
cmps
sub
clc
fwait
cmc
pop
gs
jle
daa
mov
inc
lods
rcr
rcl
ret
mov
push
or
rcl
sub
pop
pop
mov
fidivr
jbe
pop
scas
adc
push
push
adc
les
dec
or
push
mov
sbb
push
mov
jmp
add
xor
push
test
sbb
(bad)
pop
ret
adc
rol
int3
mov
mov
jge
aad
lock
or
add
pop
jl
and
mov
mov
pop
ret
test
loopne
cli
shl
stc
add
outs
cli
call
rol
xor
jbe
ret
and
pop
sar
shl
and
or
cmp
rcr
adc
pop
(bad)
adc
int3
mov
loopne
dec
cmp
jl
mov
and
cmp
out
jbe
sti
jne
mov
push
cmp
jne
xor
push
xor
adc
mov
shl
or
push
shl
mov
mov
not
cmp
jne
fiadd
cmp
aaa
cmp
pop
cmps
jne
test
mov
push
add
aaa
mov
div
add
push
and
shl
jl
jbe
mov
sti
or
rol
loop
shl
ror
ret
stos
retf
jecxz
and
das
xor
adc
cli
clc
jne
out
cmp
jl
mov
mov
ins
ins
stos
push
add
fwait
push
fwait
mov
loopne
adc
xchg
dec
cwde
xor
add
add
sub
inc
out
inc
test
push
std
inc
sahf
or
or
fs
test
xor
cs
or
jae
mov
shl
test
jo
(bad)
sub
add
sub
les
and
loopne
inc
loopne
sahf
add
jmp
or
rol
mov
fadd
mov
mov
push
jae
cmp
jl
(bad)
dec
loop
or
and
or
mov
mov
fistp
and
cmp
lahf
into
inc
ror
(bad)
jge
(bad)
loop
or
mov
or
aas
inc
or
cmp
cmp
add
cmp
jl
call
cmp
adc
lock
cmp
in
mov
sbb
dec
xor
add
dec
cmp
jl
inc
cmp
retf
push
inc
mov
mov
sbb
cmp
push
dec
(bad)
scas
mov
dec
push
push
and
or
sbb
popa
cld
add
xor
xor
test
jg
sbb
mov
mov
adc
(bad)
aas
push
popa
adc
fisttp
(bad)
mov
inc
sbb
icebp
clc
popa
jl
stc
push
dec
and
push
out
inc
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
clc
daa
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
(bad)
fild
clc
das
je
cmp
je
cmp
push
add
cmp
je
cmp
sar
jg
add
jge
xchg
or
jae
ret
test
mov
lds
mov
mov
xchg
sbb
outs
loop
mov
push
push
mov
pop
push
pop
push
add
loop
shl
mov
jmp
add
outs
fist
call
test
push
jne
mov
mov
cmps
mov
push
call
call
test
mov
push
or
dec
and
test
jne
push
cwde
mov
adc
dec
inc
shr
and
mov
loope
(bad)
fcomip
push
inc
sub
je
test
je
test
call
ret
mov
and
cmp
adc
cli
pusha
jne
jb
push
arpl
inc
icebp
ret
test
je
test
je
mov
sti
add
int3
dec
ds
jmp
jnp
je
leave
dec
adc
dec
ret
mov
pop
je
test
push
jne
push
jmp
or
test
mov
add
inc
inc
(bad)
je
push
adc
pop
ret
test
loop
inc
mov
je
test
je
mov
or
pop
ret
aas
adc
(bad)
mov
je
test
mov
mov
pop
or
inc
xor
sbb
inc
jo
or
jecxz
loopne
mov
add
arpl
je
(bad)
lock
add
ja
add
push
mov
push
mov
cld
or
mov
mov
ins
add
and
adc
jne
enter
lods
pop
movs
jmp
fdiv
and
mov
aaa
pop
cdq
or
mov
fadd
je
mov
xor
cmp
sete
pop
dec
and
dec
inc
(bad)
fist
mov
test
je
test
mov
aas
bound
ret
sbb
out
cmp
and
int3
fstp
mov
sbb
push
iret
and
mov
cmp
cwde
adc
mov
inc
jg
sbb
call
into
or
rol
rol
cmp
push
jg
(bad)
out
dec
fild
ret
mov
dec
fwait
push
add
inc
lds
jnp
out
in
add
jo
das
popf
popa
out
cmps
add
or
mov
cld
lahf
mov
push
push
xor
push
mov
mov
jg
add
ins
mov
cmp
mov
jne
xchg
and
fsubr
push
dec
add
or
imul
sub
dec
add
mov
mov
test
je
movsx
sti
lahf
in
push
xchg
adc
pop
adc
dec
mov
out
mov
and
pop
test
jne
out
aas
inc
ins
mov
mov
push
dec
inc
inc
std
fdivr
sbb
je
jmp
mov
movsx
cmp
(bad)
fild
xchg
test
mov
movsx
xor
push
and
inc
lea
(bad)
inc
enter
mov
jne
inc
clc
or
mov
mov
xor
xor
rcl
pusha
or
adc
xchg
arpl
ror
test
or
iret
push
cld
div
xor
test
jnp
jae
jb
adc
inc
jb
addr16
sub
outs
adc
pop
jb
je
add
scas
mov
test
(bad)
jg
pop
mov
lea
xor
cmp
mov
jne
mov
jge
inc
movzx
test
mov
cli
mov
mov
je
movzx
(bad)
(bad)
mov
sbb
mov
mov
jne
cmp
jne
mov
mov
add
mov
sub
inc
jle
mov
mov
das
dec
dec
out
je
nop
movzx
xchg
pcmpeqw
jmp
cmp
std
ja
pop
(bad)
adc
inc
jmp
xchg
or
add
test
push
sbb
or
enter
mov
xor
add
fisttp
inc
and
mov
test
mov
movs
and
or
cmp
and
add
cli
push
mov
pop
sar
fwait
adc
add
test
je
out
mov
sbb
loop
inc
add
test
jne
adc
push
pop
inc
and
sbb
adc
and
sub
cmps
mov
adc
cs
mov
push
adc
add
push
add
jmp
mul
add
or
jnp
jmp
add
push
pop
lods
mov
xor
jb
jb
or
mov
or
or
test
je
jae
imul
sti
push
movzx
adc
jne
cmp
xor
ror
test
cmp
in
dec
cmps
mov
inc
test
je
inc
jmp
add
jmp
test
jge
xlat
inc
outs
mov
xor
mov
mov
push
inc
push
jne
lea
movsx
cmp
je
jmp
or
cmp
sbb
je
movsx
cmp
pop
mov
loop
add
cwde
add
clc
(bad)
aas
mov
push
movsx
inc
push
movzx
test
jne
iret
ins
idiv
jge
into
mov
cmp
jne
inc
push
and
jecxz
mov
pop
push
lods
aam
inc
std
out
add
jp
sbb
pop
push
retf
adc
pusha
lahf
jle
outs
adc
sbb
or
mov
clc
adc
lods
aas
sar
jge
xchg
push
push
add
lahf
adc
mov
and
add
add
test
push
push
in
mov
movsx
sub
jno
xor
fbstp
sub
add
inc
adc
psraw
dec
add
inc
dec
add
jne
movzx
test
je
loop
ja
in
inc
adc
jmp
add
pop
mov
cmp
js
xor
test
push
sti
dec
adc
push
sti
pcmpeqb
leave
jmp
test
je
jl
ja
cmp
test
je
test
or
fcomp
lock
cmc
push
inc
or
dec
add
pop
or
je
int3
add
dec
cwde
loop
or
mov
xor
mov
ins
xor
ins
and
dec
arpl
pop
push
jns
inc
inc
mov
cmps
sbb
aaa
gs
xor
sub
rcl
daa
rol
or
outs
push
push
push
in
or
ror
shl
imul
push
pop
dec
mov
test
outs
sub
push
imul
adc
ins
shl
in
jmp
test
std
jmp
push
add
mov
dec
add
jbe
syscall
jne
push
mov
ds
add
cmps
add
or
xchg
add
jmp
loope
daa
mov
jne
(bad)
mov
push
xor
retf
ins
and
jle
mov
or
(bad)
stc
or
or
dec
test
jg
test
je
cmp
jne
sub
jge
mov
or
add
adc
and
fadd
je
cmp
jl
dec
les
mov
loopne
add
sbb
jge
call
je
and
test
jne
dec
sbb
xchg
mov
clc
std
test
jne
clc
or
or
in
push
mov
ret
cmp
outs
sub
or
outs
add
lock
cmc
mov
push
clc
pop
aam
cli
jne
iret
jne
pop
inc
mov
mov
rcl
cmp
shr
add
mov
sub
mov
je
(bad)
or
or
movzx
mov
shl
test
jne
mov
cmp
je
test
and
call
icebp
adc
mov
bound
in
clc
mov
call
add
add
add
test
push
ror
inc
mov
push
sub
out
out
and
push
adc
add
xchg
test
repz
mov
push
dec
dec
sar
stc
mov
cmp
cmp
adc
icebp
push
mov
add
push
mov
mov
lock
ds
mov
adc
or
add
out
and
cmp
jne
test
sbb
jmp
(bad)
sbb
inc
add
adc
and
adc
enter
adc
je
ja
add
call
fwait
push
test
je
or
int3
add
stos
mov
mov
add
push
lock
test
and
push
or
pusha
and
jb
cmp
jae
jle
add
jmp
jg
in
mov
inc
inc
rol
jl
inc
add
and
and
jle
push
sbb
lea
cdq
or
inc
xor
shl
cmp
pushf
push
sbb
sbb
or
dec
sbb
fimul
pusha
sbb
xchg
jg
(bad)
inc
mov
or
mov
adc
and
lahf
in
inc
aad
inc
sbb
or
inc
push
push
jmp
jns
out
and
and
dec
lea
sbb
aas
dec
(bad)
bound
std
test
dec
pop
jmp
push
push
mov
mov
or
test
adc
fcom
sub
adc
push
loope
mov
jmp
jmp
add
rcl
shr
and
inc
and
push
and
sbb
mov
rol
jle
push
adc
ins
outs
popf
sbb
inc
adc
cmp
je
je
dec
xchg
mov
add
inc
fisttp
add
cmps
sub
mov
push
cmps
retf
cmp
pusha
xchg
mov
imul
out
out
inc
mov
mov
stos
jle
push
push
jb
jge
mov
jbe
cmp
adc
sbb
and
js
add
adc
hlt
and
push
retf
add
(bad)
clc
push
les
push
sbb
inc
pop
xor
cld
mov
pop
add
xchg
call
outs
aaa
test
je
dec
pop
push
push
inc
std
mov
mov
rcl
loope
lods
and
pop
cmc
aam
xchg
(bad)
aas
ja
in
rcr
es
pop
pop
mov
pop
ins
pusha
inc
mov
fiadd
imul
push
mov
add
ss
mov
or
push
or
or
cmp
or
jle
cmp
dec
or
add
or
mov
lahf
sbb
(bad)
call
or
scas
sbb
push
stos
and
dec
or
stos
add
xor
xchg
mov
iret
xchg
pop
sbb
push
mov
jmp
vmaxps
push
test
nop
inc
inc
mov
fwait
ret
push
adc
fadd
clc
push
mov
jne
inc
cmp
xchg
add
loop
inc
lahf
xchg
or
dec
pop
push
mov
jg
test
movs
or
dec
js
adc
mov
subps
inc
(bad)
cmp
and
sub
dec
jns
pop
test
jge
mov
sub
adc
lahf
mov
daa
cld
aad
or
or
lods
mov
push
mov
or
loopne
xor
(bad)
mov
aas
jg
cli
mov
jl
sbb
xor
mov
push
loopne
cmp
or
pop
xor
and
stos
jae
cs
(bad)
fsubr
pop
sbb
jg
add
fdivr
pop
ret
cmp
je
xor
inc
xchg
rol
sar
lea
mov
and
pusha
sub
dec
cmp
ret
pop
adc
mov
push
add
test
bound
mov
add
aas
add
cs
out
ror
mov
inc
inc
adc
dec
and
(bad)
jo
mov
mov
es
or
call
mov
jae
xor
and
sub
xchg
or
push
adc
inc
add
outs
js
out
dec
jl
das
scas
outs
enter
and
pop
dec
add
jbe
push
or
adc
sbb
pop
xor
or
pop
add
cmp
in
je
mov
mov
dec
mov
ins
push
nop
pop
add
je
retf
sbb
xor
mov
push
fadd
fcom
mov
gs
add
aaa
push
pop
jnp
aaa
pop
mov
xor
push
pusha
adc
add
add
fild
aas
ds
push
and
xor
mov
or
(bad)
lahf
out
daa
test
inc
adc
sbb
push
clc
pop
sar
clc
add
mov
mov
imul
add
and
and
dec
add
adc
lahf
xor
sub
test
cld
mov
idiv
test
jne
cmp
jg
jne
add
mov
mov
lea
stos
mov
jmp
ja
mov
fsubp
jp
mov
jnp
xor
jne
cmp
inc
cmp
jl
js
mov
and
inc
sub
mov
in
test
mov
je
loopne
pop
jbe
push
sbb
mov
mov
pop
(bad)
mov
fst
cmc
ror
pop
test
(bad)
pop
fmul
pop
pop
outs
or
leave
jno
xchg
(bad)
(bad)
(bad)
mov
add
cmp
jg
cmp
jge
cmp
je
cmp
jne
mov
jmp
mov
in
add
test
and
cli
inc
js
scas
sub
rol
cwde
int3
adc
pop
or
sbb
xor
or
xor
das
or
or
sti
inc
cld
mov
cmp
push
push
mov
push
and
jl
pop
ret
or
pop
jne
jl
rol
add
mov
and
add
jl
or
in
movs
sti
dec
mov
add
dec
or
add
pop
idiv
lods
dec
mov
(bad)
dec
mov
adc
cmp
(bad)
and
test
ja
push
movsx
push
movsx
sub
std
or
mov
dec
or
(bad)
mov
xchg
jl
mov
or
cmp
jg
(bad)
(bad)
mov
daa
mov
add
std
lahf
mov
cmps
dec
add
jp
dec
adc
mov
push
call
push
push
rcl
and
add
adc
push
push
sub
pop
dec
and
sub
push
push
scas
or
cmp
out
or
dec
clc
mov
add
adc
sar
or
push
inc
push
mov
aas
psubsw
(bad)
inc
mov
cmp
jl
cmp
jg
mov
cmp
je
push
or
jg
cmp
mov
sub
push
push
ss
cmps
call
cmp
lea
je
fsubr
jle
push
lds
clc
add
sbb
mov
push
push
push
mov
dec
and
and
xor
ror
mov
loopne
pop
(bad)
stos
int3
int3
scas
pop
test
push
push
jne
add
in
jge
jne
mov
sub
stos
stos
mov
mov
and
nop
int3
mov
es
das
iret
test
sbb
aas
popa
adc
les
(bad)
xor
or
mov
out
xchg
push
(bad)
cmp
cmp
jbe
mov
and
or
out
adc
sub
dec
cmps
dec
mov
std
or
or
push
mov
and
dec
push
xor
cmps
repz
or
cld
sbb
xor
(bad)
jg
pop
cmp
mov
jbe
and
mov
jmp
movzx
mov
sbb
and
test
je
test
je
test
push
ss
add
jne
inc
jmp
inc
outs
sbb
shl
inc
sub
std
enter
test
je
addr16
push
into
xor
(bad)
movs
add
mov
xor
add
dec
add
fwait
mov
inc
rol
aaa
retf
sub
push
push
push
lea
cmp
mov
and
stos
ret
mov
es
cmps
nop
inc
and
mov
mov
cmp
jne
test
je
inc
rcl
cld
mov
jmp
xor
cmp
or
fs
add
adc
fld
or
mov
xor
pop
mov
or
adc
jmp
xor
mov
div
sub
push
or
pop
inc
jmp
inc
or
cmp
adc
sbb
cdq
ret
or
mov
inc
xchg
or
cld
adc
out
mov
mov
add
push
icebp
inc
or
cmp
push
jmp
ret
xor
jle
mov
mov
or
pop
adc
or
mov
sub
push
sbb
mov
pop
je
sar
rcr
inc
cmp
rcr
(bad)
jmp
rcr
dec
mov
push
and
mov
push
adc
and
inc
and
mov
sbb
test
pop
add
les
cmp
xchg
push
or
dec
add
mov
inc
add
cmp
call
mov
into
lea
jo
sub
cmp
je
scas
and
ja
js
mov
and
add
push
push
fst
adc
adc
cmovbe
cmc
jne
cmp
mov
sbb
pop
push
jmp
and
dec
out
adc
push
push
or
cli
push
icebp
inc
fdiv
jg
push
sbb
les
jne
mov
mov
data16
loopne
and
jge
pop
push
fnstcw
test
inc
adc
push
inc
sbb
dec
sbb
or
and
adc
pop
call
cmp
and
push
inc
or
push
mov
in
outs
call
fnstcw
or
pop
jne
add
jno
push
sti
jg
and
test
jl
pop
lea
pop
pop
jp
pop
(bad)
in
jmp
(bad)
ret
inc
mov
sbb
or
push
mov
push
mov
inc
je
pop
mov
push
sub
inc
mov
dec
and
push
push
push
dec
dec
sub
rol
adc
sbb
fs
inc
mov
test
js
test
jne
pop
adc
out
mov
mov
hlt
jmp
loopne
je
push
push
push
cmps
or
cmps
sbb
or
movs
pop
mov
es
pop
pop
add
aam
ret
ins
push
icebp
scas
stos
pop
push
test
jne
aas
loop
mov
jb
dec
clc
ss
jg
push
and
push
mov
push
push
dec
or
mov
mov
pop
or
shl
rcr
test
or
aad
jge
inc
or
sbb
push
test
je
(bad)
jo
jb
cmp
(bad)
je
ret
push
ss
and
add
pop
jae
sub
xor
call
mov
adc
dec
add
or
sub
push
push
lods
call
jmp
aas
mov
add
mov
adc
test
xor
add
fild
jge
mov
mov
sbb
test
cmc
push
mov
in
push
push
js
and
xor
loope
and
call
add
(bad)
cmp
lds
je
push
or
push
add
jne
add
cmp
pop
sbb
pop
pop
mov
jo
imul
sbb
int3
jmp
ja
pop
xchg
and
push
out
sbb
inc
push
add
mov
pop
inc
and
sub
push
or
push
div
pop
adc
inc
les
mov
addr16
cmp
adc
jnp
je
pop
xchg
jae
cmp
inc
adc
and
add
xor
adc
jmp
add
pop
add
mov
add
mov
and
or
add
jno
jmp
cmp
sub
add
mov
push
mov
mov
je
sub
add
inc
and
jmp
outs
ret
(bad)
movs
je
cmp
jne
test
add
sbb
push
call
xchg
leave
test
imul
add
clc
jl
adc
dec
repnz
jecxz
ret
push
push
push
mov
and
and
xchg
lock
mov
loope
jns
adc
iret
add
fidiv
mov
push
mov
jmp
inc
(bad)
sub
in
mov
cli
lock
mov
call
or
or
test
je
test
cmp
jne
push
mov
pop
sub
add
sbb
out
fidivr
pop
pop
test
jmp
mov
or
push
push
push
stos
push
xchg
out
push
inc
adc
push
dec
xor
mov
mov
pushf
sub
mov
or
and
dec
rol
push
add
push
gs
jge
test
inc
mov
inc
add
sub
mov
push
or
loopne
cmp
push
sub
and
add
pop
jmp
test
clc
jae
fs
add
add
in
mov
adc
pop
mov
push
and
add
push
and
sub
push
or
jge
or
or
sbb
mov
or
test
add
(bad)
jno
and
dec
cmp
pop
dec
and
sub
mov
std
call
fcomp
and
fcomp
inc
push
pop
mov
movs
test
cmps
fcmovbe
lahf
add
or
or
int
add
ret
in
adc
xor
or
push
cmp
or
int3
mov
push
mov
dec
add
push
je
cmp
pop
add
clc
jmp
or
or
push
add
mov
mov
or
shr
adc
ss
lea
test
fisub
push
push
mov
add
sahf
mov
data16
xchg
mov
add
and
push
les
xchg
adc
pop
inc
jo
push
jne
rcr
jmp
mov
loopne
aam
scas
mov
lea
cmp
cdq
dec
push
scas
inc
in
push
inc
ret
and
shl
les
push
test
out
mov
or
push
out
sbb
or
or
add
test
mov
mov
arpl
pop
dec
lock
mov
sbb
add
mov
jbe
sbb
iret
jbe
ret
xor
push
push
pop
shl
jo
cmp
ror
sub
mov
loopne
xor
push
and
inc
cmp
shl
push
add
pop
xchg
add
push
aam
sbb
pop
jo
loope
or
dec
pop
inc
mov
push
hlt
into
xor
mov
dec
shr
add
xchg
shl
popf
and
inc
push
push
call
jns
sub
push
sbb
pusha
pop
lock
dec
jb
cmp
pusha
iret
sub
mov
pusha
lahf
push
je
cs
dec
imul
xor
cmc
fistp
mov
and
xchg
xor
ja
push
or
pop
(bad)
mov
and
cs
fbstp
ins
jo
jle
out
mov
add
addr16
xor
and
aas
cdq
je
and
sub
jne
pusha
test
inc
ds
inc
mov
xor
(bad)
(bad)
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
aas
mov
mov
cmp
push
mov
add
cli
das
mov
adc
or
leave
add
mov
mov
outs
mov
movsx
add
lock
pop
ja
in
jo
call
fadd
cmp
jne
mov
inc
mov
mov
mov
sbb
fiadd
sti
jmp
leave
jne
mov
sub
inc
mov
pop
push
inc
adc
push
mov
sbb
jmp
add
ss
scas
jnp
cmp
sar
mov
call
scas
inc
(bad)
jg
and
jmp
mov
mov
jmp
inc
test
jne
or
cmp
jne
mov
cmp
jne
mov
push
xlat
out
sbb
cmp
and
ret
xchg
adc
mov
call
sbb
dec
test
mov
mov
add
add
xchg
or
add
inc
xchg
into
pop
adc
cmp
outs
add
push
mov
push
daa
fcom
xor
jmp
push
push
pop
pmaxub
push
bound
add
push
pop
mov
push
test
or
jge
mov
sar
pop
ret
test
push
je
push
jae
mov
pop
push
stos
pop
ret
push
or
lahf
aaa
lock
xor
and
push
sbb
inc
jmp
clc
aaa
cld
mov
dec
adc
mov
(bad)
mov
dec
and
jmp
mov
out
fist
add
inc
or
mov
daa
add
sbb
int3
jne
addr16
add
sbb
sbb
stos
aas
ins
or
add
jne
fldcw
cmp
sti
out
push
add
adc
nop
imul
push
push
jne
and
pop
adc
pop
scas
call
aad
inc
jmp
fcom
dec
mov
jg
ja
mov
mov
mov
add
lea
ss
xchg
je
fadd
jg
push
out
pop
add
sub
push
pop
mov
test
je
fadd
and
add
pop
jmp
mov
inc
xchg
or
ja
sbb
push
mov
mov
sub
adc
cmp
jle
mov
add
adc
enter
sbb
xchg
mov
je
mov
test
je
cmp
fcom
je
inc
inc
inc
mov
sub
jecxz
std
sbb
push
cli
or
fcom
lea
out
scas
stc
iret
repz
and
add
pop
arpl
ret
fist
sub
inc
cmp
jg
pop
mov
jp
ins
push
dec
ins
dec
jg
jae
xchg
sbb
je
ins
jnp
aam
push
out
jnp
sbb
or
fwait
mov
and
push
lea
call
jle
movs
stos
push
and
pop
add
mov
pop
mov
jecxz
call
or
adc
arpl
cmc
arpl
outs
adc
push
inc
xor
xor
push
inc
and
cmps
jbe
gs
inc
sbb
movaps
push
push
xchg
jne
push
aaa
mov
ins
icebp
iret
sub
mov
mov
xor
lds
mov
pop
inc
pop
cwde
mov
pop
jmp
jne
cmp
inc
push
cs
mov
push
and
sub
cmp
popf
mov
mov
sbb
outs
or
jl
daa
adc
sub
cmp
xor
sbb
ss
jne
pop
jne
mov
mov
mov
mov
mov
outs
xor
push
or
push
or
mov
mov
(bad)
fild
adc
push
sbb
push
sbb
sbb
je
je
std
adc
sbb
mov
scas
jne
and
and
push
and
bound
push
mov
mov
test
push
push
scas
or
out
mov
sbb
(bad)
mov
jmp
mov
mov
adc
mov
cmp
call
mov
in
inc
jmp
and
lea
idiv
pop
add
push
lea
push
adc
aaa
mov
dec
add
cmp
je
push
inc
pop
jge
jp
add
dec
or
in
adc
test
mov
or
mov
stc
pop
idiv
or
test
or
pop
pop
mov
add
add
gs
and
mov
or
std
mov
inc
loopne
dec
cld
dec
or
mov
or
test
aas
mul
add
shl
pop
clc
pop
xchg
std
ret
push
push
adc
add
jne
test
and
mov
jno
jg
push
push
mov
call
(bad)
sbb
rol
push
or
add
cmp
and
push
add
out
jmp
mov
jge
pop
mov
ja
lods
add
loopne
into
mov
jg
or
pop
jb
pop
push
aas
dec
add
ret
mov
bound
jo
add
(bad)
int3
enter
and
and
mov
call
clc
sbb
lea
add
push
out
psadbw
adc
ret
cmp
push
xlat
add
mov
pop
and
cmc
ret
mov
xchg
add
push
or
or
nop
jmp
xor
push
or
inc
adc
adc
and
push
sbb
mov
das
int3
sar
mov
neg
retf
add
push
pop
pop
loope
fld
pop
jne
pop
pushf
cmp
into
mov
lahf
xor
(bad)
outs
sub
rcr
mov
jo
xchg
out
ds
(bad)
push
pop
ret
mov
cwde
push
push
cmp
push
hlt
and
push
aam
or
(bad)
aas
or
lods
push
mov
push
mov
mov
xor
push
(bad)
loope
push
xchg
adc
lock
push
sub
add
lea
jns
in
mov
mov
mov
add
ret
push
jl
fstp
pop
push
jbe
or
call
cmp
jb
mov
jmp
lea
mov
enter
pop
push
inc
pop
or
out
mov
and
popa
into
pop
pop
loope
shr
sub
or
test
je
inc
outs
fadd
dec
cli
es
mov
lock
cld
mov
mov
sar
mov
push
mov
popa
cwde
ret
in
outs
push
lods
lds
dec
mov
dec
dec
and
xor
push
push
idiv
or
pop
add
pop
jmp
bound
adc
add
ss
sub
or
or
or
retf
pusha
cmp
pop
pop
test
out
out
jne
mov
or
sbb
push
jae
mov
lock
push
lea
push
ja
and
test
push
pop
push
pop
outs
sub
mov
mov
test
push
inc
pop
out
test
je
sub
jle
ret
fst
not
add
add
jnp
push
push
mov
or
xor
jo
pop
add
rol
add
fdiv
movs
sub
sbb
imul
push
mov
and
and
ins
mov
jmp
push
push
push
jmp
push
or
in
pop
out
push
push
arpl
cmp
cdq
add
call
add
icebp
mov
jne
fadd
clc
xchg
aas
and
pop
pop
jl
test
mov
outs
fdiv
dec
mov
inc
mov
sbb
jbe
test
je
or
into
adc
fs
aas
jle
mov
push
mov
add
lods
mov
inc
test
and
mov
sub
mov
enter
(bad)
cmp
cmp
je
push
push
lods
ins
js
sub
inc
xlat
lods
dec
mov
lea
pop
(bad)
fisubr
int3
call
int3
pop
push
dec
add
jg
jmp
push
pop
test
je
push
pop
(bad)
ds
push
(bad)
call
push
lods
lea
or
dec
mov
xor
dec
jae
fdiv
or
push
test
mov
movs
sbb
cmps
in
rcl
push
push
mov
mov
or
inc
adc
mov
mov
mov
mov
mov
ins
lds
fild
enter
cmp
pop
je
mov
cmp
loope
fiadd
inc
and
push
pop
pop
push
loope
add
idiv
sub
push
jae
pop
jnp
xor
sbb
ret
or
scas
jo
adc
shl
mov
mov
inc
js
loope
pop
ret
pop
shl
outs
sub
mov
clc
sub
push
push
aas
cld
and
inc
fcomp
jp
pushf
push
push
(bad)
ja
ja
inc
mov
daa
ja
jbe
aas
test
outs
xchg
inc
pop
lea
or
pop
daa
add
addr16
push
push
pop
out
add
inc
aam
fdivr
xor
hlt
pop
push
inc
sbb
pop
cs
fisub
arpl
(bad)
mov
inc
inc
add
shl
ja
and
cmps
inc
outs
mov
outs
add
movs
add
jle
xchg
mov
push
push
lea
(bad)
cmp
or
mov
sbb
arpl
cmp
rcr
adc
inc
imul
xor
inc
or
jne
sar
cdq
or
cwde
jae
into
or
imul
mov
test
push
or
mov
test
mov
(bad)
(bad)
inc
jne
cmp
jae
cmp
jb
cmp
ja
add
jmp
push
scas
add
mov
sub
or
loopne
xor
je
mov
pop
leave
adc
pop
inc
mov
mov
stc
(bad)
(bad)
fiadd
cmp
add
cmp
ja
add
leave
ret
push
cmp
pop
jne
jmp
pop
pop
push
test
je
cmp
je
cmp
loop
mov
and
xor
leave
ret
fbld
fs
clc
or
adc
dec
movs
or
call
(bad)
fistp
movzx
mov
xor
inc
leave
ret
cmps
inc
mov
loop
loop
mov
mov
jle
dec
fisttp
xchg
shl
cli
call
push
push
push
push
call
daa
adc
lahf
mov
jg
(bad)
out
leave
ret
jno
movzx
test
je
push
mov
jae
xchg
pushf
(bad)
push
push
mov
pop
and
sti
aas
popa
(bad)
and
fwait
cmp
jne
jmp
es
popa
daa
push
and
test
ins
push
ds
test
mov
inc
sbb
pop
pop
rol
icebp
jo
loopne
jb
imul
pop
and
push
dec
add
or
xor
xor
adc
std
or
(bad)
test
mov
clc
mul
dec
mov
mov
and
imul
fmul
sbb
rol
jecxz
mov
jae
cmp
jge
dec
jb
lahf
add
sbb
pop
or
(bad)
std
cmps
or
in
adc
add
(bad)
push
mov
or
push
mov
scas
add
shl
push
mov
push
jne
jns
sub
out
lds
mov
cdq
mov
adc
push
mov
push
lea
mov
aaa
je
in
jg
inc
in
inc
jecxz
jne
mov
jg
push
(bad)
in
or
test
in
or
mov
add
or
jmp
mov
pop
push
mov
dec
jmp
jl
or
xchg
push
je
mov
add
(bad)
(bad)
jg
test
je
adc
mov
mov
add
xor
xor
add
test
inc
add
cld
and
add
add
mov
iret
sub
jmp
add
sub
inc
std
out
add
add
mov
jne
(bad)
inc
adc
mov
add
test
je
mov
jp
fdiv
sub
je
and
cmp
or
and
push
jl
sub
mov
pop
mov
pop
ret
(bad)
mov
pop
pop
ret
mov
fsub
jbe
je
scas
mov
mov
addr16
mov
into
test
je
test
jge
fnsave
mov
xor
adc
cmp
pop
add
or
mov
mov
mov
sbb
add
or
jmp
mov
daa
mov
out
push
pcmpeqd
lock
sub
das
sub
popa
and
out
xchg
mov
aaa
sub
jne
test
sub
or
or
je
fucomp
test
sub
sbb
neg
cdq
dec
es
adc
mov
adc
push
imul
imul
cmps
mov
xor
push
xor
retf
or
sub
jge
xlat
je
test
test
mov
cmp
cs
(bad)
(bad)
push
adc
mov
mov
push
add
push
adc
or
or
add
loop
jmp
call
imul
push
lea
mov
mov
shl
jmp
cs
or
ret
adc
add
fnstenv
leave
je
(bad)
push
or
push
mov
shl
push
or
mov
mov
stos
cli
ror
icebp
inc
out
(bad)
dec
xor
add
and
push
je
loopne
inc
icebp
add
adc
lock
sub
ret
mov
cmp
je
xchg
out
cmp
je
imul
adc
iret
mov
pop
mov
(bad)
aaa
ret
lea
push
(bad)
fild
pop
mov
cmp
mov
or
jp
clc
xor
add
cmc
push
push
jle
push
adc
repnz
dec
jmp
mov
movzx
and
and
xchg
call
sub
cmp
jne
jbe
stc
mov
jmp
fild
inc
lea
lea
and
fld
jne
sbb
push
add
and
rcl
repz
scas
fcomip
or
je
dec
bts
jmp
je
leave
call
pop
icebp
pop
sti
add
mov
sbb
add
mov
mov
ja
push
and
aad
cmp
add
js
add
push
ror
sub
stos
iret
ret
mov
ret
fidiv
jbe
and
mov
rcl
daa
cmp
data16
xchg
adc
cmp
xor
add
or
mov
mov
je
or
cld
mov
or
jmp
pop
leave
ret
pop
pop
xchg
jmp
imul
mov
xor
clc
push
mov
iret
clc
loop
fmul
ror
les
std
mov
fucomip
xrelease
mov
mov
mov
add
ffree
pop
push
sub
push
cld
xchg
inc
cwde
clc
inc
gs
test
xor
fcomp
fldln2
add
push
xor
dec
push
stos
inc
xchg
add
jo
push
sub
adc
add
and
clc
ja
jnp
mov
cmp
mov
add
or
ret
push
push
push
sbb
adc
jo
xor
and
push
and
cmp
call
jmp
adc
jge
and
adc
ja
mov
sar
fadd
mov
jmp
mov
sub
inc
(bad)
mov
sbb
inc
in
mov
lock
and
cld
add
jle
mov
mov
bnd
add
mov
mov
sbb
lea
push
inc
push
xchg
repz
jle
(bad)
(bad)
call
pop
pop
and
cmp
je
cmps
mov
mov
ror
jle
inc
jmp
mov
dec
mov
pop
jo
out
sahf
sbb
cld
xchg
mov
cmp
jnp
jo
mov
or
push
mov
je
das
mov
popf
inc
jmp
push
adc
jo
add
and
out
sbb
out
and
adc
or
mov
xor
mov
es
add
cmp
jp
and
jecxz
mov
imul
loopne
mov
jge
add
mov
mov
mov
mov
lock
jl
cmp
sti
(bad)
dec
pusha
div
mov
dec
lea
lea
cmp
jge
cmp
jle
sbb
or
dec
xor
retf
data16
hlt
(bad)
dec
inc
mov
mov
mov
cmp
ja
cmp
jbe
div
pop
add
inc
pop
inc
jns
or
dec
shl
add
xor
mov
push
inc
scas
loop
mov
pop
or
jmp
mov
outs
enter
mov
icebp
inc
ret
xor
pushf
stos
mov
out
pop
rcr
cmp
mov
inc
outs
and
xor
nop
mov
cmp
jp
add
jne
pop
pop
fisubr
(bad)
cmp
dec
add
xchg
pusha
and
aam
fcomip
or
inc
hlt
mov
inc
sub
inc
xor
jno
dec
clc
and
inc
call
mov
jne
push
cmp
imul
mov
or
rcr
sbb
clc
inc
push
cdq
push
fmul
pop
pop
in
iret
add
loopne
shl
inc
push
pop
adc
push
sbb
cmps
mov
mov
mov
xor
push
push
push
(bad)
out
icebp
pop
push
mov
pop
or
call
xchg
je
cmp
je
lea
mov
mov
or
outs
pop
cmp
popa
mov
call
jge
call
jmp
pop
dec
mov
cmp
cmps
add
add
ja
or
push
or
push
or
ins
cli
mov
ret
push
push
mov
or
pop
(bad)
aas
(bad)
mov
mov
pop
pop
or
outs
or
add
add
mov
mov
jbe
out
icebp
mov
sar
adc
ror
or
aaa
sti
je
push
pop
idiv
data16
pop
mov
or
mov
or
inc
or
mov
sub
xor
inc
hlt
push
push
or
jg
mov
jmp
push
push
cmp
xchg
je
jmp
mov
jno
xchg
adc
mov
out
fsubr
call
jecxz
push
hlt
adc
icebp
pop
mov
rcl
mov
retf
jle
rcr
pusha
(bad)
push
jle
sbb
push
push
data16
add
mov
rcr
add
loop
aam
inc
cmp
inc
(bad)
test
push
add
fmul
mov
popa
std
hlt
mov
push
push
push
pop
mov
loopne
movs
mov
aas
xor
inc
hlt
sub
push
push
jne
dec
std
call
repnz
fwait
cmp
xor
into
sub
aam
scas
xchg
pop
push
ret
mov
adc
int
icebp
or
cli
push
call
jne
mov
xchg
jae
cld
add
push
push
popf
test
or
jg
stos
cli
inc
mov
add
cmp
jbe
cmp
jb
sbb
cmp
jb
rep
jmp
push
pop
pop
(bad)
test
jb
cmp
cmps
jmp
add
enter
pusha
nop
pop
and
pop
push
nop
jmp
pop
mov
jo
pushf
add
and
mov
mov
mov
mov
mov
test
mov
add
add
int3
cmp
int3
inc
scas
sub
ds
add
and
nop
and
and
inc
inc
mov
add
xor
shl
sbb
or
imul
(bad)
in
call
call
add
cld
cld
lea
mov
mov
or
sti
hlt
fs
jo
test
pop
pop
leave
mov
rcr
nop
icebp
or
adc
pop
adc
push
push
loope
xor
nop
lea
lea
and
lahf
lock
or
ja
xchg
test
je
loope
neg
imul
stc
sub
mov
sub
sti
mov
and
dec
add
mov
sub
pop
out
div
out
add
pop
dec
and
out
pushf
sbb
add
out
and
ds
xor
sub
jb
aaa
xor
sbb
lods
mov
(bad)
int3
je
sub
sbb
pop
sbb
xor
rcr
adc
adc
jne
cs
or
mov
pop
or
add
mov
fwait
test
mov
add
add
mov
int3
add
paddsw
fmul
out
adc
sub
aas
fild
(bad)
or
cli
dec
or
fisttp
aad
or
je
shl
retf
je
sub
(bad)
(bad)
in
add
jne
sub
jb
push
mov
shl
add
push
adc
mul
mov
fucomip
sbb
rol
xor
repnz
ret
sub
jmp
retf
sti
add
repz
sti
ja
pop
out
je
mov
pop
and
jmp
sbb
jmp
jmp
pop
pop
cld
jmp
rol
dec
add
mov
or
js
xlat
das
fsub
mov
push
add
add
add
jg
sub
(bad)
xor
mov
je
std
xor
fnclex
out
add
enter
jae
cmps
cmp
push
(bad)
pop
pop
mov
out
or
shr
rol
cmp
jae
mov
std
inc
(bad)
cmp
jae
mov
add
jl
test
pop
pop
jne
add
pop
push
rcl
jge
dec
sub
stc
add
pop
lods
(bad)
sti
mov
add
ret
sub
call
pop
sub
push
pop
ret
and
test
lock
push
add
inc
or
sbb
test
in
test
popa
clc
sbb
cmp
ret
mov
ja
inc
add
shr
sbb
and
fldenv
inc
icebp
inc
fst
fistp
fild
or
(bad)
frstor
sub
sar
fstp
mov
xor
jbe
add
xchg
mov
mov
jmp
sbb
scas
loop
add
mov
test
pop
and
(bad)
inc
lock
mov
mov
inc
inc
test
jne
sub
ror
xchg
and
clc
dec
mov
jmp
les
mov
dec
js
clc
in
lock
mov
xchg
ret
xlat
(bad)
pop
mov
mov
and
push
or
test
je
pop
sbb
add
or
(bad)
push
or
(bad)
gs
jge
and
dec
sbb
inc
or
cmp
ss
jbe
pop
shl
dec
je
and
bound
jg
xchg
jmp
xor
loope
mov
inc
add
inc
or
push
or
sar
sbb
push
daa
jp
jo
or
lea
sub
jbe
adc
jmp
or
fbld
je
add
cmp
jmp
inc
lea
(bad)
push
or
ret
sbb
out
(bad)
js
add
cmp
jb
add
mov
add
ret
push
ret
lods
or
dec
or
das
pop
pop
mov
cld
xor
ss
mov
cmp
xor
jmp
mov
enter
fistp
test
sbb
mov
sti
bswap
mov
pop
push
push
add
xchg
ja
fcomi
or
jae
neg
add
rol
add
or
jmp
sub
in
sub
mov
test
mov
mov
pop
ja
fwait
push
ret
push
loopne
int
xor
push
push
popf
je
push
int3
and
call
add
call
jo
xchg
sub
push
movs
mov
cmc
aaa
jne
mov
jb
pop
ret
mov
sti
jg
pop
cmp
mov
mov
cmp
mov
fstp
jg
jae
pop
aas
mov
test
je
call
cmp
jb
adc
out
dec
hlt
push
test
add
push
pop
cmp
jae
cwde
push
push
(bad)
retf
mov
pop
ins
adc
mov
mov
xor
inc
cmp
dec
in
data16
adc
fistp
inc
mov
mov
mov
or
aaa
in
cmc
xlat
cmp
imul
jno
add
add
(bad)
je
call
jmp
push
jbe
mov
retf
pop
push
add
mov
pop
imul
jne
mov
sti
neg
mov
call
cmps
mov
adc
xor
dec
sbb
daa
dec
cmp
adc
mov
add
cmp
wrmsr
test
push
push
(bad)
pop
mov
jns
lea
xor
mov
xor
inc
and
ja
add
adc
mov
out
(bad)
jmp
das
jle
mov
lea
add
and
jae
dec
mov
xor
std
call
shl
(bad)
in
call
jbe
mov
(bad)
fstp
clc
xor
mov
sti
jne
or
test
push
xor
repz
push
inc
push
jb
sar
out
push
dec
mov
cmp
je
cmp
leave
cmp
je
data16
ja
into
std
inc
fdivr
push
or
pop
mov
adc
ret
jne
mov
push
lea
into
test
loopne
sti
into
sbb
or
je
std
in
retf
cmp
mov
loopne
fistp
int
jg
add
mov
sub
xor
scas
pop
jne
push
push
or
das
mov
mov
fmul
jp
add
ror
cld
pop
xor
pop
adc
leave
ret
and
lea
mov
loopne
fild
jne
mov
pusha
mov
mov
sbb
jmp
sub
mov
fsub
pushf
test
mov
add
inc
adc
mov
add
in
enter
pop
scas
and
imul
jle
or
jns
inc
mov
adc
cmp
mov
mov
push
retf
in
fiadd
cmp
xchg
ret
pop
mov
dec
bound
push
mov
dec
cmp
xor
xor
mov
mov
inc
mov
inc
inc
and
mov
add
and
or
leave
push
int
div
xor
pop
inc
inc
je
(bad)
fcomip
add
out
or
xor
shr
rep
adc
rep
pop
mov
pop
mov
rcr
push
add
or
std
add
cmp
xor
lea
pop
and
cmp
je
add
and
push
push
addr16
xor
sbb
pop
cli
mov
rol
xchg
lahf
sub
inc
and
je
add
push
rcl
xchg
fidivr
push
ins
lea
pop
pop
ret
cmp
sbb
inc
rcr
or
dec
cdq
call
int3
and
nop
mov
ror
mov
and
mov
dec
out
mov
adc
inc
add
sbb
mov
or
or
out
jg
add
stc
add
clc
out
aas
in
into
add
add
mov
push
mov
adc
xlat
cmp
jne
mov
add
cmp
jne
movzx
and
add
cmp
jae
add
daa
cmp
xor
mov
mov
jmp
cmp
jbe
wbinvd
jo
push
push
setne
cmp
je
aaa
mov
mov
push
ror
push
sbb
pop
ja
pop
or
or
jne
jne
or
jbe
jp
and
push
and
fs
out
cmp
push
scas
or
xlat
and
jbe
inc
je
dec
or
adc
xor
jae
mov
adc
cmp
je
cli
pop
adc
mov
lea
cmp
mov
sbb
test
movzx
mov
add
pop
mov
xlat
arpl
out
mov
mov
aam
jne
jne
or
dec
inc
in
dec
or
xor
loopne
sbb
lods
mov
jge
lahf
jbe
mov
mov
mov
mov
test
xor
xor
jbe
in
cmps
js
std
or
push
push
cld
or
test
jne
mov
cld
lea
mov
mov
mov
or
je
les
std
dec
icebp
or
je
add
or
mov
pop
push
push
lea
out
call
xor
xor
xor
xor
xor
call
pop
pop
push
sub
js
cmp
mov
add
jg
mov
es
aas
push
inc
inc
jge
mov
jge
mov
inc
add
mov
jmp
sub
add
and
xor
icebp
sti
ret
ja
dec
push
inc
mov
sub
cmc
fist
push
data16
push
mov
cli
in
push
mov
add
jge
ds
test
je
cmps
add
sbb
dec
xchg
mov
push
outs
enter
add
or
pop
scas
adc
sbb
push
xchg
fs
mov
dec
cmps
fsubr
or
mov
or
jmp
sub
pop
jge
call
pop
or
xor
mov
add
jmp
or
push
jmp
and
ins
jmp
jne
or
shr
add
push
or
jne
xor
xchg
adc
sbb
jmp
clc
add
test
add
ja
cmp
jg
test
cli
cmc
adc
das
movs
es
mov
dec
jmp
mov
cmp
je
cmp
pop
or
jmp
mov
dec
dec
or
(bad)
loopne
xor
sub
pop
in
inc
sti
add
inc
inc
mov
shl
jne
mov
mov
arpl
(bad)
jbe
cmp
pop
jne
sahf
inc
jb
pop
jbe
or
dec
(bad)
outs
outs
out
add
jb
jp
or
mov
sub
jmp
(bad)
mov
leave
cmp
fisttp
cmp
jb
jne
cmp
ffreep
(bad)
jbe
add
or
imul
add
mov
icebp
jo
std
aas
jmp
mov
dec
dec
test
jne
adc
lds
dec
test
mov
jne
out
mov
cmp
add
jne
mov
daa
test
hlt
mov
dec
cld
(bad)
jmp
mov
and
inc
mov
push
fdiv
inc
shl
sbb
add
inc
addr16
pop
cld
mov
jmp
push
add
add
pop
leave
ret
shl
add
rcl
pop
xchg
sbb
les
mov
imul
dec
mov
mov
adc
or
or
hlt
adc
test
mov
jbe
or
inc
cld
test
out
inc
jmp
arpl
jecxz
sbb
cmp
mov
jb
mov
push
push
idiv
aaa
icebp
dec
or
jge
sub
add
sub
fisttp
cmp
jb
movq
je
pushf
cld
ja
fadd
push
push
sub
sub
cmps
je
sub
add
jmp
neg
pop
mov
pop
je
mov
xchg
dec
or
or
jbe
bound
(bad)
fstp
jmp
mov
sub
pop
or
jmp
and
out
lock
not
mov
push
jne
sbb
jl
xchg
js
xchg
inc
pushf
leave
pusha
loop
mov
xor
jp
or
out
inc
fdiv
and
xor
and
enter
mov
and
shl
cmp
mov
or
loop
xor
cli
xor
cld
jg
xor
fild
jge
jmp
cmp
jb
or
sbb
sbb
and
ins
inc
sti
call
ret
div
sub
push
out
sub
pop
sub
push
add
sub
cmp
jb
js
stos
mov
mov
pop
mov
movsx
je
inc
dec
test
mov
retf
push
push
cld
pushf
rcl
push
ret
dec
lock
and
mov
lahf
sbb
rol
mov
dec
enter
test
push
out
mov
adc
add
icebp
jmp
arpl
cs
cmp
repz
mov
test
jne
ja
mov
movs
xchg
pop
mov
add
(bad)
(bad)
push
rol
pop
clc
je
mov
mov
sar
mov
and
lea
test
cld
(bad)
inc
cmp
jae
cmp
jne
inc
inc
cmp
jb
dec
xchg
loope
fwait
aad
clc
dec
test
js
jmp
xchg
or
and
sub
inc
or
mov
sbb
and
push
sub
add
(bad)
(bad)
std
cmp
mov
sar
lea
loopne
lea
mov
shl
xor
push
ja
push
test
sahf
retf
dec
jne
and
add
jmp
cmp
(bad)
(bad)
(bad)
shl
inc
or
cld
push
xchg
jne
add
ja
add
or
add
inc
xchg
or
ror
out
sbb
xlat
sub
and
push
jp
test
add
lods
rcr
movd
or
add
cmp
cdq
mov
call
mov
test
push
je
mov
test
je
cmp
je
cmp
add
std
add
and
or
inc
or
or
inc
inc
and
pop
xor
mov
test
pop
jns
and
and
mov
add
mov
mov
(bad)
pop
sub
cmp
xor
jmp
shr
fcomp
or
and
mov
push
inc
adc
sub
jno
int
std
mov
sub
fimul
lds
fnstenv
fld
sar
mov
mov
mov
je
ret
adc
ror
adc
jg
pop
adc
xor
lock
fist
cmp
pop
mov
mov
mov
inc
inc
mov
add
jp
cmp
jb
(bad)
(bad)
(bad)
cmp
add
add
cmp
jbe
mov
cmp
je
inc
inc
dec
jne
jg
sti
idiv
shl
aam
sar
inc
mov
lea
inc
ss
adc
adc
adc
sbb
push
dec
add
ins
stos
clc
inc
je
cmp
jne
cmp
jne
call
push
push
push
daa
mov
cmp
je
sub
lea
jmp
or
call
je
ror
push
jo
rcr
int
adc
or
xor
cmp
or
push
mov
dec
adc
and
(bad)
(bad)
(bad)
call
cmp
jle
mov
cmp
mov
mov
je
inc
inc
cmp
jl
add
cmp
add
(bad)
adc
stos
mov
jmp
xor
push
or
ds
(bad)
addr16
push
mov
push
pop
jne
ret
cdq
call
add
sbb
or
push
add
sbb
in
sar
push
iret
sub
cmp
ds
loopne
mov
jne
jbe
(bad)
add
movzx
mov
cmp
je
mov
ret
jb
jl
inc
mov
aaa
hlt
mov
push
iret
push
push
call
shr
cmps
sub
loope
xor
jmp
add
inc
mov
mov
dec
test
je
mov
movzx
push
inc
arpl
arpl
cmp
je
inc
jle
aaa
sub
mov
push
push
ins
pop
jne
jmp
int3
cmp
loopne
xor
loope
ror
jmp
push
push
push
dec
cmp
jo
cwde
mov
call
jmp
shr
cmp
jae
cmp
jae
shrd
sar
ret
mov
sar
and
sar
ret
or
(bad)
cmp
js
push
xor
adc
sar
mov
fidivr
neg
sbb
mov
mov
adc
adc
mov
shl
and
ja
lock
shl
push
or
ret
dec
jns
jmp
mov
mov
fbstp
dec
and
adc
or
jmp
(bad)
jmp
out
(bad)
out
ja
enter
sbb
jb
cmp
ja
pop
outs
mov
or
or
imul
and
pop
or
dec
jns
mov
(bad)
fadd
ret
or
hlt
and
sar
or
imul
aas
or
push
pop
ret
cmp
ja
push
pop
push
push
jg
(bad)
dec
jno
lea
and
cmp
jb
lea
push
xor
jb
add
sub
je
(bad)
mov
cmp
and
sub
mov
dec
aam
cli
sub
mov
add
inc
or
add
or
push
mov
fcmovb
cwde
rcl
pop
mov
(bad)
jmp
xchg
cmp
jmp
jle
cli
scas
sub
sti
jg
xchg
sti
or
pop
cmp
jle
and
clc
add
sub
or
and
jmp
push
jno
push
dec
mov
sar
movzx
test
add
(bad)
dec
or
pop
jmp
mov
mov
mov
push
push
lea
push
push
push
clc
xor
add
fimul
add
je
cmp
jne
movzx
jmp
movzx
sbb
(bad)
push
ror
jae
cmp
lea
jle
mov
xchg
loopne
adc
xor
push
inc
into
and
xor
enter
xchg
call
add
push
pop
xor
or
out
out
(bad)
mov
push
scas
add
neg
sub
mov
std
or
mov
xor
jmp
mov
cld
pop
leave
call
pop
or
push
stos
cs
add
out
sbb
dec
sub
mov
std
dec
push
cmp
je
lea
push
push
call
(bad)
iret
mov
push
retf
sub
cmp
xlat
std
mov
hlt
push
push
push
repnz
out
jmp
or
outs
add
leave
ret
add
in
inc
or
out
mov
lea
jmp
pop
mov
and
icebp
(bad)
dec
popf
push
pop
cmp
jb
cmp
jbe
cmp
je
cmp
je
pusha
mov
lock
jmp
paddw
push
cs
mov
jmp
mov
pop
sub
push
push
dec
std
mov
lea
sahf
leave
mov
lea
push
or
push
fdivr
out
mov
adc
add
cmp
or
mov
(bad)
jge
pusha
xchg
loope
out
inc
xchg
or
add
fld
(bad)
and
add
cmp
add
in
or
scas
pop
and
add
sbb
add
add
psubusw
mov
and
cmp
lea
jne
jmp
rcr
movapd
idiv
out
mov
clc
psrlq
movd
andpd
psrlq
(bad)
dec
test
je
cmp
jl
psllq
cmp
jo
sti
(bad)
dec
and
fisttp
ucomisd
jnp
mov
cmp
aam
ret
rcr
add
xchg
xor
jg
mov
cs
cmpnleps
cmp
(bad)
cmp
xor
add
add
pop
pushf
out
into
cmp
adc
push
ja
push
es
mov
stos
in
aas
adc
adc
ss
nop
aas
call
sbb
fadd
cmps
pop
dec
fstp
fst
or
loopne
ret
(bad)
xlat
add
mov
push
fwait
fwait
out
mov
and
add
inc
add
add
inc
adc
or
xor
pop
xlat
mov
sti
jmp
and
jne
fyl2x
and
cmp
jne
fchs
cmp
push
cld
inc
jne
lea
mov
xor
inc
push
sbb
inc
or
loop
outs
jmp
inc
and
or
inc
jmp
faddp
stos
fdivr
push
or
pcmpgtw
call
leave
jmp
xor
and
or
jne
cld
jge
mov
lods
and
push
or
lock
push
jne
test
jne
sub
mov
push
sub
and
and
fsave
ja
data16
popa
or
pop
je
mov
cmps
jg
mov
mov
(bad)
not
adc
dec
(bad)
ffree
adc
std
jg
outs
(bad)
jg
je
imul
in
pop
test
ins
je
fld
je
loope
jbe
imul
test
mov
mov
fcomp
call
fxch
fmul
jne
fld
xchg
(bad)
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
adc
mov
adc
inc
ret
(bad)
jmp
test
movs
push
scas
mov
cmp
out
movs
mov
dec
xor
scas
rcr
cmp
push
push
nop
dec
inc
scas
push
scas
in
and
loopne
mov
(bad)
pop
pop
add
and
scas
dec
xchg
mov
subps
mov
add
push
sbb
rol
adc
shl
dec
mov
or
fnstcw
inc
mov
je
fprem
jmp
mov
sub
(bad)
dec
out
fld
cmp
je
mov
inc
neg
push
mov
(bad)
(bad)
call
cmp
jbe
add
jmp
add
mov
inc
test
ja
mov
mov
mov
mov
mov
dec
mov
inc
cmp
jb
pop
and
jge
or
jne
test
jge
push
push
jmp
cmp
mov
xor
pop
pop
pop
ret
push
push
aad
and
mov
or
in
adc
mov
cmp
lahf
inc
fisttp
outs
or
jne
dec
mov
pop
in
(bad)
loopne
xchg
pop
jb
add
pop
pop
mov
push
iret
test
push
ret
stos
loopne
hlt
add
mov
outs
jae
sub
aaa
jg
mov
jmp
push
sub
mov
mov
dec
mov
call
cs
fcmovne
or
fadd
test
mov
sbb
pop
in
dec
popf
push
xor
inc
mov
lods
jnp
test
or
scas
mov
push
call
or
adc
cmps
into
cmp
jne
pop
add
xchg
pop
push
push
push
cld
push
dec
add
ss
mov
cmp
shl
or
mov
jo
cmps
dec
in
test
and
fstp
sub
imul
push
dec
cmp
jne
inc
(bad)
sbb
jbe
rdpmc
rcr
adc
xchg
int3
test
pop
add
jp
loop
dec
cld
mov
mov
adc
inc
adc
inc
and
xor
mov
xchg
cmp
jne
push
aaa
inc
rol
inc
icebp
(bad)
jmp
dec
xlat
(bad)
jg
or
leave
je
(bad)
mov
dec
jne
mov
mov
jmp
add
(bad)
fst
or
pop
push
push
lea
lea
cmp
jbe
(bad)
xor
pop
das
rep
pop
pop
sub
push
in
and
mov
(bad)
push
inc
cmp
jne
lea
inc
cs
or
dec
jno
mov
loop
or
or
or
(bad)
(bad)
(bad)
inc
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
scas
test
loope
rdtsc
fwait
mov
jns
and
pop
pop
popf
or
out
sub
call
out
push
pop
sbb
bound
je
test
sbb
cmovle
pop
fadd
inc
call
test
aaa
in
jge
xor
ja
jmp
inc
mov
cmp
jge
adc
sub
call
mov
cmp
je
test
je
jae
jg
jmp
pop
pop
xor
inc
mov
and
xor
or
(bad)
jg
pop
daa
test
push
inc
jmp
cmp
jne
test
(bad)
fld
add
or
jne
or
mov
sti
fild
and
xor
mov
dec
push
pop
or
aas
sub
cmp
jo
or
cmps
je
mov
lods
clc
(bad)
cwde
mov
push
push
or
cmp
jne
or
push
inc
mov
or
ret
sbb
push
(bad)
sbb
push
pop
cmp
add
mov
jae
cmp
jg
dec
cmp
je
lea
(bad)
dec
or
je
mov
cmp
inc
and
mov
fist
adc
shr
or
(bad)
icebp
call
inc
mov
mov
mov
mov
cmc
outs
and
ret
or
adc
adc
or
test
ror
test
or
les
or
nop
imul
or
loopne
mov
inc
aaa
push
pop
or
mov
push
pop
jne
sti
dec
cmp
jge
mov
mov
cld
sbb
rcr
add
push
push
mov
(bad)
bswap
adc
sbb
(bad)
jg
jg
mov
jmp
mov
shl
ret
stc
mov
push
mov
jl
xor
mov
mov
and
sar
mov
dec
lea
mov
and
or
and
fdivr
ret
cmp
ja
in
or
cdq
stos
mov
cmp
pop
mov
fsubr
shl
nop
popa
ja
adc
mov
sub
sar
add
xchg
aaa
mov
push
call
cmp
cmp
jge
push
adc
and
arpl
pop
ret
push
cmp
or
adc
in
in
and
jnp
mov
mov
jmp
inc
jg
push
jne
push
adc
or
cmp
push
scas
push
jae
and
adc
add
(bad)
mov
mov
data16
(bad)
push
ret
je
test
fldz
je
mov
jmp
test
je
cmp
fld
in
pop
fstp
mov
fld
(bad)
(bad)
test
push
jmp
test
out
jmp
fld
js
hlt
adc
leave
jge
cmp
out
(bad)
cmp
mov
je
xor
pop
test
push
je
sub
test
je
mov
or
mov
or
jg
dec
mov
sub
jne
inc
inc
cmp
jne
ds
inc
inc
mov
xor
jg
mov
rcr
mov
jmp
jmp
mov
adc
push
rol
or
sub
push
xor
jecxz
scas
mov
mov
pop
call
dec
adc
daa
mov
fisttp
scas
neg
add
mov
ffreep
(bad)
cmp
repz
mov
xor
cmp
ja
pop
jmp
push
ror
pop
jne
test
push
mov
or
add
(bad)
ja
add
loope
adc
push
mul
mov
not
or
add
mov
cmp
push
dec
push
pushf
or
cmp
or
aaa
lds
jmp
mov
sub
out
aaa
jmp
hlt
div
mov
pop
sbb
inc
sub
adc
out
icebp
cmp
add
ror
push
and
lods
loop
dec
cs
add
add
std
(bad)
jmp
or
je
cmp
jne
or
je
shr
cmp
jne
adc
cmp
jne
(bad)
fcomip
adc
in
ror
nop
sbb
shl
add
ret
idiv
add
add
sub
mov
rol
fdiv
cmp
je
data16
pop
idiv
adc
add
sbb
jmp
cld
add
add
(bad)
cmp
stc
jbe
push
push
lea
cmp
mov
ja
jmp
inc
pop
adc
push
(bad)
mov
cmp
add
div
push
std
push
adc
fisttp
in
je
mov
sub
mov
(bad)
out
call
adc
mov
mov
inc
dec
jne
sub
std
cmp
ja
pop
pop
jl
add
in
and
jg
dec
cmp
jb
push
mov
fbld
bound
ret
jmp
dec
scas
cmc
add
(bad)
pop
or
fist
je
adc
(bad)
sub
and
dec
xor
inc
cmp
ja
push
push
push
push
mov
scas
mov
and
jo
pcmpgtd
dec
mov
js
or
mov
pop
adc
adc
fimul
call
ret
mov
inc
jbe
add
fdivrp
xchg
fcmovbe
pop
and
mov
stc
stc
test
sbb
fimul
cmc
int
jb
push
call
cmp
sbb
jmp
in
iret
sub
sbb
fnstsw
fbstp
mov
jmp
adc
fdiv
add
and
pop
sub
adc
jns
jmp
mov
hlt
add
mov
mov
mov
mov
mov
lock
dec
push
jne
mov
daa
cmp
pmaxsw
push
mov
jae
popa
sbb
jmp
and
adc
lock
popa
sbb
mov
mov
mov
sub
sub
cmp
jl
cmp
jae
std
scas
loope
sbb
mov
cwde
cmc
inc
sbb
sub
sbb
dec
pop
ja
jg
mov
cmp
jg
call
cmp
call
rol
imul
hlt
(bad)
aas
pop
pop
pop
pop
add
push
mov
sub
push
add
out
not
jne
cmp
addr16
cs
and
div
push
jg
sbb
clc
jmp
arpl
or
(bad)
fiadd
mov
cmp
jne
push
sbb
push
cmps
pop
xchg
(bad)
jg
loope
inc
jne
xor
pop
pop
pop
ret
mov
lea
jmp
inc
mov
pop
ret
jp
cli
jmp
mov
sub
(bad)
sbb
sub
mov
pop
lds
cs
inc
adc
shl
es
fdiv
stc
mov
std
div
mov
mov
mov
shr
inc
or
xchg
ror
fst
and
into
or
or
mov
or
dec
sub
sbb
popa
push
xor
or
les
loopne
mov
jnp
or
lahf
and
jnp
lahf
inc
and
ret
jmp
ins
(bad)
mov
adc
pop
in
inc
pop
mov
cmp
xchg
adc
adc
mov
stc
add
jmp
stos
sbb
inc
loope
movzx
push
mov
jmp
je
or
or
add
and
adc
inc
add
jne
aam
aam
adc
cmp
mov
sbb
lock
mov
cmp
jae
add
ja
add
(bad)
jmp
shl
mov
test
je
push
arpl
xchg
and
js
pop
push
or
and
sbb
add
sbb
jmp
imul
sbb
mov
enter
jle
add
mov
fild
dec
pop
jge
add
push
mov
(bad)
call
inc
sar
dec
or
xor
dec
add
or
inc
mov
push
ror
fimul
sub
mov
(bad)
dec
fisub
jne
cmp
mov
add
or
jge
cmp
jne
(bad)
int3
sbb
mov
xchg
jp
hlt
ret
(bad)
adc
aad
mov
or
jle
sub
xor
cmp
push
cmp
jb
cmp
jb
cmp
ja
cmp
inc
or
add
out
repz
mov
adc
dec
or
cmp
stc
retf
add
pop
or
cs
mov
jo
pushf
add
inc
jp
dec
jnp
sbb
cli
cmp
jle
push
sbb
repnz
jmp
mov
inc
add
or
add
rol
add
cmp
jne
adc
in
retf
inc
mov
dec
je
popf
mov
or
or
aas
add
sti
xor
mov
cmp
je
cmp
adc
out
call
mov
adc
dec
adc
sub
pop
inc
mov
stos
pop
add
pop
cmp
dec
ins
mov
movzx
mov
test
je
movsx
sub
in
(bad)
push
jmp
test
je
cmp
jl
cmp
jg
pop
loop
or
and
leave
cmp
jae
arpl
and
inc
jb
jne
cmp
bound
imul
add
jle
icebp
mov
imul
dec
pop
inc
or
and
jb
or
cmp
adc
mov
pop
add
loopne
xchg
inc
xor
lahf
push
je
inc
mov
xor
add
mov
test
cwde
ror
lock
push
sub
inc
push
test
cmp
cmp
sete
dec
imul
xchg
ret
or
push
push
push
adc
mov
jge
pop
sbb
inc
in
or
mov
add
fld
jmp
sbb
jnp
adc
sbb
cmp
je
cmp
je
xor
popf
loopne
mov
div
xor
jmp
mov
out
push
daa
push
push
call
pop
xor
inc
ja
test
sub
(bad)
jg
jg
ret
jo
je
lea
add
lea
cmp
jb
lea
mov
mov
rcr
sbb
xor
loopne
pop
mov
add
test
cmp
je
cmp
adc
(bad)
adc
adc
inc
cmp
adc
dec
mov
dec
je
cmp
je
cmp
aaa
cmp
jne
mov
jmp
push
jne
push
fstp
inc
push
test
je
cmps
push
and
out
cmps
or
mov
and
fwait
dec
mov
jmp
mov
fild
and
ja
mov
lea
leave
es
adc
ja
push
ret
cmp
(bad)
fcomip
and
cmp
xor
inc
push
push
call
cmp
jne
out
(bad)
push
je
sub
je
sub
je
dec
jne
mov
mov
or
dec
mov
mov
sbb
push
push
inc
xlat
add
test
es
ss
cmps
mov
mov
aaa
in
fisttp
mov
push
mov
adc
or
mov
mov
(bad)
psubsb
jmp
jmp
cwde
mov
xor
mov
mov
dec
dec
je
add
call
call
fbstp
sub
dec
je
or
pop
mov
mov
inc
mov
jmp
mov
test
pop
fmul
mov
aad
lock
mov
xor
jmp
mov
call
icebp
add
fmul
add
test
push
or
cmp
jne
push
shl
clc
cmp
je
add
gs
clc
or
(bad)
(bad)
sbb
aam
dec
pop
pop
jne
mov
mov
mov
push
adc
mov
fmul
adc
push
add
cmp
jge
lea
mov
mov
inc
jmp
inc
loope
mov
xor
jne
push
push
call
pop
jmp
push
or
loopne
pop
fdiv
leave
mov
mov
inc
mov
int3
cdq
loope
mov
mov
js
loope
push
mov
mov
xor
add
and
std
scas
mov
push
mov
adc
lea
add
inc
out
or
jp
jmp
or
push
mov
mov
(bad)
jmp
test
je
mov
test
je
mov
sbb
pop
add
cmp
je
test
lock
pop
or
test
jne
pop
call
adc
jne
lea
mov
test
fucomp
dec
je
add
loopne
mov
sbb
adc
out
call
pop
pop
mov
cmc
jbe
lea
inc
aas
xor
les
push
xor
xor
cmp
mov
mov
jmp
cmp
jne
movzx
push
or
or
fprem
or
test
bound
call
add
add
add
adc
js
or
or
cmp
mov
pop
push
sub
dec
add
cmp
(bad)
je
sar
mov
mov
inc
cmp
jl
call
jbe
adc
div
jge
add
ja
call
mov
jge
add
inc
out
mov
mov
mov
dec
mov
jmp
cmp
add
(bad)
adc
inc
lock
cmp
jle
inc
inc
cmp
jne
pusha
lea
(bad)
push
push
push
call
or
test
mov
add
jle
xor
(bad)
mov
sbb
mov
sbb
inc
cmp
jle
inc
cld
push
out
jb
push
inc
ret
int
mov
add
mov
lock
dec
add
sbb
les
xor
pop
sub
xchg
adc
pop
inc
jmp
cmp
fld
add
add
mov
pop
inc
cmp
call
xor
inc
lock
rol
jnp
xor
mov
cmc
and
mov
ja
and
and
mov
push
push
add
adc
(bad)
mov
pop
pop
je
xchg
and
shl
ja
neg
and
sahf
icebp
push
mov
lock
mov
(bad)
cmp
adc
call
dec
iret
and
mov
xlat
add
cmp
jl
sub
mov
pusha
or
sub
in
pop
fisttp
or
out
pop
adc
cmps
clc
fnsave
call
or
aas
mov
or
mov
xor
xor
cmp
jne
or
fnsave
stos
or
mov
jne
mov
jmp
pop
xchg
mov
or
pop
pop
test
jne
or
cmp
mov
ja
and
jecxz
mov
jmp
es
jo
mov
xor
lds
outs
js
or
ins
push
lea
test
or
mov
adc
lea
or
jmp
push
or
ret
mov
dec
add
das
jp
cmp
jle
add
cmp
je
mov
cmp
jne
mov
push
mov
or
cmp
mov
jbe
mov
mov
and
(bad)
sub
pop
push
adc
xor
xor
cmp
cmp
pop
push
ficomp
mov
sub
fwait
or
xor
mov
iret
jne
or
push
inc
xor
pop
pushf
cli
sbb
cmp
(bad)
push
sar
retf
mov
dec
cmp
je
dec
mov
or
out
sti
nop
inc
inc
dec
dec
aas
jbe
mov
pop
inc
push
cmp
je
mov
push
in
in
xor
xor
mov
inc
mov
inc
fisttp
jno
cmp
cwde
bswap
ror
sub
xchg
inc
cmc
test
jle
popa
adc
inc
inc
jle
test
pop
pop
jne
pop
pop
test
pop
push
inc
jg
or
js
les
mov
aaa
mov
cmp
jne
lea
jle
push
push
lea
sub
jmp
push
dec
jg
hlt
ffreep
les
gs
push
jmp
(bad)
lea
mov
jne
out
out
call
jae
cmp
je
push
mov
jmp
sbb
jne
jge
sar
push
cmp
je
inc
add
jmp
fistp
fistp
add
cmp
jae
test
je
sub
xor
outs
ror
jo
sti
sub
and
mov
hlt
mov
lea
push
dec
add
jne
dec
pop
mov
rol
not
sbb
fcomi
mov
test
push
push
mov
fimul
ss
ret
sub
lea
cwde
mov
dec
pop
(bad)
call
mov
jbe
jmp
adc
push
cmps
ja
cmps
push
adc
pop
push
stos
sbb
test
test
rcr
mov
or
push
push
push
(bad)
ja
jne
mov
pusha
push
push
in
push
push
push
pop
mov
and
xchg
sbb
int3
push
fist
aad
add
add
xor
shl
jg
sti
fisttp
push
push
add
(bad)
jle
std
add
pop
jne
mov
sbb
mov
and
pop
pop
pop
ret
push
lea
sub
adc
push
js
(bad)
inc
inc
pusha
mov
xor
cmp
mov
mov
mov
inc
cld
iret
xor
fiadd
xor
ja
and
inc
mov
je
mov
mov
add
xlat
add
clc
les
test
cmp
fsubrp
sbb
or
aaa
cmp
pop
mov
and
jae
push
push
call
and
adc
jo
inc
sar
ret
push
and
pop
xor
dec
fst
push
push
js
push
push
or
pop
xor
jecxz
jl
mov
xchg
jecxz
pop
les
add
jmp
cli
sub
jb
mov
js
mov
jge
sub
adc
pop
push
out
out
neg
cmp
add
pop
push
mov
pop
push
push
or
ret
cli
ret
pop
mov
add
dec
cs
push
lea
lock
loop
lea
lea
mov
mov
push
xchg
add
lds
push
sub
lea
shl
push
jmp
scas
mov
jne
mov
fisttp
leave
jae
rcr
mov
xor
push
sub
test
js
cmp
or
call
pop
mov
lea
push
mov
jae
adc
imul
mov
and
(bad)
dec
(bad)
push
movzx
mov
push
adc
loopne
(bad)
push
cmp
paddb
test
push
mov
mov
and
les
mov
outs
mov
mov
cmp
je
mov
dec
mov
mov
mov
jecxz
test
add
out
mov
test
or
lea
dec
adc
movs
pop
dec
pop
std
fbld
dec
add
mov
push
push
mov
push
push
mov
mov
xor
and
clc
jg
bnd
mov
mov
pop
inc
push
cmp
(bad)
inc
mov
or
or
mov
jmp
sub
jbe
sbb
das
mov
outs
imul
or
xchg
inc
pop
out
pop
sbb
daa
push
cmp
(bad)
sbb
pop
and
xchg
jo
addr16
jmp
in
xchg
scas
outs
cli
aas
xchg
mov
xor
cmp
icebp
je
cli
je
jo
lock
cmp
je
or
out
test
mov
xor
jno
mov
popa
stos
loopne
jg
into
mov
je
dec
jne
int
jg
inc
jne
mov
cmovnp
jecxz
add
pop
mov
pop
pop
je
jbe
sub
fisttp
test
test
cwde
and
in
mov
xor
add
es
push
xchg
mov
add
(bad)
call
or
inc
call
inc
in
(bad)
or
(bad)
adc
push
add
inc
dec
jo
icebp
sub
test
(bad)
out
call
jne
cmp
jg
push
lea
shl
or
inc
cmp
mov
jmp
add
xchg
inc
add
jne
inc
in
adc
inc
jns
mov
mov
pop
pop
pop
neg
lock
lds
ret
sub
push
push
push
jecxz
ret
aaa
jge
lds
repz
mov
fistp
fbstp
or
daa
push
and
std
fild
(bad)
out
shl
and
jmp
add
inc
cmp
call
leave
xor
cmp
je
xor
mov
hlt
ss
shl
pop
in
(bad)
retf
jge
jne
adc
mov
outs
xor
jl
loopne
sbb
(bad)
and
aas
sbb
sti
(bad)
pop
or
pop
xor
add
add
mov
jns
mov
int3
mov
sbb
(bad)
jg
lock
cmp
jne
mov
int3
mov
mov
cmp
clc
lods
or
xor
mov
ror
mov
mov
dec
jmp
mov
inc
mov
inc
out
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
push
mov
mov
dec
adc
or
pop
pushf
mov
rol
push
ret
and
or
jb
pop
int3
test
adc
es
pushf
inc
or
int3
int3
push
adc
and
mov
clc
push
jmp
inc
clc
mov
popa
js
mov
cld
(bad)
dec
mov
mov
jns
cmp
pop
pop
pop
leave
push
push
lock
and
subps
dec
add
jnp
sbb
fdivr
fisttp
jmp
or
push
nop
add
rol
sbb
mov
adc
subps
bound
pop
cmovb
cmps
jmp
xchg
sbb
add
call
sbb
mov
add
and
ins
mov
cmps
jmp
push
je
add
mov
inc
or
es
jge
fild
or
or
xchg
maskmovq
div
mov
sub
or
adc
ss
xor
pop
mov
test
lods
sub
xchg
add
jo
xor
inc
add
jo
inc
add
mov
fstp
and
xor
xor
(bad)
int3
aam
and
fwait
setp
call
mov
or
dec
add
add
xor
loopne
pusha
fwait
inc
add
pushf
mov
and
test
mov
es
cs
mov
push
push
mov
sbb
xlat
and
je
cmp
je
adc
call
mov
cmp
jne
add
scas
call
push
mov
out
call
cmp
jne
mov
mov
or
add
call
(bad)
fucomip
call
pop
ret
mov
and
ds
repz
je
mov
mov
(bad)
fst
and
or
jmp
or
mov
rcr
call
add
push
mov
cmp
jne
xor
ja
sbb
out
jne
or
xor
add
loop
add
shl
adc
call
add
rol
je
mov
add
icebp
lods
add
adc
cmp
sub
cmps
enter
sahf
push
jno
xchg
mov
mov
lahf
call
out
jle
xor
je
push
add
je
jmp
lea
(bad)
ja
adc
lea
mov
std
iret
add
jb
pop
adc
push
(bad)
addr16
ret
mov
and
jg
push
call
mov
dec
add
rol
(bad)
dec
add
dec
add
shl
loopne
xor
or
jne
test
je
test
je
push
mov
dec
add
pusha
push
jg
lock
add
push
add
mov
cmp
hlt
and
and
push
mov
push
mov
mov
icebp
fst
repz
add
(bad)
inc
mov
cmp
je
cmp
jle
cmp
jl
inc
div
mov
shl
call
dec
or
enter
add
jmp
adc
push
pop
pop
in
or
imul
mov
jge
sbb
and
adc
in
mov
loopne
xchg
xor
shl
jno
dec
xor
test
push
popf
cmp
jmp
ret
stos
or
int
or
sbb
add
leave
je
imul
fadd
push
xor
cmp
setne
ja
inc
js
adc
(bad)
stos
(bad)
(bad)
jg
jl
mov
mov
mov
mov
add
add
jg
(bad)
jg
xor
cmp
mov
ret
push
push
lahf
clc
(bad)
loopne
gs
mov
push
or
into
inc
fwait
lds
call
repz
mov
mov
or
ins
mov
repz
mov
add
mov
adc
inc
mov
jne
push
inc
pop
cli
sbb
jne
sbb
pop
ins
clc
lock
iret
aam
pop
mov
aas
std
out
or
jb
jne
or
sub
neg
or
xchg
sbb
and
loopne
mov
and
pop
mov
add
dec
adc
inc
or
sbb
call
mov
mov
jmp
cli
xor
mov
mov
mov
lea
mov
cs
inc
ret
jle
cmp
jg
lea
add
mov
or
mov
out
or
sbb
js
sub
xchg
add
aam
mov
inc
jmp
inc
push
mov
jl
xchg
inc
clc
rcr
mov
cmp
jle
cmp
pop
cmp
fsub
cmp
jne
cmp
je
xchg
pop
loopne
jl
pop
sbb
mov
(bad)
pop
(bad)
or
ret
icebp
mov
inc
shl
mov
outs
sub
fwait
sub
cmp
je
adc
mov
test
mov
xor
lea
push
icebp
scas
push
test
jae
test
je
adc
cmp
je
jbe
push
ror
pop
adc
fdivrp
fwait
retf
sbb
xchg
rcl
pop
jge
scas
xor
(bad)
test
je
call
ds
push
or
push
push
add
sti
sbb
repz
jne
add
sbb
jle
ror
add
dec
je
inc
je
inc
jne
int3
cmp
jle
or
jmp
xor
jl
sahf
inc
inc
or
test
je
in
lahf
jnp
(bad)
or
push
push
pop
xchg
jns
jmp
push
xor
fst
retf
std
pop
xchg
jbe
gs
add
mov
(bad)
cmp
dec
pop
pop
cmp
inc
push
out
jmp
jne
push
(bad)
jne
jg
in
js
push
idiv
jne
sar
mov
test
jne
inc
pop
sbb
into
adc
push
mov
push
inc
rol
pop
out
js
mov
sbb
ds
add
and
jg
adc
add
jne
push
pop
dec
stos
jo
jae
dec
hlt
push
in
jmp
mov
icebp
clc
push
ret
out
sahf
jae
arpl
cmp
jl
clc
mov
push
lock
cmp
jae
push
cmp
jl
and
mov
mov
shl
push
mul
dec
hlt
fild
inc
jne
mov
mov
pop
inc
and
leave
ins
mov
(bad)
les
les
inc
mov
pop
data16
in
and
lahf
(bad)
pop
cwde
inc
or
jmp
jl
mov
cmp
mov
adc
adc
jne
dec
iret
cmp
mov
xchg
rol
sbb
pop
test
add
lds
jl
jge
add
push
mov
mov
xchg
jmp
push
push
mov
pop
xor
mov
or
div
or
mov
jb
adc
sbb
inc
(bad)
pop
sbb
push
push
mov
mov
xor
mov
push
ja
sub
inc
hlt
ja
add
cs
hlt
idiv
dec
loopne
push
pusha
push
adc
and
sub
push
std
es
cmp
jg
mov
mov
mov
jle
mov
or
std
sbb
aaa
int3
or
mov
jle
lock
push
mov
out
ss
rcl
shl
dec
add
cmp
icebp
loope
(bad)
jg
mov
dec
add
cmp
jg
jmp
mov
xor
and
dec
fdivr
ror
or
or
mov
fscale
mov
inc
mov
sar
xchg
adc
or
push
jecxz
js
jb
rcl
jbe
dec
jbe
jl
push
jg
mov
sub
sub
or
xlat
cmp
je
lahf
call
add
je
cmp
inc
jne
and
pop
(bad)
push
stos
adc
lahf
jp
les
or
push
cmp
je
sbb
jbe
pop
out
ja
and
mov
and
loopne
jp
add
call
add
shl
jle
sbb
jb
jbe
xlat
jmp
pop
or
push
push
cmp
(bad)
jne
push
push
xor
inc
push
push
sbb
jmp
mov
lock
xchg
xchg
cmp
jne
mov
adc
sbb
sbb
cmp
jne
or
or
inc
icebp
(bad)
jmp
rol
adc
sub
inc
cdq
rol
xor
add
pop
jg
clc
add
test
lock
les
and
dec
adc
push
imul
pop
and
inc
rcr
je
add
sub
push
mul
or
dec
cmp
je
mov
lea
mov
dec
mov
jmp
cld
sub
sti
fwait
sbb
xor
mov
push
mov
mov
add
adc
cmp
(bad)
(bad)
or
into
mov
sbb
mov
pop
adc
sbb
xor
das
es
or
xor
cmp
repnz
sbb
add
sub
cmp
jg
stos
mov
pop
cmp
(bad)
int
push
inc
sub
lea
int
sti
mov
retf
int
jne
cmp
sar
int
cmp
je
mov
add
jne
ins
mov
adc
mov
outs
not
jmp
cwde
sub
(bad)
cmps
xchg
mov
cmp
je
cmp
xchg
adc
pop
fucomip
push
mov
mov
mov
pop
mov
test
ror
or
popa
mov
xlat
jne
dec
mov
mov
add
inc
and
test
push
push
lea
shl
gs
imul
cmpxchg8b
das
lock
add
pop
daa
mov
xor
mov
push
push
(bad)
loopne
cmp
or
add
jmp
rcl
(bad)
clc
loope
add
sti
jne
push
cdq
fist
cld
int3
je
push
xor
mov
aaa
test
add
cmp
mov
cmp
jne
adc
and
sub
in
enter
daa
test
or
mov
jne
ds
pop
add
cmp
je
pop
jmp
inc
data16
test
mov
cmp
mov
fdiv
rol
cmp
fcomp
bound
jns
lea
sbb
lods
adc
push
push
(bad)
jmp
inc
cmp
inc
in
push
fnstsw
fs
push
call
mov
dec
fcom
jle
or
(bad)
jne
cmps
or
out
loopne
sar
(bad)
push
(bad)
jne
mov
mov
cmp
repnz
jne
xor
mov
fild
test
add
ret
adc
rol
fdivr
cmp
cmp
ficom
xchg
adc
rcr
push
das
pop
dec
pop
es
jmp
fadd
sar
xchg
idiv
jne
jne
int
(bad)
aas
jne
push
fcomp
cmp
je
mov
push
push
fbld
pop
sbb
cmp
cld
xchg
jge
lea
dec
cs
jl
jno
out
and
loopne
jne
cmp
shufps
(bad)
mov
adc
call
pop
or
or
outs
call
or
jg
sbb
cmp
ds
push
pop
je
push
inc
loopne
test
(bad)
aam
sub
push
out
icebp
sbb
sbb
ror
xlat
psubsw
cli
mov
lea
sub
jecxz
sbb
(bad)
cmp
push
and
pop
daa
repnz
adc
add
cmp
je
inc
add
xchg
jecxz
js
dec
sbb
mov
dec
ffree
jmp
ret
jne
mov
mov
fdivr
pop
(bad)
dec
gs
cmp
je
inc
push
push
inc
sub
xor
push
fld
mov
push
loop
xor
nop
or
(bad)
jmp
inc
and
pop
mov
sbb
in
adc
pop
dec
shl
dec
test
(bad)
rcr
inc
jae
sub
shl
ret
loope
lods
(bad)
(bad)
int3
mov
add
mov
stos
push
push
mov
push
outs
mov
adc
pop
or
mov
fnsave
or
imul
add
imul
stc
pop
scas
add
push
in
mov
icebp
and
int3
mov
mov
cld
inc
fcomp
push
cs
push
cld
call
cmp
rcr
test
xsave
add
test
sti
fist
pop
mov
and
mov
mov
push
pusha
add
sbb
push
add
or
pop
jne
cmp
je
cmp
push
jne
outs
or
hlt
push
ret
lods
pop
mov
or
push
je
mov
mov
lea
mov
mov
sub
dec
test
mov
jle
push
(bad)
call
stos
jae
sub
jmp
cmp
je
mov
sar
aas
mov
lea
adc
add
jmp
mov
mov
push
shl
int3
pop
mov
jne
clc
or
pusha
or
jmp
or
je
fwait
neg
inc
and
enter
fnstsw
pop
ret
test
and
add
dec
add
jle
(bad)
dec
mov
mov
inc
movzx
jmp
movsx
pop
loop
pop
fcomip
out
test
jne
or
ret
inc
ret
dec
push
mov
jmp
out
pop
add
mov
mov
(bad)
jmp
add
out
jbe
inc
out
push
inc
or
jo
mov
add
fnstenv
jg
add
or
push
jmp
mov
shr
mov
dec
in
inc
xor
add
lea
add
maskmovq
test
call
movs
mov
out
jle
inc
lods
mov
sbb
test
mov
mov
mov
mov
sbb
je
mov
and
inc
cmp
mov
(bad)
jg
mov
mov
cmp
jl
cmp
jg
movsx
movsx
pop
jne
loopne
pop
movsx
sar
pop
cmp
(bad)
(bad)
inc
mov
ja
jmp
xor
or
mov
mov
mov
icebp
(bad)
mov
mov
and
add
call
out
jg
lea
pop
dec
dec
je
or
dec
adc
test
cmp
mov
or
adc
adc
sti
push
inc
or
add
sbb
ins
cli
arpl
mov
add
pop
test
mov
movsx
clc
int3
in
and
inc
xchg
gs
xchg
in
add
enter
sbb
inc
enter
(bad)
adc
sti
dec
je
cmp
je
cmp
je
cmp
jne
or
mov
call
xor
adc
jg
xor
push
inc
inc
sub
ins
sbb
pop
xor
jg
jge
dec
fs
je
test
lahf
aas
jg
je
bound
test
loop
mov
gs
add
movs
add
mov
test
adc
lea
mov
in
mov
pusha
fstp
inc
pop
mov
test
clc
addr16
gs
fwait
clc
clc
pop
jg
ret
inc
je
call
ja
ja
add
call
add
inc
shl
or
(bad)
or
cld
enter
jne
inc
jg
in
dec
mov
mov
je
rcl
out
pop
popa
xor
inc
xor
xchg
jmp
or
add
out
add
lea
mov
jge
dec
or
adc
in
pop
jbe
je
movsx
push
lea
in
mov
ret
or
mov
push
push
(bad)
mov
call
call
std
je
dec
jne
sti
(bad)
mov
loope
fimul
test
stos
fbld
mov
add
or
jmp
jnp
mov
das
test
test
mov
push
idiv
jmp
test
movsx
mov
je
cdq
sub
sar
mov
cld
sbb
sub
push
or
cmc
nop
cli
push
cmp
jne
jmp
in
add
cli
cmp
jle
enter
jge
jle
or
lock
add
pop
out
lahf
fmul
lea
mov
mov
inc
ja
mov
sub
fbld
mov
in
sbb
push
push
mov
call
lock
add
and
icebp
mov
push
call
shl
rcl
cmp
jmp
inc
es
inc
sbb
adc
jne
int3
call
call
add
dec
pop
dec
pop
jmp
shl
test
std
(bad)
dec
xchg
and
jne
or
daa
fs
dec
cmp
je
inc
adc
pop
push
movs
repz
ror
jmp
pop
imul
pop
dec
and
and
xchg
mov
test
cwde
hlt
(bad)
mov
test
mov
add
mov
mov
mov
cmp
retf
mov
or
rcr
icebp
dec
pop
int3
das
je
mov
mov
ins
pop
mov
jmp
pop
mov
inc
jbe
out
sub
aas
(bad)
outs
ret
sub
ret
inc
je
ja
jmp
movzx
jmp
(bad)
mov
jne
xor
or
sar
jl
test
jae
neg
ja
mov
neg
jo
test
mov
mov
jne
and
clc
sbb
jge
leave
adc
jmp
and
test
or
jne
mov
lea
cmc
jg
dec
test
jg
sbb
inc
rcr
or
mov
add
cmp
mov
pop
jle
add
mov
dec
jmp
outs
js
fisttp
inc
xchg
add
sbb
test
les
xor
cmp
(bad)
mov
movs
adc
es
je
out
sbb
sub
je
adc
sub
or
or
xor
add
mov
jne
test
jne
push
lea
push
ffreep
xchg
je
jne
mov
jg
jg
lea
out
in
test
pop
je
add
sysret
(bad)
cmp
xor
movs
add
aaa
mov
rol
inc
fimul
dec
mov
pop
lock
add
test
loop
pop
inc
in
sub
mov
(bad)
jnp
inc
pop
cmp
pop
jne
jmp
push
fistp
sbb
pop
pop
loope
je
cmp
je
jg
test
pop
mov
mov
mov
mov
(bad)
call
mov
aad
or
(bad)
sar
jg
ret
mov
mov
dec
add
cmc
dec
add
fwait
(bad)
fild
jl
xor
push
push
mov
jge
xchg
rcr
xlat
dec
mov
sbb
cmp
or
jnp
or
mov
pop
(bad)
mov
xor
cmp
call
mov
je
and
mov
pop
mov
dec
push
aam
push
dec
mov
add
jge
pop
mov
mov
mov
lea
push
push
push
mov
or
inc
add
add
or
pop
inc
dec
(bad)
mov
rcl
add
jp
(bad)
frstor
mov
cmp
je
cmp
jl
jg
aam
jmp
xchg
mov
xor
leave
mov
jmp
push
dec
add
out
or
xor
inc
mov
rcr
div
cmp
mov
cmp
ret
ret
popa
sbb
or
inc
push
adc
mov
daa
ds
or
mov
mov
out
and
std
push
push
mov
inc
dec
je
cmp
jne
stc
aas
add
cmp
fnstenv
cmp
push
cmp
bound
mov
pusha
add
or
add
mov
fdiv
dec
mov
lock
dec
out
add
mov
(bad)
cmp
inc
mov
cmp
jge
and
pop
loope
sti
pop
cmp
je
neg
mov
pop
mov
or
sbb
retf
ror
add
inc
jge
int3
idiv
adc
dec
pop
idiv
cmp
jne
sar
ror
sbb
jne
lea
jmp
mov
shl
add
retf
push
add
or
jae
xchg
arpl
add
(bad)
mov
pop
inc
push
mov
idiv
(bad)
cld
mov
cdq
idiv
mov
pop
push
sub
mov
dec
mov
adc
jg
shr
add
add
lea
jp
inc
adc
rol
in
(bad)
(bad)
inc
add
cmp
jg
lea
jmp
add
cmp
jne
cmp
cmps
dec
push
dec
es
mov
jmp
cli
xor
lock
sub
xor
out
pop
jmp
fxam
sbb
(bad)
aas
aaa
test
xor
loope
or
add
imul
add
stos
sbb
jge
add
add
mov
out
cmps
outs
or
ror
into
std
icebp
jmp
add
or
(bad)
out
or
add
dec
jmp
mov
(bad)
enter
addr16
sbb
mov
(bad)
in
push
xor
cmp
loop
arpl
xor
push
mov
inc
cmp
or
sub
test
cmp
dec
pop
cmp
add
mov
push
cmp
cmp
adc
sti
out
jmp
push
sbb
or
push
jmp
adc
outs
(bad)
xchg
stc
push
push
push
push
jge
pusha
out
hlt
or
ja
cmps
jmp
add
data16
xlat
jge
sti
cmp
and
into
mov
pop
adc
das
out
mov
jmp
adc
push
jmp
push
add
push
push
push
pop
push
pop
jno
push
push
cld
leave
test
mov
(bad)
aas
popa
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
(bad)
sbb
shr
pusha
repnz
jg
cmp
jle
ret
fisttp
and
test
inc
add
add
ret
lock
rdpmc
leave
cmp
mov
jmp
push
xchg
lock
out
push
push
xchg
xor
xchg
daa
pop
fimul
cld
cmp
dec
inc
or
bnd
sbb
push
push
push
or
mov
clc
pop
jg
lods
mov
xor
pop
data16
push
mov
push
(bad)
jmp
mov
stc
lea
mov
movzx
sub
(bad)
(bad)
jmp
push
mov
sar
push
mov
movzx
test
pop
pop
je
(bad)
call
ja
mov
mov
pop
jmp
mov
xor
mov
inc
push
push
stos
ss
cld
push
lea
jp
push
xchg
(bad)
aas
pop
xchg
and
leave
ret
movzx
and
leave
ret
dec
fadd
ret
mov
push
call
pop
push
or
ja
sbb
adc
and
test
div
repz
pop
push
mov
pop
pop
je
mov
call
jmp
aaa
mov
add
adc
add
mov
jmp
(bad)
mov
sahf
(bad)
jmp
push
call
pop
pop
jge
dec
inc
out
dec
dec
mov
adc
ret
pop
in
inc
ret
and
and
int3
adc
cdq
mov
inc
or
ficom
out
addr16
adc
inc
pusha
mov
ror
adc
or
cmp
daa
or
dec
(bad)
hlt
std
shr
mov
mov
vmptrld
or
js
je
mov
jns
out
dec
cmp
or
xor
push
sar
inc
dec
mov
dec
mov
adc
cmp
jne
push
add
pop
outs
cmc
sbb
sbb
pop
dec
and
pop
push
inc
or
out
lds
xchg
or
xchg
loope
repz
push
push
mov
je
mov
push
(bad)
push
mov
ja
je
push
jecxz
xchg
call
cmp
sub
xor
ror
and
js
addr16
cmp
dec
sub
or
adc
call
inc
xor
inc
inc
cmp
sub
or
pop
mov
cmp
add
loopne
pop
pop
mov
add
aaa
leave
ins
add
adc
ins
jmp
repnz
inc
mov
test
hlt
mov
jmp
scas
rcr
scas
adc
call
sub
idiv
int3
int3
scas
sub
push
dec
add
cmp
or
jne
mov
mov
ins
imul
adc
outs
fstp
push
mov
(bad)
jne
mov
sbb
(bad)
jge
pop
pop
pop
leave
ret
add
fs
or
outs
lea
or
or
sar
daa
adc
in
sbb
add
push
push
scas
push
loop
jg
(bad)
jmp
lea
jmp
lea
jmp
lea
jo
icebp
mov
push
je
mov
and
je
add
jnp
xlat
adc
adc
mov
sbb
addr16
test
je
sbb
clc
xor
div
inc
je
add
and
shl
add
or
scas
or
inc
add
or
xchg
add
sbb
xchg
mov
adc
mov
sbb
add
add
js
aad
inc
mov
or
adc
mov
in
mov
jmp
fmul
jp
pop
icebp
push
fdivrp
adc
adc
dec
pop
cmp
jne
push
lea
sbb
stos
jle
cld
xor
sbb
lock
jmp
pop
clc
push
dec
add
lock
sbb
jg
push
mov
inc
lock
mov
pushf
cmps
pop
cmc
pop
inc
std
dec
pop
leave
ret
or
mov
outs
xor
fwait
call
mov
cmp
je
mov
push
call
fstp
retf
pushf
jmp
lahf
mov
je
mov
sar
add
mov
into
adc
mov
push
push
shl
push
out
leave
lock
call
push
jle
or
push
ins
ins
mov
dec
or
or
add
cmp
jbe
adc
test
add
push
push
mov
mov
xor
xchg
and
cdq
fist
int3
push
push
hlt
test
test
push
stc
sbb
and
add
sub
es
or
jg
iret
push
movs
jbe
test
gs
inc
(bad)
mov
cmp
jne
mov
mov
mov
inc
mov
mov
mov
mov
sub
pop
(bad)
(bad)
std
add
jmp
cmp
je
inc
mov
test
jne
sti
call
add
or
cmp
sbb
(bad)
dec
out
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
pop
jno
inc
dec
fld
fcomp
fnstsw
test
mov
shr
push
add
je
dec
call
leave
pop
pop
mov
mov
dec
mov
mov
leave
ret
add
loope
cmp
or
call
cmc
outs
mov
push
arpl
test
ins
adc
cmp
and
or
adc
dec
lahf
shl
cmp
sete
mov
add
mov
fnsave
jne
mov
lea
mov
inc
(bad)
jg
jle
adc
or
leave
cmp
push
lds
cmp
enter
lods
loope
xlat
xchg
sub
test
add
inc
or
add
mov
dec
jns
neg
dec
cmp
jl
cdq
pop
in
jmp
pop
idiv
add
mov
inc
cmp
(bad)
add
mov
(bad)
pop
rol
push
sub
jmp
mov
push
mov
dec
in
hlt
xor
jo
mov
add
xchg
mov
lea
push
lea
push
xor
cmp
(bad)
test
setg
add
sub
ret
add
sbb
xchg
es
shr
es
inc
add
pop
mov
ja
ret
and
leave
sbb
inc
and
inc
or
push
pop
loop
loopne
jle
rol
xor
add
hlt
out
sbb
inc
(bad)
inc
sar
imul
mov
add
inc
mov
or
adc
sti
inc
mov
jbe
inc
test
jge
neg
fs
cmp
jl
pop
fcmovnbe
add
push
push
adc
add
fmul
or
push
or
adc
push
mov
add
or
mov
out
add
fwait
adc
sti
in
add
(bad)
adc
jb
add
ins
lahf
inc
or
fdiv
ror
ret
pop
jne
je
es
test
sbb
cmp
adc
cmp
jge
sub
mov
cmp
(bad)
jne
mov
push
cs
jmp
out
rol
jne
adc
adc
cmp
je
inc
push
xor
sub
loopne
add
mov
mov
xchg
cdq
retf
sub
push
lds
adc
sti
xor
jae
jno
ret
push
fist
or
sub
fld
out
xlat
fstp
fld
inc
lock
fmul
fsubr
fstp
aad
(bad)
call
sbb
imul
xor
fsubr
mov
test
push
and
inc
je
add
std
repnz
daa
push
in
fsubr
sbb
pop
xchg
push
cmc
sub
inc
xchg
cmps
loop
and
mov
sub
(bad)
or
inc
jmp
jge
inc
cmp
add
retf
add
jmp
mov
(bad)
aas
into
js
add
push
inc
das
sub
out
pop
jne
or
sar
cmc
or
adc
sar
cmp
pop
xor
popf
test
sbb
addr16
mov
stos
and
or
(bad)
rol
pop
je
jg
addr16
loopne
push
lea
sub
in
ss
xchg
loop
(bad)
hlt
add
add
test
pop
mov
hlt
(bad)
lock
push
data16
xchg
dec
xor
cmp
mov
shl
dec
test
test
leave
(bad)
out
out
mov
pop
add
mov
push
pop
inc
sbb
(bad)
cmp
jb
cmp
ja
movzx
cwde
enter
ja
test
pop
dec
int
aam
(bad)
jg
mov
mov
mov
jmp
dec
sub
je
jmp
gs
sub
rol
add
repnz
inc
mov
dec
fadd
or
pop
popf
int3
fadd
(bad)
push
fwait
xor
lea
add
dec
inc
std
fcomp
mov
movzx
adc
(bad)
bound
and
sbb
in
mov
aas
aam
lea
jmp
mov
inc
add
adc
cmp
push
mov
je
cmp
(bad)
clc
ja
test
add
rcr
les
sub
jne
mov
(bad)
(bad)
inc
mov
cmp
jne
mov
cmp
jne
add
or
in
inc
cs
cmp
xor
jg
inc
mov
add
test
or
imul
pop
and
mov
push
lea
(bad)
mov
cmp
rcl
ins
ret
int3
addr16
lea
mov
fwait
jmp
enter
(bad)
(bad)
je
push
mov
test
jne
jmp
cli
push
mov
clc
ret
(bad)
jg
test
mov
test
or
mov
dec
and
test
mov
mov
test
shr
or
ds
mov
add
inc
cmp
jl
add
mov
inc
dec
add
stos
int3
jge
loope
inc
aam
jecxz
mov
out
mov
cwde
mov
mov
push
mov
sbb
inc
popa
adc
mov
jecxz
add
push
dec
dec
mov
jmp
add
mov
dec
jne
shl
fadd
mov
add
addr16
mov
mov
pop
push
mov
adc
nop
dec
inc
lea
mov
adc
jmp
or
aas
push
push
add
jne
stos
mov
in
cld
ret
add
aam
aam
xchg
aam
sub
(bad)
cli
mov
push
cld
aam
inc
fcomp
cld
(bad)
add
push
sub
std
fstp
cdq
add
(bad)
jmp
mov
jmp
(bad)
push
aad
loopne
das
push
je
lods
std
(bad)
push
aaa
adc
test
movs
add
dec
adc
and
int3
inc
fldpi
or
aaa
jmp
adc
jne
sub
or
mov
movs
sti
cmp
inc
jg
inc
movs
add
mov
cmps
std
add
jge
mov
je
leave
sub
cmp
test
fcomi
enter
mov
or
in
icebp
fcom
push
aas
inc
fld
test
xchg
jne
dec
cmp
icebp
aam
adc
test
jmp
mov
rol
mov
add
hlt
aam
dec
aam
push
enter
shl
icebp
fld
jl
test
mov
je
int3
mov
pop
mov
std
inc
fsubr
je
dec
sub
add
sub
jmp
test
je
pop
and
(bad)
pusha
sbb
pop
mov
sub
sub
inc
cmc
cmp
hlt
cmp
push
(bad)
idiv
fsubrp
jp
cmc
enter
scas
call
daa
or
adc
push
not
xchg
mov
inc
mov
test
jle
push
std
daa
std
mov
mov
aad
dec
mov
enter
nop
into
mov
jle
push
adc
jge
mulps
rol
jge
lds
retf
cmc
(bad)
jbe
hlt
rcr
lea
call
pop
ins
mov
pushf
cmp
mov
hlt
test
pop
push
inc
aam
loopne
ins
movs
and
not
retf
(bad)
or
adc
add
dec
add
add
lods
in
sbb
push
cmp
mov
adc
cmp
jne
inc
mov
add
push
push
sub
mov
(bad)
pop
pop
je
je
std
popf
or
call
or
jb
push
sub
pop
and
cs
aam
add
xor
(bad)
inc
pop
lea
mov
or
add
std
mov
pop
or
das
jns
push
test
imul
ret
sar
xor
jbe
or
or
mov
cmp
inc
in
adc
jne
or
mov
sub
sbb
mov
and
fwait
inc
lea
or
ja
je
test
je
mov
add
jmp
data16
sti
xor
pop
mov
mov
and
push
(bad)
(bad)
(bad)
mov
pop
add
jae
movzx
mov
mov
jmp
add
scas
das
dec
xor
push
or
or
into
add
cli
in
mov
inc
cld
movzx
shl
dec
call
mov
movzx
push
xor
cmp
push
jp
(bad)
dec
add
cld
je
cmp
je
adc
mov
push
fist
into
add
or
js
into
add
or
test
inc
cmp
jg
je
sub
je
sub
je
sub
je
jo
fist
add
cmp
jne
add
or
aas
call
leave
jbe
jne
adc
or
rol
dec
cld
(bad)
inc
test
jne
and
and
or
or
jg
aad
mov
cmp
enter
call
je
push
sub
push
jne
test
jne
or
cdq
jmp
cmp
jne
mov
(bad)
mov
mov
push
sbb
ja
sbb
into
sub
cmp
gs
inc
sub
pop
dec
jne
sbb
aad
imul
cld
(bad)
call
add
mov
cmp
pop
jge
xor
jmp
mov
inc
or
ja
std
call
mov
mov
mov
mov
pop
lock
push
cli
dec
mov
dec
inc
inc
pop
cld
xor
mov
add
adc
mov
ret
je
mov
jmp
cmp
jge
lea
xor
icebp
or
mov
sub
cmp
(bad)
cli
aas
sbb
rcr
inc
jmp
mov
popa
shl
push
sbb
or
sub
cmp
je
jae
cmp
stos
fsub
ins
fdivrp
ins
mov
push
ss
adc
sbb
jmp
mov
sub
arpl
or
fstp
add
(bad)
(bad)
sti
je
mov
mov
mov
mov
mov
or
mov
or
mov
mov
and
inc
cli
add
(bad)
in
adc
add
sbb
pop
or
pop
xor
inc
in
jmp
cwde
dec
inc
sub
xchg
call
sub
int
add
add
jne
mov
sbb
pusha
add
add
jg
icebp
or
popa
add
xor
cmp
sub
add
cmp
add
std
call
push
push
push
push
mov
push
lea
inc
(bad)
fcom
call
ja
pop
fmul
add
rcl
mov
(bad)
jg
jns
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
dec
pop
(bad)
clc
jb
cmp
je
add
dec
adc
jg
add
test
je
test
jno
inc
cld
je
xor
inc
jmp
(bad)
push
inc
cmp
jae
cmp
(bad)
jae
mov
push
push
push
cmp
add
jge
dec
jnp
mov
lea
push
inc
push
and
call
pop
xor
aad
shl
mov
cmc
mov
mov
call
inc
inc
or
call
mov
pop
ret
xor
add
aad
pop
ret
cmp
mov
jb
inc
ret
push
pop
sbb
push
sete
pop
ret
mov
inc
out
fadd
sub
adc
add
jne
push
mov
pxor
inc
aam
xor
ror
inc
or
or
sbb
sub
push
add
rol
and
js
jnp
and
xor
mov
adc
add
ret
mov
cmc
out
or
mov
jmp
add
push
sar
loop
cmp
add
cmp
jb
jbe
(bad)
aas
loop
sub
mov
mov
adc
add
shr
push
ja
jnp
js
mov
lea
dec
lock
dec
test
mov
xlat
sbb
sbb
mov
mov
(bad)
(bad)
call
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
sar
add
dec
or
cmp
fild
(bad)
dec
dec
add
shl
pop
mov
and
lea
and
pushf
mov
cmc
dec
push
pop
add
pop
or
pop
add
scas
and
dec
add
mov
imul
mov
push
or
out
xchg
jne
clc
and
hlt
jne
mov
pop
clc
sar
push
mov
dec
pop
cmp
jbe
out
ins
dec
dec
clc
xor
(bad)
cmp
je
mov
inc
cmc
dec
jno
cmp
jne
cmp
popf
xor
fbstp
mov
shr
not
and
add
sbb
mov
sbb
jo
mov
inc
or
or
ss
cmp
cmp
mov
lea
mov
fbstp
sub
mov
dec
add
cmp
jne
mov
mov
dec
paddd
inc
mov
jae
cmp
jne
mov
test
out
or
jmp
or
or
xchg
or
jmp
and
push
sbb
test
iret
and
adc
cs
jmp
inc
cld
and
mov
dec
add
jne
jno
pop
aad
mov
or
icebp
jg
scas
push
add
mov
(bad)
push
push
call
pop
xor
push
jnp
in
mov
push
mov
sbb
movs
mov
add
dec
or
cmp
jne
and
adc
jnp
aas
cmp
jne
push
or
call
adc
jo
or
(bad)
sti
(bad)
cmp
add
shl
mov
sub
add
pop
sub
lea
push
lea
push
jg
(bad)
sti
hlt
push
or
or
jbe
sub
pop
push
movs
dec
sbb
mov
in
push
mov
or
lds
lea
gs
push
movs
push
mov
shl
xor
sub
les
add
xor
add
xor
jnp
(bad)
mov
pop
aas
std
(bad)
cmp
inc
push
push
push
fdivrp
das
fcos
sbb
jbe
ins
clc
jmp
or
mov
or
(bad)
sti
mov
inc
or
mov
pop
pop
(bad)
dec
rol
mov
push
xor
jmp
shl
inc
dec
out
inc
ret
imul
inc
aas
(bad)
(bad)
(bad)
clc
pop
mov
mov
add
dec
jne
push
mov
enter
add
inc
mov
or
fimul
cmp
adc
xchg
add
add
cli
mov
ja
mov
sbb
iret
shr
lea
inc
or
or
mov
mov
pop
out
(bad)
inc
inc
cld
lock
push
add
sub
inc
out
or
or
jne
mov
clc
mov
inc
lea
mov
mov
lea
or
xchg
(bad)
call
inc
mov
mov
inc
test
scas
std
cmps
sbb
mov
jne
or
imul
or
aam
adc
sbb
aam
jne
push
lods
aas
and
jmp
sub
pop
shr
mov
hlt
mov
add
dec
cmp
lea
mov
mov
mov
mov
test
jne
add
cmp
jg
stc
add
sub
ffreep
stc
aas
loopne
push
push
pop
pop
mov
cmp
cmc
cmps
shr
out
outs
clc
lea
test
(bad)
jnp
mov
pushf
nop
fsubrp
dec
std
(bad)
mov
repz
add
jg
mov
mov
sub
add
jne
aaa
push
dec
jle
cld
dec
cld
fbld
cmp
lea
imul
hlt
lea
mov
scas
push
adc
adc
add
dec
or
call
jne
mov
mov
dec
jmp
mov
jae
cmp
pop
mov
dec
iret
sbb
iret
jmp
sbb
dec
loopne
inc
test
adc
inc
push
jae
fcomip
jg
lea
mov
mov
out
or
inc
add
xor
clc
sbb
inc
enter
jge
jg
pop
or
jne
lea
mov
lea
mov
sar
dec
cmp
retf
cmp
pop
test
add
mov
push
sbb
ret
jb
push
(bad)
jo
mov
or
popa
pop
cmp
push
dec
mov
dec
outs
lea
outs
mov
ja
add
ja
mov
jno
mov
jne
mov
dec
xchg
(bad)
jo
hlt
lea
mov
mov
mov
or
add
cmp
push
xor
mov
into
ds
popf
cmp
ins
std
or
push
into
sbb
loopne
and
sbb
add
push
dec
loopne
xor
mov
mov
adc
inc
pusha
xchg
sti
sub
dec
arpl
add
jne
clc
pop
and
push
mov
(bad)
mov
lea
sbb
or
or
jmp
cmp
jg
shl
xor
shr
mov
mov
jne
cmp
(bad)
(bad)
out
fucomip
adc
mov
and
and
or
jne
add
cmp
mov
jb
out
cdq
mov
pop
jne
mov
jmp
and
fsub
cmp
add
call
sbb
icebp
cs
adc
and
mov
mov
pop
mov
and
mov
lea
mov
and
or
mov
jne
mov
(bad)
fld
cld
add
mov
(bad)
xlat
je
idiv
mov
inc
xor
and
jne
gs
in
mov
pop
jmp
cmp
rcr
jb
add
ror
mov
lock
jne
xchg
adc
popf
sub
push
lock
mov
mov
cmp
jne
xor
inc
test
dec
dec
hlt
mov
mov
je
mov
xchg
add
pop
icebp
pop
pop
jmp
cld
outs
mov
dec
or
cmp
jge
mov
adc
sti
ja
cld
lea
mov
and
mov
dec
jne
mov
into
dec
(bad)
in
mov
and
jmp
push
mov
cmp
sbb
rdtsc
jne
and
and
call
cmps
add
inc
clc
add
add
jns
jo
push
lock
mov
dec
mul
or
or
xor
xchg
pop
mov
mov
pop
mov
mov
jge
cmp
xchg
dec
out
or
mov
cld
or
push
and
mov
or
cld
lea
dec
loopne
shr
or
fild
or
dec
adc
imul
shr
adc
and
lea
mov
jne
cmp
sbb
pop
in
mov
mov
lea
sti
lea
retf
xacquire
movs
fdiv
jg
lds
push
xor
cmp
sti
jg
or
mov
shl
cmp
dec
cdq
or
jp
movs
call
rol
mov
in
push
add
stc
cld
push
je
sub
push
mov
imul
ret
adc
mov
or
mov
cmc
cmp
jbe
push
mov
sub
clc
cmp
add
mov
xor
or
or
mov
lods
inc
lock
lea
pop
add
pop
and
cli
daa
jge
fsubr
mov
out
jbe
push
push
cmp
int3
push
fldcw
mov
inc
pop
cmpxchg
and
push
lea
lahf
add
push
push
outs
call
aam
movs
je
adc
sbb
mov
loope
popa
adc
add
je
push
(bad)
jo
or
cmp
mov
sbb
ins
or
pop
je
imul
loopne
call
jmp
call
push
push
push
repz
pop
cmp
push
mov
adc
(bad)
cmp
sbb
add
lea
cmp
jb
test
jae
sbb
xor
je
mov
pop
lods
mov
test
pushf
je
jg
sti
add
or
rcpps
xchg
je
mov
jmp
pop
mov
clc
enter
jg
mov
mov
sar
(bad)
aaa
hlt
daa
lea
retf
push
and
mov
jg
call
inc
add
add
cmp
jl
or
ror
sbb
call
jmp
cmp
pop
rcl
jmp
cmp
sbb
stc
xchg
adc
pop
inc
or
xor
adc
xor
jmp
cmp
xchg
adc
jmp
or
stc
xchg
xor
gs
(bad)
(bad)
(bad)
mov
mov
jmp
jmp
call
dec
fdivr
or
adc
sbb
sbb
pop
xor
cdq
add
add
or
stc
and
data16
fnsave
and
shl
and
push
ror
xchg
ror
out
inc
jmp
adc
ja
inc
inc
sub
leave
jne
ret
push
push
mov
pop
push
xor
xor
cmp
jne
imul
push
cmp
je
inc
push
adc
inc
add
push
cmp
jne
adc
out
add
add
pop
(bad)
(bad)
push
hlt
fstp
sbb
cmp
sub
push
jmp
or
or
cmp
pop
je
fwait
cmp
add
mov
je
xor
(bad)
cdq
add
lea
cmp
jne
dec
cwde
sbb
call
ss
cli
pop
cmps
pop
ret
jmp
or
pop
mov
js
jmp
(bad)
dec
cmp
lock
xor
cmp
mov
mov
mov
(bad)
mov
add
push
cmp
xor
pop
cmp
jne
sub
and
ret
mov
pop
jmp
inc
test
je
sbb
fld
ret
dec
cmp
je
add
fnsave
and
inc
and
cmp
je
jae
and
or
ret
jae
mov
jmp
sub
jmp
pop
aaa
xchg
mov
push
add
xor
jmp
add
ret
inc
xchg
pop
je
add
ret
and
jmp
cmp
cmp
jne
mov
jmp
xor
xor
cmp
push
jle
push
or
dec
or
jmp
mov
mov
add
mov
inc
dec
jne
mov
div
mov
xchg
pop
add
push
fadd
loop
add
repnz
es
fisttp
adc
cmp
outs
call
add
dec
out
cmp
daa
loop
mov
push
push
mov
mov
call
mov
or
cmp
cmp
fimul
mov
(bad)
out
imul
clc
lea
shr
mov
out
dec
push
test
stos
mov
dec
es
fstp
fdiv
and
adc
and
xor
push
xchg
scas
push
push
mov
mov
cwde
and
xor
xor
rol
jne
call
mov
sbb
and
pop
idiv
pop
mov
cmp
jne
push
pop
mov
loop
out
and
jne
cmp
jne
ss
fstp
mov
(bad)
je
cmp
sbb
push
mov
sub
inc
inc
mov
mov
clc
cmp
pop
jne
fwait
add
or
sbb
and
mov
pop
and
in
lock
out
(bad)
clc
add
ret
jne
call
jmp
lahf
cmp
mov
je
or
push
push
pandn
je
push
add
in
je
add
push
mov
jne
inc
inc
mov
(bad)
std
aaa
sub
ret
pop
mov
je
inc
std
mov
je
mov
mov
sub
daa
sti
out
adc
clc
sub
push
push
push
push
push
test
je
(bad)
hlt
fstp
pop
add
or
jne
push
clc
pop
push
jmp
push
call
pop
pop
pop
pop
pop
pop
mov
mov
xchg
adc
sbb
pop
inc
shl
pop
(bad)
mov
js
sbb
sub
addr16
sbb
push
(bad)
loope
or
xor
jmp
pusha
add
(bad)
jmp
and
sti
sbb
adc
or
push
push
mov
push
push
push
call
mov
je
add
add
neg
push
push
and
push
call
cli
or
or
mov
lds
xor
pop
mov
mov
clc
or
mov
and
jne
ins
add
mov
mov
jmp
or
sar
neg
inc
inc
add
mov
mov
add
fisub
lea
push
call
jl
inc
add
test
xor
cmp
mov
cs
dec
dec
lea
xchg
mov
cmp
jl
mov
cmp
(bad)
jge
mov
jo
and
in
fnstcw
or
mov
mov
jg
add
inc
jl
jmp
mov
jbe
adc
jle
jle
mov
(bad)
fist
dec
add
rol
dec
test
jne
test
xor
cmp
retf
in
addr16
push
inc
dec
mov
mov
mov
lea
mov
or
clc
xor
or
cmp
mov
xchg
xor
pop
lea
cmp
outs
test
mov
aas
lock
add
jns
ret
adc
sar
xchg
add
or
data16
xor
aaa
cmp
cli
inc
or
jmp
cmp
jne
sbb
mov
test
pop
jmp
jmp
add
add
mov
push
sti
call
or
fwait
sub
mov
test
jne
mov
(bad)
mov
dec
or
(bad)
cmp
jae
mov
jmp
or
(bad)
push
pop
and
es
or
stc
push
retf
or
(bad)
sub
clc
add
inc
or
clc
ja
loopne
jbe
pop
in
inc
clc
cmp
jb
out
stc
cmp
jae
dec
and
sar
cmp
nop
mov
repz
fwait
test
sahf
out
push
loopne
out
hlt
inc
shr
push
dec
add
inc
cmp
add
dec
test
je
mov
data16
inc
cld
cmp
loop
cmp
rol
movs
jne
cli
(bad)
(bad)
fcomp
or
jg
fldenv
js
add
mov
adc
dec
add
jbe
pop
inc
or
fdiv
std
(bad)
mov
fidiv
test
jne
push
push
mov
jge
(bad)
(bad)
(bad)
dec
mov
jle
lea
icebp
(bad)
cmp
je
dec
sub
test
jg
push
sub
retf
jg
mov
(bad)
(bad)
std
cs
jl
lea
cmp
mov
mov
jle
cmp
sbb
mov
add
sti
jle
and
jle
mov
sbb
rol
test
sub
ret
(bad)
adc
jo
test
jl
adc
dec
jns
test
jge
call
jge
inc
mov
je
retf
mul
pop
stc
(bad)
lea
inc
cmp
cli
jle
and
mov
sar
into
bound
das
dec
xor
inc
push
xor
call
xor
push
dec
push
push
add
hlt
and
jmp
jbe
pushf
push
add
inc
in
je
mov
jl
jge
mov
jmp
int3
ja
out
call
test
pop
pop
sar
jne
pushf
jae
add
bnd
jmp
nop
mov
sub
loop
add
inc
in
or
mov
mov
pop
mov
ja
mov
mov
xor
cmp
push
ja
das
dec
sar
adc
adc
push
adc
dec
mov
xor
push
mov
push
push
lea
push
or
sbb
(bad)
je
add
fs
pop
pop
outs
lahf
cdq
mov
scas
(bad)
jmp
or
inc
add
ret
data16
cmp
add
fwait
or
cmp
mov
call
inc
add
cmp
fild
or
push
pmaxsw
pop
lock
cmp
fisttp
or
or
unpcklps
rol
add
je
sbb
lock
loop
or
fistp
inc
inc
mov
or
or
out
and
das
pop
sbb
xchg
jmp
or
jb
in
mov
add
or
cmp
mov
mov
jle
or
jb
or
mov
sbb
jb
mov
cmp
jb
mov
ror
cmp
add
or
cmp
(bad)
lahf
std
(bad)
xor
inc
adc
adc
mov
mov
(bad)
cmp
add
sub
sbb
pusha
sbb
jae
adc
rcl
daa
and
fisttp
or
ror
dec
mov
out
xor
iret
add
scas
add
add
add
adc
inc
push
push
(bad)
jnp
(bad)
aas
sub
inc
add
jb
clc
push
push
or
ret
cmp
scas
adc
push
je
mov
sar
mov
mov
pop
lea
jmp
mov
sbb
add
or
inc
loopne
adc
dec
or
mov
or
(bad)
mov
stos
arpl
imul
ret
jge
clc
outs
cmps
and
add
or
lock
inc
dec
sub
adc
cld
pop
call
push
mov
je
inc
loope
sahf
pop
mov
xor
(bad)
aas
add
lea
pop
shl
add
mov
test
ud0
or
dec
je
cmp
je
mov
(bad)
inc
mov
dec
mov
mov
lea
pop
(bad)
mov
push
cmps
push
mov
push
push
mov
mov
cmp
iret
cmps
push
pop
cmp
aas
out
mov
add
mov
mov
lds
ins
sti
jo
xor
gs
jmp
sub
mov
mov
add
test
je
adc
cmp
jne
mov
lea
or
jmp
mov
dec
or
sti
inc
mov
add
cmp
mov
mov
out
fist
adc
test
(bad)
cmp
je
mov
inc
inc
sub
dec
cmp
jae
jae
push
call
jne
add
jmp
cmp
jo
shl
fbstp
inc
call
pop
rcr
push
fisttp
inc
(bad)
inc
mov
dec
je
mov
cmp
je
mov
mov
mov
(bad)
(bad)
inc
or
or
add
sbb
push
fbstp
adc
test
les
sbb
out
add
inc
mov
jns
mov
dec
inc
jne
lea
add
xor
jmp
pop
or
pop
clc
mov
rcr
add
clc
mov
and
xor
pop
mov
popa
dec
or
mov
jne
sub
mov
sub
setg
add
mov
in
sub
sub
xor
je
pop
and
push
(bad)
(bad)
push
leave
xor
cmp
push
mov
mov
dec
mov
dec
mov
pop
push
mov
inc
add
call
add
je
push
push
push
push
es
add
(bad)
test
inc
cmp
jl
mov
mov
jbe
dec
jmp
in
mov
sub
call
sti
test
jae
mov
inc
mov
inc
cmp
jne
inc
(bad)
adc
inc
inc
mov
add
enter
ja
fdivr
sub
sub
mov
sub
fbld
stc
lods
mov
add
cmp
jl
mov
out
(bad)
std
nop
sub
cmp
sub
scas
push
push
jmp
xor
ja
xchg
mov
or
mov
mov
outs
pop
cmp
inc
mov
dec
cmp
dec
xor
jne
or
mov
sub
add
add
je
cmp
(bad)
push
ror
cld
jg
daa
aam
inc
jmp
sub
pop
pop
mov
add
mov
enterw
sub
mov
push
cld
cmp
mov
jne
out
push
adc
jp
push
pop
ret
sub
push
scas
xlat
je
sbb
(bad)
shl
loope
cmp
or
rol
mov
xor
push
clc
sbb
and
inc
lea
lea
and
mov
or
add
cs
(bad)
shl
in
or
jge
or
lds
in
mov
test
aad
stos
out
mov
in
pop
out
jo
add
dec
ret
popa
(bad)
in
sub
ret
imul
sti
dec
adc
or
xor
cmc
fist
test
jle
jp
mov
mov
mov
(bad)
clc
xchg
push
movsx
lahf
inc
dec
popf
je
inc
cmp
jl
ja
mov
jg
jmp
add
js
mov
mov
add
push
inc
(bad)
std
jmp
movzx
das
or
pop
adc
test
das
pop
aaa
lock
xor
cmp
xor
aad
je
cmp
je
cmp
jne
loopne
xor
inc
jae
daa
cmp
and
pop
test
push
jb
daa
xor
cmp
jb
jmp
mov
cmp
jne
dec
test
movs
cmps
add
push
adc
les
cmp
sbb
lock
adc
push
mov
sub
push
cmp
jl
outs
loop
pop
jg
mov
or
mov
add
adc
or
mov
lea
aaa
xchg
jg
add
inc
xchg
repnz
or
sbb
jne
sub
mov
cdq
pop
idiv
push
pop
adc
(bad)
jmp
fmul
stc
mov
mov
mov
mov
imul
test
add
add
mov
lea
mov
lea
mov
imul
add
add
jmp
jge
add
push
jl
jne
add
dec
fdiv
push
cmp
add
inc
sub
repnz
test
pop
je
add
push
addr16
dec
(bad)
push
or
adc
sub
jge
mov
ss
xchg
(bad)
mov
call
jg
mov
pop
sub
je
dec
je
sub
je
dec
je
pop
adc
test
shl
add
add
inc
loopne
push
xchg
xor
inc
fcomp
adc
push
shl
mov
fmul
sbb
sbb
enter
pop
std
inc
dec
je
dec
je
dec
je
cmp
cmp
and
adc
jmp
sub
sbb
adc
fstp
push
fld
fmul
add
pop
in
fld
fstp
call
pop
mov
add
fstp
or
mov
jg
xchg
inc
sub
cmp
push
out
add
dec
add
dec
je
sub
aaa
int3
mov
mov
outs
pop
loopne
or
enter
mov
adc
push
cmovb
neg
out
mov
mov
pop
pop
sar
adc
retf
loope
test
sar
fild
jl
(bad)
jmp
sub
pop
idiv
and
je
dec
je
dec
jne
sbb
push
jmp
or
jmp
or
pop
mov
fld
fstp
jp
or
imul
mov
xchg
sub
cmc
inc
hlt
fstp
in
add
ror
xor
int3
mov
es
mov
pop
xor
gs
sbb
pop
test
js
xor
cdq
xor
push
push
test
inc
in
push
pushf
pop
mov
xor
push
jne
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
frstor
cli
stos
xor
sbb
push
pop
adc
jmp
mov
pop
and
and
clc
inc
out
je
or
push
lea
xor
push
inc
push
sub
jne
mov
mov
sar
and
sar
mov
sub
and
ja
neg
sbb
not
and
add
or
fsub
xchg
jne
mov
rcr
shr
shl
cmp
xor
das
fld
fdivr
(bad)
fistp
fmul
and
lock
fstp
jne
sbb
les
pop
jle
cmp
mov
jne
(bad)
jbe
push
push
pop
push
stos
mov
jmp
cmc
cmp
test
data16
add
dec
sub
fstp
adc
or
or
inc
jle
mov
xchg
inc
clc
pop
fucompp
cli
leave
out
stos
sub
jp
inc
clc
pop
pop
jmp
and
mov
push
inc
pusha
sub
mov
les
cmp
loopne
scas
or
inc
pop
jge
mov
cmc
leave
ret
movlpd
add
add
call
fld
adc
movups
psrlq
pextrw
mov
or
add
rol
(bad)
jo
arpl
mulsd
or
sar
loop
push
mov
sub
sub
or
or
or
fistp
mov
mov
outs
retf
sti
shl
(bad)
cmp
or
call
xlat
es
es
and
popf
jp
test
int3
dec
add
sti
das
jp
xor
xor
mov
(bad)
addsd
andpd
mov
pop
ret
adc
neg
cmp
into
adc
sbb
inc
fcomp
test
addpd
push
loopne
push
(bad)
pop
call
shr
scas
jmp
rol
in
(bad)
or
mov
pop
dec
and
jbe
add
shr
jmp
adc
das
cmp
mov
push
pop
repnz
jmp
add
call
adc
add
and
aas
add
add
sbb
mov
pop
shr
or
add
or
dec
pop
aam
and
push
fld
adc
xorpd
mov
idiv
adc
lods
mov
js
(bad)
(bad)
outs
call
pusha
lock
loope
cvtps2pi
adc
std
and
in
pshufd
lods
out
mov
aaa
xor
rol
sub
jle
idiv
enter
and
add
jecxz
sbb
fidiv
sbb
pop
xlat
jb
(bad)
cmp
rol
cwde
add
rcr
or
shl
pop
xlat
lds
addr16
push
adc
call
loopne
outs
leave
mov
and
add
ins
repnz
sub
cmp
outs
xchg
lds
pop
lock
loope
sbb
(bad)
sbb
pop
jmp
fstp
push
jo
outs
inc
jo
or
and
cmp
inc
push
fistp
pop
sub
aas
ss
imul
adc
or
mov
movd
idiv
jbe
movs
push
retf
mov
and
leave
or
jg
add
rol
dec
cmp
popf
inc
(bad)
(bad)
fiadd
xor
orps
outs
mov
xchg
movd
jae
adc
psubd
clc
sbb
pmaxsw
repz
jbe
xlat
ret
and
inc
cmp
into
xor
rol
jne
popa
out
popf
push
mov
jnp
jae
lods
jae
outs
pop
adc
push
hlt
(bad)
sub
add
add
rcl
fistp
add
cmp
jb
les
dec
sbb
mov
jb
jl
pop
fistp
fs
(bad)
clc
mov
outs
jg
inc
lahf
mov
xchg
ja
xchg
pop
movs
ds
jmp
sar
rol
mov
pop
dec
loop
aam
loopne
in
xchg
shl
push
add
adc
and
mov
ds
xor
rcr
outs
push
sar
mov
xor
sub
or
xor
loope
and
mov
ja
frstor
popa
jae
mov
or
add
sti
sbb
divsd
mov
xor
xor
repz
ficom
cmp
leave
mov
inc
lds
ins
(bad)
xlat
leave
ret
adc
jmp
mov
sub
xor
push
add
test
outs
fadd
fadd
inc
mov
and
rol
push
loope
(bad)
cmp
or
fld
rcl
dec
retf
pop
ins
sbb
cmp
jb
sub
or
mov
loopne
or
cmp
sahf
mov
jae
xor
shl
ret
shr
ja
je
sub
and
pop
mov
xor
cmp
sbb
ror
jne
push
cld
shl
sbb
aas
invd
out
mov
fisttp
mov
sti
or
jne
fld1
in
adc
fsub
ins
push
inc
add
push
sub
fiadd
lock
test
cmps
into
adc
(bad)
jae
pop
inc
leave
mov
pop
or
adc
fmul
add
fld
ficom
jmp
iret
retf
jno
loop
test
add
pusha
xlat
jae
data16
and
xchg
je
pop
ja
jb
cmp
inc
(bad)
cmp
mov
pop
sbb
inc
and
in
sbb
adc
or
inc
fdiv
add
mov
mov
mov
ret
js
sub
add
test
mov
loopne
add
movs
add
aas
clc
and
push
mov
add
cld
dec
mov
sub
ret
daa
and
xor
rcl
add
out
ds
sub
rol
dec
fadd
neg
sar
add
mov
ja
mov
and
add
sbb
clc
push
pop
push
and
imul
and
daa
stc
dec
mov
outs
sar
outs
pop
pop
mov
sbb
pusha
loop
pop
fcom
sbb
psllq
sbb
scas
adc
enter
test
out
ds
sub
jg
pop
lods
add
icebp
jae
ret
(bad)
dec
(bad)
ret
cmp
adc
push
mov
pop
out
je
pop
mul
add
enter
(bad)
mov
cs
and
std
mov
call
cmp
mov
imul
or
dec
cdq
gs
push
shl
inc
sub
les
fsubr
lds
push
or
or
and
call
icebp
cmp
cmp
(bad)
call
or
outs
pusha
lock
xor
sub
ja
rol
ret
test
jp
movs
sbb
dec
add
test
(bad)
out
and
dec
in
jne
fxch
fyl2x
jmp
adc
dec
xor
fldl2e
fmulp
pop
inc
mov
call
lods
or
adc
call
aas
fdivp
jmp
and
test
jne
fscale
or
cli
ja
pop
push
pop
inc
xor
inc
int
shl
jg
fnstsw
aad
loope
lahf
sbb
add
fstp
int3
push
pop
adc
lahf
jo
jne
std
add
fldln2
and
fstsw
inc
jne
dec
pop
in
fyl2x
ret
and
jp
or
jne
ret
fldlg2
jmp
xlat
mov
and
ret
data16
out
pop
adc
fldz
cmp
jne
xchg
inc
fwait
das
adc
add
in
jmp
lock
in
push
inc
inc
push
in
fldz
fidivr
add
vmread
test
and
sbb
ret
fld
jne
mov
fabs
fld
fst
xchg
fxch
fsub
adc
loope
aas
adc
mov
dec
sbb
rcr
psubb
mov
fnstsw
sahf
je
add
es
pop
add
clc
mov
jmp
push
pop
hlt
add
call
in
fst
sar
sbb
data16
push
add
pop
test
jo
cli
inc
loop
cmc
sub
xchg
pcmpgtb
adc
popf
pop
test
(bad)
mov
jg
(bad)
jmp
mov
mov
add
mov
adc
add
(bad)
(bad)
jle
fwait
mov
stc
rol
mov
and
xlat
movsx
and
cmp
fiadd
fadd
pop
pop
in
(bad)
leave
addr16
jle
lods
js
shl
in
std
rol
mov
mov
test
in
in
les
xor
fstp
ret
or
mov
div
cmc
fld
or
or
mov
or
fadd
leave
sub
sbb
pop
or
faddp
lods
ror
ret
daa
and
dec
inc
or
mov
add
leave
icebp
mov
pop
or
add
mov
push
inc
and
lock
hlt
jmp
push
inc
dec
fstp
jl
mov
mov
inc
sub
dec
loopne
push
push
or
scas
test
inc
clc
cmp
je
fldcw
shl
mov
loope
cdq
mov
jmp
f2xm1
sub
std
fstp
ret
pop
add
outs
loop
and
push
fldcw
add
or
je
call
push
(bad)
mov
dec
mov
add
lock
push
dec
je
fld
ret
adc
add
jg
inc
and
out
(bad)
mov
shld
shl
(bad)
mov
fld
add
stos
shl
add
lods
or
adc
data16
(bad)
aas
push
pop
add
sub
pop
ret
mov
cmp
pop
cmp
dec
sub
fnstsw
or
or
in
inc
and
sub
adc
push
add
adc
cmp
pop
xchg
ret
jle
pop
sub
and
jl
stos
jmp
fs
push
ret
sbb
pop
add
xor
loope
sbb
cwde
sti
out
lahf
jae
(bad)
fmul
fld
inc
int3
sbb
add
fmul
in
adc
xchg
aam
push
fld
add
adc
movs
test
pop
pop
jne
adc
mov
adc
clc
xchg
sbb
outs
xor
push
fdiv
push
pxor
jbe
jae
stos
sub
and
pop
mov
add
add
popa
xor
ins
push
fcom
push
or
add
and
inc
adc
lock
sub
(bad)
jne
cmp
jne
pop
fdivr
ret
je
inc
sbb
mov
lock
mov
add
test
sar
dec
fdiv
dec
adc
cmp
cs
jne
fldz
and
push
inc
jp
fld
and
stos
(bad)
cmp
jne
cmp
shrd
inc
adc
sub
jne
sub
out
dec
out
jmp
fld1
jmp
cmp
jne
inc
pop
not
fdiv
aas
popa
inc
clc
or
dec
dec
int3
(bad)
neg
enter
adc
adc
out
fstp
and
sub
and
jp
sar
fbstp
fld
es
add
add
sbb
and
push
int3
add
xchg
ret
mov
inc
dec
loope
or
leave
or
rcr
xchg
ret
rol
pmaxub
fstcw
js
push
add
je
popf
inc
outs
loopne
mul
add
dec
pop
leave
push
fst
push
jb
push
sub
cmp
cmp
xor
add
mov
cmp
mov
mov
or
les
call
adc
xchg
outs
xlat
std
sub
add
test
add
mov
mov
pop
inc
dec
fst
sar
jg
shl
je
cmp
je
or
ins
mov
xor
mov
(bad)
and
xsavec
mov
cmp
and
and
or
dec
sbb
je
jmp
inc
pop
pop
je
jb
mov
jmp
inc
pop
add
add
out
shr
punpckhdq
test
pusha
out
scas
fldpi
sub
cmp
add
out
aas
ja
cvtps2pi
fmul
mov
loope
mov
push
cld
loope
add
cld
lea
lea
jnp
in
call
lea
lea
movs
movs
fstp
(bad)
ror
inc
push
push
inc
mov
or
or
pop
fld
out
dec
mov
popa
xchg
xchg
fild
daa
inc
cmp
xor
(bad)
hlt
push
lock
cld
mov
mov
and
jne
or
out
or
pop
(bad)
hlt
pop
or
movs
fmul
mov
mov
loope
loope
fld
jmp
in
fld
add
or
ror
adc
(bad)
push
push
je
fdivrp
ret
shr
(bad)
fcomi
sbb
mov
push
mov
and
mov
pusha
fnstcw
adc
sbb
inc
icebp
and
and
(bad)
arpl
clc
add
or
in
rol
and
or
or
or
push
add
ret
or
je
repnz
adc
cdq
xor
add
jae
jmp
cmp
or
fstp
fld
fmul
out
jb
jl
add
adc
leave
fwait
jae
dec
and
out
jg
or
loopne
jmp
add
ret
sbb
out
add
push
fdivr
push
or
jbe
push
ficom
push
or
rcr
and
pushf
fcmovnbe
or
mov
cmp
cwde
mov
dec
sbb
leave
or
dec
icebp
jl
cmp
fdiv
movaps
xor
popa
or
(bad)
fbld
ins
and
fxch
pop
add
cmp
dec
dec
or
das
jae
push
fxch
enter
lods
sbb
and
ret
ds
adc
cmp
dec
sbb
fld
jae
pop
adc
pop
out
or
xor
pop
add
xchg
adc
fxch
mov
mov
retf
add
push
pop
adc
lea
retf
mov
repnz
lds
xchg
or
cs
inc
aas
mov
adc
dec
push
pop
adc
enter
mov
pop
ins
out
mov
fst
pop
in
and
mov
adc
int3
push
pop
lea
fs
mov
data16
pop
add
lds
or
fxch
mov
cs
mov
dec
mov
enter
adc
mov
fmulp
pop
add
and
fxch
mov
adc
mov
mov
mov
out
add
sahf
sub
into
or
push
adc
xchg
add
cld
jg
cmp
fnstsw
and
fst
in
cli
popf
es
rcr
add
jg
or
adc
out
pop
jae
ror
les
push
movs
mov
or
dec
or
xchg
dec
cs
in
fisttp
push
stc
enter
or
fmul
add
fnstenv
xchg
add
cmp
fild
add
popa
out
pop
fs
(bad)
inc
adc
in
pop
rcl
dec
outs
add
(bad)
cmp
ins
add
ret
push
es
ficom
ret
push
adc
adc
mov
sub
xor
test
add
add
call
fwait
clc
loopne
cmp
jo
and
rol
call
jg
test
bswap
loope
add
xchg
inc
sub
test
or
jne
push
jg
aas
sar
pop
and
and
pmulhuw
inc
sub
or
mov
jb
add
retf
sub
and
or
sub
mov
or
retf
xor
call
mov
dec
sub
fstp
jmp
neg
jne
push
in
jnp
adc
es
dec
xchg
xor
mov
(bad)
jmp
mov
pushf
arpl
or
add
mov
adc
lods
sbb
(bad)
push
dec
or
mov
push
fabs
add
shl
out
push
in
jne
fsub
fxch
fmul
neg
imul
jge
sub
sub
(bad)
sbb
fstp
or
je
fchs
jmp
add
lahf
sub
clc
test
push
fnstsw
idiv
pop
xor
add
iret
aad
sti
fmul
fidivr
pop
(bad)
(bad)
jg
test
sub
fnstenv
and
or
sti
outs
and
pop
pop
ret
push
sub
xchg
in
or
pop
push
test
outs
je
sub
add
pop
ret
sbb
sbb
je
fnstcw
sub
fxch
add
ficom
dec
int3
scas
and
rcr
add
ja
or
fmul
mov
jmp
cmp
cmp
fsub
or
and
dec
mov
jbe
push
mov
inc
push
mov
adc
xchg
mov
sbb
mov
pusha
and
ficom
popa
pop
loopne
fpatan
ret
fptan
pop
jo
ss
mov
jae
and
call
adc
pop
push
call
cmc
and
test
add
sbb
jb
or
hlt
and
mov
mov
call
jno
mov
inc
cmp
je
mov
pusha
pusha
fadd
outs
or
sar
mov
mov
xor
inc
ins
add
(bad)
int
add
leave
cmp
inc
mov
or
rol
sbb
cmp
push
in
pop
je
jp
into
mov
pop
push
out
mov
or
jne
sti
add
call
lea
cmp
jecxz
and
(bad)
call
xchg
outs
mov
jne
lea
push
(bad)
(bad)
jg
jnp
pop
mov
mov
jmp
mov
mov
mov
mov
mov
mov
or
rcr
pop
loopne
out
mov
and
adc
mov
and
and
and
and
pop
jmp
repz
out
and
adc
pop
xor
div
cmp
sub
rcr
imul
mov
mov
test
adc
sub
and
sbb
inc
cld
mov
cmp
inc
neg
jmp
jge
int
loopne
dec
mov
sub
jge
test
je
push
pop
lds
jl
(bad)
loopne
add
pusha
cmp
mov
(bad)
jne
cmp
je
pusha
add
mov
adc
pop
jbe
jne
push
adc
mov
push
push
push
xor
cld
das
push
pop
mov
cmp
inc
cld
push
mov
shl
and
sbb
or
aaa
push
or
xchg
dec
xchg
push
sub
cmp
jl
and
pop
cmp
mov
inc
jmp
pushf
jecxz
lahf
out
ja
sub
out
push
add
mov
adc
sub
sub
fwait
push
lea
cmp
jb
std
(bad)
pop
ret
dec
fadd
adc
push
push
push
mov
and
dec
inc
add
mov
pop
ret
add
(bad)
dec
or
xor
push
mov
mov
mov
cmp
je
scas
and
aam
sbb
(bad)
jmp
push
push
push
call
cmp
mov
je
push
xchg
mov
je
cmp
fistp
jne
push
push
push
or
test
je
lea
call
mov
inc
jge
cmp
je
(bad)
call
adc
cld
add
leave
outs
stos
jle
jne
daa
pop
leave
ret
sbb
cmps
jmp
mov
cmp
push
xor
pop
cld
(bad)
sbb
xor
mov
cmp
call
add
(bad)
(bad)
cmp
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
sbb
hlt
idiv
adc
mov
loope
jb
das
jno
loop
inc
sbb
or
pop
pop
xchg
inc
es
jnp
jg
call
add
cmp
je
xor
shr
xchg
cmp
popa
jle
push
push
sbb
and
or
push
rol
inc
push
mov
and
sub
push
add
add
movs
sbb
sub
into
std
pop
add
jge
mov
sar
mov
dec
ds
addr16
movs
lea
xor
cmp
jne
shl
mov
movaps
lea
or
jne
jecxz
shufps
cdq
pusha
jp
mov
pop
lea
jle
lds
mov
imul
cdq
cmp
out
mov
jge
imul
xor
rol
rol
xchg
(bad)
mov
mov
cld
mov
cmp
jge
push
mov
test
jp
(bad)
test
imul
lock
hlt
test
jne
add
cmp
mov
sub
adc
adc
xor
or
mov
inc
icebp
lea
push
sub
push
or
cmc
mov
and
pusha
in
mov
mov
aas
call
fwait
out
loopne
call
stc
cmps
loope
add
and
jge
inc
mov
inc
sar
in
cmps
push
or
pop
inc
lea
mov
push
and
sub
add
push
mov
or
mov
cmp
dec
push
cld
inc
loopne
loope
out
push
mov
adc
shl
mov
ret
gs
or
js
mov
jl
jge
es
call
push
fisubr
xchg
cmp
mov
ins
(bad)
(bad)
dec
or
mov
test
fmul
sbb
dec
jo
test
fisttp
jmp
mov
pop
test
je
nop
mov
hlt
push
dec
xchg
outs
shl
fistp
bound
mov
sbb
and
cmp
je
push
mov
pop
pop
push
inc
movzx
jnp
neg
daa
icebp
cmps
jmp
sbb
aas
and
inc
xor
mov
pop
add
push
mul
data16
mov
test
mov
jb
jbe
adc
or
into
push
jne
mov
mov
sar
inc
js
test
test
inc
dec
inc
ins
fs
cmp
jg
mov
inc
cmp
je
je
cmp
jne
call
push
sbb
dec
add
lea
cmp
jne
mov
clc
inc
jae
and
stc
xor
(bad)
(bad)
fdiv
and
jne
mov
jmp
cmp
je
cmp
je
cmp
je
add
sti
(bad)
stc
js
inc
cmp
jne
jmp
inc
mov
(bad)
cmp
cmp
je
cmp
je
inc
mov
test
jmp
dec
cmp
fadd
test
push
mov
or
sbb
push
add
mov
mov
mov
mov
mov
mov
pop
(bad)
imul
jne
mov
cmp
je
lahf
cmp
(bad)
jae
jne
or
movzx
or
mov
out
jecxz
(bad)
outs
je
cmp
je
cmp
je
and
cmp
icebp
mov
pop
sub
test
lea
retf
cld
(bad)
(bad)
add
cmp
jg
cli
push
push
arpl
test
out
out
fbstp
or
call
sbb
inc
cmp
test
fstp
je
cdq
jne
or
loopne
adc
jb
addr16
fs
data16
fisttp
sub
pop
fs
sbb
mov
fisub
out
mov
mov
push
jmp
cmp
jne
dec
pusha
(bad)
mov
sbb
mov
ja
adc
cmp
sar
jle
mov
mov
sub
test
push
inc
pop
push
push
shl
mov
int3
jne
cmp
enter
bound
aaa
pop
enter
push
inc
jmp
sub
mov
xchg
imul
add
cmp
sti
nop
lds
push
gs
imul
test
ins
inc
aaa
jne
and
inc
mov
xlat
fs
sahf
adc
sti
fs
mov
mov
or
fist
sub
test
mov
jge
loope
lea
or
mov
sub
aas
test
retf
movs
(bad)
xor
ret
pop
jg
cmp
test
sbb
daa
rcr
std
mov
mov
(bad)
mov
cmp
and
and
adc
je
add
in
jo
cmp
xchg
sti
clc
dec
test
jne
cmp
cmps
jg
adc
or
and
mov
out
jne
pop
xor
inc
shl
add
pop
aaa
and
mov
xor
mov
cmp
into
test
je
punpckhwd
mov
shl
mov
add
push
push
mov
ret
mov
in
pop
lea
push
lea
sub
mov
gs
outs
clc
mov
pcmpgtd
imul
mov
dec
add
add
test
sub
push
add
loope
cmp
and
push
inc
cli
xchg
cmp
(bad)
iret
mov
data16
and
fwait
mul
les
out
ror
push
iret
jge
aas
pop
jne
adc
ins
dec
aas
das
test
jne
and
push
add
fmul
xor
jmp
inc
ror
pop
cmps
mov
loop
xor
xor
pop
in
jnp
mov
adc
inc
lock
push
mov
cmp
aas
pop
jne
mov
inc
mov
jmp
fwait
mov
inc
sub
je
mov
nop
inc
inc
sbb
(bad)
(bad)
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzx
sub
inc
mov
(bad)
mov
shr
add
mov
and
mov
shl
or
inc
dec
(bad)
jne
xor
jmp
mov
mov
popa
push
dec
pushf
in
daa
and
jo
lock
jne
or
into
sbb
and
jmp
jo
or
mov
or
pop
add
mov
cmp
jne
and
sti
js
push
cmp
adc
lock
je
(bad)
or
pop
lahf
les
xor
jno
and
pop
ret
or
add
jge
ror
test
clc
mov
pop
push
sub
cmp
lods
add
js
popf
mov
inc
mov
in
es
push
jo
push
leave
(bad)
clc
(bad)
jmp
xor
add
and
jno
sti
mov
mov
mov
dec
je
or
and
xor
add
fwait
add
or
lea
mov
mov
cmp
push
inc
test
or
lock
cmp
je
cmp
and
push
xor
mov
prefetchw
xchg
mov
pop
jmp
shl
mov
mov
jle
jmp
push
push
push
dec
scas
fadd
mov
jmp
pusha
jbe
cmp
dec
add
loopne
ss
aas
adc
dec
sub
fild
jno
and
or
test
add
fs
movs
shl
sub
jmp
sbb
add
add
mov
test
je
mov
xor
and
rol
fist
and
neg
jmp
pop
pop
jne
xor
int
leave
fidiv
push
jge
shl
add
mov
shl
mov
jmp
xor
call
test
xchg
test
add
pusha
dec
inc
sbb
dec
sbb
fistp
dec
(bad)
cmp
jne
and
xor
cmp
xchg
clc
cmp
nop
inc
sbb
cmp
lods
je
mov
mov
lds
bound
ss
add
add
mov
pop
cmp
dec
pop
mov
cmp
jne
push
push
or
cmp
retf
out
mov
cs
in
call
xor
sub
lods
(bad)
jnp
dec
test
jne
mov
outs
je
adc
movs
add
jmp
sub
jmp
dec
or
mov
jne
add
lea
sbb
push
push
pop
add
fmul
push
add
add
xor
aam
neg
adc
fcmovnbe
pop
add
je
sub
(bad)
je
or
scas
lock
mov
adc
push
push
add
stos
inc
sub
add
ret
rol
mov
popf
lea
mov
cmp
push
push
pusha
hlt
mov
push
push
les
add
inc
stos
(bad)
cmp
adc
mov
test
adc
mov
hlt
add
rcl
je
mov
add
push
push
and
jne
mov
dec
add
and
out
je
dec
inc
sbb
mov
cmp
jne
mov
mov
std
add
or
push
in
dec
jecxz
mov
jmp
out
lea
push
push
daa
inc
pusha
adc
test
ret
je
mov
rcr
jne
int3
sbb
mov
sbb
fwait
mov
int3
not
inc
lock
sub
sub
fist
push
push
mov
xor
xor
cmp
mov
push
inc
cmc
fidiv
test
lea
adc
(bad)
push
push
mov
push
call
jge
dec
and
std
jp
pop
push
push
push
and
je
addr16
sbb
mov
push
and
sub
(bad)
dec
mov
mov
jne
cmp
push
dec
inc
sar
enter
fadd
push
ror
ret
push
or
pop
ret
xlat
xlat
or
push
pop
pop
jmp
cmp
jne
push
lock
icebp
push
mov
mov
add
jmp
or
popf
mov
push
mov
push
mov
mov
idiv
add
sub
inc
inc
cmp
fidiv
shl
add
jmp
push
stc
sbb
cmp
mov
adc
stc
mov
and
aaa
mov
je
push
push
push
pop
imul
or
push
or
call
xchg
and
inc
add
ins
in
cmp
mov
lock
push
adc
out
(bad)
das
ret
push
mov
push
push
test
movzx
or
sub
mov
mov
jne
leave
ret
push
push
lea
push
push
mov
fist
or
mov
lea
push
push
push
and
jle
jb
or
or
push
adc
xor
imul
dec
add
and
push
push
adc
sbb
cld
sbb
ss
push
or
clc
xor
gs
and
sub
adc
pop
mov
and
push
adc
push
push
adc
push
push
xor
cs
ds
inc
xor
push
adc
push
push
and
push
push
cmp
push
and
inc
push
push
adc
push
push
adc
push
in
and
inc
push
push
push
adc
or
xchg
inc
push
push
push
adc
push
setbe
adc
dec
inc
pusha
push
push
in
pop
mov
adc
push
push
adc
pop
xchg
dec
enter
push
push
inc
mov
leave
ds
push
adc
push
push
adc
and
jl
push
in
xchg
inc
out
push
push
jbe
inc
xchg
dec
xchg
push
adc
push
push
adc
xchg
std
xchg
pop
push
push
adc
and
push
push
push
push
push
ret
pop
push
push
adc
adc
pop
push
push
adc
push
push
adc
push
pop
(bad)
and
push
xchg
fild
adc
add
push
mov
pop
clc
sbb
mov
push
adc
or
out
mov
jp
(bad)
pop
pop
mov
data16
mov
jbe
xchg
adc
push
xchg
mov
jbe
inc
inc
adc
unpcklps
adc
jae
daa
add
or
pop
sub
push
or
pop
sbb
ja
iret
jmp
push
or
fsub
and
pminsw
out
and
sbb
out
push
pop
pop
daa
pusha
pop
enter
fs
xor
inc
or
mov
data16
ins
fs
adc
mov
in
adc
adc
in
adc
add
test
out
or
or
in
adc
fmul
ror
jg
adc
(bad)
or
pop
ret
add
out
push
je
jno
add
das
add
(bad)
cmp
out
adc
lds
jmp
mov
shl
or
(bad)
inc
add
add
add
rcr
clc
aaa
adc
push
mov
mov
add
mov
cmp
jnp
jnp
add
sbb
xchg
fnsave
aaa
jo
sbb
pusha
sbb
push
xor
(bad)
idiv
dec
cmp
lahf
test
jg
cmp
je
cmp
jne
mov
inc
mov
je
jle
mov
pop
pop
mov
shl
push
in
mov
xor
mov
cmp
pop
pop
je
mov
mov
push
rep
inc
(bad)
fld
add
aad
not
clc
jne
lahf
in
neg
mov
cmp
ja
pop
shl
xchg
(bad)
pop
mov
xchg
inc
jmp
mov
movzx
push
push
ins
aas
in
ja
jb
jbe
inc
add
push
adc
inc
cld
(bad)
(bad)
psubw
push
push
add
or
je
jo
jns
pop
adc
fdiv
arpl
sbb
sahf
mov
or
sbb
(bad)
(bad)
jmp
or
or
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
loope
ret
test
movs
mov
mov
aam
mov
pop
pop
dec
jo
or
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
sbb
mov
ins
cmp
jo
jae
dec
mov
inc
adc
je
cmp
pop
adc
js
enter
sbb
test
sbb
and
dec
enter
jbe
movs
and
enter
xor
aas
data16
fwait
push
jne
adc
jno
sbb
sbb
jns
add
sbb
jp
je
hlt
inc
mov
cmp
push
xchg
pop
aaa
push
jne
lock
out
xor
mov
add
test
sub
mov
jno
fcmovne
jl
xlat
lea
mov
pop
xlat
inc
push
adc
fild
(bad)
mov
cmpxchg
shrd
sbb
or
mov
lfs
out
bound
mov
imul
push
push
pusha
pusha
mov
push
push
aas
mov
ret
adc
push
push
movntps
push
or
push
psubq
in
add
inc
cs
push
movd
repnz
push
push
inc
(bad)
je
xor
lahf
inc
jnp
add
cmp
(bad)
jmp
mov
inc
mov
pop
mov
retf
and
jecxz
pop
mov
push
out
inc
add
xor
or
imul
xor
loopne
pop
xor
and
clc
mov
shl
rol
mov
cmp
jb
neg
and
je
sub
inc
cmc
inc
sub
jmp
enter
jne
rol
add
mov
and
jae
std
daa
push
rep
or
jmp
mov
xor
push
xor
inc
cmp
jl
push
adc
cmps
push
out
mov
add
cdq
sub
inc
or
dec
mov
jbe
(bad)
(bad)
mov
or
add
cmp
or
dec
mov
jmp
cmp
jle
gs
test
cmc
fist
ret
or
sbb
aas
mov
push
dec
add
add
sub
or
ss
xor
or
test
add
call
out
cmp
sub
sub
jmp
or
fild
pop
call
dec
out
enter
hlt
xchg
ja
pop
mov
jg
add
jmp
dec
and
cmp
inc
add
inc
cmp
jb
cld
ret
mov
push
push
push
push
xor
pop
mov
lea
or
clc
mov
imul
push
sub
mov
nop
cmp
je
jae
lea
jmp
lea
cmp
jle
mov
push
push
jle
push
pop
ret
mov
dec
je
dec
dec
je
sub
je
add
sub
nop
pop
je
dec
je
dec
dec
jne
imul
add
jmp
or
xchg
out
mov
es
repz
adc
or
xchg
outs
test
(bad)
inc
outs
or
std
adc
(bad)
je
cmc
les
inc
push
inc
inc
(bad)
(bad)
(bad)
fistp
inc
xor
jmp
inc
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
and
inc
add
(bad)
dec
movsx
shr
ss
mov
test
jne
sbb
add
cmp
sahf
lock
add
out
jl
adc
mov
mov
xor
push
retf
push
and
lock
lea
mov
lock
dec
xchg
dec
and
add
jmp
test
and
push
dec
sub
ins
push
lds
jg
sbb
mov
js
adc
xor
dec
mov
not
and
call
ret
push
lods
xchg
clc
(bad)
in
push
mov
and
push
or
jno
xor
lea
ja
fdivr
jg
loope
inc
or
jge
add
push
or
adc
or
or
xor
mov
and
pop
inc
jg
ret
in
test
or
test
push
adc
mov
jne
jge
jg
cmps
bound
ret
add
pop
je
int3
and
fist
or
dec
jmp
test
jne
mov
push
cmp
add
test
jne
adc
cld
ror
add
push
and
pushf
mov
ret
or
add
clc
dec
lds
enter
test
loope
fsub
and
ret
inc
into
test
sub
jmp
jle
out
mov
cmp
add
cmp
cmp
std
test
mov
jmp
daa
inc
stos
or
arpl
cmp
je
and
(bad)
scas
aam
retf
bound
adc
xor
pop
nop
retf
jb
xchg
fidivr
ret
xchg
sbb
xchg
and
and
nop
jne
cmp
cmp
cmp
jne
sar
pusha
or
or
nop
adc
lods
jmp
sub
neg
pop
sbb
push
inc
push
mov
clc
call
jne
mov
ret
test
sbb
ret
rol
popf
adc
ds
add
mov
(bad)
je
(bad)
push
jmp
jo
movs
adc
in
add
xchg
and
add
jnp
pusha
jmp
add
or
les
je
test
test
bound
dec
ins
inc
pop
sbb
xchg
(bad)
fimul
sbb
fld
jne
mov
push
mov
add
add
fwait
add
repz
fimul
mov
mov
and
sbb
sti
cmp
je
push
sub
lahf
fdivp
(bad)
and
mov
fdiv
cmp
je
cmp
je
xor
sub
(bad)
pop
test
cmp
jne
push
dec
push
add
cmp
mov
dec
cmp
nop
arpl
test
dec
jg
add
mov
pop
xchg
push
lea
push
or
mov
sbb
mov
push
clc
lods
pop
and
push
jmp
inc
nop
mov
mov
and
mov
mov
(bad)
(bad)
dec
mov
mov
mov
cmp
je
cmp
jne
push
add
jmp
push
push
push
push
push
shr
push
push
pop
or
(bad)
stos
push
adc
cmps
cmp
icebp
or
es
lods
in
add
or
pop
and
inc
sar
or
jae
lea
add
sti
div
push
push
xor
add
jmp
pop
test
or
not
adc
xor
loop
mov
push
push
neg
js
iret
in
jne
mov
call
outs
push
mov
or
ds
inc
aaa
or
or
or
pop
cmp
mov
fild
push
mov
mov
mov
mov
sub
mov
jg
icebp
sbb
cmp
je
call
push
nop
mov
jge
add
pop
add
add
adc
or
inc
shl
inc
lock
cmp
je
jne
mov
jmp
test
cmp
jmp
mov
pop
jne
push
push
cmp
sbb
cmp
lock
cmp
je
mov
lea
fmul
pop
lods
adc
daa
mov
inc
push
fstp
fbstp
push
aas
sub
(bad)
ja
popa
loop
mov
sbb
push
packsswb
pushf
cmp
je
push
push
cmp
push
or
or
xor
xor
mov
push
push
add
mov
mov
inc
stc
xrelease
ror
in
cmp
push
push
push
push
es
jne
aam
(bad)
adc
xchg
adc
jge
jmp
cmp
je
clc
aaa
fcomp
add
pop
lods
cmp
je
push
les
inc
and
lea
dec
enter
fimul
call
mov
je
or
jnp
mov
mov
add
inc
adc
add
pop
pushf
adc
mov
and
mov
and
jb
dec
push
movsx
and
ret
sub
mov
pop
sub
je
dec
pop
rol
mov
jg
mov
ret
mov
or
inc
xor
pop
mov
or
xor
mov
mov
add
mov
call
stos
stos
pop
ret
retf
push
adc
sbb
sbb
push
ud0
cmp
gs
mov
push
fist
xor
mov
call
inc
xchg
je
push
lea
push
movzx
paddw
cmp
ja
sub
inc
push
lea
mov
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
sti
in
out
add
xor
jbe
push
lea
push
neg
xchg
inc
cdq
jo
or
or
mov
fimul
and
pop
shl
les
xchg
mov
push
or
add
jbe
in
inc
adc
jmp
test
je
sbb
push
jmp
aaa
cmc
xlat
mov
mov
inc
jb
in
lahf
std
sbb
sub
mov
add
inc
pop
cmp
pusha
outs
into
(bad)
jb
cmp
ja
sbb
loopne
push
add
cmp
mov
cwde
ret
jmp
cmp
pop
add
in
and
mov
mov
mov
jmp
and
push
jne
imul
cmp
mov
daa
inc
mov
sar
push
fwait
mov
aaa
pusha
stos
or
stos
(bad)
lock
xor
cmc
out
mov
je
shl
clc
(bad)
cmp
je
add
inc
cmp
shl
sub
out
xor
std
cmp
jne
mov
cmp
or
mov
fisttp
xchg
cli
ja
add
je
out
mov
test
wbinvd
mov
mov
cmp
fist
lea
shl
mov
pop
in
lea
fldcw
mov
out
push
movzx
cmp
ja
mov
mov
push
pop
or
jbe
inc
inc
scas
(bad)
jg
addr16
inc
add
cmp
jb
xchg
fsubr
dec
adc
add
mov
pop
cmp
sub
(bad)
aas
loope
jmp
mov
jbe
inc
inc
cmp
jne
xor
clc
add
rcr
mov
(bad)
jle
or
pop
jmp
mov
jecxz
bound
jmp
cmp
fidiv
xchg
mov
ror
pop
pop
cmc
ret
call
xor
out
jbe
inc
sub
xchg
clc
(bad)
jne
mov
or
jmp
cmp
push
rcl
jmp
cmp
jne
sub
inc
or
add
jmp
or
or
je
push
sbb
mov
jg
outs
loopne
mov
pop
mov
dec
outs
mov
mov
inc
mov
mov
mov
xor
(bad)
jmp
add
clc
add
or
jp
mov
inc
jp
rcr
jmp
sbb
mov
xlat
in
jmp
inc
jmp
sbb
mov
(bad)
mov
xor
mov
cmp
jne
add
sbb
adc
add
in
loop
pop
ja
nop
pop
mov
vpmacssdql
cmp
push
jne
push
(bad)
adc
mov
add
cld
or
pusha
sahf
push
push
jne
push
dec
adc
inc
stos
mov
jo
call
enter
jl
test
jo
adc
pop
mov
add
or
(bad)
fisubr
sbb
jo
je
push
lock
loop
sbb
dec
je
lea
push
push
lea
push
push
shr
cmp
xor
test
jne
cmp
add
or
sub
xor
mov
mov
mov
test
je
mov
adc
inc
mov
push
call
ja
leave
nop
or
pop
cdq
idiv
push
pop
sub
or
shl
clc
(bad)
call
retf
not
test
je
xor
ret
cmp
jne
inc
cmp
jl
dec
mov
xor
lock
push
(bad)
js
bound
mov
jmp
js
lea
adc
inc
aaa
cdq
push
sub
test
jge
pop
adc
push
fucomp
mov
in
dec
push
lea
mov
repnz
mov
mov
cs
sbb
je
lea
mov
cs
loopne
xchg
js
push
sbb
dec
mov
and
pop
and
inc
cmp
jge
lea
sub
xor
jb
cld
lock
cmc
(bad)
jmp
push
pop
sub
push
mov
mov
add
dec
jne
pop
loope
mov
add
mov
mov
cmps
push
pop
cdq
mov
idiv
mov
clc
(bad)
dec
or
mov
mov
shl
mov
xor
sub
not
xor
xor
sti
ja
or
hlt
sbb
mov
or
mov
jne
shl
pop
inc
(bad)
call
jne
jl
push
pop
mov
sub
aaa
(bad)
(bad)
(bad)
jg
clc
jl
mov
mov
jmp
and
dec
sub
test
jge
scas
clc
add
(bad)
jp
fimul
mov
or
test
or
add
mov
shl
mov
out
sub
cmp
fdiv
out
enter
dec
clc
push
jne
xor
sub
popa
cmp
lea
xchg
jg
ss
jb
xor
pop
imul
adc
or
push
lahf
fadd
inc
cmp
sub
cmp
jge
xor
cmp
cmp
clc
jg
sub
mov
cmp
xor
jo
cmp
pop
jl
inc
or
hlt
and
mov
fucomi
test
push
jl
push
or
cmp
and
pop
enter
or
fcomip
jg
add
fs
pop
sbb
or
jbe
jg
call
shl
mov
neg
sbb
push
add
or
or
cmp
jne
popa
idiv
aaa
jp
push
clc
mov
mov
jmp
cmp
jne
adc
stos
pop
push
xor
push
xchg
sbb
pusha
ja
ret
push
popa
clc
jg
ret
jne
xor
push
push
xor
push
pop
inc
ins
or
adc
mov
or
jo
or
sbb
add
fsub
inc
xchg
jbe
std
mov
mov
add
jle
(bad)
aas
icebp
inc
push
xor
pop
or
fist
push
movsx
inc
jmp
push
pop
(bad)
out
pop
inc
out
or
ss
mov
jl
and
(bad)
(bad)
cmp
mov
dec
cmp
je
inc
cmp
jne
inc
jmp
and
sbb
xchg
loope
inc
adc
mov
mov
add
add
sbb
mov
shr
scas
(bad)
mov
or
inc
add
adc
mov
and
test
jle
call
cmp
je
lea
jmp
mov
add
jne
cmp
jne
mov
ja
dec
mov
jmp
lea
cld
mov
shr
shl
inc
add
hlt
or
or
shl
test
sti
add
(bad)
jg
jne
mov
mov
mov
shl
shr
or
add
add
cmp
mov
je
loop
iret
mov
mov
jne
mov
push
cli
adc
adc
inc
rcl
inc
or
jg
and
aam
push
push
sub
lea
mov
(bad)
out
clc
cld
movs
movs
movs
sbb
mov
movsx
mov
movsx
mov
les
idiv
and
jae
loope
or
aad
push
ret
xor
idiv
inc
test
je
push
pop
test
je
or
test
pop
add
mov
add
ret
and
(bad)
push
adc
add
add
mov
push
mov
mov
and
fwait
loop
push
mov
je
cmp
cmp
adc
icebp
je
cmp
jne
or
out
fild
(bad)
int3
and
je
cmp
jne
dec
out
in
fiadd
add
aaa
test
pop
je
cmp
pop
div
xchg
adc
xchg
sti
xchg
scas
or
test
retf
mov
and
push
jae
and
out
fnstsw
imul
ins
retf
or
imul
retf
mov
add
imul
sub
jne
or
jmp
or
push
add
pop
(bad)
loope
leave
aad
mov
push
push
fstcw
mov
ins
pop
fiadd
mov
fsub
or
shl
hlt
xor
mov
or
adc
or
ins
or
ret
pop
mov
mov
call
clc
jno
add
jge
mov
call
adc
adc
jne
cwde
ds
movs
cmp
je
mov
jmp
inc
pop
add
je
test
loopne
dec
dec
or
ret
inc
sub
jle
cmp
push
icebp
inc
jl
xor
cmp
setne
int
or
jbe
jmp
shr
cmp
jb
cmp
addr16
pop
add
jmp
das
rcl
or
add
int3
inc
add
das
xchg
mov
loop
in
mov
data16
mov
fstp
shr
push
mov
cli
pop
sbb
adc
call
mov
or
call
jmp
mov
or
cs
fist
test
jne
test
jne
cmp
(bad)
push
dec
inc
pop
and
sub
je
dec
je
dec
jne
mov
shr
or
pop
add
stc
and
out
push
cmp
je
cmp
je
mov
std
lahf
std
cmp
or
pop
clc
jmp
mov
add
mov
or
jne
mov
mov
mov
cmp
fild
das
je
cmp
push
mov
scas
add
outs
jne
mov
test
dec
or
jmp
mov
jmp
cmp
inc
cmp
cmp
je
cmp
into
pop
ret
add
hlt
imul
inc
adc
(bad)
cmp
test
mov
or
not
and
test
js
call
je
or
cmp
add
add
dec
clc
add
(bad)
(bad)
(bad)
mov
adc
imul
or
or
adc
aaa
inc
mov
mov
or
cmp
jne
inc
cmp
es
xor
ret
or
cld
push
push
push
ins
or
cmp
mov
es
push
mov
add
adc
call
adc
push
mov
pop
jmp
cmp
jne
leave
add
dec
call
cmps
adc
push
add
push
mov
pop
pop
mov
shl
mov
and
mov
jne
test
jns
not
push
inc
add
add
or
out
loop
mov
jne
lds
adc
jge
add
sub
fld
(bad)
fisub
jmp
outs
and
imul
adc
lock
and
cmp
repz
xor
push
pop
pop
je
outs
add
pop
shr
popa
imul
pop
inc
jno
jb
jle
push
push
push
es
dec
push
not
pop
ss
dec
jnp
sub
les
dec
sub
ins
push
or
hlt
add
or
mov
outs
sub
adc
les
push
iret
mov
(bad)
out
shl
mov
jne
push
mov
mov
mov
mov
int
(bad)
(bad)
jmp
mov
dec
les
mov
mov
cmp
je
cmp
je
aas
dec
adc
add
jmp
mov
inc
cmp
ja
jno
jmp
cmp
jl
cmp
jg
push
sbb
or
popf
pop
push
inc
lock
jl
ds
sub
push
pop
je
sub
fld
pxor
ja
sahf
(bad)
mov
gs
jmp
xor
inc
push
inc
leave
jbe
xchg
jl
push
jle
dec
push
cld
push
neg
je
cmp
je
cmp
je
std
cmp
jle
jg
sti
inc
jle
cmp
jle
(bad)
neg
adc
push
addr16
ds
push
pop
ds
(bad)
pop
jl
pop
jle
pop
je
out
push
test
sub
retf
mov
or
jge
sbb
inc
sub
mov
inc
jmp
inc
sbb
packsswb
popf
test
jne
cmp
fnstsw
mov
and
push
dec
bound
adc
sub
jae
dec
sbb
idiv
test
sub
push
pusha
and
mov
xchg
add
arpl
fisttp
dec
dec
and
sar
outs
fs
add
add
mov
mov
mov
retf
clc
dec
add
stos
fisttp
pop
je
push
push
pop
cmp
jbe
cmp
jl
dec
mov
dec
adc
jbe
cmp
imul
or
(bad)
jg
out
pushf
retf
pop
mov
cmp
je
pushf
sti
hlt
(bad)
out
lea
mov
adc
jne
or
push
sub
daa
or
cmp
jne
rcr
mov
rcl
mov
xor
jmp
ins
mov
je
rol
add
and
jg
shl
add
out
out
sbb
push
mov
inc
sbb
(bad)
jle
dec
jne
mov
stos
sahf
(bad)
dec
(bad)
dec
imul
enter
ffreep
mov
in
mov
xor
pop
cmp
jge
(bad)
std
(bad)
push
fadd
inc
les
dec
test
add
inc
sbb
dec
lods
jne
sub
cmp
fbstp
(bad)
jl
ficom
jmp
dec
mov
(bad)
ror
(bad)
mov
inc
jmp
mov
jmp
xor
mov
leave
inc
add
invd
repnz
xor
xor
xor
(bad)
push
mov
or
mov
mov
mov
mov
mov
call
inc
inc
mov
ret
nop
loop
dec
add
lods
dec
add
imul
jno
pop
cmps
stc
cmps
test
dec
sbb
push
loopne
inc
adc
jp
das
pop
sbb
mov
pop
mov
(bad)
pop
out
or
cmp
sub
int
jne
(bad)
out
mov
add
(bad)
aaa
jne
retf
sub
test
je
into
adc
jg
(bad)
mov
jmp
mov
jp
mov
or
lea
ins
push
cld
pop
pop
add
xor
push
or
test
mov
mov
call
sbb
cli
push
fld
adc
jg
push
std
mov
push
mov
and
cmp
sbb
and
bound
in
inc
loop
pusha
and
in
xor
sub
add
inc
rol
mov
call
mov
mov
sub
dec
dec
cmp
mov
adc
mov
jp
add
sub
je
ds
push
gs
(bad)
add
lea
dec
or
add
mov
inc
jne
mov
lods
jmp
pop
push
pop
add
cmps
or
push
data16
push
sub
xlat
or
retf
dec
jnp
rcr
inc
add
or
inc
mov
mov
test
pop
neg
shl
xor
jle
add
push
cmp
out
and
or
jno
adc
mov
dec
fdivr
je
cmp
je
adc
add
sti
pop
pop
ret
mov
inc
inc
inc
(bad)
lock
jnp
in
push
sub
hlt
pushf
or
xchg
in
in
pop
inc
adc
xchg
pop
add
movs
push
add
inc
and
movs
push
in
add
ror
mov
stos
prefetchwt1
or
cmp
cmp
in
test
cmp
mov
mov
movs
jmp
inc
mov
xor
mov
pop
mov
(bad)
(bad)
mov
fisttp
adc
test
push
je
movs
or
jb
lock
inc
adc
fwait
cmp
mov
add
adc
retf
je
popa
ja
lock
test
adc
mov
fmul
and
fist
add
loop
nop
aaa
(bad)
jmp
pushf
shl
not
xor
push
and
pop
cmp
adc
dec
or
loope
pop
and
adc
test
and
adc
jmp
out
mov
adc
popa
mov
je
aad
dec
or
test
or
test
scas
out
pop
sbb
jns
pop
lock
lock
or
push
mov
xor
inc
ja
or
add
lock
shl
jle
add
or
jmp
sub
or
jmp
mov
or
or
mov
jmp
and
add
fst
add
and
les
jecxz
xor
or
jmp
(bad)
jg
jae
ds
leave
or
shl
xor
and
fsubr
add
xor
or
dec
and
mov
sbb
int
fstp
add
fstp
add
dec
pusha
push
loop
mov
mov
fld
adc
pop
shr
sbb
push
out
pop
loop
add
adc
es
test
cs
sbb
sti
or
lea
test
fistp
mov
push
(bad)
push
ror
dec
jne
or
jmp
mov
arpl
mov
iret
leave
es
maskmovq
imul
push
(bad)
inc
jmp
and
mov
shr
pop
inc
cs
mov
pop
dec
jne
and
jmp
mov
and
es
cmc
aaa
int3
or
or
push
fld
fstp
(bad)
fbld
in
jecxz
push
xor
mov
and
jg
hlt
inc
or
test
je
or
test
test
je
ror
test
je
into
xor
sbb
clc
and
or
call
mov
fild
cmp
jne
fld
push
cld
dec
inc
xchg
fld
inc
cld
pop
rol
add
loopne
pop
cmp
aam
adc
je
mov
mov
enter
jmp
xor
add
add
imul
xor
gs
int3
bnd
pop
jne
mov
and
fild
jbe
rcr
sub
call
repz
ss
pop
lds
mov
add
pop
mov
sahf
lods
pop
mov
retf
add
ret
fdivr
cmp
fmul
push
add
xchg
outs
test
jmp
lock
cmp
mov
mov
cmp
jge
sub
test
je
test
jne
shr
call
lock
(bad)
repz
hlt
dec
jne
test
je
fld
mov
fstp
jmp
test
pop
je
mov
lock
cld
loope
pop
(bad)
test
xlat
and
and
out
push
loop
out
xor
test
pop
sete
cdq
add
clc
add
sbb
inc
cwde
cli
cmp
jg
dec
and
dec
add
fwait
mov
inc
and
out
push
jmp
add
xor
add
push
xchg
add
call
loopne
shl
in
xor
mov
cmp
push
mov
inc
cmp
jl
jns
je
cmp
std
adc
inc
jno
sbb
lods
sbb
cli
xchg
js
mov
push
push
push
mov
mov
scas
das
cmps
jp
sbb
or
sub
ror
mov
mov
call
cmp
das
(bad)
stc
stos
(bad)
fld
pop
inc
xor
mov
jo
out
call
inc
or
in
sbb
pop
and
fldz
add
pop
or
sbb
xor
add
stos
sbb
test
mov
in
sbb
das
cmp
adc
loop
dec
in
sub
mov
xor
mov
xchg
clc
jle
ss
test
xor
(bad)
pop
lea
jo
lea
neg
ins
movs
sti
add
adc
in
out
call
sub
pop
fld
push
inc
fs
es
xlat
mov
jmp
mov
and
or
sbb
(bad)
dec
or
pop
ret
les
push
fdivr
and
frndint
inc
fld
xchg
ja
push
(bad)
cs
inc
aad
fstp
add
add
loope
inc
dec
shr
xor
cmp
lock
or
pop
ret
adc
jne
(bad)
aaa
lock
sub
jg
enter
jne
mov
pop
cmp
test
jne
sub
add
cmp
and
in
jle
jnp
or
out
xor
iret
dec
imul
scas
or
leave
test
cmovge
dec
cmps
out
or
mov
sar
mov
adc
gs
inc
or
or
shl
xlat
jge
dec
inc
push
adc
gs
out
cmp
popa
jo
ret
pop
and
lods
xlat
scas
jmp
pop
xor
cmps
adc
add
loop
jecxz
test
sbb
sub
mov
leave
ret
push
fstsw
movsx
ins
mov
push
or
loop
shl
inc
or
and
inc
cld
or
add
std
pop
sbb
ins
or
mov
mov
das
mov
fld
and
fwait
add
scas
popa
not
fstsw
adc
pop
iret
jge
or
sub
push
dec
js
std
fld1
fdivp
fstp
xor
je
fldpi
sbb
add
cmp
xor
dec
mov
mov
hlt
(bad)
fnstsw
mov
dec
je
dec
je
dec
je
dec
je
(bad)
aaa
adc
pop
dec
jne
push
jmp
mov
mov
jmp
push
jmp
push
jmp
push
pop
push
lea
fwait
cmp
cmp
clc
call
je
cmp
je
div
push
(bad)
jmp
les
mov
adc
test
or
outs
push
push
lea
push
push
push
sti
sbb
cmp
shl
and
add
and
sar
sub
das
cmp
pop
pop
je
or
adc
mov
ret
sub
inc
dec
add
mov
ret
arpl
pop
xchg
fidiv
out
mov
inc
push
mov
shl
shl
jmp
inc
jecxz
pop
lods
add
dec
je
dec
out
inc
adc
sbb
cli
inc
push
stc
bound
es
xor
test
mov
jne
imul
outs
sub
sbb
mov
jle
loopne
xchg
ret
cs
scas
or
mov
mov
jp
and
add
pop
mov
lahf
daa
and
add
pop
inc
jg
test
je
mov
dec
and
mov
ror
dec
push
(bad)
dec
les
int3
xor
cmp
jne
push
mov
or
add
push
call
imul
sub
add
loopne
icebp
push
push
aaa
add
jge
jle
(bad)
inc
add
inc
adc
inc
sbb
(bad)
jle
push
mov
neg
std
or
sbb
or
sbb
cmp
je
mov
cmp
jne
mov
jge
mov
cmp
jne
mov
scas
dec
and
or
(bad)
paddq
aas
add
cmp
jne
pop
and
fistp
jle
mov
or
push
adc
inc
adc
sbb
jg
and
ds
cmp
jb
lea
cmp
mov
inc
test
inc
push
or
jb
cmp
jbe
inc
dec
jge
aas
mov
push
jmp
cmp
jle
das
jae
xchg
xchg
icebp
mov
aaa
out
mov
mov
cmp
jb
cmp
jbe
fcomip
in
shl
pop
call
pop
fmul
je
add
(bad)
les
shl
adc
(bad)
jmp
pop
inc
loopne
push
aas
aaa
add
mov
and
mov
mov
jne
lea
aad
lea
mov
inc
mov
add
jnp
jb
lock
dec
jge
push
push
xchg
test
lods
and
add
(bad)
cld
test
jge
xchg
ja
mov
push
or
pop
jae
xchg
mov
test
je
adc
sti
cmp
jne
push
les
push
jg
enter
bound
cmp
cmp
mov
dec
push
mov
pop
mov
add
push
cmc
aam
jge
retf
std
dec
adc
and
push
mov
or
add
in
mov
aas
inc
cmp
cmp
je
cld
stos
sbb
mov
lock
xchg
lods
loope
ss
sbb
lock
lds
push
mov
jge
popa
ja
call
push
mov
fs
mov
repnz
push
cld
into
adc
aaa
pop
mov
lea
mov
push
mov
jmp
add
gs
push
mov
mov
jne
mov
mov
cmp
je
test
je
add
mov
test
add
(bad)
sub
add
fadd
call
sbb
leave
test
mov
stos
aaa
ins
or
cmp
add
inc
add
jmp
lea
xchg
test
mov
loopne
and
add
std
out
cmp
or
jns
push
outs
add
mov
pop
retf
fbstp
and
mov
inc
out
pop
add
inc
hlt
xor
cmp
push
mov
movs
jmp
sub
jmp
mov
cmp
mov
je
push
sub
movs
cmp
jg
fist
xor
inc
cmp
je
xor
cmp
mov
mov
add
mov
push
clc
fnstenv
lock
cmp
jne
cmp
je
cmp
je
mov
je
mov
add
imul
pop
cld
je
pop
jae
aad
repnz
ret
bound
je
mov
inc
adc
sbb
out
neg
push
je
mov
mov
mov
mov
xchg
(bad)
aas
lock
dec
cmp
je
lea
loope
xchg
adc
sar
cld
pop
jne
jmp
push
ins
mov
inc
mov
mov
jmp
mov
inc
mov
(bad)
mov
jne
mov
shl
push
push
add
es
pop
cmp
sahf
retf
sub
int3
neg
lea
aam
sub
adc
mov
xor
and
jmp
sub
dec
mov
inc
cmp
stos
pop
je
idiv
aaa
hlt
mov
hlt
dec
cld
mov
inc
in
cmp
clc
not
and
push
cwde
pop
js
js
mov
rcr
mov
retf
or
pusha
aas
add
xchg
adc
leave
mov
cmp
push
xor
inc
cmp
fdivrp
sub
push
pop
in
dec
add
or
inc
add
adc
lock
clc
(bad)
out
pop
cmp
xchg
cmp
outs
neg
cmp
pusha
dec
adc
and
and
lods
inc
inc
pusha
loopne
push
fnstenv
ds
hlt
mov
jg
add
jmp
mov
lahf
cli
or
add
mov
push
xchg
cmp
ret
rcr
inc
(bad)
hlt
cmp
push
ret
push
iret
and
xchg
mov
cmp
ja
cmc
cmp
test
das
js
cmp
push
fwait
test
adc
lock
ret
das
or
je
adc
movs
add
inc
mov
xchg
cmp
lock
add
mov
mov
fdivr
icebp
or
pusha
mov
lock
cmps
div
test
xor
lock
(bad)
movs
cmp
scas
add
add
cmc
lock
push
(bad)
push
push
cmp
jne
push
push
xor
sub
loopne
jne
jne
and
in
xor
cmp
rol
jge
mov
call
dec
xor
add
cmp
je
sub
cmp
sbb
cmp
popa
jmp
and
rol
loopne
cmp
je
sbb
sbb
movsx
push
mov
out
stos
add
int
cmp
mov
rcr
adc
fadd
pshufw
call
jmp
or
push
add
jbe
mov
popf
pop
mov
movzx
push
push
inc
xor
pop
xor
mov
or
fwait
mov
std
push
jge
add
adc
not
cmp
ret
sub
inc
jb
jmp
dec
adc
add
or
fdiv
jp
add
dec
push
and
(bad)
add
sar
jb
cmp
jae
sub
rcr
mov
mov
pop
cmc
adc
or
push
push
aad
and
lea
rol
leave
mov
add
inc
or
push
ss
retf
sub
or
ja
ja
loop
das
pop
pop
out
xor
inc
not
js
shr
mov
lea
or
mov
mov
shr
shl
or
pop
mov
mov
or
dec
jo
mov
repnz
shl
or
pop
shr
or
rol
pop
mov
mov
cmp
xchg
or
call
ins
xor
lds
ret
mov
mov
mov
add
push
or
jae
repz
movs
movs
push
inc
shr
xchg
mov
xchg
lea
add
aas
sti
addr16
call
or
pusha
cld
mov
sbb
(bad)
(bad)
aas
xor
call
mov
sar
push
or
mov
mov
add
loop
add
in
adc
lock
shl
or
adc
loopne
cmp
mov
mov
je
mov
lods
fild
in
jmp
dec
xchg
xor
or
pop
shr
add
cld
pop
pop
mov
cmp
pop
mov
out
and
arpl
mov
jge
movs
movs
cmc
popw
mov
(bad)
movs
mov
mov
mov
neg
jno
(bad)
mov
int3
mov
dec
shl
jmp
in
out
sti
mov
mov
add
inc
add
add
fdiv
test
jge
aaa
add
inc
mov
cmp
jne
int
cmp
inc
cmc
pop
std
mov
jne
fadd
je
mul
outs
xlat
ja
inc
jne
push
test
adc
std
mov
cmp
jne
push
clc
adc
sbb
adc
mov
mov
xchg
xchg
or
cmp
sbb
jmp
(bad)
(bad)
jmp
movzx
mov
imul
and
mov
shr
shr
lea
imul
(bad)
dec
cld
mov
or
mov
(bad)
adc
mov
inc
push
sbb
mov
pop
shr
mov
jge
(bad)
aas
jb
lea
push
push
ret
or
inc
push
adc
mov
je
ds
mov
or
inc
add
(bad)
mov
jle
call
adc
cli
sub
cmc
aam
(bad)
out
popf
mov
pop
mov
pop
jne
test
jge
neg
and
add
sbb
dec
pop
jne
lea
test
test
dec
int3
lea
(bad)
shl
int3
inc
(bad)
fimul
dec
and
inc
xor
(bad)
(bad)
(bad)
(bad)
sti
mov
add
add
inc
dec
mov
mov
jne
mov
dec
mov
dec
cmp
adc
cld
xor
inc
push
cmp
(bad)
mov
shl
add
inc
inc
sub
sub
mov
mov
jg
or
add
jne
ja
mov
add
rol
add
outs
js
adc
add
add
retf
fwait
mov
mov
or
call
add
not
sahf
ret
cs
mov
jle
ret
mov
je
mov
push
and
les
ret
inc
add
and
in
adc
mov
test
xor
or
sub
mov
icebp
stc
mov
mov
jge
mov
push
sub
inc
xlat
aam
or
dec
add
fist
clc
push
jg
jmp
mov
popa
adc
add
sbb
mov
into
(bad)
push
jge
mov
or
pop
cmp
push
sbb
outs
loopne
pop
mov
call
ficomp
div
fstp
push
lock
rep
dec
cwde
mov
ja
loopne
mov
xchg
mov
inc
mov
xor
aaa
int3
inc
push
les
(bad)
pop
jmp
mov
imul
sub
leave
add
pop
loop
pop
xor
xor
mov
ja
ror
mov
or
mov
push
call
(bad)
jmp
and
xor
and
and
jg
adc
clc
outs
test
mov
jae
(bad)
jg
sub
mov
ja
mov
test
test
sub
inc
(bad)
call
inc
xor
test
jne
cmp
jne
mov
in
mov
mov
push
test
push
cmp
or
inc
jne
cmp
jne
mov
mov
mov
rcr
(bad)
in
rol
add
cmp
jle
add
mov
lea
call
popa
inc
loopne
dec
fmul
mov
movzx
imul
aam
inc
inc
jl
sar
push
nop
jae
jmp
es
push
inc
add
sub
dec
jne
sbb
(bad)
icebp
add
in
pop
jg
xor
shl
push
cmp
jle
test
jne
and
sbb
pop
jg
pop
xor
addr16
mov
xchg
add
test
icebp
jg
push
mov
pop
jne
cmp
(bad)
jmp
daa
lock
lock
cmp
call
xor
jne
and
cmp
loope
fwait
and
add
cli
(bad)
push
xor
inc
cli
add
jmp
inc
jmp
inc
(bad)
cli
push
inc
mov
data16
mov
sub
(bad)
mov
(bad)
mov
jmp
neg
sbb
icebp
push
mov
add
and
mov
or
ret
xor
or
push
mov
xor
xor
sbb
push
jmp
cmp
mov
je
jge
neg
mov
pop
(bad)
(bad)
out
(bad)
adc
mov
pop
je
push
push
mov
sar
and
add
cmp
je
dec
cld
jmp
lea
lea
cmp
jb
and
add
inc
in
nop
push
sub
cmp
dec
in
cmc
push
or
ret
pop
pop
(bad)
cs
or
sub
push
mov
rcr
add
mov
das
enter
cmps
adc
nop
fidivr
dec
inc
and
dec
or
jmp
movzx
(bad)
(bad)
push
test
je
inc
mov
test
je
movzx
movzx
shl
or
les
loopne
dec
and
mov
cmp
je
inc
movzx
mov
enter
into
fldcw
sub
jmp
bound
clc
cwde
dec
dec
dec
adc
leave
je
mov
cli
(bad)
dec
mov
mov
mov
mov
lea
mov
or
mov
je
arpl
cmp
inc
push
fistp
cld
jb
cmp
ja
add
cmp
or
jmp
jne
sub
jne
xor
jle
adc
pop
adc
neg
xchg
pop
mov
mov
jge
or
cli
inc
ret
xchg
adc
pop
fld
icebp
(bad)
(bad)
fist
(bad)
add
sbb
ror
mov
jmp
stos
cmp
icebp
lea
push
inc
jno
cmp
lea
jmp
mov
addr16
aad
out
or
or
stos
mov
dec
inc
out
lea
push
push
mov
mov
sahf
ds
pop
push
lods
mov
or
aad
jge
add
fnstsw
rol
or
jo
fsubp
ja
jne
ins
jbe
outs
loop
mov
inc
adc
pop
add
mov
add
and
(bad)
(bad)
cmp
sar
add
add
sbb
jmp
shr
push
outs
push
mov
(bad)
inc
xor
mov
jecxz
repnz
jne
add
sub
mov
mov
mov
jmp
dec
stos
mov
pop
pop
pushf
add
inc
adc
mov
add
mov
test
push
je
mov
pop
xor
cmp
jb
test
inc
cmp
jb
jmp
test
lea
je
hlt
mov
lea
test
or
ds
daa
sbb
or
cmp
mov
inc
or
lds
dec
add
and
(bad)
sar
inc
or
inc
or
mov
add
push
cmp
add
xchg
imul
(bad)
jo
imul
cmp
je
movzx
mov
sti
leave
ret
mov
jne
shl
cmp
outs
into
(bad)
js
aaa
cld
jge
int
clc
push
push
xor
cmp
cmp
ror
sub
fidiv
in
jne
fwait
je
rcl
hlt
movzx
fwait
daa
cmp
(bad)
iret
jnp
lea
mov
inc
pop
fcom
test
jne
or
clc
push
mov
adc
movzx
movzx
mov
mov
push
or
stos
jge
or
jl
popf
or
data16
outs
mov
add
fstp
rcl
add
push
inc
jmp
(bad)
sbb
ret
mov
adc
xor
sbb
je
push
call
push
sbb
inc
mov
bound
and
sub
push
(bad)
(bad)
dec
jl
adc
dec
and
mov
and
mov
push
je
movs
mov
mov
mul
add
mov
adc
add
xor
out
add
pop
mov
mov
adc
add
adc
inc
add
or
or
iret
and
adc
es
and
cwde
mov
sbb
leave
ja
sbb
mov
or
add
add
sub
jne
mov
loope
jne
shr
aam
aad
xchg
std
jnp
fisttp
fdiv
inc
(bad)
enter
fbstp
inc
loope
ja
fs
loop
dec
mov
sbb
je
mov
cmp
mov
out
call
jmp
btr
and
adc
and
je
ret
ss
in
mov
push
mov
cmp
mov
mov
xchg
xchg
push
or
jo
jg
and
in
or
ror
xchg
and
mov
adc
jne
jmp
nop
dec
je
pusha
cmp
inc
jbe
xor
je
xchg
dec
je
cdq
nop
cmp
xor
or
dec
je
mov
push
in
loope
and
sbb
jecxz
je
mov
mul
mov
imul
inc
mov
mov
or
mov
mov
or
mov
mov
aas
push
aas
sbb
adc
mov
mov
sub
repz
inc
sbb
mov
mov
cmp
fcomp
jmp
jne
dec
imul
fisttp
ins
or
popa
ja
out
or
or
fcomp
mov
or
or
cmp
push
inc
div
scas
mov
push
(bad)
es
add
(bad)
fwait
sub
push
mov
add
mov
add
cmp
fcos
rol
mov
mov
mov
adc
or
dec
(bad)
and
mov
mov
or
dec
adc
xchg
adc
mov
mov
adc
dec
(bad)
and
dec
sbb
dec
sbb
push
sbb
xor
(bad)
aam
in
xlat
cmp
sbb
add
ror
or
sbb
dec
add
fisttp
pusha
cmps
sbb
(bad)
loopne
jmp
sbb
cdq
mov
sbb
cmp
popa
sub
inc
push
sub
stos
push
stos
inc
push
test
sbb
stos
push
stos
xchg
add
push
pop
fadd
test
dec
stos
sbb
xchg
and
sbb
push
xchg
test
dec
pop
sbb
jl
dec
sbb
(bad)
mov
xor
mov
xor
mov
xor
mul
add
jg
push
adc
retf
adc
mov
mov
xor
adc
cmp
push
adc
or
pop
push
repz
mov
mov
xor
push
call
shr
jmp
loop
call
jge
ficom
add
inc
or
inc
or
add
inc
fdiv
sbb
push
push
sbb
or
inc
call
into
add
mov
push
stos
inc
mov
push
enter
mov
or
add
not
mov
enter
(bad)
mov
or
inc
add
stc
push
sti
sub
push
push
or
in
pusha
cmc
adc
inc
sbb
scas
cmp
sub
adc
or
xchg
sbb
outs
add
outs
push
popa
fdiv
pop
adc
and
or
and
and
sbb
sbb
dec
js
push
and
sbb
mov
push
nop
into
or
push
sbb
sbb
ret
or
push
loope
jns
sbb
sbb
or
push
inc
outs
shl
adc
pop
inc
aaa
test
and
jg
jnp
cmp
sbb
cvtps2pd
push
sbb
mov
inc
jo
push
xchg
test
popa
inc
ja
je
jno
sbb
push
dec
loopne
movs
test
adc
add
xchg
adc
bound
add
std
lea
dec
sub
mov
retf
and
sti
sub
std
lea
sub
sub
xchg
or
sti
cmp
into
mov
aaa
mov
jns
mov
jge
push
pop
pop
pop
imul
test
dec
or
or
sbb
push
sbb
xor
jp
enter
loope
js
jecxz
shl
xchg
clc
xchg
loop
push
aad
cwde
out
pop
mov
and
add
fisttp
xlat
jno
add
mov
call
rcl
enter
dec
add
push
jle
mov
pop
sbb
add
call
mul
or
or
or
mov
aas
aad
mov
and
pop
mov
push
adc
mov
outs
not
add
das
adc
test
push
call
and
sar
adc
sbb
jmp
jbe
test
inc
adc
mov
adc
stos
xchg
inc
pop
or
dec
ret
pop
push
mov
cmps
popa
adc
or
shr
adc
sbb
sbb
xchg
mov
mov
inc
fisubr
fcom
ret
pop
xchg
mov
outs
scas
aad
popa
retf
dec
mov
adc
in
adc
and
mov
loope
cmp
xor
loopne
mov
test
and
sub
adc
adc
fidiv
adc
loop
xor
loopne
mov
mov
xor
xor
or
arpl
mov
pop
cmps
(bad)
or
pop
and
sbb
or
in
adc
push
or
aaa
es
loope
push
and
sub
loope
sbb
mov
inc
inc
sub
pop
or
je
(bad)
(bad)
jmp
inc
adc
shl
push
add
sub
mov
push
mov
mov
mov
mov
(bad)
(bad)
(bad)
stc
mov
xor
and
lea
xor
add
mov
rol
mov
add
xor
and
(bad)
(bad)
(bad)
dec
(bad)
call
mov
rol
mov
add
xor
and
lea
mov
sti
add
mov
rol
mov
add
lea
(bad)
(bad)
mov
fisttp
mov
add
arpl
jl
add
mov
sbb
inc
xor
lahf
add
cwde
or
sbb
inc
mov
in
or
mov
(bad)
jmp
add
dec
mov
jl
add
and
nop
imul
cwde
std
inc
ds
cmp
inc
jns
cmp
lahf
fs
or
out
xchg
mov
push
mul
sbb
sar
lock
mov
shl
and
mov
dec
xchg
xchg
sbb
or
ror
fs
movq
test
xchg
push
add
mov
mov
mov
fsubr
mov
adc
pop
adc
(bad)
in
pop
jb
push
adc
add
out
enter
mov
cmc
pop
jb
mov
enter
and
leave
das
in
int
and
(bad)
pop
aaa
ret
nop
xchg
pop
enter
aad
and
daa
mov
xor
jmp
inc
dec
or
mov
cmp
test
add
xor
add
mov
sub
cli
xor
loope
(bad)
inc
cli
inc
mov
and
jno
idiv
leave
lock
mov
ret
(bad)
jg
and
ins
add
rol
mov
mov
xchg
in
cmp
xor
jl
nop
(bad)
pop
inc
jmp
dec
inc
jle
xchg
dec
mov
xchg
sub
mov
cmp
(bad)
jle
sub
pop
cli
daa
mov
leave
or
xor
aam
jle
xchg
mov
cmp
aam
cmp
arpl
xor
cdq
(bad)
cmp
or
and
jl
pop
or
lods
and
jle
les
add
mov
adc
cmp
loope
jo
and
hlt
sub
rol
lock
xchg
xchg
jmp
inc
xor
pop
add
sbb
pop
ss
or
ror
jp
and
not
iret
sbb
(bad)
retf
cmp
std
cld
xor
mov
outs
adc
iret
pop
nop
out
pop
gs
int3
or
sub
mov
hlt
out
inc
cmp
pop
test
outs
bnd
jns
loopne
sub
sbb
in
add
add
repz
cmp
and
pop
nop
sub
repnz
btc
xlat
sub
rol
aaa
ins
and
add
add
rol
mov
add
jge
ja
std
in
or
add
and
dec
or
dec
mov
cmp
jae
pop
(bad)
dec
mov
shl
mov
push
add
push
mov
(bad)
jmp
push
mov
sub
mov
mov
mov
mov
mov
bswap
bswap
mov
cmp
loope
mov
dec
or
inc
and
aaa
fcomp
dec
mov
adc
and
inc
jno
mov
adc
stc
fwait
inc
(bad)
sbb
inc
and
mov
mov
sbb
outs
push
sub
inc
xor
xchg
mov
mov
cmp
mov
std
(bad)
fist
add
add
repz
rol
xor
and
add
mov
xor
ror
lea
add
mov
mov
sbb
out
(bad)
clc
add
mov
xor
ror
adc
std
pop
imul
add
mov
xor
ror
jmp
lahf
aad
and
add
sub
fadd
iret
push
or
jmp
iret
mov
into
and
mov
repz
ror
add
int
and
mov
lea
and
xor
ror
xor
xchg
mov
mov
jl
sbb
and
xchg
mov
sub
in
mov
cwde
nop
mov
xor
cmp
dec
xor
xor
and
jno
xor
shl
mov
lea
pop
mov
rol
add
add
or
jmp
and
cmp
fucomp
or
rol
xor
mov
lea
add
jmp
cmps
mov
mov
xor
add
out
jle
dec
or
(bad)
xor
mov
lea
inc
mov
and
xor
add
(bad)
and
pusha
xor
rol
xor
mov
popa
inc
(bad)
call
rol
add
add
mov
xchg
xor
jmp
scas
call
add
ret
mov
mov
rol
lea
mov
ror
xor
repz
mov
xor
call
add
mov
retf
add
sti
rol
mov
leave
xor
and
out
sbb
xor
fsub
xor
rol
add
cmp
sbb
loope
dec
mov
mov
adc
daa
cmp
fmul
sbb
inc
and
rol
add
push
sbb
pop
lea
lock
mov
push
and
sub
xor
jle
lock
rol
add
sbb
mov
xchg
sub
and
jl
sub
fdiv
jbe
rol
add
sbb
daa
daa
les
lea
push
jns
je
push
sbb
sub
xor
pop
sub
enter
sub
test
jecxz
and
xor
and
sbb
add
xor
inc
push
loope
adc
inc
and
sbb
movnti
cmp
cmp
add
test
cmp
mov
dec
jl
xor
and
pushf
xchg
cmp
and
or
add
or
push
and
pop
adc
push
loope
out
fs
loope
and
xor
push
cmp
inc
push
add
adc
nop
inc
mov
xor
and
push
or
dec
push
or
loop
fsubr
xor
into
add
or
pusha
sub
and
popf
or
adc
adc
push
loope
shl
jl
das
or
adc
add
dec
inc
pop
and
add
loope
push
and
xor
and
pop
sbb
fstp
add
pop
and
xor
test
sbb
fwait
jo
or
xor
mov
add
fbstp
fistp
ror
inc
and
out
imul
ror
(bad)
or
sub
inc
mov
xor
add
ror
cwde
jmp
jmp
repz
frstor
js
repnz
xor
shl
and
xor
add
(bad)
or
pop
mov
and
jge
stc
push
and
or
out
outs
mov
inc
xchg
xor
std
add
or
call
imul
adc
xor
mov
shl
ror
jmp
push
and
xor
xor
add
int
out
rol
or
xor
adc
xor
jmp
fisubr
fmul
jmp
je
xlat
add
popf
mov
xor
add
mov
out
rol
or
pushf
xor
call
clc
or
iret
jns
into
or
gs
add
sbb
adc
enter
pusha
sub
ja
sbb
pusha
cmp
or
out
pop
sbb
and
add
jb
xor
pop
js
mov
and
mov
and
cmp
and
push
popa
inc
ins
ins
std
mov
inc
jae
mov
ins
jns
dec
push
popa
aad
pop
or
ret
sbb
fisttp
sbb
adc
pop
pop
xchg
mov
and
adc
pop
xor
and
mov
mov
cmp
cdq
push
out
pop
cmp
or
pop
sbb
adc
inc
sbb
pop
cmp
inc
jb
outs
adc
sub
ret
xchg
adc
pop
and
xchg
and
pop
pop
leave
and
les
gs
and
mov
mov
pusha
inc
ret
sbb
mov
xlat
movs
stos
and
and
pusha
sub
call
sti
xchg
cmp
je
rcl
lds
mov
(bad)
shl
inc
pop
cmps
daa
xor
rcl
jl
push
sub
xor
mov
sub
je
jecxz
adc
inc
rcr
call
cmp
into
and
and
pop
pop
cwde
(bad)
lea
lahf
shl
les
cld
and
and
sbb
or
xor
loope
dec
lds
inc
int3
inc
xchg
sub
add
add
inc
pop
sbb
in
mov
mov
add
xchg
outs
in
mov
or
adc
xor
pushf
test
push
cli
ret
or
loop
jmp
xor
adc
or
mov
or
mov
add
mov
push
and
sbb
sbb
sub
xor
cs
test
les
sbb
sbb
sbb
sbb
sub
inc
mov
cli
mov
mov
add
mov
add
mov
mov
mov
(bad)
mov
std
xor
inc
sti
mov
add
mov
mov
mov
add
cli
(bad)
dec
inc
mov
cmp
mov
jb
add
pop
pop
pop
pop
add
mov
popf
imul
xchg
or
xchg
ror
shr
shr
jg
loop
sub
inc
mov
jmp
adc
jns
jge
add
dec
mov
mov
int3
mov
sub
pop
sbb
rcr
sbb
ins
and
test
shl
mov
std
ret
mov
cwde
adc
ins
popa
xchg
lahf
mov
fsubr
jnp
test
adc
fdivr
sbb
mov
and
les
mov
jle
daa
mov
push
mov
in
inc
imul
or
mov
sbb
neg
lea
lea
setl
push
xor
pop
lea
and
ins
out
int
dec
cmp
popa
add
cmp
dec
fsub
mov
lea
in
pusha
fs
pop
rcr
pushf
sub
das
and
ret
pop
out
call
repnz
jae
jno
gs
(bad)
cmp
fs
mov
ja
not
inc
xchg
(bad)
hlt
push
mov
push
adc
or
or
adc
xchg
stos
sub
(bad)
xlat
mov
or
xchg
rol
lea
jae
nop
dec
or
push
mov
pushf
jle
jg
es
inc
shr
lea
cmp
lods
add
test
pop
pop
jg
dec
or
mov
int3
test
lea
(bad)
lock
xor
mov
call
mov
adc
or
sti
pop
add
pop
inc
jmp
sti
cmp
mov
inc
in
push
not
call
jmp
pop
or
or
sahf
mov
mov
mov
ja
ret
out
mov
mov
inc
(bad)
hlt
xor
sar
mov
cwde
sti
out
mul
fdiv
lea
ins
pusha
fiadd
and
lahf
add
mov
add
imul
add
in
or
cmp
add
or
and
or
sbb
inc
fcomp
sbb
jae
or
pop
data16
imul
jne
add
add
adc
sbb
inc
push
in
lea
sub
out
loope
ret
mov
verw
(bad)
int3
or
mov
adc
aas
mov
and
lahf
xor
lock
pop
or
pop
xor
or
pop
xor
or
in
xor
or
(bad)
cld
div
mov
or
cmc
fidivr
lea
xchg
dec
cs
add
inc
inc
js
mov
add
cmp
scas
mov
and
scas
(bad)
out
icebp
mov
mov
daa
lea
sbb
fldenv
inc
jae
or
or
sub
adc
mov
or
mov
pop
ins
or
mov
sub
mov
push
test
cli
pop
(bad)
lock
xor
add
call
pop
fmul
push
mov
mov
ins
push
lea
data16
and
jne
ret
shl
mov
fmul
out
mov
imul
mov
sbb
loopne
je
push
dec
add
in
nop
cli
ret
and
nop
leave
xchg
sar
lea
and
push
mov
sti
stos
and
or
ret
inc
sub
mov
(bad)
leave
int
mov
int3
add
test
pop
add
xor
lea
or
out
iret
push
jmp
fdivr
ret
ret
mov
dec
or
sbb
(bad)
mov
(bad)
js
push
lea
fadd
mov
ret
pop
ret
mov
jae
cmp
imul
in
xor
mov
mov
mov
pop
ret
mov
add
sub
scas
pusha
call
sub
dec
iret
pop
push
sbb
jnp
mov
cmp
or
sbb
or
in
movs
mov
sbb
fild
ret
mov
mov
sbb
mov
pop
int3
add
sub
sbb
aas
xchg
mov
fs
movs
in
dec
xchg
fistp
dec
mov
daa
pop
rcr
and
push
push
out
mov
pusha
(bad)
or
repnz
mov
add
lea
sbb
push
jb
mov
or
jp
add
dec
enter
sub
mov
xor
push
les
out
dec
or
pusha
mov
aas
jg
sbb
add
aam
pop
in
nop
sar
xor
aad
jnp
mov
lea
scas
outs
push
sbb
xor
dec
mov
ret
scas
out
mov
xchg
pop
test
or
popa
leave
xchg
mov
mov
std
addr16
mov
mov
daa
inc
fadd
mov
or
jg
add
xor
dec
mov
lea
(bad)
in
push
add
ret
and
mov
frstor
pop
pop
mov
mov
stc
push
and
sbb
cmp
jmp
mov
(bad)
fsubr
add
call
xchg
call
mov
add
lea
fldenv
or
mov
mov
sub
adc
pop
sub
in
xchg
sbb
mov
or
add
push
adc
fst
bound
test
mov
pusha
scas
ss
ins
add
and
rcl
jecxz
lods
and
retf
cmp
fld
and
mov
and
xchg
sub
das
push
xor
push
adc
out
or
and
fs
icebp
fisttp
jbe
fst
lea
sbb
push
adc
ret
adc
pusha
(bad)
pop
adc
hlt
fsub
xor
adc
test
push
or
scas
fdiv
dec
mov
call
lods
mov
mov
dec
and
mov
movs
dec
lea
ins
or
fcom
dec
dec
or
(bad)
fistp
push
and
push
rcl
jno
mov
xlat
repz
mov
push
mov
outs
pop
sub
xor
mov
mov
sbb
cmp
mov
icebp
daa
ror
lea
cs
xor
fmul
sti
mov
js
daa
test
jl
retf
inc
cmp
xlat
or
add
xor
jge
push
mov
add
add
or
pop
or
pop
add
mov
cmp
popa
fcomp
xor
sbb
push
push
iret
pop
or
mov
sub
or
in
or
sub
loope
mov
or
out
mov
sbb
adc
cld
adc
or
add
call
fadd
pop
inc
sbb
inc
das
dec
movs
sub
jo
fs
mov
mov
div
ins
mov
mov
mov
lahf
inc
jo
stc
lock
adc
or
add
adc
or
add
adc
or
add
or
add
repnz
loop
and
fild
ret
mov
pushf
or
movs
sbb
ret
mov
sub
sbb
inc
and
fld
xchg
mov
pop
test
xor
ret
lea
and
(bad)
mov
or
add
lea
pusha
dec
add
shl
rol
stos
shl
sbb
or
xchg
mov
lea
inc
cs
sbb
dec
and
sub
pusha
add
ss
add
fs
arpl
xchg
fwait
add
sbb
pop
pop
inc
add
and
mov
das
mov
mov
dec
fiadd
test
pop
jo
rol
sbb
inc
sub
scas
jno
mov
sub
mov
jae
out
dec
test
cwde
pop
mov
xor
sti
ret
mov
ds
in
mov
pushf
or
and
pop
(bad)
push
hlt
or
mov
and
adc
sub
add
ins
adc
inc
scas
mov
or
mov
or
ret
mov
movs
imul
imul
out
test
inc
rol
retf
fnsave
dec
das
inc
ret
mov
(bad)
int3
sbb
jae
ins
xor
cmp
(bad)
and
and
popa
pop
push
das
mov
sbb
es
or
jp
mov
leave
in
add
xchg
add
and
and
(bad)
daa
out
and
in
and
in
lock
adc
iret
pop
cmp
and
lods
xlat
pop
pusha
mov
mov
test
add
mov
ins
mov
nop
sbb
and
inc
or
add
cld
mov
inc
push
pusha
andps
fsubr
add
and
inc
sbb
in
pop
dec
mov
pop
fcos
add
adc
outs
add
lea
cmp
inc
sbb
or
ja
sub
jg
mov
add
popf
sbb
sub
mov
add
pop
push
or
aam
ficomp
add
mov
fdivr
push
daa
ins
test
lea
pop
test
pop
jp
mov
pop
mov
xchg
fisttp
movs
and
outs
mov
fstp
add
bound
or
push
ins
mov
hlt
ds
cmc
popf
mov
lea
push
in
and
mov
mov
leave
bound
inc
fsubr
pop
repz
sbb
(bad)
mov
in
xchg
adc
aam
mov
adc
pop
mov
mov
in
mov
in
sub
das
lea
or
ret
jmp
loopne
inc
ret
mov
fadd
mov
fs
xor
je
pop
fdiv
jb
pop
(bad)
call
push
mov
hlt
pop
lods
in
and
(bad)
sbb
ror
int3
imul
std
ja
dec
lea
inc
jo
aas
push
mov
rcr
pop
in
fwait
mov
call
mov
or
sub
push
fadd
and
sti
adc
aas
add
sbb
pop
sub
mov
sti
sti
pop
mov
and
mov
and
xchg
and
xlat
out
mov
outs
push
mov
popa
movlps
xor
dec
mov
jl
fsub
xor
adc
lea
jb
lea
fwait
xchg
loope
pusha
push
(bad)
mov
ds
sbb
add
lea
jae
pusha
div
push
sub
cs
or
mov
and
pop
lods
sbb
mov
mov
push
out
das
sub
xor
mov
mov
fsub
adc
adc
mov
xor
adc
push
and
add
cmp
add
cmp
dec
sub
xchg
and
add
mov
add
test
mov
ins
add
or
pusha
call
push
push
push
cwde
int3
add
sbb
add
fcmovnb
sbb
add
push
mov
aam
outs
jg
or
or
outs
or
or
or
adc
pop
lock
pop
or
or
pop
or
jo
sbb
enter
inc
lods
or
lds
popa
mov
xchg
adc
xor
popa
xor
rcr
gs
cmp
scas
push
or
cld
and
jbe
stos
test
and
or
push
dec
dec
cmp
or
mov
adc
ret
mov
pop
mov
jne
lea
jne
int3
pop
mov
pop
mov
inc
pusha
or
inc
jle
jbe
or
jae
and
out
mov
or
mov
add
ins
push
jo
dec
add
adc
test
mov
int3
int3
push
xchg
jge
add
addr16
into
dec
sub
or
sub
mov
loop
sti
mov
adc
mov
and
ret
fisubr
dec
out
mov
inc
imul
jo
outs
or
int3
mov
je
mov
sbb
mov
mov
nop
popf
jns
loopne
(bad)
cld
cmp
xor
ret
pop
xchg
sbb
enter
loopne
lahf
sbb
enter
aad
jl
cmp
push
add
jb
mov
les
rol
sbb
mov
mov
pop
ret
int3
mov
push
ins
jb
sbb
or
or
cdq
inc
add
add
sbb
jbe
cdq
add
fistp
cmp
mov
pop
jnp
cmp
das
jmp
cmp
lock
mov
mov
ret
jbe
ja
icebp
mov
loopne
xor
mov
addr16
adc
or
(bad)
mov
adc
fucomip
adc
add
or
ret
mov
add
inc
ins
imul
je
add
popa
rdpmc
(bad)
outs
outs
je
std
(bad)
cmp
and
inc
cs
add
gs
bound
and
jbe
imul
xchg
or
je
push
push
gs
adc
jne
mov
jae
add
dec
jne
jns
dec
jne
pop
dec
outs
inc
jo
push
out
jb
ins
adc
popa
jb
pop
inc
bound
popa
jb
popa
fcomp
sti
mov
or
je
jb
daa
inc
jb
or
test
jae
add
outs
gs
jne
fnstenv
outs
sbb
adc
and
sti
pop
xlat
aas
sub
inc
pop
bound
and
xchg
add
je
jne
mov
popa
ins
jae
pop
add
(bad)
(bad)
pcmpeqd
jb
push
and
and
add
shl
inc
add
add
lock
pop
loopne
loopne
inc
add
dec
outs
add
arpl
popa
add
inc
add
arpl
je
inc
add
mov
push
add
ja
inc
and
xlat
fnsave
or
and
adc
pop
or
test
bound
xor
xor
cmovg
neg
jb
inc
add
add
pop
outs
add
mov
and
and
pop
(bad)
(bad)
(bad)
jg
add
popa
xor
sub
sub
sub
sub
cmp
cmp
cmp
xor
pop
inc
mov
leave
shl
out
packsswb
jno
fld
add
dec
add
aas
(bad)
std
add
dec
add
push
or
add
add
out
sbb
jb
ins
add
popa
add
mov
cmovne
jbe
outs
iret
cmp
(bad)
das
das
add
outs
popf
jae
xlat
aas
bound
jb
gs
push
or
jne
arpl
outs
add
sbb
xlat
jo
add
gs
outs
xor
jae
xor
or
es
imul
pop
jae
popa
add
popa
pop
and
arpl
imul
mov
adc
jae
clc
mov
ins
popa
jo
jae
je
sbb
ins
mov
sbb
push
pop
(bad)
ins
or
popf
outs
cmp
and
jge
jbe
jnp
dec
xchg
in
adc
gs
je
jb
mov
fadd
out
popa
cmp
das
add
xlat
jge
iret
sti
pop
sbb
add
out
xor
pop
das
xchg
ins
addr16
ret
out
jge
dec
jge
add
cmps
outs
jmp
xor
jne
outs
icebp
adc
jae
pop
inc
inc
aaa
inc
push
jo
imul
add
sub
out
cmp
jp
ds
xchg
pop
and
in
mov
push
sub
ret
xor
sub
outs
cmp
cwde
inc
ret
xchg
fwait
rcr
mov
and
add
xchg
pop
fcomp
fwait
pcmpeqd
enter
jo
std
in
sbb
sbb
add
inc
cmp
jecxz
out
pop
adc
ret
imul
mov
out
ins
and
and
add
xlat
and
push
mov
addr16
popa
outs
inc
lods
je
icebp
xchg
daa
dec
pop
inc
ja
and
and
push
gs
add
fsubp
fs
test
and
xor
mov
jne
(bad)
pop
dec
ins
js
pop
xchg
dec
sub
jne
pop
outs
cmp
mov
lea
pop
ja
push
pusha
scas
cmp
outs
add
out
xchg
inc
inc
pop
jnp
stos
mov
sub
jns
or
test
aaa
add
pop
push
pop
mov
gs
cmps
js
add
ins
add
je
mov
jge
sub
popa
or
inc
js
jae
fistp
pop
jns
xchg
mov
fisub
inc
(bad)
jns
js
dec
test
mov
jo
(bad)
or
lods
sbb
sub
pop
daa
mov
fldenv
adc
iret
lea
fwait
pop
je
jl
and
dec
mov
dec
fld
pusha
je
je
jl
xor
test
xor
sbb
add
repz
push
cmp
push
daa
jo
pop
dec
ror
jae
enter
push
ins
pushw
mov
inc
outs
in
jno
jbe
add
push
add
shl
jmp
imul
cmp
loop
or
outs
inc
(bad)
push
mov
repz
imul
je
outs
stos
dec
je
js
(bad)
mov
outs
ins
inc
dec
arpl
ror
mov
cmp
push
pop
popa
add
pop
fmul
ret
push
and
inc
outs
cmp
mov
push
pop
lahf
fwait
xchg
and
adc
cs
or
adc
add
lods
mov
add
jge
jnp
cs
pop
adc
sub
pop
mov
push
dec
pop
push
inc
push
push
push
dec
dec
push
push
adc
pop
add
inc
add
push
dec
sti
xchg
lds
dec
push
dec
or
lss
lods
dec
cmp
nop
add
test
mov
int
and
jmp
cmp
xor
add
pop
add
gs
push
adc
jne
and
imul
and
mov
and
and
push
ins
mov
imul
(bad)
pop
popa
cmp
sub
and
fs
arpl
les
jns
test
add
frstor
call
pop
pop
add
jae
pushw
add
in
inc
add
loop
out
fwait
out
inc
add
push
adc
dec
inc
add
inc
pop
xor
imul
add
add
jbe
ror
lock
lock
dec
inc
add
inc
add
add
push
pop
loopne
(bad)
mov
inc
add
enter
add
leave
inc
add
mov
lock
pop
add
adc
mov
fwait
out
inc
add
ja
inc
pop
dec
mov
or
imul
add
jmp
mov
rol
and
stos
add
loopne
xor
add
add
push
popf
jmp
xor
xor
adc
xlat
mov
adc
pop
pusha
adc
add
jl
out
add
add
add
imul
std
pop
out
daa
xor
xlat
mov
rol
inc
push
add
pop
mov
loopne
pusha
pop
jo
dec
shl
mov
and
push
cmp
jne
xor
pop
sar
xor
add
push
pop
inc
pop
mov
call
xchg
movs
hlt
adc
add
jae
ds
push
jbe
(bad)
aad
imul
or
sbb
add
xor
aas
add
pop
pop
and
xchg
rol
cmp
jmp
mov
inc
cmp
pop
outs
fs
sahf
popa
add
pop
ja
jae
pop
jns
inc
popa
xor
mov
adc
js
das
pop
test
gs
mov
push
pop
jae
jnp
jge
cmp
pop
inc
add
popf
cmp
out
sbb
pop
int3
cmp
sub
xlat
jns
pop
xor
inc
add
shr
jmp
popa
imul
in
xor
sub
dec
ins
out
inc
scas
cmps
scas
push
xor
mov
xchg
call
push
std
packuswb
inc
add
xor
test
mov
adc
sub
add
rcl
daa
xor
adc
adc
shl
scas
ins
add
inc
adc
adc
int3
sbb
dec
adc
fcom
dec
sbb
ja
and
adc
es
adc
test
push
dec
lock
adc
cmp
mov
jae
ins
add
cmp
mov
xchg
enterw
mov
rol
pop
(bad)
sbb
dec
mov
ret
nop
inc
jnp
das
in
add
pop
adc
and
xor
fsub
jae
(bad)
pusha
sbb
daa
pop
sub
fst
and
or
push
mov
mov
arpl
cmp
and
rcl
dec
xor
enter
idiv
inc
xchg
pop
(bad)
or
push
adc
adc
test
pop
inc
add
jbe
shl
mov
jb
inc
adc
movs
xor
xor
add
dec
pop
pextrw
add
daa
cs
inc
xchg
or
sbb
sar
aas
aaa
cmp
xchg
push
mov
in
mov
pop
popa
xchg
(bad)
std
ins
out
cmps
ja
mov
(bad)
inc
pushf
or
or
sbb
and
ret
pop
bound
push
add
sbb
into
dec
xor
gs
cdq
fs
int
adc
imul
sub
adc
imul
add
dec
or
fisub
xlat
inc
je
cmp
xor
fs
ins
add
neg
jne
inc
sti
inc
add
add
xchg
jmp
or
inc
fwait
jbe
push
sbb
inc
lahf
push
std
cmp
lahf
sbb
sbb
sub
nop
mov
and
and
aad
pop
fs
pop
ins
push
adc
mov
xor
sti
fsub
je
add
shl
dec
jo
pop
frstor
fisubr
neg
pop
inc
popa
xchg
clc
pop
je
outs
lea
jae
popa
jnp
cmp
xor
push
lahf
jo
xor
(bad)
sahf
cmp
lods
inc
ins
popa
cmp
jno
or
popa
inc
mov
jnp
mov
(bad)
outs
adc
pop
pop
imul
pop
xor
neg
jg
inc
and
and
add
scas
xor
arpl
ret
ret
pop
pop
sbb
adc
dec
pop
add
dec
lods
push
sti
or
add
pop
jne
xchg
pop
and
cmp
xchg
and
dec
lods
mov
lea
cmc
and
rol
and
or
jnp
out
mov
jae
cs
mov
pop
inc
inc
add
out
adc
push
inc
inc
add
rcl
or
jnp
cmp
inc
dec
adc
nop
and
adc
mov
dec
dec
add
and
pusha
nop
rcl
pop
ja
and
dec
add
pause
adc
ror
mov
shl
ret
loopne
dec
dec
pusha
inc
lahf
xchg
inc
dec
popa
fwait
and
adc
or
jns
dec
adc
fst
dec
adc
daa
adc
arpl
jno
mov
shl
jmp
shl
cmp
inc
add
sbb
inc
aaa
push
test
loopne
mov
mov
icebp
scas
or
push
mov
push
push
mov
jnp
arpl
adc
fcom
icebp
rol
fild
outs
and
aad
gs
mov
(bad)
ja
xchg
stc
sbb
jno
sub
xchg
jge
ror
push
out
xor
pop
loope
mov
ret
xlat
sbb
adc
cmp
inc
pop
fadd
sbb
test
test
add
mov
ret
sub
xor
jns
std
outs
lock
dec
xor
adc
or
pushf
cmp
mov
cwde
(bad)
adc
rcl
pusha
push
mov
add
jnp
(bad)
ja
pop
mov
dec
fsubr
rcl
sbb
push
adc
(bad)
or
inc
aaa
adc
cwde
mov
adc
push
pop
mov
je
cmp
jecxz
xlat
(bad)
jp
loop
dec
popf
mov
mov
ins
add
inc
gs
(bad)
js
sub
and
push
cdq
sbb
imul
sub
aas
inc
add
push
pop
inc
add
add
popa
adc
retf
(bad)
cmp
add
jne
std
test
pop
mov
pop
inc
add
jmp
cmp
inc
out
lds
stc
stc
pop
and
xor
jns
and
jae
xchg
sbb
shl
add
arpl
push
add
rol
imul
addr16
ja
test
mov
mov
add
adc
pop
int
pop
pop
jo
xor
ret
jne
ins
(bad)
scas
mov
test
add
pop
outs
inc
xlat
shl
leave
pop
pop
jo
add
add
nop
mov
je
adc
xor
adc
addr16
xor
adc
imul
xor
pop
adc
ja
pop
add
jns
fxtract
dec
pop
ret
pop
shl
rcl
test
mov
inc
ins
cwde
mov
ror
pop
das
pop
in
cmp
jae
add
add
and
add
ja
add
pop
pusha
pop
dec
push
push
dec
add
dec
mov
popf
xor
(bad)
add
add
and
jle
inc
add
jnp
jle
(bad)
shl
test
add
rol
adc
mov
cwde
ds
jo
add
movs
es
or
add
sbb
cs
fld
add
add
mov
sub
leave
add
xchg
test
pop
jp
push
js
add
add
js
mov
jecxz
add
mov
dec
add
daa
outs
popa
mov
add
lahf
jae
jb
add
jge
inc
mov
sub
pushf
mov
jg
jo
fs
sub
cmp
fmul
stos
adc
xchg
adc
xor
add
daa
or
pop
mov
xlat
cmc
imul
aad
pop
pop
and
idiv
push
xor
ins
inc
js
je
push
gs
outs
jb
psubusb
inc
imul
arpl
scas
ja
adc
jne
cmp
imul
ja
fisttp
popa
jo
arpl
arpl
and
es
pop
sti
pop
(bad)
jne
outs
ins
outs
imul
fs
or
enter
je
gs
je
sub
inc
paddusw
jg
imul
outs
cmp
adc
(bad)
fldcw
fwait
dec
gs
imul
popa
ins
xor
imul
call
push
push
jns
je
ins
xchg
dec
jae
gs
mov
ins
push
outs
imul
sti
and
or
aas
in
add
or
or
inc
jbe
retf
jmp
inc
xchg
arpl
adc
jae
dec
gs
xchg
dec
bnd
addr16
outs
idiv
fs
dec
jae
cdq
or
xchg
cmp
mov
ja
inc
jo
ud1
xor
fs
test
cmp
daa
inc
mul
scas
inc
and
jae
pop
std
test
push
repz
and
leave
shr
sub
jp
aas
mov
mov
xchg
into
aad
or
jae
arpl
sbb
push
popa
xlat
push
jmp
jb
lods
inc
add
loopne
xchg
outs
sbb
xchg
inc
shl
xchg
add
test
and
pop
scas
adc
jb
outs
fwait
sub
and
retf
dec
les
dec
mov
dec
add
xor
loope
xor
je
(bad)
(bad)
out
dec
call
test
adc
mov
sub
test
add
xchg
out
adc
mov
and
adc
(bad)
dec
mov
cmps
xchg
xor
dec
inc
sbb
ret
jp
inc
cmp
xchg
call
mov
add
mov
iret
mov
mov
xchg
cdq
std
ja
dec
mov
push
sbb
push
fidivr
adc
inc
lahf
push
pop
push
jmp
pop
xchg
jle
cmp
lods
mov
es
pop
mov
fstp
sub
movsx
aad
(bad)
(bad)
(bad)
inc
es
dec
mov
movs
push
outs
test
jne
inc
movs
out
pop
jns
xchg
sahf
sub
mov
(bad)
(bad)
push
inc
inc
fwait
inc
js
cmps
sub
sub
cli
ret
pop
xor
outs
outs
adc
sbb
cmp
add
stos
into
cmp
adc
and
adc
(bad)
(bad)
(bad)
inc
adc
xchg
imul
fistp
push
test
adc
add
inc
test
fwait
sub
and
inc
ins
mov
in
out
cdq
outs
add
aam
add
(bad)
(bad)
call
mov
dec
xchg
sahf
push
cwde
mov
addr16
pushf
ins
fsubr
or
cmp
(bad)
push
inc
call
inc
pop
inc
dec
mov
mov
(bad)
(bad)
(bad)
push
inc
jg
inc
test
xchg
enter
cmps
inc
not
xor
or
fldenv
sub
(bad)
dec
adc
xchg
in
jecxz
outs
in
repnz
mov
push
pop
push
stos
sub
cmp
(bad)
aas
(bad)
lock
add
sub
dec
aad
movs
leave
pop
fcos
(bad)
(bad)
call
mov
fdivr
dec
(bad)
daa
mov
inc
test
mov
jb
mov
ror
pop
push
(bad)
(bad)
(bad)
push
lods
jle
add
pop
out
cmove
add
dec
mov
(bad)
(bad)
(bad)
cmp
sub
inc
xchg
mov
nop
vcvttpd2dq
ds
sbb
call
lock
jp
adc
and
outs
xor
dec
jge
dec
adc
(bad)
fsubp
jb
and
stos
xchg
dec
mov
int3
cs
cmps
push
cmp
cld
(bad)
(bad)
jmp
lahf
sahf
sbb
mov
xlat
std
or
scas
jne
clc
iret
sahf
add
adc
(bad)
stc
mov
scas
jbe
xlat
pop
xor
sar
jno
mov
xchg
es
out
aas
pusha
(bad)
pop
pop
pop
jnp
mov
psrlw
(bad)
(bad)
cmp
sub
clc
or
pop
sub
xchg
js
adc
mov
stc
mov
call
dec
mov
push
jecxz
popf
movs
or
jle
dec
mov
popa
add
lahf
not
mov
(bad)
(bad)
(bad)
jmp
push
dec
mov
call
retf
(bad)
jnp
push
add
dec
jnp
(bad)
pop
popf
cmp
sar
(bad)
(bad)
call
inc
cdq
pushf
jp
lahf
sbb
int3
inc
cmp
outs
sub
cld
xor
sub
sub
addr16
(bad)
(bad)
(bad)
out
scas
inc
mov
ss
inc
push
dec
cwde
arpl
call
push
out
jmp
mov
fs
sub
jle
cmp
outs
in
dec
nop
xchg
adc
jns
mov
fcos
(bad)
(bad)
dec
out
movs
xor
add
mov
mov
imul
shr
xchg
lahf
(bad)
(bad)
(bad)
jmp
mov
daa
and
push
jae
mov
mov
repnz
je
sbb
ret
adc
(bad)
dec
inc
mov
fnstcw
pop
int
mov
outs
pop
out
jecxz
dec
mov
cmp
push
es
js
(bad)
(bad)
push
test
xchg
frstor
cmps
push
mov
xchg
in
push
aam
mov
cmp
(bad)
(bad)
jmp
and
imul
cmp
xor
loope
mov
xor
cs
(bad)
(bad)
call
and
cdq
mov
hlt
adc
mov
dec
mov
ret
adc
inc
nop
(bad)
(bad)
(bad)
inc
jb
and
cmps
cmp
xchg
arpl
cwde
sbb
inc
inc
lods
dec
cli
cmps
or
dec
mov
inc
push
in
mov
jmp
xchg
xor
(bad)
(bad)
call
inc
mov
repnz
sahf
dec
dec
cwde
cdq
dec
out
jae
das
lahf
sbb
(bad)
(bad)
fisttp
dec
test
leave
xor
push
repz
aas
inc
(bad)
inc
mov
dec
cmp
inc
(bad)
dec
pop
fistp
adc
xchg
int3
pop
in
scas
mov
push
push
pop
inc
movs
jecxz
(bad)
out
ss
mov
pushf
mov
(bad)
jae
je
xchg
xor
lods
jg
(bad)
cmp
adc
mov
nop
sbb
hlt
pop
push
cs
or
out
jmp
(bad)
test
(bad)
(bad)
mov
(bad)
cld
and
jmp
xor
jns
adc
pop
jno
inc
das
add
in
nop
outs
add
and
pop
pop
jmp
jmp
xchg
mov
nop
dec
out
cmp
dec
aaa
dec
mov
pop
jle
jns
push
call
xchg
jecxz
push
shl
pop
clc
jl
jl
leave
xchg
fbld
inc
test
jb
out
(bad)
call
push
aaa
nop
nop
inc
das
inc
test
icebp
dec
and
(bad)
(bad)
jmp
enter
inc
xchg
jae
dec
xchg
adc
out
jecxz
add
dec
mov
push
(bad)
(bad)
(bad)
(bad)
jg
(bad)
ret
pop
lds
inc
mov
xchg
idiv
aad
jo
stc
sahf
pusha
loope
inc
or
(bad)
(bad)
jmp
in
dec
push
call
pop
sub
xchg
cwde
mov
loopne
call
xchg
mov
(bad)
(bad)
(bad)
jmp
aas
icebp
mov
dec
mov
add
jmp
xchg
fdiv
sub
xchg
(bad)
(bad)
(bad)
in
xchg
jge
mov
hlt
fisttp
retf
ror
out
retf
cmp
mov
loope
jg
loopne
popf
lahf
aas
inc
adc
or
(bad)
call
loop
jne
rcl
sub
jl
fdivr
lahf
xchg
dec
(bad)
dec
(bad)
xlat
adc
mov
jb
lahf
sub
mov
(bad)
(bad)
(bad)
dec
xor
xchg
sub
das
jae
mov
inc
mov
add
cmp
fs
icebp
(bad)
jmp
inc
cwde
repz
pop
mov
sbb
das
(bad)
(bad)
jmp
mov
lds
cmps
jmp
dec
out
sbb
fdivr
outs
push
js
inc
mov
aas
cld
jmp
dec
mov
es
shl
cld
adc
adc
in
dec
inc
cmp
or
(bad)
(bad)
(bad)
out
pop
mov
xchg
sti
cmp
test
mov
sti
scas
mov
mov
xchg
or
loope
pop
dec
(bad)
jmp
jecxz
or
push
push
jns
mov
rcl
xchg
out
jb
or
cdq
into
adc
(bad)
(bad)
call
jecxz
aad
test
out
neg
leave
pop
mov
loope
nop
(bad)
xlat
clc
jl
xlat
sbb
retf
or
ins
(bad)
push
inc
mov
xchg
stos
adc
imul
mov
jg
mov
ss
and
ret
das
add
xchg
fiadd
(bad)
call
xchg
push
(bad)
mov
stos
fs
pop
outs
fs
adc
(bad)
(bad)
(bad)
dec
leave
aad
inc
mov
xor
xchg
xchg
mov
adc
inc
lods
jmp
lea
and
(bad)
(bad)
dec
cmp
dec
mov
mov
add
adc
mov
retf
jle
and
mov
mov
jne
jp
add
dec
sub
xchg
(bad)
aas
sti
icebp
xchg
sti
mov
or
mov
xchg
inc
push
mov
rol
or
stc
mov
pop
and
jge
aam
stos
jecxz
mov
(bad)
(bad)
call
jmp
(bad)
jle
push
in
inc
inc
mov
add
xor
in
lock
idiv
push
(bad)
(bad)
(bad)
call
sub
sahf
ficom
xchg
mov
scas
xchg
cld
add
sub
adc
mov
(bad)
(bad)
inc
sub
dec
in
dec
test
fidiv
push
jp
rcr
sbb
cmp
sub
sahf
mov
cmp
std
dec
sub
inc
lahf
in
fs
cmp
fdivr
aas
rol
dec
cmps
pop
(bad)
arpl
(bad)
(bad)
(bad)
(bad)
push
pop
in
dec
es
test
mov
rcl
sub
test
clc
(bad)
jmp
mov
sti
sub
pop
or
dec
mov
xor
push
and
(bad)
jg
jg
xchg
outs
dec
(bad)
cmp
repz
inc
xchg
mov
ss
(bad)
(bad)
call
cmp
push
fadd
inc
inc
or
dec
ss
addr16
inc
cdq
dec
sahf
jg
dec
pop
call
inc
in
stc
stc
out
jl
outs
scas
fistp
ret
jg
cmc
dec
mov
(bad)
jmp
mov
test
cmps
scas
sahf
imul
(bad)
push
add
repz
mov
sub
adc
mov
data16
popa
jb
dec
neg
dec
add
ins
push
rcr
inc
gs
fmul
mul
dec
outs
push
gs
outs
jbe
inc
outs
jb
gs
push
popa
ins
add
cmp
mov
add
inc
je
inc
add
pop
push
jo
popa
je
dec
popa
jns
jb
call
and
add
gs
xor
fs
inc
dec
push
dec
inc
pop
jnp
(bad)
(bad)
inc
inc
inc
inc
ss
sub
sub
sub
sub
xor
(bad)
mov
dec
outs
jo
outs
arpl
jb
inc
add
push
dec
inc
pop
add
(bad)
(bad)
inc
pop
push
push
dec
push
inc
push
inc
pop
dec
inc
push
push
inc
inc
inc
pop
pop
push
inc
push
pop
inc
push
inc
dec
push
pop
dec
(bad)
(bad)
(bad)
dec
push
inc
dec
inc
push
pop
pop
arpl
gs
xor
inc
xor
sub
sub
dec
std
out
je
inc
inc
xor
aaa
arpl
(bad)
out
(bad)
inc
dec
push
inc
pop
push
pop
pop
xor
inc
inc
xor
cmp
cmp
xor
fst
(bad)
inc
xor
pop
aaa
cmp
xor
ss
inc
jb
sbb
dec
jmp
inc
js
add
jb
gs
jmp
and
push
fbld
jae
outs
jb
imul
adc
jp
pop
jae
jae
jo
outs
jb
in
dec
dec
out
or
cmp
add
stos
jmp
add
imul
pop
cmp
addr16
je
jb
ins
popa
jae
pushf
scas
mov
sbb
add
jb
jne
mov
inc
ins
ins
outs
ins
jbe
imul
fiadd
inc
imul
jne
ss
inc
ret
pop
ins
dec
outs
popa
std
(bad)
(bad)
fs
imul
js
inc
gs
outs
fs
gs
popa
outs
fs
gs
cwde
fist
add
adc
packsswb
jnp
dec
outs
outs
xor
das
inc
ret
dec
ins
jne
push
je
outs
outs
inc
popa
arpl
jmp
test
imul
ja
jbe
dec
movhps
cli
jne
inc
ins
outs
jmp
clc
mov
sbb
imul
outs
fadd
push
popa
add
jb
jnp
inc
clc
mov
jae
jb
inc
sbb
push
adc
xchg
cmp
ror
andnps
dec
outs
outs
imul
jbe
push
inc
and
xor
jne
mov
jmp
ins
ins
outs
outs
test
add
(bad)
or
cmp
xor
xor
xor
xor
xor
xlat
jne
inc
add
add
xor
xor
test
xchg
adc
outs
je
imul
jns
xor
pop
ja
adc
add
cmp
neg
jne
aaa
dec
ss
inc
and
add
psubusb
ja
add
xor
aaa
pop
inc
add
add
dec
test
xor
pop
add
add
cmp
inc
xchg
ins
add
and
xchg
ja
jmp
dec
dec
pop
dec
dec
inc
inc
pop
mov
retf
hlt
call
inc
dec
pop
push
inc
push
dec
push
push
inc
in
ss
aaa
xor
sub
xor
xor
sub
sub
sub
xor
data16
xor
mov
out
mov
inc
add
dec
add
dec
add
popa
das
adc
sbb
inc
and
and
ins
jae
lock
inc
dec
inc
rol
inc
inc
fnsave
add
mov
inc
add
rol
add
pusha
mov
inc
inc
push
pop
push
push
jne
(bad)
fistp
cmp
inc
sub
sub
sub
add
test
sbb
xor
aaa
xor
arpl
dec
add
inc
inc
dec
dec
aas
jne
jno
dec
dec
dec
bound
outs
mov
icebp
packssdw
inc
ins
clc
mov
bound
fnstsw
popf
sub
mov
add
add
lods
inc
add
pop
sar
aaa
fbstp
pusha
dec
inc
add
cdq
inc
add
movs
inc
add
adc
sbb
shl
pusha
jo
adc
add
pop
xchg
add
or
pusha
or
sub
out
mov
inc
cmp
loopne
inc
add
lahf
jmp
lock
pop
add
aaa
rcl
adc
mov
and
xor
mov
rol
push
lahf
xor
xchg
push
das
mov
test
add
cmps
add
push
inc
add
jge
mov
add
jo
ss
xlat
pop
nop
add
add
mov
add
and
ror
rol
idiv
inc
add
pop
adc
dec
xchg
and
rcr
lds
pop
fwait
add
inc
sub
cmp
push
push
dec
jno
dec
add
outs
add
inc
addr16
and
cmps
gs
mov
imul
push
mov
jecxz
mov
add
mov
fild
push
pop
jo
nop
mov
sar
xor
adc
adc
inc
add
add
shl
lock
dec
sar
jo
mov
mov
pop
retf
inc
add
mov
add
sbb
fsub
ret
sti
pusha
or
mov
mov
int3
cmp
arpl
or
pop
mov
lock
pusha
adc
fsub
add
jno
addr16
pusha
aaa
movs
inc
add
adc
and
mov
add
cmp
sar
xchg
arpl
fs
lahf
sub
xchg
lea
jp
and
add
add
ret
cmp
add
push
add
and
jae
adc
jmp
mov
cmp
ins
add
ret
sbb
cmp
dec
sbb
add
mov
loopne
dec
inc
add
jnp
mov
push
aas
jno
add
add
mov
mov
add
pop
xor
pop
mov
push
pop
mov
add
or
aas
jp
dec
xor
popa
pop
stos
pop
cmp
and
sub
push
(bad)
push
cmc
jb
pop
jnp
mov
mov
aam
ss
ror
and
pop
add
jo
cmp
retf
aas
add
add
inc
xchg
outs
pop
lods
sub
cmps
add
xchg
push
add
or
in
pop
iret
sahf
or
inc
add
adc
mov
(bad)
xchg
ret
cmc
aaa
pop
aaa
mov
dec
add
inc
add
aad
imul
sbb
add
ins
or
es
test
add
mov
lods
shl
je
sub
cmp
add
aam
jnp
xor
fadd
jno
idiv
dec
std
jmp
sub
add
addr16
imul
mov
xor
pusha
pop
pop
push
test
call
gs
loope
mov
xor
lods
ins
and
scas
cs
or
jo
cdq
(bad)
xchg
sbb
and
dec
(bad)
ja
(bad)
add
fwait
sub
mov
inc
inc
mov
sbb
(bad)
pop
jns
and
pop
daa
adc
xchg
fist
rol
push
sbb
movs
gs
add
jae
or
jmp
inc
xchg
inc
cmps
add
dec
test
ins
and
xchg
sub
in
ins
aad
or
mov
imul
or
xchg
push
test
popa
mov
add
aaa
aas
aaa
mov
and
xor
rol
inc
loope
inc
lock
gs
shr
adc
in
addr16
and
adc
arpl
adc
add
arpl
jb
js
outs
ss
jne
add
cmc
push
sbb
pop
pop
or
jbe
je
xchg
scas
xor
lds
inc
stos
popa
mov
fstp
mov
dec
call
adc
add
or
cmp
pop
lahf
aaa
scas
scas
dec
lods
outs
jmp
aaa
push
xchg
xor
jnp
add
jmp
pop
ret
and
add
ret
xchg
dec
dec
inc
pop
inc
adc
xchg
lds
dec
test
xor
xor
dec
xor
dec
in
lds
sbb
cdq
or
or
adc
cmp
dec
mov
jbe
and
mov
xor
or
sbb
xchg
or
push
adc
pop
add
xchg
dec
add
add
popa
inc
dec
rol
xor
pop
aas
js
mov
jne
(bad)
or
pop
push
jno
push
inc
cmp
adc
rcl
inc
(bad)
xchg
popa
(bad)
sub
sbb
adc
and
xlat
leave
push
inc
lahf
addr16
adc
and
lahf
mov
rol
aaa
fst
push
add
(bad)
push
gs
fnsave
or
bound
push
push
mov
push
sub
rol
pop
pusha
retf
(bad)
jmp
icebp
inc
add
mov
hlt
int
dec
inc
jmp
pop
gs
inc
xchg
mov
test
xor
sub
shl
mov
loope
ret
aam
push
(bad)
jae
inc
call
mov
aas
movs
addr16
and
jecxz
mov
dec
lods
pop
cmc
jae
data16
dec
inc
jns
xor
inc
push
cmp
pop
jnp
or
adc
push
mov
mov
fbstp
add
pop
out
or
stos
mov
and
or
lods
movs
inc
add
push
repz
add
lds
popa
and
test
adc
add
pop
sbb
xor
outs
and
daa
shl
in
sbb
fwait
ins
or
rol
and
adc
sbb
test
add
jo
cmp
push
ins
add
cmovg
pop
sbb
dec
cmp
arpl
adc
pop
or
xchg
add
(bad)
sbb
aas
jns
pop
shr
mov
mov
add
rcr
mov
add
or
mov
retf
aad
mov
xchg
add
sbb
dec
cmp
dec
daa
pop
lea
pop
repz
and
(bad)
les
sbb
fsubrp
mov
jae
sub
stos
add
add
icebp
and
jmp
add
rep
popw
inc
sub
test
add
mov
jecxz
add
or
outs
jge
sbb
mov
out
mov
(bad)
push
std
pop
adc
and
mov
and
dec
add
adc
jp
(bad)
imul
or
pushf
sbb
dec
dec
sub
fldcw
jmp
popa
mov
das
ins
popa
mov
sub
dec
(bad)
mov
imul
cmps
aas
rol
adc
ins
add
out
mov
mov
or
dec
or
add
mov
or
pop
xor
jae
mov
xchg
pop
nop
mov
and
sbb
push
stos
mov
add
sub
loope
or
mov
inc
mov
jmp
or
dec
push
inc
bound
sti
inc
cmp
js
sub
test
mov
iret
imul
adc
and
sub
rcl
dec
aas
daa
pop
push
mov
jae
push
pop
xor
add
or
rol
xchg
and
pop
mov
ja
dec
add
or
or
xlat
aas
add
or
test
sti
lahf
sti
in
sub
sub
lods
popa
arpl
popa
test
push
fst
fadd
imul
add
add
mov
and
outs
les
out
rol
mov
retf
inc
mov
add
dec
sub
inc
sbb
daa
fsub
adc
cmp
pop
int
out
pusha
xchg
push
in
(bad)
aaa
dec
jp
pop
ret
daa
xlat
add
lea
xor
gs
aad
enter
jns
outs
popf
fisubr
xor
dec
add
in
pop
mul
stos
push
fcomi
sub
pusha
xor
push
sub
sub
inc
push
add
mov
xor
pop
sub
add
sbb
mov
mov
adc
push
scas
push
pusha
pusha
add
dec
ins
push
inc
or
dec
dec
xor
sbb
jne
mov
push
test
add
add
scas
aaa
shl
inc
sbb
add
ja
adc
outs
add
sbb
push
mov
add
push
test
data16
push
xchg
pop
dec
pusha
xor
mov
sub
push
xchg
jnp
enter
xchg
rol
sbb
and
pop
pop
rcl
pop
sbb
scas
(bad)
adc
or
xor
and
add
or
dec
gs
sub
pop
pop
pop
xchg
or
stos
push
or
loopne
sahf
adc
add
xchg
(bad)
int3
adc
xchg
scas
pop
cmps
gs
add
dec
inc
adc
mov
sbb
icebp
dec
and
shl
nop
jmp
sbb
inc
pop
enter
dec
cmps
mov
add
inc
xchg
popa
mov
push
lods
xchg
dec
push
and
lods
pop
push
add
jb
mov
mov
sub
aas
mov
sub
mov
pop
adc
or
pop
out
mov
add
mov
mov
sbb
dec
jmp
push
mov
add
add
iret
pop
shl
inc
call
leave
add
dec
test
xchg
cmp
or
out
adc
jecxz
pop
mov
mov
call
or
lds
loopne
enter
add
ins
adc
pop
cmps
mov
push
inc
mov
inc
pop
inc
mov
fs
popf
sub
bound
add
jae
cwde
shl
fist
and
push
inc
or
dec
adc
adc
xor
lock
lea
sbb
lahf
lahf
or
add
mov
jmp
test
sub
add
inc
jns
add
loopne
sbb
xchg
mov
sbb
pop
pop
xlat
sub
or
push
xchg
sbb
add
xor
iret
and
pusha
xchg
popf
cmp
push
mov
lds
or
inc
pop
loopne
sub
cmpps
sbb
inc
add
mov
mov
test
pusha
mov
std
pop
ins
add
pop
sub
mov
shl
aad
sub
add
jne
dec
cwde
in
js
dec
pop
add
add
and
sbb
ret
xchg
aaa
inc
dec
cmp
or
in
pop
pop
mov
lock
pusha
sbb
xchg
mov
mov
xchg
dec
and
pop
rol
pop
out
push
(bad)
or
rol
mov
mov
inc
adc
xor
popa
xor
outs
add
sub
mov
stos
push
xchg
or
popa
adc
movs
scas
add
mov
js
mov
mov
xor
push
sub
cmp
ins
arpl
xchg
inc
mov
jecxz
xor
inc
add
push
es
js
(bad)
jns
jns
mov
xor
xchg
adc
jae
pop
jecxz
call
adc
arpl
add
gs
iretw
inc
sbb
adc
icebp
push
or
movs
mov
dec
aas
lds
add
stos
add
mov
inc
gs
inc
pop
les
inc
loope
xorps
pop
xor
pop
add
inc
pop
fs
aaa
ret
mov
cdq
sbb
cmc
mov
inc
mov
xchg
jns
push
xor
and
(bad)
daa
jb
xchg
sub
stos
push
pop
sbb
(bad)
icebp
adc
xchg
mov
or
pusha
xchg
lea
hlt
sub
pop
pop
add
test
push
iret
inc
arpl
mov
arpl
xchg
sub
push
xchg
bound
mov
mov
rol
imul
and
add
(bad)
mov
and
addr16
xor
jecxz
or
adc
jmp
arpl
sub
push
push
jno
add
mov
mov
xor
pop
xor
xchg
xor
pusha
ror
and
mov
dec
sbb
push
neg
inc
add
test
or
xchg
or
inc
sbb
fcmovnb
test
ret
movs
inc
pop
dec
add
adc
or
fwait
adc
adc
push
mov
aas
arpl
xor
or
ss
pop
ret
add
cmovns
add
popa
mov
push
stc
add
rcr
and
add
lahf
outs
and
pop
int
or
pop
sbb
and
add
popf
pop
adc
and
cmp
popf
add
sbb
cmp
in
dec
adc
jmp
stos
xchg
scas
push
arpl
and
mov
mov
add
mov
aas
add
push
add
push
add
inc
and
aaa
and
daa
punpckhwd
inc
imul
mov
push
xchg
xor
aaa
mov
cmp
jg
adc
jmp
jo
ins
test
ins
add
popw
or
push
fs
fadd
jns
mov
rcr
sbb
comiss
fnsave
pop
pop
mov
add
idiv
cmp
lds
inc
add
cmp
mov
sub
shl
adc
cmp
inc
rcr
jno
cmp
adc
and
sahf
popf
ffreep
add
jae
ret
add
out
sub
inc
pop
mov
out
inc
imul
dec
sldt
nop
adc
or
or
cmp
jo
ret
and
sbb
cmp
add
mov
dec
pmovmskb
and
inc
add
xor
push
add
mov
xor
cmp
xchg
and
mov
in
mov
pop
add
push
dec
jg
test
inc
inc
inc
inc
inc
(bad)
(bad)
(bad)
inc
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jmp
outs
jo
jb
je
jbe
js
jp
xor
xor
sub
add
ins
add
adc
push
pop
inc
add
inc
hlt
xor
lahf
iret
mov
jo
sar
je
ins
jne
imul
in
into
inc
sti
adc
ins
push
iret
xor
(bad)
call
fs
add
inc
add
inc
add
add
fbld
addr16
add
and
inc
add
mov
shl
cmp
mov
stc
cmps
jmp
rol
and
add
mov
jg
xor
pop
int
add
xor
ins
inc
jbe
out
add
add
lock
mov
add
xor
xor
add
xchg
(bad)
inc
jo
lock
es
cmp
add
sub
add
mov
add
add
sbb
add
jmp
test
enter
or
add
shl
clc
cld
add
inc
lock
adc
add
gs
adc
popaw
imul
dec
mov
and
or
adc
add
cmp
movs
shl
lahf
sub
(bad)
dec
mov
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
(bad)
(bad)
(bad)
aas
pop
or
(bad)
push
xchg
sbb
jns
cmps
or
shr
std
das
mov
sbb
in
scas
loope
(bad)
(bad)
(bad)
mov
inc
nop
jl
cdq
jg
icebp
inc
cdq
mov
mov
repnz
push
cld
mov
(bad)
(bad)
jmp
dec
push
jno
(bad)
pop
movs
jle
xchg
hlt
(bad)
je
or
pop
int
jno
dec
adc
(bad)
(bad)
(bad)
(bad)
jnp
pop
pop
ret
xor
mov
(bad)
pusha
sub
jns
retf
fstp
(bad)
(bad)
dec
mov
sahf
ins
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
jmp
xchg
stos
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
(bad)
(bad)
(bad)
jmp
adc
mov
mov
test
je
ds
into
push
xchg
xchg
(bad)
(bad)
jmp
adc
sub
mov
mov
data16
or
(bad)
(bad)
(bad)
jmp
test
jl
xor
test
mov
test
add
fmul
ds
(bad)
(bad)
jmp
lds
(bad)
inc
hlt
add
test
fwait
pop
sahf
inc
push
jmp
call
addr16
stos
shl
push
fsubr
cmps
setbe
or
(bad)
(bad)
(bad)
jmp
cmp
push
lock
sbb
add
data16
inc
sbb
out
(bad)
(bad)
(bad)
dec
movs
test
pop
mov
fdiv
loopne
and
test
push
push
bound
dec
ja
ss
(bad)
sbb
xlat
shl
dec
adc
rcl
jmp
leave
jb
(bad)
(bad)
(bad)
inc
jnp
cdq
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rol
test
rol
lahf
inc
ret
pop
arpl
sbb
push
ins
ds
cmp
outs
in
push
cmp
push
cld
(bad)
(bad)
(bad)
jmp
xchg
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
retf
(bad)
(bad)
(bad)
inc
pcmpeqb
inc
cmp
rcr
sti
sar
or
pusha
sbb
add
inc
(bad)
and
jmp
mov
movs
mov
and
fcmovnu
push
jne
adc
push
push
das
stos
push
add
(bad)
(bad)
(bad)
push
pusha
xchg
std
dec
jnp
push
sbb
ds
mov
cs
xchg
fld
fcomip
test
(bad)
(bad)
(bad)
call
ret
(bad)
jle
(bad)
xor
jae
dec
mov
pop
retf
mov
lock
(bad)
(bad)
call
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
(bad)
(bad)
(bad)
(bad)
jmp
xor
movs
inc
adc
(bad)
call
retf
add
(bad)
sahf
jle
mov
icebp
sub
(bad)
(bad)
(bad)
call
jno
lods
jmp
mov
loopne
(bad)
scas
das
pop
cmp
mov
jne
sti
loop
(bad)
(bad)
(bad)
dec
adc
or
dec
sbb
(bad)
iret
shr
and
(bad)
(bad)
(bad)
jmp
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
(bad)
(bad)
push
cmp
jl
test
shl
pop
push
add
jae
xchg
ja
sbb
and
out
cli
mov
cmc
inc
push
(bad)
iret
xor
int
mov
sbb
dec
jle
scas
sub
(bad)
inc
pop
mov
and
loopne
push
fwait
ss
mov
arpl
cmps
fistp
inc
sar
(bad)
(bad)
js
push
pop
fldenv
mov
sub
enter
jae
retf
(bad)
(bad)
(bad)
push
push
add
adc
push
(bad)
in
fwait
mov
add
mov
mov
or
jmp
xchg
repnz
arpl
cs
test
pop
sub
call
(bad)
lahf
test
push
test
jo
dec
inc
sub
(bad)
es
mov
outs
(bad)
(bad)
(bad)
jmp
mov
mov
(bad)
jno
stos
in
call
call
sahf
mov
movs
add
(bad)
(bad)
(bad)
call
sub
inc
adc
cmp
in
cwde
push
aas
gs
inc
pop
(bad)
in
imul
neg
(bad)
(bad)
jmp
out
sub
lock
fisttp
jo
(bad)
jmp
push
add
imul
(bad)
dec
leave
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
(bad)
(bad)
(bad)
(bad)
ds
scas
fidivr
inc
jge
mov
fidivr
mov
or
lock
sbb
push
or
(bad)
(bad)
jmp
pop
jp
and
stc
adc
jl
inc
xor
in
(bad)
(bad)
(bad)
(bad)
cmp
fcmovb
aaa
xor
mov
cmps
(bad)
call
ror
ds
enter
jne
cdq
int
(bad)
(bad)
(bad)
jmp
das
push
jmp
mov
sbb
mov
mov
inc
outs
mov
adc
sub
jl
and
mov
push
scas
mov
ficom
or
mov
aas
iret
fcomp
jb
(bad)
(bad)
(bad)
call
jno
cs
sbb
int
lahf
sbb
jp
fimul
je
call
cmp
jp
(bad)
(bad)
(bad)
in
cli
sbb
or
ret
les
sbb
or
adc
fst
mov
mov
adc
sub
add
sahf
clc
fbstp
dec
xor
(bad)
ja
sbb
(bad)
inc
(bad)
mov
cmp
movs
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
(bad)
(bad)
inc
or
xchg
out
ja
push
cmp
sub
sbb
ds
(bad)
(bad)
inc
js
dec
cs
adc
jmp
hlt
sub
idiv
(bad)
(bad)
push
cmp
cmp
pusha
jns
sbb
cmps
and
adc
imul
lods
jmp
pop
ret
jmp
jmp
or
cmps
shl
jg
sub
mov
out
fnsave
ret
movs
pop
ins
mov
add
into
(bad)
(bad)
(bad)
(bad)
out
cmp
out
sub
and
jne
fucomp
adc
int3
(bad)
(bad)
(bad)
call
xchg
mov
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubr
(bad)
(bad)
(bad)
(bad)
out
cmps
sub
pusha
stos
pop
stos
pushf
outs
test
mov
push
mov
mov
mov
xor
(bad)
(bad)
(bad)
inc
mov
cmp
jmp
and
sbb
push
fwait
cdq
mov
not
call
clc
ja
jecxz
pop
xchg
in
adc
mov
(bad)
mov
mov
cmc
(bad)
(bad)
(bad)
call
jb
sbb
ret
sbb
or
push
in
(bad)
out
bnd
(bad)
(bad)
call
inc
xor
in
sub
jae
jl
fst
pop
jecxz
fs
loopne
and
(bad)
inc
stos
stos
mov
ror
cli
inc
hlt
inc
(bad)
mov
push
sbb
and
inc
sahf
jns
(bad)
(bad)
(bad)
(bad)
fadd
dec
test
push
bound
iret
inc
lea
or
ret
and
(bad)
(bad)
(bad)
(bad)
jg
je
imul
mov
push
add
sbb
add
and
lea
(bad)
(bad)
call
cmc
push
or
hlt
lods
sbb
xchg
lock
inc
jle
(bad)
icebp
in
pop
(bad)
fstp
and
fdivrp
(bad)
(bad)
(bad)
jl
je
retf
cmps
repnz
xor
test
clc
sbb
out
call
stos
cmps
imul
ret
(bad)
add
fmul
or
test
std
leave
sahf
push
push
rcr
jae
(bad)
(bad)
(bad)
fcmovne
mov
jns
pop
addr16
inc
jcxz
xor
(bad)
ds
clc
sub
out
ds
(bad)
(bad)
call
sub
sbb
pop
cmp
xchg
sbb
dec
div
imul
aam
jbe
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idiv
(bad)
(bad)
(bad)
call
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
(bad)
(bad)
(bad)
(bad)
mov
shr
jg
test
xor
cmp
push
out
and
stos
and
(bad)
jmp
hlt
sub
fiadd
mov
bound
push
movs
ror
out
lea
(bad)
(bad)
(bad)
dec
lods
xchg
push
loopne
mov
(bad)
hlt
jp
push
into
stos
in
pop
aaa
rcr
sub
xor
(bad)
jmp
mov
xlat
cmp
mov
cmp
cli
leave
sbb
xor
es
jecxz
je
outs
(bad)
(bad)
(bad)
(bad)
cmp
inc
pop
(bad)
out
push
dec
cmc
or
xchg
mov
fsubr
dec
mov
(bad)
(bad)
call
lea
dec
xchg
sar
adc
int3
xor
loope
push
dec
sub
(bad)
(bad)
jmp
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
(bad)
(bad)
call
aas
adc
dec
fadd
stc
pop
nop
movs
jns
inc
pop
outs
mov
push
pop
(bad)
(bad)
(bad)
push
rol
fwait
aad
sar
js
and
mov
ins
arpl
ret
(bad)
(bad)
(bad)
dec
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
(bad)
(bad)
inc
mov
fisubr
mul
sar
xchg
mov
bound
jge
lock
int3
out
mov
call
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outs
outs
cmp
std
clc
hlt
pusha
fcom
(bad)
(bad)
(bad)
jmp
dec
loope
cdq
or
push
jnp
aaa
sub
ins
cmp
gs
add
rcr
(bad)
or
push
mov
(bad)
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
(bad)
(bad)
(bad)
mov
mov
(bad)
cmp
cmp
jns
adc
xchg
loop
sub
inc
(bad)
(bad)
(bad)
jmp
sub
int3
dec
jne
sbb
cs
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
(bad)
call
cli
in
retf
mov
loope
pop
push
inc
inc
xchg
adc
outs
in
or
sub
stos
aad
scas
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
fs
cmp
jnp
pusha
dec
pusha
add
cmp
(bad)
(bad)
call
mov
cmp
add
inc
ja
cld
xlat
xor
xor
lock
mov
pop
add
push
mov
ja
scas
call
push
popa
cs
mov
mov
out
je
ret
xchg
stc
data16
(bad)
(bad)
call
mov
mov
frndint
inc
popa
es
test
sbb
test
xchg
pop
xchg
mov
(bad)
(bad)
(bad)
inc
push
mov
xchg
push
aad
dec
fiadd
leave
loope
or
dec
bound
jne
sbb
(bad)
(bad)
push
mov
inc
xor
add
pop
call
and
(bad)
outs
sbb
(bad)
(bad)
call
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
(bad)
(bad)
(bad)
call
add
les
out
daa
mov
call
pusha
ret
mov
test
sub
(bad)
(bad)
(bad)
push
loopne
cmc
shr
fdiv
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
retf
(bad)
(bad)
(bad)
(bad)
mov
mov
sbb
add
dec
cmp
jl
jl
jb
(bad)
(bad)
(bad)
inc
mov
rcr
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
(bad)
(bad)
(bad)
call
clc
out
mov
adc
mov
out
aad
les
push
into
mov
(bad)
fnsave
call
and
cli
push
addr16
pusha
inc
aaa
into
cmp
iret
cmc
cli
shl
ja
stos
sbb
mov
(bad)
(bad)
call
mov
sar
mov
aad
jae
mov
jnp
add
imul
(bad)
(bad)
(bad)
push
mov
outs
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
ud0
(bad)
call
fimul
aad
dec
ror
cmp
push
inc
mov
lods
add
pop
mov
(bad)
(bad)
jmp
loop
out
arpl
out
xchg
imul
and
stos
add
movs
movs
shl
pushf
mov
(bad)
inc
push
adc
fs
loope
cmp
jmp
out
das
(bad)
(bad)
(bad)
inc
(bad)
push
imul
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
(bad)
(bad)
(bad)
(bad)
jmp
fnstenv
sub
cmp
add
ds
shr
sub
lahf
(bad)
(bad)
(bad)
call
fwait
mov
(bad)
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
(bad)
(bad)
sar
(bad)
(bad)
(bad)
call
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
test
call
and
lock
mov
sbb
xchg
sub
cmp
(bad)
(bad)
call
cmc
and
sti
pushfw
cmc
sbb
fsub
sub
xor
std
push
mov
xor
add
ja
(bad)
(bad)
(bad)
jmp
clc
(bad)
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
(bad)
(bad)
(bad)
jmp
and
mov
mov
inc
cmp
fimul
out
adc
scas
(bad)
(bad)
(bad)
jmp
std
sub
pop
or
inc
call
fisubr
enter
idiv
pop
inc
lea
jg
ror
mov
push
fld
pop
cmp
ds
mov
test
jmp
test
adc
inc
outs
cmp
arpl
fwait
rcr
ja
scas
jo
dec
test
push
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shl
scas
adc
(bad)
(bad)
(bad)
jmp
sbb
lahf
mov
into
cmp
outs
sub
add
daa
jb
mov
adc
popa
fdivr
xchg
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
(bad)
(bad)
jmp
not
(bad)
mov
(bad)
stos
call
sbb
(bad)
sar
fimul
aad
ret
cmp
(bad)
(bad)
inc
addr16
(bad)
jl
stc
lea
mov
mov
sahf
idiv
mov
aad
pushf
inc
fldenv
sub
xchg
(bad)
(bad)
(bad)
(bad)
mov
jno
xchg
(bad)
adc
in
jmp
mov
pop
fs
shr
sar
(bad)
push
gs
rcl
inc
movs
add
push
outs
in
loopne
fistp
dec
fs
pop
(bad)
(bad)
(bad)
call
sub
rcr
bnd
inc
je
sbb
mov
ret
lea
(bad)
fild
das
cdq
fwait
inc
outs
or
sbb
fimul
fcomp
push
iret
jns
into
outs
jle
int
mov
(bad)
(bad)
(bad)
call
add
ror
not
and
and
cmps
xor
int3
push
bound
jmp
ss
outs
int3
jae
mov
dec
mov
dec
adc
(bad)
jno
mov
out
adc
xor
shl
inc
call
leave
add
test
loop
and
xor
(bad)
(bad)
push
add
jl
retf
mov
pushf
jbe
sar
push
shl
inc
push
pusha
mov
inc
and
(bad)
(bad)
(bad)
mov
lds
jne
dec
dec
test
(bad)
call
jp
stos
stc
dec
pop
ret
(bad)
(bad)
call
mov
ret
add
loope
(bad)
imul
pop
cmps
sub
out
ret
dec
(bad)
(bad)
push
jecxz
(bad)
push
out
ret
cmp
bound
arpl
bound
arpl
dec
mov
and
inc
jo
jb
ins
gs
test
(bad)
and
xor
adc
(bad)
jmp
out
pop
sub
(bad)
test
sub
jae
jp
and
and
je
popa
and
push
xchg
in
jmp
jo
and
and
ja
mov
inc
enter
xchg
(bad)
(bad)
mov
cwde
das
mov
inc
aaa
jno
sti
shl
(bad)
cmp
adc
pop
movs
cmp
aad
sbb
cwde
stos
pop
fadd
pop
adc
test
and
(bad)
(bad)
(bad)
(bad)
jge
push
je
mov
and
fwait
rol
fwait
in
inc
mov
bswap
(bad)
(bad)
(bad)
jmp
jmp
dec
fsubr
stc
jbe
push
ds
ins
(bad)
xor
(bad)
(bad)
(bad)
(bad)
(bad)
jg
mov
inc
xchg
cmps
aad
arpl
push
sub
adc
or
cs
ins
sub
adc
(bad)
(bad)
dec
or
or
cs
ret
sub
xchg
mov
data16
mov
push
ins
(bad)
sbb
xchg
shl
cdq
(bad)
test
push
push
shl
ja
daa
mov
(bad)
(bad)
(bad)
mov
sbb
dec
stos
fmul
retf
rep
cs
outs
arpl
test
(bad)
(bad)
(bad)
inc
(bad)
mov
(bad)
mov
movs
mul
jno
addr16
push
scas
addr16
cmp
(bad)
(bad)
push
dec
movs
jg
push
push
mov
fwait
stos
fld
pop
and
gs
ret
out
and
das
cmp
sub
xchg
cld
loope
dec
repz
rol
sbb
clc
sbb
inc
add
mov
inc
inc
lock
cld
mov
mov
aad
outs
mov
clc
ret
pop
(bad)
push
mov
push
cmp
adc
and
iret
cld
loope
jg
ror
sahf
arpl
and
aad
mov
lock
imul
ja
jne
sub
and
outs
jg
ret
pop
ja
sti
inc
mov
cmp
data16
aas
cld
loope
adc
mov
xchg
and
cwde
mov
push
out
pop
(bad)
lock
cmp
xchg
xchg
outs
or
clc
ret
add
fwait
jo
push
or
mov
loope
es
cmps
in
sub
pop
stos
fbstp
pop
(bad)
lock
mov
mov
scas
in
inc
mov
cmp
add
dec
ret
add
inc
mov
cld
xchg
xchg
clc
ror
xor
push
out
(bad)
clc
ret
pop
(bad)
rcl
test
and
fstp
loope
jg
enter
jecxz
stos
inc
push
out
jmp
(bad)
lock
jmp
dec
fwait
loope
arpl
(bad)
mov
jg
ret
pop
div
arpl
mov
cld
mov
pop
jg
jecxz
add
pop
inc
pop
jb
lock
aas
(bad)
icebp
(bad)
sbb
sub
arpl
adc
mov
jns
(bad)
clc
mov
jb
pop
pushf
popa
es
shl
(bad)
(bad)
inc
mov
loopne
(bad)
jge
jmp
jge
mov
addr16
cmps
cwde
enter
(bad)
inc
jge
or
cwde
aas
adc
inc
sbb
xor
jge
and
ja
sub
(bad)
(bad)
(bad)
jnp
retf
mov
sahf
cmp
or
sbb
retf
mov
jle
cld
(bad)
(bad)
(bad)
call
(bad)
cmp
pop
inc
dec
mov
inc
ins
fcomp
mov
ss
(bad)
(bad)
jmp
sub
xor
pop
xchg
cmp
neg
in
das
adc
xor
adc
(bad)
inc
(bad)
stc
fs
dec
cli
mov
or
mov
jg
jecxz
retf
sub
xchg
(bad)
jmp
ss
(bad)
icebp
rol
ins
ds
imul
(bad)
clc
jns
jle
call
dec
push
popa
arpl
je
dec
push
push
inc
fs
pop
(bad)
cmp
int
gs
daa
and
add
mov
popa
and
sahf
call
je
and
jae
sbb
push
dec
push
(bad)
mov
outs
imul
imul
outs
inc
call
sub
in
sbb
fsubr
pop
sbb
add
fdivrp
inc
ins
jne
and
popa
arpl
sub
popa
jae
out
mov
push
push
xor
fisub
jne
gs
inc
jb
gs
ins
popa
addr16
scas
sub
outs
jo
outs
and
and
and
mov
imul
hlt
ins
ins
outs
outs
and
(bad)
(bad)
sti
imul
je
and
and
je
cmp
das
push
jg
arpl
dec
outs
jb
gs
gs
and
neg
je
imul
mov
fcmovb
jmp
imul
and
push
jnp
inc
adc
je
daa
ins
popa
jns
add
(bad)
and
add
adc
inc
dec
push
ja
dec
outs
mov
dec
mov
mov
outs
arpl
popa
ins
gs
lock
mov
dec
outs
adc
cmp
je
clc
pop
ins
in
xchg
or
and
popf
cmp
dec
or
ins
outs
pop
dec
fwait
or
ins
outs
bound
pop
cwde
sti
out
daa
add
imul
daa
or
dec
push
pop
ja
fs
fadd
add
out
or
(bad)
outs
inc
push
inc
dec
dec
push
xchg
xor
inc
outs
jne
or
fsubr
cmovnp
fistp
or
or
outs
jae
xchg
imul
dec
popa
je
imul
inc
popa
jb
outs
and
inc
jp
jae
(bad)
mov
loop
imul
pop
add
xchg
fstp
and
push
idiv
gs
push
aam
add
imul
mov
adc
dec
inc
pop
push
add
jnp
push
gs
gs
jae
and
lods
loope
ret
push
or
inc
popa
mov
jg
inc
outs
jo
jle
je
dec
outs
je
cmp
adc
sbb
outs
jb
fcomi
dec
jns
push
jne
jg
outs
je
ret
mov
jb
gs
push
xor
or
sbb
imul
gs
add
test
pop
ins
pop
add
xchg
jne
je
jns
std
inc
aam
pop
jecxz
jb
das
push
jb
inc
cmp
xchg
jmp
pusha
sbb
inc
retf
bound
sbb
push
xor
out
cmp
sbb
imul
add
bound
push
xor
mov
push
inc
imul
fwait
jo
push
imul
sbb
add
ss
cmp
inc
jne
(bad)
std
fwait
fwait
jb
jae
push
outs
jae
pop
add
inc
jns
imul
ss
adc
je
or
jo
arpl
ins
fisub
xor
add
dec
gs
fs
jle
cli
(bad)
mov
popa
jo
and
jb
add
das
inc
jl
push
lahf
pop
fidiv
bound
arpl
add
and
dec
adc
inc
gs
(bad)
(bad)
ret
outs
outs
push
pop
dec
outs
xchg
adc
outs
outs
gs
jne
jbe
add
aas
push
push
xchg
pop
inc
jae
inc
add
push
popa
ja
sub
push
shl
jne
push
addr16
in
pop
inc
push
push
add
arpl
mov
sbb
push
outs
call
(bad)
jmp
sub
gs
popa
pusha
xor
sub
inc
xchg
jg
in
jecxz
outs
inc
inc
pushf
push
cmc
js
dec
fucomip
sbb
pop
pop
dec
ins
sbb
cmovnp
sbb
and
arpl
or
or
aas
and
cmp
push
dec
and
jmp
imul
out
or
sub
and
scas
mov
push
jne
ins
xchg
and
xchg
mov
gs
ret
movs
inc
add
jb
and
jmp
sbb
rol
popa
ins
push
gs
js
neg
imul
test
xchg
adc
je
bound
mov
add
outs
pop
add
jbe
(bad)
imul
cmp
jae
dec
daa
add
add
sbb
mov
jae
push
gs
jmp
leave
push
popa
jb
push
rol
mov
jecxz
in
das
in
xchg
dec
fild
jp
bound
pop
aaa
push
push
mov
shl
mov
adc
mov
or
sbb
rcl
lea
outs
jae
jb
clc
mov
inc
sub
dec
inc
inc
sub
loope
repnz
xchg
push
pop
push
adc
inc
pop
outs
inc
cli
and
mov
add
jg
in
and
add
daa
mov
push
jns
addr16
mov
jno
add
cmp
outs
ins
mov
pop
cmp
aas
add
outs
jo
imul
sbb
arpl
ins
(bad)
fbld
add
pop
xor
scas
arpl
outs
test
or
push
iret
add
cmp
inc
adc
xlat
xchg
push
push
pop
or
(bad)
sbb
lock
inc
inc
outs
data16
jecxz
mov
jmp
iret
daa
push
push
out
jne
ja
(bad)
gs
fs
jae
jle
push
arpl
gs
ins
pop
rcpps
(bad)
outs
addr16
xchg
leave
xor
or
cmps
je
cmp
fs
push
xor
popa
movs
pop
push
inc
arpl
test
mov
je
sbb
sub
pop
or
xchg
add
and
add
je
addr16
imul
outs
fild
jae
gs
inc
outs
outs
jo
out
jbe
jb
imul
arpl
inc
popa
ins
imul
(bad)
fadd
jo
cs
(bad)
inc
inc
push
pusha
sbb
xchg
push
adc
adc
jg
add
fwait
dec
ins
jns
jo
jae
jg
outs
and
popa
mov
or
mov
and
int3
mov
pop
cld
arpl
xchg
xor
cmc
dec
pop
ret
scas
cs
push
arpl
jo
dec
jbe
mov
adc
sub
ins
test
push
loope
jb
xor
fld
jno
imul
cs
dec
gs
jb
jae
je
mov
xchg
imul
inc
pop
pop
je
inc
inc
mov
cmp
jb
jbe
gs
inc
imul
inc
ja
rep
outs
push
jl
xchg
cwde
mov
mov
daa
adc
inc
outs
addr16
imul
mov
je
outs
mov
pop
(bad)
add
push
fild
inc
add
adc
mov
(bad)
adc
and
iret
jnp
mov
div
mov
xchg
stos
inc
adc
in
ret
or
push
inc
pop
scas
add
fwait
daa
dec
shl
dec
inc
mov
gs
setg
or
add
ins
cli
nop
movs
sbb
adc
sub
jb
add
jmp
ins
adc
(bad)
mov
jne
scas
stc
outs
outs
mov
jp
dec
ror
aas
xor
inc
jne
jo
or
jecxz
mov
dec
dec
dec
adc
outs
jne
push
jecxz
push
sub
inc
test
xchg
(bad)
and
xor
gs
adc
cmovle
cmovae
lods
xlat
cs
mov
imul
xchg
imul
or
pop
xor
or
jae
sbb
in
fild
jae
dec
cli
(bad)
and
ins
je
push
xchg
or
add
dec
ins
mov
jmp
pop
xlat
xchg
inc
sbb
cmps
and
arpl
les
sbb
fsubr
popa
jb
es
jne
or
popa
sbb
push
jecxz
add
sub
arpl
ret
jecxz
ins
outs
ja
jns
arpl
outs
retf
push
je
sbb
dec
rol
xor
outs
out
repz
or
mov
outs
je
cwde
mov
pusha
adc
jne
mov
jo
fucom
clc
mov
add
inc
ss
sbb
jno
jbe
scas
or
mov
add
xlat
adc
call
(bad)
push
arpl
fs
and
sbb
ret
hlt
ja
mov
dec
push
js
xlat
outs
add
popa
jae
outs
add
push
add
mov
pop
jmp
addr16
and
imul
pop
shl
loope
test
add
hlt
adc
adc
mov
push
call
push
push
pop
xor
mov
mov
mov
pusha
mov
pop
add
pop
xchg
cmp
jmp
fild
cmp
cli
xor
add
inc
jne
bound
mov
pop
aas
fs
mov
test
xchg
sbb
push
pushf
sub
dec
outs
ja
das
clc
inc
ds
mov
push
jo
inc
inc
inc
xchg
sub
ror
stos
pusha
fdiv
fsubr
and
and
or
jae
fs
jle
xor
imul
mov
pop
inc
mov
sbb
push
dec
js
xchg
int3
or
xchg
add
popa
jb
gs
popa
enter
sbb
mov
imul
pop
mov
ss
ins
mov
or
dec
pop
sub
pop
mov
xlat
ins
and
es
arpl
shl
cmp
pop
xor
inc
outs
jmp
in
js
add
inc
cmp
cmp
pop
and
pop
xor
ins
dec
and
popa
jns
pop
int
pusha
dec
and
and
rol
out
mov
push
imul
or
xchg
inc
mov
push
sub
arpl
sbb
shl
inc
push
pop
sbb
dec
popa
js
test
and
and
fsubr
jae
mul
ins
ins
adc
jae
and
mov
cmp
inc
sbb
outs
call
arpl
aaa
nop
inc
call
pop
push
lods
popa
cld
inc
popa
outs
outs
outs
pushf
push
fild
pop
nop
inc
pop
cmps
jne
fs
clc
jae
popa
outs
addr16
push
dec
and
push
sbb
jecxz
sti
inc
out
push
call
call
(bad)
jb
jae
xor
fmul
jae
lahf
fld
sbb
ins
hlt
imul
ins
or
jae
xchg
inc
jb
jbe
cmp
sub
test
inc
pop
inc
ss
out
sub
popf
add
inc
and
mov
sbb
outs
jb
popa
je
aam
adc
pusha
sub
mov
mov
pop
jnp
cli
jg
js
xchg
inc
jne
je
ins
and
outs
int
adc
push
and
adc
fwait
sbb
adc
ins
ss
outs
inc
pop
and
jbe
mov
outs
mov
(bad)
or
sbb
in
inc
xor
mov
daa
dec
ja
adc
sbb
or
call
ja
inc
and
fmul
xchg
add
push
jb
ins
popa
arpl
push
sbb
and
or
push
mov
adc
jo
sti
and
scas
aas
push
sub
fst
jno
pop
push
push
adc
cmp
and
dec
cwde
add
shr
xchg
add
mov
test
pop
push
pop
sbb
add
adc
and
push
imul
or
daa
call
scas
pop
mov
cdq
mov
jbe
and
push
add
inc
jmp
je
lock
pop
dec
outs
fs
mov
je
retf
imul
out
test
mov
sbb
mov
cmc
das
or
add
jnp
js
sbb
loopne
and
idiv
inc
or
jmp
adc
mov
xchg
shl
xchg
mov
je
and
enter
cmp
xor
sbb
in
dec
pusha
fst
jae
add
aaa
ret
mov
stos
gs
jb
mov
bound
inc
push
add
push
clc
xor
arpl
bound
add
call
je
fs
das
mov
and
and
pop
data16
iret
mov
dec
push
test
add
mov
dec
imul
out
pop
mov
iret
shl
test
hlt
ja
cmp
imul
rcl
popa
pop
mov
dec
popa
jo
jne
add
sbb
pusha
(bad)
daa
imul
ins
sbb
fld
push
scas
xor
add
dec
push
inc
pop
push
mov
in
sub
test
jnp
lds
push
push
jo
gs
adc
loopne
test
adc
sbb
and
or
push
cmp
popa
or
jle
and
imul
push
add
and
or
mov
cmp
push
(bad)
cwde
fwait
daa
ds
enter
dec
into
sub
outs
or
jae
inc
test
mov
je
jae
and
les
scas
and
xor
sub
mov
popf
jp
arpl
imul
adc
fnstenv
ds
ins
je
xor
push
add
adc
jecxz
mov
cs
cmp
xchg
push
add
sub
dec
mov
and
and
daa
out
or
xor
cmp
sbb
push
xchg
int3
or
and
mov
or
sub
add
repz
cs
xlat
jno
mov
mov
or
xchg
cmc
in
inc
jb
push
pop
jno
or
scas
adc
or
mov
arpl
jo
sbb
nop
dec
out
jne
fadd
test
adc
dec
and
or
cmp
outs
aaa
nop
jmp
and
jo
and
mov
dec
adc
ins
loopne
xchg
pop
ret
fsubr
cmp
pop
or
imul
test
add
inc
test
ins
ins
lahf
shl
mov
mov
and
jge
mov
test
adc
mov
or
rdtsc
or
movs
ins
push
and
mov
push
push
lods
adc
sbb
cmps
jb
jmp
fist
inc
inc
and
imul
add
sub
mov
mov
jb
shr
in
pop
rol
ins
aas
push
gs
add
imul
lahf
pop
add
sub
pushf
jecxz
test
les
inc
and
sbb
ins
jne
bound
xor
sbb
push
sbb
cs
addr16
xchg
aaa
pop
cmp
sbb
cmp
pop
int3
sbb
pop
xor
push
cmp
data16
hlt
lea
cmp
mov
sbb
cmp
lahf
out
and
int3
(bad)
or
inc
push
shl
dec
sahf
push
xor
cmp
jo
arpl
mov
mov
popa
outs
mov
adc
sbb
rcr
pop
inc
imul
(bad)
push
jae
popa
arpl
(bad)
ret
push
jmp
arpl
cmp
sbb
imul
adc
pop
(bad)
or
jp
sub
je
fsub
add
push
arpl
xor
mov
add
xor
sbb
or
adc
or
inc
daa
add
push
jae
jb
addr16
sub
inc
outs
ins
jl
push
ficom
je
imul
jb
push
rcl
add
mov
outs
and
jmp
arpl
lds
or
dec
ror
cmp
scas
xor
mov
jb
sub
adc
gs
shrd
xor
in
aas
jnp
mov
(bad)
ins
jne
and
mov
ret
xchg
shr
repnz
and
jmp
and
sbb
mov
outs
and
or
call
daa
or
or
jo
popa
or
stos
pop
add
shl
jp
jno
adc
or
rol
add
movs
push
gs
mov
xor
cmp
add
pop
xor
outs
push
imul
outs
lods
js
mov
movs
leave
cmp
jae
xchg
icebp
js
xor
cwde
mov
outs
add
ins
retf
js
add
test
movs
pop
sti
imul
aad
dec
jo
outs
dec
jb
call
add
jb
or
inc
inc
inc
and
jmp
loop
and
add
daa
(bad)
and
dec
and
addr16
inc
(bad)
fst
add
je
jge
nop
sub
std
test
call
push
out
xchg
ins
adc
bound
cld
fwait
sbb
adc
jmp
dec
inc
xchg
(bad)
scas
inc
and
je
push
add
cmp
out
xor
inc
jae
bndstx
jne
mov
add
and
ins
fs
xchg
adc
inc
cmp
pop
ret
sbb
inc
icebp
pop
sar
push
gs
popa
je
movs
add
imul
bound
lods
ja
and
push
inc
add
add
mov
pushf
dec
add
es
jo
retf
test
fist
xchg
aaa
cmp
imul
jo
push
mov
movs
fwait
xor
das
and
xchg
pop
shr
js
test
xor
ins
xor
mov
out
add
add
mov
inc
cmp
arpl
(bad)
xchg
arpl
lds
in
mov
and
xor
dec
das
add
jae
mov
aam
mov
lahf
gs
cli
out
xchg
push
arpl
imul
xor
add
jns
or
and
inc
push
ror
aas
xlat
dec
arpl
sbb
shl
pop
xchg
outs
outs
and
outs
and
retf
push
pop
mov
jb
imul
(bad)
dec
jecxz
(bad)
ror
or
pop
test
adc
and
adc
adc
and
and
ret
ret
sbb
mov
mov
popa
imul
sub
ds
jb
pop
add
sub
adc
loop
jo
out
jo
jg
push
fadd
jne
(bad)
xor
movs
jb
cwde
pop
fild
or
adc
mov
shl
dec
jae
aaa
add
lds
jmp
jae
sbb
loopne
adc
push
(bad)
leave
or
pop
aaa
ss
adc
gs
enter
add
and
cmp
scas
pop
mov
pop
mov
xor
mov
mov
and
sar
imul
xchg
cmp
add
in
add
mov
jg
je
mov
popf
push
or
inc
outs
arpl
sahf
and
mov
dec
push
test
lods
jb
(bad)
cmp
or
or
or
xchg
or
jb
and
adc
in
cdq
mov
gs
adc
xchg
pop
test
imul
add
pop
sbb
sub
aas
lds
adc
dec
popa
and
jb
jb
adc
fsub
out
fs
popa
jne
je
push
dec
inc
and
pop
dec
fld
(bad)
fisttp
cs
outs
bound
js
push
add
push
and
in
loopne
jmp
imul
jb
jo
imul
cmp
fsub
das
adc
or
mov
pop
jb
push
add
in
push
xor
add
sub
cmp
jmp
add
mov
cmp
jmp
pop
idiv
mov
add
or
add
jae
adc
pop
or
xor
inc
add
rol
pop
or
pusha
add
push
pop
jmp
scas
sti
das
add
pavgb
push
or
fist
nop
add
pop
cmp
push
scas
imul
push
pop
or
mov
dec
(bad)
aas
add
push
add
jmp
adc
adc
or
scas
fstp
adc
test
out
jae
imul
test
inc
psubsb
dec
pop
por
add
push
or
psubusb
jmp
sbb
or
mov
jmp
cmps
mov
aas
add
push
add
test
adc
and
push
or
pop
scas
jmp
scas
les
punpckldq
and
movs
pop
or
add
inc
or
bndldx
cmp
mov
jg
or
sub
mov
xlat
jne
or
dec
pmuludq
add
pop
push
add
add
adc
les
jbe
ss
xlat
jne
int3
jg
or
shrd
rol
xchg
sahf
or
aas
pop
scas
jmp
or
pop
add
pop
pushf
jg
test
call
jg
or
scas
fstp
push
add
popf
mov
add
push
movups
sub
scas
jmp
push
xor
ret
popa
ret
ror
and
call
or
pop
(bad)
pop
nop
xchg
xlat
in
loopne
aas
push
cmp
sar
jmp
sub
mov
scas
mov
fwait
jo
sbb
repnz
iret
push
pcmpeqw
ret
mov
add
adc
push
xor
(bad)
(bad)
stc
scas
jnp
cmp
or
inc
pop
scas
jmp
xor
pop
nop
ud0
cmp
lahf
imul
dec
lea
dec
xlat
jge
xlat
psubd
push
adc
ret
mov
(bad)
jge
xchg
(bad)
jg
outs
ja
call
or
pop
mov
pop
out
out
call
or
or
sysret
or
into
cmp
imul
or
sti
dec
mov
dec
jg
aas
iret
push
(bad)
jne
inc
pop
push
aaa
pop
into
jg
imul
scas
pop
outs
xchg
inc
pmaxsw
dec
pop
pcmpeqw
out
mov
sahf
jg
jg
aas
pop
fidiv
fmul
jg
or
icebp
or
mov
pop
(bad)
(bad)
jmp
sbb
(bad)
inc
aaa
jmp
pop
call
cmp
call
mov
sbb
push
aas
call
leave
aas
scas
xchg
fsub
jmp
rcr
cdq
dec
rol
sbb
(bad)
(bad)
mov
aas
(bad)
stc
aas
cmp
cmp
inc
jg
pop
xchg
cmp
jo
je
aas
(bad)
call
je
call
jg
xchg
push
ja
je
aas
(bad)
dec
jg
ja
pop
scas
jmp
ja
(bad)
in
aas
(bad)
push
pop
ja
jg
(bad)
fnstsw
ja
pop
(bad)
(bad)
mov
adc
std
(bad)
push
hlt
fadd
pop
scas
jmp
inc
jmp
pop
(bad)
push
adc
xchg
(bad)
call
mov
(bad)
push
rol
sbb
fsub
sbb
jmp
sbb
jmp
sbb
(bad)
(bad)
(bad)
fsub
sbb
(bad)
mov
hlt
dec
(bad)
sti
aas
push
cmp
jg
and
cmps
aas
das
(bad)
fsub
sbb
call
sbb
inc
mov
dec
push
fcom
shl
iret
dec
jg
fsub
sbb
outs
xchg
(bad)
out
aas
dec
call
jg
(bad)
fistp
dec
iret
sbb
dec
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
adc
add
adc
add
(bad)
inc
sbb
add
add
adc
and
sbb
add
adc
add
push
add
fld
inc
mov
sbb
iret
lahf
aas
jg
adc
add
xor
adc
add
rol
add
(bad)
dec
add
add
add
add
add
add
or
and
out
add
add
arpl
and
fwait
or
aam
pop
lods
push
xchg
out
fs
sbb
xor
sbb
popa
jb
inc
mov
and
pop
out
mov
jbe
popa
ins
das
or
push
sbb
xchg
jae
push
pop
add
cmp
imul
cmp
mov
xchg
ins
popa
outs
jns
outs
jb
jae
fdivr
push
aam
jns
bound
jae
push
shl
and
pop
cmps
out
and
pop
and
leavew
fdiv
sbb
sbb
jne
(bad)
jg
arpl
ins
imul
add
imul
outs
std
popa
adc
test
data16
popa
arpl
ss
fdivr
popa
repz
outs
sub
add
outs
ja
inc
ror
(bad)
jmp
dec
popa
outs
add
bound
dec
popa
jb
inc
jo
pop
jns
dec
jne
(bad)
(bad)
push
ins
add
add
jo
dec
arpl
outs
jbe
inc
arpl
push
outs
outs
and
adc
bound
jg
jae
outs
jo
aaa
nop
stos
cmps
cmp
outs
jbe
loopne
call
xchg
and
popa
lds
jb
outs
outs
and
cmp
les
je
mov
add
jmp
outs
gs
je
jbe
inc
ins
xor
mov
aas
or
sub
gs
gs
xor
xor
cmp
(bad)
aas
push
inc
in
push
mov
inc
push
test
and
jb
xchg
cli
sbb
jecxz
mov
in
sar
(bad)
fild
test
(bad)
jg
addr16
ins
ins
popa
cmp
ins
imul
jmp
std
pop
sub
and
add
bound
stc
jo
les
rcl
sub
push
outs
pop
hlt
daa
mov
and
imul
jne
cmc
movhps
and
ins
outs
jb
imul
pshufw
inc
jo
inc
inc
push
leave
pop
lahf
je
ins
push
sbb
dec
inc
ins
add
push
dec
cmp
(bad)
jmp
gs
outs
ja
hlt
clc
scas
imul
and
push
repz
jb
popa
sub
pop
add
add
test
mov
js
imul
je
outs
and
jmp
jae
das
fcmovu
sbb
jo
outs
ins
bound
imul
push
sbb
add
rol
inc
jl
add
ins
cmp
push
rol
ins
imul
or
xchg
jae
ret
push
cmpxchg
xor
mov
xchg
and
aaa
jb
ins
and
xor
add
iret
scas
hlt
sbb
adc
imul
add
add
and
mov
cs
jae
dec
loope
inc
and
js
ins
test
jne
jo
jae
dec
dec
pusha
sbb
mov
and
inc
add
cld
add
push
push
aad
inc
loope
repz
jp
pusha
mov
rol
xor
pop
in
and
ret
loopne
mov
aas
xchg
outs
lods
ror
(bad)
sti
and
inc
push
or
mov
cs
adc
and
jne
mov
ja
imul
pop
dec
jae
dec
push
push
dec
ins
dec
push
cmp
dec
push
imul
repnz
dec
sbb
add
inc
fidivr
(bad)
je
js
push
cmp
ja
inc
retf
pusha
ficom
and
jb
cmps
xor
mov
mov
dec
inc
inc
push
jae
ja
imul
push
add
rcr
sbb
call
gs
imul
jae
mov
cmps
arpl
push
bound
or
es
xchg
jb
ja
add
xchg
addr16
add
mov
jb
imul
imul
jae
bound
or
lods
loopne
xchg
and
jo
cmp
cmp
popa
jb
inc
sbb
das
cli
push
adc
jb
outs
clc
ja
cld
xchg
leave
sar
arpl
xor
out
std
sub
not
push
fmul
fs
jge
and
push
add
pusha
loopne
nop
push
shl
mov
lock
push
(bad)
call
js
add
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
int3
sub
ins
in
sbb
(bad)
(bad)
call
cld
add
(bad)
adc
jb
or
push
sbb
(bad)
(bad)
call
jp
push
xchg
cmps
data16
xchg
push
(bad)
ss
test
dec
into
cs
outs
out
push
(bad)
(bad)
(bad)
call
jle
add
popa
loope
xchg
push
shl
mov
icebp
or
imul
call
jns
add
movs
gs
xchg
push
aad
mov
cmc
or
lods
ins
in
sbb
popf
pop
fnstsw
add
mov
push
shl
mov
repz
imul
(bad)
(bad)
(bad)
call
jnp
pop
xchg
daa
cmps
addr16
xchg
push
xlat
aaa
mov
test
scas
outs
out
pop
(bad)
(bad)
(bad)
call
jg
add
rcl
nop
shl
pusha
mov
lock
test
adc
xchg
aam
(bad)
(bad)
(bad)
jmp
xor
mov
or
enter
fsubr
push
mov
int3
sbb
pushf
fsubr
(bad)
(bad)
jmp
cmp
mov
rcl
xchg
shl
popa
mov
icebp
add
push
xchg
aad
(bad)
(bad)
(bad)
jmp
in
jne
cmc
or
leave
sbb
fldcw
imul
int
pop
popf
(bad)
ins
lods
in
cmp
inc
add
push
xchg
shl
bound
repnz
inc
xchg
push
push
xchg
(bad)
es
(bad)
(bad)
jmp
out
jbe
test
mov
sbb
fisubr
push
jmp
mov
push
pop
sahf
fisubr
(bad)
(bad)
(bad)
jmp
out
ds
inc
inc
add
push
xchg
shl
arpl
repz
inc
xchg
pop
push
xchg
xlat
daa
(bad)
(bad)
(bad)
jmp
out
ja
test
pop
fld
imul
cmovg
fild
(bad)
dec
outs
scas
out
aas
jg
and
inc
push
pusha
jo
nop
mov
lock
and
(bad)
(bad)
push
inc
push
popa
jno
xchg
mov
icebp
add
and
inc
push
bound
xchg
mov
repnz
and
(bad)
(bad)
push
inc
push
arpl
xchg
mov
repz
and
inc
push
fs
xchg
movs
mov
aam
hlt
add
(bad)
push
test
in
push
push
es
push
data16
xchg
cmps
mov
(bad)
out
pop
pop
daa
(bad)
(bad)
(bad)
push
inc
push
addr16
xchg
cmps
mov
xlat
out
or
sub
dec
pop
push
mov
or
sub
(bad)
(bad)
(bad)
cmp
imul
fldl2t
stc
or
sub
dec
pop
push
mov
jmp
(bad)
(bad)
cmp
imul
stos
mov
or
sub
dec
pop
ins
jl
pushf
lods
mov
or
(bad)
(bad)
cmp
lea
in
std
push
push
cs
pop
outs
jle
sahf
scas
mov
nop
aas
xor
(bad)
aas
dec
pop
outs
jg
lahf
scas
mov
inc
cli
out
push
and
(bad)
dec
dec
xor
inc
or
inc
pusha
add
mov
popa
ins
gs
fdiv
and
xchg
xchg
popa
fs
cmc
imul
or
cmp
inc
popf
retf
gs
xchg
shl
(bad)
xor
loop
mov
inc
imul
xchg
xchg
jno
popa
lock
ins
xchg
adc
push
scas
pop
sub
aad
inc
lahf
arpl
daa
sbb
or
cmp
add
inc
rdmsr
adc
cld
push
or
lock
and
sbb
outs
and
and
pushf
push
xor
pop
leave
sbb
cmp
sbb
jb
inc
shl
jns
cmps
and
cwde
cmp
add
out
sub
push
cmp
dec
jb
mov
mov
jne
clc
push
sub
cmp
fisub
bound
pop
outs
outs
je
mov
jo
shl
lods
inc
js
ds
in
push
adc
mov
inc
jne
outs
jae
jmp
dec
cmp
outs
outs
jne
push
sub
cli
pop
add
and
aaa
hlt
popa
sbb
jae
jne
adc
in
rol
add
test
adc
add
dec
add
call
push
add
adc
mov
test
out
inc
adc
add
jmp
cmps
scas
sbb
jo
(bad)
in
mov
test
cmp
pop
outs
pop
fs
div
je
lods
or
jne
outs
fisttp
call
shl
and
bound
outs
pop
addr16
adc
retf
xchg
add
xor
or
push
jb
adc
dec
or
inc
inc
or
inc
(bad)
(bad)
out
and
jae
and
and
or
adc
mov
gs
fs
rol
and
xor
mov
xchg
dec
je
popa
outs
adc
xchg
jnp
cld
mov
or
and
ret
cmc
test
arpl
stc
(bad)
(bad)
mov
sbb
pop
jne
aaa
sbb
ds
xor
aam
cmps
jmp
mov
pop
mov
mov
sbb
ins
pop
movs
pop
scas
daa
(bad)
arpl
dec
adc
(bad)
retf
sub
add
pop
movs
xchg
ins
or
ins
clc
xor
inc
outs
gs
imul
data16
xor
icebp
(bad)
jg
xchg
cmp
xor
xor
imul
fs
(bad)
(bad)
(bad)
fist
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
pop
add
add
add
add
add
imul
add
add
add
add
fsub
sbb
fxch
popf
std
add
add
adc
adc
add
add
add
add
fadd
add
add
add
(bad)
(bad)
push
add
popa
add
add
add
add
push
add
add
adc
sbb
and
mov
std
add
add
pusha
jg
imul
out
outs
gs
add
lds
add
add
add
add
mov
sbb
sbb
sbb
(bad)
(bad)
aas
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
(bad)
(bad)
(bad)
push
mov
push
movs
mov
aad
mov
rcl
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
(bad)
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
(bad)
(bad)
(bad)
(bad)
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
lods
xor
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
sahf
mov
add
(bad)
and
or
adc
stos
sbb
data16
(bad)
(bad)
call
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
jmp
stc
add
mov
push
loope
or
ins
or
pop
arpl
(bad)
(bad)
(bad)
push
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
inc
fnstenv
adc
mov
mov
bound
ficom
gs
aam
(bad)
(bad)
(bad)
call
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
sar
(bad)
(bad)
jmp
imul
mov
sar
add
in
add
pop
dec
or
(bad)
(bad)
(bad)
(bad)
cmp
add
daa
adc
or
and
test
or
mov
popa
into
(bad)
(bad)
(bad)
dec
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
jmp
cmp
or
mov
call
jmp
fild
push
fdiv
mov
arpl
test
fs
ds
or
push
in
dec
xchg
daa
scas
(bad)
(bad)
(bad)
inc
or
xchg
(bad)
shl
add
inc
push
imul
xor
(bad)
(bad)
jmp
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
(bad)
(bad)
(bad)
push
pusha
call
xchg
shl
push
repnz
addr16
cmps
fld
(bad)
(bad)
(bad)
push
dec
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
(bad)
(bad)
jmp
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
(bad)
inc
and
es
lds
or
sub
mov
cmps
call
ret
shl
(bad)
(bad)
fldcw
ret
es
pushf
mov
ins
add
ss
jmp
addr16
(bad)
(bad)
inc
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
(bad)
(bad)
(bad)
(bad)
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
(bad)
(bad)
push
sbb
pop
or
retf
pop
or
adc
sahf
gs
clc
sar
(bad)
(bad)
(bad)
jmp
inc
iret
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
(bad)
(bad)
(bad)
jmp
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
(bad)
(bad)
(bad)
push
xor
mov
retf
mov
cmps
mov
sar
sub
(bad)
(bad)
(bad)
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
(bad)
(bad)
jg
add
sub
sbb
push
sub
fs
hlt
ja
(bad)
(bad)
(bad)
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
(bad)
(bad)
(bad)
push
iret
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
(bad)
(bad)
push
xlat
mov
sbb
test
sbb
add
call
out
ins
ins
(bad)
(bad)
(bad)
(bad)
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
(bad)
(bad)
(bad)
call
gs
fisubr
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
(bad)
(bad)
jmp
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
(bad)
(bad)
jmp
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
push
sbb
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
fild
mov
(bad)
(bad)
(bad)
dec
ret
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
(bad)
(bad)
(bad)
inc
(bad)
cli
outs
retf
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
inc
sar
loope
xchg
retf
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
pminub
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
(bad)
(bad)
call
and
cmps
xor
mov
lods
out
sar
mov
adc
ins
mov
xchg
adc
call
sub
sti
push
jns
das
mov
and
je
or
repnz
dec
(bad)
(bad)
(bad)
call
fisub
xor
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
(bad)
(bad)
call
cmp
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
(bad)
(bad)
(bad)
inc
aas
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
(bad)
(bad)
(bad)
dec
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
(bad)
(bad)
(bad)
dec
sub
add
adc
cwde
mov
nop
bound
xchg
push
(bad)
push
hlt
out
(bad)
(bad)
(bad)
inc
xchg
cmps
ret
xchg
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
(bad)
(bad)
call
outs
sbb
sub
loope
fisub
pop
lds
push
call
dec
in
mov
movs
ret
(bad)
(bad)
call
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
(bad)
(bad)
call
jg
test
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
(bad)
(bad)
call
add
mov
arpl
cli
retf
(bad)
loope
int3
mov
stc
lea
scas
or
(bad)
(bad)
(bad)
(bad)
push
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
(bad)
(bad)
(bad)
jle
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
(bad)
(bad)
(bad)
cld
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
(bad)
(bad)
(bad)
push
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
(bad)
jmp
push
and
sub
adc
jns
xchg
movs
dec
mov
movs
daa
sub
repnz
(bad)
(bad)
jmp
fdivrp
shl
out
mov
shl
es
xchg
aas
mov
adc
jmp
inc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jmp
aas
mov
and
push
push
add
test
pop
mov
or
(bad)
(bad)
(bad)
(bad)
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
(bad)
(bad)
(bad)
call
fmul
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
(bad)
(bad)
call
fild
sbb
repnz
adc
dec
jae
adc
cmp
(bad)
(bad)
(bad)
jmp
xor
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
(bad)
(bad)
(bad)
dec
test
cmp
push
add
outs
jge
aaa
ss
fidiv
test
(bad)
push
imul
fld
adc
nop
in
and
(bad)
xor
daa
leave
pop
sub
and
(bad)
(bad)
(bad)
jnp
mov
and
mov
sub
fidivr
sub
ds
sbb
sub
ret
jbe
sub
enter
mov
call
pop
push
jae
xor
jb
and
(bad)
jmp
dec
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
(bad)
(bad)
call
mov
(bad)
jnp
cs
ins
fdivrp
cmp
nop
cli
outs
ins
xchg
call
ja
add
push
or
bound
adc
sub
shr
aam
cmps
gs
(bad)
(bad)
jmp
mov
and
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
(bad)
(bad)
(bad)
dec
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
(bad)
(bad)
(bad)
push
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
(bad)
(bad)
(bad)
(bad)
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
xor
jmp
(bad)
(bad)
(bad)
inc
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
(bad)
(bad)
(bad)
jmp
(bad)
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
ror
stos
jmp
pop
imul
(bad)
rcl
cld
sahf
ins
xchg
(bad)
test
adc
cli
(bad)
(bad)
(bad)
call
jp
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
(bad)
(bad)
(bad)
jmp
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
(bad)
dec
and
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
sar
(bad)
(bad)
push
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
(bad)
(bad)
sti
cmp
ret
mov
call
dec
retf
lahf
lds
adc
leave
(bad)
(bad)
(bad)
push
int3
inc
ins
xchg
sbb
ror
mov
scas
xchg
ja
ins
nop
cs
sub
(bad)
(bad)
(bad)
call
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
(bad)
(bad)
jmp
mov
adc
xor
xor
dec
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
and
push
adc
fadd
push
int3
xchg
test
push
test
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
(bad)
(bad)
(bad)
(bad)
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
(bad)
(bad)
(bad)
inc
sub
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
(bad)
(bad)
dec
int
cmp
dec
mov
mov
pop
dec
adc
mov
dec
push
sbb
ficomp
mov
jmp
mov
stos
out
(bad)
(bad)
(bad)
jmp
bound
fcomp
and
out
sub
fs
outs
add
(bad)
(bad)
inc
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
(bad)
(bad)
(bad)
clc
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
(bad)
(bad)
(bad)
call
sbb
inc
(bad)
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
sar
(bad)
(bad)
inc
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
(bad)
(bad)
(bad)
jmp
xor
adc
jmp
in
inc
push
clc
sub
les
and
(bad)
(bad)
(bad)
call
loop
outs
dec
jg
or
(bad)
jge
inc
aad
sar
dec
rcr
(bad)
lds
xchg
lahf
mov
jg
daa
sbb
mov
xchg
(bad)
hlt
adc
call
adc
pop
aas
test
mov
sbb
(bad)
push
mov
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
(bad)
(bad)
(bad)
fist
shl
cmp
das
retf
jnp
dec
ja
mov
push
add
dec
(bad)
(bad)
(bad)
jmp
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
sbb
cmp
sub
pop
outs
xchg
add
cmp
call
(bad)
(bad)
(bad)
call
sub
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
(bad)
(bad)
push
in
mov
das
dec
leave
xor
inc
arpl
adc
push
(bad)
(bad)
dec
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
ds
inc
js
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
push
inc
aad
(bad)
(bad)
call
in
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
(bad)
(bad)
push
pop
cmp
outs
xor
or
xchg
movs
loope
mov
das
sub
dec
(bad)
(bad)
(bad)
dec
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
inc
push
pop
xchg
idiv
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
(bad)
out
(bad)
(bad)
(bad)
push
or
aaa
jmp
add
and
(bad)
push
arpl
popa
stc
(bad)
and
(bad)
(bad)
call
mov
mov
push
or
adc
jmp
into
movs
adc
(bad)
(bad)
jmp
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
(bad)
(bad)
(bad)
dec
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
(bad)
(bad)
(bad)
inc
fs
jns
stc
xor
xchg
inc
fidiv
call
mov
lock
(bad)
(bad)
(bad)
jmp
mov
(bad)
daa
test
(bad)
cs
mov
call
mov
(bad)
(bad)
call
loope
into
cs
inc
out
add
add
pop
std
pop
jmp
(bad)
(bad)
ds
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
(bad)
(bad)
inc
jle
cmp
pushf
in
adc
outs
push
sbb
cmps
push
data16
jno
ds
outs
sub
(bad)
(bad)
(bad)
(bad)
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
call
mov
jp
or
xchg
popa
mov
fidiv
xor
(bad)
(bad)
(bad)
call
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
call
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
(bad)
inc
aam
ins
fucom
jmp
aam
push
adc
(bad)
adc
imul
(bad)
(bad)
(bad)
dec
add
push
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
(bad)
(bad)
jmp
add
ror
aam
ror
mov
xor
mov
ins
fstp
(bad)
jmp
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
fiadd
cmp
xlat
push
cmp
(bad)
(bad)
mov
mov
mov
mov
and
mov
movs
movaps
mov
or
or
mov
(bad)
(bad)
push
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
out
aad
sub
test
lahf
mov
aam
js
leave
mov
xchg
or
jmp
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
(bad)
(bad)
push
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
(bad)
cld
mov
sbb
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
(bad)
call
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
(bad)
(bad)
(bad)
fisub
rol
jae
add
pop
fisttp
jno
daa
add
mov
(bad)
(bad)
dec
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
(bad)
(bad)
inc
xlat
test
pop
mov
pop
cs
xor
mov
mov
add
(bad)
push
call
ja
add
es
jecxz
or
xchg
cmp
(bad)
(bad)
(bad)
jp
pop
test
push
iret
or
add
mov
setae
mov
push
imul
push
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
(bad)
(bad)
(bad)
jmp
dec
int3
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
jle
fadd
(bad)
(bad)
(bad)
(bad)
dec
repnz
sar
push
addr16
mov
fisttp
ss
fmul
sbb
dec
idiv
(bad)
(bad)
inc
jp
fbld
ret
test
fist
outs
mov
inc
imul
sbb
(bad)
(bad)
call
loop
int3
or
xchg
mov
add
mov
lds
or
sub
call
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
inc
ins
xchg
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
or
sbb
xchg
ror
or
or
fbld
xchg
rcl
icebp
aam
inc
push
(bad)
(bad)
call
fiadd
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
(bad)
(bad)
(bad)
call
add
pop
(bad)
gs
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
(bad)
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
(bad)
(bad)
push
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
(bad)
(bad)
jmp
mov
add
push
ficom
and
addr16
les
mov
push
(bad)
jmp
outs
sub
or
mov
sub
sbb
inc
xor
(bad)
(bad)
(bad)
(bad)
inc
fs
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
(bad)
(bad)
(bad)
dec
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
(bad)
(bad)
call
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
(bad)
(bad)
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
(bad)
(bad)
(bad)
jmp
mov
call
shl
ret
fiadd
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
(bad)
(bad)
jmp
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
(bad)
(bad)
(bad)
push
imul
sub
mul
sbb
jne
pop
mov
sti
push
test
(bad)
(bad)
(bad)
(bad)
jns
mov
cmp
jns
push
dec
mov
pop
fisubr
cmp
jns
add
ret
(bad)
(bad)
(bad)
inc
xchg
adc
mov
cmp
lds
or
dec
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
(bad)
(bad)
(bad)
call
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
(bad)
(bad)
(bad)
ficomp
test
unpckhps
sbb
jo
cmp
std
imul
retf
or
(bad)
(bad)
jmp
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
adc
sub
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
(bad)
(bad)
(bad)
push
sub
push
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
jl
retf
mov
cli
call
js
cmps
cmp
sbb
or
dec
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
(bad)
inc
fdiv
adc
out
movs
add
test
mov
push
ja
(bad)
(bad)
(bad)
call
adc
ss
daa
sbb
fnstsw
xor
mov
call
(bad)
lds
(bad)
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
(bad)
(bad)
(bad)
jmp
sub
sub
imul
jo
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
(bad)
(bad)
jmp
repz
mov
in
test
xchg
sub
in
scas
mov
(bad)
repz
(bad)
(bad)
(bad)
(bad)
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
(bad)
(bad)
(bad)
push
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
int3
mov
(bad)
(bad)
dec
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
ins
pop
xor
inc
sub
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
(bad)
(bad)
(bad)
call
in
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
xchg
(bad)
int3
sbb
sub
xchg
mov
xchg
push
mov
repz
inc
gs
dec
xchg
(bad)
(bad)
(bad)
jmp
push
mov
call
or
push
aas
sub
mov
sbb
(bad)
(bad)
jmp
mov
daa
repnz
mov
mov
(bad)
out
and
loope
or
mov
aas
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
mov
jle
hlt
out
push
or
stc
(bad)
push
test
mov
adc
xor
ret
add
outs
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
(bad)
or
inc
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
ja
push
pusha
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
(bad)
(bad)
jmp
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
(bad)
(bad)
(bad)
call
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
inc
ss
test
test
xchg
aad
xor
imul
adc
frstor
in
and
out
(bad)
(bad)
(bad)
push
(bad)
es
dec
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
jmp
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
(bad)
(bad)
(bad)
call
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
(bad)
(bad)
(bad)
dec
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
inc
xchg
(bad)
(bad)
(bad)
(bad)
cli
fisubr
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
(bad)
(bad)
jmp
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
(bad)
(bad)
call
dec
dec
xchg
jne
dec
fisub
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
(bad)
(bad)
(bad)
dec
inc
and
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
(bad)
(bad)
(bad)
mov
or
ror
adc
push
mov
cmp
pop
and
pop
data16
(bad)
(bad)
(bad)
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
(bad)
(bad)
(bad)
dec
out
jecxz
movs
(bad)
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
sahf
push
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
(bad)
(bad)
(bad)
jmp
push
push
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
(bad)
(bad)
cmp
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
(bad)
(bad)
(bad)
dec
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
(bad)
(bad)
(bad)
(bad)
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
(bad)
(bad)
(bad)
jmp
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
(bad)
(bad)
jnp
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
ins
cld
ja
sub
(bad)
(bad)
inc
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
(bad)
(bad)
call
xchg
popf
cli
jns
cwde
mov
and
ja
adc
repz
mov
pop
mov
loope
(bad)
iret
mov
sbb
mov
or
mov
push
(bad)
(bad)
(bad)
push
rol
cmps
arpl
aad
or
test
mov
(bad)
(bad)
inc
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
(bad)
(bad)
call
movs
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
(bad)
(bad)
(bad)
jmp
mov
cmpxchg
mov
punpckldq
xlat
and
adc
(bad)
cld
(bad)
push
push
mov
fimul
cmp
xor
mov
(bad)
(bad)
(bad)
dec
enter
scas
out
(bad)
bound
xor
xlat
cmp
jge
dec
mov
(bad)
(bad)
(bad)
mov
xchg
dec
(bad)
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
(bad)
(bad)
(bad)
call
lahf
adc
lods
clc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
(bad)
(bad)
(bad)
jmp
sahf
sbb
call
inc
mov
and
xor
pop
or
(bad)
(bad)
(bad)
cmp
mov
add
das
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
(bad)
(bad)
dec
sub
jmp
jecxz
in
fmul
lock
mov
pop
(bad)
(bad)
(bad)
jmp
xor
loop
push
dec
jg
outs
test
or
ins
cld
rcr
lahf
ror
and
(bad)
call
jg
mov
inc
and
(bad)
xchg
test
call
cmp
xor
(bad)
(bad)
call
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
(bad)
(bad)
(bad)
jmp
fistp
ret
imul
push
ret
ja
imul
cpuid
jae
push
(bad)
inc
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
out
(bad)
sbb
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
xchg
(bad)
(bad)
(bad)
jmp
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
(bad)
call
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
(bad)
(bad)
push
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
(bad)
(bad)
inc
daa
popf
and
pop
and
push
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
(bad)
(bad)
(bad)
call
mov
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
(bad)
(bad)
(bad)
jmp
push
pop
cmp
cmp
xor
or
cmp
movs
add
(bad)
(bad)
(bad)
dec
das
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
ror
sar
(bad)
(bad)
(bad)
std
add
push
movs
not
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
(bad)
(bad)
jmp
mov
mov
ret
push
jp
jmp
fnop
mov
xor
xor
(bad)
and
(bad)
(bad)
call
stc
popa
call
mov
lods
mov
ss
jb
call
(bad)
(bad)
(bad)
jnp
adc
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
(bad)
(bad)
dec
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
(bad)
(bad)
(bad)
inc
fs
inc
call
inc
xchg
push
xor
es
jmp
(bad)
mov
or
mov
(bad)
(bad)
(bad)
push
push
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
(bad)
(bad)
call
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
(bad)
(bad)
(bad)
(bad)
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
(bad)
(bad)
push
mov
retf
pop
sbb
mov
repz
in
test
adc
ja
mov
(bad)
(bad)
(bad)
inc
mov
cmp
cdq
in
mov
push
outs
xchg
cmps
fidiv
sub
(bad)
(bad)
jmp
sub
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
(bad)
fcomi
ret
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
xor
push
mov
ja
cli
xchg
add
imul
pop
rol
and
sub
outs
mov
cmp
bound
cmp
cmp
ins
push
mov
adc
scas
and
jge
nop
sub
push
dec
fisttp
sti
je
mov
mov
popa
jnp
cmp
jge
imul
or
popa
ins
gs
inc
inc
lds
or
add
and
jae
out
sbb
xlat
sbb
ja
arpl
imul
je
or
imul
outs
jb
add
(bad)
aas
and
sbb
ins
jne
je
bound
xor
sub
and
cmp
arpl
jb
arpl
mov
sbb
mov
outs
and
jb
popa
arpl
and
shl
pop
fs
inc
shl
add
ins
gs
push
jns
loop
mov
je
popa
imul
and
push
mov
mov
mov
js
xor
pop
and
(bad)
fild
sub
jo
jns
clc
popa
or
mov
or
outs
sub
imul
jp
sbb
(bad)
in
ins
popa
outs
addr16
and
mov
and
xchg
add
inc
mov
mov
add
add
call
mov
loopne
or
dec
add
fcom
mov
cdq
add
into
or
and
ins
mov
push
ret
data16
and
ins
mov
and
mov
mov
iret
fwait
inc
or
pop
dec
and
mov
ret
(bad)
mov
or
popa
ins
jo
popa
cs
push
enter
pop
data16
inc
mov
pusha
leave
jae
dec
sbb
inc
mov
mov
sbb
bsr
sbb
jae
jb
ret
jecxz
ret
outs
je
sub
test
cli
or
xor
outs
pusha
xchg
adc
repnz
sbb
dec
xchg
ins
test
xor
jo
xor
push
xchg
ret
xchg
push
sub
fcom
inc
lock
add
ja
int
fucomip
pop
js
and
jns
repz
arpl
dec
sbb
pop
and
dec
inc
pop
push
jo
inc
in
daa
int3
adc
jb
outs
inc
and
mov
and
daa
je
je
dec
push
aaa
xor
xchg
xchg
popa
outs
and
outs
mov
mov
jecxz
les
xor
and
ss
fdivr
(bad)
lea
data16
pop
pop
imul
adc
outs
jne
sub
sub
sub
das
inc
xor
or
aaa
adc
or
scas
xchg
dec
push
add
jmp
lock
inc
inc
xor
and
push
fsub
scas
out
inc
add
pusha
inc
ja
out
inc
sbb
jb
and
jg
lods
or
jo
add
scas
pop
cmps
out
jmp
inc
inc
addr16
jmp
xor
xor
sbb
enter
pop
sbb
xchg
add
imul
inc
push
je
dec
inc
cld
push
add
(bad)
je
xor
sbb
dec
gs
outs
sub
and
ins
scas
sti
ret
fidivr
aaa
add
inc
inc
add
or
into
push
lock
inc
or
adc
fnsave
addr16
push
add
add
add
add
mov
or
repz
fistp
or
add
add
add
and
sub
es
xchg
fdivr
push
mov
gs
jecxz
or
or
sbb
inc
pop
push
je
add
jp
mov
push
pop
inc
loope
and
int
and
bound
popa
std
mov
xor
sub
adc
mov
adc
mov
push
fs
mov
cmp
xlat
daa
psubsb
cs
dec
xchg
xchg
push
dec
cs
cmc
pop
mov
inc
punpckldq
and
popa
jo
test
test
clc
sbb
outs
ja
push
inc
pop
shl
outs
idiv
retf
jne
add
hlt
outs
jae
addr16
xor
lds
mov
push
inc
add
les
jbe
pushf
add
jo
or
mov
sbb
push
into
inc
rcl
jb
jns
inc
add
outs
and
add
xchg
mov
add
(bad)
movs
sub
nop
aam
and
jb
sub
add
pop
xor
xchg
inc
jne
int3
add
push
sub
push
and
xchg
ds
dec
pop
cmp
xor
jae
cmp
mov
fdiv
fcmovne
dec
outs
std
imul
test
daa
aaa
jmp
sub
add
cmc
dec
pop
idiv
mov
inc
and
imul
(bad)
es
gs
and
or
dec
push
mov
cmps
and
sbb
stos
(bad)
adc
ss
sbb
jnp
test
adc
and
or
loopne
sub
movs
jg
xor
add
mov
jg
dec
mov
xchg
xlat
adc
pop
jl
nop
sbb
addr16
cld
pushf
std
and
bound
add
loopne
pushf
cld
sub
jb
dec
xor
pop
jbe
dec
ret
mov
lahf
sub
adc
imul
push
mov
leave
xchg
or
mov
sbb
push
mov
out
and
sbb
xor
jo
xor
sbb
(bad)
lds
mov
adc
mov
fwait
mov
push
sub
or
sub
sbb
daa
adc
sbb
fs
xor
dec
in
aam
xor
je
inc
xor
add
xchg
sbb
xchg
loopne
sbb
xor
inc
and
dec
adc
mov
pop
sti
sbb
adc
cs
add
addr16
or
test
push
loopne
rcr
outs
adc
fld
add
pop
mov
mov
imul
test
xor
add
mov
inc
gs
mov
jmp
mov
jecxz
dec
loop
jmp
mov
mov
mov
jg
retf
xor
mov
and
jae
mov
repz
and
xor
and
outs
mov
(bad)
cmps
and
cmps
inc
mov
mov
add
push
sbb
sbb
neg
and
or
aam
test
movs
test
adc
add
sbb
fwait
scas
and
addr16
lds
pop
sub
sbb
xchg
addr16
movs
es
cli
push
rol
popf
and
cmp
ret
inc
out
repz
ret
mov
add
or
add
sub
xchg
push
ret
push
add
sub
ret
mov
pop
mov
push
dec
add
ror
inc
lds
dec
mov
rcl
and
jae
mov
push
mov
jae
nop
inc
fdivr
xchg
mov
adc
unpckhps
adc
mov
les
jae
sbb
bound
fwait
repz
inc
rcr
ja
nop
xchg
sub
xchg
dec
sub
jnp
push
scas
test
sbb
xchg
or
push
addr16
in
(bad)
add
inc
in
cmp
aaa
pusha
shr
retf
mov
xor
jo
adc
jecxz
jae
or
inc
mov
mov
cmc
jae
cmp
and
ss
sub
sbb
cli
sub
or
sbb
aas
ret
fs
xchg
cmp
adc
xchg
dec
mov
add
sub
out
mov
add
test
fdiv
jg
xchg
out
or
adc
adc
jmp
imul
add
jo
call
outs
push
jns
ja
aaa
or
sub
jb
out
mov
add
add
cmp
out
rcr
lsl
pusha
outs
push
add
popa
ret
xchg
dec
inc
mov
cmp
or
add
add
pop
add
sahf
sti
fsub
lsl
add
push
out
add
(bad)
call
adc
add
pop
or
or
or
add
or
mov
call
lods
ins
in
imul
imul
imul
outs
addr16
xchg
pop
push
add
xor
jb
or
dec
retf
push
imul
imul
xlat
adc
cmps
shl
push
(bad)
dec
shl
push
mov
cs
outs
shl
pop
fimul
xor
ds
xor
shl
shl
popa
shl
push
ror
xor
xor
sbb
sub
cmps
jmp
test
cdq
cmps
imul
imul
cmps
imul
push
aad
mov
call
dec
int
imul
adc
(bad)
neg
je
mov
adc
or
adc
or
xchg
pop
dec
shl
shl
xor
shl
mov
jae
shl
or
mov
retf
retf
sub
stos
imul
dec
shr
jmp
sbb
fwait
pop
pop
fcmovnu
cmp
mov
dec
sar
sti
movs
pop
imul
inc
(bad)
cmps
imul
imul
cmps
imul
xlat
aaa
aaa
mov
call
test
imul
iret
das
das
scas
scas
call
out
pop
pop
imul
imul
imul
inc
add
pusha
adc
xlat
jne
cwde
jo
dec
pop
sub
dec
shl
js
xor
shl
and
adc
je
dec
shl
add
add
shl
arpl
jo
cmp
add
lds
scas
imul
adc
or
sbb
pop
pop
test
fistp
pop
push
xor
shl
push
push
add
shl
adc
dec
sbb
pop
dec
neg
xor
add
add
add
add
or
enter
or
push
xor
or
push
psrlq
or
add
push
pop
sbb
xchg
or
sbb
sbb
push
leave
push
sbb
clc
jg
push
inc
or
or
or
add
jo
mov
pop
and
adc
adc
and
adc
add
adc
add
adc
pop
push
adc
push
outs
push
dec
xchg
push
jle
pop
mov
pop
mov
icebp
bound
loop
mov
scas
add
sbb
sbb
jne
gs
pop
xor
cmp
or
dec
inc
push
les
push
pusha
call
dec
out
lahf
push
add
neg
jnp
outs
imul
jne
jnp
pop
push
push
dec
dec
add
pop
rol
add
mov
and
loop
mov
add
jmp
push
or
out
inc
add
dec
inc
sub
inc
icebp
and
jb
dec
jo
outs
push
push
dec
and
cmp
cmp
(bad)
jmp
xor
and
bound
xor
xor
add
retf
adc
add
or
or
mov
fadd
aad
outs
xor
mov
(bad)
mov
arpl
jo
outs
pop
jb
popa
add
imul
arpl
add
bound
pop
add
and
(bad)
inc
push
push
dec
inc
dec
inc
inc
push
inc
and
push
push
inc
push
push
add
push
and
mov
pop
push
dec
inc
push
mov
sbb
xchg
out
jg
cmc
push
push
push
and
pop
add
cmp
push
add
or
push
adc
lahf
sti
ret
jae
and
and
jne
fdiv
div
addr16
jae
js
xor
imul
out
lahf
in
jge
popa
jns
inc
outs
imul
cmp
std
aas
mov
jo
inc
add
in
pop
neg
add
inc
add
jns
add
adc
mov
add
arpl
ins
gs
data16
sub
(bad)
cmp
je
popa
je
ja
jae
dec
xor
pop
sbb
ins
fwait
stos
add
jo
ins
gs
outs
pop
sti
and
popa
ins
pusha
jo
jae
inc
outs
jne
ins
add
mov
stc
popa
ins
and
lock
(bad)
jns
jne
jae
outs
jne
and
xlat
sub
outs
arpl
add
je
add
jg
cmp
jmp
outs
xor
outs
pop
or
add
cmp
ja
inc
gs
gs
add
lahf
or
sbb
lea
add
addr16
cmp
add
jp
jg
mov
outs
gs
mov
dec
fbld
inc
push
push
mov
jae
mov
add
inc
dec
dec
inc
or
inc
push
dec
or
dec
inc
and
sti
data16
in
xor
or
push
xor
pop
aaa
or
js
add
aaa
pop
into
add
iret
(bad)
out
push
add
pop
push
push
sbb
inc
dec
dec
inc
cs
fidiv
dec
xor
push
or
cmp
dec
adc
dec
pop
and
in
fld
cmp
mov
dec
push
fild
loopne
pop
das
inc
dec
(bad)
jae
pushf
cmp
mov
outs
mov
imul
je
jne
add
outs
int3
popa
arpl
jo
add
daa
gs
outs
sub
outs
add
bound
add
imul
arpl
push
add
fidivr
(bad)
jae
jb
bound
or
arpl
outs
mov
cmp
dec
jb
jne
(bad)
loope
sub
adc
jo
push
push
mov
aaa
jb
outs
outs
ins
mov
and
outs
jb
push
inc
test
aas
pop
je
sti
pop
xor
cmp
aaa
dec
mov
ror
pop
xchg
push
adc
sbb
scas
arpl
out
mov
mov
push
pop
fld
sbb
add
dec
and
cdq
add
outs
cmp
fwait
add
and
jbe
aad
jb
xor
add
sbb
jae
push
add
cmp
add
imul
push
shr
pop
xchg
pop
imul
outs
jbe
ins
(bad)
sbb
dec
fstp
sub
ret
rcr
es
mov
jnp
outs
jne
adc
push
jno
pop
jne
adc
adc
jb
pop
push
in
call
pop
or
and
ret
fisttp
arpl
pop
pop
je
test
int3
(bad)
out
jle
dec
inc
add
and
cmp
cmp
fbstp
outs
outs
sub
(bad)
or
fadd
cmps
bound
pop
inc
call
bound
bound
bound
inc
imul
aaa
mov
and
je
das
add
add
inc
add
stos
inc
cdq
add
push
mov
inc
add
jl
dec
add
jo
xor
shr
push
inc
cmp
xor
xor
and
adc
xor
aaa
clc
jg
add
in
sar
xor
enter
mov
shl
mov
ins
dec
shl
dec
dec
cdq
dec
shl
xor
scas
sbb
jnp
jb
add
mov
pop
jo
gs
push
(bad)
(bad)
arpl
mov
into
lds
or
or
imul
cmp
sar
fs
pop
mov
sti
or
iret
daa
cmp
adc
cmp
push
cwde
sub
add
sub
pop
iret
adc
jae
ins
out
dec
adc
jae
add
mov
gs
pop
and
iret
add
imul
js
ja
scas
add
sbb
jo
gs
lods
xor
add
gs
add
arpl
or
bound
or
dec
mov
push
add
add
cmp
push
push
dec
push
ds
xor
movs
minps
mov
push
add
mov
stc
arpl
add
inc
jmp
push
adc
inc
push
inc
test
add
dec
push
inc
dec
jae
and
sub
and
jno
je
pop
gs
sub
push
cmp
mov
test
fdiv
and
icebp
and
xor
jecxz
je
fwait
or
xor
fs
scas
pop
sub
popa
lods
add
xchg
push
jae
add
stos
ret
(bad)
scas
mov
rol
add
movs
adc
push
mov
adc
inc
add
add
jnp
loopne
dec
(bad)
aaa
js
dec
add
pusha
pop
push
sbb
jnp
jp
iret
imul
and
fwait
inc
ins
or
rcr
pusha
pop
mov
dec
outs
cld
pmaddwd
in
mov
pop
xor
or
xor
pop
aam
into
cmp
popa
ins
xlat
jno
por
outs
adc
sub
dec
inc
dec
adc
je
jb
bound
int3
jo
bound
sbb
and
cs
and
and
cmp
std
jo
ins
pop
add
jo
jb
sub
sbb
jg
mov
jb
sub
cmp
and
clc
(bad)
mov
gs
jae
and
popa
jb
or
inc
outs
je
lahf
jge
xor
inc
cmp
add
pop
push
(bad)
push
jb
arpl
sub
push
out
mov
inc
dec
lea
or
sub
test
and
add
push
push
inc
inc
dec
xchg
dec
pop
test
adc
sub
cmc
and
and
adc
add
out
addr16
sub
dec
cdq
and
je
inc
add
out
loop
adc
jae
jb
sub
xor
xor
push
sub
add
mov
xor
cmp
fld
lods
and
mov
inc
pop
arpl
sbb
sub
dec
outs
and
(bad)
data16
sub
add
add
popa
sbb
mov
xchg
cdq
loop
arpl
adc
cmps
sti
mov
mov
pop
push
and
cmp
cmp
pop
pusha
leave
inc
add
fimul
out
xor
add
and
dec
jae
in
mov
xchg
dec
ja
mov
fistp
daa
idiv
jnp
adc
fwait
mov
fdivr
pop
mov
pop
pop
jmp
xor
mov
out
push
or
cld
test
and
sbb
sbb
out
cwde
aaa
das
add
lock
jo
loopne
outs
inc
push
xor
sbb
jbe
imul
mov
je
sub
test
jae
jne
icebp
arpl
imul
inc
push
dec
dec
rol
sbb
outs
ins
sbb
outs
add
jo
mov
xchg
lods
mov
lahf
jmp
cmp
mov
rcl
adc
lahf
cmp
pop
sbb
mov
jae
scas
mov
sbb
cmp
pop
fsub
retf
jg
hlt
lea
push
sbb
pop
jo
and
dec
xor
pusha
push
push
cmp
nop
scas
mov
jmp
xchg
pop
aam
nop
ret
sub
mov
sbb
add
out
cmp
sbb
arpl
add
xchg
int3
push
or
scas
jnp
rcl
push
pushf
bound
loopne
cs
sbb
div
call
xor
dec
cmp
jne
sub
(bad)
loopne
or
pushf
pop
or
xor
add
das
ud2
sti
xchg
mov
cmp
das
fwait
jl
ret
in
cmp
adc
aaa
fwait
pusha
adc
adc
mov
adc
push
repz
std
jnp
cmp
getsec
xor
sar
xor
inc
test
ja
or
fdivr
daa
sbb
fdiv
mov
pop
cmp
jmp
sti
xchg
xor
cmp
add
dec
add
push
mov
sbb
mov
call
in
sub
adc
pmaxub
(bad)
and
push
aaa
cmp
loopne
rcl
aaa
fist
lahf
aas
je
push
mov
mov
mov
out
sub
add
das
ja
sbb
cld
dec
arpl
jnp
jnp
out
mov
or
loope
test
cmp
cmp
outs
jmp
cmp
dec
call
outs
(bad)
and
jmp
mov
inc
or
js
cmps
xchg
xchg
jg
add
fnstenv
push
pop
fadd
daa
dec
pop
out
or
(bad)
lsl
inc
jo
mov
daa
pop
dec
outs
neg
ret
jnp
pop
pop
dec
pop
mov
pop
out
in
add
ud2
or
lahf
cmp
mov
sub
push
adc
cmp
sti
call
cwde
adc
pop
inc
push
push
push
pop
push
inc
push
dec
inc
pop
cmp
sets
push
dec
inc
dec
daa
aaa
and
rcr
dec
inc
push
push
inc
push
and
inc
dec
inc
mov
adc
gs
ins
fs
and
pop
sbb
jmp
adc
inc
dec
add
and
hlt
sbb
push
daa
das
outs
jb
je
mov
arpl
outs
je
sbb
popa
mov
push
push
inc
inc
dec
push
mov
lahf
pop
xor
pop
cmp
ds
outs
outs
les
(bad)
dec
push
sub
(bad)
arpl
jmp
sbb
sub
push
push
inc
push
pop
mov
dec
inc
pop
push
add
fmulp
adc
mov
jmp
jne
popa
jne
push
fadd
add
add
sbb
add
push
push
test
pop
popa
outs
fs
packuswb
add
outs
gs
add
or
scas
adc
ret
shr
out
jae
pop
fs
pop
sbb
in
iret
fs
ret
outs
out
fs
sub
adc
aaa
cmp
mov
outs
je
(bad)
cmp
mov
or
jp
loop
mov
cmp
psubq
pop
or
(bad)
out
mov
dec
inc
push
push
inc
inc
push
inc
pop
inc
add
push
push
or
gs
inc
adc
jg
jbe
pop
jo
and
iret
add
mov
mov
add
scas
loopne
lods
mov
mov
aas
mov
dec
push
dec
add
sti
(bad)
dec
daa
push
inc
adc
inc
adc
cmp
push
enter
adc
mov
cmp
adc
clc
push
scas
sub
sub
loopne
sub
into
xor
add
cmp
pop
loopne
cmc
(bad)
addr16
pop
pop
push
push
inc
add
bound
push
sub
fs
jno
push
in
xor
outs
pop
or
shr
push
push
add
les
or
push
pop
out
push
pop
mov
hlt
sbb
push
push
inc
inc
jo
bound
jmp
jecxz
sti
fs
pop
inc
fs
pop
add
pop
xchg
add
rcl
xor
retf
xchg
dec
add
and
jl
inc
sub
jo
fbstp
add
and
pop
dec
(bad)
xor
and
call
push
mov
xor
sub
inc
enter
adc
mov
sub
pop
scas
xchg
mov
xor
pop
sbb
sbb
imul
nop
addr16
rcr
or
outs
pop
pop
cmp
add
mov
or
mov
sbb
arpl
add
imul
add
scas
or
sbb
sbb
mov
fwait
mov
loopne
cmp
jecxz
pop
arpl
adc
ffreep
cli
xchg
add
test
mov
adc
inc
enter
mov
or
mov
stc
cmp
sbb
imul
arpl
fs
push
stos
pop
fs
out
fcomp
mov
xchg
add
pop
and
test
pusha
das
rcl
sbb
push
xor
ja
jmp
das
inc
daa
rcl
dec
out
mov
daa
add
neg
popa
rcl
cmp
xor
inc
dec
add
mov
add
arpl
in
dec
mov
and
inc
into
jne
mov
loopne
adc
int
add
xchg
sbb
dec
enter
pop
or
adc
pop
in
sbb
add
lahf
or
inc
add
idiv
xor
push
sti
clc
xchg
dec
sub
scas
sti
inc
push
push
push
lock
fwait
es
mov
adc
(bad)
stos
xor
sbb
adc
jg
adc
xchg
jg
fcom
mov
adc
loopne
push
fistp
jmp
or
jg
jl
inc
jo
das
adc
adc
jg
sub
ja
ja
add
or
jo
or
out
rol
jg
cmp
adc
outs
adc
out
jae
jae
dec
adc
(bad)
shr
movs
mov
cmp
inc
inc
pop
xchg
jne
jmp
dec
push
adc
xchg
push
popa
je
sbb
push
dec
push
inc
push
inc
ins
mov
push
inc
push
xor
dec
je
jns
inc
add
adc
pusha
fadd
inc
adc
pushf
jnp
fs
inc
mov
jo
rcl
outs
or
add
lods
bound
stos
pushf
xor
(bad)
jg
test
pop
cmp
xor
push
push
push
inc
add
out
xlat
cmp
sbb
mov
push
les
inc
dec
inc
dec
inc
sub
add
retf
jmp
adc
cld
pop
je
outs
out
fnstcw
sbb
dec
mov
dec
push
push
dec
inc
pop
push
cld
lahf
push
push
into
add
inc
popa
jae
xchg
sbb
jo
je
outs
outs
pop
aam
(bad)
push
inc
dec
dec
dec
dec
rol
imul
xor
add
sub
inc
and
mov
inc
adc
das
hlt
adc
popa
out
fistp
dec
fbstp
adc
loopne
push
enter
loope
cmp
pop
inc
sbb
xor
outs
addr16
jg
xchg
dec
pusha
ss
push
stos
scas
jb
fidivr
pop
imul
outs
sbb
in
sbb
pop
jg
or
scas
xchg
cs
aas
add
outs
sbb
mul
das
pop
jae
ins
push
das
enter
outs
popa
bound
jo
xor
ficom
js
xor
das
cmps
fs
inc
rcr
jbe
repz
inc
test
dec
mov
add
jae
inc
pop
and
pop
rol
add
out
sub
popa
arpl
jae
pop
add
inc
mov
loope
mov
and
fs
bound
add
inc
cmp
maxps
outs
je
cmp
(bad)
mov
add
js
add
jo
sub
inc
mov
cmc
test
ins
outs
inc
test
inc
add
ficomp
mov
add
inc
pop
ins
ror
pop
dec
pop
outs
jne
pop
dec
jb
popa
and
add
inc
sub
ja
outs
jo
outs
dec
sar
outs
jb
das
adc
popaw
jno
push
stos
ins
mov
inc
loopne
pop
pop
jnp
add
jbe
jo
pop
mov
mov
jo
cmp
adc
ss
or
push
adc
mov
adc
dec
sbb
push
sub
pop
push
push
inc
sbb
adc
push
in
adc
xor
xlat
adc
mov
or
adc
or
sbb
sahf
or
lahf
fistp
pop
fsub
in
sbb
adc
int3
inc
shl
sbb
xchg
or
sbb
adc
mov
adc
mov
fsub
sbb
adc
pushf
sbb
or
mov
pop
mov
sbb
adc
je
cdq
stos
mov
pop
mov
push
pop
fadd
push
cmp
ins
sbb
nop
das
ss
push
add
sub
push
sub
add
sub
add
not
push
punpcklwd
sbb
sub
retf
or
sahf
mov
inc
hlt
in
out
pop
dec
and
jg
call
dec
inc
pop
dec
inc
inc
inc
add
cwde
sti
jg
pop
inc
inc
dec
dec
dec
inc
inc
dec
dec
daa
push
pcmpgtd
das
or
add
inc
inc
push
dec
push
pop
inc
add
adc
(bad)
or
fnsave
push
xor
cmps
js
push
pop
inc
dec
dec
or
cld
sub
dec
push
inc
andnps
push
adc
fdiv
dec
push
dec
push
adc
mov
push
inc
dec
dec
pop
inc
inc
push
dec
dec
pop
add
push
inc
(bad)
enter
cmp
xor
rol
or
or
push
push
inc
cmp
or
data16
push
ja
aas
loope
add
adc
jns
mov
dec
push
dec
rcl
cdq
jae
std
dec
dec
push
inc
inc
inc
mov
add
sbb
out
xchg
jmp
stos
xchg
adc
nop
seta
add
(bad)
inc
dec
inc
dec
push
bswap
dec
enter
daa
pushf
mov
jae
cmp
jge
fmul
or
sahf
sti
jp
push
jl
or
popa
daa
loopne
je
lahf
jo
fsub
mov
xor
sub
enter
add
dec
add
and
or
pop
jae
pusha
leave
xchg
inc
push
in
mov
add
test
ret
fadd
les
xchg
mov
movups
(bad)
in
das
fdiv
cmp
push
bswap
or
das
sbb
sbb
fdiv
pop
mov
loopne
pusha
dec
das
ret
sbb
mov
mov
loopne
sbb
add
pop
dec
out
lea
pop
mov
or
cmps
add
fadd
(bad)
sbb
daa
pop
cmps
(bad)
mov
jo
inc
dec
inc
dec
cwde
sub
inc
sbb
cmc
inc
dec
ret
and
int3
cdq
cmp
jnp
loope
sbb
add
or
adc
adc
xchg
inc
jg
ja
hlt
and
add
xor
popa
rcr
cs
fwait
cmp
mov
popf
push
or
fistp
imul
adc
cmp
outs
sbb
ja
hlt
or
fs
add
outs
(bad)
dec
imul
dec
inc
pop
pop
dec
push
pop
dec
inc
dec
inc
push
addr16
mov
sti
out
mov
jns
add
xor
xchg
ins
lods
bound
add
pop
les
inc
jae
pop
mov
inc
mov
sub
and
pushf
stc
scas
ja
jb
add
popa
nop
stc
mov
lahf
pop
add
pop
add
mov
call
arpl
out
out
pop
ins
and
and
add
mov
popa
sbb
outs
cmp
dec
repz
pop
inc
dec
push
dec
inc
push
pop
inc
push
pop
pop
imul
std
sub
dec
outs
jg
adc
arpl
push
mov
jne
cmp
jl
pop
pusha
mov
jnp
cmp
adc
ja
add
mov
add
sbb
dec
add
sub
xor
lahf
sub
and
dec
mov
jge
pop
pop
add
pusha
in
xor
clc
xchg
add
cmp
push
and
mov
fbstp
and
mov
dec
dec
add
imul
adc
aaa
push
lock
punpckhwd
and
jb
bound
sbb
jne
inc
add
sbb
pop
lods
popa
ja
imul
push
loopne
add
mov
mov
inc
or
sbb
sbb
arpl
ins
and
popa
mov
or
dec
dec
inc
adc
or
or
in
cmp
adc
xor
jg
outs
and
ss
shl
emms
inc
inc
inc
adc
das
fstp
gs
arpl
adc
sbb
ja
out
fstp
fnstenv
adc
lahf
fdiv
daa
arpl
fdiv
adc
mov
fdiv
add
adc
ret
mov
daa
adc
dec
(bad)
xchg
in
adc
ja
daa
fs
arpl
adc
push
inc
outs
arpl
dec
adc
jbe
and
pop
arpl
adc
jae
jae
arpl
adc
and
and
bound
out
and
fiadd
adc
out
daa
xchg
mov
daa
arpl
inc
fdiv
adc
imul
add
imul
inc
pop
enter
xor
push
add
xor
cld
call
xchg
aas
dec
outs
push
and
jns
push
outs
ins
imul
imul
mov
adc
dec
popa
jo
cdq
jae
add
movs
gs
xor
xlat
cmp
sti
xor
outs
jns
clc
ja
jo
ja
addr16
jmp
arpl
sub
xor
add
xor
add
inc
xor
add
cmps
add
data16
inc
enter
cwde
adc
enter
lods
je
aaa
xor
add
imul
jge
xor
pop
or
xor
xor
pop
xor
or
push
and
xor
xor
xor
in
cmp
imul
mov
mov
cmp
cdq
pop
repnz
or
xor
fs
add
pop
jo
xor
xchg
cmp
jo
push
jo
dec
push
fdiv
xor
xor
cwde
jnp
retf
or
xor
xor
pop
mov
outs
or
xor
or
xor
pop
or
arpl
je
bound
arpl
jo
bound
cmp
pop
fucom
pop
sti
xor
xor
xor
xor
bound
xor
jbe
arpl
or
xor
cmp
jmp
cmovnp
push
pop
mov
pusha
imul
cmp
inc
or
or
inc
or
sti
mov
or
aaa
cmps
lds
das
cmps
or
sub
in
or
cdq
cmps
and
xchg
xchg
jne
push
rol
popa
nop
imul
add
sub
(bad)
lds
inc
mov
outs
ins
sub
clc
mov
fs
outs
mov
mov
jae
popa
into
add
in
cdq
mov
ror
pop
pop
mov
pop
clts
pop
pop
ud0
bound
or
pop
rdmsr
xor
imul
push
inc
inc
outs
and
push
sub
dec
popa
add
and
dec
popa
add
(bad)
ja
xor
mov
jb
je
add
dec
sub
adc
(bad)
sbb
sbb
inc
outs
outs
jae
jb
imul
xor
popa
ins
ins
inc
jno
ja
sub
je
adc
add
push
adc
and
mov
out
add
mov
jae
jns
outs
frstor
xor
pushf
stos
cmp
jb
js
jne
lar
bswap
scas
xchg
jae
popa
ins
sar
or
gs
fs
jae
popa
icebp
fbstp
sub
jg
inc
push
sub
data16
sub
faddp
cmp
pop
(bad)
pop
mov
xor
sbb
aaa
aaa
ss
mov
popa
outs
jnp
popa
push
pop
outs
add
getsec
dec
cwde
jmp
bswap
cmp
pop
jmp
aas
cli
sub
mov
dec
pop
outs
pop
clts
neg
aas
nop
mov
adc
nop
aas
loop
sub
pop
cmovge
jb
jae
data16
pop
fs
test
ins
and
imul
or
add
ins
jae
push
add
sub
popa
jb
arpl
fs
out
inc
cmp
adc
adc
or
push
test
dec
push
pusha
or
xchg
sbb
jae
push
sti
(bad)
(bad)
mov
sub
je
dec
dec
dec
dec
push
sub
dec
push
push
sub
adc
add
dec
inc
inc
push
add
icebp
xchg
pop
push
inc
xor
ins
data16
jae
je
loopne
shr
outs
jbe
jae
comiss
jne
dec
popa
jae
inc
fsub
push
imul
jp
cmovno
arpl
pop
xor
outs
sti
retf
add
adc
push
inc
sub
test
jne
and
imul
scas
fbstp
fadd
aas
shr
gs
imul
or
imul
ja
cmp
outs
imul
mov
mov
js
and
arpl
ds
addr16
daa
xor
and
push
lods
arpl
dec
gs
pop
push
cmp
outs
inc
mov
addr16
adc
inc
or
fdiv
push
xchg
loope
push
adc
dec
pop
je
mov
outs
sub
stos
cmp
xchg
fist
inc
dec
push
(bad)
adc
shl
(bad)
outs
outs
out
push
test
mov
add
jb
arpl
and
jae
adc
daa
arpl
jae
(bad)
sbb
popa
jns
and
je
ja
jns
ret
fadd
inc
pop
inc
push
inc
push
pop
pop
lock
push
cmovae
sub
push
jle
cwde
or
dec
retf
outs
dec
das
xchg
call
arpl
inc
popa
je
xchg
adc
leave
push
push
adc
gs
pop
push
mov
jnp
xor
ret
adc
lahf
repz
pop
inc
jmp
femms
jae
(bad)
je
outs
outs
gs
jecxz
adc
push
sar
push
gs
imul
sbb
jg
and
adc
dec
push
jo
fs
test
mov
push
xchg
add
dec
inc
add
aaa
sti
sub
xchg
lods
and
rcl
jns
xchg
pop
movups
adc
xchg
or
adc
cli
neg
and
inc
jne
push
mov
jo
data16
mov
inc
mov
inc
inc
dec
xchg
jge
dec
jno
inc
cmps
cmps
sbb
dec
dec
outs
fdivr
push
gs
sbb
not
sbb
sub
rcr
out
adc
inc
inc
int3
(bad)
int3
inc
stos
adc
(bad)
or
and
push
and
or
sub
inc
repnz
cmps
sub
outs
pusha
pop
pop
xchg
rcl
jbe
sub
or
neg
sub
cs
adc
mov
pop
cmp
adc
(bad)
jp
popa
jo
add
lds
sub
mov
add
daa
jbe
sysenter
adc
outs
pusha
adc
or
lock
aaa
add
test
pop
sub
lock
pop
push
arpl
pop
dec
jae
inc
cwde
in
jae
mov
mov
adc
xchg
(bad)
adc
cmp
adc
jnp
or
daa
das
fwait
push
icebp
push
dec
push
out
push
dec
or
aaa
lock
jne
ins
pop
outs
gs
inc
sbb
jnp
(bad)
jle
dec
outs
jno
push
arpl
mov
pop
lahf
popa
mov
popa
add
adc
rdpmc
and
mov
dec
xor
call
push
jp
cwde
mov
inc
pop
ins
push
cmp
mov
push
ins
inc
push
jno
mov
ret
rol
outs
adc
sbb
push
pop
inc
iret
push
jle
int3
data16
test
and
and
daa
push
ret
fcomp
adc
fwait
pop
mov
leave
jle
adc
add
add
out
daa
outs
ss
jbe
cmp
das
pusha
daa
adc
inc
sub
sbb
adc
xchg
ins
and
pop
aas
inc
xor
xlat
or
imul
pop
jmp
adc
jnp
mov
rcr
adc
jge
outs
push
cmp
dec
sub
xor
push
jne
rcr
sub
call
inc
popa
addr16
addr16
xchg
jno
xchg
ret
jo
icebp
dec
dec
inc
dec
fimul
outs
dec
es
ja
(bad)
es
pusha
mov
push
pop
ud2
loop
fwait
mov
inc
dec
dec
outs
ins
mov
lahf
cmp
inc
pop
fwait
xchg
or
xor
mov
test
gs
neg
push
adc
and
fsub
mov
or
inc
in
dec
shr
lock
mov
(bad)
ins
jae
ss
fcom
scas
je
inc
mov
aas
inc
arpl
ret
dec
imul
je
outs
outs
inc
mov
outs
jae
arpl
sub
fs
xor
push
gs
outs
outs
jns
push
gs
lds
xchg
mov
push
sar
fcom
fnstsw
pop
sbb
imul
call
sub
bound
mov
or
dec
dec
inc
and
cwde
sub
dec
dec
jge
das
push
mov
xor
imul
push
call
sbb
mov
jae
cdq
add
xchg
dec
nop
test
gs
arpl
scas
es
inc
mov
cld
sbb
bound
gs
popa
mov
fistp
pop
jbe
mov
ins
pop
mov
pop
sub
adc
push
inc
or
cmps
mov
ins
xchg
test
popa
imul
sbb
jo
xchg
add
outs
gs
sbb
outs
push
add
mov
inc
cld
aas
mov
data16
outs
fs
jns
mov
push
jo
jb
gs
gs
outs
sti
daa
and
outs
bound
sbb
push
imul
push
outs
imul
call
outs
arpl
add
lock
cmove
popa
imul
(bad)
push
arpl
add
inc
or
add
or
xchg
cmp
jo
ins
outs
std
in
sti
push
inc
or
xor
jmp
and
push
adc
fs
sahf
loope
dec
cmp
push
imul
inc
jae
arpl
je
xor
mov
in
or
xchg
xor
icebp
sbb
lea
ret
add
or
pcmpgtw
lock
popa
outs
jne
inc
add
cmps
fadd
idiv
pop
adc
jg
sub
add
jbe
jne
imul
push
hlt
outs
imul
retf
data16
xor
rol
popa
pop
jmp
inc
out
dec
push
xchg
mov
dec
add
push
dec
inc
add
imul
and
arpl
inc
lods
jnp
push
inc
jle
or
adc
retf
jo
or
add
mov
add
lock
mov
es
push
cld
jb
addr16
fld
mov
outs
arpl
push
shr
xor
test
add
sti
push
cmp
popa
arpl
jge
pop
movs
push
jl
pop
arpl
rcl
cmp
xlat
gs
push
mul
jns
je
adc
xor
test
inc
jb
jne
jae
or
imul
nop
and
je
cmp
ins
jecxz
call
dec
outs
ins
and
jne
mov
push
gs
ss
shl
ins
fs
adc
or
int3
adc
mov
dec
dec
aaa
push
xchg
in
add
lds
dec
retf
adc
sub
sub
aaa
inc
arpl
sbb
mov
scas
sub
xchg
xchg
pushf
int3
fisubr
bound
inc
inc
or
fbstp
inc
cmp
xchg
inc
test
or
pop
fidiv
sbb
push
inc
or
ins
cwde
mov
les
mov
xlat
(bad)
inc
rcr
pop
xchg
int3
and
pop
or
pop
xor
pop
or
and
and
or
sub
sbb
inc
das
ins
sub
jo
nop
xor
fsub
xor
xor
enter
inc
fbld
or
xor
test
and
arpl
arpl
in
int3
lock
fidivr
push
mov
dec
push
dec
and
cs
popa
sub
(bad)
xor
or
popf
push
cmp
add
inc
jbe
or
rcr
push
gs
and
hlt
(bad)
xchg
jbe
and
and
add
or
add
mov
outs
call
push
xchg
jecxz
pop
sub
xor
add
pop
fld
mov
popa
arpl
outs
arpl
add
xor
jge
inc
arpl
jle
or
adc
popa
arpl
sbb
mov
adc
push
inc
sub
jmp
rcl
or
movs
out
aad
call
and
mov
xchg
and
sbb
into
and
add
fiadd
xchg
outs
inc
outs
ins
stos
jnp
sub
inc
inc
adc
push
sbb
xor
add
jae
sbb
gs
loope
test
mov
outs
ins
jo
mov
loopne
sbb
and
cmp
aas
retf
jb
jbe
je
repz
rol
adc
adc
pop
gs
or
mov
arpl
mov
ja
ins
je
xor
out
loop
repnz
daa
imul
jo
dec
inc
ins
retf
outs
add
add
daa
sti
cs
dec
push
inc
add
and
jb
aas
test
scas
jae
sub
push
sar
add
inc
dec
jae
and
addr16
inc
and
jae
or
jo
jmp
ret
les
cwde
retf
gs
mov
fs
mov
enter
adc
(bad)
jmp
inc
jb
push
inc
jne
outs
data16
adc
or
cli
cwde
cmp
outs
or
stos
fld
jl
movs
in
pushw
inc
pop
lds
mov
retf
adc
and
sbb
adc
arpl
add
add
arpl
jmp
or
movs
arpl
mov
popa
and
jae
inc
inc
pop
inc
push
inc
push
pop
cmps
or
add
add
inc
xchg
pop
je
test
retf
xchg
std
dec
pop
arpl
sub
adc
ja
push
push
ja
arpl
(bad)
cmp
mov
jno
jae
jo
imul
out
jne
retf
pop
cmps
mov
es
or
ss
sbb
cmps
add
daa
shl
int3
xchg
js
xlat
fs
das
lahf
(bad)
imul
mov
sub
add
jns
data16
cld
aas
popa
out
sbb
je
jp
outs
jae
imul
xor
cmovno
inc
fisttp
inc
imul
adc
aaa
and
outs
sub
or
clc
out
ins
arpl
ins
jbe
sar
xor
jo
jo
pop
ins
out
cmps
push
imul
sbb
dec
adc
mov
int
adc
mov
add
bound
jb
addr16
and
push
gs
inc
daa
rcr
(bad)
sub
(bad)
jb
dec
sbb
push
sahf
dec
fs
jns
cmp
push
sbb
push
jg
gs
sbb
popa
fs
loope
adc
loopne
push
jb
arpl
mov
jae
gs
or
jo
adc
and
pop
loope
xchg
sti
jecxz
cdq
stos
add
mov
cmp
call
push
pop
mov
pop
mov
pop
fdiv
das
jecxz
jne
sbb
cmc
es
outs
sub
ja
pop
fwait
and
jae
addr16
push
mov
daa
outs
outs
lea
dec
adc
sub
xor
and
sub
push
cld
mov
jne
data16
adc
inc
je
ins
xchg
outs
int3
inc
mov
cmps
push
sbb
cmc
jo
and
xchg
imul
dec
pop
add
push
imul
retf
push
rol
aas
shl
inc
out
jae
push
or
adc
scas
shr
sub
pop
mov
ret
lahf
add
sbb
push
popa
imul
pop
sbb
arpl
inc
pop
mov
gs
popa
jae
inc
push
xchg
gs
std
sub
idiv
ins
push
gs
pop
sar
xor
jg
jae
bound
jb
pusha
mov
imul
iret
mov
gs
dec
inc
inc
and
fst
arpl
and
arpl
or
and
or
pop
jo
ffreep
adc
push
jns
ins
inc
ins
addr16
jmp
pop
pusha
or
pop
push
outs
sbb
pop
inc
(bad)
popa
shl
mov
inc
rcl
mov
dec
push
ja
sbb
jae
ja
mov
arpl
add
push
lea
mov
mov
iret
push
sbb
dec
adc
inc
outs
and
pop
or
scas
out
adc
or
in
xchg
mov
sub
jo
gs
push
fstp
adc
mov
outs
ins
outs
jne
cmp
cmp
jne
pop
imul
inc
ins
outs
or
popa
enter
fbstp
cmp
pushf
jnp
repnz
rcr
jno
xor
sub
outs
ins
gs
xor
jbe
pusha
bound
push
iret
pusha
cli
jmp
outs
fs
xor
jno
movups
or
or
jae
dec
push
xor
iret
popa
or
and
and
pop
div
ret
fmul
cmp
sbb
adc
sbb
imul
sbb
fs
jno
mov
test
out
push
sbb
xlat
cmp
mov
outs
fistp
sub
ins
inc
pop
mov
jbe
pop
das
pop
cdq
dec
push
shr
mov
mov
push
xchg
mov
fwait
pop
jae
jae
fwait
out
xchg
iret
adc
xchg
pop
jmp
pop
js
add
popf
push
add
adc
arpl
(bad)
clc
je
sub
dec
inc
jb
dec
pusha
inc
mov
mov
jns
and
xor
pop
mov
xchg
cmps
ret
rol
arpl
pop
leave
sbb
call
jg
jae
jno
jno
sub
imul
jecxz
sub
xlat
fs
retf
sub
inc
xor
pusha
leave
fdiv
sbb
xor
sbb
xor
dec
sbb
enter
add
add
or
inc
inc
jnp
jae
jle
xor
sbb
sbb
popa
sub
out
add
xor
aad
cmp
push
xchg
sub
xchg
inc
or
hlt
dec
and
cmps
mov
mov
and
sbb
nop
ret
cdq
push
jmp
shl
addr16
fnstenv
gs
mov
gs
(bad)
loop
pushf
imul
xchg
pop
std
or
mov
inc
sbb
and
sub
add
jb
pop
popa
push
adc
mov
mov
jge
mov
xchg
aam
ins
ins
imul
aas
int3
push
and
imul
adc
or
push
cli
push
and
or
mov
pop
add
loop
sbb
cmp
nop
ja
repz
jae
sub
ja
mov
gs
frstor
cmc
nop
cmp
imul
pop
mov
mov
retf
push
aaa
mov
inc
(bad)
ja
fadd
pusha
popa
jo
pop
sub
add
pop
ins
jae
mov
mov
sbb
imul
push
sub
js
ret
ss
(bad)
mov
lds
sbb
das
jne
test
int
pop
pushf
call
mov
or
push
push
cmp
sub
push
inc
push
adc
les
retf
inc
loopne
sub
pusha
or
pop
(bad)
adc
shl
jne
mov
jge
cmp
mov
push
mov
fmul
mov
pop
aas
jo
aaa
movs
enter
xchg
outs
and
ret
adc
adc
outs
retf
int3
shl
mov
and
sbb
dec
dec
popa
popa
arpl
cmp
out
aaa
jecxz
push
das
mov
add
push
add
arpl
sbb
xor
into
sbb
aaa
and
and
add
pop
cmp
pop
adc
inc
xchg
sub
push
add
push
push
and
and
fs
fadd
push
pop
sbb
sub
popa
stos
sbb
or
inc
cmps
addr16
(bad)
rol
inc
and
mov
sbb
sub
movs
js
jmp
je
jge
jbe
inc
adc
push
sbb
popa
adc
jae
or
test
mov
push
sub
push
sub
dec
xchg
sbb
mov
xor
retf
and
push
adc
inc
add
gs
imul
outs
fs
sub
mov
add
inc
js
adc
or
pusha
daa
dec
inc
xor
jle
sub
adc
adc
xor
inc
xchg
add
dec
inc
xor
xor
or
cmp
cmp
cmp
outs
clc
sub
jb
xor
add
jno
and
push
and
rol
dec
pop
inc
sbb
jl
xchg
daa
arpl
inc
add
push
inc
dec
inc
(bad)
mov
add
adc
xor
inc
jb
add
mov
in
les
shl
popa
ins
or
rol
sub
push
ja
int3
inc
jae
data16
dec
rol
push
add
jb
adc
popa
sbb
ins
or
or
jbe
(bad)
sar
push
push
ficomp
gs
scas
mov
xor
je
mov
not
xor
sub
xor
sub
pop
ret
sbb
inc
xor
push
mov
push
add
xor
xor
aas
xor
pop
xor
xor
jae
pop
ret
cmp
xor
mov
inc
jbe
xor
mov
outs
addr16
jb
pop
popa
add
sbb
push
pop
dec
gs
call
sub
jbe
add
lds
push
cmp
and
cmp
jae
outs
and
(bad)
xor
ss
pop
pusha
mov
sub
fs
sbb
mul
je
sub
add
arpl
and
jb
gs
inc
cwde
call
dec
and
mov
push
inc
inc
sub
inc
out
movhps
gs
ins
aaa
gs
dec
dec
sub
mov
push
ins
dec
push
sbb
sbb
and
mov
mov
dec
ud2
push
inc
outs
ins
add
mov
ins
repnz
outs
fs
das
pushf
sbb
hlt
jbe
fs
pop
pop
mov
cmp
shr
or
add
add
ins
popa
imul
outs
je
xor
push
ror
adc
mov
arpl
inc
pop
jmp
push
bound
inc
ins
imul
repnz
push
in
add
sub
adc
sbb
adc
dec
add
push
sbb
and
outs
popa
test
adc
adc
and
cmp
cmc
neg
add
dec
inc
pop
jb
outs
fcom
lods
stos
aas
push
call
inc
add
xor
sub
inc
psrlq
stos
stos
addr16
(bad)
setge
and
or
jmp
mov
ss
push
jg
into
std
pop
push
sub
dec
inc
pop
and
icebp
cmp
sub
mov
int3
inc
inc
out
mov
ins
fs
neg
add
and
push
inc
jg
jecxz
neg
popa
jae
xor
sbb
or
add
inc
inc
push
push
icebp
in
or
pop
stc
pop
mov
mov
std
pop
add
loop
mov
add
outs
inc
lock
add
out
vpperm
adc
sub
pop
daa
xlat
idiv
add
pusha
push
sbb
xchg
pop
push
jae
aam
aas
imul
jne
mov
add
imul
inc
lock
movnti
sbb
or
or
arpl
mov
fiadd
pop
dec
dec
inc
punpckldq
(bad)
icebp
test
inc
inc
add
xor
pop
add
cvttps2pi
sub
rol
and
and
lds
pop
xor
add
pop
lds
out
cmp
xchg
and
sub
adc
jae
push
adc
sub
inc
xor
mul
mov
dec
or
sahf
retf
jb
add
push
mov
sbb
push
or
int
push
push
push
ins
leave
push
add
sbb
add
push
jne
test
jbe
xor
push
shl
xor
std
and
not
jb
outs
fs
or
adc
xchg
adc
pop
push
loopne
es
and
inc
js
xchg
xchg
push
int3
sbb
pop
push
(bad)
and
and
inc
je
js
add
adc
rcl
dec
outs
jae
js
fnstenv
push
add
mov
or
sub
push
push
dec
mov
or
popf
sbb
daa
push
jae
cmp
cmp
hlt
lock
push
adc
inc
popa
femms
int
cld
and
gs
push
add
push
int3
daa
adc
dec
gs
xchg
add
mov
mov
das
sbb
mov
in
outs
jae
sub
gs
mov
or
add
sub
mov
in
xlat
sub
lds
inc
fisttp
pop
cmps
outs
fcom
dec
inc
inc
movs
out
and
and
call
rol
mov
jnp
sub
xor
inc
jb
push
add
and
pop
sub
addr16
comiss
add
adc
out
sbb
sub
cmc
or
or
out
inc
add
cmps
push
add
test
push
jmp
mov
inc
popa
inc
xchg
xor
and
sub
push
and
outs
xor
add
cli
outs
pop
je
mov
cdq
sub
sbb
jae
jb
cs
or
pop
and
jecxz
push
js
inc
mov
xchg
jne
inc
aas
sub
jne
gs
pop
sar
arpl
ins
stos
gs
jno
outs
out
add
clc
jne
je
jb
cmp
adc
mov
add
or
es
in
inc
sbb
fsub
in
(bad)
ret
jo
ja
fidivr
fs
je
dec
inc
inc
cmp
test
or
sbb
jo
mov
inc
test
das
pop
mov
popa
xchg
sbb
js
mov
xchg
aas
sbb
adc
dec
add
or
dec
addr16
(bad)
pop
and
push
inc
pminsw
inc
jnp
push
mov
punpckldq
(bad)
(bad)
and
mul
pop
dec
or
out
int3
mov
or
pop
or
(bad)
cmp
pop
mov
or
arpl
mov
and
fimul
inc
inc
pop
mov
pop
add
dec
inc
sub
push
pop
test
js
aaa
or
mov
test
mov
fwait
push
je
fs
mov
stos
dec
adc
inc
mov
shl
daa
push
pop
int3
or
cmp
push
jno
cdq
popa
jg
sub
sbb
and
fst
and
cmps
jbe
jae
cmp
jb
jbe
stos
pop
jl
fstp
push
push
add
addr16
adc
shl
or
adc
outs
test
xchg
es
pop
xor
pop
sub
xor
pusha
mov
iret
pop
loopne
pop
xchg
into
pop
js
leave
pop
loopne
fwait
adc
and
int3
add
and
jo
arpl
jae
inc
add
fcomi
pop
mov
xlat
sbb
frstor
xor
add
xor
xchg
cmc
mov
arpl
and
arpl
mov
mov
pop
(bad)
fild
xor
addr16
add
jne
fs
add
imul
sub
inc
mov
sbb
sbb
jnp
inc
cs
dec
add
sub
sbb
lock
jg
jmp
add
daa
adc
sub
push
(bad)
addr16
add
call
or
ret
cmp
push
dec
dec
ret
inc
test
push
repz
push
add
mov
bound
mov
jg
frstor
inc
les
and
imul
ficomp
jae
xor
shr
popa
stc
cmp
lds
test
dec
inc
out
cmp
sti
in
or
fiadd
test
pop
dec
or
or
adc
in
dec
add
dec
dec
add
test
xor
sbb
dec
call
adc
adc
add
adc
imul
and
dec
pop
les
adc
jo
clc
mov
or
aaa
mov
dec
retf
sbb
je
nop
pop
add
pop
sti
inc
ds
jnp
xchg
dec
sbb
push
add
xchg
mov
enter
stos
jle
dec
lds
dec
mov
mov
js
fwait
push
ja
outs
push
into
adc
ret
dec
(bad)
cmps
pusha
push
or
adc
or
movs
mov
adc
xor
arpl
jecxz
jg
mov
fs
or
cmp
push
outs
jg
sub
dec
add
out
dec
and
and
xlat
jo
xchg
mov
inc
nop
sti
ja
xor
cmp
inc
rcl
pop
(bad)
xchg
lds
scas
dec
pop
into
pop
add
sub
add
out
cmp
push
lahf
xor
mov
maskmovq
test
adc
pop
push
inc
je
xchg
add
jbe
retf
cmc
aas
and
pop
xor
jo
outs
pop
inc
out
fwait
cmp
cmp
xchg
sub
ud0
sbb
dec
push
std
retw
adc
(bad)
(bad)
jg
lock
jnp
fwait
sbb
sbb
xor
adc
inc
icebp
pop
dec
dec
dec
pop
push
inc
push
(bad)
xchg
arpl
loopne
cmp
push
arpl
aas
push
inc
add
cmp
dec
push
inc
dec
dec
inc
ds
xor
cmps
mov
jmp
inc
das
fs
push
xchg
sub
and
aad
cmps
imul
dec
dec
add
jge
add
xor
cdq
aad
cld
sar
idiv
fadd
lahf
mov
xchg
mov
aas
fmul
mov
repz
sub
dec
dec
add
(bad)
mov
xchg
push
sbb
push
jae
cmp
jae
and
ja
mov
add
dec
dec
add
(bad)
aas
add
dec
add
dec
dec
add
sahf
mov
sub
push
xchg
int3
addr16
cmp
test
mov
push
add
rol
add
and
inc
dec
push
inc
aas
fdivrp
(bad)
mov
cs
lahf
ror
cdq
pop
adc
rcr
(bad)
mov
cdq
out
mov
sub
clc
inc
dec
add
(bad)
fisttp
pushf
pinsrw
xor
mov
test
(bad)
push
sub
add
and
add
repnz
shl
out
(bad)
cmp
shl
pusha
clc
xor
jge
sub
mov
inc
dec
add
mov
psubsb
add
cmp
lahf
retf
call
aas
in
dec
add
nop
iret
aas
inc
jge
je
(bad)
(bad)
xor
mov
test
xor
inc
mov
fs
and
les
jg
jmp
add
push
js
adc
jle
loopne
dec
add
mov
dec
add
sar
jle
dec
(bad)
cmc
or
mov
push
sub
call
aas
sub
or
call
test
mov
imul
ja
lahf
in
push
mov
rcr
cmp
mov
add
cmp
add
mov
mov
add
or
inc
jae
dec
shl
ss
jo
dec
add
add
jne
repz
mov
add
mov
xchg
cmp
xor
out
mov
aas
jo
mov
sub
cmp
jge
jnp
sar
mov
in
jge
add
pop
test
pop
sub
(bad)
jmp
mov
push
int
sub
(bad)
xchg
out
xchg
pop
push
cmp
std
div
clc
xor
fdivr
dec
add
ret
cld
cmp
sub
sub
fistp
in
(bad)
mov
mov
loopne
or
xor
jne
movs
add
and
jge
in
ins
aas
hlt
aaa
dec
add
rol
jnp
jmp
add
test
out
in
rcl
pop
sub
pop
jl
inc
add
div
fmul
fdiv
push
or
popa
mov
or
shl
cwde
movq
sahf
sti
cmp
xor
clc
call
pop
adc
movntps
out
ret
sub
xor
movsx
enter
add
sar
or
sub
out
stos
xchg
mov
shl
mov
sbb
sub
ret
arpl
xor
xchg
movups
sti
adc
icebp
out
hlt
xchg
je
popa
aas
sbb
add
sbb
stc
dec
add
hlt
jb
(bad)
std
aas
cwde
pop
shr
cmp
dec
add
dec
shl
sub
xor
jg
fsub
cld
xor
aas
xor
ja
jecxz
pop
mov
nop
ins
mov
aas
je
minps
sbb
dec
add
enter
jo
mov
add
and
mov
frstor
fxch
mov
cs
aas
adc
in
dec
sar
pusha
aas
idiv
(bad)
out
cmp
test
pop
(bad)
pop
xchg
ins
fist
add
push
stc
shl
xchg
mov
out
sbb
and
sub
sbb
jge
mov
lds
sub
hlt
sub
add
add
and
pusha
imul
into
sbb
add
mov
sub
mov
and
aas
enter
pusha
sub
fmul
clc
sub
mov
push
out
mov
or
add
popa
(bad)
clc
sub
daa
add
pcmpeqb
lahf
out
mov
push
jg
inc
cmp
dec
and
ret
aas
test
stc
cdq
outs
mov
sub
test
mov
pop
imul
pushf
fisttp
les
sub
mul
(bad)
xor
mov
pop
sub
es
add
imul
add
ja
(bad)
push
sub
aad
sub
mov
pop
stc
int3
aaa
pop
pop
add
mov
xchg
movs
sbb
sub
and
imul
sbb
test
add
cdq
ja
(bad)
push
lahf
jns
cmp
dec
inc
bound
or
adc
iret
mov
dec
add
add
and
add
jle
ret
add
sub
pop
imul
mov
dec
add
sbb
mov
push
cmp
xor
add
lds
jg
and
aas
cmp
fmul
mov
add
add
dec
add
sbb
jl
sti
scas
movs
das
aas
rol
push
aas
lods
sub
scas
add
sub
sbb
add
push
or
xor
or
loop
std
aas
jl
push
in
fbstp
clc
sbb
int3
aas
cld
not
icebp
fstp
icebp
push
mov
xlat
sbb
dec
sbb
pop
idiv
cli
sub
rcl
shl
add
push
dec
add
fistp
cmovle
retf
stos
fwait
scas
sti
(bad)
push
das
daa
call
add
adc
sub
jo
test
sti
leave
jle
dec
invd
jno
das
out
and
mov
aas
jmp
pop
loopne
ret
add
pusha
pop
cmps
inc
sub
loopne
push
sub
nop
test
scas
js
pop
adc
fsub
dec
add
fistp
jmp
sub
pop
rcl
mov
add
lock
or
lods
(bad)
out
enter
call
jno
and
sbb
sti
dec
repz
or
adc
mov
xchg
imul
out
push
and
sub
pop
cmp
mul
daa
jge
aas
loopne
pop
add
mov
push
dec
pop
aam
neg
outs
jg
push
lahf
fnsave
and
mov
das
pusha
add
loopne
dec
outs
mov
enter
cld
jmp
addr16
jge
pop
pop
adc
enter
aaa
and
imul
(bad)
jmp
sub
sub
fmul
rol
cmp
push
test
or
cs
mov
and
mov
pop
mov
pusha
sbb
add
ins
mov
inc
loopne
jae
ret
iret
or
pop
(bad)
clc
push
jg
sbb
cmp
cmp
add
mov
lock
pop
mov
in
mov
mov
add
add
test
cmp
push
jnp
add
adc
push
into
(bad)
call
sub
add
movntps
ins
pop
push
add
sub
add
pop
mov
cmps
jmp
loopne
dec
add
shl
adc
rol
ret
xor
xchg
ret
aam
add
xor
xlat
dec
lds
inc
mov
lods
enter
lock
add
jne
xor
pop
adc
int3
mov
push
cdq
add
add
scas
test
pushf
adc
popf
pop
call
lahf
aam
scas
mov
into
pop
or
iret
pop
call
shl
hlt
shl
aam
call
(bad)
loopne
cmps
jmp
fadd
dec
fstp
fidivr
cmps
jmp
and
fld
push
ficom
lods
shr
call
mov
imul
mov
mov
and
cmps
push
cmps
jmp
imul
imul
call
inc
loopne
loope
lahf
jnp
pop
pop
loop
xchg
jecxz
or
in
cmps
in
xor
out
inc
shl
out
pop
call
push
pop
jmp
pop
jo
out
cld
inc
mov
pop
pushf
or
add
dec
dec
inc
das
mov
arpl
icebp
aaa
add
and
xor
lods
and
xor
xor
inc
fbld
outs
popa
jb
and
aas
adc
mov
outs
je
jae
imul
test
mov
lock
setg
ds
aaa
and
inc
cmp
(bad)
(bad)
push
inc
xor
inc
inc
cmp
xor
xor
inc
inc
inc
aaa
xor
add
xor
add
fstp
push
gs
add
xor
add
cmp
sbb
out
add
inc
(bad)
(bad)
aas
add
inc
xor
cmp
xor
xor
cmp
cmp
inc
add
arpl
add
(bad)
out
xor
cmp
cmp
or
push
jbe
push
xlat
push
leave
inc
cwde
loopne
mov
xor
jmp
mov
inc
inc
inc
cmp
inc
inc
ss
call
sti
inc
inc
inc
aaa
xor
xor
inc
xor
inc
xor
inc
xor
xor
inc
xor
aaa
cmp
inc
inc
inc
inc
inc
xor
cmp
cmp
cwde
xor
aaa
inc
fcom
push
aaa
xor
cmp
xor
add
xor
pusha
sar
xor
xor
(bad)
inc
xor
xor
inc
xor
xor
inc
xor
aaa
ja
std
push
xor
inc
inc
cmp
cmp
inc
or
inc
xor
xor
jmp
cld
xor
xor
cmp
inc
xor
cmp
xor
inc
cmp
inc
cmp
(bad)
(bad)
inc
inc
xor
xor
inc
xor
xor
xor
xor
inc
cmp
inc
(bad)
(bad)
(bad)
push
xor
inc
xor
inc
ss
xor
inc
cmp
inc
inc
inc
inc
inc
inc
xor
xor
(bad)
(bad)
inc
inc
cmp
inc
aaa
inc
inc
xor
cmp
xor
cmp
inc
xor
ss
(bad)
sti
(bad)
xor
xor
xor
aaa
inc
cmp
daa
xor
push
inc
xor
cmp
xor
test
inc
inc
xor
xor
mov
push
inc
inc
inc
xor
xor
inc
xor
inc
aaa
inc
xor
ss
push
inc
xor
cmp
inc
xor
xor
inc
xor
aaa
xor
ss
jne
call
adc
mov
inc
xor
xor
inc
cmp
xor
sbb
inc
inc
inc
xor
inc
xor
lds
jo
fdiv
aaa
(bad)
xchg
inc
inc
cmp
ins
int3
xor
daa
lds
inc
xor
xor
inc
aaa
xor
inc
xor
mov
(bad)
xor
xor
xor
pushf
sub
(bad)
out
inc
xor
inc
inc
ss
inc
inc
inc
xor
inc
pop
inc
(bad)
(bad)
out
leave
xor
xor
ss
inc
xor
inc
xor
xor
inc
xor
mov
mov
inc
inc
inc
xlat
xor
cmp
xor
inc
xor
xor
inc
hlt
inc
test
inc
xor
xor
inc
xor
ss
inc
cmp
add
or
bound
or
pop
sub
popa
add
(bad)
xor
cmp
out
add
xor
xor
inc
aaa
xor
sbb
inc
cmp
xor
inc
cmp
inc
xor
test
inc
inc
xor
(bad)
(bad)
push
xor
inc
xor
inc
xor
inc
inc
xor
cmp
inc
cmp
cmp
xor
inc
ss
xor
inc
clc
push
xor
inc
inc
inc
inc
xor
xlat
aaa
inc
xor
imul
push
mov
inc
xor
xor
xor
ds
out
jg
inc
inc
aaa
xor
xor
inc
xor
inc
xor
inc
inc
xor
inc
fdivp
xor
inc
inc
mov
aaa
inc
inc
mov
inc
inc
inc
inc
cmp
inc
cmp
dec
inc
cmp
inc
inc
inc
xor
xor
out
jmp
in
inc
inc
inc
inc
xor
xor
cld
arpl
inc
xor
xor
xor
xor
fcomip
sbb
inc
inc
scas
inc
inc
xor
inc
xor
inc
aaa
inc
aaa
cmp
jo
clc
inc
xor
inc
inc
xor
ss
xor
inc
sub
xor
mov
inc
xor
xor
inc
xor
xor
inc
call
shl
inc
fild
xor
inc
imul
(bad)
mov
xor
inc
xor
inc
xor
inc
xor
fbstp
(bad)
xor
xor
xor
cmp
xor
cmp
cld
pop
or
pop
inc
xor
inc
xor
inc
xor
ss
xor
inc
inc
xor
cmp
inc
mov
sbb
inc
xor
xor
xor
(bad)
call
(bad)
pop
xor
aaa
cmp
inc
xor
aaa
xor
inc
xor
inc
push
aam
cmps
ss
inc
xor
mov
and
or
cmp
add
in
xor
(bad)
jge
cmp
inc
inc
lahf
inc
or
inc
inc
je
aaa
shr
cmp
call
ins
clc
fild
xor
inc
aaa
aaa
xor
inc
aaa
dec
cmp
jbe
xor
sar
xchg
add
xor
xor
sar
xor
mov
cmp
xor
sbb
jg
cmp
xor
xor
inc
xor
inc
sbb
ja
xor
xor
xor
loopne
mov
push
xor
xor
inc
push
add
ins
aam
mov
aaa
xor
inc
xor
cwde
aaa
cmp
inc
mov
ss
xor
ja
pop
mov
inc
inc
mov
xor
push
inc
ss
mov
inc
cmp
inc
cmp
inc
xchg
xor
jo
push
shl
cmp
xor
add
out
pop
in
sbb
xor
cmp
xor
xor
imul
inc
inc
call
ss
jle
arpl
xor
inc
inc
inc
ins
cmp
mov
xor
cmp
cmp
aaa
xor
adc
and
cmp
and
or
pop
add
call
aaa
xor
ss
inc
cmp
xor
cmp
xor
cs
xor
add
jb
and
mov
inc
xor
sub
dec
xor
xor
test
pop
sbb
scas
xorps
pop
sbb
xor
mov
xor
xor
pop
pop
cwde
add
call
xor
xor
je
out
ins
cmp
cmps
add
stc
inc
dec
fcomip
mov
mov
aaa
ss
xor
xor
inc
adc
xor
xor
inc
xor
fidiv
xor
xor
cmp
sbb
xor
sbb
xor
inc
inc
xor
cmc
or
(bad)
cmp
pusha
shl
xor
mov
gs
adc
clc
frstor
outs
xor
inc
arpl
xor
inc
xor
sti
pop
out
xor
xor
inc
xor
xor
cmp
lds
loopne
mov
xor
inc
xor
inc
aaa
ins
rol
cli
mov
inc
xor
cmp
aaa
(bad)
ffreep
sbb
inc
cmp
mov
inc
xor
ret
inc
mov
cdq
clc
cmps
push
cmp
xor
inc
xor
test
movs
sbb
imul
cmp
adc
xor
out
xor
aaa
xor
cmp
ja
push
cmp
xor
cmc
cmp
cmp
outs
xchg
add
adc
mov
xor
fsubp
push
jb
inc
inc
inc
xor
es
xor
cmp
xor
xchg
sub
xor
imul
inc
inc
aaa
xchg
jae
adc
cmp
ss
jns
inc
aaa
mov
pop
xor
xor
cmp
inc
inc
or
in
cmp
xor
hlt
sbb
xor
xor
inc
cmp
xchg
sub
fwait
mov
inc
inc
inc
(bad)
fisttp
inc
cmp
out
rol
add
xor
cmp
inc
inc
xor
jg
cmp
xchg
cmps
xchg
inc
push
inc
inc
inc
xor
inc
push
out
jmp
xor
mov
inc
adc
mov
ja
xchg
(bad)
mov
dec
xor
nop
add
pusha
cmp
xor
xor
inc
cmp
xor
or
nop
shl
cmp
lock
cmp
xor
xor
inc
mov
add
mov
xchg
xor
inc
aaa
cmp
loope
(bad)
cmp
out
xor
jbe
jb
xor
cmp
mov
xor
test
jecxz
xor
sbb
inc
jg
add
or
fwait
mov
int3
inc
xor
or
fisttp
inc
xor
test
into
inc
loop
cmp
inc
xor
inc
inc
cmps
fimul
pop
inc
xor
cmp
sbb
xor
pop
dec
loopne
push
mov
cmp
aaa
sti
sbb
ret
inc
aaa
cmp
ss
xor
lods
mov
add
xor
xor
inc
inc
inc
jecxz
cmp
push
xor
mov
sbb
inc
cli
inc
xor
sbb
jl
xor
adc
aaa
inc
or
mov
mov
or
push
sbb
and
sahf
inc
sbb
inc
cmp
mov
aam
xor
xor
aaa
lock
mov
aaa
imul
jecxz
pop
xor
call
push
ss
pop
cwde
jae
sar
je
jmp
sub
shl
add
inc
ss
mov
xor
inc
inc
inc
inc
pop
cmp
jg
xor
cmps
sbb
dec
inc
xor
ret
inc
inc
outs
inc
aaa
xchg
inc
aaa
push
ja
pop
push
xchg
mov
inc
xor
lock
inc
xor
cmp
xor
xor
inc
cmp
xor
cmp
inc
pop
loop
dec
mov
xor
mov
xor
paddd
xchg
aas
xor
popf
out
mov
inc
mov
cmp
xchg
xor
xor
xor
cmp
sbb
xor
aaa
inc
cmp
mov
xor
aaa
aaa
cli
call
loop
cmp
xor
fwait
aaa
xor
xor
mov
xor
ja
rcr
cmp
ss
aaa
iret
xor
and
arpl
mov
mov
add
sub
inc
xor
inc
inc
inc
aas
xor
cmp
dec
push
ret
dec
mov
aam
ja
ja
and
mov
xor
xor
loop
xor
inc
ss
xchg
xor
xor
inc
cmp
xor
and
mov
push
xor
cmp
inc
inc
cmp
mov
inc
xchg
ss
xor
xor
inc
inc
popa
bound
sahf
xor
cmp
sbb
xor
xor
ja
jb
aas
aaa
les
out
cs
xor
retf
inc
inc
xor
cmp
inc
(bad)
jmp
test
pusha
loop
inc
sub
xor
dec
xor
ja
gs
inc
xor
xor
xor
mov
ss
cmp
xor
push
push
xlat
sbb
jp
cmp
mov
push
inc
inc
mov
pusha
sub
lea
test
pop
sub
add
xlat
xor
inc
cmp
inc
cmp
inc
mov
gs
cmp
inc
sti
movs
cmp
rcl
es
ret
push
adc
mov
inc
dec
jbe
aad
aaa
cmp
xor
xchg
xor
cmps
js
aaa
cmp
inc
rol
std
xor
cli
inc
inc
xor
ss
(bad)
cmp
inc
inc
inc
inc
sub
sbb
movs
scas
scas
pop
sbb
and
xor
inc
jp
inc
xor
call
inc
jbe
jbe
aad
push
xor
jle
xchg
xor
loopne
push
cmps
repnz
mov
cwde
mov
xor
or
xchg
rcr
mov
mov
pop
xlat
inc
xor
out
inc
inc
ss
test
or
mov
hlt
into
jne
xor
mov
xor
lds
aad
stos
xor
inc
inc
imul
inc
inc
mov
aaa
inc
xor
jg
daa
xor
outs
cli
outs
loopne
xor
xor
xor
cmp
inc
inc
cmp
inc
aaa
xor
mov
xor
cmp
xchg
cmp
pusha
cli
sbb
jo
xor
inc
inc
cmp
sar
fnstcw
cmp
inc
inc
cmp
xor
jle
inc
cmp
shr
mov
xor
inc
or
xor
xor
add
cmp
aaa
mov
aaa
in
or
inc
pop
jno
mov
cld
inc
xor
inc
inc
add
mov
pop
ins
adc
xor
inc
fwait
jmp
lods
xor
xor
aad
jle
xor
mov
inc
xor
inc
inc
inc
xor
cli
inc
adc
cmp
cmp
inc
aaa
inc
cmps
outs
cli
cmp
xor
inc
inc
xor
inc
inc
inc
cmp
js
cmp
xchg
loopne
inc
cmp
dec
fstp
cmp
jne
sbb
cld
inc
inc
inc
inc
xor
mov
inc
fiadd
mov
inc
pushf
xor
inc
xor
enter
jmp
pushf
in
xor
mov
aaa
in
cmp
retf
inc
shl
cwde
xor
scas
sar
iret
jg
dec
mov
xor
pop
rol
add
sub
(bad)
mov
das
inc
cmp
xor
inc
cmp
mov
ss
xor
xor
mov
xor
les
jg
xor
test
add
cmp
cmp
in
xor
cli
xor
inc
xor
cmp
cdq
ss
shl
cmp
cmp
inc
aaa
inc
xor
or
cld
inc
inc
xor
adc
push
dec
sbb
xor
ss
mov
(bad)
cmp
icebp
ja
cmp
xor
inc
sahf
inc
xor
xor
inc
out
ret
aaa
inc
mov
fcom
cmp
pop
sar
es
xor
ss
xor
ss
ss
sbb
add
outs
adc
xchg
cli
fadd
sbb
xor
xor
fcmovbe
ja
nop
xor
inc
xor
inc
xor
push
mov
inc
aaa
ss
inc
add
inc
xor
add
mov
cmp
xor
xor
jp
jle
ins
inc
hlt
loopne
cli
mov
xor
inc
rol
cmp
scas
(bad)
push
dec
cmp
inc
inc
xor
cmp
aaa
std
fist
inc
xor
xor
inc
ss
xor
inc
inc
xor
scas
sbb
xor
inc
inc
xor
inc
inc
inc
ficom
cdq
jmp
je
xchg
cmp
inc
inc
stos
xor
aaa
mov
xor
inc
cmp
mov
xor
imul
lods
repnz
outs
scas
jo
sbb
push
cmc
call
xor
xor
inc
inc
inc
cmp
xor
xor
mov
cmp
sub
cmp
ret
xchg
inc
and
sbb
cmp
ds
cmp
xor
mov
xor
in
ja
mov
xor
fwait
inc
inc
inc
or
inc
xor
call
mov
jne
cmp
inc
xor
inc
inc
inc
add
xor
mov
xor
xor
dec
sbb
cmc
push
xor
inc
xor
inc
int3
cmp
out
mov
inc
xor
add
sbb
jbe
xor
inc
aaa
cmp
loop
loop
cmp
les
ds
inc
xor
cmp
lods
xor
xor
dec
mov
inc
sbb
xor
sbb
pusha
sbb
mov
sbb
repnz
aam
inc
inc
cmp
sub
ss
in
dec
inc
pop
push
cld
inc
xor
xor
cmp
mov
xor
inc
in
fisttp
xor
dec
inc
xor
or
fdivr
or
inc
inc
xor
inc
xor
dec
xchg
adc
ja
dec
push
rol
or
sbb
jg
pusha
xor
xor
cmp
xor
inc
inc
popf
inc
inc
out
jp
rol
xor
inc
inc
push
xor
inc
xor
cmp
inc
inc
xor
cmp
sub
inc
xor
inc
inc
xor
mov
stos
aaa
inc
cmp
cmp
add
dec
loopne
nop
and
inc
xor
clc
or
jb
scas
inc
cmp
xor
xor
xor
add
ss
cld
xor
xor
jo
fdivr
xor
es
xor
cmp
out
enter
xor
xor
add
ficom
xor
cmp
xor
sbb
xor
add
leave
mov
enter
enter
adc
sbb
push
xor
sar
or
aaa
xor
mov
stc
inc
aaa
inc
inc
cmp
xor
shl
neg
ss
cmp
cmp
cmp
inc
inc
xor
cmp
jno
add
inc
xor
jo
clc
sbb
add
inc
inc
aaa
xor
cmp
mov
inc
pop
cmp
adc
cmp
xor
xor
inc
stos
lock
cli
inc
xor
cmps
xor
gs
xor
cmp
in
call
ret
nop
retf
je
xor
out
test
jmp
xor
xor
inc
xor
xor
xor
das
xchg
jmp
inc
cwde
xor
add
xor
stos
or
mov
pop
or
push
ret
or
inc
pop
cmp
inc
lahf
aaa
ffree
rcpps
inc
inc
inc
lock
fild
inc
xor
xor
mov
je
push
sbb
idiv
inc
test
cld
jmp
dec
icebp
in
xor
cmp
inc
inc
inc
xor
inc
cmp
repz
inc
xor
out
out
rol
sbb
push
pop
inc
mov
xor
rcr
push
xchg
inc
mov
mov
adc
xor
loopne
ja
pusha
inc
ret
push
out
or
cmp
mov
inc
inc
xor
jmp
xor
out
xor
iret
fild
inc
into
inc
das
aaa
jae
inc
inc
xor
xor
inc
sub
aaa
cmp
fs
sbb
pop
lods
and
das
push
inc
popa
sub
inc
inc
(bad)
sbb
and
push
cmps
cli
mov
or
inc
xor
cmp
xor
dec
inc
(bad)
fiadd
xor
cmp
xor
xor
inc
xor
cmp
push
mov
xor
xor
inc
inc
cmp
pop
xor
mov
xor
inc
xor
inc
push
inc
fdivp
mov
rol
cmp
xor
inc
xor
xor
xor
inc
inc
inc
xor
cld
sbb
xor
aaa
cmp
xor
aaa
add
sub
lods
inc
aaa
inc
inc
add
sbb
xor
cmp
xor
xor
xor
inc
dec
aaa
scas
lock
mov
cmp
xor
inc
push
add
xor
xor
inc
cmp
aad
inc
add
xor
xor
cs
test
fs
inc
(bad)
xor
push
xlat
xor
xor
or
inc
inc
xor
xor
inc
inc
inc
outs
bound
and
adc
inc
inc
cmp
cmp
(bad)
inc
inc
inc
add
xor
xor
cmp
adc
ror
inc
and
jb
(bad)
es
inc
xor
inc
xor
fsubr
or
aaa
inc
xor
xor
add
ja
ss
inc
or
inc
xor
ja
loope
inc
add
xor
inc
inc
ss
pop
jg
xor
inc
push
aaa
cmp
ins
inc
xor
ss
xor
xchg
inc
cmp
aaa
pusha
cmp
call
xor
mov
xor
icebp
outs
loopne
inc
xor
xor
xor
inc
xor
imul
icebp
xor
cmp
and
out
mov
inc
lods
imul
popf
or
xor
fdiv
cmp
inc
inc
inc
lods
or
inc
xor
xor
xor
xor
sbb
aaa
xor
imul
inc
cmps
xor
xor
mov
cmp
cmp
xor
pop
in
mov
xchg
pop
out
mov
jnp
inc
xor
xchg
add
cmp
adc
xor
aaa
inc
inc
ss
ss
xor
fbstp
aaa
adc
inc
add
inc
inc
xor
push
sbb
ffreep
cmp
xor
inc
inc
xor
lock
xor
xor
xor
adc
outs
or
out
add
ret
xor
ins
add
scas
adc
daa
inc
xor
xor
inc
xor
inc
(bad)
jg
inc
xor
inc
dec
xor
inc
inc
xor
inc
cmp
inc
cmp
(bad)
mov
inc
inc
repz
mov
inc
xor
cmp
xor
inc
inc
shl
inc
xor
or
hlt
jp
xor
inc
adc
fwait
dec
xor
xor
inc
xor
ret
ja
ss
xor
inc
xor
pop
scas
and
or
inc
jno
or
jg
mov
xor
jecxz
inc
aam
(bad)
mov
aaa
xor
xor
xor
inc
inc
add
pop
xor
je
xor
xor
inc
cmp
out
stos
cmp
aaa
inc
pop
(bad)
xor
cmp
dec
hlt
(bad)
fild
inc
xor
xor
xor
xor
xor
add
(bad)
clc
xor
xor
xor
(bad)
test
test
xor
or
inc
cmp
xor
rcl
add
enter
push
cdq
dec
fsubr
aaa
inc
mov
aaa
icebp
dec
jg
ss
ss
inc
xor
fwait
jmp
ss
les
es
adc
pop
cmps
ss
cmps
pop
sub
aaa
jge
xor
inc
xor
xor
ins
loope
xchg
sub
cmp
cmp
call
rcl
cmp
xor
pop
ins
retf
xor
daa
inc
inc
and
aaa
lock
xor
cmp
inc
xor
cmp
inc
inc
inc
inc
cmp
inc
xor
xchg
in
fdivr
pop
xor
inc
cmp
inc
inc
cmp
cmp
push
inc
xor
and
or
xor
std
outs
jb
mov
xor
cmp
xor
mov
sub
xor
xor
mov
jmp
or
pop
xor
dec
es
jo
stos
adc
aaa
mov
xchg
xor
xor
or
xor
xor
fwait
out
pop
mov
mov
test
cmp
inc
xor
inc
xor
fnsave
je
aaa
inc
sbb
sahf
cmp
cmp
or
fst
push
push
xor
ss
xor
aaa
outs
xor
xor
pop
xor
aaa
cmp
cmp
cmp
xor
inc
cmp
xor
cmp
inc
xor
fisttp
xor
ss
inc
xor
cmp
cmp
xor
xor
clc
or
mov
mov
inc
xor
inc
mov
dec
mov
add
fwait
clc
inc
in
fstp
jp
ss
cmp
xor
inc
xor
jo
rol
push
jecxz
xchg
call
xor
xor
xor
fnsave
push
lods
cmp
xor
aaa
xor
sbb
mov
xor
aaa
sbb
mov
add
xor
inc
xor
data16
inc
cmp
xor
retf
cmp
jle
scas
scas
or
xor
retf
out
scas
add
cmp
add
sar
sub
xchg
jg
pop
lock
ret
xor
scas
jle
add
xor
fbstp
inc
xor
ss
xor
xchg
mov
inc
xor
cmp
sbb
mov
inc
cmp
inc
inc
inc
cmp
icebp
nop
jb
sbb
out
mov
inc
inc
xor
inc
rol
ja
cdq
scas
jp
push
cmp
mov
outs
mov
inc
inc
xor
inc
mov
ss
cmp
or
aaa
xor
pop
adc
inc
ss
popa
xor
inc
xor
inc
hlt
mov
xor
inc
xor
inc
cmp
xor
cmp
lock
aaa
inc
mov
add
pop
adc
push
mov
das
inc
add
xchg
sub
inc
xor
xor
inc
xor
xor
push
push
ss
inc
inc
xor
xor
rcl
inc
xor
mov
inc
aaa
inc
aaa
and
std
es
cmp
inc
inc
inc
cmp
ss
xor
std
movs
fiadd
inc
inc
inc
ss
xor
aaa
xor
push
xor
movs
xor
xor
cmp
fist
xor
xor
hlt
pusha
push
push
ss
inc
xor
ss
add
add
stos
inc
mov
sbb
xor
and
mov
mov
inc
xor
xor
sbb
inc
cmp
mov
fs
xor
(bad)
mov
sbb
xor
xor
rcr
fcmovbe
xor
stos
inc
inc
ins
xor
fist
aaa
inc
xor
xor
jl
xor
cmp
enter
cmc
cmp
inc
inc
xor
xor
xchg
adc
sbb
aaa
inc
adc
jl
inc
mov
inc
cmp
clc
stos
mov
inc
inc
xor
xor
inc
sahf
and
push
xor
xor
ss
sti
out
fild
inc
xor
and
jbe
inc
ss
xchg
ss
adc
call
movs
cmp
aaa
aaa
aaa
shl
cmp
ror
jb
lahf
aad
nop
push
retf
jmp
inc
aaa
aaa
mov
xor
(bad)
inc
inc
or
xor
xchg
aaa
xor
lods
jmp
sbb
cmp
inc
dec
xor
inc
xchg
xor
xor
jbe
shl
fsubr
jne
aaa
aad
xor
inc
xor
xor
fcomip
pop
adc
inc
inc
ss
arpl
inc
xor
or
xchg
inc
pusha
inc
xor
cmp
mov
ins
jl
cmp
or
jmp
outs
pusha
inc
sbb
inc
push
inc
cmp
xor
inc
mov
jbe
cmp
lock
es
lock
xor
cmc
ja
mov
xor
aaa
inc
inc
xor
cmp
inc
cmp
xor
pop
and
xor
(bad)
movs
jb
pop
rol
fwait
xchg
in
cmp
cmp
aaa
ins
and
cmp
and
inc
xor
(bad)
popf
jmp
xor
mov
inc
xor
ss
pusha
pop
out
jg
xor
xor
inc
inc
and
mov
inc
xor
cmp
xor
movntps
jmp
ins
inc
xor
push
std
inc
inc
fadd
inc
cmp
cld
xor
cmp
xor
xor
in
sub
xor
xor
aaa
inc
cmp
cmp
mov
inc
aaa
cmp
xor
inc
mov
add
mov
add
mov
lds
add
fwait
jp
repnz
inc
xor
aad
aas
(bad)
xor
xor
fwait
inc
xor
push
cmp
jbe
inc
mov
cmp
icebp
fbld
gs
retf
cmp
cmp
inc
inc
xor
cmp
addr16
cmp
add
out
cmp
inc
scas
ss
loope
aaa
xor
cmp
call
loopne
clc
inc
inc
mov
or
aaa
xor
cmp
push
fcomi
je
xor
xor
pop
sbb
xchg
arpl
mov
jo
jo
xor
shl
inc
cmp
in
ret
ja
loope
cmp
int
or
or
cmp
push
mov
xor
xor
inc
xor
fsubr
inc
xor
xor
xor
popf
inc
fdiv
pop
or
mov
inc
xor
call
ins
inc
inc
inc
inc
xor
inc
aaa
cmp
inc
inc
xor
xor
data16
std
cmp
inc
js
sub
out
mov
add
add
push
xor
pushf
data16
jl
xor
inc
cmps
ss
cmp
inc
out
push
out
ret
ss
cmp
inc
inc
mov
outs
xor
and
cmp
jp
mov
xor
dec
in
pop
ins
mov
movs
mov
push
mov
inc
inc
aaa
sbb
shr
xor
push
xor
rol
inc
cmc
fidivr
push
sbb
sti
aaa
xor
inc
js
inc
mov
call
push
sar
call
xor
xor
xor
pop
cwde
arpl
xor
pop
jge
outs
xor
xor
fiadd
xor
daa
push
outs
ds
ja
mov
cmc
cmp
daa
xor
xor
or
mov
ss
aam
aas
std
xor
xor
jmp
inc
lock
pop
into
or
loopne
cmp
ss
xor
xor
xor
inc
xor
inc
xor
mov
and
dec
sbb
add
lahf
fdivr
xor
movs
xor
inc
inc
cmp
mov
aaa
xor
xor
inc
cmp
(bad)
sbb
ss
pop
ss
inc
mov
pop
dec
jge
xor
inc
xor
xor
xor
pop
cmp
xor
aaa
inc
inc
mov
sysexit
cmp
pop
pop
jmp
add
ret
ja
push
xor
push
xchg
mov
add
loop
inc
inc
inc
inc
inc
cmp
xor
xor
outs
out
aaa
jmp
scas
pop
fild
xor
xor
xor
cmp
call
aaa
and
data16
jecxz
inc
inc
xor
sub
(bad)
aas
inc
cmp
inc
xor
xor
xor
xor
pop
in
and
mov
aaa
leave
xor
test
aam
ins
cmp
xor
or
pop
inc
ss
data16
dec
sub
ror
scas
push
pop
add
inc
es
imul
aas
daa
gs
or
pop
xor
xor
outs
ret
mov
fmul
inc
leave
cmp
add
inc
xor
pop
sub
or
pusha
das
cdq
cmps
jg
enter
cmps
jg
push
in
push
cmp
push
cwde
retf
jno
adc
add
xor
cmc
pop
xor
out
xor
ins
sub
cli
inc
inc
cmps
inc
inc
add
sbb
inc
inc
inc
xor
data16
cmp
xor
xor
jg
out
and
xor
loope
popa
xor
bound
sar
(bad)
xor
cmp
xor
bound
cmp
cmp
pop
cmp
arpl
xor
data16
xor
cmps
jg
mov
inc
ss
out
inc
inc
inc
inc
inc
inc
xor
std
inc
xor
xor
xor
call
and
xchg
xor
inc
cmp
repz
cmp
push
fstp
aam
jae
enter
inc
xor
xor
adc
push
inc
inc
stos
shr
mov
add
test
inc
xor
ss
cmp
aaa
inc
cmp
xlat
aaa
xor
cmp
fs
bound
xor
(bad)
(bad)
mov
bound
aaa
xor
cmp
arpl
bound
bound
gs
xor
fcom
jmp
bound
xor
add
pop
xor
cld
inc
xor
xor
inc
xchg
inc
inc
xor
inc
inc
xor
inc
cmp
out
mov
xor
xor
xor
aaa
add
xor
inc
aaa
inc
xor
ja
push
popa
out
inc
jmp
sub
xor
test
rol
push
sbb
mov
arpl
jmp
cmp
or
xor
ss
jbe
aaa
cmp
push
xor
xor
and
popa
cmp
cmp
fs
cld
pop
icebp
inc
inc
xor
inc
xor
inc
idiv
inc
pop
xor
test
out
or
dec
inc
xor
inc
mov
les
daa
pusha
nop
movs
addr16
inc
xor
xor
in
les
xor
cmp
shl
ss
gs
data16
xor
data16
ss
mov
popa
xor
cmp
xor
aaa
fs
push
in
es
out
aam
inc
xor
xor
cmp
mov
xor
xor
mov
mov
sbb
rol
sub
mov
xor
inc
inc
xor
stos
cs
cmp
xor
ss
xor
xor
push
xchg
push
stos
or
adc
das
mov
sbb
rcl
inc
cmp
aaa
rol
aaa
xor
xor
xor
retf
xor
cli
xor
dec
std
arpl
xor
xor
xor
mov
add
cmp
inc
xor
int3
cmp
les
inc
cmp
sub
inc
pop
sar
adc
inc
inc
xor
inc
cmp
xor
sbb
je
xor
inc
inc
hlt
xchg
popw
rcr
aaa
in
or
sub
popa
adc
daa
push
inc
cmp
inc
inc
inc
inc
cmp
inc
sbb
cld
sbb
arpl
xor
cmp
loopne
pop
std
fs
cmp
arpl
data16
xor
ins
data16
in
xor
push
xor
inc
inc
xchg
call
inc
aaa
xor
mov
inc
popa
add
rcl
test
or
jecxz
xor
push
out
pop
xor
xor
xor
inc
xor
out
jmp
cmp
xor
gs
ss
or
xor
hlt
jnp
inc
fist
dec
cmp
inc
ss
inc
iret
inc
inc
lock
inc
aaa
aam
sub
(bad)
mov
inc
inc
xor
xor
cmp
inc
jle
push
pop
dec
repnz
cmp
inc
ss
cwde
dec
mov
bswap
mov
lock
inc
inc
xor
inc
inc
cmp
rol
mov
xor
add
pop
or
stos
ins
jmp
cmp
inc
xor
rcr
push
aad
add
xor
bound
or
clc
jmp
xor
xor
cmp
fs
cmp
or
xor
cmp
cmp
inc
outs
enter
test
into
xor
inc
jg
inc
add
inc
cmp
xor
aaa
cmp
xor
inc
cmp
cmp
loope
inc
inc
xchg
add
inc
pop
push
arpl
cmp
outs
jmp
inc
mov
call
inc
sub
fs
xor
ret
std
dec
pop
xchg
aaa
mov
xor
cmp
(bad)
xor
inc
xor
inc
inc
push
cmp
arpl
mov
mov
inc
xor
movs
xor
xor
xor
call
inc
inc
inc
or
adc
cmp
inc
aaa
sbb
stos
xor
xor
js
sti
fbstp
inc
xor
xor
jmp
jnp
or
inc
dec
mov
(bad)
mov
xor
xor
fbstp
xor
add
pop
aam
(bad)
cmp
xor
xor
xor
xor
aaa
aaa
xor
cs
cmp
cmp
test
xor
xor
cmp
xor
mov
loopne
jmp
xor
cli
scas
jle
jg
cmp
pop
inc
inc
inc
xor
movs
inc
push
sub
pop
inc
lahf
jl
jo
shl
xor
pop
(bad)
inc
inc
inc
inc
inc
ins
cmp
arpl
or
push
ret
add
gs
inc
xor
jmp
fdivp
cmp
mov
js
cmp
xor
call
aaa
ss
in
arpl
bound
xor
call
inc
test
xor
add
inc
xor
xlat
push
inc
xor
inc
xor
inc
xor
sub
sub
xor
aaa
aaa
xor
aaa
inc
cmp
cmp
inc
xor
lds
inc
cmp
cmp
inc
add
jg
aad
mov
xor
xor
ret
ja
out
inc
xor
ss
shl
inc
xor
jg
xor
xor
inc
ss
xor
sbb
mov
pop
and
pusha
and
xor
aaa
movq
sub
pop
inc
(bad)
sub
mov
cmp
pop
fild
sar
aaa
or
inc
xor
xor
inc
xor
cmps
shr
dec
aaa
gs
cmp
arpl
out
loop
fisttp
xor
xor
xor
xor
data16
cmp
in
loopne
shl
arpl
cmp
xor
xor
arpl
mov
inc
inc
cmp
dec
or
xor
inc
inc
xor
int
inc
inc
pusha
inc
call
inc
xor
fidivr
xor
es
push
xor
or
xor
inc
xor
ss
ja
cli
loop
xor
inc
mov
xor
xor
out
inc
xor
outs
inc
cmp
xor
inc
inc
ss
xor
out
or
inc
inc
cwde
cmp
cmp
aaa
loopne
rcl
aaa
inc
push
inc
jge
xor
xor
out
mov
xor
gs
xor
aam
pop
std
jl
popa
xor
cmp
cmp
xor
cmp
(bad)
(bad)
fistp
xor
data16
xor
xor
data16
xor
popa
jg
cwde
ss
and
xchg
je
cmp
cmp
jl
xor
inc
(bad)
xor
loopne
xor
aaa
jge
ret
les
dec
xor
popf
repz
ss
inc
inc
inc
je
or
xor
inc
xor
cmp
or
jbe
inc
aaa
push
inc
cmp
xor
inc
(bad)
loopne
add
fild
and
nop
daa
jg
and
cmp
cmp
inc
xor
jl
pop
inc
inc
inc
xor
xor
inc
(bad)
fwait
jp
retf
aaa
fs
cmp
popa
xor
call
or
arpl
xor
bound
xor
push
lea
cmp
cmp
cmp
arpl
bound
or
(bad)
xor
popa
inc
or
sbb
lock
or
cmp
ss
scas
xor
stos
inc
inc
cmp
xor
cmps
or
xor
inc
inc
inc
inc
xor
inc
cmps
add
mov
addr16
dec
sbb
xor
xor
test
mov
push
aaa
xor
inc
inc
xor
inc
xor
inc
in
cmp
xor
xor
int3
push
rol
lahf
out
int3
sbb
or
xor
add
shr
daa
cmp
pop
mov
push
aas
cmps
sub
adc
xor
add
xor
add
repz
popa
cmp
dec
xor
add
fldenv
ss
ss
fnstsw
cmp
popa
aaa
ss
xor
bound
stos
outs
xchg
ss
jo
adc
ss
jmp
push
inc
cmp
retf
xor
cmp
add
sbb
xor
xor
cld
xor
cmps
outs
xor
cmp
movs
dec
xor
xor
ss
xor
and
sub
xor
add
dec
pusha
hlt
pop
xor
(bad)
cli
out
outs
das
inc
inc
cmp
xor
cmp
inc
cmp
xchg
ss
aaa
xor
xor
fs
aaa
popa
ss
xor
cmp
popa
xor
xor
mov
xor
bound
fs
mov
inc
inc
xor
inc
aaa
inc
xor
aaa
cmp
inc
fist
mov
inc
fild
aaa
xor
sbb
ss
xor
ficom
inc
inc
xor
inc
dec
pop
cmps
inc
cmp
xor
xor
xor
xor
jne
pop
push
xor
xor
xor
cmp
das
push
jae
push
sub
xor
or
mov
xor
inc
xor
inc
cmp
and
ffreep
inc
aaa
out
xor
inc
out
call
test
mov
xor
and
or
xor
xor
jmp
inc
mov
cmp
popa
xor
xor
xor
arpl
popa
xor
bound
arpl
xor
cmc
xor
xor
dec
mov
cmp
aaa
sub
aaa
xor
xor
loopne
cld
ss
aaa
mov
add
cmp
xor
xor
popaw
mov
jbe
jmp
cmp
popa
xor
xor
xor
bound
inc
xchg
cmp
fs
add
inc
cmp
outs
loop
cmp
aaa
xor
inc
inc
cmp
(bad)
push
div
inc
inc
inc
pop
jp
xor
inc
or
sbb
xor
pop
jge
enter
xor
xor
xor
sbb
add
aaa
inc
inc
inc
push
ret
dec
scas
(bad)
inc
xor
inc
xor
inc
cmp
xor
ss
ss
(bad)
mov
cmp
adc
gs
inc
jo
add
xor
cmp
fcmove
inc
inc
and
pop
inc
cmp
cmp
xor
pop
(bad)
fnsave
inc
mov
xor
xor
inc
stos
inc
xor
hlt
(bad)
jg
cmp
xor
cmp
xor
xor
aaa
inc
cmp
aaa
inc
push
(bad)
xchg
retf
pusha
imul
inc
push
inc
inc
cmp
xor
inc
xor
xor
xor
xor
inc
xor
cmp
and
fmul
mov
cmp
pusha
mov
xchg
push
push
sbb
push
xor
adc
adc
ret
inc
aaa
xor
jle
sbb
inc
inc
inc
xor
cmp
sub
push
inc
and
ss
out
xor
mov
sahf
add
pushf
fs
cmp
xor
pop
cdq
add
bound
xor
cmps
jg
sbb
data16
bound
xor
arpl
fs
call
xor
xor
data16
gs
xor
arpl
fs
in
loop
outs
cmp
xor
or
xor
xor
lahf
add
inc
inc
cmp
inc
inc
xor
inc
inc
cmp
aaa
cmp
xor
jb
dec
les
xor
inc
fucomi
jmp
cmp
sar
push
xchg
inc
aaa
xor
inc
xor
xor
or
xor
cmp
inc
xor
xor
inc
add
mov
xchg
mov
pop
imul
adc
xor
add
inc
mov
xor
xor
xor
xor
ss
cmp
xor
pushf
mov
xor
inc
or
cmps
cmp
cmp
xor
inc
xor
aad
fsub
inc
mov
inc
xor
lea
xchg
aad
(bad)
loop
and
xchg
dec
mov
push
out
push
add
and
mov
pusha
push
add
ss
inc
cmp
xor
xor
cmp
sub
inc
xor
bound
cmp
(bad)
jg
ja
aaa
xor
cwde
arpl
xor
arpl
outs
bound
popa
xor
aaa
xor
xor
fs
scas
xor
xor
add
xor
inc
mov
inc
inc
xor
inc
aaa
ss
xor
inc
xor
inc
xor
inc
xor
xor
add
sbb
xor
xor
mov
inc
(bad)
xor
xor
xor
xor
mov
xor
xor
xor
xor
inc
ret
inc
xor
xor
inc
sbb
xor
xor
ja
sbb
cwde
dec
sbb
add
mov
or
ins
or
or
or
inc
test
pop
lods
test
cmp
inc
inc
inc
cmp
call
mov
jno
call
cmp
cmp
xor
jne
mov
xor
fs
data16
jne
or
gs
out
fwait
xor
cmp
push
add
xor
xor
xor
aaa
inc
mov
xor
xor
inc
sbb
xor
inc
inc
xor
push
cmp
jae
dec
fbstp
sbb
rol
or
loopne
xor
xor
xor
inc
inc
inc
loopne
inc
push
fisttp
fadd
loope
xor
add
xor
bound
push
shl
sub
pop
shr
pop
add
mov
xor
add
fs
outs
fiadd
test
shl
mov
out
sbb
pop
nop
(bad)
dec
add
add
xor
cmps
stc
out
dec
add
dec
add
dec
add
add
dec
add
stc
sbb
imul
popf
(bad)
rol
fsub
add
dec
add
loop
add
fistp
dec
add
push
out
add
out
add
jmp
nop
imul
pusha
mov
inc
xchg
pop
jae
jo
lock
sub
ficom
aaa
and
outs
mov
sub
lods
add
cmp
popa
push
arpl
ds
add
popa
pop
imul
adc
imul
cmp
dec
add
and
push
scas
mov
sub
daa
scas
jmp
ret
sbb
cmps
imul
xor
pop
mov
xor
add
push
pop
sub
cmp
in
xchg
jo
mov
arpl
jg
add
sbb
pop
stos
xchg
imul
mov
imul
imul
cmps
imul
add
or
unpckhps
sbb
imul
je
dec
pop
push
add
popa
addr16
shl
jne
jg
call
mov
pop
movs
add
imul
imul
call
sbb
imul
cmps
imul
imul
imul
add
test
mov
pop
jnp
dec
adc
inc
cmp
out
pop
cmc
add
je
dec
stc
add
add
shl
cmp
inc
push
pop
pop
pop
shl
ja
dec
shl
lods
mov
dec
shl
(bad)
retf
rcl
shl
cmc
sti
xor
repz
std
pop
add
add
nop
shl
aas
inc
dec
shl
pop
arpl
or
mov
dec
shl
aad
dec
dec
shl
std
inc
xor
xor
shl
adc
dec
shl
sub
push
push
dec
shl
(bad)
xchg
xor
shl
shl
leave
retf
dec
shl
out
shl
xor
pop
push
add
or
xor
pop
and
das
cmp
xor
dec
dec
push
push
shl
jg
dec
shl
lods
mov
mov
shl
sti
std
shl
add
daa
aaa
dec
shl
push
push
xor
shl
ins
jae
mov
xor
ror
dec
shl
rcr
aaa
dec
shl
jmp
test
adc
xor
shl
aas
inc
push
push
shl
imul
fwait
lahf
movs
lods
mov
mov
shl
cmc
stc
shl
add
xor
sub
xor
dec
shl
push
pop
pop
imul
dec
shl
test
dec
fwait
mov
xor
shl
jmp
cmc
test
or
add
and
cmp
push
popa
arpl
xor
shl
jne
jg
shl
xchg
cdq
xor
shl
test
xor
rol
iret
fxam
out
shl
push
adc
xor
rol
adc
dec
shl
pop
gs
shl
jnp
lea
cdq
fwait
mov
ret
dec
shl
jmp
xor
pop
or
add
dec
shl
pop
pop
xor
shl
ins
jae
adc
dec
ror
dec
shl
jecxz
xor
shl
icebp
idiv
add
je
cmp
add
adc
and
cmp
dec
rcl
jns
test
xor
xchg
xor
shl
shl
out
xor
aaa
dec
std
dec
push
add
pop
sbb
shl
das
xor
xor
push
pop
pop
imul
dec
shl
shl
ret
ror
xor
aad
in
out
stc
pop
dec
shl
jae
or
dec
shl
inc
inc
dec
dec
shl
imul
dec
jg
mov
dec
shl
mov
rcl
shl
sti
std
shl
add
and
sub
cmp
dec
shl
jns
test
xchg
xchg
popf
mov
dec
scas
mov
ror
inc
dec
shl
repz
add
pop
or
adc
xor
shl
pop
pop
arpl
xor
shr
or
mov
lds
out
cmc
dec
sar
or
pop
and
xor
shl
xor
inc
inc
shl
jae
dec
shl
mov
xor
shl
mov
inc
dec
rcr
std
pop
adc
shl
sub
xor
ror
push
pop
addr16
shl
xchg
xchg
xchg
popf
lahf
scas
shl
(bad)
dec
shl
call
shl
and
xor
inc
dec
shl
jno
xor
shl
shl
aad
shl
out
adc
dec
shl
aaa
cmp
inc
inc
dec
pop
shl
jg
dec
shl
mov
xor
shl
vpmovmskb
dec
sar
add
adc
sbb
and
dec
sar
dec
shl
xchg
lahf
xor
shl
scas
mov
ret
shl
fndisi(8087
dec
shl
stc
or
xor
push
cld
lsl
daa
xor
xor
inc
pop
arpl
lea
lahf
movs
mov
xor
sar
dec
shl
inc
shl
adc
shl
addr16
dec
shl
jge
test
fwait
popf
cmps
lods
mov
shl
xlat
fnstenv
jmp
std
dec
shl
adc
xor
inc
dec
xor
shl
pop
jns
xchg
shl
test
dec
mov
(bad)
iret
fucomi
shl
xor
add
add
add
xor
and
sub
dec
shl
shl
xchg
cmps
dec
shl
leave
iret
xor
shl
dec
sar
add
and
shl
cmp
dec
shl
imul
xor
jg
xchg
popf
cmps
mov
vpmovmskb
out
xor
popa
shl
or
add
daa
shl
cmp
dec
dec
dec
push
jae
mov
mov
dec
shl
shl
add
and
cmp
inc
dec
push
pop
xor
shl
imul
sar
mov
dec
lahf
movs
cmps
mov
lds
loope
stc
dec
rcr
fiadd
push
fild
or
pop
xor
shl
shl
jno
dec
shl
mov
xor
(bad)
retf
fucom
cmps
ss
shr
idiv
add
fbstp
sbb
dec
dec
shl
jnp
dec
shl
movs
scas
xor
shl
int
dec
shr
repz
and
add
sbb
daa
sub
dec
ror
pop
arpl
shl
mov
xor
mov
xor
shl
in
out
sti
call
xor
arpl
inc
dec
dec
shl
jae
scas
stos
stos
pop
test
xchg
add
mov
cmps
imul
imul
add
sbb
and
sub
cmp
dec
shl
jg
xor
shl
xchg
popf
lahf
mov
mov
fndisi(8087
in
inc
xor
in
test
cmp
or
sub
xor
cmps
imul
arpl
(bad)
xchg
call
mov
cmps
imul
call
mov
cmps
imul
cmps
imul
imul
cmps
imul
(bad)
fcomip
mul
add
call
inc
dec
dec
imul
imul
imul
into
ins
add
adc
cmps
sub
cmps
imul
cmps
imul
lods
mov
leave
retf
stc
cmps
imul
sbb
aaa
dec
push
push
call
jae
jg
call
scas
cmps
imul
ins
call
or
adc
pop
and
cmp
aas
dec
push
pop
pop
cmps
imul
imul
cmps
imul
sub
add
and
aas
imul
imul
imul
cmps
imul
imul
das
cmps
imul
imul
cmps
imul
fucom
jmp
sti
imul
xor
cmps
dec
dec
push
imul
jnp
xchg
cdq
mov
movs
test
imul
call
das
xor
cmp
pop
imul
lods
imul
imul
into
aam
sub
inc
cmps
imul
imul
cmps
imul
add
call
sbb
and
sub
cmps
imul
imul
cmps
imul
shl
jmp
das
repz
cmps
imul
imul
cmps
imul
fcmovnu
out
cmc
imul
xor
and
cmps
imul
imul
cmps
imul
(bad)
retf
rcl
(bad)
cmps
imul
call
sub
mov
dec
icebp
dec
minps
popa
ins
xor
shl
jg
cdq
lahf
shl
(bad)
aad
shl
or
add
adc
pop
sbb
jmp
pop
pop
pop
add
outs
cmps
imul
imul
cmps
imul
call
xor
add
inc
pusha
lds
adc
add
dec
shl
(bad)
jae
jns
jg
mov
mov
fidiv
std
add
xor
addr16
sbb
aaa
add
xor
inc
push
push
imul
mov
xchg
popf
movs
scas
mov
leave
shl
icebp
dec
xor
add
pop
sbb
jne
adc
outs
dec
shl
or
mov
xor
sar
je
ss
out
add
scas
sub
shl
shl
mov
dec
push
pop
imul
imul
imul
cmps
imul
xor
xlat
jne
dec
pop
dec
add
jne
xor
sar
mov
xor
leave
aad
icebp
repz
je
ss
xor
xor
xor
push
xor
shl
outs
jno
shl
mov
dec
shl
fucom
popf
imul
jecxz
add
inc
and
das
cmp
ror
imul
shl
fwait
mov
cmps
scas
mov
mov
int
in
out
xor
or
cmp
xor
shl
sub
dec
push
dec
shl
jns
xor
shl
shl
repz
xor
sar
add
adc
and
sub
cmp
pop
pop
dec
shl
fwait
lahf
xor
shl
shl
xlat
loope
fdiv
cmp
shl
pop
sub
inc
dec
push
pop
imul
xchg
cmps
shl
rcr
popf
(bad)
cmp
dec
shl
pop
and
shl
aas
inc
outs
jae
shl
xchg
xchg
xor
shl
fdiv
repz
sbb
movups
shr
das
xor
dec
shl
xchg
mov
shl
loope
dec
out
dec
out
dec
aas
jecxz
aaa
cmp
pop
pop
shl
mov
lods
mov
call
icebp
std
cmps
imul
xor
inc
inc
pop
popa
imul
test
mov
mov
imul
cmps
imul
cmps
imul
xlat
ins
imul
add
stos
dec
shl
out
popf
imul
repz
add
xor
xor
and
das
call
push
add
imul
imul
imul
imul
and
call
imul
gs
jne
jp
pop
loope
out
in
popf
popa
shl
stc
or
pop
xor
shl
sub
aas
inc
shl
pop
gs
shl
movs
stos
xor
shl
mov
stc
sti
add
dec
rol
adc
xor
scas
imul
pop
push
add
ja
imul
imul
adc
jb
arpl
and
push
adc
inc
and
pop
xchg
pop
mov
call
ds
les
sub
cmp
inc
pop
pusha
js
hlt
push
dec
pop
inc
cli
out
je
cmp
ror
add
add
mov
(bad)
fnsave
push
mov
add
std
arpl
add
adc
dec
add
add
add
ins
add
jae
jne
mov
xor
aas
inc
pop
adc
and
inc
shl
xchg
dec
pusha
inc
add
out
and
adc
sbb
xchg
jmp
fadd
mov
or
nop
mov
jae
add
mov
adc
xor
xchg
dec
adc
imul
std
push
push
pop
nop
call
outs
arpl
jae
mov
sub
jo
xor
pusha
mov
mov
and
sbb
inc
xor
outs
add
mov
gs
inc
push
outs
popa
jo
push
inc
add
mul
or
je
jne
jne
fild
adc
cmovae
stos
jne
push
std
aas
xor
pop
inc
outs
jb
addr16
jne
mov
add
inc
push
xor
cs
dec
xchg
jp
call
inc
imul
add
add
adc
outs
or
add
mov
stos
mov
push
hlt
shr
mov
jb
adc
xor
add
scas
test
mov
jg
rcl
gs
pop
inc
cld
popa
jae
inc
outs
outs
sar
je
mov
ss
add
call
inc
dec
mov
push
and
add
mov
imul
hlt
movlps
jae
and
jne
outs
pop
dec
gs
jo
inc
jne
or
inc
jb
mov
push
je
das
imul
cmp
inc
push
inc
push
dec
sbb
pop
not
inc
dec
cmovno
test
(bad)
jne
mov
aaa
jne
pop
jne
mov
rol
ror
and
arpl
lahf
mov
push
into
pop
or
bound
adc
xor
pop
sbb
imul
mov
jae
fist
bound
jae
and
sub
inc
mov
outs
jae
and
dec
gs
adc
sar
jns
xor
or
dec
inc
xor
fnstsw
mov
and
or
xor
inc
inc
inc
inc
ja
lahf
inc
cmp
xor
ins
and
inc
add
sub
mov
jo
gs
add
jne
add
pop
aaa
pop
ja
or
add
ja
jb
or
add
add
lar
push
inc
in
outs
outs
je
je
mov
lods
sbb
or
mov
sub
arpl
push
push
add
jbe
add
xor
xor
mov
push
xchg
dec
add
pop
outs
dec
sub
or
imul
stos
mov
inc
add
inc
mov
cmp
push
push
dec
dec
push
dec
push
pop
sbb
xor
inc
add
daa
push
dec
ja
dec
dec
add
fistp
mov
adc
cdq
cmp
jne
mov
stos
inc
cmp
xor
cmp
jge
(bad)
cmovo
xchg
pop
add
jo
dec
pop
mov
mov
adc
paddusb
sahf
stc
inc
shl
mov
call
push
adc
push
inc
dec
push
add
jb
adc
jmp
gs
add
jb
popa
jb
jecxz
jo
mov
cmp
inc
popa
ins
imul
mov
scas
or
in
xor
inc
leave
and
dec
inc
mov
xchg
bound
sti
fld
sti
inc
movs
popa
adc
je
mov
or
rol
lds
inc
dec
and
mov
mov
jae
gs
or
adc
jg
mov
jg
imul
xor
xor
mov
sbb
add
jo
arpl
dec
adc
sbb
add
pushw
icebp
mov
pop
popa
pop
jae
xchg
sub
xchg
push
sub
jo
cmp
and
xchg
out
xor
aaa
fadd
loope
mov
adc
adc
add
or
add
push
pop
iret
xchg
cdq
scas
push
add
outs
addr16
enter
shl
loopne
call
dec
add
inc
pushf
dec
add
dec
add
mov
lds
mov
std
out
dec
jo
dec
add
add
test
jnp
pop
scas
dec
mov
add
mov
inc
pop
mov
or
jae
mov
add
jne
jnp
adc
mov
or
scas
pop
jo
aas
mov
call
add
dec
jl
add
sar
scas
mov
sub
outs
imul
push
in
(bad)
jge
dec
inc
call
ins
jne
cmp
cmp
sub
ret
retf
fs
jne
je
mov
je
jb
popa
cmp
push
retf
mov
fwait
shr
movs
xor
mov
data16
in
pusha
add
or
punpckhwd
and
inc
aas
cmps
add
xchg
out
pop
add
jmp
xchg
daa
mov
add
in
outs
mov
aas
inc
xor
dec
sbb
mov
or
das
out
cmp
adc
jecxz
mov
push
fs
jnp
sbb
sub
das
jnp
inc
aad
movs
adc
(bad)
inc
test
fisttp
push
pop
xor
mov
adc
mov
add
call
mov
jo
sbb
shl
or
aaa
mov
pop
mov
outs
cwde
jmp
and
xchg
adc
nop
dec
push
inc
sbb
sbb
cmp
in
comiss
jo
jnp
adc
loopne
or
loope
adc
movntps
push
ficomp
push
dec
into
mov
add
sbb
outs
pop
inc
mov
hlt
lahf
dec
inc
scas
addr16
aas
sub
add
sub
mov
invd
dec
pop
push
push
inc
dec
or
jo
sub
std
sbb
gs
idiv
sub
arpl
jne
imul
data16
imul
inc
test
xor
add
add
cs
xchg
sbb
int
sar
cs
pop
jbe
pop
arpl
ins
jae
and
add
push
aad
pop
mov
and
mov
jae
mov
xchg
xchg
cmp
jbe
inc
pop
push
js
cmp
add
sbb
test
cmc
je
sub
in
out
das
push
inc
push
push
dec
or
es
cmp
add
mov
movs
and
sbb
adc
or
jle
push
add
pop
ja
xchg
out
mov
xor
jnp
xchg
iret
pop
cmp
rcr
cmp
dec
adc
pop
daa
aaa
and
xadd
aas
aaa
enter
pop
mov
cmp
push
push
inc
dec
dec
push
push
add
shr
out
and
fwait
adc
loop
mov
sbb
add
cmp
popf
cmp
add
and
rol
and
dec
add
sbb
inc
loopne
loopne
addr16
mov
sbb
xor
add
cmp
xor
or
loope
sbb
inc
call
push
test
out
xor
int3
jnp
jg
push
inc
mov
jge
mov
ret
lsl
adc
pop
jae
xor
arpl
jnp
xor
popa
out
arpl
adc
mov
xchg
pop
adc
jnp
mov
or
or
(bad)
fdiv
and
daa
push
add
(bad)
cmp
movlps
clc
das
or
sbb
pop
(bad)
sbb
mov
add
outs
gs
ins
pusha
dec
or
fwait
clc
outs
aaa
fs
and
gs
imul
adc
jmp
outs
jb
push
gs
call
cs
ret
aaa
sub
imul
xor
xor
pcmpgtb
bound
hlt
bound
or
arpl
jb
push
sbb
idiv
inc
dec
push
inc
push
push
pop
mov
sub
fdivr
enter
dec
push
dec
inc
push
sub
sbb
ficomp
add
pusha
inc
adc
cmp
jae
jl
pop
clc
adc
or
ret
pusha
out
xor
mov
enter
add
sub
add
add
(bad)
and
lahf
scas
pop
cmp
add
pop
ds
mov
or
ret
ficomp
pop
xor
lsl
fmulp
fimul
pop
adc
test
or
cdq
dec
jl
xor
sbb
rol
sti
icebp
popa
shl
mov
add
sbb
(bad)
ja
add
add
pop
inc
push
add
and
mov
add
mul
push
or
out
jmp
or
inc
mov
or
sbb
pop
jl
xor
xor
jle
imul
loopne
push
xchg
(bad)
aam
pop
jnp
ret
pop
daa
xor
mov
mov
sbb
shl
jnp
add
cmp
inc
push
push
dec
dec
inc
push
add
add
cli
mov
inc
xor
or
pop
jo
popa
jo
cli
inc
(bad)
sub
sub
aas
add
js
fnstenv
mov
ins
imul
and
ins
(bad)
test
out
and
aam
and
pop
aaa
or
jb
sub
outs
jne
js
cmp
pavgw
jg
pop
pop
mov
dec
inc
push
add
fsub
mov
push
push
inc
push
add
pop
push
paddsw
cli
in
inc
dec
dec
push
push
mov
add
ud2
aaa
add
addr16
jne
add
add
mov
sbb
fistp
dec
inc
push
inc
pop
sbb
pmaxub
push
xor
or
sub
push
pop
adc
add
inc
dec
stos
or
in
inc
aam
or
test
cmp
out
pushf
mov
or
push
dec
dec
adc
push
bound
(bad)
mov
push
dec
push
or
add
fdivr
pop
inc
or
cmp
push
dec
push
out
inc
and
push
push
inc
jnp
adc
add
pop
dec
add
add
inc
mov
ficomp
loope
js
jnp
sbb
popa
jb
ret
pusha
inc
cmc
or
jae
xor
repz
push
repz
mov
add
je
addr16
shr
ins
cmp
push
dec
sub
and
xchg
adc
rol
push
and
pop
pop
add
jb
mov
adc
mov
nop
and
push
aaa
ds
in
arpl
ror
or
or
sub
pop
sub
dec
add
adc
dec
push
sub
mov
pusha
mov
cmp
cmps
or
inc
lahf
jo
dec
pop
dec
loope
bound
dec
pop
jae
out
das
inc
xor
loopne
adc
xor
or
push
and
cmovae
ret
push
add
or
repnz
pop
arpl
gs
loop
rcl
mov
jo
aas
sbb
sti
jb
imul
inc
push
xor
jmp
inc
inc
lahf
cmp
neg
pop
mov
gs
push
ja
fidivr
and
out
add
push
cmp
ds
ret
shl
sub
pop
pop
push
das
or
dec
push
cmp
add
aad
jg
and
push
jo
mov
add
ret
outs
sbb
jo
daa
pop
shr
dec
jmp
imul
inc
lds
or
and
adc
inc
outs
ret
popa
imul
sub
jp
mov
js
sub
add
ins
gs
mov
clc
adc
arpl
ins
jns
jae
pop
jbe
mov
retf
push
popa
outs
or
push
sbb
out
jne
jb
sub
mov
in
inc
push
sbb
mov
cmps
sbb
shl
outs
cmps
fst
ins
outs
aaa
sub
pop
mov
iret
jne
loopne
adc
mov
push
adc
aaa
fadd
pop
lock
retf
push
mov
push
dec
cmp
aaa
pop
arpl
add
fs
cmovle
push
or
ins
pusha
add
sbb
loop
fmul
add
sub
inc
daa
xlat
inc
sub
xor
outs
fst
pop
outs
adc
and
inc
out
ins
push
and
mov
aaa
push
inc
(bad)
pop
fmul
div
iret
pop
push
sub
out
or
ja
xor
mov
ja
sub
jo
sbb
mov
emms
push
pop
inc
dec
or
inc
inc
inc
push
jg
pop
inc
inc
push
inc
push
dec
push
push
add
cmps
and
xor
out
call
xor
adc
outs
push
jle
cwde
mov
and
add
cmp
mul
dec
add
adc
or
imul
add
add
inc
inc
dec
dec
mov
push
inc
inc
inc
(bad)
(bad)
out
iret
jge
gs
imul
cmp
or
pop
popa
add
es
add
adc
fadd
iret
add
idiv
add
outs
cwde
cmp
xlat
cwde
comiss
fimul
inc
adc
scas
sti
pop
xchg
and
inc
dec
verw
out
rol
push
pop
dec
lds
fs
inc
push
inc
hlt
cmp
fstp
inc
jp
inc
xchg
and
ret
sub
mov
mov
push
push
gs
add
popf
sbb
sub
js
ins
pop
fwait
mov
dec
pop
das
jae
outs
movs
add
adc
cmp
adc
shl
inc
test
add
cwde
push
add
adc
jno
jb
ins
inc
push
mov
cmp
and
and
push
test
and
pop
mov
push
cwde
cmp
js
lods
dec
dec
repz
push
fstp
or
dec
data16
cmps
fld
outs
(bad)
idiv
and
add
or
adc
loopne
xor
(bad)
outs
addr16
mov
and
inc
adc
adc
sbb
inc
inc
inc
outs
ins
jo
imul
rcr
imul
push
add
jns
outs
and
pusha
xchg
xor
(bad)
or
sbb
sub
daa
dec
add
inc
cmp
or
aaa
mov
pop
adc
lahf
and
push
mov
pop
out
xlat
lea
xor
mov
loopne
dec
or
adc
out
dec
js
imul
fisub
retf
mov
cmp
pop
jg
add
jmp
lock
or
push
jnp
add
pop
inc
dec
push
push
cmp
dec
outs
push
push
retf
push
sbb
and
add
mov
add
gs
adc
mov
sub
mov
outs
or
jbe
sub
push
and
(bad)
cs
ins
or
push
push
inc
cld
fistp
dec
push
push
push
push
dec
push
push
inc
pop
add
imul
inc
jl
push
cmp
pop
das
div
(bad)
adc
jo
add
cwde
imul
add
arpl
push
popa
ins
ja
jns
pop
fadd
add
jae
add
mov
lock
push
std
ret
push
mov
add
jle
adc
cmp
pushf
and
pop
jmp
xchg
fisttp
inc
inc
push
dec
inc
aam
popa
jg
push
bound
push
inc
nop
xchg
jae
mov
jg
ss
add
shl
pop
enter
aaa
cmp
test
push
sub
or
add
cmp
push
dec
add
lods
call
inc
xor
add
pop
xor
xor
sbb
and
jne
cmp
cmp
add
imul
pop
and
arpl
add
jnp
popa
and
cmp
pop
sbb
dec
ss
sbb
mov
xor
sbb
adc
adc
push
add
push
xor
jo
dec
add
outs
add
sub
in
pop
pop
or
add
add
or
push
int3
pop
outs
jg
jne
ja
std
js
jg
xchg
mov
inc
inc
push
dec
mov
pop
lock
push
dec
dec
mov
mov
pop
or
ins
dec
push
add
pop
pusha
out
mov
add
cmp
add
sbb
push
add
getsec
xchg
or
shl
push
jnp
inc
dec
add
sbb
adc
pop
inc
js
arpl
hlt
push
push
sbb
retf
push
icebp
sar
retf
push
cmp
in
adc
pop
shr
mul
add
imul
mov
push
addr16
enter
popa
je
and
pop
ret
adc
imul
and
outs
outs
push
gs
and
stos
add
aaa
and
fs
loopne
ret
call
not
adc
sbb
push
sub
mov
xchg
jmp
add
out
jo
or
inc
adc
push
dec
and
gs
jb
popf
add
cdq
enter
outs
aad
add
push
je
ins
push
adc
push
sbb
in
xor
sub
push
or
cwde
cmp
push
pop
xchg
adc
out
push
enter
popa
out
mov
add
dec
add
add
movs
pusha
or
add
jg
jae
push
add
or
in
jmp
(bad)
adc
aas
dec
add
ss
dec
imul
ss
adc
aaa
xor
or
xchg
aaa
mov
cmp
cmp
sbb
add
aaa
dec
das
inc
popa
out
ins
add
xchg
adc
daa
and
out
fs
add
fsubr
add
or
and
and
push
aam
or
outs
jns
push
ret
lds
push
pusha
add
dec
out
adc
push
adc
push
call
and
outs
outs
adc
int3
mov
pop
or
add
jae
ins
inc
jb
int3
xor
xchg
push
pop
adc
and
xchg
ret
fisub
cmp
cs
dec
dec
sub
aam
lods
jl
pop
mov
inc
dec
dec
inc
pop
or
add
inc
inc
mov
data16
cmp
(bad)
(bad)
daa
inc
pop
pop
and
add
and
fcom
imul
pop
mov
push
arpl
popa
jo
sbb
aaa
inc
ins
sahf
daa
mov
fiadd
not
adc
popf
fdiv
sahf
mov
add
jge
sub
inc
cmp
xor
enter
loop
fadd
cmp
sbb
push
push
dec
pop
pop
clc
adc
add
(bad)
push
push
pop
lea
bound
aad
data16
and
add
aas
or
push
rcl
jo
pop
mov
pop
or
add
fld
js
push
jmp
mov
push
push
cmp
fistp
mov
retf
push
out
fcomp
dec
xorps
push
out
dec
adc
push
cmp
cli
stos
nop
adc
xchg
mov
jae
imul
ja
cmp
or
and
mov
dec
or
mov
scas
sub
pop
or
mov
dec
lahf
mov
and
ror
rol
shr
adc
lock
sub
imul
cwde
sti
push
jmp
neg
aaa
int3
xor
out
cmp
rol
adc
out
addr16
xor
inc
pop
xchg
nop
pop
or
xor
movs
jo
mov
pop
pop
inc
inc
mov
sbb
pop
aas
pop
push
(bad)
jmp
int3
pop
pop
sbb
test
pop
dec
out
fdiv
arpl
cmovg
out
cmp
sbb
sbb
pop
add
movs
sbb
call
adc
retf
mov
pop
xchg
enter
loope
adc
adc
add
add
xchg
fimul
cmp
(bad)
mov
cwde
pop
pop
add
jnp
cmovae
jge
adc
js
mov
maskmovq
sbb
sbb
xlat
xchg
sbb
(bad)
fs
sub
jg
dec
jg
mov
inc
adc
or
jg
and
mov
lsl
adc
adc
int3
jne
jg
adc
cmps
jg
add
pop
out
jg
mov
popa
pop
jg
pop
aas
add
sbb
(bad)
cld
mov
maxps
mov
xor
cmp
imul
or
ja
out
in
pop
jmp
setae
neg
fcom
dec
xchg
sbb
aam
push
outs
or
jnp
inc
adc
ret
ja
xor
mov
xchg
addr16
shl
out
xor
cmovae
xor
lahf
jo
arpl
inc
push
push
dec
inc
inc
dec
dec
mov
mov
outs
jb
pop
inc
daa
pop
cdq
jo
jg
sub
movs
adc
add
(bad)
push
mov
dec
adc
push
push
add
je
jae
inc
pop
jnp
xor
pop
sbb
adc
inc
push
add
test
(bad)
jae
inc
js
outs
pop
jae
or
add
gs
je
fs
aas
xor
inc
dec
inc
dec
add
mov
rol
push
push
inc
dec
add
or
xadd
aas
data16
sub
dec
sbb
push
and
or
push
inc
push
push
push
adc
aas
or
sub
adc
mov
pop
add
(bad)
out
outs
outs
or
fwait
mov
ret
sub
ins
adc
fisubr
cs
inc
shl
pop
bound
pop
bound
daa
dec
dec
pop
add
loope
daa
outs
fdiv
ror
push
push
inc
pop
sub
add
ins
or
xor
jo
sub
inc
cpuid
pop
mov
aad
test
cmps
mov
mov
test
sbb
mov
cwde
mov
je
pop
pop
cmp
sbb
aas
dec
dec
jae
inc
push
sub
inc
aas
iret
mul
loope
xchg
pop
mov
sbb
std
push
nop
adc
inc
ins
cwde
and
xlat
inc
pop
ins
clc
push
dec
inc
dec
int
inc
jecxz
inc
fwait
adc
arpl
dec
outs
jbe
rcr
hlt
dec
arpl
inc
jne
or
jne
add
sub
inc
adc
ret
jnp
mov
fidivr
popa
fs
push
aam
je
rol
and
lock
and
add
and
and
inc
dec
sbb
inc
xor
push
push
add
mov
inc
add
add
add
add
pop
dec
pop
scas
clc
fist
rcr
xor
pop
add
inc
(bad)
and
fwait
jne
rcr
pop
jae
jb
inc
and
out
add
das
and
shl
and
and
and
cmp
add
and
add
scas
popa
inc
out
sbb
dec
ret
lds
mov
out
dec
pop
das
pop
inc
jo
add
xor
push
mov
popa
inc
and
mov
adc
dec
inc
xchg
add
dec
mov
push
push
popa
rol
jae
enter
rol
add
loop
push
and
movs
and
push
sub
sbb
adc
arpl
out
jae
gs
sbb
sub
popa
sbb
mov
xor
mov
push
daa
sti
pop
and
push
inc
push
dec
dec
inc
orps
mov
dec
or
sub
cs
dec
xor
or
xor
push
add
push
and
xor
push
inc
xor
dec
or
sbb
aaa
das
push
inc
push
and
js
or
sub
mov
(bad)
mov
sub
sub
clc
inc
imul
push
mov
jb
psubd
loop
imul
mov
fs
aas
sbb
mov
mov
fs
push
fs
les
push
ins
std
rcl
xchg
mov
pusha
xchg
leave
mov
(bad)
nop
(bad)
and
inc
lds
xchg
inc
pop
push
push
xor
add
int3
arpl
adc
push
jbe
adc
push
test
mov
add
iret
outs
push
(bad)
popf
sbb
pop
sbb
scas
sbb
fiadd
pop
es
pop
or
add
(bad)
(bad)
inc
pop
mov
sub
adc
cmp
repnz
repz
frstor
mov
and
iret
adc
sub
and
push
and
pop
sbb
mov
pop
cmp
mov
(bad)
mov
mov
sysenter
sbb
jmp
mov
pop
dec
test
or
fwait
ror
cwde
cld
xchg
adc
push
adc
aas
neg
add
pop
dec
jp
add
sub
cmp
pop
fs
add
(bad)
mov
inc
add
inc
add
or
push
add
push
bound
cmp
outs
bound
and
adc
outs
pop
sub
pop
bound
push
add
(bad)
xor
dec
add
sbb
jl
enter
add
or
sbb
aaa
adc
imul
inc
jae
jb
mov
out
inc
out
cmp
dec
add
pop
xchg
mov
test
popa
fld
icebp
pop
test
sub
dec
fwait
gs
mov
add
(bad)
addr16
popa
pop
push
packsswb
loopne
jle
loop
mov
mov
add
mov
push
add
shr
aad
idiv
add
sysret
jo
dec
sub
rdtsc
cwde
dec
add
jb
js
je
xchg
dec
add
ins
jae
outs
jb
mov
mov
aaa
rcr
pop
pop
xchg
std
xchg
cmp
pushf
pop
movs
popf
psrld
dec
add
add
das
push
mov
pop
cmps
movs
psubd
popf
cmps
jne
push
scas
popa
add
dec
outs
cwde
jnp
lock
xor
xor
add
mov
xchg
or
or
push
inc
int
lahf
dec
popf
add
or
push
sub
inc
adc
add
ss
or
jge
xchg
scas
minps
cmp
or
lods
or
comiss
lea
ret
enter
fld
jae
xchg
inc
pop
inc
leave
mov
retf
leave
or
pop
fcmovne
orps
mov
lods
mov
sub
hlt
or
pop
adc
sub
add
fld
add
pop
test
push
inc
add
push
pusha
push
mov
add
aas
xor
(bad)
(bad)
push
outs
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
inc
cmps
loop
and
and
and
es
sub
sub
loop
push
cmc
pop
cmp
cmp
ds
inc
aad
jmp
pop
pop
pop
pusha
add
xchg
dec
jnp
jge
jg
dec
inc
pop
mov
pop
pop
add
dec
dec
xor
mov
or
je
jle
dec
and
dec
dec
inc
push
test
add
cs
add
jnp
pop
(bad)
pop
mov
dec
add
adc
js
pop
lods
fdiv
(bad)
std
out
xchg
loop
pop
mov
dec
add
dec
add
add
aas
xlat
in
adc
neg
daa
mov
add
iret
std
out
(bad)
in
dec
add
dec
add
sahf
sti
push
in
dec
add
daa
add
nop
push
ror
sub
daa
adc
leave
push
add
add
add
cmp
aaa
add
jno
mov
adc
xchg
mov
fwait
mov
add
ret
and
add
add
and
rcr
fcom
add
mov
dec
add
(bad)
jae
add
fadd
fadd
or
jp
loopne
add
aaa
repnz
stos
loopne
lods
leave
add
add
add
add
inc
inc
call
add
jmp
cmp
pop
or
fild
cli
aaa
xor
push
push
sbb
and
pusha
fnsave
ja
add
jo
js
and
pop
add
or
mov
or
push
out
outs
add
inc
fadd
xchg
cmc
add
sub
(bad)
cmp
aaa
or
outs
dec
outs
outs
push
jne
push
gs
push
(bad)
out
mov
dec
popa
outs
inc
bound
jb
jo
cld
(bad)
push
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
cmp
out
add
aas
and
mov
add
push
xchg
ret
(bad)
cld
add
jnp
sub
lahf
or
jae
pop
push
movs
mov
aam
je
or
jnp
push
inc
mov
mov
dec
add
add
push
or
adc
push
imul
sub
and
outs
out
dec
imul
xor
jb
push
push
jmp
add
or
add
cs
xchg
loopne
mov
and
push
lock
inc
fsub
jb
test
inc
dec
shr
and
fisub
jp
sbb
ja
imul
inc
adc
ror
outs
je
jb
popa
ins
push
adc
out
fldenv
gs
push
push
inc
outs
outs
je
sbb
jns
mov
outs
scas
outs
jne
arpl
inc
nop
mov
neg
jne
and
outs
outs
ja
and
imul
fs
jmp
mov
and
add
jae
jb
je
inc
or
pop
int3
mov
jns
jae
mov
and
int3
and
inc
rol
or
cmp
pop
adc
ret
mov
neg
pop
(bad)
or
retf
add
xor
clc
sbb
push
bound
dec
jae
jp
popa
in
dec
outs
jb
and
jb
jae
outs
je
repz
mov
push
mov
jns
(bad)
sbb
pop
ja
aas
jmp
and
inc
mov
or
push
push
or
test
cmp
add
inc
dec
dec
adc
xor
cmp
jae
xor
push
push
das
and
pusha
mov
push
ja
cld
arpl
and
inc
cli
and
dec
inc
push
or
ror
mov
add
aas
jo
mov
push
std
es
jae
lock
ins
stos
ins
outs
jge
mov
cs
(bad)
ret
mov
cmp
imul
imul
add
aaa
pop
add
jae
popa
arpl
add
mov
pop
ins
outs
ja
cmp
aaa
ss
fs
jo
jbe
jb
or
and
inc
mov
arpl
ins
dec
pusha
out
mov
xor
xchg
pop
outs
outs
push
inc
addr16
gs
je
push
pop
in
out
iret
xor
rcl
outs
ins
popa
pop
xor
sub
retf
adc
cmp
mov
mov
dec
or
out
pop
jne
and
cmp
mov
repz
cmp
adc
or
push
push
xor
out
out
daa
and
retf
rcr
rol
jne
ja
push
add
popa
jns
cmp
inc
les
outs
mov
outs
mov
loopne
fadd
cmps
xor
das
and
popa
jb
lods
jecxz
and
xor
data16
outs
dec
inc
xlat
test
xor
inc
add
jnp
fs
jno
cmc
add
and
or
adc
push
add
out
por
(bad)
sbb
add
mov
or
adc
add
paddusw
int3
mov
add
sbb
sti
xor
jne
rol
sbb
jno
pop
sti
outs
mov
or
ret
movs
add
and
popa
or
arpl
test
and
xchg
ins
outs
fs
xor
out
test
outs
pshufw
or
aas
(bad)
jae
pop
pop
neg
inc
dec
add
add
imul
inc
dec
xchg
add
(bad)
ds
outs
add
aas
jb
in
xchg
daa
rol
int3
out
pop
inc
xchg
pop
mov
sahf
or
add
shl
pop
push
sbb
fld
inc
or
fdiv
daa
shl
cmp
push
inc
fld
jns
cdq
add
dec
in
fsub
dec
inc
and
lds
inc
sahf
or
add
push
les
add
rol
daa
dec
sahf
cmp
cdq
add
dec
add
in
xchg
and
stc
call
shr
and
sbb
hlt
out
inc
rol
lods
sbb
leave
and
inc
sahf
cmp
and
add
out
cmp
repnz
add
inc
mov
xchg
daa
dec
sahf
rol
add
out
aas
leave
pop
add
cmp
jb
push
add
sbb
inc
add
out
inc
ror
xchg
daa
add
inc
xchg
add
jns
in
pusha
add
sub
inc
cmp
add
xchg
daa
dec
sahf
pop
or
mov
cdq
or
in
inc
add
and
xor
lahf
daa
cmp
loopne
add
mov
sbb
leave
xchg
sahf
ror
inc
push
dec
xor
pop
sbb
mul
pop
add
pop
iret
in
xchg
daa
inc
mov
daa
or
sub
xchg
dec
shl
iret
into
push
jmp
addr16
pop
inc
fild
leave
add
leave
and
cmp
repnz
push
add
xor
rcl
add
call
hlt
std
xchg
div
fld
sahf
cmp
add
jp
and
call
fs
aas
mov
mov
(bad)
ss
pop
xchg
dec
pop
pop
mov
jo
cmp
das
sbb
(bad)
(bad)
dec
aas
or
retf
or
mov
mov
in
das
xchg
xchg
pop
dec
test
(bad)
lock
adc
psubb
gs
scas
aas
test
(bad)
(bad)
call
mov
inc
in
and
add
xlat
mov
es
call
fistp
fsub
jb
mov
and
adc
sar
add
lds
cmp
(bad)
fadd
aas
dec
je
stos
mov
inc
scas
daa
jp
ret
aas
mov
(bad)
mov
stos
pop
outs
je
push
jbe
aas
jo
fwait
and
ret
mov
rcr
push
lds
cmp
movs
pop
(bad)
aas
clc
out
pop
jmp
out
call
enter
mov
rcr
lods
push
mov
aas
adc
push
ror
loopne
mov
xor
retf
xchg
mov
aas
scas
adc
or
mov
jg
out
(bad)
(bad)
stc
dec
int
sub
fild
aas
repnz
(bad)
(bad)
inc
aas
xchg
jecxz
mov
data16
mov
(bad)
or
js
aas
add
(bad)
call
or
icebp
cmp
into
adc
aas
in
inc
nop
or
sar
mov
xchg
aas
cmp
movs
inc
sar
pop
aam
call
xchg
idiv
(bad)
jmp
ds
cmc
xor
cmp
add
fdivp
jecxz
rcl
dec
das
clc
(bad)
(bad)
jg
inc
test
aam
ins
cld
sti
dec
mov
rcr
mov
movs
int3
add
int
mov
loop
sub
mov
cmp
and
aad
pop
jge
cmp
pop
jne
(bad)
xchg
jle
(bad)
aas
les
and
mov
add
out
xchg
daa
loop
aas
cmp
jle
and
xor
jg
jno
aas
fld
xor
jo
imul
fdivr
jbe
retf
add
cmp
cs
call
(bad)
fcomip
jmp
rcr
fnstcw
addr16
mul
ds
pop
test
aas
(bad)
mov
or
jg
retf
pop
shl
fidivr
(bad)
lea
jne
(bad)
pusha
leave
mov
mov
(bad)
mov
xor
sar
daa
gs
fstp
pusha
pop
sahf
or
fist
js
jle
(bad)
(bad)
rcr
aas
and
or
lahf
outs
mov
inc
mov
xor
aas
loop
pop
add
and
cdq
fnstsw
add
call
jg
in
sbb
dec
stos
mov
sub
loop
lock
idiv
sbb
mov
or
add
fidivr
cli
adc
sub
(bad)
mov
xor
fistp
and
jg
mov
popf
imul
cmp
lock
test
mov
adc
cmp
je
loopne
fisttp
into
js
mov
mov
iret
push
push
shl
movs
push
adc
push
pop
pop
loope
call
(bad)
aas
pop
rol
mov
mov
int3
inc
loope
rcl
sbb
retf
add
(bad)
(bad)
(bad)
(bad)
cmp
inc
jp
pop
pop
push
and
inc
mov
add
cmp
mov
std
loope
jno
add
and
push
movs
sub
(bad)
out
jg
pop
mov
cmps
adc
xor
mov
iret
xor
mov
(bad)
(bad)
dec
add
mov
push
adc
mov
xchg
inc
xor
mov
idiv
inc
xlat
outs
push
mov
cmp
fnstcw
push
ds
add
and
(bad)
(bad)
(bad)
fmul
mov
outs
xor
mov
es
nop
jg
cmp
(bad)
(bad)
push
inc
lahf
div
xor
aaa
cmps
inc
xlat
mov
hlt
and
stos
out
retf
(bad)
mov
inc
cmps
aad
sub
add
push
call
cmps
jb
mov
(bad)
jg
rcl
push
mov
dec
push
aas
dec
ja
cdq
imul
jb
mov
mov
lahf
(bad)
(bad)
(bad)
not
mov
ins
repz
inc
and
aam
xor
call
or
mov
add
sub
adc
popf
sar
push
jg
(bad)
(bad)
(bad)
mov
sub
mov
loop
or
or
sar
pop
xchg
aaa
(bad)
(bad)
ja
mov
mov
or
aas
nop
ins
inc
(bad)
mov
std
(bad)
out
xlat
inc
fbstp
sar
(bad)
push
and
cmp
sti
shl
(bad)
(bad)
mov
lods
lods
sub
pop
mov
mov
sub
inc
aas
hlt
mov
cld
jg
call
adc
jb
cmp
jno
stos
pop
iret
mov
jbe
cmp
aas
cmp
mov
cmps
outs
ss
ins
(bad)
push
lods
int
or
(bad)
mov
test
ds
cmp
xchg
in
cmc
add
sbb
push
mov
nop
test
jae
mov
cdq
pop
dec
pop
mov
pop
in
dec
retf
(bad)
bound
inc
loop
jge
mov
arpl
(bad)
outs
jg
dec
or
pop
repnz
movs
and
(bad)
mov
clc
(bad)
out
rol
add
mov
(bad)
mov
cmp
inc
mov
pusha
icebp
(bad)
(bad)
xor
mov
and
jmp
and
outs
(bad)
fistp
inc
hlt
sahf
jo
xchg
mov
mov
pop
mov
(bad)
(bad)
fst
inc
lahf
shr
stc
ret
ss
ret
cmp
repz
push
(bad)
out
(bad)
inc
jecxz
xor
mov
mov
(bad)
mov
in
sar
popa
sub
pop
push
pop
or
mov
xor
inc
out
xchg
xchg
jecxz
mov
xchg
cld
mov
add
mov
rol
pop
(bad)
mov
in
mov
stos
retf
adc
dec
mov
mov
mov
(bad)
jg
cli
daa
fild
mov
push
stos
idiv
stos
cmp
jecxz
mov
ds
add
stos
xor
rol
mov
mov
pop
adc
inc
jmp
(bad)
(bad)
mov
mov
sbb
cmp
iret
inc
pop
iret
jne
mov
xchg
sbb
push
sbb
test
mov
sub
and
outs
or
ret
push
mov
sub
outs
stos
mov
data16
(bad)
(bad)
inc
mov
mov
xor
push
and
jg
mov
inc
inc
mov
xor
dec
and
or
out
xor
aas
(bad)
mov
mov
dec
jp
jge
xchg
mov
icebp
add
(bad)
fcomip
call
or
aas
jecxz
mov
add
dec
pop
sub
mov
xor
mov
push
add
les
ja
and
int
mov
mov
sub
pop
inc
jmp
sahf
pop
inc
inc
std
cld
nop
inc
push
sbb
cli
stc
inc
push
sbb
test
fs
cmc
hlt
repz
icebp
lock
fs
inc
push
out
in
in
nop
inc
push
sbb
jmp
out
push
sbb
in
loop
fs
inc
loope
fbld
push
(bad)
fcom
fcmovu
inc
push
sbb
(bad)
cmp
fs
aad
rol
adc
iret
enter
into
int
and
leave
or
enter
or
enter
ret
daa
add
adc
ror
and
add
push
pop
pop
inc
add
in
and
or
in
and
pop
in
and
or
and
add
or
pop
inc
add
in
and
or
pop
inc
push
in
and
pop
in
and
pop
pop
and
add
push
pop
pop
inc
add
in
and
add
in
and
pop
in
and
add
and
add
add
pop
inc
add
in
and
add
pop
inc
or
and
or
fadd
call
sub
aas
push
popa
xor
or
(bad)
aaa
gs
add
xor
sbb
push
or
hlt
jmp
iret
shl
aas
aas
aaa
cmp
mov
mov
aaa
movs
inc
aas
xchg
dec
add
retf
dec
imul
sub
std
jg
mov
cwde
push
aas
sub
lods
sub
jp
add
mov
add
mov
fisttp
add
push
pop
push
aas
in
adc
xchg
mov
aaa
hlt
dec
mov
aam
(bad)
hlt
inc
fild
ror
es
aas
jg
fild
jo
into
or
fild
inc
ud0
mov
adc
add
cli
lahf
push
(bad)
fist
pusha
mov
aas
xor
hlt
dec
dec
gs
xor
jg
cwde
mov
mov
xor
lea
add
pushf
xor
pop
mov
(bad)
std
jg
pop
mov
mov
imul
mov
fist
(bad)
mov
and
mov
xchg
in
int3
jg
(bad)
mov
add
jns
stc
ins
aas
ds
jl
cmp
mov
aas
ret
jno
mov
add
in
outs
jo
jp
add
or
jg
scas
sub
jno
adc
cmc
push
dec
add
inc
pusha
loope
aas
test
xchg
jge
pop
add
aam
pushf
call
data16
add
ficom
aas
mov
mov
fbld
or
lock
jg
mov
(bad)
je
in
shl
push
enter
jmp
aas
outs
xor
lahf
or
and
jbe
out
adc
test
stc
(bad)
cmp
xor
and
out
ja
jno
inc
or
aas
mov
push
gs
xor
or
fist
rcr
aas
(bad)
aaa
cld
add
jg
cmp
fdivr
and
sub
int
mov
jg
call
mov
rol
ss
jnp
rcr
pop
(bad)
jg
call
ja
xor
xchg
dec
mov
pop
adc
lock
loopne
jge
xor
sahf
and
xor
(bad)
aas
(bad)
aas
jl
les
pop
sbb
jle
mov
pop
lahf
test
jmp
jmp
mov
pop
mov
nop
xchg
xor
cmp
lea
retf
cmp
call
(bad)
out
jg
call
int3
lea
pop
push
xor
pop
iret
jg
jg
push
and
mov
cmp
aaa
ret
and
lahf
(bad)
jg
cmp
popf
(bad)
jl
call
jae
mov
(bad)
out
(bad)
cmp
aas
pushf
cmp
sub
nop
repz
sub
xchg
fild
(bad)
jg
mov
cmp
inc
push
fadd
std
pop
cmp
loope
aam
(bad)
mov
cmp
add
adc
mov
push
out
hlt
test
pop
clc
mov
pop
aas
clc
rcr
test
adc
mov
cs
(bad)
call
iret
test
mov
push
inc
mov
aam
test
aaa
mov
(bad)
(bad)
mov
aam
test
inc
retf
in
ret
inc
fsub
test
(bad)
repnz
out
(bad)
jmp
inc
sbb
fiadd
aas
daa
stos
xor
imul
(bad)
sub
inc
push
fwait
sbb
das
int3
xchg
(bad)
(bad)
dec
lods
jbe
dec
mov
pop
mov
inc
iret
push
jbe
gs
ins
cli
sbb
call
outs
loopne
shl
jne
sar
aam
cld
dec
(bad)
mov
out
jmp
jl
mov
add
mov
jg
mov
lock
shl
je
push
daa
movs
jno
and
das
pop
rol
je
adc
mov
int
je
stos
fwait
jbe
and
lahf
dec
std
jmp
int
mov
mov
jno
mov
clc
jg
(bad)
aaa
test
aas
fdiv
mov
xchg
ss
call
jb
jne
cs
loope
sub
je
movs
pop
jb
out
mov
jbe
dec
ud0
mov
jb
mov
jo
call
mov
xor
jg
hlt
int3
jp
jno
outs
out
fucom
or
aam
push
jo
add
psubq
cli
out
test
(bad)
retf
push
xchg
or
aas
loopne
jmp
mov
das
xor
lock
outs
mov
mov
jg
pusha
or
add
mov
or
add
mov
pop
(bad)
(bad)
mov
into
mov
(bad)
mov
add
inc
ins
mov
bnd
push
es
sbb
test
add
mov
test
mov
mov
push
mov
(bad)
cmp
pop
push
add
sub
movs
lock
pop
std
dec
dec
popa
cmp
pop
(bad)
fldcw
sbb
repz
(bad)
jmp
rol
(bad)
(bad)
addr16
xchg
in
and
psubd
push
jmp
ins
addr16
es
out
add
push
mov
mov
adc
(bad)
(bad)
aas
iret
sbb
loop
gs
mov
ror
fs
mov
xor
fs
sbb
dec
stos
fnstenv
mov
xor
psubb
jnp
bound
aaa
cmc
push
ret
dec
add
sbb
xchg
jb
jge
jg
mov
mov
popa
mov
sahf
jb
(bad)
xlat
push
xchg
pusha
mov
movs
push
(bad)
jg
(bad)
aas
jo
into
mov
mov
cmp
sub
pop
mov
mov
inc
push
sbb
pop
mov
int3
mov
gs
mov
mov
ds
das
and
dec
hlt
pop
mov
fsubr
sbb
scas
(bad)
mov
test
inc
aaa
adc
sbb
dec
std
mov
(bad)
std
mov
push
mov
ins
std
dec
nop
inc
imul
jno
stos
jne
ud0
(bad)
mov
mov
call
push
dec
push
mov
cld
jmp
ret
iret
pusha
aaa
mov
into
xor
repz
xchg
fmul
jp
fadd
fbld
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
adc
sar
cmc
or
push
pop
pusha
enter
mov
lea
call
fldenv
mov
add
fnstcw
jne
jmp
sar
adc
mov
in
iret
scas
lea
mov
mov
cmp
adc
adc
mov
fcom
lahf
mov
(bad)
mov
pop
rcl
pop
add
adc
adc
inc
inc
add
xchg
daa
dec
add
cmp
jns
in
cmp
sar
daa
dec
sahf
xor
xor
in
add
xor
xor
cs
dec
sahf
cmp
sub
add
in
xchg
sub
and
sahf
cmp
inc
and
and
rcr
leave
xchg
daa
sbb
cmp
repnz
rcl
push
rcl
daa
dec
inc
adc
adc
in
jo
or
or
pop
inc
push
jns
in
add
add
mov
ds
adc
std
pop
inc
cld
cmp
repnz
cli
inc
stc
add
xor
daa
dec
sahf
add
xor
bnd
in
shl
out
shr
in
daa
dec
sahf
cmp
jmp
jmp
in
xchg
out
in
jecxz
loop
sahf
cmp
shl
fild
fiadd
daa
add
sbb
fcomp
(bad)
inc
aad
rol
dec
add
or
into
cmp
repnz
int3
inc
retf
ror
enter
sahf
rol
lds
les
in
add
rol
inc
mov
sar
in
xchg
mov
add
mov
mov
scas
inc
scas
in
xchg
daa
add
sahf
cmp
repnz
movs
leave
xchg
daa
dec
shl
jns
in
sahf
add
xchg
daa
dec
sahf
rcr
repnz
adc
nop
mov
cmp
mov
inc
pop
cmp
and
inc
lahf
enter
jo
add
pushf
xadd
in
mov
jo
add
sahf
sbb
xchg
pop
add
in
fld
jo
add
xchg
jo
cmp
nop
add
pop
add
mov
pop
inc
lea
or
enter
jo
fnstenv
add
sbb
jo
imul
and
add
pop
addr16
push
jb
inc
or
jg
sar
xchg
jle
inc
jge
sar
pop
cmp
inc
jnp
cmp
cmp
leave
sar
js
xor
dec
sahf
pop
shl
jne
sahf
sbb
pop
add
jo
iret
pop
shl
jo
iret
push
jb
shr
inc
outs
jo
addr16
shr
packuswb
cmp
push
add
jo
push
inc
cmovno
cmp
add
arpl
shl
inc
popa
and
iret
sahf
jo
add
jb
in
inc
pop
jo
pop
nop
xchg
addr16
jo
add
jo
add
fnstenv
rcl
dec
sahf
cmp
adc
push
add
in
fld
push
xadd
add
iret
sahf
sbb
dec
pop
ror
imul
and
jo
mov
pop
cmp
dec
xadd
sub
inc
nop
add
sbb
inc
add
add
and
add
fdiv
psrlw
jmp
mov
add
add
ds
(bad)
pop
dec
dec
sbb
stos
(bad)
jg
add
mov
inc
push
add
(bad)
std
addr16
lahf
push
daa
aas
jo
add
ds
sub
sar
jmp
add
std
es
stc
dec
mov
jmp
lock
dec
or
in
ds
jns
mov
call
sub
add
sbb
icebp
ds
test
mov
mov
or
or
mov
pop
pop
add
inc
hlt
xchg
mov
retf
sti
das
call
or
cmc
bound
mov
idiv
mov
jg
fs
cmp
aam
loope
into
fcomp
add
push
add
ds
mov
pop
mov
cmp
ret
es
add
(bad)
outs
adc
sar
loopne
or
mov
inc
(bad)
loopne
adc
ds
mov
or
sar
and
(bad)
out
(bad)
mov
mov
cmp
iret
pop
push
out
dec
add
mov
and
std
jg
(bad)
adc
es
add
aas
lea
and
pop
xadd
aas
mov
imul
adc
xlat
aaa
stc
xchg
xor
in
(bad)
out
cmp
add
jno
ins
loope
ins
out
add
adc
add
and
mov
mov
mov
dec
and
pusha
push
aas
jmp
cld
xchg
jg
loop
or
push
pop
and
aas
xor
cdq
(bad)
push
inc
xchg
sbb
pop
aas
jecxz
jb
hlt
sti
in
cmp
sub
or
sub
dec
addr16
mov
outs
(bad)
sbb
aas
stos
inc
mov
jb
add
aas
sti
jg
cld
fcomi
jae
shr
outs
add
pop
ror
xchg
sbb
imul
or
mov
aad
test
jb
and
out
jo
lock
mov
jno
lahf
dec
and
or
cld
bnd
not
das
xor
mov
or
loope
out
aam
inc
push
aas
iret
jmp
pop
test
aas
aam
add
aas
daa
push
lock
fisubr
ror
data16
xor
mov
(bad)
(bad)
(bad)
(bad)
push
inc
adc
jno
add
outs
jnp
pop
fist
nop
adc
out
addr16
and
imul
adc
sbb
pop
(bad)
pop
sti
push
call
push
adc
inc
cmp
das
aaa
sbb
into
xor
es
jmp
adc
aas
or
mov
add
pusha
adc
out
pop
mov
push
leave
pop
scas
xchg
push
rcl
ret
push
mov
ss
rcr
(bad)
(bad)
(bad)
and
aas
aam
adc
repnz
jmp
adc
jno
push
sub
add
and
rcl
aas
mov
pop
pshufw
adc
jl
aaa
pop
and
dec
icebp
dec
scas
ret
and
adc
pop
mov
jg
clc
jg
call
lock
daa
xor
aas
adc
push
sub
jp
mov
add
aas
mov
jmp
test
pusha
push
aas
ja
push
xor
mov
lahf
cld
sub
sti
call
call
aas
inc
out
mov
adc
fistp
adc
aas
and
(bad)
add
pop
(bad)
(bad)
std
(bad)
mov
sub
pop
jl
cmovs
rcl
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
aas
sub
sbb
bound
add
(bad)
out
(bad)
(bad)
sub
xor
push
lods
cmps
test
data16
inc
sbb
jl
jnp
(bad)
pop
loope
jle
dec
push
cmp
sbb
fnstcw
push
sbb
inc
pop
(bad)
loop
mov
aas
int3
jnp
mov
call
outs
loope
mov
aas
or
pop
iret
ror
adc
aas
movs
(bad)
dec
fisubr
pop
inc
jo
aas
cld
jnp
scas
and
(bad)
out
sar
(bad)
rcr
std
sbb
pop
mov
and
mov
jne
and
lahf
jg
cld
aas
pop
sbb
int3
imul
add
sbb
xlat
mov
inc
clc
cmc
outs
mov
dec
xor
aaa
mov
ud0
nop
sbb
int
test
fmul
sbb
xchg
(bad)
std
aas
mov
dec
dec
push
push
aas
or
daa
mov
push
mov
push
aas
movs
(bad)
xor
inc
scas
mov
aas
sub
dec
(bad)
fistp
pusha
pop
aas
dec
and
loope
mov
pop
aas
inc
sar
(bad)
push
push
outs
cmp
adc
aas
jmp
sar
sub
jmp
aas
leave
(bad)
mov
xchg
pop
mov
lock
xor
(bad)
(bad)
std
aas
shr
cwde
and
fcmove
and
call
lods
mov
adc
(bad)
lahf
shl
lock
nop
and
out
xor
and
mov
fcomip
jns
and
pop
or
and
repz
adc
out
pop
sub
aaa
sar
xor
mov
jne
inc
das
and
test
aas
ins
mov
push
fstp
jmp
das
add
fsub
aas
sub
cmps
push
mov
or
loop
or
and
and
inc
aas
hlt
pop
js
jns
(bad)
(bad)
fwait
out
adc
push
adc
popf
rcr
cmp
in
sti
(bad)
out
sbb
or
mov
fdiv
adc
inc
lock
(bad)
(bad)
(bad)
std
add
inc
sub
ss
add
daa
pushf
xchg
loope
outs
mov
(bad)
mov
xor
push
test
inc
js
aas
jne
jge
add
(bad)
jmp
inc
test
aas
sub
das
sbb
and
sbb
hlt
mov
dec
cmp
and
push
lods
popf
retf
pop
cmp
loopne
rol
aas
xor
lahf
adc
and
push
jg
jg
cmp
and
loope
fsubr
mov
dec
jmp
test
loopne
call
jnp
cmp
jg
call
sbb
push
ja
pop
sbb
jmp
sub
add
and
pop
inc
repnz
cld
mov
mov
or
cmp
push
shl
pop
cld
fs
add
add
aas
jle
dec
jl
or
in
push
xor
aas
push
les
test
pop
es
repz
ret
dec
scas
jg
out
push
push
pop
mov
sbb
mov
aas
add
(bad)
sti
test
daa
adc
es
or
pop
call
(bad)
mov
pop
mov
movs
retf
into
rcr
push
mov
ins
mov
scas
add
mov
popf
fwait
loope
sub
or
(bad)
out
stos
dec
add
shr
ret
aam
push
mov
sbb
aaa
(bad)
jmp
jl
das
push
mov
into
fs
out
mov
call
adc
sbb
jmp
sbb
mov
mov
lahf
adc
(bad)
push
test
outs
push
call
out
and
fnstcw
adc
mov
jg
push
pop
adc
ss
outs
es
adc
dec
icebp
inc
imul
adc
cmp
push
call
(bad)
adc
xor
jne
inc
retf
adc
sub
pop
adc
lea
scas
or
clc
mov
adc
repz
mov
(bad)
cmp
(bad)
js
call
mov
pop
ret
sbb
repz
add
pop
mov
fist
jmp
add
mov
cmp
dec
pop
into
fisttp
mov
(bad)
(bad)
mov
(bad)
adc
sub
mov
or
out
adc
jl
sbb
adc
les
outs
mov
add
(bad)
adc
mov
fdivr
sbb
adc
icebp
adc
add
adc
clc
jg
mov
movlps
jmp
inc
ins
in
adc
loopne
jg
in
adc
(bad)
idiv
or
xchg
in
adc
div
out
adc
adc
mov
ret
test
(bad)
out
adc
imul
inc
out
adc
jl
xor
mov
add
call
dec
adc
sbb
cmpxchg
outs
adc
(bad)
lock
aas
adc
mov
cs
mov
dec
adc
jae
das
xchg
mov
or
add
sbb
add
fimul
dec
pop
nop
(bad)
dec
mov
cmp
push
jg
xlat
lahf
push
mov
std
inc
sti
scas
(bad)
mov
aas
push
mov
retf
xchg
fisttp
xor
dec
(bad)
(bad)
stc
pop
sub
lahf
or
jge
mov
fstp
or
cli
(bad)
sti
push
or
cmp
mov
scas
xchg
paddw
idiv
add
fdivr
mov
cmp
or
lahf
fwait
lods
xor
jmp
(bad)
das
rcr
mov
(bad)
rcr
add
or
mov
ja
or
add
pop
loopne
add
sub
mov
scas
repnz
mov
add
loop
or
pop
icebp
xor
mov
loop
or
(bad)
mov
pop
mov
lahf
or
std
(bad)
scas
mov
aas
or
lock
pop
push
in
or
jo
lahf
es
out
arpl
or
xchg
js
lock
or
sbb
(bad)
mov
lods
js
sbb
add
call
jg
std
dec
popf
(bad)
jbe
sbb
pop
mov
or
aas
inc
(bad)
pop
mov
add
mov
mov
out
jmp
sub
inc
or
sar
lahf
add
mov
(bad)
aas
xchg
in
aas
add
push
scas
movs
dec
dec
cli
jg
in
fild
fmul
iret
add
in
jg
mov
(bad)
sti
xchg
fld
shl
lahf
pop
out
aas
add
adc
inc
out
fild
in
push
(bad)
mov
lods
jbe
cmps
out
jg
mov
xchg
push
das
cld
(bad)
std
jg
lock
add
mov
sub
loop
mov
push
inc
fidivr
(bad)
jmp
jg
icebp
pop
add
in
fist
repnz
mov
and
inc
scas
cmps
repnz
add
mov
aas
ret
pop
add
add
xchg
repz
mov
mov
(bad)
call
hlt
lahf
add
fdiv
add
call
jecxz
stc
xchg
scas
pop
jmp
mov
pusha
jmp
idiv
pop
(bad)
(bad)
mov
cs
pop
in
aas
(bad)
mov
push
mov
aas
push
in
jg
mov
loopne
cmove
mov
mov
(bad)
(bad)
aas
sar
push
(bad)
out
aas
cld
mov
daa
mov
dec
enter
jmp
mov
push
aas
test
mov
mov
inc
(bad)
pop
test
(bad)
stc
mov
inc
call
stc
mov
mov
iret
lahf
and
jg
mov
(bad)
repz
in
repz
(bad)
mov
das
cwde
pop
lods
hlt
push
mov
xlat
push
(bad)
adc
pop
push
jmp
sub
loopne
mov
mov
(bad)
aas
call
xchg
idiv
hlt
mov
sub
outs
outs
add
aas
hlt
mov
aas
adc
mov
(bad)
lock
fcomp
jmp
repnz
shr
stc
(bad)
std
inc
icebp
mov
pop
push
lahf
test
aas
icebp
mov
adc
xchg
jg
pop
add
jg
mov
or
out
dec
cmc
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
(bad)
idiv
mov
ins
fnstsw
adc
xor
clc
(bad)
jmp
cmps
out
mov
(bad)
stc
jg
mov
lock
push
dec
jmp
pop
loope
arpl
and
jg
mov
shr
pop
jg
jmp
mov
lods
jbe
inc
data16
cld
jmp
mov
xor
(bad)
arpl
dec
cld
jg
mov
stos
sahf
fbld
xlat
pusha
movs
cmp
push
fild
mov
retf
sti
adc
jl
dec
cmp
(bad)
(bad)
(bad)
fnstcw
mov
call
mov
mov
(bad)
aas
lock
call
mov
cmp
ss
cmp
sar
out
pop
jmp
adc
mov
push
push
(bad)
pop
sti
jg
jg
mov
loope
mov
inc
mov
shl
(bad)
(bad)
pop
inc
(bad)
push
or
(bad)
jmp
push
push
mov
pop
add
push
mov
(bad)
call
jg
aas
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
das
push
xor
(bad)
xchg
xor
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
inc
inc
lock
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
(bad)
(bad)
(bad)
fdivp
(bad)
imul
es
loop
xchg
mov
xchg
aas
inc
cmp
(bad)
(bad)
inc
sahf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
(bad)
(bad)
push
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
(bad)
(bad)
(bad)
call
sar
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
int3
xor
sub
aas
(bad)
movs
ins
mov
mov
mov
call
call
(bad)
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
(bad)
(bad)
call
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
(bad)
(bad)
call
in
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
(bad)
(bad)
call
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
(bad)
(bad)
(bad)
aas
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
(bad)
inc
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
(bad)
call
mov
cmp
fmul
inc
mov
test
repnz
aam
fist
nop
cmp
(bad)
(bad)
call
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
(bad)
(bad)
push
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
(bad)
(bad)
push
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
dec
(bad)
(bad)
(bad)
inc
jmp
ins
scas
mov
aas
mov
xchg
sahf
mov
(bad)
(bad)
(bad)
(bad)
jmp
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
push
adc
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
(bad)
(bad)
(bad)
push
sbb
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
cmp
(bad)
(bad)
out
add
fwait
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
(bad)
(bad)
(bad)
call
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
(bad)
(bad)
(bad)
(bad)
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
(bad)
(bad)
(bad)
call
or
iret
mov
out
xchg
mov
mov
sub
(bad)
(bad)
push
mov
movs
push
cmc
aas
call
mov
inc
outs
pop
cld
(bad)
(bad)
jg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
(bad)
(bad)
(bad)
fild
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
(bad)
(bad)
push
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
(bad)
(bad)
(bad)
push
aas
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
(bad)
(bad)
(bad)
push
aas
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
idiv
push
fs
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
(bad)
(bad)
(bad)
push
aas
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
(bad)
push
aas
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
(bad)
(bad)
(bad)
push
aas
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
idiv
das
cdq
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
(bad)
(bad)
push
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
clc
aas
xlat
xor
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
(bad)
(bad)
(bad)
clc
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
(bad)
(bad)
(bad)
(bad)
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
(bad)
(bad)
(bad)
(bad)
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
(bad)
(bad)
(bad)
(bad)
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
(bad)
(bad)
stc
aas
rol
popf
mov
icebp
mov
into
xchg
mov
lock
(bad)
(bad)
(bad)
stc
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
(bad)
(bad)
(bad)
cli
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
(bad)
(bad)
(bad)
(bad)
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
aas
xor
test
jp
sar
shr
xor
(bad)
mov
lahf
call
cli
aas
or
xchg
cmp
mov
sub
push
sti
aas
and
or
mov
mov
(bad)
sti
aas
pop
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
(bad)
(bad)
(bad)
(bad)
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
(bad)
(bad)
(bad)
(bad)
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
(bad)
(bad)
(bad)
cld
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
(bad)
jmp
dec
mov
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
cld
aas
fisttp
ror
add
cli
ret
pop
push
or
cld
aas
jb
adc
lea
inc
dec
sub
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
(bad)
(bad)
sti
fcomp
pop
std
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
(bad)
(bad)
fild
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
(bad)
(bad)
(bad)
jnp
xchg
cld
std
aas
pop
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
(bad)
(bad)
(bad)
dec
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
(bad)
(bad)
(bad)
jmp
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
(bad)
jmp
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
(bad)
(bad)
(bad)
jmp
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
(bad)
call
aas
push
xchg
movs
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
inc
ror
add
(bad)
cmp
mov
movzx
bound
pop
pop
(bad)
and
(bad)
jg
jg
(bad)
jg
addr16
jg
push
aas
mov
imul
(bad)
jmp
mov
aas
mov
cmp
mov
cli
inc
(bad)
mov
dec
scas
mov
(bad)
jg
add
inc
in
xlat
addr16
push
bswap
push
mov
clc
mov
fsub
(bad)
jg
xor
fimul
leave
ds
inc
or
sub
cwde
shr
cwde
jae
pushf
or
lods
sar
(bad)
(bad)
cmp
ds
imul
jmp
cwde
add
sysret
push
ins
pop
mov
les
ins
gs
ins
and
and
rcl
jg
inc
imul
jns
adc
adc
sub
lods
mov
dec
outs
and
imul
mul
inc
dec
inc
or
sbb
lds
and
ja
gs
xor
outs
imul
shl
popa
jb
mov
inc
adc
das
add
or
aaa
adc
add
aas
pop
xchg
imul
push
push
sub
and
add
std
and
fwait
add
xor
fiadd
jbe
stos
or
aas
push
mov
je
outs
outs
mov
inc
xchg
sub
stos
lock
jg
jge
outs
popa
jo
jb
jo
imul
dec
add
fild
in
je
outs
ins
and
gs
ins
lods
pop
out
adc
ja
adc
lods
in
add
imul
scas
lds
fs
mov
and
mov
jne
push
inc
sti
inc
imul
js
jae
jae
xor
add
add
out
fwait
sub
pop
inc
xor
ret
or
add
retf
pop
inc
mov
push
je
das
and
jb
jb
data16
in
mov
dec
add
and
imul
dec
mov
gs
mov
imul
arpl
ins
popa
daa
in
sahf
test
jb
retf
jg
sub
push
adc
inc
inc
sahf
mov
add
das
outs
jne
and
lahf
and
adc
shr
or
ror
(bad)
xor
call
aam
fsubr
bound
sub
(bad)
test
mov
or
fnstenv
inc
popf
add
aaa
and
aaa
jnp
push
sbb
(bad)
jl
jmp
fnstcw
add
add
(bad)
or
or
(bad)
aaa
std
jmp
imul
imul
outs
outs
inc
outs
fs
jo
outs
out
add
jae
add
ja
(bad)
mov
add
cmp
cmp
add
fs
outs
jle
sub
dec
and
and
dec
dec
das
fs
jns
jo
inc
repz
dec
add
inc
add
outs
clc
outs
icebp
inc
jb
add
add
push
jne
add
outs
add
add
or
mov
test
scas
popa
push
clc
add
adc
pop
cmp
pop
cmp
mov
sub
add
or
(bad)
call
and
dec
add
pop
sub
in
mov
and
add
sub
rol
out
add
xor
xlat
les
dec
push
dec
add
pop
sub
(bad)
mov
push
push
inc
add
(bad)
fst
wrmsr
xor
sub
inc
push
push
add
or
pop
cmp
gs
inc
pushf
sub
add
mov
sub
inc
add
xchg
xchg
dec
xor
sti
outs
mov
inc
inc
add
(bad)
mov
or
arpl
cmp
je
(bad)
ja
inc
dec
inc
add
inc
push
push
sub
or
and
dec
(bad)
fsubr
scas
inc
add
inc
inc
dec
and
pusha
gs
mov
xor
leave
xchg
fdivr
add
inc
push
dec
or
in
push
mov
push
add
sub
mov
ds
or
add
xor
inc
add
push
dec
cmp
sub
add
add
dec
fsubr
dec
push
mov
sbb
adc
mov
sub
cmp
xor
add
xor
fild
pop
inc
inc
add
add
sar
arpl
dec
cld
xchg
sbb
mov
add
inc
fdivr
loopne
push
inc
pop
fst
sbb
sub
dec
add
sub
jae
mov
or
sub
out
in
out
push
add
sub
push
sub
pop
leave
fst
push
add
sub
inc
in
or
xor
inc
inc
push
jbe
fsubr
scas
dec
add
cwde
sbb
scas
cmp
scas
pop
add
sub
pop
push
icebp
xor
pop
add
mov
cli
jb
addr16
xlat
push
jb
or
add
inc
popa
or
push
inc
adc
adc
jb
std
dec
adc
inc
outs
ins
outs
ins
bound
add
outs
sub
gs
or
imul
imul
push
push
mov
idiv
jg
popa
outs
popa
ins
sub
jne
gs
bound
jb
add
inc
outs
jae
popa
and
mov
(bad)
aas
push
ja
je
gs
popa
outs
add
sub
pop
(bad)
dec
inc
aaa
fs
jo
outs
imul
outs
fs
and
ja
rcl
add
jae
jb
int3
jge
sti
and
inc
outs
ins
and
cmps
inc
loop
sub
gs
cmc
inc
gs
imul
pusha
outs
(bad)
add
dec
cmp
jno
add
gs
jg
pushf
sti
aas
dec
arpl
xchg
into
add
vmovmskps
popa
outs
sbb
outs
arpl
add
outs
stos
inc
imul
adc
pop
xcrypt-cbc
cmps
push
jb
call
outs
sbb
adc
(bad)
(bad)
inc
or
adc
or
add
inc
add
pop
inc
inc
push
add
dec
dec
add
or
pop
pushf
pop
xchg
dec
dec
inc
add
or
int
jl
pop
dec
add
aas
mov
pop
push
push
adc
push
int3
ja
out
add
xor
dec
dec
push
add
sti
ja
sti
unpcklps
sldt
push
push
dec
add
pop
dec
add
ds
lock
loopne
in
pop
mov
inc
aad
jl
sub
inc
cmp
imul
outs
ins
add
je
adc
popa
and
lea
addr16
push
xchg
xor
mov
outs
jb
popa
or
pop
fs
(bad)
sbb
and
(bad)
(bad)
jbe
jne
jne
jb
outs
sub
jb
sbb
sahf
or
xor
outs
jp
add
ja
jp
aas
ret
push
push
jb
push
je
aaa
xor
sub
gs
aas
sbb
ja
jp
fiadd
pop
cld
ret
jge
and
gs
add
call
dec
ror
add
pop
shl
lods
dec
dec
inc
add
pushf
out
inc
mov
cwde
dec
add
jl
mov
pop
andps
pop
dec
dec
add
jne
stc
inc
dec
push
add
inc
sbb
inc
outs
adc
cld
std
jae
inc
xor
dec
add
or
inc
add
repnz
add
dec
add
dec
add
pop
add
add
cmp
add
pusha
push
inc
push
inc
(bad)
cmp
enter
add
add
add
add
mov
inc
add
pop
out
inc
push
dec
add
push
add
inc
dec
dec
add
push
push
add
adc
push
dec
add
push
inc
add
(bad)
jne
inc
pop
inc
add
add
arpl
ds
add
add
or
push
inc
add
pop
inc
(bad)
cmp
enter
add
add
add
pusha
repnz
add
cmp
add
(bad)
and
pop
add
add
(bad)
and
jge
push
inc
add
pop
inc
inc
push
pop
inc
dec
inc
add
mov
fadd
xchg
pop
pop
jne
popa
add
mov
xchg
jae
imul
popf
cmc
push
jae
sub
popa
add
jne
ins
(bad)
sbb
pand
outs
add
inc
mov
nop
ja
fwait
shl
inc
add
or
fnsave
adc
add
xor
ins
pop
sbb
mov
add
and
jb
int3
in
inc
adc
inc
inc
popa
xor
pop
gs
and
ins
jbe
cmp
shl
cld
mov
arpl
shl
sbb
loop
shl
dec
adc
or
leave
adc
pop
data16
imul
fwait
loop
sbb
jo
shl
out
fdivr
ins
imul
ja
or
or
outs
jns
jae
add
adc
pushf
add
outs
imul
push
ret
or
je
outs
sub
popf
jnp
int
pop
pop
addr16
or
fwait
sub
add
ins
rol
rcl
push
imul
popa
stos
xchg
pusha
retf
bound
punpcklbw
xchg
mov
adc
xor
(bad)
retf
neg
lods
add
adc
out
pop
lock
mov
sbb
push
or
add
inc
in
test
movs
psadbw
leave
imul
imul
mov
mov
jp
inc
xor
xor
add
jo
adc
add
arpl
sub
mov
adc
and
adc
mov
popa
daa
clc
add
ins
imul
mov
addr16
daa
jae
fdivr
pop
sbb
mov
into
or
jb
pop
in
sub
and
inc
push
add
dec
jnp
pop
and
dec
ja
cdq
dec
add
sub
pop
jne
out
inc
push
add
ret
adc
and
out
imul
mov
dec
mov
(bad)
cmp
sbb
je
jae
rcr
push
outs
jo
inc
inc
pop
mov
cmovbe
jae
mov
inc
outs
inc
outs
js
pop
jg
(bad)
das
in
lods
out
mov
add
gs
fild
inc
ins
outs
addr16
outs
add
add
add
mov
aad
pop
inc
pop
push
sub
bound
add
or
and
add
jp
add
add
mov
(bad)
scas
jnp
adc
sbb
cwde
fist
add
push
pop
mov
pop
pop
or
dec
add
add
cmps
pop
stos
add
daa
(bad)
dec
add
add
jle
xlat
dec
enter
add
and
mov
das
and
xor
dec
pop
pop
inc
(bad)
dec
push
pop
adc
mov
rcl
xchg
adc
add
push
or
fistp
cmp
adc
jns
mov
add
or
cmps
xor
add
add
add
xchg
add
add
lea
mov
dec
add
dec
xchg
fnstsw
dec
add
fwait
dec
add
fwait
mov
add
jne
lahf
push
add
push
xchg
add
fwait
mov
loopne
jbe
mov
xchg
add
div
add
sbb
push
and
add
xor
and
js
or
add
add
add
add
jnp
shr
(bad)
fild
and
pop
add
add
jge
add
movd
idiv
jg
add
add
xor
sub
pop
mov
inc
pop
add
cmp
inc
add
push
or
add
add
add
adc
push
add
add
(bad)
fist
adc
inc
cmp
jb
push
add
add
adc
(bad)
dec
and
add
add
adc
adc
inc
lock
imul
add
add
ret
push
push
add
add
sbb
jnp
add
pop
add
sbb
mov
out
or
add
aaa
adc
mov
add
add
pop
add
data16
mov
push
add
and
inc
add
add
and
dec
test
dec
sar
sub
add
or
add
add
push
push
es
add
in
jge
shl
add
add
pusha
add
hlt
(bad)
jg
pop
or
rol
add
pop
add
add
sub
add
sbb
(bad)
(bad)
inc
add
add
add
jbe
push
add
add
das
bound
inc
add
add
xor
dec
add
jg
loope
add
xor
add
xor
add
xor
add
xor
jmp
pop
jb
add
add
cmp
ja
inc
ja
add
push
sub
jo
add
jl
ja
push
add
imul
bound
ins
out
add
ins
jl
fnsave
push
pop
add
mov
add
pop
add
jo
or
addr16
pop
push
push
jl
or
add
hlt
stos
jg
jo
cmp
xor
add
cdq
sub
loopne
inc
xor
mov
or
mov
push
add
add
mov
xor
add
push
popf
aaa
push
les
mov
add
add
add
xchg
aaa
push
add
xchg
pop
add
test
cmp
jmp
xchg
mov
mov
xchg
mov
mov
mov
call
dec
scas
push
push
inc
push
add
push
mov
inc
lods
pop
arpl
aaa
arpl
pop
dec
inc
dec
pop
pop
imul
xor
popa
jo
gs
inc
pop
push
sbb
cli
mov
cs
xchg
add
push
pop
add
sti
sbb
addr16
adc
add
pop
mov
pop
jl
cmp
jae
pop
sub
test
cmp
sldt
pop
sub
sti
xchg
aas
int3
adc
adc
out
int3
add
ins
pop
pop
mov
adc
lock
add
jbe
dec
out
adc
aas
sub
xor
jge
retf
rcr
out
dec
aaa
sub
mov
push
jge
sahf
or
pop
adc
sahf
jmp
aas
mov
mov
add
mov
dec
sub
or
sbb
add
adc
stos
repz
sbb
adc
inc
cmp
adc
xor
sbb
pop
sbb
inc
ins
adc
and
mov
or
adc
push
pop
cwde
fwait
inc
jae
sbb
hlt
imul
cdq
jae
add
add
add
dec
out
inc
xor
sub
fdiv
xor
adc
pop
adc
pop
add
inc
ret
sahf
jnp
xor
pop
add
xor
jge
je
inc
mov
jae
cwde
sbb
pop
imul
pop
mov
adc
mov
neg
add
jae
push
lds
mov
jnp
mov
aas
repz
adc
or
adc
and
inc
fidiv
sbb
or
data16
add
and
repz
mov
adc
add
push
push
out
jnp
adc
inc
or
or
pop
daa
pop
mov
adc
fiadd
xchg
sbb
ds
pop
sbb
inc
pop
loopne
jnp
jmp
les
fild
pop
xor
adc
push
and
fwait
sbb
fisttp
neg
dec
add
jo
and
xor
or
adc
in
popa
add
mov
test
daa
xchg
push
loope
pop
mov
xor
mov
pop
inc
retf
rcr
cmp
or
out
das
mov
pop
imul
sahf
mov
dec
cmps
and
sbb
arpl
sti
fsub
pusha
cmps
xor
das
jo
sbb
lock
mov
dec
js
add
adc
mov
fsub
xor
mov
dec
pop
ja
lahf
icebp
jecxz
pop
lock
and
dec
add
sbb
push
cmp
das
pop
pop
ret
dec
add
fbld
pusha
packsswb
jl
cmp
ja
add
mov
sub
or
pushf
pop
push
or
pop
daa
pop
mov
sti
pop
outs
push
ret
pop
movs
mov
scas
addr16
xchg
jnp
and
xor
jnp
add
outs
movq
jnp
pop
add
jnp
out
jnp
jnp
pop
jl
push
addr16
jnp
jge
mov
das
add
dec
data16
jge
cwde
pop
pop
mov
iret
jge
mov
pop
mov
xchg
sbb
cmps
add
pop
pop
fucomi
jae
jb
push
add
pop
pmaxsw
(bad)
push
ins
inc
scas
add
pop
add
dec
mov
add
add
pop
pop
and
or
cmps
sahf
mov
xchg
cli
add
inc
and
sbb
mov
das
push
jnp
jo
push
ret
test
iret
lea
adc
movs
sbb
xor
pop
cmp
pop
aaa
xor
scas
mov
cmp
inc
pop
push
sbb
add
pop
addr16
jmp
inc
jb
test
fisttp
pop
add
mov
mov
cmp
mov
test
in
jae
sti
mov
pop
mov
pop
mov
pop
imul
and
inc
add
pop
mov
xchg
xor
jge
jae
jae
pop
jae
pop
jae
idiv
pop
jae
pop
jae
lods
sti
fsub
pop
pcmpeqb
pop
or
pop
out
xchg
nop
jg
add
sti
fsub
pop
mov
dec
mov
jge
mov
iret
rol
addr16
sbb
bnd
pop
and
xchg
jae
iret
lds
pop
xor
out
aaa
test
shl
retf
pop
xor
sti
(bad)
pop
psraw
aaa
in
pop
(bad)
xor
test
or
jge
sbb
pop
and
jmp
idiv
pop
stos
inc
pop
cmovg
jbe
jmp
or
add
in
xlat
adc
pop
(bad)
pop
scas
jmp
test
pop
adc
cdq
pop
call
lods
push
mov
sbb
sub
inc
fstp
pop
call
jne
repz
or
add
add
add
es
ret
push
(bad)
shl
xchg
mov
mov
sbb
or
popa
rcr
pop
xor
push
and
mov
sti
fsub
or
pop
push
push
aaa
or
nop
inc
mov
scas
js
push
mov
xchg
push
ja
pop
out
jnp
imul
add
cmp
sti
js
fcmovnbe
or
lock
and
push
sti
fiadd
inc
sbb
xor
and
ret
mov
and
xor
inc
call
xchg
jp
imul
jae
test
ds
mov
dec
or
xchg
pop
inc
or
mov
pop
(bad)
int3
jge
xor
loope
dec
in
pop
inc
fistp
cmp
cmp
add
iret
jge
movs
daa
das
sbb
ja
pop
inc
out
idiv
pop
xchg
push
pop
mov
in
fcomp
pop
ins
pop
pop
jp
jl
mov
imul
jae
or
cmp
ja
pop
imul
out
mov
sysret
imul
fbld
inc
shl
xor
pop
sub
ret
fsub
and
clc
pop
sub
jge
or
fwait
es
mov
pop
fwait
inc
pop
pop
cs
pop
lahf
pop
pop
pop
pop
out
mov
pop
imul
enter
and
xchg
iret
jge
in
das
sub
packssdw
out
jnp
imul
imul
imul
idiv
pop
imul
fsub
ds
clc
pop
outs
add
push
pop
cmp
sbb
(bad)
pop
xchg
or
test
nop
xchg
push
and
fadd
jo
xor
ret
pop
dec
mov
sub
lahf
retf
fwait
pop
cmps
das
mov
jge
jae
inc
mov
jecxz
cmp
pop
fld
jecxz
pop
arpl
adc
mov
pop
or
fs
rol
and
nop
inc
push
aaa
inc
dec
nop
inc
push
sbb
outs
inc
push
sbb
pop
sbb
movs
mov
sbb
(bad)
rcr
fs
inc
push
out
std
and
mov
or
enter
dec
or
enter
imul
xchg
fadd
nop
and
xor
enter
and
out
int3
adc
(bad)
pop
dec
adc
hlt
fsub
pop
jnp
push
xor
sahf
cmp
add
or
sub
mov
sbb
sub
pop
pop
pop
jo
sti
int3
pusha
das
push
ret
sti
aas
js
dec
pop
mov
out
jae
sbb
stos
mov
jge
test
scas
mov
dec
rol
cmp
mov
dec
push
sub
hlt
fcom
imul
jae
mov
imul
and
jnp
jo
xor
xor
idiv
pop
xor
pop
lahf
inc
fdiv
fdivr
pop
cmp
jge
jae
cmp
cmp
pop
cmp
shl
and
sbb
iret
loopne
sbb
mov
xchg
jmp
test
xor
pusha
addr16
enter
sub
or
dec
pop
or
outs
jp
nop
or
enter
mov
enter
(bad)
shl
call
sbb
(bad)
das
aas
sbb
jmp
shr
and
cmp
push
jge
xor
popa
ins
mov
jae
aaa
test
and
pusha
inc
fadd
ret
movs
sub
xchg
xchg
dec
hlt
sub
dec
cmp
out
sub
pop
push
xor
add
pop
and
fs
adc
nop
add
inc
pusha
pushf
and
add
or
nop
mov
pusha
pop
or
xlat
loopne
or
pop
sbb
jmp
test
out
pusha
push
sbb
pop
and
loopne
mov
push
inc
and
adc
adc
and
pop
test
push
jmp
dec
jmp
jge
jae
and
mov
push
nop
retf
cmp
cwde
pop
mov
pop
xor
sahf
sbb
stos
pop
mov
mov
ins
or
and
sub
iret
jge
add
and
pop
daa
aaa
test
push
xor
dec
xor
and
mov
pop
and
sbb
jnp
pop
push
int3
and
aaa
test
dec
and
mov
pop
sub
sub
jae
sbb
and
fadd
sub
sub
inc
or
and
dec
mov
inc
xor
adc
xor
pop
and
neg
xchg
jnp
xor
adc
pop
sysret
or
imul
idiv
pop
pop
add
mov
idiv
dec
xchg
cvtdq2ps
pop
sysret
jmp
loopne
mov
imul
imul
outs
shl
imul
sub
sub
iret
test
pop
and
clc
pop
fcom
xchg
xor
inc
or
xchg
push
xchg
fsub
pop
xchg
pop
sysret
mov
sub
xchg
aaa
pop
sysret
fidiv
jnp
inc
setnp
sysret
pop
adc
cmps
arpl
mov
pop
xlat
outs
movups
out
sysret
adc
test
js
xor
pop
cmps
neg
call
out
out
sub
nop
mov
adc
xor
pop
sysret
stos
fcomp
pop
out
aaa
repnz
paddw
adc
pusha
pop
or
adc
sti
pop
push
pop
sub
xor
pop
pop
aas
pop
ja
xlat
add
pop
ret
pusha
pop
jge
jmp
packssdw
sub
jbe
jno
pop
cs
seta
mov
xor
lods
pop
pop
cmp
xlat
std
push
aaa
dec
add
je
and
iret
jne
out
pop
mov
pop
(bad)
lahf
jmp
into
pop
cmp
fld
pmulhuw
pusha
lahf
jmp
stos
out
pop
psubd
sbb
add
pop
sbb
push
xor
pop
neg
ss
add
imul
xor
pop
lods
pop
push
out
jae
jae
pop
movnti
mul
xlat
mov
pop
psubusw
push
in
xor
out
pop
push
cli
lods
add
pop
add
nop
inc
push
sbb
xor
sbb
inc
mov
or
stc
pop
push
adc
into
sysret
fnstcw
cmps
in
sysret
pop
pxor
jge
imul
pop
add
jmp
adc
sbb
es
xlat
add
pop
dec
or
xor
pusha
mov
inc
add
dec
jo
outs
xor
das
jg
mov
sar
sub
add
ret
out
cmp
adc
push
cld
dec
push
cli
xchg
std
fsub
or
or
pop
inc
mov
out
inc
test
pop
mov
xor
sub
add
mov
idiv
xor
pop
xor
cmp
neg
in
add
dec
add
fdiv
fdiv
adc
pop
aaa
mov
sahf
and
add
mov
mov
jno
dec
add
out
test
dec
adc
xor
and
dec
add
push
fsub
push
jae
lahf
inc
or
pop
iret
std
icebp
ror
int
add
pop
pop
mov
pop
jg
pop
out
pop
loopne
jo
das
push
pop
(bad)
popa
pop
cmp
pop
outs
pop
das
jge
add
add
(bad)
mov
pop
cdq
pop
das
add
xlat
mov
pop
jmp
pop
fadd
pop
das
rol
push
sbb
pop
mov
sahf
fwait
sub
xor
jmp
fwait
or
fwait
mov
pop
fwait
sbb
fwait
and
pop
pop
(bad)
out
inc
xchg
xor
das
inc
add
outs
out
inc
inc
and
add
inc
push
test
pop
xor
je
jo
cdq
and
or
test
nop
adc
cmp
dec
xchg
int3
sub
sti
fdiv
push
leave
pop
das
out
sar
pop
xchg
pop
arpl
pop
sbb
jle
add
fwait
sysret
arpl
loopne
fcomp
arpl
pop
sar
arpl
arpl
pmaxsw
arpl
arpl
sbb
push
sahf
fwait
arpl
fwait
mov
add
shl
out
jae
jmp
pop
daa
rol
mov
iret
pop
pop
mov
pop
icebp
out
sti
clc
pop
cmp
cmp
ja
fdiv
int3
pusha
pop
adc
hlt
inc
jge
jae
xor
inc
cmp
inc
inc
das
mov
iret
pop
xor
cmp
adc
xchg
ins
and
sti
fsub
inc
push
push
xlat
js
sbb
jae
pop
add
lahf
xchg
jae
out
jae
pop
mov
pmaxsw
out
mov
xchg
ret
int
pmaxsw
xchg
fadd
pavgw
xchg
out
lock
out
jae
psubw
sbb
adc
sysret
rcr
pop
sbb
mov
mov
and
in
jae
mov
pop
mov
pop
push
push
jnp
lahf
pop
pop
pop
(bad)
addr16
jb
mul
pop
mov
pop
cmovno
sti
fcom
test
mov
retf
fs
inc
loopne
mul
mov
add
dec
out
or
or
pop
and
and
pop
xor
and
and
loope
or
cmps
mov
and
or
mov
xor
outs
cmp
add
pop
sub
jo
repz
add
fdiv
js
inc
or
dec
out
div
jnp
movs
or
int3
pop
sub
inc
xor
test
cld
and
add
fsub
mov
pop
pop
dec
arpl
ja
std
sahf
xor
aaa
mov
and
mov
pop
sub
sub
jae
sbb
sub
shl
mov
push
sti
int3
adc
dec
jmp
test
mov
fisttp
xchg
out
ret
cmp
and
sub
phsubsw
inc
pop
cmovle
jge
retf
pop
fistp
aaa
fs
(bad)
jb
out
outs
pop
add
fild
lahf
ja
pop
fwait
inc
cmps
out
fsub
pop
pop
mov
dec
mov
cmps
fadd
pop
arpl
pop
paddusw
jb
imul
call
inc
icebp
out
jae
pop
wbinvd
inc
dec
mov
add
daa
sbb
fmul
or
cmp
sub
or
loopne
or
pop
or
cmp
iret
or
mov
pop
or
loope
mov
cmp
sub
cmp
and
sti
fsub
enter
pop
pop
fdivr
out
jae
pavgb
mov
and
add
pop
out
mov
sub
int3
sub
and
sahf
sti
fsubr
pop
pop
xor
xor
clc
jae
sbb
xor
xor
xor
pop
arpl
aaa
jo
and
xchg
xchg
inc
clc
cmc
int3
pushf
arpl
sub
sub
test
and
idiv
pop
or
jae
(bad)
add
jnp
out
jae
cmps
mov
pop
fadd
aaa
pusha
das
xor
lahf
idiv
xor
pop
inc
xor
mov
in
xor
xor
or
das
and
and
mov
adc
xor
hlt
lock
sbb
or
inc
or
das
cmp
xor
and
pusha
push
test
or
add
jo
mov
sbb
sar
inc
call
adc
jecxz
adc
xchg
dec
inc
shl
mov
and
pop
mov
jo
push
xor
xor
push
js
xor
pop
ds
clc
add
iret
test
sbb
and
cmpxchg
fdiv
pop
cmp
fdiv
neg
out
pusha
and
imul
sti
pop
in
add
adc
inc
inc
fdivr
mov
adc
test
and
xor
test
inc
xor
and
or
lock
cmp
aas
sti
jae
daa
pusha
jnp
mov
pop
das
(bad)
cmp
fcom
ins
or
add
and
nop
push
iret
add
cmp
sbb
mov
push
mov
sbb
pop
shl
push
in
jae
sub
pop
in
adc
das
loope
mov
and
inc
inc
adc
sbb
and
xor
out
xor
dec
inc
pop
pop
sbb
pop
sub
iret
sub
sysret
mov
cmp
pushf
dec
push
outs
test
push
lods
pop
xor
pop
inc
mov
fsub
or
sbb
inc
out
or
mov
and
and
add
xor
inc
fsubr
nop
test
adc
or
add
pusha
fcom
clc
or
xchg
sbb
xchg
icebp
or
test
adc
(bad)
sbb
add
sahf
sbb
aaa
sub
jnp
xchg
push
les
(bad)
adc
jmp
bound
jo
scas
arpl
int
out
adc
add
fadd
jbe
fistp
pop
dec
aam
cwde
sti
fcom
shl
cmp
pop
sub
mov
jnp
inc
sti
pop
add
push
sbb
sti
pop
push
dec
mov
fsub
ds
xor
cmp
pop
xlat
inc
pop
adc
sti
out
pop
cmp
mov
fdiv
aaa
movs
and
mov
sub
push
jp
rcl
ja
cmp
jnp
enter
sti
xchg
mov
and
pop
and
sbb
inc
pop
shl
xor
idiv
pop
arpl
pop
pop
sbb
sbb
dec
lahf
add
sbb
imul
jmp
jge
mov
pop
sbb
cmp
pop
mov
xor
imul
xor
imul
sbb
pop
dec
lods
pop
stos
das
fmul
imul
stos
and
lock
iret
clc
pop
out
jae
cld
daa
add
push
pop
iret
sbb
lahf
sti
enter
pop
out
pop
iret
inc
iret
jge
jae
iret
dec
pop
iret
pop
pop
(bad)
loopne
adc
adc
cmp
mul
pop
xchg
cmp
jge
test
bsf
loope
iret
or
imul
arpl
idiv
in
iret
in
pop
ret
ds
test
add
dec
stos
sbb
inc
add
not
and
push
cs
mov
inc
hlt
pop
pushf
addr16
jae
fdivr
pop
sub
pop
jp
in
jnp
aas
sub
xor
sub
sbb
dec
scas
lods
xor
lahf
mov
and
add
pop
das
jne
sbb
jae
pop
jge
outs
ffreep
sahf
sti
cmps
call
call
sbb
mov
shl
or
push
outs
and
inc
fild
jmp
xor
ret
pop
adc
and
in
pop
add
or
fmul
(bad)
adc
dec
add
mov
movhps
rol
repnz
push
xchg
dec
aas
int3
std
inc
xchg
mov
dec
add
dec
add
aaa
sbb
dec
add
cmp
add
sbb
add
add
(bad)
inc
add
add
add
push
dec
add
xor
shl
fmul
les
mov
movs
pushf
xchg
dec
shl
pusha
add
pop
push
add
push
pop
jne
add
jne
mov
js
fwait
scas
jmp
push
mov
aam
repz
and
out
add
dec
ins
adc
xchg
jmp
mov
adc
add
hlt
xchg
clc
or
jne
dec
add
adc
add
cs
inc
push
std
pop
in
xchg
inc
add
pop
bound
pop
arpl
je
jmp
imul
outs
jb
jae
fs
pop
or
push
add
add
je
outs
data16
add
mov
addr16
movs
add
xor
adc
add
(bad)
(bad)
fistp
add
xor
push
ja
and
cmps
sbb
(bad)
outs
test
cmp
(bad)
push
cs
test
xchg
in
mov
mov
inc
test
stos
mov
(bad)
(bad)
jg
stc
jb
nop
bound
popf
fmul
and
ins
ds
clc
sahf
(bad)
(bad)
(bad)
(bad)
mov
fidiv
adc
jb
mov
pop
xchg
out
ret
jns
mov
aam
(bad)
(bad)
call
mov
jmp
sub
mov
les
xor
adc
(bad)
inc
inc
ret
mov
das
mov
jl
push
sbb
imul
and
mov
(bad)
(bad)
(bad)
push
inc
movs
js
xor
xchg
xlat
lock
cwde
sbb
adc
pop
and
(bad)
(bad)
jmp
sbb
nop
inc
add
sub
push
pushf
leave
cmp
dec
je
jmp
jo
mov
inc
adc
nop
(bad)
(bad)
(bad)
(bad)
call
mov
xor
rol
cmp
hlt
sbb
mov
shr
(bad)
(bad)
(bad)
call
adc
add
add
test
sar
(bad)
mov
mov
cmp
cmp
(bad)
(bad)
cmp
repnz
aam
sub
mov
cmc
mov
inc
pop
leave
in
not
cmps
xor
ja
fnstsw
(bad)
(bad)
jmp
xchg
inc
jb
jge
jg
ja
neg
pusha
and
ret
sub
mov
scas
(bad)
(bad)
(bad)
dec
in
loop
dec
push
and
fld
stc
daa
push
scas
bound
add
dec
hlt
cmc
int
(bad)
(bad)
inc
push
xchg
mov
iret
mov
inc
dec
imul
movs
inc
add
fild
cmc
scas
mov
(bad)
call
dec
in
rcl
xor
jp
pop
sbb
xor
mov
fbld
(bad)
(bad)
(bad)
jmp
mov
sub
push
and
and
addr16
mov
xchg
sar
(bad)
(bad)
(bad)
mov
push
fistp
je
lahf
cld
xlat
adc
test
cmp
in
sub
inc
jmp
sub
lds
mov
mov
arpl
mov
pop
xchg
aas
sar
scas
add
(bad)
call
and
pop
jns
loope
dec
jns
and
mov
psrad
data16
(bad)
cwde
mov
(bad)
(bad)
jmp
ror
retf
out
xchg
xor
jecxz
cmps
adc
cdq
cmp
inc
outs
cmp
mov
(bad)
(bad)
push
or
jmp
sti
jecxz
dec
call
jno
fs
cmp
repz
and
(bad)
(bad)
jmp
mov
sub
jecxz
dec
and
jb
jo
imul
mov
push
loope
stos
shl
test
pushf
push
mov
lods
icebp
jb
add
jge
outs
imul
std
int3
mov
(bad)
(bad)
inc
lea
mov
mov
fldenv
in
push
sahf
sub
in
lahf
test
add
push
loope
cdq
stos
cld
or
adc
(bad)
out
mov
scas
jecxz
in
ja
cmp
(bad)
(bad)
mov
fmul
inc
call
mov
dec
(bad)
xchg
fs
das
lea
sbb
in
stc
(bad)
(bad)
(bad)
jmp
cmp
sbb
outs
lock
mov
loop
cli
mov
and
scas
pop
jae
and
(bad)
(bad)
call
push
or
inc
mov
retf
sbb
sbb
sbb
ret
ja
(bad)
(bad)
jmp
jl
pop
jo
popa
pop
imul
arpl
mov
and
xor
sbb
jmp
lock
retf
ret
(bad)
(bad)
(bad)
dec
push
call
hlt
ror
sbb
and
in
sbb
add
(bad)
(bad)
(bad)
call
dec
fsubr
mov
xchg
jbe
jmp
cli
pop
push
sub
sbb
sub
jp
cmp
and
(bad)
(bad)
(bad)
inc
cmovg
pop
(bad)
sti
pusha
mov
push
mov
(bad)
adc
enter
(bad)
(bad)
push
mov
sub
stos
out
repnz
cdq
add
test
dec
jle
sbb
mov
stos
jecxz
pop
(bad)
out
mov
jg
shr
test
shl
fdiv
(bad)
(bad)
jmp
push
inc
outs
mov
outs
cmp
mov
mov
test
shr
inc
jnp
dec
mov
(bad)
(bad)
call
mov
push
cmp
rcr
jle
js
dec
xor
sub
pop
sbb
mov
(bad)
call
mov
stos
ficom
clc
push
add
or
gs
les
(bad)
(bad)
(bad)
(bad)
mov
pop
sub
jb
bswap
ret
(bad)
mov
mov
sbb
cmp
(bad)
(bad)
(bad)
call
leave
int3
xchg
dec
jae
imul
or
cwde
ins
shl
clc
icebp
outs
(bad)
or
into
and
(bad)
(bad)
jmp
popa
mov
popa
cdq
xor
push
pop
(bad)
ficom
mov
in
mov
sbb
out
iret
(bad)
(bad)
(bad)
call
in
jle
add
icebp
push
out
cli
addr16
repz
clc
xchg
and
(bad)
(bad)
(bad)
dec
xchg
dec
jo
pop
inc
inc
xchg
sbb
jmp
cs
push
into
pop
std
add
mov
(bad)
call
and
sub
add
stos
ja
outs
or
lahf
xchg
js
(bad)
(bad)
(bad)
dec
mov
or
add
lahf
sbb
xor
test
(bad)
(bad)
call
cmp
push
fs
int3
ror
(bad)
scas
out
cmp
and
xor
and
pop
(bad)
(bad)
(bad)
dec
sbb
push
jns
pop
(bad)
xchg
adc
les
xchg
lods
(bad)
pop
sub
pushf
or
(bad)
(bad)
dec
repz
or
dec
push
das
je
mov
pop
stc
mov
loope
or
push
retf
add
(bad)
(bad)
(bad)
cmp
sub
and
dec
inc
rcr
scas
aas
add
lods
in
int
stos
and
dec
mov
(bad)
(bad)
(bad)
fcom
ret
lahf
push
inc
add
hlt
jl
test
push
daa
fcom
call
jns
call
ud0
(bad)
jmp
fiadd
daa
mov
sbb
inc
(bad)
adc
dec
push
sahf
retf
jl
pop
xchg
(bad)
(bad)
(bad)
dec
inc
jbe
mov
xchg
add
inc
out
mov
add
arpl
pop
fidivr
(bad)
(bad)
call
call
xor
and
in
sbb
lea
(bad)
(bad)
(bad)
jmp
or
pop
mov
test
lahf
fsub
in
adc
sbb
add
(bad)
push
dec
adc
(bad)
and
(bad)
sbb
mov
icebp
jl
mov
(bad)
inc
les
loop
test
outs
ret
push
jae
fwait
cmc
outs
pop
shr
rol
push
dec
sbb
(bad)
(bad)
(bad)
dec
imul
ins
ficom
jae
mov
shl
xor
enter
(bad)
mov
or
dec
add
jg
iret
imul
into
sub
xor
cmp
jnp
(bad)
(bad)
dec
hlt
retf
jb
repnz
enter
sub
add
inc
mov
aas
fisubr
inc
ret
xor
mov
sub
imul
add
pop
(bad)
(bad)
(bad)
jmp
repz
aaa
test
push
xchg
mov
or
dec
sbb
push
out
push
mov
gs
(bad)
(bad)
(bad)
jle
pusha
addr16
sti
jno
loop
pushw
jne
loope
mov
or
fcomp
(bad)
(bad)
(bad)
push
jno
mov
adc
and
loop
mov
(bad)
cmp
add
sbb
(bad)
(bad)
(bad)
call
inc
or
xchg
js
aam
and
push
std
cmps
cmp
sbb
data16
(bad)
(bad)
call
mov
in
ins
inc
in
mov
ror
retf
inc
sub
aas
cmps
mov
mov
pop
add
pop
cmp
test
bound
jmp
xor
(bad)
aad
sbb
(bad)
(bad)
(bad)
(bad)
cmp
sub
cwde
retf
mov
mov
cmp
jg
mov
fcomp
gs
and
(bad)
(bad)
call
jns
out
fnstenv
mov
retf
std
cmp
and
jge
test
(bad)
(bad)
dec
cmp
test
adc
mov
das
push
cdq
xor
and
pop
ins
push
mov
(bad)
(bad)
(bad)
inc
xchg
jg
fstp
fisubr
adc
push
jle
retf
xor
outs
retf
(bad)
(bad)
(bad)
push
or
mov
xor
out
out
aas
jmp
inc
loop
jmp
(bad)
(bad)
jmp
mov
and
or
push
sub
icebp
icebp
xlat
mov
or
js
and
xor
add
(bad)
inc
mov
mov
xor
mov
xor
les
sbb
(bad)
inc
jns
push
jg
clc
pop
retf
xchg
fdivrp
(bad)
(bad)
call
fistp
ins
jnp
pop
adc
in
(bad)
out
cmp
data16
jmp
mov
adc
add
push
inc
push
in
call
sub
inc
fistp
mov
(bad)
(bad)
(bad)
call
push
mov
or
cmp
scas
push
out
repnz
xchg
movs
loop
sub
or
pop
or
jl
(bad)
(bad)
(bad)
in
xor
(bad)
std
add
stos
sbb
or
sub
(bad)
aaa
rcr
or
inc
cld
aaa
ja
lahf
(bad)
(bad)
(bad)
dec
icebp
push
leave
pop
pop
xor
rcr
jns
xor
popa
or
neg
notrack
dec
rcr
sub
dec
or
adc
sar
loop
pop
pop
sbb
ds
mov
(bad)
fnstsw
(bad)
(bad)
(bad)
jmp
(bad)
sub
jle
hlt
mov
leave
jl
inc
stc
and
aaa
dec
adc
cmp
mov
(bad)
(bad)
(bad)
dec
leave
(bad)
add
int
fmul
and
dec
add
cmps
repnz
push
adc
dec
(bad)
std
mov
xlat
(bad)
(bad)
(bad)
push
inc
pop
inc
sub
push
fwait
cdq
js
mov
cmp
inc
pop
test
(bad)
(bad)
(bad)
call
pushf
sub
imul
mov
(bad)
pushf
add
pop
sahf
(bad)
std
test
xchg
(bad)
(bad)
(bad)
dec
pop
js
pop
lds
push
sub
jbe
xchg
mov
retf
in
add
jmp
(bad)
in
sub
add
xchg
jmp
sbb
xor
jb
(bad)
(bad)
call
sub
in
out
xor
jle
stc
in
hlt
sub
add
xor
out
adc
(bad)
(bad)
call
xor
fs
mov
das
xchg
dec
mov
aaa
pop
xor
mov
(bad)
(bad)
dec
xchg
cwde
icebp
ins
sbb
sbb
xor
sbb
mov
and
(bad)
push
stos
jp
aas
pop
sbb
xchg
sub
data16
mov
adc
add
(bad)
(bad)
(bad)
call
and
cmp
in
movs
enter
jp
sar
sub
push
or
(bad)
(bad)
call
push
cli
jns
pop
bound
inc
push
cmp
push
les
pop
gs
(bad)
(bad)
(bad)
jnp
lods
ss
xlat
out
pop
loope
cli
mov
xor
jns
dec
or
jl
cmps
sub
(bad)
(bad)
(bad)
call
inc
(bad)
es
fild
mov
std
test
ret
pop
scas
(bad)
mov
(bad)
(bad)
jl
stos
cmps
ret
xor
cmp
mov
lods
es
and
mov
adc
dec
clc
sbb
(bad)
(bad)
jl
sub
data16
out
out
push
adc
sub
pop
arpl
jb
or
(bad)
dec
es
shr
inc
js
fwait
inc
sahf
stos
fimul
jae
into
js
and
inc
(bad)
(bad)
(bad)
dec
push
xor
stos
dec
je
or
icebp
stos
popa
pop
xor
cmp
rcr
pop
(bad)
(bad)
(bad)
jmp
mov
add
jge
mov
das
mov
dec
or
repz
in
(bad)
(bad)
(bad)
inc
push
call
jbe
bound
mov
adc
jmp
scas
or
(bad)
ss
(bad)
(bad)
inc
bound
aad
aad
pop
test
imul
sub
dec
aaa
adc
hlt
bound
(bad)
inc
stos
sub
inc
dec
lods
es
and
int
ins
jle
pop
out
and
(bad)
(bad)
jmp
sub
lods
fnstenv
mov
(bad)
(bad)
fstp
inc
(bad)
loopne
or
cwde
lock
(bad)
(bad)
(bad)
call
mov
jmp
xor
icebp
push
cmp
ret
pop
imul
pop
repz
jnp
(bad)
(bad)
push
adc
test
adc
je
in
sub
mov
lock
cdq
mul
mov
(bad)
(bad)
(bad)
cmp
inc
mov
sub
lods
lock
enter
movs
hlt
and
fwait
enter
(bad)
(bad)
jmp
cmps
jecxz
inc
jae
cmp
out
(bad)
adc
adc
jmp
adc
(bad)
(bad)
(bad)
cli
mov
imul
push
test
inc
les
sbb
out
aas
enter
repnz
dec
stos
popf
push
xchg
(bad)
(bad)
(bad)
cli
and
rol
data16
ins
xchg
gs
neg
imul
xchg
(bad)
(bad)
(bad)
(bad)
mov
sbb
sahf
inc
fadd
dec
jb
adc
popa
lea
(bad)
(bad)
call
fild
or
mov
(bad)
out
push
leave
mov
xchg
mov
scas
mov
leave
inc
lods
in
and
aam
(bad)
(bad)
(bad)
jns
pop
aam
mov
test
xchg
out
pop
das
icebp
xchg
hlt
lods
mov
js
add
push
mov
push
mov
xlat
scas
pop
xchg
sbb
shl
cmp
popa
pcmpgtw
mov
lock
addr16
(bad)
(bad)
(bad)
dec
movs
std
adc
std
mov
aaa
pushf
out
jge
mov
adc
pusha
push
rcl
add
jp
(bad)
(bad)
jmp
or
clc
inc
sbb
aas
out
add
push
(bad)
in
mov
js
out
(bad)
(bad)
(bad)
call
movs
push
inc
test
sub
add
les
jecxz
fmul
(bad)
(bad)
(bad)
call
cmp
mov
mov
add
jl
retf
add
cmp
(bad)
cmp
mov
(bad)
dec
in
push
stos
test
repnz
adc
ja
loopne
daa
jg
fst
dec
std
mov
(bad)
dec
jmp
leave
cmp
adc
lds
jae
push
ins
xchg
in
outs
push
adc
(bad)
(bad)
(bad)
(bad)
cld
sbb
add
movs
cmps
sbb
jne
dec
push
fs
les
ror
add
(bad)
(bad)
inc
xchg
and
jns
mov
push
xchg
mov
fyl2xp1
int
call
mov
and
repnz
(bad)
(bad)
call
es
mov
mov
fwait
cmp
jns
ja
ficomp
inc
or
lds
xor
dec
(bad)
(bad)
(bad)
(bad)
aas
outs
add
mov
cmp
cmp
fmulp
dec
ds
scas
sub
sbb
lods
jmp
(bad)
push
pop
xchg
in
jecxz
and
retf
cmps
lods
adc
sub
mov
mov
dec
ret
loop
xchg
popa
fimul
ret
push
cmps
(bad)
mov
jb
(bad)
(bad)
dec
cmp
adc
or
jns
pop
jae
(bad)
clc
inc
dec
jp
ds
mov
sbb
mov
movs
cmp
or
mov
xor
xchg
cmps
(bad)
(bad)
(bad)
jmp
movs
sub
fwait
rol
lods
or
arpl
fsubr
adc
not
(bad)
(bad)
(bad)
dec
xchg
rcl
popf
movs
or
cmps
std
adc
or
jb
enter
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cs
and
adc
mov
pop
sub
xchg
push
xchg
cmp
scas
sub
(bad)
(bad)
(bad)
mov
std
mov
into
scas
cdq
and
movs
xor
retf
jecxz
mov
pop
cmp
hlt
aam
int3
repz
mov
or
xchg
scas
and
sbb
jno
adc
(bad)
(bad)
call
sbb
jecxz
ja
retf
lds
ffree
sub
jge
mov
lods
sbb
(bad)
jmp
es
dec
loopne
cmp
sub
das
fist
dec
mov
loop
inc
iret
cmp
mov
call
movs
dec
jo
pusha
mov
push
add
enter
mov
pop
fadd
(bad)
out
inc
push
inc
hlt
push
xchg
xor
(bad)
(bad)
call
outs
lods
and
pusha
mov
es
int3
psubusb
jb
adc
inc
div
mov
(bad)
(bad)
(bad)
call
out
data16
js
push
xchg
ror
xor
inc
mov
cmp
je
(bad)
(bad)
push
shl
and
lods
sub
fsub
loopne
and
sub
xor
pop
addr16
(bad)
(bad)
call
adc
mov
pop
pop
and
pop
dec
push
mov
sbb
push
adc
test
jl
or
fdiv
cmps
inc
push
mov
shr
cmc
(bad)
xchg
icebp
jne
(bad)
(bad)
(bad)
jmp
lods
fisubr
repnz
add
arpl
mov
mov
mov
std
mov
test
out
(bad)
(bad)
(bad)
jmp
cmp
xlat
ins
add
loopne
mov
pop
sahf
stos
push
inc
cmp
hlt
and
lods
(bad)
(bad)
(bad)
jmp
ss
push
inc
sub
lea
mov
rcl
push
nop
out
mov
jmp
jne
(bad)
(bad)
(bad)
(bad)
add
jecxz
xchg
into
jae
or
push
loop
add
xchg
push
adc
xor
popf
les
cmp
(bad)
(bad)
(bad)
in
pusha
push
das
jg
xchg
jbe
arpl
jmp
or
std
jmp
loope
iret
push
sub
(bad)
(bad)
(bad)
jmp
js
xchg
mov
sbb
bound
cmc
sbb
je
lock
(bad)
(bad)
(bad)
cmp
mov
rcl
or
out
xchg
das
add
(bad)
iret
mov
nop
nop
aas
pushf
enter
dec
(bad)
(bad)
(bad)
jmp
mov
inc
xor
mov
lods
jo
popa
sbb
adc
out
pop
mov
(bad)
(bad)
jmp
(bad)
cld
hlt
pop
and
pop
daa
test
cld
jle
mov
add
popa
ds
aas
(bad)
mov
adc
and
lods
(bad)
and
cmps
inc
pop
dec
(bad)
repz
(bad)
xchg
sub
ins
call
test
mov
mov
jo
ja
pushf
xor
popa
pop
pop
push
pop
ud2
bound
jl
(bad)
(bad)
(bad)
dec
daa
pushf
adc
loope
xchg
mov
xor
shl
and
nop
sbb
(bad)
(bad)
call
pop
and
pushf
xor
ror
imul
xchg
cmp
pushf
jmp
inc
(bad)
(bad)
(bad)
push
dec
out
ins
pop
scas
ins
shl
xchg
lahf
jecxz
lea
fidivr
leave
pushf
adc
inc
push
je
mov
dec
sbb
repnz
xchg
in
mov
mov
test
rcl
out
mov
push
stos
shl
stos
std
push
push
adc
in
fdiv
out
dec
adc
jno
and
jle
(bad)
(bad)
(bad)
inc
xchg
outs
int3
std
call
cmp
in
xchg
movs
outs
jge
loopne
push
mov
inc
int3
pop
dec
jecxz
outs
(bad)
(bad)
(bad)
jmp
pop
adc
dec
jnp
fadd
add
aad
mov
pop
or
movs
mov
outs
pop
pop
out
(bad)
(bad)
(bad)
call
jae
std
jbe
xchg
jg
pop
adc
add
mov
jne
mov
fs
jecxz
(bad)
(bad)
jmp
add
pushf
xor
out
fimul
ja
xchg
ja
add
mov
inc
(bad)
ja
(bad)
(bad)
call
sub
sub
add
xchg
cwde
jge
pop
mov
fst
(bad)
(bad)
(bad)
push
scas
pop
dec
int
sbb
cmc
cmp
sub
xor
daa
shl
jns
dec
jnp
repnz
add
dec
jo
mov
add
or
xchg
dec
dec
inc
push
add
add
or
add
mov
add
inc
dec
fild
inc
add
push
sbb
je
lock
call
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
(bad)
push
jl
jno
gs
add
dec
inc
inc
push
js
(bad)
stc
(bad)
(bad)
aas
add
xor
xor
(bad)
(bad)
(bad)
inc
mov
or
dec
hlt
sub
add
sub
inc
je
push
pop
push
(bad)
(bad)
(bad)
inc
add
inc
test
test
cwde
sbb
sub
fisttp
int3
dec
(bad)
stc
popa
clc
unpcklps
inc
sub
jp
add
test
dec
ret
or
es
(bad)
(bad)
(bad)
mov
add
add
inc
mov
add
and
repz
(bad)
push
cmp
xor
jae
imul
ja
inc
shr
push
or
inc
stos
in
popa
sbb
(bad)
(bad)
(bad)
jmp
mov
dec
add
mov
shr
xchg
dec
sub
xor
xchg
mov
(bad)
(bad)
jg
jg
adc
pop
add
mov
clc
or
pop
mov
std
(bad)
(bad)
call
add
mov
inc
add
pop
add
loop
std
(bad)
(bad)
fist
push
sti
jae
cmps
cmps
sub
sti
sti
fwait
stos
stos
stos
sbb
icebp
icebp
dec
mov
std
(bad)
(bad)
(bad)
inc
std
cmc
fnstsw
jg
out
int3
cdq
xor
dec
cdq
jb
loop
mov
(bad)
(bad)
(bad)
call
add
loope
inc
add
bound
fldenv
adc
sbb
(bad)
call
inc
vpaddsw
jl
rcr
mov
js
ins
push
adc
add
(bad)
mov
inc
movs
mov
add
push
repz
imul
or
xchg
mov
jecxz
fldenv
test
push
jecxz
xchg
outs
add
out
(bad)
inc
test
xor
xlat
(bad)
outs
fistp
adc
sbb
call
jmp
lfs
clc
push
int
lahf
inc
sub
inc
imul
pop
inc
xor
aam
(bad)
(bad)
mov
test
sahf
cmp
xor
js
push
inc
add
lods
mov
fnsave
(bad)
(bad)
(bad)
push
push
push
fnsave
sbb
out
cmp
out
inc
pop
add
sbb
(bad)
sti
jmp
sbb
push
test
or
gs
cmp
and
pop
or
sbb
or
arpl
pusha
sbb
adc
adc
sub
(bad)
(bad)
std
mov
and
loop
sbb
push
add
mov
add
(bad)
jg
fcmovnbe
loopne
sub
ret
cwde
cdq
cdq
in
inc
and
add
(bad)
push
imul
jge
js
out
retf
push
call
(bad)
(bad)
inc
lahf
mov
dec
test
cld
pusha
mov
(bad)
inc
out
push
add
mov
sar
(bad)
(bad)
sti
iret
fistp
into
fidivr
mov
les
(bad)
out
adc
add
call
(bad)
(bad)
(bad)
dec
iret
sbb
neg
inc
(bad)
stos
divps
pushf
mov
scas
or
(bad)
(bad)
(bad)
(bad)
jg
sbb
loopne
ficomp
or
pop
mov
adc
shl
(bad)
(bad)
(bad)
dec
mov
cli
gs
nop
call
aam
xor
lods
dec
rol
cmp
add
add
imul
in
aam
jo
in
jge
pushf
mov
cmc
lods
mov
in
cmp
jmp
push
lods
xor
mov
(bad)
(bad)
stc
push
inc
out
fisub
outs
jl
cmp
ret
jno
(bad)
mov
popa
ret
fst
retf
imul
(bad)
call
loop
adc
(bad)
jo
mov
pop
iret
shr
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
jbe
arpl
repnz
pop
and
cmp
push
(bad)
fild
xchg
aad
out
jbe
(bad)
(bad)
inc
loop
(bad)
out
dec
adc
adc
xchg
jg
mov
adc
jne
int3
mov
(bad)
(bad)
push
cmp
jg
xchg
sub
cmp
mov
mov
mov
in
or
xor
(bad)
(bad)
call
mov
cmp
sub
xor
lds
icebp
mov
sub
lds
mov
(bad)
fld
ja
dec
cwde
stc
lods
xor
leave
and
and
scas
(bad)
jmp
xor
loopne
pop
js
(bad)
(bad)
(bad)
call
(bad)
pusha
jne
xchg
cmps
xlat
adc
popa
and
fdivr
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
out
and
pop
mov
mov
xor
inc
xor
mov
or
(bad)
dec
dec
mov
inc
inc
and
stc
sbb
imul
sub
sbb
ret
test
(bad)
(bad)
jmp
out
sbb
pushw
pop
pop
pop
pop
push
or
cwde
cs
dec
loopne
inc
rcr
(bad)
jmp
jge
xchg
or
xchg
fisttp
enter
(bad)
cs
leave
(bad)
imul
(bad)
jmp
test
les
jl
repnz
and
aas
cmp
and
je
cmp
(bad)
(bad)
(bad)
push
div
push
jmp
mov
(bad)
dec
(bad)
adc
loope
(bad)
(bad)
(bad)
jmp
push
inc
ror
les
cdq
xchg
xor
aad
shl
mov
jae
sar
(bad)
dec
test
cwde
fndisi(8087
arpl
repnz
ins
pop
ficomp
pop
push
imul
jp
and
(bad)
(bad)
call
mov
movs
aaa
sbb
fnstenv
mov
jbe
jle
mov
pop
loopne
addr16
jb
je
daa
pop
(bad)
(bad)
(bad)
call
add
pop
ins
mov
cmps
jno
push
pop
cmps
mov
xor
and
cmc
or
jmp
jl
les
adc
mov
mov
cmc
sub
sub
cmp
(bad)
(bad)
(bad)
push
ror
(bad)
in
mov
pop
sti
int3
mov
mov
inc
mov
je
xchg
sahf
movs
(bad)
(bad)
(bad)
push
scas
adc
xor
pop
mov
pop
icebp
mov
test
ja
dec
outs
(bad)
(bad)
(bad)
call
mov
retf
mov
mov
or
icebp
jle
mov
and
(bad)
(bad)
(bad)
dec
sub
xchg
enter
cmc
and
adc
jae
and
(bad)
cwde
push
pop
xor
inc
nop
iret
(bad)
(bad)
(bad)
jmp
push
test
xor
sbb
pminsw
pop
cwde
(bad)
push
punpckhdq
aas
or
dec
ss
int3
loope
cli
iret
out
xor
out
mov
and
or
dec
xchg
mov
pop
mov
(bad)
(bad)
jmp
mov
mov
aad
inc
out
sbb
(bad)
ret
mov
in
jmp
(bad)
(bad)
(bad)
inc
pop
jl
fstp
push
imul
dec
or
das
popa
adc
xor
stos
mov
call
out
imul
mov
ret
jle
sub
inc
sbb
cmp
jl
mov
sbb
pushf
pop
(bad)
(bad)
(bad)
jmp
fnstcw
cld
out
cmps
adc
jno
inc
mov
mov
pop
pop
lea
(bad)
call
lods
dec
repz
bound
mov
lods
sub
push
jmp
fidivr
daa
(bad)
xchg
cwde
sar
(bad)
(bad)
jmp
or
fisttp
or
stc
sub
push
xor
inc
scas
mov
mov
(bad)
call
mov
push
cwde
mov
je
jne
ss
sbb
fld
jge
(bad)
(bad)
call
jnp
pop
cmp
call
int3
xlat
loopne
out
and
push
xchg
mov
(bad)
(bad)
(bad)
mov
mov
gs
jecxz
sub
cmps
push
inc
in
add
rcl
xchg
lock
(bad)
(bad)
(bad)
jp
push
clc
adc
xchg
stos
imul
ins
shl
in
inc
sub
pop
push
inc
or
(bad)
(bad)
call
inc
inc
aas
mov
add
adc
popa
hlt
loope
ins
push
mov
(bad)
(bad)
inc
ja
call
data16
cmp
pop
clc
dec
test
popf
and
not
(bad)
(bad)
(bad)
call
dec
xor
retf
mov
fs
aad
nop
std
jecxz
mov
pop
inc
xor
inc
ja
out
push
mov
add
jmp
retf
add
in
pusha
mov
mov
or
pop
adc
lds
iret
push
(bad)
(bad)
(bad)
inc
pop
pop
rol
rol
dec
scas
jmp
in
sub
pop
push
repz
(bad)
(bad)
push
cmc
(bad)
dec
sbb
mov
cdq
dec
inc
mov
sub
add
cmp
ins
xor
(bad)
(bad)
(bad)
dec
mov
(bad)
out
fwait
aad
arpl
sbb
inc
iret
sti
jae
icebp
stos
test
psubb
cld
add
(bad)
(bad)
(bad)
jmp
mov
in
push
ror
sub
clc
adc
or
lods
(bad)
push
mov
dec
into
jae
outs
add
pop
arpl
bts
retf
(bad)
push
shl
or
enter
jae
(bad)
(bad)
jmp
push
je
and
stos
test
dec
in
fnstcw
push
and
sbb
pop
and
(bad)
(bad)
(bad)
call
dec
fld
movs
add
das
and
imul
(bad)
and
test
dec
sbb
and
sub
int3
add
inc
jg
xchg
mov
sbb
dec
mov
adc
(bad)
(bad)
inc
pop
inc
mov
cmp
xor
mov
inc
jmp
dec
ja
ret
nop
scas
fisubr
jnp
div
dec
cmp
je
or
xchg
loop
push
xchg
(bad)
(bad)
(bad)
jmp
je
fsub
cmp
addr16
test
mov
mov
sub
(bad)
(bad)
(bad)
call
push
mov
addr16
ds
and
rcr
cmp
jno
(bad)
push
sahf
adc
loop
(bad)
(bad)
(bad)
jmp
(bad)
mov
push
adc
dec
push
daa
sar
or
shl
and
pop
inc
(bad)
(bad)
(bad)
call
mov
push
or
xchg
shl
xchg
pop
scas
cmp
cmp
(bad)
(bad)
jmp
test
cmp
popa
out
jnp
stc
js
je
add
pop
xor
(bad)
ds
(bad)
push
and
adc
aas
or
(bad)
idiv
scas
push
nop
xor
test
(bad)
(bad)
(bad)
jmp
mov
cmc
pop
ins
(bad)
sbb
scas
and
adc
pop
dec
mov
lods
add
inc
xor
inc
out
ret
push
inc
fnstcw
mov
add
inc
cld
sbb
dec
and
(bad)
xlat
rol
sub
or
mov
pop
repz
lea
(bad)
(bad)
jmp
push
ret
das
iret
lods
push
les
in
push
inc
popf
aad
jb
cmp
lea
popa
mov
sub
scas
in
mov
les
jne
lods
dec
add
inc
jb
cmp
(bad)
xlat
(bad)
(bad)
(bad)
push
dec
iret
les
xchg
int
sub
lds
dec
jecxz
test
call
(bad)
call
out
adc
xchg
cmp
js
call
jne
xor
addr16
(bad)
(bad)
push
cdq
xor
mov
stos
pop
inc
cmp
dec
jmp
or
ret
mov
(bad)
(bad)
(bad)
(bad)
ins
dec
adc
scas
pop
in
rcl
cld
push
xchg
adc
jmp
out
sbb
cmp
rol
xor
inc
cmps
sbb
cmp
add
push
fcmovu
aas
call
inc
mov
mov
push
movs
lods
inc
les
jl
jo
out
fimul
jl
jbe
mov
imul
(bad)
(bad)
(bad)
(bad)
fstp
ret
push
dec
sbb
bound
enter
dec
mov
jp
out
xor
(bad)
(bad)
call
ret
lods
popa
jo
not
aas
add
jnp
xchg
sub
mov
fstp
(bad)
(bad)
push
test
stos
inc
rcr
xor
dec
mov
add
pop
pop
sub
pop
(bad)
(bad)
(bad)
jmp
push
loopne
jl
test
outs
mov
(bad)
sti
repz
push
shl
iret
mov
mov
sub
push
sub
pop
addr16
cli
fist
sahf
xor
(bad)
(bad)
dec
jge
push
aas
rcr
sbb
or
(bad)
pop
add
dec
jecxz
lds
stos
(bad)
(bad)
(bad)
(bad)
cmp
rcl
mov
dec
loop
adc
and
jnp
push
xor
add
(bad)
(bad)
(bad)
inc
pusha
sbb
adc
pop
push
shl
call
or
jnp
ficom
js
(bad)
(bad)
(bad)
jmp
xor
test
or
dec
sub
retf
xchg
ret
aad
push
xlat
xchg
(bad)
(bad)
(bad)
(bad)
fiadd
mov
sahf
pop
sub
fsub
push
fdiv
retf
iret
inc
pop
push
addr16
repnz
push
xchg
xor
loop
(bad)
(bad)
(bad)
jmp
adc
test
cmp
cmp
ins
and
push
inc
cmp
add
(bad)
(bad)
(bad)
jmp
retf
sbb
aas
or
sub
test
pop
cmp
jb
nop
sub
(bad)
(bad)
jmp
jae
mov
dec
fnstsw
stos
push
out
push
mov
adc
jae
and
in
mov
(bad)
(bad)
fadd
add
retf
ins
out
pop
iret
pop
test
inc
(bad)
cmp
jmp
gs
jge
fnstcw
(bad)
(bad)
and
mov
xchg
pop
enter
jmp
push
(bad)
dec
stos
mul
(bad)
(bad)
(bad)
jmp
imul
adc
pusha
clc
xchg
jmp
dec
cmp
mov
out
mov
push
movs
test
xchg
inc
jp
(bad)
(bad)
call
push
mov
iret
repz
out
lgs
js
adc
adc
(bad)
(bad)
(bad)
inc
fstp
idiv
jg
pop
sbb
mov
sbb
and
mov
(bad)
dec
rol
jb
mov
adc
test
sbb
fst
push
jnp
(bad)
ds
ret
test
(bad)
(bad)
stc
mov
repnz
mov
adc
add
or
mov
inc
mov
push
push
aaa
cs
(bad)
(bad)
jmp
push
xchg
loopne
test
scas
cmp
cmp
cli
add
jecxz
stos
sub
cmp
mov
push
test
(bad)
(bad)
push
jnp
lods
dec
sbb
inc
adc
jbe
neg
inc
movs
(bad)
xor
and
mov
(bad)
(bad)
(bad)
jmp
sar
daa
sar
les
and
xor
cmp
(bad)
and
pop
jmp
jns
call
call
mov
xchg
adc
push
cmp
sti
sbb
arpl
xor
call
xor
scas
inc
mov
add
xor
(bad)
(bad)
(bad)
inc
pusha
pop
mov
or
mov
sbb
jbe
pop
in
cmp
mov
call
mov
adc
cld
add
inc
sbb
push
push
les
in
clc
(bad)
(bad)
(bad)
(bad)
jns
push
ss
add
pusha
adc
push
test
mov
sub
add
jae
lods
fsubr
sub
xchg
test
jmp
sahf
xor
cwde
inc
les
enter
ja
mov
ins
rcl
not
(bad)
(bad)
(bad)
(bad)
cmp
daa
data16
sbb
lods
sub
ins
in
ror
inc
pop
pop
push
(bad)
(bad)
(bad)
jmp
add
f2xm1
cli
adc
lock
imul
mov
mov
add
mov
mov
dec
sub
aas
out
cmp
inc
xchg
xchg
(bad)
(bad)
(bad)
(bad)
call
sub
add
cmp
(bad)
div
inc
loop
mov
(bad)
push
cmp
and
leave
and
cmc
(bad)
cli
pushf
(bad)
shl
mov
mul
and
(bad)
(bad)
(bad)
call
cli
lods
fiadd
mov
mov
or
sub
rcr
fs
cdq
(bad)
mov
push
add
(bad)
(bad)
(bad)
inc
shl
sub
dec
cwde
xchg
test
inc
shl
neg
(bad)
(bad)
(bad)
call
mov
and
fs
xchg
jmp
xlat
test
pop
gs
jo
(bad)
(bad)
push
or
adc
add
add
ret
loopne
popw
or
(bad)
(bad)
dec
mov
add
rcl
adc
inc
fdiv
fnstcw
clc
mov
(bad)
inc
push
jno
nop
out
bound
sub
mov
les
inc
mul
jno
out
stc
and
(bad)
(bad)
(bad)
call
sti
jmp
sub
jae
xor
js
cdq
add
mov
(bad)
(bad)
(bad)
jmp
test
mov
cld
xor
mov
inc
out
pop
or
cmp
aam
icebp
(bad)
(bad)
(bad)
inc
cmp
push
adc
xor
mov
pop
adc
and
and
add
(bad)
jmp
lods
jb
sbb
dec
inc
lock
ss
adc
mov
push
push
jbe
out
int3
xor
mov
(bad)
(bad)
inc
mov
pop
push
xchg
mov
push
fs
cmc
jb
xchg
mov
xchg
sub
scas
repz
mov
jl
(bad)
(bad)
dec
xchg
pop
lods
out
cmp
xlat
retf
inc
pop
js
adc
mov
cmp
(bad)
test
(bad)
(bad)
inc
inc
cmp
lds
add
push
lock
lods
out
jmp
cmp
or
mov
(bad)
call
inc
je
sub
(bad)
lds
mov
jl
xchg
xchg
pop
xchg
repz
(bad)
(bad)
(bad)
dec
pop
loop
jo
push
and
add
jp
aad
pop
jge
jp
daa
mov
test
ja
push
cli
(bad)
(bad)
push
pop
cmp
mov
mov
loope
ins
push
xor
stos
jbe
aas
ds
(bad)
(bad)
jg
mov
ins
cmps
sub
adc
adc
sub
jge
mov
push
loopne
(bad)
(bad)
(bad)
(bad)
aas
pop
sub
(bad)
adc
popa
inc
dec
mov
jno
nop
push
pop
cdq
stos
dec
adc
xchg
es
add
(bad)
(bad)
jmp
pop
inc
jno
pusha
pop
sub
lock
repz
lahf
loopne
call
addr16
mov
(bad)
(bad)
(bad)
call
cmps
mov
add
xor
and
inc
sub
inc
or
les
jl
imul
(bad)
dec
inc
test
jmp
pop
or
jle
adc
jo
lahf
popf
test
xchg
xor
sub
inc
(bad)
(bad)
(bad)
call
nop
pop
inc
or
xor
mov
xchg
inc
add
cmc
xchg
mov
(bad)
(bad)
jmp
loopne
add
adc
xor
push
rcr
movs
sub
(bad)
(bad)
push
cli
xor
add
test
out
add
mov
xor
push
adc
add
call
(bad)
(bad)
inc
test
jp
fisubr
jo
sbb
hlt
add
adc
test
enter
aas
(bad)
(bad)
(bad)
call
push
pop
xchg
lock
pop
test
imul
sub
ret
xor
push
fild
(bad)
(bad)
inc
sub
adc
arpl
ret
xchg
or
inc
daa
lock
cdq
mov
movs
mov
popa
push
loopne
xchg
pop
or
in
retf
lock
add
pop
add
(bad)
(bad)
(bad)
inc
fisttp
jge
stos
loopne
jmp
adc
jmp
xor
inc
xlat
ficom
inc
test
add
pop
out
mov
cmp
and
rol
push
ins
or
(bad)
jmp
inc
add
inc
add
or
mov
retf
sub
lds
(bad)
mov
(bad)
inc
dec
add
inc
mov
inc
jge
shl
in
push
pusha
(bad)
mov
or
(bad)
(bad)
call
xchg
adc
add
adc
or
mov
xor
aam
mov
(bad)
(bad)
(bad)
push
pop
adc
inc
retf
fwait
inc
sti
or
pop
nop
lahf
inc
mov
enter
add
(bad)
(bad)
(bad)
push
add
repz
das
push
xor
bound
mov
add
xchg
lahf
loop
cmps
clc
(bad)
dec
add
adc
loopne
add
add
into
ja
add
ror
stos
xor
or
adc
sti
lar
add
sub
xchg
add
lahf
mov
in
movs
push
sbb
popf
mov
cmp
iret
(bad)
(bad)
(bad)
inc
or
add
xchg
daa
pop
xchg
sub
or
(bad)
(bad)
dec
and
dec
add
pop
addr16
and
jno
mov
xchg
sar
(bad)
jmp
add
sbb
and
inc
xchg
sar
push
loopne
in
dec
aad
sbb
push
sbb
(bad)
(bad)
(bad)
call
stos
cdq
in
enter
jne
sbb
pop
xor
or
pusha
out
lock
(bad)
(bad)
(bad)
push
push
sub
out
add
movs
pusha
shl
mov
push
add
cmp
or
jle
cmp
(bad)
(bad)
(bad)
clc
fadd
push
add
and
push
add
mov
stos
maxps
xchg
test
(bad)
(bad)
(bad)
(bad)
out
mov
pop
jbe
jl
pop
call
add
or
add
frstor
(bad)
(bad)
(bad)
(bad)
cmp
ds
pop
push
mov
je
mov
rcl
mov
(bad)
(bad)
dec
pop
jns
add
lds
jmp
pop
mov
fucomip
lods
out
dec
fld
inc
or
push
jle
adc
mov
xor
add
call
and
(bad)
(bad)
(bad)
call
xchg
(bad)
int
movsx
je
pop
sub
lock
enter
cld
push
imul
add
or
cmp
sti
(bad)
(bad)
(bad)
dec
pop
add
mov
xchg
loopne
pop
lods
shl
addr16
xor
(bad)
(bad)
jmp
mov
dec
enter
retf
push
inc
xlat
push
xor
xor
add
(bad)
(bad)
(bad)
inc
dec
xor
mov
jns
jo
into
or
frstor
and
inc
cmp
push
loope
sbb
sahf
mov
and
ffree
or
mov
fadd
(bad)
(bad)
(bad)
call
sbb
fadd
mov
sub
push
or
add
and
(bad)
mov
add
jp
pop
dec
sbb
dec
push
add
rcr
mov
jmp
icebp
pop
xor
xchg
ret
dec
popa
(bad)
test
shr
mov
je
(bad)
(bad)
(bad)
call
imul
sbb
hlt
out
fbld
sub
retf
neg
pop
inc
mov
dec
daa
scas
cmp
ss
nop
push
and
add
mov
enter
inc
daa
aam
(bad)
(bad)
(bad)
push
test
(bad)
ss
mov
cs
hlt
pop
pop
xor
xchg
and
fld
cdq
test
jmp
call
je
daa
in
int3
cmp
and
adc
mov
cs
int
rcr
(bad)
call
xchg
push
popa
ja
pop
push
mov
jl
xchg
outs
add
sbb
loopne
fcomp
gs
cmp
(bad)
dec
into
nop
ret
xor
aaa
out
sub
xor
inc
or
inc
push
mov
call
into
pop
jo
add
xor
mov
add
inc
cld
cmp
sbb
cmp
push
test
stos
lea
add
les
into
aaa
push
ficom
aad
push
jl
inc
mov
inc
ret
in
das
lock
and
or
mov
fsubr
nop
xor
mov
dec
rcr
(bad)
(bad)
(bad)
jmp
push
add
movs
add
imul
lods
pop
cmp
xchg
add
(bad)
(bad)
(bad)
inc
inc
xchg
(bad)
(bad)
adc
verr
aas
jg
bound
cmp
xor
int
outs
shl
test
jl
fnstcw
stos
loope
mov
jle
lods
icebp
mov
retf
mov
popa
sub
mov
nop
fld
(bad)
dec
sub
cmps
add
inc
pop
xchg
or
pop
or
add
jmp
push
fadd
sub
mov
adc
cmp
mov
add
pop
and
mov
adc
test
fisttp
ins
(bad)
(bad)
(bad)
dec
js
loope
mov
fisub
push
xchg
idiv
add
or
xor
or
sub
xchg
(bad)
(bad)
(bad)
inc
sbb
call
cmps
rol
not
aad
test
daa
lock
(bad)
(bad)
sti
and
add
sbb
fist
and
mov
cmp
mov
(bad)
(bad)
jmp
xor
sbb
sbb
cdq
(bad)
(bad)
pushf
shl
sub
cmp
mov
cmp
sahf
fld
(bad)
(bad)
inc
add
inc
in
cmp
aam
stc
iret
or
mov
push
(bad)
(bad)
(bad)
aas
dec
sub
gs
fistp
and
mov
(bad)
popf
sub
or
(bad)
(bad)
inc
mov
les
in
pop
sub
nop
add
inc
ror
and
pushf
(bad)
(bad)
(bad)
jmp
js
adc
fild
push
arpl
mov
add
add
push
xor
imul
(bad)
call
adc
add
mov
add
je
jb
repnz
cmp
and
mov
aaa
add
(bad)
(bad)
inc
adc
lea
push
loopne
es
rcr
or
rcr
push
sub
je
push
mov
adc
fs
cli
rcl
aas
jmp
xor
mov
std
jge
dec
cmp
in
cmp
loopne
sub
(bad)
(bad)
(bad)
jmp
mov
mov
push
sub
sub
dec
and
mov
imul
(bad)
(bad)
(bad)
(bad)
popa
push
pop
push
jge
add
jecxz
or
lods
sub
scas
icebp
dec
or
ja
(bad)
(bad)
call
imul
add
cmp
push
aad
mov
in
jecxz
shl
cld
pop
mov
push
or
jb
cmp
pop
xchg
aam
cli
(bad)
(bad)
push
dec
xchg
xchg
push
inc
aas
mov
add
movaps
test
xor
(bad)
(bad)
(bad)
(bad)
jns
movs
lahf
mov
add
jle
add
dec
jo
or
(bad)
(bad)
(bad)
call
add
add
or
inc
xchg
xor
or
aas
loope
(bad)
mov
or
fnstsw
les
sahf
xchg
loope
dec
mov
mov
(bad)
call
cwde
push
inc
xor
in
add
jo
or
jg
or
jo
add
ror
(bad)
push
loopne
cmp
adc
pop
xor
int3
stc
add
cwde
bound
or
add
(bad)
(bad)
(bad)
clc
inc
pusha
cwde
sbb
add
and
push
pop
inc
adc
adc
test
(bad)
push
pop
(bad)
push
pop
mov
(bad)
(bad)
(bad)
sti
adc
shl
xchg
adc
(bad)
pop
ror
mov
cs
pop
gs
lea
(bad)
mov
in
iret
fistp
or
xchg
pop
mov
pop
mov
(bad)
(bad)
(bad)
cmp
add
or
pop
sbb
xor
ret
cmp
cmp
xor
lock
(bad)
(bad)
(bad)
call
pop
cmc
fmul
popa
add
xor
adc
fisttp
pop
push
nop
mov
mov
(bad)
(bad)
(bad)
mov
(bad)
psadbw
call
in
xchg
pop
sub
sub
lock
or
adc
call
or
sub
loopne
sbb
leave
cld
loopne
sti
sets
push
cmps
(bad)
(bad)
inc
adc
xor
(bad)
iret
shl
push
jbe
aaa
and
inc
(bad)
(bad)
(bad)
jmp
or
jno
aad
rol
dec
data16
gs
out
mov
(bad)
(bad)
jmp
xor
call
jns
shl
pusha
xor
and
fadd
dec
adc
sub
dec
mov
out
leave
mov
out
imul
xor
ror
inc
(bad)
(bad)
(bad)
push
mov
into
push
sbb
cmp
inc
adc
call
(bad)
call
fnstsw
pop
xor
jmp
mov
loope
mov
cmp
(bad)
jmp
inc
out
xchg
fs
call
xor
pop
mov
pop
xchg
(bad)
(bad)
inc
dec
push
adc
jmp
push
pop
mov
into
rcl
call
out
push
pop
clc
or
jo
inc
add
sub
test
inc
dec
(bad)
(bad)
(bad)
call
fs
add
jl
pop
lods
(bad)
push
jmp
jle
nop
xchg
mov
(bad)
(bad)
jmp
add
cmc
fsubr
sbb
add
mov
fs
(bad)
(bad)
(bad)
in
aas
mov
and
adc
sbb
and
and
(bad)
(bad)
(bad)
inc
dec
pop
xchg
add
test
jge
sbb
fwait
stos
pusha
mov
pusha
add
(bad)
call
sbb
add
add
scas
loopne
and
(bad)
(bad)
(bad)
inc
inc
inc
mov
pop
js
or
push
sub
imul
mov
(bad)
(bad)
call
fsub
imul
xchg
jnp
xor
adc
add
js
ret
fdivp
(bad)
push
push
adc
add
xor
add
add
popf
push
sbb
(bad)
jg
mov
add
std
(bad)
pop
or
call
inc
mov
retf
ror
and
icebp
sbb
inc
ja
or
push
in
enter
cmc
call
push
pop
jmp
in
fs
push
adc
(bad)
(bad)
aas
fmul
or
ret
jg
inc
xor
add
(bad)
(bad)
jmp
add
fsub
int3
int3
pusha
or
mov
mov
lds
mov
leave
(bad)
(bad)
out
dec
dec
bswap
fsub
ret
mov
xor
add
add
sbb
jecxz
mov
add
or
push
mov
stc
and
adc
or
aaa
dec
mov
(bad)
sub
lds
or
push
jp
jecxz
scas
push
adc
out
test
inc
add
(bad)
(bad)
(bad)
jns
loopne
call
out
fdivp
push
cmp
iret
jmp
jb
add
(bad)
push
add
out
inc
push
pop
inc
nop
in
(bad)
nop
stos
adc
popf
int
cmc
out
fbstp
mov
pushf
dec
or
xor
and
ficom
sti
lahf
push
aam
ror
or
sub
jnp
aaa
and
movs
push
(bad)
(bad)
(bad)
inc
dec
push
mov
add
ror
loop
fs
pop
add
lods
pop
jecxz
cmp
(bad)
(bad)
call
or
ficom
xchg
add
loope
push
ret
sbb
jl
addr16
adc
pop
ret
mov
sbb
pusha
inc
ror
(bad)
rol
not
push
jge
mov
mov
ret
inc
(bad)
(bad)
(bad)
call
bound
in
shl
ja
or
push
and
(bad)
sbb
sub
mov
(bad)
call
aas
dec
cld
add
dec
stc
or
js
xor
in
mov
dec
xchg
(bad)
inc
jnp
(bad)
(bad)
call
icebp
icebp
pop
mov
(bad)
je
adc
sub
xchg
and
call
in
push
jge
cmp
cmp
sub
adc
movs
inc
cmps
sbb
xor
iret
test
push
xchg
fdivr
add
(bad)
push
imul
loopne
out
add
lods
xor
inc
shr
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
or
and
mov
outs
out
sbb
fs
popf
jmp
(bad)
(bad)
(bad)
(bad)
call
sti
or
hlt
in
xor
test
aas
bound
mov
imul
jmp
and
pop
adc
adc
outs
sbb
pop
clc
pop
pop
or
and
add
(bad)
(bad)
(bad)
(bad)
jns
inc
js
fcmovb
cdq
jg
pop
xchg
(bad)
mov
pop
repz
push
mov
lea
(bad)
(bad)
push
jbe
test
sub
inc
or
(bad)
or
jno
add
ret
inc
hlt
add
inc
adc
cld
(bad)
jg
shr
push
or
pop
push
jo
xchg
inc
xchg
(bad)
(bad)
jmp
mov
push
cld
xchg
fistp
(bad)
sahf
adc
les
(bad)
(bad)
call
test
sbb
mov
fnstenv
(bad)
sub
movs
sbb
(bad)
(bad)
(bad)
dec
mov
cmp
pop
xchg
xor
into
ret
shl
popa
pop
xchg
pop
ins
xor
adc
je
(bad)
(bad)
inc
mov
jecxz
arpl
push
jl
push
adc
mov
inc
add
repnz
xor
call
mov
sti
xchg
jae
mov
pop
aad
mov
pop
(bad)
(bad)
(bad)
call
dec
or
frstor
sti
in
and
shr
sub
test
dec
(bad)
(bad)
(bad)
push
dec
mov
xor
repz
mov
mov
push
fadd
or
int
mov
jb
dec
xlat
and
(bad)
(bad)
jmp
out
add
adc
jge
inc
pop
sub
js
cld
xor
sbb
aas
jge
(bad)
(bad)
(bad)
push
jecxz
daa
push
jno
jbe
add
push
and
outs
cs
inc
pusha
inc
add
hlt
mov
add
pop
pop
adc
add
and
pop
(bad)
fadd
gs
(bad)
(bad)
(bad)
jmp
repz
or
dec
pop
cmp
add
mov
dec
or
repnz
call
(bad)
(bad)
(bad)
dec
jl
loopne
iret
or
push
pop
xchg
rcr
std
jnp
push
sbb
xor
push
or
inc
push
(bad)
(bad)
(bad)
dec
test
inc
adc
loopne
add
les
push
inc
cmp
js
sahf
loope
(bad)
(bad)
(bad)
(bad)
std
addr16
out
cmp
and
mov
pop
jbe
cmp
cwde
pop
fld
cdq
push
push
call
idiv
add
repnz
add
adc
pop
jmp
(bad)
(bad)
(bad)
(bad)
jns
mov
mov
fs
not
mov
inc
mov
add
xor
(bad)
(bad)
(bad)
dec
or
(bad)
pop
sub
sbb
cmps
movs
jo
sub
pusha
jmp
inc
aas
fdiv
(bad)
(bad)
dec
add
fidivr
jo
fsub
mov
repz
sbb
sbb
xor
sbb
and
pop
inc
dec
jg
mov
push
or
or
push
pop
add
sbb
sbb
stc
(bad)
(bad)
(bad)
inc
addr16
lods
nop
sti
add
jo
ror
xor
clc
xchg
inc
(bad)
(bad)
(bad)
call
mov
pop
mov
fadd
out
fs
add
nop
call
and
lods
outs
imul
(bad)
(bad)
(bad)
jmp
sub
xchg
or
or
fisttp
lahf
sbb
js
jo
(bad)
mov
xchg
mov
(bad)
xchg
push
adc
add
xchg
stc
add
add
add
mov
mov
in
gs
jae
loope
(bad)
(bad)
(bad)
jmp
jmp
sbb
adc
mov
push
adc
or
hlt
loopne
lea
sbb
out
sbb
add
jmp
add
mov
sti
and
(bad)
(bad)
dec
scas
fbld
cmc
in
sbb
sub
(bad)
out
mov
inc
test
or
pop
add
cli
ret
push
inc
fild
rol
cli
sti
nop
cmp
sub
mov
(bad)
(bad)
call
cmc
aaa
adc
xchg
stos
and
push
dec
add
mov
inc
call
pop
dec
jno
add
add
sbb
xor
sbb
cli
inc
dec
inc
or
call
xchg
loope
aad
or
outs
fadd
pop
add
fs
fld
mov
pop
and
scas
add
(bad)
dec
jno
fisubr
cli
cli
loopne
cmp
pop
xor
jns
popa
sti
icebp
jmp
shl
jb
ss
or
shl
test
je
fdivr
bswap
lock
(bad)
(bad)
(bad)
jmp
repz
(bad)
xchg
ins
aaa
add
add
or
pusha
gs
(bad)
(bad)
(bad)
call
loopne
add
or
scas
fisub
call
and
or
leave
xor
(bad)
(bad)
out
jmp
enter
add
cmp
or
cmp
push
ret
cld
mov
inc
(bad)
(bad)
(bad)
inc
fdivr
add
push
cdq
sbb
push
call
xor
hlt
shl
ss
sbb
cmp
(bad)
jg
or
inc
mov
add
ja
xchg
pushf
add
(bad)
(bad)
stc
pop
fcomp
xor
push
adc
loopne
cmp
es
mov
sbb
push
dec
(bad)
cmp
xor
rol
pop
push
call
(bad)
(bad)
(bad)
push
mov
jl
ret
int3
loopne
ins
(bad)
mov
ror
lock
pop
jmp
std
xchg
cmp
(bad)
(bad)
std
and
out
jmp
inc
lock
inc
sgdtd
xchg
cmp
into
leave
(bad)
(bad)
(bad)
push
inc
push
xchg
add
pusha
aaa
inc
pop
add
or
cs
jbe
retf
jl
(bad)
(bad)
(bad)
aas
or
in
sub
jmp
lahf
loope
fidivr
and
sub
push
test
cmp
mov
push
cmp
xor
jle
jbe
(bad)
(bad)
(bad)
jmp
push
cmp
ins
push
imul
clc
or
jmp
sub
iret
ret
jmp
stos
mov
dec
js
stc
jp
std
jmp
add
(bad)
aas
xchg
(bad)
sbb
enter
or
(bad)
(bad)
call
inc
(bad)
and
pusha
test
push
int3
fsubr
or
scas
fsub
mov
jmp
clc
push
inc
cmp
push
xchg
pop
(bad)
arpl
inc
pop
cwde
add
(bad)
push
jno
and
in
mov
sbb
add
sbb
(bad)
(bad)
(bad)
inc
gs
(bad)
or
jle
mov
pop
add
pop
cwde
loope
push
inc
(bad)
sar
push
(bad)
(bad)
(bad)
call
call
and
adc
xchg
xor
inc
or
es
clc
mov
inc
ins
or
xor
pop
rcl
mov
js
sar
dec
xlat
sbb
push
mov
jg
(bad)
inc
and
lea
add
jecxz
mov
aas
ficom
mov
pop
mov
(bad)
(bad)
(bad)
jmp
mov
in
add
cmp
and
push
add
xchg
sub
(bad)
icebp
aas
pusha
pushaw
cli
(bad)
(bad)
(bad)
dec
test
xchg
in
adc
pop
(bad)
xchg
fs
and
lahf
fistp
xlat
mov
add
(bad)
(bad)
push
loope
ins
movs
sets
stos
or
cdq
rcr
mov
xchg
test
or
mov
cmp
lods
push
add
push
add
pop
cmp
adc
rol
(bad)
sbb
std
lahf
inc
push
inc
aas
push
cld
call
daa
push
ror
sbb
stc
shl
cld
inc
mov
ror
test
dec
leave
xor
imul
push
data16
(bad)
(bad)
(bad)
fistp
dec
(bad)
das
js
push
xchg
xor
je
fidivr
(bad)
mov
aas
(bad)
enter
dec
add
(bad)
inc
pop
shr
shr
shl
clc
jg
cli
(bad)
(bad)
(bad)
(bad)
mov
jns
or
cld
inc
sbb
inc
loope
loope
clc
fadd
add
dec
dec
(bad)
(bad)
(bad)
dec
jo
push
ret
cli
and
sbb
and
sbb
jle
mov
sbb
push
cli
sbb
rol
rcl
sti
sti
fwait
popa
iret
shl
or
xchg
(bad)
(bad)
(bad)
(bad)
out
fs
xchg
xchg
rcl
gs
loope
inc
push
dec
xchg
(bad)
aas
fs
lahf
xchg
add
or
mov
cmp
(bad)
(bad)
(bad)
jl
xor
push
jmp
pop
dec
stos
std
pushaw
add
inc
add
mov
ja
jmp
nop
pop
clc
aas
hlt
adc
data16
imul
std
popa
cmp
add
daa
mov
(bad)
(bad)
dec
dec
mov
xor
mov
cmp
clc
pop
or
add
and
jecxz
sub
sbb
enter
cs
add
iret
daa
inc
aas
(bad)
call
nop
pop
dec
mov
(bad)
cmp
in
cmp
inc
(bad)
(bad)
(bad)
jmp
fnstcw
mov
js
or
pop
into
or
(bad)
sti
xchg
mov
(bad)
call
sbb
jp
cmp
out
or
test
std
inc
jecxz
mov
(bad)
(bad)
(bad)
dec
sbb
scas
popa
inc
cdq
mov
mov
loopne
aas
dec
pop
xchg
xchg
jmp
inc
lods
(bad)
(bad)
(bad)
dec
add
adc
add
adc
test
or
or
inc
(bad)
(bad)
(bad)
call
loope
xchg
imul
pop
or
popa
adc
data16
pop
pusha
xchg
js
call
shl
stc
rcr
xor
inc
int
fwait
ja
xor
int3
ffreep
ror
iret
mov
(bad)
dec
ror
add
stc
cmp
mov
mov
inc
adc
(bad)
(bad)
(bad)
call
test
call
add
push
add
nop
add
das
mov
nop
arpl
(bad)
(bad)
(bad)
inc
fcomp
shl
and
mov
int
push
sahf
mov
inc
arpl
(bad)
(bad)
(bad)
(bad)
call
dec
out
test
movs
add
and
adc
nop
out
add
adc
and
inc
adc
jb
pop
or
jmp
nop
(bad)
sbb
pop
xor
(bad)
(bad)
(bad)
call
aad
das
pop
mov
call
dec
and
inc
(bad)
(bad)
(bad)
(bad)
inc
out
aas
inc
std
call
sbb
fdiv
aas
int3
jle
shl
(bad)
(bad)
(bad)
inc
or
push
mov
dec
jl
call
or
sub
sub
nop
int3
lea
and
arpl
add
popf
rol
pop
xor
add
mov
push
clc
sbb
je
ret
or
(bad)
fadd
xor
jmp
inc
inc
push
push
and
pusha
loope
(bad)
(bad)
jmp
xor
xor
fucomi
ror
inc
lea
(bad)
jge
add
(bad)
jg
fdiv
xchg
fst
xchg
jmp
icebp
add
int
(bad)
(bad)
jmp
call
add
lock
cmp
inc
mov
jg
add
aas
fs
or
loop
call
cld
inc
adc
nop
add
pop
repz
cmp
push
dec
dec
cmps
push
xor
xor
cld
add
add
push
push
pop
and
(bad)
hlt
rdmsr
and
(bad)
(bad)
dec
or
push
cdq
rol
lock
inc
clc
int
push
pusha
add
(bad)
(bad)
jmp
test
or
xor
jl
pusha
mov
in
sti
or
cli
stos
or
mov
(bad)
jg
dec
enter
xor
imul
mov
out
xchg
(bad)
push
sub
repnz
loopne
psubsw
adc
jg
hlt
fdivr
call
add
call
js
pop
push
push
xor
adc
loop
outs
clc
pushf
cmp
mov
scas
pop
(bad)
(bad)
(bad)
dec
sbb
int
enter
(bad)
add
nop
(bad)
sbb
ud1
neg
loopne
lds
(bad)
(bad)
jmp
sub
ror
or
loopne
add
call
sar
add
xor
(bad)
(bad)
(bad)
call
xchg
jg
out
add
and
sub
ds
icebp
shl
or
inc
jl
jmp
or
aas
jg
pop
add
add
xor
test
aam
(bad)
(bad)
dec
lds
sbb
in
adc
mov
mov
ret
loopne
add
neg
fs
addr16
(bad)
(bad)
jmp
xchg
jl
or
pop
les
sahf
mov
in
nop
int
movs
imul
(bad)
(bad)
(bad)
(bad)
cmp
ds
pushf
(bad)
add
imul
mov
ins
out
(bad)
popf
jp
mov
push
stos
pop
or
(bad)
(bad)
(bad)
push
sbb
loopne
and
pop
stc
addr16
add
mov
in
jg
call
sar
(bad)
(bad)
(bad)
(bad)
outs
push
push
call
outs
push
xchg
rol
mov
out
sub
mov
or
call
sub
retf
dec
test
and
cmp
loop
xor
or
add
xchg
(bad)
(bad)
(bad)
call
adc
inc
mov
(bad)
cld
(bad)
pop
mov
push
jp
dec
shl
mul
add
(bad)
(bad)
(bad)
call
push
rol
aad
ins
ror
mov
xchg
pusha
sub
push
jo
inc
jo
pop
mov
jae
inc
pop
(bad)
(bad)
(bad)
inc
lods
push
ins
mov
cld
xor
jmp
js
fdivrp
repz
and
add
jb
inc
sub
inc
add
push
push
hlt
sub
adc
(bad)
iret
call
sbb
popa
(bad)
(bad)
(bad)
push
push
dec
and
test
mov
push
daa
imul
cmps
adc
(bad)
(bad)
(bad)
inc
jo
mov
vmptrld
xor
cmp
idiv
adc
push
dec
sti
jns
xor
sub
jmp
dec
mov
jo
(bad)
mov
nop
inc
inc
cdq
adc
popf
add
add
xor
arpl
(bad)
(bad)
(bad)
call
cwde
jne
add
stc
popf
xor
xchg
add
push
jl
and
add
pop
add
lock
(bad)
(bad)
dec
mov
sub
jp
mov
mov
iret
adc
test
inc
cmp
dec
sub
pop
sub
push
sti
sbb
ss
cmp
(bad)
mov
mov
daa
movs
jmp
cmc
and
add
outs
inc
(bad)
(bad)
(bad)
call
cli
inc
fist
or
dec
mov
or
jle
add
(bad)
(bad)
(bad)
dec
jo
test
das
fist
imul
push
mov
cmps
mov
mov
test
add
or
mov
(bad)
(bad)
dec
or
lock
enter
sub
leave
sub
adc
ins
xchg
(bad)
(bad)
(bad)
(bad)
fidiv
cmp
cmc
xchg
loope
retf
scas
or
mov
inc
mov
xor
inc
hlt
rcr
mov
(bad)
(bad)
dec
xchg
pop
pusha
ss
sub
sub
pop
add
bound
add
(bad)
(bad)
(bad)
jmp
and
dec
or
or
add
xor
enter
and
sub
iret
fld
jg
(bad)
inc
cmp
add
out
add
loop
rol
inc
loop
rcl
(bad)
(bad)
(bad)
(bad)
jmp
sbb
xor
mov
imul
mov
mov
or
das
hlt
stc
mov
add
add
inc
aaa
(bad)
std
xchg
rcr
inc
push
cwde
add
inc
and
and
cmc
adc
ror
mov
inc
pop
pop
(bad)
(bad)
(bad)
call
sbb
clc
inc
daa
out
mov
mov
mov
mov
xor
popa
dec
lahf
mov
or
or
(bad)
(bad)
push
test
and
iret
(bad)
cli
lahf
inc
inc
adc
ja
jge
js
loope
ret
out
mov
inc
push
inc
(bad)
aas
je
stc
sbb
jmp
xor
fsubr
not
loope
xchg
ffreep
dec
retf
(bad)
jg
out
add
and
iret
inc
and
pop
fcmovb
add
(bad)
(bad)
dec
xor
shr
enter
inc
xchg
out
xor
mov
cmp
jg
(bad)
lods
add
push
push
inc
popa
add
mov
ins
or
jle
(bad)
(bad)
(bad)
jmp
xchg
adc
lods
loope
mov
sbb
inc
sti
std
jg
loop
dec
pop
add
(bad)
(bad)
(bad)
stc
add
dec
rol
mov
sbb
dec
or
xor
sub
and
test
(bad)
(bad)
(bad)
jns
ins
aad
xor
mov
xchg
aas
or
mov
or
ror
in
jae
(bad)
(bad)
(bad)
inc
push
in
clc
rol
add
imul
nop
inc
ss
pop
mov
xor
(bad)
(bad)
inc
mov
arpl
loopne
addr16
sub
fdivr
lock
int
push
arpl
push
adc
(bad)
(bad)
(bad)
push
fiadd
callw
enter
mov
mov
cmp
js
stc
or
mov
(bad)
(bad)
(bad)
jmp
add
adc
xor
push
add
pushw
cwde
pop
cmp
(bad)
mov
(bad)
(bad)
inc
or
push
cmp
push
xchg
mov
dec
ins
je
cmp
(bad)
(bad)
inc
in
aas
jbe
loope
fstp
ror
out
shl
(bad)
(bad)
(bad)
cld
add
std
nop
sti
(bad)
or
adc
add
adc
popf
xor
(bad)
call
ret
iret
fistp
cmp
sbb
xor
cmp
stc
out
ds
rcl
(bad)
(bad)
push
add
in
stc
pusha
mov
shr
xor
call
sub
(bad)
(bad)
push
sub
jo
bound
in
pusha
js
out
sub
adc
jo
(bad)
(bad)
jmp
sbb
add
push
inc
add
sbb
jmp
cmp
js
sbb
xchg
jmp
(bad)
(bad)
(bad)
push
ss
sbb
mov
add
push
add
push
setg
ret
test
dec
sbb
pop
shl
ret
test
adc
(bad)
es
(bad)
(bad)
inc
and
fidivr
cwde
clc
cmp
mov
pop
in
jg
sub
(bad)
(bad)
(bad)
jmp
fs
push
add
popa
gs
data16
xchg
aas
jg
jo
xor
(bad)
inc
jbe
or
and
pop
or
repnz
and
aas
enter
out
xor
adc
push
(bad)
(bad)
(bad)
jmp
repnz
mov
add
jno
mov
inc
xor
cwde
adc
retf
(bad)
(bad)
call
add
adc
clc
sbb
in
mov
aaa
push
push
push
rol
daa
mov
test
loopne
(bad)
(bad)
inc
jmp
or
iret
xchg
sbb
fst
js
sbb
loopne
cmps
(bad)
inc
frstor
adc
iret
clc
call
adc
and
rcr
cmp
inc
sbb
add
jbe
or
test
sbb
(bad)
(bad)
inc
inc
cmps
cld
sbb
jg
clc
div
std
inc
(bad)
dec
push
cmp
(bad)
(bad)
(bad)
jle
ror
sbb
and
cmp
jmp
xor
xor
(bad)
(bad)
(bad)
(bad)
cmp
mov
add
sub
ins
add
test
fisttp
retf
cld
enter
(bad)
(bad)
(bad)
push
adc
push
popa
cwde
mov
mov
add
enter
(bad)
inc
jg
or
rol
add
lods
in
or
mov
mov
add
call
add
and
jb
inc
or
sar
(bad)
(bad)
(bad)
(bad)
aas
xchg
add
xlat
push
mov
mov
inc
cmps
(bad)
and
mov
(bad)
(bad)
inc
leave
ror
and
int3
in
fild
test
pusha
inc
sbb
jbe
cs
(bad)
(bad)
(bad)
inc
les
pop
mov
add
mov
cld
test
and
out
(bad)
(bad)
(bad)
dec
sbb
mov
xchg
xchg
out
test
adc
sub
mov
mov
dec
push
mov
(bad)
(bad)
inc
adc
push
or
call
sbb
ret
out
int3
or
scas
ds
cs
pop
add
inc
sbb
xchg
or
jno
aam
xchg
push
xor
mov
(bad)
(bad)
push
xor
imul
data16
mov
les
add
popa
arpl
cmp
xor
(bad)
(bad)
(bad)
push
or
cmp
sub
repz
push
sbb
xor
ins
cmp
lods
mov
xor
adc
or
(bad)
(bad)
(bad)
jmp
stc
repz
gs
out
pop
xlat
add
repnz
out
xor
lock
pop
(bad)
(bad)
(bad)
jmp
pop
mov
add
outs
pushaw
lods
iret
leave
vpshuflw
imul
push
sub
(bad)
jg
call
aaa
jp
or
sbb
push
arpl
cmp
out
es
(bad)
(bad)
(bad)
call
fistp
retf
arpl
js
sbb
ss
data16
out
xor
int3
fadd
(bad)
(bad)
(bad)
call
xchg
adc
das
add
xor
sub
ret
push
hlt
sbb
mov
xchg
add
vmread
loope
mov
sbb
frstor
xchg
dec
add
cs
retf
adc
pop
test
sub
(bad)
(bad)
inc
div
(bad)
repz
xchg
neg
pop
add
adc
sub
cmp
jmp
xchg
or
lock
scas
cs
add
push
lock
js
fdivr
(bad)
(bad)
dec
js
xor
dec
scas
push
ret
cmp
sahf
mov
xor
aas
(bad)
(bad)
(bad)
call
sub
rcr
in
push
or
fs
jb
add
cs
or
push
(bad)
(bad)
call
push
add
mov
xchg
pop
ret
pop
clc
nop
jbe
adc
mov
add
cmps
sbb
fld
mov
sar
(bad)
jnp
lock
(bad)
(bad)
dec
das
add
mov
or
sbb
(bad)
(bad)
inc
sbb
mov
or
adc
out
ror
push
xchg
(bad)
jmp
push
fidivr
pushf
inc
pop
adc
add
fcmovnu
(bad)
pop
sbb
(bad)
inc
lock
pop
push
call
or
int
mov
and
retf
(bad)
(bad)
jg
je
inc
mov
in
ds
xor
outs
push
push
pusha
mov
jp
adc
adc
add
(bad)
(bad)
inc
ror
add
das
aas
mov
and
mov
shl
(bad)
(bad)
aas
jmp
adc
dec
pusha
ret
out
sbb
sti
adc
(bad)
call
mov
xor
daa
out
hlt
outs
les
loopne
popa
sti
cli
sbb
clc
js
sbb
mov
(bad)
rcr
(bad)
(bad)
call
push
js
loope
ret
mov
lahf
mov
add
sub
cmc
out
jl
xor
(bad)
(bad)
jmp
pop
fisub
int3
(bad)
int
lods
scas
int3
loopne
scas
leave
pusha
mov
jmp
jp
(bad)
(bad)
call
outs
pop
sets
xchg
test
push
or
dec
int3
inc
(bad)
push
leave
imul
xor
fcomp
leave
call
xchg
loopne
(bad)
(bad)
(bad)
jmp
addr16
outs
cmp
push
enter
mov
mov
in
fprem1
pop
push
adc
and
test
(bad)
(bad)
(bad)
dec
inc
inc
clc
mov
movs
pop
shl
in
(bad)
das
xchg
aas
jo
loope
mov
loopne
(bad)
(bad)
call
xor
(bad)
mov
clc
das
ret
mov
aas
sbb
loope
add
(bad)
(bad)
jmp
aam
cmp
adc
jnp
pop
mov
clts
popa
adc
call
stos
(bad)
(bad)
(bad)
dec
pusha
frstor
push
add
jns
fmul
mov
xchg
scas
fild
call
mov
and
sub
mov
mov
ja
adc
(bad)
(bad)
dec
lock
push
enter
movs
idiv
pop
pop
xor
hlt
int3
jle
loop
outs
rcl
(bad)
(bad)
inc
stos
sbb
xchg
das
cs
loope
xchg
pop
jns
pop
movs
mov
dec
ins
cs
(bad)
leave
ret
pop
fbstp
(bad)
fiadd
xor
and
jo
out
(bad)
(bad)
(bad)
inc
lods
xor
lock
std
inc
stc
or
jge
mov
xor
int
or
jg
push
idiv
(bad)
(bad)
(bad)
(bad)
pop
and
push
cld
add
add
das
int3
dec
loopne
add
and
jecxz
outs
call
add
and
cmp
into
adc
or
ins
(bad)
(bad)
(bad)
(bad)
in
loopne
push
std
jle
inc
sbb
lahf
xor
(bad)
xor
push
call
retf
pop
(bad)
(bad)
(bad)
(bad)
in
or
push
push
or
mov
cli
mov
(bad)
adc
sbb
jg
and
jmp
sbb
(bad)
mov
mov
jo
or
mov
push
sub
push
xor
add
(bad)
(bad)
dec
or
das
pop
pop
mov
ret
(bad)
xor
push
xchg
jle
retf
arpl
(bad)
(bad)
(bad)
inc
jns
dec
or
add
sbb
imul
rcl
mov
ret
sub
adc
(bad)
(bad)
inc
xlat
movs
xor
mov
add
mov
sub
jno
(bad)
dec
dec
add
stc
loopne
add
js
pop
(bad)
xchg
std
inc
mov
iret
push
sbb
addr16
jg
popa
daa
idiv
test
js
call
aad
out
xor
pop
(bad)
(bad)
call
cld
or
sbb
xchg
stc
mov
sbb
pushf
arpl
fwait
mov
loope
xlat
fild
(bad)
(bad)
jg
loopne
bswap
(bad)
ins
mov
int3
pusha
mov
movntq
mov
mov
(bad)
jmp
loopne
mov
mov
mov
ja
(bad)
(bad)
(bad)
jmp
pop
add
int3
and
jle
cld
or
sub
in
mov
loope
or
(bad)
(bad)
jmp
aam
add
and
in
adc
repnz
and
xchg
out
(bad)
add
sbb
xlat
outs
fbld
cmc
(bad)
xor
sub
xchg
xor
(bad)
cmc
cli
or
inc
cdq
(bad)
das
clc
fsubr
and
or
jl
(bad)
(bad)
call
sbb
jg
or
out
jmp
mov
test
mov
call
jns
pushw
rcr
jb
sub
cld
and
movs
cdq
pop
les
js
adc
add
data16
(bad)
(bad)
inc
mov
push
mov
retf
stc
sbb
cld
or
jae
(bad)
(bad)
push
xor
cld
icebp
adc
push
mov
pop
push
clc
std
test
push
cmp
xchg
add
(bad)
(bad)
push
add
fs
clc
push
pop
ret
mov
rol
shl
mov
add
(bad)
(bad)
(bad)
call
push
add
pop
neg
sbb
xor
ins
adc
jg
test
aas
clc
xchg
pop
(bad)
(bad)
(bad)
push
mov
lock
mov
jg
cdq
loope
sub
sbb
pushf
addps
add
(bad)
(bad)
(bad)
push
jmp
les
rcl
fdivr
(bad)
lock
dec
push
dec
lods
(bad)
mov
push
and
adc
loopne
xor
into
or
or
push
loopne
add
mov
loopne
(bad)
(bad)
(bad)
(bad)
js
lods
gs
cmps
lods
popa
clc
repnz
pop
into
cmp
mov
push
pop
mov
(bad)
(bad)
(bad)
call
jg
push
jmp
or
add
mov
les
rol
shl
mov
pop
ds
sbb
jge
or
dec
inc
or
push
or
shl
and
jg
mov
cmp
pop
xor
jg
and
aas
mov
add
push
(bad)
retf
into
or
pusha
inc
pop
push
mov
sti
aaa
xor
(bad)
(bad)
call
lock
ja
mov
dec
and
or
clc
mov
cmp
jecxz
mov
sti
fimul
gs
sbb
popa
loopne
loope
cmp
and
pushf
jne
lock
and
(bad)
(bad)
mov
jno
inc
add
ffreep
add
aas
mov
lahf
nop
(bad)
(bad)
(bad)
call
add
push
adc
and
sbb
std
(bad)
daa
repz
cmps
adc
cmp
mov
jmp
(bad)
(bad)
aas
jmp
pop
add
add
jmp
lods
ins
in
lock
fs
(bad)
(bad)
fistp
jle
dec
sar
data16
call
lahf
jg
cmps
add
sbb
(bad)
(bad)
(bad)
inc
(bad)
hlt
xchg
inc
push
test
ins
ds
jl
pop
ss
cmp
jo
sar
sbb
(bad)
(bad)
call
rol
mov
enter
stos
(bad)
aas
test
stc
mulps
cmp
mov
xlat
sub
pop
cmp
(bad)
(bad)
inc
push
adc
add
in
pop
cmp
add
das
shl
or
popa
(bad)
(bad)
(bad)
inc
retf
rol
cwde
and
cdq
sbb
mov
or
loope
and
ins
sub
push
push
cmp
(bad)
push
rol
aas
mov
daa
and
push
add
(bad)
(bad)
(bad)
(bad)
jl
call
cmp
mov
movs
or
pop
shl
pop
popf
icebp
daa
retf
lods
icebp
(bad)
(bad)
(bad)
(bad)
inc
or
pusha
retf
add
out
or
int
les
cs
add
(bad)
cld
(bad)
mov
ret
loop
(bad)
sbb
jle
fadd
jne
pop
bound
loop
(bad)
(bad)
(bad)
jmp
cld
paddsb
in
ds
adc
xor
sbb
jmp
lds
les
cmps
add
sub
add
xor
mov
or
(bad)
(bad)
call
mov
(bad)
sbb
inc
pop
pop
js
add
cwde
or
mov
pop
add
add
xor
adc
or
(bad)
(bad)
(bad)
mov
add
fwait
jmp
mov
stos
stos
cmp
imul
inc
std
(bad)
(bad)
jmp
or
lock
jbe
push
add
push
ds
aas
fwait
xchg
adc
add
in
mov
leave
mov
int
rcr
mov
leave
mov
ror
(bad)
(bad)
(bad)
inc
daa
pop
ret
out
xchg
push
sbb
sbb
les
pop
test
mov
fs
pop
cmp
(bad)
jmp
mov
fs
sbb
lahf
jle
fisub
or
fstp
inc
lock
add
lock
pop
loop
jecxz
push
add
(bad)
dec
xchg
loopne
mov
rol
pop
jb
add
sbb
je
or
(bad)
(bad)
inc
xor
pop
ret
orps
push
jbe
inc
pusha
es
pop
daa
dec
push
inc
xchg
add
(bad)
(bad)
(bad)
cmp
add
ror
cmp
pusha
outs
arpl
inc
iret
or
jmp
(bad)
(bad)
inc
leave
pop
mov
loop
xchg
aaa
or
call
jo
(bad)
(bad)
(bad)
push
pop
and
sbb
fnstcw
sbb
push
enter
mov
inc
and
pop
dec
inc
pop
lea
cli
repnz
in
aas
jl
bound
(bad)
adc
aaa
push
xchg
dec
(bad)
(bad)
(bad)
push
xchg
dec
std
add
pop
mov
retf
xor
inc
sbb
(bad)
(bad)
jmp
pusha
daa
fsub
cmp
bnd
pop
loopne
mov
int
call
sub
jo
add
(bad)
(bad)
jmp
add
shl
retf
add
push
add
fidivr
or
inc
xchg
icebp
mov
cld
xchg
inc
pop
adc
add
mov
clc
cli
xor
lock
pop
adc
push
(bad)
iret
aas
lock
jnp
inc
je
lock
pop
jnp
mov
(bad)
(bad)
(bad)
(bad)
inc
add
scas
retf
sub
pop
mov
pop
fsub
and
jg
dec
(bad)
jns
mov
loop
pop
jecxz
or
fistp
stos
stc
(bad)
push
dec
(bad)
cmps
dec
(bad)
(bad)
push
ret
fadd
cmps
scas
and
pusha
mov
xor
in
fiadd
fdivr
(bad)
(bad)
call
fdivr
mov
push
add
js
pop
(bad)
cld
inc
pop
adc
outs
(bad)
adc
push
(bad)
(bad)
cli
or
in
dec
hlt
sub
sar
add
fdivr
xchg
sbb
(bad)
(bad)
(bad)
clc
mov
jg
xor
jno
add
mov
adc
neg
outs
push
push
add
add
and
shl
(bad)
(bad)
(bad)
call
inc
xor
lahf
push
repz
mov
clts
ss
int
pop
jp
ds
aas
pop
iret
cdq
ss
(bad)
(bad)
push
pop
and
std
cmp
out
ds
adc
ror
fdivr
(bad)
(bad)
(bad)
jmp
jg
pop
gs
retf
xchg
and
ins
lods
ins
rol
xchg
(bad)
loopne
xlat
cwde
icebp
push
add
aam
inc
mov
scas
(bad)
stc
xchg
sbb
ficom
rol
(bad)
(bad)
jmp
jl
push
jl
push
inc
xor
pop
pop
push
or
add
cmps
push
jl
cs
add
(bad)
(bad)
push
sbb
gs
repnz
xor
das
ffree
add
adc
xor
ret
(bad)
(bad)
inc
pusha
test
in
mov
lods
loopne
scas
xchg
cmp
fadd
xchg
cdq
cmp
or
mov
ffree
test
rcr
or
(bad)
arpl
inc
add
push
mov
(bad)
std
sbb
push
jg
push
sbb
(bad)
(bad)
push
pop
push
call
sbb
sbb
dec
int3
rcr
or
popa
test
aas
mov
inc
shr
mov
inc
shr
or
add
(bad)
(bad)
jmp
ds
push
cld
dec
push
js
adc
inc
xchg
in
fistp
adc
(bad)
(bad)
jmp
add
fiadd
lods
aam
or
in
add
aad
push
jle
(bad)
(bad)
inc
xor
loopne
daa
adc
xchg
push
out
sbb
ss
les
(bad)
(bad)
aas
and
push
in
pusha
add
std
cmp
push
add
add
xor
out
cli
(bad)
jmp
arpl
popa
pusha
gs
adc
add
arpl
xchg
xor
push
pop
cmp
or
(bad)
(bad)
dec
jo
sbb
loopne
cmp
ficom
adc
xor
das
iret
push
pop
add
push
xor
out
dec
fs
loopne
pusha
add
inc
and
(bad)
(bad)
(bad)
call
repnz
xchg
ficom
pop
int
cmp
xchg
cmp
push
fisttp
mov
push
je
ds
(bad)
(bad)
jmp
pop
sbb
aaa
mov
or
dec
sti
lahf
add
jp
fdivr
stos
daa
js
ret
(bad)
std
jmp
stos
enter
add
and
jbe
pop
aas
jg
fwait
lock
sub
dec
outs
push
mov
jmp
sub
add
(bad)
js
mov
pusha
add
(bad)
inc
xor
aas
(bad)
(bad)
(bad)
(bad)
fadd
push
(bad)
call
xor
lock
gs
mov
mov
jecxz
movs
outs
clc
push
ins
jb
mov
xor
(bad)
(bad)
(bad)
push
mov
mov
cdq
or
icebp
das
je
pushf
mov
push
fidivr
pop
call
mov
pop
ss
add
gs
inc
push
xor
ins
outs
rcl
and
push
pop
mov
hlt
outs
inc
push
add
mov
ins
dec
push
int3
(bad)
(bad)
(bad)
(bad)
cld
mov
jns
pop
cwde
push
iret
adc
pop
(bad)
pop
lods
add
add
or
int3
jl
or
fidivr
pop
(bad)
pmaxub
or
dec
(bad)
les
iret
rcl
mov
sti
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
je
movs
sbb
fwait
dec
mov
iret
mov
stc
neg
mov
xchg
cmp
(bad)
(bad)
call
pusha
out
(bad)
jecxz
js
adc
and
icebp
pmaxub
fs
rcr
(bad)
jg
mov
pop
or
or
pusha
sbb
je
(bad)
(bad)
(bad)
jmp
adc
sbb
push
add
pop
pop
cld
inc
test
clc
(bad)
cmc
sbb
dec
add
(bad)
xor
mov
adc
ror
or
pop
or
pusha
cli
add
sbb
(bad)
(bad)
inc
add
aas
btc
jmp
mov
(bad)
aas
jg
cmp
sub
or
adc
mov
pop
or
push
mov
sbb
(bad)
(bad)
inc
arpl
shl
loopne
add
shl
js
adc
mov
call
clc
add
and
add
jg
(bad)
cmp
or
jbe
rol
iret
add
rol
push
add
or
(bad)
(bad)
call
ret
dec
les
bound
nop
or
mov
mov
imul
sub
jg
push
jo
xor
(bad)
(bad)
(bad)
jl
cld
cdq
inc
call
arpl
mov
out
pop
push
arpl
push
inc
pusha
aaa
loopne
scas
lahf
(bad)
(bad)
(bad)
dec
loopne
mov
retf
cmp
inc
dec
std
gs
sbb
dec
data16
enter
or
(bad)
(bad)
(bad)
push
aam
inc
add
add
pushf
lock
xchg
loope
mov
or
ds
(bad)
(bad)
(bad)
jmp
clc
xor
push
mov
add
sbb
mov
ror
inc
sub
mov
push
shl
mov
data16
(bad)
(bad)
jmp
call
icebp
mov
test
or
lods
dec
inc
out
std
hlt
xchg
loope
mov
or
adc
(bad)
(bad)
(bad)
(bad)
js
add
xchg
xlat
aas
or
bound
or
mov
fld
fist
rol
pusha
bound
(bad)
(bad)
(bad)
cmp
mov
cmp
std
push
mov
and
das
outs
pushw
or
(bad)
(bad)
(bad)
push
lock
bound
stc
cmp
js
es
enter
lock
sbb
lock
(bad)
call
idiv
aas
fsubp
std
movq
inc
sbb
mov
mov
xchg
inc
das
push
ror
xor
mov
push
loop
call
mov
mov
pop
pop
jno
or
(bad)
(bad)
(bad)
call
cmp
pusha
pusha
inc
pusha
arpl
pusha
js
repnz
jmp
sbb
or
(bad)
(bad)
(bad)
call
push
cmp
jg
lea
jg
ja
std
inc
sbb
dec
call
(bad)
(bad)
inc
std
inc
ds
lock
hlt
add
fldenv
jl
stos
leave
add
repz
out
push
les
(bad)
(bad)
(bad)
(bad)
in
cmp
jb
sub
sub
push
and
mov
dec
mov
dec
inc
cwde
loopne
sub
add
inc
cmp
pop
clc
test
(bad)
call
cwde
mov
mov
shl
repnz
(bad)
daa
push
or
dec
divps
neg
mov
adc
(bad)
jmp
sbb
data16
and
xchg
je
xor
mov
test
sbb
ins
mov
(bad)
push
(bad)
(bad)
(bad)
dec
neg
mov
ror
lods
scas
inc
sbb
or
test
sbb
(bad)
(bad)
(bad)
call
test
mov
bound
jae
add
push
sub
jecxz
jno
cmp
inc
jo
fsubr
mov
inc
xlat
hlt
inc
ret
or
hlt
(bad)
call
mov
cs
lock
int3
shl
fcomp
push
repz
add
mov
xor
clc
test
sub
sbb
inc
pushf
aam
(bad)
dec
call
ret
cmp
add
inc
data16
inc
(bad)
(bad)
(bad)
inc
addr16
jns
scas
pop
mov
pusha
jo
std
pop
jno
es
dec
repnz
jg
and
cmc
loopne
push
(bad)
(bad)
(bad)
(bad)
std
inc
(bad)
jmp
repz
add
fild
pop
push
pop
jno
xchg
(bad)
(bad)
cmp
cmp
sahf
add
popf
push
or
retf
(bad)
xchg
or
add
movs
and
in
retf
(bad)
call
nop
int3
(bad)
jl
jmp
(bad)
(bad)
dec
dec
in
jb
sar
cld
loope
mov
push
xchg
add
mov
(bad)
(bad)
(bad)
inc
cmps
add
xor
add
ror
add
inc
in
jne
(bad)
(bad)
(bad)
jmp
and
mov
add
mov
aas
jo
lock
cmps
lock
std
xchg
xor
(bad)
(bad)
jmp
(bad)
jge
lahf
pop
or
dec
inc
inc
xchg
sub
add
xor
xor
lods
je
rcr
(bad)
inc
out
pop
xchg
push
pop
mov
sti
push
call
and
bound
setnp
(bad)
(bad)
call
inc
dec
dec
or
xor
lea
add
xor
or
aas
mov
inc
xor
adc
stc
idiv
sbb
sbb
shr
pop
mov
add
(bad)
(bad)
call
add
jae
mov
cs
inc
pop
dec
and
xchg
iret
shr
ror
add
cmp
rcl
jle
clc
imul
test
push
into
loopne
sub
(bad)
(bad)
inc
loopne
movs
or
mov
push
std
ror
mov
push
cmp
pop
iret
jo
test
mov
fist
arpl
movs
xchg
lock
add
call
(bad)
jg
add
enter
adc
lahf
aas
mov
mov
(bad)
(bad)
(bad)
jmp
pushw
es
(bad)
stc
mov
mov
enter
xor
test
add
(bad)
(bad)
call
sysenter
pop
xchg
in
imul
ins
scas
jg
not
sub
js
(bad)
dec
and
shl
and
adc
or
or
outs
xchg
dec
push
jmp
mov
loopne
jnp
and
sbb
aaa
mov
xor
or
out
loopne
into
(bad)
(bad)
(bad)
inc
sub
jmp
mov
or
add
sahf
icebp
jo
xor
or
ret
data16
sar
inc
mov
xor
or
dec
xchg
inc
dec
mov
(bad)
(bad)
fistp
ror
inc
mov
mov
pop
push
pusha
dec
leave
(bad)
mov
shr
(bad)
(bad)
(bad)
inc
div
(bad)
stc
cmp
add
clc
add
das
inc
cwde
or
mov
(bad)
(bad)
call
sbb
gs
sub
jmp
inc
add
sbb
rcr
sbb
add
popa
mov
mov
retf
inc
sbb
adc
and
(bad)
(bad)
jmp
repnz
and
popa
out
push
or
mov
addr16
stc
add
push
or
jbe
push
adc
pusha
(bad)
(bad)
(bad)
push
mov
mov
sti
bndstx
call
repz
mov
add
(bad)
push
inc
pop
sub
mov
or
adc
dec
scas
cmp
(bad)
(bad)
(bad)
dec
push
or
cmp
pop
test
push
mov
dec
add
test
xchg
(bad)
(bad)
dec
xor
add
fwait
ret
inc
pop
adc
or
add
pushf
mov
dec
pop
adc
cmc
idiv
mov
sub
or
test
(bad)
jg
lods
inc
popa
cs
push
and
fist
push
popa
push
add
js
push
push
aaa
or
adc
(bad)
push
std
test
jb
inc
pop
inc
mov
sbb
mov
(bad)
jmp
fdivp
shl
dec
mov
push
jo
pop
mov
cmp
je
repnz
iret
pop
or
loop
or
inc
icebp
jmp
add
mov
mov
add
(bad)
(bad)
(bad)
call
icebp
mov
xchg
jp
adc
repz
enter
dec
fs
or
push
mov
test
gs
stc
jecxz
inc
cbw
or
mov
sbb
jg
(bad)
call
cli
or
xor
movs
out
xchg
das
or
or
cmp
or
mov
(bad)
(bad)
jmp
data16
repnz
fwait
dec
aas
sbb
jle
or
mov
repz
push
test
(bad)
cmp
(bad)
clc
sbb
jo
bswap
in
mov
pop
cwde
and
in
or
clc
add
cmp
xchg
loope
iret
fisttp
divps
in
clc
in
call
arpl
sub
(bad)
call
push
leave
retf
inc
push
pop
sbb
data16
loopne
push
(bad)
(bad)
(bad)
mov
push
ja
js
(bad)
icebp
das
pop
mov
add
les
mov
loopne
(bad)
(bad)
call
rol
fwait
mov
mov
xchg
mov
sub
mov
aas
mov
add
jmp
and
adc
pop
push
pop
or
sbb
outs
inc
int3
mov
(bad)
(bad)
(bad)
push
xor
xor
xchg
dec
packssdw
cmp
mov
(bad)
(bad)
(bad)
(bad)
fadd
or
movs
shl
dec
lock
popf
mov
das
push
(bad)
call
outs
adc
rol
clc
add
ss
hlt
aam
sar
add
or
adc
mov
push
xchg
inc
dec
push
xchg
idiv
(bad)
(bad)
push
dec
or
ins
pop
rol
or
pop
jns
cmp
or
xchg
add
repz
inc
dec
cmp
(bad)
jmp
add
aam
mov
mul
xor
lods
or
sub
(bad)
call
push
lea
or
shl
sbb
jbe
or
fcom
mov
add
call
jbe
in
push
push
fsubr
shl
ret
les
sbb
ss
mov
fdivr
(bad)
(bad)
(bad)
jnp
inc
retf
push
stos
jmp
adc
aas
ins
gs
push
sub
mov
popa
add
(bad)
dec
and
iret
pusha
arpl
cs
dec
push
jle
(bad)
(bad)
(bad)
inc
pusha
or
neg
or
rcr
idiv
jns
cs
shr
or
(bad)
(bad)
(bad)
mov
ins
(bad)
out
popa
(bad)
imul
repz
pusha
xchg
add
mov
popa
fmul
dec
ja
rcl
or
push
out
adc
or
mov
pop
or
sar
(bad)
(bad)
out
rcr
push
pop
add
sbb
aas
je
repnz
pusha
shl
sbb
mov
inc
mov
sub
mov
clc
cmp
sub
mov
(bad)
(bad)
inc
mov
je
aaa
xor
xor
or
shl
pop
cld
clc
icebp
mov
rol
mov
(bad)
cmp
test
push
push
setnp
in
cmpps
pop
adc
outs
push
push
loopne
outs
repnz
neg
pop
ret
fld
lock
(bad)
jmp
(bad)
(bad)
(bad)
jmp
minps
pop
call
ror
lods
lods
or
inc
stc
jge
stc
dec
sbb
(bad)
push
mov
(bad)
mov
div
xor
call
mov
and
jmp
sbb
add
imul
jmp
push
shr
or
and
add
daa
pop
mov
(bad)
mov
aaa
int3
popa
mov
ds
js
pop
cmp
push
or
mov
inc
clc
xlat
or
(bad)
push
scas
or
push
or
mov
fistp
std
daa
aam
(bad)
(bad)
inc
add
dec
aas
daa
xchg
lods
xor
sub
sbb
sbb
ret
outs
out
mov
add
(bad)
(bad)
call
shl
xlat
mov
mov
call
sbb
add
pop
pushf
mov
add
(bad)
(bad)
(bad)
call
outs
inc
push
push
ret
cmp
lds
sar
mov
xor
xchg
and
(bad)
jmp
add
push
xchg
xor
outs
push
ja
add
pop
(bad)
pop
sbb
(bad)
(bad)
jg
dec
add
sub
add
mov
sahf
dec
cld
mov
loop
add
push
(bad)
(bad)
(bad)
cmp
std
sbb
es
pusha
pop
mov
adc
add
xor
bsr
adc
add
rol
data16
ffreep
inc
movs
jne
sub
xlat
out
ds
stc
pop
mov
(bad)
jmp
into
adc
outs
mov
les
test
add
daa
cmp
and
lds
or
aam
sar
push
retf
mov
(bad)
jmp
adc
mov
inc
stc
cmp
jl
repnz
pcmpgtb
xor
add
(bad)
(bad)
(bad)
(bad)
jmp
rcl
(bad)
stc
iret
enter
xchg
popa
stc
mul
xchg
mov
dec
xchg
adc
into
pop
mov
xlat
xchg
mov
ss
fwait
iret
mov
dec
bound
mov
(bad)
(bad)
inc
or
push
xchg
sbb
lds
fdivr
and
jbe
ret
stc
pop
dec
sbb
(bad)
(bad)
(bad)
jg
jno
dec
fstp
loope
aam
pop
enter
cwde
(bad)
stc
cmc
xchg
loope
lahf
pop
or
mul
or
push
jmp
mov
cmp
inc
fidiv
mov
mov
(bad)
jmp
push
or
loope
or
mov
pop
pushaw
push
dec
or
add
(bad)
(bad)
dec
xor
sbb
add
fld
pop
dec
data16
push
mov
(bad)
(bad)
dec
sub
pop
enter
jle
xchg
in
jle
bound
adc
mov
or
addr16
push
(bad)
(bad)
(bad)
jmp
(bad)
mov
jmp
lock
mov
cwde
add
scas
fistp
sbb
xor
out
(bad)
(bad)
(bad)
jmp
mov
repnz
push
dec
pop
idiv
lahf
xor
lock
imul
test
js
and
(bad)
(bad)
(bad)
call
mov
ret
fistp
js
mov
movs
es
inc
push
pop
mov
(bad)
(bad)
inc
and
cmp
mov
push
add
test
dec
inc
(bad)
(bad)
push
pop
test
xchg
imul
sbb
fwait
xchg
or
pop
and
pushf
mov
data16
push
ins
add
dec
call
adc
bound
(bad)
(bad)
(bad)
call
(bad)
loopne
scas
add
loope
push
xchg
into
add
add
cmps
popa
test
rol
je
mov
sbb
cmp
sub
les
add
and
lods
(bad)
dec
loope
pop
jle
add
nop
(bad)
add
push
jmp
push
inc
(bad)
(bad)
(bad)
jmp
xchg
cmc
test
cmp
lahf
fdiv
fwait
loope
frstor
aas
xor
ret
(bad)
inc
cmp
mov
(bad)
and
add
movs
and
imul
outs
or
mov
dec
dec
icebp
xor
inc
movs
lahf
sub
aaa
das
fs
push
(bad)
(bad)
jmp
cld
or
retf
xlat
outs
sbb
sbb
mov
das
ret
into
add
(bad)
(bad)
jmp
xchg
fadd
sub
retw
and
push
push
movs
aad
mov
jecxz
(bad)
(bad)
(bad)
jmp
pusha
cwde
pop
sbb
scas
popa
fild
xor
out
xchg
inc
cs
repz
inc
push
shl
pop
sub
sbb
inc
and
and
and
cmp
shl
add
cmp
xchg
movs
and
(bad)
(bad)
(bad)
jmp
outs
mov
add
shl
jno
mov
mov
and
repz
outs
(bad)
(bad)
(bad)
inc
push
mov
inc
jbe
xor
fmul
or
scas
aas
(bad)
loopne
out
data16
xor
popa
xlat
jns
pusha
push
(bad)
(bad)
(bad)
inc
or
and
ins
add
leave
push
out
idiv
clc
mul
sub
out
scas
sbb
sbb
stos
rcr
les
nop
pusha
cmps
mov
add
(bad)
call
push
ins
fs
shr
into
rol
retf
rol
or
sub
shl
in
mov
jmp
jbe
mov
or
ins
push
jl
adc
je
loopne
lock
lahf
aas
sbb
(bad)
mov
fist
das
aaa
pop
retf
sub
and
pop
stc
repz
or
pushf
(bad)
(bad)
(bad)
jmp
cmps
(bad)
hlt
or
mov
and
xor
iret
test
(bad)
dec
les
fisttp
adc
scas
fistp
pop
jae
xchg
repnz
sbb
mov
(bad)
(bad)
inc
mov
call
pop
in
xor
sub
cdq
push
rcr
iret
test
ja
(bad)
(bad)
call
jo
fs
sub
jg
adc
mov
add
mov
mov
sbb
inc
pop
shl
adc
mov
sar
(bad)
(bad)
fimul
jb
cmp
in
sub
(bad)
add
ds
int
pop
ja
(bad)
call
inc
or
or
je
loope
in
add
jl
mov
(bad)
(bad)
(bad)
call
in
sbb
loopne
in
pusha
sbb
pushf
adc
inc
pop
in
call
(bad)
(bad)
(bad)
(bad)
cmp
sbb
add
ds
xchg
ja
loope
mov
call
stc
scas
ret
mov
(bad)
(bad)
(bad)
jg
sti
call
mov
pusha
mov
xor
push
movs
test
add
add
add
(bad)
call
jb
test
or
push
sub
jle
inc
rol
out
pop
retf
mov
push
add
data16
(bad)
(bad)
push
lock
adc
ins
inc
mov
(bad)
push
into
sbb
cdq
or
inc
retf
arpl
(bad)
(bad)
(bad)
(bad)
mov
add
and
leave
push
add
pop
loopne
ds
jle
sar
xchg
(bad)
pop
(bad)
(bad)
(bad)
(bad)
std
and
cmp
ins
dec
inc
mov
sbb
jmp
jmp
push
cmp
xchg
pop
add
push
clts
push
pusha
mov
sti
std
in
test
inc
stos
(bad)
(bad)
(bad)
inc
dec
push
ret
sti
pop
xor
sub
pusha
sub
add
sbb
(bad)
neg
es
sbb
(bad)
(bad)
inc
fs
cmps
jmp
xchg
xchg
iret
(bad)
fidiv
xchg
mov
jno
data16
sar
(bad)
inc
xchg
xor
add
popf
or
hlt
pop
jne
and
vsubss
fdivr
(bad)
(bad)
(bad)
fild
inc
loopne
call
adc
xchg
loope
iret
scas
or
imul
loopne
dec
inc
mov
aas
or
and
scas
add
(bad)
(bad)
(bad)
sti
jmp
push
xchg
mov
mov
pop
add
shl
sub
lahf
enter
(bad)
(bad)
out
call
fs
das
sub
mov
ror
pop
dec
and
and
xor
pop
popa
sbb
in
push
dec
mov
daa
ffreep
(bad)
(bad)
(bad)
inc
cmp
cld
aas
in
jo
aas
aas
shl
pop
aas
mov
bnd
iret
loop
pusha
pusha
gs
das
pop
sbb
xchg
in
and
lods
inc
out
scas
retf
addr16
sbb
shl
ret
cmp
add
sbb
mov
mul
mov
(bad)
(bad)
inc
mov
mov
je
lock
mov
ror
dec
push
or
je
push
pop
daa
sbb
(bad)
(bad)
(bad)
(bad)
out
add
jns
mov
sub
xchg
daa
clc
stc
jmp
mov
clc
or
ret
jg
in
jae
idiv
sub
push
lahf
dec
les
(bad)
cmps
sbb
(bad)
(bad)
inc
or
inc
push
xchg
mov
mov
mov
retf
add
mov
push
jmp
(bad)
std
pop
sub
bswap
fisttp
pop
in
loopne
add
clc
stos
jo
jmp
aas
or
(bad)
(bad)
(bad)
push
sub
pusha
arpl
fld
add
sbb
not
mov
clc
loopne
(bad)
(bad)
jmp
ds
bnd
js
out
sti
iret
pop
loopne
adc
sbb
add
add
xchg
inc
cwde
sbb
(bad)
call
xchg
inc
pop
push
sbb
test
sbb
(bad)
(bad)
aas
add
cmp
aas
data16
cdq
or
pop
xchg
jb
add
push
jl
into
int3
lock
cwde
sbb
mov
aaa
daa
push
pusha
nop
fcmove
pop
fcomp
or
mov
das
inc
data16
(bad)
(bad)
jmp
loopne
out
(bad)
arpl
push
sub
and
das
add
sbb
add
adc
pop
mov
mov
or
push
jecxz
arpl
cli
jecxz
ret
xlat
outs
aas
rcl
inc
ja
cld
std
or
xchg
clc
xlat
mov
or
aas
in
(bad)
(bad)
jg
xor
xor
pop
cwde
or
cmc
sti
inc
fwait
(bad)
xchg
add
mov
(bad)
(bad)
(bad)
call
out
aas
jns
xor
jbe
push
rcl
pop
ror
xor
jg
mov
ds
pushf
fwait
(bad)
(bad)
(bad)
inc
or
data16
data16
adc
jg
cmp
cmp
(bad)
(bad)
(bad)
call
xor
or
sub
das
pop
add
(bad)
push
sub
inc
jle
out
adc
push
xlat
pop
or
(bad)
(bad)
(bad)
(bad)
ds
lahf
jge
jecxz
dec
lock
pop
mov
mov
sbb
std
sbb
add
sbb
ins
mov
dec
gs
inc
pop
ins
ds
fwait
ja
sbb
ins
cmp
sbb
and
add
sub
cmps
pop
push
rcr
xor
add
addr16
(bad)
jmp
adc
and
sbb
xor
adc
sbb
call
cvtpi2ps
ds
(bad)
lock
rcl
xchg
add
mov
stc
out
das
dec
out
add
cld
(bad)
mov
popa
dec
or
or
gs
fild
cmp
and
add
(bad)
(bad)
push
lahf
addr16
add
test
ins
xchg
xor
or
icebp
inc
shl
mov
(bad)
(bad)
(bad)
call
mov
jb
push
push
sbb
pop
pop
sbb
(bad)
in
add
xlat
call
(bad)
out
jmp
pop
retf
lock
out
shl
xchg
xor
lock
or
add
adc
mov
data16
mov
jg
jmp
jecxz
addr16
sbb
out
adc
rol
jmp
(bad)
(bad)
dec
mov
or
clc
cli
push
popf
fiadd
dec
add
push
sbb
push
push
dec
(bad)
(bad)
(bad)
dec
mov
sahf
nop
inc
test
add
(bad)
call
jp
inc
inc
fisttp
pop
cs
sti
out
aas
xchg
fist
cld
aas
aas
inc
mov
out
sbb
std
shl
jecxz
(bad)
(bad)
(bad)
inc
call
xlat
or
test
movs
test
loopne
shr
lahf
(bad)
(bad)
aas
mov
adc
adc
sbb
imul
pop
jge
shl
cli
inc
fmul
add
in
cmp
test
pop
stos
pop
or
sub
loopne
(bad)
(bad)
inc
mov
out
add
inc
pop
jg
cwde
stc
aas
jl
into
lock
int
xchg
das
(bad)
(bad)
(bad)
(bad)
fbstp
cmp
push
add
ds
outs
jge
dec
cmc
std
add
push
ins
idiv
pop
push
je
data16
mov
mov
outs
clc
sbb
cld
mov
les
ror
or
pop
cmp
mov
mov
(bad)
stc
pop
or
add
dec
inc
mov
xchg
(bad)
les
xor
repz
(bad)
(bad)
push
cmp
nop
popf
xchg
fsubr
mov
mov
das
(bad)
(bad)
(bad)
(bad)
fbstp
cmp
icebp
xchg
loope
sbb
(bad)
jmp
push
int
test
fidiv
js
sbb
aas
mov
in
enter
pop
push
lea
leave
call
(bad)
(bad)
call
retf
nop
pop
fadd
mov
test
lock
das
loopne
inc
inc
xchg
jg
add
add
and
jbe
ss
jmp
mul
fs
mov
or
xchg
out
mov
(bad)
(bad)
(bad)
out
or
pop
jg
js
in
or
sti
sahf
loope
out
loopne
mov
jnp
push
clc
(bad)
(bad)
jle
ret
in
rcr
(bad)
and
and
into
cld
mov
(bad)
(bad)
(bad)
(bad)
call
addr16
aaa
stos
and
xchg
lds
aas
jg
jo
lock
retf
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
jecxz
js
in
xlat
outs
inc
push
push
add
push
outs
jbe
push
jbe
lock
(bad)
(bad)
inc
in
mov
add
sbb
jecxz
mov
data16
clc
in
mov
jmp
data16
cmps
shl
neg
sbb
add
aas
call
call
ins
or
lea
dec
or
adc
or
rcr
inc
inc
sti
imul
(bad)
(bad)
(bad)
call
rcr
and
aaa
(bad)
loope
fist
loopne
outs
outs
inc
add
(bad)
(bad)
(bad)
push
in
cmp
or
aas
and
les
and
iret
and
iret
int
pop
in
push
jo
cmps
or
(bad)
(bad)
(bad)
inc
xor
jno
inc
pop
pop
sbb
cmp
setp
add
clc
scas
aas
jl
js
cli
(bad)
(bad)
(bad)
jmp
mov
sub
(bad)
std
(bad)
dec
or
mov
jmp
clc
mov
xor
aas
sbb
xor
cmp
adc
jp
enter
inc
sub
xor
(bad)
hlt
xor
cmp
or
mov
lea
(bad)
(bad)
(bad)
inc
inc
push
inc
mov
pop
mov
dec
nop
inc
pop
nop
rsqrtps
lock
xlat
jo
ud0
(bad)
push
xor
fdivr
push
sub
mov
add
cmp
mov
icebp
mov
(bad)
(bad)
stc
lock
enter
xor
mov
or
and
or
add
cli
aas
sbb
sti
std
(bad)
(bad)
dec
shl
sbb
stos
and
sub
jg
xor
pop
addr16
pop
cmp
call
xor
ror
mov
sahf
pop
sub
ds
rol
daa
sar
(bad)
inc
int3
push
mov
adc
in
push
add
inc
sub
and
sub
and
add
or
cmp
add
daa
cmp
mov
jbe
push
and
ret
and
inc
arpl
push
aas
cmp
cdq
pop
mov
fiadd
imul
shl
xor
jg
lods
in
pop
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
mov
cld
sti
clc
add
cmp
call
inc
ins
imul
jg
or
adc
ja
cmp
(bad)
(bad)
inc
xor
fld
dec
xor
mov
xor
mov
ret
dec
mov
cld
mov
(bad)
(bad)
(bad)
inc
xor
sub
ror
rol
rol
push
mov
adc
cmp
mov
fld
add
stos
in
sbb
sbb
(bad)
sti
pop
sar
ds
into
cs
pusha
(bad)
inc
idiv
(bad)
(bad)
jmp
nop
dec
lock
xchg
lahf
mov
leave
clc
mov
jnp
jl
enter
xchg
add
(bad)
jmp
fcomp
xchg
push
dec
xchg
add
or
dec
(bad)
(bad)
jmp
and
mov
ss
iret
pop
leave
jo
cli
add
push
push
outs
push
push
outs
dec
jmp
leave
push
mov
adc
pop
das
aaa
push
jae
adc
add
rol
pop
aaa
add
pop
js
add
sub
in
arpl
push
push
ins
mov
xchg
(bad)
jmp
push
in
fs
cdq
jl
inc
stos
test
dec
shl
pusha
pop
(bad)
in
(bad)
(bad)
(bad)
inc
das
loopne
jmp
enter
push
xchg
loope
(bad)
out
or
shl
xor
cli
(bad)
(bad)
inc
xor
mov
push
arpl
dec
push
arpl
bnd
pop
in
mov
xlat
ins
(bad)
mov
jg
xchg
adc
or
pop
mov
popa
repnz
aas
add
(bad)
(bad)
(bad)
call
nop
xor
inc
outs
add
jbe
mov
bnd
or
dec
push
pop
push
(bad)
(bad)
(bad)
inc
add
or
loopne
lods
mov
test
adc
cdq
jl
int3
call
push
(bad)
(bad)
(bad)
(bad)
fild
out
aas
jg
add
cld
lahf
mov
cmc
cmp
clc
jmp
out
shr
punpcklbw
mov
push
hlt
jge
cmps
mov
aas
sbb
jne
sbb
add
cmp
rcl
mov
setle
adc
mov
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
pushf
aas
jg
add
pop
add
add
(bad)
int3
or
mov
mov
cmp
(bad)
call
adc
mov
add
inc
sbb
fcom
add
sbb
add
in
(bad)
(bad)
(bad)
push
popf
pop
shl
or
add
and
mov
sub
(bad)
(bad)
inc
mov
loope
mov
arpl
xor
icebp
pusha
lock
adc
adc
jmp
cld
leave
cmp
adc
fistp
arpl
ret
out
inc
sbb
(bad)
(bad)
push
or
cld
data16
paddsb
sub
popa
arpl
sub
les
in
push
add
test
(bad)
(bad)
jmp
mov
xchg
(bad)
mov
popa
jge
enter
inc
xor
(bad)
(bad)
(bad)
dec
lahf
add
add
test
xor
mov
pop
aas
inc
mov
pusha
cli
bswap
call
lahf
hlt
(bad)
call
or
dec
push
or
inc
int3
ror
out
pop
mov
rcr
add
(bad)
(bad)
(bad)
inc
cmp
mov
call
scas
xor
add
add
or
jmp
(bad)
(bad)
(bad)
inc
xchg
ret
pop
lar
xor
lds
outs
or
call
xchg
dec
ret
add
mov
fstp
outs
push
dec
dec
pushf
rcr
(bad)
xchg
rcr
xchg
inc
inc
(bad)
(bad)
(bad)
call
mov
inc
xor
mov
push
add
sbb
(bad)
(bad)
(bad)
(bad)
mov
stc
dec
aaa
sbb
push
aas
retf
jo
cld
push
xchg
scas
fild
out
loopne
add
(bad)
(bad)
(bad)
dec
mov
rol
movs
test
jbe
pop
cli
mov
and
add
inc
cdq
push
fdivr
call
test
lea
bnd
stos
xor
retf
into
or
(bad)
dec
cli
add
xchg
add
add
bound
data16
(bad)
(bad)
(bad)
js
in
ret
xchg
out
sbb
ins
out
pop
dec
pop
sbb
jp
mov
data16
(bad)
(bad)
(bad)
inc
mov
mov
bound
xor
or
repnz
retf
mov
adc
outs
(bad)
(bad)
jg
jmp
sbb
loopne
cmps
ret
mov
xchg
setp
pop
int
(bad)
mov
nop
pushf
iret
mov
add
dec
mov
sbb
jo
jbe
(bad)
into
ror
xchg
add
sbb
jl
push
add
add
mov
lea
aad
sbb
pop
sbb
add
sbb
or
enter
inc
jg
xor
adc
add
loopne
rcl
sbb
pop
or
and
inc
fwait
and
push
push
mov
add
les
pushf
pop
xchg
add
loop
(bad)
xchg
stc
jg
imul
inc
pop
jle
(bad)
(bad)
mov
out
(bad)
sar
dec
in
add
popa
imul
add
inc
sub
loope
std
(bad)
inc
ds
mov
lods
add
mov
inc
add
scas
inc
rol
and
data16
jg
(bad)
(bad)
mov
mov
pop
daa
add
dec
push
push
mov
clc
jp
adc
inc
sbb
repnz
sbb
or
lahf
add
(bad)
(bad)
inc
gs
add
push
add
add
sbb
lock
sti
mul
pop
pop
imul
dec
(bad)
lock
loope
add
out
add
add
in
or
sbb
jno
mov
(bad)
(bad)
jge
(bad)
push
int3
cld
leave
or
cmp
pop
add
out
inc
and
add
add
mov
sub
rcr
mov
(bad)
aas
pop
(bad)
(bad)
(bad)
push
add
in
add
inc
mov
out
inc
cmp
pop
loopne
sbb
jnp
lock
aaa
das
add
(bad)
iret
lahf
aas
outs
adc
adc
xchg
shl
push
pop
or
inc
mov
mov
hlt
add
pop
xchg
push
add
xchg
add
dec
leave
mov
adc
inc
dec
inc
dec
inc
scas
inc
pusha
add
add
test
push
inc
movs
and
fnsave
xlat
inc
test
add
add
mov
dec
add
add
pop
push
add
jb
outs
je
ins
sub
add
cwde
mov
add
mov
cmp
les
or
mov
pop
sbb
js
sti
cmp
mov
sbb
cwde
jno
dec
add
adc
icebp
sbb
inc
sub
pop
cmp
cmp
jae
add
sub
xor
ss
cmp
out
mov
xor
inc
cdq
mov
push
or
jg
jmp
mov
call
or
push
into
std
js
dec
add
js
or
pop
pop
fsubp
push
fs
mov
and
jnp
lock
pop
lsl
out
out
mov
aas
push
jmp
add
or
push
dec
add
mov
add
or
scas
jmp
add
push
pop
inc
add
or
adc
or
add
inc
jne
out
cs
hlt
adc
pop
loopne
aam
sbb
pop
test
scas
jmp
scas
adc
mov
or
or
pop
push
pop
cmp
sbb
pop
adc
adc
mov
pop
call
pop
xlat
jne
fadd
mov
pop
mov
jne
xlat
add
or
or
xlat
jne
sub
sub
sbb
add
sub
add
adc
fadd
ret
sbb
mov
pop
mov
or
scas
js
or
add
or
jmp
cmp
sbb
push
or
in
aaa
sbb
dec
add
add
jne
xlat
jne
mov
or
pop
xlat
add
or
add
or
neg
ja
or
adc
hlt
adc
enter
add
mov
imul
or
imul
call
pop
pop
add
add
pusha
(bad)
mov
xchg
add
and
jae
out
add
in
adc
dec
idiv
or
pop
xlat
or
nop
add
je
add
ja
xlat
jne
push
pop
and
add
adc
in
dec
jne
xlat
cld
add
xchg
add
int3
mov
add
cwde
pop
sbb
fild
add
pop
add
or
jne
xlat
jne
add
xor
and
add
adc
mov
add
add
or
jne
les
mov
pop
or
sbb
xlat
jne
test
je
or
inc
xlat
jmp
scas
sti
add
or
push
add
dec
pop
scas
jmp
scas
cmp
jl
sub
sbb
xchg
jmp
out
mov
dec
add
add
scas
enter
xchg
or
mov
add
push
or
sub
mov
or
pop
add
add
hlt
or
add
jmp
scas
jmp
add
int3
pop
mov
pop
pop
xlat
std
sbb
add
xchg
or
pop
xlat
jne
dec
add
or
sbb
minps
jge
or
pop
in
dec
add
or
pop
lods
add
pushf
pop
mov
adc
fnsave
xlat
add
or
dec
add
mov
xor
pop
xlat
jne
add
sub
sbb
add
cmp
or
sub
xlat
jne
pop
call
or
pop
enter
mov
pop
test
add
xchg
pop
add
xlat
jne
xlat
or
dec
add
or
pop
and
imul
jne
pop
or
pop
or
or
or
add
or
add
or
xlat
jne
test
add
xchg
pop
pop
xlat
jne
jl
and
ins
pop
pop
add
fwait
pop
ja
add
add
sub
mov
jne
adc
add
pop
cld
or
fst
pop
aam
ffreep
pop
mov
add
pop
xchg
add
jne
pop
(bad)
mov
jl
pop
pop
ins
pop
loope
pop
pop
push
add
inc
pop
and
sub
xor
add
jmp
xlat
xchg
lock
sub
or
rol
pop
inc
adc
mov
mov
add
add
mov
pop
dec
add
or
jne
inc
pop
sub
sub
jmp
xchg
add
enter
pop
int3
add
cmp
pop
movs
add
jmp
sti
nop
pop
push
inc
sbb
inc
add
cdq
jbe
add
push
or
add
pop
xlat
jne
rol
add
or
mov
pop
xor
sbb
sbb
pop
or
jg
jmp
enter
add
mov
and
pop
xlat
inc
retf
test
push
scas
jnp
jae
adc
add
xlat
jne
jbe
cld
add
fsub
pop
enter
jo
add
mov
cmp
or
cmp
mov
jne
jmp
jo
inc
pop
pop
inc
add
xor
and
add
out
shl
add
dec
push
sahf
sti
stos
(bad)
fadd
and
ror
mov
inc
mov
or
jmp
sahf
jnp
je
cmp
div
fadd
scas
and
ds
pop
adc
adc
push
mov
rcr
add
rol
dec
xor
add
dec
xor
add
add
sub
adc
xor
add
or
fmul
xor
xor
or
xor
ins
adc
adc
xor
sbb
add
out
and
fdivr
call
or
nop
xchg
popw
test
mov
jo
add
or
imul
sbb
and
add
popf
ins
push
sbb
or
ror
or
lods
and
and
dec
ror
or
sub
or
aas
fisttp
lock
pop
add
add
fmul
nop
xchg
add
add
mov
les
add
call
inc
call
xor
hlt
cld
ja
or
or
ror
jae
adc
xor
xor
adc
xor
sbb
into
ss
sti
ja
or
sbb
push
imul
or
pushf
pop
pusha
dec
rcr
or
adc
xor
or
push
or
pop
or
jnp
movhps
push
pop
jo
pop
push
sbb
pop
imul
sar
sti
or
or
sar
or
push
mov
(bad)
sub
(bad)
and
(bad)
je
sub
add
sbb
mov
fmul
dec
add
or
pusha
fild
retf
loopne
fcom
scas
pop
aam
pop
les
sar
rcl
push
or
ja
sbb
cwde
cmp
jge
pop
add
and
jecxz
out
push
sti
cmps
mov
push
cwde
sbb
pop
pop
lods
cmp
and
pop
xor
mov
nop
data16
add
add
or
je
or
mov
pusha
fld
or
pop
or
int3
and
or
cmps
push
jae
mov
or
adc
jmp
das
adc
loopne
pusha
scas
or
jne
and
sbb
or
ss
stc
mov
add
xor
and
test
ret
push
cmp
lods
cmp
and
das
add
fcom
sbb
adc
enter
aam
and
cmp
jo
or
pop
ja
pop
xor
mov
jnp
dec
mov
mov
dec
adc
int
je
add
sbb
sahf
push
fs
lahf
dec
ud2
(bad)
or
adc
or
or
jmp
clc
sub
sbb
add
mov
fild
ret
or
lock
pop
or
mov
scas
xchg
sub
je
adc
xor
and
jmp
leave
or
push
push
imul
mov
out
scas
imul
or
dec
or
fdivr
rcl
jae
(bad)
sbb
pop
cmp
xchg
push
pop
push
add
or
cmc
js
push
mov
(bad)
(bad)
jnp
or
add
sar
test
xor
xor
or
or
or
or
mov
pop
or
ret
or
mov
lahf
sar
jge
js
jnp
or
sar
pop
inc
call
pusha
frstor
cwde
sbb
and
sub
and
and
or
daa
add
mov
mul
sub
mov
sub
loopne
push
jmp
jmp
ror
sub
les
sub
mov
mov
imul
xchg
push
inc
ret
jo
xchg
or
cmp
dec
or
or
cmp
adc
mov
or
and
lock
dec
add
add
or
pop
test
inc
or
scas
jmp
push
or
add
dec
sbb
xor
sti
add
inc
sbb
or
or
hlt
inc
pop
pop
or
cmp
loopne
pusha
sar
inc
mov
outs
or
add
sbb
inc
jmp
xchg
fcom
cmp
popa
repz
lods
and
pop
fcom
mov
outs
add
mov
ret
pop
mov
cmp
inc
loopne
jnp
pop
jge
ins
das
xor
dec
add
sbb
or
adc
mov
inc
or
and
sbb
or
and
cdq
inc
xchg
ja
and
xor
lea
jne
lds
mov
xor
or
inc
inc
retf
add
sbb
pop
int3
popa
or
arpl
inc
mov
pop
mov
jecxz
or
or
rol
mov
je
cmp
pusha
pop
dec
or
pop
add
in
mov
and
xor
add
or
(bad)
add
adc
and
cmps
dec
xor
and
pop
cld
bnd
in
or
push
sub
or
xchg
push
or
pop
or
inc
sbb
xchg
adc
shr
xlat
push
imul
add
push
jmp
mov
mov
cwde
or
nop
and
xor
jecxz
pop
xchg
adc
daa
outs
xchg
xor
mov
or
xor
xor
mov
xor
sbb
pop
sub
cmps
sbb
stos
or
popf
mov
icebp
inc
stos
or
lods
sar
in
or
push
adc
lods
jecxz
mov
or
movs
sbb
lods
inc
xor
out
inc
jp
jmp
or
out
sti
sbb
ret
jnp
inc
lods
or
imul
add
adc
xchg
jp
ins
add
iret
out
and
adc
jmp
push
and
pusha
or
or
and
sub
out
xor
sbb
scas
adc
or
mov
xor
sbb
inc
sar
pop
test
add
inc
mov
pop
or
pop
clc
lock
push
or
xor
in
or
loopne
pusha
xadd
and
or
loop
in
ror
fbstp
dec
ret
dec
fld
not
and
sbb
in
mov
ret
xchg
or
mov
sbb
ret
iret
js
sti
cmp
push
add
jmp
cmp
sbb
or
arpl
dec
das
ret
or
cmp
adc
shl
call
popa
or
pop
mov
xor
xchg
and
xor
inc
(bad)
and
(bad)
sbb
sub
lock
imul
and
cmp
arpl
fwait
cmps
mov
rcr
add
(bad)
(bad)
pusha
or
xor
or
xor
lods
int3
or
(bad)
push
rcl
cmp
mov
or
and
adc
jae
and
jbe
cmp
push
add
xor
(bad)
and
and
dec
cwde
aaa
test
sub
fadd
jo
add
xadd
daa
pop
test
pop
xlat
jne
pop
xor
sub
jp
sbb
or
xlat
jne
imul
or
out
dec
add
add
aam
int3
add
shl
scas
jmp
lods
add
movs
pop
add
xlat
jge
dec
pushf
add
nop
or
pop
aaa
pop
jl
ins
add
fs
jmp
cmps
sti
add
dec
add
cmp
mov
add
pop
cld
in
dec
add
loopne
mov
add
mov
cwde
add
or
pop
add
je
pop
sar
jmp
or
push
pop
add
or
scas
jmp
cmp
push
or
scas
sti
scas
jmp
or
and
cld
in
dec
add
add
dec
push
in
loopne
rol
inc
mov
pop
test
push
or
xor
cwde
pop
adc
xor
sub
xor
pop
push
or
cmp
and
or
xor
push
mov
clc
jmp
add
add
sbb
inc
add
add
mov
and
scas
add
je
push
jo
pop
pop
inc
add
cmp
sub
loopne
pop
sub
sbb
mov
shl
daa
test
(bad)
jle
add
inc
pop
or
(bad)
(bad)
(bad)
jp
ds
or
mov
in
sar
dec
adc
cmp
or
pop
(bad)
(bad)
(bad)
fisttp
aaa
aas
xchg
fst
cmp
sbb
cmp
or
enter
dec
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
lock
stos
xor
arpl
fmul
aas
push
ins
dec
add
imul
out
test
jg
jo
add
pusha
fistp
cmp
lock
and
jg
aaa
cmps
sti
(bad)
call
push
inc
add
push
inc
add
(bad)
jmp
mov
and
inc
pop
inc
add
cmp
pop
inc
add
inc
add
imul
(bad)
xchg
add
outs
inc
add
outs
daa
add
jo
add
jb
rcr
inc
add
fwait
jle
fstp
inc
add
dec
add
pop
adc
mov
push
add
add
pop
add
jge
in
push
cmp
and
or
clc
jnp
daa
iret
mov
or
pop
or
or
leave
push
cwde
(bad)
adc
daa
dec
sahf
cmp
inc
and
and
jns
in
xchg
adc
jp
and
out
popf
fwait
cmp
rol
adc
add
pop
xchg
inc
add
cwde
out
lahf
aas
push
add
mov
add
xchg
js
pop
int3
push
or
add
pop
pop
add
dec
movntq
pop
mov
out
xor
jmp
test
pop
fcom
out
add
adc
ret
or
loopne
mov
shl
jns
add
ret
ins
push
add
pop
inc
fadd
mov
fmul
jge
pop
mov
pop
into
add
pop
jo
mov
aas
lods
pop
sar
cmp
pop
test
mov
mov
test
xlat
jne
inc
push
dec
pop
cmp
sub
cmp
jecxz
js
push
test
pop
cs
pop
inc
add
pop
int3
pop
inc
movs
pop
inc
scas
mov
mov
lds
pop
stc
dec
pop
pop
or
int3
push
add
imul
test
add
or
dec
xor
lsl
out
(bad)
(bad)
test
inc
dec
add
dec
add
add
xchg
dec
movs
dec
add
dec
add
jge
sbb
add
mov
in
inc
push
lods
test
or
xor
xor
sub
(bad)
jnp
out
inc
add
add
lock
push
clc
gs
test
loopne
ds
call
or
pop
ins
dec
sub
leave
pusha
iret
into
add
pop
add
add
add
add
and
pop
jb
add
sbb
add
add
push
add
pusha
xchg
std
call
pop
push
add
push
add
push
add
push
or
dec
ret
push
jbe
pop
xor
dec
pop
add
cmp
add
push
sbb
stc
inc
and
add
push
add
push
add
pop
fbstp
call
sub
add
cmp
adc
mov
arpl
add
or
or
xchg
or
sbb
or
or
or
pusha
xchg
xchg
inc
push
push
ss
ins
add
xchg
ins
add
(bad)
or
or
or
popa
cmp
add
add
adc
or
inc
push
cmp
or
add
push
push
sbb
push
sbb
push
sbb
push
sbb
loope
call
ss
push
add
push
or
add
sub
(bad)
sbb
sbb
push
add
push
add
mov
jge
inc
or
add
es
adc
add
and
add
sub
(bad)
(bad)
dec
sub
add
push
sbb
pop
add
add
add
add
outs
mov
pop
add
or
add
xor
add
or
or
sti
aas
test
sti
xor
add
daa
or
and
push
sbb
sbb
adc
and
outs
fsub
test
idiv
xchg
jno
fmul
stc
or
das
mov
or
cmp
fldenv
aas
or
sbb
mov
inc
or
or
(bad)
test
xchg
adc
jnp
or
add
cmp
ret
xchg
add
add
ret
push
jecxz
jmp
ror
add
inc
add
push
push
add
push
add
push
sar
or
push
pop
fwait
or
sub
sub
jae
add
cmp
lods
xchg
in
or
or
or
jnp
sub
adc
adc
adc
push
not
or
dec
or
jne
gs
test
mov
add
add
add
add
dec
or
add
adc
mov
mov
sahf
push
or
pop
adc
adc
gs
adc
adc
scas
fldenv
pop
add
scas
add
sbb
mov
adc
mov
dec
pushf
jo
ret
inc
or
mov
adc
and
adc
sbb
cmp
adc
adc
adc
mov
pop
or
xchg
dec
sbb
retf
cs
pop
js
adc
into
pop
inc
mov
xchg
rcl
add
pushf
or
add
add
sbb
pusha
fld
scas
gs
push
and
adc
ins
push
lods
push
ins
push
call
cmp
leave
pusha
inc
sub
adc
or
dec
mov
or
add
sbb
add
fisub
add
pop
add
or
add
pop
add
pusha
sbb
add
addr16
and
adc
ja
add
fcomp
les
ja
fsub
or
add
or
xchg
fsub
aas
add
or
outs
add
ss
add
add
fsub
add
out
inc
push
sbb
add
push
sbb
ja
push
cmp
add
stc
add
mov
sti
add
or
inc
push
inc
push
push
sbb
pop
sbb
pop
pop
pop
pop
enter
out
pop
pop
and
pop
and
enter
pop
mov
pop
adc
pop
adc
pop
adc
adc
pop
inc
pop
inc
ror
sti
pop
pop
pop
sbb
or
or
cmps
or
xor
and
enter
or
or
xchg
das
or
ins
nop
or
pop
aaa
xor
enter
xor
jno
and
jno
xchg
xor
push
test
xor
add
mov
mov
sub
push
lock
in
xchg
pop
idiv
pop
add
mov
sbb
mov
sbb
add
add
push
lods
out
push
add
jo
sbb
or
dec
push
shr
call
push
sbb
xor
cmp
test
jnp
cmp
fwait
push
mov
adc
xlat
jnp
pop
mov
mov
push
in
xlat
jnp
pop
icebp
into
cmp
jp
jp
inc
add
xor
dec
or
push
jge
sub
adc
nop
inc
push
pop
sbb
loopne
push
cmp
sub
jge
into
cmp
or
in
loopne
add
push
fs
in
ret
push
add
add
leave
push
cmp
add
add
jbe
das
sbb
mov
daa
pop
or
cdq
ins
mov
adc
or
adc
adc
jbe
inc
es
add
add
adc
add
fs
cdq
add
add
cmp
mov
add
add
sbb
or
or
mov
add
leave
cs
cmp
or
xchg
dec
es
sbb
push
pop
and
es
sub
cdq
fs
dec
sub
sub
cs
xor
xor
dec
es
fs
adc
jge
aaa
cmp
sub
imul
(bad)
(bad)
push
add
sub
add
sub
add
add
add
add
sub
in
fsubr
adc
add
sbb
add
jmp
into
pop
sbb
add
or
call
or
push
adc
cmps
imul
cmps
imul
imul
cmps
imul
lahf
imul
dec
shl
sub
sub
xor
shl
xor
xor
dec
shl
cmp
xor
shl
cmp
pop
mov
pop
add
inc
add
xor
rol
dec
dec
dec
dec
shl
dec
push
mov
push
push
inc
add
push
add
cmp
add
pop
pop
add
pop
arpl
and
xor
inc
rol
pop
arpl
daa
pop
pop
xor
shl
pop
pop
add
add
mov
outs
rol
add
adc
mov
bound
sbb
dec
add
dec
add
xor
mov
inc
and
add
add
out
add
je
push
imul
or
sbb
dec
jne
add
addr16
lahf
lds
or
push
add
adc
or
mov
std
pusha
xor
mov
sbb
ret
adc
test
add
add
or
sidtd
jae
fild
and
(bad)
add
sub
sub
dec
cmp
push
push
push
jo
sbb
popa
inc
and
pop
pop
pop
outs
sbb
cmc
push
jo
add
dec
pop
out
mov
adc
ret
jmp
add
stos
xchg
test
stos
imul
mov
jnp
cmp
pop
adc
in
add
sahf
out
cmp
push
sbb
jns
out
pop
and
or
out
sahf
out
add
push
pop
sahf
out
sahf
add
prefetcht2
sbb
out
sbb
adc
and
sbb
pusha
add
add
sahf
out
mov
add
or
lahf
out
or
or
sbb
fldcw
(bad)
sub
add
add
add
cmp
add
mov
or
pop
adc
sub
sbb
sub
fs
rol
pop
sub
or
(bad)
scas
cli
push
sbb
add
clc
jmp
sbb
add
adc
hlt
pop
int3
add
imul
inc
push
jb
les
movs
add
xlat
or
mov
jmp
imul
adc
mov
nop
iret
inc
scas
mov
iret
pop
out
jne
jnp
jl
add
idiv
adc
pop
add
(bad)
jle
jne
push
adc
inc
pop
or
sti
sahf
jmp
mov
adc
adc
mov
out
push
or
hlt
jmp
adc
push
sti
pop
xlat
adc
add
std
repz
enter
out
add
repz
addr16
or
mov
xor
fsub
pop
sbb
dec
add
pop
sub
or
sub
adc
and
enter
push
out
pop
aaa
adc
pop
push
sar
xor
xor
rcr
cmp
inc
sub
xor
cmp
cmp
rcr
shl
push
loopne
and
mov
xor
fiadd
stc
pop
push
lock
xor
addr16
pop
pop
fadd
xchg
iret
add
pop
push
js
not
jno
adc
int3
rol
cmps
jp
loopne
rcl
add
ret
xor
pop
test
add
pop
aaa
fadd
inc
mov
cwde
adc
test
adc
add
pop
xchg
jl
jb
js
jo
not
call
pop
add
xchg
jmp
jae
add
add
push
sti
xor
sub
add
and
or
leave
pushf
mov
push
add
or
mov
inc
out
stos
inc
or
or
clc
out
add
xlat
jne
sub
call
outs
xor
push
add
adc
add
int3
adc
or
adc
pusha
lahf
or
ret
xlat
mov
lahf
and
rcl
add
frstor
pushf
adc
leave
pushf
add
sar
cmps
cmps
mov
sar
loopne
mov
les
xor
mov
mov
pop
or
add
inc
mov
das
xor
add
in
xor
sbb
xor
and
ficom
add
or
cdq
pop
das
jecxz
add
js
ins
mov
das
in
pop
hlt
out
add
cmp
stos
das
cmc
pop
loopne
sbb
xor
xor
into
cmp
add
adc
mov
pop
add
inc
adc
ins
mov
or
add
das
sbb
xor
sbb
push
sti
mov
pop
pusha
adc
jmp
jnp
daa
pop
sub
xor
and
sbb
xor
adc
scas
or
inc
bound
xchg
cdq
retf
in
add
add
into
push
scas
jmp
fcom
rol
addr16
cmps
jb
fs
adc
mov
adc
xor
adc
in
xor
je
mov
push
scas
push
pop
ds
mov
add
mov
add
stos
out
sti
inc
push
pop
sbb
add
enter
pop
or
in
add
outs
mov
fwait
inc
arpl
lock
add
aaa
fsub
pop
das
push
add
lahf
add
jmp
jno
and
lods
adc
jne
and
inc
add
adc
dec
pop
mov
jo
and
adc
sub
frstor
inc
xchg
pop
add
call
stc
pop
xor
sahf
fcom
enter
pop
sub
xchg
jmp
cwde
add
pop
mov
mov
adc
or
adc
push
pcmpeqw
pusha
pop
ja
das
pusha
pop
inc
add
push
jnp
pop
(bad)
mov
add
push
sbb
call
iret
inc
inc
mov
add
mov
inc
ds
les
inc
loopne
rol
pop
je
pop
add
sti
dec
add
das
retf
stc
or
jmp
cmp
adc
int
lods
jmp
and
or
pop
inc
rcl
pop
inc
out
pop
lock
add
add
mov
pop
enter
push
jnp
add
(bad)
pop
mov
adc
test
cwde
or
pop
mov
add
sbb
xlat
jne
out
pop
mov
add
adc
sbb
or
fistp
adc
scas
sbb
pop
jecxz
adc
fs
add
mov
fisttp
add
adc
xor
arpl
xlat
add
sbb
out
sub
and
lahf
sbb
xor
pop
jmp
fsub
in
pop
push
add
out
pop
das
loopne
dec
add
inc
lock
jnp
pop
aaa
aam
enter
das
repz
ds
add
jg
imul
das
clc
pop
shr
push
xchg
rcl
mov
imul
adc
test
add
icebp
rcl
add
add
pop
add
ins
add
mov
adc
sbb
int3
push
add
push
add
push
jl
jae
add
add
pop
or
pop
and
frstor
sbb
aas
adc
sbb
or
test
jo
mov
mov
adc
fisttp
cmps
jmp
mov
pop
sbb
pop
xchg
dec
add
pop
je
jo
pusha
lahf
inc
pop
pop
fcom
int3
add
das
es
jne
add
add
push
sti
enter
das
mov
rcl
aas
mov
xlat
jne
pop
nop
adc
aaa
mov
cmp
adc
push
int3
jne
jo
push
cmp
adc
adc
cmp
or
adc
add
aas
sbb
add
adc
add
test
add
or
lock
or
pusha
dec
pop
dec
pop
in
add
xlat
push
pop
mov
adc
stc
pop
xlat
or
sbb
sbb
add
push
dec
adc
add
jmp
sub
or
push
out
pop
jmp
ret
jge
cld
fisttp
fadd
xlat
or
pop
xchg
adc
outs
pop
xchg
movs
repnz
xlat
adc
and
or
xchg
xlat
or
adc
jne
jge
xchg
xchg
pusha
clts
enter
mov
fld
adc
fmul
stos
pop
mov
fcom
enter
pop
mov
rcl
add
mov
rcl
adc
fsub
das
pop
pop
jo
pop
add
pop
ror
and
aaa
fsub
add
ficom
adc
stc
dec
inc
jo
fisttp
pop
in
nop
jmp
fcom
rol
and
push
stc
pop
out
mov
add
or
clc
mov
add
movs
pop
mov
push
out
js
int3
and
or
hlt
add
das
sbb
out
sahf
sbb
ja
add
add
nop
iret
adc
dec
add
pop
cmp
cmp
pushf
pop
cmp
inc
pop
xor
inc
add
pop
dec
sar
cdq
and
sahf
das
xlat
push
pop
or
adc
lahf
pop
pusha
or
sbb
xor
mov
sti
fsub
mov
clc
fidivr
adc
dec
inc
add
pop
jge
idiv
mov
data16
pop
fadd
add
mov
mov
addr16
xchg
pop
mov
jl
frstor
jae
add
pop
pusha
lahf
or
jg
sahf
das
nop
iret
jne
dec
adc
test
pop
cmps
iret
add
outs
and
or
mov
nop
mov
(bad)
add
push
stc
dec
scas
pop
mov
rcr
nop
mov
adc
mov
(bad)
das
int3
es
adc
sar
int3
pusha
pop
out
pop
mov
scas
(bad)
sti
int3
and
scas
pop
ds
xchg
fist
jl
mov
xchg
rcl
push
rol
adc
in
lahf
add
iret
inc
push
scas
sub
pop
pop
sar
or
mov
or
mov
iret
sar
add
pop
aas
pop
adc
out
out
or
cld
fmul
in
outs
nop
iret
jne
mov
pop
or
adc
inc
adc
or
enter
mov
aaa
fmul
pop
mov
pop
idiv
pop
movs
adc
mov
cmps
sbb
pushf
add
or
xchg
mov
mov
pop
jg
pop
jl
add
pop
scas
xor
jo
mov
pop
cmp
add
ds
inc
inc
das
inc
pop
cdq
add
cdq
push
add
or
pop
push
dec
add
inc
pusha
lahf
sbb
cmp
ret
ds
sub
ret
pop
leave
jge
nop
outs
adc
les
out
pusha
lahf
sbb
js
add
lds
pop
addr16
sub
jg
(bad)
pop
mov
or
add
pop
pusha
lahf
sbb
add
pop
sar
enter
leave
pop
cmp
scas
js
retf
push
sti
int3
and
retf
pop
lds
cdq
inc
inc
add
pop
rcr
in
xor
(bad)
fsub
adc
into
pop
out
mov
or
add
pop
icebp
fs
sbb
rcl
cld
jecxz
lahf
sbb
adc
rcl
pop
sbb
mov
adc
add
pop
sbb
jl
aam
sub
adc
int3
pusha
add
xchg
xor
inc
add
das
mov
or
ds
sub
xlat
pop
pusha
lahf
sbb
add
pop
push
sti
ds
dec
add
fst
pop
or
cdq
inc
rol
ficom
push
in
xor
jne
test
push
cwde
add
xor
out
cmps
adc
add
jge
mov
das
mov
pop
add
sti
int3
and
fist
neg
add
pop
in
xor
loope
cmp
pop
sbb
loop
outs
nop
rcl
les
add
sti
int3
and
in
neg
add
pop
in
xor
out
fsub
sbb
inc
add
pop
mov
or
stc
and
call
jno
sbb
add
add
pop
cmp
psubsb
dec
add
jmp
les
jmp
and
movs
add
pop
xor
in
xor
cmp
fsub
pop
add
pop
inc
push
push
iret
or
add
(bad)
push
pop
sub
lock
pusha
das
pop
pop
or
icebp
into
jno
rcl
lock
sahf
sbb
pop
jb
adc
or
cmp
sbb
jge
rcr
mov
add
das
mov
lods
xor
pusha
lahf
add
pop
xchg
nop
xchg
sar
not
sahf
js
and
test
sti
add
pop
mov
xor
pop
mov
sbb
cli
pop
retf
fsub
stos
xchg
mov
addr16
shr
pop
fs
or
pop
jmp
pusha
lahf
sbb
sar
add
pop
add
daa
iret
add
xor
mov
pop
push
add
push
sti
rol
add
mov
pop
ds
cmc
int3
inc
add
pop
es
cdq
inc
cmp
add
pop
pusha
lahf
sbb
sub
inc
cmp
enter
sahf
sbb
xor
das
cmp
and
and
inc
rol
int3
sbb
or
pop
or
adc
or
push
or
add
xor
xchg
inc
push
or
add
or
pop
pusha
popf
mov
out
add
inc
cmp
enter
add
jnp
iret
pop
ins
pop
enter
push
mov
pop
je
ds
xor
out
jl
loop
inc
cwde
add
icebp
int3
and
xchg
iret
add
pop
mov
add
pop
xchg
pop
add
inc
neg
push
add
loop
inc
ds
movs
inc
add
and
sub
push
pop
mov
cmp
add
push
sti
ds
dec
add
sbb
sub
cdq
rcl
add
or
cmp
das
int3
pop
int3
add
stc
sbb
fwait
pop
aam
jl
mov
cmps
pop
fadd
les
xor
ds
in
nop
add
push
in
pop
adc
xor
hlt
pop
jo
addr16
sbb
pop
das
cld
pop
pusha
add
dec
cmp
and
add
pop
push
pop
add
or
fsub
pop
or
add
pop
adc
add
ds
pusha
pop
sbb
add
and
add
pop
sub
into
dec
add
add
pop
(bad)
jne
or
aam
les
daa
pop
ret
or
mov
pusha
lahf
or
out
inc
pop
movs
adc
sub
dec
pop
mov
cdq
inc
push
sti
add
pop
push
jo
or
sub
pop
pop
add
sbb
sub
fs
add
ja
pop
sub
sbb
xor
cs
je
adc
xor
add
pop
jl
int
sti
sbb
mov
test
mov
loopne
xchg
xor
add
pop
xchg
lods
xor
pop
pushf
pop
xchg
add
sbb
xor
movs
add
or
fdiv
sahf
sbb
pop
mov
add
sub
pusha
add
cmp
das
les
dec
push
cmc
int3
sub
aaa
fsub
sti
das
int3
pop
and
cmp
adc
or
aam
or
jo
cmps
or
out
pop
lock
cmp
add
pop
in
xor
jae
add
in
mov
iret
or
sbb
addr16
or
cmps
pop
add
jl
sbb
jae
add
or
fs
fsub
inc
pop
adc
fs
add
sbb
in
jae
add
out
and
sub
enter
inc
pop
sub
xchg
sar
inc
pop
xor
loope
cmp
pop
cmp
retf
pop
aaa
enter
inc
pop
inc
fcom
xchg
sar
dec
pop
dec
ror
cmp
pop
push
lods
cdq
inc
push
sti
add
pop
xchg
idiv
mov
iret
or
add
pop
enter
push
nop
sar
push
add
jl
cmp
add
test
sti
int3
sub
push
pop
mov
add
xchg
add
sbb
xor
push
pop
pushf
lock
jmp
pop
add
movs
or
fcom
add
enter
xor
push
pop
mov
xsha1
cmps
mov
ret
pop
mov
pop
mov
or
cdq
rcl
add
int3
sbb
xor
aam
fsub
push
add
fadd
iret
or
add
mov
push
ja
pop
sub
pop
cmc
int3
pusha
sub
pop
adc
add
sbb
sub
pop
lahf
fwait
rcr
das
add
cmp
pusha
inc
cld
das
call
push
(bad)
add
add
pop
int3
adc
or
popa
pop
or
add
sbb
bound
adc
add
or
fsub
sbb
add
pop
and
add
xor
pusha
pop
sub
add
xchg
rcl
dec
add
int3
and
push
push
inc
xor
imul
dec
sbb
push
nop
outs
push
sbb
enter
mov
sbb
adc
add
scas
sbb
adc
add
das
pop
pop
dec
ins
pop
mov
mov
jne
xchg
jmp
movs
adc
xor
jle
adc
xlat
or
pop
xchg
push
add
out
and
nop
fsub
aaa
inc
adc
jb
cdq
pop
enter
sbb
add
jae
mov
hlt
(bad)
dec
add
add
pop
push
cmc
(bad)
adc
mov
addr16
sti
pop
mov
int3
add
pop
xlat
or
mov
ja
in
rdmsr
(bad)
mov
js
sti
fsub
push
iret
pop
movs
sub
jns
xor
rcl
xchg
je
imul
add
xlat
fcom
jo
push
xchg
jmp
ins
add
sbb
mov
ficom
push
adc
jmp
sti
das
fist
pop
adc
pop
xlat
or
pop
dec
adc
jmp
sti
pop
jle
(bad)
loopne
xor
sub
jmp
sbb
or
out
push
sbb
clc
(bad)
dec
add
pop
in
in
adc
add
sti
dec
adc
fadd
sbb
das
hlt
pop
enter
out
add
pop
xlat
mov
test
pop
cld
pop
jmp
adc
add
pop
scas
cmp
cmps
pusha
pop
aaa
pop
or
jl
je
mov
out
aaa
enter
add
sbb
pop
push
xor
mov
jae
cmp
adc
mov
xlat
xor
pop
and
add
(bad)
es
cld
lds
push
jecxz
das
pop
repnz
int3
add
mov
or
pop
aas
in
jae
sbb
pop
fs
sbb
dec
fs
sbb
pop
add
scas
sbb
xor
xchg
pop
push
fstp
xchg
pop
add
push
pop
lfence
push
and
sbb
xchg
adc
push
adc
fsub
or
add
add
pop
pop
lock
add
sbb
add
idiv
loopne
add
ds
addr16
cdq
pop
jge
mov
pop
outs
pop
enter
int3
and
fwait
pop
neg
add
xchg
push
sbb
mov
or
xchg
mov
lahf
pop
jae
sbb
add
sbb
cmps
pop
je
add
cmp
adc
mov
or
cmp
xor
or
das
mov
pop
xlat
adc
add
xor
adc
add
and
cmps
pop
fisub
xor
adc
add
jne
les
mov
and
mov
and
mov
stos
pop
(bad)
movs
xor
adc
stos
pop
pop
pop
ja
sar
lods
pop
adc
adc
lods
pop
sbb
mov
add
iret
and
add
call
das
pop
aaa
fadd
adc
pusha
pop
sub
adc
out
add
das
xor
ins
out
aaa
je
add
pop
in
jae
sbb
mov
ja
pop
in
jae
sbb
pop
inc
ds
sti
jo
sbb
pop
lahf
inc
pop
push
fsub
push
add
neg
mov
push
sbb
xor
pop
xor
addr16
sbb
mov
iret
or
add
mov
adc
ror
mov
lahf
sbb
add
xor
add
jge
int3
add
sti
int3
rol
pop
mov
mov
test
sbb
xor
rcl
cwde
or
fsub
ret
mov
fs
add
pop
retf
js
enter
les
aad
xchg
sar
lds
fist
and
jmp
sti
add
pop
repz
or
enter
add
sbb
leave
pop
pop
and
sbb
adc
or
retf
clc
ror
scas
sbb
pop
sbb
loopne
lahf
sbb
pop
and
ds
pusha
pop
das
enter
xchg
rcl
mov
adc
inc
pop
rol
int3
mov
shr
dec
pop
or
test
rcl
push
mov
add
pop
popa
cwde
or
fsub
rcl
imul
pop
jne
xor
pusha
lahf
add
pop
jg
xchg
sar
(bad)
pop
mov
cmp
pop
xchg
inc
cdq
inc
push
sti
add
pop
popf
sub
or
fst
cmps
and
addr16
sbb
ficom
mov
add
push
xor
fist
mov
and
(bad)
cdq
inc
push
sti
add
pop
iret
in
or
ficom
fxch
add
sbb
fist
jecxz
add
loopne
mov
ins
mov
or
add
das
not
jecxz
lahf
sbb
and
pusha
lahf
cmp
nop
sar
mov
in
adc
js
in
pop
inc
push
sti
int3
fs
pop
sub
add
pop
xor
sbb
xor
call
xor
addr16
pop
inc
adc
mov
add
pop
push
clc
mov
inc
jmp
pop
call
adc
in
pop
rcr
fs
add
pop
outs
shl
pusha
lahf
add
pop
jns
xchg
sar
out
pop
and
lock
lea
add
pop
xchg
jo
or
repnz
mov
sbb
repz
stos
push
add
or
fdiv
pop
mov
add
pop
mov
xor
pusha
pop
leave
sbb
div
pop
rcl
adc
clc
pop
inc
(bad)
pop
lock
das
add
pop
(bad)
fild
sti
fsub
loopne
add
pop
loope
neg
pop
cmps
pusha
lahf
sbb
out
lods
add
pop
out
xor
out
cwde
add
pop
pop
ds
cmc
pop
mov
(bad)
pop
sbb
inc
nop
clc
adc
xor
add
loopne
sar
dec
add
iret
push
mov
adc
xor
sub
cmp
add
dec
adc
popf
call
add
addr16
stc
pop
add
add
add
push
add
mov
stc
dec
sub
or
adc
cmp
pop
or
sub
lds
add
sub
rol
or
cdq
adc
mov
push
stc
dec
adc
pop
pop
mov
add
pop
sbb
adc
in
xor
and
fsub
ins
add
iret
or
add
pop
sub
add
pop
das
pop
sub
adc
mov
adc
iret
or
sbb
das
aaa
pop
add
pop
stc
or
daa
pop
cmp
mov
aas
add
pop
or
adc
iret
or
mov
add
ja
pop
mov
enter
movs
add
jge
nop
rcl
nop
add
lock
and
data16
push
xchg
pop
push
add
das
pop
pop
push
cdq
inc
push
sti
add
pop
pop
cmp
or
sbb
arpl
add
sbb
sbb
cmp
out
imul
fsub
cmp
pop
nop
sar
in
adc
and
jae
cmp
add
pop
ja
push
sti
int3
les
and
jnp
add
cdq
mov
push
ja
push
sti
int3
pusha
pop
pushf
add
or
rcl
add
xor
mov
fsub
pusha
add
pop
(bad)
sbb
iret
or
add
ja
pop
cmp
sub
mov
or
xchg
pop
and
sub
pusha
lahf
sbb
add
pop
push
sti
ds
dec
add
sub
mov
loopne
sub
xor
stos
xor
addr16
mov
das
pop
scas
fs
or
add
pop
mov
pusha
lahf
sbb
nop
sar
ins
add
pop
mov
pop
add
pop
mov
inc
add
ret
or
xor
xor
sbb
xor
ss
retf
or
mov
iret
addr16
pusha
popf
loope
pop
hlt
mov
sar
fcom
pop
loopne
add
pop
cmp
xlat
int3
add
pop
fild
sti
int3
and
or
cdq
inc
movs
add
ja
pop
nop
add
push
out
jl
ds
in
xor
aas
pop
fsub
sbb
push
add
adc
or
repz
addr16
sti
pop
or
pop
sub
iret
or
fadd
sti
pop
adc
lahf
sbb
pop
inc
add
loopne
pop
add
das
in
mov
mov
inc
pop
pop
fcom
xor
pop
or
add
sbb
inc
pop
lfs
iret
or
fmul
adc
mov
pop
pop
mov
dec
ds
pusha
pop
sbb
dec
jge
nop
rcl
add
and
dec
pop
neg
add
in
xor
dec
pop
mov
sbb
or
jecxz
jle
hlt
mov
aaa
fsub
add
aaa
pop
loopne
xchg
sar
push
pop
cmp
int3
and
aas
mov
add
movs
pusha
lahf
and
add
ja
pop
rol
int3
mov
push
das
dec
pop
or
ins
add
dec
push
push
sbb
xor
pop
pop
push
inc
push
sbb
push
sbb
push
test
adc
or
mov
rol
pop
lock
add
and
loopne
add
or
cdq
das
das
arpl
rol
scas
sbb
das
addr16
les
pop
pop
imul
imul
mov
ins
mov
add
jae
je
enter
popa
pop
ja
xchg
sar
bound
jnp
int3
and
jg
mov
adc
add
ja
pop
mov
and
jecxz
sar
enter
inc
adc
jno
mov
hlt
mov
add
push
sti
pop
pop
das
(bad)
pop
fcom
add
or
fsubr
xchg
pop
enter
pop
adc
das
xchg
pop
mov
fsub
push
fwait
pop
cwde
sbb
add
lahf
mov
enter
ins
pop
mov
pop
pop
add
cmps
inc
adc
xor
add
ja
pop
ins
mov
sbb
add
scas
pop
sahf
jb
sbb
add
aas
mov
into
(bad)
mov
add
pusha
lahf
sbb
adc
jb
push
cmp
enter
sahf
sbb
xor
add
sbb
add
(bad)
test
ins
mov
add
int3
pop
xchg
xor
pusha
lahf
add
rol
ins
add
iret
(bad)
pop
iret
inc
loope
pop
adc
push
pop
sar
and
jns
inc
icebp
outs
mov
pop
or
hlt
mov
add
das
call
add
outs
mov
das
out
pop
mov
add
in
rcl
hlt
pop
mov
enter
test
jle
xchg
rcl
je
jg
cmp
xchg
cmp
enter
dec
add
pop
or
sub
or
xor
aaa
pop
push
mov
pop
or
pusha
dec
loope
add
sub
int
cld
mov
add
xor
or
xchg
and
pop
xlat
or
xchg
and
pop
xlat
or
mov
mov
and
add
fs
cmp
sub
mov
jmp
leave
pop
inc
sbb
or
mov
xchg
add
add
jmp
enter
mov
jmp
lods
mov
cwde
adc
lods
jmp
jl
jo
nop
pop
fs
lods
jmp
pop
add
add
sub
sbb
xchg
pop
add
out
or
add
mov
pop
add
push
cmp
adc
xchg
pop
imul
add
add
pusha
ldmxcsr
mov
mov
add
sbb
xor
pop
push
jo
pop
outs
mov
jne
call
aaa
fsub
mov
pop
popa
pop
sub
xchg
stos
pop
adc
xchg
aas
iret
jge
fsubr
or
lock
dec
add
outs
nop
jb
adc
add
nop
jnp
adc
mov
adc
mov
adc
mov
adc
mov
nop
lahf
jo
push
add
adc
maskmovq
test
pop
inc
sbb
sar
pop
pop
mov
cmp
mov
lahf
add
pop
xor
idiv
das
mov
sbb
test
aaa
mov
out
xor
test
or
sbb
xor
stos
pop
retf
add
xor
add
hlt
lods
mov
jne
ja
lods
pop
pop
fst
and
add
sti
int3
fadd
scas
pop
in
or
rol
scas
pop
cmc
les
sbb
xor
mov
std
mov
add
lods
or
fsub
pop
add
fs
add
enter
mov
sbb
add
and
sub
sti
add
or
mov
addr16
sbb
mov
iret
or
fdivr
lahf
sbb
pop
push
xor
mov
pop
pop
sub
mov
pop
gs
mov
pop
ins
adc
mov
push
jne
add
pop
jge
in
add
jge
clc
lods
dec
add
sar
and
ret
cdq
inc
push
xchg
add
pop
in
xor
les
fsub
sbb
mov
or
xchg
mov
lahf
sbb
add
pop
sar
enter
enter
xchg
movs
cwde
add
pop
stos
push
sti
int3
and
neg
pop
mov
in
xor
mov
push
fs
or
add
pop
ret
enter
push
add
pop
enter
xor
pop
int
cmp
add
pop
rol
sti
int3
sub
rcl
xlat
or
and
rcl
fcom
sbb
xor
aam
loope
push
xor
addr16
pop
out
stos
and
(bad)
pop
jmp
push
sti
fdiv
adc
xlat
pop
lock
in
fcom
cmc
fadd
sbb
xor
fst
cli
int3
or
fsub
ficom
inc
popf
je
iret
add
pop
add
out
mov
fs
pop
add
pop
or
add
pop
push
pushf
xchg
sar
ficom
adc
fist
sbb
push
sti
add
pop
sbb
test
pop
and
addr16
sbb
loop
daa
and
iret
or
fsub
pop
sub
add
fs
pop
xor
stos
push
mov
in
fcom
xor
pop
cmp
add
sbb
out
inc
lods
add
or
fsubr
pop
inc
xchg
add
pop
dec
mov
pusha
pop
mov
pop
adc
mov
jae
aaa
fcom
cmp
sbb
in
das
pop
mov
or
add
in
pop
lods
sti
or
test
out
pop
inc
scas
jmp
fcom
les
out
pop
(bad)
jne
jne
pop
inc
mov
pushf
add
pop
(bad)
jne
or
mov
je
icebp
pop
xlat
jne
or
pusha
adc
pop
scas
sbb
add
and
mov
fs
pop
adc
cld
test
push
sbb
imul
call
push
sbb
lods
add
push
sbb
test
jmp
sbb
pop
add
es
clc
pop
inc
dec
adc
lods
jmp
lods
stc
pop
and
or
cli
pop
sbb
dec
add
add
pop
rcl
scas
sbb
pop
test
xchg
add
pop
adc
add
pop
(bad)
jne
cmp
adc
pop
retf
or
xor
sbb
frstor
add
adc
aaa
fmul
lock
dec
add
hlt
add
ret
adc
cmp
pop
vsubpd
or
add
add
jmp
lock
push
add
dec
push
add
shl
or
shl
xor
js
fcom
and
dec
xlat
xor
fmul
dec
push
add
pop
xor
jne
cmp
(bad)
add
push
add
shl
cmp
add
adc
add
xlat
je
or
pop
push
loopne
sub
jo
dec
xlat
jne
cwde
or
inc
out
ja
xlat
or
pop
lock
and
lahf
out
jle
je
cmp
pop
or
add
dec
arpl
add
jne
sti
dec
push
add
pop
push
xchg
push
pop
mov
rol
fsubr
push
add
push
add
jne
lock
and
add
mov
push
cs
dec
push
add
add
pusha
xlat
jne
xlat
sbb
test
pop
xchg
fbstp
and
enter
clc
add
fwait
pop
xlat
jg
add
lahf
sbb
ds
add
pop
cmp
je
mov
add
xlat
jne
xlat
jae
mov
mov
pop
pop
jge
jne
or
mul
add
add
xlat
jne
rol
test
repz
or
pop
enter
push
pop
push
xlat
sbb
ltr
mov
or
je
dec
cmps
js
pusha
nop
dec
dec
call
(bad)
adc
inc
add
pop
enter
xlat
cmps
jo
cwde
cmp
stos
nop
pop
pop
xlat
jne
shr
nop
dec
clc
pop
sar
mov
jbe
mov
mov
je
rcr
push
add
psubsb
add
xlat
jne
popa
jo
mov
pop
cmp
rcl
fcomp
div
pop
push
daa
sub
mov
or
add
das
rol
push
das
mov
push
push
add
mov
xor
pop
shr
xor
push
sti
add
push
mov
inc
jbe
xlat
shl
mov
and
cwde
xlat
xor
sub
add
fwait
or
pop
xlat
xor
and
cmp
pop
pop
jo
mov
push
punpckhbw
and
xlat
xor
mov
mov
xor
push
pop
pop
xchg
adc
sbb
jnp
xchg
lahf
fadd
xor
xchg
adc
add
sub
test
daa
mov
sbb
cmp
adc
mov
sub
pop
jo
mov
scas
and
clc
push
mov
jmp
scas
loopne
call
add
mov
push
arpl
inc
dec
adc
sbb
mov
adc
scas
jmp
mov
dec
sub
mov
imul
cmp
jmp
scas
pusha
pop
sub
das
inc
imul
daa
scas
imul
cmp
dec
pop
sar
jmp
pusha
add
pusha
pop
inc
push
add
dec
dec
xlat
jne
xor
adc
push
xchg
nop
daa
js
and
inc
xor
xlat
cmp
daa
push
or
add
xlat
nop
adc
and
add
je
clc
or
add
loopne
lock
shl
js
fcom
sti
jo
pop
jmp
(bad)
add
pop
inc
pop
mov
pop
cmp
mov
mov
pop
mov
cwde
adc
mov
add
sbb
add
cmp
call
inc
ret
imul
push
add
or
pop
clc
add
or
mov
shr
add
mov
cmp
dec
sbb
add
mov
cmp
and
xchg
xchg
add
fsub
js
scas
jmp
mov
dec
add
scas
jo
call
rcr
cmps
scas
imul
call
inc
(bad)
into
inc
ret
clc
cmp
xchg
add
xchg
imul
jo
cmp
add
mov
or
add
call
dec
xor
call
pop
mov
add
cmp
(bad)
add
shl
adc
add
enter
scas
imul
mov
cmps
imul
scas
jae
lock
mov
jmp
cmps
imul
pop
cmps
imul
scas
imul
call
lock
dec
pop
js
xchg
pusha
idiv
nop
jmp
jmp
mul
sbb
js
daa
shl
lock
or
dec
loopne
scas
mov
mov
add
nop
aas
nop
jg
add
jmp
call
ja
add
call
aas
inc
jmp
xchg
cwde
test
nop
mov
scas
scas
jmp
scas
cmp
or
pop
pop
psubusb
mov
add
inc
or
test
fsubr
scas
sub
cwde
lahf
cmps
imul
js
push
mov
loopne
imul
mov
retf
jo
adc
sbb
mov
add
push
pop
jmp
call
mov
enter
mov
add
or
pop
loopne
sbb
sbb
mov
dec
enter
scas
test
sub
sbb
mov
scas
mov
mov
aaa
mov
add
push
aas
ror
mov
daa
sub
call
scas
mov
cmps
add
xor
(bad)
xchg
add
imul
cmps
xor
js
mov
rcr
inc
aaa
inc
imul
push
add
push
cmps
imul
ins
call
inc
and
xchg
test
call
cmp
(bad)
(bad)
push
or
mov
cmps
jmp
add
rol
in
mov
call
add
pop
xchg
lock
push
pop
cmp
scas
imul
scas
imul
and
scas
imul
js
nop
shr
call
or
pop
dec
ins
call
daa
scas
jmp
in
add
pop
dec
add
jo
mov
or
pop
push
pop
call
jmp
mov
mov
add
jne
scas
sub
adc
pop
mov
scas
jmp
loopne
sub
sar
call
vmread
nop
jmp
scas
imul
xor
dec
test
inc
and
jne
sub
add
push
push
loopne
mov
push
mov
or
add
shl
add
js
nop
jmp
scas
imul
or
and
test
rol
jmp
cmps
fdivr
psubb
and
pop
scas
imul
and
pop
fmul
mov
lock
or
jmp
scas
jmp
sub
cwde
or
add
imul
xor
call
xchg
sbb
mov
enter
and
jne
out
or
sbb
or
jne
jne
sub
dec
jecxz
dec
rcl
jne
push
clc
dec
mov
clc
dec
push
cmps
pop
enter
js
mov
test
test
psubsb
cmps
imul
cmp
cmp
rol
inc
scas
femms
sbb
(bad)
loope
sbb
xlat
sbb
jg
or
icebp
loop
inc
push
das
mov
dec
dec
and
or
pop
shl
loopne
sub
sbb
ret
daa
and
and
push
add
sub
pop
sbb
and
push
or
dec
dec
and
loope
push
pop
daa
pop
pop
cmp
jmp
inc
bound
bound
xchg
les
mov
sbb
fistp
cmp
xor
retf
fwait
xchg
inc
scas
xchg
mov
push
femms
sbb
nop
jae
punpcklwd
add
xor
daa
and
xlat
(bad)
push
and
fld
add
test
push
mov
cmp
pusha
dec
test
scas
jo
and
stos
push
sbb
sbb
xchg
scas
add
stos
test
jmp
cwde
js
jnp
jns
jo
pop
pushf
jb
sti
div
cmps
mov
sbb
mov
das
push
mov
mov
sbb
cmps
in
xchg
xchg
div
nop
sbb
inc
and
mov
or
les
inc
add
push
sub
xor
mov
les
xor
adc
or
test
adc
adc
sti
shr
mov
cmps
xchg
jmp
and
ret
mov
les
and
test
and
mov
jecxz
popa
or
imul
nop
xchg
and
(bad)
out
push
mov
cmp
add
add
xchg
mov
in
adc
cmp
pop
lods
pop
popf
sbb
aam
push
add
add
adc
xor
lds
jo
push
add
adc
inc
sub
sbb
aaa
or
cmc
retf
or
test
sti
test
es
add
add
xchg
xor
arpl
jo
adc
pop
push
mov
pop
call
mov
hlt
fld
jmp
aad
daa
dec
(bad)
or
icebp
push
inc
sar
aas
idiv
cmp
(bad)
sti
out
mov
mov
pop
or
stos
(bad)
cmps
add
inc
add
das
and
xchg
sti
pop
clts
xor
test
loope
push
push
mov
cmps
push
(bad)
addr16
lahf
cmp
sub
push
add
(bad)
push
ja
push
popf
cmp
sti
call
add
push
push
xor
stos
pop
popf
jp
dec
sbb
or
push
scas
ret
sbb
pushf
jp
loopne
add
neg
add
dec
inc
dec
or
add
inc
inc
cwde
loopne
adc
pop
push
add
loopne
adc
dec
es
add
xchg
push
rol
or
stos
pusha
add
cwde
cmp
and
dec
dec
aas
add
add
push
mov
add
mov
add
cmp
sti
mov
push
mov
dec
clts
cwde
shl
inc
pop
push
xlat
add
add
jmp
pshufw
pop
ds
adc
jecxz
pop
push
add
adc
xlat
retf
add
rol
add
inc
cwde
cs
loopne
iret
enter
mov
xchg
ror
daa
push
dec
jg
inc
mov
das
inc
pushf
jo
repz
aaa
or
(bad)
jecxz
cs
repz
and
or
or
daa
(bad)
icebp
xchg
test
add
and
cmps
lahf
pop
cmp
add
pop
out
stos
jmp
in
inc
cmp
arpl
outs
(bad)
pop
das
inc
or
sbb
and
mov
inc
cmp
mov
and
stos
mov
icebp
mov
ja
imul
inc
inc
add
xchg
xchg
add
out
inc
inc
add
fistp
push
fistp
test
push
cmp
push
inc
rol
add
add
das
push
xchg
or
outs
aaa
pop
ret
xor
cmp
jmp
dec
addr16
or
rol
ret
pop
push
aad
pop
mov
push
scas
xor
and
cmps
pop
enter
and
jg
and
cdq
ret
das
push
xor
pop
xchg
mov
mov
pop
enter
aaa
jnp
shr
cwde
sti
pop
addr16
mov
push
jnp
pop
adc
arpl
ret
xchg
cmp
sub
pop
shl
push
mov
or
call
push
scas
xor
mov
das
sbb
add
sub
or
inc
cmp
dec
aaa
or
mov
push
mov
dec
in
inc
add
sub
mov
sub
xchg
xchg
aas
add
mov
fwait
push
jg
mov
xor
imul
and
sbb
pop
inc
dec
or
retf
sbb
test
pop
xchg
fisttp
adc
ret
fbstp
and
rol
jb
pop
add
inc
push
add
add
xor
adc
sbb
push
xchg
xchg
jbe
sub
out
mov
jb
jnp
cmp
xlat
pop
shr
sbb
pop
jecxz
xchg
mov
das
retf
jb
and
shr
cmp
adc
jo
retf
cmp
sbb
push
into
out
(bad)
mov
sub
mov
iret
sbb
add
sbb
sub
jg
sub
mov
sbb
fwait
iret
push
ret
xor
inc
outs
and
mov
xor
addr16
push
cs
mov
js
jmp
or
fild
daa
push
cmps
jp
and
repz
or
test
and
out
sub
mov
fistp
cli
sub
xchg
cmps
cs
test
aad
push
xchg
outs
mov
sub
add
retf
adc
call
mov
imul
adc
in
inc
cmp
imul
sbb
jnp
mov
outs
das
pop
popa
or
pop
inc
cmps
xor
sub
dec
push
add
or
pop
add
loopne
jae
rol
or
dec
pop
cmp
add
dec
adc
push
sbb
inc
mov
test
das
ret
xor
add
push
xchg
cdq
repz
mov
repz
in
aaa
xchg
punpckhbw
add
add
jo
mov
push
rol
push
sub
mov
jb
cmp
push
retf
dec
sbb
sbb
add
popa
add
call
sub
and
jae
add
add
jecxz
inc
or
push
repz
pushf
add
mov
rol
push
mov
push
mov
add
add
retf
retf
sbb
inc
sbb
adc
pop
pusha
sub
xchg
das
and
pusha
or
ret
xchg
mov
xlat
rcl
pop
pop
sub
sbb
dec
pop
sbb
ret
out
rol
jo
dec
inc
cmp
add
dec
push
arpl
sub
push
cmps
add
adc
fwait
mov
test
stos
jg
sub
imul
sub
(bad)
xor
ror
sub
(bad)
fist
sub
inc
fcom
jb
stos
push
sub
push
mov
imul
or
sub
in
fwait
stos
pop
adc
retf
scas
jb
stos
mov
retf
cmps
jb
mov
add
scas
(bad)
lahf
stos
push
scas
jb
xchg
sub
mov
xor
or
sub
aas
add
retf
xchg
cwde
cmps
sti
out
jnp
add
add
add
sar
test
pshufw
pop
jnp
dec
add
add
add
dec
add
outs
and
mov
xor
stos
pushf
dec
dec
add
inc
hlt
fld
iret
sub
dec
add
ss
add
dec
add
or
xor
mov
lsl
cdq
add
pop
cmovae
jnp
cmp
add
xor
jnp
adc
sbb
jnp
add
adc
add
(bad)
dec
dec
add
inc
dec
add
dec
adc
mov
pop
loopne
adc
add
push
dec
add
push
dec
add
aas
pop
int3
add
pushf
jp
add
add
cwde
jne
adc
mov
xchg
test
div
adc
jl
jae
inc
repz
adc
dec
inc
out
daa
int3
push
xor
pop
daa
jmp
fdiv
adc
inc
data16
jecxz
xor
adc
imul
xchg
adc
int3
inc
mov
jae
adc
not
add
stos
int3
adc
adc
jnp
mov
mov
add
out
cdq
and
cdq
add
cmp
and
test
shl
ds
add
or
cwde
xor
and
out
out
scas
add
fs
fidiv
adc
test
push
out
jnp
ja
adc
mov
sbb
add
pop
add
sub
jne
jae
or
or
add
dec
sar
jg
nop
xchg
dec
add
call
jle
dec
repz
dec
add
fcomp
in
dec
add
xchg
jne
arpl
pop
add
mov
cld
addr16
jg
(bad)
inc
xchg
mov
adc
dec
add
(bad)
dec
add
lea
mov
add
lock
add
out
mov
nop
jle
add
mov
xor
cmp
pushf
test
pop
stos
addr16
add
lahf
movs
xchg
retf
or
add
xchg
pop
in
jo
mov
mov
iret
loopne
pop
fadd
jae
daa
fmul
and
ror
neg
and
or
add
or
xchg
cmp
cmp
lods
or
pop
aam
jl
pushf
(bad)
test
and
nop
and
out
fadd
sbb
dec
sbb
(bad)
or
add
int3
pusha
inc
adc
inc
cmp
push
pop
iret
jl
jne
dec
or
or
xor
jae
repz
mov
pop
pop
aam
and
das
or
popf
int3
adc
mov
iret
or
js
or
sti
arpl
or
test
sbb
jnp
or
out
mov
pop
or
pop
push
nop
out
inc
or
fistp
neg
xlat
or
out
test
inc
or
mov
or
jge
jnp
or
or
ds
add
push
imul
fld
pop
or
push
mov
fidiv
fwait
or
add
out
ret
jne
sub
das
sbb
or
scas
sti
fdivr
clc
xchg
dec
add
add
mov
mov
test
push
nop
pop
js
jae
out
push
fs
push
add
and
add
mov
test
outs
pushf
pop
xchg
add
pop
sar
test
mov
add
pop
push
jae
pusha
pop
pop
add
pop
inc
add
xor
cmp
add
neg
outs
lock
dec
add
add
iret
jne
jmp
mov
xchg
add
cs
test
je
outs
pop
push
add
lds
dec
pop
inc
add
and
sbb
pop
add
jnp
out
(bad)
fisub
mov
dec
add
pushf
ja
por
or
sbb
pop
enter
neg
xor
add
test
setnp
or
mov
bts
loopne
cmp
push
fidiv
jg
inc
dec
dec
add
add
retf
sahf
jmp
ret
mov
sbb
inc
add
pop
xlat
sbb
sbb
pop
sub
stos
enter
cmps
mov
push
adc
pop
in
pop
jle
aas
push
test
das
or
sahf
sub
or
pop
add
pcmpeqd
bound
sub
jo
cmp
add
pop
push
add
sub
add
jae
xor
jbe
add
dec
test
adc
out
add
cwde
loope
or
sub
fld
add
or
and
and
test
sti
mov
push
out
cmp
lock
and
or
cmp
inc
add
(bad)
(bad)
ja
add
add
add
dec
dec
add
adc
jo
jge
jne
nop
add
clc
dec
daa
mov
pop
daa
imul
cmps
mov
lods
test
cmps
jmp
movs
push
dec
add
xchg
xchg
jge
imul
js
add
adc
add
sbb
wbinvd
or
or
sub
sub
je
aaa
mov
sbb
add
fs
cmp
iret
adc
dec
add
nop
jmp
pop
add
setns
sub
sbb
jo
rol
adc
inc
dec
pop
mov
or
sbb
sbb
pop
mov
pop
dec
lods
outs
fdivr
pop
call
dec
add
ins
xchg
outs
and
dec
add
or
dec
adc
aas
inc
push
popaw
arpl
inc
ins
outs
arpl
dec
add
fdivr
pop
dec
outs
arpl
jo
cmp
sar
and
and
dec
outs
jae
inc
dec
stos
sbb
and
ja
sub
arpl
jnp
ins
jne
gs
and
inc
lods
lock
outs
jo
jb
addr16
sub
xor
(bad)
(bad)
(bad)
(bad)
cmp
sub
and
and
dec
and
popa
jne
gs
and
outs
jae
(bad)
(bad)
(bad)
mov
outs
imul
popa
jb
sub
dec
je
and
dec
and
inc
dec
push
xor
aad
push
and
push
inc
push
push
inc
inc
call
adc
popa
ins
pop
into
push
cmc
pusha
test
add
pop
mov
add
je
jo
pop
(bad)
(bad)
out
and
inc
add
out
mov
add
test
add
fs
leave
out
(bad)
pusha
pop
add
add
jae
es
dec
add
xchg
stos
mov
mov
pop
and
inc
or
loopne
add
inc
in
dec
add
push
dec
add
pop
lahf
cmp
inc
(bad)
add
pop
and
pop
pusha
adc
add
pop
bound
(bad)
iret
dec
push
add
pop
fsub
inc
rol
adc
jnp
or
pop
add
sub
dec
or
jnp
loopne
add
add
adc
pop
or
push
push
cmp
mov
fs
sbb
pop
adc
inc
sbb
jnp
sbb
sbb
pop
loopne
sahf
add
cmp
add
cmp
outs
sub
jae
shld
test
pop
cmp
cmp
aas
jnp
push
stos
xchg
ja
sbb
fistp
sub
stos
(bad)
das
or
cmc
dec
pop
mov
pop
adc
dec
push
scas
pop
cmc
dec
push
iret
lahf
pop
pop
stos
retf
and
cmp
pop
pop
aam
outs
cmp
pop
neg
xlat
pop
pop
xor
or
adc
outs
add
xchg
or
jnp
fdiv
paddsb
add
enter
or
sysret
ret
inc
neg
sbb
pop
(bad)
mov
jnp
add
sub
add
xchg
and
das
jg
and
dec
and
scas
cmp
pop
xor
add
ss
jo
dec
cli
sub
or
aas
enter
pop
out
dec
add
cmp
mov
inc
mov
loop
dec
out
jmp
adc
xchg
sub
dec
add
pop
sub
cmps
stos
fwait
add
push
xchg
sbb
pop
xchg
mov
dec
stos
push
sub
test
add
scas
add
dec
add
cmps
add
out
or
jp
or
pop
jge
jb
arpl
jae
mov
fadd
out
retf
pop
cmp
inc
pop
cli
add
sbb
dec
add
loope
and
pop
addr16
sar
sbb
sbb
jmp
ins
or
js
sub
stos
pop
inc
xchg
push
pop
pop
xlat
add
sbb
pop
pop
inc
pop
pop
or
pop
xlat
sar
add
shr
xchg
add
fdiv
dec
(bad)
retf
pop
mov
or
or
sbb
das
xchg
pop
xchg
or
adc
mov
add
or
add
call
daa
jnp
add
xchg
mov
jg
mov
mov
or
or
cld
dec
add
or
sbb
xchg
std
loopne
aas
add
xchg
lahf
jae
push
add
adc
inc
push
dec
add
cmp
add
adc
add
(bad)
push
enter
inc
aas
or
or
add
or
pushf
cmp
jo
pop
repnz
add
add
mov
add
sbb
fidiv
lock
mov
into
test
add
pop
loopne
imul
dec
add
dec
push
pop
cmps
imul
imul
mov
dec
add
cmp
call
cmps
stc
cmps
imul
add
xor
imul
imul
cmps
imul
cmps
imul
push
bound
push
xor
jno
call
add
call
xor
or
push
xchg
inc
mov
inc
sub
jae
mov
xor
sbb
aaa
mov
or
add
mov
sub
mov
mov
enter
std
inc
imul
movs
mov
call
imul
shl
test
je
addr16
add
shl
mov
call
xor
sbb
xor
add
stc
dec
add
cmps
jmp
add
in
add
in
(bad)
and
adc
or
rol
les
movs
or
mov
jmp
add
movs
cmp
jns
daa
aad
mov
or
and
sbb
fimul
mov
add
test
add
pusha
add
das
inc
ret
int
iret
mov
in
call
sbb
cmp
pop
jle
xor
push
fidiv
add
call
and
pop
fisubr
popf
das
cmp
fcomp
loopne
add
xor
add
out
jmp
jae
cmps
retf
ret
add
inc
mov
rcl
dec
add
mov
fadd
outs
test
fdivr
pop
jo
mov
sub
pop
mov
dec
or
mov
cmp
fwait
xor
cmp
scas
nop
das
jnp
cmp
lahf
and
mov
adc
in
test
iret
jge
cwde
das
stos
mov
or
test
outs
push
adc
mov
add
pop
cmp
mov
pop
or
div
fadd
and
fadd
jne
loopne
daa
aam
pop
rcr
pop
enter
mov
es
cli
pop
clc
adc
mov
mov
adc
add
cmp
out
adc
add
add
adc
add
outs
or
cli
or
inc
pushf
or
repnz
push
ret
mov
adc
cld
nop
push
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
cmp
(bad)
inc
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
(bad)
(bad)
call
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
inc
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
(bad)
(bad)
(bad)
push
mov
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
xor
jmp
leave
fwait
xchg
and
and
(bad)
mov
add
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
(bad)
(bad)
(bad)
jmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
(bad)
(bad)
(bad)
jmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
(bad)
(bad)
(bad)
push
and
loop
mov
jp
popa
push
pop
sar
jl
mov
das
(bad)
(bad)
(bad)
(bad)
inc
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
ds
(bad)
(bad)
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
inc
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
sar
(bad)
(bad)
jmp
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
loop
(bad)
call
and
dec
dec
gs
std
or
in
ficomp
frstor
loopne
(bad)
(bad)
cli
add
add
add
lahf
add
inc
add
dec
mov
mov
add
mov
idiv
add
pop
nop
add
add
add
(bad)
inc
add
pop
add
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
sar
jmp
and
outs
and
and
and
fs
(bad)
popa
(bad)
jp
test
ds
(bad)
aam
cmp
mov
cdq
aam
idiv
int
pop
mov
ds
(bad)
aam
xchg
(bad)
aam
mov
aam
mov
aas
jbe
cwde
cdq
daa
cmp
cmp
mov
dec
daa
pushf
rsqrtps
dec
cmp
inc
add
dec
add
imul
sbb
inc
adc
add
and
add
or
inc
sbb
add
adc
fidivr
or
or
add
xor
or
aaa
adc
jae
neg
sub
and
add
and
adc
jg
push
pop
or
rcr
add
aas
idiv
add
add
or
shl
push
cwde
sti
out
add
add
popa
mov
cs
js
push
retf
out
mov
pop
adc
fstp
add
jb
popa
je
add
bound
fndisi(8087
xchg
cs
cmp
aas
add
mov
add
loopne
add
push
push
pop
pop
xor
mov
cs
jb
adc
mov
ins
jbe
add
daa
mov
in
jle
cs
ins
outs
sub
sti
pop
add
add
retf
mov
or
daa
inc
or
or
in
push
push
ja
(bad)
call
idiv
adc
push
lea
push
push
push
call
je
(bad)
(bad)
call
mov
test
lea
je
movsx
lea
inc
lea
mov
test
jne
test
jne
(bad)
out
(bad)
out
call
mov
pop
leave
ret
dec
sub
lea
mov
mov
cmp
(bad)
jg
push
cmp
call
adc
xor
inc
loopne
xor
adc
in
daa
call
push
mov
push
push
call
add
fnstsw
mov
test
sbb
call
mov
push
call
(bad)
(bad)
jmp
mov
mov
mov
mov
xor
inc
ret
mov
xor
cmp
setne
dec
and
or
push
add
mov
or
mov
call
inc
adc
(bad)
(bad)
dec
enter
or
stc
dec
js
push
lea
sub
mov
call
dec
jne
pop
pop
(bad)
dec
add
add
pop
mov
jmp
and
(bad)
push
call
and
js
push
mov
push
lea
mov
mov
push
and
add
dec
jne
pop
pop
inc
mov
push
mov
(bad)
(bad)
(bad)
(bad)
jle
push
call
jmp
mov
cmp
je
mov
test
jne
xor
popf
imul
pop
cmp
jne
mov
jmp
pop
cdq
mov
cmp
jne
and
aaa
xchg
rol
out
aaa
neg
or
dec
or
mov
call
pop
sti
outs
push
push
es
lea
push
sahf
aaa
xor
jmp
cmp
je
(bad)
(bad)
jmp
je
test
mov
je
mov
jmp
mov
mov
test
mov
je
mov
cdq
jmp
jmp
call
jmp
mov
push
sbb
in
scas
in
pop
pop
repnz
mov
in
cmc
jmp
fabs
aas
pop
ret
push
push
push
mov
and
add
mov
mov
jmp
scas
sbb
inc
adc
mov
mov
pusha
aas
enter
or
adc
jno
cmp
fcomip
mov
mov
adc
mov
and
rol
jne
popf
std
add
mov
pop
and
lea
sbb
dec
push
daa
icebp
jne
arpl
jg
push
pop
mov
mov
call
mov
xchg
xor
push
call
idiv
add
inc
and
jl
jmp
push
shr
popf
or
fcmovnbe
leave
lock
pop
(bad)
(bad)
call
pop
pop
pop
pop
scas
jne
fwait
push
mov
push
adc
mov
mov
push
mov
lds
mov
test
je
mov
mov
call
jmp
inc
or
push
call
mov
pop
mov
sar
push
dec
jne
mov
test
notrack
out
jg
and
xchg
sub
call
div
pop
pop
leave
ja
push
lea
push
(bad)
fdivr
lahf
ins
inc
mov
(bad)
pop
pop
sbb
xlat
inc
push
mov
and
lea
push
movs
retf
ret
mov
call
call
add
sbb
pop
ret
push
outs
idiv
push
pop
jl
cmp
jge
mov
lea
pusha
push
add
scas
mov
sar
and
int3
dec
mov
test
push
call
or
pop
and
fs
dec
mov
or
clc
cmps
js
(bad)
inc
xor
cmp
jle
push
lea
push
mov
call
add
(bad)
jg
out
cdq
sub
inc
cmp
jl
pop
lea
call
mov
pop
pop
xor
pop
ret
jge
mov
and
mov
mov
mov
repz
lock
mov
mov
adc
adc
int3
jne
into
movs
lock
idiv
add
cmp
fucomp
push
call
pop
sbb
mov
mov
inc
cmp
jbe
out
clc
mov
shr
mov
mov
call
out
dec
push
dec
or
adc
inc
movs
xor
(bad)
in
(bad)
fsqrt
(bad)
push
ror
mov
push
rol
jmp
(bad)
hlt
mov
mov
(bad)
(bad)
fstp
xor
call
test
je
mov
(bad)
fadd
je
or
dec
hlt
call
pop
sub
repz
movs
jmp
neg
hlt
mov
mov
sbb
jmp
or
pop
push
mov
call
jmp
mov
call
jge
mov
sar
push
push
mov
push
call
jmp
mov
mov
adc
mov
push
or
inc
sbb
add
outs
adc
inc
and
inc
xchg
and
(bad)
out
fmul
push
lahf
add
add
mov
movzx
xor
mov
mov
(bad)
jg
movzx
shl
or
add
ret
mov
xor
mov
mov
mov
adc
(bad)
dec
adc
dec
sbb
sub
dec
or
mov
mov
sar
push
cmp
jg
je
dec
je
dec
je
dec
dec
je
sub
lock
add
test
push
pop
ret
push
pop
ret
bound
rol
clc
mov
ret
sub
je
add
sub
je
sub
or
dec
shl
pop
add
add
add
add
fild
popa
xor
xor
and
je
cmp
add
je
cmp
jne
push
cs
or
fnstsw
or
pop
ret
cmp
cmp
outs
je
push
add
je
xchg
add
enter
(bad)
mov
adc
adc
pop
ret
mov
push
fsubrp
lock
jg
call
mov
push
call
test
pop
je
jns
pop
(bad)
dec
je
and
test
mov
and
test
fdivp
jg
and
neg
sbb
inc
mov
jns
push
dec
add
pop
call
xchg
lahf
jmp
outs
add
(bad)
out
inc
mov
mov
sub
push
or
mov
test
jne
ret
mov
dec
add
jb
add
add
call
jmp
push
ror
cmp
mov
mov
mov
(bad)
mov
(bad)
jg
jle
dec
cmp
push
mov
push
mov
jne
mov
sub
inc
or
inc
hlt
dec
cld
dec
lea
push
mov
mov
call
loopne
inc
fcom
mov
clc
inc
mov
jns
dec
cld
dec
sbb
inc
loopne
enter
loop
pop
sbb
lock
rol
dec
mov
jne
mov
pop
pop
fcom
push
sub
push
mov
ins
mov
xor
cmp
cmp
into
add
scas
pop
xor
jmp
inc
jne
mov
cld
in
fcomp
ror
call
mov
leave
or
cmp
add
ret
(bad)
(bad)
sti
inc
or
test
or
mov
mov
mov
lea
(bad)
fdivr
pop
aam
mov
push
and
ja
cmp
add
std
mov
je
aam
shr
add
dec
aas
push
clc
jl
add
cmp
jg
outs
loopne
add
test
icebp
dec
sar
dec
clc
mov
inc
cmp
dec
sar
or
add
gs
mov
gs
mov
mov
cmp
push
jne
mov
fdivr
jmp
jge
add
push
mov
push
ja
imul
adc
push
push
add
jg
mov
lods
push
mov
add
push
push
xchg
add
mov
mov
jecxz
call
rol
fdivr
xor
mov
cmp
jne
mov
outs
loopne
fimul
mov
xchg
push
call
call
(bad)
(bad)
mov
je
adc
test
pop
test
out
jbe
or
call
jl
inc
push
call
(bad)
(bad)
dec
popw
add
inc
je
xor
jmp
xor
inc
cmp
cld
(bad)
(bad)
je
cmp
retf
mov
outs
clc
pop
retf
inc
push
cmp
xor
cmp
je
adc
or
cmp
pusha
js
jbe
into
push
push
push
push
push
add
add
xchg
add
adc
and
cmp
push
mov
je
jne
lock
sar
push
lar
pop
jmp
and
fild
je
shr
test
je
loope
jecxz
and
and
fmul
call
dec
fsubr
jecxz
test
(bad)
loope
(bad)
jg
fmul
cmp
je
add
mov
push
call
inc
jbe
test
inc
or
cmp
pop
aam
mov
pop
pop
leave
out
push
push
cmp
icebp
pop
inc
jge
lea
adc
lock
jmp
add
xchg
or
add
jo
je
lea
mov
call
push
push
inc
dec
sub
(bad)
jle
jmp
or
or
and
sti
repz
push
xor
push
add
jne
lea
(bad)
jg
fucomp
adc
lea
call
mov
cmp
jne
fucomp
loop
cmp
je
cmp
je
push
dec
push
push
add
or
mov
or
lea
jnp
ret
nop
mov
mov
lock
fmul
xor
mov
push
mov
pop
std
xor
mov
xor
shr
or
add
dec
push
rcr
push
mov
test
lea
je
mov
(bad)
(bad)
(bad)
jmp
ret
xor
sub
mov
dec
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
add
dec
ffreep
pop
pop
pop
sub
outs
clc
mov
clc
dec
or
jne
push
call
dec
and
and
or
add
mov
inc
mov
sar
push
xchg
xchg
(bad)
dec
dec
mov
jne
mov
xor
jmp
cmp
je
mov
mov
mov
xor
je
mov
movs
test
or
ja
jne
and
(bad)
mov
outs
push
call
shl
add
push
fldz
mov
pop
retf
rcl
xor
shl
jne
push
pop
movzx
aaa
lock
scas
adc
mov
or
mov
or
hlt
(bad)
dec
ror
shr
sub
mov
jns
add
cmp
(bad)
out
(bad)
mov
stc
mov
sub
jns
aam
out
(bad)
fucomp
push
call
divps
(bad)
mov
push
lock
jmp
sti
repz
in
add
sbb
hlt
cmp
mov
jmp
ja
cmp
jne
mov
shl
mov
push
(bad)
mov
mov
jg
fmul
cld
jo
jg
mov
dec
jne
mov
adc
loop
mov
sti
(bad)
push
add
fsubr
push
aam
add
fimul
adc
in
out
call
mov
or
push
cmp
ss
or
sub
(bad)
fnstsw
mov
jle
mov
mov
call
(bad)
jg
cmp
mov
jge
cmp
jne
dec
mov
mov
mov
sbb
inc
or
inc
hlt
jle
inc
mov
jmp
scas
lock
jle
loopne
cmp
mov
jle
and
xor
jno
push
cmp
cmp
enter
call
js
inc
or
xlat
or
inc
add
push
mov
push
push
add
pop
jae
jmp
mov
ds
lea
call
adc
xor
xor
add
cmp
jl
inc
cmp
cwde
jecxz
adc
call
or
push
push
xor
cmp
push
mov
xor
aaa
jmp
aam
mov
into
mov
pop
jne
mov
shr
jecxz
adc
call
mov
mov
mov
arpl
jmp
inc
jmp
xor
xor
arpl
mov
cwde
push
mov
mov
aaa
mov
(bad)
and
pop
jne
jp
mov
sub
add
nop
retf
std
fdivr
(bad)
lods
mov
out
jmp
or
(bad)
pop
in
inc
and
mov
lar
and
mov
ret
call
sbb
or
aad
push
mov
test
stc
pop
jne
and
mov
jg
aas
cmp
or
mov
or
data16
(bad)
cmp
mov
or
or
mov
adc
mov
aaa
cmc
or
mov
jl
mov
cmp
je
mov
mov
add
xor
adc
outs
or
(bad)
inc
mov
ja
shr
mov
and
mov
add
je
sbb
stc
imul
imul
shr
mov
and
xchg
inc
and
add
or
sub
cmp
push
shr
add
retf
adc
retf
scas
into
and
dec
iret
adc
ffreep
call
and
and
add
and
ret
pop
or
pop
ret
push
fld
idiv
and
fistp
mov
pop
ret
push
(bad)
sub
cmp
fld
inc
je
jne
fcomp
push
fnstsw
test
jne
(bad)
inc
add
fmul
enter
fild
jge
fadd
cld
mov
je
add
mov
sbb
inc
jp
test
fstp
jbe
test
(bad)
(bad)
(bad)
push
mov
mov
mov
mov
add
inc
cmp
jb
mov
add
add
dec
cmp
jmp
push
add
retf
fcomip
mov
shl
fild
fcomp
inc
jp
inc
cmp
jl
dec
std
(bad)
jmp
push
pop
sub
mov
shl
mov
sub
push
fmul
fsubp
fld
call
fs
loopne
jne
test
jno
test
mov
rcr
mov
fild
adc
retf
call
or
in
add
mov
sub
loope
fdivr
lea
inc
jne
mov
xor
sti
ffreep
cmp
cmp
fmul
les
(bad)
(bad)
mov
push
push
fstp
mov
call
fsubr
pop
pop
and
mov
xor
(bad)
and
mov
call
out
adc
leave
inc
sub
lea
test
mov
mov
jne
mov
and
inc
fcom
loopne
(bad)
and
shl
fimul
ret
jae
adc
add
int3
add
mov
xchg
xor
mov
fs
mov
add
pop
ret
rcr
mov
movs
adc
cmp
ja
out
pop
int3
adc
(bad)
inc
pop
sub
ror
mov
jne
mov
pusha
pushf
sti
(bad)
push
iret
and
neg
or
dec
adc
jae
lds
mov
pop
dec
sar
rcl
out
fistp
push
fisttp
(bad)
(bad)
jg
fbld
or
cmp
je
mov
mov
shl
push
scas
(bad)
dec
adc
add
inc
in
movs
or
jo
inc
(bad)
call
inc
mov
xor
mov
push
aam
mov
dec
out
lea
sub
out
(bad)
fisttp
jne
mov
lea
sub
mov
ins
sub
mov
mov
lock
pop
mov
jle
test
push
jne
mov
call
mov
mov
jge
call
out
sbb
inc
sbb
cdq
sbb
pop
outs
mov
(bad)
(bad)
jmp
add
scas
push
add
fmul
or
cld
dec
imul
xor
and
cmp
inc
mov
mov
sbb
jne
jbe
int
shl
shl
mov
ja
call
mov
mov
mov
mov
shr
dec
dec
inc
mov
shl
sub
add
push
ror
shl
call
repz
cmp
jb
mov
lea
arpl
mov
or
mov
and
mov
inc
mov
(bad)
in
dec
imul
mov
mov
or
dec
and
dec
sbb
(bad)
call
and
shr
je
mov
test
mov
mov
je
(bad)
mov
shr
shl
xor
mov
shr
and
shl
jge
mov
mov
mov
lock
clc
sub
dec
mov
imul
push
jge
mov
inc
ja
into
shr
gs
and
fild
jmp
dec
dec
sbb
ds
imul
dec
push
or
jmp
dec
and
out
jge
add
mov
jge
icebp
sub
add
idiv
add
sub
sbb
not
pop
and
dec
inc
jne
jg
aaa
dec
mov
push
sbb
mov
je
fist
inc
cmp
clc
rol
loopne
mov
mov
call
(bad)
cmp
jge
mov
popa
sbb
out
dec
outs
ins
dec
pshufw
movd
inc
(bad)
dec
jo
jae
jmp
mov
test
jne
inc
ror
rol
xor
movq
or
xor
mov
std
jg
jmp
lea
push
punpcklbw
movq
pmullw
adc
punpcklbw
(bad)
(bad)
(bad)
dec
jg
pmullw
paddusw
psubusw
movq
pmulhuw
movq
pmullw
paddusw
pcmpeqw
out
push
pcmpeqw
psrlw
sbb
cmc
packuswb
movd
psllw
ud0
ja
(bad)
paddusw
psllw
enter
add
add
sub
jne
jmp
movd
es
jmp
movd
psubw
psrlw
jg
js
pop
mov
jno
repz
adc
lock
psllw
pshufw
movd
in
movd
mov
imul
cwde
mov
inc
inc
xor
push
dec
mov
mov
jmp
fiadd
clc
(bad)
fnsave
cmp
je
sub
sub
jmp
push
mov
mov
mov
mov
mov
es
sbb
js
cmp
ret
je
cmp
(bad)
out
inc
mov
shr
mov
or
mov
fs
adc
sbb
jae
sbb
push
and
pop
adc
out
and
out
clc
mov
add
mov
mov
js
icebp
imul
dec
js
pop
cmp
mov
and
add
add
dec
mov
test
outs
jle
call
shl
shl
jmp
sub
test
ins
dec
sub
dec
push
cli
adc
jbe
cli
dec
lds
mov
mov
sbb
fsubr
mov
sub
sub
std
hlt
cmps
cwde
mov
js
pop
dec
fmul
adc
or
adc
icebp
dec
xchg
leave
fs
loopne
mov
inc
cli
dec
shl
je
push
mov
mov
dec
xor
dec
outs
ja
fimul
dec
jb
pop
leave
xchg
test
cmps
pop
lahf
cmps
inc
xchg
js
sub
sub
cld
pop
ret
jne
stos
add
add
pop
or
jno
and
out
sbb
or
adc
ret
add
jnp
sbb
xchg
and
cmc
in
cmp
xchg
cmp
sar
sbb
dec
sbb
adc
pusha
cmp
loope
mov
jne
(bad)
ja
cmps
and
add
sete
test
jle
jbe
mov
xor
lock
cmp
jne
lock
and
jmp
or
xor
hlt
loopne
aas
cdq
jle
mov
pop
and
pop
clc
movs
push
sbb
sbb
aam
xchg
popa
push
js
sub
imul
rol
icebp
mov
dec
mov
shl
mov
iret
mov
sub
pop
inc
add
jl
adc
clc
adc
mov
and
pop
push
aas
inc
mov
scas
adc
mov
inc
cmp
jg
cmp
mov
mov
push
mov
jne
int3
mov
adc
shl
dec
fcom
int3
jg
pop
add
or
mov
dec
cs
stc
mov
push
ret
jge
and
aad
outs
mov
push
aaa
and
fcomp
or
mov
mov
lock
dec
cld
cmp
push
std
add
sub
pop
jmp
push
dec
xchg
bound
(bad)
std
xor
mov
cli
hlt
std
push
test
aaa
mov
arpl
out
push
push
sub
sub
and
jmp
mov
add
dec
cld
fadd
pop
jg
jg
cmp
jb
mov
mov
inc
xchg
aad
hlt
cmp
mov
call
(bad)
out
(bad)
mov
test
adc
jne
call
push
call
pop
add
dec
pop
je
emms
add
mov
cmc
sub
ror
and
(bad)
stos
pop
std
dec
mov
cdq
fldenv
inc
jmp
jge
fild
ficomp
ficom
and
fldcw
aas
pop
pop
mov
shr
add
fwait
add
jbe
pushf
mov
mov
add
inc
cmp
jb
(bad)
std
aaa
push
dec
jne
jmp
and
mov
mov
mov
pop
vxorps
mov
inc
mov
pop
fs
mov
mov
sub
in
jg
rcl
adc
add
mov
cmps
ret
ficomp
test
sar
adc
arpl
int3
iret
mov
scas
into
add
or
ror
or
mov
ja
push
xor
mov
mov
mov
jmp
ror
in
push
mov
push
jl
imul
rcl
adc
sbb
neg
or
pop
sbb
loop
and
cmps
fmul
shl
xor
lea
test
mov
iret
jle
dec
in
jne
mov
cmp
jmp
shl
int
mov
fcomp
ficomp
div
fimul
into
adc
add
gs
adc
fs
mov
in
xor
lea
test
mov
popa
ret
and
fst
addr16
int3
sbb
and
out
inc
push
mov
sbb
neg
or
push
test
je
(bad)
ja
sar
enter
sbb
aas
add
lods
sbb
std
sbb
or
fdivr
outs
loop
in
mov
and
cmp
jle
call
push
mov
add
sub
mov
xchg
dec
lods
int
cli
(bad)
mov
sbb
(bad)
mov
mov
mov
dec
or
jbe
in
dec
in
enter
jnp
addr16
or
cmp
outs
jne
sbb
out
cli
jmp
mov
mov
outs
hlt
pop
add
mov
cli
aaa
lock
fadd
imul
mov
je
test
mov
jbe
idiv
pop
cdq
rcr
shl
mov
mov
movzx
adc
loop
push
lock
inc
cmp
jb
cmp
ja
inc
dec
fadd
(bad)
movzx
mov
stos
call
push
pop
stos
icebp
bnd
mov
pop
loopne
jmp
mov
jg
call
mov
hlt
aad
shl
sub
(bad)
sti
cmp
ret
add
pop
mov
jge
add
aas
je
jge
(bad)
call
sub
je
mov
sbb
mov
add
or
dec
mov
fiadd
jne
cmc
dec
and
popa
ja
mov
fcomp
xlat
mov
add
out
mov
mov
sub
sbb
mov
movzx
and
add
fnstsw
jecxz
loop
inc
mov
mov
mov
retf
or
test
(bad)
(bad)
cmp
jne
mov
add
jmp
aam
pusha
push
fcom
movzx
add
movzx
shl
outs
mov
jmp
fisubr
fild
repz
shl
jmp
add
mov
jg
fsubr
xchg
mov
cmp
fnsave
rcr
and
sub
je
js
inc
out
cmp
dec
mov
je
xor
shr
xchg
(bad)
sbb
inc
xor
jmp
push
call
jg
daa
fsubr
rol
repnz
daa
add
ret
sbb
mov
scas
call
sbb
pop
fadd
pop
movs
add
into
mov
add
stos
jmp
clc
and
nop
jmp
dec
pop
xchg
adc
movzx
mov
push
mov
icebp
inc
dec
inc
test
fwait
mov
movs
je
mov
sbb
shr
cmps
jg
sbb
cld
cli
out
dec
lock
sub
ja
fist
loopne
add
mov
mov
add
inc
cmps
xor
push
push
xor
or
mov
adc
cmp
mov
jae
enter
(bad)
les
in
enter
sbb
ja
movs
(bad)
jmp
sbb
sub
add
cmp
in
add
inc
pop
jb
inc
mov
cmp
jl
push
std
dec
inc
adc
inc
or
dec
mov
test
jne
call
ja
loopne
call
pop
pop
pop
pop
push
push
mov
jg
inc
neg
push
mov
sbb
addr16
test
mov
je
mov
call
out
push
test
je
or
mov
(bad)
(bad)
call
jo
sub
push
mov
sub
lea
push
push
push
call
push
pusha
adc
inc
sbb
mov
sar
mov
mov
shl
(bad)
out
loop
xor
test
jle
mov
shr
sbb
fmul
inc
out
add
add
dec
jne
xchg
mov
fld
mov
mov
out
loopne
push
or
push
sbb
and
clc
(bad)
(bad)
call
fld
mov
mov
fstp
mov
mov
xor
mov
mov
mov
icebp
mov
add
pop
sbb
mov
inc
mov
out
dec
mov
pop
ret
mov
mov
mov
jge
mov
mov
push
xlat
mov
or
iret
mov
push
jb
or
mov
or
aas
jb
mul
or
ror
or
jo
(bad)
fadd
inc
arpl
add
(bad)
inc
cld
enter
mov
sbb
mov
fstp
call
jnp
ds
sar
xor
(bad)
jg
mov
adc
add
pop
add
add
mov
push
add
dec
sub
iret
call
push
dec
pusha
jg
icebp
fld
add
inc
inc
call
xchg
xor
pop
inc
mov
mov
call
or
call
pusha
or
test
jl
cmp
jg
fldenv
test
ret
cdq
sub
sar
mov
fild
pop
ret
shl
adc
jg
mov
pop
or
movq
stos
test
fild
jne
fld
ret
(bad)
mov
fucompp
xchg
inc
jp
fld
fld
push
ret
(bad)
(bad)
call
inc
sub
inc
sub
mov
cmp
jne
fld
fld
push
(bad)
inc
(bad)
cmp
inc
cmp
inc
cmp
sub
inc
inc
cmp
jne
mov
cmp
jne
(bad)
(bad)
call
inc
inc
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
xor
std
inc
fs
push
fldz
push
push
push
push
push
rol
and
fldz
fstp
fld
ss
pop
push
mov
fs
xor
add
call
rcr
push
mov
mov
fstp
add
nop
jno
out
add
mov
cmp
enter
(bad)
inc
retf
or
stc
rol
push
inc
call
pusha
or
add
push
add
ja
mov
adc
cmps
es
stos
or
fs
out
addr16
and
fild
add
call
mov
repnz
jae
fwait
mov
or
or
jg
loope
mov
test
mov
mov
mov
mov
jo
(bad)
mov
fld
fstp
fld
fstp
mov
mov
sub
icebp
pop
enter
fld
fld
cmp
sbb
cmp
sub
cmp
push
sub
mov
shr
ds
cld
cwde
call
lods
sub
dec
cld
adc
(bad)
adc
call
clc
fild
(bad)
lods
and
aas
mov
pushf
add
inc
and
xor
cmp
fstp
sbb
mov
fwait
sar
psubw
push
or
mov
inc
call
add
xchg
push
call
bound
add
push
or
or
push
std
or
mov
call
je
mov
push
lock
jg
xor
jmp
mov
cmp
jne
movzx
(bad)
call
jo
test
xlat
lea
sub
mov
cmp
jne
mov
xor
pop
cmp
rol
rol
or
add
pop
pop
dec
lea
dec
inc
push
push
add
cs
jmp
addr16
hlt
jne
lock
pop
mov
cmp
jne
fld
fld
jge
fsin
jmp
jmp
and
clc
inc
mov
cmp
jne
mov
cmp
jne
(bad)
call
add
sub
rol
jg
mov
sub
fld
fld
push
(bad)
jmp
or
add
cmp
jl
fsubrp
clc
call
sbb
mov
cmp
je
mov
push
dec
mov
mov
mov
call
mov
(bad)
(bad)
fnstsw
add
inc
adc
cmp
pop
jle
mov
fld
loopne
hlt
dec
add
sbb
data16
mov
lock
jmp
inc
and
and
inc
and
inc
sub
ret
shr
push
fdivr
dec
pop
add
push
mov
pop
ret
mov
ja
pop
or
mov
push
mov
movs
add
out
(bad)
dec
sar
imul
sub
add
sar
imul
or
dec
or
pop
ret
addr16
or
push
xor
cmp
js
je
or
jne
fstp
inc
jnp
jns
or
test
mov
xor
loopne
jmp
fstp
fld
fistp
pop
adc
push
jge
cmp
jg
cmp
jl
test
jge
xor
add
cmp
(bad)
fild
cmp
jl
push
and
mov
mov
adc
je
dec
fld
and
xor
pop
inc
fcomp
fadd
add
push
cmovno
jg
ret
cmp
in
in
and
ret
(bad)
mov
in
jo
int
mov
cmp
jg
pusha
sub
mov
fucompp
mov
fld1
mov
sub
fnstsw
(bad)
(bad)
(bad)
dec
inc
jnp
fdiv
mov
fstp
mov
sub
mov
sub
mov
(bad)
(bad)
(bad)
(bad)
inc
nop
push
xor
push
add
mov
sbb
push
call
cmp
add
sar
mov
lea
push
push
push
call
sbb
or
and
or
jge
add
pop
in
mov
mov
mov
sar
sub
hlt
imul
inc
adc
inc
or
add
std
pop
lock
mov
add
sub
mov
fldz
xor
cmp
fstp
fldz
pop
fstp
mov
fldz
jmp
out
fstp
add
jle
sbb
mov
cmp
(bad)
jmp
fstp
xor
jmp
mov
cmp
jl
lea
add
or
test
std
ret
mov
loop
adc
add
lock
sar
call
jnp
add
add
inc
xor
cmps
ror
rol
sbb
clc
jg
dec
mov
mov
mov
dec
or
push
call
pop
jmp
(bad)
(bad)
mov
jge
test
jl
cmp
jl
out
push
lock
aaa
sbb
or
mov
sar
and
add
mov
or
rcr
inc
enter
adc
jg
(bad)
fstp
sar
fild
sbb
inc
int3
cmc
jl
lock
adc
or
aam
fstp
aaa
push
inc
inc
cmp
mov
inc
inc
hlt
mov
mov
inc
call
pop
les
mov
mov
aam
dec
clc
fdivr
in
pop
mov
inc
mov
pop
lods
fld
mov
adc
fstp
mov
pop
pop
push
test
mov
sub
test
mov
ja
ret
dec
movs
xchg
or
add
les
fwait
jmp
cmp
jle
mov
movq
lock
lock
xor
rcr
ret
test
add
fld
addr16
out
enter
dec
mov
cmp
jle
mov
jmp
fmul
push
mov
mov
add
add
sahf
xor
inc
test
dec
inc
fwait
loopne
jnp
loopne
(bad)
adc
imul
add
mov
dec
mov
fwait
xchg
add
push
test
jl
cmp
leave
dec
fdivr
mov
jnp
xchg
je
or
inc
hlt
push
push
add
push
call
jmp
sbb
(bad)
mov
dec
in
inc
mov
mov
cmp
mov
sbb
jg
jl
mov
inc
cmp
test
es
pop
pop
and
fwait
mov
mov
fwait
or
imul
sub
adc
pop
push
push
call
sbb
adc
scas
dec
or
clc
xor
retf
and
dec
fs
cli
sbb
and
ins
mov
cmp
push
scas
inc
or
mov
sbb
or
std
test
add
add
icebp
push
(bad)
out
cli
or
sub
pop
aad
sbb
cmc
mov
mov
(bad)
(bad)
call
mov
push
mov
lea
pop
mov
mov
inc
inc
dec
jne
dec
add
ror
mov
push
mov
mov
aam
fadd
iret
call
cmp
jne
mov
xor
lea
sub
fld
fld
call
movs
or
adc
rol
adc
jmp
mov
adc
or
scas
sbb
das
loopne
adc
inc
pop
add
xor
inc
pop
add
mov
(bad)
jp
inc
adc
rcl
shr
fld
adc
inc
inc
push
sbb
sbb
add
fs
ss
inc
retf
xor
and
daa
ror
enter
fld
adc
xor
mov
or
inc
xor
popf
and
adc
std
pusha
outs
jp
fld
and
fld
or
pop
fld
dec
fld
inc
(bad)
and
push
xor
inc
pop
and
fld
add
or
std
fbstp
or
jmp
and
push
push
lea
cmp
mov
fmul
lahf
mov
inc
inc
je
pop
adc
outs
xor
add
add
cmp
jl
fld
fcomp
pusha
sbb
daa
sbb
dec
std
(bad)
mov
inc
add
cmp
jl
push
lea
(bad)
jg
or
pop
sub
dec
pusha
lea
mov
fld
fdivr
jmp
fstp
fld
fistp
mov
mov
fld
sbb
pop
lock
fld
in
call
fld
sbb
call
add
ret
add
dec
jne
outs
fmul
sti
aas
idiv
call
pop
in
fld
mov
adc
rol
mov
sbb
loopne
cs
sbb
xchg
sbb
icebp
pop
sbb
dec
xchg
fiadd
pop
mov
push
push
or
jne
lea
push
mov
call
or
dec
ja
(bad)
or
repz
add
push
push
dec
mov
sbb
je
aas
jb
loope
jne
push
pop
jmp
and
enter
nop
add
inc
(bad)
cmp
(bad)
or
sub
out
mov
sub
je
dec
je
dec
je
dec
je
push
(bad)
(bad)
ja
es
jmp
push
jmp
call
clc
jmp
push
push
addr16
push
call
mov
leave
ret
aam
sub
add
jne
dec
pop
adc
rol
jne
mov
cmp
jmp
cmp
jne
mov
cmp
jne
fld
movs
cs
inc
adc
push
adc
and
sub
or
aam
jg
push
or
leave
je
push
call
xor
inc
mov
inc
adc
inc
inc
(bad)
mov
mov
mov
scas
and
lds
mov
mov
(bad)
ja
inc
xor
inc
xor
inc
cmp
dec
or
cmp
arpl
pop
add
jmp
push
xchg
sbb
mov
mov
out
add
(bad)
aas
adc
jmp
push
jmp
xor
jmp
push
jmp
push
(bad)
sub
pop
dec
repz
mov
(bad)
(bad)
(bad)
add
sub
lea
je
or
add
mov
cmp
(bad)
(bad)
jmp
mov
jl
cmp
jge
test
jl
cmp
jge
mov
jno
jg
nop
add
mov
jmp
mov
and
xor
sbb
or
sub
(bad)
jmp
push
mov
add
mov
jmp
mov
mov
test
mov
push
outs
mov
sbb
sti
or
or
daa
mov
test
jl
cmp
cmps
(bad)
mov
or
icebp
mov
mov
jmp
mov
scas
sbb
dec
outs
call
leave
mov
adc
enter
jge
(bad)
inc
adc
jae
add
or
push
adc
mov
test
and
(bad)
(bad)
out
(bad)
jmp
cmp
jl
lea
jmp
dec
pop
sbb
mov
cdq
idiv
add
mov
cmp
jl
ffreep
mov
or
cli
push
or
sbb
push
sbb
retf
sahf
in
in
or
mov
or
or
push
cmp
jl
or
mov
mov
aaa
repnz
aaa
getsec
xor
push
jne
rol
adc
(bad)
(bad)
dec
and
add
mov
mov
lea
or
xrelease
(bad)
sar
mov
pop
leave
ret
fld
fcomp
vandps
ja
inc
adc
adc
(bad)
push
push
retf
inc
sbb
pop
loopne
fistp
push
cmp
jge
jno
ret
cmp
jle
movs
inc
mov
fcomp
inc
(bad)
into
fmul
ret
fld
xor
inc
or
pop
sbb
jae
ficomp
inc
or
ins
adc
(bad)
aas
out
fnstenv
pop
push
call
test
je
and
inc
adc
leave
ret
sar
xchg
sbb
mov
call
je
mov
mov
jb
sub
lods
call
pop
fsubr
aaa
icebp
and
rcr
lea
call
sti
pop
mov
jne
adc
mov
and
outs
add
add
fst
mov
sub
push
or
in
dec
aam
push
cmp
push
mov
fucomp
out
ret
and
mov
mov
test
dec
std
(bad)
(bad)
push
push
lea
push
push
push
call
test
je
push
call
clc
jle
push
in
sbb
dec
(bad)
cmp
call
mov
mov
idiv
fild
ficom
pop
pop
jne
mov
movs
add
dec
cld
jno
jmp
xorps
sar
jne
push
faddp
dec
push
push
call
adc
inc
cld
xchg
add
inc
add
dec
add
sar
shl
add
push
sub
and
call
push
or
pop
or
test
ja
sar
cs
enter
jl
clc
call
cmp
cdq
jb
shl
add
push
push
fdivr
(bad)
push
push
push
call
pop
or
sar
cmp
jg
out
inc
cmp
jge
cs
mov
cmp
jg
mov
js
gs
cmp
push
push
call
pop
pop
fcomip
or
sbb
push
push
inc
xor
fst
cmc
pop
pop
(bad)
fst
xor
fld
fstp
mov
jo
inc
fstp
cmp
mov
mov
xor
mov
mov
mov
mov
imul
inc
inc
inc
add
inc
je
or
ret
je
mov
rcpps
xor
int3
dec
fadd
sbb
push
cmp
pop
inc
adc
add
mov
ja
(bad)
sub
out
mov
pop
cmp
mov
test
or
mov
dec
or
enter
dec
or
add
sbb
call
xchg
rcr
into
push
push
mov
arpl
push
jne
(bad)
(bad)
fmul
sbb
add
out
fdivr
push
dec
or
loopne
and
or
retf
jle
fst
and
call
data16
pop
sbb
add
adc
loop
xor
(bad)
(bad)
fstp
xor
push
mov
sbb
mov
out
cli
mov
or
cmp
jmp
jmp
mov
push
xchg
mov
push
sub
xchg
imul
sbb
mov
cvtdq2ps
ret
fstp
fstp
jmp
and
jle
mov
clc
push
jmp
mov
inc
inc
sbb
and
outs
cs
xor
jmp
sbb
(bad)
ss
fmul
sbb
call
call
mov
mov
mov
fld
fstp
mov
(bad)
fist
mov
mov
fld
fstp
fld
fstp
mov
inc
inc
mov
inc
mov
mov
xchg
cli
movs
dec
inc
mov
jle
in
cmp
(bad)
mov
fld
jne
fsub
push
push
fmul
push
fadd
fstp
fld
fsubr
ret
push
loope
dec
or
fstp
fld
fadd
adc
dec
dec
cmp
push
fstp
sbb
(bad)
dec
fst
fld
fmul
fld
fmul
faddp
xor
mov
add
pop
in
sub
fld
sqrtps
cld
call
enter
lea
stc
movs
fcomip
pop
retf
adc
call
call
ja
rcr
call
cmp
dec
or
fmul
jae
inc
loopne
pop
sbb
scas
jge
call
pushf
and
ds
xchg
inc
loopne
(bad)
fcomp
inc
fadd
push
imul
push
push
mov
xor
ret
push
mov
pop
sbb
fstp
mov
daa
push
idiv
mov
(bad)
iret
jo
inc
inc
sbb
dec
cmp
fdivr
in
push
cdq
xor
push
sbb
cmp
je
test
jge
neg
inc
add
fdivr
(bad)
mov
sub
add
add
mov
or
out
(bad)
(bad)
ret
or
ds
sub
and
mov
sub
add
sub
(bad)
(bad)
popa
sub
pop
add
or
test
jle
(bad)
out
out
rol
add
cmp
pop
pop
pop
je
push
push
lea
cli
inc
enter
fiadd
loope
adc
mov
sub
jl
pop
pop
and
jae
cmp
push
add
pusha
jb
mov
mov
je
sub
xor
push
lock
dec
enter
push
gs
fdivr
mov
and
mov
push
fmul
fstp
fld
stc
sbb
or
push
add
mov
dec
mov
bound
push
push
arpl
lock
shl
lock
add
(bad)
fstp
out
cmp
mov
fmul
test
(bad)
(bad)
inc
jp
jnp
add
mov
cmp
jne
push
call
cmp
pop
mov
dec
push
or
inc
adc
push
push
push
push
push
mov
push
call
fwait
test
lahf
jmp
push
lea
mov
jge
push
mov
push
push
call
push
push
push
push
lea
aas
in
inc
mov
jne
push
call
fadd
push
mov
adc
mov
lea
movs
movs
lea
push
push
(bad)
mov
fs
movs
call
add
push
lea
or
jmp
push
push
lea
push
push
call
neg
out
(bad)
ror
adc
dec
pop
mov
out
push
lea
push
lea
movs
push
xor
jne
mov
test
(bad)
jge
fld
sub
sub
xchg
in
lods
mov
adc
jb
pop
test
mov
sbb
jl
inc
jl
cdq
mov
test
inc
dec
call
fwait
xor
out
cli
out
dec
mov
mov
mov
mov
nop
push
mov
fsubr
push
or
jmp
sub
add
push
mov
sub
mov
sub
add
push
sub
push
sub
push
call
mov
inc
pop
cmp
lea
sub
dec
dec
test
neg
test
mov
cs
(bad)
(bad)
(bad)
fsubr
dec
mov
dec
mov
inc
shr
lea
push
mov
neg
push
mov
add
call
jne
lea
mov
push
pop
movs
push
movs
call
push
sbb
jg
popf
xor
jo
push
jle
lea
fs
sti
sti
ins
mov
lea
call
cmp
test
adc
add
arpl
fwait
ss
and
cmp
jne
push
rol
je
cmp
(bad)
jbe
idiv
cmp
je
adc
cmp
mov
mov
mov
mov
xor
push
push
push
push
lea
add
push
push
and
int
(bad)
mov
adc
add
xchg
psubusw
jge
add
test
or
dec
and
pop
mov
mov
sar
(bad)
jg
sbb
(bad)
push
call
mov
inc
adc
add
push
adc
inc
cmps
sbb
fld
fidiv
sub
adc
rcl
scas
nop
adc
or
pop
mov
push
jge
fld1
or
pop
inc
les
test
loopne
das
int3
icebp
test
aas
or
inc
or
(bad)
jmp
inc
ins
jge
and
pop
out
(bad)
jmp
dec
mov
shr
mov
dec
or
mov
or
cmp
(bad)
mov
push
adc
mov
add
cmp
jg
mov
aaa
cmp
mov
jge
pop
dec
add
or
sub
mov
std
(bad)
(bad)
inc
ret
ins
add
or
sub
add
xor
cmp
mov
mov
mov
jge
mov
push
cmp
jge
neg
mov
lea
dec
js
clc
ja
xchg
mov
add
inc
adc
cmp
outs
clc
inc
mov
jne
xor
jmp
pop
mov
sti
xchg
add
sbb
add
(bad)
mov
cmp
mov
jne
push
mov
cmp
cmp
out
sbb
add
jno
call
pop
sbb
(bad)
or
jne
sub
add
add
mov
xor
imul
add
xor
push
inc
push
push
inc
ss
push
call
pop
jmp
sbb
jne
sub
add
lock
jle
inc
xor
push
inc
mov
dec
loopne
push
push
call
mov
je
or
inc
push
cmp
jl
out
loop
out
xchg
call
push
fcomp
push
pop
(bad)
inc
push
jp
fld
adc
jnp
ffree
(bad)
push
fstp
jne
test
jne
push
add
xlat
shl
(bad)
jne
clc
call
std
and
imul
clc
and
ss
aad
ja
les
call
dec
or
pop
or
dec
sbb
lea
neg
ficomp
dec
cld
arpl
mov
or
sahf
jne
mov
fistp
cmp
add
mov
enter
sub
jmp
adc
imul
out
add
add
inc
lea
inc
icebp
sub
mov
mov
out
mov
jno
icebp
dec
scas
ret
dec
xor
adc
jge
(bad)
aas
div
ins
add
mov
push
ror
lock
mov
mov
jne
add
mov
mov
test
jne
adc
cmp
jne
cmp
sub
es
test
daa
or
inc
inc
(bad)
(bad)
(bad)
dec
cdq
pop
idiv
mov
mov
sub
and
sub
xor
adc
mov
mov
cmp
test
(bad)
mov
dec
mov
add
sub
imul
mov
mov
lea
sub
sti
rol
inc
ins
inc
inc
sar
jg
aaa
push
cwde
mov
mov
mov
mov
sub
mov
pop
add
or
jle
mov
sub
mov
imul
sub
mov
add
xor
ja
or
rol
push
xor
inc
nop
xor
cmp
push
jle
pop
add
mov
neg
xchg
push
sbb
mov
(bad)
(bad)
call
cmp
jne
movzx
movzx
cmp
jne
mov
xor
fnstenv
adc
jg
movzx
pop
les
lods
dec
xor
movzx
retf
fstp
sub
enter
imul
movzx
push
ficom
mov
add
add
or
or
sbb
add
add
js
adc
dec
sar
pop
dec
jl
mov
mov
add
cmp
jge
mov
dec
in
fsubr
cwde
push
ficomp
mov
jg
jne
push
jle
ja
or
movzx
xlat
(bad)
adc
sar
mov
addr16
xor
mov
lea
test
jl
fs
popa
push
bound
fs
iret
in
lahf
or
in
inc
jnp
ret
in
jnp
mov
(bad)
fnstcw
pop
adc
mov
loope
call
cmp
je
scas
out
js
or
je
pop
mov
mov
loop
scas
ret
adc
adc
clc
or
rol
cli
pop
or
and
aas
mov
jmp
neg
adc
ret
or
pop
pop
jmp
pop
mov
ret
and
fistp
test
addr16
sub
sar
mov
cmps
inc
jle
mov
jmp
push
xor
mov
pop
mov
xor
mov
cmp
repz
(bad)
out
call
lods
jge
push
or
sbb
sbb
scas
aaa
sbb
xchg
call
(bad)
fild
pop
mov
mov
inc
add
inc
cmp
jl
mov
add
or
inc
jl
inc
xor
(bad)
push
inc
mov
inc
inc
dec
lea
aas
movsx
push
inc
jmp
jle
adc
rcr
jbe
(bad)
fwait
jle
mov
sub
xor
mov
cmp
xor
cmp
jne
cmp
je
movzx
push
repnz
dec
cmp
outs
or
add
add
lock
bswap
retf
fwait
shl
cmp
cmp
inc
jo
movzx
imul
adc
mov
fistp
call
outs
mov
pop
mov
mov
inc
xchg
jmp
js
mov
mov
jge
idiv
adc
pop
jmp
mul
mov
cmp
inc
add
test
or
mov
bound
idiv
jo
jg
call
xor
inc
push
cdq
push
inc
mov
push
cld
jae
in
inc
cwde
dec
js
add
or
dec
lea
mov
std
push
and
or
add
ds
pop
call
jne
sub
jnp
xor
mov
mov
push
(bad)
inc
fsubr
inc
xchg
mov
dec
dec
mov
pop
out
call
push
lea
jle
adc
(bad)
jg
je
fiadd
into
mov
mov
sub
mov
inc
inc
jo
mov
js
mov
(bad)
jne
sub
imul
mov
repz
mov
add
inc
enter
inc
mov
mov
bound
jmp
jle
pop
outs
xchg
sub
aam
pushf
orps
dec
dec
push
jbe
mov
dec
push
ret
jbe
xlat
lods
sbb
fcom
mov
push
jbe
scas
pop
push
ins
push
push
cmp
jbe
mov
std
pop
aaa
dec
push
jecxz
add
jb
sbb
movzx
xchg
retf
jne
ficom
pop
call
pop
xlat
aad
push
mov
sbb
or
lock
lods
add
mov
aad
je
pop
ret
(bad)
fcomp
add
mov
arpl
dec
addr16
sub
add
sbb
adc
popa
add
popf
push
or
sbb
jmp
mov
jne
adc
cld
scas
jg
cmp
jge
mov
and
inc
and
sbb
mov
jge
jne
call
enter
add
lods
jl
mov
jp
add
clc
push
inc
push
mov
inc
inc
inc
inc
cmp
jne
xchg
jne
out
inc
jmp
mov
pop
mov
nop
and
inc
(bad)
lods
fwait
push
mov
push
jo
sub
xchg
pop
xchg
clc
aas
inc
jl
sbb
mov
mov
je
dec
inc
mov
cmp
mov
mov
sub
push
sub
mov
ja
mov
inc
sbb
mov
ror
mov
jnp
(bad)
xor
sub
popf
cmp
and
inc
outs
xor
rol
inc
pop
mov
pop
pop
mov
inc
inc
sub
(bad)
pushf
cmp
and
mov
dec
add
mov
dec
cmp
pusha
fcom
inc
push
add
cmp
jl
shr
inc
xor
xor
retf
fld
or
fld
jg
mov
cli
inc
and
bound
fisubr
dec
add
xchg
dec
push
push
lea
push
push
call
mov
sub
pop
aad
sub
xchg
jmp
push
inc
jl
mov
mov
retf
aam
mov
mov
pandn
push
mov
inc
add
aad
aam
std
scas
fbld
mov
into
cmp
jge
arpl
es
mov
retf
ds
adc
nop
jecxz
cld
mov
sbb
jb
add
test
call
imul
inc
das
pop
out
pop
jb
push
jae
or
ret
sub
xor
add
push
sar
int
push
call
pop
and
inc
pop
scas
pop
and
jno
es
xchg
mov
jo
add
inc
pop
jg
mov
(bad)
daa
fidiv
inc
add
loopne
mov
shr
sub
gs
pop
or
push
inc
outs
and
pop
mov
jmp
cmp
scas
out
xor
or
push
call
(bad)
jle
call
mov
cmp
lea
add
pop
call
pusha
loopne
push
outs
and
or
clc
(bad)
out
cli
xor
mov
jmp
mov
shl
push
push
push
call
mov
gs
dec
mov
dec
leave
inc
inc
fiadd
movs
stc
mov
pop
aas
add
pop
xor
xor
test
cld
pop
mov
mov
mov
lea
aas
retf
dec
adc
gs
bound
or
out
std
(bad)
rol
dec
mov
push
pop
pop
add
outs
cmp
sub
mov
push
dec
repz
mov
dec
aaa
ror
mov
push
es
jne
sub
imul
mov
sub
stc
or
popa
add
gs
aad
enter
loope
sbb
add
dec
cmp
dec
or
test
inc
bound
cld
loop
ss
push
jmp
dec
add
or
outs
test
rcl
rcr
test
jl
fimul
rcl
or
xchg
imul
cmps
mov
cmp
jne
call
clc
cmp
xchg
aas
cmp
jne
test
sub
sub
scas
jle
inc
add
inc
adc
or
inc
add
add
sar
push
call
jmp
mov
fdiv
call
fsubr
xchg
dec
les
ret
push
fldz
push
push
push
xor
push
cmc
sbb
push
push
stc
fldcw
fld
(bad)
out
mov
and
addr16
mov
cmp
(bad)
dec
je
cmp
je
jmp
push
mov
push
mov
call
mov
retf
xor
cmp
jle
sbb
call
mov
loope
jmp
pop
dec
icebp
call
(bad)
movs
cli
std
repz
mov
or
mov
add
dec
repnz
cmp
call
cmps
fcmovu
pop
test
add
or
pop
outs
and
nop
mov
jle
mov
movs
adc
cmp
push
push
std
arpl
in
or
cmp
test
xchg
jle
push
add
inc
movd
push
pop
mov
and
and
data16
mov
sbb
xchg
xchg
pop
sbb
inc
add
xor
xchg
push
js
push
adc
sbb
sbb
push
fs
sbb
(bad)
scas
add
and
pop
xchg
add
test
fnsave
call
loope
aas
addr16
(bad)
fstp
push
jg
xor
mov
adc
add
inc
push
je
ror
and
ins
or
aas
ret
and
sub
pop
add
push
call
int3
mov
ficom
into
call
or
pop
sar
pop
xlat
sub
es
and
mov
fld
push
mov
fsub
mov
fmul
push
mov
fadd
mov
fstp
fld
fsub
fmul
movs
movs
repz
fsub
xor
loope
in
sub
add
fld
in
call
sbb
pop
in
fld
pop
cld
mov
cs
jne
push
sar
mov
call
or
ds
je
fld
clc
or
xor
jae
sar
and
inc
or
inc
push
mov
and
adc
in
and
call
retf
push
fsub
mov
mov
mov
out
iret
(bad)
out
into
lea
mov
mov
mov
sar
mov
movs
fstp
movs
lea
or
cli
call
add
add
push
push
push
push
call
mov
lea
es
cli
mov
push
call
cs
std
dec
or
stc
pop
je
cmp
jne
or
mov
mov
jnp
fdivr
int3
pi2fw
mov
dec
push
pop
call
cmp
pop
jmp
adc
push
inc
mov
mov
sub
push
ret
mov
fstp
add
push
push
fld
cmp
hlt
sahf
push
adc
and
ja
pop
aas
cmps
maskmovq
test
jg
xchg
aam
call
add
mov
call
mov
repnz
ret
push
add
sbb
iret
call
rcr
mov
call
inc
les
jmp
jne
int
sahf
mov
gs
nop
jo
cld
cmp
xor
inc
cld
mov
imul
in
call
sub
pop
add
adc
or
and
call
jae
mov
push
mov
cmp
cmp
(bad)
call
mov
push
push
push
pop
push
push
call
cmp
ins
or
bound
call
pop
cmp
aaa
call
pop
ja
call
stos
jnp
out
pop
(bad)
cmp
cmp
call
and
call
inc
in
inc
int3
cmp
(bad)
in
shr
aam
call
and
pop
bswap
jo
xor
xor
push
popa
mov
inc
sbb
loope
mov
inc
add
icebp
and
ins
fdivr
ja
aaa
imul
fsubr
jl
lds
fstp
call
mov
les
adc
inc
cmp
pop
pop
mov
cmp
call
push
sar
mov
call
add
xor
mov
and
jne
add
jmp
sar
push
movs
push
push
mov
movs
call
lea
scas
loope
push
ret
push
push
push
call
enter
out
mov
call
ins
(bad)
lea
(bad)
(bad)
(bad)
call
shr
push
xor
inc
sub
push
sub
push
cmp
shr
push
sub
dec
push
sub
add
push
push
ds
push
call
inc
push
push
pusha
jne
lds
or
rcr
dec
sub
push
call
jae
sbb
lea
mov
clc
cmp
ins
js
jge
movs
lea
outs
je
mov
sub
inc
or
bound
inc
cmps
aaa
(bad)
jo
jno
xchg
inc
js
dec
jne
scas
jmp
dec
sub
push
mov
mov
jmp
sub
jo
out
mov
and
rol
or
and
jne
daa
mov
lea
push
jmp
push
call
mov
jg
sub
inc
daa
sub
dec
dec
sub
mov
add
mov
sub
mov
sub
push
(bad)
cld
dec
dec
call
pop
je
mov
dec
push
push
cld
push
push
push
push
dec
bnd
add
jmp
mov
mov
cmps
dec
js
js
sar
push
jbe
ss
jae
pop
je
xchg
add
lds
push
sbb
xchg
adc
lahf
fimul
or
inc
je
frstor
ins
int3
mov
mov
clc
cmp
mov
push
movs
call
mov
add
adc
imul
ds
shl
pop
jne
sub
sub
lea
push
call
dec
cmp
fist
push
or
cmp
push
xor
fmul
fadd
push
jb
mov
jnp
clc
push
mov
call
movs
add
dec
and
pop
call
loope
in
sub
inc
sbb
inc
mov
jg
inc
not
add
or
add
mov
call
pushf
jae
jbe
fistp
div
call
xor
repz
inc
fwait
jl
add
retf
ret
inc
mov
dec
mov
mov
push
xor
inc
push
push
jae
aad
push
movs
push
jae
dec
adc
adc
pop
aaa
loopne
push
call
dec
or
sbb
push
inc
inc
aaa
push
jmp
mov
pop
fcomp
adc
aaa
icebp
xor
inc
fsub
pop
cmp
pop
or
adc
repnz
sub
sub
sub
test
inc
mov
es
enter
retf
inc
inc
add
xor
pop
and
add
xlat
xlat
dec
inc
scas
xchg
jmp
int3
clc
sub
popa
mov
inc
inc
adc
psubsb
or
fucomp
aaa
mov
xor
and
jg
add
sti
adc
jb
mov
test
sbb
adc
fisttp
data16
test
push
push
call
cmp
inc
sub
xor
sbb
out
sub
mov
jbe
and
test
sbb
retf
push
and
mov
mov
jo
inc
adc
retf
and
sbb
fwait
loopne
cmc
or
mov
mov
lea
push
dec
add
jg
shr
je
jo
(bad)
cmp
push
lea
call
jmp
push
add
mov
call
test
pop
je
mov
mov
pop
xor
das
dec
push
mov
or
add
xor
mov
call
or
popa
mov
and
sub
je
cli
cmp
call
push
push
mov
call
push
push
push
adc
adc
jnp
pop
rep
lea
pushf
mov
aad
sub
dec
jne
pop
mov
pop
icebp
pop
pop
mov
mov
in
push
out
cmp
imul
jmp
out
(bad)
call
mov
mov
or
adc
mov
mov
mov
inc
test
(bad)
dec
mov
mov
jbe
lea
mov
push
(bad)
(bad)
(bad)
(bad)
call
cmp
jge
mov
mov
mov
movzx
add
inc
cmp
jl
mov
sar
push
dec
jbe
inc
cmp
inc
jge
pop
(bad)
push
mov
sub
sar
jle
adc
mov
add
lds
stc
push
add
or
sbb
lahf
pop
test
call
push
mov
imul
or
jns
push
pop
inc
std
cwde
push
inc
call
add
fbld
fmul
call
sub
lahf
or
push
xor
or
mov
neg
sbb
and
ret
adc
mov
jne
mov
in
xchg
xchg
es
mov
aas
sti
xor
call
xor
sahf
fstp
not
fldz
cmp
fstp
ja
shr
mov
jecxz
icebp
dec
adc
pop
sbb
inc
and
and
je
sbb
jne
or
adc
dec
jp
push
mov
ins
sub
call
mov
adc
sbb
cmp
outs
not
add
add
push
push
jbe
add
push
push
call
push
sbb
sti
add
sbb
add
test
rcl
ror
pop
sbb
and
cld
(bad)
jle
mov
fld
inc
fadd
sub
cmp
jl
jbe
adc
push
add
xor
call
push
aaa
and
add
gs
pop
mov
jne
add
and
sbb
stc
fs
sahf
sbb
dec
add
cmp
mov
or
mov
and
call
rol
sahf
pop
add
adc
fst
and
dec
cli
bndstx
in
ret
(bad)
jmp
or
(bad)
test
xchg
mov
lds
add
xor
cmp
or
mov
movs
jp
add
and
pop
xor
push
jne
xchg
movs
mov
or
and
nop
adc
push
pushf
pop
adc
push
iret
(bad)
mov
call
sbb
adc
push
call
fisttp
adc
ret
pop
out
sar
std
iret
call
mov
cwde
and
loope
test
dec
add
test
pop
mov
mov
xor
inc
dec
add
enter
loope
and
mov
pop
mov
call
call
sub
sbb
(bad)
(bad)
dec
or
jo
sub
push
mov
xor
mov
mov
fld
push
fstp
jg
mul
jmp
cmp
add
cmp
pop
jl
fnstenv
add
push
jl
dec
fld
mov
sbb
add
sbb
add
or
test
inc
scas
push
adc
or
inc
and
add
lock
(bad)
inc
call
push
mov
pxor
pop
xor
lea
movq
aaa
xchg
movq
lea
mov
mov
lods
mov
adc
mov
fnsave
and
in
outs
push
lea
push
dec
push
sbb
out
out
rcr
and
add
nop
aad
les
or
outs
jmp
call
and
pop
push
lea
mov
pop
mov
ja
sub
lea
adc
jne
(bad)
xchg
sti
adc
mov
test
push
push
fmul
std
movs
push
movs
call
and
mov
or
call
idiv
inc
add
dec
jne
dec
jl
push
dec
jg
fstp
and
push
movs
xchg
ins
push
inc
cli
jp
and
sub
scas
(bad)
mov
sub
jp
pop
sub
js
scas
jmp
dec
mov
call
sar
push
js
cmp
idiv
mov
ins
adc
ret
add
add
test
and
ret
sbb
jle
and
fistp
mov
dec
paddusw
(bad)
jmp
cld
mov
mov
mov
push
sub
or
(bad)
out
mov
push
xor
pop
or
mov
jne
loopne
adc
dec
add
cmp
and
fist
inc
mov
jne
je
add
jl
and
pop
mov
dec
shl
call
pop
mov
(bad)
mov
inc
and
sub
int3
jmp
adc
(bad)
jmp
(bad)
cmp
jle
adc
and
xor
cmp
adc
je
fisttp
pusha
ror
test
and
(bad)
out
adc
outs
push
and
punpcklbw
pmullw
mov
sub
nop
xchg
xor
sbb
xor
outs
jo
shl
je
movd
sbb
fwait
or
mov
sbb
and
lods
jae
and
jge
push
sbb
xor
popf
or
in
and
pop
(bad)
mov
sbb
jp
or
out
ror
add
dec
push
jne
mov
cmp
je
shr
jmp
pextrw
jg
cmp
test
jne
mov
add
cmp
mov
jmp
xor
aad
movq
psrlw
gs
(bad)
out
std
add
or
ror
shr
or
pop
je
fistp
inc
adc
cmp
je
and
jne
and
sub
mul
xor
cmp
xor
add
or
push
add
adc
or
sbb
cmps
mov
push
sbb
sar
je
adc
and
icebp
sub
add
cmc
sbb
fmul
leave
daa
cmp
in
cmp
sbb
cmp
sti
push
push
call
adc
fdivr
cmp
dec
push
jbe
fsub
dec
sbb
push
inc
and
cmp
jl
cmp
inc
pop
mov
pop
ret
mov
adc
jmp
or
clc
mov
pushf
inc
loopne
rcl
sub
lock
call
and
mov
lea
push
mov
sub
mov
mov
mov
cli
(bad)
out
add
rcl
add
push
sar
add
push
push
push
call
fcom
scas
wrmsr
retf
sub
subps
std
xor
jg
in
xor
add
cmp
jmp
test
jno
jo
loop
jmp
int
jnp
push
call
lea
inc
push
movs
es
pop
dec
movs
call
and
aas
test
test
enter
test
call
push
mov
mov
neg
push
neg
push
call
adc
cmp
(bad)
clc
or
clc
pop
jne
mov
push
or
(bad)
mov
add
xor
cmp
jne
push
shr
hlt
call
je
out
mov
mov
push
imul
dec
or
mov
jmp
inc
cwde
addr16
adc
clc
sbb
call
jg
mov
push
(bad)
leave
mov
dec
icebp
ja
mov
call
push
psubsb
jne
or
div
push
push
xor
or
dec
in
call
sbb
mov
inc
push
je
call
jmp
call
ffreep
(bad)
dec
je
mov
call
push
call
inc
or
sub
call
fcom
call
adc
in
test
je
mov
lahf
and
fst
nop
or
push
lea
push
idiv
dec
push
rcr
mov
pop
add
stos
fstp
fld1
fstp
sub
clc
xor
and
fstp
andps
test
je
jbe
cli
(bad)
jle
push
push
push
push
call
dec
sar
mov
ret
push
push
push
call
loop
inc
out
jp
lods
imul
push
push
push
push
mov
xor
push
mov
mov
xchg
rol
cmp
mov
lea
pop
std
adc
mov
enter
dec
jne
ja
inc
sub
icebp
lock
mov
jb
movs
movs
(bad)
loopne
xor
ret
out
pusha
pop
imul
movs
call
add
rcl
in
push
xor
stos
cmp
push
stos
je
pop
push
clc
add
pop
iret
sbb
sahf
(bad)
(bad)
fistp
cmps
jge
sbb
cmp
xlat
inc
jmp
cmp
mov
jg
and
inc
sbb
jp
xchg
cmc
aas
in
fld
push
add
imul
or
(bad)
mov
cmp
xor
inc
inc
push
xor
inc
iret
jg
mov
pop
and
mov
adc
add
test
xchg
pop
xlat
cmc
dec
jl
jne
and
in
mov
test
test
(bad)
sbb
xchg
inc
invd
call
addr16
adc
call
and
es
pop
pop
push
and
sbb
or
and
mov
sub
sub
adc
fdivp
in
adc
add
cmp
mov
aas
(bad)
pop
jo
mov
inc
push
fmul
mov
jne
sbb
mov
adc
fwait
cmp
push
and
leave
jle
jg
aas
pusha
jg
sbb
(bad)
cwde
sub
or
mov
and
cmp
imul
mov
and
mov
sbb
adc
clc
inc
out
or
repz
xor
mov
inc
cmps
sub
(bad)
fdivr
pop
xor
iret
jl
push
push
and
add
add
jnp
add
test
imul
test
ret
pop
or
jle
xor
jae
mov
dec
or
push
inc
out
and
add
jnp
inc
or
sbb
fild
not
jo
sbb
out
pop
inc
(bad)
jge
adc
sub
(bad)
and
ror
mov
dec
jo
jge
stc
sbb
(bad)
mov
test
ficomp
add
xor
push
or
or
call
pop
jae
dec
movd
punpcklbw
mov
out
(bad)
(bad)
dec
jno
pop
pshufw
pmulhw
pshufw
pmulhw
pshufw
pmulhw
and
call
in
paddw
imul
std
inc
and
psraw
pmaxsw
call
mov
(bad)
je
dec
jmp
loopne
outs
addr16
pmullw
movq
psrlw
ss
das
adc
addr16
aaa
adc
shr
sub
add
scas
jae
sbb
test
or
cdq
push
jmp
sbb
lea
jne
pusha
push
mov
push
popf
and
jle
scas
mov
sub
sbb
inc
mov
mov
add
les
push
call
mov
add
test
xor
lea
push
adc
iret
sbb
and
test
jae
jg
dec
inc
adc
fmul
push
fld
fmul
faddp
fld
fmul
push
sbb
int
mov
(bad)
faddp
fadd
fstp
fld
fmul
fld
and
daa
iret
fwait
xchg
sub
jo
inc
cmp
xor
aaa
daa
daa
inc
inc
push
mov
push
pop
fstp
fisttp
add
fstp
call
fstp
mov
into
or
pandn
test
adc
pushf
adc
aaa
cld
call
push
cmp
jle
mov
xor
cmp
jge
cmp
jmp
shl
jle
sbb
adc
xor
adc
sar
jmp
cmp
cld
retf
aad
jle
mov
aas
sub
into
pop
sti
jg
nop
out
or
push
rol
push
call
xchg
sbb
cmc
loope
lahf
and
xor
xor
in
add
sbb
jne
out
leave
icebp
jo
inc
push
stc
and
sbb
or
sub
jne
clc
and
je
emms
dec
bound
add
out
xor
out
sub
lock
inc
pop
adc
outs
adc
xchg
xor
(bad)
(bad)
jmp
pop
mov
mov
mov
mov
mov
mov
je
cmp
gs
jle
loopne
(bad)
(bad)
push
push
call
cmp
pop
pop
mov
je
push
mov
call
cmp
lds
popa
jnp
add
call
adc
add
aas
pop
lods
mov
inc
sbb
add
into
hlt
fwait
xchg
fcomp
jle
fld
(bad)
out
call
mov
fstp
fld
and
push
call
les
por
addr16
imul
add
sar
enter
call
push
push
scas
cs
push
test
ror
cmp
loopne
mov
sahf
dec
mov
pop
push
rcr
loop
mov
pushf
stos
pop
pop
sub
je
ret
inc
(bad)
test
hlt
xchg
stos
inc
mov
jle
push
test
xlat
lds
movs
jge
lds
and
stos
test
pop
xchg
push
test
push
mov
call
call
add
shl
mov
jmp
and
(bad)
(bad)
inc
mov
fmul
fadd
call
push
mov
or
paddsb
dec
or
cmps
std
mov
mov
je
mov
xchg
leave
cmp
jne
les
lahf
adc
imul
add
(bad)
push
push
mov
add
add
add
fscale
mov
sub
jne
fild
fmul
or
rol
jge
adc
fimul
ja
cs
(bad)
push
jne
push
mov
lea
movs
movs
push
lea
push
lea
movs
push
(bad)
out
pop
xchg
mov
inc
inc
test
clc
call
xor
inc
inc
mov
mov
sbb
sbb
fdiv
cld
jg
call
mov
mov
popa
pop
je
mov
ficom
inc
dec
dec
je
mov
mov
mov
xor
into
popf
pop
movs
call
mov
lea
movs
sbb
mov
or
inc
dec
or
call
fsubr
lea
add
push
call
jle
lea
sbb
xor
jne
call
or
(bad)
adc
push
inc
jmp
sar
jne
mov
sbb
inc
jmp
rcr
call
jne
mov
call
jmp
adc
(bad)
jl
or
add
adc
jl
dec
or
out
mov
mov
lea
push
mov
add
bound
dec
inc
push
rol
sub
imul
(bad)
mov
aas
xchg
paddq
mov
sbb
cmp
mov
dec
je
sub
or
lea
out
mov
dec
sub
call
cmp
lea
cmp
add
lea
movs
or
jne
jg
fldcw
dec
sbb
inc
adc
dec
dec
sub
movs
movs
push
xor
xchg
mov
inc
sub
sub
es
mov
inc
fstp
xor
adc
cmp
jne
faddp
in
add
pop
call
mov
sti
cmp
je
mov
pop
inc
cmps
imul
push
hlt
push
sub
dec
xor
and
iret
je
je
mov
mov
mov
mov
sub
sub
(bad)
dec
or
inc
sbb
jge
sub
jl
inc
cld
fmul
pop
mov
add
mov
mov
add
rcr
add
enter
inc
cld
xchg
push
fwait
cli
mov
or
mov
dec
jae
xor
jae
mov
mov
call
mov
inc
mov
or
jne
mov
sar
mov
clc
add
mov
je
mov
dec
imul
lea
jp
cmc
or
neg
sub
lock
add
jmp
add
cmp
xor
mov
call
or
cmovnp
call
pusha
push
add
aas
retf
dec
dec
call
psubsb
lea
add
mov
call
js
mov
lea
push
pushf
jb
inc
outs
dec
call
mov
cdq
xlat
jle
jo
inc
fdivr
or
mov
dec
cmp
dec
jbe
lods
pop
std
push
popa
mov
mov
sar
mov
mov
sub
and
outs
mov
ret
imul
sar
and
or
mov
mov
sub
movs
mov
imul
sar
neg
sbb
and
mov
mov
adc
ins
mov
and
mov
cmp
jne
sar
(bad)
fcomip
dec
test
rol
xlat
add
mov
jne
test
jl
cmp
jl
lea
cmp
jl
(bad)
xor
push
std
(bad)
push
push
mov
push
push
push
push
push
call
(bad)
aaa
inc
cmp
jne
cmp
jne
shr
jne
pop
mov
bound
add
inc
rol
cmp
and
loop
mov
inc
ins
movd
rol
pshufw
movq
pmullw
(bad)
(bad)
(bad)
aas
inc
outs
pop
or
pusha
fisttp
aad
movq
psubw
movq
pmullw
bound
or
pusha
out
pmullw
paddw
and
iret
fcomp
cmp
sbb
arpl
loop
jno
or
outs
sub
in
jno
or
addr16
mov
dec
push
jmp
mov
jo
call
sub
mov
imul
cwde
cli
mov
sub
(bad)
(bad)
jmp
push
and
inc
jne
mov
jl
sti
push
aad
jne
call
ins
mov
mov
mov
jno
scas
test
and
xor
add
out
sti
adc
fmul
mov
add
mov
shr
and
shr
pop
cld
outs
nop
or
icebp
push
mov
call
fmul
push
jo
add
inc
jmp
inc
pop
jl
(bad)
xlat
inc
inc
lea
mov
push
jg
jbe
push
cmp
jl
add
(bad)
aaa
xor
int
inc
or
xor
cmp
je
mov
mov
xor
jle
call
sbb
fimul
or
push
inc
rcr
hlt
(bad)
call
jge
mov
mov
mov
mov
push
call
lock
sar
inc
hlt
mov
jge
ja
fld
cmp
xchg
inc
cmp
hlt
call
cld
mov
jne
push
call
ja
jmp
mov
aas
jbe
mov
call
and
(bad)
cs
jne
push
mov
mov
sar
scas
test
xor
sub
(bad)
fild
adc
enter
out
sub
jg
mov
cmp
jg
mov
dec
inc
cmp
(bad)
pusha
out
call
inc
cmp
(bad)
cmp
jl
call
dec
fwait
sub
ds
jne
cmp
leave
ret
mov
dec
pop
loop
call
dec
fld
gs
push
xor
jecxz
(bad)
call
xor
test
xor
imul
and
mov
fwait
mov
imul
not
sbb
shr
stc
mov
shl
push
gs
push
and
xor
push
mov
pop
mov
call
dec
push
push
mov
inc
call
push
push
lea
(bad)
adc
sub
test
je
sbb
or
push
mov
push
push
call
jno
cli
pop
cmp
addr16
jo
call
test
push
mov
clc
fstp
pop
(bad)
out
jle
add
mov
(bad)
fnstsw
retf
push
mov
clc
push
jne
mov
call
jg
loopne
mov
je
mov
call
cmp
jle
push
pop
add
jmp
dec
test
mov
jbe
add
mov
es
or
inc
jno
call
jge
out
mov
push
jmp
(bad)
(bad)
inc
or
inc
or
js
add
or
ror
xor
ror
ror
out
jae
mov
mov
test
jmp
or
and
cmp
cld
jbe
pop
mov
cmp
ror
cmp
mov
push
add
jbe
jge
jmp
into
sub
sbb
cdq
jmp
jo
ret
jne
call
(bad)
and
push
push
fdiv
aaa
cmc
fisttp
mov
sbb
into
test
ja
faddp
add
iret
or
add
ret
into
add
cmp
into
icebp
jl
jle
mov
adc
mov
push
jne
and
push
movzx
pop
mov
call
lock
or
mov
pop
push
cdq
jb
mov
or
pop
jne
mov
push
into
lds
dec
pushf
add
mov
mov
call
call
push
push
mov
xor
call
mov
fdiv
sbb
xor
sbb
add
and
imul
pop
pop
sbb
and
pop
mov
test
rol
add
or
sar
xchg
push
mov
call
lock
std
scas
jle
lea
lea
shl
pop
pop
lock
call
out
adc
sub
loopne
cmp
add
xor
loopne
fsubr
dec
popf
inc
inc
add
inc
inc
add
push
xor
fldenv
loopne
or
push
jl
inc
inc
out
inc
inc
add
call
pop
adc
call
add
mov
mov
inc
or
not
push
jl
aad
mov
(bad)
push
lea
adc
or
push
mov
or
dec
cld
je
ret
in
jmp
dec
mov
jne
push
ja
cmp
jne
call
cld
fild
mov
fmul
push
js
jmp
jae
aam
jle
clc
adc
jne
mov
and
inc
cmp
dec
and
or
int3
xlat
and
jnp
mov
cmp
je
push
dec
push
push
call
push
les
push
push
push
or
stc
call
xor
mov
push
inc
rol
sbb
push
mov
inc
shl
call
out
jbe
ffreep
ret
push
mov
push
mov
jmp
fst
push
inc
(bad)
test
jne
pop
pop
and
add
(bad)
mov
or
call
ret
mov
push
jae
div
sar
mov
and
cmp
pop
jne
xchg
inc
jmp
inc
mov
pop
loope
aaa
jge
mov
test
dec
mov
jne
mov
and
inc
cld
mov
js
add
and
(bad)
sbb
icebp
xlat
call
(bad)
pop
ret
call
add
or
in
and
adc
jg
mov
mov
mov
push
call
xor
loop
fsub
into
mov
jp
or
cld
mov
mov
mov
mov
mov
(bad)
mov
call
adc
push
jp
std
rcl
call
pop
std
outs
adc
or
fwait
or
retf
pop
pop
adc
call
dec
sbb
inc
data16
and
mov
cmp
(bad)
(bad)
jl
or
je
mov
or
jmp
mov
push
mov
ret
mov
hlt
or
rol
jg
cwde
ret
xor
mov
data16
jg
fisttp
not
and
mov
rol
adc
xor
add
test
dec
call
mov
bound
jo
call
test
stos
sbb
sar
inc
adc
mov
dec
add
shr
jae
adc
lea
call
inc
aad
inc
xchg
push
xchg
inc
or
add
add
rol
call
fcom
adc
xor
in
or
jmp
in
mov
add
add
mov
pop
or
mov
cmp
jne
mov
or
xor
ins
ret
mov
arpl
or
or
(bad)
jg
call
push
mov
mov
push
call
cld
mov
cdq
je
mov
and
mov
mov
call
mov
cmp
jo
fs
or
not
and
add
or
in
or
cmp
idiv
inc
add
jne
mov
cmp
je
cmp
jne
jmp
or
xchg
push
adc
clc
(bad)
jg
push
xor
pop
ret
cmp
jl
cmp
jg
inc
mov
or
out
ja
cmp
jl
add
call
(bad)
sar
(bad)
dec
clc
push
push
call
mov
add
test
je
fldz
fstp
and
movsx
push
call
mov
cld
je
dec
jge
fild
xor
inc
inc
fmul
test
call
loopne
fiadd
fst
jne
jmp
(bad)
clc
add
rcr
fstp
push
cld
inc
fsubr
sti
add
pop
pop
leave
stc
je
or
xor
pop
mov
sar
ret
push
push
call
pop
je
push
stc
nop
leave
fisubr
mov
popa
(bad)
pop
xor
xchg
repnz
pop
cmps
push
enter
xor
mov
icebp
je
adc
sahf
dec
inc
sahf
pop
test
inc
cwde
pop
push
dec
inc
and
push
mov
sbb
jl
mov
jmp
mov
push
xor
repnz
(bad)
jmp
rcr
dec
mov
in
cmps
mov
fs
fs
sahf
xor
in
mov
je
cdq
fs
push
pop
adc
fs
fs
xor
scas
pop
sub
rcl
(bad)
in
or
xor
sub
adc
neg
push
lock
loope
push
xor
fwait
mov
mov
outs
retf
adc
dec
fisubr
(bad)
out
dec
mov
call
cld
add
(bad)
(bad)
mov
sbb
pop
je
mov
mov
call
fucomp
adc
push
call
mov
test
push
push
jne
push
call
mov
mov
jae
pop
pop
ja
mov
push
call
sbb
add
jo
pop
dec
call
rol
or
jg
mov
mov
pop
cmp
sete
push
add
call
les
add
out
loopne
jle
out
iret
call
lock
call
fdivr
or
push
call
add
push
mov
mov
call
jne
mov
icebp
push
call
or
outs
xor
xlat
xchg
sbb
push
push
call
or
mul
sbb
call
mov
mov
lea
add
shl
jne
adc
jo
inc
sub
call
shl
add
sub
fidivr
push
push
push
mov
cld
sbb
call
inc
shl
add
call
push
lods
mov
adc
je
int
xchg
scas
jnp
test
adc
xor
movs
ss
call
imul
push
fcom
and
fadd
shl
add
jp
xor
cmp
repnz
jmp
movs
sub
bound
scas
or
cmp
je
jne
gs
xor
inc
cmp
jl
bound
push
adc
sub
jnp
xchg
xor
int
aaa
in
stos
and
jmp
sub
lea
mov
lock
push
push
or
xchg
push
add
div
dec
(bad)
push
call
or
xor
push
call
cmp
or
cmp
jbe
repnz
fucomip
loopne
je
ins
mov
clc
push
push
mov
call
or
cmp
je
push
push
push
jae
test
adc
xchg
pop
add
xor
and
sbb
stc
cmp
call
outs
(bad)
leave
ret
mov
fist
cdq
push
(bad)
mov
stc
push
mov
int
or
call
scas
fcomp
fmul
nop
or
push
call
xchg
fs
push
call
js
out
sub
add
cmp
fdivr
int3
enter
inc
or
inc
sbb
fld
ret
push
pushf
loope
les
test
je
idiv
arpl
adc
test
adc
or
aad
loopne
ret
jle
jg
idiv
push
pop
jmp
cmps
mov
pop
add
je
sbb
aaa
call
cmp
je
ret
call
push
mov
call
jno
inc
(bad)
out
dec
je
mov
cmp
ja
pusha
dec
imul
dec
jp
adc
leave
std
sub
fisttp
pop
add
mov
std
aaa
inc
dec
adc
cmp
add
jmp
dec
and
mov
adc
push
push
mov
call
rcr
jg
call
mov
push
jmp
push
call
push
lea
mov
add
sbb
push
push
jne
shl
mov
mul
mov
test
jg
pop
das
cmp
repz
mov
mov
mov
call
or
inc
pop
and
pop
add
pop
fsub
outs
dec
jle
add
xor
mov
push
call
fwait
mov
push
add
adc
cdq
pop
lea
jmp
mov
cmp
daa
(bad)
inc
jl
cmp
jg
add
mov
inc
call
loop
sub
mov
je
inc
das
mov
push
lea
push
outs
cs
pop
pop
pop
(bad)
aas
jl
out
call
mov
cmp
je
cmp
lock
dec
je
cmp
je
cmp
jne
mov
dec
jns
xor
sbb
test
or
jmp
and
mov
mov
mov
lea
push
mov
xchg
inc
add
push
mov
adc
(bad)
jno
mov
cmp
(bad)
(bad)
(bad)
(bad)
mov
jbe
cmp
jae
mov
jmp
push
mov
and
cmp
pop
jne
(bad)
ffreep
mov
sub
test
sub
shl
add
pushf
or
and
mov
mov
jl
ror
adc
fidiv
shr
psubq
push
or
jmp
cmp
je
cs
and
add
stc
and
push
shr
or
jmp
mov
or
jmp
(bad)
(bad)
push
add
sbb
shr
or
mov
mov
shr
and
inc
sbb
adc
mov
loop
rcr
adc
(bad)
jmp
cmp
push
jne
mov
push
mov
mov
and
cmp
lea
mov
(bad)
(bad)
adc
je
mov
inc
test
or
inc
mov
pop
ret
xor
pop
das
call
clc
call
xor
xor
cmp
jle
ss
inc
adc
inc
sbb
cmp
jge
and
movs
int
shl
mov
out
call
mov
inc
test
mov
inc
je
mov
mov
inc
sub
(bad)
outs
push
(bad)
inc
add
pop
or
mov
pop
pop
pop
ret
push
shl
sahf
sti
jle
push
mov
push
mov
cmp
(bad)
(bad)
(bad)
jge
mov
movzx
shl
or
inc
inc
cmp
adc
loop
xchg
mov
push
call
dec
inc
mov
jle
cmp
lea
push
push
call
inc
push
fild
loopne
inc
cmp
jl
call
and
into
or
sub
je
dec
je
jmp
and
pop
xor
inc
mov
push
push
call
fild
jo
rcl
(bad)
imul
aad
add
jmp
push
jne
dec
cmp
ja
sar
add
push
jmp
ret
push
add
and
cmp
mov
mov
xchg
jmp
cmp
or
adc
or
mov
ja
call
cmp
outs
jmp
add
jle
je
jbe
xchg
je
mov
ss
fs
call
xchg
std
jne
inc
jmp
push
adc
sub
sti
xchg
jbe
call
add
call
push
lar
dec
and
cmp
je
sbb
loopne
or
mov
mov
push
call
jns
push
(bad)
jg
mov
pop
test
idiv
adc
mov
lea
in
sti
iret
adc
add
add
and
mov
inc
mov
call
jmp
dec
stc
repz
repz
or
cmp
mov
je
(bad)
cmp
jmp
cmp
jb
add
dec
jne
aas
(bad)
inc
or
cmp
pop
inc
cmp
and
or
stos
inc
mov
test
jne
lea
sar
fstp
daa
mov
add
pop
or
push
and
or
dec
(bad)
ror
or
enter
and
jecxz
mov
mov
push
mov
and
je
(bad)
(bad)
clc
(bad)
std
or
je
lea
and
cmp
ja
(bad)
jne
mov
add
pop
call
mov
call
ja
pop
pop
leave
ret
pop
test
xor
xor
sbb
pop
pop
ins
add
je
add
push
dec
fild
(bad)
pushf
add
jo
call
add
add
pop
fdivr
adc
call
jle
add
mov
mov
push
out
sbb
or
(bad)
fisttp
jno
call
mov
push
push
call
push
call
mov
clc
test
jnp
pmuludq
add
ja
fistp
pop
bound
mov
jne
(bad)
aas
lock
mov
cmp
je
call
sbb
add
push
call
cld
push
mov
fiadd
mov
inc
fst
mov
js
into
call
leave
and
leave
ret
jmp
ret
mov
(bad)
aaa
iret
imul
fstp
add
adc
fldz
fstp
adc
push
or
add
scas
push
fld
push
fmul
call
fld
mov
mov
or
fmul
or
or
push
sbb
sbb
call
mov
xor
xor
(bad)
call
jmp
lock
in
or
call
(bad)
out
xchg
inc
or
pop
lea
mov
rep
pop
pop
jne
push
adc
loope
sbb
scas
call
jae
xchg
sbb
push
adc
(bad)
sar
icebp
push
call
sbb
call
call
pop
add
adc
popa
add
call
pop
test
mov
je
call
or
inc
cdq
jne
call
dec
lahf
pop
mov
inc
mov
push
mov
sti
or
(bad)
inc
mov
mov
jmp
mov
movzx
cmp
je
mov
add
mov
sub
dec
or
mov
mov
outs
ret
sbb
sub
and
jmp
mov
call
loopne
jmp
test
iret
and
out
ss
call
push
mov
xchg
adc
or
lock
call
mov
sub
add
rol
hlt
add
icebp
or
mov
jmp
in
mov
addr16
cmp
push
out
adc
mov
pop
clc
or
adc
or
push
mov
or
sbb
mov
cmp
mov
mov
bound
fwait
retf
sbb
inc
add
adc
mov
cmovo
stos
int
mov
and
call
ret
shl
push
push
call
push
pop
je
add
call
push
push
push
push
call
jmp
jne
(bad)
(bad)
push
xor
dec
and
xchg
inc
sbb
ret
pop
sar
mov
dec
push
cmc
fadd
ja
call
jle
ret
push
out
cli
jmp
call
xor
mov
cmp
fdivp
aas
adc
mov
mov
add
(bad)
push
cmp
or
sbb
or
scas
dec
shl
aad
add
add
sar
jmp
test
je
mov
cmp
je
test
je
mov
cmp
loop
clc
adc
push
call
mov
cmp
ror
fld
inc
jmp
outs
mov
jg
mov
retf
ret
(bad)
sbb
pushf
dec
push
xor
push
mov
push
mov
mov
call
push
hlt
and
and
out
dec
cmc
out
cmp
or
test
push
add
loopne
or
(bad)
out
mov
dec
cmp
je
push
or
add
ja
add
push
xor
cmp
jle
inc
add
(bad)
out
(bad)
cmp
mov
mov
jge
dec
lea
push
push
call
fstp
imul
and
mov
call
adc
pop
inc
or
and
aaa
add
xor
pusha
jne
ja
push
add
add
cmp
jl
pop
jmp
push
call
out
add
fistp
add
jmp
push
mov
aam
out
call
mov
adc
or
call
sbb
outs
in
add
adc
mov
mov
pop
or
jo
div
lea
jmp
fdivr
(bad)
jge
add
or
jne
lea
call
sar
pop
sbb
xchg
mov
call
arpl
push
jne
call
mov
call
cmp
call
sbb
(bad)
cmp
inc
cli
int
cmp
je
mov
push
imul
jmp
push
call
pop
jne
mov
mov
cmp
add
adc
fs
add
or
or
push
push
mov
mov
retf
mov
scas
outs
mov
mov
or
lock
std
dec
push
xchg
int3
mov
addr16
in
dec
gs
je
ja
pop
mov
inc
dec
jne
je
dec
std
jnp
add
test
pop
jo
mov
push
call
call
xlat
out
(bad)
call
push
jns
or
call
jmp
sbb
or
fmul
xor
call
adc
scas
fbld
ja
or
mov
call
adc
je
mov
call
push
cmp
imul
jne
ret
pop
adc
test
pop
je
icebp
jbe
dec
retf
cmp
iret
gs
push
leave
cmp
setg
mov
test
inc
call
cli
mov
outs
or
call
lock
mov
cmp
adc
push
popa
je
cmp
je
cmp
je
jmp
lods
test
mov
jl
adc
lock
mov
bound
add
add
mov
dec
add
jmp
push
mov
push
fbstp
cmc
aam
sub
add
mov
pusha
into
je
push
push
jns
mov
icebp
or
mov
or
push
out
jp
jge
add
lea
test
je
or
ja
cld
dec
lea
call
jmp
fmul
loopne
add
ins
mov
test
mov
je
and
push
mov
dec
repz
jbe
jle
push
push
mov
mov
out
jbe
dec
sahf
lea
jb
mov
xchg
mov
jns
or
call
sbb
add
ror
cld
gs
push
push
sbb
dec
push
mov
lea
scas
mov
and
call
xor
clc
je
cs
loopne
mov
mov
retf
in
nop
call
loopne
(bad)
call
call
cmp
pop
je
push
fst
jno
sub
jp
add
add
div
adc
or
adc
xchg
mov
jg
imul
call
push
call
mov
cmp
je
cmp
je
std
adc
jl
ret
(bad)
jg
movzx
cmp
je
cmp
jne
push
push
out
jg
push
ins
cmp
mov
mov
call
and
call
sub
aas
cli
pop
jo
jmp
fild
jmp
jmp
fild
push
js
scas
jbe
dec
adc
lock
jne
and
xchg
pop
stos
mov
cmp
mov
jne
inc
sub
push
pop
jl
xor
(bad)
out
call
jb
cmp
jle
sbb
push
jge
pop
mov
mov
call
or
pop
pop
push
(bad)
aas
mov
pop
mov
mov
call
in
sbb
ficom
pop
jmp
mov
push
cmp
dec
jg
mov
sbb
inc
push
call
jmp
adc
leave
sub
je
dec
je
dec
je
push
cmp
fsubp
pop
outs
cmps
mov
jo
pop
sub
pop
in
pop
push
into
adc
push
push
es
and
jg
test
fnstcw
fdivrp
jbe
mov
fwait
jbe
dec
hlt
mov
mov
retf
mov
pop
popa
mov
push
ss
and
jne
call
add
pop
sub
cld
cmp
jnp
cmp
mov
jge
aad
test
inc
mov
imul
fadd
inc
sbb
push
push
or
sbb
push
cld
call
loope
cmp
inc
iret
mov
push
add
mov
or
add
pusha
neg
sbb
ss
(bad)
leave
enter
pop
aas
in
mov
test
pop
push
je
jl
or
sti
inc
xchg
retf
call
pop
dec
fcom
inc
clc
std
push
lods
sahf
xchg
(bad)
(bad)
fstp
ja
fst
mov
push
push
call
fmul
mov
frstor
mov
jge
lock
lods
test
cld
push
je
call
cmc
fbstp
pop
add
inc
in
pop
push
or
outs
test
cmp
retf
pop
ins
push
sbb
pop
fadd
ret
push
pop
or
mov
pop
pop
ret
popa
add
xchg
jp
in
sub
jb
mov
adc
mov
or
call
test
jl
or
push
mov
(bad)
mov
add
ja
test
cmc
mov
inc
call
fsubr
cmp
push
call
jae
xchg
shl
shr
dec
pop
xor
push
lea
sub
mov
out
shr
call
rcl
fdiv
inc
mov
pop
mov
enter
in
out
cmp
call
mov
lea
je
push
push
mov
mov
or
sbb
mov
(bad)
outs
clc
jnp
dec
push
push
lea
mov
add
and
or
in
add
sbb
(bad)
in
jg
out
mov
das
call
lock
movzx
jmp
push
fs
inc
addr16
push
(bad)
or
push
out
enter
fcomp
shl
jg
push
call
dec
clc
push
call
adc
and
dec
call
loope
std
push
call
repnz
and
fnstenv
sbb
jl
jmp
pop
and
les
and
(bad)
mov
ret
pop
je
cmp
je
push
lea
(bad)
lahf
jmp
mov
pop
cmp
xor
mov
lea
in
fcom
(bad)
out
pop
out
dec
mov
hlt
call
push
add
loope
(bad)
in
cmp
jne
cmp
jne
cmp
fldz
jle
in
fstp
mov
push
dec
add
test
daa
dec
addr16
loopne
shl
sbb
pop
adc
jo
xor
lahf
clc
cmp
je
imul
dec
push
push
call
mov
push
pop
mov
push
push
mov
adc
(bad)
fadd
add
fwait
add
mov
and
pop
add
call
pop
jmp
out
fadd
sub
mov
mov
je
dec
jne
idiv
jbe
jle
lods
push
out
(bad)
(bad)
call
cmp
rol
xchg
pop
cmp
je
fld
push
call
jle
push
call
fld
cwde
and
ret
push
pop
fild
jns
push
call
adc
ss
daa
sahf
enter
jp
je
in
pop
loope
xor
cmp
pop
adc
cmp
jle
mov
mov
loop
adc
out
jmp
sub
sti
je
mov
cmp
and
out
add
cmp
cs
scas
jmp
js
mov
or
movs
xlat
push
add
add
adc
test
add
aas
push
add
mov
mov
inc
mov
and
es
jne
cmp
mov
call
mov
iret
test
push
mov
loopne
or
xor
aad
push
sub
push
mov
movs
jle
xor
fwait
jle
iret
(bad)
(bad)
inc
mov
mov
shl
je
cmp
je
lahf
call
jp
dec
cmp
jne
mov
sub
je
dec
je
dec
je
dec
je
outs
call
push
xor
call
cmp
test
add
push
sub
je
dec
je
dec
je
mov
sar
push
jmp
or
sbb
adc
adc
add
mov
adc
push
jmp
push
lea
rcl
cmps
fild
jmp
cmp
out
mov
je
sub
je
dec
push
sub
call
dec
je
sub
je
jmp
pop
out
sahf
outs
jmp
or
and
sbb
jmp
add
jmp
or
adc
or
imul
sbb
ret
out
xchg
lea
clc
push
sbb
xor
cmp
mov
mov
mov
push
mov
ficom
jl
adc
mulps
add
adc
jmp
inc
outs
push
jecxz
adc
cmps
mov
ret
aad
ss
pop
jns
out
fnstsw
sar
cmp
je
js
repnz
imul
push
jne
jl
leave
je
outs
loop
outs
xor
or
jne
call
test
movq
fadd
ss
jl
cmp
test
pop
mov
test
jne
mov
jl
cwde
mov
dec
pusha
call
jmp
scas
pop
add
xor
jmp
out
mov
stos
mov
in
sub
push
xor
cmp
mov
call
(bad)
das
test
je
push
call
sti
addr16
mov
mov
les
test
xor
inc
jge
call
mov
mov
mov
push
mov
inc
sbb
mov
mov
mov
call
js
dec
push
add
push
sbb
xor
(bad)
call
xchg
inc
mov
xor
mov
mov
mov
cmp
jbe
or
dec
je
inc
mov
mov
pop
cs
out
ret
(bad)
fcomip
push
add
call
mov
mov
lea
call
repz
call
sbb
mov
inc
push
shl
inc
mov
jbe
add
pop
xchg
clc
aas
xor
or
mov
xor
call
stos
jg
add
dec
and
push
cdq
push
(bad)
loopne
out
jne
je
mov
call
lds
jo
hlt
punpcklbw
pop
mov
addr16
inc
shl
(bad)
pop
xchg
pop
push
push
call
adc
shr
mov
call
into
test
mov
and
je
popa
mov
mov
test
pop
pop
je
aaa
neg
stos
and
(bad)
xchg
xor
mov
pop
pop
or
add
add
cmp
jne
mov
movs
and
sbb
push
jo
loop
jl
xor
retf
dec
in
call
cmp
jmp
in
dec
pop
push
mov
cmp
add
test
push
movs
sbb
scas
push
cs
sbb
add
ja
fild
call
mov
push
jne
call
es
mov
push
fdiv
in
dec
ss
scas
je
mov
lea
mov
mov
ja
dec
cmp
jne
mov
jmp
call
clc
add
add
jl
mov
jge
test
jl
cmp
jge
jae
hlt
sbb
add
pop
rol
hlt
mov
call
jmp
add
pop
push
call
pop
dec
inc
adc
jecxz
dec
cmps
jo
xor
push
ffreep
cmp
jo
fisub
fdiv
(bad)
cmp
iret
sbb
clc
mov
je
sbb
push
call
mov
xchg
aad
call
data16
loope
das
jne
add
pop
inc
clc
lock
push
add
mov
lock
push
cmp
mov
mov
push
add
adc
fcomp
xchg
cld
push
ror
push
add
stc
pop
mov
clc
jne
jmp
inc
outs
add
(bad)
fild
hlt
je
mov
sbb
sete
test
jne
cmp
jo
and
ffreep
push
add
or
lahf
pop
iret
call
fadd
add
push
lea
inc
jmp
inc
jae
js
and
sub
cwde
add
stos
je
jne
and
add
test
mov
pusha
cmp
xor
into
je
call
cmc
fbstp
mov
jmp
call
pusha
push
jge
cmps
pushf
add
mov
sti
mov
call
cmp
je
mov
std
mov
push
lock
sbb
call
fild
int
mov
call
cmp
pop
jne
add
inc
cmp
mov
(bad)
jne
fidiv
xor
jmp
mov
jns
fucomip
bound
mov
jmp
mov
(bad)
outs
cli
jg
movs
sub
push
call
fst
rcr
call
mov
pop
clc
jl
jne
push
call
sbb
retf
adc
inc
and
jl
mov
pop
jo
call
cmp
out
outs
add
add
dec
add
fdiv
call
rcl
fwait
icebp
sbb
jne
mov
cmp
push
add
inc
clc
hlt
shl
xchg
xchg
mov
test
pop
pop
jne
push
pop
pushaw
in
rcr
xchg
sar
fild
and
mov
fstp
push
inc
or
mov
sub
fst
(bad)
mov
lock
test
jp
or
cmp
lock
inc
add
add
jne
jmp
push
xor
add
cmps
adc
xchg
fstp
sub
aas
fstp
sbb
pop
adc
sbb
das
push
int3
rcr
test
jmp
and
test
sub
dec
adc
cmp
xchg
jae
daa
mov
jo
sbb
push
mov
fsubr
adc
pop
fild
pop
fmul
jmp
fcomp
or
out
sbb
fild
adc
pop
neg
(bad)
adc
(bad)
mov
test
fild
mov
mov
add
add
jmp
adc
push
imul
add
test
dec
mov
add
adc
jmp
in
add
pop
leave
ret
inc
les
xor
mov
stos
mov
add
push
xor
xlat
xor
dec
add
shl
into
loope
mov
jle
mov
call
outs
fcomip
xchg
test
or
icebp
mov
push
icebp
pop
lock
cmp
or
sbb
mov
cwde
push
push
or
mov
jne
jl
adc
push
push
mov
ja
sub
and
cmp
ja
cmp
jge
sbb
jl
and
mov
mov
fdiv
ret
and
mov
loope
ret
cmovg
push
call
or
(bad)
(bad)
(bad)
mov
ret
shr
and
test
mov
je
cmp
push
push
jne
sti
cmps
mov
or
addr16
push
call
push
xchg
xchg
jmp
jmp
or
cli
aas
inc
adc
inc
dec
cld
je
jle
cmp
jle
cmp
je
mov
mov
mov
and
jmp
jne
(bad)
(bad)
out
push
push
rol
cmp
jae
sbb
(bad)
(bad)
push
inc
push
movzx
cmp
or
icebp
add
mov
xor
xor
and
out
(bad)
sbb
js
add
jb
jmp
xor
mov
mov
mov
(bad)
mov
cmp
push
pop
jmp
imul
(bad)
push
or
(bad)
movzx
push
push
inc
call
sub
mov
inc
inc
je
ja
jb
jmp
inc
shl
je
ds
loopne
cmp
mov
test
fild
sub
mov
rcr
and
test
pop
xchg
je
xchg
sbb
jbe
clc
ja
ja
call
push
push
call
aad
out
adc
idiv
push
fadd
sub
add
out
call
mov
ins
cs
les
jecxz
ss
hlt
test
cmp
sti
add
jmp
sbb
and
loop
ins
loop
jo
xor
xor
mov
call
(bad)
dec
pop
je
mov
add
jmp
push
call
adc
inc
pop
jmp
push
call
fistp
inc
(bad)
or
ss
push
call
in
jg
scas
mov
jge
push
call
sub
push
pop
out
pop
leave
ret
call
dec
daa
push
cld
call
mov
mov
cmp
je
push
popa
lea
and
(bad)
(bad)
mov
cmp
sbb
ret
jne
cmp
jle
cmp
je
call
mov
add
push
jmp
push
push
call
into
mov
sti
je
cmp
push
cmp
outs
sar
(bad)
jmp
pop
cld
outs
mov
es
xor
push
push
call
std
pop
cmp
jle
mov
mov
call
in
cmp
xor
cmp
inc
pusha
add
pop
add
push
prefetchw
push
mov
mov
nop
mov
sbb
retf
lock
cs
je
(bad)
inc
aaa
daa
add
push
ret
fisttp
push
dec
ret
mov
sbb
fdiv
mov
jl
bound
or
call
inc
mov
inc
or
jl
das
(bad)
pop
ja
call
xchg
ror
or
jne
push
call
js
push
movs
lahf
cmp
call
push
mov
leave
ret
mov
cs
mov
push
mov
movs
call
cs
je
cmp
jne
ja
(bad)
inc
push
pop
mov
jne
cmp
sar
sub
loop
mov
add
mov
mov
test
je
push
call
jo
cli
je
or
push
push
mov
call
push
mov
add
(bad)
retf
call
push
call
idiv
mov
pop
je
push
call
sti
(bad)
add
call
add
fiadd
push
out
pop
int3
add
iret
add
add
mov
call
mov
jne
push
or
pop
pop
or
adc
lea
mov
push
jmp
push
mov
push
inc
daa
ret
pop
aam
ins
push
jge
fisttp
cmp
test
mov
je
cmp
push
xor
sbb
test
sbb
cs
mov
and
add
in
jle
aaa
scas
add
test
gs
push
inc
(bad)
add
test
jmp
dec
xchg
mov
pop
pop
sub
cmp
(bad)
test
pushf
and
sar
mov
mov
call
in
cmp
or
mov
test
and
call
push
movs
add
scas
loope
out
cmp
xchg
jp
mov
jb
xor
in
jle
clc
push
lock
in
out
bswap
call
push
or
adc
dec
neg
pushf
imul
test
dec
cmp
mov
xor
call
mov
dec
or
push
push
call
in
mov
xchg
xchg
add
ds
clc
add
mov
and
(bad)
out
dec
std
xor
or
(bad)
aam
jnp
(bad)
setno
xchg
icebp
iret
call
jmp
mov
stos
clc
mov
dec
or
pop
mov
pop
jns
(bad)
jns
mov
inc
jg
jb
sbb
ja
push
push
push
call
jmp
inc
mov
xor
mov
call
dec
hlt
int3
adc
ins
add
dec
adc
mov
inc
pop
push
mov
sub
fld
and
in
push
in
rcr
jo
add
cmp
test
jl
ror
mov
push
rcl
cmps
mov
and
mov
clc
jmp
lock
arpl
rol
pop
movs
pop
enter
jmp
ins
push
sar
mov
adc
mov
sar
and
mov
out
mov
mov
push
add
cmp
aaa
out
lea
out
sti
fisttp
adc
ins
iret
mov
(bad)
cs
popf
sbb
ret
imul
xor
add
push
outs
mov
mov
into
add
dec
mov
imul
es
call
jmp
pop
and
add
push
jmp
mov
call
push
mov
push
jmp
shl
push
push
call
push
cwde
jo
sub
pop
ret
sbb
pop
fistp
ss
aas
xlat
push
add
test
fild
or
sbb
push
call
or
fdiv
push
clc
xor
out
out
loopne
xor
adc
cmp
je
adc
push
call
je
push
xchg
sbb
aas
xor
sbb
sbb
faddp
loope
jle
push
add
stos
add
cmp
sbb
jmp
and
sbb
dec
cmp
ja
stos
pop
push
repnz
movs
mov
stos
inc
pop
sbb
in
shl
jne
cmp
fld
fsub
fcmovnbe
or
pop
(bad)
arpl
daa
or
ins
add
pop
xchg
jmp
cmp
sbb
inc
(bad)
sti
mov
pop
inc
xor
push
jl
cmp
aaa
mov
xor
jnp
mov
or
lahf
push
movzx
jo
or
scas
or
add
fld1
sub
or
out
jp
jns
pop
in
inc
in
jmp
mov
or
inc
sbb
push
jmp
cmp
test
test
or
fwait
jmp
shl
and
xor
mov
jbe
xchg
inc
jmp
sar
call
mov
mov
call
sbb
call
mov
sub
cmc
fwait
stos
jmp
ja
jmp
ja
sbb
call
shl
or
jmp
ds
outs
lds
adc
or
inc
das
cmp
out
inc
jmp
and
jmp
sbb
in
call
xor
cmp
sete
jmp
pop
jbe
call
pop
pop
pop
pop
ret
mov
add
cmps
imul
arpl
push
outs
add
jmp
mov
call
cmps
jmp
xor
into
fdivr
je
nop
sahf
les
aas
mov
mov
jno
cmps
push
call
jmp
adc
cmp
push
clc
or
call
inc
add
dec
das
jnp
inc
shl
leave
and
sbb
or
icebp
mov
xor
add
add
fsubr
sub
jne
jmp
xor
jp
je
dec
je
dec
je
mov
scas
sub
ja
adc
cmp
loopne
cmp
jmp
and
push
call
aaa
iret
jo
adc
cmp
aas
sbb
lods
jmp
and
xor
dec
pop
pop
push
sbb
fld
shr
dec
fdiv
stc
pop
jne
pop
sub
iret
adc
and
pop
mov
jmp
leave
cmp
je
jne
cmp
es
fsub
seto
pusha
pusha
push
xchg
mov
call
jmp
hlt
pusha
loop
pusha
fdivr
test
or
and
(bad)
ja
pop
mov
xor
shl
push
outs
mov
popa
cmp
nop
xor
cmp
or
and
call
in
scas
push
call
jp
jp
jne
movs
push
push
fadd
sbb
xor
push
mov
push
(bad)
je
push
jo
sbb
and
inc
es
cmp
pop
xchg
add
stos
inc
out
int3
cmp
das
retf
jno
pop
inc
hlt
imul
(bad)
sub
push
stos
jnp
add
(bad)
ds
cmp
gs
mov
inc
and
xor
jo
pop
or
inc
sbb
push
je
adc
ret
dec
aad
xor
test
jl
test
(bad)
add
scas
iret
fdivp
jne
xlat
xor
icebp
sbb
add
or
pop
inc
dec
rol
data16
dec
and
mov
adc
dec
mov
adc
sets
ds
call
push
sub
inc
xlat
adc
fwait
and
mov
xchg
cwde
jno
inc
pop
fwait
mov
mov
call
or
jg
test
jno
mov
(bad)
jo
cwde
xor
xchg
cmp
dec
in
mov
fild
mov
iret
loopne
cmp
push
cmp
and
cmp
adc
sbb
inc
inc
and
lods
add
inc
call
inc
(bad)
push
loope
inc
xchg
sbb
push
xchg
jg
or
mov
or
jle
add
xchg
cmp
cmp
fstp
call
sbb
lods
addr16
sbb
mov
jmp
out
xor
xor
dec
je
adc
inc
es
shl
outs
and
mov
cmp
jno
adc
dec
pop
rcl
sub
push
jo
cwde
mov
push
inc
dec
jnp
push
nop
(bad)
dec
cmp
out
and
xor
push
or
pop
jo
mov
inc
jo
push
dec
mov
test
cmp
sub
lock
cs
cdq
das
scas
inc
data16
push
nop
or
scas
jmp
or
enter
dec
rol
sub
out
mov
ror
push
mov
cmp
jne
cmp
jne
push
arpl
sub
sub
out
or
add
jne
and
mov
scas
(bad)
cmp
sbb
rcr
pop
or
call
jmp
mov
add
pop
mov
inc
lock
icebp
call
cmp
dec
or
add
jmp
(bad)
push
mov
call
pop
je
mov
mov
jmp
addr16
xor
fsubr
jp
pslld
rcr
push
xor
and
jne
(bad)
(bad)
hlt
call
std
pop
ins
add
add
sbb
cmp
dec
shl
nop
pushf
mov
dec
neg
xor
pop
adc
add
and
fiadd
pop
xlat
xor
xor
push
push
scas
mov
adc
pop
or
and
bts
cld
or
pop
outs
xlat
inc
sbb
daa
and
dec
fsubr
add
popa
call
cmps
pop
cli
dec
jne
jno
mov
jp
mov
jmp
or
sub
push
and
addr16
dec
jne
push
lea
push
inc
call
js
ss
add
mov
dec
jmp
std
std
aaa
cld
push
add
push
rol
push
call
mov
mov
mov
jno
in
inc
xor
dec
inc
add
shr
je
mov
push
out
(bad)
dec
ret
pop
add
sar
ret
cld
je
sbb
out
call
mov
push
jmp
push
mov
or
into
(bad)
inc
sub
jg
or
mov
(bad)
into
inc
mov
mov
pop
shl
mov
or
lock
sbb
adc
adc
fstp
call
push
mov
adc
pop
adc
adc
dec
sub
sbb
(bad)
aas
rcl
cmp
jmp
cmp
jne
lea
call
(bad)
dec
ret
inc
mov
repz
push
pop
lea
mov
or
movs
mov
push
mov
mov
call
clc
or
call
cmp
jne
lahf
inc
dec
mov
mov
cmp
ja
add
test
cmp
ja
pusha
je
sub
je
dec
je
sub
pusha
mov
scas
add
adc
cmp
adc
push
ror
mov
pop
xor
inc
mov
daa
inc
xor
das
or
xor
sti
sti
sar
push
mov
call
test
fld
fmul
fadd
fstp
fld
or
(bad)
inc
add
paddusb
fstp
fld
fmul
fstp
fld
out
push
(bad)
aam
dec
adc
inc
sbb
fstp
fld
fmul
mov
inc
sub
pop
sub
inc
fsub
jmp
cdq
jge
fisub
mov
sub
je
dec
je
dec
je
fist
das
test
div
shl
jmp
jae
mov
and
xor
or
jmp
outs
sub
cmp
ja
dec
out
adc
mov
sbb
dec
out
jae
cmp
push
adc
or
out
nop
outs
popf
lock
inc
or
and
stos
mov
or
jecxz
sbb
mov
push
dec
lahf
push
clc
lahf
mov
jmp
call
cs
fs
sub
in
or
loopne
push
or
dec
inc
sbb
fldz
push
push
(bad)
push
or
mov
fldz
mov
fstp
mov
fild
sar
and
addr16
push
and
lods
sysenter
jp
mov
cmps
fld
add
pusha
or
ins
mov
mov
fadd
jecxz
call
or
fmul
adc
add
shl
leave
ret
push
add
xor
(bad)
push
dec
add
(bad)
idiv
dec
jne
fistp
clc
inc
xor
push
je
push
jmp
push
call
cmp
add
add
(bad)
xlat
fisttp
call
rcl
mov
(bad)
push
or
mov
mov
mov
mov
mov
in
dec
outs
inc
add
mov
pop
jo
scas
ins
addr16
jae
call
jns
push
cmp
jne
mov
mov
push
push
call
shl
or
ss
(bad)
jg
call
mov
mov
mov
push
add
icebp
ja
push
lea
call
fdivr
ffreep
cmps
dec
add
push
mov
push
mov
push
ja
call
hlt
call
pop
cs
retf
push
call
mov
mov
mov
push
sar
js
arpl
and
inc
stos
sbb
sbb
sbb
call
sbb
call
std
dec
push
jne
mov
call
jmp
pop
dec
sbb
adc
lea
outs
push
add
mov
je
or
push
inc
js
mov
call
imul
inc
mov
dec
and
(bad)
js
add
dec
sbb
call
retf
jg
sub
nop
dec
jbe
call
pop
jmp
mov
inc
or
cs
jnp
daa
xor
icebp
call
mov
sub
fild
mov
push
push
push
cmp
jg
ja
add
mov
push
cmp
jl
cmp
std
rol
cmp
jmp
cmp
aaa
inc
popa
icebp
mov
clc
push
add
inc
mov
call
(bad)
cmp
inc
hlt
je
jne
xor
into
call
mov
into
call
mov
push
push
push
push
push
push
aam
ffree
(bad)
call
push
call
and
pusha
sub
mov
pop
push
push
call
leave
or
add
push
lock
xor
ins
imul
push
pop
test
push
dec
inc
je
cmp
jne
or
jl
enter
sub
ret
sub
outs
and
je
push
mov
add
test
pop
pop
je
mov
push
dec
jnp
dec
cld
push
pop
cmp
push
mov
mov
cmp
jle
sbb
shl
sub
xor
mov
in
mov
ja
call
inc
pop
sbb
jle
xchg
stos
call
neg
inc
or
mov
call
or
adc
outs
adc
fsubr
xor
sbb
xchg
pop
jne
and
dec
push
push
mov
push
bound
std
aaa
in
shl
or
rcl
jmp
dec
cld
call
sub
pushf
std
cld
push
push
pop
mov
clc
sbb
or
aaa
cmp
push
call
mov
sub
test
dec
cld
out
push
mov
sbb
gs
out
test
add
or
xor
inc
not
sbb
not
mov
inc
add
call
adc
(bad)
or
loope
clc
jbe
call
cmp
push
xor
lea
sub
mov
mov
adc
sbb
lods
clc
or
test
call
ret
sti
ds
aam
je
inc
call
sbb
in
clc
mov
xchg
in
fadd
pop
pop
sbb
add
xor
lahf
add
dec
jne
or
mov
adc
jbe
hlt
sbb
dec
xor
mov
jl
and
mov
gs
add
dec
xor
cmp
xor
call
cmp
mov
retf
mov
ds
(bad)
ja
(bad)
mov
jne
mov
jmp
mov
ret
adc
sbb
jg
xor
cmp
je
push
pop
push
mov
ficom
mov
push
(bad)
push
add
out
inc
outs
dec
mov
call
xor
push
push
adc
mov
push
mov
call
fwait
push
pop
add
inc
hlt
pop
xor
dec
adc
ins
dec
add
ficom
jo
in
ja
add
test
and
mov
lea
call
dec
jge
(bad)
adc
ja
call
(bad)
ffreep
dec
ror
mov
call
sbb
fsubr
xor
call
pop
jb
push
call
jb
push
pop
lea
call
std
or
aas
mov
and
nop
mov
call
xlat
fistp
push
mov
push
scas
call
call
cmp
mov
test
data16
inc
cld
mov
clc
jne
(bad)
icebp
lahf
pop
fild
ja
push
add
push
call
cmp
inc
mov
push
call
mov
sbb
inc
mov
push
add
add
aas
aad
sbb
mov
retf
push
enter
jmp
aam
push
clc
cs
add
mov
int3
jge
outs
push
sub
sbb
jl
punpcklbw
sbb
mov
add
outs
jb
jb
adc
jae
mov
jle
xchg
std
pop
inc
bound
in
mov
inc
cld
cmp
cmp
sbb
stc
test
push
cmp
cs
cld
call
add
mov
inc
xchg
add
nop
call
sar
lea
dec
or
dec
and
repnz
or
mov
jg
jo
jne
je
add
aam
pop
add
jge
out
adc
out
xor
(bad)
(bad)
jmp
loope
mov
or
outs
fcom
mov
jne
mov
dec
dec
mov
je
clc
or
xchg
fdivr
sbb
xor
inc
jnp
mov
test
jmp
xor
and
fs
call
dec
fbld
test
je
jne
call
push
or
or
mov
popa
rol
aaa
std
out
(bad)
jmp
loopne
mov
jmp
call
mov
not
and
in
push
cmc
ret
jmp
dec
cmp
mov
loopne
add
or
mov
test
jne
jmp
xor
inc
jmp
mov
mov
jmp
inc
mov
hlt
push
add
shl
pop
sub
mov
dec
mov
call
jmp
sbb
jle
pushf
jmp
lea
push
pop
icebp
xchg
call
or
call
cmp
mov
jl
test
inc
ret
sbb
or
xor
mov
jne
ins
push
jne
in
jo
mov
sub
test
fwait
enter
xchg
imul
inc
inc
mov
cmp
cmp
add
mov
mov
lea
aaa
and
inc
or
ss
mov
mov
mov
call
je
xor
call
iret
call
daa
cld
push
shl
les
dec
mov
jge
mov
cmp
nop
daa
add
mov
xor
popf
mov
jmp
push
pop
je
pop
and
dec
cwde
fld
mov
jbe
in
call
push
test
jmp
or
mov
test
out
or
je
fsub
mov
xchg
push
ss
hlt
hlt
jne
push
push
ins
clc
inc
hlt
push
push
pop
xor
inc
fwait
clc
cmps
fimul
or
jl
arpl
mov
or
dec
loop
dec
and
fwait
jmp
add
lock
aas
cld
jl
mov
add
inc
lock
loopne
add
je
mov
pop
ins
cmc
(bad)
dec
fucomi
push
xor
cwde
js
iret
pusha
sbb
jmp
sub
push
call
aad
imul
mov
push
jg
movzx
push
push
push
and
add
shl
pop
call
int3
je
ret
mov
pop
or
test
mov
jg
jne
sub
sbb
ds
xor
clc
jne
and
lock
and
cmp
fdiv
cmp
icebp
jne
fsub
sbb
jne
adc
push
cmp
(bad)
call
cld
or
sub
sbb
pushf
call
adc
mov
clc
add
out
fstp
mov
or
clc
and
std
xor
add
(bad)
mov
cld
je
mov
jmp
dec
and
sbb
push
xor
aaa
daa
lock
push
or
call
or
inc
fadd
jmp
out
push
outs
fdiv
jmp
hlt
mov
add
pop
dec
inc
stos
mov
mov
call
icebp
mov
in
add
mov
(bad)
jno
loop
or
fist
and
jle
jle
clc
pusha
loop
pop
js
adc
jns
or
iret
call
repz
in
loope
xor
jns
in
mov
sbb
or
call
cld
jl
pop
mov
xor
pop
jmp
repz
xor
xchg
jmp
out
pcmpeqw
mov
pop
add
push
cmp
xlat
lahf
inc
mov
push
inc
cs
dec
dec
add
daa
inc
xor
push
push
cmps
ret
out
cmps
xchg
push
test
jb
cmps
je
mov
cmp
xchg
inc
jg
pop
cld
mov
and
cmp
ja
clc
jg
clc
mov
fild
push
push
mov
pop
call
adc
enter
cmp
sbb
or
dec
cmp
pop
mov
jle
out
clc
(bad)
sti
clc
push
call
je
mov
push
call
pop
ins
fcom
call
ficom
xchg
aam
(bad)
(bad)
repnz
sbb
push
je
iret
shl
aas
pop
add
jne
retf
lods
xor
(bad)
fcmovne
outs
xchg
inc
jno
lods
add
pop
cmp
and
and
in
mov
fld
jl
call
dec
in
push
call
pop
push
(bad)
(bad)
fiadd
sti
cmp
test
or
jne
push
push
push
call
mov
jmp
or
call
jg
(bad)
jmp
add
cmp
jne
mov
add
mov
cmp
jl
test
sub
jns
mov
sub
push
cdq
pop
idiv
push
mov
sub
push
push
and
mov
lds
les
pop
(bad)
(bad)
(bad)
sti
jnp
call
jmp
cmp
jne
push
call
mov
xchg
cmp
daa
aad
inc
fld1
daa
psubb
(bad)
fild
push
inc
sbb
jmp
call
adc
push
call
cmp
(bad)
idiv
test
push
mov
ror
or
add
inc
out
lods
push
sbb
jne
lea
push
push
call
mov
adc
call
and
lods
test
jmp
pop
jmp
rol
call
fld
xlat
pop
pop
push
push
sub
fstp
ret
data16
pop
and
pop
and
sbb
push
ja
cld
shl
add
add
add
inc
sar
sbb
fs
mov
call
add
je
add
jge
sbb
and
inc
inc
and
lds
xor
pop
lods
add
(bad)
(bad)
push
xor
cmp
sete
push
lea
push
push
mov
mov
call
jmp
sbb
cmp
stos
cmp
mov
fild
fmul
jl
add
inc
jle
shl
ins
ror
push
cs
add
push
call
mulps
dec
or
je
pop
das
and
neg
push
ror
ja
fild
fstp
call
out
fsubr
and
push
fldenv
jl
inc
cmp
fstp
push
call
cld
(bad)
ffreep
mov
add
inc
inc
sub
mov
jle
sqrtps
call
test
adc
pop
cmp
lock
jg
adc
jge
sahf
add
(bad)
mov
mov
mov
mov
call
or
jl
push
fnstsw
(bad)
push
mov
mov
call
xchg
stos
inc
enter
mov
call
mov
fsubr
xlat
inc
addr16
(bad)
fdivrp
or
inc
inc
add
sub
and
repz
aam
test
mov
call
and
jbe
jl
sbb
aam
add
mov
mov
xchg
call
add
mov
inc
out
sti
ja
mov
add
jne
call
push
or
pop
outs
ds
call
sbb
jne
mov
jmp
xor
loope
fmul
in
call
ins
movhlps
dec
mov
call
cmps
dec
add
add
jl
mov
add
jmp
or
jmp
push
jl
lea
popf
fild
add
push
call
outs
cmp
adc
lds
jmp
(bad)
cmp
rcr
jne
mov
neg
icebp
scas
lahf
std
sbb
inc
call
mov
lea
shl
sub
jg
mov
lea
mov
call
mov
call
and
jnp
rol
sbb
call
clc
pop
mov
jge
call
clc
xchg
scas
mov
jmp
pop
ror
pop
idiv
and
ins
mov
call
add
sbb
jo
(bad)
es
or
je
mov
pop
loopne
(bad)
jg
pop
push
pop
jle
cmp
jle
mov
jmp
push
pop
cmp
jle
mov
or
mov
jmp
int3
cmp
or
mov
aaa
or
and
icebp
or
inc
jl
inc
dec
mov
jbe
clc
inc
jl
push
jle
call
jl
mov
cmp
fwait
ins
dec
add
test
aas
sbb
aas
repz
mov
cmp
dec
dec
ds
dec
sbb
cmp
jmp
or
push
sbb
(bad)
out
test
push
adc
mov
push
in
pop
mov
retf
sahf
ror
loopne
jne
adc
jns
inc
inc
fild
mov
rcl
jne
repz
push
sub
test
iret
jb
inc
cmp
jl
dec
push
(bad)
test
rcl
std
xchg
les
test
jne
(bad)
jge
push
xchg
add
ret
pextrw
ret
test
pop
mov
mov
lea
push
mov
mov
mov
mov
call
push
push
fdiv
fadd
out
rol
mov
not
adc
cmp
or
mov
mov
iret
call
outs
lods
fs
push
call
cld
push
(bad)
(bad)
fstp
sub
call
imul
test
or
mov
and
(bad)
or
ret
and
push
mov
push
into
sahf
cmp
inc
cmp
inc
out
in
and
fisttp
fwait
and
mov
cmp
fsubr
jb
aas
mov
xor
or
push
sub
inc
cmp
jmp
fmul
push
xchg
sbb
xor
lahf
call
and
test
or
sub
clc
mov
cmp
cmp
je
call
sub
adc
test
jo
call
xchg
in
sbb
pcmpeqd
pop
pop
out
push
cmp
loopne
(bad)
and
arpl
(bad)
dec
cmp
inc
mov
xchg
clc
addr16
mov
fadd
(bad)
call
std
push
and
inc
and
adc
sub
jmp
into
and
call
push
call
jmp
push
rcr
pushf
test
je
cmp
inc
je
call
pop
sti
frstor
jl
jno
(bad)
jmp
mov
or
pop
sbb
mov
out
adc
call
dec
into
inc
mov
push
cmp
push
movs
cmp
pop
xor
daa
inc
adc
add
cmp
inc
test
adc
fiadd
mov
or
pop
adc
adc
dec
cdq
sbb
adc
xchg
pushf
cmp
jg
test
les
call
inc
int3
popf
or
pop
sbb
sbb
jns
cmp
and
ror
fmul
mov
xor
sbb
ja
in
repz
outs
sub
or
das
loopne
push
and
dec
loop
dec
cld
add
sbb
pop
add
or
rcl
inc
cmp
pop
mov
sub
push
pop
mov
arpl
push
cmc
and
cs
rep
mov
gs
fsubr
dec
in
lods
xchg
add
push
call
xchg
jns
jl
call
stos
dec
dec
mov
fstp
and
dec
test
push
push
push
fstp
pop
jno
pop
cmp
add
or
push
sbb
pop
pop
cmp
sbb
std
into
mov
fstp
push
call
(bad)
lods
pushf
pop
fnstcw
int3
lea
or
cdq
addr16
and
xlat
add
add
mov
or
xor
sti
dec
scas
sub
push
fstp
(bad)
xor
jo
call
mov
add
jl
mov
outs
ret
sub
inc
xor
scas
xor
and
test
pop
xchg
ficom
call
(bad)
jl
push
call
call
loope
cmps
xchg
faddp
xor
fld1
inc
xor
jg
ja
pop
xor
jge
mov
xchg
and
and
adc
lock
lds
shl
cmps
jbe
in
call
mov
add
jne
add
or
push
sub
fs
mov
call
mov
and
dec
add
push
add
jl
lods
jle
add
push
cmc
fbstp
add
mov
cmps
mov
mov
aaa
push
inc
jo
fbstp
aaa
retf
adc
inc
retf
daa
lea
call
pop
mov
retf
sti
lss
or
jmp
push
mov
lea
call
and
xor
ss
and
nop
out
jae
call
and
dec
out
sub
adc
out
dec
in
add
push
call
push
loopne
push
cmp
test
addr16
jg
aas
movs
or
dec
jl
add
sub
mov
dec
aam
sub
aam
cmp
sahf
shr
adc
adc
or
jg
push
jle
ss
push
into
ror
arpl
pop
mov
inc
push
sti
adc
xor
sub
inc
call
inc
dec
loop
pop
push
call
push
push
push
scas
mov
xchg
inc
call
xchg
loopne
and
jne
pop
daa
and
push
iret
idiv
test
or
ds
xchg
cmp
lds
mov
out
sahf
jg
pop
cld
add
mov
mov
add
jl
add
xchg
clc
and
sbb
sub
or
push
mov
push
mov
pop
add
mov
call
or
mov
add
jge
jle
std
into
call
cld
add
mov
call
lea
cld
dec
inc
jae
mov
call
sar
cld
mov
call
jne
lea
call
fs
push
dec
int3
mov
xor
(bad)
ds
in
add
je
(bad)
inc
xchg
push
mov
add
mov
lea
push
mov
rep
call
add
inc
mov
ffreep
(bad)
imul
add
xor
call
fdiv
(bad)
cmp
je
lea
push
call
or
dec
in
jl
push
aam
mov
mov
push
icebp
push
pop
jbe
call
mov
inc
aas
fmul
adc
call
cmc
out
out
fisubr
in
call
or
mov
jne
imul
pop
movs
push
lea
(bad)
pop
jnp
add
cmp
push
pop
movs
lock
je
fild
push
push
mov
outs
fiadd
test
push
mov
test
test
pop
enter
mov
mov
mov
cmp
pop
pop
pop
je
push
call
test
js
call
fbld
clc
mov
push
xor
cmp
mov
test
adc
jns
sbb
and
mov
stc
cmp
mov
ja
loopne
mov
or
clc
sbb
xchg
or
and
fcom
fistp
push
push
push
call
or
lds
push
call
enter
jmp
scas
mov
jns
inc
aam
push
call
call
push
or
push
call
pop
jmp
inc
push
jmp
cmp
je
sub
out
mov
(bad)
(bad)
mov
cmp
je
cmp
je
cmp
jne
fstp
fild
jg
jmp
mov
cmp
je
mov
dec
add
shl
cmc
pop
cld
fild
jge
adc
loop
in
mov
push
xor
jmp
xchg
sbb
arpl
lahf
or
jmp
mov
test
jne
addr16
out
jo
jge
fwait
or
sub
dec
ror
jmp
jge
add
les
mov
mov
std
out
jae
adc
inc
jmp
or
je
inc
jb
mov
mov
pop
inc
jl
jb
or
pop
ret
push
jg
ds
adc
mov
cli
scas
sti
outs
cmp
sbb
jne
jo
dec
cmp
jne
(bad)
jg
mov
rol
add
xor
jmp
int3
jge
and
pop
pop
or
outs
clc
xor
arpl
jl
frstor
cli
jo
mov
jnp
gs
add
add
adc
jo
sbb
dec
push
fsubr
sbb
repnz
and
jne
mov
xor
int
jmp
mov
or
daa
je
fnsave
jg
or
(bad)
out
jae
mov
push
cmp
je
cmp
dec
jl
add
lea
push
push
out
fsub
(bad)
call
jmp
pop
cmps
add
(bad)
dec
pop
mov
mov
mov
shl
mov
jg
jo
add
jae
lea
call
push
push
push
mov
jl
call
outs
sar
add
adc
pop
aam
mov
adc
in
push
adc
sti
jg
aaa
adc
sar
pusha
jnp
setne
push
push
adc
(bad)
out
jo
push
push
call
jmp
jno
ja
jmp
pop
cmp
jle
xchg
jae
mov
jp
cdq
(bad)
dec
xor
into
call
cmp
inc
lock
jo
jmp
mov
mov
(bad)
push
call
mov
sbb
das
jle
jno
inc
sbb
mov
add
fdivrp
(bad)
icebp
je
je
ins
fdiv
aaa
std
xchg
mov
mov
mov
push
call
cld
sbb
popf
ror
call
cmp
and
ror
pop
in
inc
add
add
add
cmp
je
or
sbb
cdq
cs
jae
mov
mov
push
mov
adc
cmp
inc
or
call
mov
mov
cmp
pop
pop
mov
sub
leave
mov
sbb
std
sbb
test
or
or
jmp
mov
cmp
jge
sub
ss
jle
mov
mov
cmp
jne
inc
mov
jns
mov
sar
cmp
je
or
lock
je
mov
mov
cmp
sbb
call
adc
or
inc
sbb
or
xlat
hlt
jmp
call
inc
and
or
mov
inc
fcomp
jbe
bnd
add
(bad)
push
les
jmp
mov
out
xor
cmp
add
mov
aam
pop
cld
cli
xor
test
jo
push
faddp
add
add
rcr
(bad)
push
adc
leave
and
mov
mov
into
call
xor
push
fst
mov
sbb
test
stos
mov
mov
std
popf
push
mov
daa
hlt
push
mov
call
test
cdq
mov
inc
cmp
and
xchg
pop
sar
dec
jg
jno
jg
adc
inc
add
inc
and
or
or
mov
or
dec
in
imul
add
pusha
push
std
sbb
mov
(bad)
adc
arpl
xchg
and
cmp
sbb
dec
push
add
(bad)
mov
test
jae
out
push
std
into
call
sbb
sbb
call
cmps
pop
pop
mov
adc
mov
ja
shr
js
mov
xor
frstor
iret
call
call
and
cdq
jmp
fistp
into
call
sub
mov
int3
jno
ret
cmp
push
cmc
(bad)
loope
pop
mov
je
or
rcr
adc
push
push
call
push
mov
jge
je
je
sti
and
sbb
push
inc
hlt
fisttp
loopne
push
call
clc
lahf
rcr
dec
add
push
sub
fild
cli
cmp
ja
add
push
mov
call
xor
or
or
ss
jge
mov
mov
or
lea
push
inc
mov
add
add
cdq
mov
call
xor
movs
movs
push
movs
call
aad
fadd
pusha
popa
mov
(bad)
jae
call
mov
fstp
push
aas
inc
mov
push
sbb
push
call
mov
mov
scas
pop
push
mov
call
call
outs
pop
mov
dec
push
push
jge
enter
or
inc
mov
rcr
push
add
and
les
call
cld
jmp
add
inc
push
push
add
(bad)
fucom
jle
mov
call
ins
js
fild
xchg
ror
(bad)
call
jo
(bad)
jg
xchg
jns
add
mov
(bad)
jns
(bad)
inc
jne
or
ja
or
xor
mov
mov
rol
into
mov
mov
push
mov
lahf
adc
call
jg
mov
xor
into
call
push
add
inc
or
ins
mov
call
mov
je
mov
or
jmp
xchg
test
or
or
clc
(bad)
cli
cmp
inc
aas
add
rcr
test
inc
(bad)
js
sti
(bad)
jmp
fdivrp
fild
push
sbb
test
mov
je
(bad)
push
fsub
ficom
jne
pop
mov
or
add
mov
mov
inc
cmps
or
mov
addr16
jne
scas
xor
aaa
in
pop
clc
or
test
popf
sbb
lock
add
jne
or
jp
inc
ret
repnz
pop
inc
pop
cmp
je
or
xor
push
jle
xchg
sti
bound
pushf
mov
push
jl
jp
add
add
cmp
push
mov
inc
add
dec
push
ja
call
out
leave
rcl
mov
pop
add
ins
push
call
xor
add
lea
hlt
or
jo
in
call
test
push
mov
mov
mov
add
out
mov
(bad)
xchg
cmp
rcl
cmp
lock
add
sbb
mov
push
call
or
loopne
cli
ja
or
js
sub
mov
sahf
jmp
cmp
iret
push
push
push
stos
or
cmp
xor
addr16
and
mov
mov
pop
cmp
sub
int
push
iret
jbe
or
or
add
push
outs
jo
loopne
add
jmp
mov
data16
adc
push
call
lea
push
aaa
call
and
add
call
and
scas
dec
jo
add
mov
jne
jmp
add
call
add
and
jbe
mov
adc
or
cmp
sub
ja
mov
(bad)
(bad)
call
add
sbb
push
rol
aad
sbb
xchg
adc
fisttp
or
mov
jo
lahf
or
call
cmp
jne
ds
mov
add
push
rcr
sbb
jbe
ss
js
call
dec
jle
jmp
(bad)
pop
mov
jb
out
adc
test
pop
sub
push
loopne
xlat
xor
mov
loope
scas
jmp
sub
xor
pusha
jp
mov
call
xchg
mov
dec
mov
loop
aaa
jo
or
push
cmc
call
jge
(bad)
fld
mov
mov
jnp
or
inc
push
adc
es
adc
inc
push
sti
sub
ins
ja
inc
pop
sub
pop
pop
jmp
xchg
fsubr
sbb
out
dec
add
adc
jmp
mov
sub
add
add
std
(bad)
std
jae
push
dec
and
adc
(bad)
idiv
push
mov
js
or
(bad)
push
xor
fisttp
les
lahf
and
jl
je
and
mov
call
and
mov
push
fwait
cmp
rcl
push
and
xchg
jne
rcl
mov
or
test
or
call
loop
test
sti
gs
sar
pusha
fucomip
adc
push
in
test
je
mov
movzx
pop
movzx
xor
shl
add
inc
add
and
jae
jecxz
sbb
call
cmps
imul
pop
(bad)
je
jle
ret
jmp
or
arpl
hlt
sub
ret
je
dec
jne
add
fnstsw
fld
mov
call
fdivr
in
sbb
je
adc
cmp
pop
call
add
add
add
lsl
and
xor
dec
push
add
leave
lmsw
push
inc
xor
add
add
inc
jmp
out
push
mov
xor
inc
xor
scas
rol
pop
xor
aaa
mov
sahf
inc
inc
bound
test
je
mov
jg
jmp
sbb
mov
push
push
call
adc
clc
call
push
mov
pop
pop
pop
push
sbb
icebp
and
and
lock
push
add
and
popf
or
mov
add
pop
rcr
cmp
inc
aaa
push
mov
ins
std
jbe
aam
add
inc
(bad)
push
hlt
adc
push
mov
or
mov
or
inc
std
add
lahf
imul
ja
add
test
cmp
psubusb
mov
jecxz
cmp
jne
call
loopne
sar
push
inc
xchg
and
test
add
pop
ret
mov
call
push
cmp
mov
hlt
jge
mov
sub
cmp
mov
dec
clc
sbb
jne
lea
pop
push
call
add
cmp
hlt
mov
jl
add
add
lock
add
push
mov
mov
(bad)
out
ins
or
pop
add
clc
push
push
call
or
jge
push
jne
mov
idiv
cmp
jne
cmp
jne
dec
jne
push
call
inc
dec
push
call
mov
call
mov
iret
test
lock
fnstsw
cld
mov
call
call
cli
cs
jg
jg
dec
test
jecxz
jmp
cmp
call
(bad)
fcomip
or
sub
mov
jmp
mov
sub
mov
pop
adc
(bad)
lock
test
mov
(bad)
(bad)
inc
je
cmp
jne
mov
and
cmp
jne
mov
cmp
jmp
or
or
js
inc
sbb
add
or
cld
dec
inc
adc
jge
add
inc
(bad)
arpl
pop
jne
(bad)
(bad)
jmp
push
mov
and
cmp
jne
lds
and
loope
lea
daa
mov
enter
out
loopne
scas
cmp
jne
push
lea
loopne
call
loopne
pop
in
adc
jle
mov
mov
outs
stos
jecxz
sub
mov
sbb
inc
adc
push
push
push
add
push
clc
mov
sub
sbb
cld
add
stc
mov
push
les
add
or
push
fild
push
push
mov
cld
jmp
call
or
call
add
cmp
add
sbb
shl
dec
cmp
adc
(bad)
call
pop
leave
shl
push
ins
and
push
mov
jmp
fcom
and
mov
je
mov
mov
jmp
xor
mov
jg
imul
inc
sbb
inc
adc
scas
add
(bad)
mov
add
xchg
push
mov
fcom
mov
dec
aaa
cld
ja
clc
or
dec
aas
mov
mov
mov
out
jne
jo
(bad)
push
ret
add
test
mov
lock
ret
mov
lahf
stos
cmp
inc
test
sub
outs
sub
ja
dec
test
je
cld
into
call
int
inc
daa
add
shl
cmp
in
jmp
add
dec
test
inc
test
jns
push
mov
push
call
shl
inc
in
adc
inc
sbb
xor
push
pop
dec
and
retf
mov
int3
lea
(bad)
(bad)
dec
xor
mov
push
pop
sub
shr
add
mov
inc
cmp
jl
mov
pop
(bad)
inc
aaa
shr
cmp
mov
jne
mov
imul
push
jne
(bad)
adc
dec
inc
or
das
into
icebp
daa
add
cmp
pop
and
icebp
add
inc
hlt
or
mov
adc
inc
sbb
(bad)
outs
push
push
mov
mov
call
mov
cmp
jne
(bad)
out
inc
test
jne
cmp
jne
or
in
mov
call
mov
(bad)
fcmovu
push
push
mov
call
add
jle
push
push
mov
jne
out
and
out
mov
loopne
jge
pop
mov
mov
push
je
je
or
aaa
add
movzx
inc
dec
(bad)
push
add
sub
cmp
out
jg
aad
(bad)
push
lea
lea
cmp
imul
pop
sar
test
push
inc
loopne
mov
call
or
inc
test
loopne
ret
je
ror
call
push
push
push
mov
call
imul
xlat
adc
test
sti
or
cmps
pop
loopne
jmp
push
inc
and
mov
xlat
mov
xor
daa
pop
mov
(bad)
mov
sub
xor
ja
sub
inc
sbb
mov
cli
sbb
(bad)
push
pop
call
daa
ret
sub
jl
out
push
fstp
push
fldz
(bad)
fild
mov
fstp
pop
jbe
mov
lea
call
stos
xchg
test
mov
je
cmp
jne
xor
je
call
ficom
cmp
pop
test
call
jmp
jg
and
jge
repz
add
jle
jle
jne
mov
cwde
push
mov
or
mov
add
push
call
mov
push
call
push
call
sbb
call
(bad)
js
add
adc
mov
mov
fldcw
and
push
push
cwde
call
aam
push
pop
add
add
loopne
push
loope
gs
add
pop
call
test
and
(bad)
jae
mov
call
sbb
mov
ret
cmp
or
outs
or
call
xor
aaa
icebp
cmp
jbe
call
fmul
sbb
out
clc
fwait
in
cld
add
test
std
mov
call
dec
xor
dec
or
push
sbb
cli
pop
mov
dec
int3
mov
mov
mov
ja
or
inc
adc
test
push
test
mov
and
mov
push
test
xchg
jmp
push
neg
xchg
cmp
or
daa
retf
fidiv
sub
test
pop
adc
adc
dec
or
xchg
pop
(bad)
mov
adc
push
add
jmp
and
mov
mov
mov
sbb
mov
lods
mov
sub
push
jmp
lock
stos
out
jmp
jle
cld
or
add
pop
(bad)
mov
in
mov
xor
xlat
dec
hlt
fadd
jge
call
or
mov
inc
popf
enter
add
sti
add
fimul
inc
int3
mov
or
adc
or
addr16
(bad)
(bad)
sti
and
add
push
pop
mov
mov
jle
sub
ja
ror
jmp
ins
add
jmp
out
or
fild
jmp
lea
push
cmps
ja
mov
iret
call
(bad)
aaa
push
stos
(bad)
fild
push
push
mov
cmp
mov
jb
inc
sbb
inc
hlt
inc
jecxz
mov
clc
lock
sbb
inc
pop
add
cld
or
add
test
push
mov
mov
jp
jmp
je
jns
ds
std
push
add
mov
ins
sbb
ss
adc
sbb
jmp
jl
push
fmul
ins
iret
dec
jne
mov
jmp
mov
push
call
cmp
je
movzx
rcr
ret
mov
or
mov
mov
je
inc
jp
push
push
test
jne
push
push
push
push
ror
call
ret
pop
mov
push
push
call
adc
jne
clc
push
push
push
into
push
pop
hlt
jmp
call
xchg
add
dec
(bad)
iret
jne
jno
pop
into
add
je
sti
int
sub
jne
xchg
jmp
sti
pop
hlt
je
or
into
or
mov
js
and
mov
ror
mov
mov
push
jmp
test
jmp
xor
stc
add
and
or
fs
jle
or
xor
mov
jmp
jnp
or
pop
adc
jge
or
fisttp
retf
call
push
lea
push
lea
push
call
add
mov
add
pop
std
loope
sub
mov
retf
call
movs
xor
sbb
fs
and
nop
add
js
js
pushf
cld
cmp
add
inc
pop
dec
sar
mov
add
rol
or
jg
add
push
xor
mov
jmp
push
out
enter
adc
fiadd
cmp
fstp
push
call
push
push
push
add
js
push
movzx
push
push
call
inc
or
xchg
cmp
je
push
push
xchg
adc
mov
jae
add
pop
pop
sbb
(bad)
fdivr
ja
call
mov
inc
jno
inc
fadd
je
or
psrlq
mov
mov
(bad)
mov
scas
mov
add
call
ja
adc
dec
add
or
push
or
(bad)
(bad)
cmp
sbb
cmp
jle
mov
mov
adc
out
pop
cmp
bound
leave
add
cld
push
push
push
jecxz
adc
or
push
push
add
sub
or
push
nop
out
mov
push
push
jl
adc
jmp
push
push
in
(bad)
ss
push
push
and
aas
ret
push
push
push
imul
mov
push
xchg
adc
ja
mov
push
shl
test
ffree
jne
sbb
dec
hlt
lahf
push
outs
mov
add
stos
pop
add
push
xchg
retf
push
call
cmps
xor
inc
imul
(bad)
inc
mov
out
cmp
adc
(bad)
dec
out
sub
aaa
(bad)
ja
xor
mov
push
or
not
xchg
mov
nop
adc
dec
push
movs
(bad)
inc
inc
movnti
or
mov
push
call
inc
cld
mov
call
pop
hlt
mov
mov
call
clc
repz
jmp
and
xor
xchg
add
dec
je
retf
jmp
xor
add
test
xor
aam
out
mov
test
mov
add
jbe
mov
adc
(bad)
push
retf
cmp
jne
out
add
aad
jmp
sub
pop
add
mov
adc
add
add
add
mov
add
and
and
stos
pop
cli
dec
sbb
or
cmp
je
mov
push
call
ss
mov
jg
fsubp
(bad)
push
call
push
mov
call
adc
add
push
add
lea
mov
mov
rol
call
aad
add
pop
call
mov
ret
into
mov
pop
test
push
push
invd
call
add
clc
adc
call
clc
mov
adc
push
push
jb
stc
jmp
lock
add
push
cmp
lock
push
dec
hlt
int3
or
sub
sbb
cmp
jne
call
adc
push
push
push
mov
mov
fs
add
js
dec
add
test
ss
dec
mov
pop
call
lock
inc
call
add
mov
mov
ja
call
out
mov
mov
and
test
sahf
and
pusha
add
test
fmul
ret
call
call
fld
fld
or
mov
add
and
call
sbb
or
(bad)
adc
xor
jnp
test
push
jmp
or
std
in
and
test
push
fld
lea
std
fild
jmp
retf
ret
mov
sahf
jne
imul
inc
sub
ins
(bad)
(bad)
ds
jmp
jne
mov
mov
push
sar
test
idiv
and
mov
shl
mov
jbe
add
sti
scas
sbb
add
push
stos
int
ja
sub
add
inc
jp
fisttp
test
pop
cld
leave
jge
shr
jbe
pusha
pop
dec
jge
sub
shl
mov
or
or
sbb
or
xor
push
cs
xchg
(bad)
fmul
call
dec
jns
fucomip
or
lock
lea
mov
neg
lea
out
mov
add
rcl
fild
fmul
fmul
loope
fmul
call
xlat
push
call
jg
les
mov
or
ins
mov
cld
repz
inc
call
lock
rol
push
mov
or
push
call
push
lea
push
push
jmp
scas
inc
pop
sbb
pop
add
add
fcomi
iret
xchg
jl
ja
mov
push
push
hlt
call
sbb
add
rol
pop
cmp
mov
push
lea
xor
mov
test
shl
push
rol
cmps
xorps
cmp
test
add
test
rcl
push
call
scas
fidiv
(bad)
in
call
mov
push
mov
ja
jg
in
mov
call
push
call
pop
xchg
hlt
add
sub
dec
sub
shr
stc
push
xor
or
xchg
and
inc
sub
test
add
mov
mov
(bad)
fist
jo
mov
rep
movsx
movsx
pmullw
(bad)
mov
jne
mov
adc
aas
mov
popf
inc
lock
mov
mov
add
cli
dec
sbb
jmp
mov
(bad)
mov
je
test
push
xchg
dec
jne
js
arpl
push
popf
into
call
mov
jae
je
aam
ret
inc
xor
fild
mov
fmul
enter
or
popa
call
out
xchg
push
add
fsub
jg
(bad)
(bad)
push
mov
mov
call
inc
mov
push
mov
cld
loope
mov
jge
sub
shl
or
add
and
je
test
push
push
and
cmp
jle
ror
ja
ins
data16
fiadd
je
jo
sti
mov
pushf
xchg
sub
xor
sbb
push
call
mov
call
xor
aaa
inc
movs
mov
or
je
push
mov
mov
call
pop
fcom
add
pop
dec
shl
psrld
lock
(bad)
fisttp
xor
enter
cmp
jle
mov
call
pop
pop
inc
(bad)
jmp
add
dec
into
movzx
and
mov
xor
ror
pop
sar
(bad)
sbb
push
sub
jne
lea
mov
push
call
call
adc
dec
push
add
mov
in
push
push
mov
lea
jl
jg
call
xor
cmp
je
sbb
mov
jne
cmp
je
mov
xor
add
push
adc
neg
adc
push
jecxz
adc
es
jne
cmp
or
jae
emms
mov
and
xchg
je
(bad)
dec
jge
je
sub
je
dec
dec
jne
loopne
or
mov
inc
jne
mov
inc
adc
aaa
and
out
jle
sub
sub
sub
pop
mov
fild
jmp
sbb
shl
adc
(bad)
dec
pop
pop
mov
pop
pop
jmp
cmp
jecxz
mov
movs
or
repz
sbb
xlat
iret
ror
retf
adc
mov
jo
lea
mov
sub
add
aad
fdivr
mov
dec
or
mov
mov
cmps
loopne
push
mov
push
call
mov
cmps
or
call
sub
sti
push
ja
call
jmp
and
mov
lds
xchg
mov
or
scas
xor
mov
or
loopne
push
fld
and
pusha
push
pop
rol
and
je
push
and
sahf
xor
sub
test
cmps
sub
mov
retf
or
(bad)
(bad)
call
cmp
jle
push
pop
mov
sbb
shl
or
jmp
mov
adc
std
out
cli
or
shr
and
movzx
(bad)
jmp
dec
(bad)
(bad)
call
arpl
mov
psubsb
(bad)
dec
mov
jne
or
xor
push
push
push
call
dec
or
mov
mov
ds
or
(bad)
out
cmp
or
dec
and
adc
push
sbb
or
jmp
or
(bad)
pop
pop
cmp
inc
popa
(bad)
out
ins
test
mov
mov
shl
daa
cmp
std
sbb
pop
scas
arpl
(bad)
jne
out
mov
idiv
jbe
arpl
sbb
sbb
mov
cli
fstp
mov
add
push
call
pop
je
push
(bad)
call
mov
mov
mov
mov
mov
nop
ror
cmp
in
mov
test
push
cmp
mov
sub
inc
adc
jl
out
sti
add
retf
add
or
xlat
pushf
xor
fwait
or
mov
test
mov
xchg
idiv
je
cmps
mov
je
cmps
out
popf
(bad)
dec
dec
je
add
dec
and
add
add
not
test
sbb
retf
(bad)
fdiv
adc
sub
in
adc
xor
enter
mov
xor
adc
xor
sub
fs
xor
je
mov
sub
dec
rcl
push
dec
push
pop
sbb
je
mov
cmp
xchg
call
sub
jmp
loop
cwde
mov
test
call
dec
mov
call
push
fldz
jmp
sub
je
pop
add
or
call
ja
jg
pop
pop
jmp
adc
mov
jne
add
sbb
or
ror
fmul
cmp
inc
push
call
or
sar
or
(bad)
jmp
jle
xchg
(bad)
inc
sbb
lea
call
mov
mov
push
push
call
push
push
ins
cwde
sbb
test
mov
(bad)
jp
sbb
mov
dec
mov
sub
jp
add
sbb
mov
jnp
popf
inc
jle
push
xor
retf
retf
sbb
call
push
(bad)
jnp
add
jbe
add
add
shl
mov
in
call
or
push
fsubr
sbb
push
mov
call
xor
xchg
push
cmp
ret
out
jmp
(bad)
mov
sti
dec
in
call
pop
add
and
fsubr
pop
cmovno
aam
dec
emms
or
push
fwait
iret
call
mov
cmp
add
in
pop
fcom
jb
inc
push
rcr
mov
shr
cmp
mov
push
xor
mov
sbb
pop
fsubr
inc
rcr
pop
enter
iret
or
push
call
clc
mov
je
mov
sbb
montmul
cmps
inc
fmul
pop
call
add
adc
enter
and
call
ret
mov
out
call
jmp
jne
gs
loopne
je
push
les
je
sbb
mov
xchg
lods
adc
sbb
sub
icebp
jg
es
or
push
aad
clc
add
dec
pop
outs
(bad)
sahf
pop
loop
add
fimul
add
outs
mov
je
push
mov
mov
push
cmp
adc
or
(bad)
out
xchg
or
dec
aam
add
lock
jl
dec
mov
jge
jne
push
mov
call
pop
dec
sub
shl
ja
loopne
mov
fwait
lea
movs
add
cmp
out
fmul
push
push
call
adc
and
fdiv
and
inc
push
lea
push
push
dec
sbb
mov
mov
clc
push
add
mov
pop
add
je
(bad)
adc
add
inc
fdivr
mov
push
xchg
popf
sub
data16
jne
(bad)
push
push
call
xchg
mov
or
(bad)
call
inc
fmul
not
and
mov
mov
sub
shr
and
cdq
mov
dec
push
std
jmp
pop
idiv
mov
out
scas
outs
cli
or
fild
iret
fmul
mov
mov
jae
sub
sub
push
cdq
cmp
dec
lds
or
push
jmp
add
lea
movs
lea
clc
push
sbb
inc
add
xor
call
aam
add
add
adc
mov
xor
xor
ja
jbe
mov
xor
dec
push
push
rcl
(bad)
std
dec
pop
or
jge
repnz
or
or
sub
or
call
cdq
test
dec
jne
inc
aaa
cld
dec
pop
add
or
jmp
cmp
jne
call
or
pop
jne
push
call
cld
jg
movzx
lea
push
call
neg
js
jle
sbb
push
call
xor
cmp
pop
jmp
(bad)
push
or
cli
rep
mov
test
mov
je
push
leave
push
mov
jmp
mov
adc
push
mov
mov
xor
inc
mov
ds
xor
add
les
call
dec
test
mov
mov
mov
mov
(bad)
leave
push
call
ja
loop
nop
loope
or
ins
inc
add
stos
cdq
sti
sti
test
(bad)
jmp
jne
stos
jp
les
jle
jmp
inc
cld
sbb
push
inc
pop
cli
inc
fs
cmp
adc
call
cmp
jne
cmp
je
sub
mov
jmp
mov
cmps
inc
xchg
mov
out
push
push
out
mov
add
xor
punpckhbw
xrelease
push
push
in
or
imul
and
or
retf
mov
retf
mov
push
les
sbb
add
mov
sbb
jb
and
add
mov
xchg
cwde
loopne
test
je
mov
push
call
push
pop
or
mov
mov
pop
xor
(bad)
cmp
iret
jne
leave
das
mov
pop
mov
call
push
lea
push
call
jmp
call
push
fs
and
call
lea
push
mov
push
push
call
inc
and
push
jne
out
add
bound
mov
(bad)
in
loopne
cmp
in
mov
call
adc
fisub
or
test
jg
pop
xchg
shl
jne
dec
call
pop
pop
sbb
loope
inc
inc
mov
push
mov
jl
mov
popa
inc
mov
loopne
ret
xchg
add
repnz
mov
adc
sub
adc
ror
or
mov
fcomp
pop
imul
pushf
jb
pop
add
push
test
dec
clc
into
jne
sub
retf
cmp
aam
cmp
pop
aam
hlt
call
mov
mov
inc
jle
call
jmp
cli
jno
xchg
sbb
xchg
popa
push
adc
loopne
pop
xor
xchg
loopne
jl
loopne
daa
inc
pop
mov
enter
aaa
and
addr16
push
enter
scas
sub
test
imul
dec
xor
push
pop
jo
push
fld
je
mov
mov
mov
or
arpl
gs
add
scas
call
das
lea
mov
mov
inc
sar
es
and
cmp
mov
jne
mov
daa
mov
test
je
mov
mov
jmp
xchg
sub
inc
test
dec
add
mov
inc
fmul
or
inc
cld
push
push
popa
adc
sbb
fisttp
fstp
push
adc
shl
or
jg
jle
add
mov
adc
mov
mov
je
(bad)
mov
inc
adc
or
add
and
imul
out
clc
mov
call
mov
dec
jmp
call
test
je
mov
push
test
xchg
(bad)
push
hlt
cmps
cmp
mov
lea
call
or
mov
sub
ins
sbb
ja
shr
or
mov
push
call
call
push
popf
xor
loopne
pop
in
jmp
out
call
mov
hlt
push
mov
push
call
mov
inc
dec
in
mov
cs
sahf
scas
jecxz
call
loopne
or
dec
xchg
or
push
mov
call
xchg
adc
(bad)
mov
call
or
lea
aaa
test
mov
call
fild
clc
lea
call
cmp
add
mov
lock
jmp
fbstp
fadd
adc
test
inc
shl
add
fist
inc
push
mov
push
lea
push
pop
and
pop
add
mov
push
mov
(bad)
fistp
call
inc
ins
je
cmp
push
jne
mov
inc
or
mov
clc
frstor
push
inc
dec
add
call
std
scas
arpl
call
(bad)
aam
cmps
cmp
jnp
and
xchg
xadd
push
push
sbb
call
push
mov
xor
jg
shr
jnp
jne
jne
lea
mov
sbb
syscall
inc
out
jl
into
mov
mov
jne
and
inc
mov
inc
call
lods
(bad)
lock
mov
xchg
add
jg
inc
and
push
or
lock
inc
jl
inc
adc
(bad)
scas
and
fdiv
stc
clc
jmp
push
stos
test
(bad)
inc
adc
test
xadd
adc
test
bound
mov
jo
call
std
out
and
mov
jl
pop
inc
cmc
adc
add
inc
jl
into
pop
inc
mov
jns
call
lods
cmp
test
pop
push
inc
ja
ja
enter
push
push
clc
and
add
mov
loope
scas
in
jnp
jg
mov
push
mov
and
call
call
pop
jmp
call
push
call
out
bound
pop
test
jmp
ja
jmp
mov
call
push
push
call
xor
cmp
pop
pop
es
or
cmp
(bad)
mov
cmp
ja
scas
add
std
cmp
ja
lea
push
add
scas
ret
aad
jge
adc
jge
mov
pop
je
icebp
out
sahf
bound
cmp
jne
js
ud2
or
mov
(bad)
rcr
add
inc
ja
leave
adc
arpl
pop
jmp
jmp
sti
sbb
jl
adc
pop
bound
push
vmwrite
sbb
inc
push
pop
iret
pop
aaa
(bad)
pushf
dec
mov
dec
push
imul
sbb
adc
aaa
add
or
loop
loope
mov
stos
and
or
fldl2t
movs
cmp
or
pusha
out
fisttp
sub
out
mov
add
jmp
pusha
fld
sub
xchg
and
es
and
cld
add
mov
gs
pop
or
xor
lea
stos
stos
stos
pop
inc
stos
inc
inc
ins
neg
jge
mov
call
pop
jne
shl
loop
push
jne
mov
clc
mov
icebp
cli
push
clc
cmp
jb
ja
dec
mov
fild
mov
push
mov
add
imul
push
(bad)
(bad)
mov
mov
test
call
pop
fadd
lea
fucomp
outs
mov
pop
rcl
lea
push
lea
add
call
in
mov
pop
sub
sub
mov
mov
mov
outs
clc
sub
sub
and
inc
inc
add
sub
jmp
dec
cmp
xlat
add
push
add
push
lea
push
call
mov
sub
mov
add
sub
or
adc
and
sub
mov
xor
outs
idiv
out
mov
mov
lea
push
lea
add
popa
or
push
push
call
push
or
jmp
ja
xor
jmp
or
jmp
adc
or
push
clc
dec
jg
stos
(bad)
xchg
sldt
xor
add
jae
js
loopne
jp
call
cmp
test
aad
dec
jne
je
sub
iret
je
mov
xchg
(bad)
jle
push
add
add
or
ficom
call
or
sub
cmp
or
je
push
pusha
cmp
je
push
dec
imul
push
pop
adc
mov
mov
mov
mov
or
jo
mov
call
stos
popf
add
push
(bad)
cmp
inc
fistp
cmp
push
push
call
xchg
pop
pop
je
cmp
jg
jne
mov
cmp
jle
push
add
pop
call
xchg
daa
mov
aam
push
push
mov
sub
push
push
mov
xor
daa
cmp
jmp
(bad)
(bad)
fmul
fsub
push
call
ins
call
div
sti
mov
jg
imul
mov
call
loope
jge
add
or
rol
in
and
shr
push
dec
scas
sbb
push
mov
adc
pop
mov
cwde
iret
call
daa
mov
ud0
jl
call
add
cmp
in
test
cmp
gs
jg
mov
jne
pop
test
fdiv
mov
or
xlat
xor
add
(bad)
dec
mov
call
mov
push
fadd
int3
call
call
dec
lock
adc
call
push
add
inc
cld
cmp
pop
jne
adc
jo
js
cmp
or
cmp
fnstsw
adc
inc
dec
mov
adc
sbb
jnp
pop
add
adc
call
mov
inc
add
xchg
rcl
fs
test
dec
inc
push
push
push
lea
lock
call
scas
sbb
enter
sub
pop
(bad)
mov
sahf
(bad)
scas
stos
or
jmp
loop
mov
retf
call
loope
sbb
rcr
adc
int3
les
cdq
dec
add
push
push
cmp
push
push
push
push
call
push
retf
push
push
mov
push
inc
cmp
ror
pop
sub
mov
mov
sbb
fst
xchg
push
adc
dec
pop
fist
popa
cmc
push
js
mov
jo
push
out
adc
lock
mov
call
jg
jp
into
pop
add
aam
push
cmc
inc
test
popf
cld
icebp
pop
dec
lea
rcl
jmp
sbb
inc
les
add
pop
fist
aaa
test
push
call
dec
(bad)
call
pop
cld
add
add
mov
or
aaa
jae
mov
(bad)
(bad)
call
lea
jnp
jmp
std
xor
lahf
pop
sbb
jne
into
or
(bad)
jmp
fild
push
push
sub
ss
cmps
mov
and
call
jg
les
add
dec
mov
cmp
push
repz
or
call
(bad)
mov
inc
hlt
jl
call
mov
lea
mov
xor
ds
adc
gs
add
js
js
xor
ins
les
call
adc
je
mov
mov
add
push
shr
cs
bound
call
scas
loop
lods
jnp
push
in
jmp
jmp
(bad)
aaa
jb
ror
je
mov
adc
fs
outs
mov
adc
cmp
rcl
or
sbb
out
arpl
outs
xor
or
push
jl
fild
push
push
call
mov
jl
call
(bad)
(bad)
jg
add
(bad)
jge
mov
jmp
push
pop
cmp
mov
adc
call
sbb
mov
jecxz
popa
inc
adc
call
jle
fsub
sub
adc
sub
xchg
push
nop
(bad)
xchg
adc
inc
fmul
or
mov
lods
js
cmp
mov
jle
(bad)
out
shl
mov
mov
lea
(bad)
(bad)
std
or
push
call
push
mov
call
lea
ffreep
inc
test
mov
mov
jle
cmp
rcr
out
fstp
add
addr16
sbb
mov
jle
mov
push
(bad)
dec
test
fbld
into
call
mov
into
adc
fistp
adc
jmp
aam
xchg
fcmovnbe
into
and
popf
push
add
xlat
je
fimul
jge
add
mov
pop
std
hlt
jg
jge
mov
mov
sub
pop
inc
ins
mov
mov
cmps
fwait
call
ds
jg
xor
adc
add
dec
jne
jmp
retf
call
test
out
dec
push
into
call
sbb
inc
ins
lahf
sub
xchg
xchg
sub
cmc
popf
ja
adc
xor
into
jnp
(bad)
call
call
fs
sub
cwde
jge
push
(bad)
addr16
ror
clc
jmp
cwde
jo
adc
inc
in
adc
loopne
dec
xor
sbb
add
call
fstp
cmp
inc
dec
loope
inc
xor
cmp
jl
imul
arpl
inc
add
push
mov
jne
fisubr
stos
test
stos
dec
fdivr
jne
push
push
adc
inc
pop
sti
ffreep
scas
fst
mov
mov
call
cmp
das
or
pop
je
fdivrp
jmp
popa
aas
js
loopne
push
add
sbb
call
mov
mov
leave
clc
push
xor
sbb
inc
mov
add
xor
jno
add
test
dec
fdiv
sar
out
xor
call
out
je
jae
retf
mov
xlat
mov
mov
push
push
call
add
xchg
test
std
aaa
jne
sub
jne
push
push
call
jmp
jae
mov
call
jg
inc
or
shl
ror
pushw
jp
(bad)
dec
dec
lahf
dec
mov
and
mov
mov
or
lock
loopne
push
cwde
aam
xor
or
pop
fsub
inc
mov
sub
push
call
ja
rol
cmp
mov
jae
mov
rcr
push
shl
add
call
cmps
xor
add
sbb
xchg
jle
cmp
lahf
add
jl
dec
popa
(bad)
dec
pusha
repz
call
mov
and
inc
dec
sti
dec
cmp
aas
loopne
sti
inc
or
jne
lea
clc
cmc
jle
push
push
(bad)
xchg
sub
out
clc
jae
gs
pop
jg
(bad)
push
pop
sbb
mov
pop
mov
cmp
adc
mov
test
test
add
or
(bad)
mov
and
mov
call
xchg
aas
je
imul
mov
add
jle
inc
add
jmp
or
cmp
jae
ret
adc
cmp
call
jmp
xchg
jmp
rcl
or
shr
push
adc
jnp
das
push
arpl
jle
xchg
push
or
out
outs
jmp
cld
jmp
inc
arpl
in
daa
add
sbb
adc
jge
inc
add
add
shr
cmp
js
fsubr
(bad)
ss
sti
xor
rol
jmp
mov
or
in
xchg
popa
outs
mov
(bad)
stos
repz
jmp
inc
mov
mov
jmp
fimul
mov
call
cs
mov
mov
add
inc
ins
jnp
(bad)
(bad)
call
push
xor
lea
and
add
cmp
mov
jle
mov
adc
push
inc
clc
add
lea
cs
ja
mov
or
js
dec
push
add
outs
mov
xor
jge
xchg
mov
mov
gs
clc
dec
pusha
call
inc
mov
mov
add
cmp
jl
icebp
cs
sti
mov
or
add
push
cmp
jl
push
mov
cmp
push
mov
adc
int
int3
jmp
pop
pop
cmp
loopne
push
inc
ds
add
sbb
lock
push
add
fimul
in
call
dec
xchg
arpl
jmp
movlps
sub
data16
jno
sub
rcl
and
sub
and
sub
leave
or
test
push
mov
shr
int
and
mov
std
inc
mov
ins
xor
loope
(bad)
inc
dec
(bad)
jmp
cmp
mov
jg
mov
adc
sahf
or
push
in
mov
(bad)
not
lock
adc
jp
push
scas
push
add
inc
fucomp
push
sbb
pop
jle
add
mov
dec
sbb
inc
inc
xchg
mov
out
mov
and
mov
out
mov
mov
jle
sub
out
jbe
call
cmp
and
or
inc
adc
popf
and
add
in
and
xchg
mov
js
mov
dec
(bad)
loopne
pop
add
cwde
cmp
loope
mov
xchg
mov
adc
out
jne
sbb
aaa
fist
push
sbb
mov
cmp
std
iret
call
push
jmp
into
ja
test
(bad)
in
or
adc
push
into
retf
mov
jge
loope
push
adc
das
push
dec
jl
add
adc
stos
jp
popf
jp
dec
jp
add
or
mov
call
pop
inc
dec
jl
jmp
adc
dec
sub
js
mov
mov
and
sub
in
je
sub
inc
add
call
push
dec
mov
and
xlat
inc
int3
iret
call
test
jmp
mov
rol
sbb
mov
add
mov
pusha
lock
cmp
les
ret
into
sbb
iret
call
and
pop
jmp
sar
xor
mov
nop
push
push
(bad)
sbb
call
xor
push
mov
jb
push
jmp
jecxz
pop
jb
cmp
ja
cwde
mov
and
mov
mov
fs
xor
mov
pop
push
cs
or
test
call
pop
loope
cmc
inc
(bad)
fld1
push
fstp
push
mov
xchg
dec
xor
mov
push
sbb
movs
neg
push
push
jmp
sub
lock
push
je
dec
je
dec
je
dec
je
dec
jne
xor
shl
fcomp
jmp
jmp
sub
inc
call
pop
pop
jg
std
dec
es
add
test
sbb
aas
add
test
add
(bad)
xor
inc
add
lock
enter
push
adc
add
aaa
(bad)
dec
xor
inc
add
pop
dec
add
fstp
dec
add
mov
xor
add
xor
push
jno
add
adc
xor
jmp
lea
mov
call
clc
cmp
dec
stos
mov
push
mov
push
repnz
call
cli
dec
jb
je
fadd
je
(bad)
fstp
je
and
or
or
add
inc
shl
push
(bad)
fistp
stc
and
and
int3
pop
add
fld
jmp
mov
fdivrp
(bad)
(bad)
fstp
jmp
inc
xchg
(bad)
jmp
adc
jb
in
jb
mov
xor
movs
das
add
push
aaa
mov
lods
or
add
clc
cmp
mov
clc
jbe
pop
mov
push
xor
mov
push
push
mov
jp
mov
push
shr
fiadd
xor
scas
cmp
lock
adc
mov
jo
jb
add
inc
or
sub
cmp
fidivr
mov
call
test
cdq
and
mov
add
push
or
test
mov
jbe
jnp
mov
and
xor
xchg
lea
test
fnstcw
cmp
mov
call
jmp
add
pop
or
movzx
cmc
adc
or
out
cmp
ret
fisubr
inc
clc
popa
sbb
add
pop
cld
jbe
lea
movzx
xchg
dec
add
push
fild
(bad)
sub
mov
inc
push
cld
push
hlt
cmp
and
call
push
jmp
test
call
imul
adc
outs
and
pushf
xor
jbe
(bad)
lea
mov
and
add
xlat
ret
push
add
pop
and
jne
mov
dec
stos
cli
pusha
scas
mov
push
clc
iret
sbb
xchg
mov
call
mov
xchg
push
cmc
add
mov
mov
cld
sub
cld
cwde
and
adc
sub
add
pop
push
out
sub
ins
std
add
or
sub
std
xor
cmp
inc
jo
adc
jbe
movzx
sub
ret
and
hlt
call
cmp
jl
rcl
inc
add
call
cmp
mov
and
jg
push
ret
fnstenv
or
mov
pop
dec
mov
call
jl
mov
jmp
sbb
dec
add
push
inc
call
or
jmp
mov
jmp
add
enter
aaa
lock
dec
das
xchg
mov
xor
dec
loopne
(bad)
scas
fld
jmp
sub
cmp
xor
hlt
mov
mov
add
pop
fld
mov
je
stc
das
cmp
push
mov
or
cli
sbb
and
inc
and
and
sbb
call
mov
dec
xchg
and
lods
gs
(bad)
fsub
fwait
add
mov
mov
fucomp
sub
das
jmp
inc
push
and
pop
push
adc
jae
or
xchg
xchg
mov
inc
sub
pop
add
inc
add
bound
out
mov
xor
and
sbb
jne
cmp
pop
xlat
add
nop
enter
mov
or
call
mov
mov
push
mov
lea
or
fidiv
add
dec
pop
in
lea
call
adc
jo
fmul
sahf
adc
fst
xchg
inc
inc
push
cmp
and
xor
mov
int3
jne
and
in
pusha
adc
add
jg
jmp
cmp
je
iret
call
aaa
xchg
nop
adc
cmp
cmp
idiv
iret
push
setne
add
mov
dec
and
add
jmp
inc
aas
sub
push
call
add
xor
mov
cmp
imul
fld
add
jbe
imul
xor
pusha
call
inc
lock
jmp
nop
sbb
mov
ds
(bad)
clc
xor
or
cli
clc
es
frstor
popa
and
fadd
inc
mov
cs
pop
mov
sar
fmul
ja
add
cli
outs
jmp
jo
cmp
jne
sbb
clc
adc
xchg
hlt
retf
cmp
add
pop
add
push
push
xor
arpl
shl
cmp
in
ja
jns
mov
xor
sar
mov
nop
loope
xor
js
ja
lea
push
or
or
call
add
sbb
(bad)
popf
mov
je
push
add
add
pop
sbb
(bad)
xor
or
loope
test
jmp
and
mov
add
loopne
push
call
inc
adc
out
loopne
inc
js
fst
fstp
dec
retf
sbb
dec
and
jo
enter
scas
push
(bad)
out
lods
push
call
fstp
jmp
inc
jno
mov
sbb
and
cmp
faddp
xchg
sub
and
rcr
sub
xchg
popf
stos
loop
jmp
rcr
pop
add
jb
and
xadd
inc
mov
pusha
sub
jae
sub
xor
int3
mov
dec
sub
pop
dec
sub
ret
sbb
jmp
sub
xchg
or
sub
add
pop
int3
ds
jnp
imul
aad
retf
in
dec
neg
sub
pop
pop
ret
retf
xor
add
pop
add
ucomiss
cmps
imul
mov
add
cmps
push
ins
adc
and
rcl
push
test
mov
push
les
and
jmp
je
cmp
jne
mov
cmp
jb
cmp
ja
push
add
retf
mov
into
call
sub
inc
into
mov
and
call
push
sub
call
xor
loopne
dec
pusha
push
add
inc
lock
call
push
dec
mov
push
add
xor
mov
and
push
fs
outs
push
pop
add
aaa
call
pop
add
ret
jne
test
push
call
xchg
sub
sub
pop
add
and
aas
adc
iret
call
leave
popf
lods
jo
add
jne
je
xchg
mov
mov
xor
pop
or
imul
pop
xor
pop
das
cmc
(bad)
xchg
xor
or
push
inc
in
mov
pop
xchg
fcomp
ret
xchg
mov
jle
pop
or
clc
mov
push
xor
or
test
dec
aam
add
fmul
add
out
dec
add
sub
or
mov
pop
adc
call
fdivr
ret
retf
call
jl
inc
mov
push
call
mov
popf
adc
push
inc
pop
inc
scas
fist
mov
add
jmp
and
std
mov
repz
pop
je
out
mov
push
call
mov
call
cmp
cld
aaa
mov
inc
in
push
call
add
loope
pop
adc
inc
adc
xor
sti
mov
jne
pop
adc
sbb
jmp
xchg
or
sbb
pop
sbb
scas
fs
movs
push
in
(bad)
jmp
jmp
and
mov
jmp
dec
jmp
in
pop
sbb
sub
adc
add
sbb
and
add
in
inc
out
sbb
push
in
xor
lea
fucomip
(bad)
jmp
and
mov
and
mov
push
les
mov
lea
mov
ss
push
call
sub
mov
push
mov
push
call
inc
jo
shr
and
jmp
mov
daa
pop
or
dec
sub
sub
cmp
(bad)
inc
or
xor
call
scas
mov
push
into
mov
ja
dec
pmulhuw
jmp
cmps
add
ret
pop
pop
add
pop
pop
cmps
imul
jmp
call
xor
push
push
mov
mov
add
pop
push
push
xchg
sbb
push
pushf
fwait
sbb
add
push
adc
cld
and
jb
jecxz
lock
pop
shl
push
mov
and
jne
sub
or
inc
adc
sbb
sbb
call
fild
adc
in
jae
push
call
sub
and
cmp
jae
enter
jp
xor
push
push
stc
jbe
mov
movs
pop
(bad)
call
jl
leave
or
dec
jl
(bad)
call
ret
or
dec
scas
in
nop
sbb
push
adc
test
or
xchg
sbb
push
(bad)
or
mov
inc
push
adc
in
cmp
and
pop
rcl
pop
jb
jle
push
and
add
in
dec
sbb
xor
push
nop
or
or
mov
push
xor
fsubp
test
adc
arpl
dec
dec
ret
(bad)
pop
dec
lock
jp
in
add
mov
mov
mov
dec
mov
cmp
sbb
xlat
mov
imul
pop
mov
sahf
icebp
(bad)
shl
add
loopne
mov
call
jg
jns
sub
inc
and
call
test
das
out
gs
cli
or
xor
add
stos
push
inc
pushf
sub
sbb
shl
mov
cmp
jne
inc
outs
add
retf
test
loopne
add
fsub
je
or
push
aam
mov
rcr
pusha
mov
add
mov
hlt
inc
cld
(bad)
call
jmp
mov
jl
out
mov
lock
fnstsw
je
push
idiv
inc
add
pop
lea
rep
mov
call
jmp
call
jmp
inc
inc
gs
sub
call
jg
shr
nop
mov
je
lea
push
lea
fdivr
jne
lea
lea
push
push
std
mov
add
sahf
popa
xchg
inc
inc
(bad)
jne
jne
rcl
call
sbb
push
push
call
(bad)
dec
push
and
mov
ds
(bad)
mov
hlt
sub
push
push
push
push
call
cmps
imul
stos
in
arpl
xor
or
imul
and
adc
aas
push
mov
mov
cmp
add
icebp
(bad)
sbb
sub
push
dec
sbb
sar
sub
js
outs
sub
dec
scas
test
sbb
sub
clc
les
dec
add
mov
into
push
call
push
fimul
sbb
int3
retf
push
call
mov
das
pop
clc
add
in
adc
mov
out
in
push
call
out
jbe
jnp
sub
or
add
dec
cld
mov
push
add
jge
and
push
mov
xor
leave
ja
hlt
shl
add
mov
push
push
xchg
call
cld
in
(bad)
call
mov
pop
adc
add
lahf
push
push
popa
push
xor
add
ret
push
mov
mov
(bad)
pop
out
and
cs
push
call
sub
inc
adc
test
mov
pop
sbb
xor
and
mov
add
push
sti
add
mov
test
fidiv
fld
and
jmp
jne
and
push
dec
add
ja
mov
cmp
je
add
sbb
cmp
ja
adc
or
mov
or
or
in
inc
std
push
cmp
je
jle
jp
mov
or
add
aaa
cld
xchg
mov
pop
add
mov
das
add
push
add
jmp
mov
or
sbb
inc
mov
cmc
call
add
shl
sbb
je
mov
add
or
dec
xchg
daa
fst
outs
jmp
pop
dec
jl
push
push
call
mov
push
push
sbb
dec
xor
into
fucomp
stc
call
imul
jge
mov
jge
cmps
stc
scas
loope
ret
fcom
add
pop
mov
rcr
call
inc
aaa
sbb
sub
fild
mov
adc
cld
mov
jle
call
inc
loopne
cmp
and
jecxz
ja
sar
ud0
mov
pop
mov
je
mov
inc
jo
(bad)
pop
push
test
fdivr
jge
push
mov
psllw
(bad)
call
xor
test
sete
mov
test
mov
jne
cmp
jne
mov
movsx
scas
call
or
or
jne
push
sahf
dec
aad
test
cld
aad
mov
xor
adc
push
push
push
push
cmc
mov
inc
je
mov
call
jmp
lea
push
hlt
sbb
fst
mov
sub
push
call
std
sbb
cld
mov
push
(bad)
cmp
push
add
fsubrp
sbb
lods
stos
mov
add
push
sbb
cmps
push
push
add
sar
sbb
jne
mov
mov
inc
inc
jmp
in
call
jg
inc
mov
mov
fnclex
fstcw
fldcw
lahf
daa
or
mov
pop
mov
iret
push
(bad)
(bad)
out
mov
es
push
(bad)
inc
mov
push
mov
lahf
and
and
stos
clc
out
add
push
mov
mov
xchg
retf
retf
push
or
cmp
and
mov
pop
push
cmp
inc
mov
xchg
out
or
call
push
push
mov
call
je
mov
jne
push
mov
mov
mov
and
jle
adc
inc
or
lea
push
mov
adc
jbe
jne
mov
pop
inc
cld
(bad)
jmp
mov
cmp
jne
mov
push
call
push
jp
retf
mov
lea
xor
inc
jmp
rcl
push
add
and
(bad)
aaa
add
push
call
div
es
or
les
xor
inc
pop
inc
dec
or
enter
mov
lea
and
ret
add
cmp
jne
or
sub
inc
ret
xchg
jmp
inc
call
hlt
cmps
push
dec
call
test
dec
adc
adc
jne
push
imul
push
jbe
mov
fcmovnu
inc
xor
xlat
xchg
dec
dec
and
ret
add
xor
or
push
aas
je
or
icebp
push
add
mov
(bad)
call
or
mov
outs
inc
and
mov
lock
sbb
retf
ja
call
adc
push
and
test
je
push
push
push
call
outs
dec
dec
rcr
sbb
jle
cmp
je
xor
push
call
cli
mov
pop
mov
jne
mov
jle
cmp
je
jb
xor
push
call
outs
dec
mov
pop
pusha
(bad)
(bad)
jmp
add
push
call
pop
pop
pop
mov
pop
add
jmp
jb
cli
adc
shr
popf
push
mov
ret
lods
xor
and
mov
jne
jbe
xchg
sti
mov
call
dec
dec
call
ja
mov
jmp
push
call
mov
fdivr
or
cmp
je
inc
push
std
or
leave
cmp
aas
add
dec
xchg
push
sar
sbb
add
(bad)
jg
push
call
xor
cmp
stos
pop
mov
ret
push
xor
mov
cmp
push
je
inc
xor
fldcw
dec
sub
mov
pop
jmp
push
call
in
adc
js
mov
call
fst
sbb
sub
push
or
jge
jne
sbb
ja
pop
sbb
pushf
add
xor
inc
jmp
fst
and
or
jge
mov
mov
(bad)
cmp
shl
jne
push
(bad)
mov
xchg
fidiv
shr
cmp
je
out
sbb
and
pop
jmp
cmp
test
pop
fistp
call
push
sbb
push
xor
out
push
add
ret
push
push
jo
or
push
call
ss
cmp
jle
add
sbb
cmp
xchg
test
mov
cli
lea
push
inc
pop
or
test
je
and
pop
aam
or
adc
sbb
inc
lock
cwde
sub
jmp
push
stos
jle
dec
in
xor
in
lock
loopne
or
inc
xchg
pop
jb
sti
push
or
push
call
pop
js
fild
push
cmp
xchg
jl
add
ins
movs
call
mov
mov
xchg
(bad)
dec
add
cmp
je
cmp
jne
cmp
jge
inc
mov
pop
add
add
shl
loop
lea
and
call
jbe
pushf
mov
lods
mov
inc
lahf
aaa
xchg
cmp
sub
inc
mov
inc
mov
(bad)
out
sahf
fnsave
(bad)
cmp
xor
add
and
test
push
push
pop
jbe
call
mov
pop
movzx
jmp
mov
test
je
mov
sub
(bad)
push
stc
mov
mov
inc
test
jne
mov
push
xor
test
jmp
xchg
cmp
je
cmp
je
jnp
(bad)
(bad)
(bad)
out
inc
mov
shl
cmp
jne
dec
cmp
je
push
push
call
mul
(bad)
pop
fild
rcl
je
sti
ss
or
clc
(bad)
(bad)
(bad)
mov
lea
movs
movs
push
movs
call
mov
lea
push
call
add
cmps
adc
pop
ror
test
sbb
mov
push
call
sbb
nop
sub
inc
push
jg
add
lock
call
out
and
out
and
in
push
mov
dec
mov
sti
cs
push
push
jecxz
add
in
push
call
add
jmp
call
push
(bad)
in
dec
call
jne
and
je
sub
cmp
hlt
outs
idiv
jge
enter
pop
cld
mov
inc
cld
je
call
dec
mov
or
add
ins
push
lods
mov
(bad)
retf
mov
sub
jbe
add
cmc
pop
push
loope
enter
mov
lock
mov
daa
adc
daa
es
in
adc
out
(bad)
dec
nop
daa
mov
push
ja
push
push
and
shr
ret
push
fs
sbb
sub
xchg
retf
sbb
and
into
jne
clc
imul
xchg
mov
pop
call
cmp
ss
cs
movs
mov
jb
call
cs
imul
cld
mov
jl
cmp
inc
call
sahf
or
or
dec
inc
inc
call
lock
mov
loope
adc
jae
sub
pop
enter
adc
arpl
hlt
push
data16
movs
fdivr
sbb
add
xchg
shl
jne
int3
sub
cdq
mov
out
(bad)
dec
mov
add
add
test
mov
icebp
cmps
aas
std
jne
cmp
mov
je
cmp
jmp
or
int3
sbb
mov
popa
call
inc
jg
call
jne
mov
loop
(bad)
bound
and
cmp
add
arpl
aas
sti
test
push
push
and
ret
push
sbb
jg
std
clc
call
add
cmps
inc
enter
push
call
sbb
pop
push
ja
add
mov
ror
call
icebp
call
xor
cmp
mov
push
test
lock
call
and
sub
pop
movs
mov
iret
cmp
jl
cmp
jle
cmp
pop
pop
jle
cmp
push
cmp
cmp
cmp
je
cmp
jne
pop
cmp
push
jle
adc
push
add
push
adc
fbstp
fdivr
push
call
sbb
call
out
mov
inc
call
mov
mov
push
call
jmp
mov
dec
push
push
clc
in
data16
call
cmp
or
adc
mov
idiv
cs
fidivr
pop
je
mov
push
call
mov
outs
mov
in
jle
call
or
call
ins
loop
ja
push
out
add
pop
pop
in
inc
sub
mov
xchg
jmp
or
mov
inc
sub
add
jb
add
push
inc
sahf
dec
movs
adc
push
nop
adc
loopne
pop
cmps
not
cmp
div
mov
push
and
pop
jl
pop
xor
sub
xchg
and
rol
add
enter
xchg
imul
jl
jge
sub
ins
mov
enter
cmc
and
xor
je
jo
leave
test
push
call
loope
pop
pop
cmp
aaa
sbb
pushf
or
push
popf
call
mov
adc
inc
fdivr
(bad)
call
mov
test
jne
mov
add
sbb
in
xchg
call
push
mov
mov
call
call
inc
push
mov
ds
pop
jmp
pop
mov
call
mov
or
(bad)
(bad)
cmp
jl
(bad)
clc
add
mov
push
dec
mov
aaa
int
(bad)
mov
sub
cmps
sbb
mov
jmp
jmp
(bad)
inc
bnd
test
inc
mov
mov
ins
push
jno
outs
in
fisttp
lods
mov
push
(bad)
cwde
sti
add
mov
mov
out
inc
(bad)
pop
xor
test
xchg
push
push
push
inc
mov
and
pusha
push
sbb
jbe
jmp
sbb
mov
xchg
sub
rol
call
or
jl
hlt
(bad)
jmp
jmp
jno
jo
fist
pop
xchg
cs
fild
sti
inc
inc
mov
pop
das
les
sbb
mov
xchg
ja
popa
(bad)
xlat
push
call
push
das
loop
add
xchg
shr
pop
inc
push
mov
aad
call
pop
cld
inc
shr
sub
push
call
bound
(bad)
div
out
xor
das
mov
cwde
ror
sub
sti
mov
loopne
pop
dec
test
pusha
cmp
je
mov
jo
mov
mov
inc
fsubr
rol
cld
or
aaa
cmp
lea
push
call
mov
je
lea
push
fstp
jge
cmc
call
add
push
call
in
call
pop
or
lock
add
xlat
xchg
sub
stos
ret
push
dec
and
je
(bad)
lock
mov
cmps
mov
or
cmps
inc
or
mov
mov
(bad)
jg
pop
(bad)
aaa
inc
and
inc
inc
mov
mov
(bad)
call
pop
hlt
pushf
cmp
jge
cmp
mov
mov
je
cmp
je
sbb
jne
and
and
in
mov
scas
jg
sbb
mov
push
push
call
mov
add
inc
inc
cmp
jne
push
call
and
or
out
dec
mov
cmp
clc
jne
xor
jmp
(bad)
(bad)
jle
mov
jmp
inc
push
push
call
aas
adc
sub
dec
push
push
push
call
std
inc
pop
es
push
call
loop
fsubrp
jne
mov
call
je
retf
jl
sub
ja
sub
je
sub
jmp
mov
call
push
call
xor
pop
pop
ja
or
cmp
inc
neg
sti
push
call
or
inc
add
add
adc
sbb
cmp
(bad)
push
outs
or
ds
and
call
ss
imul
rol
call
jb
pop
je
adc
jne
pop
test
loopne
inc
xor
fisttp
aas
mov
xor
shl
dec
cmp
push
stos
fistp
fild
cmp
or
and
fld
xor
retf
call
sub
push
xchg
mov
adc
fisttp
adc
test
or
test
je
test
jne
mov
inc
mov
jmp
xchg
icebp
test
je
mov
inc
lock
push
call
sub
add
cmp
je
mov
inc
repnz
popa
sbb
sub
call
daa
js
push
sbb
jne
push
add
loope
xchg
mov
or
popa
hlt
(bad)
jmp
je
or
not
push
mov
mov
mov
cmp
jne
mov
sbb
xor
dec
dec
aaa
jle
mov
mov
push
push
push
call
loopne
cmc
jne
push
(bad)
daa
or
add
clc
packsswb
mov
ret
push
mov
add
aas
mov
add
push
ret
fist
add
or
mov
out
push
mov
(bad)
(bad)
(bad)
mov
or
add
xor
or
stc
(bad)
(bad)
jne
push
add
jmp
or
push
push
ret
dec
inc
or
jmp
push
push
push
call
sbb
mov
mov
mov
or
cmps
or
inc
push
or
je
xchg
sbb
adc
jecxz
(bad)
adc
cmp
mov
mov
jne
inc
push
je
mov
push
or
push
call
push
call
mov
jns
inc
cmp
jmp
popf
dec
stos
imul
cmc
mov
call
xor
call
sbb
or
mov
into
call
mov
mov
mov
not
les
sub
scas
mov
or
rcr
cli
xchg
call
jmp
inc
imul
adc
jne
push
push
call
(bad)
leave
add
xchg
(bad)
dec
das
xor
cmp
je
sub
(bad)
mov
call
push
call
lea
push
imul
les
jnp
aas
push
sub
call
and
jmp
push
std
push
mov
daa
lds
ds
sti
fwait
(bad)
ja
iret
call
push
call
jle
cmp
mov
push
cmp
call
inc
or
ret
mov
outs
loop
add
adc
das
cmp
div
lock
mov
sub
repz
(bad)
mov
adc
push
hlt
push
call
ja
stos
mov
je
push
call
xlat
popf
jp
xchg
and
push
push
add
outs
and
push
add
push
push
add
push
add
add
xor
mov
idiv
pop
add
cmp
jno
push
jno
fist
ud0
(bad)
mov
dec
mov
(bad)
push
inc
or
add
and
cmp
jne
call
pop
pop
pop
pop
jmp
out
rol
fistp
mov
icebp
xor
push
xchg
or
data16
dec
inc
pop
cld
fistp
adc
jne
call
ja
out
outs
repz
push
call
mov
lea
std
int
fucomip
pop
lods
lock
sahf
loop
xor
test
ficomp
push
call
and
call
in
sub
ins
inc
adc
push
loopne
dec
add
pop
les
call
(bad)
fimul
pop
push
cmp
pop
cmp
jne
ret
inc
daa
inc
inc
(bad)
mov
cdq
inc
cmps
movs
in
(bad)
out
or
shl
push
call
(bad)
movs
loop
sbb
or
daa
lock
jo
call
jmp
ret
addr16
inc
inc
pop
push
call
stos
jmp
lock
add
or
jmp
pusha
call
out
push
pop
lea
mov
add
inc
mov
mov
pop
mov
es
call
icebp
xor
cmp
inc
push
push
add
call
call
push
call
icebp
arpl
enter
xchg
push
test
pop
sbb
imul
add
mov
call
mov
outs
or
push
mov
add
push
call
mov
jns
xlat
inc
or
push
lds
ja
dec
cmps
or
stc
fld
adc
mov
(bad)
cmp
je
test
inc
ret
ja
add
mov
ret
inc
mov
mov
pop
mov
rcl
fist
mov
jae
mov
cwde
or
mov
mov
sub
add
jmp
sbb
sahf
mov
fnsave
fadd
add
mov
jno
add
stos
int
xor
xchg
jno
mov
sub
scas
dec
mov
add
mov
jp
mov
sbb
bound
lock
xchg
adc
out
sbb
sahf
test
mov
xchg
retf
outs
push
lds
xor
or
add
or
movs
mov
outs
ja
xchg
add
or
retf
shr
fucom
fnstenv
xor
or
out
mov
in
enter
mov
add
adc
or
jmp
pop
mov
mov
sahf
aad
xchg
fild
iret
cmp
and
stos
cmp
call
(bad)
sahf
lods
mov
arpl
sbb
sahf
sub
out
test
mov
or
xchg
addr16
add
or
out
sbb
out
lods
pandn
add
jbe
sub
fisttp
int
sti
jbe
xchg
fmul
fs
fisttp
js
fwait
sub
jl
loope
xor
ja
push
adc
xchg
adc
xchg
aas
mov
adc
mov
jo
ss
and
or
xchg
mov
mov
push
cwde
or
inc
(bad)
test
mov
in
xchg
mov
jbe
call
mov
sbb
jge
mov
rcr
mov
(bad)
dec
mov
mov
sbb
ror
(bad)
aam
inc
adc
or
das
jmp
rcr
fadd
mov
sti
ss
dec
adc
in
adc
or
ja
mov
sahf
mov
push
or
dec
xor
shl
cmp
sbb
shr
call
ret
pop
je
mov
call
mov
and
les
loop
sbb
shl
sar
and
dec
push
mov
push
mov
adc
in
push
inc
add
jnp
mov
inc
pushf
mov
popf
jmp
mov
push
mov
or
mov
xchg
inc
sbb
mov
cmp
sahf
add
es
sahf
sbb
cli
mov
into
mov
(bad)
(bad)
cmp
pop
pop
jne
je
or
cmps
clc
int3
sahf
cmp
adc
sahf
nop
(bad)
aas
add
aas
inc
mov
add
inc
fmul
adc
sahf
mov
mov
add
sahf
push
mov
mov
sahf
adc
xchg
sub
sub
mov
sub
call
lods
or
ror
jge
add
adc
or
mov
out
xchg
aad
mov
sub
and
les
jo
scas
fimul
push
call
leave
or
dec
dec
inc
hlt
test
jle
add
lock
xor
mov
xchg
movsx
(bad)
fild
push
or
mov
mov
add
push
inc
test
and
das
ret
xchg
sbb
and
mov
inc
fadd
add
pop
mov
lea
add
clc
mov
test
pushf
je
push
call
idiv
inc
add
cmp
or
into
call
aas
pushf
xor
jl
popf
add
mov
nop
jp
cmp
call
push
movs
jno
repz
add
sbb
call
(bad)
jne
mov
jmp
cmp
mov
js
add
(bad)
je
mov
hlt
call
jmp
push
push
inc
add
cwde
pop
lock
or
or
popa
inc
(bad)
shl
js
sbb
dec
and
(bad)
inc
dec
or
mov
add
sar
mov
mov
add
pop
sar
mov
les
add
mov
mov
fsub
add
or
push
mov
or
and
mov
xor
mov
fwait
mov
push
mov
and
and
dec
or
push
call
loopne
adc
mov
pop
mov
(bad)
(bad)
idiv
dec
imul
cmp
jge
ja
sub
jle
adc
add
xor
popa
jno
std
sbb
ret
mov
jmp
mov
add
(bad)
fist
push
or
jns
add
daa
mov
cmp
jge
mov
adc
mov
add
dec
or
add
adc
ret
cmp
dec
(bad)
aas
add
or
push
or
push
add
push
mov
jo
add
push
mov
add
sar
sar
sar
adc
add
lea
out
stos
or
clc
mov
sar
mov
mov
mov
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
je
or
or
js
(bad)
call
mov
mov
mov
mov
mov
mov
scas
ret
sbb
sbb
or
clc
or
inc
dec
call
lea
push
push
call
adc
call
out
push
fs
mov
mov
mov
mov
call
dec
clc
fstp
or
dec
adc
push
and
mov
(bad)
mov
xchg
pop
xchg
push
add
les
xchg
jbe
cli
xchg
cmp
jno
pop
mov
dec
push
mov
sub
xchg
jmp
mov
imul
shrd
adc
mov
add
mov
mov
lock
sub
sbb
jmp
dec
or
or
mov
mov
push
lea
lea
mov
(bad)
add
popf
add
add
lea
leave
mov
fcomip
jg
inc
or
sbb
inc
sbb
pop
sbb
push
ins
mov
dec
mov
mov
mov
add
or
lea
jmp
fdivr
ja
std
cmp
pop
pop
jg
adc
adc
xor
lea
cmp
setg
pop
jmp
adc
(bad)
outs
call
ror
sbb
jge
cdq
adc
ja
pop
pop
push
call
mov
ja
sbb
xchg
sbb
push
mov
mov
adc
mov
scas
sbb
sbb
mov
cwde
or
(bad)
pop
pop
mov
jp
call
jmp
or
dec
call
mov
cli
scas
(bad)
fsubrp
and
and
add
jmp
(bad)
fwait
mov
inc
call
inc
hlt
push
or
jne
lea
add
push
push
call
or
in
sub
add
adc
cmp
cmp
jmp
jno
mov
push
push
lea
mov
enter
sub
add
sub
call
stos
retf
dec
cld
jle
test
jge
test
jge
test
jg
jge
mov
call
(bad)
icebp
neg
jmp
mov
and
jge
neg
cmp
jg
push
push
call
fcomp
ins
or
mov
popa
les
not
imul
jnp
loop
inc
ror
add
push
(bad)
pop
pop
test
push
jbe
push
push
call
fnstsw
pop
mov
sbb
push
push
push
call
inc
xor
sub
ret
fbstp
push
call
jne
cmp
sub
jae
call
jne
ja
call
jl
push
and
cmp
mov
xlat
mov
add
mov
add
rcl
(bad)
stc
sub
sar
sub
or
jmp
retf
cmp
mov
jl
mov
sar
shl
pusha
push
shl
cmp
jne
lea
mov
jno
pop
ret
clc
adc
pop
scas
xchg
jmp
mov
push
lods
rol
push
jmp
pop
je
pop
lock
es
xor
hlt
cmp
cmp
push
add
jg
call
add
pop
je
fistp
cmp
jae
sbb
dec
push
(bad)
add
jle
jg
mov
aam
add
(bad)
inc
(bad)
xlat
icebp
or
xchg
push
xor
mov
dec
ja
les
lock
jmp
adc
adc
sar
push
je
jle
stos
mov
mov
cmp
jl
cmp
jge
mov
jmp
data16
jmp
mov
es
xchg
mov
movs
push
add
add
mov
pop
mov
mov
jl
or
dec
mov
adc
(bad)
mov
and
sar
fadd
add
mov
je
push
iret
loopne
fucomp
mov
pop
ret
and
mov
pop
or
(bad)
adc
cmp
jle
lea
neg
in
inc
mov
call
or
ja
push
add
jns
jg
mov
push
push
push
mov
call
jbe
mov
mov
mov
inc
cmp
push
call
xchg
mov
jg
or
outs
cmp
mov
mov
mov
inc
aas
pop
adc
push
push
imul
xchg
pusha
add
shr
push
jbe
mov
mov
xchg
(bad)
or
add
xchg
dec
jle
jbe
pop
not
shrd
cmp
pop
movlps
ins
adc
fdivrp
mov
add
or
dec
push
or
shrd
xchg
out
sbb
(bad)
or
mov
add
cmc
or
inc
icebp
mov
lock
dec
add
(bad)
rol
dec
inc
std
push
jnp
or
shr
enter
push
mov
pop
mov
call
inc
or
fwait
adc
bound
cmps
push
add
jle
cmps
pop
retf
loop
aas
sbb
jne
push
call
push
call
mov
out
inc
pop
jno
out
or
sub
push
mov
lea
push
push
xchg
or
push
sbb
cmp
sbb
sbb
sbb
add
mov
rcl
mov
je
inc
pop
aaa
cld
lds
push
mov
sub
or
cs
in
sbb
pop
out
stos
jae
add
ret
push
push
call
data16
jno
sub
call
int
in
cli
inc
mov
popf
push
push
push
movs
mov
ret
in
inc
std
(bad)
cmp
mov
pop
adc
call
fstp
mov
adc
xor
sbb
inc
cld
aaa
fadd
fcomp
add
cmp
or
std
fistp
pop
pop
ret
pop
jmp
and
push
fdiv
xlat
or
pop
in
fnstsw
inc
inc
push
fmul
pop
inc
sti
and
xor
fmul
out
add
clc
adc
or
ja
fdivr
sub
jb
add
ins
clc
sbb
push
fmul
jg
sbb
inc
clc
pop
pop
leave
ret
fld
popf
mov
pop
fwait
pushf
sahf
mov
fadd
jle
fcom
sahf
stos
loopne
das
ret
push
mov
push
mov
pop
test
je
mov
mov
push
cdq
pop
idiv
pop
adc
mov
jmp
mov
cdq
mov
add
idiv
leave
add
xor
cmp
sete
mov
sub
mov
sub
adc
or
adc
pop
cmps
sbb
hlt
std
out
clc
pop
pop
or
hlt
pop
pop
call
popf
jecxz
shl
mov
mov
jecxz
adc
and
out
adc
rcr
leave
add
adc
bnd
inc
inc
inc
cmp
jl
into
stos
jmp
scas
xchg
fdiv
sub
adc
clc
push
inc
fcos
arpl
lock
or
movzx
jbe
out
or
enter
inc
sub
pop
add
dec
add
sub
push
fadd
rcr
xor
dec
cs
adc
pop
test
call
stc
in
and
shrd
xor
adc
mov
ss
cld
and
lods
xchg
mov
jae
push
sbb
sbb
test
rcr
inc
or
sub
sbb
pop
enter
and
pop
pop
fdiv
cmp
fdiv
iret
sbb
add
xchg
sub
ja
mov
sbb
adc
sub
and
xchg
cmp
jge
(bad)
call
lock
inc
hlt
call
or
add
cmp
sbb
loop
push
push
xlat
retf
hlt
adc
scas
sti
push
jmp
call
or
sbb
movs
mov
fsub
jb
imul
movs
call
push
pop
hlt
push
cmp
ss
cmp
fsubr
ss
cmps
dec
js
or
sbb
mov
loop
cmp
fmul
fadd
jo
mov
imul
fild
sahf
xchg
or
test
bswap
repz
inc
and
outs
pop
fmul
pop
fld
cwde
fmul
int3
add
faddp
faddp
xchg
mov
inc
xor
xor
ret
bound
adc
or
push
aaa
inc
push
or
hlt
xor
fld
cmp
xchg
fs
(bad)
inc
fldenv
add
cmp
ja
cwde
and
xchg
and
fst
fcomp
mov
ret
mov
setae
or
inc
sub
fld
outs
test
or
fs
popf
adc
push
or
cmp
cmp
les
fmul
fadd
std
(bad)
fstp
mov
mov
inc
dec
loopne
sub
push
daa
xlat
push
fst
push
or
fucom
push
shl
inc
mov
lock
fist
(bad)
loop
test
popf
or
fwait
fs
jge
jg
shl
cs
inc
jmp
jge
neg
pop
or
js
sub
pop
cdq
sahf
push
pop
ja
mov
push
call
jp
sbb
dec
fadd
sbb
and
jae
out
pop
bound
enter
aaa
dec
push
lea
add
dec
ss
imul
xchg
xor
or
adc
outs
loopne
scas
or
je
rol
lock
xor
enter
inc
push
mov
mov
push
xor
cmp
je
call
jmp
mov
shr
call
mov
cmp
fbld
adc
lea
push
mov
mov
mov
call
mov
ja
cmp
jne
and
xor
cld
adc
jae
add
xor
cdq
jb
jg
(bad)
jmp
fldz
mov
fstp
mov
or
pop
adc
jne
fld1
push
(bad)
out
(bad)
pop
sbb
out
fstp
add
xor
cmp
jge
cs
mov
xchg
test
ror
inc
push
call
ret
dec
(bad)
fstp
fild
test
add
inc
mov
inc
mov
cld
scas
or
jl
cmp
ret
jne
cmp
jl
lea
call
xor
or
jae
fild
pop
add
cmp
mov
je
jne
jg
jge
add
call
cmp
jl
fld
out
fild
jbe
jmp
pop
add
fld
jmp
pop
jg
addr16
mov
pop
fstp
push
jmp
loopne
mov
add
ficomp
jmp
xor
test
ud0
dec
push
mov
fstp
call
pop
inc
push
call
add
add
cmp
jne
jo
jge
push
fsubp
(bad)
jg
lea
pop
sub
xor
inc
rep
call
adc
jg
cld
push
into
jge
mov
mov
fld
sbb
push
ins
fnsave
dec
je
jg
aam
sahf
fst
cmp
jl
sub
mov
add
jge
adc
in
or
jne
rol
push
test
add
jmp
jg
inc
ins
xor
cmp
jne
and
std
(bad)
call
jno
mov
cmp
ja
jmp
lea
dec
adc
pop
or
dec
mov
(bad)
lock
call
push
cs
jae
lahf
fimul
jl
leave
inc
pop
adc
adc
ror
inc
fild
jmp
adc
sub
sbb
mov
test
adc
psubb
mov
dec
loopne
adc
gs
dec
div
and
xchg
adc
pop
xor
or
jne
je
sbb
xchg
popf
inc
arpl
and
push
mov
in
(bad)
fld
fstp
cmp
je
and
pop
mov
pop
jmp
cmp
and
mov
dec
test
push
inc
dec
call
sbb
call
sub
mov
adc
or
dec
inc
pop
mov
inc
mov
xchg
adc
and
and
jne
or
fs
pop
dec
mov
or
xor
xor
jno
cmp
inc
mov
das
cld
sbb
fs
ins
mov
fs
push
and
sbb
test
and
test
and
and
jmp
push
xor
les
sti
sub
fstp
add
inc
sbb
push
sbb
in
fcomp
dec
retf
icebp
add
psrld
iret
shl
cmovno
or
mov
add
adc
push
retf
ror
icebp
imul
retf
cmps
sahf
cmp
imul
mov
mov
cmp
sub
(bad)
cwde
scas
call
les
dec
das
jnp
jbe
dec
mov
pop
je
retf
popf
mov
gs
pop
xor
dec
jno
sahf
pop
add
ror
(bad)
jg
aam
pop
adc
repz
inc
dec
jg
adc
(bad)
inc
jl
cmp
jg
lock
shl
movzx
je
clc
sub
cmp
mov
fstp
lock
loope
into
jmp
push
mov
ret
call
outs
xor
pop
pop
cli
xchg
push
imul
xlat
mov
neg
shr
mov
add
push
pusha
mov
mov
fadd
aam
dec
xor
xor
sti
and
push
lds
fadd
jecxz
mov
pop
pop
jmp
hlt
sub
sbb
fsubr
push
jmp
mov
or
retf
(bad)
fst
xor
adc
mov
hlt
fadd
add
pop
xor
sar
push
sahf
add
add
ror
dec
rcl
jmp
jp
dec
repz
add
adc
add
mov
loop
jmp
adc
in
mov
movzx
cmp
jge
movzx
inc
imul
sar
mov
fsub
fistp
push
add
or
mov
ret
xor
ret
adc
push
jmp
call
and
mov
fwait
inc
sub
inc
(bad)
jmp
adc
mov
mov
lea
push
mov
call
jne
add
pop
sub
ret
ret
not
and
sbb
mov
or
and
add
push
test
je
push
or
jg
lea
movs
add
or
xor
lahf
sub
ret
pop
je
mov
ins
push
(bad)
out
jmp
sub
ror
jne
mov
mov
sti
mov
test
jne
mov
mov
push
mov
call
dec
inc
add
inc
loope
mov
mov
jne
xor
ret
dec
mov
sete
mov
mov
je
push
call
sbb
pop
cld
pop
adc
sub
ja
jne
add
mov
mov
mov
ja
add
fs
mov
dec
push
push
push
xor
cmp
cmp
jne
call
clc
mov
cmp
mov
mov
push
scas
or
jne
call
mov
in
ror
pop
jmp
or
push
and
and
lock
loopne
test
mov
(bad)
(bad)
jmp
inc
cs
mov
lea
jmp
add
push
add
dec
inc
add
or
ror
clc
sub
(bad)
mov
clc
or
sbb
test
je
idiv
or
push
sub
inc
call
jl
imul
jae
xor
shl
xor
push
call
pusha
mov
in
jle
dec
mov
aaa
cmps
lock
add
push
fild
call
mov
add
aam
jle
(bad)
mov
jge
add
pop
cld
jle
or
sbb
add
mov
movzx
cmp
jg
clc
enter
dec
ror
mov
lea
xor
mov
das
add
add
mov
or
mov
mov
test
fstp
lock
test
je
movzx
cli
lea
push
out
(bad)
cli
fisttp
push
shl
or
push
call
inc
fdiv
mov
dec
fild
fadd
xor
push
mov
dec
cmp
jne
neg
mov
jmp
test
sbb
enter
ror
dec
lock
dec
cdq
mov
mov
and
adc
sahf
fsubr
lock
fmul
inc
std
(bad)
fidiv
call
push
mov
test
inc
cmp
je
cmp
je
inc
mov
inc
sbb
fdiv
push
mov
push
fldz
mov
fstp
or
shl
test
mov
mov
outs
das
test
ja
push
pop
lea
rep
fld
fdiv
jb
xor
out
mov
sbb
lods
fmul
fcos
dec
fiadd
jl
mov
test
je
fadd
mov
push
fmul
mov
jle
mov
inc
movs
add
cmp
mov
mov
(bad)
mov
jne
call
fld
pop
jmp
mov
inc
adc
inc
sbb
dec
aam
dec
in
mov
mov
daa
test
add
jmp
movzx
and
ja
jg
mov
cmps
ds
daa
and
je
add
popf
xor
lock
cld
jne
neg
mov
xor
sbb
loope
scas
(bad)
mov
pop
jl
mov
test
push
fild
pop
add
cdq
pop
mov
lea
(bad)
clc
jg
inc
je
jmp
add
mov
inc
add
cmp
or
mov
add
inc
adc
(bad)
sbb
lods
cmps
push
xchg
jbe
adc
ror
sahf
fs
adc
jne
mov
sbb
pop
test
xchg
jg
push
push
lea
push
je
mov
xor
cmp
jne
pop
cmp
dec
or
call
add
inc
sub
adc
add
test
fs
mov
(bad)
(bad)
call
je
movzx
mov
lea
jmp
movzx
add
cmp
cmp
add
cld
lea
mov
(bad)
cmps
pusha
cld
inc
mov
inc
call
cmp
mov
mov
pusha
out
call
cmp
into
mov
mov
add
stos
and
test
aas
outs
add
mov
mov
adc
inc
add
cdq
cmp
add
add
loope
xlat
hlt
push
dec
test
jne
or
jmp
(bad)
mov
push
movzx
fscale
push
push
mov
add
dec
cmp
les
je
test
(bad)
(bad)
mov
inc
or
(bad)
sar
(bad)
ins
inc
add
dec
adc
add
aas
dec
idiv
add
mov
cmp
jle
jmp
sub
movzx
xchg
and
daa
adc
jl
inc
add
adc
adc
cmp
(bad)
jne
add
xor
pop
shl
call
movs
pop
je
push
cld
outs
sub
inc
dec
push
mov
call
outs
add
ss
jne
mov
inc
shl
pop
mov
pop
ret
enter
add
xchg
rcr
push
push
mov
or
nop
jmp
dec
dec
add
push
mov
call
icebp
pop
pop
mov
pop
mov
mov
mov
test
add
add
dec
test
sti
dec
sbb
mov
sahf
lock
(bad)
jg
outs
inc
or
das
cmp
jle
or
adc
adc
inc
add
cmp
jl
cmp
aaa
mov
or
pop
mov
inc
or
cmp
add
fs
mov
je
test
mov
jle
mov
sbb
(bad)
(bad)
inc
add
mov
inc
add
dec
jne
mov
mov
pop
pushf
mov
dec
adc
xchg
push
inc
pop
xor
inc
or
push
mov
inc
cmp
aaa
cmp
jl
pop
mov
call
adc
cmp
je
cmp
jle
cmp
xlat
jne
jg
adc
cmp
jl
inc
and
cld
shr
xor
push
mov
(bad)
dec
mov
mov
sub
jle
mov
mov
inc
or
sbb
or
lea
mov
inc
clc
mov
mov
mov
mov
mov
and
mov
mov
mov
call
push
mov
add
mov
call
out
mov
loope
and
sbb
or
mov
dec
add
and
ret
jge
push
inc
jo
inc
add
mov
add
sbb
adc
inc
or
lea
push
(bad)
(bad)
adc
inc
sbb
call
inc
cmp
cmp
inc
cmp
fstp
fstp
call
dec
cmovs
adc
mov
lods
mov
(bad)
out
inc
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
xchg
je
cmc
out
mov
jle
leave
xor
add
push
lock
sbb
add
call
push
mov
and
xor
outs
xchg
or
icebp
fwait
test
outs
cmp
sbb
movs
xor
icebp
push
lea
ja
test
retf
call
adc
mov
jo
jl
adc
dec
adc
xor
jmp
(bad)
mov
or
lds
dec
pusha
mov
dec
je
push
loope
inc
sbb
fldenv
dec
or
pop
dec
cmps
push
cmp
outs
adc
call
or
cvtpi2ps
(bad)
fcomip
inc
pop
jne
pop
xor
test
jne
mov
cmp
jne
mov
stos
xchg
add
cmp
or
push
and
loopne
push
push
mov
mov
sti
test
jne
(bad)
jmp
and
call
out
sbb
out
or
inc
ins
into
push
ss
(bad)
dec
jle
inc
cmp
rcr
out
lahf
test
push
call
sbb
mov
jl
lea
daa
adc
retf
sbb
fild
inc
pop
mov
add
(bad)
loope
adc
lea
add
jmp
test
dec
call
aad
mov
sub
adc
push
push
mov
cmp
add
or
sub
and
xchg
or
xchg
push
out
sub
fild
call
adc
add
fwait
or
out
lods
jne
push
mov
push
call
mov
push
sbb
or
dec
cmp
add
clc
cmp
je
test
arpl
mov
mov
jmp
cmp
lock
push
push
push
call
pop
(bad)
(bad)
jg
xor
jne
mov
test
jns
mov
test
mov
(bad)
jg
xchg
leave
je
lea
movzx
xor
mov
mov
movzx
shl
cld
std
out
or
(bad)
add
jmp
lea
sbb
mov
out
mov
or
adc
mov
test
(bad)
adc
adc
call
or
lea
push
push
call
xchg
inc
test
pop
and
mov
mov
mov
(bad)
jmp
adc
dec
stc
(bad)
jmp
push
inc
inc
add
dec
jne
mov
mov
pop
jb
xor
pop
nop
and
dec
icebp
sbb
adc
inc
or
push
xor
cli
xchg
fstp
cwde
out
push
push
mov
scas
(bad)
std
or
sub
add
add
lock
inc
push
pop
or
cmp
je
iret
mov
or
jo
jne
or
cmp
jne
or
cmp
push
jne
or
pop
std
arpl
mov
cmp
jg
cs
sbb
in
(bad)
inc
mov
mov
cmp
jne
push
call
inc
aaa
mov
call
call
mov
push
popa
push
loop
push
mov
pop
mov
idiv
mov
mov
mov
or
or
jg
mov
lea
inc
push
mov
mov
call
mov
xor
pop
cmp
je
shr
or
adc
pushf
test
or
in
jmp
push
jne
ss
loope
mov
add
sbb
sbb
jne
call
les
adc
add
test
push
mov
inc
add
inc
xor
dec
int3
fimul
scas
push
xor
fcomip
je
pop
pop
sub
add
add
out
mov
mov
int3
int3
pop
push
cmp
ja
jne
enter
inc
das
icebp
loopne
test
retf
hlt
stos
icebp
sbb
shl
fdivr
rol
adc
outs
xor
inc
lea
movs
in
mov
push
movs
call
adc
add
cmp
or
mov
add
mov
jne
push
mov
lea
jl
mov
xchg
mov
sub
push
and
push
loopne
loope
xor
dec
pop
pop
push
pop
call
mov
stos
je
mov
cdq
rcr
sub
mov
or
dec
loopne
mov
mov
pop
mov
idiv
sbb
push
sbb
inc
shr
jbe
cmp
mov
mov
and
add
push
add
movsx
mov
inc
mov
je
mov
call
and
jge
add
cmp
xor
ret
add
and
(bad)
push
fcomp
call
jne
fimul
fst
fstp
jmp
das
sahf
mov
inc
or
enter
stos
sbb
jmp
adc
and
mov
jne
and
add
or
test
mov
cmps
add
test
pop
pmuludq
std
or
mov
mov
mov
sbb
jl
mov
mov
loopne
add
lahf
out
mov
add
push
pop
lea
mov
cmp
je
push
pop
call
(bad)
push
clc
cmp
je
movzx
movzx
inc
imul
popa
frstor
stc
or
cli
add
(bad)
and
jo
or
xor
cmp
sbb
xor
in
mov
je
dec
cmp
fld
fild
fstp
jle
test
inc
(bad)
(bad)
mov
mov
mov
cmp
loopne
ror
add
push
lea
pop
push
add
(bad)
xchg
xor
mov
enter
and
dec
je
movzx
(bad)
jmp
adc
adc
movzx
shl
or
mov
push
call
fiadd
jg
adc
mov
in
jmp
fcom
inc
and
(bad)
fmul
fidiv
fstp
je
mov
call
movs
jg
pop
mov
in
ret
add
pop
lea
test
fdiv
test
out
data16
movs
inc
fild
inc
(bad)
out
ins
fadd
fstp
inc
mov
test
mov
prefetch
ror
leave
xor
aaa
jl
clc
dec
or
mov
movzx
std
push
or
fmul
mov
xor
pusha
add
test
xchg
mov
cmps
cmp
je
cmp
jge
(bad)
(bad)
fild
dec
sar
add
cdq
idiv
mov
imul
rcr
mov
mov
pop
adc
xor
(bad)
jmp
stos
or
mov
and
xor
lea
mov
movs
mov
inc
(bad)
inc
mov
mov
(bad)
(bad)
(bad)
push
mov
sbb
jo
lea
call
mov
dec
sbb
leave
xor
mov
mov
js
mov
mov
loop
cmp
rcl
mov
ins
push
mov
lea
inc
mov
mov
adc
fidivr
enter
lea
mov
icebp
je
and
lea
ja
push
adc
movzx
inc
push
shl
or
push
out
clc
push
in
add
mov
and
lock
xchg
adc
(bad)
sahf
add
or
cmp
cmp
xbegin
iret
add
inc
cmp
jmp
retf
jge
add
push
loope
push
hlt
sub
push
jle
add
ret
mov
mov
mov
sbb
pop
call
ja
pop
pop
dec
or
dec
clc
icebp
mov
mov
add
je
mov
cld
repnz
or
clc
push
fadd
add
adc
mov
adc
pop
in
cli
inc
inc
imul
push
mov
aam
jnp
add
jne
daa
sti
cmp
mov
mov
jne
push
mov
dec
fst
mov
or
add
fwait
int3
std
mov
push
mov
push
cs
mov
jge
cmp
add
popa
in
aas
jb
add
or
dec
jmp
std
push
lea
cmp
or
inc
test
aas
fsub
cld
push
or
mov
push
daa
sar
in
push
call
inc
jo
jmp
call
clc
call
icebp
(bad)
inc
(bad)
je
sbb
mov
test
out
(bad)
pop
and
mov
mov
push
mov
push
or
ror
add
or
(bad)
(bad)
call
inc
dec
je
push
pop
sub
je
sub
je
sub
je
add
mov
add
and
pop
cmp
sbb
mov
add
adc
add
or
cld
(bad)
jmp
mov
mov
mov
cld
mov
(bad)
cmp
je
call
adc
loopne
fcomp
or
call
inc
fisttp
sub
or
stc
call
movsx
aad
add
mov
idiv
jmp
call
push
push
push
mov
call
or
jne
mov
or
push
(bad)
mov
push
mov
call
call
adc
jg
add
push
inc
push
inc
inc
dec
jne
push
mov
(bad)
call
call
loopne
or
add
mov
and
test
and
rol
or
(bad)
xor
add
mov
push
mov
mov
xor
(bad)
enter
shl
cmp
mov
std
fstp
test
or
shl
(bad)
fimul
dec
test
ud0
xchg
xchg
sar
mov
and
dec
add
cmp
jne
jmp
lahf
mov
cmp
mov
mov
test
inc
add
sbb
ja
or
or
sbb
(bad)
in
cs
inc
loopne
call
pop
push
repz
push
push
push
push
(bad)
test
nop
aaa
call
xor
mov
sub
jns
neg
(bad)
(bad)
fistp
ja
jge
mov
mov
mov
mov
mov
pop
pop
shl
or
retf
lock
jne
hlt
or
add
xor
xor
add
cmp
or
movs
(bad)
mov
xor
mov
lock
call
clc
jg
adc
inc
mov
jmp
ret
inc
add
push
inc
cld
(bad)
jmp
mov
sar
mov
mov
and
shl
shl
and
jg
bound
neg
and
mov
mov
call
adc
shl
pop
shl
and
sar
dec
mov
(bad)
jmp
cmp
je
cmp
je
cmp
je
cmp
pop
call
ss
xor
pop
mov
jmp
pop
pop
ret
push
movzx
mov
push
shr
push
fcom
xchg
cwde
or
or
into
out
push
call
neg
aaa
cdq
fisttp
push
call
cmp
pop
pop
dec
aaa
(bad)
cmp
call
add
push
ja
clc
xchg
inc
or
arpl
inc
adc
pop
ret
cli
push
mov
and
adc
mov
cmp
jne
mov
cmp
or
mov
leave
push
cld
pop
inc
or
(bad)
push
lea
mov
shr
add
add
adc
call
out
dec
sbb
jnp
lea
rep
push
cmp
loope
jmp
out
lea
or
aad
inc
push
mov
mov
mov
mov
mov
add
inc
mov
mov
pop
inc
mov
mov
loop
pop
mov
mov
pop
mov
or
into
add
jmp
inc
push
cld
outs
mov
add
dec
add
inc
in
(bad)
jg
and
mov
ret
cmp
je
pop
push
inc
adc
xchg
sbb
test
loopne
push
call
inc
cld
mov
test
pop
jne
xor
jmp
and
loopne
push
push
jo
call
jbe
add
call
cmps
inc
lock
or
mov
sti
dec
(bad)
jl
or
sub
adc
mov
outs
add
add
ja
add
mov
test
mov
je
mov
jbe
dec
test
pop
mov
shl
push
push
clc
push
call
jmp
shl
dec
popf
and
xchg
mov
push
inc
pop
inc
add
pop
(bad)
cmp
inc
inc
inc
data16
out
test
jecxz
not
lea
push
push
call
jo
sub
jge
hlt
pop
cld
outs
ror
dec
or
xor
jmp
mov
cmp
out
fist
pop
je
cmp
jle
adc
mov
mov
inc
push
inc
dec
dec
jmp
jne
xor
jmp
movzx
adc
test
jne
and
cmps
jb
lock
pop
retf
and
ss
jne
je
test
lods
pop
icebp
jmp
or
mov
je
push
mov
mov
cmp
add
dec
jne
pop
mov
mov
push
xor
dec
js
inc
or
mov
cmp
je
jae
lea
jmp
lea
cmp
jle
xor
cmp
out
mov
sub
push
xor
jmp
cmp
jne
inc
mov
jmp
in
clc
(bad)
inc
inc
mov
inc
cmp
jne
cmp
jb
cmp
ja
ficomp
(bad)
hlt
ja
adc
shl
test
jne
xor
pop
(bad)
jmp
mov
mov
mov
jno
outs
mov
or
xchg
test
and
mov
test
je
ror
jmp
outs
cli
add
push
mov
lods
ja
jle
test
je
jmp
lar
call
mov
or
push
call
lods
add
inc
cmp
jl
and
xchg
sar
call
mov
ret
xchg
push
and
cmp
jne
js
add
jecxz
shl
push
push
push
call
(bad)
fs
fld
mov
sbb
add
jle
push
mov
shl
push
call
sub
adc
je
adc
call
test
pop
mov
add
inc
std
(bad)
push
sar
jbe
cmp
je
mov
cmp
jne
mov
or
mov
and
and
(bad)
(bad)
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
in
push
sub
lods
add
(bad)
fild
jle
mov
call
or
loope
clc
adc
call
call
shl
push
call
mov
add
xor
cmp
jbe
mov
mov
mov
push
inc
cmp
mov
mov
mov
mov
mov
pop
(bad)
fistp
mov
jbe
call
adc
and
pop
push
jle
or
or
mov
call
div
push
or
(bad)
sbb
and
jmp
(bad)
cmp
jae
mov
mov
data16
mov
movzx
cmp
jg
mov
jecxz
icebp
shr
mov
sub
and
xor
sbb
outs
pop
iret
mov
mov
mov
pop
sub
out
cmp
test
sub
add
mov
add
add
push
call
arpl
loopne
std
jmp
inc
or
(bad)
pmulhuw
aas
mul
out
or
aas
sub
mov
call
sbb
call
cmp
add
pop
mov
cli
out
js
mov
ja
jb
lea
push
mov
mov
dec
and
pop
mov
pop
pop
add
mov
es
out
jne
dec
mov
es
cmp
push
add
ja
test
push
mov
jbe
push
aas
sub
test
mov
add
mov
cmp
pop
adc
push
inc
inc
inc
cmp
jb
test
pop
je
mov
js
mov
add
(bad)
cmp
or
mov
add
mov
push
mov
icebp
ja
push
push
dec
sahf
cld
(bad)
push
inc
and
inc
and
add
out
test
sar
xor
mov
mov
mov
rol
inc
sbb
shr
xor
ds
in
inc
inc
in
and
inc
or
cs
call
push
clc
fldz
jne
cmp
push
mov
fcom
fsub
mov
inc
cmp
dec
out
rep
cmp
jp
call
fcom
inc
and
fld
fmul
fld
fmul
ja
rcr
loopne
call
or
fld
dec
fst
fild
fstp
call
jns
sbb
cmp
int
mov
xor
(bad)
fcomp
cmp
xchg
loopne
xor
test
jle
out
add
cmp
mov
add
cmp
cmc
pop
jmp
cld
sar
out
mov
scas
or
cli
mov
or
push
mov
pop
mov
mov
pop
or
shr
ret
jne
call
mov
dec
pop
jne
mov
cmp
ror
pop
bound
sbb
mov
and
sub
js
sar
mov
test
mov
and
int
fwait
mov
(bad)
mov
mov
test
arpl
mov
ss
cwde
adc
inc
mov
mov
mov
inc
ror
shl
cld
outs
and
imul
pop
mov
shl
cdq
fdivrp
or
or
jmp
not
and
je
xchg
jb
dec
(bad)
push
jo
push
push
call
and
in
or
push
cmp
mov
dec
jmp
jne
and
jmp
sub
aas
push
call
call
add
loopne
shr
jle
cmovle
jb
sbb
sbb
xor
xor
inc
(bad)
dec
in
pop
mov
inc
cld
mov
out
test
push
mov
call
loopne
jne
movzx
inc
or
sub
das
je
dec
dec
jne
sub
add
fmul
(bad)
imul
adc
jmp
mov
cmps
and
fbld
pop
clc
jmp
clc
cmps
and
dec
hlt
push
call
idiv
push
cmp
jbe
lods
and
mov
jmp
push
mov
push
call
(bad)
jg
jne
inc
inc
mov
test
jne
pop
pop
mov
iret
sar
das
test
push
mov
sbb
sbb
call
and
xor
mov
inc
pop
shl
shr
mov
and
push
std
or
xlat
int3
es
push
jmp
or
push
call
push
inc
aam
lds
rcr
or
mov
out
adc
mov
es
(bad)
call
pop
adc
add
push
push
sahf
(bad)
fnsave
adc
aam
add
call
inc
sub
jmp
jl
jge
in
into
push
test
push
or
jle
mov
or
lea
cmp
sub
mov
inc
jo
enter
sub
push
sub
xor
add
mov
or
je
jmp
push
jge
out
rol
hlt
jmp
inc
ret
call
or
and
xor
add
je
or
adc
push
or
dec
adc
mov
mov
xor
test
push
or
add
popf
lea
out
(bad)
fild
jl
cmp
je
dec
jns
jmp
jge
jge
cmp
jmp
out
fnstcw
retf
ins
sbb
call
inc
cmp
ss
jmp
cmp
jge
sub
mov
and
leave
add
add
out
fisttp
inc
in
adc
push
call
add
sub
adc
sar
jl
mov
jge
push
jmp
lahf
xor
in
outs
push
cs
std
add
test
je
push
loop
ja
test
cdq
jge
push
jmp
push
pop
idiv
adc
push
call
jae
xor
or
(bad)
lahf
fucom
and
xor
inc
add
jbe
push
call
stos
leave
(bad)
mov
adc
add
mov
mov
push
push
idiv
call
pop
pop
mov
push
(bad)
out
cwde
jecxz
cdq
dec
push
call
repnz
lahf
(bad)
(bad)
inc
or
inc
push
add
hlt
ins
sbb
jmp
push
cs
mov
mov
ss
jge
jmp
adc
xlat
add
inc
es
mov
cmp
fucom
cmp
je
push
push
je
pop
(bad)
out
jae
call
test
je
push
sbb
pop
ja
jecxz
push
ja
adc
jl
pop
cmp
ja
or
adc
je
push
out
movs
cmp
rol
mov
mov
add
mov
or
or
in
jae
test
and
inc
push
adc
addr16
jle
dec
adc
cmp
xor
push
and
ins
add
or
dec
adc
lock
pop
mov
cmp
dec
inc
adc
aaa
sub
ret
push
push
mov
jle
mov
sub
dec
add
cmp
jl
call
push
push
cld
mov
jl
mov
jge
dec
mov
test
nop
dec
sbb
leave
mov
je
ror
pop
imul
call
je
inc
and
cli
or
or
ins
mov
mov
xchg
xrelease
jmp
jg
icebp
mov
fcmovnu
jge
pop
cmp
jb
xor
push
mov
sbb
nop
pop
pop
jbe
call
dec
cmp
add
add
fwait
aas
fstp
mov
sbb
dec
jne
or
adc
rcr
push
jmp
mov
push
call
pop
mov
jne
pop
and
jg
icebp
daa
or
sub
add
clc
outs
mov
jne
cmp
jne
inc
push
je
or
(bad)
lea
cmp
mov
add
cdq
rcl
mov
inc
add
cmp
jl
sub
xchg
retf
add
pusha
push
call
or
mov
adc
pop
ret
mov
add
jge
imul
add
pop
jmp
pop
in
rcr
sub
cmp
add
repnz
push
mov
sub
push
test
mov
sbb
pop
jg
pusha
jmp
add
loopne
push
call
add
dec
xchg
pop
icebp
inc
into
call
xor
test
jle
shl
dec
dec
cld
cmp
xor
pusha
cmp
jge
mov
pop
iret
loopne
mov
out
lea
movs
movs
mov
inc
add
jmp
inc
pop
les
rol
outs
push
mov
push
das
shl
sub
add
ror
xchg
and
sub
fwait
js
mov
sub
cmp
ins
je
pop
xor
out
mov
fprem
push
cmp
push
mov
jge
scas
retf
dec
movs
xchg
push
call
hlt
jmp
inc
repz
or
ret
sbb
xchg
xchg
pop
lock
aas
cli
or
or
or
xchg
sub
xor
call
add
adc
dec
add
inc
or
push
aaa
sbb
loop
(bad)
(bad)
aas
cmp
sub
push
movzx
mov
imul
sar
push
push
push
call
jmp
rcl
(bad)
cld
xchg
sub
movzx
(bad)
imul
sar
movzx
imul
mov
repnz
pusha
(bad)
fdiv
idiv
adc
and
loopne
ret
push
ja
and
test
ins
sub
jle
add
je
ds
fadd
test
inc
into
call
xor
shl
push
cmp
mov
pop
mov
aaa
inc
cmc
dec
mov
xor
call
dec
inc
add
and
xor
sbb
retf
call
out
sbb
call
(bad)
adc
call
push
jo
mov
in
xchg
mov
push
call
mov
mov
call
mov
mov
fwait
and
push
fist
data16
(bad)
loope
mov
repnz
call
xor
cmp
push
mov
jbe
mov
jg
div
call
jo
inc
jo
push
jg
add
adc
cmp
dec
adc
or
mov
pop
push
add
jb
call
jae
int3
mov
inc
add
es
mov
es
add
jb
push
push
or
ins
loop
clc
outs
stos
fsubr
mov
push
stos
mov
cmp
lock
call
cmp
jb
add
and
test
sti
daa
stc
pop
mov
xor
add
sbb
fucomip
and
push
push
sbb
je
sub
je
inc
and
sub
rol
cmps
or
adc
cmp
call
outs
mov
add
mov
jne
jg
add
pop
push
push
pop
test
ja
enter
push
imul
pop
add
cmp
push
push
jbe
jb
sub
fucomip
add
push
cmp
fsub
dec
mov
data16
xchg
push
mov
pushf
push
push
ror
(bad)
loop
jo
sub
jge
dec
mov
test
jle
cmp
cmps
(bad)
sar
mov
sub
pusha
dec
push
(bad)
out
cli
inc
retf
mov
add
sar
sub
cmp
pop
mov
jge
lea
shl
push
call
xlat
vpcmpeqb
cmp
sbb
shl
push
push
in
mov
out
ja
out
lea
sub
inc
mov
inc
or
fcom
cwde
(bad)
ins
enter
cwde
inc
add
adc
inc
pop
ja
cli
clc
mov
jmp
dec
lea
push
shl
(bad)
jmp
lea
push
push
lea
lea
push
call
iret
mov
mov
sbb
push
popf
into
call
idiv
fdiv
push
mov
mov
dec
(bad)
pop
js
push
test
jge
and
or
jle
push
(bad)
ja
loop
cmp
je
mov
lea
add
push
call
pop
pop
cmp
mov
adc
cs
add
mov
jmp
lea
out
or
stos
outs
cld
jg
fnstcw
inc
and
or
dec
lea
jmp
jmp
dec
outs
xor
add
push
push
jmp
ret
cwde
or
sub
ja
mov
jnp
scas
mov
outs
jne
cs
(bad)
(bad)
dec
(bad)
jl
lea
lea
lea
sub
shl
shl
inc
mov
lea
add
movs
sub
int3
mov
push
dec
movs
jne
sar
and
enter
sub
add
or
adc
dec
leave
inc
mov
push
add
add
inc
cld
aad
push
dec
call
(bad)
adc
cmps
ja
mov
call
and
scas
jbe
and
jl
ret
inc
mov
sub
add
adc
pop
out
jne
mov
(bad)
(bad)
mov
cmp
pop
mov
je
xor
cmp
mov
jle
mov
mov
(bad)
(bad)
(bad)
inc
cmp
jl
inc
mov
je
mov
cmp
jne
add
jmp
cmp
jl
cmp
(bad)
(bad)
(bad)
jg
mov
add
mov
lea
shl
mov
movsx
jae
inc
cmp
rol
ret
jne
retf
(bad)
cmp
xchg
adc
mov
jo
aas
pop
ja
push
pop
or
call
jmp
(bad)
pop
test
jae
mov
mov
mov
inc
out
loop
mov
or
inc
adc
rcl
mov
cmp
or
mov
(bad)
jo
loop
sbb
andps
ficomp
adc
pop
ffreep
(bad)
dec
cmp
jbe
mov
mov
lea
mov
adc
mov
jmp
or
sbb
dec
or
fisttp
dec
add
lods
and
mov
mov
call
push
ficom
icebp
sar
jbe
and
adc
or
pop
mov
mul
push
cmp
jge
aas
jp
push
mov
inc
sbb
icebp
or
mov
mov
pop
mov
push
mov
daa
jge
sbb
push
imul
gs
movs
inc
pop
sub
test
dec
cmp
inc
sbb
and
imul
mov
xchg
jge
sub
inc
sbb
adc
mov
mov
sub
(bad)
call
mov
jl
cmp
jge
lea
push
lea
push
push
mov
call
(bad)
xor
cmp
jle
mov
call
jl
cld
mov
mov
je
pop
jmp
(bad)
shl
add
test
jg
pop
jecxz
inc
push
jno
cwde
jns
call
fild
scas
js
adc
std
jge
push
call
jo
aas
jge
cmp
push
mov
mov
push
call
jo
sub
mov
sub
jmp
mov
mov
je
cmp
add
push
pop
jle
xchg
(bad)
cmp
jl
mov
add
fistp
push
inc
push
pop
mov
shl
out
or
push
add
mov
call
jge
sbb
mov
push
call
out
adc
pop
je
push
pop
xor
sar
adc
retf
test
sbb
call
arpl
push
and
cmp
jle
mov
jmp
test
jge
addr16
dec
lea
mov
mov
dec
cmp
test
mov
(bad)
mov
out
push
jmp
or
cmp
call
jmp
call
lds
adc
sti
into
call
push
call
bound
dec
mov
je
call
aad
mov
(bad)
pop
jmp
mov
pop
data16
ds
sbb
fwait
add
dec
(bad)
mov
push
jl
fadd
(bad)
sub
sti
or
pop
jmp
clc
pop
and
or
sar
fcmovb
je
cmp
and
ror
push
or
adc
push
or
add
or
push
adc
test
mov
retf
cmp
mov
add
das
fild
jmp
push
push
lea
xor
mov
sub
jne
mov
rol
jg
das
add
out
sbb
inc
xor
dec
add
jne
sar
jmp
push
cdq
pop
idiv
pop
pop
sub
sub
sub
sub
cld
out
sbb
pop
push
push
mov
fstp
push
sub
jl
pop
jecxz
pop
add
mov
push
mov
scas
push
call
(bad)
mov
adc
leave
inc
pop
cld
aaa
inc
inc
mov
mov
mov
mov
cli
xor
loop
add
pop
adc
sub
mov
scas
rol
push
repnz
pop
int3
clc
aad
cmps
aas
hlt
scas
push
mov
call
cmp
dec
mov
cmp
push
inc
mov
cmp
jl
xor
inc
jmp
lea
data16
(bad)
(bad)
dec
adc
cmp
movsx
jmp
cmp
je
(bad)
mov
dec
dec
lds
jl
and
mov
inc
das
mov
adc
test
mov
dec
sbb
sbb
mov
cmp
jg
call
jmp
inc
adc
push
(bad)
aaa
push
mov
cmp
(bad)
jmp
mov
sub
call
inc
inc
mov
mov
adc
cdq
loope
dec
aad
add
or
dec
push
jl
pop
popf
jge
pop
mov
mov
je
mov
call
in
inc
sbb
cwde
mov
ja
adc
mov
push
push
in
lea
push
rcl
sti
adc
dec
pop
movzx
movzx
fild
inc
lock
mov
fcom
cmp
je
es
sar
(bad)
jmp
pop
mov
shl
inc
mov
mov
mov
mov
outs
add
in
jns
jmp
clc
add
loopne
cmp
mov
adc
inc
inc
pushf
mov
ret
push
cmp
je
jbe
aaa
shl
sbb
(bad)
push
add
mov
mov
cld
pop
mov
push
mov
mov
push
inc
call
js
div
aam
inc
sbb
call
and
pop
add
or
push
sar
mov
div
add
cs
jg
inc
cld
mov
ja
or
lock
fstp
adc
je
push
mov
call
xchg
shl
call
mov
adc
jne
mov
(bad)
daa
mov
dec
xor
(bad)
mov
loopne
dec
test
push
rol
sbb
clc
adc
mov
push
call
pop
pop
ret
add
push
mov
xor
cmp
cmp
xor
mov
fxch
fdivr
arpl
jl
lea
call
(bad)
lock
clc
or
cmp
jle
retf
or
call
ja
inc
cmp
jl
or
js
adc
xchg
jmp
dec
add
ret
mov
lea
call
(bad)
aam
jge
or
(bad)
adc
rol
push
add
dec
or
es
dec
sub
xchg
adc
inc
pop
jns
push
inc
push
mov
lock
inc
and
push
cmps
push
call
js
ss
daa
mov
add
inc
cmp
pop
cmp
repnz
xchg
mov
sbb
not
xchg
mov
dec
sbb
call
mov
xor
cmp
xor
pop
loop
xchg
rol
test
xchg
popf
xor
jge
add
push
sbb
or
stc
repnz
jmp
dec
in
ret
pop
ret
loopne
cmp
sbb
ja
mov
fild
push
jb
call
jae
jmp
out
cmp
jb
push
pop
pop
push
and
push
out
cli
(bad)
pushf
and
push
call
pop
ret
popa
ss
cmp
cmp
jns
and
add
add
sti
outs
pop
push
or
call
arpl
test
je
mov
pop
ret
pushf
cmp
push
pop
mov
and
cmp
jne
aaa
add
fldenv
fiadd
(bad)
clc
mov
cmp
pop
sbb
movs
out
(bad)
out
loopne
loope
add
sete
mov
pop
ret
xor
leave
shl
push
dec
out
clc
or
add
jne
inc
push
add
mov
mov
mov
xchg
push
dec
ret
xchg
and
vpsubsb
test
sbb
adc
sub
sbb
jle
test
je
xor
aaa
call
add
sbb
(bad)
fadd
push
call
out
xor
call
cmp
adc
jg
push
call
pop
mov
les
xchg
adc
xor
xchg
push
adc
mov
dec
aaa
sub
adc
data16
dec
push
mov
add
jo
push
lea
add
jbe
dec
clc
or
xchg
(bad)
sbb
psubd
call
push
fcomp
test
or
push
cmc
add
push
mov
call
or
nop
mov
frstor
mov
hlt
push
push
shl
pop
(bad)
sahf
(bad)
cdq
loop
jne
jge
fmul
cmps
fadd
mov
pusha
js
add
mov
loop
mov
imul
lds
loopne
adc
push
(bad)
mov
scas
push
lea
push
push
mov
call
mov
nop
(bad)
(bad)
cmp
aam
icebp
mov
jns
mov
sar
idiv
dec
mov
jle
mov
lea
call
sbb
xor
fiadd
jl
mov
xchg
shl
sbb
mov
fmul
mov
imul
add
ja
movzx
call
and
inc
adc
jmp
jmp
and
adc
ins
cmp
and
je
push
call
cs
or
cmp
cmp
or
out
je
xor
adc
bound
stos
mov
lock
adc
loopne
adc
adc
aad
push
mov
add
or
mov
cmp
fwait
adc
je
mov
jmp
iret
or
add
cmc
repz
add
imul
fbld
mov
pop
pop
ret
stc
cmp
je
push
mov
mov
mov
adc
arpl
rol
push
mov
call
(bad)
push
call
jne
pop
jnp
aas
cli
mov
add
and
push
push
fld
call
push
rol
loop
cmc
or
push
call
add
rcr
std
mov
jns
mov
mov
jg
dec
sub
jne
mov
fcom
add
add
inc
out
scas
int
jns
add
inc
fsub
ja
jg
mov
mov
lock
in
inc
loopne
mov
inc
hlt
js
outs
clc
je
mov
jp
add
out
in
aas
or
sub
pop
jmp
push
or
jns
fs
mov
out
xor
adc
out
es
xchg
xchg
add
or
mov
call
lsl
mov
mov
or
loop
std
fadd
pop
mov
mov
out
xchg
das
add
push
adc
jae
je
mov
aas
clc
out
mov
push
add
inc
stos
mov
pop
inc
sub
sbb
into
add
int
add
mov
adc
test
or
adc
mov
mov
call
pop
je
call
rcl
loope
push
mov
add
out
dec
addr16
mov
fiadd
push
call
fsub
push
sbb
ret
add
das
and
cmps
mov
or
sti
mov
call
adc
aam
push
stc
add
inc
mov
lods
(bad)
ss
call
call
jge
mov
pop
cmp
stos
mov
cmp
out
add
shl
std
into
call
call
into
std
push
aad
call
stos
popf
iret
inc
es
call
call
add
or
jmp
mov
or
add
rol
push
jl
call
push
push
mov
sub
mov
add
call
push
dec
popf
mov
xchg
out
sub
in
cli
xchg
repnz
pop
or
add
adc
sub
inc
sbb
dec
add
cmp
xor
aaa
hlt
inc
imul
dec
dec
aad
out
fwait
or
push
popa
call
sub
(bad)
pop
inc
cmp
jle
(bad)
fisttp
jae
jmp
pop
mov
pop
add
inc
add
icebp
ja
jmp
cmp
xor
icebp
call
lock
fisttp
jmp
push
call
fwait
jl
sbb
mov
test
pop
pop
xchg
add
fidiv
call
sub
imul
sub
js
lods
sub
or
push
mov
sub
or
loope
outs
pop
hlt
call
push
nop
sbb
out
or
xor
mov
or
pushf
jne
aaa
push
les
mov
fmul
push
cmps
xchg
retf
call
xor
je
push
sbb
or
mov
mov
jae
lock
mov
jge
jmp
inc
add
cmp
shl
add
cmp
lea
xchg
jecxz
test
jmp
mov
imul
add
inc
inc
cmp
jle
dec
test
jg
add
je
push
jbe
ficom
stc
and
fadd
das
rcr
xor
out
or
cmp
push
in
scas
stos
pop
sub
adc
push
mov
or
and
call
sbb
call
sbb
je
push
shl
sbb
cmp
fcomp
popa
aaa
or
xor
mov
inc
and
mov
xor
or
fwait
nop
xchg
shl
and
es
fstp
jle
xor
enter
pop
xor
fcomp
lock
fst
add
jle
push
std
or
cli
in
(bad)
(bad)
jmp
scas
inc
out
fld
cmc
movs
or
inc
leave
add
jle
div
inc
cmp
inc
mov
call
jnp
cwde
aam
push
adc
fwait
test
inc
jg
push
dec
push
rol
fcomp
inc
int3
das
adc
(bad)
jg
mov
cmp
cmp
je
and
cmp
je
imul
add
mov
jne
call
jae
push
jne
lods
imul
add
call
jne
hlt
push
sbb
mov
mov
or
enter
ror
pop
je
pop
adc
clc
(bad)
pop
xor
cmp
je
dec
add
mov
dec
shl
jne
mov
adc
div
sbb
aam
jne
vpunpckhwd
inc
cmp
mov
out
das
je
movzx
mov
jp
jne
pop
(bad)
ss
(bad)
jne
jmp
push
pop
inc
fsub
add
je
stc
push
cmps
cmp
cli
(bad)
jg
jle
lea
push
lea
push
push
call
jmp
dec
sar
xchg
jmp
cmp
jbe
push
mov
jmp
fiadd
in
stc
pop
xchg
cmp
retf
inc
mov
inc
fisubr
mov
(bad)
call
mov
jne
jo
ret
sbb
je
jge
jge
xchg
lock
cmp
(bad)
fdivr
jge
je
sbb
in
adc
dec
ffree
pop
lahf
adc
push
cmp
mov
inc
scas
dec
lahf
inc
fidivr
mov
xor
inc
inc
pop
fwait
mov
mov
cmp
(bad)
adc
icebp
call
call
daa
out
jo
jne
ja
inc
push
inc
ja
(bad)
aas
loopne
je
cmp
jne
push
xchg
add
add
je
sub
xor
jbe
loope
inc
or
clc
and
mov
and
lock
ja
push
adc
mov
mov
pop
aad
sar
push
inc
je
out
(bad)
or
call
test
call
push
call
pop
stc
(bad)
inc
push
push
mov
ds
fisttp
ror
call
clc
add
nop
sti
fwait
xchg
jne
mov
push
call
mov
push
std
sub
xchg
sub
push
loop
aaa
cmc
or
adc
add
mov
mov
call
jmp
mov
dec
in
sbb
cmp
add
ret
call
adc
inc
test
sbb
fist
cmp
aad
adc
fiadd
cld
and
jmp
sbb
mov
cmp
mov
lods
or
xchg
ret
je
ret
jg
sti
jne
mov
pop
push
mov
test
je
or
mov
cli
aam
out
add
mov
and
xor
mov
mov
lds
add
add
test
mov
call
add
repz
mov
call
add
in
stos
(bad)
adc
retf
clc
or
sub
fldcw
(bad)
jg
sahf
das
and
add
add
inc
in
inc
or
jmp
sbb
fstp
fld
fistp
adc
adc
cli
or
mov
shl
data16
and
jbe
fs
inc
pop
ja
jmp
aas
stc
in
dec
call
or
add
aam
call
push
call
pop
in
es
fld
sbb
lods
jmp
ds
sbb
mov
push
popf
ret
mov
shl
scas
daa
adc
adc
dec
or
or
lock
fsubr
add
mov
inc
pop
(bad)
mov
or
inc
add
mov
add
fstp
lahf
or
fdivr
jmp
lea
stos
pop
mov
call
in
push
lea
call
push
or
sbb
add
clc
mov
add
dec
or
sar
dec
or
out
shl
push
mov
adc
add
inc
clc
je
mov
pop
in
fsub
mov
call
mov
mov
sar
ror
(bad)
(bad)
jg
jle
mov
xor
mov
inc
add
dec
jne
test
loope
push
(bad)
out
push
daa
xchg
pop
rol
inc
or
mov
mov
adc
dec
mov
lea
ror
add
push
out
add
mov
pop
icebp
out
iret
push
add
pusha
inc
xchg
in
mov
mov
xchg
push
je
sbb
ror
mov
cmp
int3
adc
push
sbb
inc
sub
cmp
popf
jg
dec
aam
dec
fsubr
ds
mov
jbe
xchg
jmp
dec
sbb
mov
xor
push
(bad)
out
stos
aas
hlt
add
inc
inc
jge
hlt
mov
idiv
test
mov
je
add
inc
inc
stos
dec
fmul
inc
mov
sbb
inc
cmp
or
mov
mov
call
adc
rol
xchg
push
add
mov
push
cmp
cmp
jne
inc
add
je
cmp
je
cmp
(bad)
xor
gs
ficomp
retf
loop
adc
inc
or
mov
push
lea
mov
mov
push
call
fdivr
(bad)
(bad)
std
mov
mov
inc
mov
cmp
jne
mov
jmp
test
outs
mov
repnz
jmp
push
dec
xor
or
adc
ror
mov
mov
mov
(bad)
fstp
cmp
ds
jge
test
jmp
rcl
(bad)
jmp
pop
pop
pop
dec
loope
mov
mov
mov
mov
clc
push
call
or
sbb
inc
ret
cmp
and
pop
fmul
cmp
sbb
cld
and
pushf
xor
fadd
cmp
push
xchg
mov
inc
dec
xor
aam
cmp
inc
pusha
cmp
or
mov
inc
lock
mov
shl
shr
and
sbb
add
inc
inc
fisttp
movs
out
inc
hlt
xor
mov
mov
neg
mov
call
xchg
test
je
sub
jnp
adc
lock
mov
sbb
cmp
retf
jmp
or
(bad)
dec
loopne
lock
test
je
mov
in
test
je
mov
inc
sti
mov
mov
adc
fistp
mov
mov
push
std
test
cwde
or
pop
sbb
fist
add
mov
mov
mov
movsx
or
lahf
pop
loopne
add
or
loope
mov
cmp
mov
xchg
dec
pop
jmp
out
cmp
sbb
pop
inc
lea
push
call
cmc
push
ret
xor
and
xchg
mov
adc
xchg
jo
ret
retf
xlat
arpl
and
test
pop
sar
movs
sbb
gs
mov
add
leave
clc
outs
and
and
push
sar
mov
call
mov
in
aad
inc
jge
mov
push
sar
xor
iret
call
add
sbb
inc
cmp
call
push
push
icebp
loopne
mov
mov
adc
add
je
mov
lock
aaa
xor
mov
(bad)
jmp
adc
push
mov
dec
and
leave
out
xchg
dec
dec
cmp
dec
neg
mov
leave
retf
call
mov
jmp
push
mov
test
mov
arpl
add
fdivr
test
je
mov
jmp
jo
lahf
aas
fidiv
mov
outs
jmp
adc
push
mov
push
jne
xor
push
loop
or
sub
leave
adc
or
or
lahf
and
dec
add
out
or
and
rol
add
test
rcr
dec
jne
xor
jmp
jne
push
pop
mov
(bad)
ins
pop
add
sbb
cli
jg
dec
adc
or
ja
call
xor
inc
ret
mov
inc
mov
pop
cmp
dec
dec
and
and
add
pop
rcr
ins
mov
aam
jo
sub
cmp
add
lea
nop
mov
jbe
(bad)
fwait
lods
dec
and
aam
lods
(bad)
jg
std
je
test
je
inc
cmp
jne
dec
jmp
lea
add
jmp
lea
push
push
mov
mov
call
sbb
xchg
pop
cdq
and
outs
cli
jg
sar
ror
and
mov
and
(bad)
call
jmp
mov
sbb
xchg
aaa
sar
add
cmp
jg
add
mov
test
jg
mov
aam
and
jl
mov
mov
pop
iret
pop
call
jo
mov
fstp
sti
mov
and
icebp
jl
ud0
or
lock
push
call
loopne
cmp
popa
or
inc
aad
add
nop
loop
fsubr
fadd
xor
rcr
(bad)
js
pushf
cmp
ret
xchg
cmp
push
call
push
call
ins
mov
xor
inc
cli
movzx
scas
(bad)
(bad)
in
imul
or
test
mov
jae
fild
dec
mov
xchg
cmp
std
adc
in
dec
fidiv
stos
(bad)
push
xor
cmp
je
mov
rol
pop
mov
setnp
add
scas
xor
pop
sbb
or
call
jmp
jbe
call
icebp
popa
jb
jg
sti
fistp
mov
cmp
jne
push
cmp
je
test
cdq
sti
push
add
test
inc
(bad)
out
mov
push
fst
jle
jl
(bad)
fcom
sahf
mov
add
sbb
add
call
mov
push
pop
add
fldz
push
fldcw
sbb
pop
clc
fs
fld
dec
jge
jb
in
inc
hlt
mov
mov
jmp
cmc
call
mov
call
fild
cmp
fdivr
inc
cmp
hlt
jne
lea
aam
in
int
test
inc
pusha
cmc
(bad)
(bad)
fild
fmul
fcom
dec
adc
jns
inc
loopne
jg
cmp
jl
fld
call
mov
sub
or
(bad)
fisttp
fcomp
pop
add
and
dec
jno
call
lea
push
push
lea
(bad)
push
push
pop
mov
xlat
(bad)
(bad)
popa
add
pop
adc
and
(bad)
mov
push
fmul
mov
imul
inc
adc
call
fld
fsub
mov
push
xor
jne
ins
sub
add
adc
sbb
jmp
cmp
ret
or
sbb
mov
sar
jp
pop
or
jne
sahf
js
ins
push
dec
lahf
xchg
lea
xchg
test
xchg
cli
loopne
aam
jne
pop
adc
inc
stos
add
dec
cmp
jge
cmp
jge
add
leave
inc
cmp
jl
cmp
jl
mov
jg
or
inc
mov
jmp
mov
mov
ret
inc
mov
cmc
enter
cwde
mov
inc
adc
jae
mov
inc
in
jne
(bad)
fist
dec
in
add
add
cmp
xadd
and
xor
inc
cld
retf
jne
cmp
jge
and
mov
aaa
or
test
lahf
ror
sbb
inc
pop
adc
or
pop
adc
rol
inc
outs
mov
idiv
test
ja
add
sahf
fdivr
call
jmp
inc
pop
pop
ret
lds
nop
sub
cmc
cmp
mov
fild
add
add
sub
sbb
in
push
inc
cld
add
test
sbb
xchg
inc
test
jne
xor
push
ret
xchg
test
push
icebp
or
mov
stos
cs
jo
call
sbb
mov
call
clc
stc
cmp
rol
add
sbb
jmp
xchg
fiadd
mov
adc
call
fistp
sub
(bad)
lea
xchg
outs
jmp
rcr
mov
xor
imul
or
push
mov
inc
lea
stos
inc
lea
push
xchg
aam
lock
sbb
out
out
adc
sbb
jg
cmp
outs
xor
add
mov
(bad)
sub
xchg
pop
add
cmp
jle
add
push
ja
push
jge
mov
sub
cmp
jle
add
push
jl
mov
loope
ret
jbe
mov
jmp
mov
pop
mov
xor
sbb
in
pop
je
retf
icebp
rcr
xor
push
mov
call
or
arpl
or
push
or
jnp
(bad)
je
adc
inc
jne
icebp
scas
sbb
push
lea
sbb
xchg
out
sbb
clc
mov
je
cmp
inc
mov
mov
xchg
inc
mov
ja
fucomp
inc
add
sub
jle
add
in
cmp
je
push
push
icebp
ret
pusha
adc
bound
and
retf
call
movs
ret
ror
adc
jbe
ins
dec
call
mov
xchg
call
ret
mov
pop
push
call
inc
adc
jne
mov
inc
aam
xchg
loop
mov
push
xlat
aas
jge
mov
(bad)
fst
into
fstp
call
imul
xor
fcom
cmp
in
fcomp
outs
int
jmp
mov
mov
push
add
dec
fcomi
fbld
fld
call
mov
jmp
shr
ror
cmp
lock
fstp
je
ret
jb
or
add
movzx
push
call
js
xor
xor
inc
add
hlt
lea
ins
call
in
push
test
push
adc
mov
mov
jle
mov
adc
push
test
cmp
add
aaa
dec
cmp
or
sub
loopne
sbb
mov
js
pushf
lea
rol
cmc
add
push
mov
call
(bad)
push
mov
cmp
je
cmp
jne
mov
ret
and
xchg
jns
dec
sub
add
dec
dec
add
imul
add
cmp
jb
fs
or
loop
hlt
lahf
jns
add
jge
push
pop
adc
ret
pop
(bad)
dec
call
pop
aas
pop
add
inc
fmul
hlt
sti
fwait
out
call
test
stos
lea
mov
mov
call
jmp
mov
pop
xchg
ret
dec
dec
pop
data16
jne
mov
fcom
jne
fdiv
jmp
fld
mov
dec
in
dec
add
dec
jle
mov
lahf
fs
add
test
call
add
cli
sbb
inc
or
pop
mov
sbb
cmp
jl
jmp
pop
fstp
jmp
movzx
mov
or
cmp
cmc
mov
inc
ins
or
out
(bad)
fbstp
inc
mov
fmul
inc
fstp
inc
mov
jmp
ja
or
mov
jmp
cmp
jge
(bad)
jne
sar
(bad)
std
aas
je
movzx
cmp
jne
cs
cmp
jl
jmp
lea
inc
push
call
push
add
sub
sbb
and
dec
cmp
jbe
and
push
call
test
pop
or
sbb
arpl
or
push
inc
push
ffreep
ja
or
pop
cmp
mov
test
jle
test
ja
mov
mov
ins
dec
jne
jmp
mov
pushf
sub
add
push
adc
push
or
cmp
push
add
jne
sub
test
jle
imul
jge
pop
pop
call
add
call
mov
mov
jmp
sub
fsub
sub
retf
(bad)
push
pcmpeqw
dec
data16
dec
push
jl
add
cdq
cmp
jne
xchg
add
xchg
cdq
pop
(bad)
push
sbb
jle
xor
test
jle
mov
cmp
jne
mov
push
rol
jne
mov
out
adc
jno
mov
aas
ss
icebp
mov
cmp
je
mov
mov
add
std
aaa
icebp
mov
fist
call
call
std
push
push
inc
dec
jp
jo
cmp
(bad)
je
fsub
jge
inc
or
je
pop
adc
dec
mov
fsubr
jne
test
fdiv
out
xchg
mov
lods
call
shr
out
idiv
dec
cmp
mov
jl
mov
imul
cdq
idiv
jmp
aas
jl
cmp
int
xor
std
cmp
mov
sub
sar
jmp
dec
cs
and
dec
mov
fsubr
call
mov
movs
sbb
inc
mov
shl
pop
mov
div
call
arpl
(bad)
shl
pop
mov
adc
ja
mov
cmps
add
cmp
je
push
inc
lock
mov
push
push
push
mov
pop
adc
xor
and
adc
dec
fadd
dec
cmp
lock
jne
push
add
jns
in
sbb
pop
cmc
adc
imul
dec
call
push
lea
call
xor
mov
adc
xchg
into
pop
jmp
fadd
nop
sub
sub
js
icebp
mov
dec
add
pusha
mov
cmp
cmovge
jmp
test
lea
inc
stos
add
sar
retf
pop
cmp
js
imul
add
mov
ror
cmp
mov
cmp
je
mov
sub
cmp
je
mov
clc
add
(bad)
push
repz
mov
je
mov
adc
adc
pop
jne
and
mov
and
jg
xor
cmp
leave
cmp
je
push
push
scas
aas
xor
adc
mov
je
push
xchg
mov
(bad)
(bad)
in
and
out
push
cmp
adc
adc
and
inc
inc
sbb
add
std
ja
pop
retf
jnp
dec
mov
mov
dec
xchg
pop
pop
and
test
lea
sub
cmp
mov
mov
pop
mov
(bad)
jbe
loopne
mov
je
dec
mov
ja
xor
dec
xor
es
mov
jne
inc
shl
call
mov
les
mov
add
ins
js
sbb
cmp
jmp
inc
loop
or
inc
inc
add
jns
xor
xor
cmp
push
add
call
(bad)
inc
add
pop
ins
pushf
lea
cmp
pusha
cdq
cmp
inc
fs
sub
jne
sbb
adc
ss
test
jle
or
lea
pushw
sbb
inc
inc
cmp
inc
(bad)
js
or
pop
add
inc
mov
jmp
movzx
or
out
add
shl
mov
dec
inc
mov
jg
sub
push
jo
(bad)
cdq
idiv
imul
js
jge
adc
inc
inc
push
mov
sub
lea
push
call
mov
mov
or
cmp
mov
jge
nop
mov
into
sub
sub
cmp
jne
mov
inc
add
das
add
ja
dec
pop
mov
fs
sub
pop
xor
dec
push
mov
loope
and
mov
sub
adc
outs
jo
dec
adc
in
sub
cld
aaa
cmp
ins
je
pop
out
push
add
push
push
call
or
sbb
sbb
or
jns
je
add
inc
js
push
mov
fstp
push
push
lods
loope
jg
call
call
pop
jnp
adc
xor
ins
add
loope
call
jne
or
sbb
js
xor
xor
jge
xor
into
call
push
push
push
call
stc
out
pop
push
mov
std
dec
call
ret
je
push
out
(bad)
out
sbb
push
mov
mov
fsubr
inc
and
and
imul
or
jge
nop
jne
rep
mov
adc
jo
je
and
pop
std
call
jb
(bad)
mov
ins
push
stos
and
stc
or
sti
ja
icebp
push
sbb
xlat
adc
pop
cmp
jl
sub
fcom
mov
pop
mov
push
mov
lea
add
push
xor
fstp
ficomp
shr
sub
test
out
lods
xor
cmp
cwde
(bad)
fldz
jmp
js
call
hlt
xor
cmp
fist
inc
inc
(bad)
mov
mov
dec
mov
idiv
inc
adc
test
dec
jl
inc
movs
add
dec
cmp
xchg
push
inc
loopne
jge
loope
call
mov
inc
and
mov
lock
mov
(bad)
outs
lock
sbb
movs
iret
call
sbb
cmp
jno
(bad)
cwde
loope
iret
push
call
fldz
push
push
add
icebp
mov
test
push
stc
call
in
fcom
loopne
lock
aam
lea
jge
cmp
jne
adc
inc
les
jne
lahf
fcomp
jg
test
add
call
mov
je
mov
add
inc
jg
js
clc
cmp
dec
or
dec
or
and
sbb
mov
xchg
pop
or
cmp
test
jbe
jnp
test
add
push
inc
pop
std
sti
pop
ret
push
call
sub
(bad)
cmp
inc
loopne
inc
(bad)
loopne
aam
or
psrld
sub
and
mov
je
jne
add
mov
call
pop
in
or
jle
cmps
loopne
(bad)
repz
mov
(bad)
dec
mov
add
rol
je
inc
(bad)
jg
pop
aam
add
mov
mov
jmp
add
rcr
push
sti
add
push
sbb
cmp
add
loop
xchg
xlat
sbb
(bad)
cmp
rcl
xor
mov
jl
call
inc
(bad)
jmp
push
add
lock
cmp
ror
push
jmp
cli
cmp
rcl
cmp
cmp
push
icebp
inc
push
xchg
push
or
loopne
call
cmp
or
jne
and
cmp
inc
jle
mov
adc
push
mov
call
in
xor
fdiv
jg
ret
push
cmp
jl
xor
mov
cmp
xor
cmp
(bad)
jg
hlt
call
jmp
pop
inc
int3
fild
add
inc
mov
pop
fmul
shl
mov
sbb
jle
fst
jmp
mov
push
(bad)
out
sub
mov
mov
add
or
out
mov
jl
test
or
fsubr
xlat
int3
loop
add
aas
inc
(bad)
shl
inc
test
dec
lods
add
cmps
or
inc
pop
cmp
std
sub
sub
jns
inc
movs
mov
dec
push
add
or
mov
jle
jl
je
mov
cmp
dec
fsubr
fst
fstp
je
mov
repz
mov
cld
pop
add
inc
or
add
sbb
(bad)
inc
les
fadd
shr
sar
call
pop
add
clc
add
cmp
mov
jl
mov
xlat
in
and
fbstp
jg
add
gs
das
in
out
or
mov
inc
pop
dec
or
rcr
mov
(bad)
adc
in
xor
add
pop
cmp
inc
ret
cmp
add
adc
shr
adc
cmp
cld
pop
fistp
loopne
cld
leave
ret
xor
leave
ret
addr16
lds
jne
and
cs
cmps
jne
and
jmp
fisttp
push
in
(bad)
js
xor
mov
(bad)
mov
or
xchg
or
pop
add
jl
or
aaa
daa
pop
cmp
pop
pop
pop
mov
pop
mov
push
out
cdq
imul
sbb
lds
mov
sbb
mov
adc
cmp
dec
xor
jno
test
sub
call
jbe
add
(bad)
aad
jge
test
stos
je
adc
cmp
jne
dec
push
vcvttss2si
scas
ret
fwait
into
loopne
cmovp
jne
cld
jle
icebp
outs
rcl
fdivrp
(bad)
jmp
jmp
mov
test
mov
rcr
jge
mov
addr16
enter
inc
or
sub
dec
push
(bad)
push
ret
push
inc
mov
call
push
call
hlt
lods
(bad)
pop
jne
push
pop
in
and
(bad)
cmp
cmp
ja
cmp
inc
or
movs
jl
add
clc
popa
jge
int3
jl
mov
outs
std
push
call
jb
stos
push
sub
mov
enter
arpl
sbb
sbb
push
add
stc
enter
jne
cld
push
ins
stos
pop
in
rcr
jae
into
test
(bad)
out
cmp
imul
out
add
ja
cs
call
jnp
std
ja
fstp
fild
fsub
call
ss
test
sbb
inc
test
fs
push
ins
cmp
lds
out
push
xchg
(bad)
ret
pop
addr16
push
push
push
jb
retf
sbb
and
shl
cmp
fst
jg
adc
jg
dec
cmp
jl
add
mov
(bad)
in
mov
inc
jmp
cmp
jecxz
iret
pushf
into
call
mov
pop
or
inc
ror
mov
push
call
sub
arpl
adc
in
in
outs
or
cmp
je
outs
add
mov
mov
cmp
push
push
mov
call
fld
lock
sbb
das
or
sbb
enter
arpl
retf
cs
hlt
inc
call
mov
mov
or
add
mov
pop
jmp
xor
jmp
aas
(bad)
loope
xor
cmp
push
push
push
fld1
push
fstp
mov
test
mov
je
sar
mov
(bad)
jle
add
jle
add
cmp
jne
jb
inc
(bad)
jmp
mov
push
push
outs
fdivr
stos
fdivr
push
jg
outs
add
jne
mov
call
or
inc
xor
jmp
inc
sub
inc
or
call
or
inc
cmp
dec
cmp
jmp
adc
adc
ins
call
mov
jne
and
jmp
jge
call
cmc
(bad)
(bad)
(bad)
cmp
pop
clc
jle
push
push
lea
or
clc
mov
inc
jne
mov
cmp
loopne
pop
add
enter
outs
pop
cmp
mov
cmps
into
call
hlt
cmp
jl
fild
cld
jg
mov
jmp
cmp
jge
inc
rcr
mov
mov
adc
jbe
cld
mov
cld
test
sub
lock
cmp
sahf
cmps
inc
je
(bad)
xor
adc
mov
xchg
jmp
fstp
popa
mov
jle
push
push
push
jle
mov
clc
call
(bad)
push
aad
inc
xchg
inc
jmp
mov
out
shl
inc
xlat
js
or
mov
(bad)
inc
jnp
sub
inc
cld
js
mov
scas
add
mov
add
push
add
push
les
xchg
addr16
push
inc
mov
mov
xor
test
jge
mov
jmp
push
sub
imul
xor
push
sar
push
push
call
loop
icebp
mov
pop
add
je
jge
lea
and
mov
jle
jmp
nop
mov
or
pop
mov
test
push
je
dec
xchg
cmp
sbb
jp
jle
pop
mov
clc
push
jl
(bad)
fist
and
mov
je
cmp
jl
outs
pop
jmp
mov
add
xchg
in
xor
mov
mov
mov
mov
call
aaa
push
std
push
cmp
jne
cmp
test
and
cmovnp
xor
pop
cmp
mov
mov
add
sbb
add
mov
aas
pop
add
add
gs
push
out
push
stos
pop
jne
or
out
sbb
push
push
aam
cmp
inc
sbb
mov
or
cmp
ror
fist
mov
(bad)
inc
js
jg
test
jne
leave
inc
shr
loop
pop
pop
inc
test
mov
adc
mov
push
test
jne
mov
sbb
ret
enter
out
fild
jmp
and
dec
pushf
push
and
xor
or
in
call
addr16
inc
add
outs
jge
ror
mov
test
dec
xor
(bad)
out
jmp
mov
inc
cmp
imul
in
sbb
(bad)
les
sbb
test
test
cmc
jmp
pop
fstp
push
rol
icebp
(bad)
jmp
dec
and
jne
fwait
mov
call
(bad)
cmp
mov
and
sar
mov
jmp
inc
cmp
loopne
push
mov
cmp
call
jge
add
and
out
cmp
jle
jg
aaa
pusha
dec
sbb
inc
lock
ror
call
(bad)
mov
add
shl
inc
lock
xor
pop
adc
mov
in
mov
dec
test
jle
jg
add
shl
lea
hlt
mov
jmp
in
cdq
test
aad
or
aad
fcomp
inc
sub
shr
mov
lea
push
dec
dec
fidiv
ins
mov
les
mov
mov
jmp
sbb
cmps
mov
cmp
jg
aas
push
lods
loopne
or
dec
push
mov
jmp
retf
movzx
clc
add
add
lock
fdiv
mov
in
or
fadd
loope
mov
jle
cmp
(bad)
jmp
clc
add
jmp
mov
shr
and
push
dec
mov
daa
mov
adc
ins
hlt
push
dec
dec
add
in
cmps
pop
jmp
test
sahf
mov
push
sub
push
mov
int3
repnz
leave
out
mov
ja
fcmovnbe
out
sbb
ja
inc
cld
mov
pushf
jae
sub
cmc
add
push
push
inc
mov
adc
sbb
or
fdiv
(bad)
test
je
jp
add
js
push
call
pop
(bad)
das
je
iret
add
jge
rol
mov
xchg
xor
push
or
jo
push
call
add
call
jmp
add
in
pop
ins
loopne
cmp
and
xor
inc
jne
add
jne
adc
add
aaa
fst
mov
jmp
loopne
out
push
jl
inc
mov
inc
or
xchg
(bad)
dec
cld
xor
or
mov
cmp
jle
mov
fnstsw
xor
mov
add
dec
inc
mov
xchg
loopne
out
pop
adc
lock
lock
xchg
lea
mov
dec
cmp
jge
or
(bad)
mov
rol
pop
or
add
or
cmps
mov
jmp
mov
lods
jns
(bad)
jg
into
call
pop
adc
add
jnp
inc
dec
inc
ret
je
xor
push
push
push
dec
push
push
pop
mov
scas
pop
hlt
jecxz
xor
idiv
aaa
call
hlt
call
ds
jg
mov
bound
pop
dec
jmp
dec
mov
nop
ret
retf
inc
pushf
js
sbb
and
xor
fadd
icebp
push
call
shr
mov
add
add
ret
inc
add
ds
outs
push
call
inc
or
sub
and
adc
test
or
cwde
cmp
sbb
std
dec
pop
or
jl
mov
repnz
push
jae
xchg
jo
mov
xor
xor
or
xor
inc
add
jmp
sahf
retf
cmp
adc
mov
adc
cli
xchg
shl
dec
dec
xchg
dec
adc
adc
sbb
shl
pop
dec
or
inc
jmp
adc
(bad)
add
xor
cmp
and
cs
push
push
retf
mov
jmp
rol
push
mov
call
(bad)
out
xor
cmp
jl
cmp
jg
mov
cmp
jle
dec
ret
(bad)
pop
sbb
and
add
jmp
push
add
push
add
adc
mov
push
jle
(bad)
push
ud0
xor
cmps
loopne
cs
sub
aad
inc
movs
dec
cmp
jge
mov
jne
and
jmp
pop
dec
mov
fdivr
lock
sub
or
cmps
dec
jo
sbb
pop
test
add
jne
or
out
mov
cwde
jmp
and
fdivr
xor
(bad)
push
sub
pop
cdq
div
addr16
lock
push
pop
pop
fcomp
add
cmp
add
adc
inc
or
sub
clc
aaa
je
scas
ret
cmp
pop
cmp
jge
sub
aas
hlt
cmp
jo
in
imul
sub
rcl
or
jmp
and
ins
fcmovbe
mov
stc
mov
jne
enter
inc
jge
mov
sar
call
(bad)
jmp
mov
cmp
jne
cmp
sar
test
mov
mov
jne
es
push
mov
mov
mov
test
clc
or
push
push
push
or
xchg
inc
or
dec
cmps
add
das
sbb
je
jmp
aad
pop
imul
cdq
lea
push
call
mov
out
push
mov
sub
mov
add
clc
dec
add
call
jge
es
into
ja
cld
dec
cmp
je
cmp
je
cdq
inc
add
jg
(bad)
adc
push
push
call
inc
or
jg
cmp
jg
push
cmc
sti
aas
and
add
push
call
lahf
or
je
loope
(bad)
(bad)
cmp
push
push
jne
push
jmp
dec
adc
adc
fcom
loope
push
call
call
rcr
pop
cmp
dec
xchg
leave
loope
ds
push
xor
cmp
je
fist
or
mov
mov
js
push
push
call
test
push
push
gs
call
and
add
sahf
adc
call
mov
pop
push
pop
pop
je
push
push
jmp
in
jmp
jne
and
adc
ds
call
push
sbb
popf
mov
mov
ins
sbb
test
call
or
mov
pop
je
dec
cmp
je
jne
or
jp
push
mov
sar
sbb
lock
push
lea
(bad)
clc
dec
mov
lea
call
fcom
pop
pop
xor
sahf
add
push
loop
je
xor
lock
cmp
je
mov
dec
sar
cmp
sti
je
cmp
je
cmp
and
je
jl
push
mov
add
cld
call
je
mov
jmp
mov
mov
jmp
push
sub
push
loopne
ret
std
lahf
push
call
mov
pop
jl
lods
mov
je
movzx
xchg
mov
inc
cmp
push
cmp
je
ins
adc
add
mov
addr16
or
mov
cmp
imul
test
add
xchg
rol
push
push
pop
inc
call
jne
or
dec
and
or
ror
sbb
pop
cmp
jg
je
mov
fs
test
mov
jl
or
mov
je
(bad)
fild
sub
jns
neg
cmp
jg
mov
fisubr
inc
or
cmp
fadd
inc
mov
adc
imul
inc
inc
cld
scas
lahf
adc
jne
sahf
mov
add
(bad)
push
xlat
mov
add
clc
jecxz
icebp
pop
or
push
call
jecxz
shl
xchg
or
mov
add
daa
sub
ret
jecxz
mov
or
inc
jge
add
clc
and
mov
cmp
push
inc
or
xchg
(bad)
adc
bound
xchg
xor
mov
xor
sub
enter
mov
cmp
aas
mov
mov
inc
mov
jmp
jmp
cld
mov
icebp
mov
in
or
pop
add
jmp
(bad)
fistp
sbb
pop
jmp
lea
jmp
push
mov
test
jg
push
jmp
pop
xor
inc
or
arpl
jl
inc
mov
fwait
push
icebp
fist
mov
stos
mov
push
mov
(bad)
jmp
push
or
jnp
sub
fisubr
adc
data16
fadd
xchg
adc
and
out
loop
and
sar
adc
or
jne
mov
adc
cmp
jne
push
push
mov
call
pop
pop
imul
push
call
popf
dec
mov
adc
lea
call
mov
mov
xor
mov
call
call
and
inc
cld
ja
dec
je
cmp
je
lea
mov
sti
std
call
loopne
push
sahf
ins
cmp
xor
push
add
ins
push
call
and
jge
add
or
(bad)
in
jo
int
sbb
mov
push
push
mov
add
mov
test
je
mov
dec
cmp
jg
add
inc
jmp
test
je
add
arpl
xor
aam
ret
stos
jmp
push
ss
stos
dec
cmp
test
xchg
add
mov
adc
jg
fistp
add
sbb
sub
or
mov
jmp
dec
sbb
xor
mov
mov
push
sub
mov
and
mov
dec
add
jo
mov
add
call
inc
and
sub
add
ja
cmp
xor
cwde
and
xor
fbld
call
dec
push
call
shl
je
mov
mov
fild
push
out
jb
and
faddp
inc
adc
push
mov
fild
mov
mov
dec
iret
cmp
or
jo
call
fild
push
or
jmp
les
push
call
call
mov
inc
and
or
(bad)
(bad)
std
(bad)
cmp
adc
or
jg
add
adc
cmovl
lods
cwde
adc
call
data16
cmp
dec
push
lea
push
call
fdiv
mov
cmp
add
test
fbld
lock
pop
js
cmp
je
sbb
add
inc
sbb
out
lods
or
or
jg
or
sub
dec
(bad)
out
outs
sub
cmp
call
das
out
inc
pop
push
mov
mov
mov
call
lds
inc
pop
cmp
jne
sbb
add
mov
xchg
inc
and
add
imul
adc
push
call
clc
cmp
push
add
fisttp
mov
call
push
adc
inc
and
inc
aas
gs
mov
call
xor
cmp
mov
je
mov
mov
mov
push
mov
call
(bad)
sub
clc
fidivr
jmp
movntps
inc
cmp
jle
and
cmp
jl
cli
sahf
jle
pop
xor
jg
mov
call
xor
jl
cmp
or
push
iret
call
push
pusha
sti
inc
pop
test
leave
dec
cld
es
xchg
push
mov
push
mov
sub
test
sub
mov
cmp
jl
ret
jg
xchg
jbe
ffreep
(bad)
push
je
add
jmp
lea
ins
mov
test
popf
mov
je
not
ins
fsub
loopne
dec
cmp
inc
call
cmps
pop
push
mov
call
test
jne
sbb
div
jl
inc
add
sub
je
mov
mov
mov
stos
pusha
pop
xor
push
push
int3
mov
mov
pop
je
cmp
jge
fistp
scas
mov
cmp
jl
jmp
adc
add
pop
call
jmp
cmp
je
out
cmp
jle
mov
jmp
dec
add
add
xor
ret
(bad)
cmp
std
jg
test
neg
add
call
jne
push
and
fstp
jle
arpl
mov
rol
dec
out
retf
cld
sub
jns
xor
mov
int
jmp
push
xor
push
mov
add
fild
js
aaa
mov
call
stos
sbb
clc
jne
and
shl
or
cli
sbb
xor
sar
and
(bad)
shl
or
das
mov
mov
cmp
lods
shr
sbb
push
fist
or
jmp
repnz
adc
shr
enter
sub
(bad)
data16
dec
cmp
cmp
into
into
dec
inc
fldcw
inc
xchg
mov
(bad)
or
jne
and
xlat
sar
inc
cld
dec
dec
inc
dec
sub
in
dec
pop
xor
leave
add
sub
dec
outs
in
fdiv
inc
cmc
push
dec
or
icebp
(bad)
jmp
aaa
icebp
lahf
pop
xor
pop
stc
iret
call
clc
cmp
mov
test
jg
adc
inc
push
mov
jne
pop
push
jge
jecxz
inc
inc
add
jne
cli
mov
mov
loope
mov
jmp
push
call
adc
push
push
add
call
push
dec
add
(bad)
or
(bad)
fwait
add
mov
push
lea
sti
push
call
push
mov
call
pop
sbb
sbb
sub
cmp
sbb
lods
jmp
inc
jl
and
mov
loop
mov
push
call
arpl
loopne
mov
adc
lea
clc
(bad)
retf
cmps
je
loop
cmp
add
mov
lea
rcr
mov
adc
mov
mov
pop
je
push
call
push
push
push
call
add
cmps
mov
push
adc
pop
lock
call
bound
push
inc
sbb
mov
sti
mov
pop
je
call
mov
mov
enter
push
call
dec
push
mov
pop
call
popf
xchg
pop
sahf
test
inc
sub
daa
xchg
ret
fwait
call
add
cmps
mov
mov
push
or
add
xchg
mov
pop
sub
sbb
call
pop
jle
pmullw
lds
std
inc
(bad)
fdivr
iret
jge
mov
cmp
les
js
or
mov
call
fstp
or
adc
dec
or
add
ja
addr16
mov
call
mov
call
pop
cmc
push
mov
cmp
cmp
cli
cmp
rcr
(bad)
jle
dec
mov
jmp
cmp
mov
cmp
inc
lea
jge
inc
mov
clc
sub
inc
xor
mov
not
ffree
mov
adc
enter
jge
dec
clc
scas
jbe
adc
call
ret
cli
call
push
mov
dec
clc
sub
sub
jns
xor
mov
jmp
or
push
hlt
jge
loopne
jmp
mov
shl
mov
sbb
jle
and
int3
jl
mov
cmps
(bad)
lock
push
mov
call
dec
add
mov
das
or
hlt
retf
mov
je
adc
mov
xor
pushf
js
add
xchg
inc
mov
xor
stos
mov
push
mov
or
inc
adc
sbb
inc
and
adc
jne
int3
(bad)
(bad)
outs
mov
inc
cmp
or
inc
sub
test
push
(bad)
out
mov
push
fdivr
pop
sar
fwait
mov
push
jne
mov
lea
add
fcom
pop
pushf
and
mov
sbb
cmp
push
cli
into
inc
adc
fidiv
or
xchg
mov
pop
add
push
push
shr
lahf
sti
test
cmp
jg
sub
cmp
jle
(bad)
aas
ss
enter
inc
mov
je
cmp
push
pop
rcr
sbb
inc
or
ret
pushf
mov
ds
dec
dec
push
(bad)
cmp
xor
cmp
je
mov
add
cmp
inc
adc
or
pop
dec
push
mov
jne
stc
out
inc
adc
loope
push
xchg
(bad)
(bad)
jmp
mov
sbb
push
mov
add
test
dec
push
aaa
xor
pop
adc
icebp
call
test
aad
call
pop
mov
fdiv
dec
mov
call
call
mov
popf
or
sbb
jbe
icebp
or
xchg
lea
cmp
sbb
xchg
sar
adc
scas
clc
mov
jle
sar
test
movs
mov
mov
test
jmp
stos
and
cmp
je
cmp
jne
push
outs
or
add
pop
push
call
sub
sbb
push
add
mov
add
jb
jecxz
xchg
xchg
shl
(bad)
cmp
adc
pop
ins
mov
nop
ret
iret
call
sti
cs
popf
test
adc
out
ret
call
push
sbb
bound
out
mov
add
cmp
cmp
fucomi
add
cmp
xchg
(bad)
cmp
jno
ja
mov
jge
call
inc
(bad)
push
je
cmp
jle
lock
xor
mov
push
call
cmp
or
(bad)
call
cld
jne
jl
jmp
loopne
cmp
mov
jle
mov
sub
push
in
idiv
je
lea
test
jne
mov
jl
push
pop
in
cmp
jl
and
inc
mov
jl
lea
shl
call
cmc
push
add
mov
dec
hlt
inc
cmp
int
test
dec
inc
push
mov
fadd
aaa
pop
adc
mov
push
push
cwde
dec
mov
inc
adc
jp
out
adc
(bad)
inc
cmp
jge
mov
lea
cmp
jge
mov
push
fldz
test
push
xor
push
push
je
dec
inc
(bad)
(bad)
mov
fstp
cmp
je
cmp
je
fild
fcomp
into
jbe
ja
add
shr
jno
pop
add
je
int3
getsec
adc
add
fild
pop
add
(bad)
fsubr
fdivrp
call
(bad)
out
or
test
jmp
pop
enter
loopne
and
test
test
cmp
xchg
cmp
fiadd
mov
stos
in
pop
lock
dec
and
fld
ret
mov
mov
add
cmp
add
stos
(bad)
call
ins
in
(bad)
fist
test
jl
mov
mov
jmp
inc
cmp
je
sub
push
lea
jg
adc
(bad)
call
mov
pusha
out
sbb
leave
adc
jmp
je
inc
das
or
fdivr
mov
pusha
pop
or
(bad)
push
push
stos
iret
call
jle
or
je
jmp
mov
adc
cmp
hlt
jg
xchg
lea
lea
shl
mov
sbb
sbb
ret
adc
xchg
test
push
cmps
lock
inc
in
pusha
jg
mov
jmp
mov
das
ret
add
mov
js
mov
add
push
cmp
pop
mov
loopne
test
inc
rcr
push
jmp
daa
adc
add
jmp
cmp
jge
inc
add
jae
dec
bound
pop
nop
or
jp
mov
cli
inc
inc
out
ins
cmp
daa
pop
jmp
jbe
lea
outs
int
and
jmp
dec
jge
push
cmp
jne
inc
iret
ud0
loopne
in
jl
jmp
inc
inc
js
xchg
lock
fdiv
jge
sub
das
je
mov
mov
adc
sub
mov
mov
mov
push
lea
lea
push
outs
sub
fs
ja
(bad)
and
push
call
xchg
hlt
mov
mov
push
call
jg
mov
test
hlt
add
adc
fmul
imul
pop
call
dec
in
mov
cmp
call
push
std
mov
fisub
dec
xor
clc
std
inc
in
push
add
mov
mov
call
mov
call
hlt
call
ror
addr16
xchg
add
loopne
cmp
jl
cmp
cmps
test
je
aas
(bad)
mov
ja
mov
push
cli
push
mov
call
adc
and
pusha
test
cmp
je
cmp
je
push
push
push
push
push
add
int
jns
or
rsqrtps
inc
cmp
mov
push
jge
inc
dec
or
sar
add
fst
push
call
(bad)
idiv
mov
(bad)
(bad)
(bad)
jmp
loopne
mov
adc
and
push
mov
ror
inc
or
or
pop
lea
xor
and
sub
or
fist
lock
mov
shl
xor
or
sbb
jge
xor
pop
add
mov
js
gs
cmp
fst
pop
call
push
mov
inc
int3
popa
imul
mov
push
and
xor
or
mov
call
js
rol
or
mov
jmp
mov
clc
aas
icebp
add
mov
dec
aam
push
loopne
push
xlat
xlat
jge
sbb
(bad)
jge
lea
mov
jle
mov
sub
add
add
fld
jl
xchg
(bad)
(bad)
je
loope
lea
pop
push
call
pop
out
and
dec
lock
lock
jmp
(bad)
jmp
shl
add
jne
shl
inc
cmp
int3
mov
mov
rol
fadd
hlt
pusha
xor
ret
xchg
aad
sbb
fwait
ds
aam
iret
movs
jne
adc
sub
mov
shr
aaa
jno
push
and
push
aam
sbb
cs
iret
adc
inc
jmp
or
fcom
lock
mov
popf
sbb
popf
imul
jge
lea
hlt
and
shl
inc
hlt
mov
mov
(bad)
(bad)
call
cmp
xchg
mov
(bad)
call
mov
push
add
inc
(bad)
cmp
mov
jl
sbb
lea
shl
inc
aam
and
cmovb
or
mov
cmp
sbb
mov
pop
int
jo
out
or
fcom
call
sub
js
dec
add
call
jne
shl
aaa
cwde
dec
mov
ret
mov
mov
je
mov
jmp
dec
adc
(bad)
cmp
sti
mov
jl
cmp
je
inc
adc
cmp
sbb
adc
pop
mov
sub
loopne
inc
in
or
cld
add
pop
(bad)
mov
jg
cmp
jne
or
ret
pop
in
pop
lea
btc
and
and
jg
sbb
xchg
sbb
pop
jne
cmp
lock
lahf
icebp
adc
lea
sbb
movs
scas
sub
inc
cmp
mov
jge
mov
jmp
xor
push
push
mov
sbb
call
push
or
call
add
test
pop
arpl
or
ret
call
mov
add
sbb
jmp
mov
dec
cmp
pop
add
or
shl
pop
inc
add
and
je
or
movs
push
rcl
je
xor
movs
xor
adc
mov
adc
test
pushf
mov
jne
mov
cmps
retf
pop
push
sbb
clc
sbb
call
add
add
inc
in
jg
fadd
ja
inc
in
pop
add
mov
jl
hlt
jge
ja
lea
cmp
mov
stos
cli
jmp
cmps
adc
(bad)
call
cmp
je
jae
or
je
ja
mov
mov
dec
aam
aam
loope
les
and
cdq
clc
and
push
call
cld
or
fsubr
mov
or
cmp
(bad)
mov
les
lds
jnp
test
jl
sbb
sbb
lea
fsubr
jnp
jg
fadd
call
and
hlt
push
rcl
aaa
mov
push
ins
inc
mov
xchg
(bad)
mov
xor
test
xchg
sub
adc
(bad)
and
lea
mov
inc
jmp
mov
ins
ficom
dec
cmp
jg
jb
push
adc
(bad)
mov
punpckhdq
mov
aam
jge
scas
push
psrad
pop
jecxz
mov
std
je
mov
sysenter
xor
(bad)
call
test
hlt
jmp
sbb
add
xor
icebp
cmp
les
dec
cmps
ja
jo
in
call
mov
outs
jp
add
inc
hlt
xor
loopne
xchg
jo
test
or
mov
mov
sbb
jge
cli
push
call
adc
add
jge
adc
pop
add
inc
mov
stos
adc
js
push
sbb
call
pop
(bad)
jle
jecxz
dec
int3
jge
pop
jne
dec
loope
(bad)
jge
jne
dec
mov
dec
hlt
call
jo
js
sti
shr
add
fcmovb
call
enter
mov
in
mov
into
mov
add
lea
or
adc
ret
mov
ins
xchg
iret
(bad)
sbb
clc
outs
jmp
mov
(bad)
(bad)
jmp
adc
or
adc
mov
cmp
inc
push
jge
je
call
cdq
mov
into
call
aam
in
jge
lock
sub
cmp
jg
push
inc
or
out
add
mov
test
jle
sahf
out
pop
mov
je
or
push
clc
ficom
jg
cdq
mov
add
cld
pop
xor
fwait
and
jne
sub
and
push
mov
or
shl
jmp
call
fistp
clc
jle
dec
or
inc
mov
xor
push
pop
push
mov
jge
jge
scas
pop
sub
xchg
sub
clc
push
push
arpl
or
mov
cmp
dec
push
lahf
or
movs
adc
or
sbb
loop
fwait
cmp
push
cmp
jne
test
movs
scas
push
or
call
sub
imul
jb
mov
add
and
call
arpl
xchg
push
call
fwait
mov
call
pop
ja
cmps
adc
cmp
test
dec
push
xor
je
dec
inc
add
mov
xor
xor
loope
adc
push
cmp
sub
xor
cmp
je
mov
mov
push
lock
mov
xchg
dec
sbb
call
xor
cmp
cwde
mov
or
or
fcom
cld
jg
lea
mov
mov
call
add
push
pushf
outs
call
into
dec
call
or
inc
ret
push
push
movhps
out
sbb
jl
cwde
mov
clc
jno
adc
jb
lahf
call
lahf
call
dec
out
mov
je
inc
adc
test
pop
clc
clc
je
mov
(bad)
scas
lds
cmp
mov
jle
ins
mov
call
movzx
cmp
je
leave
ror
adc
dec
or
clc
cmps
cli
pop
sbb
adc
mov
dec
push
cld
sbb
test
jg
movzx
out
jge
jmp
rcl
and
fbld
cmp
push
dec
fst
inc
or
arpl
pop
sbb
fwait
jmp
pop
mov
aad
cmp
mov
xchg
rol
int3
sub
inc
int3
lea
push
adc
pusha
dec
add
call
je
call
push
cmp
je
push
push
sub
mov
int3
jne
dec
or
call
xor
push
mov
mov
cmp
jne
mov
cmp
jle
dec
sahf
rcl
mov
pop
sub
jp
das
cmp
je
push
iret
jbe
call
shld
retf
mov
je
sar
mov
out
jmp
sti
xor
mov
push
call
sahf
push
xor
mov
push
call
lea
call
add
xor
in
and
push
jmp
push
mov
sub
mov
mov
pop
sub
mov
dec
or
push
or
xchg
inc
jno
xchg
enter
call
adc
push
mov
jne
cmp
mov
inc
xor
mov
mov
inc
sub
cmp
cwde
mov
lds
cmp
dec
add
cli
jne
cmp
add
adc
mov
ja
(bad)
fdiv
sbb
sbb
mov
xchg
sub
clc
or
xor
add
mov
ds
adc
ret
mov
jnp
(bad)
jne
bswap
call
out
cli
(bad)
jmp
(bad)
fnsave
or
sub
dec
mov
je
sbb
rol
es
ss
rcr
sub
int3
(bad)
dec
push
loopne
out
(bad)
jg
jle
je
cmp
je
cmp
je
lea
data16
dec
add
push
mov
sbb
cmp
mov
call
or
jmp
test
mov
mov
push
mov
call
pop
xchg
push
lea
push
call
mov
xor
jne
xchg
je
mov
ror
and
les
add
inc
or
add
pop
jbe
xchg
adc
rcl
in
cld
push
cmp
jne
call
aad
mov
shl
call
jne
cmp
and
dec
add
call
adc
jg
jnp
xor
sbb
movs
jle
xor
enter
mov
cmp
je
call
jge
mov
sbb
push
(bad)
mov
or
cmp
add
popa
ja
jmp
mov
mov
mov
fist
push
push
call
ds
mov
push
call
call
(bad)
jnp
pop
pop
jmp
cmp
iret
call
rcl
sbb
mov
mov
add
mov
psubsb
mov
or
mov
or
cmp
push
cmps
mov
scas
test
jne
lea
call
jmp
(bad)
adc
cmp
push
(bad)
sbb
call
and
dec
cmp
fs
mov
mov
sti
inc
cmps
xor
les
sar
pop
retf
call
or
mov
dec
cmp
mov
push
into
add
jp
mov
adc
popf
add
into
mov
repz
psubusw
lea
fistp
pop
add
inc
aam
cmp
inc
nop
int3
jl
daa
fld
fld
cld
adc
(bad)
sub
jp
jmp
jns
jns
popf
add
call
aas
idiv
jnp
jbe
pop
cmp
jne
mov
inc
aam
and
(bad)
std
mov
pusha
cmp
jne
mov
inc
fdiv
cmp
push
add
out
add
jecxz
adc
and
or
sbb
jcxz
or
lea
push
rep
call
lea
or
xor
in
movs
movs
mov
xor
in
fnstenv
xchg
mov
add
push
xchg
rol
loop
sbb
jnp
scas
(bad)
call
or
test
jne
cmp
sub
call
sbb
push
jno
mov
call
add
mov
call
xor
(bad)
adc
call
hlt
pop
and
pop
jmp
lock
sahf
xchg
sub
mov
mov
clc
(bad)
push
je
dec
or
cmp
jne
mov
push
mov
inc
sbb
test
mov
pop
add
aam
inc
push
push
add
add
movs
je
mov
add
pop
jae
call
pop
pop
pop
mov
call
or
jns
(bad)
cmp
mov
inc
push
mov
je
mov
jae
cmp
jne
push
pop
lea
add
cmp
add
add
les
xchg
shl
(bad)
cmp
push
call
xor
mov
cmp
mov
mov
je
test
add
test
pop
push
inc
adc
mov
es
fwait
add
call
inc
fsubr
pop
sti
add
ret
clc
fnsave
mov
ja
and
jne
je
fs
xor
popa
fld
lods
jp
movs
fnsave
push
add
cdq
jnp
and
add
xchg
fisttp
mov
test
fimul
jmp
mov
mov
cmp
mov
ja
push
add
jno
jmp
mov
call
inc
xchg
std
xchg
xchg
push
loopne
jne
adc
aas
push
adc
mov
outs
clc
int3
cmc
retf
jmp
mov
jge
aas
xor
mov
mov
dec
sti
or
lea
inc
js
iret
(bad)
mov
mov
jo
push
call
xchg
test
loope
jecxz
je
fadd
les
data16
dec
je
lea
movs
jmp
lea
cli
(bad)
icebp
xor
mov
mov
add
sub
neg
sbb
mov
sub
jo
push
outs
ret
ja
(bad)
inc
push
push
out
aaa
jne
push
dec
push
call
sti
cmps
loopne
jnp
je
(bad)
jle
loop
jbe
pop
fadd
adc
push
jecxz
push
jmp
cmps
call
or
cmp
in
jp
jmp
rol
jbe
inc
cli
in
sub
call
jo
mov
inc
jg
inc
pusha
mov
fbstp
div
inc
popf
sbb
and
mov
mov
push
push
sbb
sbb
shl
inc
lea
int3
clc
psubsb
lahf
test
mov
jge
mov
and
sbb
mov
ins
ret
cmp
sub
iret
inc
dec
je
mov
loope
add
jge
cmp
dec
lea
(bad)
jle
mov
cmp
cmp
mov
jle
cmp
jg
cmp
mov
je
sub
test
and
xchg
mov
mov
outs
fdiv
sub
out
xchg
inc
sub
and
jne
jne
loopne
sub
call
cmp
push
fidivr
into
(bad)
js
jge
jnp
or
cmp
inc
jne
mov
jle
icebp
pop
(bad)
inc
mov
xor
and
or
(bad)
fnsave
inc
pop
cmp
dec
dec
inc
mov
add
lea
mov
mov
adc
mov
cmp
jge
mov
mov
lea
(bad)
jecxz
jg
int3
mov
mov
lea
cmp
jne
test
lock
adc
cmp
bswap
mov
arpl
adc
add
test
push
add
mov
or
inc
cmp
mov
cmp
jne
call
cmp
jne
cmp
je
cmp
sbb
inc
add
add
or
push
inc
jl
movzx
mov
jne
sar
adc
add
nop
sub
push
inc
mov
adc
mov
add
add
pop
call
inc
push
add
jge
addps
loope
ds
push
clc
adc
ja
(bad)
xor
fstp
cmp
dec
inc
jl
in
add
cmp
jg
mov
add
mov
mov
sub
jo
std
push
push
push
push
cmp
mov
add
repnz
adc
jns
das
lock
inc
hlt
pop
je
mov
lea
shl
push
call
cli
arpl
test
(bad)
jg
add
inc
xor
push
call
cmp
sar
add
mov
mov
fwait
or
std
fnsave
jge
add
test
enter
cli
fld
(bad)
jp
xor
push
mov
sahf
cmp
call
xor
xor
push
out
push
xchg
pop
mul
pusha
cli
(bad)
fucomp
cmp
call
mov
push
imul
scas
(bad)
inc
mov
add
push
mov
call
cmp
sbb
and
dec
inc
add
and
or
pusha
out
push
shl
aam
mov
call
aad
xchg
mov
lock
in
punpcklbw
pop
or
pop
inc
cmp
cld
push
call
push
je
inc
fs
inc
jne
add
test
adc
call
ret
shl
or
nop
sbb
xchg
lods
inc
add
cmp
add
pushf
aas
cmc
push
push
sti
hlt
bound
fild
fcomip
push
call
sub
inc
mov
add
push
push
push
sub
cli
or
call
call
dec
jmp
fs
nop
enter
push
jb
jbe
mov
pop
test
mov
dec
mov
add
or
(bad)
push
out
xor
push
iret
push
call
mov
call
lea
test
setl
cmps
je
mov
mov
(bad)
(bad)
dec
cdq
sub
mov
sar
add
sub
add
cmp
jge
mov
mov
sar
push
push
call
push
or
gs
push
add
jge
ja
jge
push
pop
aad
mov
adc
mov
mov
out
inc
adc
xor
ret
add
push
push
cli
mov
call
adc
scas
add
sub
inc
jne
jg
shl
and
movs
setl
movs
dec
and
add
mov
aaa
and
(bad)
jmp
add
icebp
mov
sbb
jne
cmp
mov
xor
es
dec
ror
pop
mov
mov
nop
jmp
jmp
add
dec
fild
xchg
shr
in
mov
outs
sub
hlt
rcr
sbb
clc
call
add
cli
push
retf
call
loopne
(bad)
test
mov
cmp
xchg
test
cmp
pop
sub
nop
clc
cmp
jne
push
adc
cld
frstor
sub
push
add
push
call
mov
sub
sbb
or
mov
inc
inc
push
push
push
push
call
mov
pop
sbb
cmc
adc
and
pusha
add
cmp
call
push
sbb
and
mov
sub
ror
lods
popf
test
pop
mov
adc
xchg
adc
ret
aaa
cwde
xor
cmp
jg
mov
hlt
pop
push
push
pop
mov
cmp
out
sbb
jge
add
test
mov
add
je
call
add
push
cmp
maskmovq
test
(bad)
mov
jne
push
push
call
sbb
(bad)
jg
cmp
icebp
add
push
or
jge
add
jne
lods
mov
adc
add
lds
pop
loopne
scas
cwde
sub
sub
into
icebp
aam
or
push
call
test
dec
sub
mov
sbb
inc
cmp
lea
jo
push
call
lds
push
cwde
inc
dec
jmp
(bad)
(bad)
lea
icebp
out
jle
js
mov
call
add
lea
jle
ja
cmp
push
movs
jp
push
movs
call
mov
push
fld
je
jmp
js
jne
mov
sub
test
mov
mov
pop
fld
cmp
cmps
mov
fs
cmp
jne
add
xchg
mov
leave
and
cwde
mov
fs
pop
push
call
sar
fs
sub
jg
fmul
push
push
push
mov
push
push
push
inc
in
push
in
mov
div
mov
es
je
xchg
sti
sbb
in
(bad)
test
and
xor
add
loopne
add
push
lahf
icebp
mov
test
stos
(bad)
jmp
outs
test
lea
lea
movs
lea
push
mov
std
jae
and
mov
movs
call
sbb
push
cmp
jge
push
sub
(bad)
mov
movs
es
movs
dec
dec
neg
push
call
test
lea
push
inc
jg
cmp
test
(bad)
enter
lea
call
mov
push
je
or
cmp
repnz
pop
retf
mov
and
or
add
jne
push
call
mov
xor
out
pop
adc
inc
or
pop
mov
sti
push
mov
sbb
mov
test
jne
push
call
test
pop
cli
push
lock
je
out
dec
sbb
out
dec
loopne
xchg
sub
sub
add
loopne
in
aaa
add
push
call
mov
push
inc
(bad)
bound
push
aad
fld
cmp
js
push
pop
inc
shl
mov
fwait
jmp
xchg
add
jmp
push
add
push
call
enter
je
dec
pop
arpl
xor
adc
mov
or
adc
adc
in
sbb
cmp
jne
push
cmc
mov
push
je
pop
sbb
inc
je
adc
inc
and
push
call
cmp
add
push
mov
pop
pop
pop
je
push
push
push
push
call
lock
mov
add
mov
ss
fs
mov
ja
dec
call
adc
jg
jnp
mov
pop
in
inc
mov
add
std
ret
jg
les
aam
mov
lea
push
and
(bad)
dec
push
xor
mov
add
mov
neg
sbb
and
ds
mov
daa
ss
or
jns
mov
mov
test
je
mov
lods
(bad)
cmps
(bad)
call
push
call
mov
and
push
push
xlat
cmp
icebp
mov
call
or
lea
fisubr
inc
(bad)
sbb
fdivr
mov
and
push
and
dec
enter
inc
lock
sub
call
(bad)
fild
mov
mov
mov
call
or
call
cdq
push
jne
aaa
mov
and
or
sbb
into
call
or
jbe
cld
push
ja
inc
call
jne
ja
out
jl
adc
rcr
sbb
mov
push
fcmovu
mov
je
ins
push
cli
mov
out
and
ss
loopne
test
or
test
(bad)
fisttp
xor
cmp
jne
cmp
jne
mov
cmp
mov
movs
(bad)
aas
push
adc
mov
mov
inc
mov
mov
mov
inc
add
dec
jne
xor
mov
mov
push
add
pop
adc
push
cmc
mov
inc
hlt
call
inc
loopne
adc
and
add
ja
jl
jle
mov
adc
push
aam
jmp
inc
imul
push
push
test
(bad)
push
dec
clc
push
push
push
call
sar
(bad)
sbb
cmp
loope
cmp
inc
or
imul
add
(bad)
and
adc
popa
jb
add
(bad)
loopne
in
add
cs
out
dec
(bad)
(bad)
cmp
xchg
add
mov
cmp
in
push
jl
mov
push
hlt
jmp
xor
int
jnp
pop
ja
outs
sbb
mov
jmp
sbb
jnp
ja
jb
add
jmp
addr16
jne
cmps
sub
enter
call
push
mov
mov
pop
shl
cmp
add
ret
push
add
(bad)
dec
add
dec
aam
test
(bad)
(bad)
push
shl
sbb
add
hlt
push
scas
push
cmp
inc
cmp
push
adc
cmp
push
mov
add
dec
cld
jns
aas
test
adc
adc
mov
cld
dec
cld
(bad)
mov
or
mov
jmp
push
call
add
cwde
jne
sbb
mov
mov
xchg
mov
fdiv
jle
add
sub
push
mov
sub
dec
rol
dec
rcr
cmp
stc
sub
sbb
(bad)
(bad)
jg
add
sub
cmp
mov
jle
mov
mov
add
cmp
jle
sub
add
aam
inc
dec
mov
call
daa
xor
retf
stc
lock
add
and
xchg
sti
mov
pushf
mov
push
call
jmp
je
mov
add
cmp
jge
inc
push
add
sub
sbb
test
inc
hlt
mov
jmp
or
add
dec
sub
jg
pop
loope
push
push
push
or
push
call
hlt
push
push
call
mov
gs
fadd
je
xor
(bad)
xor
js
sub
pop
cmp
clc
data16
or
and
test
mov
jle
pop
mov
inc
add
xor
jmp
mov
fistp
push
pop
mov
jl
test
inc
mov
aam
mov
xor
cwde
mov
push
jg
and
(bad)
jmp
or
in
mov
call
and
inc
outs
cmp
inc
and
sahf
jmp
mov
add
mov
mov
loopne
jbe
and
aad
jge
pop
jo
xor
mov
lds
aas
gs
jnp
push
jne
call
add
call
loop
xor
or
les
or
push
mov
call
clc
call
adc
adc
jne
js
add
xor
repz
mov
push
call
retf
add
jbe
push
call
adc
and
inc
pop
or
mov
daa
call
jg
jne
pop
mov
mov
mov
cmp
or
add
or
add
mov
adc
js
call
inc
cmp
dec
das
push
call
inc
push
call
mov
adc
adc
stc
or
ja
dec
inc
inc
cmp
jne
mov
(bad)
lods
inc
xor
ja
push
cmp
mov
inc
sbb
sbb
push
adc
mov
push
push
inc
cli
pop
and
add
fcomp
rcr
sar
inc
mov
je
test
mov
outs
cmp
sub
je
mov
(bad)
dec
adc
jge
(bad)
loop
add
sbb
ror
inc
jmp
jne
push
push
call
cmovne
ins
dec
mov
std
add
or
pop
pop
xor
loop
inc
call
ret
es
mov
call
add
icebp
pop
into
add
mov
add
dec
jae
clc
add
(bad)
(bad)
jg
or
lea
jle
push
push
push
call
mov
push
xor
aaa
xchg
popf
std
sub
mov
std
push
cmc
call
mov
or
shl
jg
je
call
call
mov
shl
and
add
adc
or
inc
or
fsubr
out
outs
or
adc
mov
push
call
mov
das
mov
pop
pop
ins
lea
adc
and
adc
neg
stos
icebp
je
call
and
jne
push
call
inc
mov
push
push
inc
call
es
xor
sbb
je
es
mov
adc
adc
mov
push
call
pop
lea
call
push
mov
into
call
add
mov
mov
icebp
aas
mov
inc
je
push
mov
(bad)
fmul
cmps
or
(bad)
jmp
mov
mov
cmp
je
push
add
dec
xor
inc
cmp
je
aas
fistp
ret
je
mov
cmp
pop
je
mov
pop
jmp
or
or
cmp
jne
ins
mov
(bad)
cmp
dec
movs
jmp
sub
ret
rol
pop
fmul
mov
xchg
std
inc
push
jl
mov
iret
add
dec
mov
call
mov
cmp
jge
scas
mov
paddb
out
call
or
push
add
jne
lods
cmps
ins
ja
fld
adc
call
mov
in
or
pop
cmp
jne
pop
add
int
cmp
and
(bad)
jge
lea
push
bswap
call
fdivr
and
jbe
inc
mov
mov
dec
ins
sub
jno
or
fcomip
out
xor
push
inc
jnp
jmp
clc
fisttp
or
xor
test
xor
into
cmp
cmp
jl
icebp
aas
and
je
mov
sub
push
mov
sbb
sti
lods
mov
xchg
shr
push
call
cmc
mov
pop
je
inc
jp
push
push
call
sub
push
push
jmp
cvttps2pi
sbb
push
fld
popf
add
sbb
add
xor
mov
sbb
test
or
add
jne
inc
(bad)
adc
jecxz
je
fbld
clc
adc
xor
mov
jg
rcl
sbb
(bad)
call
dec
cld
out
mov
pop
jne
sti
mov
call
popa
clc
jmp
mov
sbb
jmp
and
inc
jg
push
fcomp
inc
ins
push
mov
call
and
nop
lock
ins
inc
add
call
mov
jge
push
lods
and
adc
shl
mov
test
out
ret
push
int3
call
or
inc
sub
push
cmp
mov
loopne
bswap
add
retf
je
jae
iret
leave
test
test
pusha
pop
sub
je
aas
int3
mov
push
stc
(bad)
(bad)
jmp
mov
mov
push
ror
and
adc
mov
aad
sbb
or
mov
and
addr16
inc
lods
fs
js
dec
push
sbb
and
ins
inc
ror
pusha
pop
out
data16
add
dec
or
bound
(bad)
cmp
inc
jno
pop
sbb
imul
test
test
jmp
push
and
xor
ja
mov
xor
push
dec
fdiv
add
leave
mov
sbb
pushf
xor
adc
bound
ficom
jl
add
inc
cmps
ret
jo
push
div
push
or
sbb
jne
aaa
xor
cmp
je
push
push
call
dec
or
add
mov
xor
push
mov
or
mov
inc
outs
pop
fwait
mov
cli
jge
(bad)
in
es
(bad)
pop
mov
ins
call
inc
or
and
jecxz
mov
ins
jb
mov
jl
addr16
div
fst
pop
pop
cmp
add
mov
cmp
scas
push
dec
je
shr
loop
scas
cld
pop
add
pop
add
cmps
push
jmp
test
or
call
mov
pushf
or
(bad)
mov
scas
jl
adc
or
and
push
daa
push
jae
sub
push
ins
push
cmp
setge
lea
push
push
call
leave
jl
add
out
cmp
push
pop
call
or
pop
pop
ins
push
push
imul
or
call
inc
mov
cmp
xor
push
clc
arpl
cmp
jne
push
adc
mov
mov
inc
js
add
shr
sbb
(bad)
mov
mov
mov
mov
(bad)
fsub
lods
dec
aad
dec
or
ret
jbe
stc
mov
mov
in
add
call
jo
cmp
jne
mov
mov
neg
add
mov
sar
pop
add
adc
add
pop
mov
neg
mov
mov
cwde
(bad)
lock
call
pusha
cmp
or
mov
push
add
lock
push
mov
fild
std
pop
pop
fld
jg
pop
add
fstp
fld
fistp
mov
dec
pusha
call
ss
call
scas
stos
sbb
pop
popa
sbb
xchg
mov
jp
xchg
jmp
ror
add
sbb
mov
mov
je
sub
add
shr
mov
call
es
loope
xor
push
mul
inc
xor
pop
sub
push
(bad)
jecxz
ins
inc
xor
pop
jmp
lock
push
jne
inc
jmp
jge
xchg
ret
dec
and
add
lahf
or
ret
push
mov
push
outs
jmp
or
jmp
and
retf
call
fdivr
aas
pop
cdq
test
ds
in
cmp
or
test
rcl
fdivr
or
shl
out
in
je
call
call
js
call
cmp
push
call
xchg
(bad)
je
lock
cmp
mov
or
inc
add
cmc
enter
movs
stos
mov
arpl
les
mov
or
inc
dec
add
cmps
mov
arpl
popa
bound
mov
push
mov
push
pushw
enter
push
push
test
mov
xor
or
mov
cwde
sti
add
pop
jne
push
(bad)
adc
je
mov
pusha
push
push
jo
or
imul
mov
push
jl
inc
mov
call
pusha
lea
pop
xlat
lock
call
xor
and
(bad)
xor
out
bound
push
cmp
out
push
dec
pusha
jb
(bad)
outs
inc
clc
push
call
mov
add
sbb
cmp
xor
push
or
inc
jmp
sbb
pusha
call
adc
add
or
mov
call
in
pop
add
inc
jmp
out
mov
xor
call
out
jo
jnp
adc
adc
mov
cmp
cwde
outs
mov
addr16
add
rcl
mov
cmp
mov
sub
jl
push
push
pop
add
fsub
or
or
push
xor
out
out
bound
xor
call
push
ror
mov
add
into
iret
movs
je
ds
or
shl
pop
fnstcw
mov
lea
in
add
add
pushf
push
lock
daa
cmp
and
ins
outs
inc
call
leave
stos
(bad)
mov
fbstp
(bad)
push
lea
pop
push
jg
retf
mov
sub
ins
mov
push
cmp
popa
cmps
adc
or
sti
inc
jl
repnz
mov
psubusw
(bad)
call
mov
test
jne
add
push
push
call
addr16
outs
call
sar
cmps
pop
push
cmp
jne
popf
out
dec
push
push
enter
jae
(bad)
inc
and
or
jmp
cmp
je
xor
cmp
je
fist
dec
xchg
jge
je
nop
jo
adc
xor
repz
jg
mov
inc
push
or
scas
push
dec
add
push
add
push
and
test
mov
mov
mov
dec
mov
xor
lea
jmp
xchg
mov
ret
xor
inc
mov
push
sbb
(bad)
out
inc
call
push
cmp
popa
mov
inc
pushf
push
inc
sahf
or
pop
rol
sub
add
loopne
mov
mov
les
jb
add
jmp
push
fmul
call
sub
adc
xor
shr
int3
dec
xchg
loope
fwait
or
aaa
xor
dec
mov
icebp
(bad)
mov
les
mov
cmp
add
and
(bad)
fidivr
pushf
cmp
cld
pop
cmp
adc
ficom
add
sub
and
xor
sbb
or
into
das
adc
mov
add
and
push
add
add
xor
push
push
xor
imul
rcr
and
sub
push
add
data16
popf
iret
jne
sbb
pop
pop
scas
aaa
pop
aaa
push
aam
retf
add
loopne
call
add
add
adc
test
cpuid
push
fsubr
test
push
shr
cmp
ja
inc
push
test
jne
fdivr
sbb
push
imul
(bad)
(bad)
jmp
movzx
push
add
sbb
mov
push
movs
inc
adc
int3
push
add
adc
xchg
je
jns
lods
adc
aaa
hlt
xor
cmp
sete
mov
jmp
ret
call
(bad)
jg
pop
add
add
call
frstor
into
(bad)
scas
and
or
stc
movq
pop
sub
je
dec
je
dec
je
dec
jne
mov
push
cdq
mov
out
cmp
fcom
and
test
or
mov
je
lahf
ret
and
push
test
or
jg
cmc
mov
adc
je
cmp
jmp
push
stos
push
or
in
cmp
in
scas
outs
cmp
dec
fadd
adc
mov
push
cmp
mov
push
cmp
aaa
call
div
or
je
mov
mov
or
sti
mov
aas
xor
mov
pop
mov
or
push
call
ud0
(bad)
call
(bad)
jmp
fcomp
lock
pop
pop
pop
pop
mov
pop
ret
shl
xor
aaa
fnsave
out
std
adc
xor
cmp
shr
xlat
enter
pop
dec
push
inc
inc
cmp
call
and
or
cld
dec
push
lea
push
call
popf
outs
call
call
mov
inc
sbb
mov
push
enter
cmp
je
mov
call
add
shl
ja
sbb
mov
cmp
setl
mov
sbb
cmp
aaa
add
or
inc
inc
lock
add
and
sbb
add
add
in
sbb
add
outs
clc
into
fcmovb
push
call
loope
mov
mov
enter
add
pop
not
mov
mov
push
and
and
jns
push
mov
adc
push
jne
pusha
nop
inc
ins
mov
pop
(bad)
fistp
call
mov
pop
mov
fs
jmp
cmp
pop
jne
mov
loop
push
add
cmp
je
xchg
arpl
pop
push
push
call
loope
loop
cmc
add
fsubr
in
fadd
(bad)
call
scas
mov
mov
push
out
and
or
push
add
jge
add
aad
adc
fwait
push
or
pop
push
mov
dec
sub
pop
add
mov
jmp
sar
(bad)
inc
jne
(bad)
sub
dec
add
push
jle
call
or
inc
ins
mov
xor
inc
enter
mov
jg
push
rcpps
int3
add
jns
xor
cmc
inc
mov
add
cmp
jg
mov
mov
int3
xor
jg
jb
fsubr
call
add
mov
mov
xor
call
call
cli
outs
fdivr
sub
sar
add
mov
sbb
jne
mov
jg
cmp
imul
fsubr
mov
add
sbb
jge
jne
(bad)
(bad)
std
in
dec
loopne
xchg
dec
mov
je
dec
je
dec
jne
mov
cli
xchg
ror
shr
cmp
mov
sbb
add
or
fild
sar
sar
mov
sub
(bad)
xlat
je
mov
push
movs
cmp
je
mov
adc
xchg
jo
(bad)
mov
add
add
mov
cld
sub
mov
add
jmp
push
cmc
sub
add
call
xor
add
inc
jmp
inc
sub
inc
xor
loopne
fmul
fcomi
pop
add
inc
clc
faddp
fiadd
test
mov
add
(bad)
jle
loopne
adc
pop
dec
test
jne
lea
cmps
psrld
xor
cmp
mov
out
cmp
and
add
adc
out
in
sub
hlt
je
lea
jle
inc
stc
add
adc
mov
ret
inc
sbb
jg
mov
push
push
call
mov
push
scas
and
xor
pop
je
je
push
jbe
inc
xor
test
inc
aaa
push
test
mov
push
test
test
je
aad
push
inc
fs
pop
inc
test
dec
fs
mov
fadd
test
fucomp
std
(bad)
call
push
push
call
mov
mov
mov
mov
sub
pop
ins
je
mov
push
jnp
inc
lea
jmp
mov
adc
rcr
push
out
call
sub
lock
add
cmp
adc
mov
add
out
sbb
ror
cmp
das
and
push
push
call
in
jge
pusha
adc
call
inc
add
mov
inc
push
xor
adc
mov
mov
call
std
and
inc
pop
adc
pop
xor
mov
inc
push
add
pop
adc
imul
push
hlt
sbb
call
popa
inc
sar
inc
adc
fs
idiv
nop
std
mov
je
jo
fstp
push
push
call
mov
mov
push
push
mov
inc
mov
adc
push
mov
xchg
sti
cmc
aaa
pop
in
cdq
jnp
push
call
xlat
aas
inc
mov
call
mov
sbb
jmp
adc
sbb
lds
call
sbb
fdivr
test
and
cmp
inc
push
add
inc
hlt
cmps
jmp
mov
cmp
mov
mov
sbb
jg
push
push
push
mov
ror
iret
call
ror
int
push
sub
mov
popa
mov
or
xchg
xchg
jns
dec
cmp
jne
outs
pop
mov
adc
add
and
jmp
cmp
xchg
pop
pop
inc
inc
push
mov
in
rcl
je
call
add
call
call
jae
dec
inc
test
je
call
psubb
push
sbb
shl
cmp
je
push
dec
jbe
in
mov
dec
cmp
inc
sbb
pop
inc
jmp
push
and
add
jmp
dec
inc
(bad)
inc
mov
pop
pop
jmp
pop
pop
gs
daa
aaa
(bad)
and
sbb
add
mov
call
pop
push
add
and
inc
or
fst
idiv
jmp
mov
mov
dec
xor
mov
aaa
add
add
inc
cmp
cmp
mov
fild
je
movzx
inc
jmp
xor
push
or
sti
add
pop
and
push
je
cmp
je
enter
and
push
mov
jge
mov
jmp
sub
add
or
call
sbb
mov
jo
adc
add
cmp
je
cmp
je
(bad)
add
mov
mov
xor
jnp
jae
mov
sbb
mov
mov
arpl
sbb
mov
mov
lea
mov
retf
jbe
(bad)
loopne
jne
cmp
sub
fwait
and
mov
mov
add
xor
dec
mov
add
or
aaa
loop
xor
out
pop
(bad)
inc
cmp
pop
shl
dec
fld
mov
movs
push
mov
cmp
fld
push
aam
adc
adc
and
sbb
mov
int3
or
pop
or
add
pop
sbb
(bad)
sbb
and
jae
sub
push
cmp
sub
movs
push
add
(bad)
(bad)
sbb
push
hlt
push
(bad)
arpl
call
push
fcom
pop
mov
pusha
xor
test
mov
inc
dec
adc
mov
fs
mov
lea
inc
xor
pop
std
push
loopne
push
movzx
movzx
or
test
mov
jp
or
leave
mov
mov
inc
pop
pusha
dec
in
jg
mov
push
add
mov
push
dec
les
clc
add
adc
or
inc
add
mov
or
cmp
jle
(bad)
fnsave
shr
mov
mov
mov
jmp
mov
pop
and
test
or
jne
leave
mov
fst
inc
inc
pop
adc
push
xchg
cmp
pop
xor
mov
sub
mov
(bad)
test
idiv
xor
mov
push
add
out
sbb
jae
lods
mov
sbb
jae
call
int3
daa
mov
leave
fsubr
mov
mov
push
mov
jmp
mov
mov
hlt
mov
xlat
xor
fwait
aad
adc
rcr
push
mov
bound
xor
(bad)
fistp
jae
mov
mov
mov
mov
mov
push
ja
and
fstp
sub
lea
add
iret
cmc
iret
icebp
imul
and
adc
call
jge
mov
add
or
in
aaa
sbb
fwait
mov
push
mov
pop
mov
mov
imul
pusha
add
aaa
adc
lea
call
jmp
push
and
retf
call
(bad)
jno
adc
ins
cmp
jo
mov
mov
inc
dec
(bad)
call
pop
pop
lods
xchg
in
jle
mov
inc
jmp
inc
inc
push
push
mov
inc
mov
sti
mov
adc
inc
jecxz
xor
xchg
cmp
(bad)
les
mov
mov
push
lods
call
cmp
inc
xor
add
or
push
push
mov
ins
push
pop
jae
call
stos
int3
test
pop
fsub
(bad)
in
jg
adc
or
mov
mov
mov
push
(bad)
(bad)
jle
mov
lea
mov
mov
call
out
lods
cwde
inc
or
xchg
and
cmp
jmp
pop
ins
or
retf
mov
ds
clc
cli
(bad)
call
push
or
es
mov
je
or
sbb
mov
call
pop
in
or
push
adc
stc
ja
dec
inc
push
mov
pop
mov
call
add
adc
add
mov
mov
jmp
clc
xchg
je
cmp
je
adc
rcr
jp
add
mov
adc
xor
lock
mov
call
in
cwde
cmp
fwait
mov
or
or
lods
lods
movs
call
clc
call
or
div
xor
add
(bad)
jmp
pop
aaa
inc
mov
inc
fld
shl
jnp
and
mov
push
sub
mov
cmp
add
sar
ja
test
jne
jmp
mov
sub
sub
in
call
push
sub
push
in
or
inc
xchg
pop
ror
or
dec
fadd
push
jmp
cmp
jl
fiadd
(bad)
in
or
sbb
out
add
pop
add
sbb
and
outs
clc
fbld
jne
cmp
jne
push
aam
dec
mov
scas
pop
jne
mov
jmp
push
call
mov
jne
jmp
mov
dec
push
ret
cmp
call
cmps
test
shl
xchg
adc
push
mov
call
and
and
and
sub
and
cmp
cld
outs
rol
mov
mov
pop
cli
test
adc
cmps
sbb
pop
or
ffree
add
sbb
lock
mov
cmp
push
call
pop
sub
mov
jmp
push
(bad)
jle
outs
dec
or
mov
mov
out
dec
pop
ret
call
add
sub
or
or
pop
sbb
push
add
cmps
fcomip
push
call
cmp
jne
cwde
adc
jae
xor
std
or
or
call
push
out
fcmovb
push
add
jmp
mov
push
mov
call
mov
inc
(bad)
imul
inc
and
call
jmp
jmp
packssdw
push
hlt
mov
call
mov
sti
pop
sbb
mov
push
(bad)
(bad)
(bad)
(bad)
dec
pop
cld
call
cmp
mov
jne
mov
push
push
call
loopne
mov
push
ror
call
stos
loope
sbb
cmp
jne
jmp
fist
add
push
call
cwde
jno
add
or
xor
jmp
call
or
mov
test
mov
pop
inc
arpl
mov
call
clc
(bad)
jge
cmp
out
call
inc
or
js
js
mov
push
test
out
ds
add
clc
repnz
cld
es
inc
add
inc
shl
jae
mov
and
inc
cwde
mov
xchg
dec
test
mov
jne
push
call
icebp
push
add
in
push
cld
dec
add
push
call
add
jne
call
jbe
scas
ja
gs
adc
std
sub
add
pop
mov
pop
pusha
into
call
sti
mov
pop
adc
nop
add
or
sbb
adc
daa
push
(bad)
add
push
inc
sub
jg
xchg
xchg
xor
push
push
push
push
push
push
out
adc
sub
mov
jge
imul
push
call
outs
ret
fild
mov
call
or
xor
add
call
adc
sbb
cmp
push
ja
cmp
jle
cmp
je
dec
jne
pop
cmp
jl
jg
inc
or
push
mov
call
mov
sbb
aaa
lock
call
fsubr
arpl
adc
dec
mov
call
arpl
push
mov
push
jmp
lock
push
or
inc
in
(bad)
call
jne
add
jge
mov
call
sub
aaa
push
pop
cwde
std
dec
jae
(bad)
cmp
je
das
push
push
call
or
nop
and
enter
push
mov
pop
push
jns
add
call
shl
push
ss
inc
or
mov
or
push
push
call
and
int3
clc
outs
jbe
sbb
pop
mov
push
or
mov
push
call
dec
mov
add
rol
jl
cmp
xor
sub
icebp
lea
adc
pop
icebp
repnz
jmp
or
scas
jmp
add
dec
mov
push
je
sub
jmp
adc
ja
mul
aas
or
lock
(bad)
(bad)
iret
cmp
push
cmps
cmp
push
xor
frstor
lock
push
mov
jbe
cmp
xor
jne
push
call
jmp
push
call
push
inc
call
dec
out
fcomp
fsubr
mov
jb
xor
jno
in
cli
je
cdq
call
cmp
mov
jne
xchg
add
call
mov
jg
push
or
inc
or
add
jmp
push
push
jecxz
xchg
push
and
pop
push
push
xor
sbb
outs
or
add
jmp
push
push
sar
and
sbb
cld
clc
push
xchg
inc
ds
jmp
inc
fwait
lock
xchg
and
inc
xchg
popf
stos
add
call
nop
mov
mov
fst
jo
or
adc
xchg
xchg
adc
mov
inc
ret
jbe
ins
add
je
sub
je
dec
je
add
je
dec
dec
test
sub
sbb
jbe
adc
jmp
ss
and
call
pusha
cmp
lahf
push
jmp
adc
push
call
es
sbb
and
or
sbb
(bad)
mov
mov
or
inc
cmp
jb
in
push
or
or
call
out
call
movzx
mov
inc
adc
push
inc
push
cs
rol
pop
ret
inc
add
mov
cmp
push
(bad)
out
(bad)
scas
pop
or
dec
add
ds
pop
mov
je
jmp
mov
jne
ror
sub
pop
je
push
push
push
call
adc
sar
dec
push
das
inc
or
push
call
ret
je
inc
dec
pop
pop
sbb
push
mov
test
fsubr
aas
data16
jne
mov
push
out
mov
jnp
iret
adc
call
dec
inc
and
push
cmp
test
out
je
(bad)
or
pop
inc
sbb
out
push
mov
jmp
and
pop
adc
(bad)
or
or
add
mov
mov
and
mov
imul
call
ss
dec
mov
or
aas
adc
hlt
call
push
repnz
inc
mov
xlat
add
jg
data16
sub
adc
or
push
cmp
outs
cli
outs
add
mov
call
dec
stos
imul
ds
inc
mov
xchg
push
mov
cmp
jg
retf
mov
mov
mov
cmp
ins
pusha
inc
pop
in
pop
inc
adc
lahf
mov
dec
stos
sub
scas
pop
ja
test
jae
movs
sbb
mov
enter
cmp
push
call
call
div
and
xor
adc
fnsave
sub
push
mov
outs
(bad)
frstor
call
mov
pop
xor
and
pop
add
adc
aas
push
xor
cmp
push
mov
(bad)
push
std
cmp
jne
mov
jne
lea
ja
or
rcr
or
lock
(bad)
fucomp
je
mov
add
lea
or
mov
jnp
cmp
movzx
add
mov
call
rol
mov
push
push
mov
nop
int3
pop
gs
scas
push
call
xchg
je
mov
adc
sahf
mov
push
call
(bad)
sbb
add
push
adc
sub
std
inc
adc
inc
add
mov
call
pop
pop
loop
iret
mov
push
push
fimul
cmp
add
(bad)
out
dec
push
or
inc
adc
push
mov
je
cmp
mov
ja
je
lea
push
call
mov
pop
lea
stos
fst
sbb
sbb
cmp
push
inc
mov
add
or
mov
push
rcl
add
mul
mov
push
pop
xchg
add
add
xchg
cmp
mov
pop
pop
pop
jne
dec
cmp
jb
or
cmp
outs
test
mov
adc
retf
mov
sti
inc
cld
mov
push
outs
call
cld
mov
cs
call
jmp
cld
pop
mov
popf
hlt
cmp
fsubr
and
dec
adc
into
cld
jg
and
call
jne
cmp
mov
xor
mov
mov
cmp
mov
or
and
push
and
mov
add
dec
sbb
(bad)
enter
cmp
je
lds
pop
or
mov
mov
jg
fwait
sbb
cmp
inc
call
pop
rcr
sbb
inc
xor
mov
call
jbe
or
sti
or
lea
daa
test
jge
or
int3
imul
lahf
push
mov
mov
call
push
lea
call
pop
(bad)
jmp
mov
leave
jmp
add
inc
mov
retf
out
clc
(bad)
jg
mov
lea
push
mov
call
mov
or
mov
std
std
aaa
cld
mov
inc
mov
sbb
shr
mov
push
inc
xor
out
jmp
cld
push
mov
call
jo
jmp
out
or
jo
push
call
js
push
mov
and
aas
fbld
cmp
or
cmp
retf
inc
adc
jns
in
sbb
sub
call
hlt
cmps
aam
or
xor
inc
pusha
and
fnstsw
add
cmp
stos
stos
add
inc
push
out
sub
call
push
mov
mov
jmp
inc
call
mov
xor
sub
aad
out
adc
inc
push
dec
je
push
lahf
sbb
or
jp
add
adc
jne
xchg
cmc
xchg
dec
and
rcl
add
jp
mov
or
dec
test
outs
sbb
add
push
sub
mov
repnz
je
fstp
sbb
add
into
pop
jmp
sbb
jne
ror
sbb
pop
or
or
loop
mov
hlt
push
shl
xor
call
loope
mov
mov
lea
test
inc
inc
outs
jmp
or
(bad)
adc
jmp
test
stos
mov
push
push
call
fcomip
add
mov
or
sti
dec
lea
sbb
xlat
mov
movs
hlt
jne
nop
mov
aas
js
in
ins
je
cmp
hlt
test
test
test
mov
push
jmp
inc
je
jg
jne
push
call
cmp
mov
jne
(bad)
adc
xor
cmp
jl
xchg
push
or
in
inc
adc
js
out
aaa
mov
pop
jne
mov
addr16
aaa
add
movs
mov
mov
outs
call
push
call
ja
inc
shl
xchg
ins
ss
push
push
inc
add
daa
call
iret
call
loopne
loopne
sbb
je
(bad)
in
jle
jmp
cmp
call
popa
out
jne
sbb
out
mov
ror
inc
adc
push
call
pop
pop
mov
push
jge
xor
sub
cli
sbb
cmp
cmp
mov
call
call
cdq
mov
and
jo
call
ret
pop
or
mov
pop
pop
mov
mov
inc
cmp
je
add
lock
fstp
out
add
pop
adc
neg
cli
pop
cmp
je
cld
add
test
xor
call
call
push
cwde
out
lea
mov
call
jp
cmp
push
or
sar
(bad)
mov
dec
adc
mov
daa
xor
call
xor
inc
sbb
inc
adc
loope
aad
xchg
pop
aas
cld
ja
add
inc
loopne
dec
adc
hlt
sub
dec
out
(bad)
call
push
add
call
dec
jne
jmp
push
sbb
dec
xlat
icebp
adc
add
shl
pop
je
call
or
push
jne
jmp
call
(bad)
icebp
aaa
sbb
push
push
xor
call
mov
jne
mov
mov
lock
inc
scas
push
push
lds
cmps
jae
xor
xchg
push
dec
aas
sbb
fmul
dec
push
dec
mov
out
jle
je
sub
rol
inc
lock
jo
sbb
jge
(bad)
(bad)
clc
ja
sar
sahf
in
(bad)
call
lock
scas
pop
and
cmp
push
push
mov
cmp
sbb
mov
call
mov
push
mov
add
call
cmp
jo
xchg
call
sbb
int3
out
cmp
add
dec
stc
(bad)
(bad)
mov
cmp
jne
push
in
push
call
pop
cmp
mov
push
pop
sub
pop
push
fmul
jp
or
sbb
push
(bad)
cmp
xor
in
inc
call
loope
xor
or
adc
pop
jno
leave
cmc
sub
or
push
ror
ret
hlt
ja
test
sub
dec
call
mov
out
test
sti
dec
mov
call
mov
push
int
ror
lods
lock
fdivr
mov
shr
lea
push
ins
not
(bad)
stc
mov
mov
adc
xor
loopne
push
in
mov
enter
dec
inc
push
ret
xor
dec
clc
jb
sub
cwde
aas
or
clc
call
cmp
or
xor
cmp
mov
cld
add
inc
push
lea
jae
dec
clc
adc
pop
adc
aas
in
jmp
inc
test
mov
or
pop
mov
jmp
push
add
retf
call
mov
hlt
test
pop
mov
jae
inc
xchg
inc
dec
in
icebp
je
mov
mov
sti
push
jbe
mov
ins
add
mov
xor
mov
lea
mov
call
inc
sbb
dec
or
mov
retf
add
xchg
nop
push
adc
mov
popa
xchg
rol
and
mov
(bad)
mov
rcl
add
add
ficomp
and
inc
inc
add
mov
adc
fs
or
and
fstp
ins
jne
ja
ror
mov
lods
add
sub
call
mov
jg
or
inc
or
fadd
push
inc
arpl
ret
cmp
out
mov
or
fcomi
(bad)
call
outs
mov
movzx
data16
test
jl
(bad)
loopne
add
adc
or
and
mov
push
mov
out
fwait
dec
jmp
outs
clc
jl
mov
xor
push
call
cmp
je
cmp
jne
sbb
fmul
sub
add
pop
cmp
adc
mov
cwde
mov
or
jecxz
xor
arpl
dec
fadd
xchg
dec
rol
mov
sbb
adc
fbstp
dec
out
inc
and
call
jbe
aas
ror
mov
mov
sbb
adc
call
jne
mov
mov
mov
ja
lea
sbb
xchg
cmps
add
push
mov
push
call
or
lock
je
cmp
dec
jns
jmp
add
push
shr
mov
add
sbb
aas
aad
xor
add
std
mov
inc
dec
hlt
push
call
or
pop
ja
sub
xor
cdq
or
pop
cmps
or
ret
push
call
adc
ret
add
pushf
or
add
or
sbb
pop
div
mov
add
jnp
xor
inc
and
xor
loope
call
sub
rol
pop
and
je
inc
push
sti
cmps
sbb
jns
pop
push
push
call
pop
mov
in
or
imul
and
mov
xor
mov
mov
add
or
mov
mov
mov
mov
mov
call
xor
cmp
inc
mov
add
dec
inc
imul
into
inc
cmc
jg
push
call
and
sahf
adc
je
cld
movmskps
neg
add
jnp
dec
stos
in
and
pop
or
aad
xor
jle
call
push
lea
inc
push
adc
arpl
mov
or
or
push
mov
cmp
sahf
or
jle
push
cmp
jb
mov
push
push
dec
sub
cmp
in
dec
pushf
xor
inc
cmp
jbe
outs
add
jl
adc
add
scas
(bad)
ja
or
add
fucomi
and
jle
je
and
(bad)
scas
jae
shl
pop
push
call
inc
mov
jl
cmp
retf
push
lea
cs
mov
sub
push
or
sub
add
hlt
xchg
call
sub
or
pop
cld
and
xor
jl
jmp
mov
mov
je
add
jmp
add
push
call
std
fwait
aaa
add
call
mov
push
call
ror
shl
jne
mov
mov
(bad)
inc
mov
mov
add
xor
rol
xchg
mov
movnti
pop
xchg
jnp
pop
jo
inc
je
adc
repnz
dec
je
inc
js
js
sahf
xchg
add
add
jmp
call
xchg
mov
imul
je
(bad)
add
mov
leave
fs
inc
je
jo
xchg
jae
leave
and
sbb
int3
cld
ja
jae
mov
push
push
and
push
push
call
jmp
rol
add
sar
sbb
and
sbb
jno
cmp
sub
inc
loopne
jb
sbb
push
push
push
(bad)
sahf
stos
cmp
adc
out
outs
test
mov
addr16
adc
lea
(bad)
cmp
jnp
xor
hlt
sub
shl
out
sbb
jne
or
sbb
and
push
inc
and
mov
cmp
or
inc
sbb
ror
inc
sbb
dec
pusha
or
outs
loop
shl
push
mov
push
call
ret
mov
add
fist
pop
dec
sbb
jo
mov
call
ds
pusha
xor
ds
rol
ret
sar
cmp
in
sbb
dec
sbb
push
call
xchg
jae
jnp
dec
pusha
call
mov
adc
add
push
call
pmulhw
jo
call
jmp
jge
add
es
jge
push
call
test
scas
sbb
sub
mov
retf
add
sbb
pop
ja
xlat
hlt
call
add
jno
jmp
add
or
mov
or
dec
imul
or
std
out
(bad)
jge
mov
dec
or
inc
or
sbb
jo
jg
push
je
mov
mov
call
jne
leave
or
(bad)
cmp
jne
pop
ret
mov
and
cmp
je
mov
out
dec
jne
jmp
mov
lea
jmp
mov
cmp
lea
sahf
fnstsw
or
es
cld
fnstsw
lahf
or
jne
push
call
lds
mov
mov
test
lahf
icebp
scas
test
dec
clc
std
(bad)
aas
mov
jns
jmp
xlat
push
mov
hlt
mov
call
and
outs
stos
bound
sbb
pop
into
call
out
or
push
mov
cmp
je
pop
lea
call
add
lea
mov
outs
xlat
inc
adc
inc
fsubr
mov
or
sub
jge
sti
jmp
mul
je
adc
jmp
jecxz
popf
mov
pop
cmp
jl
mov
mov
in
mov
frstor
je
cmps
or
push
add
mov
pop
pop
pop
(bad)
cwde
add
(bad)
call
sti
add
pop
ret
mov
pop
adc
out
fdiv
leave
jns
mov
push
dec
mov
push
fs
xor
jp
sbb
rep
jecxz
xchg
mov
push
movs
xor
sbb
pop
cli
(bad)
(bad)
out
jnp
dec
xor
sub
jg
inc
and
mov
dec
mov
sbb
js
pop
jl
sahf
cmp
inc
lock
or
icebp
mov
mov
sahf
xchg
or
adc
sbb
mov
cmp
ret
add
or
mov
test
daa
out
xchg
add
retf
add
fwait
or
inc
dec
(bad)
jo
dec
call
call
and
dec
adc
push
push
or
imul
call
leave
sahf
or
pop
in
mov
clc
adc
leave
retf
pop
std
mov
mov
push
push
fdivr
(bad)
mov
in
out
add
pop
lea
stos
stos
push
lea
stos
call
mov
jne
fild
fstp
call
fcmovnbe
jae
mov
jg
add
pusha
adc
add
ja
outs
fsub
rcr
cmp
fsubr
popf
add
mov
loopne
jmp
pushf
xchg
add
call
inc
mov
push
adc
push
push
mov
call
dec
lea
or
and
push
les
add
xor
cmp
icebp
mov
mov
inc
rcl
hlt
(bad)
mov
fdivp
(bad)
call
test
movs
add
push
push
in
std
jg
(bad)
jmp
push
jge
cli
jne
push
fdivr
sahf
lock
add
or
jmp
sbb
jne
push
iret
sub
mov
loop
outs
lea
stos
jae
imul
fimul
add
pop
in
sbb
jge
fucom
jno
add
push
fist
dec
(bad)
add
mov
adc
clc
cmps
dec
jne
sbb
call
sar
add
call
call
mov
cmp
inc
add
dec
push
add
fidiv
add
cli
adc
push
push
loopne
push
jmp
jmp
into
call
fs
adc
fadd
call
mov
out
shr
or
xlat
push
mov
inc
gs
ins
push
adc
inc
inc
adc
push
retf
jmp
or
adc
and
add
jmp
mov
add
jmp
std
add
jne
js
add
add
loop
jae
and
adc
test
add
xor
sub
xor
jle
cwde
xor
push
call
add
fsubr
pop
fidivr
add
nop
addr16
call
sbb
out
adc
inc
mov
dec
test
into
pop
jmp
test
inc
cmp
ret
add
mov
push
iret
push
(bad)
or
inc
mov
call
mov
cmp
xchg
out
mov
iret
lahf
pop
dec
and
arpl
pop
mov
outs
ret
mov
aam
or
mov
pop
xchg
pop
push
test
dec
jecxz
dec
add
mov
push
mov
loop
mov
sbb
neg
mov
push
add
icebp
mov
push
lds
stos
or
mov
cld
pop
out
gs
push
call
cwde
mov
call
sar
mov
xor
lea
push
cmc
call
mov
mov
mov
sbb
nop
lea
mov
fisub
xor
addr16
adc
call
lea
pop
pop
pop
push
lea
dec
aad
push
xchg
or
mov
out
(bad)
sbb
adc
mov
push
and
inc
fcomip
mov
add
push
mov
add
add
sbb
std
add
mov
lea
mov
mov
adc
mov
sub
pop
push
outs
ret
or
nop
xor
pop
add
add
repz
pop
add
sbb
inc
lock
mov
add
lea
push
or
inc
cwde
inc
cwde
js
rol
outs
sbb
push
pop
push
call
(bad)
rcl
mov
test
je
jmp
sub
xabort
cmp
lea
call
or
lock
mov
mov
push
jae
call
or
inc
cmp
arpl
push
in
in
or
xchg
aaa
push
hlt
call
mov
(bad)
(bad)
aas
dec
sbb
adc
sar
push
and
jne
push
push
call
ror
cmp
jne
adc
call
ror
cmp
loopne
or
mov
call
xchg
out
cmps
cmp
jo
push
mov
push
pop
or
inc
push
mov
push
push
push
call
mov
add
jmp
push
mov
test
je
jecxz
add
pop
sti
repz
mov
adc
mov
jmp
mov
mov
(bad)
dec
std
or
div
adc
retf
call
mov
inc
push
scas
cmps
cmp
jne
adc
pop
adc
dec
push
call
xchg
add
(bad)
jmp
pop
pusha
and
out
sub
inc
aas
mov
mov
xor
cmp
setne
nop
mov
dec
out
push
pop
das
inc
mov
jge
jg
push
push
call
push
sub
fmul
push
ins
call
inc
cmp
push
(bad)
cmp
sti
nop
pop
jmp
daa
outs
jg
fs
jbe
dec
dec
dec
xchg
rcr
dec
fsubr
jmp
inc
adc
jo
mov
call
neg
mov
mov
call
pop
dec
sti
cmp
sar
jne
pop
pop
push
call
dec
popf
sbb
pop
lds
or
adc
pop
push
icebp
mov
mov
mov
imul
enter
cld
test
jmp
pop
ret
stos
pop
jg
and
mov
cmp
cld
rol
(bad)
jmp
adc
fld
mov
sub
push
add
add
sub
sbb
add
add
jne
sbb
cld
call
dec
adc
push
call
fisttp
das
icebp
loopne
and
ret
je
pop
add
test
rol
and
mov
push
cmp
add
or
dec
test
jle
call
clc
fnstsw
clc
cdq
shr
sbb
test
push
pop
cmp
jne
sbb
cmp
dec
clc
jle
push
jg
add
add
aad
or
cld
popf
sbb
call
aaa
add
lock
inc
outs
call
out
xor
xor
aaa
out
mov
imul
sahf
bound
lock
sbb
call
cmp
pop
jne
aaa
call
mov
pop
jmp
pushf
cld
mov
inc
jnp
(bad)
out
unpcklps
call
pop
inc
jmp
push
jmp
or
mov
loop
mov
mov
pop
sbb
sbb
push
rcl
cmovo
and
jmp
retf
push
call
push
jge
cli
mov
add
add
test
cmp
fucom
push
call
push
push
sar
or
call
mov
add
sbb
inc
clc
and
outs
stos
xor
jle
mov
mov
jns
out
outs
and
mov
sar
lock
push
jne
push
mov
je
mov
call
fild
add
popf
mov
mov
call
dec
push
lock
ins
xor
cmp
mov
jbe
cmp
push
push
jg
scas
ja
call
and
call
push
pop
repnz
loopne
mov
outs
int3
call
and
pop
les
cmp
add
test
cmp
jmp
loopne
xor
dec
fild
xor
call
call
sbb
dec
fcomp
data16
xor
dec
je
mov
push
call
call
mul
aaa
jne
call
out
stos
sub
ins
sbb
jnp
add
loope
mov
dec
adc
add
add
outs
lea
call
out
add
push
call
mov
or
sahf
pop
pop
mov
inc
pop
je
add
jo
inc
in
fld
mov
je
iret
jmp
xchg
jo
or
retf
jmp
add
call
out
ja
add
(bad)
into
call
sub
sbb
lea
xor
sub
std
dec
std
pop
mov
push
cmp
jne
push
call
fidiv
mov
je
jne
sbb
inc
jbe
call
jbe
mov
mov
push
imul
loopne
cmp
je
mov
call
jmp
call
inc
jo
cli
push
adc
in
fild
(bad)
call
pop
leave
ret
pop
call
add
sub
push
cmp
sub
sub
mov
pushw
push
call
(bad)
out
loopne
sub
mov
push
mov
mov
push
push
push
push
push
push
(bad)
push
rcl
cwde
jl
dec
pop
int3
or
jmp
sbb
mov
inc
mov
push
mov
mov
call
pop
mov
inc
inc
gs
mov
ds
in
ret
out
(bad)
call
sbb
outs
sbb
sti
add
pavgb
mov
cmovne
jo
cmp
add
push
mov
outs
push
push
xor
cmp
lea
pop
mov
jne
cmp
mov
jle
mov
call
mov
push
jne
or
loopne
je
(bad)
fbstp
repnz
sub
mov
jmp
add
lds
call
mov
retf
add
mov
hlt
or
cld
push
or
sar
in
jne
lods
cmp
test
xchg
mov
add
test
leave
or
out
inc
cmps
cmc
in
push
push
jno
jo
cli
sub
pop
mov
ficom
dec
sbb
(bad)
call
out
sub
add
add
pop
aas
(bad)
hlt
ins
mov
cs
jne
sbb
xor
clc
shr
push
pop
clc
mov
ret
mov
aaa
adc
loopne
lea
push
call
inc
nop
stos
call
aaa
aam
pop
push
in
call
aam
pusha
sub
ja
xchg
inc
call
loopne
(bad)
mov
dec
jne
mov
push
call
daa
fwait
stos
loopne
inc
xor
jge
and
push
ret
shr
idiv
pop
or
xchg
sbb
mov
inc
jbe
mov
cli
add
pop
pop
sbb
shr
mov
shr
in
daa
pop
add
inc
or
lock
dec
jb
push
jp
push
cdq
fdiv
jno
call
mov
dec
sbb
jb
pop
jmp
push
push
push
pop
mov
push
cmps
cld
push
mov
inc
std
sbb
mov
cmps
mov
call
mov
rcl
xor
fstp
xchg
aam
push
jbe
hlt
fwait
xlat
or
mov
xor
call
push
jl
mov
xchg
push
mov
adc
adc
loope
lods
xor
sub
jmp
add
ret
mov
sub
out
mov
push
cmc
call
pop
jb
xor
jne
push
call
ins
mov
sbb
xchg
pop
inc
cmp
ins
mov
jl
pop
and
mov
sahf
lock
outs
pop
pop
leave
ret
sub
sbb
sub
sub
sub
mov
dec
add
iret
mov
je
cmp
and
je
je
jnp
loopne
dec
je
dec
jne
call
aaa
mov
iret
je
mov
or
std
scas
push
mov
push
push
push
sbb
push
pusha
mov
rcr
jne
xchg
adc
mov
mov
test
clc
dec
push
dec
cld
je
push
jb
push
fst
mov
mov
mov
pusha
jl
loopne
sub
push
xlat
call
call
outs
stc
into
call
adc
dec
call
ror
inc
mov
pop
call
inc
hlt
jmp
sbb
scas
push
push
sbb
mov
call
push
push
push
lea
loopne
mov
and
sbb
mov
xor
and
mov
push
push
push
cmps
call
push
push
call
lds
aaa
or
ret
and
or
fdivp
xor
or
jne
pop
jmp
out
stos
push
push
jmp
or
(bad)
or
inc
mov
call
es
gs
or
add
jge
std
jne
cmp
add
je
fcom
(bad)
cmc
jmp
mov
mov
add
mov
mov
icebp
jmp
dec
aaa
std
or
repnz
mov
les
cli
add
or
mov
in
in
adc
sbb
cmp
sub
int3
xor
cmp
add
out
push
call
pop
jmp
popf
and
mov
mov
xchg
or
add
inc
xor
cmp
gs
retf
adc
daa
mov
xor
mov
push
mov
call
xchg
js
mov
or
and
cdq
ret
push
jnp
imul
sub
mov
xchg
sbb
adc
out
dec
cli
shl
jb
out
add
dec
cli
out
in
sbb
pusha
adc
and
ja
pop
add
add
pop
mov
mov
and
mov
loop
jne
push
push
or
fisttp
dec
mov
mov
mov
je
out
cmp
or
or
inc
adc
inc
or
mov
xchg
(bad)
out
push
cs
add
test
je
cmp
push
fst
jmp
jg
adc
dec
push
mov
inc
mov
mov
out
sbb
add
push
push
das
push
pop
inc
add
push
fst
sar
les
sbb
adc
push
push
nop
mov
push
xor
push
push
out
xor
sbb
add
or
jmp
mov
mov
out
call
add
fucomp
sbb
fstp
pop
lock
push
jmp
mov
cmc
mov
call
call
jl
lock
mov
adc
(bad)
mov
pop
jle
add
fmul
lock
in
stos
dec
test
aas
and
dec
aad
cdq
fdivr
push
loope
push
call
into
loope
call
ja
aas
or
add
sub
add
fcomp
inc
or
inc
test
sub
cmp
jb
adc
sbb
jne
call
pop
pop
jne
xchg
push
adc
push
mov
adc
out
in
scas
push
loopne
xor
(bad)
daa
aas
mov
adc
push
adc
mov
push
adc
adc
cmp
fild
call
push
and
packssdw
frstor
iret
push
ret
pop
or
in
push
push
je
jg
loopne
push
jp
xor
mov
inc
arpl
jne
frstor
add
add
jne
ficom
add
movs
ss
dec
hlt
push
clc
ja
pop
repz
call
neg
sbb
inc
jmp
mov
call
call
fcomp
mov
enter
pop
ins
shl
sbb
pop
push
push
call
fistp
enter
jmp
add
mov
shl
ds
adc
add
pop
jg
sbb
or
movs
mov
inc
adc
push
push
fbstp
bnd
add
adc
call
inc
daa
mov
dec
out
sub
push
call
les
mov
lea
push
adc
mov
call
mov
mov
cli
jmp
push
jle
ja
int
call
stc
js
jno
out
std
mov
out
les
jmp
cmp
je
xor
or
mov
sbb
arpl
sbb
xchg
loope
jb
ror
mov
jne
mov
cld
push
and
outs
pop
push
push
call
or
dec
jmp
and
ror
test
xchg
scas
jg
call
mov
call
push
push
cld
mov
mov
repnz
sub
or
sub
jbe
loope
je
dec
je
or
fnsave
je
add
jbe
push
jo
mov
jbe
fldz
lea
fstp
xchg
xchg
ud1
mov
push
call
out
into
cmp
push
call
int3
(bad)
fucomp
jb
arpl
jb
push
call
inc
stos
call
fld
pop
js
sar
jnp
jmp
cmp
je
and
outs
mov
call
out
loopne
(bad)
fild
lods
test
push
jge
fadd
push
xor
sahf
xlat
mov
xor
in
mov
add
jmp
mov
not
push
mov
or
xchg
add
js
test
cmc
(bad)
push
pusha
call
push
add
scas
cmovbe
in
cmp
mov
icebp
push
push
mov
xchg
into
pop
adc
iret
call
adc
jae
mov
mov
jne
inc
mov
push
push
jae
or
pop
ret
push
stos
mov
lock
ds
adc
sub
scas
dec
or
adc
scas
call
or
ds
jmp
aad
mov
inc
adc
scas
pop
mov
neg
adc
mov
pop
xlat
fcomp
adc
out
xor
dec
xchg
test
call
mov
jno
or
mov
add
xor
or
dec
and
hlt
out
std
call
jns
int3
cmp
gs
jns
mov
gs
out
jns
or
dec
retf
jns
fidiv
push
sub
jns
outs
xchg
sti
jmp
jns
jne
call
(bad)
in
jns
les
dec
add
mov
push
push
jmp
push
xchg
pop
push
ins
push
ins
jmp
mov
mov
and
and
je
call
xor
mov
out
xchg
sbb
add
xor
sbb
adc
call
push
call
push
ss
sbb
inc
or
pop
push
cmovo
ret
jne
jg
(bad)
(bad)
jle
xor
inc
lea
shl
mov
add
sar
ret
mov
mov
neg
shl
ret
(bad)
(bad)
dec
mov
push
mov
push
push
lea
test
mov
mov
jl
shr
jmp
(bad)
pop
add
lock
call
imul
sub
mov
mov
(bad)
jmp
pop
sub
cmp
mov
mov
jb
cmps
cld
(bad)
jg
cmps
jp
ins
lock
lods
rol
jmp
mov
sub
idiv
mov
mov
cld
sbb
lock
pop
sub
cmps
js
ficomp
shr
in
popf
(bad)
jg
sbb
push
pop
sub
mov
sar
mov
inc
inc
or
sar
sar
mov
mov
xor
div
imul
cli
ja
jmp
enter
push
mov
neg
adc
add
cmp
jb
mov
add
iret
cmp
jbe
sub
mov
push
push
push
(bad)
out
loopne
das
retf
cld
add
pop
je
neg
leave
mov
lds
sbb
jnp
fsubr
or
clc
jge
or
dec
cld
test
jb
sub
jmp
cmp
fsubr
iret
jae
sub
mov
jg
xchg
fld
pop
enter
hlt
xchg
clc
push
push
add
dec
or
inc
or
jecxz
(bad)
shl
xor
xchg
sbb
or
mov
daa
jns
mov
add
sub
cmp
mov
sar
sbb
inc
adc
call
call
or
loopne
mov
jge
outs
jne
dec
jmp
test
test
jle
push
xor
push
push
push
call
adc
sahf
push
call
clc
push
adc
xchg
call
adc
(bad)
pop
jmp
popf
jecxz
pushf
push
push
call
neg
sbb
push
push
push
pop
sub
xor
mov
mov
dec
cmp
cli
outs
and
mov
jge
neg
jmp
call
xor
cmp
jne
call
fsubr
sub
repnz
or
pop
jge
sub
(bad)
fsubr
clc
push
jo
add
add
jg
inc
cld
inc
xchg
mov
fisttp
cmp
push
frstor
push
and
stos
jg
out
and
shl
cmp
jne
add
shl
inc
and
ret
sub
mov
mov
call
shl
pop
jne
cmp
mov
loop
dec
add
ret
sub
jb
and
fld
push
push
cmp
xchg
pop
pop
inc
pusha
mov
sbb
pop
cmp
pop
jne
out
ret
mov
adc
into
sbb
(bad)
adc
pop
or
inc
or
inc
int3
dec
and
sbb
and
or
inc
outs
lock
ret
pop
sub
jo
mov
inc
push
mov
cmovs
sbb
cmc
pop
lods
push
fld
daa
jp
fchs
and
(bad)
fchs
jmp
or
add
ins
push
push
test
mov
les
mov
pop
mov
(bad)
jg
ror
(bad)
cmp
xchg
inc
rol
or
adc
imul
imul
(bad)
add
push
sub
or
pusha
call
jg
enter
cmps
mov
jne
push
call
push
test
je
fdivrp
inc
shr
xor
jmp
shr
mov
imul
push
call
jmp
push
pop
ret
cmp
jle
call
xor
cdq
idiv
pop
mov
xchg
sub
or
or
loopne
pop
jl
jecxz
mov
add
add
mov
sbb
outs
stc
mov
loopne
inc
fild
or
add
ret
add
ret
push
std
pop
or
xor
cmp
bswap
pop
jmp
cmp
push
inc
aaa
ret
cmp
dec
shl
push
ret
inc
stos
call
jmp
(bad)
dec
push
call
push
rcr
inc
push
jge
jg
aas
cmc
dec
or
push
push
call
add
cwde
add
mov
loop
movs
inc
cmp
cmp
mov
add
inc
push
fstp
sbb
jbe
push
cmp
cmps
cmp
ja
mov
popa
or
mov
fild
cmp
push
jl
add
mov
adc
mov
add
mov
inc
push
inc
jae
lock
cmps
add
sub
mov
mov
mov
ror
push
adc
push
sub
push
add
or
ss
add
add
sub
xchg
loopne
push
mov
jl
or
pop
mov
jne
push
call
or
(bad)
(bad)
fcomip
mov
call
xor
jmp
mov
cdq
idiv
cmp
jge
add
jmp
test
ret
push
or
loop
leave
lea
(bad)
dec
mov
xor
dec
mov
mov
push
call
arpl
add
cld
movs
imul
ror
xchg
add
cdq
mov
and
pusha
xlat
in
clc
mov
pop
xchg
retf
and
or
sar
sub
cmp
jne
add
add
(bad)
pop
mov
(bad)
jg
inc
push
call
pop
sbb
pop
inc
jmp
xor
cmp
ud0
es
ror
mov
movzx
mov
xor
adc
jmp
push
loope
mov
cwde
sub
or
add
or
mov
ja
or
inc
or
add
jmp
shr
aam
test
jg
and
mov
add
aam
vunpcklps
je
push
push
call
(bad)
(bad)
(bad)
fbstp
je
mov
push
mov
test
mov
je
push
cmp
jl
cmp
jle
cmp
ins
loopne
dec
pop
jle
cmp
jl
jp
add
call
xor
add
sub
cs
(bad)
out
ficom
test
mov
add
call
out
scas
jnp
cld
add
fwait
sbb
mov
jmp
mov
jne
cdq
ficom
std
pop
cmp
pop
mov
mov
shl
jne
jg
xchg
or
scas
dec
sub
daa
loopne
lea
mov
enter
mov
or
clc
add
xor
lea
test
pop
inc
cld
je
mov
jmp
mov
je
mov
call
mov
leave
pop
mov
lea
push
mov
out
stos
add
push
call
xor
inc
les
es
dec
(bad)
fstp
push
mov
mov
push
lea
lods
mov
call
push
fist
mov
jmp
dec
call
mov
jo
cmp
cmp
je
cmp
je
dec
jns
push
stos
test
push
or
stos
mov
(bad)
xchg
into
lock
inc
cmps
outs
(bad)
push
lea
xadd
mov
jb
enter
add
je
stos
(bad)
(bad)
jg
cmp
jp
into
call
test
jne
pop
sub
sbb
add
je
ficom
xor
jbe
add
or
xlat
push
inc
fisttp
push
retf
push
mov
add
push
mov
jo
icebp
push
call
xor
sti
xchg
pop
(bad)
push
test
call
out
out
push
call
nop
call
pop
pop
cmp
or
div
test
(bad)
(bad)
call
je
mov
cmp
jb
cmp
ja
add
mov
cmp
jb
cmp
ja
add
cmp
ja
(bad)
push
test
je
test
je
inc
inc
jmp
mov
ds
and
push
pop
push
neg
xor
or
dec
push
xor
mov
adc
cmc
pop
or
jp
push
add
dec
movzx
cmp
jne
data16
pop
add
in
out
inc
jmp
pop
pop
sbb
pop
cli
mov
xor
gs
mov
out
cli
idiv
movzx
xor
movzx
inc
test
je
or
sar
ror
jmp
nop
in
add
neg
(bad)
or
leave
jne
xor
pop
ret
jb
test
je
inc
inc
mov
mov
cmp
je
inc
pop
imul
add
js
xor
std
into
mov
jmp
pop
adc
inc
mov
popw
fdivr
fisttp
cmp
je
cmp
and
adc
jne
outs
mov
mov
jmp
adc
xor
xor
(bad)
(bad)
(bad)
inc
inc
jmp
cmp
jg
movsx
lea
lea
inc
mov
cmp
jge
out
pop
push
test
das
xor
inc
inc
inc
or
idiv
jmp
cmp
ja
movzx
inc
xor
rcr
and
cmp
jae
cmp
xor
lahf
fdiv
add
fstp
rcl
(bad)
or
clc
lea
push
call
push
mov
daa
push
call
or
add
fidivr
les
pop
add
daa
push
mov
test
(bad)
mov
push
call
push
call
dec
call
je
push
push
push
call
shl
pop
dec
jne
xor
je
or
inc
pusha
fbld
jle
es
xor
adc
retf
add
add
out
mov
aaa
add
stc
or
inc
cld
inc
add
add
mov
sub
dec
sar
jmp
movsx
cmp
xchg
add
std
and
in
mov
repnz
dec
movsx
cmp
fbld
push
cmp
ja
and
test
cmp
(bad)
cmp
mov
mov
inc
test
je
mov
sub
sub
mov
inc
dec
cmp
jne
faddp
call
(bad)
mov
mov
inc
cmp
shl
push
or
jecxz
add
ret
lea
jmp
push
out
inc
pop
mov
je
mov
stos
push
adc
(bad)
cld
cmp
jne
clc
jg
dec
inc
adc
and
je
sub
(bad)
mov
je
pop
inc
dec
je
dec
je
loopne
call
sub
jne
add
jno
call
neg
ss
cpuid
pop
(bad)
dec
jo
xor
pop
adc
(bad)
out
sbb
sar
and
add
jmp
adc
fstp
or
or
out
push
retf
pop
sbb
(bad)
fmul
xor
imul
stc
add
jg
mov
iret
ror
or
pop
push
inc
or
push
out
imul
call
pop
cmp
test
jo
push
call
retf
xor
(bad)
jmp
es
sbb
and
push
push
mov
call
(bad)
popa
gs
adc
rcl
and
adc
clc
jne
(bad)
(bad)
inc
jns
dec
mov
mov
cmp
jge
cmp
jl
cmp
jge
cmp
jg
push
push
mov
sub
xor
push
fs
(bad)
out
call
inc
or
push
push
push
call
sub
add
push
jo
ret
dec
cmp
add
les
push
call
pop
or
cmps
xor
xchg
call
test
push
push
inc
pop
pop
or
inc
jg
jb
dec
jmp
dec
and
lea
push
adc
retf
bound
(bad)
mov
push
xor
xor
cmp
je
or
xor
loop
xchg
mov
fistp
push
add
mov
cmp
pop
jbe
mov
clc
push
stos
call
push
or
push
adc
(bad)
fucomp
(bad)
inc
jne
jmp
cmp
mov
mov
fist
cmp
jle
addr16
pop
jle
cmp
jae
inc
es
cmp
je
cmp
je
inc
inc
pusha
mov
call
or
sti
push
fsubr
pop
jg
ret
jne
add
mov
pop
jne
jbe
or
inc
punpckhdq
cmps
jp
push
aam
cmp
call
shl
mov
sbb
or
jbe
mov
call
mov
outs
je
push
call
adc
test
xor
mov
mov
loopne
lock
cmp
je
dec
push
pcmpgtd
pop
out
out
ja
inc
pop
add
imul
xor
pop
push
push
dec
mov
(bad)
out
fild
push
lea
push
call
add
push
call
or
sbb
loopne
push
cmc
popf
sti
fwait
call
pop
and
add
mov
ror
xor
cmc
enter
in
lahf
daa
cmp
retf
test
mov
inc
push
mov
push
sub
adc
iret
xor
mov
inc
popf
imul
lea
or
lea
push
call
sbb
push
mov
cmp
(bad)
push
scas
add
pop
push
call
mov
push
mov
push
(bad)
call
sar
je
cmp
je
cmp
jne
sbb
shr
cmp
jp
cli
cmp
mov
cmp
push
call
sti
aaa
outs
pop
je
push
push
call
jmp
das
or
call
pop
pop
outs
jno
out
inc
and
inc
clc
(bad)
adc
xor
lea
push
push
int3
(bad)
call
outs
cmp
dec
sbb
inc
sbb
mov
mov
call
jo
inc
adc
push
dec
push
(bad)
cmc
js
adc
push
lea
push
xchg
sub
call
push
call
sub
mov
and
adc
stos
aaa
cld
ret
push
dec
push
lea
rol
je
(bad)
aas
fnstcw
dec
mov
push
push
lea
push
call
sti
aas
out
mov
cmp
je
mov
mov
mov
mov
sub
cwde
clc
idiv
shl
push
push
lea
push
call
js
and
fnstsw
mov
xor
mov
shl
push
and
push
sbb
inc
xchg
cmp
call
pop
add
rol
sbb
pop
mov
mov
sbb
push
das
jg
(bad)
mov
cmp
jne
mov
jmp
cmp
cmp
setne
cmp
shl
das
cli
(bad)
mov
sub
mov
cmp
je
push
push
call
pusha
xor
or
dec
ror
jge
call
in
push
pop
pop
and
pop
adc
or
cmp
shr
mov
xor
push
call
call
or
punpcklbw
pandn
out
call
call
in
neg
cmp
dec
pop
ret
fsub
neg
add
xor
call
or
adc
inc
cmc
dec
mov
jl
cmp
jb
sbb
loop
in
fldz
jmp
call
clc
popf
stos
add
movzx
mov
sbb
push
jge
sbb
sub
xchg
mov
shl
icebp
cmp
(bad)
push
call
sar
adc
adc
clc
mov
jne
cmp
mov
or
mov
sub
add
scas
sbb
pop
pop
mov
push
push
call
clc
jmp
(bad)
jle
cmp
je
bound
xor
jmp
or
in
shl
push
call
into
pop
sub
inc
fild
push
call
std
cmps
mov
enter
not
(bad)
mov
str
pop
je
push
call
sbb
sub
cmp
sbb
adc
dec
jbe
mov
(bad)
mov
pop
fcom
inc
push
add
sar
pop
dec
xchg
mov
aaa
or
mov
or
jg
jl
cdq
int3
les
push
std
jmp
mov
push
mov
test
jbe
push
push
push
xlat
adc
push
imul
add
std
push
call
inc
shl
sbb
or
sbb
cmp
sub
nop
mov
mov
add
in
jne
add
into
icebp
add
loop
push
std
mov
jmp
push
add
fsubp
lea
call
(bad)
int3
(bad)
xchg
test
or
add
mov
or
dec
mov
push
call
das
dec
or
adc
pusha
adc
movzx
jbe
inc
cmp
jne
mov
test
jne
ja
cmc
sbb
add
xor
jmp
and
stc
mov
aaa
mov
call
jp
and
mov
cmp
jne
data16
(bad)
test
pop
retf
sub
dec
dec
sar
mov
jmp
sub
into
ds
dec
mov
mov
cmp
add
mov
and
mov
inc
je
mov
(bad)
jmp
pop
or
call
jmp
add
push
lea
call
cmp
or
out
sahf
(bad)
push
mov
push
call
sbb
and
xor
xor
mov
push
and
(bad)
cld
(bad)
pop
pop
fisub
popf
jle
push
call
push
push
mov
outs
loop
jg
push
push
call
mov
inc
add
les
es
call
mov
test
je
jnp
cmp
ja
dec
mov
cmp
jne
inc
inc
sub
jo
je
push
adc
adc
add
push
jne
call
hlt
retf
push
repz
call
push
push
add
rol
pop
pop
mov
push
add
call
lds
loopne
and
dec
jl
or
pop
jp
(bad)
out
es
mov
cmp
je
test
je
xor
ds
push
inc
dec
aad
loope
mov
inc
pop
add
add
jl
mov
dec
test
push
je
mov
mov
mov
fnstenv
fidivr
cmp
jne
mov
sub
mov
mov
fstp
sar
fcom
leave
shr
jne
xchg
cmp
mov
and
scas
push
sbb
jb
out
inc
(bad)
fild
test
mov
cmp
je
cmp
mov
inc
or
mov
add
sti
mov
sub
mov
sbb
jle
jns
add
cmp
call
xlat
std
or
clc
call
mov
jg
jmp
or
call
idiv
cwde
in
test
sbb
mov
or
mov
sbb
shr
rcl
or
dec
sub
sbb
shr
test
mov
adc
dec
aad
jae
inc
mov
xchg
push
bound
push
call
ja
stos
mov
adc
call
stos
mov
adc
rol
push
or
outs
jmp
clc
inc
pop
arpl
sti
jnp
push
pop
push
call
or
call
jne
and
fmul
or
cmps
stos
pop
outs
fst
cmp
or
adc
lahf
sti
jmp
or
adc
gs
pop
sbb
add
inc
loopne
test
int3
mov
push
push
inc
je
stc
mov
aaa
mov
adc
pop
mov
in
sbb
scas
ret
ins
mov
(bad)
mov
sub
push
and
pusha
inc
inc
je
mov
add
mov
adc
adc
dec
add
enter
addr16
add
add
fmul
(bad)
fisttp
neg
cmp
mov
jl
mov
sar
sub
add
outs
sbb
sub
dec
sub
js
cmp
mov
add
dec
cmp
jle
mov
mov
and
cli
(bad)
cli
(bad)
cmp
or
mov
stc
or
lea
(bad)
jg
jp
ror
scas
adc
enter
cli
push
mov
push
adc
imul
popa
inc
inc
xor
sbb
push
adc
clc
push
mov
call
or
inc
add
fld
push
fld
fmul
in
add
mov
or
shr
adc
es
xor
jo
jmp
ins
or
sar
mov
sub
sub
add
push
call
adc
loope
add
call
stos
mov
mov
push
push
inc
out
and
mov
loop
mov
ins
adc
mov
fnstenv
add
lea
add
push
push
cmp
fist
dec
mov
imul
icebp
add
mov
(bad)
cli
pop
cmc
push
fild
cmp
daa
or
fst
(bad)
fcomp
mov
push
fstp
ret
adc
sbb
or
jne
fild
fdiv
cmp
push
adc
fist
aad
cld
gs
fistp
fild
mov
mov
fdivr
addr16
dec
popf
xor
fist
jmp
push
call
cmp
call
add
mov
fiadd
imul
shr
inc
adc
lods
push
(bad)
dec
retf
sbb
mov
mov
jmp
sti
out
call
out
mov
jge
mov
or
ret
mov
popf
loope
pushf
pop
jnp
mov
xchg
push
add
iret
jo
mov
mov
mov
and
push
and
sbb
(bad)
push
add
push
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
mov
jg
inc
je
or
dec
add
push
mov
(bad)
cmp
pop
inc
mov
mov
or
sbb
jge
add
add
sar
or
aas
add
imul
sbb
mov
ins
inc
jne
jbe
(bad)
xor
sub
ror
add
mov
mov
rcr
sahf
fst
sub
adc
inc
fcomip
push
jbe
adc
adc
add
push
or
dec
add
adc
add
or
dec
pop
or
adc
cmp
inc
cmp
ja
jmp
jnp
adc
sti
mov
jmp
push
pop
out
pop
and
inc
inc
aam
add
sar
jmp
adc
frstorw
sub
adc
dec
mov
pop
call
call
push
or
cli
mov
das
ja
shl
push
popa
imul
and
xor
or
push
add
or
or
aam
out
ret
push
mov
or
cwde
inc
adc
jge
ret
cmp
aaa
push
and
push
cmp
je
mov
mov
cmp
je
cmp
jle
xor
sbb
jb
dec
xor
mov
cmp
jg
loop
loope
add
mov
cmp
jge
push
loopne
loopne
aam
xchg
mov
adc
inc
or
ja
call
and
(bad)
dec
and
cmp
jg
mov
cmp
jg
icebp
mov
or
or
inc
or
inc
or
(bad)
shr
cmp
jg
mov
jge
mov
or
enter
mov
and
cmp
jg
mov
push
jl
mov
cmp
fild
push
jl
ja
nop
jne
or
ds
repnz
je
add
ret
mov
sub
jns
sub
jg
sub
ret
cmp
jg
mov
sti
out
xchg
cli
sub
sbb
jmp
mov
adc
mov
inc
pop
enter
jbe
or
xor
and
mov
ret
adc
adc
lds
mov
adc
out
cld
dec
(bad)
imul
add
or
or
dec
or
clc
or
cld
call
adc
cmp
(bad)
fistp
cmp
jle
sub
(bad)
jmp
mov
mov
jg
fnstsw
xor
repnz
sbb
clc
jmp
mov
mov
loopne
jbe
mov
add
xchg
inc
pop
dec
push
jmp
(bad)
(bad)
dec
push
fld
fstp
fld
fstp
fld
fstp
jmp
fld
push
pop
add
ss
push
add
fmul
test
or
addr16
int
inc
add
sbb
adc
mov
mov
cld
mov
mov
pop
add
std
push
stos
cmp
jne
fld
ret
fild
fmul
mov
adc
ret
fild
pop
or
or
aas
cwde
xor
sbb
ret
fmul
or
jge
ss
mov
add
push
sub
xor
sub
xor
cmp
push
dec
push
sub
fadd
mov
fld
test
data16
into
jne
sbb
push
pop
add
inc
cs
fbstp
mov
or
inc
or
or
fsubr
fbstp
addr16
fld
jge
xlat
adc
fldenv
or
push
dec
add
(bad)
aam
add
inc
and
cs
or
out
xchg
das
sub
pusha
sbb
out
sub
or
inc
sbb
mov
mov
(bad)
in
stc
push
ja
add
mov
mov
hlt
pop
add
adc
rcr
add
adc
xchg
dec
add
ret
mov
cmp
call
mov
clc
cwde
pop
and
outs
push
add
add
pop
jns
lahf
cmp
mov
clc
aas
lock
inc
jg
xchg
or
add
jmp
mov
or
lock
add
fmul
or
mov
add
mov
mov
mov
dec
or
inc
adc
mov
fstp
fisttp
cld
cmp
fmul
faddp
fstp
fld
ja
sbb
fwait
pop
add
mov
mov
fadd
cld
fmul
add
je
mov
adc
xchg
mul
jns
add
jnp
and
add
sbb
inc
add
test
adc
call
sub
(bad)
jmp
(bad)
mov
mov
fild
fstp
fild
fstp
test
pop
ret
cmp
repz
aam
ret
les
faddp
fsub
sbb
xlat
jne
dec
xchg
fsubr
pop
add
or
js
push
push
push
jne
(bad)
(bad)
xchg
fcom
test
je
or
mov
mov
fcom
mov
add
leave
(bad)
sbb
mov
dec
add
clc
jmp
cmp
or
fld
pop
rcr
pop
fild
data16
fadd
jp
fistp
out
pusha
leave
fsubrp
or
cld
loope
std
rcr
fucompp
xor
inc
jnp
daa
xor
add
jmp
cld
mov
adc
push
movs
mov
(bad)
sub
push
mov
mov
mov
cmp
jne
adc
jmp
push
mov
std
paddb
call
push
call
inc
jge
call
retf
cld
or
add
(bad)
mov
inc
or
jbe
movs
shl
and
pop
out
in
cmp
loopne
test
push
push
pop
push
lea
jnp
lea
rep
xor
inc
cmp
pop
pop
je
sti
smsw
mov
cmp
adc
sbb
call
fild
ins
fild
fld
fmul
iret
ja
inc
faddp
fiadd
test
in
hlt
(bad)
dec
fmul
fld
fmul
xchg
mov
fld
pmulhuw
fld
inc
inc
int3
lea
fstp
dec
inc
fstp
sbb
daa
shr
sbb
fdiv
pop
or
fistp
mov
inc
gs
in
(bad)
mov
adc
sbb
adc
push
aad
inc
sbb
rol
ret
adc
das
leave
test
movq
adc
retf
or
test
inc
add
cs
mov
retf
pusha
sbb
dec
dec
xor
std
xor
adc
and
adc
shl
fisttp
sbb
xlat
and
or
mov
mov
push
xchg
dec
sub
adc
push
xchg
push
cwde
jecxz
mov
cli
xor
mov
inc
popa
retf
add
adc
rcl
sar
mov
add
pop
sbb
jae
jo
sbb
sbb
add
jo
and
loope
pusha
daa
scas
sbb
add
mov
test
push
inc
retf
cld
and
fist
ror
hlt
add
mov
mov
add
jmp
cmp
je
push
call
push
sbb
or
out
hlt
fild
xor
add
jns
add
pop
jbe
ja
mov
fild
jo
adc
jecxz
fisttp
adc
push
xor
fldz
iret
add
mov
inc
or
pop
or
sbb
jne
sbb
sub
sub
inc
lock
cmps
xlat
nop
mov
sub
inc
and
dec
cld
dec
cmps
jae
sbb
sbb
dec
iret
jo
rcr
fstp
adc
add
sbb
fist
stc
sub
push
sub
and
or
pusha
cs
mov
sar
add
cmp
pop
pop
mov
dec
jnp
xchg
mov
mov
cli
jo
mov
je
fimul
mov
cdq
xor
(bad)
sub
cwde
(bad)
xlat
push
jbe
dec
sar
cmp
nop
in
or
adc
adc
inc
mov
ja
xor
add
pop
inc
sbb
cmc
cmps
jnp
shr
shl
retf
jg
ja
inc
mov
adc
and
or
sar
dec
je
pop
mov
pop
add
inc
add
inc
stos
inc
in
mov
les
inc
dec
mov
fstp
call
in
std
xor
fbld
jmp
pop
cmps
popa
xchg
sub
inc
adc
or
or
fstp
fld
add
or
pop
cmps
in
dec
sbb
or
or
jl
push
inc
add
inc
add
jg
cmp
fld
mov
pushf
stos
pop
mov
adc
cmp
mov
pop
jge
popa
dec
je
mov
je
jo
pcmpeqd
jmp
ror
push
or
pop
adc
pop
out
(bad)
inc
sub
adc
(bad)
sub
jns
sub
mov
mov
inc
or
and
icebp
inc
or
out
fstp
and
fldz
and
shl
cld
pop
fild
mov
push
rcl
or
cld
stos
loopne
fst
scas
adc
aas
arpl
fst
and
push
cmps
mov
pop
sub
inc
popa
aam
(bad)
pop
les
inc
adc
leave
pop
test
call
repz
stos
jg
and
inc
add
add
inc
adc
add
loopne
mov
mov
or
sbb
fidiv
fstp
mov
sub
inc
dec
add
jno
mov
test
and
loopne
clc
add
add
or
jmp
mov
mov
lock
fild
fmul
sbb
inc
jg
dec
cld
adc
jmp
or
inc
add
add
xor
inc
repz
mov
sub
push
call
std
scas
jo
sbb
sub
pop
and
icebp
out
and
inc
or
and
mov
pop
je
push
fisubr
or
add
(bad)
aas
mov
jae
inc
or
push
adc
mov
inc
push
adc
dec
sbb
xchg
test
mov
test
inc
add
test
adc
mov
fcom
jae
or
jle
sbb
xchg
cmp
mov
addr16
jmp
xlat
and
test
shl
mov
retf
mov
daa
setae
adc
pop
fwait
jae
push
mov
lea
xor
add
mov
sub
cmp
jg
jg
xor
or
xchg
ja
shl
sub
ror
mov
retf
push
jge
cmps
cmp
fmul
mov
xchg
ror
and
mov
movs
mov
dec
mov
mov
xchg
and
test
cmc
inc
(bad)
aas
push
ja
dec
and
lods
pop
xor
cmp
jne
cmp
je
push
or
(bad)
cmp
jne
cmp
jne
jmp
call
sbb
jmp
or
sbb
mov
or
inc
mov
fstp
dec
cdq
sahf
fs
xchg
xchg
push
add
push
fbstp
pop
movs
mov
cmp
push
call
imul
dec
stos
adc
xor
push
aad
fdivrp
scas
ja
call
fld
and
dec
jbe
cmp
and
fldln2
xchg
and
push
lods
sub
xor
and
cs
jle
arpl
jmp
dec
cmp
in
sbb
daa
femms
mov
mov
fs
sub
cmp
jg
mov
inc
and
mov
mov
mov
out
push
dec
or
(bad)
sub
jb
mov
sub
push
jmp
in
or
mov
push
call
fmul
xchg
pop
fstp
fld
inc
inc
cld
push
xor
test
call
inc
in
test
hlt
push
call
mov
call
push
add
jne
sbb
or
retf
out
loopne
(bad)
out
call
call
add
gs
push
call
icebp
pop
mov
sub
push
call
adc
les
push
add
test
scas
pop
mov
lea
mov
call
fld
scas
push
push
lea
sbb
out
outs
pop
push
call
add
adc
fcomp
or
adc
fmul
add
mov
jmp
add
inc
sbb
xor
sar
inc
cwde
push
push
call
rol
lea
adc
into
inc
add
call
push
jnp
push
sbb
pop
idiv
sub
jo
test
scas
push
pop
cld
cmp
adc
push
or
jne
ja
loopne
mov
push
sub
mov
sub
push
mov
pop
jne
mov
outs
sub
adc
adc
mov
sub
imul
cdq
push
and
cld
idiv
add
mov
jecxz
jle
(bad)
adc
mov
mov
xor
clc
cdq
idiv
add
mov
inc
or
inc
or
adc
pop
add
sahf
adc
inc
stos
mov
pop
ror
add
dec
inc
xor
jle
mov
or
scas
(bad)
inc
dec
add
dec
or
dec
or
rcl
adc
ins
gs
(bad)
out
mov
hlt
or
pop
je
pop
add
push
add
push
or
cdq
in
call
sub
push
mov
call
aaa
imul
mov
mov
mov
pop
dec
add
dec
adc
inc
in
or
jb
or
in
in
aaa
in
fdivp
cmp
jne
mov
jge
movs
add
inc
mov
adc
push
dec
and
shl
sbb
mov
mov
cmp
jle
mov
mov
push
dec
scas
js
or
push
dec
cmp
(bad)
mov
jecxz
call
mov
js
cmp
xchg
lahf
daa
adc
sbb
lds
mov
or
adc
xchg
test
pop
jle
fs
or
loop
dec
and
jmp
add
test
add
clc
sbb
sbb
and
je
dec
or
(bad)
fwait
add
or
inc
or
test
push
mov
add
(bad)
fmul
add
push
call
adc
cmp
scas
mov
ret
or
lock
mov
test
scas
push
jecxz
inc
dec
cmp
aad
push
outs
test
leave
cmp
(bad)
mov
mov
or
fidiv
(bad)
retf
or
or
or
test
sub
mov
shl
add
test
je
adc
jmp
jg
(bad)
std
shl
inc
adc
push
pop
sub
shl
fs
cld
jg
imul
scas
fucomp
test
sub
fwait
jmp
add
pop
ss
mov
mov
dec
fcom
shl
enter
mov
push
jmp
fmul
xchg
jmp
push
pop
sub
mov
js
shl
jmp
or
adc
or
test
fld
rcr
dec
daa
mov
jl
jno
cmp
xor
enter
push
or
or
jle
fs
test
aam
aas
push
push
call
add
add
data16
jmp
add
sbb
jno
and
ffree
mov
or
inc
sti
dec
or
push
jnp
jmp
fstp
fld1
fdiv
fstp
add
ja
fstp
cmp
inc
pop
add
inc
adc
push
adc
push
fnstenv
sub
fild
fmul
jge
inc
and
inc
or
psubusw
fmul
push
or
sub
gs
gs
aaa
add
ud0
push
call
shr
push
je
jmp
and
dec
or
shl
fstp
(bad)
or
jae
test
jnp
or
ret
mov
dec
jle
add
mov
inc
or
dec
dec
stos
mov
mov
pop
sub
jno
mov
adc
add
push
lea
push
push
dec
cld
call
push
jbe
call
xor
jmp
test
push
aam
leave
push
je
mov
push
(bad)
call
lea
cmp
ja
test
jbe
push
add
pop
adc
test
and
add
add
les
test
js
xor
loope
mov
cli
adc
mov
and
mov
inc
(bad)
aaa
test
and
mov
pop
pop
mov
cmps
mov
loop
dec
addr16
mov
push
cmp
push
pop
cmp
jle
add
(bad)
ja
call
and
dec
mov
mov
mov
mov
mov
inc
add
cmp
jl
call
adc
or
xor
jmp
gs
push
mov
adc
aad
push
test
push
shl
fsubr
xchg
push
(bad)
int
call
movzx
xor
mov
push
mov
push
out
mov
or
leave
mov
bndldx
loope
shl
test
add
dec
std
mov
adc
je
lea
movzx
or
aaa
adc
clc
(bad)
js
adc
add
push
mov
je
mov
and
(bad)
cmp
fst
fstp
pop
or
pop
or
dec
fdivr
sub
inc
add
mov
gs
test
je
mov
stos
fcomp
mov
and
lock
xchg
mov
add
loop
push
lock
mov
and
push
call
loop
push
or
inc
inc
inc
cmp
dec
cmp
ja
enter
xchg
xchg
outs
sub
xlat
push
adc
jge
mov
mov
std
(bad)
out
(bad)
clc
mov
je
sub
jne
cmp
jne
movzx
push
push
push
push
xchg
(bad)
fild
sbb
add
add
pop
jae
jle
setge
mov
push
das
add
cmp
(bad)
je
(bad)
(bad)
out
pusha
inc
adc
mov
mov
mov
movzx
movsx
cmp
jne
(bad)
(bad)
inc
fucomi
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
(bad)
dec
jle
mov
jbe
cmps
shl
sti
jmp
dec
jbe
movzx
in
fmul
retf
mov
ja
inc
cmp
jb
xor
inc
movs
cmp
jb
xor
inc
push
push
mov
and
dec
push
lea
xchg
sub
out
into
stos
cmp
inc
test
aaa
inc
cld
(bad)
call
jecxz
push
add
mov
lea
add
mov
pop
adc
jge
push
jmp
je
cmp
ror
test
cmp
jne
pop
add
inc
lea
jge
dec
stos
fist
popa
pusha
jmp
jge
mov
hlt
call
aaa
in
inc
push
add
retf
cmp
inc
jg
add
jg
(bad)
jg
push
adc
test
add
add
mov
fdiv
jmp
cmp
jge
dec
cmp
fnstenv
daa
push
in
cmp
je
sti
(bad)
push
or
mov
inc
cmp
dec
ins
xor
xor
inc
shl
cmp
jl
cmp
jge
push
mov
pop
fdiv
mov
dec
cmp
je
cmp
mov
std
push
cmp
clc
dec
and
mov
add
(bad)
inc
pop
sbb
cmp
jae
movzx
imul
aaa
std
jg
add
ror
and
mov
cmp
pop
push
sbb
or
mov
mov
mov
mov
mov
mov
mov
jmp
mov
adc
add
add
inc
mov
cmp
jne
mov
sbb
add
loopne
sar
idiv
mov
add
clc
add
add
jmp
add
out
aaa
pop
or
clc
adc
inc
xor
sbb
or
jne
test
pop
jmp
or
mov
jmp
or
jmp
clc
mov
jmp
pop
imul
xlat
hlt
mov
cmp
mov
jne
and
adc
je
push
psllw
add
add
jb
adc
lock
jno
lock
ja
test
icebp
push
pop
mov
add
and
pop
mov
mov
call
inc
push
push
or
inc
enter
adc
inc
popa
inc
out
push
adc
int3
sbb
mov
cmp
sub
in
sbb
add
push
push
xor
push
mov
inc
jmp
and
mov
mov
call
push
jge
stc
jne
lea
sti
outs
cmc
push
cmp
jne
test
test
ja
jmp
cmc
and
add
es
mov
sub
stc
call
inc
push
adc
sub
aad
xchg
aad
pop
sub
es
hlt
jne
push
or
sbb
je
pop
clc
pop
pop
repnz
add
loop
(bad)
inc
outs
ins
icebp
mov
mov
or
or
pop
hlt
mov
cli
out
dec
jg
cmc
or
inc
adc
xor
mov
or
cmc
(bad)
out
mov
not
test
mov
jne
lea
daa
pop
push
fdivr
push
call
add
clc
mov
and
mov
and
pop
or
push
push
and
add
psubq
ffreep
aas
adc
call
enter
leave
je
push
mov
stos
stos
in
add
stos
mov
pop
mov
mov
jecxz
push
mov
mov
xor
push
stos
je
and
pop
xor
test
add
sbb
jp
mov
add
cmp
xor
fwait
sbb
xchg
shr
stc
adc
jmp
cmp
jle
push
mov
push
(bad)
jmp
cwde
push
and
mov
pop
pop
test
jne
inc
cmp
jl
jg
adc
fst
xor
cmp
je
jg
inc
push
outs
or
xor
and
lea
mov
mov
test
inc
aam
or
mov
call
add
sub
jne
inc
cmp
jl
pop
cmp
repnz
mov
add
add
cs
sbb
xor
push
outs
add
xor
div
push
mov
jmp
loope
dec
scas
or
push
or
or
jb
xor
enter
add
fist
lock
jmp
test
push
push
cmp
ret
test
lea
mov
jmp
out
push
adc
mov
push
out
ret
mov
retf
mov
xor
fidiv
or
or
aas
mov
pop
or
shl
mov
shl
push
call
clc
je
jl
mov
mov
test
outs
sub
cmp
jle
jbe
cld
mov
jmp
add
jne
jbe
hlt
or
push
or
add
scas
lea
mov
jmp
mov
mov
mov
repz
cmp
jl
inc
add
sub
and
mov
inc
pop
pop
pop
loopne
xchg
or
rol
(bad)
jmp
movzx
mov
shr
xor
shl
xor
xor
inc
jl
clc
or
fistp
mov
lds
aaa
jne
pop
ror
dec
int
and
inc
mov
(bad)
lea
mov
test
pusha
mov
adc
mov
call
outs
out
jbe
call
add
inc
xchg
push
xchg
cmps
mov
jno
(bad)
mov
test
je
sbb
pop
or
dec
adc
pop
fwait
mov
inc
and
mov
pop
mov
inc
jmp
addr16
adc
push
jg
jbe
adc
inc
or
cmp
jl
pop
sbb
retf
add
sbb
or
outs
loopne
xor
data16
sbb
push
dec
jne
jmp
lock
iret
inc
sti
sbb
and
mov
adc
inc
and
push
clc
xchg
mov
fstp
adc
sub
dec
push
push
daa
mov
xchg
sbb
bound
xlat
cs
aad
jl
pop
ret
loopne
adc
sub
add
outs
xor
ret
cdq
sub
mov
push
cmp
jne
ficom
aad
or
dec
fild
xchg
fcomp
mov
psrlq
stc
or
daa
inc
mov
fild
fadd
fcompp
or
(bad)
xor
mov
add
and
mul
pop
mov
mov
inc
lds
inc
sub
add
sbb
fsubrp
ds
and
mov
rcr
add
push
pop
inc
pusha
clc
call
loop
rcr
jle
fld
sbb
xor
push
scas
mov
or
call
or
lock
scas
into
call
add
gs
enter
ss
push
add
nop
xor
test
inc
mov
xor
call
mov
pop
and
fldz
lock
cld
jg
adc
pop
mov
fld
push
pushf
pop
loop
sbb
jne
ficom
into
fstp
call
std
push
pop
or
pop
or
add
and
call
iret
sub
mov
xlat
mov
(bad)
adc
dec
mov
push
lea
lfs
dec
add
and
js
jg
retf
repz
sub
mov
(bad)
les
or
(bad)
shl
mov
pop
adc
jbe
jmp
adc
inc
jne
call
or
arpl
call
xor
sbb
cmp
loop
sub
push
push
mov
jmp
aaa
fst
enter
lea
call
dec
into
std
jne
leave
ret
jmp
call
std
mov
or
or
xchg
push
call
xchg
in
outs
and
fnsave
inc
lock
push
push
mov
push
call
call
jg
dec
or
push
push
daa
call
and
mov
icebp
je
push
jmp
les
dec
inc
and
mov
je
mov
dec
push
call
cmp
jbe
mov
(bad)
dec
test
enter
sub
enter
add
inc
cmp
jo
lock
jb
adc
and
add
ja
jae
jmp
call
sub
pop
in
push
xchg
sbb
outs
mov
or
add
out
ja
push
lea
push
lea
call
adc
jbe
add
je
adc
mov
adc
jo
dec
inc
out
call
or
xor
mov
sbb
loope
xor
add
and
out
jno
push
mov
push
push
jmp
push
cmps
shr
jg
or
inc
lds
jge
or
fstp
add
ror
sub
and
lock
pop
movs
cmp
jmp
jg
cmp
call
inc
add
dec
clc
mov
or
test
outs
or
scas
push
ss
rcl
aas
or
jo
sub
pusha
fnsave
or
cmp
cmp
push
cwde
push
push
mov
push
je
pop
shl
jne
bound
jle
mov
call
sbb
jne
js
push
push
mov
ds
dec
(bad)
out
mov
fild
push
push
fstp
fld
push
mov
mov
lock
aaa
test
jne
xlat
adc
ja
xor
lods
xchg
shr
std
mov
mov
jle
lea
call
xchg
or
lock
or
sbb
(bad)
mov
jmp
call
test
(bad)
mov
call
mov
and
xchg
and
mov
jo
fild
dec
in
push
call
push
jmp
ror
jg
mov
cmps
or
adc
and
adc
adc
or
in
bnd
push
mov
mov
add
push
call
jg
popf
adc
pop
push
add
mov
pop
mov
pop
sub
cmp
jge
xor
pop
or
ud0
icebp
or
jge
push
push
push
push
push
mov
mov
jne
or
mov
push
sbb
adc
ss
lea
jmp
add
je
mov
push
call
sbb
hlt
push
(bad)
call
inc
or
mov
fist
mov
xchg
(bad)
lea
hlt
sbb
call
adc
xor
pop
sar
je
mov
push
call
sar
dec
adc
push
push
push
test
scas
pop
add
or
daa
sbb
pop
fwait
(bad)
cmps
add
ret
je
cmp
xchg
jmp
adc
push
push
call
call
and
xor
adc
jl
or
mov
push
call
jmp
in
mov
sahf
cmp
mov
cwde
adc
sub
and
push
clc
(bad)
(bad)
cmp
mov
mov
mov
daa
or
dec
mov
mov
(bad)
(bad)
out
or
dec
add
mov
mov
mov
mov
mov
mov
mov
std
xlat
jmp
mov
mov
mov
xchg
cmp
psubsb
jne
in
add
aas
cmp
jmp
jmp
xor
pop
add
jmp
push
pop
cmp
je
out
loop
sbb
pop
jge
test
aad
xchg
js
(bad)
mov
add
push
(bad)
mov
jmp
sub
cmp
jge
scas
mov
loope
and
jg
dec
cmp
ja
and
jmp
mov
or
bound
jmp
outs
xlat
or
or
jmp
jbe
or
push
jmp
push
jmp
cmp
nop
xor
xchg
int
jmp
add
stc
jmp
popf
(bad)
mov
or
push
jmp
je
sub
leave
or
add
cmp
lea
and
jmp
loopne
and
call
sub
(bad)
jmp
sub
je
dec
je
dec
je
sub
je
div
dec
je
dec
dec
jne
pop
adc
or
and
mov
xor
jmp
or
int
jge
adc
pop
pop
pop
mov
xor
sar
ret
xchg
add
cdq
add
stos
mov
xor
not
add
or
cmps
jmp
add
ja
jmp
dec
pop
daa
sbb
daa
add
scas
mov
push
adc
mov
mov
stos
lea
jmp
pop
mov
loope
add
mov
leave
rcr
add
add
sete
push
push
neg
jbe
dec
adc
mov
mov
jne
mov
prefetchnta
add
outs
sub
or
sbb
test
movq
jmp
push
outs
mov
jo
push
js
and
je
(bad)
(bad)
dec
sbb
mov
and
sar
lea
movq
packuswb
paddusb
movq
pand
paddw
(bad)
push
(bad)
pand
por
psrld
pshufw
movd
add
add
add
sub
fcom
add
mov
rol
(bad)
pop
(bad)
mov
emms
pop
dec
or
and
inc
or
lea
add
repnz
cmp
test
hlt
inc
cld
jecxz
or
or
dec
add
(bad)
mov
sbb
outs
push
adc
outs
pop
sbb
outs
(bad)
(bad)
(bad)
jmp
movq
movq
movq
pextrw
pinsrw
pshufw
pextrw
pextrw
(bad)
(bad)
fiadd
pinsrw
pinsrw
packuswb
pshufw
push
push
fcomp
jmp
ja
lds
loopne
fmul
jo
sub
mov
push
jmp
jmp
(bad)
or
add
addr16
setp
(bad)
(bad)
jg
movq
movq
add
add
sub
jmp
sbb
add
add
mov
mov
jecxz
(bad)
dec
mov
add
add
dec
jmp
add
pop
cmp
jmp
cmp
add
ja
std
inc
je
adc
lea
cld
jbe
psllw
test
rol
and
cmp
pop
fsub
and
sar
push
(bad)
fsub
mov
call
or
jge
(bad)
mov
sub
cmp
cmp
mov
cmp
out
sub
or
mov
test
add
push
shl
outs
stos
clc
dec
and
mov
add
or
inc
fadd
loopne
mov
xor
jg
xor
call
mov
mov
sub
dec
(bad)
dec
push
jb
push
lock
mov
pxor
movq
mov
outs
push
loopne
je
gs
jg
je
add
outs
fimul
jb
(bad)
paddd
pand
pextrw
movd
punpcklbw
sbb
(bad)
fmul
jg
add
add
dec
jne
jmp
jmp
xor
inc
jg
pand
pcmpeqd
pxor
cmp
mov
or
in
pop
jmp
emms
push
(bad)
or
in
dec
ret
call
arpl
je
shl
mov
and
mov
jp
outs
push
mov
adc
cmp
mov
les
sar
pop
adc
ja
add
sub
(bad)
(bad)
mov
push
and
pop
hlt
sar
fldz
mov
fstp
mov
or
push
hlt
fmul
mov
push
mov
and
fild
mov
mov
mov
inc
fcom
lds
aaa
fldenv
rcr
push
ror
mov
mov
les
fcom
or
adc
push
sti
mov
push
mov
aaa
lock
mov
fcomp
mov
push
push
movss
add
dec
adc
mulps
subss
divss
cvtsi2ss
adc
or
outs
mov
gs
jne
push
jne
jge
ja
mov
or
out
inc
fisttp
scas
fucomi
fcomp
pop
es
pop
pop
loopne
icebp
and
pop
out
sbb
pop
jne
lock
into
in
pop
addr16
sbb
pop
int
outs
into
in
mov
pop
call
in
cmp
ins
or
hlt
or
cmp
push
dec
jmp
imul
or
jge
(bad)
adc
pop
push
adc
out
mov
(bad)
xorps
sub
cmp
add
mov
(bad)
ja
(bad)
push
mov
jge
mov
mov
bndldx
test
cmp
je
ja
cmp
je
inc
shl
pop
(bad)
rsqrtss
push
add
(bad)
minss
adc
std
mov
xor
mov
pop
and
jmp
jae
inc
sub
inc
sahf
enter
(bad)
and
sub
inc
dec
cs
mov
jle
dec
mov
mov
paddsb
leave
cmp
jne
into
jmp
pop
push
push
xchg
outs
add
shrd
xchg
movs
fstp
sbb
pop
leave
dec
fwait
test
enter
lea
mov
shr
push
int
call
paddw
jnp
test
mov
je
call
sar
lock
rol
mov
mov
push
cld
or
cmp
inc
(bad)
mov
jecxz
lods
inc
ror
dec
mov
sti
fsub
ins
push
ins
or
pop
jne
mov
pop
jge
adc
adc
xor
pop
sar
xlat
mov
jno
pop
std
into
test
cmp
xor
adc
(bad)
mov
fcom
or
pop
xor
push
inc
iret
sub
sub
ds
aas
or
punpcklbw
movq
push
and
shl
daa
sbb
xor
cmp
cmp
push
push
je
cmp
jne
mul
fiadd
call
or
pop
call
jmp
call
mov
jmp
in
sub
push
mov
lea
push
push
inc
push
call
dec
pop
add
cmp
jbe
mov
and
pop
or
call
cmps
cdq
add
pop
push
cdq
mov
adc
push
call
xor
and
idiv
enter
movzx
sub
push
push
adc
fst
ror
mov
js
adc
adc
out
mov
jno
push
call
jae
clc
(bad)
mov
push
pandn
mov
mov
movd
or
punpcklwd
(bad)
loopne
ror
(bad)
movd
inc
outs
push
add
enter
fimul
(bad)
push
sub
push
or
cli
daa
in
ins
or
or
jno
add
fisttp
out
imul
jmp
xchg
adc
jo
push
mov
out
cli
mov
jns
mov
jns
mov
mov
mov
sbb
cmc
sbb
test
mov
mov
push
mov
push
mov
mov
sar
lea
sar
add
add
lock
or
inc
lock
movzx
(bad)
fdivr
mov
mov
movzx
or
mov
dec
cmp
jge
pop
jmp
loope
dec
xor
inc
sub
imul
add
movzx
mov
icebp
(bad)
(bad)
cli
or
mov
xor
inc
in
mov
shr
unpcklps
(bad)
push
lea
mov
mov
mov
shl
lea
xchg
push
dec
call
loop
add
add
add
dec
mov
test
out
pop
pop
xchg
adc
jge
addr16
sub
sbb
pop
or
std
(bad)
stc
inc
les
jl
push
and
fwait
jle
inc
cld
mov
outs
mov
(bad)
fnstsw
xor
out
dec
outs
cmp
jmp
mov
pextrw
pextrw
mov
lea
cmp
cs
jmp
add
rol
ror
scas
stc
mov
add
lea
orps
in
call
adc
pslld
movq
add
xor
mov
pmullw
por
clc
jg
sbb
push
jmp
push
mov
aaa
add
dec
jge
jns
iret
jmp
fwait
add
iret
stc
cmp
ja
imul
add
pinsrw
adc
repnz
xchg
mov
adc
idiv
movq
punpcklbw
punpckhbw
por
push
(bad)
mov
add
jmp
mov
mov
(bad)
cld
add
movd
pshufw
pmullw
movd
or
paddusw
or
or
paddusw
or
paddusw
(bad)
mov
xchg
movs
pop
sbb
jmp
or
in
jne
pop
bound
neg
pop
push
test
or
mov
loop
cdq
inc
ret
or
scas
or
(bad)
pusha
inc
into
shl
sub
mov
pusha
fisttp
and
pop
xor
add
or
dec
and
inc
xor
mov
mov
adc
add
push
std
daa
dec
cmp
inc
stos
cmps
fwait
xor
or
dec
lea
call
push
call
adc
scas
cdq
sti
push
call
call
add
(bad)
call
leave
ret
or
mov
test
push
jle
cmp
jg
xor
and
(bad)
inc
mov
call
fcom
sbb
psadbw
inc
jne
fcom
enter
or
jne
fcom
fcomp
cwde
inc
jne
push
pop
ret
fstp
inc
cmp
jl
sar
icebp
fstp
jmp
mov
call
push
mov
mov
je
mov
pop
mov
mov
add
loopne
jmp
cmc
jecxz
aas
add
add
xor
sub
sbb
push
retf
(bad)
sub
push
push
call
aaa
add
pop
je
sub
push
fadd
push
call
pop
add
mov
call
push
dec
pusha
sbb
push
call
add
adc
add
aas
push
call
push
test
push
lea
push
je
push
(bad)
jmp
push
shr
loope
adc
push
call
call
inc
or
sahf
lock
mov
push
fld1
pushf
pop
out
out
sbb
jbe
call
mov
mov
pop
jmp
call
pop
sub
scas
leave
mov
or
or
scas
mov
cmp
jle
hlt
jmp
jge
les
enter
(bad)
call
mov
and
jle
lea
fcmovne
push
inc
aad
std
add
mov
lea
push
push
call
(bad)
cmps
add
push
xchg
pop
je
inc
fisttp
and
or
cmp
paddsb
mov
call
push
call
mov
inc
sar
mov
call
xchg
rol
cmp
fistp
mov
or
fild
lock
add
xor
cwde
inc
call
fwait
mov
inc
jne
mov
push
call
stc
adc
adc
fcomp
in
push
mov
mov
dec
push
add
shl
shl
sbb
lock
and
test
pop
aad
cmp
or
mov
push
lea
push
push
mov
icebp
out
push
test
call
ja
mov
inc
sbb
ret
je
dec
je
dec
je
dec
dec
jne
jp
loope
push
icebp
adc
push
or
pop
in
das
jle
sar
jge
call
std
mov
push
lea
call
pop
call
adc
scas
or
pop
pop
pop
jmp
aas
hlt
call
std
mov
or
(bad)
add
pop
hlt
call
fistp
call
ret
push
dec
hlt
push
add
mov
add
ret
pop
lds
mov
repz
or
out
mov
je
push
call
inc
fistp
ror
mov
in
fdiv
call
mov
dec
cld
popa
inc
adc
mov
push
add
or
loopne
mov
mov
(bad)
pop
fimul
add
(bad)
call
xchg
sbb
movs
add
call
cld
test
dec
sbb
js
sbb
fbld
pop
sub
or
sahf
push
push
imul
xlat
std
add
push
call
sbb
jo
(bad)
mov
dec
pusha
or
pop
lea
call
xchg
and
bound
out
or
ret
push
mov
je
adc
es
(bad)
sti
jne
push
push
mov
jno
sub
xor
inc
out
mov
jg
(bad)
jmp
push
mov
call
sub
je
dec
je
mov
imul
or
nop
cmp
add
push
jmp
xor
out
cmps
sti
cmp
jne
or
mov
and
push
icebp
mov
je
mov
cmp
aam
pop
dec
mov
mov
into
mov
mov
mov
mov
or
cmp
call
or
adc
jbe
sub
nop
push
and
jno
add
push
push
or
scas
out
cmc
outs
mov
hlt
call
mov
inc
jl
push
cmp
adc
clc
push
pop
(bad)
fcomp
shl
mov
or
add
jbe
jmp
jge
mov
mov
jmp
jne
inc
into
call
mov
and
sti
jmp
fld
fwait
mov
(bad)
cmp
addr16
jl
sbb
jmp
mov
mov
add
mov
(bad)
add
add
enter
ror
sbb
cli
iret
push
add
fld
sbb
push
inc
xchg
repz
add
push
jmp
fild
movs
sbb
iret
sbb
inc
cmp
push
fsubr
jmp
out
mov
add
outs
or
cmps
stc
aam
and
pusha
and
push
add
push
shl
daa
adc
xor
cmp
in
mov
mov
in
adc
and
push
sbb
sub
adc
call
scas
jbe
cmp
adc
cmp
stos
dec
inc
ins
push
call
sti
dec
jmp
inc
sbb
push
fsub
out
jo
lds
adc
add
push
fsub
cmp
and
mov
mov
lea
pop
add
jle
out
mov
push
call
pop
ret
ins
ret
push
mov
jmp
adc
push
call
push
push
cmp
js
xchg
outs
mov
loopne
ret
push
and
int
mov
cmp
pop
std
(bad)
out
(bad)
je
push
push
push
call
inc
lea
cmp
pop
jne
cmp
jne
xchg
add
push
call
lock
pop
ja
sub
sub
inc
push
add
cmp
adc
aas
add
ret
xor
pop
cmps
adc
call
call
pop
lock
cmp
jne
push
movs
mov
test
call
call
push
neg
les
mov
push
push
pop
cmps
jecxz
(bad)
sub
sbb
fcos
icebp
ja
cwde
push
cwde
mov
pop
neg
ret
mov
push
call
jmp
(bad)
pop
je
push
call
(bad)
call
icebp
inc
push
add
cmp
cmp
jne
movsx
imul
inc
add
add
ret
mov
xor
call
ror
mov
mov
sar
dec
ret
push
push
push
mov
push
lea
xor
jmp
sub
push
call
mov
inc
and
je
mov
add
cmp
jne
mov
(bad)
outs
dec
xor
push
mov
mov
xchg
mov
mov
or
jmp
mov
add
push
call
push
icebp
inc
pop
or
iret
call
pop
pop
pop
push
out
and
cmp
mov
je
push
mov
push
inc
repnz
push
inc
call
pop
cmp
cs
pop
test
mov
dec
pop
jmp
adc
adc
cld
(bad)
std
(bad)
jg
test
mov
jne
and
push
call
mov
cmp
call
pop
jge
dec
jae
cmp
je
push
(bad)
call
(bad)
test
jne
mov
mov
jbe
std
inc
sbb
lds
out
mov
jne
push
inc
inc
in
jp
(bad)
mov
mov
fiadd
popa
out
cmp
jnp
stos
stos
into
icebp
xchg
and
call
push
push
pop
sar
ret
mov
mov
sbb
pop
and
mov
sub
and
push
sub
repz
in
or
cmps
or
inc
push
push
mov
fidiv
jle
jmp
push
repz
rol
or
(bad)
push
jg
test
jne
test
sete
cmp
je
loope
fnstsw
out
jge
mov
mov
push
xchg
call
call
adc
inc
jmp
or
pop
(bad)
(bad)
cmp
jbe
lds
loopne
dec
sbb
and
aaa
push
jb
pusha
ss
addr16
xchg
(bad)
push
push
mov
aam
mov
add
jmp
inc
repnz
inc
add
xor
push
mov
jge
sar
xlat
sbb
mov
out
outs
cmp
jp
mov
add
pop
xor
mov
dec
and
cmp
mov
call
sbb
cmp
mov
mov
mov
in
or
push
sar
stos
mov
or
dec
mov
cmp
inc
lock
mov
jle
jno
push
push
push
call
addr16
adc
movs
mov
inc
adc
call
mov
add
jae
push
call
inc
hlt
jg
and
add
call
mov
inc
and
inc
clc
dec
jo
jmp
mov
mov
mov
ret
mov
or
pop
(bad)
or
frstpm(287
cwde
xchg
in
test
pop
call
or
inc
loope
mov
loope
rcr
mov
cmc
mov
push
imul
enter
jno
das
ficom
(bad)
jo
mov
pop
(bad)
push
fcmovnb
sbb
nop
jl
(bad)
rcl
fwait
sbb
call
and
rcl
retf
and
mov
push
ret
pop
leave
out
pop
inc
bound
movs
fild
push
call
ja
imul
(bad)
mov
jb
clc
fdivr
mov
je
xlat
lock
and
cmp
ret
pop
je
outs
leave
xchg
sbb
(bad)
and
(bad)
dec
dec
loopne
pop
or
test
add
dec
je
dec
(bad)
fwait
cli
std
je
dec
jne
and
call
mov
and
add
or
inc
jmp
mov
call
dec
add
jg
sti
add
aam
mov
ror
call
mov
jmp
aam
jle
call
dec
aam
inc
in
jge
inc
or
iret
sti
das
xlat
add
mov
inc
hlt
call
(bad)
mov
mov
je
call
jmp
mov
pop
call
sub
push
inc
pop
test
xchg
pop
jne
mov
xchg
cmp
jge
sub
adc
xor
inc
adc
je
fimul
and
mov
add
aaa
call
dec
fld
inc
je
push
call
jmp
cmp
je
mov
push
jmp
call
push
or
push
push
mov
push
sti
mov
je
mov
jg
mov
push
call
inc
mov
lock
or
dec
push
dec
dec
fdiv
cld
(bad)
(bad)
push
call
mov
push
pop
mov
mov
call
std
mov
call
pop
dec
dec
fcom
int3
push
call
cmp
imul
stos
stos
in
hlt
mov
mov
call
mov
int3
push
call
mov
pop
call
call
adc
(bad)
stos
int
mov
cmp
push
push
test
test
or
dec
jg
xchg
clc
cmp
je
push
adc
ins
enter
adc
call
cmp
aas
int3
std
ds
int3
push
in
inc
jns
fimul
add
ja
inc
ins
pop
cmp
jne
outs
jg
call
jbe
cli
push
imul
enter
sar
js
or
jmp
jmp
cmps
jle
jmp
lea
ror
sub
mov
cmp
jg
call
loopne
jne
call
call
mov
call
shr
add
jo
pop
push
call
fld
shl
jns
call
scas
jmp
inc
push
retf
dec
mov
(bad)
cmp
call
inc
add
xor
fsub
cmp
out
je
in
mov
mov
cmp
jne
mov
call
and
(bad)
ss
mov
pop
data16
sbb
out
(bad)
inc
jge
inc
jne
mov
das
mov
cmp
js
mov
cmp
or
sub
cmp
xlat
iret
rcr
sti
pusha
rol
call
push
shr
fucomp
or
pop
cld
je
adc
xchg
dec
add
xor
mov
daa
mov
cmp
mov
mov
mov
dec
or
mov
mov
jne
inc
xlat
dec
cmp
jne
push
jmp
jecxz
or
push
jecxz
cmp
push
mov
cmp
push
pop
(bad)
dec
pop
sub
dec
add
inc
or
jle
push
mov
push
sar
cmps
mov
call
push
stc
cmp
mov
mov
and
inc
fmul
add
add
push
sahf
mov
out
fs
mov
je
sbb
fcomp
pop
and
and
(bad)
pop
sbb
sti
ret
out
cmp
pop
or
retf
push
call
mov
test
je
push
popa
out
mov
call
xor
sub
mov
jp
lea
ja
call
loop
mov
mov
call
cmp
jle
(bad)
jmp
outs
clc
lea
call
or
adc
inc
and
jbe
aam
mov
mov
cmp
jne
sbb
jo
adc
jecxz
ja
mov
jne
add
sbb
sbb
pop
call
pop
sub
repz
setne
call
retf
add
pop
ja
pop
dec
je
push
push
call
les
inc
dec
sbb
mov
inc
jae
inc
push
adc
and
mov
sbb
pop
sbb
pop
and
loopne
pop
in
test
ret
cmps
pop
xor
in
rcl
dec
xlat
test
ja
xor
pop
jo
call
inc
jmp
sbb
lahf
mov
or
xchg
pusha
pop
pop
mov
je
mov
inc
arpl
(bad)
sub
pop
jo
lock
sbb
mov
mov
call
jg
fidiv
call
pop
je
mov
push
push
sub
test
dec
push
mov
mov
sbb
xchg
and
int3
cmp
les
push
fwait
xchg
fs
je
mov
jmp
push
jmp
mov
std
(bad)
call
mov
inc
cmp
xor
mov
mov
and
inc
inc
mov
inc
mov
push
call
int3
add
add
clc
adc
sub
inc
pop
mov
pop
call
fwait
add
mov
mov
jl
cmp
jne
push
sbb
sbb
cmp
sub
add
jne
adc
(bad)
mov
cmp
aad
(bad)
and
add
lea
mov
call
outs
enter
call
sbb
imul
adc
mov
call
sbb
lea
call
jbe
and
call
pop
pop
fmul
jg
icebp
(bad)
cmp
and
or
cmp
mov
je
mov
call
(bad)
mov
arpl
adc
add
jg
cs
icebp
(bad)
mov
add
pop
push
jb
sbb
retf
mov
test
std
xchg
mov
cld
je
mov
push
xor
push
dec
sbb
loopne
outs
scas
pop
call
test
or
add
xchg
jb
call
or
xchg
ja
jne
mov
cld
fwait
mov
cdq
je
dec
or
mov
adc
adc
dec
or
cmp
je
sti
loope
jne
push
pop
inc
not
pop
sub
shr
sbb
jne
mov
arpl
fbld
cs
add
inc
outs
add
ret
call
ins
mov
hlt
call
jo
inc
adc
inc
dec
cmp
inc
cmp
jne
into
dec
pusha
or
test
outs
call
sub
mov
out
outs
jmp
call
loop
mov
mov
test
mov
es
jne
scas
je
sbb
stos
push
dec
or
add
mov
out
dec
or
cmp
jne
or
inc
lds
inc
sbb
cmp
cmp
mov
push
call
scas
mov
ficom
arpl
fild
mov
mov
mov
jmp
ja
add
and
push
jne
mov
shl
mov
push
call
scas
jg
or
jmp
mov
pop
jne
xchg
mov
push
dec
jecxz
push
pop
add
or
add
inc
mov
or
mov
jo
in
cmp
xor
dec
je
ja
cmc
outs
xchg
push
call
jmp
fucomip
jl
shufps
arpl
test
push
inc
sar
jmp
add
push
adc
push
or
jl
sbb
sub
pop
push
(bad)
icebp
fisttp
inc
je
pop
push
call
mov
addr16
inc
xor
call
sbb
cmp
xor
mov
jne
call
scas
mov
call
(bad)
fwait
scas
shr
cmp
mov
dec
cdq
dec
call
call
ins
pop
mov
call
xadd
cmp
je
push
es
mov
call
mov
rol
or
pop
ja
and
call
js
add
in
sbb
jbe
push
call
pop
mov
mov
hlt
inc
call
call
je
cmp
jae
je
mov
xor
je
in
(bad)
(bad)
cmp
push
cwde
jo
test
add
int
adc
pop
pop
jne
and
push
scas
out
call
mov
push
call
or
xor
adc
or
call
dec
ins
(bad)
popf
or
fdivr
cmp
pop
je
dec
adc
mov
in
sbb
inc
mov
pop
pop
pop
ins
cld
mov
add
clc
or
mov
sahf
sbb
sar
and
or
and
lea
(bad)
push
ret
xor
cmp
je
cmp
jl
cmp
jge
loop
mov
mov
test
jl
mov
jmp
ret
cmp
jne
add
jne
cmp
push
repz
jne
push
push
add
adc
jne
push
mov
mov
inc
add
or
dec
adc
dec
add
cmps
imul
push
scas
fild
adc
adc
or
call
sbb
sahf
rcr
sbb
push
xor
mov
iret
scas
(bad)
dec
cmp
xor
fmul
mov
std
out
jmp
jp
je
cmp
add
sbb
enter
fwait
mov
add
or
(bad)
jne
cmp
pop
inc
xor
test
push
je
cmp
or
mov
jle
inc
ret
fs
mov
fnstsw
cmp
clc
or
push
mov
and
movzx
imul
push
imul
mov
and
imul
shr
imul
add
mov
add
add
mov
or
mov
sar
shr
(bad)
(bad)
dec
lea
sar
shl
or
add
mov
or
dec
adc
jl
mov
add
or
rcr
std
push
and
test
ror
sbb
(bad)
dec
inc
movzx
push
push
mov
imul
movzx
and
(bad)
ret
popf
sti
scas
fimul
scas
into
xchg
add
or
xchg
test
jmp
jmp
shl
pop
or
pop
ret
mov
sbb
(bad)
fld
sti
std
dec
rol
push
xchg
(bad)
fmul
es
dec
adc
xor
mov
dec
add
jp
dec
push
add
adc
jmp
adc
or
or
mov
fild
xadd
jno
add
sub
mov
(bad)
test
call
(bad)
(bad)
fisttp
inc
or
clc
add
sbb
adc
clc
push
je
jle
cmp
jg
push
or
push
add
pop
aad
inc
sbb
ficom
mov
jp
push
call
inc
rol
mov
mov
(bad)
jg
sub
mov
imul
dec
imul
add
neg
jmp
mov
mov
cli
sbb
into
lea
adc
add
in
push
mov
jmp
jle
mov
jge
sub
mov
mov
dec
add
mov
lsl
adc
and
jmp
ret
jmp
xor
(bad)
pop
jae
mov
mov
and
jp
lock
and
sub
imul
shr
and
shr
lock
dec
xor
and
xor
mov
add
dec
jne
pop
pop
pop
pusha
std
jg
loopne
push
cs
inc
or
je
mov
add
(bad)
fbstp
inc
or
dec
mov
jne
mov
push
fcomip
out
ss
rol
jge
mov
mov
btc
ja
sbb
add
movq
add
push
rcr
jg
dec
out
ror
inc
fmul
out
enter
out
ror
outs
push
call
shl
loopne
adc
sub
push
ja
clc
jne
clc
mov
shl
sub
add
push
into
fs
push
mov
rcl
mov
sbb
clc
(bad)
(bad)
cmp
add
jno
mov
push
shl
call
ret
outs
test
out
or
pop
nop
fst
data16
cmp
xor
aas
fs
loopne
icebp
(bad)
(bad)
(bad)
cmp
loopne
shl
or
repnz
inc
icebp
(bad)
out
push
ja
xor
cmp
jle
push
push
movzx
add
add
mov
mov
mov
shr
std
(bad)
jmp
push
add
cmp
jecxz
jmp
sbb
(bad)
mov
(bad)
jmp
xchg
add
add
mov
stos
(bad)
call
add
add
inc
cmp
jl
pop
pop
pop
loop
adc
mov
cmp
xchg
pop
idiv
mov
outs
adc
mov
rol
in
add
cmp
jl
xor
add
add
cmp
dec
push
mov
add
add
dec
jne
pop
ins
(bad)
fstp
repnz
cs
aas
outs
pusha
mov
out
sbb
por
add
sar
or
(bad)
and
add
dec
jne
fwait
scas
scas
ja
outs
ror
mov
add
mov
sub
mov
mov
adc
(bad)
inc
jb
cmp
pop
push
mov
jmp
movd
movd
push
cs
jg
jg
punpckhwd
punpckhdq
movq
fimul
aad
(bad)
cmp
std
call
or
std
fmul
fisttp
jle
add
mov
push
shl
in
adc
add
mov
mov
and
lea
push
test
mov
jle
test
add
mov
xor
mov
add
(bad)
(bad)
mov
push
add
mov
movzx
add
add
sar
movzx
out
(bad)
fnsave
dec
sar
or
cmp
rcpps
mov
in
or
mov
jmp
or
movzx
movzx
call
aad
add
into
movzx
mov
sar
and
mov
idiv
mov
sar
add
add
sbb
mov
movzx
pop
pop
jg
(bad)
fwait
pusha
sar
xor
mov
dec
xchg
clc
dec
xor
scas
add
std
(bad)
sti
pop
cmp
mov
stc
mov
inc
inc
add
sbb
xor
clc
or
test
jecxz
call
mov
mov
push
mov
push
mov
mov
aas
enter
jle
push
mov
in
lock
movzx
dec
xor
movzx
ins
clc
fcomp
add
xchg
movzx
add
sar
sbb
aaa
jl
std
xchg
movzx
(bad)
movzx
fisub
and
dec
dec
and
jne
rcr
mov
movzx
push
call
arpl
dec
pop
jne
stos
movs
cld
xor
push
push
mov
movzx
add
and
mov
or
push
int3
cs
fisttp
ret
mov
sar
and
popf
shl
mov
stc
inc
inc
dec
jne
pop
pop
add
mov
dec
or
cld
sbb
js
add
rsm
or
mov
mov
sbb
mov
jle
add
clc
push
div
mov
xor
or
movzx
hlt
cmp
mov
push
dec
add
dec
cld
cmp
jae
and
xor
adc
fisttp
nop
clc
add
add
pop
add
fild
pop
shr
add
daa
or
mov
jmp
mov
daa
cmovbe
movzx
shr
jmp
push
pop
or
mov
jmp
xor
sub
cli
out
and
sar
and
enter
inc
cmp
sub
neg
sbb
and
add
mov
mov
scas
repnz
lock
lds
xchg
or
and
(bad)
ror
xchg
jmp
add
sti
jl
add
xchg
popa
jmp
retf
shr
add
int
ret
lock
xchg
mov
call
in
mov
mov
outs
mov
inc
mov
cmp
imul
jl
and
add
mov
xchg
add
mov
test
mov
push
add
dec
cld
jle
fistp
into
dec
add
inc
cld
add
sahf
add
adc
inc
cmp
add
or
outs
pop
push
dec
iret
cwde
fucomp
sbb
inc
inc
(bad)
fimul
leave
wbinvd
xchg
imul
sbb
xchg
pop
dec
sar
lods
aaa
fimul
call
dec
in
dec
in
loop
jle
call
clc
add
or
loopne
push
mov
mov
inc
push
fdiv
mov
in
cmp
hlt
or
mov
jge
add
fwait
clc
outs
ins
ror
ret
add
lea
add
jb
sub
pop
lea
paddusb
bound
ja
(bad)
aas
nop
jae
sbb
jae
or
outs
jmp
ud0
out
(bad)
jle
mov
jmp
sub
pop
movd
mov
retf
fwait
out
(bad)
dec
fisttp
pand
pand
psllq
repnz
cmpxchg
add
jmp
dec
ffree
jb
lds
adc
xor
popa
pop
cwde
loopne
dec
mov
inc
dec
jl
or
add
inc
dec
sbb
repnz
dec
and
cmp
jb
mov
(bad)
lds
jne
lea
push
(bad)
(bad)
(bad)
(bad)
push
mov
adc
mov
mov
mov
hlt
fucomp
xor
add
push
scas
mov
adc
mov
out
out
mov
pushf
add
das
mov
mov
mov
pop
das
sti
call
xor
add
mov
mov
jbe
mov
mov
mov
mov
jge
ss
xor
sub
in
inc
push
call
mov
dec
push
xor
push
push
push
cmp
cli
call
repz
adc
dec
push
sub
jne
call
mov
jl
add
cmp
unpcklps
je
mov
in
inc
jge
pop
lock
xor
lods
push
pop
inc
add
loopne
jmp
adc
cmp
je
mov
sub
je
mov
and
fnstenv
xchg
xor
push
pop
inc
std
and
pop
je
mov
adc
lock
inc
fild
mov
lea
mov
jmp
sar
pop
jl
dec
push
add
mov
adc
stos
sahf
mov
or
inc
jmp
push
mov
cmp
dec
test
add
add
(bad)
scas
fbstp
push
pop
test
jle
lahf
jg
adc
push
stos
aam
lea
push
movs
mov
(bad)
dec
push
mov
sub
add
push
push
push
call
mov
idiv
push
add
xchg
mov
ror
jnp
mov
jo
add
out
(bad)
fild
lea
push
mov
sub
add
or
adc
rcl
push
(bad)
xchg
call
cs
push
call
aam
jge
push
mov
movs
push
movs
sub
iret
fsubr
xor
mov
movs
push
call
and
inc
mov
pop
lea
mov
movs
add
call
pop
scas
dec
test
jge
add
(bad)
jg
mov
je
cmp
jne
cmp
jne
mov
(bad)
push
icebp
add
test
mov
sub
sub
test
mov
je
xchg
push
test
je
sub
jg
pop
dec
or
sbb
(bad)
jg
sbb
inc
int3
and
les
push
push
mov
(bad)
(bad)
inc
pop
cmp
jl
cmp
jle
cmp
jne
push
jmp
push
pop
mov
imul
xor
cmp
test
mov
aas
and
dec
mov
add
into
call
into
push
aad
push
mov
jo
inc
and
les
call
mov
lea
inc
push
fmul
push
push
mov
movhps
movs
jne
ror
sbb
call
inc
add
les
inc
mov
push
cld
test
pop
jne
jmp
imul
lea
sar
call
mov
mov
push
cdq
fcomi
jbe
mov
mov
out
xchg
pop
mov
push
sbb
jecxz
pushf
in
ja
cld
lea
rep
mov
jle
dec
(bad)
out
loopne
test
clc
add
inc
push
push
push
call
ja
add
test
add
test
dec
jne
push
call
sahf
jb
xchg
and
mov
loopne
sub
ja
jbe
jne
inc
(bad)
push
cli
call
neg
cmp
add
cmp
inc
je
push
call
jle
add
push
call
in
ja
or
ja
dec
mov
sub
sub
test
jle
mov
test
sbb
or
mov
rep
add
dec
jne
adc
mov
sub
jg
adc
jle
inc
sub
jne
and
adc
clc
out
fdivr
dec
ja
movzx
jmp
pop
or
or
mov
or
add
jb
jle
cld
push
push
mov
cmp
cmp
add
mov
leave
je
call
(bad)
mov
mov
mov
sub
cs
jl
call
scas
iret
imul
lea
shl
cmp
jle
and
sub
push
pop
add
push
jle
push
add
inc
or
cdq
cmp
pop
ror
xchg
fiadd
or
mov
mov
xchg
inc
cmp
xchg
inc
or
or
loopne
cmp
dec
add
push
add
jle
or
or
mov
es
mov
mov
je
test
push
mov
call
and
sti
sbb
xchg
jle
mov
test
sbb
pop
xchg
jp
push
mov
push
(bad)
stos
(bad)
push
push
mov
adc
mov
xor
cmp
pop
je
std
sti
mov
push
add
mov
mov
push
pop
call
stc
sbb
sub
je
mov
call
or
pinsrw
push
(bad)
add
out
or
add
sbb
cdq
adc
push
retf
xchg
xchg
mov
mov
ret
or
dec
mov
mov
push
call
loope
pusha
out
mov
mov
arpl
mov
(bad)
mov
test
mov
out
call
pop
lahf
popa
and
mov
je
and
mov
fiadd
jne
mov
adc
sti
not
xor
pop
fs
add
out
mov
mov
mov
call
inc
je
movs
int3
push
mov
fucomp
pop
mov
test
jne
bound
dec
cmp
jne
mov
cmp
ja
jbe
mov
aad
jg
mov
lock
push
cmp
jne
mov
mov
mov
scas
enter
xor
test
js
pop
cmp
cmp
fnstenv
idiv
ja
scas
add
dec
or
call
mov
call
push
sbb
jne
jle
mov
push
lea
or
test
fcom
out
loopne
and
call
cld
lea
in
rol
loop
mov
add
mov
jmp
movs
loop
outs
cwde
push
lea
push
push
lea
push
push
lea
loop
or
push
push
call
jg
test
div
lea
push
push
inc
push
outs
loop
adc
cmp
fcom
data16
jnp
(bad)
fst
lods
sbb
sbb
xchg
add
in
out
mov
inc
cld
adc
xor
mov
pop
scas
pop
sbb
cmp
add
pop
lea
test
(bad)
jl
push
add
out
add
jo
fnstsw
sbb
mov
push
push
mov
mov
push
std
(bad)
mov
test
je
cmp
push
jnp
ret
push
call
scas
push
or
push
mov
lock
hlt
jmp
xchg
xchg
ja
fcom
lea
cld
lock
pop
mov
push
push
push
pop
mov
add
xchg
mov
push
call
or
push
push
call
or
data16
mov
mov
ffreep
mov
sub
mov
xor
cld
lahf
pusha
shr
test
je
in
push
or
je
mov
(bad)
mov
or
je
mov
cld
push
mov
(bad)
(bad)
call
movsx
cmp
jg
movsx
cmp
jge
cmp
je
movsx
mov
(bad)
aaa
inc
in
mov
jge
pop
and
or
cld
sub
imul
or
cdq
pop
or
add
jge
xor
test
or
leave
jne
cmp
pop
sbb
add
pop
pop
mov
mov
test
jne
shr
test
je
stos
cmp
xchg
sahf
call
dec
push
aas
mov
cmp
jl
cmp
jge
cmp
sub
inc
jl
cmp
jg
mov
idiv
add
ret
cmp
or
dec
xchg
or
outs
loop
fild
add
or
xchg
xchg
or
push
push
cmps
fsubr
jl
add
lea
mov
cmp
jl
jg
je
rcl
dec
pusha
jmp
dec
or
ret
xor
mov
mov
mov
ror
ins
(bad)
call
inc
jge
add
retf
mov
push
push
(bad)
out
ret
push
mov
push
mov
mov
cmp
out
loope
and
push
push
call
(bad)
call
and
test
pop
mov
mov
jl
or
js
jge
xor
(bad)
inc
inc
dec
mov
mov
mov
mov
add
mov
inc
loope
hlt
cmp
jne
(bad)
jg
inc
cld
mov
sub
mov
dec
add
cmp
lock
fnstsw
adc
inc
call
push
rcr
sbb
xchg
mov
xchg
mov
push
call
enter
xor
clc
add
cmp
aam
hlt
jg
mov
push
add
mov
ja
cmps
or
mov
fild
rcr
bound
mov
cmp
jge
fnstsw
jg
add
jno
daa
mov
sub
js
mov
cmp
jge
cwde
pop
aaa
sti
mov
neg
enter
fld
fcomp
inc
inc
adc
lea
jmp
call
call
dec
aam
fmul
jle
out
clc
jmp
mov
jge
lea
test
jl
pop
cmp
jge
into
std
or
add
inc
call
nop
or
cmp
jle
aas
jge
int
rol
retf
int3
inc
cmp
fnsave
mov
inc
cmp
pop
sti
pop
jb
int3
sub
inc
cmp
jle
add
and
sub
mov
jmp
or
jns
push
call
add
leave
mov
xchg
icebp
aas
mov
(bad)
and
sbb
push
inc
inc
mov
lea
jg
push
rcr
stc
or
add
rol
push
aam
xchg
jge
shl
add
cmp
cmc
jg
mov
cmp
je
nop
jne
dec
pop
inc
or
jne
je
sahf
test
adc
cmp
pop
je
(bad)
jmp
mov
mov
push
push
push
push
mov
sub
push
aam
push
rcl
add
add
xor
xchg
cmps
jne
push
push
push
push
repz
lds
mov
call
into
add
sub
jge
fdiv
ja
add
add
popf
cmp
mov
mov
inc
and
int
xor
dec
test
pop
aaa
add
sbb
fdiv
cvtps2pi
shl
call
adc
mov
je
sar
inc
cmp
jne
or
cmp
dec
xor
jmp
sar
inc
cmp
jne
cmp
jle
mov
(bad)
jle
add
shl
mov
xor
push
inc
shl
into
push
dec
dec
inc
cld
jmp
adc
mov
js
fist
push
adc
cmps
sbb
in
push
mov
mov
jmp
mov
mov
xor
or
cli
cmp
jne
push
cdq
cmp
(bad)
mov
mov
mov
and
cmp
jae
cmp
(bad)
dec
jmp
cmp
je
mov
mov
imul
imul
scas
sti
call
(bad)
mov
add
mov
jmp
adc
or
aaa
inc
test
je
mov
shr
xor
mov
aam
sbb
pusha
clc
cmp
jb
retf
imul
mov
or
mov
icebp
push
xor
test
mov
cdq
stos
push
es
idiv
jae
sub
pop
add
push
cdq
mov
imul
push
hlt
stc
imul
cmps
inc
add
sub
mov
test
jg
adc
sbb
adc
add
lods
loopne
cld
add
push
mov
call
jne
xor
mov
mov
mov
mov
fadd
xor
mov
mov
int3
and
jmp
hlt
(bad)
scas
lahf
push
push
add
retf
lods
stos
inc
(bad)
fld
push
fld
jge
lods
sub
fld1
and
inc
sub
fmul
fstp
pop
lea
fmul
mov
fstp
jl
scas
add
cmp
jl
loopne
cmp
sbb
mov
mov
and
pop
lods
ins
idiv
std
pop
xor
mov
mov
mov
mov
dec
jne
xor
mov
std
jg
or
mov
mov
clc
pop
add
mov
pop
mov
fld
fstp
add
jmp
(bad)
mov
loope
jmp
fild
add
sti
adc
(bad)
dec
fld
cmp
add
add
push
push
fst
fsub
call
pop
loopne
inc
loopne
mov
sbb
clc
fstp
lea
adc
inc
or
ins
call
or
cmp
mov
inc
inc
fcomp
inc
fmul
ja
lahf
fmul
inc
adc
fild
xchg
cli
lahf
and
test
dec
inc
fsubr
je
mov
std
(bad)
out
test
sub
cmp
jl
sub
mov
cmp
jl
sub
stos
inc
clc
fistp
cmp
jl
sub
fld
or
sar
and
and
fsubr
mov
and
jg
out
dec
lock
lea
pop
ss
add
mov
mov
rol
sbb
sti
mov
xor
fmul
mov
sub
out
loopne
jge
jbe
vpavgb
shl
shl
shl
and
(bad)
aas
ret
pop
or
ret
fs
fmul
mov
fld
sbb
or
fmul
faddp
fld
fmul
pop
fmul
faddp
fsubr
mov
retf
fadd
fstp
fldcw
or
add
and
dec
push
loopne
inc
or
int3
fadd
fsub
sub
(bad)
(bad)
mov
inc
cmp
fstp
fstp
jb
fstp
pop
fstp
pop
fstp
pop
frstor
cli
(bad)
push
stos
sub
push
xor
cmp
stos
out
rcl
and
xbegin
mov
leave
mov
jle
lods
test
adc
jne
aam
cmp
jge
inc
adc
(bad)
jae
sar
adc
sub
clc
call
xchg
rol
call
lods
or
jmp
mov
push
push
push
push
mov
call
ficom
movs
xchg
cmp
mov
call
sar
dec
add
icebp
or
(bad)
push
ja
mov
sar
mov
cmp
je
mov
dec
je
jb
jg
loope
add
neg
cmp
je
inc
shl
retf
xor
rcr
jne
dec
(bad)
jmp
adc
sti
rcr
push
or
call
adc
add
call
jge
loope
movs
add
push
out
(bad)
xor
jbe
dec
das
int
mov
test
or
jg
out
frstor
push
call
add
leave
je
aad
sti
inc
cmp
jle
call
cmp
ret
xor
push
icebp
inc
inc
pop
adc
push
loope
add
call
je
push
push
or
movs
inc
mov
jns
push
add
cmps
(bad)
call
mov
pop
jg
call
and
mov
call
lock
movs
and
outs
mov
(bad)
(bad)
(bad)
mov
push
mov
sub
mov
sub
add
add
push
push
push
push
call
lds
fisttp
aaa
icebp
aas
cld
push
call
test
je
mov
or
pusha
push
xchg
mov
out
or
(bad)
mov
pop
add
shl
icebp
or
aas
mov
int3
je
loope
lods
and
mov
es
sahf
call
sar
call
(bad)
loope
aas
(bad)
mov
sub
push
arpl
call
xchg
mov
mov
(bad)
sbb
sbb
jns
push
mov
mov
fst
stc
add
cli
add
test
adc
dec
in
cli
sbb
push
(bad)
int3
dec
je
dec
jne
out
test
jle
js
ror
or
clc
test
call
sub
sti
mov
mov
and
cmp
jb
out
(bad)
(bad)
out
cmp
cld
jmp
cmp
je
mov
add
dec
jne
xchg
inc
or
xor
mov
dec
and
jmp
pop
pop
or
inc
cmp
push
js
add
je
sbb
mov
pop
mov
pop
jne
inc
mov
sbb
shl
jbe
push
test
jle
push
pop
dec
sbb
cld
out
ror
ret
ror
test
pusha
icebp
jl
jecxz
rcr
lods
cmp
jge
mov
jl
cmp
jge
call
jmp
add
js
pop
mov
mov
jne
mov
ret
mov
pop
jg
sub
sub
stos
fdivr
fistp
or
push
cli
or
ret
hlt
sub
sub
jne
push
(bad)
aas
jb
lea
mov
dec
xchg
(bad)
inc
(bad)
call
push
call
add
mov
add
leave
je
ja
or
dec
mov
into
shl
add
jnp
adc
ja
jle
or
pusha
sub
sub
sub
and
aam
cmp
(bad)
aam
dec
add
jl
inc
dec
cmps
xchg
(bad)
mov
je
jle
dec
or
sbb
invd
addr16
sbb
and
call
pop
fist
punpckhbw
jnp
add
loopne
jge
sub
fdiv
loope
dec
out
mov
sbb
popa
adc
mov
ror
push
clc
add
test
mov
jle
call
or
mov
std
and
mov
ret
stos
in
mov
jo
inc
dec
fwait
in
sahf
mov
mov
jle
fdiv
push
call
mov
jg
adc
mov
dec
mov
sub
mov
add
sbb
mov
movzx
mov
jge
and
std
or
nop
and
mov
jg
mov
test
je
shr
mov
xchg
(bad)
jmp
fcom
mov
push
and
repz
or
lock
jne
fisttp
(bad)
push
call
or
mov
(bad)
test
inc
or
add
test
inc
inc
ret
pop
inc
call
inc
xchg
add
add
pop
bnd
mov
in
pop
push
rcr
mov
mov
mov
mov
xor
dec
mov
jp
inc
add
dec
test
lea
and
sub
call
shl
loope
or
adc
and
pop
add
pop
xor
call
in
(bad)
lea
call
inc
adc
push
sub
mov
sub
lea
ret
scas
or
or
jne
call
adc
push
and
pop
in
call
pusha
sub
lock
mov
int3
sti
jge
mov
mov
jge
add
sub
mov
mov
mov
sbb
jne
fmul
sbb
pop
adc
aaa
std
xchg
imul
out
mov
jne
push
call
jo
adc
pop
or
pop
mov
or
aam
fcom
and
rdmsr
movzx
icebp
mov
push
loopne
scas
dec
adc
ror
mov
or
movzx
imul
add
and
inc
imul
mov
sub
fucom
clc
out
rcr
(bad)
movzx
shl
xor
icebp
cmp
add
repnz
ja
icebp
cmps
mov
sub
inc
shr
jo
scas
pop
icebp
fsub
jmp
add
movzx
push
push
call
jmp
mov
cdq
xchg
xor
mov
and
dec
in
add
add
push
lock
sbb
(bad)
cmp
xchg
dec
in
das
ja
adc
scas
push
jge
jne
jecxz
and
(bad)
aam
loope
arpl
popa
popf
and
or
call
aaa
add
sti
xor
aaa
fsub
push
and
push
daa
inc
inc
and
aaa
shl
loope
inc
sub
or
adc
push
or
adc
xor
fdiv
inc
(bad)
jne
sub
jne
cmp
sbb
adc
mov
inc
adc
push
hlt
jmp
dec
je
dec
dec
je
sub
je
push
call
fisub
retf
inc
fucomip
add
mov
dec
add
cmp
mov
jne
push
call
dec
je
dec
je
(bad)
dec
je
sub
jne
shl
mov
or
mov
jmp
out
mov
pop
arpl
adc
jecxz
cmp
inc
jecxz
aam
call
or
cmp
jne
aaa
adc
ror
dec
mov
test
and
add
mov
(bad)
sbb
pop
pop
add
sbb
icebp
mov
test
adc
test
inc
adc
call
push
inc
mov
iret
and
ja
icebp
ja
push
push
mov
sub
inc
call
xor
rcr
sti
dec
lea
push
push
mov
push
call
fcom
imul
or
adc
rol
popf
jbe
xor
or
and
mov
xor
test
and
push
les
mov
popf
je
push
call
call
test
push
adc
push
xchg
push
pop
mov
mov
adc
add
inc
xor
sbb
xchg
ss
mov
hlt
popa
dec
dec
mov
daa
or
mov
sar
jne
or
out
mov
fld
sar
sub
lea
sbb
add
inc
cmp
cld
fcomip
repz
call
dec
in
jne
or
inc
sub
je
rol
hlt
loope
rcl
mov
inc
add
push
dec
mov
push
add
push
jns
je
jge
pop
cdq
(bad)
adc
and
dec
cld
(bad)
jg
dec
rcr
mov
sub
push
mov
sub
push
call
add
adc
or
loope
cmp
and
ret
mov
dec
xor
sub
mov
mov
mov
add
test
(bad)
fisttp
pop
mov
lea
push
add
push
mov
jae
(bad)
jp
loopne
retf
call
cmp
hlt
pop
jb
lock
pminsw
and
inc
hlt
je
pop
dec
add
jne
mov
je
mov
call
inc
in
mov
(bad)
(bad)
dec
pop
lock
mov
mov
sub
sub
sub
sub
mov
loope
je
fdivr
shl
mov
call
mov
les
push
pop
popa
sbb
leave
test
jle
cmp
jae
inc
cmp
jl
inc
scas
cmp
cmp
lea
jl
stos
add
fwait
sbb
cmc
push
cmp
je
push
(bad)
xor
dec
sbb
test
mov
jne
pop
xor
mov
add
cmp
or
jg
je
mov
mov
add
mov
inc
stos
sbb
mov
mov
mov
out
sbb
rol
push
mov
mov
sbb
cmp
ja
aam
and
aas
outs
add
push
call
(bad)
push
adc
push
mov
call
sbb
pop
ss
cdq
lahf
stos
imul
jp
sbb
jne
mov
cld
(bad)
jmp
mov
add
cs
push
call
jmp
je
push
jmp
push
call
add
inc
pop
std
(bad)
jmp
push
call
push
or
push
sbb
cmps
adc
sbb
shr
daa
xor
js
jne
bndstx
cmps
sti
imul
mov
mov
pop
add
jle
inc
cmp
je
call
jmp
mov
mov
call
xor
add
je
pusha
lods
adc
pop
mov
xchg
jmp
push
or
push
or
pop
or
mov
cmp
lods
mov
into
add
addr16
add
ret
jne
pop
push
push
pop
mov
sbb
shl
jg
(bad)
push
les
dec
pop
leave
xor
jmp
jno
mov
sbb
add
scas
outs
jp
pusha
xor
jne
mov
xchg
fist
retf
sbb
add
mov
std
xchg
sbb
call
pop
mov
call
stos
mov
adc
cmp
dec
add
iret
(bad)
out
pop
or
jne
push
pop
rep
pop
mov
jmp
dec
jge
stos
mov
jge
mov
sbb
mov
fisttp
call
mov
sar
jae
xchg
lea
jge
fst
jl
adc
push
popa
fwait
sub
lods
call
jge
sub
ror
les
cmp
add
call
lock
add
push
mov
mov
mov
fwait
mov
mov
add
inc
mov
fmul
add
fnsave
cld
cdq
daa
push
call
in
inc
lea
or
fadd
mov
add
sbb
jl
mov
add
mov
adc
xor
push
jp
loope
mov
push
ins
(bad)
iret
call
xchg
xchg
fild
cmps
adc
pop
mov
and
nop
sub
ret
mov
sub
mov
push
sbb
and
pop
pop
jae
arpl
add
out
mov
jle
jno
int
jge
mov
lea
inc
call
pop
mov
pop
jmp
cld
icebp
sbb
(bad)
pop
fidiv
add
je
lea
mov
mov
jmp
push
jo
outs
add
outs
arpl
inc
or
jmp
jmp
xchg
mov
call
xlat
cmps
mov
mov
inc
xor
mov
inc
xor
or
push
lea
out
push
call
lea
dec
mov
mov
neg
push
mov
cdq
imul
dec
jae
ds
fstp
outs
pop
jne
xor
push
push
add
mov
dec
or
sub
pop
lea
lea
not
and
and
scas
or
mov
jnp
adc
or
lock
call
mov
lea
fwait
movs
jle
in
mov
pop
mov
dec
mov
sub
mov
mov
mov
outs
pop
inc
xchg
push
clc
mov
std
addr16
sti
or
push
or
or
adc
cmp
(bad)
pop
add
(bad)
loope
lock
ret
inc
push
push
mov
enter
jg
mov
jle
mov
jmp
mov
ror
mov
cld
je
fwait
cmp
retf
arpl
fdiv
sub
mov
call
int3
push
mov
adc
xor
(bad)
push
push
aam
scas
hlt
test
call
cmps
rol
mov
hlt
mov
inc
adc
mov
or
call
push
push
ins
fcom
add
icebp
or
mov
call
test
dec
cld
call
leave
dec
add
cmp
sar
fmul
add
jnp
call
sbb
movs
in
pop
cmp
movs
movq
fsubrp
(bad)
push
(bad)
push
push
pop
inc
jecxz
pop
leave
data16
ja
push
xor
call
fadd
sbb
fdivr
outs
add
cmp
jle
(bad)
leave
cld
scas
call
mov
sbb
mov
inc
cld
mov
loopne
into
fidiv
pop
add
push
ret
jg
cmp
fadd
fmul
mov
add
call
mov
mov
and
mov
lahf
dec
pop
sbb
jns
mov
xor
push
xor
pop
dec
loopne
dec
call
jp
or
cli
jle
icebp
call
mov
dec
inc
mov
push
cmp
or
stc
xor
in
aaa
cld
adc
cdq
idiv
mov
les
mov
adc
(bad)
push
pop
push
inc
aam
aaa
cld
fsub
dec
add
or
add
js
push
call
out
pop
in
or
cmp
dec
jg
les
jge
loop
dec
mov
ds
call
xor
jnp
push
adc
mov
inc
xchg
or
aad
adc
nop
jne
push
call
(bad)
in
test
add
adc
fstp
push
(bad)
pop
sbb
test
stos
dec
icebp
repz
jb
lea
pushf
push
push
jbe
or
push
push
call
pop
imul
sbb
cmp
arpl
lea
push
push
call
ja
fistp
ss
add
pop
idiv
cmp
je
xor
bound
sub
mov
sub
aaa
(bad)
jmp
mov
dec
hlt
jne
les
adc
adc
loopne
cmp
movaps
push
or
ja
rcl
or
test
adc
and
push
pop
cmp
inc
mov
mov
cmp
std
add
or
cld
jg
fidivr
retf
cmpxchg
into
or
clc
sub
(bad)
(bad)
(bad)
fild
inc
inc
xor
cmp
jle
mov
mov
mov
and
imul
mov
shr
pop
loopne
or
jmp
inc
cld
shr
xor
and
xor
pop
loope
inc
cmp
jl
xor
out
hlt
jne
jmp
jmp
pop
add
cmp
jl
cmp
jl
inc
cmp
jbe
inc
inc
rol
add
add
cli
ret
(bad)
mov
je
adc
jmp
jmp
dec
or
mov
push
or
dec
(bad)
movups
(bad)
xlat
jge
xor
ror
mov
and
emms
inc
rcr
or
lea
pop
fist
mov
xchg
jle
add
lea
push
add
push
ja
aad
call
mov
cmp
cli
das
sub
ja
sti
add
call
test
sbb
rcl
add
and
loopne
rcr
mov
es
mov
xor
test
mov
(bad)
jle
mov
adc
pusha
mov
inc
pop
add
cmp
pop
jl
sbb
jg
in
dec
cdq
push
push
call
adc
add
dec
adc
das
jl
je
icebp
adc
(bad)
fdivr
dec
mov
dec
xchg
and
cmp
push
call
arpl
cmc
inc
inc
add
mov
xchg
mov
xlat
mov
mov
jmp
inc
mov
or
or
jb
cmps
jbe
adc
sbb
outs
or
jne
pop
pop
leave
ret
fwait
dec
mov
mov
push
add
data16
fldenv
and
clc
xor
and
mov
loope
xor
pop
jge
rcl
(bad)
sbb
clc
and
lea
mov
sar
dec
add
dec
add
pop
lea
int3
lods
adc
fild
cmps
push
push
cmp
jle
mov
lock
call
fmul
dec
lock
lea
scas
test
inc
jmp
or
cmp
mov
mov
mov
mov
jle
mov
push
xchg
pop
cmp
jl
leave
gs
dec
and
inc
hlt
pop
mov
je
out
scas
js
call
pop
cld
ja
pop
lea
je
push
lea
and
xor
and
(bad)
or
mov
cmp
cmp
sbb
push
dec
jmp
cmp
inc
and
or
clc
mov
or
inc
or
xor
and
lock
inc
push
push
call
cmp
mov
add
call
icebp
shl
enter
mov
arpl
jae
call
mov
mov
data16
adc
mov
jmp
add
inc
jge
mov
xchg
push
ins
adc
xchg
add
aas
cli
iret
sub
add
sahf
hlt
jne
push
bnd
mov
cmp
pop
inc
icebp
jmp
push
call
mov
jmp
xor
cli
std
mov
cmc
push
push
xor
sbb
dec
or
or
mov
cwde
jp
xor
xor
or
mul
(bad)
(bad)
cld
xchg
add
ds
jmp
fwait
test
rcr
jmp
cs
jge
mov
push
sbb
push
je
cmps
call
call
jmp
cmps
xor
pop
mov
or
mov
stc
mov
mov
mov
jg
fwait
inc
test
fmul
call
push
call
inc
xchg
cmp
pop
ds
jmp
(bad)
test
pusha
sbb
mov
or
call
dec
mov
call
std
ret
in
push
adc
push
call
push
pusha
mov
dec
adc
test
and
push
push
jge
sar
or
jmp
xor
inc
lea
mov
inc
fiadd
and
push
push
inc
dec
or
add
cmps
les
mov
(bad)
aad
dec
icebp
mov
mov
push
mov
shl
sbb
out
jae
enter
sahf
sbb
sub
or
mov
mov
je
push
sbb
and
push
scas
pusha
lock
cli
xor
dec
add
push
push
push
push
push
call
xor
add
and
xor
pop
outs
imul
adc
jl
mov
inc
pop
idiv
mov
lock
mov
adc
and
or
sbb
inc
or
scas
ret
xor
add
pop
cld
jle
xchg
cmp
movq
dec
into
cmp
jl
mov
jmp
neg
and
sbb
cmp
jl
lea
loop
call
sub
mov
jle
loop
loopne
add
clc
push
jns
hlt
mov
xchg
pop
or
mov
mov
pushf
push
call
sub
or
sti
dec
jne
jmp
dec
mov
neg
lods
push
loopne
mov
loope
int3
cmp
dec
sbb
in
inc
add
inc
mov
push
push
mov
push
ror
fs
push
sub
sti
mov
cmps
adc
pop
pop
shl
in
sub
mov
loopne
sbb
fstp
lea
fiadd
pop
cld
push
call
stos
pop
les
add
cmp
add
out
xchg
test
je
cmp
inc
or
or
pop
(bad)
es
mov
xor
popf
icebp
outs
sbb
call
pop
test
enter
sub
adc
pop
ins
adc
mov
jge
mov
loopne
and
std
call
jns
mov
mov
and
fild
push
call
and
add
xor
or
shl
dec
add
adc
jmp
inc
sub
dec
cmp
jg
add
inc
loop
int3
aad
mov
pop
pop
push
or
js
sbb
push
mov
cdq
idiv
sbb
dec
inc
in
mov
xor
(bad)
inc
inc
cmp
mov
call
adc
mov
pop
xlat
movs
cmc
pop
xor
inc
(bad)
push
jb
dec
(bad)
push
mov
sete
jg
ror
mov
add
jae
push
rcl
jle
pop
fmul
push
(bad)
mov
call
pop
popa
lea
(bad)
ficom
or
mov
popf
mov
sbb
xor
push
jmp
sub
dec
mov
rol
add
mov
clc
mov
mov
cmp
pop
push
je
mov
and
adc
push
pop
mov
repz
mov
add
pop
jecxz
ret
dec
xor
jo
adc
fimul
call
cdq
jbe
mov
adc
dec
adc
push
adc
lea
add
adc
sbb
cdq
stos
push
sar
sbb
stos
(bad)
scas
ja
cmp
inc
ins
mov
jne
push
cmp
dec
mov
add
pop
je
sbb
cld
and
pop
sar
icebp
xchg
push
mov
call
mov
inc
in
inc
push
inc
icebp
pop
and
mov
pop
fadd
mov
push
jo
(bad)
cli
xor
shr
adc
icebp
or
add
jno
sub
xor
sar
add
mov
cmp
cmp
mov
in
retf
mov
call
cmc
and
je
popf
aad
gs
pop
sub
call
mov
hlt
pop
add
or
add
xor
bound
je
inc
cld
cmps
ins
bound
cmp
sub
dec
mov
or
cmc
retf
div
ds
inc
aas
lock
and
mov
mov
or
jmp
or
je
sub
mov
pop
das
dec
pop
lea
ins
mov
leave
ret
add
add
jne
lea
sub
fstp
add
or
(bad)
push
(bad)
fld
fs
jne
lea
in
lea
or
pop
call
inc
jl
push
inc
pop
push
xchg
sbb
nop
mov
pop
add
jmp
bound
pop
lea
dec
dec
dec
pop
call
adc
loope
mov
or
adc
fcom
mov
push
imul
xchg
mov
push
call
inc
adc
fbstp
add
xor
cmp
arpl
lea
std
jg
xchg
fmul
xchg
add
add
inc
jne
mov
and
lea
movs
mov
inc
push
movs
call
ins
fwait
clc
sub
push
lea
call
xor
jo
dec
iret
mov
call
or
mov
lea
cmp
cmp
jne
in
lea
sbb
cwde
add
pop
jmp
pop
xor
int
mov
fmul
inc
mov
call
jmp
push
sbb
call
pop
push
je
cwde
call
shr
popf
jne
ins
jmp
(bad)
cmp
dec
mov
(bad)
(bad)
jmp
mov
fdivr
mov
xchg
ror
or
mov
mov
punpcklwd
push
inc
mov
jg
jmp
or
(bad)
(bad)
(bad)
les
mov
and
in
adc
or
sbb
jo
sbb
pop
xor
addr16
inc
mov
mov
call
pop
mov
inc
push
stos
jecxz
xchg
pop
add
out
jp
fucomp
cmp
add
push
repnz
lea
jo
fst
xchg
aas
jne
sbb
mov
sti
cmp
lock
dec
fsubr
add
or
jne
ja
mov
into
push
push
call
push
pop
or
jne
inc
push
lea
call
inc
nop
pop
and
jmp
fstp
mov
call
mov
call
sub
mov
add
add
add
cmp
adc
and
add
xor
test
pop
dec
push
fst
call
push
mov
call
jne
mov
mov
adc
outs
loop
inc
test
jne
aas
pushf
xor
inc
add
(bad)
cmp
mov
aas
mov
loop
mov
iret
je
popf
jne
inc
popa
call
cmc
dec
hlt
or
sbb
or
test
cmp
jne
pop
inc
ret
jno
jp
bsf
(bad)
out
mov
mov
push
push
call
jmp
inc
fidiv
pop
mov
js
mov
jnp
mov
lea
shl
xor
ret
jl
jne
test
inc
idiv
push
push
lea
push
lea
add
call
dec
ss
and
jnp
adc
push
push
fist
add
cmp
je
mov
xor
(bad)
gs
sub
fs
lea
lea
loope
cld
push
ja
les
push
inc
push
movs
push
add
mov
push
movs
call
push
inc
dec
mul
inc
add
cmp
sbb
adc
jg
sbb
inc
js
inc
js
inc
jl
sub
lock
jmp
adc
add
inc
retf
inc
test
in
sub
inc
loope
leave
shl
ror
sbb
push
dec
les
mov
bound
jmp
pop
popa
ret
dec
inc
or
push
pop
inc
pop
inc
cmp
(bad)
jne
js
stos
jmp
bts
push
je
inc
push
mov
mov
sub
push
push
push
push
push
mov
sub
cmps
mov
cmp
dec
js
call
push
mov
jmp
mov
push
add
lea
jne
or
je
sbb
jl
cmp
je
cmps
cmp
adc
(bad)
je
popa
push
call
data16
xor
xor
loope
mov
push
push
cmp
jne
fild
cmp
je
(bad)
sub
push
pop
cs
pop
clc
or
add
ins
lea
outs
sbb
enter
(bad)
mul
mov
jge
jge
push
shl
jo
call
pop
push
test
jne
add
push
jmp
lea
lea
sbb
jl
push
call
test
into
and
adc
aam
(bad)
sbb
add
(bad)
fcomip
or
inc
adc
jp
mov
inc
pop
test
arpl
inc
jne
lea
push
push
sub
sbb
aad
push
pop
pop
add
leave
adc
in
mov
jge
mov
cmp
jne
call
call
cli
dec
out
adc
jne
(bad)
mov
faddp
call
lea
pop
fild
mov
and
adc
adc
push
cmp
dec
sub
jne
pop
pop
sbb
push
ror
nop
sub
out
xor
mov
js
call
(bad)
clc
mov
mov
mov
dec
xor
cdq
idiv
mov
mov
pop
or
in
dec
sbb
inc
mov
xor
jo
sub
adc
mov
mov
sbb
scas
pop
jbe
dec
inc
pop
push
sub
xchg
mov
aaa
les
and
lea
cli
mov
inc
je
push
retf
xor
sbb
cmp
call
fwait
dec
lea
call
jne
add
lea
iret
call
clc
aas
cmp
fisub
inc
addr16
les
sbb
cmp
or
jg
xchg
ja
call
mov
xchg
rcr
mov
push
nop
and
jne
mov
test
stc
sbb
out
mov
add
or
pop
jg
jne
or
jnp
aas
push
test
es
dec
mov
cmp
je
lea
fld
mov
pop
sbb
add
jne
call
daa
add
jb
je
aam
sbb
push
call
dec
jl
aas
jmp
cwde
mov
mov
add
sbb
call
dec
and
imul
idiv
mov
dec
loopne
scas
(bad)
test
ror
pop
popf
mov
call
adc
xor
pop
xor
test
mov
mov
mov
xor
push
push
popa
pop
lea
mov
inc
push
jg
and
loopne
jne
sub
add
mov
push
mov
idiv
(bad)
(bad)
std
add
jge
rep
push
mov
sbb
test
loopne
push
inc
jns
pop
repz
out
jmp
jbe
test
pop
pop
je
mov
ins
sub
adc
pop
push
add
xchg
pop
sub
push
lea
add
into
in
jp
pop
cwde
sidtd
mov
hlt
or
pop
inc
hlt
jb
jle
sti
pop
inc
fmul
push
mov
call
neg
std
test
cmp
inc
lods
add
mov
or
sti
addr16
pop
lea
push
call
call
mov
adc
mov
mov
outs
loopne
mov
mov
lea
movs
add
pusha
and
add
push
movs
push
clc
popa
pop
in
jmp
cmp
(bad)
out
xchg
jne
dec
push
mov
outs
push
inc
and
jge
dec
dec
adc
data16
and
sbb
mov
add
femms
mov
sub
(bad)
cmps
and
cwde
lea
jae
stos
mov
or
aaa
jne
lds
xor
sbb
add
jmp
cld
push
push
call
push
push
xor
in
mul
push
call
adc
fadd
(bad)
or
mov
(bad)
(bad)
inc
sub
cmp
jne
mov
mov
fwait
mov
adc
(bad)
pop
dec
call
mov
inc
adc
adc
dec
adc
mov
mov
sub
sub
test
jne
test
jne
test
pop
div
call
jns
push
push
jg
sub
push
fnstcw
and
and
push
ja
xchg
jmp
xor
add
xor
inc
sbb
cmp
das
pop
pop
adc
and
repnz
add
xor
and
cmp
or
ret
je
cmp
test
add
push
das
xchg
adc
adc
stc
(bad)
test
je
and
adc
add
std
add
fs
movs
imul
or
(bad)
cmp
jne
mov
std
cmp
mov
sar
pop
cld
adc
sub
mov
cmp
lsl
cmp
je
push
test
jne
test
pextrw
or
fadd
add
dec
loop
je
jecxz
ins
je
ds
mov
arpl
test
mov
xchg
inc
adc
xchg
cmp
lods
mov
ret
sti
push
aam
psrlq
inc
cmp
fadd
mov
sar
jl
mov
or
mov
cmp
jne
cmp
rdtsc
cmp
sub
sub
in
js
cld
imul
mov
push
inc
cmps
cmp
push
jle
pop
not
xchg
mov
dec
cdq
inc
push
dec
inc
cmp
xor
jl
js
scas
jg
sar
push
mov
push
push
call
call
add
dec
push
adc
ds
mov
add
fist
call
adc
aam
dec
ror
inc
pop
test
call
inc
movs
jle
fs
jmp
dec
dec
add
push
mov
push
fisubr
jbe
add
add
cmp
sub
or
or
inc
ins
dec
dec
push
fiadd
into
call
sub
std
and
or
scas
nop
retf
call
xor
jbe
jg
or
jnp
cli
psrlq
ret
rol
test
je
cdq
bound
lahf
aaa
push
push
call
or
fsub
in
or
push
sbb
pop
ja
add
add
push
leave
ror
dec
push
call
fwait
cwde
test
call
loopne
push
jge
std
push
adc
mov
lahf
shr
sub
movs
push
push
or
or
push
pop
into
inc
sbb
lds
mov
inc
push
xchg
mul
sar
lahf
and
pop
sete
pop
pop
or
add
mov
inc
test
loope
adc
or
sbb
sbb
daa
add
mov
sub
push
lea
mov
movs
mov
mov
loop
jmp
jl
fild
add
popa
ins
pop
push
bnd
inc
and
les
and
dec
lock
mov
test
outs
call
dec
sub
adc
scas
call
call
adc
push
mov
mov
jne
and
or
or
jmp
push
sbb
test
inc
push
xor
push
lea
loop
fsubr
inc
call
or
js
or
cmp
jo
imul
call
sbb
in
(bad)
inc
jle
mov
push
sbb
push
hlt
mov
and
xor
cmp
movsx
mov
xchg
ret
xor
jne
jl
mov
outs
test
inc
inc
shl
add
cmp
jl
push
aaa
adc
sbb
cmp
call
dec
(bad)
out
mov
js
mov
neg
sub
scas
jne
lea
lea
test
push
inc
xor
jl
bound
(bad)
jg
jns
dec
add
cmp
jge
mov
xchg
inc
pop
les
in
cmp
jge
mov
aam
dec
call
adc
or
jne
jg
mov
push
clc
mov
imul
add
cmp
lea
mov
jg
push
call
adc
sub
dec
cld
jge
mov
lea
inc
loope
adc
jle
jmp
aaa
mov
mov
pusha
idiv
jmp
cld
mov
jmp
mov
imul
and
or
dec
cmp
jl
mov
loop
popa
(bad)
mov
(bad)
cmp
lea
jg
jo
cmp
fsubr
jmp
inc
cmp
jle
jmp
mov
dec
add
lock
scas
(bad)
in
pop
pop
jne
cmp
jne
cmp
jne
xor
xor
push
add
test
cld
pop
outs
shl
inc
push
inc
(bad)
call
xchg
dec
push
outs
sub
adc
and
sub
push
les
add
pop
icebp
jnp
or
jge
les
or
rol
iret
call
pop
sub
and
xlat
(bad)
call
jbe
test
bswap
js
rol
push
test
inc
into
push
xor
push
push
(bad)
call
mov
add
adc
jne
mov
push
cmp
sete
call
(bad)
dec
cmp
pop
or
push
mov
mov
call
ja
aad
add
idiv
inc
or
inc
jo
inc
sbb
mov
mov
add
je
pop
jmp
push
sbb
sbb
cmp
(bad)
je
inc
test
push
cmp
je
test
or
add
jne
xchg
clc
je
pusha
sar
je
pop
jb
dec
fild
push
sub
dec
push
fst
mov
ja
xchg
int
or
fdiv
fstp
fld
cmp
xchg
xchg
pop
inc
push
fdiv
fld
fdiv
(bad)
or
xor
fstp
pop
cld
pop
in
mov
and
pop
cmp
sbb
pop
pop
pop
cmp
aam
(bad)
idiv
mov
sub
pop
and
add
pop
and
mov
add
div
sbb
inc
sbb
inc
mov
fimul
gs
mov
mov
loope
and
jo
fadd
mov
adc
ja
sbb
jbe
or
out
aas
movs
cmp
fldz
fstp
add
mov
pop
sti
add
ins
push
fstp
fstp
jle
mov
jl
sub
fstp
dec
ins
mov
fild
mov
mov
pop
cmp
(bad)
fadd
std
out
fdivrp
mov
push
push
xchg
lea
popf
push
lea
add
fld
push
fadd
fmul
fstp
rcl
aaa
cld
call
cmp
je
xor
test
jle
pop
lea
fmul
inc
into
fadd
fstp
jl
jmp
xor
push
and
test
pop
loope
lock
(bad)
sub
pop
fadd
jno
fnstsw
int
inc
xchg
jbe
popf
mov
pushf
fstp
pop
fmul
lock
sub
inc
call
and
lock
xchg
mov
inc
in
adc
mov
pop
hlt
add
dec
jne
adc
xor
cmp
(bad)
jg
clc
je
fld
push
fstp
pop
movs
mov
mov
mov
mov
push
sbb
inc
push
test
je
and
mov
inc
xor
xor
inc
sbb
je
fld
sbb
lahf
sti
fmul
add
push
in
shr
or
push
inc
jmp
mov
sbb
test
cdq
or
je
sub
mul
shr
je
jl
fdivr
mov
dec
xor
push
ins
cmps
ins
dec
add
lahf
mov
sub
mov
shl
aaa
sbb
dec
nop
mov
sar
dec
idiv
retf
push
and
mov
xor
je
jno
dec
jge
std
or
inc
or
sbb
inc
sbb
(bad)
jge
jmp
jmp
mov
into
cmp
jle
mov
mov
cmp
jge
cmp
push
jmp
cmp
jle
mov
cmp
adc
fwait
jo
std
xor
into
cmp
jmp
cmp
xor
xor
shr
loop
add
rol
pop
add
adc
(bad)
inc
int
inc
add
inc
adc
inc
sbb
inc
adc
inc
cld
jl
stos
adc
shr
rcl
sti
adc
call
cld
mov
inc
pop
pop
pop
mov
xor
xor
push
fild
push
xor
mov
cmp
push
mov
int3
and
ins
cmp
test
add
ret
call
dec
mov
cmp
mov
je
mov
adc
xchg
rcr
push
mov
or
les
push
call
loop
add
test
enter
loopne
xor
mov
call
cmp
dec
sbb
dec
sbb
add
(bad)
lock
call
dec
imul
shl
add
mov
cmp
mov
std
dec
add
mov
pop
rcl
inc
dec
mov
jmp
jmp
dec
mov
clc
push
lea
mov
cmps
dec
xor
call
mov
inc
push
movs
jno
adc
pop
mov
outs
sub
pop
add
mov
pop
pop
ins
cmp
inc
inc
add
je
scas
ss
stos
shr
icebp
aaa
add
(bad)
call
cmp
ins
mov
inc
icebp
pop
inc
pop
push
mov
call
ret
sub
mov
cld
inc
jmp
call
jmp
mov
add
dec
cmp
inc
add
lods
lahf
add
call
in
call
push
push
mov
or
jmp
mov
pop
inc
(bad)
(bad)
cmp
mov
je
xor
into
call
add
dec
sbb
inc
add
inc
(bad)
(bad)
mov
add
push
call
pop
mov
mov
pop
add
cdq
retf
or
mov
mov
stos
jle
out
mov
or
pop
ror
sti
ror
lahf
mov
test
pop
jno
ret
jo
ja
dec
push
hlt
sub
inc
std
add
fisttp
add
adc
mov
sbb
cmp
lea
push
add
push
add
push
push
push
call
mov
cmp
xchg
inc
aas
sbb
add
cmp
inc
adc
or
pop
ror
inc
ss
jne
jge
mov
sahf
adc
ror
fistp
mov
(bad)
rcl
mov
mov
or
push
retf
(bad)
dec
neg
jmp
call
or
inc
add
or
jae
push
fstp
dec
mov
xor
and
sbb
ds
push
int
inc
movs
push
call
pmaddwd
hlt
sub
jne
inc
out
dec
je
jns
(bad)
dec
(bad)
add
adc
fstp
sbb
mov
push
dec
call
aad
icebp
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
sub
dec
lds
int
add
and
int3
call
sar
xchg
les
pop
std
inc
ja
call
add
jge
dec
adc
adc
sbb
push
fld
(bad)
jg
jge
add
mov
sub
mov
js
cld
bound
mov
or
mov
cmp
jae
inc
add
imul
aaa
loopne
cmp
jl
add
cmp
lea
ins
and
mov
mov
adc
mov
cmp
cmc
sbb
mov
push
mov
add
mov
mov
add
mov
mov
or
sbb
push
call
(bad)
out
call
adc
jae
lea
mov
push
jp
punpcklbw
ins
data16
test
jne
mov
cli
lahf
mov
push
call
mov
fsubrp
pop
inc
add
test
inc
lea
mov
add
lea
mov
dec
out
sbb
call
je
cmp
sbb
jnp
lock
sbb
jl
cmp
jg
sbb
iret
add
add
or
add
mov
mov
mov
(bad)
(bad)
jg
pop
jne
neg
push
sbb
and
inc
inc
or
mov
mov
add
mov
jmp
pusha
mov
dec
add
jne
push
lea
push
push
mov
mov
aam
add
js
sub
push
or
push
sbb
push
clc
rol
xchg
rol
inc
test
enter
pusha
faddp
loop
out
cmp
mov
inc
pop
jo
or
cdq
jnp
pusha
sub
call
sti
pop
jbe
xchg
popf
frstor
gs
mov
call
jmp
cmp
and
out
sub
ffree
cmc
or
inc
js
add
rcl
or
inc
add
push
push
lds
js
add
push
aam
hlt
je
or
ret
add
test
add
icebp
or
fwait
xor
push
or
and
add
mov
loopne
push
ror
or
enter
xor
add
inc
adc
rcl
push
lea
call
movs
fistp
xor
ret
push
out
clc
(bad)
std
std
(bad)
jmp
mov
or
push
push
call
mov
mov
xor
inc
jmp
dec
in
das
or
xlat
cmp
pop
pop
je
mov
stos
mov
test
jne
mov
inc
leave
ja
pushf
adc
out
mov
lea
mov
mov
mov
call
add
loopne
or
fld
jge
adc
movs
mov
add
jmp
push
push
call
into
fsub
pop
mov
push
add
mov
mov
mov
mov
icebp
xor
and
fidivr
adc
mov
std
or
retf
mov
jmp
sti
inc
std
mov
add
add
mov
or
call
(bad)
call
pop
pop
mov
test
jne
mov
ret
scas
and
call
add
test
jne
mov
jmp
(bad)
out
clc
mov
cmp
jge
call
pop
je
fild
sub
aam
stos
mov
add
(bad)
fistp
inc
hlt
fstp
push
call
(bad)
xcrypt-ofb
cmps
das
ss
out
xor
and
sub
inc
push
and
add
std
(bad)
dec
fild
mov
mov
mov
mov
dec
je
dec
jne
sub
add
push
je
pop
mov
sar
add
lea
neg
mov
ror
adc
ror
adc
push
push
mov
arpl
adc
test
bnd
ror
ss
push
mov
sbb
test
push
adc
test
scas
sub
dec
pop
add
cmp
cmovo
es
inc
test
mov
push
xor
test
adc
sbb
mov
cmp
push
enter
test
ins
push
mov
test
idiv
xor
pop
lea
push
mov
push
popa
imul
cli
push
push
call
or
in
fdivr
sbb
mov
fld
sbb
sbb
call
in
std
stos
mov
mov
adc
mov
or
mov
dec
push
push
xor
shl
cwde
bound
gs
add
cmps
jp
pop
cmp
pop
inc
and
jl
cdq
lds
mov
mov
jb
add
inc
add
out
mov
ss
push
(bad)
(bad)
jg
mov
cmp
je
call
test
mov
je
inc
out
loop
es
or
add
sbb
je
push
call
add
sub
add
dec
push
icebp
(bad)
add
lea
loopne
dec
call
cmp
jne
(bad)
call
and
mov
cmp
jb
cmp
ja
mov
mov
or
and
cwde
sub
test
inc
sub
jne
mov
lea
push
call
pop
sbb
je
ds
(bad)
aas
push
push
call
retf
call
test
xchg
add
shl
sub
rcl
or
call
or
inc
mov
cmps
or
test
jne
nop
aad
adc
add
test
sub
test
jne
push
cmp
jne
lea
retf
mov
add
mov
jnp
xor
ins
cmc
inc
push
mov
popf
jmp
jmp
push
inc
jae
sub
lahf
adc
retf
call
aaa
icebp
add
push
call
jmp
and
(bad)
out
push
jne
lea
rep
mov
mov
or
inc
js
inc
fsubr
jl
test
add
mov
out
sbb
sbb
push
sbb
adc
stos
ror
test
cld
shr
enter
test
lea
pusha
inc
inc
sbb
adc
js
je
fadd
faddp
fistp
mov
xchg
imul
and
fnsave
pop
lods
push
push
call
or
fstp
call
bound
std
icebp
push
call
cmp
push
sbb
push
call
jg
pop
pop
fistp
dec
add
pop
jae
mov
lock
call
dec
addr16
jb
test
sub
fsubr
push
pop
call
retf
int
call
push
xchg
sub
ret
inc
sub
fwait
adc
inc
cld
pop
imul
jl
pop
cdq
retf
call
imul
and
call
sub
push
mov
dec
bound
jmp
push
add
add
jge
or
(bad)
jbe
in
je
or
dec
call
push
or
je
pop
call
mov
dec
imul
pop
sub
mov
(bad)
icebp
xor
mov
xor
push
mov
inc
cmp
mov
leave
cmp
add
inc
adc
test
cmp
jne
jne
cmp
mov
je
mov
dec
pop
push
call
cmp
mov
or
daa
clc
fwait
or
call
push
clc
je
push
xchg
add
cmp
dec
adc
out
repnz
cmp
cmc
arpl
enter
mov
test
cld
adc
cmc
inc
add
imul
inc
jbe
add
push
mov
mov
mov
push
(bad)
(bad)
sti
ffreep
lea
lock
fild
lea
hlt
call
add
fmul
push
adc
popf
sti
int3
std
sbb
push
call
call
or
pop
mov
cmp
push
leave
aaa
push
rol
push
push
push
call
arpl
(bad)
call
jbe
call
std
push
popf
hlt
mov
cmp
jne
mov
call
add
fnstcw
test
dec
cmp
mov
je
mov
or
or
push
push
idiv
dec
or
xor
push
lods
inc
fld
sbb
xchg
push
jg
aaa
mov
mov
jl
inc
cmp
jge
fild
push
arpl
fnstsw
sub
gs
pop
loope
scas
ret
add
js
add
out
mov
xor
lock
lea
push
(bad)
mov
add
push
call
lock
pop
aam
lock
call
pop
mov
iret
and
inc
jp
push
lock
leave
call
mov
lahf
mov
adc
jbe
push
call
popa
nop
iret
xor
out
or
jo
(bad)
and
aas
pop
mov
call
and
push
xor
cmp
jle
sbb
add
jmp
imul
jmp
icebp
pop
push
call
jmp
fldz
fstp
inc
cmp
adc
enter
pop
iret
ds
dec
inc
mov
in
mov
icebp
xor
call
jae
fst
jnp
mov
jle
hlt
ja
sub
neg
add
push
push
lea
ja
aas
mov
push
push
inc
popf
or
add
cmps
fmul
mov
pop
mov
mov
les
push
push
call
stos
lds
sbb
dec
adc
sbb
outs
loop
push
daa
push
pop
std
xor
lea
int3
inc
mov
lock
add
mov
mov
call
mov
enter
lock
call
lock
sub
push
test
push
popf
sbb
pop
outs
popa
pop
add
push
pushf
or
push
push
ficomp
add
rcl
adc
call
(bad)
js
dec
add
pop
adc
sbb
xor
mov
mov
add
sbb
fs
mov
dec
loope
add
mov
or
out
jo
dec
dec
clc
call
outs
inc
jbe
cmp
jne
pop
pop
mov
sbb
(bad)
pop
lds
fld1
cmp
mov
outs
fnstenv
or
test
call
les
cdq
adc
cs
(bad)
clc
mov
xor
call
add
pop
add
call
mov
fucomip
dec
pop
into
inc
call
jl
mov
pop
sbb
movs
sub
out
and
xor
cmp
je
mov
cs
aad
inc
add
inc
or
or
pop
or
sbb
push
ja
inc
cmp
jne
cmp
je
(bad)
jp
sbb
call
mov
or
pop
or
cmps
sahf
adc
js
test
mov
cmps
and
or
or
ss
cmp
movs
xchg
call
mov
je
jns
xchg
psadbw
push
push
dec
mov
add
popf
mov
dec
dec
ret
pop
push
mov
(bad)
call
mov
add
mov
scas
iret
jge
push
adc
dec
or
inc
add
fsub
idiv
stc
fstp
sbb
fistp
sbb
adc
call
lock
adc
push
test
sub
pop
cmp
mov
sub
test
cmp
jbe
call
mov
aas
fcom
shl
ins
cmp
xchg
pop
aas
popf
sbb
scas
mov
and
inc
stc
mov
add
seto
push
lea
shl
push
sbb
push
mov
mov
sbb
mov
mov
add
sbb
jp
add
imul
call
sbb
adc
retf
cmp
ja
call
pop
and
mov
or
popf
or
mov
mov
wrmsr
lock
call
or
push
pop
jmp
push
mov
sbb
add
lea
push
call
or
mov
pop
sbb
push
lea
(bad)
jmp
lea
rep
movzx
push
mov
mov
call
aaa
inc
jg
push
mov
int
xor
adc
mov
in
aam
jle
mov
dec
adc
enter
push
retf
sub
mov
call
push
cmps
or
add
mov
pop
pxor
add
inc
jo
add
jbe
hlt
jg
pop
(bad)
fucomp
add
shr
fimul
add
add
or
add
jg
ror
push
in
pusha
mov
inc
adc
sbb
test
or
push
call
call
inc
push
add
xchg
mov
fisttp
lea
add
mov
ss
rol
inc
pusha
jp
shr
in
jmp
syscall
adc
mov
mov
push
add
pop
push
loope
inc
arpl
pop
(bad)
call
repz
inc
lock
lea
mov
inc
jecxz
mov
mov
ret
adc
mov
call
js
out
or
aaa
dec
jne
lea
clc
xor
add
(bad)
call
loopne
jge
shl
popa
setne
cmp
xor
call
fcom
shl
mov
or
mov
fild
lock
outs
(bad)
call
lea
clc
mov
into
call
pusha
lea
call
cmp
out
dec
push
push
mov
push
call
mov
(bad)
jne
lea
add
jg
sub
call
aaa
mov
aam
mov
test
in
iret
add
cmp
mov
jbe
cmps
call
push
call
xchg
out
lods
or
pop
setnp
add
mov
fs
je
jb
std
ffreep
outs
mov
adc
ss
mov
push
call
dec
or
aaa
inc
pop
pop
add
(bad)
je
rol
jne
cmp
(bad)
dec
add
mov
add
mov
mov
mov
sub
pop
inc
jg
push
ret
mov
mov
or
rcr
inc
or
push
fs
mov
test
add
mov
mov
xor
push
call
add
add
jge
xchg
pop
push
call
or
(bad)
sbb
push
mov
fild
fld
fld
push
cld
(bad)
out
mov
retf
fadd
fstp
fld
fld
pop
fadd
fstp
fstp
fld
jg
dec
adc
fld
adc
mov
sub
xchg
popa
jne
(bad)
xor
push
jnp
pusha
jecxz
mov
mov
out
nop
dec
inc
add
pop
inc
or
add
jbe
popa
sbb
mov
mov
mov
sbb
cmp
inc
adc
es
or
fild
pop
mov
dec
mov
push
ja
mov
xchg
push
das
add
inc
test
mov
add
add
fsub
pop
sbb
test
add
or
mov
sbb
daa
enter
test
push
adc
test
inc
test
leave
ret
cmp
inc
or
jmp
scas
or
mov
add
cmp
or
jmp
enter
movzx
movzx
mov
sbb
inc
add
add
push
call
pop
add
pop
mov
fidiv
jecxz
mov
add
push
mov
mov
xchg
pop
test
icebp
inc
jp
jmp
mov
call
mov
(bad)
daa
pop
or
add
adc
adc
pop
inc
fild
mov
mov
je
jne
hlt
sbb
add
div
mov
je
call
add
mov
js
dec
sub
xchg
fcomip
(bad)
out
jge
mov
xor
cmp
jle
cmp
je
dec
cmp
je
std
(bad)
(bad)
dec
and
mov
cmp
je
cmp
jne
mov
add
inc
sahf
je
adc
jb
(bad)
idiv
fistp
jle
push
lea
push
add
push
call
adc
adc
sub
je
inc
dec
or
retf
push
or
mov
mov
imul
mov
mov
adc
or
or
aas
stos
mov
sbb
jne
mov
jmp
dec
std
fild
add
inc
adc
inc
sub
adc
andps
(bad)
dec
fmul
cmp
jge
mov
cdq
push
pop
idiv
sbb
ret
adc
pop
sub
imul
mov
stc
std
and
mov
sub
cmp
jge
inc
and
sub
add
push
cmp
adc
(bad)
jne
mov
jmp
jo
cmp
test
je
out
or
jmp
test
and
push
fwait
jle
test
jle
adc
rol
mov
add
popa
push
push
call
add
mov
out
add
push
lea
aaa
inc
icebp
out
mov
sub
add
rcl
lea
mov
xor
inc
mov
xor
sub
mov
lock
(bad)
cdq
idiv
cmp
(bad)
jne
cmp
jle
push
inc
ret
test
add
test
adc
or
mov
ror
jae
repz
cmp
je
jmp
cmp
jle
aaa
xor
sbb
(bad)
inc
inc
cld
sub
cld
sbb
add
inc
or
sti
jg
je
dec
dec
lahf
pop
cmps
jbe
jle
jg
mov
cli
test
adc
(bad)
stc
push
imul
imul
data16
frndint
loop
add
sar
xor
jae
push
xor
push
mov
mov
jne
or
mov
sub
adc
jmp
adc
mov
adc
je
add
adc
aas
ud0
(bad)
mov
je
ja
shl
mov
call
dec
adc
sbb
inc
imul
fcomip
retf
call
pop
je
call
pop
xor
pusha
jmp
fbld
add
dec
dec
push
push
imul
mov
push
test
push
pop
outs
jmp
js
mov
push
inc
test
pop
setne
scas
rol
arpl
add
inc
sbb
sub
dec
cmp
je
adc
mov
push
push
call
out
push
(bad)
call
cmp
data16
or
xchg
or
sar
jmp
add
and
pop
repnz
mov
mov
test
pop
jle
mov
cmp
jge
mov
(bad)
mov
inc
and
loop
je
or
adc
shl
and
push
push
mov
mov
sbb
sahf
bound
pushf
int3
cmp
and
and
mov
outs
push
and
mov
mov
mov
sbb
sbb
call
sub
cmp
jne
test
cmp
jae
std
mov
push
test
inc
inc
and
cmp
mov
cmp
mov
cli
mov
pop
inc
xor
cmp
jbe
mov
cmp
(bad)
outs
and
push
lea
push
call
add
call
jl
add
or
mov
and
add
mov
push
sub
jmp
test
call
inc
add
test
pop
dec
cmp
dec
add
lods
sub
mov
test
call
dec
jle
je
cmp
jbe
mov
je
jae
cmps
or
lea
mov
test
(bad)
mov
add
fstp
pop
and
sub
pop
and
inc
sub
call
jg
and
xor
add
call
mov
inc
mov
dec
cmp
push
mov
loope
in
adc
pop
add
test
je
mov
call
xchg
pop
or
(bad)
(bad)
jmp
push
push
push
call
fstp
or
clc
xchg
loopne
loop
inc
lock
call
or
fld
adc
add
pop
and
pop
push
xor
and
lock
and
pop
lock
or
jge
enter
mov
push
scas
mov
call
mov
ror
inc
jmp
jbe
add
dec
or
pop
push
je
sbb
lea
call
mov
or
or
loop
je
test
je
clc
or
sub
push
add
mov
jmp
dec
fstp
push
shl
cmp
cmp
xor
and
cmp
clc
lock
xor
jecxz
sbb
sbb
jo
and
xor
push
push
mov
test
cld
call
xchg
sti
mov
mov
(bad)
jg
add
ret
cmp
je
mov
xor
cmp
adc
xor
inc
ret
push
test
cmc
adc
push
aas
call
push
rol
call
mov
shr
mov
pop
out
test
clc
mov
test
sbb
and
call
sub
cmp
mov
xor
xor
mov
mov
cmp
jge
adc
(bad)
fwait
jbe
push
mov
call
cld
push
mov
sbb
clc
call
leave
je
cmp
mov
inc
xchg
lea
fadd
mov
mov
push
adc
or
call
push
aad
add
or
fidiv
sar
dec
mov
jmp
sub
add
or
inc
xchg
into
(bad)
jp
inc
pop
xchg
xor
inc
loopne
daa
mov
dec
movs
pop
in
fdiv
add
and
mov
sub
lea
push
push
into
je
fiadd
les
call
sbb
mov
sub
cmp
jl
xchg
ret
xor
jmp
pop
outs
jp
loope
ss
or
push
jnp
inc
mov
sub
jg
out
push
push
or
push
push
loope
(bad)
add
jbe
call
es
pop
sbb
out
add
(bad)
sbb
jmp
cmp
dec
iret
jne
call
add
test
int3
inc
cli
or
adc
ret
lahf
cld
jmp
jge
mov
push
fcomi
adc
adc
mov
cmp
jge
std
lea
cmp
je
dec
push
or
sub
cmc
out
jbe
xchg
loope
and
push
push
add
push
(bad)
adc
(bad)
inc
cli
std
jg
push
cmp
jl
jmp
xor
pop
int3
pop
out
sub
add
dec
cmp
jg
das
jge
push
cwde
mov
sbb
or
mov
cli
(bad)
dec
xor
mov
pop
add
test
or
mov
stos
das
in
arpl
mov
or
or
or
push
call
pusha
test
adc
ins
and
sub
jmp
mov
sti
(bad)
adc
je
lea
(bad)
mov
pop
push
jbe
add
jmp
push
lea
fmul
dec
and
sbb
inc
ds
and
inc
and
mov
ds
test
je
cmp
mov
rol
add
out
pop
cmp
pop
xor
idiv
ja
jle
push
ss
add
and
cmp
(bad)
(bad)
(bad)
(bad)
jl
test
jne
push
push
jmp
test
push
pop
jbe
cmp
jbe
cmp
jbe
jns
(bad)
inc
cmp
je
cmp
jbe
cmp
ja
mov
pop
mov
add
sub
das
je
sar
sbb
js
aam
push
mov
loopne
add
pop
out
ja
and
xor
paddusw
test
je
dec
cmp
ja
adc
and
(bad)
rol
xor
pop
or
or
cwde
jle
fwait
jbe
cmc
neg
into
call
mov
cmp
in
adc
dec
test
mov
call
inc
cmp
jl
push
aaa
mov
or
jl
inc
jl
aad
(bad)
adc
mov
dec
jmp
call
or
(bad)
jmp
mov
je
jl
inc
dec
inc
push
fsub
and
sub
mov
into
mov
call
jo
jne
call
fbstp
inc
sbb
sbb
jl
cmp
mov
mov
mov
lea
cmp
mov
push
inc
es
pop
pop
mov
inc
adc
jle
pop
jne
jo
into
popf
jge
shl
cmp
ins
cmp
inc
sbb
cmps
sub
push
fs
jmp
mov
xchg
xor
loope
fsubr
mov
call
inc
jl
inc
or
mov
jne
les
in
pop
add
mov
outs
pop
(bad)
mov
call
ja
retf
aam
jo
sub
inc
adc
shl
jg
inc
jmp
sbb
cwde
ss
lea
dec
js
aaa
sbb
jmp
into
call
mov
xchg
cmp
fwait
adc
lods
nop
sub
retf
add
sti
cdq
nop
push
push
lea
sti
dec
add
add
arpl
cs
pop
je
mov
call
rcl
rol
outs
cmp
cmp
mov
adc
inc
jne
ds
mov
popa
jp
mov
(bad)
cmc
sbb
je
push
mov
ja
in
psubsb
jo
dec
pusha
call
lea
lea
call
jg
(bad)
jne
sub
mov
push
call
je
lds
xor
aam
out
jne
cmp
jge
lods
je
pusha
nop
add
mov
call
aas
cli
pop
call
xchg
jne
push
call
into
popa
mov
cmp
add
add
mov
mov
jae
hlt
je
mov
cld
jmp
jp
mov
call
ja
jmp
push
retf
lock
nop
ror
aaa
cli
pop
push
add
scas
out
lock
div
cmps
gs
jl
into
cmp
jle
outs
call
push
jg
or
dec
or
(bad)
leave
add
inc
or
in
in
ds
mov
orps
inc
or
mov
call
or
jle
loope
clc
rol
jne
and
mov
push
inc
fs
mov
add
cmp
icebp
mov
jge
mov
inc
in
xchg
jl
pop
jl
xor
sbb
jl
loopne
dec
cmp
jl
cmps
mov
int3
fld
repz
push
xor
call
out
out
clc
jmp
push
jmp
test
or
push
cli
ret
mov
pop
fidivr
mov
add
sub
mul
loope
loop
jbe
call
(bad)
mov
retf
cmp
cmp
call
jmp
call
push
jmp
push
xor
dec
add
inc
push
jge
jne
stos
add
getsec
push
inc
adc
hlt
cld
add
lea
call
jp
test
mov
popa
mov
je
xor
jb
in
and
mov
push
add
rdpmc
ror
mov
add
ins
push
call
or
cmp
imul
push
call
test
mov
pop
stos
ins
sub
dec
add
cmp
fisttp
sbb
ins
scas
or
mov
out
out
xor
mov
pop
pop
jmp
xchg
inc
pop
sti
das
mov
neg
and
and
dec
fiadd
sbb
or
inc
push
jo
arpl
or
mov
lea
paddw
add
clc
mov
je
aam
js
pop
jne
mov
inc
je
rol
mov
call
pop
je
push
push
mov
jle
or
movs
inc
push
jne
push
jo
add
jne
jle
mov
dec
aaa
sbb
fnstsw
pop
call
and
loope
jg
dec
into
push
or
lock
mov
inc
cmp
jl
mov
ret
mov
mov
cmp
je
push
(bad)
jmp
or
das
add
mov
call
push
stos
cmp
jne
or
pop
call
popa
jl
test
add
fs
mov
jle
add
xor
call
inc
push
sub
out
add
pop
jl
jmp
jg
pop
sbb
mov
mov
push
test
(bad)
mov
lods
faddp
add
push
jl
adc
cmc
jmp
cmp
pop
add
dec
jle
add
and
fsub
mov
int3
and
add
std
fsubr
call
cmps
or
jp
je
jo
outs
xor
inc
stos
xor
sub
lea
push
mov
call
mov
lds
jg
test
push
jl
not
mov
jne
call
ror
pop
je
call
add
fadd
repz
(bad)
jo
jl
mov
pop
adc
and
jo
dec
mov
into
and
(bad)
xor
cmp
sbb
xchg
shl
dec
lock
push
push
call
push
adc
mov
js
add
daa
inc
or
mov
push
inc
jl
je
or
lahf
or
jne
push
fldz
mov
stos
add
jmp
and
pusha
pop
scas
fnsave
es
and
mov
(bad)
frstor
call
(bad)
(bad)
jmp
or
jmp
out
push
call
call
popa
test
ins
mov
push
fisttp
add
push
jle
xor
cmp
sub
push
mov
jb
pop
call
inc
in
sbb
outs
jbe
xor
call
dec
push
shr
(bad)
jo
inc
jo
mov
jnp
and
(bad)
fwait
outs
mov
je
add
int
fstp
enter
imul
hlt
inc
xor
add
pop
retf
int
xor
pop
int3
sbb
aad
sub
fmul
out
cmp
xlat
and
call
mov
adc
int3
int3
inc
mov
(bad)
fisttp
cmp
je
or
xchg
dec
add
test
mov
lahf
aam
pop
mov
mov
rol
(bad)
mov
and
push
lea
call
jg
mov
jne
mov
add
sahf
(bad)
add
bswap
inc
jmp
(bad)
(bad)
fucomip
ins
dec
jae
shl
outs
add
jmp
pop
cmp
enter
jne
and
je
popa
mov
push
sbb
clc
push
call
push
inc
cmp
fadd
xor
dec
push
fbld
lea
jne
mov
dec
push
(bad)
push
jo
mov
call
push
sbb
clc
lea
jmp
or
mov
call
sbb
jne
cmp
jl
mov
cmp
ja
loopne
jge
jmp
shr
add
add
out
pop
cmp
or
mov
adc
sub
inc
add
fwait
push
inc
daa
jecxz
jg
fldz
jmp
call
mov
cmp
inc
ret
jmp
mov
outs
rcr
pmulhuw
call
or
mov
out
sbb
jge
push
call
or
dec
dec
call
jmp
mov
cmp
ja
test
jle
dec
aaa
xlat
call
xor
fwait
mov
fbld
sbb
pop
adc
mov
repz
sbb
dec
out
mov
mov
jle
add
dec
add
ret
mov
clc
add
inc
fcom
mov
xlat
and
jne
test
jge
xor
jmp
lea
push
cmp
and
call
retf
mov
cmp
jle
or
sbb
mov
sbb
xchg
lods
and
cmp
jecxz
aaa
push
or
movs
je
cdq
xor
pop
adc
mov
in
pop
out
hlt
jle
pop
push
dec
mov
aaa
in
ja
inc
hlt
add
idiv
xchg
jne
icebp
inc
hlt
jge
mov
cmp
jl
ds
(bad)
ja
inc
or
or
pop
or
mov
dec
mov
jecxz
adc
hlt
mov
inc
push
adc
jge
ja
cli
or
pop
or
or
sbb
inc
hlt
lea
lea
mov
test
dec
shr
shl
inc
mov
fucomip
clc
call
jmp
mov
call
adc
sbb
mov
add
push
add
out
out
fmul
inc
lock
stos
sbb
ret
(bad)
je
cmp
je
push
lock
std
mov
inc
push
setge
fld
clc
fisttp
pop
adc
cmp
jle
stos
jmp
sbb
repz
or
mov
cli
std
(bad)
jmp
lods
cmps
add
or
fwait
imul
adc
inc
imul
test
cmp
jmp
adc
jne
or
adc
push
call
xchg
fadd
clc
hlt
loopne
js
or
adc
or
add
mov
fucomp
mov
call
jbe
push
sbb
push
lea
mov
call
push
jp
mov
cli
add
scas
xor
jg
and
mov
clc
int
add
and
inc
jle
dec
mov
sahf
test
push
adc
jg
jmp
add
not
rcr
ffreep
dec
pop
jge
jne
cmp
je
cmp
movsx
faddp
xor
lea
push
(bad)
lods
sar
call
cmp
fsubr
cmp
sar
ficom
mov
jmp
loope
test
clc
call
out
inc
js
or
jmp
mov
lea
add
hlt
jbe
hlt
push
cli
fmul
(bad)
xor
jp
push
ja
xchg
sub
mov
shr
sar
ror
mov
call
lea
jmp
cdq
stos
or
inc
pop
dec
mov
cmp
mov
fstp
int3
call
dec
cmps
aaa
aam
inc
push
in
push
hlt
jbe
sti
loopne
jne
jg
daa
jmp
rol
(bad)
push
and
icebp
push
call
repz
je
dec
arpl
xchg
xor
mov
je
jmp
add
mov
jmp
inc
add
clc
aas
inc
hlt
arpl
mov
jge
mov
mov
mov
mov
jne
xor
sbb
cmp
mov
push
movsx
push
call
jne
jge
mov
ror
or
inc
out
mov
retf
push
lea
push
push
call
or
mov
mov
adc
lea
call
out
sbb
lahf
sbb
movs
mov
leave
ret
rol
xor
add
test
pop
std
add
rol
iret
add
xchg
aam
push
xlat
add
push
push
mov
xchg
mov
or
mov
adc
or
js
push
sbb
xor
test
jne
(bad)
jne
inc
pop
mov
outs
dec
je
or
stc
jmp
movsx
sbb
(bad)
inc
push
dec
in
and
call
(bad)
jmp
cmc
cmp
out
movzx
cmp
je
cmp
je
pop
aam
mov
clc
daa
je
cmp
je
sub
sub
xchg
xchg
mov
shl
ret
mov
loopne
sahf
xchg
pop
test
mov
or
push
push
call
mov
xor
sbb
mov
jle
push
call
inc
xchg
add
cmp
fidivr
jl
out
mov
mov
mov
shr
add
push
jmp
(bad)
in
ficom
sqrtps
pop
sub
fsubr
(bad)
cmp
(bad)
mov
(bad)
stc
(bad)
call
push
out
clc
lea
call
jmp
cmp
jmp
mov
mov
jge
call
mov
enter
push
push
mov
mov
call
test
sub
ret
sbb
sbb
dec
cmp
sbb
ret
scas
test
fmul
or
cmp
push
inc
out
add
std
jmp
mov
cmp
je
shl
call
clc
inc
scas
xchg
and
(bad)
aam
xor
enter
add
push
lods
stc
repz
mov
mov
cmp
jbe
push
push
(bad)
test
ja
add
daa
mov
call
add
add
mov
xlat
or
repnz
ja
fidivr
clc
call
pop
pop
test
jmp
add
add
dec
mov
and
mov
mov
cmp
fdivrp
lea
call
test
bswap
mov
ret
cmp
bound
inc
outs
pop
push
out
and
and
mov
push
lock
call
cli
push
sbb
mov
mov
or
arpl
and
je
icebp
iret
pop
inc
pop
loopne
jnp
mov
into
or
enter
out
or
out
push
pop
xchg
sub
push
adc
lods
dec
cmp
push
ja
(bad)
call
loopne
rol
fstp
xchg
mov
ss
mov
dec
mov
cld
call
jmp
and
mov
inc
inc
je
adc
cmp
je
outs
and
rcl
add
push
or
paddq
call
inc
loopne
xor
jle
mov
out
push
sbb
clc
jge
add
fbld
enter
add
adc
push
cmp
sub
mov
xor
add
or
add
in
add
jae
out
jg
mov
push
call
push
(bad)
mov
(bad)
jmp
cmp
aad
out
call
jne
pop
pop
pop
push
or
pop
pusha
xchg
cmp
push
fcmovnbe
push
(bad)
mov
sbb
cmp
call
and
call
dec
into
inc
test
je
(bad)
in
jbe
mov
es
call
inc
add
add
inc
cmp
mov
sub
inc
cmp
jb
sbb
push
loopne
mov
dec
xor
in
mov
push
inc
call
push
mov
xor
and
jmp
fiadd
add
push
and
sbb
hlt
sahf
sub
xor
(bad)
dec
pop
xor
dec
sbb
(bad)
call
es
inc
retf
cmp
icebp
push
call
inc
inc
ins
sub
push
xlat
mov
or
int
jne
dec
and
mov
shl
inc
pop
mov
mov
push
push
test
xchg
push
adc
and
pop
fbstp
sahf
and
add
add
mov
and
cmp
ficomp
push
xor
cli
div
mov
call
push
xor
call
je
mov
call
mov
test
mov
mov
call
sbb
setne
pop
mov
xor
jecxz
push
movs
(bad)
push
push
pop
push
sub
add
clc
(bad)
inc
add
cmp
(bad)
cmp
je
popa
adc
cmp
jl
sti
addr16
mov
push
mov
addr16
sub
inc
mov
xchg
xchg
loope
pop
aas
cld
lahf
call
mov
add
inc
or
xor
ret
adc
push
test
xor
sar
js
(bad)
dec
xor
arpl
pop
std
int3
arpl
add
call
shl
cmp
fs
jle
mov
inc
nop
xchg
and
push
call
(bad)
into
jge
imul
push
sub
jne
bound
call
mov
jmp
out
mov
push
push
jo
mov
xor
rol
push
jne
xor
sbb
and
ret
loopne
jp
push
mov
mov
lds
mov
cmps
push
jmp
and
call
or
sti
aas
adc
xor
call
jnp
jecxz
add
fs
sbb
rcl
dec
mov
mov
rol
pop
lea
je
lea
sub
call
xchg
(bad)
call
pop
sbb
out
add
pop
icebp
call
sbb
or
jg
lock
push
xor
mov
xor
jle
mov
jg
inc
inc
sbb
ins
lea
call
mov
jae
test
adc
push
push
call
aas
or
sub
leave
gs
add
and
cmp
repz
fwait
loopne
mov
or
xchg
clc
(bad)
inc
test
cmp
xchg
test
inc
push
cld
in
retf
cld
add
and
sti
inc
jge
mov
add
imul
xchg
cmp
jge
cld
ret
push
je
add
jmp
pop
sbb
jmp
add
clc
push
out
push
rol
pop
(bad)
fnstsw
push
retf
inc
lea
mov
mov
xor
(bad)
inc
add
or
jmp
add
jp
ja
sbb
push
sbb
cmp
pandn
ffreep
test
inc
add
cmp
jl
jmp
adc
out
jle
mov
mov
push
push
call
pop
pop
cmp
ret
call
or
call
pop
xchg
icebp
jmp
add
fcom
add
shl
aas
pop
ja
add
les
jno
cmp
jne
es
aas
pusha
test
call
loop
ror
das
push
mov
jmp
out
sub
cmp
je
call
sbb
push
adc
add
bnd
sti
sbb
stc
cmp
cmps
rol
xor
push
jg
push
push
mov
imul
or
data16
push
call
push
daa
les
xchg
xor
sbb
ja
sbb
cld
je
retf
call
xor
cmp
cli
push
inc
cmp
jne
iret
outs
mov
call
mov
cmp
je
mov
mov
mov
loopne
movzx
ja
(bad)
call
push
push
or
ds
jmp
jmp
lahf
mov
push
in
mov
call
clc
mov
sbb
push
les
ret
ss
jne
je
xchg
sub
sub
inc
sub
cmp
(bad)
outs
push
push
call
push
add
push
call
push
jo
les
in
add
and
call
or
mov
fadd
sbb
jle
adc
mov
or
sbb
add
or
mov
adc
mov
dec
or
push
push
call
int
mov
and
and
adc
push
cld
call
inc
add
and
pop
pop
sbb
cmp
imul
out
arpl
lea
jnp
pop
sub
mov
cmp
out
test
cld
outs
sbb
cmp
clc
push
push
push
inc
aad
or
enter
fcom
mov
push
ffreep
sbb
xchg
xchg
add
dec
or
and
inc
mov
push
call
fbstp
sbb
idiv
aaa
push
je
adc
(bad)
ds
pop
add
cmp
je
fistp
sahf
shr
mov
ja
fdivr
adc
je
(bad)
xor
dec
daa
and
call
mov
mov
call
push
loopne
mov
inc
dec
retf
call
neg
push
stos
push
call
jbe
cwde
adc
test
jne
loopne
add
xchg
call
add
sbb
dec
sbb
lea
rol
scas
sahf
test
add
rcl
add
push
call
enter
add
scas
cmp
pop
aad
dec
cs
push
push
call
cwde
jo
add
jne
lea
and
mov
add
inc
test
test
and
leave
out
xor
cmp
inc
sub
and
aaa
fs
jmp
mov
test
je
mov
xor
jmp
mov
add
ins
mov
sbb
mov
loopne
push
xor
call
jmp
pop
add
adc
mov
jmp
mov
es
pminsw
or
mov
push
jp
and
sar
out
cmp
fild
push
push
adc
sbb
call
test
mov
mov
jbe
scas
jl
mov
mov
cmp
jmp
je
push
call
mov
dec
je
shl
cli
aaa
dec
pop
xor
shl
(bad)
push
mov
adc
loop
jmp
psraw
push
lods
xor
pop
fs
(bad)
call
mov
jmp
cmp
jne
push
inc
dec
adc
pop
mov
sub
or
or
dec
jno
xchg
ror
xor
mov
jmp
add
std
xchg
loope
jmp
sub
push
jmp
inc
ja
add
add
pop
(bad)
nop
inc
push
sbb
jmp
fdiv
or
push
sbb
add
sub
out
mov
add
mov
cmp
fbstp
add
or
add
jle
jbe
or
test
inc
xchg
xchg
mov
je
jmp
dec
or
push
push
cmc
add
or
adc
loop
pop
out
stc
lea
add
xor
add
sub
push
sbb
inc
jnp
mov
mov
enter
mov
or
cmp
sti
add
stos
into
pop
inc
add
jge
clc
xor
cmp
mov
lods
or
xchg
stos
push
or
add
inc
ja
xchg
in
sub
je
dec
je
dec
je
inc
std
cmp
adc
cmp
out
or
dec
std
jns
jmp
popf
test
and
cmp
je
cmp
jl
loopne
pop
aaa
push
jne
in
call
je
mov
cmps
into
or
lds
jmp
mov
jmp
sub
je
dec
dec
je
mov
or
dec
jne
leave
sbb
mov
inc
clc
leave
imul
fild
cmp
inc
mov
push
jne
call
and
(bad)
xlat
jg
cmp
je
ja
push
push
mov
jmp
sbb
inc
sbb
and
mov
mov
and
sub
je
adc
dec
jno
mov
xor
sub
call
or
mov
xor
ret
je
mov
lea
jmp
into
cmp
data16
call
cmps
adc
call
add
cld
xor
jbe
les
push
jmp
mov
pop
or
and
jmp
pop
je
inc
or
sbb
lods
mov
sub
adc
call
dec
xor
in
leave
inc
call
das
ss
ror
jo
div
dec
or
out
(bad)
call
mov
cmp
into
(bad)
ss
in
inc
in
mov
or
jle
or
xor
inc
and
iret
or
call
ret
push
dec
inc
in
or
leave
test
pop
xchg
add
jo
call
lock
in
push
push
push
stos
mov
jbe
rol
add
dec
loop
pop
mov
inc
sbb
cmp
bnd
or
pop
and
add
rcr
lea
adc
pop
pop
pop
mov
test
inc
sbb
add
mov
cwde
test
rcr
inc
or
icebp
cmp
test
or
sar
xchg
jg
outs
jnp
je
inc
pop
push
inc
jb
jmp
sub
jne
lea
pusha
mov
fsub
or
pop
mov
cmps
or
pushf
or
outs
test
push
mov
xor
push
and
jg
lea
adc
add
mov
dec
shl
lea
sbb
dec
or
jne
jbe
test
inc
add
pop
jne
cmp
jo
repnz
push
call
je
jle
loope
add
and
jmp
lea
es
mov
aas
cmp
add
add
inc
jb
dec
out
xor
mov
es
call
fisttp
dec
and
or
push
call
lock
into
or
cmps
movs
movs
scas
(bad)
call
push
push
call
or
lds
test
aad
cmp
(bad)
shl
mov
jne
adc
adc
call
pop
jl
or
adc
icebp
xchg
(bad)
cmp
push
call
inc
cmp
(bad)
call
jne
cmp
jae
mov
jmp
mov
shr
add
mov
add
adc
or
push
push
cmp
(bad)
call
cmp
aaa
push
call
add
push
call
and
add
je
sbb
inc
or
push
push
and
mov
and
aaa
fiadd
push
call
xchg
add
inc
sbb
rol
push
aad
(bad)
jle
ret
pop
jl
rcr
cmp
aas
or
mov
fadd
sub
mov
aas
std
add
leave
lahf
mov
into
add
xchg
sbb
cmp
sub
push
push
or
jne
outs
lea
inc
outs
or
mov
dec
xor
push
or
bound
fld
out
or
cmp
mov
inc
lea
cmp
je
push
call
cmp
clc
js
or
idiv
or
mov
call
mov
call
call
mov
dec
and
jne
push
push
faddp
or
add
(bad)
stc
jne
jmp
out
in
cmp
jne
mov
push
pop
call
cmp
or
call
jmp
jne
lea
std
fwait
cli
push
push
call
push
test
dec
inc
out
fiadd
ins
push
sbb
jmp
pop
add
inc
mov
push
lea
push
call
dec
add
call
inc
adc
or
movs
inc
xor
inc
cmp
jne
lea
call
or
mov
add
(bad)
mov
sub
and
sbb
mov
jne
call
ds
jl
add
adc
jmp
push
push
js
sbb
jmp
clc
fcomip
scas
sbb
call
cmp
mov
je
lea
aas
push
call
dec
jl
shl
cmp
jne
mov
dec
push
lea
call
lea
cdq
outs
or
call
push
mov
icebp
push
dec
js
in
outs
test
pusha
call
mov
lock
pusha
je
push
cmp
ja
mov
aad
jle
into
call
sub
or
inc
js
add
or
dec
imul
test
out
call
outs
mov
mov
pop
pop
cmp
jne
push
fcomi
mov
retf
test
call
mov
push
(bad)
fstp
mov
push
sbb
lahf
jmp
inc
sbb
js
dec
pusha
jmp
(bad)
inc
cmp
outs
add
adc
jl
call
aaa
xchg
pop
pusha
jne
das
xchg
mov
add
pushf
mov
lods
jmp
mov
sbb
inc
pusha
out
dec
loopne
loope
cmp
(bad)
dec
lea
push
call
push
mov
jno
js
fwait
jecxz
mov
shl
inc
pop
inc
xor
pop
pusha
cmp
je
jns
lock
test
jp
call
cli
outs
push
push
push
call
cmps
cs
outs
push
aad
add
je
push
cli
setno
sub
xchg
lock
pop
mov
add
stos
retf
call
xor
call
pop
xchg
mov
push
push
(bad)
mov
jne
mov
popa
jmp
fdivr
jo
wrmsr
cmp
and
inc
or
hlt
sub
adc
cmp
push
dec
add
fwait
pop
inc
pop
icebp
fstp
mov
pop
or
fmul
and
dec
cld
dec
inc
or
sbb
inc
or
and
icebp
sbb
inc
or
add
mov
fist
inc
jmp
cwde
inc
pop
sub
adc
sbb
jbe
call
je
add
hlt
or
jne
test
jmp
ret
aaa
jl
adc
jne
xor
cld
lea
push
inc
push
mov
inc
and
fadd
sahf
mov
pushf
mov
mov
aaa
js
and
push
call
(bad)
pop
adc
mov
jg
or
sbb
dec
out
push
(bad)
jge
or
test
jmp
test
pop
sbb
fnstsw
mov
mov
mov
mov
jmp
sbb
mov
outs
adc
inc
(bad)
call
mov
or
test
push
pop
je
push
dec
je
xor
gs
or
add
jbe
test
sub
push
rcr
dec
iret
call
(bad)
jb
add
mov
push
call
inc
ja
jge
add
push
je
sbb
add
jmp
(bad)
(bad)
and
call
ja
jp
(bad)
jmp
mov
std
out
iret
(bad)
sahf
std
jle
add
shr
out
je
arpl
push
cmp
fcmovnbe
push
hlt
call
std
out
call
pop
push
jne
pop
hlt
in
mov
xchg
outs
jbe
sbb
jle
pop
mov
add
or
xor
cmp
ja
pop
je
cmps
adc
adc
mov
popa
in
je
lds
mov
test
push
call
rcr
je
dec
rcr
cmps
(bad)
mov
cmp
pop
or
out
push
sbb
cmp
sbb
push
call
in
cmp
rcl
and
cmp
sub
icebp
add
mov
xor
sti
(bad)
sub
or
mov
jo
sti
xor
dec
add
mov
or
test
adc
cmp
call
sub
and
mov
in
jmp
push
fadd
add
int3
dec
clc
call
lea
inc
cmp
mov
arpl
scas
enter
(bad)
call
xchg
xor
mov
pop
in
call
add
dec
jg
cld
cmp
jbe
jbe
cmp
and
ins
js
(bad)
test
sar
jecxz
test
sbb
call
call
dec
rol
sbb
or
bound
mov
jbe
cmp
or
mov
popf
ret
mov
cs
cmp
jg
jne
push
inc
mov
push
call
add
les
ds
sub
cmp
test
das
je
call
sti
out
(bad)
jmp
fisttp
mov
call
clc
pop
inc
inc
call
(bad)
xor
dec
call
(bad)
(bad)
jmp
lea
mov
call
sbb
scas
mov
inc
scas
stos
dec
cs
aaa
popf
and
push
call
and
sub
popa
sbb
xlat
adc
ins
pusha
shr
mov
aaa
mov
push
xor
in
mov
adc
sub
mov
shl
adc
sbb
jo
test
xlat
test
mov
addr16
lea
mov
icebp
cmp
call
and
pusha
inc
mov
push
ficomp
mov
call
xor
push
les
jnp
jbe
ja
jne
push
push
(bad)
fisub
mov
ss
and
xchg
je
ins
jmp
xchg
and
daa
sti
cmp
je
mov
pop
fs
jae
sar
jno
mov
cmp
add
addr16
mov
ret
retf
stos
mov
loopne
pusha
repnz
rol
dec
cmp
add
or
push
scas
xchg
adc
mov
mov
cmp
jne
ja
sti
sbb
dec
adc
jmp
mov
sbb
jo
stos
add
sub
cmp
call
pop
(bad)
(bad)
(bad)
cmp
mov
mov
xor
cmp
je
mov
mov
xor
call
add
adc
mov
or
(bad)
jg
cld
jg
add
pop
ret
mov
sub
add
pop
ret
call
dec
or
cmp
mov
jmp
jne
and
and
jmp
jl
ret
jns
mov
rol
jg
mov
icebp
call
jp
push
ins
icebp
ja
push
push
call
adc
inc
or
inc
outs
and
push
ror
in
adc
push
rcr
or
test
cmp
xlat
mov
cmp
mov
femms
retf
(bad)
(bad)
cld
adc
mov
lock
call
push
loope
test
adc
pop
cld
scas
push
inc
call
push
(bad)
push
call
xlat
shr
cld
lea
push
cmp
out
dec
sahf
inc
lock
push
call
push
mov
call
clc
std
mov
pop
jmp
ss
adc
cld
xor
sbb
test
add
enter
stos
mov
mov
push
adc
ret
push
add
push
ret
jmp
pop
cmp
jne
mov
jmp
push
or
mov
or
mov
das
test
jne
and
cmp
je
stos
mov
push
cmp
jne
aas
cmp
inc
adc
sbb
inc
add
aam
or
outs
sbb
into
call
lock
dec
mov
cmp
cmp
push
out
(bad)
mov
mov
shl
push
call
test
cwde
jo
cld
pop
je
lea
aas
inc
dec
xor
cwde
pop
outs
icebp
pop
push
cli
xchg
rcpps
adc
in
outs
mov
clc
mov
lock
push
call
jge
jg
ss
pop
ret
pop
popf
add
mov
mov
mov
inc
push
jge
pop
mov
add
inc
cdq
idiv
cmp
jne
call
pop
add
sub
sbb
dec
adc
inc
mov
add
add
data16
dec
add
ret
or
inc
push
call
add
push
mov
pop
mov
out
cmp
je
mov
push
mov
push
jae
jg
adc
dec
jne
pop
pop
pop
retf
sub
test
or
shr
fs
test
and
stos
lahf
pusha
mov
add
sbb
cld
call
lock
push
clc
call
cmp
mov
mov
push
or
jg
and
mov
fs
push
call
pop
daa
sub
cs
and
or
adc
dec
and
rol
inc
add
fistp
pop
dec
clc
jne
mov
(bad)
push
add
hlt
jmp
cmp
jbe
dec
cmp
mov
jne
cmp
jne
or
add
xor
cmp
push
pop
push
push
push
call
imul
mov
je
push
push
push
call
mov
aaa
adc
jne
sub
pop
js
push
add
mov
push
call
adc
inc
add
es
les
in
or
adc
mov
rcl
xor
call
xor
lock
sub
and
add
push
add
(bad)
(bad)
(bad)
jle
push
lea
push
push
call
mov
sub
add
add
jmp
jne
aaa
add
mov
test
jne
mov
push
(bad)
xor
mov
sti
rcpps
clc
aas
out
mov
lea
cmp
cli
add
not
test
pop
sub
inc
mov
cmp
stos
test
add
test
retf
inc
adc
std
add
push
call
inc
(bad)
push
add
or
sbb
mov
test
mov
jle
mov
mov
adc
fisub
adc
inc
clc
pop
jl
push
sbb
push
push
call
inc
sbb
loopne
test
add
cld
rol
in
jne
pop
call
inc
lock
jg
push
push
or
hlt
out
push
sub
sbb
lea
cmp
je
mov
shl
mov
repnz
dec
fiadd
stos
adc
mov
sbb
add
ror
add
(bad)
aas
mov
add
hlt
push
fwait
dec
add
aam
(bad)
(bad)
(bad)
jg
jge
cmp
jle
mov
xor
inc
shl
test
jmp
xor
add
push
xchg
(bad)
aas
(bad)
pop
xchg
push
fild
fisttp
outs
jmp
ss
adc
inc
add
jle
lea
mov
cmp
jle
cli
(bad)
inc
mov
mov
jmp
mov
mov
add
mov
inc
fwait
jl
mov
idiv
sbb
retf
lea
sub
xor
rep
xor
jbe
call
out
push
push
cld
mov
mov
mov
add
add
sbb
icebp
cmp
or
cmp
push
lds
or
add
push
add
push
or
pop
jae
inc
add
aam
or
adc
jp
inc
cli
push
fdiv
cmp
jge
sbb
mov
pop
in
mov
sbb
adc
jg
add
test
je
pop
mov
test
inc
or
inc
xchg
add
dec
push
cmp
xchg
jne
add
cmc
jl
inc
ret
cmp
push
push
pop
sub
adc
or
add
(bad)
jmp
test
sar
push
jmp
sbb
cmp
jne
push
cs
pop
cld
(bad)
cmp
mov
out
dec
into
call
add
add
push
push
ror
std
pop
les
or
push
pop
dec
ret
mov
adc
neg
mov
or
xor
xchg
add
mov
clc
mov
sub
push
hlt
cs
push
jle
pop
push
call
adc
sti
pop
out
mov
rol
or
xor
inc
lock
push
lock
push
call
(bad)
jg
dec
icebp
lea
push
call
mov
or
ret
push
lea
push
call
out
pop
push
call
enter
sar
inc
add
xchg
stc
stos
jno
dec
and
mov
mov
std
(bad)
inc
push
mov
je
mov
add
cmp
jne
push
mov
call
push
icebp
dec
xor
cmp
je
push
or
jg
lods
push
push
dec
push
mov
mov
mov
push
mov
call
out
pusha
sbb
xchg
push
scas
mov
das
sbb
adc
or
mov
mov
xchg
imul
mov
dec
(bad)
std
call
and
in
cmp
or
and
pusha
xor
pusha
imul
or
adc
add
(bad)
pop
call
mov
cmp
jl
mov
fcomip
dec
fst
call
pop
je
add
push
lea
out
inc
cs
sbb
adc
out
push
call
adc
dec
jmp
pop
add
jecxz
or
movzx
sub
inc
pop
lea
cmp
mov
jge
leave
imul
or
xor
mov
fiadd
clc
ret
hlt
cmps
sub
push
test
or
test
aaa
popf
xor
mov
xor
mov
ins
dec
push
inc
xor
cmp
pop
je
push
mov
cli
jg
cmp
dec
add
inc
adc
lods
lea
add
std
(bad)
std
sbb
push
sbb
mov
mov
call
(bad)
pop
push
mov
adc
ret
je
cmp
jne
push
cli
push
push
lea
push
xor
push
sub
into
sar
popf
adc
push
and
loopne
push
call
dec
fisttp
cmp
in
jno
mov
cmps
adc
pop
cmp
ds
adc
or
sbb
pop
lea
dec
pop
inc
ja
mov
jmp
and
call
push
lock
xor
mov
sub
inc
nop
test
imul
adc
out
test
mov
add
test
mov
and
cld
cmps
push
je
mov
js
dec
ja
divps
push
mov
xor
xor
psubsb
out
pop
add
and
inc
adc
cmc
mov
mov
test
dec
sub
test
jno
push
mov
test
cwde
test
pop
(bad)
xor
test
clc
cli
aas
adc
pop
add
or
mov
call
std
or
out
push
pop
cmps
pop
inc
sti
push
xor
dec
cmp
add
push
xchg
(bad)
mov
add
xchg
push
or
jp
xor
sar
mov
je
mov
adc
mov
call
icebp
ret
add
mov
or
out
clc
push
lahf
push
push
push
outs
dec
(bad)
(bad)
inc
push
xor
pop
inc
jg
and
jmp
xchg
mov
sbb
mov
cmp
outs
out
mov
dec
sub
jbe
call
gs
inc
fld
pop
jmp
or
adc
pop
xor
push
lea
lea
enter
adc
popa
or
pop
and
shr
add
sbb
div
ror
sub
lea
call
ret
and
mov
call
push
mov
lea
call
imul
loopne
icebp
mov
push
call
or
pop
int
add
sar
mov
dec
add
outs
xor
add
add
sbb
adc
xor
cmovno
add
adc
and
mov
push
add
mov
add
jae
pop
lds
movsx
rcl
call
pop
mov
cmp
jle
add
jmp
push
fs
add
jnp
pop
mov
lea
sar
mov
call
mov
call
gs
pop
pop
leave
out
(bad)
or
sbb
mov
mov
lock
stos
or
add
cmp
mov
push
cmp
jge
or
ja
cmp
add
mov
ins
mov
std
out
sbb
call
jp
fsubr
loope
pop
pop
lea
xor
push
push
push
dec
lock
popa
inc
or
mov
outs
cmp
cld
cmp
mov
mov
dec
js
jne
add
ret
call
in
test
les
adc
add
je
xor
aaa
push
sahf
je
push
pop
adc
mov
jmp
pop
xchg
iret
mov
iret
(bad)
or
sbb
mov
or
add
jno
and
inc
out
sbb
push
stc
sahf
and
clc
ret
push
cmp
push
call
cmp
push
jg
inc
adc
sub
pop
(bad)
sbb
jno
push
xor
cmp
(bad)
mov
iret
sete
call
das
dec
or
out
loope
mov
adc
movs
pop
pop
jmp
or
(bad)
sbb
(bad)
pop
arpl
(bad)
out
frstor
pop
push
xor
or
jmp
jne
dec
jae
div
movaps
or
push
push
sub
or
push
(bad)
jo
xchg
add
mov
xor
fmul
test
jnp
add
aaa
icebp
add
push
jae
lea
inc
inc
call
ror
je
push
jo
adc
imul
push
in
mov
push
or
mov
add
xor
pop
push
cdq
imul
or
jge
add
or
pop
outs
test
jge
push
or
aaa
push
fbstp
add
mov
inc
push
popf
into
call
ja
dec
mov
jne
mov
call
pop
mov
push
add
inc
js
sbb
pop
or
cwde
je
push
gs
call
mov
or
std
jge
pop
or
or
call
pop
dec
mov
add
dec
out
sbb
icebp
sbb
adc
add
push
(bad)
dec
sar
or
(bad)
pop
cld
lock
ds
pop
or
movs
mov
jbe
add
lock
add
and
push
lea
cmp
jp
rol
jne
or
sbb
dec
push
mov
xor
dec
add
sar
in
or
xchg
sbb
ds
ins
mov
mov
in
aad
loope
ret
xor
or
(bad)
mov
ins
cli
(bad)
(bad)
cmp
lock
in
push
int3
les
cmp
outs
xor
jmp
inc
xor
cmp
aaa
cwde
cmp
or
into
popa
dec
in
jnp
cwde
clc
cmp
xor
push
aaa
sub
xor
pushf
mov
sar
rcl
adc
mov
out
xchg
mov
pop
pop
inc
mov
or
xlat
or
leave
mov
and
cdq
or
pop
mov
call
sub
cmc
xor
inc
neg
loopne
add
clc
(bad)
jmp
and
push
inc
push
push
push
pop
aas
mov
call
loopne
test
mov
mov
pop
add
jne
mov
test
mov
call
dec
out
(bad)
mov
or
add
jmp
mov
jo
stc
add
or
jne
or
mov
(bad)
inc
je
dec
je
dec
jne
or
jmp
or
jmp
adc
push
sbb
dec
add
mov
test
ss
add
add
cmp
push
or
add
jg
and
inc
jle
or
cmp
mov
mov
scas
outs
loopne
mov
mov
mov
je
push
or
call
inc
das
(bad)
lock
push
dec
test
jecxz
popa
fiadd
and
lods
je
cmp
je
call
pop
jmp
icebp
jmp
fs
rcl
cld
lds
pusha
iret
call
jl
add
(bad)
cmc
(bad)
lahf
fcomp
mov
sub
add
cs
fsub
in
fild
ss
lahf
or
push
lea
je
add
jne
or
sbb
mov
in
or
mov
push
adc
mov
xchg
or
adc
popf
inc
add
imul
add
cmp
scas
jl
(bad)
out
ds
jne
jmp
sub
pop
adc
adc
pop
or
pop
cmp
outs
jne
call
mov
je
cmp
pop
adc
(bad)
jg
imul
dec
cmp
pop
dec
call
mov
add
les
sbb
mov
(bad)
icebp
test
lods
pop
lods
cmp
pop
setne
and
mov
loope
mov
add
mov
and
or
call
pop
adc
jp
maskmovq
push
cwde
sbb
dec
push
cmp
or
pop
or
ror
push
sbb
call
inc
and
dec
xor
mov
mov
mov
loopne
inc
fucomi
add
xchg
mov
sbb
ret
sti
iret
call
je
cmp
cmps
jnp
sbb
xchg
jle
xor
sbb
push
call
cmp
push
call
push
call
jl
push
push
push
in
test
mov
clc
push
test
mov
mov
jmp
xchg
and
and
mov
call
ja
dec
jne
mov
retf
cmps
jo
push
mov
push
pop
pop
or
mov
xor
cmp
cmp
dec
shr
sub
jle
sub
push
fs
mov
pop
add
push
jp
pop
std
jmp
or
mov
xor
pop
shl
or
lahf
call
jmp
push
cmp
je
push
push
lea
call
mov
push
inc
shl
mov
inc
cs
test
adc
xlat
and
or
sbb
cmp
inc
out
call
ret
push
pushf
cdq
adc
sub
mov
xchg
jecxz
jae
push
popa
sub
popa
xor
sti
test
pop
dec
push
push
xchg
icebp
(bad)
out
jae
bound
pop
pop
jmp
pop
pop
or
dec
inc
mov
ds
push
cmp
(bad)
push
cld
sar
ja
add
cld
jg
jmp
in
ds
cmp
jbe
mov
or
and
push
pop
loop
aaa
sbb
sahf
das
faddp
cmp
sub
shl
mov
add
add
xchg
xor
xchg
pusha
aam
dec
sbb
add
xchg
push
iret
pop
adc
lds
repz
add
mov
push
daa
icebp
xchg
daa
or
add
outs
mov
xchg
fld
ret
mov
xchg
std
xchg
mov
jle
jmp
add
call
sub
inc
inc
push
call
pop
(bad)
sti
dec
jle
push
call
call
cmp
je
out
cmp
sub
add
push
call
cmp
ror
test
jne
push
out
rcl
inc
push
pop
sbb
out
test
cdq
inc
sub
rol
add
inc
call
sbb
xchg
inc
add
dec
neg
sbb
sbb
jo
loop
mov
pop
and
add
pop
shl
add
push
fs
xchg
lods
push
xor
call
aas
push
sub
push
adc
jle
mov
adc
clc
je
xor
inc
lock
pusha
and
scas
(bad)
stos
adc
xor
xchg
(bad)
rcr
push
outs
jmp
and
lock
xor
push
inc
je
push
push
lea
shl
adc
mul
or
push
sub
jle
call
jmp
(bad)
mov
sahf
sbb
sbb
and
xor
(bad)
call
data16
out
and
cmp
xor
add
in
(bad)
ss
lea
inc
push
jno
or
fs
call
add
into
call
lock
ja
push
movzx
mov
xor
jmp
mov
call
div
jne
call
les
(bad)
outs
xor
call
mov
lea
fld
sar
mov
into
mov
cmp
or
jnp
jne
fwait
or
out
or
aad
ja
jae
or
call
ret
push
or
push
test
sahf
ja
push
lea
adc
in
std
call
pand
sbb
(bad)
pop
(bad)
and
jo
fcom
pop
inc
je
iret
call
adc
or
call
cmp
je
mov
sahf
cmps
jnp
(bad)
cmp
scas
test
stos
pop
cmp
ret
div
scas
add
mov
in
adc
mov
push
mov
mov
in
lods
xor
(bad)
mov
or
pop
push
lods
jae
es
ss
mov
or
cmps
xor
stos
cmp
ror
ror
lock
sar
mov
push
lock
add
aaa
adc
mov
sbb
or
ins
or
add
cmp
mov
push
adc
imul
mov
adc
add
add
add
cmp
je
call
add
adc
loope
adc
dec
push
hlt
pop
mov
mov
jl
cmps
(bad)
cmp
fs
push
rol
retf
shl
push
xor
inc
or
mov
mov
mov
cmp
jbe
pop
xor
jg
inc
xor
jmp
mov
or
inc
mov
adc
adc
jne
ret
sbb
push
and
or
cmp
sbb
jmp
mov
pop
(bad)
out
inc
add
pusha
jmp
mov
adc
sbb
(bad)
dec
mov
call
add
push
sub
mov
push
call
aas
push
lds
pop
and
call
hlt
adc
out
mov
mov
jle
lahf
fld
push
mov
call
loope
cdq
or
sub
fsubr
push
mov
call
iret
int
dec
sbb
inc
add
outs
mov
xor
push
call
add
mov
call
add
(bad)
call
cmp
(bad)
call
push
test
push
push
push
push
or
xor
mov
xor
cmp
jge
cmps
cmp
mov
pop
inc
jge
adc
call
jne
mov
inc
cmp
inc
or
in
jl
pop
pop
mov
pop
lds
dec
adc
push
xchg
mov
int3
ja
dec
inc
push
push
je
ret
sub
dec
fs
clc
and
aaa
mov
outs
sub
(bad)
std
push
push
lea
imul
jg
mov
push
mov
aam
mov
mov
ror
cmp
push
(bad)
cli
jmp
call
sub
idiv
cmp
push
mov
call
add
xchg
adc
cmp
mov
mov
inc
inc
dec
pop
mov
mov
hlt
mov
mov
dec
mov
jg
pop
ins
mov
pop
mov
mov
sahf
sub
push
dec
cmp
mov
call
push
xchg
add
(bad)
xor
or
(bad)
int3
add
or
push
lea
push
mov
call
adc
mov
push
jae
push
push
clc
sbb
lea
(bad)
xchg
sub
add
add
push
aaa
inc
adc
cmp
shl
mov
xchg
sub
or
or
xor
loopne
push
mov
inc
js
and
xor
mov
pop
aas
mov
jmp
add
pop
pop
not
mov
lahf
mov
test
je
push
lea
outs
inc
outs
daa
cmp
add
or
js
test
sbb
push
xchg
sbb
jne
pop
add
or
jo
mov
call
or
cmp
je
mov
out
sbb
sti
aaa
push
push
lea
call
outs
xor
inc
clc
push
push
mov
jecxz
cld
call
out
or
push
push
push
fs
movs
xchg
pop
mov
or
xchg
cmp
xor
push
sbb
sbb
fwait
ja
jge
push
push
fs
rcl
mov
push
pop
mov
add
adc
jne
adc
repnz
ret
out
add
loope
jle
into
call
daa
jne
jbe
imul
test
and
ins
mov
jne
mov
in
call
retf
xchg
or
cmps
adc
in
xchg
add
std
popf
retf
jp
or
call
or
loop
or
test
je
xchg
or
fcomp
inc
add
dec
inc
call
jo
adc
ds
inc
dec
sahf
call
pushf
sbb
and
hlt
shl
xor
push
push
call
mov
cmp
jno
retf
into
pop
jmp
es
dec
sub
hlt
(bad)
push
mov
push
xor
jmp
mov
mov
push
sub
js
bound
jle
jg
jne
pop
pcmpeqw
sbb
jbe
stos
(bad)
(bad)
fdivr
fisub
mov
push
jp
push
stos
(bad)
dec
cmp
cdq
clc
out
inc
dec
add
call
int
mov
call
pop
sar
jmp
push
adc
call
push
call
push
mov
push
call
xor
inc
or
dec
dec
ins
icebp
xor
cmp
je
sar
inc
or
leave
inc
cmp
mov
ja
test
add
add
out
xor
arpl
sti
pop
jae
push
call
call
lea
cmp
cmp
in
jmp
mov
in
scas
mov
call
mov
cmp
pop
je
push
xchg
pop
fwait
sti
out
ja
dec
icebp
xor
jne
jmp
push
call
inc
sub
jmp
int3
call
push
inc
scas
stos
int
adc
and
call
hlt
pop
inc
call
jae
push
cld
and
pop
outs
sub
inc
push
dec
iret
call
jbe
call
lock
in
jbe
or
aaa
push
cs
jb
pop
jmp
cdq
adc
or
jp
jae
in
adc
or
sbb
cmp
mov
clc
pop
inc
dec
scas
scas
sbb
xor
or
aas
les
mov
cld
add
add
or
call
dec
mov
add
bound
jae
add
pop
xchg
fsubr
dec
jmp
daa
add
push
push
cmp
sub
mov
iret
in
dec
push
jae
adc
es
ja
sub
push
jmp
pop
xor
jno
daa
add
xlat
push
cmc
or
xchg
jmp
cmp
mov
call
cmp
xchg
xchg
cmp
or
sti
xor
jmp
loopne
dec
lods
dec
push
rcr
aam
call
cmps
jae
in
adc
gs
clc
pop
sbb
sub
sahf
jnp
and
cmp
mov
scas
sub
push
into
call
jg
scas
test
pop
add
mov
imul
mov
jmp
pop
inc
fnstenv
push
sbb
inc
(bad)
(bad)
jg
mov
movzx
cmp
je
cmp
je
cmp
je
cmp
fwait
or
hlt
jne
mov
test
xchg
aas
out
clc
jmp
push
jl
pop
or
in
shr
lock
jle
push
push
mov
fild
cmps
leave
xor
xchg
add
arpl
dec
cld
push
add
add
out
(bad)
popa
mov
sub
push
cld
call
hlt
and
push
jp
inc
or
mov
jmp
push
pusha
xor
xchg
sbb
in
inc
xor
daa
add
jmp
push
mul
add
jmp
push
push
add
or
mov
jmp
ds
lods
sbb
test
or
repnz
adc
push
sbb
scas
je
cs
push
scas
sbb
call
push
adc
push
scas
mov
clc
call
pop
pop
sar
fmul
call
mov
mov
jl
jecxz
call
inc
or
push
push
mov
popa
or
cs
mov
(bad)
(bad)
cmp
hlt
call
adc
popa
mov
scas
sbb
out
(bad)
stc
lea
mov
call
xor
mov
xor
in
jne
jle
dec
cmp
das
daa
repnz
mov
sbb
cs
imul
sti
out
cs
push
iret
call
cld
jl
test
(bad)
mov
push
xor
cmp
je
cmp
add
test
cmp
jle
mov
pop
mov
call
adc
jle
mov
and
aaa
call
mov
mov
cmp
je
inc
fild
sar
xchg
push
sahf
xchg
out
out
push
or
(bad)
xlat
mov
mov
call
sub
outs
mov
xchg
sbb
add
ja
mov
adc
inc
or
lea
iret
fdivr
mov
adc
js
mov
mov
cld
push
add
std
(bad)
push
out
mov
call
es
mov
add
mov
jl
clc
xchg
fsubr
or
(bad)
sub
pop
clc
mov
cmp
scas
push
push
jg
mov
cmps
or
call
pop
ss
cmp
mov
std
repnz
mov
push
mov
pop
lock
aam
sti
mov
dec
jg
inc
cmp
ret
mov
push
push
mov
or
dec
mov
xor
mov
pop
lea
frstor
pop
icebp
push
mov
mov
shl
call
je
adc
ss
jnp
add
push
cmp
loop
dec
add
or
mov
push
mov
and
loop
sbb
inc
mov
data16
jg
aas
lock
cmp
jbe
lea
sbb
add
cli
mov
cmp
ja
pop
or
icebp
call
push
push
pop
rcl
ret
mov
mov
(bad)
fsub
mov
or
jb
add
mov
xor
out
fsubr
dec
aas
push
push
xor
shl
mov
push
and
jne
popf
mov
mov
push
(bad)
out
xchg
pop
lock
add
hlt
xchg
cli
inc
fadd
scas
push
push
adc
jne
std
mov
cmps
pop
add
jmp
mov
push
or
bound
ins
test
je
mov
cdq
mov
add
ret
cmp
add
rcr
or
push
pop
sbb
cwde
and
icebp
(bad)
call
retf
adc
mov
fist
push
pop
cmp
mov
xor
pop
jl
jl
std
fistp
cmc
pop
mov
out
call
shr
adc
mov
stc
lea
pandn
sti
(bad)
jle
xchg
or
lock
cli
scas
mov
inc
inc
je
cmp
dec
adc
add
mul
pop
cmp
mov
mov
jb
inc
aad
call
sbb
call
sti
adc
iret
jne
call
jmp
call
jne
call
push
add
push
and
dec
dec
push
push
call
pop
pop
jmp
push
sub
mov
sub
pop
pop
retf
out
xchg
scas
js
mov
call
fiadd
xor
test
and
push
mov
jne
push
dec
adc
push
rcl
test
inc
adc
je
and
rcl
fdivr
call
dec
adc
clc
sti
inc
ror
cwde
cmp
jle
cmp
xchg
sbb
sub
je
cmp
je
cmp
je
mov
test
jp
inc
pop
aaa
lock
add
jl
lock
(bad)
call
inc
fisttp
cmp
lahf
adc
out
jbe
inc
std
call
xor
cmp
inc
fs
call
jmp
cwde
bound
mov
push
mov
or
or
js
out
int3
out
bound
bound
or
xchg
jle
pop
test
adc
fucomi
mov
cld
(bad)
jle
int
adc
call
je
jmp
call
mov
pop
dec
push
sbb
mov
fldenv
mov
inc
jmp
fsubr
call
idiv
inc
sub
into
adc
adc
sbb
stos
or
mov
sti
ds
fldenv
ds
rol
xlat
bound
inc
aad
jnp
push
adc
push
popf
mov
jmp
jmp
cli
(bad)
std
xor
retf
adc
push
mov
sbb
sbb
pop
or
lea
sub
vsubss
or
xchg
jge
bound
sti
popf
imul
or
inc
sbb
mov
adc
or
fwait
pop
and
add
dec
cmps
ins
clc
cmp
adc
pop
sub
mov
ja
mov
(bad)
adc
mov
sub
icebp
pop
adc
jo
stos
mov
or
and
in
push
fidivr
cmp
inc
mov
mov
push
sub
xor
lock
add
addr16
or
xor
scas
(bad)
inc
xchg
inc
fs
push
shl
fs
inc
push
or
out
jbe
call
mov
fimul
call
pop
or
pop
sub
add
push
add
loope
test
xor
cmp
je
mov
add
jle
push
call
jmp
mov
test
cmp
je
cld
mov
pop
adc
je
mov
cmp
je
mov
jmp
mov
ja
or
cmps
call
pop
js
push
sbb
cmp
mov
clc
(bad)
jle
mov
psrlq
(bad)
(bad)
std
mov
inc
dec
cmp
jne
mov
cmp
je
cmp
je
add
inc
movzx
jmp
push
pop
jbe
loopne
adc
lea
mov
mov
push
add
jbe
or
into
push
call
jmp
jge
jmp
add
add
add
mov
call
push
imul
mov
cwde
dec
cmp
push
jmp
mov
xor
call
fld
mov
call
psraw
loopne
je
push
sub
out
enter
nop
cmps
inc
clc
sub
or
dec
add
pop
inc
ror
xchg
sbb
inc
mov
ins
jo
test
cmp
mov
mov
push
call
or
add
je
mov
xchg
xlat
jne
xor
bound
mov
and
je
jg
mov
and
or
aad
mov
loope
ja
jne
mov
xor
add
cmp
pop
jl
js
jmp
imul
pop
jne
cld
daa
adc
clc
add
jge
adc
mov
mov
or
cmps
mov
lahf
fs
dec
into
call
mov
pop
pop
or
push
or
shl
not
into
push
pop
xchg
jmp
ret
add
cmp
pop
pusha
fldcw
sbb
xchg
dec
loopne
jg
test
lds
dec
mov
mov
lea
leave
lock
sub
xlat
mov
es
dec
out
or
jnp
or
(bad)
out
(bad)
mov
or
mov
cmp
pop
std
hlt
aas
push
xchg
cmp
push
mov
add
and
call
sbb
or
mov
(bad)
retf
mov
fdiv
xchg
or
sar
xor
pop
inc
push
aam
pop
push
adc
push
push
pop
(bad)
sbb
adc
(bad)
call
daa
mov
jo
and
inc
shl
jg
std
pop
push
clc
jmp
mov
add
repnz
aaa
hlt
cmp
or
stc
test
or
sub
jmp
add
lock
cmp
je
ja
jb
cmp
push
add
push
add
cmp
call
ins
ds
je
and
push
call
jmp
(bad)
mov
xor
pop
push
adc
inc
jbe
call
jmp
mov
jmp
lea
mov
mov
push
scas
call
and
add
das
or
dec
call
fistp
add
adc
or
neg
sbb
and
cmp
push
mov
push
inc
retf
jnp
nop
and
repz
sbb
pusha
inc
mov
push
and
add
fimul
pop
push
dec
fisttp
xchg
add
lahf
push
sbb
push
mov
push
jge
or
cmps
fild
mov
ret
add
loop
in
dec
jnp
mov
push
loopne
or
push
cmp
(bad)
dec
cmp
jmp
(bad)
cmp
xor
push
icebp
phaddd
jge
test
call
dec
xchg
jle
pop
push
jmp
inc
xor
retf
or
aad
dec
adc
pop
and
xchg
cmps
and
mul
clc
xor
popa
adc
mov
or
xchg
ret
push
call
fld
and
pop
push
and
jb
mov
inc
and
xchg
ficomp
(bad)
ins
test
sbb
sbb
dec
clc
xor
xor
call
cld
push
sub
push
enter
lock
test
mov
cmp
imul
js
xor
mov
mov
hlt
or
inc
dec
enter
pop
pushf
sbb
(bad)
fwait
dec
movzx
movzx
mov
unpcklps
cmp
sbb
idiv
mov
movzx
movzx
mov
nop
add
inc
cmp
inc
add
frstor
je
add
icebp
fsub
add
bound
clc
sbb
inc
hlt
stc
or
cdq
dec
add
clc
jmp
or
js
(bad)
ins
pop
push
lds
jns
call
jo
inc
xor
inc
sub
or
or
or
and
adc
or
pusha
jmp
dec
xor
retf
sar
pushw
adc
call
test
mov
cmp
xor
sbb
add
mov
adc
jo
test
cmp
jle
inc
mov
lea
mov
pusha
add
pop
pop
lock
push
push
sti
fstp
cmps
adc
mov
mov
das
scas
jbe
mov
test
mov
je
into
cmc
push
cmp
inc
in
iret
call
rcr
bound
push
neg
mov
or
xchg
(bad)
fild
repnz
jecxz
push
call
pop
inc
sbb
cmp
jl
inc
repnz
mov
push
pop
mov
push
lea
mov
aad
stos
loope
loop
and
fs
ret
sub
adc
mov
push
stos
dec
sbb
push
rcl
cmp
push
push
inc
mov
mov
cmp
mov
daa
add
dec
lock
cmp
fdivp
jmp
push
dec
cmp
je
mov
jmp
mov
mov
adc
dec
cld
out
sbb
cmp
je
movzx
xchg
jmp
aas
add
mov
nop
add
mov
or
hlt
into
jne
mov
push
inc
hlt
jge
push
xor
mov
dec
sbb
xlat
leave
(bad)
inc
push
cwde
push
jmp
test
jne
cmp
jge
mov
lea
push
ins
xor
call
pushf
iret
lahf
adc
dec
les
sbb
cld
push
push
or
or
pop
jo
data16
cld
fwait
cli
ja
mov
push
push
call
adc
cmp
or
push
ja
fs
xor
inc
rol
inc
dec
fdiv
or
ror
nop
add
jb
push
(bad)
stc
lea
call
or
pop
or
push
lea
outs
add
add
hlt
(bad)
shl
in
call
mov
mov
clc
aaa
repnz
je
mov
cmp
mov
cwde
add
mov
dec
ds
jle
mov
or
call
push
push
push
sbb
aas
pop
hlt
mov
iret
inc
cmp
jl
test
jae
mov
push
dec
hlt
or
xor
sub
call
call
cmp
add
dec
mov
call
cmp
mov
inc
loopne
ror
pop
hlt
mov
dec
jp
ror
jle
mov
adc
mov
mov
mov
call
pop
push
inc
dec
in
(bad)
push
mov
outs
lock
out
jbe
jmp
sbb
sub
push
xor
call
je
push
xor
mov
call
mov
fdiv
ja
outs
jo
pop
mov
sub
dec
mov
adc
mov
dec
mov
loopne
pop
inc
cs
mov
jne
xor
sub
out
call
jmp
cmp
jne
cmp
jne
ja
call
mov
inc
dec
mov
hlt
out
outs
or
hlt
jmp
mov
mov
jmp
call
adc
add
or
pop
call
mov
call
mov
jmp
xor
mov
inc
ret
loop
sbb
jl
adc
xor
fidiv
enter
in
out
(bad)
fld
pop
jge
cmp
je
cmp
cmp
jge
mov
dec
add
cmp
dec
push
call
inc
jmp
hlt
sti
jg
adc
call
pop
hlt
and
mov
jl
jne
push
jmp
mov
in
cmp
loopne
adc
adc
jmp
gs
jno
mov
xor
call
mov
fbstp
dec
cmp
add
add
push
call
test
je
adc
clc
pop
push
adc
sub
bound
mov
dec
pop
out
in
add
jmp
jg
arpl
push
xchg
mov
(bad)
inc
or
mov
jmp
lock
add
dec
mov
jnp
jne
call
(bad)
jle
idiv
cdq
sar
dec
fdivr
jne
call
int3
xor
add
out
call
xchg
add
out
mov
std
or
fsubr
aas
mov
sub
mov
push
call
(bad)
jmp
lahf
inc
les
gs
call
fs
hlt
jl
mov
sbb
and
jecxz
mov
jbe
inc
in
jne
pop
fild
mov
add
add
scas
fsubr
adc
push
mov
dec
mov
mov
mov
lea
cmc
shl
push
pop
fistp
add
jbe
xor
pop
mov
call
je
mov
pop
push
nop
ficom
mov
fs
xchg
mov
or
cmp
fcom
add
rol
mov
call
xchg
stc
push
nop
daa
clc
jne
xor
sub
mov
nop
dec
adc
mov
clc
sbb
call
movs
adc
xchg
loopne
std
mov
lahf
fst
jl
mov
clc
dec
and
call
dec
adc
sub
clc
push
call
test
xchg
mov
mov
mov
pandn
inc
test
inc
push
mov
aaa
mov
push
call
pop
pop
sbb
loop
lods
mov
bound
push
call
push
mov
inc
std
sbb
loopne
jne
or
push
add
clc
call
push
push
call
retf
add
xchg
add
add
sub
inc
sbb
mov
add
or
and
test
push
add
dec
(bad)
shr
pop
nop
pop
fxch
pusha
sbb
(bad)
(bad)
jmp
push
cmp
in
push
lods
(bad)
mov
sbb
jns
add
and
aaa
pusha
pop
sbb
sub
repz
fld
pop
xor
iret
or
jae
add
sbb
push
popa
push
fsqrt
nop
shr
add
inc
jb
cld
adc
ret
out
jmp
dec
mov
mov
push
fdiv
in
outs
xlat
sti
lods
sub
push
push
call
mov
sbb
in
sbb
mov
es
mov
jae
loopne
fisttp
test
pop
and
ja
sub
push
shr
mov
ds
push
cmp
je
out
add
pop
push
sbb
xor
push
cmp
xchg
push
ja
cmp
mov
call
push
lahf
int3
xor
aam
add
fldcw
xor
out
or
push
jp
mov
test
test
iret
std
stos
and
jmp
jp
xchg
nop
or
call
ret
fmul
es
ins
push
jae
pop
fidivr
in
push
jne
dec
(bad)
fidiv
xchg
sub
mov
adc
(bad)
jmp
push
inc
clc
jo
lea
aam
test
inc
cmc
(bad)
call
adc
clc
fdiv
adc
call
inc
cwde
mov
pop
call
and
push
call
pop
je
call
jb
mov
dec
or
in
out
and
rcr
lea
call
imul
fisttp
jne
or
push
or
sbb
xchg
and
popf
call
xlat
mov
test
and
adc
je
add
jle
sbb
or
push
adc
clc
xchg
mov
add
jmp
std
dec
cld
call
or
inc
enter
movs
enter
push
inc
jb
sub
pop
mov
ds
in
test
(bad)
mov
movs
call
push
push
pop
mov
push
mov
add
or
fxsave
sub
pop
fwait
jmp
leave
push
push
push
push
push
push
push
xor
fsubp
inc
stos
xlat
or
nop
adc
add
mov
lods
pop
icebp
sbb
inc
dec
cld
mov
cwde
or
inc
mov
jae
add
(bad)
sbb
movzx
hlt
push
in
retf
out
into
in
and
or
sbb
bswap
jle
stos
test
clc
vmread
xchg
and
mov
movs
sub
xor
je
pop
fist
push
push
in
mov
add
in
xor
div
daa
or
movs
cmp
pop
nop
hlt
mov
inc
iret
jbe
dec
call
cld
xchg
or
ret
push
sar
push
call
sbb
loope
cmp
mov
sub
aas
inc
pop
push
into
sub
xchg
dec
or
pop
clc
aaa
cld
fstp
retf
je
jno
cmp
jne
xchg
push
or
rol
nop
cmps
add
inc
int3
mov
mov
ja
cdq
mov
inc
dec
or
(bad)
cmp
jne
mov
push
push
jnp
push
mov
lsl
mul
mov
dec
sub
retf
das
xor
je
call
pop
repz
shl
dec
jl
je
mov
pop
leave
retf
call
mov
dec
or
retf
call
into
or
fld
pop
push
aam
call
in
sti
pop
scas
lods
fdiv
lea
call
hlt
call
add
lea
sub
stos
int
lea
call
les
or
lea
mov
enter
dec
call
cmp
pop
xor
adc
(bad)
aas
sbb
and
cmp
jne
push
inc
std
js
or
adc
shl
jne
lea
jl
aam
mov
repnz
fabs
mov
xor
test
cld
icebp
ja
shr
adc
lea
push
call
inc
aaa
je
cmp
test
call
mov
je
cdq
or
jg
ds
aaa
or
push
xchg
call
test
je
cmp
push
in
(bad)
ffreep
fldcw
retf
lea
mov
jmp
mov
xor
cmp
xchg
adc
add
inc
push
xor
push
xor
mov
call
retf
and
rcr
push
jb
push
adc
push
aaa
push
retf
inc
inc
or
adc
mov
pop
jmp
out
enter
xor
clc
sub
rcr
js
in
cmp
push
call
je
mov
call
pop
mov
adc
fcos
outs
das
loop
inc
inc
mov
lea
call
lea
pop
push
cmps
pop
xchg
sbb
ret
data16
call
ds
lock
cmc
push
jne
or
mov
call
test
je
push
sub
mov
push
and
loope
aas
mov
shl
pop
sti
je
loopne
and
neg
sbb
and
scas
into
push
push
div
call
xor
dec
sub
jmp
out
cmp
and
je
cmp
inc
clc
push
push
push
dec
or
in
sbb
inc
hlt
push
jle
xor
fs
je
sbb
mov
(bad)
(bad)
mov
jae
int3
in
outs
into
jne
jnp
jle
dec
sbb
mov
fadd
enter
and
add
dec
les
inc
dec
adc
inc
push
push
add
sbb
pusha
test
jnp
cmps
sbb
add
xor
jp
fst
ret
mov
jl
mov
push
or
into
movs
stos
test
js
ret
or
mov
mov
or
add
addr16
or
xor
lds
inc
fst
fs
test
push
fdivr
dec
mov
out
(bad)
inc
call
jl
mov
fwait
pushw
sbb
mov
mov
xor
and
push
(bad)
out
loopne
call
pop
mov
mov
mov
call
mov
mov
ror
push
call
call
and
leave
dec
std
dec
jmp
pop
mov
xchg
cmovle
add
call
mov
xor
inc
test
push
je
mov
(bad)
cmps
inc
mov
push
mov
jne
call
ret
or
inc
cmp
dec
popf
sbb
clc
add
(bad)
rol
rcl
adc
and
xchg
mov
and
add
(bad)
add
push
cld
xor
movzx
icebp
loope
cld
test
je
(bad)
lods
(bad)
mov
lods
jmp
or
fld
pop
je
mov
ficom
adc
mov
push
call
xor
or
(bad)
or
or
inc
jo
scas
add
and
adc
js
icebp
mov
add
and
adc
or
push
xchg
add
dec
push
mov
fwait
jle
mov
add
or
adc
fild
std
int
arpl
aaa
add
(bad)
call
mov
cmp
ja
out
mov
add
jge
jmp
mov
test
and
(bad)
test
pop
mov
sub
shl
inc
clc
add
stc
(bad)
dec
(bad)
call
jbe
cmp
and
ror
mov
loopne
cld
push
pop
(bad)
or
push
out
cmp
pop
fdivr
jg
cdq
int3
pop
je
mov
call
fwait
pop
sti
ror
call
push
mov
fnstsw
loope
call
or
ds
out
pop
push
call
or
jns
and
jmp
dec
les
test
xor
mov
mov
mov
out
sbb
push
jnp
push
or
dec
cmp
mov
ds
jg
shl
pop
out
(bad)
fdivrp
jmp
add
loopne
pop
jmp
push
neg
popa
mov
jns
(bad)
(bad)
jmp
in
and
sbb
dec
js
cmc
xchg
stc
jmp
ins
inc
mov
xor
or
clc
(bad)
ror
(bad)
(bad)
cmp
je
retf
cs
mov
jecxz
aaa
inc
aam
call
fidivr
in
test
xchg
pop
cmp
mov
mov
aam
jmp
int
int
pop
pop
push
push
jmp
push
push
inc
test
iret
add
(bad)
xlat
add
xor
adc
shl
sbb
add
jmp
or
and
(bad)
mov
add
and
xchg
and
sub
and
out
mov
call
cmp
shl
aaa
leave
inc
punpckhwd
mov
dec
jmp
add
les
sti
jmp
neg
add
or
lock
mov
lea
xor
pop
ds
add
push
or
mov
mov
je
or
add
cmp
jne
xor
xor
enter
call
push
jmp
iret
call
adc
or
jbe
sbb
repz
in
std
jl
call
and
or
in
and
call
jmp
pop
out
jnp
jle
sbb
not
aad
push
mov
sbb
add
sar
sti
mov
mov
push
mov
adc
jb
jg
mov
mov
lea
push
in
scas
call
nop
or
xor
xor
popf
or
sub
inc
pusha
dec
cmp
and
pop
aaa
push
push
fdiv
cmp
repnz
sti
or
push
sbb
adc
cli
sub
xchg
adc
mov
js
out
fadd
sub
cmp
adc
paddw
jecxz
cs
sub
push
mov
mov
inc
sub
cmp
add
je
cmp
add
popa
push
outs
dec
push
push
call
and
adc
cmovo
push
call
pusha
xor
inc
mov
loop
inc
xor
adc
loopne
call
enter
out
stos
push
dec
into
call
cmp
loopne
jmp
in
test
mov
imul
or
in
cmc
push
call
(bad)
or
add
add
or
pop
out
call
or
test
jae
push
xor
xchg
or
push
pop
neg
xlat
fwait
ins
and
fsub
(bad)
jmp
(bad)
fdivr
call
jb
cmps
mov
aas
dec
jb
add
pop
aad
jl
mov
call
cmp
xor
mov
xchg
add
mov
push
cmp
rcl
cmc
iret
add
jl
add
push
cmp
push
sub
and
sar
xor
call
out
push
pop
pop
test
nop
jne
mov
jne
jmp
pop
adc
mov
sub
icebp
mov
jbe
xor
fst
outs
aaa
imul
mov
jmp
es
(bad)
pop
add
dec
pop
pop
xchg
repz
neg
dec
icebp
mov
sub
add
enter
xchg
cmp
cmps
jmp
dec
add
rol
fxam
std
cmps
imul
cmp
cmps
imul
inc
dec
add
call
add
fwait
cmps
jmp
pop
add
pop
dec
add
lock
mov
add
add
cmp
jmp
and
pop
into
dec
add
or
xor
movs
call
dec
add
pop
mov
mov
inc
rcr
loop
call
sub
push
loope
xor
mov
mov
jnp
(bad)
je
cmp
jne
addr16
and
lds
or
test
push
sbb
mov
cmovle
stos
imul
mov
fsubp
call
in
adc
jmp
pop
mov
dec
lock
test
inc
inc
sti
iret
not
inc
adc
and
mov
mov
or
mov
sub
int
int3
and
push
hlt
(bad)
fdiv
call
push
dec
mov
(bad)
jmp
test
add
push
push
mov
rcl
test
fsubr
movs
cmc
scas
or
mov
adc
ds
(bad)
fidivr
sbb
jne
into
repnz
cmp
fdiv
or
xor
cmp
jle
mov
push
push
cmp
jge
jl
pop
push
pop
push
mov
adc
push
in
fld
mov
and
call
xor
or
lods
pop
pop
fmul
push
cmp
mov
aaa
jne
call
jp
inc
and
or
adc
mov
call
mov
cmp
mov
leave
(bad)
jmp
push
mov
mov
das
pop
jmp
ja
pop
inc
adc
sub
je
dec
je
dec
jne
cmp
je
daa
sub
jmp
and
(bad)
jmp
push
push
call
push
push
inc
(bad)
mov
mov
xor
call
loopne
call
ret
mov
pop
sub
mov
mov
add
mov
ret
outs
and
xor
je
popa
jmp
or
in
pop
ja
mov
fistp
call
retf
or
imul
push
or
sti
cli
out
add
mov
popa
je
push
call
jg
jnp
sbb
mov
push
mov
call
call
mov
into
mov
stos
sub
iret
jns
jne
call
mov
push
mov
call
cmp
jne
adc
call
mov
fsubr
sub
fldcw
cmp
mov
and
pop
jnp
inc
mov
adc
mov
push
mov
cdq
jne
clc
add
call
test
cmp
je
push
push
jnp
adc
call
cmp
jne
xor
je
popa
mov
push
idiv
mov
pop
mov
or
jmp
mov
jmp
cmp
inc
cmp
clc
cmp
jne
mov
jmp
out
mov
(bad)
and
call
cmp
jne
out
fsubr
rol
ins
or
mov
inc
inc
push
xor
iret
push
out
sti
repz
mov
xor
push
xchg
pop
inc
or
fbstp
clc
inc
add
inc
sub
call
push
(bad)
xor
cmp
cdq
mov
jne
call
jmp
add
or
(bad)
pop
xchg
pop
pop
pop
pop
pop
in
inc
add
adc
jmp
push
jbe
call
call
adc
mov
cmp
dec
sub
add
ret
mov
sbb
js
call
gs
rol
inc
push
xor
push
push
lea
mov
outs
stos
sbb
mov
add
inc
scas
(bad)
loop
fwait
mov
jle
push
into
call
lock
out
xor
jle
jne
and
ret
pop
es
jne
adc
cmps
add
hlt
test
outs
je
cmp
in
xor
cmp
stos
jle
inc
add
or
add
cwde
cmp
xchg
and
call
std
jmp
adc
sub
or
push
push
xor
cmp
push
icebp
(bad)
push
out
(bad)
jg
(bad)
ror
je
cmp
jle
test
leave
rol
mov
aas
mov
cld
mov
push
lea
jge
mov
and
inc
clc
inc
push
inc
add
pop
ret
push
sar
lea
push
call
push
cmp
dec
xor
jmp
adc
mov
push
lea
sub
cld
lahf
push
scas
and
sbb
addr16
in
mov
cmp
mov
cmp
je
fs
dec
sub
mov
test
push
call
push
(bad)
mov
lea
inc
or
aam
dec
add
mov
sub
add
push
call
mov
pop
inc
fistp
adc
add
mov
mov
add
test
dec
rdpmc
push
loope
retf
push
inc
push
test
dec
dec
je
sar
gs
popf
inc
dec
mov
(bad)
cmp
sti
dec
inc
mov
inc
shr
movzx
call
(bad)
sbb
adc
mov
push
ror
call
or
cld
add
movd
test
jle
inc
cmp
call
jl
fist
jne
jg
cmp
mov
or
push
lahf
or
mov
pop
std
pop
push
out
mov
ins
pop
mov
push
push
inc
call
or
call
inc
(bad)
(bad)
inc
loopne
add
cmp
call
sbb
test
xor
lock
xor
add
shr
inc
cld
mov
add
push
sub
mov
sbb
mov
call
ret
or
aas
out
inc
rol
mov
push
call
or
sbb
loopne
fsubr
out
pop
xchg
sub
mov
call
fidiv
mov
iret
or
jbe
mov
cmp
scas
or
call
pop
fwait
jle
inc
or
mov
lea
(bad)
cmps
fisttp
or
add
jnp
add
mov
call
mov
cmp
sahf
adc
push
lock
fsub
mov
call
(bad)
mov
adc
cmp
and
sbb
inc
mov
ret
fnstcw
mov
call
call
es
add
add
sar
add
sbb
cmp
sub
sbb
inc
cs
pop
mov
and
je
sbb
and
cli
cdq
inc
ret
outs
test
add
xor
mov
mov
movzx
ror
or
add
ret
mov
adc
and
sub
call
mov
(bad)
jmp
adc
add
xchg
sbb
xor
lea
push
push
mov
pop
test
je
shr
xor
jmp
shr
dec
jne
scas
cmp
mov
inc
add
cmp
mov
jmp
pop
jg
add
adc
inc
and
mov
push
cld
fild
adc
jns
pop
jae
sbb
mov
dec
mov
add
(bad)
mov
mov
adc
mov
mov
lock
cmp
jp
add
inc
mov
je
sbb
fbstp
mov
cld
lea
cmp
jae
push
push
pop
or
cmp
jle
mov
push
adc
ror
or
mov
add
xlat
and
or
mov
xchg
in
jl
mov
add
add
call
adc
xlat
cmp
pop
jne
cmp
je
mov
jmp
or
pop
and
push
stos
push
push
hlt
or
std
cwde
mov
call
xchg
push
push
in
or
mov
test
setbe
aas
push
xor
add
push
inc
dec
dec
jne
push
lea
or
imul
inc
or
(bad)
call
cmp
and
mov
jg
ret
jge
lea
call
cmp
movzx
jg
inc
cld
mov
movzx
jmp
stos
cmp
pop
je
dec
dec
je
dec
je
dec
je
dec
dec
jne
or
and
mov
or
stc
adc
mov
in
(bad)
inc
test
jle
cmp
jle
cmp
je
push
jmp
adc
(bad)
(bad)
dec
add
or
jne
cmp
jne
mov
cmp
ja
movzx
mov
ja
lock
sbb
mov
sbb
je
mov
shl
jle
out
loop
sbb
mov
add
outs
add
mov
inc
adc
ja
jge
jge
(bad)
dec
inc
jp
mov
cmp
lea
mov
je
xor
idiv
add
mov
jmp
(bad)
call
adc
xor
mov
or
fisttp
add
(bad)
mov
add
mov
movzx
mov
mov
mov
shr
cmp
je
test
jne
and
jmp
inc
out
add
movzx
imul
xor
and
sbb
or
or
or
rol
loope
or
mov
rol
jne
out
or
fcom
push
mov
pop
cdq
pop
idiv
mov
shl
lock
mov
mov
and
xchg
lea
cdq
idiv
imul
add
cdq
pop
idiv
mov
mov
clc
mov
sub
and
inc
xor
jo
add
sub
dec
dec
add
add
shl
call
add
popa
xor
shr
mov
lea
dec
std
mov
or
adc
adc
je
sbb
sbb
scas
ret
xchg
mov
xchg
mov
mov
inc
or
mov
(bad)
out
sbb
ret
das
cmp
mov
jl
cmp
je
mov
cmp
das
xlat
adc
cmp
inc
xor
jmp
cmp
call
ret
cmp
add
call
xchg
icebp
jl
aas
fdiv
mov
mov
sbb
cmp
jne
mov
icebp
(bad)
push
mov
mov
mov
add
mov
mov
sub
out
add
std
mov
push
mov
call
mov
ror
test
leave
test
ja
sbb
push
adc
je
adc
or
add
cmp
jne
mov
(bad)
push
cdq
pop
idiv
test
mov
jne
add
cmp
sti
jmp
stos
or
lea
add
jmp
stos
cmp
jge
idiv
call
movzx
or
movzx
shl
or
pop
mov
fild
inc
add
add
inc
out
jl
sti
mov
jmp
dec
push
je
adc
add
jne
sub
(bad)
aaa
jb
leave
test
jle
cmp
(bad)
mov
test
loop
and
mov
inc
adc
ja
rol
jl
jmp
jne
cmp
jne
inc
inc
hlt
repnz
dec
je
dec
je
cs
mov
call
jmp
add
enter
adc
sbb
add
imul
neg
sbb
and
ret
iret
sbb
pop
aam
clc
or
mov
popa
pop
test
add
inc
cdq
cmp
jne
sub
je
or
push
mov
mov
push
add
add
jo
or
ins
jb
mov
aas
mov
sub
and
push
add
dec
inc
addr16
cmp
jne
pop
xchg
leave
call
les
add
or
fmul
enter
pop
enter
cmp
inc
enter
bound
pop
add
or
push
add
call
fld
fadd
daa
adc
jmp
test
sbb
inc
iret
cmp
pop
sar
call
aaa
mov
xor
cmp
jge
cmp
je
sub
mov
cmp
je
add
mov
or
sbb
test
push
push
push
call
and
and
call
mov
mov
jmp
sub
add
cmp
call
fmul
inc
push
int3
outs
(bad)
test
inc
es
or
jle
add
mov
std
(bad)
dec
mov
mov
sub
xor
xor
inc
inc
inc
cmp
mov
mov
sbb
mov
jle
xor
mov
cmp
test
inc
aad
mov
dec
push
xchg
jae
cwde
push
dec
test
adc
push
push
montmul
cmps
cmp
mov
mov
sbb
mov
call
jle
mov
sub
movzx
mov
scas
jle
cmp
sub
inc
xor
cmp
jbe
jle
movntps
fmul
jb
xchg
clc
mov
and
mov
add
inc
loopne
add
mov
outs
stos
call
add
jns
mov
mov
ja
(bad)
(bad)
cmp
jg
cmp
jg
mov
jmp
mov
cmp
or
jmp
inc
mov
fsubr
push
dec
push
cmp
out
or
push
jle
mov
sub
icebp
sbb
jmp
fisttp
or
add
mov
cmps
mov
jmp
xor
cmp
jle
sbb
cmp
in
jmp
mov
or
ds
add
inc
mov
jg
std
call
test
dec
sub
shr
retf
call
jge
inc
loop
aam
dec
je
dec
movhps
push
dec
ss
shl
dec
jne
inc
jne
enter
dec
push
shl
adc
xor
cmp
push
add
das
loopne
cmps
and
enter
inc
inc
(bad)
repz
(bad)
(bad)
jmp
inc
adc
movs
ret
fs
call
xchg
or
jmp
cld
push
in
movs
push
add
mov
jle
adc
movzx
mov
or
sbb
add
pushf
dec
dec
(bad)
adc
mov
fist
shr
jne
mov
jmp
pop
cmp
sbb
add
retf
or
scas
dec
hlt
ja
call
ss
sub
dec
add
dec
aam
leave
mov
sub
push
cld
mov
call
jecxz
and
out
jne
dec
je
sub
jae
ffreep
jne
sbb
jmp
or
or
xor
and
test
pop
in
lods
or
push
jmp
pusha
pop
add
push
push
(bad)
adc
std
jg
aam
inc
in
cmp
jl
int3
cmp
adc
dec
rol
cmp
ror
jne
inc
clc
add
mov
cmp
mov
jl
push
shl
(bad)
mov
ret
adc
call
mov
sbb
je
clc
push
call
pop
push
call
mov
pop
es
pusha
adc
enter
inc
mov
aas
mov
adc
adc
adc
aaa
out
push
adc
push
or
mov
sbb
test
loop
push
adc
mov
sbb
dec
sbb
add
push
dec
inc
fsubr
call
arpl
out
xor
or
or
and
push
enter
xchg
sub
or
rol
jo
mov
mov
add
mov
add
cmp
jl
in
call
je
push
int3
cmp
mov
movzx
xor
push
call
lock
movzx
imul
data16
sti
xchg
je
inc
push
inc
mov
push
add
add
jmp
lock
add
mov
pop
out
pop
inc
rcl
or
dec
xor
pop
(bad)
mov
dec
cmp
or
pop
mov
pop
lea
rep
xor
pop
int
jmp
sub
imul
cmp
or
je
push
push
push
call
sar
cmps
or
pop
xor
mov
movs
test
sub
call
mov
call
pusha
and
(bad)
(bad)
call
mov
sub
mov
sbb
jg
clc
dec
mov
test
jne
pop
pop
cmp
mov
mov
add
push
mov
add
ins
call
jl
xchg
jg
or
cmp
jne
(bad)
jmp
aad
add
add
add
pop
cmp
jg
mov
ja
mov
cmp
jne
out
pop
cmp
jne
xor
test
push
call
dec
xchg
ret
nop
pop
push
cmp
jle
and
fwait
sbb
mov
mov
mov
adc
xchg
rol
mov
test
shl
repz
je
push
into
test
mov
add
pop
arpl
adc
mov
setne
movzx
lea
test
inc
mov
sbb
add
mov
mov
dec
call
cmp
pop
je
push
cli
rep
mov
inc
sti
je
call
fild
push
lea
push
mov
call
rcl
icebp
cmp
out
sti
fistp
sahf
pop
je
mov
push
xor
inc
out
iret
call
cli
push
aad
neg
mov
jle
icebp
ds
jg
cmp
jle
or
mov
or
jg
cld
add
pop
pop
and
clc
add
mov
cli
add
cmp
jne
or
jmp
not
and
(bad)
jmp
icebp
fwait
inc
cmp
jl
sbb
inc
or
pop
sbb
push
(bad)
mov
dec
gs
stos
mov
add
jmp
aad
xlat
add
int3
adc
pop
xor
add
push
and
xchg
adc
and
sub
xor
(bad)
call
pop
cld
xor
cmp
je
mov
cmp
jne
mov
cmp
je
(bad)
pop
(bad)
out
sub
jne
mov
cmp
jne
jo
pop
and
push
xor
inc
jg
scas
sbb
ins
(bad)
cmp
je
cmp
sub
mov
icebp
lea
push
(bad)
call
pop
cld
je
scas
xlat
mov
mov
mov
mov
(bad)
mov
jb
inc
aas
(bad)
cmp
jne
cmp
jne
or
push
mov
daa
inc
outs
loopne
add
repz
jmp
add
js
jmp
(bad)
mov
je
mov
mov
inc
std
cmps
jmp
sub
push
idiv
(bad)
cmp
fcos
mov
dec
pusha
shl
mov
jo
dec
mov
lea
inc
ror
loope
test
inc
jge
mov
mov
sbb
push
sbb
adc
pusha
mov
add
mov
sar
sbb
cmp
jl
mov
xor
inc
inc
jns
popf
js
cmp
pop
idiv
add
jle
xor
cmp
test
(bad)
in
and
shr
add
mov
sar
and
int3
jne
lea
push
call
pop
push
dec
cmp
jbe
call
sub
fisub
inc
shl
jmp
mov
dec
sbb
push
push
mov
call
push
jno
les
sbb
clc
out
test
stos
xchg
and
sahf
pusha
or
cmp
push
push
fucomp
jp
push
adc
fsubr
retf
call
test
jne
push
jg
and
je
push
jne
jae
ror
mov
(bad)
out
xor
mov
jg
add
cmp
je
aad
mov
mov
sub
repz
push
fs
(bad)
out
jmp
rcr
push
cmp
pop
sbb
lods
pop
add
out
mov
test
call
and
(bad)
(bad)
call
add
and
xor
outs
clc
inc
dec
adc
adc
push
dec
loope
dec
jo
repnz
(bad)
out
out
add
mov
sub
or
jge
dec
jne
push
test
ja
push
pop
push
mov
call
call
pop
pop
(bad)
push
call
cmp
je
mov
sub
adc
pop
push
dec
sar
push
dec
loop
push
sar
mov
push
push
call
ins
jmp
call
ins
xor
jb
outs
xor
outs
jge
jne
mov
or
mov
call
call
sbb
or
jp
addr16
xchg
add
or
add
inc
jo
jge
pop
jl
mov
fwait
test
mov
add
jmp
inc
nop
into
es
fistp
aam
mov
inc
(bad)
(bad)
(bad)
call
fild
mov
push
push
push
lea
xchg
mov
adc
(bad)
dec
add
lea
sbb
jb
cmp
aaa
cld
mov
fimul
in
cmp
jne
call
and
ja
mov
push
pop
rep
mov
xor
cmp
(bad)
mov
mov
and
inc
cmp
jl
and
add
sbb
jne
add
fsubr
sar
mov
out
and
mov
(bad)
inc
pop
je
push
mov
iret
out
sbb
adc
and
out
mov
inc
sub
cmp
inc
sub
jae
lea
xchg
jge
test
cli
fwait
mov
push
mov
sub
sbb
(bad)
sbb
inc
call
aaa
repnz
sti
(bad)
(bad)
inc
rcl
loop
inc
inc
mov
fild
fld1
fdivp
fld
fmul
fstp
fld
pop
jg
(bad)
cld
xor
inc
xor
fmul
fstp
jmp
sar
sar
shr
dec
jge
sar
mov
jo
jge
sar
adc
jmp
sbb
xor
loop
add
push
sti
pusha
ja
mov
fcom
ret
rol
add
outs
clc
aaa
pop
cld
mov
xchg
mov
and
mov
mov
xchg
sbb
or
sub
push
xchg
lea
push
aas
in
inc
std
mov
call
dec
xchg
call
mov
mov
inc
xor
call
inc
fdivr
or
add
or
mov
aad
mov
or
inc
mov
mov
call
call
cmc
cmp
cdq
xor
cmp
mov
imul
ins
push
mov
add
int3
std
jo
or
xchg
xor
not
call
lds
jmp
jl
and
pop
rcl
inc
mov
add
call
sar
cmp
mov
mov
test
inc
pop
dec
and
or
push
add
xchg
mov
mov
jmp
call
aaa
mov
pop
add
mov
mov
or
adc
inc
sbb
je
mov
jmp
jmp
add
ja
mov
shl
jmp
push
add
and
xor
push
fst
jo
cmp
inc
aaa
(bad)
and
or
cld
mov
cmp
mov
je
(bad)
pushf
push
mov
(bad)
fsubr
call
cmp
out
jg
les
js
add
popf
(bad)
push
cld
cs
add
add
cmp
and
pop
cmp
jne
(bad)
loop
add
add
jne
lea
mov
mov
stc
and
shl
clc
cmp
je
pop
push
push
push
call
addr16
fmul
push
call
push
push
call
fistp
jmp
mov
push
mov
cmp
jne
ja
dec
pop
call
and
into
in
or
xchg
pop
add
adc
call
pop
inc
fnsave
leave
fstp
push
adc
clc
loope
add
in
out
das
dec
jl
inc
fisttp
outs
ret
call
into
push
lea
mov
call
jo
hlt
mov
mov
jno
(bad)
call
jne
call
idiv
ja
adc
aas
and
mov
movzx
cmp
jg
test
and
dec
add
je
dec
daa
mov
ds
div
jmp
jbe
int3
push
call
psadbw
xchg
movs
mov
adc
jo
out
xor
fs
sub
push
push
lds
loop
ret
or
jle
pop
mov
sbb
cld
or
in
pop
mov
sahf
mov
cmovl
push
mov
int
cmc
mov
inc
pop
add
add
or
push
mov
push
stos
mov
inc
and
jecxz
out
add
test
call
push
call
mov
dec
add
lds
and
inc
dec
push
ror
jnp
inc
pop
add
lea
cld
mov
xor
pop
cwde
aas
(bad)
mov
cwde
call
lea
daa
call
or
aam
aad
in
mov
lea
neg
push
push
call
and
scas
mov
add
cmp
(bad)
add
hlt
je
ret
pop
add
add
inc
mov
je
cmovs
mov
or
fmul
sti
add
fcom
ja
fst
add
(bad)
fcom
imul
and
test
call
aam
mov
cmp
mov
je
and
add
sbb
cmc
pop
das
cmps
dec
cld
push
call
add
sbb
bound
clc
mov
jmp
push
dec
sbb
xchg
inc
lock
or
mov
(bad)
(bad)
call
mov
imul
lea
cmp
jae
cmp
jg
cmp
jle
mov
push
add
adc
mov
aad
jne
mov
lar
(bad)
mov
mov
lahf
out
mov
sub
xor
push
push
mov
push
push
cld
test
hlt
mov
cmp
cwde
call
fild
pop
je
adc
or
inc
cwde
lea
sbb
adc
add
scas
xchg
adc
(bad)
popf
stos
jmp
jo
sahf
dec
sub
mov
jl
mov
push
lea
pop
call
pop
push
retf
and
addr16
adc
lea
mov
push
sti
movs
call
in
jns
dec
ret
inc
hlt
pop
sbb
mov
push
lea
out
jg
push
mov
mov
jg
push
nop
retf
pop
inc
or
stos
out
(bad)
nop
into
call
call
into
fnstcw
add
mov
movzx
jne
and
push
je
dec
or
jnp
fucomi
loopne
dec
push
lea
push
sub
in
adc
ins
sar
into
fs
ds
or
dec
push
push
mov
add
(bad)
and
je
call
scas
sub
or
paddw
sti
jl
or
mov
out
add
cwde
adc
cld
mov
dec
inc
aas
add
adc
icebp
push
add
mov
inc
pop
push
mov
call
call
test
mov
je
cmp
mov
je
mov
mov
add
mov
jmp
cmp
jge
ret
inc
out
(bad)
out
loop
push
call
test
jge
fsubrp
push
mov
jmp
inc
mov
mov
sbb
mov
lea
inc
push
and
aaa
inc
popf
push
push
arpl
jae
call
jmp
mov
idiv
jnp
jle
mov
cmp
dec
je
neg
call
push
push
add
push
xor
iret
fld
push
call
inc
xor
mov
xchg
and
jg
out
push
retf
call
jmp
xchg
jne
push
push
(bad)
std
scas
(bad)
dec
test
jl
mov
mov
call
xor
fimul
repz
neg
jg
mov
sbb
dec
sbb
aad
push
jg
mov
add
cmp
xrelease
je
push
mov
fbstp
sub
xchg
pusha
inc
sub
adc
dec
sbb
jmp
jge
jl
lahf
pop
inc
sbb
push
sar
jle
add
inc
call
sub
retf
push
jle
push
or
add
call
push
mov
or
xor
lock
adc
mov
je
and
(bad)
(bad)
(bad)
jg
dec
jl
push
in
mov
shr
shr
not
and
and
test
mov
mov
mov
dec
mov
mov
mov
je
jnp
mov
pop
jecxz
dec
lea
mov
jmp
pop
adc
movs
push
jl
ja
push
cmc
jmp
les
inc
mov
mov
mov
lods
jmp
cmp
jge
inc
lea
mov
and
and
aas
inc
jne
add
loope
call
fs
push
push
push
call
call
add
(bad)
jne
inc
adc
inc
outs
clc
pop
(bad)
ins
cmp
jle
call
pop
push
cld
push
clc
(bad)
call
jmp
xor
test
add
je
call
ins
jo
out
mov
add
push
mov
cli
cli
repz
pop
cmp
dec
adc
mov
jne
out
cmp
(bad)
adc
aad
add
mov
and
or
push
push
push
call
(bad)
call
add
les
sti
jne
mov
cmp
pop
push
lahf
pop
mov
fst
cmp
(bad)
icebp
pop
or
and
or
or
sbb
call
xor
leave
inc
mov
fnstenv
xor
adc
push
or
push
inc
test
mov
sbb
mov
jne
or
sti
(bad)
out
jnp
test
je
mov
mov
mov
sbb
inc
mov
inc
inc
mov
inc
mov
mov
sbb
in
arpl
xchg
dec
nop
mov
jmp
pop
jae
sahf
adc
mov
adc
add
mov
push
mov
mov
inc
daa
nop
pusha
test
adc
mov
mov
pop
je
push
popa
push
and
(bad)
cmp
push
mov
outs
jmp
hlt
jmp
invd
(bad)
icebp
push
ror
push
std
inc
pop
mov
(bad)
(bad)
fcomip
mov
xor
cmp
inc
mov
mov
mov
mov
mov
add
dec
pop
adc
cwde
xchg
or
add
push
mov
adc
out
mov
mov
cwde
cmp
fwait
mov
test
mov
nop
pop
add
lds
pop
cmp
mov
ror
cli
out
mov
pop
mov
ret
ret
mov
je
(bad)
dec
loop
pop
push
mov
mov
mov
mov
mov
mov
mov
inc
inc
jne
cmp
(bad)
jns
add
jns
add
xor
out
xor
cmp
(bad)
jg
dec
mov
jmp
mov
mov
cmp
je
(bad)
inc
cmc
cmp
mov
push
mov
jmp
mov
ret
jmp
push
mov
lea
cmp
mov
jne
call
push
push
push
call
test
stc
dec
(bad)
push
push
test
fsubr
and
cmp
call
push
or
push
std
xor
call
add
push
ret
add
lea
call
inc
add
xchg
mov
xchg
(bad)
cmp
xor
(bad)
push
mov
mov
frstor
fucomp
ins
pop
push
push
call
call
add
inc
add
ja
push
call
sti
out
and
or
mov
call
push
call
mov
add
pop
pop
pop
imul
inc
push
test
je
push
call
push
add
inc
dec
adc
fild
call
fcomip
dec
push
call
pop
sub
std
(bad)
push
in
push
and
lea
hlt
inc
std
push
mov
call
inc
and
dec
and
push
not
xor
push
xchg
adc
or
xchg
jl
aad
ret
cmp
jne
inc
add
fadd
dec
cmp
jne
cmp
dec
push
and
lods
je
loope
xor
mov
sar
add
add
in
or
jl
cmp
fiadd
stos
jmp
rol
add
push
pop
jmp
fild
out
or
add
rol
test
jle
mov
sbb
push
push
lea
cmp
mov
shr
outs
mov
sub
adc
pop
inc
in
push
leave
ins
sub
push
(bad)
iret
call
jle
mov
adc
std
sbb
pop
jne
mov
push
call
push
push
lea
call
fsubr
cmp
mov
jg
push
sar
or
ret
sar
inc
cld
repz
mov
pop
adc
inc
sti
xor
call
mov
mov
mov
add
cld
fld
call
jne
mov
add
call
push
push
mov
mov
xchg
dec
push
push
push
jbe
sub
push
jmp
pop
and
data16
call
mov
pop
imul
or
pop
pop
xchg
lock
inc
push
xor
cmp
or
xchg
lock
je
xor
inc
lock
sub
not
out
sbb
std
inc
lods
or
and
pop
dec
stos
mov
icebp
adc
cmp
cmp
je
(bad)
pop
(bad)
sti
adc
inc
and
mov
mov
add
pop
cdq
and
add
cmp
xchg
xrelease
ja
call
adc
sub
adc
stos
sub
xchg
lock
pop
lds
test
sar
inc
xor
xor
inc
and
push
and
push
push
call
inc
ret
sub
jg
sbb
sub
push
movs
popf
loope
cwde
sbb
fisttp
arpl
xor
mov
add
jecxz
call
mov
adc
push
push
neg
and
sbb
in
loope
push
shl
in
cwde
mov
je
enter
je
xchg
jmp
js
push
call
pop
and
pop
adc
cmc
je
les
pop
fsub
(bad)
shl
daa
call
mov
jo
inc
inc
mov
je
jl
jnp
dec
or
jmp
or
xor
lahf
sub
sbb
punpcklwd
fnsave
movs
pop
sub
icebp
and
or
pop
sub
ror
add
push
push
mov
jmp
mov
je
test
jg
inc
jp
or
das
xor
je
mov
and
or
ins
jo
retf
jne
xor
test
pop
and
std
pop
mov
adc
xor
inc
mov
mov
sub
inc
jae
sbb
int3
mov
xchg
adc
adc
jp
(bad)
aas
loopne
ja
mov
lea
call
loop
js
and
pop
mov
call
push
and
leave
das
dec
adc
in
loopne
inc
dec
ds
adc
cmp
jno
sbb
push
xbegin
call
mov
mov
mov
push
push
push
call
arpl
push
push
call
jge
je
or
into
push
xor
mov
inc
ins
sub
test
mov
call
inc
cmp
mov
sbb
into
call
push
xor
push
mov
test
loop
push
push
out
es
call
mov
xor
mov
add
shl
icebp
push
push
inc
dec
std
xchg
adc
aad
push
inc
iret
call
ja
les
movs
cdq
or
xor
arpl
fild
dec
push
std
out
clc
add
sbb
push
adc
cli
mul
retf
dec
xchg
or
mov
inc
sar
pop
cmp
mov
mov
call
adc
cmp
lahf
retf
stc
loope
mov
cmps
test
iret
and
add
sbb
pop
pop
je
enter
adc
mov
stos
pop
pop
push
push
inc
sbb
ins
jbe
call
push
scas
sbb
inc
add
or
es
jge
ins
adc
lahf
sbb
sub
call
pop
mov
dec
add
mov
xchg
std
sahf
xor
jnp
push
hlt
clc
(bad)
ss
in
enter
js
and
push
adc
outs
pop
add
mov
fld1
adc
lds
js
pop
adc
aad
inc
mov
or
loop
clc
sub
ret
daa
add
add
add
add
inc
xor
jne
fld
xor
call
inc
fld
fld
call
sbb
xor
inc
adc
inc
adc
xchg
xchg
fld
fld
push
adc
inc
sbb
inc
sbb
nop
clc
xchg
add
add
int3
movzx
or
or
push
aam
sti
cmps
sti
mov
add
add
mov
ret
and
outs
mov
xor
mov
movzx
push
mov
dec
and
shl
and
or
shl
shr
or
pop
sub
in
pop
mov
and
lahf
les
cmp
mov
push
movzx
mov
ret
or
cmp
lds
(bad)
mov
shr
and
mov
mov
mov
pusha
dec
add
adc
pop
push
add
or
fdivr
push
mov
call
and
jle
adc
cmp
clc
add
mov
and
mov
jae
add
sbb
and
dec
rcr
js
pushw
iret
jo
aaa
adc
jmp
fild
jge
jl
adc
out
cwde
mov
or
xchg
call
dec
inc
push
push
mov
cli
push
call
and
inc
jno
ja
mov
sbb
push
call
or
mov
add
add
test
pop
jne
pop
push
call
popf
leave
jmp
je
sub
xor
call
jae
or
push
inc
(bad)
inc
add
cmp
add
loope
mov
or
cmp
ret
sbb
push
lea
push
and
movzx
inc
ret
cmp
jl
int
and
je
dec
xchg
push
out
fdivrp
adc
jo
call
call
and
(bad)
mov
sar
add
or
cdq
call
xor
das
bound
mov
push
push
mov
xor
mov
mov
imul
mov
(bad)
(bad)
dec
cmp
scas
dec
shr
mov
add
mov
add
mov
push
pop
add
fiadd
sbb
add
xchg
inc
xor
mov
call
mov
(bad)
pop
pop
mov
(bad)
and
push
sbb
(bad)
mov
jne
cmp
sub
clc
cmp
pop
or
outs
add
outs
or
test
call
sbb
pop
push
xchg
emms
jmp
mov
(bad)
fisttp
mov
push
push
mov
test
xchg
or
cmc
lods
cmps
lock
and
movs
add
dec
jne
scas
sub
je
leave
sub
inc
scas
jg
pop
mov
add
push
and
fs
iret
aad
psrlw
(bad)
outs
(bad)
(bad)
std
enter
add
call
and
aam
unpckhps
add
push
jge
je
iret
add
add
xchg
js
imul
stos
jge
stos
xor
inc
inc
add
out
or
ds
and
mov
addr16
dec
pop
inc
lods
add
(bad)
(bad)
(bad)
call
sar
clc
or
ja
jmp
mov
mov
movzx
pop
call
mov
push
mov
mov
adc
jg
lds
and
ror
scas
xlat
mov
add
sti
adc
scas
sti
add
pop
push
icebp
or
push
pop
add
add
cli
lods
cli
xlat
out
fsubrp
sub
movzx
xor
pop
push
add
mov
ss
sub
sub
sub
adc
or
(bad)
and
imul
fmulp
lea
and
fldenv
adc
test
cmps
mov
xor
or
mov
mov
add
jmp
add
dec
ror
(bad)
int3
mov
fisttp
scas
ror
adc
retf
push
fadd
iret
sbb
add
jle
movzx
ja
shl
test
movzx
dec
mov
inc
movzx
add
mov
call
sti
adc
cmp
je
icebp
imul
mov
sar
lea
or
cmc
dec
xor
jmp
inc
pop
ja
inc
push
mov
inc
lahf
(bad)
clc
ret
adc
pusha
cmp
mov
jg
jnp
add
sub
jl
sbb
add
imul
push
add
stc
sub
(bad)
cld
sbb
mov
adc
clc
fs
add
aas
movzx
aas
xchg
sti
aaa
mov
adc
clc
push
jp
push
setnp
fdivrp
scas
rol
cli
mov
sub
inc
add
loope
jbe
add
or
add
mov
inc
add
inc
hlt
jg
and
xor
sar
jl
and
add
imul
fsub
adc
add
or
and
cmp
jg
or
(bad)
sti
mov
fldcw
pop
pop
fiadd
ret
in
test
jmp
mov
movzx
lea
sub
cli
mov
xor
xchg
mov
js
lahf
adc
push
in
shr
je
call
cmp
je
xor
jmp
pop
dec
xchg
jnp
inc
xchg
or
jge
cmp
mov
ja
ret
aam
aaa
push
jb
push
sub
out
jg
shl
mov
(bad)
mov
ins
xor
pop
cmp
xchg
cmp
pop
and
aam
jnp
cmp
popa
movs
add
push
inc
add
dec
xlat
xchg
add
push
clc
jbe
dec
jmp
popa
sar
push
cld
mov
jg
movzx
mov
pop
nop
ret
fwait
ret
outs
js
pop
ret
fwait
jmp
mov
jmp
fdivr
mov
ret
dec
add
aas
inc
sub
inc
in
add
ins
cmp
mov
je
jp
xchg
ret
xor
add
fbstp
std
mov
jmp
movzx
mov
stos
and
push
in
call
add
add
jge
out
jg
loope
(bad)
sti
mov
pop
lock
lea
and
add
movzx
mov
cld
cli
mov
mov
sbb
fnsave
mov
js
sub
mov
dec
idiv
and
add
sti
xchg
jae
cmc
pop
push
lods
push
jmp
lock
mov
sbb
pop
jae
pusha
js
adc
dec
pop
cld
push
pop
hlt
sar
and
xor
mov
sub
js
pop
ret
aaa
cld
dec
and
xor
mov
xor
push
add
xlat
cmp
xor
adc
or
add
jne
jae
add
sar
in
jmp
cmp
lock
lock
hlt
xor
push
or
xor
pusha
sbb
push
and
pop
aaa
hlt
(bad)
push
shl
aaa
sbb
jb
add
cld
rcl
stos
cmp
xor
hlt
lock
cmp
xor
pop
mov
and
sbb
(bad)
jg
mov
mov
sub
xor
sar
and
mov
xchg
xor
xor
test
add
lock
out
add
jmp
cmp
jb
dec
add
icebp
cmp
xor
jnp
jmp
scas
(bad)
jp
xor
outs
movzx
js
add
mov
loopne
loope
sbb
(bad)
sbb
aas
jae
xor
sub
mov
xor
push
dec
mov
jmp
cmp
mov
push
add
jmp
sahf
mov
jno
pop
pop
ret
inc
(bad)
mov
neg
mov
jo
jno
xlat
xchg
nop
add
mov
mov
add
std
jg
lahf
lods
icebp
sub
jb
pop
xor
and
xor
mov
jmp
mov
jo
jne
mov
dec
push
jmp
jnp
or
push
cwde
pop
and
or
and
jae
sbb
sbb
scas
and
pop
mov
call
add
and
mov
inc
(bad)
fimul
scas
(bad)
mov
addr16
mov
xor
sub
adc
and
repz
jmp
mov
push
add
ror
push
add
aaa
inc
pop
adc
mov
mov
imul
movs
push
and
push
xchg
inc
cmp
add
mov
imul
jnp
je
cmps
or
stc
fwait
je
js
xchg
cmp
push
jmp
aas
xor
inc
jge
push
jmp
or
xchg
add
loopne
xor
inc
shr
mov
mov
mov
adc
lock
gs
add
or
(bad)
call
(bad)
(bad)
dec
xor
add
dec
pop
mov
add
les
xlat
push
not
sbb
and
xor
sbb
sbb
inc
adc
adc
movs
add
jmp
out
push
mov
pxor
(bad)
push
pcmpeqw
psrlw
xor
movzx
cmp
jne
mov
(bad)
fld
mov
push
int
push
xor
movd
mov
fild
cld
outs
ror
jo
add
std
push
cli
call
movq
pmullw
paddw
movq
inc
paddw
psrlw
(bad)
mov
movq
je
imul
mov
xchg
jno
mov
add
cmps
dec
(bad)
dec
or
repnz
jne
emms
jmp
xchg
ret
aad
je
cmp
test
cmc
and
push
pop
xor
sar
mov
sub
ss
fwait
push
retf
add
rol
sub
rcl
cs
pusha
(bad)
push
push
push
retf
xchg
mov
adc
aaa
cmp
(bad)
cmp
je
mov
xor
imul
(bad)
jmp
dec
add
push
cmp
jne
add
add
add
test
mov
push
add
mov
enter
or
cld
or
pop
movq
xor
ror
jg
(bad)
push
jg
inc
jnp
paddw
psrlw
popa
adc
ror
popa
inc
push
ins
and
ja
cli
add
cwde
jo
movs
gs
icebp
cmp
and
jge
hlt
push
retf
cld
or
cmp
shr
add
sub
jmp
(bad)
xor
mov
add
jno
pop
add
call
imul
pushf
ja
fcomp
sub
cvtpi2ps
in
ficom
push
ja
dec
inc
cmp
xor
daa
xchg
js
(bad)
hlt
jne
jmp
mov
mov
pop
pop
inc
hlt
jle
mov
inc
adc
retf
xor
xor
lds
sbb
lds
nop
aam
inc
adc
push
add
inc
out
push
push
dec
or
sbb
(bad)
mov
sbb
dec
sub
sub
sbb
inc
cs
ret
push
je
es
inc
dec
popf
push
jmp
add
sub
mov
inc
call
aam
(bad)
retf
adc
adc
les
leave
hlt
nop
inc
ret
or
push
inc
mov
or
add
jno
pop
mov
push
push
mov
mov
leave
adc
sub
aad
cmps
pop
add
push
call
jnp
retf
add
inc
dec
push
add
xchg
adc
pop
mov
shl
cmp
mov
or
test
inc
inc
add
es
cmp
mov
jg
inc
jbe
push
jge
dec
pusha
mov
sub
test
add
add
pop
adc
push
adc
sub
push
jae
sbb
add
sub
(bad)
jge
cmp
cmp
mov
sub
mov
scas
add
hlt
or
add
jno
retf
dec
pop
or
sbb
call
inc
or
xchg
push
or
add
retf
or
pop
or
mov
rol
outs
loopne
jo
mov
aam
jg
psrlw
aam
add
push
sar
outs
jmp
jo
and
daa
lock
inc
and
aad
fisttp
std
ficom
xchg
pop
sbb
paddw
pmaxsw
mov
adc
mov
push
add
add
inc
adc
(bad)
fucom
or
mov
mov
jae
push
add
sbb
jg
jne
movzx
stos
and
rcl
pushf
(bad)
mov
xor
xchg
mov
repnz
gs
in
adc
and
adc
jge
jbe
scas
push
push
push
lock
inc
or
or
je
push
enter
xchg
mov
jge
mov
lock
cmp
sbb
xor
aad
mov
mov
xor
not
bound
enter
or
cmp
adc
es
xor
jne
push
jmp
nop
jno
xor
add
iret
xchg
or
(bad)
das
jmp
jne
xchg
inc
cmp
das
adc
leave
add
dec
jb
hlt
icebp
pop
xor
or
call
ror
inc
sub
push
call
add
adc
aaa
inc
xchg
add
sub
push
add
lds
push
xor
pop
aas
or
fisubr
jne
jge
mov
adc
stc
add
mov
std
cdq
push
pop
idiv
lahf
neg
lea
mov
mov
mov
neg
sbb
and
mov
(bad)
clc
add
neg
mov
sbb
and
add
sbb
pop
call
pop
adc
ret
(bad)
(bad)
(bad)
das
push
movq
movq
movq
daa
movq
movq
call
dec
outs
jg
paddusb
paddusb
paddusb
paddusb
cmp
jg
or
jg
adc
or
sbb
dec
jne
aaa
je
out
lea
dec
daa
ja
lds
scas
call
mov
inc
lods
dec
sbb
pop
dec
lock
retf
fcmove
cli
in
rol
sti
xor
outs
imul
sbb
push
movzx
sbb
sub
push
popf
add
aaa
cmp
cmp
sbb
sub
cmps
icebp
push
ficom
test
arpl
pop
jmp
sbb
mov
sbb
int
aam
out
mov
mov
neg
lahf
cli
inc
add
aaa
and
push
jle
adc
inc
rcl
push
xchg
jne
jmp
out
lods
dec
mov
dec
or
mov
icebp
cmp
dec
sar
loopne
mov
imul
ss
inc
out
mov
out
(bad)
int3
ss
fwait
dec
add
mov
test
shl
fdivr
sub
add
push
sbb
mov
and
call
icebp
mov
je
mov
retf
mov
mov
add
pop
out
inc
xlat
mov
adc
out
popa
push
ret
add
adc
test
or
stos
or
pop
xchg
call
sbb
dec
imul
mov
js
loop
(bad)
aam
jne
jae
cli
xor
sub
jb
cmp
xlat
mov
or
dec
jge
loop
repnz
idiv
add
mov
enter
sub
cmp
push
jp
inc
cmc
fdivr
sub
imul
mov
add
shl
movzx
adc
or
xchg
and
jmp
cmp
push
sub
adc
repz
add
test
je
stos
adc
push
in
rcl
loop
or
push
pop
add
jmp
or
sbb
enter
add
outs
or
movs
test
mov
xor
loopne
imul
add
add
les
cwde
rcl
cli
loop
(bad)
(bad)
jg
inc
add
mov
sar
imul
shr
and
mov
mov
or
jg
dec
inc
mov
inc
ror
jne
push
fdiv
loopne
sbb
or
call
lahf
xbegin
emms
jmp
push
je
pop
aaa
adc
mov
add
loopne
loopne
xchg
adc
pop
xor
stos
(bad)
push
adc
in
mov
(bad)
fdivr
sub
adc
shr
(bad)
xchg
push
aad
dec
je
call
jmp
call
add
jl
xchg
add
(bad)
(bad)
push
dec
xchg
add
pop
fwait
add
mov
add
mov
mov
cmps
stos
cli
(bad)
jmp
add
(bad)
xchg
add
(bad)
cdq
add
mov
mov
mov
fmul
lea
push
call
cld
call
sub
push
push
mov
xor
mov
xor
mov
movzx
mov
vpsubsw
mov
loopne
or
or
jne
pop
dec
test
or
add
dec
dec
cmp
jns
inc
jne
mov
je
out
push
and
cmp
jle
cmp
jg
push
call
sbb
pop
mov
(bad)
fwait
jp
addr16
jmp
push
push
lea
push
push
push
call
js
les
jmp
push
call
add
jmp
push
and
fucomp
adc
in
add
out
test
push
jnp
push
call
or
push
sub
push
xchg
or
les
das
push
adc
inc
and
push
xor
ja
aad
sub
and
sbb
call
or
inc
and
or
and
aas
sub
mov
or
add
out
xchg
add
dec
or
leave
and
mov
add
call
mov
mov
mov
mov
jl
mov
(bad)
jmp
hlt
mov
mov
test
je
cmp
je
cmp
je
mov
pop
cmp
ja
push
call
jmp
or
jg
fdivr
and
call
xor
mov
add
mov
jne
push
call
xor
test
pop
je
push
push
sti
(bad)
aas
dec
cmp
call
mov
add
push
call
inc
mov
pop
or
cld
mov
mov
cmp
push
jne
test
jne
out
out
jge
into
call
(bad)
jg
fisttp
cmp
je
cmp
je
jbe
cmp
ja
push
call
fwait
add
popa
jbe
push
jmp
push
cmp
mov
sub
push
mov
cmp
je
mov
in
add
add
inc
inc
and
call
inc
cmp
and
cmps
jge
xor
sar
shl
or
inc
icebp
data16
es
jl
pusha
jle
je
jle
aas
imul
(bad)
bound
mov
stos
mov
leave
ret
push
or
rcl
and
jmp
loopne
xor
adc
add
cmp
call
loopne
push
mov
mov
push
shl
push
(bad)
fcomip
pop
scas
hlt
mov
cld
mov
sar
mov
and
jg
std
psrlq
mov
push
add
ret
and
sub
je
push
pop
(bad)
(bad)
jmp
retf
je
dec
jne
push
mov
pop
test
jnp
add
inc
shl
dec
jne
(bad)
fstp
jmp
mov
adc
adc
push
adc
loope
or
mov
add
je
jne
mov
mov
mov
jmp
mov
rcr
push
cmp
je
cmp
je
mov
(bad)
mov
xor
jmp
not
mov
das
mov
sub
add
mov
sbb
cmp
jg
inc
and
add
mov
ror
fld
pop
cmc
(bad)
push
stos
mov
jmp
jle
mov
jmp
inc
add
sub
dec
jne
push
mov
mov
add
test
push
push
dec
cmp
inc
shl
jne
mov
lods
or
jne
mov
push
cmp
call
(bad)
sbb
stc
mov
sbb
iret
inc
cld
xchg
or
xor
inc
or
pop
test
call
outs
retf
aad
movq
pop
jb
jg
aam
outs
pop
sbb
aad
std
or
cmp
jg
lahf
out
mov
sbb
jne
je
inc
ror
pop
out
dec
jne
mov
bnd
pop
(bad)
mov
mov
cmp
scas
cli
shr
and
mov
dec
xor
adc
add
ror
jne
jmp
bound
test
adc
adc
add
mov
repnz
push
lock
adc
mov
jo
jmp
jg
cmp
jb
xor
mov
jo
inc
mov
mov
add
scas
out
cs
fimul
mov
or
jle
push
sbb
das
add
adc
push
out
mov
sar
fist
push
test
mov
sub
mov
fdiv
fisttp
mov
mov
push
pop
sbb
pusha
outs
out
cwde
sbb
mov
jle
mov
xchg
cmp
xor
dec
psraw
mov
pop
je
add
loope
aad
or
or
inc
push
dec
jae
add
outs
push
or
outs
pop
psllq
pmulhw
xchg
cld
paddsw
packuswb
dec
movs
or
call
dec
dec
inc
test
je
fs
adc
mov
xor
cdq
out
xor
xor
pop
ins
inc
into
xor
test
cmp
loop
add
fwait
push
push
aad
pop
push
mov
jg
and
mov
fld
mov
movzx
(bad)
jl
pop
or
adc
std
jg
fwait
push
or
pop
hlt
fstp
fld
fcomp
fbstp
fnstsw
test
jp
prefetch
daa
fld
or
pop
loop
enter
or
pop
pop
in
std
push
adc
pop
cld
fld
inc
clc
fmul
cmp
fnstenv
test
inc
hlt
hlt
hlt
ja
and
add
leave
call
std
xchg
add
xchg
leave
mov
call
leave
mov
call
(bad)
fstp
fstp
mov
(bad)
sub
and
adc
push
and
mov
ins
mov
aas
sub
cmp
sub
std
test
les
fsub
pusha
xchg
pop
add
inc
xor
es
ss
ins
adc
and
call
add
fimul
jns
xchg
inc
add
mov
or
or
push
ss
cmps
dec
xor
arpl
sbb
dec
inc
add
adc
inc
add
scas
js
imul
inc
in
push
(bad)
or
lea
call
mov
cmps
jne
call
clc
add
mov
and
cmp
mov
jno
lock
jge
movzx
je
pop
pop
and
jne
lea
dec
cmp
add
inc
hlt
cmp
(bad)
(bad)
(bad)
push
mov
sub
sub
lea
test
jle
movzx
movzx
imul
imul
add
sub
sbb
idiv
adc
push
push
pop
inc
(bad)
pop
push
je
sbb
sbb
adc
xchg
or
data16
dec
add
sahf
pop
mov
call
mov
xor
shl
loop
or
jmp
movzx
inc
aaa
lods
jae
(bad)
stc
or
or
sti
aas
pop
ud2
ud0
add
cmp
xchg
or
mov
(bad)
(bad)
(bad)
fimul
and
add
cli
adc
and
inc
pop
arpl
jo
push
mov
mov
(bad)
mov
adc
loope
cmp
mov
js
mov
jge
push
cmp
jl
out
xor
fild
js
repz
in
(bad)
(bad)
je
sbb
dec
xor
lea
push
mov
(bad)
cld
fistp
cld
push
mov
mov
mov
pop
and
out
and
dec
and
loopne
cmp
push
mov
xor
dec
or
mov
test
jl
(bad)
mov
fistp
pop
and
pop
sbb
(bad)
adc
(bad)
(bad)
out
out
add
mov
add
dec
mov
mov
cmp
jl
mov
mov
sub
mov
dec
das
mov
sub
sub
mov
push
push
call
(bad)
mov
and
or
rcl
stos
clc
mov
push
and
std
jge
cmp
mov
je
mov
(bad)
inc
movsx
movsx
movsx
movsx
sub
adc
outs
clc
sub
cdq
idiv
cmp
pop
jnp
icebp
dec
es
mov
(bad)
mov
arpl
add
inc
or
test
mov
jnp
push
xor
es
jge
add
mov
cmp
mov
inc
shl
test
adc
pop
or
or
adc
adc
pushf
adc
shr
ret
das
stos
push
adc
sbb
loop
ret
in
ins
ja
or
mov
sub
idiv
mov
loopne
fadd
fimul
scas
pusha
fldcw
clc
aaa
cld
inc
and
cmp
mov
mov
sti
pop
ins
fdivr
push
push
call
pop
pop
pop
sbb
aaa
adc
inc
sub
inc
or
dec
sub
and
push
sbb
dec
jl
test
jle
mov
pop
mov
pop
ret
push
push
loopne
sbb
xor
mov
sbb
add
outs
call
mov
mov
push
lea
mov
lea
(bad)
(bad)
call
xor
mov
test
je
cmp
je
cmp
je
mov
pop
std
(bad)
mov
sahf
cmp
je
mov
mov
cmps
ja
out
or
add
jp
add
add
adc
mov
dec
jg
adc
mov
mov
push
cmp
jl
mov
(bad)
(bad)
mov
push
pop
jg
dec
jmp
cmp
jl
dec
jmp
test
je
mov
mov
or
mov
adc
fdivr
or
xchg
ss
arpl
push
std
(bad)
xlat
test
js
add
test
cmp
mov
push
sub
cwde
or
dec
fmul
mov
mov
mov
add
adc
inc
pop
cld
dec
add
mov
mov
std
mov
adc
sub
dec
add
popa
push
xchg
(bad)
mov
in
test
adc
push
lods
adc
or
adc
push
ins
pop
add
mov
dec
dec
or
mov
mov
bound
add
dec
push
mov
or
mov
mov
add
sbb
sbb
xor
add
movs
and
or
adc
xor
jmp
sbb
mov
test
push
mov
push
mov
mov
and
add
mov
icebp
cmp
mov
and
jge
add
mov
call
jne
sub
outs
int
inc
add
cmp
jl
jbe
ja
add
sub
inc
mov
mov
add
mov
adc
mov
adc
add
and
add
cmp
jnp
fwait
ds
sbb
push
or
mov
mov
inc
lahf
jmp
inc
or
es
aad
mov
push
jmp
mov
mov
lea
mov
cmps
out
shl
jae
mov
cmp
jle
cmp
push
lock
add
test
(bad)
test
xor
push
jne
inc
cmp
jl
xor
mov
jge
mov
clc
lea
mov
cmp
je
cmp
jmp
or
jnp
add
cmp
jl
jmp
mov
mov
cmp
cmp
packuswb
xor
cli
add
mov
clc
mov
outs
call
dec
cmp
jl
movzx
pop
jg
jg
push
mov
add
mov
in
gs
icebp
fwait
add
push
lea
adc
jne
push
(bad)
out
or
xor
fnsave
and
inc
or
sub
jle
sbb
psllw
mov
push
sbb
aaa
and
xchg
repnz
rol
cmp
(bad)
(bad)
fcomp
adc
jle
jne
mov
cmp
je
cmp
push
cld
mov
mov
lea
pop
adc
adc
mov
sbb
mov
mov
iret
mov
mov
sbb
or
add
loopne
mov
jmp
jae
call
sub
and
(bad)
call
fmul
rcr
adc
ror
(bad)
pop
movs
pop
pop
mov
pop
ja
ja
push
int3
mov
(bad)
xor
jg
rcl
or
loop
or
mov
test
push
push
push
mov
cmc
sbb
inc
push
and
jne
adc
shl
xor
shl
xor
add
lea
jle
mov
lea
mov
cmp
je
mov
in
(bad)
add
lea
movzx
pop
inc
push
push
push
loop
dec
mov
mov
mov
pop
(bad)
(bad)
outs
add
and
add
sub
dec
dec
jne
cmovs
add
call
pop
add
add
jo
shl
mov
inc
dec
mov
dec
and
and
mov
inc
(bad)
push
adc
pop
push
push
(bad)
and
add
add
test
ja
(bad)
mov
lea
lea
shl
clc
lea
mov
mov
out
mov
lods
and
dec
sub
mov
movzx
adc
pop
and
add
cmp
lea
mov
adc
je
test
in
loop
mov
cmp
and
push
out
lea
push
push
inc
xlat
cmp
push
call
dec
mov
or
(bad)
in
add
sbb
das
inc
(bad)
ret
sar
(bad)
fst
mov
mov
call
mov
and
jmp
sbb
fild
dec
outs
ret
xor
and
je
push
push
aas
inc
dec
call
cli
sti
repz
and
inc
sub
mov
sub
lea
mov
out
ja
call
cmp
je
test
je
cmp
dec
add
push
movzx
push
call
mov
movzx
fild
mov
mov
imul
mov
jnp
(bad)
shr
and
add
out
(bad)
out
add
inc
and
mov
mov
xchg
adc
mov
outs
adc
test
lock
(bad)
(bad)
fucomp
loopne
sub
mov
xchg
inc
cmp
je
mov
test
je
lea
ret
push
push
test
cmp
cmp
pop
sub
mov
jg
inc
jg
sub
dec
je
fwait
adc
cmp
xchg
mov
sbb
std
out
cmp
push
add
mov
mov
arpl
scas
(bad)
mov
add
int3
pop
adc
outs
(bad)
add
(bad)
jo
rol
jno
adc
xchg
dec
mov
mov
add
add
mov
mov
cmp
je
bound
cmps
cmp
sti
pop
jl
scas
ror
int
dec
add
push
mov
lock
push
cmp
je
mov
cmp
lea
push
mov
mov
jmp
jle
out
(bad)
and
mov
mov
or
or
add
push
or
icebp
out
or
jmp
out
sub
jl
adc
icebp
cmp
je
call
aas
inc
cmps
jle
pop
dec
and
add
ja
inc
imul
inc
or
inc
loope
pop
add
jno
mov
(bad)
ficomp
xchg
adc
rcl
pop
adc
lea
pop
jmp
and
push
mov
xor
cmp
mov
cmp
sbb
mov
shl
push
call
rcr
adc
cmp
mov
and
scas
call
jge
or
push
adc
sahf
cmp
rol
mov
sahf
mov
data16
pop
pop
pop
and
sar
je
cmp
mov
push
adc
jno
jg
movsx
mov
cmp
jle
std
out
(bad)
aas
mov
sub
jns
xor
lea
add
mov
push
cmp
jle
mov
(bad)
mov
mov
adc
fbstp
pop
mov
cmp
mov
mov
pop
rol
loop
sub
push
mov
xor
pop
add
test
mov
sub
jmp
mov
cmp
jle
mov
jge
push
test
je
mov
jmp
cmp
es
add
pop
add
inc
pop
push
lock
mov
add
test
mov
mov
mov
xor
mov
mov
inc
jmp
jo
call
cs
sbb
pop
add
loop
or
ja
inc
dec
hlt
fist
(bad)
or
pop
stos
dec
xor
(bad)
call
(bad)
fild
mov
push
mov
shr
and
lea
push
call
xchg
mov
pop
pop
jns
mov
inc
add
jo
xchg
jne
jne
inc
hlt
cmps
mov
ja
(bad)
fs
jno
push
add
pop
add
mov
addr16
push
and
pop
sub
sub
jle
jecxz
inc
adc
mov
cs
imul
mov
outs
cwde
xchg
test
repz
imul
dec
or
sar
push
jmp
add
shl
pop
imul
inc
inc
call
push
xor
mov
add
dec
push
mov
mov
add
add
sub
je
push
mov
std
ja
out
ror
(bad)
mov
inc
dec
pop
jne
pop
cmp
push
test
mov
shl
inc
mov
sbb
mov
inc
push
call
xlat
fistp
inc
pop
inc
dec
pop
jne
cmp
icebp
and
push
xchg
add
je
and
adc
clc
dec
dec
je
mov
push
movzx
mov
mov
add
jg
mov
test
inc
std
mov
pop
rol
jne
pop
out
sbb
mov
nop
sbb
aaa
add
lea
jne
(bad)
aaa
mov
out
(bad)
lock
push
call
rcr
add
jmp
push
sbb
xor
ja
adc
mov
or
out
inc
sub
add
(bad)
cld
inc
je
mov
push
(bad)
mov
add
lea
dec
add
sub
mov
mov
inc
adc
mov
dec
std
inc
cli
xor
mov
in
add
shr
and
and
or
test
(bad)
call
cld
and
shl
or
mov
mov
inc
dec
jne
pop
pop
pop
push
aas
inc
jl
push
inc
push
push
mov
sbb
pop
add
lea
mov
jge
adc
jmp
call
jns
movzx
and
movzx
add
add
sar
cmp
cmp
sar
fwait
jg
out
mov
movzx
sbb
xchg
js
mov
mov
jge
inc
mov
dec
add
inc
cmp
jl
pop
mov
in
ins
out
sub
jl
or
or
(bad)
outs
das
push
mov
add
add
lea
push
push
mov
mov
push
call
adc
jnp
or
stc
push
mov
add
sub
adc
push
sub
je
mov
mov
dec
or
(bad)
dec
not
and
shl
or
dec
mov
jns
push
pop
inc
mov
fcom
cmp
xor
mov
add
imul
clc
test
jne
mov
les
inc
add
jmp
pop
and
sub
shl
sub
xor
pop
or
sbb
loop
outs
(bad)
fst
jecxz
push
or
sub
mov
push
pop
inc
inc
jnp
xchg
cmp
add
popa
int
xor
stc
adc
pop
movs
jecxz
add
sahf
and
retf
not
neg
data16
inc
nop
and
xor
rcl
jg
icebp
dec
cmp
nop
push
and
dec
adc
adc
scas
inc
fs
inc
mov
mov
pop
add
or
adc
mov
add
add
sar
cmp
add
out
add
or
adc
sbb
(bad)
movzx
adc
cdq
mov
inc
inc
shl
push
jmp
inc
fwait
mov
call
or
mov
inc
xchg
xchg
lahf
push
and
jbe
(bad)
out
cmps
arpl
lea
jge
fadd
dec
adc
add
push
sub
cli
push
xor
mov
add
cmp
jae
and
js
mov
and
inc
add
add
mov
add
sbb
push
add
loopne
jmp
mov
mov
cmp
add
pfcmpge
(bad)
fcomi
ret
mov
sub
out
or
inc
adc
ret
outs
sbb
call
inc
dec
pop
cwde
bound
sub
fldenv
sbb
sar
mov
mov
mov
mov
mov
mov
mov
and
out
sub
and
sbb
loopne
xor
arpl
sbb
inc
add
jae
pop
add
gs
sbb
inc
aas
mov
and
fcmovu
adc
cmp
or
aaa
jno
aad
push
clc
jno
dec
in
test
(bad)
dec
push
imul
add
mov
mov
mov
test
mov
je
cli
aaa
icebp
je
pop
cld
fidivr
mov
sar
xchg
mov
(bad)
mov
clc
mov
mov
pop
adc
movzx
inc
add
mov
movzx
jmp
jmp
add
cdq
mov
movs
mov
or
sti
sbb
push
and
and
push
lock
dec
jae
xchg
(bad)
jmp
cmps
mov
mov
mov
mov
mov
(bad)
std
lahf
in
mov
fwait
dec
adc
push
cld
je
mov
xchg
scas
push
lock
stc
ja
in
sar
or
mov
mov
movzx
mov
adc
mov
loope
or
cmps
or
rcr
cli
sbb
sahf
xor
adc
dec
fimul
mov
or
mov
cld
add
or
mov
mov
mov
mov
add
inc
movs
mov
aaa
push
cld
jne
test
pop
xchg
and
xchg
cld
pop
addr16
push
push
mov
jne
gs
call
js
pop
xor
push
or
js
mov
ret
pop
xchg
add
in
outs
mov
mov
and
sti
mov
or
jmp
not
shl
or
shl
or
sbb
add
mov
jne
addr16
cli
mov
mov
and
clc
xchg
lock
sub
push
inc
xchg
sbb
fistp
adc
scas
dec
clc
add
jle
or
mov
(bad)
aaa
push
aam
lock
dec
hlt
mov
and
mov
cld
jg
div
jmp
or
shl
or
aad
daa
xor
test
jne
ja
xor
sar
cmps
inc
enter
dec
icebp
cmp
jge
or
and
push
rcl
adc
or
adc
out
inc
and
test
mov
or
sahf
lock
ror
loop
adc
inc
jb
test
add
sub
and
mov
pop
(bad)
adc
jne
stos
adc
cmp
adc
and
rcr
shr
movzx
shl
push
add
or
add
adc
push
add
jmp
or
mov
or
mov
xor
dec
arpl
(bad)
out
mov
pop
scas
push
clc
add
mov
sar
adc
xchg
imul
in
mov
imul
ja
mov
jge
mov
pop
add
add
lock
mov
push
and
pop
mov
adc
cdq
sti
aaa
mov
mov
pop
mov
test
mov
adc
lock
stos
(bad)
scas
(bad)
stos
in
mov
mov
add
mov
add
hlt
mov
jmp
mov
and
cmp
enter
ja
out
and
and
add
mov
movzx
ins
mov
pop
cld
loopne
dec
in
sbb
mov
and
or
mov
lea
sar
or
sbb
mov
inc
cmps
fstp
push
inc
push
in
dec
call
rcl
or
in
jb
and
mov
data16
jge
xor
in
add
cmps
jne
out
mov
mov
ds
mov
xchg
mov
and
mov
mov
repz
iret
shl
inc
repnz
fidiv
push
clc
mov
add
dec
mov
ret
in
nop
test
outs
mov
mov
cli
sar
adc
jns
push
xchg
ins
movsx
adc
mov
mov
jmp
rcl
inc
ret
ror
dec
aas
jmp
cmp
jne
inc
lea
push
in
dec
(bad)
sti
mov
out
ret
mov
mov
inc
inc
inc
inc
dec
jne
mov
mov
sbb
adc
sbb
mov
cmp
call
inc
inc
dec
jne
mov
jmp
adc
inc
aad
je
or
fs
sub
test
mov
sub
or
inc
cld
add
mov
cdq
xor
into
mov
pop
(bad)
gs
jne
in
mov
movsx
in
addr16
xor
test
je
addr16
fist
adc
mov
inc
mov
and
loop
or
(bad)
ret
mov
jmp
lahf
ins
adc
ja
call
add
mov
je
cmc
mov
cld
or
scas
dec
cld
add
lock
(bad)
fdivr
movzx
mov
and
aas
or
adc
dec
clc
dec
leave
jne
mov
mov
inc
ja
shl
jo
and
sbb
ret
mov
inc
call
add
pop
mov
add
outs
jmp
pop
mov
mov
sbb
dec
scas
jo
(bad)
(bad)
ja
enter
push
call
add
push
or
push
mov
and
push
add
popf
dec
mov
hlt
sti
pop
jne
or
mov
add
mov
iret
aas
push
das
or
jo
pop
clc
or
out
dec
adc
pop
movzx
jg
mov
repz
ds
mov
or
push
aam
movzx
add
arpl
dec
adc
cmp
shr
icebp
das
call
stc
cli
cmovne
stc
jg
cmps
or
or
add
mov
es
mov
lock
or
mov
xor
and
xchg
popa
lock
jae
jmp
add
mov
xchg
add
xchg
loopne
out
icebp
pushf
jne
mov
mov
mov
shl
xchg
jns
ret
inc
or
sbb
inc
lock
inc
pop
and
add
or
dec
add
aaa
mov
mov
adc
ror
add
cmp
fnstenv
mov
adc
push
cmc
cmps
nop
test
(bad)
(bad)
out
push
mov
mov
shr
mov
shr
and
and
inc
(bad)
push
bound
sti
and
or
add
mov
inc
inc
dec
jne
jmp
and
je
mov
mov
mov
repnz
mov
and
push
or
or
shr
or
mov
mov
xlat
jmp
adc
jns
or
mov
pop
add
mov
mov
mov
hlt
jmp
lds
cld
je
aam
jecxz
(bad)
(bad)
enter
test
fdivr
push
retf
adc
shr
loope
inc
add
mov
retf
and
mov
mov
cmp
shl
or
test
pop
dec
mov
add
pop
dec
cmps
sahf
dec
rol
(bad)
add
rol
imul
pop
inc
jno
fwait
adc
lea
pop
setnp
outs
sbb
adc
sar
add
aaa
cmp
(bad)
pop
and
jo
xor
pop
jns
adc
inc
jb
cmp
jmp
loopne
pop
xor
add
jns
inc
jmp
adc
je
test
adc
fld
scas
jg
inc
or
jae
cmp
mov
adc
add
gs
xchg
scas
dec
adc
iret
mov
and
or
push
dec
std
inc
into
mov
mov
mov
mov
in
xor
fmul
outs
push
movq
movq
pxor
mov
push
jmp
jo
or
dec
movd
mov
mov
mov
add
aam
add
jmp
loope
or
stos
or
sbb
jne
emms
jmp
bound
push
or
inc
inc
into
outs
mov
pop
and
stc
or
or
test
addr16
mov
pusha
mov
fadd
inc
enter
cmp
or
imul
lea
mov
mov
jb
fcom
jb
mov
push
test
lea
je
sub
out
add
add
outs
jmp
ror
scas
inc
adc
(bad)
push
add
mov
adc
jp
mov
cmps
xor
or
push
lds
pop
add
add
jne
pop
jmp
add
test
cli
add
cli
dec
adc
and
mov
mov
movs
out
push
pusha
jo
adc
lock
test
inc
loop
or
and
nop
lock
mov
iret
or
mov
test
es
adc
nop
rol
jl
call
mov
mov
inc
mov
fidivr
retf
cdq
ror
adc
jg
mov
push
in
push
call
cld
mov
jmp
imul
lea
mov
pop
mov
pop
aad
mov
add
cmp
push
push
call
ja
repnz
je
push
pop
pop
push
push
call
xchg
test
je
ffree
and
mov
hlt
xor
sub
cmp
mov
and
(bad)
mov
push
jmp
mov
ret
mov
(bad)
call
sub
mov
lods
jno
add
sub
and
cld
add
add
lock
mov
hlt
jne
dec
push
mov
sub
and
std
jle
inc
cdq
mov
jl
ret
fistp
scas
retf
mov
mov
cmp
xlat
pop
push
push
jne
sbb
mov
push
and
cmp
and
fisub
cmp
out
mov
call
sbb
pop
cmp
sbb
adc
out
cld
mov
aas
cmp
(bad)
movsx
je
inc
add
clc
cmps
loope
inc
clc
cli
mov
(bad)
pop
cmp
adc
jne
and
ficom
mov
push
sbb
sub
add
ds
xor
pusha
test
add
fld
cmp
mov
mov
xchg
add
adc
sub
sbb
add
gs
or
or
jl
inc
jle
in
loopne
ins
mov
lea
jo
hlt
mov
sub
xor
arpl
mov
jne
ja
dec
add
dec
in
jl
js
mov
lods
dec
and
inc
adc
lods
cli
jo
adc
mov
add
rcr
mov
dec
push
mov
and
mov
adc
sbb
adc
inc
ss
sar
jmp
call
pushf
jbe
adc
imul
or
hlt
pop
mov
mov
mov
mov
mov
(bad)
out
xor
adc
mov
repnz
and
add
add
shr
cmp
and
ja
(bad)
dec
xor
mov
mov
mov
mov
mov
mov
add
inc
dec
jne
nop
stos
sbb
push
ror
dec
add
jge
mov
enter
test
mov
mov
bnd
iret
hlt
dec
and
adc
xor
cmc
push
mov
mov
loopne
mov
push
add
xchg
inc
inc
aaa
xor
mov
mov
call
cs
adc
add
adc
and
inc
mov
call
mov
inc
ins
mov
shl
shr
or
inc
mov
rcr
mov
loopne
sar
or
rcl
add
add
ret
shl
or
and
shr
cmc
cmp
movzx
jmp
out
leave
ins
push
(bad)
cmps
pop
add
lahf
add
ins
(bad)
push
push
mov
fmul
fmul
call
jge
aad
scas
or
pop
inc
hlt
movs
je
dec
mov
jge
push
movzx
shr
movzx
shr
lea
mov
mov
and
add
xchg
cmp
ror
mov
sbb
(bad)
pop
ja
outs
push
lea
inc
cmp
mov
jl
sub
mov
rcr
(bad)
jg
add
add
mov
movzx
mov
push
dec
mov
mov
movzx
movzx
movzx
shl
or
movzx
shr
shl
div
ror
fisttp
scas
dec
aaa
push
adc
loop
or
sbb
(bad)
(bad)
jg
shl
shr
or
mov
imul
add
mov
dec
cmp
jge
mov
jmp
xor
(bad)
(bad)
call
inc
sub
imul
mov
add
movzx
movzx
mov
mov
mov
std
ja
mov
adc
shl
or
icebp
popf
mov
or
bound
or
push
loopne
push
push
xlat
and
mov
fmul
fwait
jmp
stc
add
push
call
mov
add
outs
loopne
inc
fsub
or
mov
add
dec
mov
jecxz
pop
cmp
pop
pop
adc
sub
or
or
xor
dec
clc
test
xchg
(bad)
out
fisttp
loopne
dec
or
mov
mov
shl
sbb
push
sub
mov
(bad)
push
enter
or
or
mov
mov
mov
shl
lea
xor
stc
mov
cld
(bad)
jg
dec
(bad)
cmp
mov
jge
xor
inc
jmp
sub
pop
hlt
add
sti
mov
inc
lea
dec
mov
xor
dec
std
into
jno
test
fild
jg
push
call
mov
fmul
adc
mov
jmp
dec
sub
sbb
mov
aas
add
cmovbe
test
std
out
dec
xor
movzx
push
pop
idiv
rcr
mov
add
add
push
call
mov
loopne
sub
and
adc
pop
jmp
loopne
mov
mov
cwde
inc
mov
inc
lods
inc
cmp
sti
cmps
or
xor
in
pop
push
inc
(bad)
(bad)
push
call
call
test
cmp
aaa
loopne
sbb
add
inc
call
scas
inc
int3
or
out
or
ss
repnz
xor
adc
call
push
sub
dec
xchg
push
hlt
inc
nop
sub
dec
push
sar
out
retf
inc
hlt
jl
pushf
adc
lea
call
call
imul
mov
pop
arpl
clc
sar
ret
or
dec
cmp
sub
or
adc
pop
adc
or
add
sub
jnp
pop
add
dec
pop
pop
jne
inc
mov
call
ss
inc
jae
fimul
cdq
cmp
pop
aas
jo
icebp
pop
je
xchg
lea
xchg
push
cld
push
jle
loopne
inc
mov
cmp
call
inc
adc
mov
jmp
arpl
repnz
mov
add
push
add
add
cwde
mov
push
or
mov
mov
cmps
mov
xchg
push
push
push
inc
ret
sub
cmp
sbb
adc
xchg
pop
adc
enter
cmp
outs
xor
cmp
pop
(bad)
cmp
xchg
mov
jge
(bad)
adc
cmps
mov
jmp
xor
inc
sub
mov
fist
push
add
lea
push
movzx
(bad)
dec
push
call
mov
inc
fmul
scas
jge
mov
int3
mov
lds
pop
inc
lock
push
add
int3
add
mov
add
add
add
or
in
or
and
popa
sbb
mov
neg
and
ins
data16
add
call
or
sub
mov
stc
mov
dec
mov
lock
shr
and
shr
and
retf
xlat
(bad)
mov
adc
cld
add
push
adc
test
pop
xchg
aam
add
movs
inc
cmp
sub
inc
dec
jo
sub
es
cli
movs
out
or
lock
dec
add
mov
sub
shl
iret
mov
and
add
mov
sub
dec
push
mov
or
add
clc
movzx
mov
lea
push
mov
imul
jne
push
call
pusha
ret
adc
jnp
imul
stc
arpl
es
sbb
fwait
inc
xchg
cmp
es
mov
je
or
and
icebp
mov
or
adc
mov
xchg
out
add
lock
and
cmp
invd
xchg
xor
or
xchg
jmp
push
jno
std
adc
aaa
call
or
inc
lock
mov
push
push
sbb
xchg
(bad)
movs
call
or
xlat
inc
and
xchg
or
in
inc
pusha
fdivr
(bad)
sbb
loopne
ins
lea
inc
(bad)
(bad)
and
int3
in
jne
inc
int3
mov
jnp
push
inc
inc
mov
imul
add
inc
dec
ret
and
test
clc
xchg
xor
add
mov
push
ja
or
movzx
mov
adc
add
sbb
clc
adc
retf
add
xchg
jmp
fadd
arpl
(bad)
mov
cmp
test
popa
xor
(bad)
loopne
xor
(bad)
jge
jmp
loopne
xor
loope
or
fwait
mov
mov
xchg
xor
fs
cwde
xor
aam
fist
data16
mov
lods
pusha
aas
and
add
pop
in
add
add
add
cld
data16
cmp
push
cmp
cli
push
mov
or
push
adc
vmread
scas
ret
add
clc
aas
daa
loopne
call
sar
cmp
jne
lea
pop
pop
sbb
xor
add
pavgb
xchg
jmp
jmp
fcomp
mov
push
call
cmp
pop
push
mov
mov
jmp
mov
or
inc
test
or
in
and
iret
jne
fwait
inc
pop
push
fild
lds
cmp
add
and
call
add
test
outs
and
loope
clc
sbb
mov
xlat
mov
lea
call
(bad)
push
jne
sbb
cmp
stos
dec
xor
mov
pop
sub
test
clc
pxor
retf
mov
movd
movd
movd
movs
pusha
iret
movq
(bad)
lock
pusha
xlat
addr16
fisttp
mov
mov
dec
jne
mov
je
lea
pusha
(bad)
cmp
cld
ja
add
add
sub
jno
sbb
mov
lock
retf
stos
or
rol
ret
ror
xchg
std
jmp
or
xchg
out
and
xchg
pushf
(bad)
cdq
mov
pop
lods
and
ds
add
ds
movs
out
ja
lods
mov
fisttp
push
add
jnp
or
in
fdiv
hlt
out
mov
mov
imul
add
popf
jmp
cmp
mov
mov
xchg
aam
pop
in
inc
add
jne
jl
rcl
setl
mov
adc
stos
daa
sbb
adc
dec
dec
loope
push
loopne
movs
icebp
mov
dec
pop
dec
cmc
cmps
xor
imul
enter
or
imul
add
mov
xchg
sbb
mov
add
push
jne
test
cmps
lea
xchg
add
test
push
adc
call
xor
cmp
cld
dec
xchg
sti
into
and
push
call
dec
std
fstp
sub
add
pop
pop
jne
mov
mov
add
shl
mov
mov
dec
hlt
dec
je
daa
inc
aad
fcomp
cmp
xor
call
idiv
shr
mov
hlt
popa
push
mov
add
adc
loopne
push
lods
out
mov
sub
jo
mov
mov
push
jl
dec
jge
push
mov
sbb
lea
push
mov
mov
call
mov
lea
mov
lea
push
push
call
scas
or
cld
inc
cmp
jl
mov
cmp
jle
and
dec
or
mov
jl
cmp
jge
cmp
add
jmp
cmp
out
jmp
lea
push
push
push
call
loop
pop
add
adc
leave
ret
leave
push
call
dec
adc
mov
mov
fucomp
mov
inc
sbb
rol
adc
ror
mov
(bad)
(bad)
call
mov
add
mov
inc
add
cmp
jl
push
mov
call
adc
push
mov
mov
mov
add
out
add
ins
sbb
pop
pop
je
push
(bad)
inc
push
push
push
call
jmp
xor
mov
jmp
mov
push
sar
cmp
xor
cmp
jle
jns
(bad)
call
inc
cmp
lds
dec
adc
push
call
inc
adc
ins
cmp
(bad)
(bad)
inc
or
fstp
jbe
call
sbb
dec
adc
push
out
std
xor
outs
sbb
in
or
xor
loop
sbb
jge
outs
dec
pop
pop
int3
or
(bad)
clc
(bad)
jmp
je
emms
cmp
mov
jne
cmp
mov
push
push
mov
call
push
sub
(bad)
ret
stos
lock
sbb
adc
inc
pop
or
cmp
ret
add
pop
mov
add
fwait
clc
jle
mov
aas
cmp
je
dec
jle
daa
cmp
pop
jp
mov
jge
cmp
jge
call
jle
cmp
jge
mov
lea
mov
movsx
cmp
jge
icebp
(bad)
sti
or
ror
in
jmp
mov
cmp
mov
into
jge
adc
shl
mov
jmp
(bad)
(bad)
(bad)
jg
push
sub
inc
xor
sar
loopne
push
call
mov
shl
push
fisttp
clc
push
call
data16
mov
or
jmp
cmp
jne
mov
mov
test
out
and
pop
add
pop
fidiv
push
push
pop
adc
jl
inc
or
shl
(bad)
pop
adc
je
mov
mov
mov
(bad)
movzx
mov
shl
or
xchg
add
inc
(bad)
jmp
cld
cmp
mov
jmp
pop
push
fdivr
test
movs
inc
enter
mov
cmp
into
std
(bad)
or
push
jne
mov
pop
push
dec
push
push
mov
lahf
cld
mov
adc
add
ds
mov
gs
ret
adc
cmp
push
push
je
and
mov
add
or
mov
xlat
ins
cmp
mov
lock
mov
push
push
push
call
adc
xor
fist
sbb
es
mov
adc
jns
push
call
add
cmp
mov
xchg
aaa
std
adc
jnp
jle
dec
push
adc
jae
add
inc
or
push
mov
xchg
out
(bad)
push
adc
mov
mov
pop
inc
adc
jnp
xor
ficom
inc
inc
and
sub
scas
(bad)
mov
xchg
shl
push
push
add
stc
dec
sti
(bad)
(bad)
(bad)
jl
jmp
test
mov
jge
mov
cmp
jl
lea
mov
imul
push
call
push
test
in
adc
jmp
es
jge
and
push
call
std
or
arpl
xor
jnp
mov
mov
(bad)
push
cli
imul
add
push
pop
rep
inc
mov
mov
mov
mov
lea
push
push
adc
mov
sbb
pop
sub
dec
or
push
sbb
jmp
or
or
aad
in
cmp
mov
mov
movs
loop
or
mov
sub
loopne
mov
push
dec
push
lea
push
call
mov
mov
jg
dec
mov
mov
mov
mov
add
and
mov
mov
inc
lock
mov
mov
add
sbb
je
dec
call
inc
in
inc
call
jg
outs
in
test
mov
je
retf
in
inc
sub
test
je
dec
mov
pusha
enter
hlt
add
add
jge
call
sar
leave
jle
mov
dec
cmp
jge
mov
jmp
cmp
jl
dec
cmp
jge
test
je
or
inc
call
mov
lea
std
push
fist
loopne
call
push
sbb
adc
mov
mov
cmp
mov
push
call
pop
hlt
outs
ret
push
dec
adc
inc
icebp
adc
repz
ja
sub
inc
adc
pop
sar
xor
es
mov
daa
or
add
mov
fnstcw
jge
aam
sbb
push
push
and
test
add
or
in
push
call
mov
dec
sub
jns
aam
call
xchg
mov
sub
jmp
test
je
dec
(bad)
jg
loope
dec
call
leave
jl
cmp
jge
cmp
sar
jl
les
push
adc
call
les
mov
xor
xchg
adc
test
or
test
sahf
out
add
xor
push
or
mov
sti
lds
lea
test
loope
sub
inc
or
pushf
add
ret
and
jge
popa
jbe
dec
xchg
daa
jmp
ja
(bad)
inc
pop
loopne
adc
ret
cdq
idiv
test
jge
dec
jne
sub
sbb
out
loop
inc
(bad)
pop
clc
jl
adc
into
fmul
push
fcomp
ret
(bad)
mov
jge
mov
sub
jmp
mov
jmp
sub
clc
cmp
jge
cmp
jg
(bad)
add
clc
lock
and
inc
and
call
idiv
jmp
jge
idiv
sub
fild
test
xchg
jle
cmp
(bad)
jl
jnp
cmp
xor
add
jns
push
sub
dec
mov
hlt
neg
cmp
jle
mov
jae
cld
cmp
cmp
xchg
cld
cld
fsubr
loopne
popf
sti
pushf
mov
jae
add
add
jae
aam
xor
lock
jae
(bad)
jle
mov
int3
ja
and
mov
push
push
pop
mov
add
rcr
adc
push
push
paddw
add
lea
mov
inc
inc
jp
add
adc
mov
add
pop
or
test
xchg
pop
push
fcomp
cmp
jns
clc
inc
xchg
xchg
push
add
std
dec
or
inc
fild
mov
arpl
jns
pop
xor
mov
and
cmp
jne
push
xor
mov
adc
sub
add
jmp
and
call
cmp
dec
jmp
push
iret
sub
xchg
call
mov
shl
test
sti
arpl
fcomp
sti
jl
sti
test
sbb
pop
jl
or
retf
rcr
out
test
fisttp
inc
clc
push
(bad)
pusha
push
mov
call
aas
test
sbb
mov
test
or
rol
lock
call
mov
loope
out
enter
mov
mov
das
jg
test
add
cmps
je
or
je
inc
cmp
push
fcom
adc
or
sbb
cs
sub
ret
test
je
clc
and
std
xor
and
int
sub
mov
loopne
push
ins
std
or
sub
inc
cmp
jmp
mov
fcomi
(bad)
loope
mov
imul
mov
popf
mov
fild
movsx
jno
fmul
push
fild
push
fmul
hlt
pop
sbb
fstp
fsubr
fdivrp
(bad)
mov
and
loop
rcl
fst
sbb
(bad)
fisub
clc
out
rcr
or
rcr
and
add
ficom
pop
add
inc
lock
pop
fmul
aaa
push
nop
mov
mov
aaa
cld
pop
cmp
jne
imul
call
clc
push
jmp
mov
sar
add
sbb
ss
loope
cmps
mov
pop
pop
xor
test
pop
test
mov
sbb
xor
mov
inc
jne
rol
dec
cmp
lea
mov
lea
push
push
ds
jo
jae
lock
cmp
sar
leave
lock
cmps
pop
jp
or
lahf
add
inc
inc
hlt
mov
jnp
jmp
add
xor
inc
add
dec
push
or
sbb
add
sub
add
data16
clc
sbb
jne
pop
out
fwait
or
xor
out
adc
fcomp
push
and
jb
pop
in
stos
out
adc
inc
call
xor
sahf
fld
jmp
cld
fild
fmul
and
fsub
in
adc
loop
sbb
or
push
mov
adc
dec
push
ins
or
push
push
(bad)
jmp
push
fld
push
std
jmp
rcr
(bad)
inc
enter
push
loopne
leave
fmul
(bad)
ja
out
fstp
push
pop
rcl
fdiv
xor
mov
fld
and
fmul
faddp
fmul
adc
fisttp
loopne
dec
loopne
adc
inc
lock
aas
in
fsub
fstp
sbb
int3
fld
push
sbb
inc
lods
faddp
fld
and
pusha
fnsave
ins
inc
enter
mov
fnstsw
pop
pop
call
pop
add
pop
jg
add
test
jne
fld
clc
inc
call
inc
mov
clc
inc
call
sub
adc
scas
jmp
stos
adc
ds
push
pop
xchg
jmp
(bad)
fistp
inc
js
or
xor
in
addr16
(bad)
call
mov
dec
cld
ja
outs
push
fld
fadd
fucom
or
fstp
pop
pop
jne
pop
push
dec
adc
sti
sub
adc
jmp
push
push
jl
xor
xchg
cwde
in
adc
inc
aas
cmp
and
sar
ja
mov
mov
(bad)
call
sar
loopne
or
cmp
pop
mov
jno
inc
popa
add
sbb
sar
fwait
mov
imul
(bad)
aam
adc
mov
add
mov
sar
imul
push
cmp
cmp
mov
jle
aas
idiv
(bad)
jl
dec
jno
movzx
cmp
jae
dec
dec
dec
jmp
add
push
jbe
cmp
jge
outs
jo
add
jecxz
das
lea
mov
cwde
mov
xchg
jge
addr16
add
cmps
call
pop
pop
jne
pop
pop
jne
jae
(bad)
pop
mov
in
jmp
pop
call
lock
push
jge
pop
mov
sti
inc
and
cmp
inc
pop
and
mov
dec
mov
dec
std
sti
mov
or
push
call
mov
pop
push
ja
dec
call
cmp
cwde
cli
add
movzx
cmp
fbstp
cdq
sub
jmp
pop
loop
sti
test
or
sub
pop
add
mov
or
adc
push
mov
call
adc
xchg
mov
inc
mov
inc
(bad)
mov
dec
mov
sahf
fwait
xchg
ss
push
call
popf
cmp
jae
mov
and
or
adc
adc
inc
inc
scas
adc
jae
ds
mov
pop
or
mov
sbb
cld
and
aas
jmp
dec
cld
xchg
pusha
adc
add
fs
add
mov
cmps
faddp
push
or
imul
pop
lea
add
sub
aas
sbb
push
or
add
scas
ds
test
adc
repnz
mov
shr
je
inc
mov
adc
call
jg
aad
sbb
push
call
jecxz
icebp
lock
pop
add
dec
jne
jmp
mov
add
lock
cmp
and
out
(bad)
jmp
nop
std
xchg
enter
ret
(bad)
test
add
add
and
push
mov
or
inc
add
emms
pop
imul
cdq
add
ja
cmp
(bad)
push
rol
inc
add
cmp
jne
cmp
jne
mov
xchg
js
add
inc
and
mov
cmp
mov
adc
jmp
inc
(bad)
mov
add
inc
js
ret
add
dec
cmp
iret
std
fnstsw
sbb
jl
mov
dec
adc
adc
xchg
je
push
call
mov
adc
cmc
das
ret
push
call
jbe
mov
mov
add
sbb
push
add
push
and
mov
lahf
les
cmp
pop
xchg
inc
test
sub
outs
and
push
call
jmp
sbb
mov
pop
lea
jne
(bad)
mov
or
enter
not
and
dec
or
shl
pop
or
stc
in
inc
mov
jmp
test
je
mov
ret
ret
(bad)
mov
je
xor
stos
inc
fdiv
add
mov
adc
not
dec
rol
add
pop
pop
xlat
or
add
pop
jmp
ja
add
add
cmp
jge
mov
mov
push
and
sbb
and
sar
push
push
loop
inc
xor
dec
js
(bad)
and
shl
push
sbb
add
jnp
sbb
mul
inc
cmp
pop
push
sar
fiadd
sar
call
jnp
cmp
pop
shl
pop
add
sar
pop
pop
das
test
shl
add
sar
call
inc
and
inc
inc
push
mov
sub
pop
push
mov
(bad)
mov
(bad)
aas
cld
scas
sar
test
mov
mov
lea
je
data16
idiv
dec
sar
je
mov
rep
test
je
mov
pop
(bad)
jbe
jne
iret
jb
je
or
cmp
sub
add
es
lea
add
xor
push
mov
mov
mov
mov
mov
mov
add
dec
adc
shl
outs
push
or
fwait
mov
sub
add
push
(bad)
pop
sbb
js
lds
cmp
mov
mov
mov
cli
fwait
cli
sbb
or
push
or
pop
sar
mov
aaa
push
adc
(bad)
rcl
jg
movq
add
fcmovu
shr
jmp
fcmovbe
test
mov
out
jg
out
loopne
rep
jmp
ror
add
or
add
inc
adc
inc
push
add
or
imul
jg
ret
hlt
or
(bad)
push
sar
cmp
add
cmp
test
add
test
test
xchg
je
mov
jg
test
mov
movsx
push
fld
inc
add
dec
push
call
pop
mov
mov
pop
or
or
add
mov
jns
adc
pop
or
push
call
scas
das
add
adc
(bad)
jg
xor
dec
add
or
cdq
jmp
test
pushf
sub
fdiv
in
movs
ins
ins
retf
inc
inc
jo
out
inc
out
das
jo
adc
mov
test
jo
(bad)
jg
jl
cmp
je
mov
cmp
lea
jbe
mov
movzx
std
ret
fdivr
and
push
mov
mov
mov
add
xchg
scas
cmp
fld
inc
add
clc
mov
adc
add
imul
out
popa
hlt
mov
sub
push
test
push
mov
mov
cli
xor
push
idiv
mov
add
adc
pop
or
add
fwait
or
je
mov
push
lock
mov
push
push
push
adc
or
ret
and
mov
cmp
push
mov
sbb
aas
add
push
pop
rep
jmp
inc
add
lock
adc
add
dec
or
movsx
sar
mov
dec
or
or
dec
cmp
xor
or
fstp
adc
or
pop
jmp
aas
or
adc
and
cdq
pop
adc
imul
cmc
push
lods
pop
out
or
fcom
(bad)
push
ja
add
inc
push
jg
arpl
push
call
add
push
call
arpl
arpl
sbb
cld
gs
sbb
inc
or
std
gs
push
push
pop
mov
shr
out
or
cld
pop
adc
loopne
pusha
mov
mul
mov
mov
out
or
or
adc
fisub
push
add
dec
or
rcr
xor
push
jne
or
jne
or
int
jae
jne
or
jne
push
push
jne
push
cld
fbstp
adc
mov
cmp
jno
test
mov
loopne
inc
jbe
add
mov
xchg
and
sbb
push
(bad)
(bad)
cmp
push
push
fdivr
push
fst
fstp
call
xchg
adc
lea
push
push
push
call
sub
out
sub
arpl
fmul
and
adc
or
jmp
and
jb
js
pop
data16
dec
sbb
addr16
sbb
jno
outs
pop
cmp
adc
inc
imul
mov
mov
adc
push
add
push
sub
push
or
or
add
dec
dec
jne
xor
mov
add
js
add
or
jmp
adc
cmp
js
int3
rcl
sar
movs
mov
pop
mov
sbb
xor
mov
or
and
add
mov
and
icebp
push
in
xor
call
mov
icebp
mov
push
mov
cmp
jge
mov
imul
or
push
mov
(bad)
jmp
inc
mov
dec
or
add
test
mov
jne
mov
and
test
call
adc
push
cmp
test
ret
jmp
xor
mov
jb
sub
cmp
inc
or
push
(bad)
dec
mov
icebp
xor
cmp
jbe
fwait
sub
lods
cmp
inc
cmp
cmp
jl
sbb
frstor
sbb
ja
pop
mov
mov
call
mov
lea
loop
adc
add
adc
inc
push
xor
push
push
(bad)
cmp
hlt
mov
ins
mov
lea
inc
sub
inc
push
ins
and
mov
shl
mov
jecxz
cmp
mov
mov
mov
or
cld
mov
pop
inc
mov
mov
dec
add
rol
dec
push
sar
inc
push
mov
cmp
jle
mov
call
dec
add
jle
mov
lea
(bad)
inc
sub
add
add
mov
add
mov
add
add
add
mov
fwait
call
fs
dec
jne
dec
inc
adc
jmp
or
pop
push
dec
jl
rol
std
(bad)
call
ret
ret
jbe
mov
mov
inc
inc
inc
cmp
call
cmp
add
aas
mov
mov
sbb
and
pop
je
fucomp
(bad)
inc
or
push
mov
push
add
mov
loopne
or
psubsb
or
shl
xor
mov
jg
(bad)
inc
add
icebp
inc
cmp
fimul
push
xor
pop
xor
pop
and
push
xor
and
cmp
add
sbb
add
out
(bad)
out
add
mov
xor
cmp
je
mov
cmp
mov
ja
sar
cmp
je
jbe
cmp
ja
call
stos
(bad)
(bad)
(bad)
jmp
mov
push
cmp
je
mov
(bad)
add
sbb
add
pop
or
cmp
xchg
inc
cmp
pop
push
mov
cmp
je
call
out
mov
cmp
pop
mov
adc
mov
call
cmp
lock
add
mov
mov
je
push
sbb
sub
hlt
call
dec
sbb
js
(bad)
mov
outs
inc
push
jg
mov
cmp
mov
mov
pop
mov
mov
pop
(bad)
(bad)
in
or
push
loop
add
add
lea
mov
icebp
mov
adc
call
push
push
cmp
add
in
or
nop
mov
sahf
cwde
mov
push
lock
sbb
sbb
adc
std
clc
mov
cmp
cli
in
add
mov
push
push
mov
sahf
jbe
sahf
sahf
and
lock
mov
mov
rol
(bad)
(bad)
call
xor
inc
mov
mov
stos
mov
mov
mov
mov
and
pop
je
sahf
adc
sub
adc
(bad)
mov
adc
pop
adc
mov
lods
sahf
aaa
in
stos
sbb
mov
or
sti
jg
outs
mov
call
mov
jnp
adc
or
(bad)
mov
inc
dec
mov
mov
mov
mov
add
mov
pop
loope
mov
mov
mov
mov
or
dec
jl
adc
pop
fwait
add
sub
sbb
test
test
adc
or
loope
in
test
mov
mov
pop
inc
loop
fisttp
push
mov
inc
push
lea
push
jle
push
call
inc
sar
cmp
je
push
out
sbb
and
fcomip
(bad)
call
or
inc
push
mov
movs
movs
movs
push
mov
movs
call
pusha
sub
loopne
rol
ret
lds
add
add
aaa
loope
out
sub
xor
sbb
cmp
sete
call
jno
mov
sub
mov
mov
ja
push
ud0
inc
dec
sub
cdq
mov
enter
push
mov
push
icebp
clc
call
mov
sbb
cli
or
enter
je
mov
cmp
jl
jmp
ins
push
hlt
adc
mov
repnz
(bad)
(bad)
ds
sub
push
adc
add
addr16
mov
jmp
mov
add
cmp
add
aaa
pop
jmp
cmps
idiv
jg
add
mov
mov
jmp
mov
ss
or
pop
dec
mov
mov
mov
test
xor
ret
adc
pop
and
push
push
(bad)
(bad)
es
sub
in
jmp
and
inc
jno
xchg
mov
inc
mov
push
jb
mov
adc
sbb
jle
jnp
mov
sbb
lea
js
and
push
mov
cmp
jle
and
cmp
sbb
push
add
sub
mov
loop
and
adc
mov
in
mov
cmp
jge
mov
jno
and
lea
adc
adc
inc
les
mov
movzx
inc
or
jmp
inc
add
xchg
inc
or
call
fwait
ror
adc
sbb
cmp
jl
popa
movzx
or
(bad)
out
or
add
dec
pop
add
push
and
push
push
xlat
adc
sub
dec
and
push
adc
xchg
popa
push
adc
call
or
pop
add
mov
mov
lock
mov
cmp
push
xor
mov
call
shr
dec
sbb
(bad)
(bad)
(bad)
jge
push
call
jmp
mov
mov
push
mov
mov
push
(bad)
(bad)
adc
dec
and
xor
or
mov
mov
push
call
sub
aaa
fdivr
dec
and
add
pop
dec
mov
leave
jg
inc
inc
call
rcr
pop
ret
sbb
add
cmps
cmp
cld
mov
add
lea
movs
fmul
mov
lea
cli
add
inc
icebp
jg
or
cmp
jl
mov
mov
loopne
fbld
cmp
jne
cmp
jne
mov
inc
sbb
test
jne
pop
adc
ja
and
inc
adc
lods
pop
jne
fdivr
mov
sub
adc
add
push
into
push
call
icebp
js
or
out
add
test
jg
mov
sub
add
je
popa
call
rcl
into
xchg
aaa
mov
jne
jmp
sbb
adc
jo
pop
or
push
xchg
repz
ja
out
or
pop
adc
or
jbe
and
or
call
mov
lea
mov
jmp
jl
push
aas
pusha
frstor
push
sub
jnp
xor
pop
mov
(bad)
push
cmp
mov
jl
ds
pop
dec
fcom
mov
cld
icebp
mov
push
in
(bad)
mov
test
lea
daa
js
jecxz
push
cmp
push
je
cmp
push
push
(bad)
mov
push
jge
xchg
jmp
mov
sub
cmp
jl
cmp
jge
dec
and
iret
xor
fist
ins
jno
mov
jmp
mov
jmp
cmp
jge
cmp
mov
jg
push
(bad)
lahf
and
call
mov
mov
(bad)
(bad)
jmp
inc
fs
rol
cmp
stc
jmp
dec
jno
test
xor
sub
mov
test
je
mov
(bad)
inc
and
sbb
push
and
sbb
inc
(bad)
mov
cmp
shl
jne
test
jle
mov
ret
sbb
or
add
jmp
push
sbb
in
cmps
call
imul
mov
mov
push
mov
cmp
adc
inc
push
je
mov
mov
(bad)
jmp
cmp
(bad)
jg
(bad)
je
push
or
js
jne
cmp
je
mov
cmp
jne
push
mov
call
fs
inc
mov
adc
mov
mov
xchg
inc
adc
aaa
pop
cmp
je
push
adc
adc
sbb
mov
push
test
xor
test
mov
rol
lea
dec
(bad)
dec
sbb
daa
mov
xor
jmp
cmp
cmp
push
out
add
jg
cmp
jne
push
cld
lea
push
mov
enter
or
or
jae
inc
(bad)
push
es
cmp
call
mov
retf
retf
shl
sti
cwde
stos
and
mov
or
add
mov
xchg
std
out
mov
pop
pop
mov
mov
int
xor
mov
inc
add
or
dec
inc
inc
or
js
inc
and
inc
ds
adc
dec
jg
clc
or
xor
cmp
mov
or
inc
sub
dec
sbb
and
adc
pop
jmp
mov
jmp
sbb
or
pushf
and
push
xor
aad
and
cmp
sub
or
cmp
sar
clc
fcom
push
and
xor
ret
xor
lock
and
aas
ss
or
mov
hlt
or
pop
add
ret
jne
xor
adc
sar
xchg
dec
ret
(bad)
pop
inc
jo
dec
ds
loope
bound
dec
xchg
mov
add
clc
or
rol
xchg
mov
mov
(bad)
xor
mov
sbb
adc
xor
xchg
xor
shl
in
cmp
push
dec
dec
and
inc
rcl
adc
(bad)
xor
push
and
push
mov
sub
inc
and
inc
lds
sub
movs
leave
clc
jbe
mov
push
in
aas
jbe
jecxz
dec
and
fadd
pop
xor
imul
add
jmp
mov
lds
arpl
push
cs
pop
inc
pop
jge
mov
pop
xchg
and
adc
pushf
leave
cs
pop
cs
adc
mov
mov
mov
ret
mov
or
ror
scas
xchg
test
jmp
rol
xchg
jno
mov
dec
add
push
lea
or
jge
xor
sbb
xor
mov
push
push
call
(bad)
push
in
sbb
jne
adc
inc
push
jne
jb
sbb
inc
mov
mov
add
shl
pop
and
add
inc
push
mov
call
or
rcr
je
jnp
push
outs
xor
adc
sti
mov
mov
inc
sbb
mov
mov
fwait
cli
(bad)
std
in
mov
lea
jecxz
add
(bad)
(bad)
mov
adc
inc
push
or
push
or
lea
push
(bad)
ja
dec
mov
add
mov
add
mov
add
hlt
add
add
mov
dec
add
lea
sar
fild
jmp
lock
test
call
add
pop
add
sar
test
call
je
test
jge
pop
add
shrd
pop
in
es
(bad)
sar
rcl
jmp
shl
or
add
push
mov
mov
(bad)
(bad)
mov
mov
mov
movzx
sub
mov
sar
sar
es
(bad)
dec
add
add
movzx
mov
sub
inc
cli
add
inc
jns
add
add
cld
sub
mov
out
pop
in
ror
push
cld
add
repz
xchg
jae
ror
or
mov
jl
inc
lahf
add
push
sub
cmps
call
push
mov
mov
mov
mov
setne
xchg
(bad)
cmp
(bad)
pop
mov
xor
sub
and
mov
xor
sub
cmp
mov
int3
jg
jecxz
(bad)
jmp
mov
mov
xor
sub
mov
sar
(bad)
push
mov
mov
mov
mov
cmp
jg
cmp
jle
inc
push
cmc
inc
in
jge
pop
mov
ss
add
ret
into
fst
cmc
cmp
jg
sbb
mov
jae
out
mov
idiv
pop
mov
(bad)
pop
aam
pop
ret
ror
fucomip
sub
rcr
xor
mov
xor
sub
sub
jg
mov
push
loopne
ret
jmp
mov
int3
dec
inc
xor
sub
mov
mov
mov
jl
inc
les
mov
mov
cmp
sub
adc
(bad)
inc
mov
jmp
mov
mov
call
sar
or
std
out
(bad)
jmp
clc
movzx
mov
mov
mov
sar
and
inc
arpl
retf
dec
cli
sub
ja
(bad)
jmp
jge
mov
and
xor
mov
mov
sar
mov
outs
xor
push
fmul
inc
hlt
jg
fidivr
int3
mov
jg
pop
mov
and
mov
cmp
mov
je
cmp
adc
or
leave
ret
std
mov
push
sbb
retf
lea
mov
jl
lea
jmp
arpl
out
(bad)
and
js
and
add
retf
jge
xor
add
adc
jge
imul
mov
add
sub
(bad)
(bad)
push
je
dec
jne
lea
push
push
call
jmp
movzx
adc
mov
imul
jmp
movzx
adc
mov
adc
add
add
inc
lock
jne
mov
jmp
cmp
test
out
(bad)
jmp
hlt
cmp
jne
imul
sbb
jne
out
aaa
cld
out
and
mov
pushf
arpl
scas
enter
or
inc
call
sahf
xor
ja
in
add
dec
lock
sub
xor
sar
inc
hlt
cmp
jle
cmps
mov
ja
dec
adc
shr
xchg
inc
outs
mov
hlt
add
jne
pop
push
aas
daa
arpl
fadd
jmp
fadd
inc
in
mov
jnp
scas
push
aam
adc
call
ret
(bad)
mov
fdivr
xor
mov
mov
or
mov
inc
aam
mov
or
int3
cmp
je
ja
xchg
test
mov
mov
pop
xchg
push
leave
jmp
xchg
cmp
adc
call
inc
(bad)
jmp
dec
je
dec
jne
ja
stc
loopne
xchg
and
adc
(bad)
adc
imul
adc
pop
mov
mov
add
mov
add
add
dec
jne
inc
or
pop
(bad)
(bad)
dec
jne
mov
mov
mov
sar
push
mov
mov
mov
xor
mov
fs
mov
sub
or
call
or
clc
sub
ret
pop
mov
xor
(bad)
(bad)
inc
mov
mov
sub
test
mov
je
mov
sub
mov
xor
sar
and
push
cmc
cs
xor
jp
fdivr
mov
mov
lahf
leave
fnstenv
fisub
sti
xor
cmp
jle
call
or
or
ja
and
or
add
adc
inc
add
outs
cli
inc
sub
lea
ror
clc
out
or
shl
rol
mov
dec
mov
mov
mov
hlt
mov
sub
loopne
cli
les
ror
dec
or
outs
clc
mov
dec
call
dec
and
add
fild
pop
sbb
mov
inc
clc
cmp
je
jnp
scas
pop
push
lock
inc
cld
(bad)
fild
pop
enter
lea
push
movzx
pop
mov
(bad)
mov
and
mov
mov
lock
es
mov
es
clc
sub
mov
sub
fwait
mov
imul
imul
sar
sub
fbstp
mov
dec
mov
fild
(bad)
dec
mov
or
jmp
fild
rol
or
mov
mov
les
scas
fisttp
jge
add
mov
lods
cld
mov
xor
fld
add
add
pop
inc
dec
in
into
retf
and
mov
dec
mov
test
loopne
call
or
call
mov
cmp
xor
add
add
pusha
ret
call
sbb
sbb
jp
mov
xor
inc
sub
xor
inc
sub
outs
test
dec
jge
mov
imul
scas
mov
test
in
pop
pop
mov
mov
mov
push
ret
(bad)
in
aaa
inc
cld
mov
push
add
call
mov
fadd
push
aaa
clc
adc
jge
je
xor
inc
xor
sub
jecxz
inc
shl
cmp
shl
lea
lea
push
imul
(bad)
icebp
push
call
push
add
enter
add
add
cmp
jge
lea
pop
icebp
les
sbb
ja
mov
mov
sub
dec
in
in
cmc
and
push
lock
clc
fadd
xor
scas
retf
ds
and
cmp
lock
dec
lock
enter
out
and
add
and
mov
mov
fadd
jne
jp
rcl
mov
cwde
fnstsw
or
add
add
xor
mov
mov
dec
call
or
mov
cmps
sar
pop
push
jl
scas
mov
sub
mov
cmp
into
inc
sbb
iret
xor
push
rcl
push
fsub
fsub
gs
and
push
sub
aas
mov
enter
sub
sbb
test
dec
adc
xor
int3
sbb
mov
mov
add
jle
add
mov
bound
mov
mov
xor
pop
mov
lahf
mov
mov
scas
xor
lea
push
pop
mov
(bad)
test
push
cld
dec
mov
sbb
fmul
mov
mov
xor
or
pop
sbb
or
gs
pop
frstor
pop
nop
add
mov
cmp
push
or
pop
pushf
movzx
pop
mov
pop
xor
loopne
jge
rol
mov
test
xchg
cmps
clc
(bad)
out
test
outs
movq
movq
mov
cld
inc
or
push
adc
fadd
or
jle
(bad)
(bad)
(bad)
dec
jg
psrlw
pshufw
pshufw
pxor
paddw
pxor
paddw
ud0
(bad)
call
ror
jg
psrld
pcmpgtd
pand
pextrw
sub
movd
add
(bad)
fisttp
cmp
movd
punpcklbw
pmulhuw
or
push
punpcklbw
wrmsr
addr16
std
rol
rol
adc
and
das
xor
add
movq
paddd
fst
aaa
push
(bad)
jmp
ja
mov
inc
or
cld
jg
xor
leave
dec
clc
xchg
loopne
pop
dec
add
(bad)
mov
or
hlt
hlt
fimul
scas
fstp
dec
fstp
sbb
iret
mov
je
fsubr
aam
jge
or
cmps
test
enter
sbb
mov
add
adc
stc
aad
loopne
cmp
loopne
loopne
cmc
scas
cmovle
enter
shl
aad
lock
add
xchg
adc
adc
add
ss
(bad)
mov
aas
jo
aaa
imul
scas
iret
lds
(bad)
dec
sub
sub
lea
mov
mov
mov
scas
ror
dec
inc
out
add
and
mov
push
inc
mov
ror
cmps
fnstsw
add
or
shr
mov
loop
test
mov
xor
and
mov
and
add
shl
or
xor
mov
mov
in
pop
test
sbb
inc
add
loop
mov
add
push
xor
sub
or
pusha
mov
mov
stos
mov
push
mov
xor
out
loopne
jo
push
in
repz
pusha
xchg
or
hlt
dec
rol
(bad)
sbb
(bad)
scas
jne
xlat
cmps
xor
mov
lds
inc
pop
loop
shl
xor
mov
imul
add
and
dec
mov
cld
jne
cld
push
fild
inc
sbb
jge
jl
mov
mov
pop
mov
lock
or
mov
fbstp
call
sub
je
sub
push
inc
je
mov
jmp
call
jle
dec
mov
mov
movsx
mov
mov
std
(bad)
(bad)
out
shl
adc
cmp
jge
mov
add
add
movsx
inc
cmp
jl
mov
inc
std
xor
or
(bad)
(bad)
out
sub
mov
jg
mov
jmp
and
movsx
cmp
jg
sub
mov
sbb
ror
(bad)
jb
cld
sbb
dec
or
leave
je
scas
sub
cmp
inc
add
inc
or
lea
mov
sbb
sbb
xor
pusha
icebp
out
call
mov
neg
xor
push
sub
sub
sub
cmp
or
push
mov
ffreep
jmp
addr16
mov
lea
mov
jmp
mov
mov
call
push
not
dec
out
lods
and
pusha
out
movd
pshufw
mov
mov
add
fwait
add
sub
outs
push
movq
enter
jno
add
(bad)
mov
pop
stc
ror
lock
in
ret
dec
in
ret
movq
inc
lea
lea
sub
jns
jmp
ins
cli
out
call
popf
or
clc
mov
mov
sar
cdq
pop
jp
jne
movzx
add
ja
pop
test
(bad)
sar
sub
jmp
fisubr
push
add
sti
or
fisub
add
ret
push
sti
add
mov
cmc
and
iret
fsubr
call
mov
and
es
shl
push
in
retf
clc
cmp
jbe
or
loop
dec
in
inc
add
cmp
mov
in
lea
jl
stos
mov
lock
mov
jmp
add
jle
stos
jo
ret
add
cmps
dec
or
inc
and
popa
adc
aam
or
mov
push
call
stos
add
inc
inc
and
adc
push
push
call
daa
or
xor
adc
dec
push
leave
and
mov
in
push
sahf
or
pusha
mov
sahf
stc
ret
add
movzx
ins
mov
hlt
jge
push
add
nop
inc
(bad)
fwait
add
hlt
clc
inc
mov
dec
hlt
mov
xchg
mov
shr
mov
jne
arpl
cwde
test
push
pop
dec
push
xor
cmp
test
pmaddwd
leave
sbb
jge
cwde
add
lahf
clc
jmp
bound
add
inc
rcr
add
rcr
jg
jl
mov
add
add
ret
xor
add
fdiv
mov
mov
arpl
icebp
hlt
movzx
cdq
xchg
push
push
pop
push
ret
dec
cmp
mov
pushfw
rol
sbb
mov
movzx
and
mov
movzx
in
and
fdiv
mov
cli
inc
(bad)
hlt
fbld
mov
sbb
out
jg
jecxz
mov
mov
mov
je
jno
mov
cmp
cmps
mov
xor
stos
or
cmc
out
pop
sbb
add
adc
sbb
mov
ret
add
or
add
hlt
stos
ficomp
push
jbe
adc
adc
add
push
adc
mov
sbb
mov
pop
lea
mov
mov
or
push
call
jge
adc
mov
jmp
stos
sbb
push
or
adc
push
call
sbb
push
int3
cs
sbb
mov
and
jge
push
scas
mov
and
mov
jmp
adc
sub
add
inc
jmp
jg
jge
dec
dec
or
mov
mov
push
mov
out
shl
jnp
push
add
mov
pop
xor
(bad)
sub
loope
std
pushf
cmp
jle
mov
out
pop
pop
loope
xor
and
call
inc
push
mov
shl
add
mov
jmp
ror
jp
push
fnstcw
adc
je
mov
add
sbb
or
xor
add
test
je
cmp
adc
dec
arpl
xchg
inc
and
pmaxub
jne
scas
jl
and
jl
sbb
es
sbb
lahf
and
stc
adc
leave
jle
mov
sub
pop
push
int
or
retf
cwde
and
test
or
repz
push
push
mov
pop
aad
xor
cld
inc
cli
jmp
sub
mov
adc
lahf
stos
outs
mov
inc
sbb
push
add
aaa
jl
(bad)
fucom
ja
xchg
adc
lea
push
dec
inc
nop
loopne
xor
aas
sahf
xor
inc
and
pop
add
mov
inc
stos
js
cmp
mov
push
in
cmp
fs
mov
jmp
sbb
jmp
mov
jl
cmc
cmp
ins
mov
rol
mov
adc
inc
and
jmp
dec
dec
loopne
xchg
jl
test
jl
cmp
jge
add
fisttp
cmp
jl
nop
xor
rcr
inc
and
ret
dec
push
sbb
push
and
and
int3
cs
sbb
mov
jp
mov
mov
mov
(bad)
push
or
pop
cwde
sti
xchg
sub
jae
lods
push
adc
adc
jns
jle
mov
sbb
cmp
jl
or
sbb
sub
dec
aaa
push
das
adc
rcr
jl
outs
and
dec
ja
jl
and
jl
sub
mov
dec
popf
sub
cmp
jle
jmp
mov
push
cli
dec
mov
and
cdq
push
pop
clc
inc
xchg
add
add
pop
mov
jge
sbb
pusha
mov
pop
cmp
jge
push
add
jp
cmp
out
or
jne
pop
and
test
jle
cli
dec
jmp
sub
cmp
jge
add
or
add
jl
sub
(bad)
fsubrp
daa
jge
jmp
add
and
sar
(bad)
(bad)
jl
adc
xchg
lock
sar
shr
dec
cdq
idiv
rcr
frstor
pop
xor
jmp
mov
(bad)
in
fistp
cmp
add
bound
cmp
jl
sub
scas
or
jge
xor
jg
inc
pop
jnp
cmps
sub
or
scas
rol
mov
test
jns
outs
mov
mov
sahf
and
scas
inc
stos
add
ret
stos
push
sbb
adc
es
(bad)
fwait
call
inc
add
sbb
ret
add
and
dec
sbb
xor
mov
jmp
aas
adc
loopne
add
mov
pop
aaa
out
sti
jl
mov
(bad)
mov
sbb
imul
sbb
rol
push
and
push
and
loopne
fsub
or
lea
pusha
add
cmp
inc
sub
jg
out
mov
and
jle
add
or
sbb
rcl
(bad)
sbb
arpl
dec
leave
jle
cmp
and
mov
mov
(bad)
xor
adc
inc
adc
adc
mov
adc
sbb
sbb
cmp
jle
ficomp
xor
div
aaa
and
push
ins
pop
sbb
add
add
sub
or
inc
push
stos
mov
cs
movs
jbe
jae
push
push
add
push
call
fwait
jge
mov
jl
in
iret
inc
aad
and
xor
push
mov
ret
fbstp
mov
jge
mov
adc
shl
push
push
inc
test
or
pop
call
aad
cmp
cmps
adc
adc
push
call
iret
jo
idiv
push
or
push
adc
push
iret
dec
mov
test
imul
sti
adc
je
out
or
dec
add
or
shl
inc
dec
add
fwait
or
in
fs
sar
push
push
push
imul
mov
push
mov
je
das
call
call
lahf
dec
movs
loop
outs
loop
jmp
add
dec
ret
cmc
ja
(bad)
icebp
call
pop
jmp
mov
je
(bad)
call
icebp
cmp
jne
push
mov
xor
cmp
je
call
es
push
je
dec
je
inc
add
xor
sbb
test
movs
imul
dec
sub
cdq
sub
jg
nop
jae
sub
add
push
xor
push
cmp
stos
je
mov
jmp
mov
jmp
adc
mov
mov
push
mov
mov
dec
lds
add
and
jae
or
inc
cmp
pop
popf
(bad)
mov
add
and
dec
add
test
jns
cmp
outs
mov
push
je
int
or
adc
test
aas
cwde
mov
jne
pop
je
sub
xor
stc
cld
add
jne
mov
mov
dec
call
loopne
(bad)
std
mov
mov
pop
sub
mov
cmc
or
mov
aas
idiv
mov
adc
dec
add
dec
ins
or
mov
out
mov
and
and
dec
jnp
mov
pop
or
fstp
retf
je
add
xchg
dec
je
and
mov
dec
mov
cmp
je
cmps
loop
mov
das
pop
pop
adc
mov
lea
sub
rcl
cmp
ret
push
jae
call
add
pop
je
mov
jo
shl
add
push
je
mov
ds
cmp
xchg
lock
inc
jl
sub
inc
mov
xchg
pop
cmp
outs
sbb
adc
mov
mov
mov
xor
(bad)
pusha
mov
pop
dec
add
add
inc
cmp
inc
dec
or
mov
fcomp
cmp
dec
or
mov
cdq
and
push
les
movsx
jbe
inc
dec
push
inc
adc
inc
cmp
pop
inc
add
sbb
jno
adc
sbb
add
movs
fild
inc
add
addr16
(bad)
sbb
add
and
jbe
aaa
pop
mov
imul
stos
inc
mov
or
or
mov
in
aaa
mov
inc
add
je
(bad)
push
mov
loop
adc
ror
ja
mov
cmp
push
iret
cmp
jge
mov
xor
jae
pop
cmp
in
adc
jg
sbb
inc
add
loop
test
test
fild
(bad)
je
test
jne
mov
retf
test
loopne
add
jne
mov
cmp
mov
fstp
adc
shl
jne
cmp
jne
cmp
jne
pop
push
add
sub
cmp
pop
ror
push
cmp
mov
pop
test
jne
test
movs
shr
je
lock
sbb
inc
dec
add
jg
push
jl
dec
or
or
outs
push
arpl
aaa
jmp
pop
sbb
mov
dec
pop
jb
sub
pop
push
std
inc
add
push
or
dec
jl
mov
and
cmp
inc
fs
fld
fmul
nop
add
add
fisub
dec
fild
cmc
fstp
fild
pop
fld
and
fstp
pop
fld
pop
fsub
jg
sbb
fstp
fld
fistp
sbb
add
gs
mov
sub
sti
adc
sbb
lds
or
pushf
ret
popf
mov
mov
pop
push
jne
add
nop
out
(bad)
(bad)
aas
stos
cmp
jne
cmp
jge
mov
mov
je
pop
xchg
dec
or
add
mov
inc
jl
jae
repnz
int
in
xor
mov
pop
enter
lods
fwait
mov
add
or
adc
xchg
sub
add
push
mov
call
xor
adc
jmp
mov
jmp
or
stc
add
inc
clc
sub
push
jmp
mov
pop
and
call
loopne
pop
loopne
xchg
mov
test
add
pop
push
movzx
je
fist
movzx
movzx
add
movzx
(bad)
(bad)
mov
xor
mov
mov
jmp
inc
jp
out
out
bound
push
jnp
add
pop
lea
push
push
mov
call
(bad)
(bad)
dec
movzx
movzx
sub
push
sub
dec
mov
sbb
mov
in
sub
test
jge
mov
div
cmc
cmps
(bad)
jmp
mov
test
mov
(bad)
fiadd
jg
(bad)
dec
add
cmp
mov
jge
mov
jmp
enter
cmp
xchg
cmp
or
inc
call
sub
and
mov
adc
push
mov
call
add
or
out
(bad)
aas
push
cmp
movzx
sub
test
mov
out
mov
neg
test
or
mov
add
add
add
mov
loop
std
dec
cdq
idiv
cmp
jle
pop
jmp
adc
stc
ror
call
movzx
jmp
push
call
aaa
(bad)
mov
jmp
jmp
push
call
lods
sub
das
add
pop
pop
mov
jmp
push
jecxz
call
push
jmp
call
rol
pmulhuw
pop
or
lahf
loopne
idiv
push
dec
sbb
or
adc
les
leave
inc
cmp
cmp
push
inc
mov
push
push
and
push
push
clc
push
call
sbb
inc
daa
add
push
std
mov
cmc
and
add
xor
jp
add
pop
push
push
push
(bad)
fbstp
dec
mov
add
fild
and
je
lds
xor
and
push
leave
push
mov
mov
push
mov
push
call
arpl
cmp
or
pop
call
(bad)
dec
push
mov
pop
shr
sub
mov
mov
(bad)
(bad)
jmp
mov
push
call
cmp
pop
pop
jle
push
push
call
mov
pop
mov
sbb
mov
je
mov
jmp
cmp
add
div
mov
mov
mov
push
jbe
call
and
mov
pop
cmp
jne
pop
pop
pop
pop
pop
jmp
stc
cmp
mov
(bad)
std
and
jne
mov
mov
jmp
sti
shl
sbb
lock
popa
ja
(bad)
push
ror
push
mov
mov
add
and
add
mov
xchg
jmp
lahf
test
sbb
or
push
mov
jne
xchg
les
popf
mov
add
enter
adc
out
addr16
adc
inc
and
sar
sar
btc
aam
fld
adc
pop
and
and
xor
mov
push
call
mov
xchg
adc
jmp
icebp
inc
cmp
je
and
mov
adc
cmp
push
push
pop
jg
inc
outs
cmp
test
jl
inc
fild
cmp
jge
add
dec
mov
sar
cmp
jne
cmp
je
in
adc
in
cli
fist
call
jmp
(bad)
adc
add
cmp
stc
jbe
into
inc
jp
cmp
add
mov
aam
xchg
mov
lea
sbb
sti
call
add
cmp
je
cmp
lea
jecxz
jge
xor
loopne
loopne
pop
xor
enter
cmp
jmp
ror
shr
add
and
inc
add
sub
inc
and
mov
jl
jmp
cmp
jne
out
or
div
inc
dec
and
idiv
or
inc
mov
inc
ret
sti
shr
shr
mov
xlat
mov
xchg
lahf
push
test
add
ja
sub
retf
inc
mov
inc
iret
or
dec
mov
and
pop
jne
inc
sbb
sbb
ficomp
push
call
or
movs
sbb
push
shr
mov
(bad)
sbb
cmp
lds
scas
sbb
pushf
sti
lock
outs
mov
pop
jne
or
pop
mov
cmp
mov
mov
or
and
or
int
dec
push
call
std
outs
sub
xor
cmp
jne
and
call
xor
test
mov
(bad)
cmp
mov
add
add
adc
cmp
je
push
or
(bad)
mov
ds
std
xchg
add
or
pop
(bad)
mov
add
mov
mov
push
mov
dec
mov
idiv
and
cmp
jg
mov
mov
ror
pusha
cmp
push
mov
jl
mov
cmp
mov
std
pop
(bad)
fst
test
(bad)
(bad)
call
je
mov
and
and
(bad)
jne
cdq
mov
je
call
call
dec
cld
xor
or
mov
mov
imul
jne
mov
movs
mov
mov
idiv
mov
call
call
cmp
dec
sbb
rol
cli
(bad)
call
push
cmp
pop
je
mov
push
call
cmp
pop
mov
jne
mov
add
cli
out
push
clc
or
pop
repz
push
pop
or
pusha
pop
clc
xchg
adc
add
call
push
int
jns
jmp
call
(bad)
(bad)
fist
adc
icebp
mov
xor
cmp
je
movzx
movzx
cmp
jge
(bad)
(bad)
dec
sbb
mov
inc
mov
mov
mov
mov
mov
fdivp
mov
push
lea
add
(bad)
sar
cmps
jae
adc
xor
lds
cmp
lock
clc
jbe
lea
sbb
call
push
mov
inc
add
cmp
jl
jmp
mov
pop
pop
mov
pop
nop
push
mov
push
jnp
aaa
add
je
cmp
jne
add
(bad)
mov
mov
cmp
jne
cmp
je
test
push
call
adc
ret
(bad)
mov
mov
mov
mov
mov
jmp
or
or
mov
push
or
inc
adc
call
jp
mov
repnz
xor
mov
mov
movzx
cmp
je
cmp
jae
mov
pop
mov
cld
cmp
add
pop
push
adc
mov
pop
dec
jl
fisttp
inc
lods
dec
xor
call
(bad)
(bad)
push
mov
je
dec
je
dec
je
dec
je
dec
jne
push
shl
rdpmc
dec
loopne
pop
jmp
orps
sar
add
mov
jmp
sbb
retf
jae
jmp
mov
mov
xor
xchg
jbe
cmp
sbb
repz
jmp
ret
ja
cld
sub
mov
add
outs
jmp
push
or
nop
adc
(bad)
ffree
add
fldz
push
fstp
pop
fldz
mov
fstp
mov
mov
or
mov
mov
lds
mov
mov
ret
cli
mov
loopne
call
and
shr
je
push
mov
movzx
add
mov
xchg
push
call
xor
inc
inc
mov
movzx
shl
xor
mov
shr
add
inc
dec
mov
jne
repnz
call
pop
dec
je
dec
je
dec
jne
xor
dec
add
loope
xor
jg
jmp
movzx
mov
add
leave
lahf
std
ror
adc
jmp
movzx
into
(bad)
mov
ror
add
shr
xor
jg
jg
or
or
rcr
adc
mov
call
and
push
add
adc
int
add
(bad)
out
and
arpl
adc
add
retf
or
add
push
pop
or
icebp
add
or
or
mov
mov
scas
xchg
mov
jle
(bad)
push
pop
addr16
and
jne
push
mov
mov
push
retf
add
call
push
lock
inc
or
fld
fcomp
jg
push
add
mov
test
jne
mov
jmp
fld
adc
jp
jmp
test
or
jne
mov
inc
xchg
jge
inc
cld
call
cld
jl
cmp
arpl
push
mov
dec
push
xor
call
loopne
repz
loopne
pusha
je
daa
add
and
inc
call
loop
cmp
jl
mov
test
je
dec
js
add
push
call
sub
pop
sub
aaa
add
push
call
pop
je
sub
push
call
ror
mov
cmp
mov
cmps
add
(bad)
jmp
pop
test
push
push
je
call
lea
mov
push
std
(bad)
dec
push
push
movs
call
push
push
push
call
ja
jnp
jmp
mov
je
push
call
das
pop
(bad)
aas
enter
into
add
push
call
pop
jle
mov
dec
and
(bad)
inc
inc
or
mov
in
and
push
call
ja
inc
push
pop
sbb
sbb
push
rol
or
pop
push
icebp
and
or
add
sar
scas
scas
mov
push
jns
movzx
(bad)
push
in
cmp
push
mov
push
pop
shr
and
mov
lea
ja
inc
mov
ret
push
or
mov
mov
out
into
cli
call
mov
xor
jge
or
ja
loope
jmp
imul
jmp
lods
or
mov
ins
cmp
ffree
dec
sbb
into
call
push
jne
ja
push
mov
dec
ins
push
(bad)
nop
sub
call
xlat
push
jmp
cli
or
cld
outs
fidiv
push
call
inc
sub
xor
mov
pop
aas
jae
cmps
pop
mov
mov
add
jecxz
sub
mov
adc
in
in
add
and
add
inc
cmp
dec
cwde
jae
dec
push
adc
mov
fdivr
and
ret
and
pusha
mov
push
call
sub
mov
push
mov
(bad)
(bad)
cmp
xor
add
(bad)
sti
add
sbb
xchg
mov
mov
sub
add
add
outs
push
loope
inc
lods
sbb
bound
pop
add
mov
xor
mov
test
(bad)
in
sbb
hlt
mov
adc
(bad)
call
jg
cmp
je
ja
push
mov
adc
dec
call
jmp
call
push
xchg
adc
mov
push
ins
xchg
mov
adc
call
(bad)
aas
cmps
fld
mov
fcomp
inc
inc
jne
mov
push
add
inc
or
jmp
(bad)
(bad)
out
cli
outs
cmp
fld
mov
fmul
sbb
adc
add
pop
pop
in
push
mov
inc
je
movs
mov
mov
and
(bad)
or
fldl2e
adc
cmp
pop
lea
mov
jne
dec
xchg
xor
jnp
test
call
test
cdq
call
mov
mov
adc
shl
lds
mov
sub
or
sbb
jne
and
std
dec
(bad)
dec
mov
mov
shl
and
je
add
jbe
leave
push
push
mov
sbb
loopne
inc
stos
(bad)
jg
(bad)
(bad)
fcomip
and
call
mov
mov
jmp
lea
lea
xor
xchg
loope
dec
lea
mov
sub
add
lea
call
ret
pop
mov
pusha
aaa
icebp
xchg
adc
or
mov
push
add
data16
inc
adc
ret
add
dec
sahf
mov
test
jne
mov
sbb
stos
inc
je
push
call
icebp
fld
div
call
test
je
mov
dec
add
adc
xor
push
sbb
pop
(bad)
pop
aas
jmp
and
loopne
push
mov
or
call
pop
inc
mov
pop
sbb
add
pop
std
jg
call
mov
cmp
jge
mov
arpl
ja
push
or
inc
adc
int3
rol
mov
push
fmul
and
pop
or
fistp
fisub
hlt
mov
mov
inc
mov
cmp
lea
daa
out
add
cmp
mov
jp
outs
sub
or
cmp
inc
adc
sar
sar
lea
add
mov
rol
pop
jbe
jo
ja
pop
jne
sar
std
fild
jmp
and
fld
pop
jecxz
mov
ins
or
xor
test
xor
call
pop
int3
mov
lahf
mov
mov
cs
sbb
fs
sar
fist
jb
repz
ja
cmp
push
call
or
inc
add
add
call
push
mov
cmp
(bad)
fnstsw
je
cmp
cmp
jne
mov
xor
repnz
push
add
fdivr
push
xchg
sub
and
call
adc
pop
test
loop
xchg
sbb
jne
sub
jne
push
push
fstp
push
add
in
jmp
add
or
ja
pop
cmp
push
push
xor
mov
jg
(bad)
sti
je
mov
test
mov
je
cmp
movs
fsub
fld
fsub
fdivrp
fld
fdivr
jg
jmp
fmul
fadd
fstp
fld
fsub
or
fstp
jmp
mov
pop
xor
mov
jmp
mov
mov
inc
add
inc
fld
push
sub
cmp
fstp
fld
fld
(bad)
push
adc
or
je
call
fstp
fld
pushf
jmp
and
or
sub
jg
jg
call
fmul
fmul
fstp
pop
jae
sbb
adc
adc
push
call
iret
mov
aas
push
cmp
adc
fadd
fstp
cmp
std
adc
pop
fstp
pop
out
add
loop
das
jmp
inc
dec
icebp
mov
sbb
mul
fisub
enter
cmp
inc
call
mov
pop
dec
out
cmp
pop
stc
inc
or
hlt
in
sub
push
mov
and
(bad)
fcomip
add
inc
or
inc
adc
mov
mov
push
mov
mov
push
lock
clc
pop
pop
mov
into
push
lea
mov
sbb
jae
(bad)
mov
xchg
mov
mov
lea
lea
rep
mov
push
call
dec
mov
call
mov
dec
enter
test
jmp
lock
repz
adc
adc
in
adc
inc
loopne
(bad)
inc
fstp
call
mov
fchs
dec
fstp
rcr
inc
in
les
sbb
lods
and
mov
clc
mov
call
fild
mov
and
leave
(bad)
out
pop
xchg
clc
mov
and
dec
call
addr16
mov
leave
pop
pop
mov
fstp
pusha
sbb
clc
out
add
add
add
jmp
xor
inc
xchg
sbb
dec
or
call
in
mov
or
movs
jp
enter
sbb
mov
js
iret
call
push
call
into
sbb
loopne
imul
cmc
push
enter
add
mov
and
test
test
mov
jbe
outs
cmp
mov
mov
call
inc
push
mov
mov
jmp
adc
ror
loop
ja
sbb
adc
in
push
and
inc
cld
or
xor
and
xor
pop
shl
leave
or
cli
outs
adc
xor
(bad)
mov
out
fs
sbb
inc
hlt
ins
or
adc
sbb
fstp
pop
adc
inc
cmp
in
fstp
popa
adc
popa
(bad)
fwait
mov
fstp
push
jbe
sub
lock
pop
sbb
inc
enter
aaa
inc
stos
sub
sub
dec
pop
or
or
adc
push
call
scas
and
or
enter
in
mov
or
jmp
lea
cmc
adc
xor
inc
mov
neg
and
push
push
call
push
mov
mov
rdpmc
fstp
ret
jne
aaa
sar
prefetch
into
call
addr16
mov
sub
lea
je
rcr
(bad)
mov
js
sbb
jmp
push
push
mov
inc
or
inc
hlt
push
xchg
jmp
inc
retf
and
xchg
fwait
or
(bad)
mov
into
mov
add
jle
mov
jg
dec
cmps
sub
inc
adc
mov
jg
mov
xor
fstp
mov
mov
loop
xor
fstp
mov
cmp
inc
inc
mov
(bad)
loop
jg
inc
dec
cli
mov
mov
cmp
pop
mov
mov
std
(bad)
out
inc
jle
mov
mov
mov
mov
call
add
arpl
cli
add
fmul
cmp
sbb
pop
das
xor
or
push
jg
jle
jle
je
xor
call
mov
adc
call
or
dec
sbb
xor
lea
xchg
lock
jmp
push
mov
std
inc
xchg
push
push
call
mov
test
hlt
push
push
inc
repz
cmp
pop
ja
add
push
mov
call
push
pop
mov
neg
mov
dec
adc
xor
pop
pop
push
cmp
push
(bad)
jg
cmp
je
cmp
je
cmp
sbb
pop
jne
mov
mov
push
popa
cmp
iret
push
cld
addr16
(bad)
call
sub
push
ja
push
(bad)
pop
clc
mov
cmp
push
push
jne
xor
add
inc
mov
movzx
mov
mov
mov
xor
and
je
lea
mov
paddsb
add
movzx
pop
(bad)
(bad)
jg
pop
mov
mov
mov
xor
test
jle
mov
and
mov
(bad)
inc
je
lea
inc
inc
xor
mov
mov
jmp
mov
inc
movzx
cmp
je
clc
mov
movzx
xlat
shl
shr
idiv
(bad)
out
or
push
lea
movzx
xor
mov
mov
movzx
imul
std
das
add
jmp
lea
sbb
mov
mov
lea
xchg
enter
sbb
pop
adc
push
push
lea
jmp
mov
call
mov
mov
mov
jae
pop
mov
sbb
or
js
pop
inc
cmp
cmp
mov
mov
cs
call
and
fstp
and
fldz
mov
out
pop
fstp
scas
mov
mov
sti
or
lock
fld1
fdiv
pop
(bad)
push
lea
push
addr16
xchg
add
mov
inc
loopne
test
std
lods
cmp
je
fcmovnb
add
sbb
mov
out
fild
fld
push
or
fcmovnbe
push
dec
es
fsubrp
and
cmp
inc
jmp
in
add
pop
sbb
add
and
inc
pop
or
rcr
sar
jne
xor
jmp
add
inc
jmp
cmp
push
je
call
out
mov
fild
inc
inc
inc
enter
pop
or
xor
jae
lods
or
push
and
inc
mov
inc
ror
mov
lock
movs
push
add
xchg
call
jo
sub
movs
push
call
mov
xchg
or
enter
push
cmp
cmps
sbb
call
jne
push
add
and
call
(bad)
mov
test
je
push
call
fstp
push
call
add
jg
test
push
pop
pop
mov
mov
jns
sbb
test
jle
mov
mov
add
sbb
clc
and
dec
adc
mov
lock
dec
loopne
xor
inc
clc
adc
dec
hlt
pop
jne
mov
leave
mov
(bad)
sti
ficom
add
push
adc
sbb
inc
inc
adc
fs
mov
add
addr16
loope
inc
rcr
sbb
fsubr
add
(bad)
arpl
fdiv
(bad)
sbb
or
and
pop
and
repz
ja
stos
fcmovnu
std
inc
mov
jge
mov
add
test
and
ffreep
ja
enter
mov
cmp
enter
std
or
out
je
call
mov
and
addr16
cmp
fwait
loopne
fmul
or
enter
pop
jne
pop
(bad)
jg
out
adc
into
dec
call
xor
cmp
jne
cmp
jne
mov
inc
or
add
push
push
push
mov
sub
dec
sbb
aam
dec
mov
imul
loop
mov
pop
ja
pop
sbb
mov
xor
jne
mov
cli
adc
sti
add
sbb
mov
fild
push
call
pop
setg
mov
ret
dec
mov
and
call
shl
dec
pop
jne
ret
fistp
out
mov
aaa
jne
sub
pop
mov
mov
sub
adc
or
cmps
icebp
call
jge
cmp
popa
sub
in
push
xor
es
jmp
mov
cmp
mov
je
js
adc
enter
enter
sbb
inc
inc
jmp
neg
adc
retf
jne
aas
mov
or
adc
aam
arpl
cwde
bnd
adc
aaa
adc
cmp
xor
jg
out
add
jnp
mov
cmp
out
fdivr
xor
retf
je
mov
or
xchg
rcl
inc
jg
call
mov
call
add
sar
add
call
rcl
jg
add
lea
push
call
inc
mov
push
lea
push
call
add
les
call
dec
je
shr
sbb
fmul
pop
(bad)
ja
out
cmps
and
stos
cmc
pop
mov
call
call
lock
(bad)
dec
inc
push
and
jmp
sub
adc
outs
ret
inc
fwait
add
fisttp
pushf
icebp
push
rol
inc
(bad)
push
cmp
sbb
fbld
and
in
cmp
mov
and
call
call
cmp
jne
call
mov
mov
and
xchg
mov
call
add
test
add
adc
retf
ins
call
and
add
sbb
push
popa
mov
mov
adc
mov
mov
pop
loope
(bad)
out
sub
inc
fidivr
js
rcr
out
cli
(bad)
fstp
push
sbb
je
pop
adc
in
or
sbb
ret
call
(bad)
adc
dec
cld
fstp
push
mov
call
inc
cmp
mov
fwait
or
jns
dec
push
xchg
jecxz
fs
call
mov
test
jb
iret
push
xchg
or
repnz
fsubr
jne
push
push
call
jns
adc
mov
cmp
test
mov
and
dec
push
clc
jmp
(bad)
dec
je
dec
je
dec
jne
mov
push
sti
mov
push
push
call
call
clc
(bad)
sbb
and
push
mov
shl
add
mov
or
sti
or
(bad)
test
jmp
ja
push
lea
mov
mov
cmp
mov
call
in
dec
enter
mov
std
call
mov
test
mov
call
cmp
pop
je
inc
jmp
push
cmp
xchg
lea
call
inc
loopne
scas
xchg
ret
je
adc
xor
or
stos
mov
(bad)
mov
call
cdq
je
mov
arpl
dec
je
sub
call
push
push
sbb
jmp
call
fsubr
outs
call
popf
sbb
jmp
mov
add
cmp
jle
or
pop
cmp
out
push
sti
adc
lea
call
lea
call
cmp
or
xchg
rcl
enter
mov
push
fadd
or
or
sub
and
mov
sub
dec
(bad)
push
test
rol
pop
clc
out
ja
and
add
sbb
cld
je
mov
ror
repz
loopne
push
dec
clc
mov
pop
jne
ds
push
(bad)
(bad)
inc
add
cmp
mov
jne
jmp
mov
pop
or
pop
or
jmp
sbb
lods
mov
dec
add
aad
pop
inc
or
ror
adc
add
scas
dec
push
call
loopne
leave
pop
stc
int3
arpl
outs
call
pop
aam
jns
inc
cmp
(bad)
jne
xchg
or
retf
push
out
push
(bad)
dec
push
lea
push
push
call
or
(bad)
shr
jmp
mov
mov
stos
call
pop
retf
push
sub
sub
jne
add
cmp
mov
adc
mov
ja
aas
jmp
jmp
ror
movzx
push
jge
mov
inc
inc
and
call
push
xor
mov
and
inc
mov
push
mov
mov
add
jne
mov
call
push
cmp
(bad)
jne
cmp
inc
xor
mov
dec
je
xor
lea
mov
test
push
es
jmp
xlat
mov
shl
or
jmp
xor
mov
(bad)
dec
mov
and
test
mov
jle
(bad)
mov
adc
inc
lods
add
add
faddp
rcl
adc
jmp
inc
push
push
push
adc
mov
call
ret
mov
cmp
jbe
repz
lods
pop
(bad)
(bad)
jle
jo
call
cmp
je
push
call
ja
cld
jmp
or
add
dec
sub
dec
ins
sbb
adc
xor
sbb
out
movs
std
call
int3
jge
jmp
into
lds
movs
mov
lods
mov
test
je
push
mov
push
call
mov
mov
call
js
add
das
cmp
in
std
aas
call
add
xor
push
enter
cmp
test
mov
je
sbb
jae
stos
mov
push
or
sbb
mov
mov
mov
jmp
xor
mov
mov
sbb
rol
push
mov
enter
test
push
xlat
dec
and
sub
enter
mov
add
and
and
add
clc
sub
add
mov
fild
rcl
fmul
fmul
pop
ins
sbb
fstp
call
aas
mov
push
mov
rol
adc
sbb
push
out
fstp
mov
dec
inc
or
dec
add
mov
push
mov
push
adc
mov
out
out
test
push
cmp
inc
pop
dec
pop
out
mov
into
call
or
push
sbb
inc
mov
mov
push
mov
cmp
jbe
loopne
mov
inc
or
movs
push
js
dec
inc
(bad)
cmp
add
mov
jg
test
add
(bad)
ja
and
clc
push
lea
mov
lea
xor
add
es
cmp
test
out
js
pop
ins
pop
jge
mov
mov
sbb
call
(bad)
jg
push
mov
jne
call
test
add
call
call
jo
mov
mov
movzx
push
movzx
fucomp
pushf
loope
or
mov
fmul
out
mov
ror
sbb
cmps
(bad)
sub
mov
mov
sub
and
(bad)
fld
lea
push
xchg
sub
mov
push
out
push
push
in
imul
push
inc
push
jne
cmp
jne
cmp
push
je
jne
cs
push
push
lea
push
push
sub
adc
cmp
jne
cmp
jne
lea
mov
std
push
pop
add
jge
sub
je
push
jle
jne
cmp
push
cmp
cdq
bound
enter
inc
js
out
inc
inc
sbb
inc
dec
xchg
sbb
dec
xor
gs
outs
loopne
jmp
fmul
sbb
inc
sbb
pop
je
inc
je
loopne
lds
cmp
sti
mov
call
dec
cmp
jne
fmul
jg
fadd
fld
fistp
fild
fmul
fsubr
out
push
fmul
or
in
pop
mov
dec
call
sbb
xor
sub
or
div
jmp
sub
loopne
push
sbb
fwait
test
or
sbb
aas
shr
test
mov
mov
mov
fstp
mov
mov
out
cmp
dec
xor
ror
xchg
sti
sbb
dec
mov
mov
enter
fcomp
mov
mov
inc
mov
movzx
mov
jecxz
xor
or
cld
push
sbb
mov
mov
mov
ja
mov
mov
lea
cmp
mov
das
(bad)
jle
and
mov
fld
iret
lea
(bad)
in
jne
call
cmp
outs
inc
pop
call
add
mov
jg
rol
xor
inc
je
push
lea
push
call
sbb
call
inc
(bad)
cmp
cs
adc
inc
je
test
sahf
mov
cmp
mov
pop
std
jg
jne
push
mov
mov
mov
dec
pusha
add
mov
call
sbb
adc
sbb
jns
jle
xchg
push
clc
push
call
aad
test
out
dec
sbb
sub
or
gs
adc
jmp
cmp
mov
pop
call
push
call
jo
add
add
loopne
call
test
xor
mov
test
clc
jmp
mov
jne
lea
inc
call
mov
sbb
pop
rcr
jmp
ret
push
ret
call
lea
ins
jp
lea
push
and
xchg
clc
clc
or
fisttp
pushf
push
daa
mov
sbb
or
fstp
jg
mov
lea
or
sbb
sar
sub
cmp
in
lahf
pushf
les
inc
xchg
(bad)
sti
cmp
and
pusha
mov
shl
(bad)
jmp
push
or
sub
out
movsx
xchg
jne
xchg
or
xchg
add
imul
jge
mov
cmp
sub
enter
pop
add
add
xor
inc
ja
and
pminub
adc
or
jp
add
cmp
mov
data16
rcl
mov
hlt
mov
mov
dec
fmul
jl
pop
pusha
sub
jbe
sub
xor
cmp
add
mov
or
add
je
mov
or
dec
not
push
call
cmp
jne
jns
inc
outs
test
pop
leave
ret
sar
push
nop
sub
pop
js
or
mov
sub
dec
je
leave
xchg
test
push
mov
movsx
in
aaa
std
fld
fld
mov
push
inc
jne
cmp
inc
jnp
aaa
fstp
out
aaa
std
dec
mov
fstp
mov
(bad)
fst
mov
adc
fstp
mov
mov
mov
push
mov
mov
fld
andnps
jmp
es
add
mov
add
call
push
in
mov
mov
mov
hlt
ja
add
xor
sub
xor
mov
stos
call
jge
stos
stos
mov
sbb
clc
ja
pop
xor
cmp
mov
dec
je
dec
mov
or
pop
sbb
jae
push
add
dec
ins
xor
repnz
cmp
inc
mov
(bad)
arpl
push
ss
into
lock
mov
movzx
push
stos
push
fld
or
(bad)
aas
daa
push
sbb
sub
adc
call
aad
inc
scas
dec
xchg
pop
pop
cmps
sbb
xchg
stc
mov
into
jo
dec
add
bndstx
pop
outs
add
sbb
jge
add
lea
xor
sub
dec
(bad)
dec
mov
inc
cmp
jl
lea
and
fcomip
(bad)
rcl
fild
push
add
ja
hlt
dec
pcmpgtd
fisttp
mov
add
leave
dec
add
add
cdq
call
test
and
sbb
dec
fmul
shl
add
shl
(bad)
push
sbb
cmp
add
outs
lea
aam
cld
icebp
adc
rcr
inc
into
clc
fistp
push
inc
dec
in
fs
and
xor
cmp
ins
jle
rol
mov
cmp
cwde
jmp
inc
(bad)
cs
ror
jne
popa
dec
ret
fsub
loopne
retf
pop
adc
and
gs
xchg
add
mov
cmp
int3
stos
add
lea
sahf
out
jmp
fs
dec
pop
cmp
test
pop
add
ret
pushf
push
jp
or
call
push
mov
ds
jp
mov
movs
les
jne
clc
pop
fcom
inc
adc
(bad)
push
push
call
in
imul
push
cld
ffreep
fwait
out
inc
sub
or
inc
sbb
mov
jmp
mov
mov
push
adc
aas
sbb
rcr
sub
xchg
clc
aaa
clc
add
test
je
adc
and
jmp
and
out
test
push
pusha
je
call
std
(bad)
dec
jge
call
inc
inc
ret
and
add
test
sbb
jne
jl
mov
hlt
inc
push
push
push
setne
mov
jmp
je
clc
mov
mov
sub
inc
inc
sub
inc
adc
xchg
dec
(bad)
and
cld
js
mov
mov
xor
mov
or
clc
sub
jmp
mov
jmp
pop
sub
ror
sub
je
dec
je
dec
je
inc
cld
xchg
lods
je
dec
je
dec
(bad)
adc
(bad)
pop
ret
mov
pop
add
add
jmp
adc
(bad)
inc
or
rol
clc
iret
or
sar
jmp
call
pop
sar
and
inc
call
test
push
push
mov
not
mov
xor
mov
cmp
jl
lea
mov
cmp
or
inc
(bad)
fist
or
scas
repnz
sub
je
fwait
dec
je
dec
je
dec
je
dec
je
dec
je
dec
mov
mov
fisttp
push
rol
push
sub
push
xchg
jne
icebp
(bad)
fild
mov
cli
(bad)
jmp
movzx
push
push
call
push
push
popa
movzx
jmp
mov
xor
mov
and
sar
wrmsr
sub
shl
mov
por
sbb
cmp
sti
call
and
mov
sub
shl
sbb
jmp
add
pop
and
sub
pop
add
inc
add
lds
dec
pop
pop
aas
mov
loopne
push
sub
push
or
test
inc
clc
adc
(bad)
mov
(bad)
clc
pop
or
jmp
call
call
mov
push
shl
lea
lea
movs
movs
movs
sar
xor
dec
(bad)
cmp
mov
mov
movs
jl
mov
fwait
je
lea
cmp
jl
ja
sar
sar
inc
cld
mov
add
fadd
inc
(bad)
push
icebp
fmul
adc
inc
ror
fmul
pop
sar
cld
cmp
jl
xor
fcomp
add
pop
jo
cmp
jl
inc
popf
mov
enter
inc
aam
jae
int3
push
inc
inc
clc
pop
inc
jae
mov
mov
clc
(bad)
push
imul
add
cmp
mov
jl
cmp
jle
jns
clc
add
test
clc
add
adc
(bad)
inc
jne
mov
mov
mov
lea
push
push
mov
push
call
hlt
jg
jl
push
scas
cli
ret
jne
mov
mov
shr
fwait
and
inc
es
rcr
cmp
call
hlt
pop
mov
pushf
lea
lea
push
push
call
mov
jne
imul
rol
fdivr
std
out
pop
je
and
jae
call
imul
add
jnp
(bad)
out
daa
inc
aam
pop
add
add
cmp
je
sub
call
inc
es
cmp
sub
sub
sub
mov
lea
push
movzx
push
call
xor
jle
mov
and
cdq
sti
add
jmp
sub
jmp
mov
fnsave
jae
sub
sub
sti
call
xor
or
mov
xor
mov
fcomp
cmp
push
cld
mov
mov
add
sti
lea
push
mov
hlt
hlt
clc
(bad)
jmp
xchg
fimul
mov
shr
mov
mov
mov
and
lea
das
int3
in
ret
mov
les
jg
idiv
aaa
mov
mov
add
call
popa
mov
mov
push
cmp
(bad)
(bad)
mov
dec
clc
xchg
mov
and
sar
mov
movzx
fucomip
lock
pop
lock
movzx
and
add
sbb
(bad)
and
les
retf
icebp
sbb
cwde
xchg
fsub
fsubr
lahf
add
cmp
cmp
add
jns
push
je
mov
call
sbb
add
add
inc
cld
(bad)
mov
wbinvd
dec
jne
and
(bad)
xlat
cwde
mov
mov
mov
cld
sbb
inc
and
inc
sub
push
enter
mov
not
add
enter
dec
cmp
jb
add
test
jne
xor
ret
xor
inc
ret
sbb
jle
loope
sbb
xor
push
mov
test
jecxz
rcr
jnp
xor
and
xchg
dec
xlat
add
mov
push
cli
(bad)
cmp
(bad)
fild
adc
ror
loopne
mov
cmp
jne
push
scas
pop
fwait
(bad)
jmp
cmp
jg
jo
test
push
mov
inc
adc
cmp
inc
or
sbb
push
push
call
imul
cmp
call
(bad)
jne
mov
xor
jmp
cmp
jne
fild
pop
mov
xor
stos
mov
mov
or
mov
leave
je
dec
add
add
call
and
mov
or
fstp
pop
cmp
jne
push
adc
(bad)
adc
push
out
(bad)
out
not
push
pop
cmp
jne
fcomp
pop
sti
(bad)
mov
add
mov
inc
mov
inc
mov
inc
dec
mov
in
xor
sub
stc
xor
aaa
inc
cmp
sub
push
add
xor
outs
sub
iret
test
push
std
jg
jnp
add
add
test
fisttp
mov
or
mov
xor
test
ins
mov
add
js
fild
lock
ret
and
inc
adc
add
(bad)
push
push
or
sbb
je
mov
mov
(bad)
neg
cs
sbb
push
call
sub
jge
pop
sar
jge
mov
mov
mov
pop
mov
mov
rsm
(bad)
pop
clc
xchg
inc
pop
test
dec
retf
jge
neg
mov
test
aaa
xor
jg
mov
sti
arpl
jbe
test
mov
test
mov
add
(bad)
add
mov
jg
push
or
mov
jne
mov
xor
mov
adc
(bad)
adc
inc
(bad)
(bad)
scas
pushf
or
js
fild
mul
jne
mov
cli
(bad)
call
dec
cmp
jl
mov
xor
mov
dec
cmp
jl
and
mov
fadd
sub
fild
cld
dec
je
dec
jne
lea
add
idiv
dec
push
call
lea
mov
push
shl
push
call
mov
add
les
ss
adc
sub
hlt
rdmsr
idiv
push
push
call
les
pushf
int3
push
lea
test
push
call
sahf
sbb
and
loopne
fucomip
or
inc
or
jg
add
mov
mov
pop
mov
mov
ror
jae
adc
popf
sbb
adc
add
sahf
fs
fist
add
mov
mov
mov
push
mov
mov
sub
lods
test
aaa
push
jge
add
repnz
mov
int3
sar
and
stc
or
icebp
imul
push
imul
add
add
mov
dec
rol
hlt
out
mov
or
xlat
mov
mov
movups
add
enter
dec
dec
sub
imul
add
add
shr
sub
jmp
icebp
sbb
mov
retf
stc
or
out
inc
jmp
test
sbb
mov
adc
out
or
mov
sbb
enter
xlat
fstp
arpl
or
(bad)
neg
or
ffree
jge
lds
jmp
lock
mov
mov
sar
mov
lea
or
xor
ja
jg
dec
loopne
lock
mov
xor
mov
mov
mov
mov
mov
mov
ja
inc
lock
and
cmp
(bad)
ror
hlt
cmps
dec
sar
rol
cld
test
jl
pop
icebp
inc
sbb
lea
dec
sbb
lea
je
ret
bound
retf
add
sub
adc
jne
lea
push
retf
mov
repz
mov
sub
dec
call
add
pop
adc
dec
adc
hlt
paddsw
(bad)
(bad)
jns
cmp
sbb
rol
(bad)
pop
or
inc
hlt
iret
inc
fsub
mov
inc
loopne
mov
dec
lock
jne
shr
dec
in
scas
mov
callw
ret
sbb
pop
ret
inc
or
inc
pop
mov
jle
clc
sbb
jle
mov
je
fld
or
inc
push
or
lds
inc
aaa
cmp
mov
push
in
rol
(bad)
ja
call
clc
imul
adc
mov
push
shl
fld
div
xor
call
lar
inc
clc
div
jmp
sub
aas
mov
mov
int
(bad)
hlt
test
mov
or
mov
(bad)
jmp
mov
cmp
je
call
rcl
sbb
rcl
pushf
ret
loope
add
jmp
cwde
sbb
shl
call
mov
adc
nop
dec
call
mov
adc
invd
jle
xor
ret
inc
lock
fld
push
push
push
lea
fstp
call
sti
mov
mov
cmp
ja
ret
loopne
mov
repnz
jne
mov
jmp
add
or
inc
and
ins
pop
sub
pop
jo
and
movs
and
add
mov
bound
inc
push
mov
(bad)
in
xchg
call
call
mov
or
cmp
in
rdpmc
gs
mov
jg
inc
ins
push
fnsave
sbb
dec
cmp
call
jbe
sub
mov
call
frstor
add
pop
jle
test
pop
add
aas
and
xor
mov
cmp
bound
outs
stos
sbb
sti
inc
and
adc
or
jmp
mov
into
push
mov
jmp
mov
mov
xchg
cmp
jne
lahf
and
or
pop
mov
mov
sub
loope
adc
lock
xchg
push
call
pop
sti
jnp
mov
and
sbb
ja
mov
add
sbb
jbe
sti
mov
and
jmp
call
cmp
adc
sub
add
mov
clc
sub
add
cs
call
fnsave
add
sbb
sar
aas
imul
adc
aad
push
jne
mov
call
adc
fisttp
or
jmp
pop
call
call
pop
mov
jmp
add
jnp
adc
mov
mov
mov
call
sbb
mov
pop
ret
call
arpl
xchg
or
mov
neg
jecxz
dec
je
adc
ja
std
add
mov
jl
xor
or
sub
cs
lods
or
pusha
iret
sub
mov
test
mov
push
mov
out
add
outs
pop
test
or
or
or
xor
cmp
call
jne
mov
mov
mov
stos
jo
fucomp
adc
push
icebp
push
mov
xchg
jnp
mov
je
xor
or
(bad)
retf
jg
xor
stos
sbb
mov
cmp
je
pop
cmp
jmp
iret
call
xor
fucomip
dec
or
clc
pop
das
jmp
and
adc
jl
(bad)
xor
pop
dec
pop
test
dec
or
add
jo
jmp
push
call
out
jbe
or
or
call
(bad)
gs
push
mov
lea
call
jne
push
mov
mov
ret
and
cmp
push
jne
and
mov
pop
mov
push
push
push
call
and
(bad)
add
or
jne
add
retf
add
pop
pusha
xchg
fist
popf
(bad)
cld
inc
pop
pop
jmp
mov
popf
retf
mov
pop
in
ror
push
cmps
test
(bad)
adc
jne
sub
std
fdiv
into
xor
ror
dec
mov
jl
into
jae
and
call
in
outs
js
iret
call
sbb
push
push
inc
xor
hlt
dec
cld
jmp
pop
jmp
push
ja
iret
je
sbb
ja
or
(bad)
std
mov
push
push
call
neg
call
leave
add
push
add
push
outs
call
call
sbb
xchg
mov
pop
les
xor
pop
les
mov
cmp
fist
or
inc
sbb
cmp
jne
push
(bad)
(bad)
jg
inc
and
push
jmp
push
push
push
call
jmp
push
push
pop
lea
scas
sbb
rep
cmp
or
stos
sbb
push
call
pop
cmp
out
sub
jle
in
in
pop
dec
mov
and
lea
fstp
push
pop
call
ins
or
je
call
mov
inc
mov
rcr
push
or
xlat
stos
ja
call
and
call
inc
add
xor
mov
out
clc
add
push
call
mov
sar
arpl
inc
pop
mov
pop
ret
mov
xor
add
test
jne
push
call
push
mov
(bad)
and
add
dec
nop
call
pusha
pop
add
adc
jne
add
and
or
hlt
sub
sub
push
pop
mov
shr
xchg
cmp
jge
mov
cmp
cld
push
or
push
add
push
dec
cmp
shl
and
add
dec
push
mov
or
mov
and
dec
in
jne
jge
add
dec
hlt
jle
or
lock
inc
cmp
mov
call
shl
jne
cmps
(bad)
jg
xor
sub
mov
out
(bad)
(bad)
sub
cmp
jle
mov
mov
cld
mov
add
cmp
jge
(bad)
(bad)
(bad)
call
add
mov
dec
cmp
mov
jl
mov
cmp
je
mov
push
shl
lea
or
call
inc
enter
and
inc
or
inc
or
mov
mov
mov
xchg
jg
and
cmp
jge
add
mov
lock
(bad)
lea
mov
movs
add
cmp
add
cmp
jl
dec
push
pop
inc
sbb
out
test
push
or
lea
mov
lea
outs
loop
jae
call
add
jnp
xchg
sbb
add
or
rcpps
and
xchg
js
jp
jg
call
fcomip
das
stos
push
mov
cmp
pop
pop
mov
push
xor
inc
or
adc
and
mov
div
mov
movzx
lea
jae
inc
add
mov
cmp
ins
js
call
int3
adc
lahf
imul
inc
fimul
cs
dec
add
xor
push
add
mov
xchg
mov
out
in
punpcklbw
inc
add
enter
in
es
(bad)
aas
push
mov
mov
add
push
mov
cld
dec
or
jae
push
or
mov
pop
inc
clc
dec
cdq
dec
call
les
(bad)
inc
push
push
mov
call
or
loop
hlt
jne
adc
xor
fwait
pop
ret
mov
sbb
out
loopne
icebp
pop
popa
add
sub
(bad)
inc
push
push
fcom
cld
xor
cmp
xlat
dec
sbb
aaa
cmp
dec
call
(bad)
std
push
mov
push
push
adc
shl
(bad)
(bad)
sti
ja
jg
call
mov
jne
push
push
mov
lea
loop
cmp
push
push
jne
lea
jl
aaa
(bad)
fist
push
push
push
call
mov
test
(bad)
fild
sub
ds
(bad)
out
jmp
int
mov
mov
sub
sub
imul
pop
pop
mov
inc
jae
mov
xchg
pop
(bad)
mov
inc
lea
or
jg
shl
ret
lea
mov
(bad)
mov
gs
or
ja
add
cmp
popf
iret
push
sbb
inc
or
std
pop
add
mov
lods
add
mov
inc
sbb
inc
mov
mov
fdivr
add
cs
add
outs
xchg
add
mov
retf
jge
out
xchg
xor
sub
dec
in
sbb
mov
push
call
fmul
xchg
mov
in
fstp
call
fmul
pop
fstp
jp
test
lea
jmp
mov
pop
cmp
fst
cmp
(bad)
or
xor
cmp
inc
xor
inc
cmp
cmc
mov
mov
mov
mov
aaa
call
mov
pop
cmp
mov
lods
cwde
clc
cmp
push
dec
mov
cdq
cmp
sbb
xor
dec
adc
pushf
mov
push
jmp
mov
cmp
je
mov
cmp
dec
xchg
sti
add
jmp
adc
add
call
test
int
cmp
je
push
jmp
inc
ins
pop
test
pop
mov
jne
pop
inc
inc
jg
jecxz
test
je
mov
add
rcl
(bad)
ret
rcl
je
jo
jmp
add
adc
push
adc
jns
loop
loopne
inc
ret
mov
ret
add
or
jge
adc
fist
add
(bad)
fcmovb
push
adc
call
mov
inc
and
mov
(bad)
ret
push
mov
mov
outs
xor
mov
scas
mov
sti
(bad)
dec
fld
xchg
mov
pop
pop
sti
mov
sbb
jmp
pop
cmp
mov
jne
dec
data16
push
call
jne
mov
loopne
loop
pushf
push
test
mov
or
jge
mov
cmp
jge
lods
sub
push
mov
dec
mov
push
add
add
dec
lods
mov
out
fnstcw
sub
mov
les
inc
mov
xchg
dec
inc
pop
cmpxchg
mov
mov
cmp
mov
jl
mov
dec
add
lock
(bad)
(bad)
jg
xor
lea
mov
sub
mov
sub
pop
push
(bad)
ja
imul
mov
inc
cmp
lods
lea
inc
movs
push
call
mov
or
ret
mov
loopne
inc
fmul
aam
push
lock
sub
sub
(bad)
(bad)
mov
dec
sub
add
add
cmp
jle
lea
neg
jg
movs
lea
jmp
lea
or
mov
or
rol
mov
mov
in
push
push
fwait
jb
cmp
(bad)
jg
paddsw
test
jle
push
xor
inc
mov
in
lock
cld
jge
mov
add
popf
call
call
or
xchg
outs
(bad)
(bad)
push
or
cld
and
push
jl
mov
add
inc
lea
lea
cmp
or
mov
and
push
add
push
and
int3
push
add
xchg
sahf
dec
and
and
pushf
mov
jo
and
or
adc
dec
sbb
outs
jo
adc
cld
xor
cmp
mov
scas
mov
test
jne
test
adc
inc
out
mov
fcom
loopne
call
add
push
lea
or
out
push
call
fstp
rol
fimul
xor
cmp
xor
out
push
call
sbb
adc
or
jnp
lea
or
sbb
push
xchg
sub
sub
movs
imul
mov
jp
push
rcl
sbb
dec
(bad)
retf
mov
adc
pop
mov
jmp
push
call
aad
mov
pop
test
jne
stc
mov
push
arpl
adc
pop
pop
sbb
aam
add
lahf
rol
jle
xlat
mov
iret
cmps
(bad)
call
cmp
jle
pop
mov
jne
mov
in
push
lock
call
sbb
sbb
dec
push
mov
push
inc
cld
sub
dec
or
test
and
push
lea
inc
and
pop
je
int3
pusha
pop
jbe
dec
cmp
ret
je
sbb
mov
stos
jle
and
lea
push
aaa
push
xor
std
(bad)
aas
mov
mov
arpl
arpl
scas
cmp
xchg
inc
or
push
inc
call
int3
lea
xor
mov
mov
call
mov
outs
dec
fmul
in
lea
movs
mov
js
mov
ja
or
push
cmp
push
push
call
pop
mov
or
ja
enter
es
pop
in
mov
lods
mov
call
arpl
mov
jno
sub
hlt
and
fisubr
movs
sbb
xchg
and
(bad)
mov
pop
sub
aad
mov
pusha
add
mov
add
les
sahf
(bad)
rcr
cmp
and
xchg
test
push
xor
pop
aaa
adc
mov
call
inc
shl
call
fwait
or
jl
inc
sbb
(bad)
cmp
ds
nop
call
xor
jp
lock
sbb
into
icebp
out
xor
inc
xor
sbb
movs
je
mov
jbe
and
dec
pop
mov
mov
mov
hlt
lods
push
mov
fs
fsub
dec
inc
dec
call
adc
in
and
dec
loopne
or
adc
aas
nop
jb
call
jne
fadd
sub
or
inc
cmc
(bad)
(bad)
jg
pop
and
and
mov
mov
mov
call
jmp
inc
cmc
dec
inc
iret
mov
out
dec
push
cmp
sar
mov
sbb
call
das
test
je
push
xor
sub
dec
push
add
mov
es
jle
inc
call
sbb
add
adc
sbb
mov
sbb
jmp
retf
push
ret
fcmovnbe
xor
in
jns
mov
jge
inc
or
add
dec
movs
call
int3
xor
movs
jbe
jmp
clc
call
sbb
mov
or
and
jb
std
icebp
mov
je
shr
outs
js
lea
call
pop
add
add
sar
sbb
xor
xor
cmp
adc
lock
lea
dec
sti
pusha
mov
inc
lock
das
inc
sub
std
jl
lea
add
rcl
push
call
cmp
jle
loopne
mov
repnz
mov
adc
pusha
out
adc
in
mov
mov
push
mov
push
mov
test
add
mov
sub
adc
cmp
cmp
jge
mov
test
jne
mov
cdq
cmp
dec
adc
test
aam
jnp
inc
mov
mov
call
idiv
daa
std
push
mov
mov
mov
mov
idiv
(bad)
(bad)
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
aam
jg
je
push
pop
lea
rep
dec
sbb
clc
xchg
mov
inc
sbb
xor
xor
je
in
out
(bad)
test
retf
push
call
mov
sbb
add
ror
add
add
outs
mov
pop
jo
js
add
push
mov
aam
pop
mov
and
push
fiadd
or
mov
call
sub
and
add
adc
lds
mov
je
or
add
pop
and
add
in
test
pushf
xchg
or
std
fsub
xor
mov
and
jle
fiadd
(bad)
mov
aaa
add
mov
or
xor
mov
add
dec
out
mov
mov
mov
sar
dec
sub
add
ret
push
call
push
or
sub
into
push
call
jecxz
imul
lods
test
add
pusha
scas
and
inc
les
mov
inc
xchg
clc
ret
ret
mov
sti
sub
inc
sbb
adc
or
mov
call
je
or
ret
(bad)
icebp
(bad)
dec
daa
adc
push
inc
xor
add
fs
in
call
push
xor
push
sbb
mov
push
add
xor
mov
call
sbb
inc
push
mov
push
call
push
or
push
cli
jg
dec
stc
mov
hlt
mov
mov
mov
cmp
add
ins
inc
or
mov
mov
(bad)
ffreep
jne
daa
mov
mov
jne
inc
cmp
jg
retf
mov
and
dec
xor
or
xor
or
xor
ret
fdiv
icebp
cmp
ja
jge
stc
cmp
jl
int3
adc
push
sub
cld
fucomip
inc
mov
pusha
mov
sub
cmp
aas
pop
jle
adc
dec
hlt
jns
(bad)
xor
je
ret
jle
dec
inc
xchg
push
push
call
jg
pop
jmp
mov
sub
cmp
jge
mov
jmp
mov
(bad)
jg
fbld
or
mov
loop
lea
push
sub
add
lea
push
(bad)
fscale
xchg
add
add
cmp
inc
inc
cmp
mov
(bad)
pop
add
add
xchg
and
sahf
mov
or
fistp
sbb
mov
mov
test
mov
pextrw
or
mov
mov
mov
or
fimul
fmul
aam
dec
int3
mov
cmp
jmp
mov
pop
push
lea
repz
neg
aam
push
call
jne
pushf
add
or
test
xchg
push
call
jmp
(bad)
jg
jnp
ds
mov
test
je
mov
cmp
je
mov
add
call
sub
mov
call
or
call
jno
mov
test
pop
mov
cmp
sub
or
call
add
je
and
cmp
push
sub
outs
ret
mov
movs
xor
popa
mov
and
or
mov
cmc
in
add
mov
call
xor
das
cmps
jmp
and
xor
(bad)
stos
loop
imul
pop
xor
add
test
sub
sub
loopne
lea
call
jmp
inc
adc
lock
imul
cld
pop
adc
adc
out
jmp
clc
mov
sar
xor
or
push
loopne
push
jne
pop
xor
and
jge
(bad)
clc
pop
xor
or
or
mov
mov
ror
or
enter
hlt
or
sar
test
je
out
inc
sub
in
sar
in
push
pop
cmp
aas
sbb
pcmpeqb
jecxz
hlt
iret
mov
mov
mov
jne
icebp
adc
sbb
repz
cmp
pop
pop
jl
(bad)
pop
inc
std
in
cmp
jg
dec
mov
aas
xlat
cmp
les
add
adc
dec
cld
jg
mov
cmp
add
jbe
sbb
mov
test
xor
pop
ja
adc
mov
sub
push
cld
mov
sub
sar
sub
ret
jmp
cmp
mov
jl
mov
sar
sub
add
fild
add
sahf
ror
inc
mov
adc
lock
jae
test
adc
jne
or
jl
jge
xor
dec
outs
xchg
push
call
aas
mov
call
mov
jge
sar
push
or
js
dec
inc
jmp
jle
mov
cmp
(bad)
ffree
jge
mov
cmp
mov
adc
cmp
mov
or
cmp
jo
(bad)
rol
mov
adc
pop
sti
adc
sub
(bad)
jg
jmp
mov
mov
mov
mov
cmp
lock
mov
mov
mov
mov
cmp
or
inc
cmp
push
cmp
in
push
mov
into
cmp
fwait
and
ja
mov
add
jns
add
movzx
ret
mov
xor
push
pop
mov
or
out
cli
(bad)
dec
or
dec
adc
sbb
daa
mov
mov
jmp
add
sbb
lea
inc
cld
jmp
and
fcomp
ds
in
sbb
call
lock
jle
shl
mov
cmp
je
dec
sbb
aaa
add
or
les
ins
icebp
call
std
dec
jmp
hlt
mov
add
xchg
add
inc
or
loop
or
adc
dec
jmp
loop
or
jmp
lea
(bad)
(bad)
out
dec
neg
sub
aas
fadd
mov
je
or
icebp
out
stc
add
adc
aaa
jae
jmp
mov
call
or
inc
cmps
out
or
(bad)
xchg
pop
pop
jmp
je
inc
push
mov
cmp
jle
in
std
scas
fisub
push
lea
push
mov
mov
sub
ficom
mov
pop
push
and
retf
xor
icebp
call
or
or
and
jle
cmp
pop
loop
cmps
cli
call
pop
pop
call
ss
xor
das
aas
push
xor
cmp
pop
loopne
inc
(bad)
ja
std
aam
sbb
or
jmp
or
jnp
inc
pop
pusha
ficom
rol
mov
test
je
sub
in
inc
mov
xchg
mov
mov
dec
ret
fimul
push
cmp
push
push
je
mov
fisttp
xor
test
jbe
mov
pop
or
movs
mov
dec
ja
jne
or
mov
and
call
cmp
iret
jle
movs
add
mov
mov
call
xor
jnp
pop
pop
cmp
xchg
sbb
sbb
pop
out
cld
add
jle
pop
pop
pop
ret
add
push
and
leave
jne
mov
jne
push
push
call
jae
xchg
sub
xor
mov
mov
xor
inc
shl
cmp
cmp
mov
aam
scas
fldcw
lea
mov
jne
or
call
lock
sub
jne
mov
and
in
push
pop
mov
idiv
dec
fld
cdq
idiv
inc
inc
in
or
clc
sbb
in
cmp
mov
scas
lock
imul
mov
add
lock
pusha
mov
add
mov
cmp
adc
(bad)
pop
cmp
dec
sub
jl
jecxz
add
or
(bad)
lock
cmp
fidiv
or
pop
enter
std
inc
test
or
adc
loopne
sub
sub
inc
rcr
push
aam
out
fstp
add
je
fst
aaa
adc
test
fild
or
and
enter
fst
enter
inc
jne
jmp
or
sar
jle
jmp
sub
shr
fdivrp
cmp
jg
mov
lock
cmp
or
push
push
call
jnp
or
iret
sbb
mov
xor
and
sub
out
mov
(bad)
call
mov
mov
je
dec
je
dec
dec
jne
mov
(bad)
mov
idiv
jmp
cmp
jle
jmp
push
jge
mov
xor
mov
cmc
mov
adc
adc
or
mov
add
jne
(bad)
popf
sti
jg
adc
sar
or
test
je
es
cmps
or
jmp
test
mov
pop
dec
es
clc
jmp
add
shl
add
sar
mov
mov
scas
je
call
sub
(bad)
call
push
enter
inc
std
call
inc
hlt
fmul
call
fild
sub
mov
clc
in
(bad)
jne
fmul
call
sub
or
in
jg
out
sub
ins
enter
adc
sbb
pop
imul
adc
cld
sub
lea
loop
inc
not
and
and
cmp
mov
je
cmp
add
aad
adc
pop
(bad)
call
or
add
dec
adc
mov
cmp
call
loopne
xchg
mov
cmp
je
push
call
aad
lock
jp
fld
clc
mov
pusha
adc
fld
fld
push
ins
fld
mov
push
jnp
jmp
(bad)
dec
pop
jne
or
(bad)
(bad)
(bad)
cmp
add
xor
or
mov
cmp
jne
mov
cmp
jne
jg
call
mov
cmp
jne
mov
jne
or
cmp
je
jno
mov
mov
adc
std
es
jne
mov
rep
or
gs
xchg
cmp
setne
inc
aas
mov
stc
jmp
daa
push
pop
or
add
jb
stc
jb
or
rsm
pop
scas
sbb
stc
add
mov
push
pop
jne
push
fidivr
mov
or
mov
jne
pop
iret
and
add
in
test
cmp
sub
inc
cld
pop
scas
pop
mov
cld
pop
aam
mov
inc
push
clc
ja
mov
mov
dec
sbb
xchg
rcl
arpl
ins
ja
(bad)
(bad)
pop
cmp
mov
mov
stos
mov
cmc
pop
lods
shr
push
loope
inc
cld
fild
sub
test
mov
into
and
aaa
das
fidiv
fstp
fcom
enter
rcr
jp
or
add
dec
sar
jge
jmp
outs
jb
scas
mov
add
add
js
shr
cmp
hlt
mov
push
call
sbb
inc
or
inc
or
sbb
fsub
(bad)
call
push
add
cwde
mov
inc
rol
fisttp
push
cwde
push
call
in
ret
test
push
scas
jle
inc
push
mov
pop
pop
jmp
sbb
pop
ins
jbe
jmp
jbe
adc
into
aad
loopne
xor
out
xor
ror
pop
psubsw
jnp
mov
jne
add
cmp
je
xor
sar
xchg
add
or
inc
test
jmp
ja
call
cld
rcl
movs
inc
call
dec
cmps
sub
sub
sub
sbb
add
fmul
sub
jnp
scas
cmp
dec
pop
sub
and
movs
rcr
sbb
and
and
sbb
sbb
nop
sub
fs
or
and
jb
(bad)
rcl
dec
xor
je
adc
sar
sub
push
mov
lea
sub
mov
jle
lea
jmp
lea
push
push
call
mov
dec
or
test
push
call
push
adc
loopne
das
push
push
mov
mov
je
jge
cmp
(bad)
aas
sbb
or
ret
or
je
cmp
jne
and
or
ret
pop
lea
mov
cmp
je
dec
cmp
je
lea
adc
cmp
je
test
js
retf
test
sbb
push
push
cdq
call
lea
or
jg
out
jo
pop
or
je
in
add
or
add
add
lea
jmp
cmp
cld
cmp
jge
(bad)
mov
push
rcl
lds
inc
or
call
push
push
add
mov
add
(bad)
(bad)
call
push
adc
xor
dec
push
add
out
dec
cld
dec
pop
dec
sub
dec
add
dec
je
adc
dec
adc
loop
mov
(bad)
call
pop
jae
mov
inc
and
push
inc
or
jmp
fisubr
(bad)
jae
call
or
add
ret
mov
xchg
test
sub
test
add
pop
or
mov
clc
push
mov
test
je
mov
je
pop
add
je
in
aas
repnz
fild
mov
call
imul
adc
(bad)
adc
inc
cmp
js
adc
add
lock
add
dec
jmp
add
call
pop
cmps
les
add
inc
in
(bad)
push
call
scas
sar
call
es
pop
or
and
(bad)
cs
out
cmp
je
push
call
je
mov
push
sbb
mov
add
mov
mov
or
or
mov
inc
dec
into
icebp
nop
mov
into
add
inc
(bad)
adc
(bad)
(bad)
jmp
pop
push
push
lea
mov
mov
test
je
cmp
jge
add
jmp
mov
inc
adc
or
or
adc
mov
jmp
cs
addr16
das
jnp
sbb
inc
or
test
jne
ja
mov
iretw
call
and
or
cmp
fcomip
mov
mov
push
mov
mov
call
jnp
adc
or
dec
dec
es
cmp
inc
and
sbb
ja
push
call
push
fsubr
stos
out
push
jmp
ja
xor
jmp
sub
shr
mov
dec
dec
push
call
fwait
outs
sub
xchg
mov
sbb
mov
push
lock
pop
pop
and
or
or
nop
add
sbb
inc
and
xlat
outs
lods
(bad)
fild
adc
mov
add
rol
rcl
lea
clc
and
into
in
pop
scas
inc
and
xor
cmp
(bad)
lahf
sbb
mov
mov
add
mov
jns
mov
lods
test
sbb
cmp
fiadd
cld
adc
inc
or
test
lea
push
jnp
ret
ja
adc
push
push
call
cld
add
cmp
pop
pop
jne
pop
(bad)
adc
iret
adc
or
pop
or
push
je
sti
push
dec
push
jmp
rol
mov
pop
push
push
call
mov
jmp
mov
mov
adc
std
lahf
mov
jne
push
push
call
lea
inc
in
in
dec
call
jp
adc
(bad)
push
sbb
ror
jmp
mov
xchg
dec
cdq
cwde
or
cmp
(bad)
(bad)
inc
push
mov
mov
je
push
add
mov
lea
push
add
call
mov
call
mov
cmp
mov
ja
mov
call
push
and
in
or
mov
dec
pop
cmp
(bad)
out
call
push
push
call
in
call
jb
icebp
in
push
dec
fld
xchg
fstp
adc
lea
push
call
sbb
jne
mov
mov
call
and
cmp
or
jbe
mov
mov
jmp
and
jae
xchg
mov
fistp
inc
les
pop
ret
je
jg
jge
xor
mov
add
call
xor
sub
outs
sbb
pop
add
pop
call
(bad)
mov
and
ds
xchg
or
fs
mov
(bad)
jmp
and
mov
mov
mov
call
xor
pop
inc
sar
je
xor
xchg
(bad)
dec
out
fbld
mov
int
ret
ficomp
jg
pop
mov
mov
call
stc
jg
push
push
mov
mov
call
inc
cmp
fidiv
sbb
xor
add
dec
int
dec
mov
push
mov
push
lea
dec
ja
dec
shr
test
inc
clc
xor
fdivr
adc
or
std
or
add
pop
and
(bad)
call
pop
pop
pop
mov
test
je
call
mov
add
sub
(bad)
call
jno
xor
cmp
jne
cmp
je
mov
push
call
pop
(bad)
fld
xor
push
mov
rol
out
test
dec
sbb
push
call
retf
push
sbb
(bad)
adc
call
loope
sub
push
(bad)
add
inc
or
sbb
sbb
test
int3
(bad)
adc
adc
push
mov
push
sahf
ret
mov
and
aaa
lea
loop
mov
ins
sar
sub
xlat
sti
inc
add
call
popa
and
and
jp
inc
and
jmp
xchg
inc
call
xor
and
sub
adc
push
ds
fwait
sbb
mov
call
call
mov
xrelease
mov
sahf
sub
fidiv
cld
pop
aam
dec
xor
dec
and
daa
inc
lea
call
(bad)
sbb
popf
call
add
je
xor
(bad)
fld
push
and
jb
icebp
pusha
lahf
ins
push
pop
sbb
fst
or
pop
(bad)
fnstsw
adc
aaa
add
call
into
adc
mov
push
adc
mov
add
mov
cli
inc
sub
mov
jmp
ss
icebp
and
loop
xor
mov
sahf
dec
mov
mov
sahf
xor
fdiv
mov
push
cmp
mov
aaa
mov
adc
jo
sub
sbb
adc
push
dec
adc
dec
xor
ja
fimul
add
sahf
les
push
out
xchg
pop
mov
(bad)
mov
mov
or
adc
nop
jno
xor
(bad)
call
mov
jle
jne
cmp
je
mov
mov
push
push
lea
inc
inc
sbb
call
mov
sub
jo
dec
adc
pop
retf
push
xor
scas
das
pop
cld
jne
adc
adc
sahf
push
inc
clc
push
jge
cmp
jne
and
add
scas
add
loop
xchg
mov
in
inc
inc
test
mov
mov
je
cmp
add
mov
test
mov
je
cmp
jl
out
jle
dec
nop
push
pop
sub
pop
or
fmul
(bad)
cld
jne
mov
mov
(bad)
adc
and
jne
mov
mov
sbb
xchg
lods
stos
adc
fcom
cli
jno
jmp
leave
mov
lea
jae
xchg
cmp
dec
std
ret
add
call
call
rol
call
or
jge
inc
inc
imul
or
jg
add
push
(bad)
xor
adc
mov
mov
shr
outs
push
push
neg
sbb
mov
push
fimul
push
push
call
inc
mov
pop
out
jne
push
movs
dec
ror
mov
xor
inc
adc
sub
fcmovnbe
std
mov
movs
mov
lea
adc
pop
(bad)
pop
sar
mov
cmp
je
cmp
jne
push
lea
pusha
add
cmps
(bad)
(bad)
dec
and
call
mov
or
mov
inc
sbb
mov
mov
pop
cmp
aad
and
adc
loope
sub
jmp
and
(bad)
mov
add
cmp
jl
popf
and
jae
dec
push
mov
shr
not
mov
xchg
and
leave
and
outs
cmp
push
je
cmp
je
ja
inc
or
mov
pop
and
add
aaa
add
mov
stc
or
rcl
and
push
call
pop
std
das
cmp
sub
sbb
mov
inc
dec
js
out
call
or
jo
push
jp
jg
sbb
add
push
mov
cmp
add
adc
call
jo
xor
cmc
sbb
and
test
and
ja
shl
lea
clc
movs
pop
cmp
push
mov
(bad)
(bad)
in
call
pcmpeqw
mov
push
(bad)
fisubr
push
call
jo
ins
pop
rcl
inc
add
inc
and
pop
hlt
add
in
lea
inc
xchg
push
add
push
call
sti
add
jmp
push
call
test
pop
jne
xor
xor
jmp
ss
inc
cmp
add
push
std
mov
test
popf
mov
mov
je
and
inc
mov
mov
pop
inc
dec
add
or
out
ja
adc
shl
sub
push
lea
pop
in
out
call
push
call
mov
mov
jmp
pop
call
lea
push
call
daa
ror
and
sub
sbb
and
pop
mov
inc
lock
fwait
sbb
sbb
outs
clc
or
push
add
xchg
add
jmp
add
bound
cmc
pop
cld
fdivrp
dec
icebp
dec
mov
aam
pop
push
push
mov
call
pop
sub
add
fbstp
mov
or
xor
push
mov
mov
call
lea
adc
call
push
call
retf
jle
mov
and
out
fstp
push
out
call
or
retf
fst
mov
fstp
mov
call
sbb
retf
dec
sbb
jns
je
lea
push
call
inc
adc
fadd
push
mov
or
xor
adc
cmp
pop
add
jne
je
mov
cmp
jne
mov
mov
je
sbb
mov
push
fidivr
add
mov
aad
mov
mov
call
adc
push
jno
add
fsub
test
arpl
iret
mov
jg
sub
inc
push
pop
shl
sbb
adc
mov
mov
in
or
cdq
out
mov
dec
and
call
add
inc
or
sar
aaa
jl
lea
cmp
mov
mov
mov
mov
je
cmp
xor
xor
sbb
cmp
xor
call
push
jl
(bad)
mov
je
mov
cmp
je
mov
push
xor
mov
jmp
sbb
pop
aas
in
retf
add
jmp
add
test
add
call
inc
mov
cmp
mov
sti
dec
dec
fcomp
mov
jns
adc
mov
into
jne
or
add
rol
add
inc
inc
fdiv
mov
jo
jg
sbb
add
pop
xor
inc
sahf
pop
push
and
lea
mov
sti
mov
adc
sar
add
sbb
call
loopne
test
in
jecxz
cli
lea
call
std
(bad)
cld
(bad)
push
or
call
jo
or
loope
shl
imul
pop
fdivr
xor
in
call
std
dec
ins
jae
adc
shl
dec
and
in
mov
add
or
inc
mov
jo
pop
pop
inc
test
or
enter
movzx
mov
push
fsubp
mov
out
cs
xor
mov
inc
sbb
mov
outs
cmp
jg
bnd
test
fidivr
je
pop
in
daa
std
cs
test
cmp
inc
or
je
sbb
sbb
mov
or
push
mov
pop
cmp
in
ds
or
(bad)
das
sub
add
fnstsw
movs
outs
mov
push
push
movs
cmp
xor
dec
adc
mov
in
mov
lock
xchg
je
loopne
jne
imul
inc
cmps
iret
call
lea
push
call
mov
mov
mov
lea
int
cmovae
rol
and
call
jge
sbb
or
mov
mov
mov
jg
inc
jmp
in
jg
xchg
(bad)
jno
inc
cmp
add
addr16
mov
adc
or
inc
mov
inc
cmc
out
(bad)
sub
jle
rcl
ret
or
add
mov
push
cmp
push
mov
popf
loope
cld
xor
mov
push
push
push
lds
(bad)
push
pop
cmp
and
iret
mov
call
cmp
sti
addr16
jmp
cmp
xor
or
aas
mov
and
je
mov
inc
ds
push
call
xor
(bad)
jnp
mov
dec
ins
mov
sbb
push
jne
ret
jne
cmp
sbb
sbb
jne
mov
outs
sbb
push
test
mov
lahf
(bad)
push
ror
xchg
push
inc
sub
jne
push
push
add
pop
add
xchg
std
or
add
adc
mov
add
movzx
sbb
retf
jg
fidiv
mov
cmp
aad
cmp
push
add
mov
cmp
add
mov
cwde
das
sbb
jp
cmp
cmp
cmp
dec
not
pop
pop
scas
data16
cmp
inc
cmp
pop
inc
(bad)
mov
scas
jne
push
push
std
pop
dec
xor
push
lds
ret
adc
xor
inc
pop
add
repnz
pop
jmp
rcl
enter
pop
iret
call
push
jno
mov
push
in
(bad)
fcomi
(bad)
cld
cmc
out
jecxz
shr
jecxz
push
or
pop
rdpmc
ror
popa
cli
mov
retf
mov
call
sti
mov
fldcw
jge
test
rcr
(bad)
jmp
sbb
cmp
jmp
sub
je
enter
push
sub
xor
pop
test
inc
jne
sub
inc
popf
and
ds
cmp
test
cmc
inc
pop
(bad)
(bad)
adc
adc
test
mov
mov
in
bndstx
cmp
mov
pusha
mov
and
rcr
push
and
and
(bad)
mov
push
mov
mov
mov
mov
mov
jge
hlt
inc
mov
mov
call
pusha
mov
fs
cdq
fidivr
push
add
mov
iret
jmp
dec
mov
call
cmp
loope
push
xchg
iret
call
push
call
pop
push
(bad)
call
and
stos
push
call
lea
jno
aas
mov
dec
cld
push
or
jno
scas
and
add
inc
cmp
dec
mov
add
mov
mov
int
xchg
pop
jb
add
push
or
mov
(bad)
fiadd
push
ror
dec
leave
dec
pop
ficom
inc
mov
inc
test
je
pop
sahf
xchg
sbb
jmp
jbe
push
lods
adc
test
sbb
test
add
test
sti
outs
ret
add
push
hlt
push
movs
retf
call
call
mov
xor
cmp
add
or
ret
xor
jmp
ds
mov
or
repz
call
shr
or
or
imul
test
sbb
enter
dec
clc
jmp
imul
mov
add
add
cmp
or
ret
mov
cmp
fisttp
repz
(bad)
xchg
rcr
dec
cdq
mov
xchg
and
sbb
pusha
pushf
mov
xor
(bad)
and
xor
popf
(bad)
leave
jp
push
ja
mov
iret
call
push
mov
jb
sbb
push
call
jmp
push
push
jmp
mov
inc
push
push
or
push
(bad)
mov
(bad)
mov
adc
call
je
cld
call
aas
in
xchg
sbb
jge
cmp
iret
je
inc
int3
call
and
push
push
mov
mov
inc
call
stc
mov
call
test
jmp
mov
dec
jne
test
stc
push
cmp
xchg
into
mov
(bad)
call
xor
push
push
push
mov
pop
push
push
lea
call
lock
sub
mov
call
mov
out
push
addr16
iret
jle
(bad)
dec
lea
push
call
push
push
inc
mov
xchg
popf
and
pushf
dec
push
add
jnp
inc
jno
cld
dec
cmp
jne
cmp
jle
add
add
lahf
stc
mov
dec
cmp
je
fcomp
ffree
paddd
or
adc
into
call
dec
dec
xor
je
mov
call
push
add
mov
rcl
mov
call
mov
aaa
ror
jmp
pop
imul
shl
add
pop
mov
push
cwde
pop
mov
sub
aas
stos
dec
push
call
pop
cmp
cmp
xchg
add
add
add
push
call
cmc
adc
push
or
lock
mov
jg
std
push
test
jne
push
cmps
or
push
mov
inc
aas
add
dec
pop
or
pop
jmp
jne
(bad)
add
aas
dec
dec
mov
repnz
je
popf
adc
add
es
mov
aaa
mov
add
mov
jl
scas
and
adc
out
fist
add
inc
hlt
or
mov
mov
ja
lock
sub
add
cmc
cmp
ins
inc
inc
lahf
jp
jge
add
std
dec
clc
mov
lea
push
add
call
std
scas
mov
push
call
xchg
outs
or
jmp
fdivr
mov
sbb
enter
or
test
loop
mov
inc
sbb
fwait
dec
add
inc
jmp
mov
pop
jne
xor
test
adc
fist
pop
cmp
jne
outs
add
push
lea
add
mov
push
push
lea
push
call
add
arpl
leave
jg
mov
mov
shl
aaa
les
cmp
jne
pop
mov
jg
iret
add
or
or
gs
aas
add
mov
cmp
add
out
add
je
and
xor
into
sub
enter
inc
add
jnp
out
xchg
sbb
in
frstor
jge
mov
lea
loop
push
push
cmp
jne
mov
adc
(bad)
mov
xchg
cmp
pcmpeqw
fs
jmp
mov
push
mov
sbb
mov
(bad)
cli
popa
je
cmp
jne
popa
movlps
adc
cmp
ss
ret
int
ret
sub
fstp
xchg
fwait
movzx
test
inc
pop
je
(bad)
jmp
jl
sub
ss
inc
add
dec
and
hlt
mov
mov
adc
test
je
retf
xchg
jo
loopne
inc
cmp
leave
add
dec
loopne
stos
stos
adc
pushf
jnp
add
mov
test
inc
into
cmp
dec
push
inc
iret
call
dec
pop
iret
call
adc
and
dec
lock
mov
jg
mov
mov
jne
mov
mov
add
push
or
das
neg
xchg
dec
or
jmp
or
sub
lock
add
out
add
or
ja
jne
mov
icebp
ins
mov
lea
cmp
push
cdq
jne
push
adc
(bad)
jge
cmp
sub
retf
mov
xchg
outs
mov
mov
mov
fdivrp
mov
or
jne
and
add
cmps
mov
cmps
mov
adc
xor
outs
push
add
sub
cmp
movs
inc
loopne
push
popa
push
push
push
pop
push
call
pop
cmp
das
lahf
data16
scas
xor
mov
(bad)
inc
jmp
xor
iret
call
cmp
push
jb
ss
(bad)
cmp
inc
push
jge
test
jl
inc
and
add
je
adc
add
ret
pop
mov
xor
cmp
scas
clc
sub
addr16
enter
mov
lods
or
cld
dec
mov
cld
cmp
cmp
cdq
je
not
push
ret
xor
mov
(bad)
push
mov
jmp
push
cmp
jno
or
xchg
retf
sbb
hlt
and
add
dec
pop
leave
ret
aaa
mov
sub
jge
ins
jp
je
dec
cmp
jmp
add
push
mov
fbstp
outs
repz
mov
shr
and
cmp
call
jne
sub
xchg
test
test
(bad)
sbb
cdq
mov
mov
test
adc
outs
cmp
call
mov
call
cli
jl
or
call
sbb
inc
js
je
dec
je
dec
je
push
(bad)
cmp
pop
inc
mov
jg
fwait
add
add
xchg
cmp
sbb
je
aas
fcmovbe
push
or
jmp
jmp
mov
jmp
das
xor
push
(bad)
mov
jmp
xor
or
mov
shr
push
std
(bad)
(bad)
jg
jge
mov
mov
mov
jo
mov
call
cmp
mov
push
mov
(bad)
and
pop
mov
fld
outs
jmp
xor
cmp
mov
sbb
mov
dec
popa
push
ret
call
fsubr
dec
or
sub
mov
jmp
js
ret
aam
out
es
inc
mov
add
add
mov
add
mov
push
jne
mov
inc
sar
push
cmp
add
push
dec
aam
lea
les
sti
dec
inc
call
adc
data16
(bad)
xor
dec
pop
mov
idiv
jne
je
push
loop
int
sbb
xor
or
ss
push
adc
(bad)
jne
call
(bad)
(bad)
jg
or
dec
leave
add
call
cmp
pop
je
mov
mov
mov
mov
idiv
jg
pop
dec
cld
lea
push
call
test
je
dec
je
and
call
inc
out
inc
mov
jmp
mov
mov
movzx
(bad)
(bad)
push
mov
movzx
movzx
clc
cmp
jne
test
dec
test
mov
push
call
xor
jge
add
test
je
jmp
loopne
jecxz
gs
xor
aaa
dec
add
mov
je
sub
push
xor
push
dec
add
dec
cld
pop
icebp
je
call
push
call
pop
je
pop
test
test
mov
adc
pop
(bad)
frstor
jl
je
js
dec
push
shl
and
call
(bad)
dec
ror
add
leave
ret
in
add
mov
xor
cmp
mov
clc
mov
mov
ja
jmp
mov
imul
cmp
ss
jbe
xor
jmp
sbb
adc
add
jmp
mov
jge
sbb
call
stos
pop
inc
or
or
repz
mov
jl
sbb
mov
std
fistp
dec
cli
inc
test
(bad)
jmp
mov
add
adc
mov
cmp
je
call
jl
(bad)
popf
sbb
jmp
add
xor
stos
test
inc
cld
call
jmp
shl
ret
je
add
jmp
or
loop
jle
inc
hlt
cmp
xor
je
outs
stos
ret
inc
jmp
jne
mov
cmp
cmp
rcr
or
push
push
(bad)
jg
add
cmp
mov
mov
jne
push
and
cmp
inc
inc
mov
shl
test
pop
push
call
sahf
lock
add
push
mov
std
inc
je
push
dec
pop
xor
rcr
dec
call
cmps
cmp
iret
jmp
(bad)
inc
pop
lods
mov
in
push
jmp
(bad)
jg
ret
xchg
into
imul
mov
push
dec
test
inc
les
mov
xor
or
jmp
add
(bad)
mov
test
adc
inc
lods
mov
mov
inc
cmp
jne
(bad)
fucom
mov
push
jo
add
add
mov
loop
inc
push
add
pop
cmp
je
retf
shl
outs
pop
or
je
scas
xor
loope
adc
(bad)
mov
retf
shl
dec
std
jge
lds
je
push
(bad)
rol
adc
(bad)
(bad)
(bad)
loope
inc
or
ret
je
dec
je
dec
je
dec
je
sub
je
dec
je
dec
mul
jmp
or
sub
mov
enter
cmp
je
jo
sub
push
mov
movs
mov
cmp
mov
test
inc
cmp
mov
push
jge
sub
sbb
pop
jle
push
sub
lea
sbb
dec
xor
mov
mov
test
je
push
lea
test
loopne
(bad)
gs
cmp
jl
sub
rol
shl
test
call
das
clc
cmp
jg
cmp
jne
mov
mov
call
ret
sbb
dec
add
cli
jmp
cmp
sbb
scas
enter
cmp
outs
cmp
and
inc
mov
mov
push
cmp
jle
call
and
or
xchg
mov
push
call
dec
jne
mov
push
mov
call
pop
repz
rcr
or
add
retf
add
je
sub
and
push
add
dec
ror
icebp
mov
push
jg
call
or
stc
or
jmp
cli
rcl
xchg
test
pop
mov
push
sbb
and
inc
jg
cmp
xor
or
push
ins
sbb
add
adc
sbb
mov
add
outs
je
in
aad
test
jmp
mov
inc
adc
adc
ja
call
pop
jle
cmp
jne
and
cmps
and
pop
das
cmp
(bad)
(bad)
stc
add
cmp
jle
cmp
je
cmp
je
in
jne
cmp
je
push
mov
jl
add
arpl
or
neg
jne
mov
jne
call
jmp
neg
pop
js
xchg
jne
mov
ror
inc
mov
push
rol
popa
push
inc
jmp
iret
ss
push
cmp
dec
add
fcomp
cmps
cmp
inc
or
mov
mov
dec
sbb
mov
dec
inc
pop
mov
mov
and
sbb
dec
in
sub
add
adc
inc
inc
mov
lds
sub
or
fbstp
cmp
pop
je
mov
sbb
xchg
sub
call
mov
push
mov
sub
rol
xor
add
pop
or
cmp
jecxz
pop
lea
or
aad
bound
or
cmps
xchg
sub
je
mov
je
jae
shl
dec
mov
test
jne
xor
jmp
push
mov
call
inc
xor
pop
adc
lea
sar
jne
mov
xchg
xchg
xchg
xchg
clc
addr16
pop
clc
jmp
lea
cld
xrelease
mov
jae
xchg
inc
adc
push
or
dec
je
rcr
jmp
je
call
ja
out
retf
push
jmp
add
jne
or
iret
fdivr
push
jmp
mov
cmp
jne
adc
push
jmp
call
out
dec
sub
mov
je
push
jmp
push
push
jmp
inc
(bad)
fnstsw
cmp
add
push
push
jmp
test
je
cmp
(bad)
pop
jne
adc
push
jmp
mov
call
adc
push
xchg
pop
lahf
sar
jp
jp
in
ins
add
jnp
fcomip
add
retf
je
push
pop
jno
sbb
or
inc
sub
inc
cld
je
inc
adc
loopne
loop
adc
jne
adc
lds
or
add
jge
jp
loopne
punpcklbw
sub
call
gs
sahf
push
push
mov
(bad)
(bad)
jmp
lea
rcr
xchg
adc
dec
jne
or
iret
call
add
add
shl
fwait
mov
mov
add
ret
inc
dec
mov
xor
inc
xchg
add
or
imul
mov
adc
sbb
sbb
adc
(bad)
dec
mov
(bad)
cmp
and
out
std
js
xchg
push
and
shl
inc
hlt
(bad)
jns
push
mov
push
call
mov
jne
pop
out
mov
call
xchg
call
and
push
test
mov
fild
popa
fcomip
ja
hlt
sbb
mov
dec
and
add
cli
inc
add
push
and
cmp
jae
sub
mov
sti
inc
mov
dec
add
test
mov
icebp
jne
int3
mov
cmp
je
cmp
jl
xor
cdq
cmp
ret
mov
mov
mov
inc
mov
ret
cmp
jmp
cmp
sbb
mov
rcr
inc
into
or
mov
push
mov
retf
ret
cmp
ja
lock
cli
pop
inc
mov
test
cmp
(bad)
clc
cld
xchg
pop
je
push
push
add
xor
sub
rol
cmp
mov
pop
test
or
iret
mov
call
push
push
call
mov
add
fucomi
or
(bad)
jae
add
dec
push
push
hlt
push
lea
call
mov
pop
std
call
sbb
pop
adc
push
call
jae
(bad)
aam
inc
pop
sub
aam
popa
jle
out
pop
in
out
(bad)
push
xor
mov
mov
or
dec
and
mov
lea
inc
push
mov
pop
mov
and
icebp
out
out
sbb
or
mov
xchg
ins
clc
mov
add
nop
mov
or
mov
mov
fidivr
icebp
fnstcw
stc
cld
(bad)
cmp
fdivr
push
lea
call
das
jle
sbb
cmp
mov
popa
div
push
and
out
dec
lea
or
(bad)
jne
call
push
pop
pop
pop
pop
scas
mov
jno
sub
add
das
adc
(bad)
(bad)
frstor
adc
add
xor
fdivrp
dec
mov
es
cmp
mov
and
retf
test
xchg
dec
(bad)
inc
push
call
ret
cwde
scas
jnp
cmp
mov
add
inc
mov
cld
jg
add
test
or
pop
inc
es
aaa
ficom
je
mov
adc
icebp
mov
cmp
mov
cmp
push
push
or
test
ins
clc
pop
jbe
mov
add
mov
cmp
cmp
jbe
add
cmp
jb
push
mov
push
sbb
push
mov
mov
add
out
jmp
mov
push
or
add
dec
jb
mov
pusha
push
mov
and
xor
not
pop
fcos
mov
cmp
jne
push
push
mov
scas
add
mov
loopne
push
push
sub
mov
stc
push
push
push
mov
call
push
add
call
test
or
mov
call
(bad)
call
test
js
mov
mov
call
push
push
mov
fdiv
repnz
rcr
adc
adc
outs
cli
aas
je
push
lea
call
inc
in
push
(bad)
fistp
add
jne
mov
call
push
jmp
lock
pop
lock
mov
call
(bad)
(bad)
in
pop
inc
call
lock
pop
jne
mov
fist
pop
hlt
std
cmp
jne
call
(bad)
push
mov
pop
stos
pop
add
cs
sbb
jmp
jge
call
fild
movzx
call
les
ror
out
sub
cld
jmp
sbb
mov
call
je
mov
in
or
add
nop
retf
push
loop
dec
cld
push
mov
xor
test
je
out
and
sti
push
mov
mov
push
not
(bad)
jmp
call
jg
mov
aas
imul
mov
push
push
mov
sbb
test
add
push
xor
sbb
ja
daa
cmp
je
ret
pop
cmc
and
mov
call
retf
arpl
(bad)
call
xchg
push
push
fs
xchg
cli
mov
mov
and
jmp
aad
or
cmp
jne
cmp
jne
cmp
jne
and
call
jnp
je
cmp
jle
mov
das
push
jo
xchg
cmp
in
dec
call
call
xor
add
je
sar
push
call
mov
jmp
ins
jo
fimul
cs
xchg
mov
test
daa
in
popa
data16
icebp
ret
push
je
mov
je
cmp
jne
cmp
jne
test
out
jg
pop
in
cld
(bad)
jmp
repnz
call
xchg
adc
and
inc
dec
adc
add
pop
mov
mov
test
mov
add
cmp
fisubr
and
nop
inc
ins
xcrypt-cbc
inc
xchg
and
push
lock
cmp
adc
movzx
mov
mov
lea
cmps
inc
lock
jecxz
call
and
xor
call
fcom
xchg
cdq
in
das
fmul
call
aad
cli
xor
cmp
gs
adc
mov
call
add
stc
clc
test
leave
sbb
dec
pop
mov
xor
vlddqu
pop
mov
call
call
in
rol
pop
or
lock
sbb
js
or
inc
ret
push
ret
inc
frstpm(287
jo
sbb
mov
mov
and
cmp
inc
js
add
inc
xor
fwait
test
je
jae
mov
cmp
je
test
jne
std
movs
(bad)
fmul
mov
call
mov
mov
jb
test
das
pop
add
sar
jne
cmps
gs
hlt
jge
cld
lea
fisttp
sbb
pop
call
or
pop
push
adc
mov
pop
neg
inc
ror
call
jmp
cmp
mov
fist
mov
ret
push
std
call
jmp
(bad)
cmp
je
mov
call
jmp
je
mov
mov
jmp
cmp
jne
cmp
jne
cmp
je
std
push
test
inc
mov
test
jne
jmp
std
push
cmp
je
loop
ja
adc
push
push
call
or
cwde
test
add
movs
imul
call
out
imul
je
or
cs
push
scas
jmp
scas
mov
adc
jne
mov
cmp
pop
std
(bad)
and
je
popf
popa
push
mov
mov
sbb
push
call
pop
sub
sub
inc
mov
shl
inc
and
and
xor
hlt
pop
retf
call
in
bound
add
adc
lahf
mov
fdivr
pop
icebp
cld
dec
test
(bad)
sbb
mov
call
push
add
push
fistp
call
fsubr
mov
inc
mov
mov
out
enter
jle
mov
sbb
xor
mov
cld
mov
gs
push
lea
mov
add
out
dec
push
adc
push
call
add
fistp
outs
mov
fistp
push
mov
inc
call
call
ins
stos
clc
push
push
mov
jge
mov
jg
test
popf
add
nop
xchg
sbb
call
(bad)
jecxz
cld
call
cs
clc
pushf
jp
push
call
in
rcl
push
push
cmp
inc
clc
push
lea
mov
call
mov
push
cld
cmps
push
push
mov
mov
inc
jnp
out
pop
xor
jne
call
xor
(bad)
(bad)
push
ret
add
dec
add
push
add
add
mov
lidtd
cmp
dec
cld
cmc
dec
pop
jmp
add
fld
call
dec
jbe
mov
mov
mov
sar
pop
or
and
adc
call
lock
pop
cld
pop
inc
push
xchg
cmp
jge
sbb
sbb
mov
cmp
dec
sub
sti
cld
lea
cli
bound
add
scas
(bad)
xchg
dec
add
cld
call
pop
(bad)
(bad)
fdiv
sar
je
push
push
mov
mov
lods
fcomp
mov
retf
retf
call
jns
sub
call
inc
inc
adc
push
inc
call
add
loope
mov
lock
sbb
sbb
jmp
adc
cld
(bad)
xchg
sub
fistp
add
xchg
into
call
jecxz
fdivr
cmc
arpl
push
(bad)
fadd
scas
scas
sbb
aaa
call
call
add
and
pop
mov
shl
jmp
or
psubd
cmp
call
cld
mov
rcl
scas
sub
mov
mov
mov
mov
out
ins
repnz
into
call
jae
push
iret
call
call
dec
fmul
sub
call
je
jo
xchg
ret
sub
loope
cld
mov
out
mov
rcr
add
push
call
test
mov
call
sbb
mov
ds
call
bound
mov
call
ffree
(bad)
sbb
into
call
cld
add
fucomp
dec
mov
clc
jl
test
call
dec
cmc
rcl
in
(bad)
lods
shl
call
jne
push
call
pop
ret
push
cmp
dec
cmp
cld
push
into
(bad)
leave
in
in
out
mov
or
call
cmp
bound
clc
call
inc
fwait
and
mov
cmp
jp
push
adc
jge
push
xor
or
int3
std
add
push
call
xor
cmp
jbe
in
test
popa
or
adc
mov
push
add
adc
push
inc
test
enter
jbe
adc
dec
lock
jo
sbb
fistp
dec
jge
push
xchg
and
push
loopne
mov
in
or
push
mov
shl
es
shr
in
jmp
and
mov
and
dec
hlt
sub
xchg
test
ret
cmp
call
call
fsub
cs
inc
adc
add
loope
das
pop
or
cld
xor
mov
dec
cld
call
cmp
add
xchg
jne
push
add
jmp
push
lea
call
push
(bad)
and
imul
mov
cwde
call
dec
or
sti
adc
sbb
inc
cwde
jne
dec
and
push
adc
lods
pop
sbb
not
mov
dec
imul
jg
and
push
call
jnp
repnz
sbb
loopne
inc
loope
mov
iret
call
mov
mov
add
dec
xor
imul
push
dec
mov
call
je
fiadd
sub
je
or
into
cmp
pop
cld
mov
jle
lea
in
(bad)
cli
into
clc
xor
jmp
or
lods
jg
push
cmp
and
inc
cmp
jl
(bad)
inc
hlt
push
call
mov
push
call
dec
inc
dec
adc
or
dec
add
ins
hlt
icebp
iret
jne
or
iret
call
jg
addr16
sahf
cld
call
jmp
push
pop
mov
ins
add
sbb
mov
xlat
jge
push
dec
xor
dec
sbb
sub
cmps
mov
push
xor
xlat
cmps
clc
movs
popa
or
test
je
jecxz
jle
lock
call
or
add
in
aam
add
rol
add
clc
call
push
std
dec
push
call
jge
call
out
push
add
(bad)
es
(bad)
and
sub
pusha
enter
(bad)
fmul
imul
dec
and
mov
(bad)
dec
push
push
push
call
mov
adc
add
pop
pop
lds
ffreep
and
aaa
sbb
dec
sti
jle
xlat
je
out
add
or
mov
push
inc
sbb
stos
sbb
and
dec
cld
inc
mov
sar
add
push
push
call
add
push
aad
pop
xchg
test
xchg
je
push
push
call
out
sub
adc
add
push
pop
pusha
or
push
cli
pop
add
and
clc
jg
jmp
cmp
dec
add
pop
(bad)
and
add
test
jne
dec
mov
or
xor
retf
mov
bound
jmp
xor
ds
pop
imul
xor
mov
dec
and
rol
fwait
idiv
push
sub
cmp
jne
fucomi
dec
call
mov
jg
cmp
jne
push
push
jmp
push
pusha
out
imul
adc
sbb
mov
retf
pop
je
adc
fadd
outs
xor
(bad)
je
adc
and
lds
(bad)
lahf
jle
in
push
push
mov
sbb
mov
push
mov
in
cmp
push
mov
bnd
or
test
xor
js
cld
sub
ficom
cld
icebp
or
sub
scas
clc
xlat
jle
in
je
lea
call
mov
lock
je
jb
mov
(bad)
jns
add
jmp
sbb
xor
cmp
iret
call
scas
jnp
daa
push
xor
sbb
mov
call
jmp
or
sbb
pop
add
jmp
pop
and
retf
or
dec
fisttp
call
push
lea
(bad)
mov
call
sbb
sbb
adc
jo
or
dec
jg
add
movs
inc
or
clc
jmp
aam
call
imul
lea
add
adc
adc
inc
test
push
je
dec
loope
sbb
push
xor
(bad)
xor
ins
xor
add
sbb
mov
out
out
and
test
je
sub
out
scas
xchg
rcl
mov
add
gs
xchg
mov
std
push
pop
cli
dec
and
dec
movs
add
mov
adc
or
pop
outs
scas
sbb
pop
in
push
or
jns
jo
jbe
jae
jae
sbb
push
mov
(bad)
out
and
xchg
into
call
jmp
iret
icebp
iret
std
lock
call
test
cmp
call
xchg
in
adc
js
inc
(bad)
mov
adc
cli
stos
or
fmul
mov
mov
cmp
jne
mov
pop
jne
dec
out
pop
dec
push
fs
xor
test
hlt
cmps
test
jb
imul
jmp
aaa
adc
inc
cmp
jne
cmp
lock
fbstp
loopne
push
push
je
sub
scas
pop
cli
(bad)
fstp
sar
in
cdq
movs
or
fucompp
xor
sbb
add
jnp
adc
mov
cli
scas
jne
jmp
cmc
sub
out
fbld
stc
pop
mov
test
clc
mov
and
push
imul
ret
mov
addr16
neg
jmp
cmp
jne
test
jne
jbe
(bad)
aaa
mov
or
leave
cmp
setne
mov
jmp
call
adc
sub
push
cmp
dec
mov
rcl
jge
mov
push
jne
jmp
(bad)
out
sbb
jp
clc
mov
and
call
pop
jmp
mov
mov
add
cmp
dec
jne
xchg
call
jle
jo
dec
jo
sbb
je
sbb
call
inc
(bad)
sti
outs
stos
call
lea
mov
call
(bad)
ins
cli
or
call
xor
fsub
pop
inc
sbb
mov
mov
push
jmp
xor
push
push
push
and
pusha
cmc
and
(bad)
gs
pop
scas
push
push
push
pop
lea
jmp
cmp
mov
call
mov
mov
inc
outs
and
or
jmp
es
in
sbb
call
mov
stos
add
into
dec
and
pop
mov
jne
cmp
test
cmp
cmp
leave
out
mov
push
mov
shl
les
sahf
push
dec
inc
cmp
add
push
jne
cwde
mov
jecxz
std
lock
jbe
mov
cld
call
jne
dec
jg
sti
cs
pop
call
add
cmp
or
cmc
inc
sub
pop
adc
sbb
(bad)
pop
pop
xchg
pushf
inc
add
adc
jbe
sahf
clc
add
fsub
or
jle
and
imul
stc
inc
or
call
stos
lea
rcl
or
inc
fmul
in
mov
aaa
std
sbb
and
fst
mov
ja
test
or
xor
xchg
fcmovnu
aaa
or
sbb
inc
aas
cli
add
jo
es
nop
mov
lea
call
hlt
adc
call
mov
(bad)
push
jbe
cmp
pop
mov
popa
pop
sub
adc
das
add
call
into
call
and
push
pop
mov
cld
mov
mov
xchg
inc
dec
std
mov
(bad)
push
adc
jne
ins
ins
jp
rcl
jle
cld
call
or
mov
scas
ins
dec
mov
or
push
mov
jae
(bad)
out
or
dec
ror
(bad)
inc
or
fsub
stos
mov
inc
or
pop
adc
sar
pop
inc
or
call
shr
add
pop
pop
loope
adc
jne
or
mov
push
aaa
sbb
inc
sbb
pop
hlt
jmp
pop
pop
mov
jmp
sub
out
sti
out
add
sub
mov
mov
sbb
andps
sbb
loopne
bound
jmp
stc
ss
out
mov
xchg
sbb
xor
adc
jbe
out
in
or
mov
stc
jbe
sbb
leave
mov
add
int3
or
inc
mov
or
repz
pushf
or
jl
nop
push
jne
sub
repz
pop
mov
repz
mov
cmp
add
out
jmp
mov
jmp
mov
sbb
out
mov
add
adc
push
lock
jne
call
or
fidivr
pop
dec
mov
cmp
or
sbb
call
std
movlps
adc
add
dec
shl
push
popa
xor
shl
jne
mov
popf
cmps
mov
lds
xor
iret
(bad)
fucom
jmp
dec
xlat
aam
stc
add
add
adc
and
aas
inc
inc
aaa
dec
ror
cmp
cmc
fist
pop
or
and
call
aad
mov
jae
mov
inc
jo
add
push
fcomip
(bad)
inc
je
cmp
mov
mov
je
sbb
call
shl
push
jns
adc
jle
add
push
add
loope
jo
call
cmc
jg
or
aas
add
mov
push
neg
jg
and
enter
jmp
sub
push
call
stos
(bad)
jmp
add
data16
add
pop
call
adc
push
cld
and
add
mov
adc
mov
shr
sbb
pop
mov
int3
push
pop
in
fidivr
dec
or
retf
push
add
test
ja
dec
loopne
mov
cmp
je
mov
sbb
inc
dec
cmp
std
and
pop
jg
xor
cmps
cmp
je
call
mov
adc
std
retf
imul
or
cdq
sbb
call
xor
jle
pop
jne
cmp
push
push
out
or
sub
call
mov
pop
pop
push
push
jmp
mov
adc
call
adc
adc
pop
pop
arpl
mov
mov
lock
mov
and
movs
retf
jge
add
scas
sbb
outs
cwde
mov
jne
or
sti
call
mov
mov
call
push
push
test
cld
call
(bad)
lock
jne
mov
add
add
idiv
inc
or
xchg
push
xor
inc
cld
hlt
adc
mov
call
inc
ret
clc
fcmovu
sbb
mov
call
jnp
jo
jne
lea
push
call
push
adc
add
pop
jge
ja
js
jne
sbb
push
cmp
or
push
dec
add
push
call
xchg
mov
les
mov
inc
push
(bad)
dec
fs
adc
je
mov
push
xchg
jp
sub
out
mov
add
(bad)
loopne
push
dec
cld
mov
or
mov
jnp
pop
(bad)
and
into
call
xchg
loop
push
xor
call
xor
jp
mov
jae
inc
mov
(bad)
sti
mov
sbb
call
jne
or
test
and
pusha
lahf
scas
aaa
cld
stos
push
adc
(bad)
push
call
add
push
cdq
xor
xor
mov
push
mov
mov
push
lea
add
mov
mov
mov
ror
mov
lea
arpl
adc
push
push
clc
sbb
mov
push
hlt
js
cld
sbb
sbb
add
sub
mov
xchg
hlt
hlt
fwait
sub
test
inc
add
push
mov
add
dec
mov
mov
mov
jmp
in
cmp
dec
adc
test
call
mov
dec
adc
(bad)
(bad)
dec
clc
mov
add
inc
add
movzx
add
mov
mov
jl
mov
and
sbb
mov
add
inc
add
cld
pop
adc
dec
adc
jg
adc
(bad)
arpl
test
adc
out
psubsb
push
adc
jmp
mov
call
mov
push
push
mov
call
mov
sub
xor
mov
xchg
je
inc
shr
sbb
sbb
jbe
xor
push
inc
call
(bad)
cmp
out
push
call
in
xchg
je
adc
fwait
mov
or
pop
mov
jne
adc
(bad)
jmp
test
and
pop
fs
(bad)
push
jmp
jg
xor
out
out
inc
xchg
sbb
lea
call
fist
cmp
inc
mov
or
inc
mov
xchg
jne
mov
mov
call
jg
mov
(bad)
(bad)
cmp
pop
je
imul
add
pop
cmp
jne
mov
dec
fadd
xchg
test
sub
(bad)
mov
sti
(bad)
cmp
mov
mov
mov
jne
mov
out
ja
jl
ins
jl
leave
cmp
int
adc
add
ret
jle
cmp
sbb
xchg
sbb
adc
and
jp
jmp
lock
aaa
inc
push
jp
mov
push
push
inc
imul
mov
and
and
push
mov
inc
test
cli
or
mov
ins
ret
in
call
(bad)
push
icebp
aas
adc
retf
push
lea
pop
call
aaa
push
pop
mov
mov
mov
jno
ja
mov
call
lea
stos
stos
stos
popf
mov
and
xor
je
lock
test
inc
sbb
test
push
xor
xchg
mov
mov
mov
jbe
movzx
mov
mov
or
mov
dec
push
call
and
add
cmps
cmp
inc
mov
xchg
or
add
mov
cmp
jne
pop
jbe
test
mov
mov
mov
cmp
mov
mov
test
push
pusha
jne
mov
std
push
cmp
out
sbb
mov
push
push
jg
add
sbb
add
mov
mov
push
call
dec
clc
add
or
add
fistp
sub
cmp
ja
mov
and
dec
fild
inc
adc
clc
push
jae
sar
push
les
pop
and
add
ja
call
dec
pop
sub
je
mov
dec
pop
dec
mov
mov
call
push
ret
mov
inc
push
add
jmp
xor
push
push
aaa
sbb
xor
jne
ins
push
xchg
push
add
movs
js
push
add
or
sbb
jne
or
fnsave
mov
ds
push
mov
les
mov
lea
in
pop
aad
inc
inc
cmp
jne
xor
ret
sbb
push
inc
adc
jo
je
push
lock
xor
add
mov
dec
std
dec
push
call
ins
lea
push
call
and
es
xor
cmp
je
cmp
jne
add
mov
fisttp
(bad)
mov
sahf
fs
jg
movs
dec
adc
je
mov
or
add
push
es
loopne
sti
jmp
std
(bad)
push
or
push
push
xchg
push
stos
fistp
inc
sub
inc
mov
jg
inc
sbb
adc
ds
es
fcom
movs
jmp
and
fwait
(bad)
mov
dec
add
add
add
mov
test
mov
je
push
cmp
je
mov
add
mov
cmp
jne
cmp
cs
(bad)
push
cmp
jb
push
push
call
and
(bad)
(bad)
jp
mov
psubsb
inc
cmp
out
and
add
adc
push
mov
mov
mov
add
sti
test
push
daa
cmp
pop
and
jb
push
call
test
dec
cmp
jne
dec
je
lahf
jge
clc
add
je
add
mov
dec
adc
jne
jae
in
cmp
repnz
das
inc
and
out
scas
fimul
test
cmp
call
test
push
je
ins
push
cmp
rcr
or
or
(bad)
jg
and
and
ins
lea
aam
push
pop
ins
scas
cli
jmp
xchg
mov
jge
or
jnp
add
push
mov
push
call
lods
jecxz
mov
mov
jmp
mov
push
lods
push
call
cmps
fbstp
inc
sub
ja
(bad)
call
mov
add
std
jmp
push
pop
add
mov
addr16
or
sbb
ja
push
xor
jmp
pop
or
fisttp
add
push
inc
scas
(bad)
in
(bad)
jns
pop
and
cmp
je
call
test
dec
movs
push
loopne
lods
leave
frstor
mov
mov
push
sub
(bad)
pusha
fidiv
(bad)
add
push
adc
cmp
data16
shl
mov
cld
pop
pop
fwait
cmp
andnps
lea
mov
add
push
js
cmp
sbb
pop
pop
mov
call
fwait
jge
cmp
enter
out
mov
inc
aas
jp
std
sub
or
add
lea
call
mov
mov
je
mov
call
mov
imul
ret
adc
and
ins
inc
fild
adc
jnp
add
(bad)
push
jnp
add
jnp
mov
lahf
inc
sbb
clc
mov
clc
sbb
cdq
and
jge
add
pop
push
jge
add
push
movs
lock
sbb
cmp
or
cmp
xor
out
cmp
je
mov
push
push
mov
mov
and
or
jbe
mov
test
hlt
mov
and
dec
sbb
mov
mov
das
div
test
adc
stos
stos
call
sub
push
jnp
add
in
and
jp
jge
fisubr
ud1
movs
add
lock
ja
push
push
call
jge
xor
test
je
mov
add
add
xor
jecxz
jg
mov
in
pop
jle
dec
jmp
or
add
jle
mov
jg
call
test
mov
je
mov
mov
call
std
out
test
or
jge
dec
je
add
je
lea
add
lea
scas
call
out
mov
mov
jae
sar
cld
ja
xlat
push
std
dec
mov
push
sub
xor
and
xchg
sub
xor
adc
clc
aaa
jmp
sbb
add
leave
imul
xor
jl
and
mov
inc
jmp
mov
cmp
and
sub
pop
mov
neg
and
push
(bad)
adc
popf
sti
adc
pop
jmp
add
idiv
and
jae
mov
sub
mov
iret
out
and
mov
inc
ret
push
out
ss
jmp
inc
sbb
push
outs
jmp
inc
sbb
jne
mov
push
call
jmp
out
adc
dec
or
inc
aaa
add
jge
rcr
dec
iret
and
and
mov
push
cmp
(bad)
adc
add
jmp
pop
pusha
dec
mov
(bad)
push
adc
ins
cmp
lahf
mov
(bad)
sbb
(bad)
jmp
loop
imul
and
push
adc
inc
pop
mov
pop
cmp
lock
fadd
cmp
pop
ins
jne
lea
ja
push
call
cs
mov
movzx
mov
cli
ret
push
call
pop
jmp
inc
and
cs
jl
and
and
stos
and
mov
in
es
push
call
std
jg
mov
mov
jmp
lea
mov
or
sub
jmp
mov
cmp
sbb
test
fmul
mov
orps
pop
dec
hlt
pop
leave
push
inc
jg
ja
cmp
xor
push
push
lea
pusha
dec
mov
or
jmp
pushf
int
jb
lock
test
lea
ins
add
into
dec
out
sbb
xor
in
xor
inc
xor
xchg
push
sbb
mov
into
call
test
into
fcomp
add
sbb
out
mov
xor
push
shl
cmp
lsl
or
fstp
jnp
jmp
adc
dec
push
sub
jmp
mov
add
sub
mov
inc
pop
sbb
fld
fucompp
add
and
sub
loopne
sbb
jo
sbb
lea
imul
call
push
lea
lea
aam
and
adc
lahf
sti
(bad)
std
cmps
adc
mov
or
scas
sti
lahf
jae
rol
jne
test
mov
stc
(bad)
mov
cmps
and
out
iret
(bad)
dec
mov
test
inc
inc
sub
xor
retf
adc
test
int3
jge
jl
pop
jp
mov
or
into
call
out
fadd
push
lods
mov
mov
(bad)
iret
call
cli
call
ret
jns
push
mov
adc
jmp
adc
test
ss
(bad)
lahf
sti
dec
cld
push
iret
call
sahf
out
(bad)
in
sbb
dec
dec
test
lds
or
or
adc
mov
addr16
hlt
ret
jg
sbb
loope
shl
test
mov
call
out
loop
fisubr
lea
jge
cmp
push
movs
inc
xor
stc
inc
cwde
push
clc
inc
xor
mov
test
call
test
push
mov
cmp
dec
in
movs
stc
movs
sbb
sub
call
jb
mov
out
dec
jmp
push
mov
(bad)
cmp
mov
call
call
cli
dec
call
mov
call
sti
push
(bad)
or
and
jbe
adc
sbb
in
cmp
in
add
pop
(bad)
cmp
and
adc
push
pop
out
clc
push
jmp
xor
jbe
jmp
push
popa
jae
sub
sbb
push
xor
shr
aam
call
jmp
fcomp
lea
out
mov
(bad)
sti
fisttp
dec
cld
call
lods
sub
inc
clc
add
xlat
push
cs
jmp
jge
inc
pop
sub
or
xlat
add
ja
test
dec
iret
add
jecxz
adc
sub
jbe
call
loopne
push
push
lea
add
dec
shl
push
outs
push
push
adc
and
sub
cmp
mov
icebp
pushf
mov
push
mov
or
leave
jge
call
xor
xor
cdq
push
cwde
or
daa
not
xor
xchg
test
pop
cmps
mov
lea
mov
out
(bad)
sbb
dec
mov
lea
adc
mov
adc
mov
js
(bad)
inc
cmp
sbb
add
mov
cmp
loopne
fadd
mov
mov
adc
ret
inc
shl
push
pop
adc
call
fst
cld
jmp
jmp
jmp
ins
mov
pushf
lea
fldl2t
push
push
sub
adc
addr16
or
inc
mov
sub
xchg
sub
jmp
sbb
aas
xchg
retf
sbb
mov
jmp
mov
test
bound
adc
outs
fild
nop
aaa
xchg
and
dec
and
xchg
std
clc
ins
sub
xchg
pop
jmp
cwde
pop
mov
jge
sub
dec
or
and
mov
clc
movs
adc
scas
out
xor
movs
sbb
pushf
push
xor
mov
adc
cmp
mov
xor
push
ss
mov
rol
shl
mov
or
mov
cld
adc
mov
fcomp
xor
retf
sbb
mov
mov
jne
dec
and
inc
jmp
int3
gs
out
mov
jns
or
mov
adc
jmp
addr16
das
mov
and
sbb
jae
push
retf
adc
div
push
inc
cdq
cmp
lahf
jecxz
mov
fadd
mov
xor
iret
dec
mov
push
xor
loop
rcr
inc
sar
add
cmp
ja
dec
xchg
or
cmp
jne
push
xor
jmp
dec
jl
mov
add
pop
cmp
and
shr
ins
call
jl
mov
jmp
mov
push
xchg
mov
test
rcl
out
or
jl
jne
push
sub
add
mov
neg
sbb
push
jno
mov
int
fild
jae
test
test
push
mov
(bad)
fisttp
push
call
test
setl
jmp
mov
test
cmp
jae
dec
push
fisttp
fst
add
and
cmp
call
adc
rcl
inc
rcl
xchg
mov
inc
cmp
mov
jle
xchg
sbb
add
test
ja
call
jbe
ret
js
js
push
jne
rol
pop
daa
pop
xor
xchg
sbb
push
adc
inc
dec
mov
push
push
lea
loope
xchg
imul
enter
in
div
out
dec
dec
(bad)
jle
push
jmp
xor
mov
mov
push
call
fadd
das
or
adc
pop
aaa
push
jmp
clts
pop
data16
cld
and
add
jo
mov
xchg
mov
pop
or
jge
std
add
icebp
mov
loope
pop
mov
call
adc
mov
call
fsubrp
adc
mov
mov
cmp
out
cmp
push
call
add
sub
rol
not
scas
ret
(bad)
(bad)
fsub
cmp
sahf
mov
sub
lea
xor
pusha
pushf
jae
cmp
adc
and
imul
sbb
jge
call
push
call
inc
push
les
clc
jmp
jo
jo
lea
pop
pop
aas
idiv
mov
lea
fwait
and
jp
mov
mov
dec
call
enter
arpl
cmps
loope
dec
enter
dec
xor
pop
push
dec
popa
cld
xor
test
add
add
test
ret
cmp
cld
jmp
test
mov
jge
xor
jmp
cmp
fnstcw
enter
loopne
(bad)
cmp
jle
sub
enter
add
push
push
fldcw
clc
push
lock
sbb
lods
enter
shr
sbb
push
push
call
or
(bad)
jmp
call
jmp
cdq
pop
mov
xor
xchg
xor
adc
jne
push
push
call
mov
push
lea
cmp
adc
or
cmp
call
or
(bad)
repnz
sbb
mov
mov
inc
call
push
fwait
mov
and
pop
add
jmp
ud2
(bad)
(bad)
pop
cmp
jge
cmp
xchg
cmc
or
xchg
jmp
sbb
icebp
stc
add
sub
jg
jle
and
push
call
in
(bad)
stos
(bad)
call
or
and
es
dec
sbb
test
shr
sub
repz
mov
jmp
adc
jne
cmp
or
out
fstp
fucomp
out
int3
dec
pop
mov
or
jo
(bad)
or
add
sub
pop
inc
test
add
push
xchg
cmp
clc
mov
rol
push
(bad)
out
fsubrp
sbb
pushf
(bad)
jmp
jmp
and
push
pop
mov
(bad)
(bad)
(bad)
and
inc
cmp
movzx
push
jmp
cmp
(bad)
(bad)
call
je
mov
popa
push
pop
push
jmp
add
scas
sti
inc
pop
mov
xor
push
ins
jbe
cwde
sub
sub
ja
int3
(bad)
xor
inc
and
in
jle
cld
inc
ins
add
push
or
les
std
outs
inc
lahf
imul
int3
jnp
sbb
cmp
jl
fstp
jmp
lock
xor
mov
movs
cwde
dec
push
ss
call
dec
lds
mov
jmp
jmp
pop
inc
and
lock
cmp
mov
push
je
mov
test
je
clc
(bad)
mov
cmp
mov
jb
mov
and
cmp
jae
push
lea
pusha
add
add
fs
push
lea
sbb
sbb
push
gs
hlt
cmp
jne
sbb
sub
push
sub
or
and
jl
sbb
cmp
je
adc
adc
scas
push
es
push
mov
add
dec
ja
(bad)
(bad)
out
sub
jge
cmp
je
cmp
je
push
lea
mov
mov
call
jnp
aaa
mov
cmp
add
cmp
je
out
in
push
call
or
inc
and
test
pop
jne
lock
call
lock
je
je
fimul
mov
prefetcht1
mov
mov
stos
push
hlt
xchg
aad
cmp
jl
push
push
inc
mov
add
sbb
cmp
cmps
(bad)
mov
xchg
inc
sbb
push
push
call
sbb
push
or
xchg
(bad)
dec
ds
ja
je
call
xchg
mov
aam
stos
and
xor
push
xchg
ds
push
mov
call
test
fcomip
call
dec
add
jne
mov
call
sub
lea
iret
push
fisttp
mov
mov
test
jno
push
test
ja
call
(bad)
(bad)
stc
dec
cdq
(bad)
fild
inc
fs
cmp
je
cmp
mov
pop
push
mov
mov
cmp
test
or
call
jne
jmp
push
cdq
sub
push
add
add
add
add
lahf
lock
xor
and
enter
and
(bad)
push
cmc
mov
dec
jne
mov
sti
jmp
push
jge
(bad)
je
cmp
jne
mov
mov
mov
call
inc
enter
rol
ror
mov
mov
inc
mov
mov
bound
call
sbb
and
mov
jge
push
pop
adc
not
add
fsub
cmp
add
mov
mov
add
aas
add
dec
lea
sbb
faddp
xchg
sahf
mov
inc
cli
(bad)
call
and
test
jl
push
xor
into
jne
(bad)
(bad)
cmp
add
add
mov
dec
mov
and
fidivr
call
jle
or
lahf
rol
or
push
jg
push
sbb
nop
dec
push
ins
and
sbb
das
mov
add
mov
pop
addr16
icebp
dec
add
lea
adc
ss
mov
test
adc
call
push
dec
xor
add
inc
sar
mov
pusha
call
or
xor
mov
test
aas
or
loopne
cli
sub
adc
fdivr
dec
dec
xor
loop
xor
xchg
xor
push
push
shl
outs
dec
push
push
push
add
push
push
jmp
mov
aad
pop
mov
jnp
out
add
dec
dec
lea
xchg
cmps
cmp
inc
in
inc
test
xor
in
sub
mov
enter
scas
pop
push
add
push
call
jl
jmp
jmp
xor
(bad)
dec
inc
mov
ins
add
jmp
(bad)
mov
shr
lds
addr16
nop
out
mov
push
xchg
jle
hlt
jmp
lods
and
sbb
jge
cmc
adc
add
mov
out
jne
mov
xchg
test
sub
lock
pop
rcr
mov
ins
xchg
(bad)
lods
xor
add
pop
ja
xor
call
pop
inc
aad
mov
xchg
std
inc
push
mov
call
jmp
jno
mov
xchg
pop
adc
fnstsw
(bad)
fwait
imul
push
call
jne
cmp
sub
cmp
sub
stos
cli
inc
je
cmp
jne
push
mov
lods
jmp
push
fist
test
push
lea
(bad)
outs
xchg
inc
or
fcomi
ja
in
inc
mov
xchg
inc
test
adc
loopne
xor
push
dec
lods
mov
dec
add
and
inc
cdq
ds
fisttp
push
add
popf
je
jmp
cmp
mov
jbe
push
call
cmp
pop
je
movzx
push
call
mov
ret
es
jne
jg
push
cmp
je
xchg
add
pop
dec
jbe
inc
iret
call
inc
inc
or
and
mov
(bad)
(bad)
clc
cmp
jbe
push
add
or
inc
data16
call
fst
push
iret
call
fdivr
cmc
push
lea
mov
or
ss
das
jb
adc
out
adc
pop
fwait
push
push
std
(bad)
mov
out
inc
dec
mov
inc
cmp
jb
clc
jmp
aaa
loope
js
add
retf
movzx
dec
mov
sub
mov
dec
out
mov
cmps
dec
add
or
sub
mov
mul
push
or
lock
mov
mov
into
jge
mov
mov
ja
out
sub
or
iret
push
mov
push
ss
sti
(bad)
clc
jne
dec
and
dec
pop
icebp
fild
call
or
inc
adc
out
outs
jp
mov
call
shl
pop
addr16
push
mov
mov
je
call
mov
call
jl
or
or
mov
add
mov
or
sbb
adc
add
xchg
call
cmp
xor
mov
mov
sbb
lea
rcl
test
ret
dec
xor
mov
jne
jg
push
outs
add
or
rcl
fcomip
scas
mov
sbb
xor
inc
adc
jo
jne
mov
(bad)
call
mov
inc
mov
ret
xlat
push
jo
pop
jle
mov
mov
inc
cmp
sub
jbe
je
dec
loopne
int3
pusha
inc
pop
sbb
in
fcomip
call
sbb
add
jmp
xor
in
xchg
addr16
lea
and
mov
mov
mov
pop
push
(bad)
test
jmp
mov
add
(bad)
out
outs
fcmovb
enter
jge
add
or
lea
mov
sub
(bad)
adc
add
mov
(bad)
(bad)
dec
adc
mov
mov
mov
jmp
mov
mov
mov
lea
cmp
mov
cmp
xchg
pop
jbe
add
adc
adc
push
ins
fiadd
int
sbb
mov
mov
sub
loopne
cmps
mov
jle
leave
push
call
xchg
push
call
ss
pop
mov
push
call
je
add
add
and
sar
call
pop
(bad)
mov
push
mov
popf
xchg
or
and
dec
pop
dec
ror
xchg
shr
xchg
mov
movs
adc
jg
jg
jns
adc
fadd
xlat
add
inc
inc
cmp
(bad)
(bad)
dec
jmp
xor
inc
sub
mov
cmp
jne
add
lea
fistp
mov
and
bound
movzx
add
out
rol
sbb
popf
add
add
pop
std
push
dec
mov
ins
xchg
pop
lea
mov
add
and
pop
lea
adc
test
in
jmp
sar
mov
retf
or
mov
dec
dec
gs
loop
jge
pop
mov
setge
push
push
add
dec
lds
hlt
push
call
jne
mov
mov
adc
mov
clc
in
or
test
xchg
xor
clc
mov
push
push
push
inc
push
mov
dec
inc
call
add
sar
loopne
xchg
mov
jmp
fild
add
mov
lea
mov
call
(bad)
std
stc
inc
push
lea
mov
popf
add
mov
call
push
hlt
mov
push
push
dec
xchg
dec
test
push
loope
push
call
push
outs
sub
lods
call
push
cwde
pop
scas
jmp
stos
enter
cmp
or
mov
xor
mov
test
xchg
or
adc
loope
loop
dec
add
jge
add
cmp
out
call
cmp
call
fdivr
or
push
lea
mov
ja
add
call
rcl
inc
mov
call
pop
xchg
mov
push
test
add
push
std
push
(bad)
hlt
xchg
add
cmp
jp
xor
add
cmp
push
call
cmp
dec
add
dec
mov
out
js
dec
js
cli
out
loopne
jmp
or
js
jne
adc
jmp
push
mov
(bad)
adc
pop
mov
dec
mov
div
jmp
mov
imul
fidivr
and
adc
call
lahf
jmp
enter
xchg
es
cmps
xor
(bad)
mov
push
call
jmp
dec
push
mov
bound
sbb
pop
or
dec
mov
scas
push
add
jmp
adc
call
das
mov
cmps
adc
adc
outs
cmp
sbb
fucomp
std
dec
dec
lea
adc
add
sub
aad
ss
mov
sar
xor
es
dec
jne
cmp
jne
cmp
jne
mov
mov
jge
mov
jmp
arpl
pop
mov
adc
pop
rcl
and
adc
je
push
jge
fsub
jne
jno
scas
(bad)
dec
sbb
pusha
fs
fist
les
lea
cmp
mov
sbb
dec
jge
sbb
jle
add
dec
fld
out
pusha
in
ret
or
mov
test
dec
addr16
add
jne
(bad)
loop
jbe
inc
test
add
or
jnp
and
(bad)
pop
jge
sub
fist
jge
or
cmp
jne
(bad)
jmp
jge
mov
cli
je
movzx
xor
inc
xor
cmp
cmp
ror
dec
jne
cmp
je
cmp
jne
jecxz
(bad)
scas
jmp
adc
add
cld
fwait
ret
call
mov
add
cmp
mov
call
cmp
into
sub
mov
loop
cmp
or
pop
sahf
add
cmp
add
(bad)
fdiv
or
push
ret
adc
std
adc
jge
jge
cmp
mov
sbb
push
jno
rol
adc
icebp
mov
inc
aaa
inc
mov
add
call
imul
mov
mov
call
fcomp
add
xchg
or
add
cld
sbb
lods
sub
jne
push
adc
in
arpl
or
or
rcl
push
call
sbb
lods
mov
call
call
mov
and
inc
int
mov
je
sbb
pop
add
mov
ja
jmp
add
xor
int
dec
lea
push
push
add
push
xor
(bad)
fbstp
mov
push
xor
push
xor
push
xor
fild
push
xor
adc
xor
adc
xor
push
xor
and
xlat
jge
aaa
add
push
xor
add
jnp
push
ja
xlat
imul
and
xor
push
xor
or
jb
push
xor
push
xor
punpckhbw
mov
xor
xchg
inc
or
xor
pop
aam
mov
xor
add
js
inc
and
xor
out
push
xor
or
(bad)
mov
push
xor
or
xor
int
and
xchg
add
movs
lahf
scas
das
sub
mov
add
add
mov
and
xor
lahf
dec
bswap
stos
out
mov
push
push
push
xor
mov
xor
and
(bad)
(bad)
mov
add
add
push
pop
or
or
or
push
movups
pop
adc
pop
pop
pop
adc
(bad)
out
(bad)
call
push
pop
sbb
sbb
sbb
push
pop
and
and
and
and
adc
fdivr
(bad)
jmp
sub
sub
sub
sub
xor
xor
ss
cmp
cmp
cmp
cmp
dec
add
aas
inc
inc
inc
inc
inc
inc
inc
inc
dec
adc
dec
pop
dec
adc
dec
dec
dec
push
push
push
push
or
pop
push
pop
pop
push
jmp
out
call
pop
pop
pop
pop
push
adc
xor
int3
pop
scas
imul
or
add
adc
loop
std
mov
xor
cmp
mov
add
inc
fld
stos
out
and
xor
js
loop
sbb
loopne
sbb
xchg
push
or
inc
mov
sti
(bad)
jmp
dec
mov
add
(bad)
(bad)
(bad)
call
mov
push
push
and
push
mov
lea
pop
xor
mov
mov
add
dec
jne
inc
cld
(bad)
dec
and
jno
mov
mov
add
pop
mov
or
sub
add
inc
je
movzx
mov
add
pop
add
ja
test
jle
pop
call
je
or
add
xchg
ret
inc
test
pop
setne
(bad)
call
mov
inc
imul
mov
mov
and
mov
fs
lock
push
pop
sbb
lea
icebp
(bad)
out
mov
movs
sbb
call
mov
or
jg
adc
and
adc
inc
adc
ins
mov
ins
ja
xchg
je
add
jbe
call
(bad)
or
cmc
inc
nop
xchg
sbb
pop
ret
push
sbb
loopne
dec
xchg
test
jno
inc
cld
jle
push
shl
jg
cmp
sub
or
aas
mov
add
xor
lea
push
out
jge
stos
add
push
push
mov
outs
jmp
mov
or
push
(bad)
(bad)
out
or
inc
xchg
sbb
data16
mov
mov
(bad)
jmp
push
inc
pop
je
mov
lea
push
mov
lea
add
imul
imul
add
jmp
or
jle
test
je
lea
mov
sub
push
hlt
or
pop
dec
pop
mov
pop
jmp
jg
jg
push
push
mov
call
mov
or
add
add
xchg
fwait
push
push
mov
call
pop
je
sbb
aaa
mov
mov
and
sub
inc
add
data16
(bad)
pusha
daa
or
push
inc
push
sar
sbb
inc
or
dec
sbb
or
or
mov
inc
mov
inc
icebp
rol
push
mov
mov
or
leave
pop
push
push
inc
push
add
xor
cmp
je
adc
(bad)
inc
cmp
je
cmp
je
cmp
icebp
push
(bad)
jg
adc
mov
jmp
mov
jmp
mov
int3
inc
and
cmp
cld
aas
push
adc
add
idiv
inc
or
cmp
inc
inc
or
xchg
ret
and
mov
outs
mov
outs
add
adc
push
or
push
hlt
jg
(bad)
jl
or
icebp
cmp
jge
call
leave
sbb
push
pop
sub
dec
push
shl
pop
sub
sub
pop
mov
shr
shl
(bad)
das
pop
inc
inc
cmps
clc
xlat
(bad)
shr
(bad)
jmp
push
mov
jg
test
jle
push
cmp
jle
push
pop
mov
(bad)
jg
jp
sub
test
jg
pop
jmp
sub
push
mov
pop
cdq
idiv
and
adc
inc
and
push
mov
add
push
pop
push
cmps
fiadd
rcl
or
pop
push
icebp
xor
cmp
mov
jne
push
sar
movaps
inc
mov
cmp
jne
add
mov
and
sar
jle
push
push
(bad)
mov
sub
imul
cmp
fidivr
imul
push
xchg
imul
test
int3
rcl
stc
or
add
jle
and
mov
add
fwait
push
jbe
jl
mov
xchg
mov
lea
push
loopne
into
hlt
jg
add
pop
or
sub
adc
inc
mov
sbb
mov
xor
inc
shl
lea
mov
or
popa
cli
out
lds
adc
jle
mov
jmp
dec
or
inc
shr
xlat
sahf
and
and
call
adc
or
push
mov
mov
out
out
jmp
call
jmp
add
or
jne
inc
hlt
mov
mov
mov
shl
jmp
(bad)
sar
sar
jne
retf
add
test
je
sub
jmp
add
fwait
mov
and
add
jns
(bad)
push
xchg
cmp
jle
push
pop
movsx
cmp
je
xor
mov
popf
ror
add
inc
xchg
dec
sbb
push
jl
imul
addr16
cld
xlat
cmp
cld
(bad)
inc
and
push
mov
cmp
jle
in
fiadd
pop
or
(bad)
clc
inc
and
mov
icebp
call
lea
jne
push
pop
push
(bad)
jbe
mov
out
neg
dec
or
mov
mov
lock
or
clc
dec
mov
sbb
clc
mov
jne
cmp
clc
dec
or
cld
xor
mov
mov
test
(bad)
xchg
or
sar
sar
jne
add
mov
sub
jmp
push
pop
mov
and
in
add
add
push
inc
pop
pop
cmp
jle
mov
movsx
cmp
je
xor
ret
xchg
leave
test
setge
dec
and
mov
mov
push
loopne
xor
add
inc
ja
mov
jnp
mov
(bad)
cmp
fdiv
test
xchg
adc
inc
or
clc
jl
cld
sbb
mov
mov
imul
push
mov
dec
or
push
out
adc
xchg
add
les
jle
mov
cmp
pslld
stc
pop
push
call
cmp
jmp
cmp
je
mov
aaa
iret
repz
or
call
fdivr
cmp
pop
je
mov
pop
jmp
sub
push
in
dec
or
push
adc
mov
jno
sub
inc
cld
add
lds
sub
jo
mov
push
(bad)
adc
sbb
add
mov
or
jo
fistp
rcr
je
mov
and
cmp
cli
cmp
push
stc
and
stc
xor
stc
inc
jl
push
je
cmp
arpl
adc
adc
ret
push
int3
adc
cmp
push
mov
adc
xor
in
es
sub
lea
inc
inc
inc
jg
sub
pop
sbb
pop
jo
dec
sub
pop
xor
cmp
xor
sub
leave
mov
sub
pop
push
cmp
or
inc
xor
retf
or
adc
mov
mov
sahf
das
adc
add
mov
jg
mov
std
add
and
sbb
sahf
dec
es
add
pop
pusha
pop
(bad)
sti
into
rcr
pop
sub
stc
xor
cmp
adc
jbe
mov
adc
lock
dec
xchg
fild
in
mov
add
pop
fisttp
add
cmp
sub
push
add
pop
ret
push
mov
mov
push
ret
mov
fcomip
and
repz
xor
pop
imul
mov
mov
add
cmp
sbb
fist
pop
add
clc
add
test
outs
mov
cdq
sar
sub
sar
add
push
push
add
pop
cdq
pop
idiv
pop
test
mov
push
mov
jbe
mov
mov
pushf
dec
cld
pop
mov
fild
add
dec
add
sbb
inc
or
adc
add
(bad)
std
mov
add
ror
mov
sub
retf
pushf
sar
and
inc
imul
icebp
outs
loop
les
loopne
or
cdq
adc
fnsave
or
adc
shl
pop
mov
aad
pop
rep
push
cmp
xchg
xor
add
push
add
push
add
ins
and
pop
out
(bad)
pop
mov
in
cmp
push
jle
jbe
sahf
xor
ins
(bad)
jmp
pusha
push
push
and
fdivrp
add
push
and
call
and
jmp
add
add
cmp
pop
jl
test
outs
idiv
aaa
call
pop
jne
jl
add
cdq
push
loopne
neg
pop
ss
jg
js
cmp
jge
idiv
sbb
adc
jne
push
call
sti
(bad)
fild
mov
lea
mov
mov
push
xchg
sbb
call
add
shl
dec
and
(bad)
lea
or
adc
jge
inc
add
add
movs
push
push
std
mul
sbb
imul
add
es
leave
loop
loop
xchg
sbb
out
clc
jmp
sar
cmp
je
cmp
je
pop
bswap
call
mov
cmp
dec
std
setne
push
inc
jae
cld
add
out
fbstp
adc
mov
jle
lea
fcomip
(bad)
(bad)
adc
push
push
push
mov
call
mov
mov
xchg
out
enter
add
mov
pop
ffreep
mov
inc
mov
inc
cld
add
(bad)
mov
adc
mov
inc
or
loopne
mov
xchg
mov
test
mov
lea
add
push
dec
(bad)
(bad)
jg
out
and
sbb
or
mov
aas
std
and
mov
test
jne
jbe
test
ins
add
mov
jle
shr
call
lea
fistp
cmps
std
adc
mov
(bad)
jle
push
xor
push
jge
jmp
pop
mov
rcr
mov
daa
cmp
inc
clc
inc
jmp
adc
(bad)
int3
and
or
inc
inc
add
cmp
jl
pop
test
(bad)
inc
imul
cdq
push
push
pop
idiv
mov
push
mov
mov
mov
push
push
dec
mov
mov
icebp
ror
scas
ret
mov
push
lds
out
adc
jbe
mov
imul
xor
cld
mov
imul
add
cdq
pop
idiv
ja
inc
dec
add
(bad)
out
imul
and
ror
ret
cdq
jle
push
mov
or
(bad)
mov
ret
or
shr
lock
inc
cmps
xor
cmovno
adc
push
cmp
mov
shr
idiv
test
dec
add
add
mov
push
mov
push
mov
mov
jg
les
cmp
call
adc
(bad)
cmp
sar
shl
mov
inc
push
lock
jle
sar
jne
push
cli
mov
inc
or
add
scas
(bad)
push
scas
movsx
cmp
je
sbb
fwait
add
setge
dec
and
cld
pop
cld
pop
sub
adc
add
inc
cmp
jl
jmp
push
cmp
and
and
outs
adc
jg
add
mov
hlt
cs
clc
add
adc
add
call
add
sti
addr16
test
in
add
adc
jge
stc
iret
enter
aaa
hlt
push
mov
mov
cmp
mov
inc
ret
pop
les
xor
(bad)
inc
fstp
pop
je
push
mov
cmp
je
cmp
xchg
and
fstp
ret
je
xchg
add
(bad)
call
and
jno
xor
jp
je
cmp
je
clc
mov
add
and
dec
and
test
or
lea
inc
cmc
jmp
cmp
jne
pop
pop
mov
pop
pop
jmp
ins
cmp
movs
xchg
jnp
adc
and
jne
call
inc
add
shl
xchg
and
call
shr
push
jno
bnd
(bad)
test
je
or
xor
inc
mov
cmp
jne
xchg
adc
je
mov
test
lock
call
je
test
jo
call
test
pop
pop
je
mov
call
int
mov
call
jg
sub
adc
and
xchg
loope
mov
call
es
(bad)
inc
adc
inc
ror
sub
cmp
pop
push
hlt
(bad)
jne
jmp
(bad)
int
mov
add
xchg
or
(bad)
jg
push
je
test
jle
push
lea
shr
lea
inc
lahf
xor
call
std
gs
pop
(bad)
call
paddd
add
inc
inc
dec
jne
pop
pop
ret
inc
loop
out
cmp
dec
shr
inc
mov
inc
inc
mov
inc
dec
jne
sahf
jg
ja
sub
mov
dec
or
xchg
(bad)
dec
dec
mov
mov
mov
mov
je
mov
pop
push
(bad)
aas
movs
jmp
add
inc
add
dec
mov
mov
idiv
out
add
retf
movzx
mov
movzx
and
cmps
inc
dec
add
inc
add
je
mov
cld
bound
lea
add
xor
dec
mov
mov
(bad)
in
mov
sti
pop
test
mov
cmp
mov
dec
dec
pop
jne
sbb
push
pop
adc
xor
pop
inc
aaa
ds
push
xor
inc
movsx
movsx
dec
mov
mov
push
les
jbe
add
jne
xor
adc
jae
mov
mov
dec
dec
jne
aaa
cmp
add
test
(bad)
inc
sar
dec
cmp
mov
mov
in
ins
ret
je
aas
mov
cmp
sar
inc
stos
mov
sub
inc
mov
dec
or
push
jne
jp
mov
mov
loopne
and
add
dec
mov
or
(bad)
(bad)
cld
lea
dec
mov
mov
je
mov
lea
add
mov
or
mov
movq
inc
imul
fimul
mov
aas
and
add
test
mov
lea
lea
jle
push
dec
movzx
dec
dec
sub
push
cmp
dec
mov
adc
jmp
jmp
xor
cmp
push
mov
mov
add
inc
inc
mov
inc
dec
jne
scas
je
js
inc
xor
into
jle
jg
adc
add
jne
pop
pop
inc
je
inc
inc
or
fild
lea
lea
jle
adc
or
dec
mov
mov
jne
or
jno
dec
inc
shl
dec
out
xchg
stc
lea
jle
xor
sub
dec
mov
mov
inc
loop
jne
sbb
cmps
sbb
add
cli
test
je
clc
bound
xchg
cmp
inc
mov
add
cmp
push
mov
jge
mov
mov
(bad)
call
out
mov
not
mov
and
sub
and
add
loopne
mov
or
or
dec
xor
sub
or
ror
(bad)
out
sub
hlt
cmp
jle
mov
mov
shr
not
xor
jmp
add
lock
push
push
inc
sub
clc
mov
dec
aas
fadd
xor
fstp
inc
and
jne
xor
and
push
or
fsubr
or
dec
mov
adc
and
aaa
loope
sbb
test
je
sub
push
es
jmp
call
fld
je
jne
dec
vcvtsd2si
adc
add
dec
mov
mov
lea
sub
adc
mov
inc
adc
imul
bound
push
jne
sar
rcl
mov
sub
cmp
mov
(bad)
fnstenv
dec
jne
jmp
inc
sub
jecxz
(bad)
aas
mov
add
sar
imul
shl
jne
bnd
xlat
rol
or
div
outs
call
shl
dec
adc
leave
data16
ror
jbe
nop
pop
cmp
and
dec
and
div
(bad)
movsx
imul
arpl
cmp
jmp
and
aas
jbe
and
pop
leave
push
movsx
mov
sub
call
pmaxsw
into
call
jbe
or
lahf
jb
jmp
(bad)
call
or
(bad)
cmp
jne
push
xor
inc
aas
sbb
mov
dec
hlt
(bad)
(bad)
cmp
je
cmp
jne
push
movs
(bad)
mov
mov
cmp
je
lea
(bad)
popa
fild
adc
sbb
jle
call
sbb
xchg
ret
loope
jg
mov
mov
and
call
jl
cli
inc
je
mov
push
out
pop
repz
jg
shr
mov
adc
cmc
jg
sbb
sub
push
mov
cs
adc
sub
daa
sub
cmp
call
jmp
test
rsm
mov
in
mov
mov
and
enter
cld
sar
sar
mov
dec
aas
adc
and
pop
mov
mov
std
jbe
call
push
push
add
rcl
ret
pop
(bad)
mov
not
stc
mov
call
add
or
js
add
mov
mov
inc
rcl
jmp
sbb
neg
lock
call
cmp
jl
cmp
jg
push
cmp
add
test
push
jmp
mov
jmp
cmp
jge
mov
sbb
call
(bad)
add
xchg
test
jne
push
sub
jb
mov
ins
mov
mov
ja
test
cmp
data16
and
push
cmp
ret
into
xor
jmp
mov
cmp
cmp
jne
mov
iret
call
cmp
cmp
call
adc
pop
cmps
mov
popa
rcl
out
iret
call
out
jecxz
je
imul
arpl
push
rcl
add
ja
push
cmp
jne
mov
mov
je
mov
sub
repnz
push
popf
lock
mov
xor
mov
sub
sbb
cld
and
mov
and
mov
dec
adc
push
in
and
test
sar
jmp
mov
inc
cmp
setne
call
mov
cmp
mov
jle
mov
shr
not
mov
and
(bad)
(bad)
call
mov
mov
mov
cmp
jge
lea
cmp
les
std
jg
inc
add
int3
in
out
(bad)
(bad)
jg
repz
cld
xor
cmp
jne
movzx
movzx
jmp
cmp
jne
(bad)
cmc
ja
cmc
add
movzx
mov
push
add
aaa
int3
shl
jmp
lea
mov
pop
adc
sar
shl
mov
inc
push
add
movzx
inc
movsx
ja
hlt
sub
shl
push
sub
imul
jae
out
out
mov
push
push
add
sub
and
jge
pop
inc
icebp
imul
fchs
sar
inc
inc
pop
mov
cmp
mov
add
inc
cld
sub
js
inc
call
push
out
or
add
je
call
sahf
push
inc
push
push
jmp
call
aam
mov
sub
dec
call
hlt
add
sbb
jbe
int
jmp
lea
or
inc
hlt
dec
push
sar
pop
push
std
xor
or
sub
scas
cmp
push
add
cld
(bad)
fadd
inc
or
or
adc
es
push
jge
push
sbb
jb
mov
sahf
je
mov
ret
sbb
pop
jne
add
std
jne
jmp
call
mov
mov
mov
cmp
sbb
fldenv
push
cli
cmp
lea
inc
cmp
test
cmp
and
enter
cmp
xchg
pop
mov
pop
rcl
mov
test
mov
jle
cld
pusha
mov
mov
or
(bad)
jmp
je
mov
jmp
cmp
(bad)
hlt
fstp
test
or
jne
jge
and
xor
cmp
mov
inc
mov
leave
push
cmp
clc
pop
or
fs
in
call
or
add
imul
mov
mov
mov
or
dec
fs
xor
cmp
add
(bad)
loop
(bad)
cmp
mov
mov
and
mov
lock
adc
fcom
jg
mov
and
lock
inc
jo
pop
push
push
adc
jmp
push
fmul
jo
mov
fisttp
test
mov
jne
cmp
add
mov
cmp
jge
jl
test
dec
pop
or
and
add
sub
fcomp
(bad)
mov
neg
sbb
inc
cmp
add
sar
jg
lea
push
lea
je
add
adc
neg
and
(bad)
mov
pushf
inc
push
mov
mov
or
jmp
or
mov
je
out
sub
sub
ss
call
sub
(bad)
dec
sar
and
mov
mov
ror
mov
add
mov
push
call
jg
mul
adc
push
xor
xchg
inc
or
adc
out
out
mov
inc
fcom
mov
add
std
fcomip
in
inc
call
push
pop
mov
add
pop
cmp
dec
fcom
add
mov
push
call
pop
xor
leave
je
movs
rcr
nop
in
test
in
arpl
outs
jmp
sbb
test
out
cs
mov
loope
sub
xchg
cmp
and
(bad)
(bad)
jle
cmp
je
cmp
je
push
(bad)
or
push
mov
inc
jl
inc
or
cld
jg
dec
jo
and
sbb
or
jnp
mov
push
dec
dec
mov
and
or
and
mov
icebp
mov
clc
lea
sbb
lock
adc
mov
push
mov
mov
test
push
imul
adc
add
aad
mov
(bad)
cwde
sti
pop
jp
loopne
shl
movhps
inc
push
jb
mov
xchg
sub
inc
ins
add
leave
cmp
jg
push
fcomp
and
fwait
int3
lock
test
call
call
jae
mov
or
adc
leave
test
arpl
jo
inc
js
ins
jg
pop
cmp
jle
inc
and
push
xlat
js
sbb
mov
repz
int
mov
jmp
sub
fisttp
xchg
pop
iret
aas
lods
(bad)
loop
xchg
inc
add
xor
jg
loope
inc
mov
cmp
je
cmp
je
(bad)
icebp
lods
add
out
in
cmp
and
outs
clc
push
lahf
add
jno
inc
or
push
rol
mov
ret
clc
dec
mov
inc
pop
push
cs
(bad)
call
jl
cmp
jne
jae
mov
lea
push
call
and
test
xchg
out
jbe
fisttp
mov
and
ja
shr
jbe
call
hlt
mov
fist
push
lea
outs
jle
jle
push
push
enter
lds
sub
je
(bad)
xchg
les
mov
mov
test
call
mov
push
inc
sar
push
rep
call
ficomp
pusha
mov
lea
push
push
push
dec
(bad)
call
clc
shr
jb
(bad)
inc
mov
cmp
dec
dec
add
push
mov
gs
std
pop
jg
add
inc
sub
nop
clc
push
pop
add
je
test
mov
mov
jne
call
fcomip
sti
xchg
inc
cmp
call
sub
cmp
or
cmp
inc
outs
cmp
je
cmp
je
cmp
push
dec
jmp
cmp
mov
(bad)
jge
jmp
ret
sbb
xchg
push
or
cmp
cmp
xor
cli
push
jo
adc
ret
aad
inc
daa
je
push
and
test
mov
pop
lea
rep
sbb
inc
adc
cmp
cmp
sbb
push
jmp
adc
fdiv
inc
bound
add
cmp
or
lock
xor
div
dec
cld
sbb
test
jle
push
movsx
cmp
cld
push
out
ror
fs
mov
inc
cmp
repnz
(bad)
jmp
ins
jle
sub
and
movsx
cmp
cmp
js
sti
fs
sbb
adc
jg
push
jmp
push
jo
jne
mov
and
clc
fcomip
dec
jne
push
je
inc
jmp
dec
jg
jmp
not
test
gs
mov
fwait
(bad)
stos
dec
push
push
mov
cmp
or
out
add
adc
push
call
jmp
push
add
test
mov
cld
or
xchg
adc
mov
jg
test
add
(bad)
push
jl
mov
movzx
inc
lea
inc
test
je
test
jge
xor
sti
inc
jmp
test
dec
jl
xlat
jmp
add
shl
push
jae
mov
fsubr
cmp
pop
mov
adc
dec
mov
jl
mov
sbb
dec
jl
add
jge
jmp
mov
movzx
inc
jle
add
rol
dec
sar
dec
lea
sti
pop
sti
sbb
mov
test
jle
sub
movzx
add
inc
sub
(bad)
mov
lock
dec
jne
mov
test
jle
lea
sbb
mov
test
add
pop
sub
pusha
add
dec
mov
jne
sub
xchg
(bad)
and
pop
pop
aaa
cld
dec
and
sub
push
push
push
call
fwait
call
xor
jp
jne
push
xchg
and
imul
push
call
sbb
cmp
ds
cmp
jne
and
xchg
(bad)
call
je
mov
movsx
movsx
add
inc
inc
inc
movsx
fnstsw
clc
inc
cmp
je
cld
popf
ret
dec
and
fwait
call
mov
jp
inc
inc
popf
xor
fs
daa
movs
mov
push
ja
popa
add
xor
mov
(bad)
cli
or
into
jge
dec
mov
std
mov
or
add
jmp
or
push
jmp
add
outs
lahf
je
push
cmp
mov
cmp
jl
mov
pusha
jle
mov
inc
mov
or
out
cld
das
jle
push
int3
lock
call
add
movs
das
or
mov
jmp
out
adc
(bad)
cmp
mov
icebp
jne
sbb
rol
fimul
jg
inc
inc
dec
adc
push
jl
mov
add
jg
jl
add
retf
mov
sub
fs
adc
aam
inc
sbb
stos
and
or
add
cmp
call
jmp
xor
stc
cmp
jge
mov
mov
mov
jmp
and
inc
inc
icebp
call
sbb
cmps
mov
ret
xor
inc
mov
mov
repz
cli
mov
ret
jge
popf
add
dec
sub
lea
or
push
jle
int3
add
inc
or
je
push
sbb
jecxz
mov
push
call
push
mov
mov
loop
call
or
fld
mov
lods
dec
inc
mov
cmps
or
add
mov
xor
cmp
add
aam
out
bound
fdivrp
jmp
adc
add
pop
adc
push
mov
or
test
mov
add
mov
pop
clc
(bad)
arpl
jg
inc
hlt
add
(bad)
cmp
jle
dec
mov
fist
jne
cmp
(bad)
out
mov
add
inc
cmp
jl
dec
jne
cmp
cmp
add
adc
clc
jl
sbb
mov
call
cwde
or
sti
or
inc
adc
ss
(bad)
and
inc
dec
leave
ret
mov
mov
push
xchg
cmp
cwde
or
jb
test
mov
add
mov
or
mov
call
(bad)
jg
lock
mov
call
or
add
add
inc
add
mov
mov
mov
mov
mov
and
push
fbld
mov
sub
push
fld
add
lods
xor
sbb
inc
add
or
dec
add
enter
pop
pop
pop
ret
push
push
push
call
add
je
jl
adc
stos
jmp
out
push
(bad)
call
fnsave
adc
xor
dec
sbb
outs
clc
data16
push
in
push
(bad)
dec
mov
jge
aaa
fidivr
pop
pop
fcomp
mov
mov
push
das
call
xor
inc
mov
dec
je
or
push
js
add
inc
cmp
jle
int3
cmp
jl
push
(bad)
(bad)
dec
mov
and
inc
add
cmp
jle
pop
push
hlt
mov
or
lods
test
pop
sbb
xor
js
xor
js
add
aaa
push
sub
les
jns
cmc
movzx
mov
cmp
(bad)
(bad)
test
push
je
lea
mov
movzx
mov
ss
push
jecxz
or
add
jmp
mov
mov
mov
test
je
lea
jmp
add
inc
or
ror
inc
inc
mov
mov
push
je
add
nop
lea
pop
call
sub
mov
sbb
mov
pop
sbb
push
or
dec
add
add
add
rol
je
pop
adc
and
neg
mov
push
push
adc
add
shl
repz
call
call
clc
add
je
(bad)
lock
fimul
(bad)
jmp
lea
pop
push
push
call
(bad)
sbb
pop
jne
mov
push
push
sbb
pop
cmp
cli
not
loop
scas
dec
mov
cmp
mov
jg
cmp
mov
fdivr
xor
cmp
mov
jl
mov
push
jmp
add
jmp
adc
push
pop
jmp
cmp
lds
add
lea
test
add
sar
or
xchg
cld
(bad)
(bad)
call
mov
(bad)
adc
fcom
mov
mov
mov
aaa
std
pop
out
retf
push
push
je
mov
je
test
or
sar
(bad)
ss
jge
mov
rep
xor
inc
cmp
outs
clc
scas
sub
lea
cmp
out
(bad)
aas
dec
sub
call
add
or
add
jmp
or
add
jmp
fld1
mov
inc
inc
xchg
or
or
or
or
addr16
jg
je
dec
fmul
fdivr
fstp
fld
fmul
or
mov
fcomp
inc
pop
fmul
fiadd
fmul
fstp
fild
fmul
fiadd
or
(bad)
(bad)
fcomp
inc
add
or
fstp
fld
fistp
fld
js
out
push
ins
aaa
loope
or
hlt
adc
dec
add
sti
push
cmp
add
pop
or
add
or
(bad)
add
jae
push
adc
pop
sbb
cmp
xor
dec
js
dec
dec
mov
mov
inc
dec
fnstsw
inc
xor
dec
dec
adc
rcr
inc
push
fldcw
leave
adc
push
jmp
(bad)
out
add
in
sub
push
retf
cmc
retf
xor
leave
sub
adc
sbb
sbb
dec
cld
fld
adc
clc
fmul
fsubrp
pop
fld
dec
mov
mov
mov
mov
cmp
or
adc
jmp
icebp
fld
aas
mov
cld
fld
adc
pop
pop
or
loopne
pop
or
adc
ret
or
add
inc
cld
mov
inc
fs
cmp
add
pop
push
sbb
inc
add
dec
data16
add
das
sbb
fnstcw
fld
fmul
faddp
cmp
sbb
and
out
sbb
inc
adc
and
neg
inc
icebp
retf
call
push
in
mov
jge
add
or
arpl
mov
pop
sub
pop
xor
pop
movs
sub
jge
inc
dec
imul
and
cdq
idiv
das
fdivr
stc
mov
mov
imul
adc
pop
dec
mov
in
pop
inc
icebp
mov
shl
mov
aaa
push
mov
inc
cmp
add
sub
inc
push
ret
cmp
mov
inc
inc
pop
and
cdq
idiv
sbb
dec
mov
(bad)
cmp
aam
fmul
(bad)
cld
inc
gs
adc
sbb
pop
add
in
adc
and
and
add
push
push
push
test
cmc
cmps
scas
push
call
xor
sub
cmps
cmp
in
and
push
loopne
clc
mov
test
rcr
and
mov
mov
sbb
mov
call
icebp
jg
pop
jecxz
add
mov
cmp
fmul
jle
sbb
inc
jmp
call
fiadd
es
jmp
fcmovbe
mov
push
xor
cmp
push
xor
cwde
outs
and
cmp
aaa
call
mov
add
cs
jl
pop
adc
std
xchg
push
fwait
push
call
(bad)
and
pop
or
adc
scas
retf
mov
jl
pop
pop
add
and
inc
rcr
pop
rcl
dec
cwde
mov
jge
mov
cmp
jge
sbb
nop
mov
cmp
jl
dec
mov
sti
(bad)
(bad)
fild
mov
cmp
jl
dec
mov
jmp
and
mov
pushw
inc
pop
popw
out
(bad)
fisttp
or
mov
mov
mov
push
adc
inc
outs
jecxz
xchg
js
inc
inc
push
icebp
(bad)
fist
call
lea
push
call
push
push
mov
cli
jle
call
mov
dec
mov
pop
push
lea
add
or
mov
add
xlat
xlat
adc
inc
mov
das
jle
inc
pop
movs
sti
lahf
cli
adc
stos
push
push
call
sub
mov
les
add
cmp
je
mov
ret
mov
dec
je
mov
cmp
je
test
jne
mov
xor
es
or
and
mov
ret
xchg
inc
push
ret
inc
icebp
outs
or
mov
shr
(bad)
(bad)
push
or
je
cmp
je
lea
push
push
mov
push
push
call
push
clc
xor
std
out
mov
cdq
out
lock
push
add
push
call
cs
movs
lock
call
mov
add
leave
xchg
add
inc
stc
push
mov
and
jae
and
cmp
jae
cmp
ja
dec
cmp
pop
test
das
push
push
je
dec
jne
mov
mov
test
je
mov
or
or
call
je
cmp
(bad)
jmp
retf
mov
mov
ja
cmp
jne
inc
cmp
jbe
xor
shl
in
xor
or
mov
out
jnp
outs
div
in
cmp
je
in
adc
inc
or
sbb
fucomp
push
cmp
ja
test
(bad)
fstp
sbb
or
test
inc
mov
xor
sub
test
sbb
cmp
jne
mov
mov
ret
(bad)
jg
cmp
je
cmp
jne
mov
push
pop
lea
adc
sti
inc
mov
mov
mov
mov
jmp
out
mov
rcr
rol
(bad)
fwait
and
xchg
rep
stos
stos
cwde
jle
fcom
adc
mov
call
ins
neg
test
jb
xor
fild
mov
mov
add
or
mov
shl
or
movzx
or
push
adc
call
push
mov
call
fild
mov
jbe
jno
and
mov
inc
or
sbb
or
push
push
fld
fstp
push
fild
mov
mov
test
fdivr
clc
je
pop
call
jp
jle
aaa
lock
push
call
inc
and
sbb
std
fld
push
fmul
pop
mov
and
mov
mov
inc
and
pop
sbb
leave
enter
sub
pop
add
fld
xor
push
repnz
jns
fild
shl
imul
cmp
jae
cmp
inc
and
xchg
and
mov
ins
movs
push
sub
pop
ins
sub
lea
or
mov
push
xor
loopne
mov
pop
xor
(bad)
out
mov
jo
movzx
push
push
loopne
test
arpl
outs
mov
push
call
icebp
out
ss
jp
pop
daa
lea
movs
movs
movs
lea
dec
jg
lea
call
push
push
push
call
push
sti
fild
mov
add
add
icebp
out
(bad)
adc
loopne
push
mov
call
cld
xchg
fsubr
sbb
test
xlat
mov
or
jl
mov
and
fcomip
call
add
call
das
pop
daa
mov
ja
(bad)
ds
icebp
fld1
cmp
lods
pop
mov
mov
or
jne
call
mov
fild
mov
mov
sub
sub
add
(bad)
(bad)
dec
sub
mov
sub
cmp
jg
mov
cmp
mov
repnz
add
(bad)
imul
frstor
lock
and
je
test
je
mov
in
xor
jne
push
push
adc
scas
(bad)
(bad)
sub
nop
fild
idiv
je
(bad)
cld
inc
clc
inc
std
cmp
outs
xor
sar
mov
mov
call
clc
add
cmp
mov
cld
sub
clc
cmp
test
(bad)
cmp
jg
mov
jmp
bound
jne
aaa
icebp
pop
shl
mov
or
in
popa
outs
call
cmp
jmp
sub
mov
pop
ror
shl
adc
call
push
fwait
mov
in
add
push
out
adc
push
mov
clc
outs
js
stos
pop
fdiv
call
pop
mov
pop
outs
push
mov
mov
sbb
addr16
sbb
push
pop
sete
or
mov
mov
pop
mov
pop
ror
add
pop
fsub
pop
mov
and
and
inc
mov
or
inc
or
mov
mov
(bad)
mov
dec
dec
mov
or
mov
fdivp
call
mov
mov
je
mov
sub
cmp
mov
jnp
add
push
call
inc
ja
adc
test
cmp
mov
xor
jne
pop
xor
rcl
ja
inc
hlt
mov
mov
je
mov
jmp
std
jmp
out
adc
mov
and
mov
je
push
mov
ja
mov
jnp
loopne
call
add
imul
pop
ins
mov
mov
(bad)
push
jg
mov
cmp
mov
je
fimul
inc
mov
mov
shr
and
inc
icebp
inc
and
mov
mov
mov
add
mov
rol
pushf
jmp
out
dec
mov
call
call
or
jg
ds
inc
add
inc
les
fistp
or
test
mov
mov
sub
mov
mov
shl
and
ror
xchg
cwde
inc
sub
jg
je
lea
call
mov
jmp
(bad)
jmp
mov
je
add
mov
(bad)
inc
add
sub
mov
mov
mov
shr
and
out
mov
push
inc
add
ss
je
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
fist
leave
dec
xor
dec
adc
clc
dec
xor
or
inc
out
ja
je
test
call
jmp
cmp
je
mov
daa
dec
loope
sahf
cmp
jmp
mov
mov
xchg
add
add
adc
and
push
test
mov
sub
jmp
mov
cmp
leave
mov
xchg
pop
push
xor
inc
call
je
inc
and
jmp
mov
sbb
mov
adc
inc
mov
inc
gs
data16
cdq
mov
jmp
or
inc
mov
mov
mov
movzx
sub
sar
(bad)
(bad)
inc
push
sbb
or
dec
clc
ja
mov
jmp
cmp
jne
cmp
ja
jg
call
movzx
movzx
add
imul
push
retf
je
dec
add
add
inc
mov
sub
(bad)
dec
mov
ret
je
inc
push
call
rol
outs
push
mov
je
div
sub
test
lea
push
call
sbb
out
je
or
gs
mov
sub
jb
(bad)
jg
fisttp
adc
dec
mov
cmp
jae
mov
mov
test
test
mov
je
(bad)
std
mov
push
fild
(bad)
push
inc
lock
int3
adc
shl
xor
mov
or
xchg
ror
xor
add
inc
scas
and
inc
es
inc
pop
cmp
jns
push
call
cmc
xlat
call
imul
sbb
mov
and
jnp
dec
mov
mov
fnstsw
inc
aam
jb
dec
push
jg
push
mov
mov
mov
sub
ja
mov
mov
push
cmp
sbb
sub
mov
push
mov
movzx
pop
(bad)
call
bound
xchg
rcl
jb
add
inc
sbb
push
mov
test
push
je
add
inc
(bad)
aas
iret
mov
je
xor
(bad)
push
daa
inc
jmp
stos
loopne
daa
test
je
add
movzx
xlat
dec
outs
push
add
clc
add
add
cs
mov
sub
sbb
dec
fmul
test
ins
jmp
lods
mov
popa
movs
add
cmp
jbe
loopne
jg
push
mov
mov
(bad)
(bad)
jg
ret
sub
mov
sar
sub
mov
inc
push
push
call
mov
or
dec
jl
mov
adc
(bad)
fnstsw
or
test
dec
addr16
inc
shl
adc
inc
cmp
sbb
xor
pop
add
jnp
cmp
cmp
and
sbb
dec
add
lds
inc
lock
xchg
add
fist
jge
jmp
mov
push
mov
call
fmul
arpl
out
pop
sub
out
call
jne
xchg
adc
ror
cmp
scas
inc
je
mov
aas
inc
sbb
xor
mov
pop
pop
xor
mov
in
jmp
mov
pop
mov
clc
stos
pop
mov
call
ret
lock
jmp
into
call
ja
imul
lea
push
call
add
inc
push
call
sbb
lahf
stos
mov
in
sub
gs
stos
fiadd
mov
jmp
lea
jg
jnp
inc
ret
(bad)
cmp
call
push
or
sub
jne
mov
jmp
push
or
je
mov
mov
dec
add
push
mov
call
inc
bnd
jmp
loop
sub
sub
out
or
into
push
cmp
je
cmp
je
mov
mov
mov
mov
push
jbe
enter
push
dec
adc
mov
or
shl
cmp
fadd
jp
and
push
dec
or
arpl
sti
adc
inc
hlt
ret
jg
call
popa
or
pop
retf
cmp
je
push
push
lea
fdivr
mov
call
cmp
jg
xor
inc
jmp
cli
push
or
mov
or
in
out
jp
sbb
mov
inc
adc
sbb
inc
mov
rol
lock
das
in
popa
iret
pop
inc
mov
and
inc
or
ror
mov
les
mov
sbb
loopne
and
jne
push
mov
cld
call
push
xchg
pusha
sbb
(bad)
or
mov
loope
adc
test
mov
je
push
aad
lock
mov
or
push
aam
push
sti
ror
pushf
adc
(bad)
lahf
lock
push
call
cld
or
repz
call
adc
inc
out
jo
movhps
cmp
fsub
out
test
push
jbe
sub
sbb
mov
mov
inc
pop
push
(bad)
fiadd
or
xor
(bad)
cmp
inc
ins
jne
mov
jmp
mov
pop
push
add
(bad)
sub
(bad)
mov
dec
fcom
xchg
push
pop
adc
mov
(bad)
fstp
push
or
call
push
lea
push
push
mov
push
fstp
cmp
push
sbb
call
mov
push
je
push
sbb
std
into
shl
adc
and
pop
add
fld
call
mov
sbb
rol
add
mov
or
int3
or
sub
mov
mov
pop
scas
lods
dec
sbb
loop
inc
push
je
cmp
mov
leave
jne
adc
hlt
inc
mov
aam
cmp
jg
mov
push
mov
xchg
test
push
iret
mov
call
or
and
neg
sbb
neg
add
mov
pop
(bad)
lea
add
test
adc
pop
push
inc
jmp
jne
(bad)
mov
or
add
jmp
cmp
je
mov
xlat
xchg
fst
mov
jmp
xchg
call
add
inc
sahf
psrlq
jg
jl
push
call
mov
push
(bad)
test
push
push
loope
adc
pop
(bad)
outs
mov
inc
or
jo
jmp
lea
push
dec
stc
pusha
cmp
add
or
jmp
xchg
daa
(bad)
jmp
cmp
loopne
or
mov
imul
add
ja
sub
int
and
sbb
hlt
mov
adc
or
shl
xchg
jne
cmps
fadd
and
mov
mov
push
push
jle
lea
cmp
mov
sub
call
lahf
pop
adc
dec
mov
and
mov
xor
ins
adc
stc
bound
jo
dec
xchg
retf
(bad)
hlt
or
call
add
pop
mov
xchg
lea
and
and
dec
mov
jle
mov
mov
nop
test
dec
pop
mov
cmp
jge
mov
lea
jle
and
retf
or
or
mov
push
out
jmp
pushf
jbe
mov
out
ret
adc
jmp
cmp
jg
sub
or
mov
fild
inc
cld
cmp
dec
push
scas
mov
(bad)
pop
push
pop
(bad)
scas
and
adc
out
jo
mov
popa
icebp
mov
xor
add
mov
cmp
mov
lea
ror
jmp
inc
in
sub
mov
fld
jne
cld
jle
mov
jne
mov
dec
in
fst
ja
mov
cmp
loopne
(bad)
into
add
cmp
lock
push
(bad)
call
in
xor
je
jmp
sub
inc
sbb
push
push
aaa
push
push
push
push
call
test
je
sbb
repnz
mov
cmc
adc
data16
adc
int
adc
hlt
add
xor
jne
je
aaa
pusha
add
pcmpeqd
lea
call
add
push
dec
clc
call
ret
mov
dec
push
mov
arpl
inc
jl
inc
clc
popa
adc
adc
inc
in
adc
fsub
or
mov
cld
mov
and
inc
hlt
jge
pop
push
inc
dec
sbb
dec
inc
add
cld
or
or
pop
pop
mov
pop
leave
ret
sbb
or
dec
sbb
xor
pusha
shr
sbb
sbb
jge
cmp
push
lock
(bad)
mov
in
pop
(bad)
es
clc
jle
pop
loopne
push
or
mov
or
xchg
int3
call
jo
popa
mov
bsr
xchg
push
push
fxch
test
je
sub
jge
add
and
xchg
xchg
mov
push
push
push
call
iret
stos
mov
cmp
and
or
lock
call
mov
call
jge
das
sar
rol
mov
call
cmp
xor
int3
addr16
dec
fsubr
and
(bad)
add
push
add
sahf
and
call
(bad)
iret
ja
or
call
inc
call
add
inc
rol
jl
pop
pop
mov
mov
add
mov
push
call
jle
je
cmp
je
(bad)
(bad)
xchg
sbb
call
inc
cld
call
pop
pop
jle
cmp
clc
(bad)
(bad)
jle
repz
jl
cmp
jge
cmp
lea
je
jmp
je
js
out
push
call
and
fistp
cmp
jne
or
or
push
or
(bad)
(bad)
(bad)
(bad)
fidivr
repz
mov
sub
sar
jmp
push
mov
test
push
mov
je
push
mov
test
jne
adc
(bad)
out
sbb
mov
test
je
mov
mov
and
add
call
push
add
add
or
ins
mov
pop
aas
add
dec
or
or
push
sub
add
mov
add
inc
or
push
dec
inc
dec
dec
call
push
fisttp
pusha
inc
push
jne
mov
cs
sub
dec
or
sub
pop
and
pop
ret
add
pop
ret
outs
dec
or
je
je
call
mov
dec
je
out
jp
dec
je
add
je
sub
je
dec
dec
jne
push
mov
shl
(bad)
cli
push
call
ds
inc
pop
and
pop
pop
ret
push
call
psubsb
add
pop
pop
mov
arpl
sub
fst
fcom
add
pushf
and
imul
sbb
inc
call
pop
mov
dec
add
mov
sar
into
push
jno
xchg
push
push
call
es
and
out
pop
cmp
pop
jmp
sub
add
pop
cmovne
xor
pop
(bad)
(bad)
jmp
and
or
lea
add
mov
popf
and
mov
dec
pop
inc
cmp
inc
std
daa
jmp
push
jmp
mov
and
mov
neg
retf
call
call
add
mov
cmp
add
add
cmp
ja
dec
push
call
sbb
inc
push
movzx
push
lea
and
fcomip
or
rol
push
dec
int3
add
(bad)
dec
nop
inc
inc
cmp
adc
idiv
(bad)
cld
inc
loop
cmp
lea
jge
lea
out
ins
and
sub
ja
dec
(bad)
dec
push
push
push
add
mov
push
mov
icebp
inc
adc
pop
int3
enter
call
lea
xor
lea
lea
mov
mov
xlat
push
add
or
cmp
jne
lea
dec
and
add
ja
cmp
and
nop
ins
cmovge
inc
shr
pop
push
mov
mov
inc
movs
pop
lea
push
mov
(bad)
jle
test
pop
lock
daa
and
inc
aaa
or
fdivr
sub
push
outs
cld
call
inc
sbb
add
jbe
pop
pop
(bad)
jg
inc
add
enter
lea
bound
or
in
and
std
leave
or
add
(bad)
jge
mov
les
pop
call
push
add
loop
jg
rcl
je
inc
xor
push
jmp
test
xchg
cmp
mov
retf
call
(bad)
jmp
cmp
je
push
jmp
call
ret
cmp
jg
mov
out
outs
call
test
mov
inc
aam
and
mov
cli
fnstsw
mov
int3
mov
mov
push
lea
jbe
and
xor
mov
cmp
test
je
mov
mov
cmp
mov
int3
mov
idiv
dec
mov
mov
jne
cmp
je
mov
xor
sbb
out
(bad)
out
mov
mov
jmp
xor
cmp
rol
(bad)
out
mov
inc
dec
sbb
cmp
mov
inc
push
adc
dec
lods
add
je
mov
(bad)
je
cmp
je
lea
sbb
outs
inc
fnsave
popa
cmp
pop
les
lea
push
xchg
jae
push
pop
adc
push
inc
addr16
sahf
leave
cmps
in
mov
popf
and
mov
mov
sbb
add
cmps
xchg
inc
push
and
push
(bad)
dec
push
pop
sbb
test
psrad
jnp
shl
je
test
cmp
divps
je
add
cmp
imul
pop
lock
or
add
add
js
cld
pop
or
ins
das
jo
cmp
mov
je
add
inc
es
je
cmp
mov
test
(bad)
call
sbb
mov
test
adc
adc
inc
je
and
jmp
jl
lock
movs
add
rcl
lock
cmp
test
lea
adc
je
sub
ret
rcl
das
cli
jmp
add
call
cmp
add
hlt
mov
call
jl
(bad)
jmp
push
push
push
push
pop
push
arpl
test
js
add
pop
xchg
out
or
cmp
mov
lods
dec
mov
push
mov
push
add
mov
dec
enter
enter
fmul
mov
arpl
xchg
ret
idiv
retf
iret
sub
add
and
add
pusha
xor
xchg
stos
pusha
lds
mov
mov
outs
mov
call
cmp
shl
into
xchg
sbb
jl
into
push
xchg
sub
adc
push
out
or
ror
mov
not
enter
scas
retf
inc
push
in
or
loopne
sbb
aam
push
(bad)
out
jp
aam
retf
shr
sbb
dec
xor
mov
push
cmps
inc
enter
lea
sub
fcmovb
jmp
jle
jnp
pushf
adc
xchg
xchg
rcr
mov
call
test
loopne
mov
pop
test
xchg
in
and
adc
mov
add
call
call
js
ss
pop
and
push
add
dec
or
jbe
inc
xor
lea
icebp
xor
dec
nop
and
mov
mov
mov
mov
mov
mov
cmps
cmps
sub
and
inc
mov
xor
cli
arpl
add
(bad)
cli
cmp
scas
and
(bad)
mov
sbb
mov
sbb
push
mov
test
popa
jns
or
das
push
addr16
mov
ds
and
pop
cmp
push
fisub
pop
jae
dec
cmp
jne
stos
xlat
daa
jl
mov
sbb
mov
test
or
je
mov
clc
or
mov
add
cmp
jmp
cmp
je
loop
inc
call
cld
cmp
mov
mov
mov
mov
xchg
add
or
or
cmp
pusha
mov
and
hlt
pop
fmul
or
cld
pop
sti
mov
mov
inc
lods
push
call
lea
sbb
into
mov
call
out
push
mov
push
call
adc
je
cmp
mov
les
pop
test
call
ja
lea
dec
cwde
push
sub
adc
cmp
(bad)
aam
popa
mov
mov
mov
mov
sub
cmp
je
inc
xor
push
push
enter
pop
iret
jp
jge
js
addr16
jo
test
inc
fisttp
popa
in
inc
ret
(bad)
sbb
mov
rol
in
sbb
jnp
pop
sbb
xor
pop
sbb
ss
push
sbb
mov
jbe
jo
xchg
adc
pop
or
sbb
js
sbb
adc
(bad)
clts
out
xor
mov
sbb
test
mov
or
mov
sbb
sbb
sbb
or
std
jo
stos
mov
cwde
popa
adc
adc
ret
sbb
cmp
jecxz
lea
gs
aad
and
test
push
push
mov
push
call
test
and
lea
jnp
xchg
cmp
je
int3
aam
ss
push
mov
mov
sbb
push
cmp
inc
inc
add
sub
(bad)
xor
pop
jmp
xchg
sub
inc
retf
add
push
mov
mov
dec
dec
cmc
inc
sbb
fucomi
lock
xor
jne
ja
or
inc
mov
mov
loopne
nop
loopne
jne
pop
cmp
mov
jne
call
out
or
dec
sbb
ror
inc
fadd
mov
cmp
lea
xor
outs
clc
add
inc
je
ret
jne
lea
lea
hlt
mov
rcl
lock
add
inc
mov
out
sbb
pop
pop
inc
mov
je
cmp
jbe
mov
cmp
inc
sbb
or
inc
mov
mov
push
mov
movzx
mov
adc
ja
ror
jge
(bad)
jg
lock
mov
mov
mov
mov
xor
call
push
shl
or
call
push
call
out
nop
or
sub
(bad)
out
call
mov
mov
inc
mov
fild
and
je
add
call
mov
add
xor
add
dec
push
mov
aad
imul
xchg
xchg
cmp
mov
test
mov
enter
movs
sbb
data16
sbb
adc
dec
movzx
movsx
or
mov
push
bound
xor
push
push
loopne
inc
mov
mov
inc
push
out
(bad)
(bad)
cmp
add
inc
in
mov
cmp
jne
sbb
cld
popf
mov
sbb
xchg
lock
(bad)
je
call
clc
je
call
in
shr
xchg
push
adc
add
fild
jge
loope
aaa
cld
fadd
sbb
leave
fst
fstp
jmp
or
dec
push
hlt
push
scas
inc
add
xchg
push
and
movzx
call
mov
push
adc
ins
or
or
sbb
hlt
call
out
mov
push
nop
loope
dec
je
add
inc
inc
test
mov
jne
retf
inc
test
sub
call
call
cld
(bad)
(bad)
js
les
shl
add
inc
fmul
inc
cld
inc
jmp
pushf
push
jp
mov
mov
ins
(bad)
call
mov
or
div
xor
adc
clc
push
fist
jge
adc
(bad)
fild
or
mov
push
push
call
sbb
lock
jle
mov
mov
cdq
or
or
xchg
ins
jae
adc
js
cld
lea
push
call
sub
cld
sub
mov
les
add
ficom
sub
sar
test
lods
add
fimul
inc
je
(bad)
pop
mov
add
cmp
jge
mov
int
sub
ja
dec
adc
dec
add
or
push
call
leave
out
enter
or
jmp
loop
les
pop
jae
lock
lea
into
(bad)
(bad)
(bad)
mov
pusha
cld
dec
sbb
inc
loopne
pop
cmp
jg
mov
cmp
jl
inc
(bad)
call
cmp
jg
mov
add
add
mov
sub
mov
outs
pop
cmp
mov
mov
aaa
test
je
mov
jmp
mov
call
or
mov
mov
mov
push
shl
call
mov
mov
fwait
or
mov
clc
sti
push
push
or
push
das
push
sti
retf
pop
push
mov
cdq
adc
mov
fwait
int3
fdivr
jno
imul
mov
mov
test
mov
lock
xchg
sti
mov
and
les
sub
mov
dec
nop
cld
lea
dec
hlt
mov
push
push
mov
xchg
mov
mov
ja
cli
(bad)
push
sub
call
push
mov
call
push
sbb
in
push
ja
push
(bad)
push
jnp
inc
push
fidiv
sbb
jae
jne
or
movzx
add
lock
dec
bnd
dec
add
add
jle
mov
sub
outs
stos
dec
adc
jmp
or
push
call
outs
loop
or
call
dec
add
outs
test
in
rol
lods
sub
ret
jo
enter
scas
stc
call
xor
dec
scas
dec
mov
imul
mov
rol
fldenv
dec
cmp
sub
push
mov
inc
leave
or
ja
data16
add
add
lahf
add
dec
sbb
(bad)
pop
adc
jb
sub
pop
or
cmp
mov
test
adc
or
mov
mov
ds
mov
jne
inc
mov
inc
cmp
cmc
or
push
lea
cmp
ja
add
mov
(bad)
jg
inc
mov
stos
mov
cmp
adc
inc
fdiv
jo
loopne
dec
pusha
jo
xchg
cdq
(bad)
fwait
js
push
jb
fcom
jne
push
call
xchg
xor
mov
jmp
jb
xchg
(bad)
cmps
fcom
in
xor
clc
mov
imul
iret
add
sar
add
movzx
inc
test
fadd
push
dec
cmp
mov
jne
xor
test
xor
sub
jae
aas
inc
dec
mov
std
xchg
push
dec
or
test
inc
push
dec
je
out
pusha
pop
shl
call
cs
cmp
adc
mov
sub
je
dec
dec
test
add
add
inc
sbb
and
shl
dec
adc
add
mov
dec
xchg
mov
mov
fcmovb
fld
data16
push
adc
js
movs
mov
add
test
mov
mov
rol
mov
jl
add
ret
jl
push
push
mov
add
test
arpl
adc
(bad)
cmp
add
mov
test
call
or
add
dec
int3
sbb
ror
fstp
fadd
call
and
add
push
mov
idiv
jne
sbb
int
mov
cs
push
or
jmp
jge
adc
or
sbb
add
xchg
call
aaa
push
enter
fxch
(bad)
push
scas
loopne
jb
mov
mov
call
call
jmp
inc
adc
add
xchg
dec
sbb
push
rol
stc
fdivr
mov
mov
cmp
jne
adc
push
hlt
adc
jo
sbb
jne
sbb
or
inc
adc
test
das
or
sar
mov
test
or
sbb
inc
pushf
mov
mov
mov
mov
push
retf
and
retf
ja
fisub
lock
mov
xchg
sti
inc
pushf
mov
aas
mov
sbb
inc
mov
mov
jle
mov
cmp
jne
inc
push
or
push
xchg
bound
jl
cli
(bad)
mov
dec
add
not
xor
and
retf
inc
mov
push
inc
out
inc
add
sbb
adc
xchg
call
sbb
mov
ret
clc
and
pop
ficomp
or
sti
je
test
outs
jne
repz
push
call
fadd
or
push
out
jb
cs
add
(bad)
adc
cld
ret
inc
adc
movzx
mov
or
ja
loopne
fst
fstp
jg
or
mov
shl
pop
ins
add
dec
mov
cmp
or
movs
cmp
fdivr
sbb
sub
push
add
mov
lea
cld
pop
jmp
pop
xor
pop
push
inc
jle
(bad)
iret
pop
out
addr16
scas
mov
call
ins
jmp
sbb
xchg
in
pop
cld
dec
add
mov
inc
mov
inc
mul
jne
ret
int3
push
or
add
call
pop
sar
xor
ret
add
and
dec
mov
hlt
fbstp
push
pop
lods
fild
fmul
cmps
call
mov
add
sbb
sbb
call
inc
fdiv
ins
xor
sub
clc
icebp
out
jmp
dec
mov
loop
daa
xchg
mov
pop
pushf
xchg
push
dec
bound
add
(bad)
call
jge
mov
imul
push
jl
adc
push
sub
call
in
dec
inc
xor
jge
lahf
rcl
push
shr
outs
fld
fmul
mov
adc
jae
xchg
call
out
adc
jne
or
inc
lea
jne
xor
cwde
push
push
push
push
mov
call
xor
inc
or
jmp
mov
out
add
xor
inc
sub
loope
pop
sub
add
adc
rcr
push
mov
inc
mov
push
mov
pop
neg
aad
or
add
inc
or
push
outs
cmp
jg
mov
push
call
jmp
push
in
inc
inc
call
xchg
mov
jmp
pop
add
lea
jg
movs
mov
push
pop
lea
xchg
jnp
cld
call
cmp
out
and
call
and
cmps
or
mov
pop
pop
jmp
jno
inc
add
jo
cmp
inc
and
mov
or
mov
lock
jmp
mov
jg
jmp
je
and
mov
push
lea
movs
xor
and
movs
neg
push
icebp
push
out
loope
sti
movs
call
loopne
rol
data16
jo
add
xor
xchg
mov
ret
dec
inc
les
mov
(bad)
cmp
call
call
imul
mov
adc
and
test
add
add
xor
in
data16
dec
inc
hlt
call
enter
pushf
cwde
int
movs
clc
(bad)
jbe
clc
jne
sahf
pop
or
scas
pop
neg
in
pop
or
test
movs
inc
cmp
mov
int3
mov
rcl
loopne
mov
enter
out
nop
xor
call
pop
adc
mov
jmp
push
pop
pop
jo
pop
test
xlat
adc
ins
dec
xor
jne
(bad)
fstp
sub
cmp
jne
mov
add
retf
call
js
fnstsw
add
call
push
add
adc
mov
add
xor
pop
inc
pop
hlt
mov
icebp
pop
xor
cmp
je
test
mov
mov
jp
pop
jl
sbb
cmp
mov
adc
shl
inc
sub
into
jl
inc
addr16
mov
and
dec
push
mov
loop
dec
mov
test
(bad)
jbe
and
les
jmp
and
call
repnz
ret
das
jl
adc
adc
(bad)
out
or
dec
mov
and
add
or
aas
sub
mul
fld
je
push
mov
adc
mov
add
mov
les
cmps
jbe
out
mov
call
xor
je
leave
(bad)
cld
out
sub
(bad)
(bad)
cmp
pusha
call
inc
dec
outs
sbb
cdq
imul
push
hlt
jge
sub
lds
inc
icebp
adc
mov
mov
fimul
add
call
sbb
je
adc
test
enter
push
or
call
stos
cmp
lods
mov
mov
scas
out
cli
or
call
je
push
push
push
push
call
enter
dec
dec
sbb
xchg
fmul
into
call
test
je
and
out
lahf
call
mov
test
addr16
dec
sbb
fdivr
sub
push
cmp
je
inc
dec
sub
and
inc
add
loope
sbb
push
mov
call
call
loopne
ret
in
push
call
jo
cwde
out
enter
cmp
fld1
(bad)
es
cmp
or
jl
adc
mov
xor
mov
jmp
xchg
mov
sbb
std
shl
aam
push
into
push
into
jo
(bad)
push
push
call
or
sub
sbb
mov
out
adc
out
jmp
or
stc
fisttp
out
jmp
out
xor
div
jle
add
and
xor
(bad)
(bad)
mov
or
shr
test
jne
outs
test
xor
jge
mov
test
adc
or
(bad)
aaa
es
jmp
cmp
je
cmp
je
cmp
je
test
mov
cmp
test
cmp
jne
cmp
xor
jl
dec
add
jmp
pop
inc
dec
sbb
push
jl
test
mov
je
mov
mov
jns
add
or
je
cmp
cmp
fsub
ret
mov
in
and
and
mov
in
or
adc
(bad)
(bad)
(bad)
in
cmp
push
jbe
xor
mov
add
mov
dec
je
add
push
call
div
fadd
pop
pop
sbb
int
std
call
dec
pop
scas
mov
jg
xor
inc
add
cmp
jb
sub
or
xor
mov
lea
push
mov
mov
call
cli
out
mov
scas
or
lea
mov
call
or
psubsb
jecxz
jnp
add
scas
and
call
pop
inc
(bad)
jle
iret
push
call
je
adc
mov
sub
jmp
outs
ret
xchg
jbe
add
fild
cmps
outs
push
mov
call
mov
clc
les
push
push
push
mov
call
push
(bad)
(bad)
mov
call
push
pop
push
mov
cmp
call
pop
mov
je
cmp
mov
jg
dec
cmp
call
xor
push
mov
mov
add
(bad)
mov
pusha
mov
call
std
and
loopne
popf
int3
out
dec
inc
mov
mov
call
jg
in
enter
(bad)
push
ror
outs
add
pusha
mov
jmp
pusha
jbe
cmp
je
pop
cmp
mov
ins
pusha
add
mov
cmp
ja
xchg
jmp
mov
add
ss
or
outs
add
test
jne
inc
fmul
dec
dec
std
mov
lea
cmp
inc
add
jle
shr
cld
cmp
jne
cmp
je
aad
jge
xchg
cld
cwde
cmp
jne
mov
mov
add
add
push
add
clc
(bad)
fnsave
xor
jge
add
jge
add
mov
mov
mov
and
cmp
ins
jbe
sti
mov
sbb
or
xor
or
nop
enter
(bad)
fist
out
call
or
btc
inc
dec
punpcklbw
test
rol
push
mov
mov
mov
mov
shl
jmp
push
or
setne
jmp
mov
mov
jne
xorps
and
clc
aaa
adc
push
mov
jne
cmp
fadd
lds
ins
add
sub
jnp
jmp
add
push
jne
stos
call
outs
fs
in
push
jmp
pop
adc
(bad)
push
mov
and
push
push
mov
ret
ror
add
cld
or
fmulp
call
pop
mov
jbe
arpl
push
aaa
jno
sbb
add
or
cmp
and
dec
enter
(bad)
inc
pop
mov
add
push
mov
jmp
add
push
adc
inc
ins
out
clc
jne
or
bound
and
scas
sbb
sub
jo
jne
inc
sbb
lea
bound
inc
outs
push
mov
jge
add
mov
or
add
sub
cmp
jge
call
faddp
movzx
jmp
inc
fs
push
push
call
sub
sbb
add
sbb
mov
mov
mov
aaa
mov
daa
mov
mov
push
or
(bad)
fisttp
sub
mov
jmp
inc
int3
mov
outs
adc
add
or
jge
outs
loopne
mov
call
ss
repnz
cwde
push
xor
xor
imul
enter
push
xor
jne
push
xor
rcl
lea
mov
mov
push
call
mov
inc
inc
dec
cmp
jbe
cmp
jg
xor
add
call
imul
push
call
sbb
out
mov
rcr
xor
scas
jns
fistp
call
xor
inc
or
(bad)
imul
lods
sti
mov
jae
mov
jge
mov
dec
dec
je
stos
fild
dec
je
dec
jne
mov
(bad)
(bad)
inc
mov
and
mov
je
or
cmp
je
jmp
cmp
push
ja
inc
fistp
lea
push
lea
fwait
inc
xor
jg
scas
push
ret
mov
call
cmp
jl
jle
jmp
call
lea
repnz
push
call
(bad)
daa
rcl
jnp
add
mov
sti
dec
ret
mov
add
(bad)
cdq
mov
dec
idiv
sar
cmp
jg
mov
jmp
out
mov
gs
jae
call
sbb
or
in
or
out
dec
xor
xor
popa
lea
loopne
clc
mov
call
test
jbe
xchg
push
pop
mov
jnp
mov
inc
(bad)
sar
lea
adc
arpl
mov
push
add
jmp
mov
mov
aas
in
aaa
ins
xchg
mov
cwde
mov
mov
or
in
(bad)
popa
or
or
push
or
out
mov
adc
sbb
jno
jmp
and
inc
cmp
je
cmp
xor
inc
loop
ja
dec
sub
push
in
ja
dec
push
mov
test
inc
sub
jmp
and
inc
lock
or
lea
lea
mov
jnp
add
shl
sub
mov
lea
fist
mov
call
ja
stos
inc
aad
cdq
clc
(bad)
inc
je
pop
adc
or
or
sbb
sub
jbe
icebp
(bad)
or
push
xchg
jae
cld
or
loopne
adc
loopne
push
ss
and
mov
mov
or
jbe
call
push
pop
add
push
add
push
push
push
push
mov
jg
adc
jmp
mov
mov
popf
and
cmp
xor
inc
cmp
call
repnz
mov
je
in
pop
xchg
inc
cmp
imul
jo
xchg
rep
adc
inc
rep
shl
shl
test
mov
imul
inc
mov
jmp
hlt
jmp
lock
or
or
call
and
je
push
cld
lea
sti
dec
pusha
mov
sub
std
sti
popf
repz
mov
cmp
call
call
fnstsw
inc
push
dec
test
push
call
cmp
mov
cmp
jne
sbb
lods
inc
cld
call
pop
pop
mov
loopne
call
dec
enter
adc
jne
je
frstor
lock
aas
popa
sbb
push
fstp
call
call
out
adc
inc
or
ja
iret
xor
inc
sbb
imul
(bad)
fcomp
clc
pop
sbb
pop
pop
sahf
add
mov
cli
xchg
sbb
add
stc
and
pop
call
std
add
jg
lock
xor
xor
cmp
inc
cld
mov
jg
inc
and
xchg
push
mov
test
fbstp
je
ret
outs
out
leave
lea
and
push
or
mov
sbb
call
sti
scas
jg
test
add
inc
leave
add
cmp
jmp
sbb
movs
mov
or
cmp
jne
sub
adc
push
inc
or
call
into
inc
ret
sbb
jp
cld
repnz
or
mov
inc
dec
ins
mov
mov
pop
sbb
adc
or
or
call
jb
jne
or
push
xor
adc
test
lea
call
add
imul
or
mov
xchg
loope
stos
cmps
ja
cdq
mov
jp
je
sbb
clc
sbb
adc
fld
push
fld
push
cmc
cmps
test
add
or
push
pop
push
inc
or
and
aas
leave
push
jo
push
ins
fsin
or
pop
cld
fld
fistp
pop
adc
push
push
push
fcmovnb
sbb
inc
pusha
pop
and
fdivr
add
fstp
fld
cmp
fmul
xor
inc
adc
cmp
call
popf
sub
mov
jne
push
call
or
scas
hlt
in
jecxz
add
call
imul
fcmovnu
mov
lock
int3
mov
es
xchg
xor
shl
das
push
sub
cs
push
sub
ss
xchg
and
jmp
mov
out
out
fadd
cmp
push
call
sub
inc
pusha
mov
xchg
jmp
xor
lods
clc
jg
mov
fst
mov
push
mov
rep
lea
pop
mov
rep
and
lea
push
mov
push
inc
cld
add
mov
call
mov
cmp
je
test
je
push
call
sbb
push
lods
inc
sbb
jne
add
(bad)
out
call
ja
and
jne
cmc
movzx
sub
sti
call
push
push
add
push
call
adc
push
push
push
aas
lock
std
add
push
call
inc
and
inc
lock
jno
into
call
jmp
lock
add
add
(bad)
call
clc
call
adc
dec
sbb
mov
enter
out
push
jae
retf
push
and
sbb
fsubr
ror
mov
push
xor
push
call
inc
(bad)
cmp
sub
ins
add
ins
add
inc
sub
call
mov
test
je
inc
test
je
or
sub
and
xor
cmp
lea
in
movs
call
into
adc
cmp
pop
je
popa
pusha
adc
ror
jo
pop
cdq
xor
pop
hlt
out
cmp
call
add
dec
sbb
dec
cmp
jbe
jno
add
or
add
inc
fdivr
call
push
shr
loopne
or
or
ja
sbb
jl
ret
adc
mov
je
xor
cmp
push
sbb
xchg
shl
fcomp
rol
and
(bad)
std
cmp
jp
mov
call
add
ficomp
in
(bad)
(bad)
out
mov
sub
push
push
mov
call
outs
and
nop
push
push
lea
push
call
nop
cmp
daa
jno
cmp
ds
push
aad
or
pop
(bad)
(bad)
dec
dec
cld
(bad)
fild
mov
lea
shl
fstp
cdq
idiv
pop
lock
aaa
sti
pop
push
mov
adc
hlt
nop
push
call
shl
sbb
push
call
sbb
inc
fidivr
and
mov
(bad)
ins
push
push
call
sub
pop
stos
xor
movs
adc
inc
les
in
adc
adc
mov
mov
xchg
pop
adc
and
add
es
mov
sub
cmp
or
push
push
mov
cmps
or
adc
or
xlat
les
dec
cld
push
adc
sbb
cmc
sar
ror
test
je
jg
sbb
sbb
push
add
loopne
nop
inc
(bad)
jmp
(bad)
cmp
mov
je
push
jmp
mov
jae
sub
lock
movs
dec
std
(bad)
neg
xor
jae
jmp
loop
je
mov
loopne
pusha
les
call
pop
xor
adc
or
jecxz
or
test
jne
bound
retf
sbb
test
je
mov
or
shr
cmp
in
pop
jb
in
call
pop
je
push
sbb
sub
test
fsubr
pop
inc
test
pop
sbb
inc
and
aas
pop
call
or
push
call
pop
mov
adc
push
call
loop
repz
leave
ret
push
icebp
mov
mov
sbb
ror
mov
mov
call
xchg
add
popa
sub
and
rol
loopne
ja
add
into
inc
or
jecxz
adc
out
and
sbb
fist
push
inc
in
stos
sti
retf
repnz
mov
fmul
jge
add
jmp
or
sar
adc
push
push
call
aas
push
mov
push
add
stc
call
out
or
add
sar
das
rcl
rcl
movzx
jae
mov
push
call
add
adc
push
call
lds
mov
mov
(bad)
aas
xor
mov
fld
lea
fcom
add
imul
jg
fstp
fldz
fcom
or
dec
and
add
out
push
out
cwde
pop
mov
jge
mov
push
jmp
inc
aam
add
lock
mov
sbb
inc
adc
call
jle
call
mov
push
push
call
sub
pop
pop
adc
jbe
adc
dec
addr16
test
lods
push
push
push
xor
cmp
les
dec
or
push
sbb
rcr
add
inc
fstp
adc
(bad)
lods
inc
pop
add
add
add
mov
add
add
daa
(bad)
ja
int3
mov
call
add
clc
lea
push
outs
rep
call
mov
and
call
pop
stos
mov
mov
xor
test
mov
mov
jbe
(bad)
outs
inc
add
(bad)
sub
lea
dec
dec
adc
push
mov
add
mov
mov
mov
icebp
(bad)
inc
mov
mov
sar
mov
mov
mov
fld
(bad)
imul
push
(bad)
call
inc
call
inc
mov
movzx
sbb
adc
add
inc
or
mov
dec
cld
adc
jne
out
add
call
inc
hlt
imul
cmp
or
mov
cmps
out
cmp
icebp
sub
outs
mov
cmp
push
call
adc
fcomp
call
pop
in
mov
cmp
imul
(bad)
fild
mov
cli
pop
push
push
inc
xor
icebp
ret
or
mov
dec
dec
retf
add
idiv
call
call
add
cld
(bad)
pop
cli
(bad)
mov
jne
jbe
push
mov
add
mov
rol
jne
jnp
inc
xchg
pop
push
mov
test
je
shl
adc
push
clc
mov
std
jg
jmp
xor
push
pop
mov
or
add
push
push
push
push
loope
dec
push
jmp
cmp
jne
pop
sub
jg
add
pop
pop
je
mov
mov
inc
lods
or
inc
mov
mov
push
call
ror
and
cld
(bad)
call
std
mov
push
add
pop
push
pop
popa
lock
jmp
push
(bad)
push
push
push
push
or
push
(bad)
out
es
pop
inc
pop
inc
hlt
add
cmp
jge
out
cmc
clc
jb
inc
cld
pop
inc
call
adc
xchg
sub
jmp
and
push
mov
call
xor
cmp
je
cmp
cmps
mov
mov
in
or
(bad)
jge
mov
mov
je
mov
lea
sbb
push
call
push
add
js
call
sub
push
loopne
dec
imul
add
nop
pop
push
lea
shr
fs
add
mov
jbe
sbb
dec
sbb
jge
call
call
pop
stc
xchg
dec
sub
idiv
cld
dec
mov
mov
call
test
fucomip
stos
(bad)
cmp
call
icebp
cmp
and
test
sahf
sub
and
mov
ja
cld
jns
pop
mov
(bad)
jg
(bad)
cmp
jge
mov
push
in
cmp
jbe
cmp
je
mov
std
call
sbb
ins
pop
add
cmp
jae
jg
retf
sbb
and
xor
pop
imul
add
cmp
inc
mov
cmp
stos
and
adc
or
ror
movs
aam
inc
int3
lahf
cmp
mov
mov
jmp
sbb
ss
xor
test
mov
mov
into
xor
mov
aaa
add
cmp
jne
mov
loopne
sbb
fs
shr
dec
push
push
call
jb
or
xchg
jl
je
jb
push
or
mov
ja
cld
sbb
jne
je
hlt
inc
mov
add
test
or
mov
jle
mov
mov
mov
push
mov
add
fdiv
lea
mov
lahf
mov
jne
mov
fs
inc
inc
mov
xor
cmp
(bad)
fcomip
pop
or
jo
ret
push
or
mov
or
mov
mov
mov
(bad)
(bad)
cmp
clc
jp
add
dec
cmp
cmc
loop
test
in
push
mov
push
fwait
sahf
out
jmp
(bad)
arpl
cmp
jne
mov
cmp
je
ret
scas
dec
into
call
call
sub
jo
mov
inc
out
loope
mov
sub
mov
sbb
push
jl
outs
mov
mov
push
add
fild
sbb
sbb
jge
mov
and
je
fiadd
movs
add
leave
shl
movs
mov
(bad)
fmul
jle
test
add
das
mov
push
aam
cmp
pop
je
mov
mov
call
fsubr
fsubr
push
not
fild
push
test
push
jne
mov
lea
push
and
jle
out
cmovp
mov
or
push
mov
adc
mov
(bad)
fistp
mov
add
cmp
je
push
(bad)
mov
push
aam
repnz
call
inc
and
inc
jne
cmp
add
push
mov
mov
inc
test
cmc
inc
mov
sar
mov
psubb
(bad)
out
add
adc
jne
cmc
mov
add
or
jne
out
idiv
ja
test
ror
jmp
shl
addr16
ror
add
inc
and
add
int
stos
inc
adc
add
mov
add
mov
xor
cmp
jbe
pop
fcom
add
mov
mov
data16
out
dec
mov
push
push
add
mov
or
or
push
or
adc
push
mov
push
adc
call
mov
xchg
mov
mov
or
push
mov
aas
stc
leave
dec
adc
mov
push
mov
cmp
jg
push
push
mov
mov
movzx
inc
xor
ret
aam
jnp
dec
jne
mov
lahf
sbb
in
push
call
jne
stos
fsubr
mov
int3
mov
fwait
jns
push
jmp
hlt
icebp
sbb
sar
push
mov
mov
mov
adc
test
popf
xchg
out
leave
js
mov
dec
pop
xchg
add
cmp
ja
jmp
and
push
mov
lods
jge
mov
xor
cmp
mov
mov
adc
(bad)
inc
push
je
push
js
mov
xchg
and
and
mov
cmp
mov
cmp
inc
mov
mov
pop
jge
jg
jge
inc
jge
mov
jle
mov
setne
ja
lock
addr16
test
mov
ins
fs
pop
or
call
scas
pop
in
cmp
push
adc
mov
jbe
cmp
mov
sti
mov
mov
inc
inc
stc
xor
or
test
sbb
jne
(bad)
cmovge
call
mov
test
pushf
and
dec
and
call
mov
div
lea
adc
adc
dec
enter
fisub
retf
inc
adc
fist
(bad)
inc
mov
cmp
call
(bad)
mov
repnz
clc
adc
mov
repnz
mov
mov
jl
mov
call
aaa
xor
cwde
mov
movzx
sub
je
dec
je
dec
jne
push
test
push
test
je
or
lock
inc
pop
adc
(bad)
call
push
jmp
push
push
push
call
add
(bad)
push
push
mov
sub
js
shr
pushf
fimul
in
jle
aaa
aad
jbe
add
push
push
mov
cmps
fwait
sub
scas
mov
sti
call
aaa
je
mov
sub
popf
mov
lea
lock
jo
mov
movs
sub
js
jne
lea
sub
xchg
inc
ss
adc
fdiv
push
pop
dec
and
cmp
data16
mov
aad
int
fldenv
jl
lea
je
int
and
push
sub
adc
or
(bad)
sti
scas
mov
loop
outs
call
jmp
lahf
xor
clc
es
adc
adc
jmp
sar
or
inc
and
les
jmp
xor
pop
movs
push
inc
mov
xchg
movd
or
sbb
and
sar
outs
lods
mov
jne
mov
and
je
jle
clc
mov
jb
imul
and
jge
imul
pop
or
clc
jmp
out
and
fimul
add
stos
out
xchg
push
jg
jmp
(bad)
jp
and
mov
cmp
sub
in
pusha
mov
sbb
and
push
(bad)
adc
ret
push
pop
push
scas
add
or
ror
cwde
xchg
(bad)
loopne
cmp
inc
xchg
inc
xchg
(bad)
idiv
lea
jl
dec
outs
stos
call
cmp
pop
hlt
ud1
or
pop
rol
jmp
div
dec
sbb
mov
imul
dec
add
mov
mov
mov
aaa
fild
call
sbb
and
mov
inc
mov
push
xor
jmp
xor
mov
pop
rcr
cmps
inc
loopne
sbb
bound
call
js
jmp
out
mov
mov
call
js
mov
call
add
cmp
je
cmp
jne
mov
jb
pop
add
je
or
pop
sub
or
jmp
sti
adc
push
push
jne
call
mov
in
iret
call
icebp
aaa
cdq
jg
cmp
jne
sbb
adc
pop
sub
(bad)
scas
push
xor
add
int3
mov
xor
mov
adc
or
inc
mov
je
je
inc
or
jle
cmp
jne
sbb
inc
or
pop
pop
jmp
imul
jo
fcomp
fisub
add
test
adc
cmp
add
js
or
aas
std
jmp
or
mov
call
or
mov
sub
cmp
test
mov
sti
aaa
cmp
scas
sub
call
jmp
std
mov
or
test
mov
jmp
sbb
(bad)
fild
call
fld
cli
cmp
fsubr
inc
fadd
inc
cld
mov
sub
jb
xchg
fstp
adc
push
lds
lock
fld
in
call
stos
mov
fwait
popa
xchg
(bad)
test
xlat
call
sub
(bad)
adc
pusha
and
add
je
dec
sbb
mov
cld
shl
icebp
imul
stos
jne
push
push
fsubr
inc
idiv
or
push
fstp
call
(bad)
sub
mov
pop
push
fstp
sub
add
push
call
ret
popa
popa
fstp
sub
add
push
call
jp
xor
inc
jb
cwde
ret
aas
fstp
jmp
aas
ret
sbb
inc
xor
mov
mov
aaa
ret
mov
mov
push
call
mov
pop
inc
movs
push
cmps
push
push
call
sub
inc
cmp
enter
rcl
pushf
enter
mov
aam
inc
rol
fild
and
mov
fstp
setle
(bad)
jne
test
jnp
sbb
cmp
and
fld
cmp
xor
jnp
fld
jmp
fldz
fstp
jmp
cmp
addr16
and
pusha
fdiv
popa
jmp
icebp
jae
ror
push
and
call
fld
adc
and
mov
push
xchg
pushf
dec
mov
jle
inc
adc
adc
daa
mov
lea
or
loope
jb
fsubr
or
lahf
xchg
pop
sbb
or
jnp
mov
dec
fs
mov
popa
adc
pop
or
inc
or
fadd
or
imul
stc
in
mov
inc
xor
cdq
in
sbb
mov
xor
arpl
mov
ret
mov
shl
outs
pop
or
sbb
popa
pop
mov
push
mov
add
popa
and
pop
add
out
ins
mov
ins
jl
push
shl
mov
mov
inc
ja
xchg
imul
pop
jne
sbb
jg
dec
lock
mov
movzx
push
xchg
aas
stc
mov
gs
or
and
or
jmp
or
sahf
data16
push
aam
push
add
xchg
and
inc
mov
into
call
neg
push
push
call
jb
pop
push
sbb
jne
push
addr16
inc
sbb
cmc
out
fild
lea
push
call
inc
in
push
(bad)
mov
ret
push
arpl
cli
inc
add
inc
je
test
xor
fidiv
icebp
popf
sti
outs
xchg
lods
ss
call
or
dec
in
les
inc
outs
mov
mov
cmp
je
lea
inc
add
mov
jmp
push
push
or
rcl
iretw
(bad)
call
les
inc
mov
div
cmp
jne
inc
addr16
sti
and
mov
out
loope
iret
jl
lea
or
mov
mov
add
cdq
idiv
push
inc
(bad)
mov
mov
mov
sub
lea
cli
add
icebp
add
ret
(bad)
push
push
push
call
jl
mov
xchg
nop
sub
cld
aas
aaa
push
mov
jne
test
xor
pop
inc
adc
mov
push
lea
push
sti
push
push
call
cmp
push
sahf
aas
adc
call
mov
add
rep
push
lea
call
mov
retf
call
test
aaa
loope
dec
sub
test
mov
mov
je
call
cmp
adc
call
and
pusha
push
je
and
add
test
lock
mov
mov
test
jne
xor
xor
and
jo
push
mov
cmc
je
sbb
mov
mov
jne
test
je
xchg
cmp
jae
imul
jbe
std
inc
ror
inc
jecxz
inc
sub
mov
cmp
push
lea
sub
sar
dec
mov
jnp
dec
sub
add
push
jle
inc
add
movs
movs
movs
mov
sub
(bad)
call
lea
adc
movs
push
sub
mov
call
out
stos
mov
pop
push
call
out
stos
les
cmp
dec
stos
retf
aaa
xor
dec
and
jmp
cli
dec
inc
jnp
xchg
dec
push
add
aas
je
or
xor
lock
(bad)
jg
add
or
test
je
imul
je
push
sbb
cld
fnsave
arpl
movs
xchg
rol
mov
test
and
jp
mov
inc
adc
add
or
neg
jl
or
add
sbb
arpl
sti
(bad)
mov
inc
sbb
jnp
mov
inc
add
outs
or
mov
jmp
(bad)
(bad)
arpl
dec
push
dec
add
dec
add
enter
and
inc
add
push
out
rol
out
adc
test
aaa
enter
popf
fild
hlt
jmp
iret
pop
(bad)
cmp
adc
dec
and
call
jmp
les
xlat
stc
jmp
clc
loope
test
aaa
mov
test
mov
jl
dec
jmp
push
add
pop
je
loopne
ret
inc
fs
pop
bnd
or
pusha
pusha
mov
std
and
lea
push
call
pop
cmp
sbb
aam
inc
out
or
call
rcl
dec
je
pop
add
jns
(bad)
enter
pusha
dec
aam
stc
mov
mov
fld
adc
jne
pop
into
call
gs
xchg
test
jne
sub
cld
and
je
call
das
dec
sub
dec
and
int3
lea
adc
test
jo
pop
add
cmps
dec
push
mov
dec
sti
add
push
or
sub
sar
adc
je
and
(bad)
sti
dec
sti
inc
sbb
aad
sbb
xchg
jmp
je
add
ret
mov
ds
ret
imul
hlt
mov
adc
jmp
push
ss
push
loop
or
mov
call
mov
mov
call
mov
fldz
mov
mov
cmp
out
lea
mov
push
fldz
push
fstp
mov
mov
push
fstp
xor
lea
bound
cli
fnsave
push
lea
or
jae
add
inc
push
mov
dec
sbb
xor
push
call
jo
retf
push
push
mov
lea
cmp
push
jne
movlhps
imul
add
adc
adc
in
je
push
push
outs
mov
or
in
push
push
call
ret
dec
sti
adc
or
adc
mov
push
call
add
str
mov
and
inc
call
shr
pop
mov
ins
jp
(bad)
nop
stos
call
jg
icebp
jg
push
lea
call
mov
mov
fisttp
xchg
fld
mov
mov
call
(bad)
cmp
cmc
inc
or
fstp
lahf
mov
xor
sbb
ja
or
and
jle
cmp
je
push
xchg
mov
xchg
cld
(bad)
dec
dec
pop
push
adc
inc
jg
or
mov
add
inc
pop
add
add
sbb
or
call
add
inc
mov
hlt
daa
adc
pusha
call
je
mov
jmp
mov
rol
lea
mov
inc
sbb
ret
aas
cmp
je
cmp
aam
inc
cmps
stos
(bad)
push
mov
pop
pop
inc
mov
or
inc
inc
popf
dec
shr
pop
or
aaa
in
mov
scas
adc
mov
mov
push
push
call
mov
jnp
out
test
dec
xor
mov
pop
enter
sbb
adc
xor
sbb
stos
das
mov
shl
add
mov
and
jge
into
pop
cmp
movs
jae
mul
and
inc
das
sub
xchg
push
int3
call
xor
push
gs
xor
(bad)
pop
push
das
mov
cmp
je
fmul
sub
inc
mov
xor
and
pop
clc
std
(bad)
call
inc
cs
push
mov
stc
cmp
push
in
rcl
pop
in
clc
xor
mov
ja
push
in
retf
inc
jb
adc
cmp
push
mov
movs
test
jne
mov
movs
mov
popf
and
sub
les
lds
cmp
outs
cmp
scas
cmps
iret
(bad)
test
push
call
shl
ds
call
js
mov
lahf
lock
inc
pop
mov
das
(bad)
adc
or
sbb
xor
pop
cmp
xor
bound
out
fwait
cmp
pop
adc
sub
push
mov
mov
bound
hlt
push
pop
test
or
mov
les
adc
sahf
test
push
add
into
call
inc
je
fld1
ds
jne
push
add
lea
push
add
pop
lea
pop
mov
test
(bad)
cmp
mov
mov
push
in
add
and
call
push
cmps
mov
ss
xor
push
lea
sub
jl
mov
repz
in
test
push
lea
cmp
mov
fadd
fwait
je
pop
ja
test
je
mov
call
push
je
mov
or
loopne
pop
sahf
imul
jbe
push
call
out
loopne
jg
shl
and
enter
clc
mov
mov
inc
mov
mov
movs
sub
leave
jne
push
stos
push
jmp
add
call
aas
lds
add
push
jo
ds
sbb
pop
push
push
dec
mov
sbb
mov
and
jl
(bad)
mov
inc
rcl
fimul
or
mov
or
outs
aaa
pop
aaa
jo
aad
push
inc
mov
mov
mov
push
sub
dec
or
call
mov
mov
mov
out
loop
add
ss
push
daa
push
ds
cmp
push
and
xor
mov
les
je
xchg
sbb
xchg
adc
pop
out
xor
sbb
iret
call
adc
push
addr16
xchg
lods
sbb
out
or
jne
lods
cmp
jle
mov
sbb
enter
mov
into
add
mov
xor
push
shr
and
call
mov
mov
setne
test
je
cmps
add
scas
pop
add
std
cmp
pop
je
cmp
xor
add
inc
fild
mov
push
mov
jo
cmp
inc
(bad)
cmp
add
aaa
push
out
loop
hlt
stc
out
or
shl
inc
test
mov
call
out
clc
into
call
call
or
add
push
stos
pop
and
call
test
or
call
out
das
popf
push
sbb
call
xchg
jnp
adc
dec
bound
jbe
mov
xchg
push
jl
call
and
pop
or
mov
push
mov
push
adc
js
jne
call
and
pop
jo
mov
(bad)
cmp
jne
out
out
inc
cmp
jne
jle
jne
or
jg
dec
sbb
iret
je
call
test
push
icebp
call
cld
retf
call
jge
jl
push
call
in
psubsb
loopne
jmp
adc
jnp
inc
das
inc
add
pop
ror
mov
jg
je
sub
je
sub
mov
dec
dec
je
test
jg
push
fdiv
push
push
(bad)
out
mov
(bad)
call
aad
sbb
sar
mov
mov
je
add
icebp
(bad)
stc
inc
je
cmp
je
cmp
ret
jg
fistp
add
or
test
push
inc
outs
cmp
je
cmp
je
xor
(bad)
dec
jmp
push
pop
mov
cmp
or
mov
or
sub
fsub
stos
mov
inc
pop
mov
fistp
xor
push
lea
and
stos
(bad)
call
call
clc
inc
add
jmp
mov
loop
add
or
xor
cmp
mov
pop
mov
push
inc
mov
jne
call
add
dec
and
mov
(bad)
out
dec
mov
xor
and
inc
dec
add
add
cmp
inc
cld
call
cs
push
mov
lea
call
clc
xchg
pop
xor
jne
lea
dec
lea
cmp
push
aad
xor
or
and
movzx
aas
inc
inc
adc
inc
mov
cmp
call
xor
repnz
or
push
mov
cmc
mov
dec
mov
xor
ja
sti
sbb
jne
mov
call
call
inc
or
inc
inc
(bad)
(bad)
cmp
pop
mov
mov
mov
mov
je
inc
in
cmp
cmp
jbe
arpl
inc
std
fbstp
add
inc
and
push
push
push
rol
and
mov
mov
inc
mov
pop
aad
or
add
leave
mov
je
xor
mov
and
cmp
mov
clc
add
sbb
mov
pop
inc
lock
shr
cmp
pminub
je
add
jno
je
mov
jne
cmp
jne
mov
push
in
add
rol
inc
outs
clc
sub
push
imul
inc
test
call
(bad)
fbstp
cmp
jle
cmp
jle
cmp
jne
push
adc
inc
arpl
xor
ja
mov
lea
test
push
mov
cld
mov
out
cdq
cmp
jg
std
(bad)
jge
dec
mov
mov
xchg
xor
xor
dec
xchg
rcl
call
cmp
jne
inc
mov
ret
jg
sar
cmp
mov
je
or
sub
lahf
push
add
loopne
call
arpl
add
(bad)
mov
outs
je
ins
dec
call
add
add
mov
and
sub
add
pop
aad
popa
les
test
cmp
je
push
inc
aad
mov
ja
add
mov
outs
clc
and
je
inc
xchg
push
call
(bad)
jg
or
push
movzx
movzx
imul
fs
imul
gs
ret
xchg
ret
sbb
jo
xchg
push
ficom
sbb
test
or
add
inc
pop
add
movs
fwait
and
loop
and
dec
add
mov
cmp
xor
call
in
jp
call
fwait
daa
xchg
sti
je
call
inc
je
test
mov
add
outs
sub
sbb
mov
les
(bad)
fmul
call
jmp
cmp
test
fild
sub
or
mov
add
cmp
scas
inc
sub
inc
pusha
xor
mov
mov
call
ja
pop
jle
call
push
shl
out
or
cmp
cli
outs
cli
(bad)
fist
mov
mov
cmp
je
movzx
cmp
jl
and
fistp
adc
pushf
jmp
fild
jne
cs
and
mov
dec
pop
xor
cld
mov
push
mov
push
push
call
ss
test
loopne
loope
pop
pop
ffreep
pop
push
lea
pop
cdq
arpl
jne
pop
sti
out
loopne
test
dec
xchg
ja
sbb
je
mov
fmul
fcomp
sub
jp
sbb
test
add
xor
movzx
je
(bad)
shl
mov
inc
inc
sbb
jo
icebp
call
and
jne
or
inc
fs
ja
cli
mov
neg
inc
fadd
(bad)
fild
jne
fucomi
fs
mov
fstp
movzx
push
adc
push
call
test
(bad)
out
mov
xor
mov
mov
mov
add
faddp
jmp
lea
or
clc
push
js
shl
cmp
inc
mov
push
xchg
add
xor
lods
jl
shl
inc
mov
shl
ror
push
sti
arpl
pop
mov
mov
mov
mov
mov
test
push
xor
or
cmp
inc
or
pop
cld
fdivr
dec
pop
jmp
cmp
in
imul
add
call
push
pop
sub
mov
cmp
imul
or
outs
enter
aad
(bad)
jmp
out
mov
and
nop
data16
push
push
dec
fadd
lahf
inc
sete
or
xchg
jne
xchg
pushf
adc
add
test
(bad)
xchg
scas
test
ror
pop
add
je
add
(bad)
adc
and
ja
dec
xor
js
push
pop
add
sbb
push
call
je
mov
sbb
in
dec
sti
jb
(bad)
jmp
or
test
je
cmp
paddb
push
bound
pop
dec
adc
je
arpl
fld
je
pop
xchg
sub
push
call
outs
enter
mov
ffree
mov
iret
clc
je
into
sub
movs
mov
je
push
call
fisub
jmp
call
(bad)
aas
cli
out
inc
mov
push
mov
call
je
fild
sub
mov
add
cli
mov
clc
fstp
push
call
aam
addr16
(bad)
mov
and
aaa
sub
add
sbb
sbb
movd
jg
cmp
jle
aam
mov
dec
je
dec
loopne
hlt
les
push
pxor
inc
jno
push
imul
(bad)
call
clc
add
not
and
mov
mov
add
or
lea
jbe
fs
ja
ins
or
mov
fadd
pop
mov
adc
ja
rcl
fld
cmp
(bad)
mov
call
call
or
ja
jbe
movs
inc
sbb
pinsrw
out
pop
aad
cmp
and
call
mov
add
aaa
pop
lea
cmp
mov
in
or
ins
test
xlat
call
sub
sub
xlat
jge
rcl
ror
add
inc
sahf
and
mov
icebp
(bad)
jg
js
add
mov
or
mov
mov
fld
call
mov
sbb
dec
sbb
fild
adc
and
je
inc
stos
into
call
dec
rol
dec
xchg
push
jmp
std
(bad)
xor
cmp
add
add
mov
ja
je
or
stc
add
sbb
aam
scas
cmp
ja
je
fsub
push
or
(bad)
jbe
retf
or
into
je
jns
sbb
or
(bad)
push
movzx
push
inc
pop
jmp
pop
movzx
cdq
idiv
test
mov
jl
std
mov
cmp
jne
dec
sub
push
jge
test
jl
jns
pop
cmp
and
repnz
mov
pop
lea
cmp
jl
cmp
jg
adc
jbe
call
mov
mov
test
mov
mov
jecxz
call
mov
push
push
call
test
jne
mov
test
jge
jmp
(bad)
mov
pop
cmp
mov
or
jge
mov
lea
mov
jnp
jg
sbb
(bad)
mov
cmp
jne
or
mov
test
jl
jmp
mov
mov
aas
xlat
mov
mov
adc
ins
cmp
loope
ja
push
or
cmp
jle
out
ficomp
mov
inc
or
inc
sub
clc
(bad)
js
cmp
mov
jne
cmp
jg
xchg
sbb
push
jne
sub
or
dec
pop
mov
push
retf
std
inc
js
test
fcomp
mov
fmul
or
push
sar
and
mov
scas
inc
adc
mov
call
loope
fsubr
dec
pop
(bad)
or
mov
add
jp
idiv
out
sub
mov
inc
adc
jbe
xchg
std
add
push
pop
sbb
push
test
retf
call
(bad)
sahf
add
dec
jne
inc
and
ror
call
(bad)
xchg
inc
call
add
inc
adc
inc
or
(bad)
mov
or
js
(bad)
fistp
mov
or
mov
mov
xor
out
inc
mov
or
call
adc
and
hlt
pusha
dec
mov
call
mov
arpl
jp
out
mov
mov
in
and
(bad)
call
or
jo
xor
scas
cmps
or
popa
sbb
fdiv
out
dec
clc
adc
fimul
mov
add
lahf
mov
outs
cwde
sti
call
inc
add
aas
pop
je
xor
inc
mov
aas
mov
call
call
xor
inc
push
mov
sub
push
call
call
test
rcl
pop
in
pop
rol
and
lea
jle
mov
call
pop
lahf
add
aaa
adc
cmp
jne
push
push
mov
or
aam
(bad)
dec
test
out
dec
jg
xor
movsx
bound
enter
inc
push
ret
sti
sbb
sar
dec
aas
push
(bad)
retf
add
shl
and
movzx
sub
mov
je
dec
out
jbe
push
jne
mov
mov
add
jmp
or
or
pop
and
fild
add
xchg
cmp
je
mov
jmp
cmp
je
mov
mov
rol
and
mov
jno
(bad)
aad
and
jg
cld
or
push
ror
or
int
cld
jmp
push
ja
test
ror
mov
jmp
dec
mov
mov
pop
js
mov
jne
add
call
loope
pop
jbe
jmp
push
pop
inc
mov
push
call
aaa
cmp
adc
call
mov
in
sub
sbb
mov
push
jbe
cmp
jle
jne
mov
test
push
push
call
add
mov
(bad)
inc
jnp
push
call
sub
add
mov
sub
std
(bad)
in
add
pop
lea
cmc
lahf
xor
push
call
sbb
xor
jge
pop
pop
cmps
data16
out
pop
cmp
pop
retf
call
push
push
call
ins
mov
call
ror
test
jne
inc
mov
push
push
push
push
call
and
test
add
or
inc
mov
fst
cmp
je
lea
daa
call
jb
mov
xchg
ret
cmp
xor
call
push
push
lea
(bad)
fild
mov
in
pop
push
cmp
je
cmp
jne
mov
clc
xchg
jg
cmp
jne
xor
inc
push
push
mov
push
jge
ret
popa
(bad)
(bad)
ffreep
cmp
inc
fwait
inc
pop
cmp
scas
es
(bad)
jg
mov
cmp
mov
je
push
js
mov
mov
jmp
push
push
adc
pop
xchg
jecxz
jg
cmp
jne
mov
pop
jmp
push
mov
out
push
push
loopne
sub
cmps
aaa
cmp
call
icebp
add
push
dec
lock
push
cmp
adc
(bad)
(bad)
(bad)
cmp
mov
jne
mov
cmp
lea
je
call
cmp
jg
push
push
push
xor
mov
push
cdq
push
rol
pop
shr
jmp
mov
push
mov
adc
inc
inc
cmp
cdq
mov
cmp
dec
loopne
mov
jp
inc
test
je
mov
stos
cmps
mov
mov
mov
lods
fldcw
push
aad
push
mov
mov
maskmovq
jg
call
sub
into
cmp
inc
aam
mov
jmp
cmp
jne
mov
mov
je
mov
dec
pop
cmp
jle
dec
inc
or
ja
mov
in
jmp
inc
push
mov
push
jmp
pop
or
pop
add
push
cld
jmp
js
into
call
xor
cmp
xor
push
cmps
mov
cmp
iret
mov
je
lock
jne
loope
lds
cmp
inc
sbb
fild
ror
test
jne
cmp
je
adc
cli
mov
push
call
test
(bad)
(bad)
add
sbb
jmp
dec
xchg
fistp
neg
lea
sbb
and
push
xor
push
push
call
pop
pop
(bad)
jmp
mov
cmp
jg
adc
je
je
jne
lock
add
mov
neg
sbb
and
push
mov
aaa
sbb
jo
inc
call
(bad)
adc
sbb
add
out
popf
add
pop
pop
pop
or
ja
fild
es
and
push
adc
into
call
cmp
or
movs
jne
(bad)
mov
fdiv
loop
mov
into
push
push
call
and
jmp
xor
retf
cld
jbe
mov
mov
jmp
int3
sar
mov
pop
add
cmp
jbe
lea
cmp
ja
pop
mov
fcomp
sub
cmp
je
mov
shl
not
push
popf
adc
push
push
loope
mov
sub
aas
xchg
push
push
test
push
push
jne
mov
je
jns
add
(bad)
adc
imul
add
pop
xchg
sbb
je
lahf
mov
call
test
and
jbe
popf
push
adc
jo
out
outs
enter
movs
and
push
push
push
jle
shl
and
sar
mov
imul
xor
xor
test
add
mov
or
push
mov
sub
aaa
icebp
int3
xor
loop
mov
inc
pop
sti
lds
icebp
in
xchg
and
inc
push
or
out
add
xchg
lea
add
push
call
test
neg
call
and
sub
mov
mov
sti
jo
idiv
mov
data16
mul
dec
js
inc
or
outs
bound
xchg
cmp
ins
xor
fidivr
popa
in
dec
and
push
jbe
mov
adc
jb
mov
push
out
mov
call
rcr
pop
mov
loop
test
cmp
je
push
imul
add
sar
(bad)
mov
cli
push
lock
push
stos
pusha
clc
cmp
and
jne
jmp
fiadd
or
mov
lahf
mov
push
out
sahf
push
int3
xor
jne
cmp
inc
and
jb
int3
ss
(bad)
imul
cmp
je
cmp
jle
mov
aaa
inc
push
mov
ret
out
cwde
jge
nop
lahf
inc
call
adc
inc
sahf
js
jmp
push
jbe
mov
div
mov
push
xor
jmp
xor
xor
test
fist
or
call
cmp
pop
pop
mov
je
test
mov
pop
and
add
or
bndstx
and
sub
sub
mov
xor
jbe
jg
xor
(bad)
jne
sbb
xchg
sti
out
jge
push
call
adc
adc
dec
outs
inc
pop
(bad)
out
push
add
das
cmp
je
jl
cmp
shl
xor
into
nop
int
hlt
mov
sub
push
fst
test
xchg
sti
dec
jg
adc
(bad)
das
inc
into
pop
out
iret
mov
sbb
mov
xor
arpl
call
stos
and
mov
cmp
add
test
std
xchg
add
pop
js
inc
push
and
jo
adc
mov
call
ss
mov
mov
sub
adc
and
(bad)
out
out
call
jmp
fs
pop
les
(bad)
jg
jne
mov
jg
fst
ds
mov
cmp
mov
cmp
dec
push
cmp
sbb
jb
jge
mov
mov
mov
dec
push
bound
and
test
(bad)
push
pop
sbb
pop
sub
cmp
xor
inc
inc
push
mov
push
add
icebp
inc
inc
mov
or
xor
mov
mov
add
mov
clc
(bad)
inc
lods
call
sbb
push
push
loope
aaa
in
inc
push
test
je
test
inc
sub
shl
lds
call
jl
jg
mov
push
add
cld
dec
dec
sub
jmp
cld
(bad)
and
inc
jne
add
inc
dec
mov
push
call
icebp
ja
outs
or
mov
push
sbb
aam
and
out
jge
add
xchg
(bad)
call
lock
push
ja
dec
adc
cmp
inc
sbb
cmp
loopne
lea
(bad)
rep
lea
call
inc
inc
xchg
test
inc
std
cmps
loopne
jge
cmp
sub
or
push
lea
call
fucom
sbb
inc
mov
lods
(bad)
xlat
mov
push
xchg
inc
call
push
outs
cmp
je
cmp
loop
test
stos
add
adc
xchg
movs
(bad)
fild
std
jmp
js
xor
or
out
pop
sbb
call
xor
loopne
add
outs
jne
push
je
or
jno
je
push
xor
jle
pusha
adc
shr
inc
cmps
adc
cmp
xlat
call
inc
cmp
jl
pop
rol
add
sbb
add
(bad)
add
adc
push
call
push
add
mov
push
cld
mov
add
call
ret
push
push
call
lea
mov
xor
sub
call
in
loopne
inc
add
pusha
push
std
or
call
mov
inc
sbb
push
(bad)
das
xchg
jl
sbb
mov
push
stc
cmc
jmp
call
mov
test
(bad)
cmp
cmp
jne
cmp
push
mov
call
in
out
loopne
lea
jne
mov
ins
jp
inc
out
cmp
jne
(bad)
retf
mov
and
ror
enter
add
call
mov
fdiv
out
mov
out
lea
mov
lea
or
scas
and
lods
cdq
add
fisttp
lea
mov
add
fbld
mov
and
xchg
add
(bad)
je
mov
call
adc
sub
outs
add
aad
(bad)
cmp
jne
lea
mov
cmp
je
cmp
jne
das
mov
push
call
fadd
jne
and
and
retf
inc
lock
cmp
ja
loop
xor
sub
sbb
push
push
push
call
pop
dec
sub
mov
data16
pop
pop
lea
adc
pushf
jmp
jae
jo
or
jne
pop
push
mov
add
call
add
or
div
aad
sbb
inc
les
add
push
jne
sub
adc
sar
pop
and
dec
or
adc
jmp
cld
and
sub
shl
push
ins
int
add
adc
pop
jae
fadd
call
test
pop
jne
jnp
add
push
call
fcomp
ja
(bad)
call
xor
ins
jle
mov
inc
push
xlat
push
sbb
(bad)
out
push
call
mov
call
addr16
jg
call
jg
and
mov
lea
push
adc
inc
and
call
shl
sti
and
and
push
jl
jle
loop
xor
pop
lea
cmp
je
imul
cli
dec
xor
adc
or
mov
cmp
pop
pop
pop
je
add
mov
and
call
call
adc
sbb
adc
or
sbb
jne
jg
add
mov
or
inc
(bad)
call
call
add
inc
je
cmp
mov
mov
cmp
aas
int3
je
call
inc
push
call
shl
push
lea
push
dec
mov
cld
popa
out
or
push
cmp
ja
adc
into
call
add
bound
inc
jmp
push
push
mov
call
sub
dec
and
push
push
mov
adc
es
push
out
cwde
xchg
jg
sar
push
sbb
sub
rol
or
(bad)
add
je
mov
mov
sar
jge
ja
mov
cmp
je
mov
mov
inc
adc
test
je
ja
je
icebp
mov
(bad)
mov
push
xor
dec
cmp
jbe
cmp
test
inc
popa
pop
test
add
in
je
xor
clc
sub
clc
mov
in
xchg
mov
mov
mov
mov
sti
push
mov
cs
loop
fbstp
dec
call
cmp
mov
jg
or
lahf
jb
(bad)
jg
jne
pop
inc
out
push
je
test
or
(bad)
pushf
push
call
bnd
je
cdq
jb
mov
or
jne
mov
dec
outs
jecxz
(bad)
call
fdiv
test
mov
jecxz
mov
dec
push
pop
jne
lea
push
clc
add
(bad)
xchg
pop
push
lea
push
push
xchg
(bad)
cmps
lahf
mov
and
and
or
add
mov
call
fild
mov
adc
je
jmp
inc
xchg
ins
je
pop
fcomp
fs
or
daa
nop
fwait
out
and
into
call
popa
fcomp
movs
dec
jge
call
or
call
sar
lods
or
jne
cmp
push
(bad)
(bad)
(bad)
fbstp
pop
fldz
pop
lea
lea
rep
push
push
lea
fstp
push
call
fldz
lahf
mov
add
ror
add
ror
mov
and
sahf
cmovge
push
fld
push
call
or
xor
in
dec
mov
mov
sub
sub
sub
sub
mov
mov
mov
lock
in
mov
jle
jle
sbb
jle
add
test
cmp
sbb
inc
add
mov
call
cmp
cmp
adc
call
pop
jg
aam
mov
mov
mov
sub
mov
mov
mov
dec
push
cld
push
mov
add
pop
add
sub
add
(bad)
out
(bad)
sbb
cld
cmovo
inc
push
push
add
mov
mov
pusha
lea
push
push
call
inc
push
ins
cwde
sti
adc
pusha
add
cmp
(bad)
jg
leave
je
dec
sub
mov
mov
mov
sub
lea
data16
inc
cmp
jle
lea
push
sub
push
call
and
ins
in
cmp
jb
call
inc
(bad)
dec
pop
dec
cld
mov
mov
adc
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
add
mov
hlt
sbb
int3
xor
mov
push
test
inc
fadd
aam
fmul
mov
mov
push
sti
or
add
inc
xor
adc
out
mov
cmp
sub
ret
inc
pushf
dec
mov
call
cmp
les
cmp
cmp
or
stos
lods
add
cmp
jl
mov
and
pop
adc
adc
and
mov
push
mov
sti
jmp
ficom
inc
or
inc
clc
call
dec
inc
mov
test
mov
add
in
add
fcom
inc
xchg
(bad)
push
jae
sbb
dec
cs
cmps
push
and
or
loopne
test
mov
mov
shr
and
jne
mov
mov
(bad)
mov
leave
and
dec
and
test
add
repz
inc
and
jge
add
add
jmp
mov
(bad)
inc
jnp
cmp
jne
push
push
call
in
ja
add
push
adc
xchg
adc
fs
std
into
call
push
out
ret
mov
xchg
or
xor
and
mov
mov
sbb
adc
pop
mov
call
or
std
(bad)
push
mov
call
scas
mov
clc
test
jne
push
pusha
or
ret
lea
(bad)
mov
xor
push
call
pop
pop
je
push
mov
call
data16
ins
or
sub
fwait
inc
push
rcl
hlt
mov
nop
sub
loop
and
mov
jne
pop
jae
pop
ret
mov
jns
add
add
pusha
ja
cli
pop
push
mov
stos
into
call
push
rol
jmp
inc
jne
mov
push
mov
je
mov
pop
or
mov
popa
lds
test
and
out
xor
sbb
pop
push
pop
inc
jge
(bad)
mov
add
clc
jmp
pusha
je
inc
jmp
mov
cmp
jg
xor
js
test
jl
lea
clc
cmp
cld
inc
adc
dec
in
mov
and
in
xchg
dec
clc
mov
jmp
mov
mov
or
ins
clc
add
xchg
mov
jge
mov
inc
adc
clc
mov
je
cmp
jne
inc
int
retf
jne
in
shl
sbb
cli
cmp
jp
les
test
int
ja
js
outs
je
jne
inc
aam
add
mov
loop
push
stos
adc
push
call
aad
inc
rol
fnsave
loope
lock
or
xchg
ins
mov
pop
pop
std
lock
mov
icebp
mov
popf
in
cmp
sbb
loope
mov
xchg
mov
or
mov
xor
and
mov
clc
call
inc
xor
mov
mov
inc
(bad)
es
icebp
adc
push
aam
mov
data16
add
sub
mov
je
jne
and
push
jmp
cmp
jl
push
pop
mov
mov
(bad)
call
sub
clc
cmp
jle
lea
mov
adc
cwde
push
push
cld
sti
push
lock
mov
jne
(bad)
lock
inc
in
jne
dec
mov
jns
push
mov
sbb
icebp
(bad)
push
pop
push
mov
inc
test
push
pop
sub
dec
inc
sbb
dec
mov
arpl
add
clc
xor
cld
jle
mov
stc
retf
jne
sar
mov
or
cld
push
call
cmp
jne
mov
imul
in
push
add
(bad)
dec
xor
mov
pop
fsub
cld
je
fcom
lahf
add
jle
(bad)
push
call
loope
add
stc
mov
push
mov
call
inc
add
jmp
scas
call
and
test
push
jl
add
push
mov
push
hlt
imul
add
out
into
ins
je
ins
or
cmps
push
cmp
je
jnp
outs
mov
add
jg
pop
je
mov
mov
mov
jo
dec
adc
movs
pop
stc
dec
adc
mov
cmp
jne
dec
div
jge
push
add
movs
ss
cmps
push
xor
and
aaa
jne
lods
or
sub
in
add
xor
je
(bad)
adc
pop
jle
inc
add
js
je
call
sbb
push
enter
jne
call
and
pop
jo
dec
inc
aas
pusha
xchg
add
call
inc
aad
push
jl
test
push
sub
adc
clc
std
add
jl
hlt
jle
je
xor
mov
or
test
jae
lea
sar
lea
mov
call
daa
mov
(bad)
call
jge
add
cmp
jae
movzx
adc
push
lea
or
or
jl
scas
mov
jne
mov
std
scas
sbb
call
push
jb
and
and
mov
mov
xchg
add
dec
movs
je
cmp
je
mov
mov
test
inc
mov
or
call
xchg
enter
jmp
enter
push
les
mov
mov
cmp
sbb
mov
call
add
cs
jge
mov
sub
inc
rcr
dec
fdiv
aas
aad
mov
add
jae
jne
ds
fwait
add
jge
rol
test
inc
test
sbb
bound
call
add
mov
cld
out
fcom
lea
pop
cmps
dec
dec
lock
or
push
or
sbb
shl
add
jp
cmc
in
sub
lea
inc
cmp
dec
mov
sbb
dec
in
xchg
sbb
fcom
and
push
adc
dec
les
sti
call
jl
outs
cmc
fst
call
or
inc
jo
add
sub
test
inc
mov
mov
inc
cld
aas
dec
imul
js
(bad)
je
mov
(bad)
jnp
push
aas
test
or
inc
sub
call
sbb
adc
jg
sti
jg
les
or
sbb
call
test
mov
jle
push
cmp
test
adc
or
pop
lea
xchg
cmp
add
ds
sbb
push
call
jnp
jb
inc
das
retf
call
call
in
pop
jmp
xor
cmp
test
push
call
cmp
clc
push
clc
bound
shr
lahf
adc
pop
inc
out
or
(bad)
jmp
pusha
out
pmaddwd
call
ja
push
pop
aaa
stos
jnp
jne
loope
push
scas
dec
pop
aaa
jbe
inc
adc
test
add
add
cmp
in
bound
add
cmp
jle
(bad)
ds
add
jae
jmp
out
cmp
(bad)
aad
js
lea
je
push
push
push
clc
mov
pop
pop
(bad)
mov
popa
(bad)
fbstp
lock
push
xor
ror
inc
jmp
jbe
cmp
jne
ror
inc
and
test
out
inc
inc
(bad)
mov
push
mov
add
push
push
imul
jo
bound
ret
dec
clc
mov
repz
xor
jmp
jbe
rcr
stos
je
outs
popa
pop
cmp
call
xor
sbb
push
scas
aaa
xor
add
inc
and
or
add
and
test
mov
add
cs
push
lea
sub
sbb
lods
test
test
sbb
add
test
dec
cmp
adc
fs
fst
xor
sbb
jle
inc
jmp
leave
icebp
jne
jbe
adc
jns
js
rcl
mov
je
test
ror
gs
clc
push
sbb
sbb
jbe
mov
mov
dec
call
dec
jne
lea
call
jmp
(bad)
int3
int3
pop
sub
mov
mov
xchg
fnstsw
push
call
lock
out
or
jns
(bad)
std
mov
rcr
add
push
mov
mov
inc
xor
retf
loopne
xlat
sti
jne
jge
add
retf
inc
cmp
retf
shr
lds
mov
lds
sbb
int3
lock
sar
sbb
or
adc
push
aam
inc
push
loopne
cmp
jno
inc
pop
data16
movzx
push
push
and
pusha
movs
and
sbb
mov
dec
(bad)
stc
mov
dec
(bad)
je
lahf
cmp
jle
xor
sbb
lds
mov
jmp
or
or
es
xor
test
nop
fsubr
dec
pop
inc
shl
mov
(bad)
fisttp
js
dec
je
ins
jge
stc
test
mov
mov
jno
inc
adc
repz
nop
fadd
add
inc
pusha
push
push
mov
dec
aas
cmps
adc
xor
jecxz
shl
hlt
jmp
je
loop
add
test
add
cmp
push
add
mov
cmp
je
mov
push
sub
sahf
test
jnp
out
or
push
sub
jmp
cmp
out
jmp
xor
pushf
lods
or
cdq
cwde
shl
push
pushf
mov
dec
cld
inc
push
call
xchg
push
push
xor
push
call
dec
inc
mov
outs
mov
call
sbb
and
sub
leave
out
sub
scas
cmp
ror
repnz
pop
cmp
test
or
or
pop
mov
out
cli
(bad)
jg
jge
mov
mov
mov
into
mov
pop
jmp
pop
aas
iret
je
mov
call
mov
sbb
(bad)
pop
mov
mov
cmp
aad
test
mov
ja
push
dec
mov
or
push
mov
push
int3
inc
adc
add
fimul
push
call
add
mov
dec
jmp
jb
xchg
(bad)
into
rcr
add
test
cdq
adc
int
out
pop
cmp
jne
call
push
pop
ins
sbb
dec
inc
stos
mov
retf
test
ja
call
in
arpl
mov
(bad)
xor
and
or
test
ins
mov
push
call
das
lods
call
jnp
inc
sub
int
xchg
mov
lods
cli
xchg
jae
mov
in
mov
clc
(bad)
cmp
dec
sub
cli
std
dec
jne
clc
adc
ret
in
inc
lock
or
jecxz
lods
cli
jne
lea
xchg
fs
lds
icebp
push
mov
sub
adc
cs
jecxz
push
adc
sbb
shr
mov
inc
aas
cli
dec
in
or
(bad)
add
into
push
jne
mov
xor
mov
mov
stos
mov
jae
or
jecxz
dec
jmp
push
rol
xlat
add
out
or
fchs
sar
ret
hlt
xor
mov
add
pop
adc
dec
idiv
add
push
sub
cs
pop
inc
lock
dec
retf
call
fbstp
inc
push
lds
fbstp
pop
push
lock
jle
add
mov
cmp
les
or
call
add
call
pop
pop
mov
adc
mov
mov
call
or
call
cli
in
(bad)
push
test
push
cmps
or
mov
or
xchg
shl
cmp
mov
icebp
call
mov
mov
mov
ja
(bad)
jg
mov
adc
in
sbb
(bad)
std
sti
call
call
icebp
push
fimul
adc
frstor
cmp
push
pusha
out
jmp
stos
loope
(bad)
(bad)
(bad)
out
pop
call
ret
push
push
mov
push
push
call
push
push
jne
mov
cmps
add
sub
add
(bad)
and
or
and
std
aas
push
mov
test
jg
push
call
(bad)
mov
(bad)
pop
loop
(bad)
add
push
shl
sub
add
adc
jo
mov
repz
mov
(bad)
jmp
outs
cmp
dec
or
sar
inc
or
pop
or
fdivr
mov
aas
mov
dec
sbb
sar
mov
push
xchg
or
inc
dec
les
or
cmp
cmp
loopne
push
mov
xchg
(bad)
push
xchg
pop
or
jge
push
add
push
push
call
clc
jae
ss
je
push
inc
or
jae
lock
mov
pop
jg
push
add
popf
(bad)
mov
sub
push
test
jnp
mov
sub
cmp
ret
std
aas
mov
sbb
enter
mov
pop
jae
add
mov
add
sub
ret
popf
sbb
add
clc
into
fst
add
repnz
mov
push
add
push
adc
add
pusha
(bad)
add
call
jmp
push
adc
mov
lea
mov
call
call
sbb
jecxz
add
or
or
xor
inc
js
lock
jno
and
repnz
cmp
and
jl
push
push
outs
xor
cmp
adc
nop
rcl
cmp
mov
fs
mov
jl
push
ins
sar
inc
add
pop
pop
leave
ret
cmp
jne
lea
push
push
call
mov
sub
mov
(bad)
je
lea
cmp
jg
lea
push
add
push
call
out
mov
dec
pop
jge
jmp
xor
inc
jmp
lods
add
dec
psubq
stos
or
add
sub
adc
mov
jge
pop
push
xor
mov
dec
ret
push
push
jl
adc
jne
push
pop
jmp
mov
stos
cmp
dec
add
mov
sub
(bad)
(bad)
inc
mov
jge
or
jmp
mov
add
lea
xor
mov
mov
ja
call
mov
or
mov
and
mov
cmp
jne
xor
cmp
inc
ins
loopne
jl
sub
or
push
xchg
sar
mov
jle
adc
jmp
sar
pop
(bad)
mov
and
test
push
jl
mov
test
jle
mov
push
lea
cmp
pop
jo
add
jo
not
adc
icebp
stc
or
mov
or
sbb
xor
call
jbe
call
mov
mov
movzx
inc
mov
and
adc
push
mov
sbb
mov
adc
mov
push
inc
mov
jg
push
jnp
sbb
je
sbb
movzx
xor
call
push
jmp
mov
(bad)
jg
outs
push
ret
adc
dec
mov
mov
inc
cmp
(bad)
push
xor
push
dec
add
je
mov
inc
mov
(bad)
add
jmp
je
mov
mov
sti
(bad)
fist
push
mov
add
mov
mov
inc
test
es
pop
idiv
sbb
push
inc
test
jne
mov
aam
repnz
call
and
sbb
(bad)
push
sub
push
mov
push
mov
inc
test
stos
movzx
jne
cmp
sbb
psadbw
mov
je
add
test
inc
add
test
call
add
mov
add
mov
mov
sar
add
in
je
sbb
stc
dec
xchg
dec
adc
pop
xchg
call
sbb
outs
add
add
aam
add
mov
mov
rol
push
arpl
pop
adc
daa
inc
addr16
test
mov
jle
jle
call
pop
inc
cmp
jge
gs
push
inc
cld
dec
xchg
or
dec
add
inc
or
stos
inc
cmp
inc
add
loop
cmp
fadd
cmp
jl
or
dec
add
sar
sti
loope
inc
jge
mov
cmp
sar
sar
adc
jmp
jb
cmp
push
mov
jge
sub
inc
in
jmp
mov
shr
xor
mov
dec
into
mov
movzx
mov
dec
add
jmp
fucomip
mov
sti
pop
cmp
mov
shr
ss
mov
or
shl
mov
test
call
test
mov
jle
mov
push
mov
(bad)
push
call
(bad)
cmp
mov
jge
sub
inc
retf
add
(bad)
shr
mov
mov
xor
outs
sar
shl
mov
add
jge
add
jg
test
or
fld
cmp
adc
out
shr
ss
mov
sub
or
iret
loopne
hlt
adc
or
or
or
sar
stos
ins
(bad)
jne
jmp
(bad)
xor
mov
js
movzx
shl
or
add
and
ret
ffreep
pop
inc
xchg
dec
mov
add
mov
inc
js
mov
rcr
and
inc
jl
pushf
mov
ret
(bad)
(bad)
(bad)
cmp
inc
sub
call
lea
call
lea
call
call
adc
pop
fnstsw
adc
and
call
jmp
add
mov
retf
add
(bad)
jge
mov
push
lea
out
outs
jmp
outs
add
cmp
push
xor
mov
arpl
ror
(bad)
out
add
icebp
outs
xor
cmp
mov
mov
je
sub
out
push
call
stos
jg
test
pop
(bad)
pop
jmp
mov
mov
inc
test
or
push
call
icebp
sub
fiadd
push
or
add
(bad)
jmp
mov
dec
cmp
jle
mov
mov
add
lea
mov
mov
or
or
inc
mov
mov
sub
sub
dec
jne
pop
out
fsub
mov
sbb
and
sbb
or
cmp
jle
lea
jmp
add
add
(bad)
jle
repnz
push
sub
inc
or
mov
jnp
jmp
add
int
shl
push
call
add
jbe
fucomp
add
push
(bad)
mov
call
int3
sbb
mov
call
sbb
jmp
sub
cmc
and
mov
pusha
add
call
jbe
popf
ror
xor
cmp
jge
mov
mov
test
fmulp
sbb
pop
mov
sbb
outs
int3
sbb
sbb
bound
(bad)
pop
sub
test
push
jmp
int3
jge
or
mov
jmp
gs
call
add
movs
add
rol
pop
jg
(bad)
jge
loope
or
adc
mov
mov
ret
(bad)
mov
rcl
cmp
xlat
jg
pop
mov
dec
cmp
push
mov
jge
push
mov
mov
adc
mov
inc
cmp
mov
jl
pop
dec
call
pop
movs
jbe
cmp
jle
imul
cmps
or
push
rcr
mov
popa
push
push
call
jno
inc
hlt
mov
je
cmp
jle
mov
or
mov
inc
cmp
jl
or
mov
cmp
pop
dec
pop
sti
ja
sbb
mov
dec
and
or
sbb
dec
push
mov
mov
ficom
mov
call
mov
(bad)
repnz
loopne
outs
sub
cld
call
mov
pop
outs
add
sbb
loope
mov
pop
add
mov
dec
lea
ja
mov
dec
or
iret
call
xchg
adc
or
push
mov
add
fcom
jne
add
ss
and
aad
push
rol
mov
and
add
cmp
sar
(bad)
xor
add
in
and
dec
out
xor
or
inc
xor
das
xor
mov
or
adc
add
icebp
cmp
jb
pop
arpl
fisttp
xchg
je
mov
and
fdivr
outs
popa
mov
push
call
mov
test
je
adc
call
ret
pop
jmp
dec
cli
lds
test
call
sub
clc
jg
add
ins
adc
out
mov
or
xchg
dec
push
jae
pop
cdq
sub
pop
mov
repz
test
je
jmp
jg
xor
cmp
jg
inc
(bad)
out
cdq
jae
ds
or
jns
mov
and
jnp
lods
adc
(bad)
mov
dec
lock
jp
mov
fadd
xor
sti
in
dec
pop
cld
xor
test
je
push
call
and
clc
push
call
retf
xchg
or
mov
inc
cli
out
jbe
add
rol
add
adc
mov
add
add
mov
(bad)
push
mov
xor
sub
mov
je
std
call
je
dec
jne
mov
mov
fld
cmp
jne
sub
jmp
adc
add
jmp
push
mov
fcomip
stos
push
sbb
sti
add
sti
add
rcr
adc
push
cmp
pop
jno
dec
push
adc
(bad)
in
push
lea
dec
call
or
out
cld
call
mov
and
push
nop
or
xchg
call
sbb
jo
in
adc
push
sbb
push
ret
jae
outs
lea
into
cmp
add
adc
jmp
jmp
inc
(bad)
fisttp
nop
cmp
jne
call
call
std
pop
and
push
inc
mov
dec
adc
mov
cmp
push
ins
je
mov
cmp
jmp
cmp
jne
mov
push
mov
cmp
ret
xor
mov
std
out
mov
cmp
je
cmp
jecxz
inc
ins
jmp
push
call
push
push
inc
rol
mov
call
sub
je
mov
mov
addr16
call
stos
ret
aas
or
int
subps
jne
ret
push
push
loopne
(bad)
fmul
cmp
jne
mov
mov
mov
call
scas
mov
jmp
lea
(bad)
das
popa
adc
jne
mov
add
imul
(bad)
inc
push
mov
xchg
add
xor
dec
push
je
mov
jmp
inc
sbb
mov
mov
mov
adc
dec
adc
in
jg
fist
mov
sub
mov
je
mov
pop
add
xchg
mov
sahf
icebp
bound
outs
add
fistp
enter
cmp
inc
lea
mov
clc
jge
mov
cmp
pop
jg
call
push
call
pop
es
test
pop
je
xchg
push
call
jae
or
mov
imul
inc
mov
js
sbb
adc
add
or
push
call
and
push
push
mov
call
sahf
(bad)
adc
dec
mov
mov
dec
push
ficomp
and
mov
and
mov
cmp
add
mov
inc
push
add
push
push
das
cmp
lods
or
mov
out
fcomp
adc
push
mov
mov
shr
push
jns
pop
cmp
adc
mov
jmp
push
inc
add
and
jg
mov
mov
mov
inc
sbb
jle
call
push
pop
popf
jmp
jg
xor
dec
icebp
loop
fild
pop
or
inc
sbb
rol
push
mov
mov
xchg
data16
cli
sub
cli
sbb
adc
shl
test
pop
adc
fbstp
adc
or
push
adc
shr
outs
data16
jl
sbb
es
hlt
pusha
xor
jmp
rol
(bad)
imul
add
jmp
stc
call
lods
xchg
add
fdivr
or
xchg
push
mov
inc
icebp
jle
mov
or
(bad)
mov
and
sub
jmp
sub
mov
sar
mov
or
sbb
call
add
aaa
cmc
gs
push
or
sub
mov
test
jg
pop
in
dec
neg
shl
or
sub
pop
sti
push
xor
inc
push
push
mov
call
into
les
xchg
or
imul
adc
inc
push
lea
(bad)
xor
inc
iret
mov
add
mov
lds
pop
in
dec
and
loop
mov
xchg
push
jnp
mov
dec
adc
call
hlt
adc
adc
push
aad
xchg
fdivp
cli
or
jne
xor
jmp
adc
pop
je
les
psubb
jmp
add
enter
push
push
pusha
jmp
add
(bad)
retf
pop
(bad)
xlat
adc
or
jle
and
fst
sub
sub
cli
add
jb
icebp
mov
clc
cmp
jne
sbb
push
call
xor
sbb
shl
pop
jbe
call
dec
jmp
or
jmp
out
mov
call
(bad)
mov
inc
cmp
push
call
(bad)
fistp
mov
sbb
call
sbb
jne
std
out
add
mov
lea
inc
push
push
xchg
xlat
ins
int
add
es
add
or
stc
push
call
cld
ja
jg
mov
and
add
mov
dec
push
xor
std
dec
add
adc
sti
call
or
sbb
jl
je
or
retf
xor
and
call
pavgb
push
adc
ins
jg
enter
call
mov
pop
ret
cmp
sbb
sub
jne
cmp
xor
or
sub
(bad)
push
cdq
push
pop
idiv
xor
add
ins
push
sub
stc
cli
pop
mov
jbe
add
dec
or
cmps
js
cmp
mov
add
or
daa
test
int3
vmread
jnp
add
add
mov
ret
push
lea
pop
mov
js
and
jne
lea
mov
aaa
add
jne
mov
and
xor
into
call
xor
dec
fld
mov
mov
or
add
sub
call
cli
add
add
mov
(bad)
mul
sbb
and
jo
jmp
adc
(bad)
mov
or
push
cmps
sbb
adc
push
mov
push
mov
call
cld
jg
adc
mov
push
push
mov
call
pop
adc
jge
add
pusha
add
cmp
clc
dec
inc
inc
mov
xor
push
push
mov
mov
mov
mov
pushf
or
or
xor
add
jmp
scas
dec
hlt
mov
call
ja
pop
pop
mov
arpl
out
mov
push
mov
pop
cmp
mov
dec
push
loope
and
and
add
lock
add
cmp
outs
clc
ror
popf
pop
inc
shr
mov
mov
mov
xor
mov
mov
jmp
mov
or
xchg
dec
test
adc
or
xchg
call
mov
mov
push
xor
rol
jne
mov
(bad)
mov
clc
movzx
or
and
test
je
movzx
not
mov
enter
or
je
and
rol
shl
add
adc
js
out
dec
mov
mov
ret
call
add
sar
call
mov
call
clc
call
fisttp
xor
cmp
setne
pop
mov
lods
cmp
out
clc
scas
push
or
shl
jmp
cmp
jne
cmp
jmp
stc
add
mov
sub
loopne
test
mov
inc
mov
add
xor
je
mov
add
pop
mov
ret
data16
cdq
or
mov
jl
loop
mov
sub
jns
cmp
jge
lea
jne
pop
pusha
push
cmp
push
push
pop
adc
sbb
and
js
xchg
out
dec
or
inc
cmc
das
(bad)
pop
add
inc
adc
adc
ret
cmp
fnstsw
js
icebp
jmp
(bad)
jle
mov
push
add
rcr
xor
add
jle
mov
add
outs
add
sbb
jmp
call
(bad)
ret
inc
in
pop
inc
out
(bad)
(bad)
jmp
and
popa
dec
inc
add
sub
xchg
push
or
inc
or
xchg
push
add
inc
cmp
xor
jne
out
or
mov
sub
pop
jbe
mov
retf
out
adc
push
sbb
sbb
fisttp
jmp
pop
mov
clc
call
pop
jae
inc
push
xor
scas
add
or
jne
neg
mov
inc
clc
mov
push
inc
ja
in
bound
and
or
int3
iret
call
out
pop
push
pop
inc
adc
outs
or
adc
shr
rol
stc
add
daa
add
iret
sbb
ja
push
adc
mov
call
pushw
add
push
add
in
inc
inc
add
add
call
mov
call
xchg
or
or
sbb
je
and
outs
add
cmc
inc
test
add
add
or
add
test
dec
shl
xor
fs
or
les
push
call
mov
adc
call
jmp
add
scas
mov
push
add
mov
call
dec
cld
lea
add
stc
call
mov
inc
ja
add
and
mov
test
jne
pop
pop
ret
daa
scas
icebp
iret
inc
xor
daa
push
call
lock
xchg
cld
sbb
xlat
test
cmc
add
daa
lock
call
(bad)
xchg
pop
push
dec
std
or
pop
loop
mov
cld
dec
fiadd
(bad)
sub
rol
or
in
jb
mov
mov
pop
push
pop
jmp
add
ins
mov
adc
mov
bnd
push
(bad)
cdq
dec
add
push
gs
add
mov
or
and
cmc
or
(bad)
fmul
in
mov
cmp
and
lea
push
push
inc
mov
sbb
push
or
fsubrp
add
loopne
xor
push
(bad)
mov
mov
std
dec
gs
es
call
inc
gs
mov
or
adc
xor
test
push
jne
mov
cmp
(bad)
call
je
mov
cmp
je
add
adc
jae
(bad)
fbld
retf
je
cmp
jne
cmp
jne
push
call
push
sbb
adc
pop
cmp
jne
jne
cmp
aas
jno
xor
sub
add
and
(bad)
call
movs
(bad)
dec
sbb
or
sbb
das
call
pop
mov
jo
pop
daa
lock
mov
push
sbb
xchg
retf
popa
and
mov
popa
dec
loop
cld
sbb
mov
call
inc
ins
je
out
inc
push
push
call
mov
push
adc
push
ss
aas
sti
pop
xchg
ds
call
je
mov
push
call
push
mov
push
jg
mov
push
push
call
mov
push
xchg
mov
or
jne
lea
push
mov
and
jno
push
lea
test
jne
add
pop
je
and
(bad)
rcr
inc
test
std
(bad)
fidivr
aaa
js
sbb
adc
cmc
cmp
mov
add
lahf
sbb
xor
dec
ss
mov
add
ret
add
sti
aaa
add
push
mov
mov
mov
sbb
jg
test
lds
push
ret
movzx
cmp
je
mov
jne
pop
ret
(bad)
jg
push
mov
ins
and
sub
aas
adc
pop
and
push
lock
jne
movs
push
test
xchg
cdq
(bad)
(bad)
jmp
loope
aad
or
push
push
push
adc
mov
push
mov
and
aam
push
jg
dec
push
in
adc
cmp
mov
mov
mov
add
lea
mov
lea
jge
add
mov
xor
pop
lea
pop
lea
pop
rep
mov
shr
and
mov
or
(bad)
(bad)
fisttp
pop
mov
mov
xor
cmp
je
mov
inc
push
fwait
add
aas
dec
add
jno
push
inc
repnz
ja
or
jmp
xchg
adc
js
pop
xlat
sar
mov
cmp
je
mov
test
dec
adc
dec
sub
mov
jmp
mov
adc
or
mov
add
xor
or
push
call
push
mov
dec
push
push
push
mov
dec
pop
mov
test
sub
inc
add
dec
sub
mov
mov
lea
loopne
or
clc
les
or
and
mov
mov
call
push
and
adc
xchg
out
pop
inc
inc
or
push
push
dec
mov
push
push
mov
call
loopne
(bad)
(bad)
mov
lea
dec
add
add
adc
push
sub
ror
push
call
test
mov
je
mov
(bad)
jmp
mov
lea
push
mov
mov
call
mov
cli
aaa
adc
cmp
je
cmp
jmp
outs
out
jne
xchg
mov
call
cmp
jne
in
cmp
cli
mov
mov
into
mov
inc
cld
jmp
or
icebp
out
xchg
or
or
popa
and
in
sub
xchg
movs
popf
test
add
les
fmul
setno
inc
outs
pop
lods
test
call
pop
pop
stos
pop
and
lea
mov
xor
mov
int
cmp
mov
pop
jne
shr
clc
cmp
inc
fcom
sub
sbb
test
(bad)
adc
mov
movs
sar
adc
inc
or
push
mov
rcl
adc
dec
outs
mov
cmp
mov
fisttp
push
call
cwde
pop
shl
outs
add
outs
sbb
jle
and
cmp
and
std
jg
dec
or
mov
adc
and
outs
mov
mov
add
mov
ss
dec
mov
retf
inc
dec
or
sub
and
pop
push
cmp
idiv
or
xor
jmp
cmp
jne
push
dec
clc
sub
icebp
call
test
add
mov
mov
fcom
inc
fwait
mov
cmp
jg
scas
ss
or
rcr
mov
mov
add
pop
aad
sbb
popf
mov
sub
push
xor
inc
sub
jo
cwde
add
mov
xlat
pop
or
iret
jmp
mov
or
jne
dec
and
jmp
mov
mov
push
ja
icebp
inc
rcl
mov
add
push
add
ret
sbb
pop
and
push
pop
fwait
test
mov
lds
mov
push
jno
mov
mov
adc
jg
(bad)
ins
add
dec
or
adc
and
jae
leave
inc
cmp
mov
push
idiv
addr16
or
jns
out
cmps
inc
push
loope
retf
call
sbb
jg
sar
mov
shl
mov
mov
call
xchg
mov
call
shl
ja
not
mov
push
push
push
add
xor
sbb
cs
push
call
pop
dec
jne
push
pop
pop
pop
pop
ret
push
dec
icebp
daa
addr16
push
mov
in
jb
out
call
(bad)
aas
push
sti
and
mov
lea
and
mov
mov
lea
mov
jecxz
adc
adc
and
jg
mov
pop
push
dec
fmul
fcmovb
dec
add
or
mov
ret
fcomip
or
shl
or
jbe
cs
sub
mov
add
mov
or
loope
arpl
or
or
add
mov
or
add
aaa
add
mov
add
adc
fwait
lods
add
jmp
mov
gs
push
call
and
sub
movs
add
call
jl
cmp
jg
pop
jo
push
movzx
nop
cdq
idiv
mov
mov
and
cmp
out
add
mov
sbb
pop
dec
add
adc
add
add
push
add
add
ret
add
add
js
push
mov
sub
mov
lock
dec
mov
jnp
jl
xchg
sub
cmp
std
adc
xor
sbb
and
fwait
add
(bad)
jg
std
adc
push
push
adc
lea
call
jg
(bad)
inc
lods
sti
dec
in
cmp
adc
call
(bad)
in
and
push
xor
pop
leave
ret
arpl
sub
mov
enter
call
nop
pop
or
add
nop
dec
(bad)
std
shld
adc
jnp
pop
push
out
mov
cmp
call
mov
pop
(bad)
enter
add
mov
retf
cs
in
mov
add
pop
jne
push
push
mov
push
dec
add
imul
and
add
cs
sub
rcr
shl
sub
jnp
lea
mov
mov
pop
jmp
inc
or
out
(bad)
call
mov
mov
mov
push
or
cmp
xor
mov
cli
ror
sub
inc
enter
or
inc
fbld
pop
outs
xor
enter
jae
or
rcr
stc
mov
(bad)
aad
shl
inc
test
push
mov
mov
cmp
je
cmp
je
xor
jg
push
xor
test
je
inc
add
add
test
inc
data16
push
inc
test
fisttp
xor
jmp
test
je
mov
jmp
add
pop
icebp
add
dec
push
fmul
mov
lea
aaa
std
jge
and
fwait
mulps
push
push
xor
and
aam
dec
sbb
imul
adc
add
outs
loop
ins
das
xor
lsl
cmp
and
adc
sub
shl
cmc
mov
dec
retf
mov
jmp
call
xor
outs
and
adc
push
jge
mov
xchg
fcomp
es
aas
adc
inc
add
lock
mov
push
test
sub
cmps
or
add
jg
rol
scas
movs
inc
outs
call
adc
inc
add
add
pop
mov
(bad)
aas
and
cs
test
mov
jne
mov
mov
or
mov
mov
lods
cld
and
xor
pop
lock
fdivr
jbe
hlt
or
lods
xlat
inc
(bad)
jmp
clc
add
inc
jmp
mov
cmp
jl
cmp
cli
mov
add
or
(bad)
xchg
jo
std
push
cwde
pop
pop
je
mov
call
lods
or
mov
jmp
jp
jle
add
push
call
pop
adc
or
push
shrd
pop
mov
pop
pop
je
inc
and
mov
add
sbb
push
mov
dec
fistp
fcomip
pop
mov
call
add
add
add
add
push
sbb
jmp
mov
push
(bad)
xlat
or
pop
mov
sar
mov
call
fst
sbb
icebp
or
loope
add
mov
push
pop
mov
xchg
bound
pop
inc
fadd
(bad)
mov
add
enter
mov
mov
test
(bad)
je
mov
cmp
cs
cwde
cld
jg
push
call
jl
jp
or
or
adc
ja
test
js
iret
jmp
clc
cmp
jne
call
lock
and
sub
push
lea
push
push
push
cmp
adc
stos
push
mov
repz
push
or
and
sbb
inc
or
es
cmp
mov
dec
mov
loop
inc
or
pop
mov
add
clc
(bad)
jle
cmp
mov
adc
add
add
mov
or
push
xor
(bad)
call
cmp
jge
mov
mov
cmp
jne
mov
inc
(bad)
jmp
sbb
or
xor
fistp
mov
inc
add
fcmovne
cmp
mov
jle
fimul
cld
push
cli
out
dec
retf
mov
jg
jnp
or
inc
ja
or
dec
test
(bad)
add
add
xchg
(bad)
adc
sbb
fcom
mov
push
lea
push
push
mov
call
call
lods
push
sbb
sbb
cmc
scas
jae
and
mov
mov
lea
mov
jg
fadd
push
into
cld
call
sub
sub
mov
jl
pop
xor
mov
mov
mov
xlat
call
add
ds
retf
pop
movs
sti
in
sub
adc
adc
loop
adc
mov
popa
xor
push
push
movzx
mov
push
shl
or
mov
fild
pop
ret
lahf
mov
test
jne
push
rol
scas
dec
push
push
lods
or
sbb
dec
(bad)
(bad)
push
mov
push
call
push
mov
add
sub
jbe
lea
iret
ja
sbb
imul
pop
adc
dec
add
loop
sti
jne
push
call
mov
mov
or
jmp
push
add
add
cmp
pop
sbb
je
fimul
or
cli
aaa
add
pop
cmp
push
call
dec
jp
jmp
or
adc
push
push
push
mov
jne
out
loop
dec
inc
stos
or
jmp
or
ja
fadd
sti
(bad)
add
in
push
cli
push
pop
push
sbb
xchg
or
mov
xchg
push
jnp
sti
fbstp
mov
or
or
daa
mov
icebp
loopne
fwait
mov
pop
lds
pop
and
pop
ss
cvtps2pd
add
jg
jbe
aam
ret
push
pop
ret
jmp
mov
sbb
sbb
and
cmp
or
add
xor
test
loop
pop
mov
or
or
cmp
call
ror
dec
or
sar
and
mov
mov
je
mov
dec
jmp
pop
jae
adc
or
retf
add
add
mov
shl
push
push
push
call
mov
je
pop
std
(bad)
mov
mov
jae
push
mov
cmp
ja
inc
mov
mov
(bad)
std
sbb
or
pop
and
mov
sbb
cmp
mov
sub
cmp
jne
push
add
test
retf
adc
jno
mov
aaa
lock
inc
fadd
inc
hlt
or
add
in
(bad)
(bad)
jmp
in
or
mov
test
mov
mov
(bad)
and
test
inc
test
(bad)
jg
std
fstp
mov
push
fadd
fsubr
fidivr
pop
cmp
mov
jl
pop
add
pop
push
inc
icebp
mov
outs
mov
mov
push
push
test
jmp
cmp
je
cmp
pusha
into
std
push
fwait
je
cmp
je
test
jns
ss
or
mov
lea
jmp
or
mov
pop
pop
leave
fist
sub
push
fistp
sbb
xor
push
adc
das
mov
mov
push
adc
call
xor
inc
mov
(bad)
mov
ror
ficomp
shr
and
push
lea
(bad)
push
call
and
lods
inc
push
cmp
mov
retf
or
sbb
ltr
mov
inc
mov
mov
aad
mov
jne
aaa
mov
shl
(bad)
and
popf
imul
loopne
dec
inc
and
mov
call
jmp
inc
jmp
mul
mov
dec
sbb
js
jne
mov
and
mov
mov
js
fadd
(bad)
mov
mov
and
loope
xor
xchg
scas
sub
xor
cmp
loope
aas
cmc
mov
cmp
mov
jne
call
xor
xchg
stos
push
mov
and
retf
jmp
adc
add
adc
leave
push
push
sti
test
je
jbe
and
loop
aam
add
mov
xor
cmp
xchg
out
xor
ret
xor
cmp
setne
inc
xor
push
sub
pop
xor
pop
inc
jne
push
call
test
mov
mov
rol
sbb
adc
mov
mov
fstp
in
clc
push
push
mov
iret
jo
out
dec
or
out
add
clc
(bad)
inc
pop
and
cmp
mov
mov
je
mov
jmp
mov
mov
push
call
cmp
std
jne
and
jmp
mov
cmp
je
add
and
inc
mov
jb
neg
adc
jmp
mov
jmp
aaa
mov
out
or
iret
push
call
push
je
adc
lock
stc
mov
and
mov
pop
ror
call
or
xchg
and
and
or
cmp
minps
sub
jne
ja
mov
fadd
or
leave
cmp
setge
jne
push
ret
mul
ror
add
and
jmp
outs
js
xchg
add
or
jmp
mov
(bad)
jle
inc
cld
mov
mov
mov
inc
cld
test
dec
mov
add
xor
or
cmp
sbb
dec
sub
add
mov
lea
pop
mov
mov
mov
mov
mov
mov
jg
movs
lea
cmc
sahf
add
mov
inc
je
inc
jo
xor
mov
in
(bad)
sti
mov
sub
sub
out
ja
jne
pop
lea
mov
mov
stos
mov
ret
sbb
jbe
lds
inc
push
mov
mov
sbb
or
or
mov
jns
call
push
lea
jae
mov
cmp
dec
jl
xchg
hlt
mov
add
jae
call
sbb
mov
ja
add
mov
or
icebp
ret
pop
ret
cwde
sub
pusha
inc
fnstenv
idiv
jae
je
add
dec
je
out
gs
jne
cmp
add
cmp
pop
lea
rep
je
call
add
xor
adc
call
mov
pop
pop
out
js
in
aaa
sbb
pop
jne
hlt
push
jle
and
rcl
mov
lea
push
lea
les
mov
shl
shl
dec
push
pop
aad
imul
fbstp
jno
aad
sub
lea
std
bound
push
dec
pop
call
je
loop
sti
jmp
jo
jne
mov
jnp
rep
idiv
mov
or
pop
dec
pop
mov
or
pusha
pop
pop
pusha
dec
xchg
sbb
ficomp
push
call
jo
jecxz
int3
jne
nop
(bad)
clc
jecxz
sub
call
std
rcr
jb
mov
fnstcw
add
push
dec
jge
adc
dec
or
lea
and
jo
pop
jmp
xor
jno
cmp
(bad)
and
in
(bad)
mov
inc
adc
xor
push
push
lea
scas
mov
push
jnp
mov
push
add
test
jne
sub
xor
jle
xchg
iret
jo
movups
jmp
aaa
dec
xchg
push
ret
mov
or
test
push
jge
loope
daa
xchg
test
add
cmp
jg
cmp
jg
adc
jle
fisub
shl
cmp
mov
(bad)
or
pop
inc
dec
push
call
push
cmc
ja
mov
(bad)
je
rcl
inc
test
add
aad
xor
fs
dec
call
loope
sti
call
jne
push
cdq
es
fld
fmul
(bad)
out
pop
inc
xchg
fldz
add
fild
fst
push
(bad)
(bad)
(bad)
fmul
fiadd
fstp
fild
fst
fmul
fiadd
fstp
inc
ror
inc
push
jns
stc
sahf
aas
jp
or
lock
adc
fstp
aam
adc
fstp
fstp
fst
push
faddp
sti
dec
neg
jae
push
faddp
dec
popa
or
fnstsw
test
xor
inc
inc
(bad)
(bad)
fwait
sub
inc
dec
mov
fld
icebp
std
lahf
nop
fstp
fst
fstp
pop
dec
out
iret
(bad)
arpl
std
add
fld
or
and
ret
lock
jmp
add
xlat
adc
jge
nop
ud0
push
fld
(bad)
leave
fst
fild
fmul
fst
fmul
ret
idiv
std
fstp
fild
or
fild
fmul
fst
adc
ds
pandn
add
inc
pop
sbb
rcr
sbb
call
mov
pop
les
inc
or
fdiv
cmp
push
addr16
push
cmp
jne
cmp
je
fist
pop
outs
fisttp
push
sbb
dec
inc
fadd
push
adc
fimul
ret
scas
sti
(bad)
fld
fmul
fadd
fstp
fld
clc
adc
and
mov
add
hlt
paddb
inc
fmul
add
and
mov
inc
or
stos
jp
sbb
ud0
inc
adc
leave
call
fmul
mov
call
cld
jge
push
call
or
call
mov
pop
call
int3
fstp
mov
jecxz
mov
xor
inc
es
pop
jns
ja
(bad)
push
shl
in
shl
(bad)
adc
pushf
mov
les
jnp
je
sbb
xor
or
rol
add
in
inc
push
ss
mov
in
rcl
jno
ret
lahf
loope
or
sbb
and
(bad)
out
rcl
cmp
inc
call
or
mov
xor
add
jo
cmp
je
cmp
cld
dec
adc
call
jmp
stc
mov
dec
iret
call
pop
pop
mov
call
test
loope
mov
xor
dec
adc
call
gs
loopne
scas
dec
push
fiadd
mov
jle
xor
mov
jne
jne
mov
adc
inc
xor
pusha
nop
test
mov
lds
je
sbb
dec
dec
inc
jl
pop
das
(bad)
dec
xchg
mov
call
push
mov
fwait
clc
retf
call
je
add
cmc
mov
mov
call
inc
xor
test
sbb
inc
xor
je
xor
mov
je
push
(bad)
fisttp
sub
gs
add
add
adc
fadd
and
dec
dec
pop
and
loope
jnp
es
in
xor
jo
jbe
std
jl
ror
lea
std
jmp
adc
shl
jmp
data16
aas
addr16
and
je
mov
add
lea
hlt
jmp
push
push
cmp
add
dec
call
ja
inc
add
pop
jmp
or
push
pop
mov
or
inc
dec
ds
arpl
push
shl
inc
add
je
push
cmps
cli
add
call
pop
lods
or
(bad)
sbb
and
mov
push
call
sbb
xor
mov
rol
mul
mov
add
add
adc
mov
sbb
(bad)
aas
or
dec
xor
or
dec
dec
mov
push
jg
mov
push
mov
subps
or
and
mov
push
outs
icebp
jmp
add
pop
mov
ja
je
call
jmp
call
mov
stos
loop
leave
mov
xchg
and
jg
sbb
sbb
int3
mov
retf
or
gs
ja
or
mov
mov
xchg
mov
mov
inc
retf
inc
loopne
dec
fcom
cwde
cmp
loopne
ret
xor
mov
es
jecxz
pop
lahf
push
call
and
paddusw
shr
xchg
sub
push
icebp
and
cmp
jne
nop
mov
call
adc
dec
outs
cmp
fwait
cld
mov
dec
add
inc
cli
aas
add
lock
push
mov
dec
aam
dec
adc
cmp
mov
mov
lock
add
call
stos
aad
mov
sub
or
mov
aad
and
lea
call
sub
and
push
xor
cld
je
cld
dec
je
add
gs
push
icebp
ja
push
clc
push
lea
sti
retf
call
clc
call
sbb
jmp
push
fstp
adc
push
fs
jmp
ret
or
pop
or
call
rcl
sub
inc
fsubr
enter
aam
ror
call
sub
call
call
ja
(bad)
pop
repz
daa
call
ret
push
cmp
std
pop
test
ja
lea
sti
call
push
adc
push
jo
xor
add
test
mov
jmp
adc
mov
cli
iret
stos
(bad)
pop
or
rol
lock
call
mov
call
fild
dec
sub
push
call
push
jns
call
jmp
pop
mov
mov
add
std
pop
xchg
test
(bad)
test
(bad)
shl
test
cmp
inc
sbb
aam
loopne
jg
mov
hlt
dec
and
dec
and
test
lock
(bad)
mov
ror
stc
dec
mov
dec
mov
or
ud0
out
and
rol
out
je
je
dec
je
add
adc
(bad)
mov
inc
fmul
mov
inc
lea
test
inc
lds
adc
mov
sti
mov
xor
adc
inc
xchg
ret
add
fs
aas
push
adc
fadd
ret
xchg
leave
icebp
cmp
adc
sub
mov
fdivr
inc
lock
fsubr
shl
or
shl
comiss
inc
cmc
adc
adc
dec
push
sub
dec
add
push
push
lea
pop
sti
call
or
push
std
inc
fwait
xor
xchg
adc
add
sub
jmp
jo
scas
mov
dec
aam
lock
push
push
call
sbb
je
call
out
push
call
sbb
cs
mov
push
aas
mov
scas
scas
sti
(bad)
jmp
jbe
loop
cmp
cmp
cmp
add
push
add
jg
cli
test
jne
mov
call
sbb
outs
mov
fist
cmp
push
jmp
iret
sbb
adc
xchg
inc
cld
push
push
call
pushf
jmp
inc
jne
inc
(bad)
jmp
and
out
sub
mov
sbb
ds
call
mov
fidiv
imul
mov
pop
push
lahf
push
jmp
ja
paddb
dec
call
cmp
(bad)
dec
aad
mov
add
lea
mov
xchg
arpl
sbb
pop
mov
lea
lahf
std
jmp
retf
cmp
jge
mov
sub
test
adc
xor
inc
adc
hlt
daa
pop
push
inc
mov
jl
mov
dec
add
add
add
inc
adc
dec
cld
jne
into
or
jae
scas
jb
add
stos
jge
call
dec
xlat
(bad)
(bad)
push
shl
outs
test
mov
outs
clc
or
mov
xor
cmp
lea
ror
cld
add
mov
lea
pushf
mov
(bad)
dec
fst
aad
bound
add
jg
mov
mov
std
(bad)
inc
mov
mov
mov
mov
mov
mov
add
pushf
mov
cld
jmp
add
shr
add
jne
call
call
ror
and
add
idiv
add
pop
pop
mov
imul
inc
xor
and
sbb
inc
jbe
sar
fdivr
out
push
push
push
call
inc
inc
movs
fnstsw
popf
push
call
daa
clc
leave
(bad)
jecxz
and
call
adc
push
push
call
pop
cmc
lds
daa
xor
dec
or
(bad)
sub
scas
push
xor
call
xor
cmp
(bad)
fcomip
repz
outs
add
outs
mov
mov
or
outs
xlat
sbb
mov
or
mov
xchg
les
dec
xor
xor
inc
jne
call
cmp
jge
test
jge
ror
jno
jmp
xor
cmp
rol
jge
add
cdq
sahf
mov
sub
mov
(bad)
call
mov
mov
mov
test
mov
jns
stos
mov
or
adc
mov
stos
call
push
add
add
(bad)
jmp
rcl
mov
int3
mov
jmp
loop
mov
in
jo
ror
or
or
hlt
lea
(bad)
jmp
(bad)
jbe
call
rol
dec
shl
lea
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
jl
push
shl
push
mov
call
cmp
pop
mov
mov
jbe
mov
add
std
fstp
ret
push
inc
call
sar
jge
jge
aas
inc
add
inc
cld
call
cmp
jl
lea
cmp
jg
sar
int3
lea
mov
scas
data16
ret
mov
xchg
pop
xor
sar
dec
clc
push
(bad)
mov
ffreep
or
and
sahf
mov
movzx
neg
or
ror
mov
cmp
jmp
or
inc
inc
lea
mov
inc
xor
or
fdivr
mov
push
jecxz
pusha
pop
push
push
mov
shl
mov
or
push
(bad)
call
popa
or
mov
jmp
(bad)
mov
lea
pop
jg
mov
inc
mov
mov
inc
jmp
pop
out
inc
jo
add
movzx
movzx
shl
or
dec
push
push
call
hlt
xor
cmp
dec
mov
mov
xor
mov
push
push
lea
jno
ins
pusha
and
dec
lock
push
mov
ins
add
jle
add
test
(bad)
fstp
in
out
inc
add
shr
cmp
mov
mov
mul
test
sbb
xor
and
mov
sar
ret
mov
pop
out
cld
(bad)
push
ret
jae
out
clc
sub
xor
test
or
or
xchg
jbe
jge
adc
stc
sub
add
mov
mov
inc
sbb
jbe
ja
shl
or
data16
mov
jmp
call
mov
jmp
rol
popaw
pop
das
dec
pop
mov
mov
call
and
cmp
js
pop
cmp
idiv
push
pusha
iret
mov
call
(bad)
dec
inc
jbe
movzx
add
xlat
jns
sbb
mov
and
call
loope
pop
or
mov
dec
sbb
push
call
sub
adc
mov
movs
jp
dec
or
mov
cmp
xor
adc
mov
xor
inc
out
mov
mov
mov
call
mov
lock
sub
push
ret
ror
stos
je
cmp
je
cmp
je
cmp
je
out
or
clc
push
je
cmp
je
fild
dec
adc
(bad)
sti
ja
mov
jmp
and
sbb
add
rcl
loop
jl
fs
adc
inc
add
push
lock
pop
fcom
enter
adc
push
loop
push
cmp
je
mov
mov
mov
inc
jg
and
dec
jp
dec
adc
jge
push
ffreep
scas
adc
call
cmp
je
mov
test
pop
sbb
or
mov
inc
(bad)
pop
test
mov
xor
push
push
call
pop
stc
(bad)
cmp
je
inc
adc
std
movs
clc
enter
fwait
loope
sbb
in
mov
inc
mov
cmp
jp
rol
(bad)
cmps
add
(bad)
dec
mov
push
call
jmp
fld
sti
adc
jne
prefetch
arpl
xor
shr
add
ja
mov
mov
cmp
ss
mov
xor
pop
les
jp
dec
or
call
or
data16
mov
xor
cmp
pop
call
ja
cmp
je
fisttp
mov
cli
ja
and
pop
icebp
mov
inc
and
dec
mov
adc
mov
call
ins
mov
outs
mov
and
dec
push
push
add
das
jle
xor
xor
cmp
sete
mov
xor
jmp
and
push
jle
inc
and
cwde
pop
push
inc
pop
jl
scas
ins
adc
push
sbb
jle
adc
out
je
adc
lea
test
jne
call
(bad)
std
test
je
pop
push
and
sub
ja
mov
pop
mov
add
loopne
mul
and
and
shl
in
mov
ror
push
call
pop
(bad)
ds
mov
cwde
jge
test
ret
adc
ja
in
sub
mov
call
cmp
xor
push
mov
cmp
test
loop
push
out
lds
cmp
out
(bad)
mov
add
xchg
je
cmp
sbb
xor
cld
imul
add
(bad)
jge
jmp
es
int
jnp
(bad)
mov
stc
mov
jmp
push
mov
mov
mov
add
cmp
lahf
mov
in
sub
not
ja
dec
and
pop
lea
rep
jmp
dec
test
retf
call
mov
mov
je
movs
mov
out
or
pop
cmovbe
pop
and
retf
call
pop
add
mov
and
cmp
adc
mov
cmps
mov
inc
jbe
and
sub
loope
sbb
jne
cdq
mov
pop
sti
inc
inc
inc
movsx
mov
or
call
add
fld
shufps
pop
test
adc
jb
pusha
je
add
xor
aas
cmc
cld
jecxz
jmp
and
adc
sub
fisttp
mov
lds
(bad)
sub
shl
push
cdq
pop
sbb
sub
xor
mov
popf
sbb
add
fdivrp
mov
adc
sub
call
js
call
add
std
test
jne
pop
push
xor
pop
cmp
jmp
out
pop
arpl
mov
mov
inc
shl
cmp
(bad)
jmp
fstp
call
add
and
or
mov
call
dec
mov
mov
ror
call
push
call
mov
call
cmp
mov
adc
scas
fistp
cmps
xor
call
retf
call
push
cld
jmp
jae
lea
mov
call
inc
jl
cmp
ucomiss
fisubr
call
pusha
xchg
int3
xor
jmp
shr
inc
and
test
jmp
push
add
push
fldz
push
je
call
inc
and
push
push
call
mov
jmp
add
adc
adc
rcr
adc
jg
call
pop
inc
jnp
mov
cld
(bad)
jmp
out
mov
shr
add
mov
in
test
scas
mov
mov
pop
pop
pop
add
(bad)
cmps
cmp
adc
push
inc
movzx
mov
(bad)
out
fmul
or
call
ret
xor
and
add
dec
or
outs
mov
mov
enter
ret
ds
test
mov
add
popa
call
call
push
jno
and
ja
mov
cmp
pop
pop
ret
and
jmp
adc
push
mov
xor
push
mov
mov
jae
push
call
js
mov
mov
jmp
retf
adc
sub
mov
or
and
test
adc
mov
test
xchg
and
jle
cmp
dec
push
jl
nop
inc
add
pop
or
push
push
mov
call
call
cld
cmp
inc
push
call
(bad)
(bad)
(bad)
call
mov
push
mov
cmp
jne
xor
pop
ret
push
push
mov
xor
push
mov
lea
lea
pop
icebp
out
xchg
mov
test
jne
outs
(bad)
mov
cmp
jne
(bad)
(bad)
jmp
mov
cmp
pop
je
lea
lea
mov
add
mov
pop
mov
pop
in
push
icebp
and
push
cmp
pop
pop
mov
and
cmp
mov
mov
jne
and
jbe
jnp
call
or
jo
dec
shr
and
cmp
dec
inc
or
pop
add
or
repnz
inc
mov
cmp
jne
mov
pop
(bad)
jmp
fmul
push
push
push
jmp
push
mov
lock
je
int
lock
(bad)
fadd
jg
and
mov
call
call
dec
and
pop
inc
pushf
mov
jp
mov
or
(bad)
cmp
dec
fcomp
jne
inc
dec
inc
movs
mov
or
jge
dec
mov
lea
bound
call
or
add
or
jne
and
out
dec
mov
aad
clc
mov
and
add
cs
out
(bad)
inc
or
clc
ret
mov
push
push
lea
push
jle
ds
test
jg
cld
(bad)
jle
mov
mov
mov
add
jne
mov
push
aas
mov
mov
(bad)
loopne
out
push
fsub
call
fild
lea
call
or
cld
call
cs
into
std
and
fld
and
(bad)
xchg
fadd
fimul
push
std
mov
pushf
push
inc
ret
push
stos
scas
call
add
call
push
xor
inc
cld
jmp
mov
and
sbb
or
call
jmp
cmp
inc
pop
sbb
push
push
call
mov
push
call
mov
mov
nop
xchg
in
mov
push
xlat
cmps
enter
jge
dec
js
jg
add
jne
mov
add
inc
fisubr
lea
std
inc
jmp
add
clc
push
jne
ds
adc
jbe
sti
loopne
pop
ret
or
das
and
dec
stc
popf
clc
call
shl
inc
lea
cmp
push
jb
clc
dec
mov
add
pop
adc
add
lea
inc
and
sti
cwde
movs
stc
lea
cmp
jne
inc
mov
pop
push
dec
adc
xchg
inc
pop
jl
sbb
or
adc
ds
sbb
call
(bad)
xor
push
mov
adc
cmps
mov
and
ja
and
or
mov
add
clc
(bad)
pop
jae
mov
fwait
cli
inc
ret
and
add
cli
scas
(bad)
(bad)
jno
cmp
je
popf
or
push
fwait
sldt
mov
inc
js
cli
lahf
sub
xor
jl
in
jmp
rol
xor
leave
inc
test
sbb
mov
mov
mov
je
int3
or
cmp
xor
popf
pop
or
mov
and
sar
jns
push
mov
inc
hlt
fnstenvw
inc
loope
mov
mov
or
(bad)
mov
dec
clc
mov
mov
mov
mov
fwait
xor
(bad)
mov
lea
pop
cmp
jmp
inc
std
cmp
inc
jle
(bad)
sbb
xlat
jg
add
add
inc
mov
mov
push
fisttp
out
lods
(bad)
dec
push
cld
(bad)
jmp
dec
or
mov
xor
cld
scas
and
inc
cmp
jl
dec
lea
xchg
sbb
inc
iret
call
call
jmp
sub
adc
inc
clc
jne
and
stos
jne
inc
ja
pop
lock
mov
or
mov
adc
jg
add
test
jne
shl
adc
je
or
rol
mov
or
add
jge
out
mov
mov
mov
mov
jg
mov
dec
sub
cmp
xlat
adc
add
xchg
add
add
inc
in
mov
inc
add
xchg
add
fistp
into
call
cmp
test
mov
push
add
pop
push
cmp
jne
mov
mov
call
(bad)
jg
xor
pop
add
lea
mov
push
call
jmp
inc
call
retf
call
(bad)
out
test
mov
lea
mov
mov
lea
mov
mov
inc
push
call
push
call
add
and
inc
xor
adc
icebp
call
inc
dec
mov
(bad)
std
cmp
inc
lahf
or
jg
push
je
dec
add
push
push
popa
add
std
pop
ror
inc
je
inc
sub
call
pop
mov
lea
push
call
pop
mov
jne
mov
adc
(bad)
out
xchg
and
cmp
mov
cld
jl
push
call
push
mov
call
mov
je
mov
mov
nop
cmp
cmp
mov
or
dec
sbb
(bad)
cld
(bad)
mov
xor
cmp
xchg
ror
sti
into
add
cdq
(bad)
jmp
aad
je
cmp
jg
mov
xor
mov
call
mov
or
inc
cmp
mov
inc
in
out
jmp
pop
lods
arpl
ret
lea
lods
jae
fmul
and
adc
sub
add
(bad)
mov
sub
xlat
inc
ins
sbb
rcl
pop
jl
jne
jl
shl
mov
mov
test
je
or
inc
sbb
mov
mov
add
aas
sub
dec
cmp
mov
out
jne
jle
mov
cmp
mov
test
push
je
call
add
adc
jmp
sub
aas
out
jmp
inc
ins
add
add
mov
cmp
jg
loopne
fs
push
mov
push
test
inc
add
ror
test
test
adc
ds
in
or
or
and
mov
adc
sbb
add
dec
ret
cmp
jne
sub
enter
add
push
test
ror
je
mov
dec
or
pop
shr
scas
xor
call
rcr
inc
or
mov
cmp
(bad)
in
jmp
cmp
movs
cmp
jne
mov
cmp
cmp
(bad)
jmp
mov
mov
inc
add
scas
add
data16
sub
es
in
xor
xchg
les
icebp
xor
or
xor
jmp
add
call
mov
sahf
inc
in
mov
mov
add
sbb
pop
loopne
dec
push
outs
mov
std
push
repz
call
cld
adc
pop
add
push
call
sbb
inc
clc
add
cmp
jle
or
cli
mov
add
jae
(bad)
dec
mov
or
xchg
es
sbb
ret
sub
push
ds
push
mov
push
jg
enter
in
je
add
sub
push
adc
in
cmp
mov
fld
sbb
mov
pop
inc
mov
sbb
mov
inc
and
jle
cdq
mov
cld
adc
std
out
arpl
add
inc
sti
mov
mov
add
jmp
add
mov
clts
xlat
mov
mov
jle
cmp
or
add
and
or
retf
call
mov
sbb
pop
enter
test
lea
mov
lock
(bad)
retf
call
dec
or
ja
aaa
jns
mov
lea
ror
inc
call
jne
cmp
xchg
add
pop
xor
lea
push
call
ja
adc
jb
cmp
inc
and
sub
push
mov
cmp
inc
cmp
shl
hlt
lea
sbb
cli
cdq
pop
iret
call
jae
out
cmp
in
jne
push
inc
ja
mov
lea
lea
xor
mov
addr16
jo
or
jnp
mov
mov
movsx
smsw
sbb
pop
sbb
add
sbb
mov
cmp
dec
adc
les
call
sbb
mov
jmp
and
adc
sbb
jo
std
or
es
or
mov
aam
addr16
and
jo
jne
mov
adc
inc
push
cmp
adc
dec
or
mov
dec
in
mov
mov
ret
xchg
adc
jne
pusha
ret
aaa
popa
sbb
dec
sub
or
fadd
jo
dec
mov
add
or
cmp
aas
sbb
or
adc
pop
add
add
out
push
push
je
sbb
mov
dec
fdivr
out
or
jge
arpl
fcom
dec
cld
or
mov
cld
jmp
les
mov
hlt
mov
push
call
cmp
and
push
sbb
sbb
push
fcom
rcl
and
fld
adc
and
jns
push
ret
js
adc
and
inc
cld
push
aad
adc
jns
pop
lahf
dec
loop
outs
cld
jl
(bad)
jo
or
lea
fnstsw
ret
xchg
fs
ret
ret
mov
cs
outs
imul
retf
pop
fisub
sbb
xor
mov
sub
xchg
aaa
inc
add
and
les
xlat
xchg
dec
ficom
pop
cld
dec
test
push
mov
dec
hlt
cwde
inc
jl
cmp
mov
mov
shr
ins
dec
cmp
jmp
xchg
icebp
popa
mov
jne
sub
mov
xchg
pushf
or
xchg
fs
xchg
mov
enter
xchg
cld
mov
adc
inc
loop
call
push
je
mov
inc
ret
mov
mov
and
xchg
loope
or
sub
adc
lods
cmp
add
xchg
xchg
mov
and
cmp
mov
and
inc
cmp
add
cmp
jb
add
fnsave
mov
push
sbb
pop
add
mov
and
cmp
jne
loope
call
inc
sbb
push
pop
xor
dec
call
mov
push
call
pop
and
in
cmp
push
mov
movs
jmp
scas
cmp
icebp
pop
icebp
inc
lock
test
retf
lods
push
pop
mov
loopne
push
ins
push
call
clc
(bad)
cmp
inc
loopne
and
inc
in
daa
jmp
add
xchg
movq
jmp
pop
and
or
fdivrp
je
mov
pop
cmp
nop
mov
sahf
sbb
sbb
inc
fdiv
adc
mov
mov
cdq
dec
sbb
jp
out
push
or
push
push
call
or
leave
xor
pop
dec
int3
and
push
call
cmp
shr
call
inc
lods
inc
fldcw
xor
cmp
je
lea
inc
xchg
jne
push
push
mov
mov
in
loop
(bad)
inc
jle
cdq
jne
aaa
les
call
fisttp
add
icebp
test
loopne
jne
in
into
pop
push
inc
and
into
fidivr
sub
prefetchw
mov
mov
inc
jmp
push
push
call
lea
outs
jge
push
call
or
xor
test
je
add
mov
xchg
fistp
mov
test
pop
mov
mov
cmps
das
scas
pop
nop
cld
dec
pop
jge
ret
adc
add
into
add
call
fmul
dec
mov
cmp
jg
cmp
jge
mov
lea
inc
adc
dec
jo
(bad)
arpl
(bad)
adc
or
test
lods
or
add
loope
cmp
mov
sub
popf
es
sbb
sbb
mov
push
shr
mov
inc
inc
mov
mov
call
and
jne
call
xchg
push
push
or
int3
jge
imul
sbb
fisttp
call
call
ret
adc
push
inc
adc
inc
push
cmp
ins
inc
adc
adc
push
std
sbb
daa
jbe
dec
dec
sbb
jmp
push
add
test
test
jmp
or
push
call
jbe
sub
mov
js
sti
scas
adc
jne
add
mov
sbb
add
test
push
inc
or
mov
je
inc
push
call
or
cmp
ss
pushf
jne
cmp
xor
inc
pop
or
jns
xor
dec
dec
inc
add
push
mov
call
push
dec
call
(bad)
jno
mov
mov
adc
mov
mov
pusha
pusha
push
mov
call
mov
in
mov
xor
cmp
je
mov
stos
fdivr
dec
or
int
push
push
call
push
call
and
mov
cmp
mov
je
mov
push
jae
mov
pop
mov
(bad)
pusha
shr
pop
sub
call
mov
sbb
mov
mov
push
call
dec
js
cmp
ins
mov
(bad)
(bad)
out
nop
int
adc
dec
add
push
call
add
sub
mov
sbb
pushf
fcomp
mov
das
lea
push
pop
pop
jnp
inc
aam
mov
or
sub
(bad)
rcl
je
call
clc
daa
stc
dec
call
jne
(bad)
imul
sahf
xchg
and
add
adc
or
in
cli
adc
adc
shl
cli
dec
jne
pop
jmp
cs
jno
or
and
xchg
cmps
inc
jle
jle
mov
mov
mov
sbb
mov
jnp
call
aam
inc
cld
inc
jle
mov
pop
pop
mov
dec
repz
inc
sub
mov
push
mov
les
mov
es
pop
push
cmp
je
cmp
ret
add
(bad)
(bad)
jge
aam
ins
and
jg
jmp
add
ret
add
cmp
stc
inc
mov
rcr
adc
retf
sbb
sbb
mov
mov
jle
and
call
and
jl
lds
js
jnp
(bad)
cmp
push
fisub
mov
mov
add
call
iret
sbb
inc
jle
sub
js
cmps
test
adc
adc
cmp
mov
jp
push
cwde
mov
call
(bad)
(bad)
idiv
xor
or
into
mov
call
mov
aas
jl
sub
push
call
js
call
add
lock
jo
dec
out
js
mov
ja
jne
mov
les
push
mov
call
loopne
push
loopne
shl
adc
and
xchg
push
mov
push
mov
and
pop
ret
push
mov
adc
jl
adc
adc
icebp
push
call
add
sbb
call
mov
jl
push
mov
pop
sbb
and
push
call
stc
bound
or
into
or
dec
xchg
adc
in
sti
adc
jmp
jno
add
inc
and
out
push
sbb
test
(bad)
fucomp
mov
dec
dec
es
mov
push
push
mov
call
or
push
push
je
jle
cmp
dec
sbb
call
or
icebp
mov
out
out
call
lea
retf
hlt
fist
xchg
xchg
popa
add
inc
mov
inc
int3
sbb
or
pop
cdq
sub
(bad)
pop
fs
add
or
push
fwait
stc
mov
jne
rol
add
retf
lock
(bad)
push
mov
push
push
or
xor
mov
push
jge
dec
and
call
pop
in
xchg
jne
call
call
aam
call
cmp
mov
inc
nop
jmp
vhsubps
mov
mov
adc
jmp
mov
shl
out
mov
push
mov
aaa
mov
mov
inc
adc
fsub
push
in
outs
loope
mov
cmp
fmul
mov
je
cmp
mov
setne
or
push
push
call
sti
pop
aad
cmp
xchg
sub
sub
dec
sbb
sar
retf
jbe
xor
cmp
loopne
(bad)
push
add
cmp
jb
jmp
mov
test
jbe
sub
push
out
mov
dec
(bad)
and
call
aaa
cmp
add
call
jmp
or
fbstp
jmp
mov
jg
push
rcpps
pop
sar
inc
cmp
inc
outs
or
or
or
mov
xchg
cmp
mov
dec
cmp
call
outs
xor
cmp
mov
push
xchg
add
push
mov
pop
jne
and
mov
test
add
retf
enter
dec
cld
je
inc
dec
popa
clc
(bad)
outs
fbstp
mov
push
or
call
adc
pop
adc
jne
ins
xor
inc
or
add
cmp
pop
adc
jle
jbe
mov
movs
push
push
cmp
ss
cld
je
inc
je
jle
inc
into
mov
aas
in
fnstsw
mov
or
mov
loopne
cmp
call
xchg
fidiv
std
lock
sub
iret
call
jne
or
sti
lahf
loopne
test
adc
jle
and
clc
pop
jne
sbb
addr16
jmp
push
sbb
push
push
mov
add
dec
out
loopne
in
add
push
push
and
out
or
jge
cld
dec
xchg
mov
inc
dec
push
mov
call
or
mov
xor
lea
mov
loopne
jge
jmp
call
call
sar
mov
jbe
mov
call
test
pop
ss
(bad)
dec
add
xor
call
add
inc
cmp
jb
sub
ds
push
adc
push
fadd
loope
adc
imul
popf
sbb
push
add
jge
xor
loopne
push
mov
jle
hlt
push
fisttp
js
inc
cmp
enter
(bad)
or
jmp
data16
(bad)
sbb
dec
push
lea
call
dec
inc
icebp
xchg
or
in
pop
(bad)
es
or
or
test
je
mov
adc
mov
(bad)
pop
inc
jo
and
aam
je
cmp
je
add
stos
or
adc
std
sbb
push
and
pop
pop
pop
pop
mov
test
data16
hlt
sbb
push
add
dec
and
cli
add
jne
sahf
and
out
fs
imul
movs
mul
cmc
xchg
call
pop
loopne
stos
push
xchg
mov
test
je
stos
mov
mov
dec
xchg
push
loope
add
adc
push
cmp
mov
xchg
jmp
test
jg
ret
cmp
clc
(bad)
jle
mov
mov
(bad)
fadd
(bad)
dec
mov
cmp
sar
dec
dec
mov
lea
mov
les
jne
mov
stos
(bad)
jbe
jmp
clc
mov
and
je
mov
jmp
sub
sahf
and
adc
or
inc
mov
dec
scas
pop
jp
jno
lock
fucomp
sub
out
or
jbe
push
call
sbb
push
mov
dec
adc
pop
jne
dec
sti
(bad)
clc
sbb
adc
test
je
(bad)
ja
scas
jle
push
xchg
cmp
mov
lea
cmp
push
jne
test
adc
cmps
mov
fst
fcomp
je
call
fistp
dec
hlt
call
outs
lea
push
call
scas
mov
mov
adc
add
out
jle
ja
lea
call
call
call
mov
sbb
call
mov
call
fsubr
gs
push
call
(bad)
je
jo
call
adc
mov
retf
call
shr
cmp
mov
into
test
pop
je
push
cwde
out
mov
lea
movs
gs
jne
call
jge
pop
push
loope
mov
fsubr
inc
call
lea
mov
and
and
inc
mov
loop
test
rol
push
mov
mov
test
add
jmp
mov
gs
fsubr
push
xlat
es
pop
push
dec
dec
loope
adc
add
push
push
mov
push
adc
sar
or
sbb
into
call
pop
ins
neg
xor
scas
inc
call
lsl
sub
mov
jecxz
push
in
js
sbb
sti
mov
cmp
jne
ja
cmp
call
pop
test
add
mov
je
call
and
es
push
pop
shl
outs
push
fwait
inc
mov
clc
inc
adc
ss
inc
sbb
mov
mov
pop
add
or
xlat
pop
pop
add
and
popa
inc
xor
call
inc
cmp
jge
pop
rcl
add
or
int3
jmp
mov
jmp
mov
push
les
(bad)
mov
pop
xor
test
xchg
lods
push
aaa
loope
xor
xchg
add
mov
cmp
call
dec
jge
pop
mov
pop
jl
inc
jmp
mov
mov
xor
dec
(bad)
push
mov
push
push
push
ret
call
loope
(bad)
push
xor
stos
(bad)
ds
sbb
push
mov
fsubr
cs
jmp
mov
push
mov
mov
push
mov
imul
call
je
es
sub
arpl
mov
mov
mov
movs
clc
sub
sbb
and
mov
std
data16
call
ror
sub
cwde
idiv
je
fadd
or
jmp
mov
jne
or
stos
cmc
push
add
call
adc
inc
fistp
(bad)
cmp
and
sub
js
cmc
pop
int3
or
mov
jns
inc
(bad)
mov
add
inc
mov
fmul
adc
cmp
xchg
pop
aaa
inc
lock
push
lea
mov
jg
call
lea
call
and
push
push
xor
(bad)
shld
into
call
adc
call
add
dec
add
adc
mov
mov
adc
sub
mov
or
adc
adc
hlt
mov
mov
push
mov
sub
loope
sbb
sbb
xor
mov
inc
shl
fiadd
mov
jmp
dec
sbb
push
dec
es
(bad)
pop
call
rcl
inc
xor
sbb
push
loope
push
popa
mov
inc
dec
xchg
test
pop
add
inc
push
sti
pop
xor
call
mov
arpl
call
test
call
rcr
xchg
or
jne
call
js
nop
into
pop
push
shr
jge
cdq
ficomp
lea
mov
or
jne
call
frstor
push
call
mov
loope
rcr
stc
jns
inc
sub
sbb
xchg
dec
push
(bad)
(bad)
outs
stos
jmp
call
leave
stos
mov
dec
pushf
call
out
out
clc
in
stc
or
jne
call
dec
test
jne
pop
push
add
cmp
jle
ss
xor
call
or
loop
mov
or
sbb
add
(bad)
jle
mov
clc
push
push
mov
call
mov
call
out
gs
pop
je
adc
cli
jg
mov
je
mov
mov
jmp
push
mov
xchg
push
inc
mov
adc
add
div
std
ja
sub
jne
cld
test
je
mov
hlt
aas
add
or
cmp
jne
mov
out
add
lock
movs
add
inc
add
cmps
(bad)
sbb
addr16
daa
cmp
clc
mov
cmp
mov
fnstsw
push
lea
push
push
(bad)
cmc
push
call
lea
call
sar
mov
cmp
jne
fild
pop
into
mov
test
je
adc
dec
(bad)
and
cs
sbb
and
pop
stc
mov
inc
adc
push
or
ret
rol
ret
cmp
dec
rol
mov
inc
or
aad
jg
je
cmp
jne
mov
loopne
aam
jmp
push
call
or
or
push
pop
(bad)
fwait
mov
call
cld
push
lea
call
jnp
or
jle
sti
jmp
inc
cld
call
and
call
addr16
in
shl
cmps
lods
fwait
clc
dec
addr16
dec
les
inc
loopne
addr16
or
imul
jmp
dec
pop
pop
daa
mov
xchg
adc
repnz
ins
pop
lock
loope
lods
lock
or
daa
jae
sbb
jle
jb
mov
outs
sub
add
inc
mov
mov
call
test
mov
ret
mov
mov
out
mov
add
or
mov
je
mov
cli
out
push
test
jbe
call
dec
fst
not
inc
push
mov
mov
icebp
cmp
cmp
loopne
sbb
call
fdivr
pmulhw
dec
mov
ret
cmc
out
(bad)
dec
pop
inc
mov
sbb
mov
fld
std
dec
mov
xor
cmp
jg
sbb
call
pop
pop
je
xor
inc
mov
shl
fdivr
loop
shl
push
sub
mov
mov
add
stc
cdq
xor
add
data16
push
lea
jle
mov
cmp
cmp
fisttp
dec
and
inc
mov
lods
hlt
je
push
lea
mov
and
outs
sub
jmp
mov
push
pop
shl
(bad)
and
cli
inc
out
or
jg
sbb
shl
out
in
push
call
nop
sub
(bad)
pop
loope
push
pop
pop
aad
jb
popa
ret
mov
or
adc
mov
cdq
jb
push
call
(bad)
movs
push
push
xor
pop
mov
adc
je
repnz
iret
clc
dec
test
xor
call
add
icebp
xchg
mov
xor
je
and
cs
sbb
sub
call
aam
(bad)
and
(bad)
cli
(bad)
daa
add
or
icebp
xchg
inc
dec
loopne
lods
jns
icebp
push
call
loope
into
pop
pop
mov
and
icebp
or
loopne
cli
mov
call
adc
mov
call
push
push
push
sbb
sbb
adc
jno
add
fidiv
sbb
and
push
push
mov
sbb
out
and
ret
adc
fadd
and
mov
jo
cmp
int3
xchg
outs
je
or
je
and
aaa
daa
pop
aaa
add
xchg
(bad)
jmp
add
push
call
jbe
into
adc
push
xor
dec
js
mov
push
push
call
xor
aad
or
xor
mov
stos
mov
adc
inc
call
std
scas
movs
jg
lea
(bad)
pop
mov
call
xor
clc
call
cmp
cmp
mov
ror
push
adc
add
ja
add
inc
and
daa
jp
rol
(bad)
cmps
mov
lea
push
push
jno
call
sub
bound
pop
dec
call
scas
stos
push
inc
or
pop
cmp
jg
push
xchg
dec
mov
jmp
inc
sub
(bad)
cld
sar
sub
or
mov
jb
not
test
mov
repnz
mov
mov
xlat
neg
sahf
fistp
sahf
test
pop
pop
(bad)
cmp
inc
dec
push
push
(bad)
mov
inc
sbb
pop
sar
call
push
call
cmp
je
jmp
jmp
add
fist
icebp
or
push
aaa
call
test
nop
ja
push
xor
push
call
xor
adc
mov
push
test
xor
dec
push
push
call
je
mov
jle
lahf
(bad)
(bad)
jmp
or
retf
jmp
and
adc
pop
ret
movs
dec
push
or
push
je
lea
sub
cmp
clc
je
cmp
je
inc
push
imul
ss
dec
call
jne
push
mov
scas
popf
mov
push
pop
mov
mov
call
(bad)
jmp
mov
and
pop
cmp
jne
in
ja
pop
rol
mov
les
(bad)
dec
sar
test
test
lea
inc
jns
mov
or
out
mov
fidiv
or
mov
pop
dec
add
mov
dec
cmp
add
push
call
clc
pop
mov
pop
pop
add
in
sbb
push
in
fbld
or
stos
dec
xor
(bad)
std
sub
aad
push
test
mov
stos
(bad)
jg
test
jle
xor
cmp
minps
push
scas
test
push
idiv
cli
or
adc
xlat
frstor
push
clc
ins
adc
mov
push
inc
mov
mov
les
jg
push
outs
repz
mov
jmp
call
stos
loop
sub
mov
test
fs
push
and
adc
add
ret
iret
sbb
add
call
sbb
fcmovne
jb
enter
mov
inc
adc
jmp
loopne
jo
scas
lea
push
lea
jle
push
cmps
or
mov
inc
sbb
call
or
add
test
inc
add
repz
cmp
js
call
jmp
push
call
jmp
mov
mov
mov
push
call
adc
jo
(bad)
pushf
push
test
hlt
jmp
push
lea
add
adc
scas
mov
iret
and
addr16
loop
mov
nop
adc
stos
clc
icebp
push
call
push
sahf
sub
pop
je
push
lods
icebp
inc
mov
test
sbb
cmps
mov
push
call
mov
call
inc
(bad)
mov
dec
rcr
adc
lea
push
call
add
call
push
(bad)
(bad)
(bad)
cmp
je
(bad)
scas
xor
inc
or
xchg
pop
test
and
out
sbb
mov
jge
sub
cli
aad
inc
idiv
test
add
jg
mov
inc
jge
cmp
test
pop
xchg
(bad)
call
mov
mov
clc
addr16
clc
call
inc
pop
clc
into
imul
iret
mov
ret
outs
jo
jbe
dec
or
inc
int
clc
mov
push
jmp
test
sbb
out
shr
cmp
mov
mov
mov
mov
mov
aas
lock
jo
inc
jo
jg
jl
add
mov
xchg
sbb
dec
cmp
arpl
test
mov
mov
fnstsw
mov
lea
push
mov
add
retf
mov
mov
icebp
call
mov
push
jmp
cmp
shl
mov
je
cmp
jne
test
inc
rol
mov
cmp
inc
xchg
push
push
push
mov
add
push
lea
(bad)
jns
inc
loopne
jne
push
(bad)
call
out
xor
dec
mov
es
push
call
or
jl
mov
ins
retf
mov
pop
(bad)
fnsave
scas
ds
or
and
inc
pop
xchg
cld
call
(bad)
adc
dec
pop
jne
sub
mov
dec
cwde
aad
xchg
aam
cmps
clc
mov
mov
call
sub
xchg
add
xchg
cdq
repz
stos
or
rol
pop
xor
mov
stc
push
(bad)
mov
mov
or
pop
call
push
add
mov
clc
dec
call
adc
jbe
mov
mov
cmc
ja
mov
add
pop
and
dec
stos
mov
push
mov
push
jle
mov
lock
pop
push
xor
cmp
pop
cli
(bad)
mov
or
pop
adc
mov
mov
cmp
sbb
enter
fild
into
push
call
mov
cmp
jb
jmp
and
mov
jbe
add
ud0
mov
cmp
jne
retf
fstp
mov
and
je
add
mov
mov
push
mov
jne
push
push
push
call
pop
in
or
cld
retf
loop
popa
pop
outs
mov
add
rol
fld
lea
movs
fcomip
cmps
imul
je
push
inc
adc
cld
dec
sub
call
ret
push
lea
mov
ret
data16
cmp
je
jg
fadd
imul
inc
cmp
mov
cmp
jne
dec
cdq
nop
or
js
je
dec
fwait
pop
sub
jnp
(bad)
jge
dec
js
dec
inc
or
xor
mov
ret
inc
push
push
call
adc
aad
push
adc
push
dec
mov
repnz
outs
sbb
scas
mov
je
cmp
clc
lock
addr16
lock
xchg
sbb
or
inc
aad
push
(bad)
es
pop
mov
push
sbb
push
and
je
mov
pusha
enter
lahf
push
and
jg
das
inc
pop
jmp
push
call
pop
scas
int3
pop
cmc
mov
sti
call
inc
sbb
ret
daa
sahf
js
or
push
test
push
push
call
mov
or
and
dec
and
daa
xchg
sbb
mov
xor
sbb
pop
xor
inc
mov
sbb
sbb
sbb
call
call
shl
mov
push
push
mov
shl
cmps
out
adc
mov
ror
lea
push
call
mov
aaa
sub
call
sbb
add
in
std
push
jne
mov
mov
lock
mov
ins
jmp
and
and
mov
(bad)
call
inc
loop
scas
stos
jno
xchg
push
mov
test
stos
mov
inc
adc
mov
jge
cmp
jbe
mov
sub
cmp
jge
jmp
adc
add
push
hlt
aas
push
icebp
out
(bad)
jmp
fcom
rol
adc
or
nop
call
cld
jbe
push
jb
and
(bad)
(bad)
jg
fsubr
add
fild
jge
test
mov
je
mov
cmp
inc
push
xlat
fwait
test
call
enter
adc
(bad)
call
cmps
adc
les
add
add
mov
mov
or
(bad)
dec
sbb
not
and
push
push
push
push
call
dec
test
je
call
or
sar
test
mov
je
inc
inc
and
adc
mov
mov
mov
pop
mov
pop
mov
pop
pop
leave
ret
push
push
mov
call
add
gs
push
movs
xchg
test
add
sub
call
xor
add
mov
adc
retf
(bad)
(bad)
fdiv
rol
inc
(bad)
jg
shl
mov
mov
mov
push
call
add
call
stos
jns
push
add
icebp
adc
daa
aaa
call
mov
loopne
into
ins
mov
call
or
jle
mov
and
adc
sub
ret
ins
push
push
faddp
imul
push
call
sub
inc
lock
jge
jne
or
jle
jbe
mov
xchg
inc
mov
add
sar
mov
cmp
jb
mov
dec
hlt
call
xchg
add
inc
lea
mov
push
jle
call
imul
sub
aaa
retf
jae
lock
add
daa
lahf
mov
and
or
or
retf
call
mov
ret
sbb
xor
test
push
icebp
or
mov
je
test
loope
call
(bad)
sub
mov
mov
jmp
fldenv
add
rol
add
add
popf
pop
add
sbb
jbe
sti
test
scas
and
aad
sub
sub
icebp
pop
mov
dec
or
cmp
dec
adc
inc
js
cmps
lahf
in
pop
xchg
dec
push
and
cmps
jbe
call
test
dec
push
fldenv
mov
ja
inc
dec
(bad)
dec
mov
mov
mov
xor
cmp
je
mov
dec
inc
je
add
ret
or
add
call
jl
cmp
push
mov
mov
(bad)
pop
xor
pop
sub
mov
sbb
sub
(bad)
jmp
in
inc
jl
dec
add
dec
add
movsx
lods
jecxz
sbb
add
movaps
or
cmps
add
inc
inc
je
add
push
sbb
push
call
cmps
and
(bad)
jg
out
mov
je
mov
mov
mov
xor
cmp
add
jg
int
push
push
push
push
push
push
mov
add
iret
call
inc
(bad)
pop
or
call
retf
bndstx
pop
test
movs
iret
mov
mov
push
call
leave
ror
jmp
movs
inc
out
repz
xchg
and
aam
fwait
jp
sub
pusha
push
push
jb
gs
icebp
retf
call
or
fist
loopne
mov
ret
lea
cmp
mov
adc
stos
push
inc
mov
and
mov
out
mov
inc
mov
push
dec
and
mov
call
stos
pop
push
jge
dec
bound
out
outs
scas
push
and
mov
call
xor
push
imul
jmp
(bad)
clc
cmp
mov
ds
sti
or
push
xlat
psrlw
icebp
sub
push
lods
imul
xchg
adc
push
inc
cmc
call
cmp
mov
jg
push
pop
arpl
inc
jg
cmovns
add
push
call
push
jbe
lea
data16
pop
fld
adc
call
enter
jle
or
push
push
push
call
mov
xor
je
mov
call
mov
retf
mov
call
mov
push
mov
mov
add
pop
sub
mov
mov
call
dec
div
mov
inc
dec
push
call
inc
add
dec
xor
fbstp
sbb
pop
mov
xor
(bad)
(bad)
jg
push
scas
mov
(bad)
cmp
jbe
push
xor
mov
add
call
jle
jb
pop
push
jbe
sub
minps
inc
outs
or
shr
mov
inc
dec
add
push
push
call
pop
cmp
outs
or
(bad)
je
mov
sti
adc
mov
or
sub
jge
out
lock
jns
xor
jns
pop
and
add
xor
cmp
mov
cmp
dec
loopne
sub
mov
dec
sbb
mov
push
push
call
pop
pop
in
popa
idiv
icebp
jg
jmp
adc
retf
je
call
jae
push
aad
ins
push
adc
iret
pushf
sbb
test
cmp
pop
inc
test
mov
cmp
mov
retf
xchg
jae
inc
dec
mov
fnstcw
pop
ret
jmp
call
test
shr
xor
jge
or
add
cmp
je
scas
mov
jno
add
mov
add
call
mov
clc
add
cmp
jb
mov
fdivr
pop
push
mov
call
push
push
call
mov
pop
std
clc
(bad)
jge
inc
loope
adc
leave
ret
push
push
jg
adc
std
mov
push
mov
mov
in
jb
ror
mov
adc
mov
lea
mov
stos
call
nop
outs
je
sbb
mov
jmp
cmp
xchg
pusha
gs
and
push
or
popf
dec
ffree
pusha
(bad)
icebp
lea
mov
mov
mov
shr
and
push
(bad)
mov
sub
pop
call
fisttp
pop
pop
je
push
sbb
pop
mov
mov
(bad)
jg
push
inc
pop
js
pop
jl
pop
inc
mov
cmps
loopne
or
out
push
xor
dec
push
int3
imul
inc
add
cmp
je
push
call
ins
je
mov
dec
add
sub
ja
(bad)
jg
push
call
push
mov
call
outs
ins
jmp
mov
cmp
icebp
mov
call
pop
pop
mov
stos
or
or
aaa
pop
outs
js
mov
dec
repnz
sub
adc
sub
das
push
loope
mov
ss
call
mov
jmp
dec
mov
aad
sub
call
or
xor
imul
adc
into
rol
jmp
pop
fs
call
xor
cmp
sbb
mov
mov
inc
rol
push
mov
jle
and
call
jmp
adc
inc
or
(bad)
cli
faddp
add
mov
add
inc
(bad)
fild
pop
ret
jl
or
test
mov
je
movzx
add
fild
or
test
sub
je
es
call
add
and
or
cld
jmp
mov
mov
icebp
or
(bad)
shl
sahf
push
cmp
pop
inc
mov
sbb
pusha
push
xchg
pusha
call
jle
popa
push
jle
lds
push
hlt
retf
call
jmp
add
aas
stc
push
mov
mov
call
mov
lahf
pop
jne
mov
nop
ret
pop
outs
jb
sti
dec
or
enter
stos
dec
lea
sub
dec
push
cld
(bad)
jo
mov
mov
(bad)
jmp
jl
lea
mov
call
inc
sub
(bad)
jg
inc
inc
push
mov
sbb
test
jo
xor
je
inc
sbb
adc
cmp
pop
je
pusha
push
push
test
add
stos
mov
out
mov
push
push
mov
push
cmc
fwait
and
dec
inc
push
push
lea
aam
inc
or
rep
jmp
je
sbb
pop
or
mov
push
sbb
mov
lea
dec
inc
je
and
or
lea
mov
call
fnstsw
cmp
jmp
jns
jbe
adc
sbb
lea
mov
es
dec
dec
add
jne
mov
fist
cmp
dec
and
mov
cmp
je
mov
scas
jnp
or
or
or
mov
mov
jmp
xchg
test
adc
sub
mov
mov
cmp
adc
inc
stos
or
push
jge
aaa
mov
jmp
jbe
push
jne
mov
or
cmp
sbb
jns
mov
push
(bad)
mov
adc
dec
fs
pop
mov
push
cmp
je
inc
inc
cmps
jae
adc
out
jle
jg
je
push
call
jo
call
push
mov
inc
and
add
js
push
mov
mov
lea
(bad)
(bad)
mov
movs
movs
movs
lea
cmp
bound
daa
sub
jo
add
rcl
fadd
mov
call
hlt
sbb
sub
push
adc
add
add
sbb
pop
je
sbb
sti
add
cmp
call
push
call
add
inc
add
push
fstp
mul
mul
adc
cdq
push
mov
or
jmp
lds
(bad)
mov
inc
sahf
gs
shl
xchg
push
clc
dec
ja
add
data16
or
inc
mov
inc
xchg
mov
in
mov
imul
cli
pop
shl
mov
lea
jnp
adc
push
outs
push
ror
jmp
je
jnp
inc
push
add
call
call
mov
ret
mov
sbb
cwde
lea
add
cmp
call
push
std
jg
std
fldz
lea
sahf
test
add
fldz
fstp
fild
call
mov
mov
icebp
push
pushf
add
add
call
cmc
(bad)
fsubr
fiadd
int3
and
ins
jne
sahf
std
mov
push
ja
sahf
pushf
add
out
mov
stos
fsubrp
mov
call
cld
ins
add
pop
mov
pop
ret
inc
or
retf
adc
push
mov
cmc
inc
push
dec
call
or
sub
add
lea
add
jmp
and
mov
mov
mov
mov
sbb
aas
daa
jmp
fnsave
dec
ja
mov
test
push
cwde
mov
lock
push
mov
call
rol
(bad)
call
inc
cld
call
pop
mov
jl
cld
mov
call
clc
push
push
push
xor
aam
add
push
jne
call
cmp
xor
push
push
call
add
and
call
fisttp
pop
mov
mov
call
add
cmp
fs
add
push
rol
in
call
clc
je
and
ins
sbb
or
inc
sub
or
sbb
ins
mov
xor
mov
mov
mov
mov
call
out
(bad)
out
out
add
push
add
push
call
mov
or
fstp
cmp
jmp
mov
or
add
add
mov
(bad)
sub
outs
mov
add
add
test
jmp
xchg
(bad)
or
mov
mov
lea
(bad)
push
lea
call
mov
mov
mov
mov
cmps
scas
sub
mov
(bad)
stc
add
pusha
loopne
push
push
mov
sub
sbb
loopne
push
call
or
imul
pop
sbb
sub
sub
add
inc
fisttp
or
add
jmp
jmp
xchg
fcom
call
add
stos
fdivr
xchg
pop
out
mov
jne
es
push
adc
cmp
clc
outs
clc
(bad)
jmp
retf
clc
inc
mov
inc
cmp
je
cmp
je
push
sub
jmp
(bad)
jne
add
lds
push
add
fnstenv
mov
jmp
loop
mov
pop
push
mov
mov
pop
dec
mov
mov
loopne
neg
cmp
add
rcr
test
push
je
push
call
mov
pop
cmp
jne
mov
int
push
cmp
adc
push
xor
or
(bad)
jg
cmps
jg
fdivp
(bad)
inc
mov
xor
jmp
jmp
jo
pop
lea
add
cmp
jl
xor
or
les
xchg
sar
fcomi
call
pop
push
call
popa
add
leave
inc
fwait
scas
(bad)
daa
test
inc
int3
mov
push
mov
push
lds
aad
into
icebp
rcr
adc
rcr
icebp
das
ss
in
pop
add
call
je
shr
mov
ja
cs
pop
lock
and
jne
jle
mov
loope
mov
ja
outs
sub
and
call
inc
(bad)
in
add
jne
push
inc
mov
push
mov
dec
adc
call
add
inc
je
cdq
(bad)
push
call
xchg
sbb
adc
sti
ds
jg
inc
jg
(bad)
out
push
push
adc
adc
add
or
pop
iret
(bad)
jmp
gs
(bad)
push
mov
clc
mov
sbb
mov
mov
(bad)
inc
call
cld
or
inc
jne
jmp
out
les
add
test
getsec
mov
mov
jmp
xchg
test
out
(bad)
add
jge
mov
mov
je
call
call
cld
ja
mov
mov
call
in
mov
je
test
je
ins
add
mov
addr16
or
push
ja
adc
sbb
shr
test
je
dec
jge
inc
cmp
push
and
inc
aam
shr
jns
out
out
cmp
inc
mov
aam
add
sub
push
outs
sub
push
lea
call
push
inc
bt
push
mov
(bad)
and
jge
add
test
mov
pop
(bad)
and
push
sbb
adc
pop
and
je
(bad)
aas
scas
test
mov
jbe
mov
mov
mov
ja
jg
call
add
inc
in
add
dec
jne
xchg
lea
shl
cmp
sti
dec
lea
mov
jb
mov
add
add
fild
cld
mov
call
push
aam
pop
xor
call
leave
cmp
mov
xchg
push
in
cmp
jne
mov
lea
inc
loopne
sbb
push
push
push
call
rol
fistp
jmp
cmp
mov
adc
clc
jbe
mov
loopne
pop
js
shr
call
mov
mov
call
inc
sbb
inc
or
shl
or
push
call
lea
push
stos
jg
iret
xor
les
call
or
inc
and
lea
out
(bad)
ja
call
in
inc
sbb
pop
cmp
je
lds
lock
popa
loopne
add
fs
aam
push
jge
jae
pop
adc
jecxz
inc
clc
cmp
je
call
pop
sbb
adc
mov
std
pop
cld
adc
push
call
pop
sbb
in
mov
sbb
outs
clc
lea
mov
inc
call
sbb
cld
cmps
sbb
int3
jno
call
hlt
add
or
sub
das
and
fsubr
jb
ret
or
mov
mov
jne
cmps
sti
aam
mov
pop
fadd
lea
mov
in
push
loop
add
lock
push
mov
(bad)
mov
cmp
jb
push
inc
mov
aam
bound
push
leave
jmp
mov
loope
cli
cwde
and
std
outs
clc
pop
pop
jbe
mov
mov
lea
call
jo
scas
or
rcpps
call
lds
ja
jb
retf
jmp
into
push
add
stos
js
push
pop
fsub
or
call
mov
cmp
sub
call
fistp
or
xor
call
fisubr
add
xchg
push
push
pop
mov
push
popa
pushf
dec
pop
jnp
xchg
cld
call
or
jne
ss
push
mov
repz
in
jecxz
pop
adc
cmp
mov
jb
mov
pop
lea
cmp
(bad)
ss
scas
sti
inc
inc
jb
add
or
aam
cli
push
add
ror
adc
push
mov
clc
sbb
inc
ja
lahf
and
shr
jnp
std
mov
test
adc
je
mov
push
add
jae
fwait
and
call
inc
adc
add
inc
adc
mov
js
adc
rcl
out
push
ja
sub
jg
dec
hlt
push
push
call
int3
lahf
je
in
or
jge
aas
dec
add
(bad)
inc
je
mov
cmp
dec
jg
or
ret
ret
jp
lock
or
(bad)
daa
inc
call
inc
clc
je
call
push
jge
fiadd
retf
(bad)
cmp
test
inc
adc
clc
push
add
mov
jns
mov
popa
sbb
mov
call
(bad)
(bad)
(bad)
mov
mov
cmp
jne
cmp
cld
jne
ret
jne
sbb
call
pop
pop
mov
or
mov
inc
hlt
or
add
push
sub
xchg
pop
xor
test
push
mov
ds
xor
lock
ins
cmp
call
push
jne
retf
adc
adc
clc
push
mov
cmovno
adc
jg
adc
cmp
rsm
mov
xor
inc
mov
push
pusha
xor
call
pop
(bad)
clc
or
scas
cmp
jge
cmp
add
jmp
and
loope
(bad)
dec
enter
jge
sbb
pop
movs
clc
mov
push
push
adc
rol
clc
call
add
ror
call
mov
popa
call
shl
pop
in
jb
jne
dec
int
adc
(bad)
sti
loope
in
inc
add
push
call
ret
push
shl
push
int3
jno
outs
cmp
adc
call
or
std
call
xchg
test
jecxz
add
pop
push
mov
push
outs
call
ret
inc
clc
pop
into
ret
mov
push
xlat
mov
test
int3
jmp
imul
jmp
sar
pop
and
adc
mov
jmp
js
data16
cld
or
dec
cld
push
call
cli
retf
sub
mov
lods
call
jl
(bad)
inc
fs
pop
dec
out
out
ret
pusha
int3
add
push
call
pop
loopne
out
dec
jb
loop
arpl
(bad)
push
in
leave
mov
mov
movs
call
mov
call
popf
loope
jmp
je
sbb
push
mov
jne
call
out
popa
sar
push
pop
jne
push
inc
cdq
push
and
jle
adc
leave
add
outs
fcom
cs
dec
mov
sbb
jl
fwait
add
popa
enter
jp
jo
mov
push
pop
jno
cmps
gs
add
pop
in
adc
movs
out
adc
loopne
sbb
jne
push
aad
retf
(bad)
dec
inc
hlt
pop
mov
mov
mov
mov
mov
mov
hlt
add
add
aas
mov
call
jb
movsx
cdq
test
daa
sti
test
cld
dec
ds
xor
inc
or
(bad)
stc
ss
movs
pop
jo
loope
out
add
cli
in
mov
movs
cmc
xor
mov
fnstsw
(bad)
iret
push
jge
(bad)
inc
icebp
cld
loopne
test
fld
push
inc
js
call
call
xor
inc
mov
adc
push
push
call
jmp
loop
mov
in
call
sbb
iret
call
lahf
out
cmp
retf
jmp
sbb
or
cmp
out
inc
or
outs
out
cmp
clc
outs
(bad)
jmp
add
dec
or
add
in
(bad)
sahf
mov
adc
push
lea
call
cli
pop
loope
cli
inc
imul
call
or
lds
and
and
cmp
push
push
fild
and
mov
ret
add
sub
xor
jg
jl
je
push
add
test
jb
jae
add
iret
cld
test
push
push
push
push
call
stos
aas
xor
fwait
or
add
jl
jmp
jge
inc
ret
push
call
je
aas
jno
call
mov
fisttp
mov
xor
xchg
clc
or
xor
mov
out
test
out
test
mov
inc
mov
sub
mov
xor
push
xlat
cld
iret
push
out
scas
call
dec
pop
mov
ror
sub
and
dec
cmp
inc
rcr
ins
xor
inc
or
sbb
push
add
adc
aas
aaa
jns
mov
mov
cmp
adc
and
pop
inc
inc
je
sub
jl
mov
add
adc
mov
and
les
add
sahf
cmps
mov
or
jbe
push
jno
test
pop
mov
cmps
(bad)
(bad)
jmp
push
sub
call
mov
outs
call
push
aaa
push
mov
push
call
jmp
mov
lea
cmp
sbb
xor
push
push
and
inc
or
test
clc
cli
cwde
cmp
pop
je
mov
dec
cld
call
leave
ret
push
push
idiv
jbe
or
bound
push
in
sbb
call
lea
fsubr
mov
mov
mov
xor
push
xchg
xlat
xchg
adc
sbb
mov
fbstp
xlat
fnstenv
jg
push
lea
inc
call
push
or
fild
adc
call
les
mov
mov
add
dec
ss
jle
mov
out
pop
icebp
or
pop
xchg
and
call
adc
std
sbb
add
call
push
mov
std
cmp
iret
mov
jmp
jns
sub
scas
dec
es
and
call
movs
push
push
inc
xor
inc
out
call
xchg
into
jge
adc
call
dec
or
jg
push
adc
sub
push
push
jo
fsubr
xlat
or
mov
jnp
sahf
jp
sahf
les
adc
mov
or
or
pop
retf
mov
out
or
sahf
push
mov
adc
ins
test
add
cdq
push
in
and
push
push
push
mov
or
(bad)
call
add
lea
jne
pop
jnp
into
mov
push
mov
loopne
sahf
adc
add
mov
adc
sahf
push
pop
mov
mov
sahf
cmps
cmp
sbb
sahf
mov
mov
ja
ins
sbb
sahf
jo
ins
add
jbe
sahf
je
fmul
pop
xchg
mov
mov
aaa
mov
add
add
mov
mov
enter
mov
mov
mov
shl
test
jl
outs
ja
call
adc
push
call
sbb
cmp
inc
pop
outs
cld
call
push
lea
(bad)
cmp
outs
pop
arpl
clc
mov
pop
mov
jne
pop
ret
(bad)
mov
lea
leave
pop
pop
pop
je
xor
(bad)
and
mov
call
and
mov
mov
pop
mov
je
add
sbb
sbb
aas
push
call
popf
sbb
inc
or
adc
inc
ins
mov
jl
jecxz
adc
cmp
pop
ss
pop
or
lea
pop
and
push
xchg
bound
lds
aas
inc
or
cmp
cmp
sahf
repz
and
fwait
add
mov
sub
push
ins
scas
or
mov
jg
call
pop
add
jmp
mov
in
sub
icebp
outs
dec
cmp
jl
mov
push
xchg
lea
xor
and
or
push
imul
loope
mov
jg
add
pushf
add
std
or
xchg
mov
pop
xor
cmp
aad
shr
mov
mov
mov
xor
mov
mov
add
stos
arpl
fisttp
cld
mov
xchg
retf
call
test
xchg
cmp
xor
mov
cmp
outs
jl
mov
mov
(bad)
sub
clc
mov
fmul
hlt
xchg
jg
sti
arpl
lea
push
push
(bad)
push
call
jmp
sub
dec
call
call
sbb
push
push
ficom
or
fiadd
lds
push
mov
(bad)
jne
popa
add
call
loope
jmp
mov
call
ss
add
ret
xor
or
mov
test
cld
cmps
dec
xor
sub
lea
loop
loope
(bad)
mov
jne
cmp
je
inc
cmc
cdq
and
or
inc
add
aad
adc
into
adc
mov
or
or
ror
clc
sar
jmp
call
(bad)
mov
mov
(bad)
call
pop
clc
jg
jo
call
lods
retf
call
call
(bad)
je
cmp
jne
cmp
jge
test
mov
jge
xor
jmp
mov
xchg
mov
(bad)
fwait
xor
enter
cmp
jl
pusha
push
call
push
jl
pop
mov
jg
outs
mov
or
jo
add
lock
inc
dec
and
fsubr
mov
cld
call
rol
retf
inc
mov
sbb
xor
cwde
sub
call
pusha
inc
add
std
fs
pop
push
push
push
sbb
and
(bad)
sbb
call
sub
add
leave
cmp
fs
jbe
xchg
call
into
mov
push
test
mov
add
dec
adc
cmp
out
or
cmps
adc
pop
push
lea
cmp
imul
and
stc
push
add
sti
mov
call
pop
cli
ja
mov
je
test
je
xchg
dec
cld
call
sbb
or
or
or
or
hlt
outs
xor
aam
sbb
enter
cmps
mov
jno
scas
ret
or
or
mov
cmc
clc
xor
xor
push
mov
icebp
cmp
rcr
inc
fistp
add
mov
std
jmp
and
mov
ja
js
stc
dec
push
lea
inc
push
cmp
mov
cmp
daa
pop
mov
mov
mov
pop
call
pop
jne
xor
mov
pop
test
push
pop
dec
push
and
inc
push
mov
call
sub
adc
idiv
add
sahf
dec
jle
lea
jl
movs
lea
push
push
call
mov
xor
test
jle
in
aaa
adc
sbb
test
inc
cmp
jl
add
outs
ficom
cmp
push
add
push
jmp
mov
neg
test
xchg
jmp
adc
or
inc
(bad)
arpl
jl
sub
add
test
jg
xor
push
call
pop
sub
add
icebp
push
mov
arpl
or
call
sub
mov
lock
xor
cmp
jne
mov
lea
lock
adc
push
push
push
and
ror
and
sbb
je
fmul
test
sar
and
push
add
xor
retf
and
jmp
mov
mov
cld
loop
mov
push
push
cmp
inc
pop
add
mov
dec
mov
(bad)
dec
dec
in
inc
sub
mov
je
mov
push
call
sub
mov
mov
mov
ror
repnz
add
rcr
mov
psubb
adc
mov
push
call
push
sub
xor
mov
mov
call
sub
aaa
push
add
add
sub
push
add
inc
in
and
fs
ja
jp
and
outs
or
pop
in
(bad)
das
mov
sub
fdiv
push
xor
or
xor
call
mov
test
aaa
jl
inc
push
call
test
jne
mov
mov
jg
cld
test
mov
je
pop
dec
mov
ror
fadd
mov
ds
test
push
call
call
dec
call
call
sub
ins
cs
retf
adc
cwde
xor
xor
cmp
and
call
push
pop
jb
mov
push
add
ja
push
push
call
push
std
push
and
inc
sub
je
push
pop
jmp
dec
jl
sub
(bad)
in
shl
test
or
fcomp
push
push
xor
outs
cld
sbb
mov
(bad)
jne
sub
push
push
sbb
xor
inc
add
fiadd
sar
jmp
push
es
shl
adc
push
movzx
mov
mov
or
jmp
nop
lock
and
(bad)
(bad)
jmp
mov
sbb
iret
call
movs
sti
push
test
dec
call
sbb
out
push
push
cmc
or
jg
les
into
call
add
sahf
das
jo
cmp
and
inc
add
call
imul
sahf
and
mov
in
dec
pop
mov
(bad)
jmp
cmp
outs
or
pop
sub
imul
test
jne
call
jg
fcmovnbe
adc
xor
jmp
or
jmp
out
imul
add
test
inc
cmc
push
call
sbb
add
sub
mov
xor
adc
outs
add
lods
adc
aad
xlat
adc
or
add
test
(bad)
sbb
sbb
(bad)
adc
test
mov
js
adc
push
(bad)
dec
je
sub
jl
and
pop
add
test
es
aam
imul
popa
out
call
jmp
pusha
push
push
idiv
add
call
jle
inc
push
test
lds
outs
js
movs
mov
add
mov
cmp
retf
call
emms
call
add
call
aaa
push
jmp
pop
pusha
pushf
ja
js
add
test
fistp
mov
scas
jnp
fistp
jne
mov
xor
cmp
jne
or
mov
push
or
and
add
jmp
xor
out
jmp
jae
inc
(bad)
mov
sub
dec
je
adc
adc
dec
jne
mov
mov
or
push
inc
outs
or
mov
(bad)
jmp
mov
call
mov
sub
inc
cmp
jne
mov
cmp
fdivp
inc
je
mov
(bad)
jne
cmp
add
jbe
mov
call
(bad)
cmp
add
in
stos
add
push
ins
popa
add
(bad)
sbb
mov
sti
std
sbb
call
jne
lea
and
test
mov
jmp
mov
mov
movsx
cmps
sti
pop
add
ret
cmp
pop
xor
pop
sti
cmps
imul
jmp
scas
imul
call
inc
nop
push
xchg
jmp
mov
mov
add
rcl
jl
test
add
add
pop
jnp
inc
add
sbb
pop
sbb
or
or
add
pop
jmp
std
add
add
or
or
adc
adc
adc
mov
sbb
push
push
sbb
sbb
sbb
sbb
sbb
dec
inc
aaa
mov
and
mov
sahf
out
cli
(bad)
(bad)
cmp
outs
and
sub
mov
mov
push
xor
xor
data16
rol
mov
in
sub
mov
or
jne
cmp
adc
je
xor
inc
test
jecxz
mov
or
cmp
push
jne
inc
mov
std
mov
call
or
outs
(bad)
jmp
add
pusha
ja
push
call
(bad)
jmp
clc
cmp
es
cld
xor
cmp
mov
clc
mov
outs
push
call
inc
test
cmp
xor
clc
es
in
icebp
pop
and
jge
lock
mov
cmps
sbb
lea
push
(bad)
aaa
in
jge
mov
call
push
inc
test
push
loopne
mov
jne
jb
dec
pusha
add
call
push
stos
jae
shl
std
mov
adc
xchg
xchg
jmp
inc
push
push
call
inc
pop
add
movs
jne
push
pop
aas
pop
xchg
jnp
idiv
add
dec
push
or
fdivr
ja
add
push
push
call
int3
jg
push
sbb
dec
pop
add
call
loopne
cli
inc
inc
js
jle
mov
jge
pop
adc
pop
into
pop
aam
clc
call
push
ror
(bad)
jno
mov
push
pop
mov
clc
call
jmp
es
sbb
jmp
fcmove
call
ss
or
add
dec
aas
jecxz
loopne
sub
and
popa
add
leave
imul
jo
inc
xlat
cwde
pop
push
push
add
add
dec
sar
sub
jne
cmp
je
jbe
inc
inc
lea
in
aaa
shr
icebp
jne
mov
add
(bad)
jg
lea
push
mov
push
jmp
push
push
mov
clc
add
clc
je
cmp
jge
(bad)
jbe
std
cmp
adc
jne
and
int3
sub
add
je
push
cmp
or
std
movs
add
adc
call
and
in
loope
(bad)
xor
push
xor
out
or
adc
icebp
call
add
and
or
push
mov
push
xchg
cmp
aas
jge
dec
lea
aad
lea
rcl
add
mov
inc
adc
or
push
mov
je
push
add
sbb
ss
push
and
cmp
xor
shl
(bad)
jns
push
js
shr
cmp
push
lea
add
call
je
fild
inc
jne
cmp
jne
adc
dec
(bad)
jne
jne
fisttp
cmp
jne
lods
jge
dec
push
pop
sub
jmp
add
or
aam
xor
call
add
add
add
or
jne
mov
mov
mov
ss
pop
loope
jl
sub
adc
mov
cmp
and
cmp
cmp
push
je
cmp
jne
or
scas
and
jne
ret
ds
(bad)
jg
ja
test
xlat
sub
setge
mov
xor
mov
stc
ret
push
scas
lahf
clc
call
inc
xchg
inc
aam
push
inc
xor
hlt
(bad)
fidiv
cmp
jle
cmp
jmp
js
ja
jmp
cmp
jge
push
add
jmp
sub
cmp
fs
rcl
push
pop
je
sub
or
sti
pop
test
lea
cli
dec
mov
fldenv
xor
mov
aas
mov
pop
imul
or
dec
or
jmp
jg
jmp
sbb
push
stos
or
xor
mov
jbe
xor
and
mov
(bad)
jmp
jbe
inc
add
dec
and
or
inc
sub
(bad)
jmp
cld
push
jmp
(bad)
ins
scas
or
adc
mov
jge
das
mov
dec
lea
cmp
jle
sub
ins
loop
dec
or
call
jmp
cmp
je
mov
lea
push
mov
outs
push
adc
sub
dec
stos
ja
jle
test
xchg
(bad)
jmp
add
jo
dec
cmp
push
sub
jbe
and
dec
jl
loope
sbb
mov
xor
das
cmp
push
lea
push
mov
mov
mov
rol
(bad)
jg
stc
inc
clc
(bad)
cmp
cmps
mov
call
dec
test
std
cmp
jg
enter
sbb
call
dec
test
adc
mov
sar
arpl
clc
push
cmp
je
xor
enter
jl
push
ss
test
mov
adc
or
inc
icebp
add
fmul
ret
daa
xchg
test
jge
add
or
cmp
inc
test
(bad)
(bad)
(bad)
jle
lea
pop
cmp
(bad)
pop
or
leave
inc
mov
inc
in
cmp
add
test
xor
push
push
out
cmp
pusha
jp
rcl
mov
or
mov
and
je
push
jo
test
sbb
cld
sbb
push
lods
stc
jmp
pop
loope
jg
(bad)
cmp
inc
pop
mov
call
popa
mov
mov
mov
push
cmp
jne
mov
call
les
call
je
cmp
je
or
cmp
sti
add
fadd
push
(bad)
fst
push
call
or
push
arpl
sbb
add
call
lea
and
dec
inc
pusha
push
call
inc
lods
sub
mov
ror
test
je
push
jmp
or
iret
je
or
stos
jle
push
push
call
cmp
mov
jae
dec
sub
xchg
js
add
pop
and
mov
call
jmp
mov
gs
icebp
stos
or
int3
dec
es
daa
sub
stos
clc
mov
and
mov
jbe
xlat
lahf
stos
push
push
call
in
lea
jae
mov
pop
mov
sti
and
dec
cmp
je
adc
call
(bad)
mov
mov
call
cs
or
push
inc
add
or
call
cmps
jle
mov
push
mov
ja
mov
jle
test
jae
repnz
cli
pop
nop
loope
ret
mov
push
call
sbb
inc
cmp
dec
or
clc
call
test
cwde
sbb
test
add
dec
mov
in
mov
sbb
sub
adc
jne
mov
add
sbb
xchg
mov
add
pop
cmovbe
ja
cmp
jne
lds
mov
and
clc
je
fild
fmul
ins
add
mov
mov
das
arpl
push
pop
mov
mov
ror
hlt
je
add
pop
ja
lahf
dec
jle
lea
add
cmp
pop
mov
je
sbb
push
loopne
cld
jbe
push
push
call
inc
paddusb
call
jmp
das
inc
add
inc
cmp
push
call
mov
or
cmp
nop
cwde
hlt
test
cmp
mov
xor
(bad)
adc
mov
jb
mov
sahf
icebp
inc
loop
loop
call
dec
loopne
jo
push
data16
mov
xor
clc
stc
das
fsubr
or
call
mov
push
cld
imul
int3
js
adc
fild
fcomp
add
push
fstp
sahf
add
test
cmp
cmp
mov
cmps
ror
test
pop
cmp
and
or
test
and
inc
into
xchg
fmul
jb
cwde
fimul
test
je
shl
jmp
add
pop
jle
dec
clc
cmp
enter
add
inc
push
jbe
push
adc
mov
jmp
xor
add
adc
cmp
pop
fdivp
add
cmp
jge
test
stos
(bad)
sub
jl
or
mov
loopne
push
std
push
push
jmp
cmp
je
cmp
mov
xchg
(bad)
xor
hlt
addr16
lahf
ret
pushf
jne
sbb
sahf
sahf
cmp
adc
jl
in
add
adc
aam
mov
je
mov
or
add
pop
sti
inc
cli
call
call
push
call
push
(bad)
inc
jae
call
push
sub
sub
jne
adc
push
xchg
push
call
inc
sub
mov
cmp
or
pop
les
test
cmp
je
in
or
call
sub
add
mov
ret
mov
out
add
xlat
cmps
(bad)
cs
sti
inc
push
cmp
je
mov
mov
xchg
and
call
rdtsc
aas
and
inc
xor
jno
call
sbb
cld
mov
or
into
inc
push
push
call
lahf
fsubr
call
leave
adc
or
mov
add
fbld
mov
jne
and
call
or
push
mov
push
(bad)
iret
add
mov
je
test
jne
mov
dec
cmp
jl
jae
popa
pop
retf
and
push
ror
popf
xor
std
es
je
cmp
je
outs
add
sub
or
xchg
jmp
fwait
cdq
cmp
mov
inc
sbb
stos
sar
out
mov
pop
mov
mov
mov
call
mov
jp
inc
call
scas
dec
call
jmp
pop
dec
je
push
call
pop
push
(bad)
sti
add
pop
pop
pop
(bad)
dec
sub
mov
bnd
rol
rcl
dec
cmp
or
cmp
pop
inc
jmp
jno
test
jo
cs
dec
dec
jne
out
xor
push
sbb
add
add
fwait
pop
cs
dec
or
fwait
push
push
call
loopne
push
retf
adc
test
sbb
enter
mov
mov
cmp
je
aam
fiadd
pop
dec
jae
push
(bad)
push
sub
push
xor
pop
jle
mov
sub
mov
or
cmp
sbb
adc
or
add
pop
push
call
and
add
pop
add
retf
mov
je
lea
push
xor
mov
scas
add
daa
loopne
lea
outs
cli
push
mov
or
xchg
push
cmp
inc
add
je
cmc
arpl
ja
lds
push
cmp
sub
jno
mov
(bad)
(bad)
(bad)
fbld
add
call
out
cmp
mov
sbb
inc
int3
js
call
js
js
shl
push
call
add
fist
loop
cmp
inc
lahf
icebp
push
jmp
je
jae
jne
push
(bad)
in
or
dec
push
cld
push
call
jg
lock
call
jne
jl
cmp
je
dec
and
jbe
scas
jbe
aam
in
and
mov
dec
fst
add
or
cmp
mov
std
jne
mov
in
adc
loope
mov
(bad)
jmp
icebp
mov
sub
aaa
cld
je
mov
push
sbb
jns
inc
fnstsw
lahf
retf
push
push
push
pop
add
jne
and
jl
jge
call
mov
fistp
add
call
adc
add
sbb
stos
js
sbb
adc
in
aad
or
jg
add
push
push
adc
lea
push
pop
iret
cli
fidivr
fnsave
jmp
(bad)
out
mov
call
cmp
bts
imul
add
xor
cdq
or
pusha
fsub
dec
xor
cwde
or
add
fwait
(bad)
pop
or
rol
cmp
setne
add
mov
pop
add
and
mov
push
std
xor
push
mov
mov
jne
jo
mov
call
xor
jg
mov
je
test
jge
add
jle
push
lea
mov
sbb
and
push
sbb
cmps
and
lea
call
pop
pop
outs
ja
push
add
and
pop
pop
cmp
call
jmp
push
daa
mov
loope
xor
loope
pop
call
jmp
mov
clc
loope
adc
jne
push
lea
and
jg
movs
add
jne
call
jle
stos
dec
js
add
icebp
sbb
mov
lea
call
add
js
lea
or
mov
(bad)
jmp
(bad)
jg
je
js
xor
cmp
je
cmp
je
push
(bad)
mov
jne
and
clc
jg
bound
dec
lds
call
aaa
lea
call
push
loop
jmp
pop
adc
ins
mov
(bad)
repz
xchg
mov
add
push
xor
push
call
xor
clc
call
pop
dec
mov
or
call
(bad)
jo
cmp
mov
retf
xor
push
mov
cwde
mov
lods
je
adc
pop
push
jne
add
dec
popa
push
inc
outs
(bad)
jmp
sbb
mov
cmp
je
ret
stos
in
rcr
and
test
push
je
cmp
and
cmp
push
call
aaa
call
cdq
and
mov
mov
pop
icebp
std
es
dec
push
data16
sbb
push
mov
fs
aam
inc
push
push
call
fild
mov
mov
or
shl
push
or
das
push
dec
pop
add
pop
or
push
ins
adc
adc
call
add
mov
imul
fmul
push
jge
add
xchg
(bad)
call
jne
xchg
push
jmp
(bad)
icebp
aas
cmc
js
dec
push
lea
lea
call
sub
or
js
add
sub
pop
fnstsw
mul
push
lea
icebp
mov
call
add
call
call
mov
inc
sub
jne
mov
cmp
arpl
sbb
sbb
pop
push
mov
xchg
sahf
stos
push
push
out
xchg
rcl
sbb
lock
xchg
sub
push
mov
(bad)
jmp
setne
test
cmp
jge
jbe
mov
ins
jbe
mov
push
pop
dec
clc
movs
data16
dec
jl
push
push
aas
pop
out
out
sbb
push
pop
push
jl
push
push
mov
dec
dec
call
jl
clc
add
test
cmps
cmp
inc
cmp
mov
add
test
(bad)
fcomip
mov
or
mov
je
pop
cmp
cmp
inc
scas
mov
(bad)
mov
and
je
mov
aad
iret
mov
into
or
mov
add
jne
inc
dec
cmp
jmp
inc
inc
mov
dec
je
ror
mov
mov
inc
cld
imul
inc
xor
pop
jl
sub
aas
je
gs
fdivr
jmp
pop
sub
sub
lea
mov
add
add
pop
into
push
pop
cmc
(bad)
(bad)
mov
mov
lea
push
in
pop
sbb
pop
(bad)
jmp
sub
call
xor
imul
out
dec
dec
call
push
push
aas
orps
imul
(bad)
out
mov
push
pop
push
push
push
mov
mov
call
(bad)
jg
inc
sub
add
adc
jne
mov
sub
je
neg
sti
or
into
jmp
adc
lock
pop
push
push
aaa
lock
xor
stos
or
sar
xor
mov
push
call
dec
jge
push
adc
and
or
call
ja
mov
mov
jmp
cmp
ror
(bad)
out
sti
mov
les
popf
pushf
sbb
cmp
jbe
enter
add
test
je
out
mov
mov
lea
hlt
mov
pop
in
mov
or
jg
inc
cld
call
loop
add
and
call
out
jbe
lahf
xor
call
pop
call
or
mov
add
add
(bad)
mov
es
std
out
inc
out
call
jge
mov
lea
shl
sbb
fsubr
call
cmp
xchg
fmul
sbb
sahf
push
xchg
cmp
push
fwait
out
mov
cmp
je
push
push
adc
iret
jl
inc
pop
les
mov
aaa
(bad)
(bad)
cmp
je
push
adc
int3
fxch
out
(bad)
fmul
jne
in
fdiv
push
call
jns
ins
push
(bad)
sbb
add
push
mov
ja
mov
push
xchg
or
cmp
lea
xlat
push
xchg
das
or
dec
jmp
pop
or
sbb
repnz
je
pop
jg
sbb
adc
mov
push
sbb
mul
mov
pop
and
pop
push
inc
dec
xor
out
pop
inc
hlt
call
addr16
sbb
add
test
rcr
sub
aas
popa
xor
sti
dec
imul
lahf
cmp
mov
fisub
movzx
aas
xor
sbb
(bad)
jmp
or
mov
add
cs
call
lahf
ss
call
adc
xchg
ins
push
cmp
ja
(bad)
jl
push
jmp
push
call
inc
ret
push
addr16
ror
push
pop
cmp
sbb
and
sbb
sub
sbb
jle
or
dec
call
mov
mov
mov
push
das
xor
xchg
push
and
jp
(bad)
aas
and
inc
mov
jge
fucomip
adc
push
push
sub
or
jne
or
add
cmp
and
loop
or
xchg
jae
pushf
dec
call
adc
push
inc
sub
fdivrp
jbe
inc
and
scas
inc
cmp
ret
jge
xchg
jmp
sbb
dec
cmp
or
xor
cdq
sbb
popf
jl
or
and
adc
jg
push
or
mov
mov
ja
dec
adc
inc
or
push
push
call
add
mov
pop
cdq
fisttp
call
out
mov
xlat
and
jmp
and
push
outs
gs
ds
ja
add
jl
call
dec
jne
push
inc
in
or
sbb
in
add
jmp
out
out
or
push
call
call
pop
push
cs
call
inc
shl
xor
lock
sub
cmp
xor
je
call
div
add
cmp
ret
pop
jmp
ds
call
push
in
and
imul
xor
pop
jnp
sub
push
in
sbb
or
jmp
push
call
and
or
loopne
xor
inc
ds
add
pop
or
fldz
fstp
aaa
call
les
mov
add
cmp
jg
inc
or
add
mov
(bad)
push
add
jge
sub
sub
jns
add
mov
push
cmp
jl
sbb
adc
push
ror
inc
ja
lock
jo
call
cmp
or
add
or
pusha
xor
sub
aam
scas
ja
adc
bound
cmp
mov
mov
push
call
test
inc
pushf
cdq
push
mov
fsubr
clc
fsub
mov
mov
inc
pushw
cdq
adc
cmp
jle
cmp
pop
xor
add
(bad)
daa
imul
push
push
cmp
adc
mov
adc
ins
es
sbb
inc
push
lea
push
and
mov
push
add
test
hlt
and
jge
pop
int
fmul
std
pop
xor
pop
cmp
jne
push
sub
sbb
mov
fld
into
fdivr
lods
add
and
(bad)
jmp
cli
outs
lods
add
pop
push
jne
ja
adc
call
mov
and
mov
sub
inc
nop
mov
dec
fsubr
cmps
dec
neg
call
inc
loope
cs
rcr
ror
jge
mov
jg
lock
mov
ja
jne
adc
xchg
sub
std
mov
mov
(bad)
dec
add
cld
je
dec
jne
sub
je
dec
jmp
mov
pop
std
cmp
dec
jne
cld
jmp
adc
rol
idiv
push
call
mov
cmc
popa
mov
and
dec
rcl
clc
push
call
mov
call
enter
jmp
push
fsubr
mov
inc
lock
jge
cli
fcom
jae
out
shl
dec
push
call
adc
out
repnz
fld
mov
push
pop
sti
sbb
mov
and
daa
mov
mov
call
call
xor
pop
push
call
mov
adc
je
push
push
push
call
stc
jle
les
push
sub
das
xor
out
jecxz
retf
mov
or
ins
cld
call
(bad)
bound
xchg
es
test
in
jg
ds
sub
inc
inc
mov
pop
push
xor
add
rcr
jecxz
mov
jge
push
fsub
pop
out
and
mov
call
aaa
adc
outs
mov
inc
aam
jge
cmp
lea
sahf
add
adc
inc
rcr
jge
call
repnz
in
cmp
sub
or
pop
les
dec
ss
jge
in
sub
inc
or
jne
call
ja
xor
mov
mov
mov
dec
mov
push
mov
call
fs
add
call
cmp
mov
call
pusha
mov
movs
jg
aam
stos
pop
call
jmp
sbb
adc
popa
dec
(bad)
(bad)
cmp
popa
jne
cmp
je
lea
push
cmp
je
push
mov
push
jmp
adc
mov
gs
mov
cs
test
jne
dec
mov
(bad)
jl
sbb
push
pop
inc
add
pop
add
and
sub
lock
inc
jmp
inc
cmp
jne
add
out
inc
push
add
mov
retf
enter
ss
sahf
cwde
es
jge
xchg
cmp
sti
or
xor
cld
xor
sbb
sbb
cld
call
outs
fdivrp
call
or
retf
fwait
inc
sbb
or
je
mov
jne
in
add
test
or
aad
mov
inc
inc
cmp
push
mov
clc
cmp
mov
xchg
clc
call
je
test
jne
cmp
mov
jg
xchg
jmp
mov
call
dec
add
(bad)
pop
mov
pop
jmp
mov
cmc
(bad)
fcomp
cmp
jbe
push
xor
mov
pop
div
(bad)
sub
aas
pushf
ret
lea
push
call
test
(bad)
sti
in
xor
mov
push
call
or
add
add
stc
inc
adc
and
std
out
inc
adc
add
shl
leave
xor
cmc
pusha
ret
rol
add
jne
sbb
cwde
jmp
dec
push
in
mov
popa
(bad)
sbb
sti
adc
(bad)
sbb
test
inc
fwait
jno
arpl
fisttp
call
jae
inc
push
mov
mov
mov
test
imul
mov
retf
cmp
jne
cmp
fist
jne
mov
dec
jl
fwait
into
push
sti
push
push
call
test
and
jo
shl
and
sbb
dec
cmp
adc
loope
clc
jo
mov
je
xor
sti
movs
call
mov
and
add
and
add
mov
jl
test
dec
mov
rcl
mov
push
add
call
les
inc
xchg
dec
clc
sbb
(bad)
je
or
test
cdq
or
rcl
sbb
xor
sub
jecxz
add
ret
cmps
shl
push
mov
movs
push
push
call
push
mov
div
into
jmp
adc
cmp
shl
mov
call
pop
aas
into
call
cmp
je
push
aam
add
call
or
push
push
mov
mov
cmp
cmp
ds
movzx
push
jmp
add
retf
ds
movs
pop
das
cmp
pop
pop
push
shl
cmp
jne
push
jmp
cmp
or
jmp
test
pop
cmp
jne
push
jmp
mov
cmp
js
or
sub
cmp
clc
cmovg
lea
mov
inc
ret
mov
push
cmp
pop
pop
pusha
imul
jle
push
jnp
call
call
add
cld
push
call
ds
pop
ret
push
push
mov
call
mov
mov
mov
mov
pusha
adc
pop
sbb
and
jmp
add
dec
push
sub
and
(bad)
push
call
mov
pop
ficomp
pop
mov
cmp
add
cmp
mov
or
xor
mov
jmp
(bad)
mov
cli
dec
data16
mov
mov
jo
cmps
adc
sti
dec
push
hlt
mov
mov
or
les
adc
or
inc
or
dec
adc
jbe
push
mov
add
sbb
cmps
std
pop
or
ret
mov
out
idiv
adc
adc
mov
lea
lea
movs
add
mov
popa
sub
cmp
push
inc
(bad)
push
xor
ret
xor
inc
ret
and
std
(bad)
out
ficom
or
jne
(bad)
or
inc
or
leave
cmp
setg
mov
add
outs
clc
int
or
mov
sar
mov
xchg
or
push
cmp
sbb
jle
iret
mov
xchg
push
je
xchg
std
adc
push
call
and
clc
outs
call
test
je
mov
call
aaa
push
xchg
lods
cmp
je
mov
mov
je
cmp
jne
mov
adc
mov
frstor
sub
pop
ins
call
push
lds
sar
push
cmp
adc
in
(bad)
jge
push
ins
fwait
mov
stc
(bad)
cmp
inc
(bad)
add
or
add
jmp
push
push
lea
(bad)
movs
or
mov
xor
test
jle
cmovo
js
aas
add
pop
inc
cmp
dec
enter
jp
mov
cmp
jnp
add
add
push
or
pop
(bad)
or
dec
mov
xor
sub
icebp
mov
cdq
push
fadd
push
and
add
call
xlat
outs
sub
adc
scas
(bad)
inc
xchg
inc
mov
(bad)
stos
test
xchg
in
inc
enter
adc
sbb
je
mov
cli
pop
fnstsw
add
stos
(bad)
inc
xchg
add
push
mov
stos
xor
xlat
call
mov
add
cmp
loopne
(bad)
dec
adc
sub
jle
jno
mov
mov
sar
iret
sub
add
push
call
push
cld
jae
lea
cmps
std
cmp
fwait
or
cmp
jne
hlt
mov
jne
sbb
mov
cmp
push
mov
jne
push
call
pop
ret
push
imul
dec
mov
push
push
call
mov
push
mov
and
stc
or
stc
or
dec
jne
inc
jmp
ret
in
or
inc
and
mov
adc
call
cmp
je
cmp
jne
(bad)
hlt
add
aas
or
data16
je
cmp
sti
fwait
mov
push
or
inc
inc
jmp
inc
pop
jmp
adc
inc
and
or
idiv
(bad)
mov
xor
jb
cmp
ja
movzx
sub
ret
cmp
xor
sbb
jp
inc
pop
ret
mov
enter
cmp
jge
xor
xor
cmp
jl
cmp
jg
retf
mov
jne
call
call
mov
mov
push
inc
test
je
movsx
push
call
(bad)
out
(bad)
out
out
je
cmp
jge
imul
xor
add
inc
inc
and
fucomi
push
cmp
std
fist
adc
mov
mov
mov
(bad)
push
loope
lods
scas
sbb
push
xor
lock
mov
jne
push
je
mov
jge
pop
jnp
aas
adc
jge
(bad)
(bad)
push
push
jge
push
ja
mov
data16
sbb
out
sbb
and
fdivr
add
fwait
(bad)
aaa
cmc
push
call
cld
fild
fsubr
fmul
or
add
inc
hlt
inc
or
loopne
les
ja
fistp
adc
fadd
mov
aaa
cmc
(bad)
(bad)
add
sbb
fdiv
add
dec
icebp
fstp
cs
or
clc
fld
fmulp
jne
jmp
js
leave
shl
pop
call
js
je
pop
mov
inc
inc
stos
out
add
inc
jmp
and
cld
sub
xor
rcr
push
fstp
push
push
pop
mov
xor
push
call
ss
cmp
std
sub
clc
mov
push
pop
jmp
or
jg
inc
inc
add
(bad)
jg
ret
cmp
jge
call
call
inc
push
and
in
leave
gs
(bad)
(bad)
mov
dec
or
push
call
sub
adc
adc
lea
xor
jmp
pop
add
cmp
je
adc
jne
clc
add
(bad)
(bad)
call
push
mov
cmp
jl
cmp
jle
cmp
jne
cmp
je
xor
mov
push
fild
fstp
push
call
neg
inc
in
sub
dec
cld
fild
mov
inc
in
je
fchs
xor
rcr
enter
stc
clc
aas
add
sub
push
mov
sub
(bad)
(bad)
mov
rcl
ret
test
push
mov
lea
jne
mov
cs
lea
jmp
test
je
neg
jmp
mov
fcomp
imul
sub
cmp
jge
add
jmp
add
mov
dec
xchg
loopne
lock
add
push
sub
sub
push
call
aad
cmp
push
js
xor
push
or
sar
mov
mov
(bad)
and
test
lea
rol
sbb
add
fs
fadd
and
lock
out
stc
call
lea
jl
lea
mov
dec
dec
pop
sub
(bad)
inc
mov
dec
dec
lea
sub
sar
shl
push
add
push
and
pop
leave
aaa
cld
ja
xor
cmp
mov
je
inc
mov
jmp
inc
add
cmovs
add
cwde
clc
push
cmp
ja
push
cmp
push
(bad)
inc
(bad)
jmp
dec
dec
jae
jle
mov
cs
and
out
loopne
pop
rol
std
mov
fsub
cmp
jg
(bad)
arpl
or
push
push
push
push
call
outs
ret
inc
inc
mov
push
push
sbb
repz
jne
push
sbb
je
mov
push
cmp
sbb
(bad)
jp
out
cmp
call
enter
mov
add
cmps
call
(bad)
push
lds
inc
cld
dec
in
enter
inc
mov
je
dec
je
dec
je
mov
mov
mov
into
enter
add
jg
fild
push
lock
je
idiv
lock
sbb
xor
cmp
mov
ja
add
inc
mov
mov
push
pop
leave
ret
cmp
jne
push
push
call
setne
xor
popa
mov
aas
in
push
inc
jo
(bad)
push
add
ror
dec
jl
pop
mov
(bad)
jp
add
sbb
push
push
jle
mov
jl
(bad)
push
push
shr
push
inc
call
pop
add
mov
pop
lock
jmp
jnp
aam
sub
lods
and
adc
pop
je
in
jp
es
je
inc
xor
jmp
pop
call
sbb
jge
add
and
mov
or
inc
push
jg
clc
push
push
call
test
mov
ficomp
dec
cld
je
push
call
pop
push
call
rol
jae
cmp
cmp
shl
jmp
fbstp
jb
int
dec
cmc
fadd
pop
inc
mov
pop
add
adc
call
(bad)
mov
ror
inc
push
call
dec
repz
pcmpgtw
or
xor
pop
adc
jmp
movsx
mov
mov
adc
scas
mov
sub
jmp
ret
jle
imul
out
fdiv
ds
dec
push
call
xor
jae
out
fbstp
jne
jmp
pop
je
and
cmp
jne
push
call
or
fcomp
jmp
dec
inc
test
jg
aam
pop
adc
sti
xchg
push
push
mov
sbb
call
hlt
lods
and
jbe
push
cmp
sbb
test
jl
mov
sub
cmp
call
cmp
jle
sub
mov
push
fnsave
xchg
push
mov
hlt
push
pop
dec
or
(bad)
push
push
call
add
jmp
(bad)
fcmovnb
pop
push
dec
call
push
(bad)
nop
call
idiv
xor
jmp
cmp
jle
mov
enter
stc
xor
mov
mov
idiv
add
push
jmp
test
(bad)
push
push
call
push
inc
pop
in
mov
and
mov
ja
sti
daa
push
push
or
mov
std
dec
in
jle
push
push
jmp
push
push
pop
je
and
or
mov
ret
mov
push
fild
adc
add
adc
les
sar
push
push
push
call
inc
aas
push
call
out
xchg
or
ins
adc
fmul
es
pop
je
push
sbb
xor
push
mov
enter
and
xor
jb
or
call
or
pop
inc
mov
push
push
call
lock
jae
mov
inc
idiv
mov
stc
jp
adc
stc
inc
or
adc
cmp
cld
(bad)
cmp
shl
sub
inc
mov
iret
loopne
or
inc
mov
call
(bad)
jg
inc
mov
add
fisttp
mov
mov
call
pusha
mov
mov
mov
adc
ja
(bad)
(bad)
cmp
pop
inc
mov
mov
mov
call
mov
push
mov
outs
sub
retf
jg
mov
arpl
mov
lock
call
test
sub
inc
pop
jmp
mov
mov
and
loop
cli
aaa
inc
push
push
mov
call
adc
add
in
(bad)
in
jle
add
aaa
push
mov
test
inc
inc
adc
sbb
fild
mov
and
sbb
mov
push
call
test
je
cmp
movs
loope
mov
cmp
jge
cmp
jl
jmp
inc
test
push
mov
psraw
adc
minps
jmp
mov
cmp
je
dec
(bad)
out
loop
je
inc
sbb
cmp
jne
cmp
jl
cmp
icebp
arpl
sar
jmp
push
jg
sub
enter
cmp
jnp
add
(bad)
mov
jne
adc
js
cmp
je
push
call
push
adc
jle
lods
nop
pop
cmp
pop
pop
jne
dec
sbb
add
cmp
or
xor
pusha
jp
in
jne
push
pop
rcr
jbe
sub
lea
(bad)
dec
ss
retf
sub
push
jmp
jne
mov
jmp
push
push
call
rcl
out
jmp
pop
add
or
fild
test
cmp
jne
cmp
sbb
or
ret
clc
push
cmp
jne
xor
pop
ret
cmp
cmp
adc
push
sub
pop
push
cmp
leave
jne
push
(bad)
fsub
loop
outs
sub
add
shl
leave
test
push
je
aaa
ins
test
loop
push
adc
sub
cmp
std
(bad)
inc
jg
cmp
jg
pop
jmp
cmp
jl
cmp
jg
ins
lea
mov
dec
dec
rcl
into
sub
or
push
adc
add
in
ret
push
sbb
hlt
mov
test
pop
imul
or
pop
jg
or
jl
cmp
jne
push
cmp
or
jl
push
(bad)
(bad)
mov
sbb
loope
or
lea
mov
inc
adc
or
fcomp
add
rol
les
aas
pusha
test
jle
and
jg
add
sar
or
mov
or
fild
push
push
bnd
dec
mov
hlt
push
push
call
std
jmp
rol
add
call
fild
pop
je
mov
inc
adc
jne
push
cld
xor
call
sub
ficomp
add
ja
pop
pop
push
daa
adc
cli
int
mov
int
(bad)
jle
inc
sbb
adc
or
xchg
mov
ror
dec
inc
inc
outs
mov
out
mov
test
xor
mov
inc
outs
div
call
xchg
or
pop
mov
pop
push
xor
mov
mov
xor
mov
cli
mov
cld
add
cmp
je
aas
adc
xchg
enter
ret
pop
pop
inc
mov
mov
jmp
add
dec
cmp
je
inc
mov
cmp
jne
cmp
jno
or
jg
into
sub
push
push
mov
std
imul
scas
ret
cdq
jne
add
loopne
call
pop
jne
hlt
call
(bad)
jg
inc
push
inc
push
push
call
pop
pop
call
cmp
jle
cmp
or
and
add
outs
clc
loopne
xor
cmp
jne
mov
call
adc
cmp
scas
xor
mov
jmp
test
in
adc
push
mov
push
lea
and
cmp
push
inc
xor
loop
add
mov
jmp
je
loopne
fld
rol
push
les
aaa
(bad)
pop
neg
fiadd
rol
jo
pop
ins
addr16
add
in
pop
mov
xor
jnp
ret
pop
outs
jp
int3
mov
xor
mov
jmp
push
mov
mov
vpaddd
and
sub
je
jle
(bad)
jmp
jne
cmp
mov
jne
lea
push
mov
cmp
jne
(bad)
(bad)
(bad)
cmp
inc
jmp
cmp
jl
cmp
jg
inc
mov
test
jne
cmp
pop
jne
out
out
clc
add
cmp
mov
(bad)
jmp
push
call
rcr
cwde
test
fild
test
and
sbb
inc
es
add
sub
cmp
xor
cmp
inc
inc
jb
outs
and
test
jne
xor
mov
xchg
pop
pushf
bound
lock
ret
mov
push
mov
jle
mov
jne
xor
scas
mov
je
mov
lahf
setnp
iret
sbb
mov
clc
and
xchg
sar
inc
dec
jne
jmp
inc
add
cmp
jne
push
call
shr
xor
inc
cmp
pop
jl
xchg
pop
inc
cmp
adc
adc
push
or
jecxz
or
loop
loopne
in
pop
adc
sti
es
sub
sti
cmp
sahf
sti
and
inc
std
push
call
jmp
inc
cmp
loopne
jg
add
ds
dec
cld
mov
jne
aaa
cwde
sti
adc
arpl
popf
and
adc
nop
or
cmp
pop
add
pop
add
movs
aam
cli
or
push
push
hlt
call
(bad)
mov
fbstp
push
call
fwait
xchg
push
call
jb
jmp
fistp
jae
sbb
ins
sub
clc
jne
scas
add
add
and
xchg
bound
add
mov
data16
sbb
add
rcr
mov
aaa
adc
sbb
push
sub
push
out
unpckhps
xor
cmp
call
lahf
rol
mov
push
add
add
mov
mov
jne
cmp
cmp
jle
pop
out
out
pop
fs
call
ror
into
pusha
xor
xor
add
sete
mov
jmp
dec
dec
cmp
je
fwait
and
jg
outs
adc
add
push
mov
mov
cmp
jl
mov
cmp
push
test
adc
mov
cmp
jg
push
test
das
loopne
push
rcl
inc
pop
jae
fadd
adc
jo
add
and
cmc
or
jl
or
ja
xchg
add
cmp
pop
mov
push
jmp
inc
loope
adc
push
call
(bad)
je
mov
xor
loopne
(bad)
ss
push
push
push
call
xchg
shl
mov
data16
add
sbb
push
inc
inc
or
and
icebp
and
add
cs
pxor
sbb
sbb
add
mov
add
sub
or
ror
loope
inc
dec
fiadd
jl
push
pop
or
dec
adc
(bad)
(bad)
dec
jle
push
pop
push
mov
lea
rep
lea
pop
mov
mov
rep
adc
push
mov
rep
add
dec
jne
xlat
jns
repz
sbb
xor
mov
add
xor
test
push
pop
or
mov
or
dec
mov
inc
mov
push
mov
mov
je
aad
mov
push
xor
push
or
mov
fisttp
clc
sub
call
xchg
cmp
jne
call
push
push
std
mov
(bad)
and
inc
clc
pop
pop
mov
jg
inc
mov
inc
lock
jle
(bad)
call
cmp
lea
jne
push
mov
push
call
pop
adc
pop
(bad)
mov
cmp
or
add
pop
fmul
push
(bad)
unpckhps
js
setne
mov
mov
cmp
je
jl
inc
stc
mov
cmp
jne
mov
inc
add
inc
jmp
pop
inc
jmp
mov
inc
inc
inc
fs
outs
jne
xor
mov
test
add
or
dec
div
adc
adc
jns
out
adc
mov
(bad)
add
or
sahf
or
or
pop
push
mov
std
jns
add
push
arpl
cmp
xor
and
sub
jo
aad
push
adc
or
pop
mov
jp
xchg
mov
add
add
push
jmp
jge
jae
push
push
xor
jle
fld
add
outs
adc
callw
push
push
or
(bad)
(bad)
(bad)
pop
or
ret
xor
mov
xor
jecxz
cmp
jne
mov
ror
inc
jmp
enter
inc
iret
jne
repz
adc
test
dec
ret
jmp
les
mov
push
push
sbb
mov
xor
inc
lods
add
lock
dec
xchg
push
(bad)
call
ret
sub
adc
test
cmps
cmp
dec
add
add
call
jmp
test
cs
call
push
pop
icebp
es
add
jne
sub
fisttp
lea
call
push
push
cs
cdq
loopne
loopne
fs
or
cld
xchg
mov
dec
daa
add
clc
pop
std
mov
add
retf
cmp
push
mov
call
in
jmp
mov
cmp
lea
add
push
cmc
inc
xor
or
or
and
nop
pop
cmps
mov
(bad)
dec
(bad)
mov
push
mov
push
call
add
lea
test
add
cmp
mov
fldenv
hlt
or
or
push
call
add
out
fwait
clc
std
ja
mov
not
push
or
cwde
pop
jge
(bad)
mov
pop
push
lea
push
jne
mov
mov
call
xlat
cmp
mov
call
cli
sbb
or
jne
arpl
push
call
push
push
call
or
sub
add
jne
call
std
out
add
push
sahf
clc
(bad)
jmp
sti
lahf
lds
je
mov
push
call
sbb
cmp
repnz
add
into
jmp
or
cmp
je
adc
aaa
add
mov
xor
dec
and
push
lods
add
lock
jb
mov
ins
mov
mov
push
call
cmp
jmp
push
push
call
inc
sbb
jne
jbe
cmp
jne
test
je
ja
fist
fimul
pop
dec
inc
pop
jne
sbb
push
cli
jge
add
jne
sbb
push
add
jne
mov
lea
jmp
inc
inc
push
inc
dec
inc
jo
or
sbb
push
ret
(bad)
or
cmps
out
dec
cld
xor
call
sti
pop
pop
jne
mov
call
mov
je
fdivp
inc
mov
pushf
cld
push
push
call
cld
jp
add
aaa
adc
call
in
jp
lock
call
push
call
mov
test
sbb
fidiv
(bad)
jmp
cmp
jl
sub
add
jg
shl
repz
push
call
(bad)
mov
cmp
mov
jge
mov
inc
cmp
jne
mov
jmp
jmp
inc
cmp
jl
stc
cmp
je
cmp
jne
or
sar
cld
adc
cmp
jbe
shr
call
repz
jne
mov
jmp
mov
add
(bad)
outs
aad
icebp
test
xor
call
cs
push
shr
pop
cli
inc
(bad)
out
or
and
add
stc
push
jl
ja
or
arpl
push
scas
push
scas
jmp
aas
push
popa
mov
ins
inc
(bad)
movs
push
and
test
push
jp
icebp
mov
push
arpl
sub
mov
in
pop
loopne
addr16
pop
push
and
jne
push
push
pop
jbe
call
lock
in
je
inc
add
jbe
jmp
outs
mov
les
iret
call
pop
add
add
cmp
add
push
ror
add
pop
mov
pop
sbb
push
add
mov
add
push
push
lea
inc
sar
fild
fwait
or
call
fild
es
call
daa
add
outs
add
inc
(bad)
mov
inc
xor
js
fdiv
clc
dec
sbb
jmp
cmps
mov
inc
push
add
inc
add
inc
adc
rcr
sbb
rcr
xchg
cmps
inc
sbb
add
test
push
cdq
ror
ja
push
mov
mov
xlat
mov
mov
jg
mov
ret
mov
sub
cs
jle
push
xor
inc
adc
pusha
ja
scas
sub
and
(bad)
or
(bad)
(bad)
jg
not
and
mov
js
or
or
call
fwait
add
out
pop
pop
ret
xchg
in
or
clc
call
add
mov
xor
inc
push
mov
std
cmps
rcl
inc
pop
ret
mov
inc
in
aaa
fwait
jmp
pop
cmp
jo
ss
mov
mov
ins
cdq
std
fldcw
mov
or
add
cmp
adc
cmp
adc
sbb
call
js
mov
call
arpl
or
punpckhdq
mov
test
std
fcomp
inc
jmp
mov
mov
call
xlat
lods
stos
jbe
add
mov
sub
call
ds
enter
add
dec
cmps
mov
push
test
sbb
cli
inc
mov
leave
(bad)
cmps
into
std
fist
mov
je
lea
push
push
call
idiv
push
or
and
and
rcl
ret
inc
ret
repz
jns
(bad)
call
cs
add
jmp
cmp
je
lea
mov
lds
lahf
xor
jmp
mov
mov
pop
repnz
cli
and
out
pop
lahf
sahf
icebp
cli
cli
and
push
shl
mov
call
or
(bad)
(bad)
cmp
jne
je
in
add
or
or
inc
inc
cs
adc
sub
pusha
dec
(bad)
push
push
fld
add
and
aad
call
fst
lea
ja
sti
leave
adc
repz
fnsave
push
hlt
pop
push
clc
pop
sbb
or
pop
xchg
mov
fld
fcomp
jne
fld
sub
fld
and
cmp
push
add
fcom
jge
mov
and
out
sub
add
dec
pop
xor
cmp
call
fcom
aas
jmp
pop
push
je
push
sub
call
cmp
fcos
aas
cmp
das
sub
test
push
mov
mov
xor
pushf
sub
inc
mov
or
add
cld
push
mov
hlt
push
mov
rol
sbb
(bad)
(bad)
enter
shl
aam
fmul
jb
and
call
ins
cwde
and
mov
push
clc
inc
adc
mov
call
test
je
in
test
or
pop
imul
fsubr
idiv
xchg
push
call
pop
pop
ja
sbb
outs
mov
aas
or
push
adc
sti
sti
push
cmp
je
push
push
sbb
out
(bad)
dec
cs
inc
cmp
jb
jmp
jge
push
call
push
call
js
mov
lods
add
mov
aas
mov
sub
inc
add
ret
je
push
pop
cvttps2pi
inc
jne
pop
pop
ret
xor
dec
mov
mov
mov
mov
push
cdq
pop
idiv
pop
test
jg
mov
adc
mov
push
call
je
and
xchg
inc
push
les
dec
pop
or
adc
int3
aad
push
jbe
mov
(bad)
call
clc
aaa
inc
leave
adc
mov
cmp
jg
aas
iret
call
mov
stos
pop
es
xchg
pmaxsw
jg
int3
xor
mov
cmp
push
pop
cld
out
add
add
add
pop
mov
movsx
(bad)
call
iret
popf
test
das
sub
movsx
sub
push
in
jg
mov
push
call
in
ja
mov
pop
movsx
enter
and
mov
call
sar
and
mov
test
jbe
movzx
add
out
aaa
adc
fsubr
mov
jb
hlt
out
push
shl
sbb
icebp
call
maxps
jne
or
into
or
aaa
cmc
dec
add
mov
add
add
lea
cmp
jo
call
mov
call
xchg
add
jne
cs
call
jne
add
push
ret
das
bound
lahf
mov
or
fstp
pop
adc
mov
mov
adc
mov
icebp
push
call
sbb
dec
stos
jg
(bad)
pop
cmp
push
push
es
lea
add
inc
and
lea
les
inc
(bad)
jmp
call
xor
outs
rcl
xor
push
inc
pop
outs
in
call
pop
inc
sub
idiv
add
in
jge
mov
mov
ret
adc
stos
add
jle
mov
or
push
sti
imul
and
inc
sbb
mov
iret
jle
cmp
cmp
mov
mov
loopne
push
hlt
push
je
xchg
mov
inc
fsub
hlt
call
test
bound
mov
(bad)
fild
push
call
jmp
mov
push
(bad)
push
push
call
and
inc
fucomp
or
jmp
addr16
cmp
je
cmp
add
test
adc
fdivr
mov
loopne
enter
je
inc
mov
mov
xchg
mov
push
jl
push
loop
call
sbb
or
call
std
or
sbb
inc
adc
push
iret
ja
(bad)
nop
mov
fs
(bad)
cmp
fisttp
add
into
(bad)
clc
scas
daa
aas
fwait
jl
popa
neg
out
mov
je
cmc
mov
call
push
test
(bad)
sbb
hlt
out
and
fsubr
pop
or
jmp
inc
sbb
sbb
inc
push
lea
icebp
shl
push
mov
push
es
test
push
add
out
ja
ss
mov
mov
aad
add
out
push
call
mov
into
call
push
call
dec
cmps
lahf
sub
dec
sahf
push
cmp
inc
xchg
dec
xor
mov
mov
sub
retf
icebp
cmp
aas
shl
or
dec
jecxz
adc
push
aam
dec
push
test
jne
mov
cmp
icebp
dec
movzx
push
push
xor
or
mov
lea
sub
mov
and
(bad)
(bad)
cmp
jne
mov
cmp
jne
or
sbb
pop
pop
pop
loope
shr
push
or
in
sbb
es
mov
outs
add
pop
into
cmp
inc
jmp
push
aaa
test
jg
sti
mov
je
push
push
(bad)
sbb
add
pop
(bad)
mov
add
xor
mov
shl
cld
add
and
retf
or
mov
xor
push
mov
mov
pushf
sub
mov
cs
mov
mov
adc
das
call
(bad)
ja
inc
add
std
push
cld
xor
mov
cmp
sbb
mov
imul
out
mov
jns
push
or
std
pusha
mov
or
call
and
dec
adc
push
call
add
es
in
push
push
out
std
test
sti
call
hlt
or
(bad)
cli
mov
mov
pop
aas
jp
mov
add
aam
add
test
jne
call
mov
pop
test
push
je
loopne
ret
mov
je
mov
mov
or
ja
cmp
jmp
nop
jg
push
mov
(bad)
(bad)
icebp
mov
mov
mov
shl
or
cmp
repz
mov
pop
call
add
xchg
mov
std
inc
push
mov
inc
ss
sbb
call
sbb
xor
out
call
or
les
or
pop
mov
lahf
outs
loop
bound
mov
sbb
leave
je
push
idiv
call
lock
sar
xor
movzx
xor
inc
inc
xor
sbb
(bad)
xchg
in
add
iret
sbb
cmps
jnp
mov
mov
mov
fild
mov
call
push
xor
push
push
lods
jmp
sbb
(bad)
jg
(bad)
pop
clc
mov
mov
jle
mov
mov
and
cmp
xchg
stos
jmp
jbe
xor
dec
xchg
ret
sbb
mov
and
or
cmp
pop
je
add
inc
or
(bad)
call
les
das
and
mov
xlat
sbb
cmp
cld
jl
xchg
push
ret
retf
je
lods
push
inc
pop
mov
adc
jg
sub
fistp
mov
mov
shl
ror
and
or
pop
sub
adc
push
lea
call
sub
or
ja
ja
lahf
push
push
call
or
(bad)
loopne
arpl
dec
add
dec
or
mov
mov
mov
jae
or
mov
sti
mov
cmp
dec
add
cwde
add
cmps
mov
ds
adc
pop
push
mov
xchg
dec
jg
sbb
icebp
inc
add
and
and
jmp
inc
and
aaa
lods
iret
call
adc
fcomp
push
push
nop
push
cmp
mov
fucomp
or
call
push
call
fs
mov
mov
push
mov
call
test
xor
ret
enter
inc
loop
mov
cli
inc
fisttp
add
or
add
into
je
iret
dec
mov
mov
jmp
aas
xor
add
call
or
mov
mov
lock
cmps
in
mov
ret
push
push
add
call
adc
fldenv
sub
add
or
out
or
std
add
cli
call
rol
(bad)
push
mov
xor
dec
adc
mov
mov
daa
cmp
adc
iret
jmp
icebp
loop
sbb
test
pop
cld
add
mov
imul
mov
mov
call
(bad)
ja
aad
mov
(bad)
lock
push
fisubr
fisttp
fcomip
test
cmp
mov
je
mov
and
sub
push
adc
outs
pop
test
cmp
std
fbstp
retf
je
mov
jmp
cmp
or
jmp
mov
dec
cmps
add
loopne
test
js
cmp
jle
add
mov
dec
cmp
getsec
cmp
mov
sbb
sti
mov
fild
mov
mov
rcr
iret
call
inc
or
sbb
push
push
push
adc
xor
out
fistp
retf
mov
push
jo
mov
je
jl
ror
test
sbb
mov
mov
cmp
je
imul
mov
clc
sbb
sbb
lea
imul
fwait
(bad)
arpl
adc
sbb
sar
jge
pop
(bad)
jo
les
call
mov
mov
mov
push
jmp
mov
(bad)
mov
jmp
cmp
mov
mov
add
test
leave
out
mov
inc
ins
jmp
add
movs
sub
or
arpl
mov
movs
test
shl
fistp
cmps
mov
mov
je
mov
push
add
add
inc
adc
jne
and
cs
or
fadd
stos
push
ja
lahf
add
fst
pushf
adc
ret
js
jmp
imul
js
adc
aaa
adc
call
mov
push
dec
idiv
xchg
jg
inc
jg
mov
push
inc
mov
or
ret
lds
dec
das
mov
push
mov
dec
mov
dec
push
add
xchg
mov
mov
mov
mov
mov
mov
shr
sete
push
pop
and
jbe
inc
jge
add
jne
and
cmp
sbb
(bad)
mov
mov
jmp
call
pop
ret
std
dec
mov
cmp
je
mov
push
test
jne
aas
sub
jno
inc
pusha
lahf
aas
mov
je
push
adc
mov
mov
and
jl
test
je
mov
repnz
pusha
fild
and
push
sbb
adc
cli
ja
(bad)
cld
call
pop
jmp
jmp
popf
in
(bad)
(bad)
(bad)
mov
and
adc
sub
in
js
out
sbb
pop
or
push
cdq
in
cs
jg
loopne
add
dec
lock
fild
add
fmul
fistp
(bad)
jmp
mov
neg
push
push
mov
call
jge
jge
shr
push
sbb
add
sbb
dec
push
push
mov
sti
out
(bad)
neg
and
pop
fld
call
repnz
sub
dec
cld
(bad)
inc
jge
cmp
jle
cmp
jge
mov
data16
sti
jge
mov
sbb
in
inc
cmp
jge
cmp
(bad)
dec
jmp
xlat
mov
mov
shr
mov
mov
mov
and
rep
add
push
sar
maxps
iret
(bad)
inc
mov
inc
dec
jne
xchg
jmp
stos
cmp
sbb
stos
sbb
fimul
add
inc
xor
push
xor
ins
mov
jg
inc
and
ja
(bad)
cmp
ja
push
test
jle
push
mov
call
pop
cmp
dec
or
clc
jg
inc
cmp
jge
sub
fld
out
adc
add
and
(bad)
adc
daa
lea
jmp
mov
call
mov
retf
rol
adc
add
dec
lea
sar
shl
add
xor
cs
addr16
jb
and
es
cmp
jae
cmp
mov
add
idiv
fnstenv
mov
inc
inc
jmp
cmp
mov
jbe
dec
cmp
std
(bad)
cmp
ja
cmp
jne
sub
lea
sbb
mov
inc
jmp
inc
add
inc
push
push
call
mov
mov
jmp
mov
inc
inc
mov
or
lea
mov
dec
pop
jne
jg
add
cmp
je
lea
cli
xbegin
mov
jne
lea
cli
call
call
inc
push
mov
es
dec
into
(bad)
cmp
pop
pop
je
cmp
je
cmp
sub
dec
aas
or
sub
pop
dec
adc
in
mov
xor
call
push
cmp
xor
retf
les
setb
jmp
sub
mov
xor
movs
(bad)
fst
adc
add
ret
add
cs
nop
add
jl
cmp
push
in
and
movs
push
jge
call
inc
in
cld
push
add
cs
lahf
in
or
call
adc
push
xchg
lahf
mov
cmp
sbb
(bad)
jge
cmp
(bad)
inc
neg
cmp
jge
mov
sub
mov
jmp
xor
inc
jmp
and
retf
(bad)
out
call
xor
cmp
setge
jmp
adc
add
sbb
jge
data16
dec
or
mov
fldcw
sub
je
mov
dec
je
dec
getsec
jl
rol
and
add
jg
test
add
or
add
fbstp
rol
in
sbb
jg
inc
jmp
or
pop
add
lea
call
movsx
pop
jbe
jmp
add
(bad)
dec
hlt
jne
jmp
sub
push
dec
(bad)
(bad)
(bad)
mov
sbb
mov
mov
shr
mov
rep
adc
rep
lea
nop
(bad)
push
cmp
jle
mov
push
fcmovne
inc
out
scas
push
jmp
pop
enter
jle
fistp
xor
add
dec
test
jle
outs
mov
xor
jo
daa
jmp
ja
add
inc
call
add
shl
ja
inc
inc
sbb
mov
or
and
add
clc
out
test
jge
push
mov
inc
clc
mov
and
push
adc
nop
fnstsw
add
adc
out
retf
push
(bad)
adc
lea
jmp
xchg
dec
jb
inc
cmp
mov
jne
mov
pop
rol
loope
add
inc
(bad)
pushw
retf
mov
or
(bad)
mov
add
fnstenv
add
mov
scas
jmp
jmp
inc
or
inc
jmp
inc
jmp
out
or
(bad)
cmp
inc
hlt
or
(bad)
sti
lea
mov
pop
add
gs
shr
into
je
jg
or
call
xchg
and
call
add
add
cmp
out
fcomp
and
pop
je
pop
cmp
icebp
call
cmp
je
lea
out
mov
mov
call
fldcw
jmp
adc
or
arpl
lock
push
adc
pop
imul
or
xor
(bad)
out
adc
jl
cmp
cmp
std
(bad)
out
and
adc
inc
cmp
dec
and
jne
push
call
mov
dec
xchg
push
push
mov
dec
mov
test
je
pusha
xchg
jp
call
mov
jnp
cmps
test
mov
cmp
jne
mov
add
icebp
push
adc
lea
pop
xor
add
fdivr
pop
add
outs
std
call
push
or
add
les
and
xlat
cwde
push
cli
or
jg
inc
jl
mov
pop
test
jne
mov
sub
mov
mov
add
jmp
add
mov
lea
mov
call
mov
mov
call
push
(bad)
fwait
jle
repnz
cmp
jne
inc
mov
dec
les
je
lea
mov
(bad)
aas
daa
push
sbb
cli
push
mov
(bad)
dec
push
pop
push
push
call
sub
adc
call
xchg
lea
jnp
adc
ficom
ss
popa
fist
aaa
mov
ret
or
test
je
loop
aas
in
(bad)
jmp
loop
sbb
push
jmp
dec
sbb
pushf
dec
cli
jmp
mov
xor
push
and
pop
pop
stos
repz
cmp
outs
add
push
call
cmp
icebp
aaa
sar
xor
into
call
stos
cmp
and
jne
je
and
inc
and
sbb
lds
call
out
xor
push
(bad)
jecxz
inc
adc
adc
mov
jl
sbb
je
jns
mov
aaa
jbe
aam
pop
dec
inc
les
sbb
cld
ja
inc
jmp
xchg
lea
mov
rep
push
nop
jne
aam
std
cmp
inc
sti
lea
rep
mov
sub
push
push
mov
lea
push
push
call
or
jmp
push
push
mov
mov
jle
mov
push
call
pusha
outs
or
mov
add
jae
mov
dec
push
or
mov
out
cmps
pop
mov
call
push
mov
les
pop
xchg
popf
mov
movs
jb
cli
push
mov
stc
mov
ja
movs
in
movs
mov
and
das
movs
(bad)
lods
mov
and
enter
lods
mov
xor
push
arpl
mov
mov
stc
clc
icebp
adc
add
sti
or
(bad)
or
jo
test
aam
(bad)
mov
cmp
push
jl
cmp
sti
add
test
or
je
cmp
je
cmp
jne
mov
pop
and
push
call
jmp
cld
push
xchg
movsx
mov
sti
jg
push
fmul
fmul
jmp
push
jle
movs
xor
aas
dec
cmp
jne
ins
call
mov
loopne
cmp
das
sbb
fwait
daa
clc
mov
inc
cmp
outs
aaa
sti
jg
call
fld
or
std
mov
cld
mov
mov
cmp
jl
mov
imul
add
xchg
jmp
jo
jns
fldl2t
push
add
in
mov
mov
xor
inc
xor
push
fstsw
jg
dec
jl
inc
xor
cs
xor
inc
jo
rcl
mov
mov
mov
mov
mov
or
mov
or
jne
fs
(bad)
(bad)
inc
or
add
adc
(bad)
push
add
push
call
ja
out
mov
push
addr16
adc
test
inc
add
inc
or
jmp
mov
call
inc
in
stos
inc
movs
adc
mov
mov
mov
sub
je
pop
sub
shl
adc
mov
jns
mov
dec
add
mov
push
jbe
cld
(bad)
(bad)
fild
jmp
or
clc
jmp
je
call
dec
in
xchg
push
ss
inc
in
mov
fimul
sbb
call
ret
push
jne
adc
lds
or
jnp
test
mov
push
call
pop
inc
cld
(bad)
fidiv
or
jmp
fld
inc
stos
inc
pop
fstp
call
fcom
cmps
or
xchg
and
(bad)
jmp
fcom
punpcklwd
loope
pop
cmp
sub
jae
out
cmp
je
std
dec
ss
mov
std
push
rol
shr
and
or
fstp
repz
fcmove
je
push
mov
je
mov
dec
sbb
call
xchg
push
sbb
cwde
sahf
cmp
jne
out
or
xor
mov
call
(bad)
(bad)
mov
inc
sbb
pop
or
add
je
(bad)
dec
ins
or
jmp
daa
push
push
call
mov
sub
je
sbb
out
dec
je
and
ss
jmp
imul
call
sti
dec
add
pop
push
push
mov
call
in
inc
das
je
mov
push
call
(bad)
mov
or
gs
call
loop
push
push
call
cmp
js
or
ss
(bad)
xchg
cli
call
inc
adc
out
call
pop
lea
pand
pop
or
add
call
out
call
adc
call
pop
mov
aas
inc
dec
jl
in
call
add
clc
frstor
pop
adc
loopne
jmp
dec
push
jbe
mov
push
shr
out
add
icebp
push
movd
jns
adc
add
push
xor
xor
mov
ds
sti
div
call
call
mov
js
or
inc
add
addr16
pop
cmp
xor
cmp
je
loope
jmp
push
mov
mov
push
push
fwait
xchg
cmp
or
inc
cmp
mov
jne
pop
cmp
clc
data16
push
loopne
inc
sub
or
mov
outs
add
call
add
sbb
cld
jne
adc
mov
push
push
jle
and
pop
cmp
dec
arpl
pop
sbb
les
inc
inc
jne
or
mov
inc
ret
sbb
pop
in
push
clc
mov
retf
ret
je
js
jbe
(bad)
and
sub
inc
push
sbb
js
inc
cs
cs
test
call
test
call
clc
xor
scas
jmp
dec
cmp
(bad)
pop
je
or
add
push
pop
sbb
cmp
je
and
add
jmp
scas
sbb
cmp
mov
adc
aaa
add
sub
repnz
jl
adc
lea
cld
push
call
out
call
dec
inc
cld
cmp
lea
jne
and
ret
and
jne
inc
xchg
or
mov
(bad)
or
pop
scas
fneni(8087
(bad)
je
mov
call
call
jmp
pop
inc
dec
sbb
adc
sar
cmp
jl
ja
loopne
mov
mov
push
call
mov
sub
sahf
mov
adc
sti
jl
mov
mov
add
mov
jmp
jnp
sbb
int
sbb
xor
add
mov
add
(bad)
jmp
or
out
js
in
into
call
pop
sub
fst
xor
pop
jecxz
sub
loope
xchg
(bad)
ja
popf
ss
sbb
mov
jg
call
xor
cmp
pop
pop
mov
adc
adc
adc
bound
inc
lock
test
push
call
jne
push
cli
and
push
test
dec
loopne
cmp
jne
cmp
jne
pusha
jmp
push
push
cmps
(bad)
pusha
pop
jne
push
call
rcr
aas
or
test
je
cmp
jne
ds
push
call
rcl
arpl
and
ja
mov
lea
into
mov
fcomp
call
push
pop
out
cmp
(bad)
rol
dec
in
cli
call
(bad)
push
adc
(bad)
aaa
std
ja
pop
push
mov
call
fsubr
gs
popf
call
or
or
inc
inc
lods
mov
mov
call
cld
int3
aad
jb
les
int3
call
fist
pop
pop
je
push
mov
xchg
(bad)
neg
lock
cmp
pop
test
pop
setne
rol
push
call
ret
push
xor
sbb
mov
push
sub
inc
fdiv
fist
fnstenv
adc
push
cmp
xchg
out
mov
pop
imul
jg
cli
(bad)
jmp
bnd
sbb
out
call
mov
xchg
mov
ret
aaa
ret
(bad)
mov
jge
call
inc
push
mov
jne
push
call
cli
aaa
sub
mov
add
cmp
jne
aam
jmp
ds
xchg
xchg
cmp
je
sub
dec
push
out
mov
in
add
push
pop
iret
sbb
pop
call
in
sbb
fidivr
pop
pop
mov
call
jp
jg
call
(bad)
pop
cmc
fadd
pop
call
fwait
mov
sub
jo
cmp
push
or
lock
add
(bad)
dec
pop
mov
sbb
call
sbb
cld
jo
cmps
mov
push
in
(bad)
dec
add
ret
(bad)
inc
mov
cmp
les
add
push
add
add
jne
mov
lock
add
xor
mov
cmp
je
mov
out
inc
mov
test
jne
lea
xor
(bad)
mov
(bad)
jns
jmp
test
je
mov
mov
mov
sbb
mov
cmp
add
mov
scas
or
or
iret
or
call
inc
or
xor
mov
arpl
in
jne
adc
inc
std
dec
mov
stos
or
adc
stc
outs
xor
jmp
dec
xchg
mov
je
test
jne
lock
cld
cld
call
fild
lds
sbb
test
je
faddp
push
adc
lea
pop
jo
fwait
mov
jne
push
call
inc
lds
movs
mov
add
pop
cld
add
jne
mov
add
push
jbe
or
xor
std
mul
cmp
lds
mov
mov
shl
jmp
lock
(bad)
dec
push
or
lock
call
jl
mov
mov
in
std
call
stc
lea
(bad)
add
call
pop
push
inc
stos
pop
(bad)
and
inc
les
loop
xchg
pop
pop
das
jo
shl
dec
scas
mov
push
adc
cld
popf
ja
lds
or
push
pop
cmc
dec
cld
push
mov
call
xchg
rol
add
cmp
je
push
push
mov
inc
popa
inc
xchg
adc
sub
jg
jmp
jecxz
jne
cmp
jne
dec
aam
mov
pop
and
lock
dec
call
je
cmp
je
push
ss
jmp
fdiv
adc
adc
push
call
and
pop
and
fldpi
and
sbb
dec
enter
jmp
inc
cmp
comiss
mov
or
shr
or
sub
(bad)
(bad)
repz
push
call
bound
je
cmp
icebp
push
sbb
rcl
(bad)
cld
call
cmp
inc
add
js
xor
call
jmp
or
and
pushf
sub
lahf
jo
call
and
std
sar
mov
call
xor
call
call
fadd
pop
pop
inc
push
je
call
jae
mov
int
imul
out
popa
pop
pop
pop
cmc
xchg
sub
(bad)
mov
mov
test
je
jmp
inc
cmp
je
or
dec
adc
jmp
push
mov
add
or
call
adc
inc
mov
js
jne
mov
jnp
push
push
sub
inc
les
call
inc
inc
test
mov
clc
jg
sbb
mov
ret
sbb
cmp
cmp
inc
(bad)
mov
or
sar
push
mov
jl
test
cmp
je
pusha
test
mov
mov
(bad)
pop
(bad)
jg
mov
jmp
push
scas
jl
fdiv
call
jbe
lea
push
call
cmps
(bad)
out
jge
add
cmp
adc
cmp
mov
jne
dec
je
sub
scas
retf
(bad)
movs
add
mov
jmp
mov
test
popf
mov
push
mov
call
je
xor
(bad)
ffreep
inc
sbb
scas
or
je
cmp
jne
mov
push
fist
dec
xor
and
mov
ror
outs
std
jmp
add
mov
in
das
stos
pop
push
call
sub
fnsave
jno
add
add
jbe
icebp
in
jns
in
push
out
cli
ja
mov
inc
inc
jne
mov
lock
add
js
leave
je
call
stos
sti
mov
inc
sub
outs
mov
mov
sbb
inc
mov
push
xor
inc
cmp
je
test
jne
scas
push
or
call
test
mov
je
call
cs
in
mov
jne
push
push
push
push
push
cmp
or
or
or
push
add
inc
(bad)
fmul
mov
add
dec
cmp
je
and
pop
popa
out
mov
adc
out
mov
lock
mov
dec
mov
push
call
out
mov
je
mov
call
(bad)
ret
push
je
dec
pop
pop
cmp
fdiv
inc
jecxz
push
inc
rcr
repz
add
jmp
add
sbb
push
sbb
test
push
mov
je
or
mov
test
sub
sub
push
fcomip
or
int3
mov
add
test
or
add
call
jae
sub
add
mov
cmp
jne
push
and
sub
(bad)
jl
jb
jl
fcom
mov
seto
adc
sub
lock
add
cmps
or
or
fchs
or
stc
xor
call
into
out
cmp
je
mov
les
add
push
call
jg
pop
jne
mov
(bad)
sbb
or
push
imul
inc
lods
mov
aaa
or
aas
mov
mov
mov
(bad)
(bad)
call
je
mov
cmp
je
xor
mov
mov
cmp
je
mov
inc
addr16
aaa
sbb
mov
sub
es
inc
mov
dec
js
lea
lea
call
ins
or
sbb
test
int3
or
mov
std
dec
add
movs
ret
mov
call
loope
sub
inc
pop
call
jl
inc
dec
xor
cmp
mov
ins
add
xchg
rol
xor
js
pop
pusha
inc
jmp
inc
mov
cmp
jge
jge
cmp
jne
lea
call
das
je
cmp
mov
push
cmp
je
cmp
jne
cmp
jne
adc
sti
jne
mov
mov
inc
and
sti
out
mov
cmp
(bad)
adc
je
push
lea
jae
jecxz
es
js
scas
mov
ret
jl
repnz
pusha
mov
int3
pop
jne
mov
push
rcr
arpl
sahf
add
rcr
mov
or
or
mov
jmp
cmp
pop
dec
je
cmp
pusha
xchg
sbb
push
call
fs
or
call
imul
jne
mov
enter
mov
cmp
arpl
mov
mov
shl
inc
mov
loope
mov
inc
add
dec
ins
aaa
add
cmovs
test
push
or
inc
aas
je
imul
psubsb
pop
pop
jle
dec
dec
cmp
setge
(bad)
fcmovnbe
push
dec
and
add
lea
mov
dec
adc
jg
cmp
mov
idiv
mov
xor
std
fwait
into
push
pop
es
inc
dec
jne
jmp
push
shr
mov
test
xchg
jns
pop
inc
cmp
jl
xor
mov
jns
aaa
adc
add
sub
push
lock
adc
mov
aad
jne
push
mov
and
lea
push
or
pop
add
sbb
add
cmps
call
sbb
cmp
fisttp
or
xchg
test
dec
sub
js
adc
sbb
aad
into
cmp
or
adc
add
scas
(bad)
(bad)
jmp
pop
les
jne
mov
out
loopne
call
mov
call
mov
inc
cmp
jmp
cmp
jp
add
pop
rol
call
cmp
cmp
outs
cmp
mov
(bad)
add
ret
jmp
inc
inc
(bad)
or
daa
jae
ss
ss
sbb
mov
mov
les
jg
mov
xor
mov
arpl
dec
ds
add
xchg
ror
cmp
or
jle
loop
test
mov
jo
out
mov
je
cmp
jle
mov
jne
mov
neg
cmps
inc
shr
and
cmp
xchg
adc
cmp
mov
inc
sub
jne
pop
enter
in
push
sbb
hlt
enter
pop
or
adc
mov
pop
sub
mov
pop
fnstcw
shr
es
stc
push
leave
mov
test
mov
jae
mov
xchg
and
xchg
mov
dec
and
pop
jg
pop
lds
das
pop
(bad)
and
cmp
xor
sbb
mov
fbld
call
movzx
pop
mov
test
lea
mov
mov
inc
and
mov
fwait
sub
bound
movs
mov
aaa
push
inc
jne
mov
pop
out
mov
(bad)
(bad)
fistp
dec
adc
lea
mov
cmp
je
mov
inc
inc
inc
cmp
adc
add
js
outs
or
out
or
pop
dec
jb
inc
icebp
push
rcl
and
cmp
jle
mov
mov
lds
add
sub
adc
mov
and
ss
push
lods
push
inc
jmp
dec
ins
call
adc
jne
adc
mov
pushf
add
je
stos
dec
mov
sbb
fmul
mov
mov
jmp
cmp
mov
cmp
ret
pop
jne
lea
and
daa
cmp
add
loope
pop
jae
mov
pop
ret
push
push
sbb
aaa
pop
push
lea
call
leave
cmp
or
call
shl
(bad)
pop
mov
outs
and
and
jne
ins
add
sub
out
cld
jne
fadd
mov
mov
test
cmp
inc
jne
mov
rcl
jae
loope
pop
mov
mov
call
dec
je
lock
test
test
inc
fistp
iret
in
mov
lea
add
(bad)
push
call
mov
xor
cmp
fwait
jns
test
or
jge
add
hlt
pop
les
test
sbb
or
call
je
mov
adc
ror
sti
jg
aam
rdmsr
jnp
setne
call
add
pop
sub
push
das
mov
mov
mov
outs
or
sbb
gs
push
push
mov
xchg
push
add
mov
in
xchg
cld
add
test
(bad)
out
div
shr
adc
add
je
dec
jne
or
xor
pop
jmp
aaa
inc
loope
or
fmul
call
sub
je
dec
je
dec
dec
jne
xor
inc
jmp
xor
jmp
push
sub
cli
pop
jmp
mov
cmp
dec
dec
jl
adc
lea
add
lea
mov
jmp
(bad)
out
mov
fimul
inc
fistp
inc
loopne
loope
loop
cmps
jmp
scas
jecxz
in
pop
out
out
mov
mov
paddsb
inc
in
pop
mov
adc
mov
cmp
je
cmp
je
je
pop
cmp
jne
scas
dec
xor
into
call
push
push
ja
(bad)
(bad)
jmp
xor
inc
jmp
call
push
jne
aas
ja
adc
call
push
push
push
call
scas
call
xchg
das
push
cmp
pop
pop
sbb
or
jb
add
btr
cmp
dec
cld
push
call
ret
jmp
xor
jmp
jno
aaa
call
jne
push
push
push
push
add
cmps
push
rcl
shl
push
push
or
adc
xchg
add
mov
call
mov
mov
test
ins
cmp
(bad)
jno
adc
xchg
and
push
or
je
jae
clc
(bad)
fucomip
mov
push
push
mov
call
xor
mov
sbb
inc
and
sub
mov
std
mov
mov
cmp
(bad)
cmp
inc
inc
mov
mov
add
in
add
addr16
aaa
out
xor
pop
mov
push
jns
call
pop
push
std
sbb
inc
mov
xchg
cmp
je
call
out
sbb
cld
test
fadd
mov
add
or
mov
movs
call
and
mov
sbb
out
iret
and
call
xlat
dec
leave
idiv
cmp
jle
sbb
mov
fs
or
inc
sub
out
pusha
inc
hlt
push
mov
jbe
push
push
adc
call
add
inc
cld
mov
pop
and
scas
mov
adc
mov
outs
(bad)
(bad)
(bad)
jg
mov
dec
or
sar
sbb
cmp
jne
and
inc
cmp
jl
inc
out
ja
(bad)
cmp
jl
pop
pop
clc
mov
pop
adc
jg
sar
push
mov
test
mov
jmp
cmp
imul
jnp
scas
(bad)
dec
mov
pop
or
and
dec
mov
mov
adc
sub
sbb
or
inc
add
cld
jmp
repz
dec
push
push
call
pop
add
mov
lock
pop
leave
jg
push
mov
cdq
sbb
push
sbb
mov
inc
mov
add
pop
jle
idiv
(bad)
(bad)
aas
lea
mov
cmp
jbe
and
push
call
test
pop
jne
mov
adc
inc
call
cld
jl
mov
inc
int3
std
cmps
in
cld
jle
mov
hlt
fadd
jnp
push
call
daa
add
fisttp
push
push
mul
ss
test
mov
je
into
xchg
loopne
xchg
dec
call
mov
adc
push
mov
mov
stc
mov
icebp
(bad)
jg
inc
mov
lea
shl
cmp
jbe
shl
cmp
sub
jmp
hlt
call
add
fwait
inc
and
mov
(bad)
mov
push
pop
and
and
sub
cmp
ja
icebp
dec
je
or
jmp
mov
cmp
mov
cld
push
push
and
push
call
addr16
icebp
(bad)
inc
repz
inc
mov
test
jne
jmp
cmp
jne
retf
push
push
mov
xchg
sbb
js
cmp
in
dec
rcl
or
mov
enter
lds
mov
mov
loopne
adc
or
pop
pusha
test
jne
cmp
jo
add
(bad)
mov
inc
cmps
or
arpl
adc
das
stos
cmc
mov
adc
fisttp
sbb
add
jne
pop
push
mov
sub
(bad)
call
jle
push
call
cmp
mov
jge
cs
pop
inc
mov
sub
mov
add
cmp
push
push
pop
pop
je
push
cdq
jmp
mov
test
cld
jmp
or
popa
jo
push
fst
xor
xchg
jecxz
scas
clc
sub
dec
add
inc
clc
(bad)
and
mov
je
push
add
jnp
scas
fidivr
sbb
aaa
call
dec
adc
pop
std
pop
scas
pop
fcomp
mov
lods
aas
add
xor
push
add
and
sbb
std
call
xor
cmp
mov
push
mov
jg
imul
int
mov
push
add
ror
adc
pushf
leave
mov
push
lea
je
push
or
std
call
lahf
mov
out
and
std
(bad)
std
mov
clc
(bad)
adc
fstp
gs
rol
push
es
call
aad
xchg
lds
cmp
jge
sbb
push
pusha
jp
icebp
cmp
sbb
hlt
ins
mov
jne
mov
cmp
jne
mov
jge
das
jne
sbb
call
jmp
call
push
mov
jmp
mov
cmps
mov
hlt
mov
clc
mov
add
or
je
ja
jmp
aam
(bad)
jle
loopne
test
cmp
je
mov
popa
sub
add
bound
je
test
jne
mov
dec
inc
call
je
mov
test
jne
test
je
mov
cmp
add
mov
adc
mov
cs
push
ret
cwde
std
mov
mov
jge
add
mov
cs
push
lea
call
mov
adc
lea
ja
(bad)
lock
call
adc
mov
call
pop
mov
stos
retf
sub
cmp
pop
sti
sbb
push
call
jo
cmps
call
mov
jne
fs
fcomp
sbb
push
call
call
inc
(bad)
jne
shr
jge
sub
js
jmp
das
pop
jne
cmp
xchg
adc
mov
jbe
inc
jnp
mov
call
or
pop
setne
stos
dec
mov
daa
mov
aam
dec
xchg
es
cmp
je
push
cli
(bad)
call
call
xor
cmp
mov
setge
pop
or
push
cmp
and
sbb
jmp
jne
dec
mov
sbb
clc
cmp
push
xor
cmp
mov
les
dec
mov
cmp
je
mov
fsub
or
add
call
jg
mov
push
in
push
call
adc
jle
pusha
push
fs
lock
cmp
sbb
mov
pop
mov
out
aaa
adc
call
lock
adc
(bad)
ja
push
add
sub
mov
push
hlt
push
mov
jmp
jo
push
jmp
mov
pop
mov
pusha
jmp
fnstsw
in
mov
jle
sub
adc
test
(bad)
mov
jne
mov
push
push
call
jmp
popa
sub
out
sub
and
inc
push
push
jae
mov
enter
cmp
mov
mov
jge
mov
fstp
or
inc
cld
jmp
cmp
add
cmp
fld
jmp
fld1
(bad)
fld
std
jmp
fldz
jmp
jmp
mov
js
bound
push
outs
sbb
aas
or
add
cmp
mov
inc
add
inc
sub
mov
add
adc
xchg
les
fild
pop
cmps
adc
pop
sub
aaa
movzx
cmp
sbb
add
mov
add
or
xchg
shl
push
push
dec
ins
cwde
int
in
in
inc
jmp
or
or
cmp
dec
inc
push
or
push
pop
scas
imul
or
add
addr16
dec
rol
add
or
add
push
push
push
xor
push
push
push
cwde
or
(bad)
adc
xor
inc
xor
push
inc
std
call
or
call
lea
call
sar
inc
sbb
mov
and
push
xor
(bad)
mov
pop
or
(bad)
call
cmp
je
jmp
test
call
push
sar
in
rcr
pop
cmp
mov
or
(bad)
mov
push
sti
adc
xor
add
and
cdq
pop
and
pop
push
cmp
fiadd
fucomip
or
inc
pop
je
push
mov
sti
je
add
ss
clc
call
shl
add
aam
or
jmp
push
mov
xor
or
add
call
or
cmps
jb
retf
(bad)
jp
add
sub
mov
jmp
mov
mov
add
(bad)
out
mov
fdivr
(bad)
call
mov
jge
fisttp
loope
popf
call
add
add
pop
clc
pop
xchg
add
cmp
xor
inc
mov
push
push
mov
inc
add
sahf
jno
imul
jmp
adc
inc
and
push
call
fistp
std
add
lea
push
lea
xor
(bad)
(bad)
dec
int3
mov
call
add
test
mov
mov
je
ja
icebp
adc
or
sar
jne
mov
test
mov
mov
hlt
je
fild
hlt
push
aaa
mov
(bad)
sbb
aas
pusha
je
leave
mov
loop
push
ja
push
ret
call
loopne
mov
sub
rcr
imul
sbb
test
loopne
pop
pop
mov
push
jb
jne
adc
or
call
push
dec
inc
inc
inc
call
aaa
lock
inc
mov
call
cli
add
(bad)
call
cmp
je
push
mov
push
push
call
mov
jmp
mov
jge
add
add
push
inc
lock
jmp
loop
sub
add
bound
pop
jne
pop
cs
aaa
cmc
dec
stos
pop
dec
push
call
lock
jo
pop
xorps
mov
fadd
hlt
fsubr
xor
inc
stos
mov
popf
pop
je
jo
push
ja
sbb
inc
inc
jmp
or
ins
test
jne
iret
aas
gs
out
inc
inc
lock
add
ja
dec
pop
lds
ins
(bad)
add
mov
jne
mov
jmp
add
adc
in
jbe
test
mov
jne
mov
cld
add
mul
jmp
xchg
cmp
psubusw
adc
inc
xor
mov
fwait
or
pop
lock
ror
test
cmp
inc
(bad)
fmul
icebp
out
dec
call
dec
je
call
mov
pop
enter
push
push
call
or
mov
push
adc
mov
enter
sbb
pop
and
mov
fwait
and
mov
jmp
mov
mov
test
clc
std
out
jbe
call
jmp
cmp
jne
mov
adc
clc
push
call
and
inc
ret
iret
call
call
lock
add
je
and
and
pop
and
push
mov
je
add
mov
cli
(bad)
(bad)
cmp
jne
hlt
(bad)
(bad)
(bad)
(bad)
cmp
je
dec
jmp
mov
mov
inc
mov
call
xchg
inc
inc
cmp
ret
jne
pop
mov
xor
inc
jo
pop
pop
add
call
mov
fcom
loopne
es
jbe
sar
mov
jne
push
mov
push
inc
jg
xlat
mov
psubw
push
inc
icebp
cmps
mov
and
jmp
mov
mov
pusha
fcom
call
push
add
cld
add
add
call
add
cs
mov
cmp
add
cmp
adc
ins
mov
arpl
sbb
fist
sar
lea
cmp
rol
mov
mov
imul
xchg
push
cld
push
and
lea
xchg
aaa
push
call
scas
add
mov
icebp
push
lds
mov
pop
jmp
(bad)
out
cmp
add
add
fld
pusha
les
push
sbb
inc
jmp
fisttp
lea
call
clc
(bad)
push
add
lea
test
jl
mov
cmp
je
dec
jns
jmp
jae
adc
xor
inc
or
call
(bad)
cmp
pop
xchg
add
or
icebp
xor
cmp
ror
test
mov
stos
ja
jl
or
jl
pusha
cmp
scas
dec
es
inc
push
push
call
cmp
pop
je
push
jae
sti
ret
call
and
cmp
imul
pop
cmc
pop
cmp
lds
(bad)
(bad)
mov
call
or
xchg
push
xchg
jne
mov
adc
loop
push
jno
test
add
mov
js
je
cmp
jo
clc
add
mov
retf
call
clc
sbb
adc
mov
adc
sub
inc
cmps
sbb
cmp
call
loop
aas
add
cmp
jo
jne
xor
or
add
mov
sub
out
adc
rol
add
mov
jecxz
push
push
push
or
cmp
cmp
je
push
xor
cwde
inc
jno
inc
fwait
jne
sub
test
lods
ret
or
adc
adc
ja
or
cld
sbb
dec
das
xor
pavgw
and
call
mov
jl
ret
push
and
mov
push
and
push
movs
cld
xor
fstp
and
cmp
xor
(bad)
(bad)
call
dec
sbb
mov
clc
mov
mov
xor
and
cmp
pop
inc
pmullw
or
and
xor
adc
ret
int
inc
push
cmp
lock
push
call
mov
push
sti
fwait
or
mov
add
push
test
leave
leave
cmp
add
push
push
push
cmp
(bad)
in
push
push
push
xchg
lahf
or
adc
push
std
xchg
call
push
jb
or
push
push
push
leave
dec
(bad)
push
push
test
adc
pushf
push
in
arpl
(bad)
pop
adc
mov
push
xlat
and
adc
ret
(bad)
jmp
inc
(bad)
mov
pop
dec
xchg
lock
and
call
scas
pop
push
or
inc
adc
mov
loopne
icebp
jg
cld
mov
pop
lds
push
rcl
(bad)
fstp
mov
sub
mov
push
call
out
sbb
fstp
popf
je
push
push
shl
and
sbb
clc
loope
fild
and
or
add
mov
mov
sbb
or
ds
pop
(bad)
cld
or
mov
cld
push
jns
xor
cmp
jle
mov
sbb
push
call
out
icebp
inc
cmp
jl
pop
enter
jg
call
push
mov
push
inc
call
push
cmc
imul
adc
mov
jbe
add
in
sub
pop
mov
call
jne
daa
dec
or
(bad)
je
push
(bad)
jmp
xchg
mov
adc
sbb
repnz
shl
loop
cld
adc
mov
sbb
xchg
sar
and
mov
pop
mov
call
push
nop
and
es
scas
push
sti
lea
call
mov
adc
add
shr
mov
imul
fild
clc
add
inc
sub
mov
or
scas
cmp
xor
aad
outs
jmp
je
cmp
je
cmp
jne
push
pop
mov
cmp
rol
jge
sar
jle
cmp
je
stc
neg
aaa
enter
mov
push
jmp
mov
mov
adc
(bad)
cld
xor
cmp
je
sbb
rcr
cmp
je
mov
mov
sbb
mov
mov
jnp
or
inc
cmp
test
je
jbe
or
mov
lock
stos
loopne
cmp
jne
mov
pop
and
adc
lds
rep
repnz
out
es
aam
sub
push
mov
push
push
xor
cmp
icebp
adc
mov
int3
inc
push
(bad)
push
cwde
fwait
nop
(bad)
outs
cli
jmp
add
and
jbe
cmp
jne
call
jmp
sti
jne
sbb
outs
loopne
mov
cmp
je
jmp
pushf
push
mov
cmp
inc
mov
ss
inc
inc
jo
inc
lahf
push
cld
sbb
jbe
adc
add
call
popa
dec
cmp
adc
retf
mov
mov
stc
fs
push
sub
sub
in
cdq
dec
sbb
fiadd
pop
lea
mov
cmp
pusha
scas
or
sbb
push
inc
xchg
mov
mov
mov
je
xor
push
push
lea
push
call
ret
clc
iret
call
push
cmp
dec
cld
mov
mov
cmp
mov
ja
mov
call
div
dec
or
mov
call
pop
add
je
sub
ret
mov
dec
cld
xor
sbb
je
xchg
jb
ret
pop
(bad)
jge
mov
dec
push
xor
or
jmp
cmp
call
enter
lock
jge
inc
sbb
call
in
out
mov
push
lea
push
call
into
adc
jb
hlt
and
pop
jb
mov
sub
or
adc
sahf
mov
sub
or
inc
cmp
jb
adc
jne
mov
dec
scas
sub
mov
or
lock
stos
and
std
outs
js
adc
add
or
std
or
js
jecxz
cmp
mov
je
loopne
inc
aaa
outs
adc
push
mov
dec
inc
in
and
and
test
loop
push
iret
call
jmp
call
push
fld
mov
call
mov
cli
add
adc
cmc
sahf
jae
cmc
push
add
and
std
inc
add
inc
fcom
arpl
mov
jg
bound
or
leave
inc
mov
or
je
into
mov
mov
js
ins
jnp
add
fistp
mov
call
push
add
in
jne
loop
inc
sub
or
pop
adc
sti
add
mov
call
xchg
push
adc
std
ins
pop
ror
xor
cmp
add
rcl
add
mov
ret
fwait
idiv
cmp
jne
cmp
jne
cmp
push
push
adc
leave
inc
out
add
cmp
mov
pop
outs
mov
or
ret
rol
lock
inc
je
xchg
call
mov
mov
sub
daa
sbb
outs
adc
and
gs
mov
jle
ret
jmp
adc
jge
(bad)
push
push
mov
call
mov
sti
call
(bad)
push
push
call
fild
das
mov
mov
mov
call
add
je
xchg
stos
out
dec
or
ror
lods
mov
sbb
mov
mov
push
sbb
jne
lea
push
call
inc
and
test
xor
sbb
lahf
push
retf
mov
outs
jle
adc
pop
or
mov
call
sub
retf
pop
aad
add
mov
mov
icebp
mov
data16
mov
mov
mov
add
adc
push
test
mov
mov
dec
and
repnz
and
call
cmc
mov
movzx
xor
mov
sbb
push
sub
add
or
sub
mov
inc
inc
mov
inc
push
ret
sbb
pop
mov
aad
mov
and
push
test
inc
xor
mov
aaa
sbb
push
(bad)
(bad)
out
mov
cmp
je
push
jmp
push
call
scas
pop
mov
push
in
stos
stos
cmp
or
mov
sub
push
push
push
call
jo
sar
inc
push
ror
jp
std
inc
cmp
adc
ret
(bad)
cli
dec
ret
pop
hlt
mov
call
cld
add
jne
mov
sbb
retf
mov
mov
mov
(bad)
mov
mov
mov
push
mov
call
mov
or
pushf
leave
ltr
fbld
pop
push
mov
retf
adc
call
inc
fild
cmp
mov
rcr
cmp
loopne
outs
inc
cmp
imul
ins
je
mov
je
test
rol
add
lods
loop
pusha
mov
or
inc
dec
mov
push
add
in
enter
out
aaa
cmp
adc
or
cli
call
mov
jo
mov
push
call
jmp
add
dec
add
jne
cwde
test
jl
loopne
mov
push
lea
iret
call
mov
pop
sbb
jae
jnp
mov
or
jmp
inc
cld
rcpps
dec
ja
cmp
adc
rcr
call
or
xor
out
out
adc
mov
or
pop
ror
or
cmp
or
or
adc
aam
add
rol
xor
or
push
call
or
sbb
test
movs
push
call
mov
(bad)
test
push
push
je
or
aaa
sti
jmp
adc
call
push
adc
sub
mov
rol
inc
icebp
dec
fist
loope
add
mov
jg
or
(bad)
call
dec
push
mov
out
clc
lods
icebp
cmp
push
lea
arpl
lods
adc
xor
stos
or
clc
call
inc
out
fdivr
push
ins
jne
(bad)
cmp
adc
adc
push
bound
imul
imul
int3
lea
inc
sub
div
lea
xchg
nop
fistp
es
pop
imul
lock
or
sbb
add
dec
add
call
mov
adc
jne
inc
or
push
cmc
enter
sbb
add
push
ret
fidiv
mov
inc
or
mov
mov
sbb
jb
dec
ins
imul
mov
pop
inc
idiv
push
and
(bad)
inc
push
mov
push
mov
push
and
lea
mov
cmc
jne
mov
mov
call
pop
(bad)
loopne
mov
mov
(bad)
inc
aam
jg
sbb
inc
and
add
cmp
jl
cmp
pop
dec
mov
jmp
out
shl
stc
push
push
call
jl
or
or
sub
test
add
push
push
push
lock
daa
inc
or
inc
or
loope
or
enter
push
or
bnd
cmp
mov
mov
mov
add
inc
jg
inc
cld
call
mov
clc
ja
push
push
call
or
outs
loopne
daa
push
call
add
push
xchg
mov
cmp
cmps
inc
je
cli
sti
setle
mov
xchg
push
call
ja
out
rdtsc
into
push
adc
cld
inc
or
js
fldpi
or
or
adc
and
outs
test
push
or
and
add
js
push
sub
cld
mov
push
mov
and
pop
add
mov
adc
out
call
mov
call
cmps
or
adc
sub
cmp
inc
add
jo
call
push
call
int3
push
rcr
mov
dec
push
mov
ret
call
jg
lea
call
jne
xor
push
push
mov
adc
inc
add
sub
daa
xor
inc
hlt
jmp
jge
pop
pop
pop
push
call
mov
mov
ret
ins
pop
js
or
push
call
and
lea
sub
jbe
jne
adc
je
in
mov
call
add
(bad)
fld
adc
pushf
push
mov
xchg
pop
lea
mov
lea
call
push
jg
push
fucomp
mov
test
inc
cmp
jge
call
sub
dec
sbb
lea
cmp
shr
push
call
push
add
call
sbb
mov
cmp
pop
and
push
push
pop
loop
call
into
call
jmp
sub
xor
and
add
ins
cmp
fs
(bad)
jmp
push
push
call
pop
jne
adc
call
call
cdq
jne
cmp
je
lea
and
inc
pusha
xor
push
push
dec
mov
shl
jecxz
add
sub
ret
fistp
add
add
jne
call
sbb
dec
inc
rcpps
sbb
mov
std
(bad)
jl
arpl
inc
jmp
cmp
setne
sbb
and
jo
fwait
lods
add
pusha
movd
aas
push
cmp
je
push
mov
ins
push
push
call
jmp
dec
sbb
shr
xchg
out
test
(bad)
mov
jmp
mov
push
call
fbstp
mov
mov
aas
adc
loop
inc
pop
add
add
(bad)
sub
mov
adc
fistp
(bad)
ficom
pop
jne
pop
mov
or
push
call
push
call
ja
push
call
sbb
jo
sub
test
je
jb
mov
call
loope
shl
adc
sbb
add
fstp
adc
call
add
mov
cld
retf
xor
call
xor
push
and
pop
add
inc
xchg
imul
out
mov
add
inc
dec
add
call
add
add
inc
pop
(bad)
add
push
dec
lock
imul
test
jle
add
mov
mov
aas
add
cmp
mov
mov
add
or
push
je
cli
fwait
clc
and
je
push
push
push
push
call
mov
cli
push
call
mov
sbb
xchg
lds
inc
add
mov
clc
jl
cdq
push
pop
div
and
dec
or
sbb
jg
mov
cmp
jl
mov
retf
pop
aam
cmp
xchg
xchg
or
cmp
je
cmp
jle
lea
mov
inc
add
cmp
jl
sahf
push
cld
mov
inc
fadd
fld
js
icebp
call
xlat
sbb
mov
imul
dec
pop
jne
fldz
fstp
xor
punpckhdq
sbb
mov
pop
push
xchg
xor
pusha
sbb
scas
les
(bad)
or
outs
pop
xlat
and
xor
jno
add
add
push
fild
leave
push
jl
idiv
enter
add
push
cdq
in
fdivr
retf
jge
fadd
add
lea
lahf
std
dec
cmp
and
str
sub
shl
push
lea
aaa
jae
add
sub
push
loop
mov
push
call
mov
mov
mov
icebp
mov
icebp
dec
mov
test
je
cmp
jmp
push
iret
and
sqrtps
ret
sbb
mov
stc
loopne
mov
les
pushf
sbb
(bad)
arpl
js
add
jmp
inc
cld
dec
push
call
fmul
inc
(bad)
clc
jbe
jo
ror
aad
ret
push
in
push
cmp
imul
jbe
add
adc
mov
mov
inc
jle
mov
jge
lea
add
or
inc
push
call
push
ss
dec
adc
mov
and
jmp
push
bound
pop
xor
call
mov
cmp
mov
cmp
adc
adc
or
inc
fsub
sub
push
lea
fwait
stos
je
call
loope
in
mov
scas
ret
mov
mov
dec
fadd
icebp
popf
cld
mov
adc
lea
push
lea
push
jle
and
stos
jbe
pop
jmp
adc
sbb
push
(bad)
(bad)
pop
mov
jb
pop
or
test
jne
lea
push
sahf
mov
pusha
and
out
(bad)
adc
push
call
xchg
jg
int3
in
or
mov
sbb
inc
push
add
sbb
inc
mov
inc
outs
pop
inc
cld
clc
pop
adc
push
jmp
mov
inc
call
mov
inc
add
inc
les
push
jo
inc
inc
mov
call
aaa
retf
sub
or
scas
mov
sub
mov
mov
pop
jnp
jg
out
dec
mov
or
mov
mov
jl
mov
arpl
jle
mov
pop
dec
test
adc
mov
aam
cli
popa
jmp
mov
sub
mov
mov
sub
mov
and
xchg
mov
sub
mov
mov
retf
mov
aad
mov
call
scas
sbb
cs
add
into
mov
add
(bad)
jmp
mov
jae
mov
in
jmp
push
push
call
loop
inc
pop
mov
test
jne
push
jae
push
adc
add
inc
push
mov
push
call
rcr
je
push
call
push
push
mov
call
call
xor
jmp
xor
mov
out
push
call
or
je
cmp
enter
popf
inc
call
rol
add
jnp
iret
mov
dec
ins
jne
call
outs
test
and
push
mov
jne
cmp
and
loopne
push
mov
scas
push
call
sub
xor
push
loopne
mov
mov
(bad)
jg
out
sti
jle
mov
xor
dec
mov
mov
call
push
push
xor
cmp
mov
mov
je
mov
cmp
call
xchg
or
pusha
or
pop
cmp
xor
inc
push
sar
or
into
push
mov
je
lea
jmp
push
call
add
std
dec
loope
cmp
jne
lea
movs
movs
movs
xor
cmp
movs
mov
jle
popa
ds
cmp
cmp
mov
je
rol
repnz
fadd
jne
(bad)
inc
xlat
add
push
xchg
shl
sbb
push
imul
push
mov
cmp
mov
(bad)
mov
mov
push
(bad)
jmp
lea
sar
dec
fdivr
cmp
mov
enter
mov
cmp
jg
cmp
mov
adc
mov
ja
inc
mov
jl
aam
push
sar
mov
mov
pop
cld
(bad)
fbstp
mov
mov
mov
cmp
je
ror
push
jg
hlt
push
(bad)
push
lea
js
(bad)
cmp
(bad)
out
inc
jne
mov
mov
lea
lock
mov
mov
inc
add
add
or
jge
add
mov
inc
lock
cmp
lock
out
or
je
es
and
jmp
sub
jmp
push
mov
(bad)
in
test
cld
je
push
xchg
push
jle
xchg
add
clc
sub
out
or
mov
push
in
cmp
cmp
push
test
xchg
dec
pinsrw
rcr
scas
xor
out
(bad)
mov
lea
lea
mov
jmp
inc
pop
inc
lahf
xchg
inc
pop
mov
cmp
push
call
mov
mov
pop
ds
icebp
call
jmp
das
mov
adc
mov
sub
fsub
inc
or
xor
std
or
mov
(bad)
jno
call
mov
mov
inc
fbld
pop
inc
add
push
rcr
outs
adc
push
xchg
ds
je
jge
push
pop
mov
lahf
xchg
and
js
add
add
mov
cmp
fwait
cli
add
inc
fstp
push
mov
mov
in
sbb
mov
ss
sahf
sbb
inc
or
test
cli
jmp
xchg
imul
add
push
mov
call
mov
ret
cld
dec
add
adc
or
jb
push
add
or
push
push
arpl
push
icebp
(bad)
jmp
sbb
adc
lea
clc
out
or
xor
jne
call
jne
push
or
clc
mov
pusha
in
pop
mov
dec
sbb
bound
inc
xchg
cmp
je
add
inc
dec
jb
dec
call
out
sbb
pop
add
add
push
push
push
bound
test
out
and
cld
je
or
cmps
or
jl
add
mov
out
cmp
sbb
shl
(bad)
call
test
je
push
arpl
adc
das
xor
push
pop
jb
inc
lds
call
fisubr
test
mov
pop
add
push
pop
test
mov
(bad)
int3
rol
jae
call
jne
dec
clc
ds
call
out
jmp
cwde
adc
cmp
not
cmp
cld
jnp
cmp
cmp
ja
div
call
or
je
push
call
ret
jl
je
mov
movs
cmp
cmp
jne
push
call
mov
inc
test
call
call
inc
push
lock
add
or
je
sbb
clc
add
push
jmp
rol
lea
call
sbb
rol
call
pop
adc
xchg
fbld
jmp
inc
add
inc
adc
inc
enter
push
jp
icebp
call
inc
std
into
mov
stos
(bad)
repnz
loop
xor
sub
scas
push
push
push
xor
ret
bound
push
mov
pop
dec
(bad)
inc
inc
and
(bad)
jmp
push
hlt
movs
into
lock
call
add
outs
or
inc
xchg
mov
hlt
inc
in
shr
je
mov
push
push
test
scas
sar
push
push
push
test
cwde
popa
or
mov
jmp
xor
or
jbe
or
out
stos
or
add
xor
mov
call
fbstp
pop
mov
cli
xchg
lds
mov
dec
pusha
das
inc
push
ja
push
in
dec
leave
xchg
sub
sbb
xchg
fwait
inc
mov
jg
stc
lea
fs
mov
jg
jne
push
sub
call
cld
(bad)
(bad)
mov
sbb
and
inc
dec
cmp
je
mov
cmp
jne
cmp
mov
add
test
and
jl
dec
pusha
add
push
push
arpl
xchg
(bad)
out
loopne
stc
cmp
je
xor
dec
jo
dec
jo
pop
xadd
into
sbb
dec
push
call
jmp
(bad)
cmp
pop
je
push
push
push
bound
mov
inc
fidivr
mov
inc
mov
xor
lahf
jae
mov
xchg
dec
sbb
dec
sub
adc
in
rep
mov
hlt
call
mov
xor
inc
push
add
adc
je
cmp
je
mov
and
dec
rep
xor
scas
aas
inc
push
mov
in
sbb
mov
mov
test
and
jmp
add
pop
and
mov
mov
out
(bad)
mov
call
or
ins
jmp
mov
inc
or
call
jmp
mov
and
mov
cmp
iret
ficom
pop
into
je
or
adc
cmp
cmp
or
mov
add
sub
mov
pop
sub
fimul
cmp
dec
mov
mov
mov
jne
mov
push
sar
aaa
xchg
mov
push
mov
mov
push
call
lea
add
push
push
and
sub
jo
lea
push
call
ja
shl
test
push
push
call
lock
mov
call
ins
call
arpl
in
jne
mov
push
arpl
je
in
push
mov
adc
xchg
sub
push
sub
xor
rol
mov
call
clc
add
xchg
(bad)
outs
or
stc
call
lea
pop
(bad)
mov
call
adc
push
aam
adc
outs
fcom
sbb
aaa
bound
fist
lea
dec
and
call
cmp
je
iret
call
or
addr16
leave
int
mul
inc
pop
je
call
inc
daa
dec
xchg
cmp
je
push
cmp
inc
mov
or
push
cmp
je
or
lock
ja
ror
daa
add
add
gs
lea
aad
or
pop
fs
xor
mov
inc
adc
or
xchg
popa
mov
(bad)
mov
jo
sub
imul
inc
sbb
not
sub
(bad)
je
push
and
xor
cmp
fwait
stos
rol
mov
mov
push
adc
fdivr
ja
mov
lea
mov
les
inc
cmp
jmp
cmp
je
add
fmulp
fmul
inc
enter
and
mov
push
push
call
loop
sbb
add
inc
call
dec
call
xchg
and
and
jne
test
leave
adc
or
jl
movmskps
pop
xchg
pop
(bad)
je
rcl
retf
lahf
xor
je
inc
pop
call
inc
cmp
and
lea
std
inc
add
imul
add
scas
and
push
push
push
push
mov
lea
call
pop
cld
add
push
call
mov
mov
pop
xor
pop
les
and
and
push
(bad)
mov
and
cmp
push
fwait
retf
sbb
and
push
jl
lea
push
mov
add
or
push
mov
loop
mov
add
sahf
adc
je
xor
push
xchg
cli
jmp
dec
push
xor
cmp
push
je
mov
cmp
pusha
dec
cmp
cmp
dec
clc
(bad)
je
call
push
inc
call
cwde
xchg
loope
out
out
out
cld
fucomip
icebp
jo
pop
cmp
inc
or
call
inc
in
jo
add
dec
imul
addr16
cmp
outs
adc
push
dec
int3
nop
cmpxchg
and
pop
and
or
jnp
jae
xchg
shl
mov
test
add
stos
jmp
int
fistp
ud0
sbb
adc
outs
cmp
call
jl
push
nop
scas
sbb
call
sbb
sti
stc
xlat
inc
add
dec
and
mov
ja
cdq
clc
call
mov
jno
and
xor
clc
fisttp
lea
add
cld
in
(bad)
dec
out
sti
dec
cmp
mov
sub
loop
lds
push
addr16
jbe
lea
enter
or
xlat
mov
mov
push
ror
sbb
call
add
in
(bad)
or
add
pop
add
sbb
mov
push
out
out
add
add
xchg
jb
out
mov
lea
push
xlat
jge
mov
rcl
add
call
js
add
lds
call
add
call
je
add
inc
std
stos
(bad)
call
push
pop
mov
xchg
mov
ret
mov
sbb
sub
mov
mov
fisttp
mov
sub
mov
mov
out
mov
mov
fadd
mov
ss
icebp
mov
clc
aam
push
and
mov
bound
push
lods
mov
add
cmps
mov
mov
dec
mov
and
sub
add
mov
sub
aaa
ja
adc
xchg
add
mov
pop
sti
out
mov
test
push
push
lea
in
add
call
fnsave
jmp
mov
dec
aad
sahf
add
ret
pop
leave
std
icebp
adc
mov
dec
adc
sar
mov
push
or
es
mov
icebp
sbb
jmp
xor
je
mov
ret
push
mov
mov
sub
arpl
xor
loop
paddw
mov
call
push
push
in
cmps
pop
inc
sbb
sar
xchg
pusha
jg
mov
mov
sbb
xor
and
push
bound
mov
mov
cmp
shr
mov
xchg
sahf
or
sahf
adc
sahf
lods
or
sahf
pop
adc
xchg
fist
movs
mov
fstp
sahf
push
aaa
mov
(bad)
cld
inc
pushf
or
ror
mov
jbe
(bad)
je
add
jne
or
xor
fcom
mov
sahf
and
or
pop
les
mov
sahf
js
inc
adc
mov
mov
sub
ja
stc
push
mov
enter
lea
aas
jo
adc
mov
push
sahf
sbb
xchg
adc
lahf
xor
cld
or
psubq
mov
test
fcomp
xchg
clc
fcomip
fild
std
(bad)
fstp
call
add
jge
icebp
inc
out
mov
add
push
mov
cmp
retf
pop
enter
sbb
and
xchg
mov
add
rcr
sbb
sbb
mov
cmp
mov
frstor
aaa
inc
les
mov
jae
or
and
pmulhw
ror
call
mov
call
(bad)
push
call
or
fs
ret
jge
xchg
leave
mov
mov
pop
add
push
nop
and
in
or
add
push
sbb
adc
(bad)
mov
movs
sahf
lock
mov
popf
push
hlt
ja
add
call
lea
repnz
call
push
sub
shr
push
push
call
mov
push
mov
rol
dec
mov
sub
sbb
mov
add
dec
daa
bound
sub
mov
mov
repnz
and
mov
sbb
pop
add
ja
mov
or
mov
stc
cmp
mov
push
xchg
enter
jae
fiadd
or
hlt
call
jl
push
xor
cmp
ret
mov
hlt
pop
clc
add
pop
cmp
add
cmps
(bad)
adc
out
out
or
sahf
xor
jecxz
jge
jg
mov
mov
call
push
pop
iret
sub
scas
movs
add
arpl
mov
mov
outs
mov
xor
loop
jo
(bad)
cwde
adc
clc
add
js
aam
call
mov
retf
pushf
mov
nop
mov
xchg
add
push
mov
mov
test
pop
fwait
push
call
xchg
inc
mov
add
push
pop
stos
mov
scas
push
jmp
add
(bad)
rol
fisttp
jbe
or
pop
mov
or
add
push
lea
popfw
add
push
mov
imul
(bad)
call
lods
and
jb
pop
mov
sbb
inc
ins
pop
bound
test
lods
mov
call
push
add
push
js
and
arpl
dec
xor
aaa
mov
call
jg
jo
inc
or
add
dec
or
nop
dec
and
or
aaa
mov
into
loope
sar
call
adc
mov
mov
jmp
push
jmp
imul
add
dec
retf
(bad)
ficomp
call
jae
ret
std
in
push
xor
call
push
bound
mov
call
push
fisttp
sub
bound
aas
call
inc
mov
clc
push
pop
adc
sbb
push
push
or
jle
push
jmp
mov
movs
pop
(bad)
xor
mov
lds
mov
and
(bad)
jle
in
lods
pop
lods
push
pop
add
das
xchg
pop
mov
rcr
jge
test
lea
das
mov
and
gs
loop
pop
pop
sti
inc
mov
jmp
aas
adc
sbb
xor
xchg
xchg
pop
sbb
fsubr
das
xor
add
sti
push
pop
in
call
jo
or
clc
aad
dec
push
cmp
mov
push
nop
addr16
push
add
push
(bad)
ds
enter
and
sbb
syscall
sti
pop
jne
mov
(bad)
(bad)
pushf
fadd
pushf
push
and
adc
inc
scas
push
enter
pushf
push
(bad)
into
call
js
shr
inc
push
into
call
add
add
in
icebp
inc
mov
inc
pusha
pop
int
adc
inc
add
int3
push
mov
sti
mov
hlt
scas
mov
push
mov
pop
pop
mov
ret
xor
mov
adc
arpl
sti
push
nop
out
ins
xor
sbb
sbb
push
dec
das
fcom
xchg
addr16
addr16
cmp
inc
sahf
inc
and
jns
jns
push
mov
xor
popf
lock
out
pop
pop
test
iret
enter
pop
mov
into
and
mov
push
adc
dec
lods
pop
rcr
adc
sahf
push
cmps
or
ins
jl
mov
pop
jo
clc
inc
dec
jns
sahf
rcl
pop
lock
js
call
sbb
add
cmp
in
in
fsubr
scas
fld
xchg
and
and
ror
mov
and
mov
cmp
nop
adc
xor
or
cdq
xchg
or
sbb
imul
jmp
sbb
call
das
nop
addr16
movs
pop
shr
call
mov
or
push
mov
cmp
push
push
push
call
or
cmp
jne
inc
inc
pop
aam
call
loopne
mov
jg
(bad)
pop
mov
push
call
dec
sbb
sbb
(bad)
mov
and
call
pop
mov
dec
jl
je
xor
(bad)
fsubr
ror
mov
mov
adc
movs
mov
xchg
and
pop
fld
ret
(bad)
inc
xor
ins
jl
pop
pop
xor
ja
jecxz
rol
pop
pop
movs
cli
in
inc
push
push
mov
jno
xchg
call
stos
aaa
sbb
mov
mov
push
or
mov
pop
rcl
jle
(bad)
jmp
inc
mov
mov
xor
add
call
dec
shr
repnz
clc
ja
add
pop
fs
call
mov
inc
add
mov
jmp
enter
push
pop
clc
mov
and
inc
add
add
jecxz
push
lea
mov
call
jmp
cld
jmp
push
mov
push
call
push
push
xchg
mov
sbb
cmc
rol
fistp
push
adc
jmp
push
push
mov
call
add
fiadd
dec
hlt
dec
or
and
push
out
lock
lock
jne
xor
jne
sub
dec
add
call
hlt
gs
pop
mov
mov
inc
popf
add
pop
cmp
enter
add
clc
mov
mov
lds
into
call
call
std
inc
aam
(bad)
retf
call
dec
rcl
xor
mov
dec
clc
add
xchg
je
push
push
push
clc
push
lea
push
push
mov
call
test
jne
push
add
out
add
jne
jmp
call
aaa
ja
call
(bad)
mov
jno
das
jmp
cld
or
add
(bad)
jmp
fstp
ss
ret
dec
aam
retf
shr
jmp
dec
cld
jmp
jge
mov
call
sub
inc
dec
cmp
call
sbb
fistp
mov
clc
push
jne
or
pop
vandps
clc
call
and
mov
mov
aam
jbe
mov
jne
jge
fld
popf
jae
pop
mov
mov
or
adc
and
add
push
(bad)
inc
push
rcr
pop
jmp
pop
leave
ret
lahf
inc
cmps
aaa
sub
mov
cmp
hlt
and
add
out
add
adc
mov
cld
or
sahf
add
and
push
xor
push
fwait
ds
mov
mov
mov
mov
call
ds
je
mov
sbb
mov
sti
jmp
out
out
mov
push
inc
sub
arpl
outs
sbb
clc
mov
inc
add
stos
push
lahf
jmp
into
add
cld
mov
or
ret
add
(bad)
fcomip
(bad)
push
and
mov
sub
and
cmp
jle
mov
pop
push
or
and
cmp
je
cmp
add
dec
mov
xchg
add
adc
mov
mov
loopne
pop
xor
add
mov
idiv
(bad)
fild
inc
cmp
jl
cmp
jle
cmp
pop
pop
in
je
mov
cmp
jmp
(bad)
mov
and
clc
push
je
cmp
out
mov
add
shr
or
out
aam
sbb
push
dec
icebp
inc
aas
push
pop
adc
pop
pop
(bad)
call
call
push
movs
loope
stos
mov
inc
(bad)
ins
xchg
ss
mov
or
call
clc
enter
sub
lods
jecxz
ja
enter
inc
add
or
repz
push
and
dec
iret
push
dec
push
out
out
call
call
inc
push
sar
and
call
jb
fsub
das
hlt
imul
sub
ins
and
pop
loopne
or
imul
popa
push
push
mov
push
out
fsubr
mov
jbe
jg
cmc
mov
je
lods
jo
xchg
lock
loopne
test
call
call
adc
jge
std
jmp
sub
je
sub
je
dec
je
sub
jne
iret
retf
call
inc
rcl
mov
daa
xor
xor
adc
mov
push
dec
sub
sahf
dec
int3
dec
pop
and
xlat
cmp
jo
or
out
test
add
jmp
sbb
outs
clc
xor
or
xor
jmp
mov
rcl
sub
ret
dec
jne
ret
call
clc
inc
mov
call
sub
sub
push
jne
cmp
or
push
lock
push
je
aad
scas
push
push
lock
js
jg
pop
push
push
mov
push
push
push
ins
inc
add
call
call
ds
clc
(bad)
cmp
(bad)
out
add
dec
(bad)
jg
push
call
pop
mov
inc
add
push
dec
aaa
cmp
clc
push
inc
mov
or
shr
inc
dec
(bad)
jmp
mov
push
xor
rcl
push
push
push
push
call
je
jbe
outs
push
pop
jne
test
adc
mov
mov
in
add
ret
movhps
loop
dec
sub
(bad)
enter
cs
add
jg
rol
mov
mov
add
push
sti
loopne
mov
mov
jmp
jmp
call
pop
fcom
xchg
mov
jne
pusha
push
inc
stc
xor
and
sti
sti
push
in
jg
add
or
fdivr
or
dec
adc
or
inc
(bad)
cmp
xor
je
scas
or
jne
out
xchg
cmp
jne
xchg
out
xor
sbb
adc
clc
leave
fiadd
xor
sub
(bad)
pop
pop
rol
cmp
call
nop
mov
test
pop
cmp
je
pop
in
ja
loop
(bad)
(bad)
jnp
clc
jle
ins
retf
jmp
push
jge
je
dec
(bad)
sbb
ret
call
scas
pop
int3
(bad)
call
retf
inc
mov
push
push
(bad)
out
pop
mov
jmp
loopne
sub
add
inc
lea
call
mov
imul
sub
mov
inc
jne
lea
mov
scas
jge
mov
xor
test
mov
mov
add
test
add
pushf
js
sbb
fld
call
out
dec
and
mov
or
push
icebp
dec
les
mov
dec
aad
add
mov
mov
add
inc
xor
dec
call
mov
xor
cmp
sete
add
test
sbb
mov
inc
pop
jne
mov
das
jne
jmp
cmp
scas
sbb
je
outs
imul
jo
inc
jg
mov
mov
call
xchg
cmp
je
cmp
mov
and
ret
js
gs
add
(bad)
(bad)
dec
test
add
add
shr
dec
cmp
jge
cmp
je
add
fild
cmp
mov
inc
ja
(bad)
out
into
or
jne
jmp
cmp
je
cmp
sbb
cmp
std
test
inc
adc
push
jne
mov
add
rol
sbb
(bad)
out
ja
cmp
je
adc
(bad)
aam
iret
pusha
sbb
xor
stos
jl
xor
jl
mov
mov
call
not
fs
mov
call
ja
pop
pop
pop
je
std
fld
test
push
xor
cmp
std
add
push
cmp
jne
push
outs
mov
call
or
or
lods
mov
jmp
pop
arpl
in
xor
movd
test
je
cmp
mov
(bad)
jne
xchg
clc
ret
mov
jmp
lahf
xor
jne
outs
and
sbb
push
call
cmp
xchg
test
dec
fwait
and
fdiv
cmp
lock
es
ins
div
add
je
test
xor
iret
push
adc
jmp
fdiv
lea
push
sbb
fdivr
add
jne
mov
mov
and
push
jl
dec
add
movs
jne
call
(bad)
add
test
mov
jle
jmp
mov
smsw
int
inc
(bad)
cmp
xor
pusha
(bad)
pop
jbe
adc
xor
or
inc
jne
mov
xchg
fwait
mov
mov
leave
mov
inc
mov
mov
push
mov
imul
mov
pop
call
out
mov
add
mov
jne
iret
fild
adc
cmp
add
pop
push
rcr
(bad)
fild
je
retf
je
call
jmp
call
add
cmp
je
push
ins
cli
xor
ror
je
mov
add
push
and
je
adc
dec
inc
mov
and
cmc
ror
test
mov
mov
xchg
add
xor
test
je
fimul
(bad)
clc
jge
push
mov
lods
or
jb
pusha
mov
(bad)
ja
xchg
inc
inc
call
pop
fldenv
or
or
push
jne
add
jo
je
ja
xchg
pop
and
and
mov
shl
push
inc
adc
stos
push
movs
xlat
jne
scas
or
xor
mov
cmc
fwait
ins
shl
mov
jae
pop
cli
cmps
xor
pop
add
mov
je
cs
sbb
push
add
inc
push
adc
xchg
cmp
dec
inc
dec
icebp
pop
and
or
push
dec
and
push
fldenv
or
pop
cmp
mov
jne
mov
xor
and
inc
push
sub
push
xor
call
je
cmp
je
push
lea
push
in
or
hlt
sbb
pop
fs
jne
mov
call
sar
fistp
or
call
adc
cmp
ret
jmp
or
inc
ds
in
jle
push
adc
push
or
dec
and
fadd
sbb
test
or
and
cmp
jo
ret
popf
xchg
and
int
xchg
jne
fst
out
cmps
cwde
call
fmul
push
call
enter
adc
fdivr
ss
mov
and
icebp
jg
inc
add
fimul
pusha
daa
jmp
sbb
mov
and
add
sbb
call
mov
rcl
call
sbb
mov
cld
or
push
and
les
not
mov
mov
ffreep
jne
push
clc
mov
mov
mov
jne
mov
loope
push
nop
call
call
or
jne
je
mov
push
push
push
push
cmp
stos
ret
inc
fdivr
(bad)
mov
aad
add
and
jg
mov
das
jne
push
push
ja
(bad)
and
xlat
call
out
mov
push
push
push
jne
or
adc
inc
call
mov
inc
or
inc
clc
pop
push
call
cmp
pop
jae
adc
mov
add
icebp
pop
adc
cdq
jge
jae
and
or
pop
dec
bound
adc
icebp
scas
test
push
mov
jne
pop
jne
icebp
adc
stos
add
dec
(bad)
dec
fst
cld
outs
xchg
jnp
push
pop
aas
cmp
pop
clc
jmp
mov
pop
lahf
outs
jb
jmp
out
sti
pop
add
adc
push
xor
call
dec
add
push
jmp
cmp
sar
or
sbb
cmp
dec
adc
shr
mul
js
test
scas
loope
ins
mov
call
push
iret
icebp
sbb
push
mov
call
fild
pusha
(bad)
cmp
mov
call
cmps
sub
into
mov
call
mov
clc
call
fadd
pop
loope
call
mov
lock
call
cmp
fmul
sbb
call
fbld
and
inc
mov
rol
cmp
cmp
clc
ffreep
popf
es
hlt
cmp
jl
push
adc
ret
test
push
mov
or
aas
and
int3
pop
xor
cmp
je
loopne
mov
loopne
adc
xor
mov
add
cmp
jne
jbe
call
std
adc
enter
stc
and
aaa
les
test
mov
je
or
push
fistp
xchg
(bad)
(bad)
std
push
fdiv
inc
call
or
je
cmp
je
cmp
je
inc
lahf
and
add
fist
pop
or
jge
add
ins
or
or
push
ret
inc
aam
xchg
push
adc
fistp
rol
jb
cli
(bad)
fld
ficomp
sti
inc
jp
arpl
ja
shl
bnd
xor
add
push
push
jnp
or
int
(bad)
jp
add
mov
in
jnp
cmp
cmp
jecxz
mov
das
xchg
jae
dec
lea
ret
add
jl
push
inc
cmp
je
daa
icebp
jmp
mov
jmp
lea
call
push
jb
icebp
sbb
pop
dec
push
ss
cmp
push
aad
into
push
jae
fdivrp
push
inc
dec
mov
lea
mov
call
test
cmps
push
jb
shr
push
add
sbb
pop
les
out
sbb
adc
je
sub
inc
ficomp
mov
test
aam
int
and
sbb
push
les
data16
cld
rcr
mov
test
ja
mov
test
jno
test
dec
test
jb
inc
je
cmp
jne
push
jg
out
ss
inc
in
(bad)
retf
(bad)
(bad)
cmp
lea
cmp
je
loope
push
nop
stos
jno
xchg
add
retf
call
rcr
jbe
stos
ret
jge
int3
psubsw
shl
fdivr
inc
push
mov
mov
imul
outs
ret
jmp
jmp
sbb
dec
cmp
inc
call
sbb
add
mov
sbb
je
test
inc
mov
fdivr
cmps
aad
push
call
push
call
push
rcr
push
stc
pop
cmp
je
jne
mov
daa
pop
cld
or
call
clc
call
mov
add
fistp
push
xlat
and
je
adc
es
jne
cmp
ja
push
je
add
int
jne
outs
test
stos
cmps
icebp
push
cmp
je
cmp
je
dec
sbb
inc
adc
push
push
push
push
push
push
push
pop
push
jbe
call
adc
cld
out
jbe
cli
call
jge
add
dec
adc
aam
xor
jle
mov
push
dec
adc
out
mov
ja
into
call
ins
cmps
jae
xchg
sbb
cmp
push
and
aaa
aad
add
jl
mov
(bad)
emms
inc
xchg
add
jo
cli
js
(bad)
pop
sbb
out
clc
mov
ss
mul
call
mov
test
stos
fwait
jmp
mov
movq
mov
push
ret
and
mov
jmp
arpl
and
mov
add
aad
retf
sbb
call
cs
xchg
adc
fst
clc
lahf
js
mov
(bad)
(bad)
jmp
pop
aaa
adc
push
or
ja
aam
mov
call
adc
stos
push
inc
fmul
xchg
or
inc
sbb
pop
pop
scas
retf
cld
call
popa
test
jbe
mov
out
jmp
(bad)
jmp
sbb
push
push
push
out
ins
retf
xor
in
pop
aam
mov
out
cli
call
cmp
je
jo
mov
idiv
xor
jmp
push
add
inc
loope
into
mov
call
shl
(bad)
idiv
xor
inc
jmp
mov
movs
icebp
call
or
(bad)
jg
loopne
mov
bound
clc
mov
mov
call
jmp
inc
call
movs
jbe
repnz
je
inc
test
and
mov
cld
mov
add
ret
jl
ds
call
hlt
cmps
jg
xor
cmp
je
sbb
call
fst
(bad)
fild
jne
cmp
je
mov
jmp
cmp
mov
or
jo
sub
aas
nop
add
inc
or
pop
fdiv
movs
cmp
and
mov
mov
mov
cmp
jne
lea
add
mov
add
add
push
jb
(bad)
pop
xchg
xchg
push
pop
push
add
push
mov
xlat
pop
call
fisttp
(bad)
ret
es
rol
cmp
xor
push
pop
adc
pop
lea
inc
sbb
setnp
jmp
lock
mov
mov
jg
daa
mov
call
jne
lea
cmp
mov
sbb
loopne
fild
jmp
lea
test
daa
dec
mov
or
and
mov
jmp
or
jno
or
stc
inc
loopne
test
retf
std
pusha
retf
cmps
je
inc
(bad)
mov
pop
clc
jne
xor
test
jnp
lds
clc
mov
cmp
jne
test
push
add
inc
hlt
int
iret
call
in
daa
cmp
je
lock
loopne
(bad)
ins
jnp
mov
cmp
jecxz
call
add
loope
dec
ins
push
je
cmp
sub
or
test
or
or
pop
(bad)
call
fadd
push
icebp
or
loopne
xchg
test
je
jnp
call
or
cmp
aas
sbb
call
aas
ins
xor
in
and
inc
adc
push
out
inc
aas
lock
sub
retf
icebp
push
clc
dec
dec
int3
cli
idiv
daa
and
fmul
push
and
(bad)
pop
in
out
enter
push
ror
mov
inc
call
or
mov
test
stos
xor
and
adc
sub
cs
jg
mov
pop
or
jmp
cmp
cmp
pop
rol
imul
aas
leave
and
dec
and
push
pusha
pop
pop
dec
sub
jle
mov
dec
test
xor
push
push
adc
mov
rcr
in
jae
jbe
dec
bound
cmps
and
retf
dec
mov
rcr
dec
jne
loopne
in
loopne
pop
repnz
sbb
inc
sbb
in
call
std
jg
jmp
jo
or
push
push
pop
(bad)
and
test
inc
clc
pop
push
xchg
adc
clc
cmp
je
stos
pop
add
cdq
sub
jmp
mov
cmp
push
outs
ret
ret
inc
pop
adc
fmul
add
das
fs
push
dec
loopne
sub
clc
js
xchg
add
js
or
je
jp
fdivr
push
cmp
or
ss
add
pop
adc
mov
mov
mov
hlt
call
mov
out
xlat
push
data16
mov
cmp
mov
pop
cld
dec
sub
je
dec
je
sub
jne
jg
int
sti
jg
lods
xchg
in
or
into
lea
call
jae
mov
dec
into
(bad)
fs
imul
inc
les
push
lock
daa
adc
icebp
mov
inc
push
retf
jp
mov
add
jle
(bad)
jmp
xor
inc
inc
inc
jle
jne
cmp
je
dec
rcl
movs
fcomp
call
cmp
ins
inc
fadd
jmp
inc
jle
add
pop
xchg
mov
xor
fist
adc
call
aaa
ror
daa
jmp
lods
cmp
cmp
mov
mov
idiv
mov
cmp
add
cmc
(bad)
fstp
je
(bad)
xorps
rcr
xlat
pushf
cmp
(bad)
jg
mov
test
je
push
call
xor
test
pop
je
sbb
in
jmp
jne
push
call
or
add
jmp
fwait
stos
and
adc
or
lahf
dec
stos
pop
in
sbb
(bad)
data16
add
or
in
je
xor
cmp
mov
ins
mov
sub
mov
push
add
mov
add
es
cmp
jb
jno
nop
cmps
add
test
lea
call
inc
ins
and
test
cmc
bswap
cld
fisttp
add
pop
cmp
loop
je
(bad)
mov
lea
or
mov
idiv
dec
jne
push
mov
cmp
mov
je
repz
call
mov
and
push
dec
xchg
and
xor
cmp
call
mov
call
xor
cdq
and
div
fcomip
jmp
or
jae
mov
call
mov
mov
mov
sbb
jg
mov
test
mov
jmp
inc
xor
mov
sub
inc
cmp
add
or
xchg
mov
movs
sbb
inc
xor
(bad)
scas
inc
inc
and
retf
push
call
and
dec
jne
push
jmp
daa
mov
aam
icebp
inc
and
mov
jne
push
pop
lock
fnstsw
inc
clc
and
mov
jle
call
inc
lock
push
lea
call
lea
fistp
or
jmp
mov
bound
jb
pushf
push
cld
call
mov
jmp
cmp
in
adc
rcr
(bad)
call
sar
outs
lock
sbb
lea
not
and
and
push
ret
dec
or
and
out
mov
add
das
test
jne
inc
fiadd
cmp
je
or
call
aad
push
or
or
inc
aaa
and
or
cmp
sub
adc
cld
add
icebp
jge
jnp
rcl
inc
push
pop
pop
add
cwde
hlt
cmp
cmps
js
pop
fneni(8087
mov
jo
pop
sbb
adc
sar
jmp
mov
sti
jmp
clc
inc
cmp
xor
fistp
mov
jmp
inc
mov
(bad)
out
cmc
mov
inc
mov
add
jge
add
add
or
call
mov
mov
or
add
cmp
jg
sub
call
not
push
jmp
adc
inc
add
ds
cmps
and
mov
fbld
dec
test
add
adc
jmp
test
jne
clc
push
lea
push
ffreep
(bad)
dec
rol
mov
mov
call
je
mov
(bad)
jecxz
ffree
inc
(bad)
add
add
ror
sti
js
aaa
rol
mov
clc
int
push
inc
fsubr
mov
cdq
mov
int3
(bad)
scas
fistp
cmp
lea
and
and
xchg
inc
fsub
test
adc
add
cmps
mov
scas
mov
jne
js
and
jb
xor
dec
adc
aam
push
cld
(bad)
lahf
lods
clc
call
mov
call
ja
lock
je
push
call
jnp
mov
mov
mov
mov
push
xchg
movs
mov
push
(bad)
jmp
xor
add
call
adc
jge
add
retf
je
(bad)
sub
dec
dec
fsubr
clc
fwait
push
jbe
jge
jo
leave
and
fst
jne
test
leave
cmp
or
mov
jno
pop
nop
mov
mov
adc
add
ja
mov
mov
inc
add
(bad)
jmp
add
cld
call
in
jg
enter
je
mov
call
mov
jmp
cli
push
jns
jne
push
lea
call
test
out
cli
dec
in
push
mov
and
inc
lods
je
outs
xor
mov
cmp
adc
inc
pushf
add
clc
sbb
in
lea
nop
lea
call
dec
clc
mov
fwait
sub
add
and
(bad)
ja
cmp
add
sbb
cmp
dec
xor
push
imul
jge
add
pop
adc
adc
dec
rol
rol
adc
inc
loopne
mov
je
out
mov
popa
call
and
jne
je
and
cmp
adc
scas
jnp
or
pop
adc
pop
mov
dec
outs
adc
call
mov
jl
mov
int
cmp
and
cmp
jmp
add
ja
es
cld
clc
add
psubsb
arpl
xchg
push
hlt
pop
aas
sbb
aas
or
cmc
lahf
add
mov
fdiv
adc
mov
or
jnp
jmp
jmp
inc
or
es
call
mov
pop
pop
xchg
retf
(bad)
mov
call
call
cmp
jl
mov
(bad)
fist
je
mov
jmp
push
jmp
call
retf
call
cmc
(bad)
inc
js
(bad)
dec
sub
fisub
sti
ss
je
mov
dec
sbb
mov
test
push
push
call
cwde
cmp
pop
sbb
and
std
aaa
add
inc
sbb
call
test
xor
cmp
and
xchg
cwde
inc
mov
sbb
lods
jle
jecxz
mov
pop
push
dec
push
or
adc
pop
outs
sbb
aad
or
cmp
adc
mov
call
leave
or
mov
pop
mov
add
pop
mov
pop
jo
mov
inc
pop
mov
mov
jle
push
push
mov
mov
dec
mov
mov
mov
cmp
mov
add
add
xor
or
add
pop
dec
movzx
(bad)
outs
pop
xor
jle
and
idiv
and
mov
jne
xchg
les
mov
push
push
sahf
adc
jl
fadd
cmp
call
js
imul
cmp
push
fsubr
call
sti
das
xor
lea
push
call
ss
neg
jne
pop
add
or
sbb
fbstp
ss
daa
or
fisttp
call
pop
pop
mov
call
jle
call
cs
jge
lar
mov
fild
mov
scas
daa
add
(bad)
cmp
je
call
dec
add
inc
daa
cmp
jae
mov
call
jge
movzx
xchg
push
xor
(bad)
jmp
call
sbb
enter
(bad)
dec
and
xor
cmp
push
jge
pop
sar
mov
lods
aam
(bad)
fild
cmp
push
pop
jge
sub
mov
xchg
ja
xor
lea
mov
call
sbb
aam
fnstsw
jmp
call
and
(bad)
adc
jb
jmp
pop
pop
add
mov
cmps
rcr
pop
fcomip
call
sbb
test
cmp
enter
lock
pop
xor
hlt
xor
dec
sub
daa
mov
lock
call
jle
inc
arpl
pop
and
inc
and
call
xor
rol
jne
sti
ja
jl
add
out
push
and
call
call
dec
or
jmp
mov
fistp
adc
mov
lea
xor
and
(bad)
mov
mov
rcr
ss
je
cmp
das
add
inc
daa
add
in
xchg
adc
sbb
je
js
add
mov
daa
pop
sti
mov
push
call
daa
sub
je
movzx
jae
or
sbb
push
call
pop
cmp
cli
je
mov
mov
jbe
cmp
jmp
mov
lea
retf
je
sbb
dec
or
and
cs
cmp
pusha
push
punpcklbw
adc
fistp
adc
sub
push
mov
inc
je
jg
sti
add
adc
daa
or
(bad)
mov
dec
or
xor
dec
push
call
and
add
enter
jo
(bad)
std
dec
and
or
and
cmp
ins
stos
test
(bad)
jge
lea
xchg
nop
xor
mov
fst
jmp
mov
ror
sbb
rcl
push
mov
push
call
outs
ret
mov
xchg
sar
inc
inc
add
xor
inc
cmp
mov
aam
cmp
stc
int
call
cmps
or
in
adc
mov
ret
mov
mov
call
repnz
rcr
rol
sbb
jmp
fistp
aaa
adc
inc
in
lea
push
icebp
stos
add
(bad)
(bad)
mov
push
xor
mov
mov
xor
inc
cmp
mov
jg
adc
add
pop
add
add
(bad)
jmp
push
call
mov
or
cmp
(bad)
xchg
jg
or
or
loope
in
daa
jg
lods
and
clc
je
je
push
call
cli
aas
clc
cmp
je
mov
jmp
jl
jmp
jne
mov
clc
dec
jmp
inc
sar
cld
(bad)
cld
daa
hlt
ja
sub
jbe
mov
aaa
jne
call
lock
and
sar
fs
push
aas
enter
pop
mov
rol
push
adc
icebp
and
test
es
or
into
push
add
mov
mov
adc
push
push
aad
sub
outs
jmp
mov
cmp
jg
jae
xor
std
pop
and
imul
dec
jne
ss
push
mov
or
or
aad
cld
push
push
add
jge
(bad)
jmp
dec
bound
shr
lock
call
pop
pop
cmp
jne
cmp
je
test
inc
jmp
pop
test
xor
arpl
(bad)
(bad)
jle
sub
mov
lock
add
push
call
xlat
nop
aad
jmp
push
je
cmp
je
adc
sub
push
push
das
push
add
sub
outs
test
cs
or
jmp
or
int3
add
lods
sub
call
push
addr16
sub
or
cli
sbb
aaa
dec
lock
cmp
fdivrp
(bad)
cmp
dec
mov
cmp
je
call
jmp
cld
push
xchg
add
push
call
cmp
pop
or
push
call
cld
lea
push
call
jg
or
call
test
je
lahf
xchg
mov
(bad)
(bad)
out
test
jmp
pop
pop
mov
jmp
mov
add
mov
cmp
aad
mov
dec
call
pop
jmp
cmp
bound
push
jmp
scas
or
push
adc
call
push
call
adc
mov
sub
or
dec
iret
call
clc
add
dec
popf
imul
pop
test
xchg
sbb
je
cmp
out
inc
cmp
outs
jmp
retf
cmp
iret
call
jmp
sub
js
cmp
jge
mov
aad
mov
add
cld
cmp
sbb
adc
je
mov
ror
dec
sar
(bad)
add
xor
lahf
fidivr
or
daa
push
jmp
jmp
push
test
call
push
lds
call
xor
pop
jmp
mov
div
and
and
hlt
push
or
out
or
jne
push
fnsave
outs
inc
ja
xor
sar
dec
adc
or
imul
dec
jne
mov
cmp
mov
adc
push
add
movs
pop
sbb
push
addr16
cld
in
pusha
out
xchg
mov
or
mov
push
icebp
ja
clc
push
setne
mov
or
dec
or
pop
(bad)
jg
jg
shr
or
push
fist
cmp
jne
xor
pop
mov
inc
jmp
call
fstp
call
jmp
test
test
add
jl
add
mov
pop
inc
aad
inc
pop
mov
xor
int
mov
and
fsub
mov
loope
mov
jbe
mov
push
call
and
adc
or
aaa
push
pop
push
adc
jo
lahf
(bad)
not
add
call
jecxz
push
jp
push
frstor
fdivr
jle
add
sar
sete
cmp
dec
outs
jns
call
in
call
xor
push
jmp
call
mov
or
fsub
dec
sub
cmpxchg
ins
mov
and
add
and
mov
mov
jne
dec
jne
jo
sub
dec
mov
jmp
in
sbb
jg
dec
push
pop
mov
xor
cmp
cmps
aaa
dec
or
xor
sbb
ja
in
add
jne
call
call
movs
cmp
xor
lods
fadd
xor
jns
mov
and
(bad)
iret
xor
aaa
pop
(bad)
jne
jne
call
push
sbb
xor
in
call
(bad)
fild
call
mov
mov
call
adc
lock
adc
cmp
lods
xor
cwde
daa
add
inc
pop
mov
(bad)
(bad)
inc
add
add
sar
xor
cmc
jne
push
movzx
and
jne
inc
and
sub
or
push
fbstp
dec
inc
add
pop
sub
test
jne
(bad)
inc
lea
push
push
call
mov
mov
ror
and
pusha
cli
fild
lea
push
push
dec
clc
xor
add
in
ja
cld
movs
pop
pop
jb
cmp
push
inc
push
cmp
fdiv
push
scas
inc
pop
clc
es
inc
and
or
cmps
jae
call
or
push
and
mul
cli
clc
push
push
push
fwait
push
push
call
mov
outs
clc
fistp
sahf
jmp
clc
or
cmp
jne
mov
mov
arpl
mov
sbb
mov
push
jne
push
test
and
mov
js
je
mov
mov
inc
mov
and
call
dec
loopne
loopne
mov
call
jp
in
arpl
call
ins
cli
add
xchg
push
adc
imul
or
or
es
cmovb
shl
add
mov
or
cld
je
inc
fcomp
out
dec
mov
push
clc
adc
inc
enter
inc
mov
fbstp
shr
mov
clc
fiadd
and
hlt
fs
mov
test
ins
jb
out
sub
push
and
add
pop
mov
stos
pusha
xchg
lds
sbb
sbb
in
inc
push
neg
sub
jmp
add
xor
cmp
inc
ins
adc
inc
arpl
out
push
jae
push
mov
gs
cmps
mov
push
push
push
stos
call
sbb
dec
rcr
bound
ror
mov
mov
inc
in
jge
jne
cmp
je
cmp
jne
dec
idiv
mov
idiv
sbb
iret
jne
and
push
sar
in
cmp
mov
push
mov
inc
cmp
lea
in
das
movs
mov
add
push
or
loopne
dec
or
adc
test
inc
push
ins
dec
outs
push
punpckldq
push
lahf
sub
xchg
lods
(bad)
out
mov
or
cs
mov
lea
add
fcomp
call
cld
call
lods
out
mov
pop
mov
scas
add
(bad)
out
xor
call
test
dec
enter
and
shr
jns
sub
neg
stos
inc
push
call
adc
test
sbb
loope
in
pop
push
push
call
repz
inc
sub
aad
xchg
cmp
push
call
mov
lock
and
or
es
sub
jne
xchg
mov
in
sub
sbb
push
mov
mov
fnstcw
pusha
inc
jmp
sti
push
fsub
fild
inc
inc
rcl
inc
stc
sar
adc
sub
pusha
bound
add
mov
inc
push
mov
cmp
je
mov
adc
mov
mov
sbb
fst
(bad)
adc
ret
adc
das
test
inc
pop
inc
(bad)
dec
inc
in
inc
and
inc
call
inc
adc
jle
xchg
jne
push
xor
sub
js
jne
clc
mov
inc
or
inc
loopne
mov
(bad)
leave
sbb
mov
mov
push
call
sbb
call
sbb
mov
mov
push
sti
and
push
fist
mov
call
pushf
or
sub
movsx
cmp
out
mov
cmc
cmp
or
addr16
je
push
push
or
cmp
or
adc
(bad)
(bad)
jle
adc
dec
inc
cmp
jl
jmp
mov
lods
add
xchg
(bad)
dec
adc
cmp
add
pushf
add
inc
xchg
pop
push
add
dec
and
lahf
push
jne
add
cmp
inc
in
sbb
inc
pop
pop
and
add
sbb
icebp
je
mov
cmp
je
in
dec
sub
enter
outs
cmp
dec
cmp
jl
mov
push
lea
xchg
(bad)
loop
push
ror
dec
jne
pop
jns
test
push
jecxz
div
icebp
inc
push
push
into
call
loope
adc
pop
push
pop
inc
aaa
inc
mov
jnp
inc
bound
call
ja
lea
call
pop
cmp
jne
adc
jo
movs
fwait
dec
retf
je
iret
adc
or
loopne
std
jg
add
or
jne
call
mov
je
out
or
sub
je
dec
dec
je
add
inc
je
sub
je
sub
jne
sub
ret
cmp
out
sub
mov
inc
mov
add
loope
mov
or
leave
adc
pop
sub
lock
sbb
xor
fwait
loopne
inc
aaa
jmp
cmps
call
inc
push
add
pop
cmp
(bad)
(bad)
jmp
int
jl
pop
sar
hlt
and
mov
dec
and
add
push
mov
call
cmps
loopne
dec
or
sub
cmc
pop
inc
rcr
xor
ret
push
push
(bad)
mov
push
lea
call
xor
test
mov
jmp
adc
or
dec
xor
inc
sub
je
dec
jne
mov
sbb
mov
lahf
and
inc
cmp
cli
outs
mov
jl
pop
pop
pop
pop
pop
ret
cmp
push
cs
cld
inc
pop
les
or
add
(bad)
pop
mov
push
and
gs
inc
ffree
or
aas
sbb
cwde
mov
dec
cld
call
add
mov
jmp
mov
pusha
call
cld
je
mov
aam
dec
ror
rcr
or
push
call
mov
xlat
popa
add
jae
inc
adc
(bad)
or
(bad)
lods
icebp
dec
call
pop
les
push
push
or
inc
push
jns
bound
mov
fidivr
sub
cmp
sahf
add
jge
out
inc
mov
push
call
inc
adc
es
jne
xor
leave
iret
ds
push
cmp
jae
dec
mov
imul
sbb
sbb
movs
or
cmc
inc
lock
lds
cmp
sub
pop
mov
sub
jbe
daa
push
mov
cmp
mov
xlat
aaa
and
cmp
pop
jne
and
mov
(bad)
dec
and
xor
and
cmp
setl
mov
jmp
jge
dec
or
mov
rol
(bad)
jne
pop
nop
mov
subps
or
jg
jl
add
call
call
adc
pop
pop
jne
in
inc
call
out
dec
push
sub
add
in
test
mov
sbb
add
add
fmul
call
test
push
(bad)
add
js
sti
sub
dec
cmps
sub
add
cmp
or
not
pushf
mov
call
or
and
inc
mov
idiv
(bad)
mov
ja
out
popf
ins
lock
loope
push
(bad)
(bad)
fistp
and
and
(bad)
inc
sbb
out
sub
and
or
mov
shl
clc
pop
in
push
adc
mov
push
pop
aas
pop
daa
inc
div
or
in
out
out
or
idiv
fmul
test
and
mov
in
popa
adc
or
test
sbb
inc
pop
add
xor
lea
cs
jge
ficom
je
scas
stc
fadd
dec
mov
or
or
cmp
(bad)
jge
xor
xchg
or
pop
xor
jge
push
mov
jne
and
jge
out
sbb
outs
or
and
jne
fcomip
mov
and
add
leave
pop
inc
call
leave
and
sbb
sub
push
cli
nop
mov
and
je
push
ror
out
outs
mov
test
nop
ucomiss
or
call
jmp
mov
push
cmp
jmp
jns
sub
cmp
test
mov
xor
cmp
test
adc
pop
test
ss
ja
jne
cmp
mov
js
push
push
in
mov
lahf
and
ds
ss
jae
iret
call
cmp
gs
pop
add
inc
rol
mov
cmp
mov
ror
sbb
cmp
jecxz
sub
mov
inc
pop
js
xor
push
xor
daa
and
or
mov
mov
into
(bad)
sub
lahf
push
in
mov
jne
loopne
test
push
movzx
call
pop
sub
call
les
loopne
pop
push
jmp
adc
ret
ins
out
rcr
sbb
es
aaa
aam
inc
cmp
call
ins
cli
stc
and
scas
or
cmp
je
sub
pop
add
push
ins
out
xchg
push
call
shl
sar
shl
mov
jg
push
xor
jecxz
(bad)
xor
add
jmp
or
and
and
cld
push
inc
mov
jnp
jns
jg
ret
xchg
jle
jg
jle
cmp
jle
cs
mov
jne
jb
mov
sub
cmp
mov
cs
call
out
jb
cmp
jne
xor
jbe
scas
pop
push
add
lahf
adc
ins
lock
pop
mov
fsubp
sub
jne
ja
call
clc
(bad)
jnp
std
inc
sbb
push
mov
inc
add
fnstenv
call
fs
rcl
mov
and
push
inc
aaa
je
mov
lahf
jno
test
jl
out
dec
push
push
call
popa
add
push
call
add
call
fisttp
shl
cmp
fiadd
call
idiv
leave
leave
call
idiv
fiadd
call
lahf
sub
add
shl
cmp
fbstp
call
dec
and
call
pop
push
push
call
out
cli
lods
sbb
mov
and
push
(bad)
out
cwde
into
call
stc
loop
mov
call
js
pop
push
call
sub
pushf
mov
addr16
mov
mov
pop
cwde
sbb
cmp
loopne
ds
retf
push
in
popf
pop
sbb
adc
ins
sub
sub
ss
ds
call
push
call
xchg
ror
imul
call
mov
call
pop
sub
sahf
dec
jo
dec
mov
inc
inc
mov
dec
je
dec
mov
jne
arpl
or
sbb
adc
call
ds
ret
fucomp
lock
sbb
and
dec
(bad)
sbb
int
and
mov
jl
mov
in
in
or
call
mov
xchg
inc
into
jmp
movs
dec
add
aaa
adc
push
push
mov
call
cmp
push
imul
je
xchg
je
icebp
scas
loope
retf
sub
clc
je
pop
mov
enter
loop
or
(bad)
(bad)
jmp
inc
mov
sbb
call
cmp
shr
call
lea
mov
add
or
cmp
popf
mov
(bad)
dec
(bad)
(bad)
jg
pop
int
jnp
cld
fcom
fdivr
inc
cmc
rol
adc
push
mov
xor
cmp
ror
aas
js
add
loopne
add
leave
xchg
mov
hlt
mov
call
hlt
lea
push
call
cmp
clc
jg
sbb
add
mov
mov
mov
push
push
mov
push
test
fwait
das
call
pop
pop
je
push
call
xchg
push
pop
mov
ud0
call
push
push
call
inc
je
mov
jmp
push
call
lods
pop
jl
pop
add
stos
clc
call
mov
test
pop
je
call
daa
out
push
lea
call
in
pop
cmp
jb
push
call
test
xor
jmp
sbb
cmp
jb
sbb
je
and
stos
and
jb
push
dec
pop
sbb
xor
les
call
iret
sbb
jne
push
call
(bad)
jle
sbb
fucomi
dec
mov
adc
clc
mov
cmp
jl
sub
out
jno
sbb
sub
push
add
mov
sar
pop
mov
mov
pop
leave
ret
pop
aam
add
ds
or
mov
add
adc
push
cld
push
xor
mov
cld
mov
mov
add
mov
and
cmp
out
(bad)
stc
add
mov
xchg
add
jge
sub
cmp
je
mov
sbb
shl
iret
jne
cmp
je
cmp
loopne
pop
adc
pop
mov
jg
ja
pop
cmp
mov
je
cmp
jne
mov
mov
aas
xchg
mov
adc
call
icebp
add
call
call
ss
(bad)
cld
je
mov
test
add
push
push
sbb
shl
add
imul
pop
and
and
call
mov
xor
inc
mov
sahf
sub
cmp
je
cmp
aad
(bad)
fimul
sub
cmp
mov
call
lea
add
dec
and
xchg
ror
ror
cmp
sahf
fnstsw
sete
sub
pop
push
js
je
(bad)
das
ror
or
xchg
push
push
fcom
fisttp
je
dec
jne
push
add
test
jmp
add
mov
sub
mov
fild
mov
add
add
xor
push
push
mov
hlt
push
stos
mov
jmp
aaa
call
or
push
or
add
jmp
movzx
mov
add
shr
and
shr
out
mov
loopne
push
icebp
adc
jbe
in
call
mov
icebp
sub
test
mov
dec
push
jne
dec
loopne
in
inc
loopne
push
pop
add
imul
cdq
fstp
sub
(bad)
cdq
idiv
mov
jmp
mov
(bad)
pusha
xchg
lea
xchg
cmp
int
push
call
mov
mov
mov
lock
inc
rcl
es
fdivr
shr
test
jle
mov
jg
add
mov
jns
les
call
mov
push
fsubr
push
in
mov
cld
add
clc
mov
jge
mov
and
(bad)
jmp
cmp
jle
hlt
cmp
shr
or
mov
shl
push
push
call
xor
sar
add
add
mov
call
cld
nop
lock
mov
sbb
call
cmc
cs
out
cmp
je
sbb
sub
(bad)
fbstp
inc
in
je
mov
repz
stos
jnp
mov
push
or
je
clc
jecxz
mov
cmp
and
and
or
jg
fdiv
xchg
cld
(bad)
jmp
hlt
or
ja
add
cld
call
xchg
inc
pop
out
call
mov
shl
xchg
mov
bound
mov
push
(bad)
cmp
clc
inc
lock
call
call
cmp
je
cmp
lock
adc
pop
or
mov
mov
popa
ins
or
scas
mov
xchg
or
fs
hlt
fild
pop
sub
mov
enter
in
int
sbb
fwait
inc
add
jge
stos
stos
pop
mov
jmp
mov
neg
in
fsubr
push
outs
pop
stc
inc
lock
mov
mov
dec
inc
sbb
add
sti
push
cmp
retf
mov
ss
call
push
loope
adc
in
xchg
push
adc
dec
push
add
inc
cmp
dec
lock
scas
jo
push
xchg
mov
test
or
pusha
sub
(bad)
jne
aas
test
je
je
cdq
jmp
mov
sbb
and
shl
mov
jl
cli
sub
adc
sbb
call
movs
push
adc
and
or
pop
mov
sbb
cli
xchg
leave
pop
lea
mov
mov
and
cmp
lods
cmp
cmps
add
mov
inc
jl
xor
pop
push
inc
aad
xor
std
(bad)
jg
pusha
adc
idiv
mov
mov
cmp
jge
push
mov
lahf
mov
mov
adc
jle
fadd
loope
jb
lahf
ins
call
xor
call
call
add
test
mov
je
push
dec
icebp
aaa
jl
fdivr
sahf
pop
push
call
jns
xor
pop
add
mov
test
lock
cmp
dec
cld
inc
or
mov
clc
add
inc
or
ja
aaa
ror
adc
fmul
push
adc
mov
sub
sar
mov
mov
add
mov
add
cmp
(bad)
sti
mov
mov
cwde
in
(bad)
(bad)
sti
cmovno
ror
add
sub
mov
jnp
pop
pop
mov
sub
sub
sub
mov
sbb
jns
adc
ins
in
std
jnp
inc
adc
outs
mov
fisttp
sub
sbb
sbb
cld
push
push
push
call
jle
mov
pop
je
mov
mov
fsubrp
jmp
adc
ins
inc
shl
jp
or
(bad)
clc
(bad)
js
out
dec
adc
sbb
or
jmp
inc
test
add
lock
cld
(bad)
cli
and
sbb
test
call
adc
popa
or
out
cmp
lock
stc
(bad)
(bad)
aas
mov
sbb
lock
cs
jg
cmp
mov
je
lea
(bad)
aaa
jl
jl
push
call
jmp
add
cwde
sar
mov
ret
pusha
pop
jmp
dec
test
jnp
(bad)
inc
add
inc
jmp
fcomp
lods
lock
ss
ret
cmp
fcom
xchg
push
inc
jg
jmp
jl
inc
cmp
pextrw
clc
mov
add
add
sti
add
add
test
in
inc
out
adc
jne
rol
dec
adc
push
fimul
inc
push
push
pop
and
mov
test
push
inc
cld
jmp
pop
loopne
idiv
or
xor
cmp
(bad)
(bad)
jmp
adc
(bad)
je
mov
add
shl
push
popa
mov
(bad)
jne
jmp
pop
inc
xchg
out
hlt
jg
push
call
pop
pop
mov
js
fs
cmp
dec
and
xor
sub
mov
call
add
sub
xchg
pop
iret
call
jmp
(bad)
mov
or
call
mov
mov
cmp
je
(bad)
dec
add
jge
rep
lea
mov
call
adc
pop
aaa
retf
call
mov
call
jae
or
jmp
out
call
ror
xchg
or
std
dec
or
or
fdiv
daa
pusha
lock
mov
call
mov
jg
ja
sgdtd
push
call
inc
cmp
(bad)
out
outs
loopne
cmp
lea
push
call
sub
jns
sub
jmp
sbb
ja
(bad)
jle
push
push
cli
mov
push
call
push
push
push
int
jns
fs
add
xor
fild
jne
neg
mov
call
or
xchg
push
xchg
je
lea
fld
enter
add
fld
out
mov
or
stos
push
out
addr16
mov
push
xor
fsubr
sbb
push
nop
pop
sub
push
push
call
rcr
jge
cs
mov
xor
sti
scas
mov
pop
cmp
push
retf
sub
clc
out
fmul
jmp
outs
xchg
or
or
and
dec
or
cmp
cwde
in
es
ret
jo
setl
or
nop
xchg
dec
in
cmp
pop
bound
call
outs
or
call
adc
shrd
pop
loope
jno
lods
into
hlt
jns
inc
add
lock
dec
lods
jnp
fcmovne
adc
movs
test
sub
ret
add
sar
or
cmps
push
call
xor
push
call
xor
call
popf
ins
xor
push
pop
sti
inc
cmp
call
loope
popa
stos
xor
adc
popa
and
iret
call
or
dec
or
ret
retf
mov
or
clc
mov
or
fbstp
push
mov
mov
mov
mov
push
push
loopne
push
mov
sub
(bad)
inc
out
pop
sub
cmps
jne
cmp
je
mov
jmp
cmp
je
sbb
loopne
mov
das
jno
push
add
cmps
add
dec
cld
push
jmp
popf
int
push
jle
jne
das
sbb
push
cmp
ret
add
(bad)
sub
pushf
sti
jg
call
je
dec
jne
stos
loopne
mov
ror
int3
sub
adc
push
xor
dec
adc
call
jmp
adc
xchg
rcr
fwait
iret
jmp
iret
add
mov
mov
sub
mov
dec
jno
mov
arpl
outs
icebp
(bad)
(bad)
jmp
loope
add
pop
std
je
pop
add
pop
hlt
sbb
lea
dec
cld
call
mov
jge
rcl
mov
xchg
in
pop
cmp
push
movs
cmp
push
call
mov
inc
shr
jmp
aam
fdivr
jo
daa
int3
out
clc
push
call
cmp
cmp
inc
aam
push
bound
into
jge
xchg
icebp
dec
dec
(bad)
jmp
call
push
mov
push
push
call
adc
(bad)
jg
std
imul
shrd
adc
push
push
push
mov
call
jp
cmps
xor
ror
inc
lock
add
and
or
in
out
popa
inc
neg
inc
aam
test
push
adc
adc
inc
int3
push
push
call
dec
xchg
pop
xchg
inc
icebp
(bad)
call
je
psubusw
xchg
fst
fld
or
fsubr
pop
adc
fld
sbb
ret
ss
or
jmp
call
popa
sub
jnp
ja
push
push
call
call
imul
inc
fs
call
(bad)
sbb
or
call
adc
imul
cmp
int3
push
jo
js
and
inc
adc
push
fstp
call
ret
pop
inc
jl
mov
fild
hlt
sbb
outs
or
call
sbb
xor
jae
pop
aam
adc
or
pop
push
xchg
neg
fld
jl
fstp
test
pop
jne
int3
mov
rep
mov
mov
(bad)
cmp
fsubr
cmp
cmps
or
sbb
push
call
mov
push
fmul
cmps
dec
add
pminsw
xor
fidivr
push
or
ret
xlat
xor
ja
out
inc
fsubr
call
push
push
pop
inc
std
add
loopne
push
(bad)
push
call
es
rep
push
mov
dec
inc
cld
icebp
mov
xor
out
mov
sbb
mov
jne
push
test
adc
mov
sti
add
sbb
push
push
push
or
and
mov
or
pop
mov
(bad)
sbb
loope
outs
add
push
call
lahf
mov
push
and
xlat
mov
push
push
inc
je
mov
cmp
je
cmp
(bad)
jne
cmp
je
jl
jne
call
push
push
push
inc
push
call
cdq
mov
jle
repz
sbb
adc
inc
aas
or
in
dec
clc
push
lea
jmp
mov
call
call
push
enter
sbb
fsub
sbb
sbb
js
jne
mov
cmp
je
cmp
je
fbstp
ret
push
push
fdiv
sbb
test
adc
mov
and
outs
add
push
push
call
or
mov
(bad)
lock
mov
or
popa
je
lds
or
jne
adc
add
sahf
push
fmul
in
sub
fst
and
adc
add
add
scas
dec
pop
loope
imul
outs
dec
mov
lods
add
mov
in
mov
push
fmul
call
jmp
lea
mov
fcomp
add
sbb
jns
adc
je
add
(bad)
jge
outs
push
call
inc
push
(bad)
call
inc
test
push
xor
jo
add
mov
mov
dec
in
push
inc
push
mov
mov
idiv
cmp
out
pop
pop
mov
js
mov
cmp
std
out
stos
pop
dec
and
pop
and
dec
cli
pop
inc
out
mov
cli
or
and
add
mov
pop
fild
add
movaps
retf
fild
cmc
out
pop
or
sbb
call
mov
bound
pop
inc
call
jle
mov
mov
mov
push
call
mov
lea
xor
sub
and
and
(bad)
call
mov
push
aad
test
call
push
push
lea
cmp
push
fsub
add
call
cmp
sub
and
std
call
mov
push
mov
fst
add
cdq
dec
xchg
arpl
iret
pop
je
mov
and
add
push
push
mov
ds
mov
fcomp
xchg
pop
mov
mov
rol
mov
mov
inc
mov
sub
ror
push
ret
mov
sbb
sar
push
or
add
mov
(bad)
(bad)
mov
push
call
and
inc
adc
add
(bad)
adc
jne
dec
call
loopne
mov
call
cmc
sbb
mov
iret
dec
sbb
xchg
cld
fimul
mov
pop
pop
pop
inc
test
push
mov
je
cmp
je
fnstsw
sub
test
ds
dec
fidiv
mov
test
je
sbb
je
sbb
loope
add
cmp
sub
mov
push
or
push
adc
adc
dec
(bad)
jmp
test
je
call
stos
mov
xchg
(bad)
test
inc
sub
test
sbb
jge
test
or
cld
arpl
pop
or
popf
rol
jl
adc
sti
or
aas
jnp
jg
sti
(bad)
jle
je
cmp
ja
jmp
into
call
test
je
mov
adc
call
push
and
add
pop
fadd
inc
mov
je
xlat
add
sbb
je
push
jmp
(bad)
cmps
aas
dec
into
call
or
add
std
jmp
mov
loop
mov
add
push
ins
inc
dec
xchg
dec
(bad)
lea
cmp
cmp
inc
movs
push
enter
jg
jmp
das
or
ins
sahf
fbstp
mov
adc
cmp
push
arpl
and
sub
add
sbb
push
outs
mov
les
je
mov
cmp
xor
call
nop
cmp
push
call
mov
push
(bad)
jge
add
mov
mov
lock
or
add
inc
add
and
and
jle
call
icebp
push
call
push
sti
sub
inc
icebp
call
or
jne
mov
mov
scas
scas
or
int
cmp
add
jg
jp
fiadd
jge
sti
(bad)
inc
jg
es
das
mov
jle
add
add
inc
add
into
inc
or
popf
(bad)
inc
push
mov
call
adc
inc
hlt
je
adc
sub
or
mov
mov
mov
push
mov
scas
mov
pop
mov
adc
or
call
jne
clc
push
push
jmp
jno
inc
arpl
jb
xor
call
outs
bound
inc
or
aas
adc
jne
pop
or
push
pop
(bad)
call
push
inc
pop
xor
cmp
jne
or
pop
adc
call
sbb
and
push
add
cmp
je
mov
test
es
call
jne
xlat
mov
mov
jmp
test
je
push
retf
call
popa
or
jge
or
sbb
mov
mov
loopne
jecxz
iret
(bad)
scas
ds
push
add
inc
clc
cmp
or
jns
push
push
add
(bad)
in
inc
add
add
mov
out
inc
cmp
jne
lods
cmp
outs
mov
dec
idiv
dec
stc
pusha
psraw
jl
cmp
call
call
hlt
fbstp
into
push
push
call
push
test
call
in
call
adc
inc
push
push
mov
(bad)
pop
je
cdq
mov
pop
test
rol
fild
dec
cld
push
call
or
loopne
or
adc
inc
in
sub
pop
dec
dec
mov
addr16
or
je
js
add
mov
inc
ins
jo
gs
push
shl
dec
daa
idiv
call
add
adc
fwait
adc
xchg
dec
cld
shr
push
mov
dec
add
pop
adc
jle
push
out
stos
call
(bad)
pop
ret
mov
ins
cmp
fist
mov
call
inc
mov
cmp
fld
outs
clc
adc
call
push
push
mov
call
mov
and
cmp
mov
in
lock
jb
inc
mov
cmp
popf
ficom
lds
in
pop
push
dec
mov
fist
ds
test
xchg
mov
push
lea
lea
mov
push
xchg
mov
pusha
mov
pop
ret
push
lea
and
xor
add
ss
add
mov
aaa
je
or
cmp
lock
push
mov
push
adc
(bad)
adc
add
inc
fdiv
mov
mov
dec
mov
icebp
dec
push
ret
mov
les
call
inc
hlt
push
add
pop
je
push
jge
aaa
xchg
cmp
cmp
cmp
adc
push
mov
call
jmp
cmp
jge
adc
cmp
inc
aas
mov
push
push
add
sbb
cld
jmp
gs
adc
stos
inc
call
mov
lods
enter
cmp
jge
add
mov
call
mov
jge
push
jge
jns
mov
call
sub
xchg
fcmovb
mov
sub
mov
sbb
call
push
std
aas
inc
adc
push
xor
mov
cmp
push
xor
jge
jne
jmp
inc
test
push
or
loop
adc
sti
je
test
inc
or
inc
in
inc
sbb
lock
lea
jl
call
mov
xchg
cmp
jne
cmp
inc
mov
dec
sbb
mov
cmp
pop
adc
inc
inc
inc
inc
push
ret
clc
sbb
pop
aaa
inc
inc
(bad)
push
mov
loopne
sbb
test
cmp
or
mov
hlt
cmp
les
or
mov
cwde
std
orps
cmp
jne
jmp
sbb
aaa
lock
sub
jnp
inc
or
fcom
in
jmp
into
call
les
call
push
clc
push
pop
jl
fild
push
pop
push
lea
push
stos
push
lea
stos
push
test
daa
ja
inc
in
push
loope
int
test
add
or
clc
call
les
nop
mov
xor
add
lahf
frstor
clc
mov
mov
add
adc
call
inc
mov
pop
cmp
mov
inc
push
pop
push
add
pop
add
mov
enter
push
inc
in
xor
or
adc
or
mov
call
mov
or
jne
push
call
mov
adc
adc
retf
sub
or
jge
in
add
jl
mov
sub
sbb
aad
add
psubsb
mov
or
jne
xchg
pop
inc
aad
inc
fwait
cld
imul
movs
mov
adc
and
call
push
mov
jne
scas
aas
lock
push
push
call
xor
loopne
or
and
add
mov
add
jmp
inc
dec
je
lea
and
in
lea
gs
push
repz
inc
inc
mov
jle
sar
or
jl
cmp
jne
xor
arpl
cmp
jne
cmp
call
je
cmp
jne
cmp
fwait
jmp
in
push
adc
addr16
cmp
pop
pop
jne
mov
push
inc
and
and
mov
mov
call
inc
add
xor
neg
mov
lea
scas
sbb
push
inc
ret
push
push
call
sti
(bad)
fstp
sahf
xchg
cwde
(bad)
and
call
or
cmp
mov
add
fidiv
jne
call
mov
iret
jns
add
call
fucomp
unpckhps
sub
test
dec
orps
sub
dec
pushf
or
aas
inc
inc
dec
shl
and
mov
stos
sbb
dec
call
inc
loope
push
push
push
call
jp
cmp
fld
dec
rcr
pop
lock
cwde
fld
loopne
dec
push
lea
mov
add
std
cli
rep
je
mov
addr16
cmp
mov
mov
cmp
test
mov
mov
cmp
sub
pusha
stos
mov
js
rcl
data16
pop
lock
(bad)
mov
dec
dec
je
sub
je
add
dec
je
sub
je
(bad)
fist
hlt
pop
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
stos
jg
jecxz
jg
aad
jo
push
mov
call
ror
or
js
push
outs
loop
das
push
jno
inc
lea
jg
test
inc
or
addr16
mov
repz
xchg
data16
mov
adc
call
or
retf
sub
add
inc
sub
test
or
sub
hlt
daa
movs
push
call
repnz
and
push
dec
push
mov
push
pop
lea
lea
rep
push
and
sbb
or
add
in
sbb
push
lea
lock
adc
push
push
cwde
cli
test
jge
lea
je
pop
mov
jmp
jle
mov
lea
mov
call
push
push
mov
retf
mov
fs
(bad)
fwait
mov
push
shl
lea
inc
cld
stos
jge
or
movs
push
movs
push
or
push
retf
mov
push
sti
mov
mov
mov
movs
call
or
mov
pop
cdq
xchg
add
sub
in
aas
add
lds
push
xor
inc
mov
or
mov
jae
add
pusha
test
add
push
xor
jnp
fisttp
sub
xor
adc
jg
adc
outs
mov
out
ja
xchg
sar
(bad)
mov
jne
mov
(bad)
mov
je
xor
lods
xchg
ror
leave
call
mov
jl
stos
rol
push
add
pop
pop
aas
cld
push
and
mov
jbe
pop
cmp
(bad)
adc
xor
xlat
adc
xchg
inc
rcr
(bad)
fs
je
inc
add
cmp
jl
jmp
jb
dec
adc
xor
mov
mov
(bad)
mov
push
test
jle
lea
cmp
jg
inc
add
cmp
mov
hlt
add
mov
push
test
cmp
jg
mov
daa
pop
xor
jmp
cmp
lea
mov
out
(bad)
(bad)
je
test
jl
aaa
lea
cmp
jl
dec
sub
test
jge
add
jae
mov
aaa
add
add
dec
sbb
push
fdivr
push
pop
mov
jmp
js
jle
inc
jg
mov
jbe
jle
push
ret
aas
push
add
in
cld
pop
inc
sbb
dec
sbb
out
stc
jmp
push
and
jmp
out
xor
push
xchg
jecxz
outs
pavgw
sub
shl
jo
ds
mov
push
test
inc
bound
xchg
jg
mov
jmp
jbe
cmp
scas
jle
and
fsubp
push
or
imul
dec
fnstenv
jne
or
or
std
push
mov
dec
dec
or
nop
call
dec
add
test
je
and
and
cmp
into
out
mov
sub
push
cwde
(bad)
(bad)
cmp
jne
push
call
cmp
jne
test
cmps
(bad)
sub
jne
push
push
and
aaa
cs
add
mov
call
jle
pop
aaa
cmp
je
(bad)
fnsave
jne
inc
and
call
cmp
das
cmp
push
in
call
jmp
(bad)
fild
or
enter
lea
sub
(bad)
mov
into
push
popa
jne
ja
mov
in
mov
mov
call
leave
cmp
je
push
push
push
call
lea
xchg
xor
mov
push
icebp
lds
add
test
mov
lds
mov
lahf
retf
je
mov
sub
push
outs
out
(bad)
inc
lods
cmp
lea
jne
call
call
jae
jne
into
push
call
cmp
mov
add
movs
jae
call
mov
push
mov
mov
sbb
sbb
push
cmp
mov
add
popf
outs
std
mov
fst
rol
xor
aad
inc
shr
mov
into
pop
xchg
push
push
sbb
dec
inc
fwait
mov
je
(bad)
(bad)
frstor
pushf
add
dec
xor
xor
call
(bad)
mov
jne
xchg
nop
inc
nop
sub
sub
loop
aaa
add
call
test
mov
add
ficom
enter
push
(bad)
and
mov
mov
jecxz
cmc
call
jmp
sbb
fisttp
ja
or
dec
xor
inc
and
sbb
push
repz
(bad)
fucomp
(bad)
pop
push
mov
mov
mov
movzx
mov
call
jg
pop
mov
mov
push
mov
push
sub
cmc
(bad)
sub
add
pop
std
sbb
or
(bad)
(bad)
jmp
push
pop
cmp
adc
or
(bad)
mov
or
xchg
mov
jl
js
lahf
cmp
sbb
inc
sbb
mov
push
push
ja
add
call
push
cmp
dec
or
call
add
scas
cmp
jne
cmp
je
and
pop
sti
es
sbb
je
call
mov
push
call
lock
jo
jecxz
adc
call
pop
ds
jo
mov
xchg
mov
jb
inc
les
dec
mov
push
dec
pop
mov
push
dec
daa
mov
test
dec
push
lea
inc
xor
push
dec
adc
mov
pop
pop
stos
(bad)
jb
enter
cdq
xor
call
out
mov
sbb
sub
shr
dec
cwde
adc
(bad)
xor
jecxz
and
je
or
jg
loop
in
and
jmp
neg
xor
add
jb
cmp
xchg
ror
push
cmp
inc
add
add
sbb
rcr
push
mov
push
retf
call
pop
mov
xor
pop
pop
mov
xchg
icebp
call
adc
inc
hlt
mov
fsub
pusha
sahf
push
mov
ss
retf
call
add
mov
or
xor
hlt
sbb
dec
fwait
jp
add
pop
loopne
sbb
jmp
xchg
fs
movs
call
jmp
push
push
fadd
fucomip
call
pop
cmps
or
push
pop
or
xor
add
or
add
push
pop
xor
bound
pop
sbb
inc
repnz
(bad)
push
jg
add
push
call
ret
(bad)
enter
inc
xor
lds
ret
mov
je
mov
clc
dec
mov
inc
or
sbb
push
mov
loope
inc
add
push
call
loop
mov
cmp
jne
pop
pop
js
out
call
push
call
cdq
xchg
sbb
leave
cmp
and
mov
leave
out
inc
adc
inc
or
jo
lea
push
push
push
push
jg
idiv
xor
push
mov
push
sysenter
test
and
jo
ror
push
call
adc
retf
cmp
sbb
and
std
(bad)
fst
adc
push
je
std
out
sub
xchg
dec
in
push
call
ja
idiv
or
push
mov
adc
push
les
lea
push
outs
loop
in
call
fmul
cli
or
add
je
movzx
sub
push
mov
je
outs
or
inc
push
pop
lea
xor
jmp
or
jp
xor
add
add
mov
loope
mov
mov
adc
fild
idiv
pop
push
xor
cmps
inc
add
add
ret
mov
outs
push
add
cmp
jl
xor
jbe
cmp
ror
je
(bad)
aas
rcr
pop
shl
cmp
mov
in
push
mov
adc
push
(bad)
cmp
je
mov
jge
inc
jno
fistp
and
pop
cmp
jbe
pop
mov
call
into
call
push
call
adc
loopne
inc
xchg
mov
or
js
sbb
add
popa
adc
shr
jle
push
mov
lea
xor
mov
int3
cmp
xor
jge
mov
mov
mov
jne
sbb
or
scas
out
jbe
push
fnstenv
je
sub
call
inc
fs
aas
push
push
call
mov
pusha
and
mov
mov
add
sbb
mov
push
stos
fadd
es
call
(bad)
(bad)
jg
mov
cmp
iret
mov
mov
je
push
call
pop
or
ins
je
mov
push
inc
sub
pop
push
push
call
push
std
or
jne
mov
push
call
adc
add
fist
mov
push
popa
aas
xchg
sub
xor
call
pop
outs
cld
mov
jmp
cmp
jne
cmp
je
cmps
jbe
xor
jbe
mov
icebp
jne
push
lea
ds
dec
call
push
lea
push
in
mov
push
out
xchg
call
jmp
mov
mov
stc
push
sbb
jmp
mov
cmp
ret
into
mov
lea
fadd
popf
stc
inc
add
call
mov
mov
jmp
xchg
push
push
sbb
mov
dec
inc
dec
jge
dec
fistp
push
mov
clc
(bad)
(bad)
out
mov
mov
cmp
cld
inc
je
mov
cmp
je
cmp
jne
cmc
outs
push
call
ret
inc
xor
push
inc
push
hlt
push
push
sbb
retf
call
inc
inc
cld
xchg
xchg
cmp
je
dec
push
jge
stos
stos
stos
jg
mov
inc
call
jg
out
sbb
inc
push
push
sbb
push
call
fucom
clc
jmp
push
call
push
push
push
adc
jge
lea
outs
arpl
add
lea
mov
push
retf
retf
inc
rol
or
in
dec
xchg
push
call
(bad)
jmp
cmp
jge
neg
add
jne
mov
cmc
inc
jp
jge
jne
push
jl
mov
or
sbb
push
push
add
loopne
mov
add
inc
inc
setne
outs
aad
push
push
loop
adc
xchg
idiv
cmp
or
adc
or
adc
mov
addr16
rol
inc
call
iret
push
fsub
sbb
shl
call
out
pop
repnz
call
jo
mov
(bad)
out
push
add
push
push
push
push
push
(bad)
push
arpl
mov
push
jne
hlt
pop
pop
(bad)
call
push
(bad)
mov
push
mov
xor
cmp
je
mov
lea
into
test
je
mov
xor
inc
push
clc
(bad)
or
cmp
push
lea
push
cmp
jne
lea
outs
in
add
inc
mov
call
cmp
cmp
mov
call
dec
mov
cmp
iret
or
add
test
mov
test
push
(bad)
call
mov
dec
je
dec
je
sub
je
dec
je
dec
je
mov
adc
lds
ins
xchg
xor
(bad)
aam
jno
inc
cmp
je
test
jne
repz
call
(bad)
mov
jmp
push
jmp
push
jmp
push
inc
cdq
out
call
cmp
movs
and
pop
and
sub
ret
mov
icebp
adc
retf
and
cmp
sub
mov
push
scas
stos
push
mov
jle
inc
sub
dec
cld
mov
clc
test
cmp
mov
mov
mov
call
push
aam
or
xchg
push
push
push
lea
call
vpsadbw
stos
push
popa
ins
paddw
jge
push
add
(bad)
fistp
fild
push
mov
cmp
pop
jne
call
mov
xor
xor
inc
lea
(bad)
cmp
call
test
mov
cwde
add
movzx
inc
inc
shr
and
mov
je
mov
cmp
je
jmp
add
leave
jmp
inc
mov
cmp
jl
cmp
mov
pop
sub
jnp
ror
jg
in
and
test
rol
js
mov
cli
es
call
mov
call
mov
ror
scas
sbb
or
clc
je
cmp
neg
sbb
pop
neg
in
inc
cld
mov
inc
lock
mov
xchg
aas
add
aaa
daa
add
push
add
adc
test
mov
loopne
cmp
mov
mov
cmp
je
sahf
pushf
mov
mov
push
add
sbb
in
add
xchg
xlat
scas
and
into
std
push
or
call
xor
fdivp
mov
out
fcmovb
je
mov
jne
mov
push
call
add
ds
mov
push
call
call
adc
fistp
xchg
cmp
sbb
ret
je
call
call
adc
jb
stos
call
outs
outs
cli
mov
and
and
leave
push
std
sub
(bad)
push
push
push
push
push
mov
push
call
mov
call
pop
sub
jle
mov
retf
mov
je
(bad)
jmp
fwait
xor
jmp
loopne
add
pop
sub
push
mov
push
lea
test
lea
ficomp
sbb
mov
hlt
push
call
push
push
adc
cmp
nop
div
push
into
cdq
fist
mov
je
fst
mov
push
call
fimul
cld
sbb
or
inc
cld
out
adc
retf
outs
xor
push
outs
jmp
pop
xor
add
pop
mov
cdq
clc
mov
push
call
or
movs
(bad)
cmp
jnp
sar
push
sar
stos
into
mov
hlt
pop
adc
cmp
adc
mov
inc
mov
call
inc
hlt
jmp
fild
lea
push
call
lea
inc
sub
adc
fwait
pop
cmp
call
mov
push
push
call
or
mov
je
pop
lods
int3
inc
push
cdq
into
pop
out
aad
pop
sub
ret
push
adc
jp
add
push
inc
out
cld
call
(bad)
pop
pop
cmp
sbb
mul
sbb
call
push
loop
sbb
jne
adc
mov
call
mov
aaa
div
jae
retf
push
pop
pop
into
iret
add
cld
adc
pop
call
or
sbb
xchg
call
lea
fwait
call
mov
in
mov
call
adc
test
call
popa
gs
mov
and
jns
push
mov
call
scas
aad
or
jbe
push
dec
and
test
mov
lea
pushf
int
test
mov
or
or
retf
mov
mov
hlt
call
xor
call
bound
mov
xor
mov
add
or
pop
push
call
ja
pop
push
or
pop
add
pop
repz
out
call
adc
sub
push
add
push
je
sbb
mov
mov
sbb
pop
or
pop
add
adc
inc
or
xor
sar
(bad)
jle
popf
inc
inc
and
pop
call
rcr
push
into
call
lods
(bad)
fisttp
in
out
mov
retf
call
into
sbb
sub
jle
sbb
mov
xor
lea
adc
xor
cmp
mov
and
sbb
xor
xor
mov
adc
pop
mov
inc
test
mov
sahf
push
idiv
je
mov
jo
cs
sub
pop
je
sbb
cmp
xchg
and
bound
jmp
fldcw
lea
pop
call
inc
cld
out
cmp
loope
jnp
xchg
mov
or
iret
popa
int3
inc
fild
call
std
call
inc
mov
popa
mov
fadd
call
shl
outs
call
push
mov
add
mov
and
fwait
test
iret
call
lea
into
fld1
mov
pop
xchg
std
mov
cld
call
push
lock
mov
ins
cmp
loope
sub
idiv
pusha
fwait
ja
(bad)
out
jg
mov
add
dec
pop
jge
call
pop
pop
adc
sahf
push
in
xor
pop
jno
popa
or
adc
sub
pop
adc
jno
test
mov
or
(bad)
(bad)
out
jne
mov
mov
mov
lea
mov
dec
popf
loop
add
mov
mov
call
test
fidiv
dec
sbb
cmps
rol
in
or
test
xor
adc
dec
or
arpl
stos
test
push
ja
push
push
(bad)
in
popf
sbb
clc
aas
clc
inc
add
cmp
mov
jne
call
jb
push
call
shl
jg
xor
cmp
jne
ja
add
cmps
sbb
sahf
fbstp
add
inc
outs
std
xor
ss
jo
cmp
je
fcom
out
hlt
push
call
mov
inc
in
mov
push
call
cmps
pop
sti
xor
nop
add
dec
sbb
test
arpl
or
retf
cli
fcomi
fucomp
daa
mov
and
jmp
cs
sbb
cwde
shr
not
cmp
iret
sti
sbb
push
(bad)
clc
pop
jle
repnz
retf
(bad)
rcr
jle
mov
je
or
sub
inc
sbb
sbb
pop
sbb
test
pop
inc
(bad)
pushf
(bad)
test
test
cld
test
mov
popf
lods
daa
adc
add
cmp
in
test
xor
js
dec
push
xchg
mov
pop
test
pop
call
pop
mov
mov
xchg
je
retf
std
jne
aas
hlt
jbe
call
add
dec
je
enter
nop
mov
inc
in
test
stc
and
adc
add
push
test
jge
fnsave
ret
je
sub
push
inc
daa
pop
adc
sub
jb
cli
jp
jbe
(bad)
push
push
call
or
mov
or
xor
rol
lods
ret
xor
outs
and
nop
dec
cmp
jl
cmp
je
div
adc
cmp
mov
data16
bound
sbb
inc
adc
mov
(bad)
stos
and
stos
out
cmp
mov
xlat
and
ss
dec
fld
rcl
add
mov
aam
cmp
aaa
je
sar
jno
in
jl
jge
mov
mov
push
add
lock
jecxz
(bad)
push
call
call
and
xchg
ret
sbb
push
add
jle
cmp
adc
bound
sahf
fiadd
push
les
inc
pop
mov
mov
inc
rol
dec
in
pop
sub
sub
nop
add
loopne
aas
jmp
pusha
cmp
push
mov
push
mov
jne
cmp
sub
inc
je
out
or
mov
mov
push
pop
push
div
je
push
mov
mov
shr
dec
cmps
mov
mov
pop
inc
ja
push
push
push
inc
xchg
add
les
loop
call
push
jl
xchg
call
lods
pop
add
jg
lea
push
lea
push
call
or
push
push
push
call
sub
pusha
out
push
fstp
add
mov
daa
or
xor
cmp
ret
xor
lods
xor
mov
retf
jl
mov
cmps
mov
lea
xchg
ja
mov
dec
addr16
push
cld
cmps
push
fnstenv
add
call
mov
cmp
fidivr
pop
mov
mov
(bad)
(bad)
movs
loopne
pushf
push
in
pop
cld
call
inc
adc
daa
fdiv
push
call
enter
adc
inc
fcom
adc
mov
iret
es
rcl
push
(bad)
(bad)
(bad)
mov
xor
mov
sub
jns
xor
mov
sub
test
adc
or
(bad)
jle
(bad)
aam
mov
clc
mov
cmp
sti
outs
add
iret
jle
mov
cmp
or
(bad)
jmp
cmp
jle
mov
lea
mov
call
push
push
movs
call
lea
push
call
mov
mov
adc
cmp
xor
adc
adc
mov
aam
fcomp
mov
cli
lock
test
sbb
sar
xchg
aaa
push
mov
je
mov
add
pop
jmp
dec
inc
inc
cmp
adc
mov
jo
js
cmp
js
jnp
push
xchg
idiv
call
adc
(bad)
icebp
idiv
scas
or
add
add
ss
sbb
into
call
mov
ja
mov
mov
fs
mov
call
movs
in
retf
test
jne
or
in
lds
mov
jo
ret
je
or
mov
adc
add
and
jle
jge
(bad)
fmul
(bad)
sti
pusha
push
sbb
xchg
xor
cmp
mov
dec
sbb
push
or
cmp
inc
or
jecxz
sbb
add
mov
lahf
fidivr
xlat
fcomip
scas
push
push
call
fwait
mov
pop
xchg
cmp
add
mov
adc
dec
push
cmp
je
or
xor
or
and
jg
cmp
je
mov
pop
mov
mov
and
cmp
xchg
push
cmovne
cmp
add
xor
(bad)
call
mov
mov
dec
push
push
call
add
and
mov
mov
sub
inc
sbb
(bad)
popa
mov
imul
xor
mov
call
int
pop
pop
pop
fwait
add
fsubr
xor
inc
mov
mov
cwde
lea
add
or
jmp
adc
sub
ror
cld
das
or
ja
(bad)
dec
clc
dec
mov
dec
push
mov
call
or
pop
adc
xor
cmp
jne
aas
sub
xor
lea
sbb
jp
pop
push
pop
xor
cmp
stos
sar
aas
clc
daa
out
push
jg
jle
xor
mov
push
adc
call
cmp
jne
dec
mov
jmp
cmc
lahf
xchg
push
ret
je
push
call
push
movs
pop
adc
pusha
ins
xor
mov
push
rcl
call
jae
dec
jg
push
movs
jge
push
pusha
xor
cmp
cwde
add
call
pusha
inc
lds
stc
stos
cld
out
(bad)
mov
xchg
pop
adc
test
push
lea
call
cmp
xlat
je
mov
cmp
loopne
or
leave
cmp
aaa
pusha
adc
sbb
sub
sub
sahf
mov
or
jge
mov
je
add
add
je
inc
rcl
mov
dec
xchg
xchg
inc
mov
aam
into
je
cld
inc
in
call
mov
and
inc
call
cmp
dec
add
lea
cmovno
call
cmp
pop
je
xor
mov
or
aas
or
add
mov
cmp
jne
pop
mov
pop
cmp
je
lea
int3
push
mov
dec
mov
call
hlt
lds
psubsb
mov
push
lds
mov
inc
mov
outs
test
fs
(bad)
pop
add
sbb
xlat
mov
out
sti
lock
call
push
call
pop
mov
mov
ror
jmp
inc
je
mov
push
add
call
mul
test
cld
outs
xchg
cmp
sbb
in
psubsb
cmp
inc
call
push
hlt
outs
aaa
jae
pop
jne
stc
int
adc
gs
cmp
je
cmp
push
adc
lahf
inc
clc
cmp
dec
adc
mov
add
dec
push
adc
push
push
call
(bad)
mov
je
mov
lea
jle
cld
cli
mov
push
xor
xor
shl
sahf
lds
jb
es
cmc
xchg
hlt
movs
mov
sbb
jmp
les
call
inc
hlt
mov
or
push
std
pop
mov
mov
clc
aam
call
jmp
cmp
je
out
enter
js
jmp
test
fadd
push
pop
sub
cmp
pop
add
mov
sub
add
mov
call
fs
inc
rol
fdiv
sub
or
lea
sahf
cmp
push
jmp
cmps
cmp
repz
sbb
les
sub
cmp
inc
mov
xchg
clc
sub
std
jmp
inc
cmps
out
mov
ss
add
inc
clc
sub
mov
mov
(bad)
jg
repnz
add
ror
push
mov
push
mov
cmp
jg
mov
add
add
fist
sti
dec
jne
fs
in
cmp
mov
ja
icebp
fdivr
cmp
inc
cmp
jno
jno
pop
add
dec
mov
stc
add
lea
movs
sbb
shl
mov
cmp
cdq
idiv
mov
mov
lock
inc
fcom
add
jmp
dec
jle
push
and
lods
and
inc
ja
jmp
call
jle
sbb
jg
jp
add
add
xor
sbb
mov
cmp
mov
(bad)
loopne
sti
je
dec
fmul
mov
mov
jb
imul
inc
push
mov
call
cmp
je
cmp
je
adc
(bad)
(bad)
fisttp
sbb
aaa
cmp
jne
mov
jne
mov
push
test
and
add
(bad)
cmp
xor
call
adc
or
iret
push
call
mov
dec
mov
pop
clc
cmp
jne
cmp
fs
adc
in
mov
call
fist
dec
aaa
in
call
cmp
jne
mov
mov
push
icebp
push
scas
call
(bad)
mov
pop
dec
call
lods
pop
inc
cld
sbb
cmp
add
push
call
dec
aad
add
gs
fld
pop
int3
popf
jo
fld
add
push
idiv
or
in
fsubr
cli
(bad)
fucomp
das
lods
jmp
call
je
or
getsec
je
add
adc
jp
mov
or
or
enter
push
call
push
sub
mov
jbe
call
sbb
mov
ltr
sbb
jne
adc
mov
sub
lea
dec
mov
add
jne
push
lock
push
loope
loopne
arpl
push
push
ja
mov
call
fsubr
fnstcw
xor
mov
test
sahf
daa
add
dec
pop
add
adc
push
(bad)
call
sti
(bad)
dec
jne
cmp
dec
cld
gs
cwde
adc
sbb
xchg
addr16
or
(bad)
popf
xor
call
mov
adc
push
cmp
inc
xchg
call
les
js
inc
fiadd
into
call
xchg
add
sbb
jb
nop
fstp
or
loope
sbb
mov
ss
jne
cmp
jae
push
aaa
test
inc
fisttp
push
push
cmp
pop
inc
mov
cmp
popa
call
sbb
adc
and
call
cmp
jg
cmp
jg
and
(bad)
cmp
jge
(bad)
in
and
fld
inc
call
sub
cmp
jle
cmp
or
push
pop
cmp
mov
sub
cmp
jle
mov
jmp
mov
mov
mov
push
das
and
fisttp
scas
jg
sbb
mov
jmp
lock
call
inc
popa
loopne
pusha
dec
pop
dec
jmp
test
cmp
jge
add
enter
je
pop
adc
xor
mov
test
sbb
add
pop
cmp
mov
adc
mov
inc
clc
dec
push
arpl
mov
lea
push
call
cdq
sbb
adc
and
adc
cli
aam
pop
jg
je
mov
test
or
cmp
daa
int
cmp
sbb
xor
sbb
jo
sbb
xor
je
pop
add
inc
adc
jmp
in
ins
call
test
mov
mov
mov
jg
sar
sub
adc
and
push
jge
fnsave
xor
pop
mov
jmp
jo
mov
out
jnp
stos
mov
in
dec
sbb
inc
lods
pusha
js
and
and
idiv
dec
je
mov
xchg
push
test
je
mov
mov
(bad)
jg
or
je
call
test
cs
mov
mov
dec
or
retf
mov
jne
cmp
cpuid
xor
dec
push
cmp
push
shl
repnz
xor
pop
mov
fsub
cmp
and
xor
or
hlt
je
daa
std
push
lds
lahf
addr16
xor
mov
out
pop
fwait
mov
or
call
fsubr
mov
aaa
cdq
aas
mov
mov
push
hlt
xchg
add
sub
inc
add
mov
dec
cdq
push
mov
push
das
dec
call
jmp
inc
mov
test
ret
pushf
inc
jmp
les
pusha
push
out
sbb
wbinvd
out
push
lea
push
push
or
mov
mov
mov
je
scas
pop
xor
or
cmp
jne
mov
lea
clc
imul
or
je
pusha
cmp
pusha
iret
test
mov
cld
fs
push
cmps
dec
add
jmp
jne
mov
inc
pop
jle
jne
test
sbb
add
mov
sbb
(bad)
out
xor
pop
ja
shl
sbb
xchg
push
lahf
test
je
les
add
xchg
daa
addr16
xor
xor
and
mov
rcl
or
clc
call
pop
jmp
jb
call
pop
cmp
xor
pop
and
mov
enter
inc
call
adc
iret
push
cmp
call
je
gs
mov
into
push
jecxz
(bad)
out
bound
mov
(bad)
pop
stos
sub
(bad)
call
add
lds
dec
cmp
fild
or
push
cmps
and
(bad)
fstp
lea
inc
(bad)
cld
mov
sbb
cld
icebp
add
cmp
jl
cmp
add
inc
je
sbb
(bad)
jne
mov
cmp
out
jle
mov
or
sahf
push
sahf
inc
fst
jmp
cmp
xchg
inc
(bad)
cmp
jge
cmp
je
mov
jne
mov
jecxz
call
lea
fucomip
and
mov
mov
mov
push
lea
mov
push
xchg
jge
pop
test
adc
test
or
or
mov
cmp
test
push
mov
call
movs
push
jne
mov
repnz
pop
sub
in
(bad)
aaa
ror
test
call
jmp
mov
jmp
push
call
out
adc
cmp
mov
ja
adc
mov
jbe
std
pop
std
dec
add
push
push
aam
fcmovb
inc
push
aas
das
push
jle
inc
mov
mov
jmp
pop
add
or
push
push
jmp
push
mov
cmp
jne
cmp
mov
jmp
cmp
mov
or
inc
setg
push
clc
fcomp
cmps
call
clc
cmp
fild
lods
or
add
popa
pop
mov
ins
add
cmp
out
outs
clc
into
test
jge
mov
sub
inc
inc
mov
(bad)
jle
xor
sahf
mov
cli
inc
inc
inc
call
outs
in
scas
mov
sahf
js
test
push
sbb
or
out
jp
push
mov
mov
fldenv
add
adc
dec
out
push
xor
xchg
fnstenv
add
gs
(bad)
call
(bad)
jg
out
out
adc
int3
add
outs
inc
and
pxor
punpcklbw
jecxz
mov
mov
movq
ret
and
in
push
ja
mov
adc
outs
and
adc
pshufw
movdqu
or
js
movq
psrad
dec
enter
jmp
in
pand
paddd
adc
jbe
xlat
jne
loop
ret
push
push
inc
(bad)
(bad)
std
into
in
sbb
cmc
pmuludq
adc
psrldq
mov
ja
jo
mov
or
(bad)
aam
add
and
add
mov
mov
fist
add
sub
aam
inc
mov
or
push
push
mov
shl
mov
cli
push
mov
push
lea
push
mov
mov
push
(bad)
mov
call
add
ins
and
add
inc
dec
sar
add
adc
(bad)
call
mov
sti
add
test
je
mov
and
cmp
das
and
(bad)
dec
lea
push
push
push
mov
push
call
xor
mov
adc
xor
(bad)
jge
push
sar
and
call
push
call
mov
mov
shl
xor
(bad)
call
jge
dec
imul
mov
sub
mov
adc
jne
aam
pop
and
sub
scas
mov
sbb
add
fistp
and
call
add
fabs
outs
mov
push
push
call
pop
pop
pop
pop
add
and
add
push
add
or
inc
or
in
mov
and
fstcw
call
pop
fldcw
fistp
sbb
jge
fldcw
push
or
cmp
hlt
outs
sub
cmp
or
cmp
ret
icebp
jne
adc
cld
shl
jmp
adc
xor
pop
mov
retf
call
or
ror
enter
mov
pop
pop
pop
(bad)
ret
mov
jbe
push
call
or
add
cs
cmp
mov
es
mov
inc
or
dec
add
push
call
std
jmp
pop
or
lea
push
push
pop
clc
xchg
(bad)
(bad)
jmp
movq
pshufw
movq
movq
lea
(bad)
out
and
push
sub
psrlw
paddw
push
pand
push
movq
pop
pop
test
or
xor
pop
pusha
js
aaa
loop
or
mov
icebp
ja
aad
sbb
sbb
or
arpl
xchg
add
xchg
stos
loop
mov
outs
ins
mov
push
mov
push
add
push
call
cmp
cmp
stos
cwde
(bad)
mov
adc
test
icebp
push
(bad)
out
jle
cmp
mov
or
aaa
and
call
add
sbb
fcomp
fld
fmul
fsubr
pop
idiv
sub
fdivr
fsub
sbb
out
(bad)
dec
fmul
fst
fld
fmul
fld
fmul
faddp
fmul
or
rcr
and
fsubr
jo
ret
add
push
lds
add
xchg
ins
fmul
std
call
xor
pop
and
fld
fistp
frstor
jmp
aaa
aam
je
adc
push
call
sar
aaa
inc
les
jmp
or
clc
syscall
lahf
inc
add
out
mov
cmps
and
shr
je
cmp
je
cmp
(bad)
aas
add
pop
test
jge
xor
jmp
test
je
xor
xlat
fldenv
add
push
push
call
jmp
pushf
jno
pop
pop
sahf
int3
lahf
lock
sar
cmp
push
movs
adc
shl
or
mov
call
jp
test
inc
or
test
xchg
mov
test
pxor
movq
mov
std
inc
and
je
inc
shl
shl
shl
lea
mov
pop
inc
sbb
ret
ja
xlat
movzx
jle
dec
sub
pop
sbb
into
lea
add
dec
pusha
test
int3
adc
je
icebp
cmps
xchg
inc
sbb
nop
push
test
jle
gs
mov
mov
cmp
call
loopne
das
and
push
call
cmps
dec
test
pop
adc
loopne
jmp
push
retf
and
mov
std
jg
fwait
pop
or
test
shr
(bad)
lea
mov
jmp
mov
cmp
mov
and
mov
lea
push
push
push
call
int
mov
outs
inc
add
outs
adc
cmp
(bad)
dec
stc
ror
outs
dec
and
pmullw
psrlw
enter
gs
imul
jg
sub
dec
mov
dec
aaa
add
or
fmul
add
jns
and
jb
push
add
in
xchg
fdiv
lea
mov
cmp
imul
imul
rcr
or
push
je
mov
inc
mov
push
cmp
cli
dec
mov
movq
sbb
mov
pop
paddw
mov
mov
sbb
push
cdq
inc
outs
loop
dec
adc
dec
aaa
cld
test
je
std
test
(bad)
pusha
inc
cmps
fcomip
xchg
out
and
jg
mov
movd
pshufw
pmullw
xor
inc
adc
inc
jne
lea
shl
mov
cmp
je
int3
sbb
enter
data16
dec
push
std
dec
outs
mov
mov
movq
or
jo
std
movd
pshufw
enter
or
loope
xchg
je
lea
pop
je
jae
mov
sub
cmp
je
gs
pop
cld
sbb
push
add
push
out
test
dec
out
inc
cmp
xchg
ret
xor
and
xor
out
mov
pop
sar
mov
push
sbb
add
in
mov
and
icebp
cmp
and
jne
movq
inc
aam
mov
mov
sar
test
push
std
mov
jmp
mov
pusha
call
sti
cmps
ja
mov
mov
mov
sar
add
jmp
inc
fadd
or
test
je
test
push
add
or
(bad)
out
dec
movq
je
repnz
add
inc
in
jne
mov
mov
mov
and
ins
mov
cld
mov
sar
pop
loop
adc
dec
clc
mov
jmp
mov
mov
and
sar
popf
inc
cmp
inc
dec
hlt
mov
sar
adc
cmp
loop
pop
aad
inc
lahf
add
mov
push
push
push
lea
xlat
lahf
xor
push
call
fwait
mov
mov
add
data16
inc
mov
je
ret
loopne
lgs
mov
rol
and
call
inc
nop
mov
lea
movsx
push
pand
push
pop
shr
sar
outs
jo
xchg
mov
cmp
dec
fmul
cld
movd
jmp
jle
iret
push
cld
test
je
loopne
dec
addr16
cmp
xchg
or
xor
popa
jo
scas
adc
ror
mov
sahf
fimul
sbb
jg
rol
pop
dec
hlt
jmp
mov
cmp
jge
dec
or
das
mov
test
je
movzx
push
lea
pop
add
sti
(bad)
jmp
inc
sbb
push
push
call
sub
sar
mov
loope
lock
stos
movq
fnstsw
lea
push
mov
xchg
jg
fist
cmp
jge
mov
lock
mov
cmp
clc
(bad)
jg
add
retf
jge
jmp
jg
inc
mov
dec
call
cmp
cmp
push
call
mov
dec
mov
ror
or
fbld
cmp
lock
mov
fadd
out
cmp
push
jne
adc
test
cmp
push
push
push
leave
out
inc
adc
sub
push
push
lea
out
stc
add
sbb
call
in
(bad)
sbb
lea
cmp
mov
jbe
jge
jl
in
lea
scas
call
jg
add
dec
jne
jmp
ja
icebp
(bad)
call
dec
ja
mov
enter
inc
mov
(bad)
(bad)
dec
mov
mov
mov
test
jle
cmp
je
prefetcht0
mov
inc
outs
or
shl
paddd
shr
sar
adc
(bad)
pmullw
psrlw
(bad)
jmp
movq
sub
add
add
jmp
movq
movq
bswap
cmp
punpckhwd
punpckhdq
sysexit
xor
mov
paddw
xor
nop
push
xchg
push
nop
or
or
mov
in
rol
retf
in
push
rcl
push
xchg
mov
test
sub
test
jne
add
cdq
pop
rol
pop
jmp
imul
cmp
cmps
add
daa
shl
ret
and
mov
(bad)
shr
dec
clc
pop
sbb
mov
movd
pop
cmovbe
icebp
lock
sahf
test
inc
cmps
jle
fwait
in
test
jne
paddd
pop
pop
in
hlt
(bad)
call
inc
aaa
icebp
mov
xchg
add
adc
mov
mov
push
mov
sub
jns
sub
jmp
mov
and
sbb
cmps
mov
sub
pop
rol
cmp
lds
push
cld
jmp
lock
icebp
push
call
mov
add
dec
jmp
xchg
or
sub
xlat
adc
xchg
lahf
or
mov
add
imul
call
lea
push
push
jne
call
or
test
add
sbb
jne
add
out
mov
mov
push
push
mov
cmp
in
stos
mov
je
jge
repz
fwait
cmp
jmp
lea
push
xchg
push
std
jnp
call
mov
sub
or
fadd
fimul
jecxz
mov
jp
call
inc
cmp
sub
adc
jo
inc
jo
inc
sbb
inc
or
pop
je
inc
push
cmp
ret
dec
call
sub
fstp
push
fst
fmul
fld
fmul
sub
add
imul
cli
jnp
or
push
adc
jo
pop
push
(bad)
(bad)
out
arpl
pop
pop
fld1
fdivp
fld
cmp
inc
push
fmul
fsubrp
fmul
fst
fiadd
jmp
jne
out
and
dec
fcomp
(bad)
fnstsw
fstp
test
jp
fstp
fld
(bad)
sti
jae
ret
sub
enter
sbb
outs
call
dec
jo
pop
js
add
fisub
fldl2e
fwait
jb
push
pop
fild
fisub
jge
leave
fld
fmul
dec
dec
call
movzx
inc
js
pop
fild
dec
cdq
(bad)
js
dec
dec
fmul
stos
jp
cmc
(bad)
jmp
cmp
fstp
lea
fstp
mov
push
je
lea
cmp
push
call
jnp
inc
popf
fdiv
fsubr
pop
mov
inc
pusha
adc
dec
jo
inc
add
into
std
std
fsub
fstp
pop
rcr
mov
fmul
mov
mov
sub
loop
dec
js
inc
sub
fmul
sub
fstp
ret
aas
loope
sbb
inc
sbb
fistp
inc
jo
push
push
sbb
fdiv
sbb
mov
dec
and
add
popa
add
xchg
and
sbb
dec
adc
fsub
jae
mov
arpl
jno
fstp
jno
ret
sahf
out
mov
push
sbb
fsubr
enter
pop
mov
je
lea
int
push
call
xlat
cld
(bad)
dec
push
dec
call
fxch
cmp
aas
pop
cmp
mov
xor
out
(bad)
(bad)
pusha
push
mov
call
push
jmp
sti
pop
jne
ret
loope
or
sbb
mov
js
push
xor
inc
adc
sub
jbe
ffreep
mov
mov
pop
mov
mov
sub
cdq
sub
mov
mov
xchg
mov
mov
mov
adc
clc
sub
sub
sbb
add
mov
pop
mov
add
mov
int3
mov
jne
mov
call
inc
hlt
cmp
out
in
push
call
call
add
or
push
std
mov
mov
stc
inc
jle
sbb
call
pop
je
jne
mov
push
call
cmp
jge
sub
dec
xor
mov
add
push
xlat
push
push
std
mov
sub
cmp
(bad)
call
mov
jg
add
cdq
mov
test
repz
call
cld
mov
cdq
idiv
push
push
mov
neg
mov
sar
push
call
fcomip
scas
mov
or
clc
push
call
xchg
jae
push
add
test
pop
jle
lea
mov
out
rcr
push
scas
leave
lock
ret
or
or
and
push
cld
imul
inc
add
(bad)
cmp
mov
jle
lea
lea
jmp
mov
mov
jno
jmp
cmp
mov
mov
fmul
ja
dec
loopne
or
mov
jmp
mov
add
mov
sub
add
mov
sar
xchg
mov
jmp
call
push
call
inc
add
cmp
jl
jmp
clc
xchg
and
nop
ins
mov
sbb
jp
in
ins
jmp
push
mov
push
mov
call
call
cli
pop
je
cmp
jge
lea
push
inc
mov
push
cmp
inc
lea
add
pop
je
shr
iret
and
cld
inc
pop
dec
jmp
or
adc
adc
push
or
ins
clc
outs
leave
retf
or
inc
hlt
shl
test
push
cmp
leave
jne
mov
sub
adc
push
add
push
push
call
sbb
pop
pop
(bad)
aas
mov
in
mov
jmp
mov
mov
mov
push
or
sub
sub
gs
and
popa
jo
fwait
mov
mov
sub
je
sbb
sbb
cmp
dec
pop
pop
mov
out
(bad)
out
xchg
mov
add
sub
mov
add
inc
adc
inc
in
mov
mov
add
mov
popf
loopne
inc
cmc
inc
lock
lock
mov
je
xchg
pop
hlt
out
mov
lea
inc
fmul
xor
sbb
out
mov
inc
lea
jbe
pop
cmp
mov
in
call
lea
int3
(bad)
call
sbb
dec
pop
gs
call
xchg
push
call
or
push
inc
cld
cmp
xchg
jne
xchg
inc
push
call
das
sti
and
mov
test
outs
clc
inc
pop
push
mov
lea
push
rep
call
cld
pop
pop
push
add
jecxz
je
movs
adc
push
mov
mov
hlt
fcomip
out
or
inc
pop
repnz
mov
mov
add
aaa
and
inc
mov
add
add
icebp
sti
fwait
bound
movs
push
lea
ds
cmp
mov
jmp
xchg
and
cmc
pop
and
clc
cmp
je
cmp
mov
and
push
lea
push
push
call
imul
or
shl
push
mov
fsubr
shl
repnz
push
pop
bound
in
fild
xchg
pop
(bad)
push
inc
inc
jo
addr16
adc
inc
push
sub
and
mov
push
and
push
in
jne
jp
xchg
fcomp
data16
mov
and
movzx
jne
gs
add
mov
loopne
lea
and
(bad)
sbb
inc
push
pop
mov
push
and
jmp
int3
mov
mov
inc
jl
dec
cmp
jne
inc
ret
jle
inc
lock
or
leave
or
setge
cmps
call
sahf
ror
push
xor
std
aas
sbb
fcomp
cmp
mov
fwait
out
mov
inc
dec
sub
adc
jg
dec
push
pop
add
add
mov
lea
lea
adc
push
inc
mov
stos
aas
inc
test
inc
ret
ja
test
cmp
lea
inc
sbb
idiv
pusha
push
lea
into
call
dec
push
jmp
inc
cmp
mov
rol
add
cld
shl
xchg
test
xchg
pop
lods
sti
mov
inc
xchg
xor
imul
lea
push
ins
jmp
(bad)
fwait
and
sbb
fwait
mov
xchg
aam
and
or
(bad)
pushf
fstp
xor
jge
pusha
fwait
lahf
jmp
adc
jmp
lea
in
arpl
and
and
stos
bound
adc
cs
je
add
test
and
pop
or
mov
inc
and
jmp
adc
jae
psllq
sub
cmp
inc
mov
mov
(bad)
aas
lock
mov
and
push
call
iret
sub
mov
sub
adc
add
inc
dec
sub
jne
mov
cmp
jne
and
cmp
je
dec
mov
inc
lock
call
call
test
jmp
clc
je
loopne
cli
add
dec
mov
push
cdq
pop
idiv
push
ja
(bad)
cld
test
je
mov
pop
and
push
pop
add
jo
dec
call
add
and
fdiv
lock
pop
lock
jmp
mov
rol
push
add
(bad)
(bad)
dec
and
and
add
jmp
cmp
jne
test
je
or
or
mov
or
or
jmp
lea
push
pop
and
inc
and
ja
jnp
pop
or
and
mov
or
fsub
bound
pusha
mov
ror
repz
jmp
cmps
leave
fsub
leave
aam
mov
dec
or
mov
es
pop
movs
je
cmp
inc
dec
sub
add
add
int3
icebp
mul
lock
sub
fimul
cmp
cmp
lods
jge
sbb
jmp
or
sub
mov
mov
(bad)
dec
fadd
or
mov
mov
mov
fmul
(bad)
out
mov
or
mov
sub
jmp
mov
mov
jge
neg
test
mov
pop
fist
fstp
xlat
push
mov
dec
setg
dec
je
dec
dec
and
ds
iret
test
je
mov
cmp
and
add
add
add
jmp
xor
test
setge
mov
sbb
adc
and
add
aam
sar
jmp
inc
pop
icebp
std
pop
inc
sub
sub
jmp
xor
inc
sar
sbb
add
and
add
add
sub
sub
add
and
inc
sub
bnd
xor
inc
mov
add
inc
push
sbb
inc
push
xor
in
in
pusha
pusha
inc
lock
arpl
jle
push
imul
mov
push
cmps
push
sahf
push
rcr
in
popf
mov
les
inc
adc
or
loopne
inc
jl
pop
mov
lea
inc
hlt
jl
push
push
mov
call
mov
pop
sahf
lea
das
mov
sub
sub
sub
fnsave
cld
mov
ins
sub
test
mov
pop
(bad)
fnsave
cld
xor
cmp
setg
inc
jl
rcl
mov
test
or
cli
(bad)
mov
(bad)
setg
cmp
jne
push
push
call
add
push
push
call
or
cs
push
call
cld
xor
dec
xchg
pop
sub
and
(bad)
sbb
mov
sub
ror
pop
jb
jmp
rep
jge
mov
neg
mov
jmp
lods
test
bswap
(bad)
cmp
out
push
jl
jne
popa
jne
mov
setg
mov
js
add
mov
dec
je
dec
sbb
inc
mov
push
rol
or
test
inc
pusha
add
neg
sar
(bad)
mul
sbb
add
add
dec
sbb
inc
inc
and
inc
inc
jmp
inc
dec
jmp
test
inc
inc
add
add
aas
hlt
call
pop
xor
call
and
into
call
cld
aaa
or
icebp
or
out
mov
mov
mov
inc
(bad)
loop
aaa
cmp
inc
inc
mov
mov
and
cmps
and
mov
inc
sub
shl
and
push
mov
inc
bnd
cmp
mov
cmp
adc
fstp
push
push
push
mov
mov
inc
ins
stos
inc
adc
pop
or
mov
add
and
(bad)
cli
jg
mov
jne
mov
xor
outs
jmp
sub
or
add
(bad)
jmp
mov
jmp
and
push
mov
or
loope
(bad)
cmp
mov
jg
mov
xor
cmp
cmps
dec
mov
push
xor
sub
or
test
mov
push
pop
cmp
jne
test
je
and
into
inc
sar
jbe
push
test
je
and
stos
mov
cmp
(bad)
jae
mov
lods
aad
ja
sub
inc
xor
mov
(bad)
dec
mov
jne
mov
or
clc
adc
icebp
cld
(bad)
jmp
cmp
jne
mov
cmp
jne
or
or
outs
and
mov
xor
inc
cmp
jne
test
cmps
(bad)
jg
sti
lahf
(bad)
jne
cmp
push
mov
je
call
ffreep
jmp
cld
(bad)
(bad)
jmp
and
pop
cmc
inc
sub
or
test
je
push
mov
mov
lea
rep
je
idiv
push
test
and
cld
ret
je
mov
fiadd
fmul
or
add
loopne
dec
in
or
mov
jo
xchg
lock
in
or
ror
lea
dec
mov
cmc
pop
in
add
or
in
pop
mov
inc
or
and
jmp
pop
je
cmp
je
cmp
jne
xchg
cmp
mov
jne
out
(bad)
call
cwde
lock
neg
cmp
jle
lea
and
jmp
lock
ds
push
sub
sbb
cmp
jle
lea
cmp
cdq
loopne
nop
pop
or
jmp
repnz
or
ret
lock
lock
sub
xlat
bound
mov
loopne
loopne
or
or
cmp
jne
jo
pop
jne
test
icebp
inc
jo
jl
arpl
call
jbe
sar
pop
adc
pop
fmul
pop
loopne
pop
in
or
or
or
bound
loope
jmp
cs
and
xor
mov
or
adc
sub
sub
sub
pop
mov
cmp
push
pop
je
sub
mov
dec
xchg
push
cmp
adc
loopne
mov
mov
jmp
push
cli
jne
mov
xchg
sbb
in
push
lea
jmp
push
or
gs
fmul
lea
sub
add
or
jmp
clc
sbb
(bad)
dec
loopne
pop
dec
mov
xchg
clc
mov
je
or
sti
mov
jmp
not
and
ret
push
call
enter
out
clc
inc
push
dec
adc
and
sbb
push
mov
call
pop
je
and
out
(bad)
sub
jmp
push
clc
push
or
inc
sub
inc
mov
xor
jno
fmulp
jb
lea
jmp
push
or
aad
mov
cmps
add
pop
push
push
push
add
push
mov
mov
cmp
aad
test
je
mov
lea
out
cmps
add
sbb
cmp
inc
cmp
and
inc
inc
adc
xor
ret
adc
inc
je
ds
jb
push
fs
xor
inc
sub
(bad)
push
je
mov
test
jne
push
mov
test
jne
mov
mov
mov
mov
or
jmp
add
aas
cmp
je
mov
not
and
out
mov
mov
or
pop
pop
pop
js
push
pop
jne
test
(bad)
(bad)
ffreep
jne
push
fld
push
mov
test
jne
fstp
or
jmp
fld
fidiv
push
add
or
shl
es
mov
adc
push
mov
jno
add
jl
adc
ja
inc
sub
test
xchg
inc
pop
push
popf
adc
pop
push
jecxz
push
push
adc
add
call
pop
adc
lea
or
and
dec
repz
sbb
lea
and
sub
inc
inc
adc
clc
pop
idiv
ja
jp
push
ret
mov
mov
cdq
idiv
mov
mov
or
enter
mov
inc
mov
cmp
clc
call
jne
test
mov
push
jne
call
loop
push
jmp
call
or
dec
add
cli
push
add
add
out
(bad)
jg
inc
or
sbb
mov
idiv
push
mov
mov
(bad)
cld
sbb
idiv
mov
or
or
push
ja
sub
cmp
inc
inc
call
push
cld
daa
add
mov
jmp
push
call
or
(bad)
(bad)
fbstp
test
jne
cmp
jne
cmp
jne
inc
inc
jmp
cmp
add
adc
je
outs
mov
(bad)
loop
jmp
inc
inc
xor
mov
push
call
inc
lds
jmp
stc
xor
dec
jge
je
mov
call
pop
std
or
push
mov
call
push
aas
ret
hlt
(bad)
call
pop
test
je
mov
add
(bad)
(bad)
inc
cmp
jle
mov
jmp
cmp
jge
push
pop
neg
mov
mov
call
or
cmp
dec
push
add
xchg
xchg
scas
sti
add
addr16
inc
adc
jns
std
and
or
test
out
outs
sahf
add
dec
push
inc
and
add
pop
mov
inc
pop
fmul
fstp
fld
fistp
call
(bad)
dec
repnz
add
sbb
inc
push
mov
mov
mov
mov
mov
mov
cmps
fmul
jmp
mov
je
mov
call
inc
or
mov
setge
push
push
call
jmp
and
sbb
pop
jl
add
mov
inc
cmp
cs
sbb
inc
inc
lock
je
mov
sbb
mov
lods
adc
pop
jl
xor
iret
call
jo
faddp
imul
cmp
push
lea
mov
mov
call
mov
push
std
push
xor
cmp
mov
into
test
call
push
je
or
jl
or
xor
mov
xchg
xor
cli
outs
fmul
idiv
cmp
jne
call
je
add
dec
ins
call
mov
or
call
in
dec
and
aas
mov
shl
test
jl
mov
jmp
mov
pop
mov
xchg
mov
push
mov
mov
or
jo
mov
push
call
(bad)
or
test
pusha
fs
out
or
out
inc
outs
or
push
mov
push
(bad)
mov
mov
(bad)
(bad)
call
les
idiv
or
mov
or
xor
mov
mov
mov
inc
inc
add
pop
pop
jbe
pop
out
ja
mov
mov
mov
mov
push
sub
push
mov
out
add
call
pop
gs
mov
push
adc
dec
mov
test
mov
mov
adc
mov
inc
ja
test
into
call
dec
push
dec
pusha
and
xor
or
shl
mov
or
push
add
add
xor
mov
pop
adc
inc
sub
inc
sub
sbb
add
push
or
ja
adc
adc
call
jmp
cmps
test
je
add
call
pop
or
xchg
sub
enter
xchg
(bad)
dec
mov
jge
loop
std
ja
adc
inc
jl
icebp
jl
sar
gs
sbb
inc
jl
jge
jge
in
jmp
repnz
arpl
mov
lea
(bad)
addr16
(bad)
(bad)
mov
out
or
mov
mov
mov
mov
mov
mov
inc
js
xchg
lea
mov
mov
fstp
shr
inc
inc
push
ror
je
push
inc
fstp
add
inc
sbb
or
lock
adc
mov
add
or
movzx
cmp
movzx
mov
jge
cmc
dec
pop
je
mov
clc
call
call
sbb
add
cmp
call
aad
fist
pushf
push
call
(bad)
fucomp
ja
mov
call
pop
cmps
mov
cmp
je
push
mov
cmp
call
cmp
sbb
sub
pusha
test
fdivr
ja
div
pop
push
pusha
mov
lea
mov
dec
ret
pop
xor
adc
adc
inc
je
inc
push
xchg
jge
jg
cmp
jl
je
dec
movs
xor
ret
cmp
(bad)
jl
mov
inc
js
into
dec
cmp
pop
dec
xlat
clc
(bad)
cmp
je
push
into
outs
loopne
fucomp
sbb
jmp
cmp
hlt
cmp
jge
dec
jmp
cmp
mov
jg
pushf
xor
jge
jle
lea
call
(bad)
jg
mov
call
add
sub
in
stc
fbstp
mov
mov
mov
sbb
mov
lea
push
push
push
ins
add
lea
(bad)
int
out
ret
push
xchg
dec
jo
ud0
(bad)
stc
xchg
dec
jo
inc
xor
call
out
popf
fild
aad
inc
adc
cdq
mov
jge
pop
pop
rol
rcr
fldcw
mov
push
push
push
lea
fistp
call
xor
cmp
jge
mov
mov
or
push
popa
mov
adc
cs
sub
jbe
xchg
add
outs
shr
dec
sar
mov
adc
scas
mov
cdq
mov
mov
dec
call
sub
mov
push
call
cs
je
js
cmp
scas
out
mov
mov
add
inc
add
das
test
dec
inc
adc
dec
rol
or
push
push
cmp
mov
mov
mov
or
mov
mov
(bad)
cmc
sbb
jmp
jg
push
mov
lea
jae
cld
sub
jo
mov
je
sbb
dec
or
pushf
jle
or
les
out
sub
pop
add
inc
pop
push
mov
movs
and
outs
mov
je
cmp
je
or
add
call
xlat
push
ror
mov
dec
jmp
rol
add
mov
mov
push
mov
mov
call
ins
je
xor
or
push
or
mov
ror
mov
push
push
push
call
jne
sbb
dec
mov
call
ja
lock
ret
dec
rol
test
fild
jne
cmp
pop
fstp
lea
sbb
sbb
movs
cmp
mov
sbb
call
pop
das
xor
fstp
aas
fstp
fdivr
(bad)
cmp
inc
and
dec
inc
fld
fmul
faddp
fld
or
inc
push
fmul
push
(bad)
(bad)
ds
adc
cmp
jmp
adc
inc
dec
push
push
lea
jnp
aad
jl
dec
dec
push
call
adc
out
loopne
jns
inc
jo
retf
fstp
call
add
add
sbb
loope
jns
je
dec
pusha
fstp
pusha
inc
clc
ror
mov
out
add
imul
arpl
in
movs
cwde
in
cmp
int3
ins
js
int3
sti
outs
jns
js
xor
cmp
fldenv
mov
mov
xor
sbb
popf
enter
imul
(bad)
test
jecxz
ret
mov
cmp
icebp
push
call
(bad)
xchg
dec
push
js
jo
call
adc
mov
scas
mov
push
mov
jmp
or
call
adc
out
out
pop
add
aas
pop
dec
sbb
bound
jg
fiadd
je
(bad)
repz
add
inc
cld
shr
or
jne
call
jne
aas
sti
pop
dec
add
call
mov
mov
pop
pop
jmp
pop
pop
in
in
fild
les
push
test
dec
add
call
push
push
gs
mov
test
adc
pop
push
call
dec
adc
fistp
(bad)
pushf
sar
clc
push
call
adc
cmp
hlt
cmps
(bad)
and
in
add
adc
dec
jl
jge
inc
les
lock
clc
mov
cmp
inc
and
inc
mov
mov
sub
push
push
call
inc
push
inc
cmp
pop
je
mov
ffree
call
clc
push
call
push
call
call
(bad)
xchg
mov
cmp
pop
je
cmp
jne
inc
js
outs
and
aas
jmp
cmp
je
mov
jp
aam
ror
cmps
clc
sbb
out
lahf
xchg
cmp
je
or
push
movs
cmp
call
lock
inc
jmp
xor
cmp
lds
xor
dec
in
iret
fiadd
std
add
test
inc
mov
call
jmp
or
xor
jmp
push
call
adc
sub
cmp
jmp
mov
pop
je
fidiv
mov
push
mov
push
call
ja
out
mov
cmp
je
cmp
je
cmp
je
cmp
inc
jne
xchg
in
(bad)
cmps
jnp
cmp
cmp
mov
push
call
jmp
test
mov
je
mov
jmp
mov
cmp
jne
lea
cmp
(bad)
(bad)
dec
movzx
mov
xor
mov
inc
inc
cmp
jne
mov
clc
add
sub
xor
mov
push
or
in
sbb
call
push
(bad)
mov
or
pop
mov
movs
in
je
dec
(bad)
in
(bad)
out
xchg
or
jmp
add
push
add
pop
cld
scas
jne
jo
or
js
hlt
jg
pop
pop
pop
xor
cmp
pop
sete
xor
es
mov
push
mov
call
xor
cmp
je
fild
into
jne
cmp
je
mov
mov
sbb
inc
sub
mov
sti
loope
add
or
test
clc
out
ficom
dec
jne
or
cld
push
jp
mov
mov
push
xlat
add
jbe
pop
push
mul
sbb
ds
call
add
inc
ret
add
shl
cmp
xor
cmp
movsx
jmp
cmp
cmovbe
(bad)
(bad)
fdivr
jmp
cmp
jl
cmp
jg
pop
push
shl
or
inc
inc
cmp
jl
jmp
adc
mov
sub
add
add
(bad)
aaa
mov
pop
add
(bad)
(bad)
jg
push
push
push
mov
fstp
call
push
jmp
nop
xor
clc
pop
mov
(bad)
mov
rol
push
and
cld
or
je
jmp
inc
in
call
mov
jne
je
xor
cmp
jne
jecxz
clc
pop
(bad)
mov
je
cmp
outs
cmc
cmp
xor
ffreep
mov
push
call
mov
cmp
jne
inc
aaa
sbb
push
call
sub
pop
cmp
aaa
cmc
test
je
stos
pop
push
call
push
popf
mov
in
push
call
clc
call
jmp
mov
cli
mov
mov
cmp
and
in
adc
je
pop
cmp
cmp
sub
push
ins
cmp
jne
push
xchg
call
mov
or
push
popf
out
fstp
add
pop
push
push
mov
pop
sub
jmp
push
ins
inc
add
xchg
pop
adc
jmp
mov
fdivr
call
push
call
or
mov
jmp
inc
cmc
mov
push
fdivr
fidiv
aaa
lea
faddp
into
jne
rcr
push
jnp
test
clc
push
push
hlt
lahf
adc
out
cmp
jne
mov
sub
adc
mov
add
adc
pop
in
call
call
push
in
scas
call
test
or
outs
mov
mov
scas
cli
dec
adc
inc
pop
mov
push
aad
adc
push
shl
inc
and
add
inc
sbb
repnz
push
call
mov
or
(bad)
and
or
mov
push
xor
mov
mov
lea
les
mov
add
jmp
ror
call
fstp
mov
pop
add
dec
inc
pop
and
sub
pop
xor
cmp
xchg
dec
mov
mov
push
mov
push
mov
push
dec
cmp
hlt
jne
push
push
push
call
test
out
and
jne
call
and
sar
mov
mov
mov
sbb
call
or
sbb
and
or
pop
mov
outs
loop
js
icebp
jge
push
jmp
mov
bound
loope
push
push
cmp
into
or
ja
mov
push
push
call
jle
inc
sbb
sbb
jbe
aaa
push
in
sub
loopne
inc
cmp
push
jo
push
push
aad
cmp
jne
xor
and
rol
lahf
adc
call
push
call
nop
or
push
jge
fistp
fild
push
push
je
lea
aam
jae
sbb
add
mov
(bad)
(bad)
ja
cdq
jge
push
jmp
push
pop
idiv
push
test
push
call
(bad)
pop
pop
xor
mov
mov
les
pop
or
movzx
(bad)
(bad)
(bad)
inc
loope
or
test
jne
mov
test
jne
or
mov
mov
jmp
cmp
je
or
fucom
sti
or
adc
test
xchg
add
push
add
test
and
shr
pop
jg
aas
je
xor
adc
inc
adc
rcr
leave
push
adc
inc
pop
xchg
or
mov
ja
mov
xchg
or
rol
mov
in
stc
jbe
shr
or
jmp
xor
sbb
ja
mov
mov
int
inc
call
add
push
mov
mov
add
push
call
pop
in
sub
push
mov
xor
call
xor
cmp
mov
je
dec
add
cmp
jne
adc
test
or
ss
mov
fwait
clc
call
dec
add
add
sbb
punpckhdq
mov
ret
je
cmps
test
mov
mov
fsubp
jmp
inc
lea
push
push
(bad)
mov
sub
mov
cmp
jge
mov
dec
shl
add
call
inc
inc
add
(bad)
out
mov
cmp
jl
cmp
je
push
mov
dec
pop
fadd
call
out
mov
sub
cmp
je
mov
adc
jmp
lods
shr
inc
adc
out
and
or
cmp
xor
fldenv
push
sti
out
ror
or
or
adc
rcr
pop
adc
adc
adc
add
jmp
inc
sub
sbb
jl
push
add
jo
call
xchg
sahf
jno
(bad)
(bad)
cmp
je
sbb
sar
fnstcw
pop
sbb
cmp
out
inc
push
pop
dec
clc
ret
mov
clc
cmps
arpl
jne
call
mov
js
pop
sbb
and
ret
inc
pusha
out
jmp
test
jmp
nop
es
out
jmp
ja
inc
inc
out
jmp
sbb
jo
call
out
sbb
pop
pop
or
cmp
xor
mov
fbstp
push
mov
push
call
pop
ja
sub
scas
or
mov
cmp
jne
ja
fwait
mov
xchg
sbb
ss
mov
(bad)
out
lea
fstp
stos
push
(bad)
cmp
or
pop
jns
ss
call
mov
or
xor
enter
ins
sub
call
mov
push
pop
or
outs
mov
call
pop
push
call
mov
add
jl
fisttp
clc
sub
xchg
jns
adc
jmp
test
je
add
pop
jmp
jmp
or
add
retf
pop
aas
mov
addr16
(bad)
jmp
sub
push
dec
imul
(bad)
cmp
out
sbb
pusha
fild
jmp
and
sub
lahf
adc
pop
jo
inc
jo
mov
jmp
out
dec
add
test
xchg
daa
in
mov
inc
adc
sar
jge
push
int3
lea
xor
aaa
cmp
or
dec
in
adc
cmp
dec
(bad)
std
fistp
mov
mov
lea
jmp
cmp
aas
jmp
int3
sbb
or
ror
clc
(bad)
(bad)
(bad)
and
fsubr
add
cmp
mov
lea
push
cmps
cmp
(bad)
jmp
arpl
pop
sbb
retf
rcr
inc
or
test
fild
push
jmp
lahf
loope
push
int3
sbb
jmp
ins
mov
mov
jmp
cmc
push
sbb
(bad)
sahf
pop
outs
push
cmp
shl
jmp
and
mov
push
and
test
jmp
int3
lea
xor
ss
and
xlat
jo
imul
cs
ret
(bad)
jg
jg
sub
je
dec
je
dec
je
dec
jne
or
adc
sbb
or
or
call
cld
(bad)
call
push
sbb
cld
lds
je
ret
mov
call
mov
stos
adc
mov
arpl
scas
ret
mov
ja
emms
fild
jmp
fcomp
and
jmp
nop
jmp
ss
add
out
fstp
pop
lahf
icebp
inc
fld
push
mov
or
cmp
cmp
sbb
add
xor
jmp
xor
out
fsubr
add
adc
outs
sti
jmp
jae
outs
adc
jb
jecxz
jmp
jmp
inc
hlt
scas
das
fild
jmp
cwde
sbb
xchg
or
mov
inc
shl
cmp
jmp
mov
jae
out
cmp
mov
push
add
mov
or
dec
xchg
retf
fmul
cmp
jmp
(bad)
fdiv
jno
dec
fild
jmp
in
fadd
jmp
xchg
retf
(bad)
xchg
stos
inc
push
adc
enter
jo
xchg
inc
sub
retf
push
mov
loopne
movs
sti
pop
xor
push
imul
call
ss
cmp
jle
mov
xor
lea
call
push
int3
std
dec
sub
shl
(bad)
inc
pop
add
fsubrp
pop
es
add
pusha
outs
push
or
add
ret
or
call
mov
test
push
enter
std
call
jo
or
iret
call
jmp
loopne
push
call
imul
pop
lea
lea
call
dec
mov
push
adc
cmp
std
imul
icebp
aaa
lock
jl
outs
jne
call
sbb
inc
pop
jmp
cs
mov
cmp
jl
push
mov
push
call
jno
mov
mov
push
nop
sub
ja
jmp
cwde
xlat
jle
xlat
jg
jno
cli
std
push
xchg
mov
or
jg
jg
jmp
adc
je
dec
jne
mov
jmp
mov
sbb
push
pusha
dec
movs
push
push
jmp
cmc
(bad)
push
sub
fcomp
dec
inc
std
scas
sti
sbb
je
push
call
popa
jg
or
xor
inc
jmp
push
adc
add
pop
mov
push
call
je
dec
test
je
push
mov
sar
(bad)
jmp
test
and
cmp
pop
fld
push
push
push
cmp
push
adc
add
cmp
mov
mov
dec
sti
jmp
test
cld
push
inc
jmp
ret
(bad)
retf
jne
ja
cmp
push
mov
pop
dec
add
clc
or
and
mov
idiv
inc
adc
inc
jl
pop
(bad)
jo
mov
enter
lds
call
sbb
pop
loopne
inc
jno
pop
into
cmps
push
stc
inc
push
cli
jecxz
xchg
push
call
jle
or
mov
xor
push
jmp
push
add
call
add
mov
adc
push
lea
out
ror
std
clc
call
push
gs
in
dec
jne
dec
sbb
push
pop
fild
adc
jle
(bad)
fstp
call
call
popf
popa
inc
sbb
inc
enter
jle
or
enter
jge
ins
jo
jge
call
push
dec
inc
call
adc
fld
call
ret
cmps
add
push
call
jle
adc
adc
iret
call
push
inc
or
and
mov
or
jmp
cmp
push
ja
ins
adc
mov
pushf
mov
aaa
push
mov
jnp
int
mov
push
fadd
and
sub
sbb
(bad)
cmp
pop
dec
fs
iret
call
fist
mov
pop
daa
daa
and
loopne
push
int3
jle
mov
jbe
or
mov
mov
add
xor
dec
fwait
cmps
imul
imul
imul
ins
retf
fstp
or
int
sbb
out
add
lods
ret
mov
or
mov
ja
adc
adc
mov
mov
iret
ror
(bad)
mov
jge
dec
cld
or
xor
cmp
adc
lahf
xor
cmp
jge
dec
dec
inc
or
pop
add
test
inc
out
add
jmp
gs
add
push
or
rcl
sbb
lea
sub
mov
nop
mov
cmp
jl
inc
dec
push
or
imul
movzx
cmp
movzx
je
push
int3
clc
pop
lock
cld
mov
(bad)
retf
call
xor
movs
dec
hlt
xor
jg
dec
lock
cld
cmp
je
(bad)
mov
xor
and
repnz
inc
inc
or
loop
xchg
mov
(bad)
cmp
mov
mov
push
push
lea
rol
ins
lea
mov
and
(bad)
call
fld
pusha
jge
add
push
(bad)
push
inc
inc
and
dec
or
or
push
push
push
mov
addr16
cdq
arpl
call
inc
adc
push
(bad)
and
cmps
daa
xchg
cmps
hlt
sbb
sbb
cmps
fdivr
and
mov
je
dec
aas
add
(bad)
jmp
mov
or
in
retf
push
lock
add
xor
call
sub
adc
push
inc
int
mov
push
(bad)
fild
push
jne
push
call
or
push
imul
ja
aaa
(bad)
jg
xor
test
add
add
int
add
jmp
sbb
inc
sbb
pop
and
fucomp
(bad)
aaa
jae
jle
jne
cmp
je
fmul
mov
and
push
pop
shl
or
pop
cmc
or
dec
or
in
je
push
int
(bad)
sbb
push
iret
add
pop
dec
call
or
scas
cmp
cli
inc
jne
jmp
test
inc
push
or
dec
inc
mov
xor
cmp
je
add
cmp
mov
je
cmp
je
cmp
or
sub
mov
cld
aaa
cld
enter
mov
sar
mov
mov
sub
rol
cmp
ja
outs
popa
cmp
je
mov
push
call
adc
ja
aaa
fs
ja
je
clc
push
xchg
(bad)
out
mov
movzx
jmp
mov
out
sbb
and
dec
hlt
retf
(bad)
ins
clc
inc
jmp
dec
jmp
mov
jg
lea
hlt
jmp
in
jmp
mov
or
pop
mov
jg
outs
cmp
mov
or
ror
or
loopne
xchg
or
cmp
fild
test
push
inc
popa
inc
lock
fdiv
sti
test
(bad)
iret
call
or
cld
cmp
cmp
adc
pop
ror
test
push
push
jmp
xor
jle
and
not
add
mov
jp
idiv
push
mov
call
jmp
mov
mov
fwait
mov
push
sbb
pop
lahf
inc
xchg
xlat
add
pop
or
add
mov
dec
jl
jmp
(bad)
cmp
mov
dec
add
fist
push
xor
call
pop
je
inc
jmp
adc
fcomp
dec
push
call
add
adc
push
call
add
outs
test
dec
pop
scas
add
jmp
stc
push
adc
iret
call
test
jp
call
inc
pop
mov
ror
call
fmul
call
aaa
inc
push
jmp
test
xchg
mov
jmp
aas
(bad)
ja
rol
push
iret
call
jmp
test
cmc
xchg
jne
mov
mov
mov
xor
push
or
add
sar
test
and
push
call
fcomp
pop
add
shr
push
adc
test
scas
(bad)
aaa
das
xor
inc
xor
test
sete
push
push
cld
xor
pop
cwde
mov
or
xchg
fsubr
sbb
inc
out
call
outs
rcl
stc
jbe
push
ret
in
call
sbb
ret
cs
cmp
and
or
scas
dec
loopne
sti
or
jmp
inc
mov
jle
div
xchg
or
sub
sbb
sbb
out
cmp
sub
outs
out
clc
call
call
adc
outs
nop
or
into
pop
jmp
cli
inc
add
jne
sbb
jmp
mov
aam
aas
iret
and
mov
fs
mov
je
sbb
jmp
out
or
out
outs
xchg
xchg
movs
add
xchg
je
movs
ja
adc
mov
shl
xor
inc
aam
jle
repz
clc
mov
inc
cmp
jne
jle
shl
mov
ja
mov
jmp
test
or
call
aaa
mov
sti
add
jp
jbe
jne
mov
dec
clc
pop
cmp
xbegin
mov
inc
or
xor
cmp
inc
clc
je
mov
ret
mov
rol
daa
add
push
(bad)
add
jne
add
test
imul
mov
mov
cli
inc
mov
push
jmp
bound
pop
xor
loop
and
jae
mov
sbb
or
jne
repz
and
inc
into
fnstenv
mov
cmp
push
jmp
adc
inc
push
in
(bad)
xor
inc
pop
jmp
xor
and
cwde
push
pop
ja
jge
fs
sub
jo
dec
outs
jmp
iret
cli
jecxz
call
aaa
cmp
add
add
jmp
fdivp
addr16
in
or
lock
mov
in
or
retf
and
mov
jne
cmp
adc
push
add
cld
push
call
in
push
call
sbb
call
jmp
loopne
pop
jl
je
lea
mov
sti
mov
dec
das
sbb
add
add
jle
std
jne
js
cmp
or
and
(bad)
pop
adc
mov
ret
push
push
or
mov
pop
xor
xchg
(bad)
std
dec
cmp
pop
adc
dec
sbb
and
or
push
or
idiv
inc
lock
clc
aaa
mul
xchg
loopne
iret
call
mov
adc
stos
cmps
stos
in
mov
jmp
pop
sbb
or
sub
dec
or
inc
aas
fnsave
push
(bad)
ds
je
loope
leave
fistp
clc
and
inc
es
scas
push
cmc
push
scas
xor
xor
dec
add
push
call
test
je
mov
dec
rol
inc
jne
daa
add
(bad)
sbb
xlat
dec
or
push
push
shr
cmp
movq
push
pusha
lahf
mov
lahf
imul
fcmovu
mov
jo
ffreep
out
add
leave
(bad)
inc
out
jg
arpl
mov
mov
or
ret
jl
jge
popa
add
retf
sub
push
lea
lock
sub
hlt
jne
mov
nop
fdivr
jb
das
iret
call
add
mov
lock
xchg
iret
call
xlat
mov
jne
(bad)
jno
outs
jo
mov
outs
in
pop
adc
cmp
inc
push
add
inc
inc
mov
sbb
das
jl
xor
or
add
lea
mov
jo
adc
aas
adc
call
jmp
and
pusha
call
test
je
in
inc
in
inc
data16
push
je
sbb
jne
push
call
jmp
jmp
lea
fucomi
sub
push
cmp
out
fcomip
arpl
mov
add
adc
push
out
push
mov
sbb
push
dec
or
push
call
mov
mov
pop
ret
xor
push
iret
call
inc
mov
adc
dec
push
mov
push
and
push
call
call
mov
add
lock
dec
pop
and
and
and
add
sub
pop
aam
test
iret
call
push
dec
or
jmp
test
neg
retf
inc
or
outs
shl
scas
mov
sub
(bad)
push
mov
pop
jmp
rcl
daa
xchg
sbb
les
pop
jmp
imul
mov
xor
cmp
cmps
sbb
je
loopne
in
leave
test
dec
and
leave
icebp
jmp
out
or
cmp
jne
push
call
shl
fst
mov
push
push
fsub
aaa
sbb
push
sub
mov
(bad)
out
xor
add
pop
cld
push
mov
call
jmp
fld
jne
xor
in
push
jmp
inc
sub
ja
jae
nop
jne
cmp
or
or
fist
mov
fadd
mov
mov
mov
xor
dec
int3
call
fsubr
mov
xchg
jne
sub
or
cmp
pop
jne
(bad)
fist
icebp
inc
add
cmp
mov
jne
jmp
mov
sbb
aam
call
clc
xor
inc
test
test
xchg
pop
(bad)
leave
or
out
xor
loopne
jo
out
fmulp
adc
xor
fidivr
(bad)
(bad)
cmp
mov
or
shl
sar
push
jmp
(bad)
jle
popf
mov
mov
jl
sti
cld
(bad)
out
fdivp
mov
pop
jne
call
test
jg
cmp
inc
adc
ss
cmps
int3
dec
pop
clc
aas
push
push
call
ja
std
(bad)
fstp
jmp
cs
cs
idiv
aaa
sbb
cs
adc
sar
jmp
hlt
orps
push
fnstsw
sti
out
pop
adc
sbb
stos
add
retf
shl
jmp
idiv
mov
xor
lea
inc
mov
xor
shl
outs
call
or
sbb
fwait
cmps
imul
xor
cmps
imul
cmps
imul
fucompp
hlt
seto
xor
imul
jmp
push
ja
xchg
or
and
or
sbb
or
out
or
mov
scas
jmp
(bad)
pop
xor
add
outs
add
or
adc
adc
push
pop
cmp
sbb
sbb
call
and
and
and
es
sub
sub
cmp
cmp
cmp
das
xor
xor
xor
cmp
je
jg
ss
cmp
aaa
cmp
cmp
xchg
or
rol
dec
shl
mov
int3
hlt
add
xchg
or
push
mov
call
lea
call
pop
std
lods
add
and
push
push
inc
cmc
aaa
push
mov
pop
ret
push
mov
je
push
jge
or
call
aam
bswap
fcomp
or
push
sbb
add
and
adc
aaa
stc
dec
inc
xor
push
jg
aad
xor
mov
mov
jle
add
sar
or
pop
std
scas
or
ins
mov
(bad)
aas
lock
mov
mov
cmp
jne
cmp
(bad)
call
je
push
call
jp
je
cmp
jne
mov
pop
jg
icebp
pop
ret
xor
into
push
push
push
mov
cli
mov
ja
call
xchg
add
std
push
add
xor
aas
(bad)
push
pop
inc
add
iret
jmp
cmp
je
cmp
je
(bad)
jbe
sbb
jne
dec
push
call
fild
add
mov
jmp
push
push
call
into
ds
cmp
xchg
or
inc
repz
push
cmp
sub
dec
bnd
mov
inc
mov
jmp
inc
clc
(bad)
out
out
mov
je
inc
jmp
cmp
mov
je
cmp
je
pop
add
jmp
es
mov
call
jg
dec
push
mov
test
je
fwait
or
pop
add
(bad)
jae
push
sbb
xor
jmp
je
cmp
jb
mov
add
mov
jmp
std
dec
jne
push
call
aaa
push
mov
call
pop
pop
je
retf
sbb
jl
jmp
je
cmp
sub
arpl
out
or
pop
pop
in
or
push
jne
mov
or
mov
(bad)
lock
and
call
jg
mov
push
popa
jl
cmp
jle
cmp
jl
cmp
jg
sti
sbb
cmps
es
xchg
push
jmp
mov
mov
nop
clc
sbb
das
icebp
xor
cld
stc
call
xchg
call
shl
sbb
xlat
cmp
scas
je
inc
jmp
or
mov
or
shl
icebp
jp
cmp
std
pop
cld
dec
inc
add
mov
jmp
das
inc
inc
bound
mov
je
inc
inc
jmp
cld
dec
inc
push
ror
out
mov
pop
je
mov
out
adc
popa
inc
jb
or
cmp
jne
fdivr
fs
sub
call
ins
mov
(bad)
push
push
jl
push
add
retf
(bad)
aas
and
pop
pop
jmp
cmp
jne
xor
cmps
fmul
inc
repz
ja
(bad)
aas
fdivr
dec
in
shl
or
mov
inc
jmp
loopne
aas
add
push
call
jne
ja
push
adc
add
xor
mov
jmp
ja
mov
jne
push
outs
push
call
js
(bad)
lock
je
or
mov
pop
add
dec
push
xchg
pop
pop
jp
add
(bad)
call
cmp
je
cmp
jne
lea
jmp
cmp
je
cmp
je
inc
stos
loopne
adc
push
push
(bad)
out
call
push
mov
je
or
je
or
lea
push
mov
call
inc
add
mov
mov
inc
cmp
mov
sub
fucomp
dec
add
into
mov
mov
push
push
call
or
mov
pop
clc
(bad)
fst
shr
fdivr
add
mov
jl
jg
clc
mov
das
je
cmp
jne
out
ret
or
push
ss
sbb
call
add
dec
popf
sti
fadd
pop
scas
ret
xchg
mov
scas
inc
(bad)
jge
mov
and
push
xor
js
clc
inc
cmp
into
cmp
sbb
push
call
(bad)
pop
and
or
add
adc
ret
std
stos
clc
(bad)
aas
push
cmp
jne
xor
mov
mov
mov
cmp
mov
call
push
loope
jmp
and
xchg
lock
xor
test
icebp
das
faddp
push
call
call
xor
xchg
sbb
push
mov
retf
call
or
lods
mov
xor
sub
mov
in
push
call
and
fucomp
push
call
sbb
push
call
add
push
sub
fld1
ds
push
mov
fsubr
sub
fsubr
adc
aam
arpl
in
enter
xchg
dec
(bad)
add
xchg
mov
adc
aad
and
add
mov
call
div
test
stos
adc
and
mov
xchg
rol
xchg
inc
adc
adc
sbb
das
mov
das
jnp
pop
in
ror
lods
xchg
call
(bad)
sbb
bound
aad
push
push
mov
jmp
adc
mov
mov
push
aaa
inc
(bad)
cld
jne
call
call
fild
sub
jb
push
pop
cmp
jle
mov
xchg
or
rol
push
mov
lahf
push
jne
jmp
cmp
jne
push
sbb
mov
jmp
(bad)
std
(bad)
inc
push
jmp
cmp
jl
cmp
jle
cmp
or
jo
lahf
popa
jp
sbb
jne
pop
jmp
cmp
cmp
arpl
push
call
call
fild
xor
ror
cmp
pop
mov
ins
push
fild
aad
bt
inc
call
push
push
push
(bad)
mov
int3
mov
xor
cmp
pop
je
cmp
je
mov
jmp
push
imul
and
repz
adc
and
add
pop
dec
add
stos
pop
(bad)
dec
mov
push
js
cmps
mov
dec
or
add
push
call
adc
int
or
ffreep
out
outs
aad
mov
pop
ret
push
je
push
push
stc
and
add
xchg
sti
je
cs
out
out
lock
and
jbe
cmp
pop
je
xchg
out
push
cmc
add
lds
pop
push
pop
jmp
sbb
xchg
fdiv
call
xchg
or
addr16
ffreep
call
pop
pop
pop
ret
push
mov
push
mov
push
test
push
add
push
dec
xchg
test
(bad)
(bad)
adc
daa
aas
push
call
test
movs
loop
int3
les
pop
call
jmp
pop
mov
push
call
and
xor
out
push
das
mov
mov
outs
popf
jmp
and
push
xor
cmp
je
fdivr
(bad)
je
or
inc
aam
push
aad
cs
sbb
call
bound
cmp
jmp
and
add
or
call
out
xchg
sti
pop
fisttp
call
or
sub
xchg
mov
aam
jmp
neg
data16
inc
xor
push
push
call
xor
pop
or
fsubr
std
jg
inc
ins
inc
add
push
cmp
je
test
ffreep
(bad)
je
cmp
jb
inc
(bad)
jb
mov
iret
mov
jne
lea
mov
cli
jle
mov
xor
cmp
(bad)
pop
cwde
(bad)
jl
cmp
jg
push
jb
sbb
dec
scas
push
hlt
call
inc
or
add
call
out
out
pusha
shr
jmp
cmp
or
or
and
out
mov
sti
call
and
add
jbe
cmp
adc
jecxz
add
cmp
call
jae
loop
jmp
ret
call
sbb
imul
mov
inc
in
dec
dec
call
add
cwde
(bad)
bnd
mov
pop
adc
fdivr
cmp
jge
test
in
nop
das
jne
add
ja
loopne
inc
fsubr
outs
es
fcom
call
jmp
fsubr
push
xchg
push
add
(bad)
ins
in
jl
hlt
call
push
push
mov
pop
sub
pop
call
xor
pop
leave
rol
push
adc
mov
jmp
mov
cmp
jne
or
jp
jg
xor
mov
cmp
jmp
dec
std
sbb
jne
mov
cmp
js
jne
push
adc
lahf
mov
or
jne
xlat
dec
into
or
mov
(bad)
cmp
cmp
test
es
push
xor
mov
xor
mov
fcomip
inc
mov
cmp
je
test
je
bnd
cmp
jne
mov
cmp
cld
addr16
push
mov
cmp
je
cmp
je
cmp
pcmpgtd
inc
je
(bad)
out
pop
adc
push
add
pop
jno
(bad)
jg
sbb
adc
inc
add
jp
fdiv
cmp
jmp
pop
jne
cmp
(bad)
jmp
in
inc
jne
dec
test
jg
mov
jmp
test
je
stos
loop
pop
ja
add
adc
inc
movs
inc
jmp
pushf
xor
sub
jne
mov
ret
mov
add
scas
push
sub
repnz
jmp
push
jl
jge
call
mov
call
add
xchg
or
fsubr
xchg
lahf
lock
ja
out
push
inc
xor
sub
mov
call
rcl
call
mov
inc
mov
aam
pop
out
clc
cli
jnp
fistp
or
push
rcl
push
shr
push
gs
in
sub
int3
pop
push
xor
ret
mov
jge
push
sti
mov
jmp
clc
jne
push
call
mov
push
pop
add
sub
xchg
sbb
lods
lock
(bad)
(bad)
inc
xor
cmp
mov
mov
mov
je
mov
cmp
jge
mov
(bad)
(bad)
out
(bad)
das
jne
mov
cmp
sete
mov
xor
mov
icebp
(bad)
dec
inc
xor
inc
inc
cmp
jne
lea
cmp
jge
ins
sub
mov
lahf
or
cmp
ja
add
inc
mov
ret
jmp
aam
lods
mov
jmp
lea
aam
inc
jns
mov
cmp
sti
inc
jne
ret
(bad)
fbstp
add
inc
add
mov
jmp
xor
out
shr
cmp
or
dec
add
add
mov
cmp
jl
cmp
(bad)
mov
out
mov
test
pop
in
mov
in
jge
shl
mov
mov
sub
add
push
push
in
xchg
pop
stc
(bad)
jmp
mov
hlt
add
ja
call
fdivr
cmc
push
call
repz
add
out
pop
cmp
pop
jl
pop
out
gs
lock
fsub
pop
mov
mov
dec
cmc
fwait
inc
je
cmp
push
call
outs
push
fdiv
push
call
call
push
out
(bad)
jbe
mov
call
je
pop
ins
call
mov
or
mov
(bad)
aas
add
mov
mov
pop
pop
jmp
call
add
jne
lea
je
mov
add
call
ret
mov
shr
sbb
pop
cmp
rol
rol
ret
cmp
push
call
ja
cmps
jae
or
cld
test
idiv
sar
dec
or
or
jo
leave
push
or
mov
xor
xchg
mov
shld
mov
and
stc
and
pop
fwait
jne
cmp
mov
push
mov
mov
sbb
cdq
or
idiv
int
pop
push
and
xor
cmp
(bad)
stos
out
push
xor
mov
(bad)
mov
mov
push
mov
fisttp
int
mov
ss
mov
mov
mov
adc
ret
mov
(bad)
pop
ret
lea
xor
in
imul
and
push
push
ins
call
lds
out
out
inc
adc
call
mov
push
inc
scas
mov
idiv
jmp
push
call
mov
push
mov
enter
clc
lock
mov
xchg
fstp
sbb
push
and
jne
cmp
jne
push
inc
rcr
add
lea
(bad)
es
push
sub
lods
pop
ret
adc
sti
scas
mov
jbe
dec
push
call
rcl
pop
mov
jg
cwde
and
push
push
nop
mov
or
lahf
std
fs
fisttp
add
mov
aaa
push
adc
pop
ins
cmp
or
mov
push
call
or
stc
pop
je
dec
add
lock
pop
outs
or
jne
pop
sbb
fld
call
loopne
jl
in
cmp
aas
cdq
stos
mov
mov
cmp
mov
call
out
add
pop
fdiv
dec
adc
loop
in
mov
mov
mov
mov
push
pop
mov
push
aad
adc
call
mov
jmp
pusha
xor
ret
jne
mov
test
leave
pop
stos
pop
push
call
out
ja
push
lea
call
div
lea
call
ror
or
cmp
mov
mov
pop
add
test
mov
add
out
fdivr
test
add
inc
pop
or
sub
add
mov
scas
test
mov
lea
cs
in
jecxz
add
mov
mov
cmp
mov
lea
add
aas
arpl
dec
call
call
push
sti
dec
or
call
ror
xchg
add
xor
cmp
jne
call
rcr
fnsave
bnd
(bad)
mov
jmp
sub
jmp
jg
adc
adc
push
or
ret
inc
and
addr16
lea
mov
ins
add
call
mov
call
mov
mov
mov
mov
dec
jo
inc
je
out
mov
fisttp
cli
sub
fmul
add
cld
or
add
jnp
nop
push
lea
jl
imul
fdiv
xchg
jp
(bad)
(bad)
call
xrelease
inc
mov
inc
scas
ffree
in
dec
push
jne
lea
call
call
test
stos
mov
scas
iret
(bad)
dec
pop
adc
out
sbb
mov
pop
shl
inc
test
sbb
inc
popa
pop
xor
test
jns
mov
gs
add
test
sub
sbb
pop
call
push
in
gs
pop
ss
dec
test
je
mov
fist
je
and
ror
add
adc
inc
(bad)
aad
add
cmpxchg
test
dec
jl
lock
test
mov
lea
mov
call
push
call
lea
call
ja
idiv
test
je
or
iret
sbb
test
je
mov
lock
and
inc
push
lea
push
push
call
nop
dec
mov
(bad)
(bad)
jl
call
lock
xor
pop
adc
jle
pushf
xchg
sti
sti
ds
push
mov
retf
(bad)
fst
lock
je
mov
add
push
mov
scas
aas
push
add
push
add
clc
call
cmp
cld
dec
inc
sub
sbb
mov
cmc
xor
ror
jne
inc
xor
sub
pop
lea
push
lea
sub
mov
push
jno
ss
call
xchg
je
cmp
outs
push
add
jo
mov
mov
call
or
pop
add
mov
icebp
cs
lds
clc
call
adc
add
popa
stc
mov
not
pop
push
jg
jecxz
mov
adc
jge
add
and
xchg
pusha
mov
jecxz
jmp
sbb
dec
fld
xor
test
shr
test
shl
mov
push
loope
call
icebp
jle
test
(bad)
inc
fild
sub
add
and
lea
cmp
inc
add
cmp
xor
cmp
lea
(bad)
outs
cli
clc
push
call
clc
call
dec
clc
je
call
ret
daa
je
call
popa
xchg
and
fdivr
mov
(bad)
inc
lea
mov
push
call
out
(bad)
call
inc
cld
fsubp
mov
loop
pop
dec
xor
cmp
dec
or
cmp
jne
or
(bad)
stc
call
cmp
add
arpl
or
cdq
add
aas
lods
loop
test
jno
jo
mov
or
jp
lea
cmps
stos
jg
stos
call
or
jmp
(bad)
je
ror
xor
push
mov
cmp
pop
in
xchg
or
pop
push
add
jmp
push
cmp
dec
push
mov
pop
stos
fcmovnbe
adc
adc
out
cmp
lock
xchg
adc
inc
sub
clc
pop
mov
call
cmp
mov
es
(bad)
fwait
or
inc
or
stc
adc
stc
and
dec
cmp
sbb
and
mov
add
jmp
(bad)
mov
inc
adc
call
cmp
je
mov
mov
jmp
mov
test
mov
out
mov
jae
adc
inc
hlt
mov
fs
in
ror
sti
(bad)
fistp
(bad)
pop
sbb
mov
test
push
cs
(bad)
jmp
pusha
gs
cmp
outs
xor
fwait
add
add
push
add
add
sub
and
pop
lea
push
call
sbb
or
add
int
mov
add
sub
(bad)
call
aam
cmp
push
stos
and
call
(bad)
(bad)
(bad)
hlt
out
push
sbb
sti
lods
call
sbb
add
mov
or
test
fld
out
push
lods
push
call
push
iret
mov
xchg
rcr
cmp
test
je
add
test
jne
cmp
or
test
mov
mov
mov
jecxz
outs
sub
jo
pop
push
in
add
mov
call
jp
test
inc
dec
aaa
in
call
push
mov
sub
cmp
pop
jmp
xor
dec
jne
push
pop
push
and
ror
out
cmps
sub
leave
sti
add
xor
jne
mov
cmp
je
push
call
aaa
xchg
push
push
push
call
(bad)
inc
add
sbb
cmp
je
push
int3
ret
pop
idiv
pop
cmp
(bad)
cmp
jne
or
adc
mov
cmp
pop
stos
push
je
cmp
je
lea
cmp
jne
loope
aas
inc
adc
jmp
cmp
and
jmp
sub
sbb
lea
jp
lahf
sub
pop
call
xchg
inc
iret
add
or
ret
and
inc
sbb
jp
mov
jmp
or
hlt
call
enter
pavgb
test
push
push
call
add
xor
push
call
adc
or
or
sti
and
hlt
call
test
std
hlt
call
lods
push
call
pop
inc
sar
in
or
inc
dec
push
hlt
ja
jne
cmp
jne
es
xchg
(bad)
call
jmp
hlt
call
fsub
adc
mov
fs
adc
dec
ret
test
mov
test
mov
(bad)
aas
mov
js
js
adc
(bad)
rol
call
mov
jmp
mov
push
add
dec
mov
xor
call
ret
mov
(bad)
jb
(bad)
jmp
add
cmp
je
xor
jmp
ja
or
push
jne
call
dec
jle
hlt
call
jmp
cwde
es
outs
out
das
adc
pop
mov
pop
pop
cmp
hlt
push
dec
add
call
cmp
popa
sub
mov
lahf
call
push
call
jge
inc
jge
test
pop
push
je
push
push
call
int
pop
pop
mov
jmp
adc
adc
call
add
sti
cmp
inc
jo
jne
call
sbb
mov
mov
call
nop
aam
ja
(bad)
jg
clc
and
cmp
mov
je
call
jl
mov
mul
loope
inc
cld
add
psubsb
mov
jmp
mov
push
std
dec
std
mov
mov
adc
daa
cmc
ret
ja
mov
mov
add
icebp
inc
sub
sbb
xor
cmp
cmp
push
sub
call
mov
sub
xor
or
jle
(bad)
push
call
and
repnz
fld
cmp
adc
(bad)
jne
das
cwde
mov
mov
push
call
mov
mov
call
dec
je
sti
jne
call
pop
xchg
enter
or
outs
sub
add
inc
push
ror
inc
fwait
xor
jg
push
in
jae
call
mov
mov
jmp
sub
jl
cs
cmp
or
call
mov
dec
popa
cmp
jne
mov
fstp
push
mov
add
movzx
adc
shl
adc
clc
jne
jne
loop
test
daa
test
jle
aas
cmp
xchg
call
cld
das
es
sbb
fwait
push
pop
or
inc
jl
lods
xchg
(bad)
adc
jae
call
push
aas
cmp
mov
and
dec
mov
inc
xchg
mov
aad
push
adc
je
arpl
(bad)
in
push
cmps
mov
mov
fadd
add
jmp
call
dec
clc
pop
pop
xor
loopne
call
inc
call
ja
in
jmp
jne
shl
mov
call
or
pusha
push
inc
jb
pusha
sub
hlt
call
shl
mov
push
call
mov
and
dec
adc
and
mov
je
sub
enter
fdivr
jmp
push
xchg
mov
xorps
fcomp
push
pop
mov
pop
pop
nop
dec
adc
popa
outs
lods
or
gs
adc
int3
jbe
out
icebp
das
pusha
hlt
call
inc
jl
into
inc
aaa
and
add
add
add
jmp
push
es
stos
or
(bad)
(bad)
mov
gs
and
call
adc
sbb
dec
sub
sbb
xor
clc
call
test
mov
adc
cmp
loopne
jne
mov
sbb
jnp
add
push
std
inc
mov
call
push
pop
aaa
add
dec
shl
cmp
aas
mov
jbe
call
mov
push
push
popf
push
call
jo
mov
mov
leave
inc
jns
pop
mov
and
lds
or
and
xchg
cmp
xchg
mov
cmp
mov
mov
push
push
fild
call
mov
mov
call
fild
popa
pop
std
dec
add
inc
and
lock
test
mov
call
test
dec
je
cmp
sbb
mov
rol
test
add
push
je
mov
loopne
or
lea
cmp
ror
test
pop
inc
cmps
push
push
pop
cmp
xor
adc
lds
mov
adc
push
push
lea
cmp
add
add
cld
call
test
sbb
push
xor
mov
jg
call
test
cmp
mov
add
outs
call
repz
(bad)
sbb
add
iret
call
xor
push
int3
(bad)
push
call
push
jl
lahf
pop
push
call
or
inc
clc
arpl
aaa
je
mov
pop
pop
pop
leave
ret
add
cmp
gs
push
dec
ror
sub
sbb
push
lea
mov
add
orps
bound
imul
pop
je
cmp
jne
push
jmp
js
cmp
sub
push
cmps
and
cmp
aas
jg
jge
add
pop
aas
add
call
out
mov
add
add
icebp
(bad)
(bad)
(bad)
jg
jg
pop
mov
pop
jmp
and
sub
je
dec
je
dec
je
dec
mov
sbb
(bad)
pop
mov
sbb
jne
mov
ja
arpl
mov
test
jl
cmp
jg
mov
mov
mov
add
jg
add
je
cmp
pop
cmp
gs
ja
cmp
or
sar
mov
xchg
mov
inc
or
mov
ficom
add
jmp
xor
mov
push
call
call
dec
or
or
dec
adc
xor
and
in
mov
je
or
minps
push
(bad)
(bad)
dec
inc
dec
jne
and
inc
movzx
mov
cmp
jb
cmp
ja
and
adc
(bad)
(bad)
mov
add
mov
cmp
jb
cmp
ja
and
rol
loope
stc
fdivrp
inc
shr
sub
add
es
sub
inc
jmp
shl
add
jmp
push
ror
mov
test
adc
pop
mov
push
mov
or
cmp
jbe
mov
push
push
jle
fldpi
add
loope
(bad)
call
push
or
shl
add
jae
lea
cmp
ja
mov
inc
jmp
(bad)
sti
mov
jae
lea
adc
rol
push
or
add
or
add
sub
mov
shr
or
mov
(bad)
aas
fadd
sub
or
sub
mov
push
pop
pop
pop
ret
jmp
push
inc
outs
cli
mov
mov
and
test
cmp
(bad)
(bad)
cmp
outs
bound
lea
push
mov
lea
je
cmp
jae
rcr
jne
push
call
push
fadd
push
or
fisttp
cmp
jb
jmp
dec
mov
mov
mov
inc
jae
inc
jmp
or
push
add
sar
ja
inc
adc
inc
inc
cmp
jb
mov
pop
mov
inc
mov
fcom
enter
mov
rcl
ja
ror
jg
jg
movs
push
mov
test
push
lea
mov
hlt
je
aaa
icebp
fwait
(bad)
cmp
jae
lea
mov
pop
pop
call
dec
jg
add
lea
cmp
mov
ja
mov
idiv
mov
cld
cmp
mov
jb
jmp
push
jae
out
push
add
jmp
cmp
jmp
push
adc
cmp
jmp
jmp
ffreep
cld
add
pop
lea
mov
outs
push
loopne
dec
pop
push
xor
cmp
push
je
push
call
call
mov
(bad)
lea
push
call
mov
xor
(bad)
sbb
sub
jle
mov
cmp
jae
inc
std
out
cmp
cwde
ja
cmp
jl
cmp
jge
frstor
lea
push
push
lea
push
call
dec
sub
fbstp
or
sub
pop
movs
push
(bad)
lahf
xor
push
push
push
call
push
out
push
call
(bad)
dec
ja
cmp
je
test
jne
push
call
inc
or
sbb
push
std
(bad)
push
add
add
jne
cmp
std
scas
out
sbb
dec
sahf
add
cmp
jne
adc
xor
add
jmp
pop
ret
jmp
ud0
cmp
jl
or
or
inc
inc
inc
mov
cmp
je
movzx
movzx
sub
jge
add
pop
ret
xbegin
jge
dec
je
push
(bad)
inc
repnz
mov
or
cmp
pop
pop
jne
data16
div
push
dec
push
inc
inc
inc
inc
jmp
sbb
hlt
ja
mov
sub
rcr
fs
and
lea
ins
(bad)
cwde
jecxz
push
cmp
mov
cmp
jne
cmps
push
add
cli
inc
inc
inc
jmp
movzx
movzx
sub
push
and
out
std
scas
push
or
or
add
add
jne
dec
inc
je
and
add
add
mov
je
into
jne
(bad)
(bad)
jnp
cwde
xor
inc
inc
inc
inc
xor
mov
test
lock
shl
push
inc
call
cmc
ja
fdiv
test
mov
push
call
or
ret
mov
repz
jl
pop
pop
pop
sbb
push
das
and
das
sahf
xchg
adc
add
mov
mov
mov
jmp
cmp
ja
cld
dec
jmp
jns
jmp
xor
movzx
ret
imul
je
add
dec
push
push
call
pop
ror
sub
stc
call
shl
lds
cmp
push
(bad)
call
cmp
pop
mov
je
sbb
push
jo
jno
jmp
loop
push
call
cmp
je
mov
mov
mov
mov
dec
add
jne
mov
pop
cld
push
call
mov
xchg
clc
shr
fisubr
lock
aad
les
pop
jecxz
mov
lock
mov
sti
(bad)
mov
call
test
mov
aam
mov
jmp
xor
jmp
cmp
add
inc
fisubr
xor
cmp
je
call
adc
jmp
cmp
jne
cmp
popa
(bad)
call
jne
cmp
je
push
jmp
cmp
jne
adc
cld
cmp
pop
ret
cmp
je
fdivr
dec
add
stc
add
push
jne
inc
push
mov
push
push
call
js
nop
ret
jns
pop
data16
sub
(bad)
fild
ins
cmp
ins
xchg
call
or
pop
xlat
fs
push
call
jmp
cmp
int
jne
fdiv
or
inc
jmp
push
inc
pop
adc
mov
add
(bad)
ffreep
sbb
xrelease
ret
push
mov
ja
call
mov
cmp
je
cmp
je
lahf
sti
mov
jle
cmp
jle
cmp
je
ret
push
call
mov
enter
add
push
call
fadd
push
cwde
pusha
xor
call
icebp
(bad)
cmps
sti
dec
(bad)
mov
mov
pop
xor
jbe
cmp
ja
in
call
sub
mov
call
(bad)
or
push
lock
push
je
adc
xlat
add
jmp
fwait
sar
stos
sbb
daa
adc
mov
push
call
adc
icebp
cmp
jl
fstp
inc
add
jne
push
call
and
call
or
pop
out
cmp
add
jle
mov
pop
dec
lahf
call
jne
cmp
jg
mov
je
xor
jmp
mov
mov
mov
outs
neg
mov
ins
test
ins
mov
cs
dec
push
pop
mov
inc
pop
call
addr16
add
xor
ja
sub
xor
cmp
je
js
mov
cmp
paddd
out
bound
je
cmp
jne
cmp
je
mov
cmp
pop
inc
cmp
adc
popa
dec
mov
jp
call
call
jg
adc
add
dec
push
out
push
jmp
or
add
call
test
(bad)
dec
mov
sbb
and
pop
ret
fsub
adc
mov
push
ret
adc
mov
pop
adc
lods
lods
cmp
je
test
mov
or
pop
sbb
addr16
pop
(bad)
jg
push
jmp
mov
or
xor
mov
mov
add
sbb
call
or
in
mov
inc
sub
inc
les
inc
add
xor
xchg
add
or
(bad)
daa
mov
add
ret
mov
(bad)
std
inc
sbb
rol
sub
or
retf
pop
or
add
xor
popf
add
adc
cmp
pop
dec
jns
add
or
mov
or
call
out
add
or
cs
add
push
adc
push
lock
cmp
cmc
sbb
push
mov
pop
clc
call
daa
in
sbb
je
adc
jno
and
in
cli
call
cdq
mov
mov
dec
inc
inc
sbb
xchg
rol
ja
cmp
call
mov
dec
xchg
jecxz
xor
es
push
popa
xor
sub
mov
push
xor
xchg
push
or
push
jb
pop
jle
aas
movzx
mov
add
mov
shl
or
call
inc
xor
add
(bad)
(bad)
fstp
sbb
movzx
shr
and
push
push
call
sbb
pop
pop
ja
sub
add
cwde
mov
xor
(bad)
shl
mov
sub
sub
push
lea
xor
cmp
dec
jne
call
stos
sub
and
inc
clc
sub
mov
cdq
je
loope
dec
dec
adc
jbe
sub
or
sar
add
dec
cmp
adc
mov
mov
add
inc
es
addr16
or
mov
mov
not
push
ficomp
xor
cmp
jge
cmp
jl
outs
(bad)
or
xor
mov
ror
adc
or
hlt
push
mov
sub
sub
add
test
fnstenv
push
call
push
out
(bad)
cmp
xor
sub
dec
aaa
cld
(bad)
(bad)
call
mov
mov
pop
sub
test
je
cmps
or
cmp
addr16
into
je
xor
cmp
jne
push
or
dec
adc
push
jae
je
jbe
mov
pop
and
mov
idiv
mov
mov
inc
sub
adc
inc
cld
mov
jns
and
cmp
jl
(bad)
push
xor
and
jg
inc
inc
jmp
mov
cmps
sbb
add
rcl
inc
sbb
dec
adc
inc
test
mov
sbb
imul
mov
mov
(bad)
push
lea
mov
push
add
repz
test
inc
add
inc
mov
call
fsubr
sub
aaa
or
push
fs
mov
test
je
movzx
shr
mov
cmc
jmp
and
mov
mov
mov
cmp
aaa
adc
add
ret
xor
mov
mov
jo
mov
or
dec
dec
push
push
xor
call
pop
adc
add
test
pop
idiv
push
mov
adc
idiv
or
inc
je
js
dec
js
pusha
rol
pop
pop
mov
call
jmp
jg
add
dec
and
sub
sub
adc
adc
or
data16
aaa
push
mov
jne
xor
add
inc
or
imul
mov
jge
pop
aaa
lock
ds
jbe
jmp
call
push
adc
pop
xchg
adc
pop
call
push
call
mov
mov
(bad)
fild
or
je
mov
xor
mov
push
call
je
fcmovnbe
dec
and
inc
or
mov
inc
rcl
pop
pop
mov
pop
scas
sbb
sub
jg
jg
cmp
push
push
in
fmul
bound
pop
cmp
jne
jae
jg
mov
dec
lock
je
cld
or
cmp
je
cmp
sub
dec
push
imul
test
popa
sub
fild
cmp
jne
fisubr
lea
push
and
sub
(bad)
(bad)
jle
stos
mov
jne
call
sub
xchg
ds
jmp
mov
push
push
das
es
mov
and
jo
std
mov
sbb
mov
sar
mov
lea
mov
mov
mov
cmp
jge
lea
xlat
inc
adc
lds
call
ja
jmp
cmp
je
enter
inc
cmp
sub
and
mov
push
push
call
add
gs
adc
cmp
inc
add
push
call
or
fsubr
sub
jne
jmp
lea
scas
clc
call
sbb
sbb
mov
inc
test
jne
mov
mov
mov
inc
jle
pop
not
push
dec
pushf
pop
je
mov
jmp
mov
pop
sbb
jne
mov
pop
push
sub
vcmppd
je
sbb
sbb
or
std
push
cli
arpl
mov
mov
xor
(bad)
fild
inc
or
clc
add
or
inc
adc
mov
jmp
mov
add
push
xor
mov
sub
loopne
syscall
and
mov
dec
or
or
jno
or
jl
fld
adc
pop
cwde
xor
fist
in
or
loope
call
neg
xor
add
out
sub
leave
and
or
push
call
out
mov
and
(bad)
loope
mov
cmc
cmps
or
jne
xor
cmp
imul
cmp
push
pop
std
(bad)
mov
cmp
jne
pop
mov
mov
rcl
cmp
push
push
mov
call
aas
mov
call
je
jmp
inc
jno
sbb
add
pop
jne
xchg
aaa
(bad)
cmp
add
add
or
jl
add
stos
dec
add
inc
lock
test
push
pusha
or
jecxz
clc
push
setno
pop
movs
push
sbb
pop
push
xor
prefetch
push
or
ins
(bad)
jg
dec
xchg
and
test
std
cmp
jne
arpl
add
add
jns
out
outs
mov
adc
cmp
jne
cmp
outs
clc
add
je
inc
in
fld
retf
call
add
push
xor
add
test
inc
or
fstp
cmp
enter
je
xor
jb
xlat
jne
pop
jnp
std
sbb
inc
jb
inc
and
dec
add
add
div
call
into
call
aaa
mov
jae
call
jle
mov
sbb
mov
jnp
push
push
push
call
or
sti
mov
je
push
call
jmp
jg
jnp
add
inc
and
jmp
jge
mov
sub
fstp
mov
fwait
je
movs
in
or
and
jns
and
adc
ret
fld
sbb
adc
(bad)
cmp
adc
fdivr
add
je
cmp
add
push
jmp
sub
sub
call
in
pushf
loope
test
es
out
add
xor
pop
in
push
loop
add
sbb
mov
(bad)
jg
jne
inc
cmp
jne
test
je
dec
push
call
lods
loope
loopne
rcl
push
inc
xor
inc
addr16
mov
(bad)
aas
fadd
cmp
sbb
cmp
or
jns
pop
loop
aaa
je
jns
adc
adc
jne
push
jmp
dec
and
jg
stc
(bad)
(bad)
cmp
je
add
clc
maskmovq
test
mov
jmp
out
mov
sub
das
push
jg
and
push
js
mov
ror
mov
sbb
in
je
and
inc
cld
je
scas
hlt
inc
ja
retf
stos
cld
call
je
rcl
push
call
mov
jge
scas
adc
daa
out
push
push
call
jb
out
(bad)
pusha
je
jl
add
out
ja
jne
push
jmp
or
add
inc
add
xor
mov
or
add
imul
sub
stc
das
jne
jle
(bad)
inc
test
sbb
xchg
cmp
ret
out
es
test
je
xchg
dec
cmp
je
and
(bad)
je
repz
xchg
dec
test
pop
mov
je
jg
enter
es
push
push
mov
call
mov
call
adc
addr16
cmc
and
cmp
pop
(bad)
jle
xchg
push
call
inc
xor
jmp
mov
hlt
push
jne
cmp
out
adc
xor
test
pop
pop
jl
pop
add
pop
or
pop
cld
sbb
add
data16
push
jge
(bad)
lea
mov
call
or
clc
test
pop
pop
je
mov
call
or
jle
cld
outs
or
call
inc
popf
test
jne
push
call
call
lock
pop
cld
pop
mov
push
push
call
push
call
push
ins
xor
jne
arpl
cmp
mov
rol
pop
jmp
pop
adc
or
push
call
sub
clc
xlat
div
push
pop
jmp
and
mov
mov
loopne
mov
mov
rol
push
cdq
ret
hlt
sbb
adc
jge
push
out
sbb
push
call
or
mov
inc
in
out
iret
xor
adc
xchg
and
jbe
mov
and
cs
fs
dec
je
or
fcmovnbe
sbb
jmp
mov
push
call
pop
je
mov
and
inc
inc
mov
sub
inc
adc
jne
pop
cmps
jmp
inc
pop
add
mov
cmp
add
inc
gs
int3
push
clc
mov
pop
inc
add
mov
mov
cmp
test
push
(bad)
dec
add
cmp
inc
inc
mov
test
adc
gs
loop
sbb
std
dec
ret
sub
lea
movzx
sar
dec
sub
jns
out
jmp
sub
push
(bad)
jg
retf
add
je
sub
jne
adc
jle
jne
loopne
jmp
or
jne
pop
or
je
test
adc
jmp
sbb
xor
test
pusha
out
outs
sub
fcom
push
jo
test
add
test
hlt
ins
mov
test
sub
push
xchg
mov
jmp
pusha
(bad)
jbe
jne
ja
sub
ds
push
cmp
jne
push
ins
jne
inc
or
dec
pushf
jnp
aas
es
das
mov
lods
jnp
and
and
(bad)
mov
or
add
add
mov
jmp
in
cmp
push
push
pop
push
mov
popf
or
(bad)
call
not
lock
push
lea
push
call
cmps
inc
mov
rcl
sbb
mov
loopne
or
push
adc
mov
call
(bad)
call
adc
sbb
jp
pop
push
pop
inc
lock
(bad)
xor
jmp
push
call
push
mov
call
adc
mov
jmp
jg
idiv
mov
add
inc
mov
inc
adc
jmp
ja
pop
jmp
mov
mov
and
add
(bad)
fsubr
aaa
sbb
pop
je
mov
add
mov
sbb
hlt
mov
jmp
mov
jb
inc
inc
mov
mov
jg
jmp
push
cmc
and
outs
mov
mov
sub
mov
call
popf
pushf
cmovno
or
and
mov
rol
aas
adc
retw
cmc
cmps
xchg
(bad)
mov
mov
pop
push
dec
add
or
fmul
jge
icebp
push
lea
jbe
inc
call
pop
jmp
mov
xchg
hlt
or
sub
sub
push
and
mov
pop
mov
test
or
sbb
mov
push
call
jmp
xchg
dec
mov
mov
ret
or
add
and
call
out
or
inc
(bad)
cmp
je
cmp
jne
jo
xchg
jecxz
fsub
sbb
test
cli
and
jb
push
lock
inc
loopne
test
fild
mov
(bad)
push
and
test
add
push
ja
cmp
cmp
jne
test
inc
out
mov
(bad)
jge
or
retf
je
jne
cmp
clc
rcl
cwde
cmp
je
in
xor
mov
pop
push
call
inc
cld
out
loop
in
out
add
push
aam
in
fucomi
sbb
pop
lea
xor
arpl
jle
jecxz
add
cld
jg
jge
sub
sar
push
push
mov
call
inc
adc
push
push
std
cmp
push
test
je
push
and
je
adc
xchg
inc
aaa
mov
lahf
xor
jmp
pop
add
adc
dec
or
pop
jbe
call
retf
out
and
adc
sub
fst
je
inc
adc
jbe
inc
add
aas
or
sbb
mov
dec
jne
fsub
adc
add
repz
push
out
cmp
cmpxchg
mov
cmp
inc
xor
xor
call
dec
jp
stc
jmp
jmp
sti
je
dec
push
adc
inc
and
dec
mov
jne
push
sbb
cmp
bound
test
xchg
xor
and
out
repnz
or
stc
push
cmp
retf
jns
adc
rol
cmp
jne
std
fidiv
pop
add
enter
adc
mov
cmp
push
pop
mov
add
jmp
xor
fisubr
jg
sub
sti
ds
add
mov
jne
test
es
les
ja
movs
(bad)
pop
push
call
(bad)
sbb
cmp
je
sub
mov
xlat
shl
sub
adc
jb
mul
push
mov
hlt
outs
mov
inc
sub
or
adc
mov
call
cmp
test
js
push
jmp
mov
adc
scas
cmp
mov
or
jne
xor
test
int3
jae
mov
je
add
je
or
in
pop
pop
add
dec
push
call
xchg
test
sub
sar
push
(bad)
out
and
mov
call
in
loop
inc
clc
push
pop
add
test
push
jmp
mov
sbb
in
pop
or
inc
rcr
cmp
fsubr
pop
and
mov
inc
and
sbb
repnz
mov
inc
hlt
add
data16
mov
jmp
add
pop
jl
push
and
mov
cmp
pop
adc
daa
and
or
jnp
cmp
xor
mov
dec
add
pusha
pop
(bad)
push
ret
call
(bad)
je
pop
(bad)
push
mov
sub
lods
dec
or
or
cmp
out
test
push
clc
call
jne
jle
jne
add
and
xchg
add
dec
jge
inc
pop
xor
jmp
jmp
push
pop
dec
test
jae
inc
(bad)
jmp
add
push
fdiv
inc
or
call
and
mov
cmps
clc
add
xchg
je
jb
aas
push
out
mov
pop
jmp
mov
mov
call
adc
fdiv
ror
(bad)
mov
mov
adc
cmp
je
push
call
int3
punpckhbw
or
call
sar
sub
push
jae
sti
dec
and
outs
push
push
jge
std
push
pop
cmp
je
mov
or
add
push
push
push
push
jnp
mov
adc
or
aas
push
call
or
lea
jmp
call
ret
push
push
push
push
or
inc
jae
ror
das
adc
lahf
loope
sbb
mov
jmp
xor
test
je
push
add
cld
inc
and
inc
or
je
lods
pop
sub
fdiv
pop
mov
pop
dec
icebp
call
cwde
push
aas
in
push
push
add
(bad)
arpl
adc
cmp
inc
adc
(bad)
fidiv
sub
cdq
scas
jne
inc
call
add
mov
idiv
push
push
push
ja
or
out
jb
dec
jecxz
push
mov
add
call
pop
inc
xor
retf
leave
fist
loope
mov
sbb
push
xchg
sub
loope
push
fidivr
hlt
icebp
nop
jnp
add
cs
mov
jbe
mov
test
lea
push
xor
mov
or
add
sbb
push
mov
mov
call
int
into
cmp
inc
or
retf
call
dec
mov
mov
xor
cmp
lsl
pop
add
outs
call
mov
push
imul
fisub
push
dec
std
aaa
call
jg
jbe
mov
push
push
call
jbe
test
call
pop
jmp
push
xor
push
jns
push
call
pop
inc
mov
js
mov
les
mov
xor
test
cmp
popa
fist
push
mov
xor
cmp
mov
mov
jne
nop
add
jbe
inc
and
inc
cmp
sub
dec
je
dec
jne
ror
sbb
push
ret
call
cli
call
dec
cld
(bad)
(bad)
jmp
or
icebp
jmp
mov
push
jle
push
call
xor
add
xchg
test
cmps
mov
es
outs
jo
add
call
or
mov
push
add
loope
xchg
or
cmp
call
call
push
call
sub
or
sbb
mov
rcl
cmps
jne
call
jle
pop
jl
paddw
fcom
push
call
adc
(bad)
jmp
rcl
jle
push
and
cmp
je
call
sbb
jl
xchg
pop
data16
sti
out
test
cmp
(bad)
cmp
jno
(bad)
out
mov
jle
call
clc
mov
mov
push
jne
das
ss
mov
call
push
ja
xchg
or
je
add
out
jg
call
mov
je
or
(bad)
call
fisttp
mov
call
pop
(bad)
or
sbb
(bad)
sub
mov
mov
inc
dec
cmps
xor
cmp
movq
call
or
or
push
call
mov
adc
call
mov
jmp
inc
icebp
imul
clc
call
xchg
jecxz
cmc
dec
sbb
xor
push
call
push
lock
mov
or
dec
popa
jmp
cmp
jne
jb
outs
xor
call
push
and
std
fwait
cli
pop
rol
(bad)
jmp
test
xor
aaa
push
inc
pop
loopne
pop
in
daa
outs
ja
call
push
or
fsubr
jge
clc
jmp
push
(bad)
mov
or
ror
pop
fsubr
int3
xor
push
cmp
(bad)
shr
ror
hlt
call
sub
dec
mov
xchg
add
int
(bad)
adc
or
sub
call
adc
push
push
push
jecxz
(bad)
fmul
mov
dec
lock
mov
push
call
jne
jg
ins
xchg
out
jne
call
pusha
(bad)
scas
retf
lock
mov
inc
popa
jb
xor
pop
mov
aas
or
mov
je
ret
lea
cwde
scas
jne
test
into
add
or
pop
xchg
(bad)
jle
xor
push
lea
ja
les
icebp
jne
dec
lds
das
push
jle
rcr
dec
sub
jl
js
(bad)
daa
fld
push
inc
cmp
lahf
jo
sub
test
call
dec
pop
mov
mov
call
cwde
mov
pop
fs
pusha
(bad)
in
gs
sbb
pop
sub
inc
add
popf
call
mov
push
leave
sahf
clc
mov
add
jbe
and
test
inc
adc
push
call
inc
cs
hlt
push
(bad)
out
out
dec
call
call
jmp
ror
call
ficomp
jmp
movs
pop
fisub
or
inc
aaa
add
dec
inc
adc
mov
add
sub
push
clc
or
ret
xor
(bad)
cmp
daa
add
or
(bad)
mov
mov
mov
mov
inc
mov
mov
mov
mov
sub
inc
sbb
xchg
rol
inc
std
and
aad
inc
adc
jo
call
rcr
and
jecxz
push
inc
lods
push
sbb
and
push
call
sub
aaa
icebp
push
mov
and
lea
mov
test
idiv
cmp
push
push
jne
push
out
jbe
jmp
adc
cld
sbb
mov
lock
add
lahf
sub
jle
adc
call
aam
fwait
ds
sahf
adc
enter
or
fucom
bound
mov
or
sub
sbb
call
jl
(bad)
shl
inc
call
mov
jne
call
cld
(bad)
(bad)
push
and
dec
add
loope
idiv
cmp
pop
jne
mov
mov
call
(bad)
dec
mov
call
push
push
push
mov
int
test
call
push
call
ja
mov
dec
cmp
jbe
cmp
jbe
sbb
aaa
ss
inc
les
inc
sbb
xor
and
xchg
jmp
inc
add
sub
jns
add
fwait
mov
mov
cld
mov
mov
add
(bad)
adc
in
push
call
test
jl
or
lea
ja
push
movzx
push
sbb
(bad)
std
fist
mov
sbb
retf
mov
mov
jle
push
push
lea
pop
lea
lea
sub
mov
mov
(bad)
(bad)
call
mov
mov
mov
mov
inc
add
cmp
jl
pop
pop
mov
pop
(bad)
dec
push
bound
dec
and
mov
cmp
je
cmp
je
aam
(bad)
clc
adc
clc
sbb
and
xchg
mov
pop
mov
jmp
push
jmp
cmp
jmp
mov
loopne
jne
cmp
jne
push
jmp
push
jmp
ja
ds
mov
pop
push
jg
in
or
push
mov
nop
or
adc
fist
out
add
mov
mov
call
call
movsx
mov
call
jg
rcl
fdiv
cmp
pop
std
inc
jo
popf
je
adc
inc
pop
add
cmp
dec
jle
lea
inc
lds
mov
inc
jne
mov
stc
add
add
nop
inc
test
dec
les
mov
cmp
lea
ret
mov
xor
and
std
and
add
add
sub
ss
push
out
mov
mov
push
ret
mov
sbb
or
add
(bad)
call
mov
mov
mov
mov
sbb
sub
into
std
(bad)
dec
or
inc
or
sub
add
push
nop
add
(bad)
(bad)
cmp
jl
mov
jmp
push
call
sbb
jg
sub
pop
mov
sub
adc
or
push
adc
inc
sub
inc
cmp
mov
and
arpl
mov
add
xchg
mov
je
sub
add
inc
and
and
jle
add
inc
adc
ja
repnz
add
mov
mov
out
inc
or
push
push
mov
push
lea
cs
push
push
jno
xor
out
dec
scas
(bad)
cmp
mov
jne
mov
push
sub
ficom
out
shr
lea
into
call
sbb
push
mov
mov
add
cdq
push
mov
lock
idiv
inc
mov
xor
ins
sbb
icebp
call
daa
pop
(bad)
hlt
mov
add
mov
mov
(bad)
sbb
call
add
inc
lea
push
repz
jbe
inc
push
cli
sbb
sub
pop
push
lea
pop
push
fidivr
scas
sbb
cmp
and
cld
mov
mov
popf
push
loope
xor
jmp
xchg
outs
mov
inc
and
mov
imul
mov
jne
jle
push
jnp
cmp
mov
mov
leave
cmp
xor
add
cmp
mov
or
jne
mov
or
jne
hlt
mov
xor
shl
cmp
sete
add
ja
aad
pop
xlat
mov
mov
or
hlt
sbb
(bad)
fbld
fsubr
push
call
push
push
mov
call
imul
mov
inc
hlt
push
push
call
movsx
cmp
pop
je
push
cmps
mov
sti
xchg
rcl
idiv
jne
mov
or
xor
xor
call
cld
pop
jno
and
sbb
pop
xor
mov
sbb
rdpmc
sar
je
cmp
mov
push
push
js
cmp
mov
adc
fadd
and
xchg
pop
stos
mov
jmp
adc
lock
inc
sti
cmp
jne
mov
lock
je
cmp
idiv
jge
je
push
push
call
jmp
aad
or
test
jge
push
push
call
fdivr
mov
jne
mov
adc
cmp
push
cmp
mov
je
data16
jne
pop
(bad)
dec
push
adc
cld
call
add
gs
jb
(bad)
call
(bad)
cmp
push
inc
xor
push
je
or
mov
sub
pop
pop
mov
mov
cmc
cmp
retf
mov
loopne
push
ret
outs
call
fsubr
or
push
retf
mov
mov
or
add
and
xchg
ja
or
and
xor
adc
add
and
xchg
mov
mov
outs
and
fwait
or
mov
mov
mov
mov
mov
les
add
mov
sbb
je
push
call
mov
or
xchg
sbb
sbb
mov
push
call
test
xor
xchg
mov
and
push
sbb
xchg
push
mov
mov
stos
push
push
idiv
jmp
cmp
les
jmp
mov
addr16
push
std
mov
inc
lea
mov
cld
push
push
add
push
push
push
call
call
rol
cmp
loopne
mov
inc
xor
test
cmc
sbb
inc
adc
ret
jbe
jmp
fcmovb
dec
sub
adc
call
mov
jmp
ja
jne
call
inc
xor
xor
mov
cmp
call
or
(bad)
call
lock
mov
je
mov
cmps
stos
aas
ins
test
push
call
call
xor
push
mov
mov
push
sbb
mov
cmp
mov
or
call
mov
ret
out
xor
push
mov
mov
mov
dec
sbb
js
sti
push
push
push
call
lea
xlat
or
imul
in
imul
push
clc
push
push
or
popf
add
push
sbb
cmp
out
sbb
xor
das
mov
push
lea
push
and
enter
push
or
inc
clc
in
push
sbb
or
adc
inc
push
hlt
add
(bad)
movs
xor
lea
int3
test
cmp
fsubr
ror
std
cmp
mov
mov
add
pop
mov
pusha
mov
mov
jp
aas
(bad)
fidiv
call
xchg
adc
push
or
pusha
call
and
xor
dec
mov
(bad)
ja
lock
push
(bad)
daa
add
push
call
mov
pop
ds
add
loope
cmp
jne
xor
inc
mov
or
dec
push
dec
sub
popf
pop
clc
dec
mov
xor
outs
push
call
mov
or
and
and
adc
leave
adc
in
ror
mov
jmp
ja
sbb
lock
lock
and
iret
aam
mov
push
or
call
call
mov
add
outs
mov
lea
mov
adc
rcl
push
mov
fbld
push
inc
jne
mov
or
or
sub
sbb
and
dec
jmp
dec
std
mov
push
xor
push
call
add
jbe
or
dec
pop
or
add
enter
push
call
ffree
mov
xchg
dec
push
call
push
or
xchg
sbb
jne
cmp
or
adc
in
pop
call
cmp
je
cmc
out
(bad)
out
adc
or
push
call
std
add
lock
and
call
int3
or
or
or
shl
mov
out
fdiv
lods
or
je
pop
cwde
jle
sbb
adc
cmps
call
pop
mov
mov
cmp
pop
adc
(bad)
shr
xchg
fdivr
inc
lea
sub
dec
cmp
push
push
push
call
cmp
jne
push
push
call
pop
pop
mov
jb
ds
mov
sbb
gs
adc
add
inc
(bad)
aas
jb
or
inc
or
out
dec
or
mov
jne
test
(bad)
loop
je
call
add
dec
aam
shr
loopne
outs
push
out
inc
out
adc
jmp
or
(bad)
sub
mov
inc
mov
push
push
or
out
mov
jmp
xchg
push
adc
fidiv
cld
push
(bad)
dec
push
sbb
test
jp
mov
mov
push
push
cdq
test
lds
jmp
push
xchg
mov
cmp
jne
mov
clc
call
and
mov
cmp
jne
cmp
jne
cmp
das
jne
cmp
mov
push
add
push
xor
test
sete
(bad)
(bad)
jg
sub
pop
jne
mov
cmp
jne
mov
cmp
es
jg
jne
and
sbb
sub
jbe
push
or
call
mov
add
sub
dec
adc
(bad)
or
leave
jne
mov
mov
add
inc
test
sar
add
xor
shr
or
mov
sbb
or
jmp
add
add
call
mov
xor
test
idiv
inc
stos
push
daa
push
adc
add
or
std
loop
clc
jno
push
call
inc
jne
jg
call
popf
daa
jg
inc
sbb
lea
call
aad
idiv
cmp
push
push
pop
adc
gs
pmullw
push
enter
iret
call
mov
jmp
sbb
test
mov
push
cld
(bad)
call
or
ins
stos
loop
inc
cld
jl
cmp
jbe
mov
aaa
icebp
out
sbb
sbb
mov
call
jmp
push
mov
and
or
add
dec
pop
mov
cmp
(bad)
jmp
js
add
dec
cmp
mov
cmp
call
in
pushf
mov
cmp
add
push
pop
jg
scas
ret
cmp
xor
call
add
loopne
cmp
push
mov
mov
pop
or
add
clc
test
jne
add
cld
icebp
mov
mov
sar
xchg
cmp
ret
outs
push
push
call
test
je
lea
aaa
sbb
cld
call
mov
into
call
jbe
add
ins
add
pinsrw
inc
inc
xchg
cmp
and
jl
rol
sub
and
add
nop
pop
adc
cwde
mov
push
test
sar
pop
push
add
addr16
jg
pop
int3
outs
idiv
push
jo
inc
pop
jmp
xor
and
mov
pusha
jbe
(bad)
mov
cmp
pop
pop
je
mov
push
mov
call
push
out
outs
xchg
pop
push
mov
mov
ret
jmp
push
call
call
mov
cmp
je
inc
cmp
sbb
xchg
xor
xchg
std
xchg
adc
xchg
cmp
pop
jb
rcl
aad
lahf
mov
fldcw
sbb
pop
cli
and
pop
jmp
mov
xor
lea
xchg
mov
call
fs
stos
inc
cmp
push
push
(bad)
shr
fwait
pop
push
inc
inc
or
add
shr
pop
jmp
pop
idiv
call
or
jge
add
add
add
adc
mov
add
jnp
aaa
sbb
cmp
adc
cmp
add
mov
mov
inc
jmp
(bad)
shr
sahf
idiv
cmp
jne
mov
cwde
call
je
lea
call
sbb
and
mov
fldcw
xor
call
jmp
popf
add
bound
mov
ja
aaa
mov
sbb
fmul
jo
data16
mov
call
dec
sub
in
dec
mov
or
out
or
scas
es
adc
mov
setge
mov
shl
jmp
(bad)
jmp
loope
add
add
add
push
sub
call
and
cmp
rcr
test
inc
mov
ret
aam
sbb
or
dec
pop
add
shl
nop
rol
dec
popf
and
push
push
push
push
mov
out
lods
cmp
mov
add
call
mov
jge
mov
or
push
add
aaa
call
inc
jle
call
jmp
call
sar
fcomp
cwde
dec
cld
push
push
push
stos
retf
jbe
push
push
push
call
clc
pop
push
mov
icebp
or
mov
bsf
push
add
sar
adc
iret
push
paddd
out
jne
push
or
cmp
xchg
or
push
push
push
push
pop
sbb
or
inc
inc
(bad)
cli
(bad)
jg
stc
inc
ret
push
push
call
mov
gs
xchg
jle
add
xchg
mov
inc
and
les
mov
mov
mov
inc
shl
xor
cmp
mov
xor
es
mov
jo
std
fsubr
sti
cmp
add
in
and
shl
mov
add
out
rol
in
inc
add
ja
into
pop
retf
mov
(bad)
push
cmp
xchg
shr
add
loopne
add
rcr
sbb
int3
(bad)
call
xchg
mov
jmp
dec
test
jle
and
push
or
push
pop
or
shr
call
jmp
cld
inc
inc
and
mov
mov
call
push
pop
ins
fadd
push
push
rol
jae
sbb
push
adc
sti
cmp
add
adc
jb
cmc
fucomp
or
push
add
mov
or
cmc
into
push
mov
mov
idiv
jg
push
cmp
jne
mov
inc
inc
inc
inc
jmp
and
pop
jno
or
mov
pop
or
push
sbb
or
shr
push
push
retf
lea
std
xchg
sub
sbb
inc
sti
add
mov
adc
sbb
add
loopne
fsub
call
mov
pop
leave
ret
adc
clc
enter
shl
fdiv
test
ins
into
call
adc
add
inc
and
push
push
ins
inc
popa
jo
je
adc
xor
adc
pop
inc
pop
or
adc
sbb
daa
sbb
ss
push
aas
push
cld
dec
retf
adc
fnstenv
call
inc
add
add
push
mov
add
jne
push
xor
push
pop
xor
pop
dec
or
or
mov
sar
ret
mov
cmp
jne
xchg
in
push
push
cmp
or
dec
push
(bad)
or
cmp
xor
mov
sbb
mov
cmps
or
inc
or
sbb
es
and
lea
cmp
lock
fisttp
xor
add
enter
push
ins
jo
sbb
mov
fild
out
add
mov
add
mov
mov
mov
add
sahf
aam
adc
out
or
mov
call
sbb
mov
push
mov
add
add
add
or
xchg
push
popf
jne
std
sbb
mov
les
nop
adc
xlat
popf
jne
or
inc
mov
sti
ja
pop
aam
mov
fmul
adc
push
xor
push
ret
cmp
mov
add
in
rol
mov
cmp
dec
pop
aaa
xor
cmp
cmp
add
call
jle
cmp
jg
sub
ret
sub
xor
inc
(bad)
sbb
sbb
pusha
inc
xlat
dec
es
pop
sub
pop
nop
or
sbb
pop
ret
cmp
je
mov
cld
sub
in
jmp
mov
mov
out
(bad)
aas
or
or
cmp
je
cmp
jne
xchg
rol
loope
test
out
stos
(bad)
push
movsx
cmp
ficomp
sbb
push
in
loop
adc
(bad)
pop
or
xor
mov
imul
xlat
mov
jmp
jnp
add
inc
aas
mov
dec
jne
sbb
(bad)
fbstp
add
add
lea
cmp
mov
jae
sti
mov
or
inc
cmp
jb
aaa
popf
mov
mov
je
mov
test
sar
push
xchg
bound
test
pop
jnp
and
clc
jae
mov
push
or
inc
mov
cmp
add
int
repnz
mov
and
call
add
cmp
inc
jg
xchg
test
xor
push
sub
push
or
xchg
ret
hlt
mov
mov
add
call
neg
cli
scas
sub
and
call
push
add
cmp
cmp
push
neg
cmp
sub
cmps
(bad)
lea
imul
or
mov
mov
out
(bad)
adc
push
xor
and
cmp
out
add
je
xchg
inc
sub
adc
lock
push
inc
inc
call
add
(bad)
mov
jmp
pop
push
add
adc
sbb
(bad)
jmp
cli
fbld
or
push
push
push
mov
pop
xor
jae
jb
push
cli
call
mov
call
jle
push
call
pop
mov
jne
pop
and
pop
mov
push
mov
add
push
xor
das
mov
push
mov
pop
div
data16
or
pusha
push
add
inc
push
(bad)
(bad)
aas
sub
sti
das
and
neg
sbb
and
add
pop
mov
ret
inc
clc
jne
sqrtps
cmp
je
mov
and
jne
mov
jp
jne
sar
jge
add
mov
call
sbb
sub
leave
ret
lahf
shr
fidivr
xchg
inc
(bad)
fld
sahf
movs
mov
sub
ja
mov
mov
mov
inc
add
mov
pop
mov
jmp
fdiv
(bad)
or
jge
add
ret
sahf
pop
rcr
inc
call
mov
das
dec
pop
and
out
sub
push
lock
jo
inc
icebp
dec
sbb
ret
cmp
jmp
mov
pop
in
sbb
push
push
in
push
ds
or
das
dec
push
and
cld
(bad)
loopne
(bad)
mov
push
call
call
push
adc
jne
xchg
call
push
push
call
fstp
out
cmp
sbb
mov
fsubr
push
call
cmps
(bad)
fucomp
adc
add
mov
pop
push
push
call
add
std
mov
jnp
push
push
imul
cwde
cmp
mov
adc
xlat
sub
push
push
ins
jo
pop
pop
pop
mov
aaa
jo
add
shl
in
icebp
jg
push
and
mov
hlt
movs
movs
push
movs
pop
mov
ss
lea
xchg
mov
xchg
test
lds
neg
push
call
test
xchg
sub
(bad)
clc
jmp
retf
or
into
jge
lea
or
adc
mov
cvtps2pi
pop
pop
inc
popf
dec
mov
and
jg
mov
jmp
add
ror
ror
or
loope
jnp
and
es
sub
push
call
dec
jmp
add
data16
or
je
lock
cmp
jge
mov
lea
fdivr
aad
xor
mov
int3
popa
(bad)
mov
or
(bad)
out
sbb
jle
je
mov
data16
fcmovnb
pop
cmp
jbe
mov
cmp
mov
shr
mov
jmp
or
imul
xor
call
call
push
xor
jl
daa
jle
out
loope
mov
jmp
push
call
hlt
jg
ja
or
stc
call
test
pop
jne
push
jmp
and
(bad)
dec
ret
jnp
add
push
sub
in
mov
push
ins
cwde
ret
or
and
push
je
js
jl
adc
push
and
movups
ret
mov
sbb
bound
and
pusha
or
les
(bad)
clc
mov
inc
lods
enter
mov
add
or
mov
or
or
les
add
call
push
mov
push
push
call
cmp
pop
add
cs
fwait
mov
or
push
sar
add
pop
sti
mov
sub
add
push
cmp
pop
pop
xor
pop
push
aas
add
push
inc
cld
mov
mov
mov
pusha
xor
sbb
and
mov
adc
mov
inc
add
pop
stos
mov
rol
xor
cwd
push
pusha
jg
lea
adc
idiv
lahf
sbb
je
inc
jmp
dec
cmp
add
xor
in
add
jmp
inc
or
lods
and
add
rol
push
test
std
addr16
or
dec
cmp
sub
dec
or
leave
dec
je
cmp
cmp
mov
push
call
enter
or
inc
js
sub
rcl
push
and
mov
loop
(bad)
pop
mov
push
aaa
adc
and
or
or
je
add
jmp
cld
test
je
mov
mov
outs
sar
out
add
(bad)
jg
(bad)
inc
cmp
aad
cmps
dec
push
lea
neg
push
sbb
mov
loope
add
jg
add
ret
xor
cmp
mov
push
test
jne
mov
lea
mov
mov
je
sub
je
adc
outs
call
add
jmp
cmp
jne
mov
mov
cmc
cmp
je
adc
cld
inc
mov
and
push
push
leave
push
lds
inc
or
or
inc
mov
test
mov
cli
or
fmul
dec
les
pop
mov
les
mov
call
int3
xchg
jecxz
ss
mov
nop
mov
adc
push
je
int
lea
mov
adc
adc
inc
adc
pop
push
adc
xor
bound
cmp
mul
fadd
sub
push
(bad)
sub
loop
lock
addr16
sahf
in
and
mov
in
or
xor
sbb
ja
je
sbb
sbb
leave
fistp
(bad)
je
mov
jne
cmp
jne
ror
add
sbb
add
mov
into
lds
std
inc
test
push
fs
and
or
mov
sar
add
inc
sub
test
mov
xor
push
cmp
inc
cmp
std
outs
call
repz
ja
jne
lea
push
push
inc
pop
xchg
adc
inc
pop
adc
push
mov
neg
push
mov
add
sbb
daa
or
push
sbb
outs
or
xor
mov
push
jl
(bad)
call
inc
or
or
adc
ficom
sar
sti
cmp
push
push
and
ss
jecxz
add
mov
or
clc
lds
and
jle
jle
xor
outs
mov
loope
arpl
mov
mov
lea
lds
and
dec
dec
mov
mov
adc
pop
cmc
mov
mov
mov
cmp
call
push
mov
mov
rol
sbb
push
push
loopne
pop
push
push
(bad)
jge
popa
xor
or
add
sub
fwait
call
test
xor
add
mov
test
hlt
(bad)
call
je
mov
mov
jmp
mov
mov
test
jne
aaa
add
jne
mov
call
std
(bad)
jmp
mov
mov
mov
push
push
mov
ja
mov
movs
push
push
inc
call
(bad)
jg
dec
lods
dec
mov
dec
inc
xor
inc
shr
jg
enter
lock
call
mov
mov
mov
mov
mov
call
inc
mov
rcl
adc
(bad)
in
push
push
or
push
lea
jne
jmp
fdiv
push
or
add
cld
push
push
call
mov
add
mov
jmp
push
jmp
sbb
adc
or
add
cli
or
clc
nop
mov
push
mov
movs
cld
pop
aam
sbb
(bad)
or
mov
mov
bound
mov
call
adc
cli
(bad)
adc
push
push
call
push
(bad)
mov
(bad)
sbb
and
mov
call
push
mov
(bad)
mov
push
mov
call
or
pop
pop
xchg
jne
call
and
test
and
jp
and
lea
icebp
jg
pop
or
push
adc
jbe
jne
push
stos
or
mov
xchg
jno
and
sahf
mov
add
add
call
call
add
call
push
push
cmp
jne
mov
outs
loopne
cmps
xlat
pop
mov
jmp
cli
lea
jl
push
jecxz
nop
adc
(bad)
inc
inc
pop
pop
jne
add
inc
jne
mov
cmc
jmp
mov
add
fild
nop
sbb
add
inc
sahf
add
or
inc
add
loopne
or
add
adc
inc
lds
test
mov
jae
pop
les
xor
retf
imul
xor
repz
jo
lods
xchg
and
lea
jns
fcomp
shl
add
mov
push
adc
push
mov
push
dec
dec
and
inc
ficomp
call
cmp
jne
cmp
jb
test
pop
xchg
fstp
jmp
pop
add
in
in
or
call
mov
push
add
inc
push
mov
xchg
dec
push
mov
or
push
jne
lea
jecxz
ret
push
data16
adc
and
mov
pop
clc
xchg
add
add
xchg
mov
push
xor
mov
arpl
inc
dec
and
ins
mov
push
test
push
push
in
adc
lock
das
mov
bound
push
nop
or
fs
test
or
cld
or
int3
or
mov
or
test
push
movs
fcom
mov
push
push
xchg
mov
ret
sbb
invd
lahf
loopne
out
adc
or
das
icebp
call
pop
push
lds
loope
neg
(bad)
cmp
inc
cmp
push
push
inc
dec
hlt
jg
mov
test
je
test
je
push
add
call
dec
adc
dec
lock
push
call
add
pop
mov
std
sar
mov
inc
pop
mov
jo
(bad)
std
sti
jg
add
sbb
je
fdiv
or
or
fstp
shl
add
test
pop
jge
ret
dec
and
jmp
popa
push
add
adc
ja
inc
mov
mov
clc
add
add
(bad)
jne
push
call
adc
and
and
adc
add
pop
jo
mov
lock
or
mov
loop
ret
push
mov
or
mov
inc
cld
push
into
call
jb
or
(bad)
jmp
mov
ss
idiv
call
loope
push
add
push
push
mov
call
add
push
mov
push
pop
fdivrp
mov
mov
ins
inc
mov
mov
cmp
jmp
jmp
jl
inc
ret
sub
jmp
mov
(bad)
dec
in
iret
inc
add
or
adc
jmp
push
push
push
fs
pop
adc
cmp
adc
sub
jns
dec
sub
jmp
les
jmp
add
and
in
sti
mov
jmp
rdmsr
leave
jmp
les
inc
sub
mov
sub
xchg
cmp
jmp
pushf
lahf
add
mov
jmp
bound
jmp
pusha
lahf
ins
cmp
std
popf
add
and
idiv
or
cmp
or
fst
fisttp
add
in
loop
jg
sar
jmp
xchg
cmp
jg
adc
test
or
sbb
mov
sbb
inc
mov
sbb
leave
push
in
iret
repnz
sbb
dec
adc
jmp
inc
xchg
and
adc
out
loopne
jmp
or
movaps
adc
jmp
sub
push
in
dec
mov
sub
retf
or
jns
shl
jmp
jge
mov
xor
(bad)
rdmsr
xchg
cmp
jnp
outs
mov
and
mov
push
mov
aad
jle
imul
or
adc
enter
call
out
ss
popa
sbb
add
add
cmp
add
sub
adc
call
cli
lods
jp
inc
les
jo
push
sbb
arpl
sbb
push
push
mov
(bad)
(bad)
(bad)
fcos
xor
test
call
cmp
jne
push
mov
jmp
mov
cmps
sbb
shl
(bad)
jb
push
push
nop
sbb
adc
push
inc
call
test
dec
fcmovnbe
es
in
jne
arpl
repz
pop
adc
mov
pop
add
mov
add
cmps
in
xor
call
ret
movsx
jl
cmc
xchg
sti
fimul
sbb
nop
add
std
or
iret
push
push
mov
mov
pop
loope
dec
jg
div
pop
mov
cmp
je
push
mov
call
lea
ds
mov
xor
out
or
push
dec
cmp
clc
retf
pop
jmp
dec
adc
sar
retf
mov
cmp
inc
mov
je
cmp
xchg
outs
loopne
dec
push
js
or
inc
je
mov
adc
add
jmp
cld
mov
pop
jo
outs
lods
cmps
inc
mov
pop
je
call
jmp
call
or
inc
enter
push
mov
test
lock
(bad)
js
or
or
icebp
jle
stos
mov
push
mov
jne
or
clc
pcmpeqw
adc
jne
xor
arpl
jge
xlat
push
and
add
mov
enter
clc
pop
jne
sub
mov
rol
sbb
scas
mov
lsl
add
adc
jne
xchg
mov
jmp
call
inc
cmp
jne
arpl
out
cmp
test
sub
add
(bad)
scas
or
pop
sbb
cmp
in
xchg
ja
cwde
mov
call
sub
add
add
test
xor
cmps
jo
or
or
pop
cmps
sbb
jmp
jne
and
xor
int3
push
xor
jb
cmp
out
fs
out
sub
mov
push
fdivr
icebp
pop
mov
retf
adc
adc
stos
lods
add
add
jge
cmp
cmp
add
and
xor
inc
cmp
adc
popa
and
sub
imul
push
and
jg
(bad)
and
jae
cmp
mov
jge
sar
cmp
jne
pop
xor
call
call
add
and
ror
arpl
xlat
add
xlat
je
pop
hlt
aas
mov
pop
pop
ret
and
and
add
mov
icebp
jne
lea
loopne
bswap
push
sbb
dec
out
into
adc
pop
jnp
int3
adc
cmp
inc
jae
ja
mov
add
xchg
dec
mov
mov
push
push
mov
mov
mov
inc
add
mov
call
in
ins
pop
out
jne
(bad)
ror
inc
cs
add
push
mov
in
dec
hlt
call
je
mov
mov
mov
adc
nop
sub
jp
je
dec
jmp
sar
cmps
cmp
adc
and
xor
push
add
inc
pop
or
push
mov
adc
mov
mov
xor
push
mov
mov
mov
lea
push
or
fcom
jne
aam
push
aas
pop
lock
inc
fmul
cmc
(bad)
call
test
mov
jne
cmp
out
mov
jbe
call
or
sti
out
mov
cmp
push
call
and
push
fldcw
sub
push
inc
je
sub
push
push
cmp
fild
sub
sbb
mov
test
je
add
shl
ret
pop
add
mov
push
inc
xchg
fisttp
mov
lea
push
fisub
ds
stc
pop
bswap
add
pushf
pop
ja
pop
push
add
rol
add
fsub
push
(bad)
mov
ins
js
ja
or
icebp
cmp
sbb
add
jp
lock
mov
and
mov
push
aaa
lock
xchg
or
push
push
call
(bad)
sbb
push
xchg
ret
push
ror
mov
mov
cmp
stc
ret
push
xor
fadd
add
mov
push
call
mov
push
push
jp
scas
js
jnp
cmp
ins
ret
add
icebp
or
cmc
rol
(bad)
cwde
lea
dec
or
adc
xor
sar
ss
pop
hlt
sub
outs
mov
or
ret
and
mov
jg
inc
loope
inc
fcmovnbe
inc
shr
mov
pushf
lea
shl
ror
and
popa
jp
adc
jne
mov
fldenv
pop
mov
inc
inc
lea
inc
cld
mov
ror
les
adc
push
call
mov
pop
sbb
(bad)
and
mov
dec
mov
ret
xchg
adc
dec
jmp
lea
mov
xchg
mov
je
mov
mov
cmp
jne
push
(bad)
fist
ds
inc
and
ret
sbb
ror
sub
push
cld
or
loope
push
(bad)
jmp
xchg
mov
leave
scas
pop
mov
push
push
in
(bad)
jmp
(bad)
mov
mov
cmp
jne
mov
push
push
call
aas
cmp
inc
cld
jle
call
push
call
std
aas
and
inc
clc
mov
add
cmp
jge
ja
mov
cld
adc
cmp
lea
mov
jne
and
shr
mov
xchg
xor
xor
push
adc
push
and
dec
or
sub
mov
shl
cmp
rol
ret
and
mov
loope
add
pop
mov
adc
cli
clc
inc
gs
out
or
clc
xchg
sbb
call
lea
jl
pop
mov
stos
and
mov
xor
and
movs
and
mov
sbb
cmp
into
hlt
and
push
mov
inc
sub
leave
adc
add
(bad)
pop
je
retf
add
rol
(bad)
(bad)
adc
add
sbb
retf
mov
adc
cld
scas
sbb
adc
adc
(bad)
pop
dec
lea
call
adc
ja
xlat
add
mov
xchg
push
fwait
and
sar
jmp
mov
jbe
push
cmp
push
cld
sbb
inc
pusha
inc
cmps
cmp
mov
dec
add
mov
imul
xchg
sbb
pop
or
jecxz
hlt
cmp
dec
ror
push
mov
xor
icebp
and
ins
and
(bad)
in
mov
push
push
xor
sahf
sub
(bad)
dec
popf
adc
xchg
pushf
test
cdq
psubb
mov
and
jmp
jle
add
fcom
aaa
cmc
call
add
pop
or
cwde
clc
inc
pop
adc
imul
adc
cmp
arpl
sti
jg
(bad)
imul
pop
push
cwde
or
inc
jne
mov
add
(bad)
je
mov
cmp
(bad)
inc
ja
cmp
jne
cmp
je
mov
mov
jmp
lea
cmp
je
jo
call
jmp
mov
inc
and
test
jg
loopne
je
pop
cmp
dec
js
cmp
jge
cmp
jge
fdivr
cmp
mov
das
addr16
or
cdq
mov
or
jmp
lahf
or
sbb
adc
call
adc
push
sbb
sub
cdq
mov
mov
or
jmp
fsub
jmp
aam
sub
retf
enter
shl
rol
cwde
push
sbb
ret
or
inc
add
push
leave
lea
das
sbb
xor
sbb
push
push
push
or
call
or
push
mov
add
xor
add
sub
pusha
inc
and
xchg
sti
jg
dec
push
mov
push
push
aaa
mov
inc
bnd
pop
push
call
cdq
(bad)
xor
std
push
ins
xor
xor
movs
outs
hlt
(bad)
cld
or
ja
gs
add
add
add
jg
push
call
pop
inc
hlt
je
mov
mov
jmp
push
lea
icebp
or
idiv
jmp
add
lock
aaa
adc
inc
fist
mov
call
fild
mov
call
lea
mov
add
push
lea
mov
call
aas
rol
dec
pop
jmp
mov
pusha
cmp
rcl
dec
lds
shr
add
or
je
fidiv
lods
push
jmp
loopne
(bad)
shl
test
sar
clc
jne
push
call
and
jmp
aas
add
and
mov
fdiv
adc
and
cmp
jne
inc
std
fwait
cmp
push
mov
xlat
mov
cmp
jne
ja
jno
jo
add
push
aaa
lock
push
cwde
jmp
push
push
call
retf
mov
je
mov
sub
cmp
jg
inc
push
push
mov
call
inc
cld
jle
aaa
sbb
push
lea
call
cs
cmp
jo
mov
or
loopne
mov
cmp
jne
jmp
jl
add
test
add
add
loopne
mov
push
imul
adc
outs
jle
inc
adc
fild
mov
push
ds
adc
or
ror
or
mov
call
add
or
mov
mov
icebp
sbb
scas
or
jo
mov
dec
lea
cmp
cmp
xor
dec
jp
push
jle
daa
ret
aam
aam
push
fxtract
mov
fisttp
cmp
mov
sbb
pop
add
cmp
out
or
jmp
not
test
push
(bad)
jecxz
mov
ss
call
inc
aad
shl
fld
push
xchg
pop
jg
jae
out
lea
call
out
out
enter
mov
rcr
or
lahf
stos
jge
pop
(bad)
fstp
cmp
shl
movs
sub
aam
xchg
in
call
mov
(bad)
es
mov
jae
jle
cwde
les
xchg
jl
hlt
mov
cmps
pushf
dec
adc
cli
mov
cs
repz
add
lea
call
inc
sbb
mov
scas
pop
push
mov
imul
mov
lea
cmp
push
adc
mov
jo
xor
mov
push
scas
jmp
sbb
cwde
add
jmp
test
stos
xchg
es
dec
inc
aas
xor
jo
imul
jmp
add
aad
push
push
jg
sub
stos
or
dec
ds
and
mov
sub
jne
lea
ret
jmp
or
jge
je
mov
test
xlat
push
mov
call
push
sub
lea
(bad)
push
push
call
push
xor
push
mov
je
mov
cmp
je
add
data16
mov
pop
je
add
jne
mov
cmp
jne
lea
xor
or
imul
ficom
sbb
ss
ficom
dec
and
(bad)
cld
fwait
(bad)
jmp
mov
scas
repz
mov
je
xor
call
pop
nop
lea
push
push
subps
add
lock
sub
mov
xor
jne
jecxz
(bad)
bound
pop
jl
test
xor
lea
rcr
add
aaa
shl
mov
mov
(bad)
mov
xor
jp
jl
sbb
sti
(bad)
mov
inc
js
mov
lea
movs
movs
lea
movs
push
push
lods
clc
outs
call
cmp
mov
xchg
jne
call
jmp
call
mov
repz
adc
int3
push
add
sub
pop
out
mov
js
pop
sbb
jmp
cmps
idiv
call
leave
mov
aad
pop
js
push
sbb
or
sbb
jg
push
mov
push
call
push
inc
out
inc
sub
cld
mov
je
jge
mov
mov
call
cmp
aaa
push
add
or
call
lea
mov
call
ja
cmp
jne
(bad)
jne
dec
push
je
lods
int3
adc
popf
cmp
mov
xor
add
lock
pop
fnstcw
rep
(bad)
call
pusha
call
arpl
fs
push
and
lea
inc
and
adc
stos
leave
iret
or
es
mov
arpl
mov
in
adc
ss
inc
or
dec
or
pop
mov
(bad)
dec
dec
or
je
push
call
add
cmp
or
cmp
jb
jmp
lea
ret
fucomip
ss
push
mov
adc
ret
jg
or
add
push
push
push
jle
ja
call
cmp
dec
clc
call
pop
push
xlat
add
adc
call
or
add
or
add
sbb
sbb
push
push
mov
sbb
push
push
lea
push
push
xor
loopne
out
clc
out
mov
sbb
div
sub
adc
cmp
(bad)
out
call
jbe
test
jne
jmp
test
mov
jne
mov
jmp
mov
inc
or
pop
dec
js
enter
and
mov
add
pop
je
sar
scas
std
inc
or
jbe
call
push
arpl
into
add
fld
jne
std
inc
cli
push
inc
popf
or
add
add
lea
push
or
inc
repz
xchg
and
(bad)
cmp
test
sbb
mov
mov
sbb
push
mov
ss
push
mov
cmp
je
mov
mov
or
inc
in
adc
jmp
lea
popf
nop
and
sar
or
mov
or
or
push
lea
test
jl
mov
loopne
loop
clc
mov
mov
or
mov
lea
call
pushf
bound
adc
call
xor
mov
add
cmp
mov
ins
mov
jmp
pop
mov
cld
and
stos
push
in
mov
mov
inc
nop
call
cmp
bound
and
outs
pop
and
ret
adc
adc
add
sub
enter
add
popa
inc
lock
les
in
add
jle
pop
jne
add
inc
adc
(bad)
push
call
xor
(bad)
inc
ror
mov
push
add
cmp
push
pop
ja
jns
mov
ins
xor
shl
aam
mov
xchg
cld
les
cld
sbb
push
push
adc
add
add
ins
retf
sbb
cmp
btr
inc
jmp
sub
pushf
push
sbb
xchg
das
hlt
cmp
xor
adc
add
pop
xor
push
jmp
push
jmp
lods
loopne
jmp
jmp
push
pop
jmp
add
inc
jne
cld
popa
loop
inc
mov
je
push
push
stos
xchg
inc
add
int
sbb
jne
jecxz
add
mov
mov
add
std
pop
cmp
leave
ret
lock
xor
xlat
xor
rol
std
jbe
clc
add
jg
add
add
add
pop
push
add
push
add
add
add
ret
mov
call
or
aas
xchg
push
adc
test
xor
pop
popa
ret
push
loopne
dec
add
dec
ret
cld
lea
and
push
test
cs
inc
cli
pop
cmp
adc
push
ficom
in
ret
inc
std
mov
and
outs
inc
enter
outs
and
add
icebp
stc
lahf
mov
jmp
mov
in
sbb
lock
mov
(bad)
loop
mov
shr
push
inc
or
push
(bad)
pop
and
dec
or
(bad)
adc
push
sub
mov
xchg
xchg
stos
adc
mov
pop
fsub
imul
add
imul
std
cmps
jmp
adc
add
xor
or
call
sbb
jmp
push
je
call
jb
mov
or
lea
neg
fisttp
sbb
inc
adc
enter
jmp
rol
adc
and
or
add
add
inc
jg
add
push
xchg
cmp
inc
loope
xor
jge
add
cmp
je
cmc
test
inc
cmp
mov
mov
test
sbb
std
imul
(bad)
je
mov
cmp
stos
add
mov
mov
mov
add
xor
pop
dec
(bad)
(bad)
out
cmp
or
movzx
cmp
jg
cmp
jge
dec
dec
je
dec
fst
push
call
call
mov
call
(bad)
pop
shl
(bad)
(bad)
jne
call
jecxz
pop
jne
cmp
je
and
add
cli
dec
lock
jmp
cmp
je
cmp
jmp
test
cmp
jg
mov
mov
jmp
xlat
nop
jnp
mov
sub
or
sbb
cli
and
mov
mov
invd
adc
or
call
cmp
add
sbb
sbb
push
push
jecxz
aaa
call
nop
sub
pop
sub
mov
outs
cmp
clc
es
jne
jne
test
push
sub
cmc
add
(bad)
lock
push
and
xor
test
adc
ret
out
fisubr
jmp
xor
inc
popa
loopne
inc
push
daa
icebp
or
cmp
mov
lea
push
mov
mov
xor
hlt
je
cmp
je
test
je
mov
push
push
push
lea
push
push
mov
or
mov
push
xor
sbb
jp
cs
rcl
add
or
dec
ins
push
push
retf
pop
int
add
lea
or
aaa
cwde
stc
cmp
jmp
lahf
add
xor
arpl
pop
ja
cmp
sti
sbb
jo
popa
push
lahf
xchg
adc
push
cld
inc
lahf
adc
popa
or
jnp
aas
(bad)
(bad)
fild
sbb
cmp
je
cmp
jle
xchg
jne
loope
mov
pop
mov
jmp
mov
mov
cs
inc
xor
pop
rcr
jl
jo
mov
xor
mov
jle
sbb
jae
std
mov
or
aas
xor
jmp
cdq
sub
xor
adc
lea
cdq
les
cmps
xchg
call
imul
jge
or
icebp
jg
or
cmp
je
cmp
xor
pop
jge
add
ret
adc
adc
cwde
inc
sub
push
sub
adc
pop
in
mov
scas
adc
jmp
push
and
js
sbb
pop
mov
stos
or
inc
add
push
and
loopne
or
scas
es
loopne
ficom
test
or
push
adc
mov
outs
add
lea
mov
mov
push
xor
push
pop
mov
into
int
or
push
pop
aas
cmp
push
lock
push
sar
lock
push
push
movs
mov
cmp
jecxz
pop
or
inc
hlt
pop
add
mov
push
dec
mov
push
mov
mov
push
push
daa
out
loop
push
push
cmp
xchg
push
mov
idiv
jae
test
jne
je
jns
push
push
sub
stos
enter
push
jo
or
div
and
hlt
or
and
push
int3
sar
fsubr
pop
xor
cmp
je
int
mov
out
out
das
push
or
and
push
xor
push
push
adc
sar
cmp
xor
std
adc
ds
lds
scas
sub
adc
pop
es
ins
push
mov
sub
aaa
mov
cdq
or
or
cmc
or
call
rol
inc
(bad)
scas
sbb
fldenv
cmp
and
cmp
dec
sbb
mov
loope
mov
cld
push
xor
push
in
jge
out
adc
cmp
je
fadd
mov
fidivr
test
je
je
or
fisttp
adc
retf
mov
jmp
mov
mov
je
dec
mov
mov
mov
push
push
mov
mov
jne
adc
add
push
sbb
cmp
aad
call
add
or
jle
or
(bad)
je
sub
outs
xchg
jmp
and
neg
add
push
cmps
inc
lock
dec
sbb
cmp
inc
mov
add
cld
je
mov
xchg
jmp
mov
adc
inc
sbb
or
call
inc
xchg
inc
add
(bad)
aad
jle
mov
add
adc
(bad)
cmp
add
push
push
call
adc
or
ja
add
add
dec
fdivr
(bad)
dec
inc
test
je
test
jne
mov
mov
mov
mov
and
les
push
xor
je
push
sub
sbb
pop
mov
rol
push
inc
test
je
mov
mov
or
dec
add
mov
add
dec
add
leave
je
cmc
push
and
push
fs
mov
or
adc
jmp
fist
or
xor
stos
mov
and
inc
jp
or
push
push
jle
outs
xchg
adc
jne
push
mov
push
push
stos
push
or
sbb
rol
lds
sub
cmp
inc
inc
test
jmp
or
not
inc
inc
add
push
xchg
add
adc
mov
push
sbb
add
cld
aam
or
clc
push
mov
mov
std
test
clc
out
loope
(bad)
push
mov
cmp
fild
push
push
or
push
sbb
(bad)
outs
(bad)
ins
in
or
or
ds
add
mov
mov
and
and
fistp
(bad)
fdivr
dec
sbb
or
aaa
dec
call
jp
clc
aaa
imul
push
jo
mov
cmp
mov
jne
mov
cmp
fwait
add
mov
and
cmps
iret
mov
cmp
adc
inc
mov
sub
or
cmp
inc
push
ja
sti
popf
or
add
push
add
push
out
call
push
loop
mul
imul
add
mov
xchg
push
push
sub
cmp
xlat
xor
(bad)
or
xlat
pop
pop
ret
push
rol
push
cdq
xchg
mov
mov
add
mov
adc
jecxz
lock
je
loopne
fstp
arpl
je
jb
xor
cmp
xchg
pushf
cmp
mov
or
adc
xor
sub
lea
push
out
pop
mov
inc
push
call
mov
mov
push
jg
ret
jl
add
xchg
test
and
(bad)
mov
je
mov
push
imul
js
push
call
push
xor
call
inc
pop
push
xor
mov
xchg
out
enter
mov
jg
inc
inc
sub
cmp
dec
pop
pop
setge
sbb
pop
pop
push
jbe
adc
scas
xor
test
imul
addr16
push
mov
adc
ret
inc
push
call
lock
test
jne
mov
dec
or
adc
mov
pushf
pop
xchg
repnz
clc
jg
(bad)
and
call
loop
test
hlt
pop
pop
mov
push
mov
jns
push
ins
push
call
sub
test
push
mov
mov
call
mov
mov
outs
and
popa
out
or
enter
pop
int3
mov
call
outs
and
and
mov
push
aam
ror
dec
ret
mov
add
shl
sub
mov
fild
lea
jmp
mov
cld
sti
sti
arpl
test
je
cmp
je
mov
ss
call
cmc
sar
jg
jne
cmp
jne
mov
push
inc
call
mov
jmp
xor
mov
mov
and
dec
pop
push
mul
and
xchg
mov
inc
popa
enter
sub
sub
outs
push
call
add
lock
push
pop
lea
jg
mov
pop
(bad)
cmp
loopne
fdivr
cmp
adc
cmp
inc
or
rcr
pop
test
mov
call
sbb
or
push
stos
or
(bad)
lea
push
clc
(bad)
xor
push
sbb
push
mov
jnp
sbb
mov
call
aas
or
pop
xchg
nop
test
mov
jne
cdq
sub
mov
jle
pop
out
sar
push
push
pop
dec
(bad)
(bad)
cmp
sbb
jne
repnz
and
sbb
mov
loop
(bad)
push
xchg
push
push
lock
push
cmp
jle
mov
push
add
stos
mov
rol
clc
loope
test
dec
pop
(bad)
(bad)
dec
add
sub
shl
or
inc
cmp
jl
mov
xor
push
push
xchg
leave
cmp
pushf
fldln2
mov
mov
je
lea
push
repz
inc
mov
xor
rol
ds
pop
pop
jg
adc
jl
dec
fs
jb
call
pop
cmp
pop
sub
and
imul
add
mov
cld
mov
outs
and
pop
xor
sbb
push
mov
add
(bad)
mov
neg
push
push
mov
call
sub
ins
xchg
pop
mov
push
call
inc
in
push
mov
pop
push
call
xlat
std
cmp
test
cs
sahf
inc
adc
ja
jae
or
shl
fwait
mov
test
je
push
call
xchg
lea
out
in
fistp
push
call
pushf
aaa
mov
cs
and
out
icebp
hlt
push
call
push
addr16
jne
add
int3
fst
retf
sub
jl
sbb
mov
cmp
jl
cmp
mov
adc
je
or
shl
or
sti
sub
out
cmp
push
cmp
jne
cmp
je
push
jne
mul
jmp
or
ret
jne
test
adc
push
or
add
out
pop
pop
popa
int3
mov
and
push
adc
sbb
cmp
push
mov
adc
jnp
(bad)
push
xor
adc
mov
je
std
cmp
sbb
push
push
out
call
mov
mov
cmps
arpl
addr16
(bad)
push
pop
xchg
(bad)
fwait
shr
cli
xchg
test
jl
pop
jmp
jne
jno
jbe
adc
pop
repnz
(bad)
xor
sbb
adc
add
dec
in
iret
add
or
adc
pop
test
aaa
fld1
xor
adc
mov
cmp
jne
push
adc
add
jne
push
or
sub
(bad)
test
or
cld
dec
sbb
jl
dec
cmp
mov
test
or
jle
test
jne
(bad)
mov
call
lock
cmp
xor
jnp
mov
mov
test
test
add
shl
sbb
mov
or
xchg
or
popf
ror
sub
inc
hlt
je
daa
cmp
cmp
jmp
and
les
(bad)
in
in
sti
or
xor
loop
shl
cmp
in
ret
cld
jmp
xchg
push
call
push
xchg
(bad)
pop
mov
jl
cmp
jne
dec
(bad)
and
mov
pushf
push
push
dec
mov
or
bnd
or
out
cmc
or
sbb
outs
pop
push
xor
inc
mov
cmp
push
or
jnp
shl
mov
cmp
je
test
(bad)
dec
mov
mov
pop
mov
pop
pop
je
push
jmp
outs
not
test
es
or
out
sbb
std
out
push
adc
xor
add
inc
jb
adc
idiv
or
push
call
and
add
ror
cmp
jmp
jbe
xchg
mov
test
cmp
aam
test
call
push
xor
sub
icebp
stos
rol
cmps
mov
je
pop
xchg
pop
jge
xchg
push
push
pop
adc
(bad)
aaa
cmp
mov
fcom
jno
cmp
je
jmp
pop
ins
shr
call
add
mov
push
cmp
jne
jmp
adc
mov
push
test
ror
adc
push
pop
mov
test
push
xor
call
jns
in
dec
mov
xor
mov
out
enter
mov
mov
jg
xor
pop
jne
adc
push
call
inc
xchg
fdiv
out
mov
lea
push
adc
sbb
sahf
mov
push
mov
add
push
xor
scas
jg
movs
loop
mov
jle
fist
sub
in
jge
xor
cmp
and
xlat
inc
push
aaa
(bad)
(bad)
jg
mov
or
pop
or
or
enter
push
call
xor
or
pop
and
adc
push
adc
pop
(bad)
adc
or
cld
jecxz
fdiv
jmp
push
call
add
arpl
(bad)
(bad)
(bad)
pop
inc
push
push
call
adc
into
mov
sbb
mov
push
lea
leave
push
jns
aas
cmp
jmp
(bad)
cmps
mov
jecxz
ret
cmp
aas
mov
call
rcr
enter
inc
cmps
jb
mov
cli
or
test
jl
cld
sbb
xor
push
lea
pop
dec
sbb
inc
sti
jl
adc
call
(bad)
je
data16
sub
jecxz
(bad)
out
inc
cmp
pop
or
into
and
push
je
sti
add
cmp
fwait
sbb
(bad)
and
mov
call
enter
push
xchg
sar
add
fcom
fnsave
mov
mov
sub
and
leave
mov
xchg
(bad)
dec
aad
jle
mov
mov
ficom
dec
inc
sbb
mov
addr16
loop
in
or
(bad)
(bad)
dec
add
mov
test
push
push
push
pop
mov
shl
movs
loopne
hlt
call
je
cmp
je
lea
aas
or
adc
call
es
out
mov
movzx
clc
sub
xor
mov
lock
xor
mov
cmp
call
push
mov
sbb
rep
adc
call
inc
scas
cdq
aam
rol
ret
cmp
cmp
mov
je
(bad)
out
mov
es
pop
ret
mov
push
call
and
sub
adc
enter
pushf
and
mov
les
inc
jl
adc
pop
or
sub
ret
push
push
shr
sbb
inc
std
cmp
outs
or
cmp
add
push
rol
or
enter
or
je
cmp
je
test
call
jo
lahf
mov
cmp
mov
inc
daa
add
mov
jle
push
push
pop
and
mov
dec
cmp
clc
or
dec
test
or
xchg
mov
inc
dec
or
or
fld
add
bound
ret
jo
pop
mov
cmp
call
shl
mov
rol
cwde
cmp
inc
out
cli
ficom
mov
test
lea
jge
add
or
in
loope
test
test
ja
ret
cmp
pop
xor
sub
push
punpckhbw
(bad)
out
leave
inc
or
or
sbb
daa
cmp
pop
add
hlt
push
push
mov
or
xor
mov
inc
cld
jl
xchg
into
add
(bad)
(bad)
idiv
mov
mov
sub
add
fadd
mov
ss
inc
sbb
fst
leave
push
and
push
push
call
lds
sti
push
push
or
or
add
xor
mov
or
call
or
lea
call
movs
or
or
loope
sub
in
xchg
ja
stc
lea
push
push
call
ret
mov
cmp
jmp
(bad)
cmc
movzx
enter
add
mov
je
lea
sbb
call
ss
std
(bad)
out
sbb
mov
push
push
mov
call
nop
outs
sub
sub
cld
add
push
inc
sub
mov
bound
push
out
aas
add
jg
add
test
or
push
push
and
pop
mov
sbb
pop
outs
sub
dec
fs
and
pop
xor
inc
sbb
add
fstp
mov
out
push
or
sub
mov
xor
sbb
mov
mov
push
ja
clc
add
xchg
inc
ds
cmp
jl
lea
mov
and
or
and
and
or
sahf
mov
mov
mov
adc
repnz
push
push
pop
adc
cmp
push
data16
mov
cmp
push
push
call
scas
push
stos
bound
das
ror
into
ror
or
or
inc
stos
or
inc
inc
sar
xor
mov
call
pop
fdiv
je
or
add
push
(bad)
data16
pushf
pop
push
call
push
inc
loopne
sbb
cwde
mov
sbb
aam
xor
adc
jl
or
add
or
into
call
imul
adc
jne
mov
aaa
adc
and
jle
dec
adc
aaa
cmc
mov
jg
jecxz
mov
adc
dec
add
jl
add
push
call
mov
and
jmp
test
jge
sbb
call
sub
jge
adc
add
mov
mov
jo
dec
mov
xor
jmp
cmp
mov
scas
call
jbe
aas
nop
fmul
adc
or
pop
sub
push
or
sar
add
dec
and
pusha
add
add
jmp
hlt
add
cmp
pop
ja
mov
and
xlat
push
or
xor
jmp
cmp
pop
mov
jmp
or
mov
push
ror
aaa
dec
fsub
xor
jbe
add
repnz
(bad)
jmp
mov
pusha
call
add
addr16
mov
je
push
push
add
icebp
jmp
mul
icebp
mov
push
push
call
test
jp
or
in
call
or
fwait
or
cli
inc
inc
and
xor
test
jne
add
add
cmp
fdivr
xor
pop
dec
jmp
les
dec
cld
sbb
dec
jp
push
push
call
pop
mov
rcr
jg
add
hlt
call
mov
leave
call
outs
mov
mov
or
push
call
mov
pop
and
jl
or
adc
rol
ret
add
or
(bad)
jmp
imul
cld
imul
hlt
or
dec
retf
or
cs
or
call
call
fcom
mov
mov
les
push
xchg
xor
call
pop
jo
cmp
gs
push
call
inc
(bad)
cld
dec
inc
ins
jae
call
pop
mov
mov
cld
push
push
push
pop
out
clc
mov
jbe
push
or
adc
mov
fnsave
outs
call
jmp
in
cmp
sub
fadd
sub
std
inc
add
pop
pop
mov
and
movs
repz
sahf
lods
or
or
jmp
push
call
test
in
adc
mov
xchg
stos
outs
clc
adc
mov
test
ret
fst
aas
sar
les
clc
mov
pandn
mov
mov
imul
inc
ja
cwde
in
ret
sahf
and
not
arpl
loopne
icebp
jmp
xor
sbb
sbb
jne
or
out
push
clc
add
or
call
(bad)
shl
cmps
adc
cld
fdiv
pop
out
mov
out
jge
adc
sub
mov
or
pop
ret
push
push
imul
call
out
test
imul
and
pop
sbb
push
mov
xchg
or
into
inc
sbb
jmp
in
fucomp
sub
jne
shl
mov
sbb
clc
sub
mov
nop
add
jp
or
ins
fsubr
or
adc
mov
jl
dec
je
or
jge
popa
add
adc
je
inc
mov
adc
arpl
add
sbb
sub
inc
mov
push
inc
add
xchg
add
clc
jmp
jbe
mov
retf
push
bound
jge
xor
xchg
push
sbb
mov
(bad)
or
pusha
add
or
push
mov
dec
sbb
jno
mov
pusha
mov
(bad)
mov
adc
add
or
pop
stos
or
fist
hlt
(bad)
(bad)
dec
or
ret
add
lock
mov
lea
mov
xor
cmp
cmovno
rol
mov
adc
je
mov
xchg
cmp
(bad)
call
cmp
push
je
xor
inc
cmp
je
cmp
je
add
pop
inc
xchg
dec
or
push
pop
jg
shl
adc
inc
cmc
or
shl
add
add
fist
mov
test
mov
je
mov
mov
mov
test
add
ss
jne
xor
adc
or
jmp
lds
and
ins
enter
add
icebp
fnstsw
dec
sub
sar
rcl
call
mov
pop
retf
jmp
mov
jno
adc
ror
add
add
pop
or
loope
fbstp
or
outs
add
fstp
add
inc
adc
lock
ret
mov
push
into
mov
adc
cld
sub
xor
or
daa
test
cmp
and
sbb
lock
add
mov
jmp
mov
mov
(bad)
cmp
or
in
imul
test
adc
loopne
ret
iret
pop
(bad)
and
mov
sbb
mov
or
rcl
mov
cmp
je
mov
movs
cmp
dec
and
cmp
je
or
add
(bad)
sbb
adc
adc
out
loop
jmp
jle
je
loope
(bad)
jbe
(bad)
dec
(bad)
cwde
pop
pop
sahf
adc
inc
cmp
(bad)
fmul
pop
or
jge
ror
call
pop
mov
pop
mov
es
jbe
imul
fiadd
dec
adc
cmp
fisttp
sti
jb
mov
leave
pop
pop
ret
ret
sub
inc
jbe
jo
test
out
jmp
dec
hlt
iret
inc
xor
pop
and
jo
into
sbb
adc
ja
lock
and
adc
xchg
es
(bad)
js
mov
push
sub
push
sub
push
push
push
xor
sbb
cmp
sete
lock
push
out
or
pop
jg
jb
cmp
jg
or
jb
cmp
add
push
call
mov
sbb
movs
aas
fcom
inc
dec
mov
dec
dec
aaa
icebp
push
out
mov
or
call
scas
inc
jmp
pop
sub
add
adc
pop
or
xor
in
dec
adc
cli
(bad)
aaa
mov
lea
(bad)
push
sbb
add
add
fbstp
loopne
adc
push
adc
(bad)
mov
das
cmp
jbe
cmp
je
cmp
je
cmp
je
cmp
scas
jbe
(bad)
ja
adc
inc
adc
add
adc
add
les
or
or
sti
scas
jne
ja
cld
leave
adc
cmp
jne
adc
dec
push
mov
(bad)
xor
in
clc
adc
xchg
or
sbb
mov
lock
sahf
adc
add
leave
pusha
sti
ss
dec
mov
icebp
into
out
or
call
je
(bad)
call
jne
cmp
jne
cmp
jne
rol
jg
add
rol
sub
fisttp
shr
cmp
je
cmps
jmp
and
push
add
call
sbb
mov
mov
(bad)
(bad)
push
je
mov
mov
mov
add
and
add
push
push
call
cmp
add
aad
or
lock
inc
cmp
js
cmp
in
popa
pop
fiadd
push
jbe
ins
mov
cwde
push
push
mov
loop
push
mov
mov
cld
xor
sbb
pop
mov
xlat
push
jns
test
fadd
push
pop
inc
cmc
add
rcr
xor
jne
movs
pop
or
cmp
add
sbb
cmp
icebp
cmp
cmp
rcr
push
mov
xor
cmp
jle
cli
add
xchg
ret
push
sub
es
mov
push
push
jl
cwde
cmp
movs
pop
mov
jl
jl
test
out
arpl
or
xchg
sbb
aam
idiv
xchg
iret
inc
inc
int3
mov
sub
lahf
mov
out
xchg
pusha
push
ds
pop
adc
ds
inc
retf
ds
cmp
ds
sbb
sti
and
add
sub
and
add
add
and
repz
or
and
rcr
cmp
jb
push
cdq
shl
fwait
popf
adc
test
fstp
jge
mov
aad
fild
and
push
call
push
mov
adc
ja
add
test
mov
xchg
std
jg
sub
lea
cmp
call
jb
(bad)
(bad)
jmp
push
scas
cmp
jne
or
jbe
jle
shr
push
jmp
push
and
std
outs
mov
cmp
je
lea
call
fbstp
shr
mov
fcom
jmp
push
fs
inc
mov
add
(bad)
push
push
push
push
call
mov
xchg
int3
push
test
push
mov
or
movs
sub
test
xor
adc
sbb
jmp
mov
dec
push
push
cmp
push
sahf
jmp
scas
xor
push
push
cmp
mov
pop
adc
out
inc
add
mov
sbb
adc
pop
aaa
icebp
inc
add
add
inc
add
jne
mov
pop
pop
adc
ja
and
movhlps
(bad)
or
mov
pop
mov
xor
pop
iret
sub
and
aam
push
adc
in
daa
pop
jne
call
pop
add
test
inc
es
aaa
inc
mov
or
jmp
push
push
call
pop
add
mov
mov
jne
cmp
jne
sti
push
hlt
mov
push
test
cmp
call
std
mov
mov
mov
xor
sub
xchg
loop
les
dec
cmps
xchg
and
lea
dec
outs
loopne
les
push
push
call
or
and
into
sar
push
push
call
push
call
clc
and
mov
pop
inc
pop
daa
inc
and
out
(bad)
pop
cmp
add
jmp
add
cmp
push
sbb
jmp
mov
test
jne
adc
rol
movsx
inc
mov
movsx
jmp
or
adc
fadd
ja
xchg
sub
mov
sub
ds
xor
sbb
cmps
pop
add
sub
push
inc
(bad)
and
add
imul
enter
mov
push
lea
push
push
call
push
add
add
push
xor
pop
(bad)
icebp
and
int3
push
call
sub
push
inc
ja
sbb
jbe
and
ss
push
and
adc
mov
mov
clc
inc
sbb
push
jmp
mov
adc
clc
cmp
add
inc
sub
push
push
xor
cmp
push
je
pushf
mov
je
add
test
clc
dec
dec
push
push
call
mov
or
fcomip
push
or
fsubr
push
mov
lea
shl
push
mov
fwait
add
pop
add
sub
adc
mov
mov
(bad)
mov
lea
or
scas
adc
sbb
push
push
pushf
jmp
sbb
push
and
add
inc
ror
dec
shl
lahf
mov
or
pop
cdq
idiv
push
push
mov
push
pop
test
mul
xchg
and
inc
jge
mov
push
add
bound
dec
inc
stos
pop
sahf
hlt
push
mov
lock
mov
pop
je
movzx
inc
push
add
rcr
jo
daa
je
adc
loopne
xchg
xor
add
or
gs
and
xlat
xor
cli
fild
add
movzx
push
jb
pusha
ins
arpl
and
maskmovq
test
xchg
jecxz
push
call
ret
push
xor
xchg
sbb
je
and
mov
iret
add
and
jbe
cmp
jae
dec
movzx
mov
(bad)
push
lea
jne
or
data16
and
pop
sub
adc
push
rcr
inc
or
inc
clc
mov
cld
jmp
push
loopne
je
aas
xor
call
cmp
sbb
fcomp
hlt
xchg
(bad)
mov
sar
inc
mov
fcom
adc
loop
call
xchg
cld
call
aas
inc
jge
test
mov
mov
jns
or
clc
dec
push
xchg
sbb
pop
aaa
cmps
push
push
nop
mov
xlat
iret
pusha
lods
in
push
mul
cmp
push
out
loopne
fmul
stc
je
cmp
je
mov
fs
cmp
je
xor
sub
mov
jmp
or
or
or
xor
jmp
mov
push
lea
push
js
rcr
mov
stos
loope
push
jne
lea
push
call
cld
fiadd
jo
scas
xchg
fs
aas
add
in
lock
inc
dec
mov
sub
push
adc
add
imul
psubd
xor
dec
adc
or
rcr
icebp
call
pop
inc
ja
retf
add
mov
in
jne
fstp
adc
push
push
mov
call
inc
xchg
lock
pop
je
adc
mov
and
sbb
mov
cs
jge
ss
aam
mov
and
jne
(bad)
jmp
add
clc
add
lea
jmp
mov
lea
aaa
add
sub
into
jl
inc
sar
ror
(bad)
mov
retf
fdivr
fbstp
fild
jnp
adc
xchg
fisttp
mov
std
inc
cmp
jae
xchg
clc
push
add
pop
push
push
mov
call
ja
mov
add
jmp
mov
push
push
inc
mov
into
call
in
mov
adc
push
inc
aad
and
mov
mov
inc
or
sbb
push
iret
add
inc
sbb
and
cwde
or
push
je
mov
ud0
add
icebp
je
mov
cmp
dec
repz
je
mov
cmp
je
mov
add
inc
out
test
shl
fmul
loopne
mov
add
shr
outs
clc
pop
pop
add
inc
adc
dec
jne
enter
inc
jmp
ins
dec
dec
and
jmp
dec
dec
push
inc
or
shl
push
call
xor
daa
call
or
mov
cmps
pop
xor
or
cwde
shl
and
mov
inc
inc
inc
or
stc
adc
push
cmc
inc
in
and
test
je
pop
dec
bound
mov
pop
cmp
mov
jl
mov
(bad)
fucomip
jo
pop
xor
xor
jae
cmp
je
inc
es
add
add
jmp
mov
cmps
out
in
sub
push
cld
mov
mov
inc
mov
add
adc
inc
mov
pusha
or
pop
xchg
push
sbb
xor
add
or
cmp
mov
push
push
nop
or
(bad)
out
mov
and
(bad)
and
sbb
mov
mov
or
cmp
movs
jl
and
mov
push
add
or
push
push
dec
call
push
dec
lea
sbb
mov
adc
mov
dec
sbb
add
test
push
mov
add
and
hlt
jmp
jl
ror
push
clc
dec
pop
adc
inc
call
call
lea
fwait
cli
inc
or
add
or
add
jbe
push
ficomp
fsub
jmp
daa
mov
je
arpl
dec
aas
sbb
or
dec
or
in
out
scas
cmp
iret
call
push
adc
test
lods
inc
inc
lds
sbb
mov
call
inc
jnp
and
movs
add
add
mov
xor
inc
je
out
pop
dec
out
add
add
add
fisttp
aad
pop
sahf
push
sbb
nop
add
or
push
rol
push
in
dec
retf
test
scas
or
sub
adc
sbb
call
je
inc
mov
adc
hlt
shl
jg
xor
push
scas
sbb
xchg
mov
adc
mul
push
push
cmps
dec
dec
arpl
imul
push
xchg
and
cli
ja
pop
or
mov
mov
je
sub
push
loopne
inc
dec
mov
pusha
push
leave
mov
push
pushf
out
add
xor
or
mov
and
neg
mov
cmp
pop
call
clc
mov
push
push
sbb
adc
call
sub
cwde
mov
xor
add
repz
push
or
out
or
call
les
mov
inc
mov
int3
sbb
mov
(bad)
cmp
xor
xlat
fcomp
push
lods
mov
mov
call
push
out
in
mov
rcr
sub
xchg
mov
aam
hlt
sbb
push
or
sub
lea
push
das
or
sbb
adc
inc
inc
cmp
pop
mov
nop
lods
enter
push
adc
call
stos
jmp
adc
add
adc
cs
sbb
call
push
sub
push
das
push
adc
test
xchg
add
sub
jns
fisttp
mov
aaa
adc
mov
adc
in
dec
mov
mov
je
jmp
push
push
(bad)
call
ins
into
(bad)
inc
cmp
jne
hlt
mov
lea
push
call
cmp
jge
mov
dec
loopne
lock
or
rcr
inc
or
call
adc
mov
jmp
mov
out
inc
or
mov
jmp
clc
cmp
jne
mov
pop
nop
lea
adc
ins
xchg
mov
out
out
cmps
adc
scas
mov
call
lea
sub
(bad)
in
nop
shl
jmp
shl
call
call
mov
adc
fdivrp
cmp
je
sbb
lea
push
data16
and
out
test
and
call
jg
jp
xor
shl
add
std
and
mov
push
aaa
out
call
push
std
mov
fsubr
adc
cmp
push
ret
adc
pop
push
push
je
call
call
jo
ret
xor
cmp
xchg
xor
out
mov
out
lahf
push
popa
or
pop
test
je
(bad)
scas
mov
inc
cmp
je
je
cmps
loop
loopne
call
pop
pop
je
push
mov
push
mov
or
sub
jl
pop
je
icebp
xor
cdq
adc
scas
sbb
retf
add
cmp
pop
test
(bad)
cmp
arpl
push
add
xor
sub
fstp
lods
outs
xor
inc
(bad)
mov
mov
in
call
and
mov
add
ds
push
xchg
pxor
lds
push
push
ja
(bad)
clc
mov
xor
jmp
push
lock
pop
add
leave
ret
cmp
add
mov
sahf
call
out
push
pop
jmp
dec
xorps
cdq
bound
dec
sbb
cli
add
mov
jo
pop
pop
mov
leave
imul
push
je
inc
and
dec
call
out
je
lea
dec
add
xchg
out
out
aaa
aad
icebp
adc
test
call
or
add
push
sub
adc
(bad)
adc
sbb
sbb
cdq
pop
inc
xor
or
sar
call
inc
dec
or
mov
ss
jo
in
mov
(bad)
mov
in
call
dec
inc
add
jno
add
pop
push
mov
jg
adc
mov
popa
(bad)
jne
call
shr
mov
cmps
jae
or
and
out
push
pop
xchg
int3
sbb
inc
jbe
sbb
loopne
inc
push
ja
push
inc
cs
xor
clc
jbe
dec
mov
scas
push
call
or
jp
(bad)
ja
inc
or
js
retf
jge
mov
enter
cmc
pop
scas
and
jmp
jle
adc
add
js
fstp
in
enter
xor
lea
xchg
retf
inc
hlt
(bad)
sbb
jne
jne
je
or
fsubp
dec
jo
pushf
sbb
cmp
ja
movs
add
push
mov
clc
or
call
test
inc
lods
aaa
int
jge
add
sbb
retf
push
sub
rcl
shr
sub
test
rcr
gs
in
xor
xchg
adc
loop
mov
cmp
cld
je
dec
cmp
cs
mov
fdivr
and
pop
add
ins
cmp
jg
push
call
adc
mov
mov
imul
mov
or
div
or
xchg
or
sbb
ins
jns
cli
sbb
shl
scas
dec
sub
adc
mov
push
dec
call
jmp
ins
in
out
push
jmp
mov
lock
xor
adc
push
repnz
jno
mov
lods
in
int3
mov
sahf
sub
xor
xchg
mov
cdq
cmp
in
je
xor
add
cmc
aad
ja
mov
movs
jo
add
add
jl
pop
hlt
ja
ss
or
add
add
mov
addr16
pop
je
or
into
or
jb
dec
xor
jne
push
mov
outs
pop
push
call
adc
mov
mov
dec
mov
push
push
bound
pusha
adc
xchg
cmp
cmps
in
and
rcl
cdq
mov
push
xor
add
test
retf
fldcw
adc
jle
add
test
fimul
inc
add
popa
adc
in
mov
sbb
pusha
aam
adc
push
call
pop
mov
test
jp
sbb
(bad)
fild
xchg
cs
add
nop
or
(bad)
stc
bound
shl
push
dec
xchg
rcl
xchg
push
adc
and
add
fdiv
jo
jno
movs
or
sbb
adc
and
rcr
push
sar
jno
mov
add
je
pusha
scas
xor
add
sbb
cmp
mov
sbb
je
dec
call
in
and
je
pop
adc
xor
xchg
ins
sub
sub
sub
or
ja
cwde
sbb
shr
adc
xor
pop
pop
xor
pop
repnz
jb
test
mov
ret
cs
jmp
and
loopne
add
mov
mov
mov
sub
fist
or
inc
add
cmp
ret
arpl
push
push
shl
scas
mov
xor
push
ret
adc
mov
dec
adc
push
inc
cmp
je
push
icebp
je
(bad)
cmp
or
xor
xor
add
jg
sub
lea
mov
adc
loop
pop
pop
sbb
push
push
xor
test
push
shr
in
push
push
push
(bad)
fild
xchg
or
scas
inc
push
push
leave
mov
xor
xor
lea
test
jge
add
in
(bad)
cmp
lea
jne
mov
test
push
hlt
call
les
mov
push
push
sbb
push
ret
push
push
call
jge
and
xor
and
push
call
jmp
std
jge
add
test
je
mov
jg
scas
and
mov
push
mov
clc
(bad)
fnsave
mov
jo
sbb
adc
jne
mov
sub
push
sub
push
aam
push
add
push
push
inc
adc
jne
call
ret
sub
add
jmp
into
idiv
(bad)
je
mov
adc
(bad)
jg
mov
cmp
je
cmp
je
cmp
jne
nop
dec
mov
xor
or
mov
(bad)
(bad)
(bad)
mov
(bad)
je
mov
mov
mov
mov
lea
push
push
push
mov
jle
inc
shl
mov
loopne
iret
jne
mov
mov
jbe
push
adc
lea
call
imul
or
lea
stos
inc
or
mov
mov
mov
mov
mov
jmp
cmp
xlat
rcr
(bad)
push
add
(bad)
jg
inc
sbb
inc
add
arpl
add
push
lea
push
enter
and
sub
scas
sti
call
push
mov
lea
rep
mov
mov
mov
jne
add
or
xchg
pop
pop
adc
sub
idiv
jae
je
mov
mov
(bad)
jne
rcl
xor
inc
inc
sbb
call
and
lea
push
icebp
mov
pop
pop
clc
(bad)
call
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
dec
ss
je
mov
test
mov
sub
lea
test
je
jecxz
mov
mov
push
sbb
clc
inc
xor
repz
xor
inc
xor
out
cli
outs
add
mov
adc
adc
sub
jne
adc
(bad)
out
sbb
pop
ret
mov
mov
dec
je
cli
(bad)
dec
mov
cmp
jne
test
je
inc
inc
jmp
movsx
movsx
xchg
xchg
das
(bad)
push
in
dec
scas
xor
mov
mov
movzx
mov
push
movzx
mov
dec
inc
inc
jmp
movsx
lss
clc
mov
adc
mov
sub
idiv
push
fisttp
mov
mov
jne
and
jmp
inc
leave
je
mov
mov
sub
inc
movzx
movzx
sub
pop
pop
ret
xor
jmp
sbb
push
call
hlt
scas
lods
jmp
movsx
je
aas
and
xor
pop
ret
add
sub
(bad)
mov
cmps
dec
lea
push
call
test
jg
push
sub
inc
inc
and
pop
mov
(bad)
cs
jmp
sbb
adc
push
adc
jmp
sub
push
sub
jle
jg
add
or
aam
sub
out
sub
pop
push
xor
mov
jnp
push
xor
add
dec
or
inc
or
cmp
call
mov
mov
mov
mov
mov
mov
mov
mov
arpl
push
call
jge
mov
enter
adc
push
cld
push
adc
mov
(bad)
aaa
dec
mov
xor
xchg
out
scas
or
adc
iret
add
mov
xor
mov
mov
cmps
add
pop
pop
push
popf
ror
fiadd
outs
cmp
add
test
aam
adc
xor
pop
call
add
call
pop
sbb
pop
inc
out
std
add
mov
xchg
mov
mov
mov
add
fist
pop
lock
enter
push
call
or
idiv
jmp
sub
pop
jne
push
push
push
push
mov
push
push
call
sbb
adc
or
jmp
mov
scas
inc
fs
call
cld
mov
cmp
imul
(bad)
mov
aam
sbb
push
cmp
push
push
call
mov
mov
(bad)
inc
dec
adc
scas
inc
sbb
inc
add
retf
(bad)
(bad)
jg
je
mov
je
sub
je
movzx
xor
mov
mov
jmp
or
mov
add
jmp
or
mov
jg
fild
fld
jecxz
mov
mov
sub
movzx
or
mov
jbe
cmps
sub
or
movlps
sub
fild
inc
dec
push
dec
jne
xor
aaa
cld
mov
lea
inc
push
push
call
xchg
mov
int3
mov
push
call
mov
pop
clc
in
cli
fld
sbb
out
repnz
lods
jmp
add
mul
adc
push
call
dec
inc
inc
mov
push
xor
jne
outs
mov
push
push
sbb
jmp
js
sbb
inc
inc
icebp
mov
add
dec
jp
xor
in
rcr
push
mov
test
adc
adc
xchg
push
adc
ins
push
lahf
mov
adc
je
push
ror
pop
out
mov
or
leave
enter
cmp
inc
leave
enter
inc
test
out
enter
mov
add
or
xor
sbb
inc
stos
push
lea
push
movzx
push
stos
inc
sub
sbb
sbb
(bad)
jg
push
dec
hlt
push
call
dec
je
mov
icebp
mov
pop
leave
ret
js
inc
jne
out
dec
js
scas
push
jne
cmp
ret
je
nop
call
dec
cwde
and
push
mov
pop
mov
inc
cmp
cmp
mov
fisttp
cmp
mov
or
jg
mov
mov
mov
nop
and
xchg
and
ret
es
(bad)
jne
pop
cmp
lds
push
push
sub
bound
int
ror
test
adc
call
and
or
(bad)
and
push
inc
outs
or
and
cmc
push
cmp
jbe
sub
mov
sub
je
ja
dec
or
dec
jne
mov
sub
je
dec
je
pop
je
enter
dec
jne
xchg
clc
out
pop
sbb
out
imul
lock
or
cmp
rol
call
out
cmps
mov
and
les
or
adc
adc
pop
sub
adc
adc
mov
push
push
pop
(bad)
cmps
mov
sbb
jmp
xor
xor
adc
pop
ud2
(bad)
rol
jp
call
je
pop
out
or
dec
mov
aaa
inc
pop
push
xchg
rcr
push
push
inc
rcl
sti
mov
clc
push
jmp
cmp
jnp
je
push
es
xor
cmp
jmp
and
jae
data16
lock
push
push
jmp
xchg
jne
test
xchg
xor
or
push
adc
xor
inc
inc
push
jmp
cmp
call
cs
jae
nop
ins
cs
xchg
sbb
mov
adc
std
lock
je
daa
adc
ins
push
and
(bad)
clc
xor
jmp
push
and
jg
cdq
xor
jmp
push
and
lock
and
test
lahf
loope
loopne
js
push
xor
ret
aam
dec
inc
xor
cli
jp
dec
cmp
adc
repz
cmp
movs
es
clc
cmp
je
mov
inc
xor
push
leave
call
pop
shl
push
push
push
push
call
(bad)
push
mov
call
ret
pop
ret
mov
xor
push
jbe
fnsave
lock
ins
test
and
cmp
dec
xchg
mov
je
pmuludq
cli
xchg
adc
jmp
dec
mov
xor
push
hlt
and
xlat
cmp
and
call
dec
add
xor
sub
sar
pop
push
cs
and
dec
cmp
sbb
shl
mov
shr
ja
shl
add
adc
fst
inc
fsub
adc
aaa
pop
xor
cmp
sbb
neg
outs
and
loope
sub
aaa
std
pop
fiadd
jb
stos
dec
mov
stc
jne
mov
jne
cmp
je
mov
adc
mov
(bad)
jo
pop
test
gs
popa
jl
jl
imul
ss
dec
cmp
je
push
push
call
(bad)
mov
call
lea
push
push
das
in
cmp
push
cmp
jp
xor
int
push
sbb
pusha
inc
jbe
push
push
mov
scas
test
pop
in
pop
cmp
or
push
lock
adc
fst
sbb
cmp
clc
pop
add
jg
mov
call
call
les
xchg
call
ss
out
je
fdiv
push
(bad)
mov
pop
adc
sbb
je
jae
call
add
addr16
push
in
dec
push
push
aas
ret
adc
ja
xchg
mov
je
dec
shr
lea
push
mov
call
je
outs
push
jmp
add
in
push
push
cmp
jne
push
call
in
mov
sub
lods
push
xlat
pop
xor
cmp
(bad)
call
push
xchg
add
pop
(bad)
lock
push
mov
call
add
adc
call
rol
popa
inc
cli
add
sbb
das
ins
nop
hlt
dec
sbb
xor
or
xor
add
jmp
add
sbb
add
test
push
je
ja
or
push
xchg
mov
ds
ins
mov
pop
scas
push
ret
and
add
outs
js
das
push
push
or
call
push
mov
call
in
nop
call
call
push
push
call
mov
push
fs
sbb
call
call
fdivr
xor
mov
call
pusha
mov
sub
sti
call
sub
push
push
mov
call
(bad)
fstp
mov
push
mov
xchg
xor
je
movs
mov
ficom
mov
add
ret
je
push
push
call
mov
fwait
call
nop
test
call
push
adc
cli
fadd
adc
cmp
dec
push
push
(bad)
call
xchg
imul
mov
lock
adc
and
push
jnp
idiv
sbb
add
cmp
je
pushw
add
mov
add
inc
jmp
mov
mov
or
cmp
rol
pop
jmp
or
jno
jg
xchg
jne
push
mov
call
push
mov
cmp
(bad)
aas
inc
push
mov
mov
push
mov
push
js
inc
and
pop
mov
mov
xchg
and
mov
mov
je
push
mov
cmp
js
je
cmp
je
cmp
fist
cli
jne
mov
xor
test
mov
jne
dec
jmp
test
mov
je
push
inc
or
test
jle
sub
inc
std
jo
call
mov
jne
aad
std
push
adc
mov
call
dec
and
mov
arpl
sbb
mov
mov
shr
add
push
lea
popa
jmp
mov
cmp
xor
or
out
jmp
mov
aam
std
add
mov
call
xor
mov
iret
cmp
jne
div
or
(bad)
inc
sbb
inc
adc
int3
sbb
and
mov
call
inc
sub
mov
mov
clc
xor
call
aas
adc
popf
(bad)
xor
fild
imul
test
(bad)
jg
mov
mov
cmp
jl
cmp
jg
scas
call
loopne
fwait
or
and
fist
repz
(bad)
jmp
ret
jle
push
call
inc
rcl
cmps
or
dec
and
jne
sbb
pop
int3
test
mov
mov
inc
mov
mov
cmc
out
and
dec
cld
call
sbb
dec
pop
xor
adc
jbe
xor
and
sbb
mov
cmp
push
push
jl
cdq
mov
idiv
mov
mov
imul
or
push
mov
aaa
pop
sti
outs
sub
jne
mov
cmp
je
ins
jne
jmp
outs
sub
dec
mov
cmp
je
test
jne
add
(bad)
(bad)
jmp
mov
cmp
mov
je
test
jle
cmp
inc
sbb
rol
and
mov
push
push
xlat
ja
call
retf
ja
xchg
or
push
mov
dec
clc
push
test
je
push
mov
mov
mov
cmp
add
push
(bad)
(bad)
(bad)
inc
inc
lea
movs
movs
lea
push
push
movs
push
movs
call
out
cli
clc
dec
inc
in
jl
cmp
jge
icebp
cmp
jl
fbstp
clc
jge
(bad)
inc
sbb
inc
sbb
outs
test
jge
mov
mov
cmp
jo
out
sub
xor
(bad)
jmp
add
test
jg
cmp
jge
or
loope
pop
aas
or
or
push
inc
ret
daa
imul
mov
add
pop
mov
xor
in
pop
lock
je
or
cmps
nop
push
push
call
pop
je
cmp
stos
sub
add
jg
mov
cmp
jle
mov
inc
loop
dec
mov
mov
mov
scas
xor
add
cmps
inc
inc
lock
push
pop
int
mov
mov
sbb
push
cmp
inc
hlt
js
bound
lock
push
mov
call
jmp
ror
enter
push
call
mov
cmp
aaa
inc
popf
gs
add
je
aaa
je
cwde
sub
or
outs
lea
mov
movs
add
aas
int3
inc
jg
push
mov
mov
out
add
mov
les
jne
push
push
call
cli
jns
push
push
push
out
call
push
mov
pop
lea
inc
outs
xor
mov
lea
push
call
shl
aaa
je
cmp
addr16
movs
and
push
sbb
cmp
or
jle
add
shr
and
(bad)
idiv
add
mov
and
jns
add
add
and
mov
add
mov
mov
or
inc
xchg
and
or
pop
xchg
mov
ret
mov
xor
cmp
jne
inc
xchg
pop
adc
pop
add
pop
neg
mov
inc
mov
pop
xor
(bad)
(bad)
cmp
(bad)
loop
movs
push
mov
popf
rcr
fistp
jbe
mov
pop
push
call
jbe
inc
sub
jle
call
sbb
mov
add
shl
adc
out
mov
push
(bad)
mov
and
xor
sbb
std
adc
je
aas
cmp
je
cmp
jbe
(bad)
mov
adc
js
je
mov
or
pop
or
sub
(bad)
cmp
mov
inc
inc
inc
add
cmp
jb
push
inc
rol
mov
test
sahf
jmp
dec
mov
cmp
jbe
mov
xor
cmp
mov
add
sbb
outs
(bad)
out
fimul
add
jbe
out
fdivp
loope
push
lock
xchg
pushf
in
jbe
call
mov
jg
cmc
or
or
cmp
je
sub
loop
clc
or
sbb
call
shr
mov
fidiv
cmp
mov
mov
or
push
push
jne
cmp
je
push
mov
push
call
call
cli
or
or
dec
push
push
mov
jmp
and
and
adc
jne
mov
jg
adc
xchg
push
sub
jne
sbb
ret
(bad)
cmp
adc
and
push
add
pop
je
mov
cmp
pop
je
rol
lar
mov
test
jecxz
xor
imul
jo
xor
inc
or
add
sub
test
sub
lea
mov
(bad)
call
push
test
(bad)
jbe
inc
or
and
fistp
and
test
mov
or
pop
jae
mov
test
sar
div
call
test
pop
mov
je
inc
inc
js
push
call
out
adc
clc
lea
push
call
inc
ret
dec
je
push
push
call
sub
sbb
aam
xor
fwait
adc
cmp
mov
es
inc
mov
push
mov
call
je
pop
dec
gs
push
push
cmp
dec
cld
sbb
mov
jmp
dec
mov
jne
push
mov
call
pop
xlat
test
movs
jge
push
push
scas
mov
mov
hlt
aaa
sbb
or
push
movs
call
jmp
jb
out
add
mov
add
test
inc
pushf
stos
mov
or
mov
rol
call
hlt
inc
daa
pop
(bad)
push
jne
stos
push
jmp
rcl
inc
scas
xor
inc
lods
xor
test
cmc
add
xchg
xchg
adc
jb
sub
add
into
or
or
ret
inc
inc
and
scas
or
dec
adc
jo
pop
pop
iret
mov
mov
jne
pop
inc
mov
out
push
test
or
jo
lea
sbb
lods
rol
daa
add
lea
sbb
add
int
hlt
lock
call
ror
mov
fisub
or
inc
lock
mov
mov
mov
sub
mov
and
bound
jne
jmp
js
outs
adc
dec
and
inc
mov
sbb
push
mov
outs
adc
or
stc
mov
jmp
push
sbb
leave
jno
add
inc
push
xor
or
or
inc
mov
mov
pop
mov
lock
jmpw
xchg
loopne
inc
xor
(bad)
out
jae
jo
adc
lahf
inc
clc
ja
and
mov
and
inc
inc
pop
mov
pop
mov
sub
cld
cmp
mov
mov
jo
call
movs
mov
and
repz
xchg
popa
xor
and
inc
jne
and
pusha
pop
xchg
add
inc
push
pop
popf
or
jno
inc
xlat
das
(bad)
cmp
adc
mov
cmp
and
retf
inc
and
popf
movs
xchg
aaa
xor
add
jecxz
loopne
dec
inc
or
add
pusha
inc
add
xor
xor
xor
clc
cmp
jl
push
ins
jmp
or
test
nop
daa
lock
add
adc
adc
dec
pop
jae
jb
and
pop
cmps
cmp
cmps
jmp
add
inc
sbb
fnstsw
add
add
inc
sbb
adc
dec
or
push
add
mov
call
mov
inc
test
mov
cmp
sub
arpl
inc
lods
mov
je
or
push
call
adc
sbb
call
cmp
cmp
je
mov
jmp
push
call
ja
cmps
cs
or
shr
xor
xor
stos
jne
push
mov
call
inc
lahf
or
shr
jo
mov
or
adc
call
xor
lock
jmp
call
mov
pop
call
cmp
dec
and
and
adc
jecxz
push
inc
xor
call
add
push
dec
push
or
cmps
sbb
inc
stos
xchg
lods
stc
out
xchg
mov
call
mov
jne
add
xchg
mov
xchg
inc
mov
and
xor
fbstp
xchg
or
add
imul
(bad)
cmp
mov
bound
test
add
add
push
and
push
call
mov
sbb
pusha
or
jge
call
jmp
rcr
aas
add
mov
cwde
pop
dec
jbe
adc
inc
out
aas
adc
inc
dec
add
bound
pusha
jb
sub
out
add
shr
pop
retf
pop
lahf
mov
call
push
ss
mov
push
push
inc
xor
add
jp
shl
dec
jno
test
push
pop
test
je
sub
dec
add
adc
xor
jae
call
push
sbb
adc
mov
push
pop
(bad)
dec
cmp
xor
push
or
mov
jne
mov
pop
mov
(bad)
jae
mov
ret
dec
inc
or
movups
jg
mov
mov
(bad)
add
in
cmp
je
adc
xlat
inc
or
xor
jmp
or
call
push
or
fstp
ret
je
mov
push
adc
jbe
cld
dec
pop
into
add
push
ret
(bad)
(bad)
cmp
jne
mov
mov
cmp
mov
jne
call
add
pop
sub
or
jg
adc
les
mov
or
xor
or
mov
xchg
test
dec
mov
je
mov
mov
call
(bad)
and
jmp
call
sub
das
jns
jp
test
or
inc
lea
xlat
jne
adc
jmp
(bad)
dec
and
inc
aas
std
out
jmp
or
je
mov
mov
inc
push
pop
je
mov
in
lock
or
and
cmp
mov
mov
sub
mov
add
add
dec
add
test
and
or
les
das
add
inc
add
inc
xchg
adc
cmp
sbb
cmp
pop
sbb
push
pop
fucomp
jmp
dec
test
jne
add
je
popa
test
mov
or
dec
push
push
shr
call
push
push
call
sbb
or
dec
sub
cmp
ror
jne
sbb
mov
adc
lods
jmp
call
xchg
pushf
xlat
add
je
mov
add
cld
popa
cmp
push
mov
jmp
cwde
dec
mov
push
push
push
add
pop
jmp
sbb
jmp
sub
sti
push
mov
push
sub
xor
inc
mov
mov
add
xor
cmp
adc
sbb
sbb
scas
pop
adc
inc
les
call
enter
dec
jg
push
dec
and
mov
mov
or
into
sub
call
daa
icebp
inc
test
adc
mov
inc
and
movs
and
inc
and
push
add
adc
nop
pushf
jecxz
(bad)
sbb
or
xchg
cdq
sub
(bad)
nop
adc
ror
cmp
inc
or
sbb
clc
jmp
mov
out
push
jmp
cmp
in
push
mov
inc
or
outs
ins
into
mov
jbe
cwde
ja
std
arpl
sti
(bad)
dec
or
test
mov
push
inc
mov
add
or
ret
inc
sub
out
mov
fwait
mov
jnp
add
dec
or
and
les
push
xor
call
push
adc
popa
sbb
das
adc
mov
jmp
push
jl
sbb
xchg
add
fadd
nop
xor
retf
popf
movs
aaa
sbb
ds
test
out
imul
fadd
pop
addr16
mov
xchg
or
inc
push
push
(bad)
jmp
add
jmp
imul
sbb
push
mov
je
mov
adc
(bad)
pop
ret
cmp
mov
je
mov
sbb
jmp
add
fstp
adc
(bad)
dec
cmp
out
xor
cmp
sbb
mov
call
neg
sbb
and
add
les
cmc
and
into
jecxz
icebp
into
test
add
cmp
ficom
cli
or
xor
push
push
(bad)
test
push
and
in
cmps
sub
or
jle
jmp
dec
push
mov
(bad)
call
mov
add
push
push
mov
call
sub
popa
ja
pop
add
call
sub
aam
ret
jmp
cmp
add
dec
inc
mov
iret
jmp
fild
scas
push
or
iret
cmp
jno
add
ja
pusha
or
cs
and
inc
jmp
imul
jmp
rol
adc
call
or
push
add
add
jo
mov
mov
mov
add
inc
pop
je
(bad)
clc
mov
add
push
mov
mov
(bad)
dec
add
mov
mov
mov
mov
jmp
sbb
dec
sbb
push
xor
inc
lock
sub
push
mov
mov
ret
aad
pop
pop
jo
je
push
call
mov
add
data16
sbb
add
and
aaa
sub
xor
daa
and
mov
cmp
inc
mov
mov
adc
add
push
cmp
mov
jge
mov
mov
(bad)
dec
rol
jle
test
mov
mov
je
cmp
push
push
(bad)
push
mov
push
call
push
call
ss
mov
call
pop
aaa
inc
aad
je
or
cdq
sub
mov
test
jle
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
inc
add
cmp
jl
mov
out
cwde
mov
adc
addr16
jmp
adc
fist
jge
mov
mov
mov
push
cmp
mov
cmp
jne
mov
cmc
enter
jmp
cmp
jne
mov
dec
sbb
(bad)
(bad)
out
adc
push
push
push
call
mov
mov
cmp
jne
push
call
fild
outs
xor
ins
test
jmp
aam
mov
cmp
je
inc
inc
jmp
inc
inc
inc
data16
fist
jne
lea
push
call
inc
fist
inc
push
pop
mov
or
fnstsw
arpl
adc
add
mov
jmp
add
lahf
jae
mov
jne
push
mov
call
inc
mov
mov
pop
mov
mov
and
jb
clc
enter
jae
popf
mov
xor
(bad)
mov
mov
and
ret
cmp
jle
mov
mov
mov
stos
clc
call
mov
mov
cmp
jne
ret
or
fcomip
jmp
mov
push
lea
stos
cld
lea
jmp
fisttp
mov
push
icebp
cmp
fild
scas
push
add
pop
std
out
addr16
cmp
je
mov
push
mov
pop
add
and
arpl
push
test
and
push
xchg
pop
and
cmp
jg
mov
push
cld
fbstp
fdivr
jo
jne
push
call
sbb
pop
pop
lea
ret
mov
sub
cmc
cmps
sti
mov
jne
sbb
stc
mov
jne
test
push
cmp
cmps
lds
mov
mov
pop
mov
lds
iret
jl
call
push
mov
push
(bad)
sti
jne
mov
test
cs
mov
icebp
std
cmps
fsubr
push
call
aaa
xor
mov
push
push
mov
call
push
stos
clc
add
and
sub
dec
mov
cmp
je
and
fild
add
pop
mov
pop
jmp
shl
rcl
test
sbb
mov
adc
adc
cmp
je
sub
add
je
sub
or
and
jmp
pushf
je
jne
push
mov
cmp
jge
lea
push
jge
add
lahf
inc
call
sbb
push
call
pop
je
or
xlat
and
inc
push
push
pop
jne
mov
ins
sub
js
iret
pop
jmp
call
fbld
pop
pop
test
mov
je
and
jnp
imul
add
xor
retf
pop
into
mov
push
xchg
dec
test
pop
jmp
sub
add
mov
and
cmp
je
mov
cmp
jne
mov
aam
jns
in
cmp
jne
sbb
pop
sub
mov
mov
mov
int3
hlt
add
icebp
or
repnz
push
les
add
pop
ret
lock
jo
mov
je
mov
push
ret
dec
adc
jge
add
mov
fwait
mov
push
push
add
je
push
inc
mov
setne
cwde
or
stos
daa
push
scas
sti
and
dec
inc
loopne
push
mov
call
mov
adc
mov
and
in
and
push
push
mov
xchg
cmp
add
add
dec
jnp
or
cmp
jne
fwait
push
add
push
sub
dec
pop
or
jl
inc
push
mov
call
jmp
cmp
or
call
push
pop
push
xchg
mov
and
add
mov
ja
mov
mov
push
mov
(bad)
push
pop
je
push
fldz
push
fstp
push
std
inc
xchg
cmc
mov
dec
add
xchg
into
call
push
call
or
jmp
add
inc
ins
popf
or
addr16
inc
adc
fdivr
dec
push
or
push
call
mov
jmp
or
push
sbb
or
shl
dec
mov
ror
pop
adc
inc
lahf
cld
pop
jne
test
jne
push
in
pop
mov
mov
or
or
push
inc
adc
and
sbb
jb
mov
push
mov
mov
fstp
into
call
jne
push
and
cmp
jbe
mov
cmp
je
mov
data16
jg
mov
add
mov
lea
push
xor
cld
aas
inc
inc
inc
mov
stc
adc
pop
xor
mov
pop
add
ins
stos
loop
addr16
dec
mov
mov
je
fadd
sbb
call
pop
loope
add
push
cld
pop
stos
or
push
add
sub
xor
push
mov
jnp
test
fdivr
(bad)
fnsave
test
inc
sbb
enter
inc
adc
jmp
mov
jg
sti
push
push
mov
xchg
call
or
jb
xor
or
imul
into
lods
sbb
and
add
mov
(bad)
out
pusha
cli
pop
mov
jbe
leave
mov
push
push
call
sub
je
xor
rol
mov
mov
mov
mov
fdivr
mov
dec
test
adc
pop
push
call
xchg
jae
jmp
cmp
out
jb
adc
or
pop
mov
scas
pop
rol
push
jp
outs
mov
fcomip
dec
call
xor
cmp
jle
cld
mov
inc
mov
cmp
jl
call
call
mov
and
and
arpl
dec
jge
int
arpl
idiv
jne
jle
mov
mov
add
or
call
jne
jl
and
(bad)
add
outs
add
enter
pop
cdq
popf
push
sub
sysexit
ja
inc
pop
add
and
es
adc
std
adc
cmp
adc
loope
and
mov
call
pop
fbld
push
cs
test
push
or
push
cmps
bound
lods
jle
jne
and
push
fimul
mov
fsubr
dec
mov
cmp
push
cmp
mov
pop
jmp
mov
jle
cmp
jle
(bad)
loopne
clc
cmp
jg
loope
retf
call
mov
out
or
jge
je
sub
dec
leave
add
and
mov
mov
cdq
aas
xchg
or
call
xor
cmc
xchg
fucomip
or
and
xor
inc
push
call
(bad)
jmp
dec
jo
loopne
xlat
mov
outs
ret
lahf
pop
ret
arpl
test
mov
mov
je
sti
dec
pop
call
cld
(bad)
push
call
or
jo
pop
jne
and
xor
and
shr
xchg
or
add
or
ret
xor
and
adc
jmp
mov
pop
add
mov
mov
cmps
or
lock
cmp
jne
dec
mov
inc
push
gs
(bad)
sar
dec
adc
jbe
cmc
inc
call
mov
into
sahf
cmp
push
push
lea
add
call
push
push
push
jle
inc
out
xor
les
cmp
cli
enter
clc
rol
jae
pushf
and
lahf
inc
sbb
cmp
push
in
jnp
jp
cld
and
sub
mov
mov
adc
jle
xchg
adc
inc
or
dec
mov
inc
and
push
hlt
jne
neg
lock
je
dec
sbb
shr
cmp
je
mov
icebp
mov
ja
push
push
jne
inc
add
jb
mov
push
in
mov
aaa
add
jg
mov
mov
je
pop
lea
jg
(bad)
call
imul
fidiv
dec
pop
xchg
mov
add
dec
cld
cmp
jge
out
test
jge
push
lea
call
inc
mov
mov
jle
mov
data16
das
cmp
jne
or
add
add
inc
inc
inc
cmp
jl
jmp
mov
data16
loop
std
cmp
jne
sbb
movs
add
scas
dec
stos
mov
aam
mov
pop
cld
or
adc
hlt
pop
int3
cld
sbb
push
push
mov
aaa
popf
mov
jp
jle
test
jo
pop
inc
mov
(bad)
call
jle
pusha
push
jnp
mov
jmp
and
dec
jmp
mov
adc
icebp
cmp
xor
test
jne
sub
in
jo
mov
inc
clc
lahf
add
pop
call
retf
sbb
enter
mov
xor
stos
stos
stos
mov
stos
mov
cmp
out
mov
xchg
jge
bound
jge
add
shl
ss
call
mov
xchg
std
aaa
cmc
(bad)
call
push
movs
call
pop
je
mov
call
aaa
shl
push
push
push
call
add
hlt
push
dec
jne
lea
pop
push
push
call
sbb
xchg
pop
pop
push
mov
sub
pop
mov
(bad)
(bad)
call
test
je
mov
mov
mov
add
dec
jne
push
call
add
cmp
inc
out
dec
sub
dec
test
mov
addr16
cmps
jp
push
test
push
xor
les
je
cmp
mov
ds
neg
lods
inc
out
mov
test
sub
adc
scas
ins
call
push
call
inc
cmp
test
sbb
xor
imul
pop
nop
and
scas
or
ret
sub
jne
call
push
mov
daa
adc
pop
inc
pop
vmovdqu
lds
push
push
call
cmp
pop
mov
je
loopne
sub
or
jbe
push
call
aaa
shl
pop
jmp
cmps
cmp
and
out
iret
je
(bad)
call
sub
inc
sahf
or
(bad)
dec
push
cmp
mov
fstp
mov
push
call
(bad)
or
xor
ror
mov
push
add
test
mov
push
push
call
pop
(bad)
dec
add
mov
add
adc
out
lds
mov
lock
push
rcr
inc
inc
sub
pop
push
mov
lods
push
data16
or
call
cmp
pop
adc
push
ja
mov
mov
call
call
or
cmps
mov
mov
xchg
sub
(bad)
mov
loop
inc
inc
mov
sbb
fidiv
or
add
push
call
lds
mov
pop
adc
or
fwait
or
cmps
outs
call
clc
push
dec
adc
inc
adc
mov
sbb
inc
sbb
mov
cmp
mov
or
mov
push
call
adc
mov
mov
cmps
imul
call
(bad)
fscale
pop
pop
je
jnp
jbe
je
mov
push
push
outs
add
xlat
cmp
jmp
push
std
and
xor
retf
jl
push
cmp
pop
xor
pop
mov
sbb
mov
leave
mov
jmp
sub
call
adc
call
es
push
adc
and
adc
or
mov
jg
movs
call
(bad)
aas
push
sub
adc
jge
pop
test
jle
sbb
mov
push
inc
jle
cmp
jg
jne
bound
sti
mov
test
inc
lock
and
push
mov
add
mov
mov
jmp
jle
je
xor
test
jle
cmp
je
inc
cmp
jl
sti
sar
dec
iret
push
jne
test
jle
cmp
jge
retf
adc
sar
adc
add
pop
mov
mov
push
pop
adc
sbb
aaa
lock
repnz
push
call
and
jb
and
inc
sbb
sub
pop
mov
loop
jno
dec
je
dec
je
dec
je
fcomip
inc
dec
jne
mov
jmp
mov
jmp
(bad)
pop
xor
jmp
mov
movsx
lea
mov
test
cmp
je
mov
ins
or
adc
sbb
or
sti
in
jg
pop
daa
cmps
sbb
mov
inc
xor
add
retf
lahf
sbb
lahf
mov
call
nop
sbb
xor
fsubr
xor
inc
(bad)
test
(bad)
cmp
push
aas
nop
xor
mov
clc
push
push
cs
(bad)
jmp
jp
mov
clc
call
jmp
arpl
in
sbb
dec
shr
mov
adc
cdq
jae
inc
and
(bad)
out
adc
jl
mov
mov
push
pop
idiv
and
push
push
call
add
fsubr
push
sbb
xchg
inc
push
call
gs
sub
sub
pushf
xor
adc
imul
outs
ret
iret
xor
push
mov
inc
mov
mov
lahf
mov
mov
mov
cmp
sub
mov
xor
fwait
or
fsubr
cmp
hlt
es
fadd
pop
xchg
push
jne
mov
retf
call
clc
mov
pop
iret
arpl
icebp
call
xor
call
rcl
cmovnp
ret
sub
mov
mov
and
push
mov
mov
arpl
test
or
or
mov
sbb
call
cmc
je
mov
and
iret
sahf
stos
addr16
push
mov
jge
mov
mov
call
dec
(bad)
fsubrp
cmp
rcr
push
xor
std
fwait
push
cmp
je
push
push
xor
ret
mov
push
push
inc
in
retf
mov
sbb
loopne
jne
call
cs
jo
sub
pop
sbb
push
jne
xor
popa
inc
(bad)
enter
add
mov
clc
pop
push
add
stos
xor
stos
sbb
rcl
mov
xchg
or
mov
dec
adc
mov
call
(bad)
out
add
sbb
inc
sbb
(bad)
sbb
(bad)
cmp
pop
mov
je
addr16
call
outs
pop
(bad)
mov
call
and
push
mov
push
inc
cld
mov
scas
into
pop
(bad)
stos
leave
out
out
push
mov
inc
add
add
or
not
gs
add
retf
scas
pusha
pop
test
call
jae
call
lea
mov
inc
movs
and
es
inc
and
pop
pop
mov
mov
retf
inc
jl
ror
daa
add
movs
xchg
mov
jne
sub
shl
or
xor
dec
shl
scas
sub
jne
dec
mov
mov
lods
sbb
xor
out
adc
inc
push
and
and
rcr
cmp
fld
call
mov
es
inc
cmp
add
mov
inc
cmp
dec
jmp
mov
call
adc
lock
xor
ja
jecxz
cmp
movs
mov
mov
je
out
cli
je
mov
adc
add
xchg
cs
je
sbb
sbb
add
sbb
jge
daa
mov
mov
and
mov
pop
bound
(bad)
pop
and
add
xchg
inc
push
in
sub
mov
pop
add
daa
push
xor
inc
mov
mov
push
or
jo
and
dec
aaa
es
test
retf
mov
inc
je
push
inc
sbb
push
add
and
sbb
adc
inc
les
(bad)
jmp
sti
dec
inc
dec
mov
mov
mov
aam
dec
ret
int
cmps
xlat
rol
sbb
call
inc
jmp
cmc
inc
adc
inc
dec
add
mov
mov
add
je
dec
jle
or
jnp
pop
or
inc
mov
mov
sbb
push
add
call
mov
add
mov
aas
jb
es
call
mov
call
mov
inc
adc
xchg
adc
mov
dec
sti
add
and
dec
sbb
jecxz
mov
test
mov
jbe
jae
jnp
xor
xor
test
pop
mov
jbe
scas
call
push
inc
pop
push
call
mov
sbb
fisttp
clc
cmp
jb
jmp
push
call
retf
inc
in
cmp
adc
or
and
fimul
test
or
sbb
pop
inc
cld
mov
mov
mov
cmc
jmp
dec
es
fldl2e
(bad)
fstp
stos
push
adc
lock
adc
je
mov
ror
hlt
xor
push
cmp
add
lock
jle
iret
xchg
ins
jle
retf
or
push
mov
out
call
push
ins
call
pop
xor
(bad)
call
jl
(bad)
pop
push
cmp
sub
jbe
clc
fbstp
clc
dec
or
fsub
shufps
rcr
aaa
in
dec
push
push
jmp
ror
mov
mov
xor
call
ror
(bad)
push
clc
or
call
and
fld
call
mov
jge
mov
mov
fld
call
mov
fld
call
jb
sbb
fld
call
jmp
pop
aam
or
push
call
jbe
jmp
loope
or
call
and
inc
outs
mov
xlat
mov
std
inc
or
mov
fnsave
and
lock
es
sbb
call
(bad)
gs
ds
idiv
push
dec
pop
inc
dec
fdivr
ss
imul
fwait
call
call
xchg
add
call
je
inc
push
je
dec
push
scas
or
jo
or
mov
jne
mov
inc
push
std
clc
mov
mov
or
xor
or
sti
mov
cmp
imul
je
lock
and
jo
adc
sub
call
(bad)
dec
jl
cmp
cmp
inc
test
jle
mov
cld
ja
aam
(bad)
dec
push
mov
add
push
push
push
call
add
jmp
mov
test
jle
jb
jmp
lods
pop
push
add
push
mov
je
std
ja
cmp
cmp
je
push
mov
arpl
jbe
push
call
adc
mov
ja
inc
xor
fcom
inc
sub
or
test
adc
lds
out
xchg
shl
mov
jge
jbe
push
lea
push
call
fiadd
push
ret
xchg
pop
out
push
inc
push
push
mov
mov
push
lea
clc
sbb
aam
inc
or
xchg
out
ret
jmp
mov
sub
push
sub
mov
push
dec
call
(bad)
icebp
xor
mov
out
add
mov
cmp
je
push
jne
mov
xchg
add
call
jmp
sub
pop
aas
call
cmps
adc
mov
add
inc
xchg
and
bound
fild
(bad)
jl
icebp
mov
or
pop
in
rcl
lock
push
iret
hlt
(bad)
mov
iret
or
loope
dec
out
retf
je
test
je
mov
(bad)
fcmovb
fsubr
sub
mov
or
arpl
mov
jae
or
fsubr
enter
loopne
ret
aas
push
cmp
jno
mov
sbb
push
adc
ret
mov
sub
ret
mov
adc
fcomip
or
call
leave
ret
push
loop
add
cmps
popf
xor
mov
shr
cmp
data16
mov
ror
outs
ins
shl
jmp
lea
movs
loope
xor
inc
movs
cmp
inc
push
movs
call
xchg
loope
pop
xor
mov
sub
mov
(bad)
push
xor
loopne
arpl
test
push
xchg
lea
sti
in
std
cmp
js
dec
int3
inc
leave
inc
or
call
fisubr
repnz
loope
xchg
out
int
call
retf
sub
daa
adc
enter
inc
add
inc
std
or
inc
loopne
add
(bad)
aaa
pop
lods
mov
sub
add
call
(bad)
fnstcw
sub
cs
jmp
div
jge
push
cdq
sub
push
mov
fucomi
cs
cli
inc
lock
lea
call
cmp
or
hlt
ret
into
das
hlt
(bad)
cmp
cmps
jle
add
jne
inc
cmp
inc
pop
inc
mov
call
call
stos
sbb
ds
adc
or
lock
call
xchg
loopne
xor
cmp
inc
(bad)
add
jg
or
jo
adc
sub
pop
movs
cmp
call
addr16
leave
ror
imul
sbb
push
or
inc
pop
idiv
call
cmp
rol
shl
ds
std
or
out
add
(bad)
cmp
dec
mov
jmp
add
imul
cwde
xchg
aam
shl
and
stos
mov
aam
adc
in
test
xchg
jo
xlat
daa
sti
loope
xchg
call
call
add
dec
dec
xor
rol
jmp
inc
adc
fisttp
(bad)
je
movs
cmc
or
sbb
cmc
es
call
pop
call
push
mov
call
imul
and
cmp
xchg
inc
sbb
movs
call
test
adc
rcl
(bad)
(bad)
jmp
out
ret
inc
ret
(bad)
popf
fist
sbb
add
and
bound
dec
retf
call
int3
adc
add
jbe
push
or
dec
(bad)
mov
sbb
mov
cmp
or
mov
push
or
call
fcom
test
jmp
xor
jbe
clc
cmp
pop
push
push
retf
call
icebp
loope
arpl
add
add
in
fs
pop
fwait
add
add
cmp
enter
loopne
test
je
mov
call
add
add
mov
jbe
(bad)
call
enter
inc
test
bound
mul
popa
cmp
sbb
xchg
loopne
sbb
outs
leave
in
call
jne
cmp
call
xchg
xchg
mov
and
xchg
or
xor
jae
mov
movs
call
mov
popa
int
xchg
pop
loop
mov
call
dec
in
mul
xchg
push
adc
lock
test
ret
xchg
push
inc
add
call
cmp
push
mov
mov
add
inc
xchg
mov
or
movs
call
pop
adc
add
ss
fild
ja
jo
cwde
test
or
mov
sub
dec
cdq
sti
cmp
pop
and
and
es
fidiv
add
out
jbe
imul
pop
aas
call
call
pushf
pusha
dec
xchg
lea
jb
or
fild
mov
add
test
mov
add
and
inc
pop
adc
cdq
test
adc
adc
lds
add
cmp
add
mov
inc
lds
xchg
test
jg
mov
es
(bad)
call
adc
adc
fdivr
call
sub
fild
idiv
(bad)
jne
sbb
inc
and
mov
push
and
xor
adc
test
xor
push
mov
push
repz
or
xor
and
sub
sub
lock
push
cld
arpl
xor
mov
clc
dec
jae
push
call
test
push
aas
test
les
sbb
add
setb
aas
sbb
mov
add
adc
call
pushf
push
call
addr16
mov
adc
jnp
xor
jbe
push
fnstsw
dec
jnp
jge
pop
je
add
inc
xor
and
pop
or
movs
mov
dec
ret
ds
hlt
pop
or
call
mov
test
jne
inc
jmp
mul
sti
mov
push
push
mov
mov
call
add
mov
call
pop
xor
jmp
xchg
cld
add
jmp
ja
and
mov
adc
jae
aaa
push
cdq
cmp
jle
cmp
jg
stos
clc
xchg
or
rol
push
cmp
bound
out
(bad)
inc
hlt
xor
test
jle
ins
mov
add
cmp
je
or
fiadd
icebp
push
call
clc
popf
sti
add
push
jne
test
jne
out
fistp
xor
xor
inc
fs
call
(bad)
adc
and
push
and
add
add
mov
(bad)
jmp
dec
(bad)
mov
add
inc
dec
xor
or
mov
jmp
lea
push
(bad)
aas
(bad)
test
dec
mov
mov
add
stos
clc
fwait
call
(bad)
jl
cmp
jne
inc
jne
call
test
dec
cld
fisttp
xor
mov
(bad)
jmp
push
cli
mov
or
push
pop
fimul
mov
jle
arpl
inc
lock
add
or
inc
add
xor
imul
dec
cmps
lods
dec
(bad)
mov
dec
mov
mov
mov
je
dec
je
jmp
or
aam
inc
mov
or
jge
jmp
cmp
jl
clc
fldpi
or
jne
jg
pop
xor
inc
xchg
jge
add
(bad)
(bad)
inc
sbb
inc
sar
jge
jl
mov
jmp
xor
cmp
jl
cmp
jmp
popf
neg
cmp
sbb
push
enter
push
push
cld
push
imul
rol
jne
jmp
retf
leave
adc
lea
cdq
mov
call
lea
cmc
fbstp
add
cmp
jg
jl
test
sbb
into
aam
not
push
call
call
mov
rcl
cmp
jge
ja
scas
adc
jge
std
movs
mov
or
mov
inc
fmul
mov
(bad)
aaa
jge
add
cmps
pop
or
std
xor
mov
add
bnd
push
adc
sub
cdq
dec
lahf
push
push
out
in
dec
mov
push
cmp
cmp
ins
clc
aas
sub
int3
(bad)
cmp
jne
push
call
xor
cmps
mov
fwait
dec
repnz
call
mov
mov
add
push
sti
pop
sbb
sbb
or
add
out
aad
test
pop
add
push
inc
mov
fnstsw
add
std
je
jl
mov
push
push
push
ja
cmp
enter
shl
cld
jne
movs
call
or
test
jle
ss
mov
inc
mov
fdivr
sub
jne
push
call
(bad)
and
sbb
jl
lods
jg
mov
(bad)
push
lock
pop
jl
cmp
jle
sub
adc
mov
mov
dec
dec
push
call
xor
xchg
or
adc
mov
mov
clc
aas
dec
leave
sbb
jbe
lea
push
call
daa
(bad)
jp
into
call
and
jmp
push
mov
sbb
mov
das
push
pop
jmp
je
and
rcr
xor
pop
add
in
push
cmp
push
fldenv
cmp
mov
fwait
sub
xor
shr
cmp
cmp
add
dec
dec
mov
xchg
sbb
push
add
or
pusha
in
test
xchg
retf
call
adc
cmp
in
jno
aaa
shl
je
call
push
jbe
call
mov
add
mov
mov
out
loop
or
call
retf
mov
cmp
add
js
aaa
dec
and
dec
test
je
jmp
aaa
sbb
daa
in
push
inc
sbb
(bad)
js
call
adc
call
sbb
adc
xor
into
add
imul
and
(bad)
sahf
mov
std
jno
idiv
push
inc
sbb
inc
sbb
das
jmp
xor
add
jbe
out
into
call
jne
cmp
ret
cmp
ss
jae
mov
shr
in
call
aad
inc
mov
xor
mov
es
iret
imul
mov
sub
mov
daa
ins
inc
ins
fisttp
push
neg
adc
in
adc
sti
call
cmp
call
call
add
inc
clc
lods
fnstenv
ret
add
inc
scas
mov
and
xchg
arpl
push
xor
mov
or
inc
adc
(bad)
push
popf
scas
xchg
call
outs
ins
mov
lahf
jg
or
cmp
es
xchg
call
test
in
icebp
(bad)
cmp
call
xor
inc
push
push
dec
add
sbb
shr
cli
add
mov
call
and
fstp
dec
lods
xchg
je
add
sbb
cmc
je
xchg
mov
movs
call
adc
mov
loopne
shl
cmp
test
jne
es
repz
pushf
push
(bad)
pushf
adc
push
inc
out
push
ret
pushf
out
push
jmp
cmps
in
fwait
and
call
mov
pushf
call
inc
into
xchg
push
sbb
loope
sbb
retf
push
sbb
sbb
rol
push
and
mov
push
inc
pop
(bad)
aad
and
into
pop
cmp
pop
add
adc
or
push
outs
mov
aaa
mov
mov
in
mov
shl
or
mov
call
in
add
pop
adc
adc
enter
fcom
ja
jns
push
call
jle
dec
adc
mov
lds
imul
jmp
mov
call
mov
in
push
push
push
and
inc
jo
call
jg
int
jne
std
add
call
fcom
mov
ja
in
ret
jmp
sub
cmc
(bad)
call
ret
(bad)
jmp
push
push
call
pop
or
pop
rcl
push
and
push
call
add
inc
in
das
fldenv
dec
cmp
(bad)
and
cli
rcl
std
dec
and
mov
cdq
xor
popa
pushf
push
test
call
push
pushf
or
stos
and
sub
gs
jbe
mov
sbb
daa
add
call
movs
cmp
jne
xor
mov
adc
or
inc
or
and
jmp
(bad)
call
cmps
add
jb
push
jbe
xchg
jae
rcl
(bad)
mov
adc
mov
mov
mov
add
xchg
inc
cmp
icebp
out
fnstsw
jb
push
jne
add
xchg
rcr
outs
cmp
mov
push
push
mov
call
aam
jmp
in
lock
(bad)
in
pop
or
lock
adc
push
pop
retf
xor
mov
call
and
or
adc
and
xchg
xor
cmp
push
jne
daa
xor
dec
or
push
mov
arpl
mov
(bad)
das
jp
push
outs
ret
call
inc
pop
or
or
mov
aam
(bad)
cmp
bound
add
jmp
cmp
or
cmp
jle
inc
sti
sub
clc
jge
add
jl
cwde
jl
xchg
call
loope
gs
jecxz
or
leave
cmp
loopne
cmp
jmp
mov
sar
or
xor
stos
cmp
push
push
mov
cmp
cld
mov
mov
je
js
pop
aam
aaa
cmp
je
les
lea
or
ja
jle
adc
test
add
jle
clc
add
mov
add
mov
in
out
jg
or
js
add
add
add
xor
and
push
je
dec
dec
jne
lea
lea
mov
jmp
lea
lea
jmp
lea
lea
lock
lea
lea
clc
mov
call
push
mov
jne
mov
jmp
mov
mov
xor
add
dec
repz
(bad)
(bad)
inc
jmp
mov
test
lea
je
mov
mov
mov
add
mov
sub
cmp
jg
out
(bad)
and
sub
push
mov
sub
or
xor
push
shr
jle
mov
mov
test
jne
call
clc
push
xchg
push
push
mov
inc
add
mov
loop
cli
out
call
in
mov
dec
in
jne
mov
jmp
adc
shr
push
jle
hlt
mov
je
jg
pop
add
mov
cmp
lea
jne
xchg
mov
mov
sub
jns
neg
jbe
cmp
or
mov
sub
cmp
jg
mov
mov
(bad)
sti
outs
push
(bad)
mov
fild
mov
fdivrp
fcomp
fnstsw
test
jnp
std
daa
test
dec
mov
mov
or
jb
cmp
pusha
(bad)
push
jl
mov
mov
jmp
mov
mov
mov
out
inc
loopne
std
mov
dec
add
shr
or
sub
cmp
jg
jae
mov
inc
clc
mov
fisttp
loop
sbb
mov
out
test
gs
cmp
or
jne
fadd
je
adc
push
call
dec
fsubr
pop
push
sbb
mov
jne
push
mov
jmp
mov
mov
call
jbe
ret
mov
es
aam
push
call
ja
jne
loop
addr16
mov
lods
fst
bound
sub
std
pop
mov
mov
push
call
pop
mov
jne
mov
mov
and
sub
pop
add
dec
out
aaa
add
cmp
jne
push
call
sub
cmp
pop
je
mov
enter
add
pusha
test
mov
cdq
xchg
mov
push
call
xlat
daa
push
add
add
pop
inc
mov
popf
mov
dec
and
inc
dec
pop
xor
inc
add
push
mov
fwait
and
mov
inc
add
std
and
ja
jle
add
cld
push
push
imul
mov
mov
push
push
ret
mov
jae
inc
or
sti
pop
scas
sbb
cmps
xchg
call
push
push
call
or
inc
mov
mov
mov
test
mov
xchg
into
call
push
fisub
test
inc
dec
mov
test
cmpxchg
jmp
inc
jae
inc
push
adc
std
aas
sar
icebp
push
mov
je
mov
cs
cmp
jne
mov
dec
dec
or
or
add
and
inc
inc
or
mov
or
je
lock
jl
push
cmp
cmp
je
cmp
je
cmp
je
popf
sbb
cmp
jl
cmp
jle
cmp
je
sbb
jmp
fild
cmp
jne
mov
jge
add
out
or
add
sbb
sar
sbb
add
mov
and
sbb
call
cmp
fnsave
mov
aad
shr
jge
cmp
cmp
jle
cmp
mov
hlt
int3
jge
cmp
paddd
imul
jo
test
je
cmp
mov
test
mov
cld
push
fdivr
jmp
out
xchg
test
add
je
dec
aad
mov
mov
lahf
jo
add
jmp
(bad)
mov
push
je
mov
icebp
aaa
mov
(bad)
push
je
cmp
je
mov
inc
mov
out
cli
jg
mov
mov
je
mov
mov
lock
dec
call
lock
call
and
mov
pusha
adc
mov
cmp
dec
add
jge
fucomip
cmps
xor
pushf
push
call
adc
push
dec
mov
dec
sbb
push
push
call
pop
loop
out
pop
das
or
fisttp
and
mov
sbb
and
jl
ror
clc
aas
and
or
jae
(bad)
sbb
jbe
call
adc
mov
fild
je
add
aas
in
push
lds
mov
inc
adc
mov
cmp
je
cmp
je
je
adc
clc
and
je
jmp
xchg
(bad)
(bad)
cmp
ja
aaa
(bad)
inc
test
adc
ds
pop
syscall
je
jo
mov
pop
fcom
mov
dec
aaa
adc
call
arpl
cs
test
push
into
push
data16
push
jnp
mov
add
push
push
jp
inc
push
sbb
push
in
fld
sti
popa
pop
add
loop
xchg
jnp
and
pop
test
mov
rcr
inc
sub
test
(bad)
loopne
add
cdq
popa
xchg
mov
cs
test
jne
sbb
mov
iret
sbb
jb
test
test
mov
add
jno
(bad)
jmp
call
dec
(bad)
leave
mov
fwait
mov
jno
push
push
inc
popa
mov
stc
jg
setne
mov
test
adc
adc
adc
test
jmp
pop
int3
cmp
je
(bad)
mov
push
mov
call
push
call
and
inc
or
cmps
retf
pop
jne
add
lods
or
js
adc
push
cs
call
add
xchg
bound
fistp
or
jg
call
shr
jp
rcl
push
adc
add
ds
and
mov
cmp
add
ja
call
xor
xlat
(bad)
push
adc
psubsb
or
in
jle
or
stos
loopne
(bad)
jmp
sub
add
jo
sbb
and
and
sub
inc
mov
std
call
jmp
loope
call
jne
push
push
adc
imul
sub
and
clc
cld
add
into
push
call
cmp
test
(bad)
(bad)
inc
outs
js
out
bound
sbb
and
(bad)
inc
jmp
add
hlt
idiv
(bad)
inc
inc
push
xchg
std
out
clc
xor
cdq
call
sub
add
cmp
je
sbb
lock
jl
call
sbb
jmp
and
nop
sbb
or
xlat
sti
jmp
mov
mov
call
scas
mov
into
call
sbb
inc
sbb
mov
fdivr
mov
rol
xchg
add
push
push
mov
xor
xchg
jno
dec
scas
cmp
or
fisttp
test
or
pop
xor
sbb
pop
call
std
std
dec
push
lods
mov
mov
mov
mov
rcl
add
jg
ja
mov
nop
or
inc
push
je
ret
cmp
sbb
cmc
add
aaa
in
test
mov
jmp
or
mov
test
jmp
hlt
leave
mov
ret
mov
adc
mov
cmc
cmp
cmps
daa
pop
out
cld
cmp
clc
aaa
mov
jne
push
push
enter
sbb
sbb
loopne
stos
mov
daa
imul
or
sbb
rol
pop
cs
call
pushf
add
xor
and
ficom
and
xor
push
call
or
jnp
out
out
xor
(bad)
sti
(bad)
jmp
mov
push
xor
sahf
and
pop
es
push
je
test
or
pop
adc
xor
pop
in
sbb
jecxz
call
jmp
cmp
jne
push
addr16
je
sbb
jmp
mov
push
push
inc
push
lock
or
dec
mov
test
fild
cmp
cmp
jne
mov
cmc
jmp
mov
in
push
call
enter
call
pop
push
unpckhps
call
je
repz
pusha
push
aad
hlt
pop
test
jne
cmp
addr16
(bad)
dec
mov
add
inc
cmp
jl
push
call
loop
hlt
ja
mov
push
push
call
add
shr
adc
out
das
(bad)
jmp
push
sbb
mov
and
or
push
push
mov
push
jmp
mov
jnp
jae
mov
jo
repz
fs
cmp
dec
xchg
mov
mov
add
cmp
std
mov
push
sbb
test
push
push
and
test
pop
sbb
mov
jmp
cs
sub
icebp
jmp
sub
dec
dec
in
jg
mov
add
fcom
push
les
out
add
xor
cmp
mov
push
push
mov
jle
ror
dec
sbb
test
dec
and
cs
test
or
add
or
xchg
sub
push
adc
dec
inc
push
cmp
pop
lds
test
push
push
push
lea
mov
call
lock
in
popa
mov
sbb
add
jo
or
call
mov
add
push
push
mov
jmp
test
call
inc
inc
add
add
call
retf
add
xor
xor
cmp
sete
inc
mov
call
jmp
sub
je
out
push
aas
je
cmp
shl
(bad)
jnp
test
ror
add
pusha
mov
dec
je
dec
mov
mov
push
enter
add
sub
sbb
push
pop
jmp
sub
mov
in
mov
in
xor
fsub
mov
jle
call
xor
jmp
loop
adc
not
adc
call
rcl
add
pop
mov
ret
push
jbe
rcr
and
jecxz
adc
inc
push
push
leave
cmp
jnp
adc
inc
rol
sti
add
pop
jg
push
call
or
out
ret
jne
adc
or
and
sbb
jmp
dec
sbb
dec
sbb
cmp
lods
cli
jmp
or
push
call
call
pop
repz
call
cmp
jne
ficomp
cli
dec
push
mov
call
pop
fwait
mov
add
add
adc
adc
ins
adc
adc
(bad)
inc
adc
fstp
xlat
push
push
jne
mov
out
std
ja
dec
mov
test
je
cmp
push
stos
fwait
mov
inc
and
sbb
out
sub
mov
jge
or
push
call
pop
ret
sub
pop
ins
pusha
jg
je
adc
xchg
pop
adc
mov
call
fsub
cmp
inc
or
xor
mov
or
lea
cmp
cmp
js
xor
xor
sbb
add
in
inc
mov
mov
sbb
outs
sub
mov
add
rol
loope
std
inc
cs
push
push
call
jecxz
(bad)
ja
lods
adc
adc
push
call
call
xor
mov
inc
std
pop
push
pop
je
push
call
jl
push
or
mov
dec
pop
push
fbld
mov
ins
loopne
ja
pop
lea
push
push
lea
mov
aaa
movs
push
call
ins
pop
sub
inc
cmp
and
and
and
rol
outs
add
sub
mov
mov
mov
sub
pop
mov
ja
xchg
cmp
mov
nop
inc
push
sar
jne
push
mov
call
cmp
aas
xchg
test
pop
je
add
rcl
or
je
adc
es
into
(bad)
(bad)
(bad)
cmp
inc
jl
(bad)
pusha
(bad)
cmp
pop
ficomp
mov
cmp
push
push
and
cmp
add
add
sbb
call
add
call
jno
pusha
and
mov
mov
mov
xor
aas
mov
call
inc
push
call
push
call
sar
xchg
lods
sub
or
jge
inc
loop
in
(bad)
out
adc
mov
ins
xor
imul
pop
push
call
cmp
adc
cli
cmps
add
adc
or
add
cmps
jmp
jmp
pusha
out
in
mov
pop
cmp
pop
xchg
jns
mov
mov
cld
push
jle
add
mov
sbb
(bad)
clc
cmps
or
out
call
push
adc
js
pop
jne
pop
pop
push
or
xchg
adc
into
stos
mov
adc
cmp
add
ret
adc
push
and
(bad)
popa
adc
mov
cmp
jne
icebp
sub
(bad)
sbb
rcl
(bad)
je
xor
adc
cmp
jl
push
inc
daa
mov
adc
lea
inc
or
test
cld
or
mov
sbb
clc
or
push
adc
pop
add
dec
and
add
jmp
mov
cld
add
mov
push
dec
call
push
ret
inc
adc
clc
xchg
mov
je
push
mov
mov
add
call
ja
cmp
pop
jmp
and
in
js
pop
sar
inc
lock
scas
hlt
clc
rol
inc
clc
hlt
push
cld
call
fs
shr
mov
repz
sub
mov
or
xor
push
mov
cmp
je
pop
add
push
mov
test
mov
jne
retf
xor
add
add
enter
nop
jnp
pop
jne
pop
ret
cmp
push
cmps
push
sbb
ret
aad
sahf
jbe
aad
aaa
jmp
int
std
nop
mov
ss
sar
popf
add
cmp
adc
jmp
mov
mov
push
push
call
mov
and
test
push
mov
mov
mov
cli
cmps
test
adc
cmp
mov
mov
sub
fwait
pushf
je
mov
enter
jg
cmp
or
add
es
stos
mov
in
mov
push
dec
dec
adc
add
xlat
pop
inc
lock
lock
je
dec
je
mov
adc
(bad)
je
sbb
or
jl
cmp
adc
sbb
pop
shr
sub
aad
mov
pusha
pmovmskb
add
scas
jo
jge
jnp
jge
dec
push
push
call
xor
and
call
js
push
call
(bad)
mov
push
push
push
mov
call
push
call
mov
je
sbb
push
sbb
retf
pop
test
mov
inc
pop
jmp
push
xchg
pushf
in
inc
mov
push
sbb
push
lea
mov
or
or
in
icebp
dec
add
lea
xor
into
mov
inc
cdq
into
push
sar
dec
dec
pop
rcr
sar
outs
adc
call
loope
or
std
ja
pop
shl
(bad)
push
call
or
cld
mov
nop
push
retf
inc
add
mov
test
mov
mov
jmp
inc
cld
leave
ret
mov
leave
ret
push
(bad)
jg
dec
mov
je
es
std
dec
inc
in
mov
mov
loope
call
xor
cmp
adc
stos
pusha
xchg
and
pop
xor
sub
sub
adc
mov
mov
inc
pop
inc
dec
gs
inc
xor
jb
adc
das
ss
mov
dec
adc
push
push
fldenv
and
mov
inc
adc
mov
mov
or
xor
xor
push
add
push
rol
call
fstp
sti
inc
push
push
popa
inc
movzx
dec
test
and
and
xchg
sbb
xchg
and
mov
and
adc
pusha
dec
neg
sub
adc
xor
cmp
and
cmp
pop
adc
dec
xor
dec
scas
dec
aad
xchg
xor
push
push
mov
fidiv
add
call
addr16
pop
sbb
jae
aaa
push
scas
xor
push
adc
xchg
pop
pop
xchg
in
add
xor
xor
(bad)
pop
(bad)
hlt
lea
push
mov
call
push
aas
adc
call
push
or
push
daa
mov
pusha
sar
sbb
sub
neg
pop
sbb
pop
inc
pop
outs
mov
hlt
push
mov
shl
out
call
add
xchg
jmp
clc
jp
inc
xchg
add
arpl
ds
not
jb
aad
mov
sub
mov
sub
xchg
call
hlt
es
cmp
jle
mov
jmp
cmp
jge
mov
aam
int
cmp
adc
lock
call
fcmovnb
ja
movs
xor
mov
mov
call
cmp
das
jb
pop
add
hlt
loope
jle
ss
outs
(bad)
call
(bad)
pop
retf
add
test
add
mov
ret
dec
sub
(bad)
(bad)
mov
push
clc
mov
sub
cmp
or
xchg
xchg
je
lea
pop
mov
add
xor
js
add
push
ss
push
mov
(bad)
pushf
or
inc
hlt
cmp
xchg
nop
stos
int
in
clc
cmp
lock
jg
popa
fbld
push
std
call
pusha
push
push
retf
mov
mov
inc
(bad)
call
imul
hlt
in
add
test
or
call
hlt
jnp
push
jo
add
pop
adc
mov
mov
jmp
cwde
push
test
jne
xchg
mov
pop
movs
mov
jecxz
lock
loopne
push
dec
push
call
inc
call
and
out
loopne
div
leave
sub
mov
shl
push
dec
sbb
cmp
jg
add
adc
jmp
add
(bad)
push
push
or
mov
xor
sahf
push
or
push
sti
movs
cmp
jp
pop
(bad)
sbb
loopne
xorps
add
add
(bad)
out
aaa
xor
call
mov
push
push
call
std
loop
mov
and
fld
fistp
mov
call
test
jne
push
int
ss
xor
imul
add
pop
mov
pop
mov
jo
pop
jecxz
std
xchg
sbb
sbb
adc
fisub
mov
cmp
je
push
mov
call
or
(bad)
mov
mov
adc
fisttp
daa
test
push
inc
adc
xchg
test
scas
and
add
jne
fst
cmp
das
mov
inc
icebp
or
add
or
inc
inc
fisttp
lea
cmp
je
push
push
or
sbb
fsubr
dec
cmc
add
inc
add
test
dec
sbb
ret
je
cmp
je
ds
jmp
(bad)
(bad)
jmp
pop
sbb
inc
hlt
aas
add
cmp
push
movq
cld
jmp
push
push
push
push
push
pop
jp
stos
mov
or
(bad)
call
test
data16
cmp
push
fstp
loop
cmp
shl
ja
xor
jnp
in
mov
idiv
push
inc
call
pop
jb
rol
jbe
std
jne
mov
in
pop
adc
fst
clc
call
or
adc
test
dec
fwait
add
add
je
(bad)
call
add
ja
aad
inc
jnp
rol
add
lea
or
fisttp
dec
push
mov
mov
call
push
loopne
js
inc
push
leave
push
inc
jo
add
dec
fldcw
inc
adc
pop
push
cmp
add
push
cmp
xor
cmp
adc
out
rcr
in
inc
cmp
mov
sub
(bad)
out
fidiv
xor
lahf
cmps
call
adc
mov
not
push
(bad)
fcom
xchg
mov
sbb
mov
xchg
adc
sub
(bad)
cdq
and
jne
mov
out
out
mov
rol
mov
add
add
sub
add
dec
sbb
call
sbb
mov
cli
enter
call
mov
pusha
sub
push
je
ins
cli
mov
lea
sbb
push
lods
pop
add
add
or
mov
pop
adc
pusha
sets
sbb
mov
jle
cwde
push
mov
adc
jne
lea
ffree
fstp
movs
add
je
sbb
call
ja
outs
loopne
aad
pop
pop
je
mov
mov
cli
into
je
mov
ss
call
mov
mov
fs
jne
cmp
push
sbb
inc
mov
mov
pusha
adc
jmp
cmp
je
push
push
aad
sub
adc
loopne
add
or
push
call
sub
cli
call
test
test
mov
jge
call
call
dec
out
and
icebp
lea
sbb
push
cmp
add
jmp
sbb
or
push
mov
cmc
into
lds
pop
inc
cld
je
icebp
jg
lahf
movs
mov
adc
xor
push
sub
call
or
les
xchg
data16
scas
push
or
test
inc
push
push
dec
xor
je
sub
mov
test
mov
aam
cld
(bad)
(bad)
jg
inc
push
sub
je
mov
sub
push
cli
dec
push
push
push
push
mov
sub
push
jnp
out
mov
int3
jne
xor
mov
je
mov
jno
xchg
add
clc
test
daa
lea
loope
mov
cmp
je
mov
call
adc
push
call
int3
mov
mov
add
fst
int
xlat
jb
jmp
dec
fcom
jo
inc
in
push
dec
or
fstp
xor
(bad)
es
clc
sub
mov
mov
loope
push
(bad)
sub
add
mov
call
mov
cmp
add
pop
(bad)
and
mov
mov
adc
cmps
fwait
add
loopne
mov
out
pop
xchg
out
jg
adc
add
ja
push
push
addr16
cmc
jne
sbb
jg
aam
imul
cmp
aam
add
ja
jne
push
dec
adc
cmp
test
push
xchg
je
push
dec
jmp
inc
jb
or
nop
mov
push
cmc
or
call
adc
pop
adc
mov
mov
jne
mov
xor
sub
sub
(bad)
mov
pop
cld
mov
imul
lea
cmp
jb
mov
cdq
sub
push
add
ret
mov
mov
mov
jmp
call
mov
sub
xchg
call
push
push
or
mov
in
xchg
mov
inc
cmp
ja
sub
mov
fidivr
test
sbb
dec
retf
call
push
lock
push
mov
add
in
call
cmps
cmp
jne
(bad)
sub
retf
call
adc
sbb
ja
jbe
(bad)
dec
push
push
push
push
push
push
mov
sub
add
sbb
adc
call
jmp
push
jmp
(bad)
mov
stos
jb
xlat
push
daa
ds
push
popf
mov
sub
push
push
mov
outs
xlat
add
daa
and
enter
and
data16
adc
cmp
aaa
hlt
ret
and
add
mov
pop
inc
cmps
sahf
add
in
out
or
and
inc
pop
mov
mov
in
imul
cs
repnz
call
push
lea
push
scas
push
push
clc
push
mov
jg
xchg
rcr
scas
push
pop
push
xor
lea
adc
inc
mov
mov
cmc
aad
mov
mov
jg
sbb
and
inc
adc
inc
fadd
aam
jg
jne
adc
fiadd
(bad)
je
or
cmp
or
mov
mov
cmps
mov
and
push
(bad)
out
dec
je
movzx
mov
push
(bad)
mov
mov
and
mov
pop
push
hlt
std
mov
shr
or
ret
out
and
xor
cld
call
push
call
pop
xor
pop
adc
xor
rol
push
push
ret
(bad)
xor
pop
jae
jmp
or
nop
shl
push
pop
ret
loopne
in
pop
jmp
rcl
xor
add
cmp
fst
or
push
add
sbb
push
add
xor
loop
loopne
inc
cld
fxch
ret
call
jp
call
cmp
add
fld
rcl
rcl
jnp
fdivr
(bad)
push
call
xor
adc
out
jge
xorpd
jmp
dec
jle
push
lea
mov
jg
fistp
and
and
push
push
mov
mov
xlat
std
inc
and
add
sub
aam
mov
(bad)
jg
add
mov
div
add
call
push
icebp
ins
test
call
call
xor
ror
dec
cs
cdq
jb
add
icebp
popf
test
call
cmp
or
pop
adc
adc
cs
aas
mov
and
data16
data16
pop
push
mov
add
adc
loope
mov
mov
add
je
push
xor
lods
js
add
xchg
out
and
bound
mov
add
and
cmp
je
cwde
cmp
push
mov
push
(bad)
(bad)
aas
push
adc
mov
mov
call
ja
or
cmp
je
adc
add
inc
cwde
adc
fcomip
lahf
out
inc
sub
jno
mov
call
pop
mov
(bad)
mov
push
dec
add
dec
jne
add
cmp
jge
push
inc
mov
(bad)
(bad)
(bad)
out
push
inc
add
add
sar
add
jmp
mov
lea
mov
cmp
jae
cmp
clc
sbb
mov
push
push
dec
push
push
mov
fsubr
adc
xchg
mov
dec
push
push
sbb
adc
fist
mov
mov
lahf
add
or
sbb
mov
loopne
add
cwde
push
call
pop
add
jp
adc
sbb
hlt
and
push
sbb
xchg
push
mov
push
test
add
scas
jmp
add
loopne
loopne
mov
inc
lock
push
mov
add
or
push
mov
dec
jg
icebp
and
jne
xchg
sub
or
push
jg
or
xchg
sbb
push
inc
in
call
push
push
push
mov
out
and
sar
mov
adc
xor
jmp
scas
and
dec
and
fs
add
inc
inc
stos
pop
and
pop
inc
xchg
xchg
lahf
dec
or
add
and
(bad)
shl
cld
push
call
xchg
jo
cmps
or
mov
call
push
ins
add
imul
sub
adc
push
or
ja
dec
cmps
inc
cld
jl
je
test
inc
inc
jg
sbb
je
jp
push
repz
mov
pop
push
in
jne
push
jmp
pop
xor
fdivr
pop
clc
je
ret
clc
call
div
mov
add
adc
fild
inc
or
add
inc
in
dec
or
push
mov
mov
add
ror
sbb
inc
test
dec
and
push
mov
mov
mov
jne
je
mov
cmp
(bad)
je
sub
push
sbb
(bad)
jg
(bad)
movs
push
call
sub
mov
mov
je
mov
cld
push
cmc
jb
push
hlt
mov
movaps
es
movs
jne
out
hlt
cmp
jne
push
fwait
xor
call
hlt
fidivr
cmp
pop
pop
leave
jmp
push
push
and
mov
or
call
mov
lods
jle
push
call
push
jg
out
or
lds
pop
pop
xor
jmp
or
mov
jmp
and
adc
dec
mov
adc
fnsave
(bad)
push
push
sbb
test
jl
lock
xor
or
adc
push
call
loopne
push
mov
fsubr
or
jl
out
je
mov
dec
idiv
pop
adc
call
cmps
or
mov
mov
adc
inc
mov
push
add
sbb
jle
shl
icebp
pop
pop
in
push
mov
add
fist
pop
in
pop
add
call
cmp
je
xchg
adc
rcr
les
mov
out
mov
call
fwait
stos
pop
mov
sbb
push
push
xchg
mov
shr
mov
dec
add
clc
rcl
or
mov
inc
movs
push
call
xor
cmp
mov
fmul
jne
je
push
call
pop
inc
lods
sbb
push
jmp
push
out
fsubr
xor
or
push
sti
mov
fsub
aam
(bad)
mov
jo
nop
lock
inc
cmp
inc
xchg
sbb
pop
(bad)
(bad)
mov
aas
mov
lea
mov
neg
(bad)
adc
adc
push
push
mov
and
adc
clc
pop
push
jmp
or
loope
mov
jmp
pop
xchg
lea
inc
mov
xor
push
movs
push
lea
add
xchg
mov
sbb
add
ja
inc
call
pop
or
call
mov
adc
call
sbb
lds
pop
test
iret
add
inc
ficom
cmp
popf
rcl
repz
cld
repnz
add
arpl
hlt
adc
in
sbb
call
adc
(bad)
ss
pop
pop
aad
cmp
setge
mov
sub
pop
int3
enter
gs
call
or
mov
sar
ror
nop
dec
aam
bound
test
jg
fcomip
adc
jmp
mov
cld
ja
add
mov
neg
sbb
neg
dec
cwde
add
ja
jmp
adc
mov
out
pop
xchg
test
push
ret
sub
mov
xchg
add
or
or
outs
gs
and
add
das
lea
mov
add
push
push
jmp
push
jmp
mov
call
jmp
or
lahf
call
into
call
sbb
lahf
in
(bad)
rol
inc
push
jmp
or
jmp
push
clc
mov
cld
(bad)
jmp
xor
push
push
in
fsubr
addr16
add
shr
add
sub
push
lock
mov
add
call
xor
(bad)
adc
cs
je
push
cmp
inc
aaa
aam
dec
je
mov
bound
mov
pop
xor
jle
cmp
mov
mov
cmp
add
jmp
loope
sar
lods
jecxz
into
je
push
jmp
push
sbb
out
call
add
jp
jo
cwde
add
sub
mov
fild
push
call
sahf
mov
pop
xchg
cld
push
mov
push
xor
mov
or
leave
cmc
(bad)
pop
cld
dec
sar
push
call
jmp
stc
(bad)
jmp
sbb
xchg
or
dec
cmc
test
dec
je
jmp
or
dec
je
dec
jne
push
pop
mov
call
mov
out
(bad)
(bad)
jg
std
cld
dec
mov
add
jmp
push
push
inc
pop
mov
(bad)
jmp
aam
in
dec
pop
out
or
dec
mov
lea
inc
ror
cld
push
and
lea
shl
dec
dec
add
ror
jae
out
or
mov
imul
cmp
jne
sub
pop
into
add
xchg
imul
mov
push
jl
adc
dec
jne
push
lea
cmp
sub
add
inc
mov
xchg
test
je
call
cs
cmp
cmp
push
sbb
push
and
ret
jne
sahf
dec
fnstsw
(bad)
jg
push
mov
mov
sub
push
adc
push
push
mov
push
xor
lea
fwait
(bad)
mov
dec
jge
mov
sub
jge
mov
jne
and
pop
fs
out
call
pop
pop
sbb
mov
push
mov
mov
inc
pop
jge
adc
cdq
xchg
clc
inc
ror
cmp
ja
out
add
lds
push
push
call
call
mov
mov
lea
movs
movs
push
loopne
fcomip
lea
movs
mov
movs
call
pop
push
pusha
adc
or
sbb
pusha
pop
pusha
imul
push
xor
jne
add
mov
out
dec
sti
mov
sub
leave
mov
je
cmp
cmp
and
je
inc
pop
pusha
call
push
ds
mov
call
cmp
pop
call
sti
pop
call
les
call
push
or
mov
into
mov
cli
cmp
mov
push
test
xchg
in
outs
cli
dec
add
adc
add
lea
jl
scas
jp
call
mov
push
repz
mov
out
sbb
inc
aam
push
add
jle
(bad)
fdivr
or
mov
mov
mov
push
add
push
je
cmp
(bad)
aas
jnp
pop
mov
imul
and
inc
(bad)
adc
dec
sbb
mov
cmp
(bad)
je
mov
fs
inc
test
jge
mov
mov
jo
(bad)
fldpi
cmp
dec
mov
mov
mov
xchg
mov
jp
inc
inc
cmp
and
inc
inc
idiv
mov
jne
xor
(bad)
(bad)
mov
std
call
aaa
lds
jne
mov
add
add
sub
(bad)
in
xor
cli
(bad)
cmp
addr16
sbb
sub
mov
or
add
and
inc
daa
je
cmp
data16
retf
jne
jns
test
arpl
and
push
jge
je
adc
xchg
cmp
iret
mov
or
cmp
in
sbb
icebp
sbb
ja
clc
call
shl
gs
xor
add
xor
inc
arpl
and
cmp
sbb
aad
or
shr
push
inc
outs
cli
les
sbb
test
pop
and
or
cli
pop
inc
or
mov
cmp
iret
bound
push
push
jae
mov
call
jg
fdivr
pop
shr
push
push
push
push
call
jo
mov
fldenv
test
sub
jge
xchg
jmp
add
jle
ss
mov
das
cmp
xchg
xor
sbb
adc
or
or
add
mov
std
lock
pop
je
inc
ins
les
add
add
pop
mov
jle
mov
and
push
add
jge
mov
(bad)
dec
or
aas
sbb
push
call
shrd
pop
fcomip
jecxz
in
inc
test
jns
add
jge
icebp
call
sbb
jmp
call
mov
jnp
lock
mov
push
jae
push
ret
(bad)
cld
lock
call
xor
(bad)
mov
lock
sub
mov
sbb
push
dec
sar
and
call
dec
in
fisttp
jo
lock
aam
jns
mov
lea
push
mov
inc
add
xor
aam
loopne
test
sub
call
jne
(bad)
(bad)
jg
jg
cmp
jle
push
and
cmp
jg
jmp
(bad)
div
push
lea
push
lea
call
cld
mov
mov
dec
pushf
test
lock
cli
pop
push
call
mov
hlt
leave
dec
(bad)
clc
add
(bad)
mov
pop
add
imul
shl
push
adc
rol
sbb
inc
xchg
sub
ror
push
push
outs
shl
sbb
fcom
es
test
jne
inc
std
or
push
imul
es
jmp
or
outs
jb
ret
mov
add
aas
add
stos
popf
je
inc
add
xchg
mov
mov
int
push
call
adc
dec
ja
and
jle
clc
call
dec
std
pop
xchg
inc
clc
cmp
mov
mov
pusha
ins
ja
xchg
jmp
in
int3
hlt
push
call
dec
(bad)
xor
push
call
push
sub
jp
pop
aad
lea
test
mov
iret
call
cld
call
cwde
stos
xor
jmp
or
xor
push
pop
lock
out
fsubr
lock
out
push
call
add
add
push
call
test
iret
mov
call
push
call
mov
cmp
mov
jle
jl
je
or
xchg
popa
xchg
add
ret
and
cmp
adc
and
lock
inc
mov
xchg
inc
sbb
pop
dec
cmp
push
push
call
clc
mov
fst
je
cmovno
cld
call
les
ins
cld
icebp
ins
cli
and
sbb
cmc
fsubr
ins
(bad)
stos
or
loop
sub
ret
lock
mov
test
inc
les
push
leave
mov
mov
call
fwait
inc
push
call
mov
dec
cmp
push
lea
call
in
sbb
out
pop
jne
call
call
stc
rol
inc
or
cli
(bad)
jo
js
(bad)
cmps
shr
push
std
mov
ror
mov
jp
sbb
mov
mov
icebp
lea
in
loopne
inc
push
mov
je
(bad)
jmp
test
cmp
add
xor
loopne
in
test
push
xor
call
xchg
inc
mov
mov
mov
call
inc
ds
and
jmp
jp
and
int
push
mov
adc
adc
je
and
loopne
jbe
stos
mov
jg
(bad)
in
or
pop
mov
and
pop
ds
and
cmp
add
inc
sbb
sbb
popa
mov
jmp
stc
(bad)
adc
call
pop
push
jmp
vpmaddwd
mov
test
jne
and
jmp
repz
in
adc
fmul
lock
cmp
mov
fs
mov
ret
hlt
sbb
popf
(bad)
jmp
icebp
xor
std
push
cmp
je
push
inc
call
pop
jb
jmp
add
inc
or
popa
js
or
xchg
mov
adc
or
je
aaa
adc
pop
xchg
sbb
jp
mov
mov
or
inc
push
mov
lea
call
push
push
(bad)
(bad)
mov
jg
jne
fwait
or
loopne
(bad)
fidiv
call
dec
adc
push
inc
(bad)
daa
jmp
test
jl
lea
cmp
xor
inc
mov
xor
mov
push
shr
and
ja
mov
dec
add
adc
push
call
cmps
ss
dec
sbb
pop
mov
out
leave
in
jo
dec
fst
push
mov
pop
mov
popf
dec
lock
clc
add
lock
ins
and
ret
cli
mov
fcom
ret
mov
stos
stos
pusha
cdq
xchg
jo
loopne
cmps
mov
div
aam
call
lea
paddusb
xchg
out
mov
or
popf
cli
pop
jmp
mov
jmp
add
(bad)
xor
call
mov
cmp
inc
xchg
add
jne
in
mov
into
call
sbb
call
lock
dec
ins
mov
in
call
jg
outs
jmp
adc
call
div
mov
std
lea
call
and
push
int3
inc
inc
aas
int3
call
fwait
mov
aam
ret
fs
nop
and
dec
pushf
jnp
call
and
jne
call
xor
inc
shr
rcr
cmp
js
loopne
shl
lea
ficom
pop
in
in
sub
mov
inc
jne
les
mov
shl
mov
ficomp
inc
add
fidiv
call
pop
pop
je
cmp
mov
sub
into
repz
jb
xor
mov
mov
xchg
jmp
movs
fstp
mov
shr
adc
and
sbb
hlt
call
test
add
mov
jle
call
mov
jmp
movs
fmul
(bad)
lock
pop
xor
test
(bad)
jmp
mov
loope
jae
mov
dec
in
daa
or
or
push
call
lea
loope
xchg
mov
mov
dec
xchg
or
lds
xor
add
and
adc
cdq
add
pop
pop
or
mov
shr
xchg
clc
jmp
xchg
jmp
mov
mov
clc
add
lods
mov
jmp
jno
arpl
jmp
shr
clc
jle
cdq
in
fsub
mov
or
adc
out
xchg
dec
call
sbb
sbb
loopne
push
leave
mov
sub
call
pop
inc
lock
add
mov
aad
add
sbb
add
clc
push
call
fistp
call
sar
clc
pop
je
xchg
xchg
and
push
xor
add
push
jnp
cmp
sbb
cmp
push
call
dec
cld
(bad)
call
out
ffreep
clc
mov
mov
test
mov
sub
push
dec
push
lods
adc
daa
sub
mov
sbb
sbb
call
push
adc
test
call
fadd
xor
mov
xchg
xchg
mov
sbb
dec
or
fcomp
adc
jo
rcl
pusha
inc
lock
cmp
leave
enter
pop
aam
das
cmp
sbb
add
ja
lea
sub
dec
xchg
ja
icebp
(bad)
mov
jne
call
or
xchg
mov
call
fs
xchg
mov
sti
scas
or
add
lea
push
call
dec
add
fsubr
mov
(bad)
pop
or
adc
mov
je
push
push
fadd
push
and
jbe
call
adc
out
inc
fs
in
adc
fsubr
xlat
jge
add
cmp
mov
cmp
jne
cmp
jne
lea
lods
pop
scas
mov
or
js
add
clc
frstor
sub
sbb
lea
call
jecxz
div
jne
in
mov
jmp
out
(bad)
mov
cmp
add
xlat
pop
movs
ins
stos
sub
push
mov
loopne
inc
sub
mov
shr
cmp
call
sub
inc
rol
shrd
sub
mov
call
mov
retf
push
jo
inc
cs
mov
xlat
pop
push
call
bnd
mov
mov
add
lock
jl
fsubr
mov
icebp
xchg
sbb
xchg
pop
aad
dec
add
mov
push
arpl
xchg
test
push
mov
lahf
mov
xlat
cmc
sbb
imul
jae
call
pop
aaa
push
adc
inc
movs
inc
sar
fldcw
mov
jno
pop
lea
cmp
into
call
pop
leave
ret
ret
xchg
loope
sub
xchg
imul
loop
scas
push
xor
test
call
and
or
mov
pop
pop
imul
cld
dec
mov
mov
jmp
inc
pop
inc
or
xor
mov
cmp
mov
call
loopne
shl
pop
fsubp
mov
je
mov
scas
add
or
and
adc
outs
retf
jne
je
dec
call
dec
mov
cmp
je
loopne
stos
movntq
xchg
clc
je
sbb
sti
or
aas
test
and
mov
ret
cmp
ror
lock
sub
xor
adc
xor
pop
inc
mov
and
test
loope
inc
fdiv
ds
push
xor
test
aam
push
mov
sbb
clc
out
loop
jne
jle
mov
mov
mov
add
mov
dec
lea
movs
movs
mov
movs
movs
adc
pop
call
pusha
cmp
je
push
icebp
xor
shr
movs
mov
(bad)
dec
and
ffreep
sti
dec
shl
mov
jne
test
je
add
mov
add
jmp
xor
retf
xor
sbb
bound
aaa
inc
or
sub
cmp
mov
mov
cmp
(bad)
cmp
jl
add
gs
or
inc
mov
or
dec
pop
adc
xor
and
jmp
ret
pop
mov
inc
lds
inc
push
in
xor
retf
data16
mov
stos
in
les
xchg
mov
test
mov
and
ins
sub
add
sbb
sub
inc
rol
jmp
cwde
inc
cld
fs
pop
push
call
xor
sub
jne
jno
cmp
aas
rcl
clc
call
mov
cmp
js
hlt
dec
pushf
call
pop
pop
xor
jmp
sub
jne
sub
loopne
mov
hlt
push
mov
mov
inc
iret
mov
je
cmp
je
call
jae
inc
hlt
cwde
push
ins
data16
xchg
test
and
sub
push
pop
push
inc
push
loop
push
xor
xor
mov
mov
cli
jg
adc
shl
or
push
call
xor
cmp
jmp
clc
or
jge
inc
mov
mov
fcom
call
mov
cld
neg
sbb
(bad)
std
sbb
dec
adc
add
cwde
mov
sub
mov
push
mov
cld
scas
icebp
call
out
adc
dec
inc
lea
cmp
je
mov
lea
ins
push
mov
lods
inc
dec
push
mov
daa
xchg
aad
sbb
add
pop
or
or
jne
aas
mov
aad
xchg
jmp
or
cmp
jl
sub
test
cmp
ja
ja
into
dec
or
xor
pop
inc
dec
test
or
jne
call
sti
sar
(bad)
jmp
inc
rol
dec
pusha
adc
out
sub
add
dec
sar
add
inc
cmp
idiv
(bad)
out
stos
push
push
lea
sub
stos
paddsb
dec
add
pcmpeqd
gs
out
sub
add
stos
(bad)
adc
cmp
add
jne
ret
adc
push
sar
test
mov
je
test
je
clc
call
cmps
pop
and
scas
ss
mov
xor
sar
call
loopne
mov
push
daa
mov
mov
mov
pop
mov
cmps
cmp
push
outs
call
mov
loopne
add
push
call
mov
js
and
adc
dec
push
sar
lods
mov
mov
mov
scas
cli
arpl
sub
(bad)
cmp
je
out
sbb
sbb
jne
lea
push
push
cmp
int3
sar
rol
stos
sbb
jo
jb
enter
lahf
add
fsin
or
pop
ins
mov
fild
stos
or
icebp
call
mov
add
inc
dec
and
xor
mov
add
mov
bound
pop
mov
mov
xchg
mov
push
add
push
in
das
bound
cmp
xor
xchg
sub
push
arpl
mov
mov
jl
lods
dec
lds
fisttp
dec
xchg
adc
inc
pop
mov
mov
mov
xchg
mov
xchg
add
addr16
push
je
mov
jg
sub
les
push
int3
and
mov
test
sbb
mov
jne
mov
push
outs
mov
jge
jne
mov
push
cmp
jne
mov
and
sbb
jp
push
rcr
call
and
test
mov
test
pop
sub
dec
out
add
push
jne
push
mov
push
mov
mov
mov
push
push
pop
or
lock
mov
mov
lea
mov
push
lea
mov
dec
clc
cs
sbb
imul
icebp
xor
cmp
jg
imul
push
fadd
push
mov
adc
jmp
xchg
lea
ror
ret
je
mov
or
xchg
test
mov
test
nop
daa
mov
cs
cld
dec
and
or
retf
je
cmp
dec
lock
mov
stos
cli
mov
adc
push
(bad)
call
mov
pop
jne
mov
cmps
and
ret
mov
inc
mov
lahf
cmp
inc
inc
add
push
mov
ss
mov
push
lds
xor
or
xchg
shr
cmp
icebp
call
cmp
or
loope
or
cli
sbb
push
mov
or
data16
cmp
int
mov
cmp
outs
cs
lea
(bad)
cmp
mov
enter
push
sbb
adc
add
fsubr
adc
mov
cmp
mov
lea
add
icebp
std
pop
push
push
add
jo
jne
call
enter
adc
or
sbb
push
push
aad
inc
ror
cmp
sbb
(bad)
push
push
rol
and
jmp
into
outs
inc
cmp
mov
fstp
shr
cmp
sbb
fadd
aad
pop
pop
iret
mov
call
push
cmp
push
and
mov
adc
cmp
loopne
sbb
in
mov
je
push
mov
call
(bad)
out
dec
pop
and
xor
add
jne
push
test
adc
push
push
loopne
adc
push
nop
sub
inc
and
cmp
clc
mov
lea
mov
inc
cld
lea
mov
add
(bad)
ja
or
push
jne
call
sub
jg
inc
aam
call
aam
jge
pop
add
add
add
clc
and
inc
out
mov
jle
mov
cmp
mov
xchg
rcl
dec
mov
inc
call
popa
cli
aam
push
jge
call
xchg
and
leave
bound
rcl
outs
adc
adc
leave
adc
lock
adc
adc
clc
adc
mov
or
mov
push
call
mov
add
jnp
int3
mov
mov
enter
(bad)
pop
dec
mov
add
je
ficom
adc
in
or
inc
in
test
scas
sbb
hlt
call
or
bound
push
lea
push
push
mov
add
clc
in
cld
or
inc
mov
lahf
into
inc
xor
xchg
push
lea
add
call
in
push
and
and
mov
or
xor
push
call
mov
cli
(bad)
jg
jne
je
push
cmp
push
push
push
je
push
push
jmp
sub
aad
xchg
adc
add
push
push
xchg
call
data16
dec
nop
popa
or
mov
mov
cmp
je
xchg
pop
and
(bad)
(bad)
pop
outs
push
push
cs
test
in
xor
pop
pop
push
prefetch
(bad)
ror
std
jne
cmc
sub
cmp
call
xchg
or
movzx
test
cld
add
fmul
pop
or
aas
(bad)
jl
mov
sub
cmp
jg
in
push
stos
js
mov
jle
mov
push
cdq
sub
pop
ja
out
ja
mov
sub
psrlw
fst
push
push
(bad)
jmp
mov
jmp
push
push
lea
inc
fwait
mov
add
ror
sub
ds
std
dec
and
mov
fnstenv
push
es
clc
adc
jmp
gs
rol
jae
sub
mov
and
or
mov
mov
or
add
(bad)
ror
pop
aam
mov
mov
sbb
dec
pop
push
push
pusha
push
push
push
movsx
shr
mov
and
add
fdiv
sub
scas
test
add
(bad)
mov
sub
or
cld
mov
sub
les
test
scas
(bad)
sbb
retf
xchg
rol
je
add
fsubr
mov
cdq
idiv
lea
mov
fistp
outs
cli
push
push
push
push
out
call
clc
push
pop
inc
test
mov
stos
mov
call
mov
(bad)
movsx
cmc
es
clc
iret
call
mov
jnp
add
mov
adc
push
mov
push
call
jmp
push
call
pop
inc
mov
arpl
std
(bad)
std
(bad)
fcmovnbe
pop
mov
push
lods
outs
jmp
sbb
xchg
jmp
push
jmp
and
pop
adc
cli
ja
xchg
out
(bad)
xor
mov
je
rol
ds
mov
push
shl
push
jne
popf
jmp
scas
add
inc
fs
bound
in
or
add
sub
mov
push
lea
scas
or
mov
mov
sbb
push
push
call
sub
mov
jmp
jo
cmp
mov
adc
out
xor
push
dec
cld
push
mov
push
or
push
jmp
inc
js
dec
cmp
repz
add
dec
jo
xor
push
jne
(bad)
mov
adc
push
sub
sti
mov
test
push
pop
push
push
or
push
pop
push
adc
loope
pushf
add
push
add
or
mov
sti
xlat
or
push
adc
jmp
xor
idiv
ins
mov
out
push
lea
push
push
mov
test
rol
ret
pusha
add
bound
xchg
xor
mov
mov
movzx
mov
mov
xor
movzx
rol
or
lea
inc
ror
mov
mov
je
add
push
call
pusha
push
sbb
cmp
jne
jo
inc
push
mov
jmp
enter
ss
mov
mov
or
add
in
or
push
mov
add
jnp
push
lea
pop
clc
call
clc
and
jge
mov
push
and
cmp
and
mov
aaa
add
clc
sub
or
out
mov
or
or
pop
sar
cmp
pop
test
inc
jge
or
xchg
(bad)
call
iret
int
add
add
xor
cmp
jl
cmp
and
cld
jle
cmp
jle
test
jg
add
mov
push
dec
or
sub
hlt
shl
cmp
jb
cmp
ja
add
dec
and
test
sub
push
je
test
je
sub
shl
push
inc
and
sar
mov
dec
add
(bad)
fcos
or
inc
inc
cmp
jne
sub
shl
cmp
jne
cmp
jne
mov
jmp
xor
jmp
xor
cmp
sete
icebp
out
(bad)
out
pop
clc
call
and
add
xor
mov
and
push
cmp
adc
gs
data16
(bad)
fwait
jo
ret
add
or
pop
ret
mov
pop
outs
loopne
sub
inc
and
(bad)
mov
mov
je
adc
test
pop
pop
jne
inc
cmp
jecxz
(bad)
frstor
(bad)
pop
ret
pop
rol
add
clc
or
lahf
ret
cmovp
ja
add
add
xor
shl
dec
and
add
add
mov
add
cmp
jb
cmp
ja
movzx
sub
adc
(bad)
call
and
ret
adc
ret
xor
ret
mov
mov
mov
retf
shl
add
(bad)
popa
inc
pop
dec
jo
pop
add
cmp
sbb
call
cld
add
pop
mov
mov
mov
cmp
(bad)
stc
or
jbe
sar
mov
ret
push
mov
push
call
rol
sbb
or
jne
lds
lea
sar
add
test
push
rcr
push
push
push
mov
add
dec
push
(bad)
cmp
jnp
lock
push
mov
call
push
push
mov
call
imul
cmp
jg
ret
push
push
call
mov
test
add
adc
sbb
push
sbb
mov
dec
cmp
cmp
add
adc
push
push
mov
dec
out
jle
inc
aad
sbb
test
dec
cmp
aas
test
test
into
jge
lea
repz
mov
add
dec
mov
jne
mov
cmp
mov
sar
xlat
hlt
dec
add
ins
nop
ins
es
cmp
fdivr
lea
add
push
jmp
push
jl
mov
push
mov
push
call
cld
mov
push
into
aad
or
mov
test
mov
out
push
mov
cli
jnp
mov
mov
add
mov
adc
push
(bad)
(bad)
ja
call
push
mov
loopne
in
cmp
inc
cld
mov
fldcw
mov
xchg
fst
sub
dec
dec
push
add
mov
aam
cmp
test
mov
mov
aas
push
callw
cli
(bad)
sti
mov
and
jecxz
sbb
dec
retf
iret
inc
enter
add
or
and
xor
ror
arpl
test
lds
pusha
jne
or
adc
adc
scas
popf
ds
pop
ds
imul
jns
mov
and
xor
adc
outs
or
outs
xor
(bad)
in
and
xor
pusha
add
xor
dec
cmp
fwait
sub
adc
(bad)
cld
call
mov
push
push
pop
cmp
je
scas
cmp
inc
sbb
aaa
add
outs
pop
cmp
jne
push
jg
jae
push
lea
push
enter
movs
pusha
adc
adc
aas
test
pop
je
mov
adc
push
test
je
cmp
fstp
call
jne
mov
rcl
cs
call
je
and
mov
adc
jae
push
nop
or
fist
shl
stos
and
inc
fldcw
and
push
or
inc
je
es
mov
adc
xor
movs
inc
push
and
shl
adc
dec
mov
pusha
jmp
loopne
sbb
call
inc
les
push
loopne
shr
mov
pop
fcom
stos
jecxz
push
push
mov
xlat
mov
mov
outs
test
inc
call
call
enter
call
fmul
push
aaa
movd
test
je
or
shr
in
les
push
loope
inc
or
pop
aad
into
add
in
or
add
stos
xor
popf
xor
xchg
out
or
or
jmp
sub
inc
icebp
out
mov
mov
and
or
sbb
aaa
mov
sub
repnz
pop
add
inc
lea
mov
mov
inc
xor
stos
or
setl
dec
mov
adc
test
mov
push
add
inc
pop
pop
or
cwde
jae
or
cmp
out
add
daa
jle
icebp
jg
stos
cmp
jne
cmp
mov
inc
inc
mov
jbe
sub
sub
or
addr16
mov
and
push
xor
add
mov
xor
stos
aaa
xor
inc
inc
inc
out
fistp
xor
and
cmp
fbstp
sete
or
mov
push
test
popa
jge
push
xchg
inc
xor
inc
test
push
pop
je
(bad)
imul
or
and
fld
push
mov
mov
or
pop
adc
push
call
les
or
inc
stos
jnp
sar
cmovae
cdq
jle
add
jecxz
inc
add
lock
jbe
lock
outs
or
adc
dec
cmp
outs
jnp
out
cmp
mov
jb
mov
daa
xadd
add
jecxz
add
or
add
mov
xor
mov
mov
vfrczsd
(bad)
jmp
or
mov
inc
adc
mov
loope
or
and
aas
pop
add
sahf
aam
(bad)
push
or
outs
jge
pop
cmp
cmp
push
call
aas
add
dec
mov
sub
(bad)
mov
gs
mov
lea
xor
xchg
dec
mov
aad
jg
add
xchg
xchg
icebp
sbb
mov
pop
sar
push
add
shl
lods
ja
and
xchg
add
xchg
or
and
jecxz
and
sbb
mov
jnp
gs
inc
push
mov
cmp
xor
jne
mov
in
dec
adc
sub
call
inc
mov
sbb
or
fmul
ret
(bad)
xor
in
sbb
jo
dec
fadd
call
pop
push
mov
mov
jg
fidivr
mov
dec
mov
imul
cdq
idiv
cmp
xor
std
lahf
mov
push
inc
sbb
dec
add
loope
push
push
mov
jg
and
jl
and
xchg
cmp
sar
mov
setne
xor
out
cli
jg
test
imul
push
xor
and
xor
cwde
add
dec
fsub
xchg
es
pop
outs
mov
ins
test
je
test
idiv
in
push
mov
not
je
mov
inc
inc
jl
push
add
mov
mov
div
shr
lds
sahf
xchg
or
jno
push
sub
pop
push
jge
push
push
call
pop
pop
jl
push
dec
(bad)
adc
push
push
call
inc
push
push
call
aas
and
push
call
add
fistp
(bad)
retf
call
xchg
push
fist
fcomp
fnstsw
add
adc
add
rol
daa
into
lds
das
adc
popa
inc
(bad)
jmp
xchg
or
mov
ret
pop
daa
add
xchg
add
dec
fs
or
mov
sbb
mov
icebp
out
push
ret
ja
push
call
mov
and
loop
add
jl
fs
fadd
ins
or
popf
(bad)
imul
or
ins
test
xor
fucomi
add
daa
int3
int
or
cmp
cmp
pop
not
outs
or
cmps
daa
mov
mov
shl
icebp
jle
push
call
mov
cmp
call
or
fmul
and
add
xchg
fldcw
jmp
xchg
sbb
movaps
dec
xchg
add
in
push
pop
cmc
ja
sub
xor
enter
dec
jl
daa
aad
adc
mov
sbb
rcl
sbb
mov
pop
xchg
rcr
xchg
xor
cmp
stos
lea
mov
xor
cmp
sti
je
mov
mov
mov
inc
cli
inc
dec
fadd
xor
inc
pop
js
mov
clc
das
xor
jbe
sub
mov
js
loopne
mov
push
mov
arpl
(bad)
jle
push
mov
idiv
shl
jmp
movzx
lock
nop
inc
jno
jne
call
xchg
call
add
mov
dec
dec
ror
pop
xlat
test
std
clc
inc
gs
mov
aas
cmp
jne
lea
and
and
mov
clc
push
jb
mov
call
mov
mov
lea
mov
call
int3
or
ror
mov
dec
inc
xor
add
scas
lahf
scas
mov
cmp
shl
(bad)
dec
sbb
sbb
shl
pop
dec
jne
push
jmp
push
je
icebp
add
sbb
push
or
add
push
jmp
and
dec
je
dec
icebp
cwde
mov
adc
or
mov
(bad)
cmp
test
xor
(bad)
push
push
push
jno
enter
add
(bad)
mov
dec
je
dec
je
dec
je
dec
je
dec
je
or
test
mov
icebp
mov
xchg
mov
mov
mov
mov
mov
lea
sbb
or
jnp
bound
or
and
mov
or
mov
in
fisttp
jl
sbb
mov
sbb
or
xor
xchg
xor
add
lea
mov
and
sbb
leave
in
sub
cmp
test
sbb
jg
pop
adc
retf
xor
cld
mov
jle
push
fsubr
xor
(bad)
dec
adc
icebp
(bad)
push
and
les
push
push
push
mov
call
push
call
jge
out
jbe
call
jmp
pop
cmp
cmp
inc
mov
test
jmp
and
(bad)
and
inc
or
int3
push
loopne
aaa
push
sbb
cld
movs
int3
xor
fiadd
inc
or
and
mov
call
push
call
dec
cmp
cmps
pop
cld
cdq
fld
mov
lea
call
lea
div
pusha
cwde
push
cld
adc
adc
or
xor
jmp
add
push
push
(bad)
jmp
push
es
retf
call
adc
cmp
push
ins
sub
out
add
cmc
push
push
jmp
cmp
cmp
(bad)
call
pop
jmp
cmp
sti
xchg
mov
jl
jmp
xor
iret
ins
add
cli
movs
add
ja
xchg
push
push
call
cmp
je
popa
lods
mov
mov
call
lock
sbb
in
mov
adc
jecxz
jb
cmp
shl
add
add
push
call
(bad)
inc
sub
mov
xor
push
adc
loopne
test
push
(bad)
push
cmp
imul
pop
add
cli
xor
add
cdq
add
call
loope
adc
lea
xchg
popa
and
std
jne
or
jb
lods
test
jbe
aad
loope
repz
ss
push
call
sbb
add
cmpps
mov
cmp
xchg
popa
and
and
mov
int3
loopne
(bad)
push
push
push
call
jae
(bad)
jmp
inc
mov
dec
call
and
out
mov
(bad)
dec
pop
add
sbb
inc
push
mov
jne
scas
mov
call
mov
repz
cld
sub
pop
mov
dec
mov
(bad)
jnp
add
test
je
mov
sub
sub
(bad)
dec
add
mov
mov
mov
call
mov
(bad)
xchg
inc
adc
cmp
aas
or
mov
fcom
add
call
fmul
pop
add
adc
out
or
xor
inc
and
out
push
mov
push
fimul
mov
fldcw
jmp
adc
cwde
sbb
ds
and
inc
and
arpl
outs
xor
inc
jo
loope
or
movs
add
jmp
popf
sete
test
mov
je
push
lea
les
int3
jo
fist
call
mov
sbb
not
je
or
mov
loopne
mov
xlat
cmp
jbe
jmp
jge
lea
push
dec
adc
in
cld
jo
jle
movs
or
fst
xor
mov
push
push
call
cmp
adc
cmp
adc
out
mov
mov
sbb
mov
int3
push
call
popf
mov
sbb
cmp
js
or
retf
sub
mov
(bad)
std
push
push
lea
mov
je
lock
mov
out
mov
push
pop
call
cmp
pop
sbb
push
mov
mov
and
lock
je
mov
cmp
inc
rol
push
adc
mov
movs
and
add
inc
add
mov
ins
ret
cmp
push
cmp
(bad)
inc
jo
ins
jmp
push
ins
fstp
push
mov
push
cmp
call
pusha
jp
hlt
or
adc
push
(bad)
mov
jmp
hlt
cld
call
xlat
outs
sub
push
xlat
or
je
push
call
ror
add
and
xor
inc
cld
pop
jge
xor
or
jl
xchg
and
cld
call
in
inc
test
fwait
data16
push
jo
rol
call
jnp
mov
cwde
fcmovb
fild
push
mov
call
clc
shr
mov
adc
add
fidivr
sub
push
ss
jae
xor
cmp
je
popa
push
push
loop
add
push
mov
cld
lea
push
push
push
sub
inc
or
(bad)
dec
(bad)
dec
adc
push
add
mov
add
movs
push
call
test
inc
mov
fcom
cmp
sub
cwde
inc
xor
mov
ss
pop
push
aas
(bad)
jg
fild
je
test
jne
xor
inc
call
daa
sbb
(bad)
je
add
sbb
js
jb
mov
mov
(bad)
(bad)
inc
test
push
je
test
jne
cmp
je
push
push
call
cmp
jno
jbe
(bad)
or
pop
lock
idiv
fadd
pop
test
je
sub
mov
jmp
in
dec
rol
sbb
mov
test
jne
sbb
je
dec
push
dec
jg
pop
adc
popf
ror
sar
cmps
pop
jle
sub
push
jns
cld
(bad)
mov
add
je
or
out
popa
fild
xor
fld
hlt
pop
aaa
add
jmp
stos
push
push
mov
mov
ret
xchg
or
add
or
lea
push
sbb
cmp
add
mov
and
dec
(bad)
mov
call
push
push
out
repnz
fwait
jmp
add
je
jmp
cmp
test
lods
mov
xchg
cmp
je
add
iret
jle
test
jmp
in
inc
shl
mov
mov
call
daa
adc
loopne
push
cdq
call
and
adc
push
push
je
sub
into
call
dec
dec
je
sub
je
or
dec
enter
shr
push
push
in
(bad)
jg
jle
scas
idiv
mov
push
call
mov
jmp
and
mov
(bad)
lea
jmp
sub
jmp
push
or
pop
fsubr
les
or
or
dec
test
mov
je
sbb
jmp
lock
or
(bad)
je
push
dec
and
inc
inc
or
add
(bad)
dec
cmp
mov
sete
fldcw
repz
mov
jp
loopne
in
inc
mov
ror
(bad)
xabort
pusha
mov
dec
xchg
call
ret
pop
and
dec
sbb
dec
push
push
mov
cld
aaa
push
mov
inc
dec
xchg
inc
jmp
cmp
sub
or
xchg
inc
mov
clc
sti
inc
lods
inc
add
cmp
cwde
leave
sbb
addr16
lods
add
and
push
adc
ds
pushw
mov
lods
mov
inc
dec
push
call
and
or
retf
fsub
add
call
loope
cld
inc
and
or
lds
adc
jne
pop
pop
push
lea
xor
call
bound
jge
adc
sar
adc
inc
sub
call
je
or
ret
add
jo
push
jmp
ja
pop
lock
out
lea
cmp
jl
into
call
repz
fwait
mov
add
push
rcl
push
mov
and
loope
call
or
dec
or
ficomp
xchg
mov
fild
mov
push
call
sbb
jle
(bad)
dec
call
mov
aad
xchg
je
push
lea
call
call
mov
inc
push
call
(bad)
fisttp
fdiv
sar
pop
je
push
push
push
push
push
push
dec
inc
hlt
mov
adc
inc
pop
push
inc
nop
loopne
xor
repnz
push
push
mov
ds
inc
jp
addr16
call
inc
or
mov
cwde
jmp
hlt
call
sub
jmp
mov
es
mov
ss
rcr
iret
or
push
call
lds
cmp
mov
fisub
fld
lods
or
test
enter
ins
push
call
inc
(bad)
push
lea
push
push
call
(bad)
sbb
ins
jb
mov
adc
mov
push
jecxz
add
dec
jp
ror
jmp
fs
hlt
cmp
rol
jne
movs
sbb
sbb
add
mov
add
icebp
into
push
fimul
xor
hlt
sahf
fld
jmp
xchg
mov
adc
or
test
test
mov
hlt
out
push
test
dec
pop
arpl
inc
mov
call
adc
push
popa
xlat
xchg
into
movs
jmp
inc
pop
adc
dec
leave
(bad)
loope
adc
cmp
hlt
dec
or
mov
cmp
cmp
call
cmp
call
dec
mov
leave
aaa
and
xor
sbb
add
add
rol
ds
les
inc
popf
fwait
or
ja
or
push
pop
jno
mov
pop
jmp
xchg
fstp
call
mov
test
je
jmp
add
scas
xchg
push
jle
call
jmp
push
add
sbb
sub
cmp
push
repnz
cdq
mov
and
push
sub
mov
test
add
loope
add
add
xor
sbb
sbb
daa
aas
les
sti
and
iret
mov
call
fwait
sbb
push
loopne
push
mov
mov
push
dec
mov
sub
cmp
mov
call
jnp
or
das
pop
sti
lahf
xor
cmp
pop
pop
jne
das
add
ds
inc
imul
sbb
or
push
dec
or
xchg
test
sbb
sbb
(bad)
sbb
cmp
les
inc
fadd
jg
pop
or
or
int3
call
out
inc
jl
or
sbb
(bad)
in
mov
jle
sub
ja
push
or
call
cmp
add
and
xor
inc
test
in
(bad)
adc
push
(bad)
jg
pusha
jne
push
call
push
call
dec
and
adc
adc
jno
mov
arpl
call
push
dec
sbb
sahf
push
hlt
std
xor
mov
adc
mov
rcr
pop
mov
iret
in
push
int
(bad)
fadd
mov
mov
jb
ins
cmps
outs
icebp
out
inc
fs
and
adc
iret
dec
adc
ror
adc
les
mov
or
les
test
and
cmp
cmps
leave
(bad)
gs
rcr
fsub
adc
jge
inc
(bad)
fldcw
clc
and
push
jmp
xor
out
and
jne
push
mov
in
push
call
or
stos
aad
mov
add
jl
jmp
adc
loope
xchg
daa
outs
mov
or
imul
and
add
and
mov
ret
cmp
clc
add
call
inc
push
push
pop
mov
ret
stos
stos
lock
xchg
sbb
sbb
xchg
fnstenv
clc
adc
push
push
call
out
outs
stos
lock
jl
mov
ins
or
call
cmp
adc
lods
pop
or
imul
iret
clc
or
fld
push
push
xor
sbb
retf
icebp
xchg
push
call
jmp
mov
in
dec
bound
add
stos
retf
pop
dec
dec
shl
push
pop
xor
push
pop
inc
cmp
push
pusha
push
(bad)
cmp
mov
mov
push
jne
call
adc
mul
add
mov
fld
shl
xor
inc
enter
mov
push
fwait
hlt
nop
sub
test
sbb
bound
repnz
bound
cmp
push
mov
push
push
push
push
call
in
repz
pop
add
jg
push
mov
mov
outs
pop
adc
sahf
call
dec
add
cmp
or
adc
inc
adc
push
push
sub
fistp
cmp
je
sbb
push
sbb
jmp
pop
loopne
push
lea
adc
(bad)
jmp
inc
or
jb
rol
push
jmp
push
jmp
mov
or
rcpps
(bad)
or
cld
mov
pusha
add
or
cmp
add
call
or
jl
push
jmp
push
(bad)
call
add
mov
inc
stos
shr
or
(bad)
xchg
imul
pushf
add
adc
inc
cwde
inc
push
and
jg
fsubr
(bad)
pop
repnz
cmp
je
adc
test
add
inc
lock
test
mov
pop
aas
and
push
in
or
in
loop
mov
and
jbe
repz
xor
mov
inc
jge
les
test
sub
lock
inc
mov
inc
jmp
sti
adc
jle
or
les
add
clc
call
clc
push
mov
jmp
sub
push
push
push
sub
cmp
dec
xor
ins
sbb
outs
fisttp
jb
inc
fsubr
scas
aas
jg
jl
mov
sbb
cmp
inc
adc
dec
push
gs
jl
mov
mov
mov
dec
dec
sub
mov
call
or
jl
jo
jne
mov
inc
jne
jne
mov
or
sub
shr
icebp
std
jmp
adc
add
pusha
sub
jnp
sbb
call
in
cmp
outs
mov
pop
sbb
test
jnp
push
(bad)
lock
push
fist
clc
cmp
jl
adc
mov
sub
jne
outs
pusha
dec
adc
retf
je
mov
add
rol
outs
and
fwait
mov
call
cld
call
nop
mov
pop
push
lock
jns
push
or
push
call
imul
push
mov
je
jb
ret
rcl
sbb
dec
ret
xchg
add
sbb
push
push
icebp
or
jns
call
mov
call
jbe
mov
pop
call
jne
loope
adc
addr16
jne
xlat
and
sbb
pusha
loopne
mov
ret
jge
(bad)
pop
aad
xchg
add
adc
pop
sbb
add
(bad)
call
push
mov
push
mov
push
mov
call
mov
test
mov
test
add
or
mov
mov
add
xchg
loopne
sbb
outs
xor
sbb
pop
sbb
sbb
or
pushf
and
inc
cmps
cdq
jo
in
dec
xor
push
cmp
pop
pop
adc
add
sbb
xchg
pop
push
and
add
test
jne
ins
push
add
jne
nop
sub
shl
push
sbb
dec
inc
and
add
aaa
dec
inc
add
out
fisttp
jmp
xor
sbb
cmp
je
sub
mov
rcl
fcom
mov
cmp
movs
xor
mov
inc
scas
xor
mov
test
jne
test
mov
je
fist
pusha
mov
push
cmp
(bad)
rol
unpcklps
in
sub
mov
jmp
jne
int3
imul
mov
mov
or
sbb
lock
cmc
scas
or
enter
xchg
adc
fwait
pop
hlt
pop
or
push
and
inc
inc
add
stos
and
outs
pop
add
call
mov
sbb
cli
outs
mov
clc
push
push
mov
das
call
icebp
mov
jmp
je
outs
push
jne
or
adc
mov
cmp
imul
out
rol
lock
jl
mov
push
je
imul
dec
push
call
add
and
movs
(bad)
cmp
scas
cmp
(bad)
jmp
adc
cmp
je
mov
cmp
pop
je
or
int3
and
xchg
and
ds
ins
rcr
sbb
jbe
mov
sub
adc
mov
pushf
mov
xor
mov
jno
sbb
rcl
loopne
mov
inc
xchg
je
rcr
inc
add
test
xchg
std
sbb
xor
adc
xchg
mov
adc
sub
(bad)
clc
and
cmps
stc
mov
pop
xor
mov
call
ja
sbb
adc
jbe
ror
aas
xor
jmp
adc
jnp
and
cmp
pop
rcl
cld
je
sbb
int3
or
hlt
lods
and
add
call
mov
or
call
pop
mov
push
mov
jp
(bad)
call
sbb
call
xor
jmp
clc
call
pusha
inc
inc
or
push
pusha
or
movs
or
sbb
clc
ret
fstp
nop
cld
push
push
call
push
or
cmp
cld
in
iret
data16
jp
mov
call
mov
je
and
cld
call
adc
lds
or
mov
push
mov
mov
add
sub
in
into
scas
push
push
call
sub
sahf
inc
and
xchg
cld
(bad)
cmp
mov
call
sub
fwait
cmp
and
xor
push
inc
movs
sub
inc
jmp
cmp
jne
jg
fild
add
mov
jmp
add
or
push
ins
jne
test
je
inc
cmp
je
push
push
call
aaa
push
push
call
mov
adc
and
add
pop
push
lock
dec
enter
dec
jne
xchg
and
mov
mov
lock
sbb
xchg
jmp
jge
scas
push
fwait
dec
or
je
dec
lds
xor
add
xchg
cld
call
mov
lea
leave
je
call
mov
call
adc
cmp
mov
test
jno
mov
xor
mov
iret
jbe
(bad)
push
call
cmps
mov
or
or
dec
icebp
xor
push
call
pop
ins
jmp
out
ds
je
push
mov
mov
clc
mov
cmps
retf
mov
lea
push
je
(bad)
mov
addr16
push
clc
push
push
scas
call
and
cmp
out
push
inc
sub
adc
xor
loopne
or
hlt
mov
pop
inc
lods
push
cli
leave
adc
push
jge
call
cwde
mov
clc
icebp
mov
jecxz
les
adc
ins
sar
push
push
and
adc
fidiv
inc
call
cld
push
push
push
(bad)
dec
cli
test
jl
ds
std
arpl
push
dec
(bad)
call
cmp
and
or
je
dec
push
push
adc
cmp
ret
hlt
push
call
push
call
add
scas
sub
in
movs
mov
out
dec
add
lea
add
or
(bad)
inc
xor
sub
outs
push
mov
clc
cmp
mov
mov
(bad)
arpl
je
das
pusha
hlt
(bad)
fmul
or
lea
bound
push
mov
and
sub
call
ret
popa
or
dec
movs
sub
enter
xchg
xor
sub
sub
hlt
call
lock
lahf
add
shr
jne
std
ror
adc
(bad)
je
js
sub
pop
or
jmp
cli
inc
cld
jl
jmp
cmp
je
push
lea
call
dec
xchg
(bad)
imul
or
push
add
mov
and
shl
cmp
jae
iret
loopne
movzx
xor
add
shr
fwait
or
pushf
add
ins
mov
mov
inc
push
retf
xchg
mov
push
sub
mov
push
ins
loopne
push
xor
ret
or
cmp
clc
call
ret
jb
loopne
mov
pusha
dec
push
cdq
sbb
pop
push
xor
and
mov
xchg
call
inc
dec
daa
int3
je
or
stos
and
fcomp
or
add
add
pop
jg
xor
das
push
jmp
rcl
xor
push
mov
mov
call
sub
mov
hlt
push
jg
sar
jge
call
mov
and
push
outs
jmp
enter
cmc
(bad)
cmp
je
push
adc
mov
fldcw
add
mov
sbb
add
fidivr
sub
mov
into
pop
jmp
push
call
pop
cmc
(bad)
dec
inc
sub
es
push
nop
retf
aaa
ins
sar
push
mov
and
cmp
add
mov
call
fidiv
cmp
sub
inc
mov
test
push
shl
pop
pmaxsw
xlat
lea
fadd
and
jp
adc
xchg
or
add
bound
xchg
adc
call
xor
ins
pop
cmp
sub
mov
push
call
(bad)
out
ss
stos
(bad)
dec
dec
or
popa
jmp
dec
mov
icebp
hlt
retf
call
das
add
jmp
or
inc
test
mov
stc
loopne
(bad)
push
in
cwde
std
stc
push
jg
mov
cld
call
data16
loopne
adc
rol
inc
push
scas
push
or
cmp
clc
push
push
call
mov
jmp
or
push
cmp
and
enter
scas
mov
in
out
dec
adc
stos
jg
call
loopne
(bad)
in
dec
clc
push
mov
sti
mov
dec
stos
loope
clc
mov
add
sub
icebp
xor
ds
push
xlat
xor
mov
jno
js
mov
call
xchg
add
nop
sub
or
inc
rol
enter
jmp
and
jp
xor
cli
mov
call
jb
add
(bad)
push
mov
scas
ficom
call
jmp
push
mov
sbb
lock
push
adc
or
ja
and
or
pop
sar
push
push
or
jne
pop
xor
and
sbb
call
call
loop
push
mov
add
pop
mov
adc
nop
xchg
dec
inc
inc
(bad)
xchg
xor
inc
mov
xor
movs
das
xor
icebp
(bad)
pop
mov
adc
pop
call
pop
pop
out
add
mov
adc
imul
jge
sub
fsub
into
mov
or
in
and
in
mov
call
pop
outs
push
push
call
mov
jge
mov
jmp
jecxz
jmp
cmp
push
jne
rol
int3
dec
or
sub
sub
mov
dec
in
push
push
cmp
push
ins
cmp
cmps
jmp
dec
popa
mov
mov
retf
push
sbb
sbb
mov
push
mov
pop
call
mov
add
jb
movzx
mov
push
imul
call
inc
mov
(bad)
fild
call
pop
xor
push
in
push
push
call
ja
cmp
ret
add
inc
out
adc
add
(bad)
and
add
stos
int3
jge
fcomp
shr
xor
adc
not
and
pop
mov
pusha
mov
and
ret
clc
fsqrt
das
ds
ins
clc
jmp
scas
add
add
test
and
inc
push
push
lea
mov
and
cmp
jns
pop
std
(bad)
and
mov
pop
xor
call
jns
jle
js
jl
lea
dec
loop
pop
jne
lea
pop
(bad)
sub
rol
xlat
dec
jle
shr
push
pusha
js
add
push
arpl
and
and
clc
cli
sbb
xor
add
push
call
(bad)
or
xchg
add
ins
mov
inc
and
add
mov
inc
retf
call
dec
or
ret
push
xchg
std
dec
add
jge
idiv
mov
fwait
jb
or
or
outs
test
jbe
mov
ja
mov
mov
inc
cmp
lea
jne
mov
push
mov
cmp
push
pop
or
ss
or
dec
mov
call
or
ret
jne
call
jae
add
or
push
call
inc
inc
cld
(bad)
jl
dec
clc
mov
idiv
(bad)
cmp
je
mov
add
mov
jmp
js
pop
lds
loopne
dec
retf
iret
mov
pop
cmp
cmp
push
add
inc
shufps
mov
or
push
mov
add
push
mov
jne
push
adc
mov
mov
cmps
call
add
fidivr
sbb
je
mov
int3
aad
jge
mov
push
push
call
sub
cwde
cmp
stos
outs
mov
pop
pop
(bad)
jmp
and
call
xor
mov
mov
mov
cmp
add
mov
mov
ret
mov
sub
shl
cmp
aas
test
or
cmp
add
pop
adc
push
mov
sub
push
jg
call
push
push
adc
and
fisttp
test
call
cmps
or
add
sbb
les
add
mov
push
das
ds
mov
jge
cmp
or
call
sldt
call
je
add
jg
retf
enter
inc
mov
lock
shl
inc
inc
mov
add
add
mov
rol
fadd
cmp
mov
out
mov
mov
adc
bound
mov
loop
mov
daa
pop
scas
mov
push
jmp
fucomp
pop
fdivr
jmp
test
push
std
(bad)
inc
xor
pop
adc
push
push
into
imul
loopne
cli
shl
out
jge
lea
jne
jno
pop
and
cmp
jne
inc
test
pop
(bad)
call
pusha
push
in
xchg
pop
retf
jl
jg
jmp
sub
xor
mov
push
es
test
and
call
inc
jns
jmp
push
jbe
ja
test
ja
mov
add
mov
mov
out
(bad)
call
inc
or
out
aam
call
or
clc
jg
dec
fld
into
mov
call
jne
or
call
or
push
or
mov
cld
push
push
call
push
adc
inc
mov
add
ror
push
push
xor
cmp
je
or
xchg
adc
mov
cmp
and
frstor
(bad)
(bad)
jmp
pop
jne
mov
cmp
je
mov
push
call
jmp
and
es
push
call
stos
loop
add
aaa
in
(bad)
outs
xor
push
lea
lea
push
mov
icebp
xor
ins
js
pop
add
(bad)
arpl
push
adc
fdivr
mov
jge
xor
xor
push
lea
rep
es
call
stos
mov
xor
jge
test
je
push
call
push
aam
lock
and
add
(bad)
xor
adc
aaa
cwde
push
call
push
call
mov
ja
scas
dec
pop
pop
fldcw
cmp
or
(bad)
jg
push
jge
imul
jne
mov
cmp
cld
mov
cmp
jne
or
dec
shl
pop
pop
test
dec
push
jmp
cmp
and
xor
jmp
push
out
fist
stos
call
jne
mov
xor
cmp
and
cmps
(bad)
jmp
or
cmc
jmp
mov
movs
test
mov
or
stos
pop
pop
jmp
jb
data16
add
js
(bad)
(bad)
inc
add
push
push
push
push
add
call
xor
fwait
icebp
xor
jmp
push
add
push
ja
(bad)
and
mov
out
fild
adc
jo
outs
pop
je
out
dec
call
ins
jne
pop
pop
inc
call
sar
jne
dec
push
dec
inc
shr
inc
jmp
inc
mov
add
dec
pop
push
sbb
or
adc
jle
pop
jmp
jle
push
mov
call
adc
push
call
and
pushw
loope
mov
scas
cmp
and
mov
cmp
or
mov
mov
out
fidivr
jmp
or
add
push
or
push
or
dec
dec
or
mov
or
ret
cmp
(bad)
sbb
(bad)
mov
and
jne
xor
mov
adc
jmp
inc
adc
mov
arpl
or
push
add
outs
xchg
cld
std
cld
hlt
and
aaa
lock
sub
cmp
and
and
ror
ins
push
sbb
sbb
je
jl
sbb
sbb
sub
mov
mov
in
push
sbb
sbb
mov
inc
push
fld
stc
lea
add
mov
mov
ffreep
mov
inc
add
adc
fstp
and
cmp
jne
lea
call
push
cmp
pop
mov
ja
or
mov
mov
add
jo
jo
push
mov
cwde
dec
xor
inc
cmp
jne
in
mov
jne
mov
or
jne
mov
cmp
sbb
jbe
mov
dec
jne
mov
add
pop
lods
push
push
push
inc
push
adc
mov
outs
mov
jmp
call
mov
je
push
rol
jg
(bad)
jge
inc
js
jo
call
ja
pop
jmp
mov
lock
in
call
shr
cmp
std
(bad)
aas
div
mov
add
cmp
cmp
jne
mov
sti
pop
mov
enter
sbb
cmp
jg
je
sub
je
dec
je
dec
je
dec
jne
mov
rcr
mov
sti
ja
aas
sub
xor
je
mov
adc
je
mov
xor
mov
pushf
dec
shl
retf
jb
les
sti
dec
shl
pop
jle
cmps
mov
push
jecxz
cmp
push
movlps
mov
and
and
fdivp
push
add
ror
jp
jge
call
call
push
xlat
jg
lock
call
add
jne
out
mov
push
push
push
repz
mov
xlat
push
mov
adc
jl
inc
pop
add
inc
mov
jge
add
js
mov
call
xor
jmp
mov
mov
loopne
ficomp
push
push
lahf
and
push
push
mov
daa
pop
or
pop
emms
adc
xor
inc
mov
push
mov
or
inc
push
mov
call
call
fadd
test
sub
jne
pop
push
call
ret
push
push
call
mov
push
and
mov
lea
or
es
pop
dec
test
mov
dec
not
psubsb
push
lea
pop
movs
pop
sub
mov
not
and
leave
outs
das
mov
xor
dec
daa
or
lock
div
inc
into
je
or
jl
popf
jmp
cld
(bad)
jmp
or
rol
push
push
out
jmp
les
mov
jge
push
sbb
pop
retf
and
xor
push
mov
out
inc
push
push
mov
fstp
push
sub
sbb
sbb
add
xlat
mov
push
add
sbb
push
adc
fld1
and
fcos
cld
(bad)
call
push
push
jno
outs
add
push
lahf
or
push
push
or
push
pop
neg
add
jne
mov
movzx
push
push
jg
iret
dec
pop
pop
leave
ret
push
push
push
call
arpl
out
test
pop
push
mov
cmp
inc
push
push
push
push
adc
mov
push
daa
or
or
call
pop
pop
mov
mov
je
ds
push
mov
ror
mov
cmp
imul
pop
pop
push
call
lds
push
push
call
es
call
or
movs
mov
xor
(bad)
jg
addr16
inc
or
gs
add
push
mov
inc
mov
fmul
adc
cld
ja
mov
mov
add
inc
sub
mov
inc
push
iret
jne
ja
adc
jle
xchg
and
ja
mov
jg
inc
aam
cld
mov
add
sar
inc
or
mov
test
jne
sbb
je
push
jmp
int3
cmps
adc
les
mov
or
fwait
or
pop
pop
cmp
jo
jno
mov
adc
mov
ja
pop
in
inc
inc
jle
std
push
mov
push
pop
push
add
mov
push
mov
outs
sbb
fidiv
(bad)
stos
cmps
out
fild
ret
mov
adc
sub
clc
mov
push
and
mov
inc
push
push
call
(bad)
call
(bad)
lock
mov
call
push
push
lea
push
call
std
or
pop
adc
xchg
aam
pop
adc
dec
fild
ja
call
adc
ror
cli
ja
jo
xor
jo
xlat
inc
dec
or
call
gs
(bad)
out
cmp
mov
inc
clc
mov
cmp
jl
ss
jmp
sbb
add
ds
inc
pop
ins
cli
xchg
cmp
push
call
mov
inc
sbb
lock
push
call
fadd
jne
mov
jmp
push
push
and
cmp
dec
sbb
jmp
clc
mov
out
rol
les
push
aad
nop
out
jg
cld
stos
or
je
mov
je
jmp
mul
and
pop
sar
adc
stos
jmp
in
jl
mov
push
push
ss
dec
jne
adc
mov
mov
sub
or
xchg
sti
call
or
push
xor
adc
lock
jne
push
push
push
push
call
mov
test
mov
je
push
add
jne
repz
push
cdq
sbb
mov
jecxz
mov
call
(bad)
or
and
or
sbb
or
dec
test
je
jbe
test
mov
inc
lock
ja
out
call
int3
mov
mov
inc
in
mov
dec
call
inc
shr
inc
enter
jnp
or
outs
test
or
test
add
test
je
cwde
mov
mov
mov
inc
add
dec
jle
lea
cmp
jle
sub
lds
push
mov
(bad)
jmp
cdq
(bad)
jg
pop
out
push
pop
push
mov
push
adc
stc
add
shr
(bad)
(bad)
(bad)
clc
add
sub
cmp
jl
mov
cmp
jg
push
pop
mov
sub
push
clc
jg
call
add
rcl
push
or
fdiv
cmp
mov
jg
call
sbb
test
mov
leave
lock
push
shl
push
dec
jbe
jne
sbb
sub
sub
sar
jne
xchg
loopne
inc
fmul
sub
fsubr
add
mov
add
add
inc
adc
and
mov
mov
adc
jbe
push
mov
xor
adc
xchg
or
inc
cld
push
call
call
je
out
mov
or
jne
or
pop
js
mov
test
fwait
sbb
jge
clc
adc
gs
push
call
(bad)
sub
call
jne
(bad)
adc
jecxz
or
push
(bad)
out
(bad)
fucomp
fld
pop
xor
test
sete
add
dec
and
add
mov
in
cmp
inc
adc
in
push
call
sti
and
jnp
push
or
call
pusha
(bad)
add
sub
je
call
movs
ja
xchg
mov
dec
push
add
enter
pop
mov
xor
pop
push
push
mov
jb
inc
push
test
adc
ds
sahf
loopne
jmp
pop
call
(bad)
pop
xlat
push
call
push
call
mov
popa
ret
rcl
imul
leave
add
or
push
lods
adc
or
mov
call
pop
xchg
or
push
push
push
je
sub
inc
and
cmp
jne
mov
xor
test
je
push
call
popf
loope
ins
push
push
adc
pmaxsw
call
pop
pop
pop
jbe
out
inc
add
ins
imul
sahf
pop
pop
or
rcl
call
icebp
fld
or
cmp
xor
mov
push
call
retf
adc
ss
ss
dec
mov
add
mov
pusha
lods
jg
xor
push
call
or
cdq
mov
xor
sub
lods
imul
das
xor
fidiv
shr
pop
pop
test
or
adc
mov
sub
adc
jb
ds
mov
aaa
adc
dec
sar
les
or
test
push
call
cmp
push
push
mov
push
mov
dec
lock
push
shl
pop
into
loopne
sti
sub
lea
stc
mov
jbe
mov
and
mov
mov
inc
repnz
je
call
adc
push
inc
lea
call
inc
sbb
es
lock
clc
cld
fistp
in
push
sub
mov
push
push
push
xchg
fild
mov
mov
arpl
xor
call
dec
cld
ror
and
popa
jge
call
icebp
outs
jo
call
jne
push
sbb
adc
dec
sub
out
cmp
call
fwait
add
mov
jmp
push
addr16
or
sub
(bad)
cs
push
lea
lea
push
call
cli
test
dec
hlt
push
call
daa
repz
mov
or
nop
into
push
call
in
call
call
xlat
lahf
test
call
je
fdiv
dec
jo
mov
mov
(bad)
pop
popa
fsubr
fs
call
sbb
enter
jl
or
mov
push
call
fmul
(bad)
sbb
cmp
fsubr
jge
call
mov
es
push
add
sbb
or
es
jmp
fdiv
mov
ss
(bad)
pop
out
fdivp
call
lock
adc
adc
cld
push
call
add
push
jns
call
and
fwait
or
lods
adc
push
adc
inc
pop
jle
mov
xor
push
retf
adc
jge
cmp
dec
cmp
sub
call
out
outs
stos
fwait
jne
mov
call
mulps
or
jecxz
(bad)
sbb
call
fcomip
add
sub
mov
fsub
das
cmc
lods
call
mov
pop
pop
fld
aad
shl
add
clc
dec
ja
call
aas
push
push
dec
jmp
mov
pop
sahf
mov
call
cmps
dec
daa
call
out
or
mov
mov
inc
call
pusha
xor
call
jne
call
outs
add
sub
sub
call
gs
call
mov
sbb
(bad)
sbb
f2xm1
push
call
xor
push
fldenv
xchg
lahf
sub
sub
call
sub
sti
dec
out
sub
je
jmp
pop
lock
test
jle
and
add
add
cmp
je
inc
cmp
pop
xlat
or
cmp
jbe
rcl
mov
push
pop
mov
ds
push
mov
push
inc
sbb
adc
push
or
dec
mov
mov
xor
push
mov
not
jo
call
xor
add
xor
inc
clc
push
fmul
pop
and
daa
jge
mov
aaa
mov
mov
push
jne
sub
fnstenv
add
adc
push
adc
and
jmp
mov
call
pushf
and
add
cmp
les
or
rol
mov
fist
adc
loopne
cdq
push
pop
idiv
loopne
out
ss
push
lock
adc
stc
mov
jmp
xor
stc
shr
inc
push
pop
bound
mov
sub
das
pop
cmp
jno
dec
cld
jl
push
push
or
xor
xchg
int
cmp
in
ja
add
ret
push
xchg
in
inc
inc
dec
jne
adc
sbb
jo
adc
out
jmp
mov
rcl
add
push
sbb
sbb
push
jecxz
jecxz
or
dec
adc
add
bound
and
jne
pusha
mov
lahf
push
inc
call
inc
in
inc
fcomp
xor
push
and
addr16
(bad)
push
enter
sahf
adc
shl
xchg
add
sbb
xor
(bad)
es
sub
call
xor
xor
adc
push
push
push
push
push
mov
sbb
add
fimul
test
xchg
call
(bad)
out
jle
or
push
call
add
inc
adc
mov
call
dec
scas
mov
mov
call
add
iret
xor
push
jmp
ins
in
imul
jmp
sti
popa
inc
data16
mov
push
xor
fsubr
jl
test
jmp
and
sbb
inc
and
or
push
push
cdq
dec
jbe
std
mov
or
and
call
jnp
mov
dec
jmp
inc
push
push
push
push
not
push
push
mov
cld
add
xor
pusha
pop
pop
pop
dec
sub
xchg
retf
jecxz
nop
hlt
out
push
stos
stos
pop
pop
cmp
in
hlt
fstp
cli
add
push
call
mov
(bad)
mov
call
cmps
imul
outs
pop
into
call
push
sbb
jae
scas
push
or
or
adc
jmp
add
mov
add
and
neg
mov
call
mov
fild
or
test
push
pop
lea
test
jne
lea
push
call
add
mov
mov
jmp
pop
scas
stos
sub
and
jle
push
push
call
mov
outs
adc
sbb
jmp
sub
add
mov
ror
rol
push
sbb
inc
cdq
rcl
mov
cmp
fistp
icebp
add
jne
mov
push
call
push
or
xor
mov
pop
xchg
pop
add
push
sbb
lock
enter
cmp
ja
add
cmp
cli
loopne
push
call
icebp
push
call
ret
and
adc
clc
dec
cmp
ret
cmp
mov
jg
pop
js
es
fild
pop
js
push
xor
je
push
mov
cmps
mov
loopne
fsub
mov
and
dec
call
(bad)
push
jae
mov
xor
inc
jmp
mov
mov
lea
and
out
repnz
call
sbb
cmps
outs
clc
cmp
jle
push
call
add
pop
jmp
(bad)
adc
ret
add
(bad)
or
loopne
mov
mov
or
ret
fdivr
sbb
mov
lods
ins
retf
push
pop
mov
pop
lea
and
inc
aad
lds
(bad)
push
mov
mov
call
cmps
xor
(bad)
nop
mov
in
neg
out
(bad)
mov
ret
or
lock
adc
lahf
inc
cmp
pop
lock
jne
call
call
inc
iret
je
jae
fstp
inc
or
pop
and
push
pop
popa
clc
fist
lahf
ret
cmp
pop
pop
jg
inc
ret
sub
xor
out
and
add
icebp
jne
mov
cmp
jmp
fmul
int3
add
add
ja
mov
lea
jne
push
pop
lds
into
scas
in
(bad)
cmc
scas
test
call
call
jne
cmps
or
call
jno
arpl
loopne
sub
(bad)
dec
lock
call
sbb
aam
call
xor
cld
push
in
or
call
pop
add
cmp
add
pop
adc
pop
sbb
cmp
mov
sti
out
lock
loopne
pop
pop
enter
call
dec
add
jmp
mov
mov
scas
mov
rol
shl
jmp
enter
adc
dec
push
call
(bad)
cmp
call
add
(bad)
mov
enter
aam
in
rcl
in
call
sbb
or
call
cmp
cld
jg
stos
aam
aaa
lea
push
call
call
std
or
mov
xor
call
aaa
pop
cmps
adc
call
cld
call
ja
clc
call
adc
sub
call
fidivr
dec
sub
and
fistp
(bad)
and
and
push
mul
xor
inc
cld
cmp
pop
jmp
mov
mov
cld
dec
cmp
jl
add
(bad)
sbb
call
fld
and
jnp
dec
jns
push
das
push
push
cli
(bad)
fistp
sbb
adc
sbb
in
lea
cmp
jle
push
in
shr
dec
sar
add
(bad)
call
push
jne
test
and
loope
je
jecxz
test
dec
jle
push
mov
adc
adc
jne
mov
or
in
jne
mov
aam
xchg
mov
sbb
fisubr
pop
aas
mov
call
mov
push
and
adc
aaa
ror
adc
push
fs
popa
test
call
ret
ins
mov
pop
mov
or
out
sbb
or
enter
ins
sbb
add
mov
out
ss
or
push
xchg
xor
jmp
mov
xchg
cmp
adc
xchg
or
loop
sub
pop
push
lea
push
call
loop
add
cmp
nop
fiadd
in
jbe
dec
mov
xor
(bad)
loopne
adc
inc
or
int
outs
xchg
adc
hlt
mov
icebp
add
inc
aas
mov
rcl
mov
fist
sahf
call
add
xchg
cdq
xor
ja
(bad)
cwde
or
mov
adc
aaa
adc
dec
in
jmp
ja
jbe
call
dec
les
jbe
(bad)
out
(bad)
pop
cmp
jae
call
mov
call
pop
pop
mov
mov
or
xor
mov
cmp
pop
ret
ja
je
mov
push
popf
xor
mov
sbb
jmp
mov
and
out
dec
scas
aam
jne
cs
cmp
mov
or
jo
ja
out
(bad)
jne
push
call
shr
push
(bad)
sbb
cmp
add
call
ja
cmp
popa
or
jo
repnz
clc
pop
ss
mov
jo
mov
or
and
aad
mov
sti
out
jbe
dec
mov
xor
inc
jge
mov
div
mov
cmp
mov
push
or
sub
xchg
loope
ror
mov
je
sysret
sbb
or
mov
and
icebp
cwde
dec
add
and
and
(bad)
cld
sbb
pop
adc
call
sbb
lock
call
cmc
sar
loopne
mov
movs
mov
inc
cmp
push
jb
call
jnp
jle
out
call
push
call
pop
dec
dec
outs
je
or
mov
pop
push
cmp
aam
icebp
sub
cdq
xor
cmp
jb
cmc
mov
push
xor
(bad)
mov
add
inc
(bad)
mov
jb
loope
jne
test
inc
or
add
add
ficomp
xor
mov
sbb
(bad)
cli
sbb
xchg
call
cli
call
mov
or
push
lea
push
push
repnz
lods
adc
push
add
ror
dec
call
jp
inc
aam
out
fstp
lea
aaa
push
mov
mov
(bad)
dec
lea
push
push
push
or
outs
test
cmp
push
mov
test
push
data16
call
in
into
stc
(bad)
jmp
je
mov
popf
jmp
sbb
into
push
test
test
mov
ret
stos
adc
je
lea
cmps
push
push
mov
test
je
ss
mov
pcmpeqb
push
lea
ja
sahf
adc
call
call
ja
push
call
xor
add
xor
arpl
mov
mov
pop
push
call
add
inc
xor
and
mov
fcom
add
pop
sub
and
(bad)
inc
shr
jb
test
bound
fdiv
pusha
ret
lahf
or
(bad)
out
outs
and
add
call
fld
mov
call
push
rol
jae
div
cmp
xchg
popa
or
lds
mov
(bad)
mov
mov
call
xor
lds
test
inc
pop
pop
or
lahf
daa
idiv
push
call
out
xor
inc
or
cmp
push
je
sbb
xchg
jecxz
fcomp
scas
mov
mov
into
inc
mov
aam
call
jl
aas
lock
dec
lea
call
cmp
adc
pop
dec
add
add
mov
mov
mov
or
jg
mov
std
in
push
mov
mov
mov
test
add
add
mov
xchg
fwait
sbb
je
sbb
push
pop
mov
hlt
ins
fadd
faddp
fsub
push
mov
call
aaa
hlt
inc
sbb
and
xchg
mov
push
dec
cmc
sbb
pop
push
add
push
out
adc
int3
xchg
sub
test
shl
jmp
call
bound
fsub
mov
ja
out
ficom
or
xchg
add
dec
inc
cmp
and
call
inc
push
sti
call
call
lds
out
jmp
mov
sbb
aas
data16
or
add
add
xor
(bad)
(bad)
jg
sbb
or
push
lea
call
xor
mov
or
or
or
mov
cmp
jne
lea
jb
mov
leave
adc
daa
jbe
inc
sub
popa
mov
add
xchg
or
lea
mov
dec
pop
jne
std
std
fadd
mov
sahf
xchg
scas
adc
call
fadd
pop
pop
out
(bad)
mov
mov
or
add
dec
jmp
cmp
je
mov
(bad)
(bad)
cmp
je
cmp
je
cmp
je
inc
inc
mov
cmp
jne
jmp
push
std
lea
call
push
lea
call
ja
mov
call
sbb
sub
stos
and
cmp
test
mov
div
add
sbb
push
push
mov
sub
arpl
sbb
popf
or
mov
clc
or
retf
or
retf
call
mov
jbe
mov
call
inc
jne
push
adc
jg
push
pop
push
push
call
add
es
push
call
repz
adc
hlt
(bad)
call
push
or
popa
mov
js
je
stc
mov
mov
xor
neg
jb
popf
daa
sbb
or
pop
call
xor
inc
dec
inc
or
ja
enter
or
sub
jmp
cmp
inc
je
mov
add
add
or
popa
push
test
mov
adc
(bad)
sbb
xor
add
fsubr
sbb
cmc
pop
mov
stos
pop
call
je
push
mov
test
mov
clc
mov
add
dec
icebp
loopne
xor
cwde
adc
sbb
mov
lea
lea
push
call
push
cli
mov
push
call
adc
or
add
adc
call
clc
ja
and
test
sbb
call
mov
call
lea
out
inc
push
and
(bad)
cmp
mov
test
out
je
nop
or
pop
outs
rcl
mov
cmp
mov
sub
or
sahf
call
inc
pop
add
mov
jmp
push
or
push
push
xor
call
ds
je
add
inc
adc
adc
imul
mov
call
mov
pop
(bad)
stc
adc
out
jle
xor
call
xchg
jne
jmp
sahf
in
lahf
or
cmp
(bad)
mov
mov
call
ficom
push
inc
xor
sbb
lock
jl
call
test
out
loope
gs
call
adc
fmul
inc
push
je
test
adc
cmp
adc
loop
jg
jo
call
shl
add
cld
mov
call
call
rol
add
xor
aas
les
ror
call
nop
(bad)
in
call
hlt
inc
dec
pop
stc
fs
lock
jne
cmp
es
fld
jg
loope
aam
push
lea
push
call
push
or
outs
lock
aaa
adc
icebp
mov
call
sbb
xor
test
cs
xor
xorps
xchg
test
(bad)
(bad)
cmp
jne
call
cmp
jne
mov
push
push
xor
in
push
jmp
cld
mov
jmp
mov
std
and
add
adc
adc
or
jg
sbb
mov
cmp
je
xlat
mov
call
lea
sahf
push
call
in
pop
sub
sub
ret
in
xchg
adc
jnp
idiv
js
adc
push
call
leave
pop
add
sbb
in
call
into
inc
mov
bound
les
nop
xchg
push
aam
fisub
or
das
push
or
fist
fiadd
jmp
mov
movs
lea
or
dec
push
(bad)
cmp
popf
cmps
push
dec
adc
js
dec
or
js
jl
iret
add
loopne
push
sbb
in
loope
cli
cmp
leave
sbb
js
push
ror
inc
push
push
sub
and
rol
jmp
je
pop
out
mov
fadd
je
pop
or
and
lods
fsubr
add
pop
inc
iret
call
mov
out
mov
(bad)
cmp
xor
or
cld
daa
sahf
cmps
jns
idiv
sbb
test
hlt
je
push
push
push
enter
fimul
jne
mov
pop
(bad)
push
aas
stc
push
call
mov
inc
cld
fild
fmul
(bad)
(bad)
inc
sbb
mov
movzx
sub
cmp
je
mov
fild
neg
sbb
fstp
adc
or
or
fstp
call
cmp
mov
sbb
add
dec
or
cs
sub
addr16
sub
push
or
cmp
add
cmp
fstp
cmp
push
jl
jnp
repnz
add
dec
fld1
push
adc
repnz
fld
imul
mov
inc
add
pop
clc
xchg
out
clc
sub
data16
(bad)
in
cmp
adc
mov
inc
jmp
out
loopne
ffree
fldz
inc
daa
mov
dec
jle
iret
cdq
mov
pop
lock
(bad)
(bad)
jg
inc
call
pop
pop
movzx
cmp
je
sub
mov
into
std
(bad)
jns
add
cwde
fmul
fadd
jmp
das
out
jmp
push
sub
or
faddp
fcom
jmp
jg
add
fld
fsub
fstp
fld
fmul
sahf
lock
sbb
jmp
in
ror
rol
scas
dec
clc
or
sub
sbb
loop
popf
add
mov
fild
fmul
(bad)
jg
pop
std
(bad)
inc
jne
cmp
out
out
jg
fld
push
xlat
call
lock
mov
or
stos
fsub
loopne
push
pop
clc
xor
jbe
inc
or
sti
fs
pop
mov
rol
fst
fcomp
adc
icebp
(bad)
inc
cmp
fld
push
sbb
jg
push
add
cmp
fsubr
aam
or
jmp
fimul
icebp
push
lea
fucomi
fcmovbe
add
test
jne
jmp
push
mov
mov
sahf
or
xchg
add
mov
or
mov
xchg
cmp
test
push
call
mov
or
mov
fwait
iret
call
cld
(bad)
(bad)
(bad)
jl
leave
je
mov
add
or
add
ja
push
cld
iret
call
adc
push
mov
jl
pop
mov
adc
push
mov
xor
test
mov
hlt
clc
xchg
ss
or
xchg
push
call
clc
out
out
inc
push
setne
lea
mov
push
sti
idiv
mov
cmp
imul
lea
push
hlt
mov
jmp
test
test
je
push
inc
(bad)
outs
mov
mov
adc
mov
cmp
seta
int3
fs
pusha
pop
in
cld
and
cli
mov
xor
neg
test
outs
jecxz
xchg
je
mov
or
inc
in
icebp
sbb
outs
dec
add
push
call
call
pop
je
cdq
cld
fild
mov
call
push
mov
call
push
neg
jbe
cmp
dec
push
call
cdq
cmp
mov
mov
daa
xlat
dec
mov
call
test
cs
cpuid
cli
cmp
mov
(bad)
adc
cmp
jne
mov
lock
fisttp
add
mov
mov
add
add
push
push
push
inc
mov
test
jbe
popa
jne
cmp
add
mov
call
xor
rcr
mov
and
pop
jg
cmp
test
adc
jo
lods
and
inc
fmul
jp
cmp
sbb
(bad)
test
or
clc
push
call
ret
mov
pop
cmp
dec
fmul
add
push
stos
jl
mov
mov
sub
std
jge
fild
mov
(bad)
jge
fadd
fmul
es
(bad)
ds
mov
jmp
jle
jle
pop
ret
jne
dec
and
push
dec
clc
sbb
jl
jne
call
dec
fld
pop
out
jl
into
or
sub
ja
mov
call
or
jp
and
call
ss
loope
adc
pop
cmps
mov
sub
(bad)
call
inc
add
add
add
nop
and
jmp
mov
dec
jle
scas
fcomi
inc
inc
je
shl
hlt
push
xchg
push
call
push
call
call
pop
push
pushf
mov
mov
mov
je
mov
dec
popa
cmp
je
les
push
lds
lea
cmp
mul
int
(bad)
in
sbb
sub
(bad)
push
push
mov
mov
inc
push
mov
retf
cmp
je
push
std
dec
push
lea
call
cmp
adc
arpl
cmp
jle
push
and
inc
mov
dec
xchg
cmp
stc
mov
add
jo
jmp
push
push
or
push
sti
sbb
pop
std
(bad)
jmp
sbb
or
sti
outs
jmp
mov
cmp
je
pop
mov
fild
inc
imul
xor
pop
add
push
push
inc
cmc
(bad)
cmps
mov
call
jmp
push
xchg
adc
push
movs
mov
test
sti
sbb
xchg
call
dec
fmul
cli
jl
stc
ret
cmc
pop
shl
and
lods
or
push
push
cld
cmp
or
jne
call
lds
dec
and
in
sbb
inc
and
sbb
pop
sub
ret
rcl
jmp
mov
sub
add
rol
add
push
outs
mov
adc
rcr
(bad)
mov
inc
inc
and
ret
push
pop
adc
ss
push
mov
mov
mov
cmc
cmp
xor
dec
cmp
lock
test
inc
cmp
adc
jg
jb
or
or
test
push
xor
or
call
fcomip
stos
gs
call
push
or
cld
idiv
cmp
jle
hlt
call
jmp
(bad)
pop
ja
add
data16
cmp
popa
push
cmp
inc
jecxz
jg
stos
dec
xchg
pop
adc
push
mov
call
hlt
jmp
dec
and
jb
es
sti
std
pop
in
mov
movs
sub
or
or
mov
cmp
sub
ss
jmp
xor
es
stos
add
add
or
inc
mov
and
push
fimul
nop
dec
sbb
xchg
mov
sub
fcomp
push
adc
jge
add
fiadd
push
(bad)
rol
jbe
dec
bnd
ja
jmp
mul
and
inc
arpl
call
jg
push
call
out
mov
rol
sbb
mov
ins
das
cmp
or
out
sbb
ficomp
sti
push
or
dec
inc
mov
call
add
call
xor
in
sbb
mul
or
call
add
shr
cli
cld
xor
jmp
dec
xchg
test
add
and
fld
push
call
call
push
ja
add
ja
lock
je
add
xor
lock
pop
mul
call
push
call
lock
push
lods
dec
push
dec
mov
pusha
adc
hlt
sub
fild
mov
jno
add
ja
xchg
inc
in
cmp
ss
imul
fadd
mov
push
(bad)
divps
std
or
inc
aas
push
call
push
sbb
call
jge
mov
push
sbb
jo
ins
mov
bswap
jo
dec
pop
add
mov
xor
pop
sbb
bswap
ret
pop
xlat
jno
ins
outs
push
adc
pusha
pop
pop
adc
sbb
or
mov
add
(bad)
sti
mov
clc
sub
sub
sub
out
or
or
cmp
sbb
mov
fimul
pop
add
cmp
add
fnstenv
xor
inc
jp
push
retf
mov
in
add
mov
pushf
stos
call
cmp
adc
and
mov
mov
push
mov
sbb
push
call
outs
fidiv
jmp
dec
push
push
jle
call
pop
je
or
add
or
retf
add
inc
bound
add
test
mov
stos
cmp
jg
sub
or
lock
rol
pop
and
call
add
je
fdivr
rcr
add
inc
aad
mov
ret
std
jb
in
loope
ror
xor
push
mov
call
retf
adc
and
(bad)
sbb
push
call
jg
jmp
push
adc
push
jne
inc
movntps
mov
jbe
add
imul
mov
sar
arpl
jle
cmp
jne
test
je
loopne
loop
jns
call
xor
mov
cli
(bad)
jmp
push
call
inc
cmp
jl
test
je
cmp
je
push
popa
ret
xor
test
push
or
sbb
lock
aaa
in
call
call
jmp
call
call
and
call
aas
jl
retf
neg
adc
push
push
js
push
call
call
pop
rcr
jmp
pop
je
sub
push
call
mov
push
cmp
or
jg
mov
and
shr
and
jmp
hlt
call
je
pop
ficom
jecxz
stos
sbb
pop
inc
fbstp
jl
mov
and
fist
cmp
push
jne
data16
push
inc
test
repnz
sub
outs
jo
jmp
pop
push
pop
cmp
je
cmp
je
push
or
mov
jg
mov
sub
or
or
pop
jl
out
sbb
rcl
and
pop
adc
rol
dec
adc
leave
mov
fist
call
mov
call
sbb
sbb
mov
add
call
hlt
stos
call
call
sub
call
fistp
cmp
and
inc
or
popa
loopne
ret
push
push
xor
cmp
pop
je
push
push
inc
into
hlt
push
jb
inc
or
adc
inc
sub
jge
add
pusha
push
aaa
arpl
sbb
inc
fs
into
mov
shl
push
push
call
fsubrp
icebp
imul
jmp
cs
add
call
call
setne
xchg
xor
jbe
sbb
push
hlt
mov
push
cmp
add
or
(bad)
clc
call
test
inc
inc
pop
stos
(bad)
jecxz
call
call
inc
fbstp
jo
push
push
push
jnp
call
iret
dec
cld
and
call
sbb
jle
push
sbb
add
push
jmp
add
call
out
mov
push
(bad)
popa
hlt
or
fsubr
mov
mov
jmp
lea
xchg
adc
sub
cdq
jle
aas
lea
and
cdq
cmp
adc
and
jmp
adc
cmp
jne
mov
pop
ss
es
pop
lds
into
mov
jmp
push
les
mov
rol
or
(bad)
js
test
inc
je
je
jmp
inc
js
ds
hlt
call
sbb
cmc
hlt
call
inc
lods
xchg
mov
jb
add
pop
out
sub
fwait
sbb
push
ret
addr16
loope
adc
mov
ret
mov
test
mov
and
jle
jno
in
out
mov
pop
or
and
push
call
mov
inc
pop
cmp
sbb
jb
mov
mov
mov
icebp
aaa
pop
xor
jle
in
or
dec
push
arpl
in
mov
iret
fwait
(bad)
sub
lahf
out
and
mov
add
mov
push
push
push
jecxz
add
jecxz
add
sbb
ss
mov
mov
leave
std
mov
(bad)
push
lea
push
push
push
popa
and
cli
xor
jo
sub
xor
push
push
call
or
(bad)
fbstp
test
in
jge
add
push
call
inc
pop
icebp
push
ss
xchg
mov
xchg
jb
sti
scas
push
call
or
jno
rcl
sub
xchg
cwde
cmp
sti
xchg
xchg
mov
xchg
test
or
imul
add
out
mov
jle
push
ja
mov
cmp
je
jae
call
std
stc
idiv
push
call
push
sbb
pcmpeqw
dec
fadd
adc
xor
stos
jae
push
ds
in
call
sar
jb
jno
sub
pop
xor
sub
mov
add
mov
aam
popa
cmp
punpcklbw
add
movs
xchg
sub
repz
mov
icebp
std
dec
gs
xor
repz
jecxz
popa
mov
cs
dec
repnz
call
push
cmp
mov
mov
push
mov
xor
mov
shl
cmp
mov
sbb
pop
mov
dec
call
sub
int3
pusha
call
(bad)
or
jle
push
call
je
es
ret
xor
je
call
outs
cli
pop
mov
std
call
cmp
(bad)
xlat
pop
push
and
jne
call
fwait
mov
or
fcomp
sti
mov
inc
push
cmp
ret
push
arpl
pusha
in
jle
and
aas
push
lea
call
jmp
jmp
cs
adc
xor
fwait
(bad)
jbe
xchg
push
call
push
cmp
jecxz
js
adc
push
xor
lea
pop
(bad)
test
sub
ss
mov
ret
mov
lds
xchg
adc
retf
div
call
xor
jmp
inc
mov
mov
xchg
ss
lea
push
call
lea
lea
mov
sbb
jne
sbb
call
call
test
pop
je
mov
push
es
xor
cs
sbb
jmp
movzx
fucom
(bad)
ja
and
mov
mov
jmp
in
mov
pusha
ror
or
xor
fcom
mov
inc
shl
aas
in
clc
call
lea
dec
sbb
call
mov
test
mov
mov
cld
lea
adc
add
cmp
jg
mov
inc
ret
jge
outs
clc
mov
lea
call
xchg
mov
call
push
inc
inc
enter
or
adc
iret
adc
inc
mov
ins
fcom
push
pop
es
scas
retf
inc
fistp
push
push
call
fs
call
and
cs
inc
push
call
fwait
ja
ja
in
call
in
lea
iret
call
xlat
jo
jne
fwait
inc
pop
fwait
push
dec
or
sbb
fs
mov
adc
xchg
fwait
cld
push
mov
mov
push
or
gs
jp
lahf
rol
mov
jmp
mov
test
je
ja
(bad)
cmp
xor
mov
jmp
push
cld
add
call
div
stos
mov
call
xchg
hlt
call
adc
adc
lods
jecxz
cmc
push
pop
push
adc
pop
idiv
mov
inc
cdq
mov
lods
cs
retf
(bad)
in
neg
shl
or
xchg
jmp
cdq
out
lods
dec
mov
out
in
test
mov
jb
mov
sti
pop
movs
not
cmc
cmps
and
idiv
lods
int3
cs
xor
not
sub
in
(bad)
inc
fstp
movs
mov
es
push
push
push
fmul
and
jmp
fcos
inc
not
neg
jns
dec
cmp
je
push
fstp
dec
cdq
push
idiv
(bad)
(bad)
push
mov
pop
xchg
dec
shr
inc
xchg
or
jne
mov
shl
xchg
sar
xchg
div
shl
idiv
jb
inc
inc
or
or
je
inc
jmp
pop
xchg
mov
mov
pop
sahf
outs
pop
xchg
jge
jl
mov
add
xor
mov
jmp
ret
or
push
in
mov
test
push
cmp
or
scas
je
add
cmp
add
add
push
mov
rol
push
cmp
dec
lods
je
movs
add
adc
repnz
and
add
or
mov
lock
cli
push
mov
rol
pop
icebp
cmp
je
adc
add
call
sbb
cmp
push
mov
mov
popa
xor
int3
mov
in
dec
rcl
test
pop
adc
add
leave
(bad)
fdivr
add
call
pop
jge
jmp
or
loopne
and
add
push
jp
jg
call
sqrtps
cmp
xchg
outs
add
in
dec
sbb
pop
je
mov
ror
loopne
jmp
jns
adc
jnp
add
fild
sub
xlat
or
cs
mov
push
cs
mov
call
xor
cmp
scas
jg
cmc
loope
pop
leave
mov
pop
call
add
push
cmp
xor
dec
and
cmp
je
ret
lock
xor
push
repz
test
pop
pop
jge
sbb
xor
popf
push
mov
cmps
les
push
(bad)
sbb
out
push
sub
ins
in
jo
pop
mov
sbb
cli
push
popa
jne
mov
push
ja
push
call
xor
jmp
push
pop
mov
jne
push
pop
adc
popa
arpl
scas
push
(bad)
push
xor
je
mov
adc
or
fisttp
pop
pop
sbb
fst
add
add
bound
test
pop
or
or
je
ins
add
adc
jno
aaa
pop
jae
call
and
mov
push
push
push
call
sar
out
lea
movs
add
(bad)
jmp
mov
lea
inc
icebp
pop
test
idiv
mov
test
sbb
lds
(bad)
and
push
pop
or
cmp
cmp
call
je
mov
mov
mov
cmp
or
retf
cmp
sbb
mov
push
lods
pop
ffreep
or
sub
push
call
adc
(bad)
jg
dec
push
call
adc
add
neg
mov
mov
loop
sbb
mov
mov
push
pusha
cwde
mov
sar
enter
and
and
cmp
dec
enter
add
push
and
sbb
mov
je
(bad)
icebp
ffreep
call
lea
push
mov
mov
xor
jg
mov
call
jmp
call
add
pop
pop
pop
call
std
inc
mov
and
neg
mov
mov
mov
lea
test
mov
mov
xor
inc
sub
cmp
jle
jne
cmp
jle
push
call
fisttp
mov
inc
adc
adc
ins
aam
lods
mov
adc
inc
or
xlat
xor
mov
call
add
movzx
mov
adc
xor
loopne
or
mov
sbb
push
cmp
sub
push
in
jmp
jle
mov
cdq
sub
sar
xor
jo
imul
xor
push
es
jmp
and
in
mov
push
pop
push
daa
mov
push
xor
mov
dec
(bad)
push
mov
cmp
push
jne
lea
idiv
add
inc
add
adc
adc
push
push
sti
call
mov
rcr
ja
pop
jbe
cmp
call
lea
push
call
jecxz
shr
push
call
imul
fcom
sar
call
push
call
pop
jne
sbb
dec
mov
push
mov
jl
xor
test
lea
ror
clc
sbb
lea
push
inc
or
jne
inc
jbe
icebp
pop
mov
cli
call
out
mov
jbe
jne
test
aaa
adc
call
mov
cmp
jne
adc
daa
mov
or
add
call
and
add
mov
arpl
test
sub
cmps
push
pop
les
mov
xchg
mov
mov
add
cmp
adc
dec
push
dec
popa
aad
ins
aad
mov
test
push
push
pop
lea
cld
jge
lea
rep
push
sbb
push
pop
mov
sbb
or
add
pop
adc
das
push
call
jle
mov
push
or
xor
fldenv
cmp
or
cmps
pop
add
ret
mov
sar
mov
xor
ja
jne
push
sbb
push
push
push
pop
push
jle
not
xor
and
adc
cli
jg
sti
push
call
cmp
idiv
add
adc
lock
out
xchg
push
mov
std
(bad)
(bad)
adc
cmp
or
jnp
mov
and
sbb
jle
inc
pop
add
cmp
lea
push
mov
test
(bad)
(bad)
jg
mov
mov
test
je
mov
cmp
jl
sub
adc
lea
test
push
mov
inc
or
add
pop
jl
cmp
jge
neg
paddd
push
call
stos
mov
and
add
jbe
mov
(bad)
jmp
sub
push
pop
idiv
sar
add
shl
(bad)
mov
sti
jle
mov
mov
cmp
jle
mov
xchg
sub
call
test
pop
call
(bad)
dec
mov
push
push
push
push
mov
push
clc
out
cwde
cmp
mov
call
mov
xchg
cmc
or
mov
jne
sbb
jmp
sub
fwait
jne
mov
mov
dec
inc
add
jge
ror
in
mov
xor
dec
cmc
mov
push
rol
xchg
or
in
add
or
adc
pop
clc
push
cmp
inc
aam
adc
clc
call
stc
mov
xor
cmp
mov
je
pusha
mov
test
inc
lock
mov
call
loope
push
push
cmp
sub
sbb
cld
jg
cmc
jmp
inc
sbb
inc
or
add
jne
cmp
sar
jne
pop
adc
adc
ret
jge
(bad)
jno
mov
in
(bad)
(bad)
(bad)
cmp
mov
jl
mov
mov
cmp
jl
mov
mov
mov
mov
es
mov
jg
sbb
je
pop
cmp
dec
jge
mov
mov
cmp
jge
mov
adc
jge
dec
jge
or
jg
inc
jne
fisttp
adc
idiv
(bad)
jmp
cld
neg
jmp
mov
imul
add
cmp
mov
and
out
or
adc
hlt
add
neg
and
leave
std
inc
hlt
imul
push
std
or
or
lods
or
or
neg
cmp
jge
sub
movs
cmp
(bad)
(bad)
fistp
inc
mov
mov
sar
movzx
test
jne
test
jne
add
(bad)
outs
loopne
add
jmp
mov
and
nop
sub
xor
inc
shl
test
je
cmp
ja
in
add
adc
rcl
sahf
add
dec
jne
mov
lea
lock
pop
cmp
adc
jmp
popf
dec
or
fstp
retf
push
je
pop
call
push
lds
mov
test
(bad)
rol
inc
adc
inc
adc
div
adc
inc
adc
mov
xor
mov
sub
into
or
or
test
push
sbb
push
or
mov
push
sub
push
clc
gs
and
std
push
push
push
inc
imul
sub
adc
stc
bound
xor
jnp
xchg
call
in
mov
bound
adc
xor
add
and
xor
sbb
xchg
imul
add
or
jns
adc
add
mov
and
ret
mov
add
stos
fs
mov
and
push
call
ds
mov
inc
add
inc
adc
mov
jo
mov
pop
cmps
call
xchg
add
push
aam
add
aam
clc
jne
or
stc
mov
pop
or
(bad)
aas
jnp
and
push
push
push
push
pop
je
dec
jne
cmp
call
or
ss
mov
add
(bad)
jne
mov
cmp
aaa
pop
xchg
rcr
adc
and
scas
adc
mov
push
jo
sbb
je
sub
or
xor
push
cld
idiv
pop
push
xchg
gs
push
xchg
adc
lea
xchg
aaa
fs
mov
scas
dec
mov
jmp
fstp
test
inc
inc
cmp
je
lea
out
and
jge
add
inc
cmp
and
add
cmp
pop
pop
pop
je
sub
cmp
call
jmp
mov
scas
aaa
cmp
push
push
jne
mov
pop
add
iret
add
dec
inc
(bad)
inc
(bad)
loopne
inc
mov
cmp
mov
inc
std
push
push
mov
mov
jle
xor
mov
xor
xor
aaa
ins
pusha
pop
xor
in
jle
mov
out
outs
loopne
xor
xchg
xor
mov
inc
cmp
adc
(bad)
inc
lock
mov
push
push
push
call
push
scas
jg
push
frstor
cmps
adc
les
sbb
and
fdiv
in
call
or
loope
idiv
call
add
out
call
addr16
stos
ds
inc
movhps
mov
jg
(bad)
(bad)
aas
push
jo
retf
je
call
jmp
call
dec
call
movs
mov
je
add
jmp
mov
add
add
mov
add
cmc
push
xor
fcmovnbe
mov
push
xor
mov
mov
push
enter
push
rep
call
ror
pop
add
add
pop
jns
xor
mov
sub
jb
or
sar
call
mov
(bad)
cli
sbb
add
addr16
std
mov
in
or
dec
ins
mov
pop
test
mov
push
mov
mov
(bad)
(bad)
aas
cld
mov
jne
mov
dec
push
sbb
sbb
scas
xor
cdq
aaa
push
pop
stos
push
ja
test
inc
push
push
lea
push
push
call
(bad)
fwait
add
jge
push
jmp
mov
pop
jg
dec
and
aas
inc
aam
lea
push
push
call
out
jno
cld
dec
xchg
jmp
(bad)
push
mov
cwde
push
call
lea
xor
mov
cmp
je
cmp
je
xor
aad
clc
pop
jge
mov
inc
jmp
adc
mov
call
cmp
fild
inc
jmp
cmp
jle
aam
sub
sar
je
dec
je
dec
je
outs
add
inc
push
out
das
push
test
je
fbld
daa
sti
(bad)
out
lock
add
in
jbe
out
punpckhbw
or
lea
cmp
(bad)
dec
push
test
mov
mov
mov
mov
mov
call
pop
mov
dec
mov
xor
dec
jl
(bad)
(bad)
jmp
retf
je
dec
je
dec
je
dec
je
dec
je
dec
jne
mov
jmp
add
neg
test
aaa
aaa
cmp
jle
push
push
(bad)
js
pop
jecxz
and
mov
idiv
mov
outs
jmp
push
pop
or
(bad)
dec
mov
sub
jns
neg
test
mov
mov
rcl
and
jl
fsubr
ffreep
inc
push
call
sbb
or
ret
jne
or
push
fadd
aaa
rcl
in
pop
ja
(bad)
dec
sbb
or
je
add
inc
push
xchg
pusha
pop
jge
push
jg
(bad)
pop
pop
pop
adc
or
jl
jg
xor
push
lea
dec
push
or
test
push
(bad)
jbe
mov
dec
(bad)
leave
call
mov
(bad)
(bad)
mov
pop
sti
icebp
cmp
add
fwait
call
test
test
jle
lea
test
jne
loop
std
dec
inc
add
cmp
lock
jne
add
imul
cmc
mov
(bad)
push
push
or
addr16
lds
fmul
jbe
jmp
and
jmp
mov
or
dec
push
or
push
sbb
bound
retf
clc
mov
out
cmp
cmp
loopne
xchg
jne
sub
adc
cmp
jmp
dec
std
jne
in
mov
data16
jne
call
inc
xor
push
pop
inc
cwde
clc
mov
call
xor
mov
adc
out
out
add
mov
sub
lea
and
or
push
jmp
adc
and
cmp
and
aaa
push
test
and
inc
in
or
call
mov
cmc
(bad)
mov
xchg
pop
sbb
push
push
cwde
sub
je
push
movs
mov
sub
adc
jo
loopne
inc
or
repz
add
mov
cmp
dec
add
dec
call
hlt
add
cmp
mov
jl
stc
ds
mov
inc
arpl
sbb
jmp
shl
and
push
sub
xchg
mov
fs
jl
inc
jmp
adc
dec
pop
and
clc
scas
cli
or
adc
pusha
fcom
fild
push
sbb
push
cld
cmp
or
not
add
jg
or
test
jne
cmp
into
call
sar
clc
(bad)
gs
adc
or
xor
mov
mov
je
call
mov
dec
mov
cld
push
adc
and
fcom
lea
push
lea
bound
rcr
push
sbb
(bad)
jmp
sub
mov
add
push
mov
add
push
push
push
mov
call
inc
or
fs
mov
xor
aas
inc
xchg
out
add
call
mov
dec
adc
call
and
les
push
sbb
mov
test
push
out
jmp
call
mov
inc
xchg
add
fsub
jno
cmp
call
mov
call
test
je
xchg
add
sbb
xor
into
call
mov
aas
mov
inc
adc
je
push
add
cmp
je
push
pusha
inc
push
in
and
push
mov
mov
push
call
fbstp
push
push
call
jg
cmc
fild
fmul
jo
ret
mov
stc
call
into
outs
xor
inc
xchg
jmp
pop
call
ja
call
xor
inc
add
lods
scas
push
mov
push
scas
xor
xor
adc
mov
inc
push
ret
leave
gs
sbb
ret
pop
jno
mov
je
lea
or
loop
aad
call
in
aaa
in
jp
adc
pop
idiv
cmp
cdq
or
(bad)
(bad)
cld
fistp
je
mov
mov
call
mov
call
lods
push
add
int
push
scas
xchg
cmps
cmp
sbb
jmp
sbb
into
push
(bad)
and
ins
cmp
cmps
retf
sbb
stos
xor
push
call
test
cli
mov
aam
cmc
dec
nop
stos
call
loop
arpl
call
stos
dec
inc
or
shr
mov
stos
stos
mov
inc
add
mov
ret
mov
inc
push
imul
ins
sbb
xor
stos
(bad)
call
mov
loope
retf
inc
or
loopne
mov
popf
jne
stos
stos
pop
adc
(bad)
push
in
xchg
jne
push
jle
popa
call
sbb
jg
idiv
mov
or
add
pop
rol
adc
bndstx
(bad)
test
adc
mov
cmc
call
mov
popf
(bad)
call
xchg
call
lock
jne
mov
pop
mov
int
push
cmp
mov
icebp
jle
mov
jne
call
jg
ja
or
das
push
mov
xor
cmp
je
pop
pusha
mov
cld
dec
or
push
push
add
aad
(bad)
push
call
or
inc
inc
sbb
call
test
je
lea
loopne
and
jno
mov
cmp
adc
inc
pop
cdq
mov
pop
cld
mov
push
call
cmc
inc
inc
(bad)
pop
arpl
add
push
mov
call
mov
xchg
inc
sti
pop
push
call
add
call
sti
inc
add
loopne
add
xor
adc
ror
jg
scas
mov
mov
call
push
adc
push
mov
mov
cmps
js
sbb
int
ret
and
sar
lahf
sub
xchg
sub
ins
ret
push
rol
mov
daa
lods
xor
sbb
push
bound
adc
lods
adc
jg
push
push
setne
cmp
mov
setne
mov
les
dec
inc
daa
repnz
outs
call
shr
and
lock
inc
icebp
xor
inc
repnz
inc
(bad)
(bad)
(bad)
push
xor
inc
hlt
xor
inc
cmc
xor
mov
mov
mov
mov
mov
(bad)
(bad)
sti
inc
mov
mov
mov
mov
mov
mov
add
pop
xor
add
mov
or
ja
loop
mov
imul
add
sub
call
xchg
jb
push
int
add
popa
inc
adc
mov
sub
and
dec
and
pop
add
jp
(bad)
out
xchg
cmp
push
call
pop
mov
jne
or
and
inc
mov
jp
in
in
xchg
ficom
push
push
mov
mov
clc
mov
push
mov
cmc
je
mov
push
lods
mov
pop
or
shl
adc
fist
push
call
hlt
adc
xchg
pop
adc
call
(bad)
call
pop
mov
hlt
call
call
jae
pop
pop
push
mov
push
push
push
in
inc
call
push
mov
cmp
lea
call
test
mov
mov
xchg
pop
je
mov
jmp
and
adc
enter
aas
pop
xor
adc
rol
xchg
test
xor
push
sbb
outs
ret
mov
call
mov
cld
mov
inc
or
aad
les
test
je
push
jno
out
or
int
sub
div
inc
push
hlt
xchg
pop
fild
sbb
les
push
call
sub
and
mov
or
js
mov
icebp
fucomp
pop
and
rcr
xor
mov
clc
mov
jmp
jl
sbb
push
call
pop
mov
icebp
mov
mov
inc
xor
adc
mov
je
push
adc
push
pop
mov
xor
or
je
lea
mov
test
jne
jmp
call
push
mov
pop
mov
or
push
call
fbstp
rcr
xor
mov
push
sub
xor
dec
leave
je
adc
leave
jne
ret
jnp
inc
inc
sub
ins
dec
and
repz
mov
sub
mov
mov
pop
mov
or
clc
sbb
addr16
xlat
pop
fdivr
cmc
cmp
sbb
and
jg
mov
call
and
jo
add
je
cmc
adc
mov
or
mov
inc
mov
call
pop
sub
push
ficom
push
mov
movs
add
arpl
movs
movs
xor
mov
push
loop
push
mov
mov
add
movs
push
or
test
je
pop
pop
push
call
mov
cld
je
ds
clc
or
pop
je
loopne
lahf
push
push
push
call
jle
mov
fist
sbb
call
data16
call
adc
jne
pop
jl
call
xor
data16
adc
(bad)
call
inc
add
dec
addr16
call
lea
push
lea
iret
push
call
and
into
ficom
push
mov
push
call
jg
cmp
int
shl
call
ret
(bad)
cli
cmps
mov
retf
fadd
in
call
out
adc
inc
or
cmp
add
add
mov
call
hlt
push
call
loopne
add
jne
mov
jmp
mov
out
shl
fisttp
in
or
inc
call
jo
lds
pop
lock
mov
call
call
enter
mov
fild
dec
je
push
push
test
pop
or
ficom
clc
add
cld
shl
add
push
(bad)
push
pop
je
or
jp
int3
std
call
jmp
and
push
add
push
mov
jmp
js
push
call
jmp
fstp
js
addr16
int
dec
hlt
push
call
scas
sbb
pop
xor
(bad)
call
inc
and
movzx
cmp
jg
je
cmp
jg
clc
(bad)
push
je
sub
je
sub
je
dec
je
dec
je
dec
(bad)
aam
lahf
push
mov
jmp
(bad)
std
(bad)
push
cmp
jns
and
jne
sub
jno
jmp
je
dec
jne
(bad)
(bad)
(bad)
push
and
pop
mov
jmp
mov
jmp
mov
jmp
cmp
jg
je
sub
je
(bad)
(bad)
(bad)
dec
push
dec
je
dec
je
dec
dec
jne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
(bad)
(bad)
jmp
mov
jmp
sub
je
dec
je
dec
je
sub
jne
mov
jmp
mov
jmp
mov
jmp
jne
out
add
push
fist
inc
push
sbb
jmp
cmp
sti
jg
cmp
adc
adc
test
icebp
sbb
call
pop
jne
mov
out
mov
fsubr
adc
ret
movzx
sub
fwait
add
or
dec
(bad)
std
ja
dec
push
inc
mov
call
mov
xlat
data16
std
dec
sbb
or
mov
add
adc
push
ins
mov
mov
mov
or
add
xlat
and
(bad)
cmps
sbb
mov
idiv
cmp
pop
or
push
push
setl
pop
cmp
mov
je
add
adc
fimul
test
dec
je
cmp
jle
cmp
jge
add
jmp
cmp
jle
cmp
jge
xor
add
imul
ds
fdiv
jl
sti
outs
jle
adc
add
xchg
jmp
jbe
cld
add
jmp
test
std
inc
je
push
mov
pop
sub
outs
cld
aaa
add
dec
je
cmp
dec
je
sub
jne
daa
inc
mov
jno
push
inc
push
push
or
addr16
pop
inc
out
adc
push
adc
push
pop
xchg
mov
loopne
inc
sub
je
sub
je
dec
je
dec
je
dec
pminsw
cwde
mov
scas
clc
mov
push
clc
cdq
test
jg
mov
mov
pushf
push
adc
jg
adc
push
stc
add
je
call
or
dec
je
push
cmps
add
jbe
jne
sub
push
jmp
jg
mov
and
push
cmp
add
call
xchg
add
dec
add
in
xor
push
cmp
hlt
clc
(bad)
jmp
dec
dec
je
dec
je
sub
je
dec
je
outs
ins
into
(bad)
pop
repz
mov
jmp
xor
jmp
sbb
pop
or
or
cmp
lahf
sti
iret
fld
cmp
or
mov
cdq
sti
mov
jno
push
sti
ss
pushf
jmp
or
jmp
pop
mov
ror
and
adc
jle
or
ja
cs
call
push
push
push
call
stos
lds
push
call
mov
push
daa
cld
call
add
jne
mov
imul
pop
xlat
push
sub
pop
ss
pop
pop
mov
(bad)
aaa
jge
lock
push
cmp
mov
outs
enter
push
add
test
inc
cld
into
call
or
into
std
outs
push
mov
adc
mov
or
add
push
mov
int3
sub
ret
sbb
aas
cmp
xor
aaa
ret
pushf
jnp
push
push
xor
mov
sbb
call
and
(bad)
fsubr
inc
call
les
mov
mov
push
push
push
loopne
cli
mov
xor
stos
popa
(bad)
ins
add
xor
stos
or
pop
outs
cmp
je
jmp
jbe
cmps
aas
push
add
adc
inc
je
push
fs
std
out
loopne
adc
push
mov
push
call
mov
pop
shl
sub
loopne
loope
jnp
rcr
rcr
mov
dec
add
jg
fcom
xor
cmp
mov
lea
stos
stos
stos
mov
mov
xchg
mov
mov
mov
xlat
lock
mov
fsub
je
lea
push
call
dec
add
outs
in
test
ret
add
movs
inc
adc
adc
sbb
ja
hlt
shl
sbb
cmp
iret
popa
dec
add
fmul
lock
je
pop
call
cmp
je
in
or
je
push
fsubr
fstp
cmp
push
call
es
cmp
cmp
loopne
(bad)
ret
pop
push
lock
movs
ud0
call
mov
je
pop
call
push
inc
xor
retf
xchg
mov
push
push
(bad)
adc
jne
push
ror
mov
jmp
jle
or
out
fiadd
pop
mov
sbb
ror
dec
push
push
cmp
pop
and
cmp
out
and
cmp
inc
dec
sbb
and
int3
loopne
cmc
xor
mov
in
jmp
mov
test
mov
add
adc
mov
fdiv
jge
je
push
inc
out
inc
push
adc
sbb
js
cmp
xor
mov
inc
loopne
jge
or
jle
mov
lahf
stc
jbe
mov
push
inc
(bad)
xor
ss
and
mov
mov
imul
jmp
dec
lock
mov
jmp
(bad)
outs
mov
pop
movs
sub
lds
addr16
inc
clc
jle
scas
out
inc
add
cmp
pop
jge
repz
mov
jg
(bad)
mov
aas
pop
jne
push
lea
(bad)
xchg
add
adc
push
inc
inc
sub
xor
push
outs
sub
rcl
inc
push
aad
cmp
or
popa
push
call
clc
dec
mov
jne
stos
or
mov
fild
push
push
mov
das
call
inc
cld
cld
add
test
retf
pop
stos
mov
cmp
loop
call
cmp
je
cmp
je
cmp
push
mov
lea
shl
cmp
jbe
pop
cmc
push
data16
pop
(bad)
xabort
lea
mov
push
cmc
cld
push
push
call
dec
clc
push
retf
dec
cld
mov
adc
hlt
cmp
jne
add
ds
std
call
jg
mov
jge
je
push
call
sti
adc
add
addr16
dec
out
mov
mov
xor
clc
xchg
xor
pop
repz
fsub
add
icebp
push
call
push
stos
mov
jne
call
mov
or
lea
push
add
mov
add
std
mov
call
ficomp
jb
push
push
fsubr
push
and
mov
shl
call
aas
mov
jmp
sbb
or
xor
push
jle
push
jl
jne
lea
in
push
mov
ffreep
call
mov
mov
push
shr
push
mov
or
out
fcmovbe
adc
das
push
call
cli
or
fst
pop
pop
pop
sub
call
cmp
enter
aaa
hlt
jg
xchg
pop
pop
pop
leave
ret
push
push
retf
in
rcl
and
dec
loope
(bad)
dec
mov
mov
push
push
push
push
call
cli
sbb
or
mul
push
stos
sbb
call
push
mov
jo
dec
addr16
cmp
call
les
clc
jle
sbb
call
sbb
cli
call
pop
cmp
ret
push
push
jl
outs
sahf
inc
xor
pop
mov
cmps
push
push
and
out
(bad)
cmp
sbb
push
inc
push
push
mov
sub
or
and
outs
inc
les
test
push
cld
add
push
push
push
mov
mov
adc
pop
std
fdivr
(bad)
adc
push
push
xchg
setne
cld
(bad)
mov
pop
and
mov
je
cmp
je
mov
mov
mov
jle
inc
sbb
add
push
pop
or
add
add
push
cmp
inc
aad
fcmovnbe
adc
(bad)
push
rol
pop
add
and
mov
mov
and
inc
and
aam
inc
pop
sbb
icebp
push
(bad)
mov
or
and
call
xor
push
inc
aam
and
add
and
aas
or
ret
pop
pop
ret
neg
push
inc
mov
jmp
sub
push
push
call
stos
js
shl
inc
sbb
inc
mov
or
jmp
repnz
cs
sbb
ds
jle
dec
aas
adc
cmp
aad
daa
call
dec
inc
jns
pop
je
xor
mov
call
and
push
mov
mov
cmp
jae
cmp
sbb
or
pop
je
movups
jae
fld
mov
mov
in
sbb
fstp
cmp
and
shr
sub
(bad)
mov
(bad)
(bad)
out
mov
loopne
mov
xor
ret
out
bound
fld
inc
pushf
fnsave
xchg
in
ret
adc
inc
(bad)
mov
fstp
or
fpatan
and
fisttp
dec
fldl2e
fmul
fst
frndint
fxch
fsub
fnstcw
clc
lock
fnsave
add
mov
aaa
adc
std
fxch
fstp
leave
inc
jae
loope
cmp
call
je
das
je
push
xchg
sti
fstp
sbb
ret
jmp
fstp
cmp
outs
fld1
jo
fs
(bad)
aas
or
pop
adc
inc
and
fld1
test
jge
neg
sti
(bad)
(bad)
fbstp
test
je
fld
fdiv
fstp
sar
fld
fmulp
jne
jmp
je
sbb
ret
xchg
add
add
arpl
arpl
clc
fnstsw
sahf
jp
fstp
pop
into
fabs
push
cld
(bad)
xchg
cli
in
fxch
fyl2x
scas
int3
inc
or
dec
or
sub
or
fsqrt
mov
mov
adc
loope
fldenv
push
push
fnstcw
cs
or
mov
xchg
std
xchg
fldcw
stos
or
ins
and
pop
pop
ret
es
out
push
enter
in
adc
push
cs
test
ins
adc
mov
outs
push
push
cmc
mov
sbb
call
push
fild
push
(bad)
xor
cmp
cmp
jmp
je
cmp
je
jbe
aad
cmp
push
sub
push
shl
sbb
call
hlt
call
ins
add
arpl
into
push
add
pop
(bad)
(bad)
jmp
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
push
stos
(bad)
inc
ret
xor
xor
ret
push
push
push
xor
pushf
jmp
call
sar
mov
neg
neg
sbb
mov
call
sbb
sbb
push
and
or
jne
mov
and
shl
icebp
mov
or
pop
shr
sbb
lock
daa
jmp
rcr
shr
rcr
or
jne
pop
lock
mov
std
fwait
cmp
shl
cmp
ja
jb
cmp
jbe
dec
add
(bad)
push
ror
neg
neg
sbb
pop
pop
pop
ret
mov
ins
adc
enter
or
mul
sbb
xchg
mov
ins
push
adc
or
loope
jo
rol
ror
jo
cmps
out
jmp
adc
adc
mov
push
neg
(bad)
leave
repz
adc
or
pop
addr16
sahf
inc
lods
rcl
jmp
loop
jo
adc
mov
call
add
cmp
pop
call
mov
dec
inc
out
std
pop
push
jp
fstp
sbb
mov
sub
sub
popa
xor
aad
fild
or
xchg
mov
ins
xor
jmp
push
aad
fcom
les
neg
arpl
shl
fdiv
les
test
je
call
add
inc
jne
call
(bad)
cmp
push
iret
sub
test
mov
addr16
outs
fstp
(bad)
in
fidivr
fucompp
pop
sbb
jp
sub
sbb
psubusw
cmp
add
and
cdq
cwde
mov
pop
push
out
adc
jnp
adc
mov
out
jle
es
sti
(bad)
(bad)
fchs
jmp
sub
fadd
(bad)
rcl
jp
ins
xchg
fstp
jmp
ds
push
xchg
test
xchg
ret
fmul
inc
mov
push
pop
out
dec
sbb
xchg
mov
mov
leave
jne
sub
pop
sbb
mov
jmp
xchg
or
test
dec
cmc
cmp
inc
cmp
je
and
je
push
in
jo
inc
cmp
(bad)
fnstsw
xabort
je
pop
call
fadd
or
and
int3
icebp
sbb
jnp
sbb
sub
xor
and
jae
and
fsubr
jmp
bound
jecxz
in
pop
fldenv
call
mov
or
test
outs
add
cmps
hlt
or
mov
dec
add
loop
es
lea
push
adc
or
fwait
call
aad
and
mov
fcos
(bad)
(bad)
mov
add
push
mov
sub
mov
lea
sub
mov
mov
mov
(bad)
(bad)
call
mov
mov
mov
mov
movzx
inc
add
add
cmp
jl
pop
pop
pop
ret
(bad)
mov
add
push
xor
cmp
push
mov
push
mov
push
(bad)
sub
mov
lea
sub
mov
mov
movs
sti
aas
jae
push
push
add
inc
add
mov
push
(bad)
adc
ja
bound
fdivp
(bad)
mov
push
lea
push
call
lea
adc
pop
push
sbb
mov
xchg
cmc
test
je
test
mov
mov
cmp
mov
ret
and
xor
and
add
cmp
add
ds
push
push
ja
hlt
push
add
sbb
sub
cmp
add
pop
mov
push
add
sti
popf
ins
push
mov
or
and
pop
aam
test
jno
(bad)
(bad)
jns
mov
leave
add
(bad)
mov
mov
xor
mov
ret
mov
dec
or
icebp
call
pusha
and
lock
test
cmp
call
mov
pop
out
call
pop
add
call
push
jmp
sbb
sbb
add
pop
and
xchg
and
mov
out
lock
neg
sahf
clc
jmp
inc
aaa
sbb
cld
cmp
add
aaa
repz
xor
(bad)
in
(bad)
(bad)
aas
int3
push
push
push
push
push
pushf
pop
mov
xor
push
popf
pushf
pop
xor
je
adc
dec
sbb
sub
clc
add
sti
inc
jns
add
jne
and
cmp
je
jp
add
cmp
mov
pop
pop
mov
and
add
mov
mov
jmp
mov
add
push
leave
popa
mov
fs
and
loope
mov
jo
pop
pop
mov
inc
mov
leave
add
add
(bad)
(bad)
sti
jne
gs
je
cmp
je
cmp
je
(bad)
push
ret
jae
sbb
add
mov
adc
jbe
loop
ror
inc
call
mov
push
xor
push
push
rol
rcl
aam
inc
jl
push
push
push
jo
jae
cld
add
das
and
add
inc
xchg
and
adc
jge
jbe
call
and
or
jmp
mov
pushf
pop
or
ret
jne
clc
sbb
push
pop
cmp
or
and
out
pop
aad
push
pop
clc
test
jne
mov
xor
xchg
hlt
mov
call
inc
dec
(bad)
sbb
loopne
push
aam
inc
dec
inc
dec
int3
pop
les
dec
inc
dec
mov
dec
inc
dec
movs
ins
pushf
jo
dec
inc
dec
mov
stc
dec
inc
dec
push
xor
sbb
sbb
sbb
pusha
mov
cmp
cmp
dec
nop
ficomp
mov
jbe
mov
mov
push
(bad)
(bad)
call
adc
jno
(bad)
push
mov
sub
call
jg
or
and
push
loopne
cmp
cmp
mov
or
pop
ret
push
push
adc
xor
adc
pushf
movs
sub
add
dec
push
push
push
push
call
cmps
jo
ja
pop
push
jmp
out
pop
cmp
retf
stos
dec
inc
gs
adc
mov
push
push
mov
call
jne
mov
sti
lock
call
lahf
or
loop
jle
mov
xor
out
cli
mov
cmps
in
ficomp
or
scas
cmp
jo
test
test
xchg
test
adc
inc
jmp
sbb
stos
iret
cmp
push
call
stos
xchg
ror
jmp
call
jg
jnp
sbb
add
mov
call
jmp
inc
add
jmp
and
arpl
mov
or
jne
cmp
jne
push
test
fisttp
clc
add
push
push
jmp
cdq
or
jecxz
call
retf
xchg
sbb
or
mov
call
add
ins
mov
lea
stc
add
jne
call
call
xchg
jp
inc
mov
or
xor
add
mov
jo
dec
jbe
call
arpl
ds
call
sub
or
call
cmc
inc
mov
movsx
push
mov
push
cs
imul
rol
or
lock
hlt
and
fmul
add
into
aaa
call
add
mov
sbb
add
push
push
mov
mov
add
add
mov
cmp
mov
or
fnstsw
cmp
mov
jbe
lea
jne
call
std
pop
les
and
clc
(bad)
push
mov
push
push
push
pop
mov
push
push
push
mov
mov
call
aaa
ins
fild
sbb
mov
push
adc
mul
mov
inc
dec
mov
cmp
inc
sbb
push
or
dec
sbb
jae
out
or
push
cdq
sbb
mov
and
clc
push
push
xor
jmp
test
dec
sub
in
in
sub
inc
aas
in
lahf
stos
in
pop
fstp
adc
in
(bad)
inc
xor
cmp
pop
fstp
setle
mov
mov
out
inc
dec
es
pop
mov
mov
push
jmp
or
inc
adc
lds
adc
push
mov
dec
jo
fsub
cmp
mov
mov
push
call
pop
pop
adc
cmp
test
test
or
movzx
icebp
xor
mov
push
xor
push
mov
push
inc
nop
pop
mov
int3
or
sub
inc
out
retf
enter
nop
cmps
scas
and
pop
pop
popa
adc
pop
inc
(bad)
adc
inc
or
in
mov
xor
add
aaa
cld
out
je
inc
or
test
pop
setne
pop
ret
or
mov
jo
adc
inc
call
mov
or
mov
mov
pop
fidiv
or
cld
cmps
inc
xor
add
add
retf
(bad)
and
push
or
cld
dec
xchg
stos
xor
fcom
fdiv
or
mov
xchg
adc
stc
call
and
xchg
pop
je
fcmovu
add
mov
cmp
xor
cmp
jne
bound
or
inc
data16
sub
inc
pop
add
fdivp
mov
adc
adc
xor
and
sbb
cmc
sbb
inc
(bad)
ficom
jo
call
sub
cli
jg
inc
adc
adc
inc
rcl
add
push
rcr
(bad)
add
xchg
mov
aaa
adc
add
dec
in
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
dec
mov
mov
call
mov
mov
mov
push
push
mov
ret
outs
cli
adc
mov
push
dec
push
sub
push
xchg
scas
sti
push
sub
push
push
mov
cmc
inc
dec
cmps
call
sub
inc
into
call
push
call
mov
pop
fbld
fnstenv
mov
ret
aas
pop
sbb
stos
inc
jl
(bad)
cwde
mov
data16
push
out
add
push
idiv
inc
push
(bad)
(bad)
mov
sbb
mov
mov
call
mov
mov
jo
mov
ror
xchg
or
gs
iret
mov
call
call
fwait
sub
adc
nop
adc
loopne
movs
xlat
adc
and
cmps
jne
xchg
clc
aas
xor
push
push
push
dec
dec
dec
add
push
push
(bad)
mov
and
ret
ret
or
aaa
pop
mov
sbb
inc
les
and
jbe
call
popa
and
pop
lea
sbb
cs
lea
mov
add
clc
(bad)
inc
rcr
scas
idiv
call
dec
sbb
push
ins
xchg
sbb
call
pusha
and
adc
add
inc
call
test
mov
stc
(bad)
(bad)
js
lds
add
dec
push
addr16
sbb
mov
test
sbb
pushf
jns
daa
xchg
jnp
call
call
sub
and
sar
jmp
adc
or
(bad)
jae
add
sbb
inc
je
mov
dec
xor
push
and
add
adc
jmp
je
sbb
test
adc
push
mov
push
push
add
pop
cmp
xlat
pop
jns
hlt
sbb
cmp
jne
rol
or
sub
outs
inc
rcr
je
call
call
jmp
call
push
push
jle
pop
xchg
rcr
test
push
pusha
movsx
or
mov
or
cmps
mov
lea
pop
ret
cmp
out
mov
mov
mov
fcom
jne
or
push
inc
jmp
or
jmp
mov
es
sbb
scas
mov
shl
inc
cmp
inc
test
je
pop
loopne
(bad)
push
inc
jmp
push
call
addr16
xchg
mov
sti
jo
xor
cmp
ret
frstor
adc
add
cmp
mov
inc
adc
inc
call
mov
je
fcomip
dec
cmp
mov
push
push
call
xchg
idiv
jmp
or
push
push
and
mov
cmp
xor
dec
mov
(bad)
(bad)
je
dec
je
sub
je
sub
jne
mov
dec
adc
rcl
mov
push
dec
inc
out
loop
(bad)
idiv
jmp
push
jmp
ror
push
or
push
lea
add
das
test
cwde
std
inc
jle
cmp
setne
mov
push
and
dec
push
and
sub
cmp
add
inc
inc
call
dec
enter
or
adc
clc
mov
jle
and
push
xchg
mov
add
sub
mov
dec
cld
scas
inc
xchg
sti
lea
je
push
sbb
call
dec
jne
repnz
add
xchg
push
push
mov
std
fdiv
out
sbb
or
add
add
cmp
pop
std
push
mov
push
pop
cli
call
jge
out
push
push
movs
push
sbb
(bad)
out
(bad)
mov
add
or
sbb
mov
sub
jb
push
call
mov
add
je
dec
mov
push
into
push
arpl
lahf
xor
call
or
xchg
inc
or
mov
stos
loopne
or
repz
dec
fwait
jns
or
mov
pop
mov
add
movs
call
push
loope
mov
jae
ret
bound
and
xchg
dec
sub
fmul
sti
std
ja
cmp
or
mov
add
and
add
cld
loop
push
outs
arpl
add
push
mov
ja
pop
cmp
push
lea
and
cmp
into
punpckhdq
mov
mov
(bad)
inc
add
push
mov
and
cmp
jl
pop
aaa
xchg
std
dec
and
or
mov
mov
and
sbb
(bad)
(bad)
std
call
and
or
mov
test
jne
cmp
mov
test
jne
and
mov
sub
xor
in
adc
mov
push
std
jmp
iret
enter
and
mov
clc
jnp
or
enter
cmp
fsubrp
add
out
xchg
pop
(bad)
inc
or
mov
enter
and
out
push
pop
push
inc
and
mov
pop
setne
sti
adc
or
adc
xor
test
adc
jnp
or
add
pop
push
jg
push
inc
imul
cdq
idiv
ds
movzx
imul
cmp
loope
xchg
xchg
push
lea
shl
inc
push
push
mov
loop
sub
shr
push
pop
pop
mov
sti
push
jae
add
or
adc
adc
mov
ret
fwait
cs
rcr
sar
scas
add
push
push
push
inc
icebp
push
pop
loop
jae
cmp
in
cmp
je
push
mov
repnz
call
push
call
cmp
jle
lea
and
or
or
push
aaa
hlt
pop
scas
sbb
loopne
clc
and
cmps
rol
jmp
add
add
inc
cmp
jl
and
dec
push
adc
add
pop
sar
push
cmp
mov
mov
pop
ret
add
push
mov
outs
jo
jo
inc
adc
sub
xor
add
clc
adc
in
fistp
xor
je
xor
inc
call
dec
push
in
ret
call
sbb
sub
add
sti
fs
adc
add
and
loope
test
fst
call
jmp
call
imul
ja
call
je
dec
idiv
dec
jne
pop
push
call
sti
xor
push
jmp
or
sub
out
outs
pusha
mov
push
in
call
call
mov
cmp
add
repz
mov
jmp
push
idiv
pop
jo
test
loope
jp
push
(bad)
imul
loop
add
xor
add
and
xor
mov
and
add
jle
in
add
(bad)
sti
fucomp
sub
ins
lock
std
dec
dec
or
xor
cs
rol
clc
rcr
test
push
call
inc
inc
push
ret
or
popf
loope
adc
cmp
jge
jge
or
cmp
lock
push
call
call
push
push
call
std
sbb
add
inc
movs
and
sbb
mov
fist
xor
cmps
fs
loopne
lods
push
push
call
pop
mov
jle
aas
aaa
fstp
and
jg
pop
jle
push
mov
pop
call
and
adc
fs
(bad)
std
push
mov
inc
add
adc
cmp
sbb
push
call
jmp
cli
jg
imul
add
push
push
call
(bad)
(bad)
jmp
jge
or
mov
je
lea
mov
cmp
je
mov
mov
cmp
jne
out
adc
dec
lock
jne
jmp
jle
push
call
sti
or
add
jns
or
std
cwde
jnp
sub
and
add
push
cmp
psraw
jne
cmp
add
pop
xchg
mov
xchg
jg
sub
pop
lods
je
xor
ja
shr
leave
sbb
shl
call
call
cld
mov
je
cwde
cmc
dec
mov
add
ja
xchg
mov
and
push
sub
je
rcl
ud0
pop
xor
call
cmp
pop
je
push
and
mov
and
push
mov
adc
cmp
push
call
test
je
push
call
or
pop
pop
pandn
aam
push
push
call
adc
or
mov
pop
add
hlt
jmp
call
dec
inc
(bad)
(bad)
fmul
inc
push
push
call
in
(bad)
lahf
loope
jne
test
je
push
dec
je
call
mov
dec
pop
je
push
cmp
mov
shl
pop
dec
loopne
pop
out
js
inc
jnp
aas
add
call
retf
push
in
mov
int
fisub
and
std
mov
lea
push
call
dec
push
push
push
jmp
and
push
call
ja
lea
aaa
daa
clc
xor
add
cmp
je
sti
popa
or
daa
push
push
and
push
call
je
test
pop
pop
sbb
shl
ret
xchg
mov
push
and
sbb
adc
add
call
jmp
or
sbb
pop
cmp
je
or
push
call
inc
sbb
adc
shl
push
add
jecxz
and
mov
sbb
(bad)
mov
or
fcomp
sbb
and
add
mov
pop
pop
clc
pop
outs
and
add
pop
repz
mov
sbb
repnz
push
outs
aaa
push
push
mov
sbb
fcmovb
sar
movs
push
or
mov
in
test
cwde
xor
cld
aaa
popa
xor
or
mov
push
dec
in
in
jp
mov
fwait
clc
or
call
adc
ret
jl
xor
mov
mov
lea
jl
stos
stos
push
stos
lea
call
pop
lock
add
dec
jne
push
call
jl
add
call
pop
jl
mov
or
pop
ret
jmp
add
inc
push
pop
sub
push
test
je
dec
je
and
dec
jmp
je
mov
pop
je
lea
or
sbb
inc
sub
je
mov
mov
add
mov
dec
adc
push
inc
add
pop
mov
(bad)
jmp
mov
mov
jmp
sbb
mov
je
push
out
pusha
xchg
popf
daa
dec
push
mov
add
out
(bad)
push
sub
inc
mov
cmp
mov
mov
mov
push
pop
jne
cmp
jne
cmp
je
mov
add
xor
add
add
js
mov
mov
sti
add
mov
mov
mov
and
cmp
jne
cmp
jne
mov
(bad)
fimul
inc
xor
call
fstp
clc
(bad)
dec
cmp
inc
dec
add
inc
dec
add
push
mov
mov
adc
or
out
loop
mov
popa
add
pop
push
je
or
inc
sbb
cmp
outs
and
mov
je
jle
cmp
rol
(bad)
fnsave
jne
mov
adc
clc
jmp
(bad)
adc
mov
mov
push
mov
pop
jmp
pusha
jmp
sub
ret
pop
push
add
inc
sbb
or
pop
sbb
inc
push
adc
pop
jl
cmp
jne
call
js
adc
dec
adc
jnp
cwde
dec
je
jg
rol
cmp
jle
add
outs
(bad)
jle
xor
or
jmp
std
cmp
mov
mov
xor
(bad)
(bad)
ss
je
mov
fnstenv
mov
push
pop
pop
ret
xchg
test
pop
jl
adc
and
sbb
inc
cld
(bad)
call
rcr
adc
inc
xchg
cmps
cmp
adc
pop
jmp
push
call
jl
jae
stos
dec
dec
jne
adc
loopne
call
jmp
push
call
add
jle
mov
mov
push
je
xlat
adc
and
loope
sbb
cmp
sub
inc
dec
xchg
jae
call
mov
lahf
sti
push
mov
pop
adc
push
scas
aas
push
inc
cmp
jb
push
inc
jb
and
dec
adc
stos
jo
and
pop
pop
repnz
pop
or
dec
loopne
mov
mov
or
(bad)
fcom
pusha
clc
jne
mov
dec
or
lods
push
push
js
add
adc
dec
or
dec
inc
adc
pop
clc
test
idiv
xchg
std
jne
push
call
jmp
aas
les
xor
lock
addr16
jg
xor
mov
jne
rol
mov
add
push
or
inc
je
cmp
call
icebp
add
mov
cmp
je
cmp
jne
inc
inc
jmp
dec
add
dec
or
mov
or
jg
dec
or
mov
rcr
mov
mov
in
ret
cmp
jbe
repnz
inc
aad
cmp
and
xchg
les
mov
jmp
mov
dec
loop
mov
jae
mov
jmp
mov
mov
aam
jg
cli
and
ret
mov
and
cmp
jnp
and
add
jecxz
imul
mov
mov
fisttp
int3
mov
dec
fsubr
pop
mov
mov
cmp
mov
ja
add
mov
jae
push
call
adc
in
ds
call
jl
add
div
xor
shl
hlt
cmp
jle
add
dec
fmul
xor
jne
add
outs
or
mov
mov
dec
mov
mov
cmp
in
dec
xor
mov
mov
(bad)
adc
mov
imul
(bad)
(bad)
jmp
mov
mov
imul
cmp
lea
mov
jle
mov
(bad)
jmp
int3
cmp
dec
cld
mov
add
cmp
jge
mov
test
mov
(bad)
(bad)
push
jle
mov
lea
mov
mov
push
mov
push
push
int3
push
cld
out
call
mov
add
add
adc
dec
shl
jg
test
inc
clc
mov
cmp
(bad)
(bad)
mov
mov
inc
mov
add
cmp
dec
mov
inc
or
cmp
jbe
ja
(bad)
aad
arpl
inc
cmp
in
jl
xchg
push
inc
inc
mov
cmp
jae
fld
jmp
sbb
out
out
cmp
inc
adc
shr
mov
aaa
jp
pop
push
pop
retf
loope
test
mov
cmp
inc
mov
mov
test
push
mov
mov
xlat
inc
cmp
imul
mov
lock
mov
xchg
push
call
cmp
ror
push
aas
jae
test
add
adc
fild
xchg
mov
cli
pop
fild
in
pop
adc
sahf
push
mov
jae
outs
div
sar
je
inc
or
mov
or
fisttp
call
(bad)
outs
or
imul
cmp
jle
add
mov
fsub
push
mov
test
sbb
inc
fmul
test
jle
jge
mov
aad
push
xchg
and
push
fcom
add
sbb
adc
cmp
fild
hlt
jl
call
cmp
jl
les
ins
push
call
mov
(bad)
pop
sbb
and
call
clc
pop
jl
inc
pop
neg
inc
inc
xlat
add
mov
xchg
inc
cmp
or
(bad)
out
inc
add
rol
dec
clc
scas
shl
sbb
mov
mov
or
scas
sbb
shl
push
pop
rol
cld
cmp
push
mov
mov
mov
mov
sar
push
adc
daa
lods
pop
add
pop
cmps
add
and
mov
jns
ja
in
pop
mov
xor
call
jg
inc
mov
mov
dec
ja
scas
rcr
push
push
lea
push
push
call
cmp
dec
idiv
inc
in
imul
mov
adc
dec
or
inc
and
fnsave
jecxz
mov
cld
mov
add
shr
mov
or
leave
rol
dec
mov
jle
mov
jbe
or
xor
and
test
mov
jbe
mov
jne
push
push
call
add
mov
add
leave
cmp
jb
mov
mov
inc
jl
and
lock
cmp
jg
dec
jl
inc
mov
cld
add
add
cmp
loopne
test
loope
mov
nop
fst
daa
rol
imul
push
push
push
push
(bad)
inc
jo
add
call
xor
arpl
inc
pusha
clc
cmp
jl
or
xchg
or
jns
mov
cld
add
mov
pop
sub
clc
stos
pop
mov
jo
mov
add
fdivr
mov
pop
add
push
push
push
call
mov
push
push
xor
push
pushf
jle
push
adc
les
sub
out
(bad)
daa
push
retf
(bad)
(bad)
push
cmp
jl
sub
inc
add
or
add
or
xor
lea
adc
repz
xchg
push
add
add
mov
cmp
xor
pop
and
mov
xor
rcr
jl
push
loopne
jne
ret
push
(bad)
push
xchg
aad
mov
clts
mov
mov
push
adc
sbb
xor
lock
pusha
in
mov
outs
cmp
jl
or
or
lock
jmp
jl
scas
or
out
xor
call
jp
aaa
push
std
jmp
sar
inc
clc
add
dec
cld
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
mov
add
sar
mov
mov
das
mov
clc
mov
cli
(bad)
mov
mov
sub
sub
add
and
cmp
jge
and
mov
out
(bad)
jne
and
mov
in
dec
or
sbb
dec
adc
jecxz
(bad)
dec
mov
mov
js
push
shl
inc
dec
mov
dec
pop
mov
mov
and
inc
add
or
dec
or
imul
inc
adc
mov
and
pop
mov
movsx
push
sbb
stc
sub
dec
push
lock
jmp
adc
(bad)
jmp
push
lock
movzx
movzx
out
(bad)
(bad)
fbld
mov
shl
mov
add
mov
mov
mov
jns
push
call
call
mov
mov
ret
add
mov
sar
add
add
(bad)
mov
(bad)
sub
dec
adc
jne
jo
aaa
lock
mov
sub
pop
(bad)
mov
or
pop
mov
mov
in
dec
or
js
mov
aas
hlt
ja
jge
add
idiv
jne
jle
mov
mov
rcr
or
mov
add
test
jbe
mov
or
out
mov
inc
cmp
jl
add
stc
dec
jne
std
outs
(bad)
xor
or
jne
push
or
pop
xor
jp
cmps
les
inc
sub
push
mov
mov
ins
pushf
call
jge
out
test
adc
sbb
cld
mov
loop
or
pop
hlt
mov
jbe
adc
sbb
sub
sbb
lock
hlt
mov
stos
fxsave
stos
or
mov
repnz
shl
sub
xchg
sub
outs
ret
rcr
mov
pop
add
fisttp
js
jne
test
repnz
mov
mov
push
std
cmp
adc
ss
dec
std
xchg
hlt
mov
mov
push
cld
jne
mov
xchg
push
aam
dec
clc
jne
fist
push
push
xor
inc
push
(bad)
xchg
mov
call
push
mov
dec
sub
iret
push
pop
je
hlt
(bad)
call
sub
retf
jle
cmp
jg
mov
cmp
je
mov
arpl
pop
jmp
(bad)
mov
push
(bad)
jl
mov
mov
dec
je
dec
je
dec
dec
je
cmp
jne
mov
inc
ins
(bad)
lods
mov
or
jmp
out
sbb
push
jne
scas
add
and
(bad)
call
ja
test
jge
jmp
cmp
jmp
cmp
mov
jne
jbe
call
xor
fadd
jmp
jge
enter
jmp
mov
jmp
mov
and
inc
sub
push
pop
mov
xor
inc
ret
(bad)
inc
rcl
jl
cmp
je
mov
retf
aad
inc
ins
mov
xor
pop
pop
inc
or
xlat
cs
push
mov
ffreep
add
test
jle
add
cmp
jne
cmp
(bad)
(bad)
inc
jne
mov
cmp
je
cmp
je
mov
cmp
je
mov
mov
loopne
xlat
inc
inc
or
icebp
sbb
sub
lds
aaa
push
call
shl
std
xor
jne
xor
mov
sbb
(bad)
lock
jmp
jl
xchg
mov
mov
dec
and
mov
jmp
adc
imul
jmp
lods
jmp
push
je
pop
daa
popa
dec
clc
call
cld
add
(bad)
mov
or
or
inc
(bad)
sti
push
jle
lea
lds
rcl
xchg
sub
xor
aaa
dec
add
cmp
inc
mov
ret
js
fsub
imul
adc
adc
add
push
dec
gs
cmp
mov
push
mov
xor
push
cmp
cld
(bad)
mov
mov
movzx
cmp
push
jl
lea
fwait
lods
mov
mov
mov
mov
shr
mov
shl
mov
aas
repz
mov
and
rep
pop
add
xchg
inc
cmp
jg
sti
adc
mov
xor
xor
cmp
aam
das
add
mov
mov
(bad)
mov
(bad)
in
(bad)
inc
cmp
je
shl
lea
(bad)
in
(bad)
inc
jne
xor
xor
inc
lea
cmp
je
mov
outs
ja
mov
add
adc
add
les
or
inc
popa
cmp
jle
xchg
and
aas
mov
add
in
or
add
call
inc
hlt
mov
out
aas
(bad)
sbb
lock
mov
jb
dec
fsubr
add
shl
lea
mov
lods
sbb
loopne
lea
lea
cdq
inc
mov
mov
mov
pop
out
mov
inc
pop
mov
clc
cmp
jle
cmp
dec
jns
pop
cld
icebp
fbstp
clc
push
mov
push
mov
jmp
sar
push
imul
adc
dec
sbb
add
test
pop
nop
fnstsw
inc
mov
mov
movzx
dec
mov
jne
das
and
push
add
das
cmp
out
pop
sub
das
sub
je
test
ret
jg
push
mov
jmp
mov
adc
inc
adc
inc
mov
jnp
jae
fistp
xor
or
or
mov
add
pop
pop
sub
leave
jl
adc
sti
sbb
mov
mov
mov
inc
adc
mov
dec
push
cmp
hlt
pop
iret
es
xor
ret
mov
test
pop
(bad)
jge
push
push
jmp
cmc
add
or
shl
enter
call
jmp
sar
inc
push
mov
mov
sar
xor
inc
mov
mov
mov
shl
mov
dec
and
(bad)
(bad)
adc
dec
mov
jle
mov
shl
cmp
jge
clc
push
push
call
mov
add
dec
dec
fcmovbe
sti
loope
ret
ja
and
or
call
adc
inc
adc
(bad)
cmp
mov
push
or
and
jo
adc
pop
push
ins
mov
push
add
jmp
mov
cmp
push
push
sub
add
xor
pop
sbb
push
push
push
mov
call
idiv
lea
push
add
xor
mov
push
xor
dec
cs
call
(bad)
jmp
lea
jle
lea
mov
inc
add
sub
out
(bad)
cmp
jl
mov
and
ror
imul
jmp
mov
sbb
cdq
ins
jp
cmc
call
and
sbb
sar
aad
add
add
pop
xchg
ss
add
jg
ins
lds
lea
mov
lea
lea
movs
(bad)
(bad)
out
(bad)
movs
mov
mov
push
mov
inc
ror
movs
jle
ja
lea
lock
add
xor
mov
mov
mov
mov
bound
mov
dec
sbb
cmp
in
pop
jge
xchg
push
lea
push
call
add
(bad)
push
je
enter
clc
pop
mov
lea
lock
cmps
aas
ss
and
rol
shl
ficom
jg
and
push
push
push
xchg
fild
xor
test
jl
pop
sti
inc
mov
test
je
cmp
jge
push
es
jge
loopne
mov
out
aaa
stc
inc
enter
into
inc
fild
shl
mov
sub
sar
ins
push
and
clc
fnsave
std
cmp
aam
or
icebp
jmp
mov
push
inc
add
mov
(bad)
aam
xor
cld
mov
mov
scas
cmp
jle
stos
mov
loopne
sub
add
std
jb
pop
mov
mov
xor
inc
jmp
push
cdq
test
add
mov
daa
cld
or
(bad)
movzx
push
push
xlat
xchg
add
data16
dec
mov
push
iret
sar
and
mov
je
add
or
push
sti
cmp
jge
push
xor
mov
xor
imul
mov
shl
aas
in
shl
and
cmp
(bad)
push
xor
into
cmps
xor
sub
sbb
addr16
fcomip
or
jmp
cmp
jne
adc
inc
mov
mov
push
add
test
push
repz
inc
inc
mov
or
femms
or
sub
jmp
mov
or
sbb
bndstx
into
push
out
je
lahf
push
sbb
jnp
and
je
sub
(bad)
jmp
xor
inc
add
jmp
mov
sti
aas
cld
hlt
(bad)
jge
sbb
jge
mov
mov
hlt
(bad)
jmp
add
jne
mov
lea
lea
movs
ds
aaa
shl
test
xor
shr
std
or
push
pop
xor
fstp
sahf
cmps
clc
ror
sub
mov
mov
cld
aas
jne
cmp
cmp
shl
je
in
scas
push
pop
pop
pop
cmp
es
repz
adc
repz
and
push
jmp
mov
lock
in
loop
jl
mov
inc
xchg
(bad)
test
bt
inc
jmp
add
jne
mov
mov
dec
hlt
je
lea
push
push
push
call
test
jl
pop
es
dec
mov
push
push
call
mov
and
and
push
les
add
loop
hlt
jl
cmc
jg
or
pop
or
inc
adc
mov
cli
inc
bound
mov
push
pop
jmp
mov
bound
jmp
rol
xor
inc
add
dec
mov
hlt
xchg
xchg
add
ja
inc
or
(bad)
aas
or
pop
or
dec
cld
out
and
or
cmp
jl
xor
jg
adc
mov
push
push
jg
sub
inc
and
(bad)
fwait
jae
jg
mov
or
fdivr
out
mov
hlt
jmp
sub
pop
cmp
jle
sbb
mov
mov
mov
mov
stos
mov
pop
sbb
xor
fist
xchg
pop
lea
and
dec
jle
cdq
push
(bad)
ss
jno
sub
pop
mov
mov
cmp
jg
mov
mov
mov
push
mov
adc
push
js
sub
pop
add
dec
pop
sub
xchg
dec
lea
mov
loopne
push
mov
imul
aaa
addr16
push
call
mov
mov
in
out
pusha
lahf
ss
add
push
adc
cmps
and
call
xor
and
and
adc
inc
fdivr
sub
push
call
mov
stos
cmp
pop
pop
jl
cmp
add
pop
mov
jmp
call
push
jmp
sbb
push
inc
inc
push
push
xchg
clc
popa
push
ins
sbb
and
(bad)
loopne
xor
push
xor
inc
cmp
jne
mov
les
ror
and
fnstsw
inc
and
pop
or
inc
inc
adc
shl
xrelease
mov
mov
mov
test
std
sar
jne
mov
mov
and
xor
jmp
jnp
(bad)
cmp
push
pop
jle
sbb
inc
inc
and
(bad)
and
call
push
mov
out
out
cmp
xchg
jge
jle
scas
neg
or
scas
ret
mov
int
jg
sbb
imul
mov
cmp
fcmovne
fmulp
mov
adc
ret
ja
push
add
mov
jle
adc
mov
dec
jne
loop
call
jnp
jmp
rol
push
jmp
loope
cld
mov
push
mov
push
mov
pop
mov
(bad)
sbb
add
outs
rcl
(bad)
(bad)
pop
mov
cmp
jne
mov
cmp
clc
lahf
or
push
lea
dec
mov
dec
aas
or
add
push
call
cmp
aaa
push
call
xchg
inc
dec
pop
pop
jl
arpl
sbb
ret
push
xor
dec
push
mov
pop
jmp
call
in
jns
call
scas
clc
mov
xchg
std
leave
pusha
or
mov
sub
ret
mov
std
jmp
xor
cmp
je
push
pop
jmp
mov
call
call
push
je
dec
jne
cmp
mov
je
and
pop
push
xchg
push
mov
lahf
push
pop
jmp
lea
scas
clc
test
mov
cmp
jle
mov
jmp
xor
jmp
adc
sbb
js
mov
loopne
enter
je
push
inc
mov
pop
aaa
sub
call
mov
(bad)
cmp
mov
push
sti
mov
adc
add
pop
pusha
mov
int
shr
push
push
add
pop
sub
xlat
sbb
jmp
mov
sbb
add
arpl
sbb
lods
mov
dec
sub
jp
mov
add
mov
call
jnp
push
push
lahf
jl
xchg
cmc
mov
mov
pop
lea
mov
shl
cmc
xchg
pop
jle
mov
xor
dec
lock
push
mov
cmp
mov
imul
cdq
idiv
mov
or
dec
cld
mov
call
xchg
loope
bound
popf
dec
in
add
lea
ja
xchg
mov
shl
arpl
ror
lea
mov
cmp
clc
neg
mov
jl
outs
into
sub
xchg
dec
sbb
call
mov
fist
mov
inc
or
inc
in
test
call
loope
mov
mov
push
fmul
dec
in
mov
arpl
enter
inc
jle
mov
mov
mov
clc
ja
ret
sti
mov
or
dec
outs
inc
(bad)
push
jne
mov
mov
lea
test
jle
iret
inc
in
ds
inc
into
clc
lea
sbb
mov
jg
and
lock
mov
mov
out
sti
cmps
mov
push
loop
adc
mov
adc
outs
jo
imul
loopne
push
jne
test
jle
mov
sbb
retf
mov
mov
pop
dec
jne
daa
ins
mov
in
add
inc
call
or
inc
jbe
loope
lock
sbb
(bad)
and
xor
pop
push
mov
mov
mov
pop
clc
inc
lea
mov
mov
call
cdq
mul
inc
clc
mov
mov
mov
mov
adc
xchg
pop
lea
lea
push
retf
inc
imul
lea
mov
jne
mov
sub
mov
mov
mov
aad
mov
fwait
jmp
adc
or
imul
ret
add
dec
hlt
jne
call
mov
sbb
setp
push
stos
mov
mov
arpl
(bad)
cld
cld
add
pusha
fdivr
push
lea
mov
jnp
rcr
div
into
clc
jne
mov
sub
call
cdq
idiv
scas
mov
mov
inc
cmp
dec
hlt
or
leave
retf
lea
mov
xchg
mov
or
dec
cld
mov
in
jne
rol
ret
inc
sub
imul
jno
mov
sub
inc
jge
sbb
call
mov
inc
je
mov
ret
cmps
jmp
ds
jne
or
pop
xor
jne
push
push
lea
push
cmps
(bad)
cmps
add
add
cmp
jb
and
add
arpl
aad
stc
sub
add
mov
push
jb
call
cli
scas
pop
pop
jl
mul
cmp
inc
dec
mov
inc
sub
push
je
dec
je
dec
jne
or
jne
mov
pop
jae
push
push
dec
add
push
loop
add
xchg
inc
dec
jb
add
add
add
and
int
mov
mov
fnstenv
mov
call
push
(bad)
mov
shl
mov
pop
jmp
jae
add
and
mov
inc
mov
jnp
enter
inc
pop
cvtdq2ps
mov
adc
call
and
je
mov
push
mov
xor
jmp
pop
or
inc
add
dec
or
call
inc
mov
jle
std
inc
mov
jmp
push
adc
pop
xor
sbb
xchg
push
jge
mov
dec
ds
mov
mov
sar
mov
mov
jns
cld
jmp
mov
fist
push
imul
test
mov
movs
test
jmp
or
pop
sub
test
jle
push
lea
aas
mov
and
mov
mov
imul
mov
imul
test
xchg
jmp
clc
adc
clc
push
add
push
or
mov
push
xor
jl
loopne
loope
adc
call
push
pop
pop
push
lea
into
pop
xor
mov
mov
pop
add
test
test
add
mov
mov
jbe
mov
mov
add
xchg
xchg
add
mov
mov
mov
inc
cmc
test
mov
mov
test
push
mov
mov
jmp
sub
push
call
jg
cs
pop
inc
add
cmp
dec
cld
xor
mov
inc
push
in
cmps
inc
mov
lahf
add
mov
sub
inc
or
and
lds
and
or
and
dec
jb
adc
and
rcr
xor
mov
xor
cmp
and
dec
and
mov
lock
test
mov
outs
adc
scas
pusha
dec
and
dec
sub
frstor
xor
jne
or
cmp
je
push
mov
push
jmp
and
jbe
test
out
mov
mov
mov
lea
sar
inc
add
cmp
cmp
imul
clc
ficom
cmp
jne
push
dec
cwde
out
mov
push
cs
adc
and
fcom
adc
mov
ffreep
push
add
inc
add
ror
dec
(bad)
out
xchg
out
dec
clc
aam
sbb
push
xchg
aad
pop
add
and
mov
mov
xchg
add
mov
sar
and
and
xor
and
test
mov
pop
mov
mov
add
push
pushf
sbb
sub
push
or
sbb
mov
lds
cmp
pop
mov
or
inc
push
movq
das
test
das
sbb
mov
mov
cmp
adc
adc
mov
clc
cs
test
xor
add
loopne
movs
add
pusha
das
inc
clc
and
xor
clc
sti
and
fnstenv
pop
out
and
dec
add
inc
cmp
sbb
call
clc
add
mov
fidivr
push
mov
add
(bad)
out
loope
xchg
jmp
fs
mov
add
call
sub
(bad)
and
jbe
lods
call
cmp
pop
add
xor
(bad)
call
mov
push
jmp
ror
clc
jge
test
push
in
cmp
je
add
jmp
rcl
mov
repnz
fwait
clc
ret
test
push
es
dec
adc
push
add
dec
sbb
push
call
dec
ret
cmp
lock
add
inc
call
xor
mov
inc
pushf
cmp
xchg
xchg
mov
ss
jne
and
and
pop
fist
push
pop
xor
jmp
sbb
jge
add
stos
sbb
rol
sub
mov
push
int
mov
cmp
push
enter
mov
sar
or
sbb
mov
sbb
icebp
sub
sub
mov
scas
push
and
call
shl
xor
inc
push
add
or
in
inc
and
adc
jle
dec
out
mov
scas
push
rcl
mov
loop
jg
pop
push
dec
cdq
and
jge
sar
test
mov
add
sub
sbb
jl
xor
add
cmps
scas
fnsave
mov
and
cmp
mov
das
call
inc
push
push
pop
cmp
cld
jge
inc
jne
jmp
out
fiadd
in
add
test
cmp
je
and
mov
sahf
mov
or
sbb
adc
clc
add
jmp
mov
data16
aaa
push
jge
add
xor
call
movzx
mov
push
mov
mov
js
std
push
gs
pop
mov
adc
push
xrelease
sub
mov
fidivr
loopne
add
push
inc
repnz
or
loop
movzx
adc
mov
or
movzx
jecxz
mov
jg
fdivr
mov
mov
inc
cmc
or
pop
pop
je
xchg
push
pop
loop
out
jmp
hlt
rcr
cmc
leave
loopne
jne
in
xchg
hlt
push
test
shl
cmp
mov
cs
add
or
jmp
mov
push
dec
pop
xchg
cli
add
or
add
cld
pop
ins
test
sbb
mov
ds
adc
or
loope
inc
mov
push
dec
inc
add
ds
lds
jl
sbb
iret
pop
ds
(bad)
xor
or
or
jge
inc
jne
cld
push
fcom
fs
in
jne
cmp
jne
cmp
jne
mov
inc
jmp
push
repnz
add
or
js
and
adc
dec
cmc
je
sbb
or
or
jnp
mov
add
dec
(bad)
push
jle
mov
jge
or
ret
xor
push
and
(bad)
xchg
js
pop
jp
inc
call
add
arpl
rcl
mov
add
mov
add
clc
add
je
js
rol
jnp
and
add
inc
lock
add
or
push
mov
mov
push
ret
push
les
push
mov
aas
nop
jecxz
hlt
mov
(bad)
call
cld
push
inc
lock
cmp
jge
cmp
jl
mov
mov
mov
retf
cmpxchg
retf
mov
ja
sub
pusha
and
jbe
cmp
sar
hlt
xchg
jg
outs
movs
jg
push
pop
jmp
adc
adc
mov
call
push
out
adc
sbb
push
sbb
test
xor
in
mov
addr16
push
pop
sub
inc
inc
sbb
mov
and
pop
mov
js
sbb
dec
mov
lea
mov
movzx
add
inc
push
cmp
mov
lock
hlt
fucom
(bad)
jo
pushf
jno
fchs
stos
adc
push
loope
push
loop
dec
adc
scas
shl
push
in
dec
mov
push
mov
push
push
push
pushf
popf
pushf
out
dec
jmp
pushf
jmp
inc
hlt
clc
add
cmp
jg
(bad)
cmp
pop
lea
push
and
ss
mov
cdq
mov
mov
in
mov
leave
mov
cmp
jl
sub
mov
adc
call
ja
enter
hlt
jmp
or
or
rcr
cli
adc
call
cld
mov
mov
push
cmp
xor
mov
or
mov
popa
mov
add
push
call
sbb
adc
(bad)
jmp
sbb
xor
add
adc
xor
add
cmps
out
or
jo
test
pop
jo
call
mov
jne
push
call
mov
(bad)
cmp
sbb
xor
mov
push
sar
jne
push
sub
or
inc
fmul
aam
pusha
add
inc
dec
dec
test
icebp
pusha
mov
add
xor
je
cs
mov
(bad)
jg
aad
inc
adc
lahf
mov
mov
and
mov
inc
call
dec
in
sbb
push
push
inc
call
cmp
aam
aam
or
mov
test
or
jne
push
push
call
mov
(bad)
pop
push
inc
mov
into
mov
xor
cmp
jae
leave
(bad)
je
cmp
jne
mov
pop
mov
or
in
fnsave
inc
(bad)
and
add
jmp
inc
jo
sbb
pop
dec
fist
pop
mov
sbb
gs
test
add
pop
call
push
or
(bad)
pop
paddd
mov
push
or
mov
push
add
push
sbb
mov
mov
or
mov
(bad)
pop
pop
ffree
pop
sub
sbb
ret
jge
ins
mov
pop
inc
fdiv
mov
jmp
es
xor
inc
pop
pop
pop
leave
ret
mov
add
dec
mov
push
mov
pop
jmp
push
mov
or
in
push
lea
pop
add
fisttp
inc
pop
jmp
mov
xor
shl
leave
mov
dec
inc
fnsave
adc
aas
inc
sbb
dec
cld
dec
sub
push
pop
neg
pop
cdq
leave
adc
outs
test
dec
push
adc
rol
fadd
aas
and
or
jmp
adc
push
push
out
fstp
mov
push
dec
xor
out
sub
push
shl
jg
mov
jb
je
fbld
and
jo
mov
xor
pop
sub
pop
ins
adc
cld
ins
stos
pop
inc
loop
push
inc
or
add
push
push
sub
pushf
jo
rcr
outs
jmp
mov
add
add
cmp
inc
cmp
xor
sub
jle
rcr
je
test
jne
jg
lock
pop
add
jmp
mov
mov
hlt
fcomp
jecxz
je
or
iret
jge
dec
pop
pop
rol
dec
sbb
push
sbb
outs
xchg
ds
or
mov
loopne
mov
ja
or
addr16
mov
jne
imul
and
add
movzx
dec
inc
xchg
inc
jg
sbb
adc
or
jne
cmp
cmp
mov
dec
stc
mov
idiv
cmps
ja
mov
push
or
push
mov
call
add
pop
pop
ret
out
je
adc
fstp
js
sahf
pop
jne
cmp
jmp
or
jmp
push
call
shr
test
xchg
jg
ret
cmp
dec
and
jg
add
push
cmp
mov
cmp
sbb
cmp
push
loopne
push
je
cmp
loop
jmp
jge
aas
call
int
mov
mov
inc
std
jmp
push
jmp
sub
bsr
dec
je
sub
ins
imul
sar
inc
jl
add
shr
xor
call
cld
call
jg
je
cmp
sbb
pushf
jle
cmp
and
sub
jle
ret
mov
mov
sqrtps
xor
lods
pop
pop
jmp
push
call
and
je
cmp
sub
add
jle
test
fidivr
cmp
add
pop
or
or
push
cwde
push
call
jmp
push
call
stos
sti
pop
push
push
call
jno
ins
mov
mov
mov
clc
and
call
pop
jmp
cmp
in
sbb
cs
cmp
jl
je
xor
inc
(bad)
jmp
cmp
and
pop
push
pop
jmp
pop
inc
push
jmp
mov
stos
sub
cld
ret
cmp
call
in
or
mov
lea
cdq
sbb
jne
inc
pop
pop
sbb
add
jmp
inc
push
inc
and
mov
clc
mov
sbb
push
call
repnz
jne
xor
(bad)
fist
mov
adc
jb
(bad)
cmp
jae
push
mov
mov
mov
out
inc
test
inc
push
jge
mov
out
add
dec
cmp
jl
cmp
pop
(bad)
in
std
dec
pop
and
add
cmp
je
lea
or
lea
cmp
and
(bad)
lea
mov
(bad)
fucom
mov
add
test
fs
shr
jne
add
sbb
sbb
pop
pop
je
dec
je
sub
and
dec
into
aaa
or
and
pop
xor
jmp
adc
es
ins
bound
leave
mov
fisttp
aam
jle
add
push
mov
mov
mov
jg
inc
inc
retf
add
pop
push
lea
and
(bad)
mov
fbstp
out
data16
pop
inc
add
arpl
std
xchg
out
and
popa
or
push
cli
pop
mov
mov
(bad)
sti
jnp
push
clc
push
jl
sub
cli
push
and
inc
dec
cmp
mov
call
stos
ja
pop
add
js
sbb
mov
or
fwait
jo
sbb
mov
mov
mov
xor
mov
mov
inc
cmp
je
mov
sbb
stc
add
cmp
jg
mov
aaa
adc
mov
mov
jmp
mov
push
ins
cmp
mov
jne
mov
mov
mov
xor
rcr
add
cld
push
xchg
mov
dec
add
push
test
shl
add
call
mov
and
shl
add
inc
cmp
repz
push
fiadd
jne
mov
sbb
scas
add
add
inc
test
std
not
or
add
call
jnp
out
push
push
push
call
pushf
cli
es
sbb
push
mov
mov
out
push
call
cmp
pop
jl
add
ds
stos
(bad)
(bad)
(bad)
out
inc
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
add
pop
bound
xor
pop
dec
je
stos
jmp
mov
jmp
cmp
je
and
pusha
add
pop
mov
sti
jmp
adc
pop
bound
cmp
jne
xor
cmp
je
cmp
and
pop
cmp
je
(bad)
out
cmc
(bad)
inc
add
retf
cmp
je
mov
jmp
push
call
or
dec
add
adc
jl
into
cmp
adc
and
push
aaa
push
out
push
call
inc
mov
cmp
adc
out
bound
add
jle
fnstcw
lahf
adc
fsubr
(bad)
aad
inc
mov
pop
das
mov
mov
or
std
mov
cld
pop
cld
add
jne
push
call
sbb
ins
adc
push
push
call
mov
cmps
pop
jl
add
push
sbb
jl
inc
std
aas
or
push
jno
mov
cmp
je
jmp
push
jne
sbb
cmp
add
jmp
mov
mov
mov
jg
out
out
add
ror
rol
inc
add
or
pop
leave
ret
call
xchg
and
or
xor
cmp
je
cmp
jne
mov
(bad)
pop
cmp
je
setge
mov
add
dec
cmps
retf
jl
and
dec
pop
jne
pop
shl
es
pop
sub
adc
inc
inc
mov
jae
mov
dec
jmp
pop
jl
mov
mov
pusha
push
add
pop
not
jl
mov
cmovo
or
dec
mov
jle
or
add
push
cmp
je
out
out
jle
jg
pop
adc
cs
cmp
xchg
rol
mov
ret
sub
cmp
lods
inc
adc
cli
xor
aad
outs
dec
adc
cli
xchg
jmp
(bad)
clc
xchg
cld
fcom
mov
je
mov
or
loop
pusha
jo
cli
adc
inc
shr
add
call
inc
or
clc
add
test
pusha
adc
pop
mov
add
and
test
dec
push
mov
cmp
add
mov
push
mov
mov
outs
cli
(bad)
call
sub
jne
mov
call
je
pop
inc
clc
mov
push
cmp
mov
mov
mov
mov
mov
mov
dec
or
dec
or
int3
push
lea
pop
rol
add
jle
(bad)
call
mov
cmp
mov
mov
mov
mov
mov
mov
mov
inc
icebp
in
mov
jl
sub
xor
push
push
lea
mov
call
adc
ffree
inc
ror
jmp
mov
icebp
dec
clc
sar
movs
mov
aas
or
mov
mov
push
pop
push
push
xchg
leave
push
lock
mov
mov
mov
push
dec
test
je
cmp
int3
push
pushf
in
jge
push
xlat
iret
imul
or
stos
sbb
mov
mov
sbb
jge
mov
adc
stos
ret
(bad)
aas
xor
mov
inc
mov
ja
add
jl
mov
rol
dec
sbb
jne
mov
mov
mov
dec
or
rcl
mov
lea
mov
push
pop
lea
repz
inc
inc
sar
cmp
xchg
sbb
mov
mov
je
das
jecxz
add
or
and
dec
push
and
push
dec
jmp
xchg
mov
mov
mov
mov
mov
adc
inc
add
jb
pop
lods
pop
or
add
cs
ret
xlat
loopne
dec
cmp
(bad)
jge
jo
inc
test
jmp
or
inc
les
call
mov
inc
aam
mov
xor
leave
inc
jmp
test
sar
xor
and
les
xchg
loopne
mov
lock
mov
in
jmp
inc
cmp
push
mov
push
pop
or
and
das
test
xchg
sar
pop
cmp
out
clc
sbb
dec
cld
cmp
js
pop
fadd
push
jecxz
cwde
je
xor
shr
lock
loop
enter
shl
and
cmp
jecxz
(bad)
add
loopne
sbb
and
mov
dec
adc
loop
pop
hlt
iret
sbb
adc
xor
jbe
call
dec
xor
jmp
(bad)
aas
mov
lock
dec
push
sti
fwait
dec
inc
lock
push
xchg
dec
jg
sti
xchg
shr
inc
lock
mov
or
rol
push
clc
sbb
dec
clc
mov
into
adc
enter
int3
dec
stos
push
clc
mov
dec
mov
clc
add
inc
adc
and
(bad)
loopne
fbld
push
push
xor
cmps
(bad)
push
(bad)
pop
call
and
fstp
lahf
cmp
adc
pop
sub
mov
es
sbb
lahf
mov
cmp
sbb
loopne
mov
add
lea
iret
mov
std
out
add
jle
cmp
leave
pop
or
push
push
mov
loopne
call
mov
sbb
cld
call
sar
test
je
mov
or
lock
std
jmp
mov
pop
loopne
sbb
in
pop
add
push
call
sbb
sbb
xchg
pop
fild
mov
call
mov
pushf
movs
pop
imul
aam
push
cli
mov
je
gs
inc
inc
mov
sar
mov
lea
or
inc
ror
mov
pusha
or
inc
xor
xor
pop
sbb
push
inc
pusha
sub
jmp
jge
push
push
and
mov
xlat
out
test
enter
stos
and
jmp
rol
mov
lea
sar
and
cli
inc
(bad)
movzx
bound
adc
jne
push
pop
push
call
not
sub
pop
enter
clc
or
aaa
and
clc
loopne
pop
cmp
je
cmp
adc
mov
call
jge
push
dec
push
push
call
xlat
and
inc
cli
ins
jmp
clc
test
mov
xor
xchg
or
test
dec
cld
mov
dec
out
jg
push
in
lea
cmp
mov
jns
es
dec
mov
xor
push
fadd
(bad)
(bad)
push
leave
mov
test
jl
add
mov
jmp
mov
jmp
dec
js
fdivr
outs
push
inc
cmp
mov
mov
test
je
test
in
mov
fwait
inc
mov
xlat
xchg
mov
daa
lock
ds
test
in
inc
push
xor
cmp
fnstcw
push
or
loope
or
imul
pop
loopne
adc
dec
and
add
aaa
jne
cmp
jbe
mov
test
push
push
loope
lock
pop
push
push
adc
inc
pop
je
push
fs
or
add
sub
sar
js
push
mov
dec
hlt
jne
mov
into
mov
mov
pop
mov
mov
dec
cs
into
dec
mov
jg
mov
inc
call
rcl
mov
and
stos
mov
hlt
test
jg
outs
ficom
js
jmp
add
push
mov
xchg
inc
or
fstp
pop
or
xchg
je
cmp
mov
mov
cmp
jl
mov
mov
xchg
loopne
add
cmp
je
dec
cmp
stos
jbe
jg
push
pop
or
and
mov
inc
ins
rol
lock
lock
sbb
sbb
push
repnz
cmp
nop
and
mov
push
jmp
and
jge
jle
dec
outs
icebp
mov
add
fadd
jecxz
add
lods
cmp
lock
cmp
jge
clc
cld
pop
pusha
jmp
add
cmp
inc
mov
(bad)
jmp
mov
test
jge
xor
cmp
mov
sbb
xchg
int3
cmp
(bad)
test
mov
mov
add
mov
(bad)
cmp
je
mov
jmp
xchg
xor
outs
push
pop
mov
push
pop
mov
pusha
out
pop
cdq
jno
xor
fdiv
data16
lea
retf
xor
mov
xor
adc
(bad)
jl
add
(bad)
push
mov
cmp
je
lea
mov
jmp
inc
sbb
(bad)
jl
(bad)
out
in
sub
and
and
lea
push
push
push
sti
out
xchg
call
mov
add
(bad)
(bad)
das
mov
add
jb
sar
ja
mov
mov
mov
mov
stos
or
rcl
out
dec
push
shl
mov
movs
cmp
mov
inc
fwait
jl
sar
call
mov
sbb
sar
jmp
push
cmp
repnz
mov
push
shl
push
cmp
dec
cld
add
clc
pop
cmp
jl
add
pop
jle
push
daa
mov
add
daa
sbb
cmp
jl
popa
ret
jle
mov
js
mov
mov
sub
cmp
jbe
mov
and
mov
or
inc
add
repz
(bad)
jmp
jnp
ja
or
push
mov
push
call
or
clc
pop
out
es
and
test
stos
(bad)
add
inc
cmp
jg
adc
je
lea
cmp
js
xor
mov
(bad)
(bad)
call
push
push
push
push
push
push
call
add
cmp
jge
jmp
mov
pop
leave
inc
add
push
or
jmp
pop
jmp
dec
js
add
or
pop
push
rol
add
inc
push
add
pop
nop
out
xchg
inc
adc
ins
and
jg
imul
cmp
jo
mov
push
push
add
add
xchg
fwait
and
xchg
mov
les
push
pop
mov
mov
jae
jne
sti
pop
and
cmp
dec
mov
cld
jle
arpl
loop
lea
mov
mov
imul
(bad)
call
push
push
push
call
add
ret
(bad)
std
dec
pop
mov
and
mov
mov
(bad)
mov
xabort
inc
sbb
add
inc
and
jge
jbe
mov
mov
popf
or
mov
adc
jg
push
add
push
mov
add
outs
js
imul
jle
add
pop
add
cmp
mov
mov
lock
add
int
or
fwait
retf
or
and
ret
(bad)
mov
sbb
push
mov
cmp
mov
add
movzx
ja
ss
outs
pop
cmp
adc
add
push
mov
jle
cdq
clc
mov
mov
mov
add
cmp
in
push
lock
sahf
jae
mov
inc
mov
add
aad
jle
adc
sbb
hlt
jge
cdq
mov
shr
add
lock
jb
dec
cmp
jle
dec
fs
push
lea
push
push
push
push
call
pop
add
add
cmp
mov
neg
out
or
js
adc
mov
adc
push
mov
jle
mov
sub
add
(bad)
out
sbb
xor
inc
mov
inc
add
shl
xchg
mov
cmp
test
ret
push
mov
call
adc
push
imul
mov
add
cmp
pop
sbb
(bad)
fucomp
mov
inc
add
enter
push
lea
push
push
push
call
in
inc
adc
int3
inc
inc
cmp
mov
(bad)
shr
cld
fndisi(8087
mov
cmp
and
(bad)
(bad)
out
aam
push
sub
mov
movzx
mov
mov
inc
movzx
lea
lea
sar
(bad)
jg
inc
mov
add
sub
dec
je
mov
sbb
inc
iret
jne
out
lea
and
mov
cmp
das
(bad)
fst
mov
add
adc
mov
dec
cld
sbb
cmp
sar
add
push
add
add
xor
xchg
cmps
or
(bad)
icebp
add
ret
dec
pushf
cmps
ins
(bad)
addr16
adc
push
icebp
(bad)
or
adc
mov
jmp
mov
and
add
movzx
movzx
or
add
inc
movzx
inc
movzx
out
stos
inc
lea
add
lea
mov
inc
inc
lea
lea
(bad)
fstp
pop
or
pop
or
pop
sub
dec
in
je
call
add
mov
lea
lea
sti
out
call
mov
inc
inc
inc
lea
or
inc
xchg
inc
clc
jne
lea
lea
lea
sub
clc
add
repnz
jno
inc
test
div
rcl
call
jl
sub
sbb
add
jle
cmp
loop
xlat
or
outs
sbb
add
hlt
dec
cld
push
mov
je
retf
js
add
fcom
mov
int3
cld
mov
mov
repz
adc
icebp
push
pop
jmp
add
scas
sti
inc
fild
mov
jg
add
ja
mov
arpl
pop
add
mov
push
mov
pop
mov
mov
inc
scas
popf
(bad)
pop
cdq
idiv
mov
push
xchg
cld
mov
cmp
dec
cdq
call
add
inc
jp
xor
pusha
xchg
mov
shl
cmp
ins
sub
cmp
rcr
bound
fdivr
les
out
je
cmp
jbe
jmp
inc
mov
dec
sub
jmp
mov
shl
sbb
jbe
add
jb
jl
inc
iret
(bad)
xor
mov
test
les
test
(bad)
clc
cdq
idiv
test
jne
popa
mov
dec
jp
mov
lock
adc
sub
adc
(bad)
out
jp
inc
call
add
mov
pop
pop
push
imul
add
push
or
call
sbb
and
adc
dec
fst
push
jl
ret
fild
push
push
mov
in
retf
in
imul
dec
aam
ds
mov
dec
push
repnz
mov
jg
loopne
jo
test
inc
(bad)
jp
data16
imul
loopne
scas
jmp
mov
or
xor
or
(bad)
(bad)
jmp
mov
or
or
mov
or
or
or
or
test
jne
movsx
test
(bad)
dec
scas
cmp
out
mov
mov
mov
mov
in
test
(bad)
scas
mov
mov
mov
mov
push
inc
movsx
imul
dec
jle
add
imul
push
adc
add
xlat
mov
sub
push
jne
and
cli
(bad)
(bad)
(bad)
out
repnz
imul
mov
mov
add
sub
shl
add
sub
shl
mov
jge
movsx
imul
mov
movsx
fistp
scas
pop
and
imul
push
loopne
cld
pop
jae
mov
mov
lea
fmul
or
inc
add
mov
add
imul
fadd
fild
lds
out
(bad)
jg
popf
(bad)
pop
or
xor
(bad)
(bad)
cmp
sti
(bad)
out
(bad)
lods
or
mov
sub
mov
imul
adc
ficom
jmp
fidivr
add
sti
mov
hlt
add
add
mov
imul
cld
add
add
mov
pop
enter
dec
sub
sar
mov
mov
(bad)
std
dec
add
sti
or
int3
lea
and
and
jo
mov
mov
push
mov
and
mov
mov
ins
sbb
mov
lea
idiv
or
and
xchg
mov
add
cmp
inc
push
mov
fist
jne
test
jno
inc
mov
lock
jg
cld
xchg
mov
mov
mov
add
mov
mov
mov
(bad)
inc
jmp
mov
or
or
mov
or
loopne
mov
or
or
jecxz
add
sar
and
(bad)
out
mov
mov
mov
mov
mov
pop
dec
push
hlt
mov
jmp
(bad)
call
add
mov
imul
js
ds
sub
ins
push
or
add
xchg
mov
push
call
sti
rcr
shl
cld
lea
fbld
fild
adc
mov
add
imul
mov
clc
adc
mov
pop
sbb
imul
push
cld
fsubr
mov
stos
fdiv
stos
cmc
(bad)
outs
jb
movs
mov
imul
add
pop
pop
imul
sub
jnp
adc
mov
or
(bad)
inc
add
add
cli
sar
and
mov
mov
mov
call
and
mov
(bad)
(bad)
mov
mov
out
lea
sub
cli
sub
and
pop
add
aam
pop
push
cmps
fmul
fs
cld
and
mov
dec
xchg
dec
data16
ror
clc
adc
adc
in
(bad)
and
add
call
xchg
mov
push
xchg
inc
add
scas
mov
sti
adc
jbe
mov
push
loop
add
sahf
xor
fimul
push
push
mov
push
pop
sub
add
add
ret
or
jge
inc
lea
mov
add
pop
or
(bad)
(bad)
mov
repnz
jne
cmp
lea
jne
mov
(bad)
out
ss
pop
or
mov
cmp
jbe
mov
lea
push
shr
push
shr
cmp
jb
or
aaa
rcl
test
cli
lea
(bad)
fist
out
in
and
add
test
mov
jne
jmp
mov
add
pop
or
retf
sti
stos
jmp
shr
add
(bad)
pop
test
mov
or
jecxz
add
pop
sbb
add
ror
or
pop
loope
xor
(bad)
adc
mov
pop
add
enter
test
cs
jl
cmp
jge
lea
push
push
call
rol
cmp
(bad)
stos
mov
add
adc
adc
mov
mov
sti
mov
or
adc
mov
enter
mov
xchg
push
xor
mov
push
or
fld
push
mov
mov
stos
xchg
mov
jl
mov
repz
adc
mov
call
jns
out
mov
xor
test
jbe
mov
ins
jb
(bad)
imul
sar
push
cdq
sub
loopne
mov
or
add
inc
dec
mov
jne
cmp
jb
xor
lock
clc
cmc
fdiv
push
inc
dec
test
shl
mov
mov
jae
sbb
test
fnstcw
ret
mov
shl
in
pop
popf
and
jge
jbe
mov
in
ins
test
mov
in
shl
push
cld
adc
pop
cld
mov
or
(bad)
mov
cmp
jb
mov
or
mov
pop
inc
bnd
jecxz
inc
adc
add
pop
pop
jmp
push
ror
enter
(bad)
int3
jp
xor
jge
dec
sbb
call
js
dec
or
or
dec
adc
dec
and
inc
and
loope
pop
cld
mov
mov
mov
rcl
jb
push
outs
pop
scas
xchg
sbb
inc
inc
push
cli
(bad)
dec
push
mov
mov
push
push
xor
xor
jmp
cmp
jne
jg
jmp
rol
repnz
pop
cli
mov
movs
loope
inc
inc
jmp
outs
fcom
loop
es
add
test
jle
push
push
push
std
and
push
call
(bad)
jl
mov
jb
adc
jg
adc
mov
jae
jmp
rep
(bad)
fild
dec
or
ror
inc
cmp
push
mov
mov
jmp
mov
dec
cld
imul
push
(bad)
dec
adc
adc
es
add
add
test
jl
sbb
add
pop
or
xchg
or
push
call
std
adc
or
mov
(bad)
(bad)
fbld
mov
mov
mov
test
jne
mov
jmp
jg
fsub
adc
bound
mov
cld
mov
jp
inc
cmp
pop
sbb
scas
fdiv
jg
fcomip
inc
adc
test
jle
mov
in
jge
mov
mov
jnp
call
mov
add
sub
cmp
xlat
ret
add
cmc
or
mov
and
push
in
jmp
aas
push
stos
call
jmp
mov
push
adc
add
mov
add
cmp
int3
and
cld
xchg
mov
adc
(bad)
or
push
inc
jne
lea
cmp
push
mov
ja
pushf
cmp
ja
jmp
inc
sbb
enter
push
adc
sar
fidiv
icebp
push
lock
jle
aam
or
inc
aas
jle
fstp
push
jmp
add
or
pop
ret
inc
scas
test
pop
or
add
mov
jmp
or
adc
fadd
fdivrp
inc
sbb
add
pop
sub
sti
pop
inc
cld
jae
cmp
jae
sbb
mov
jmp
or
xchg
sti
push
pop
sbb
jle
add
jno
xchg
sub
sub
je
push
xchg
and
xor
aad
les
in
aam
clc
jp
mov
add
rol
lea
adc
cmp
mov
push
push
cdq
clc
and
cmp
add
jle
and
cwde
ret
mov
and
adc
add
or
adc
xor
data16
sub
jg
nop
shr
mov
cmp
jae
cmp
jae
leave
adc
mov
jle
mov
or
out
sub
adc
call
test
pop
sbb
rol
xchg
jg
or
fist
jo
jl
(bad)
dec
test
jne
mov
jmp
cmp
cmp
add
or
inc
and
call
lahf
retf
jmp
and
mov
and
mov
add
sahf
cmp
je
(bad)
mov
lea
add
or
(bad)
shr
jle
cmc
cmp
ret
jne
sbb
in
xor
and
pop
add
xor
inc
xchg
xor
push
es
pop
sbb
pop
mov
sar
push
call
dec
pop
pop
jns
push
push
push
call
and
lods
(bad)
cmps
shl
ret
es
pop
add
push
shr
adc
push
mov
call
add
cmp
jne
push
call
or
mov
pop
push
mov
jb
stc
sti
jmp
mov
mov
adc
or
(bad)
push
sti
cmp
adc
push
sbb
or
jg
inc
and
mov
lea
adc
sub
dec
cmp
inc
hlt
(bad)
dec
sub
dec
jne
mov
mov
mov
or
xchg
or
shl
aaa
icebp
pop
add
mov
lea
lock
dec
adc
add
fild
cld
ja
sbb
clc
mov
popf
or
push
call
jmp
std
inc
push
mov
and
dec
pop
or
lea
mov
mov
xor
(bad)
mov
rcl
adc
punpckhdq
pop
push
push
call
jo
and
inc
sbb
dec
mov
inc
lea
cdq
idiv
stos
add
sub
or
dec
xor
cdq
dec
sub
cmps
pop
jno
xchg
sbb
adc
cmp
(bad)
cmp
mov
dec
jne
adc
push
in
push
push
jmp
call
mov
xor
xor
mov
inc
shr
push
cmc
out
adc
jne
imul
add
push
sar
lock
cmp
jb
sub
add
cmp
jb
es
jmp
xor
adc
mov
jmp
test
je
movzx
add
inc
add
dec
jne
mov
add
xor
div
mov
jmp
mov
add
jb
cwde
mov
mov
mov
and
mov
adc
repnz
add
pop
add
enter
add
push
pop
or
and
and
push
jg
dec
lsl
add
dec
jne
mov
int3
div
mov
mov
idiv
dec
or
inc
dec
test
fnstcw
call
adc
adc
shr
rcr
push
sub
les
and
pushf
mov
sahf
xor
mov
aad
push
jmp
icebp
mov
mov
shl
or
pop
sub
sbb
adc
ins
or
adc
or
clc
(bad)
fist
or
mov
mov
push
push
mov
enter
sbb
adc
or
(bad)
cmp
lea
push
push
call
mov
pop
je
adc
or
mov
call
jl
add
adc
inc
fmul
mov
aam
and
cld
add
mov
or
rol
sbb
fisttp
fcmovb
call
push
xchg
jne
loop
jmp
cmp
push
mov
pop
jb
add
cld
dec
clc
xor
add
ret
dec
dec
sbb
movzx
xor
push
fadd
jmp
or
ret
test
sbb
xor
fcompp
out
enter
inc
dec
push
std
fyl2xp1
xor
jbe
retf
lea
popa
xchg
lock
sub
xor
call
jo
test
cmp
jb
mov
add
adc
mov
outs
test
mov
jne
cmc
add
leave
mov
xor
and
cmp
call
pop
leave
lahf
adc
cmp
test
or
loop
push
dec
ja
call
(bad)
call
js
mov
shr
mov
inc
mov
mov
mov
pop
loopne
loopne
test
mov
mov
daa
cmp
(bad)
(bad)
js
cmp
jbe
mov
test
je
push
push
push
call
(bad)
fistp
add
add
add
sub
push
sub
sbb
outs
jmp
jne
mov
lea
cdq
push
add
xor
outs
pop
add
mov
jno
mov
dec
or
push
or
retf
jl
out
pop
cmp
je
xor
xor
cmp
jne
xor
ja
cmp
je
mov
mov
mov
mov
add
sub
test
add
test
pop
push
push
push
call
sbb
or
mov
mov
fwait
jne
in
lods
inc
adc
mov
adc
or
sbb
ret
cs
jnp
or
and
add
or
sub
ja
jne
push
jmp
test
sbb
add
add
pop
mov
mov
pop
sbb
or
inc
add
jmp
mov
sete
dec
and
cmp
sete
dec
and
add
cmp
xor
sbb
or
shl
fucomi
xchg
in
(bad)
cmp
setne
add
xrelease
sbb
dec
add
jmp
adc
dec
adc
push
rcl
ret
mov
adc
dec
sbb
cld
and
sbb
pop
adc
jge
sbb
(bad)
jl
sub
out
sbb
mov
sub
adc
sbb
push
push
call
mov
inc
push
pop
or
in
or
aas
xor
or
rol
cwde
adc
call
and
jo
cmp
scas
adc
ror
setne
fwait
add
ret
mov
cmp
enter
je
inc
idiv
or
xor
push
pop
mov
div
pop
or
add
fstp
sbb
mov
call
pop
sub
movzx
call
loope
icebp
push
xor
or
hlt
mov
cmp
jne
es
repz
(bad)
mov
mov
and
xor
mov
cmp
je
cmp
jbe
sub
push
mov
cdq
sti
mul
pop
test
mov
sub
mov
mov
mov
mov
into
fst
fstp
fdivr
inc
and
fs
in
jo
mov
and
adc
and
jmp
add
sti
mov
cmp
jne
ja
or
adc
sub
into
add
push
cmp
je
gs
test
inc
outs
ret
xchg
imul
mov
and
push
sbb
push
sbb
mov
or
jmp
jmp
adc
ror
jmp
ret
repnz
into
jno
xchg
pop
cld
mov
rcl
loope
jne
out
mov
data16
and
movs
pop
adc
pop
out
mov
aaa
rcl
hlt
push
sbb
addr16
je
je
(bad)
fs
inc
scas
jbe
mov
mov
cmc
mov
dec
or
xor
mov
mov
inc
push
push
mov
call
loopne
sbb
cmp
je
inc
inc
jge
cmps
add
sbb
(bad)
(bad)
and
pop
add
paddw
dec
clc
jg
jbe
xchg
cmp
jmp
push
mov
je
mov
pushf
sub
xor
jmp
cmp
jne
mov
sub
ud0
jne
lea
sti
xchg
call
xchg
sub
in
mov
ret
je
ja
je
add
cmp
jne
push
call
pop
jmp
add
fisttp
push
call
adc
cld
call
inc
mov
mov
lea
pop
jge
xchg
jbe
call
and
loop
test
adc
sbb
or
dec
jg
xor
inc
jmp
push
push
cmps
jp
dec
sti
cmp
fwait
nop
test
push
xor
add
push
xor
sbb
xchg
or
cmp
test
pop
out
out
mov
push
clc
(bad)
call
or
or
jle
neg
push
ror
sub
sbb
fucomp
cmp
sbb
(bad)
dec
jle
add
je
or
inc
mov
dec
test
(bad)
(bad)
inc
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
sbb
or
or
mov
or
mov
push
and
pop
inc
mov
sub
in
in
sahf
in
jbe
call
inc
test
cmp
adc
sbb
dec
bound
pop
sbb
jmp
or
fistp
sub
shl
mov
push
xor
mov
xor
mov
or
dec
dec
rcr
movzx
mov
dec
and
jg
in
mov
add
jle
mov
mov
cld
pop
cld
dec
dec
mov
mov
pop
ret
mov
inc
jl
sbb
inc
pop
clc
minps
call
mov
mov
mov
lea
cli
call
cmp
push
mov
jbe
sub
add
clc
std
jmp
jp
cmp
jmp
mov
mov
mov
mov
mov
jb
shr
mov
cmp
cmps
(bad)
(bad)
sti
mov
jbe
push
inc
or
mov
cmp
jne
dec
dec
test
rcr
(bad)
call
or
mov
inc
inc
inc
inc
mov
inc
cmp
jne
sbb
pop
xor
and
fs
inc
sbb
or
jg
pop
add
shl
mov
sub
add
xchg
(bad)
out
outs
mov
out
or
jge
lea
cli
(bad)
fstp
mov
push
mov
jne
mov
movzx
cmp
inc
out
stos
leave
or
(bad)
jmp
dec
push
mov
ja
add
xor
jmp
add
mov
(bad)
sti
sbb
sbb
mov
cmp
jne
nop
sar
sbb
sbb
sbb
pop
xor
push
sbb
sbb
pop
fs
adc
add
ret
sub
shr
push
inc
jl
mov
mov
cmp
push
(bad)
jmp
push
dec
add
sub
push
mov
push
mov
sub
mov
ins
mov
sub
lea
push
jb
mov
push
lea
push
push
call
push
(bad)
call
sub
aas
sub
mov
lea
dec
dec
movzx
mov
sub
std
(bad)
call
cmp
sbb
not
and
dec
mov
jne
mov
mov
pop
add
mov
mov
cmp
push
test
mov
add
cmp
jecxz
cmp
or
push
cld
mov
test
mov
jmp
sub
mov
dec
dec
sbb
call
inc
push
push
adc
out
(bad)
(bad)
jmp
cmp
jne
adc
mov
(bad)
push
jo
jnp
mov
push
push
call
cld
add
les
inc
or
inc
je
or
je
inc
jb
add
movzx
mov
mov
call
inc
dec
shl
movzx
xor
and
dec
cmp
push
(bad)
loopne
push
push
daa
jmp
inc
(bad)
je
or
dec
or
rol
mov
jae
mov
xor
shl
xchg
fimul
add
push
pop
mov
je
fcomip
(bad)
inc
je
cmp
jb
sub
cmp
mov
mov
jl
sub
retf
xor
push
sub
push
push
push
call
dec
jl
scas
pop
jle
adc
pusha
fimul
add
(bad)
(bad)
pop
mov
daa
sub
sub
mov
iret
inc
inc
cmp
nop
std
int
rol
push
push
push
call
shr
dec
adc
mov
je
mov
xor
and
add
push
loopne
and
push
dec
jae
in
jo
cmp
repnz
pop
test
imul
nop
and
fadd
push
jae
pxor
mov
pop
call
adc
aas
or
je
push
or
add
lds
mov
xchg
or
lock
jge
jle
shl
sbb
mov
adc
cdq
std
jg
sbb
push
inc
mov
fdiv
inc
xor
dec
xchg
cmp
cmp
push
adc
cmp
(bad)
fadd
cmc
inc
call
retf
cmp
ja
mov
push
add
je
pusha
or
fdiv
fisttp
adc
int
movsx
cmp
add
pusha
jb
push
mov
mov
mov
(bad)
aas
mov
sub
sub
mov
mov
sbb
mov
inc
movzx
add
out
(bad)
(bad)
call
inc
cmp
movzx
jae
mov
jmp
shr
or
out
jmp
sbb
movzx
lea
pushf
dec
xor
jg
leave
dec
cmp
shr
je
arpl
dec
je
pop
cmp
jb
shl
sbb
inc
clc
ins
mov
inc
cmp
mov
add
shl
xor
mov
dec
cmp
dec
mov
jne
jmp
mov
pushaw
add
or
test
mov
xchg
loope
xchg
and
sub
or
in
leave
in
inc
mov
xchg
mov
in
dec
mov
jecxz
jmp
test
xor
inc
mov
push
call
sub
adc
jo
int
jmp
jl
and
dec
out
jo
xlat
call
inc
cmp
aaa
shr
push
(bad)
call
xor
push
mov
fdivr
push
mov
scas
(bad)
jae
cmp
stos
and
mov
scas
and
in
mov
mov
arpl
scas
pop
iret
mov
movnti
jmp
jl
or
out
inc
je
out
(bad)
inc
out
pop
mov
cmp
loop
mov
pop
mov
mov
je
and
cmp
mov
xor
cmpps
es
iret
pop
or
inc
je
shr
pop
clc
push
mov
call
adc
jne
adc
aam
or
cli
adc
inc
adc
adc
add
xor
(bad)
cmp
imul
add
add
sar
jbe
outs
pusha
jo
jb
and
mov
mov
js
or
or
mov
dec
int3
js
es
mov
jg
mov
dec
js
inc
(bad)
fild
stc
xor
inc
sub
add
add
push
jbe
push
loope
mov
aad
dec
fwait
pop
cwde
nop
loopne
push
ficomp
cwde
cmc
mov
dec
jne
pop
cmp
sub
pusha
or
dec
ficom
cmp
ret
cmp
cmp
push
xchg
xor
adc
jno
clts
dec
dec
push
test
fstp
cmp
psubsw
sbb
mov
test
xor
clc
mov
mov
loopne
cs
xchg
push
in
movups
adc
xchg
mov
pop
das
(bad)
inc
ins
mov
pusha
or
and
cmp
or
inc
sub
jmp
out
inc
sahf
je
hlt
push
dec
clc
(bad)
xor
mov
mov
mov
mov
call
xor
mov
(bad)
sbb
xor
inc
daa
mov
inc
jbe
mov
xchg
xor
pop
adc
arpl
js
jmp
ror
mov
cmps
clc
outs
or
fstp
sti
je
movs
(bad)
fcomip
push
pop
and
pop
and
bound
mov
mov
pop
mov
mov
out
sbb
ret
mov
(bad)
(bad)
aas
stos
jge
mov
mov
neg
sbb
and
push
add
cmp
push
mov
pop
call
push
jne
call
call
add
pop
push
mov
call
pop
call
pushf
cmp
push
ror
aad
and
inc
cmp
mov
shr
cmp
jne
cmp
ja
out
jne
or
stc
je
and
mov
xlat
fimul
mov
cmp
jne
mov
cmp
(bad)
(bad)
jmp
inc
or
imul
xor
neg
jmp
cmp
jle
sub
idiv
adc
push
pop
cmp
jl
pop
cmp
jg
pop
cmp
jne
cmp
jl
pop
(bad)
push
add
mov
mov
inc
or
(bad)
mov
dec
sbb
mov
ss
xor
jb
and
dec
outs
push
jne
adc
rol
add
ja
call
stos
mov
test
ud0
sar
mov
mov
jnp
xor
mov
inc
aam
ja
mov
add
push
lea
mov
xor
(bad)
call
xor
mov
mov
dec
mov
lea
pop
div
call
push
mov
pop
push
push
mov
or
dec
mov
mov
mov
cld
rol
shl
push
(bad)
inc
sti
mov
push
sbb
mov
xor
(bad)
(bad)
dec
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
mov
shr
lea
loop
dec
add
add
mov
mov
mov
mov
mov
mov
call
(bad)
pop
jmp
mov
sbb
push
mov
call
pop
add
cld
jmp
push
jmp
push
push
add
jecxz
inc
add
or
push
add
mov
in
add
call
dec
or
jno
lea
or
jne
mov
rcl
sub
or
mov
(bad)
call
mov
(bad)
jmp
dec
sub
xor
xor
dec
aam
dec
cmp
cmp
dec
add
add
fmul
in
dec
push
inc
jmp
dec
sbb
shl
out
dec
mov
mov
xor
inc
shl
std
jmp
add
sub
add
inc
add
push
cmp
bound
mov
mov
mov
mov
(bad)
out
call
sub
jmp
cmp
jbe
pop
cmp
ud0
sar
cmp
ja
cmc
lods
mov
add
shl
or
mov
(bad)
(bad)
push
ret
test
mov
sub
shr
test
jne
shr
stos
jmp
mov
shr
mov
dec
lock
test
into
and
je
cmp
scas
adc
jae
mov
inc
mov
inc
aas
cmp
dec
sub
and
shr
add
push
mov
shr
add
mov
shr
jb
push
add
pop
fstp
add
mov
(bad)
sub
mov
pop
cmp
imul
cmc
sub
mov
mov
mov
mov
add
mov
mov
add
sub
loope
out
outs
clc
cmp
jne
and
je
dec
cmp
mul
inc
mov
add
rep
dec
jmp
jne
dec
in
ret
cmp
cmp
(bad)
push
outs
push
hlt
fld
mov
jmp
(bad)
mov
in
cmp
add
and
cmp
aaa
cld
jne
sub
add
test
shl
shl
je
push
dec
pop
sbb
enter
je
sbb
lock
jge
sub
sub
and
outs
sbb
mov
cmovno
aaa
and
or
add
mov
and
inc
and
adc
push
pop
add
sub
sbb
jp
scas
add
or
mov
and
inc
add
jb
sub
jbe
and
popf
mov
mov
xor
xor
inc
ror
sbb
sbb
pop
xchg
push
jne
mov
cmp
pop
adc
mov
mov
or
stos
push
inc
inc
sar
fnstsw
outs
shr
sub
shl
sub
dec
fmul
mov
mov
mov
dec
and
mov
sub
add
mov
mov
sub
add
sbb
jo
mov
fcomp
dec
cmp
lahf
add
sar
retf
ror
je
mov
mov
mov
mov
mov
ror
mov
mov
mov
inc
mov
mov
mov
mov
mov
cmp
push
mov
add
aas
push
or
push
push
push
add
fiadd
sub
sbb
loopne
and
inc
or
div
jle
mov
cmp
stc
xor
jle
cmp
push
pop
add
test
cmp
icebp
push
cld
jne
push
jmp
ficom
cmp
mov
jge
mov
neg
jmp
(bad)
(bad)
push
mov
cmp
or
and
cmp
jl
cmp
ja
dec
jg
push
mov
mov
call
adc
mov
hlt
mov
xchg
push
add
sbb
jle
jge
push
mov
push
push
xlat
cmp
test
xor
mov
jne
mov
jb
add
adc
push
jbe
test
sbb
inc
jmp
mov
sar
sub
daa
mov
and
add
call
sub
fdiv
mov
push
sub
push
push
call
add
push
fwait
mov
sub
js
xor
pusha
sub
int
jnp
cld
mov
out
call
push
mov
add
push
call
iret
jne
je
fdiv
push
sbb
dec
sbb
sti
(bad)
fist
mov
inc
xor
sub
retf
pop
dec
sub
retf
ret
push
add
mov
xor
pop
std
xlat
sub
inc
add
hlt
push
xchg
sti
aaa
aad
inc
mov
cmp
je
or
test
(bad)
jg
or
cmp
jne
or
mov
sbb
pop
cmp
(bad)
fild
leave
mov
mov
mov
mov
mov
push
lock
push
loopne
jmp
jmp
mov
out
sahf
mov
inc
jmp
clc
jns
out
add
adc
dec
clc
mov
shl
add
inc
(bad)
(bad)
mov
or
test
je
cmp
jne
xor
push
push
push
call
pushf
loop
(bad)
sbb
call
inc
inc
call
mov
jbe
call
mov
je
mov
mov
stos
(bad)
aaa
push
jmp
or
test
push
scas
fistp
dec
cs
jns
or
shr
rcl
call
shl
mov
and
cmp
cwde
repz
mov
dec
xor
sub
cmp
pop
mov
outs
jmp
xor
jmp
call
jmp
(bad)
popf
mov
add
(bad)
jmp
shr
not
and
mov
retf
or
xor
jmp
retf
xor
inc
sbb
push
adc
lock
movzx
adc
in
jg
cmp
mov
je
cmp
mov
loopne
in
xchg
(bad)
cmp
and
sti
test
mov
inc
mov
test
je
mov
inc
lahf
push
mov
mov
inc
loope
inc
inc
xor
mov
std
pop
xchg
pop
pop
xchg
(bad)
jle
or
mov
pop
sub
clc
ret
shr
mov
jmp
jmp
test
jmp
loopne
fldenv
or
loopne
sbb
ins
adc
mov
and
test
dec
or
or
jbe
lds
outs
push
ja
sbb
mov
and
add
pusha
adc
mov
xor
test
push
inc
or
shr
cmp
mov
jbe
test
mov
shr
jns
leave
test
adc
push
je
dec
sbb
ret
hlt
add
cmp
jbe
jle
popf
lock
jmp
dec
adc
mov
je
and
stos
cwde
(bad)
scas
arpl
int
dec
mov
dec
hlt
push
mov
push
mov
push
add
push
call
adc
jne
push
(bad)
jg
pop
js
cmp
clc
add
sub
cmp
outs
cli
inc
add
test
and
stos
loope
into
out
cmp
je
mov
sbb
add
mov
add
inc
test
bnd
mov
test
mov
push
jg
je
sub
push
and
mov
in
in
out
mov
cmp
jb
push
add
cmp
and
inc
fcom
mov
(bad)
clc
add
test
jne
push
popa
daa
pushf
ins
xchg
sbb
xchg
pop
xchg
adc
(bad)
es
cmp
and
pusha
outs
or
cmp
xchg
or
xor
or
and
pop
and
fdiv
and
mov
nop
jle
adc
fsubr
xlat
cmps
or
into
clc
adc
push
adc
leave
and
dec
cld
inc
sar
and
jbe
mov
shl
xchg
pop
push
cmp
outs
xchg
push
mov
inc
test
or
and
call
loope
add
xor
mov
push
mov
add
mov
lods
xor
or
ja
sub
jmp
push
add
inc
inc
push
jbe
pop
dec
or
clc
(bad)
(bad)
jge
add
cmp
je
mov
and
shr
sub
mov
addr16
add
test
es
aaa
and
loopne
shr
mov
mov
xchg
sub
call
add
stos
inc
mov
cmp
and
fucomp
or
adc
add
inc
push
clc
mov
mov
jmp
test
jmp
dec
xchg
dec
jmp
imul
jmp
data16
push
ja
mov
xor
not
cmp
rcl
xchg
pop
shl
lock
rol
push
inc
inc
add
je
cmps
sub
inc
push
mov
or
jge
sbb
cmp
pop
hlt
in
add
in
add
popf
loopne
sbb
jmp
call
dec
push
pop
ja
loope
push
inc
pusha
shr
push
pop
inc
or
cmc
cmp
jae
out
push
cmp
ja
inc
pop
jecxz
adc
or
pushw
xor
push
ja
push
lods
nop
xor
jmp
fstp
icebp
aas
leave
dec
push
test
xor
mov
shr
pop
sub
(bad)
jmp
pop
mov
inc
sub
mov
cmp
jb
jmp
or
mov
inc
(bad)
(bad)
out
jg
and
and
adc
lea
dec
mov
lea
inc
push
push
push
mov
jg
push
lea
push
push
call
out
adc
mov
mov
es
mov
add
add
mov
mov
pushf
inc
jo
cmp
cs
add
dec
and
enter
xor
jg
test
ja
cmp
jae
movzx
xor
push
push
out
xor
ror
cmp
aaa
add
push
mov
shr
mov
and
mov
sbb
dec
inc
stc
pop
in
jne
sbb
mov
inc
in
sbb
inc
imul
mov
pop
lock
ror
push
jle
mov
inc
outs
(bad)
int3
add
ja
dec
dec
jmp
add
sbb
pop
lea
inc
mov
add
jmp
std
dec
pop
add
xchg
sub
test
in
cmp
sub
add
shr
lods
mov
sub
add
mov
mov
add
adc
ja
(bad)
icebp
jg
jo
mov
mov
mov
jne
add
hlt
dec
pusha
cmp
jb
jp
enter
mov
rcr
sbb
test
inc
(bad)
pop
popa
sbb
jbe
mov
enter
call
pop
jne
mov
mov
push
aas
outs
jb
mov
mov
inc
popa
add
pop
iret
xchg
mov
fstp
jle
sub
xor
jb
cmp
jbe
push
mov
jne
mov
mov
mov
xchg
mov
mov
mov
cmp
cdq
out
cmp
mov
mov
jle
lock
pop
pop
out
mov
scas
cmp
dec
cld
pop
fucom
sahf
push
mov
cdq
pop
xchg
jnp
fwait
sub
je
lods
sbb
push
aaa
adc
sub
dec
mov
int
ja
cs
lock
jecxz
out
loopne
dec
lock
enter
dec
lock
mov
gs
movzx
daa
add
movzx
jmp
aaa
xchg
mov
jno
cmp
fdiv
xchg
add
inc
retf
dec
dec
sti
jno
xchg
dec
add
dec
mov
sub
jnp
jo
sub
dec
inc
jne
ja
hlt
or
push
pop
scas
xchg
test
jne
test
out
rcl
and
mov
sub
push
adc
mov
inc
aam
jae
adc
dec
push
pushf
jo
jle
jb
fistp
inc
push
loop
and
add
jg
mov
mov
lock
mov
add
loopne
mov
dec
push
out
inc
js
popa
pop
push
stos
outs
in
mov
mov
xor
xlat
add
cdq
and
and
push
and
push
test
push
cmp
ret
shr
jmp
dec
inc
inc
pop
xor
sbb
fnstsw
inc
mov
outs
add
inc
inc
cmp
ja
out
dec
in
add
cmp
push
jbe
adc
imul
scas
or
push
inc
lods
(bad)
fwait
and
mov
(bad)
dec
cmp
jbe
sub
mov
mov
mov
cmp
jbe
add
sub
sub
jmp
fistp
add
mov
jbe
fwait
sub
jae
inc
in
ror
in
sbb
dec
hlt
mov
push
sub
dec
inc
mov
push
xchg
cli
dec
inc
dec
mov
jne
add
dec
jb
mov
add
fnstsw
dec
in
inc
inc
das
dec
mov
jmp
adc
sub
push
test
jbe
xchg
mov
adc
cli
ror
add
add
mov
cmc
(bad)
cli
loopne
sub
loopne
jle
add
je
call
mov
or
nop
mov
pop
and
lahf
sar
ss
jne
mov
add
xor
mov
cld
(bad)
jg
ret
shr
add
cmp
je
mov
(bad)
mov
jg
shl
addr16
mov
or
repz
and
pop
cmp
je
xchg
dec
mov
push
cmp
jbe
push
(bad)
das
cmp
ret
int
inc
or
inc
adc
add
mov
fldcw
jmp
dec
push
aam
xor
(bad)
push
mov
add
or
cwde
inc
call
sbb
aas
xor
inc
jne
cmp
jge
sbb
mov
inc
adc
jge
call
fld
loope
cld
call
add
jge
mov
sub
mov
sub
lock
pop
adc
pop
sbb
mov
je
pop
test
icebp
test
je
dec
jl
rol
stos
and
call
jg
pop
mov
dec
cmc
leave
mov
push
push
cmp
neg
push
not
jne
dec
push
sti
add
or
jne
loop
xor
sti
xchg
inc
fsubr
fmulp
adc
jmp
in
add
or
stos
mov
or
pop
mov
xor
mov
add
sti
ja
stc
sbb
cmp
pop
mov
or
into
add
fwait
out
retf
mov
or
leave
jecxz
ror
ret
cs
dec
xchg
imul
or
push
sub
je
mov
cs
sub
rcr
adc
push
je
mov
ja
lock
loop
in
jl
jecxz
rcr
and
push
adc
mov
mov
movs
inc
inc
cmp
(bad)
(bad)
push
mov
mov
push
pop
fimul
push
pop
movs
jne
dec
cmp
jg
mov
cmp
mov
cmp
jne
mov
mov
mov
mov
cmp
mov
mov
adc
mov
push
jmp
test
inc
mov
mov
xor
cmp
aam
fnsave
inc
cmp
pcmpeqd
sub
dec
mov
dec
movs
add
sub
js
inc
cmp
(bad)
cld
push
cmp
jle
cmp
je
cmp
je
frstor
push
mov
pop
mov
add
inc
jge
sar
test
push
jb
xor
cmp
jbe
(bad)
(bad)
(bad)
lea
cmp
je
movzx
movzx
mov
mov
push
lea
jbe
ja
inc
inc
cmp
jb
sub
ja
mov
dec
in
inc
inc
fmul
pop
jno
fmul
fcomp
in
(bad)
push
sbb
jmp
mov
or
ror
or
sbb
ds
inc
in
sub
into
cmc
sbb
dec
fsubr
lahf
mov
adc
dec
sar
mov
shl
cmp
aas
lds
mov
lea
mov
push
int3
pop
enter
mov
mov
jb
mov
jmp
aaa
mov
sub
mov
mov
mov
movzx
cmp
jge
(bad)
mov
mov
jmp
jle
sbb
mov
mov
shl
mov
mov
(bad)
out
inc
mov
jmp
and
sub
jge
mov
sub
jg
cmps
clc
rcl
loop
dec
clc
shr
mov
add
lea
inc
push
add
xchg
inc
adc
cli
test
mov
sbb
inc
aam
ror
and
(bad)
(bad)
cld
jmp
shr
test
jne
test
je
lea
and
add
mov
and
icebp
outs
xchg
cld
add
dec
das
or
mov
call
(bad)
aas
inc
mov
movzx
mov
inc
out
cmp
jle
inc
hlt
jbe
and
ror
dec
les
test
mov
mov
lea
xor
scas
iret
inc
(bad)
(bad)
mov
loop
jge
jae
stos
lea
jmp
mov
movzx
sub
test
jle
fdivr
adc
call
shl
jns
loope
or
rcl
loop
push
loopne
inc
or
or
aas
sub
push
jae
add
add
outs
sub
mov
mov
ds
add
mov
mov
sub
sar
shr
add
xchg
mov
or
add
mov
pop
je
mov
iret
cmp
je
loope
or
xor
mov
test
mov
dec
inc
xlat
adc
cld
or
iret
add
mov
(bad)
jp
jb
stos
stos
clc
dec
hlt
shl
pop
add
add
in
mov
(bad)
push
lea
call
add
imul
lea
into
pop
adc
lea
inc
fs
dec
add
arpl
pop
jmp
adc
jge
sbb
pop
or
push
cld
mov
cmovo
leave
cmp
setp
jge
mov
out
and
mov
mov
cmp
jb
jne
mov
jae
and
or
ja
mov
xor
shl
jne
adc
pop
jnp
sub
sbb
nop
aas
jle
mov
or
loope
retf
pop
pop
cdq
sbb
and
fimul
mov
push
mov
mov
mov
jae
cmc
cmp
ror
jl
inc
adc
dec
call
push
xor
push
lea
stos
lea
mov
imul
mov
inc
mov
jge
rcl
mov
sbb
in
mov
add
mov
mov
lds
jmp
sbb
add
add
clc
jle
dec
fdivrp
sbb
cmp
mov
add
inc
sub
sub
mov
mov
mov
mov
ffreep
fild
push
mov
add
mov
mov
outs
jmp
push
add
psrlq
xchg
add
dec
in
test
es
mul
lea
or
mov
dec
dec
data16
imul
in
mul
mov
sub
lea
mov
add
push
inc
jg
xor
arpl
dec
test
inc
inc
out
add
push
dec
cmp
mov
jg
lea
movzx
cmp
je
adc
sub
movzx
imul
mov
add
add
sti
jg
mov
pop
jne
dec
sub
ins
jne
pop
jmp
mov
in
push
push
or
jp
mov
pandn
push
fild
jne
push
mov
dec
mov
mov
inc
add
mov
inc
mov
add
or
loop
cmp
jge
loopne
mov
adc
lea
jmp
jmp
push
cmp
je
jle
inc
sti
mov
or
inc
(bad)
(bad)
aas
mov
jns
jne
ja
pop
cmp
jne
push
pop
push
jmp
ja
(bad)
out
push
pop
xchg
add
dec
jne
cmp
push
push
pop
push
push
mov
pop
xor
cmp
push
jp
jg
pop
mov
jl
push
inc
mov
mov
mov
fwait
clc
inc
cmp
mov
mov
dec
scas
jge
cmp
je
adc
movzx
fbstp
mov
sub
cmp
jle
movzx
(bad)
push
mov
or
nop
mov
mov
cmp
pop
aam
inc
outs
push
or
mov
inc
pop
mov
sub
shr
lea
mov
mov
or
mov
or
add
dec
mov
jne
or
jno
rcl
test
call
push
in
je
ret
mov
mov
mov
scas
mov
mov
shl
sbb
mov
add
inc
cmp
sbb
loope
cmp
jnp
or
popa
pop
lea
push
mov
push
shl
push
jge
add
add
cmp
pusha
mov
inc
jb
mov
jl
xchg
mov
add
jmp
mov
out
or
fcom
sbb
dec
mov
paddsb
inc
mov
ret
lock
in
xor
jge
jp
mov
lock
xchg
or
lock
sbb
sbb
std
add
test
add
and
retf
js
add
xchg
mov
stc
or
add
imul
lods
(bad)
call
mov
scas
pop
jmp
jne
dec
jmp
cmp
xchg
pop
cli
or
and
dec
call
(bad)
popa
mov
cmp
sub
aas
add
jne
add
xchg
cmp
pop
cld
cmp
xor
jo
mov
sub
or
cmp
pop
cld
aas
sbb
pop
pop
add
mov
jmp
mul
or
shl
push
add
rol
ins
mov
mov
dec
jge
pop
popa
aas
push
mov
dec
js
jle
lea
ja
or
add
cmc
adc
mov
out
xor
test
jle
or
or
and
xor
popa
add
jo
sar
add
adc
sbb
mov
mov
xchg
add
inc
cmp
xchg
mov
dec
aaa
call
xor
xchg
cs
adc
rol
cs
mov
cmp
mov
dec
mov
lea
mov
adc
call
dec
lock
jne
in
lea
movzx
pop
sub
or
movzx
jbe
sbb
add
jnp
sbb
or
jbe
xor
lds
push
loop
iret
jmp
push
movzx
test
mov
push
inc
pop
faddp
int3
les
fstp
cmp
jge
xchg
sub
adc
ror
add
xor
out
lea
sbb
add
jge
jmp
cs
or
neg
mov
int
mov
mov
movs
cld
je
or
mov
sub
xor
dec
dec
xor
or
movs
sub
xchg
sbb
or
cmp
ret
or
mov
add
mov
shr
mov
or
dec
add
dec
add
sbb
jle
xor
clc
jb
mov
ds
adc
cs
mov
xchg
rol
pop
adc
mov
push
pop
sub
cmp
jle
mov
mov
mov
or
adc
pop
hlt
mov
cs
or
mov
cs
xchg
fidivr
std
or
add
add
dec
adc
xchg
add
pop
mov
xchg
dec
ds
pop
lock
xchg
out
mov
push
ret
rcl
mov
enter
hlt
fbstp
mov
ret
xor
lea
or
inc
stos
loop
ja
clc
or
clc
or
push
pop
lea
cwde
sbb
jl
xor
cmp
mov
sete
mov
ret
xor
stc
adc
xor
jo
push
inc
jb
mov
xor
rol
rol
ret
mov
lahf
lea
mov
xor
jg
add
add
pop
pop
ins
jge
jae
or
and
sub
mov
out
(bad)
(bad)
dec
add
adc
adc
xchg
cmp
dec
push
push
mov
mov
call
or
mov
cmp
or
idiv
retf
not
mov
jl
xchg
mov
not
mov
mov
lahf
std
pop
test
je
xor
jge
enter
inc
dec
jne
pop
pop
xchg
mov
lahf
inc
bound
add
mov
push
mov
or
inc
and
xor
sub
fdiv
mov
add
cli
xor
sub
(bad)
(bad)
jmp
push
xor
push
lea
xor
xor
inc
sub
lea
movzx
add
shl
mov
mov
(bad)
(bad)
inc
inc
cmp
jle
cmp
jl
movzx
test
je
lea
mov
movzx
inc
data16
mov
and
or
(bad)
inc
shr
shl
dec
test
jg
shr
mov
inc
cmp
jle
pop
pop
and
iret
mov
dec
or
mov
jne
jbe
mov
dec
cld
mov
call
and
xchg
dec
lock
je
call
mov
mov
es
inc
clc
mov
and
mov
jl
jmp
cmp
jge
inc
mov
or
scas
fidivr
dec
jmp
add
mov
or
movzx
sub
out
mov
dec
mov
mov
fcmovnu
sar
jmp
push
mov
call
pop
cld
ds
ja
jge
mov
mov
and
sahf
(bad)
(bad)
pop
pop
int3
dec
fsubr
mov
mov
sbb
mov
mov
mov
dec
out
lea
(bad)
jg
mov
add
mov
dec
jmp
push
mov
mov
fdiv
mov
inc
mov
mov
adc
add
dec
add
(bad)
jge
inc
mov
call
pop
jge
test
mov
stos
mov
inc
or
push
test
loopne
lea
call
pop
jae
mov
mov
adc
call
sub
mov
push
call
xchg
push
call
jg
das
dec
adc
mov
ret
cmp
adc
dec
clc
add
lea
add
mov
hlt
cmp
jle
push
push
mov
sbb
adc
sbb
sbb
ins
fld
mov
pop
pop
jmp
mov
in
loope
clc
mov
shr
call
jne
xor
pop
leave
jmp
outs
(bad)
imul
add
shr
mov
mov
hlt
jmp
add
push
pop
and
or
xor
arpl
fsub
cmc
in
push
inc
sbb
add
(bad)
fisubr
rol
or
lea
inc
pop
inc
jno
pop
inc
and
jo
mov
or
xor
cmp
push
mov
jle
cmp
jbe
mov
cmp
fcomip
sub
jne
jmp
clc
(bad)
dec
cmps
fisttp
ins
std
lea
or
cli
pop
jmp
mov
les
sub
or
dec
shr
shr
cmp
ja
jmp
lea
mov
push
lea
cmp
ja
cmp
je
mov
jne
push
push
push
call
adc
in
ds
gs
scas
popf
cmp
movd
push
std
push
adc
mov
lahf
clc
jmp
add
cmc
dec
mov
shl
mov
or
add
out
adc
sahf
or
adc
sahf
loope
out
pop
sahf
jle
adc
jnp
fcomip
retf
shr
add
mov
mov
mov
in
push
or
inc
push
mov
mov
retf
call
mov
ficom
sub
leave
ret
jbe
inc
adc
test
add
sub
rcl
loop
mov
cmps
fdivr
and
or
std
mov
cmps
retf
call
xchg
mov
cmps
dec
cmp
push
push
repz
mov
ja
mov
xchg
jge
add
je
pop
pop
jmp
ja
and
pop
add
add
mov
sti
push
sar
and
sub
dec
add
test
dec
push
adc
sbb
fdivr
cmp
pop
pop
je
adc
(bad)
jg
push
call
add
jae
cmp
adc
add
and
mov
mov
imul
push
call
mov
ret
mov
and
and
ret
gs
push
loopne
and
(bad)
mov
inc
jo
or
push
call
mov
mov
sub
mov
aad
mov
or
inc
mov
xor
test
mov
cmp
inc
or
inc
or
pop
or
(bad)
mov
add
leave
jg
mov
test
jne
and
mov
cmp
es
es
aas
push
call
jne
pop
out
aas
and
mov
fldz
add
pop
hlt
jmp
enter
test
jge
mov
fist
test
sbb
inc
add
push
inc
out
jne
and
fisttp
mov
fldz
fstp
fcos
cmp
out
inc
jne
fld
je
mov
or
fst
paddsb
adc
inc
hlt
fdiv
and
add
and
jmp
icebp
outs
mov
or
call
xchg
cmp
jne
pop
dec
mov
and
mov
mov
js
(bad)
(bad)
mov
or
push
or
push
adc
adc
dec
adc
out
adc
ror
mov
hlt
push
cld
ficomp
inc
add
(bad)
jg
mov
jle
jne
cld
fcom
scas
add
mov
inc
add
add
call
mov
sbb
add
inc
or
leave
fcomp
or
div
or
mov
or
je
sub
or
add
sti
ja
ja
add
je
test
jne
cmp
xor
inc
jmp
xor
cmps
cs
xor
int
dec
push
hlt
test
je
add
adc
mov
fstp
fld1
push
fstp
push
outs
mov
retf
fdiv
fmul
fld
add
nop
fcomp
lock
jp
fnstcw
fsubr
packssdw
fsubr
jo
sbb
adc
rcr
std
mov
in
jp
fsub
fstp
fcom
out
pop
sbb
or
sub
and
dec
or
sbb
pop
jg
mov
jp
push
and
inc
dec
fdivrp
fmul
push
lds
rcr
out
hlt
xlat
outs
xor
adc
mov
mov
icebp
mov
fist
cmp
je
mov
movs
add
hlt
xor
inc
mov
push
jg
fnsave
and
stc
test
push
mov
add
inc
push
call
mov
push
adc
jmp
outs
icebp
sbb
jg
xor
clc
xor
push
pop
push
mov
jae
add
cmp
das
or
clc
push
mov
sbb
xor
xchg
pop
test
xchg
sar
(bad)
(bad)
jg
mov
add
sub
or
dec
and
fcmovnu
in
add
test
jge
cmp
out
fwait
push
pop
test
test
dec
and
inc
xor
adc
test
and
shl
(bad)
out
add
je
or
pop
mov
mov
ret
adc
cmp
add
inc
jl
pop
push
call
and
data16
aad
sar
mov
imul
push
lea
lea
call
fwait
jb
(bad)
call
je
jge
inc
cs
(bad)
lea
call
ficom
push
sub
push
push
repz
pusha
cmp
mov
sbb
xchg
add
push
sub
xor
imul
add
adc
pop
add
(bad)
push
push
push
push
lea
push
add
call
clc
fmul
js
push
pop
cld
fld
jo
int3
jo
push
icebp
mov
or
(bad)
call
(bad)
cmp
je
cmp
jne
push
call
adc
sbb
je
mov
call
mov
fwait
stos
jb
mov
je
ja
xor
mov
cmp
jne
mov
cmp
sub
dec
(bad)
jg
push
call
mov
pop
cmp
call
add
popa
add
jmp
mov
mov
lea
mov
jg
add
fcomp
call
jp
push
mov
push
les
or
push
push
call
(bad)
clc
push
(bad)
repnz
mov
jne
loopne
rcr
xchg
sub
or
inc
pop
sub
dec
idiv
jne
call
test
sbb
and
jmp
(bad)
cs
push
fnsave
fstp
or
jle
aad
(bad)
inc
pop
pop
call
leave
ret
jmp
and
inc
gs
dec
dec
add
rcr
jne
jne
cmp
cs
shr
mov
dec
inc
xor
aam
cmc
lahf
mov
fdiv
call
out
xor
std
popa
sbb
push
js
xor
faddp
inc
aaa
jge
ja
out
rol
mov
xor
out
fstp
pop
fist
fnstsw
pop
add
fdiv
inc
adc
mov
fld
stc
jl
call
inc
xchg
or
cmc
push
mov
(bad)
call
rcl
fnstsw
or
fstp
or
xor
dec
test
mov
push
mov
mov
call
test
inc
ins
addr16
pop
fstp
mov
jg
shl
js
jle
mov
mov
inc
mov
clc
pop
rcr
pop
sbb
mov
pop
pop
in
cmp
ja
dec
test
push
je
push
call
and
pop
lea
gs
pop
fnstsw
mov
call
jne
push
call
dec
mov
push
lea
call
inc
call
test
push
fsubr
ja
xor
call
clc
add
add
pop
jl
fld
jle
add
loope
jne
jge
push
xor
cmp
add
ud0
pop
sub
inc
fisttp
xchg
add
cmp
jle
cmp
sbb
push
push
push
jne
(bad)
mov
and
inc
jge
divps
add
and
sbb
add
inc
pop
inc
call
mov
pop
popf
mov
inc
jne
ins
push
pop
mov
mov
push
test
loopne
shl
add
gs
call
in
add
xchg
xor
dec
call
sbb
mov
inc
ds
call
push
pusha
mov
call
cmp
jge
mov
mov
cmp
or
fld
jg
cmps
and
adc
jo
ja
cmp
jle
mov
cmp
add
cmp
xchg
or
jne
fstp
pusha
inc
adc
lock
(bad)
mov
and
cld
inc
add
xor
mov
jo
or
jo
mov
stos
cli
fist
mov
mov
cmp
jne
cmp
call
inc
or
add
jg
add
push
pop
mov
cdq
idiv
(bad)
retf
cmp
and
or
fsub
or
jge
mov
add
jge
jge
push
mov
dec
add
dec
fcom
ret
(bad)
fld
push
(bad)
arpl
fcomp
jne
inc
jmp
fcomp
in
xor
add
inc
addr16
xor
loopne
mov
xchg
dec
fsub
nop
clc
add
icebp
add
jg
mov
nop
les
(bad)
call
jmp
sar
or
push
mov
mov
sub
inc
push
lea
fist
or
push
call
lock
mov
cmp
jle
mov
mov
leave
aam
rol
fild
sub
fstp
cmc
icebp
add
mov
fst
xchg
ret
icebp
pop
add
mov
nop
mov
adc
push
lock
sbb
mov
mov
push
call
hlt
call
loope
inc
cmp
mov
lods
push
in
jmp
pusha
xor
xor
cmp
shl
jl
xchg
inc
cld
mov
(bad)
cmp
xor
mov
mov
cmp
or
inc
les
test
cmp
inc
cmc
pop
test
mov
push
jb
cmp
(bad)
mov
add
fsubrp
xchg
mov
aaa
mov
call
jo
push
push
call
add
cmp
out
and
jne
add
mov
cmp
je
aaa
repz
dec
adc
jg
xor
and
mov
mov
mov
sar
out
mov
cld
das
push
inc
jmp
pop
call
daa
dec
or
jae
inc
push
inc
adc
(bad)
inc
loope
push
push
aaa
or
js
or
or
push
sub
pop
xor
call
push
ins
jmp
scas
sub
push
adc
jle
jl
mov
call
or
inc
sub
inc
lahf
lock
cmps
idiv
mov
add
shl
inc
inc
shl
jne
loopne
js
pop
je
cld
call
mov
xlat
pop
xchg
mov
dec
jmp
lock
xchg
push
push
mov
hlt
call
push
xchg
mov
out
mov
call
push
add
jne
call
mov
inc
sbb
mov
add
push
call
xor
sbb
dec
add
jge
sbb
fsubr
test
fistp
mov
pop
adc
push
mov
add
hlt
pusha
rcl
cs
mov
call
gs
mov
jne
fwait
adc
(bad)
out
call
leave
test
jle
mov
movzx
mov
dec
xor
mov
inc
cmp
jl
adc
out
fnstsw
sub
xor
xchg
jmp
jecxz
add
cmp
mov
jne
mov
imul
call
mov
pop
je
inc
cmp
jl
ins
jmp
mov
cmc
pop
(bad)
mov
sbb
call
push
mov
dec
mov
sbb
mov
sub
(bad)
jg
sub
xor
and
in
fld
mov
mov
fwait
ds
mov
xchg
call
jmp
pushf
out
ja
pusha
push
push
or
hlt
(bad)
jmp
or
pop
mov
pusha
hlt
pop
jl
add
retf
clc
mov
cmp
jle
mov
adc
ror
cmps
sub
push
into
jmp
push
call
jb
mov
cmp
mov
je
mov
mov
icebp
inc
push
fdivrp
outs
push
adc
cmps
or
cmc
icebp
adc
inc
(bad)
call
mov
fld
lea
push
push
fstp
push
(bad)
sar
push
mov
push
call
mov
out
adc
inc
sub
jbe
xor
and
cmp
xor
cmp
mov
add
adc
add
or
inc
cmp
clc
xchg
jecxz
mov
cmp
popa
sbb
mov
ins
cmp
jge
add
test
cld
aaa
je
dec
call
mov
jp
idiv
aas
adc
cmp
je
mov
cmp
je
data16
aaa
std
xchg
rcl
sbb
push
push
push
pop
call
jmp
push
push
lea
ret
jmp
lea
movs
push
add
add
call
lahf
repnz
add
add
lahf
or
xchg
fst
call
mov
sub
call
sub
cld
out
repz
call
pop
jmp
out
movs
jg
push
mov
mov
mov
push
jle
call
jmp
repz
sbb
sub
(bad)
call
add
inc
cmp
js
push
call
aaa
pusha
mov
push
push
call
adc
pop
push
stos
fisub
call
clc
call
inc
call
push
add
mov
cmp
inc
xor
xchg
jle
sbb
push
scas
push
push
call
rol
ficom
mov
xor
call
xor
out
retf
js
das
call
clc
(bad)
mov
sbb
pop
jmp
lahf
stos
retf
jp
cmc
ds
jmp
pop
(bad)
pop
or
inc
(bad)
out
push
adc
dec
ds
or
enter
mov
add
mov
lods
add
add
dec
xor
test
pcmpgtw
and
ja
mov
stc
or
test
sub
sbb
adc
je
dec
je
dec
jne
add
mov
mov
push
mov
call
pop
adc
push
sbb
ja
and
sub
jbe
push
call
adc
pop
pop
mov
out
(bad)
out
or
add
push
push
call
jmp
test
inc
jmp
out
fisttp
inc
sub
push
inc
std
arpl
lock
add
mov
pusha
fcom
lods
push
adc
enter
add
sub
div
nop
and
outs
(bad)
repnz
out
out
mov
les
cmp
movaps
jo
repnz
aas
inc
hlt
dec
in
sti
dec
xlat
mov
call
pop
inc
jmp
sbb
je
dec
je
cmp
fist
js
inc
sub
or
or
inc
and
jbe
std
jmp
fild
push
dec
adc
call
scas
mov
xor
call
or
inc
jo
ja
inc
jmp
repz
cmp
ja
pop
repz
fdivrp
or
push
lea
call
inc
push
jmp
fild
add
(bad)
(bad)
jmp
fld
jmp
fild
jmp
mov
mov
mov
add
push
jmp
push
mov
call
mov
dec
add
push
push
call
(bad)
mov
iret
push
pop
push
call
sub
pop
std
data16
enter
das
call
xchg
lock
and
add
pop
or
shr
clc
add
xor
sar
call
bound
push
out
adc
js
mov
and
ins
mov
ret
mov
or
sahf
add
test
mov
rol
add
aad
xchg
add
inc
add
(bad)
jg
out
push
push
(bad)
ror
call
mov
mov
jg
inc
add
push
xor
lea
mov
lea
mov
dec
call
fs
sbb
stc
or
push
mov
es
adc
ret
or
mov
mov
mov
mov
(bad)
call
clc
pop
cmp
int
loope
push
call
clc
sbb
push
lea
pop
(bad)
(bad)
ja
inc
and
adc
je
test
jne
mov
sbb
ret
je
cmp
inc
or
push
push
icebp
push
mov
push
push
call
(bad)
call
add
inc
or
ret
jne
or
pop
mov
loop
ret
mov
movs
jg
jae
jno
je
or
push
call
add
cld
sbb
add
xor
push
cli
pop
cld
dec
lock
call
loope
fist
ror
cmp
outs
std
fdivr
sub
push
jge
sub
sub
hlt
jg
call
pop
jmp
mov
es
cmp
jne
lods
cmp
jne
jmp
mov
dec
mov
daa
cmp
lock
aaa
aad
jne
xchg
popf
jne
inc
or
shl
push
sbb
push
call
xor
inc
push
aam
and
and
inc
inc
aad
(bad)
jmp
lea
cmp
je
mov
cmp
jne
mov
cmp
jne
push
ret
pop
lahf
in
call
or
call
loope
in
add
mov
push
call
inc
sub
jne
call
scas
add
jns
mov
add
pop
jne
jmp
call
jae
sbb
adc
mov
sti
push
push
call
das
jae
repz
inc
push
dec
or
adc
jge
add
push
int3
mov
mov
outs
add
pop
mov
ja
call
addr16
movs
mov
mov
sar
shr
or
push
push
mov
push
mov
test
xor
arpl
hlt
push
push
cmp
add
int
jb
jo
jle
je
add
je
adc
cmp
sbb
and
ja
mov
cmp
jne
inc
test
pop
lds
jbe
fld
xor
jg
retf
push
call
xor
call
(bad)
in
pop
jbe
or
call
jle
ja
scas
sbb
and
fidivr
mov
jg
aas
(bad)
out
jbe
test
pop
pop
pop
pop
ret
pop
sbb
push
xor
mov
(bad)
dec
push
mov
mov
jne
cmp
rol
pop
sub
push
jne
je
je
add
or
mov
inc
xlat
shl
jg
push
dec
inc
je
sbb
mov
jno
(bad)
jg
inc
mov
cmp
mov
je
call
push
mov
cmp
jne
or
(bad)
call
fsubr
jmp
xor
js
dec
cmp
sbb
pop
jl
push
mov
mov
je
cmp
jne
mov
mov
jmp
xor
xor
pop
enter
mov
mov
jmp
mov
jne
mov
push
(bad)
dec
call
test
jne
mov
add
push
call
jnp
cmp
imul
mov
jne
jmp
push
add
inc
aaa
mov
pop
ins
jp
fld1
pop
xchg
dec
and
and
retf
je
cmp
neg
cmp
imul
or
sti
je
add
mov
pop
add
hlt
pop
in
dec
push
call
fs
fld
fldcw
adc
push
mov
add
call
cld
jg
sbb
mov
push
call
cmp
pop
je
xor
or
dec
add
and
xor
push
clc
push
inc
call
add
add
je
or
add
call
movzx
xor
sti
add
mov
mov
shl
dec
push
or
push
add
sbb
add
repz
cmp
add
test
call
jle
push
call
pop
imul
mov
pushf
jmp
popf
jmp
adc
sub
mov
or
js
mov
or
cmp
fistp
ret
add
adc
das
pop
dec
cld
fidivr
cmp
shr
sbb
mov
cmc
out
push
push
and
(bad)
fnsave
push
mov
retf
cdq
jo
les
in
mov
fld
mov
add
add
call
leave
fadd
add
push
adc
or
ror
jne
cmps
mov
clc
push
cmp
jne
lahf
(bad)
mov
leave
pop
cmp
sub
pop
mov
jg
adc
adc
sti
mov
jne
(bad)
aad
adc
pop
jmp
push
fistp
dec
mov
dec
pop
push
pop
mov
sub
push
(bad)
push
adc
pop
idiv
cmp
mov
jle
mov
cmp
jge
mov
jne
pop
inc
jb
dec
sub
loop
bound
adc
cmp
call
or
ret
lea
mov
jmp
mov
cmp
je
mov
out
cmp
je
xor
inc
jmp
fistp
cdq
push
push
xchg
mov
enter
xor
cwde
adc
dec
or
mov
and
fld
mov
aas
mov
(bad)
dec
jb
mov
call
mov
inc
mov
stos
lahf
mov
lea
push
inc
mov
call
dec
mov
mov
je
push
xchg
(bad)
das
pop
dec
fisub
or
mov
inc
push
or
test
jne
out
outs
fiadd
dec
and
cmp
dec
cld
call
xchg
and
push
pop
mov
sbb
ret
ds
sub
test
dec
fs
pushf
mov
and
pop
cld
push
mov
push
xchg
xchg
out
pop
cdq
call
pop
test
push
xor
push
dec
lahf
add
outs
repz
call
add
iret
pop
pop
add
jle
jmp
call
push
and
mov
and
xchg
mov
cmp
ins
sub
add
(bad)
push
cmp
mov
call
jne
push
call
mov
ror
add
ror
retf
test
push
scas
jl
cmp
je
push
jge
mov
je
inc
and
push
call
fbstp
pop
test
mov
jne
cmp
add
push
cs
jge
mov
mov
push
out
imul
mov
call
out
add
mov
cmp
je
inc
adc
push
mov
mov
mov
mov
cmp
jne
sub
(bad)
fucomp
adc
xor
push
mov
call
ret
cmp
lea
call
jmp
fisttp
mov
mov
xchg
scas
xor
or
inc
cmp
push
clc
add
loopne
ret
add
aaa
cmc
pop
inc
div
adc
mov
and
add
push
sbb
cs
fdiv
fucomp
or
xor
cmp
sub
lock
push
or
loope
jl
int
push
call
or
ins
loop
fcmovu
call
aaa
jae
sub
(bad)
adc
mov
mov
call
aad
push
dec
or
call
push
loopne
call
cmp
pop
pop
jnp
cmp
cmps
sub
retf
jo
jbe
pushf
aas
(bad)
enter
clc
dec
jae
fidivr
jmp
push
or
(bad)
mov
ja
jge
cmp
push
call
cmp
jnp
pop
jmp
mov
add
in
cmp
je
cmp
fld
cmp
jle
push
fstp
push
jmp
cdq
cmps
xchg
push
repz
jle
jl
pop
sbb
pop
adc
call
pop
mov
lds
(bad)
sub
outs
xor
mov
cmp
jg
test
loope
or
sbb
add
lea
jmp
call
sar
pusha
jne
je
cmp
je
cmp
jle
jg
jnp
dec
or
call
call
or
loope
mov
or
sub
test
mov
ins
lea
call
out
out
jle
add
jmp
dec
repz
add
sbb
jbe
add
or
and
lods
aas
cmp
mov
je
cmp
sar
aam
call
loope
cmp
cmp
ret
jae
and
movzx
push
call
xchg
adc
and
loopne
mov
pop
jmp
mov
push
popa
sbb
mov
push
aaa
test
addr16
loopne
call
fisttp
movzx
cmp
jge
xor
xor
xor
jns
push
dec
ja
xor
fdivrp
xchg
ins
js
or
call
and
(bad)
je
fld
sub
clc
push
pop
add
lea
lock
adc
inc
push
(bad)
out
push
call
mov
push
call
push
lea
mov
and
call
xor
pop
lock
push
sbb
rcl
push
push
push
and
test
(bad)
clc
outs
xor
movs
xchg
mov
enter
cmp
pop
outs
neg
je
lock
jbe
fstp
mov
jo
loopne
(bad)
scas
in
aam
ja
dec
sbb
fstp
pop
or
pop
call
dec
and
icebp
(bad)
mov
xor
dec
jb
call
xchg
mov
mov
stos
call
pop
call
cld
call
push
call
push
jmp
xchg
popf
push
call
or
neg
fidivr
sub
clc
push
ins
push
call
ja
sti
xor
push
int
adc
(bad)
fisttp
add
clc
je
je
push
call
push
(bad)
aas
push
cs
scas
push
cwde
aam
dec
daa
int
jg
icebp
idiv
cmps
cmp
je
aam
or
outs
adc
add
lock
cld
call
and
aas
daa
push
push
call
loopne
inc
push
(bad)
push
cli
(bad)
jmp
sti
xlat
std
cmp
and
cli
jmp
add
clc
push
jne
or
js
mov
call
sbb
imul
sti
(bad)
fstp
lahf
shl
(bad)
jmp
cmp
jb
add
inc
out
ja
or
pop
sub
lock
jmp
(bad)
addr16
fmul
call
mov
xor
add
orps
clc
rcr
xor
enter
add
adc
mov
inc
mov
test
adc
jle
fistp
mov
test
cmp
(bad)
and
cmp
xor
loope
cmps
fistp
adc
push
call
fdivrp
jl
call
jne
popa
push
sar
es
sbb
mov
call
clc
jo
fwait
push
jmp
jmp
pop
add
push
je
jne
jg
lea
call
mov
jns
mov
js
or
push
scas
mov
aad
cmc
(bad)
push
mov
bound
lea
jg
movs
sub
fimul
xchg
call
scas
mov
jp
add
jg
xlat
cmp
mov
call
pop
dec
mov
(bad)
fstp
cmp
je
inc
or
fld
in
xor
push
sub
push
push
cmps
xor
call
add
ja
sbb
push
mov
int3
fisttp
mov
cmp
cld
push
cmps
shr
mov
xchg
(bad)
jbe
fistp
mov
mov
fsubrp
loop
mov
jmp
mov
hlt
call
clc
icebp
push
inc
jno
jne
jg
lods
jae
inc
aad
adc
call
mov
pop
cmp
push
jmp
xchg
fst
pop
cmp
jne
cli
adc
inc
xchg
cdq
dec
inc
je
shr
and
push
aas
(bad)
mov
add
jmp
jo
je
xor
sub
fdivrp
jmp
mov
test
mov
fisub
popa
jns
mov
sbb
daa
jno
out
pusha
xor
jne
(bad)
fwait
or
loope
fsubr
lods
add
sbb
test
enter
xor
inc
or
call
push
cld
sbb
hlt
call
jl
(bad)
in
loopne
adc
push
jbe
jmp
ror
shl
dec
cld
call
hlt
call
jl
add
sbb
call
scas
or
mov
clc
clc
mov
lods
jp
iret
call
mov
pop
or
mov
add
pop
mov
call
cmp
jle
or
add
jmp
call
and
lods
adc
adc
call
into
adc
ficomp
xchg
push
call
je
add
push
or
xchg
fs
add
test
inc
push
add
jmp
rcl
cmc
call
loopne
add
adc
lea
call
aam
into
call
xchg
rol
aam
pop
loopne
retf
call
ja
(bad)
iret
push
mov
call
aam
stc
sub
fstp
call
or
inc
or
out
push
pop
push
mov
sahf
in
add
dec
(bad)
add
(bad)
push
adc
lea
sar
or
aaa
lock
mov
call
shl
mov
test
out
xchg
scas
sbb
fldcw
lahf
cli
push
fistp
call
add
test
xchg
call
inc
cmp
je
adc
in
jbe
jne
sahf
push
push
sar
push
push
push
push
cmp
adc
mov
aam
sahf
pop
adc
or
add
jo
and
lds
pop
push
je
cmp
mov
arpl
pop
repz
pop
cmp
mov
jne
ss
sbb
imul
pop
and
movzx
call
fcom
and
mov
cmp
jl
rol
pop
or
dec
ins
cmp
jne
outs
jb
or
enter
adc
(bad)
mov
push
sbb
xlat
icebp
add
sbb
test
out
pushf
sti
iret
call
inc
dec
mov
call
jb
jl
mov
je
xor
inc
and
mov
call
jno
or
call
mov
or
cmps
push
jmp
imul
inc
cmp
ror
or
mov
test
pop
jne
sti
ss
cld
or
jmp
jmp
jmp
rcr
sub
sidtd
daa
jne
hlt
jge
rcl
xchg
or
lea
add
jmp
sub
mov
pop
call
pop
cmp
jg
add
push
imul
sar
add
cmp
je
ss
jmp
cmp
ja
icebp
in
inc
in
inc
call
add
loope
lea
sub
das
(bad)
(bad)
fist
jge
(bad)
inc
add
sahf
ror
or
mov
jge
in
sub
jmp
cmp
outs
adc
and
mov
es
jmp
out
dec
cld
jl
mov
push
jle
add
sub
cmp
fwait
int3
jo
call
pop
mov
jge
cmp
ja
mov
hlt
into
call
(bad)
(bad)
jmp
or
mov
cmp
(bad)
(bad)
jmp
sbb
fnstsw
push
or
call
push
or
mov
or
stos
jmp
push
or
or
mov
push
or
inc
mov
call
xchg
mov
lods
adc
pop
mov
ficomp
adc
pop
ins
pop
ja
cmp
scas
jmp
mov
and
add
nop
push
cmc
adc
jg
mov
call
xchg
or
ror
xchg
mov
xlat
push
add
es
add
test
push
jae
icebp
xlat
pop
adc
push
jne
clc
cmps
cmp
js
clc
js
ins
pop
aam
xor
cmp
jge
out
es
jge
push
push
in
lahf
fdiv
arpl
adc
je
ins
mov
jne
add
jne
or
adc
loop
push
or
call
aam
jmp
inc
jl
jne
push
in
or
and
add
or
ja
call
inc
ins
inc
dec
cli
ret
jmp
add
movs
icebp
(bad)
jmp
push
cdq
in
rol
sub
add
push
call
shl
mov
pop
adc
lods
pop
fwait
jne
jmp
jp
inc
js
inc
add
clc
test
(bad)
cmps
and
outs
rol
fiadd
add
in
mov
and
clc
or
xor
aas
inc
call
cli
push
push
xlat
inc
adc
xchg
or
sar
imul
call
jnp
call
xor
jmp
imul
adc
iret
fisttp
hlt
jbe
fiadd
or
inc
shr
and
out
test
je
push
cmp
inc
(bad)
hlt
mov
call
cld
bswap
or
inc
adc
mov
cmp
inc
adc
call
cmp
pop
lock
add
loope
jo
inc
push
push
dec
push
jecxz
adc
dec
call
fsub
add
fdiv
adc
loop
test
mov
xchg
push
xchg
fisubr
or
and
fisttp
test
into
adc
jne
out
call
sbb
jmp
or
sbb
jne
mov
or
ror
dec
iret
xor
or
out
call
call
sete
inc
inc
dec
and
add
pop
push
call
mov
mov
mov
scas
retf
out
ja
add
jns
into
je
push
dec
ja
mov
call
stc
loope
fnsave
out
jle
mov
mov
(bad)
dec
sub
sub
push
mov
mov
call
adc
pushf
dec
jbe
add
and
adc
mov
push
call
jl
cmp
jne
mov
mov
mov
lea
add
loopne
pop
test
and
push
mov
mov
outs
sub
mov
mov
mov
(bad)
test
jne
and
hlt
leave
mov
and
add
push
cmp
call
call
ret
(bad)
dec
inc
sbb
xor
and
sub
adc
pop
add
out
pop
push
call
jmp
mov
add
dec
or
dec
adc
and
mov
mov
mov
and
jb
sbb
pop
aam
mov
inc
jmp
mov
test
mov
add
lods
mov
out
(bad)
jne
jno
xor
push
mov
(bad)
(bad)
out
push
and
mov
dec
add
sub
or
(bad)
dec
mov
mov
call
lea
aad
mov
cmp
je
push
call
pop
je
push
dec
sbb
mov
(bad)
pop
icebp
pop
pop
pop
js
mov
(bad)
(bad)
(bad)
sbb
and
lea
mov
call
lea
call
cmps
jle
jle
data16
or
push
call
rol
bswap
mov
mov
jmp
(bad)
cmp
call
add
retf
pop
jg
ret
pop
xchg
mov
arpl
les
push
mov
lea
push
mov
jge
inc
cmp
call
call
out
xor
call
xchg
fsub
arpl
test
jne
lea
pop
inc
int
mov
lock
push
mov
mov
je
cmp
adc
pop
jnp
mov
icebp
call
sub
call
and
mov
pop
add
jmp
adc
jg
push
lea
push
js
(bad)
mov
mov
mov
mov
jmp
mov
mov
(bad)
dec
jl
jne
call
call
test
je
mov
mov
xor
jbe
lock
push
call
iret
and
push
jg
cli
andps
mov
push
mov
(bad)
mov
adc
cmc
inc
call
pop
mov
pop
jmp
push
xchg
movs
ss
pop
jne
inc
pusha
pop
mov
and
adc
push
ja
enter
and
pusha
adc
mov
fstp
sbb
push
cmp
(bad)
add
int3
fs
sbb
call
push
adc
sbb
(bad)
ror
push
movs
push
push
push
mov
call
sub
or
xor
rcr
cld
mov
jmp
push
push
mov
call
pop
pop
je
fwait
loop
inc
sbb
inc
push
push
call
(bad)
mov
call
cmp
pop
pop
jne
cmp
je
cmp
je
cmp
hlt
and
mov
cmp
mov
je
cmp
cmp
pop
je
or
(bad)
(bad)
cmp
jne
mov
push
mov
call
mov
mov
mov
js
pop
or
jecxz
(bad)
mov
dec
or
push
add
jle
push
sbb
mov
test
je
cmp
mov
call
ja
adc
and
(bad)
dec
test
dec
pop
popf
out
inc
mov
mov
call
jbe
mov
mov
mov
mov
adc
inc
sbb
pop
dec
pop
mov
mov
scas
stc
mov
pop
adc
mov
das
pop
and
or
mov
cmp
xchg
gs
(bad)
imul
dec
add
jo
adc
or
xchg
sub
sub
pushf
push
push
lea
push
push
mov
mov
ror
mov
add
add
cli
jne
call
je
call
cmp
dec
xchg
add
imul
mov
mov
xor
ja
movzx
push
push
xlat
sub
mov
add
jl
test
cmp
xchg
add
xor
div
jle
jge
js
add
test
dec
cmp
xor
test
adc
xchg
ins
xor
ins
mov
into
pop
sub
cmp
xor
loopne
push
push
call
add
pop
add
add
call
outs
push
jne
push
inc
jl
daa
pop
push
in
dec
push
dec
inc
imul
mov
cmp
mov
scas
aaa
inc
add
push
mov
mov
push
or
lea
call
push
sets
adc
inc
call
push
call
or
jge
add
jne
jmp
pslld
or
adc
mov
xor
adc
inc
in
push
cmp
adc
fwait
test
jb
sub
jne
sbb
xor
push
mov
call
mov
shl
lea
jge
jb
mov
push
push
mov
push
std
dec
inc
int3
mov
mov
jg
call
adc
or
es
xor
mov
icebp
inc
push
lea
pop
add
jns
call
mov
shl
call
push
mov
call
pusha
daa
fist
mov
(bad)
sub
leave
imul
jmp
mov
std
or
pop
in
push
mov
cmovne
int
mov
jge
push
in
push
outs
mov
out
adc
outs
pop
popa
ret
je
aaa
inc
idiv
jne
push
call
jne
mul
fucomp
inc
sub
mov
call
or
mov
push
(bad)
(bad)
fbld
or
inc
or
mov
(bad)
(bad)
cmp
sete
cmp
je
add
jge
je
mov
xchg
lock
push
push
push
daa
jns
add
sbb
mov
out
cli
jg
or
adc
mov
add
pop
cmps
jmp
sti
jle
movzx
push
call
pop
pop
pop
mov
(bad)
adc
mov
add
dec
ret
jbe
js
rol
sub
setne
push
adc
pop
mov
pop
ret
and
or
mov
seta
or
lea
jo
mov
push
inc
inc
std
fbstp
call
icebp
mov
call
push
cmps
pop
ja
add
inc
movs
movs
or
jb
inc
aam
call
and
inc
and
icebp
inc
sub
jae
or
lock
ret
mov
push
scas
inc
out
adc
fadd
cmps
jmp
inc
icebp
pusha
and
push
mov
cmps
sub
jle
inc
and
nop
adc
mov
add
int
sbb
inc
sbb
inc
and
inc
sbb
xor
mov
sbb
dec
and
test
dec
test
stos
jne
and
mov
cmps
cmp
(bad)
xlat
lea
push
inc
mov
and
xchg
xchg
sbb
pop
and
pop
sub
add
jo
vdivsd
fcomip
rcr
push
push
push
mov
mov
call
sbb
or
mov
jge
adc
cdq
mov
push
push
push
sbb
rol
push
mov
shl
mov
stos
or
in
sar
sbb
pop
xlat
jg
mov
jns
or
add
rcl
lahf
call
cdq
mov
mov
and
push
or
(bad)
inc
inc
cld
or
mov
call
sub
pop
or
xchg
sub
das
dec
adc
fwait
mov
mov
dec
dec
call
add
pop
in
and
and
or
dec
jge
call
test
xor
inc
sub
lea
push
push
mov
call
gs
sti
or
clc
call
clc
call
adc
add
lods
sbb
jne
mov
push
call
out
mov
xor
call
call
popf
jmp
add
push
call
inc
or
call
cmp
call
add
mov
push
(bad)
pop
(bad)
cld
xor
mov
mov
pop
fild
call
and
cdq
imul
iret
(bad)
je
push
call
mov
rcl
mov
movs
cmps
add
push
call
hlt
jmp
pusha
fidiv
push
pop
cmp
neg
les
inc
sbb
mov
or
and
out
jg
pop
pop
jne
push
push
(bad)
call
or
adc
inc
adc
mov
sbb
or
push
ins
ret
psrld
lea
xlat
push
mov
in
mov
cmps
push
push
push
mov
call
push
fdiv
je
push
aam
nop
mov
inc
mov
mov
mov
jl
inc
add
ja
and
and
into
call
les
cmp
adc
rcl
pop
xor
jmp
dec
cmp
cmp
bnd
mov
stos
mov
adc
xor
dec
adc
add
je
movsx
cmp
jo
jb
mov
loop
jmp
mov
mov
cmp
mov
xlat
call
push
mov
push
xor
cmp
je
push
cmp
adc
mov
adc
call
mov
adc
or
ret
jne
mov
sbb
adc
jmp
mov
mov
mov
and
pop
dec
mov
add
mov
and
test
je
push
outs
ss
adc
mov
pop
lods
neg
in
jmp
jmp
sbb
push
movs
or
inc
mov
test
jne
mov
mov
mov
test
mov
je
call
cli
leave
aad
xor
cmp
loopne
xchg
shr
mov
add
and
sub
lea
pop
mov
jp
inc
loop
ret
add
inc
je
lea
ror
add
sub
or
mov
adc
fisttp
add
mov
adc
jecxz
or
cmp
lods
loope
cmp
pop
pop
aas
(bad)
outs
js
inc
sub
cmp
je
mov
jmp
cmp
movs
hlt
(bad)
dec
pop
mov
(bad)
jecxz
neg
xchg
xchg
sub
push
lea
adc
imul
call
push
clc
cmp
call
sbb
add
rol
stc
mov
push
movsx
jmp
out
or
or
or
pop
mov
mov
add
lea
(bad)
mov
add
lea
mov
add
lea
mov
(bad)
ffreep
push
mov
push
or
loope
or
add
jb
push
inc
ret
xor
push
call
retf
das
inc
lea
outs
xor
mov
sti
fiadd
jp
sbb
xor
pop
leave
ret
push
inc
call
push
mov
call
mov
xlat
or
mov
jne
mov
dec
push
jne
mov
push
jne
outs
lods
mov
mov
cmp
je
(bad)
fnstsw
pop
or
and
adc
mov
call
pop
adc
pusha
icebp
(bad)
push
or
movzx
shr
shl
mov
mov
mov
jmp
jmp
and
pop
cmp
fcom
jg
sbb
mov
call
cmps
sar
mov
daa
mov
jmp
inc
push
push
std
jg
inc
js
inc
je
push
mov
call
aas
shl
fs
jo
jmp
call
stos
inc
mov
push
push
call
or
cmp
ins
fucomi
or
aad
pop
sub
or
pop
pop
pop
js
or
call
rol
or
adc
and
pop
ret
dec
pop
adc
mov
dec
add
jnp
std
(bad)
(bad)
inc
add
jne
xor
jmp
test
jne
xor
cmp
mov
setne
push
lea
out
add
push
daa
inc
shl
dec
leave
cmp
sub
data16
pop
les
loopne
jp
pop
xor
pop
sbb
add
pop
cmp
xor
pop
and
push
mov
jmp
dec
cmp
adc
sbb
iret
cmp
inc
pop
ins
call
adc
fnstenv
(bad)
push
call
sbb
jl
mov
test
jle
mov
push
push
xor
ja
call
inc
(bad)
(bad)
push
adc
dec
adc
pop
jmp
mov
cmp
jne
mov
mov
pop
pop
rcr
add
mov
or
xchg
add
cmp
jge
mov
push
or
test
or
ins
call
call
jle
mov
sub
pop
movs
cmps
jg
jmp
lahf
ror
dec
adc
daa
xor
mov
dec
scas
pop
cwde
ins
fs
(bad)
out
in
call
push
push
fs
adc
je
inc
xchg
inc
aaa
xor
ins
mov
push
call
add
pop
cmp
cmp
jb
sbb
mov
clc
call
xor
aas
cdq
je
mov
into
fild
mov
or
inc
call
pop
hlt
(bad)
es
mov
call
jle
mov
je
xor
cmp
push
loope
sar
inc
into
in
stos
test
adc
or
mov
push
jl
pop
mov
push
call
imul
clc
dec
call
mov
pop
mov
xor
cli
pop
and
lea
int3
dec
sub
push
mov
call
dec
std
iret
jmp
and
add
(bad)
stos
jl
fwait
push
in
lea
mov
push
mov
xchg
rcr
push
call
cli
pop
sbb
mov
mov
call
adc
sbb
je
cmp
jne
fisttp
add
xchg
adc
jmp
push
lea
fcomp
gs
push
jmp
and
pop
mov
mov
inc
lea
dec
test
xor
enter
jp
and
add
adc
pop
ret
cld
and
call
lock
jbe
push
lea
adc
loopne
xchg
xchg
mov
or
and
mov
fiadd
push
xchg
mov
call
lock
jmp
pop
dec
or
dec
in
sbb
jno
clc
fist
jmp
lea
call
movs
std
ja
ja
cmp
push
jne
adc
mov
sar
cmp
add
sub
retf
leave
test
mov
jl
dec
cmp
jle
cmp
je
cmp
xor
arpl
mov
push
push
xchg
out
inc
add
call
in
push
and
je
add
mov
add
(bad)
mov
shl
push
add
or
mov
add
mov
adc
inc
ret
pop
pop
push
add
repnz
cmp
cmp
shl
or
or
jne
jmp
std
pusha
dec
jle
cmp
push
adc
cmp
je
cmp
jne
push
lea
jg
xor
(bad)
jmp
xor
adc
jne
push
mov
call
xor
sub
pop
loope
cmp
test
rcr
jmp
call
shl
loope
jne
call
(bad)
jle
je
mov
pop
pop
jmp
hlt
ja
ret
cmp
pop
ret
sub
push
cmp
xlat
lock
cld
inc
and
add
inc
popa
lea
add
lea
call
test
je
adc
mov
mov
aas
and
jne
mov
push
pop
call
ret
imul
shl
lods
sbb
add
push
(bad)
push
sbb
(bad)
sbb
ins
adc
test
pop
not
jne
inc
loope
push
call
jo
(bad)
aas
lea
sbb
hlt
ror
cdq
sbb
or
es
sbb
jne
sbb
int3
test
mov
push
int
out
adc
arpl
cmp
mov
call
adc
lods
or
icebp
scas
call
xor
dec
sub
call
lea
fmul
xchg
add
jnp
lock
test
add
test
push
push
jg
add
push
(bad)
call
and
and
out
adc
add
call
das
ja
or
mov
fiadd
xchg
inc
inc
cmp
push
push
mov
ud0
adc
pop
cmp
push
mov
call
push
pop
(bad)
hlt
mov
lea
rep
mov
scas
dec
stos
push
stos
lea
js
push
outs
sub
jne
call
xor
and
(bad)
aas
mov
inc
cmp
call
cmp
je
add
cmp
(bad)
in
loop
jge
push
hlt
rol
sub
sete
loopne
mov
lea
xor
add
icebp
xor
dec
add
mov
icebp
mov
or
mov
jle
jne
lock
jg
xor
(bad)
movs
cmc
dec
adc
mov
add
push
call
adc
adc
dec
jo
and
adc
cmovns
push
push
ins
pop
xor
lds
jg
sbb
clc
xchg
mov
adc
push
jne
sbb
pop
push
adc
pop
test
jne
(bad)
dec
sbb
je
loopne
pop
jl
fisub
add
lahf
mov
add
fisttp
or
push
push
call
shr
(bad)
dec
and
add
stos
mov
push
mov
push
mov
call
ds
clc
rol
xchg
mov
lahf
pop
cld
jl
sahf
adc
out
cmps
ss
mov
mov
out
outs
push
mov
mov
or
push
xor
sbb
jns
jg
in
mov
sbb
pop
sbb
jle
add
mov
out
add
push
xchg
(bad)
pushf
and
shl
mov
cmp
xchg
call
mov
and
fst
xchg
test
inc
adc
dec
js
es
or
push
push
xchg
push
push
call
lea
std
out
call
and
mov
dec
scas
and
pop
xchg
mov
dec
cmps
inc
cs
lods
or
add
in
mov
mov
pop
ret
call
outs
mov
dec
cmps
or
push
call
inc
and
xor
imul
or
adc
fld
adc
call
or
retf
jne
push
std
cs
and
cmp
mov
jg
jmp
call
sti
jb
(bad)
mov
add
or
adc
sbb
inc
arpl
push
pop
or
scas
sbb
add
scas
mov
and
xchg
push
cmp
or
shr
cmp
jmp
dec
adc
rol
dec
or
leave
les
inc
push
cmp
lds
xor
in
call
(bad)
jmp
push
xchg
pusha
clc
nop
xchg
shl
add
(bad)
imul
ffreep
mov
push
inc
call
sub
idiv
(bad)
fadd
ins
gs
nop
and
xchg
or
cmc
xlat
adc
sub
fs
jmp
sub
gs
xor
add
push
mov
dec
je
dec
dec
dec
dec
jne
mov
push
pop
jmp
mov
inc
add
push
lea
call
pop
and
cmc
inc
test
fistp
pop
jne
push
adc
cmp
je
mov
xor
push
sbb
dec
mov
cmp
sub
cmp
out
push
push
push
push
push
call
std
jg
je
test
je
cmp
jne
and
cwde
jmp
fnstenv
imul
into
push
mov
pop
leave
sbb
sbb
(bad)
(bad)
fisttp
add
cmp
jne
cmp
jne
push
push
shr
jl
xlat
lock
xchg
dec
pop
adc
push
pusha
and
push
push
jnp
sub
mov
xor
les
push
imul
lea
dec
jl
cmc
dec
adc
test
scas
xlat
mov
lea
rcl
xchg
or
sbb
nop
in
mov
js
push
mov
out
mov
aaa
mov
sbb
sbb
and
adc
shl
cmp
test
lea
pop
lea
clc
pop
cli
mov
and
xchg
push
xchg
add
push
sar
inc
dec
cmp
cmp
ficom
aas
adc
popa
add
call
adc
add
mov
jmp
test
mov
mov
aaa
push
(bad)
jmp
sub
scas
sar
(bad)
iret
(bad)
stc
xor
daa
push
cdq
pop
sbb
ja
mov
cmp
jg
sbb
push
xor
mov
jecxz
pop
jge
lea
pop
xchg
inc
add
cld
mov
sbb
add
and
mov
adc
mov
imul
or
jle
inc
fld
mov
or
(bad)
or
mov
sub
inc
pusha
sub
mov
mov
cmp
jno
data16
into
hlt
ja
add
push
jmp
fnsave
rcr
leave
call
cmp
add
add
inc
xor
es
mov
add
test
push
pop
ins
jl
xchg
call
mov
push
xor
add
leave
ret
mov
(bad)
mov
cwde
push
mov
jecxz
add
pushf
jge
(bad)
daa
dec
ret
adc
cld
pop
xor
add
adc
and
or
add
pop
xor
call
or
jne
fst
fild
or
call
retf
test
aas
mov
pop
or
fdivr
inc
sbb
push
push
or
add
sbb
mov
mov
jae
jb
lock
pop
xchg
adc
(bad)
(bad)
inc
cmp
popa
sbb
call
add
adc
idiv
scas
fwait
pop
lahf
dec
clc
in
xor
call
daa
dec
xchg
cmp
inc
add
inc
jg
mov
call
dec
inc
pop
out
repnz
sar
mov
jne
call
setne
jmp
call
add
out
shl
sbb
(bad)
cli
mov
jnp
fwait
iret
lds
mov
mov
loopne
pop
gs
pop
neg
aas
fucomi
repnz
(bad)
cmp
inc
or
xor
and
push
lods
mov
xchg
neg
fimul
fcmovnb
out
or
les
inc
clc
cs
add
pop
imul
js
iret
sahf
call
pop
repz
call
push
xor
push
push
sti
mov
call
and
ja
or
ret
jmp
call
or
pop
and
mov
pusha
neg
push
and
cmp
add
call
in
mov
ins
cmp
popf
mov
test
and
jge
or
mov
lock
call
jne
push
or
aaa
sar
or
push
call
sub
push
call
jmp
xchg
call
aaa
jne
inc
pop
neg
into
call
pop
aas
fiadd
cmp
push
push
mov
push
sti
mov
(bad)
mov
mov
push
je
(bad)
mov
cmc
je
cmp
je
mov
js
push
dec
call
dec
inc
div
add
add
cdq
sbb
jnp
adc
jnp
fwait
clc
ja
adc
xor
ss
jmp
mov
mov
cmps
sub
sbb
retf
mov
mov
cmps
mov
fistp
fstp
push
jne
push
(bad)
and
icebp
jg
(bad)
cmp
jne
imul
jb
mov
test
jle
test
jne
mov
test
out
clc
inc
push
pop
setne
push
inc
test
pop
stos
inc
imul
imul
mov
ficom
lea
call
test
sub
mov
call
push
pop
mov
xor
in
push
outs
push
call
mov
or
test
xor
cmp
or
pop
adc
mov
pop
or
adc
cmp
adc
push
push
rol
push
icebp
ja
xor
ds
or
cmp
je
cmp
je
cmp
jne
sbb
cli
add
jmp
add
(bad)
mov
and
movs
sbb
sar
jmp
std
(bad)
pop
adc
test
pop
setne
push
pop
inc
test
(bad)
mov
sti
(bad)
call
cdq
idiv
jmp
cmp
je
cmp
je
cmp
jne
xor
sti
add
push
and
inc
shl
adc
aas
pop
sub
or
inc
inc
std
xchg
mov
std
(bad)
jmp
cmp
jle
mov
cmp
add
cmp
mov
add
fmul
out
add
loopne
mov
ror
jne
mov
les
add
sub
or
popa
pop
mov
dec
mov
push
mov
push
scas
sub
jmp
ss
jecxz
out
clc
call
inc
daa
lea
or
add
sub
mov
inc
add
push
mov
cmps
xchg
pop
add
mov
xor
inc
ret
dec
mov
sbb
repnz
mov
aas
mov
add
mov
push
mov
call
push
mov
call
cmc
pop
je
push
push
push
call
fld
or
and
inc
or
mov
mov
std
sub
fadd
or
std
jmp
dec
fist
push
call
push
dec
adc
mov
call
push
out
aaa
int3
pop
and
or
adc
jle
or
mov
push
mov
call
push
inc
push
or
mov
mov
or
push
or
push
les
pop
sbb
mov
sbb
dec
or
push
jg
inc
mov
lea
push
or
adc
les
scas
movs
sub
pop
jmp
ret
in
sub
fild
fidiv
push
mov
idiv
(bad)
mov
inc
inc
dec
mov
dec
cmp
mov
jle
fld1
push
fdivp
and
fmul
fld
call
lea
mov
movsx
movsx
sub
fnstsw
ror
or
jmp
fadd
ret
inc
cdq
mov
pop
jg
pop
pop
fstp
pop
cmp
add
mov
stos
aas
push
movs
push
mov
lea
popf
mov
shl
sbb
or
mov
mov
test
(bad)
or
sti
dec
je
mov
mov
cmp
je
lea
rol
or
ror
not
add
fild
inc
sahf
test
nop
sti
fbstp
div
lea
mov
bound
inc
and
in
mov
mov
cmp
stos
pop
push
jne
jne
xor
(bad)
idiv
or
je
lea
into
lds
fcomi
lock
lods
dec
and
push
lea
mov
je
push
lea
pushf
mov
push
call
cmp
mov
pop
pop
adc
ret
add
mov
(bad)
fcomp
fldenv
fmul
add
cmp
jbe
sbb
dec
pop
jno
fcom
xor
jp
fstp
fldz
jmp
fcom
adc
fadd
adc
pop
(bad)
add
dec
sahf
jmp
push
fstp
mov
cli
aaa
mov
push
pop
push
pop
push
jmp
pop
cmp
jg
aad
inc
fs
cmp
jg
arpl
push
pop
or
psadbw
add
add
fidivr
retf
sbb
fs
push
add
xor
jmp
and
xchg
mov
aaa
add
push
pop
jne
push
jmp
add
cdq
loopne
scas
pop
lahf
int
sahf
stc
and
pop
lods
or
push
or
mov
call
mov
and
jne
cmp
je
or
mov
je
(bad)
and
add
fld
push
fcomp
lods
mov
cli
dec
clc
scas
mov
scas
fstp
jmp
adc
push
(bad)
(bad)
fcomp
sbb
or
or
cli
fmul
stos
(bad)
fsub
pop
lds
call
inc
xor
mov
pop
push
mov
outs
sub
and
inc
lea
push
es
inc
clc
xchg
push
out
clc
(bad)
(bad)
jl
add
mov
mov
mov
xor
mov
mov
fmul
data16
inc
mov
inc
cld
mov
cmp
jne
jmp
pop
adc
test
(bad)
mov
cld
cmp
jg
cmp
jne
mov
sar
push
js
or
inc
lock
scas
and
add
jo
cmp
push
cmp
lods
sar
orps
mov
add
jmp
(bad)
fistp
cli
add
call
add
test
add
movzx
xor
rol
clc
mov
mov
sbb
(bad)
jmp
mov
add
aas
xor
cmp
jne
cmp
je
popf
out
(bad)
(bad)
fbstp
push
mov
mov
mov
push
push
call
mov
scas
fdivr
jne
sbb
or
repnz
add
add
xor
clc
or
pop
push
sti
ja
inc
rcl
in
call
inc
icebp
add
and
push
das
add
das
inc
cli
ss
pop
ins
sub
sbb
dec
and
mov
mov
xchg
push
xchg
repnz
cs
fist
je
add
or
or
add
popf
or
ja
int
or
mov
call
pop
icebp
and
or
aam
ret
xchg
cmp
jne
inc
out
mov
call
or
je
cmc
inc
and
push
daa
jne
cmp
sub
or
clc
div
xchg
ss
mov
mov
dec
in
mov
add
ret
(bad)
pop
xchg
inc
sbb
clc
push
push
xor
stc
sbb
loopne
(bad)
xor
mov
je
fild
fstp
sub
js
add
js
fnsave
sbb
mov
cmc
cld
or
add
pop
pop
leave
sub
mov
cmp
pop
mov
mov
imul
icebp
inc
mov
dec
adc
sbb
pop
inc
and
mov
stos
or
adc
dec
out
xchg
js
sahf
dec
adc
mov
loop
call
push
call
or
enter
retf
dec
cmp
mov
xlat
xor
sar
mov
mov
xor
cmp
xchg
ret
xchg
aad
sbb
sbb
fnsave
scas
mov
fisttp
jae
push
call
inc
sub
cmp
test
or
push
push
push
call
clc
push
sbb
outs
adc
adc
in
pop
jmp
(bad)
out
sbb
push
xor
push
lea
add
xchg
shl
cli
push
mov
inc
out
enter
fadd
sbb
dec
add
push
in
lahf
add
dec
cmp
jne
lea
ins
icebp
jmp
inc
fwait
(bad)
sbb
push
xor
push
in
scas
pusha
sub
or
fwait
out
cmps
xchg
test
jne
or
sbb
push
gs
test
(bad)
loop
mov
mov
or
push
lea
push
call
fdivr
jle
dec
adc
je
sbb
cwde
dec
push
lock
mov
ins
nop
or
fadd
adc
push
pop
add
push
imul
push
call
inc
loopne
inc
aam
ja
cmove
inc
jmp
push
mov
dec
mov
movzx
cmp
lock
push
clc
popa
jne
mov
call
(bad)
sti
stc
inc
push
call
std
out
xchg
push
call
inc
mov
jne
push
dec
std
outs
sahf
push
in
test
push
add
dec
rcl
enter
xor
rol
shr
std
call
or
push
(bad)
cli
call
push
add
movaps
push
lea
fstp
outs
or
call
inc
sbb
or
pop
clc
sbb
fcomp
mov
sub
test
mov
je
fstp
pop
xor
inc
hlt
rol
pop
in
ss
and
add
jle
fucomip
fnstenv
call
cmp
lock
add
fstp
pop
dec
bound
dec
jbe
fcomip
sbb
fmul
lock
jne
test
jne
add
dec
inc
add
cmp
jbe
jmp
or
dec
clc
mov
or
ds
inc
clc
add
mov
aam
xor
add
(bad)
sbb
inc
lock
cmp
jb
mov
sub
push
mov
call
dec
daa
stos
ret
add
add
push
mov
test
(bad)
(bad)
sbb
test
retf
dec
or
xor
jbe
mov
cld
mov
mov
mov
movzx
xor
mov
mov
dec
push
mov
shl
or
add
in
adc
rol
ror
or
(bad)
inc
xor
scas
enter
in
inc
pop
add
cmp
jl
sub
or
cs
mov
mov
sub
inc
cld
adc
clc
shr
neg
jne
pop
jae
push
dec
or
rcl
lahf
test
lea
scas
mov
aam
(bad)
dec
mov
mov
mov
and
cmp
mov
je
cmp
jne
(bad)
cmp
(bad)
aas
out
adc
clc
inc
je
mov
push
lea
mov
push
std
push
mov
call
or
loop
arpl
mov
mov
mov
ret
call
shl
(bad)
pop
clc
cmp
lock
and
in
(bad)
add
push
call
je
imul
inc
adc
dec
or
inc
cmp
call
lahf
or
inc
or
out
sbb
push
call
push
mov
fdivr
add
jne
prefetch
or
daa
rcl
retf
mov
call
dec
add
pop
test
mov
pop
pop
aaa
jmp
popf
lea
push
call
adc
rcl
cmp
dec
adc
sbb
test
inc
fs
fldz
or
in
pop
inc
fwait
ss
adc
cmp
lds
inc
push
(bad)
mov
out
out
stos
mov
add
clc
mov
je
jle
retf
mov
pop
sbb
sbb
cmp
pop
ror
inc
dec
test
or
and
mov
sti
inc
lea
es
(bad)
cmp
je
xchg
push
pop
add
push
inc
inc
and
adc
mov
mov
test
push
push
call
sbb
and
mov
push
lea
jne
inc
dec
add
dec
hlt
daa
mov
into
xchg
mov
jne
and
xchg
(bad)
cmp
pop
fst
cmp
add
pop
pop
xchg
cmp
jne
xor
aam
loopne
add
mov
loope
sti
stc
push
call
outs
push
mov
fsub
xor
inc
mov
inc
push
jne
inc
arpl
jle
ss
das
cmp
or
add
dec
dec
es
mov
cmc
mov
imul
adc
push
lea
push
ins
mov
and
popf
sub
pop
adc
mov
or
pop
je
push
pushf
sbb
neg
jle
es
xchg
push
fdivr
std
add
mov
ret
jmp
add
adc
call
inc
jg
push
sbb
call
cld
xor
cmp
sub
pop
ret
je
rol
mov
clc
push
push
out
mov
aas
jmp
test
(bad)
enter
mov
jne
inc
cmp
jl
jmp
ss
jne
cmp
or
retf
mov
out
inc
add
and
je
jbe
push
test
lahf
ror
and
fisttp
cwde
add
inc
idiv
sub
dec
aas
or
lahf
cmp
dec
neg
sbb
inc
or
dec
(bad)
fisttp
mov
ret
outs
stos
cmp
cmps
dec
sar
jle
pop
add
(bad)
dec
add
push
pop
jmp
jae
fs
dec
push
mov
movzx
mov
push
call
jbe
neg
sub
lea
or
fcomp
cmp
mov
pop
adc
ret
mov
mov
sti
adc
dec
or
enter
xor
scas
je
cmp
jg
cmps
add
mov
mov
adc
pop
call
test
xchg
clc
mov
xchg
jle
add
sub
jo
es
jnp
push
call
call
(bad)
mov
mov
or
leave
mov
push
mov
sar
hlt
dec
jg
push
push
push
call
call
mov
push
mov
pop
les
push
dec
push
push
xor
push
(bad)
out
sbb
fisttp
pop
cmp
je
(bad)
and
jmp
clc
rcr
add
mov
and
out
les
mov
ds
mov
call
loope
adc
out
inc
pop
imul
cmp
jns
ja
sub
je
add
dec
sub
adc
jg
dec
jo
push
xor
sub
inc
lock
jne
jle
sbb
xor
int3
ficom
mov
fstp
mov
call
jmp
pusha
mov
add
test
out
and
xor
cmp
mov
and
cwde
movs
clc
ss
in
mov
inc
pop
inc
je
test
sbb
test
inc
cmps
mov
mov
int3
add
push
mov
mov
mov
dec
call
js
or
in
test
mov
popa
push
test
jbe
jmp
and
jge
jne
dec
sti
out
jle
out
loopne
mov
ja
add
ret
jp
inc
mov
call
push
jmp
icebp
daa
in
test
pop
je
rcl
jne
mov
add
sbb
jmp
mov
je
iret
rol
adc
cmp
add
and
aaa
push
xor
pop
mov
and
call
and
adc
xchg
sbb
and
inc
inc
ins
stc
cmps
sahf
dec
add
xor
and
jo
or
pop
adc
push
lea
push
call
fidivr
inc
sub
adc
add
sbb
mov
push
or
je
add
pop
push
sete
aam
call
imul
and
leave
mov
push
sete
push
cmp
cld
lea
call
sub
jne
mov
fnstsw
sub
xchg
repz
out
ss
test
jns
xor
add
inc
cmp
mov
cmp
pusha
repz
add
cmp
mov
call
std
rol
push
jns
push
es
shr
or
pop
shl
dec
out
call
fiadd
lods
sar
sub
iret
(bad)
push
outs
push
cmps
inc
xchg
mov
jo
(bad)
call
inc
cmp
jl
mov
sti
test
cmp
push
ffreep
cli
loop
or
pop
call
jle
jmp
mov
inc
xor
pop
push
jne
cmp
jne
push
lea
xlat
pop
mov
call
call
push
sbb
xor
scas
or
mov
dec
inc
loope
mov
div
cmp
pop
out
mov
mov
fmul
lea
lock
jl
sti
add
dec
and
add
pop
adc
mov
mov
(bad)
push
push
call
inc
icebp
(bad)
jmp
push
mov
call
test
dec
ins
add
sbb
and
push
fcom
add
inc
and
mov
jle
icebp
inc
ror
push
les
push
add
add
push
rcl
jmp
data16
aas
les
sbb
repnz
stc
mov
inc
sar
and
mov
mov
dec
rol
call
ror
pop
add
inc
pop
mov
add
cmp
or
imul
mov
xchg
mov
cmp
je
mov
jmp
xor
jne
sar
cmp
je
ja
ror
and
sub
sbb
jp
adc
sub
je
dec
je
dec
jne
add
push
gs
sbb
jmp
mov
call
(bad)
cmp
je
sub
add
iret
call
aam
or
aam
aam
jp
inc
push
fild
jmp
test
call
and
mov
ret
sbb
aaa
and
push
push
call
scas
xor
sub
int3
push
add
inc
inc
cmp
sub
cmp
mov
and
jmp
pop
clc
pop
or
jl
dec
inc
push
fist
add
rcr
add
aas
add
or
xor
jg
sub
dec
je
dec
je
dec
je
adc
clc
mov
lock
and
adc
sub
inc
jo
(bad)
out
out
sbb
mov
retf
ins
fld
jmp
fild
jmp
mov
pusha
fild
test
push
jge
(bad)
sub
es
push
enter
push
mov
aaa
or
push
clc
out
mov
push
iret
repnz
(bad)
(bad)
into
cwde
stos
pop
nop
pop
mov
inc
loopne
or
jp
add
push
cld
push
mov
call
pop
je
push
rcr
jg
outs
add
mov
jne
or
cld
add
mov
call
pop
nop
or
call
cmp
je
cmp
je
cmp
jne
push
push
cwde
out
loop
cli
loopne
sahf
fwait
cmp
jne
sbb
call
(bad)
call
stc
mov
mov
movzx
push
cld
rol
pop
jo
jle
je
mov
mov
out
or
inc
test
jbe
dec
data16
idiv
test
xor
ror
(bad)
(bad)
jg
push
fmul
xor
inc
in
add
std
dec
add
add
out
add
dec
pop
jne
mov
pushf
sbb
inc
pop
pop
pop
and
jge
in
dec
aam
push
call
xchg
call
xor
adc
loop
add
jmp
pusha
mov
sar
add
test
je
add
lds
add
mov
add
call
ja
lods
je
cmp
test
loopne
aas
dec
arpl
add
push
hlt
cmps
cmp
mov
and
ins
push
push
ret
push
je
dec
loope
fcmovnu
fld1
pop
test
add
pop
in
xor
xchg
inc
inc
mov
stos
loopne
setne
call
retf
mov
(bad)
test
je
xchg
xor
inc
(bad)
call
loopne
mov
xor
test
mov
fstp
fldz
jle
mov
movsx
mov
fild
fmul
call
mov
popf
cmp
jg
mov
cmp
jge
mov
test
mov
mov
(bad)
mov
neg
(bad)
xor
inc
lock
fild
fdivr
fstp
fst
jmp
fstp
push
xor
jle
int3
cmp
mov
sbb
cld
or
sub
inc
les
ret
jg
inc
enter
push
call
cmp
pop
jle
mov
fsubr
or
fcomp
push
fld
add
inc
sub
fmul
jp
ja
hlt
sbb
push
add
sti
das
mov
clc
add
pop
sbb
jb
in
xlat
xchg
fbstp
add
inc
clc
jge
ja
cmp
jb
xor
push
call
call
and
or
scas
ins
in
xor
int3
inc
inc
(bad)
mov
mov
aaa
cmp
add
sbb
cmp
call
xor
xchg
adc
cmp
ja
mov
call
clc
xchg
sbb
pop
or
xchg
sti
(bad)
out
or
call
mov
mov
std
dec
mov
mov
push
cli
paddd
sbb
mov
lea
mov
stos
inc
xor
inc
inc
inc
(bad)
jb
dec
pop
call
push
mov
(bad)
retf
call
xchg
out
loop
(bad)
in
push
xchg
orps
fs
fist
cmp
mov
cmp
sti
dec
loope
mov
call
cmp
je
mov
mov
je
push
fs
es
imul
push
push
mov
dec
or
jg
inc
or
test
jne
xor
aam
sbb
push
iret
mov
ja
adc
call
pop
sub
jl
xchg
mov
push
(bad)
loop
popa
cdq
std
jmp
aaa
mov
jmp
cmp
aad
add
or
sbb
pop
cld
setg
push
rcr
ret
jge
add
and
into
je
call
xchg
lea
push
push
push
push
dec
or
in
sub
jbe
call
mov
sbb
pusha
in
push
add
push
hlt
es
(bad)
mov
xor
and
test
push
call
add
add
jbe
cld
cmp
push
cmp
je
sar
mov
push
leave
dec
retf
sbb
call
xchg
retf
nop
adc
retf
fcom
mov
bound
add
inc
cmp
shl
out
jg
push
mov
mov
dec
neg
call
push
test
test
jle
and
pop
call
cmp
cmp
jecxz
xchg
push
movs
(bad)
inc
pop
adc
mov
push
mov
inc
inc
into
pop
jmp
scas
pop
daa
sbb
or
adc
jecxz
(bad)
call
stc
adc
loopne
sub
xchg
pop
in
mov
inc
fist
sbb
or
lods
pop
mov
or
fnstsw
das
add
xchg
sbb
arpl
sub
dec
sbb
outs
xor
lea
test
jns
jne
xchg
cmp
arpl
loop
sub
inc
and
add
mov
pop
je
(bad)
mov
fldz
mov
cmc
sti
push
pop
shl
fstp
call
mov
inc
inc
nop
jg
and
cdq
cli
and
(bad)
sar
(bad)
jle
pop
fldz
fstp
call
add
dec
jne
mov
jmp
inc
or
or
adc
loopne
adc
or
std
nop
call
mov
mov
inc
push
rcl
sub
push
mov
(bad)
out
lods
push
push
fsubrp
mov
pop
clc
sub
fld
push
inc
cmp
daa
in
sar
icebp
repnz
fstp
scas
lea
sbb
mov
cmp
xor
fstp
add
add
cmp
ss
inc
or
sub
push
call
aad
push
sub
(bad)
mov
fild
mov
xor
inc
fstp
inc
push
frndint
scas
mov
pop
call
mov
call
daa
add
loope
fld
div
sub
and
cmps
pop
and
inc
inc
sbb
lock
pop
fdivr
ds
mov
jge
push
and
fstp
lea
add
fld
push
sub
pcmpeqd
popf
call
mov
shl
fmul
mov
fsub
idiv
es
push
int3
loopne
pop
add
(bad)
jg
pop
fmul
sbb
pop
clc
add
fadd
inc
cmp
les
jae
ror
inc
clc
stc
jae
fist
adc
jge
pop
pop
fld
push
(bad)
aaa
hlt
out
out
stos
les
call
cmp
jae
xor
mov
aad
pop
(bad)
call
or
xchg
cmc
or
adc
cld
stos
mov
data16
hlt
outs
loopne
add
push
mov
mov
inc
mov
mov
mov
mov
stos
inc
add
xchg
jge
sar
outs
sub
mov
mov
or
adc
sbb
or
sbb
and
adc
jg
call
mov
mov
cmc
sbb
cmp
jne
cmp
dec
add
jmp
mov
mov
push
xchg
hlt
stos
stos
lea
xor
sbb
stos
mov
push
call
sub
inc
lock
sub
call
aas
add
stc
sub
sar
test
je
mov
jg
mov
test
jl
test
mov
fcmovnbe
push
test
call
dec
test
adc
div
jle
add
add
mov
scas
fild
jg
push
or
add
sub
push
dec
je
dec
lahf
iret
out
push
(bad)
pop
ret
mov
add
sub
and
cmc
add
xor
adc
dec
push
cmp
mov
mov
mov
mov
nop
clc
and
jae
cmp
or
sub
xlat
add
stc
ror
inc
das
pop
idiv
and
js
adc
je
inc
je
leave
idiv
add
pop
outs
add
cmp
cmp
mov
dec
div
cmp
cmp
lea
mov
push
cmp
push
cmps
dec
lahf
std
jmp
enter
loop
adc
dec
or
mov
push
call
sbb
hlt
call
cmp
add
xor
test
clc
add
aaa
cwde
jo
retf
jle
leave
jge
cmc
jmp
add
add
test
ss
add
fs
or
scas
mov
rcr
jne
dec
sub
rcr
push
mov
pop
inc
sub
mov
push
lea
jmp
repnz
dec
add
jle
pop
adc
mov
add
mov
add
adc
sti
mov
call
in
and
mov
dec
leave
movs
or
call
push
inc
shr
inc
call
jge
mov
stos
or
mov
cmp
adc
xor
cmp
je
jnp
mov
or
jo
icebp
outs
push
jo
mov
mov
(bad)
(bad)
call
push
xor
pop
mov
lea
rep
lea
push
mov
mov
mov
cld
dec
and
rcr
sub
jmp
lea
mov
rep
jmp
into
je
call
fld
in
lea
push
push
push
fstp
psubusw
call
sti
xchg
cmc
(bad)
jmp
sbb
push
push
call
add
dec
call
std
mov
lea
jo
nop
cmp
add
(bad)
(bad)
mov
mov
pop
sbb
inc
and
add
mov
mov
push
mov
imul
add
mov
or
sub
fidivr
lea
test
adc
jo
push
dec
ret
fld
mov
add
push
or
pop
lea
rep
lock
dec
push
call
icebp
sbb
inc
xchg
push
jle
jg
or
jl
aaa
lea
call
mov
mov
xor
inc
test
mov
push
je
mov
jmp
or
clc
and
dec
dec
sub
paddq
mov
je
or
rcr
push
pop
sub
jne
jo
rcr
push
test
je
push
push
call
enter
aaa
jmp
sub
inc
add
jbe
or
in
jns
call
not
test
call
sbb
mov
jae
dec
pop
mov
test
jne
jmp
or
push
jmp
cmp
je
add
jb
test
into
iret
(bad)
clc
(bad)
push
push
push
call
dec
or
dec
pop
adc
adc
dec
mov
mov
sub
mov
jns
inc
(bad)
mov
mov
mov
mov
mov
mov
inc
fwait
sub
xor
fimul
jg
cld
pop
pop
and
outs
pop
jge
add
and
dec
and
in
call
adc
aam
adc
test
pop
mov
cmps
add
mov
xor
inc
jmp
xor
xchg
mov
jl
add
ret
pop
mov
sahf
push
pop
jge
mov
cmp
mov
push
dec
clc
pusha
lds
xor
push
xchg
xor
mov
fnstsw
call
je
and
jns
adc
sub
xchg
pop
and
pop
adc
ss
add
call
mov
sbb
sbb
push
pop
call
loop
fnsave
adc
mov
(bad)
imul
sbb
clc
xlat
add
add
push
cmp
push
push
call
cdq
pop
xchg
out
call
call
fcomip
jg
jne
push
mov
mov
call
call
fmul
in
and
loopne
aas
repz
outs
test
jle
sti
mov
(bad)
(bad)
jnp
mov
jl
popa
push
add
call
fistp
inc
mov
xor
jl
into
shr
das
scas
xchg
xchg
xchg
clc
pop
arpl
push
imul
call
popf
loopne
sub
sub
in
icebp
mov
mov
sub
or
or
test
push
add
sbb
es
ja
add
pushf
sahf
fdiv
mov
push
jo
aaa
mov
adc
inc
or
add
ffree
ja
jle
add
pop
add
mov
dec
sub
rcl
ret
jmp
call
adc
or
call
cmp
sub
dec
add
cli
(bad)
cmp
dec
or
add
xor
loopne
repnz
fcomp
(bad)
fild
push
push
setp
or
shr
scas
movlps
inc
or
mov
pusha
jl
push
loop
call
inc
je
dec
jne
dec
push
push
mov
push
call
inc
inc
jmp
adc
or
ins
js
call
or
mov
lea
jne
call
fstp
popf
inc
jle
and
sub
jbe
call
add
mov
idiv
mov
dec
fiadd
add
sbb
call
inc
cmp
idiv
jecxz
cld
jle
cs
push
pop
add
mov
icebp
daa
jmp
add
mov
call
inc
inc
inc
jg
cli
pop
add
inc
sbb
ins
js
ret
call
stos
js
mov
aad
adc
sbb
and
adc
sub
call
xor
or
push
add
or
stos
jmp
pop
push
pop
icebp
mov
mov
test
call
push
pop
jecxz
je
jecxz
dec
push
push
add
mov
mov
inc
cmp
xchg
cmp
inc
bound
ret
iret
jb
fs
ret
adc
das
add
dec
xchg
adc
add
jb
inc
fwait
in
push
xor
jp
frstor
(bad)
dec
pop
dec
jne
mov
test
push
push
pop
test
cld
xchg
mov
call
dec
lock
mov
add
rol
lea
mov
aaa
out
call
or
sbb
popa
(bad)
xor
jo
xor
stos
jmp
inc
int
(bad)
call
or
add
dec
sahf
pop
xchg
xor
fadd
or
or
je
dec
mov
push
(bad)
(bad)
ffreep
mov
neg
je
mov
jmp
add
mov
jne
or
jmp
mov
mov
push
call
mov
push
call
(bad)
mov
inc
add
pop
push
push
fbstp
push
ror
inc
or
push
mov
push
mov
fsubrp
mov
call
cmp
jmp
mov
mov
add
lahf
sar
out
and
jmp
mov
pop
and
call
sbb
push
jne
jns
iret
dec
stc
mov
nop
ficomp
sbb
ins
xlat
pop
cmp
call
cld
out
cmps
sub
imul
pop
inc
pop
(bad)
pusha
pop
add
inc
mov
icebp
and
push
xor
push
xor
sbb
fld
jb
mov
dec
xchg
mov
scas
lds
and
cld
push
call
sbb
sti
jmp
mov
call
adc
sub
cwde
and
adc
pop
fnsave
dec
cli
idiv
ss
jb
scas
dec
data16
mov
xchg
stos
sbb
leave
popa
sbb
int3
and
mov
sti
call
cld
call
imul
push
into
call
cmc
test
pop
test
jbe
(bad)
dec
mov
out
cmp
popf
call
sbb
cmp
xor
jp
sbb
call
or
hlt
sub
icebp
cmp
sbb
cmp
push
call
push
jl
push
mov
pop
pop
sub
int3
bound
xor
or
add
cmps
neg
jne
cmp
sti
xor
sbb
or
je
push
lea
mov
cli
call
push
push
push
dec
or
(bad)
pop
lock
cmp
xlat
fnsave
fist
push
push
mov
adc
iret
paddusb
inc
jne
or
or
push
or
iret
loope
daa
lods
cmp
ret
ja
jecxz
lea
call
ret
adc
loope
inc
aas
inc
loopne
clc
stos
clc
push
push
int3
cdq
inc
pop
and
and
mov
dec
dec
mov
or
call
pop
inc
ja
dec
or
or
aaa
repz
jne
mov
xor
cmp
(bad)
jg
inc
sbb
mov
or
hlt
call
push
fld
and
lods
or
loop
(bad)
call
lahf
stos
(bad)
xlat
dec
push
push
push
hlt
pop
ffreep
mov
cmp
jmp
inc
xor
hlt
cmp
je
call
inc
mov
push
ss
or
ds
push
push
call
hlt
gs
sub
imul
sbb
fist
cwde
and
je
sbb
pop
in
or
(bad)
jl
in
and
jge
aas
pusha
loope
jl
mov
push
mov
call
jmp
clc
call
or
js
into
and
jne
call
scas
add
out
jae
mov
xchg
pop
pop
dec
(bad)
or
adc
ret
mov
(bad)
adc
mov
jmp
xchg
arpl
call
add
mov
jno
xor
mov
or
and
inc
pop
or
or
jle
in
inc
mov
fucomp
call
or
push
push
add
adc
call
and
add
xor
sbb
xor
or
dec
je
fisubr
xchg
inc
add
in
pop
push
pop
xchg
mov
add
jo
in
(bad)
les
mov
int3
push
ror
xor
cmp
inc
sub
inc
add
jne
fisubr
mov
push
pop
mov
mov
push
jg
jmp
jp
xor
and
sbb
jmp
push
inc
dec
into
fiadd
dec
mov
ds
inc
shr
pop
push
push
iret
add
jmp
scas
(bad)
push
jmp
push
mov
call
clc
mov
lock
aad
(bad)
jne
and
mov
sub
add
mov
pop
adc
jge
repz
dec
push
icebp
stos
stos
stos
(bad)
call
(bad)
pop
pop
mov
pop
mov
add
jg
add
call
mov
push
push
inc
sahf
dec
hlt
xor
arpl
push
adc
jecxz
inc
clc
jae
jb
and
call
call
mov
pop
ficom
call
dec
dec
push
dec
or
movs
je
test
jne
push
(bad)
xor
(bad)
pop
jmp
movs
jnp
inc
call
push
inc
cmps
fdiv
inc
daa
mov
jmp
or
cmp
jle
cmp
jl
jo
xor
pusha
daa
neg
call
mov
mov
call
idiv
or
retf
cmp
jle
xor
push
push
push
inc
push
mov
mov
call
or
adc
cmp
sbb
push
mov
loop
fsub
dec
call
test
adc
mov
mov
ins
das
loop
ret
repnz
rcl
and
outs
sti
not
sbb
push
mov
cmp
and
xchg
cmp
jbe
sti
fwait
mov
arpl
test
cmp
jne
std
mov
pop
hlt
mov
mov
test
cmp
mov
test
mov
call
sahf
sbb
adc
xor
xchg
mov
(bad)
and
pop
out
push
cwde
mov
dec
and
push
es
les
mov
shr
in
pop
inc
call
fild
cs
(bad)
jmp
cmp
into
retf
mov
je
dec
add
add
dec
or
push
call
loopne
pop
es
jmp
xor
xchg
cmp
cmp
jne
mov
mov
inc
mov
popa
or
jb
or
aas
add
xchg
ror
shr
cmp
add
ret
jl
add
push
or
mov
retf
xchg
mov
aas
test
add
xor
sub
pop
adc
pusha
aam
add
test
jg
and
or
sbb
cmp
je
shr
jmp
jne
fst
jnp
or
je
ror
scas
call
mov
enter
call
push
popa
push
mov
xchg
jmp
add
mov
aas
sbb
add
push
push
or
mov
push
call
fstp
jne
jne
push
push
cli
(bad)
jmp
bound
ror
sub
test
(bad)
push
call
push
inc
adc
mov
adc
(bad)
in
pop
fild
in
pop
call
bound
cmc
mov
push
or
std
inc
sar
lahf
loope
cmc
dec
imul
xor
cmp
setne
inc
inc
pop
daa
add
(bad)
stos
jmp
dec
mov
sub
push
inc
adc
mov
xor
add
ja
and
and
(bad)
dec
cmp
cmps
push
call
and
or
mov
aad
call
and
jnp
bound
out
test
mov
jbe
pop
sub
ja
aam
ja
push
call
pop
into
mov
bound
pop
test
jnp
sti
cmp
jle
cmp
jl
jbe
mov
dec
mov
mov
or
mov
les
pop
push
call
push
or
int
inc
mov
call
loope
je
(bad)
out
add
xchg
idiv
push
push
push
dec
lock
fild
fstp
push
enter
aaa
dec
call
scas
retf
adc
pop
rcr
or
and
pop
adc
adc
or
outs
adc
mov
test
jne
shl
and
call
xchg
dec
add
sar
dec
jbe
cmp
out
dec
leave
push
retf
call
pop
rcl
mov
cmp
inc
xor
mov
or
add
pop
sbb
push
cld
xchg
xor
je
(bad)
pop
out
add
sete
mov
push
call
mov
test
pop
push
jae
push
call
daa
clc
(bad)
call
ret
mov
push
lods
movs
lea
or
push
hlt
call
inc
jp
xchg
cld
call
test
cmps
xor
aas
fwait
xor
les
test
cmp
fsubr
and
lahf
lock
ret
stc
jmp
call
test
sbb
dec
lds
dec
arpl
mov
pop
js
push
call
cmp
retf
cld
mov
mov
mov
xor
sub
inc
je
push
call
test
aam
jp
sbb
idiv
cli
mov
mov
mov
cmc
loope
mov
sbb
dec
or
jo
push
call
fs
pop
or
adc
pop
mov
or
out
lock
jne
test
cmc
retf
call
pop
pop
je
push
mov
call
enter
fadd
mov
pop
mov
mov
fmul
call
inc
sub
inc
(bad)
(bad)
out
dec
jl
je
dec
je
dec
je
dec
dec
jne
inc
cmp
icebp
in
int
ss
add
dec
int3
leave
je
sbb
push
push
add
sbb
and
add
xor
dec
dec
out
or
xchg
xor
mov
push
loope
cmc
into
pop
call
push
mov
push
or
mov
cmps
add
pop
push
jmp
jne
mov
add
push
mov
lahf
sar
call
mov
add
jbe
push
(bad)
pop
jmp
inc
inc
push
into
mov
cld
dec
ret
cmps
sub
sbb
dec
mov
cmp
jne
push
jmp
dec
cmp
push
and
add
cmp
mov
push
imul
adc
or
fmul
jbe
sub
clc
int
fld
sbb
cmps
(bad)
int3
mov
test
jne
xor
xor
add
shl
xor
sbb
and
mov
test
je
mov
mov
xor
pop
dec
or
in
inc
push
call
inc
and
jnp
dec
xor
cmp
push
push
call
mov
inc
and
xchg
add
das
outs
mov
dec
and
mov
cmp
and
mov
dec
inc
cmc
inc
and
xor
cmp
fwait
or
sbb
ret
jmp
mov
or
cmps
xchg
ror
pop
je
fdivr
dec
cld
mov
mov
push
mov
call
jmp
sub
clc
fistp
arpl
and
cmp
jge
mov
call
mov
call
push
add
icebp
push
cs
aas
inc
repnz
jne
inc
cld
jmp
cmp
icebp
sbb
cmp
cmp
ror
mov
dec
jne
and
retf
cmp
sbb
mov
call
clc
mov
call
add
mov
ins
mov
push
and
xchg
lock
jle
push
je
test
je
jl
add
mov
mov
leave
cmp
lea
pop
mov
mov
push
push
mov
loop
(bad)
stc
loope
jne
push
ja
add
push
mov
push
mov
jmp
push
sub
mov
mov
cmp
jge
cmp
fdivr
jne
sbb
test
sbb
sbb
fsubr
mov
(bad)
or
jmp
in
retf
mov
sysenter
push
cmp
pop
xor
push
cld
push
and
scas
adc
pop
cld
(bad)
dec
add
xchg
(bad)
dec
(bad)
out
xor
push
push
call
stos
pop
mov
mov
shr
jmp
nop
push
into
in
shl
and
pop
mov
add
ds
xor
xlat
sub
out
ret
pop
push
dec
sbb
fisttp
inc
sbb
call
pop
pushf
fcomi
pop
sbb
mov
xchg
mov
loop
push
jmp
cmp
or
dec
xchg
into
xor
adc
or
push
push
inc
adc
int3
adc
idiv
mov
or
adc
call
paddq
xor
(bad)
and
mov
add
stos
dec
mov
adc
pop
ror
pushf
or
(bad)
aas
je
or
clc
or
ror
inc
out
addr16
push
(bad)
cmp
pop
les
adc
dec
and
push
mov
cmc
call
sbb
or
and
lock
or
inc
or
mov
mov
mov
mov
rcr
sbb
test
pushf
sub
mov
mov
mov
call
retf
sbb
js
mov
or
mov
rcr
sbb
dec
call
call
sti
sti
xor
std
mov
pop
mov
xor
sar
leave
sar
loope
mov
dec
and
jne
push
push
inc
in
fist
mov
call
or
and
ja
push
and
mov
sbb
call
adc
xchg
sub
inc
dec
sbb
jae
(bad)
neg
pop
sbb
pop
mov
mov
dec
dec
dec
cmp
jne
or
jmp
sbb
or
xlat
out
mov
jne
(bad)
call
add
inc
and
inc
scas
or
mov
(bad)
(bad)
jmp
xor
cmp
sete
mov
outs
or
mov
test
mov
std
dec
(bad)
push
inc
pop
jmp
mov
mov
mov
add
sar
mov
setne
mov
and
jmp
mov
imul
jo
popa
pop
add
clc
(bad)
cmp
jne
shl
out
dec
jo
dec
je
sbb
iret
sbb
mov
jo
sbb
es
mov
add
mov
push
in
inc
aam
ret
(bad)
sbb
je
iret
hlt
lock
lods
stc
or
and
mov
rol
xor
add
sbb
adc
mov
(bad)
mov
cmps
fadd
aam
mov
(bad)
(bad)
mov
fucomi
pop
mov
mov
mov
mov
push
call
jg
cmp
adc
in
or
jmp
call
or
in
cmp
or
or
mov
mov
test
inc
and
outs
loopne
fbstp
call
push
call
push
inc
test
cmps
pop
inc
adc
mov
mov
lods
icebp
je
mov
cli
dec
inc
mov
mov
or
push
mov
cmp
scas
and
or
call
add
dec
sbb
call
or
les
mov
or
pop
jmp
push
aaa
mov
test
out
imul
je
push
les
pop
or
push
xlat
loopne
pop
or
push
push
pop
pop
jl
ds
or
call
fild
add
inc
adc
pop
sub
adc
add
adc
sbb
je
ffreep
adc
fwait
mov
push
sbb
mov
sbb
and
mov
(bad)
neg
sub
push
add
jae
xlat
hlt
call
adc
push
cmp
xchg
xor
pop
ret
cmp
fbstp
gs
inc
or
inc
mov
clc
hlt
out
call
add
jbe
cmp
scas
mov
mov
call
fcomip
jmp
jne
mov
jmp
xor
push
test
pop
inc
dec
inc
or
stc
(bad)
out
jmp
jns
add
dec
je
mov
or
dec
add
mov
(bad)
sbb
mov
ja
push
sbb
pop
adc
or
fdivrp
aaa
cmp
je
mov
push
ss
mov
scas
retf
iret
call
icebp
fisttp
das
add
mov
mov
pop
pop
inc
xchg
jle
dec
add
or
mov
mov
std
test
sbb
jae
daa
jne
daa
sbb
icebp
push
or
sub
inc
mov
call
jg
(bad)
mov
or
mov
add
mov
jne
jb
xor
ja
mov
xor
sbb
(bad)
mov
pop
add
cmp
je
jmp
les
adc
inc
add
push
call
test
mov
jne
xor
dec
or
inc
or
neg
mov
pop
mov
mov
xor
pop
mov
retf
repz
add
data16
sub
pop
ror
ins
call
push
movs
test
dec
imul
jle
pop
pop
dec
ins
dec
imul
mov
mov
call
fwait
pop
adc
xor
out
inc
inc
inc
fs
and
adc
aaa
xor
and
ret
movs
mov
mov
add
xor
in
xchg
stos
es
push
add
or
cmp
je
cmp
jne
push
std
dec
enter
add
push
push
jmp
cmp
sar
sti
scas
sub
sbb
or
jmp
ds
jg
xor
jmp
cmp
push
mov
(bad)
inc
inc
or
push
push
call
jmp
(bad)
mov
push
push
setne
call
or
(bad)
jp
sbb
pop
adc
inc
push
pop
mov
push
mov
jno
sar
outs
mov
dec
movs
mov
jmp
es
(bad)
mov
imul
inc
add
aas
(bad)
jbe
loop
jne
jmp
push
cmp
inc
mov
jg
test
jne
mov
inc
cmp
mov
or
jae
jns
mov
xor
sbb
add
add
sub
hlt
fcomip
(bad)
jl
adc
fisttp
inc
or
xor
je
(bad)
mov
movs
lock
adc
mov
shl
push
call
push
test
fst
mov
retf
adc
(bad)
in
sbb
push
xor
mov
mov
cmp
je
mov
mov
add
mov
cwde
fdivr
call
jg
lahf
or
inc
and
fs
or
cld
repnz
idiv
or
pop
iret
retf
push
cmp
cmps
call
pop
mov
or
sbb
mov
xor
mov
pusha
lds
mov
mov
inc
cmc
jmp
and
arpl
xor
lock
mov
push
hlt
sub
enter
push
in
push
call
push
push
push
inc
faddp
and
lock
retf
jge
sub
call
es
sbb
sbb
cmp
jnp
clc
pop
loope
outs
ins
add
clc
push
push
mov
and
add
adc
inc
push
mov
jg
es
mov
jmp
push
call
rcr
inc
add
dec
or
inc
ins
ret
adc
jmp
cmps
mov
cmp
jne
das
mov
ins
jmp
pop
pushf
cmp
jne
mov
mov
popf
mov
dec
js
cmp
sbb
(bad)
mov
inc
add
adc
mov
inc
jns
push
xor
cmp
jne
stc
cmp
(bad)
inc
mov
adc
jge
cmp
jge
call
cmp
add
shl
dec
sbb
sti
jo
movsx
add
je
jge
xor
call
push
add
xlat
sbb
or
call
ja
and
sbb
stos
sbb
push
call
loop
cmc
push
call
test
pop
jne
inc
sbb
add
add
xlat
dec
cmc
cmp
call
mov
jmp
xor
dec
mov
or
adc
sbb
mov
addr16
cmp
push
call
pop
mov
sub
mov
int3
push
clc
test
aam
push
mov
(bad)
push
(bad)
out
fist
call
push
mov
sti
and
push
push
or
add
sti
pop
dec
adc
into
call
out
push
push
mov
call
add
imul
std
sar
mov
cli
cmp
je
mov
cmp
or
mov
push
mov
cmp
mov
je
cmp
sti
inc
add
cmp
je
push
mov
call
iret
mov
call
out
jle
enter
jnp
pop
jge
mov
inc
lahf
ror
mov
or
push
mov
xchg
je
call
test
pop
aad
movd
ror
call
rcr
mov
dec
dec
popf
jo
pop
ins
je
fdiv
dec
je
dec
jne
xor
dec
mov
rcpps
(bad)
fucomp
xor
je
dec
je
dec
je
sub
jg
cmp
sbb
jmp
mov
adc
mov
sti
out
add
dec
adc
adc
push
mov
cmp
je
cmp
call
or
lock
repnz
jl
sar
cmp
ffreep
push
lea
call
call
cmp
push
je
push
out
sbb
dec
xor
mov
imul
in
(bad)
clc
jne
jmp
push
call
frstor
and
cmps
lods
or
or
xchg
add
div
call
or
in
adc
adc
jmp
mov
cld
packssdw
retf
je
call
pop
jl
xchg
fnstcw
sbb
dec
ret
mov
jg
dec
push
cmp
mov
mov
mov
jae
inc
fmul
fdivr
mov
push
call
ins
mov
mov
sub
cmp
jne
jmp
ins
jmp
push
push
(bad)
mov
stos
jnp
jne
push
push
call
jg
pop
aam
ret
dec
ins
jl
aam
or
mov
(bad)
jmp
dec
call
call
sbb
call
push
adc
jl
call
call
mov
call
fdivr
lahf
cmp
push
call
and
call
jge
call
push
pop
mov
inc
jo
inc
or
mov
push
cmpxchg
mov
ror
add
jge
xor
inc
cmp
jno
(bad)
mov
jmp
mov
mov
cmp
xchg
or
pop
fs
jo
adc
repz
mov
shl
push
jne
call
lea
mov
add
cmp
adc
mov
call
xor
jg
push
lea
call
inc
jo
mov
call
pop
jg
inc
jg
div
cld
add
inc
jo
je
cmp
gs
call
add
scas
sti
(bad)
je
push
call
or
mov
pop
push
out
add
je
push
lea
push
call
jmp
cdq
jmp
mov
(bad)
xlat
mov
jmp
add
inc
test
cmc
push
fdiv
je
das
loope
pminub
arpl
jne
icebp
lahf
iret
and
jl
mov
push
push
mov
push
add
push
call
fistp
daa
jne
into
pop
lock
mov
pop
cmp
add
leave
in
js
xchg
and
or
mov
push
push
push
shl
(bad)
mov
sbb
inc
inc
or
jmp
mov
or
push
mov
push
loope
jg
push
push
mov
call
adc
pop
sbb
into
add
mov
inc
enter
mov
call
in
ss
add
adc
and
daa
jae
daa
je
lahf
into
call
pop
mov
lock
mov
cmp
jne
xor
lds
push
and
or
es
add
xor
adc
xor
inc
push
pop
push
mov
push
inc
inc
or
jg
mov
xor
cmp
sbb
repz
je
jg
das
and
inc
add
test
hlt
or
mov
push
dec
jne
js
dec
pop
cmp
jmp
mov
cmp
je
cmp
jge
cmp
jge
inc
(bad)
xchg
(bad)
jnp
dec
jne
mov
je
add
mov
xor
test
aaa
adc
push
xchg
cmp
(bad)
push
add
or
jne
mov
cmp
mov
mov
je
(bad)
fdivr
cmp
jne
test
jne
outs
lea
push
(bad)
(bad)
(bad)
dec
jns
loope
(bad)
call
jmp
test
jne
cmp
jne
mov
mov
mov
(bad)
jg
clc
xor
inc
mov
jg
mov
push
mov
pop
push
lea
xor
mov
call
jmp
and
push
add
xor
mov
pop
call
inc
inc
xor
adc
mov
mov
fwait
int3
add
out
xchg
cmp
int3
int3
cmp
mov
jns
push
(bad)
jmp
fiadd
or
push
dec
in
lea
aaa
push
rcl
push
mov
mov
mov
or
xchg
add
cmc
(bad)
(bad)
fild
pop
ins
call
lea
push
push
call
mov
add
or
mov
sub
inc
sbb
xor
push
push
fsubr
push
imul
iret
call
aas
add
call
dec
fs
mov
push
lock
mov
push
or
and
jg
or
cmps
sbb
add
cmp
iret
scas
dec
ror
or
fisttp
mov
lea
push
push
call
sti
xor
pusha
or
mov
mov
lea
(bad)
call
fbstp
inc
sbb
cmp
std
fistp
not
pop
js
inc
pop
push
push
mov
mov
jmp
add
jns
inc
in
sbb
popf
push
pop
pop
push
inc
lods
dec
push
push
xor
cmp
mov
(bad)
ficom
xor
inc
pop
jle
stos
pop
mov
mov
add
cld
and
inc
jo
cmp
jne
test
and
std
add
(bad)
mov
push
lea
or
or
fmul
or
pop
push
call
enter
test
add
call
inc
out
xchg
add
ret
cmp
mov
icebp
stc
adc
or
add
push
cmp
inc
sub
(bad)
je
push
call
inc
or
(bad)
(bad)
les
dec
fst
or
mov
(bad)
mov
push
mov
push
mov
mov
add
jmp
cmc
push
push
mov
inc
lock
je
push
call
mov
or
cmp
add
out
aaa
cld
xor
jmp
mov
pop
mov
mov
add
sbb
inc
shl
xchg
add
dec
push
mov
mov
icebp
adc
or
xor
cmp
mov
leave
mov
mov
out
mov
adc
dec
sti
cmp
jne
mov
cmp
jne
sbb
clc
cmp
add
bsf
inc
push
call
inc
or
xor
in
cmp
ins
adc
cmp
inc
cmp
je
mov
test
jne
jle
inc
sbb
call
push
cwde
call
fwait
jle
idiv
(bad)
je
jge
push
or
push
call
adc
push
ja
(bad)
iret
mov
sbb
adc
cld
ret
jne
mov
mov
mov
cmps
faddp
dec
adc
add
inc
or
pop
xor
pop
and
adc
mov
and
sbb
out
cld
jge
dec
out
jbe
stos
aaa
je
add
dec
xchg
sti
dec
xchg
test
call
and
mov
jbe
fidivr
enter
add
pop
pop
sub
(bad)
push
cmp
sbb
or
push
sar
pop
inc
mov
jmp
mov
xor
jg
das
jne
pop
dec
or
and
je
xor
cmp
je
(bad)
jg
jne
cmp
mov
push
push
jne
jmp
ss
mov
add
add
in
or
je
pop
xchg
push
iret
jne
je
test
mov
mov
call
jne
cwde
scas
add
test
out
and
push
push
iret
call
fcmovnu
inc
pop
or
lea
push
sbb
sbb
ss
push
clc
sbb
cmp
jne
sbb
dec
in
and
push
add
cmps
mov
jns
add
sub
adc
loopne
pop
add
jmp
jmp
fild
jg
out
adc
jne
push
pop
jmp
out
call
ins
pop
push
pop
or
mov
call
clc
ffreep
jl
xor
mov
mov
push
inc
cld
jg
clc
iret
call
push
jl
push
push
mov
call
jmp
and
outs
xchg
mov
call
and
ss
adc
xor
push
sbb
mov
repz
sbb
je
mov
ds
mov
sbb
scas
mov
test
loopne
inc
or
jne
cmps
in
add
fld
push
push
call
add
push
mov
mov
mov
mov
mov
mov
(bad)
call
or
add
sti
xchg
jmp
pop
call
cld
and
mov
push
call
push
mov
push
sub
push
push
nop
inc
add
push
aad
push
adc
fld1
sub
adc
fnstsw
les
jge
ret
or
outs
cmp
or
(bad)
jne
push
out
jecxz
add
retf
ds
push
(bad)
mov
scas
and
(bad)
enter
xlat
push
rcl
jmp
js
cs
and
inc
cmc
fst
mov
ins
adc
ja
idiv
dec
push
call
inc
shl
cwde
adc
dec
ins
and
call
push
aam
adc
dec
jle
cmp
add
pop
cmp
add
push
call
and
cmc
inc
and
adc
sub
sar
adc
std
cmps
stos
inc
cmp
je
lea
add
sti
or
xlat
je
(bad)
sti
rcr
movs
mov
(bad)
mov
mov
or
and
idiv
fnstsw
cmc
je
mov
cmps
jne
push
call
pop
pop
je
aaa
cld
(bad)
jg
or
inc
jl
add
and
inc
jl
jne
mov
jge
call
popa
and
cmp
and
add
add
add
cmp
in
outs
clc
adc
or
pop
clc
mov
ficomp
jb
test
jmp
shr
dec
push
and
je
lea
cmp
jne
ret
adc
inc
cmp
push
cmp
popf
ffreep
push
jnp
adc
retf
or
add
call
inc
aaa
rcr
mov
cs
mov
mov
mov
scas
loop
adc
sbb
repnz
jle
mov
(bad)
sbb
mov
mov
jl
adc
fdivrp
dec
mov
jmp
mov
inc
push
out
sbb
jle
sbb
jno
mov
mov
xor
js
cs
sub
adc
mov
pop
add
mov
or
jmp
sahf
push
mov
mov
xor
mov
(bad)
mov
test
fwait
add
mov
and
add
dec
add
push
sahf
cmp
add
cmp
or
and
and
xor
test
mov
test
pop
cmp
push
mov
dec
push
jne
call
xchg
push
lea
call
pop
clc
fld
fstp
call
pop
jne
jp
pop
(bad)
loopne
mov
add
add
mov
fstp
push
push
clc
push
enter
or
dec
lock
mov
add
idiv
(bad)
inc
sub
ud0
or
movzx
and
mov
pop
push
maxps
push
jmp
dec
xor
inc
push
push
call
and
xchg
xor
adc
jnp
fld
aaa
retf
in
sbb
add
cld
push
call
fild
xchg
push
sub
push
pop
(bad)
aas
and
push
push
push
mov
lea
push
out
mov
call
push
inc
push
or
sub
add
data16
or
inc
or
clc
mov
sahf
push
out
mov
add
mov
not
jmp
lahf
dec
mov
jle
push
add
pop
cmp
and
(bad)
cmp
call
adc
pop
ret
adc
mov
cmp
inc
ss
push
popf
imul
inc
and
cmp
jne
sub
inc
mov
push
das
add
cmp
dec
jge
mov
jmp
mov
test
je
cmp
lea
cmps
out
fist
mov
push
call
or
test
push
cwde
int
int
ss
sbb
pop
mov
cmp
sbb
add
pusha
inc
das
jmp
push
call
rol
test
push
push
adc
popa
test
mov
mov
add
aam
add
push
push
jns
add
dec
push
or
js
cmp
out
push
inc
xor
enter
je
cmp
sbb
add
mov
push
call
jp
push
adc
shl
and
inc
cmp
jmp
and
push
shl
loope
(bad)
xor
dec
stos
pop
mov
push
call
adc
inc
int3
cmp
jge
loopne
push
pop
inc
inc
mov
call
add
cmp
outs
call
je
cmp
jne
cmp
xchg
(bad)
push
das
cmp
(bad)
or
(bad)
jmp
push
mov
push
call
daa
arpl
push
call
cmp
inc
push
xchg
(bad)
(bad)
push
and
inc
lods
inc
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
out
aaa
mov
push
mov
mov
mov
mov
mov
mov
(bad)
inc
pop
mov
mov
mov
mov
mov
mov
mov
mov
clc
dec
aaa
mov
mov
call
or
loop
clc
pop
hlt
(bad)
jmp
xor
jo
pop
pop
(bad)
dec
cmp
loopne
movsx
push
call
jmp
cmc
inc
dec
jl
push
fsubr
jne
fcom
jbe
ins
test
add
sub
mov
test
loope
or
push
call
and
sbb
fst
jge
sbb
sbb
call
add
js
pop
pop
pop
(bad)
cld
and
clc
psubq
stos
aas
push
imul
call
cmp
push
push
push
pop
cmp
mov
in
mov
mov
sub
fist
call
(bad)
cmp
or
call
test
sub
shl
call
sbb
cmp
pop
daa
call
sbb
xor
call
mov
popf
push
jne
ja
(bad)
ficom
ret
call
call
ret
pop
mov
add
pop
xor
xchg
in
mov
pop
(bad)
jg
in
pop
push
movzx
inc
cmp
jle
mov
sar
cmps
fisttp
call
hlt
call
ja
cmp
fucomp
jecxz
push
call
por
ja
call
push
jne
cmp
pop
jne
fnstsw
jecxz
cmc
jmp
mov
jmp
loopne
cdq
clc
add
push
push
jmp
mov
adc
jne
movzx
movzx
dec
clc
shr
(bad)
(bad)
call
shl
or
mov
add
mov
mov
shr
shl
or
paddb
fnstsw
mov
in
(bad)
mov
call
pop
push
jg
call
mov
push
pop
mov
shr
push
call
out
out
and
pop
test
out
dec
jne
push
add
mov
pop
xchg
push
cmp
fist
pop
clc
xor
mov
fild
inc
mov
add
jl
adc
jne
lea
push
call
(bad)
lods
je
push
call
call
add
call
inc
ror
pop
fwait
dec
push
sub
cld
fwait
stos
aad
jne
call
call
test
sub
jne
xor
mov
fnstcw
sub
call
hlt
adc
sti
or
cmp
jb
push
ror
(bad)
inc
outs
adc
cmp
jae
mov
lea
(bad)
inc
lock
push
call
add
push
psubsb
les
adc
je
aam
clc
aaa
imul
call
mov
pop
adc
inc
mov
in
push
mov
call
ja
(bad)
xlat
pop
mov
xor
outs
pusha
and
in
shl
das
push
neg
jne
lea
jb
push
mov
call
(bad)
js
pop
mov
sub
cmp
inc
mov
add
xor
cmc
jmp
imul
inc
mov
call
ins
xor
outs
xor
pop
jne
and
pop
push
loope
out
dec
sbb
dec
sbb
mov
xor
dec
lods
mov
inc
ror
push
test
leave
mov
cmp
mov
jne
sbb
and
push
nop
jecxz
(bad)
push
es
mov
add
inc
or
jne
push
loope
cmc
dec
mov
mov
sbb
hlt
jmp
xor
dec
mov
xor
lock
aaa
inc
lds
xor
jmp
cmp
je
(bad)
mov
push
call
jne
pop
ret
push
xor
cmp
jbe
push
or
push
(bad)
mov
mov
cmp
or
mov
and
(bad)
inc
add
push
cmp
je
cmp
jne
inc
push
or
(bad)
mov
jne
push
add
push
mov
call
sub
adc
push
call
jne
test
fbstp
fistp
or
adc
call
push
push
call
sar
jne
push
call
sub
mov
mov
ja
jno
xchg
ds
push
push
call
fistp
add
mov
mov
inc
imul
add
test
dec
cmp
fsubr
ret
call
(bad)
cmp
jmp
cmp
jne
cmp
std
(bad)
add
cmp
jne
test
je
jns
inc
cmp
jne
rcr
mov
or
fucomi
xor
test
pushf
pop
pop
jmp
cmp
retf
add
je
dec
jns
jmp
dec
call
call
jl
push
out
rol
and
enter
cmp
mov
mov
call
jo
push
std
xchg
pop
push
call
sbb
mov
add
or
push
cs
sbb
neg
inc
push
inc
push
push
or
adc
pop
imul
aam
xor
jmp
or
pop
mov
mov
mov
(bad)
and
call
push
fdivr
call
cmp
(bad)
mov
xor
inc
cmp
jge
in
je
or
cs
fcom
adc
push
aad
stos
push
enter
outs
je
jne
call
pushf
(bad)
mov
add
cs
push
call
aam
pusha
xchg
icebp
push
call
add
test
or
(bad)
pusha
aad
in
mov
or
lea
cli
dec
or
call
xlat
cmp
mov
mov
pop
xor
mov
call
mov
lea
call
xchg
jge
add
mov
inc
push
sub
mov
add
pop
repz
es
sub
push
add
fild
push
fsub
sbb
loopne
fist
call
mov
mov
sub
call
adc
fmul
inc
jge
call
pop
in
push
push
call
idiv
out
jo
aaa
pop
inc
hlt
je
or
push
mov
push
jne
sbb
inc
cmovge
call
aad
mov
shl
pop
or
or
into
adc
loop
or
jmp
sub
sub
ud1
sbb
add
into
inc
jmp
cs
hlt
scas
add
ja
jno
cli
or
xchg
mov
mov
clc
mov
call
imul
in
(bad)
call
out
jnp
pop
(bad)
call
or
outs
jo
mov
in
jl
mov
cmp
test
mov
mov
daa
fild
(bad)
inc
mov
xor
inc
test
je
mov
jne
hlt
mov
add
cmp
jne
xor
mov
lock
(bad)
and
popf
xor
push
cmp
jne
push
out
sub
aaa
adc
mov
call
jmp
idiv
(bad)
jp
ss
jne
and
jns
jne
(bad)
imul
mov
mov
mov
and
outs
sub
fisttp
loopne
cmp
jne
push
call
pop
pop
jne
mov
clc
test
jne
and
arpl
ror
mov
add
loop
mov
or
int3
add
popf
ja
adc
inc
dec
add
xor
push
test
xor
sbb
or
jnp
push
mov
or
mov
xchg
inc
jne
dec
inc
dec
js
call
add
fcomip
fucomip
repnz
and
je
xor
ret
mov
jg
inc
push
adc
pop
or
test
mov
push
mov
dec
xor
mov
cmp
(bad)
idiv
mov
push
push
call
pop
sub
xor
and
call
push
or
addr16
ja
jle
(bad)
jne
inc
inc
aam
push
lock
jne
push
mov
jmp
push
cmp
ja
adc
jmp
sub
xchg
jmp
ret
sub
cld
test
jle
mov
stc
jmp
or
sbb
add
push
lock
js
or
jne
sub
jne
xchg
dec
in
call
xchg
into
ja
movs
cmp
jne
or
sahf
loope
adc
popa
leave
or
adc
les
mov
in
call
mov
(bad)
call
dec
xor
aas
add
lea
call
ud0
push
clc
mov
call
loopne
aaa
mov
data16
push
jne
push
(bad)
loopne
je
out
lock
loop
xchg
lock
mov
inc
and
jbe
cli
into
call
push
and
jne
push
retf
inc
ja
out
into
call
and
or
sbb
sbb
stc
dec
jecxz
cld
sub
cmps
mov
cli
lea
cmc
push
mov
adc
cmp
setne
cmp
(bad)
std
aaa
(bad)
repz
mov
mov
rsqrtps
push
shl
shl
dec
xor
xor
call
or
inc
int
arpl
jmp
push
add
jmp
add
adc
mov
call
outs
add
lea
push
push
loop
(bad)
aas
mov
add
jge
mov
mov
mov
mov
call
adc
aas
in
lea
call
shl
dec
cmp
mov
add
(bad)
jg
jmp
call
dec
je
mov
push
push
push
lea
stc
adc
jge
mov
addr16
aam
mov
into
call
cmp
je
(bad)
push
push
call
push
jg
mov
pop
call
pusha
mov
call
call
popw
push
push
jo
ffreep
dec
adc
jne
lea
mov
inc
cmp
out
or
mov
lods
or
jge
mov
ins
sub
sbb
push
mov
(bad)
xor
call
dec
cmp
je
sub
iret
mov
cmp
jne
or
jne
lahf
(bad)
jmp
push
mov
mov
mov
call
push
je
es
ja
adc
aaa
fst
je
pop
cmp
jne
cmp
mov
loopne
sbb
jne
mov
call
push
push
call
fadd
sub
mov
mov
jo
jge
call
sub
mov
cli
cs
ror
clc
xor
dec
repz
jmp
ret
jg
in
les
dec
ins
push
call
call
mov
je
push
call
call
stc
into
lock
out
call
call
mov
push
mov
call
xchg
clc
(bad)
(bad)
out
push
add
retf
(bad)
ds
dec
enter
js
push
call
pushf
cs
mov
les
add
inc
add
nop
inc
cmp
jne
daa
mov
jne
fisttp
dec
push
call
jne
push
call
scas
cmp
sbb
jge
jmp
enter
fld
xchg
pop
test
call
xchg
jp
icebp
or
mov
push
call
add
repz
jmp
faddp
(bad)
add
leave
ret
bound
jge
fisttp
push
cmp
jmp
mov
add
xchg
and
enter
jmp
pop
or
(bad)
cmp
mov
mov
jmp
mov
xor
out
push
call
cmp
xchg
jne
jne
neg
scas
pop
es
adc
cmp
adc
or
ja
sbb
mov
mov
dec
mov
jb
iret
fadd
jo
mov
mov
add
idiv
call
add
mov
cmp
mov
into
call
je
sbb
call
out
or
xor
jne
call
ins
call
lahf
mov
xchg
sbb
mov
adc
scas
aaa
jbe
ja
lea
push
call
dec
push
sbb
sbb
jne
call
inc
clc
push
call
fwait
(bad)
call
push
call
(bad)
mov
jns
jl
imul
call
mul
test
push
adc
push
xchg
sbb
push
pop
push
push
es
je
add
jle
cmc
add
jnp
jle
fwait
out
inc
sub
push
xor
mov
mov
mov
call
ret
(bad)
jl
pop
mov
mov
mov
and
adc
pop
dec
pop
mov
pop
call
es
and
mov
(bad)
mov
jp
jmp
push
dec
push
push
arpl
call
(bad)
(bad)
jg
inc
dec
add
xor
xor
cmp
mov
jle
mov
mov
mov
lea
push
cmps
ja
cmp
pop
inc
pop
ss
call
xor
jge
add
mov
imul
je
rol
and
fs
call
or
or
cmp
sub
test
xchg
adc
sbb
(bad)
inc
or
mov
jmp
call
push
daa
push
call
push
hlt
jge
mov
push
xor
mov
inc
mov
mov
mov
call
xchg
ret
jne
push
call
mov
cmp
cmc
dec
xchg
push
call
dec
push
adc
push
xlat
mov
jbe
std
or
adc
mov
pop
jmp
xor
idiv
push
call
pop
push
call
dec
jmp
call
in
xchg
jmp
mov
push
call
mov
add
loop
push
dec
push
call
lds
pop
loope
or
jmp
pusha
add
je
add
cmps
push
pop
push
fwait
mov
or
pop
push
push
or
call
cld
dec
or
pop
jne
xor
add
dec
or
fist
xchg
mov
or
add
iret
cli
(bad)
inc
xchg
add
(bad)
mov
jne
mov
nop
je
cmp
stc
popf
loope
je
and
mov
sbb
call
sahf
out
lods
dec
imul
dec
cld
push
push
mov
jne
add
daa
mov
mov
cmp
cld
je
push
into
cmp
xchg
sbb
out
call
retf
call
call
push
xor
push
push
mov
sub
adc
lock
out
out
mov
inc
mov
add
les
push
push
jnp
and
push
sub
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
dec
movs
mov
mov
mov
mov
mov
mov
mov
call
mov
aaa
add
test
je
push
xchg
lahf
stos
lahf
imul
adc
adc
push
shl
je
lahf
clc
pop
cld
into
push
adc
push
sbb
pop
out
mov
mov
add
cmp
adc
cmp
mov
push
movs
push
rcr
and
hlt
jne
push
out
ds
mov
hlt
push
call
hlt
xchg
adc
mov
push
push
push
ins
call
addr16
call
clc
jmp
fsubr
repnz
pop
sbb
aaa
pop
clc
lea
push
into
std
dec
jl
hlt
sub
call
out
jne
(bad)
xlat
pop
add
jne
call
fldenv
add
call
pop
mov
fdiv
loopne
push
mov
jne
call
cmp
mov
xor
mov
cs
call
mov
sub
int
inc
sbb
call
add
push
call
movs
(bad)
movs
push
inc
push
inc
call
sbb
mov
cli
lock
(bad)
jmp
ds
inc
and
push
push
adc
or
pop
or
sbb
dec
adc
jl
jmp
xor
add
cmps
jg
loop
jbe
mov
jl
xor
inc
xor
push
adc
push
mov
add
(bad)
push
push
push
jnp
cmp
call
or
adc
mov
inc
popf
jno
sti
and
dec
dec
xchg
xchg
imul
(bad)
and
or
call
mov
(bad)
dec
cmps
call
retf
cli
jmp
add
inc
mov
xchg
cli
stc
push
rcr
pusha
and
adc
les
add
lea
repz
aad
and
push
push
call
pop
ja
adc
or
pop
je
pop
cld
sub
retf
call
call
jg
adc
retf
jmp
out
sub
clc
push
jne
push
loopne
sub
fs
je
cmp
leave
pop
mov
sub
and
xor
xor
fild
add
cwde
ins
arpl
imul
jne
push
push
call
arpl
inc
int3
add
movs
mov
test
or
scas
dec
push
jle
xor
leave
ret
push
(bad)
aad
dec
xor
adc
call
test
cmp
(bad)
jno
addr16
hlt
inc
inc
loopne
sub
xlat
sar
xor
call
push
call
mov
pop
or
push
call
inc
mov
popf
fld
in
call
loopne
cmc
call
out
mov
in
call
call
sub
jbe
inc
mov
cmc
loop
add
loopne
call
mov
push
aam
lds
cmp
inc
rcl
and
xchg
or
mov
jo
push
sub
movups
into
aam
hlt
pop
or
movd
std
rol
ins
adc
add
pop
jne
es
add
sbb
and
cmp
mov
cmp
jg
inc
jae
mov
mov
jmp
in
call
fmul
mov
jno
retf
fcomp
adc
sub
and
cmp
je
addr16
mov
fstp
inc
scas
add
add
xchg
xor
in
mov
adc
cmp
ins
adc
or
pop
mov
call
test
rol
clc
jg
or
(bad)
call
repz
adc
and
ins
pop
aam
fs
jo
mov
enter
out
adc
(bad)
push
inc
inc
cwde
sub
push
fdiv
shr
add
sbb
ss
mov
mov
call
xor
clc
adc
sbb
mov
lea
test
call
jecxz
add
sar
cmp
call
call
dec
mov
shr
push
out
data16
mov
or
aas
mov
(bad)
inc
jne
cmp
je
daa
sbb
push
add
out
adc
outs
cmp
mov
mov
jmp
xor
(bad)
loopne
or
test
add
ins
aas
cmp
imul
adc
nop
mov
push
xor
sbb
(bad)
call
sti
dec
fucom
daa
movs
pop
imul
inc
adc
xor
popf
inc
push
call
adc
sub
or
xchg
push
add
add
add
mov
je
mov
jp
or
or
jge
add
xchg
loopne
jge
mov
stos
jne
fs
call
clc
fadd
cli
pop
mov
cmp
pop
sbb
call
je
mov
call
add
je
out
or
iret
mov
cmp
jne
jmp
call
rcl
dec
loope
inc
mov
call
pop
mov
pusha
pop
pop
cmp
imul
pop
and
call
jns
out
fcomp
js
call
ret
pop
leave
ret
push
mov
jmp
mov
push
cmp
jne
pushf
in
dec
loop
sar
pop
test
jne
test
push
aaa
inc
not
(bad)
(bad)
push
mov
push
mov
push
push
mov
mov
mov
movzx
xor
in
mov
ror
push
mov
call
call
pop
call
mov
mov
add
mov
push
lea
jg
mov
outs
push
(bad)
pop
add
mov
jns
mov
or
call
mov
inc
adc
push
je
outs
scas
dec
jl
jne
stos
mov
jne
sbb
out
cmovb
mov
mov
or
adc
jne
mov
mov
mov
mov
mov
mov
call
cdq
js
cmp
dec
push
push
lea
add
cld
in
sub
jmp
jl
mov
mov
jmp
cmp
push
call
dec
fldcw
jmp
loope
push
mov
and
fs
jne
pop
ficom
push
cmp
js
and
push
jns
mov
pop
adc
push
call
inc
in
push
lock
mov
fild
call
pop
je
xor
(bad)
mov
test
xchg
mov
push
inc
lock
call
adc
adc
loopne
out
loopne
shr
gs
call
mov
fimul
test
mov
jl
fcomp
inc
dec
mov
outs
mov
sbb
dec
adc
pop
cmp
jo
inc
pop
es
cs
cmp
test
add
fisttp
cmp
dec
adc
lea
stos
dec
(bad)
fimul
mov
out
js
gs
add
cmp
dec
mov
je
cmp
je
mov
add
jmp
mov
sub
popf
jmp
add
test
add
add
test
and
mov
rol
cmp
inc
je
jl
outs
clc
fucomp
dec
push
imul
pop
jns
push
mov
shr
sbb
js
jmp
sti
inc
sbb
cmp
mov
je
call
cmps
iret
fdivr
popf
xchg
jmp
mov
cmp
je
(bad)
test
lea
mov
js
call
mov
push
mov
inc
enter
fs
xlat
aam
dec
jl
aam
sbb
lea
pop
mov
or
jle
push
call
sar
call
xor
xor
faddp
jg
mov
call
test
icebp
sar
nop
add
mov
mov
push
call
addr16
add
sbb
mov
repnz
and
and
call
jg
dec
dec
out
test
outs
jns
inc
cmp
inc
xchg
add
das
fild
or
cld
jl
(bad)
and
(bad)
adc
sub
dec
iret
out
out
out
push
out
dec
call
inc
les
inc
loopne
add
sbb
push
ss
sti
call
xchg
cli
icebp
call
push
fmul
fidiv
mov
sar
push
and
std
jmp
mov
inc
(bad)
fucomp
jecxz
pop
pop
jmp
push
cld
hlt
in
das
test
mov
jbe
out
jb
les
add
jmp
dec
push
and
std
aas
xor
inc
mov
mov
mov
jmp
pop
xor
call
push
call
test
jne
sub
mov
cmp
add
je
stc
(bad)
cmp
pavgw
pushf
or
lea
mov
sbb
mov
mov
dec
imul
mov
popa
sub
call
retw
mov
xchg
imul
or
(bad)
jo
pop
je
xchg
imul
cmps
call
call
sbb
inc
add
rcl
pop
jg
jmp
sbb
mov
dec
js
sbb
cmp
inc
xor
inc
adc
mov
mov
pop
push
lea
push
mov
call
rol
cmp
call
xor
xor
ins
fiadd
mov
mov
dec
fs
or
xchg
push
call
inc
push
call
push
push
mov
cld
out
fucomip
idiv
in
dec
js
into
je
call
mov
adc
loopne
mov
sahf
fnstsw
push
call
push
js
add
or
jae
fs
out
jmp
(bad)
fnsetpm(287
es
movs
neg
sbb
pop
stc
inc
cwde
imul
in
rol
dec
jae
mov
cmp
dec
call
aam
cmp
stc
xor
push
xchg
popa
inc
gs
sub
xchg
push
jne
hlt
pop
idiv
jmp
call
cmps
(bad)
jnp
scas
mov
call
push
push
call
dec
daa
pop
call
jmp
imul
inc
mov
jne
je
mov
xor
inc
push
dec
adc
push
push
push
push
pop
mov
jl
push
mov
or
std
outs
clc
dec
mov
dec
pop
call
pop
pop
pop
icebp
adc
leave
sub
xor
cmp
test
xchg
sub
push
inc
loop
fmul
mov
push
aaa
clc
je
push
ret
mov
add
and
adc
jne
je
loop
shr
aam
mov
in
or
jnp
mov
clc
call
jae
les
mov
add
pop
jmp
push
clc
inc
nop
and
sbb
scas
fcom
mov
enter
jl
ins
sbb
pop
in
sub
dec
sub
adc
call
call
adc
call
hlt
call
jns
fsubr
jle
call
mov
cdq
data16
pop
leave
sar
or
shl
sub
paddd
les
je
mov
call
dec
inc
mov
sbb
or
or
jg
jg
sar
test
xchg
jl
iret
imul
pop
mov
clc
add
pop
inc
hlt
outs
std
pop
dec
clc
push
jne
hlt
daa
sbb
pop
call
sar
call
cmps
rcr
push
call
fild
pop
mov
jne
inc
jg
shl
xchg
inc
jl
jne
push
and
icebp
add
add
loope
call
jmp
push
call
cwde
ss
icebp
test
dec
jmp
rol
sbb
add
xor
inc
or
jp
adc
mov
and
lahf
dec
add
mov
out
call
cmp
mov
mov
jne
fild
fsub
or
pop
inc
je
cmp
clc
cdq
add
aam
mov
push
push
mov
pop
push
add
push
jg
call
xchg
movs
test
nop
ror
sar
sti
jg
(bad)
push
xor
mov
inc
je
cmp
mov
sbb
(bad)
push
call
mov
dec
les
mov
and
mov
(bad)
(bad)
(bad)
fnsave
sbb
js
call
cmp
jle
mov
jmp
mov
cmp
jle
or
sbb
je
fimul
ret
push
fcmovu
sti
cmps
dec
add
ins
test
xor
and
in
outs
sub
pop
push
mov
mov
call
hlt
jmp
lea
jne
lea
fwait
dec
dec
push
push
call
push
jmp
inc
or
add
dec
inc
loopne
shl
push
adc
push
call
mov
pop
jmp
dec
cmp
jne
push
lea
fcomip
mov
add
call
enter
aam
call
pop
dec
les
(bad)
or
inc
lock
jnp
add
std
popf
and
clc
push
push
cdq
loopne
es
sbb
shl
fiadd
inc
or
test
call
cmp
clc
xor
push
inc
cmp
jae
inc
ds
jmp
sti
fsubr
dec
jle
inc
pop
and
imul
mov
xchg
jns
call
push
call
jb
mov
add
std
int3
or
call
lea
sar
xor
jo
ret
fidiv
enter
cmp
(bad)
cs
shr
adc
jne
call
mov
lea
call
call
jnp
jmp
pop
pop
xor
mov
lock
xor
or
cmp
push
out
cmp
stc
lea
mov
call
jmp
xor
cmp
clc
mov
je
lahf
jns
sbb
imul
inc
scas
pcmpeqw
jmp
addr16
push
xor
dec
(bad)
add
jge
adc
jne
call
pop
mov
data16
cs
or
jmp
xchg
mov
xchg
les
in
sbb
test
ins
push
(bad)
mov
or
jne
call
movs
push
jl
stos
loop
cmp
jb
loopne
sub
dec
or
pop
jg
call
call
cmps
jno
std
sub
mov
call
cli
and
(bad)
sti
es
sbb
iret
cmp
jg
sub
add
cmp
call
push
jne
mov
adc
stc
add
movzx
cmp
jle
cmp
jg
cmp
xchg
sbb
add
sbb
cs
daa
in
stc
adc
sti
add
push
mov
push
cs
call
add
call
push
call
jmp
add
je
push
fldz
xor
jno
push
call
push
xchg
and
cmp
loopne
or
adc
pop
imul
scas
jle
inc
out
call
add
pusha
or
fwait
mov
stc
mov
test
je
push
mov
and
out
aam
cwde
clc
push
call
jne
in
out
cmps
dec
test
je
adc
je
mov
js
mov
inc
add
xor
iret
mov
add
mov
pop
pop
jle
adc
or
fld
loop
adc
cmp
je
iret
cmp
jne
jmp
push
lea
mov
aaa
push
dec
lahf
sub
pop
sbb
(bad)
cmp
pop
jl
jnp
push
test
push
push
push
out
ja
add
pop
jmp
cmp
jne
adc
mov
cmp
mov
xchg
sti
pop
and
mov
les
sub
out
inc
bound
in
sbb
xor
int
adc
loop
mov
icebp
or
addr16
daa
stos
jb
pop
je
or
dec
push
es
out
or
add
je
lock
outs
adc
cmp
mov
fadd
mov
in
arpl
mov
mov
out
mov
fld
icebp
sbb
clc
dec
fwait
jbe
mov
por
mov
push
call
sbb
or
mov
mov
xor
push
inc
push
jns
ja
call
addr16
call
pop
mov
xor
add
or
adc
jne
mov
inc
retf
(bad)
push
(bad)
cmp
and
push
xor
test
adc
push
lds
mov
je
mov
jmp
movs
clc
inc
push
scas
call
inc
push
je
inc
inc
sbb
mov
mov
shr
sub
out
loopne
lea
push
sbb
or
repz
adc
mov
push
add
call
call
mov
call
leave
ret
stos
and
fadd
mov
push
jo
and
jmp
mov
jo
test
es
je
pop
cmp
jmp
push
or
std
mov
push
mov
call
hlt
ja
inc
mov
mov
ds
adc
ja
(bad)
stc
es
push
je
lea
call
or
push
inc
outs
jmp
das
jp
or
mov
test
push
ja
cld
outs
cs
add
add
ret
je
test
inc
push
rol
fsubr
dec
stc
dec
je
dec
jne
or
mov
adc
jmp
cld
cmp
mov
mov
ror
bnd
or
adc
cli
sbb
sbb
(bad)
jg
sub
les
fstp
call
jmp
fdivr
push
(bad)
cmp
fstp
(bad)
(bad)
jmp
or
mov
mov
push
push
mov
mov
mov
push
mov
push
(bad)
jg
mov
cmp
(bad)
dec
cld
jmp
enter
fild
push
push
lea
lahf
sti
pop
les
rcr
jp
fmul
out
je
call
or
fdivr
add
test
out
jle
pusha
ret
push
cli
gs
adc
jnp
call
fwait
and
in
adc
out
fstp
mov
sar
fstp
pop
shr
cli
call
jne
mov
call
push
push
sbb
call
add
fild
jmp
sub
call
adc
js
mov
or
mov
or
add
popa
or
cmc
aaa
jl
(bad)
(bad)
push
push
hlt
jecxz
inc
jl
mov
fs
push
ud2
push
pop
xchg
cmc
repz
or
cmp
pop
jl
fs
icebp
(bad)
add
mov
jle
(bad)
jl
add
inc
inc
aaa
es
mov
dec
sqrtps
scas
neg
(bad)
jmp
or
inc
jl
inc
jl
inc
or
push
jo
mov
dec
ins
mov
scas
add
add
jae
push
mov
pop
nop
movs
xor
pop
fs
ret
fwait
test
push
mov
call
test
mov
push
fmul
pop
mov
dec
pop
dec
or
fisttp
jne
pop
push
in
je
sbb
std
outs
(bad)
jmp
clc
je
mov
mov
cmp
add
cmp
je
fbld
cmp
jne
mov
push
push
lea
test
pop
enter
ja
(bad)
call
scas
call
inc
adc
push
mov
call
sbb
push
call
sar
test
sbb
sub
mov
call
pop
jae
adc
push
call
sub
je
enter
stos
cmp
push
pop
pop
pop
jne
or
jle
loopne
test
ret
xlat
(bad)
fsub
sub
movs
call
xchg
mov
popf
mov
jmp
stos
jb
ret
mov
push
mov
fisubr
or
jp
inc
imul
aas
add
or
std
hlt
int3
jle
push
loopne
std
aas
lea
call
push
cmp
lahf
mov
push
out
lds
aas
jbe
jne
push
scas
repnz
dec
xchg
ret
loope
in
icebp
jae
push
xchg
inc
jle
bound
push
cmp
push
adc
sti
or
and
mov
repz
icebp
dec
jl
push
push
mov
push
inc
dec
adc
loope
push
fcmovb
mov
idiv
push
call
mov
push
lock
pop
and
clc
xchg
or
add
jne
push
adc
call
adc
or
dec
sbb
mov
mov
mov
stos
call
mov
je
xor
or
je
sbb
jne
cmps
sub
jl
pop
rcr
push
jae
test
add
jo
push
jmp
adc
cmps
mov
(bad)
out
sub
pop
mov
mov
test
out
test
cmp
mov
or
mov
sbb
or
call
inc
ins
inc
adc
movs
and
xor
fisubr
pop
ins
pushf
js
mov
or
mov
loop
push
jne
test
mov
loopne
mov
and
loopne
mov
call
mov
jbe
pop
cmp
test
pop
add
pop
add
pop
or
call
mov
mov
call
jle
addr16
sti
out
mov
dec
or
dec
push
adc
(bad)
push
ja
push
fld
mov
adc
stos
aaa
jge
dec
(bad)
loopne
cmp
sub
xchg
inc
shl
jae
sti
dec
mov
je
jle
mov
xor
scas
sbb
mov
and
inc
push
sti
add
stos
pop
in
call
inc
push
jns
xor
xchg
sub
mov
call
jmp
xchg
jnp
call
jmp
and
add
shl
test
mov
dec
into
add
test
fwait
mov
pusha
cmp
in
push
lea
add
or
lea
or
out
out
ss
push
stos
setne
push
jl
jne
inc
push
sub
and
push
call
test
imul
inc
or
jle
clc
pushf
clc
inc
stos
add
mov
push
call
(bad)
cmps
push
add
lea
call
sar
lea
call
inc
lea
pusha
neg
std
mov
call
pusha
je
or
sahf
je
ret
jno
push
cmp
lea
call
push
call
mov
lahf
clc
ins
call
sbb
xor
xchg
push
lea
movs
call
jle
leave
pop
mov
out
push
je
jmp
sbb
jbe
cld
xchg
add
xor
jne
push
stos
popa
in
jg
fwait
push
sti
(bad)
cmp
mov
lock
and
inc
and
ror
dec
int3
mov
mov
push
enter
lea
test
test
push
call
jmp
pop
call
(bad)
mov
call
call
fwait
in
inc
push
push
call
add
adc
jnp
call
inc
push
jns
sub
arpl
call
push
call
dec
add
jmp
out
mov
or
push
dec
aas
xchg
adc
sbb
stos
int
inc
jno
adc
stos
clc
xchg
hlt
fcomp
inc
push
leave
inc
adc
addr16
jns
dec
inc
sbb
popf
adc
es
or
inc
push
aas
mov
jle
leave
pushf
mov
jp
cmovs
into
call
je
mov
add
jne
push
call
push
test
inc
sbb
pop
repnz
adc
push
sub
dec
xor
inc
shl
(bad)
cmp
call
add
cmp
mov
mov
adc
idiv
mov
xor
lea
leave
cmp
pop
sbb
leave
push
push
cmps
ds
(bad)
retf
push
rcr
sub
cmp
xchg
ins
sub
loope
jecxz
and
ds
sub
mov
daa
push
mov
call
pop
dec
daa
and
hlt
(bad)
mov
or
mov
repnz
call
pusha
call
xchg
or
ins
call
xor
aas
jmp
ins
mov
mov
pop
outs
xchg
inc
or
push
and
sbb
inc
xor
mov
xchg
sti
loope
int
pop
test
aad
loopne
int
in
inc
push
call
adc
mov
xchg
inc
push
sub
lods
xor
movs
clc
call
jns
call
add
jmp
jg
jnp
lea
mov
push
cmp
and
or
sbb
(bad)
ror
inc
pop
cwde
je
adc
push
sbb
inc
out
jecxz
push
call
push
pop
pusha
sbb
mov
xor
dec
call
sbb
cmp
imul
xor
mov
mov
fcomip
and
stc
test
mov
cmp
push
add
add
pop
or
loop
dec
or
je
cmc
cmp
jne
inc
dec
add
es
mov
xchg
daa
movs
aaa
iret
call
mov
sub
mov
cmp
push
call
pop
sbb
sub
call
cmp
fistp
call
jmp
or
mov
xchg
push
lea
push
jmp
xor
call
dec
and
pop
clc
inc
movzx
movzx
mov
dec
pop
ins
add
icebp
jle
push
xchg
jno
or
dec
xchg
sbb
and
add
sbb
push
(bad)
or
mov
call
dec
cmp
je
mov
pop
loope
pop
or
push
inc
call
inc
push
sti
pusha
call
push
add
push
jg
jns
push
call
adc
(bad)
push
das
sub
idiv
cli
int
pop
xor
out
add
jmp
jo
popa
xchg
adc
xchg
or
push
mov
or
mov
inc
push
or
out
mov
rol
add
into
mov
mov
icebp
sbb
add
fs
cmp
popa
cmp
inc
cmp
(bad)
cli
in
jl
mov
icebp
mov
std
std
push
call
test
call
and
call
clc
jmp
sar
xchg
in
sbb
adc
xor
retf
push
addr16
je
in
ins
movmskps
jo
scas
add
jecxz
or
pop
adc
fstp
ins
repnz
pusha
call
pop
sbb
push
enter
adc
dec
sub
inc
xor
cmp
clc
call
jmp
jl
repnz
je
mov
mov
sbb
and
ret
mov
push
je
add
clc
fsub
cli
call
fdivp
xor
push
push
pop
movs
je
clc
outs
fimul
(bad)
or
push
pop
cmp
icebp
mov
mov
add
push
push
aas
sbb
xchg
push
and
push
adc
or
dec
cmp
inc
cmp
push
call
mov
xchg
dec
ss
lea
pop
jbe
fwait
idiv
push
call
push
or
pop
call
enter
xor
(bad)
dec
cld
aas
lea
push
call
test
push
or
movs
popf
stc
stc
je
sti
ja
add
inc
dec
clc
push
jne
mov
call
mov
cmps
jp
sub
call
adc
or
add
in
out
call
mov
iret
sub
call
mov
inc
push
pop
xchg
mov
adc
ins
call
jno
call
inc
dec
call
xor
push
out
inc
push
and
dec
sbb
inc
or
cmp
or
xor
pop
in
inc
shl
xchg
pop
push
call
push
and
mov
mov
mov
push
or
dec
or
(bad)
mov
mov
ret
xor
mov
leave
dec
or
aaa
lock
cmp
add
add
push
lock
xor
mov
mov
inc
cmp
adc
cmp
(bad)
call
mov
test
sub
call
pop
push
call
out
sbb
dec
call
pop
jmp
rcr
xor
cmp
mov
inc
add
jne
(bad)
cmp
je
cwde
dec
dec
aam
inc
mov
ror
inc
pop
mov
(bad)
push
or
out
add
and
mov
push
pop
mov
aam
rcl
mov
ja
and
inc
sar
call
mov
aaa
add
inc
fmul
in
push
xor
inc
adc
aam
mov
cmc
push
cmps
add
add
and
and
imul
xor
sbb
lea
call
lods
mov
repnz
lea
jle
data16
mov
mov
inc
fisttp
and
add
cmp
pop
cmp
dec
inc
or
and
(bad)
(bad)
jg
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jle
and
push
jmp
fild
cs
xor
jae
call
adc
dec
or
or
or
idiv
int
add
inc
xchg
fcomip
push
xor
inc
or
(bad)
jmp
cld
push
jp
or
lock
test
jbe
push
push
fist
adc
shr
xor
sub
mov
cmp
jbe
scas
inc
inc
outs
stos
clc
dec
mov
sub
mov
xchg
or
jne
out
fcmovnbe
cmc
mov
or
or
adc
cli
(bad)
mov
cmp
mov
jle
cmp
jle
fcompp
out
lds
fdivp
push
fstp
in
push
call
fild
(bad)
(bad)
mov
pop
in
lahf
fnstsw
fstp
test
jp
mov
push
call
add
(bad)
call
jmp
xor
mov
add
(bad)
cmp
je
mov
jmp
push
call
pop
(bad)
jg
push
mov
inc
push
mov
call
mov
inc
les
or
ins
jmp
adc
dec
or
inc
adc
leave
sbb
or
jne
add
call
or
or
es
clc
add
push
mov
cmp
inc
sbb
mov
inc
gs
sbb
aaa
in
add
cs
pusha
and
jmp
pop
ret
imul
push
lea
xchg
loopne
jno
or
jno
call
std
cs
jns
inc
cld
sete
ja
fs
cwde
arpl
and
push
les
mov
out
(bad)
out
add
or
cmp
setne
add
push
and
jne
adc
pop
sub
sbb
fisubr
adc
sub
xchg
cld
dec
push
push
shl
mov
icebp
push
sar
sub
add
mov
mov
call
int
inc
in
adc
fwait
lea
ret
fiadd
pusha
push
loope
lods
add
xor
cmp
mov
xchg
pusha
adc
sbb
or
xor
lock
mov
or
ret
je
push
xor
dec
hlt
jmp
mov
fidivr
(bad)
push
call
pop
inc
jne
mov
push
sub
or
pop
cld
call
sti
je
and
sbb
adc
into
mov
jne
push
call
mov
dec
or
and
into
push
mov
stos
je
or
std
mov
add
inc
or
or
adc
jne
ret
xor
adc
ror
jnp
mov
jge
push
les
(bad)
stc
jne
cmps
retf
jb
call
call
je
mov
call
mov
in
mov
dec
fmul
adc
dec
loopne
mov
mov
mov
mov
in
mov
in
fsubrp
jbe
push
mov
vmovups
push
pop
add
aas
call
sbb
jle
sbb
mov
test
pop
cmovno
retf
add
add
push
cld
leave
mov
mov
mov
mov
push
inc
push
sbb
xor
mov
enter
add
xor
call
call
mov
push
mov
lea
mov
mov
sbb
inc
sub
or
and
or
je
or
pop
bound
aam
jns
je
mov
(bad)
jmp
cmps
jmp
mov
sbb
or
std
add
scas
in
xor
ret
lds
inc
jo
dec
adc
adc
adc
shl
add
pop
loope
mov
in
mov
push
call
and
pop
lea
jo
add
push
sub
(bad)
mov
push
lea
bnd
cmp
or
outs
sub
lea
test
mov
mov
cmp
mov
add
popa
js
mov
or
loope
sub
or
fcomip
xor
push
mov
inc
test
add
stc
test
je
mov
in
daa
sub
cmp
jne
hlt
scas
cmps
jg
dec
or
or
mov
push
jae
jg
ret
push
xor
test
mov
mov
shr
push
call
pop
mov
pop
cmp
jbe
inc
test
add
mov
jne
test
je
push
lods
imul
leave
mov
xor
lea
push
mov
fwait
cmp
and
bound
leave
mov
mov
je
xchg
mov
add
xor
inc
push
push
call
pop
je
push
add
pop
imul
ret
jl
pop
pop
pop
pop
ja
dec
push
pop
lea
push
mov
dec
call
test
std
xchg
push
les
jbe
mov
(bad)
out
dec
(bad)
push
push
push
call
call
push
call
out
mov
ins
mov
(bad)
(bad)
fnsave
inc
push
push
push
pop
jmp
test
jle
dec
mov
call
ret
jne
mov
jno
popa
xlat
inc
sbb
adc
aas
and
xlat
pop
cmp
cmp
out
inc
cmp
jne
cmp
cli
dec
and
repz
(bad)
call
mov
iret
je
push
pop
(bad)
not
je
jmp
cwde
xchg
idiv
cmp
push
jne
cmp
push
push
mov
or
mov
cmp
or
push
xchg
mov
or
push
sbb
fs
push
das
jmp
hlt
xor
mov
dec
data16
push
cmp
into
and
call
hlt
mov
shr
or
push
adc
hlt
jge
adc
sbb
lea
mov
or
add
add
or
dec
pop
and
xor
add
cmps
mov
mov
inc
inc
mov
leave
pop
pop
je
call
ja
mov
cmps
sar
push
mov
add
inc
xor
mov
mov
push
(bad)
cmp
or
cmp
mov
or
mov
mov
loope
inc
lea
push
call
add
arpl
mov
call
push
rcr
adc
fwait
ss
pop
add
or
jne
mov
pop
or
sbb
push
mov
in
call
inc
std
dec
or
add
push
stos
mov
in
push
push
call
rol
inc
xchg
call
(bad)
aaa
fcom
je
jne
cmp
je
in
or
add
mov
xor
mov
cmp
xor
xchg
and
(bad)
call
cmp
push
lea
call
inc
xor
mov
jmp
cmp
jg
push
lock
(bad)
jl
loop
add
cmp
jge
mov
add
cmp
je
mov
sbb
cmp
je
xor
add
jne
imul
push
call
mov
iret
jne
call
mov
std
aas
and
jge
add
xor
gs
xchg
outs
imul
loope
lock
mov
(bad)
call
jmp
(bad)
aaa
adc
clc
dec
jns
jmp
sub
(bad)
out
fxtract
out
fadd
idiv
push
call
inc
pop
sub
push
jl
mov
pop
jne
or
ins
or
(bad)
retf
jg
sbb
call
add
call
push
pushf
jns
in
call
pop
lock
clc
cmp
mov
pop
pop
pop
jle
leave
je
mov
ss
inc
push
lods
mov
iret
stc
call
stos
jl
add
add
adc
and
lea
lock
and
call
pop
sbb
(bad)
or
js
inc
popf
sub
mov
sbb
adc
into
pop
jmp
cld
jg
aad
or
dec
sbb
dec
and
je
test
jmp
f2xm1
ret
mov
les
in
hlt
cmp
mov
mov
pop
add
je
sub
pop
push
call
lea
or
jne
lea
call
rcl
loopne
jl
fwait
mov
push
aad
in
fstp
mov
mov
call
call
push
mov
mov
call
adc
xchg
inc
fwait
cmp
(bad)
jmp
xor
push
out
cmp
push
push
lea
call
pop
mov
xchg
hlt
inc
cmp
mov
stos
fucomip
pop
clc
push
add
call
jg
cs
cmp
je
push
call
call
shl
or
call
out
es
or
pushf
sub
push
call
mov
and
or
sub
dec
sbb
push
call
push
inc
inc
adc
aas
clc
inc
push
add
or
shr
xchg
mov
push
int3
cmp
mov
je
cmp
je
pop
add
cs
rol
add
aam
sub
in
push
push
add
inc
(bad)
(bad)
call
push
call
(bad)
ficomp
cli
(bad)
xlat
mov
call
adc
fwait
cmp
cmc
or
push
dec
or
arpl
sti
or
and
add
mov
jbe
mov
push
adc
aas
popf
hlt
mov
push
adc
dec
mov
shl
pop
sbb
sti
lea
enter
ss
mov
daa
push
and
pushf
clc
push
int3
fbstp
add
je
jne
xor
add
je
push
loopne
je
add
mov
icebp
call
jb
add
cmp
arpl
or
add
(bad)
cmp
lods
call
cmp
adc
pop
add
inc
and
aas
inc
fwait
inc
xchg
(bad)
(bad)
jmp
cmp
push
je
call
out
repnz
call
rcl
call
pop
or
push
fcomi
call
call
jmp
push
push
call
inc
sbb
call
jge
dec
clc
call
push
in
xchg
inc
clc
cdq
jg
dec
add
jge
(bad)
cli
cmp
rol
call
add
ja
jne
mov
mov
shl
adc
les
jne
and
(bad)
call
(bad)
push
hlt
cmps
fdivr
mov
jl
iret
call
or
mov
call
push
sbb
jo
fist
mov
adc
inc
push
add
scas
mov
add
sbb
inc
sti
xchg
dec
or
stc
ror
loopne
div
hlt
ss
xor
add
mov
fwait
push
mov
adc
sub
ret
inc
dec
fldenv
add
adc
xor
cmp
es
jae
(bad)
(bad)
jl
mov
mov
push
add
call
dec
jns
adc
adc
push
push
call
popa
mov
lods
aaa
mov
mov
adc
aaa
adc
inc
pop
aas
and
mov
adc
icebp
ret
bndstx
cdq
sub
mov
clc
mov
push
push
call
add
(bad)
inc
je
push
push
push
call
push
pop
(bad)
push
mov
push
jne
mov
std
mov
pushf
scas
frstor
les
inc
or
sbb
pop
mov
ret
mov
and
push
push
jmp
mov
sub
add
jo
jo
jle
push
sbb
call
sub
or
pop
clc
je
mov
dec
adc
jl
mov
push
xor
mov
dec
or
in
push
test
call
push
add
call
ja
outs
push
sbb
call
jmp
mov
push
push
out
loope
jg
and
je
ret
push
xor
cmp
add
outs
js
adc
inc
or
jp
xor
repz
dec
mov
into
sbb
pop
sub
in
arpl
js
rol
cdq
or
and
pop
dec
add
jbe
sub
pop
cmc
or
pop
add
je
mov
pop
jmp
mov
push
lea
add
call
inc
in
je
sbb
pop
js
out
mov
call
(bad)
mov
inc
or
cmp
jb
sti
test
jg
cmp
jne
inc
dec
and
cmp
hlt
loope
add
ins
mov
inc
xlat
loop
or
mov
push
xchg
(bad)
mov
or
or
mov
mov
mov
mov
or
rcr
mov
pop
rep
mov
sub
xor
push
mov
push
in
(bad)
out
(bad)
inc
call
mov
inc
adc
lea
lock
push
inc
movs
push
mov
mov
call
adc
dec
clc
inc
add
lea
call
leave
(bad)
aaa
push
adc
cmp
jge
inc
jg
jg
jl
jmp
inc
lea
call
hlt
add
mov
add
lea
pop
pop
adc
xor
jne
mov
out
fsub
mov
call
nop
int
xchg
sub
dec
cmp
add
push
push
call
dec
(bad)
hlt
dec
test
add
push
jnp
dec
inc
adc
adc
jae
out
call
push
xchg
push
mov
xchg
mov
xchg
(bad)
call
jae
push
es
cdq
xchg
ret
pop
je
call
stos
loop
hlt
inc
pop
mov
push
call
mov
call
jno
stos
xor
cmp
je
rcl
or
mov
clc
or
or
inc
add
cld
mov
call
cld
mov
dec
mov
sub
rcl
mov
add
inc
fild
add
lahf
lds
enter
pop
mov
push
lock
push
push
jle
and
call
fild
xchg
out
call
push
push
mov
fstp
push
inc
daa
(bad)
sbb
ja
hlt
inc
call
hlt
sbb
jbe
jg
mov
repz
(bad)
cmp
aaa
aam
or
test
lea
or
sbb
es
or
ret
aaa
sbb
add
push
or
mov
push
sbb
mov
add
cmp
push
jg
mov
mov
sbb
push
aaa
and
nop
hlt
lea
push
call
mov
push
push
mov
(bad)
(bad)
fisttp
in
jle
clc
test
sbb
push
push
cmp
sub
call
popa
xchg
inc
dec
adc
loope
jg
pop
cld
jne
lea
mov
mov
call
mov
rol
add
mov
push
inc
jmp
lods
sbb
stos
mov
adc
das
mov
mov
iret
call
mov
call
ret
mov
es
cld
sub
sub
lahf
mov
dec
lahf
xor
push
jno
int3
push
call
bound
inc
add
outs
cli
out
mov
push
call
call
fsubr
scas
retf
pop
pop
cmovle
or
mov
(bad)
jmp
(bad)
lea
push
call
add
adc
fwait
push
lahf
(bad)
vpmacssww
(bad)
call
clc
cmp
shl
call
test
jne
outs
and
enter
bound
in
(bad)
cli
push
fadd
jg
or
mov
push
push
fdiv
(bad)
cdq
push
call
mov
add
jo
ins
cmp
push
jne
mov
jmp
inc
cmp
inc
lods
stos
add
or
or
movs
cdq
inc
mov
push
or
inc
pusha
(bad)
adc
push
push
outs
cmp
push
pop
xor
cwde
push
push
mov
mov
lahf
sar
call
call
mov
or
adc
clc
fsubr
retf
call
in
cdq
xchg
out
addr16
je
inc
je
in
and
cmp
and
add
test
psubsb
test
inc
adc
(bad)
je
js
fwait
xor
cmp
mov
pop
les
sbb
mov
(bad)
fdiv
call
and
and
bt
add
sub
push
mov
push
mov
scas
sbb
ds
push
sbb
loopne
mov
add
outs
lods
jae
js
push
push
or
inc
sbb
jae
push
cmp
pop
ja
pop
clc
call
hlt
mov
retf
adc
js
cmp
call
rcl
cmp
push
pop
push
push
adc
sar
jno
sbb
pop
fsubr
dec
sbb
pusha
ret
vmread
aad
pop
cmc
cmp
iret
jle
mov
(bad)
push
mov
inc
shr
xchg
std
add
rcl
rol
shr
(bad)
nop
iret
xor
cmps
cmps
mov
sbb
and
es
pop
call
pop
add
call
mov
add
cmp
adc
aad
call
or
jg
push
xor
ror
stos
in
jecxz
and
push
mov
push
add
ret
inc
popa
add
mov
call
mov
mov
test
push
(bad)
in
mov
jg
(bad)
jg
lock
cmp
add
inc
sbb
sub
sub
jne
xor
into
call
mov
push
cmp
je
push
lods
ror
inc
mov
pop
call
jae
mov
jne
pop
mov
repz
call
ret
mov
mov
mov
or
call
pop
mov
mov
xor
(bad)
fadd
mov
cwde
call
js
cwde
mov
mov
mov
cdq
and
inc
fmul
call
lahf
sbb
and
pusha
sub
adc
enter
xchg
jmp
repnz
xor
push
lea
enter
(bad)
mov
sub
into
push
cli
mov
mov
call
cmp
jge
mov
and
push
jno
or
jno
pop
or
xlat
inc
cld
add
lock
call
aas
jg
call
jge
mov
ret
cmp
jl
(bad)
loop
ins
lea
jmp
pop
lea
out
js
scas
adc
adc
fstp
dec
mov
jge
cmp
push
fcomip
sbb
inc
adc
(bad)
(bad)
push
call
sub
jne
add
push
(bad)
jne
xor
call
fist
add
aas
dec
call
mov
les
add
jne
call
add
adc
enter
add
xor
mov
ins
and
sub
mov
mov
cmp
jne
mov
std
sbb
adc
push
jne
stos
or
call
(bad)
(bad)
inc
pop
add
cmp
je
mov
cmp
jne
mov
call
sti
fwait
(bad)
jne
test
je
jne
(bad)
dec
and
push
xor
mov
mov
sub
mov
mov
mov
je
dec
je
neg
push
inc
add
call
arpl
test
jle
inc
mov
mov
clc
mov
and
inc
xor
test
push
push
cmp
(bad)
ins
cmp
jle
je
cmp
test
test
call
pop
ja
pop
je
dec
sbb
in
rcr
jmp
inc
jge
mov
out
push
mov
leave
(bad)
xor
push
push
mov
mov
jg
mov
call
jl
lea
pop
jg
cmp
call
aaa
mov
jne
dec
fwait
test
push
jl
inc
fisttp
dec
sar
push
inc
push
jmp
mov
outs
pop
jo
je
jo
cmp
aaa
mov
push
call
enter
outs
jo
adc
xchg
sub
jmp
jg
inc
or
retf
mov
call
sub
stc
(bad)
jmp
adc
or
pop
mov
mov
or
test
or
push
or
cwde
ror
pop
jmp
js
pop
jmp
iret
inc
fs
dec
mov
(bad)
xor
lea
mov
push
lock
add
mov
push
call
lea
jle
mov
call
fcomip
cs
call
add
add
push
jmp
mov
lea
cmp
call
push
mov
jo
add
sub
mov
out
xor
jne
mov
mov
jg
psubb
call
call
call
inc
add
jmp
lock
pop
cs
pop
cdq
enter
add
xor
cmp
pop
sahf
dec
pusha
test
and
test
and
and
ja
xlat
mov
cmp
jl
mov
xor
sbb
mov
(bad)
clc
push
call
stos
adc
jp
sub
push
or
cmp
dec
push
(bad)
ror
cmp
cmp
inc
cmp
je
cmp
data16
hlt
(bad)
mov
or
jp
or
inc
je
push
cmps
dec
mov
lea
mov
call
in
out
adc
push
arpl
mov
lds
cmps
dec
das
enter
fdiv
out
ja
sar
mov
mov
cmp
cmp
call
xor
xor
mov
lock
popa
test
and
outs
mov
and
mov
mov
pop
pop
jmp
jle
jbe
lea
call
(bad)
out
(bad)
push
or
out
push
jnp
jo
call
repz
cmp
and
xchg
sbb
ins
inc
pop
in
enter
and
mov
xor
xchg
xor
loopne
pop
ins
jmp
inc
loopne
pop
pop
inc
je
test
jl
inc
xor
test
sar
pop
pop
or
fwait
in
pop
mov
test
call
scas
and
clc
adc
and
fisttp
ds
pop
push
push
push
lea
call
std
push
retf
icebp
cmps
pop
stc
je
sbb
out
or
xchg
call
in
mov
jbe
test
(bad)
test
ffreep
or
test
jne
jmp
xlat
mov
jne
call
or
add
pop
test
or
sbb
scas
xlat
cmp
and
ja
xchg
jle
mov
jmp
jne
cmp
mov
je
mov
mov
push
push
mov
mov
jne
jne
lods
push
cmp
or
mov
ja
and
jl
lea
push
retf
push
push
push
iret
dec
cmc
adc
mov
in
call
out
xor
iret
sub
cmps
repnz
jmp
mov
jp
push
call
cmp
pop
or
dec
fdiv
xor
inc
ins
fsubrp
mov
aad
add
test
inc
jg
or
call
xor
inc
dec
pop
mov
cmps
push
out
test
mov
sbb
mov
or
push
call
jg
xchg
pop
cmp
jne
cmp
jne
push
es
cmps
push
call
mov
mov
sahf
jge
iret
push
call
inc
fild
dec
xchg
mov
test
call
or
push
call
push
push
sub
add
inc
or
call
add
mov
push
call
cmp
out
adc
or
mov
push
or
sar
push
je
arpl
les
jmp
dec
je
lea
push
idiv
call
push
jmp
dec
lock
je
pop
dec
adc
mov
cmp
inc
shl
retf
out
push
rcl
xchg
jae
test
sub
arpl
jge
dec
jne
call
call
inc
push
int
fild
movs
repnz
mov
pop
push
push
mov
lea
call
mov
pop
pop
jmp
and
adc
aas
xchg
mov
pop
icebp
(bad)
push
push
mov
push
in
push
sub
and
lds
mov
out
sub
mov
cmp
push
sete
inc
pop
inc
add
xchg
fsub
cmp
rol
pop
push
dec
je
inc
adc
mov
pop
ins
fcomp
xor
push
pop
and
jnp
sbb
adc
mov
mov
xor
cmp
aad
ret
pop
adc
push
sar
mov
shr
push
data16
test
fld
pop
sbb
mov
or
adc
xor
dec
inc
icebp
lea
rcl
jae
ror
sar
inc
mov
and
push
pop
mov
jb
push
lea
xchg
jae
(bad)
fcom
push
mov
cmp
mov
jb
mov
mov
jle
les
ret
xor
shr
mov
(bad)
(bad)
jg
aas
pop
jmp
cmp
jb
mov
sub
sldt
jbe
and
rol
sti
fldz
jmp
sub
fdivr
fdivr
fstp
jl
cmp
add
inc
adc
push
aad
mov
push
push
and
mov
mov
add
out
(bad)
clc
xor
cmp
mov
mov
jmp
mov
cmp
cmp
je
and
adc
sahf
push
jge
sahf
push
adc
fistp
mov
xchg
int
add
push
add
cmp
push
or
push
pop
inc
or
and
xor
inc
jmp
cmp
jl
adc
mov
loopne
xchg
mov
adc
ja
add
div
inc
push
or
std
mov
ret
push
mov
cmp
jne
push
call
in
mov
enter
add
push
pop
fdivp
std
mov
mov
push
(bad)
aas
mov
push
pop
rep
mov
loopne
gs
je
jmp
mov
push
sahf
inc
xchg
cmp
leave
je
(bad)
mov
mov
pop
add
or
or
and
xchg
sbb
add
cmps
sahf
xor
add
jne
push
mov
lock
ins
push
aad
loop
les
pop
lock
(bad)
int
sub
xchg
add
cmp
mov
xlat
addr16
ret
sub
push
inc
sub
fiadd
and
jmp
(bad)
dec
ret
mov
or
cmp
jae
cmp
dec
add
jae
push
inc
cmp
je
mov
jmp
or
and
call
in
add
enter
cmp
je
mov
mov
add
retf
and
call
rol
push
xchg
jge
add
(bad)
fild
push
push
push
push
push
push
push
xchg
cwde
arpl
adc
add
push
push
mov
popa
iret
push
push
das
adc
add
fild
or
xor
cmc
dec
cmp
ror
push
(bad)
xchg
pop
dec
adc
test
inc
or
sub
imul
sbb
stos
dec
rcl
fild
mov
fmul
jo
add
loope
call
faddp
cmp
adc
fsub
mov
pop
hlt
je
cmp
add
ret
sub
mov
hlt
cmp
ss
add
je
cmp
call
pop
sub
inc
hlt
call
pop
pop
jmp
cmc
and
sbb
mov
sub
aad
shl
rcr
push
imul
pusha
xor
and
or
mov
xor
dec
xor
jle
sbb
lea
push
sbb
add
in
sub
sub
lds
mov
push
push
pop
xor
jge
add
jge
mov
icebp
jmp
push
mov
and
push
xor
inc
cmp
jle
dec
pop
xor
push
call
pop
je
mov
add
mov
cli
inc
push
cdq
pop
idiv
add
cmp
mov
outs
mov
xchg
cs
mov
fmul
lea
cmpps
push
mov
mov
outs
sub
or
mov
sti
add
mov
test
mov
(bad)
fild
adc
mov
add
or
pop
ret
pusha
sub
jle
push
ins
add
ss
inc
xor
scas
mov
push
test
sub
pop
sbb
out
mov
out
dec
or
mov
add
mov
cmp
call
mov
mov
mov
call
push
call
jmp
and
add
fnstenv
inc
push
adc
pop
pop
pop
inc
sti
push
sbb
mov
xor
adc
mov
call
test
out
push
add
or
inc
mov
aam
mov
imul
dec
pop
jle
ja
mov
adc
ror
or
add
data16
xor
mov
cmp
or
or
outs
sbb
daa
mov
loopne
jge
adc
sbb
jmp
and
mov
mov
adc
cmp
and
cmp
je
push
ret
inc
cli
mov
push
push
push
sbb
call
cmp
je
push
pop
add
sub
stc
sub
lds
adc
mov
(bad)
sbb
sub
sbb
jae
add
inc
push
push
cld
(bad)
(bad)
jmp
sti
xor
mov
mov
xor
mov
mov
inc
add
cmps
rol
cld
ins
push
mov
push
mov
pop
lahf
arpl
inc
push
ds
scas
shl
call
jecxz
dec
jne
or
sub
ret
adc
fnstsw
xchg
xor
pop
or
(bad)
(bad)
(bad)
dec
cmp
jne
inc
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
push
arpl
xchg
add
int3
and
sbb
fisttp
imul
push
call
cmp
fisttp
dec
in
out
add
sub
cmp
jecxz
dec
cmp
loop
fldenv
enter
jno
call
mov
das
mov
or
test
jg
jmp
rcl
push
or
push
or
ins
mov
mov
or
jg
mov
or
or
mov
push
retf
jmp
ja
cmp
lds
cs
and
(bad)
add
add
push
mov
and
cmp
vpinsrw
adc
push
jne
jmp
mov
mov
jb
sub
and
vmread
mov
mov
bound
sbb
icebp
(bad)
mov
cmp
jne
cmp
imul
add
add
cmp
or
inc
and
inc
and
and
mov
jmp
xor
icebp
dec
out
(bad)
or
jle
inc
lahf
jno
xor
xchg
add
mov
mov
or
jp
inc
and
js
mov
shl
mov
add
pushf
add
push
jecxz
mov
in
mov
pop
fucomp
std
jg
push
push
call
jmp
mov
call
mov
add
xchg
xor
retf
clc
or
pop
jne
addr16
inc
cmp
mov
xor
addr16
fadd
dec
lahf
mov
push
adc
mov
ret
push
and
scas
sbb
test
or
bound
adc
push
cmp
stc
and
push
jg
cs
inc
and
mov
pop
ret
pop
inc
sbb
inc
cmp
ret
(bad)
call
cmovs
mov
add
mov
jmp
push
mov
cmc
add
add
cmp
jbe
or
cmp
mov
sar
out
jo
dec
and
mov
push
lea
mov
add
and
mov
sub
push
add
push
iret
adc
jae
(bad)
in
add
add
xor
add
(bad)
inc
jbe
lea
cmp
jbe
mov
mov
shl
mov
cmp
ja
sti
scas
add
push
mov
out
(bad)
mov
sub
or
sub
add
mov
pop
mov
jae
fdivr
sub
sub
ffreep
jne
mov
in
ret
xchg
lds
pop
ret
jb
add
dec
icebp
call
data16
lea
sbb
push
hlt
dec
sub
jno
cmps
in
int3
call
sbb
mov
fld
mov
pop
je
push
mov
out
jnp
js
into
jnp
xchg
jo
rcr
test
pop
outs
add
fisttp
inc
sub
add
xchg
and
push
push
xor
call
test
retf
mov
pop
pop
add
pop
mov
icebp
mov
add
sbb
push
call
xchg
loope
popf
pop
pop
das
sti
xchg
ja
sbb
adc
or
or
mov
xor
jmp
mov
sbb
shl
inc
cmp
sub
into
push
xor
cwde
imul
pusha
sbb
sbb
arpl
lea
rol
loopne
lahf
add
cld
ja
mov
call
lea
or
faddp
aaa
(bad)
push
mov
test
addr16
pop
stos
into
ror
rcl
sbb
jecxz
mov
shl
pop
ins
and
add
test
aaa
pop
adc
dec
movmskps
xlat
push
call
(bad)
into
call
xchg
jns
mov
xchg
(bad)
scas
(bad)
call
lea
cdq
sub
sar
cmp
push
push
je
popa
sbb
(bad)
sti
(bad)
inc
ja
jge
lea
cmp
jg
lea
or
mov
jmp
or
enter
cmps
jmp
fwait
icebp
sbb
push
jl
repz
cmp
mov
test
iret
retf
call
push
call
scas
inc
pop
ror
jo
sbb
sub
sar
sbb
ficomp
jl
pop
enter
cld
cmp
xor
add
mov
and
add
xlat
shl
pop
mov
xchg
imul
xor
sbb
mov
jne
push
lea
push
mov
lahf
call
clc
add
movzx
mov
sbb
or
inc
cmp
jl
mov
mov
inc
mov
dec
xor
push
mov
push
outs
inc
je
jae
cmp
inc
adc
jne
pop
push
dec
je
or
cs
mov
(bad)
pop
xchg
rcr
popa
shl
mov
(bad)
fistp
lock
mov
push
das
sbb
test
inc
and
movs
dec
adc
stos
or
mov
cmps
cmp
fstp
fst
pop
pop
ja
cmp
inc
mov
push
je
or
cmp
cmp
or
arpl
addr16
je
pop
clc
jne
lea
cmp
mov
call
das
or
mul
je
add
in
add
sub
mov
cmp
(bad)
fstp
add
mov
outs
add
call
xchg
imul
ja
out
or
push
push
jl
enter
enter
pop
(bad)
and
adc
and
add
clc
push
shr
cmp
xor
sbb
sub
add
cmp
ficomp
les
jmp
cmp
sbb
add
enter
adc
cmp
push
ins
bound
cmp
sahf
push
popa
je
sub
or
or
adc
cmp
inc
jmp
scas
imul
stos
sbb
scas
mov
push
sub
add
stc
add
add
je
inc
add
and
fwait
or
mov
test
add
sbb
popa
and
jmp
adc
pusha
pop
xchg
mov
push
mov
mov
cmp
je
fwait
test
fdivr
lods
clc
dec
aas
inc
mov
mov
clc
fwait
jmp
shl
(bad)
push
call
ds
mov
adc
mov
or
mov
adc
sbb
xchg
jne
and
push
ss
inc
add
inc
inc
inc
mov
sub
jge
inc
in
lea
xor
push
add
hlt
(bad)
dec
outs
fld
call
push
mov
inc
cmp
cli
pop
or
mov
ret
arpl
push
inc
jg
cli
shl
ins
cmc
aas
inc
hlt
call
adc
sbb
sbb
mov
call
fcos
jmp
mov
call
fild
xchg
sub
clc
adc
ins
movs
add
inc
ret
mov
test
stc
and
aas
mov
push
jmp
mov
xchg
mov
retf
push
push
call
nop
mov
inc
shl
mov
or
lahf
mov
and
je
(bad)
(bad)
call
retf
inc
ins
mov
mov
call
mov
lea
push
clc
into
mov
ins
cmp
sub
push
call
sar
je
pop
mov
cli
dec
jne
les
outs
cmp
fldz
jno
pop
movs
mov
pop
or
push
aam
adc
pop
push
fstp
mov
dec
lock
push
mov
call
lea
out
loopne
cmp
and
call
push
push
aad
dec
mov
pusha
mov
inc
mov
(bad)
jg
out
xor
inc
push
mov
mov
mov
cmc
(bad)
sbb
add
inc
add
pop
add
mov
add
and
adc
jmp
mov
mov
mov
call
mov
push
call
jne
mov
mov
in
xor
fsubr
pushf
test
add
pop
out
(bad)
aas
js
inc
or
xor
mov
lea
ja
scas
sbb
push
or
jg
pushf
popa
jp
dec
ins
mov
jmp
ret
inc
enter
add
loopne
inc
icebp
jb
mov
xor
add
cmp
(bad)
(bad)
shr
cmp
jne
add
(bad)
sub
adc
and
out
mov
add
push
mov
inc
mov
lea
push
mov
jg
inc
push
out
xor
cmp
jne
int
pop
and
adc
ja
mov
inc
or
leave
mov
mov
pop
push
pop
dec
enter
jg
mov
je
mov
mov
push
call
add
(bad)
fnsave
jno
mov
inc
adc
sar
(bad)
jbe
ins
and
inc
xor
and
cmp
jne
cmp
jbe
cmp
rol
sti
(bad)
call
jne
mov
mov
mov
call
xchg
mov
jne
call
fnstsw
jmp
call
xchg
ins
adc
ja
inc
cmp
je
mov
push
std
ja
(bad)
cmp
jae
cmp
jne
cmp
jne
push
pop
(bad)
(bad)
inc
inc
loop
fmul
and
inc
jne
mov
cmp
cmp
cmp
je
push
ret
shl
xchg
add
jmp
inc
pusha
dec
or
fwait
adc
data16
cli
lahf
call
jecxz
ss
push
or
cmp
ins
(bad)
(bad)
call
test
push
push
je
cmp
je
mov
mov
cmp
je
push
sbb
fucomip
fucomp
jae
mov
jmp
push
daa
movzx
sbb
jp
std
push
mov
out
ror
dec
cmp
cli
pop
icebp
test
je
clc
adc
fist
cld
adc
test
pop
scas
cmp
cmp
je
test
(bad)
pop
test
jle
push
push
ds
inc
sub
inc
cmp
mov
mov
inc
sbb
cmp
aaa
cmp
adc
push
push
outs
imul
dec
or
add
and
retf
push
jae
enter
fstp
lahf
mov
mov
mov
clc
sbb
inc
cmp
push
jmp
or
cmp
jne
test
jne
jmp
inc
jb
scas
inc
mov
iret
mov
fist
mov
cld
(bad)
push
jl
jmp
test
jne
aas
add
mov
pop
int
sub
cmp
sti
inc
div
mov
lea
shl
call
add
add
addr16
xor
jmp
mov
lock
je
mov
scas
inc
add
push
popf
lods
sti
xchg
add
clc
inc
inc
test
mov
inc
add
or
movzx
push
xlat
pop
or
pop
popf
or
ja
clc
push
sub
add
mov
pop
lahf
inc
iret
and
je
div
adc
(bad)
pop
cmp
add
retf
arpl
clc
add
mov
mov
sar
mov
jmp
pop
fcom
add
fdivr
fcmove
jo
stc
jl
pop
mov
mov
rcl
inc
add
or
pop
adc
fs
cli
mov
je
mul
xchg
retf
stos
call
mov
and
add
sub
inc
sbb
std
or
inc
jmp
xor
fldz
add
adc
jecxz
cmp
ror
out
jmp
mov
shl
ror
add
or
enter
mov
add
dec
stos
call
clc
loop
inc
or
pop
mov
je
push
push
push
dec
mov
call
adc
mov
in
shl
xchg
adc
push
push
pop
push
je
adc
push
ret
push
fstp
jl
pushf
push
sub
mov
cwde
pop
imul
adc
push
push
dec
mov
adc
and
mov
or
aad
jne
test
clc
pop
or
jae
ins
and
mov
cmp
push
call
adc
mov
mov
mov
jbe
inc
cmp
cmp
push
add
ret
push
dec
cmp
call
(bad)
mov
or
dec
cmp
icebp
inc
or
push
aam
ud0
or
cmp
cmp
ins
lea
jmp
inc
adc
sub
pop
mov
push
hlt
fild
movs
and
hlt
fmul
fmul
fcmovnu
inc
mov
fdivrp
(bad)
jge
ror
mov
mov
cmp
fmul
fmul
jb
sbb
retf
ror
mov
shl
arpl
jmp
cmp
popa
fadd
adc
xchg
fcomp
mov
rcr
fmul
fsubrp
fsubr
ja
inc
add
fstp
lahf
and
jmp
cmp
push
add
clc
dec
push
sbb
dec
mov
(bad)
add
xor
xor
or
dec
fwait
hlt
jne
cmp
cmc
mov
xor
inc
cmp
push
jo
test
adc
and
test
outs
repz
je
push
mov
call
or
dec
adc
pop
inc
sbb
lock
stos
mov
and
and
and
xor
mov
aas
jnp
inc
push
call
ins
push
mov
call
fucomi
stc
inc
ret
sbb
inc
jp
jmp
pop
inc
xchg
jnp
mov
(bad)
fisttp
push
call
or
inc
cmp
pop
jne
pop
mov
mov
pop
pop
ja
call
add
xchg
nop
test
cmp
mov
cdq
add
mov
mov
sub
and
mov
mov
loopne
and
call
sub
sbb
or
push
push
fist
je
movzx
(bad)
int3
ins
loopne
ret
cld
ja
movs
mov
and
(bad)
and
fsubr
xor
add
jne
inc
pop
test
test
je
xor
(bad)
jmp
cld
push
out
aaa
jno
xor
inc
jmp
mov
mov
sub
enter
pusha
rcl
add
and
in
scas
cs
das
pushf
cmp
jne
fdiv
jno
dec
ins
jmp
mov
mov
inc
fs
push
push
mov
call
aas
in
push
call
and
jmp
or
dec
out
aaa
les
push
fld
or
lods
outs
in
(bad)
mov
dec
mov
xchg
loop
or
or
outs
hlt
inc
dec
int
and
adc
loope
or
push
(bad)
jmp
icebp
sub
mov
dec
and
call
mov
repnz
add
inc
add
div
fisttp
adc
adc
xor
and
pop
jle
or
loopne
mov
mov
mov
test
pop
fist
adc
ins
test
loopne
pop
adc
jns
and
test
sub
add
and
loopne
jmp
adc
mov
pop
lock
call
sbb
mov
pcmpeqb
pop
push
push
push
call
je
mov
fild
jb
xor
and
mov
pop
add
shl
jno
push
sbb
push
out
dec
idiv
cmp
call
or
sti
fbld
mov
mov
push
push
push
push
push
or
clc
into
in
mov
xchg
xor
adc
push
mov
das
retf
je
into
jmp
leave
sub
mov
sbb
or
mov
rol
cmp
iret
call
test
or
dec
addr16
adc
cmp
sub
lds
push
dec
std
in
jmp
loop
(bad)
jle
aas
fimul
mov
inc
push
add
aad
in
sub
push
xor
sub
sub
sub
cmp
rol
(bad)
dec
mov
daa
loope
adc
sbb
mov
fs
push
pop
cmp
jbe
cmp
jne
cmp
pusha
inc
in
outs
je
push
mov
je
cmp
je
cmp
je
shr
sub
fld
dec
sub
call
push
dec
and
les
(bad)
(bad)
(bad)
jmp
pop
lea
dec
and
adc
pop
and
jbe
mov
dec
scas
imul
inc
lea
aam
fist
add
(bad)
mov
gs
add
ret
outs
push
push
xor
push
push
and
add
inc
in
mov
call
lock
hlt
lock
mov
or
push
xor
shr
popa
sbb
call
push
ret
ja
dec
jge
jne
je
hlt
lahf
jne
push
aam
loopne
aas
mov
js
inc
call
xor
outs
mov
lds
test
cmc
xor
jne
mov
mov
mov
call
pop
sahf
mov
dec
les
call
addr16
mov
pop
jmp
xor
dec
call
call
pop
jne
push
call
sub
ins
xor
xchg
in
push
push
dec
cmp
xor
fwait
add
hlt
sbb
mov
and
in
scas
mov
and
push
adc
dec
and
test
add
fwait
stos
out
inc
and
adc
scas
pusha
fld
call
int
daa
jmp
cmp
or
cmc
sbb
inc
add
cmp
je
add
rol
adc
push
or
adc
std
or
cld
push
or
adc
adc
xchg
push
add
sbb
nop
popa
cmps
test
cmps
dec
jne
ficomp
out
xor
push
sub
out
in
adc
aaa
fsub
adc
js
adc
add
add
adc
push
mov
mov
and
cld
ins
add
pop
das
xor
inc
push
(bad)
jle
loope
or
dec
or
inc
es
(bad)
scas
imul
test
dec
adc
mov
adc
test
dec
sub
jbe
pop
add
pop
jmp
or
sub
or
loopne
and
mov
inc
aam
or
add
inc
loopne
pusha
(bad)
sti
add
lahf
je
jne
push
sub
call
jmp
lahf
jbe
(bad)
xor
add
mov
stos
mov
dec
jne
fwait
sub
test
mov
hlt
lea
sbb
dec
cmp
mov
fst
jne
push
push
call
jmp
adc
aad
mov
jl
test
dec
std
(bad)
(bad)
fild
jg
inc
add
jne
dec
sub
test
jg
cmp
je
mov
outs
loop
push
or
lock
cmp
jge
add
inc
adc
repz
cmp
adc
xor
fcos
push
mov
call
jnp
mov
push
mov
xchg
jmp
bndldx
call
adc
test
dec
pop
or
cmps
sub
sti
mov
retf
jge
cdq
leave
ss
or
sbb
test
pop
push
cmps
push
or
(bad)
sbb
pop
inc
sete
call
std
xor
push
jne
jg
mov
mov
or
mov
and
push
add
xor
sub
icebp
scas
out
or
and
sub
jmp
adc
dec
outs
arpl
pusha
pop
mov
push
movs
push
push
sti
adc
pop
jnp
push
mov
add
inc
inc
push
adc
adc
sub
cld
add
in
pop
add
push
imul
xor
push
cmp
jne
adc
or
sbb
popa
adc
inc
clc
xor
repnz
dec
sbb
test
jle
jecxz
(bad)
jmp
inc
lea
cmp
je
dec
sub
test
jg
test
jl
sbb
mov
sub
test
mov
lds
loopne
cmp
stos
test
shl
push
test
rcl
call
mov
push
call
adc
and
inc
jns
dec
test
sbb
mov
and
ficomp
and
inc
xchg
or
loope
cmp
jecxz
adc
inc
cmc
inc
bts
mov
mov
neg
and
add
jnp
ja
push
call
jmp
mov
push
xchg
jno
inc
xor
outs
push
xchg
retf
jmp
push
loopne
lea
not
cmp
inc
out
push
mov
adc
dec
cmps
(bad)
push
inc
mov
cmp
mov
jne
mov
sbb
add
push
pushf
cld
add
cmp
clc
pop
sbb
or
test
add
mov
in
inc
push
xor
loopne
ss
es
inc
retf
and
or
mov
add
sub
mov
and
test
mov
cmp
xor
mov
cmp
jl
mov
add
cdq
or
mov
loopne
push
call
inc
or
inc
lock
and
out
xor
add
hlt
call
jo
or
retf
(bad)
(bad)
(bad)
dec
add
lea
mov
mov
mov
mov
mov
inc
mov
mov
inc
ja
out
in
add
idiv
(bad)
jmp
adc
aaa
ror
inc
adc
pop
(bad)
jne
aas
push
rcl
sbb
out
add
add
dec
(bad)
shl
(bad)
ffree
cmp
shl
xor
out
shr
mov
call
xchg
dec
or
stc
rcr
adc
pop
adc
fst
clc
push
(bad)
sub
xor
mov
in
or
punpckhdq
shr
loopne
call
shr
mov
rcl
call
xchg
cmp
inc
xchg
out
inc
adc
int3
push
xor
out
xchg
icebp
dec
adc
(bad)
in
push
call
ret
iret
call
pop
sbb
push
mov
icebp
(bad)
(bad)
call
mov
mov
xor
add
mov
call
cmp
and
add
int3
sbb
mov
add
mov
push
mov
sbb
icebp
lock
push
scas
or
int
loopne
adc
ror
inc
xchg
pusha
call
cdq
sub
enter
sahf
mov
mov
call
add
cmp
mov
or
cmps
das
add
out
dec
and
shl
aad
jmp
inc
or
add
lock
fbstp
es
push
xchg
loopne
sar
fcomp
je
cmp
jne
sbb
lea
call
dec
push
xlat
push
push
mov
pop
adc
mov
lock
xchg
push
(bad)
fneni(8087
push
adc
mov
dec
sbb
fstp
retf
cmp
pop
mov
je
call
test
enter
icebp
mov
add
xor
call
sub
xor
rol
(bad)
jmp
adc
sahf
mov
cli
mov
inc
add
dec
test
inc
idiv
mov
push
or
inc
lock
sar
jne
mov
pop
call
mov
xchg
popa
sar
in
mov
jne
call
add
fisttp
push
jno
pop
aaa
les
(bad)
sbb
and
add
sbb
jle
scas
cmp
stos
mov
in
addr16
sbb
fld
clc
arpl
pop
(bad)
jne
les
popa
loopne
mov
jne
pusha
std
push
mov
jne
adc
dec
rcl
push
adc
mov
icebp
movs
add
mov
cmp
mov
paddusw
cmps
test
inc
sbb
in
(bad)
(bad)
jg
pusha
mov
mov
shr
mov
pop
jmp
mov
mov
mov
sub
jmp
cli
pop
and
or
fdivr
mov
mov
push
les
push
mov
cmc
add
and
es
cmp
fstp
mov
or
mov
jb
mov
or
je
call
retf
retf
push
dec
fmul
(bad)
add
out
push
jno
and
fld
jl
retf
(bad)
jmp
cmp
push
mov
nop
mov
xor
jge
test
jne
pop
loopne
cli
vmwrite
call
test
jne
dec
loopne
sbb
inc
mov
test
lea
cmp
mov
sbb
sbb
dec
mov
fcom
stc
in
sbb
mov
jmp
cs
mov
cld
jl
sbb
mov
mov
scas
sub
pop
loopne
inc
add
cmp
pusha
or
pop
pusha
add
minps
fiadd
scas
dec
jge
test
pop
in
clc
aam
mov
adc
fnstsw
cmp
call
aaa
pop
xor
and
call
mov
test
pop
data16
dec
cs
leave
lock
adc
mov
cmp
jne
mov
sub
cmp
test
dec
pop
lea
jmp
call
cmp
mov
sbb
inc
loope
loopne
sub
dec
cmp
lea
(bad)
jmp
lea
pop
xor
mov
mov
mov
or
mov
mov
ja
mov
push
mov
popa
pop
cmc
and
dec
push
inc
sub
xlat
test
push
mov
call
data16
js
add
push
test
inc
sub
ret
imul
inc
loopne
ds
call
call
rsm
push
bound
pop
rcl
mov
push
stos
push
cmp
je
adc
xchg
and
pop
push
retf
or
mov
dec
pop
add
das
popa
lea
sbb
mov
xor
or
jle
fiadd
sub
sbb
or
cmp
mov
jbe
push
call
adc
adc
in
cmp
jle
iret
shr
add
sbb
cli
and
mov
scas
fwait
add
and
jge
(bad)
jbe
loope
sbb
fst
fwait
mov
add
aaa
movzx
ja
inc
test
je
cmp
je
cmp
cmp
icebp
out
cmp
push
jmp
mov
test
std
or
call
add
arpl
ja
enter
or
pop
or
cmp
add
mov
mov
pop
fild
add
push
add
jmp
faddp
adc
pop
dec
or
push
sub
call
add
push
xor
inc
(bad)
(bad)
jmp
mov
fstp
pop
or
cmp
mov
push
mov
cmp
je
mov
cmp
out
(bad)
push
adc
push
mov
mov
aas
in
out
shl
or
add
add
fistp
call
mov
cmp
dec
test
xor
cmp
inc
inc
adc
jae
stos
inc
push
push
call
mov
(bad)
xlat
(bad)
enter
sub
xlat
mov
jmp
lea
push
push
mov
lock
call
call
sahf
nop
mov
call
adc
xchg
jg
nop
push
push
push
push
adc
add
add
adc
xor
(bad)
or
push
adc
adc
clc
cli
(bad)
dec
cmp
je
in
jne
sbb
js
push
mov
xor
call
mov
mov
call
xor
stc
call
test
stos
mov
call
call
std
fcos
ja
leave
(bad)
(bad)
fldz
sbb
push
lea
or
ja
mov
call
das
ja
dec
hlt
ss
ja
ret
mov
inc
cld
push
mov
push
xlat
cld
lea
dec
inc
cld
pop
jno
call
call
inc
and
add
adc
push
or
(bad)
mov
sahf
adc
(bad)
sahf
pop
add
stos
(bad)
cmp
je
icebp
mov
adc
mov
stos
cmp
add
inc
dec
xor
push
xor
mov
clc
cmps
jmp
sub
repnz
pop
cmc
sbb
mov
and
push
scas
pop
pop
leave
inc
test
je
sub
aam
call
cmp
jl
or
push
and
and
arpl
jecxz
pushf
adc
pop
jmp
das
or
and
fwait
sub
adc
out
mov
mov
out
mov
push
push
(bad)
mov
mov
pop
lods
mov
mov
jb
sahf
test
mov
xchg
lods
cmps
call
or
mov
jae
call
test
cdq
dec
shr
jno
lea
mov
sbb
jmp
cld
add
inc
xor
call
int3
stc
fdivrp
inc
or
in
inc
adc
add
mov
or
call
adc
push
push
mov
push
aaa
sub
cmp
push
call
lea
fcomi
inc
(bad)
out
mov
je
mov
jmp
sbb
repnz
call
sbb
js
sub
call
test
loopne
inc
fsubr
jle
inc
adc
ret
cdq
pop
into
addr16
dec
mov
scas
out
pop
push
test
mov
add
in
mov
dec
aad
fimul
into
je
int3
sbb
sar
in
sahf
and
mov
jne
call
in
scas
je
cmps
and
ja
mov
jmp
clc
add
mov
xchg
add
in
mov
inc
shr
xor
jg
jg
pop
test
ins
in
(bad)
jg
(bad)
push
lea
adc
push
or
pop
cld
or
iret
or
out
jbe
hlt
call
iret
pop
xchg
xchg
or
jae
lods
dec
scas
inc
loop
das
sbb
cld
(bad)
(bad)
fild
mov
ja
lods
and
inc
daa
dec
das
cli
in
fwait
add
pop
or
sub
dec
les
pop
int3
call
les
into
loopne
add
xor
out
lahf
imul
sbb
call
(bad)
pop
jg
push
call
call
jmp
ret
jae
cmc
js
into
push
idiv
or
cwde
repnz
sub
sub
jg
data16
out
pop
in
push
nop
xor
call
call
call
jl
add
dec
sbb
mov
cld
sub
jo
call
adc
adc
test
and
call
lea
push
push
fcmovnb
sbb
mov
mov
push
mov
add
jle
adc
shl
sbb
push
adc
cmp
xchg
fild
add
push
call
dec
loopne
aam
(bad)
aam
inc
cld
(bad)
sti
cmp
fsubr
push
in
or
enter
enter
push
mov
jmp
pop
pop
jg
cmp
push
sbb
push
xchg
adc
pop
xor
jmp
(bad)
push
jbe
retf
call
xchg
mov
cmp
push
sub
std
xchg
icebp
mov
mov
call
retf
clc
in
(bad)
push
lock
iret
mov
outs
leave
dec
mov
test
je
ucomiss
and
movzx
add
adc
xor
mov
sub
add
push
push
mov
push
sbb
in
adc
mov
jl
push
mov
pop
cmp
inc
mov
je
call
jecxz
mov
sahf
ret
ds
(bad)
je
mov
mov
icebp
je
sub
int
add
gs
add
outs
push
adc
imul
retf
call
pop
xor
mov
jmp
(bad)
rcr
test
rcl
loope
inc
inc
adc
(bad)
rcl
rcl
sti
pusha
call
cdq
iret
call
push
call
sti
jle
rcr
mov
xor
push
dec
test
(bad)
(bad)
(bad)
jle
setp
cmp
leave
sar
sar
outs
inc
push
sbb
icebp
(bad)
inc
sbb
cmps
call
push
lea
mov
call
test
xchg
cli
cmps
aas
iret
aaa
add
add
cmp
ss
cmp
and
hlt
dec
add
fnstenv
leave
(bad)
push
ja
xchg
psubd
sub
mov
push
mov
clc
fs
pusha
shl
inc
push
sub
and
stos
ja
enter
ja
cmp
mov
mov
rol
je
add
pop
or
mov
mov
loopne
add
lea
(bad)
aaa
jmp
cmp
or
inc
xchg
addr16
test
jne
inc
std
aam
pop
sbb
add
pop
cmp
pop
push
and
pop
jne
call
or
and
adc
jnp
adc
or
jne
ja
adc
mov
cmp
mov
cmp
ja
fld
mov
cmp
test
xor
sub
je
std
pop
in
test
das
push
xchg
dec
je
dec
jne
fist
icebp
je
or
mov
mov
push
cld
cmp
ror
call
fdivr
or
test
cmp
je
pop
test
mov
frstor
jo
lods
push
aas
(bad)
inc
pop
call
jmp
fstp
xor
ss
(bad)
(bad)
jmp
(bad)
aas
imul
add
cmp
jne
xchg
push
xor
push
pushf
shl
mov
(bad)
call
cmp
jle
xchg
and
aas
sbb
pop
int3
mov
xor
jg
push
les
scas
fnstsw
inc
sub
loop
hlt
inc
pop
or
inc
lock
lea
xor
xor
dec
(bad)
(bad)
call
and
mov
stos
push
xchg
cmp
mov
out
test
and
cmp
rcr
jne
push
aam
mov
pop
push
in
(bad)
mov
neg
sbb
and
je
sbb
cmp
je
push
ja
add
call
and
dec
add
test
push
mov
call
idiv
cmp
rcl
lea
std
push
mov
mov
cmps
call
jmp
mov
or
jne
jmp
mov
or
je
sar
mov
aaa
dec
ror
fwait
sub
inc
push
call
sahf
mov
sbb
and
lea
and
mov
aad
js
or
or
push
mov
mov
test
adc
sbb
mov
sti
lods
jp
and
daa
jge
std
arpl
mov
or
add
clc
or
in
adc
inc
or
push
and
jg
adc
add
std
inc
je
rcl
lock
(bad)
jmp
cmp
aaa
cmp
gs
out
jns
inc
idiv
fcmovu
jge
add
jne
out
dec
push
pop
add
into
call
stos
lahf
mov
je
inc
inc
ror
xor
fdivr
mul
fidiv
sub
fld
mov
inc
hlt
cmp
sbb
lea
test
rcr
test
into
call
mov
mov
mov
mov
jmp
ror
out
add
or
aad
test
inc
aam
push
loopne
call
aad
f2xm1
add
retf
jo
aaa
mov
adc
call
dec
lea
push
mov
jo
inc
or
xchg
ins
lods
mov
loopne
call
mov
test
push
cmps
and
add
mov
jmp
sar
ins
cli
sti
push
push
cdq
test
sbb
ins
push
push
mov
adc
add
push
adc
in
mov
push
push
rcl
and
clc
das
push
inc
adc
mov
push
push
xor
nop
xchg
xchg
xor
popf
fst
push
push
aaa
push
mov
arpl
fcom
test
xchg
push
push
dec
and
sub
add
mov
jg
add
mov
pop
jo
mov
xor
clc
out
fbstp
fstp
pop
jl
test
add
inc
or
mov
imul
outs
inc
int3
add
loopne
dec
cld
add
add
aad
movs
call
int3
call
or
push
lods
fisub
fsubr
(bad)
jp
je
jge
jnp
jle
dec
or
imul
jae
sbb
mov
mov
jle
sbb
call
ja
icebp
inc
xor
icebp
(bad)
jnp
or
fld
sbb
push
jmp
jmp
call
pop
jecxz
hlt
or
mov
mov
(bad)
hlt
push
push
call
xchg
push
and
mov
add
add
add
dec
inc
cld
mov
push
mov
popw
call
dec
ret
sub
cmps
or
add
nop
(bad)
pop
arpl
test
add
sub
mov
fiadd
mov
add
int3
call
repnz
(bad)
call
inc
nop
dec
pop
cmp
(bad)
cmp
mov
(bad)
jg
icebp
lea
call
push
lea
sub
mov
push
call
cmp
cld
jmp
xlat
je
fwait
cmc
out
ret
out
sub
inc
or
jne
call
call
inc
cwde
mov
call
jmp
aaa
add
push
push
call
pop
mov
fimul
repnz
xchg
inc
ror
sbb
ret
std
or
dec
xor
or
pop
neg
push
add
es
jmp
ret
push
or
mov
call
xor
call
cpuid
call
xor
mov
call
cmp
std
call
mov
rcl
add
sbb
(bad)
add
call
mov
jno
add
daa
lods
ret
xchg
call
xor
sub
div
(bad)
call
mov
jl
into
inc
mov
sbb
mov
movs
sti
ins
retf
sub
mov
adc
pushf
shr
add
and
sub
fbld
or
jle
ffree
pop
jbe
add
test
cmp
adc
enter
ror
xor
test
xchg
ror
adc
sub
ror
cld
sbb
jmp
cmp
mov
sub
ds
rol
push
mov
sbb
std
pop
adc
aaa
hlt
(bad)
jmp
pop
je
push
cmps
jno
fwait
clc
fwait
jle
xor
mov
loopne
lds
cli
cmps
aas
out
loop
lock
fucomp
cmp
sbb
call
out
into
and
mov
aaa
mov
or
inc
int3
push
retf
mov
pop
lods
pop
or
jb
(bad)
aas
int3
call
push
add
add
ins
mov
mov
add
lea
and
lea
js
das
adc
xor
or
mov
sub
jle
int3
jge
out
dec
sbb
or
(bad)
mov
je
fldz
add
hlt
xchg
bound
mov
es
jl
add
add
adc
dec
push
sahf
push
popa
pop
int3
call
mov
clc
jmp
mov
mov
int3
std
mov
xchg
call
mov
call
mov
push
jmp
imul
test
pop
retf
mov
loop
mov
in
add
sub
fs
or
jmp
adc
sub
adc
adc
mov
jmp
pushf
cmp
call
jp
jae
dec
jo
jb
mov
xor
lock
xor
lea
setne
cmp
jne
arpl
jecxz
loopne
aaa
cld
and
jmp
mov
test
mov
je
test
(bad)
pop
out
loope
cwde
int3
call
shr
stos
mov
stc
dec
cmp
xchg
enter
jns
push
arpl
outs
lods
xchg
loopne
push
repnz
push
je
add
add
push
je
je
mov
jae
dec
xchg
std
or
add
inc
adc
sub
cld
or
pop
dec
test
pop
xchg
fild
and
dec
xor
movs
fcom
aaa
mov
push
movs
daa
add
sbb
fwait
and
pop
jmp
inc
aam
not
fsubr
xchg
mov
adc
sbb
fs
xchg
lock
jmp
dec
outs
idiv
and
jle
jne
push
inc
adc
ins
loop
(bad)
icebp
popa
je
sub
out
jmp
mov
lea
mov
adc
sar
inc
xrelease
mov
pop
or
enter
mov
pop
call
dec
or
jmp
mov
dec
repz
clc
mov
pop
and
mov
push
aam
mov
daa
push
loop
lahf
add
dec
lock
inc
icebp
add
pop
add
out
push
and
jmp
test
pop
add
cwde
or
enter
mov
xchg
je
mov
unpcklps
cs
jne
ss
shl
mov
or
adc
adc
fstp
jmp
loopne
add
imul
nop
add
inc
pop
inc
ret
cmp
jecxz
xor
aaa
push
sbb
lock
mov
scas
out
repnz
adc
fstp
loopne
push
fstp
call
dec
jmp
leave
aas
jae
test
outs
sbb
test
jge
push
out
sbb
jmp
dec
fst
dec
xor
fistp
jno
ffree
jle
mov
test
je
sbb
inc
adc
push
sub
call
add
pusha
addr16
mov
fstp
jmp
adc
mov
ja
add
mov
cwde
jne
push
xchg
push
jno
dec
adc
or
jae
or
and
adc
sbb
push
and
push
pop
push
mov
sub
dec
add
push
daa
fdiv
sbb
jmp
inc
movzx
xor
mov
mov
push
mov
mov
push
sub
sub
adc
out
and
jmp
dec
jae
rol
ret
les
aam
fdivrp
or
out
movs
test
je
push
mov
sub
dec
push
test
jge
cli
mov
ror
xchg
pop
cmp
jl
mov
cmp
jle
pop
inc
stos
das
push
push
mov
lds
cmp
or
or
cli
mov
lea
mov
pop
push
mov
add
add
jle
mov
cmp
add
cmp
inc
fsubr
ss
out
and
add
add
cld
and
fwait
retf
push
test
jne
xchg
sti
pusha
push
jge
cmp
or
jmp
sub
mov
adc
pusha
inc
cmps
cmps
call
fwait
sbb
mov
adc
fidiv
call
icebp
loope
cli
test
mov
mov
fs
xlat
push
jle
call
push
call
push
mov
adc
dec
cmp
mov
(bad)
jle
sbb
ins
shl
inc
xlat
pop
ror
loope
stos
push
xlat
fcomp
ins
add
rcr
sub
addr16
cmp
xor
push
adc
push
cmp
xchg
sbb
dec
sbb
mov
fwait
int
shr
daa
rol
and
adc
mov
mov
call
xor
std
(bad)
sbb
adc
test
push
mov
mov
mov
xchg
or
sbb
(bad)
jg
push
add
call
cmp
je
cmp
jne
pop
leave
call
push
es
add
xor
inc
ja
jne
jl
les
cli
push
mov
lock
inc
sbb
push
add
mov
sbb
mov
call
push
(bad)
ror
aam
adc
movs
call
dec
or
in
cmp
jle
dec
ss
pop
out
add
cli
fnstsw
adc
inc
or
inc
or
fcomp
test
inc
clc
add
rcr
arpl
or
adc
fild
inc
test
add
es
mov
inc
or
and
adc
push
call
lea
iret
inc
mov
cmp
adc
inc
dec
je
call
clc
call
(bad)
push
add
pop
mov
mov
cmp
je
loop
ja
jmp
sbb
mov
call
add
xchg
arpl
add
adc
(bad)
sbb
sub
mov
add
je
dec
cmp
(bad)
jne
push
call
pop
je
mov
call
nop
out
(bad)
out
xchg
cmp
mov
je
push
push
jmp
and
sbb
dec
inc
je
push
push
sbb
xor
jl
mov
mov
mov
pop
nop
cli
pop
or
pop
dec
fisttp
call
dec
mov
adc
push
push
jl
or
add
mov
inc
add
jne
ja
push
mov
push
call
mov
or
lahf
shl
push
cmc
adc
or
pop
add
mov
cmp
or
inc
pop
sbb
dec
movs
or
adc
or
mov
push
adc
arpl
or
sahf
gs
push
fwait
sbb
push
test
inc
or
repnz
inc
xchg
or
out
mov
test
out
xor
add
pop
add
fldz
pop
mov
inc
jp
rcr
or
(bad)
mov
sahf
dec
(bad)
sar
mov
sahf
jge
mov
jg
fwait
xor
xor
inc
mov
or
fcom
mov
or
je
dec
jne
mov
push
jmp
adc
inc
xor
pop
mov
cmp
push
adc
(bad)
imul
lea
mov
mov
mov
loop
inc
jp
push
fimul
mov
push
dec
in
call
cmp
jne
enter
and
call
pop
push
loope
xchg
jmp
add
add
jmp
and
in
cmp
or
add
add
call
out
pop
add
mov
stos
mov
sbb
xchg
lea
les
mov
test
(bad)
or
lea
repnz
(bad)
mov
pop
dec
div
xchg
inc
and
ds
out
push
cmp
sub
push
les
clc
push
stc
icebp
(bad)
int3
adc
pop
adc
std
sahf
jae
call
push
or
xor
mov
add
adc
mov
jno
call
pop
inc
sub
mov
xchg
xor
out
std
ret
icebp
inc
sbb
push
cli
xchg
cmp
xor
stos
inc
mov
mov
xchg
pusha
dec
mov
mov
sbb
or
and
sahf
ins
add
call
call
xor
arpl
push
xchg
add
stos
inc
shr
clc
dec
adc
setge
pushf
mov
fcomp
scas
clc
add
mov
cmp
mov
adc
or
push
adc
mov
sbb
ret
adc
or
jnp
cld
or
adc
or
adc
adc
add
mov
sub
add
aas
cld
(bad)
pushf
inc
jmp
jmp
jl
or
and
push
push
mov
call
pop
je
dec
mov
push
cmp
and
iret
call
cmp
sbb
scas
je
cmp
pop
sbb
clc
sbb
rol
mov
ficom
cmp
sar
mov
push
call
inc
(bad)
dec
adc
stc
lea
loop
xor
mov
clc
push
adc
push
jnp
adc
test
cld
inc
jne
cmp
je
mov
push
mov
(bad)
jle
or
pop
xchg
ror
inc
or
out
mov
and
gs
add
push
push
rcl
sub
push
add
adc
push
fild
xor
pop
leave
or
icebp
inc
aam
std
cmp
je
mov
push
sub
jle
out
sub
or
inc
push
push
dec
inc
aas
push
pop
jg
je
test
jg
or
or
mov
jg
sub
adc
rcr
(bad)
popa
sub
and
xor
and
xchg
pop
mov
xlat
hlt
fdivr
adc
jne
and
jmp
daa
lea
mov
and
mov
cmp
idiv
mov
or
add
xchg
je
jmp
xor
lock
or
cmp
jne
mov
jmp
pop
cmp
cmp
xor
jo
fwait
add
pusha
clc
push
mov
and
in
jg
cld
stc
je
and
or
mov
push
inc
add
jae
and
daa
mov
lds
call
inc
fdivr
scas
sahf
xchg
mov
je
mov
mov
sub
fcom
and
add
std
add
inc
or
adc
inc
sbb
inc
sbb
inc
and
sub
in
adc
inc
adc
and
mov
cdq
lea
push
lea
push
icebp
aad
add
cld
mov
jmp
sub
ficom
add
or
xchg
(bad)
jg
dec
hlt
lea
mov
lea
push
push
adc
cmpxchg
cdq
outs
cmp
outs
mov
xor
jmp
inc
cmp
sbb
mul
lea
push
fwait
push
fucomi
or
iret
pusha
and
dec
adc
mov
bound
mov
inc
xchg
jle
and
add
xchg
ret
cmp
leave
push
shl
mov
cld
mov
gs
pusha
cdq
enter
fsub
ss
(bad)
fisub
inc
xor
mov
jg
xchg
mov
xlat
jmp
cmp
jne
sub
mov
mov
mov
fisttp
clc
iret
mov
neg
in
mov
ret
mov
ret
pop
inc
cdq
ficomp
mov
xlat
sub
inc
and
xlat
test
inc
cmp
push
mov
call
sub
inc
and
inc
xor
xor
or
jle
call
lea
cmp
adc
push
call
push
loope
sub
int3
or
add
dec
cwde
not
dec
jecxz
leave
test
ret
lock
mov
mov
mov
or
inc
push
mov
lea
mov
lea
pop
mov
cmp
(bad)
pop
sti
mov
jl
lea
mov
add
add
and
call
dec
cmp
jne
mov
imul
push
push
push
call
add
aam
cs
jns
add
jmp
sbb
jecxz
jge
add
mov
add
leave
sub
push
cmp
jl
add
xor
sub
and
out
cwde
jmp
cmp
vmread
aas
push
pop
iret
call
push
lea
inc
ja
leave
or
jb
call
adc
mov
mov
sub
mov
ud0
(bad)
scas
dec
or
push
push
add
dec
sar
add
cmp
jle
lea
mov
sub
add
es
sbb
add
(bad)
(bad)
aas
cmp
jne
test
jle
mov
mov
inc
inc
add
mov
mov
(bad)
neg
(bad)
call
cmp
dec
or
call
mov
jne
jb
loope
out
lock
or
(bad)
xor
push
mov
or
push
pusha
inc
push
push
mov
scas
pop
adc
call
or
or
lea
push
push
(bad)
out
loopne
call
(bad)
pop
ret
push
push
mov
push
push
push
mov
call
(bad)
fld1
sbb
(bad)
jmp
mov
pop
lea
mov
add
sar
sbb
inc
sbb
movs
call
pop
pop
add
cdq
jo
test
sub
xchg
add
push
jae
pop
adc
mov
shr
mov
and
jb
mov
or
push
lea
push
mov
call
and
xor
lea
rep
lds
push
les
push
add
std
call
adc
xor
cmp
fcomp
mov
mov
jg
sbb
cmps
mov
cmp
je
push
sbb
mov
add
lea
push
xlat
aad
add
sbb
and
test
ins
push
sbb
push
mov
mov
js
pushf
xor
(bad)
out
jo
mov
mov
call
jge
mov
add
add
call
sbb
adc
cmp
xor
sub
xor
div
push
adc
push
pop
push
jo
pop
inc
push
and
mov
pop
xchg
inc
dec
add
(bad)
inc
inc
dec
inc
add
push
add
pop
cdq
idiv
mov
mov
loop
(bad)
(bad)
adc
cld
cdq
sar
jle
je
lahf
adc
add
cmp
and
rcr
sbb
push
and
cmp
(bad)
jle
(bad)
jl
add
out
pop
mov
call
add
push
popa
sub
idiv
outs
push
or
cmp
call
or
(bad)
push
fstp
pop
sub
mov
jne
lea
add
push
call
les
jecxz
push
push
xchg
les
in
das
push
push
push
in
mov
mov
ds
dec
fs
cwde
dec
adc
inc
fimul
inc
and
inc
sbb
(bad)
int
sub
cmp
jle
mov
inc
lea
pop
push
mov
clc
call
aaa
push
cmp
jne
push
(bad)
mov
push
push
outs
and
pop
cld
je
lea
jmp
cs
add
cli
push
xchg
pop
mov
jmp
dec
mov
hlt
call
sti
dec
hlt
mov
call
mov
or
test
jnp
inc
call
adc
mov
push
push
call
unpcklps
retf
mov
call
cld
inc
nop
pop
and
cmp
je
mov
cmp
sub
ud0
inc
or
mov
test
stc
inc
in
iret
call
out
(bad)
mov
add
inc
or
call
je
add
test
dec
test
sub
jmp
dec
bound
lods
mov
and
jbe
call
(bad)
enter
push
xor
jge
mov
je
add
xor
push
hlt
or
cmp
pop
adc
(bad)
jmp
in
aad
mov
cmp
je
mov
lea
push
push
ja
push
call
mov
sbb
cli
cmp
pop
je
icebp
push
push
lea
fisubr
int
dec
mov
mov
mov
inc
add
leave
mov
mov
push
out
scas
mov
pop
add
pop
push
inc
push
push
push
call
mov
inc
mov
jg
ja
sbb
sbb
mov
test
je
mov
adc
dec
inc
jmp
push
or
daa
or
cwde
ret
add
adc
xchg
into
std
adc
push
lea
mov
arpl
inc
xchg
jge
test
push
test
pop
and
je
push
push
push
call
inc
xchg
fadd
add
xchg
je
sar
push
(bad)
jne
push
push
and
fwait
test
sbb
mov
mov
and
push
rcr
mov
pop
iret
push
movs
adc
out
leave
fidiv
dec
scas
sbb
pop
push
pop
cmp
out
fnsave
cmp
je
repz
adc
aaa
cmp
jbe
push
sbb
jp
(bad)
int
mov
inc
hlt
(bad)
(bad)
(bad)
jg
test
push
lea
call
mov
cmp
mov
je
mov
call
data16
push
popf
lea
push
inc
push
push
test
pop
lea
cli
out
clc
push
or
push
or
adc
sti
popa
in
push
push
adc
inc
movs
push
dec
jle
test
retf
call
cmp
call
xchg
mov
jmp
shr
ja
lea
push
push
shl
mov
test
adc
jae
add
mov
inc
add
jne
addr16
mov
mov
or
sbb
movs
xchg
adc
sbb
mov
movs
mov
movs
movs
or
add
inc
add
cmc
test
add
cwde
mov
adc
jmp
xor
inc
add
aaa
lock
lea
push
and
mov
aam
call
mov
push
sbb
ds
and
je
jmp
push
xor
jmp
push
push
hlt
lock
sub
cmp
repnz
call
hlt
jne
rol
(bad)
into
je
mov
xchg
test
call
loop
aaa
je
and
test
add
add
jae
je
(bad)
mov
cmp
call
and
sbb
fwait
prefetch
xor
xchg
pop
push
mov
inc
call
sar
arpl
push
add
push
call
out
loope
mov
mov
and
cld
std
sbb
jne
je
xchg
or
and
xor
or
shl
xor
push
or
je
in
jmp
xor
sti
dec
out
sbb
(bad)
je
pop
adc
inc
sbb
push
cmp
test
out
or
add
push
sbb
mov
jne
fsubr
mov
xor
mov
(bad)
dec
pusha
jo
lock
mov
call
cwde
pop
pop
push
lods
or
je
and
jnp
inc
sbb
mov
or
jno
inc
arpl
xor
(bad)
push
fwait
and
inc
cmp
inc
nop
add
je
mov
sbb
enter
cmp
paddb
icebp
call
xor
in
outs
and
or
mov
cmp
mov
xor
outs
(bad)
jmp
(bad)
jg
(bad)
jne
cmp
push
mov
mov
je
push
pop
mov
cmps
into
(bad)
cmc
mov
rep
mov
add
adc
arpl
or
(bad)
mov
je
mov
mov
test
pop
je
fs
adc
push
call
or
and
mov
jne
add
cmc
imul
bound
pop
push
cmp
cmpxchg
cli
and
je
mov
cmp
inc
cmp
jbe
jmp
cld
push
cmp
inc
sub
cmc
xchg
sahf
xor
and
push
or
loopne
mov
lea
push
push
inc
in
push
icebp
dec
das
fild
mov
push
call
mov
push
push
test
cmp
scas
or
pop
fwait
cli
and
push
jbe
cmp
je
xor
xchg
mov
sbb
add
lods
enter
or
dec
scas
(bad)
icebp
(bad)
loop
retf
xor
xor
jmp
lea
mov
test
imul
and
jae
(bad)
dec
and
shl
cmp
jne
push
call
sub
stos
dec
jecxz
inc
sub
inc
sub
ret
je
jle
push
sbb
out
adc
sub
fs
xor
pop
xor
cmp
sar
xor
ds
add
mov
in
mov
mov
push
dec
pop
add
push
fnstenv
jo
xor
push
test
loope
xchg
push
iret
and
lds
xchg
je
das
push
mov
mov
imul
mov
fbstp
pop
test
adc
mov
bound
and
push
push
cmp
push
push
call
inc
push
cmp
sub
mov
test
mov
jl
cld
fild
fdivr
mov
enter
inc
or
mov
add
cmp
(bad)
(bad)
call
mov
mov
cmp
jne
mov
cmp
jne
icebp
out
add
cmp
jne
lea
mov
jl
test
push
pop
jne
test
push
call
out
sbb
or
ss
mul
mov
push
or
je
mov
cmp
dec
inc
mov
test
mov
mov
mov
je
fcomip
mov
dec
cmp
jle
imul
jmp
movs
jmp
push
call
pop
loop
or
stc
jg
sub
or
jge
mov
test
rol
jo
test
mov
jne
push
ja
jg
inc
xor
dec
mov
jne
sar
mov
shl
or
adc
lea
dec
jo
add
daa
push
adc
inc
cmp
fist
pusha
jle
push
pop
lea
and
push
push
adc
ja
mov
lea
rep
dec
mov
das
sbb
xor
push
push
inc
pop
jmp
dec
jo
ret
mov
xor
mov
sbb
jmp
xor
jo
(bad)
xor
ss
imul
push
lods
jg
cmc
mov
inc
cmp
packssdw
ffreep
push
(bad)
cmp
jo
je
inc
ss
or
mov
adc
outs
add
or
dec
add
ja
aaa
icebp
mov
cmp
mov
out
mov
dec
loopne
ja
dec
je
inc
dec
sti
mov
push
hlt
mov
pop
fwait
div
or
jge
into
loope
outs
fdiv
mov
mov
mov
jl
cmp
mov
xchg
dec
mov
imul
lea
mov
lea
cld
jnp
or
inc
or
push
dec
pusha
mov
mov
sub
(bad)
out
pop
inc
cmp
mov
mov
jl
push
ja
je
adc
je
icebp
outs
into
push
sbb
push
ror
(bad)
pop
mov
jmp
nop
clc
fisttp
add
test
push
mov
cmp
leave
add
adc
ja
add
inc
add
mov
mov
add
inc
add
push
lock
fstp
and
(bad)
clc
fstp
fild
fst
fidiv
fld
jp
rcr
add
call
and
or
jmp
sbb
xchg
or
jne
call
mov
cdq
lea
hlt
idiv
test
fisttp
adc
stc
sub
add
mov
sbb
sbb
cdq
icebp
mov
mov
fdivr
mov
add
clc
fist
cmp
jle
mov
jmp
mov
fnstsw
neg
idiv
lea
push
add
pop
movs
dec
or
rol
movzx
mov
por
sbb
fmul
cmc
popf
or
leave
call
inc
jmp
push
(bad)
ins
cmp
or
add
mov
push
mov
enter
dec
aaa
inc
sahf
ror
pop
retf
inc
cmp
push
inc
lahf
(bad)
out
and
mov
dec
mov
pop
pop
cld
out
jmp
or
or
call
sbb
test
cmps
jg
and
lea
je
aam
mov
outs
sar
push
and
xor
sub
xchg
jb
jle
lea
fadd
mov
lea
enter
jle
dec
loopne
in
call
adc
jle
xchg
mov
aam
mov
call
sbb
jge
int3
jno
inc
lea
lea
out
push
push
jge
jl
dec
clc
fild
std
lea
push
push
adc
call
add
mov
sub
push
xor
out
outs
mov
clc
mov
call
stos
mov
in
inc
lock
mov
pop
xor
fimul
cmp
adc
inc
outs
js
sub
cmps
sbb
clc
and
push
call
adc
cmp
inc
push
(bad)
gs
jns
mov
jne
inc
jno
or
mov
push
call
adc
ret
jmp
leave
aam
sub
adc
xor
pop
cld
push
fidiv
call
pop
mov
jne
mov
fistp
xor
add
out
fdivr
push
(bad)
int3
iret
mov
call
or
push
jns
xor
and
mov
into
or
add
add
(bad)
call
cmps
xlat
call
or
fwait
and
lea
cmc
jb
paddusb
fnstcw
pusha
dec
ja
mov
je
call
cmp
jo
adc
jae
call
aaa
xchg
jmp
push
push
call
in
mov
fcomip
push
pop
sti
inc
in
mov
jae
mov
push
outs
mov
push
mov
sbb
and
adc
sbb
and
xchg
and
push
sbb
cmp
jnp
xor
cmp
je
mov
call
ja
push
call
jae
arpl
dec
pop
ja
push
lea
jo
push
popa
mov
add
push
aaa
jl
add
ror
xor
out
popf
mov
icebp
fdiv
addr16
jge
push
dec
mov
lea
jl
cs
inc
out
xchg
ja
aas
mov
rcl
sbb
push
call
mov
jmp
loopne
push
lea
push
push
push
push
push
jnp
or
push
jo
les
add
cmp
mov
es
call
sbb
jno
mov
push
call
shr
mov
rol
mov
cwde
loope
and
sbb
push
fcomip
mov
cld
push
pop
test
call
add
lea
push
sbb
push
mov
fild
mov
inc
call
cli
(bad)
cli
dec
mov
mov
and
mov
mov
rcr
push
popa
cld
mov
(bad)
fild
mov
imul
cmp
cmp
int3
aam
int3
jno
push
call
out
in
push
imul
xchg
dec
packsswb
mov
push
js
sub
mov
add
mov
mov
push
dec
or
add
hlt
test
je
inc
add
test
sub
dec
or
into
mov
push
push
mov
push
call
jge
fsubp
dec
and
icebp
out
test
call
call
repnz
movs
jmp
or
pop
cmp
call
ficom
mov
xor
push
call
or
outs
mov
or
fwait
cli
or
scas
inc
add
mov
lea
not
call
pop
inc
cmp
inc
dec
cmp
fiadd
push
jbe
mov
mov
mov
mov
stc
(bad)
and
dec
mov
stc
mov
test
lods
sub
call
test
jg
add
outs
out
sbb
cmps
fsub
cmp
in
push
xor
pop
ret
cmp
or
inc
pop
ret
push
push
call
inc
jne
call
add
shr
out
neg
out
mov
sub
(bad)
push
inc
mov
push
mov
pushf
mov
pushf
mov
enter
mov
int3
enter
int3
mov
enter
fdivr
sbb
frstor
pop
cmp
sbb
sbb
lea
sbb
sbb
sbb
imul
fistp
sbb
sbb
sbb
sbb
call
cmp
xchg
pusha
add
xchg
rcr
outs
add
add
dec
add
dec
or
adc
sub
mov
ins
push
sub
fist
lea
mov
ja
inc
cmp
adc
xlat
cld
call
mov
pop
cmp
jne
cmp
jmp
not
adc
(bad)
fnsave
pop
clc
je
mov
lea
shl
clc
jle
dec
stc
pop
push
inc
push
icebp
idiv
mov
cmp
sbb
inc
or
add
dec
cld
push
jb
xchg
xor
jne
loopne
and
mov
or
and
imul
retf
data16
scas
mov
adc
or
pop
mov
ins
inc
je
push
add
xor
mov
mov
pop
and
mov
je
or
test
jbe
push
dec
inc
cld
add
push
and
rcr
ja
xor
jne
call
call
fild
shr
mov
pop
in
sub
push
test
sub
mov
cmp
add
inc
clc
shr
jne
dec
fidiv
push
clc
push
push
push
or
pop
fldcw
jle
mov
cmp
retf
pop
add
jg
push
push
lea
push
push
call
cmp
les
aas
inc
or
sbb
ret
push
fcom
jmp
jg
mov
xor
push
or
sar
pop
jge
(bad)
test
add
shr
div
mov
push
push
push
mov
add
mov
cwde
push
push
je
fbstp
std
push
mov
cmp
cmp
(bad)
push
adc
or
clc
jae
push
pop
jmp
cmp
(bad)
(bad)
cmp
jbe
xor
inc
jmp
push
push
push
fsub
push
call
(bad)
fstp
sete
inc
mov
or
inc
and
movs
mov
push
mov
mov
clc
iret
add
add
add
mov
loopne
out
sahf
stos
inc
or
push
xchg
ret
jmp
loopne
jb
cmp
add
lahf
mov
neg
push
push
push
mov
clc
push
mov
sbb
and
add
dec
or
sub
sbb
add
ja
mov
adc
outs
mov
and
sub
mov
scas
ret
jmp
or
adc
jge
je
push
inc
and
and
sar
jne
push
push
out
ret
stc
(bad)
push
push
adc
and
prefetch
(bad)
stos
shl
xchg
into
call
scas
sub
pop
pop
pop
ret
xor
xchg
push
jbe
jmp
loopne
mov
nop
inc
pop
pop
je
lock
mov
add
or
inc
pop
mov
cmp
xor
sbb
and
retf
enter
in
push
in
out
jno
clc
cmp
je
push
gs
push
and
std
pop
jne
mov
ret
popf
or
loop
mov
add
mov
sar
and
mov
ror
mov
(bad)
cli
push
jne
mov
and
cmp
adc
lods
mov
test
push
push
or
mov
(bad)
(bad)
inc
mov
and
neg
movzx
sbb
and
add
mov
movzx
imul
cdq
idiv
pop
shl
je
or
clc
mov
push
mov
xor
push
push
push
sub
mov
or
jno
mov
push
ins
inc
cdq
out
(bad)
cmp
push
mov
cld
jb
xor
xor
idiv
xor
adc
cmp
(bad)
aaa
mov
es
push
call
leave
cmp
stos
xor
cli
cld
push
aam
jge
mov
jne
xor
pop
je
fsub
sbb
pop
cmp
ja
(bad)
jle
fst
push
lea
cmp
cmps
jae
sbb
push
std
arpl
jge
mov
cld
push
call
or
rol
inc
cmp
jl
fstp
inc
mov
neg
or
jne
call
fwait
add
jne
pop
loopne
call
pop
mov
mov
call
push
push
out
in
push
push
test
push
cmp
mul
add
mov
retf
iret
sub
inc
or
dec
and
neg
clc
dec
lods
(bad)
(bad)
cmp
jne
add
int3
movs
mov
aas
mov
test
lods
repnz
jbe
call
add
jnp
out
pop
and
pop
pop
dec
mov
adc
pop
push
mov
mov
or
push
inc
add
jns
add
inc
or
and
dec
cmc
mov
or
and
jno
cmp
dec
je
sbb
(bad)
push
mov
call
inc
sub
mov
push
push
mov
push
mov
push
xor
(bad)
in
add
sbb
jmp
ja
push
call
jne
sub
rcl
cli
or
dec
ret
cmp
mov
js
push
into
call
mov
mov
push
call
mov
daa
loop
push
sub
ret
sub
mov
and
nop
add
pop
into
std
sub
xchg
arpl
add
jge
cmp
push
dec
mov
push
add
call
ss
mov
xor
inc
aad
pop
push
mov
pop
adc
outs
cmp
pop
add
les
cmp
jl
cmp
mov
jbe
push
inc
call
jl
inc
dec
idiv
push
stc
jle
mov
mov
inc
add
cmp
jl
dec
(bad)
inc
aaa
inc
push
push
shl
lea
push
push
call
sbb
mov
push
sbb
pop
add
in
mov
test
add
fdivr
lahf
add
jmp
mov
aad
mov
cmp
jne
push
push
lea
adc
clc
fadd
mov
push
mov
cmp
cmp
pop
pop
jne
push
data16
jle
jns
mov
pop
xor
mov
mov
dec
push
push
push
push
mov
mov
pop
xchg
lea
pop
mov
and
lock
call
add
jg
std
ret
and
jne
sbb
and
pop
pop
pop
pop
ret
push
call
cwde
sub
pop
dec
repnz
mov
dec
dec
adc
jne
call
scas
pop
lock
xchg
jne
call
dec
jmp
or
scas
jbe
push
cmps
mov
sbb
(bad)
jmp
cld
jle
lea
jne
lea
push
mov
cmp
faddp
add
pusha
cli
fisubr
add
push
push
in
push
push
data16
lds
cmp
add
(bad)
add
aad
or
adc
cmp
retw
xor
pop
cld
es
fcom
add
pop
or
xor
inc
pop
lea
pop
enter
mov
mov
(bad)
push
call
mov
jl
aas
clc
dec
cld
pop
jne
nop
push
push
out
out
or
inc
and
dec
push
fisttp
cld
aam
call
cmp
mov
jg
dec
or
push
mov
mov
jne
and
jno
mov
push
inc
popa
sti
adc
pop
daa
pushf
push
add
add
sete
mov
mov
or
cwde
jecxz
inc
sbb
push
adc
pop
movs
inc
add
mov
lea
xor
push
mov
sub
arpl
or
and
jle
inc
jno
inc
in
sbb
adc
sub
lock
mov
adc
call
dec
jne
cmc
mov
jmp
push
ja
cdq
cli
je
call
push
ins
call
sub
loopne
cli
sbb
fsubr
or
gs
and
out
xchg
push
out
sbb
in
fcom
sbb
cs
xor
pop
and
daa
sar
mov
pop
ret
push
xlat
push
mov
call
ror
pop
pop
cld
call
jmp
ret
or
add
clc
push
or
push
and
push
xor
int
push
mov
sbb
add
(bad)
lock
retf
loope
pop
icebp
call
xlat
cmps
dec
inc
shr
add
call
call
push
mov
sbb
int3
sub
push
(bad)
dec
icebp
or
addr16
mov
jmp
inc
and
xor
add
push
push
push
aas
pusha
pusha
inc
ja
push
(bad)
adc
or
pop
dec
jne
icebp
iret
lock
cmp
jne
test
je
push
hlt
stos
jb
or
and
cld
cmp
ja
pop
fstp
call
add
cli
call
inc
ret
mov
xor
push
pop
mov
dec
add
or
mov
dec
or
push
and
push
sub
xor
cdq
test
adc
outs
pusha
ret
shl
push
call
inc
icebp
out
ret
jno
jle
push
mov
js
push
xor
mov
imul
add
mov
mov
rol
fwait
rcr
sar
cmp
jl
inc
sub
fiadd
xchg
xchg
jge
pop
mov
out
and
call
stos
clc
idiv
mov
pop
dec
mov
js
imul
mov
call
adc
or
adc
scas
dec
or
add
cld
inc
mov
mov
jne
add
inc
jne
(bad)
std
(bad)
cmp
jne
mov
mov
mov
cmp
jle
mov
(bad)
jg
pop
cdq
inc
add
inc
dec
jne
dec
dec
jne
jmp
jle
aaa
jne
inc
fisttp
call
inc
add
sti
fucomip
xor
rcr
mov
mov
mov
inc
inc
add
mov
inc
dec
jne
inc
dec
jne
mov
neg
inc
cmp
jl
jns
iret
call
cmc
pop
jmp
cmp
jne
test
add
push
or
cmp
je
or
add
shl
mov
and
aaa
push
pop
or
mov
mov
inc
cmp
cmp
jl
jno
aas
sti
es
ds
push
call
inc
or
(bad)
jg
rol
or
push
push
push
call
cs
les
sbb
sub
push
ror
inc
push
or
out
loopne
mov
mov
gs
jb
mov
(bad)
fcomip
rcr
mov
push
lea
mov
mov
shr
cmp
ja
mov
cs
and
cmp
jne
fnsave
jne
cmc
xlat
adc
cmp
jne
rcl
dec
inc
(bad)
movzx
inc
inc
jg
sar
sar
mov
and
inc
mov
inc
and
(bad)
jg
add
add
or
jmp
mov
inc
shr
or
clc
push
adc
les
pop
inc
or
or
xor
pop
pop
and
jo
sub
add
ret
cmp
mov
adc
sar
sub
cmp
jl
cmp
xchg
inc
push
or
or
pop
and
add
dec
and
dec
sub
mov
ret
sub
pop
push
call
mov
scas
or
adc
pop
push
call
and
pop
ins
add
sub
or
inc
int3
sub
and
or
ret
ins
xor
adc
jg
cmp
push
cmp
jle
push
call
sub
mov
jle
push
call
inc
adc
cmp
lahf
inc
icebp
sub
(bad)
jle
push
dec
sbb
cmp
adc
pop
(bad)
xchg
lock
setne
in
pusha
push
jp
lea
push
mov
mov
call
sbb
call
test
mov
sub
inc
call
mov
mov
shr
and
scas
(bad)
inc
mov
and
test
setne
mov
mov
inc
fdiv
test
mov
(bad)
jmp
mov
mov
mov
mov
mov
mov
test
cdq
pop
push
je
sub
xchg
push
push
call
sub
adc
stos
outs
test
loope
dec
xchg
leave
test
je
and
dec
adc
test
std
dec
mov
mov
je
fwait
cmp
mov
mov
jne
cmp
jbe
cmps
mov
fnstenv
jne
mov
loopne
push
cld
mov
not
mov
loopne
inc
mov
xchg
inc
lods
mov
mov
mov
(bad)
not
cli
mov
mov
cmp
out
dec
movs
add
int3
pop
pop
mov
js
je
push
shr
dec
out
jg
ds
push
mov
call
inc
pop
cs
add
fnstsw
inc
mov
inc
in
xor
cmp
mov
lock
jmp
inc
sub
mov
cmp
inc
cmp
scas
inc
ret
mov
rol
sbb
jge
mov
mov
call
and
inc
mov
cdq
sar
jne
mov
or
and
fld
(bad)
outs
pusha
test
mov
jne
sub
sub
test
jle
mov
faddp
mov
mov
push
call
aad
add
(bad)
fist
pop
or
cmp
sub
loop
je
jg
inc
movs
mov
je
mov
retf
inc
adc
into
lock
push
call
inc
in
add
or
dec
inc
into
ins
stos
jle
lock
xor
pop
push
jge
call
mov
clc
add
inc
jne
call
mov
sub
add
add
mov
xor
cs
call
inc
clc
je
scas
fsubr
adc
cmp
push
push
push
pop
mov
call
pop
push
leave
mov
mov
test
jle
cmp
jg
mov
push
add
dec
push
pop
xchg
jns
mov
mov
mov
call
sar
jge
adc
mov
sbb
into
call
add
icebp
dec
add
inc
add
push
push
xlat
inc
inc
movs
mov
ret
inc
je
adc
add
sbb
cwde
jmp
inc
sbb
pop
sbb
sbb
inc
call
xor
cmp
je
cmp
jle
push
push
jb
jle
cmc
fild
dec
xor
add
mov
test
je
ficom
mov
fwait
cmp
(bad)
aas
fcomp
pop
and
inc
cmp
jl
inc
cmp
jl
pop
pop
dec
push
mov
loope
mov
inc
push
es
add
out
sub
mov
mov
test
sahf
fisub
pop
lock
(bad)
je
ficom
popa
int3
test
inc
and
add
bound
ja
call
mov
adc
dec
sbb
push
mov
and
mov
shr
mov
mov
sbb
dec
cmp
jbe
push
mov
jae
xchg
rcl
inc
jmp
mov
push
push
sub
dec
mov
fild
leave
jbe
mov
cmc
ret
sbb
mov
mov
cmp
(bad)
sub
adc
cmp
rcr
or
pop
idiv
int3
push
call
test
mov
add
and
lock
(bad)
jg
jg
add
dec
out
loopne
fild
lock
push
add
mov
push
mov
mov
lea
cmp
ja
jle
aas
add
cmp
mov
inc
jne
jne
mov
inc
dec
test
mov
push
je
out
loop
outs
mov
add
mov
jno
add
jl
(bad)
mov
mov
dec
test
ss
push
push
add
std
(bad)
jne
test
xlat
ja
pop
push
lea
add
or
loope
inc
repnz
in
dec
aaa
addr16
fucomp
inc
cmp
jne
cmp
jne
inc
jo
inc
(bad)
sti
aaa
lock
mov
cmp
cmp
inc
or
aaa
cwde
mov
jne
push
push
push
call
jo
pop
cs
add
xchg
sbb
mov
lea
or
(bad)
inc
mov
cmp
jl
jo
je
add
mov
push
push
dec
out
inc
and
dec
inc
call
cli
or
in
cwde
xchg
data16
pop
mov
adc
mov
add
adc
or
pop
push
add
call
fucomi
add
sahf
or
jmp
cmc
(bad)
dec
or
cmp
call
sbb
inc
and
test
call
mov
shl
push
call
sbb
scas
dec
and
mov
outs
xlat
push
push
push
mov
call
adc
inc
xor
test
(bad)
fwait
stos
pop
cmp
mov
jle
and
jle
es
fild
mov
clc
jp
jmp
xor
pop
pop
adc
stos
aaa
daa
aas
(bad)
sbb
inc
sbb
cmp
jne
adc
add
and
inc
aas
cli
cmp
jne
and
mov
xor
mov
out
(bad)
jmp
push
push
mov
push
imul
mov
push
cld
imul
add
push
call
mul
lods
inc
cld
mov
add
inc
mov
jl
cld
cmp
rcr
mov
mov
push
shr
ss
call
adc
add
dec
or
dec
add
jne
idiv
dec
sbb
cmp
jne
cmp
jb
dec
stos
jbe
call
mov
jnp
pop
add
add
and
sub
sbb
js
sub
adc
mov
out
jge
clc
inc
xchg
test
sbb
cli
or
or
push
push
xchg
mov
cli
push
cld
(bad)
dec
cmp
push
mov
jae
retf
call
sbb
clc
(bad)
jg
xchg
outs
mov
mov
inc
add
test
mov
jne
inc
sbb
fisttp
sub
ja
adc
push
push
movups
jg
sbb
or
pop
sub
add
jmp
cmc
or
push
push
test
je
call
fwait
xor
ss
push
call
jl
xor
or
out
jmp
pop
adc
jb
sbb
mov
shr
cmp
mov
jmp
(bad)
inc
pop
cld
cmp
push
rol
dec
push
(bad)
mov
push
push
pop
jmp
dec
neg
fdivr
add
ret
xor
test
jmp
add
add
ror
cmp
lea
inc
mov
imul
mov
jmp
daa
push
rcr
sub
mov
jmp
or
in
jg
lods
cmp
mov
jb
jmp
add
adc
(bad)
mov
sysret
push
sbb
pop
add
dec
mov
add
mov
add
movzx
mov
adc
sbb
dec
add
enter
cli
(bad)
and
and
and
add
bnd
jmp
jmp
push
mov
cli
jg
cmp
(bad)
(bad)
fidivr
mov
push
push
add
push
push
mov
call
test
cld
push
add
popf
dec
or
call
xchg
jo
loopne
div
push
push
push
push
push
ret
mov
push
push
sahf
call
push
inc
mov
shl
sti
pop
jge
jecxz
jae
fs
or
mov
or
nop
(bad)
cmp
movs
out
or
hlt
out
adc
not
push
call
es
jmp
and
call
test
or
jbe
pushf
js
lods
mov
shl
iret
inc
sbb
mov
sbb
mov
mov
mov
mov
ret
mov
call
add
and
cmp
mov
jle
mov
cmps
xor
mov
inc
dec
mov
cmp
mov
je
(bad)
fild
lahf
pushf
sbb
or
out
dec
sar
sar
call
dec
or
inc
or
ss
call
setns
or
push
movzx
add
sub
jne
shl
sbb
fdiv
leave
mov
or
rol
lahf
(bad)
call
dec
mov
je
cmp
je
mov
movzx
push
call
mov
das
sbb
leave
in
jne
push
cmp
jno
mov
inc
call
add
mov
mov
sub
and
sbb
call
cli
fidiv
aas
add
imul
jmp
mov
cmp
je
mov
mov
lock
push
in
mov
sub
aas
fwait
stos
xor
icebp
and
lds
pop
fistp
loope
mov
sbb
jmp
pop
or
adc
push
test
jne
mov
push
jmp
mov
mov
(bad)
cmp
jb
je
cmp
ja
xor
test
jne
mov
push
adc
mov
jmp
push
or
mov
mov
inc
or
pop
fwait
dec
cmp
sti
inc
stc
mov
clc
lods
jmp
sub
(bad)
out
sar
clc
cmp
je
test
je
movzx
into
aad
add
jg
fsubr
ja
or
clc
xor
clc
out
add
or
mov
call
cmp
inc
push
inc
push
call
or
out
out
push
pop
es
pop
add
push
out
fwait
mov
push
call
inc
out
popf
sti
push
add
xchg
or
daa
and
sbb
out
sbb
and
push
and
add
add
push
lea
push
push
call
idiv
push
lea
push
add
push
call
or
je
inc
push
call
btc
test
call
sbb
les
add
pop
jmp
mov
mov
push
call
push
call
cmp
je
add
push
inc
or
jbe
and
add
mov
inc
(bad)
jg
call
mov
clc
ja
movs
std
mov
pop
mov
ret
addr16
adc
pop
stos
cmp
cmps
mov
ins
shl
push
call
xor
inc
jo
(bad)
or
cmps
sbb
loope
jmp
or
scas
add
sti
outs
or
xor
inc
push
push
adc
nop
fst
xor
inc
push
or
adc
or
int
int
sbb
and
inc
xor
push
shl
inc
imul
outs
inc
shl
je
sub
mov
aaa
popa
jne
push
sub
add
push
mov
call
cmp
je
sbb
jmp
mov
adc
in
mov
add
push
js
add
push
mov
test
pop
adc
pop
loop
push
sbb
or
jne
mov
pop
pop
pop
inc
sar
mov
stos
mov
stos
dec
add
xor
rcr
push
repnz
mov
(bad)
jmp
mov
mov
call
call
push
sub
push
push
mov
add
sbb
pop
and
mov
outs
dec
neg
or
lea
push
jno
(bad)
mov
imul
enter
les
cmp
je
mov
sub
push
push
call
push
(bad)
or
cmp
inc
lock
jns
push
push
push
sub
and
mov
xlat
pop
sbb
add
jmp
or
dec
or
sahf
cmp
adc
or
fcomp
and
ds
outs
inc
or
mov
add
mov
sbb
cld
mov
call
push
jle
sbb
sti
icebp
xor
push
stos
mov
mov
call
sbb
pop
dec
mov
ja
stos
sbb
inc
or
nop
rol
add
inc
and
or
mov
xchg
jmp
add
pop
adc
xchg
or
push
sbb
mov
call
pop
sti
cli
(bad)
out
out
inc
inc
mov
add
inc
cmp
pop
jg
inc
sub
je
sub
je
add
or
jmp
push
push
cld
pop
jmp
push
pop
pop
movzx
xor
mov
mov
mov
ret
add
movzx
push
pop
jle
out
jbe
add
and
movzx
or
rol
jl
jmp
push
push
push
or
aas
jbe
das
add
dec
dec
mov
jge
shr
(bad)
(bad)
cli
adc
sar
push
mov
mov
add
push
push
call
(bad)
(bad)
cmp
jmp
sar
mov
mov
dec
dec
fdivr
jne
pop
pop
or
pop
scas
sub
adc
dec
pop
sbb
inc
push
fdivr
(bad)
out
jmp
push
shr
shr
mov
mov
pop
add
xor
loop
adc
pop
hlt
jg
nop
popa
(bad)
les
mov
jmp
lea
loopne
xor
sbb
out
jecxz
or
lahf
(bad)
add
inc
push
fst
rol
or
aam
fst
inc
sbb
outs
xchg
jge
and
ds
sbb
adc
mov
(bad)
aaa
xor
loope
add
or
sub
test
inc
dec
mov
call
or
rol
pop
ja
les
arpl
outs
fst
push
add
ret
pop
adc
mov
sub
call
add
sub
cmp
clc
cmps
add
pop
push
in
cmp
pop
fidiv
jle
add
push
dec
mov
push
outs
cli
mov
inc
inc
shr
cmp
jbe
or
mov
mov
mov
cmps
inc
mov
mov
or
inc
inc
shl
(bad)
mov
mov
int3
pop
pop
dec
mov
jbe
call
lods
call
inc
add
xor
mov
fcom
je
xchg
pop
or
mov
add
idiv
fnstsw
or
push
or
push
add
xor
add
inc
push
add
inc
dec
or
scas
sbb
mov
add
mov
xor
inc
or
inc
sbb
sub
sbb
jmp
scas
cmp
and
jg
push
push
jo
dec
ja
push
call
je
jo
pop
mov
and
imul
icebp
sahf
mov
pushf
inc
push
aad
(bad)
jg
jbe
call
add
sub
mov
cmp
add
add
add
pop
cld
pop
xor
cmp
out
pop
push
sub
sub
inc
or
fstp
sahf
setnp
call
(bad)
ins
add
push
lock
inc
add
(bad)
push
mov
loop
sbb
aaa
push
aas
mov
je
loopne
cs
pusha
mov
jle
stos
int3
jnp
sbb
fstp
in
cmp
or
push
mov
xchg
xchg
fild
cli
stc
jmp
pop
movsx
imul
inc
cdq
mov
ret
idiv
inc
inc
cmp
mov
jb
outs
in
sub
scas
or
jb
jbe
loop
dec
or
push
les
xor
mov
pop
add
push
lea
mov
call
push
push
mov
or
and
xchg
pop
dec
jle
xor
dec
add
adc
jecxz
or
sub
mov
cmp
add
dec
or
mov
add
call
adc
xor
mov
xor
mov
mov
mov
cmc
arpl
(bad)
sbb
movzx
or
cmp
add
jg
sbb
xchg
jg
loopne
test
repz
test
mov
sbb
jbe
mov
fild
or
rcr
cmp
call
mov
mov
(bad)
call
ror
out
add
scas
lock
cmp
lea
fbld
mov
jae
mov
mov
inc
add
adc
int
add
icebp
cdq
clc
(bad)
jmp
out
inc
hlt
cwde
mov
mov
and
inc
cld
lea
mov
sub
nop
idiv
dec
push
clc
movzx
shl
add
movzx
movzx
or
pop
sti
das
add
cmp
mov
adc
dec
cld
and
add
or
mov
(bad)
jmp
enter
xlat
pop
cmp
dec
call
div
mov
add
cmp
jg
xor
jmp
std
sar
sub
test
jge
dec
jmp
mov
shr
cmp
sub
cmp
sub
(bad)
jle
aas
pusha
(bad)
mov
jle
jne
add
sbb
inc
cli
lea
xor
or
adc
add
test
add
push
call
loop
adc
or
and
mov
pop
ret
dec
mov
dec
cs
enter
cwde
jl
pop
clc
add
or
icebp
and
jmp
mov
xor
test
je
mov
mov
mov
push
jmp
(bad)
inc
add
fcmove
inc
mov
mov
mov
les
(bad)
adc
cmc
test
add
data16
or
dec
adc
add
adc
gs
mov
and
test
je
mov
call
push
call
aaa
rcr
mov
test
and
ja
pop
add
sub
mov
mov
cmp
mov
dec
je
dec
je
es
sub
mov
jmp
jmp
push
push
jmp
mov
adc
hlt
push
dec
cmp
adc
ror
push
mov
mov
jmp
xlat
add
mov
arpl
add
jmp
push
cmp
sti
dec
jge
shl
add
or
jg
clc
jmp
cmp
jne
push
call
or
fstp
call
movs
add
call
in
int3
loope
add
cdq
add
mov
push
call
xchg
jl
inc
add
jmp
cdq
adc
xor
cmp
mov
ja
test
adc
mov
mov
mov
jmp
mov
jmp
cmp
push
pop
mov
je
in
inc
mov
(bad)
(bad)
cmp
jg
mov
cmp
lea
jne
pop
mov
mov
mov
mov
(bad)
mov
mov
push
add
jb
mov
mov
add
in
mov
jmp
scas
mov
push
out
(bad)
(bad)
(bad)
push
call
push
call
pop
pop
cmp
inc
mov
pop
daa
pop
mov
sbb
adc
adc
xchg
fwait
enter
(bad)
js
test
add
mov
cmp
je
cmp
je
call
push
fs
inc
or
mov
mov
cld
clc
fwait
js
dec
inc
dec
inc
sar
cli
mov
mov
sbb
pushf
fdivr
dec
psubusw
xchg
jg
add
sub
mov
mov
mov
fistp
hlt
add
call
inc
ins
loop
mov
mov
cli
outs
add
call
pop
pop
leave
add
push
push
xor
push
mov
xor
mov
cmp
sti
in
jmp
pop
jmp
mov
mov
jne
push
fst
je
sbb
cmp
je
fild
cli
(bad)
(bad)
js
inc
adc
inc
adc
repnz
fild
fild
fdiv
fdivrp
dec
or
test
jne
mov
mov
cmp
icebp
push
call
pop
xor
sub
xchg
idiv
jmp
xor
xchg
mov
mov
cmp
or
jmp
or
inc
sbb
xor
jmp
inc
inc
sbb
dec
je
mov
dec
inc
je
mov
jmp
dec
mov
mov
mov
loop
dec
cmp
or
fs
mov
mov
ins
call
push
sar
lock
ja
mov
(bad)
adc
cmps
dec
cld
dec
imul
ret
push
or
mov
mov
cs
adc
aam
into
dec
add
shr
mov
jbe
bound
xor
jbe
jb
and
xchg
outs
callw
add
dec
cmp
test
mov
jle
mov
inc
int3
cmp
mov
imul
add
cld
std
sbb
jmp
adc
test
pop
test
dec
iret
jle
mov
ja
jb
enter
sbb
cs
int
test
pmullw
fstp
adc
dec
repnz
jge
fcomip
clc
mov
sar
mov
adc
cli
jmp
out
cli
mov
cld
push
mov
iret
mov
call
shr
push
mov
call
push
(bad)
pop
or
outs
mov
cmp
je
cmp
je
(bad)
fist
cmp
jne
mov
inc
adc
movzx
push
movzx
fwait
in
js
shl
add
or
mov
pop
mov
inc
daa
pop
std
scas
jne
frstor
pop
hlt
je
push
xchg
push
lahf
iret
call
into
hlt
push
call
jne
inc
inc
cld
test
jle
add
stos
inc
cwde
bound
mov
pop
hlt
mov
or
mov
add
test
jne
sub
add
cmp
mov
pop
lock
hlt
and
ja
test
test
mov
cmp
jg
jle
mov
jge
mov
push
or
inc
dec
add
cmp
and
or
int3
jmp
lea
adc
cmps
xor
jbe
les
les
ret
jbe
add
mov
mov
and
push
addr16
sub
lahf
mov
data16
fild
daa
retf
idiv
cmc
xor
inc
sub
pop
jle
pop
jmp
xchg
add
add
mov
jmp
(bad)
sbb
xor
call
pop
mov
push
push
call
or
adc
jmp
out
pop
mov
shl
jne
lea
push
push
pop
idiv
cmps
xchg
xor
pop
fist
popa
call
add
xor
mov
xor
push
adc
jmp
inc
pop
mov
mov
and
mov
icebp
jp
adc
sbb
ror
test
push
add
jns
clc
add
mov
dec
call
pop
sbb
je
or
push
jmp
lea
pop
and
mov
je
icebp
(bad)
inc
adc
mov
push
movzx
shl
lea
mov
jmp
mov
cmp
add
bound
inc
mov
mov
test
jne
push
call
push
mov
es
test
or
and
adc
mov
mov
sbb
mov
(bad)
out
cmp
inc
and
push
call
xchg
out
(bad)
inc
test
and
jmp
rol
push
inc
adc
js
inc
add
cmps
lahf
sub
je
ror
fidivr
mov
and
push
pop
mov
call
sbb
and
sub
jmp
jne
push
inc
push
add
dec
fyl2x
and
test
adc
rcr
into
call
add
inc
xor
cli
(bad)
add
adc
pusha
inc
retf
add
xor
inc
push
mov
adc
dec
ret
call
sub
push
ja
(bad)
add
adc
mov
mov
ffreep
dec
push
xor
cmp
jg
(bad)
mov
stc
jge
mov
push
call
push
or
lock
into
mov
push
call
xor
popa
out
mov
inc
retf
dec
push
push
add
jmp
dec
inc
mov
cmp
jl
mov
outs
mov
jmp
push
or
mov
inc
dec
mov
lea
lds
inc
adc
cli
jge
add
cmp
jg
mov
popa
jo
mov
xor
push
mov
inc
popf
pop
mov
imul
cld
(bad)
dec
inc
lea
push
pop
jle
push
add
dec
(bad)
in
fsubrp
or
dec
lods
sidtd
inc
and
cmp
jne
push
cmp
fisttp
jmp
mov
mov
outs
jo
ja
and
rcr
adc
xor
push
shr
mov
jg
inc
hlt
pop
push
add
mov
xor
jmp
in
ror
cvttps2pi
jo
(bad)
mov
mov
aad
add
mov
call
test
loopne
call
ret
(bad)
fdivr
fcom
push
push
ja
mov
mov
mov
call
or
mov
inc
icebp
call
add
push
call
jb
pop
and
push
sbb
push
popa
push
pop
call
loop
movs
out
test
jmp
xor
mov
mov
inc
cmp
je
cmp
jne
push
xchg
mov
into
push
call
(bad)
pop
add
dec
cmp
push
xor
add
mov
xchg
call
mov
push
pop
imul
push
or
js
mov
xchg
js
iret
jle
xchg
cmps
xchg
add
add
imul
pushf
mov
cmp
mov
(bad)
mov
lea
lea
cmp
lock
push
mov
jne
loop
lock
jno
mov
cmp
mov
je
(bad)
mov
(bad)
cmp
inc
inc
sub
cmp
jge
mov
or
pop
sub
jmp
jg
cmp
add
sbb
(bad)
and
adc
sbb
inc
cdq
mov
mov
mov
das
and
ja
add
addr16
lds
test
xor
cmp
not
leave
inc
cmp
add
aam
test
jg
mov
test
mov
inc
xor
inc
aad
xlat
or
mov
push
xor
fs
cdq
addr16
mov
dec
dec
shl
dec
fisubr
mov
or
jne
jmp
in
aas
test
or
and
dec
ja
mov
mov
fmul
mov
fnstsw
push
call
call
(bad)
inc
jmp
push
call
fistp
push
jmp
jo
jo
ja
mov
jl
jne
ror
pop
inc
(bad)
(bad)
push
lea
ds
push
repz
and
outs
ficomp
xor
jnp
jg
int
call
mov
leave
test
je
push
push
and
push
ret
or
sbb
cmp
xor
in
xlat
mov
mov
shl
pop
out
push
push
jne
btc
jne
jecxz
push
pop
mov
fist
add
pop
loope
ins
nop
jmp
mov
ror
sti
(bad)
out
xchg
mov
ds
mov
or
scas
or
adc
dec
mov
mov
(bad)
ss
cmp
adc
cmp
jge
xchg
add
push
pop
pop
pop
cs
mov
scas
push
or
je
into
dec
ins
mov
push
rcr
jb
je
dec
je
mov
xor
cmp
inc
inc
ror
cmps
jmp
xor
xor
adc
mov
ret
pop
mov
push
push
mov
call
sbb
and
inc
(bad)
into
jmp
push
jne
call
jge
add
sar
jmp
pop
push
ins
push
jmp
push
leave
pop
inc
or
add
and
popa
imul
or
mov
adc
je
xchg
lea
push
push
pop
(bad)
(bad)
fucomp
push
or
lock
pop
je
push
lea
push
push
call
or
loopne
mov
(bad)
imul
or
inc
inc
out
ret
aaa
add
dec
loop
or
jno
jle
(bad)
sbb
cld
push
call
mov
mov
or
inc
jg
dec
hlt
ret
sub
dec
and
inc
mov
rcr
(bad)
sti
jmp
mov
mov
cmp
sbb
out
jne
mov
pop
and
and
pop
jmp
mov
inc
push
adc
lds
add
fsub
pop
out
call
jb
mov
jp
push
call
fnstsw
jbe
call
adc
add
fwait
stos
cmp
jbe
and
cmc
add
push
add
or
adc
inc
mov
mul
imul
or
add
mov
pop
inc
xchg
ja
ror
call
adc
pusha
ret
push
call
inc
dec
push
pop
push
adc
mov
push
rcl
and
jbe
mov
cld
pop
test
inc
add
inc
add
mov
push
cmp
pop
int
dec
push
add
jo
xchg
xchg
push
push
call
sbb
add
push
call
xor
mov
mov
add
add
add
fwait
jb
enter
cmp
adc
add
jg
lea
ss
push
lea
call
sbb
pop
or
adc
push
call
or
mov
sub
mov
xor
inc
jo
push
or
push
adc
loop
aad
or
ret
inc
or
inc
inc
mov
ret
push
push
mov
call
mov
mov
mov
inc
sub
cmp
jle
and
or
xor
jno
jns
push
inc
gs
or
or
dec
mov
push
adc
data16
sar
or
cmp
mov
mov
mov
inc
pop
lods
sti
pop
lods
mov
lea
mov
(bad)
cmp
push
or
mov
add
out
inc
jns
movzx
shl
or
lea
pusha
jns
mov
or
lea
sbb
mov
adc
repnz
push
push
adc
or
retf
or
fucomi
jle
ret
pop
ret
adc
adc
std
cwde
sti
push
or
push
mov
push
push
lods
add
adc
inc
cmp
mov
leave
ret
ror
sbb
fld
leave
bound
adc
push
push
mov
or
test
mov
cmp
icebp
jne
call
xchg
pop
stos
pop
aaa
std
xchg
add
cmp
jle
(bad)
push
mov
call
add
jg
jnp
jmp
add
call
mov
add
aaa
mov
inc
or
pop
mov
mov
mov
pop
add
xchg
mov
push
push
cmc
fcomip
pop
ds
call
or
pop
mov
jne
cmps
mov
call
je
nop
xchg
out
ja
mov
jmp
and
jne
lea
push
ror
cmps
ins
add
data16
push
call
stos
sbb
mov
adc
call
cld
mov
sub
call
inc
ret
call
mov
add
push
mov
inc
test
mov
adc
loopne
sub
and
movs
stos
jle
imul
je
mov
mov
ins
call
and
xor
test
setne
push
(bad)
inc
mov
mov
lea
clc
xor
mov
shl
test
jge
dec
mov
je
or
push
call
pop
jmp
or
push
jg
add
mov
sub
fdivr
pop
pop
ret
push
call
add
clc
out
into
push
mov
and
cmp
fimul
push
jne
call
sbb
mov
je
or
es
lea
je
push
call
scas
jle
xor
jle
add
add
or
adc
inc
sbb
mov
push
add
jge
mov
js
mov
xchg
mov
push
mov
call
add
out
cmp
fild
neg
push
xor
lea
push
call
ficomp
add
sub
xchg
pushf
loop
mov
test
mov
std
test
jl
ja
or
fsubr
stc
jmp
push
mov
call
mov
jg
xchg
dec
add
mov
sti
fisttp
mov
push
add
call
push
jo
mov
aaa
lea
add
cmp
and
push
push
call
jmp
lea
push
call
(bad)
out
call
push
add
call
cs
mov
call
pop
add
lea
jmp
xchg
xor
stos
ins
pop
std
mov
call
pop
xor
pop
inc
pop
jns
loop
or
nop
sub
fstp
rcr
inc
pop
xor
push
push
add
push
lea
mov
(bad)
call
(bad)
sub
xor
sub
add
mov
(bad)
imul
add
mov
mov
add
add
idiv
cmc
pop
inc
popf
or
mov
mov
in
push
call
dec
sbb
jmp
lea
dec
xor
or
push
add
std
sub
lea
or
push
data16
(bad)
inc
inc
pusha
inc
dec
mov
mov
mov
mov
mov
sbb
clc
(bad)
push
inc
adc
mov
mov
mov
mov
mov
mov
call
loopne
fnsave
sbb
pop
inc
dec
pusha
adc
push
pop
push
push
call
push
xor
inc
push
add
push
jne
(bad)
call
mov
dec
add
xchg
out
sub
(bad)
or
(bad)
call
sbb
cmc
(bad)
jge
cli
cmp
call
inc
or
cmp
sbb
je
or
cmp
adc
in
xor
ret
inc
adc
shr
or
mov
mov
hlt
push
mov
push
inc
test
xor
push
idiv
outs
add
sub
inc
clc
sbb
(bad)
not
shr
das
ficom
push
call
mov
push
clc
jbe
cld
mov
cmp
add
call
je
inc
cmp
jb
xor
mov
sbb
mov
dec
jge
and
out
adc
ins
add
mov
push
jne
leave
add
add
inc
mov
les
neg
pop
mov
sub
sbb
push
ror
or
fucomi
bound
jmp
cmp
jne
push
es
dec
mov
call
out
mov
mov
call
lea
call
aas
call
cmp
jmp
ret
inc
out
mov
push
cmp
frstor
ss
in
pusha
push
iret
clts
cdq
enter
xor
inc
push
(bad)
bound
xor
aaa
cmp
(bad)
leave
scas
push
cmp
push
ins
sub
mov
jg
addr16
sbb
lock
je
dec
xor
sti
ret
cmp
mov
and
lea
mov
jmp
jge
sti
aas
mov
idiv
add
pusha
inc
popf
mov
mov
stc
dec
icebp
aas
push
call
mov
cld
out
out
call
mov
push
call
cld
push
or
mov
daa
stc
(bad)
cmp
bound
test
inc
push
mov
outs
or
(bad)
jmp
xor
mov
xor
js
mov
fwait
call
add
call
pop
xchg
sbb
push
jmp
lea
pop
lods
and
sub
mov
je
rcl
or
outs
sbb
scas
xor
adc
fstp
repz
ud0
and
lea
ret
pop
pop
je
lea
cmp
(bad)
call
je
push
mov
push
push
mov
call
push
call
out
and
inc
mov
je
pusha
jmp
nop
dec
sbb
push
push
push
push
add
sti
or
mov
push
jmp
push
pop
call
jmp
mov
dec
xchg
ret
je
mov
mov
add
jmp
mov
jmp
fild
and
push
fs
xor
lods
(bad)
fist
or
push
cld
or
xor
and
test
je
sbb
jne
ins
push
inc
xchg
test
and
or
stos
dec
aad
adc
lock
mov
xor
movs
and
add
div
mov
mov
cmc
(bad)
aaa
(bad)
cmp
nop
xor
xchg
sbb
outs
jo
adc
sar
mov
sbb
or
call
mov
loop
xor
cmp
call
add
in
dec
add
ret
fadd
pop
pop
pop
ret
jne
jbe
pop
jne
test
je
call
iret
sub
xchg
test
add
outs
js
test
or
call
push
mov
and
mov
push
sbb
push
xor
mov
shl
lods
push
xor
aaa
add
sbb
leave
ret
jno
xlat
mov
jbe
test
scas
jmp
and
adc
ins
or
ds
test
jg
sub
sbb
call
cmp
cmp
test
pop
xchg
bswap
xor
fst
inc
dec
push
sub
out
fs
sub
scas
xor
dec
out
scas
or
lds
jge
ret
mov
pop
adc
js
add
mov
(bad)
(bad)
jg
and
shl
shl
adc
dec
and
clc
add
test
setne
mov
fisttp
adc
pop
(bad)
(bad)
inc
inc
sub
mov
xor
(bad)
sar
push
push
push
call
arpl
in
pop
cmp
jne
and
add
mov
jmp
mov
sbb
daa
add
inc
icebp
mov
jmp
test
sbb
out
mov
lds
mov
cmps
pop
pop
scas
nop
xchg
mov
mov
add
sbb
push
push
adc
fwait
pop
jmp
(bad)
int3
sbb
add
cvttps2pi
push
and
and
frstor
mov
or
add
mov
sbb
push
repz
inc
or
add
test
push
jge
aad
add
ret
xor
dec
fnsave
call
sub
adc
add
pusha
std
jne
adc
mov
loopne
shr
inc
fchs
fcomp
and
mov
std
aas
push
xor
add
pop
ret
pop
jmp
sbb
ficom
(bad)
fstp
pop
cli
outs
and
push
cwde
xchg
xlat
xchg
jo
pop
lea
or
sbb
cld
inc
inc
jno
mov
or
aad
in
or
jmp
pop
xchg
add
inc
add
adc
push
sti
inc
enter
cmp
add
inc
cmp
xor
push
push
imul
or
inc
or
push
push
sbb
mov
call
lea
adc
call
mov
mov
call
fld
mov
fstp
in
cmp
push
push
fneni(8087
sahf
add
or
mov
mov
hlt
or
loopne
mov
out
cmp
push
mov
je
mov
dec
cwde
jae
retf
call
out
ss
inc
and
pop
jo
add
aam
stos
push
aam
push
adc
retf
daa
cmp
adc
and
aam
test
mov
jmp
mov
out
lea
inc
into
push
call
fnstsw
mov
call
dec
neg
sbb
lea
inc
call
mov
adc
mov
or
sbb
and
sbb
mov
sbb
adc
xor
or
nop
inc
push
dec
push
pop
cdq
mov
pusha
fs
sub
jmp
shl
dec
cld
mov
mov
push
xor
std
aaa
jo
movs
mov
push
push
stos
push
add
inc
mov
push
call
mov
mov
jne
mov
add
mov
mov
mov
mov
lock
push
pusha
dec
push
mov
push
jo
call
inc
xor
jge
inc
clc
jmp
push
bound
hlt
ret
sbb
adc
addr16
mov
call
jnp
mov
adc
cmp
je
ret
jno
ror
popa
xlat
(bad)
rol
or
adc
or
cmp
adc
jmp
xchg
inc
sbb
pop
adc
mov
push
mov
lock
xchg
jmp
ret
jne
or
je
test
pop
inc
inc
add
lods
jae
push
lods
or
inc
dec
je
sub
fist
mov
push
jge
call
test
jg
out
lods
idiv
test
je
adc
fdiv
call
jmp
xchg
iret
movs
and
icebp
dec
sub
sbb
lahf
mov
stc
sbb
adc
jae
fisttp
adc
daa
lahf
add
scas
mov
out
push
jb
dec
push
push
call
sub
pop
xor
jmp
loopne
push
mov
mov
call
icebp
mov
cmp
jne
popf
xchg
shl
stos
dec
jne
rcr
jp
mov
push
(bad)
(bad)
inc
jmp
mov
push
mov
call
mov
mov
and
call
stc
add
cmp
fmul
ins
call
push
mov
hlt
jno
mov
pop
add
push
call
push
sub
jg
dec
scas
jmp
and
cmp
mov
inc
(bad)
out
dec
mov
push
push
push
lea
call
call
inc
movs
mov
daa
fld
jmp
xor
cmp
cmp
in
lea
cld
jmp
adc
mov
stos
cld
push
call
add
pop
sar
mov
adc
call
cmove
(bad)
idiv
pop
pop
mov
pop
fist
xor
dec
icebp
push
dec
cmp
jge
test
jl
cmp
jg
sbb
sbb
icebp
popf
dec
adc
xchg
add
pop
ret
js
sbb
push
call
in
bswap
add
push
je
cmp
je
stos
pop
mov
daa
and
test
daa
call
inc
inc
pop
ret
push
or
or
sbb
mov
jg
or
dec
or
jne
call
xchg
iret
sar
push
dec
push
add
mov
add
push
cwde
shl
cmps
jns
pop
add
lahf
ss
or
or
pop
inc
sub
cmps
mov
jne
cld
jle
cmp
mov
jne
out
dec
xchg
or
and
cld
adc
fisttp
sbb
mov
call
jmp
add
inc
and
pop
cmps
or
rol
cdq
inc
jmp
jmp
call
inc
fstp
mov
add
sbb
cwde
out
and
cmp
inc
lock
push
inc
push
call
std
aaa
shl
fld
push
push
lea
add
popa
cmc
fwait
push
inc
jg
pusha
inc
cmc
stc
(bad)
(bad)
jmp
jp
lahf
cmp
dec
or
add
jecxz
add
ja
or
add
xchg
mov
jmp
cmp
jmp
adc
add
mov
or
push
jo
push
mov
inc
into
call
call
cmp
or
call
hlt
push
call
mov
mov
clc
mov
sbb
out
xor
or
push
call
aam
sbb
neg
dec
add
div
sbb
pop
pop
mov
xor
out
in
and
lea
call
popa
rcr
lods
call
loopne
es
stos
clc
jmp
xlat
stos
mov
dec
iret
inc
inc
add
je
or
jo
add
dec
arpl
stos
sub
mov
add
call
dec
imul
adc
xchg
and
mov
repz
or
ret
push
xchg
xor
cmc
mov
call
inc
cld
inc
out
(bad)
lock
and
push
cmp
sahf
mov
pop
inc
into
pop
pop
adc
lock
xchg
push
pop
cld
loopne
or
adc
lea
mov
adc
xchg
int3
enter
sbb
call
ds
es
in
mov
in
lods
jmp
call
cld
fidivr
mov
cld
(bad)
repz
mov
into
sar
hlt
adc
test
out
pop
cmps
mov
push
push
int
or
mov
jmp
enter
ret
cmc
(bad)
fisttp
xor
add
gs
fisttp
outs
jne
iret
call
xor
push
push
push
out
add
(bad)
push
push
push
push
popa
call
stos
sbb
dec
inc
dec
add
sub
data16
mov
addr16
lods
test
movs
mov
mov
not
icebp
lods
sbb
mov
adc
push
xchg
call
mov
cmp
je
push
call
es
add
gs
fmul
cli
test
sub
dec
adc
add
outs
or
stc
mov
xor
jge
adc
and
call
fild
push
add
xor
push
or
shl
test
lods
mov
cmp
bound
jmp
xor
xor
fcmovne
push
xchg
sub
push
xchg
sar
icebp
rcr
add
icebp
jne
push
call
test
and
std
mov
lea
push
call
stos
fild
sub
add
push
call
scas
stos
cmc
jle
xchg
dec
push
sti
mov
mov
push
cs
dec
or
xor
push
call
mov
or
sahf
add
xchg
call
mov
jmp
mov
jbe
call
and
mul
rol
jae
pop
out
inc
and
test
jne
sar
jmp
sbb
icebp
mov
fisub
adc
mov
and
push
push
push
call
sub
jle
push
sbb
sub
stc
and
push
push
inc
mov
jl
aas
or
jno
push
call
dec
mov
pusha
jo
sbb
xchg
and
int3
mov
pop
push
fisttp
mov
mov
lea
test
xor
push
pop
pop
mov
add
jmp
or
cld
sub
aaa
loopne
loopne
rcr
aaa
mov
mov
fs
mov
dec
pop
push
call
outs
mov
and
call
call
xor
sbb
clc
xchg
icebp
mov
or
inc
inc
ror
add
inc
sbb
call
mov
je
(bad)
sub
cs
add
dec
mov
jg
inc
cwde
push
push
call
lock
pop
pop
jne
cmc
mov
sti
dec
lock
xor
pop
cld
iret
push
push
call
or
in
add
push
aam
and
add
or
cli
or
mov
mov
jle
pop
lea
mov
sub
xor
fld
add
dec
push
push
push
call
sbb
dec
in
fsubr
adc
sub
sbb
add
call
ja
cld
dec
call
inc
mov
mov
mov
lea
sub
push
dec
pusha
sub
jne
xchg
clc
mov
adc
sbb
push
xor
out
mov
jge
call
test
cmc
or
aaa
jne
cli
ret
jge
mov
je
push
test
cmp
mov
call
xchg
sbb
call
sub
cmps
or
mov
xchg
adc
call
icebp
mov
fimul
cdq
lods
sbb
add
(bad)
mov
sub
push
popa
push
cmp
and
sub
sar
sbb
add
fsub
jo
xor
stc
inc
ja
shr
adc
cld
mov
and
call
clc
ret
add
sub
hlt
push
call
sbb
neg
xor
adc
ins
xor
push
mov
inc
mov
push
mov
inc
jge
push
call
cmp
into
pushf
pop
cmps
cld
idiv
add
sub
mov
push
pop
jno
out
mov
and
cmp
push
add
mov
xor
or
adc
pop
cmp
cmp
push
mov
call
pop
retf
push
adc
dec
test
shr
popa
int3
jp
int
inc
addr16
mov
call
mov
jmp
mov
add
push
push
inc
adc
mov
pop
jb
aam
aaa
inc
cs
sti
(bad)
inc
jmp
jge
loope
mov
push
push
push
call
test
dec
ret
inc
call
clc
push
sahf
mov
jne
cmp
jmp
add
push
idiv
xchg
jne
dec
call
call
cmp
inc
adc
add
mov
or
xchg
in
call
fnstsw
test
push
pop
and
je
(bad)
adc
or
or
mov
mov
add
mov
aam
inc
and
add
jne
call
mov
dec
stos
call
inc
loopne
jne
pop
bound
inc
loop
mov
call
push
data16
addr16
push
das
or
adc
imul
push
jmp
or
and
or
ja
mov
shl
add
push
xor
call
xor
test
mov
jle
mov
push
std
outs
mov
push
inc
mov
cdq
inc
cmp
jl
mov
pop
add
jb
cmp
call
and
gs
(bad)
sbb
mov
mov
mov
mov
mov
mov
mov
std
push
clc
into
mov
call
aas
or
cmps
(bad)
dec
xor
ret
jecxz
ds
das
cmp
dec
jno
cld
icebp
dec
fild
mov
inc
lock
or
je
in
call
dec
int
mov
call
icebp
dec
test
inc
mov
adc
sahf
dec
(bad)
aaa
or
inc
loope
iret
call
mov
xchg
add
mov
sub
sub
call
and
and
es
or
std
jg
int
lea
call
jmp
or
xor
jne
sti
rcr
call
xchg
mov
jg
add
mov
lea
cmp
mov
loope
or
sub
mov
push
add
pop
mov
fmul
and
cmp
cmp
cmp
push
mov
jmp
lods
inc
sbb
mov
push
pop
add
dec
or
call
cmp
test
jbe
mov
mov
lock
push
ins
lods
sbb
cmp
jb
mov
jp
add
mov
sahf
add
jo
inc
inc
mov
push
pop
loop
or
imul
ja
cmp
inc
sbb
mov
test
pusha
mov
shl
test
dec
into
call
sub
pop
pop
add
mov
out
mov
scas
pop
push
call
push
push
call
or
inc
sub
mov
push
imul
xchg
pop
in
mov
out
inc
lock
inc
or
cmc
(bad)
(bad)
cmp
jmp
cmp
jbe
lea
shr
jmp
add
push
call
inc
jg
add
add
inc
or
add
scas
rcl
jge
shr
sub
push
lea
jmp
outs
or
mov
dec
and
mov
dec
idiv
inc
inc
and
mov
enter
add
pop
add
rol
push
ins
push
retf
sub
cmp
adc
mov
pop
mov
clc
xor
jbe
sub
(bad)
mov
mov
jne
mov
push
call
sub
jo
(bad)
ja
jne
mov
xor
test
jle
pop
push
mov
mov
mov
mov
mov
cmp
jl
lea
cmp
cmp
push
call
aas
inc
and
retf
call
inc
cmp
jl
jmp
int3
lock
push
or
call
call
loopne
jmp
ffreep
or
xor
cmp
in
sub
iret
cmps
or
jg
add
inc
pusha
mov
or
or
mov
mov
pop
mov
mov
mov
call
cmp
dec
cmp
mov
inc
mov
mov
outs
and
mov
add
pop
pusha
mov
add
sub
je
push
dec
mov
dec
pusha
xlat
and
mov
cmps
xor
adc
add
jo
pop
mov
dec
jo
jno
xchg
inc
jo
or
pusha
repz
fsubr
dec
call
sbb
add
jl
call
and
stc
xchg
das
mov
or
sbb
and
aaa
(bad)
fnstenv
ja
dec
cmp
inc
inc
sbb
rol
push
stos
push
cmps
push
and
test
sbb
add
mov
add
lea
das
push
(bad)
out
out
adc
dec
cmp
and
clc
jmp
adc
jge
outs
ret
out
push
call
xor
sbb
out
lea
cld
inc
clc
(bad)
call
test
je
cmp
dec
clc
inc
sbb
lea
add
call
cmp
pop
je
mov
mov
mov
(bad)
and
mov
pop
mov
xor
in
dec
je
push
(bad)
(bad)
push
call
mov
inc
mov
jmp
mov
push
mov
call
aam
clc
inc
test
je
xchg
add
js
add
push
mov
mov
(bad)
out
rcr
push
in
div
je
mov
push
call
cmps
sbb
fimul
cmp
or
mov
loopne
add
jmp
or
mov
mov
jb
pop
dec
add
lahf
into
cs
mov
push
xchg
or
push
push
mov
fcomp
clc
ds
movs
xchg
test
test
sbb
pop
fs
call
pop
call
and
call
pop
mov
inc
ja
sub
and
call
or
inc
inc
push
call
repnz
sar
sbb
sbb
addr16
adc
add
jl
adc
mov
call
stos
and
xor
adc
loop
mov
fcomi
fsubr
hlt
inc
dec
push
add
cmp
enter
enter
call
fsubr
sbb
repz
adc
call
sbb
mov
dec
inc
sub
push
shr
and
cmp
jne
cwde
add
push
lea
add
mov
mov
lea
aaa
inc
test
adc
add
add
arpl
mov
call
aaa
jbe
mov
and
dec
adc
jae
push
cdq
popa
ret
push
out
inc
xor
and
and
lea
add
loope
or
pop
clc
(bad)
dec
ds
push
call
cmp
mov
jne
add
cli
inc
or
std
jg
std
mov
call
test
jne
sbb
mov
push
call
(bad)
fist
mov
push
mov
call
inc
inc
xor
call
inc
ret
push
mov
les
jmp
call
push
call
(bad)
jmp
daa
add
inc
outs
add
inc
or
nop
jmp
push
push
push
call
jo
fistp
pop
pop
rcr
mov
shl
ror
push
call
xchg
add
or
ffreep
fisttp
jne
sar
mov
push
jmp
call
xor
push
sbb
cmp
inc
and
mov
or
add
test
cmc
add
sub
inc
or
daa
pop
jecxz
aam
inc
call
mov
jg
out
or
out
push
call
and
push
jle
mov
adc
push
cli
mov
dec
or
les
mov
sub
outs
adc
add
repnz
dec
pop
pop
inc
add
les
imul
ja
aad
cmp
push
mov
idiv
scas
and
add
push
push
lea
push
call
mov
pop
outs
pop
add
cmp
mov
icebp
cmp
jbe
push
call
cmp
je
and
shl
clc
adc
inc
add
in
mov
sub
cmps
or
sbb
or
inc
or
sbb
pop
out
dec
adc
add
or
loopne
mov
ret
mov
int3
adc
sbb
shl
sub
ret
xor
xchg
jne
push
adc
dec
sbb
cmp
jbe
mov
mov
clc
call
je
and
add
inc
and
inc
and
js
sbb
sbb
mov
jge
jle
(bad)
jg
xchg
mov
xor
adc
push
lea
call
pop
jbe
adc
adc
(bad)
outs
sahf
adc
enter
aas
add
inc
ins
aas
mov
push
add
or
cmp
cwde
or
cmp
jmp
push
out
rcl
ret
cmp
adc
jmp
jbe
jbe
inc
inc
xor
push
pop
call
(bad)
cmp
sbb
call
sbb
dec
sahf
out
mov
mov
sbb
mov
or
jmp
sbb
pop
retf
and
add
jmp
cmps
add
cmp
add
imul
sbb
call
loopne
test
adc
inc
lods
jb
in
push
mov
lea
dec
aad
sub
push
push
call
aas
call
push
call
loope
xchg
sbb
lea
call
sbb
sbb
mov
add
fdivr
inc
out
leave
jb
iret
std
fucomp
test
mov
in
loop
xor
dec
(bad)
fiadd
inc
aas
xor
sbb
push
jne
or
jbe
xchg
jecxz
inc
or
push
call
out
icebp
add
lock
test
test
stc
call
pop
mov
je
add
mov
add
mov
push
ja
pop
xchg
or
cmc
or
call
add
add
push
add
xor
jo
shl
adc
push
push
call
add
inc
fadd
sahf
xchg
shl
mov
jge
sbb
adc
nop
cmps
aaa
inc
(bad)
cmp
jne
xor
and
std
jg
cmp
jne
aad
and
and
jo
loop
shl
loop
pop
and
cmp
jge
xor
jle
xchg
lods
retf
push
movs
inc
dec
jb
add
cmp
ja
movzx
lea
lea
pop
cmc
push
and
cmp
jl
mov
mov
mov
jmp
inc
call
cmp
xor
ins
call
inc
cmp
push
jbe
test
push
inc
lea
or
push
fdivr
or
sbb
xchg
jmp
push
push
push
cmp
call
imul
mov
das
pop
jmp
jo
fstp
xor
sbb
inc
sub
pop
mov
mov
mov
push
add
call
pop
adc
mov
call
jmp
push
jp
(bad)
aad
jo
mov
inc
sub
mov
clc
call
mov
into
add
and
sbb
cmp
mov
call
mov
jg
std
outs
dec
add
push
adc
dec
sub
in
or
xor
aaa
adc
xor
stos
inc
jbe
push
stos
std
sbb
rcl
push
call
ret
sub
movs
push
mov
pop
jae
out
sbb
into
mov
xor
dec
fcomip
jg
dec
push
mov
cmp
push
jno
push
jb
mov
push
cmp
jne
cmp
jne
cmp
jne
add
add
pop
jmp
test
add
cmp
jne
sub
addr16
pop
paddd
cmps
dec
push
push
inc
push
inc
shr
call
imul
rcl
icebp
add
jl
cld
ja
pop
mov
call
or
rol
and
push
add
rcr
inc
mov
inc
cmp
jb
jmp
cmp
jne
test
repnz
(bad)
jns
pop
test
pop
jb
imul
push
add
std
inc
(bad)
add
jne
pop
cld
mov
jmp
adc
mov
inc
sub
call
pop
add
jae
mov
call
sbb
lea
jbe
outs
sub
ffreep
lea
call
mov
mov
mov
call
lea
or
call
int3
call
out
add
iret
sub
mov
mov
push
enter
fst
vmovsd
cmp
jne
inc
add
pop
push
cmc
int3
mov
add
cs
pop
lea
add
dec
lea
das
ror
sti
jne
lea
jge
push
sbb
push
add
hlt
inc
and
outs
test
cmp
mov
inc
and
(bad)
cmp
inc
adc
(bad)
push
lea
call
push
sub
bnd
dec
xchg
sbb
inc
push
call
loopne
mov
or
(bad)
leave
add
repz
sbb
inc
ja
(bad)
pop
xchg
mov
call
ja
or
sbb
shl
loope
ror
lahf
(bad)
adc
add
or
add
rol
add
ret
mov
(bad)
fistp
push
call
and
and
jmp
mov
and
jg
inc
sbb
fstp
leave
and
call
or
mov
iret
xchg
dec
inc
out
dec
scas
cdq
stos
leave
icebp
dec
test
jecxz
out
push
dec
neg
sti
idiv
xor
mov
xor
jmp
cmp
in
jne
adc
inc
xor
inc
jmp
ret
jg
fisttp
mov
mov
mov
add
push
pop
bound
mov
out
push
mov
(bad)
sbb
push
add
or
cmc
or
and
pop
mov
add
bnd
loop
jle
stos
into
call
js
je
mov
call
mov
dec
call
and
rcl
leave
mov
adc
ins
push
push
push
dec
test
mov
rol
mov
jb
xchg
xor
dec
pusha
mov
aas
xchg
mov
dec
psubsb
xor
or
cmp
and
scas
xor
lea
call
ret
mov
pop
jae
add
div
(bad)
dec
mov
inc
fstp
fld
jmp
call
ins
inc
std
inc
pop
sbb
pop
leave
dec
sub
push
fimul
das
xchg
add
xlat
pop
dec
call
xchg
jp
or
mov
mov
and
enter
std
(bad)
jnp
stc
mov
jle
or
xor
js
adc
pxor
jecxz
pop
xor
xchg
cld
push
out
cmp
das
and
sbb
cld
cld
je
jns
adc
fwait
xchg
mov
dec
daa
inc
ror
xor
sub
mov
or
test
add
lds
xchg
pop
jae
mov
adc
hlt
cli
pop
je
std
call
call
add
imul
jle
push
inc
loopne
jbe
mov
je
push
(bad)
call
or
call
sbb
lock
lea
push
pop
je
adc
pop
call
push
outs
or
call
mov
int
(bad)
mov
jo
jg
sub
cli
add
mov
ins
lock
sub
push
inc
inc
jmp
pop
lods
scas
mov
mov
shl
call
push
loopne
sub
rcl
or
jbe
push
and
sbb
call
push
adc
or
push
aas
gs
push
xchg
bnd
call
mov
call
int3
lock
or
call
push
or
and
inc
jge
call
add
inc
pop
ret
inc
mov
call
(bad)
fs
inc
mov
bswap
or
leave
cmp
arpl
in
dec
xchg
ror
call
movs
xor
enter
xchg
xor
push
adc
mov
gs
add
xor
call
jo
call
in
je
leave
or
mov
mov
icebp
call
push
push
das
popf
dec
test
js
adc
popf
ror
sub
pop
ret
aaa
rol
call
les
jmp
and
and
icebp
sar
inc
jbe
out
addps
popa
in
mov
push
add
push
mov
sbb
jge
je
call
add
call
rcl
push
pop
xchg
mov
sub
fld
cmp
mov
fucomp
(bad)
aaa
cwde
push
ret
push
jmp
pusha
es
jmp
cs
test
jmp
cmp
es
scas
ss
push
ja
jge
and
clc
inc
popa
pop
add
rcr
aad
out
hlt
call
xor
mov
push
jae
dec
xchg
and
call
loopne
shl
stos
xchg
(bad)
dec
add
cli
ret
jmp
lea
xchg
push
call
cmp
sbb
sub
xor
and
mov
pop
hlt
xor
aam
sub
enter
(bad)
cmp
cld
sbb
push
sub
sbb
add
mov
xchg
in
into
rcl
fwait
(bad)
(bad)
jmp
inc
sub
call
cmp
je
or
jmp
and
test
sub
int
jno
mov
retf
mov
adc
sbb
or
add
ja
jbe
jmp
(bad)
xor
push
mul
shl
jbe
test
jne
or
or
test
call
test
cmp
lds
sbb
push
push
mov
add
loopne
or
movs
test
and
mov
sbb
lock
pop
push
call
push
fst
add
and
adc
ja
call
pop
mov
in
adc
mov
dec
jge
das
push
push
call
or
add
inc
(bad)
(bad)
aas
adc
or
call
fld
mov
call
fld
icebp
popa
out
dec
add
adc
pusha
ja
iret
push
mov
mov
pcmpeqb
shl
stc
sub
stc
dec
jmp
lea
add
fstp
call
pop
add
lods
sbb
push
dec
push
push
push
cs
xor
fidiv
in
jp
or
adc
out
push
sub
das
leave
sbb
lahf
inc
mov
jae
or
xor
ror
mov
call
cmps
mov
repz
mov
jbe
pop
xchg
push
and
dec
stos
retf
shr
(bad)
stos
adc
mov
out
test
dec
or
inc
inc
inc
cmp
jb
jnp
add
cmp
mov
add
call
or
adc
fild
push
aam
les
mov
mov
call
add
push
inc
cmp
jb
scas
fisttp
add
cmc
mov
sar
sbb
call
js
push
push
push
shl
cmc
ja
or
into
mov
call
xor
cmp
out
or
into
cs
jmp
or
jg
jp
mov
cld
mov
push
jno
jo
adc
sti
stc
sub
mov
shl
cdq
jmp
mov
into
call
mov
pop
dec
ss
out
add
sub
jbe
jmp
cmp
pop
xchg
(bad)
je
imul
mul
push
or
fiadd
inc
xchg
jg
jne
sahf
aam
push
dec
call
dec
push
sbb
jp
jne
inc
cmp
cmp
je
aaa
push
pop
adc
push
push
push
call
mov
lods
lds
push
push
sbb
out
add
nop
aam
push
mov
dec
outs
xchg
add
push
add
mov
mov
or
push
mov
add
jg
mov
cs
cmp
jne
in
inc
es
clc
sbb
inc
lods
cwde
ret
(bad)
addr16
sbb
and
dec
push
call
and
stos
add
(bad)
(bad)
rol
add
push
pop
pop
ins
clc
inc
(bad)
push
mov
push
push
rol
jp
mov
mov
inc
mov
fnstcw
push
out
outs
sar
dec
or
sub
imul
xchg
pop
or
xchg
sar
mov
test
call
or
cmp
test
jl
cmp
jle
xchg
add
and
inc
or
push
push
xor
cmps
fdecstp
test
mov
dec
pusha
cmp
call
outs
inc
sub
inc
adc
adc
je
mov
jb
ret
add
cwde
ret
mov
sbb
mov
in
jns
jns
push
pop
ret
sar
(bad)
jmp
sub
gs
sbb
(bad)
in
jle
or
pop
sub
aas
jbe
push
sub
push
mov
scas
pop
adc
test
or
test
fadd
jbe
mov
jo
call
add
shr
push
test
push
fdiv
es
out
jmp
dec
test
mov
mov
jne
push
call
push
fcmovnb
push
not
int3
jge
adc
ja
adc
out
scas
jmp
and
mov
sar
jb
and
fmulp
jmp
int3
rcr
adc
dec
jmp
test
jne
mov
rol
add
mov
add
cmp
or
mov
push
call
icebp
ja
(bad)
(bad)
cmp
mov
xor
xlat
lock
pop
or
imul
add
inc
push
jl
and
out
inc
(bad)
iret
pop
pop
mov
stos
leave
push
rcl
aaa
and
sub
shl
cli
sub
push
xchg
popa
cmp
shr
out
mov
movs
je
mov
inc
mov
mov
or
add
inc
jo
pushf
ins
dec
sub
ror
adc
rcl
mov
aam
sbb
adc
xor
call
scas
push
inc
enter
mov
loope
jb
fst
retf
test
in
sbb
clc
ret
je
aas
out
mov
mov
push
cmp
sbb
leave
jg
or
dec
out
mov
push
jb
clc
add
pop
pop
pop
test
cdq
outs
inc
push
mov
(bad)
jg
push
ss
loope
jns
push
fild
ja
sbb
mov
push
sub
(bad)
cmp
cmp
mov
jbe
push
(bad)
call
and
icebp
call
pop
xor
inc
pop
pushf
mov
cmp
jb
pop
xor
or
push
add
inc
call
sbb
ret
outs
push
call
lock
bt
loope
pop
push
out
or
and
ror
mov
dec
mov
or
xchg
sbb
push
jnp
add
mov
test
and
leave
adc
(bad)
push
lds
lahf
call
or
out
retf
cmp
fist
push
call
push
jae
xchg
hlt
iret
sbb
jle
enter
in
mov
inc
js
bound
cmp
dec
add
push
call
aas
jae
adc
push
call
cmp
imul
jne
jbe
lods
adc
(bad)
pop
ret
xor
mov
call
and
fstp
adc
jb
jne
push
call
push
sub
cmps
retf
xor
test
xor
cmp
cmp
(bad)
add
bound
xor
xor
xor
or
iret
popa
shl
out
mov
ins
xor
sahf
repz
sahf
sbb
xadd
xor
adc
into
jns
fbld
jmp
loope
mov
ja
adc
cmp
cmp
add
es
inc
dec
ret
andps
push
call
ins
pop
dec
or
add
xor
adc
pop
aam
xchg
inc
sbb
mov
add
dec
add
add
add
daa
daa
pop
pop
mov
push
mov
adc
(bad)
dec
add
add
dec
add
jmp
outs
xor
call
lea
inc
push
sbb
xchg
or
jmp
cmp
inc
inc
add
dec
sbb
mov
xchg
aad
or
daa
mov
ret
out
cs
or
sub
pop
mov
sub
xor
aaa
mov
sbb
push
push
push
push
mov
call
hlt
add
jl
rcl
inc
pop
je
mov
mov
mov
mov
or
dec
jb
xor
cwde
(bad)
lahf
aaa
lea
call
cld
pop
sub
fst
add
fld
adc
jb
clc
jb
mov
push
mov
inc
add
fistp
inc
clc
ds
lea
icebp
sti
test
jmp
ins
jmp
add
out
jmp
sahf
arpl
fmul
ret
add
sub
sub
push
pusha
mul
mov
and
ja
add
push
call
(bad)
out
push
fs
add
or
je
mov
mov
sub
or
adc
pop
out
cwde
test
inc
aam
xor
(bad)
outs
and
aad
cmp
rol
push
xchg
dec
push
int3
or
fidivr
inc
sub
enter
xchg
xchg
daa
adc
pop
jmp
adc
inc
rcl
mov
cmp
(bad)
sub
mov
xor
sub
adc
mov
sub
icebp
je
scas
fidivr
mov
push
add
je
adc
mov
lea
adc
add
fistp
sub
push
pop
or
add
call
add
and
add
cmp
mov
inc
jo
and
aad
mov
sub
push
fsubr
or
mov
add
imul
pusha
add
jmp
pop
in
add
jg
push
push
call
mov
test
jne
adc
ror
adc
fdiv
adc
out
pop
test
jl
adc
ret
cmp
jb
outs
icebp
loope
jecxz
fmulp
dec
or
dec
and
mov
push
fst
jecxz
xchg
and
cmp
loopne
cwde
scas
jae
push
pop
push
push
push
lea
jg
fcomip
call
or
jb
adc
or
add
xchg
push
mov
call
cmp
fimul
push
inc
cmp
sbb
sub
inc
push
call
mov
lock
(bad)
pop
cmp
sar
std
psubb
push
add
push
jecxz
mov
std
push
push
and
push
ja
adc
cmp
add
clc
mov
popf
mov
sub
sub
cmp
jbe
call
rcr
push
mov
mov
mov
push
add
ss
test
in
pop
jmp
test
stos
mov
cmp
pop
jb
lea
or
call
in
shr
xor
add
test
adc
cmp
xor
push
push
mov
call
and
call
lock
(bad)
push
xor
push
add
popa
cli
push
adc
jb
jne
xchg
adc
not
xor
pop
ret
xchg
mov
sub
and
out
mov
xchg
mov
cmp
jnp
add
or
push
jb
out
dec
sub
leave
dec
push
mov
je
mov
mov
(bad)
(bad)
jmp
cli
popa
je
cmp
je
cmp
jne
mov
mov
cmp
je
cmp
mov
adc
clc
and
dec
or
jle
push
ret
push
call
push
(bad)
adc
inc
pusha
mov
idiv
imul
stos
ja
push
inc
adc
(bad)
mov
add
add
test
into
je
mov
mov
test
jne
call
add
rcr
inc
sub
call
scas
outs
aam
call
fnsave
iret
faddp
or
js
pop
fcmovu
pop
inc
xor
xchg
add
push
call
clc
fnsave
fmul
stos
cmp
add
mov
xor
sub
(bad)
rcl
(bad)
in
cmp
mov
jmp
xor
cmp
push
setne
push
mov
fild
fnsave
push
call
loopne
lock
sub
adc
add
dec
ja
pusha
jno
cmp
push
out
(bad)
sbb
dec
cmp
je
call
ret
inc
mov
push
ud1
jo
or
or
jmp
cli
js
cmp
mov
cmp
xlat
idiv
and
fcom
sub
jge
iret
call
ret
inc
pushf
inc
or
ins
sbb
ss
push
jmp
stc
js
cmp
je
lea
or
sub
gs
jnp
retf
dec
add
int
sbb
ja
sti
push
jo
mov
add
pop
push
or
call
loopne
std
sub
cvtpi2ps
mov
or
jg
call
add
or
(bad)
call
push
mov
jl
into
daa
adc
icebp
icebp
cld
fbstp
jbe
loopne
add
js
add
push
push
aaa
cmp
xor
jb
je
mov
mov
push
push
mov
call
sbb
pop
hlt
call
lock
cmps
dec
cld
mov
call
inc
and
je
fadd
icebp
call
aaa
adc
add
jmp
je
movzx
mov
test
cmp
pop
pandn
or
add
adc
shl
cmps
push
xchg
push
pop
pop
ret
push
xchg
arpl
outs
sub
push
scas
aam
aad
mov
test
pop
je
and
xor
jmp
and
xchg
add
inc
iret
mov
call
mov
mov
xchg
test
std
out
pop
aad
jnp
call
loopne
pop
mov
cmp
mov
push
shr
test
out
pop
ret
mov
dec
jle
push
push
push
pop
cdq
idiv
push
pop
push
pop
push
dec
adc
cdq
idiv
dec
adc
pop
pop
sbb
adc
cmp
push
push
push
call
adc
or
pop
pop
add
rol
nop
dec
cld
ret
dec
mov
mov
je
push
push
inc
call
test
or
lea
movs
movs
(bad)
inc
dec
movs
movs
mov
mov
lea
cmps
and
add
or
mov
mov
mov
or
(bad)
jge
mov
and
mov
idiv
mov
add
stos
mov
cmp
jb
cmp
ja
add
mov
movzx
mov
ss
pop
mov
das
pusha
push
jne
call
add
mov
jle
mov
or
or
stos
sbb
add
add
inc
hlt
jg
sbb
pop
cmp
je
push
cmp
into
iret
call
adc
push
and
inc
enter
pop
call
(bad)
fcom
push
push
push
call
loope
ror
mov
mov
call
push
lea
pop
lea
push
xchg
jmp
rep
movs
add
retf
call
sbb
push
mov
jge
out
jp
stos
push
mov
call
out
enter
dec
or
in
push
call
mov
pop
jnp
fsubr
push
sbb
push
je
sbb
aas
pop
push
mov
call
mov
inc
arpl
sahf
and
sub
pop
lock
sbb
push
cmps
dec
inc
hlt
call
lea
hlt
dec
dec
test
je
mov
in
add
ins
bound
ins
mov
stos
or
loop
mov
or
push
inc
sbb
lock
js
inc
or
lds
ret
aam
cmp
adc
paddb
daa
out
mov
or
or
mov
add
push
mov
add
inc
ss
or
sar
or
sub
push
sub
push
push
push
call
push
add
repnz
aam
mov
call
daa
movs
ror
mov
or
call
mov
xchg
or
aaa
fs
aaa
clc
repnz
xchg
push
call
cli
loope
add
pop
call
jmp
call
inc
loopne
add
cs
push
xor
jbe
test
fmul
fstp
fild
pop
jo
out
push
fstp
jne
push
call
lock
add
in
jo
sbb
xor
or
cmp
add
mov
sub
adc
jbe
xor
iret
pop
sub
pop
add
mov
or
sbb
xor
jo
call
jmp
lea
push
push
call
add
cmp
test
cld
sub
pop
inc
call
inc
repz
test
call
loope
mov
push
call
adc
fmul
mov
cmp
adc
(bad)
(bad)
call
inc
cmp
pop
pop
jl
lea
lea
inc
pop
shl
fild
mov
mov
jmp
sbb
rcr
xor
pop
clc
fild
enter
or
sbb
add
fild
in
cmps
jle
and
pop
fild
lmsw
mov
inc
push
or
shl
test
or
cmp
out
xor
cld
je
xor
lock
std
(bad)
(bad)
or
mul
inc
int
cld
mov
call
adc
sub
jg
sahf
xor
cmp
mov
je
out
mov
push
sbb
pop
aaa
adc
push
ret
je
jae
jbe
push
sbb
adc
faddp
(bad)
call
mov
or
call
sti
cs
test
inc
push
cld
pop
and
cmp
jne
jmp
test
push
arpl
adc
jae
adc
shr
pop
or
fsubrp
scas
rcr
loope
jmp
scas
pop
and
int3
push
push
call
push
mov
ror
je
test
je
mov
dec
lock
mov
loopne
push
stos
sahf
sti
push
push
rsqrtps
and
mov
ror
ror
sbb
imul
popa
in
test
push
or
xchg
imul
mov
jne
mov
call
mov
cld
mov
sub
jo
lea
jl
sub
pop
mov
mov
rol
pusha
mov
ret
in
call
sar
lock
pop
shr
push
jnp
pop
cld
jb
xchg
inc
jmp
in
push
cld
fwait
adc
ss
popa
jne
cmp
js
inc
mov
out
outs
call
stos
sub
push
sub
lds
les
(bad)
xor
call
daa
loopne
ja
mov
mov
inc
pop
add
mov
push
mov
push
mov
sahf
call
dec
and
shr
and
push
jg
add
cmp
mov
inc
mov
and
je
(bad)
cmp
xor
jb
hlt
inc
mov
mov
sub
inc
call
jne
(bad)
xor
repz
cmps
add
fld
pop
mov
pop
fistp
fld
ret
fadd
mov
or
inc
(bad)
cmp
nop
pop
clc
xor
pop
inc
sub
pop
enter
jl
ja
mov
or
jb
call
ja
jmp
fs
fadd
add
int3
push
call
ds
neg
lea
jmp
push
push
lea
loope
test
mov
loopne
cld
loopne
add
push
shl
pop
or
xor
and
call
or
call
mov
test
jne
push
lea
mov
or
popf
nop
add
aas
adc
pop
mov
mov
sbb
adc
xchg
pop
adc
call
mov
repz
xchg
fsub
push
or
ja
jnp
add
add
retf
icebp
pop
inc
iret
outs
mov
bndldx
(bad)
jmp
mul
push
lock
adc
je
and
inc
adc
shr
data16
pop
or
push
cdq
jecxz
add
cmps
add
lea
sbb
cld
or
jne
xor
rol
cdq
shl
jno
icebp
cli
and
in
pop
xor
fild
leave
jle
jne
call
fisubr
fcomp
mov
mov
push
shl
ficom
mov
push
mov
sub
push
not
mov
daa
mov
inc
push
call
sub
loop
sti
(bad)
mov
sub
call
and
sub
pop
test
push
push
call
push
jnp
das
pop
pop
pop
mov
call
sub
cmp
sbb
dec
test
mov
ss
call
call
dec
adc
repnz
repnz
ret
add
rcl
push
call
jmp
xchg
je
add
sar
out
mov
cmp
mov
push
cmp
call
cs
and
push
dec
jns
cwde
in
into
push
inc
retf
arpl
test
inc
rol
outs
sar
push
call
mov
pop
cmp
fs
push
inc
sar
fistp
(bad)
push
aas
add
pop
sbb
pop
or
push
add
mov
call
and
pop
pop
lea
fisub
xchg
loope
das
adc
add
in
shr
sub
pop
xor
push
dec
lea
loop
iret
sbb
sahf
je
add
inc
jmp
out
out
push
push
call
adc
rcr
push
lea
add
jne
dec
ins
rol
pop
pop
push
mov
mov
push
out
mov
mov
sbb
jne
in
push
xor
nop
pop
fadd
mov
and
test
std
data16
add
cmp
jne
outs
sub
pop
add
ins
add
inc
and
push
push
pop
push
nop
sbb
(bad)
xchg
cmps
and
fld
sbb
push
call
push
daa
push
fsubr
cmp
add
push
push
jmp
ins
jbe
or
gs
or
dec
mov
arpl
pop
ins
cmp
leave
xchg
ins
cmp
mov
cld
outs
call
xchg
xchg
jg
push
push
call
mov
int
or
popa
cmp
xchg
int3
je
xchg
movs
repz
mov
std
add
lock
inc
pop
std
(bad)
jmp
sbb
adc
cwde
jnp
add
mov
in
mov
cli
jg
(bad)
jbe
iret
call
mov
pop
pop
mov
add
call
and
hlt
pop
aad
mov
cs
fcom
ja
test
test
sbb
add
mov
loope
or
mov
sar
fist
push
mov
mov
sub
push
inc
fistp
call
lods
jp
call
mov
mov
ds
dec
(bad)
push
push
rdtsc
mov
mov
inc
jg
fld
sub
int
js
xor
add
jg
pop
adc
mov
cmc
(bad)
out
and
call
mov
jmp
mov
adc
sbb
outs
ret
mov
add
sbb
pop
shl
push
push
call
xor
(bad)
(bad)
inc
cmp
pop
je
cmp
jbe
mov
mov
mov
inc
cmp
jb
push
call
or
pop
mov
mov
faddp
mov
push
add
adc
pop
and
add
ror
push
in
jno
push
push
dec
push
push
call
leave
cmp
pop
sete
mov
scas
xlat
mov
dec
or
call
push
jge
enter
mov
push
add
jmp
add
push
mov
mov
mov
cmp
je
jg
inc
add
cmp
jb
bound
inc
call
loop
clc
(bad)
cli
add
sbb
xor
shr
dec
add
pop
ret
loop
sbb
mov
jg
mov
lea
push
push
loop
ja
aad
clc
je
cmp
call
out
stos
inc
test
jle
ins
call
out
mov
call
push
add
mov
shr
lock
(bad)
jmp
pop
je
mov
mov
push
mov
imul
mov
clc
or
jecxz
jne
(bad)
(bad)
cmp
call
stos
xor
enter
adc
or
add
jmp
test
(bad)
cmc
and
inc
sbb
xor
call
mov
fcom
hlt
sbb
shr
retf
ret
lahf
js
push
jns
push
rol
inc
ja
(bad)
jmp
dec
push
push
push
inc
push
push
xchg
ins
mov
jl
shr
and
lea
or
mov
sti
cli
ret
bound
mov
push
push
pop
in
pop
loopne
adc
ins
xchg
push
pushf
fild
xor
dec
jne
push
mov
add
sub
pusha
inc
mov
dec
aas
or
lock
enter
add
jmp
call
inc
or
enter
into
push
call
pusha
push
push
or
call
sar
out
stos
icebp
or
cmp
jne
dec
jne
mov
dec
push
call
jmp
mov
cs
dec
or
or
adc
push
mov
cs
push
mov
cld
cmps
loopne
jns
mov
je
jmp
cmp
test
mov
mov
sahf
cli
inc
call
aaa
cld
jmp
add
lock
jne
pop
adc
cmp
loop
jmp
popa
sub
or
icebp
push
call
sub
or
ja
jp
jb
push
call
push
push
into
lock
icebp
call
add
push
mov
push
cmp
dec
inc
add
(bad)
jp
test
inc
or
fs
scas
dec
mov
call
add
or
add
bound
stc
jle
add
xor
fild
or
or
retf
jg
inc
xor
fidiv
jmp
call
mov
push
call
cmp
pop
jne
inc
retf
xor
pop
pop
rcl
out
mov
push
push
xchg
mov
repz
inc
cmps
in
xor
fcos
cmps
mov
test
dec
xor
xor
jle
mov
adc
or
push
push
call
loopne
mov
retf
pop
je
add
or
jno
or
fdiv
mov
and
ffreep
leave
adc
lods
ja
icebp
je
lea
popa
cli
(bad)
jle
cmp
jne
cmp
je
mov
mov
call
cld
dec
xor
jge
mov
push
inc
jle
in
push
jmp
lea
jmp
xor
push
push
call
std
popa
mov
mov
call
push
push
jbe
cmp
je
(bad)
cli
xchg
mov
fist
push
or
out
push
inc
(bad)
in
enter
lock
dec
test
mov
iret
call
(bad)
jne
pop
iret
or
ror
fnstenv
cmp
outs
outs
dec
cld
cmp
fild
dec
add
or
mov
add
add
stos
jnp
sti
xor
scas
adc
out
call
leave
mov
out
aas
mul
add
jo
call
lock
jl
inc
adc
or
sub
idiv
jne
je
(bad)
(bad)
call
cmp
jbe
mov
push
mov
call
inc
cmp
jb
mov
adc
scas
and
imul
cmp
sbb
or
or
adc
dec
add
or
adc
and
sti
add
test
cld
cmp
push
inc
add
mov
or
adc
push
mov
shl
push
sbb
stos
ins
les
jmp
outs
mov
push
call
call
xchg
fild
or
add
jmp
add
je
outs
lds
mov
aaa
adc
iret
call
or
pusha
test
je
jb
mov
(bad)
or
(bad)
iret
pop
(bad)
mov
mov
mov
pop
cmp
stos
add
sbb
adc
loopne
cmp
push
mov
add
call
adc
jne
(bad)
mov
sbb
ror
mov
push
cmp
jb
sbb
mov
data16
shl
daa
mov
and
push
and
adc
add
inc
push
mov
mov
je
clc
add
xchg
inc
idiv
daa
(bad)
hlt
cmp
lea
inc
adc
pop
in
test
outs
sub
inc
add
call
mov
sbb
or
jge
push
mov
mov
les
add
mul
add
sub
mov
call
mov
shr
mov
mov
or
inc
aad
inc
inc
call
mov
sbb
je
lods
aas
mov
mov
add
test
inc
or
or
mov
scas
mov
sbb
mov
mov
lea
cld
cs
mov
mov
loopne
mov
sahf
jne
xor
lea
add
inc
inc
test
addr16
ja
cmp
mov
mov
lea
push
push
call
cmp
mov
call
and
call
movs
cmp
or
push
addr16
and
rol
je
mov
call
cli
(bad)
mov
in
cmp
jne
inc
cmp
jb
jp
pop
in
inc
add
inc
clc
das
clc
jl
add
mov
push
add
out
pusha
pop
outs
test
int
xor
shr
add
jle
push
jne
jecxz
call
push
push
repnz
mov
fistp
das
es
shr
cmp
jl
mov
ds
mov
aaa
and
out
mov
sub
mov
add
adc
gs
xlat
pop
mov
aam
pusha
ret
daa
(bad)
mov
into
jne
call
adc
loopne
or
or
push
and
xor
pop
hlt
cmp
aaa
aam
sub
ret
je
mov
xor
(bad)
mov
enter
test
jne
inc
cmp
jl
jmp
mov
es
dec
jecxz
jmp
push
or
mov
pop
ja
adc
(bad)
imul
je
or
lods
rol
lods
mov
in
cli
lock
jg
push
jo
mov
xor
cmp
mov
mov
psllw
xchg
cwde
cwde
or
test
xchg
call
retf
lods
add
jecxz
push
lea
mov
call
xor
pop
arpl
mov
jne
add
aad
es
ret
jne
push
call
adc
push
outs
aas
push
push
call
ja
ret
je
hlt
sbb
mov
mov
adc
push
mov
pop
adc
call
(bad)
fcomip
push
call
movs
call
mov
lahf
call
or
in
fcmovu
or
cli
xchg
add
call
add
or
pop
xchg
pop
adc
mov
and
jmp
pop
adc
mov
out
sub
xor
xor
xchg
push
inc
shr
inc
adc
(bad)
(bad)
jmp
loope
shl
in
mov
call
mov
je
mov
cmp
dec
mov
loopne
mov
mov
pop
jl
out
call
popf
cmp
mov
test
je
or
cmps
mov
cmp
push
push
push
call
aad
fs
add
test
dec
or
scas
mov
xlat
adc
inc
dec
outs
sub
mov
xor
ret
jne
inc
sbb
pop
cmp
je
xor
inc
mov
mov
sahf
add
fwait
sub
push
or
pop
adc
push
inc
cmp
jl
or
dec
in
call
mov
sub
hlt
ret
jne
cmp
inc
jmp
cdq
cs
retf
cmp
jo
mov
adc
lods
in
push
jmp
mov
jne
addr16
mov
pop
mov
ins
in
mov
in
mov
jecxz
shr
dec
ror
call
sar
movzx
xor
call
or
or
xor
call
scas
or
(bad)
dec
inc
test
call
scas
add
adc
sbb
mov
xchg
pop
push
mov
idiv
loop
jecxz
xchg
mov
xchg
and
mov
outs
lock
sub
loope
and
in
ds
call
retf
dec
ins
dec
push
fst
pop
pop
packuswb
hlt
mov
mov
pop
fwait
dec
lea
fisttp
sbb
mov
sbb
mov
jne
pop
call
mov
add
mov
push
test
mov
mov
mov
mov
sbb
pop
push
call
addr16
jne
or
mov
ds
shl
inc
test
shl
fistp
add
test
je
xor
add
add
push
call
mov
les
dec
jmp
and
sub
inc
(bad)
xchg
in
out
sbb
test
mov
mov
call
xchg
inc
or
jo
inc
and
retf
les
cmp
mov
fld
xchg
xchg
dec
inc
and
inc
push
fstp
inc
mov
adc
inc
and
mov
ret
push
jns
mov
inc
or
push
push
adc
xlat
sti
dec
push
adc
fld
cmp
push
add
add
call
sbb
ficom
test
loope
push
add
adc
sar
jo
jb
clc
jmp
add
inc
cmp
outs
pop
mov
push
mov
test
fstp
xchg
add
fstp
cmp
call
(bad)
lock
inc
in
(bad)
std
add
push
rol
je
mov
dec
retf
and
adc
loopne
jp
test
jmp
pop
mov
pop
xchg
mov
lea
cmps
or
and
add
daa
and
(bad)
repz
call
aam
mov
shl
cmp
(bad)
repnz
movs
pop
das
jne
sbb
dec
jb
cld
push
div
out
sub
xor
jnp
mov
sbb
call
fdivr
jae
push
aaa
out
mov
push
xor
out
xchg
mov
sbb
mov
add
and
xor
or
mov
aam
adc
and
int3
popf
inc
jae
and
mov
cmp
js
sbb
mov
in
and
xor
and
mov
call
mov
movs
add
rcl
in
or
xchg
hlt
scas
popa
xor
add
mov
jns
mov
retf
add
dec
scas
ja
(bad)
cli
xchg
mov
mov
sahf
push
xchg
pop
xor
mov
jno
movups
retf
es
mov
jg
inc
loop
mov
je
push
sbb
shl
lock
call
dec
lea
pop
(bad)
mov
push
mov
(bad)
loopne
(bad)
std
pop
adc
int3
mov
fsubr
popa
pusha
jp
jne
inc
daa
aas
push
jne
jns
cmc
fisubr
sti
mov
hlt
mov
sbb
jecxz
sbb
jnp
sub
add
je
in
mov
test
sbb
stos
push
enter
xchg
lods
hlt
psraw
hlt
bound
rcl
ror
loopne
inc
mov
jecxz
loop
inc
adc
xor
sti
call
pop
imul
pop
ja
adc
sub
fcom
adc
xchg
ret
popa
les
fldcw
cmps
sbb
sub
sub
lea
pop
add
sub
sahf
loope
popf
hlt
jge
sub
imul
dec
(bad)
leave
xchg
loope
das
inc
sbb
mov
addr16
ret
dec
mov
xchg
sub
leave
inc
sbb
jmp
jne
aas
jmp
or
push
mov
pop
cmp
ret
outs
call
add
jmp
inc
in
jmp
jb
sbb
jmp
xor
adc
mov
in
ds
inc
adc
mov
push
sub
cdq
shl
arpl
test
and
loope
clc
(bad)
push
lea
call
ins
lods
popa
sbb
and
jne
adc
add
sbb
pop
cwde
and
sbb
icebp
or
js
(bad)
repnz
iret
and
fwait
push
jns
push
adc
mov
sub
in
and
test
out
or
imul
jp
ja
aad
call
getsec
inc
hlt
add
xchg
pop
push
pop
mov
sbb
jle
lea
call
call
jmp
push
out
inc
lods
stc
cli
adc
or
es
fcom
call
call
adc
je
push
mov
call
popf
add
adc
call
lock
lock
aad
add
mov
add
pop
pusha
add
aam
cmp
scas
hlt
mov
mov
ins
and
shl
call
or
mov
jne
test
add
or
xchg
pushf
mov
call
test
pop
mov
xchg
test
clc
icebp
cs
into
call
pop
jb
inc
inc
xchg
dec
aam
test
cli
retf
jne
xchg
js
jo
xchg
imul
sbb
jbe
or
lock
xor
jmp
jne
(bad)
out
ins
push
lea
mov
call
nop
xchg
push
cmp
(bad)
retf
loopne
hlt
jg
jne
mov
mov
push
(bad)
and
call
loope
dec
cmp
add
sbb
aaa
js
je
mov
jge
call
or
mov
hlt
xchg
sbb
push
rol
out
push
jg
ret
aaa
mov
stc
dec
pop
call
(bad)
mov
mov
inc
push
call
or
lea
(bad)
popf
cmp
mov
add
push
ds
repnz
jne
xchg
js
mov
jnp
shl
inc
call
sub
mov
jnp
jno
add
inc
call
pop
cmp
call
jg
fidiv
aam
sub
lock
call
ja
mov
push
call
pushf
call
cmp
cmp
mov
xchg
add
xchg
mov
adc
xlat
iret
sti
add
pop
and
mov
retf
cmp
mov
inc
in
ss
ret
repnz
xchg
bound
es
(bad)
jo
pop
mov
dec
mov
(bad)
jmp
mov
dec
and
mul
adc
stc
je
pop
jmp
cwde
or
out
call
arpl
and
call
aaa
popa
rol
out
dec
out
jno
pop
mov
dec
rcl
je
enter
iret
mov
inc
bound
in
out
call
xchg
adc
jne
mov
push
(bad)
or
call
lock
cmp
push
inc
out
jmp
cmp
mov
aad
sbb
test
adc
mov
pop
pusha
dec
mul
mov
jp
sbb
call
frstor
jb
inc
mov
not
lahf
or
mov
out
hlt
aas
sbb
mov
push
test
push
scas
jb
mov
add
mov
loopne
push
cld
call
adc
cmp
mov
nop
xor
ins
fist
stos
nop
ror
xor
adc
jne
ficomp
retf
call
xor
xlat
mov
xchg
sub
int3
out
(bad)
sub
in
and
add
jne
adc
or
fsubr
pop
out
nop
dec
adc
call
jb
mov
call
in
imul
xchg
xchg
push
sub
lahf
mov
call
pop
mov
cdq
aam
mov
aam
test
mov
xchg
adc
cmps
popa
loope
loopne
add
test
jne
cdq
or
loope
sbb
or
push
dec
loopne
sbb
cwde
mov
jl
mov
cmp
jbe
jle
out
or
je
or
mov
add
push
aam
call
inc
ss
xor
mov
push
call
cs
pop
add
fst
ror
lock
popa
pop
sbb
fstp
hlt
mov
test
lods
fmul
push
mov
mov
push
adc
lock
mov
dec
fsubr
xor
sar
stos
fld
and
fisttp
cmp
pop
in
fcmovnu
je
xor
fdiv
aam
inc
fsubr
cmp
add
cmp
and
call
lea
mov
nop
cmps
fprem
push
call
adc
bound
fldcw
in
xor
inc
mov
cdq
add
aam
stos
(bad)
xlat
pop
mov
sbb
icebp
call
enter
call
add
xchg
enter
or
(bad)
mov
fdiv
call
cli
clc
sti
mov
inc
clc
mov
sbb
mov
mov
scas
(bad)
jge
mov
push
adc
arpl
and
or
lea
test
les
pushf
inc
push
adc
fs
lahf
movs
nop
jmp
popf
imul
movs
cmp
mov
xchg
rcr
sbb
loop
push
cmp
call
pop
pop
dec
cmps
dec
ret
arpl
shl
add
adc
mov
addr16
call
idiv
ret
arpl
fsubr
out
movs
call
adc
sub
hlt
add
pushw
int
nop
rol
and
ret
std
pushf
xor
sub
sbb
mov
adc
fwait
mov
push
jp
call
xchg
jp
sbb
scas
jg
add
and
mov
stos
scas
jmp
mov
add
call
adc
dec
cwde
cmp
test
(bad)
mov
or
enter
(bad)
adc
cmp
push
call
adc
mov
out
leave
xor
out
jno
ret
push
enter
out
mov
adc
push
and
jg
and
or
fs
mov
mov
call
fdivr
inc
adc
add
inc
out
lahf
inc
cmps
jge
mov
jne
mov
aas
jne
jns
call
test
pop
outs
mov
test
push
test
and
rol
fmul
call
out
jmp
add
fs
cmps
push
inc
mov
inc
ss
jo
shl
push
add
clc
aam
and
jo
daa
ss
jle
out
out
enter
or
mov
je
inc
fistp
out
or
call
jo
inc
jle
jle
ins
call
rol
inc
and
cmp
cmps
fwait
mov
mov
push
sti
and
mov
push
and
add
call
xchg
pop
mov
pusha
jmp
adc
js
jle
(bad)
cmpxchg
lods
pop
aam
push
call
inc
nop
imul
call
(bad)
loopne
loopne
movs
push
call
(bad)
add
fisttp
adc
call
dec
push
call
push
int
dec
call
lods
sbb
xchg
stos
(bad)
clc
(bad)
sahf
push
adc
in
jge
xor
gs
xchg
dec
call
jmp
sti
dec
call
icebp
test
(bad)
call
cmp
std
adc
jbe
xor
or
adc
push
ret
fadd
jne
shl
nop
inc
dec
loope
sahf
add
ret
sbb
xrelease
shl
xor
hlt
(bad)
jne
call
xor
daa
mov
push
call
xor
adc
fadd
inc
jb
sbb
aad
xor
enter
add
icebp
imul
pusha
add
and
nop
daa
in
fisub
sbb
inc
out
inc
inc
sbb
ja
mov
lea
call
std
sahf
add
jmp
je
fwait
or
and
lock
and
xchg
shr
mov
je
or
ret
push
pop
ret
mov
dec
neg
inc
sbb
add
and
(bad)
mov
inc
icebp
out
mov
or
ficom
inc
sbb
inc
push
into
stos
scas
dec
and
push
test
(bad)
dec
(bad)
pushf
add
or
je
or
add
dec
push
mov
call
add
push
mov
push
push
adc
or
mov
mov
aas
mov
dec
or
dec
adc
xchg
xor
add
mov
call
loop
cmp
mov
inc
sbb
adc
sub
or
leave
and
jae
pop
add
mov
pop
mov
std
mov
jge
repz
push
mov
fcomip
adc
call
push
(bad)
call
push
mov
cmps
sbb
test
ja
adc
cs
cld
mov
mov
pminsw
clc
popf
add
loop
sti
push
push
push
mov
int
mov
jg
mov
mov
addr16
add
call
pop
pop
jne
fsub
popa
pop
add
dec
or
or
push
fimul
push
dec
adc
mov
pushf
pop
call
push
ins
popf
pop
leave
cli
call
arpl
push
cmp
adc
or
adc
pop
ret
cmp
popa
or
jbe
and
loopne
mov
sub
push
push
call
rol
icebp
(bad)
mov
add
mov
call
aad
stos
pop
lds
xchg
(bad)
call
mov
enter
pop
sub
es
nop
xchg
xor
and
mov
ret
cmp
cli
fisub
aaa
(bad)
stc
cdq
retf
ret
loopne
adc
jl
inc
cld
call
push
enter
jae
scas
jmp
cdq
push
call
pop
call
out
add
test
je
icebp
inc
push
rol
call
push
mov
call
jp
xchg
jmp
mov
push
inc
sar
inc
in
std
sar
xor
ss
push
repnz
push
jecxz
add
xor
inc
cmp
add
loop
adc
or
or
clc
clc
test
xor
or
mov
mov
pop
ja
push
(bad)
cld
stos
test
(bad)
cmp
jne
ja
sub
sbb
or
adc
cmp
and
sub
mov
cld
push
push
add
adc
jae
cmp
hlt
jge
cmc
mov
shl
outs
dec
sub
cmp
cmp
dec
and
add
dec
and
jmp
js
repz
mov
mov
mov
xchg
mov
or
leave
je
shr
add
xchg
dec
and
leave
je
sbb
and
outs
ins
sbb
dec
and
(bad)
jmp
leave
adc
adc
add
(bad)
push
add
rcl
add
push
push
and
mov
(bad)
jg
movs
icebp
mov
xor
mov
cmp
je
add
cmp
sbb
(bad)
in
xor
dec
inc
add
(bad)
jne
sbb
mov
mov
jmp
cmp
ss
add
mov
pop
mov
ja
inc
and
js
add
dec
cs
xor
das
xor
jge
sbb
push
cli
hlt
inc
pmuludq
call
mov
(bad)
mov
inc
mov
sar
push
add
push
mov
je
popf
lock
push
out
add
shr
push
mov
call
cmp
adc
(bad)
in
adc
mov
mov
jl
call
inc
lea
lea
push
loopne
jecxz
sbb
je
push
push
mov
(bad)
push
push
mov
fadd
(bad)
call
mov
mov
gs
add
and
jle
mov
sbb
pop
(bad)
push
inc
mov
repnz
(bad)
jg
jnp
call
or
call
add
inc
cmp
jl
pop
int3
mov
mov
push
call
mov
fstp
mov
and
and
imul
inc
and
call
rol
sahf
iret
ret
pop
lods
in
sub
add
mov
fstp
loope
cmc
outs
jg
inc
jo
rcl
popa
xor
(bad)
cmp
mov
lea
push
push
call
adc
jne
(bad)
or
push
push
hlt
std
mov
cmp
jmp
sbb
addr16
hlt
xchg
adc
loopne
inc
clc
xor
fstp
call
in
cmp
fwait
in
inc
sub
out
sbb
dec
movs
clc
or
and
jo
xchg
pop
push
call
setg
jl
in
pop
out
adc
(bad)
fldz
mov
shl
dec
es
push
call
and
call
nop
pop
call
scas
mov
ret
sbb
mov
add
in
fucom
retf
imul
pop
fucom
or
je
iret
call
add
and
inc
fadd
fldcw
(bad)
add
test
mov
test
dec
push
push
push
pusha
pop
push
out
xchg
jae
pop
add
mov
and
fdiv
dec
mov
and
xchg
inc
bound
jbe
sar
push
call
ror
mov
outs
xor
lock
xor
push
push
push
arpl
cmp
push
lea
call
cld
inc
icebp
push
sar
jne
lods
or
imul
(bad)
cli
shl
jg
enter
repz
jmp
push
mov
push
push
mov
call
dec
sbb
enter
icebp
(bad)
jmp
cmc
sub
popf
loopne
pop
fdiv
jg
push
lods
xor
(bad)
jle
ret
push
add
and
iret
dec
mov
mov
or
lock
xor
call
mov
jge
push
call
cmps
add
movs
or
inc
xor
call
gs
mov
push
jl
sub
cmp
sbb
add
pop
dec
mov
xor
mov
xor
and
dec
fcmovu
bound
outs
mov
fs
add
sbb
fadd
mov
aaa
call
push
push
add
scas
pop
sbb
push
sub
(bad)
je
cmp
inc
fst
fadd
call
cmovns
sub
adc
ins
add
sbb
push
call
adc
sub
jle
mov
sub
push
adc
pop
cmps
test
aaa
into
mov
jo
mov
int3
xlat
or
int3
mov
dec
cs
shr
stos
cmp
cmps
retf
adc
xchg
cmc
xchg
ret
adc
aad
pop
and
into
clc
xchg
jnp
cdq
sahf
jbe
mov
mov
cdq
in
dec
pop
push
mov
push
mov
xchg
iret
cmp
mov
fdivr
call
pusha
sbb
stc
mov
sub
add
fstp
retf
je
cmp
daa
retf
je
sbb
lock
popf
xchg
daa
icebp
jmp
les
ja
mov
cmp
mov
je
xchg
push
inc
mov
xor
or
call
je
mov
call
pop
pop
jb
sbb
jae
fyl2xp1
and
imul
and
xchg
lods
sbb
add
enter
push
pop
cs
sub
pop
movs
jno
and
pop
dec
inc
call
add
call
pusha
cmc
fwait
in
push
call
enter
fs
sbb
call
push
data16
not
sahf
xor
xchg
aam
push
sar
loope
pusha
mov
add
add
inc
push
neg
xor
push
xor
pop
lea
jmp
or
jmp
call
test
je
cmp
jne
mov
mov
jg
push
call
jmp
cli
mov
cmp
sub
leave
jmp
cmp
je
cmp
jne
stos
dec
push
pop
daa
cmp
mov
(bad)
jg
sbb
hlt
sbb
(bad)
(bad)
jg
inc
in
add
add
mov
psubq
sti
mov
inc
push
lea
call
mov
push
sbb
push
sahf
xor
lea
call
sub
jg
cld
push
call
and
or
mov
jg
in
mov
icebp
pop
and
sbb
sub
test
lea
push
xor
sub
adc
inc
icebp
and
push
sbb
retf
mov
jg
(bad)
in
arpl
out
call
or
mov
je
or
call
jno
push
ror
movs
pop
adc
add
ins
add
push
popf
inc
out
clc
ja
and
push
push
mov
call
stc
mov
sti
popa
pop
inc
cs
repnz
mov
call
aad
xor
and
adc
repz
fld
and
dec
imul
ret
wrmsr
push
call
sub
loop
mov
sbb
or
fld
adc
fld
(bad)
dec
pop
xchg
or
pop
lea
mov
rep
pop
outs
add
mov
jno
cmp
loop
xchg
(bad)
jne
push
call
push
retf
idiv
aaa
cmp
pop
outs
arpl
xor
pop
(bad)
ja
hlt
jmp
fld
push
fmul
out
jle
push
dec
stc
mov
jo
call
cmp
mov
inc
xor
cmp
les
mov
call
cmp
les
add
jne
or
jmp
cmp
fimul
jmp
cmp
jne
or
sub
add
cmp
push
xor
mov
inc
adc
jne
or
and
push
cmp
retf
sbb
push
sub
cmp
push
into
call
dec
bound
jmp
cmp
or
mov
iret
ja
mov
ja
das
cmp
outs
push
(bad)
fild
fstp
jmp
(bad)
fld
fistp
fld
push
ret
or
add
pop
fwait
push
and
and
mov
and
and
pop
or
mov
sbb
and
call
pop
adc
cdq
adc
jmp
xchg
fwait
add
push
int3
fist
shl
push
call
jo
pop
push
push
or
data16
fdiv
and
xor
data16
repnz
sbb
fmul
call
std
sbb
fmul
push
call
ret
in
call
cmp
leave
or
clc
ja
fmul
cmp
sbb
push
fstp
call
mov
cmp
femms
or
jecxz
inc
adc
aam
sub
(bad)
icebp
dec
cs
adc
(bad)
jmp
dec
addr16
pop
in
mov
adc
add
and
jo
push
pslld
dec
add
inc
repz
leave
push
out
(bad)
ja
xor
inc
adc
lock
mov
sbb
je
mov
pop
int3
pop
pop
daa
inc
add
cwde
adc
mov
out
out
xchg
sbb
inc
jae
idiv
pusha
fistp
pop
mov
pop
repnz
aaa
(bad)
dec
sub
fld
cmp
call
push
and
sbb
inc
xchg
shr
cmps
shl
cld
lahf
call
popf
test
(bad)
sbb
inc
and
and
outs
loope
jbe
lods
mov
sbb
jnp
cmp
daa
rol
in
ja
sar
cmp
cmc
inc
fdivr
data16
sbb
pop
and
jns
xor
sub
pop
js
push
or
or
sar
cmps
and
pushf
cld
xchg
je
mov
(bad)
inc
jns
ror
xor
add
into
leave
les
fld
fild
inc
aad
in
out
ds
je
push
pop
imul
je
pop
xor
mov
cs
sub
push
xchg
mov
adc
js
push
fadd
outs
loopne
push
arpl
fadd
fstp
je
inc
fisttp
scas
(bad)
call
fld
fstp
fld
fstp
fld
call
in
add
inc
lock
fst
fstp
fstp
cmc
sub
sub
fld
cmps
pop
inc
add
jp
sub
cmp
inc
loopne
jnp
popf
inc
fsub
ds
xlat
frstor
loop
je
fsub
inc
xchg
cld
es
add
pop
dec
pop
inc
add
(bad)
std
setle
push
call
fistp
fsub
fnsave
inc
cmp
push
popa
ja
cmp
pop
inc
into
inc
stc
call
mov
in
fstp
loopne
in
lahf
pop
call
pop
nop
sbb
mov
loope
sub
outs
inc
inc
not
xchg
fld
jmp
and
movs
cmp
clc
cmps
mov
jnp
movs
sub
rol
sbb
jne
sub
adc
in
and
jmp
lods
sub
jmp
xchg
shr
ficom
inc
pop
xor
jecxz
call
movs
es
fistp
bound
ror
fadd
xor
pop
or
std
jecxz
cmp
xchg
sbb
inc
pop
out
bnd
mov
push
clc
fsub
bound
mov
inc
jmp
xor
lds
(bad)
or
int3
dec
movs
sub
ret
mov
movs
jg
div
push
stos
call
fmul
hlt
xchg
dec
fistp
test
sub
pop
push
adc
sub
(bad)
pushf
ins
(bad)
push
adc
call
sub
xchg
lea
(bad)
xlat
pop
push
(bad)
call
inc
inc
add
fs
push
out
out
int3
mov
pop
in
ret
mov
cld
(bad)
call
mov
mov
jae
mov
sbb
jns
dec
mov
xor
pop
and
shl
mov
and
mov
add
test
pusha
sub
unpcklps
and
aam
ja
and
or
icebp
xchg
aam
fsub
fstp
(bad)
call
fld
fadd
fld
fadd
fstp
fadd
fstp
int3
fmul
idiv
lods
aas
push
(bad)
fstp
fst
push
mov
inc
fdivr
sbb
jno
in
or
jle
hlt
ret
lds
fucomp
push
aas
pop
(bad)
gs
fld
movs
loope
(bad)
fisubr
push
hlt
fld
xor
js
add
push
lds
retf
inc
clc
mov
stos
(bad)
xor
into
sub
push
call
mov
in
sbb
xor
popf
in
xchg
and
cld
call
retf
(bad)
push
jle
fwait
pushf
pop
fwait
mov
(bad)
hlt
fadd
pop
in
adc
fld
add
dec
popa
pop
mov
jmp
aam
lods
fld
mov
xor
and
inc
mov
call
dec
push
cdq
dec
mov
pushf
jae
xchg
sbb
pop
adc
scas
sbb
aaa
aam
pushf
jae
mov
pop
xor
adc
dec
ds
fs
pop
pushf
jle
fdivr
fstp
enter
adc
ss
nop
jg
int3
xchg
loope
xor
aam
add
mov
loopne
adc
movs
ret
loope
dec
fidivr
aam
push
xchg
sti
clc
call
lds
cmp
mov
push
pop
movs
and
mov
lds
xor
jne
mov
cmp
xor
inc
test
jne
call
gs
dec
add
xchg
add
cmp
mov
jbe
push
inc
cmp
retf
call
adc
or
add
pop
fucomp
dec
add
add
call
dec
mov
mov
leave
cmp
jne
das
outs
and
add
dec
or
sub
js
or
js
inc
js
pop
(bad)
dec
pop
sbb
add
mov
cmp
jle
mov
and
inc
add
or
jmp
cmp
test
add
inc
inc
add
inc
inc
mov
pop
add
push
mov
hlt
imul
mov
adc
or
inc
adc
test
mov
leave
je
mov
sahf
aad
outs
add
out
stos
pop
push
test
add
shr
push
call
pop
pop
mov
mov
(bad)
lock
push
cld
dec
mov
lea
rep
mov
jmp
fld
push
add
sub
pop
and
pop
mov
push
call
clc
(bad)
mov
(bad)
cmp
jle
or
push
dec
pusha
mov
mov
push
shl
call
cdq
retf
or
add
add
int3
mov
add
iret
call
add
adc
push
fld
mov
mov
pop
xor
mov
aas
cld
(bad)
out
loopne
dec
test
jg
xor
inc
mov
cdq
idiv
add
sbb
inc
xor
mov
add
dec
sbb
nop
jmp
lock
idiv
cmp
lea
setne
push
push
lea
jg
fcom
add
mov
xor
push
mov
addr16
push
mov
inc
sub
add
scas
movs
outs
cmp
ret
xchg
add
leave
push
mov
mov
mov
inc
pop
scas
push
lods
leave
push
push
push
sbb
jae
sahf
jg
mov
pop
cmp
inc
inc
inc
pop
jge
push
int3
lea
call
and
lea
iret
mov
jne
jne
jp
jle
pop
sub
dec
fld
dec
pop
jb
inc
cmp
inc
xor
fld
out
nop
xchg
cmp
adc
les
je
mov
push
repnz
pop
add
addr16
mov
push
nop
xchg
mov
punpcklwd
mov
call
xor
fcom
addr16
jle
inc
xor
add
cmp
ins
push
int
loopne
out
or
pop
scas
sub
mov
xor
loope
ret
inc
inc
test
sbb
popa
imul
sub
and
fcom
sbb
pusha
inc
dec
repnz
pop
int
or
add
dec
xchg
aas
aaa
mov
(bad)
inc
pop
stos
in
and
mov
or
and
fwait
imul
xchg
pop
sbb
xacquire
add
enter
in
inc
and
or
and
add
xchg
add
push
or
(bad)
xchg
sbb
ret
ds
pop
and
sub
adc
fnsave
in
test
and
aad
and
dec
push
mov
xchg
or
call
pop
ret
pop
fstp
and
sub
call
pop
sub
sub
cmp
push
mov
or
adc
sti
jo
daa
rol
adc
inc
iret
or
scas
xchg
js
leave
mov
mov
lods
out
lea
push
push
or
in
out
mov
pushf
sub
cmp
repz
clc
push
push
call
mov
enter
inc
xor
xor
das
sub
fld
fld
fcomp
adc
call
mov
call
ja
xchg
or
or
call
and
fmul
or
or
sti
neg
enter
sbb
call
inc
sbb
add
ins
or
bnd
and
out
xchg
push
pop
lea
es
fld
push
or
fsubr
inc
sub
mov
call
cmp
lock
cmp
dec
add
scas
mov
lock
sti
sub
cmc
fiadd
inc
and
das
mov
and
mov
ror
ror
test
je
cwde
jo
inc
pop
mov
push
push
fucomi
sub
dec
add
out
mov
call
and
(bad)
jmp
(bad)
mov
mov
cmp
jae
mov
pop
ret
cmp
adc
inc
adc
mov
pop
dec
mov
(bad)
dec
push
mov
pop
pop
inc
or
fisub
add
sahf
dec
adc
or
mov
out
push
xor
dec
clc
mov
call
call
and
pop
add
adc
(bad)
adc
sbb
push
sbb
je
or
into
call
mov
in
push
xor
inc
push
mov
sub
add
test
jne
xchg
and
jl
mov
js
xor
jmp
add
test
aaa
hlt
(bad)
jmp
cmp
mov
sbb
into
add
iret
call
push
aad
jb
loop
push
pop
and
repz
jnp
xor
jmp
adc
push
call
xchg
xor
push
push
shr
fisttp
pop
pop
pop
ret
sbb
add
sbb
pop
push
call
xchg
mov
push
call
adc
push
fsubr
daa
push
je
push
push
(bad)
inc
sti
sbb
jl
std
scas
and
xchg
sar
scas
or
out
mov
mov
cmps
or
movs
cmp
jecxz
mov
std
mov
jge
mov
jne
das
sbb
sti
pop
scas
loope
js
xor
mov
mov
out
push
pop
fadd
hlt
into
lods
sbb
shl
inc
cld
pop
inc
add
leave
cmp
pop
mov
mov
mov
push
and
test
and
jl
cmp
jge
mov
test
jl
cmp
jge
mov
sar
sbb
inc
sbb
scas
repnz
cmp
mov
jne
sbb
(bad)
add
or
mov
jmp
idiv
dec
gs
inc
cmps
and
pop
sub
sbb
es
cmp
jne
cmp
stc
call
mov
inc
std
aaa
jp
sar
jge
push
fwait
jno
sbb
add
repnz
jno
imul
mov
mov
add
cmp
(bad)
jle
pop
lea
jne
mov
adc
mov
adc
push
call
mov
dec
inc
fdiv
lea
push
lea
fnstenv
and
push
add
rcr
les
bound
sub
jl
outs
or
icebp
fsubr
jne
nop
jmp
mov
mov
xor
call
addr16
and
hlt
(bad)
mov
mov
data16
or
clc
cld
push
call
jl
adc
adc
push
call
repnz
sub
aas
push
adc
or
pop
icebp
loope
inc
or
call
lea
(bad)
out
add
movs
movs
movs
lea
push
movs
call
xor
mov
mov
jne
jne
je
lea
leave
(bad)
adc
add
data16
mov
jne
pop
mov
dec
mov
call
push
in
(bad)
and
rol
push
bound
mov
push
sub
mov
mov
sub
mov
sub
call
(bad)
aaa
add
call
jmp
add
add
push
add
push
add
push
call
inc
fcomp
fwait
mov
aam
mov
or
call
and
inc
mov
mov
add
lea
push
lea
ja
scas
jbe
loopne
add
push
or
push
mov
mov
call
imul
sbb
(bad)
mov
or
das
pop
retf
mov
pop
shl
sub
push
call
cmc
cdq
cmp
pop
test
sahf
(bad)
es
or
pushf
dec
jo
adc
jo
mov
movs
call
push
or
push
(bad)
sbb
jmp
push
lea
rep
push
call
fs
lds
jg
xor
adc
fbld
mov
adc
sbb
fsubrp
sub
adc
push
call
sbb
lea
lock
fcom
mov
das
inc
fcom
dec
and
pop
hlt
mov
sbb
stos
or
out
(bad)
jg
repz
sub
add
sbb
sub
sub
jecxz
(bad)
call
pushf
enter
xchg
in
and
(bad)
fnstcw
cmp
add
rcl
sti
cmp
adc
cs
call
jg
fchs
push
call
loopne
jge
in
cmp
and
dec
imul
inc
call
adc
xor
test
xlat
mov
je
test
(bad)
arpl
inc
mov
dec
sbb
sub
mov
mov
lea
adc
mov
pop
fadd
mov
jmp
rol
add
pusha
lods
ja
or
movs
ins
pop
or
sbb
pop
push
or
je
push
inc
mov
dec
scas
inc
(bad)
cmp
jne
push
inc
mov
frstor
jg
inc
cld
cmp
jg
jne
sub
push
inc
clc
cmp
jle
push
call
out
shl
daa
mov
mov
push
push
inc
jl
pop
push
out
cmp
sub
push
test
(bad)
out
dec
call
push
mov
mov
int3
push
push
push
call
xor
neg
add
cld
imul
leave
arpl
or
into
xor
inc
out
cmp
sbb
cmps
or
cdq
ss
push
push
sbb
and
push
call
and
inc
adc
cmp
push
call
dec
daa
xchg
and
lahf
adc
clc
lock
mov
imul
push
or
dec
stos
and
fwait
push
leave
push
aam
call
jae
sbb
xchg
xor
lea
fldenv
aaa
fs
or
leave
push
mov
mov
sbb
inc
dec
add
mov
les
cmp
adc
in
call
jl
int
mov
xor
addr16
call
jp
adc
jne
mov
out
(bad)
out
(bad)
in
sub
mov
mov
imul
xor
loopne
push
mov
call
(bad)
jb
mov
sti
jg
push
push
call
sar
es
jle
mov
xlat
sbb
daa
mov
jl
fiadd
lods
push
call
sti
sbb
push
call
idiv
dec
or
je
adc
div
mov
xchg
adc
mov
mov
fisub
pushf
mov
cmp
adc
ds
mov
push
call
add
lea
or
mov
xor
sbb
call
xchg
dec
fwait
push
call
dec
scas
ja
ror
jne
or
jbe
ror
mov
pushf
jmp
push
push
call
clc
add
dec
xchg
addr16
jle
sub
js
cmp
inc
jle
(bad)
call
daa
and
jne
imul
pop
jmp
js
push
or
inc
or
jge
mov
mov
jl
ror
cmp
shr
add
lahf
jl
dec
inc
call
inc
xor
lea
sub
hlt
push
mov
ins
inc
in
fisubr
mov
jge
and
adc
sub
inc
ins
call
ja
les
mov
add
jle
xchg
add
gs
sub
sbb
mov
setne
fnstsw
mov
jl
inc
inc
sub
inc
pop
jmp
mov
jbe
test
ins
push
mov
lods
push
inc
adc
adc
out
mov
cmp
mov
lea
push
lea
sbb
adc
sub
mov
add
push
call
mov
lea
test
sar
fild
imul
fstp
cdq
push
pop
idiv
push
mov
fild
or
call
xor
fmul
push
cmovo
sbb
mov
lea
pop
sub
movs
dec
dec
jo
popa
mov
mov
push
call
cmp
adc
(bad)
fnstsw
xor
inc
cmp
mov
je
lea
sub
add
jne
mov
mov
(bad)
je
mov
(bad)
loopne
push
push
scas
add
sub
xor
mov
cs
dec
js
cmp
lea
push
call
push
pushf
inc
lea
lea
sbb
sbb
jne
mov
test
and
or
jne
call
cwde
jmp
pop
add
dec
sbb
in
mov
mov
mov
ret
sub
adc
call
test
fimul
mov
xor
pop
pop
outs
rol
jne
lock
dec
push
pop
adc
pop
or
inc
mov
pop
or
retf
or
clc
sbb
dec
shl
push
adc
sbb
sbb
xor
cmp
xor
adc
stos
pop
pop
aam
mov
imul
xchg
jne
rcr
or
sbb
inc
adc
enter
inc
add
dec
lock
push
adc
aaa
hlt
rol
jbe
pop
sbb
enter
jmp
lock
call
je
pop
push
push
lock
dec
js
repnz
or
xor
lock
or
pop
adc
enter
mov
call
add
call
inc
jmp
cmps
(bad)
and
call
add
sbb
in
daa
repnz
and
and
pop
ror
push
lds
and
repnz
mov
or
mov
push
call
mov
and
xchg
imul
xchg
loope
dec
sbb
pushf
pushf
nop
or
mov
mov
or
cmp
hlt
xlat
and
aad
sbb
lods
mov
mov
mov
icebp
call
sbb
aam
mov
push
outs
cmps
sub
in
lods
es
test
mov
aad
jge
hlt
jbe
xor
push
icebp
aaa
pop
mov
call
pop
test
push
xchg
jae
inc
dec
lock
shl
call
push
out
push
inc
pop
cmp
outs
add
mov
jb
cmp
push
push
call
lock
xchg
jbe
call
jmp
loop
inc
icebp
push
call
mov
mov
jne
adc
ds
adc
call
clc
adc
mov
xor
sbb
push
rcl
call
mov
and
rol
popa
adc
fbld
jge
call
adc
pop
adc
jnp
cdq
fsubrp
add
fmulp
mov
adc
cmp
mov
fldenv
cmp
push
mov
sbb
mov
xchg
(bad)
enter
push
dec
mov
pop
fnstsw
inc
mov
sbb
mov
pop
fild
sub
(bad)
cld
adc
lods
mov
fnstcw
fbstp
mov
out
sub
pusha
gs
push
cmps
or
xchg
lea
mov
pusha
scas
and
mov
fwait
sbb
out
cmp
jb
or
push
popa
pop
dec
outs
dec
pop
outs
fld1
jno
or
dec
dec
xchg
jne
sbb
jne
xchg
dec
or
sub
and
adc
and
daa
dec
pop
clc
lea
push
call
adc
mov
aam
push
push
fld
and
cmps
mov
mov
or
(bad)
call
push
mov
push
push
ret
into
mov
jg
dec
mov
mov
inc
mov
xchg
add
mov
xor
mov
or
push
inc
test
and
add
aas
add
sub
adc
dec
inc
mov
inc
(bad)
jmp
mov
sub
mov
xchg
add
add
rol
pop
jl
push
push
push
pop
sbb
xchg
xor
loop
loope
push
shr
and
stos
or
lea
stc
push
(bad)
xchg
sbb
inc
in
or
sub
add
mov
jne
push
call
sbb
call
test
mov
call
mov
sar
clc
jbe
mov
mov
push
lea
cmp
outs
jo
daa
cld
call
lea
test
mov
mov
ja
hlt
shl
shl
add
add
popa
icebp
dec
dec
jne
mov
cmp
je
out
cli
ss
cs
aas
and
test
fld
jbe
(bad)
or
enter
rcr
add
adc
dec
inc
jl
cld
jne
fstp
fstp
in
pop
je
mov
jmp
out
and
sub
jnp
ja
stos
iret
jns
hlt
and
cmp
jle
push
cld
pop
add
iret
mov
push
rcl
or
add
mov
inc
mov
push
dec
inc
mov
push
mov
sbb
pop
inc
mov
add
cmp
jl
mov
shl
jge
jmp
fsub
icebp
popa
pop
push
repz
sbb
clc
mov
lea
push
push
push
dec
stos
fwait
inc
add
fstp
push
call
test
hlt
(bad)
push
mov
call
lahf
adc
cwde
fcom
adc
fcom
or
pop
leave
ret
mov
popa
xchg
shl
xchg
lock
cmp
hlt
out
nop
xchg
adc
retf
call
add
in
(bad)
jne
cmp
or
(bad)
jne
xchg
xor
shl
inc
add
add
fcom
call
sar
push
fsubr
push
jb
mov
outs
push
clc
add
mov
push
add
add
mov
inc
div
cld
lea
mov
sub
push
int3
call
inc
inc
call
ret
xchg
fstp
call
aas
or
ret
popa
popa
push
sar
int
push
test
mov
enter
add
and
mov
call
xchg
add
movs
fwait
jbe
cld
or
sbb
push
mov
pop
dec
jg
jl
mov
call
(bad)
pop
pop
arpl
sar
push
call
in
jge
xchg
in
xchg
and
ss
out
inc
in
mov
lock
inc
hlt
pushw
dec
jmp
sub
mov
xchg
aaa
mov
nop
jne
inc
jmp
cmp
or
jmp
cmp
push
cmp
jg
jmp
cmp
add
ja
and
setne
xor
ror
sbb
aaa
mov
jl
call
fsubr
call
jg
hlt
les
fmul
je
add
scas
mov
mov
dec
mov
pop
jmp
dec
mov
add
cld
add
add
push
cmp
cmp
dec
mov
and
push
push
adc
dec
cmp
nop
sub
push
aam
stos
adc
call
mov
mov
ret
or
cmp
je
sub
je
dec
je
mov
jne
mov
or
cmp
add
test
inc
add
add
aad
sti
aaa
xchg
jge
inc
dec
dec
mov
push
dec
je
mov
sub
inc
jge
or
push
out
sub
sbb
mov
fs
jmp
dec
or
mov
call
push
add
inc
push
sbb
outs
add
pop
cli
int
dec
inc
dec
push
sahf
mov
xchg
mov
lea
push
shl
push
cmp
ss
jo
push
fistp
sub
dec
or
movs
or
xor
aas
(bad)
je
mov
idiv
aaa
sbb
ror
inc
sbb
push
call
mov
lock
call
inc
adc
retf
aad
enter
lea
pop
sbb
popf
pop
mov
adc
push
push
push
mov
jmp
xor
jne
call
lea
arpl
mov
dec
sub
leave
jne
test
inc
cli
mov
inc
jle
shl
call
call
(bad)
(bad)
jmp
clc
xchg
xor
(bad)
jmp
add
clc
aaa
inc
je
mov
mov
mov
test
ret
dec
call
mov
test
inc
pavgb
fwait
or
push
call
adc
movs
push
(bad)
mov
call
lds
dec
cdq
(bad)
mov
adc
cmp
inc
xchg
add
mov
jle
add
push
test
jne
aam
inc
jle
test
jne
ret
inc
lea
pusha
xchg
jge
je
cs
outs
add
test
mov
push
call
push
sar
cmp
jne
cmp
dec
mov
shl
adc
sbb
mov
push
push
cmp
test
bound
dec
push
rol
push
mov
call
xor
hlt
out
scas
adc
(bad)
enter
mov
dec
sbb
int
retf
mov
push
pop
push
call
sbb
push
call
je
and
inc
inc
jmp
cmps
push
mov
call
loope
mov
push
push
pop
cdq
idiv
push
mov
push
xor
call
ror
sbb
mov
cmp
push
mov
mov
loope
into
push
call
mov
push
push
pusha
add
cmp
mov
test
inc
sub
push
inc
add
or
mov
call
xor
cmp
lea
setne
(bad)
push
stos
inc
add
call
(bad)
dec
sub
push
pop
je
dec
je
dec
je
dec
jne
push
lea
jmp
push
out
or
jmp
push
or
sbb
sub
(bad)
cld
or
and
dec
and
leave
push
(bad)
cmp
xor
dec
jle
call
test
mov
call
call
into
push
mov
loope
pop
and
jo
or
inc
xlat
jge
out
sar
call
enter
sub
or
mov
dec
cdq
mov
call
push
jmp
add
clc
or
(bad)
jmp
push
call
mov
jmp
or
mov
(bad)
mov
pop
sub
add
idiv
cmp
pop
jge
je
and
jge
pop
sbb
xor
in
movsx
ret
xor
sti
sbb
idiv
adc
add
add
loope
dec
cmp
pop
jne
and
inc
xchg
adc
mov
xor
(bad)
popa
lock
inc
pop
icebp
inc
mov
jp
call
push
push
out
and
push
aas
or
imul
pusha
outs
mov
add
push
push
pop
sbb
xchg
and
dec
mov
jnp
jge
xor
mov
jge
movs
in
add
xchg
popf
xor
inc
pop
imul
mov
sub
pop
data16
cmp
jo
je
add
add
cmp
jg
ja
add
dec
push
aad
push
call
cwde
lock
adc
mov
cmp
inc
mov
dec
enter
inc
enter
pop
jl
cmp
cmp
add
outs
enter
rol
icebp
jns
ja
or
or
call
daa
or
mov
mov
push
pop
push
ret
mov
mov
mov
repnz
push
call
cmp
push
cmp
aaa
nop
ret
mov
in
push
push
jmp
adc
jmp
into
(bad)
cmps
mov
call
and
js
xchg
gs
and
pop
(bad)
stc
js
enter
mov
call
in
mov
push
and
xor
mov
mov
call
out
aam
lock
mov
and
sub
jae
inc
pop
mov
sbb
sti
add
dec
add
mov
mov
scas
fwait
jle
cdq
cmp
jne
mov
rol
call
pop
mov
ja
adc
pop
dec
sub
push
call
(bad)
mov
and
inc
sbb
sbb
mov
add
jbe
dec
xor
mov
cmp
push
sbb
mov
xchg
jmp
jmp
ret
mov
loopne
push
outs
(bad)
push
cmp
call
fs
out
mov
jae
or
fwait
push
add
dec
add
mov
js
mov
pop
loopne
add
pop
call
or
lahf
or
or
cld
push
call
adc
std
(bad)
js
add
and
mov
es
push
push
call
ja
je
(bad)
fcomip
mov
jp
push
push
push
push
push
push
push
push
mov
jmp
jne
call
and
jns
or
fbld
aam
clc
call
sbb
fs
or
xchg
add
test
add
out
call
push
mov
push
mov
sub
sbb
icebp
and
mov
push
sub
sbb
les
(bad)
push
pop
inc
rcr
inc
dec
push
and
lods
mov
jae
mov
mov
cmp
stos
scas
xor
pop
jns
sbb
jl
jl
push
and
add
push
push
push
aaa
call
iret
dec
push
sbb
rol
push
in
jns
and
mov
out
dec
sub
aad
dec
fsub
mov
dec
icebp
mov
call
out
mov
mov
mov
and
call
mov
cdq
jmp
femms
sbb
adc
sub
mov
or
fs
adc
fist
adc
jl
out
inc
add
push
(bad)
inc
or
push
push
add
test
ins
scas
xchg
cmp
je
ins
test
dec
sbb
xor
dec
sub
out
xchg
mov
inc
shl
retf
sbb
mov
jle
xor
push
or
call
cmp
and
call
mov
ja
mov
jmp
mov
push
push
jmp
sbb
push
push
mov
popa
sar
fmul
xchg
mov
jno
sub
add
inc
ret
jbe
mov
and
pushf
sub
push
(bad)
xchg
stos
push
outs
sub
call
punpckldq
push
sar
mov
or
mov
sub
lds
sbb
inc
call
je
addr16
sbb
into
call
sar
sbb
adc
jo
mov
scas
mov
inc
xor
inc
into
dec
sbb
jp
repnz
out
add
pop
pop
push
dec
test
je
call
data16
jg
rcr
jmp
push
cwde
cmp
fisub
into
pop
jmp
jo
fld
or
xor
je
pop
fidiv
sub
je
push
inc
add
dec
aaa
popa
push
cli
call
stc
mov
jle
mov
cli
dec
pop
push
call
out
cmp
and
push
mov
push
push
pop
(bad)
outs
stos
inc
xchg
mov
add
jae
iret
es
push
sbb
mov
test
ins
and
(bad)
dec
dec
mov
push
push
push
call
push
call
iret
and
pop
sub
push
push
popa
jmp
xor
nop
(bad)
in
mov
fild
call
cmp
jne
xor
(bad)
pop
pop
add
adc
jne
mov
(bad)
or
pop
stc
push
inc
cmp
(bad)
sbb
cwde
(bad)
pusha
scas
jmp
adc
or
inc
ins
call
mov
ins
xor
push
inc
push
mov
or
out
out
pop
dec
add
dec
test
mov
add
add
push
push
shr
mov
pop
pop
popa
dec
inc
fdivr
call
pop
add
pop
(bad)
aaa
dec
mov
cld
jne
cdq
pop
jo
stos
nop
cld
mov
push
mov
dec
jb
test
mov
in
pusha
or
jae
rcr
mov
scas
fild
addr16
dec
cld
push
call
pop
stc
loopne
or
cmp
inc
test
test
mov
inc
test
add
cli
push
call
sbb
pop
sti
add
jo
(bad)
lock
xor
mov
je
jb
adc
adc
inc
cmp
and
aas
arpl
(bad)
(bad)
jle
adc
pop
or
jns
inc
pop
add
cmp
mov
int
test
scas
sbb
and
push
push
call
xchg
clc
mov
shr
and
pushf
or
inc
pop
push
lea
mov
jge
movmskps
mov
push
push
call
xchg
jnp
push
xor
cwde
test
sar
jecxz
sti
mov
push
push
call
(bad)
ins
push
call
push
xchg
and
cmp
xchg
sti
ror
jae
ror
add
and
in
and
dec
stc
mov
loop
and
push
js
sbb
stos
hlt
iret
xor
call
adc
adc
iret
call
clc
add
js
mov
sub
or
shl
in
xor
mov
push
lea
inc
jl
retf
adc
inc
add
push
int3
icebp
adc
nop
xchg
dec
adc
pop
call
call
push
call
jmp
(bad)
pop
and
push
push
call
mov
call
cmc
or
push
std
or
dec
inc
shl
fld
sub
add
std
push
mov
call
stc
lock
test
scas
add
iret
mov
mov
push
add
movs
xchg
adc
loopne
loopne
je
sub
fbstp
jbe
dec
and
inc
ret
and
fcom
or
leave
xor
int3
cmp
cmps
scas
and
pop
push
mov
add
lock
test
push
sbb
jecxz
pop
add
ja
mov
push
push
push
call
add
std
dec
daa
stc
cmp
add
xor
adc
mov
rcl
(bad)
clc
sahf
cmp
clc
loope
ret
inc
sub
pop
push
call
or
div
add
inc
ficomp
inc
jno
dec
sar
or
iret
call
sub
mov
sbb
push
push
call
dec
add
call
or
xor
push
lods
xor
inc
mov
push
rol
push
mov
call
loopne
add
mov
lea
push
push
out
(bad)
ja
cmp
add
leave
ins
icebp
push
ins
jno
(bad)
fld
mov
add
add
call
psubsb
retf
lock
pusha
add
pop
mov
or
push
pop
add
inc
pusha
out
int3
std
add
push
call
push
push
call
cld
jne
pop
loope
sub
call
add
das
push
aam
push
xor
cmp
jne
cmp
jne
cmp
je
mov
mov
cmp
sub
mov
cmp
mov
lds
cli
cmp
jne
push
add
shl
sar
outs
cli
call
push
push
mov
push
push
push
mov
call
fbld
in
imul
out
lea
mov
cmp
jae
lahf
jmp
jg
je
jg
mov
repz
mov
cmp
pop
add
std
test
xchg
in
mov
stos
fcomi
ja
or
jae
jmp
imul
data16
mov
add
fwait
test
inc
dec
mov
call
sbb
call
jmp
sub
inc
push
mov
pop
pop
pop
jae
lds
sbb
push
sub
sub
lea
add
pop
jae
jg
mov
mov
fmul
or
retf
dec
stos
mov
call
mov
push
lea
or
inc
push
add
jae
lea
push
call
fcom
push
inc
adc
push
push
lea
(bad)
fbstp
or
mov
cdq
mov
pop
add
and
outs
push
dec
cld
je
mov
mov
jmp
mov
inc
mov
dec
arpl
arpl
cmp
outs
jmp
add
mov
jmp
lahf
or
mov
idiv
lea
stc
imul
daa
icebp
(bad)
dec
mov
mov
enter
cdq
add
pop
(bad)
sbb
push
push
push
push
mov
clc
in
add
push
mov
mov
scas
adc
and
mov
pop
cli
fxch
push
xlat
(bad)
les
push
push
or
xchg
pop
test
ret
lea
push
adc
in
enter
or
add
lock
push
mov
les
das
fs
and
sbb
mov
fmul
xor
push
push
mov
call
cmp
lock
lea
call
cld
loopne
push
inc
pop
xchg
inc
in
inc
mov
push
inc
clc
cwde
add
cwde
(bad)
fwait
pusha
icebp
jle
xor
cmps
jb
scas
popa
(bad)
imul
sbb
cmp
loop
or
pop
(bad)
jmp
call
push
call
pusha
jmp
loopne
mov
sub
js
fdivp
jp
shl
test
je
mov
xor
lock
mov
jmp
dec
push
jg
adc
inc
add
adc
mov
jle
rcr
into
call
rol
push
dec
adc
test
sbb
ficomp
push
xor
push
or
mov
add
xor
test
dec
punpckhbw
jo
mov
loop
retf
dec
call
call
call
jg
enter
clc
div
sub
clc
jp
lock
mov
test
jne
mov
xlat
mov
sbb
and
dec
cmp
add
inc
add
add
jg
xor
mov
ret
fld
inc
cmp
ret
fwait
cmp
adc
in
push
add
cmp
ins
and
jp
push
cmp
sbb
and
ret
loope
mov
xchg
and
daa
in
push
push
call
mov
(bad)
cmp
or
jmp
scas
addr16
int3
inc
pop
mov
xchg
pop
mov
les
add
sub
pop
push
sbb
hlt
aas
jnp
or
add
push
call
mov
inc
sbb
adc
or
cs
call
and
jo
inc
add
call
xor
aaa
push
push
call
or
mov
mov
sbb
test
inc
sub
xchg
adc
pop
pop
ss
mov
and
call
je
cmp
jne
mov
and
add
and
xor
dec
lock
(bad)
cmps
push
call
push
add
mov
jbe
ret
call
inc
std
out
mov
jge
xor
dec
inc
nop
xchg
or
ds
adc
out
or
push
lock
and
es
test
call
dec
int
cmp
add
sub
pop
mov
js
pop
test
(bad)
jmp
aaa
xchg
inc
cmp
xchg
enter
add
push
ror
fwait
and
mov
mov
mov
mov
fild
add
or
fstp
call
push
add
push
call
lds
mov
jno
and
mov
inc
in
or
mov
fbld
cs
mov
add
adc
xor
adc
std
mov
enter
cmp
jnp
ds
pop
shr
or
fadd
inc
add
jl
sbb
sbb
cmovg
cmc
(bad)
aas
in
sub
and
push
push
mov
and
push
push
call
sbb
add
loop
ss
js
ins
iret
call
sub
or
push
bound
call
mov
mov
es
jg
call
or
js
lea
icebp
inc
jne
call
fisttp
enter
loop
test
pop
mov
jle
lea
mov
mov
in
push
push
xor
xor
lock
jge
mov
jl
push
add
call
push
or
dec
ins
cld
rol
das
sub
add
je
adc
sahf
mov
sbb
or
cmp
call
icebp
adc
iret
call
and
mov
and
call
pop
dec
cld
or
pop
nop
(bad)
js
ret
jle
push
call
iret
push
call
adc
cmp
outs
mov
or
mov
inc
jmp
push
sbb
pop
sub
push
push
xor
cmp
jle
and
out
add
add
scas
dec
inc
je
add
push
(bad)
cmp
call
cmp
jl
xor
cmp
jle
iret
pop
inc
xor
cmp
inc
adc
mov
adc
xor
mov
adc
fwait
sbb
iret
push
push
call
fwait
add
push
call
call
mov
jns
imul
jne
add
push
lea
call
std
ja
cld
push
push
call
pop
jne
push
mov
adc
repz
dec
sbb
push
not
push
mov
call
or
cmp
std
mov
stos
xor
push
push
rcr
into
std
dec
fmul
jae
loop
hlt
call
inc
cmp
add
mov
jmp
mov
inc
cmp
push
xor
jae
in
add
push
or
mov
or
les
ror
popf
mov
jmp
dec
xor
leave
mov
adc
icebp
mov
cmp
jne
push
xor
sahf
icebp
call
dec
inc
cld
pop
push
call
mov
outs
mov
call
sub
adc
ror
inc
mov
je
push
call
or
sub
pop
jmp
xor
push
and
xor
in
pushf
cmp
pusha
out
xor
mov
mov
outs
adc
adc
bound
dec
mov
jle
mov
cwde
or
(bad)
aaa
jno
push
inc
sub
jge
test
icebp
push
push
push
outs
into
jl
push
call
mov
test
or
and
nop
imul
dec
add
mov
and
jl
add
inc
call
push
rcl
cmp
ficomp
not
movs
cmp
pop
std
sub
pop
jns
xor
cmp
enter
loope
xlat
cwde
je
ret
icebp
pop
sbb
push
dec
stc
mov
dec
pop
mov
jmp
push
retf
cmc
jmp
and
cmp
cmps
pop
call
sub
pop
adc
sbb
add
mov
sbb
setne
call
dec
push
mov
xor
adc
rcr
in
xchg
cmp
push
fwait
je
xchg
mov
fld
inc
xchg
(bad)
retf
dec
push
jae
xchg
add
hlt
mov
sbb
cmp
add
cmp
shl
mov
or
outs
mov
(bad)
stos
dec
mov
push
mov
or
dec
scas
or
adc
fscale
das
xchg
ret
dec
cld
call
cmp
jne
push
dec
pop
push
mov
or
ret
popf
or
mov
pop
mov
add
call
dec
clc
call
xor
dec
mov
test
mov
ja
mov
mul
out
shl
cmp
mov
arpl
les
inc
inc
xchg
dec
les
pop
or
adc
xchg
push
jge
pushf
popa
push
std
sbb
call
call
fsubr
add
jg
adc
call
cmp
into
or
or
xchg
or
call
push
add
add
inc
iret
mov
fcomp
pop
fld
loop
xor
dec
test
push
xor
inc
js
mov
adc
inc
outs
das
pop
push
cmc
pop
imul
adc
cld
js
fdiv
adc
push
pop
push
(bad)
popa
inc
hlt
aaa
sahf
inc
cld
push
push
mov
ja
fdiv
sbb
mov
aam
outs
ss
fnstsw
add
jne
call
(bad)
rcl
sbb
imul
clc
cld
(bad)
dec
mov
ret
aad
mov
lss
jae
ins
aam
mov
les
inc
loopne
cmp
jae
sbb
xchg
push
xor
pop
repnz
xchg
jbe
loopne
dec
cmp
sar
test
pop
mov
or
mov
jle
or
test
cwde
(bad)
push
and
inc
xchg
int
add
gs
mov
add
or
inc
jl
hlt
call
xchg
inc
test
nop
ds
push
add
adc
fsub
fwait
test
push
sub
adc
pop
mov
jmp
xor
in
lahf
mov
(bad)
pop
pop
vunpckhps
sbb
sbb
push
xchg
sbb
icebp
les
in
lds
and
sbb
test
clc
pusha
leave
inc
pop
adc
jle
cs
inc
mov
(bad)
jmp
pop
addr16
jg
and
push
nop
sbb
call
sbb
cvtps2pi
mov
cs
js
mov
push
xchg
xchg
pop
loopne
ret
sbb
(bad)
inc
jecxz
adc
mov
xor
shl
jnp
push
dec
sub
mov
repnz
icebp
push
mov
stc
pop
loopne
sub
lds
adc
and
mov
cmp
or
push
mov
ja
(bad)
fild
arpl
cwde
jmp
ret
pop
xchg
int
sbb
mov
mov
inc
or
out
mov
ja
adc
cli
ins
or
icebp
(bad)
or
cmp
adc
mov
jl
cmp
xor
popa
pop
sbb
dec
cmp
js
imul
dec
push
mov
add
add
leave
enter
mov
inc
pop
cmc
jnp
call
jnp
adc
mov
rol
enter
mov
loop
ret
call
or
fs
call
sub
dec
mov
sub
dec
idiv
sti
jmp
or
call
rcl
sub
je
movs
jbe
xchg
sbb
push
sar
cmp
push
dec
sub
dec
and
cmp
lods
mov
adc
or
clc
xchg
icebp
je
push
call
cmp
je
push
rcr
sbb
or
push
inc
xchg
sub
push
rcl
sub
inc
inc
ret
xchg
inc
and
dec
sub
ror
cmc
add
enter
adc
xor
jg
push
mov
call
dec
add
push
ins
shl
aaa
hlt
aaa
sahf
test
jl
lea
nop
sub
jbe
inc
jg
cs
jbe
in
pusha
push
frstor
aad
mov
xor
cmp
push
bswap
push
in
pop
xor
or
ror
mov
lea
push
je
dec
mov
push
imul
mov
in
pop
inc
or
or
mov
sub
xchg
jmp
adc
rcr
mov
push
dec
add
in
cmp
(bad)
sub
aad
(bad)
call
and
pop
test
mov
add
pop
pushf
pusha
movs
int3
push
mov
out
xor
ret
in
mov
arpl
mov
pop
fmul
sub
aaa
retf
js
inc
test
mov
mov
cdq
dec
add
inc
push
shr
jg
adc
add
mov
cmp
sbb
jge
mov
pop
sbb
xchg
std
dec
or
push
push
dec
sbb
dec
cmp
icebp
not
call
adc
jg
stos
je
push
push
pop
inc
jmp
clc
iret
rcl
sub
iret
jle
mov
push
inc
call
mov
call
cmp
mov
test
rcr
mov
cmp
jne
mov
push
push
call
xor
cld
or
xor
gs
sbb
(bad)
pop
test
add
or
mov
push
jo
push
mov
mov
cli
mov
xor
sub
shl
sub
icebp
mov
rol
push
jb
or
rcl
sbb
mov
lods
shl
xchg
nop
popa
pop
mov
mov
sbb
inc
push
jecxz
adc
mov
mov
cmp
(bad)
ds
fstp
call
mov
fwait
out
adc
push
lahf
shl
xchg
sbb
call
inc
inc
push
icebp
cmps
or
outs
std
xor
push
sbb
jne
inc
sbb
pop
push
and
xor
push
(bad)
cmp
call
pop
and
fmul
sar
jmp
add
mov
call
mov
xchg
add
add
sbb
fisubr
fcom
repnz
jmp
pop
mov
out
call
call
out
lock
push
pop
add
adc
mov
push
mov
dec
xchg
mov
mov
mov
add
dec
nop
inc
icebp
push
aad
push
xor
dec
pop
rcl
mov
jg
or
mov
add
lea
mov
call
test
pop
pop
jne
dec
push
call
lock
shr
add
cmp
je
dec
test
jg
lea
cmp
jne
fwait
sbb
(bad)
in
mov
dec
(bad)
push
call
mov
push
push
push
lea
aaa
into
call
jmp
out
cmp
lea
cmp
je
mov
cmp
ja
mov
(bad)
(bad)
dec
jmp
mov
cmp
jl
cmp
jg
movsx
lea
inc
lea
inc
cmp
jb
jg
or
xor
push
push
call
xchg
dec
sub
aaa
lock
idiv
mov
inc
adc
daa
jne
in
(bad)
ja
and
in
add
push
mov
call
jne
fist
ud0
sbb
call
jmp
and
(bad)
test
sub
push
call
cmp
(bad)
and
jmp
push
jmp
mov
test
push
call
call
inc
xchg
xchg
add
std
mov
cmp
jnp
add
mov
or
push
cmp
jne
sbb
or
or
adc
add
xchg
jbe
je
or
xlat
xor
(bad)
jnp
inc
dec
and
push
mov
mov
sbb
cmp
pop
mov
push
je
mov
fimul
push
jge
rcr
ret
dec
add
sub
and
mov
retf
call
iret
sbb
dec
add
call
and
fdiv
std
call
call
add
push
lea
cmp
dec
cmc
or
or
lods
pop
mov
jne
cmp
sbb
or
outs
push
ret
dec
rcr
push
mov
sbb
call
xor
pop
out
test
push
call
cdq
mov
fsub
sbb
ds
(bad)
pop
cmp
xchg
inc
push
push
add
popf
mov
lock
mov
add
add
imul
or
pusha
test
out
clc
nop
sti
into
mov
call
mov
pop
je
mov
jmp
mov
sbb
cvtdq2ps
inc
or
sub
hlt
fist
adc
lea
adc
push
std
(bad)
mov
dec
or
add
cmp
mov
jl
aas
inc
push
(bad)
lea
xor
jbe
mov
mov
cmps
dec
sti
push
jne
pop
loop
and
push
push
sbb
movs
jo
xlat
adc
mov
add
cwde
dec
and
js
sbb
pop
sbb
mov
ds
fdivr
adc
jmp
xor
push
les
cmps
push
mov
loop
(bad)
cmp
jo
jge
add
das
nop
call
call
and
dec
mov
icebp
ja
(bad)
adc
call
or
adc
inc
sbb
fsubr
add
adc
mov
mov
add
out
mov
mov
mov
cmp
mov
pop
lock
icebp
fild
xor
add
lock
mov
cmp
dec
sbb
pop
out
push
dec
ret
loop
adc
mov
jmp
mov
mov
sub
outs
dec
jbe
mov
mov
call
adc
push
dec
iret
push
jbe
push
xor
inc
std
mov
cmp
inc
and
nop
loopne
push
jnp
fnstcw
lds
call
sbb
xchg
or
ror
or
add
jg
call
push
lock
ret
xchg
or
call
mov
(bad)
dec
mov
push
enter
push
enter
push
call
add
(bad)
(bad)
cmp
jae
movzx
pop
ret
mov
mov
mov
inc
sbb
fstp
xor
loopne
ja
clc
call
je
mov
cmp
jae
ret
sub
adc
push
cmp
jecxz
or
xor
mov
(bad)
xor
mov
(bad)
jmp
clc
push
jmp
mov
mov
and
ror
dec
dec
add
call
inc
add
fisttp
or
pop
dec
and
mov
mov
es
add
adc
xor
fsubr
adc
fwait
mov
shr
jnp
adc
or
mov
jne
fs
jge
adc
push
pop
adc
xchg
mov
mov
push
cli
dec
cmp
adc
jbe
add
ss
popf
mov
jmp
xor
push
or
adc
enter
and
fst
ss
adc
or
call
call
ins
enter
add
pop
or
and
test
pop
hlt
sub
(bad)
sti
or
mov
(bad)
jmp
inc
add
div
(bad)
fnsave
pop
add
add
ret
shr
or
fnsave
ds
add
adc
push
jmp
xor
inc
jae
and
call
out
(bad)
rdtsc
sbb
mov
xchg
or
jmp
mov
inc
icebp
test
jg
daa
call
inc
cld
(bad)
(bad)
jmp
mov
push
mov
mov
push
push
push
push
call
mov
or
push
lea
jp
push
pushf
bound
mov
into
jl
add
call
push
push
(bad)
mov
call
mov
lea
or
xchg
rol
ins
jmp
and
mov
or
sbb
lea
push
call
mov
mov
xor
cld
inc
xchg
mov
lahf
clc
call
mov
xor
test
gs
push
ret
(bad)
ds
mov
push
loope
inc
jmp
push
or
adc
inc
pop
sbb
cwde
dec
(bad)
or
aaa
inc
sar
or
mov
lea
test
pop
adc
xor
in
sar
gs
push
push
call
xchg
pop
mov
inc
clc
mov
mov
add
sub
mov
or
adc
es
ja
and
jne
push
mov
loope
lock
lea
and
jl
xchg
mov
jp
sbb
push
call
sbb
add
or
fstp
ret
mov
stc
jne
or
mov
fs
jecxz
jl
stos
call
mov
push
ds
stos
add
mov
cmp
fs
cld
jb
jmp
or
mov
test
pop
push
pop
add
push
pop
push
mov
out
sub
call
inc
mov
inc
sbb
add
sbb
stc
push
(bad)
int
iret
call
fucomp
pop
push
mov
push
call
test
jne
xor
mov
iret
call
fnstcw
nop
test
jbe
jge
xchg
push
push
outs
dec
jmp
inc
lock
mov
push
mov
add
sbb
(bad)
xchg
sbb
pop
je
mov
fs
shl
or
sub
mov
jbe
call
sbb
dec
mov
push
cmp
adc
bound
adc
push
push
in
and
icebp
je
ja
add
test
pop
dec
call
out
(bad)
(bad)
loope
add
dec
or
aam
call
mov
xchg
call
dec
repnz
sar
(bad)
adc
add
test
arpl
or
xchg
icebp
mov
cmp
lods
mov
jne
xchg
and
dec
mov
ret
aaa
icebp
push
call
add
out
(bad)
jge
add
inc
cmp
jne
daa
arpl
pop
xlat
pop
mov
lods
dec
sub
sub
push
dec
mov
jl
ficom
call
sub
sub
push
push
call
sbb
mov
hlt
push
(bad)
(bad)
cmp
adc
je
mov
or
mov
push
push
call
shl
and
cmp
call
mov
jb
lds
sbb
call
cld
inc
ret
cmp
(bad)
call
(bad)
out
mov
mov
je
mov
movzx
cmp
ja
or
and
test
add
push
inc
mov
sub
cmp
fist
jmp
cmp
mov
jne
call
call
jo
dec
shl
mov
outs
clc
je
mov
sahf
sub
jmp
cdq
hlt
push
adc
sar
add
pop
push
jo
cmp
add
retf
sar
fild
mov
cld
dec
(bad)
outs
push
shr
call
retf
pop
pop
je
in
cmp
push
(bad)
dec
xor
push
les
lock
add
mov
arpl
dec
lods
adc
pop
mov
out
inc
enter
sahf
and
jecxz
ud0
push
push
push
rcl
push
adc
stos
and
sbb
dec
push
fdivr
dec
pusha
mov
mov
or
call
cs
std
cmps
push
cmp
jbe
mov
adc
jo
out
sar
add
pop
clc
push
dec
inc
hlt
mov
(bad)
cli
xchg
jmp
fild
call
scas
xchg
lods
aas
sub
push
sbb
add
bound
pop
shl
wrmsr
pop
pop
xlat
shl
mov
pop
ja
stc
pop
push
es
or
daa
sbb
in
pop
push
mov
call
or
shl
pusha
push
aaa
push
or
lahf
sbb
sar
ins
push
add
dec
pop
jo
lahf
mov
aas
(bad)
push
xor
push
aas
mov
xor
sbb
sub
pop
pop
pop
pop
ret
push
push
imul
clc
mov
call
test
jne
shr
push
retf
inc
jg
cwde
jp
pop
fld
pop
adc
or
pop
mov
push
push
pop
push
call
(bad)
(bad)
dec
call
call
shr
lea
neg
lea
sbb
and
xchg
in
out
es
push
mov
mov
pusha
cmps
mov
stos
adc
lock
pop
ret
shr
push
mov
jne
fsub
mov
mov
add
data16
mov
pop
jne
xor
add
or
add
mov
cmp
fsubr
jno
pop
xor
fwait
sti
or
das
movs
mov
std
ret
xchg
cmp
inc
jl
jne
call
rcl
in
sahf
cmp
jmp
or
push
shr
push
and
mov
sbb
pop
jne
mov
jne
adc
in
push
jbe
mov
push
push
mov
call
push
mov
or
push
xchg
ja
add
sbb
push
or
adc
ins
imul
mov
jo
sbb
clc
mov
dec
cwde
dec
gs
push
add
call
aad
push
add
pop
adc
sbb
xor
fsubrp
mov
jmp
sar
sub
cmp
nop
fimul
inc
call
fild
cs
mov
es
outs
add
adc
cmp
or
push
outs
mov
mov
dec
and
mov
xor
push
call
adc
sub
push
sar
lods
outs
add
retf
xor
cmp
jbe
mov
mov
push
jmp
ja
retf
call
inc
cmp
jb
pop
and
or
les
ret
mov
inc
pop
mov
pop
or
icebp
mov
push
mov
mov
push
and
xor
xor
inc
or
dec
adc
repnz
fild
pop
adc
sbb
(bad)
push
jl
dec
inc
adc
and
add
ret
je
mov
push
push
mov
mov
jmp
add
or
std
call
jmp
add
hlt
pop
aam
cmp
inc
add
daa
sub
sti
(bad)
clc
mov
and
cmp
jne
or
imul
or
add
add
cmp
je
xor
hlt
add
mov
or
movs
sub
je
push
or
ss
in
mov
cdq
jo
jecxz
or
jmp
outs
lahf
mov
test
je
mov
mov
ins
clc
rol
mov
mov
inc
push
call
sbb
call
jge
push
or
call
mov
mov
inc
add
adc
nop
pop
cmp
jge
retf
call
std
adc
or
sbb
(bad)
dec
clc
mov
mov
mov
and
push
and
inc
sbb
jle
add
sbb
pop
or
inc
hlt
push
mov
inc
(bad)
in
lea
push
call
test
mov
dec
adc
inc
sbb
cli
(bad)
fcomp
test
jns
call
fbld
aam
stos
in
push
jmp
jns
aad
xor
call
in
mov
jnp
add
sbb
test
jne
(bad)
pop
rcr
xlat
jbe
(bad)
ror
jecxz
add
cmp
je
xchg
jmp
mov
retf
or
pop
add
mov
test
mov
jne
sub
push
push
add
(bad)
pop
add
and
adc
dec
xor
adc
inc
add
mov
mov
call
sbb
mov
call
add
or
test
jle
scas
add
or
ffreep
jne
inc
push
shr
sbb
movlhps
jl
jne
and
clc
out
ds
push
sar
je
mov
pop
push
out
inc
mov
call
mov
(bad)
mov
add
cld
jle
lea
adc
imul
adc
call
cmp
xchg
inc
pop
mov
ja
add
dec
jne
mov
mov
jae
sub
call
loope
in
and
inc
adc
test
and
mov
push
xchg
push
dec
mov
dec
adc
test
mov
adc
call
pop
sbb
call
dec
test
jl
sbb
push
test
jmp
adc
jb
outs
and
jb
sbb
bound
lea
mov
call
dec
jg
add
mov
fadd
(bad)
jle
pop
or
mov
test
rcl
into
sti
dec
out
call
mov
pop
jmp
shl
add
inc
pop
cmp
jl
adc
add
pop
pop
xchg
cwde
lds
push
mov
cmps
std
adc
fwait
add
inc
lock
call
or
xchg
es
xchg
mov
es
adc
into
inc
jne
in
sbb
inc
inc
ret
jne
outs
aaa
mov
test
jg
out
mov
mov
es
jbe
pop
ss
sub
dec
or
sti
call
add
push
jmp
cmp
jne
push
sub
mov
add
jne
sbb
adc
cmp
mov
sete
push
call
jl
hlt
pop
fdiv
rol
and
call
add
cwde
add
inc
clc
jg
jge
inc
sub
cmp
push
jne
and
call
mov
add
mov
push
push
out
loop
fsubr
mov
lahf
call
push
call
lahf
adc
mov
call
jmp
pop
int3
js
stos
cmc
mov
pusha
push
ror
push
ins
xor
pop
push
and
inc
retf
dec
call
xor
or
or
jmp
push
xchg
sub
inc
hlt
mov
jl
push
call
mov
jp
or
adc
call
cmp
mov
mov
adc
push
dec
iret
call
push
jo
in
mul
xor
jmp
das
retf
call
shl
xor
or
mov
fstp
add
add
xor
add
mov
fstp
pop
push
je
ds
outs
test
ins
mov
add
mov
jmp
add
push
dec
push
pop
outs
xor
test
je
mov
call
push
xchg
mov
add
jnp
cmp
push
je
leave
call
cmp
add
into
cmp
call
out
xor
inc
push
call
jb
rcr
cmps
jle
push
push
adc
push
push
dec
lea
fwait
dec
ss
mov
jb
jecxz
pop
shl
test
scas
mov
call
outs
cli
mov
pop
adc
xor
xor
ret
(bad)
(bad)
jl
xchg
in
mov
mov
mov
mov
mov
mov
jmp
cdq
add
les
sbb
rcl
shl
mov
mov
into
mov
call
inc
shr
neg
mov
push
or
or
xchg
test
in
test
mov
fstp
mov
lock
pusha
pop
out
in
call
add
stos
xor
nop
jbe
push
clc
inc
mov
in
test
inc
cmp
jge
dec
sbb
call
aaa
lahf
cmp
call
inc
jbe
fdivr
jmp
inc
cmp
jl
test
mov
neg
lock
inc
push
push
dec
aas
fmul
mov
icebp
add
add
aam
jge
add
jecxz
shr
mov
push
call
ret
cmps
cmp
lahf
sbb
and
jo
call
test
jns
push
jmp
sbb
pop
mov
and
jo
out
jmp
dec
cmp
call
jmp
jmp
fld
or
or
push
push
push
call
adc
ss
call
dec
or
std
pop
std
push
call
lea
mov
data16
push
and
pop
loope
adc
sbb
in
jle
sti
pop
add
popa
push
cld
mov
adc
mov
xchg
cmp
lock
adc
lock
cld
cmp
jl
cmps
sbb
iret
cmp
je
or
test
cld
jg
inc
aas
adc
cld
sub
ror
sahf
push
call
cmp
push
dec
pop
into
call
gs
jne
je
sar
or
icebp
je
mov
outs
push
test
push
and
dec
dec
sbb
and
dec
cli
and
mov
xor
lea
pushf
xor
adc
call
mov
xchg
pop
mov
fs
mov
pop
mov
fisttp
pop
ret
add
jmp
jbe
ret
lock
add
fisubr
and
jmp
xchg
adc
pop
add
cmp
ror
and
pushf
sbb
ret
fistp
push
mov
mov
jb
cli
fst
mov
and
jge
loope
mov
in
xor
shl
sub
push
dec
lea
or
inc
mov
ror
pop
(bad)
mov
sub
fist
pop
or
cmp
xor
inc
(bad)
mov
push
mov
push
add
mov
icebp
pop
retf
mov
into
ret
dec
jmp
out
and
(bad)
call
test
ret
cmp
push
mov
mov
jbe
inc
cmp
cmp
mov
and
mov
jge
mov
sbb
add
dec
add
add
fmul
cdq
jmp
enter
add
xchg
call
push
paddsb
cmp
popa
and
and
popf
pop
std
inc
icebp
call
test
popf
shr
mov
mov
and
inc
sub
push
jge
imul
aaa
aad
outs
jmp
arpl
push
xchg
inc
adc
push
push
push
mov
jmp
add
pop
push
cmp
fist
push
mov
push
push
push
push
push
(bad)
jle
xlat
std
(bad)
(bad)
mov
mov
mov
mov
inc
push
call
push
test
add
aas
adc
dec
int
inc
jne
mov
adc
loop
add
mov
mov
daa
push
jmp
test
jne
mov
sar
pop
fisttp
mov
out
xor
hlt
clc
add
and
and
mov
xchg
lds
loopne
mov
mov
loop
jne
mov
int
or
mov
dec
call
je
in
adc
(bad)
in
leave
push
pop
cld
out
pop
leave
mov
sub
les
sub
sahf
inc
jmp
mov
cs
movs
push
movs
js
mov
add
dec
test
mov
sub
jg
add
xchg
retf
je
push
jmp
ss
addr16
jns
call
inc
cmp
mov
or
jmp
inc
push
call
ss
call
push
mov
daa
mov
je
add
adc
sbb
push
call
dec
fsub
into
call
inc
es
es
push
std
mov
movzx
cmp
ja
xchg
and
push
loope
jmp
mov
or
jmp
(bad)
mov
(bad)
inc
loopne
sar
iret
call
jmp
push
cmp
je
add
sbb
(bad)
adc
fmul
or
jmp
in
call
js
aam
xor
out
in
cs
add
into
in
xor
outs
push
call
fnstsw
call
mov
loopne
xor
add
aad
imul
cmp
jg
cmps
sbb
(bad)
dec
and
call
mov
adc
jo
call
add
push
cld
jb
add
push
retf
sub
pop
in
cmp
jmp
sbb
cmc
mov
call
fist
int
mov
xor
mov
jge
lock
push
mov
lea
call
push
push
call
fisttp
mov
cmp
pop
pop
jne
out
lahf
icebp
call
pusha
outs
or
or
es
loopne
lea
ja
mov
mov
lock
cmc
dec
call
out
jg
add
(bad)
jmp
imul
cmp
(bad)
add
xlat
mov
mov
push
call
or
add
sti
call
push
mov
mov
inc
add
add
sub
(bad)
push
ret
test
sub
icebp
push
rol
call
inc
push
clc
mov
add
mov
add
test
je
mov
or
es
or
add
fdivr
adc
je
mov
dec
or
lds
jbe
push
out
adc
popf
sub
(bad)
jmp
push
fstp
pop
lea
stos
push
lea
stos
call
mov
mov
test
dec
cld
call
shl
lea
push
push
mov
and
mov
jmp
sti
and
or
add
adc
cwde
neg
inc
add
push
imul
sbb
test
add
call
pop
adc
add
and
movs
rcl
dec
dec
int
hlt
push
push
pusha
loop
inc
add
in
add
movs
and
jmp
sbb
add
push
inc
loope
sti
(bad)
pop
ret
push
bndstx
cmp
pusha
or
xor
call
xor
and
outs
retf
movs
jne
call
inc
xchg
mov
cmps
add
push
aam
lock
add
call
loopne
mov
inc
shr
clc
push
call
icebp
adc
sub
test
popf
inc
and
rcr
add
adc
push
repnz
and
cld
push
pop
aas
and
ret
(bad)
mov
add
(bad)
fsubr
(bad)
cli
dec
mov
mov
pop
in
push
and
call
mov
push
inc
ror
jbe
jno
dec
cld
in
popf
test
add
fucomp
inc
daa
add
sbb
pop
mov
push
icebp
fwait
adc
lea
push
test
lock
cld
loopne
mov
push
xchg
or
dec
and
(bad)
repz
inc
sub
mov
call
mov
cmps
jmp
or
add
push
ror
fcomi
leave
sub
outs
sbb
call
xor
dec
sub
cwde
mov
xchg
or
cmps
fdivr
push
mov
aaa
loope
cmp
adc
add
movs
lahf
sbb
pop
push
cld
call
cmps
xchg
cmp
in
mov
clc
jne
and
int
(bad)
out
fsubr
pop
test
xor
clc
jmp
ds
or
mov
mov
stos
stos
mov
stos
call
dec
in
call
es
in
mov
loopne
adc
imul
or
xchg
cmc
inc
into
scas
mov
neg
add
jbe
stos
clc
or
sub
clc
scas
ja
(bad)
nop
call
fsubr
xor
add
mov
push
call
rcl
pop
outs
xchg
sar
and
je
and
aad
or
shl
cmp
rol
mov
add
xchg
je
(bad)
pop
mov
mov
cmp
ins
pop
mov
and
dec
pop
adc
rcr
sub
push
or
mov
jg
call
mov
or
or
and
pop
push
in
call
es
add
cli
cmp
cmp
and
jl
stc
inc
push
jmp
and
inc
xor
pop
push
leave
test
sbb
ud2
jbe
clc
xor
pop
js
mov
xor
fadd
out
out
test
adc
mov
adc
inc
push
fld1
cwde
pop
lods
lods
adc
js
or
and
(bad)
fs
push
push
cmp
mov
sbb
xchg
pop
es
nop
popf
clc
das
jmp
pop
fmul
or
pop
fs
(bad)
cmp
cmp
rcr
pop
jle
mov
mov
push
adc
inc
repnz
adc
cmp
cli
enter
jg
call
add
adc
clc
cs
jg
aas
mov
pop
xchg
mov
jne
cwde
pop
in
dec
fdivr
pop
js
ds
adc
dec
es
sbb
and
sbb
mov
jb
clc
sub
cmp
or
xchg
mov
or
test
add
xchg
or
dec
or
je
pop
sbb
pop
in
pop
mov
sbb
clc
sub
and
push
fninit
pop
adc
fdivr
adc
std
add
mov
cmp
test
aas
pop
pop
and
aas
cmp
in
dec
enter
mov
es
imul
inc
popa
psraw
cdq
nop
mov
in
xchg
cdq
add
pop
loopne
aas
add
enter
outs
mov
mov
aas
cmp
enter
aas
sbb
nop
lock
lahf
aas
adc
clc
sub
and
add
enter
pop
in
xchg
dec
fcomp
in
pop
mov
adc
enter
jo
aas
js
or
pop
push
mov
cmp
call
es
arpl
cmps
lahf
sbb
xchg
enter
inc
repnz
fsubr
adc
push
fld1
mov
inc
ins
(bad)
pop
jmp
sbb
jmp
cdq
pop
cmp
aas
cmp
xchg
cmp
(bad)
xchg
lds
sbb
loope
idiv
jmp
(bad)
cmp
or
leave
mov
rol
leave
test
mov
lahf
js
add
enter
aas
call
and
cmp
ret
jg
pop
nop
je
jns
out
daa
and
in
inc
std
pop
call
jns
bswap
mov
sbb
mov
add
call
test
js
add
pop
mov
jnp
pop
sub
cmp
daa
sbb
push
push
push
push
call
add
mov
xlat
mov
push
add
push
xor
(bad)
idiv
and
add
mov
push
call
cmp
jne
cmp
add
xchg
adc
inc
dec
sbb
mov
outs
cmp
sbb
push
cmp
sbb
mov
mov
or
test
or
mov
push
(bad)
and
(bad)
mov
fild
or
adc
or
mov
lds
les
jbe
mov
in
cmp
jne
mov
add
adc
mov
mov
xor
add
dec
push
fdivr
xor
addr16
dec
mov
push
pop
fwait
jb
sar
call
push
jge
loop
sbb
add
ins
inc
or
and
(bad)
sti
outs
and
mov
mov
mov
cmc
inc
inc
jne
mov
call
cmp
out
sub
add
inc
fild
rol
icebp
cmp
xor
into
std
and
or
jg
push
call
push
clc
xchg
sub
call
adc
pop
pop
(bad)
inc
inc
pop
ret
sub
push
push
push
push
push
pop
push
mov
mov
and
idiv
push
mov
push
call
push
push
mov
push
push
mov
call
add
add
shr
dec
call
and
push
push
adc
rol
sti
lahf
sti
sbb
push
call
push
push
call
(bad)
mov
push
push
push
push
iret
je
(bad)
mov
push
push
call
je
mov
loope
mov
sbb
sub
call
in
mov
mov
in
jno
add
xchg
pop
pop
jb
sti
mov
ret
mov
push
dec
add
call
fbstp
pop
mov
push
call
and
adc
inc
add
cwde
xor
xor
add
fs
sbb
jle
cld
call
stc
je
push
mov
mov
inc
test
jne
or
call
sub
aas
into
cmp
mov
jne
xchg
fist
mov
mov
test
je
les
cld
call
inc
mov
xchg
add
repz
and
test
mov
(bad)
jae
not
call
dec
jmp
add
into
call
add
call
xchg
fdivr
dec
cmp
mov
maxps
jo
cmps
fwait
mov
mov
call
sahf
add
push
leave
aaa
adc
mov
push
and
adc
call
loop
retf
out
pop
xor
(bad)
ds
push
mov
clc
call
ss
xor
test
pop
mov
sub
mov
call
or
popf
mov
inc
add
jo
paddq
pop
pop
inc
add
mov
cmp
dec
and
call
add
shl
pop
mov
fst
in
or
or
inc
sbb
or
mov
push
or
cmp
mov
mov
mov
adc
icebp
xlat
push
cmp
mov
adc
sahf
lahf
mov
push
inc
mov
push
xor
bound
jecxz
add
shr
push
call
les
mov
pop
sahf
and
or
xchg
ins
clc
mov
js
stc
jne
call
stos
xchg
mov
call
test
push
jne
mov
push
call
scas
and
inc
jbe
xlat
fwait
out
mov
xor
into
call
or
icebp
int3
push
shl
xor
mov
add
fs
mov
add
shr
or
jne
es
aas
push
xchg
mov
call
mov
cld
dec
sbb
je
or
and
push
fs
and
(bad)
inc
sub
call
test
mov
lahf
bound
sbb
shr
mov
push
push
push
or
add
pop
add
mov
push
dec
call
inc
(bad)
or
inc
or
sub
mov
mov
sar
(bad)
(bad)
cmp
jne
mov
mov
cmp
jle
mov
jmp
lea
push
mov
pusha
call
sbb
push
xlat
jmp
push
sbb
(bad)
ja
sub
add
inc
dec
jne
dec
leave
fwait
sub
and
fld
ret
hlt
mov
push
push
call
and
dec
icebp
inc
push
sbb
push
push
jbe
push
adc
sub
cmp
cmp
sti
jg
cmp
mov
or
hlt
sub
jne
mov
stos
jbe
jg
in
ins
and
mov
mov
call
lea
call
fild
dec
add
mov
jne
mov
push
push
mov
lea
call
mov
jge
call
or
pop
mov
or
cmp
add
retf
call
test
sub
call
addr16
push
adc
and
mov
jbe
or
inc
hlt
inc
inc
and
leave
jns
cmp
test
push
cmp
std
rcr
sti
mov
xchg
call
xor
pop
push
lock
adc
sbb
pop
push
pop
add
xlat
push
aaa
pusha
inc
enter
pop
ja
bound
xchg
push
pop
call
call
jg
inc
cld
aam
imul
pop
hlt
repnz
pop
add
test
or
cmps
sti
or
sub
enter
pop
jmp
call
ret
inc
repnz
mov
dec
sub
and
sbb
inc
pop
test
sub
add
leave
js
inc
or
xchg
add
jle
or
call
or
mov
mov
or
or
inc
fidivr
pusha
loop
pop
mov
push
push
mov
call
cmp
add
mov
call
or
jge
fwait
jl
bnd
mov
addr16
mov
in
aaa
mov
mov
mov
pop
jge
in
xor
xor
mov
sub
clc
mov
push
inc
aaa
pop
cmp
jne
std
cmp
je
push
sub
mov
hlt
mov
mov
jecxz
inc
mov
push
add
push
add
mov
lock
loopne
pop
mov
fild
or
xchg
lds
ror
or
sbb
push
add
adc
push
stos
mov
sub
and
cwde
imul
call
push
cmp
sbb
call
cli
fbstp
cmp
mov
jne
inc
bound
xor
mov
mov
daa
adc
icebp
aas
sub
cmp
add
sahf
inc
call
and
(bad)
call
dec
ret
mov
mov
jbe
lock
or
fild
fild
cld
mov
pop
xor
scas
jne
push
cmp
fbstp
mov
call
pop
out
xor
mov
cmc
or
mov
xchg
add
leave
add
lea
jb
cli
sahf
stos
lea
sub
inc
hlt
pop
mov
mov
or
add
mov
add
push
push
lds
pop
mov
out
xchg
mov
pop
shl
mov
mov
push
clc
jg
clc
mov
mov
push
push
call
pop
cld
sub
in
movs
add
(bad)
out
mov
mov
aas
mov
xor
push
lea
mov
pop
out
mov
call
jle
inc
not
call
jne
and
sbb
dec
mov
mov
inc
add
add
cmp
push
add
and
and
(bad)
fcom
inc
test
adc
mov
dec
mov
out
or
leave
js
inc
push
push
ffreep
(bad)
jmp
mov
xor
idiv
(bad)
cmp
push
mov
jmp
mov
push
call
cmp
adc
cmp
pushf
lea
outs
call
aad
std
fcomip
add
mov
mov
cmp
mov
jmp
mov
jmp
xor
mov
(bad)
mov
(bad)
in
(bad)
(bad)
(bad)
call
jo
inc
mov
mov
mov
mov
xchg
cli
cmp
push
out
outs
push
push
mov
pop
mov
call
ret
scas
lea
call
push
cli
inc
push
push
sbb
imul
add
add
mov
call
icebp
lahf
int
mov
mov
push
mov
sub
cmc
(bad)
inc
pusha
pop
cmp
and
mov
jne
mov
call
sbb
loope
aas
push
push
mov
call
call
dec
mov
mov
pop
jl
test
xlat
in
nop
imul
sbb
push
mov
call
jg
repz
xor
lea
mov
mov
call
jmp
cmps
push
out
sub
or
or
je
in
dec
cld
call
add
scas
fild
inc
popa
xor
add
pop
out
je
push
iret
call
inc
call
add
jecxz
mov
call
retf
call
icebp
shl
and
and
or
jns
fild
call
out
(bad)
aas
inc
or
jo
jmp
mov
out
rcl
xor
or
jo
(bad)
jecxz
add
jle
mov
inc
add
push
repz
fsub
cmp
call
stc
iret
(bad)
adc
inc
add
call
inc
or
cmp
push
and
dec
in
outs
jmp
dec
sub
add
pop
add
out
(bad)
lock
dec
mov
(bad)
or
lds
cld
jne
inc
lahf
call
adc
jb
and
pop
push
gs
sub
cli
adc
ss
int3
dec
mov
pop
push
xchg
and
mov
jge
push
push
call
stos
loop
push
push
adc
dec
call
shr
push
call
mov
pusha
push
push
call
fcomp
and
push
call
push
push
cmp
mov
jge
mov
call
std
jmp
mov
push
call
cmp
je
sub
aas
shr
jne
call
push
push
sbb
fadd
jo
mov
xchg
loopne
xor
jno
fdiv
fild
outs
js
adc
add
ret
cmps
(bad)
fs
jle
jne
ins
push
call
(bad)
fdivr
(bad)
enter
mov
jmp
dec
adc
(bad)
xlat
inc
fistp
jmp
clc
call
mov
mov
jecxz
jmp
fcom
xor
adc
sub
pop
push
xchg
fidivr
mov
in
cmc
adc
clc
mov
push
mov
hlt
mov
push
push
mov
hlt
cmp
push
push
out
dec
hlt
push
push
push
call
cmp
mov
or
loope
je
sahf
cmp
les
push
sbb
scas
mov
adc
ss
aas
push
add
xchg
or
sti
les
cdq
jmp
mov
mov
test
xchg
call
fmul
dec
lock
call
call
lock
adc
in
js
es
stos
sub
jmp
pop
push
cld
jg
mov
lock
add
scas
test
sbb
pop
mov
xor
cmp
cld
call
pop
sub
aam
arpl
add
leave
in
inc
cld
pop
jbe
jmp
call
sbb
ins
pop
cmp
je
jg
adc
xchg
adc
iret
call
push
frstor
mov
call
pusha
xchg
jbe
mov
xchg
adc
xchg
dec
adc
or
ins
add
cdq
mov
mov
adc
add
sbb
fsubr
pop
call
lea
xor
inc
xchg
push
push
call
inc
rcl
stos
pop
fist
sbb
mov
mov
mov
mov
mov
call
mov
cmp
push
call
cmp
push
push
adc
mov
mov
or
dec
mov
xchg
xor
cmp
mov
add
cmp
test
outs
imul
jecxz
mov
dec
inc
pop
dec
sbb
add
(bad)
dec
mov
test
inc
sbb
inc
adc
movzx
cmp
jle
je
cmp
xor
or
pop
jmp
jl
and
or
jmp
jp
inc
jmp
idiv
xchg
pop
pop
jmp
add
in
add
and
inc
loop
pop
jmp
out
cli
or
or
fucomip
mov
jmp
(bad)
push
jmp
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jg
icebp
mov
arpl
pop
jmp
pop
push
in
adc
dec
sbb
je
mov
jmp
sbb
xor
adc
mov
out
es
mov
jmp
xlat
pop
out
or
mov
add
add
mov
xor
jmp
mov
mov
and
push
sub
adc
adc
aas
cmp
je
mov
mov
mov
sahf
mov
cli
mov
push
xchg
pop
mov
push
adc
(bad)
jmp
adc
mov
mov
mov
sub
pop
out
loopne
mov
or
neg
mov
xchg
mov
inc
dec
xor
popf
jno
mov
sbb
pop
aas
mov
in
int3
ins
loopne
das
in
mov
ja
or
aad
iret
call
fcom
or
lds
in
into
mov
ficom
call
jge
adc
push
jge
call
mov
mov
dec
popa
cmp
ret
test
mov
sbb
in
mov
mov
add
mov
call
jp
imul
gs
stos
xor
out
pop
in
sub
pop
mov
pop
test
adc
ds
sbb
test
(bad)
repz
mov
jne
or
and
mov
call
bound
mov
add
add
cmova
push
cmp
push
or
mov
push
call
cmp
jne
add
inc
loop
adc
out
loop
and
pop
ret
repnz
push
inc
lock
call
cld
dec
jg
call
push
pop
xor
push
mov
inc
mov
arpl
jbe
mov
movs
sbb
jmp
ret
add
pop
cld
inc
jne
mov
xor
call
mov
mov
clc
inc
nop
mov
mov
jg
pop
mov
retf
adc
push
or
outs
add
pop
add
in
sub
outs
movs
inc
mov
(bad)
pop
pusha
mov
and
or
push
lahf
pop
enter
xchg
sub
push
or
push
sbb
push
lea
mov
cmp
cwde
push
call
je
inc
mov
xor
lea
mov
call
mov
dec
push
push
clc
aas
push
call
push
call
fsubr
or
in
iret
mov
(bad)
pop
repz
call
or
push
inc
loop
or
call
fdiv
test
out
adc
push
mov
call
mov
(bad)
adc
mov
inc
mov
lock
mov
jmp
sahf
sbb
or
add
jg
movs
mov
call
mov
inc
jecxz
(bad)
stos
enter
test
mov
or
jle
jne
dec
xor
outs
fmul
lods
cmp
push
dec
std
shl
jno
cmps
mov
pop
mov
je
mov
(bad)
mov
inc
adc
sub
outs
or
and
pop
mov
ins
cmp
je
cmp
je
cmp
jne
push
(bad)
jg
mov
jbe
mov
call
test
jne
lea
pop
call
inc
les
jbe
scas
mov
sti
rcr
stos
jmp
adc
outs
mov
call
popf
mov
stos
mov
inc
dec
movs
call
popf
in
add
cld
movs
call
aaa
cld
push
sub
xchg
cmp
sub
test
movs
jg
str
push
mov
call
adc
or
mov
push
jmp
popa
pop
repz
mov
clc
outs
mov
jne
mov
test
je
div
je
or
add
(bad)
out
mov
push
dec
call
addr16
xor
cmp
jle
jle
cmc
push
mov
movs
cld
push
(bad)
(bad)
inc
mov
or
inc
or
leave
sub
je
dec
jne
cmp
je
jne
jp
js
retf
jmp
xor
cld
jmp
arpl
fucomp
rcr
mov
(bad)
cmp
jne
cmp
jne
jmp
inc
int3
or
scas
mov
push
push
call
jb
jmp
pop
pop
leave
xchg
movs
mov
les
je
cmp
ja
ds
call
pop
(bad)
sbb
ret
push
push
mov
pop
daa
fwait
add
out
neg
data16
fsubp
arpl
or
cdq
jne
lods
mov
jmp
das
sub
mov
int3
(bad)
pop
adc
frstor
jmp
push
sub
call
dec
mov
dec
cmp
jne
cmp
pop
dec
hlt
call
fdivr
leave
ret
mov
mov
js
mov
push
push
mov
lahf
hlt
sbb
je
sbb
pop
retf
aad
push
mov
adc
je
inc
dec
mov
adc
call
and
mov
inc
jle
xor
jmp
cmp
jne
cmp
(bad)
call
je
inc
mov
test
jne
mov
mov
iret
pusha
xchg
inc
pop
push
data16
imul
mov
mov
dec
sub
or
sbb
mov
or
add
daa
test
jl
push
lea
push
ss
mov
call
add
and
cs
sub
pop
add
fild
js
add
push
push
pop
jne
sar
mov
mov
and
cmp
jne
pop
adc
jle
cmp
test
cmp
je
inc
jne
sbb
jmp
mov
xor
jg
add
pop
popf
call
push
mov
push
mov
neg
sbb
and
inc
sbb
push
mov
add
and
or
or
movs
fiadd
icebp
jmp
call
out
sbb
icebp
dec
sbb
cwde
mov
adc
scas
pop
sub
or
lds
jo
mov
inc
mov
test
add
ja
mov
mov
add
fucomi
fwait
add
stos
add
xchg
retf
adc
adc
jecxz
add
add
and
cld
jl
es
dec
je
call
cwde
and
adc
aaa
xor
or
call
nop
sub
inc
inc
pop
mov
dec
sub
push
fcom
imul
and
jne
lods
cli
call
adc
xlat
jmp
inc
(bad)
out
or
sbb
lock
xor
into
adc
jmp
push
push
adc
xor
cmp
mov
mov
fsub
shl
std
push
pop
hlt
push
imul
mov
dec
mov
sbb
sbb
pop
adc
push
add
scas
sbb
aaa
out
cs
dec
sub
mov
or
mov
inc
mov
lea
push
mov
pop
fwait
cmp
mov
jle
test
jne
push
push
add
inc
int
stos
(bad)
in
xor
push
adc
inc
dec
jo
out
jnp
jl
xor
lahf
push
add
(bad)
or
jle
mov
pop
xchg
push
add
cdq
or
mov
or
mov
jl
mov
call
(bad)
outs
push
push
call
inc
xchg
adc
sbb
xor
jo
mov
mov
enter
fcom
xchg
cs
push
dec
loopne
add
mov
mov
push
push
push
add
(bad)
ds
or
add
or
xchg
inc
dec
mov
imul
adc
mov
sahf
push
lea
push
inc
push
cld
inc
rol
mov
dec
mov
(bad)
xchg
ss
push
aas
into
jmp
jnp
call
push
sbb
sahf
stos
mov
js
or
loopne
inc
into
call
or
pop
or
dec
adc
out
stos
adc
sub
enter
jno
push
adc
sub
push
je
pusha
lods
mov
mov
add
pop
in
pop
cmp
pusha
sub
aaa
and
mov
neg
add
push
cmp
ja
ror
jmp
fsub
sahf
mov
xchg
or
mov
daa
cli
aaa
in
(bad)
in
movs
dec
iret
jmp
mov
and
sub
jo
inc
into
mov
call
xchg
sbb
pop
push
dec
sbb
enter
cmp
mov
imul
and
pop
push
push
popa
ret
fistp
and
dec
or
fs
test
xor
in
rcl
sbb
jg
out
inc
dec
add
push
or
pop
in
fild
dec
inc
push
mov
std
mov
mov
call
es
loope
into
call
call
dec
ror
sbb
add
mov
jmp
cmps
arpl
inc
sbb
mov
adc
les
ja
jno
inc
add
mov
call
or
call
or
call
call
dec
push
dec
lea
push
push
push
or
scas
inc
add
jne
call
sar
enter
cmp
je
push
hlt
ins
ds
stos
xor
retf
xor
mov
sub
push
mov
and
sbb
aas
jbe
jle
movs
dec
in
call
test
xor
xor
and
and
or
(bad)
cmp
jp
xchg
push
push
push
push
mov
call
ja
inc
xchg
cmp
jl
popa
mov
js
call
or
inc
or
xor
push
push
(bad)
mov
cld
jle
mov
push
call
test
ja
out
inc
mov
inc
push
jg
and
jmp
xor
inc
loopne
cli
and
sbb
inc
sub
mov
mov
push
sbb
or
xor
sbb
dec
or
inc
jg
fucom
gs
add
push
fcom
inc
lds
hlt
push
rol
xchg
in
inc
(bad)
push
xor
cmp
mov
mov
je
sbb
push
lea
mov
mov
call
out
jo
add
call
ret
push
cld
or
ror
std
jmp
mov
mov
jle
hlt
inc
shl
mov
call
aam
mov
jnp
call
dec
add
add
push
aad
mov
cmp
jne
ja
add
mov
call
mov
jne
sub
jmp
call
je
push
test
sbb
movsx
clc
push
icebp
inc
out
push
or
call
es
cmp
out
add
lock
clc
dec
rcl
pop
push
test
call
add
(bad)
push
div
inc
clc
add
jne
and
call
(bad)
jg
push
cmp
add
mov
test
mov
fdivr
jp
je
mov
cld
add
inc
cmc
inc
jo
sbb
cmp
mov
jl
sbb
mov
sub
mov
sbb
loopne
jne
call
adc
je
test
jno
ret
aad
inc
call
cmp
jne
leave
ret
push
mov
cmp
je
and
aam
pop
push
jg
add
cmc
mov
call
sub
jle
sub
jmp
adc
mov
hlt
call
push
or
ss
push
pop
jne
xchg
hlt
dec
call
mov
shr
and
out
sbb
leave
add
add
sbb
pop
inc
popf
add
mov
inc
test
push
add
cld
add
adc
inc
adc
stos
adc
dec
pushf
call
test
jg
inc
clc
mov
mov
call
inc
jmp
and
je
sbb
call
sti
dec
sub
xchg
dec
or
call
daa
(bad)
cmp
and
cmp
mov
jne
inc
sbb
sbb
jg
dec
cld
add
dec
adc
out
add
inc
int
mov
je
aad
jne
pop
push
mov
clc
js
call
test
lea
lahf
xchg
stos
cld
cmp
and
stc
loop
inc
rol
cmp
sti
jmp
fs
sub
push
ds
push
push
loope
addr16
stc
int
or
fnsave
push
mov
xor
jg
adc
sbb
arpl
jge
jbe
sti
jne
ret
xchg
or
add
popf
fs
scas
lea
jp
push
sub
inc
outs
test
or
xlat
push
xchg
adc
push
js
push
mov
repnz
mov
adc
test
inc
mov
push
(bad)
(bad)
fmul
adc
cmp
jne
mov
cmp
jns
or
jne
call
fwait
pop
je
sahf
dec
clc
push
push
mov
add
out
ss
xor
adc
jg
mov
adc
jb
jg
push
add
xchg
test
je
mov
lds
jb
sub
push
bswap
call
add
stc
xor
add
push
and
nop
int
test
jne
mov
pop
pop
call
aas
mov
bound
push
mov
jmp
jmp
or
xchg
mov
pop
les
je
push
jmp
push
push
call
out
outs
dec
adc
hlt
call
push
mov
or
xor
call
dec
lock
pop
add
loope
scas
stos
cmp
fcomp
jg
mov
cmc
mov
jne
add
pop
sbb
push
lods
mov
test
je
add
cwde
inc
adc
or
pop
or
call
mov
lea
fadd
cmp
and
fisttp
xchg
cmc
aas
push
jne
mov
push
shr
push
mov
out
clc
(bad)
fisttp
add
jne
mov
mov
mov
hlt
mov
in
jne
push
call
test
mov
lea
push
mov
call
je
aas
mov
xchg
jmp
test
or
mov
jne
sbb
dec
sub
mov
adc
add
(bad)
(bad)
jg
cmp
je
test
je
and
push
lea
call
or
inc
ret
rol
mov
(bad)
pop
pop
jne
mov
sbb
xchg
mov
ja
dec
or
mov
or
push
call
jb
mov
push
jge
mov
call
mov
push
test
jmp
xor
adc
jo
inc
add
jae
fdivr
or
xchg
add
shl
mov
mov
mov
fst
or
(bad)
push
xchg
cmovo
scas
or
cmp
rdtsc
mov
out
and
test
push
je
push
push
loopne
or
add
call
test
pop
cmp
dec
xchg
push
adc
push
push
push
call
push
push
cmc
or
push
mov
out
(bad)
jmp
mov
shr
cmp
jb
cmp
jne
push
call
(bad)
call
pop
or
(bad)
inc
add
je
push
push
inc
call
shr
cld
cld
shl
mov
(bad)
mov
cmps
mov
je
or
dec
add
jbe
loopne
mov
clc
movs
test
or
aaa
jb
or
js
inc
adc
mov
add
cwde
cmp
ja
and
sub
je
or
and
jne
outs
ret
aad
cmps
mov
nop
jecxz
out
movs
or
pop
outs
ret
inc
or
mov
add
ins
jo
aas
cmc
xchg
js
mov
cld
or
clc
pop
lock
add
mov
mov
fcom
outs
jmp
iret
bnd
adc
(bad)
sbb
call
aaa
cld
and
jmp
sti
call
inc
lods
mov
jecxz
adc
ja
pop
inc
or
clc
scas
out
or
out
mov
push
mov
mov
call
movs
fdivr
and
loopne
add
jl
outs
pop
mov
cmp
jae
add
xor
push
popa
push
pop
inc
fnstsw
aad
cmc
test
scas
fsubp
mov
add
stos
mov
fcomi
inc
in
adc
inc
loopne
push
cmp
out
inc
in
loope
arpl
iret
mov
outs
enter
lea
call
xchg
ins
push
add
xor
call
call
mov
cli
inc
xor
push
mov
inc
mov
pop
lds
or
popa
sbb
cmp
je
and
push
inc
push
shr
add
dec
and
shl
ret
mov
and
call
mov
call
and
mov
push
movs
sbb
push
or
movs
push
mov
cmp
aaa
ret
push
push
push
call
ins
sbb
data16
add
jno
adc
jo
dec
xor
jge
movs
sbb
and
add
lea
aaa
inc
stos
push
test
call
cmps
ja
jns
dec
jne
leave
dec
dec
add
mov
cmp
scas
je
inc
cmp
jl
xor
jmp
mov
ror
(bad)
into
call
test
int3
sbb
add
test
mov
test
mov
mov
mov
jp
lea
clc
sar
fdiv
mov
inc
cmp
jg
sbb
call
call
and
cmc
inc
xor
add
add
mov
ja
fistp
jmp
rol
cmp
inc
mov
jbe
out
js
sub
add
por
inc
adc
int3
(bad)
add
rol
int
(bad)
or
jns
idiv
ja
jmp
sub
je
sub
je
dec
dec
jne
jne
mov
cmp
dec
xchg
or
and
push
or
cld
xchg
aaa
lock
add
mov
or
rcl
cmp
enter
fild
add
pop
add
sub
out
inc
aam
xlat
popa
add
fiadd
adc
and
inc
sub
pop
and
call
add
dec
or
fidivr
add
push
inc
adc
jo
test
je
add
jnp
push
outs
aas
xor
hlt
call
add
lea
pop
add
retf
or
or
or
cmp
mov
fnstenv
adc
sbb
push
jp
call
adc
call
inc
mov
jne
hlt
or
outs
sbb
lock
jmp
and
add
sbb
push
jl
adc
dec
call
cdq
addr16
push
push
adc
jg
push
call
lea
lods
or
lds
adc
pushf
jge
or
jl
pushf
fwait
push
dec
or
adc
or
push
movs
mov
or
sbb
fstp
or
pop
sysexit
mov
push
loopne
cmp
or
add
xor
pop
push
addr16
in
aad
call
inc
test
mov
loopne
inc
sbb
jo
xor
sbb
cmp
jne
es
xor
inc
or
aas
pop
(bad)
jp
sub
fwait
pop
cmp
mov
in
xchg
sbb
xor
adc
xlat
jmp
je
dec
gs
xor
jmp
xchg
mov
sahf
inc
pop
daa
inc
aas
mov
dec
adc
call
add
and
sbb
ins
push
push
pop
jb
out
fiadd
cld
push
mov
mov
loope
mov
popf
into
add
push
xor
nop
iret
mov
in
mov
and
lods
mov
xor
pop
aas
jae
push
mov
jmp
test
sti
adc
gs
mov
jne
inc
adc
inc
les
call
jo
xor
adc
(bad)
or
push
or
push
pop
inc
into
adc
push
in
mov
xlat
out
cmp
or
in
lods
(bad)
inc
push
jo
jb
and
or
sbb
call
mov
test
add
enter
test
loopne
dec
(bad)
mov
inc
stos
add
out
mov
pop
sub
mov
add
jne
mov
mov
mov
mov
movzx
sub
xor
idiv
pop
xor
adc
add
int3
inc
ja
dec
(bad)
fcomp
push
loope
or
in
sbb
or
inc
pop
fstp
mov
jb
ja
clc
add
cld
mov
jmp
mov
fild
fild
fchs
faddp
fsub
loop
(bad)
(bad)
call
leave
ret
sbb
push
xor
(bad)
inc
jle
test
jle
push
mov
call
add
into
call
call
xchg
push
add
xlat
dec
cwde
dec
idiv
or
dec
jne
xchg
mov
out
push
stos
and
mov
call
hlt
add
shr
call
js
(bad)
inc
aam
push
fiadd
push
add
sbb
mov
cmp
jne
shr
dec
push
push
call
mov
mov
mov
call
add
pop
fwait
(bad)
xor
jo
or
inc
call
mov
je
stos
jmp
inc
fld
jnp
pusha
mov
arpl
seto
jg
add
inc
sub
adc
and
sbb
push
call
or
xor
dec
cld
pop
add
push
call
or
scas
xor
and
jge
xor
sahf
add
ins
ret
push
push
sti
lods
addr16
sbb
les
jmp
jg
push
mov
call
jnp
mov
(bad)
call
scas
stos
(bad)
sbb
inc
std
push
aas
pop
or
gs
push
inc
mov
push
push
call
jbe
test
into
call
push
xchg
cmp
pop
sbb
jmp
pop
xor
std
dec
add
popa
xchg
call
push
les
push
test
xor
or
xor
ja
inc
ret
inc
sub
add
in
push
inc
loope
jo
jp
inc
push
sbb
clc
lahf
jne
fnstsw
xchg
cmp
jne
neg
(bad)
into
call
sbb
push
xchg
nop
jne
nop
fwait
push
aaa
dec
push
cmp
scas
or
inc
aas
or
mov
cmp
jge
mov
sbb
dec
out
fstp
inc
cmp
jl
pop
mov
dec
or
push
add
push
and
je
add
cmp
or
add
jmp
lods
push
add
cmp
jmp
outs
icebp
adc
add
(bad)
jmp
xchg
dec
cmc
sbb
int
jne
call
xchg
jg
or
je
lea
push
push
call
add
aaa
push
and
xchg
add
jmp
js
or
cdq
stos
dec
or
enter
cs
inc
jmp
outs
icebp
rol
push
lahf
xchg
mov
test
xchg
lock
jne
pop
inc
push
(bad)
push
dec
dec
adc
mov
cmp
clc
(bad)
xchg
xor
cmp
mov
jmp
dec
sbb
jno
push
out
sbb
pop
cld
mov
call
mov
mov
xor
out
sub
je
dec
dec
je
dec
je
popa
bound
mov
jp
mov
jmp
pop
sbb
adc
lock
mov
sbb
lock
ds
cmp
and
les
ror
jle
jmp
mov
pushf
push
das
inc
sti
(bad)
call
sbb
xlat
dec
xchg
xor
push
clc
enter
push
pop
pop
jmp
out
fiadd
call
dec
dec
push
sbb
mov
(bad)
out
or
mov
mov
or
mov
mov
idiv
sbb
mov
jne
mov
cwde
add
sbb
mov
je
hlt
xchg
xor
call
mov
fsubr
fs
mov
call
xchg
xchg
xchg
dec
dec
inc
cmp
inc
push
out
cli
mov
mov
or
ja
daa
(bad)
sar
sbb
pop
dec
dec
sbb
push
dec
je
mov
shl
imul
into
imul
call
or
push
or
gs
mov
jmp
or
fmul
test
dec
adc
call
add
mov
jnp
out
sbb
cmp
push
push
cmp
clc
sbb
adc
loopne
jae
or
mov
push
stos
jnp
push
out
xor
fiadd
add
loop
cmp
jne
jge
dec
adc
(bad)
(bad)
dec
cld
mov
push
push
call
nop
adc
fstp
cmp
bound
push
push
(bad)
jbe
fcmovne
push
jno
call
leave
leave
(bad)
cmc
add
mov
loope
iret
fld
xor
mov
sub
inc
cmp
iret
jl
test
mov
in
add
mov
mov
mov
push
jge
pusha
gs
call
or
(bad)
push
addr16
je
adc
enter
push
aaa
addr16
inc
jp
aaa
adc
pop
mov
aas
inc
or
mov
inc
sbb
sahf
retf
rcr
test
out
dec
push
pop
mov
push
test
je
xor
sub
inc
and
mov
or
aaa
add
in
push
popf
lea
out
add
mov
loopne
push
fdivr
ds
or
jmp
cmp
imul
cld
add
lock
xchg
lods
push
jbe
jae
cld
test
lock
inc
jo
jle
call
psubusw
mov
leave
jo
mov
jge
or
mov
test
fcom
xor
xchg
jne
jbe
shr
jle
inc
fcom
jne
int
add
in
add
ja
push
push
call
and
jmp
test
push
mov
jne
adc
and
pop
push
call
je
push
das
add
push
call
adc
push
pop
fwait
js
inc
into
jne
push
ret
hlt
(bad)
sbb
popa
pusha
adc
stos
pop
jmp
push
or
xchg
push
popa
lock
or
pusha
xor
dec
dec
mov
loope
jnp
enter
nop
sub
and
add
cld
jne
sub
pusha
lock
enter
shl
arpl
mov
sbb
push
pop
lea
clc
mov
or
add
mov
push
or
push
call
or
dec
or
jne
and
jne
aad
inc
rol
inc
fiadd
out
cli
xchg
je
push
loopne
jmp
dec
or
adc
pop
push
mov
test
(bad)
xchg
mov
inc
add
cmp
jo
in
and
ins
icebp
push
dec
sbb
inc
adc
adc
(bad)
loopne
dec
leave
cmp
mov
adc
sahf
and
ja
cmp
dec
ror
mov
mov
call
inc
push
and
xor
ins
je
lea
pop
sub
xchg
push
clc
loope
inc
jne
movs
(bad)
adc
sub
mov
test
pop
popa
call
adc
pop
mov
inc
dec
adc
fild
inc
mov
and
push
add
add
lea
add
fwait
mov
call
les
xchg
xchg
dec
and
mov
das
or
push
adc
bound
adc
leave
xchg
sub
push
in
push
call
daa
mov
sub
fsub
adc
jne
push
fld
inc
or
push
xchg
fdivr
outs
sbb
inc
adc
pop
xchg
inc
sbb
pop
or
fild
ret
cmp
cld
xchg
div
push
inc
mov
dec
mov
jne
jmp
mov
jmp
aaa
jbe
add
cmp
je
dec
jns
fdiv
push
sbb
leave
ja
mov
or
sub
add
mov
clc
inc
dec
into
call
jl
cmp
jnp
or
cmp
push
scas
pop
add
imul
inc
push
and
jb
mov
mov
js
inc
push
lock
pop
push
push
mov
mov
ins
push
and
push
mov
dec
dec
xchg
scas
mov
fnsetpm(287
add
cmp
cmp
cs
sbb
xchg
mov
adc
mov
fnstenv
xchg
adc
push
ret
sbb
inc
inc
and
xchg
mov
bound
xchg
out
sti
call
push
push
call
push
sti
je
das
and
add
pop
lock
push
test
sub
jg
jecxz
hlt
push
shr
inc
push
lea
inc
clc
push
push
xchg
call
jecxz
repz
js
shr
jo
out
call
mov
jbe
sar
and
hlt
jne
mov
push
mov
arpl
aam
push
or
icebp
inc
cmp
xor
push
xor
call
aas
xor
push
or
adc
inc
or
or
fstp
rcr
xor
add
sub
and
dec
neg
add
or
leave
movsx
daa
sbb
out
inc
rcr
inc
or
jnp
or
push
sbb
in
lock
(bad)
fist
add
stc
jns
int3
jmp
cld
(bad)
rdpmc
call
adc
inc
adc
mov
add
fild
or
jle
pop
sbb
push
call
push
fisttp
fild
mov
push
push
call
or
ret
into
add
add
mov
cmp
push
mov
cmps
dec
mov
sbb
inc
cmp
mov
jmp
sbb
loopne
adc
call
call
adc
or
mov
mov
in
call
push
mov
hlt
mov
push
jne
mov
fsub
xor
std
mov
mov
xchg
inc
fcomp
xchg
add
push
push
popf
js
or
mov
xlat
je
xor
dec
adc
pop
add
lea
jg
or
inc
hlt
call
pop
loopne
inc
mov
test
jb
shl
int3
sub
into
fldcw
popf
jne
push
push
sahf
jns
sub
mov
call
xchg
lea
xor
push
mov
sub
or
int3
or
jne
aam
rol
xchg
push
add
add
jle
in
mov
loop
lock
or
fcom
ins
push
call
push
jne
(bad)
dec
mov
mov
mov
mov
mov
call
and
sar
clc
pop
test
or
pop
inc
mov
inc
call
cmp
ret
jg
pop
retf
mov
call
xor
sar
out
ficom
mov
add
sti
sbb
jmp
adc
xchg
dec
cmps
and
dec
or
or
mov
cmp
fdiv
sbb
push
inc
pop
call
pusha
push
inc
mov
inc
add
aaa
les
inc
in
push
fild
push
lock
push
les
cmp
(bad)
(bad)
fmul
add
inc
push
push
call
fdivr
inc
inc
int
adc
sbb
push
sbb
(bad)
and
or
push
mov
out
(bad)
in
cdq
dec
mov
dec
add
dec
cmp
inc
adc
add
es
outs
in
add
ja
push
call
not
call
cmp
icebp
jmp
test
push
rol
mov
or
mov
mov
jbe
sbb
pop
pop
(bad)
enter
pop
mov
adc
outs
stos
or
call
cmps
popa
pop
in
xchg
jns
popa
and
inc
push
push
mov
fdiv
cmps
add
push
push
push
push
push
mov
mov
or
pop
test
add
xor
(bad)
fidiv
add
inc
cmp
adc
add
mov
sbb
and
mov
rol
lods
and
call
push
and
fdiv
ins
add
sbb
xor
cwde
mov
or
shl
sbb
rcr
push
mov
je
in
push
jl
push
xchg
pusha
(bad)
push
call
fistp
pop
sub
mov
cmps
pop
push
movs
cmp
rol
bound
mov
jne
mov
js
dec
lock
fiadd
mov
fucomip
nop
in
inc
and
outs
push
fild
scas
mov
and
call
mov
cmp
mov
inc
add
jmp
sbb
cmp
mov
hlt
xor
(bad)
lock
call
jmp
jo
cmp
je
sar
ins
push
push
push
mov
(bad)
(bad)
jmp
int3
adc
inc
adc
sbb
mov
call
sbb
push
push
pusha
js
inc
adc
inc
jmp
or
cmp
retf
call
es
ret
bound
adc
add
repnz
jecxz
add
xor
jb
fldz
(bad)
(bad)
dec
push
mov
sub
call
and
pusha
jne
push
(bad)
mov
push
lea
push
call
pop
pop
push
mov
cmp
mov
cmp
inc
mov
fs
xchg
je
push
mov
lods
ins
jmp
cmp
or
and
aaa
push
cmp
fdivp
call
into
hlt
imul
mov
or
push
mov
dec
aas
inc
mov
mov
lea
sti
jg
mov
iret
pop
setne
mov
mov
cmp
dec
(bad)
adc
ror
push
aaa
cld
sbb
jne
jmp
add
hlt
rol
fdiv
sub
inc
sbb
call
sbb
xor
inc
fdiv
sbb
call
sbb
data16
out
aaa
imul
fild
rol
aas
xor
icebp
call
inc
or
clc
xchg
mov
mov
inc
xor
cwde
jne
inc
call
jne
cmp
call
jmp
pop
pop
mov
imul
ror
push
dec
out
cmp
add
push
cmp
add
pop
pop
es
jecxz
inc
les
add
adc
shl
pop
xor
ja
stc
add
sbb
mov
and
je
mov
pop
sub
add
cmp
mov
lods
and
sub
and
jo
mov
stos
in
fwait
lock
mov
add
sub
push
enter
push
leave
dec
or
xor
test
cmp
mov
cmp
(bad)
inc
add
icebp
mov
push
adc
mov
retf
push
jg
inc
fimul
or
shl
sub
in
stos
mov
(bad)
and
test
(bad)
jg
jo
sti
call
add
jbe
lea
call
cmp
fdivr
call
or
(bad)
mov
or
lea
call
or
call
cmp
rcr
jbe
jg
addr16
push
and
call
sbb
inc
sbb
clc
lock
clc
hlt
pop
cmp
cmp
cmp
jne
jae
stc
pop
jne
push
repnz
dec
cmp
sbb
call
fidivr
adc
sbb
cld
out
ret
aas
lea
push
lea
test
setne
push
inc
dec
pop
mov
call
lock
sub
cmp
jbe
jg
push
lea
call
or
sar
dec
adc
arpl
hlt
push
or
outs
ret
sub
test
je
and
into
jge
inc
adc
adc
gs
add
cmp
imul
push
out
outs
or
clc
aam
or
shr
cmp
jb
imul
push
jge
cmp
inc
(bad)
sbb
test
jnp
and
jo
xor
jne
call
and
call
xor
jmp
rcr
movs
sub
clc
add
jne
push
cmp
loopne
mov
mov
call
jb
xor
jo
mov
jns
inc
cmp
mov
cmp
add
push
mov
push
call
pop
xlat
xor
mov
or
adc
jns
or
inc
jmp
retf
call
mov
xlat
add
or
push
push
push
add
sbb
dec
enter
sub
add
mov
into
je
push
icebp
sbb
in
bound
or
or
je
jno
iret
in
lock
cmp
mov
jle
mov
adc
call
or
sar
push
pop
or
sar
(bad)
add
daa
sti
dec
sbb
sti
inc
cmp
jl
mov
rcl
mov
dec
mov
dec
jle
aaa
mov
mov
adc
lea
mov
test
je
inc
pusha
fadd
inc
adc
jae
add
call
or
inc
inc
inc
cmp
jl
adc
sub
pop
cmc
jp
call
inc
adc
xor
push
lea
mov
pushf
and
aam
rcl
inc
xor
and
fiadd
mov
push
pop
call
push
or
mov
add
je
mov
jl
jg
cmp
ret
mov
outs
mov
or
test
sbb
inc
fmul
push
pop
aas
sar
mov
lea
ret
lock
call
jg
test
and
inc
sub
mov
je
sbb
clc
or
jmp
ins
sub
add
jbe
in
outs
mov
dec
lock
push
call
loopne
and
push
cwde
lods
fsubr
ss
mov
ins
mov
sti
aaa
aad
cmps
dec
retf
stos
call
jmp
icebp
(bad)
jp
dec
icebp
(bad)
cli
out
xor
push
adc
retf
je
call
mov
outs
lock
dec
cli
xchg
fmul
call
or
push
push
add
fucomi
punpckhdq
push
call
leave
and
es
dec
fsubr
test
lea
sbb
sbb
jae
xchg
xor
push
aam
into
inc
cmp
fstp
mov
fsubr
pop
sub
xor
inc
stc
cmp
adc
iret
push
movs
or
xor
and
inc
cld
mov
mov
inc
add
adc
sub
add
(bad)
mov
call
test
xchg
loope
jne
test
je
mov
add
inc
cmc
inc
je
mov
lea
lea
ror
push
add
cmp
push
xlat
hlt
sbb
push
out
cmp
adc
jne
call
jo
inc
movs
mov
and
adc
test
add
inc
mov
or
iret
and
or
xor
sub
inc
test
sub
daa
call
and
iret
popf
cmp
sbb
cmp
neg
call
loopne
push
inc
lock
fsub
enter
sub
cld
push
loope
(bad)
or
push
mov
pop
lods
call
or
and
call
adc
das
add
push
imul
movs
movs
lea
movs
call
call
dec
push
add
jnp
mov
arpl
shl
inc
inc
push
fs
sub
add
mov
aaa
loope
jl
adc
addr16
push
call
jl
adc
push
call
add
neg
jle
pop
pusha
lahf
sbb
idiv
jle
int3
hlt
mov
push
jle
jnp
stos
sbb
push
and
jo
and
cmps
loop
das
rol
mov
sub
or
add
push
jnp
mov
add
xchg
cmps
add
rol
add
push
and
mov
mov
inc
add
cmp
outs
loop
jl
adc
pusha
push
sar
or
push
call
ret
and
jmp
loopne
ret
or
fwait
xchg
ficomp
inc
ds
sbb
fimul
call
or
jecxz
stos
inc
push
push
popf
(bad)
std
mov
call
or
leave
test
lock
dec
hlt
movs
loop
mov
jmp
cmp
push
call
sbb
clc
or
aaa
xlat
adc
lock
cmp
pop
les
retf
push
call
inc
pop
mov
das
dec
pop
inc
int3
jle
push
imul
mov
and
not
fld
xchg
jge
jg
test
call
scas
mov
or
xchg
loope
add
mov
inc
add
or
ret
test
repnz
push
cmovg
jmp
or
push
push
or
jg
and
inc
pop
dec
add
add
sub
mov
test
mov
(bad)
add
xor
cmp
seto
lods
pop
not
xor
push
and
pop
mov
call
loope
scas
mov
push
push
and
punpckhdq
call
addr16
inc
test
out
cli
or
call
or
sub
add
ret
cld
jg
popf
scas
inc
mov
call
push
call
pop
jmp
and
xchg
jge
cmp
clc
mov
or
sub
inc
add
hlt
das
or
add
adc
jp
inc
adc
push
cdq
es
and
cwde
in
cmp
add
and
sub
add
jge
add
rol
pop
mov
or
leave
sbb
or
lahf
push
push
icebp
pop
add
add
ret
mov
stos
scas
inc
into
and
and
sbb
sbb
or
inc
pop
inc
inc
(bad)
jne
push
call
xchg
ins
or
loop
rol
rcl
call
inc
cmp
mov
jl
lea
mov
add
pop
sbb
or
out
outs
or
das
push
push
call
test
ja
ret
scas
inc
mov
mov
inc
or
stos
(bad)
clc
dec
dec
arpl
(bad)
and
jmp
xchg
sub
jns
xchg
mov
js
xchg
jg
and
mov
loope
add
cli
xchg
les
push
sbb
or
push
adc
sub
icebp
jne
jl
add
inc
dec
icebp
das
mov
ja
inc
jge
sbb
iret
call
call
mov
xor
je
sub
mov
call
cld
push
iret
fimul
call
dec
in
call
pop
push
scas
ss
jmp
mov
pop
call
and
jbe
add
ss
inc
jle
pop
adc
call
sbb
pushf
sbb
sbb
mov
inc
in
and
in
int
fwait
repnz
sbb
call
cmp
les
cdq
leave
and
cdq
mov
mov
ret
fiadd
xor
add
push
call
or
ror
push
add
xlat
cli
je
cmps
loop
jl
enter
cmc
inc
cli
pop
rol
cmps
sbb
inc
and
pop
hlt
push
into
aad
mov
(bad)
unpcklps
mov
adc
fadd
adc
jle
pop
inc
aaa
hlt
adc
adc
inc
sub
outs
out
adc
outs
inc
or
mov
fcom
ret
push
push
xchg
leave
bound
sbb
test
test
jnp
lds
in
jg
aaa
dec
dec
sub
(bad)
cdq
aas
cmp
or
push
call
add
jecxz
xor
loop
cmp
mov
lock
gs
add
and
pop
push
jo
xchg
dec
pushf
mov
call
push
push
call
mov
jne
cmp
leave
je
or
adc
jmp
inc
hlt
jns
push
push
cmp
mov
out
add
sbb
mov
inc
fnsave
dec
adc
push
cmps
(bad)
call
push
mov
aaa
adc
test
call
push
mov
push
scas
or
in
addr16
popf
cwde
pop
test
adc
inc
inc
xchg
xchg
mov
dec
cmps
ret
add
push
mov
jecxz
mov
add
lds
cmc
das
add
adc
pop
mov
adc
mov
les
adc
lds
je
inc
test
cmc
mov
xor
das
mov
cmp
jbe
pusha
ret
xor
jmp
jae
ret
inc
js
mov
add
ficom
aaa
mov
into
(bad)
dec
nop
sbb
or
sbb
clc
mov
out
and
call
jno
out
scas
push
sub
out
xor
or
add
lds
jg
clc
jle
cmp
jne
mov
(bad)
jne
call
inc
fucomip
enter
call
mov
shl
push
add
mov
enter
push
call
fwait
or
inc
mov
cmp
inc
or
ret
or
std
sbb
inc
fmul
adc
mov
call
mov
iret
fsub
sbb
call
out
mov
jg
cmp
pop
jmp
sub
sub
test
call
in
sbb
or
pop
or
sub
ss
mulps
sti
in
push
imul
push
add
and
cmp
(bad)
call
in
int3
mov
inc
or
sahf
cmp
pop
mov
pop
in
push
mov
cli
push
cmc
mov
push
jno
cmc
push
ret
push
adc
into
call
xor
call
sub
call
div
adc
push
lea
or
scas
and
loopne
push
mov
push
mov
fwait
jb
sar
sahf
pop
push
mov
push
std
dec
or
jle
call
push
imul
pop
(bad)
mov
call
jne
fcmovnb
mov
add
push
(bad)
xchg
sub
lahf
aaa
push
test
fstp
cld
fnstsw
call
mov
xor
push
push
mov
inc
push
call
pop
cmp
aad
jmp
push
add
xchg
idiv
push
mov
push
jg
mov
push
mov
add
and
call
push
jmp
(bad)
cmp
(bad)
in
call
mov
mov
and
adc
add
or
mov
add
push
sbb
add
or
mov
push
add
add
mov
mov
dec
mov
add
xor
mov
lods
cld
jne
out
std
mov
shl
or
adc
push
push
retf
dec
jne
shl
push
mov
push
cmc
(bad)
dec
clc
call
mov
mov
jmp
lea
ror
adc
mov
dec
pop
pop
mov
push
je
inc
inc
or
sub
and
pop
icebp
mov
cld
call
mov
and
jmp
mov
(bad)
(bad)
cmp
jl
xchg
push
popa
loopne
cwde
and
jmp
movs
test
js
sbb
sbb
xbegin
call
lea
call
push
shl
mov
push
stos
or
jb
sub
cmp
outs
jge
mov
jne
pop
cmps
or
jne
mov
mov
dec
xor
cmp
jl
mov
push
jmp
loop
call
jl
or
xchg
dec
fstp
or
sbb
das
add
add
hlt
push
call
ficomp
call
call
inc
out
or
packsswb
sub
loopne
mov
mov
add
sub
stos
mov
adc
push
push
call
dec
push
call
into
add
push
ret
or
(bad)
out
inc
shl
(bad)
cld
ret
or
mov
movs
(bad)
jmp
xchg
clc
add
loope
mov
push
dec
xchg
out
inc
pop
mov
dec
and
sbb
sbb
std
icebp
shl
jg
bound
enter
loopne
xor
and
out
dec
inc
inc
push
xchg
sbb
addr16
std
inc
mov
push
call
jo
lds
adc
sbb
mov
es
mov
cld
call
call
adc
shl
push
push
sbb
imul
pop
arpl
jge
push
call
fmul
dec
idiv
enter
inc
or
xchg
ins
mov
jge
push
mov
xchg
or
ret
cld
ins
call
out
mov
sti
or
out
lds
inc
lods
sub
mov
mov
fadd
lock
or
jne
cmp
imul
sbb
leave
retf
ret
mov
push
call
adc
ja
ja
mov
call
popa
faddp
(bad)
push
push
mov
mov
call
push
iret
call
xchg
cmp
lods
fnstsw
es
in
cmp
add
fsub
nop
call
sar
lods
(bad)
pop
cmp
sbb
xchg
stos
xchg
push
or
mov
xchg
pop
or
retf
cmps
pusha
imul
stc
fsub
inc
adc
jo
ss
fild
pop
push
sbb
inc
pop
mov
and
xor
xor
ins
add
add
mov
or
loope
xchg
lea
call
pop
and
and
jg
push
cs
sbb
inc
add
ja
sbb
and
je
push
lea
ins
or
push
jl
lahf
repz
jne
rol
xor
mov
inc
movs
or
mov
ret
mov
je
jmp
add
(bad)
out
ja
icebp
je
mov
dec
or
fdivp
xchg
mov
or
je
sti
push
sub
cmc
cli
lea
or
mov
lds
out
jle
mov
or
add
push
call
push
mov
fwait
repz
call
add
jmp
(bad)
(bad)
lds
pop
sub
xchg
call
ror
inc
inc
and
inc
mov
xchg
pop
shr
or
pop
mov
push
pop
ret
adc
xor
mov
lea
push
mov
ins
or
(bad)
jg
mov
call
mov
add
cmp
jbe
or
stos
clc
jg
mov
(bad)
cmp
jb
mov
(bad)
jge
inc
mov
push
call
fwait
cmp
sub
cmp
and
or
repnz
push
dec
or
hlt
push
call
cld
add
mov
push
call
jo
imul
and
fist
sub
adc
jno
out
ret
or
hlt
daa
in
dec
mov
jns
call
pop
ror
mov
push
cmp
mov
aad
inc
popa
mov
push
call
call
and
adc
(bad)
(bad)
(bad)
add
out
sbb
cwde
xchg
xchg
sub
mov
push
sub
call
pop
add
nop
sub
jg
sbb
and
xchg
adc
outs
jne
mov
lea
das
in
dec
and
xchg
sub
push
call
xchg
cmc
sub
test
add
cmp
adc
mov
cmps
arpl
(bad)
lahf
test
mov
enter
mov
mov
mov
add
mov
(bad)
fidiv
movsx
pop
lock
enter
ins
sbb
ds
adc
dec
mov
inc
mov
mov
jnp
push
push
imul
sbb
pusha
pop
fsub
dec
pop
jmp
loop
pop
jbe
std
(bad)
(bad)
fmul
outs
imul
mov
rcr
add
retf
ror
xchg
dec
ror
sub
inc
icebp
pop
xchg
dec
or
popa
sbb
adc
into
outs
or
jne
xor
xchg
and
or
out
data16
stos
clc
add
cs
lods
sbb
btr
out
icebp
xor
aad
inc
mov
push
mov
add
mov
xchg
adc
enter
outs
loopne
cld
pop
dec
and
jmp
fst
cmc
sbb
pop
cdq
repz
push
xor
and
call
sbb
adc
pop
dec
sub
(bad)
push
add
xor
out
dec
sub
cmps
daa
push
test
mov
cli
sub
sub
mov
cs
and
loope
push
jp
mov
add
enter
sbb
add
mov
aad
or
or
out
inc
pop
and
pop
mov
mov
add
cmp
pop
and
mov
dec
xor
add
retf
add
or
add
dec
stos
idiv
fidiv
std
push
call
adc
mov
call
mov
(bad)
call
out
or
pop
cmp
pop
pop
jmp
push
or
push
cmps
call
or
and
addr16
add
jmp
loopne
je
inc
jne
push
xor
cmp
jle
push
lea
ffreep
sbb
add
inc
stos
lahf
inc
cmp
jl
pop
xor
mov
outs
mov
pop
jmp
test
call
mov
adc
jne
call
push
mov
jo
pop
daa
add
rcr
inc
mov
call
ret
sbb
ret
xor
lods
(bad)
sbb
gs
call
dec
cld
and
push
dec
adc
in
adc
xor
not
xbegin
push
mov
and
push
adc
sbb
mov
add
shr
aam
dec
pop
inc
aad
mov
mov
fild
push
call
push
cmps
mov
das
ret
jno
and
mov
(bad)
pop
and
push
adc
add
cmp
or
cmp
jl
cmp
jle
mov
push
daa
adc
pop
and
add
xchg
sub
clc
inc
and
inc
dec
sbb
fsubp
inc
adc
les
stos
add
add
aaa
loope
hlt
hlt
call
or
retf
test
ja
mov
(bad)
lock
popf
jecxz
ja
pop
mov
je
cmp
jne
push
call
cmp
clc
setne
cmp
jne
mov
push
call
sti
fstp
inc
cmc
or
push
or
std
dec
mov
pop
jne
cwde
xchg
lds
fdivp
fcmove
push
call
ins
hlt
pop
adc
xchg
call
je
push
ffreep
mov
add
jno
mov
jne
pop
pop
inc
hlt
cmp
jne
enter
cld
je
(bad)
mov
cmps
stc
mov
jp
jo
push
loop
add
fidivr
test
retf
jb
push
out
aas
add
les
into
push
lea
mov
push
call
pop
lock
adc
idiv
pop
repz
arpl
jmp
or
or
ret
add
pop
xchg
jnp
or
fsubr
sub
dec
or
call
and
push
jg
xchg
pop
je
and
push
add
add
jne
pop
icebp
(bad)
fcom
jne
push
push
push
mov
(bad)
and
sub
mov
mov
adc
clc
push
fnsave
call
cmp
mov
pop
pop
xchg
call
icebp
or
or
push
push
sub
aad
and
adc
test
(bad)
fist
pusha
add
cmp
je
mov
mov
fild
push
fadd
sub
add
xor
mov
pminsw
(bad)
(bad)
fldz
mov
xor
mov
mov
push
pop
neg
sti
outs
fimul
sub
pop
cmp
sub
dec
inc
sbb
and
dec
(bad)
iret
popa
(bad)
jg
pop
push
jne
push
call
add
(bad)
adc
mov
inc
cmp
sbb
and
(bad)
push
push
push
pop
lea
mov
rep
pop
pop
add
and
cmp
pop
cmp
xchg
inc
adc
imul
idiv
or
jo
push
scas
lock
fistp
cs
lea
pop
mov
mov
rep
mov
test
or
je
push
call
cli
(bad)
push
dec
inc
add
push
inc
mov
sub
cld
sar
push
mov
add
or
sbb
mov
fild
pop
fmul
test
cmp
inc
cmp
call
or
mov
pop
popa
push
push
lea
push
call
mov
mov
push
call
cmp
or
or
out
enter
cmc
std
out
loop
retf
mov
inc
fmul
fucomip
mov
mov
add
mov
mov
mov
mov
adc
mov
dec
and
push
mov
dec
clc
(bad)
clc
call
fadd
leave
add
jge
inc
adc
pop
and
jns
call
add
call
aam
mov
add
sbb
dec
and
or
push
push
call
rcr
adc
dec
icebp
lahf
and
sbb
les
mov
adc
(bad)
inc
cwde
sbb
sti
(bad)
inc
and
in
bound
ds
hlt
std
ja
jg
add
hlt
movs
jp
push
jmp
call
and
push
adc
rcr
ja
(bad)
fadd
cs
pop
fs
mov
jmp
aaa
imul
idiv
sub
xchg
sbb
mov
(bad)
aas
aaa
or
mov
ret
xor
cmp
xchg
or
or
sub
add
test
je
inc
(bad)
(bad)
call
jle
jmp
lea
cmp
jne
lea
push
push
call
(bad)
(bad)
(bad)
dec
inc
in
push
pop
idiv
add
mov
add
jmp
inc
mov
sub
cmp
inc
push
mov
mov
pop
pop
pop
leave
ret
call
sti
ja
enter
idiv
call
push
add
ret
call
mov
and
mov
dec
lock
inc
xchg
call
mov
shr
xor
hlt
adc
add
ds
xchg
mov
movs
xor
(bad)
jg
inc
cld
jl
push
add
pop
inc
fiadd
fidiv
jmp
push
push
xor
clc
add
sar
ror
clc
fild
add
das
lea
test
add
push
(bad)
xor
fisubr
jae
lock
jbe
jmp
jg
adc
pop
leave
ret
cmp
setne
push
dec
lahf
and
or
xor
mov
sub
and
push
mov
inc
inc
push
mov
test
call
fld
pusha
xor
mov
mov
mov
(bad)
jmp
repnz
mov
mov
fst
fstp
mov
mov
iret
mov
cwde
clc
or
inc
call
xor
push
sub
data16
lahf
fwait
and
add
call
call
xor
pop
add
(bad)
push
jns
xor
inc
or
or
js
inc
jne
cmp
je
xor
and
addr16
add
dec
or
inc
mov
mov
and
jg
into
call
mov
shl
lahf
call
fmul
scas
test
jle
add
push
mov
inc
inc
mov
das
sub
mov
into
das
sub
push
mov
add
sbb
adc
fcomp
cmp
inc
popa
sbb
ds
ja
mov
in
xchg
imul
stos
jmp
std
icebp
call
and
pop
clc
shl
icebp
inc
add
fadd
(bad)
neg
ret
mov
pushf
push
and
adc
adc
or
jmp
mov
out
inc
push
push
xchg
call
dec
jo
std
enter
aaa
cld
js
add
test
lea
neg
push
lea
sbb
jle
retf
and
call
xor
cmp
xor
dec
mov
pop
add
mov
shr
(bad)
push
leave
movsx
mov
fild
fmul
mov
stc
clc
cmps
cmp
jl
mov
adc
sbb
mov
fild
ret
neg
jmp
mov
push
push
inc
jle
cdq
lea
neg
fld
push
push
jge
out
dec
call
sti
add
or
adc
pop
push
dec
or
jmp
jno
pusha
aas
arpl
inc
adc
idiv
aaa
inc
lock
xor
xor
cmp
mov
inc
cld
adc
mov
out
push
fldz
fstp
jb
mov
lea
or
push
mov
(bad)
(bad)
inc
loop
mov
lea
fld
mov
(bad)
push
xor
inc
add
sbb
(bad)
(bad)
(bad)
std
mov
and
mov
sub
inc
cld
mov
sub
mov
mov
aas
idiv
mov
lea
mov
mov
fstp
jmp
sub
mov
pop
(bad)
(bad)
(bad)
(bad)
jmp
cmp
jb
sub
shr
cmp
jae
add
add
sub
cmp
jb
test
fld1
fst
sbb
pop
aam
add
fldz
sub
pop
orps
nop
fild
jle
cmp
or
push
popf
mov
sar
movs
inc
in
or
xlat
pusha
push
sub
rcr
inc
cmp
pop
fmul
enter
fstp
jbe
out
fld
sahf
add
ror
fld
mov
cmp
loope
dec
inc
fld
lea
fmul
lea
fmul
fsubrp
fld
ja
(bad)
fstp
retf
adc
fld
fsub
fstp
fld
fsub
fstp
or
fstp
call
clc
fld
add
fadd
shl
add
dec
fstp
fstp
fstp
jbe
add
mov
rol
cmp
fmul
fld
inc
jmp
fmul
fld
fdivr
lahf
jmp
dec
(bad)
rcr
fstp
jb
fmul
cmp
nop
jb
lock
(bad)
(bad)
out
clc
jge
imul
sub
jle
lea
mov
cdq
idiv
jmp
mov
fld
fcom
cmp
jne
pop
mov
pop
neg
jmp
adc
loopne
(bad)
mov
push
pop
pop
sbb
or
or
jmp
(bad)
push
jno
or
jg
inc
(bad)
js
aas
stc
add
scas
rcl
xor
out
ds
ins
jge
pop
and
sub
jne
call
sbb
inc
add
test
mov
mov
or
or
add
lods
mov
and
add
lea
call
jecxz
out
push
fs
mov
and
xor
cmp
jne
sar
mov
fs
cmp
adc
and
or
push
inc
ja
or
call
je
jg
sub
add
xchg
adc
dec
mov
(bad)
out
out
add
push
outs
add
jnp
add
push
out
mov
je
lea
cli
mov
xchg
cmp
(bad)
adc
dec
and
cmp
add
xor
adc
dec
and
es
rcr
ds
pusha
daa
jns
mul
test
pop
dec
mov
add
cmp
repz
dec
lods
jmp
in
inc
inc
popa
jne
push
push
arpl
inc
pop
add
adc
dec
mov
pop
add
ja
leave
xlat
sar
call
pop
or
inc
(bad)
arpl
call
dec
jne
movzx
push
push
call
or
add
leave
repz
dec
pusha
add
je
(bad)
push
call
jg
aas
repnz
je
cs
mov
call
add
pop
push
std
jle
jne
call
mov
inc
lea
in
push
sbb
(bad)
ja
mov
mov
mov
add
mov
arpl
pop
mov
test
cmp
and
(bad)
pop
(bad)
or
sub
or
jmp
inc
xor
or
cmp
je
(bad)
sbb
test
je
jo
mov
push
call
pop
or
add
mov
mov
push
cmc
cmp
jne
jmp
push
pop
ss
(bad)
out
add
mov
sbb
je
push
into
and
fs
out
dec
pusha
mov
call
mov
cli
mov
sub
test
sbb
ds
cmc
jmp
test
inc
mov
cdq
sub
jg
or
call
nop
jg
popa
test
call
inc
mov
test
stc
mov
xchg
adc
push
and
rcr
fild
push
cmp
imul
adc
pop
in
and
lods
xor
test
outs
lsl
daa
jle
add
xchg
push
scas
sbb
push
mov
call
sbb
push
dec
add
cmp
jae
or
ret
add
pop
mov
pop
push
mov
outs
add
neg
stos
jmp
jle
je
push
call
dec
mov
mov
push
call
or
ss
mov
add
push
icebp
popf
mov
jle
call
fiadd
inc
or
or
fwait
out
jle
pop
dec
sub
js
dec
pop
and
mov
je
test
aaa
inc
vmovdqa
mov
(bad)
(bad)
fcomp
fnstsw
test
clc
(bad)
inc
jne
mov
and
mov
mov
push
cli
and
sahf
jle
jne
cmp
mov
jbe
int
stos
dec
and
lea
mov
(bad)
jne
inc
cmp
jb
sub
push
hlt
dec
or
cmp
sub
or
dec
call
sub
or
jg
cmc
mov
cmp
cmp
jg
(bad)
push
lea
mov
call
push
int3
push
call
mov
inc
call
inc
push
xchg
scas
mov
cmp
push
add
add
test
sbb
loopne
stos
mov
dec
push
add
test
call
mov
call
mov
mov
mov
inc
add
shl
adc
ja
jne
mov
lock
and
inc
cmp
jne
sbb
lock
or
mov
xor
push
clc
je
push
scas
test
enter
jmp
(bad)
dec
or
add
and
sub
call
repz
aas
jae
sbb
repnz
repnz
push
call
jne
pop
aas
ja
push
cmps
fisub
sub
bnd
add
std
dec
add
push
je
call
repz
sbb
push
mov
xor
cmp
push
jne
xor
test
cwde
cli
outs
(bad)
jne
je
fstp
call
xor
adc
jne
xor
rcr
adc
sub
or
push
cmc
fstp
les
mov
inc
(bad)
cli
adc
adc
mov
fist
lock
retf
call
or
push
push
call
mov
scas
mov
es
mov
daa
add
jns
loopne
adc
clc
arpl
mov
mov
push
cld
inc
add
inc
inc
add
push
call
add
test
inc
mov
push
in
and
inc
int3
test
inc
mov
dec
or
inc
ret
call
push
mov
fcmove
cmps
dec
fadd
movs
push
(bad)
call
rcl
mov
scas
adc
add
xchg
push
mov
lea
pop
add
mov
mov
mov
cmps
add
add
(bad)
jne
push
call
and
pop
lahf
pop
fwait
pop
mov
enter
jnp
lds
pop
pusha
adc
mov
inc
btr
cmp
jge
lds
test
dec
sbb
aaa
add
mov
add
jbe
scas
call
iret
push
push
call
push
cmp
je
or
push
or
fisttp
(bad)
mov
add
out
push
push
(bad)
imul
cmp
xchg
sbb
xchg
jo
add
pop
(bad)
fnstsw
sbb
inc
adc
fld
add
ret
fld
fstp
xchg
dec
into
sbb
or
and
xchg
adc
add
mov
jl
inc
adc
leave
call
fld
fmul
inc
in
call
call
mov
hlt
call
stos
fmul
dec
add
inc
or
mov
movs
fld
leave
mov
fild
pop
sbb
inc
movs
pop
and
inc
adc
fistp
inc
or
xor
fadd
add
push
out
int3
cmp
mov
(bad)
in
adc
and
lods
mov
and
loope
inc
or
xchg
sbb
push
ror
call
mov
inc
sub
call
inc
add
add
or
jmp
and
mov
aaa
fmul
enter
idiv
mov
jmp
and
inc
cmp
call
in
or
adc
inc
dec
add
fstp
repz
mov
je
cmp
xchg
clc
push
and
push
or
repz
call
out
fisttp
fld
call
div
call
pop
push
push
mov
push
mov
push
push
xor
fnstsw
pop
cmp
invd
push
mov
call
mov
call
lods
pusha
add
sub
adc
mov
cmp
shl
fwait
mov
mov
in
push
adc
adc
add
test
mov
je
mov
mov
call
test
or
fxch
call
lahf
jle
iret
call
sahf
adc
inc
fistp
xor
js
nop
and
push
and
mov
std
pop
iret
mov
call
mov
xor
adc
pop
add
rep
pop
pop
cmp
mov
popf
mov
or
jg
add
test
cld
out
(bad)
xor
xchg
mov
jo
loop
push
cld
dec
lea
add
pop
add
add
jg
or
or
pop
adc
mov
adc
mov
call
aas
and
pop
dec
(bad)
cli
add
inc
mov
call
mov
aaa
push
push
ss
and
mov
clc
out
bound
fs
pop
or
pop
pop
pop
sbb
call
addr16
les
(bad)
cdq
dec
push
test
mov
icebp
pusha
xchg
sbb
call
xor
mov
lods
sub
jge
pop
xor
std
js
(bad)
add
adc
dec
push
push
lea
repnz
clc
out
mov
repz
repnz
add
bnd
in
add
push
call
or
inc
push
call
sbb
inc
push
std
jnp
inc
or
call
stc
call
ins
pop
add
std
sub
or
int3
dec
mov
(bad)
frstor
aaa
shr
jne
rol
push
xchg
popf
or
and
fmulp
test
ds
push
mov
call
push
test
xor
dec
xor
xor
jbe
push
ficomp
mov
retf
pop
inc
sub
lock
mov
mov
sub
ins
shr
and
(bad)
out
lea
test
pop
je
or
mov
hlt
inc
jo
sahf
mov
inc
and
jno
hlt
xchg
dec
out
dec
adc
mov
mov
nop
(bad)
ficom
retf
call
ins
add
ret
inc
pop
sar
inc
test
push
or
mov
and
test
pop
inc
add
push
outs
pop
aam
fcom
push
xor
clc
adc
push
(bad)
call
mul
add
pop
loopne
sbb
push
pop
es
or
mov
add
das
mov
call
mov
aaa
mov
sbb
push
add
jo
jmp
call
xor
pusha
sub
fistp
jbe
icebp
call
and
xor
cmp
add
loopne
pusha
rcr
mov
xchg
sbb
call
mov
mov
jecxz
mov
push
(bad)
pop
mov
fldenv
add
popa
out
push
cmp
xor
cmp
inc
into
jle
call
dec
and
lea
mov
xor
push
mov
lds
adc
jne
push
push
jo
out
mov
ja
cli
dec
cmps
je
mov
cmp
sub
je
mov
fnstcw
dec
lea
adc
add
add
and
xchg
and
add
or
sahf
clc
push
call
popf
rcl
push
js
mov
(bad)
aam
shl
(bad)
push
inc
hlt
push
fld
dec
push
push
bound
movs
jns
mov
(bad)
push
call
mov
or
cmp
je
and
pop
or
cmp
outs
sub
stc
call
inc
mov
ds
adc
daa
mov
push
idiv
out
mov
lahf
xor
add
xor
jmp
(bad)
(bad)
push
cmp
add
cmp
jne
or
cmp
inc
jg
jg
cmp
cmp
jne
or
mov
(bad)
fst
add
les
lock
cmp
sub
aaa
mov
mov
retf
call
xor
dec
popa
jecxz
add
addr16
inc
xor
push
lea
sbb
fisttp
push
ffreep
push
push
jg
inc
(bad)
call
add
inc
add
sbb
jb
add
ror
push
loopne
clc
push
adc
repz
stos
pop
and
popf
(bad)
(bad)
clc
mov
add
xor
call
mov
xchg
push
add
mov
jge
sbb
mov
cmp
inc
adc
shl
cmp
mov
mov
lea
je
dec
dec
cmp
jae
mov
(bad)
(bad)
jmp
mov
mov
jmp
add
jle
cmp
je
cmp
jge
(bad)
mov
pop
lea
push
push
call
xor
push
call
dec
inc
adc
push
or
call
outs
and
mov
mov
pop
popa
jbe
add
std
jbe
mov
sub
push
loope
or
loop
(bad)
scas
ja
or
and
call
add
inc
adc
out
out
cmp
jl
sub
xor
inc
jl
or
add
mov
je
pop
xor
add
jge
mov
or
add
push
push
stos
sar
xchg
adc
inc
or
inc
pop
jle
pusha
sar
jmp
inc
or
inc
jle
push
aas
sbb
xor
arpl
jbe
ret
add
scas
cmp
call
push
inc
imul
stos
call
ret
stos
les
mov
std
ror
push
repnz
scas
adc
mov
or
jmp
inc
add
push
xchg
push
call
data16
mov
xchg
(bad)
test
add
xchg
and
pop
and
icebp
jl
cmp
adc
in
cld
out
add
inc
add
iret
push
push
push
ja
or
addr16
(bad)
pop
jbe
loop
inc
adc
add
lock
imul
xor
or
movzx
inc
(bad)
mov
adc
or
sar
push
lea
cmp
jge
pusha
mov
arpl
adc
mov
pop
pop
xchg
scas
xchg
jle
mov
add
jecxz
or
(bad)
lods
add
sbb
adc
xchg
xchg
ficom
mov
(bad)
jg
(bad)
mov
cmps
cmp
adc
movs
inc
ror
or
fmul
(bad)
out
js
adc
(bad)
out
scas
mov
mov
sub
lea
mov
or
loop
enter
or
lea
push
call
or
mov
sahf
das
add
hlt
aad
neg
xor
jae
add
push
call
jle
pop
add
push
out
retf
test
sub
or
lock
adc
mov
dec
cld
sub
cmp
jne
jge
add
dec
or
div
push
push
and
or
or
or
aas
dec
mov
inc
or
jl
add
xchg
dec
push
loope
jb
cs
std
ja
jg
or
push
call
je
dec
dec
dec
jns
fdivr
inc
jmp
push
cmovl
pusha
mov
cmps
mov
adc
clc
jle
mov
sub
out
shl
push
enter
inc
pop
call
xor
jae
inc
sbb
jge
cmp
jle
mov
adc
jg
(bad)
push
ss
push
mov
sbb
xor
xor
ds
push
mov
and
add
xor
jle
sbb
xor
popa
out
dec
in
dec
or
stc
pop
je
out
ror
sbb
sti
loop
lea
retf
push
loope
jge
(bad)
push
adc
jmp
or
push
fadd
dec
or
sub
icebp
test
lea
push
push
call
pop
sub
sbb
ret
sbb
call
or
into
add
add
fnstcw
clc
out
pop
ins
pop
pop
test
mov
add
add
or
mul
dec
or
jnp
mov
xor
push
call
cs
rcr
jbe
pop
or
fild
pop
mov
cmps
pop
rcl
aas
dec
or
xchg
jle
popa
sub
push
pop
push
mov
add
aas
pop
push
mov
cmps
pop
mov
sbb
outs
add
or
pusha
dec
dec
adc
inc
sub
xchg
push
std
sbb
cmps
adc
add
sub
out
es
(bad)
pushf
(bad)
inc
adc
sub
int
inc
inc
or
xor
mov
jnp
cmp
inc
lock
sub
repz
jl
adc
ja
call
ja
femms
(bad)
nop
pop
neg
lds
and
jmp
add
add
int3
int
cwde
sub
jp
pop
add
dec
pusha
fstp
jb
jge
and
in
fild
inc
popf
inc
adc
xor
popf
add
cmp
adc
cmp
push
adc
and
adc
aaa
jne
mov
das
xchg
pop
stc
inc
adc
lahf
add
jne
and
outs
jmp
shl
ret
in
call
sub
lea
push
es
ins
jp
xor
mov
push
cmp
js
clc
fadd
aaa
lock
mov
add
jle
xchg
dec
cld
mov
arpl
inc
or
add
push
call
add
ja
mov
aas
jle
fist
cs
call
mov
test
gs
ja
dec
adc
push
inc
loopne
loopne
inc
lea
push
call
or
aad
adc
or
fwait
pop
fnsave
or
add
push
call
(bad)
(bad)
inc
add
add
push
cmp
jne
lea
xor
mov
test
je
cmp
jl
cmp
jg
ud0
(bad)
mov
jmp
cmp
cmovbe
jmp
cmp
jl
cmp
popf
or
shl
or
inc
inc
and
(bad)
inc
jl
cmp
je
add
push
sub
sbb
ja
lahf
cwde
test
dec
or
lock
add
adc
ja
jmp
sbb
call
jge
jbe
test
jne
cmp
test
je
std
pop
lock
je
nop
je
cmp
jne
pop
call
out
push
call
mov
pop
jmp
pop
ret
mov
add
push
je
inc
pusha
lea
jo
push
call
xor
sbb
or
ret
cdq
and
aaa
mov
add
mov
pop
mov
dec
sub
call
or
cdq
sub
or
mov
push
call
inc
add
imul
xor
test
pop
lea
(bad)
(bad)
mov
jb
push
call
mov
xor
mov
test
pop
mov
je
ja
push
call
jne
sub
(bad)
sti
jnp
or
sti
sub
pop
inc
and
cmp
je
and
pop
clc
cmp
jge
(bad)
(bad)
jnp
push
add
clc
mov
sub
mov
push
push
(bad)
push
cli
call
nop
pop
je
mov
push
call
fs
js
in
mov
cmp
ins
or
movs
jmp
(bad)
jle
(bad)
call
call
inc
clc
push
call
inc
jge
std
cmp
pop
je
jne
inc
mov
lods
jmp
cmp
je
inc
scas
test
pop
xchg
or
adc
jge
test
les
sbb
push
call
daa
in
pop
fsubr
jne
add
test
mov
lock
call
cmp
ja
jmp
xor
rcr
pop
xor
cmp
ss
push
call
or
cmp
je
cmp
je
cmp
je
cmp
dec
xchg
inc
mov
je
idiv
jne
cmp
mov
push
push
call
les
jbe
call
jmp
inc
jmp
and
mov
cmp
jne
or
jnp
dec
mov
xor
mov
inc
inc
cmp
jne
mov
sub
push
inc
xchg
jnp
outs
dec
mov
call
call
clc
add
mov
or
push
fistp
mov
jle
jl
mov
call
mov
adc
call
(bad)
fnsave
pushf
cmp
jl
xor
adc
es
out
into
pop
pop
jne
adc
ds
dec
cli
shl
test
jge
jl
mov
and
clc
inc
in
or
outs
leave
push
sub
add
add
retf
jle
add
imul
lds
(bad)
push
adc
rol
add
cmp
(bad)
aaa
adc
add
jg
(bad)
(bad)
clc
mov
je
push
jmp
inc
xor
mov
push
call
lock
cmp
(bad)
xlat
add
je
xor
cmp
jne
into
je
cmp
mov
adc
cmp
je
test
adc
test
clc
cmp
ss
out
and
dec
jmp
push
call
cld
ja
jg
je
push
pop
cmp
je
push
call
xchg
rcl
sbb
or
call
call
xchg
(bad)
mov
into
cmp
xchg
js
jo
or
cmp
pop
hlt
(bad)
mov
or
lea
call
push
push
inc
shl
xchg
cmp
inc
push
push
jge
sub
jmp
push
gs
adc
jmp
scas
(bad)
sti
mov
bnd
pop
fwait
cmp
jne
push
mov
add
je
clc
or
add
sub
xchg
xchg
xchg
sbb
and
cli
sub
xchg
pop
scas
pop
jo
gs
push
push
mov
fwait
cli
dec
test
sub
xor
inc
mov
push
mov
daa
push
std
cld
mov
test
add
cmc
add
add
pop
add
mov
pop
mov
call
mov
push
call
jo
mov
adc
add
jo
hlt
push
jne
or
ret
loop
ror
xor
sbb
xor
mov
fiadd
adc
in
cmp
adc
loopne
add
test
out
adc
pop
cmc
mov
push
call
call
mov
lea
cmp
adc
pop
push
mov
cmp
cmp
icebp
je
cld
xor
leave
sub
and
push
arpl
jnp
mov
adc
and
fld
ret
pushf
push
je
inc
cmp
aas
cwde
mov
pop
xor
or
inc
sbb
das
fld
push
and
inc
aaa
hlt
test
(bad)
fnstsw
inc
inc
mov
pop
xor
cmp
push
in
out
add
mov
push
and
inc
loopne
and
or
je
js
xchg
adc
pop
pop
xchg
push
cmp
mov
ret
push
(bad)
jge
and
popf
inc
sbb
push
xor
xchg
and
mov
mov
mov
jg
push
test
xor
cmp
btc
add
push
sub
add
xchg
ret
mov
mov
and
inc
inc
dec
cmp
aas
out
inc
aas
pop
fild
fmul
or
into
mov
xor
lahf
jnp
and
inc
push
inc
imul
inc
sbb
fild
ret
fldenv
inc
xor
mov
inc
and
inc
lods
xor
dec
push
xor
adc
fstp
(bad)
add
pop
sub
mov
not
into
or
jo
inc
xor
(bad)
pop
jl
cmps
push
mov
mov
or
call
addr16
stos
mov
pop
push
cld
mov
push
mov
enter
dec
or
neg
mov
lahf
and
inc
and
ror
adc
out
or
pop
dec
jno
inc
sub
fld
(bad)
xor
sbb
mov
cmp
cmp
pop
in
mov
mov
or
js
sbb
(bad)
sbb
lea
mov
shr
mov
sti
inc
ret
fld
loope
sub
adc
or
fldz
and
cmp
and
sbb
call
fstp
add
pop
pop
in
xchg
sub
mov
inc
sar
cmp
jle
push
pop
add
mov
bound
inc
shl
adc
mov
call
nop
mov
inc
adc
push
fld1
push
mov
inc
sub
test
fmul
shl
call
push
push
or
loope
or
out
xchg
fdiv
mov
xchg
sbb
adc
xchg
mov
dec
and
push
mov
test
icebp
dec
and
sub
jmp
cmp
and
sbb
pop
push
(bad)
aas
cmp
call
jmp
mov
cmp
jg
mov
or
lock
pop
mov
lods
fist
mov
xchg
mov
scas
pop
add
loopne
or
sbb
je
js
add
xchg
add
jmp
lahf
sub
lds
sbb
mov
sub
xchg
jnp
mov
retf
loope
fld
add
outs
mov
jne
push
je
inc
imul
aas
fadd
push
mov
jmp
cmp
or
sbb
add
sbb
push
call
gs
icebp
popa
mov
pop
fldenv
jo
sbb
ja
mov
rcr
movs
jl
dec
adc
inc
and
sub
out
pop
mov
dec
push
out
lock
and
or
mov
inc
xchg
mov
clc
fistp
call
pop
push
mov
lahf
in
scas
cwde
stc
mov
mov
mov
fdiv
std
add
ret
push
std
pop
popa
xor
mov
mov
aad
adc
daa
add
and
inc
jmp
fdiv
push
push
lea
aaa
lea
mov
add
mov
xor
fild
xor
mov
push
call
stos
call
retf
call
movzx
dec
adc
jl
pop
pop
fistp
sbb
pop
ret
push
sbb
mov
scas
adc
dec
or
or
fcomip
or
clc
adc
ror
jbe
push
lea
fucomip
or
push
inc
jnp
push
call
ja
push
enter
mov
or
sti
mov
movzx
inc
add
cmp
jl
pop
lea
call
pop
pop
pop
mov
add
das
sub
add
pop
ss
pop
mov
and
(bad)
mov
jbe
push
mov
movzx
ror
xlat
fild
stc
lock
into
cmp
call
inc
cmp
jl
pop
xor
pop
out
loope
jmp
add
mov
push
inc
dec
mov
xor
jl
mov
xor
hlt
and
or
add
push
mov
call
jmp
or
retf
add
test
xchg
ja
fstp
jl
or
js
out
pop
pusha
add
fs
stos
(bad)
out
test
dec
lock
xor
push
call
cmp
ja
jo
mov
jbe
icebp
mov
popf
mov
mov
push
push
fild
(bad)
stc
popf
clc
mov
fmul
clc
push
push
out
call
inc
cld
add
cmp
jl
jmp
add
test
adc
jge
push
clc
mov
sbb
push
nop
mov
call
push
lea
or
push
stos
iret
ficom
in
push
inc
in
mov
push
adc
arpl
jmp
add
pop
retf
(bad)
aas
lock
dec
add
js
and
inc
or
mov
pop
push
inc
call
call
loope
mov
jecxz
or
push
add
retf
push
out
call
push
fistp
clc
add
call
das
push
push
lods
sbb
sbb
loopne
out
les
inc
pushf
cmp
jl
pop
test
jb
in
push
mov
or
pop
pop
stc
push
adc
inc
fadd
mov
pop
dec
or
call
gs
lods
push
add
pop
jnp
lahf
and
sahf
leave
dec
dec
clc
int
(bad)
scas
out
add
add
out
call
int3
cmp
mov
idiv
fdivr
push
mov
fld
mov
ror
push
sahf
and
inc
sti
inc
cmp
jl
pop
int
add
(bad)
or
jmp
rcl
ja
sub
clc
(bad)
jmp
jbe
loop
call
sahf
and
je
add
inc
push
pop
add
jno
setae
fcomp
sub
dec
xor
jmp
or
pop
test
mov
frstor
mov
lock
data16
fs
loopne
mov
or
lea
jge
loop
xor
pop
ret
(bad)
and
idiv
call
sbb
(bad)
call
int3
push
adc
cwde
test
cmp
cld
dec
inc
dec
mov
inc
xor
mov
cmp
jle
adc
xchg
mov
call
clc
push
call
inc
scas
test
sbb
mov
not
inc
and
cdq
pusha
cmp
(bad)
jbe
jno
arpl
bound
pop
push
mov
dec
mov
jg
cli
add
dec
xor
scas
je
dec
je
dec
je
mov
fwait
out
mov
loopne
(bad)
mov
inc
adc
nop
adc
mov
aaa
jmp
cmp
jmp
cmp
cmp
add
xchg
loope
xor
int
xchg
test
dec
cmp
or
sahf
xchg
cmp
stos
push
jecxz
cmp
push
and
daa
ror
cld
jg
jo
hlt
ror
mov
test
test
out
into
jne
push
mov
call
pushf
push
call
xor
push
pop
call
xchg
lds
rcr
xor
push
clc
xchg
jg
call
popa
push
mov
pusha
daa
in
mov
jge
add
or
adc
and
push
jne
add
push
movs
neg
cli
pop
and
sbb
stc
nop
lods
fiadd
inc
jbe
push
pop
(bad)
hlt
sub
nop
out
push
jnp
sub
xor
icebp
call
daa
aam
cmp
jne
inc
add
sub
inc
lahf
xor
cmps
jle
test
adc
add
adc
mov
cwde
jmp
(bad)
test
std
mov
scas
mov
xor
sub
pop
and
and
outs
leave
sbb
inc
or
repz
cmp
push
mov
sbb
inc
int3
and
push
xor
add
sbb
mov
imul
(bad)
jge
ret
inc
mov
fimul
data16
pop
sbb
mov
and
in
mov
add
add
xchg
pop
call
mov
jge
ja
push
or
cli
sbb
mov
je
mov
ins
jmp
mov
add
or
push
and
daa
fs
add
iret
jno
or
addr16
and
add
cmp
adc
lods
inc
imul
addr16
xor
xchg
xchg
in
add
mov
arpl
mov
cs
shr
xchg
mov
push
nop
sbb
inc
(bad)
dec
xor
xchg
dec
push
nop
mov
dec
not
arpl
xor
push
add
dec
mov
xlat
sub
clc
xor
and
push
lock
test
out
adc
fwait
cmpxchg
pop
push
jge
call
inc
arpl
lock
dec
hlt
idiv
dec
call
fmul
push
mov
cld
push
pop
mov
and
cmp
mov
dec
push
push
fsub
jae
ja
nop
movs
sbb
adc
cmp
int3
pusha
es
sbb
dec
cld
push
out
cmp
jl
in
pop
cmp
jne
sbb
xor
mov
bswap
neg
(bad)
cld
push
(bad)
loopne
setne
jmp
adc
add
add
or
out
sub
stc
call
out
fstp
push
(bad)
call
call
test
push
fnsave
mov
mov
into
call
inc
push
daa
push
repz
dec
cld
push
loop
call
fadd
es
icebp
out
inc
ret
xlat
lds
call
loop
add
cld
mov
cld
inc
mov
adc
ror
fistp
outs
loope
push
push
lea
call
popa
fmul
loope
xor
and
loope
loope
or
ja
loope
shl
call
jbe
cmp
pop
je
adc
movs
cld
call
out
jbe
fldz
fstp
call
hlt
add
mov
lods
sbb
call
je
push
mov
pop
ja
lods
adc
mov
scas
in
ret
push
xor
sub
sbb
inc
lock
or
adc
adc
ret
push
jmp
std
cld
(bad)
inc
push
out
popf
jecxz
mov
or
in
jmp
adc
dec
clc
or
cwde
repz
push
xor
lea
sub
mov
and
push
sar
push
jp
cmp
push
ror
pop
xor
js
push
and
inc
dec
dec
mov
inc
inc
mov
lods
fs
jmp
adc
pop
cmp
sbb
and
ja
adc
pop
(bad)
aam
xchg
and
adc
cld
(bad)
call
mov
mov
mov
call
les
push
add
push
call
jle
pop
xlat
or
push
mov
rol
ret
dec
dec
inc
sub
mov
sbb
or
dec
adc
push
sti
mov
jmp
retf
mov
loop
jb
inc
call
sbb
fwait
jp
out
jle
ds
lods
xor
adc
add
jmp
sbb
push
jne
or
inc
icebp
pop
push
cwde
or
shr
call
call
sub
jbe
push
or
(bad)
fiadd
adc
test
gs
add
pop
mov
dec
sbb
and
mov
push
test
inc
pusha
bound
pop
stc
push
cld
shl
fistp
add
push
clc
adc
push
ins
jmp
xchg
push
pushf
int3
stos
into
dec
and
call
sbb
call
push
pusha
adc
mov
sub
ret
sbb
nop
inc
push
mov
and
sbb
(bad)
loopne
add
inc
cmp
les
cmp
cmp
clc
test
cmp
scas
cmp
pusha
mov
cmp
cmp
jl
fnstcw
adc
jo
and
ror
call
iret
sub
and
test
in
mov
call
cli
mov
faddp
mov
scas
pop
or
push
fnstsw
(bad)
cld
(bad)
mov
and
sbb
push
dec
push
ret
cdq
lahf
mov
sbb
jmp
mov
adc
mov
add
mov
ds
not
add
adc
mov
out
cmp
sbb
push
fadd
cmp
daa
add
add
push
pop
fdivr
ror
push
call
dec
test
push
pop
sub
call
mov
push
pop
mov
mov
aad
or
push
call
inc
sar
jns
sub
xor
dec
dec
jle
mov
sub
mov
mov
sub
mov
push
call
aas
inc
cmp
add
popf
pop
push
cmps
pop
movs
pop
clc
jmp
inc
jg
lea
call
int3
hlt
call
cmp
inc
xchg
jno
xchg
mov
(bad)
(bad)
dec
clc
mov
int3
mov
(bad)
mov
js
call
pop
mov
aad
sbb
pop
mov
cs
cmc
push
adc
mov
test
cld
out
and
adc
pop
or
pop
inc
adc
push
pop
mov
loope
test
mov
mov
pop
mov
or
push
mov
call
fidiv
lea
call
retf
push
push
test
cmc
aaa
je
cld
cmp
inc
shr
call
cmp
add
mov
mov
clc
and
scas
or
push
aad
jb
mov
or
or
es
les
mov
mov
mov
xor
jne
add
xchg
sub
(bad)
call
xchg
inc
ss
loope
outs
xor
add
ds
dec
hlt
call
retf
mov
pop
or
cs
add
xchg
test
ficomp
ss
hlt
push
pop
dec
cld
dec
mov
test
mov
mov
add
push
hlt
xchg
pop
mov
xor
xor
or
mov
rcl
call
mov
idiv
loope
mov
lock
push
in
cmp
jne
or
sbb
(bad)
cmp
je
mov
mov
push
cmps
and
in
(bad)
jg
xchg
ret
push
call
std
je
imul
sbb
cmc
je
or
sbb
inc
out
out
outs
cli
ret
icebp
(bad)
mov
mov
mov
or
xchg
popf
mov
outs
inc
mov
inc
(bad)
in
fs
ret
xor
jmp
int3
test
cs
xchg
add
aam
sbb
mov
fwait
lahf
stc
mov
dec
sbb
loope
add
adc
sbb
cmp
push
mov
ss
je
cmp
jg
xor
(bad)
(bad)
fnstcw
sar
or
int
mov
cmc
icebp
fs
inc
sbb
mov
xor
call
pusha
dec
fcmove
test
jne
inc
mov
jne
mov
and
adc
adc
js
fist
shr
cmp
sti
pop
jbe
inc
and
mov
daa
add
gs
sbb
std
fidiv
inc
push
add
je
add
push
mov
and
cmp
sete
push
add
enter
js
popf
xchg
ror
cmp
or
mov
sti
xchg
xor
jne
mov
and
and
jmp
ret
(bad)
(bad)
jg
loope
mov
xchg
and
and
sub
neg
sbb
inc
cmp
clc
or
push
push
call
call
fiadd
inc
fbstp
cmp
iret
call
popa
mov
push
mov
or
lods
loopne
push
xor
or
add
ret
out
xchg
mov
mov
test
sub
add
fstp
ins
or
js
inc
icebp
call
push
adc
out
push
ret
xchg
xor
call
out
push
call
inc
inc
clc
mov
test
jne
cmp
test
scas
push
add
sbb
push
xchg
lea
push
call
pop
push
push
pop
add
test
scas
jecxz
in
cmps
xchg
in
mov
mov
sbb
jae
ins
cld
xor
push
pop
and
push
push
and
push
cmc
sub
add
add
fsub
mov
fild
sbb
fs
in
and
inc
lock
add
mov
(bad)
fsub
fdiv
sbb
inc
ins
push
jnp
hlt
fsub
or
fld
pop
or
rcr
cmp
add
jnp
pop
aaa
(bad)
call
sub
imul
fld
popf
rcr
dec
pop
xchg
cmp
and
xor
and
inc
xchg
loope
mov
sbb
jmp
sbb
outs
or
(bad)
jle
std
dec
mov
sub
xor
je
dec
je
dec
adc
jmp
mov
xor
pusha
inc
pop
jmp
push
mov
(bad)
push
leave
mov
mov
movzx
or
movzx
shl
or
push
dec
cmc
mov
enter
fistp
or
enter
ins
shr
mov
arpl
mov
mov
je
loopne
mov
mov
imul
jne
call
(bad)
(bad)
pusha
or
mov
aad
loopne
xor
inc
hlt
(bad)
aas
push
call
push
mov
call
jmp
mov
dec
inc
push
push
push
call
pop
and
add
push
mov
xor
xchg
sub
xor
call
add
jbe
pop
inc
dec
aaa
call
xor
cmp
leave
hlt
sbb
mov
test
jae
or
dec
dec
or
call
xor
aad
add
jg
mov
lock
push
call
sub
mov
mov
mov
cmp
pop
in
imul
lods
sbb
rol
jmp
sbb
add
mov
or
adc
sbb
jecxz
cmp
imul
lods
pop
pusha
or
adc
inc
jbe
jbe
sub
dec
je
dec
je
dec
je
out
mov
pop
mov
mov
add
push
inc
addr16
xchg
test
neg
mov
push
and
nop
sub
xor
inc
jmp
cmp
add
or
nop
jmp
imul
push
call
stos
into
into
call
mov
fist
jmp
call
mov
call
dec
xor
ficom
mov
xor
jbe
dec
sub
or
mov
nop
xor
sbb
adc
mov
leave
sub
or
int
ror
mov
out
(bad)
cmps
or
mov
clc
jne
mov
data16
xor
pop
inc
jmp
and
rcl
fld
inc
enter
and
adc
jne
retf
xchg
push
loopne
push
push
jb
mov
sbb
pop
adc
fimul
push
popf
outs
mov
es
mov
mov
test
lock
adc
(bad)
fld
jg
inc
inc
mov
pop
or
lds
sbb
adc
push
jbe
xor
xor
lock
(bad)
pushf
sti
mov
dec
mov
lods
cmp
cmp
jbe
test
pop
dec
call
rol
outs
clc
push
call
and
or
mov
sbb
cli
push
mov
(bad)
mov
pop
cmp
jne
lea
push
push
push
lea
call
add
stc
push
adc
mov
retf
adc
adc
push
dec
sbb
ret
cmp
sbb
push
push
aaa
jge
call
out
push
jp
pop
ds
sub
mov
cwde
xchg
jmp
push
mov
dec
adc
(bad)
adc
js
out
mov
or
add
cmc
sub
sti
pop
xor
sbb
mov
and
pop
cs
mov
(bad)
cmp
jle
mov
push
(bad)
in
out
outs
sub
fs
(bad)
call
pop
xchg
jo
call
imul
sbb
mov
clc
mov
adc
jge
mov
dec
mov
cs
(bad)
(bad)
jle
dec
jmp
js
call
push
add
add
jb
ret
or
adc
cmp
or
mov
jne
push
mov
push
push
je
icebp
call
addr16
mov
call
call
cdq
dec
xor
clc
call
push
and
popa
sbb
adc
call
(bad)
ins
pop
ror
sbb
add
je
mov
leave
and
sbb
adc
dec
(bad)
cld
shl
inc
mov
mov
sbb
pop
xrelease
and
push
shl
test
sub
and
jne
out
pop
inc
xchg
test
jl
cmp
add
mov
and
inc
icebp
fst
movs
call
add
movs
call
enter
pop
(bad)
jae
push
xor
mov
ret
call
out
sub
xor
das
mov
add
or
stos
hlt
ja
test
in
enter
push
into
aam
mov
jecxz
mov
push
mov
and
ja
std
out
add
add
xchg
ret
cwde
mov
push
jb
sbb
jmp
mov
mov
test
mov
push
sar
call
cld
mov
je
or
xor
push
call
cmp
mov
jg
clc
fdivr
push
mov
sub
loop
cmp
sub
adc
loope
pop
mov
mov
sbb
(bad)
cli
pop
push
xchg
sub
ds
cld
inc
adc
push
jmp
mov
push
and
jmp
push
mov
jmp
adc
(bad)
jg
push
call
jmp
mov
shl
push
call
aas
inc
test
push
xor
test
jle
mov
or
imul
pop
dec
or
sti
out
in
dec
clc
push
test
mov
pusha
inc
bound
jp
pop
pop
pop
lods
cmp
dec
cld
dec
xor
sub
je
dec
je
dec
jne
xor
clc
call
jmp
jo
fild
addr16
mov
add
xchg
adc
xchg
cmp
or
and
cmp
pop
mov
scas
sbb
inc
pop
add
inc
and
(bad)
frstor
cli
call
add
xor
cmp
ins
push
adc
xor
cmp
xor
xchg
pushf
pushf
xchg
cmp
push
add
nop
out
pop
add
and
sub
mov
xor
xor
pop
neg
mov
cld
ja
or
test
je
mov
xor
ss
push
dec
push
sbb
test
dec
inc
push
ds
mov
fcom
pop
ret
xor
inc
pop
fcomp
and
popf
test
pop
scas
inc
sbb
fild
dec
sbb
cmp
xor
dec
add
or
inc
adc
sub
loope
pop
add
add
je
pop
add
pop
in
fld
outs
nop
out
gs
push
add
out
sub
sbb
xor
cmp
and
cld
es
sbb
retf
fcomip
push
call
pop
add
pop
std
inc
cwde
mov
jbe
xor
out
add
or
sbb
leave
inc
adc
mov
in
and
repnz
jg
movs
add
or
mov
jmp
and
jmp
add
inc
and
sti
xor
pcmpgtd
jmp
mov
xor
cld
jmp
iret
call
cmp
and
jmp
cmp
push
fld
fs
and
xchg
fild
pop
adc
add
(bad)
xchg
bound
hlt
or
inc
cmp
movs
pop
push
out
adc
push
or
xor
inc
xor
popa
inc
lods
and
call
xor
mov
fst
xchg
dec
xor
push
or
sti
dec
and
mov
cmps
mov
pusha
xor
cmp
fstp
and
sti
push
xor
in
in
dec
push
js
call
(bad)
(bad)
push
fstp
pop
fwait
iret
call
sub
mov
sbb
xor
add
hlt
push
idiv
push
jae
(bad)
jne
add
repnz
adc
(bad)
call
mov
aam
test
push
outs
call
adc
push
push
mov
and
repz
or
cmc
cmp
or
push
in
aaa
xchg
dec
or
dec
adc
push
adc
adc
(bad)
cmp
push
add
into
call
leave
push
sar
call
push
push
call
hlt
call
jo
jl
pop
pop
jo
(bad)
pop
jge
pusha
call
cmp
xor
je
sub
adc
loopne
or
pop
jmp
mov
rol
in
mov
and
call
push
int3
cmp
call
std
pop
mov
cmp
add
or
add
push
xlat
ret
push
xchg
rcl
mov
hlt
dec
fnstsw
call
movs
mov
push
pop
and
sub
std
(bad)
loopne
js
sbb
xchg
call
fstp
push
call
repz
call
mov
call
push
push
stos
and
sar
adc
inc
push
call
mov
cdq
push
push
(bad)
xor
push
push
mov
inc
or
ficom
jg
test
jl
mov
pop
xchg
mov
aas
jb
rol
add
pushf
mov
cld
lds
call
retf
or
icebp
ret
xor
test
jp
add
add
jg
fdivr
call
mov
cld
call
fisttp
leave
push
iret
or
scas
retf
imul
lds
rcl
fst
lds
jmp
inc
sub
not
mov
and
xor
ret
xchg
scas
xchg
push
mov
mov
xor
mov
cmps
call
das
xor
inc
mov
or
jns
inc
mov
sbb
sti
inc
inc
push
pop
add
push
loopne
adc
xor
mov
call
imul
add
push
push
mov
jo
mov
les
mov
leave
dec
push
call
jmp
(bad)
aas
pop
mov
retf
call
(bad)
push
test
loopne
repnz
xor
(bad)
lock
or
xor
sub
push
arpl
jmp
cmp
xchg
lock
imul
out
(bad)
cld
jnp
retf
fstp
push
or
fstp
lock
(bad)
iret
push
rcr
adc
pusha
clc
jg
shl
push
fldz
mov
fstp
call
test
rol
dec
push
xor
cmc
jg
push
pop
push
call
fld
popf
mov
mov
fstp
fld
push
and
inc
call
mov
outs
ficom
fld
or
inc
rcr
sbb
inc
loopne
jmp
push
push
call
push
xor
mov
sbb
(bad)
fidivr
test
std
xchg
pushf
xchg
(bad)
or
xor
or
sbb
xchg
or
adc
xor
loop
sbb
or
fdivr
mov
cmp
jle
mov
jp
shl
arpl
sbb
fmul
mov
sub
add
(bad)
loopne
cmps
xor
cmps
pushf
psllw
xchg
mov
lock
scas
mov
add
dec
es
aaa
rol
dec
call
mov
sub
pop
sbb
push
es
fdivr
jne
lea
(bad)
loopne
clc
or
push
mov
fs
loopne
xchg
push
call
xor
cld
dec
outs
pusha
dec
cwde
(bad)
(bad)
out
cmp
sbb
call
inc
cmp
jl
or
imul
pop
jns
or
lods
or
inc
inc
and
inc
cs
sti
xchg
pop
xchg
cmp
xchg
stos
dec
inc
aam
clc
sub
add
sar
and
das
call
stos
aad
cmp
jo
jnp
adc
push
jmp
fistp
add
repz
inc
lahf
sub
xchg
dec
inc
call
push
call
mov
jae
cmp
push
add
lock
call
sar
je
pusha
clc
into
call
lock
mov
and
or
fnstsw
mov
or
movs
add
cmp
fadd
in
clc
jne
mov
mov
jo
stos
pop
or
loope
movs
pop
push
push
call
jmp
adc
in
or
lock
(bad)
ffreep
iret
call
test
inc
in
aaa
cli
dec
or
mov
(bad)
test
push
call
sub
test
lock
jno
add
into
stos
and
sbb
out
jne
mov
add
add
ror
inc
inc
adc
ror
mov
popa
add
call
out
mov
xor
adc
add
cli
sbb
out
outs
mov
call
push
pusha
fisttp
adc
xchg
frstor
push
nop
daa
rcl
(bad)
add
mov
pop
push
popf
add
adc
std
shl
pop
cwde
mov
and
sub
sub
mov
pop
and
mov
jo
lahf
jle
or
cmp
push
mov
add
loop
call
ror
inc
push
js
(bad)
xchg
in
dec
clc
push
mov
sahf
loope
loope
mov
or
cmps
jnp
inc
test
call
frstor
or
mov
pop
je
pop
jmp
imul
add
jbe
mov
push
aam
inc
sub
or
push
jno
add
ins
adc
mov
add
test
add
nop
mov
and
das
mov
xchg
ret
in
and
mov
mov
jo
mov
jg
push
add
push
xchg
mov
clc
jg
rcl
(bad)
dec
and
inc
lods
loopne
pop
test
cmp
ret
loopne
and
je
call
pop
cdq
call
pop
adc
jg
lock
addr16
jmp
dec
add
cmp
mov
jle
mov
push
pop
call
or
movs
popf
mov
xchg
jb
cmps
outs
call
push
adc
inc
inc
cmp
or
jl
jmp
inc
fsubr
(bad)
mov
(bad)
aas
mov
jo
inc
dec
add
gs
aad
mov
or
gs
and
lock
sbb
sub
or
icebp
call
mov
jle
push
js
push
mov
enter
push
sti
mov
push
mov
call
stos
clc
in
call
dec
mov
dec
retf
pop
fst
inc
sbb
sub
sahf
rol
xchg
ds
or
call
sbb
push
ds
(bad)
aas
ins
mov
test
retf
call
push
push
cli
cmps
retf
mov
add
add
rol
push
aas
sbb
adc
inc
adc
jmp
xlat
adc
(bad)
stc
repnz
call
cdq
add
lock
and
inc
inc
mov
shl
rcr
cmc
adc
xor
inc
push
(bad)
fild
jno
mov
jne
push
push
push
call
pop
mov
mov
mov
push
ror
inc
or
call
fistp
jmp
push
inc
dec
scas
sub
loopne
mov
pop
ror
and
jb
sbb
xchg
loope
(bad)
push
mov
push
inc
shl
pop
(bad)
jmp
fisttp
cmp
or
sbb
aaa
and
add
call
push
inc
sub
mov
xchg
pop
pop
inc
mov
push
sbb
mov
pop
repnz
and
jb
add
mov
add
xchg
aaa
fs
add
push
mov
test
icebp
cdq
and
mov
rol
into
call
call
fild
aam
mov
mov
call
cmps
ss
test
rcr
lahf
movs
cld
arpl
inc
inc
mov
call
adc
push
pop
inc
imul
sbb
es
or
push
sbb
fwait
test
cmp
or
call
pop
mov
idiv
and
shl
sbb
fnstsw
mov
xor
outs
xchg
dec
adc
call
sub
inc
mov
lock
jle
call
cdq
jecxz
popa
call
adc
xchg
lds
add
fisttp
add
cwde
jno
sbb
add
fld
or
mov
inc
jmp
retf
add
mov
cld
push
fstp
inc
adc
push
ror
out
or
push
mov
mov
call
test
inc
std
cmp
mov
mov
sub
call
mov
or
sub
adc
push
pop
ja
les
js
xchg
mov
adc
sar
jge
call
pop
retf
cmc
inc
sub
dec
in
dec
jne
test
xchg
mov
je
xor
lock
call
xchg
dec
lea
loopne
call
inc
add
or
xor
pop
les
jmp
outs
call
call
lea
(bad)
loop
inc
push
and
cmc
in
std
fstp
and
call
and
shl
out
into
or
leave
sub
lods
lock
shl
pop
xor
shl
nop
xchg
sbb
mov
xor
cmc
cmp
(bad)
in
lea
loopne
clc
or
jne
mov
and
add
sahf
pop
idiv
push
push
call
sti
outs
pop
and
pop
ret
ss
cld
or
fwait
(bad)
rol
push
sub
dec
js
and
and
and
shr
and
lods
xchg
sbb
popa
mov
ds
and
cmp
xchg
adc
loopne
mov
shr
mov
test
pop
pop
sbb
mov
cwde
and
mov
dec
pushf
call
lahf
push
sub
mov
popa
cmp
mov
fisttp
pop
push
call
call
ret
cmp
inc
xchg
mov
fwait
mov
(bad)
jmp
ja
fdivr
arpl
clc
add
fld
in
and
add
cld
(bad)
fwait
jb
call
and
push
push
call
sbb
cld
pop
fist
jle
or
(bad)
pop
ret
mov
test
je
call
jne
fstp
(bad)
test
and
adc
inc
sbb
out
inc
push
data16
mov
xchg
dec
mov
sbb
mov
xor
es
or
int
push
call
rol
test
ja
and
aas
add
in
adc
mov
lahf
cs
adc
add
push
add
mov
adc
mul
or
push
push
push
push
mov
pop
out
(bad)
popa
sub
push
push
call
mov
(bad)
adc
fstp
pop
pop
lea
movs
adc
sbb
stos
call
or
sub
iret
inc
js
jle
inc
sbb
call
mov
add
lock
call
in
mov
aas
stos
bound
push
mov
or
sbb
(bad)
(bad)
cld
sbb
cwde
stos
and
sbb
xchg
(bad)
mov
in
inc
(bad)
mov
fild
mov
push
add
pop
lea
pcmpeqd
pop
or
(bad)
mov
retf
push
xor
push
inc
sahf
sbb
and
pop
mov
adc
call
call
js
mov
or
mul
aas
in
lea
dec
sub
out
out
xlat
mov
or
mov
mov
daa
add
lea
push
mov
fnstsw
or
jae
pop
inc
mov
add
in
adc
cwde
add
aas
sub
cdq
pop
(bad)
jmp
adc
sbb
cmp
jge
adc
ret
or
adc
fwait
and
pop
inc
cmc
nop
in
jns
retf
push
adc
sub
(bad)
arpl
mov
sbb
call
leave
sub
sub
mov
in
clc
or
in
dec
in
je
or
and
inc
sub
inc
fiadd
sbb
ds
xchg
sub
and
mov
or
xchg
rol
inc
sbb
addr16
inc
sbb
call
je
mov
fs
xor
pop
call
and
inc
popf
adc
(bad)
enter
add
mov
ja
pop
mov
sbb
push
add
add
ja
icebp
repz
xchg
pop
add
icebp
or
sub
jmp
pop
add
fisttp
test
je
and
cmp
and
add
cmp
push
add
jmp
pop
dec
mov
fstp
pop
and
dec
sar
fadd
call
cmp
mov
jle
push
lock
or
mov
scas
mov
dec
or
or
mov
in
call
cmp
jbe
add
cmp
ss
add
jge
jne
inc
jmp
push
cld
push
push
call
loop
add
clc
cmp
jb
cmp
jmp
add
add
push
push
call
push
add
push
push
call
xchg
mov
push
adc
out
push
or
adc
add
push
adc
sbb
add
fst
mov
push
lea
mov
sbb
nop
out
push
in
les
jb
push
jne
add
fisttp
or
addr16
std
jecxz
(bad)
call
stc
add
dec
pop
fld
push
xchg
push
cmc
sub
inc
sub
push
shl
inc
jmp
mov
dec
push
push
mov
jnp
or
pusha
and
js
and
push
push
mov
add
add
imul
call
mov
sbb
inc
or
pushf
lea
jo
call
or
or
pop
clc
dec
sub
push
mov
push
test
add
push
push
xor
cmps
loopne
pop
and
pusha
cdq
sbb
pusha
mov
xor
jg
or
mov
fnstcw
lock
add
mov
mov
jmp
call
mov
or
add
je
imul
push
lea
cmp
push
xor
mov
push
dec
xor
aaa
int
(bad)
jmp
push
mov
icebp
inc
loopne
clc
(bad)
cmp
push
call
(bad)
call
jb
dec
pop
pop
or
or
inc
adc
out
fadd
cwde
adc
pop
sar
(bad)
push
push
call
test
daa
je
and
lea
add
cld
outs
fadd
push
mov
push
mov
call
out
add
jno
add
mov
jne
fs
cmp
popa
adc
fidivr
inc
or
mov
jbe
sbb
or
jmp
clc
xchg
push
fst
popa
mov
fadd
or
cmp
jb
jg
dec
hlt
dec
mov
int
sti
call
push
push
call
es
sub
push
jb
ror
enter
call
pop
pop
mov
jmp
test
adc
or
les
retf
adc
(bad)
mov
or
call
mov
pop
jmp
xlat
add
xchg
mov
(bad)
into
cwde
or
retf
daa
arpl
or
inc
mov
sub
add
retf
rcl
clc
pop
push
arpl
popa
adc
(bad)
jnp
pop
mov
pop
sub
inc
jp
fcmovne
call
repnz
push
pop
nop
call
nop
idiv
pop
mov
pop
ins
sbb
jne
cmp
je
(bad)
lock
inc
je
mov
jmp
call
jmp
push
lea
or
call
sub
add
out
call
adc
(bad)
xor
mov
je
mov
adc
jno
mov
or
in
xchg
inc
xchg
mov
ret
(bad)
cmp
aas
push
call
mov
push
push
call
inc
es
je
sub
push
cmp
or
(bad)
shl
dec
hlt
cmp
push
cli
out
jmp
mov
movs
jmp
cmp
adc
cli
and
mov
test
jne
cmp
jne
sub
push
ds
call
int
icebp
(bad)
jmp
or
dec
push
add
out
push
adc
out
inc
adc
jnp
retf
xor
inc
test
je
mov
std
mov
mov
xchg
call
jbe
fsubrp
or
push
sbb
mov
test
add
ja
dec
or
repnz
call
and
push
inc
je
xor
jp
push
loopne
ja
hlt
call
jmp
adc
cmc
call
pop
pop
dec
add
or
and
add
rol
xor
inc
mov
push
pop
rol
mov
sar
sub
and
cmp
idiv
je
adc
push
lea
xor
or
aas
pop
jbe
sbb
inc
je
adc
jmp
inc
out
adc
icebp
rol
(bad)
pop
mov
ret
out
call
shl
repz
mov
ins
bnd
adc
shl
sub
add
pop
dec
pop
mov
cli
jno
or
pushf
dec
int
add
(bad)
sbb
sar
fcomp
pop
jmp
call
fsub
loopne
cdq
jbe
fiadd
hlt
dec
shl
pop
gs
sub
inc
sbb
and
sbb
(bad)
call
clc
inc
push
mov
push
loopne
popa
jbe
sub
or
and
call
stos
sbb
retf
fdivr
into
pop
jmp
pop
add
push
inc
dec
sub
les
push
push
test
call
int3
add
inc
aad
adc
lock
test
loopne
xchg
add
adc
sub
pmulhuw
jmp
add
mov
xchg
call
mov
test
pop
outs
mov
call
call
lea
and
sub
outs
and
cmps
pop
fisub
dec
mov
mov
pop
mul
mov
inc
aad
mov
js
push
retf
mov
retf
jle
jnp
jmp
or
mov
scas
scas
push
jne
xor
pop
fld
jne
or
fs
addr16
push
call
sub
sbb
fnstenv
dec
push
sbb
ror
jl
add
mov
sub
fwait
call
call
call
add
hlt
dec
inc
lods
pop
fild
adc
mov
xchg
ds
icebp
das
xor
hlt
jle
cmps
mov
push
inc
mov
jbe
or
mov
call
lds
push
call
push
xlat
mov
mov
call
bound
call
loopne
push
push
call
popa
xor
jmp
retf
inc
call
fiadd
in
jl
call
cli
dec
add
and
out
add
jl
mov
(bad)
(bad)
out
shl
mov
call
hlt
push
push
call
push
mov
lds
in
iret
pop
inc
jo
enter
call
popa
jmp
sbb
hlt
fdiv
test
pop
je
sbb
sub
int3
add
adc
push
call
rol
out
call
pop
pop
mov
pop
icebp
(bad)
push
xchg
(bad)
loopne
inc
dec
dec
or
cld
xor
push
mov
hlt
call
inc
mov
call
jae
or
shl
and
adc
(bad)
fimul
call
aaa
jbe
fdiv
sar
or
das
mov
push
call
cli
and
(bad)
out
(bad)
cmp
fwait
enter
pop
adc
call
mov
push
aad
mov
push
cmc
sbb
(bad)
into
cmp
pop
into
clc
call
out
jbe
je
sbb
dec
dec
fild
into
lahf
sub
adc
call
out
call
mov
adc
in
pop
jg
xor
stos
cwde
and
cmp
jb
or
cmp
call
fisttp
test
and
inc
mov
cmc
push
inc
ror
into
and
scas
stos
jbe
cmp
ror
sbb
and
outs
push
dec
or
dec
test
mov
mov
xchg
push
aam
push
xchg
in
xor
or
and
clc
mov
cmp
into
add
loopne
das
or
sbb
jne
imul
inc
mov
sbb
cmp
mov
mov
mov
push
cmp
sub
dec
and
retf
push
loop
push
retf
pop
xor
aam
es
jle
call
add
dec
sbb
fadd
aad
sbb
loopne
(bad)
out
inc
push
and
xor
adc
popa
(bad)
dec
add
std
dec
push
mov
call
test
add
push
call
jmp
psubd
into
adc
call
and
call
cwde
aaa
enter
mov
stos
or
push
(bad)
(bad)
mov
push
loopne
inc
or
call
mov
inc
pop
(bad)
xchg
or
jnp
push
inc
mov
mov
and
and
mov
fdiv
inc
push
add
add
push
push
mov
mov
dec
adc
jmp
je
mov
cmp
sub
stc
mov
jne
or
push
mov
(bad)
(bad)
dec
inc
mov
mov
mov
lea
shl
mov
mov
or
or
push
lea
mov
hlt
call
mov
mov
mov
movs
add
push
call
dec
xor
jmp
mov
cmp
pop
inc
xchg
adc
add
sbb
pop
adc
sub
shl
cld
jg
addr16
clc
pop
jle
push
pop
jmp
test
ret
ja
inc
sti
mov
and
push
shl
or
iret
inc
mov
sub
mov
or
cdq
pop
inc
sub
sub
fstp
repz
ds
adc
daa
push
shr
loop
cmp
jne
push
and
clc
call
push
push
push
call
call
push
or
inc
add
or
add
push
aas
mov
les
mov
mov
out
jg
jne
mov
or
jmp
or
(bad)
pop
pop
xchg
mov
inc
or
and
push
mov
addr16
push
or
cmp
cmp
je
mov
pop
dec
or
mov
test
or
add
dec
call
jbe
clc
into
call
or
or
into
mov
adc
sub
pop
jmp
or
leave
pop
mov
outs
(bad)
std
(bad)
inc
scas
pop
pushf
cmp
mov
arpl
popf
pop
cmp
add
dec
cmp
leave
je
mov
fwait
and
or
out
mov
adc
cmp
je
mov
mov
xchg
jnp
ins
adc
cmp
push
aas
push
les
(bad)
fimul
push
push
call
pop
mov
inc
out
push
cwde
jg
mov
shr
push
call
ret
xor
je
cmp
je
push
lea
lahf
clc
dec
or
inc
or
call
stos
mov
fstp
add
cld
div
mov
std
cmp
je
mov
pop
jbe
mov
mov
call
call
push
xchg
std
ror
out
mov
xchg
push
cld
loopne
cmc
mov
mov
ins
add
cmp
lock
sar
mov
cmp
mov
ja
adc
mov
in
cli
fmul
add
dec
cmp
bound
(bad)
jle
mov
jmp
mov
sub
and
mov
add
not
fst
mov
jl
inc
dec
test
pop
cmp
cmp
ret
adc
pop
in
or
shl
jge
es
ret
(bad)
sub
lds
call
dec
std
sbb
fbstp
adc
mov
pop
pop
mov
jp
xlat
stc
add
jmp
lahf
ja
adc
or
adc
adc
and
mov
push
aad
dec
pop
add
adc
(bad)
mov
mov
iret
mov
lock
mov
(bad)
jo
js
loop
push
jo
dec
loopne
out
dec
call
(bad)
push
or
add
call
mov
add
sbb
fcomp
nop
push
sti
loopne
neg
loopne
loope
inc
mov
cli
aad
push
pop
cmp
and
sbb
call
sub
rcr
call
xchg
fistp
sbb
shl
add
fistp
ins
inc
and
popa
fistp
add
test
in
and
push
movs
and
int
imul
or
sub
xor
neg
inc
fmul
in
lea
dec
push
jne
loope
call
cmp
cmp
bound
jmp
push
mov
mov
mov
call
out
jle
gs
add
xor
fsubr
sbb
mov
je
jne
inc
cld
mov
xchg
push
movs
pop
xor
cs
cmp
cmp
retf
jne
neg
jle
enter
in
or
sbb
leave
adc
out
and
xor
leave
inc
imul
adc
lock
ret
xchg
lds
fst
add
sbb
cmp
adc
mov
mov
mov
enter
jge
or
push
dec
and
cmp
mov
inc
push
inc
gs
adc
or
int
cmp
imul
repnz
icebp
push
call
cmps
sbb
push
and
inc
div
and
frstor
icebp
call
and
push
call
in
mov
inc
jg
aas
push
push
mov
call
xor
cmp
or
mov
pop
add
jg
jle
mov
xor
add
stos
fbstp
jle
add
mov
(bad)
ja
xor
fld
pop
adc
cmp
lock
push
mov
and
or
ja
pop
add
push
call
icebp
call
cdq
mov
push
call
pop
or
std
pop
jl
pop
scas
inc
pop
push
mov
xchg
pop
jo
call
push
jmp
add
push
in
call
(bad)
(bad)
fnsave
pop
push
push
jmp
push
sbb
jge
call
lock
in
jmp
iret
call
cmc
mov
and
cmp
jl
call
stos
aaa
push
pop
pop
pop
pop
xchg
cmp
rol
fsubr
mov
jmp
(bad)
sbb
adc
stos
aaa
xor
test
jne
dec
xchg
(bad)
inc
or
pop
sbb
call
out
dec
fstp
mov
sbb
fsub
pop
add
mov
fstp
add
fld
call
inc
cld
fmul
fmul
pop
mov
or
push
in
idiv
out
fmul
inc
clc
add
fmul
mov
sbb
retf
mov
fld
neg
in
or
adc
inc
or
push
clc
pop
fstp
imul
push
fmul
faddp
cmp
int
ja
mov
into
fisub
retf
fld
adc
lock
mov
cmp
or
retf
fmul
fmulp
es
in
sbb
enter
mov
fstp
xlat
add
cmp
mul
movsx
add
out
adc
cld
jecxz
xor
jae
mov
mov
sar
aas
in
inc
or
clc
fld
cld
mov
mov
ins
cmp
mov
leave
or
imul
cld
test
fs
fdiv
mov
dec
test
adc
or
leave
fstp
or
leave
fmul
movsx
mov
fmul
fmul
sbb
leave
leave
ret
or
in
call
clc
test
in
loopne
nop
nop
in
dec
pop
mov
mov
shr
and
add
fld
push
push
fstp
ja
xchg
sbb
sbb
call
jmp
fldcw
pop
cmp
jne
and
jae
cwde
out
sbb
lea
push
inc
loope
lock
pop
push
in
ror
ins
mov
scas
ret
pop
dec
hlt
or
pop
pop
fnstsw
test
push
add
jne
cld
jmp
sub
xor
push
movsx
mov
add
or
ret
stc
adc
or
mov
jb
aad
add
pop
sbb
cmp
mov
fcomp
fsub
add
pop
cmp
popf
jae
push
sbb
add
and
jl
fsub
sbb
add
jle
inc
add
leave
dec
xor
jo
retf
or
cld
fld
fmul
fld
neg
sbb
loopne
fdivr
fstp
jne
inc
out
shl
inc
clc
fmul
faddp
and
clc
push
add
or
sub
je
mov
popa
dec
je
dec
je
fld
inc
clc
add
cmp
inc
or
and
sbb
sti
sbb
(bad)
push
fsubr
fcompp
push
jo
aas
push
fstp
jmp
ss
push
xor
jae
(bad)
jmp
push
fmul
push
int
(bad)
out
ja
aas
xchg
call
cmp
push
pop
pop
jne
fmul
add
and
jmp
xor
xor
mov
push
mov
(bad)
fld
jmp
sbb
inc
movss
mov
mov
fistp
inc
or
(bad)
or
aas
jg
out
and
retf
or
or
sub
call
sub
movaps
fimul
sub
movaps
movaps
push
cmp
mov
test
movaps
clc
xor
div
jmp
sbb
movaps
addss
ins
repz
jg
mulss
movaps
jmp
mov
fucomip
aaa
aaa
sar
clc
jae
mov
or
stc
popa
into
je
sbb
or
sbb
cmp
jge
test
sub
lods
arpl
xchg
mov
cmp
test
scas
sub
sar
push
movups
subss
movaps
pop
adc
arpl
add
cld
mov
xor
adc
sub
pop
rcl
pop
rcr
jmp
shr
adc
inc
and
cmp
into
adc
push
cmp
or
adc
cmps
imul
mov
mov
js
fnstenv
dec
add
push
mov
fldz
mov
pop
adc
cmp
push
jmp
mov
mov
add
rcr
bound
or
dec
fcmovnu
out
mov
fnstsw
fcomp
test
fnstsw
jp
push
jp
mov
fstp
fld
inc
fcomip
es
ret
fmul
fstp
scas
inc
and
jmp
popf
jecxz
std
mov
fld
sbb
jmp
sbb
mov
push
or
adc
mov
inc
push
pop
or
adc
out
ret
data16
rol
bound
rcr
fstp
or
jae
ja
inc
and
fsub
fld1
fdiv
mov
cmp
pop
and
leave
pop
or
cmp
or
sub
pop
add
mov
mov
imul
mov
pop
ret
test
je
mov
clc
into
add
stos
cmp
mov
or
popf
sbb
(bad)
or
movs
sbb
or
xchg
gs
call
je
inc
and
and
push
(bad)
fld
fsub
(bad)
jg
sti
push
int3
fld
adc
fld
pop
(bad)
rcr
cmp
ret
xor
jmp
sti
faddp
fstp
push
pop
push
faddp
fadd
fstp
fld
fstp
(bad)
fs
pop
movs
(bad)
leave
ins
clc
pop
hlt
fld
add
xor
jmp
lahf
xor
add
add
dec
(bad)
dec
(bad)
inc
aam
dec
aam
sar
je
jp
frstor
(bad)
ja
aam
dec
dec
fld
fmul
dec
sbb
(bad)
call
ror
fwait
and
hlt
inc
pop
pop
mov
xor
test
jbe
int
fnsave
inc
cmp
out
fmul
jp
(bad)
cmp
and
jp
fld
fmulp
fld
fsub
jnp
jg
dec
push
mov
fstp
(bad)
and
std
fstp
inc
int3
fst
fstp
out
mov
mov
(bad)
lods
inc
jp
inc
add
pop
sti
dec
push
fadd
retf
in
fmul
fadd
fsub
pop
imul
add
cmp
or
sbb
cmp
jb
sub
clc
push
cmp
test
inc
rcr
fld
fsub
xor
popa
and
pop
int3
in
loop
dec
cmp
dec
stos
pop
or
cmp
sbb
jb
cmp
daa
adc
lahf
xchg
pusha
adc
push
das
add
leave
ret
fcomp
arpl
mov
and
add
popa
sub
sub
pusha
out
mov
mov
or
pusha
dec
fcomp
icebp
jo
sbb
mov
ret
popa
cwde
arpl
(bad)
int
test
mov
fstp
and
sbb
fstp
jle
jge
scas
sti
sti
fcom
movs
add
and
dec
xor
sbb
or
cmp
jae
rcr
mov
(bad)
jge
add
pop
lock
fld
add
xor
add
fstp
mov
add
cld
fsub
sub
fmul
inc
std
test
xchg
(bad)
fld
leave
ret
ret
ret
or
mov
shl
fadd
mov
mov
fstp
jmp
js
lock
in
sub
jo
fstp
sub
and
add
push
ds
loopne
pop
pushf
fldenv
push
adc
call
pop
adc
jne
mov
ss
pop
aam
dec
mov
ret
jle
add
(bad)
jg
mov
jge
mov
mov
mov
mov
adc
ror
mov
or
sti
sti
inc
add
mov
cmp
push
jmp
xor
je
sti
aaa
jne
out
pop
mov
mov
sub
(bad)
mov
mov
mov
add
push
in
aaa
lea
mov
mov
(bad)
dec
adc
ret
fld
fmul
call
mov
jne
fdivr
inc
dec
jne
lods
add
adc
mov
add
jmp
mov
mov
add
inc
call
mov
add
fsubr
cmp
bound
ins
fld
pop
es
movmskps
push
cmovbe
(bad)
(bad)
(bad)
aas
push
cmc
add
jmp
leave
cmp
cmovb
fcos
xchg
rol
or
push
out
cmp
push
in
iret
push
push
and
push
jmp
add
add
scas
and
inc
mov
mov
mov
add
fld
fmul
push
or
inc
mov
fstp
mov
shr
aas
sub
cmp
mov
out
mov
push
and
inc
mov
pop
push
lea
push
inc
adc
call
inc
or
add
add
dec
jne
mov
inc
clc
add
cmp
ret
jmp
jge
fld
lds
jno
jae
call
aaa
inc
rcr
cmc
jmp
mov
fstp
inc
mov
mov
fld
daa
inc
sub
add
or
and
fnstsw
dec
in
inc
push
ins
inc
es
xor
jno
xchg
mov
dec
sub
sub
adc
cld
(bad)
jmp
sbb
dec
mov
pop
retf
fcomip
push
xor
into
or
dec
sub
call
cvttps2pi
mov
(bad)
(bad)
(bad)
fadd
mov
jne
fldz
jmp
xor
mov
xor
mov
mov
mov
push
stos
fdivr
call
xor
jne
call
mov
pop
fstp
xor
daa
sub
ja
mov
push
mov
call
cmp
xchg
pop
pop
fstp
popf
cmc
dec
ins
pop
pop
ret
ret
pop
and
push
add
push
adc
add
add
xor
add
ja
(bad)
cmp
inc
or
es
cmp
out
ret
add
pop
add
inc
or
adc
sbb
pop
fld
sbb
les
test
or
iret
fcomp
mov
fsub
inc
inc
cld
mov
imul
or
sbb
dec
(bad)
sbb
mov
fmul
pop
fstp
sar
(bad)
jg
push
fld1
mov
fstp
push
fldz
push
push
mov
mov
mov
dec
(bad)
jmp
mov
shl
add
cmp
ja
or
inc
out
push
stos
cld
adc
mov
fwait
ds
call
adc
pop
dec
add
xchg
dec
pop
jne
inc
fcomp
inc
jmp
(bad)
dec
mov
add
add
inc
lock
call
hlt
or
mov
call
cmp
add
enter
jmp
jae
add
jmp
sub
jmp
pusha
(bad)
inc
cmps
call
push
fadd
mov
fmul
into
std
cmp
hlt
call
(bad)
(bad)
fisttp
cmps
lea
imul
mov
mov
shl
lea
mov
mov
(bad)
std
cmp
(bad)
pop
add
xor
cmp
cs
cld
mov
jbe
jo
int3
ja
hlt
add
fcomp
out
call
jnp
mov
les
pop
js
add
mov
pop
mov
inc
int3
fsub
mov
push
fstp
(bad)
xchg
clc
jg
fstp
fld
fstp
call
mov
pop
pop
jbe
mov
fst
jae
rdpmc
les
cwde
adc
jp
in
fsub
mov
cdq
aaa
mov
xor
retf
and
faddp
in
ret
fsub
sub
xor
sbb
jg
mov
fld
mov
fisubr
dec
loopne
int3
fsubrp
fstp
fcom
fwait
iret
(bad)
arpl
push
mov
jmp
push
add
sbb
pop
ret
fld
cmp
xlat
jnp
jl
inc
or
cmp
ja
fcom
inc
inc
daa
add
pushf
xchg
xchg
cld
subps
fisttp
call
hlt
stos
jecxz
push
in
sub
call
dec
add
mov
(bad)
(bad)
(bad)
(bad)
fstp
jbe
dec
mov
xor
xor
inc
cmp
jbe
mov
lea
fld
lea
fdivr
(bad)
push
add
add
push
add
push
add
sbb
(bad)
(bad)
inc
jne
jb
test
je
xor
xor
cmp
jbe
std
xor
jno
mov
jnp
movsx
add
inc
cmp
cmp
(bad)
cld
jb
test
jge
cli
jbe
push
or
dec
jge
out
data16
inc
sub
fsub
fdivrp
jmp
loope
dec
and
sbb
ja
dec
sbb
sti
bound
xchg
or
jmp
lock
jle
or
rol
add
addr16
sub
(bad)
jmp
push
mov
test
mov
mov
jne
ins
sbb
mov
jle
aaa
pop
mov
mov
pop
clc
push
adc
adc
or
aaa
fld
fadd
fmul
jb
(bad)
out
jl
inc
or
inc
add
and
lds
(bad)
jl
sti
jne
mov
cmp
jb
jmp
mov
out
aas
stc
test
jp
aaa
mov
shl
add
adc
inc
js
inc
aam
add
je
dec
(bad)
push
shl
dec
xor
(bad)
jmp
mov
call
fst
fmul
inc
push
(bad)
aam
cmp
je
push
fucom
mov
lahf
add
cmp
movsx
mov
inc
add
inc
or
adc
cli
mov
mov
in
pop
jmp
cmp
call
jp
fsubr
lock
fstp
pop
in
in
fucomip
adc
jo
inc
hlt
fcomp
sbb
hlt
fstp
mov
loopne
inc
test
adc
fsub
push
fcomp
cdq
push
xchg
in
stos
(bad)
es
mov
(bad)
(bad)
jmp
sub
pop
in
xlat
add
xor
gs
jmp
adc
(bad)
call
in
xchg
movs
fsub
daa
stos
adc
pop
add
nop
fwait
push
pusha
xlat
fwait
mov
js
sbb
jae
sbb
sbb
add
mov
jb
mov
in
cs
(bad)
jp
mov
fstp
clc
jmp
sar
cmp
sar
jmp
setno
(bad)
xchg
lahf
mov
ret
xchg
fdivr
mov
jecxz
add
adc
cmp
jne
push
jmp
call
pop
pop
pop
jp
pop
(bad)
fist
rol
fild
test
add
dec
adc
jmp
mov
sub
pop
clc
jmp
and
mov
test
jne
mov
test
push
push
ror
mov
pop
sbb
inc
or
jmp
sbb
les
dec
ja
sbb
add
push
fld
fadd
fsubr
fld
fadd
push
add
mov
push
lock
cmp
jp
fstp
mov
xor
jne
fisttp
push
sbb
std
add
cwde
stos
mov
jg
into
cmp
jne
mov
jmp
mov
out
sbb
or
sbb
clc
mov
and
mov
les
clc
push
push
mov
clc
and
jae
mov
shl
pop
or
adc
addr16
adc
or
or
sbb
cmp
or
adc
adc
test
mov
inc
pop
cmp
mov
lea
inc
lea
mov
mov
pop
add
lock
mov
mov
jmp
inc
sti
(bad)
in
lds
cld
jne
mov
mov
sub
push
jae
clc
or
js
mov
mov
inc
(bad)
dec
and
mov
push
mov
fld
loop
sbb
test
sbb
call
ins
adc
push
sbb
adc
fld
inc
rcl
fld
adc
fld
sub
(bad)
out
loop
inc
neg
pop
pop
mov
mov
mov
(bad)
fcomip
sbb
ror
mov
cmc
(bad)
(bad)
out
ds
dec
sbb
test
jne
cmp
jae
cmp
jbe
inc
jmp
ins
mov
dec
and
fstp
push
push
mov
fdiv
pop
jo
mov
mov
mov
mov
pop
push
lock
mov
lea
mov
adc
inc
call
fsubr
out
sub
popf
ret
inc
data16
xchg
mov
jmp
sar
lock
jne
scas
cmp
jne
lea
mov
call
ret
cmp
fst
add
pop
dec
jp
neg
aas
fld
fcomp
inc
jp
sbb
jmp
jecxz
adc
ins
jle
jecxz
add
adc
stos
test
and
mov
in
and
sbb
pop
or
int3
pop
lock
test
aas
fsub
in
aas
sti
(bad)
out
enter
inc
add
je
fcom
jnp
mov
fistp
dec
add
adc
and
call
fistp
xor
jne
dec
fsub
jmp
arpl
arpl
jne
popa
jmp
jnp
les
mov
mov
mov
jmp
mov
pop
scas
mov
dec
jg
test
jne
jmp
jne
and
ins
and
sub
pusha
es
sbb
mov
sbb
mov
pop
or
mov
mov
mov
mov
mov
mov
and
(bad)
(bad)
inc
mov
mov
add
movzx
mov
movzx
cdq
push
pop
idiv
mov
icebp
add
aaa
jge
cmp
sahf
inc
ins
jmp
cmp
jne
fistp
jne
jmp
add
cmp
jne
mov
mov
sbb
(bad)
je
jg
enter
pusha
pusha
jne
mov
inc
jo
mov
mov
add
inc
cmp
jns
test
pop
adc
push
out
push
inc
cmp
jbe
jb
sti
(bad)
(bad)
jmp
sub
mov
mov
mov
sar
shl
add
cmp
mov
jne
js
dec
adc
push
data16
push
cmp
je
cmp
push
imul
add
pcmpgtd
push
add
out
add
jne
cmp
je
jne
shr
or
add
dec
add
lock
jne
xor
push
adc
jl
inc
pusha
cmp
je
mov
sub
mov
shr
(bad)
(bad)
(bad)
push
mov
mov
cmp
jne
cmp
jne
inc
mov
jmp
cmp
jne
inc
mov
mov
(bad)
jne
adc
xor
mov
mov
pop
cmp
je
xor
(bad)
fild
dec
iret
ins
jmp
xor
xor
cmp
push
pop
je
cs
jmp
cmp
jne
mov
mov
inc
cs
add
add
mov
faddp
lea
and
inc
adc
sbb
mov
imul
mov
mov
mov
push
sbb
inc
mov
lea
dec
jo
(bad)
dec
lea
sub
mov
lea
mov
mov
or
cmp
dec
push
mov
mov
dec
mov
lea
xor
xor
mov
dec
cmc
(bad)
(bad)
push
cmp
jne
fld
mov
push
fstp
lea
push
push
call
fist
pop
adc
and
out
ds
or
inc
dec
sti
fadd
add
(bad)
mov
push
fstp
jne
dec
fld
adc
pop
dec
jne
jmp
popf
mov
sub
inc
or
jo
mov
(bad)
mov
mov
mov
jne
nop
or
loopne
lea
fstp
cmp
inc
lea
mov
fstp
xchg
in
mov
mov
adc
mov
dec
cmp
jne
mov
jne
and
out
jge
mov
mov
inc
sti
or
into
mov
pusha
in
aaa
jl
mov
mov
mov
inc
ss
arpl
pop
shl
add
jg
or
push
inc
fmul
fld
xchg
push
and
jmp
jp
mov
fld
fsubr
pop
dec
add
jmp
push
idiv
mul
sti
fstp
fld
or
fcomp
pop
xor
add
jnp
bound
aaa
rcr
push
add
stos
pop
dec
add
and
(bad)
out
xchg
pop
mov
(bad)
(bad)
cld
pop
inc
fld
pop
movs
psubusb
jg
fcomp
pop
or
fld
xor
push
and
dec
push
call
push
inc
je
dec
je
dec
je
dec
jne
movs
pop
fist
aaa
cmc
cmp
jne
fld
sub
inc
bound
xor
pop
cli
not
jne
je
xor
cmp
push
xor
xchg
xor
adc
push
out
jmp
sub
add
or
xlat
ins
xor
test
inc
push
fcmovb
cmp
fdivr
dec
inc
dec
jg
sbb
dec
pop
jbe
or
clc
add
mov
inc
inc
lods
fld
mov
mov
mov
fld
dec
add
rcl
sbb
loopne
ja
cmp
push
sti
jmp
fadd
fstp
shr
add
inc
sbb
in
rcr
test
dec
add
je
cld
aas
jp
xor
outs
xor
fld
add
mov
call
lock
test
inc
jo
gs
or
cmp
sub
cli
(bad)
fld
pop
fcomp
cwde
cmp
mov
sbb
sti
or
push
sbb
int3
imul
lahf
ins
fcomi
add
call
add
fld
push
fstp
shl
push
or
pushf
mov
shl
add
push
scas
enter
cmps
aas
sbb
or
push
xor
int3
arpl
cld
ret
pop
add
xor
rcr
icebp
movs
fiadd
pop
mov
push
sub
call
mov
push
les
jp
pop
(bad)
int
xchg
sti
xor
push
dec
xchg
fidivr
fcomp
pop
sub
adc
push
push
shl
pop
fdiv
xor
imul
lods
xchg
fcomp
mov
leave
cmp
in
in
stos
nop
fstp
popf
cmp
sub
scas
fstp
xor
popf
adc
mov
in
sbb
add
fcomip
sub
and
dec
dec
jne
fld
fmul
fnstcw
inc
pop
(bad)
mov
fiadd
aas
cld
out
or
inc
fbstp
fmul
faddp
xor
out
cli
and
js
inc
sbb
pop
ja
push
fsub
adc
fsubr
and
jb
ret
cmp
hlt
(bad)
mov
frstor
test
inc
jb
(bad)
fadd
std
fstp
inc
test
syscall
xor
test
or
add
sar
cmp
cmp
fstp
scas
jmp
xor
jb
sbb
pop
cld
lea
mov
dec
mov
add
fild
add
idiv
pop
add
mov
xchg
jne
jmp
sbb
xor
xchg
push
pop
mov
add
lea
rep
push
mov
pop
lea
(bad)
out
dec
rep
add
adc
mov
mov
mov
push
pop
add
or
out
fidivr
or
mov
push
or
mov
mov
pusha
stos
ret
fisttp
mov
cmp
ds
or
or
pop
or
out
cli
or
mov
pop
test
mov
mov
mov
jl
(bad)
fwait
push
push
push
mov
call
(bad)
jmp
cli
dec
call
mov
fild
pop
(bad)
cmps
inc
call
sub
scas
(bad)
ficom
sub
into
xchg
dec
hlt
fld
outs
or
and
mov
inc
in
scas
test
jbe
sbb
icebp
mov
add
jne
test
cmp
cmp
fadd
xchg
mov
mov
fiadd
test
fsub
mov
mov
ror
mul
add
mov
test
and
pop
enter
mov
xchg
cmp
hlt
jge
and
fstp
xor
ror
sahf
nop
jl
fmul
rol
fwait
loop
sbb
ins
fstp
test
ja
xor
pop
fcomp
sbb
ds
add
jecxz
js
or
data16
dec
cld
jnp
test
cs
jae
mov
adc
inc
lock
test
cli
push
adc
jge
add
inc
cld
mov
fstp
inc
mov
xor
or
hlt
lea
mov
mov
mov
lahf
cld
add
jb
test
je
jbe
mov
fld
mov
adc
mov
push
idiv
loope
shl
fld
fchs
jmp
push
call
fldz
fstp
ret
mov
cmp
call
fstp
push
fldz
push
idiv
dec
data16
test
fld1
mov
fstp
sub
dec
fst
cmp
out
mov
push
mov
lea
(bad)
ja
or
pop
and
inc
or
xchg
inc
or
inc
or
pop
xor
call
add
sbb
add
add
aam
pop
push
je
add
push
pop
not
bound
push
mov
adc
mov
adc
cld
pop
adc
mov
adc
or
inc
adc
addr16
inc
cld
loope
test
movs
aas
std
mov
cmp
jbe
lea
sbb
fild
push
sbb
lahf
jge
push
lea
cmps
push
push
push
call
sub
sub
or
dec
(bad)
dec
adc
pop
adc
pop
in
mov
test
mov
(bad)
call
mov
mov
mov
loopne
inc
add
cdq
sti
push
cli
test
fld
fsubr
daa
pop
ret
jle
aas
leave
fdiv
mov
fstp
adc
pop
in
mov
sbb
sbb
mov
add
fdivrp
mov
(bad)
(bad)
(bad)
dec
ror
shl
add
mov
mov
lea
mov
mov
mov
loopne
add
add
fst
fstp
shr
mov
iret
mov
lock
mov
add
fld
jno
bound
push
scas
mov
add
dec
psubusw
(bad)
(bad)
fstp
mov
pop
fstp
icebp
cld
pop
mov
mov
cmp
jmp
fld
repnz
fldenv
std
sbb
fadd
dec
fcomp
inc
in
xor
(bad)
std
out
(bad)
mov
fld
add
sbb
pop
sar
dec
loopne
inc
xor
imul
mov
dec
or
inc
cmp
push
add
out
mov
fstp
mov
int3
lea
mov
loope
icebp
les
push
mov
mov
jbe
(bad)
(bad)
fistp
xor
inc
cmp
mov
mov
jbe
cmp
jbe
mov
jmp
pop
test
or
inc
in
add
sar
inc
fsubr
jne
mov
jne
je
add
psubusb
pop
call
clc
or
jbe
fstp
fstp
mov
mov
pop
mov
lea
lea
in
mov
lea
mov
mov
fsubr
cmp
sub
les
mov
cmc
fld
(bad)
aad
fstp
or
add
push
mov
call
jge
xor
loope
je
dec
push
dec
in
dec
fbld
test
dec
imul
loope
push
xor
add
xchg
sahf
inc
int3
pusha
loope
imul
ror
inc
lock
fadd
add
dec
fstp
fld
popa
fld
jge
clc
pop
mov
test
xchg
add
dec
xchg
(bad)
cmp
push
mov
test
push
(bad)
cmps
fadd
inc
in
pop
add
fadd
inc
xchg
mov
shr
mov
pop
idiv
(bad)
jg
mov
mov
jne
mov
jmp
adc
sbb
stos
mov
add
inc
mov
mov
(bad)
or
cdq
test
pop
or
mov
fild
(bad)
(bad)
aas
inc
push
xor
cmp
fadd
fst
jne
cmp
fstp
je
aaa
cld
mov
in
inc
mov
inc
lea
enter
inc
in
mov
ss
jb
inc
jg
(bad)
ss
out
mov
ja
add
add
fld
fld
cmp
adc
inc
hlt
fld
push
jnp
(bad)
xor
fld
mov
fstp
sbb
sub
cmps
fiadd
add
test
cs
push
loopne
fsub
fst
mov
inc
or
out
adc
jnp
fcos
rcr
mov
fdivr
dec
fsub
and
fsincos
push
hlt
rcr
pusha
sub
xor
push
cmp
inc
loopne
loopne
pop
inc
add
jp
loope
popf
rol
fstp
pop
or
out
jl
in
fadd
repz
or
inc
sub
adc
push
data16
xchg
into
shl
or
fmul
mov
xchg
fstp
jns
pop
jne
addr16
inc
loopne
call
out
jg
fchs
fsub
fstp
fld
or
fstp
fld
stos
fld
fstp
mov
inc
fstp
fld
fstp
fld
fstp
add
fnstsw
mov
fmul
(bad)
adc
aaa
outs
rcr
pop
(bad)
sbb
fstp
cmp
shl
ja
add
mov
push
loop
repz
cld
fist
(bad)
pop
or
fstp
inc
fcom
inc
in
add
loope
jmp
cmp
arpl
or
fsub
and
dec
mov
and
add
outs
stos
or
and
and
or
mov
inc
add
mov
gs
(bad)
jg
adc
mov
inc
arpl
add
add
cmp
mov
cmp
shr
mov
xor
mov
call
pushf
jecxz
add
ja
and
cmc
das
(bad)
call
out
out
inc
loopne
pop
lock
adc
xor
push
fisubr
cmp
fstp
xchg
jbe
fbstp
call
xor
jno
in
pop
cmp
add
loopne
ret
dec
out
pop
xchg
imul
in
push
jp
fsubr
jnp
loopne
(bad)
out
cmp
inc
mov
pop
in
ja
dec
jbe
inc
rol
inc
and
inc
fdivr
(bad)
mov
jae
or
add
mov
adc
pop
push
out
inc
mov
fld
push
fld
mov
fst
(bad)
call
cmp
inc
xor
cmp
push
jne
rcr
dec
push
in
push
fld
lea
fmul
fld
fmul
xor
clc
cmc
test
jnp
fld
fmul
fdivrp
inc
add
stos
fcmovb
fistp
add
cmps
ins
inc
mov
inc
mov
sbb
xchg
int3
jmp
int3
fld
mov
adc
sbb
aam
inc
loopne
inc
add
inc
in
inc
or
add
or
or
fld
fstp
jg
pop
sbb
mov
xor
fdivr
push
cwde
mov
adc
aaa
and
pop
cvtpi2ps
dec
fmul
fld
fmul
push
fmul
lds
add
push
retf
mov
add
pop
or
inc
xor
mov
ds
sbb
mov
jl
inc
aam
inc
sbb
jmp
es
inc
fsub
inc
cmp
inc
xor
(bad)
cld
dec
push
loop
dec
inc
inc
sbb
or
retf
xchg
or
loopne
(bad)
jg
pop
rcr
dec
pop
fmul
pop
inc
fmul
and
jo
nop
push
cmp
dec
shr
or
popa
in
cmp
je
xchg
loope
push
jmp
or
or
add
dec
jno
add
sub
pop
ja
add
mov
ins
inc
in
add
dec
push
jbe
inc
xchg
sti
fwait
retf
call
xor
push
cli
ja
add
mov
inc
or
push
or
loope
ds
add
cld
inc
add
push
out
loopne
mov
push
hlt
add
mov
call
and
push
mov
or
add
fld
fmul
popa
inc
mov
fld
jge
hlt
loopne
dec
add
fadd
pop
pop
add
adc
(bad)
call
fcomp
std
(bad)
(bad)
(bad)
jp
mov
mov
add
jmp
mov
add
cmp
jae
push
out
(bad)
ja
cs
je
cmp
jne
and
jmp
xchg
out
add
push
jge
les
mov
pop
es
cmp
jb
cli
or
push
push
call
cld
cmp
add
dec
pop
pop
jne
add
dec
jne
sbb
les
cmp
push
arpl
call
xor
test
mov
and
loopne
jmp
arpl
jbe
cmp
je
fld
fld
xor
leave
repnz
fld
fld
jnp
inc
inc
add
sbb
call
rcl
jb
inc
(bad)
push
mov
xor
inc
inc
shl
push
inc
mov
call
(bad)
mov
test
pop
je
mov
mov
call
call
clc
cmp
pop
push
stos
mov
add
lea
imul
aaa
push
xchg
or
bound
adc
mov
call
sub
add
push
call
ja
xor
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
std
(bad)
call
dec
sub
shl
cld
jbe
mov
xor
lea
mov
mov
adc
ret
dec
jne
cmp
lahf
xor
push
cli
fucomi
jg
fdivr
dec
and
add
mov
jmp
call
or
rcl
in
jl
push
push
mov
push
out
cmp
mov
inc
cmc
mul
cmp
xor
lea
inc
shl
inc
mov
imul
push
add
jge
call
adc
sub
cmp
sbb
mov
mov
mov
mov
pop
out
add
(bad)
cmp
inc
add
mov
push
call
enter
loop
mov
mov
adc
jae
es
jge
clc
xchg
lea
ss
imul
cmc
mov
xchg
mov
add
dec
clc
scas
out
rcl
mov
push
mov
mov
mov
mov
sbb
mov
call
in
pop
push
xchg
(bad)
call
shl
or
push
call
mov
push
sahf
arpl
mov
pop
nop
pop
hlt
mov
mov
mov
lock
sti
add
inc
or
and
dec
adc
mov
mov
mov
mov
fcos
jmp
mov
jmp
push
push
fadd
fstp
fld
pop
sti
inc
dec
adc
inc
and
pop
sub
inc
or
pop
sub
inc
or
pop
xor
inc
inc
adc
add
dec
add
sar
in
dec
in
lea
mov
lea
pusha
cli
jnp
lock
push
push
cld
imul
jno
xor
outs
and
dec
jecxz
mov
call
or
neg
call
pop
pop
pop
sar
sub
mov
inc
lock
push
lea
movs
movs
push
pop
movs
cmp
pop
fist
lock
jne
call
jmp
and
push
push
mov
xor
inc
jmp
mov
mov
inc
xor
pop
mov
jbe
sbb
xchg
sub
ret
mov
jp
fcom
jne
fisubr
aad
mov
and
jnp
add
je
mov
sub
dec
data16
nop
stc
jb
hlt
fdivr
outs
add
sbb
jne
mov
fstp
mov
fld
icebp
shr
stos
inc
cmc
jnp
jmp
outs
cmp
push
pop
cld
jbe
jbe
mov
mov
xor
idiv
mov
or
cmp
jbe
adc
jae
test
jl
mov
mov
push
xchg
mov
inc
cmp
jb
pusha
lea
add
dec
jne
mov
in
(bad)
icebp
(bad)
call
mov
mov
mov
cmp
jb
sub
mov
add
(bad)
out
or
xor
cmp
pop
adc
dec
adc
enter
jg
icebp
add
add
ins
jne
fmul
inc
fstp
loopne
ficom
push
jb
pop
leave
ret
imul
ins
jmp
inc
xor
mov
(bad)
fild
mov
ja
cld
(bad)
out
dec
mov
inc
sub
mov
jmp
mov
mov
jmp
mov
mov
push
jmp
or
jmp
pop
std
aas
sbb
adc
pop
mov
pop
pop
ret
loop
adc
or
jne
xlat
add
call
or
pop
pop
shl
lock
add
std
or
or
add
or
add
neg
push
adc
or
add
add
outs
xlat
and
das
or
add
or
mov
or
pop
or
add
inc
mov
add
push
add
add
add
(bad)
ja
or
add
cmp
int3
dec
add
add
out
jae
add
add
add
add
pop
add
add
mov
xor
add
or
or
sti
int
mov
cs
add
and
cdq
or
add
or
add
fstp
add
add
mov
add
adc
or
or
push
sbb
xor
or
bound
out
inc
pop
add
push
adc
inc
(bad)
cmp
mov
ja
mov
add
sbb
sbb
lods
fwait
cli
out
xor
ror
push
lea
fs
sar
pop
cs
jbe
xor
rep
test
mov
push
cmp
test
stc
mov
fstp
cmp
fstp
push
call
(bad)
cli
out
inc
dec
and
fist
clc
(bad)
fmul
aad
repz
mov
dec
sub
or
call
jg
add
stc
sbb
jo
inc
(bad)
not
and
(bad)
inc
sbb
lea
not
and
lea
cmp
mov
jbe
lea
inc
jmp
add
rcr
cld
aaa
icebp
pop
shl
ror
inc
cmp
dec
scas
rcl
inc
inc
icebp
mov
cld
cmp
ja
test
(bad)
(bad)
(bad)
mov
fdiv
cmp
jb
cmp
ja
test
fld
push
push
mov
aam
mov
aam
(bad)
inc
inc
ja
adc
call
aaa
jge
hlt
mov
loopne
or
jnp
shl
dec
inc
hlt
add
cmp
jb
jmp
lea
and
mov
sub
jge
mov
aam
cmp
scas
popa
ret
sahf
or
dec
mov
and
sar
and
ret
inc
mov
cld
retf
pop
rol
pop
adc
jo
cmp
js
or
adc
inc
fwait
and
jae
pop
lea
mov
mov
cmp
jae
add
iret
imul
add
jp
lea
lock
lds
or
or
sar
add
sbb
pusha
dec
adc
aas
sub
add
shr
js
sbb
(bad)
cli
(bad)
fmul
pop
fsubr
fsub
dec
inc
in
lea
fadd
fsincos
aaa
hlt
sbb
add
add
inc
add
jb
mov
mov
ffreep
jmp
mov
inc
adc
fstp
inc
cmp
jb
jmp
test
sub
sbb
fmul
add
std
aaa
pusha
inc
mov
jmp
mov
push
jae
mov
jmp
(bad)
cld
mov
imul
add
lea
or
cli
mov
fld
fst
mov
and
inc
fcom
fld
cli
std
pop
or
jge
or
ins
(bad)
gs
dec
enter
add
dec
mov
jne
loop
les
cld
fstp
jb
out
sub
fld
mov
(bad)
mov
in
call
dec
clc
cdq
les
and
inc
ja
pop
cld
pop
add
call
test
adc
loop
push
call
push
mov
call
aas
mov
dec
adc
cmp
adc
push
adc
cmp
stos
sbb
jo
inc
fld
clc
ja
xor
push
mov
fiadd
fs
jg
cmps
fwait
mov
dec
clc
jbe
add
jne
pop
push
fld
fsub
fdiv
fst
sti
xor
jle
pusha
add
or
lea
out
out
out
inc
or
jb
les
jmp
test
jne
mov
xor
and
cmp
jge
call
xor
xchg
or
push
adc
fld
mov
sahf
idiv
call
xchg
push
push
xchg
xchg
sbb
inc
jl
adc
or
inc
in
fsub
fdiv
push
add
fnstsw
pop
call
fsub
add
call
int3
ja
out
lock
jne
pop
addr16
nop
(bad)
sbb
push
outs
sbb
into
test
je
or
pop
sub
mov
fucomp
test
push
push
lea
xchg
and
jl
xor
adc
(bad)
inc
or
inc
call
inc
cld
mov
mov
push
jae
push
ja
push
jo
cmc
(bad)
clc
xor
push
cmp
mov
mov
jmp
xchg
daa
inc
lea
in
add
adc
push
call
ja
ror
xor
add
cli
inc
add
add
pop
add
fld
fsub
fsubr
int3
mov
pop
clc
jmp
out
or
leave
adc
call
fsub
fmul
or
inc
or
fld
and
fstp
push
in
dec
and
add
inc
mov
cld
lods
inc
fsubr
int3
mov
jg
xchg
pop
test
jne
mov
inc
or
fld
jmp
fld
mov
and
jp
dec
pusha
scas
dec
xchg
jecxz
je
pop
fnstsw
or
add
out
mov
sbb
inc
jno
dec
fstp
xor
leave
mov
cmp
adc
or
scas
cmp
inc
fstp
call
pop
call
jmp
mov
push
cld
(bad)
call
push
mov
push
mov
push
movzx
shl
mov
data16
std
sbb
inc
imul
and
lea
push
call
cmp
je
xchg
mov
idiv
out
outs
neg
mov
dec
adc
add
dec
push
sbb
mul
icebp
and
cmp
add
jo
mov
pop
pop
pop
pop
cli
dec
call
pop
push
call
cmp
jne
or
loop
mov
(bad)
call
ret
mov
movzx
data16
into
lds
lock
inc
dec
lar
mov
push
or
stos
mov
in
shr
cmp
push
push
push
mov
mov
fisttp
hlt
ja
lea
xor
pop
div
dec
(bad)
(bad)
(bad)
out
jns
js
add
mov
sub
sub
add
mov
shr
xor
mov
sub
sub
mov
mov
out
xor
sub
sub
mov
shr
xor
and
mov
shr
xor
xchg
out
daa
xchg
adc
add
add
sub
xor
mov
sub
mov
sub
shr
add
xor
adc
inc
or
test
cld
add
dec
jmp
sbb
je
dec
jne
xchg
cwde
sbb
fisubr
fild
(bad)
sti
(bad)
jg
shr
xor
sub
mov
shl
xor
sub
sub
mov
rcl
push
mov
adc
fbld
add
sub
sub
mov
xor
sub
outs
clc
mov
xor
sub
sub
shr
xor
jbe
ret
cmp
dec
push
cld
xor
inc
or
cmp
jne
mov
fisubr
cmp
test
push
inc
or
dec
add
out
(bad)
mov
mov
or
mov
mov
push
loopne
xchg
push
(bad)
sahf
mov
add
sub
dec
call
out
mov
mov
(bad)
lock
jmp
adc
sbb
cld
push
add
je
cmp
and
mov
push
xor
xor
inc
cmp
je
cmp
out
(bad)
(bad)
jg
push
je
cmp
je
cmp
je
mov
shl
lea
mov
cmp
ret
pop
je
mov
mov
mov
mov
or
sub
dec
sbb
adc
jae
dec
fild
push
lea
lea
(bad)
(bad)
(bad)
cmp
sar
sti
mov
mov
mov
mov
mov
mov
jbe
mov
mov
inc
push
and
inc
cmp
jb
jmp
popa
outs
mov
or
(bad)
in
fcom
je
and
rol
call
inc
or
inc
push
push
mov
mov
test
je
in
or
dec
pop
mov
mov
add
cli
adc
sti
sbb
jmp
shl
mov
pop
push
call
je
pop
inc
push
jne
mov
push
adc
dec
test
sahf
adc
call
sub
(bad)
inc
je
xor
cmp
jne
cmp
je
inc
mov
jmp
jecxz
imul
sbb
sti
cmps
or
cmp
jne
fdiv
mov
jmp
mov
aaa
je
or
shr
xor
aas
inc
(bad)
cld
jecxz
inc
cmp
mov
mov
dec
xor
inc
push
cmp
retf
jle
fnstsw
add
push
dec
or
mov
mov
push
mov
ja
or
cmp
mov
add
push
daa
retf
xchg
dec
sbb
cld
push
stos
cmp
or
not
mov
test
je
loop
loop
into
call
add
aaa
bound
adc
cmp
inc
rcr
(bad)
mov
cmp
add
inc
dec
or
fistp
(bad)
sar
jbe
mov
mov
loopne
dec
adc
cmp
push
mov
and
rol
push
cld
jbe
mov
adc
push
or
xchg
mov
mov
clc
clc
cld
jb
dec
sbb
retf
push
jp
icebp
icebp
mov
push
loopne
jecxz
repz
jl
arpl
repz
or
outs
inc
sbb
sbb
mov
call
push
mov
xchg
xlat
ja
xor
or
sub
fist
adc
inc
js
push
or
and
push
push
in
push
call
pop
sub
cmp
dec
xor
cmp
(bad)
(bad)
dec
and
adc
cmp
jne
inc
cmp
jb
sbb
int3
jne
mov
test
xchg
data16
xlat
retf
jne
jne
pop
fwait
mov
rcl
mov
jecxz
je
jmp
fwait
dec
out
push
call
clc
pop
pop
mov
xor
xor
cmp
std
out
add
loopne
cmp
push
mov
mov
es
aaa
jne
mov
push
fsub
imul
xor
pop
xchg
outs
nop
inc
or
loop
pop
pusha
ja
jmp
test
pop
jne
add
dec
jne
outs
leave
ret
mov
cld
ret
push
mov
in
fld
xor
add
and
lea
push
mov
in
enter
or
js
inc
fstp
or
adc
and
add
pop
pop
les
rcr
inc
jmp
rcl
(bad)
(bad)
jmp
imul
daa
add
or
or
mov
fmul
mov
pop
add
inc
out
or
or
pop
add
jp
xchg
or
idiv
fld
call
fstp
shr
and
sub
add
inc
or
mov
sbb
popa
pop
int3
add
or
out
push
jne
jne
and
or
fmulp
fmul
xor
mov
sbb
fld
fst
fld
fstp
mov
add
scas
lock
jp
adc
jnp
rcr
xor
loopne
sbb
shr
(bad)
fld
imul
pusha
fmul
loopne
std
jg
sbb
sbb
fld
fdiv
fmul
mov
adc
lock
sub
xlat
pop
aad
pop
sbb
gs
test
inc
clc
fdivr
fstp
nop
pop
xor
jle
icebp
fstp
pop
adc
mov
xchg
rol
push
rcl
scas
and
ja
push
call
and
movs
fnsave
dec
scas
(bad)
ja
add
push
push
call
pop
fstp
pop
inc
jmp
outs
clc
fld1
fdiv
sub
rcr
cmp
fmul
xor
add
(bad)
(bad)
ffree
push
or
retf
fsubr
fmul
fst
fld
fmul
fmul
scas
popa
cmps
int3
fmul
sbb
or
jo
push
rol
or
out
pushf
sub
clc
inc
leave
fadd
inc
inc
lds
ret
and
push
jp
mov
jp
adc
call
xchg
jmp
jmp
test
fdivrp
aas
jbe
jne
and
retf
fchs
jmp
sub
call
out
aas
outs
rol
fstp
fchs
fcom
ins
jo
push
jmp
ret
push
push
mov
sbb
push
and
cli
(bad)
fdivr
in
inc
clc
into
push
dec
or
adc
lock
adc
add
rol
ja
popa
idiv
ins
imul
fadd
push
and
popf
sbb
cmp
in
sbb
fidivr
pop
adc
push
dec
lahf
sbb
(bad)
cli
(bad)
fst
pop
sub
pop
popf
jge
out
fld
push
xchg
mov
sti
or
or
into
loopne
add
cmp
push
cmp
outs
xor
jno
jle
fsub
inc
xor
in
xchg
jmp
div
fld
fld
inc
push
inc
dec
lea
pmulhw
ror
xlat
fsub
mov
loop
leave
mov
fld
shl
jnp
or
hlt
leave
pop
(bad)
(bad)
out
fmul
fstp
push
fistp
sbb
call
sbb
jb
(bad)
jg
push
fldz
xor
fstp
push
fldz
mov
fstp
retf
mov
in
push
int3
mov
xor
pop
enter
clc
add
inc
and
jmp
(bad)
leave
mov
or
pop
fmul
sbb
das
ja
ds
adc
retf
hlt
scas
ss
mov
fmul
mov
push
aam
pusha
mov
push
jl
and
pop
std
fcomip
jnp
hlt
mov
fmul
fchs
hlt
and
jge
es
and
cld
sub
cmp
xchg
inc
cmp
fstp
xchg
inc
ret
in
js
pop
jbe
rcr
sldt
(bad)
(bad)
out
popa
or
sbb
ror
pop
pop
fstp
jae
sti
ss
dec
aam
lods
or
fstp
jb
outs
cli
fnstsw
fdiv
fldcw
data16
jne
fnstenv
push
pop
mov
pop
clc
fstp
aad
adc
std
push
or
(bad)
jmp
lock
fcom
rcr
pop
cld
fstp
jmp
fnstcw
jb
lods
fnstenv
mov
inc
or
pop
sbb
push
cmp
add
pop
cld
sbb
clc
fild
adc
dec
add
add
emms
jg
call
dec
ror
test
cmp
jne
sbb
sete
xor
stos
cmp
setne
mov
mov
jmp
in
idiv
push
ret
cmp
mov
je
cmp
je
xor
mov
jmp
mov
jg
xor
cmp
je
cmp
cmp
push
hlt
imul
adc
cld
mov
add
ret
mov
inc
fnstsw
sub
lods
fmul
cmp
push
cmp
add
out
jmp
cmp
sbb
push
inc
pop
rcr
rol
mov
add
daa
jnp
cmp
je
clc
cmp
je
loop
loop
js
leave
fdiv
call
sbb
pop
mov
or
sbb
push
daa
jp
mov
inc
or
mov
push
je
cmp
je
(bad)
add
cmp
sbb
sahf
sbb
pop
or
jle
out
sbb
jnp
scas
jne
in
dec
les
les
fdivr
jg
arpl
and
pop
loopne
popf
sti
or
or
leave
fld
(bad)
and
or
hlt
in
outs
cmp
add
loope
pop
lods
sbb
sbb
inc
test
mov
fld
mov
out
jl
test
in
jmp
je
add
call
(bad)
aas
fdivrp
fld
push
fmul
push
fadd
in
ret
fsubr
pop
pop
fcomp
cmp
jp
fdivr
sar
xor
adc
adc
push
inc
dec
lock
cmp
je
mov
adc
jp
jno
add
loopne
jmp
adc
std
out
push
sbb
fsub
fst
xchg
leave
mov
in
in
in
xchg
lahf
cwde
shr
mov
mov
lods
xchg
pop
popf
mov
fsub
push
fstp
in
jnp
mov
sub
xlat
out
pop
clc
and
lods
adc
mov
xor
push
xor
or
inc
clc
outs
fcomp
or
loop
push
xor
les
clc
scas
jg
inc
mov
inc
fmul
fmul
mov
or
retf
xor
xor
scas
daa
je
and
mov
and
push
mov
cmp
inc
pop
hlt
mov
inc
movs
sbb
repnz
pop
and
fld
push
cmp
sub
hlt
xor
mov
(bad)
xor
push
xor
or
bnd
mov
sti
inc
mov
fdivr
add
mov
xchg
hlt
mov
pop
fmul
gs
cmp
jmp
cmps
cld
neg
mov
mov
pop
fsubr
jo
push
or
scas
mov
mov
adc
mov
fdivr
ret
(bad)
fisttp
adc
inc
mov
dec
add
dec
or
jmp
out
sbb
or
mov
dec
lods
or
xor
test
cmp
fsubrp
jmp
out
icebp
fstp
mov
inc
les
mov
leave
push
pop
add
jnp
fld
retf
fstp
mov
loopne
pop
or
leave
fstp
ffreep
(bad)
fimul
pop
adc
out
fstp
repnz
sbb
call
jmp
and
sbb
sub
jnp
or
aam
repnz
xor
inc
(bad)
out
pusha
dec
sub
pop
sub
dec
xor
pop
sub
inc
xor
inc
xor
(bad)
dec
adc
inc
and
ret
pop
fld
or
adc
aaa
std
cdq
mov
je
call
je
cld
sti
inc
inc
cmp
je
or
cmp
pop
add
push
lock
push
int3
mov
cmp
and
sub
cli
add
sbb
mov
(bad)
jg
cld
adc
pop
sbb
mov
mov
mov
mov
mov
ret
mov
fstp
add
inc
rcl
inc
aam
and
push
xor
push
fadd
mov
ja
inc
jne
lea
push
push
inc
jp
or
call
or
mov
rcr
adc
add
mov
and
mov
pop
add
fcom
add
mov
call
mov
inc
cld
mov
fmul
scas
or
fchs
inc
call
dec
fstp
retf
fchs
fadd
cmps
lock
(bad)
pusha
test
ret
out
fstp
pop
adc
test
aaa
fadd
add
ret
adc
mov
je
cmc
dec
(bad)
fadd
fstp
pop
sub
jecxz
inc
and
sbb
rcr
hlt
lock
rcl
into
pop
push
mov
stos
test
smsw
mov
sub
test
mov
mov
mov
inc
dec
inc
not
jmp
mov
daa
movs
push
jg
sbb
sbb
or
add
push
pop
inc
rcl
retf
jmp
fadd
jp
(bad)
ss
cld
adc
gs
fcomp
test
add
xchg
fucomi
mov
adc
dec
dec
retf
ror
aas
or
loopne
mov
aaa
jne
adc
fistp
adc
mov
mov
and
jl
pop
ins
push
inc
xchg
push
adc
rcl
inc
push
jle
and
(bad)
fild
push
mov
les
mov
add
movzx
(bad)
jmp
ror
test
mov
add
cmp
and
popa
mov
mov
mov
inc
sub
xchg
jg
mov
int3
inc
adc
inc
mov
xor
or
inc
xor
sub
in
inc
and
ror
or
pop
jne
adc
ror
xor
add
lock
sti
sub
jo
sub
inc
je
or
push
push
push
push
call
fild
cwde
or
imul
adc
jmp
clc
fucompp
jmp
jnp
stos
inc
test
jbe
in
adc
pop
rcl
inc
imul
inc
or
inc
je
cld
fnstenv
cld
jb
adc
pop
rol
pop
mov
fstp
call
pop
mov
jmp
mov
faddp
dec
ja
inc
dec
enter
cld
fadd
sbb
sahf
jmp
fisttp
push
xor
pop
ins
inc
and
fcomp
xchg
jmp
or
dec
fadd
or
scas
mov
clc
addr16
jmp
in
dec
mov
mov
je
dec
je
dec
je
dec
jne
fld
jo
sub
pop
pop
aam
jmp
sbb
fbld
enter
les
in
bound
adc
jnp
lahf
mov
clc
nop
pusha
imul
fld
push
test
rol
repnz
xor
cmp
push
fstp
mov
movs
mov
fsubr
call
xchg
push
mov
loope
mov
mov
loopne
mov
pop
ror
jmp
cld
test
mov
or
getsec
add
jbe
and
add
sar
or
or
ds
and
adc
jle
sbb
js
stc
or
sub
clc
jmp
xor
les
popa
outs
xor
jno
dec
hlt
mov
or
cs
dec
add
sbb
adc
cmp
mov
inc
in
mov
xchg
retf
das
leave
mov
xchg
and
aas
xor
scas
out
enter
or
inc
icebp
mov
jge
or
or
mov
enter
jmp
xchg
add
(bad)
cmp
mov
lea
sub
test
mov
mov
xor
jmp
add
adc
inc
loopne
rcr
cmp
(bad)
push
int3
loopne
dec
test
jg
xor
shl
or
mov
dec
jns
mov
sub
icebp
jne
dec
ret
cli
daa
jnp
ds
leave
ret
int3
add
push
mov
dec
add
mov
xor
repz
jne
pop
lock
push
add
dec
ror
call
pop
mov
xor
adc
neg
inc
je
adc
sbb
scas
outs
nop
retf
into
adc
sti
nop
out
add
push
aas
pop
pop
mov
mov
xor
test
jne
mov
mov
or
cmp
add
mov
mov
mov
inc
loopne
out
rcl
mov
mov
mov
or
aaa
add
xchg
mov
call
popa
push
mov
int3
int3
push
mov
mov
mov
or
pop
ret
cmp
loope
push
push
call
jg
icebp
mov
and
(bad)
mov
sbb
mov
retf
pop
pop
lods
pop
sub
jge
lods
test
dec
mov
mov
sbb
ror
mov
push
call
jmp
jp
push
cmp
xchg
dec
test
je
mov
mov
push
call
scas
mov
sar
push
push
ffreep
xor
adc
(bad)
call
dec
lea
push
push
adc
mov
push
call
jmp
(bad)
pop
cld
ja
inc
cmp
add
call
mov
inc
xor
je
adc
div
push
call
cmp
push
call
mov
adc
rol
add
movs
add
mov
pop
jle
push
loope
loope
xchg
xor
pop
ret
int3
mov
mov
or
mov
aad
mov
sbb
mov
cli
add
push
mov
sub
push
push
push
jmp
call
xor
sub
push
lock
sbb
mov
int
int3
pop
or
sar
shl
icebp
or
aas
jecxz
loopne
mov
pop
mov
xchg
fcomp
sbb
xor
adc
scas
out
ins
clc
test
lods
sbb
adc
add
add
jl
jmp
adc
jg
fadd
fisttp
push
lea
push
call
push
xchg
div
pop
or
out
adc
into
call
xchg
push
xor
fnstsw
das
mov
mov
call
pop
mov
aas
std
ja
sbb
or
inc
cwde
add
push
enter
aaa
add
xor
fistp
popf
or
fild
xchg
sub
adc
out
mov
ss
xchg
jbe
jg
mov
jg
stos
popa
xor
call
jb
leave
mov
mov
ja
sub
cs
xor
pop
xor
jg
mov
sub
popa
add
add
sub
or
outs
test
call
push
add
call
cwde
popf
ror
call
push
lea
push
mov
mov
aas
mov
mov
xchg
or
sar
setne
pop
dec
and
std
xchg
das
push
mov
test
not
xlat
sub
xchg
mov
adc
mov
mov
inc
mov
sbb
sti
(bad)
jg
mov
mov
test
je
mov
test
jne
mov
push
hlt
push
lea
push
xchg
sub
mov
jge
gs
shl
jne
sbb
mov
sti
pop
jae
push
inc
and
mov
push
call
sub
push
idiv
test
jge
cmp
cmp
jne
bnd
cdq
jnp
push
mov
mov
mov
jg
jae
push
int3
and
and
jl
mov
mov
xor
arpl
pop
stc
add
inc
or
inc
or
call
sub
add
add
lods
mov
comiss
mov
sbb
xor
dec
mov
xchg
mov
adc
call
adc
add
push
ja
and
inc
jae
add
push
push
call
fistp
call
adc
pop
dec
xchg
dec
or
sbb
ror
push
add
push
sub
(bad)
xchg
mov
push
mov
scas
out
cli
xor
push
call
adc
jae
(bad)
and
mov
adc
add
por
in
inc
hlt
inc
mov
mov
and
sub
lock
add
jmp
sar
inc
inc
push
push
jne
jbe
dec
jl
mov
aas
inc
xor
and
or
mov
dec
or
mov
jg
push
mov
pusha
stos
mov
push
xchg
int3
test
and
mov
sti
mov
shr
not
mov
or
mov
movs
jae
(bad)
ins
sbb
add
inc
jmp
sub
or
and
adc
(bad)
mov
push
call
dec
xor
dec
sbb
dec
pop
jmp
pop
fsub
imul
jne
sbb
and
push
sar
mov
loope
outs
push
or
adc
(bad)
jmp
dec
or
int3
int3
(bad)
or
push
mov
(bad)
inc
adc
jle
push
pusha
inc
add
inc
push
out
or
fdiv
leave
sbb
cmp
xor
adc
jge
sub
mov
push
mov
mov
jmp
sbb
xor
add
daa
cmp
or
idiv
push
push
xchg
(bad)
inc
mov
push
mov
push
call
test
mov
je
mov
jae
lock
push
or
mov
test
pop
cmp
pop
and
jne
je
inc
sbb
and
loope
ret
sar
push
mov
test
(bad)
(bad)
lea
push
cmp
push
mov
dec
adc
push
pop
pop
mov
add
push
adc
xor
mov
movs
inc
and
or
push
adc
jbe
lea
pop
into
inc
xchg
jmp
dec
adc
jg
jae
or
sbb
push
cmp
hlt
pop
sti
mov
add
pop
push
call
or
call
add
sbb
mov
out
dec
and
adc
mov
pop
or
sbb
jmp
ds
push
sub
scas
push
cmp
or
es
sbb
outs
test
call
in
and
add
call
mov
mov
mov
call
mov
mov
jnp
mov
out
add
out
mov
and
loope
push
add
add
add
jbe
adc
rol
and
lea
add
mov
mov
push
push
dec
call
jne
add
mov
es
jg
mov
pop
data16
or
lock
repz
mov
mov
push
push
xor
xor
xor
xchg
es
xor
and
mov
or
push
lea
pop
push
jl
mov
jmp
jl
adc
jne
mov
lea
push
mov
outs
jo
push
inc
jecxz
push
push
sbb
aam
adc
and
test
jl
inc
mov
and
xlat
out
ja
inc
neg
sbb
inc
cmp
jl
fadd
pop
pop
pop
pop
pop
add
xor
into
cmp
mov
and
mov
add
mov
push
rol
xor
sti
sti
das
mov
xchg
mov
xor
or
or
test
mov
(bad)
mov
std
add
and
int3
mov
mov
add
mov
cmp
test
je
ja
mov
neg
sbb
and
neg
add
fdivr
pop
mov
idiv
(bad)
jne
xor
pop
pop
(bad)
jg
pop
xchg
mov
fwait
sbb
add
mov
mov
mov
call
loopne
mov
push
push
mov
call
cmp
je
pop
jb
or
push
mov
mov
push
xor
mov
mov
mov
add
push
mov
or
push
or
(bad)
jl
out
and
jbe
mov
push
and
dec
adc
mov
xor
push
lea
mov
mov
sub
or
mov
sub
push
adc
push
or
(bad)
fistp
or
add
pop
mov
push
xor
push
mov
jecxz
ja
mov
mov
mov
push
or
push
jbe
mov
mov
clc
std
lahf
jb
push
sbb
rol
lock
push
lea
and
mov
adc
sub
mov
test
or
add
and
mov
sbb
mov
or
mov
mov
or
push
mov
lods
or
inc
cmp
ja
sub
cwde
cmp
add
and
retf
jp
call
xor
cmp
sar
shr
inc
cmp
call
call
push
add
jae
or
inc
shl
les
xor
mov
(bad)
mov
icebp
pop
cmp
sub
or
pop
or
push
xor
sar
je
push
inc
out
test
mov
push
mov
inc
mov
xor
lahf
rcl
mov
mov
outs
xor
inc
or
fucomi
inc
mov
mov
inc
hlt
push
lea
push
or
xor
xor
jge
push
ret
dec
inc
push
test
jl
mov
in
mov
fist
inc
clc
cmp
push
rol
into
dec
add
adc
jl
sub
adc
aaa
dec
jne
mov
lea
jge
call
or
xor
jnp
xchg
and
mov
les
push
mov
jne
pop
ja
dec
je
pushf
not
add
push
mov
push
ja
and
sbb
inc
xor
std
adc
dec
sbb
jns
arpl
adc
sbb
add
lea
mov
stos
sar
js
fdiv
in
mov
and
jle
mov
push
adc
cwde
test
push
sbb
cld
rcr
or
mov
fsubr
int
inc
cmp
jl
mov
push
mov
int
je
sub
enter
jge
out
xchg
mov
add
pop
mov
pusha
(bad)
mov
add
rol
fild
jo
mov
push
push
cmp
pop
sub
push
push
push
call
xor
cmp
fdivr
adc
fnstsw
call
add
pusha
adc
or
fsubr
mov
or
add
or
je
scas
or
mov
or
ror
sbb
iret
hlt
(bad)
sub
out
clc
aas
sti
push
dec
mov
dec
sbb
adc
add
test
(bad)
call
mov
fidiv
push
ins
adc
jne
sar
ret
and
cmp
je
mov
idiv
cs
pop
adc
or
push
adc
inc
adc
fbstp
pop
lock
push
and
out
mov
mov
aas
icebp
push
push
mov
in
sub
cmp
jge
mov
cmp
aaa
icebp
data16
pop
pop
or
adc
jbe
pop
xor
cmps
mov
inc
add
dec
or
enter
inc
aad
push
lea
mov
push
sbb
mov
lea
sbb
daa
inc
mov
cmps
push
jne
mov
lea
js
dec
fwait
(bad)
push
add
aas
and
ret
or
adc
and
and
dec
jp
or
test
jne
and
arpl
mov
pop
in
sahf
mov
inc
sbb
aam
retf
sub
sbb
ror
mov
dec
xchg
mov
sti
or
out
mov
or
sar
retf
loop
ret
sbb
ror
int3
lahf
or
daa
and
push
ins
xchg
(bad)
int
sar
cmp
pop
add
imul
xchg
xchg
or
je
scas
mov
push
in
test
pop
lock
sbb
and
(bad)
aaa
adc
pop
je
cmp
jbe
pop
pop
fdivp
popa
adc
je
pop
push
adc
and
xlat
movsx
stos
add
dec
add
lea
enter
push
push
call
inc
push
call
or
je
jno
mov
mov
out
and
add
inc
inc
jp
(bad)
mov
dec
test
mov
add
cmp
jne
jmp
rol
std
pop
call
fs
push
ror
fdivr
pusha
mov
and
or
bndstx
cmp
push
mov
or
or
mov
cwde
add
outs
or
out
jno
into
or
sbb
or
cld
ror
fsubrp
call
pop
cli
(bad)
pop
cmp
mov
icebp
mov
clc
pop
dec
xchg
sub
mov
jmp
mov
mov
push
call
pop
xor
pop
jne
mov
movs
add
pop
pop
(bad)
fbld
jl
mov
push
lea
push
not
adc
jg
clc
sub
push
xor
aas
popf
add
jge
cmp
add
push
push
data16
sti
push
sar
jno
pop
mov
sbb
int3
int3
sub
aas
fadd
ret
int3
dec
xchg
mov
cmps
mov
push
clc
or
fisub
iret
retf
push
push
push
ins
inc
and
pop
add
mov
dec
jne
lahf
pop
je
dec
fcomip
or
stos
sbb
mov
add
sbb
push
call
shl
test
jge
ret
inc
mov
je
cmp
ficom
gs
test
je
test
sbb
(bad)
mov
je
test
jne
mov
das
sbb
lea
xor
or
pop
pop
test
in
push
mov
shr
and
scas
pop
pop
add
mov
stos
push
aad
push
or
or
xor
pusha
and
pop
cli
mov
dec
es
jne
mov
push
adc
call
jmp
mov
pop
pop
jne
lock
retf
xor
cmp
push
push
push
mov
call
fs
sti
cmp
adc
cs
cwde
push
add
cmp
add
jl
inc
adc
pop
xchg
or
sub
xor
mov
rol
inc
stos
jle
mov
loop
pop
cdq
cmp
cwde
xor
mov
add
dec
cmp
test
cwde
mov
sbb
shl
adc
or
jno
mov
cs
add
jle
push
mov
adc
push
(bad)
cli
std
getsec
mov
mov
or
mov
and
inc
or
ds
cmp
mov
or
mov
mov
or
push
(bad)
adc
adc
iret
dec
and
int3
(bad)
(bad)
sbb
(bad)
maxps
(bad)
mov
jns
mov
imul
push
sub
and
in
adc
int3
push
push
xchg
rol
fs
out
xor
sbb
adc
add
std
pusha
jmp
or
adc
call
adc
and
push
or
pop
or
inc
int3
inc
or
iret
add
sub
xchg
(bad)
or
adc
push
iret
fs
fist
mov
call
mov
adc
dec
sbb
dec
xor
pop
adc
pop
sbb
cld
or
jmp
pop
and
inc
sub
xor
clc
sbb
add
clc
xchg
add
and
xrelease
repnz
mov
test
jg
popf
xchg
jmp
ss
push
call
mov
retf
mov
push
adc
rol
jmp
movs
mov
and
mov
pop
pop
ret
pop
cs
or
and
les
add
dec
cmp
movlps
inc
dec
xchg
jmp
dec
dec
sbb
in
and
and
push
std
inc
fwait
xor
xchg
(bad)
clc
test
jge
cmp
and
and
ss
xchg
push
xchg
push
sahf
lahf
cmp
push
lods
push
call
mov
mov
fild
or
sub
jns
ffreep
aas
dec
xor
test
test
dec
and
pop
shl
not
mov
int
push
jnp
sar
and
fnsave
lods
sbb
add
adc
push
lea
cmp
rol
inc
add
xchg
ror
add
adc
popa
and
inc
push
dec
fisub
fsub
dec
dec
push
cmp
xor
(bad)
(bad)
(bad)
mov
inc
and
lea
mov
mov
mov
mov
mov
mov
or
adc
inc
cmp
inc
inc
mov
pop
mov
sahf
add
rol
mov
adc
lods
js
imul
push
mov
stos
les
mov
fisttp
add
push
rcr
xor
xor
test
setne
mov
pop
dec
and
inc
cdq
xor
mov
xor
sbb
jne
add
or
je
push
pop
fcom
or
adc
and
push
add
(bad)
mov
mov
(bad)
das
push
mov
push
mov
ja
sti
xor
dec
sbb
call
push
call
sub
out
dec
jne
pop
pop
push
call
adc
sub
mov
test
xor
adc
sbb
inc
shl
nop
aam
adc
call
push
pop
sbb
xor
or
in
jp
adc
xchg
xor
or
scas
cmovge
mov
push
jecxz
cmp
push
rcr
dec
push
test
inc
sub
or
jmp
push
jnp
arpl
add
fsubr
and
adc
push
jo
push
out
dec
jl
int3
push
mov
enter
mov
push
mov
mov
jg
mov
cmp
jg
jl
mov
cmp
jae
pop
pop
pop
mov
mov
mov
adc
push
pop
xchg
je
sbb
push
xor
outs
bound
das
mov
push
mov
aaa
add
push
mov
push
leave
lock
(bad)
sbb
inc
push
push
push
call
ja
mov
rcr
sub
test
enter
fnsave
mov
les
ret
mov
sub
add
cdq
mov
fst
rcl
lods
loope
push
inc
pusha
std
mov
dec
push
ja
and
dec
es
loop
and
(bad)
push
arpl
loop
push
push
push
adc
mov
call
inc
pop
jl
loopne
in
cmps
call
pop
pop
arpl
pop
fild
cmp
xchg
jmp
adc
add
cwde
mov
icebp
lea
loope
dec
ins
fucomp
push
sbb
fcom
push
mov
das
mov
ins
xlat
sbb
in
mov
das
sbb
dec
inc
(bad)
ins
xchg
add
rol
add
jl
fcom
in
xor
dec
adc
dec
je
call
or
xchg
stos
das
add
xchg
(bad)
call
pop
dec
fs
jmp
enter
mov
call
sar
mov
mov
fidiv
stos
test
pusha
dec
es
sbb
loop
or
dec
fs
popa
inc
fsubr
adc
imul
fxch
inc
scas
sbb
test
xchg
hlt
xchg
cmp
int3
add
sbb
push
mov
not
lea
push
test
inc
cld
mov
call
mov
jns
mov
shr
mov
xchg
or
lods
pop
cwde
loope
or
std
ja
mov
int3
xchg
(bad)
jl
call
mov
or
(bad)
pop
aad
dec
hlt
fisttp
fdivrp
mov
test
jne
mov
adc
mov
xchg
in
call
dec
cwde
loop
push
call
shl
mov
out
pop
adc
(bad)
jl
outs
pop
idiv
sahf
push
add
push
call
adc
sbb
call
mov
jecxz
cwde
push
les
int
pusha
into
cmp
iret
shl
or
rol
popf
jae
jbe
mov
mov
loop
lock
or
lock
adc
pop
ret
int3
fwait
call
call
ins
jecxz
add
add
aam
or
or
xor
add
push
jne
mov
lock
mov
dec
gs
cmp
inc
int3
cmpxchg
and
inc
and
and
lahf
ss
push
xor
ret
jl
sbb
jb
into
test
mov
inc
cmp
add
inc
clc
mov
pop
imul
scas
into
add
popa
clc
invd
jae
lock
add
cdq
movnti
ja
push
and
xchg
test
enter
sbb
lea
push
push
push
mov
(bad)
mov
push
test
push
cmp
push
mov
call
push
push
neg
jne
test
lea
push
mov
call
(bad)
mov
jle
mov
mov
mov
mov
mov
mov
inc
lea
and
push
mov
(bad)
jne
mov
icebp
mov
mov
jns
mov
fwait
int3
push
add
or
and
sahf
test
and
or
jmp
xor
(bad)
jno
cdq
cmc
rcpps
sbb
jecxz
xchg
jmp
fs
cmp
mov
popa
mov
call
dec
cmps
fs
jne
outs
leave
out
ret
je
add
call
js
mov
aad
inc
push
cmp
pop
je
mov
lea
call
mov
mov
cmp
je
adc
inc
and
adc
sbb
ds
push
xor
push
(bad)
mov
pop
call
pop
call
and
add
repnz
cmps
xor
in
fist
pusha
retf
pop
mov
call
dec
or
add
adc
test
push
pushf
mov
xchg
or
push
push
mov
add
cmps
mov
inc
fcomp
je
mov
push
test
(bad)
mov
or
leave
mov
lahf
aad
sub
and
mov
test
jge
icebp
es
ins
or
mov
mov
pop
and
sub
mov
cdq
call
stos
out
pop
cmp
dec
cmp
jne
mov
xor
add
cld
cmps
fisttp
adc
ror
sub
xor
dec
push
mov
mov
mov
mov
aaa
pop
or
push
dec
mov
adc
in
clc
mov
push
push
call
mov
cmp
mov
clc
pop
cli
dec
test
pop
jne
pop
mov
or
pop
mov
adc
adc
nop
aas
adc
pop
mov
std
cmp
loope
pop
mov
sldt
cmp
fs
pop
mov
mov
cs
or
and
scas
mov
mov
es
sub
jne
mov
and
cmp
sahf
js
add
jne
jne
add
xchg
lock
xlat
mov
adc
or
or
outs
jo
inc
or
mov
pop
shl
add
push
mov
xor
mov
call
outs
jb
dec
ins
mov
cmps
inc
lahf
sbb
lea
lea
and
sti
jecxz
mov
bound
push
inc
dec
inc
int
sub
push
ins
mov
mov
into
movs
jmp
push
pushf
mov
arpl
rcl
cmc
mov
add
jl
adc
push
mov
adc
mov
lea
sbb
push
adc
sbb
in
or
push
and
lock
push
xor
push
call
jo
add
push
and
inc
loope
jmp
pop
inc
test
ins
mov
adc
shl
sub
xchg
dec
xor
adc
push
ffree
inc
js
add
add
push
mov
mov
xlat
rcr
and
adc
or
outs
iret
add
dec
icebp
inc
or
movs
aam
aaa
adc
sub
(bad)
push
push
pusha
xor
pop
hlt
call
(bad)
adc
sbb
adc
push
inc
sbb
xchg
dec
pop
adc
push
push
call
pop
adc
daa
sbb
mov
push
lea
xchg
sub
mov
or
jecxz
jo
into
xchg
add
cld
gs
cmp
pop
mov
mov
aam
mov
jl
out
sbb
xor
(bad)
dec
aam
sub
xor
push
daa
retf
add
pop
push
sub
add
adc
jl
icebp
out
outs
adc
mov
call
js
sbb
or
push
mov
lock
add
in
(bad)
mov
js
js
daa
jle
add
jnp
mov
test
mov
ret
mov
pop
lock
pop
dec
dec
mov
ret
test
adc
jne
xor
and
cmp
iret
lock
xchg
add
mov
aas
add
jne
pusha
rcl
loope
push
inc
hlt
xor
(bad)
ror
mov
and
scas
sbb
xchg
ss
in
fsubr
add
mov
(bad)
cvtps2pd
jmp
ret
xor
ret
mov
sar
dec
and
imul
mov
shl
push
jo
jle
add
inc
fistp
sar
mov
adc
loopne
loop
inc
xor
ins
and
push
mov
cli
jnp
push
(bad)
push
iret
call
sbb
js
or
mov
rcr
arpl
lods
mov
cmove
rcl
xor
jge
xor
push
pop
xor
add
add
jne
test
jne
or
or
inc
(bad)
mov
push
call
cmp
jne
jo
add
in
into
call
push
mov
(bad)
aas
inc
push
call
push
call
pop
pop
pop
mov
xchg
hlt
sahf
xchg
xor
or
mov
mov
jne
mov
push
pop
scas
repnz
test
or
into
sbb
or
xor
popa
mov
xor
icebp
xor
cmp
jge
xor
cmp
pop
pop
dec
and
sbb
mov
dec
cmp
jne
aad
mov
inc
cwde
xchg
ds
push
add
pop
sbb
sbb
ja
pushf
mov
fisttp
add
lea
push
mov
repnz
sub
sar
pop
pop
mov
jae
pop
and
push
pop
dec
das
test
jne
jbe
data16
pusha
or
ins
test
(bad)
adc
das
xor
cmp
pusha
dec
pop
ret
(bad)
cmp
cli
mov
fwait
in
mov
xlat
jnp
jne
mov
mov
dec
and
mov
aam
sahf
call
pop
add
lea
xor
push
adc
cwde
cmp
loop
add
adc
sub
hlt
sbb
add
(bad)
call
call
cmp
pop
pop
jl
push
push
push
push
cmp
add
cmp
mov
ins
mov
out
inc
clc
cmp
int3
int3
inc
not
or
clc
(bad)
mov
jo
lds
ss
mov
xor
aas
call
push
mov
adc
mov
or
adc
mov
dec
inc
mov
push
call
fsubr
inc
fdivr
aas
jge
push
nop
adc
mov
hlt
std
inc
or
xor
ds
rol
add
push
iret
sbb
inc
add
(bad)
call
adc
mov
cdq
mov
std
add
push
and
push
call
movs
cwde
xor
pop
add
dec
pop
ins
xor
lods
call
ror
push
scas
push
sub
ret
(bad)
sbb
pop
or
cmp
minps
and
adc
mov
cwde
xor
fs
test
mov
out
add
add
or
add
push
pop
hlt
mov
call
mov
push
add
(bad)
ja
or
pop
xor
cli
sbb
or
mov
cmovb
pop
jne
dec
add
add
jmp
add
neg
pop
adc
(bad)
or
mov
or
ja
adc
jl
or
ja
rol
mov
mov
inc
mov
mov
mov
add
dec
or
add
pop
adc
rcl
shl
dec
clc
(bad)
loopne
rep
jbe
inc
sub
push
mov
mov
jo
pop
ror
add
data16
pop
pop
ret
sbb
shl
pop
jl
push
je
das
mov
xor
sti
pop
inc
popa
pop
adc
or
not
sub
pop
adc
mov
dec
cmps
je
mov
adc
add
cs
iret
and
sub
mov
cmp
jne
out
out
dec
test
je
mov
mov
mov
jne
inc
repnz
popw
xor
lahf
sbb
push
push
push
cmc
mov
rep
mov
jne
cld
aas
or
inc
inc
jne
pop
pop
mov
pop
idiv
add
in
mov
mov
shl
ds
add
push
icebp
pop
and
repnz
stc
outs
dec
jg
sbb
push
sbb
mov
push
mov
sub
inc
cmp
ror
popa
pop
je
add
mov
mov
sar
or
inc
jge
add
mov
cmc
(bad)
cmps
lea
mov
xor
fidiv
jo
into
jle
push
call
sbb
cli
out
mov
inc
bound
mov
ret
adc
fild
or
jl
cld
add
ror
jnp
rcl
shl
pop
add
cmp
or
dec
cmps
call
clc
popf
leave
cdq
pop
nop
cmp
mov
loope
mov
cld
sbb
scas
add
or
ret
mov
mov
add
test
test
jne
xor
xchg
std
sti
cmp
adc
and
adc
push
mov
stos
data16
jns
aaa
mov
je
or
fdivr
addr16
mov
mov
cmp
jne
jno
je
jl
sbb
inc
cmp
mov
movzx
sub
jmp
int
or
inc
cmp
jne
adc
shl
jg
movs
inc
and
(bad)
cmp
fiadd
add
hlt
jmp
mov
push
sbb
adc
xor
hlt
dec
sbb
faddp
xor
mov
icebp
dec
jo
push
sbb
adc
and
jns
leave
push
in
push
fild
push
lea
fistp
(bad)
fucomip
inc
lea
cmp
jbe
mov
push
push
push
adc
mov
into
clc
push
sbb
jmp
ja
je
cmp
and
xchg
mov
mov
jne
test
iret
je
push
push
push
push
(bad)
sar
scas
sbb
sbb
add
xor
sbb
sbb
xor
xlat
push
in
add
cmp
sub
sub
call
or
into
jbe
adc
jmp
sub
adc
cmp
inc
sub
xlat
and
add
jae
stc
adc
rcr
adc
out
loopne
adc
mov
sub
push
je
icebp
dec
push
call
push
aas
test
mov
popf
add
adc
ins
ret
sti
jg
sub
sbb
push
push
push
rcl
loop
shr
out
push
test
push
mov
add
xchg
rol
sub
int3
int3
jmp
(bad)
dec
int3
int3
mov
xor
mov
mov
mov
mov
push
xor
mov
dec
mov
(bad)
jmp
jbe
push
call
jecxz
movs
test
jne
mov
push
les
or
mov
dec
test
push
je
retf
dec
or
into
je
fild
hlt
call
add
jmp
xchg
jp
adc
or
mov
push
dec
adc
push
call
shl
add
dec
jb
mov
int3
mov
or
outs
loop
movs
adc
push
movs
mov
sub
inc
inc
inc
adc
mov
add
cmp
mov
fnstcw
jb
mov
mov
je
xchg
fisttp
cmps
sti
shl
xor
ja
addr16
add
jne
jl
mov
jmp
jo
pop
cmp
jne
mov
jbe
or
call
cmp
(bad)
mov
xor
dec
arpl
popf
loop
fidiv
jne
das
jbe
inc
adc
shr
pop
ja
je
mov
pop
repnz
cmp
push
push
outs
push
lea
loope
mov
mov
call
sbb
or
mov
dec
or
cmp
pop
and
sbb
push
push
pop
add
cmp
sbb
sbb
nop
and
and
adc
sbb
ja
imul
push
push
push
call
les
adc
test
jge
mov
pop
pushf
dec
add
mov
mov
ds
loope
add
in
sbb
pop
pop
ret
pop
jnp
cs
jne
call
cmps
in
je
mov
sub
cmp
mov
ret
movs
sbb
sbb
shl
mov
mov
push
call
jmp
cmp
cmp
popa
int3
std
sbb
add
push
push
push
call
stc
das
fucom
fidivr
mov
fadd
(bad)
and
stos
push
add
fistp
jmp
pop
loopne
xchg
or
or
cs
push
push
push
scas
test
ret
inc
cld
aaa
mov
add
mov
jmp
scas
ins
add
jl
adc
lds
mul
add
add
mov
or
push
xchg
adc
and
mov
aaa
xlat
adc
adc
fcomp
or
add
push
call
jmp
in
push
cmp
cmp
add
xor
sbb
push
(bad)
push
or
and
(bad)
test
div
and
cmps
jne
repnz
sar
call
adc
mov
mov
jae
and
sar
call
push
or
mov
mov
jmp
pop
dec
or
pushf
or
mov
mov
les
push
mov
mov
dec
ror
pop
xchg
push
dec
(bad)
call
push
sti
aas
mov
add
pop
xor
or
ret
ins
pop
in
pop
pop
cld
aam
jmp
mov
jno
mov
inc
(bad)
or
outs
stos
test
xor
push
call
mov
add
mov
aas
push
adc
aas
adc
cwde
and
xor
shl
mov
arpl
ror
inc
les
and
add
ret
jg
aas
add
adc
jg
jne
in
and
sar
pop
jl
or
sbb
fadd
cmps
(bad)
sbb
sbb
sbb
shl
dec
pop
push
dec
sbb
or
add
dec
clc
aaa
std
sbb
sbb
retf
cmp
call
or
push
es
cmp
and
push
xor
xchg
arpl
jae
inc
or
add
mov
cld
fistp
inc
push
(bad)
in
mov
dec
loopne
dec
or
(bad)
and
mov
or
push
mov
or
cmp
and
sub
and
sub
and
mov
jae
mov
push
fcmovu
mov
inc
outs
call
xor
mov
and
aas
outs
dec
es
ret
mov
jb
(bad)
and
test
popf
out
cli
mov
es
aas
scas
jg
fst
sub
aas
aas
inc
pop
pop
movs
pop
mov
pop
fsubr
das
aas
jg
mov
stc
(bad)
cmp
mov
or
pop
mov
xchg
pop
call
dec
inc
ret
adc
inc
lahf
pop
or
(bad)
xchg
call
inc
or
in
adc
icebp
lea
push
push
cdq
mov
adc
mov
push
sub
scas
push
push
cld
fs
jge
jle
ret
push
add
jle
xchg
inc
icebp
mov
inc
cmp
sbb
dec
cmp
push
dec
cmp
or
inc
in
add
xor
push
xchg
lds
loope
pop
jne
pop
sbb
cmp
jne
or
adc
dec
call
mov
mov
push
push
sbb
add
xchg
sub
pcmpgtd
fistp
je
test
jl
mov
and
inc
push
vsubpd
push
mov
(bad)
cwde
mov
inc
pop
sti
or
rcl
mov
mov
cmps
ret
shl
out
iret
mov
or
clc
loop
push
push
push
or
sub
jl
push
push
fsubr
pop
pop
dec
adc
mov
pusha
dec
cmp
nop
test
jb
mov
inc
add
add
pusha
sub
cmovl
addr16
inc
test
push
je
lea
jmp
xor
mov
je
fwait
mov
je
lea
sub
lea
pop
jmp
xor
pop
jmp
inc
daa
lock
push
push
xor
mov
(bad)
mov
push
cmc
pop
inc
or
in
sahf
aad
mov
dec
call
mov
call
arpl
cmps
in
lahf
call
push
dec
sbb
iret
pop
push
push
push
call
into
and
inc
xchg
cdq
sbb
aas
int
fs
aam
push
push
lock
xchg
popf
inc
and
mov
pop
adc
push
jno
iret
prefetcht0
or
pop
popa
or
dec
or
mov
mov
into
out
add
jmp
jae
dec
sub
lahf
stc
test
sub
xor
loopne
rol
call
into
or
je
push
call
dec
add
int
mov
push
call
and
sbb
retf
sbb
adc
jae
jle
mov
sar
lods
mov
jne
pop
adc
add
lea
push
mov
pop
mov
int3
or
jle
mov
(bad)
jle
mov
mov
pop
inc
lea
in
lods
mov
fisttp
and
outs
or
mov
call
fld
or
shr
sbb
sbb
jmp
pop
(bad)
dec
add
je
cmp
je
mov
add
adc
or
fimul
call
fs
jne
sbb
push
mov
test
jne
mov
jae
inc
mov
adc
in
push
mov
cmp
jb
pop
mov
sub
push
lea
jb
pop
pop
push
not
adc
jbe
test
adc
cld
xor
add
push
mov
movsx
cmp
outs
sub
ror
rcl
sbb
push
fstp
sbb
setb
call
dec
ja
test
hlt
pop
test
test
xor
or
or
cmp
and
jl
and
(bad)
push
push
push
mov
push
js
push
push
adc
(bad)
call
add
pop
in
(bad)
sub
lea
push
xchg
aaa
loope
test
push
pop
xchg
pop
jl
js
pop
pop
ret
out
mov
(bad)
xor
push
call
rol
add
xor
add
data16
mov
pop
adc
lahf
pop
jns
pop
enter
rcl
push
mov
clc
je
cmp
pop
in
or
cmp
je
jecxz
mov
cmp
mov
xchg
jne
lock
mov
jne
pop
adc
jmp
test
inc
adc
push
dec
lea
jb
stos
arpl
test
cmp
adc
sbb
inc
pop
lea
jbe
test
cmps
dec
cld
push
push
mov
push
push
adc
call
push
call
imul
or
(bad)
fild
fld
fst
fcomp
mov
jne
mov
jmp
(bad)
jmp
and
add
or
jmp
add
out
clc
icebp
ja
cmp
mov
jo
push
mov
push
call
jae
popa
mov
or
(bad)
arpl
add
pushf
jecxz
cmc
orps
stos
adc
mov
arpl
pop
ins
outs
dec
(bad)
or
jo
xor
sbb
dec
sub
scas
stos
sub
dec
push
(bad)
push
sti
out
xchg
and
push
push
push
push
mov
mov
(bad)
jmp
lea
push
push
push
mov
aaa
pop
xor
push
mov
adc
je
add
lea
jnp
sub
mov
push
push
call
sub
(bad)
(bad)
push
popa
clc
not
push
mov
ja
mov
sub
cmp
jl
std
fld
sbb
push
jnp
into
cmp
sbb
push
mov
pop
or
adc
dec
cmps
fstp
or
push
ret
fld
loopne
(bad)
(bad)
(bad)
icebp
loopne
mov
fmul
adc
loop
lods
jae
prefetcht0
adc
faddp
fdivp
cdq
mov
imul
sar
(bad)
fsub
cmp
or
arpl
pop
pop
rcr
xor
xchg
add
mov
adc
je
inc
ror
fnstsw
mov
sahf
call
fmul
sub
xchg
xor
add
lock
pushf
adc
mov
(bad)
inc
les
cmp
jl
xchg
cld
fisttp
js
cs
ror
mul
xor
push
fld
mov
shl
push
push
call
not
adc
dec
and
fs
adc
sti
out
push
sbb
call
(bad)
fistp
jne
movzx
mov
inc
mov
fstp
fstp
ins
xor
call
(bad)
pop
jl
dec
std
inc
call
xor
sbb
popf
sbb
enter
and
and
dec
gs
(bad)
fdivr
arpl
adc
add
cmp
leave
xor
inc
mov
mov
stc
jmp
lock
jl
fld
lea
mov
adc
inc
fstp
fst
dec
mov
in
pop
int
and
push
jg
xchg
sub
shl
xor
and
fld
test
into
mov
test
cdq
adc
jmp
mov
mov
or
ret
cli
cmps
ror
adc
adc
aaa
fadd
lahf
push
push
and
cmps
fild
push
push
call
and
lea
cmp
gs
add
or
hlt
adc
stc
mov
mov
inc
cmp
jle
lea
or
mov
inc
sbb
mov
call
clc
(bad)
loope
(bad)
out
push
call
mov
rcr
push
push
in
or
fucomip
jmp
mov
jl
cmp
jle
cmp
jle
iret
mov
fisub
push
call
call
cmp
into
jge
cmp
adc
fsubr
adc
push
call
hlt
cmps
iret
xor
add
inc
cmp
pop
shl
rcl
(bad)
jne
cmp
or
stos
test
mov
jne
fst
push
sbb
popa
rcr
add
shl
fdiv
sub
ret
ror
mov
mov
push
sahf
sbb
or
outs
xchg
imul
sub
repnz
add
sub
pop
cmps
packuswb
and
std
add
mov
cmps
lea
pushf
and
pop
loope
mov
xor
(bad)
and
push
call
cmp
pop
fnstenv
dec
rol
lods
jl
popa
mov
lea
fld
cli
push
jecxz
mov
xchg
add
cmp
inc
inc
aas
idiv
mov
mov
add
fdiv
js
mov
sbb
shr
sbb
jo
jo
or
fnstsw
xchg
or
cmp
mov
movs
fs
push
call
in
pushf
and
pop
popa
pop
jmp
nop
pop
test
sub
lahf
cli
(bad)
or
and
push
push
push
call
lock
fnsave
mov
cli
(bad)
std
popa
or
mov
mov
(bad)
fcomp
gs
cmp
fdiv
jmp
fmul
mov
jl
add
mov
mov
adc
inc
mov
push
loope
and
push
(bad)
sbb
mov
sbb
pop
hlt
sub
xor
movs
mov
add
ret
sbb
in
fistp
mov
inc
pop
xor
mov
ret
(bad)
pop
movmskps
js
pop
test
call
xor
cmp
push
mov
jle
mov
inc
or
sar
fcomp
add
icebp
jmp
mov
(bad)
(bad)
call
mov
sub
cmp
jg
cmp
jl
pop
pop
lea
pop
ret
fld
fsub
std
ret
and
out
les
and
cmc
mov
je
pop
shl
mov
adc
add
outs
call
add
mov
cld
xchg
cmp
jnp
lea
adc
push
pop
out
fsub
sbb
sbb
into
jne
and
icebp
xchg
sbb
pop
into
fdivr
xchg
cld
or
fmul
and
es
rcr
bound
mov
add
out
dec
call
cmp
pop
pop
cmp
jge
fs
clc
(bad)
ins
mov
push
adc
adc
cmp
jl
mov
int
cdq
jne
daa
cli
add
out
test
(bad)
inc
add
jmp
mov
dec
mov
lock
xor
jmp
movsx
lea
idiv
mov
mov
add
sar
mov
cmp
jg
mov
mov
add
add
dec
jge
add
mov
cs
pop
ret
pop
add
(bad)
push
test
setge
movsx
push
lea
mov
imul
test
jne
mov
data16
jmp
adc
pop
ret
or
test
js
shl
inc
test
(bad)
mov
sar
mov
popa
adc
adc
(bad)
(bad)
(bad)
(bad)
inc
stc
or
mov
sbb
push
mov
imul
mov
sub
sar
imul
add
or
imul
mov
sar
out
(bad)
mov
and
add
clc
push
jge
(bad)
jg
add
adc
pop
mov
mov
pop
ret
cmp
jge
cmp
jne
mov
in
push
sbb
sub
nop
pop
mov
fdiv
aaa
xor
movsx
inc
scas
cmp
je
and
push
lea
shr
inc
lea
lea
pop
add
mov
(bad)
push
loope
rcr
lds
test
cld
ror
pop
aad
cld
fcom
or
push
lds
push
sub
dec
jne
cmp
jge
fcom
sbb
inc
cmp
jl
call
cli
xchg
idiv
xor
mov
xor
sub
data16
or
or
jle
call
jg
jmp
mov
adc
jmp
leave
inc
nop
clc
dec
idiv
movsx
jmp
pop
add
dec
in
fcomp
add
call
mov
shl
outs
or
cmp
mov
jmp
neg
xor
into
jle
ror
or
add
call
stos
pop
dec
and
test
adc
sbb
push
add
call
out
push
or
ror
mov
adc
shl
sar
mov
fcomip
ja
inc
cmp
jl
inc
xor
(bad)
mov
jle
test
ret
add
cmp
jl
stos
lds
mov
mov
sub
mov
je
xlat
adc
inc
jge
scas
and
and
loopne
or
push
or
jle
adc
out
(bad)
adc
add
sbb
clc
adc
scas
rol
ss
jmp
call
add
sbb
jg
mov
jl
shl
pop
jmp
neg
rcl
and
jg
inc
push
iret
cmp
and
jo
loop
push
and
mov
sbb
add
ret
xchg
sti
xchg
xor
mov
sub
mov
fild
dec
and
jle
cmp
jge
shl
mov
inc
or
adc
sbb
sar
xchg
cmp
sbb
jge
movsx
lahf
aaa
cmc
(bad)
call
imul
sub
add
sar
mov
mov
jl
rol
jmp
lods
adc
test
shl
mov
push
rcr
add
mov
mov
std
inc
push
call
and
mov
mov
movsx
fidivr
xor
sub
sub
pusha
test
jle
xor
(bad)
jl
sbb
jl
mov
jecxz
cmp
dec
adc
test
std
jg
lods
sub
test
mov
jle
mov
push
cs
sbb
out
adc
jnp
neg
or
adc
jge
xchg
dec
mov
adc
movsx
add
push
sar
popf
push
mov
inc
push
push
sbb
inc
sbb
push
mov
outs
jg
mov
jmp
mov
popa
push
and
cmp
jl
out
push
and
mov
mov
jmp
mov
sub
jns
mov
adc
mov
inc
sar
jge
ja
jl
cmps
adc
adc
lods
jne
add
cmp
(bad)
push
jl
adc
shl
clc
jg
js
lea
retf
add
sar
cmp
jl
mov
sub
mov
and
jg
or
cmp
jle
xor
cmp
int3
dec
jle
add
jns
cmp
jl
lea
(bad)
jg
dec
leave
mov
sub
mov
add
cmp
mov
mov
jge
sub
imul
and
push
pop
sub
mov
fld
nop
rcr
(bad)
(bad)
jg
or
or
inc
adc
mov
xor
mov
push
mov
push
jge
add
mov
test
fist
push
mov
shl
mov
or
fcmovb
(bad)
(bad)
jg
mov
mov
add
mov
cmp
jbe
inc
inc
cmp
jb
(bad)
cmp
sbb
ror
or
sar
mov
add
pop
ret
jne
mov
inc
fs
cs
loopne
sub
push
mov
mov
push
inc
dec
and
mov
mov
jg
jmp
push
mov
push
movzx
mul
mov
mov
add
mov
add
dec
cmp
(bad)
cli
or
adc
push
movzx
mov
mov
shr
out
mov
cmps
and
inc
cmp
jb
or
mov
std
mov
scas
clc
mov
pop
pop
and
mov
rcr
push
cld
loopne
or
enter
or
pop
add
ret
inc
mov
and
fsub
jne
xchg
adc
ror
rcr
pop
mov
push
xor
ret
or
(bad)
jmp
int3
push
mov
and
(bad)
cmp
mov
jle
push
mov
sar
cmp
jle
mov
add
fld
mov
fstp
mov
fld
mov
fstp
mov
out
clc
pop
clc
cmp
jl
lahf
cmp
jle
sub
shl
jge
cmp
test
enter
mov
dec
and
sub
out
pop
test
push
shl
push
mov
mov
xor
mov
fmul
mov
lea
shr
inc
mov
idiv
lea
lea
fld
add
fadd
add
dec
fld
fsub
add
jnp
pop
adc
inc
rcl
pusha
pushf
fstp
fxch
fstp
fstp
std
(bad)
jmp
inc
lods
fadd
fld
fsub
fld
fadd
sub
int
lods
fstp
pop
movs
fstp
mov
fld
fadd
fld
stc
leave
(bad)
fsub
add
mov
(bad)
(bad)
push
mov
inc
int3
fld
fsub
fld
fadd
icebp
(bad)
cld
in
int3
fstp
(bad)
fstp
mov
jne
dec
sbb
test
jle
retf
adc
inc
adc
std
(bad)
clc
fld
fsub
add
mov
adc
lock
mov
hlt
jne
mov
sar
cmp
mov
jl
push
or
lahf
pop
fcomip
fisttp
add
fcomp
stc
std
add
fld
or
les
sub
add
fstp
lea
in
pop
pop
mov
rcr
aam
les
arpl
aam
sub
out
jg
ret
push
aam
pop
and
fadd
fld
fsub
add
inc
in
mov
fsubr
fcomp
pop
in
mov
fld
fadd
fld
fadd
cwde
fsub
sub
lahf
hlt
fstp
loopne
pop
hlt
mov
clc
fadd
mov
scas
sbb
or
inc
or
mov
or
pop
or
fldenv
and
cld
fld
fadd
in
neg
out
addr16
sbb
fsub
ss
fsubr
neg
jbe
fmul
cwde
dec
push
mov
lock
mov
inc
cld
fld
out
in
fsub
pop
call
cld
fstp
repz
cld
mov
jne
add
or
push
in
or
js
(bad)
aas
popa
mov
imul
pushf
sar
mov
xor
cmp
cmp
inc
pop
lea
cli
fadd
scas
mov
add
sub
fild
loope
xor
arpl
jg
mov
sar
iret
adc
loope
sub
fimul
jne
jl
faddp
out
and
sti
dec
mov
mov
sub
lea
shr
inc
xor
and
add
adc
cmp
add
xchg
sar
or
ret
add
faddp
daa
cld
fistp
xlat
adc
fld
fmul
add
fsubrp
sbb
push
aas
dec
fs
sti
cmp
inc
clc
fld
popa
ret
mov
fsub
mov
fstp
cmp
sub
inc
xor
push
add
or
push
xchg
add
ret
cmps
fsub
js
push
fstp
int3
add
into
jmp
mov
push
gs
inc
hlt
rcr
jle
jmp
hlt
pop
clc
sbb
cmp
mov
jne
xor
cwde
loop
mov
psubsb
lock
fisttp
shl
sub
xchg
adc
movs
and
push
dec
rcr
or
pop
push
add
and
test
adc
fbld
jne
mov
adc
xor
sar
in
in
sbb
mov
cmp
ret
push
sbb
pusha
pop
leave
cmp
cdq
adc
gs
(bad)
push
mov
out
fs
inc
add
sbb
xor
jo
test
repz
xchg
clc
adc
adc
jo
sub
aad
pushf
jnp
dec
cmps
(bad)
mov
sahf
jmp
fsubr
xlat
inc
fiadd
jne
adc
mov
sahf
mul
ror
jne
cmps
cli
push
ins
bound
shl
test
sar
sar
dec
push
sub
sub
test
(bad)
dec
and
add
xor
xchg
js
add
lds
fdiv
cmp
mov
inc
dec
push
mov
sar
mov
sar
dec
xor
cmp
dec
jl
and
push
call
push
fstp
mov
js
lea
sub
push
mov
std
les
xor
mov
xor
cmp
or
jg
jne
sbb
sub
jle
lea
lea
sti
fwait
test
push
rol
sub
data16
pusha
dec
mov
sbb
pop
sbb
leave
or
stos
and
inc
adc
mov
rcr
lea
fld
cmc
fidivr
rcr
add
sbb
fxch
fmul
add
mov
pop
scas
add
and
xor
mov
dec
and
xor
xor
(bad)
cld
fmul
leave
add
xor
fld
mov
adc
inc
adc
fld
ja
fld
push
push
fincstp
mov
mov
dec
xor
cld
ja
fsubr
xor
jne
and
frstor
outs
jne
ins
push
das
sub
ja
pusha
sbb
add
inc
hlt
or
push
imul
sbb
cmp
adc
xlat
(bad)
scas
adc
int3
mov
fld
adc
int3
adc
ja
popa
outs
pop
add
jnp
or
sbb
jae
or
sbb
in
jbe
or
jle
pop
clc
or
(bad)
mov
inc
imul
fld
out
js
ins
add
jnp
push
in
in
imul
adc
inc
test
add
ja
xchg
jg
ja
adc
sti
sub
dec
arpl
add
(bad)
(bad)
out
mov
and
rol
hlt
add
add
sub
add
xor
or
jmp
std
or
(bad)
loope
ror
sub
iret
js
mov
rol
loop
mov
or
add
mov
xchg
fld
inc
fld
dec
jae
std
push
nop
sub
fld
cmps
xchg
push
add
sahf
fwait
dec
pop
jo
sti
fstp
jmp
cmp
fxch
sub
xor
push
fnstsw
fdiv
loopne
fcomp
xchg
jl
mov
dec
dec
mov
push
dec
call
dec
push
push
call
dec
repz
(bad)
fld
scas
add
fld
dec
fld
out
push
lea
cmp
fld
mov
pcmpeqd
push
adc
fchs
fprem
add
adc
retf
and
ss
(bad)
pop
add
jl
jb
sub
lea
mov
sbb
leave
hlt
(bad)
inc
add
fld
mov
fld
sub
fld
mov
(bad)
or
mov
sti
adc
or
lock
rcr
jne
jb
cmp
push
ja
pop
std
fisttp
sahf
outs
fld
fldcw
and
repnz
sahf
cld
sub
ins
retf
ds
outs
inc
hlt
fldpi
(bad)
push
fld
mov
cmp
inc
gs
daa
daa
jnp
hlt
popa
pop
or
fld
mov
cdq
mov
pop
out
ja
pop
clc
mov
fld
dec
push
fld
mov
or
(bad)
out
jle
sub
fld
fisttp
sub
fld
add
fmul
add
pop
add
pop
fsub
fld
enter
hlt
push
out
std
into
jne
in
ret
call
inc
shr
sar
mov
rol
sbb
pop
mov
fld
inc
add
(bad)
std
cmp
sbb
outs
sbb
jl
jge
(bad)
cmp
jge
ret
(bad)
jecxz
adc
and
or
fld
mov
fld
sub
aaa
fsubr
inc
mov
pop
add
or
fld
into
mov
sbb
push
and
xchg
pop
xchg
leave
or
sbb
xor
add
jb
loopne
(bad)
dec
xchg
enter
rol
cli
add
xor
lea
out
and
jo
and
or
xor
fwait
and
lock
ja
jl
cmp
pop
or
xor
fcomip
push
inc
push
ins
lea
sub
lea
icebp
jg
sti
sub
inc
push
sbb
dec
mov
pop
push
lea
cmp
cmp
jne
(bad)
jne
inc
adc
pop
sub
or
rcr
pop
adc
sub
imul
pop
sbb
push
pop
test
fld
adc
push
jmp
lahf
xor
lock
mov
fld
and
inc
add
add
mov
add
hlt
std
ror
mov
mov
test
add
sub
xor
aam
fnstsw
adc
leave
cmp
adc
jb
hlt
mov
(bad)
inc
in
jb
jno
pop
add
popf
jmp
and
fsubr
push
je
mov
xchg
cmp
sti
pop
mov
or
sub
fld
xchg
in
dec
sbb
sub
retf
and
ja
and
dec
sbb
pop
mov
push
nop
sbb
inc
in
ja
inc
xor
or
or
jbe
mov
ror
cmp
and
sbb
lea
sbb
jmp
sub
test
popf
mov
es
fld
test
lods
iret
cmp
outs
lods
pop
sti
adc
outs
ja
add
dec
(bad)
inc
and
fsubp
fsubr
pop
sbb
sbb
mov
or
dec
adc
mov
sub
aas
dec
and
xor
in
loop
and
lahf
hlt
sbb
sub
(bad)
loopne
loopne
inc
scas
scas
test
std
or
mov
clc
sahf
inc
in
std
lock
mov
retf
mov
call
fdiv
sbb
call
ins
and
adc
in
add
ss
jmp
sub
sub
call
and
scas
aas
add
fstp
pop
std
xor
ins
and
mov
mov
sub
pop
and
add
sub
sub
sub
add
add
mov
mov
push
jno
adc
(bad)
push
or
popf
jmp
and
push
std
cmp
jge
loopne
push
push
push
ins
mov
(bad)
sub
sub
mov
std
inc
push
ficomp
clc
cmovs
jne
ja
dec
mov
sub
inc
psubb
lea
ds
push
cmp
jmp
cmps
jmp
pusha
sbb
xor
ja
call
dec
or
lds
pop
jns
std
aas
cmp
sub
fld
cmps
adc
mov
fld
mov
jle
and
jnp
dec
rcr
inc
wbinvd
and
jmp
pop
sbb
sar
out
xor
pop
ds
sar
mov
fwait
mov
dec
inc
and
(bad)
mov
movups
inc
test
dec
and
push
push
push
call
add
gs
mov
adc
mov
jecxz
fimul
sti
lahf
mov
push
push
push
call
and
dec
test
rcl
cli
mov
sar
dec
cmp
lea
mov
sub
cmp
sub
cmp
mov
mov
sti
aaa
lock
test
lea
or
prefetch
test
inc
sub
push
fadd
sub
inc
and
scas
jmp
add
push
xchg
cmp
sub
xor
and
adc
cmp
xor
jmp
and
xor
mov
jbe
fld
mov
outs
ins
and
mov
inc
scas
fst
mov
rcr
or
clc
ss
mov
inc
popf
or
(bad)
cli
gs
xlat
mov
push
cmp
pop
sbb
jge
retf
ror
jmp
pop
dec
jge
fld
sub
sahf
sahf
js
mov
push
dec
sahf
pop
fnsave
shr
mov
fnstcw
mov
enter
sbb
(bad)
jmp
push
sbb
and
push
sbb
sbb
(bad)
mov
sub
sub
out
pop
cs
sbb
js
inc
loopne
clc
mov
fld
adc
inc
rol
mov
fdivrp
jge
loopne
adc
pop
add
loopne
ss
test
mov
popa
mov
out
sbb
fcomp
dec
stc
xchg
add
jnp
jae
repnz
inc
cld
pop
sub
out
or
pop
add
push
fld
jb
or
push
shl
ror
lock
mov
xor
cmp
fld
daa
adc
sar
test
pop
cdq
xchg
sahf
aad
pop
cs
add
fmul
out
mov
stos
xlat
lahf
add
inc
and
cmp
jg
leave
add
fld
sub
je
pop
jmp
add
addr16
xor
adc
mov
xor
cmp
cmp
dec
add
pop
(bad)
fstp
jl
jb
and
mov
cmp
cmp
jge
sar
lea
adc
push
sub
xchg
or
out
cmps
inc
mov
lea
sub
cmps
push
sub
in
clc
jo
mov
adc
pop
out
out
cmp
mov
fchs
or
imul
repz
add
fstp
jno
xor
pop
sub
adc
sahf
shl
pop
ins
inc
xor
fwait
ds
inc
das
cld
dec
mov
add
pop
clc
lods
pop
adc
mov
jno
dec
sbb
in
push
push
call
scas
mov
xor
cmp
je
jo
(bad)
jg
adc
adc
adc
or
xchg
imul
mov
mov
ffreep
ja
push
arpl
mov
push
mov
call
repnz
add
call
pop
mov
pop
mov
pop
pop
or
or
xchg
test
add
leave
jne
sbb
pop
test
je
test
je
ror
pop
mov
mov
mov
test
mov
je
test
je
loop
lea
push
test
push
dec
or
push
or
sti
(bad)
dec
adc
dec
and
mov
push
mov
or
shl
push
je
call
xor
call
push
icebp
or
call
out
or
inc
dec
cmp
lds
jbe
sub
adc
popa
lahf
aas
push
push
inc
call
adc
add
mov
or
outs
js
or
sub
ds
sbb
dec
jns
and
mov
and
xchg
push
inc
sub
adc
out
push
je
pop
sbb
sbb
or
call
lods
call
push
sub
mov
jp
or
or
push
sbb
push
stos
in
pusha
loopne
sar
mov
test
je
cmp
scas
push
and
mov
or
sbb
mov
sbb
push
repnz
add
or
push
and
fidiv
icebp
dec
adc
call
in
(bad)
jp
xor
ret
call
adc
adc
pop
call
lahf
out
jbe
jl
imul
adc
leave
mov
sbb
mov
add
xor
test
push
vmovss
add
and
fsubr
jnp
pop
xor
lahf
xchg
popf
call
aaa
adc
pusha
pop
out
data16
xchg
outs
js
inc
or
aaa
ja
ret
call
stos
popa
or
add
mov
jle
cmp
mov
add
invd
mov
adc
call
je
mov
inc
or
mov
push
push
call
in
mov
mov
mov
adc
dec
mov
and
mov
and
adc
icebp
inc
push
call
push
mov
dec
or
pop
adc
outs
or
push
pusha
or
mov
push
lea
push
sbb
fcomp
lea
push
out
mov
fst
les
test
jne
sub
(bad)
and
mov
adc
or
add
dec
and
mov
cmp
je
push
push
call
jp
les
pop
fcmovnbe
ins
loopne
adc
sub
sbb
aas
push
js
div
adc
adc
push
inc
inc
add
adc
xor
jae
loopne
and
imul
push
call
add
inc
adc
dec
or
into
fmul
adc
inc
lods
cmp
push
lds
mov
arpl
aaa
add
xor
dec
loope
sub
push
je
dec
inc
mov
ffreep
out
loopne
push
adc
jle
push
push
add
sub
cld
daa
sti
inc
add
jmp
adc
push
push
call
adc
les
and
rcl
add
dec
adc
cmp
pop
sub
pusha
or
push
adc
sti
mov
cmp
push
adc
pop
jne
ret
in
adc
add
cmp
je
jge
mov
cmp
je
push
call
test
adc
push
call
mov
adc
(bad)
retf
mov
adc
inc
push
dec
mov
(bad)
and
call
mov
and
push
jl
ja
scas
sbb
or
pop
ret
mov
xchg
sbb
adc
cmp
pop
call
or
mov
inc
mov
inc
or
dec
cmp
mov
or
nop/reserved
sbb
outs
add
adc
mov
jg
mov
call
push
adc
pop
lea
std
mov
nop
call
push
lea
jg
movups
call
adc
loopne
aaa
shl
adc
push
push
push
push
je
push
icebp
jg
push
retf
loopne
repnz
add
shl
mov
jmp
icebp
sar
or
std
lea
mov
and
cdq
sub
add
jno
aam
sub
mov
xor
cwde
add
ja
cmp
sub
and
fist
sar
sub
dec
test
push
adc
mov
(bad)
lds
xor
cmp
xor
xlat
std
ffree
dec
or
shr
inc
or
pop
inc
pop
xor
jl
sbb
jmp
pop
xchg
mov
shr
push
mov
inc
movsx
(bad)
mov
mov
add
pusha
mov
add
mov
add
fistp
mov
adc
add
test
je
test
je
lock
push
test
je
and
add
out
div
test
je
push
and
push
inc
lock
fistp
cld
lldt
add
sbb
(bad)
dec
sar
inc
jmp
or
xchg
aas
mov
inc
std
push
mov
add
inc
add
sti
and
mov
or
iret
xor
mov
movsx
ja
mov
xchg
push
mov
adc
mov
fwait
call
jge
pusha
cmp
add
test
test
mov
movs
ds
or
mov
inc
mov
add
(bad)
adc
xlat
add
out
add
sbb
push
mov
movs
cmp
or
mov
adc
sub
aas
in
or
add
add
mov
inc
xor
adc
test
mov
xor
jecxz
jbe
or
jb
fstp
add
call
sub
idiv
lea
lea
in
xbegin
xor
push
xor
add
imul
lock
(bad)
sahf
adc
mov
(bad)
push
jmp
inc
mov
add
inc
retf
dec
xchg
mov
jne
jmp
ss
pop
lods
test
je
dec
mov
xor
ret
cmps
cmp
or
mov
push
add
sbb
adc
jae
adc
add
lock
std
sbb
in
xor
test
retf
mov
mov
popa
cmp
(bad)
lea
aas
pop
rol
jmp
lea
inc
ss
mov
scas
(bad)
adc
retf
mov
adc
ror
pop
add
js
mov
mov
test
mov
push
je
fidiv
out
loopne
mov
fdivrp
sub
neg
jmp
mov
lea
ja
call
fidiv
loop
ret
out
push
(bad)
shl
(bad)
ins
adc
dec
lea
shl
mov
mov
and
sub
mov
ror
and
les
mov
jecxz
cmp
adc
mov
inc
xor
add
sub
pop
(bad)
pop
jmp
add
and
scas
add
ds
gs
sub
and
mov
stos
pushf
add
icebp
jb
aaa
adc
sbb
and
test
shr
aas
cmp
mov
cmps
and
xchg
hlt
inc
dec
aas
cmp
or
scas
dec
sub
or
shr
imul
cmc
adc
test
xchg
sbb
test
inc
dec
lods
xor
cmps
icebp
add
pop
add
sub
mov
pop
adc
cmps
rcr
cmps
jo
xor
pop
adc
stos
push
cwde
lea
les
inc
push
mov
mov
jo
xchg
int3
and
and
or
loop
movs
scas
push
mov
add
std
std
and
add
xchg
and
mov
js
ins
and
fwait
or
push
js
fidivr
lea
icebp
(bad)
cmp
add
mov
mov
and
sub
scas
and
lds
cli
adc
sub
xor
jp
mov
jge
dec
lock
adc
mov
add
sahf
ins
and
cmp
or
fisttp
ret
pop
dec
aas
adc
inc
imul
mov
mov
mov
dec
cmovo
jg
add
inc
jae
shr
add
cli
add
and
fbld
ret
jmp
or
dec
dec
mov
add
jns
sbb
fst
ret
pop
pop
adc
add
movzx
xor
cmp
aad
ins
and
fwait
clc
adc
inc
inc
xlat
cmp
test
rol
je
pop
and
test
add
nop
nop
(bad)
movs
sub
fcom
dec
add
add
rcl
das
lea
mov
test
call
xor
sub
sub
adc
enter
sub
mov
out
mov
inc
add
dec
adc
add
add
dec
mov
mov
cmp
pop
cmps
mov
sub
clc
jp
add
scas
mov
inc
nop
xor
(bad)
cs
mov
cli
mov
and
sbb
scas
and
aad
daa
xor
inc
sbb
fwait
dec
popf
dec
and
or
test
or
jg
mov
add
jb
setl
jg
inc
ret
dec
and
mov
call
and
inc
pop
or
scas
fadd
adc
aas
iret
fidivr
push
cld
mov
shl
sub
rol
aaa
sar
pusha
lea
add
or
mov
retf
rcr
dec
and
mov
lea
mov
ret
sub
push
popa
loop
sub
imul
aas
nop
pop
and
xchg
dec
(bad)
sbb
add
xor
jle
mov
out
loopne
addr16
mov
sbb
jle
dec
(bad)
sbb
push
xchg
ins
loopne
movzx
nop
inc
push
mov
in
nop
adc
leave
je
fild
mov
mov
add
inc
and
loop
ret
mov
adc
les
add
mov
jmp
jmp
mov
shr
movzx
cmps
or
jae
mov
shl
jae
adc
outs
add
or
lds
rcl
or
loop
add
mov
and
xor
adc
dec
xor
loop
or
mov
jmp
inc
icebp
jg
add
fisttp
ret
add
into
or
cmp
cmova
mov
dec
inc
rol
mov
clc
int3
lea
xchg
jns
lock
sbb
call
movzx
mov
shr
sar
ret
cld
inc
(bad)
std
rol
loop
movzx
cmp
adc
(bad)
std
retf
and
xor
(bad)
mov
enter
ror
jecxz
out
mov
pusha
pop
inc
add
add
fadd
cli
mov
jmp
or
test
push
push
(bad)
sbb
mov
inc
adc
ret
aad
pop
mov
pop
stos
add
sbb
adc
inc
pop
sub
adc
out
inc
inc
sbb
inc
push
push
arpl
adc
test
xchg
inc
and
aas
xchg
jmp
xchg
in
popa
pop
mov
movs
addr16
add
and
pop
adc
bound
lock
add
pop
or
dec
lea
lea
mov
inc
xor
pop
push
and
ins
inc
add
sub
pop
pusha
clc
fild
or
sub
add
add
sub
or
inc
sub
sbb
sub
dec
enter
xor
fistp
xor
cmp
mov
mov
sar
sbb
mov
stc
jmp
and
sbb
inc
je
cmp
aas
adc
js
shr
inc
pop
push
and
movzx
push
adc
mov
add
test
mov
adc
test
lahf
cdq
xor
clc
retf
lds
or
pop
or
cmp
lods
push
jecxz
aaa
popa
pop
or
jne
je
xor
mov
add
sti
jo
pop
cli
inc
and
xchg
pop
dec
mov
dec
mov
mov
mov
loopne
leave
push
pop
add
scas
ret
inc
pop
or
pop
xor
cmp
mov
or
or
push
add
lea
add
pop
dec
mov
push
pop
dec
pop
or
pop
mov
mov
clc
pop
add
ret
push
jl
mov
pop
fild
mov
imul
loopne
add
and
sti
adc
retf
adc
cli
cmps
aas
xor
cmp
sbb
(bad)
test
dec
and
push
and
sar
add
shl
add
loopne
cli
rol
jmp
push
clc
fwait
or
sub
test
inc
stos
xor
mov
jmp
inc
add
mov
in
or
adc
aas
cli
jp
jmp
inc
popa
aad
and
xchg
retf
hlt
or
fdivr
fist
std
fdivr
mov
xor
add
push
add
xor
sbb
mov
inc
shl
inc
pop
dec
sbb
icebp
jmp
and
(bad)
pop
mov
add
icebp
sbb
rcr
movs
jnp
xchg
mov
and
sub
inc
mov
xchg
cmp
jo
mov
clc
or
mov
xchg
inc
nop
add
test
clc
sbb
and
add
mov
dec
jne
dec
ret
outs
xchg
xchg
test
xlat
fcomip
fistp
mov
imul
push
sar
add
mov
rcr
add
mov
sar
imul
dec
and
ror
sub
rol
fdiv
ror
pop
push
test
cmp
sbb
ror
mov
lds
and
xchg
test
dec
outs
or
add
cmp
retf
add
jp
jmp
fucom
inc
sbb
mov
les
ftst
jl
adc
pusha
ins
push
inc
add
add
loop
rcl
sar
jb
xchg
mov
cmp
add
dec
or
mov
add
jp
sub
inc
or
out
mov
loopne
(bad)
push
enter
sbb
(bad)
call
and
icebp
mov
add
movsx
mov
and
loope
mov
popa
pop
cld
jg
mov
mov
nop
mov
js
xlat
lea
pusha
pop
ror
test
sbb
and
pusha
or
(bad)
jmp
test
lock
inc
imul
add
movzx
ins
and
sbb
mov
jnp
mov
stc
jmp
(bad)
mov
xor
or
out
xchg
adc
rol
xchg
add
jmp
hlt
and
dec
and
add
add
push
jne
mov
out
pop
inc
cmps
jmp
or
mov
pop
inc
inc
outs
test
aam
sub
xor
retf
mov
xchg
mov
cmp
ret
and
cmp
cmp
cmp
test
gs
test
int
lods
mov
aas
cmp
or
add
stos
mov
mov
add
std
(bad)
mov
and
shr
adc
in
push
and
jnp
cld
out
push
xor
call
or
or
cmp
push
rcr
daa
hlt
add
add
push
and
and
pop
push
or
andnps
(bad)
mov
and
movzx
lea
pop
fcom
and
mov
add
and
xchg
xchg
pop
lea
ret
js
xor
and
or
or
xor
add
mov
mov
push
pop
mov
and
loopne
stos
jmp
xadd
lods
aad
sub
push
loopne
or
jne
dec
out
cwde
jno
push
arpl
adc
(bad)
mov
pop
(bad)
in
mov
test
jmp
shr
std
test
out
adc
out
mov
xlat
or
adc
dec
enter
pop
xor
aas
jne
xor
stc
adc
enter
xor
mov
add
sbb
fimul
ror
jle
and
or
fdivr
dec
pop
sbb
movs
mov
mov
add
and
add
fadd
add
das
and
sbb
fadd
add
ret
sub
or
std
test
add
dec
ds
mov
sub
and
xchg
inc
shl
out
rcl
dec
call
call
add
adc
int
dec
dec
jg
out
xor
push
jne
mov
shr
or
xor
cld
daa
xadd
sar
imul
or
xchg
test
nop
and
scas
mov
out
mov
push
lods
mov
xor
inc
call
add
into
clc
mov
fs
dec
iret
add
out
in
out
mov
shr
mov
add
pop
mov
pop
ror
and
add
or
call
out
push
sbb
sar
imul
add
icebp
das
add
lds
mov
dec
sbb
lods
sbb
push
mov
xchg
or
cmc
lea
mov
int3
int3
sub
pusha
mov
std
adc
push
mov
push
mov
mov
fiadd
adc
or
or
adc
and
je
xor
inc
dec
or
scas
iret
add
neg
adc
inc
lea
sub
mov
pop
sub
aas
adc
dec
xor
or
mov
cmp
jg
adc
je
mov
shr
xor
dec
call
jmp
ja
push
add
add
xor
xor
xor
test
in
sbb
prefetchnta
(bad)
ja
adc
shl
xor
test
sub
(bad)
or
add
pusha
or
add
adc
addr16
pop
mov
and
out
hlt
into
in
mov
and
mov
fsubr
xchg
and
adc
and
mov
cli
(bad)
push
and
mov
jne
ficom
lea
sub
int3
sub
inc
(bad)
fistp
mov
jmp
aaa
inc
dec
sub
mov
into
iret
mov
movzx
pop
inc
and
fild
mov
ss
movzx
sbb
in
cli
dec
push
xor
add
or
xchg
adc
ins
sub
add
call
xor
clc
or
popf
cmp
out
iret
out
cmp
add
jae
sub
dec
jg
dec
mov
inc
and
mov
test
inc
push
adc
ins
ss
adc
sti
scas
not
add
mov
cmp
(bad)
mov
std
add
movzx
mov
out
and
movzx
pushf
mov
adc
dec
sbb
call
sar
jecxz
and
das
(bad)
push
add
mov
jge
add
test
xor
sbb
add
cld
or
cli
movzx
adc
into
loopne
iret
adc
or
sbb
or
adc
idiv
mov
ret
adc
and
or
out
out
mov
cld
add
add
add
push
inc
pop
adc
popa
aas
rcr
sti
js
mov
add
mov
ja
cwde
(bad)
xchg
or
xor
jmp
mov
add
push
pop
jmp
add
sar
jnp
xchg
loope
ret
dec
adc
(bad)
lds
bound
xor
or
inc
outs
idiv
dec
or
ret
dec
(bad)
add
(bad)
daa
jae
mov
ret
push
add
cmp
push
cmps
fsub
add
inc
xchg
imul
or
dec
inc
sbb
xor
jmp
fwait
pop
shr
adc
sti
add
add
cmp
add
repz
js
sbb
cmp
sub
repz
lock
ja
shl
and
outs
or
(bad)
test
lock
mov
jo
test
aaa
inc
or
adc
pop
addr16
je
out
adc
jg
sbb
or
add
add
add
cmp
pop
add
sahf
in
xlat
add
push
and
jg
inc
xchg
add
pop
and
jae
sbb
or
sub
inc
dec
cmp
push
adc
push
cmp
pop
mov
push
mov
sub
pop
jmp
sub
fwait
push
add
cs
sub
jo
xor
add
icebp
je
push
jmp
adc
push
call
jnp
sbb
pop
cmp
xlat
int3
xor
mov
push
cmp
xor
movzx
mov
jmp
dec
sub
out
not
adc
pop
test
dec
pop
adc
nop
movzx
test
retf
sub
cmp
cmps
and
and
or
cmp
inc
test
xchg
es
cwde
push
retf
es
(bad)
into
cmps
es
ins
test
ds
jb
popa
test
xchg
inc
and
icebp
jmp
adc
dec
sub
push
and
leave
in
jp
xchg
push
adc
(bad)
out
cli
push
and
push
add
mov
add
dec
xor
ret
add
lds
add
cmp
jb
xor
(bad)
loopne
add
xlat
jbe
mov
loopne
mov
inc
xor
add
cld
adc
cmp
das
add
fnstenv
sbb
in
adc
or
push
add
(bad)
js
adc
push
movzx
(bad)
hlt
aaa
mov
fwait
push
inc
les
mov
dec
out
ror
or
mov
xchg
cs
mov
sbb
add
mov
movzx
xor
mov
push
ret
xor
mov
or
dec
add
lock
dec
add
out
aam
mov
mov
jbe
inc
add
pop
jno
mov
enter
mov
xchg
pop
or
push
add
mov
push
(bad)
es
lock
rol
sar
cdq
cmp
(bad)
xor
iret
sub
mov
aaa
arpl
add
add
add
lock
shr
mov
int
mov
jo
push
cmp
pop
mov
or
clc
cmp
das
or
add
mov
pusha
xchg
(bad)
jae
sahf
inc
add
shl
push
xor
add
dec
cdq
and
rcr
or
sub
mov
pusha
add
mov
ss
das
aaa
sub
xchg
std
or
mov
dec
add
mov
sub
pop
test
popa
imul
lldt
or
mov
push
sbb
stc
mov
adc
sar
lahf
mov
xor
inc
jp
mov
jno
mov
outs
pop
cmp
or
cmp
adc
lds
montmul
cmps
add
jnp
lea
mov
aaa
cmc
call
les
dec
add
mov
mov
shr
mov
mov
fistp
mov
sbb
dec
adc
and
mov
mov
mov
mov
or
mov
add
push
lea
and
std
sbb
ja
shr
mov
dec
and
xor
rol
jo
add
(bad)
rcl
out
mov
jmp
sub
xchg
popa
push
shl
add
push
dec
jno
test
lahf
xor
and
pushf
push
jne
into
xchg
std
cmp
mov
jae
add
test
jmp
jbe
lea
dec
imul
pop
ret
addr16
cmps
popf
movzx
inc
cli
xchg
out
je
add
push
(bad)
sub
push
sbb
in
je
add
add
xchg
push
(bad)
sti
dec
leave
std
dec
mov
cmp
sub
int3
hlt
aaa
jno
sti
mov
movzx
push
std
jmp
cli
or
xor
xor
stc
inc
mov
mov
data16
rcr
stc
xor
adc
test
and
xor
mov
cmp
and
cmp
jae
fldenv
inc
inc
and
shufps
or
add
pop
mov
add
iret
cmp
mov
pushf
call
call
lods
(bad)
fadd
mov
pop
xor
out
shr
mov
sar
xchg
cmp
into
ja
out
mov
ror
cmp
dec
pop
dec
mov
iret
test
dec
mov
and
adc
ins
pop
add
and
and
clc
mov
dec
and
mov
mov
mov
or
dec
sub
adc
fdiv
add
cmp
jecxz
out
jb
jne
lea
stos
into
sbb
scas
ret
sbb
sbb
xor
jae
mov
jae
out
daa
mov
sub
addr16
push
std
mov
mov
sub
mov
(bad)
neg
shl
mov
sub
xor
imul
ins
pop
sub
or
lahf
adc
ins
dec
mov
or
sub
lea
jmp
mov
mov
lea
mov
adc
xor
clc
ja
sbb
out
mov
mov
jl
mov
adc
lea
mov
daa
xlat
mov
adc
xor
add
aad
dec
call
jne
add
add
cmp
or
sub
cmp
outs
pop
add
std
ret
int3
int3
sub
xlat
pop
mov
sub
or
pusha
mov
shl
jbe
adc
dec
add
jg
mov
fsubp
and
jnp
mov
dec
scas
ret
neg
pop
mov
mov
out
push
mov
mov
mov
sub
xchg
push
push
pusha
dec
lea
mov
mov
inc
movs
mov
mov
mov
add
sar
je
add
daa
and
sub
and
daa
mov
mov
mov
test
dec
or
jne
loope
pop
adc
inc
mov
je
lea
rol
pop
es
mov
xlat
aaa
das
cmp
mov
or
sbb
mov
pop
pop
(bad)
aam
sbb
adc
in
ret
push
adc
cmp
cdq
or
jp
dec
es
inc
pop
inc
cmp
sub
shr
movzx
sub
mov
in
popf
scas
mov
push
pop
pop
push
sbb
pop
scas
pop
call
add
sub
adc
xor
or
xor
push
je
neg
mov
pop
loop
and
and
push
inc
cmp
dec
push
push
or
push
and
stos
add
or
ja
push
arpl
mov
ret
sbb
repnz
inc
pop
scas
pusha
fwait
or
les
mov
lods
cwde
jae
add
pop
das
or
ins
cmp
sti
mov
lds
or
jnp
cmp
inc
jb
and
out
jae
cmps
sbb
sub
shl
sub
mov
xor
add
std
pop
mov
adc
sub
shl
xor
add
ret
mov
xor
cmp
cmp
mov
xor
fadd
jae
jo
lea
add
cmps
mov
adc
lock
and
and
sar
add
add
inc
pop
xchg
sub
adc
adc
cs
cmc
ins
jmp
pop
push
sbb
sbb
jno
xchg
pop
pusha
ins
or
xlat
aam
das
fistp
xchg
add
jle
jmp
inc
sub
and
push
sub
add
jge
(bad)
out
push
sbb
inc
cmp
mov
mov
cmps
sbb
xchg
jno
fadd
bound
xor
mov
cmps
pop
add
mov
or
mov
inc
mov
or
inc
mov
ins
jo
inc
adc
mov
out
(bad)
jb
mov
adc
sub
inc
lock
add
push
xor
enter
push
xchg
sbb
inc
and
jne
sub
jmp
push
and
jae
jae
add
mov
add
data16
inc
cmp
rcl
jmp
mov
jo
push
leave
sub
add
and
mov
call
bound
push
xchg
shl
push
add
push
mov
js
mov
jbe
push
or
xor
jne
add
pop
sub
sub
mov
sbb
and
mov
inc
and
add
add
and
mov
call
mov
call
test
and
sbb
pop
xor
retf
fdiv
jo
adc
push
adc
cmp
mov
push
add
push
xlat
cmp
loop
rcr
xor
rcl
lods
ss
xor
dec
adc
mov
mov
sahf
add
mov
mov
iret
push
je
popa
cld
push
dec
cmp
jae
pop
std
fucomip
adc
inc
sub
lea
mov
pusha
dec
mov
push
or
mov
jo
jbe
mov
push
push
pusha
mov
mov
mov
mov
mov
lgs
clc
outs
pop
add
cmp
mov
fisttp
fiadd
cdq
adc
adc
add
into
adc
in
loopne
stos
push
ja
call
shr
rcr
push
mov
aas
je
arpl
dec
mov
neg
shl
sub
adc
mov
sub
adc
movs
push
sbb
pusha
jmp
jmp
test
jbe
add
retf
sub
sub
push
lock
std
adc
push
dec
pop
(bad)
mov
cmp
lea
push
push
shr
mov
mov
es
jmp
dec
or
ins
mov
mov
int3
cmp
jb
pop
xor
and
mov
and
add
push
dec
pop
push
lahf
push
and
push
jne
cmovo
std
addr16
add
push
push
xor
lea
and
(bad)
fistp
add
add
call
cmp
jge
or
mov
jmp
cmp
dec
leave
inc
add
sub
enter
call
loopne
cld
mov
shl
or
mov
lds
sbb
aas
cwde
pop
pop
ret
int3
push
push
stos
pop
add
stc
mov
outs
loop
push
cmp
ret
adc
push
out
outs
stos
adc
jmp
cmp
jle
push
fdivr
cdq
adc
add
or
add
cmps
mov
fld
mov
jl
dec
shl
(bad)
mov
call
mov
jo
or
fmul
and
cmp
mov
call
ins
push
and
and
call
(bad)
lock
add
or
and
and
jo
or
ins
pop
pusha
push
loopne
pop
push
sbb
push
fld
pop
call
fld
arpl
mov
fsub
mov
sbb
fs
mov
mov
mov
das
xor
cwde
sbb
xor
and
jg
nop
sbb
int3
xchg
mov
push
xor
fmul
addr16
dec
ins
adc
hlt
fsub
sub
sbb
out
mov
clc
fist
test
add
call
jmp
test
les
xchg
(bad)
dec
jge
lea
call
push
mov
imul
add
imul
add
inc
(bad)
jmp
add
jmp
stc
jbe
mov
ins
sub
ret
push
test
mov
adc
icebp
sub
js
mov
shr
and
mov
push
mov
pop
mov
enter
adc
(bad)
inc
mov
shr
mov
and
pop
add
pop
mov
pop
ret
mov
into
jne
mov
add
and
xor
cmp
pop
shr
add
rcr
dec
or
xchg
sbb
fdivr
(bad)
call
sbb
ret
jae
lock
push
lea
lea
imul
or
jno
in
lods
loopne
jmp
(bad)
sub
adc
mov
xchg
adc
les
inc
fwait
call
call
pop
push
(bad)
jg
push
call
ror
xor
test
jle
mov
mov
mov
sub
(bad)
jl
mov
mov
lea
shl
popa
fucomp
push
add
sub
aas
add
push
ror
fsub
sti
mov
dec
inc
add
stc
lea
push
push
call
inc
add
xor
aad
test
imul
pop
mov
mov
jnp
jg
movs
add
shl
add
jno
add
mov
mov
lods
icebp
dec
add
cmps
or
mov
adc
push
adc
jg
hlt
test
out
mov
and
jmp
mov
cmp
pop
hlt
add
xor
mov
je
mov
push
sar
iret
out
test
loope
mov
or
clc
add
stc
add
scas
enter
dec
adc
mov
mov
je
push
call
(bad)
add
push
or
loop
call
test
mov
test
mov
jg
and
push
mov
shl
push
push
call
add
mov
dec
retf
fucomip
ja
push
add
shl
push
call
test
adc
inc
cmp
cmp
inc
dec
jg
les
sub
fiadd
nop
nop
pop
or
ja
sar
push
push
push
xor
call
push
mov
call
adc
idiv
cmp
ja
jmp
and
hlt
inc
icebp
into
jo
ds
and
inc
or
adc
push
(bad)
out
ja
or
dec
adc
ret
and
mov
push
push
push
jnp
aad
sbb
sbb
pushf
sti
or
outs
add
cmp
jne
aas
pusha
mov
dec
mov
pop
push
ret
pop
ret
push
jo
jg
push
call
jmp
add
add
inc
or
or
fld
adc
adc
push
mov
jno
pop
adc
jno
and
les
push
inc
adc
xchg
jmp
mov
add
mov
jmp
add
shl
adc
dec
pop
pop
add
xchg
aaa
add
xor
mov
jp
sub
adc
jmp
dec
shl
mov
sub
test
push
mov
mov
ret
jle
lea
shr
add
adc
aaa
mov
add
dec
jne
or
mov
rol
ret
add
jne
dec
sub
push
jl
and
push
imul
test
add
dec
shr
inc
sar
(bad)
jge
mov
cmp
ret
stc
mov
xor
sub
add
out
ss
daa
jne
mov
fild
icebp
pop
and
mov
and
ret
inc
test
lea
jle
mov
(bad)
(bad)
dec
movsx
mov
shl
or
mov
mov
mov
mov
mov
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
(bad)
push
jne
inc
xor
cmp
add
dec
jne
mov
jle
cs
sbb
in
sub
pop
je
dec
dec
add
movsx
mov
pop
(bad)
push
(bad)
scas
inc
repnz
jne
les
bound
push
mov
push
xchg
call
mov
ror
add
mov
or
call
pop
sbb
mov
(bad)
clc
and
push
call
sub
pop
mov
add
mov
out
outs
adc
push
sbb
inc
sub
add
push
add
sub
add
sbb
cld
add
out
fst
mov
js
or
or
push
sar
cmp
clc
shl
sub
xor
cmp
xchg
(bad)
jle
mov
add
adc
cmp
or
out
dec
adc
mov
add
(bad)
mov
mov
dec
adc
xor
je
cmp
jmp
cmp
je
sar
arpl
or
sbb
test
je
mov
push
push
call
mov
add
add
fs
add
or
call
pop
jnp
cmp
fimul
jno
fld
push
push
push
push
push
and
push
call
sub
in
pushf
sbb
add
call
pop
in
outs
xchg
sbb
int3
shr
sbb
push
call
jo
and
push
push
push
dec
inc
cld
(bad)
push
and
push
call
add
mov
push
push
push
push
and
push
call
cld
sbb
and
inc
and
aas
xlat
jb
pop
and
cmp
inc
mov
ret
push
test
cs
cmps
sbb
cmps
ror
jmp
mov
and
xor
add
mov
and
rcr
out
add
cmp
les
mov
mov
cmp
or
sub
mov
cmps
jnp
push
inc
and
add
cmps
mov
sbb
pop
sbb
mov
adc
out
rol
xor
mov
and
add
ret
loope
cmp
pop
and
xor
mov
cmp
shl
fs
rcpps
(bad)
(bad)
pop
jne
test
dec
sar
shl
sub
jne
cmp
mov
rol
wrmsr
pop
jmp
or
pop
bound
xor
lea
cmp
test
add
add
call
in
adc
adc
inc
xchg
fisubr
inc
and
cmp
repz
cdq
cld
aas
(bad)
jecxz
and
add
add
jmp
mov
loope
out
(bad)
sub
push
push
call
and
rcl
mov
sub
not
out
xchg
dec
jmp
(bad)
mov
dec
shr
mov
cmp
or
sti
mov
inc
and
movsx
dec
add
mov
xlat
mov
push
and
xlat
mov
xor
push
xor
mov
inc
add
fild
test
mov
hlt
popf
leave
dec
xchg
pop
push
push
push
not
cld
xor
fstp
fcom
dec
mov
push
jecxz
in
sbb
(bad)
sbb
mov
sbb
pop
inc
mov
sbb
sbb
inc
xchg
and
cli
adc
push
push
push
adc
js
adc
push
call
clc
into
aam
pusha
outs
push
push
push
push
push
push
inc
inc
and
or
and
adc
sahf
and
inc
inc
push
inc
fcomip
xor
cmovo
js
mov
sbb
push
push
lock
push
mov
inc
lds
retf
cmps
adc
pop
push
int3
clc
dec
imul
mov
or
sahf
pop
inc
jae
sub
dec
gs
sbb
mov
and
sbb
cmp
or
mov
sbb
sbb
mov
inc
dec
call
pop
(bad)
fs
sub
mov
mov
add
or
fist
inc
push
out
xchg
push
and
inc
jp
push
cmp
out
pop
gs
sub
adc
dec
cmc
dec
mov
or
cmp
(bad)
(bad)
pop
scas
cmps
mov
dec
mov
pop
repz
adc
call
cmp
push
mov
adc
sub
in
pop
dec
inc
and
jl
or
div
jbe
dec
dec
push
pop
push
adc
rcr
mov
push
push
push
sbb
pop
push
test
add
jl
out
pop
pop
pop
xor
pop
pop
mov
push
sti
retf
sub
xor
pop
sbb
adc
jmp
ror
in
and
cmp
mov
or
add
scas
mov
imul
pop
cmp
sbb
inc
ja
dec
add
cmp
jb
push
push
aas
add
push
push
enter
push
call
loop
call
or
inc
mov
lea
call
ins
mov
cmp
leave
je
dec
inc
mov
inc
or
or
adc
mov
pop
mov
or
add
out
cli
ja
dec
enter
ret
int3
int3
mov
jne
scas
mov
mov
push
call
stc
jle
out
push
dec
push
sbb
push
push
das
jnp
jne
in
push
add
inc
mov
(bad)
dec
mov
addr16
call
mov
js
adc
or
mov
mov
or
int3
push
push
sbb
(bad)
dec
sahf
mov
push
call
jmp
dec
inc
jg
mov
pop
aad
sbb
cmp
jne
sbb
add
inc
xor
push
push
mov
mov
outs
mov
sbb
(bad)
icebp
in
inc
and
jg
xor
pop
pop
xor
call
dec
jmp
call
add
ja
loope
inc
cld
(bad)
sbb
mov
add
(bad)
sub
push
mov
call
out
and
push
mov
or
ret
add
test
push
call
imul
add
pop
and
add
dec
call
add
dec
jne
mov
ins
in
fmul
lock
pop
inc
sbb
xadd
xorps
sbb
into
push
push
pop
pop
movs
lahf
sbb
sub
movs
stc
sbb
lahf
inc
stos
pop
jne
inc
adc
jb
mov
push
lock
or
test
cli
out
adc
or
adc
mov
call
test
loopne
mov
adc
push
and
jne
push
mov
cmp
jne
or
out
add
pop
mov
cmp
jg
dec
add
lea
cmc
call
or
add
shl
mov
xor
ror
std
jg
pop
mov
mov
mov
push
mov
xor
push
mov
sub
add
lea
pop
sbb
lds
sbb
ficomp
jmp
mov
pop
and
sbb
scas
inc
lea
push
lea
iret
pusha
mov
or
fwait
sub
jne
push
call
idiv
lock
es
dec
inc
and
popf
shl
or
and
pop
adc
cmp
mov
push
lea
adc
jnp
fistp
jge
mov
push
mov
jne
and
inc
mov
sti
push
jl
inc
ret
jg
inc
push
push
push
push
call
or
fwait
jne
(bad)
jg
inc
xchg
sub
les
mov
jmp
mov
(bad)
push
mov
inc
dec
out
fild
pop
inc
push
add
or
push
jno
loopne
in
push
call
pusha
cmp
(bad)
jge
mov
xchg
sub
mov
movs
dec
add
add
adc
sbb
jae
mov
add
out
add
dec
enter
outs
call
inc
and
and
aaa
lea
fmul
pop
dec
(bad)
scas
das
adc
ret
pop
rep
adc
imul
pop
ret
int3
jmp
mov
or
ret
add
add
jbe
or
ret
push
call
jbe
ja
mov
ds
ret
xor
repz
or
jmp
add
mov
lea
cld
inc
int
adc
inc
push
cld
add
mov
sub
add
inc
inc
add
inc
sbb
push
rcl
mov
mov
cmp
ret
pop
inc
jns
sar
push
and
fwait
mov
(bad)
fwait
xor
outs
mov
mov
jle
add
(bad)
mov
mov
mov
test
dec
lods
mov
mov
cld
fwait
jg
mov
mov
mov
mov
mov
adc
fidivr
jne
dec
fmul
cli
ss
mov
mov
cld
mov
xor
pxor
(bad)
(bad)
(bad)
dec
in
(bad)
movzx
shl
or
cmp
jne
movq
movq
cmp
inc
or
lock
popf
movd
(bad)
out
push
in
mov
sub
jne
das
dec
movd
punpcklbw
psubsw
ucomiss
(bad)
(bad)
jg
psraw
pmullw
paddsw
mov
movzx
sub
dec
outs
enter
add
jg
mov
adc
sti
(bad)
(bad)
jg
pmullw
paddsw
psraw
packuswb
pminub
pmullw
paddsw
psraw
mov
pminub
pmullw
pmullw
paddsw
psubsw
pop
(bad)
psubq
(bad)
fcmovb
movq
punpcklbw
punpcklbw
into
punpcklbw
punpckhbw
movq
movq
fnstenv
sub
cdq
mov
icebp
nop
mov
fwait
into
xor
mov
add
jp
call
imul
pop
fimul
mov
addps
mov
sbb
sub
dec
imul
mov
sub
(bad)
cdq
mov
imul
and
call
cmp
push
mov
sub
lea
cdq
adc
(bad)
sbb
fsubr
adc
(bad)
mov
sbb
push
adc
addr16
rol
clc
push
cmp
jge
mov
jmp
adc
jle
mov
add
pop
cmp
jge
in
jne
and
mov
cmp
hlt
rcl
inc
jge
xor
jmp
cmp
add
push
cmp
jge
jne
out
add
jne
pop
or
enter
mov
mov
fimul
idiv
dec
xor
(bad)
push
aam
enter
add
mov
push
mov
lock
or
in
data16
ror
dec
into
or
inc
ror
rol
mov
xchg
mov
icebp
test
stos
fwait
out
std
jge
jmp
cmp
push
sbb
fld
cwde
(bad)
(bad)
aas
fcomip
push
cld
mov
lea
mov
mov
mov
psrld
pop
push
cld
mov
test
mov
mov
add
cli
(bad)
aas
mov
sbb
mov
dec
mov
mov
mov
mov
cli
dec
xchg
jne
inc
adc
je
push
xor
test
mov
jle
lea
sub
adc
pop
mov
and
sub
ror
loopne
inc
sbb
shr
movzx
in
xor
inc
adc
and
fadd
imul
sub
dec
push
call
mov
xor
push
adc
and
stc
pop
inc
sar
shl
fiadd
push
jle
je
pop
and
pop
rcr
mov
rcr
ret
or
rol
mov
dec
rcl
adc
mov
inc
cmp
xor
mov
add
pop
mov
ja
lods
popa
mov
push
xlat
add
pusha
push
pop
fist
or
mov
dec
push
adc
dec
and
push
mov
setbe
fimul
lods
mov
cmp
mov
aam
dec
fsubr
mov
jp
loopne
ret
mov
fmul
jmp
fild
lea
inc
out
mov
adc
dec
enter
mov
mov
scas
and
pxor
pcmpeqb
mov
mov
fs
lock
mov
sub
adc
add
enter
cmp
les
aam
and
inc
jo
xchg
jecxz
outs
mov
movs
dec
sbb
push
clc
addr16
movs
daa
test
and
jg
sbb
movzx
sub
jp
imul
loopne
pop
in
cmp
call
test
fimul
add
mov
mov
(bad)
es
popa
and
retfw
dec
and
push
or
and
enter
or
clc
xchg
mov
add
leave
xor
adc
jg
aad
mov
js
sar
lea
add
xor
neg
add
sbb
mov
mov
fs
add
retf
sahf
dec
adc
adc
sbb
lds
add
inc
sbb
fild
push
sbb
lea
mov
add
mov
jle
jmp
sbb
lock
dec
mov
mov
mov
push
hlt
jne
(bad)
cmps
hlt
inc
or
dec
pop
mov
pop
dec
xchg
sub
pop
and
shr
add
add
shl
pushf
scas
and
cmp
shl
inc
sbb
fdiv
test
sub
sub
mov
into
ret
int
sub
add
push
cld
sub
xchg
inc
retf
or
sbb
or
cmp
sub
ror
and
clc
adc
adc
add
adc
(bad)
sbb
xor
and
imul
sub
add
ror
retf
(bad)
test
add
mov
sar
test
lea
mov
aas
jnp
adc
test
dec
es
movzx
push
(bad)
fadd
pusha
mov
sub
mov
inc
lea
and
dec
loopne
inc
sbb
add
retf
inc
js
push
xor
aaa
popf
push
nop
sbb
jne
cmp
mov
push
add
inc
mov
(bad)
jbe
retf
mov
into
sub
inc
mov
xor
mov
add
int3
mov
push
lds
repz
aas
jne
mov
aas
inc
clc
lds
aas
xor
mov
aas
inc
lock
mov
hlt
arpl
or
jge
sub
outs
sub
(bad)
inc
or
(bad)
push
punpcklbw
psubw
movq
punpcklbw
hlt
(bad)
(bad)
out
psubw
aam
jg
punpckhbw
punpcklbw
psubsw
movq
psraw
movs
sti
ja
ins
fmul
in
call
lock
(bad)
mov
movq
punpckhwd
punpcklwd
paddsw
paddsw
psraw
(bad)
cmp
and
ret
push
call
imul
mov
in
in
ficom
and
mov
aas
and
retf
imul
outs
mov
psubsw
psraw
out
movq
pcmpeqb
cmp
idiv
pusha
retf
punpckhbw
movq
test
xor
out
push
punpcklbw
punpckhbw
iret
movq
movq
movq
(bad)
clc
inc
jne
emms
retf
xchg
and
je
inc
mov
lea
(bad)
cmps
mov
mov
lea
mov
sbb
enter
sub
clc
popa
cmp
push
adc
mov
xchg
jb
add
jge
mov
aaa
stos
sbb
(bad)
ret
cmp
adc
jecxz
mov
test
sbb
push
sahf
xchg
shr
or
inc
jnp
mov
inc
dec
dec
push
scas
fild
inc
sub
test
xlat
retf
pop
dec
sub
je
aas
shr
sar
add
push
lea
xadd
cmps
ja
imul
(bad)
ret
lock
push
and
loope
rol
sub
inc
and
(bad)
mov
pop
ds
mov
xchg
stos
or
adc
mov
imul
dec
xchg
or
movsx
clc
mov
(bad)
movsx
cmp
and
or
call
call
dec
popf
jge
mov
xchg
jb
daa
cmps
sub
xlat
aas
push
pop
sub
movq
sub
outs
or
and
outs
adc
sub
jecxz
enter
fisttp
retf
push
sub
loope
call
sbb
es
cmps
jne
shl
lea
mov
pusha
loopne
jge
lea
scas
mov
ud0
jmp
leave
mov
jmp
retf
ja
sbb
pop
mov
inc
lods
xor
scas
(bad)
mov
and
retf
icebp
xchg
inc
push
sbb
adc
jecxz
mov
add
lods
xchg
gs
sub
mov
(bad)
das
or
rcl
mov
pushf
pop
mov
xor
push
popf
pushf
pop
xor
(bad)
inc
data16
adc
inc
clc
test
je
cmp
jl
xor
and
rol
xor
add
cmp
ret
push
call
fnsave
pop
ins
ret
adc
mov
sbb
inc
push
and
sub
call
pop
push
push
push
dec
mov
adc
add
mov
pop
push
inc
std
mov
mov
adc
fstp
xor
push
mov
lea
arpl
inc
add
jl
mov
jmp
popf
mov
test
or
into
cmp
xor
inc
push
in
les
das
cmp
or
sti
and
add
add
dec
adc
sub
outs
fsubr
in
inc
pop
adc
ins
mov
xchg
cmps
stc
fsubr
sub
add
jae
jle
adc
mov
adc
(bad)
aam
out
mov
adc
mov
push
push
push
push
push
call
clc
aaa
mov
adc
add
push
push
call
inc
or
pop
pop
pop
add
jo
jl
outs
push
jo
lock
mov
mov
adc
scas
ror
daa
call
or
call
pusha
adc
or
bound
jb
mov
shl
jle
dec
add
jb
cmp
(bad)
jb
sub
outs
in
and
xor
adc
jb
js
inc
or
das
jb
inc
in
jb
xor
dec
inc
mov
jb
sub
push
add
xor
dec
jb
into
std
(bad)
loopne
jb
sub
and
aas
xchg
inc
icebp
add
jne
ja
lea
lea
cmp
jne
mov
out
lock
xor
push
outs
int3
push
adc
test
sub
ss
push
push
scas
push
call
sbb
xchg
sbb
pop
add
mov
push
push
ror
cmp
dec
cmp
dec
xor
add
xchg
jmp
mov
pop
push
daa
adc
jbe
push
jge
push
push
call
xchg
out
sub
lahf
adc
or
or
clc
sbb
mov
and
adc
push
push
call
add
add
out
push
lea
or
or
push
push
mov
hlt
fstp
and
sub
lea
inc
mov
push
inc
pop
mov
ja
or
stc
test
mov
dec
cmp
or
shl
std
sti
add
dec
adc
jbe
sahf
loope
mov
jecxz
aam
mov
sub
jns
push
add
push
sbb
xor
ror
retf
dec
outs
js
daa
mov
adc
frstor
lock
das
fstp
inc
ins
cmp
pop
or
jae
xchg
dec
cmp
push
push
call
(bad)
pop
cs
add
push
call
sub
xchg
push
add
in
fs
ins
and
mov
mov
hlt
push
inc
(bad)
mov
mov
mov
mov
cld
inc
cld
xor
and
mov
stos
fild
sbb
dec
clc
cmp
adc
lods
add
mov
and
push
push
(bad)
aas
loopne
mov
push
inc
and
jbe
mov
ret
xor
push
push
mov
sub
xchg
movs
adc
and
mov
push
call
adc
rol
jecxz
xchg
and
mov
add
daa
mov
add
scas
sub
mov
fld
push
push
test
mov
call
push
hlt
add
in
and
cmp
fild
mov
push
xor
ja
popf
jmp
mov
sub
or
jae
aad
adc
lock
and
push
mov
scas
fxam
inc
push
add
add
shr
mov
pop
adc
and
add
push
mov
push
sub
xor
jb
add
sub
mov
sbb
ins
adc
pop
imul
mov
je
add
mov
adc
inc
mov
inc
cmp
out
popf
xor
and
mov
mov
xor
call
xor
dec
and
sbb
out
aas
push
jnp
retf
add
add
sub
pop
mov
out
ins
and
mov
fcmovb
cmp
enter
or
inc
add
pop
sub
pop
shl
pop
sub
and
shl
test
fld
lock
shl
jo
je
out
call
sub
mov
add
mov
mov
and
mov
(bad)
call
or
sti
dec
push
call
push
call
xchg
mov
scas
jecxz
cmp
add
fs
sub
mov
jne
dec
mov
push
mov
mov
or
sub
in
inc
push
mov
mov
sub
mov
sti
and
inc
mov
push
or
xor
ds
out
push
cmp
and
lea
dec
mov
test
xor
or
add
inc
outs
adc
pop
pop
mov
cmc
jge
sub
xchg
jg
sbb
and
push
push
stos
pop
(bad)
dec
xor
xor
mov
sub
push
mov
mov
mov
push
push
push
push
call
aaa
cmp
(bad)
cmp
mov
popf
sbb
sbb
push
call
inc
jmp
(bad)
push
je
jge
push
call
pop
call
sbb
jmp
inc
cmp
mov
or
add
push
push
mov
push
inc
and
xor
ja
mov
xchg
sub
push
adc
call
push
push
mov
leave
xor
inc
push
mov
cmp
pop
cmp
rol
and
pusha
enter
adc
mov
mov
lock
cmp
adc
std
push
inc
push
or
jo
out
(bad)
or
add
fs
sub
rcr
pop
rol
imul
pop
adc
std
arpl
mov
lea
call
push
push
add
cmp
stos
sbb
fld
push
aad
fdivr
ret
cmp
into
push
push
mov
cmp
call
add
xor
test
xchg
mov
call
cmp
aaa
xchg
ins
add
je
jl
jo
js
and
fcom
jl
jo
shl
push
add
pusha
add
adc
xchg
hlt
pusha
test
sub
inc
fimul
jl
cmp
inc
xchg
ins
push
jo
mov
fstp
adc
jne
jo
js
out
bound
fcmovnu
jo
jne
cs
dec
push
jl
push
mov
xor
mov
cmc
dec
xor
xor
fcomp
jb
add
pusha
sub
(bad)
pop
adc
inc
adc
dec
sbb
fwait
dec
inc
mov
cwde
sbb
mov
fnstsw
call
push
call
(bad)
ja
inc
and
mov
ins
push
fidiv
mov
sbb
mov
jmp
mov
push
push
call
add
sbb
add
ret
mov
push
or
push
adc
add
pop
call
push
adc
add
add
rcr
out
outs
xor
ret
mov
je
mov
icebp
mov
ret
scas
pop
dec
fadd
call
or
adc
cmp
outs
pop
data16
dec
pop
or
inc
inc
fild
or
or
inc
div
pop
rcr
adc
ffreep
adc
dec
dec
mov
je
imul
mov
sub
mov
imul
sar
call
ret
pop
lea
mov
add
add
pusha
jp
(bad)
pop
(bad)
lock
loope
sqrtps
or
push
mov
pop
fs
adc
das
loope
and
sbb
push
call
nop
test
mov
pop
add
test
mov
push
daa
(bad)
pop
out
call
add
test
sar
jo
adc
or
adc
mov
and
dec
ja
(bad)
mov
clc
add
inc
sbb
cli
add
scas
ret
and
and
add
shl
or
sub
stos
stos
pop
mov
dec
and
aas
jle
out
jmp
js
mov
mov
test
or
test
lea
push
call
push
test
jne
fild
mov
mov
fs
and
je
mov
mov
push
push
push
push
push
call
gs
inc
adc
rol
adc
adc
push
xlat
sbb
test
jne
dec
and
mov
sbb
inc
adc
add
dec
and
ja
scas
dec
fcmovb
(bad)
loopne
xor
mov
mov
add
mov
fucomip
jbe
pop
dec
add
mov
and
add
jnp
out
dec
je
and
loopne
call
inc
pop
cmp
test
pop
rcr
data16
add
push
std
fdiv
out
or
inc
or
call
div
call
lahf
inc
mov
test
aaa
icebp
push
adc
gs
dec
adc
push
call
push
call
xor
jae
xor
inc
or
or
inc
add
xchg
jge
push
iret
and
sti
fld
mov
inc
and
pop
cld
inc
mov
mov
mov
mov
pop
pop
je
inc
(bad)
call
mov
xor
and
cmp
push
lea
scas
add
ret
outs
scas
pop
push
inc
dec
cdq
shl
mov
cmp
test
ds
loope
inc
ins
mov
xchg
and
ss
cmp
je
loope
inc
mov
cmp
jle
dec
sub
push
add
(bad)
(bad)
out
xchg
pop
sub
lea
mov
mov
push
push
call
cld
cmps
loopne
test
jne
lea
lea
xchg
push
push
push
call
sbb
mov
call
sbb
inc
lahf
push
and
aas
adc
icebp
mov
mov
cmp
adc
push
fist
(bad)
(bad)
fbld
inc
mov
mov
inc
cmp
mov
je
xor
jmp
mov
cmp
jl
cmp
adc
jmp
inc
or
loopne
mov
cmp
jne
mov
xor
add
xchg
call
jmp
ret
imul
sbb
je
out
pop
lea
mov
inc
hlt
jg
loop
jmp
adc
sbb
fist
add
shr
mov
scas
scas
push
inc
inc
jl
sub
(bad)
(bad)
aas
cmc
adc
idiv
add
add
test
je
test
je
sub
lock
add
add
jmp
push
ret
push
or
sub
je
and
in
ja
push
or
mov
dec
jl
mov
inc
add
inc
or
mov
or
adc
stc
inc
and
adc
inc
sbb
enter
mov
xlat
pop
mov
sbb
into
dec
add
je
(bad)
das
xchg
xor
push
mov
inc
fsub
(bad)
adc
dec
push
push
push
sbb
mov
push
jg
dec
or
or
rol
test
fadd
dec
add
push
or
fs
sub
(bad)
xor
fldcw
daa
or
ds
xor
ins
and
add
push
push
call
mov
or
clc
jne
icebp
sub
xor
orps
sub
popf
(bad)
cwde
enter
stc
or
cli
push
and
add
loopne
add
jns
add
xchg
dec
pop
sbb
ret
fstp
shr
push
call
or
(bad)
push
in
cli
adc
mov
cdq
add
clc
dec
push
(bad)
outs
ds
lods
xor
and
xor
mov
xor
add
je
dec
test
jl
xor
cmp
setg
mov
add
adc
sbb
fs
scas
in
jle
in
push
add
add
mov
sbb
mov
out
lods
adc
neg
dec
int3
sub
in
cs
inc
xor
ret
mov
iret
in
aad
adc
jne
push
push
push
call
pop
cmp
js
jne
mov
jg
aam
test
inc
adc
loopne
add
push
fadd
adc
rcr
cmp
rep
lea
(bad)
pop
and
icebp
mov
lea
and
pop
and
pop
cmp
add
mov
mov
shl
mov
test
adc
imul
(bad)
fcomip
adc
inc
mov
cmp
mov
jne
mov
ror
inc
sbb
lea
je
call
aam
mov
mov
pushf
sbb
xor
mov
nop
int3
xor
retf
es
add
out
push
push
push
je
loope
inc
adc
cmc
lahf
lea
mov
cwde
in
(bad)
dec
xchg
push
push
jmp
or
jb
jmp
pusha
xchg
jmp
les
push
jmp
call
or
pop
or
lea
mov
mov
nop
mov
(bad)
ja
push
add
dec
jne
push
call
in
and
out
sub
push
ja
mov
call
pop
je
clc
ins
and
jne
pop
cmp
xor
add
repz
mov
mov
mov
sbb
pop
jle
push
aas
adc
jo
mov
mov
aas
mov
fcomip
orps
rol
sti
add
dec
and
inc
ja
cld
jns
dec
or
or
jne
dec
adc
cmp
adc
fisttp
push
jmp
jle
lea
and
push
and
or
push
inc
mov
iret
fldcw
lea
jne
retf
dec
push
add
shr
clc
push
nop
ss
mov
sbb
sub
cli
stos
mov
sahf
sbb
test
jg
fld
or
mov
stc
shl
mov
mov
dec
and
mov
shl
add
cmp
jge
jbe
or
sub
mov
sbb
inc
and
mov
mov
ror
in
push
and
je
scas
mov
icebp
dec
inc
xor
mov
aaa
push
es
sbb
mov
pusha
aad
adc
xor
or
adc
enter
popa
(bad)
sbb
enter
xchg
out
xchg
cmp
push
push
mov
mov
(bad)
mov
mov
pop
or
aas
cmc
jmp
or
mov
out
jle
mov
shl
shr
adc
and
mov
loop
or
test
adc
mov
je
push
icebp
sub
mov
mov
shr
jg
cmp
lea
mov
test
lea
jne
adc
inc
inc
inc
hlt
pop
mov
neg
clc
adc
xor
repz
jbe
push
jno
mov
add
mov
mov
sbb
mov
pop
ret
push
push
push
xor
call
gs
mov
or
(bad)
pop
pushf
pop
ret
xor
in
adc
add
mov
mov
iretw
sar
ret
loope
push
das
cmp
xchg
or
jle
jne
push
mov
out
and
pop
call
cmp
mov
xor
rep
cmp
jle
xor
lea
mov
mov
mov
movsx
mov
pop
add
jl
adc
cli
mov
movsx
inc
add
xchg
jl
sbb
dec
fwait
test
ret
int3
push
or
loop
call
push
call
inc
retf
pop
(bad)
sub
movsx
jo
clc
push
add
ret
cmp
mov
inc
add
mov
nop
or
cmps
fild
call
or
mov
push
push
and
add
push
popf
rcr
cdq
sar
imul
xor
fistp
cmps
jnp
pop
mov
add
sbb
or
pop
adc
nop
sbb
test
jne
and
sbb
mov
inc
(bad)
cmp
push
je
inc
cs
cld
aaa
mov
dec
inc
jne
mov
(bad)
jmp
sub
cmp
lea
jne
mov
out
push
and
pop
or
cmp
mov
cld
inc
add
ja
imul
rcr
xor
test
setne
lea
les
add
add
test
aam
mov
sub
neg
sbb
sub
pop
push
scas
adc
es
mov
mov
xor
cmp
and
in
int
adc
iret
inc
neg
sbb
and
mov
jmp
or
jmp
mov
mov
sbb
and
mov
jbe
and
jmp
add
add
push
imul
mov
mov
fadd
add
fwait
repnz
cmp
fnstsw
sbb
cmp
ret
sbb
push
mov
cmp
cmp
push
xor
xor
jmp
adc
add
and
dec
mov
xor
xor
jmp
sbb
add
lea
lea
mov
cmc
sub
(bad)
ja
mov
add
sbb
adc
int
adc
mov
sub
repz
mov
jmp
cmp
mov
jl
mov
cmp
xlat
xor
cmp
jge
mov
jmp
mov
sbb
sbb
mov
or
sub
sub
add
add
cmp
mov
pop
iret
inc
and
or
cli
cmp
imul
sbb
inc
divps
cmps
jmp
add
in
inc
add
rcr
adc
jmp
inc
push
pushf
pop
fild
push
push
and
nop
or
mov
mov
push
add
jmp
loopne
call
sbb
push
mov
call
pop
push
add
push
push
push
call
call
and
lea
sub
ret
push
jg
xor
fs
push
push
rol
mov
add
mov
jg
jg
mov
popf
inc
add
mov
mov
add
pop
jle
add
jmp
add
loopne
or
pop
mov
pop
aas
fcmovnb
test
jns
or
out
arpl
push
call
or
push
push
call
nop
leave
inc
push
or
(bad)
cmp
lds
leave
cdq
idiv
adc
push
test
sbb
adc
je
sbb
mov
test
je
inc
and
mov
idiv
or
cmp
enter
hlt
out
sbb
pop
lods
and
sub
aam
add
mov
cdq
test
inc
dec
push
adc
xchg
stos
pop
pop
jmp
mov
jne
ins
lea
jg
adc
out
mov
mov
dec
sbb
xchg
bswap
adc
fs
gs
adc
rcr
ror
push
mov
(bad)
sbb
icebp
pusha
sbb
lea
mov
idiv
jne
jg
adc
push
and
dec
inc
pop
mov
cmp
cmp
mov
shl
jmp
icebp
inc
repz
int
retf
cmp
je
out
clc
mov
pop
xlat
repz
cmp
sti
or
clc
mov
sbb
sar
pop
sbb
dec
or
ret
rcr
sbb
or
lds
add
add
add
int
add
mov
add
lea
ins
pusha
sbb
inc
in
xor
aaa
cmp
push
xchg
(bad)
xor
add
adc
push
call
scas
dec
push
xor
clc
ins
xor
cld
leave
cmp
je
fwait
jl
cli
movups
push
pushf
mov
add
ins
and
xor
jmp
xor
or
mov
mov
int
mov
lea
mov
push
(bad)
(bad)
jne
xor
out
(bad)
cmc
mov
lea
or
add
ror
jl
dec
int
mov
adc
adc
jl
pop
idiv
fiadd
(bad)
lock
jge
xor
or
xor
shl
pop
xor
ret
add
add
loope
pop
idiv
stc
mov
cmp
push
or
stc
push
sbb
sbb
fist
ins
sets
add
sub
sub
add
out
mov
add
add
sbb
dec
adc
in
add
inc
sbb
mov
jg
push
pop
rol
clc
xchg
sbb
xor
call
and
jnp
sbb
call
out
inc
int3
sbb
dec
cmove
test
ror
xor
jmp
xor
inc
push
pop
int
int
mov
int
mov
push
sub
nop
shl
(bad)
sub
out
add
xor
bswap
sub
and
cmp
fwait
xor
jge
push
cmc
dec
fwait
rcr
add
aad
jmp
and
add
retf
xor
loope
xor
iret
add
add
mov
sub
sub
out
cli
or
mov
bound
(bad)
jmp
loope
mov
shl
lea
pusha
sbb
sub
aaa
lock
jle
push
jnp
adc
ds
and
aas
or
inc
xor
in
stos
(bad)
push
push
mov
call
add
jg
lea
fmul
cmp
pusha
add
push
clc
pop
jle
mov
xchg
pop
or
dec
push
adc
in
mov
push
mov
cmp
sar
idiv
add
and
test
stos
dec
adc
sar
add
push
mov
ja
sbb
scas
fiadd
fld
rol
test
jmp
add
shl
lea
lea
adc
(bad)
jg
sub
nop
mov
mov
add
add
mov
lea
mov
sub
sub
call
mov
call
call
out
div
mov
outs
inc
add
push
jno
add
lock
in
adc
jae
add
cld
fist
inc
or
push
or
sbb
or
outs
or
inc
or
mov
or
add
or
mov
mov
inc
enter
mov
adc
aas
inc
and
mov
mov
adc
push
and
adc
leave
lahf
jg
adc
outs
sbb
push
add
adc
sbb
cdq
in
aas
sbb
sbb
mov
sbb
add
or
add
adc
outs
mov
std
jg
add
dec
jne
cmps
adc
or
repnz
xor
sub
inc
adc
dec
ja
mov
mov
mov
rcl
das
or
ret
call
loopne
push
fdiv
fistp
cmp
push
mov
imul
add
(bad)
push
mov
and
inc
into
imul
or
push
mov
imul
and
adc
test
inc
mov
add
mov
mov
test
jb
cli
add
stos
imul
(bad)
cs
sub
add
dec
jne
daa
xor
outs
pushf
lea
lea
lea
xchg
sub
out
nop
scas
mov
push
inc
dec
push
and
inc
inc
and
and
mov
cmps
dec
add
cmps
hlt
fwait
cmp
add
add
cmps
inc
and
jne
xor
std
jmp
add
mov
sub
cmp
and
push
xor
jge
nop
pop
mov
mov
inc
inc
shl
pop
and
pop
xchg
push
mov
mov
mov
stos
or
push
pop
std
mov
sar
imul
inc
sub
push
gs
mov
mov
mov
add
xor
inc
lock
mov
mov
push
sbb
pop
retf
cmp
imul
inc
pop
aaa
lods
retf
or
into
add
dec
jne
cmp
pop
or
jg
jnp
mov
pop
add
and
dec
add
jg
jo
sbb
sbb
push
push
add
add
stos
fs
mov
push
jmp
dec
inc
add
hlt
(bad)
stc
add
push
retf
call
inc
sub
test
nop
mov
loopne
in
inc
call
dec
nop
xor
add
xchg
xor
xchg
xchg
sbb
enter
push
push
call
push
cwde
scas
stc
adc
into
mov
lea
(bad)
(bad)
mov
mov
fs
adc
push
mov
jge
inc
aas
add
or
push
pop
push
(bad)
dec
mov
sbb
(bad)
add
dec
jne
sbb
add
xor
dec
jbe
call
and
dec
scas
repz
mov
mov
mov
outs
fdivrp
push
xor
push
add
or
push
or
adc
add
mov
imul
add
pop
adc
or
or
adc
ret
retf
ret
cwde
fstp
cmp
inc
inc
pop
fdiv
pop
or
mov
daa
sub
lds
xor
retf
push
out
mov
scas
inc
or
inc
adc
inc
or
(bad)
(bad)
(bad)
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sti
fwait
out
adc
adc
mov
(bad)
pop
outs
adc
jle
xor
xchg
and
inc
jo
arpl
jg
pop
rcr
xor
cs
sbb
mov
(bad)
iret
iret
or
push
or
or
mov
int3
sar
xor
movsx
test
push
jl
pop
cmp
jle
add
or
add
pop
imul
mov
mov
add
add
psrlw
xor
push
in
(bad)
mov
or
add
sbb
push
sub
cmp
push
mov
push
mov
inc
and
push
inc
imul
inc
inc
(bad)
mov
js
out
(bad)
dec
adc
inc
add
iret
mov
(bad)
push
or
enter
add
add
add
mov
cdq
adc
adc
ret
pop
cld
aaa
inc
add
into
lock
test
(bad)
fmul
sbb
sar
lea
mov
cdq
sar
or
xor
imul
xor
nop
call
mov
dec
or
inc
mov
sub
push
jne
mov
sar
or
imul
mov
mov
pop
clc
push
aam
mov
movs
pop
mov
call
cmovg
jmp
push
sbb
add
lods
xor
pop
(bad)
sbb
cmp
sub
adc
and
ins
cmp
add
mov
and
ja
inc
push
push
push
push
mov
call
test
je
fnstsw
dec
jge
mov
and
or
inc
shl
fcos
jg
int3
jmp
add
add
fsubr
and
out
into
gs
pop
and
clc
test
mov
inc
jge
mov
and
cld
inc
mov
cdq
je
and
fadd
outs
(bad)
cdq
add
shl
pop
adc
movs
pop
dec
and
mov
div
popa
dec
push
sar
push
sar
(bad)
adc
push
pop
test
inc
and
mov
fcomp
pusha
xor
in
loopne
repnz
jg
inc
stos
push
and
call
adc
les
shl
and
fadd
add
add
add
add
add
icebp
xchg
or
shl
mov
push
call
fcomip
inc
mov
inc
and
mov
pop
icebp
call
lea
sub
mov
push
add
loope
or
inc
adc
mov
sub
daa
mov
push
adc
call
(bad)
mov
pusha
jbe
ss
adc
cmp
jbe
(bad)
(bad)
(bad)
cmp
inc
sbb
add
add
jnp
pop
lea
shr
test
mov
jl
clc
adc
cmp
dec
pop
sbb
(bad)
dec
lea
je
mov
or
jmp
mov
inc
cmp
jne
(bad)
(bad)
inc
xor
inc
dec
jns
pop
mov
mov
add
sub
pop
mov
mov
pop
jge
call
imul
neg
and
je
push
out
fidiv
sub
add
mov
stos
data16
inc
sbb
(bad)
mov
push
clc
jg
packuswb
(bad)
std
lea
sar
mov
cli
setb
cli
pop
sub
or
jg
outs
adc
cmp
jge
mov
(bad)
push
pop
jle
mov
add
cmp
jle
inc
clc
mov
inc
xor
cmps
cmp
cmp
push
(bad)
mov
mov
nop
mov
push
test
je
in
lea
(bad)
mov
not
dec
sahf
jmp
mov
mov
push
lea
mov
jp
push
int3
mov
std
(bad)
(bad)
jecxz
call
and
add
ret
int3
(bad)
jl
(bad)
call
sbb
scas
inc
icebp
out
jle
xor
mov
push
xor
stos
mov
idiv
adc
pop
(bad)
jmp
retf
ror
ror
test
outs
fidivr
lea
mov
sbb
xor
in
dec
add
cmp
and
cmp
adc
push
cs
test
fldenv
push
ins
mov
in
sbb
mov
xor
in
cmp
and
dec
loop
add
movsx
sub
mov
dec
adc
mov
loopne
sub
push
movsx
mov
adc
mov
sub
mov
xchg
lock
sar
xor
test
jl
call
mov
setle
mov
dec
loope
jae
and
sub
test
jle
pop
adc
ret
jmp
xor
test
or
pushf
icebp
ja
(bad)
adc
shl
aas
cmp
test
jle
jge
adc
aas
add
neg
inc
neg
lds
(bad)
add
fdivr
lock
add
sub
mov
sbb
add
add
mov
pushf
jns
data16
adc
mov
inc
jle
or
xchg
or
sub
mov
jns
movs
ret
data16
dec
cmps
arpl
(bad)
(bad)
(bad)
dec
lock
mov
test
mov
push
mov
push
push
jne
mov
mov
inc
pop
out
adc
push
cmovo
add
(bad)
test
prefetchnta
(bad)
call
outs
leave
mov
prefetchnta
movdqa
punpcklwd
(bad)
ror
mov
prefetchnta
jo
add
jg
and
daa
retf
out
push
not
prefetchnta
daa
pxor
pshufd
jne
cmp
fcomp
dec
jmp
movdqu
test
xor
sbb
xor
repz
rcr
adc
stc
push
and
and
psllw
dec
icebp
jmp
pop
mul
stc
repz
adc
std
repnz
adc
jecxz
popa
pop
and
cmps
jae
jae
mov
pcmpgtw
and
(bad)
jne
(bad)
sub
pand
por
pop
(bad)
fld
popf
fstp
add
or
fadd
sub
dec
shl
or
lock
sbb
and
sbb
jmp
mov
sub
fucomip
push
pop
jmp
jno
sbb
sub
mov
jno
pop
cli
or
add
jmp
outs
std
stc
xchg
jmp
popa
cmc
pmovmskb
test
sbb
sar
and
leave
jmp
jmp
add
or
xor
mov
movsx
movsx
jmp
(bad)
cli
neg
cmp
jge
addr16
or
inc
or
outs
into
pusha
clc
ja
add
cmp
jl
test
pushf
loope
and
lahf
or
int
js
jg
pop
fucomip
outs
mov
pop
and
add
mul
std
loop
adc
popf
jmp
scas
push
adc
sar
rcr
inc
div
aas
jmp
(bad)
add
gs
loope
je
outs
pop
(bad)
mov
cmp
jg
push
sbb
ret
out
clc
fild
rcl
lock
movq
pop
inc
xor
lds
(bad)
call
pop
or
add
popf
test
cmp
fld
sub
and
aas
icebp
arpl
sub
rol
test
or
mov
mov
or
push
and
adc
mov
xor
mov
rcl
pop
inc
xor
dec
pop
sub
shl
out
sub
mov
ins
or
dec
add
lea
sub
sbb
inc
sbb
mov
ja
add
sub
lea
push
lea
clc
out
loopne
in
and
lea
push
lea
cmp
jmp
push
out
push
call
jb
mov
add
lds
lea
push
mov
ja
add
test
push
(bad)
and
inc
add
dec
jae
js
push
push
inc
inc
adc
adc
call
mov
add
mov
jb
in
les
adc
push
add
push
push
add
jge
dec
push
ret
and
div
xchg
sub
sbb
jo
push
call
pop
mov
add
les
jecxz
jg
iret
mov
adc
dec
and
push
jne
sar
add
xor
sbb
pop
sbb
test
adc
pop
pop
pop
add
cmp
pop
test
dec
les
jle
sbb
jge
mov
push
sar
adc
xor
add
scas
add
adc
(bad)
outs
sub
mov
fisttp
xlat
mov
out
ffree
shl
push
scas
sbb
ficom
dec
mov
xor
lock
mov
mov
mov
mov
jmp
add
mov
pop
shr
add
cmp
jl
sbb
dec
and
loope
and
fstp
lea
(bad)
in
and
push
push
call
and
cld
jo
add
lea
lea
push
push
call
inc
fisub
iret
fwait
ror
mov
adc
mov
or
pop
loope
and
mov
nop
mov
sti
lahf
loope
jl
lock
(bad)
jmp
dec
shl
(bad)
sbb
jmp
out
push
scas
shr
stos
in
sbb
mov
mov
rol
cs
out
or
lds
std
jmp
enter
inc
(bad)
icebp
shl
add
fadd
and
lea
adc
lea
(bad)
adc
mov
or
sub
repz
jg
and
inc
test
mov
xchg
and
jae
or
pushf
ss
cld
fisttp
bound
push
push
and
mov
push
and
mov
test
outs
jo
or
dec
and
data16
jae
push
sub
push
add
pop
inc
sbb
mov
jae
fistp
ds
push
and
mov
push
dec
add
cwde
mov
daa
or
daa
inc
and
ja
push
out
int3
frstor
push
and
sbb
test
out
ds
mov
daa
dec
and
ja
push
daa
inc
and
xor
jae
daa
mov
cmp
fcomp
ja
push
daa
dec
and
fmul
mov
push
and
inc
and
jg
add
fs
and
pop
pop
test
sbb
mov
and
pusha
and
rcr
jno
mov
pusha
mov
dec
outs
inc
and
mov
mov
mov
add
iret
jge
add
mov
mov
mov
inc
and
mov
das
pop
jne
or
jmp
jle
add
std
pop
div
dec
and
mov
cmp
sbb
retf
test
sti
jnp
jnp
sub
lahf
push
sub
or
out
push
aas
pop
mov
mov
pusha
sub
inc
push
inc
and
sub
out
(bad)
jge
sbb
xchg
and
lahf
mov
fst
in
in
push
dec
sub
mov
jge
jb
shl
mov
jge
push
push
enter
push
mov
push
push
mov
lahf
jnp
fcom
jno
sti
test
sbb
ins
out
ds
test
xchg
lea
pop
lea
aas
cmp
(bad)
div
mov
mov
sti
iret
loope
test
xor
sbb
mov
dec
repz
ja
push
add
mov
pop
xor
jbe
rcl
mov
mov
jo
jl
inc
and
mov
daa
mov
ret
fwait
sbb
mov
xor
dec
jae
(bad)
fsub
pop
daa
xchg
xchg
sti
jp
mov
push
daa
push
and
call
pop
mov
jl
push
daa
inc
and
sbb
ins
ret
mov
out
ds
daa
dec
retf
dec
jmp
inc
push
sbb
push
mov
jl
movs
inc
push
jge
jmp
push
add
push
pop
xor
or
inc
loopne
lods
pop
dec
mov
dec
push
or
add
xor
(bad)
jmp
sbb
xchg
mov
mov
add
adc
xlat
(bad)
and
dec
add
cs
mov
push
hlt
and
add
or
mov
leave
pop
into
lock
mov
loope
setb
mov
(bad)
mov
push
out
(bad)
dec
fisttp
neg
jo
dec
mov
push
sub
and
jge
lock
sub
and
and
jl
mov
jne
inc
in
pop
sub
and
aaa
jb
stos
test
push
cmp
fcom
push
mov
add
add
push
aaa
push
cs
out
add
pop
jle
dec
out
out
rcr
je
mov
data16
dec
pop
lods
lahf
xor
(bad)
les
adc
add
push
std
inc
loop
sti
dec
test
add
push
mov
push
mov
sahf
push
push
mov
push
push
call
sub
mov
popa
mov
rep
call
mov
aaa
sar
xor
call
jmp
int3
mov
inc
push
mov
sub
add
(bad)
pop
idiv
popa
out
push
mov
pushf
adc
sbb
(bad)
call
mov
and
imul
in
or
ror
mov
xor
daa
test
(bad)
shl
pop
iret
sub
fcmovb
jecxz
mov
mov
shl
lea
imul
add
imul
mov
shl
cmp
fstp
stos
inc
add
clc
imul
sub
sahf
adc
jno
and
add
mov
mov
push
add
mov
dec
(bad)
push
add
mov
push
call
sub
inc
mov
mov
add
add
cmp
les
stc
rcl
mov
retf
test
jg
call
xor
lock
mov
jge
pop
adc
mov
xchg
sub
cmps
mov
fiadd
(bad)
xor
dec
and
mov
xchg
xor
(bad)
(bad)
(bad)
call
push
or
dec
xor
mov
push
add
or
push
push
push
add
push
call
adc
mov
lds
cmp
jl
pop
pop
inc
loop
sbb
sub
fnstcw
lea
push
push
cmp
jns
or
cmp
push
push
jne
movzx
or
jne
jmp
fild
adc
push
mov
mov
xor
je
mov
lock
fst
in
jl
loope
repz
mov
mov
and
push
fwait
jl
push
adc
sar
dec
and
sub
fild
xor
jo
mov
int3
adc
aad
jae
pop
push
dec
and
mov
setp
aad
jg
add
mov
sar
cmp
mov
sbb
and
iret
fs
cld
inc
and
mov
or
jle
lea
ins
mov
inc
xchg
mov
pop
test
clc
cld
out
jle
cli
mov
sbb
sbb
into
fadd
add
and
jmp
push
popf
adc
call
and
adc
and
jge
mov
enter
inc
sub
aam
mov
enter
scas
into
add
rol
mov
shl
add
jl
je
dec
(bad)
gs
or
and
inc
add
int3
add
les
jmp
lahf
inc
push
add
push
mov
add
test
icebp
iret
add
push
pop
inc
add
push
call
fadd
inc
and
inc
add
add
xlat
inc
xor
cmp
inc
add
ret
fld
scas
xor
sbb
or
cmp
cmp
push
std
jmp
add
mov
ins
jle
push
das
je
retf
shl
pop
sub
icebp
aas
int
or
retf
imul
adc
imul
mov
adc
and
and
xchg
or
sbb
jmp
in
sbb
(bad)
pop
push
or
xlat
push
mov
lock
std
add
xlat
add
push
cmp
enter
lock
cwde
rol
in
bound
fwait
sbb
or
jne
dec
adc
push
add
(bad)
out
mov
rol
scas
retf
test
lea
cmps
sub
mov
mov
and
cli
out
pop
shr
ror
pop
call
lea
mov
fst
ins
jmp
(bad)
pop
cmp
sbb
mov
pop
ins
mov
mov
xor
adc
(bad)
sub
sub
or
cmp
inc
sub
adc
inc
xor
push
and
add
push
push
add
lea
stos
sti
xchg
lods
push
push
call
mov
mov
xchg
and
sbb
popa
bound
inc
sbb
sub
(bad)
cmp
adc
in
mov
js
cs
sbb
movs
leave
mov
and
fs
je
inc
dec
push
xor
dec
cmps
test
dec
ins
cld
xor
dec
dec
inc
and
sbb
cld
push
xor
enter
pop
adc
mov
(bad)
int3
in
or
mov
cmp
push
mov
shl
shr
retf
dec
jmp
and
retf
test
adc
push
add
or
call
pop
and
or
jle
dec
adc
movs
xor
jle
test
add
loope
and
mov
inc
inc
ins
add
lea
cmp
push
ins
mov
cmps
inc
xor
into
sar
stos
mov
or
or
xchg
jecxz
(bad)
mov
ret
sub
jno
(bad)
out
cs
in
jle
inc
not
cmps
mov
loopne
sti
aaa
cld
test
lea
jle
(bad)
pop
lea
hlt
scas
sub
jl
xor
and
mov
aaa
les
mov
dec
add
lea
push
(bad)
out
(bad)
inc
push
push
call
add
add
dec
jne
in
(bad)
pop
push
daa
je
icebp
jmp
aas
add
add
dec
sub
dec
push
scas
xor
push
mov
iret
test
sub
andps
stc
ins
sbb
(bad)
out
sub
ins
push
add
inc
sti
xor
adc
mov
rcr
not
test
or
adc
aas
mov
pop
push
call
pop
push
call
das
push
or
or
push
push
push
call
add
(bad)
and
mov
push
push
push
call
add
cmp
adc
sbb
adc
push
xor
call
or
ins
cmp
cmp
and
and
push
call
arpl
mov
jne
cmp
push
add
call
adc
mov
bound
punpckldq
jmp
outs
cmp
add
mov
sbb
push
call
out
adc
jge
cmp
sti
mov
mov
push
push
push
call
push
push
jmp
sbb
add
test
inc
or
out
or
push
mov
ins
or
add
add
call
sub
neg
add
push
or
push
daa
mov
or
push
call
mov
push
dec
test
mov
xor
xor
cmp
jne
push
loopne
aas
not
call
sti
add
test
std
pop
add
add
and
inc
int
(bad)
and
jmp
mov
test
mov
inc
call
sub
jle
sti
add
je
xor
fwait
std
ret
pop
jmp
jbe
add
cli
jg
pop
in
mov
and
pushf
test
sbb
fwait
sbb
push
push
call
repnz
out
and
ret
push
push
push
call
call
inc
add
dec
cmp
nop
push
pop
inc
add
sar
sub
std
sbb
mov
(bad)
jle
sub
cmp
jl
cmp
jg
mov
sbb
ja
push
aas
retf
dec
sub
mov
add
cmp
add
jne
add
push
call
rcr
add
add
lea
mov
sub
loop
pusha
push
mov
repnz
mov
sbb
push
push
call
(bad)
cmp
test
mov
jne
mov
movups
inc
add
iret
pop
pop
pop
pop
add
pop
add
dec
mov
str
adc
std
(bad)
fild
push
push
push
call
lea
mov
lea
dec
sub
cmc
outs
and
push
data16
ret
fistp
pop
push
pop
call
sub
jmp
adc
cmc
aaa
add
mov
or
retf
call
ficom
jne
add
dec
and
mov
push
fsubr
sub
push
and
mov
sub
add
xor
ficom
inc
adc
add
jo
(bad)
jne
outs
and
xchg
add
sbb
add
mov
adc
push
add
push
jge
add
loopne
das
and
jl
sbb
std
(bad)
call
sub
inc
add
scas
dec
xor
cmp
lea
mov
mov
jge
push
mov
lea
ficomp
push
inc
jmp
inc
fcomip
mov
mov
mov
sub
push
add
add
or
jl
adc
cmp
add
ja
call
or
inc
sar
ret
lea
or
add
cwde
jl
iret
or
out
or
fimul
(bad)
cdq
dec
test
jne
or
xor
(bad)
call
sti
sbb
movsx
lea
movzx
sti
ja
add
cmp
jge
sbb
adc
adc
or
push
dec
push
call
pop
(bad)
push
shr
push
push
call
xchg
(bad)
xor
jmp
ss
jl
or
fstp
rcl
movsx
push
scas
(bad)
cmp
or
push
mov
scas
(bad)
jne
mov
mov
push
jp
jmp
mov
push
scas
xchg
or
push
int
mov
ror
or
int3
out
sub
push
push
xor
add
or
jmp
push
dec
xor
push
and
push
les
lea
and
call
mov
sar
lea
mov
mov
outs
jb
stos
mov
xor
jne
out
fldcw
les
int3
outs
lock
mov
xor
call
or
inc
outs
sbb
pop
shl
push
icebp
in
sub
psubd
(bad)
cmp
jne
jo
and
mov
(bad)
aas
push
add
and
push
mov
jg
lock
fwait
ja
lea
cmp
jbe
call
or
out
adc
out
mov
add
add
cmc
je
add
(bad)
call
out
and
and
cmps
and
pop
pop
fdiv
cmp
jbe
and
in
test
jg
(bad)
stc
je
mov
mov
call
test
dec
in
ins
pusha
add
xor
(bad)
dec
push
add
push
add
sar
sbb
and
clc
add
mov
ds
jge
mov
jo
add
inc
mov
mov
sub
loopne
jae
in
sbb
inc
pop
xor
idiv
popa
(bad)
pop
clc
mov
mov
mov
or
mov
pop
jmp
mov
cdq
mov
mov
xor
sub
sbb
call
jmp
inc
and
add
add
add
cmp
test
ins
jl
stos
(bad)
std
cmp
push
mov
shl
add
mov
pop
lea
sub
(bad)
pop
mov
pop
inc
clc
mov
mov
mov
(bad)
(bad)
(bad)
dec
push
mov
push
adc
mov
mov
mov
xchg
or
call
loop
jp
add
adc
add
adc
lock
iret
fmul
push
shl
mov
pop
push
xor
adc
inc
or
sti
mov
or
jl
dec
sbb
add
sar
mov
cdq
mov
mov
dec
shr
lahf
dec
lea
lea
sub
(bad)
jne
dec
aas
pop
hlt
cmp
mov
sbb
pop
sbb
pop
ins
cli
or
adc
aad
ret
int3
ret
mov
jmp
xor
out
(bad)
movzx
mov
push
js
mov
or
add
xor
repz
add
add
or
or
push
or
ret
test
stos
mov
clc
aaa
femms
movzx
add
test
mov
pushf
ret
ds
std
jg
retf
push
add
add
add
and
and
add
movs
stc
inc
add
dec
add
out
dec
repz
push
mov
and
daa
xchg
or
mov
push
fs
sbb
pop
(bad)
adc
test
retf
xor
pop
push
sbb
jmp
push
add
jb
jl
fucomp
add
sub
mov
or
add
add
pop
sti
adc
cmp
add
ret
imul
in
add
retf
pop
add
cmp
imul
sti
and
push
pandn
pop
pop
add
add
out
out
adc
push
sbb
cmp
outs
rcr
adc
or
rol
in
pop
sbb
jmp
int3
or
sub
and
sub
out
add
push
add
call
mov
in
je
out
adc
lock
je
add
cmp
pop
mov
clts
clc
cmp
jno
cld
addps
dec
and
jne
in
pop
sbb
add
sub
push
push
pop
movs
adc
popa
xchg
fs
pop
adc
pop
push
xchg
push
pop
movs
push
push
push
sub
push
shr
lods
add
in
mov
ins
and
mov
jne
adc
pushf
and
clc
mov
int
jecxz
call
ss
(bad)
jg
test
push
push
je
call
jmp
call
and
mov
mov
or
ds
ret
call
cmp
repz
(bad)
call
call
jb
das
test
sub
pop
aad
fs
mov
call
adc
inc
xlat
add
mov
mov
or
pcmpgtd
mov
cs
mov
adc
in
enter
retf
pop
adc
pop
pop
or
addr16
sbb
push
pop
add
dec
or
fbld
adc
lea
sbb
pop
cwde
and
or
fadd
and
pop
push
mov
sub
addr16
sbb
test
push
push
push
les
xor
or
(bad)
out
mov
lds
fcom
(bad)
and
mov
xchg
fnsave
and
call
and
sar
pop
mov
push
and
or
int
push
call
sub
mov
pusha
(bad)
call
add
inc
inc
mov
jp
pop
jmp
out
pop
or
add
es
(bad)
cmp
xchg
and
bsf
adc
pop
inc
pusha
dec
and
mov
or
fist
mov
cs
or
or
mov
hlt
ja
push
push
jne
mov
imul
inc
lahf
pushf
push
retf
inc
pop
sub
or
jne
inc
adc
mov
jg
or
cmp
jle
push
mov
mov
mov
fld
(bad)
test
mov
stc
call
call
inc
and
or
xor
sti
inc
and
inc
sub
mov
push
xchg
out
ja
mov
mov
mov
and
pop
mov
or
std
dec
test
mov
mov
fisttp
mov
rcr
and
adc
adc
cmp
mov
and
pop
add
fstp
mov
mov
pop
fistp
out
cmp
add
xchg
push
cmp
jle
shr
mov
sub
mov
aaa
sub
jne
jnp
mov
icebp
inc
jmp
mov
push
or
inc
ret
add
push
adc
in
dec
je
sub
cmp
mov
pop
dec
(bad)
jge
xor
and
fist
je
add
mov
inc
adc
mov
push
out
add
imul
add
dec
test
je
sub
ja
arpl
call
adc
cmp
push
dec
adc
lds
push
cmp
xchg
or
inc
pop
mov
(bad)
fcomip
jmp
mov
fild
test
fild
cmp
xchg
pop
neg
add
xor
sti
fmul
fsubrp
fmul
inc
(bad)
xor
inc
cmp
repz
ret
aas
add
idiv
fstp
fcom
cwde
fadd
push
inc
sub
adc
pop
sbb
sbb
out
cmp
hlt
mov
inc
or
jecxz
jne
movs
mov
mov
dec
or
pop
ret
je
push
push
push
sbb
mov
sub
add
mov
fxch
test
dec
adc
mov
dec
or
test
je
or
stos
into
jge
lock
inc
cmps
mov
jge
mov
test
loope
mov
in
jne
sub
test
push
or
int3
xor
and
test
pop
mov
pop
sti
or
fdivrp
pop
fmul
(bad)
mov
xchg
xor
cmp
or
jecxz
or
mov
not
pop
lock
mov
aas
(bad)
fs
push
adc
inc
outs
sbb
or
lock
neg
cmp
pop
jge
or
push
add
fwait
and
inc
and
cmp
inc
cmp
push
fwait
mov
in
jle
or
mov
outs
sbb
add
or
sub
imul
mov
clc
mov
or
add
add
call
mov
adc
inc
cmp
jl
push
jl
jnp
(bad)
(bad)
or
jmp
xor
or
inc
sbb
ja
out
dec
inc
in
xchg
add
mov
fs
xor
and
pop
adc
int
adc
mov
mov
or
or
adc
adc
hlt
(bad)
(bad)
call
cmp
mov
imul
mov
lea
mov
imul
mov
shl
sub
and
sub
mov
ret
or
(bad)
(bad)
mov
or
(bad)
sar
mov
lea
lea
mov
imul
mov
lea
jmp
jb
push
sub
loop
sub
mov
pop
mov
pop
mov
dec
shr
pop
cmovne
push
jl
test
adc
shl
jne
pop
adc
jecxz
xor
int3
repnz
pop
ss
jno
repnz
adc
sbb
clc
adc
scas
inc
inc
push
or
mov
mov
push
lock
scas
dec
xor
and
sti
ja
repz
adc
call
les
(bad)
ja
cli
or
test
je
jl
push
mov
add
mov
mov
std
mov
add
push
cmp
rcr
push
or
pop
or
sub
add
fistp
or
loop
lea
mov
mov
or
jmp
mov
pop
xchg
int3
add
out
sar
pop
sbb
daa
or
sbb
dec
shr
mov
test
mov
jle
mov
lock
sti
mov
add
dec
jne
mov
xchg
clc
sbb
rol
(bad)
add
sbb
std
lds
jne
dec
dec
shr
inc
mov
mov
add
(bad)
mov
aam
add
add
dec
and
pop
xchg
adc
jne
iret
lea
sub
cld
inc
sbb
adc
jmp
pusha
sub
cmp
mov
fdiv
inc
mov
or
pop
adc
into
add
das
adc
jmp
call
sbb
lea
(bad)
clc
outs
adc
dec
add
push
dec
dec
jne
pop
pop
retf
call
rol
sub
jbe
lea
pop
and
push
inc
jmp
lea
rcl
sub
shl
test
scas
mov
inc
cdq
je
xor
je
push
sub
mov
stc
sub
(bad)
jle
mov
push
inc
pop
lsl
inc
mov
add
out
mov
mov
add
pop
xor
cmp
xlat
add
(bad)
(bad)
out
test
inc
sar
mov
lea
mov
sar
add
sar
mov
fld
add
sub
mov
into
std
or
sub
dec
mov
xchg
call
and
das
sbb
adc
add
pusha
mov
test
inc
and
xor
aaa
adc
dec
and
lea
sub
xor
or
xor
mov
cwde
pop
lea
push
xor
sar
mov
push
call
dec
sub
xor
ror
scas
(bad)
push
(bad)
pop
sub
retf
sar
lock
(bad)
(bad)
jp
lea
sar
mov
inc
inc
dec
jne
xchg
pop
add
mov
adc
aad
cli
call
inc
add
jnp
jae
ds
cmp
lods
mov
mov
mov
mov
mov
xchg
add
daa
push
or
(bad)
mov
push
add
push
push
push
sub
push
call
aaa
hlt
add
jne
sbb
loope
or
pop
add
inc
push
inc
mov
mov
dec
adc
jmp
jg
dec
dec
and
mov
cdq
idiv
cmp
out
push
xor
push
shl
fisttp
clc
add
dec
cld
ret
or
and
xchg
xchg
and
enter
cmp
aaa
popa
sbb
fstp
shl
add
mov
lea
mov
(bad)
(bad)
mov
adc
sar
pop
and
jne
ja
call
mov
sub
lea
mov
lea
and
call
dec
cmp
je
mov
mov
jmp
pop
pop
mov
mov
pop
adc
or
and
mul
test
or
mov
sub
pop
and
(bad)
daa
iret
and
jmp
xor
xor
jmp
cmp
sbb
mov
mov
push
and
je
lea
(bad)
in
(bad)
jae
add
mov
mov
mov
jmp
or
inc
sar
add
jno
xlat
add
sbb
mov
ror
push
mov
mov
mov
mov
cmp
jge
cmp
add
cld
fistp
jl
jmp
or
bnd
cmp
jl
mov
xchg
adc
lds
push
(bad)
jg
mov
jge
cmp
jge
cmp
jl
jle
(bad)
sbb
(bad)
pop
pop
mov
pop
or
ret
jl
std
xchg
out
pop
add
call
adc
mov
add
inc
add
add
inc
xchg
inc
and
aas
xor
pop
and
push
mov
call
lea
jmp
aam
icebp
add
in
xor
mov
push
dec
xchg
lea
jnp
or
je
mov
mov
shl
mov
sar
add
xlat
mov
iret
xlat
fxch
cmp
call
xlat
call
ja
xlat
lds
or
call
adc
ja
sbb
sub
(bad)
mov
(bad)
ss
or
dec
add
mov
push
movzx
add
add
push
push
fnsave
arpl
add
adc
mov
adc
je
jb
xlat
adc
fs
add
sbb
div
js
push
cmp
fild
loopne
lea
aaa
ret
lea
or
inc
push
sbb
xor
pusha
arpl
fsubr
push
cmp
inc
imul
js
jo
pop
ret
push
ss
ret
xor
jo
add
movzx
add
jg
add
movzx
add
add
pop
add
fs
es
inc
jg
xor
cmp
cmp
jge
(bad)
movzx
sub
cdq
mov
pop
adc
push
shl
sbb
call
xor
sbb
jae
or
or
scas
or
or
pop
inc
or
mov
pop
pop
push
push
enter
add
jb
add
add
and
xchg
mov
add
adc
ret
ficom
femms
add
lea
clc
mov
add
add
inc
cmp
jl
out
mov
out
popf
mov
fiadd
mov
(bad)
dec
or
sub
adc
int3
std
xchg
outs
push
add
sub
jl
add
add
inc
push
adc
add
int
xlat
imul
add
add
dec
add
add
push
add
push
add
push
push
jle
shr
jp
call
pusha
mov
mov
mov
cli
xchg
push
push
add
mov
test
sbb
retf
mov
and
enter
dec
sub
lea
xchg
mov
or
add
xor
dec
add
dec
cld
fstp
pop
fnstsw
retf
and
sub
lea
mov
bswap
(bad)
mov
or
inc
sbb
jmp
scas
out
add
mov
mov
cmp
jg
lock
inc
cmp
push
cmps
out
sbb
sbb
pop
in
push
push
push
lods
fwait
cmp
jge
mov
and
test
add
inc
inc
mov
adc
mov
jle
jno
mov
inc
add
cmp
jle
xchg
pop
mov
sub
dec
xor
mov
push
into
lahf
jp
cmovb
movs
lahf
sub
mov
mov
fs
or
adc
mov
mov
mov
cmp
mov
shufps
loop
inc
fnstsw
out
(bad)
cmp
fdivrp
cmp
mov
sbb
call
call
pop
jg
ins
add
mov
cmp
jg
adc
cmc
adc
mov
push
scas
jmp
int3
scas
and
cmp
(bad)
xor
add
cld
pop
xchg
ins
jg
inc
cs
pop
inc
add
cmp
jle
jo
ja
cld
sub
and
inc
or
add
cmp
jle
gs
cdq
mov
pop
mov
mov
add
mov
adc
int
int3
cmp
add
clc
aaa
fcomp
inc
and
push
push
mov
lea
lea
inc
dec
push
cld
adc
mov
push
ret
rcl
mov
sub
sbb
int
or
inc
cld
test
je
jg
add
cmp
jl
dec
jg
ja
inc
lea
cmp
jl
adc
jg
mov
xor
cmp
setne
sub
jmp
push
dec
add
test
sbb
sbb
test
add
inc
or
jge
xor
cmp
rol
dec
xor
inc
outs
xor
scas
inc
and
add
add
push
call
mov
in
cwde
and
jge
(bad)
mov
pop
jo
rol
add
mov
mov
push
and
inc
inc
cmp
adc
jle
push
inc
cmp
jle
pushf
cmp
adc
cmps
jmp
ret
lea
or
pusha
clc
sbb
ret
inc
movs
sar
sub
and
mov
cmp
or
pop
push
push
inc
push
lea
fistp
pop
adc
in
adc
je
icebp
jno
inc
fdivr
push
jle
sub
cld
(bad)
loop
mov
mov
push
call
enter
test
je
jmp
and
mov
fs
shl
mov
sub
call
inc
shl
mov
(bad)
in
jg
add
fist
add
sub
dec
dec
push
sti
jl
je
inc
inc
pop
cmp
inc
and
sbb
adc
push
push
push
call
push
test
(bad)
jge
and
add
add
push
leave
aad
call
les
rcl
ja
mov
pop
mov
pop
std
call
push
push
lea
call
fwait
leave
dec
push
inc
dec
fcom
or
std
cmp
fwait
data16
push
repnz
sbb
pop
xchg
mov
inc
fwait
push
aad
push
fsubr
fs
mov
mov
or
sub
or
push
xor
aad
mov
push
mov
pop
pop
(bad)
pop
ins
push
fild
inc
in
xchg
jbe
mov
push
push
cmp
push
call
je
sbb
sar
mov
jp
aaa
lock
push
movs
push
push
push
jnp
mov
gs
addr16
push
sti
xchg
mov
sbb
mov
jnp
mov
js
inc
iret
sub
fcmovnbe
inc
pop
inc
cmps
xchg
mov
add
push
mov
stos
sbb
stos
or
retf
xor
ds
call
adc
push
outs
(bad)
inc
mov
inc
and
ja
cld
in
fidivr
nop
or
push
pop
es
or
jmp
pop
mov
pop
loop
add
out
mov
push
push
xor
call
jne
mov
push
mov
test
mov
pop
sub
adc
push
sub
or
add
add
add
add
add
nop
add
dec
jmp
xchg
mov
lea
movzx
or
add
sub
and
ins
add
jno
or
sub
pop
mov
pop
ja
pop
push
fmul
add
sbb
jbe
jne
mov
(bad)
call
ret
int3
int3
push
lock
push
mov
adc
rcr
sar
add
scas
outs
cmp
mov
call
inc
or
sti
pop
outs
add
lea
push
int3
or
(bad)
dec
scas
ret
adc
ret
add
pop
pop
jge
je
inc
push
inc
add
or
(bad)
(bad)
dec
mov
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
or
fnsave
or
mov
mov
mov
mov
mov
and
mov
loopne
pop
jg
adc
dec
fmul
cmp
enter
frstor
and
enter
shl
push
in
xor
inc
adc
idiv
ret
push
mov
sbb
jmp
mov
adc
jmp
(bad)
jnp
test
and
lea
dec
loopne
mov
add
lea
xor
lea
pop
inc
cmp
in
xchg
mov
sbb
add
rol
jne
mov
dec
add
aas
inc
mov
test
mov
inc
mov
pop
dec
mov
push
push
imul
add
add
push
cs
cmovb
int
fcomp
fimul
adc
loopne
mov
push
add
xor
pusha
push
lea
push
loopne
inc
mov
mov
clc
cli
inc
or
pop
or
pop
fs
push
push
push
test
push
lods
mov
call
shr
out
inc
add
cmp
jle
popa
mov
or
push
pop
jg
shl
sbb
(bad)
ja
add
test
(bad)
call
push
shl
cmps
or
cmp
jne
popa
pop
mov
mov
mov
mov
add
shr
clc
inc
jecxz
(bad)
sbb
mov
sbb
mov
sub
test
adc
or
je
fs
xchg
fild
fmul
cmp
fsubr
(bad)
dec
call
fld
fcomp
mov
fnstsw
test
jp
mov
add
add
shr
push
ror
dec
fsubp
push
sub
fmul
fmul
out
sbb
cs
push
test
sti
or
xor
das
test
dec
lds
call
mov
jge
xor
mov
pop
in
out
ret
sub
cmp
jle
push
adc
ficom
ret
out
inc
call
sbb
ins
adc
jle
mov
xor
test
jle
mov
mov
sbb
dec
and
mov
into
jo
jo
and
jle
mov
inc
aas
jl
pop
scas
sar
stos
mov
cmp
movs
ror
add
cmp
out
scas
adc
je
sub
sub
jge
fsubr
outs
jo
add
fmul
fmul
sbb
(bad)
dec
or
fdiv
cmp
and
xor
stos
sysret
fnstcw
ds
pop
jb
adc
cmp
mov
mov
dec
push
mov
push
mov
and
and
call
clc
lea
aaa
adc
add
js
add
sar
add
rcr
add
mov
push
mov
(bad)
aaa
mov
add
push
or
mov
add
add
dec
jne
jae
sbb
das
xor
sbb
push
mov
mov
imul
and
add
(bad)
(bad)
push
adc
scas
repnz
add
sar
add
mov
mov
mov
mov
add
ret
and
sbb
add
(bad)
out
int
aaa
xor
jo
add
pop
or
out
push
cmp
retf
push
ja
adc
and
gs
(bad)
(bad)
ffreep
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
adc
out
int3
aaa
xor
push
fcomip
xchg
adc
or
or
pop
les
mov
mov
cmc
dec
mov
add
mov
lea
test
(bad)
or
inc
and
add
pop
mov
ja
sqrtps
daa
add
(bad)
xor
inc
add
mov
adc
mov
call
or
fist
pop
andps
cmp
popf
jnp
add
mov
inc
add
not
fdivr
ret
movs
inc
cmp
mov
push
cmp
iret
movs
inc
ds
xchg
loopne
xchg
mov
retf
movs
bound
sbb
fsub
es
nop
hlt
jae
dec
jne
cmp
pop
call
push
lds
push
cmp
sysexit
int3
fisub
(bad)
adc
movs
mov
rcr
inc
push
rol
arpl
push
add
lea
sub
push
pcmpeqd
inc
push
and
push
xor
push
fdiv
adc
fiadd
mov
push
out
mov
mov
push
push
sbb
mov
mov
ret
fimul
movzx
lea
sar
mov
pop
mov
out
movzx
ins
add
inc
adc
cdq
inc
lods
push
adc
nop
jne
push
stos
push
ds
xchg
cdq
inc
ds
push
cdq
inc
ds
cmps
fcom
jge
ins
pusha
aas
pop
mov
movzx
sub
inc
xor
xchg
lods
push
lods
inc
lods
or
data16
sbb
sbb
into
pop
add
push
mov
pop
ds
aas
add
dec
jne
fiadd
mov
sub
sub
or
sub
adc
arpl
je
adc
add
pop
adc
call
out
mov
sub
lea
ja
in
add
and
inc
shr
jmp
dec
adc
stc
add
in
adc
mov
add
sbb
add
dec
adc
inc
add
ror
mov
sub
and
daa
repz
add
sbb
sub
sub
int3
xchg
sbb
adc
sub
imul
add
adc
lea
xlat
icebp
sbb
sar
mov
add
push
add
bound
scas
and
div
test
and
sbb
mov
stc
inc
push
fwait
and
xlat
enter
pop
add
add
dec
shr
pop
sub
add
call
jne
pop
and
sub
(bad)
fisttp
test
push
mov
je
jge
mov
ret
std
dec
adc
ret
cdq
jne
push
mov
lea
jmp
jl
sub
or
adc
mov
mov
xor
and
mov
cmp
sar
xchg
test
pop
rol
mov
inc
adc
aas
push
jne
mov
xchg
cld
inc
mov
adc
jae
pop
and
(bad)
repz
sbb
lock
lea
mov
add
loope
(bad)
ffreep
push
lea
cmp
daa
sbb
jmp
std
pop
icebp
lea
xlat
mov
call
aaa
test
and
mov
cwde
pop
pop
jmp
in
adc
jno
adc
into
call
or
mov
mov
call
inc
and
fadd
fsubr
pop
or
mov
call
inc
add
mov
add
cmps
jmp
add
das
stos
xor
mov
push
add
rol
adc
dec
adc
cli
adc
mov
scas
ins
sar
shl
and
or
sbb
add
inc
mov
mov
jns
pop
data16
ja
add
dec
aad
mov
mov
push
mov
aaa
hlt
jecxz
les
call
mov
(bad)
mov
out
fwait
loopne
and
and
mov
push
xchg
lea
mov
inc
push
or
cld
out
pop
mov
xchg
rsqrtps
add
lock
adc
push
cmp
call
push
mov
cmp
and
push
jmp
or
push
sub
ds
pop
and
mov
std
pushf
and
inc
adc
scas
add
pop
push
jae
sub
pop
or
mov
adc
sbb
cli
add
sar
(bad)
inc
stc
mov
mov
add
add
add
mov
cdq
mov
xor
sub
mov
cdq
lds
(bad)
jg
xor
repnz
mov
mov
shl
adc
out
cli
jg
cmp
sbb
xchg
lsl
sar
sar
or
aas
pop
push
dec
retf
mov
inc
xor
sub
adc
retf
lock
mov
and
adc
mov
bound
sar
or
push
mov
inc
adc
jo
mov
test
sbb
rol
pop
xor
inc
aas
movs
sahf
int3
mov
ins
mov
cdq
mov
imul
stos
clc
adc
call
es
sbb
out
jnp
es
dec
adc
ror
sub
sub
ins
rcl
lea
add
and
push
mov
mov
xor
mov
sub
or
jl
sbb
mov
(bad)
stc
adc
mov
jmp
and
movsx
lea
mov
push
sub
sbb
add
cwde
and
movups
lahf
popf
mov
jno
or
das
mov
xor
inc
mov
(bad)
aas
cmp
jmp
push
jg
jp
shl
push
adc
int
in
jle
add
imul
aaa
add
sub
sar
mov
(bad)
outs
test
adc
in
and
add
sub
add
sbb
mov
xchg
add
dec
jge
imul
mov
jbe
add
imul
(bad)
std
mov
sub
imul
jnp
sub
sbb
movs
adc
jl
xor
adc
(bad)
bound
leave
mov
test
and
sub
lea
mov
dec
dec
and
mov
jg
lea
pop
or
jl
sbb
mov
adc
add
je
adc
mov
rol
pop
push
call
sbb
push
pop
xchg
and
add
je
inc
mov
sub
les
mov
mov
xor
mov
mov
mov
or
mov
sub
lea
and
and
lea
mov
inc
sti
cmp
cmp
pop
cmp
jbe
add
nop
mov
(bad)
jg
iret
jbe
lea
sub
mov
lea
sub
mov
mov
add
out
out
ds
sbb
lea
inc
adc
sbb
ficom
xor
sub
dec
cmp
sbb
adc
add
adc
pop
rep
and
jecxz
adc
or
std
add
xor
cld
jae
add
leave
pop
ror
add
sar
push
out
jle
cld
stc
adc
xchg
adc
pop
sbb
lea
or
(bad)
or
sbb
xor
xabort
fldcw
adc
or
(bad)
cmp
cmp
cwde
sar
sbb
lea
mov
(bad)
jg
cmc
sbb
mov
adc
aad
(bad)
adc
and
clc
out
loopne
jo
fldcw
sar
mov
add
add
or
and
test
cmp
lock
(bad)
shl
xor
(bad)
sar
inc
rcl
pop
inc
mov
mov
pusha
mov
jnp
or
or
shr
mov
mov
mov
sbb
cld
jmp
or
dec
pusha
inc
push
arpl
out
mov
mov
add
xor
add
dec
aaa
pop
xor
movs
xchg
bound
sub
add
data16
mov
adc
enter
ja
xchg
sbb
jmp
in
pushf
sub
cwde
lea
xor
jecxz
xor
mov
sub
cmp
jo
add
and
push
push
xchg
and
push
xor
and
or
lea
clc
lock
sbb
push
adc
sub
imul
and
fwait
pop
sbb
sbb
imul
fist
not
add
sbb
retf
loopne
das
and
jmp
repnz
(bad)
adc
adc
push
mov
add
nop
jge
pop
lock
and
add
shr
fist
out
cli
jbe
add
mov
std
jl
xor
pushf
aaa
adc
mov
mov
(bad)
out
xchg
mov
(bad)
or
dec
mov
(bad)
outs
out
sub
dec
xor
add
mov
jg
mov
mov
jle
ja
out
dec
sub
test
or
mov
mov
push
add
push
ret
js
icebp
cmp
rol
cmp
js
dec
adc
pop
or
push
sbb
ja
sar
jno
jle
mov
or
or
fcomip
fbld
or
or
or
inc
and
outs
adc
mov
add
sar
mov
mov
dec
iret
xor
idiv
mov
push
add
add
psubb
(bad)
mov
test
add
push
imul
call
pop
int
rol
mov
sub
mov
mov
lea
sub
sub
loope
shl
mov
lea
sub
lea
js
pusha
jo
and
mov
or
bound
xor
or
or
lds
and
add
sbb
ds
hlt
fadd
imul
adc
test
push
jecxz
add
aad
imul
rcr
das
and
imul
jle
adc
retf
(bad)
out
add
mov
and
pushf
push
std
sbb
arpl
icebp
loope
push
and
adc
pop
jl
or
jo
lea
idiv
adc
stc
and
add
sbb
loope
cmp
adc
sti
adc
jae
stos
iret
aas
add
ret
pop
cs
movs
xchg
and
(bad)
into
int
jnp
mov
sub
arpl
or
rol
add
push
push
je
test
add
cld
(bad)
je
test
jns
add
(bad)
jmp
and
inc
(bad)
inc
add
test
jecxz
cmp
inc
add
add
ds
ss
dec
add
and
mov
cmps
or
jp
mov
dec
cld
dec
add
and
ret
sub
test
fild
aas
fild
fbstp
cmps
jo
add
fcomip
leave
and
fist
sbb
shr
adc
mov
mov
fistp
jg
rcl
fbld
xchg
mov
fbld
or
cmp
lock
and
(bad)
add
xor
fild
inc
inc
push
sbb
sub
mov
add
add
fbstp
push
sbb
or
xor
inc
mov
pop
and
push
(bad)
inc
adc
mov
mov
mov
mov
(bad)
mov
push
adc
fisttp
fisttp
fiadd
sbb
fimul
cli
jg
inc
or
jne
mov
jl
mov
fs
out
retf
call
shl
inc
add
cs
sub
and
imul
xor
and
xchg
icebp
imul
sbb
mov
adc
cs
inc
lods
sub
push
addr16
jo
inc
xchg
adc
xchg
out
adc
imul
adc
cs
mov
mov
or
fiadd
or
into
mov
sub
cdq
sbb
ret
aas
push
cli
adc
ins
inc
aas
mov
mov
cmp
xchg
ja
jae
je
mov
adc
clc
or
and
sub
push
mov
sbb
js
mov
out
inc
inc
pop
push
sub
fist
and
loop
rcr
mov
js
pop
jl
sbb
or
pop
and
jbe
sbb
(bad)
imul
adc
call
inc
ror
mov
inc
sub
jge
pop
adc
and
mov
(bad)
pop
and
shl
xor
mov
sub
cdq
and
pop
nop
xor
or
pusha
jp
imul
or
push
adc
fidiv
cmp
cmp
or
lea
addr16
pusha
in
imul
call
jge
sbb
std
adc
into
cmp
or
arpl
inc
cmp
(bad)
jnp
and
sbb
inc
loopne
mov
adc
mov
sbb
rol
xor
add
add
pushf
pop
(bad)
jmp
inc
add
shr
sbb
add
ret
gs
xor
ins
mov
inc
sub
inc
ins
and
test
push
mov
mov
mov
(bad)
(bad)
xor
outs
add
inc
and
mov
in
add
jo
add
jo
jg
(bad)
mov
adc
ja
in
sub
push
add
out
mov
sub
mov
sbb
inc
(bad)
mov
movq
add
or
or
or
mov
or
or
or
jne
mov
mov
(bad)
cwde
mov
add
add
push
inc
pop
xor
inc
fild
inc
inc
(bad)
out
js
or
ins
xchg
lea
imul
std
inc
sbb
push
psrldq
sub
mov
mov
adc
add
sub
adc
fiadd
paddd
pshufd
or
pmuludq
mov
jne
hlt
or
in
clc
push
les
cmp
and
out
ja
pshufw
test
cmp
sub
sbb
pop
push
inc
in
sbb
mov
adc
dec
and
sub
jo
call
inc
(bad)
mov
dec
inc
icebp
dec
xor
enter
jmp
sar
or
add
retf
psubd
(bad)
fmul
add
psrad
add
out
mov
inc
leave
sbb
imul
push
push
sbb
enter
sub
movd
add
outs
fdivr
jo
adc
outs
loope
pand
outs
call
add
adc
fisub
jno
mulps
es
adc
lds
push
xchg
popf
inc
jmp
movdqu
mov
and
neg
push
push
lods
pop
adc
scas
test
xor
push
push
mov
mov
mov
mov
xor
jbe
dec
mov
jnp
popf
mov
or
push
push
je
test
call
sub
ret
sbb
cmps
adc
(bad)
sti
inc
inc
and
idiv
call
(bad)
inc
stos
lahf
mov
movs
xchg
loop
lds
cwde
and
mov
xor
pop
pop
mov
out
pop
pop
pop
and
cmp
pop
cmp
adc
or
mov
or
adc
inc
fs
add
xchg
push
(bad)
jo
test
aam
or
loope
frstor
out
fucomip
pushf
add
out
cli
sbb
jbe
jo
lea
add
icebp
cmc
push
nop
sar
fs
shl
fsub
imul
or
retf
sbb
out
jmp
shr
(bad)
inc
mov
jno
sub
out
mov
ficomp
je
pusha
pop
or
fst
jno
jecxz
push
icebp
in
jo
aam
stc
punpckhdq
push
in
sbb
bound
pushf
adc
mov
sbb
inc
shl
sub
std
mov
pop
scas
jo
in
mov
hlt
(bad)
(bad)
outs
xchg
outs
inc
fcmovnu
xor
jo
sub
fmul
cmps
in
dec
(bad)
jle
xlat
or
movd
jnp
xchg
push
loopne
cmp
aaa
mov
mov
jg
adc
and
dec
jne
cmc
js
inc
loop
nop
int3
bound
fsub
mov
dec
mov
push
pop
mov
adc
inc
mov
dec
mov
mov
jno
adc
(bad)
or
test
jae
pop
mov
cmp
mov
test
imul
sbb
pop
xor
adc
pop
out
fiadd
addr16
jge
sub
and
out
adc
loopne
sbb
inc
mov
mov
sub
add
pushf
and
push
or
cli
xchg
data16
jl
inc
mov
jge
pop
dec
je
dec
sub
and
nop
lea
stos
sub
xchg
js
clc
add
icebp
sub
jg
and
cmp
inc
sub
lock
add
mov
push
jp
push
or
pop
pop
aaa
sti
outs
and
mov
jne
call
outs
cmp
int3
mov
fist
and
and
jl
fdiv
mov
ins
cmp
sub
jg
cmp
cli
push
xor
sbb
fwait
sbb
xchg
cmp
inc
outs
inc
(bad)
adc
xor
sbb
loope
xchg
pop
into
aas
mov
jg
das
outs
xor
out
inc
lea
push
outs
sub
out
fadd
sub
jb
add
xor
outs
outs
xor
(bad)
out
jae
ins
dec
inc
hlt
pop
jae
call
or
sub
dec
xchg
dec
sub
push
or
dec
jne
inc
out
push
bound
ins
outs
inc
ja
addr16
div
sub
push
push
into
jle
test
loopne
push
hlt
cmp
dec
scas
mov
bound
aaa
inc
jns
arpl
sbb
dec
loopne
xor
inc
sub
push
(bad)
sub
push
(bad)
mov
pop
push
or
ja
mov
loop
inc
inc
mov
std
punpckldq
ins
outs
jl
sbb
outs
ret
mov
add
and
jae
adc
jb
hlt
das
ds
outs
mov
dec
cmp
inc
jae
fidiv
jge
out
mov
and
retf
mov
jae
push
pushf
and
and
adc
imul
jae
cmp
adc
das
icebp
inc
out
push
icebp
das
pop
mov
xchg
and
loopne
adc
push
das
sub
retf
xor
loope
mov
pop
jns
inc
lea
mov
outs
sbb
rol
xor
and
mov
outs
push
hlt
push
(bad)
mov
ret
nop
jg
mov
push
je
jne
ins
dec
dec
pop
mov
aaa
push
push
je
cs
dec
ins
pop
pushf
shl
test
js
sbb
push
mov
sbb
(bad)
addr16
jne
dec
iret
cdq
cmp
push
jb
cmp
clc
sub
push
mov
cmp
movs
test
bound
test
mov
test
mov
xchg
imul
push
xor
sbb
cmc
fcmovnbe
icebp
std
(bad)
jb
jne
jbe
into
jb
or
pusha
inc
shl
loopne
outs
test
repnz
pusha
cmp
test
sub
dec
add
in
push
inc
mov
pxor
movq
jmp
punpckhbw
paddw
paddw
inc
add
cmp
(bad)
(bad)
stc
or
movq
punpckhwd
punpcklwd
paddd
movd
psrlq
movd
add
emms
pop
pop
add
add
dec
pusha
inc
fist
jne
mov
dec
inc
adc
fisttp
out
call
(bad)
(bad)
jmp
movq
psubusb
psubusb
movq
movq
movq
por
jno
idiv
icebp
fmul
fsub
(bad)
por
movq
jge
(bad)
(bad)
jg
pusha
fimul
push
paddw
inc
add
add
cmp
jne
mov
fld
pop
mov
out
pop
div
sti
xchg
push
movq
xchg
neg
fadd
movq
xchg
ficom
sti
lsl
cmp
jne
test
dec
sub
icebp
push
push
call
data16
xadd
adc
mov
cmp
mov
je
(bad)
adc
add
cmps
cmp
ret
mov
pop
ret
push
mov
cmp
fwait
or
fadd
mov
push
call
loope
push
adc
push
mov
sub
xor
adc
ja
hlt
sahf
popf
cmp
ja
dec
je
cmp
add
jae
test
shr
jne
(bad)
mov
push
test
ins
test
ja
shl
push
call
adc
adc
add
adc
maxps
jg
mov
push
call
rol
sti
fiadd
sbb
xor
pop
fdivrp
dec
ror
fnstsw
sti
push
sbb
add
add
scas
mov
cmps
and
add
sbb
ret
or
add
push
sub
xor
push
les
fnstenv
ja
test
push
lea
push
push
call
fcomp
sub
add
out
lea
and
push
push
mov
push
push
call
add
fwait
cmp
(bad)
aad
cmps
in
dec
rcr
ja
cs
xor
gs
outs
sbb
or
outs
jmp
dec
mov
cmp
jne
mov
and
cmp
ud0
ffreep
test
mov
push
mov
mov
mov
shr
shr
hlt
(bad)
(bad)
(bad)
shr
push
and
mov
shr
lock
and
cmp
jp
test
je
mov
dec
movzx
mov
shr
cmp
je
fild
add
je
and
sub
cs
adc
test
(bad)
(bad)
out
lock
mov
je
sar
imul
add
mov
jmp
or
fmul
sbb
je
dec
je
dec
jne
int3
mov
mov
dec
mov
test
je
sar
xchg
sar
shr
and
ja
fstp
sbb
lea
shl
cdq
idiv
add
shl
jmp
cmp
jne
test
mov
mov
jne
scas
ret
div
and
mov
mov
dec
je
dec
je
dec
call
sub
inc
add
cmp
jbe
pusha
outs
or
shr
or
pop
or
test
cmp
mov
jmp
xor
test
setne
div
sbb
lea
add
fild
sbb
(bad)
mov
rcl
inc
or
dec
or
shl
cmp
setne
mov
inc
xor
pop
ret
fmul
ret
pop
xor
or
fiadd
test
push
je
mov
mov
cmp
jne
mov
jecxz
mov
dec
jne
xor
pop
ret
dec
mov
mov
call
into
xor
cmps
aas
test
mov
mov
push
adc
neg
adc
lods
and
mov
jp
add
popf
or
xchg
(bad)
push
fcomp
shl
push
rol
std
cmp
adc
dec
sbb
xchg
mov
pop
mov
test
in
stos
mov
cwde
add
sub
mov
inc
xor
mov
xor
inc
adc
or
or
and
ret
add
sbb
outs
push
inc
jae
xchg
mov
test
je
adc
cmp
shr
mov
adc
push
call
xchg
add
pop
pop
and
adc
mov
pop
or
call
mov
jbe
sub
(bad)
mov
cmp
xchg
push
call
shl
jmp
hlt
(bad)
clc
ret
mov
add
mov
mov
call
sub
mov
enter
xchg
mov
call
inc
jmp
xor
test
mov
je
push
call
call
and
pop
and
jne
jbe
(bad)
mov
lea
push
call
sbb
pop
jl
adc
es
xor
or
les
out
inc
int3
inc
aaa
call
clc
mov
les
dec
xchg
ror
bound
(bad)
aaa
mov
adc
dec
add
mov
call
das
out
add
jns
sbb
mov
push
sti
or
dec
pop
add
push
add
add
mov
pop
add
daa
out
test
inc
xor
enter
and
dec
or
cwde
test
sar
mov
mov
mov
retf
xchg
out
push
mov
add
js
xor
gs
mov
mov
mov
not
test
mov
(bad)
mov
mov
sbb
mov
leave
mov
cmp
jb
lea
mov
ins
mov
mov
in
dec
xchg
jmp
das
inc
mov
mov
je
dec
jne
mov
add
inc
sahf
or
aaa
cld
int3
int3
push
xor
push
and
jle
push
jg
iret
mov
mov
mov
std
jmp
mov
pop
sbb
and
or
mov
call
ret
int3
leave
sbb
cmc
and
and
push
push
push
lea
or
rcr
add
sbb
mov
adc
mov
lds
int
xchg
mov
mov
adc
pop
jmp
and
rcr
push
adc
mov
je
jno
call
sbb
mov
push
je
xchg
inc
xor
xchg
and
and
mov
push
or
mov
mov
call
sub
jne
pop
int3
sahf
loope
and
pop
push
aad
cmp
dec
(bad)
jne
add
out
or
mov
push
aas
dec
lea
imul
dec
mov
call
pop
jmp
adc
(bad)
int3
pop
call
xor
mov
xchg
mov
xor
adc
push
jg
sti
mov
jl
lea
rol
jmp
mov
pop
and
adc
shl
out
jle
push
and
xor
test
je
mov
bound
and
pop
jg
clc
add
add
pop
test
sbb
sti
std
push
mov
mov
ss
fldcw
xor
retf
sbb
(bad)
mov
(bad)
out
cmp
jne
push
mov
xor
mov
xchg
bound
shl
jl
mov
mov
(bad)
sti
cmp
aaa
mov
jbe
fcomp
mov
jnp
push
das
cmp
jl
iret
int
ret
add
pop
mov
push
dec
add
pop
mov
clc
ja
ret
push
mov
call
call
sar
pop
ret
dec
cwde
mov
cmp
into
sbb
out
int3
out
jg
(bad)
fist
call
add
call
mov
fnstsw
(bad)
loope
mov
push
mov
ret
call
je
push
adc
clc
retf
and
push
fld
call
pop
pushf
push
add
jo
mov
jge
pop
jbe
mov
sub
into
mov
pop
adc
or
jne
call
(bad)
(bad)
dec
add
push
jne
jne
(bad)
aad
int
mov
pop
mov
pop
in
(bad)
iret
cmc
sub
dec
cld
push
das
mov
add
push
loop
cmp
out
(bad)
and
push
int3
mov
(bad)
adc
loope
or
push
jo
shl
ret
(bad)
jle
push
push
push
push
lea
dec
mov
out
(bad)
(bad)
mov
into
mov
cmps
add
cld
mov
mov
mov
mov
mov
sbb
sub
fist
hlt
pop
sub
ror
inc
adc
mov
add
dec
jne
and
push
inc
add
jne
dec
jne
cli
sbb
add
mov
xchg
sub
push
mov
xor
mov
std
(bad)
std
call
ficomp
rol
and
test
sete
mov
lahf
or
inc
mov
mov
sbb
aas
mov
lea
js
mov
or
ds
lea
call
adc
pop
sti
sar
mov
adc
sub
add
add
inc
sbb
push
pop
loope
fist
stc
mov
pop
adc
or
loop
out
sub
xor
and
ss
jns
add
mov
ret
fnstsw
(bad)
push
lea
mov
mov
jmp
mov
mov
cmp
sbb
jle
mov
pop
lea
and
iret
dec
test
rcr
sbb
lock
inc
repnz
push
push
lea
into
and
les
push
push
adc
cmp
xchg
inc
sbb
lea
ficomp
push
push
call
add
add
adc
(bad)
mov
mov
xchg
add
pop
add
push
icebp
pop
pop
sbb
mov
idiv
ret
cwde
mov
lea
push
lea
mov
push
xchg
call
adc
outs
cmp
fnstsw
cmp
cmp
lea
call
push
push
call
out
into
mov
fs
fisub
push
push
int
cmp
fstp
inc
sbb
push
ror
call
enter
and
ret
and
adc
mov
cs
adc
cld
inc
sub
cmp
sbb
push
lea
push
and
mov
stos
add
fstp
fmul
adc
ret
aad
push
add
add
or
fistp
ret
pop
mov
jmp
ret
movs
jecxz
inc
cmp
test
mov
popa
js
xchg
lea
inc
shr
or
cmp
les
mov
mov
adc
(bad)
cmp
jle
mov
lea
ja
lea
mov
mov
or
push
lock
push
mov
call
inc
sbb
mov
clc
jl
cmp
fst
cmp
lea
shl
fldenv
test
ror
pop
cmc
cmp
add
leave
retf
cmp
cld
inc
cmp
jl
xor
dec
push
sbb
or
test
sub
and
push
lea
sbb
jb
int
jns
sar
or
sub
pop
sahf
jge
lea
or
push
add
(bad)
push
or
loope
jmp
and
jg
and
scas
sub
sbb
inc
and
cmp
aas
xor
loopne
sbb
xchg
and
mov
push
dec
push
push
push
mov
rcl
sahf
mov
cmp
jo
or
out
sub
inc
push
lea
test
(bad)
call
mov
out
fwait
mov
mov
cmp
jge
pop
pop
adc
in
xor
inc
or
or
fld
bound
push
lea
fbstp
push
push
call
push
mov
lea
push
push
push
mov
call
call
cmp
cmp
add
mov
cmp
mov
leave
mov
mov
mov
sub
mov
mov
jo
add
mov
mov
dec
and
and
leave
adc
push
sbb
je
mov
retf
cmps
outs
loopne
push
add
shl
xchg
loope
mov
test
add
rcl
pop
dec
daa
int3
int3
mov
test
mov
or
dec
and
leave
je
push
call
pop
lods
mov
xchg
xor
sbb
inc
adc
inc
jg
icebp
mov
mov
enter
mov
(bad)
fild
cmp
mov
and
mov
jl
or
mov
ins
sbb
sub
mov
sbb
add
and
cld
cmps
(bad)
jmp
mov
sidtd
sub
shr
or
dec
or
jle
ja
pop
add
adc
jmp
and
mov
sbb
hlt
out
scas
(bad)
sti
add
mov
pop
jbe
sbb
retf
pop
shr
cs
leave
enter
iret
shr
ds
push
push
mov
call
iret
shl
call
je
or
or
test
jle
add
sub
mov
dec
adc
sbb
ror
dec
and
add
push
in
mov
sbb
fsub
xor
or
xor
inc
in
adc
pop
push
cmp
xor
inc
and
push
leave
fiadd
cmp
xor
mov
cmp
cs
mov
shl
(bad)
(bad)
jmp
or
mov
mov
sub
cmp
jl
mov
mov
add
mov
mov
call
ss
movs
mov
rep
mov
mov
mov
add
ss
mov
int3
jmp
add
lea
add
and
sub
mov
push
jle
jnp
jg
icebp
sbb
pop
pop
pop
je
mov
pop
movups
pop
add
and
inc
adc
add
mov
and
or
call
std
inc
or
inc
adc
(bad)
mov
test
jle
sub
sub
cmp
and
jmp
dec
sbb
call
(bad)
dec
mov
add
inc
cmp
mov
jl
xchg
push
or
(bad)
jmp
fild
iret
dec
and
sub
test
pop
fnstenv
adc
cmps
sbb
ret
lods
pop
pop
mov
call
mov
mov
setne
cwde
in
add
call
cli
hlt
xor
mov
shl
cmp
jge
inc
cmp
icebp
stc
adc
shl
dec
push
mov
mov
shl
call
inc
and
adc
cwde
mov
mov
rcr
jbe
loopne
sbb
cmp
sub
and
or
fwait
aas
into
int
mov
xor
imul
inc
jo
push
fadd
sar
test
push
sub
add
shl
jg
push
add
ret
test
jle
pop
push
jg
jmp
mov
sub
cmp
mov
jo
mov
mov
(bad)
aad
mov
push
add
pop
jbe
adc
js
add
push
push
enter
mov
(bad)
call
shl
and
sub
cmp
mov
jl
test
jg
pop
inc
cmc
xchg
dec
add
push
jmp
adc
mov
cli
mov
mov
jg
sti
outs
and
mov
mov
add
mov
xchg
push
or
icebp
dec
jl
rcl
jne
test
mov
or
lock
jno
xor
cmp
retf
jmp
inc
inc
mov
mov
lea
pop
loopne
mov
xor
mov
ror
(bad)
mov
clc
mov
imul
pop
add
aam
imul
mov
mov
out
(bad)
out
cmp
cwde
mov
cdq
idiv
lea
cdq
idiv
add
and
jmp
imul
mov
pop
fild
push
fstp
fistp
jnp
xor
xor
mov
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
and
dec
sub
xor
dec
cmp
inc
mov
mov
mov
mov
mov
jbe
sub
mov
push
shl
sub
and
or
(bad)
sub
mov
or
and
mov
cmp
sub
dec
adc
push
rol
jmp
ss
adc
inc
or
fs
(bad)
out
xor
not
mov
and
xor
push
ins
call
pop
mov
and
shr
shr
push
ja
inc
jmp
mov
sbb
xor
(bad)
pop
inc
cmp
rol
js
test
(bad)
(bad)
(bad)
out
xor
jne
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
push
adc
add
sbb
xor
sbb
cmp
sar
shr
add
pop
mov
test
mov
mov
mov
sbb
mov
call
shl
sub
inc
xor
aam
cmp
xor
and
mov
mov
push
or
add
pushf
scas
cli
xchg
xchg
lea
mov
mov
inc
add
mov
or
ret
or
lea
call
and
inc
xchg
xor
pop
add
aas
in
jae
cmp
cmp
and
push
pop
xor
pop
jns
call
(bad)
sbb
mov
adc
or
push
lea
(bad)
call
and
sar
and
and
cmp
mov
jne
mov
push
jg
inc
inc
push
(bad)
sar
mov
add
and
jge
sub
mov
push
push
jbe
ja
das
add
fild
sub
pop
mov
call
adc
inc
push
je
out
xor
hlt
sbb
mov
xor
or
mov
mov
call
sti
add
std
push
mov
loopne
add
in
adc
cdq
dec
and
call
push
push
in
pop
fisttp
sbb
mov
test
sahf
pop
mov
sbb
pop
adc
mov
test
popf
mov
neg
shl
mov
(bad)
pop
adc
or
rol
into
inc
pop
mov
cmp
jl
inc
add
mov
or
inc
aaa
rol
and
sbb
jne
push
jg
adc
ins
and
mov
(bad)
call
xor
sub
mov
mov
and
pop
adc
mov
mov
inc
std
sbb
test
je
push
mov
es
inc
jne
cmp
jge
mov
dec
or
add
(bad)
scas
stos
lock
or
test
rcl
icebp
dec
and
call
repz
push
std
sbb
call
inc
mov
adc
cmp
sub
ret
(bad)
jl
mov
jmp
cmp
jge
jo
lea
scas
jge
fadd
sbb
cmp
inc
add
(bad)
pop
(bad)
add
mov
jge
jge
std
and
add
jmp
and
add
push
sbb
(bad)
mov
dec
jge
jne
inc
or
or
loopne
xchg
outs
mov
push
push
aad
stos
aaa
and
sbb
ja
jge
and
lea
aas
cmp
dec
jg
xchg
int
outs
xchg
push
and
mov
sub
cmp
ret
ret
adc
pop
adc
clc
jns
mov
jmp
or
(bad)
or
jle
push
cmp
out
push
add
dec
and
mov
lea
inc
inc
cld
push
ret
cmp
add
dec
test
jg
lea
cmp
inc
jge
adc
or
mov
pop
pop
mov
push
nop
arpl
pop
cmp
adc
inc
cmps
ret
mov
jne
aad
push
and
inc
and
mov
adc
pop
test
mov
idiv
dec
cmp
inc
add
inc
cmp
inc
or
inc
mov
pop
mov
mov
adc
aam
fld
fld
fdivr
jmp
leave
adc
inc
sbb
inc
and
inc
sbb
inc
and
rcr
fld
add
fadd
sbb
pop
push
loope
jne
fadd
fstp
test
fstp
fcos
dec
add
and
or
fstp
fxch
fsub
neg
and
push
sub
loope
or
out
mov
add
fdivr
out
mov
fxch
fsub
fmul
sti
(bad)
pop
and
fstp
cmp
push
adc
je
fmul
sbb
or
mul
inc
scas
rcr
popf
mov
xor
xor
pop
and
scas
sbb
fisttp
dec
nop
adc
movd
gs
outs
pop
pop
xor
mov
fstp
jbe
movmskps
pop
jo
pusha
cmp
or
lock
pusha
cmp
or
pusha
xor
or
lock
cmp
fsub
fmul
jle
(bad)
jns
fsub
fmul
sub
or
int3
jne
adc
mov
fmul
and
mov
fcom
pop
and
xchg
pop
and
add
mov
inc
test
xchg
push
inc
and
test
mov
or
jmp
adc
cmp
and
or
or
dec
or
sbb
js
(bad)
xchg
and
xchg
in
inc
sbb
mov
xor
push
(bad)
or
inc
xchg
popa
mov
jne
mov
out
pop
inc
js
jb
sbb
inc
or
outs
retf
hlt
ja
fadd
sub
fmul
and
std
add
pusha
xchg
adc
hlt
or
cmps
shl
dec
cmp
push
ret
add
jl
sub
shl
or
mov
sbb
fs
mov
mov
sar
lock
pop
pop
lock
pop
xchg
popa
mov
push
lea
mov
xor
stos
clc
pop
and
push
int3
push
mov
sub
mov
or
xchg
or
push
push
add
push
mov
mov
(bad)
pop
push
cmc
mov
mov
hlt
mov
shr
and
jg
jo
loopne
inc
call
jne
cmp
cmc
fisttp
lock
xor
sbb
jmp
mov
lock
sbb
jp
cmc
inc
and
(bad)
fsincos
jg
pop
mov
mov
lahf
inc
fmul
fld
or
idiv
leave
faddp
faddp
add
and
fmul
pop
jae
arpl
dec
mov
adc
aas
pusha
call
or
faddp
faddp
faddp
aaa
add
js
in
(bad)
out
loopne
mov
fistp
fistp
fistp
sub
jge
(bad)
jg
fldz
jg
pop
call
dec
lock
icebp
fstp
dec
fmul
ins
add
in
test
out
retf
faddp
imul
les
add
or
nop
dec
jg
xchg
fistp
test
jl
dec
hlt
shr
lea
out
mov
sub
cmp
neg
mov
test
adc
jle
and
push
pushf
mov
(bad)
call
add
js
jmp
lea
adc
mov
push
inc
js
pop
pop
jle
les
xor
test
ret
inc
jmp
ret
rcr
retf
repz
and
ret
or
jne
and
sbb
shl
sbb
data16
mov
stos
iret
sub
retf
pushf
and
mov
lea
lea
sub
add
inc
jl
inc
cmp
inc
inc
fld
fsub
(bad)
fmul
idiv
inc
leave
fstp
fstp
fld
fadd
fld
fadd
sbb
fistp
fstp
fld
fadd
fld
fadd
push
dec
mov
fstp
fld
fadd
fld
fadd
dec
and
pop
sub
inc
adc
inc
ins
fld
fadd
dec
push
adc
pop
xor
inc
adc
inc
push
(bad)
mov
cmp
pop
xor
inc
sbb
inc
fld
fdivr
mov
pop
mov
fadd
fld
sbb
mov
push
pop
sbb
pop
cmp
lock
xor
ins
adc
ret
pop
push
inc
ja
int3
fsubp
inc
ror
(bad)
jmp
int3
fsubp
fmul
fxch
fmul
mov
sbb
inc
out
mov
fmul
leave
fstp
fstp
cli
pcmpeqd
push
or
jno
sbb
dec
fs
loopne
mov
ins
or
push
add
arpl
fadd
fxch
fadd
mov
retf
fstp
fstp
fstp
fstp
fld
fadd
(bad)
jbe
movs
and
fsub
inc
sub
fnsave
popa
lds
js
retf
pusha
leave
call
pop
sbb
pop
or
(bad)
and
mov
(bad)
sub
(bad)
sub
(bad)
call
(bad)
js
pop
adc
pop
or
pop
add
add
inc
add
out
jbe
inc
or
adc
fdivr
(bad)
(bad)
inc
fadd
fxch
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fld
fsub
pop
inc
ret
(bad)
fmul
mov
in
aas
inc
shl
dec
add
arpl
cmp
jg
test
dec
or
arpl
clc
or
dec
xor
int3
arpl
dec
or
(bad)
mov
iret
arpl
xor
arpl
dec
adc
arpl
dec
sub
fmul
(bad)
jecxz
arpl
dec
adc
arpl
sub
arpl
sbb
arpl
dec
and
lahf
xor
fmul
out
pusha
sub
arpl
and
mov
pop
and
jmp
std
mov
pop
xor
pop
sub
pop
fisubr
sbb
jl
adc
fld
fld
out
call
or
push
(bad)
aas
arpl
fld
sti
ret
xor
pop
sub
inc
jg
xlat
mov
push
inc
sub
les
sbb
pop
inc
dec
pop
adc
inc
xor
xor
fstp
fstp
fcos
popf
cmp
pop
dec
fld
cmp
retf
pop
fstp
fstp
mov
push
ins
pop
pop
add
out
test
dec
mov
mov
mov
add
mov
adc
and
push
mov
xor
in
and
rcl
push
retf
loop
ret
jg
loop
adc
xchg
sub
inc
out
mov
and
jmp
mov
jmp
mov
pop
mov
int
shl
cli
out
jmp
mov
sar
test
je
mov
jne
jae
adc
adc
jmp
mov
sub
(bad)
push
and
mov
scas
push
adc
adc
and
adc
adc
jae
aas
adc
jg
sbb
sub
and
push
jle
add
add
and
jmp
(bad)
jmp
sub
je
dec
je
dec
jne
mov
add
lea
mov
call
mov
(bad)
(bad)
jmp
mov
add
lea
dec
lock
and
inc
sar
push
mov
push
call
sbb
clc
inc
inc
test
adc
dec
jne
adc
xchg
test
or
cmp
mov
push
mov
inc
pop
test
das
ret
sub
jmp
pop
push
lock
pop
dec
and
mov
push
xor
and
push
add
bound
and
and
add
xor
sbb
sbb
cli
add
push
in
vmovups
mov
sub
adc
addr16
sbb
int3
int3
push
lea
cmp
or
cmp
aaa
adc
and
sub
mov
(bad)
jg
sbb
and
loope
adc
fsubr
fst
fdiv
std
(bad)
push
or
sub
jecxz
cs
or
and
cmp
xor
or
sbb
out
call
fstp
fld
fadd
fsubr
or
ja
fucom
rcr
or
fstp
fstp
sub
and
fmul
cli
cmp
and
rcr
adc
sti
mov
dec
sub
and
fmul
jge
mov
pop
adc
fs
and
xlat
jne
xlat
pop
and
sub
or
xor
xor
mov
adc
fxch
fld
mov
pop
and
pop
sbb
and
retf
fadd
fld
push
fadd
sbb
clc
jmp
adc
leave
adc
es
mov
(bad)
loop
lahf
jmp
fadd
fst
adc
inc
rcr
mov
fadd
push
jo
sub
adc
fcom
popf
pop
or
inc
pop
push
je
or
mov
fist
add
sar
add
popa
adc
mov
(bad)
mov
dec
mov
mov
mov
mov
mov
(bad)
out
or
adc
inc
pusha
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
push
mov
sbb
call
(bad)
ja
mov
sbb
jmp
fwait
into
mov
lea
lea
sub
jnp
push
cmp
cmc
test
cmp
(bad)
inc
add
fadd
add
add
fstp
mov
fld
push
adc
aam
inc
(bad)
pop
add
mov
mov
fisttp
in
inc
adc
sub
inc
loopne
pop
fmul
jmp
imul
inc
in
pop
sbb
fld
fadd
fstp
mov
pop
push
icebp
xor
imul
pop
in
push
push
lds
aaa
inc
lock
mov
mov
(bad)
fild
dec
inc
hlt
fstp
mov
mov
dec
shl
sbb
cmps
dec
xor
jle
push
add
inc
xchg
scas
or
ret
ins
stos
jg
jl
xor
inc
inc
pop
inc
adc
pusha
and
pusha
inc
or
inc
test
xor
shl
jo
mov
js
out
std
cmps
mov
sbb
fcomp
inc
out
fucomip
xlat
cs
inc
xor
xor
fmul
xchg
jg
adc
or
inc
(bad)
sbb
push
or
fmul
call
fs
fsubr
lds
ss
jmp
fcomp
mov
sub
or
lds
and
pop
cmp
gs
pop
jae
mov
int3
inc
or
pop
dec
popf
xor
aad
jmp
ds
gs
fsubr
cmp
loopne
xchg
or
mov
int
clc
inc
sub
or
push
push
neg
les
fadd
inc
fld
xor
fmul
fstp
adc
fwait
test
test
fsub
shr
fadd
add
adc
mov
dec
repnz
sub
cmps
mov
adc
fld
clc
fsub
or
inc
mov
mov
fadd
(bad)
and
das
dec
push
jle
mov
(bad)
cmp
enter
inc
clc
or
adc
rcr
cmp
sub
mov
test
fadd
dec
sub
fsub
icebp
fmul
fadd
adc
adc
fadd
xor
and
jle
pop
fstp
adc
push
ins
add
push
fsub
jo
dec
adc
inc
adc
in
aad
jnp
adc
fadd
mov
adc
in
sub
sub
scas
sbb
fld
aam
push
mov
inc
lock
jbe
pop
sub
inc
sub
sub
pusha
mov
mov
loopne
repz
ss
dec
sbb
inc
ss
adc
fadd
addr16
push
sub
and
pop
es
jl
pusha
adc
add
fsub
fadd
mov
adc
fadd
and
fst
sub
adc
test
pop
je
sub
mov
fadd
popa
mov
daa
rep
pop
loop
adc
sbb
inc
push
fsub
push
(bad)
push
inc
mov
(bad)
(bad)
sti
fsubr
lea
loope
fst
fsubr
fst
(bad)
(bad)
(bad)
(bad)
fsubr
fst
fsubr
fst
fsubr
fst
fsubr
fst
fsubr
fst
fsubr
(bad)
(bad)
call
push
sbb
push
fst
fsubr
fst
fsubr
fst
fsubr
fst
fsubr
(bad)
fstp
push
or
das
fst
fld
into
sbb
fdiv
push
cmp
data16
ins
push
dec
inc
inc
xor
movs
jmp
push
pop
mov
call
(bad)
cli
out
add
push
fld
fmul
out
xlat
fstp
fld
jb
clc
adc
xchg
adc
inc
rcr
in
sbb
fnstenv
add
push
fmul
mov
fld
fstp
or
xchg
xchg
test
or
xchg
cmp
das
jbe
adc
fld
xor
pop
or
jb
das
cs
in
push
int3
sub
(bad)
jmp
mov
mov
ins
and
push
mov
popf
clc
ret
sbb
fimul
sub
inc
cmp
jno
pop
cld
fbstp
mov
xor
test
mov
syscall
std
add
mov
(bad)
fild
shl
lea
lea
aas
fs
adc
inc
sbb
or
(bad)
(bad)
aaa
pop
jge
xor
jmp
mov
or
jge
cmp
mov
jne
push
mov
sbb
push
push
call
lea
shl
add
push
mov
jmp
mov
mov
mov
cmc
add
ror
xchg
and
fwait
clc
test
je
lock
inc
test
pop
clc
jne
add
(bad)
(bad)
daa
inc
add
add
cmp
ror
jae
out
mov
or
bnd
ret
jmp
mov
sub
loop
(bad)
mov
add
dec
mov
shr
sub
inc
lea
lea
loop
(bad)
out
lahf
fld
add
fadd
add
dec
fmul
sub
popa
in
pop
in
pop
push
lock
xchg
jge
lock
fsub
pop
popa
arpl
push
das
in
pop
mov
pop
div
fsub
pop
in
fstp
ds
clc
fsub
pop
cmp
or
cmp
jge
xchg
add
ficomp
add
fdivr
ret
jle
inc
cld
pop
cld
fsub
pop
or
fstp
jne
fcomp
sti
call
pop
ret
mov
sub
cmp
jl
or
add
jmp
pop
out
clc
mov
push
mov
pop
lock
pop
out
or
jne
cmp
jge
nop
fld
inc
cmp
push
jo
fimul
pop
mov
jl
ins
jl
or
pop
loopne
jb
stos
jmp
or
cmp
js
add
add
mov
cmp
mov
jl
add
sti
sub
mov
or
test
sub
or
std
mov
dec
xchg
sub
(bad)
les
adc
lea
aaa
rol
mov
pop
push
gs
cld
add
mov
add
lds
dec
fstp
or
fstp
fstp
sti
pop
inc
enter
fstp
or
fstp
or
push
dec
adc
inc
fnstcw
pop
hlt
sbb
in
fld
push
inc
mov
or
pop
lock
cwde
xor
retf
inc
fstp
(bad)
cmp
lea
cmps
lods
add
jg
mul
sub
nop
iret
add
cmp
add
pop
sbb
jnp
and
jne
dec
or
mov
sub
mov
jmp
jecxz
inc
aam
paddd
std
push
fstp
fld
jae
jne
or
or
scas
aas
or
ret
scas
push
mov
fld
inc
cmp
push
xchg
pusha
sbb
jl
jnp
aad
mov
jo
mov
ror
je
stc
pushf
push
(bad)
jl
add
mov
or
lods
push
adc
fidiv
or
dec
xchg
mov
xchg
scas
xchg
pop
and
mov
mov
adc
add
dec
ret
cs
inc
sbb
jecxz
js
mov
or
mov
mov
pop
in
mov
add
hlt
dec
mov
hlt
mov
adc
push
lds
dec
clc
fstp
jne
jle
or
cli
jge
out
rol
in
add
sub
mov
ins
js
add
inc
add
ds
mov
or
mov
mov
inc
rcr
(bad)
jecxz
or
adc
into
ja
and
mov
jl
lock
pop
mov
adc
out
fist
fldenv
in
sti
pop
in
fld
adc
adc
pop
pop
lahf
xor
mov
xor
fdivr
jne
pop
shl
or
out
shl
lea
mov
xor
dec
pop
fcom
(bad)
clc
icebp
shl
and
es
shl
add
mov
sbb
(bad)
loope
sbb
sbb
add
push
push
fmul
sub
(bad)
mov
imul
jae
or
leave
adc
hlt
sub
inc
cmp
jne
cmp
jge
les
adc
xchg
xor
sti
or
outs
or
test
dec
or
mov
xchg
or
mov
pop
jmp
sub
push
jmp
or
sub
ds
loopne
leave
mov
inc
mov
dec
popa
loopne
shl
add
fsubr
dec
pop
lock
fadd
xchg
or
ret
mov
clc
jne
pop
cmp
jge
xchg
mov
jg
daa
cld
aas
test
inc
mov
mov
call
push
mov
and
push
and
push
fild
cmc
pop
pop
inc
mov
xor
jno
mov
popf
jmp
div
and
mov
jno
mov
mov
jmp
inc
push
in
mov
xor
xor
(bad)
fwait
mov
inc
add
test
jle
movs
pop
push
dec
mov
mov
ja
mov
mov
inc
add
imul
add
shl
mov
mov
test
add
outs
or
push
and
jmp
mov
jmp
cmp
jne
inc
xor
jo
or
inc
sbb
dec
push
push
mov
mov
call
push
es
push
fist
mov
(bad)
(bad)
jge
outs
mov
add
dec
xor
jmp
sub
dec
and
je
inc
mov
cmp
dec
and
retf
sti
jg
adc
aad
(bad)
inc
fsub
aas
push
mov
test
fstp
lock
xlat
mov
push
inc
push
inc
and
mov
pop
sub
test
sbb
es
push
xor
adc
inc
jo
dec
or
and
ins
cmp
jle
jbe
test
add
xor
jl
inc
push
dec
ja
xchg
sbb
aaa
mov
mov
push
hlt
jmp
or
add
lea
push
mov
xor
popa
or
add
ret
iret
loopne
jge
outs
arpl
or
cmp
push
add
ror
inc
pop
mov
mov
fidivr
add
adc
inc
and
mov
dec
(bad)
cmp
push
and
or
out
pop
aad
(bad)
call
dec
and
add
rcr
pop
and
js
inc
inc
push
and
retf
sbb
mov
jb
or
je
dec
sub
add
add
adc
adc
pop
sub
mov
fwait
es
sub
movs
sub
xor
mov
scas
inc
mov
hlt
repz
cmp
sar
hlt
mov
ror
sub
sbb
lock
jecxz
pop
add
scas
or
xlat
fwait
add
sub
mov
mov
mov
ret
loope
mov
ins
add
mov
inc
sbb
dec
aas
cmp
sbb
cmp
jo
push
loop
and
stos
xchg
test
adc
or
sub
je
inc
fidivr
test
and
and
push
inc
sub
sub
push
je
(bad)
shr
cmp
xchg
push
pop
rol
mul
cdq
jmp
jmp
mov
xchg
jne
xchg
and
sbb
add
xor
mov
adc
in
xlat
adc
sub
loope
mov
xchg
sub
adc
adc
sbb
mov
xor
cmps
sub
inc
push
mov
mov
cs
or
adc
and
lahf
cmp
xor
xchg
jge
push
lahf
mov
cwde
cmp
lods
push
mov
mov
adc
ret
sbb
test
loope
and
loop
retf
mov
call
sub
adc
popf
jmp
jp
call
jp
aaa
jl
dec
lahf
cmp
and
xor
sub
sub
inc
xor
cli
xchg
loope
push
mov
mov
call
and
inc
inc
add
cli
xchg
xor
xor
mov
xchg
add
sbb
cmp
jne
or
jne
sahf
push
push
sbb
lods
je
cmp
jne
mov
out
ret
sbb
sbb
idiv
adc
adc
push
push
push
push
call
mov
push
dec
xchg
push
push
icebp
dec
out
cli
push
push
push
call
sbb
jo
pop
adc
mov
push
push
push
not
call
jns
mov
cmp
fcomp
jg
inc
push
mov
jae
fistp
mov
ror
mov
push
in
stc
aas
pop
mov
mov
cmp
pop
mov
mov
mov
mov
mov
mov
mov
push
icebp
(bad)
out
dec
pop
mov
mov
mov
mov
pop
mov
pop
pop
scas
or
add
pop
sti
dec
push
jg
adc
push
dec
cmp
popa
or
adc
rcr
or
xor
call
sbb
or
add
stc
sub
mov
(bad)
(bad)
call
mov
imul
mov
shr
add
lea
mov
sub
xor
cmp
mov
jl
sub
xor
add
fist
adc
lea
sub
sub
shr
mov
push
cli
adc
adc
lahf
ins
push
ins
clc
mov
or
mov
mov
add
add
shr
leave
pop
adc
pop
push
out
jne
ins
or
sub
pusha
cs
rcr
pop
sub
or
or
or
sbb
adc
sbb
mov
pop
jmp
sar
lea
lea
lea
movups
pop
or
sub
data16
add
add
call
in
push
add
mov
inc
lea
add
cmp
(bad)
mov
lea
mov
jl
lea
lea
mov
mov
add
and
cmp
xor
push
dec
add
cmp
jl
jle
(bad)
(bad)
cmp
jge
lea
lea
mov
lea
sub
mov
rep
cmp
sbb
add
or
add
icebp
je
cmp
push
mov
cwde
add
mov
or
jg
div
sbb
dec
add
leave
and
add
daa
inc
mov
xchg
imul
clc
add
inc
jl
jbe
fsubrp
(bad)
aas
int3
int3
fld
fmul
fld
fmul
or
jg
lds
sbb
adc
fstp
fld
fmul
or
or
inc
add
mov
call
mov
cmp
or
loopne
(bad)
in
or
sub
adc
fstp
fnstcw
cmp
or
aam
(bad)
in
or
sub
adc
fstp
(bad)
jae
sti
inc
xor
or
adc
or
std
jg
lds
sbb
adc
fstp
fld
fmul
ret
or
adc
jg
add
adc
pop
xor
inc
sub
or
enter
or
mov
sbb
adc
sub
inc
sub
or
loope
jmp
movs
or
adc
mov
pop
out
jp
cmps
mov
adc
outs
adc
sbb
es
jl
sbb
add
je
cmp
jne
aas
mov
pop
and
mov
mov
mov
les
test
inc
dec
mov
mov
fist
ret
add
test
mov
je
ds
pop
or
add
je
test
mov
jo
(bad)
fbstp
sbb
dec
sbb
cmp
jne
mov
mov
pop
add
pop
mov
jg
jmp
add
mov
mov
(bad)
ja
dec
fisttp
ds
mov
jne
scas
stos
push
add
cmp
push
or
jne
mov
push
jge
mov
jmp
cmp
fld
fstp
jge
or
cli
sub
jno
(bad)
dec
mov
test
jge
neg
test
and
je
lock
aas
add
pop
jmp
pop
in
add
xor
or
inc
and
fidiv
push
rcr
cmp
dec
je
push
mov
push
jmp
fchs
add
adc
mov
adc
ret
cmp
jge
lea
sub
push
std
or
adc
mov
mov
or
mov
sbb
mov
add
xor
dec
push
push
aas
mov
iret
or
add
add
mov
mov
add
cmp
inc
add
inc
imul
out
mov
mov
fcom
push
mov
icebp
mov
lds
jmp
pushf
push
inc
add
cmp
jl
pop
retf
es
sbb
mov
dec
add
sbb
inc
pop
adc
inc
jmp
fistp
jle
push
add
push
xor
push
fbstp
dec
call
adc
mov
lea
add
lahf
clc
(bad)
scas
mov
mov
sub
(bad)
pop
(bad)
scas
sub
or
call
mov
sbb
movups
and
mov
add
call
paddusw
add
adc
mov
push
and
mov
sub
lea
call
icebp
out
test
add
add
add
add
retf
sbb
xchg
adc
or
pop
push
cmp
sbb
adc
mov
movs
loop
mov
sbb
(bad)
pusha
enter
sub
push
and
xor
push
xor
fistp
lea
pop
cld
or
test
jle
add
scas
inc
cmp
mov
inc
dec
push
inc
sbb
cmps
fs
clc
retf
or
or
sub
cmp
lock
mov
jno
inc
push
inc
test
out
pop
add
push
and
jle
sti
lahf
sub
shr
jmp
adc
imul
sbb
mov
and
sub
jb
push
int
ss
sub
mov
adc
test
fbstp
fwait
adc
inc
dec
add
dec
inc
inc
imul
mov
(bad)
lock
icebp
or
lea
add
rol
mov
cmp
add
out
jmp
out
dec
mov
pop
push
push
(bad)
push
sbb
les
add
call
jl
gs
inc
ja
je
adc
push
je
mov
xor
adc
adc
mov
sub
push
push
je
(bad)
call
div
jmp
push
push
push
call
ds
cdq
test
lahf
cmp
sbb
sti
xchg
and
call
cmp
add
or
out
or
cs
jb
inc
xor
cmp
je
fiadd
call
outs
scas
sub
mov
mov
(bad)
inc
push
add
mov
imul
inc
and
call
jle
ror
jo
cmp
inc
and
cmp
jae
lea
mov
add
adc
pop
xor
imul
sbb
xor
and
cmp
mov
push
sub
or
lahf
or
mov
mov
push
call
xor
(bad)
jg
xor
inc
add
loopne
pop
add
and
loopne
push
sub
jp
fwait
add
push
js
mov
push
and
add
sbb
push
push
aaa
jl
(bad)
call
cmp
mov
je
push
jne
adc
jg
jg
dec
push
or
add
xor
pop
cmp
setne
lea
adc
add
cmp
jle
mov
dec
push
out
add
cmp
loope
ja
aaa
je
inc
add
imul
add
shufps
inc
cld
jle
cmp
jle
(bad)
movs
call
cli
push
jl
mov
test
or
or
mov
dec
(bad)
jle
inc
mov
lea
mov
cmp
pop
mov
mov
mov
inc
js
pop
aam
outs
pop
dec
js
inc
dec
shl
cmp
lea
mov
fwait
lock
and
adc
add
add
sbb
fbstp
adc
and
cmp
jne
inc
mov
dec
mov
out
add
in
jge
jmp
sub
rol
mov
and
adc
cmps
add
sar
sub
sub
mov
call
sbb
mov
ret
cmp
push
jne
mov
xor
cmp
je
test
cmps
mov
jmp
adc
(bad)
(bad)
(bad)
aas
into
jae
push
push
push
mov
call
push
push
push
call
or
or
adc
ss
(bad)
mov
mov
push
shl
push
push
call
cmp
pop
pop
je
mov
loope
cmps
xchg
mov
lahf
inc
dec
sbb
dec
and
rcl
cmps
out
test
shl
inc
std
push
mov
lea
les
pop
sar
mov
loopne
cmc
push
mov
mov
iret
rcr
push
mov
inc
add
jl
ja
(bad)
(bad)
adc
rol
inc
das
inc
cmp
icebp
dec
ffreep
jl
icebp
and
test
je
jb
ss
je
push
call
mov
cmp
mov
jne
stos
mov
jmp
push
call
cmp
adc
add
sub
or
test
adc
loopne
or
call
pop
loope
ins
dec
jne
test
adc
or
ret
scas
bound
sub
adc
ret
std
outs
sbb
in
jmp
push
call
add
ret
call
sbb
rcl
adc
jle
addr16
sbb
sbb
mov
push
pop
pop
inc
cli
cmps
aaa
push
mov
mov
call
jl
or
call
neg
sbb
cmp
clc
loope
add
pop
js
mov
inc
or
das
sbb
ins
or
jle
push
mov
mov
cmps
lahf
mov
add
dec
and
adc
cmp
add
ja
mov
lea
lds
loop
and
adc
test
inc
push
sbb
sar
and
push
and
mov
adc
mov
sub
mov
mov
mov
jmp
cmp
jne
cmp
mul
cli
adc
push
mov
jmp
dec
adc
data16
loop
push
nop
xchg
mov
jmp
push
add
call
xor
inc
adc
in
sub
(bad)
jle
call
dec
or
and
std
mov
call
inc
fistp
cmp
(bad)
(bad)
inc
cmp
and
jl
nop
(bad)
pop
xor
mov
inc
add
imul
cmp
fldln2
(bad)
outs
lods
mov
pop
add
ret
xor
mov
adc
shl
adc
pop
test
mov
or
sub
pop
jb
icebp
or
sar
rol
jb
into
push
and
outs
add
into
mov
out
lock
and
jae
je
(bad)
out
call
pop
adc
call
jge
mov
call
sub
cmps
sti
rol
loop
push
push
and
push
jmp
cmp
je
pop
pop
xchg
ret
adc
jmp
mov
cmp
jl
mov
push
sub
outs
push
jnp
mov
add
(bad)
cmp
pop
pop
pop
xchg
sahf
jmp
ret
push
xor
mov
inc
sub
rol
mov
mov
out
test
dec
daa
ss
cmp
je
adc
(bad)
clc
push
sbb
test
xor
outs
inc
or
stos
xor
mov
mov
out
mov
cmp
jl
add
arpl
(bad)
pop
test
pop
push
jg
and
mov
bound
add
aas
adc
outs
aas
push
add
dec
jne
push
cmp
ror
stos
pop
outs
cmps
cmp
cwde
mov
add
je
pop
mov
push
in
arpl
dec
push
or
adc
mov
cmc
fs
hlt
push
mov
ror
cld
adc
aas
iret
mov
mov
mov
(bad)
jl
mov
sbb
lahf
mov
jbe
ror
test
adc
push
mov
pop
aad
xor
mov
mov
push
mov
aam
sub
pcmpeqb
push
mov
(bad)
mov
add
push
or
adc
sbb
aad
(bad)
jmp
mov
pop
mov
pop
mov
pop
mov
mov
ret
xor
sbb
jno
js
cmc
cmp
dec
lock
cld
cmp
adc
push
cmp
adc
nop
lahf
test
add
ror
call
fidivr
icebp
push
das
jbe
add
bound
or
call
adc
cmp
adc
fucom
ret
adc
test
dec
mov
mov
mov
dec
dec
mov
inc
sub
mov
loope
ret
adc
xor
shl
ja
cmp
jge
mov
loop
add
popf
ret
shl
mov
aam
inc
cmps
stc
mov
mov
mov
inc
(bad)
out
pusha
xlat
rcr
cmp
ds
cmp
gs
(bad)
mov
push
mov
add
sbb
cmp
or
add
fst
mov
pop
pop
adc
mov
xor
jg
idiv
mov
mov
jle
mov
sub
test
dec
jne
aas
mov
and
sar
cmp
lahf
mov
jge
mov
cdq
mov
cwde
loope
loope
xlat
mov
mov
cdq
idiv
lea
icebp
mov
jecxz
sub
(bad)
cmp
inc
clc
add
add
sub
sti
and
mov
and
or
jmp
cmp
fmul
add
mov
and
jge
mov
dec
mov
xor
jmp
popa
mov
jge
sub
xor
jnp
and
mov
jmp
cmp
ins
mov
sbb
pop
cmp
cmp
xor
jmp
add
stc
add
test
cmps
mov
cmp
cmp
test
aas
adc
dec
and
(bad)
out
clc
xor
add
adc
and
sbb
mov
outs
clc
cmp
jl
jmp
lea
add
shl
mov
sub
aaa
inc
ror
jmp
mov
adc
mov
ret
out
mov
ret
sbb
das
imul
cmp
fistp
sbb
pop
adc
push
mov
imul
fwait
pop
add
sti
or
ret
sbb
lea
lahf
or
sahf
pusha
rcl
xchg
mov
shl
test
daa
sbb
dec
int
jle
test
adc
mov
sbb
lods
sbb
jge
mov
call
pusha
cmp
lds
mov
or
mov
(bad)
inc
dec
lock
jmp
inc
mov
mov
xchg
cmp
ror
jl
adc
cmp
jecxz
sbb
jne
jbe
mov
sti
mov
in
xchg
adc
stos
mov
jmp
fcom
aaa
scas
sbb
mov
xor
cli
mov
xchg
sti
out
div
pop
jb
xor
rol
jp
outs
inc
add
push
mov
mov
xor
push
nop
(bad)
pop
fsubp
retf
mov
mov
or
add
cmp
jl
cmp
ror
call
mov
pop
xor
push
mov
popf
nop
jae
mov
mov
movs
js
add
ret
mov
or
pop
mov
mov
add
xchg
or
jo
lds
les
push
cmp
ins
int3
pop
mov
mov
shl
add
sub
outs
pop
outs
cmp
inc
dec
add
sbb
mov
fld
add
dec
aam
adc
test
mov
push
mov
mov
xor
call
or
adc
xlat
push
aad
xchg
test
jne
mov
and
cmp
mov
xor
imul
into
mov
mov
push
sar
sbb
add
add
inc
lock
mov
or
sub
add
mov
add
add
aaa
cmp
sub
fdivrp
scas
cmps
outs
adc
inc
add
adc
mov
rcr
clc
adc
and
add
ret
sub
int3
int3
pop
out
and
(bad)
dec
and
and
cld
sbb
add
push
sar
pop
test
mov
adc
mov
push
call
(bad)
adc
shr
mov
xor
std
inc
sbb
dec
mov
jne
pop
test
jle
ins
call
inc
shr
daa
jae
push
(bad)
(bad)
jmp
test
je
xor
dec
jne
pop
pop
mov
pop
ret
jmp
(bad)
adc
(bad)
aas
xor
sbb
ins
push
sbb
push
lea
push
call
push
inc
push
call
pop
pop
pop
ret
data16
cmp
jb
cmp
hlt
out
loop
jbe
push
cmp
jl
xor
into
fimul
add
stc
daa
bound
fiadd
adc
sbb
or
or
adc
inc
(bad)
(bad)
inc
push
push
call
test
pop
pop
je
push
push
inc
cmc
ja
or
add
push
sbb
sbb
and
dec
cmp
jne
inc
inc
adc
adc
out
mov
ret
xor
ret
mov
(bad)
(bad)
pop
xchg
or
push
lea
push
call
or
add
mov
jmp
xor
mov
add
inc
pop
sbb
dec
push
cmp
test
test
call
push
mov
(bad)
(bad)
dec
push
push
push
push
call
pop
out
std
call
add
call
push
push
call
xchg
idiv
pop
mov
jmp
xor
ret
add
or
xor
ja
push
fisttp
je
or
cmps
cwde
jecxz
add
cmc
(bad)
mov
add
xchg
xchg
retf
xchg
or
push
sbb
into
adc
test
sub
lea
push
push
mov
push
lea
push
lea
(bad)
(bad)
(bad)
call
jne
mov
call
mov
add
out
xchg
repnz
mov
jbe
scas
pop
je
pop
lea
push
xchg
add
jg
dec
cld
call
leave
popa
mov
fcomip
sbb
jne
div
jo
add
lea
dec
fcomip
pop
jecxz
push
call
dec
sub
or
outs
sbb
mov
popa
je
aam
loope
ds
push
push
aas
push
call
shl
pop
pop
pop
pop
ret
out
push
mov
(bad)
out
clc
shl
push
add
push
call
mov
mov
sti
(bad)
mov
add
push
mov
push
push
push
call
in
jle
mov
call
push
push
(bad)
push
inc
pop
pop
pop
or
pop
adc
xchg
ret
sbb
pop
inc
adc
or
movq
and
and
out
xor
call
sbb
jmp
push
add
pop
cmp
push
and
jge
ss
and
aaa
xor
inc
add
xor
jmp
or
cs
adc
mov
jmp
push
xchg
push
sahf
cmp
push
stc
push
lahf
aaa
sbb
push
scas
cli
sub
adc
inc
lods
hlt
out
test
push
xor
xchg
rol
js
pop
je
or
cwde
prefetcht0
icebp
mov
push
fld
test
inc
or
push
fstp
stc
mov
push
popa
sub
shl
pop
or
stos
cmc
mov
and
test
add
popf
mov
jle
lea
mov
ficom
rcr
(bad)
call
jae
push
call
mov
add
xor
test
je
push
mov
stos
add
rcr
mov
jmp
or
(bad)
(bad)
jg
mov
mov
mov
mov
mov
add
test
jne
pop
pop
ret
xor
cmc
(bad)
pushf
int
call
test
cmps
leave
dec
push
ficom
repnz
sub
pop
mov
test
inc
stos
sbb
or
(bad)
out
jnp
push
fcomp
push
sbb
outs
clc
cmps
add
call
fcom
pop
cli
adc
mov
sbb
dec
sub
adc
pusha
and
add
adc
adc
fdivrp
iret
bound
test
fnstsw
jne
test
fsub
(bad)
cmps
jp
call
mov
pop
ret
call
(bad)
adc
das
jge
push
scas
sbb
pop
jmp
aaa
sbb
xchg
add
call
call
or
push
push
mov
push
neg
fiadd
jne
test
push
mov
push
mov
call
fild
sbb
jle
popa
je
adc
sub
add
push
adc
fcomip
mov
dec
pop
ret
push
push
mov
push
(bad)
(bad)
(bad)
dec
test
cld
mov
js
push
lea
sar
mov
cmp
je
jge
lea
(bad)
mov
add
bnd
jmp
mov
pop
lea
cmp
pop
pop
jne
push
sbb
pop
es
push
leave
xor
shl
push
jo
loope
je
jns
in
(bad)
(bad)
jmp
stc
add
stc
add
cmp
jle
and
fld
icebp
push
clc
sbb
adc
push
lahf
imul
push
mov
cmp
or
sbb
cld
aaa
and
add
lahf
ror
jg
jmp
push
pop
jmp
ror
rol
sbb
loopne
or
sbb
push
inc
es
out
sbb
fstp
rol
xchg
adc
out
shr
jg
or
test
jle
std
or
stc
push
jne
or
mov
call
inc
mov
and
cmp
jne
lahf
jmp
fstp
xor
add
pop
xchg
cmp
inc
and
pop
sub
(bad)
dec
xor
dec
je
dec
je
dec
dec
je
dec
jne
mov
add
call
sar
push
jbe
call
and
adc
jbe
pop
sbb
and
mov
call
scas
sub
and
inc
add
xchg
mov
dec
adc
adc
pop
ret
jp
loop
or
dec
push
aad
adc
retf
cmp
(bad)
jg
add
mov
cmp
jne
mov
and
adc
add
pop
inc
jb
add
aaa
inc
pop
lock
shl
jmp
test
or
adc
or
jg
add
ret
outs
add
ret
jns
cdq
test
pop
je
fcmovnb
and
jmp
cmp
push
ins
je
push
imul
mov
clc
aaa
ins
call
mov
shl
mov
icebp
xlat
shl
fild
sbb
xlat
iret
pop
adc
pop
cwde
xchg
add
mov
sbb
push
mov
out
loop
add
pop
pop
leave
aaa
add
jmp
adc
jnp
test
dec
je
mov
je
dec
je
dec
je
mov
and
je
call
fist
aas
fsubr
cdq
sahf
dec
jo
add
cmp
push
mov
call
test
jne
mov
jg
into
add
push
push
inc
stc
dec
push
or
pop
jmp
push
pop
fld
push
xchg
leave
adc
inc
push
inc
push
dec
jmp
cmp
jne
push
(bad)
(bad)
sti
xor
jmp
xchg
sbb
and
je
mov
rcr
ss
bound
inc
test
push
mov
out
xor
mov
or
add
cwde
or
dec
ror
std
adc
push
cmp
clc
inc
cmp
cmc
jl
mov
xchg
das
nop
je
je
xor
xor
xchg
imul
cmp
je
ins
shr
push
and
pushf
mov
je
cld
dec
jl
test
add
or
call
jp
ja
cmps
mov
mov
mov
ret
test
jne
pop
mov
dec
inc
or
or
add
mov
ins
cld
cmps
jg
fnstsw
xor
mov
or
rep
pop
push
lea
(bad)
(bad)
mov
pusha
rep
lea
push
lea
pushf
sbb
push
push
retf
sbb
aas
push
cs
outs
add
pop
adc
(bad)
inc
xor
cmp
je
mov
mov
push
into
jl
(bad)
or
shl
cdq
rol
cmps
lea
push
lea
push
lea
call
push
push
push
mov
mov
call
pop
mov
mov
pop
pop
add
leave
pushw
outs
mov
sub
mov
(bad)
jo
push
jno
add
add
loop
jno
leave
std
adc
add
adc
test
mov
fcom
hlt
ja
cld
mov
call
pop
jg
aam
adc
cmp
dec
hlt
push
push
jne
add
push
ins
push
call
xor
and
call
or
enter
pusha
push
mov
call
cs
and
inc
mov
loop
xchg
pop
fld
mov
mov
out
out
jmp
dec
dec
lock
lea
add
call
clc
fnstsw
call
aam
call
push
cmc
xor
jmp
cmp
(bad)
cli
add
xor
je
dec
je
push
das
dec
call
cmc
mov
push
dec
jmp
inc
and
jne
arpl
out
(bad)
push
or
inc
or
sub
fld
jmp
add
fwait
cli
jmp
cmp
jne
fldz
jmp
call
out
stos
fs
aaa
xor
not
sub
mov
ja
aaa
out
and
mov
lea
lock
push
push
shl
mov
or
in
ret
out
call
xor
imul
shl
inc
jge
inc
cmp
mov
jg
je
cs
(bad)
mov
add
add
cmc
inc
cmp
jmp
adc
cmp
jle
(bad)
mov
dec
cmp
je
cmp
jne
cmps
(bad)
callw
push
dec
sbb
adc
xor
call
(bad)
les
loope
(bad)
out
add
lods
popa
movsx
movzx
shl
or
add
inc
ja
ins
xlat
push
cmps
call
clc
push
push
mov
iret
mov
aam
dec
add
ret
outs
into
call
test
jl
dec
pop
lea
mov
imul
rol
adc
push
push
sbb
jae
mov
mov
inc
dec
jne
jmp
mov
dec
xlat
hlt
or
inc
cld
mov
or
call
daa
sub
adc
sub
add
fdivr
xor
lea
sub
icebp
xor
push
movs
jmp
int
call
sbb
fmul
mov
xor
fistp
dec
xor
daa
(bad)
and
mov
jmp
loope
(bad)
sub
cmp
je
cmp
je
jle
sub
inc
jg
mov
call
stc
and
data16
(bad)
push
call
xchg
enter
jae
out
push
push
push
push
call
sub
sbb
jmp
inc
mov
inc
iret
push
jg
(bad)
js
cmp
push
push
retf
out
sbb
call
push
(bad)
mov
cmp
outs
ins
jne
xor
xor
dec
and
outs
into
and
mov
test
mov
je
push
xor
jbe
mov
in
xchg
gs
add
jmp
adc
jbe
dec
sub
cmp
fucom
and
shl
and
dec
je
cmp
je
cmp
jle
rol
(bad)
data16
cmp
jne
(bad)
in
jnp
call
jo
adc
and
sbb
gs
aad
call
out
mov
ret
sbb
in
mov
in
enter
inc
adc
pop
push
fwait
xlat
jmp
mov
dec
dec
stc
je
sub
je
sub
ja
(bad)
inc
fild
xchg
sbb
dec
je
xchg
mov
mov
cwde
jo
mov
or
pop
mov
sti
sbb
push
push
sub
out
fadd
cmp
sbb
icebp
and
ja
cwde
jae
cs
inc
sbb
arpl
outs
(bad)
leave
out
or
ficom
outs
ja
mov
push
dec
aad
jmp
push
rol
adc
aad
inc
and
mov
neg
pop
pop
push
in
fdivp
xchg
push
fadd
mov
fsubr
sbb
jg
or
push
or
ficom
sub
dec
test
dec
rol
or
outs
or
outs
sub
dec
je
dec
je
dec
je
dec
retf
mov
push
call
pop
pop
push
cmp
loopne
loop
mov
mov
jmp
mov
jmp
cmp
cmp
fld
fld
call
rcr
and
mov
add
hlt
dec
xor
ror
aas
out
fdiv
les
adc
push
std
mov
xor
cmp
rcl
dec
push
(bad)
mov
jmp
enter
jne
mov
jmp
scas
jmp
push
push
test
ud0
popf
shr
and
mov
call
sub
ret
mov
jl
sub
pop
test
cmp
mov
xchg
and
leave
sub
mov
call
clc
mov
and
movs
jg
dec
jge
cmp
push
push
cli
aaa
shl
inc
add
push
call
add
jmp
std
or
aaa
jp
inc
sub
jle
inc
inc
inc
dec
inc
cmp
jle
jmp
sbb
inc
jl
dec
(bad)
mov
sub
je
sub
je
dec
dec
je
sbb
jp
out
ret
call
push
mov
hlt
push
add
xor
jne
lahf
dec
mov
inc
clc
mov
mov
enter
add
call
add
add
test
pop
xchg
pop
dec
mov
lea
shl
cmp
sahf
cli
sar
pop
cmp
inc
std
(bad)
out
jno
mov
shl
sar
xor
movzx
xor
inc
inc
lock
push
cmp
data16
lea
mov
and
push
add
jae
sbb
xchg
popa
jp
jne
dec
add
and
call
sbb
cmp
test
xchg
ror
retf
jl
mov
retf
mov
nop
out
inc
dec
inc
jmp
add
mov
push
cmp
fadd
inc
or
cmp
ja
pop
repz
or
ret
jmp
inc
ja
mov
je
or
(bad)
pop
jo
test
stc
jne
cmp
je
(bad)
in
mov
inc
jl
add
inc
or
sahf
and
stos
jo
mov
push
dec
add
jmp
shl
mov
or
mov
dec
xchg
std
aaa
cmp
nop
test
jne
push
call
mov
adc
stc
add
js
les
call
fmul
cli
adc
pop
loop
call
dec
jne
lock
adc
inc
adc
inc
or
inc
(bad)
idiv
enter
mov
test
jne
xor
(bad)
jmp
ss
cmp
sbb
mov
sub
pop
mov
add
adc
push
or
mov
adc
test
call
cmps
mov
mov
call
test
les
neg
mov
and
call
mov
cmp
pop
sbb
push
push
dec
std
sbb
jge
mov
sbb
call
sub
and
sbb
std
std
rcr
iret
mov
push
(bad)
aas
pusha
or
add
stos
mov
push
fstp
pop
cld
jle
sbb
jmp
jl
(bad)
mov
call
add
inc
mov
call
pop
pop
nop
cmp
inc
cmp
jl
jbe
out
cmp
pop
cld
call
cmp
in
add
xor
jnp
cs
and
or
lds
stos
sub
(bad)
xor
cmp
pop
and
xchg
jo
clc
jne
push
inc
inc
in
mov
fcomp
cmp
arpl
add
call
push
push
mov
pop
and
into
push
xchg
shl
add
call
cli
enter
jg
(bad)
call
jmp
sub
idiv
ffreep
adc
or
stc
and
push
mov
sbb
and
cmp
jne
mov
lock
or
enter
dec
or
and
jmp
jmp
jecxz
mov
push
mov
cmp
jge
xor
and
test
jnp
jmp
dec
fnstcw
add
cmp
add
mov
mov
lea
lea
inc
and
cmp
jl
mov
(bad)
ja
ror
call
call
sub
shl
mov
cmc
dec
inc
cmp
lea
jbe
test
push
push
push
je
fs
aad
jge
push
xchg
pusha
dec
sub
pop
and
push
push
sub
push
call
adc
cmp
mov
lods
je
jmp
mov
pop
mov
pop
pop
call
cs
jg
jle
add
push
enter
and
add
mov
pop
mov
add
jl
cmovge
inc
xor
test
test
int3
sbb
add
loopne
ja
pop
lea
add
or
jmp
mov
mov
stc
mov
push
in
jmp
call
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
test
iret
cli
icebp
mov
cs
push
dec
pop
enter
call
inc
push
int3
add
add
mov
cs
fcomp
call
xor
push
(bad)
out
mov
aas
add
call
and
add
or
xchg
or
mov
cmp
push
add
clc
aaa
jl
dec
adc
inc
add
je
cmp
jge
push
push
mov
dec
cmp
jmp
add
mov
mov
cld
push
call
jne
add
push
jb
adc
fidiv
rcr
cmp
je
or
xchg
mov
sub
in
jle
loope
cmp
mov
cld
mov
push
scas
or
mov
and
fsubr
int
cld
or
je
dec
dec
je
push
xor
push
and
call
out
shr
ret
fstp
jmp
xor
(bad)
adc
in
nop
cmc
leave
dec
jno
inc
cmps
mov
out
bound
push
dec
je
dec
je
or
fdivrp
jmp
push
call
push
idiv
(bad)
frstor
push
lahf
cmp
push
call
or
cmp
mov
xchg
out
and
imul
mov
dec
jne
mov
mov
push
sbb
cmp
test
xor
add
retf
arpl
add
or
test
push
mov
imul
ror
je
push
call
mov
pusha
daa
add
call
inc
je
push
xchg
ret
fdiv
dec
(bad)
jnp
ror
mov
push
cmps
xchg
retf
leave
sub
cli
cmp
(bad)
dec
pusha
dec
or
jl
ja
dec
cmp
jl
imul
cdq
pop
jmp
push
(bad)
idiv
cmp
mov
mov
dec
sub
push
dec
mov
add
stos
jge
mov
mov
cs
clc
mov
mov
in
xor
movs
jmp
push
mov
call
stos
xlat
xor
xor
(bad)
mov
adc
shl
mov
inc
stos
sbb
push
push
rcl
into
aam
(bad)
or
add
jae
ds
add
push
push
call
mov
jmp
jno
jl
scas
movs
je
call
jp
pusha
je
retf
push
call
call
test
(bad)
xchg
sbb
fldenv
outs
(bad)
and
call
mov
or
test
xor
dec
sbb
add
push
mov
out
xor
(bad)
mov
jmp
clc
dec
std
aaa
in
cmp
je
mov
bound
cmp
je
inc
push
push
mov
call
adc
mov
test
jne
out
loopne
cmps
xor
test
ret
movs
icebp
call
mov
mov
idiv
inc
xlat
call
xchg
(bad)
jmp
push
dec
sub
jge
mov
push
call
shl
out
ret
call
push
push
pop
into
cmp
sti
jle
push
mul
inc
dec
je
push
push
lods
mov
xor
jne
push
jmp
dec
je
(bad)
hlt
fcmovb
outs
test
jmp
adc
sub
or
hlt
jmp
push
adc
add
aaa
fisttp
or
xor
cmp
jb
imul
je
push
push
jb
mov
jmp
jb
push
loope
add
or
jl
gs
fsubr
fldlg2
jmp
ror
or
in
imul
sub
xchg
dec
pop
cmp
push
jl
dec
jne
push
sahf
mov
cmp
jns
sub
enter
(bad)
out
(bad)
inc
or
jge
movs
movs
movs
or
cmp
pop
je
or
jmp
and
lea
jne
inc
hlt
jmp
push
xchg
mov
or
(bad)
daa
and
call
add
je
or
jo
call
sahf
in
call
test
add
adc
dec
xor
test
es
jge
clc
or
test
popa
mov
jne
pop
add
test
inc
iret
mov
push
call
inc
pop
jne
cmp
jne
shl
inc
and
cmp
jle
push
xchg
xor
mov
daa
mov
cmps
inc
or
xor
je
cmp
outs
out
add
je
sbb
and
je
or
xor
stos
add
jae
cmp
jle
cmp
jg
(bad)
(bad)
sti
cmp
xchg
mov
push
je
call
call
fdivr
aad
das
call
push
call
daa
pop
leave
out
push
jmp
mov
clc
scas
or
push
mov
push
call
cwde
fsin
movs
test
jns
inc
sbb
rcl
add
icebp
or
push
mov
call
or
ror
or
or
pop
adc
ret
clc
mov
jmp
push
popa
pop
xor
pushf
adc
cmp
jne
cmp
jne
or
xchg
sti
loope
jmp
ror
call
mov
daa
jmp
jae
pop
jmp
test
pusha
push
add
ins
ds
std
xchg
arpl
lock
xor
jb
add
ja
loop
pop
call
call
sub
inc
sar
icebp
jne
scas
into
jle
cmp
jbe
adc
sbb
mov
icebp
ins
ds
scas
call
cmp
push
jne
mov
out
lods
dec
jne
out
je
or
pop
out
cmp
and
(bad)
std
aas
daa
fistp
(bad)
loopne
push
push
mov
jmp
xchg
cmp
sbb
into
call
movs
bound
int
fidiv
mov
jmp
mov
loop
inc
ror
mov
test
push
call
outs
jb
jne
sti
push
sbb
loopne
fs
cwde
ss
je
dec
aaa
fmul
cmp
rol
in
clc
add
or
add
mov
or
and
fild
stc
add
call
mov
je
jmp
nop
or
and
ret
add
adc
jns
call
add
push
call
loopne
repz
jo
out
fmul
jne
call
retf
and
call
cld
out
fwait
push
test
jne
or
jne
fsubrp
icebp
outs
inc
push
sahf
cmp
out
jmp
fimul
jge
add
jne
add
shr
mov
dec
mov
jmp
pop
push
inc
pop
cmp
je
scas
out
ffree
test
dec
push
jne
out
dec
push
dec
mov
jmp
jmp
cmp
call
iret
xchg
add
inc
add
inc
push
rcl
and
sub
dec
je
push
cmp
or
push
or
test
repz
or
xchg
cmps
outs
add
mov
and
mov
mov
call
dec
sbb
sub
or
mov
(bad)
mov
or
or
dec
adc
dec
adc
test
push
pop
mov
sub
daa
mov
(bad)
adc
gs
or
ret
ja
pop
mov
adc
jg
xchg
jmp
inc
or
mov
je
call
dec
jge
jne
mov
je
or
cli
std
push
mov
(bad)
call
jmp
inc
xchg
push
call
pop
pop
fs
jae
je
movhps
outs
js
mov
or
mov
mov
call
jo
mov
adc
add
jnp
lock
jmp
je
cmp
idiv
sub
xchg
pop
pop
jne
jmp
add
das
xor
dec
xchg
push
xlat
sar
mov
and
std
mov
inc
mov
fld
sbb
fcomp
jle
les
mov
mov
jbe
ja
mov
call
mov
outs
mov
and
inc
inc
jmp
in
adc
jmp
sub
test
jne
xor
cmp
setl
fsubp
mov
shr
out
add
dec
push
push
out
fisubr
xchg
xchg
or
jne
push
push
rol
mov
ret
sti
fdivrp
inc
enter
or
pusha
jl
fcomp
jge
xlat
inc
jmp
push
sbb
pop
clc
adc
inc
or
repnz
inc
dec
sahf
mov
fld
adc
inc
je
cmc
dec
lock
push
jmp
clc
fcomp
push
add
mov
pop
pop
pop
fcmovbe
(bad)
aas
rcr
or
or
pop
pop
mov
mov
and
and
add
(bad)
cli
cmp
je
mov
and
cmp
aaa
fild
mov
sub
and
jle
fsub
jle
dec
loop
xor
push
mov
jne
mov
icebp
(bad)
pushf
fisub
cmp
je
sbb
cmps
(bad)
jmp
jge
push
test
dec
mov
cmp
jne
mov
sbb
inc
adc
jmp
xor
push
mov
enter
mov
push
push
call
pop
or
adc
push
fld
pop
fld
icebp
jnp
xor
clc
aas
pusha
jmp
sbb
stc
cmp
pop
clc
call
push
add
add
or
push
mov
call
pop
mov
dec
sub
add
push
or
push
or
out
add
lock
push
call
movsx
pop
push
push
mov
sbb
push
call
call
hlt
or
xor
or
push
pop
cld
xchg
and
imul
adc
sbb
mov
mov
jne
clc
aas
adc
call
call
shl
clc
push
adc
mov
mov
adc
cld
mov
call
xor
dec
mov
add
fld
jp
cmp
inc
mov
aaa
xchg
outs
push
jecxz
aam
repnz
mov
call
adc
mov
stos
out
fwait
mov
mov
call
adc
xor
push
push
push
mov
mov
mov
mov
adc
(bad)
jle
push
lea
mov
call
call
mov
add
outs
push
mov
dec
mov
inc
cld
fwait
sub
mov
mov
mov
mov
mov
cs
add
mov
loopne
xor
mov
mov
mov
je
cmp
adc
push
mov
in
mov
retf
mov
out
sbb
mov
outs
add
push
mov
std
addr16
inc
call
mov
cmp
mov
shr
gs
fdivrp
dec
lock
(bad)
sbb
call
mov
in
xor
mov
test
repz
jmp
out
jbe
call
push
sbb
inc
outs
call
add
inc
ds
mov
shl
cli
call
mov
ret
adc
mov
aam
mov
cld
cmp
mov
ja
mov
adc
das
sbb
and
call
xor
and
adc
cmp
xor
js
adc
fwait
test
call
fild
call
mov
mov
fild
add
add
call
sbb
(bad)
call
mov
mov
and
inc
outs
adc
(bad)
pop
call
dec
aam
xchg
cmp
and
push
pushf
popa
and
xchg
and
xchg
call
(bad)
aaa
push
(bad)
(bad)
call
dec
push
mov
add
mov
sub
mov
mov
mov
sbb
pop
jmp
mov
(bad)
cli
add
pop
pop
mov
mov
shl
xor
mov
push
cmc
cmps
push
mov
jne
mov
mov
inc
pop
js
push
call
push
mov
dec
ins
add
xor
push
aam
adc
or
loop
scas
loope
add
gs
push
add
pusha
fucomp
(bad)
ds
xor
dec
mov
dec
add
dec
adc
jecxz
mov
or
adc
mov
and
jg
mov
cmp
push
push
push
call
int
lock
icebp
inc
adc
push
in
rcl
rol
push
jg
(bad)
cmp
push
jp
icebp
jg
into
push
push
push
(bad)
clc
jg
scas
xchg
mov
jmp
mov
pop
outs
add
jne
sub
push
(bad)
rcr
add
mov
adc
call
jge
(bad)
dec
dec
lock
push
push
call
lock
aas
data16
mov
add
jle
inc
aas
add
jne
neg
pop
mov
and
inc
pop
mov
call
out
jle
stc
ror
call
add
push
call
and
xor
sub
mov
pop
shl
pop
add
ret
outs
idiv
push
call
and
(bad)
out
mov
or
jne
cmp
jge
add
push
mov
push
call
xchg
(bad)
clc
add
jbe
add
jle
cmp
or
aaa
sbb
or
mov
daa
mov
iret
cmp
jg
lock
pop
retf
inc
fdivr
hlt
mov
hlt
lock
fucomip
aaa
mov
call
movs
jne
xchg
inc
mov
or
jl
push
push
adc
test
push
fcom
pop
xor
adc
or
test
js
inc
call
cld
aas
lea
pop
dec
xor
clc
fstp
jge
inc
and
or
lea
jl
pop
pushf
call
sti
sbb
inc
test
push
call
cmp
adc
jg
icebp
dec
call
cmp
call
pusha
outs
idiv
pop
jmp
cmp
pop
push
call
ret
or
adc
loopne
inc
adc
scas
push
push
push
inc
inc
jno
pop
adc
shr
push
lock
jge
lea
push
mov
mov
dec
call
or
clc
jmp
dec
jmp
sbb
mov
add
jmp
sbb
jne
(bad)
adc
sub
(bad)
std
or
cmp
push
mov
push
call
out
dec
push
rcl
call
and
jl
aaa
inc
or
add
clc
or
inc
ret
push
(bad)
dec
mul
outs
or
mov
sbb
pop
add
xor
push
push
push
push
and
dec
ret
(bad)
(bad)
mov
cmp
cmp
je
cmp
je
cmp
pop
inc
je
xor
ret
xor
inc
ret
popf
mov
movzx
test
js
inc
jmp
(bad)
(bad)
jmp
mov
add
loop
and
or
test
jne
add
jmp
movzx
shl
and
(bad)
aas
add
or
sub
add
add
das
xor
shl
jecxz
loop
and
or
test
add
mov
jmp
aaa
add
mov
sbb
dec
or
add
mov
pop
mov
add
push
call
fld
fstp
or
retf
loopne
xchg
push
aam
test
push
sub
add
js
or
ret
add
lea
into
mov
icebp
call
and
mov
ja
inc
jmp
push
cmp
inc
sub
or
xor
and
hlt
add
and
mov
xor
mov
xor
xor
imul
xor
jbe
mov
xor
pushf
or
cmc
icebp
call
sbb
jle
mov
mov
xchg
(bad)
icebp
inc
retf
adc
cld
xor
or
(bad)
xor
inc
push
add
xchg
ret
push
push
call
enter
pop
adc
mov
cmp
push
cli
jnp
lods
sub
or
std
cmp
or
and
push
call
fstp
dec
push
test
xor
pop
pop
ss
lahf
mov
call
test
adc
xor
jne
adc
bnd
mov
ret
inc
aas
rcr
and
clc
dec
ds
or
xchg
in
add
adc
jb
test
xchg
or
(bad)
cmp
xor
dec
push
pop
sbb
pop
sbb
call
pop
mov
call
push
sbb
cmp
call
call
mov
sub
call
xchg
pop
and
mov
inc
repnz
adc
outs
jge
dec
aas
pop
stc
pop
mov
popa
mov
add
add
mov
call
dec
and
mov
cmps
fist
or
push
add
ret
jne
push
call
(bad)
inc
aam
inc
dec
fcom
cmps
push
or
adc
setl
mov
mov
dec
sbb
(bad)
(bad)
jg
mov
cmp
jmp
push
movzx
movsx
in
mov
je
cmp
dec
inc
test
jle
cmp
clc
pop
dec
and
mov
mov
mov
jmp
dec
cmps
add
push
call
pop
adc
inc
cmp
jle
push
call
(bad)
cmp
adc
add
add
not
add
push
call
pop
mov
(bad)
fnsave
or
xor
retf
mov
add
or
push
call
or
sbb
dec
daa
je
mov
and
xor
cmp
and
inc
add
(bad)
jmp
call
mov
mov
cmp
or
or
xor
pop
or
sbb
inc
add
push
jne
push
call
fild
jmp
push
mov
cmp
xchg
dec
jbe
mov
push
shl
test
push
je
out
add
jecxz
add
jmp
arpl
test
call
shl
dec
jbe
mov
mov
mov
pop
cld
inc
shr
cmp
jb
cmp
adc
call
or
sbb
inc
add
je
push
push
cmp
outs
fwait
aaa
xor
bound
(bad)
jmp
mov
push
rcl
cmps
or
shr
lea
push
push
pop
add
aas
fwait
or
sub
loope
ret
jg
(bad)
call
mov
pop
inc
in
inc
adc
call
ja
inc
or
dec
cld
je
mov
push
push
mov
xor
cmp
sbb
jo
push
mov
xchg
test
add
cmp
jl
pop
pop
pop
mov
cmp
jle
mov
scas
or
sbb
dec
and
jbe
push
aaa
add
push
call
adc
mov
loop
sub
pop
ret
cmp
add
or
mov
push
push
pop
push
push
mul
xor
xor
mov
add
call
or
and
adc
ja
int3
push
and
or
mov
jnp
adc
std
cwde
inc
movs
or
and
adc
fcom
popf
cmp
into
popf
je
call
arpl
xchg
je
or
cmp
fadd
and
in
xchg
jl
jb
ss
and
leave
leave
leave
retf
pop
add
mov
call
or
bound
mov
dec
cmp
adc
mov
scas
jae
jnp
adc
cmc
pop
push
popf
or
and
aam
dec
out
and
xchg
dec
es
movs
jae
and
dec
cmp
pushf
cmp
test
dec
out
and
jmp
xor
lea
scas
es
xor
mov
pop
fiadd
lahf
fs
idiv
ja
mov
push
mov
imul
sti
ja
aas
and
push
push
push
push
call
cmp
mov
cli
outs
ins
adc
sahf
pop
or
clc
out
dec
push
xchg
or
or
jl
adc
outs
sub
je
add
mov
lods
adc
ret
jg
mov
push
cld
add
cmp
gs
out
clc
cmps
dec
int3
mov
cld
mov
mov
mov
(bad)
(bad)
inc
rcr
ins
int3
mov
call
push
mov
fchs
faddp
fst
fstp
adc
(bad)
push
push
lods
xchg
aaa
cmc
call
jp
and
jg
aaa
sbb
cdq
push
or
push
call
push
push
pushf
mov
sub
push
(bad)
sbb
(bad)
clc
mov
mov
xor
push
in
push
mov
or
inc
inc
lldt
push
push
push
sar
dec
aam
cmp
jne
mov
push
pop
or
mov
sti
sbb
pop
add
add
jae
add
adc
outs
jae
jae
adc
add
(bad)
out
out
adc
mov
adc
adc
mov
out
fiadd
sub
xchg
sbb
and
mov
and
scas
inc
ret
and
pusha
dec
push
mov
fild
or
inc
mul
push
or
fdiv
fstp
call
and
mov
out
popf
fstp
dec
cmp
and
push
pop
jo
fmul
push
push
mov
cmp
inc
dec
or
inc
adc
arpl
lahf
(bad)
neg
sbb
into
lock
push
fchs
lods
inc
pop
out
faddp
mov
push
sub
pop
push
cmp
push
mov
or
fnsave
or
jge
mov
push
(bad)
faddp
push
call
call
inc
in
aas
jl
mov
shl
dec
xchg
enter
push
mov
push
inc
or
dec
out
jmp
mov
mov
jbe
cmp
sbb
xchg
or
adc
pop
push
adc
sbb
mov
call
pop
data16
jb
jb
fistp
jb
ret
jle
jo
fdivr
push
fs
xchg
mov
idiv
mov
add
push
fwait
out
out
push
xchg
push
cmp
pop
and
mov
push
or
cmp
aas
cli
nop
mov
pushf
or
inc
sar
(bad)
mov
inc
in
mov
mov
add
lea
(bad)
call
cmp
jb
ja
mov
mov
cmp
jbe
mov
mov
jp
not
add
jmp
push
inc
cmp
jmp
lock
lea
mov
push
fwait
push
push
mov
mov
(bad)
jp
ret
xchg
xor
mov
loope
dec
push
call
and
push
sbb
call
inc
inc
loopne
jne
mov
mov
fild
push
fild
loop
sar
rol
mov
pop
inc
lods
cmp
movs
fistp
int3
pop
aas
ret
push
fcmove
fstp
mov
mov
dec
mov
mov
shl
jne
lds
fild
sub
add
or
dec
rcl
pop
and
push
fld
pushf
pushf
xor
mov
xor
stos
or
leave
fsin
push
mov
push
std
scas
fcomi
dec
cld
test
mov
and
gs
ror
sub
or
dec
(bad)
js
push
add
pop
pop
xlat
sbb
ds
push
scas
push
fsub
loopne
and
push
mov
add
inc
or
and
ja
fmul
clc
adc
or
fmul
fsubr
fstp
stc
(bad)
adc
fmul
inc
clc
pop
pop
leave
ret
out
loopne
mov
and
test
add
mov
test
je
mov
ins
clc
adc
iret
add
adc
cdq
mov
mov
(bad)
sbb
fistp
pop
ret
fld
add
test
cmp
aam
adc
fsubr
icebp
ja
xor
lds
in
xor
mov
fld
xor
fmul
fmul
out
pop
sahf
xor
push
cmp
lds
mov
ss
add
mov
addr16
cmp
dec
cmp
xchg
push
xchg
dec
fild
fild
jle
mov
sbb
call
call
loopne
push
or
jp
lea
fstp
push
call
ss
fcomp
je
push
adc
sbb
jne
lea
mov
cmp
jl
mov
ret
jecxz
sar
mov
jmp
call
xor
or
fmul
pop
pop
popa
jp
mov
and
xrstor
retf
hlt
cvtps2pd
jnp
or
lock
clc
call
call
leave
ret
imul
add
shl
mov
movzx
fidiv
movzx
js
push
call
adc
pop
pop
movzx
imul
lahf
std
leave
sbb
rol
jl
inc
inc
inc
cmp
jl
pop
cmp
mov
cmp
fucomip
fdiv
(bad)
movzx
sub
(bad)
out
verr
pop
pop
add
inc
add
xchg
loop
fadd
jmp
sahf
xor
out
cmc
inc
imul
pop
xor
sahf
add
add
fsubr
in
xor
fstp
outs
mov
inc
das
cmp
sbb
pop
aaa
inc
nop
jle
fadd
call
jg
ins
and
pop
pop
fmul
out
xor
push
sbb
jnp
push
movs
js
mov
adc
cmp
push
outs
adc
test
and
dec
cmp
jge
mov
call
mov
mov
call
xchg
rcl
neg
ret
push
push
neg
hlt
jge
sti
(bad)
(bad)
fadd
sub
mov
adc
add
add
mov
push
stos
push
xchg
dec
cdq
cmp
jne
cmp
ss
bound
fs
xchg
pop
ss
dec
fcom
sbb
shl
xor
cmp
pop
and
add
rcr
push
inc
into
(bad)
cmps
aas
pop
pop
jne
fld
adc
test
mov
and
jae
cmp
push
sub
xor
pop
add
gs
jge
fstp
sbb
icebp
or
sbb
dec
ret
pop
jmp
cdq
stos
call
jne
int3
cmp
push
sub
(bad)
push
jge
in
push
mov
data16
out
mov
mov
push
add
jp
dec
xor
push
jae
push
imul
es
out
pop
cmp
xor
into
and
fsub
(bad)
or
or
sar
push
sbb
shl
pushf
ins
pop
loop
xor
mov
xchg
add
push
add
cmps
sub
stos
rdpmc
out
pop
inc
int
jnp
popa
inc
mov
push
pop
add
or
push
pop
imul
pushf
xor
jp
jae
leave
adc
mov
sbb
iret
push
cwde
dec
cmp
dec
pop
push
mov
loop
lahf
ret
aam
or
call
jmp
in
pusha
adc
mov
sub
test
jmp
mov
inc
js
add
and
fld
call
mov
push
lahf
loope
es
fcomp
fimul
jl
add
jo
cdq
cmp
in
and
pop
and
(bad)
fld
or
adc
push
data16
jne
sbb
(bad)
adc
sbb
jg
jae
mov
daa
cmc
nop
or
cmp
push
jecxz
add
sbb
pop
fstp
pop
jmp
fstp
adc
inc
fisttp
mov
sar
mov
mov
test
push
mov
fwait
call
push
push
lea
pop
cmp
jne
pop
std
mov
add
dec
add
jae
call
add
dec
and
test
add
mov
std
jecxz
(bad)
jmp
movsx
mov
add
inc
mov
test
jne
jmp
or
lods
ret
sub
inc
inc
shl
jge
mov
les
jmp
cmp
add
out
ja
cmps
or
jmp
sub
or
jmp
or
inc
or
inc
add
repz
(bad)
mov
cdq
push
pop
idiv
add
mov
add
add
push
sti
jbe
push
jmp
rcl
out
jmp
sbb
and
pop
call
sbb
dec
add
sub
push
mov
fld
pop
aas
and
and
daa
mov
or
pop
push
push
push
push
daa
(bad)
push
mov
js
and
mov
jmp
cmp
fld
fst
out
psadbw
je
inc
call
pop
adc
aam
pop
call
out
add
fadd
or
mov
sub
test
ret
mov
aaa
add
out
je
sti
jge
(bad)
out
pop
cmp
jge
mov
movd
mov
pop
xchg
ffreep
inc
jmp
jge
neg
std
(bad)
(bad)
ja
sub
aam
cdq
idiv
jbe
push
loopne
inc
fsubr
xchg
jns
inc
in
ins
outs
pop
in
cdq
out
dec
mov
idiv
test
shl
pop
in
cmp
cmp
pushf
ret
popf
xor
std
dec
push
and
cs
call
(bad)
dec
sbb
pop
mov
sub
lea
lea
call
dec
jne
mov
dec
je
or
iret
dec
je
dec
jne
call
push
push
push
push
ja
rcr
int3
cmp
jne
sub
add
addr16
mov
mov
loop
push
repnz
addr16
das
or
push
dec
mov
sub
and
jnp
call
push
movsx
push
push
lock
inc
cs
jmp
aaa
sbb
push
loope
pushf
cmc
mov
inc
mov
or
xor
ret
pop
ror
jb
loopne
test
xor
nop
das
sar
xor
inc
sub
call
cmp
mov
into
pop
out
adc
add
pop
jecxz
push
lods
and
add
jmp
ja
mov
cmp
ja
test
in
js
mov
hlt
ins
mov
pushf
int3
fst
sbb
pop
push
xor
out
jp
jne
mov
sbb
mov
shl
add
cdq
int3
adc
cmp
adc
add
add
pop
mov
popf
pop
mov
xor
mov
push
cmc
and
repz
jmp
fsub
bound
dec
int3
push
xchg
int3
retf
and
and
add
cdq
arpl
and
lods
and
cmp
dec
out
push
pop
and
scas
ficomp
and
dec
and
mov
and
push
enter
push
jno
jb
pop
inc
push
inc
jp
jb
cmp
addr16
fsubr
adc
or
jmp
mov
test
imul
movs
add
cmps
repnz
adc
es
bound
stos
int
adc
xor
xor
outs
mov
sbb
pop
sti
push
jecxz
jl
mov
push
jne
iret
xchg
cli
rcl
push
xor
sar
jae
push
fsubp
inc
adc
add
add
loopne
rol
xor
pusha
shl
inc
adc
inc
sbb
mov
ja
mov
sbb
inc
sbb
and
or
sub
xchg
test
and
movs
sbb
add
out
sub
and
mov
lock
pop
pop
sbb
dec
fsub
sbb
pop
leave
ret
idiv
adc
and
push
mov
fld
cs
inc
js
das
add
sahf
xor
push
sub
mov
mov
fwait
push
jne
sub
or
sbb
shr
pop
inc
sub
repnz
dec
xor
aas
and
pop
adc
call
or
outs
or
xchg
fistp
call
xchg
(bad)
(bad)
dec
aad
sar
dec
jg
cmp
jl
cmp
jg
push
mov
call
push
(bad)
(bad)
cmp
pop
jl
or
mov
fstp
ss
sub
add
jl
xchg
fs
pop
repz
and
push
nop
pop
sbb
add
sbb
sbb
add
out
inc
lock
jmp
inc
inc
inc
cmp
jne
loopne
push
icebp
push
test
stc
jl
(bad)
(bad)
dec
push
mov
xor
cmp
jge
mov
mov
lea
cmp
jae
mov
(bad)
(bad)
(bad)
dec
mov
movzx
sub
jne
inc
inc
inc
inc
cmp
jb
cmp
jge
or
jmp
jle
xor
aad
pop
sti
inc
pop
pop
pop
pop
push
mov
push
cmp
ffreep
jg
add
jae
mov
test
je
loope
movzx
(bad)
out
(bad)
mov
sub
jne
inc
inc
in
inc
or
adc
aaa
add
push
push
push
xor
mov
lea
sar
movzx
sbb
dec
sub
rcr
mov
jle
jmp
mov
test
xlat
xor
call
mov
push
jg
sbb
inc
add
(bad)
(bad)
jmp
lds
sub
dec
test
jle
mov
lea
xor
mov
push
call
inc
rcr
adc
dec
dec
test
jg
mov
test
jne
mov
loopne
sar
test
add
lea
push
call
push
sar
sub
fistp
jmp
push
mov
call
imul
inc
pop
and
inc
mov
add
(bad)
ftst
inc
jle
push
call
push
(bad)
(bad)
(bad)
cmp
push
call
mov
push
mov
and
push
call
out
and
mov
js
adc
push
mov
push
shl
shr
add
imul
call
add
push
add
sbb
and
jae
jbe
rep
sbb
add
adc
mov
or
or
push
out
data16
dec
fst
ret
daa
cs
push
mov
and
imul
outs
(bad)
(bad)
mov
dec
dec
add
adc
jb
je
mov
mov
pop
cmc
inc
int
std
sub
shl
lea
test
mov
mov
jmp
and
mov
movs
push
or
lea
push
test
call
push
fmul
push
loop
imul
pop
pop
ret
movs
and
cli
sbb
in
cmp
push
je
dec
pop
stos
or
(bad)
push
sub
aaa
(bad)
push
and
clc
push
push
push
call
std
fwait
sbb
sbb
lds
cmp
sbb
mov
push
cmp
push
and
push
push
call
add
add
adc
adc
xor
(bad)
or
or
jge
mov
and
mov
idiv
or
pop
mov
add
clc
mov
add
retf
mov
jo
and
rcl
sub
mov
add
and
and
push
add
push
mov
call
ins
pop
pop
inc
into
call
sub
lea
call
mov
or
(bad)
cmp
mov
jge
mov
(bad)
std
pop
ja
add
test
inc
add
push
or
lahf
add
cmp
jle
xchg
inc
or
inc
or
pop
cmp
adc
dec
add
or
inc
ss
ds
fwait
pop
jnp
push
out
jmp
icebp
dec
ss
pushf
ror
int
push
ds
or
inc
add
dec
or
inc
add
cmp
ret
ds
es
dec
stos
mov
mov
mov
sbb
or
push
mov
inc
xor
int
or
push
fwait
jg
outs
and
fwait
cld
jmp
and
mov
aam
add
or
inc
or
into
call
call
sbb
call
or
mul
aaa
data16
(bad)
(bad)
inc
cmp
movzx
movzx
xor
cmp
je
inc
push
jg
mov
inc
inc
inc
inc
sub
push
xchg
mov
push
mov
and
pop
(bad)
jg
loope
and
cmp
mov
test
add
xor
(bad)
and
jb
cli
inc
lods
sti
push
ror
jb
out
jnp
shl
or
cli
(bad)
inc
popf
and
rcr
inc
(bad)
xlat
push
and
daa
es
test
call
(bad)
jae
and
mov
fild
pop
fld
pop
std
(bad)
aas
pop
pop
push
fstp
mov
jmp
call
mov
sub
test
loope
ret
fbld
jne
mov
add
cmp
mov
retf
call
adc
js
aas
clc
(bad)
jmp
sub
xor
cmp
jge
mov
mov
cmp
jne
mov
cld
loopne
neg
jl
pop
je
inc
inc
inc
cs
mov
mov
mov
jmp
mov
jge
mov
call
add
xchg
(bad)
jecxz
mov
inc
ja
or
or
inc
jne
fstp
xor
pop
sub
inc
test
mov
jl
cmp
jge
jg
ins
call
add
into
mov
push
inc
clc
inc
push
call
add
cmp
jb
jmp
and
jbe
or
mov
jmp
mov
sub
ja
stc
call
daa
mov
rcl
fild
jl
cmp
jge
xchg
jge
mov
test
jmp
call
or
and
test
out
sub
sbb
mov
or
jo
or
or
dec
outs
mov
clc
cmp
adc
xor
add
mov
sahf
mov
fmul
test
mov
es
ret
dec
dec
dec
jns
mov
xor
mov
out
sti
jmp
xor
jb
xor
in
call
xor
sub
inc
adc
aaa
jmp
cmp
mov
pop
pop
push
imul
aas
inc
(bad)
call
mov
cmp
push
mov
jne
lea
adc
add
cld
add
jne
push
pop
jne
push
inc
pop
inc
and
scas
pop
inc
test
jle
mov
sbb
imul
(bad)
(bad)
inc
test
jl
mov
shl
or
inc
cmp
mov
jl
popw
mov
or
add
add
push
out
inc
add
sbb
int3
std
add
inc
and
dec
je
add
dec
je
pop
inc
cld
add
xor
cmp
into
mov
icebp
add
add
adc
mov
call
pop
pop
mov
jmp
call
mov
jmp
mov
jmp
mov
jmp
mov
mov
inc
or
push
mov
xor
call
cld
outs
div
push
adc
mov
jnp
call
adc
push
push
push
call
test
clc
jmp
mov
mov
push
jae
call
push
fmul
test
mov
call
les
cli
bound
pop
dec
stos
stos
mov
add
add
mov
jg
aas
dec
pop
inc
sbb
jo
enter
jnp
(bad)
out
call
ret
push
push
ins
push
call
xor
pop
jmp
jmp
mov
or
cmp
add
sub
sti
mov
jmp
dec
sbb
jmp
sbb
inc
je
nop
test
neg
push
enter
mov
mov
dec
push
(bad)
jge
push
call
inc
sbb
les
pop
je
add
mov
adc
clc
add
cmps
test
cmp
into
mov
and
mov
cmp
shr
mov
adc
dec
mov
ret
push
out
mov
add
jmp
mov
jne
xor
xor
call
add
loope
out
dec
or
push
and
call
inc
std
adc
dec
cmp
je
push
mov
call
sahf
jae
push
into
dec
xor
or
fwait
movs
mov
xchg
mov
sub
push
dec
pop
add
add
scas
ret
ds
call
mov
push
jmp
jmp
ins
cmp
jne
mov
jmp
es
xor
pop
or
retf
leave
call
jne
jmp
xor
add
sub
xchg
push
mov
cmp
or
push
push
aaa
fsubr
out
adc
les
push
push
inc
mov
rcl
(bad)
lods
adc
adc
out
cli
call
imul
pop
and
and
push
cld
(bad)
adc
push
cli
add
sbb
pop
cwde
iret
adc
cmp
push
add
aam
pop
mov
push
ret
pusha
pop
(bad)
aad
call
dec
mov
cmc
mov
jle
mov
fmul
inc
add
sti
icebp
inc
mov
cdq
ret
xor
(bad)
push
mov
push
(bad)
inc
es
sub
mov
mov
push
push
call
rcr
call
fwait
pop
jmp
mov
adc
dec
fcomp
cmps
out
retf
call
(bad)
(bad)
jmp
cmc
jbe
push
lea
call
jmp
movzx
push
push
call
(bad)
adc
pop
pop
sbb
jo
push
loop
mov
add
je
push
inc
mov
mov
and
mov
adc
and
ror
jae
inc
inc
mov
test
jne
fwait
and
add
call
cld
test
(bad)
cmp
cdq
push
stc
ja
pop
pop
fwait
cmp
mov
popa
jne
push
push
call
outs
xor
jle
or
or
mov
test
jne
or
call
xor
jnp
shl
sbb
into
call
mov
mov
bound
imul
repnz
ret
clc
push
(bad)
jg
retf
call
or
pop
or
mov
adc
mov
mov
je
mov
jmp
mov
mov
into
and
jg
jge
cmp
jne
outs
sub
mov
sar
mov
pop
adc
add
push
jb
es
sbb
adc
lock
add
jle
inc
sub
push
dec
clc
lock
js
es
jne
adc
inc
or
adc
or
mov
add
add
cmp
jb
scas
fisttp
xchg
or
fdiv
push
jae
fcomip
dec
inc
sub
ror
cdq
sbb
(bad)
fisttp
add
fadd
mov
loopne
jbe
jg
je
add
jmp
inc
mov
inc
lea
mov
and
out
jmp
fs
xlat
(bad)
jecxz
sub
(bad)
ins
dec
mov
or
add
jge
add
adc
scas
push
jle
addr16
inc
bnd
lock
lock
mov
dec
sbb
jmp
mov
jno
add
xor
jmp
or
sar
stc
mov
stos
into
call
sub
jge
and
dec
call
xor
push
lea
push
or
outs
loopne
ret
iret
ss
fisttp
cld
jle
loopne
cli
fnsave
add
mov
jne
fadd
mov
movzx
mov
push
call
mov
cli
dec
test
sbb
add
push
call
(bad)
(bad)
fbstp
shl
or
test
mov
js
movzx
mov
jmp
pop
dec
mov
xor
inc
test
mov
je
scas
mov
sar
cmp
mov
cmp
mov
add
(bad)
in
mov
jae
dec
mov
lea
lea
cmp
jge
lock
lea
icebp
mov
inc
or
inc
dec
cmp
dec
out
xor
ret
push
stos
adc
rol
mov
push
call
(bad)
mov
sub
sar
test
mov
inc
lock
add
inc
mov
inc
cmp
inc
adc
dec
in
lea
push
push
dec
(bad)
mov
and
test
xlat
mov
cmp
jae
jecxz
mov
jne
push
or
pushf
je
mov
jmp
mov
mov
mov
mov
inc
mov
stos
dec
inc
cmp
jle
jmp
in
mov
jmp
adc
sbb
clc
(bad)
mov
add
(bad)
inc
jmp
inc
(bad)
mov
inc
and
add
mov
or
gs
ror
push
mov
jp
and
mov
addr16
xchg
arpl
mov
adc
push
call
loopne
adc
mov
out
pusha
add
add
outs
iret
jmp
sbb
sar
call
mov
push
mov
shl
mov
les
xor
sub
push
call
adc
dec
sbb
call
jg
test
sub
pop
lea
jg
pop
dec
clc
push
push
push
call
je
push
ret
pop
add
adc
inc
or
mov
(bad)
hlt
aaa
fmul
mov
shl
push
add
xor
pop
je
adc
inc
in
loopne
push
mov
and
and
add
je
dec
pmullw
je
dec
je
add
mov
jae
push
sbb
jne
aaa
in
pop
push
push
xbegin
movs
mov
or
scas
pop
std
rcr
mov
jecxz
in
jmp
mov
sar
jl
dec
dec
and
xor
fdiv
add
je
pop
pop
(bad)
(bad)
data16
push
call
or
pop
adc
push
push
sbb
ret
pusha
adc
inc
enter
aas
lea
cmp
inc
adc
pop
add
mov
add
cs
lds
int3
mov
cmc
xchg
xor
jo
ins
push
jmp
scas
mov
or
add
add
scas
stos
fmul
call
or
push
inc
or
jne
jmp
call
inc
fs
(bad)
ja
push
call
mov
cli
jg
xchg
gs
shl
into
push
call
sbb
add
call
sbb
test
jo
push
or
or
je
je
xor
or
repnz
jle
(bad)
adc
je
cmp
sub
jbe
dec
cdq
(bad)
clc
in
call
je
mov
mov
stos
or
or
je
or
jmp
and
or
mov
(bad)
scas
popf
jmp
jmp
inc
or
sub
fsub
movs
int3
mov
lds
push
call
leave
cld
(bad)
(bad)
cmp
jne
and
and
jmp
mov
jmp
int3
or
pushf
sub
clc
mov
bnd
mov
jg
sbb
sub
in
(bad)
jmp
inc
add
sar
and
div
ret
dec
cld
and
dec
push
push
push
fld
into
aaa
pushf
jne
fstp
out
and
fwait
jge
test
sbb
ja
cld
xchg
ror
add
cmp
aas
neg
jne
and
mov
sub
loop
jle
fbld
push
cmp
sbb
scas
xor
push
push
call
loope
cmp
je
inc
jle
cmp
jle
in
jne
cmp
xor
add
xor
call
inc
mov
aaa
mov
or
enter
cli
push
mov
inc
push
jg
inc
jne
dec
jb
(bad)
call
and
jmp
jno
inc
mov
ror
inc
xor
jne
and
jne
cmp
push
adc
sub
js
jne
gs
jge
jmp
dec
adc
push
mov
call
jmp
sti
sti
fsubr
mov
xor
dec
enter
js
mov
and
or
jbe
cmp
mov
fadd
pop
mov
outs
sub
fcomip
icebp
ret
cmps
cmp
mov
je
mov
pop
mov
add
dec
inc
adc
pop
ret
add
sbb
or
leave
ret
push
call
jg
or
cli
(bad)
(bad)
out
or
sbb
dec
adc
les
or
mov
inc
dec
add
add
sub
cmp
adc
inc
adc
push
jmp
outs
mov
cmp
sahf
or
xor
cmc
data16
stc
ja
push
ss
je
or
or
jmp
pop
call
jmp
js
fdivr
jne
push
aad
push
call
in
loope
lahf
mov
fld
ror
aad
fadd
popa
call
xchg
add
ja
push
mov
dec
out
ds
dec
not
std
cmp
jne
gs
mov
shl
call
inc
sub
sbb
int
call
mov
mov
pop
pop
popa
adc
adc
adc
in
or
cmp
je
mov
adc
cmps
or
cmc
push
ret
push
inc
xor
push
push
push
std
mov
stos
ret
sbb
or
push
arpl
sbb
pop
and
clc
(bad)
jmp
ror
popa
add
rcl
je
adc
mov
je
add
and
cmovs
test
(bad)
sub
daa
call
or
pop
mov
shr
mov
nop
sbb
add
sbb
dec
(bad)
fld
fld
call
fild
jmp
cmp
or
test
cmp
ret
pop
adc
mov
rcl
and
jnp
fmul
push
adc
mov
ins
bound
mov
add
test
jne
push
pop
jmp
test
mov
add
enter
lock
rcl
scas
pinsrw
jne
or
xor
dec
inc
shl
call
cdq
push
in
loopne
(bad)
rol
jmp
jle
setne
inc
inc
fsubr
inc
je
or
mov
std
add
shr
sub
inc
nop
in
xchg
pop
cs
shr
aaa
add
retf
call
push
push
or
or
call
push
sub
test
fadd
push
dec
add
loopne
and
inc
or
push
ins
push
je
call
sbb
sub
lods
sub
dec
iret
call
pusha
jmp
or
push
push
ficom
pop
mov
pop
das
fwait
gs
jne
jo
push
dec
jo
into
call
mov
mov
leave
fstp
movs
retf
or
clc
outs
mov
data16
je
loope
ja
in
or
cs
or
push
pushf
(bad)
(bad)
fstp
pop
je
scas
or
fmul
jne
add
fcom
scas
adc
mov
adc
daa
ss
add
jecxz
inc
lock
arpl
div
jo
sbb
shr
fdivr
lods
cmc
push
push
call
je
add
popf
dec
mov
xchg
(bad)
and
ja
mov
or
jmp
push
add
xchg
ret
call
or
mov
push
adc
test
call
push
adc
jnp
(bad)
jmp
or
pop
mov
fsubr
stc
and
mov
mov
lea
jmp
popa
jmp
mov
shl
shr
push
pop
push
std
and
ss
mov
cmp
cmp
mov
inc
fidiv
pop
sub
ror
test
mov
jns
(bad)
mov
sbb
cli
add
pushf
mov
push
inc
(bad)
sti
sbb
je
cmp
leave
cmp
jle
dec
das
rol
aaa
mov
jmp
sub
mov
mov
out
push
call
sub
cs
push
retf
inc
adc
imul
jg
xchg
js
xor
add
idiv
mov
cmp
push
call
shl
add
add
push
push
and
lock
xchg
call
sbb
clc
sbb
loop
inc
sub
inc
inc
mov
mov
out
cmp
pop
push
call
sbb
push
push
add
mov
arpl
rcl
call
jmp
shr
push
daa
push
adc
xchg
xor
scas
inc
cmps
int3
inc
lahf
push
add
lods
sub
push
rcl
imul
push
or
pusha
push
rol
lods
adc
and
push
retf
lock
push
add
add
push
cmp
je
inc
(bad)
push
inc
adc
or
jae
xor
icebp
(bad)
mov
shl
mov
shr
test
xchg
fist
inc
ret
xor
ret
xlat
cmp
adc
push
(bad)
mov
scas
sbb
mov
fbld
call
cmp
jmp
inc
jne
mov
push
add
push
or
inc
xchg
push
mov
dec
dec
rcr
lea
nop
(bad)
ror
xchg
dec
adc
inc
mov
inc
retf
les
inc
je
mov
mov
mov
push
and
jmp
sbb
test
mov
je
push
call
iret
addr16
rol
cmp
dec
in
mov
dec
fdiv
ror
ja
add
pop
mov
mov
popf
mov
stos
add
pop
or
test
mov
dec
cld
or
je
mov
push
push
or
cmp
add
push
adc
push
pop
sbb
not
inc
adc
and
sbb
fisttp
mov
or
stc
test
push
mov
(bad)
call
inc
clc
or
je
push
mov
call
cld
fld
aaa
sub
push
adc
adc
add
ret
pop
pop
mov
adc
pushf
fs
sub
das
and
ss
test
add
test
js
adc
aas
add
or
adc
cmp
and
sti
jne
inc
scas
add
push
jle
mov
cmp
je
cmp
je
mov
mov
push
call
inc
js
add
mov
mov
(bad)
loopne
fimul
cmp
je
mov
xchg
je
dec
sub
jl
cmp
je
jmp
cs
mov
fnstsw
push
inc
adc
and
sub
test
aaa
adc
aaa
sahf
retf
adc
mov
(bad)
and
push
movs
jg
(bad)
out
ret
add
mov
test
jns
push
cmp
mov
mov
mov
or
and
rol
ret
(bad)
jmp
inc
mov
test
jne
fimul
(bad)
sti
std
mov
inc
adc
pop
inc
adc
ret
mov
xor
fild
std
cmp
je
cmp
ret
add
add
mov
and
jmp
add
add
and
sbb
ja
xor
cmp
mov
je
xchg
inc
clc
pop
cmp
jge
mov
cmp
mov
mov
jle
push
lea
adc
inc
inc
outs
retf
aas
mov
call
dec
clc
mov
mov
add
push
call
add
or
and
push
dec
push
push
push
popa
clc
push
mov
or
add
push
add
mov
cmp
mov
js
sbb
adc
inc
push
jbe
push
mov
loope
popa
je
dec
clc
mov
nop
push
jno
push
icebp
push
call
or
jg
mov
mov
mov
dec
adc
mov
push
push
call
call
mov
add
pop
pop
xor
cmp
out
out
call
add
js
mov
sub
clc
dec
cmp
sti
rcr
add
loopne
test
mov
and
jno
mov
stc
mov
aas
push
out
dec
dec
stc
mov
(bad)
(bad)
fadd
ins
mov
je
mov
mov
sub
dec
cmp
jle
push
popa
out
(bad)
cmp
leave
loopne
xchg
dec
pop
and
retf
push
push
leave
lock
call
into
jge
arpl
ret
mov
mov
mov
push
and
push
push
call
inc
xor
add
add
ror
dec
dec
add
(bad)
adc
sub
inc
jp
mov
cmp
mov
aam
call
mov
(bad)
ja
and
jb
ja
add
add
add
dec
mov
adc
sbb
push
mov
mov
rcl
(bad)
call
lods
inc
add
cmp
mov
or
inc
and
je
inc
cmp
jl
outs
add
imul
mov
xor
add
dec
adc
inc
sbb
add
push
dec
leave
push
mov
xor
bswap
fmul
cli
fild
jo
add
call
mov
dec
sbb
add
popf
push
mov
call
ds
adc
(bad)
out
or
add
mov
mov
cmp
pop
je
test
jle
mov
push
sub
rol
push
icebp
icebp
jl
call
xor
jo
call
add
cld
mov
adc
jecxz
adc
push
and
call
sbb
mov
jmp
xor
pop
pop
mov
xor
into
hlt
rcr
cmp
push
cmp
add
(bad)
aaa
cmc
fwait
inc
fadd
inc
sub
out
push
(bad)
sar
call
cmps
or
adc
mov
add
add
push
push
mov
fadd
adc
ins
sbb
cld
jg
pusha
or
inc
adc
or
add
jmp
out
(bad)
add
xor
mov
add
push
loopne
jmp
xor
sbb
sub
inc
cld
cmp
push
lea
iret
iret
add
jge
jmp
pop
dec
inc
mov
(bad)
push
stc
jge
mov
mov
test
je
cmp
jge
inc
sar
mov
adc
jle
rol
ror
sbb
call
lods
or
jne
push
ret
and
clc
push
call
sub
inc
cmps
adc
(bad)
(bad)
jg
add
dec
push
mov
lea
push
push
mov
call
mov
or
call
std
jmp
popa
mov
and
add
add
cmp
mov
cmovno
aas
push
push
mov
movzx
cmp
push
cmp
jne
adc
mov
inc
pop
mov
mov
ja
sbb
push
jmp
(bad)
je
jmp
dec
je
push
icebp
or
call
push
cmp
or
call
or
cld
or
push
call
ud0
dec
aad
push
cwde
inc
or
call
cmp
push
test
push
push
shl
(bad)
jmp
and
or
int3
rol
adc
add
jge
dec
es
clc
lea
push
call
mov
sub
push
mov
out
mov
add
daa
inc
jmp
movzx
dec
jne
aas
cmp
mov
movzx
pop
jg
add
call
mov
call
(bad)
fstp
stos
pop
sbb
inc
lea
sub
add
adc
(bad)
call
inc
pop
cld
mov
add
cmp
jb
cld
test
xor
push
rcr
int
or
mov
add
jle
mov
mov
mov
inc
idiv
dec
sbb
jmp
rol
or
mov
(bad)
ja
inc
cmp
jl
add
rol
mov
push
push
xchg
cmp
cmp
je
adc
mov
and
jno
cmc
and
push
mov
mov
addr16
call
jp
fwait
push
adc
sub
stos
pop
add
push
ins
sub
cmp
shr
push
jg
jmp
sbb
mov
cmp
je
inc
cmp
ret
or
(bad)
pop
cwde
dec
shl
jbe
je
call
inc
push
adc
mov
push
scas
(bad)
mov
add
push
call
and
and
js
or
dec
push
mov
mov
(bad)
jne
cmp
jle
cmp
jle
lea
push
(bad)
call
mov
lea
mov
mov
cmp
jmp
jne
jmp
mov
dec
js
add
lea
lea
lea
inc
sub
mov
mov
mov
sub
sub
dec
out
loopne
icebp
ret
loop
lock
mov
test
jl
mov
mov
mov
jmp
jp
neg
sub
or
pop
pop
lock
sbb
or
(bad)
or
es
ror
sub
pop
retf
mov
cmp
or
mov
hlt
dec
cld
aaa
je
xor
inc
sbb
sar
and
mov
loopne
push
call
mov
or
push
out
dec
adc
out
out
adc
xor
push
push
push
call
call
mov
mov
jle
push
push
push
push
enter
or
rol
fld
add
into
push
std
push
push
sbb
sbb
push
jns
and
loopne
xchg
push
jns
inc
loop
out
cmp
mov
test
je
test
je
push
sar
call
mov
add
out
call
jle
jbe
and
hlt
(bad)
push
iret
call
sub
fcom
pop
sbb
dec
pop
pop
or
ror
and
pusha
stos
mov
mov
and
ret
xchg
xor
(bad)
xor
or
or
dec
cmp
mov
rol
iret
and
bswap
sbb
and
or
mov
mov
cmp
call
mov
dec
add
push
lock
xchg
mov
jmp
psrad
call
ror
adc
rol
shl
push
push
rol
inc
arpl
aam
jb
cld
jg
shr
mov
dec
mov
cmp
jecxz
jmp
jg
(bad)
mov
jmp
and
sub
or
jne
add
sbb
mov
add
iret
push
lea
push
push
pusha
out
pop
jle
sbb
clc
or
dec
adc
adc
inc
ds
pusha
adc
or
sbb
shl
aam
call
inc
or
push
adc
out
sar
pushf
(bad)
int
mov
sbb
mov
adc
loope
add
add
call
push
lock
ss
push
mov
pop
not
and
call
dec
or
outs
dec
dec
pop
or
add
mov
sub
add
add
ins
and
jle
and
mov
out
outs
mov
mov
hlt
cmp
jae
or
jl
and
mov
mov
inc
inc
jmp
std
mov
sub
js
shr
and
or
and
pop
inc
lock
mov
inc
or
sub
out
(bad)
fdiv
push
(bad)
(bad)
dec
sbb
mov
call
sar
inc
lods
cmp
cmp
ja
movzx
outs
cmp
sub
shl
add
arpl
std
jg
js
and
or
mov
or
and
or
cwde
sti
leave
add
fadd
jge
lds
popf
jmp
jmp
je
or
pop
add
add
arpl
mov
or
add
dec
add
cmp
jg
inc
lds
jg
and
xchg
or
mov
dec
cmp
sti
push
test
sbb
inc
inc
jmp
or
jb
push
into
pushf
sti
popf
clc
sbb
and
sub
xchg
stc
mov
add
mov
mov
outs
jmp
rcl
cmp
(bad)
or
ds
inc
clc
out
and
movzx
xor
cmp
push
pop
jb
or
xchg
and
fistp
in
cmp
jne
add
mov
out
(bad)
(bad)
fisttp
rol
sbb
jg
adc
add
cmp
(bad)
mov
shl
loop
or
cmp
call
sub
or
add
aam
sub
xor
inc
adc
mov
lea
add
pop
and
dec
add
sub
add
jmp
into
pop
fadd
jl
sar
shl
jge
push
add
jne
mov
jl
arpl
mov
loopne
or
shl
and
xchg
add
jb
sbb
(bad)
jg
add
test
je
dec
js
mov
inc
inc
jmp
cmp
jl
retf
add
pop
mul
jne
mov
pop
dec
shl
aas
out
dec
inc
or
lock
dec
test
or
mov
inc
inc
dec
inc
inc
cmps
or
adc
cli
sbb
xchg
cmps
leave
ret
mov
retf
adc
test
ret
dec
je
or
movzx
cmp
jbe
mov
sub
mov
shr
add
cmp
cmova
ins
mov
add
push
imul
lock
cmp
lds
cmp
mov
mov
add
add
mov
sub
lock
cmp
(bad)
sub
loopne
shl
(bad)
push
adc
sar
add
out
add
inc
jmp
cmp
jl
dec
cld
fcos
xor
jne
mov
mov
aas
jne
and
or
xchg
pop
loopne
or
ss
ins
sub
data16
ret
out
add
cs
jl
jp
or
sti
leave
dec
sbb
push
sub
inc
inc
inc
dec
dec
jmp
dec
inc
inc
adc
xchg
pop
ret
sub
lea
jmp
xor
and
inc
cmp
jbe
inc
mov
sbb
js
cmp
jle
cmp
loope
loope
jle
push
jle
push
je
sbb
and
mov
or
rcr
pop
ret
push
pop
mov
or
sub
add
cmp
jle
xor
mov
mov
dec
int
out
(bad)
inc
cmp
mov
jl
cmp
and
sbb
mov
jmp
(bad)
in
clc
ja
pop
mov
push
jae
or
add
rol
(bad)
push
ins
sar
jne
mov
shr
and
or
and
or
cmps
fdivr
ret
mov
push
jmp
sub
psadbw
or
loope
or
mov
xor
or
xor
loope
cld
add
scas
mov
popf
fwait
cld
xor
and
or
xor
dec
add
add
jmp
inc
jns
add
inc
sbb
clc
mov
shr
mov
mov
and
lahf
out
sti
or
mov
(bad)
or
push
and
scas
mov
mov
push
inc
push
aam
call
and
mov
sub
cld
mov
or
and
inc
pop
push
sbb
or
add
cwde
xor
es
sbb
pop
add
inc
add
lock
jmp
movs
pop
ret
das
add
je
add
sbb
cld
mov
jmp
push
add
inc
or
pop
sar
push
sbb
jb
push
call
call
pop
daa
push
nop
shl
and
pop
mov
or
ret
orps
adc
stc
mov
into
call
loopne
(bad)
inc
je
cmp
call
stc
jle
cmp
jle
aaa
mov
or
mov
mov
mov
clc
mov
inc
dec
sbb
test
sahf
call
adc
call
test
stc
and
push
jmp
das
sub
push
push
call
mov
call
call
mov
loopne
cmp
mov
mov
add
or
pop
cmc
fcomip
sar
(bad)
jmp
or
cmp
je
in
adc
add
out
mov
ss
xchg
int3
mov
push
imul
pop
xchg
inc
mov
add
mov
test
dec
sbb
jmp
nop
call
pusha
ds
into
push
call
mov
push
clc
jbe
dec
push
call
iret
push
mov
sub
jne
mov
inc
or
lock
lea
push
call
nop
inc
stos
bound
(bad)
or
push
mov
add
xchg
mov
lea
mov
fdivrp
or
dec
mov
push
loope
jge
mov
and
scas
in
jnp
mov
hlt
mov
shl
icebp
push
shr
lea
rep
int3
cmp
jae
rep
aas
outs
cli
or
push
mov
mov
sub
and
test
mov
jne
dec
add
xchg
mov
mov
mov
mov
adc
pop
pop
add
sar
add
mov
add
push
call
mov
dec
sbb
mov
ja
sub
jne
mov
(bad)
push
dec
dec
mov
or
mov
or
adc
mov
mov
mov
jne
jmp
sub
iret
stc
push
call
xlat
popf
mov
and
call
push
call
stos
rcl
mov
mov
mov
iret
fdivp
dec
and
inc
adc
inc
sbb
inc
inc
sbb
and
push
scas
ja
xor
mov
ret
shr
jg
cmps
cmp
mov
mov
mov
mov
add
fdivp
add
bound
pop
ret
jmp
int
or
add
add
add
in
lea
add
xor
push
pop
ret
mov
and
hlt
fisttp
mov
jmp
mov
push
into
ret
add
js
and
mov
call
(bad)
jg
ret
std
push
sub
xor
dec
sbb
fwait
loop
cmp
je
mov
pop
jmp
or
pushf
and
fild
cmp
jae
cmps
dec
jae
add
addr16
push
push
call
pop
sahf
scas
call
or
cmp
ror
inc
adc
mov
stos
sbb
mov
xlat
dec
or
(bad)
jg
mov
xor
iret
mov
call
pop
jmp
cmp
mov
adc
pusha
jle
shr
push
mov
call
test
lock
push
int
(bad)
jmp
inc
add
dec
fld
lock
or
enter
push
cmps
ficomp
pop
call
and
sahf
push
in
call
sar
jne
sbb
sbb
fnsave
dec
adc
push
push
pop
mov
hlt
inc
add
mov
jmp
clc
ret
dec
sub
call
jp
mov
call
mov
test
push
fcom
jg
or
or
or
or
icebp
into
jmp
(bad)
fwait
clc
push
inc
sub
push
js
add
cmp
pop
aad
xor
out
push
jmp
and
jg
adc
outs
xlat
(bad)
jmp
and
mov
(bad)
or
call
(bad)
out
pop
pusha
sbb
movs
cmp
mov
jne
xor
add
pushf
hlt
shl
(bad)
inc
push
push
push
mov
call
mov
push
lea
call
scas
jns
inc
add
js
add
jne
je
mov
or
fdivp
ja
cmp
call
add
(bad)
mov
stc
push
je
mov
jmp
or
mov
nop
dec
add
xor
aad
push
xchg
mov
push
inc
adc
cmp
add
loopne
call
cli
push
add
mov
dec
adc
outs
test
lea
repz
cld
mov
rep
mov
mov
call
jmp
and
dec
adc
inc
adc
push
push
lea
pop
ret
loope
retf
cmp
sbb
je
test
loopne
daa
mov
push
mov
test
adc
std
sub
pushw
add
je
fsubr
mov
add
jmp
neg
sub
retf
dec
add
sbb
inc
dec
mov
and
xchg
mov
and
adc
ja
loopne
jb
in
fsub
pop
xchg
jbe
mov
lea
call
mov
ret
hlt
push
mov
test
ds
imul
push
dec
inc
sbb
sbb
cmps
ja
fwait
xchg
inc
and
inc
add
inc
call
push
jle
inc
adc
push
xchg
adc
loop
mov
test
mov
(bad)
not
jo
jno
scas
dec
mov
jle
sbb
xlat
outs
pop
les
rcr
js
in
fsub
jo
push
sbb
call
adc
and
call
and
push
push
xor
adc
add
add
adc
pop
mov
lock
mov
add
cmp
jg
xchg
jmp
cmp
xchg
sub
sub
jmp
cmp
xor
jae
push
cmp
mov
push
je
add
or
cmp
shl
add
jmp
idiv
adc
or
jmp
or
retf
and
cmps
loop
(bad)
in
mov
sbb
mov
xor
inc
std
iret
je
pop
cld
mov
push
sbb
inc
sub
(bad)
mov
call
mov
add
mov
mov
rcl
mov
adc
loop
cmp
sbb
inc
add
jl
push
inc
sar
inc
jge
cmp
ror
and
std
out
loopne
movups
adc
xor
push
call
mov
lock
dec
adc
mov
cld
cs
adc
jne
test
mov
fstp
lock
cs
in
ins
mov
cli
push
or
sar
xor
push
push
call
or
cmp
add
mov
test
inc
cld
div
mov
and
daa
sbb
adc
in
lea
call
inc
xor
sbb
pop
or
cld
ja
test
add
push
or
jg
pop
inc
adc
cs
movs
push
call
and
mov
mov
inc
mov
inc
ds
dec
ins
and
into
call
jmp
por
fiadd
clc
push
xchg
call
gs
add
mov
dec
xchg
xor
add
call
sbb
push
mov
cmp
add
pop
jnp
rcr
je
jmp
push
cmp
fwait
out
adc
pop
fadd
xor
jnp
and
pop
ret
jae
je
or
aaa
js
dec
push
imul
fdivr
mov
jmp
sub
pop
jb
mov
cli
fisubr
test
or
mov
das
pop
mov
ror
mov
(bad)
movs
outs
or
inc
clc
call
clc
cmp
dec
clc
and
add
ins
push
push
cmps
ret
daa
call
mov
jne
daa
mov
and
aas
fldlg2
imul
mov
mov
out
inc
pop
inc
jno
and
ja
mov
push
inc
mov
mov
pop
jnp
in
test
stc
mov
cs
mov
mov
sti
jae
xchg
sub
mov
stos
add
out
lods
push
mov
mov
call
lds
mov
stos
jbe
fadd
mov
dec
pop
jl
sahf
dec
or
fsubr
and
sub
pop
jmp
scas
sub
test
mov
xor
lds
mov
retf
mov
adc
out
cwde
hlt
inc
dec
adc
jno
push
call
pop
pushf
mov
adc
stos
inc
clc
outs
popa
iret
call
xlat
fdivr
fcmovu
std
sbb
ja
lea
push
int
pop
xor
popa
mov
mov
jle
lea
mov
jmp
call
and
and
add
jne
mov
cmp
mov
jl
mov
push
push
jmp
sub
or
inc
pop
rol
iret
ret
aas
cdq
sbb
scas
push
jne
push
inc
ret
mov
sti
push
xor
push
std
aad
out
in
inc
ins
add
push
mov
aas
adc
cmp
mov
xchg
jne
mov
test
jne
inc
mov
inc
mov
pop
and
sub
inc
inc
inc
push
dec
inc
adc
mov
add
je
aas
cld
out
or
icebp
(bad)
fstp
jmp
in
push
sbb
push
mov
inc
or
sti
loop
(bad)
jmp
hlt
ffreep
jmp
shr
jmp
fucomi
add
cli
out
sbb
dec
sub
call
sub
aas
add
push
mov
(bad)
cli
jno
out
inc
mov
div
xor
outs
push
in
add
test
leave
add
push
sub
pop
sti
lods
add
cmp
pop
jp
ret
sar
dec
out
mov
jg
adc
ret
test
mov
je
popf
jnp
push
inc
mov
adc
es
dec
xor
test
jle
add
mov
loop
(bad)
ja
cmp
jl
xor
jmp
mov
(bad)
dec
or
sar
push
adc
add
pop
aam
xchg
add
pusha
add
(bad)
xchg
call
push
adc
lahf
mov
adc
xor
loop
fild
ja
and
mov
mov
xor
test
(bad)
(bad)
dec
push
mov
mov
and
jne
cmp
jne
test
jne
jp
and
jl
add
call
xor
into
call
xlat
dec
fadd
dec
or
sbb
push
add
inc
add
es
cmp
jge
into
call
clc
(bad)
(bad)
(bad)
cmp
je
inc
jmp
xor
pop
je
test
cli
ror
cmp
inc
inc
fst
jne
sub
inc
push
sbb
jle
ror
call
push
hlt
ja
loop
jg
(bad)
push
call
adc
je
push
fisttp
call
pop
sbb
(bad)
shr
pop
pop
ret
mov
add
inc
les
jne
fsubr
push
mov
outs
mov
not
jg
push
mov
and
mov
push
jmp
(bad)
(bad)
int
inc
call
test
push
call
jnp
je
or
adc
inc
icebp
jge
adc
mov
pop
push
(bad)
cli
jg
push
rcl
pop
mov
mov
cmp
jne
test
je
lahf
xchg
stos
fwait
ret
iret
call
push
mov
lock
clc
call
call
call
jne
ret
je
jb
xor
gs
jmp
push
pop
adc
stos
clc
mov
jmp
in
pop
cld
jle
push
mov
shl
push
jp
addr16
push
mov
jo
loope
jg
inc
into
call
cld
push
jge
push
(bad)
sbb
sub
hlt
or
jl
xchg
dec
sbb
scas
or
xchg
jnp
mov
retf
adc
mov
test
jne
cmp
jle
outs
mov
pop
jge
test
jle
fld
loop
sbb
lds
sub
add
cld
aam
mov
call
fcomp
add
cmp
cld
leave
retf
jo
push
loope
mov
shl
lock
inc
cmp
add
aam
(bad)
or
je
or
ret
xor
jne
je
or
arpl
enter
add
push
or
pop
(bad)
(bad)
(bad)
jg
(bad)
mov
add
jle
shl
cmp
jl
add
nop
mov
add
ja
clc
aas
pop
pop
movzx
sub
ret
inc
adc
pop
jae
jp
ja
inc
and
dec
je
stos
pop
push
dec
add
push
sbb
mov
std
aas
fwait
and
cmp
je
add
je
ja
fstp
or
sbb
je
mov
je
push
outs
ret
sub
je
sub
jne
inc
inc
jmp
or
mov
mov
cmp
je
add
add
inc
in
jg
push
adc
push
test
jge
neg
je
add
fld
fdiv
fstp
sar
fld
fmulp
jne
jmp
je
pop
leave
test
or
cmp
hlt
aaa
inc
add
pop
je
fsubr
(bad)
call
leave
jecxz
sbb
(bad)
mov
fwait
add
add
enter
jmp
sti
stos
and
cmc
jmp
jg
jae
add
inc
pop
jne
and
add
jge
add
push
push
push
out
mov
inc
adc
add
jle
scas
outs
adc
add
pop
xor
inc
jl
ss
jg
and
test
push
lea
jne
mov
(bad)
push
add
push
xor
cmp
jne
test
setl
test
je
neg
jmp
xor
mov
jmp
(bad)
push
test
or
add
jmp
add
mov
dec
dec
cld
(bad)
push
mov
mov
mov
mov
lea
sub
sar
pop
cld
mov
mov
retf
rep
mov
pop
enter
mov
add
add
leave
ret
call
and
adc
adc
mov
mov
(bad)
dec
shl
xor
sar
sub
mov
imul
imul
jae
add
push
sub
and
sti
add
mov
sub
add
push
jg
inc
add
pop
mov
pop
shr
xor
add
add
call
inc
push
call
ins
or
or
jle
or
xchg
je
(bad)
or
ret
jmp
jg
fld
fild
pop
fmul
mov
adc
inc
jge
test
mov
jnp
(bad)
out
mov
push
clc
dec
fwait
add
inc
clc
add
mov
fild
fild
xchg
loop
adc
ret
(bad)
adc
loop
inc
or
sub
(bad)
(bad)
fld
mov
or
pop
cmp
pop
jne
and
loopne
inc
gs
into
cli
jmp
int3
and
sub
adc
and
jecxz
adc
sar
inc
or
cmp
pop
pop
jne
mov
adc
inc
cmp
je
cmp
aaa
xor
(bad)
inc
push
push
push
push
lea
xor
inc
inc
call
mov
xchg
push
mov
push
call
or
push
stos
out
cli
cmp
adc
shl
and
add
out
xchg
shl
mov
jmp
jno
cmp
sbb
cmp
pop
(bad)
out
jle
inc
cmp
jg
mov
data16
lock
outs
test
fldz
mov
push
call
add
mov
inc
clc
je
cmp
jge
fild
inc
inc
sub
leave
xchg
add
add
dec
cld
inc
clc
fstp
jne
or
add
pop
jne
je
adc
jne
adc
js
sbb
adc
cmp
inc
std
je
cmp
pmulhuw
fdiv
(bad)
fldz
(bad)
inc
inc
xlat
mov
je
sar
inc
test
dec
xor
cmp
jne
inc
cmp
xor
leave
push
mov
push
call
jmp
cmp
jge
movs
aaa
aam
jg
xlat
inc
cmp
fmul
sahf
jle
mov
scas
iret
hlt
jg
std
cmp
jle
adc
call
inc
inc
mov
pop
inc
mov
mov
out
add
pop
sub
je
sub
jne
add
dec
and
and
mov
jmp
out
lock
mov
xchg
je
cmp
jbe
clc
adc
mov
scas
add
or
(bad)
jmp
test
retf
into
dec
jmp
xor
fstp
mov
clc
or
xor
xor
and
and
jb
dec
es
mov
popa
outs
sti
loope
jmp
test
cmp
je
cmp
jge
sub
cmps
sub
and
push
mov
in
fwait
stos
mov
and
cld
popa
xor
push
cmp
inc
adc
dec
adc
push
xchg
ror
inc
jne
jl
push
test
jne
cmp
clc
(bad)
(bad)
push
call
fadd
fmul
fstp
fstp
pop
cmp
fld
fchs
adc
out
cli
fstp
cmp
fstp
call
daa
inc
ror
es
cmp
mov
sbb
cmps
mov
add
fnstenv
sbb
test
jnp
fdivr
push
push
inc
add
and
ss
call
fchs
jmp
fisttp
popa
pop
pop
cdq
fstp
jge
test
jle
fld
dec
push
sub
push
mov
fld
jb
jg
(bad)
sti
add
sub
sbb
fwait
adc
add
dec
jne
jo
ror
jo
jl
popa
or
pusha
cli
iret
dec
and
add
ret
pushf
adc
arpl
or
icebp
cmp
je
fistp
aam
cmp
push
je
jno
adc
mov
call
push
mov
cmc
(bad)
fld
pop
out
out
mov
bound
fcom
ja
(bad)
sti
jle
add
xchg
cmp
loopne
add
add
les
(bad)
in
(bad)
ja
add
rcr
push
fcomp
fdivr
mov
stc
sub
inc
cmc
mov
xor
daa
and
add
cmp
ja
je
sahf
xor
lea
jbe
inc
hlt
mov
call
(bad)
add
add
cmp
push
arpl
fild
push
je
call
add
or
dec
call
dec
xchg
inc
dec
push
jg
inc
add
dec
xchg
shr
(bad)
(bad)
(bad)
fucomp
dec
or
neg
sbb
inc
pop
xor
cmp
jl
cmp
jle
mov
inc
std
xchg
scas
jne
test
jne
cmp
je
sbb
(bad)
jbe
sbb
mov
fstp
jmp
push
push
sbb
add
out
aaa
in
test
or
push
loope
shr
sbb
test
je
pop
out
jle
adc
push
jnp
test
jne
dec
push
lea
adc
add
inc
clc
mov
clc
pop
pop
leave
pop
out
sub
jnp
add
dec
sahf
je
dec
bound
inc
lds
call
cs
addr16
mov
fstp
jmp
addr16
(bad)
jne
pop
inc
jmp
imul
mov
mov
push
mov
push
je
call
xor
jno
xchg
ror
jle
fnstsw
adc
rol
out
inc
and
inc
jmp
repnz
loope
(bad)
call
call
push
lea
adc
mov
(bad)
or
push
mov
inc
or
xchg
cli
loope
cli
push
push
fmul
lock
adc
xor
xor
(bad)
jg
test
jg
neg
push
call
test
pop
mov
push
jl
(bad)
mul
or
rcr
or
fcmovnb
mov
cwde
or
movs
mov
add
push
push
sbb
call
(bad)
ret
xchg
mov
mov
daa
shl
outs
call
push
je
adc
les
in
mov
mov
fcomp
cli
addr16
jmp
mov
dec
push
stc
add
inc
and
xor
mov
inc
std
clc
inc
or
mov
jp
mov
inc
addr16
inc
push
outs
bound
fisttp
cmp
(bad)
(bad)
jg
adc
or
sub
pop
mov
and
xor
or
jne
mov
loope
and
cmps
mov
mov
xor
mov
(bad)
je
mov
shr
mov
call
std
push
jmp
ret
and
or
je
mov
jmp
mov
mov
or
and
or
cmp
jge
mov
imul
mov
mov
jne
cmp
je
push
call
inc
pop
into
add
mov
pop
mov
enter
xchg
and
clc
fadd
das
mov
or
ins
jle
retf
cmp
mov
fst
sbb
push
call
fmul
xor
inc
pusha
push
leave
fmul
fld
inc
pop
sahf
inc
inc
adc
and
push
mov
inc
cmp
xor
add
clc
test
popf
shl
(bad)
popa
xchg
inc
fisubr
add
mov
pop
or
pop
push
push
imul
mov
paddsb
out
cmp
inc
cld
xor
das
push
aaa
pop
sub
push
sbb
inc
(bad)
data16
cdq
out
cld
jno
cs
adc
sahf
in
je
je
dec
inc
dec
js
inc
mov
pop
ja
mov
add
fnstsw
jge
adc
(bad)
xlat
mov
add
sahf
fld
or
in
call
call
hlt
(bad)
cmps
sbb
dec
add
push
out
jecxz
daa
mov
add
and
pop
xor
jmp
jo
aad
lea
sbb
mov
std
(bad)
(bad)
call
(bad)
icebp
add
fld
fmul
cmp
in
in
cmp
mov
mov
pusha
xor
cli
xor
mov
jb
add
add
(bad)
fucompp
push
add
mov
jg
pop
push
push
push
call
pop
push
or
mov
in
inc
mov
rcl
push
dec
icebp
loope
fisttp
lods
lea
add
mov
or
add
sahf
cdq
jmp
push
pop
sar
pop
lods
repnz
push
pusha
pop
mov
pop
cs
mov
push
push
call
mov
mov
inc
(bad)
dec
dec
adc
mov
add
jbe
mov
push
cmp
or
or
icebp
das
mov
popa
mov
or
adc
je
aaa
add
dec
mov
or
inc
push
fwait
cli
inc
pop
call
call
je
sahf
loopne
ror
test
lock
test
pop
push
push
push
push
call
jmp
xor
add
cmp
idiv
jne
jne
add
ja
fistp
fild
or
and
fild
rol
push
push
push
inc
mov
jne
call
adc
push
cmp
lock
ror
add
mov
mov
add
fstp
push
and
add
(bad)
pop
je
xor
neg
push
and
jne
test
ud0
dec
mov
jmp
mov
mov
mov
mov
dec
dec
push
mov
pop
add
(bad)
push
je
dec
je
test
jge
cmp
jle
mov
outs
and
sahf
jne
jmp
out
push
mov
xor
cmp
setg
jmp
sbb
jmp
stos
out
call
xor
cmp
setge
jmp
adc
jmp
push
(bad)
inc
sub
push
mov
pop
je
test
sub
sub
xchg
sti
jg
sbb
add
add
add
add
fild
ja
loope
add
adc
inc
mov
(bad)
std
ds
sbb
inc
mov
inc
in
ja
inc
cmp
jl
sbb
por
sbb
js
shr
jmp
std
fistp
test
add
movsx
mov
add
jbe
loopne
inc
mov
inc
jl
enter
cmp
cmp
retf
sbb
mov
shr
mov
mov
rep
adc
rep
dec
scas
sbb
or
movs
cmp
mov
call
int3
in
push
jge
fnstsw
cmp
jne
ret
mov
(bad)
aas
xlat
into
lock
inc
je
push
pop
jmp
call
inc
outs
mov
jne
xor
jmp
std
cwde
and
or
call
cmp
jno
or
sti
fwait
cmp
mov
cmp
loope
(bad)
jle
add
dec
test
jle
mov
js
nop
jnp
add
xor
jmp
pop
jle
mov
and
inc
into
cmp
jl
jmp
neg
push
sub
cmp
repz
sar
add
rcr
push
pop
das
mov
mov
xor
mov
ins
sets
jge
or
call
dec
lods
mov
ja
jne
cmp
jne
pop
or
jne
mov
jne
imul
xchg
jbe
and
(bad)
in
aas
pop
pop
ret
mov
dec
pusha
xor
fbld
ins
mov
jae
es
cmp
jae
push
sbb
loop
out
aaa
test
call
add
and
inc
(bad)
jmp
out
clc
(bad)
mov
inc
cmp
mov
jne
data16
pop
dec
dec
cmp
loopne
in
jo
loope
push
cmp
je
jmp
mov
(bad)
cmp
je
cmp
cs
test
(bad)
dec
mov
jmp
cmp
jne
inc
inc
cmp
jb
idiv
idiv
fnstenv
mov
movs
inc
jmp
cmp
mov
jbe
dec
dec
ss
add
cmp
ja
shr
sar
lea
sbb
lea
sub
jmp
or
pop
push
lea
call
inc
mov
mov
ja
and
call
add
cdq
pop
xor
lea
jmp
setl
mov
(bad)
call
add
fiadd
and
shr
pop
mov
div
mov
imul
add
pop
sti
jmp
lea
jb
lea
mov
dec
dec
test
jne
xor
(bad)
(bad)
jg
sub
dec
pop
sub
sar
shl
mov
lea
shr
lea
repz
out
inc
mov
mov
or
inc
inc
(bad)
(bad)
(bad)
out
mov
pop
jo
jne
mov
sar
test
pop
mov
pop
je
lock
add
lea
pop
rcr
adc
test
mov
mov
rol
(bad)
(bad)
jg
call
pop
mov
push
call
pop
jmp
push
xor
inc
ds
push
or
repnz
jge
jmp
push
sbb
push
cmp
add
mov
pop
call
add
mov
test
fldz
mov
pop
fmul
(bad)
call
jge
mov
call
cmp
pop
jne
mov
fldz
fstp
mov
jmp
out
(bad)
push
push
lea
push
push
call
push
call
push
mov
pop
cli
cmp
ja
inc
inc
inc
ds
jae
inc
enter
cs
jmp
inc
sbb
(bad)
fistp
inc
jne
lea
push
add
push
xor
call
(bad)
out
jmp
sbb
ja
movzx
inc
lea
lea
push
(bad)
fcomip
mov
out
je
mov
mov
mov
jmp
mov
out
stos
clc
out
push
call
pop
jne
in
enter
and
(bad)
call
stc
sub
cmp
jle
mov
lea
movs
movs
movs
push
lea
movs
outs
clc
clc
sbb
call
jmp
sbb
or
push
and
aad
std
adc
pop
xor
adc
inc
jo
ja
and
rcr
or
sub
ret
jb
dec
(bad)
fbstp
add
cmp
je
inc
cmp
ud0
sub
mov
out
add
out
push
jmp
xor
inc
inc
jmp
test
jle
sub
enter
sbb
push
out
sti
and
(bad)
call
sub
fmul
inc
inc
lahf
adc
cs
push
scas
loopne
sar
fsubr
sar
fcom
pusha
or
xor
jb
pop
fld
test
or
ror
mov
xor
(bad)
(bad)
mov
test
jle
sub
test
jl
push
call
fmul
jmp
(bad)
or
push
call
pop
cmp
fchs
adc
rcr
pop
jns
jno
add
mov
cmp
dec
adc
inc
popa
call
call
xor
test
jne
repz
and
adc
push
push
imul
ror
std
call
xor
mov
mov
call
mov
out
cmp
and
div
mov
ret
push
and
inc
mov
in
or
nop
rep
pop
pop
ret
mov
imul
loope
aad
lods
or
call
or
mov
aas
cwde
jmp
add
lods
xor
or
push
in
inc
fcom
pop
test
gs
add
or
jmp
aas
add
scas
push
add
call
lock
inc
fld
ret
push
push
lea
loopne
adc
fwait
cwde
pushf
test
add
test
inc
call
addr16
mov
push
rcl
dec
adc
adc
push
jge
push
call
adc
mov
push
cld
add
mov
call
jmp
add
test
je
push
sub
popf
(bad)
cmp
mov
call
push
add
inc
xor
push
sub
and
adc
adc
iret
call
add
cdq
xor
test
fwait
xchg
lods
lods
test
add
or
nop
add
cs
mov
mov
cmc
call
in
nop
mov
pushf
lahf
imul
mov
in
inc
jl
ret
cs
mov
xor
and
mov
je
cmc
rol
and
cld
push
setl
add
fisttp
shl
(bad)
jle
cmp
jge
aas
sti
jmp
xor
mov
call
inc
cmc
rcl
call
sbb
jl
push
mov
or
jne
lea
mov
jge
fld
mov
and
enter
or
sbb
jmp
and
mov
shl
or
sti
jmp
fld
popa
cdq
mov
cmp
push
or
and
inc
idiv
mov
fucom
in
aam
in
push
pop
fild
and
xor
push
lahf
inc
mov
or
and
ror
mov
mov
pop
add
leave
ret
push
call
xor
xor
setne
sbb
jmp
call
mov
pop
push
mov
sbb
jecxz
pop
pop
ret
cmp
push
dec
inc
(bad)
xor
jp
mov
jae
pop
or
cs
test
cmp
jne
lea
push
push
push
call
cmp
cmp
mov
add
lea
push
push
jae
mov
sbb
jl
loopne
sub
js
mov
loopne
mov
add
add
ins
cmp
jne
je
loopne
(bad)
jmp
shr
push
add
push
push
inc
inc
repz
(bad)
cmp
or
cmp
ja
push
push
jg
dec
(bad)
call
or
cmp
mov
push
jb
add
push
call
jmp
dec
sub
cmp
jb
(bad)
sti
(bad)
ror
sbb
inc
mov
stc
mov
fwait
mov
jmp
idiv
dec
or
shl
push
cld
shl
sub
imul
dec
jae
pop
or
movs
xor
inc
adc
pop
and
jp
sub
or
out
push
push
call
pop
je
(bad)
aam
push
or
push
mov
call
fs
mov
xchg
add
add
inc
mov
push
mov
or
push
mov
mov
push
or
into
dec
lock
imul
or
clc
stos
inc
cmps
dec
cld
(bad)
call
ror
jbe
xlat
dec
or
je
(bad)
inc
call
push
mov
push
mov
call
loope
ja
cdq
in
mov
inc
adc
inc
cld
jmp
inc
ja
cwde
ds
jb
push
xor
push
lock
fiadd
inc
call
inc
call
je
mov
leave
mov
mov
push
call
inc
popf
inc
or
inc
adc
enter
push
jae
jae
call
dec
adc
mov
add
call
test
call
push
jb
mov
cmp
pcmpgtd
ds
idiv
ret
mov
push
mov
call
je
adc
ja
call
dec
jg
cwde
sti
fisttp
mov
mov
movs
adc
(bad)
ins
lods
jae
int
call
or
pop
nop
mov
ja
jmp
xchg
daa
inc
popa
(bad)
cmp
int
inc
in
jb
jmp
push
call
sbb
adc
daa
dec
cs
pop
pop
cmc
sub
push
mov
call
jbe
or
xchg
call
jg
outs
jo
sar
mov
push
or
int3
iret
call
fild
call
push
call
mov
mov
xchg
into
call
jmp
push
dec
push
call
mov
lea
test
push
or
in
popf
int3
pop
xor
push
mov
sbb
inc
mov
xor
adc
xor
mov
sbb
push
or
shl
mov
jmp
(bad)
dec
push
dec
jmp
fs
jle
xchg
xchg
test
je
dec
test
jbe
pop
iret
call
cmp
cdq
push
or
sub
inc
ins
sub
sbb
push
push
outs
mov
adc
pcmpeqd
sbb
mov
call
cmp
jb
pop
mov
loopne
shl
sub
sar
jne
push
mov
push
call
xchg
sub
je
cmp
cmp
and
sbb
add
dec
inc
adc
test
jae
dec
jmp
mov
outs
iret
push
js
bound
into
jne
outs
cwde
lds
clc
xor
jmp
out
xchg
mov
pop
sbb
mov
inc
mov
call
push
jmp
loope
or
or
mov
ins
lock
jb
sbb
sbb
adc
(bad)
clc
jo
adc
add
cwde
jne
popf
scas
mov
push
test
mov
or
scas
call
icebp
fs
(bad)
arpl
call
adc
ret
mov
jae
mov
adc
ror
ds
das
sti
pop
sbb
cmp
cld
sti
cmps
adc
pop
or
cmp
call
xchg
xor
sbb
xchg
sbb
sbb
adc
push
adc
mov
loopne
aaa
add
mov
adc
push
add
mov
add
fild
lea
and
and
mov
adc
inc
fcomp
mov
sbb
jmp
inc
sbb
and
and
mov
mov
loope
adc
int3
push
call
sub
or
mov
jae
shl
push
call
pop
mov
push
mov
adc
outs
lahf
push
push
pop
pop
dec
fld
outs
rcr
inc
jg
cmp
je
or
test
add
sbb
test
push
inc
adc
imul
(bad)
mov
sbb
push
adc
shl
mov
mov
add
(bad)
push
and
dec
and
and
dec
mov
dec
inc
(bad)
jne
lea
mov
mov
xor
and
push
sbb
push
sub
shl
shl
mov
fist
adc
mov
adc
jmp
mov
mov
add
inc
dec
cmp
jne
lahf
jmp
sbb
mov
call
test
je
lea
icebp
out
jbe
leave
jbe
rcl
mov
call
ja
daa
clc
je
adc
cmp
jb
sub
je
(bad)
jg
pop
test
mov
push
call
add
fwait
jo
sti
jge
jbe
mov
adc
pop
push
cmc
(bad)
sbb
arpl
in
enter
or
add
stos
adc
shr
dec
and
fidiv
push
pop
and
adc
add
inc
fiadd
cmp
xor
dec
add
xor
jle
(bad)
sbb
mov
mov
out
mov
mov
aaa
sbb
mov
stc
inc
inc
push
je
cmp
jb
xor
adc
jbe
scas
xor
or
fs
clc
mov
mov
jmp
pushf
adc
popa
(bad)
xor
jmp
cli
push
cs
les
or
arpl
cdq
bound
adc
and
adc
ret
add
mov
sbb
add
push
ja
sti
lahf
dec
or
call
mov
stos
sub
cmp
jbe
or
add
push
test
in
nop
call
cmp
jbe
mov
comiss
rcl
inc
dec
jp
inc
cmp
adc
jge
jb
adc
fwait
dec
sub
mov
dec
xchg
dec
mov
neg
add
fistp
loop
push
and
fsubp
push
dec
and
adc
inc
or
inc
or
mov
sti
cmp
or
fucomip
or
push
bnd
out
jae
leave
test
inc
ds
lock
xchg
push
inc
jmp
fiadd
jbe
mov
mov
push
aam
xlat
mov
inc
mov
jb
mov
cld
sti
or
mov
cmp
call
pop
pop
adc
and
mov
and
call
sbb
mov
jbe
fnsave
push
stc
mov
pop
xchg
call
inc
cmp
jb
inc
xchg
pop
cmp
xor
cmp
push
mov
icebp
xor
pop
xchg
out
adc
mov
aas
jno
pop
mov
jl
cmps
(bad)
(bad)
mov
jmp
sti
fistp
inc
adc
je
mov
mov
jne
mov
call
mov
mov
push
push
cmp
dec
aam
sub
push
push
call
mov
dec
inc
inc
ret
jb
pop
cmp
outs
xor
push
add
push
xor
xchg
cld
loop
inc
hlt
xor
mov
call
das
push
inc
call
cmp
jmp
call
jp
jg
inc
mov
add
mov
dec
cld
call
sbb
xor
mov
inc
jne
call
push
ds
icebp
xor
js
adc
add
add
ror
and
pop
cmp
call
fdiv
and
ja
das
push
cwde
into
call
(bad)
(bad)
mov
add
iret
mov
jb
jle
xor
aad
movups
adc
and
cmp
or
push
clc
jne
mov
dec
mov
push
xchg
gs
test
or
sbb
sbb
retf
mov
push
call
add
cmp
mov
jae
clc
add
jmp
add
xor
cmp
sbb
(bad)
mov
or
dec
jne
push
push
push
push
push
mov
ret
hlt
lea
cld
push
ror
or
fdiv
arpl
es
add
pop
fwait
push
mov
scas
(bad)
dec
add
cmp
jne
mov
test
jne
mov
ja
popa
int3
(bad)
inc
std
push
clc
call
inc
mov
fild
ficomp
inc
clc
push
lahf
add
jne
push
call
(bad)
fild
sbb
push
push
call
adc
add
pop
jmp
mov
ins
mov
enter
neg
icebp
call
add
or
sbb
aaa
sar
call
push
xchg
fsin
cli
outs
mov
or
jo
and
cs
call
push
add
enter
jns
loop
inc
push
ret
ret
mov
mov
imul
add
or
adc
inc
push
mov
mov
sbb
mov
sbb
sbb
push
and
and
hlt
jl
clc
(bad)
(bad)
cmp
mov
mov
mov
mov
mov
lea
repnz
cld
xchg
cwde
out
out
add
push
push
inc
push
call
sub
loopne
add
fadd
xchg
loopne
and
adc
adc
jp
or
pop
add
mov
dec
in
or
inc
dec
pop
lock
xchg
add
jmp
sbb
inc
lock
fsub
scas
fcomp
jae
sbb
std
pop
jne
adc
cwde
mov
inc
adc
pop
daa
aas
(bad)
(bad)
jmp
xor
jmp
fld
inc
fisub
mov
adc
jnp
outs
neg
dec
mov
jbe
sub
or
std
(bad)
call
mov
add
sbb
retf
jmp
pop
je
sbb
xor
scas
jmp
scas
or
jns
(bad)
dec
je
xchg
adc
mov
jg
dec
and
xchg
cli
adc
out
js
les
push
call
add
jbe
mov
push
mov
call
test
add
inc
push
push
call
out
xor
dec
xchg
int
repnz
xor
fdivr
lahf
push
or
push
sbb
cmps
add
push
mov
in
cli
dec
mov
add
movs
inc
lock
push
push
inc
icebp
lock
dec
lock
mov
je
test
add
add
pop
cmps
inc
and
xchg
dec
mov
or
adc
loop
loopne
hlt
push
loopne
sub
jecxz
mov
add
add
ds
fxch
dec
inc
sub
mov
mov
push
lea
mov
and
clc
call
mov
mov
push
scas
fwait
mov
cmp
out
xchg
rol
fs
sti
or
xchg
rol
xor
inc
cld
mov
icebp
and
fdiv
jecxz
mov
push
aam
inc
fdivr
fstp
jg
mov
jne
fld
jns
mov
xchg
adc
fist
inc
jne
fstp
sbb
inc
je
(bad)
icebp
arpl
push
retf
xor
fmul
jle
call
mov
call
icebp
out
mov
mov
je
push
mov
mov
sbb
and
jge
dec
(bad)
jmp
test
jne
mov
dec
sbb
jge
call
dec
or
mov
adc
jmp
jb
pop
cmc
add
sub
jb
je
mov
push
popf
or
std
jne
test
je
test
or
icebp
cmp
xor
test
jne
jecxz
cmp
jb
(bad)
jmp
or
mov
jmp
test
je
xor
inc
jmp
sbb
add
ins
push
mov
cld
and
xor
pop
adc
mov
int3
push
sbb
mov
cmp
jne
imul
cmps
jns
out
bnd
jnp
neg
push
push
enter
lock
out
movs
add
push
call
mov
adc
inc
cld
les
inc
and
inc
and
mov
push
sub
mov
mov
adc
sbb
fstp
cmp
or
test
gs
jns
jmp
push
adc
jnp
jne
daa
add
dec
or
cs
mov
retf
hlt
sub
and
cmc
adc
cmp
add
cs
or
pop
lock
sbb
ss
js
arpl
dec
(bad)
cmp
adc
dec
add
imul
mov
mov
fsubr
fstp
xchg
out
clc
sub
cmp
cmp
mov
movzx
inc
jmp
fldz
inc
daa
jl
and
push
pushf
xor
cld
jg
dec
xor
mov
add
shl
call
jns
add
cwde
fmul
fadd
mov
repz
sub
or
popf
faddp
fcom
fwait
add
frstor
(bad)
arpl
rcr
fstp
fld
or
add
fsubr
int
mov
cmp
jne
cmp
fstp
add
(bad)
push
stc
sub
jmp
outs
int3
fstp
and
xor
mov
or
std
push
inc
or
pop
je
es
std
test
clc
cmps
add
cmp
sub
add
push
sbb
jne
mov
aas
jae
and
fsubr
aam
push
push
enter
cwde
dec
add
add
fidiv
neg
out
xchg
ins
clc
and
aas
and
pop
inc
or
adc
call
jmp
lock
or
retf
sbb
pop
xchg
leave
je
mov
dec
add
(bad)
(bad)
out
loopne
add
mov
movsx
sub
je
dec
je
inc
jmp
test
or
das
dec
cld
fild
ror
dec
add
dec
jne
pop
adc
stc
or
icebp
mov
call
add
inc
adc
push
add
push
outs
stos
fidiv
loope
and
loop
sub
push
pusha
jnp
mov
cmp
mov
push
lea
mov
loope
cmp
clc
push
rol
sub
hlt
push
movzx
mov
pop
push
pop
pop
push
stc
inc
ja
jbe
push
add
inc
call
inc
mov
xor
add
xor
add
neg
or
mov
sbb
ret
shr
icebp
push
call
add
fdivrp
jb
inc
cmova
or
push
rol
jmp
or
ror
push
in
mov
loope
call
mov
pop
call
scas
fcmovnb
stc
or
cmp
cmp
inc
enter
jmp
ret
adc
cmp
jle
cmp
not
or
fwait
das
int3
or
push
mov
jmp
sbb
fldcw
inc
inc
enter
in
mov
push
mov
add
push
icebp
pop
xor
xor
mov
call
fcom
add
icebp
push
pop
call
cld
ins
call
or
inc
ror
xchg
cmp
aas
sbb
sbb
dec
hlt
sub
dec
push
xor
not
fcomp
xor
cmp
loopne
stos
imul
(bad)
inc
cmp
jne
inc
inc
cmp
jne
jmp
mov
push
fcomp
adc
pop
iret
call
les
cmp
(bad)
pop
pop
call
aam
push
pop
push
adc
jbe
dec
rol
aaa
fnsave
shr
adc
jbe
div
add
jmp
xchg
call
jns
sub
add
popa
arpl
test
fsub
push
adc
add
cmp
pop
cmp
call
inc
add
pop
lea
in
xor
fcomi
cmp
aad
push
call
out
jbe
jnp
inc
push
cmps
jg
jg
cmp
jne
mov
push
repz
or
and
dec
or
and
dec
mov
nop
xchg
call
sub
add
daa
inc
push
inc
dec
push
inc
fld
or
jno
add
push
sbb
imul
push
jg
adc
cmps
aas
clc
arpl
pop
je
dec
cmp
jg
(bad)
call
or
xor
je
sub
je
sub
jne
add
add
add
mov
push
jmp
adc
dec
retf
call
(bad)
push
adc
leave
adc
push
xor
mov
ins
push
mov
mov
push
push
jmp
mov
push
cdq
pop
idiv
xor
push
cld
push
call
clc
fwait
mov
call
jne
gs
and
inc
(bad)
(bad)
fbstp
mov
call
jmp
cmp
je
cmp
je
cmp
ret
(bad)
std
popa
jne
mov
sub
ss
call
fcmovnb
jmp
adc
mov
jge
ss
or
push
jmp
inc
clc
aaa
les
pop
imul
adc
je
out
dec
hlt
sbb
test
jae
push
pop
imul
call
adc
idiv
ss
ins
imul
or
add
add
add
jl
mov
jmp
adc
rcl
cli
call
shr
test
sbb
call
out
mov
(bad)
and
mov
jmp
or
out
popa
add
call
clc
aaa
push
mov
test
mov
push
add
aas
mov
call
mov
jp
icebp
push
sbb
cmp
push
sub
call
push
pop
adc
dec
(bad)
in
dec
add
mov
add
out
mov
xchg
dec
adc
add
cmp
push
push
jl
push
icebp
jg
jno
and
add
push
mov
fist
inc
hlt
call
mov
pop
(bad)
mov
mov
(bad)
mov
adc
call
push
add
(bad)
std
lea
push
call
pop
pop
call
jnp
push
cld
out
or
inc
or
push
add
add
add
ret
cmp
aaa
and
adc
cmp
xor
push
pop
add
dec
push
sar
and
pop
rol
clc
(bad)
jg
jmp
test
je
inc
inc
add
and
mov
cmp
jne
call
push
push
xor
cmp
call
inc
push
mov
movs
jge
mov
test
je
xor
push
sar
or
adc
push
call
call
push
lea
mov
mov
add
inc
mov
cld
inc
inc
cmp
jl
mov
inc
clc
clc
inc
clc
out
xor
jno
mov
inc
call
cmp
or
push
mov
call
add
pop
adc
xchg
cmp
jne
mov
jo
sbb
or
inc
popa
add
dec
adc
(bad)
mov
mov
push
push
call
lea
pop
cmp
call
adc
pop
mov
loope
push
add
adc
addr16
and
dec
or
(bad)
inc
jns
lea
shl
xor
cmp
setge
mov
ret
mov
leave
and
loop
inc
(bad)
jb
je
(bad)
jg
enter
ret
sbb
or
jne
and
rcr
jmp
dec
or
xor
xchg
xor
lahf
and
fsubr
xlat
js
mov
lahf
cli
je
push
push
sbb
call
pop
aaa
cwde
imul
or
into
fst
xchg
push
inc
push
ja
call
cmp
ins
inc
stos
movs
pop
sar
cmp
jo
ror
mov
call
(bad)
sbb
retf
shr
call
cmc
(bad)
jg
out
cmps
test
inc
add
call
je
mov
jmp
call
inc
push
call
ret
mov
mov
push
jge
pop
cmp
xchg
lea
xchg
pop
cmps
mov
mov
aaa
mov
add
hlt
(bad)
out
dec
adc
push
call
pop
jg
pop
pop
mov
pop
pop
or
mov
call
fist
out
data16
test
or
scas
adc
cmp
sbb
jmp
mov
and
mov
mov
or
mov
emms
popf
mov
adc
das
das
jle
mov
push
call
pop
std
(bad)
jmp
pop
popfw
pop
inc
cmp
jl
jmp
jle
fist
mov
xor
test
jle
and
jne
adc
sbb
cld
mov
push
call
or
mov
das
add
cmp
xor
jmp
jle
stc
mov
push
add
cmp
jle
push
pop
test
jle
cmp
scas
pop
neg
je
pusha
push
call
or
fucomp
mov
push
jle
ja
add
je
mov
mov
call
cmp
dec
jo
rcl
cmp
mov
aas
xchg
add
outs
jo
(bad)
inc
cld
cmp
outs
pusha
add
sbb
push
or
pop
add
call
and
mov
mov
inc
sbb
cli
(bad)
dec
adc
adc
inc
and
inc
and
lea
js
mov
mov
push
inc
or
test
pop
je
mov
inc
leave
inc
rcr
or
pop
xlat
hlt
inc
or
mov
adc
popa
(bad)
jg
clc
sub
mov
lea
call
lea
mov
or
and
rcr
(bad)
(bad)
es
(bad)
call
in
mov
adc
or
adc
jo
scas
or
jmp
idiv
pop
ja
or
aas
add
add
cs
ja
or
sub
es
jmp
jo
fild
call
xor
and
mov
or
add
out
je
pop
add
cmp
or
(bad)
and
cmp
inc
iret
std
out
sbb
cdq
jne
call
jne
lahf
je
or
or
mov
cwde
mov
and
jnp
push
xor
mov
popf
jge
in
or
jbe
int
pop
sbb
call
add
jmp
inc
aaa
mov
mov
sbb
or
gs
add
and
call
push
xor
and
push
push
call
or
pop
and
call
and
lea
pop
rcr
ret
mov
jle
dec
or
loope
push
cmp
adc
sar
push
dec
ja
cmp
maxps
(bad)
mov
lea
lea
mov
mov
mov
cmp
cmp
loopne
je
mov
jmp
pop
imul
ret
aas
or
sar
jg
rcr
jne
push
add
mov
test
je
lock
push
push
push
call
jle
mov
mov
std
jmp
fwait
adc
or
iret
jne
add
stos
cmp
or
loopne
ret
in
les
ficom
dec
dec
add
(bad)
add
add
add
loopne
or
(bad)
outs
pushf
push
jle
mov
mov
cmp
je
inc
gs
jl
std
into
add
repnz
cli
fistp
push
or
mov
jmp
cli
or
cli
add
xorps
inc
clc
pop
push
and
(bad)
jmp
(bad)
jmp
cmp
jne
mov
sub
(bad)
fcomip
push
and
push
cmp
jne
mov
test
je
cmp
cmp
fmul
and
cmp
faddp
(bad)
jl
jmp
mov
mov
jbe
shl
(bad)
xchg
push
cmp
dec
or
cmp
es
stos
sub
hlt
fcmovnu
test
push
inc
aad
jne
push
mov
push
call
dec
(bad)
mov
nop
pop
jmp
fwait
pop
add
fwait
adc
call
leave
sbb
or
xor
les
and
push
pop
add
and
adc
xor
add
adc
xor
lea
mov
inc
mov
div
sub
cli
adc
dec
and
sub
ja
mov
out
sbb
in
dec
(bad)
aaa
push
sbb
sar
cmp
cmp
je
inc
push
mov
push
and
jmp
jmp
pop
push
call
arpl
adc
and
call
pop
add
pop
test
mov
int3
call
hlt
mov
jp
adc
or
call
lock
push
call
push
add
or
sti
add
sbb
out
jg
test
mov
push
cld
into
int3
ja
push
scas
inc
ret
arpl
les
mov
dec
in
pop
ret
pop
pop
jbe
push
call
mov
clc
mov
imul
bound
adc
lds
das
jl
loopne
add
add
je
jge
into
push
mov
push
inc
push
adc
shl
arpl
mov
popa
cmp
je
push
mov
or
mov
sub
mov
or
inc
cld
cmp
mov
dec
ret
jmp
xor
cmp
mov
inc
or
push
call
inc
fdivr
jmp
mov
call
xor
and
outs
push
or
add
push
call
mov
xlat
push
call
mov
cmp
int3
mov
lods
aaa
lahf
in
jg
test
cmp
push
push
call
jmp
xor
ds
popf
pusha
pop
out
call
push
add
sbb
jge
jl
push
sar
push
inc
jmp
mov
and
pop
pusha
loopne
cmp
pop
cwde
mov
sbb
fstp
mov
jo
dec
in
fld
not
stos
cmps
jl
dec
push
adc
in
pop
sub
out
dec
jp
scas
mov
imul
lea
sbb
neg
sub
pop
or
(bad)
xor
adc
sbb
and
out
mov
cld
mov
mov
call
fidivr
push
or
loop
int
sbb
data16
and
pop
pop
inc
mov
add
ret
add
mov
mov
jmp
push
dec
push
call
mov
stos
(bad)
call
xchg
sub
ret
imul
or
push
mov
bound
or
mov
sub
mov
lahf
add
rol
mov
cmp
jg
aam
js
test
dec
push
call
or
stos
sbb
inc
mov
xlat
jne
outs
add
inc
or
inc
out
aaa
cld
jg
cmp
pop
jg
dec
push
mov
call
sub
push
call
fcomp
inc
xchg
sub
jbe
inc
jge
inc
jmp
sub
push
call
add
cmp
(bad)
sbb
mov
inc
adc
adc
mov
jae
mov
cmp
cmp
jae
push
mov
sub
dec
push
call
cmp
mov
clc
jae
mov
aas
mov
adc
jge
jb
rol
push
call
mov
adc
inc
adc
push
leave
and
jne
out
adc
into
fisttp
je
call
pop
inc
(bad)
adc
push
retf
mov
adc
dec
into
or
outs
mov
add
jmp
jecxz
jle
or
cdq
mov
push
xchg
xchg
push
fdiv
mov
ja
jl
jg
inc
or
jge
outs
pushf
je
call
sbb
sti
out
scas
dec
or
dec
jecxz
pop
adc
push
xor
inc
repnz
jbe
inc
or
popa
push
jae
ret
add
push
inc
cmp
ja
sub
jbe
sar
sti
jb
loopne
cmp
sub
jg
pop
push
cwde
xor
jmp
popf
mov
push
sub
iret
cmp
adc
sbb
les
or
jecxz
or
and
adc
jecxz
mov
xor
and
adc
dec
inc
jecxz
movs
rol
xor
sar
jno
adc
mul
aam
adc
call
add
xor
clc
test
or
or
jge
or
sub
ret
(bad)
sub
push
sbb
and
movs
adc
jne
call
icebp
push
les
inc
adc
fisttp
jge
mov
cld
mov
jae
hlt
mov
sbb
push
inc
popa
hlt
or
add
hlt
js
fisttp
dec
xor
cld
or
push
shl
and
or
aas
push
jo
into
lods
cmp
or
sbb
(bad)
adc
dec
lock
ret
std
push
add
mov
dec
cld
cmps
xor
out
add
addr16
cmp
shl
test
jo
xchg
push
pop
das
out
mov
and
inc
jmp
arpl
jl
pusha
dec
adc
psubsb
cs
and
loopne
ins
jecxz
add
mov
adc
cld
pop
addr16
pusha
mov
jl
adc
push
cwde
inc
mov
jle
mov
mov
std
add
inc
mov
add
(bad)
cmps
call
(bad)
je
adc
enter
add
rcl
push
mov
jecxz
leave
stos
add
jmp
push
iret
test
mov
sbb
retf
adc
fstp
loop
xor
xor
(bad)
dec
adc
or
mov
jle
add
test
aas
xor
daa
mov
cmp
jne
int
cld
push
call
call
or
aad
(bad)
jg
dec
cmp
inc
adc
inc
adc
push
and
jmp
and
fsubp
xchg
cmp
fsubr
mov
and
jmp
es
jmp
jge
idiv
aas
push
test
dec
push
call
or
stc
outs
cli
xchg
je
mov
pop
fwait
or
jne
cwde
jae
or
add
mov
xor
jne
inc
idiv
dec
(bad)
or
jmp
add
xor
inc
out
loope
xlat
adc
push
push
call
mov
or
push
mov
jne
mov
mov
adc
push
lea
mov
loopne
mul
add
cmp
outs
xor
cmp
dec
stos
inc
push
bound
or
push
call
ds
cmp
inc
add
mov
mov
sub
call
add
ret
mov
mov
pop
out
sbb
inc
add
inc
les
adc
enter
push
mov
mov
mov
add
inc
or
lea
inc
push
push
je
cmp
scas
mov
push
mov
or
jge
aad
outs
fimul
push
mov
push
push
call
push
dec
sub
call
mov
aam
push
push
in
add
add
dec
or
mov
pop
call
inc
add
dec
or
aam
jnp
mov
dec
loopne
sub
sbb
das
imul
js
and
je
frstor
fbld
or
sub
cld
or
fidiv
push
push
call
clc
and
inc
jge
cmp
mov
jne
mov
sbb
push
add
dec
sbb
inc
jmp
and
jmp
jecxz
or
call
outs
test
add
cli
add
fimul
jmp
nop
or
nop
or
pop
fcom
jne
xor
push
sub
push
mov
inc
scas
xchg
adc
push
push
mov
jle
xchg
push
mov
mov
sbb
add
push
or
pop
mov
pop
or
pop
je
mov
pusha
dec
sub
jmp
mov
jb
cli
jg
mov
jle
mov
push
mov
add
aam
ret
xor
icebp
(bad)
jno
sub
dec
jne
ins
cdq
xlat
(bad)
call
push
rol
push
je
dec
push
pop
ud0
js
call
push
pop
jmp
mov
ja
cmps
push
mov
call
inc
std
add
jmp
and
or
cld
pop
or
jmp
and
scas
xchg
push
stos
add
pusha
jmp
popa
push
pop
xchg
sub
pop
dec
clc
call
clc
pop
not
push
add
call
sbb
cdq
(bad)
arpl
lods
ja
pop
fisttp
fs
in
or
jle
shl
push
not
cmps
push
(bad)
mov
mov
push
daa
fs
ins
mov
mov
call
cmp
sar
fld
cmp
jne
and
jmp
cmp
sbb
daa
inc
add
or
or
add
test
jmp
jg
scas
pop
add
sub
pop
or
arpl
mov
push
call
or
(bad)
call
cmp
test
arpl
mov
call
aas
cmc
(bad)
jle
jne
or
xor
jne
inc
and
add
cmp
sbb
jae
ss
add
jb
lock
into
mov
mov
ja
sbb
xchg
loop
adc
jne
lea
call
cmp
arpl
cmp
outs
mov
cmp
push
arpl
call
hlt
mov
das
call
add
xlat
mov
xchg
sub
xor
or
pop
xchg
cmp
sbb
and
aad
nop
ins
lods
ins
ficom
adc
jle
xor
and
add
or
push
call
pop
test
jne
sti
sbb
cmp
in
imul
ffreep
cmp
cmp
pop
adc
push
or
cmp
jmp
mov
jmp
mov
int
mov
jmp
sub
arpl
dec
daa
inc
and
outs
xchg
fcom
add
push
call
aad
jmp
push
in
mov
lahf
xchg
test
je
jl
add
jo
push
call
loopne
add
clc
mov
aaa
mov
pusha
pop
ja
cmps
mov
xor
jmp
arpl
loopne
mov
mov
xchg
(bad)
mov
shl
jb
mov
loope
ret
push
xchg
into
icebp
sbb
fimul
mov
mov
jge
call
ret
inc
lds
cmp
cmc
scas
ss
call
or
adc
push
push
daa
add
add
mov
push
call
shl
sti
fwait
xor
inc
cmp
ja
enter
jl
lods
cmp
jl
dec
mov
jg
fist
dec
or
cmp
cmp
push
call
jg
(bad)
fld
jle
mov
mov
cmp
jle
sub
rol
dec
sub
mov
xor
lock
mov
push
jg
mov
push
lods
cli
inc
pop
addr16
mov
and
cmp
pop
sbb
push
jne
call
fld
add
loopne
inc
fstp
call
jmp
adc
or
aam
push
cmp
call
adc
adc
dec
cmp
push
jne
ss
sbb
dec
push
jmp
cmp
cmp
and
or
es
sbb
enter
cmp
cli
or
jmp
xchg
lea
dec
push
adc
(bad)
pushf
add
add
inc
xlat
jne
mov
mov
sbb
xor
(bad)
push
out
and
add
rol
push
call
pop
adc
xlat
or
add
push
call
add
ja
data16
xor
leave
adc
fwait
mov
popa
mov
loopne
cwde
dec
inc
jo
test
jne
jb
or
dec
inc
and
ss
retf
cmp
test
push
mov
jne
sbb
loopne
sbb
sar
jp
dec
and
out
add
jns
jg
dec
mov
jns
mov
adc
cmp
sub
jno
add
call
cmp
cs
aam
add
call
or
cmp
(bad)
cmp
imul
mov
scas
jle
nop
jne
mov
(bad)
or
sbb
push
call
clc
fimul
inc
dec
je
add
and
je
dec
aas
adc
jg
test
push
fwait
ss
shr
mov
test
sub
inc
push
add
clc
push
push
call
rcl
sub
(bad)
clc
inc
jns
and
retf
call
pop
aas
and
jne
fisub
enter
add
push
sbb
inc
stos
inc
pop
add
div
xchg
or
call
sub
or
les
outs
cmp
jne
push
push
in
xor
inc
push
pushf
(bad)
retf
call
ja
dec
or
pop
call
test
jmp
je
mov
nop
or
dec
retf
call
out
push
push
pusha
add
pop
sbb
or
push
push
jmp
fs
xchg
pusha
(bad)
scas
sbb
mov
sti
push
je
inc
mov
call
inc
mul
retf
sbb
xchg
pop
cld
and
popa
das
pop
fmulp
call
test
pop
clc
call
xchg
lock
(bad)
mov
xlat
jge
adc
(bad)
out
push
or
jo
not
jne
call
bound
loopne
pop
je
sar
inc
cmp
jne
(bad)
aas
test
jne
xor
std
inc
retf
call
(bad)
jle
popf
aas
ss
xchg
arpl
mov
pop
mov
jg
and
icebp
jmp
and
push
jmp
hlt
or
and
call
repz
and
push
rcr
or
and
enter
dec
sub
ret
loopne
dec
pop
call
cmp
and
imul
ret
sbb
dec
gs
sar
ss
jge
add
test
ins
std
push
je
mov
arpl
sbb
gs
in
xchg
add
cmp
fdivr
outs
stc
dec
ins
stc
adc
int3
sbb
in
adc
mov
jne
or
iret
in
cmp
or
and
inc
pop
popa
cmp
int3
mov
outs
ds
mov
or
shl
and
or
xor
fs
fmul
cmp
fmul
inc
in
aaa
dec
je
sbb
jge
mov
iret
call
xchg
add
aam
jmp
adc
ins
dec
add
pop
add
aaa
ins
add
mov
call
push
xchg
bound
scas
out
push
mov
and
dec
jmp
dec
(bad)
adc
stc
sahf
mov
sbb
dec
fs
daa
pop
(bad)
fcomp
and
sbb
movs
pop
mov
jbe
call
sbb
cmp
dec
lds
add
push
add
adc
clc
add
add
cmp
sbb
lahf
mov
xchg
(bad)
jo
test
mov
adc
mov
or
add
stos
mov
nop
fsubr
inc
push
fwait
dec
pop
test
inc
cmps
and
scas
add
pushf
or
inc
jp
xor
popa
mov
imul
mov
lds
jne
adc
cmp
test
pusha
adc
icebp
or
(bad)
jmp
enter
jne
sub
retf
(bad)
mov
and
out
cmp
dec
test
sub
lock
call
or
cld
push
inc
clc
call
lods
and
push
mov
add
sub
add
(bad)
(bad)
mov
mov
mov
mov
cwde
and
mov
cmp
mov
je
jecxz
(bad)
call
push
mov
push
push
push
push
add
push
call
sahf
lea
push
cs
jg
dec
xor
dec
or
inc
sbb
je
mov
std
outs
mov
mov
push
push
push
pop
sub
outs
fild
scas
inc
or
call
fist
mov
clc
push
jl
or
jne
add
les
push
and
sub
cmp
lahf
push
push
(bad)
fstp
out
cdq
or
add
mov
fsub
push
call
push
ins
fadd
xchg
push
push
je
call
mov
push
add
push
call
leave
mov
jg
outs
call
adc
call
jo
lock
push
sub
cmc
mov
push
in
pop
outs
imul
js
and
(bad)
out
scas
mov
mov
mov
mov
mov
jne
pusha
cli
mov
mov
cmp
adc
push
and
and
xor
daa
das
inc
or
mov
test
xchg
jne
cmp
jmp
out
rol
les
add
adc
cli
sbb
or
js
outs
movs
pop
cld
push
mov
call
lods
and
call
push
mov
call
lahf
inc
idiv
loope
movs
pop
jl
push
call
mov
push
add
dec
inc
adc
xor
(bad)
inc
bound
mov
push
adc
call
out
dec
xchg
inc
adc
jmp
inc
adc
inc
cld
jl
clc
inc
jl
or
sub
neg
mov
test
xor
arpl
sbb
dec
add
inc
cmp
sub
mov
add
inc
cmp
call
mul
mov
push
clc
mov
dec
adc
lea
push
call
mov
sbb
call
pop
mov
jmp
push
call
aaa
push
mov
pop
jae
call
shl
addr16
cmp
(bad)
dec
or
add
call
mov
or
mov
or
mov
call
mov
test
je
add
push
xchg
dec
daa
add
inc
mov
inc
push
mov
repnz
pop
mov
jge
add
fnstcw
inc
or
push
idiv
adc
inc
adc
je
cld
je
jmp
int3
inc
mov
call
pop
add
inc
sar
add
sbb
jecxz
xor
inc
test
mov
jle
sub
fcomp
or
jecxz
sbb
(bad)
cmp
jmp
sti
(bad)
inc
dec
test
jle
lea
lea
mov
mov
xor
cmp
xor
xchg
call
call
ja
enter
or
out
add
idiv
mov
jg
mov
pop
adc
push
call
test
je
cmp
mov
dec
mov
fidiv
push
call
inc
test
sbb
jl
(bad)
das
(bad)
fist
adc
sbb
leave
stos
mov
jmp
xor
add
add
mov
clc
sub
mov
ss
jge
lds
jge
push
nop
push
call
push
leave
ret
mov
mov
jmp
pop
or
add
or
jne
pop
sahf
inc
push
out
dec
bswap
fnstenv
inc
mov
(bad)
daa
jbe
mov
and
ds
add
test
fs
iret
call
mov
out
inc
aaa
xor
or
xor
rcr
or
gs
imul
hlt
mov
xor
pop
jge
add
jae
inc
or
icebp
lahf
xor
xchg
sub
cmp
sub
mov
xor
lea
lods
jb
jp
or
mov
mov
aaa
jbe
xor
or
stos
cmp
xor
or
ss
in
or
mov
sbb
or
mov
or
jns
cmp
adc
ror
outs
mov
call
mov
sbb
call
fsubr
(bad)
cwde
jnp
jne
xchg
push
rol
dec
(bad)
(bad)
fwait
lods
lea
push
push
call
pop
add
push
lea
out
inc
ss
call
push
out
mov
fs
mov
dec
or
pushf
adc
jo
push
fmul
or
sbb
(bad)
leave
pop
mov
dec
sub
cmp
jl
dec
push
test
jmp
(bad)
aas
inc
lea
push
mov
ds
mov
call
ret
xor
or
mov
loop
inc
inc
and
shl
sub
add
mov
or
pusha
(bad)
push
or
add
sbb
mov
call
mov
loopne
or
das
push
mov
cdq
ins
pop
mov
mov
mov
sub
push
lea
popf
add
or
cmp
je
aad
ins
retf
mov
mov
sbb
mov
jne
cmp
je
test
inc
cmp
div
test
add
out
das
test
mov
mov
xchg
jg
or
push
dec
mov
and
jmp
or
(bad)
and
inc
mov
inc
lock
cmp
jne
pop
lea
xlat
sub
mov
mov
push
pop
xor
mov
les
mov
lea
mov
and
dec
clc
cmp
lock
mov
jmp
call
mov
inc
imul
or
jle
or
add
sub
scas
dec
add
push
(bad)
inc
or
enter
call
hlt
fist
inc
cld
add
cmp
jl
repnz
mov
lea
call
add
aam
add
xchg
add
mov
sub
shl
and
add
sub
call
adc
mov
fdivr
ror
push
push
ja
call
push
call
test
push
mov
push
mov
jb
dec
push
lock
cmp
je
mov
adc
retf
lahf
jl
sbb
in
movnti
mov
inc
xchg
push
sub
call
(bad)
sbb
call
cdq
or
inc
enter
mov
and
retf
inc
stos
(bad)
mov
test
mov
cmp
jne
push
push
mov
mov
inc
and
call
add
lds
call
jae
push
adc
rol
daa
adc
pop
xor
sub
mov
cmp
retf
jl
dec
(bad)
and
lock
and
repz
adc
push
fdivr
loop
add
jo
loop
retf
jbe
out
bound
ror
xlat
sbb
call
es
enter
sbb
push
sbb
movd
adc
mov
enter
dec
call
into
or
je
and
dec
pushf
pop
scas
or
call
inc
mov
sbb
test
fsub
(bad)
jne
js
test
push
enter
ja
ss
leave
mov
sti
into
lock
or
push
push
addr16
das
jo
push
call
daa
daa
addr16
cmp
push
out
call
pop
add
call
stc
sbb
cli
cmps
push
add
lea
jp
xchg
add
je
mov
stos
inc
retf
pop
push
jne
dec
dec
push
push
lea
call
clc
pushf
pushf
popf
into
xor
pop
fadd
mov
push
adc
loopne
aad
push
push
adc
pop
add
dec
lock
mov
and
jl
adc
fild
xor
mov
push
jle
sub
xchg
mov
out
dec
sub
push
push
mov
dec
add
sub
cmp
jl
pop
pop
imul
stos
pop
mov
repz
out
mov
shl
push
cmp
inc
adc
mov
mov
add
or
aaa
mov
loopne
add
dec
jo
enter
cmp
xor
lds
cld
sbb
jne
mov
hlt
adc
or
sub
xchg
les
add
inc
sub
inc
adc
push
je
cmp
jne
cwde
jbe
and
fs
call
cmc
push
loopne
popf
retf
call
push
push
and
cmc
in
sti
xchg
cmp
(bad)
jmp
call
jne
push
pop
jmp
mov
xchg
mov
out
mov
popf
mov
pushf
xchg
adc
or
nop
leave
pop
(bad)
leave
test
mov
cmp
xlat
add
fnstsw
mov
arpl
ins
and
or
cli
test
fsubr
outs
cli
div
clc
add
in
test
push
mov
add
jmp
loopne
outs
or
sbb
psubq
je
jo
jne
jl
push
pop
jmp
in
std
pop
sbb
leave
clc
mov
and
cmp
or
aam
js
xlat
ins
rcr
in
adc
jmp
retf
jne
mov
adc
in
call
lock
std
inc
pop
popf
imul
fld
call
test
dec
ror
inc
adc
push
adc
or
and
(bad)
cli
test
call
arpl
mov
jmp
jne
mov
call
add
inc
test
cmp
movs
pop
or
fsubrp
jmp
out
pop
data16
and
jb
pop
pop
and
jmp
adc
aaa
push
aad
or
pop
jmp
mov
pop
cmps
mov
or
add
out
adc
cmp
je
xchg
sti
cmp
je
push
mov
jmp
push
push
sub
xor
jmp
je
add
sar
je
push
pop
je
dec
push
adc
mov
mov
pop
push
call
cli
and
clc
push
jmp
xchg
xor
js
rol
add
dec
fmul
sar
out
pop
pop
sub
and
mov
pop
pop
add
lea
test
pusha
mov
adc
dec
das
lea
push
cdq
pop
idiv
jmp
enter
push
call
data16
or
aaa
lock
mov
mov
inc
mov
mov
(bad)
fbstp
mov
sbb
lea
push
call
test
sub
(bad)
(bad)
(bad)
jg
ret
push
push
push
mov
mov
xor
cmp
push
jg
cmp
jle
mov
lea
adc
jbe
or
loopne
retf
pop
mov
add
push
lea
mov
call
mov
pusha
cmp
mov
lea
(bad)
cmp
pop
add
mov
adc
jge
dec
mov
or
adc
mov
sub
and
jg
test
jle
and
shl
push
mov
loopne
mov
xchg
inc
adc
imul
xor
test
mov
(bad)
(bad)
std
(bad)
inc
cmp
mov
jl
cmp
je
dec
jo
mov
mov
add
test
out
and
(bad)
jle
call
sbb
shl
mov
mov
imul
outs
pushf
outs
add
out
inc
idiv
inc
(bad)
(bad)
fcomip
sub
cmps
test
jne
push
xor
push
mov
cmp
mov
add
inc
in
and
xchg
je
retf
adc
add
mov
outs
call
mov
mov
add
xor
dec
call
jge
xor
dec
js
loop
(bad)
push
push
push
call
pop
jo
jle
mov
fld
push
dec
adc
jmp
mov
je
mov
test
jle
mov
clc
ja
mov
push
mov
test
mov
mov
je
push
dec
pushf
test
inc
cmp
jl
sbb
sbb
jle
add
test
pop
int
test
loope
mov
jne
sub
inc
test
pop
xor
pop
lea
cmp
mov
mov
jle
jb
sbb
sbb
test
mov
je
sub
je
fidiv
add
gs
aam
retf
call
pop
cdq
das
sti
mov
call
cdq
js
nop
or
in
push
shr
mov
mov
mov
call
mov
and
cmp
je
mov
sub
sub
popf
and
out
cli
push
outs
jne
call
sbb
fnstenv
adc
dec
adc
jne
push
push
or
enter
je
call
or
stc
push
mov
inc
pop
and
jns
test
(bad)
loopne
push
jle
pop
xlat
mov
cmc
inc
adc
xor
sti
arpl
mov
jne
push
inc
mov
fimul
cmp
iret
sahf
push
mov
popa
aam
push
jae
sbb
call
jne
mov
ret
call
adc
iret
in
push
int3
or
xor
cmp
add
and
mov
call
pop
add
sbb
outs
mov
mov
mov
push
adc
int3
inc
sbb
inc
sahf
fwait
xchg
jae
adc
pop
jne
ficom
enter
jne
and
(bad)
xor
sahf
jnp
jns
or
cdq
loop
(bad)
outs
and
call
stc
into
ficomp
or
or
sbb
call
mov
aas
ja
js
sbb
sub
and
mov
bound
inc
clc
je
test
aaa
mov
icebp
(bad)
jmp
push
lea
adc
pusha
mov
push
inc
add
push
test
add
ds
jne
xchg
inc
mov
or
add
inc
add
pop
add
fcmovnu
dec
(bad)
icebp
mov
cld
jl
(bad)
push
test
in
jmp
jmp
cwde
fwait
scas
ret
mov
iret
clc
pushf
push
daa
(bad)
call
in
ret
add
pop
pop
push
pop
mov
cld
mov
out
fiadd
inc
cmp
jl
js
nop
clc
hlt
out
inc
xor
cmp
out
(bad)
(bad)
cli
jne
and
call
sbb
test
adc
sub
mov
loopne
call
push
fs
sar
mov
adc
pop
pop
outs
es
hlt
push
push
call
sub
stos
ret
add
nop
push
push
mov
push
into
(bad)
(bad)
call
jle
cmp
mov
jge
cmp
jle
mov
lea
jmp
lea
xor
inc
mov
loop
shl
adc
aas
sub
call
mov
call
push
add
call
call
lea
call
lea
push
call
or
(bad)
(bad)
(bad)
call
cmp
je
test
jne
push
lea
sub
test
add
call
(bad)
lahf
in
repz
idiv
add
jmp
pop
mov
and
jb
jmp
popa
jno
test
out
add
inc
add
call
test
push
mov
push
pushf
ret
ins
sub
jg
and
mov
mov
push
into
jmp
test
aaa
aas
push
add
(bad)
cmp
scas
dec
or
call
es
inc
adc
inc
sub
call
or
adc
ret
mov
inc
sub
cmp
mov
or
inc
pop
xchg
add
mov
xchg
or
call
mov
test
push
push
mov
enter
dec
add
inc
js
dec
add
push
fadd
cld
jge
bound
cld
jb
or
test
or
leave
jne
mov
jo
cmp
jne
fld
pop
inc
pop
mov
repnz
(bad)
jmp
cmp
xor
rcr
icebp
adc
cmp
mov
push
clc
jmp
cmp
jne
xor
cmp
setne
jl
sbb
aaa
cmp
(bad)
xor
xlat
mov
je
pop
je
cmp
inc
adc
(bad)
jmp
pop
(bad)
(bad)
inc
mov
mov
(bad)
dec
or
add
inc
cld
(bad)
(bad)
in
xchg
inc
or
cmp
jl
and
lea
inc
cmp
jge
mov
mov
mov
mov
add
adc
mov
sbb
je
aam
sub
pop
mov
jp
mov
or
adc
pop
or
mov
je
cmp
sbb
jbe
mov
shl
(bad)
fstp
mov
push
push
hlt
hlt
inc
lock
or
cmp
jne
jle
(bad)
fbld
cmp
xor
call
adc
push
clc
mov
jmp
cmp
jne
mov
sar
jmp
jge
les
cmp
je
sub
or
or
mov
add
xor
out
add
pop
or
sbb
cld
add
or
xor
xor
mov
sbb
mov
sahf
std
(bad)
mov
dec
pop
lods
call
xor
lea
push
push
mov
jge
call
pop
push
push
call
adc
inc
xor
mov
int
fisttp
push
lea
cmp
jne
lahf
bound
or
ja
outs
pusha
or
pop
push
push
call
sbb
pop
or
out
(bad)
aas
fidiv
pop
mov
push
mov
aaa
inc
mov
push
call
(bad)
aas
xchg
push
call
xor
cmp
pop
pop
jle
mov
push
or
push
call
inc
cmp
jl
(bad)
jg
and
pop
mov
adc
cmp
jne
xor
sub
push
std
call
xchg
jle
jbe
fiadd
fist
lea
scas
jg
pop
pop
cmps
call
cmp
mov
add
and
add
pop
mov
xchg
leave
push
adc
out
xchg
mov
fild
add
std
inc
add
push
scas
pop
les
add
mov
push
jmp
add
mov
push
call
pop
je
add
mov
inc
fadd
cmp
(bad)
movs
cmp
mov
je
cmp
je
mov
sub
mov
mov
fadd
ret
sete
cs
icebp
sbb
mov
in
(bad)
fist
push
call
mov
jns
add
call
call
lahf
mov
and
cmp
jne
js
rcr
je
xor
std
dec
call
cmp
mov
outs
test
add
mov
call
push
jo
rcr
push
or
enter
clc
mov
je
xor
loopne
add
dec
stc
sbb
add
(bad)
jg
scas
in
adc
xor
mov
shl
cli
or
inc
(bad)
call
xor
cmp
jl
sbb
mov
popf
sti
jg
mov
mov
xchg
mov
not
and
mov
push
adc
hlt
or
dec
xchg
push
adc
mov
jmp
pop
add
aad
test
inc
sbb
aam
and
xchg
les
and
and
test
xchg
and
pop
add
xchg
xor
mov
add
sub
push
add
cs
inc
ret
xor
cmps
ja
xchg
push
sar
pop
repz
mov
cwde
test
dec
aas
inc
sub
(bad)
lea
test
pop
cmps
jae
icebp
mov
rcl
outs
lock
push
dec
or
mov
sar
mov
or
push
call
push
sub
adc
sub
push
adc
sbb
scas
jge
pop
sar
add
dec
hlt
push
mov
movs
(bad)
jnp
leave
push
std
cld
adc
int3
add
dec
inc
cmp
push
mov
addr16
xor
mov
ret
mov
pop
outs
test
jne
add
mov
clc
ror
cmp
sbb
ret
push
pop
iret
add
sub
inc
ins
jne
adc
fbstp
jmp
aam
sub
add
inc
add
test
ss
dec
dec
jo
je
nop
xchg
or
fwait
add
lods
jmp
or
push
mov
sub
(bad)
popa
push
adc
gs
sbb
ss
jae
push
call
jmp
add
dec
add
dec
bound
mov
mov
cmps
mov
add
cmp
je
cmp
je
inc
jmp
mov
jb
ret
addr16
ret
int
mov
or
jmp
in
jo
(bad)
test
repnz
add
das
movs
dec
sbb
test
add
std
out
loop
add
push
cmp
je
inc
jmp
and
adc
dec
inc
pop
pop
add
call
pop
dec
add
adc
test
mov
je
(bad)
or
cmp
mov
cld
mov
cmp
jae
push
call
hlt
mov
and
cmp
jbe
xchg
das
adc
fbstp
cli
cmp
cmp
cmp
jmp
cmp
je
inc
cmp
sar
cmp
cmp
jne
or
xchg
sub
inc
or
mov
mov
xchg
out
ret
add
test
into
jne
.byte
.byte
.byte
