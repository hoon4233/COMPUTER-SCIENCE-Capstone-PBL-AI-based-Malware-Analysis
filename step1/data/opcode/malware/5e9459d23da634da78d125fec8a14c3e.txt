mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
test
sbb
sbb
xor
mov
stc
fild
imul
sahf
(bad)
pop
push
jecxz
mov
into
loop
sbb
mov
dec
cmp
clc
inc
out
inc
jns
enter
movs
outs
mov
pop
mov
xor
xchg
jge
push
add
sbb
xor
jge
repnz
loop
xor
outs
fwait
shr
shr
pop
push
ret
xor
mov
xor
out
push
push
(bad)
call
push
xor
loop
repnz
pop
or
popa
aaa
jle
bound
loop
jg
retf
sub
sub
je
cmp
ja
sub
jo
fisubr
ins
mov
test
mov
fmul
sbb
lahf
xchg
mov
xor
es
retf
outs
cmp
or
dec
mov
pop
movs
cli
inc
(bad)
push
outs
inc
repz
push
sub
int3
sbb
and
inc
mov
pop
sub
and
dec
push
and
xchg
iret
pusha
jae
dec
out
xlat
mov
sbb
movs
ins
push
sub
popa
(bad)
dec
push
cwde
add
mov
loopne
aaa
jmp
pop
pop
fdiv
mov
rcl
shr
mov
pop
out
adc
mov
adc
test
adc
pop
add
(bad)
add
popf
out
adc
dec
sub
icebp
xchg
push
movs
pop
es
outs
mov
add
inc
adc
push
cmp
aas
pushf
adc
pop
hlt
and
mov
and
out
sahf
xchg
jecxz
dec
(bad)
adc
aaa
fisubr
mov
out
jmp
lock
inc
shr
dec
(bad)
and
jbe
push
inc
adc
dec
aaa
outs
lds
cmp
push
adc
mov
shr
push
imul
addr16
jbe
mov
mov
bound
imul
xor
cmp
jle
sub
and
cmc
mov
mov
test
cdq
xchg
inc
cmp
mov
enter
pushf
es
aad
xchg
add
jge
mov
cmp
mov
loopne
les
std
push
mov
sbb
dec
stos
and
ins
mov
mov
stos
mov
aam
fiadd
push
cwde
in
cmp
sbb
adc
inc
mov
sub
cmps
sti
mov
shr
xchg
jmp
ins
lods
outs
and
push
stos
test
mov
daa
add
call
mov
je
out
push
in
mov
fstp
push
inc
adc
clc
ja
(bad)
retf
test
adc
ja
jmp
ja
and
aaa
pop
push
out
add
es
aam
pop
paddw
clc
movs
adc
in
scas
cmps
fcomp
adc
pop
pop
mov
sbb
clc
push
mov
ja
fs
mov
or
aaa
call
mov
cli
aad
jle
pop
call
(bad)
inc
mov
or
das
int3
lods
mov
into
rcr
test
retf
loop
cmp
stos
push
jmp
and
imul
xchg
mov
repz
add
fimul
pop
cmc
sbb
movs
jo
dec
or
sahf
mov
stc
sbb
stc
jl
outs
sbb
fld
adc
sub
jp
mov
shr
xchg
and
aad
(bad)
mov
cmp
inc
aas
or
mov
xor
xchg
xchg
mov
push
stc
mov
or
call
das
in
dec
mov
mov
ficomp
lds
mov
addr16
pop
sub
imul
(bad)
das
mov
fnstsw
loope
mov
inc
cmps
xor
aam
mul
cdq
leave
or
xchg
inc
sahf
inc
push
or
repnz
test
cmp
pop
sub
test
test
lock
sub
bound
jb
(bad)
jns
les
lds
inc
sar
push
pop
mov
adc
xchg
in
stc
inc
ins
enter
ret
dec
sbb
les
mov
mov
xchg
mov
fiadd
jns
rol
sbb
aas
jle
arpl
jp
cmps
sahf
ss
cmp
sub
inc
mov
lods
jecxz
lahf
dec
or
pusha
out
lahf
mov
xchg
adc
fcom
outs
or
cwde
pop
sub
adc
out
ror
test
das
aam
aam
add
jge
fadd
pop
clc
lods
bound
pop
inc
out
push
dec
or
xchg
mov
mov
les
add
dec
xchg
cmp
mov
ror
rcl
pushf
sub
push
pop
push
dec
add
ins
dec
call
mov
push
fbld
(bad)
pop
xchg
je
xchg
pop
xor
data16
mov
and
fdiv
or
mov
jmp
mov
sahf
xor
popf
iret
pop
repz
inc
jns
jg
jb
in
sub
enter
mov
(bad)
or
dec
dec
dec
in
in
mov
cs
pusha
in
cli
cmps
jo
jmp
xchg
sti
xor
mov
shl
push
inc
push
xchg
xchg
jl
pop
cdq
repnz
pop
add
into
sub
push
sbb
test
and
xchg
call
cmp
dec
and
repnz
(bad)
mov
test
hlt
fwait
add
dec
imul
mov
xchg
ins
or
addr16
or
and
js
or
movs
mov
pop
mov
jmp
int3
int
scas
movs
sub
push
ja
cmps
xchg
sbb
jno
push
scas
mov
iret
inc
jmp
mov
and
bound
(bad)
xchg
movs
dec
rcr
sbb
dec
push
icebp
fadd
daa
xchg
jno
jns
push
jo
in
inc
mov
mov
nop
mov
cmps
sbb
cs
(bad)
aas
rcl
js
mov
icebp
xor
and
mov
dec
inc
cmps
push
les
cmc
sub
and
aaa
fimul
cwde
mov
push
push
and
add
dec
inc
or
jecxz
jns
mov
retf
jle
pop
xlat
mov
std
fsub
mov
mov
jge
xacquire
cmp
mov
mov
stos
mov
sbb
add
or
jp
(bad)
shl
ins
outs
pop
clc
cld
test
mov
mov
sub
dec
call
mov
pop
push
jg
push
ret
pop
mov
cmc
mov
out
js
add
(bad)
mov
add
das
or
mov
popf
test
loope
lds
or
mov
fwait
mov
push
mov
mov
add
in
and
es
cmp
cwde
cmps
out
and
push
push
fcmovnb
pusha
push
and
push
ds
clc
mov
jne
xchg
pop
lods
lds
movs
cmp
or
cmp
pop
jbe
(bad)
icebp
jno
outs
out
in
popa
mov
add
and
add
xchg
pop
cmp
stc
xchg
or
and
nop
aad
jp
std
jge
or
les
adc
test
jg
or
leave
cdq
sahf
mov
ror
lock
add
dec
in
pop
sbb
xor
ja
je
sbb
ins
mov
shl
ret
sti
scas
es
outs
push
lahf
jecxz
out
sbb
call
dec
sub
mov
adc
mov
adc
loopne
xchg
in
cmc
cdq
gs
adc
in
add
mov
add
dec
mov
movs
pop
or
test
not
imul
int
ror
fcomp
cmp
pop
inc
je
push
cmp
sub
cmps
jns
lods
dec
cmp
ins
fadd
dec
lock
add
(bad)
mov
and
sub
sbb
ret
lea
inc
loop
dec
dec
data16
fisubr
push
add
repnz
xlat
xchg
mov
ds
stos
es
mov
test
jnp
sbb
ret
mov
mov
cli
jno
sub
jne
jmp
ins
pop
cmp
cmps
mov
mov
popa
test
ret
mov
iret
pushf
sub
fcomp
jg
in
sub
int
inc
jne
mov
cwde
push
ins
jo
std
xor
jl
mov
into
pop
jge
jge
mov
cmp
mov
lods
sub
sub
push
jbe
xchg
jecxz
in
mov
mov
sub
push
int
pop
or
in
sub
repz
mov
test
push
in
aam
sub
mov
sbb
aad
xchg
mov
or
xchg
les
xor
(bad)
or
mov
adc
inc
cdq
dec
daa
xor
in
mov
sub
ins
shr
neg
add
mov
jnp
lods
pop
inc
xor
(bad)
cmc
mov
xor
js
xchg
movs
or
sbb
pop
jle
dec
lea
ss
jl
xor
mov
xchg
cwde
lea
adc
or
shr
dec
lock
sti
and
test
jae
xchg
test
sbb
aaa
je
jmp
pop
ret
imul
adc
mov
sub
jns
pop
outs
and
add
jns
loope
inc
into
jno
ret
pop
je
mov
sub
cmp
inc
xchg
mov
(bad)
fcomp
shl
push
push
repz
sub
call
retf
xchg
aam
cmp
and
inc
ins
and
std
push
imul
fsubr
js
mov
jns
sub
sbb
int3
add
call
jo
mov
scas
cmp
dec
daa
pop
xor
and
repz
mov
js
xlat
scas
fidiv
push
(bad)
lds
ins
dec
sti
(bad)
pop
(bad)
jl
stos
nop
outs
push
leave
sbb
cld
xchg
jno
and
test
je
xchg
cmps
add
pop
loopne
pop
std
add
js
call
retf
mov
jbe
xor
mov
addr16
adc
lods
je
xchg
movs
ret
xor
adc
nop
ret
inc
cmp
add
call
mov
inc
adc
jl
xlat
sub
or
dec
mov
jbe
or
push
cmp
push
add
mov
xchg
ror
popf
sub
xchg
jno
fs
fcmovu
out
inc
mov
or
retf
jb
nop
inc
jl
mov
test
inc
dec
mov
sbb
add
es
cli
fnstenv
cld
mov
adc
inc
jmp
add
fild
sbb
pop
aam
push
jge
dec
adc
jl
jne
(bad)
mov
arpl
mov
jbe
sbb
sbb
push
jmp
jmp
sbb
xchg
jb
xor
inc
mov
adc
mov
loopne
in
push
repnz
hlt
shl
(bad)
fist
inc
mov
mov
sbb
adc
int
and
push
call
outs
push
ja
mov
lods
fld
sbb
cmp
aaa
jno
mov
add
jge
cli
push
int
add
inc
sbb
aas
(bad)
mov
cmp
pop
out
push
xchg
test
pop
mov
test
mov
pusha
arpl
sbb
sbb
add
std
outs
in
mov
lods
popf
sub
xchg
ins
add
jb
scas
les
fadd
adc
nop
xor
in
leave
jae
inc
popa
repnz
sub
mov
xor
in
aam
(bad)
aad
outs
loopne
pop
neg
test
jecxz
fs
popf
adc
test
out
pop
cwde
fistp
in
(bad)
adc
jae
pop
rcl
add
push
mov
sub
cmp
cmp
fisttp
ja
es
movs
adc
mov
sbb
ins
xor
jmp
icebp
(bad)
loope
push
lea
out
xchg
je
add
jp
add
jo
out
(bad)
out
xor
fcom
xchg
not
sbb
and
or
test
mov
push
mov
inc
jno
sbb
scas
add
push
push
repz
pop
dec
jl
jg
or
xchg
sbb
mov
imul
fcomp
jbe
fstp
xchg
sbb
mov
cs
popa
ror
push
cmp
dec
cli
mov
mov
(bad)
repz
and
adc
outs
push
out
mov
push
sub
and
mov
shr
enter
test
cmp
out
push
jp
push
push
ret
retf
nop
mov
scas
std
xchg
out
sub
enter
push
hlt
xchg
lock
addr16
jp
adc
test
ret
dec
outs
addr16
fs
and
jae
rcl
push
add
cmp
dec
pop
pop
(bad)
xchg
gs
outs
dec
pop
mov
pmulhuw
pop
xchg
pop
mov
(bad)
movhlps
jl
call
adc
inc
sub
and
or
sub
jl
cmps
out
test
dec
rcl
and
pop
out
or
in
jae
ss
rcr
fdiv
pushf
or
les
or
adc
out
jmp
mov
push
jns
nop
mov
inc
pop
arpl
add
lea
mov
jp
or
je
add
pop
mov
adc
fidivr
cmps
nop
inc
cs
and
adc
(bad)
fnstenv
inc
pop
and
fistp
inc
lock
dec
or
jb
mov
mov
not
ret
mov
bound
dec
or
or
pop
jno
jne
mov
or
pop
and
push
inc
adc
icebp
jns
cdq
das
cmp
(bad)
loop
mov
cmp
xor
clc
int3
pushf
repnz
arpl
push
jecxz
cmp
jecxz
dec
out
pop
adc
pop
xchg
lahf
ret
and
lods
cmps
mov
stos
stos
jb
mov
jmp
adc
mov
or
arpl
mov
pop
inc
xor
push
mov
das
sbb
ror
jno
(bad)
js
jb
(bad)
push
cmc
xchg
aam
lods
add
in
add
fdivr
jno
div
and
out
div
adc
in
mov
sbb
ret
sub
cmp
push
nop
mov
dec
push
movs
and
rcr
dec
cmps
pop
out
mov
cmp
mov
ins
jae
test
xchg
xchg
sar
ss
mov
mov
add
fsub
cmp
js
sub
lock
sub
hlt
jecxz
sbb
pop
and
xchg
add
cwde
sbb
jae
mov
fisttp
and
fdivr
or
jle
(bad)
jecxz
or
test
pop
ss
adc
iret
xchg
out
push
mov
das
add
push
stc
fwait
push
lahf
push
fld
retf
push
test
mov
lahf
enter
loopne
pop
loop
pop
jle
xchg
add
dec
dec
loope
lahf
mov
enter
call
xor
jmp
fistp
jle
adc
(bad)
in
add
add
jo
nop
inc
dec
jmp
jne
push
fstp
xchg
push
push
retf
pop
fsub
aaa
cwde
ror
fdecstp
inc
dec
ins
push
mov
movs
les
repnz
out
jle
gs
mov
mov
pop
inc
icebp
mov
imul
retf
adc
mov
hlt
jno
nop
hlt
push
xchg
cwde
lock
cmp
xchg
ds
mov
fnstcw
sti
sbb
out
(bad)
add
lods
lahf
imul
jle
jns
int3
inc
sbb
std
popa
sbb
mov
dec
retf
pop
xchg
dec
sbb
xor
sub
call
xchg
stc
dec
jne
inc
cs
xor
and
or
imul
adc
pusha
js
nop
addr16
mov
mov
popf
sub
lahf
sahf
xor
mov
push
mov
loope
clc
jno
jle
inc
movs
ins
lods
retf
push
hlt
cmp
call
xor
rol
push
xor
sbb
inc
cmc
or
cmp
add
js
repnz
aam
xor
push
out
dec
xchg
ds
leave
push
pop
addr16
js
adc
jno
daa
jecxz
lahf
pushf
sub
xor
outs
sbb
pushf
cmp
mov
pop
aad
adc
xor
les
dec
dec
fst
and
inc
pop
pop
add
xchg
in
movs
cs
outs
adc
cmp
xchg
imul
cmps
xchg
inc
lahf
inc
out
dec
mov
pop
jns
sub
sar
sub
push
pop
ret
adc
sbb
stos
loope
cs
retf
pop
adc
neg
clc
call
pop
pop
mov
iret
jb
and
mov
fmul
sub
std
sti
mov
jb
(bad)
or
nop
or
dec
adc
add
scas
sbb
clc
ins
xchg
push
jo
mov
int
sub
pusha
push
(bad)
dec
fisttp
sbb
cmp
jbe
jnp
mov
adc
mov
scas
xor
sub
add
mov
ret
inc
dec
popf
mov
dec
xchg
push
pop
punpckldq
ins
inc
test
cmp
pop
pop
data16
xchg
ja
mov
add
mov
femms
(bad)
sub
mov
add
pcmpeqd
jl
int3
jae
and
lock
adc
adc
inc
inc
lahf
sub
sbb
and
outs
cmp
sar
xchg
cmps
rol
retf
call
lds
push
xchg
cmp
and
loope
sub
dec
pop
hlt
out
inc
js
je
es
sub
jl
dec
fisttp
daa
cmps
xor
popf
push
ja
iret
sub
or
jno
jae
shl
cmps
pusha
lods
lea
add
push
fimul
jecxz
or
shl
clc
movs
sub
mov
ror
nop
out
out
add
xlat
cmp
(bad)
mov
xor
sbb
pop
out
nop
mov
imul
push
cld
mov
jmp
adc
jo
pop
fcomp
jmp
shl
mov
pushf
ret
ret
(bad)
mov
jns
out
cmc
(bad)
sbb
push
cmp
xchg
in
fisub
test
xchg
out
jns
sbb
lahf
retf
js
xor
dec
out
mov
aaa
nop
sub
dec
sbb
xor
push
cwde
mov
adc
lock
lods
sub
idiv
inc
jne
into
mov
add
cmp
(bad)
adc
adc
pop
sbb
inc
mov
sahf
xor
es
xor
fwait
leave
jne
test
mov
add
icebp
dec
inc
shr
mov
xchg
in
les
pop
pop
push
in
div
sbb
cld
xchg
gs
inc
pop
(bad)
dec
push
sti
xchg
sbb
outs
cmp
lahf
shr
push
push
call
and
jmp
inc
adc
push
sbb
pop
test
test
lods
(bad)
cmp
xchg
mov
push
mov
iret
jmp
js
cmc
pop
jns
cdq
pop
sbb
xchg
xchg
imul
pop
repz
leave
out
rol
mov
or
pop
mov
adc
ret
xchg
ss
lds
cmp
adc
fld
push
inc
ja
mov
lea
(bad)
jmp
fidiv
push
sbb
gs
and
xor
jbe
js
xchg
retf
jb
inc
sbb
ss
cmp
mov
jb
jno
or
gs
sbb
out
cmp
xchg
imul
jg
pop
xchg
gs
(bad)
push
mov
jmp
push
dec
pop
pop
dec
push
adc
add
mov
jne
call
mov
xchg
test
dec
and
mov
push
cmp
push
adc
aam
xor
addr16
pminub
aad
loopne
cld
aaa
sub
mov
mov
or
adc
scas
adc
xor
jmp
add
mov
cmp
mov
movs
sbb
or
retf
aaa
dec
inc
daa
setno
jae
das
jg
sub
enter
retf
mov
adc
mov
sbb
sbb
or
mov
in
icebp
jnp
jns
cmp
mov
xchg
in
loope
pushf
aam
pop
sub
add
fisub
(bad)
(bad)
test
jnp
rcl
lock
inc
loope
retf
inc
dec
sub
out
cmp
push
push
mov
and
sbb
add
in
ret
data16
int
adc
test
inc
test
push
fwait
sbb
pop
and
ja
inc
(bad)
mov
and
pop
sbb
pop
hlt
lds
sub
loopne
push
jmp
stc
push
int3
jle
mov
movs
add
pusha
xchg
mov
mov
mov
lock
sub
and
sub
jmp
xchg
mov
dec
jp
inc
mov
jmp
fnstsw
out
jbe
in
shl
or
data16
xchg
movs
jl
push
pop
dec
xor
inc
xchg
fisttp
loopne
(bad)
fwait
mov
push
adc
stos
imul
int
mov
fsubr
in
stc
and
sbb
(bad)
pushf
or
dec
mov
xor
inc
int
add
sub
xor
mov
mov
mov
inc
imul
cmp
xchg
pushf
pop
je
jno
jle
adc
jmp
sbb
loopne
dec
ja
xor
pop
jbe
dec
ss
retf
jg
pop
sub
sbb
inc
jl
hlt
dec
xor
lahf
cmp
repz
repz
xchg
nop
pusha
ret
popa
mov
(bad)
scas
retf
fisttp
js
push
push
(bad)
cmps
stos
sti
std
pop
(bad)
mov
xchg
cmps
sqrtps
adc
add
pop
sub
stos
test
bound
or
mov
movs
push
scas
jle
(bad)
imul
les
inc
xchg
enter
mov
stos
push
es
cmp
add
ret
loop
inc
(bad)
aad
repz
call
push
jmp
mov
cmps
cdq
popf
inc
xchg
push
ja
inc
shr
xchg
add
sti
neg
inc
sar
scas
mov
or
clc
xor
inc
push
dec
pop
add
lea
(bad)
adc
out
jmp
fwait
cmp
ficomp
or
xchg
jle
mov
jne
adc
sbb
mov
lea
retf
or
retf
dec
sub
xchg
inc
or
stos
aas
stos
out
and
push
cmp
repz
(bad)
test
ret
add
(bad)
jo
dec
movs
das
mov
inc
iret
into
and
mov
cmp
jne
sbb
inc
jmp
push
into
xor
xchg
lahf
sahf
rcl
add
mov
inc
int
jbe
jmp
ret
jecxz
xchg
or
aaa
sbb
and
int3
push
aam
mov
loope
mov
jbe
ss
and
inc
push
or
dec
nop
ficomp
and
aas
push
aas
ss
(bad)
adc
idiv
idiv
enter
fbstp
int
xor
add
mov
mov
dec
std
jmp
jnp
test
adc
push
xchg
xor
mov
rol
(bad)
(bad)
popf
rcl
mov
ret
int3
and
test
push
cli
or
dec
(bad)
mov
data16
pop
sbb
cmp
mov
test
retf
jno
push
iret
jge
shl
xor
ss
dec
repnz
pop
pop
pop
mov
movs
(bad)
int3
dec
scas
cmp
test
push
in
dec
or
jle
cmp
rol
add
out
jns
call
in
push
jmp
adc
push
pop
jnp
push
xchg
xlat
loope
inc
jl
jmp
cmp
fisubr
aaa
pop
sbb
inc
xchg
sub
sub
pushf
mov
sub
pop
test
shl
imul
inc
jne
sbb
jecxz
mul
mov
adc
push
adc
and
mov
loope
push
jmp
jns
mul
rcr
mov
or
pusha
jno
popf
dec
jo
add
xchg
mov
xchg
push
call
outs
sub
ins
test
dec
adc
cmp
pusha
pop
sub
or
call
mov
in
fisttp
gs
lods
shr
(bad)
adc
xchg
push
inc
daa
aam
and
xor
lds
mov
scas
mov
xor
jmp
sub
pop
jmp
cmp
push
sub
aas
pop
repnz
inc
push
cmp
jl
cdq
xor
inc
iret
pop
jbe
ins
or
loope
pop
dec
and
rol
push
and
jmp
les
hlt
into
xchg
imul
fcomp
sbb
xchg
shr
mov
jle
ins
test
xor
test
add
pop
mov
cwde
push
jmpw
movs
and
iret
pusha
push
fld
cdq
xchg
and
out
mov
and
xchg
mov
xchg
mov
pop
retf
cmp
add
and
fild
xor
or
es
mov
sub
xor
stos
inc
mov
mov
mov
cmp
jecxz
push
push
sahf
pop
mov
jl
jo
in
pushf
ds
adc
add
mov
(bad)
fdiv
fs
jo
hlt
pop
cmc
pop
jne
repnz
xor
sahf
add
mov
aaa
ss
enter
xchg
cmp
xchg
dec
push
push
mov
mov
int3
jno
shr
push
leave
xchg
add
mov
fwait
xor
dec
dec
jp
mov
ds
mov
imul
rcl
aad
push
sbb
mov
xchg
rcr
pop
jecxz
mov
outs
push
and
xor
mov
push
cmc
adc
dec
ss
dec
inc
jbe
sub
and
cs
or
scas
es
dec
movs
nop
neg
pop
aad
mov
(bad)
repz
xchg
mov
pop
icebp
je
xchg
rcr
js
mov
jg
pop
push
or
test
jne
lea
dec
outs
push
mov
mov
jl
lea
aam
cwde
lods
or
fild
shr
imul
js
jae
stc
in
jnp
jl
js
cli
dec
inc
mov
add
es
retf
jns
jmp
jae
mov
dec
cmp
mov
aam
rcl
push
and
xor
ror
test
nop
jne
sub
xor
mov
(bad)
pop
data16
bound
hlt
pop
dec
ret
in
pop
fdivr
inc
xchg
jnp
xchg
pop
or
jb
or
aam
bound
cmp
jge
or
call
and
mov
(bad)
sti
adc
or
pop
pushf
jb
ja
xchg
xor
aaa
inc
add
addr16
and
(bad)
or
mov
sbb
ds
mov
sub
xor
jl
repz
stos
repz
dec
xchg
xchg
cmps
push
mov
add
(bad)
pop
aaa
in
mov
nop
jne
les
mov
clc
dec
jne
in
sub
dec
out
ds
or
dec
jg
mov
pop
jae
mov
mov
into
scas
jno
pop
dec
cs
fimul
jl
pop
mov
fld
push
mov
retf
repz
sub
add
pop
cmp
hlt
out
jle
stos
aas
fs
out
call
(bad)
fsub
pop
fpatan
inc
(bad)
bound
maskmovq
test
mov
cmps
cld
aas
enter
sub
mov
dec
xor
jmp
ja
repz
or
lahf
rcl
sub
sub
or
cmp
push
xor
stos
div
jp
mov
rcl
out
mov
jns
pushf
cmp
push
(bad)
mov
push
stos
gs
and
ret
sti
cmp
xor
add
icebp
popf
test
inc
loopne
jl
push
xor
dec
mov
inc
xor
dec
push
xor
jnp
mov
pop
xor
pop
cmps
push
push
pop
jge
push
inc
pop
xor
dec
pop
pop
inc
pusha
jns
add
xchg
ins
fwait
jae
inc
scas
xchg
sbb
fsub
xchg
fwait
or
rol
pop
mov
rcl
call
jb
push
inc
cmp
or
pop
mov
cmp
movs
pusha
fsubr
cld
cmp
jno
sub
push
call
in
xchg
imul
lock
movs
or
mov
icebp
les
js
sbb
jg
pop
aaa
dec
mov
lods
mov
mov
(bad)
xor
xchg
inc
cmp
enter
imul
loop
cmp
and
sbb
(bad)
xor
sub
loope
addr16
add
mov
xor
jmp
sub
call
and
push
dec
inc
mov
push
mov
push
pop
cmps
inc
je
inc
push
dec
sub
sbb
fwait
xchg
in
mov
std
test
jg
jmp
adc
test
retf
js
rcl
push
(bad)
xchg
pop
jbe
retf
mov
jne
xchg
(bad)
jge
lea
inc
(bad)
cmp
push
or
repz
sbb
adc
stos
cmp
mov
(bad)
out
cmp
jns
in
jnp
lods
mov
ins
dec
clc
xor
shl
adc
addr16
ds
ds
into
in
in
xor
add
das
mov
push
pop
sub
or
cli
or
jp
aam
mov
add
mov
loope
repnz
(bad)
out
inc
or
inc
out
jmp
and
daa
sbb
jnp
mov
mov
mov
pop
cmc
push
aad
ss
(bad)
aad
movs
mov
pop
add
xlat
and
leave
loop
call
pop
or
dec
loope
sub
mov
jnp
call
stos
jne
xchg
fnstenv
aad
xor
adc
add
stos
jmp
xor
outs
sub
mov
retf
repnz
jns
lods
jns
cmp
xchg
or
jno
mov
sub
sbb
push
lea
shl
fsubr
nop
in
xlat
pop
test
test
pop
popf
xchg
xor
pop
sbb
dec
es
sbb
sbb
sbb
lods
xor
push
pop
dec
cs
mov
mov
push
push
jbe
jmp
inc
sbb
cmp
inc
xchg
push
push
jecxz
mov
mov
cmps
in
ins
jecxz
jae
mov
shr
sahf
(bad)
fist
xor
test
jl
or
xor
pop
sub
(bad)
fnstsw
inc
push
push
or
lock
cmovo
ja
ss
outs
popf
xchg
push
jl
xor
cmp
mov
and
adc
sub
cmps
lock
js
mov
ins
cmp
mov
(bad)
call
(bad)
adc
mov
loopne
lahf
ror
rcr
leave
mov
adc
fistp
and
(bad)
jecxz
pop
out
dec
arpl
movaps
call
fbld
sbb
or
jmp
jecxz
sbb
scas
pop
cmp
enter
mov
and
xlat
jg
into
jmp
mov
mov
imul
stc
fldln2
xchg
mov
sahf
jo
rcl
(bad)
out
out
test
inc
(bad)
push
xchg
mov
sqrtps
lds
adc
or
mov
jnp
xor
sub
vphsubdq
sbb
jmp
xor
push
popf
sbb
pop
pusha
and
inc
push
cmp
xchg
and
cmp
call
xchg
cwde
push
sti
sbb
mov
dec
fucomip
hlt
pop
mov
scas
popf
sub
movs
int3
stos
inc
in
or
outs
retf
pop
shr
adc
adc
inc
mov
stos
adc
rcl
fdivr
jmp
lods
idiv
pop
int
out
stos
repnz
sbb
cmc
push
std
shl
lds
enter
pusha
ins
mul
or
sbb
and
test
or
jg
cmc
sahf
cli
movs
adc
shr
pop
inc
pop
ror
adc
push
or
dec
aas
mov
mov
sub
pop
cmp
(bad)
dec
xchg
push
inc
xor
push
jge
jecxz
fisubr
xor
and
cmp
mov
sub
and
xchg
mov
pop
xchg
js
js
xchg
jbe
xchg
cmps
xchg
sub
or
add
xor
popa
out
mov
cwde
cli
test
push
inc
shr
outs
and
jmp
adc
mov
stos
mov
add
or
add
jp
mov
mov
mov
stos
jbe
sbb
iret
fmul
sub
popf
adc
(bad)
in
rcl
aas
fwait
xchg
ins
adc
dec
std
xor
imul
icebp
or
jl
dec
shl
lods
push
sub
pop
dec
js
inc
xchg
in
push
test
shl
(bad)
test
dec
push
or
or
cmps
retf
idiv
sbb
sub
and
adc
(bad)
xor
pushf
xchg
fisttp
add
scas
in
adc
cld
call
retf
cmps
mov
stos
and
popf
mov
sbb
pop
xchg
daa
iret
mov
or
mov
retf
into
jle
push
dec
or
fidivr
(bad)
dec
xor
cmp
sub
xchg
sub
ret
repz
call
sub
retf
jmp
push
mov
lahf
test
sub
adc
pop
pop
mov
xchg
push
mov
xchg
test
movs
pop
daa
jae
(bad)
cld
sub
mov
push
loope
fcom
arpl
jl
fcom
push
push
sbb
adc
dec
adc
sub
lock
jp
retf
or
stc
mul
cmc
cmp
mov
and
inc
mov
stos
repnz
fldcw
gs
or
test
(bad)
int3
inc
push
cld
fadd
ret
fistp
cmps
pop
aaa
push
call
dec
sar
mov
mov
jl
adc
jecxz
inc
retf
jb
xor
lock
out
jbe
enter
mov
popf
jecxz
mov
pusha
cwde
fisttp
and
cdq
jmp
or
add
out
enter
and
icebp
dec
jg
mov
push
in
and
pop
pop
test
and
nop
clc
jbe
loope
jl
or
push
xchg
xor
or
add
mov
adc
jge
dec
sti
popf
nop
xchg
xchg
mov
out
pop
sbb
in
xor
jnp
inc
(bad)
imul
sub
mov
pop
ins
push
dec
shr
add
shl
fcomp
mov
outs
arpl
ja
dec
jg
aaa
push
stc
scas
aaa
and
add
int3
xor
mov
(bad)
sbb
mov
mov
imul
movs
enter
pop
or
int3
loope
dec
adc
mov
ds
test
repz
iret
pop
jg
jmp
outs
pop
gs
pop
stos
cmp
push
jmp
sbb
jmp
ror
cmps
movs
std
outs
mov
sbb
ret
imul
movs
dec
(bad)
jp
or
arpl
call
into
xchg
rcr
mov
dec
fsubrp
dec
xchg
lods
ss
dec
or
adc
adc
pop
dec
xor
lahf
retf
(bad)
mov
stc
lea
popa
fcmove
mov
or
cdq
int
rcr
xchg
jno
nop
cli
add
xchg
push
mov
jmp
push
repz
cs
push
xchg
xchg
or
xchg
dec
sub
shl
cmc
sub
cmp
rcl
int
dec
popa
sahf
pop
mov
mov
adc
or
xchg
inc
push
add
pop
mov
cdq
test
mov
les
adc
retf
adc
fmul
mov
inc
inc
push
jmp
jp
(bad)
push
push
rcl
nop
xchg
xchg
sbb
sbb
inc
rol
sub
mov
leave
add
dec
inc
adc
scas
adc
loopne
jp
jno
bound
xchg
lahf
pop
jb
out
idiv
sahf
ins
adc
stc
mov
out
rol
cmp
out
push
pop
mov
xchg
fwait
sbb
mov
in
popa
fst
rcl
push
fdivr
push
movs
sbb
dec
jne
or
add
repz
sub
cmp
add
jo
in
ins
mov
lods
pop
icebp
xor
arpl
mov
das
in
xor
sub
mov
mov
sar
mov
outs
pop
data16
fdivr
or
sub
fcom
rol
aad
in
adc
jae
mov
add
xchg
aaa
lock
stos
dec
popf
imul
adc
dec
outs
mov
rcr
or
jnp
push
pop
fcom
sub
push
add
(bad)
jl
out
lods
lea
or
xor
cmp
inc
movs
gs
sub
and
loope
stos
adc
inc
adc
icebp
popf
repnz
jnp
iret
or
xchg
cwde
sub
cdq
ds
cmps
stc
lock
add
ins
fwait
outs
sbb
xchg
and
mov
or
loop
cmp
in
jmp
mov
or
arpl
xlat
push
or
loopne
xor
jae
cmp
xchg
in
add
(bad)
mov
cmps
leave
in
jno
fadd
sbb
dec
xor
out
push
shl
aad
icebp
(bad)
dec
dec
js
fld
ja
imul
in
jns
sub
mov
mov
push
sub
push
fild
inc
retf
mov
mov
imul
loopne
or
pop
pop
in
stos
in
sub
daa
sub
mov
push
push
popa
(bad)
rol
out
mov
js
les
fidiv
lds
(bad)
pop
mov
mov
xor
clc
cwde
push
clc
add
fmul
or
addr16
fsqrt
out
cld
jmp
dec
les
ror
sub
mov
sbb
shr
cmp
cmps
jo
jl
hlt
(bad)
shl
out
call
imul
frstor
pop
mov
int
sub
mov
cld
(bad)
mov
imul
fwait
outs
hlt
inc
sahf
dec
and
test
cli
jmp
movs
mov
dec
sbb
dec
inc
inc
dec
jmp
ss
or
sub
retf
div
mov
inc
push
add
sbb
dec
div
jns
js
push
js
dec
inc
mov
retf
(bad)
and
jg
inc
adc
daa
mov
push
hlt
pushf
out
aad
test
add
mov
addr16
lods
popa
cmp
or
sbb
repnz
add
jg
and
cwde
stos
pop
(bad)
jmp
mov
inc
lods
push
imul
aam
arpl
ins
mov
xchg
pop
test
jp
xchg
sub
and
or
pushf
loop
xchg
aas
repz
ret
addr16
fist
test
jp
dec
xor
enter
lea
adc
cmp
dec
shr
sbb
jae
sar
movs
cwde
xchg
or
sub
ss
daa
jns
enter
mov
movs
jmp
cmc
std
out
aad
inc
pop
(bad)
dec
mov
popf
shl
mov
adc
arpl
sar
mov
in
pop
int3
aad
das
push
xchg
js
mov
push
bound
xchg
imul
lods
xor
movs
push
xchg
out
and
mov
dec
xchg
int3
and
loop
mov
aaa
xor
xchg
mov
sub
adc
movs
xchg
pop
jl
call
aam
out
stos
jmp
dec
ror
in
ds
repnz
clc
sahf
ror
inc
inc
adc
xor
aad
sub
es
sub
jmp
fidivr
ror
fistp
mov
aad
push
sbb
test
and
aam
clc
inc
outs
or
xchg
cmp
adc
inc
xor
gs
loope
push
fist
jns
jno
adc
loopne
cmp
add
xor
fs
mov
jnp
clc
call
fst
rol
inc
(bad)
mov
adc
pop
sub
pop
and
or
xchg
int3
leave
fldcw
and
fisttp
repnz
into
add
sbb
test
ss
(bad)
jmp
cmp
sub
mov
pop
sub
inc
and
bound
fmul
test
call
out
add
dec
cmp
shl
mov
bound
mov
aad
gs
(bad)
push
scas
jns
inc
xchg
test
inc
and
pusha
cmp
fisub
mov
inc
pop
jae
std
aas
dec
fsubr
mov
inc
add
adc
pop
mov
dec
mov
pushf
inc
mov
or
mov
jl
sub
xchg
xchg
push
scas
jno
push
push
cdq
adc
retf
adc
push
cmp
jne
add
test
test
dec
int3
fidivr
(bad)
xchg
xchg
ror
jno
add
arpl
xlat
into
pop
jg
mov
test
enter
adc
xchg
adc
sub
cwde
inc
xchg
jns
sub
cmp
int3
dec
hlt
mov
push
or
neg
(bad)
aam
jmp
loop
ins
int
mov
sahf
js
jo
mov
jle
inc
push
iret
retf
pop
xor
outs
pop
or
lods
fstp
add
pop
dec
sbb
pop
dec
leave
div
jns
je
pop
not
popf
inc
xchg
out
mov
mov
push
dec
ror
inc
sbb
jbe
retf
clc
(bad)
mov
sub
xor
cmp
stos
mov
jmp
add
sub
jo
add
mov
pop
sub
or
sbb
(bad)
call
(bad)
pop
jo
push
mov
add
adc
int3
out
cmp
ret
cld
cli
dec
fist
dec
cmp
daa
sub
jge
jne
stos
jg
mov
ins
lock
inc
dec
out
xchg
adc
in
sub
cmc
push
mov
jle
mov
out
and
xchg
jne
rol
adc
and
mov
(bad)
pop
pusha
mov
aad
pop
jmp
mov
ins
or
mov
jb
cmc
mov
adc
inc
xchg
in
pop
sub
dec
data16
mov
(bad)
scas
jp
in
push
inc
aaa
sub
loope
sub
mov
cmc
lock
repz
(bad)
iret
fst
add
aas
fcomi
mov
outs
dec
adc
ret
lods
movs
gs
std
lods
inc
nop
mov
je
nop
ret
add
stos
es
sahf
leave
xor
sahf
fistp
popa
cmc
or
inc
cmp
pop
mov
add
scas
sub
and
adc
xchg
daa
adc
fadd
mov
int
sub
pusha
cs
add
(bad)
and
loopne
pop
dec
das
test
movs
push
push
test
movs
enter
in
adc
jecxz
mov
mov
and
and
xor
add
push
mov
movs
mov
lock
pop
pop
loop
sub
xor
pop
mov
arpl
dec
out
out
mov
gs
data16
loope
xor
daa
outs
push
cmc
cli
xchg
scas
xchg
cmp
push
sbb
sub
dec
es
jg
jns
xor
clc
adc
cmp
pop
add
into
bound
pop
enter
jmp
mov
loope
arpl
jnp
pop
xchg
sub
add
bound
and
add
daa
mov
ret
outs
fidivr
outs
rol
jmp
mov
nop
les
mul
xor
icebp
scas
lea
xchg
inc
inc
lds
dec
inc
cmps
enter
pusha
and
push
(bad)
je
retf
movs
xchg
pop
mov
test
ficom
jbe
cld
out
add
shl
jmp
dec
push
pop
call
ds
inc
ret
mov
dec
add
mov
fsubr
xchg
out
cdq
xchg
sbb
jecxz
arpl
mov
in
sub
inc
add
cmps
pop
aaa
shl
ds
inc
fidivr
sbb
fwait
iret
cmp
ret
cmp
div
ja
into
std
(bad)
inc
out
je
sub
mov
pop
bound
(bad)
lods
push
mov
pop
sub
or
call
adc
pop
adc
push
call
add
pop
mov
es
out
cmp
(bad)
pop
xor
dec
xchg
sub
out
jo
loope
daa
scas
sub
dec
push
ret
jbe
retf
in
add
(bad)
fcom
sbb
mov
leave
(bad)
sub
cmp
dec
ds
or
lfs
(bad)
sbb
loope
push
repnz
test
push
adc
push
(bad)
jne
pop
mov
jns
sbb
dec
lds
adc
add
shl
cmp
mov
scas
or
ret
nop
add
in
das
xor
in
je
adc
cli
adc
(bad)
jmp
pop
jo
sbb
ss
aas
ins
fadd
jmp
jne
dec
pop
jno
xchg
stos
sbb
prefetch
or
fist
in
adc
fs
icebp
lds
aaa
xchg
lock
adc
popa
ret
mov
xchg
mov
and
js
or
mov
movs
sub
out
sub
inc
add
test
movs
sub
(bad)
retf
xchg
push
xor
imul
add
adc
cdq
push
loop
inc
sbb
jae
mov
sbb
adc
xor
es
fcom
ret
jmp
pop
sub
mov
push
sbb
sti
sub
test
daa
mov
cmp
dec
loop
mov
pop
push
outs
das
in
xchg
loopne
les
adc
test
push
or
lds
stos
outs
push
mov
(bad)
repnz
(bad)
push
mov
stos
jl
(bad)
push
fwait
nop
ficom
enter
cmp
jmp
test
cwde
or
xchg
out
(bad)
mov
sub
xchg
pop
test
fisubr
pop
inc
daa
outs
and
call
mov
mov
add
fmul
and
dec
jnp
ds
pusha
pop
mov
cmp
retf
mov
push
sbb
test
sar
loope
xor
push
mov
shl
mov
mov
pusha
pop
mov
push
movs
sub
mov
icebp
inc
lods
(bad)
scas
push
clc
lea
pop
mov
retf
adc
push
mov
repz
ja
loopne
pop
call
or
mov
and
aad
ror
stos
sub
(bad)
mov
pop
or
mov
add
xor
(bad)
lods
std
(bad)
push
jns
xor
mov
stc
adc
dec
jp
les
xchg
bound
push
jge
and
mov
and
mov
addr16
mov
or
rcr
aas
movs
aam
fcom
pop
popf
rcl
out
out
cmp
dec
and
jmp
and
shl
cs
stc
add
repnz
xchg
xor
or
dec
sub
mov
and
repz
mov
push
out
stc
and
in
jl
test
addr16
in
mov
xchg
mov
leave
push
inc
or
xchg
adc
je
xor
cmp
(bad)
or
sti
sti
mov
call
cmp
ror
fisttp
mov
das
hlt
and
mov
mov
in
aaa
call
rcr
or
xchg
dec
movs
or
jmp
je
int3
nop
mov
ror
cdq
mov
repnz
mov
mov
pop
ds
xor
dec
jmp
and
ds
fimul
shr
(bad)
mov
jb
sar
xchg
xchg
or
inc
call
jbe
mov
add
ins
sbb
mov
sahf
fadd
call
int
xchg
push
shl
jp
or
mov
pushf
popf
xchg
adc
jnp
lock
sahf
jp
fwait
jge
in
popa
or
pop
inc
scas
(bad)
jo
mov
shl
mov
inc
sbb
pop
sbb
shl
or
repz
mov
adc
inc
push
dec
scas
fist
rol
mov
sbb
jge
sub
or
push
jns
es
loop
repz
ret
dec
jl
jge
xchg
imul
nop
aad
out
sub
mov
xor
popf
(bad)
push
sub
outs
jge
ret
rcl
dec
or
fwait
loope
mov
ins
mov
daa
(bad)
test
call
dec
je
mov
jmp
mov
nop
jb
jb
dec
xchg
adc
rol
dec
imul
jcxz
sbb
inc
xlat
out
call
cmp
ins
push
movs
mov
pop
mov
mov
aam
inc
cmc
loope
push
arpl
stos
add
lahf
sbb
sub
mov
stc
outs
pop
ret
inc
sub
pop
das
test
iret
jne
xchg
dec
sbb
and
stos
loopne
pop
cmp
push
mov
xchg
inc
and
pop
cwde
or
mov
pop
xlat
or
ss
outs
pop
enter
and
idiv
in
jo
mov
repnz
arpl
inc
popa
jb
pop
pop
mov
es
not
push
je
xor
and
push
xchg
mov
fstp
inc
jl
or
cmp
loop
add
inc
jmp
mov
xchg
pop
mov
mov
clc
(bad)
push
add
adc
xlat
inc
add
jmp
sub
dec
push
pop
rol
pop
aas
imul
adc
sub
imul
push
fs
dec
sub
aad
(bad)
in
jns
mov
jg
push
push
push
adc
call
mov
in
push
pop
mul
mov
inc
sub
jbe
dec
mov
jg
or
in
xchg
jl
lods
add
dec
nop
outs
inc
cmp
ins
xchg
mov
push
push
(bad)
xor
test
stos
cmc
lock
xchg
test
add
add
js
and
jb
sbb
pushf
inc
xchg
dec
test
js
pop
lods
inc
cmp
nop
out
addr16
ds
dec
xchg
pcmpeqb
push
push
rol
or
and
push
loope
clc
push
jg
jg
xor
and
pusha
xchg
pop
push
dec
dec
xor
add
outs
rcl
retf
add
(bad)
pop
jp
and
and
sbb
pop
leave
and
das
adc
push
in
adc
int3
pop
cmps
popf
mov
cmp
adc
jns
pusha
fistp
dec
dec
mov
jbe
xchg
out
hlt
loop
ret
mov
mov
aam
jmp
movs
mov
(bad)
xor
popa
pop
pop
xchg
jecxz
inc
sbb
pop
frstor
les
lods
pop
call
aas
sahf
inc
int
sahf
arpl
pop
pop
ins
daa
mov
dec
adc
js
sbb
retf
and
lods
and
cmp
mov
mov
mov
pop
imul
test
mov
imul
js
retf
xchg
fnstenv
ds
jne
sbb
xchg
ds
pop
mov
out
int3
ror
test
into
mov
int3
lds
mov
xchg
jns
add
add
(bad)
jge
push
shl
(bad)
mov
ins
call
nop
call
inc
pop
xor
jb
aas
fs
dec
cld
pop
test
xchg
call
adc
or
rol
pusha
push
pop
retf
aad
fdiv
loope
mov
xor
gs
mov
jle
imul
and
ins
xchg
cmp
adc
mov
inc
in
fmul
pop
xchg
imul
jno
cmp
jmp
jo
sub
jne
push
call
xor
aaa
test
xor
pop
sti
xor
into
dec
jmp
mov
cmp
(bad)
push
cld
mov
mov
or
ret
push
(bad)
in
add
jl
imul
shr
je
pop
popf
ret
mov
test
aas
in
stos
test
pop
retf
adc
popf
or
push
jl
fwait
jne
jmp
inc
push
test
fs
inc
sahf
push
inc
add
cli
xchg
xor
or
shr
adc
out
pop
paddsb
inc
cmp
gs
pop
pusha
sub
pop
push
call
into
aad
jp
push
nop
cmp
mov
xor
cmp
clc
cdq
pop
xchg
les
add
(bad)
sbb
xor
jae
jns
add
push
and
push
mov
enter
cld
xchg
ins
ret
out
or
pop
mov
outs
mov
sbb
jno
add
adc
jb
sbb
pusha
mov
inc
in
(bad)
fsubr
ja
jl
jecxz
imul
adc
sbb
mov
push
stos
iret
push
mov
shl
and
xchg
or
ret
cli
mov
cli
pop
mov
xor
cdq
or
add
add
adc
and
sbb
sub
loope
xlat
gs
fs
and
fdiv
or
std
les
cdq
mov
or
test
mov
sbb
cmps
repnz
jmp
cli
adc
mov
xor
mov
sbb
pop
pop
cmp
sar
xor
sbb
bound
jl
popa
mov
cmp
or
mov
cmps
or
push
jecxz
adc
iret
sbb
je
loope
or
push
pop
adc
mov
and
mov
sti
lahf
inc
shr
test
in
inc
pop
push
sub
push
rcl
shl
mov
ins
scas
loop
movs
jmp
push
push
pusha
shr
pushf
(bad)
fistp
scas
adc
push
movs
inc
xor
add
mov
or
sub
cmp
mov
scas
retf
xchg
addr16
pusha
push
push
mov
imul
cmp
pop
fs
lods
(bad)
out
mov
ficomp
pop
cmps
shl
mov
cs
pusha
fadd
fnsave
push
jmp
push
cs
jge
push
mov
inc
(bad)
shl
sbb
mov
adc
adc
and
fnstsw
jno
psubusw
mov
and
repnz
sahf
arpl
ins
pop
leave
mov
jae
mov
shl
add
push
or
mov
push
mov
and
sbb
call
test
dec
and
xor
pop
sub
out
ret
inc
cs
pop
xor
scas
inc
inc
xchg
mov
inc
inc
in
dec
sbb
sub
inc
mov
movs
out
sbb
mov
test
dec
call
cmps
pmaxsw
sbb
lods
xor
push
inc
cld
mov
mov
mov
pop
cmc
rol
sub
int3
shl
cmc
cmp
cmps
jnp
xor
loop
std
or
mov
rcr
mov
inc
xchg
retf
push
idiv
push
cmps
sti
mov
in
inc
sub
retf
(bad)
or
or
jae
fld
jbe
jbe
add
pop
gs
push
outs
rol
push
aas
dec
xchg
push
pop
loope
movs
sub
mov
sub
mov
ret
and
jge
lea
pop
inc
(bad)
adc
mov
sti
repnz
frstor
das
ficomp
popa
sti
jae
fimul
mov
retf
inc
pop
xchg
fstp
xor
jne
sahf
mov
add
push
mov
xor
inc
sub
int3
shl
inc
imul
pop
aas
adc
xchg
imul
xor
xor
stos
sub
pop
shr
push
popf
jbe
cmp
ins
mov
cdq
arpl
mov
xor
inc
aad
(bad)
retf
in
or
mov
lock
out
std
xchg
(bad)
rol
popa
or
hlt
xchg
mov
je
fs
stos
add
pop
enter
and
fbld
xor
xchg
dec
not
int3
and
inc
mov
dec
call
out
or
into
xchg
sar
fisubr
aaa
loope
cmp
cmp
jl
pop
sub
int
lods
lods
cwde
neg
mov
loop
sub
mov
and
sbb
jg
and
stc
or
jns
enter
or
gs
mov
dec
dec
push
mov
push
pusha
mov
lods
fcom
mov
loope
das
test
addr16
imul
cmc
test
xchg
cmp
movs
idiv
jp
cmp
sbb
xchg
test
mov
jno
pop
bound
push
mov
ins
les
shl
aad
add
leavew
add
movs
je
aam
pop
iret
scas
test
or
dec
imul
fisubr
aas
ds
data16
push
rcr
mov
idiv
pusha
test
jb
xor
jg
push
push
mov
mov
sbb
aaa
fwait
loopne
cmp
jle
add
mov
pusha
pop
jb
add
dec
icebp
dec
cdq
jmp
leave
sbb
push
sub
mov
mov
mov
enter
gs
adc
adc
adc
pop
sahf
test
sbb
cmc
inc
pop
and
pop
add
popf
inc
sbb
mov
mov
aas
pusha
xchg
(bad)
pop
cs
je
mov
pop
popa
sub
nop
jbe
lock
xor
(bad)
dec
adc
sahf
add
aaa
imul
pop
fadd
pop
push
mov
inc
pop
push
bts
int
out
sub
or
das
in
jle
ror
and
fiadd
(bad)
iret
sbb
sahf
dec
lds
xchg
ins
jne
or
es
std
pop
outs
jp
sub
pop
dec
mov
fwait
mov
mov
cmp
outs
stc
push
lods
aam
cmp
adc
bound
mov
aas
adc
lods
sub
push
dec
imul
and
out
inc
cdq
fsub
mov
cmp
jl
jb
repnz
mov
(bad)
ins
or
push
std
hlt
mov
fnstsw
push
idiv
sub
pusha
sub
aas
xchg
mov
gs
inc
or
cmp
dec
inc
xor
mov
xchg
mov
retf
inc
jb
adc
jo
es
out
cs
jmp
popa
jnp
adc
mov
movs
rcl
adc
cli
sub
mov
push
adc
clc
arpl
inc
pop
scas
sub
cli
mov
nop
adc
ins
mov
fcom
rol
and
mov
mov
rcl
gs
cs
cmps
pop
lock
or
ss
ret
fnstenv
push
push
mov
popa
xor
daa
(bad)
lahf
ss
out
dec
xor
jnp
xchg
retf
loope
cs
mov
jmp
mov
fbstp
sbb
orps
cmps
lea
fcomp
fist
inc
in
sbb
mov
adc
inc
mov
adc
cld
ret
(bad)
xor
arpl
int
lds
or
arpl
cwde
pop
push
sbb
adc
dec
clc
cmp
test
jge
and
aas
pop
in
cdq
pop
ret
or
lds
adc
xor
adc
int3
cmp
add
xchg
aaa
ficom
dec
fiadd
mov
fdivr
ror
(bad)
mov
and
fwait
cmp
dec
test
add
sahf
adc
scas
push
add
adc
mov
das
les
xor
movs
cmc
adc
cmp
out
xchg
mov
scas
(bad)
es
cwde
xchg
stos
push
push
int
std
ds
mov
xor
mov
std
cld
call
jl
jecxz
and
jno
xchg
lods
or
sbb
sub
lahf
push
les
es
mov
(bad)
or
mov
scas
jns
pop
jno
mov
arpl
cld
jmp
push
and
mov
movs
xchg
sbb
xchg
push
aaa
adc
jmp
pop
out
bound
rol
fldcw
test
sbb
inc
jbe
in
shl
icebp
dec
cld
ds
fadd
ror
dec
mov
loopne
pop
and
add
outs
(bad)
scas
movaps
call
and
adc
push
adc
add
mov
out
push
ins
inc
mov
mov
add
stos
cmp
add
daa
mov
cmp
clc
iret
aam
fmul
lock
push
sahf
jecxz
and
adc
or
jecxz
repnz
cmp
lock
and
adc
in
retf
or
hlt
cld
adc
aam
cdq
loop
pop
xor
and
arpl
adc
sub
shl
mov
daa
mov
movs
stc
jb
pop
mov
arpl
xor
fs
stos
dec
and
fnsave
fwait
lock
neg
inc
dec
jae
mov
cmp
outs
imul
mov
stc
cmp
movs
push
xchg
fistp
addr16
or
(bad)
mov
xor
aaa
popf
lods
inc
(bad)
mov
adc
call
outs
push
dec
ret
xchg
push
sti
mov
push
push
dec
xchg
cmps
xchg
aam
pop
mov
xor
jmp
xor
xchg
xor
fild
loope
ss
push
fidivr
test
imul
and
mov
xor
movs
inc
add
add
ss
push
and
push
mov
sahf
jg
pusha
imul
cdq
lea
ins
imul
jne
out
sub
sahf
xor
cs
(bad)
mov
or
jp
ror
add
shr
dec
mov
jmp
jle
ins
inc
fisttp
sub
iret
mov
fidiv
push
ds
ja
aam
sbb
out
inc
mov
or
retf
mov
cwde
pop
test
jge
sub
jge
jmp
sbb
jl
(bad)
out
jl
lea
cmc
mov
cmps
pop
out
test
outs
popa
ret
ins
int3
add
mov
pop
push
push
popa
inc
mov
sti
mov
(bad)
rcr
push
outs
fbld
cmps
jp
dec
mov
ds
dec
mov
rol
fiadd
push
pop
fisubr
xchg
xchg
into
dec
movs
sbb
jae
ret
leave
lods
aaa
pop
sbb
inc
xchg
dec
iret
or
cmps
aas
not
addr16
cmp
mov
fadd
call
and
call
test
xor
pop
dec
add
test
mov
aas
push
xchg
imul
daa
aas
loopne
and
mov
push
stc
hlt
pop
inc
aad
or
mov
mov
mov
sbb
or
iret
inc
out
xchg
imul
shr
dec
cwde
jns
or
or
popf
fst
ret
or
mov
js
lods
add
pop
stos
rol
push
sar
outs
or
push
push
loop
push
clc
or
pop
adc
int
lods
mov
scas
out
mov
add
sbb
fldcw
std
mov
fcmove
mov
or
gs
es
xor
retf
ret
or
pop
arpl
test
fldenv
enter
aam
ss
jbe
(bad)
leave
xchg
jmp
push
mov
outs
adc
icebp
mov
sub
loop
scas
test
push
or
addr16
test
add
xchg
fwait
(bad)
mov
mov
pop
mov
xchg
inc
mov
jae
test
ret
call
inc
adc
add
inc
and
add
push
push
push
outs
popa
mov
enter
add
sti
jmp
jl
push
pop
mov
iret
shl
or
mov
dec
js
or
sub
(bad)
jle
mov
pusha
jp
pop
and
imul
mov
jb
fs
ret
xchg
rcl
xor
mov
sbb
int3
clc
sub
jne
jo
pusha
outs
std
xor
(bad)
(bad)
sub
inc
mov
push
je
fwait
cdq
and
(bad)
outs
xor
mov
push
retf
jno
lock
sbb
sub
(bad)
jnp
mov
mov
jo
retf
in
dec
(bad)
pop
aam
adc
pop
(bad)
in
adc
scas
lods
pop
imul
dec
fcomp
sbb
add
add
out
jg
fmul
adc
xchg
or
lods
push
or
aad
or
lods
mov
xchg
pusha
ret
xchg
cld
cmp
inc
adc
mov
ins
stos
out
ins
jle
or
cmp
leave
xchg
lahf
push
dec
loope
test
inc
mov
mov
repnz
mov
retf
or
pop
sub
pushf
push
cmp
cmp
leave
imul
xor
xchg
jmp
iret
xor
in
clc
je
stos
dec
popa
test
out
loope
dec
in
jg
ins
rcl
add
lods
jae
push
data16
fidiv
lock
lods
inc
pop
jle
fimul
and
or
bound
pop
jmp
add
stos
adc
mov
push
out
add
daa
or
and
sbb
(bad)
push
jmp
adc
inc
push
mov
jmp
xchg
sub
aam
out
push
cdq
push
or
or
add
pusha
(bad)
pushf
cmp
(bad)
mov
ficomp
ja
(bad)
mov
std
outs
test
js
daa
in
add
inc
(bad)
mov
je
sub
int
or
lds
lods
cmp
push
pop
mov
sar
pop
in
jae
xor
popa
cdq
or
dec
pop
jge
fld
loopne
and
fbld
sbb
ret
out
stc
sub
and
aas
sbb
jp
dec
xlat
mov
lock
sbb
fwait
mov
into
es
mov
xor
rcr
imul
iret
xor
add
int
adc
fldenv
and
sub
call
cmp
push
loopne
int3
test
ja
xchg
push
dec
fld
outs
mov
or
out
outs
ss
stos
sub
dec
enter
shr
mov
movs
jg
and
test
pop
dec
jnp
lods
mov
dec
mov
cwde
ret
movs
rcl
ret
or
pop
fwait
push
cmp
sub
fisubr
ficom
cmp
or
jecxz
sbb
mov
jecxz
or
push
cmp
dec
pop
cmps
fidiv
in
sbb
adc
push
jne
push
mov
push
call
retf
jnp
mov
cmc
sub
loopne
jg
adc
mov
xor
leave
inc
repz
add
jb
(bad)
add
mov
jmp
mov
ja
xor
pusha
cmps
loope
stos
jnp
outs
and
jne
imul
cmp
dec
scas
repnz
xchg
xchg
sbb
xchg
aas
and
ret
cmp
push
inc
pop
xchg
inc
jl
or
jno
or
aam
add
or
fst
jmp
xchg
hlt
add
fisubr
pop
add
shl
adc
pushf
mov
inc
into
inc
push
sbb
xchg
cmp
xor
push
xchg
and
push
jecxz
sahf
call
xor
pop
mov
sub
sbb
in
stos
lock
mov
in
rcl
xchg
div
sbb
sbb
dec
xchg
into
(bad)
ins
or
and
fist
(bad)
xchg
lods
nop
dec
int
retf
inc
sbb
in
add
lock
cmc
inc
mov
fstp
dec
mov
mov
fdivr
in
dec
and
xor
(bad)
mov
mov
arpl
pop
xor
push
jmp
and
pop
ret
or
mov
or
ror
fsub
pushf
adc
gs
enter
fisttp
mov
repz
inc
mov
cmp
jmp
retf
bound
loop
jmp
dec
cwde
push
push
fwait
xchg
adc
in
mov
inc
(bad)
cmp
ficom
cmc
sub
xchg
mov
jbe
ins
add
iret
mov
cmp
mov
popf
cmp
or
lods
pop
mov
stos
mov
aaa
add
in
mov
cmp
cmp
jns
mov
jnp
dec
shl
push
jle
out
sahf
inc
pop
push
or
xchg
xlat
and
sub
xor
adc
mov
push
imul
fsubp
adc
adc
out
mov
inc
mov
retf
mov
mov
(bad)
xchg
inc
jmp
in
shl
sub
into
adc
sbb
jo
xchg
cmp
stos
mov
sub
sahf
and
mov
enter
loope
inc
inc
jo
aas
dec
call
push
or
mov
dec
and
inc
imul
rcr
mov
jle
or
popa
mov
adc
call
xor
sub
sub
push
push
and
(bad)
out
js
repnz
cmp
jne
mov
imul
jne
cli
xchg
rol
pop
int
inc
jg
mov
adc
repnz
sbb
inc
xchg
inc
into
dec
pop
xor
clc
repnz
shl
mov
xor
shr
and
pop
ja
push
in
pop
(bad)
cwde
aas
daa
fbld
fistp
cdq
dec
xor
lahf
mov
inc
sub
dec
inc
pop
movs
pop
push
fwait
js
fdiv
pushf
add
inc
push
xlat
neg
daa
mov
arpl
jecxz
inc
dec
ror
jg
sbb
test
stos
sub
stos
dec
into
dec
mov
aam
jp
jge
push
xchg
outs
aam
and
shl
imul
jb
cmp
adc
mov
and
mov
xchg
add
dec
adc
cld
jne
outs
xchg
in
repz
cmp
pusha
mov
jl
ja
fist
inc
fistp
adc
adc
stc
jne
loop
cmps
mov
mov
popa
leave
cmp
or
movs
les
xor
cmp
mov
ss
add
(bad)
int
fmulp
paddsb
cmc
mov
in
js
jbe
shr
mov
add
pop
pop
adc
cmp
cmp
stos
cmps
fld
xor
gs
aaa
push
push
and
fwait
cdq
dec
stc
sub
sub
into
ret
or
dec
add
push
add
pop
sbb
mov
hlt
loopne
adc
ss
jmp
jo
push
lds
mov
mov
adc
es
xor
mov
adc
sbb
ja
push
(bad)
mov
imul
sub
jo
xchg
movs
loope
mov
mov
cmp
cmp
push
xchg
mov
(bad)
test
jg
cld
and
retf
cld
mov
sbb
dec
shl
daa
jnp
or
add
sbb
lea
add
or
lods
ret
test
sar
lods
lock
sar
mov
stos
mov
jbe
call
pushf
jns
fdivr
test
mov
fild
out
sahf
mov
ins
mov
mov
retf
adc
cmps
inc
sub
xlat
jne
ret
jle
dec
or
mov
mov
test
ror
popf
mov
dec
dec
inc
or
jge
pop
dec
pop
adc
div
cmp
addr16
jle
sub
jecxz
xlat
hlt
sub
fisttp
push
cmp
push
adc
neg
or
push
fsub
mov
inc
repz
rcr
aaa
fs
cdq
adc
mov
pop
adc
push
dec
pop
enter
(bad)
mov
(bad)
call
sbb
cmp
or
xor
mov
cdq
call
xchg
mov
jo
stos
fs
stos
lods
push
repz
sti
fcom
mov
mov
outs
cmp
pop
clc
xchg
mov
jo
