scas
enter
sub
in
fimul
sbb
dec
cmp
or
or
fxch
pop
dec
xchg
fld
dec
cmc
div
(bad)
pusha
cmp
jge
mov
sbb
add
js
cdq
popa
imul
movs
jl
ds
xchg
cs
inc
cmp
cdq
jecxz
sbb
dec
sub
repnz
sti
xchg
lahf
or
cdq
pop
add
inc
(bad)
retf
dec
xchg
jp
dec
dec
retf
jo
pusha
mov
fisttp
out
xchg
loopne
pusha
lahf
or
push
nop
test
in
push
in
call
add
adc
push
adc
out
pop
fwait
push
sbb
lahf
pop
pushf
cmps
lahf
or
xchg
(bad)
xchg
pop
pop
test
loop
dec
in
in
add
popa
xchg
mov
in
mov
push
jmp
or
leave
pop
xchg
jno
sbb
xchg
sbb
test
not
mov
xchg
fisttp
and
dec
sbb
mov
xchg
mov
sub
dec
sbb
cmp
sbb
lahf
push
inc
inc
pusha
pop
xchg
push
ret
inc
xchg
add
outs
mov
sub
repnz
out
sbb
sbb
dec
ja
out
pusha
mov
adc
add
xchg
fwait
xchg
xchg
xchg
and
add
xchg
stos
xchg
js
mul
sub
push
jo
pop
icebp
(bad)
popa
mul
cdq
pop
add
sbb
or
lahf
or
ja
sbb
enter
or
pop
(bad)
mov
sbb
cmc
add
jae
or
cdq
pop
add
(bad)
pop
sbb
mov
in
and
stos
sbb
data16
or
or
dec
sbb
mov
int3
sbb
sbb
push
inc
inc
push
in
fstp
sbb
mov
sbb
and
pop
lahf
bound
in
push
mov
icebp
dec
ins
mov
dec
push
in
jae
not
pop
lahf
pusha
or
or
push
sub
call
ins
icebp
dec
inc
xor
jl
add
sbb
sbb
jb
mov
test
stos
fisttp
icebp
pop
in
sbb
stos
and
ds
dec
sbb
stos
sub
push
das
dec
sbb
out
jle
sbb
add
push
adc
or
fsincos
stos
sbb
lahf
or
sbb
cmp
sbb
outs
sbb
mov
dec
out
and
jmp
sbb
bound
jo
bound
jb
or
call
or
or
sbb
in
in
sbb
push
scas
enter
or
iret
pusha
adc
or
iret
pop
icebp
repz
aad
sbb
or
sub
sbb
stos
pop
sbb
mov
sub
out
ja
sbb
lahf
mov
push
mov
jl
sub
repnz
sbb
or
push
mov
and
in
retf
sub
rcl
pop
pop
nop
dec
pop
dec
dec
and
das
adc
or
xchg
(bad)
dec
xchg
(bad)
dec
jo
pusha
sbb
or
pusha
jge
in
add
cmps
out
sbb
mov
jl
sub
daa
in
adc
outs
mov
ins
push
cmc
or
outs
(bad)
imul
iret
pusha
sbb
hlt
icebp
and
sbb
imul
loop
sbb
mov
sbb
iret
push
inc
lahf
or
fcmovu
push
inc
rcr
call
adc
cmp
jo
cs
or
in
js
pop
loop
iret
xchg
pop
arpl
add
imul
jge
repnz
jno
sbb
into
adc
jmp
sub
je
out
xchg
ins
push
pusha
jge
jo
imul
jge
repnz
sbb
into
out
arpl
pop
arpl
or
fidiv
fcmovu
jecxz
xchg
addr16
(bad)
xchg
(bad)
nop
ffree
push
rcr
retf
cdq
jae
dec
dec
enter
pop
dec
loope
mov
nop
fsubr
neg
sub
cdq
cli
cld
sbb
repnz
xchg
(bad)
nop
fcomp
neg
sub
sub
pop
xchg
(bad)
sbb
adc
adc
and
and
sbb
stc
call
or
retf
ins
or
in
xchg
ficomp
and
jge
xchg
(bad)
repnz
lahf
(bad)
jl
push
dec
jmp
xchg
outs
mov
in
mov
and
mov
(bad)
xchg
pop
xchg
sbb
call
pop
out
mov
pusha
mul
inc
rcl
retf
mov
ja
ins
sbb
jge
xchg
ret
lahf
arpl
out
stos
cmp
adc
in
popa
not
(bad)
arpl
out
pusha
or
xchg
pop
xchg
sbb
call
fild
pushf
sbb
inc
nop
in
je
nop
loop
clc
xchg
dec
xchg
or
lahf
mul
pop
cmps
xlat
gs
in
popa
not
in
(bad)
in
in
imul
mov
push
(bad)
jmp
lahf
arpl
out
push
shl
jmp
out
adc
inc
inc
(bad)
push
in
call
push
adc
and
pop
mov
in
cli
hlt
nop
pop
sbb
ja
popa
sbb
fist
pop
nop
fld
fsub
cwde
leave
loopne
mov
nop
retf
fistp
test
and
jecxz
xchg
pop
xchg
into
sbb
out
dec
in
xchg
(bad)
out
jg
sbb
push
rcr
retf
dec
iret
pop
dec
dec
adc
adc
xor
xchg
pop
arpl
dec
out
(bad)
repnz
(bad)
outs
sbb
fist
pop
nop
fld
fsub
cwde
leave
loopne
mov
nop
retf
fistp
test
and
jecxz
mov
in
cli
hlt
nop
pop
sbb
fisttp
xchg
pop
xchg
into
sbb
inc
push
retf
dec
xchg
jp
dec
dec
enter
adc
or
and
arpl
dec
out
or
nop
in
je
xchg
pop
xchg
pop
cmps
push
cmps
and
push
nop
mov
or
enter
dec
and
jecxz
cwde
ja
fstp
lahf
cmp
inc
rcl
retf
dec
iret
pop
dec
dec
adc
adc
push
lock
push
iret
out
jmp
pop
sbb
adc
sbb
loopne
out
not
push
fcomp
inc
jle
sbb
in
pusha
pop
xchg
inc
arpl
dec
ja
in
pusha
mov
ds
nop
loop
out
nop
pop
addr16
fxch
cmp
dec
adc
adc
pop
daa
xor
(bad)
(bad)
xchg
(bad)
nop
frstor
adc
mov
sbb
push
into
jae
cmc
or
or
dec
leave
imul
or
ja
push
lahf
mov
adc
dec
loope
pop
into
sbb
inc
rcl
retf
dec
int3
pop
dec
xchg
jmp
fwait
push
mov
cmp
sbb
jmp
mov
dec
adc
out
xchg
sbb
jle
xchg
xchg
dec
adc
out
adc
out
xchg
and
out
iret
icebp
ret
out
or
inc
rcl
retf
cdq
jae
dec
dec
enter
and
test
addr16
jl
or
ja
imul
iret
pusha
or
fisttp
icebp
xchg
out
or
xchg
pop
and
sub
ret
enter
add
outs
leave
pop
jno
jle
sbb
bound
xchg
(bad)
dec
repnz
js
sbb
retf
sub
xchg
rcl
xchg
pop
repnz
enter
clc
call
dec
sbb
(bad)
test
cmc
xlat
inc
sbb
scas
enter
xchg
fst
jmp
xchg
addr16
xchg
pop
pop
icebp
pop
pusha
mul
inc
scas
enter
rcr
push
in
mov
repnz
sbb
pop
dec
mov
push
shl
ret
cwde
daa
jecxz
pop
sbb
sbb
jmp
call
test
and
pop
popf
rcr
add
bound
dec
sbb
lahf
mov
cmp
sbb
jmp
mov
dec
adc
out
xchg
mov
nop
into
or
cdq
mov
or
pusha
or
xchg
sbb
out
pusha
pop
out
xchg
loopne
push
idiv
stc
pop
lahf
test
ja
loop
pusha
mov
push
mov
jge
cdq
mov
or
inc
sahf
or
fwait
ins
std
adc
lahf
mov
push
int3
or
xchg
(bad)
dec
xchg
fiadd
xchg
pop
fwait
pop
xchg
and
add
imul
sahf
lods
or
sbb
xor
lahf
or
daa
jecxz
pop
sbb
sbb
jmp
nop
ret
nop
lahf
inc
mul
in
retf
out
jecxz
pop
sbb
lods
pop
lahf
jle
cdq
mov
or
xchg
(bad)
cwde
fstp
or
out
or
inc
push
shr
ret
jg
(bad)
sbb
adc
loope
(bad)
mov
xchg
(bad)
dec
xchg
jmp
mov
ins
lods
xchg
addr16
and
and
enter
arpl
pushf
ret
out
pop
mov
jge
jb
stos
pop
sbb
enter
sbb
and
mov
nop
pop
arpl
fldcw
add
xchg
sbb
out
pusha
pop
mov
dec
adc
out
or
sbb
push
dec
in
pop
jge
fstp
mul
sbb
(bad)
vpunpcklwd
ins
and
lahf
or
sbb
stos
pop
sbb
sub
leave
add
pop
sbb
dec
loope
sbb
mov
cmp
sbb
daa
dec
adc
lahf
(bad)
cli
xchg
sbb
out
pusha
sbb
fxch
cmp
dec
enter
xchg
cmp
sbb
(bad)
cmp
or
pop
xchg
mov
mov
jge
fstp
hlt
sbb
lahf
or
std
push
dec
loope
pop
jecxz
xchg
outs
and
push
sbb
or
sbb
sbb
mov
cmp
in
adc
adc
neg
add
or
in
js
pop
loop
iret
fistp
aas
stos
pop
sbb
not
(bad)
or
jg
or
dec
ds
mov
scas
fisttp
repnz
push
lock
push
iret
call
lock
std
push
dec
loope
pop
jecxz
adc
and
icebp
lea
sub
cmps
ja
es
jne
cdq
cli
hlt
sbb
pop
dec
xchg
pop
xchg
mov
sub
out
cli
hlt
sbb
nop
imul
cmp
ja
or
pusha
push
iret
mov
or
cmc
or
cmc
or
test
sbb
or
xchg
(bad)
jae
cmc
or
iret
loopne
jne
or
cdq
push
neg
mov
sbb
out
into
pop
out
xchg
imul
ja
sbb
cld
dec
jo
pusha
jmp
outs
addr16
jne
or
pop
outs
sbb
out
addr16
ja
or
(bad)
push
in
mov
repnz
pop
dec
mov
daa
mov
cli
xchg
sbb
fwait
pop
movlps
lahf
into
pushf
out
mul
sbb
in
stc
pop
lahf
loopne
jbe
or
in
(bad)
fucom
popa
test
mov
adc
lahf
add
jo
loopne
imul
sbb
pusha
add
in
(bad)
out
pusha
test
ja
loop
pusha
mov
push
sbb
test
push
mov
push
lahf
or
stc
push
lea
fst
(bad)
stc
in
test
iret
and
enter
arpl
fldcw
add
mov
mul
xchg
pop
test
imul
pop
lahf
sbb
xor
push
mov
sbb
add
sbb
retf
mov
lahf
or
iret
test
dec
xchg
cmps
test
pop
pop
pushf
sbb
test
sbb
fxam
popa
div
jecxz
mul
cdq
pop
add
loop
mul
xchg
sbb
out
pusha
stos
dec
mov
mov
nop
fst
lea
mov
iret
and
enter
arpl
fst
lahf
outs
call
pop
popf
xchg
popf
or
call
push
sahf
add
sbb
cmc
or
jle
sbb
pusha
pop
icebp
mov
pop
add
(bad)
and
lahf
pop
scas
lahf
cmp
out
mov
pop
popf
and
lea
dec
adc
dec
jb
test
sbb
jbe
lahf
mov
push
nop
mov
out
fwait
or
sbb
pusha
or
sbb
or
fwait
pop
fdivr
lahf
bound
jb
call
mov
in
pusha
neg
in
or
cmc
or
jg
sbb
pusha
pop
icebp
pop
imul
and
pusha
or
outs
xchg
iret
pushf
mov
mul
sbb
pusha
fdivr
fisttp
jno
aas
dec
sbb
ja
out
sbb
adc
sbb
das
jae
div
movs
out
mul
dec
ja
in
in
mov
push
mov
jl
fstp
mov
sbb
lahf
bound
jb
call
mov
out
pusha
neg
in
or
cmc
or
jg
sbb
pusha
pop
icebp
xchg
push
out
pop
add
in
or
outs
xchg
iret
pushf
mov
mul
sbb
pusha
mov
dec
aas
dec
sbb
sti
std
out
sbb
adc
sbb
das
jae
div
movs
out
mul
dec
ja
in
in
mov
push
mov
jl
fstp
mov
sbb
lahf
add
mov
pop
bound
jb
call
mov
out
pusha
neg
in
or
pop
lea
sbb
mov
pop
lahf
pusha
dec
mov
imul
cdq
pop
add
in
or
outs
xchg
iret
pushf
mov
mul
sbb
pusha
popa
cli
fisttp
jno
aas
dec
sbb
push
cld
out
sbb
adc
sbb
dec
jae
div
movs
out
mul
dec
ja
in
in
mov
push
mov
jge
jo
pusha
imul
(bad)
mul
in
loopne
out
pusha
neg
in
or
pop
lea
sbb
add
sbb
sbb
into
sbb
sub
sbb
(bad)
in
popa
test
(bad)
jecxz
fcomp
or
mov
push
shr
ret
fistp
lahf
loope
pop
lahf
or
sbb
(bad)
shl
test
pusha
pop
xchg
and
inc
xchg
(bad)
adc
nop
(bad)
out
push
lahf
or
iret
sbb
xor
dec
mov
rcr
ret
call
or
sbb
sbb
lahf
mov
sbb
mov
adc
lahf
mov
xor
or
jl
lea
sbb
mov
sbb
mul
in
test
adc
shl
test
push
shr
stc
push
lea
fst
(bad)
int
popa
test
adc
mov
popa
test
lahf
or
sbb
dec
in
pop
pop
pushf
and
or
xchg
sbb
out
pusha
pop
xchg
lahf
dec
mul
in
and
or
sbb
lahf
sbb
retf
call
or
sbb
(bad)
icebp
in
test
pusha
pop
xchg
and
and
nop
(bad)
aam
lahf
or
sbb
lahf
ja
out
iret
sbb
xor
dec
cmps
sbb
(bad)
cli
xchg
sbb
ficomp
sbb
sbb
lahf
test
adc
icebp
in
test
push
dec
in
inc
cmp
xchg
pop
mov
pop
pushf
jle
or
fwait
je
jge
lahf
mov
pusha
mov
jno
aas
dec
sbb
pusha
pop
icebp
sub
or
cdq
pop
add
mov
lahf
loope
sbb
jecxz
sbb
or
in
in
in
test
imul
pop
lahf
test
ja
jne
lahf
mov
push
push
shl
ret
jg
sbb
sbb
pusha
sbb
pusha
pop
xchg
scas
pop
mul
in
in
xchg
js
sbb
mov
popa
neg
mov
ins
lods
xchg
cmps
ja
out
enter
enter
arpl
fst
lahf
mov
push
retf
out
lahf
or
iret
pusha
cdq
sti
fisttp
xchg
lahf
add
out
iret
and
mov
nop
pop
arpl
fst
lahf
mov
push
(bad)
or
xchg
sbb
xchg
lahf
cmp
out
iret
and
enter
arpl
fst
lahf
mov
jbe
sbb
lahf
bound
repnz
sbb
add
jl
lea
popa
neg
sbb
nop
lahf
out
out
adc
dec
xchg
sub
in
mov
or
out
mov
jmp
pusha
mul
cdq
jae
nop
std
es
sbb
lods
out
pusha
pop
xchg
and
(bad)
mov
in
jl
pushf
inc
pusha
mul
xchg
pop
mov
pop
pushf
jg
or
cdq
cmp
lahf
sbb
out
iret
pusha
imul
pop
mul
in
and
mov
nop
pop
arpl
fst
lahf
mov
nop
mov
sbb
mul
in
bound
in
cld
out
pusha
sbb
xor
dec
mov
shl
ret
call
or
sbb
mov
nop
(bad)
aam
lahf
or
in
pop
popf
ficomp
push
out
pusha
pop
out
div
out
ja
jmp
iret
pop
xchg
and
out
mov
mov
and
out
or
sahf
adc
sbb
pop
(bad)
jmp
sbb
mov
xchg
lahf
(bad)
mul
in
pusha
inc
cli
fisttp
xchg
lahf
(bad)
mul
in
loopne
jo
or
out
mul
cdq
push
neg
mov
sbb
lahf
imul
sbb
out
pop
xchg
lahf
addr16
in
mov
pusha
mul
dec
ja
jo
lahf
mov
push
cmc
or
lahf
(bad)
mul
in
pusha
inc
cli
fisttp
xchg
lahf
(bad)
mul
in
loopne
jae
or
(bad)
fimul
sbb
pusha
or
adc
cdq
in
test
push
shr
stc
push
lea
popa
not
in
not
in
lea
cwde
xchg
mul
in
lea
xchg
scas
test
popa
test
pusha
(bad)
cmc
in
not
in
(bad)
cmc
in
not
cwde
jno
out
sbb
jmp
outs
cwde
into
pushf
out
mul
sbb
sub
cli
xchg
sbb
ficom
pusha
pop
xchg
sub
adc
pusha
or
adc
leave
in
test
sbb
int
popa
neg
outs
xchg
sbb
cmp
dec
xchg
sbb
cmp
dec
xchg
sbb
cmp
dec
xchg
add
xchg
sbb
out
pusha
pop
xchg
sub
adc
mov
push
inc
rcr
push
div
sub
jb
sbb
sti
test
dec
jle
sub
call
ins
icebp
fstp
in
and
jnp
push
sbb
or
sbb
dec
std
sar
or
sbb
jno
lahf
mov
push
ja
out
in
mov
sub
sbb
(bad)
repnz
in
pusha
mul
icebp
mov
pop
cli
sahf
or
sbb
icebp
fstp
aam
jp
or
sub
ins
(bad)
je
ficomp
mul
in
push
inc
inc
push
sbb
sbb
lahf
or
dec
push
in
dec
dec
and
cmp
and
out
iret
jno
sub
jo
bound
jb
sub
jae
ja
jl
lahf
sbb
sbb
cmp
dec
adc
adc
clc
sbb
push
into
out
jmp
pop
sbb
rcr
sbb
sbb
pop
lahf
or
sbb
dec
sbb
pop
or
sbb
pop
fist
sbb
push
rcr
stos
pop
sbb
push
lods
call
adc
lahf
xor
push
xchg
in
or
sbb
pushf
mov
dec
sbb
lahf
dec
lock
or
in
jl
pop
lahf
cmp
call
call
or
add
repz
add
pop
in
sahf
xor
lahf
mov
sbb
imul
cmc
xchg
or
pop
cmps
xchg
pop
sbb
pop
cmps
xchg
pop
sbb
clc
out
cld
push
dec
in
xchg
pop
loope
sbb
xchg
pop
sbb
sbb
lahf
neg
sub
in
call
sbb
pushf
or
fwait
imul
adc
add
or
dec
sbb
or
pusha
mul
in
call
sbb
pushf
or
fwait
imul
add
dec
sbb
jbe
out
pusha
(bad)
sbb
add
adc
movaps
jbe
sbb
lahf
mov
jnp
or
call
mov
mov
jbe
out
pusha
(bad)
sbb
add
sbb
movaps
jbe
sbb
lahf
sub
call
ficomp
jae
pop
sbb
mov
sbb
add
sbb
movaps
jbe
sbb
lahf
mov
adc
adc
pop
fist
sbb
jbe
out
pusha
neg
sub
in
xor
sbb
fistp
lahf
dec
lock
sahf
or
mov
sahf
or
mov
in
jns
pop
jmp
pop
sbb
loope
sbb
dec
sbb
cmps
xchg
pop
sbb
sbb
lahf
test
sbb
xchg
cwde
pop
sbb
sbb
lahf
test
sbb
cmps
xchg
pop
sbb
sbb
lahf
neg
sub
cdq
call
xchg
and
xchg
pop
mov
add
sbb
sbb
lahf
cmp
repz
or
sbb
add
cmp
lahf
adc
dec
aas
dec
sbb
fisttp
adc
jecxz
call
lea
call
(bad)
sbb
sub
fisubr
dec
sbb
lahf
dec
repnz
fisttp
repnz
lahf
or
add
icebp
mov
dec
sbb
pop
mov
add
pop
je
sub
jbe
sbb
lahf
mov
mov
or
in
jl
pop
lahf
(bad)
sbb
add
pop
nop
mov
sbb
sbb
out
test
xor
push
into
push
lods
call
sbb
pop
scas
pop
out
test
push
xchg
(bad)
push
lods
(bad)
and
lahf
or
adc
lahf
mov
jge
in
add
add
sub
daa
pop
or
sbb
add
sbb
mov
push
dec
sbb
jmp
dec
pop
jne
sbb
inc
call
jecxz
call
adc
add
call
nop
rcr
sbb
jnp
pop
sbb
dec
sbb
mov
jge
call
sbb
cmovs
push
push
clc
xor
push
into
call
jecxz
xchg
push
dec
xchg
setae
xchg
push
mov
sbb
sbb
cmovs
mov
cmps
or
imul
out
cmp
or
sbb
dec
xchg
setae
xchg
push
mov
sbb
cmovs
mov
cmps
or
imul
or
nop
shl
dec
sbb
pop
dec
inc
inc
push
retf
dec
xchg
jp
dec
dec
enter
pusha
sbb
in
jns
pop
out
into
out
jmp
pop
sbb
add
inc
lahf
or
pop
lahf
pop
icebp
fwait
ror
mov
mul
mov
imul
sbb
daa
dec
adc
lahf
(bad)
call
div
icebp
dec
ror
mov
test
pop
ror
mov
not
pop
lahf
pop
icebp
das
ror
mov
rcl
retf
cdq
jae
dec
dec
enter
cdq
jbe
ret
nop
fldenv
ins
scas
fisttp
jno
and
mov
mov
xacquire
sbb
push
rcr
ret
call
sbb
or
fwait
je
and
loop
mov
neg
sub
cdq
cli
fcomp
xchg
inc
cmp
xchg
pop
mov
iret
pop
ret
sbb
pop
dec
lds
lahf
or
mov
push
sbb
pop
lahf
sbb
or
pop
das
or
sbb
or
stc
push
dec
lea
sahf
or
sbb
movs
xchg
jmp
jmp
iret
pusha
sbb
cdq
or
imul
ret
xchg
pop
add
sbb
dec
mov
sbb
or
sbb
jge
repnz
sbb
dec
mov
xchg
fidivr
mov
pop
jmp
pop
sbb
or
outs
aas
bound
jo
bound
(bad)
ja
js
lahf
mov
pop
lahf
or
stc
push
dec
mov
ja
inc
sbb
dec
sbb
jmp
packssdw
std
icebp
cdq
mov
mov
rcl
retf
cdq
jae
ficomp
sub
pop
out
dec
std
xchg
(bad)
out
jg
sbb
add
pop
outs
adc
loope
cli
cld
sbb
dec
or
bound
jo
test
test
imul
or
pusha
jge
in
cmp
out
je
cwde
ja
sbb
lahf
rcr
push
in
dec
dec
and
js
add
in
jl
pop
lahf
imul
mul
jg
out
arpl
lahf
(bad)
(bad)
xchg
(bad)
nop
ffree
rcr
push
in
call
jge
xchg
ret
pop
jmp
pop
sbb
ss
lahf
or
outs
stos
pop
scas
pop
test
and
lahf
or
outs
mov
scas
pop
test
and
lahf
or
outs
add
pop
test
and
lahf
or
outs
pop
scas
pop
test
and
lahf
or
adc
lahf
sbb
sbb
adc
xor
pop
pusha
or
lods
(bad)
push
lods
fwait
or
push
lods
mov
and
nop
lea
loopne
pop
scas
push
mov
fist
lahf
and
lods
mov
and
jmp
adc
pop
jge
xchg
addr16
push
nop
mov
sbb
lahf
jge
adc
pop
pop
xchg
push
call
inc
ret
or
adc
dec
sbb
push
mov
movs
pop
lahf
pop
dec
bnd
push
sbb
push
dec
loope
push
not
or
or
retf
loope
ja
nop
pop
imul
pop
sahf
lock
sbb
sbb
pop
scas
pop
pusha
arpl
push
pop
xor
enter
sbb
pop
cdq
pop
pusha
or
sub
call
and
jge
xchg
addr16
cdq
es
or
push
push
lock
jge
xchg
addr16
sbb
xor
push
jmp
adc
idiv
and
sbb
jmp
nop
loop
loopne
call
rcr
sbb
fwait
mov
sbb
lahf
or
call
loope
pop
xor
sbb
push
nop
loop
loopne
call
loope
ja
cdq
es
or
lock
xor
ins
sbb
lahf
jge
cdq
push
not
or
or
retf
call
dec
or
addr16
push
adc
loope
mov
cdq
mov
lock
call
loope
ja
cdq
es
or
lock
jge
xchg
addr16
push
nop
mov
ins
adc
neg
sbb
or
sbb
adc
mov
or
xchg
retf
dec
mov
sbb
sbb
or
lods
(bad)
mul
inc
rcl
retf
cdq
jae
dec
dec
enter
sub
xchg
jmp
sbb
jmp
sbb
loopne
sbb
dec
adc
sbb
loope
sbb
or
push
lods
retf
clc
popf
and
scas
rcl
repnz
out
(bad)
neg
sub
adc
ja
sbb
jmp
and
lahf
or
outs
mov
jecxz
xchg
inc
or
sbb
xchg
mov
out
arpl
and
jp
icebp
mov
or
xchg
fist
sbb
push
cli
sbb
mov
nop
loopne
rcr
retf
in
xchg
fist
sbb
pushf
adc
call
not
retf
sbb
sahf
fcomp
loop
or
repz
adc
loope
(bad)
neg
sub
cdq
push
div
loop
pop
pop
pop
sahf
fcomp
loop
(bad)
xchg
fwait
xor
dec
dec
nop
mov
sbb
stos
sbb
icebp
outs
arpl
out
pop
add
inc
(bad)
push
in
mov
repnz
push
sbb
int3
pop
dec
repnz
icebp
out
pop
(bad)
cli
lds
sbb
daa
push
sbb
mov
jnp
fcomp
jmp
in
or
lahf
ins
out
in
mov
sub
sbb
pusha
neg
outs
mov
scas
lahf
ins
out
in
xor
jp
dec
sbb
jmp
cdq
cmps
jl
out
lahf
jl
adc
pusha
neg
pop
lahf
or
push
push
lods
or
mul
pusha
or
xchg
xor
mov
or
xchg
or
sbb
sbb
mul
jno
push
xchg
push
xchg
(bad)
mov
clc
popf
or
fimul
icebp
inc
or
xchg
or
movsx
jmp
(bad)
jmp
mov
sbb
mul
fcomp
sti
mul
pusha
or
lods
or
mul
pusha
leave
sti
sbb
or
push
dec
sbb
nop
mov
lods
or
mul
pusha
leave
sti
sbb
or
push
dec
sbb
pusha
neg
sub
call
push
sahf
or
sbb
ja
loopne
pusha
sbb
lahf
or
leave
repnz
jmp
xchg
inc
or
nop
lahf
imul
in
div
cmp
or
sbb
or
xchg
pop
mov
sbb
sbb
pusha
neg
pop
or
sbb
mul
ins
dec
test
ja
inc
sbb
dec
sbb
pusha
or
xchg
lahf
or
jb
neg
sbb
cmc
cmc
pusha
mul
scas
inc
xlat
out
ja
jecxz
pusha
mov
push
push
dec
in
pop
jl
cdq
cmp
xchg
xchg
(bad)
out
je
sub
push
rcr
lock
leave
sti
sbb
call
out
in
add
pusha
or
fwait
pusha
neg
sbb
or
nop
lahf
pop
(bad)
out
je
cwde
fstp
repz
lahf
or
pusha
jge
repnz
repnz
(bad)
mov
lahf
or
xchg
sbb
in
or
lahf
jae
out
nop
mov
mul
pop
jmp
pop
sbb
rol
div
and
or
repz
sbb
nop
mov
out
jge
xchg
push
mov
mov
or
pusha
or
in
jmp
pop
jmp
xchg
push
mov
out
adc
in
cmc
pusha
neg
clc
popf
add
sti
popf
or
ret
popf
neg
and
mul
pusha
or
in
jl
pop
lahf
mov
jmp
repnz
pop
sbb
push
lea
fcomp
sbb
pusha
mov
bound
out
adc
mov
pop
(bad)
out
sbb
add
mov
out
sbb
mov
popf
sbb
pusha
sbb
aam
in
bound
in
pop
out
inc
xlat
out
ja
dec
sbb
mul
and
mov
in
jge
xchg
sbb
(bad)
in
sbb
pusha
mov
jmp
jo
or
add
xchg
or
repz
int
adc
sahf
or
(bad)
xor
out
je
out
jmp
pop
sbb
mul
fstp
xchg
xchg
inc
xlat
out
mov
int
pusha
not
pop
lahf
pop
scas
(bad)
ins
out
in
jmp
fisttp
nop
(bad)
imul
in
or
sbb
or
xchg
sbb
fst
lahf
mov
pop
popf
and
cld
mul
pusha
pop
scas
sbb
jl
call
sbb
lahf
loope
sbb
out
in
sbb
sbb
not
jnp
out
pop
lea
cdq
xor
(bad)
in
or
out
push
clc
push
call
call
push
nop
jmp
ins
push
push
clc
call
add
call
aam
call
(bad)
cmp
out
pop
jmp
pusha
neg
in
pop
scas
sbb
loope
sbb
cmp
call
sbb
nop
sbb
and
nop
mov
std
lds
imul
movs
mov
adc
pusha
neg
clc
popf
and
pop
nop
lahf
or
outs
mov
and
sbb
xor
sbb
mov
sbb
xor
sbb
dec
repnz
mul
adc
mov
outs
add
lahf
ins
out
in
imul
sub
(bad)
in
loopne
jecxz
neg
stc
inc
mul
sbb
dec
call
or
or
fstp
sbb
sbb
push
or
in
cld
mul
pusha
mov
fwait
or
push
sub
repz
out
pop
(bad)
jmp
(bad)
jmp
mov
sbb
mul
inc
rcl
retf
cdq
jae
dec
dec
enter
pop
dec
loope
lods
jmp
or
or
pop
pusha
or
and
mov
ins
lods
xchg
pop
sbb
cli
les
loop
jne
xchg
stos
lea
lahf
or
mov
stos
pushf
movs
pop
lahf
mov
sbb
gs
movs
or
call
pop
in
sbb
sbb
push
pop
loope
(bad)
sbb
mov
out
fistp
pop
in
jecxz
call
or
into
pop
out
loope
sbb
mov
or
nop
lea
pop
mov
lahf
mov
pop
scas
pop
sahf
xor
fs
mov
sbb
lahf
mov
pop
jmp
lods
fmul
nop
fcomp
push
cdq
gs
adc
sbb
xchg
mov
pop
loop
cdq
pop
pusha
or
lods
fmul
out
pop
sahf
enter
call
ins
push
pop
dec
out
adc
loope
pop
and
xchg
retf
lods
fmul
cmp
lahf
or
daa
pop
or
sbb
or
pop
pusha
or
lods
pushf
xor
ins
adc
sbb
jmp
pop
bound
cdq
bound
push
cwde
leave
mul
in
dec
in
je
xchg
sbb
dec
or
jmp
adc
dec
in
pop
jne
sbb
addr16
lahf
pop
scas
sbb
jge
call
out
rcl
retf
dec
leave
pop
xchg
outs
xchg
mov
or
cwde
icebp
fistp
sbb
div
sbb
lahf
pop
jae
ja
dec
sbb
neg
mov
sbb
and
jge
(bad)
aas
sbb
je
push
cdq
pusha
or
push
shr
ret
inc
inc
les
dec
push
in
mov
repnz
pop
cmps
mov
addr16
(bad)
xchg
sbb
(bad)
in
sbb
xchg
jmp
lahf
lahf
call
cmovl
call
push
sbb
and
sub
inc
rcr
dec
mov
add
es
cmc
add
or
pusha
jge
jo
loopne
dec
lahf
or
pop
pop
nop
call
adc
mov
pop
push
fwait
push
bound
jb
or
sbb
or
cmc
or
lahf
or
pop
int
sbb
jmp
sbb
dec
adc
loop
out
nop
pop
imul
jo
pop
icebp
pop
into
or
xchg
pop
mov
or
bound
pop
pop
sbb
push
dec
in
jo
sbb
lahf
bound
cdq
loop
sbb
sbb
in
icebp
cdq
test
dec
in
in
cld
dec
in
hlt
dec
repnz
pop
sbb
leave
loopne
dec
lahf
or
xchg
addr16
xchg
pop
push
inc
inc
push
retf
dec
xchg
jp
dec
dec
enter
mov
nop
loop
lock
(bad)
or
lahf
or
jo
bound
jo
pusha
sbb
lahf
enter
loopne
dec
lahf
or
adc
or
sub
dec
jo
bound
jo
pop
icebp
fwait
into
or
xchg
fiadd
fistp
out
pop
xor
sbb
icebp
nop
fprem1
or
jmp
sbb
or
idiv
stc
pop
lahf
pop
icebp
mov
push
pop
icebp
dec
iret
or
mov
rcl
pop
pop
nop
call
adc
pop
cmp
cmp
or
in
js
pop
loop
iret
jae
test
sbb
or
fisub
adc
jg
sbb
push
into
nop
loop
out
nop
pop
imul
push
scas
enter
or
cmc
or
jnp
sbb
cmc
or
(bad)
imul
loopne
dec
lahf
or
(bad)
loopne
push
lahf
or
fcmovu
push
inc
rcr
dec
pop
dec
dec
adc
adc
(bad)
lock
dec
cwde
ja
xchg
sbb
jecxz
adc
pop
dec
and
je
dec
pusha
jge
jb
call
dec
sbb
dec
sbb
div
stc
pop
lahf
loopne
dec
lahf
or
icebp
mov
scas
push
sbb
repnz
pop
sbb
sbb
adc
push
adc
icebp
xchg
mov
fcomp
jne
outs
pop
jno
jg
sbb
mov
sbb
sbb
adc
sahf
retf
arpl
inc
push
retf
dec
xchg
jp
dec
dec
enter
adc
adc
or
arpl
sbb
or
out
int
sbb
div
or
pusha
sub
fisttp
icebp
sti
int
sbb
push
call
dec
sbb
sbb
out
push
inc
rcr
call
xor
call
rcl
or
cdq
cli
in
cdq
cli
loopne
cdq
cli
in
sbb
add
pop
sbb
or
sbb
push
nop
pop
inc
sbb
outs
cdq
outs
ficomp
adc
xchg
fiadd
push
lods
fisttp
xchg
pop
pusha
jecxz
mov
push
sbb
adc
sbb
pop
sbb
in
addr16
or
gs
sbb
jecxz
cs
or
addr16
or
dec
adc
xchg
(bad)
repnz
jecxz
adc
or
lods
(bad)
push
lods
fisttp
sbb
mov
jge
cdq
repnz
call
sbb
add
ret
xchg
pop
xchg
pop
scas
sbb
xor
test
sbb
jmp
push
rcr
ret
xchg
push
ja
shl
(bad)
push
lods
shr
out
sti
push
dec
int
(bad)
xchg
pop
xchg
pop
scas
pop
cdq
or
dec
sbb
fcom
lods
retf
mov
or
dec
adc
xchg
retf
lods
int
xor
sahf
dec
std
xchg
(bad)
repnz
rcr
ret
inc
inc
(bad)
sets
or
or
sbb
mov
add
pop
cwde
mov
sets
mov
dec
mov
sets
mov
cwde
mov
cwde
mov
sets
mov
mov
stos
fisttp
mov
cmpxchg
pop
dec
mov
(bad)
add
sub
mov
push
sets
mov
jge
mov
cwde
mov
cwde
mov
mov
out
call
jle
lahf
or
sbb
cwde
mov
mov
sub
lahf
cwde
xchg
add
cwde
mov
sets
mov
cwde
call
ret
mov
sets
mov
cwde
call
ror
sets
or
sbb
fisttp
popf
xchg
fisttp
popa
add
fisttp
leave
sti
fisttp
pop
adc
dec
fidivr
cwde
mov
fisttp
mov
cwde
mov
sets
mov
jl
mov
cwde
mov
jno
mov
pop
cwde
mov
sets
mov
adc
in
push
cdq
mov
sets
add
scas
cwde
mov
sets
mov
mov
stos
fisttp
mov
(bad)
dec
mov
cwde
mov
jno
mov
pop
cwde
mov
sets
mov
adc
in
push
cdq
mov
sets
adc
dec
mov
scas
cwde
mov
sets
mov
imul
out
retf
fimul
in
call
push
adc
fiadd
pop
arpl
pop
and
sbb
sbb
push
pop
in
imul
repz
or
sbb
rcr
jmp
inc
xchg
pop
or
loop
jmp
xor
push
sbb
mul
lahf
mov
sbb
pause
jecxz
fld
xchg
(bad)
sub
sbb
ret
fmul
sbb
cli
hlt
nop
pop
ja
pop
out
or
es
jp
es
or
nop
mov
jecxz
push
or
sub
daa
jge
sbb
jmp
adc
shl
xor
pop
sbb
sbb
or
sbb
dec
jmp
ja
push
sbb
pop
nop
ret
dec
xchg
(bad)
push
lods
retf
retf
xchg
push
lahf
or
adc
dec
push
rcr
jmp
call
jge
sub
or
jl
dec
jmp
push
cmps
into
push
cwde
xchg
out
rcl
pop
pop
nop
call
xor
fisttp
mov
ja
lahf
or
dec
push
leave
out
lock
ret
xchg
leave
loopne
mov
nop
retf
fist
pop
mov
sbb
loope
sbb
pop
out
xchg
loopne
loop
neg
adc
popf
xor
jne
fstp
xchg
push
mov
and
sbb
fist
loop
dec
adc
js
out
mov
sub
pop
lahf
pop
icebp
fcmovnbe
or
jo
bound
xchg
outs
or
and
sbb
loopne
repnz
inc
sbb
sbb
add
push
dec
in
mov
sbb
adc
leave
cmps
fisttp
sub
sbb
in
shl
dec
sbb
(bad)
imul
fsub
je
mov
in
jl
pop
(bad)
push
retf
nop
jmp
movs
pop
lahf
cmp
cdq
(bad)
sbb
sbb
and
jp
repnz
sbb
push
dec
(bad)
inc
sbb
adc
lds
nop
mov
adc
push
xor
cwde
icebp
cmp
push
sbb
xor
and
out
pop
pop
scas
enter
adc
and
and
jo
pusha
mov
jmp
dec
bnd
sbb
sbb
adc
sbb
dec
in
icebp
mov
sbb
adc
leave
cmps
fisttp
sub
sbb
in
push
shl
dec
sbb
(bad)
imul
fsub
je
nop
jmp
movs
pop
lahf
cmp
cdq
(bad)
sbb
sbb
and
jp
xchg
push
dec
sbb
jge
or
sbb
nop
push
movs
sub
pop
lahf
pop
scas
dec
jo
sti
xchg
mov
xchg
pop
inc
mov
sbb
add
fwait
pop
sub
sbb
jge
cdq
repnz
adc
push
clc
sbb
pop
mov
sbb
loopne
out
neg
jo
bound
jo
bound
jb
or
pop
pusha
jge
repnz
inc
sbb
push
dec
std
fwait
ins
jo
sbb
loopne
in
call
icebp
addr16
or
in
in
icebp
add
or
dec
ja
push
sbb
add
sbb
sbb
rcr
push
in
cwde
test
dec
movs
inc
cmp
pusha
sbb
in
in
sbb
pop
lahf
mov
add
inc
dec
sbb
pop
loopne
push
lahf
or
dec
push
leave
out
lock
repnz
(bad)
xor
push
fadd
pop
mov
pop
push
repnz
(bad)
pusha
mul
in
dec
out
je
icebp
mov
or
adc
dec
inc
jnp
into
sbb
sbb
push
or
fdivr
or
pop
dec
out
adc
jle
fcomp
(bad)
in
or
dec
aam
sbb
jmp
in
into
pushf
sbb
mul
sub
inc
inc
lahf
or
iret
pusha
mov
inc
dec
sbb
pusha
pop
icebp
das
aam
sbb
bound
jo
bound
jo
pusha
sbb
lahf
dec
xchg
lahf
fs
out
iret
loopne
pop
lahf
or
in
jge
mov
iret
loopne
push
lahf
or
adc
dec
jb
adc
sbb
lock
pop
lahf
imul
scas
inc
sbb
push
clc
sbb
push
into
out
imul
in
retf
pop
sbb
dec
sbb
aad
pop
lahf
test
ja
push
sbb
mul
dec
not
(bad)
pop
lahf
test
test
dec
sbb
or
in
jns
pushf
repnz
mul
xchg
pop
neg
sub
jb
xlat
pop
sbb
vaddss
mul
dec
test
cmp
lahf
or
repz
pop
sbb
jne
pop
lahf
pusha
sbb
lahf
mov
adc
or
cdq
pop
pop
cwde
in
shl
push
inc
rcr
call
adc
outs
mov
nop
loop
lock
frstor
ins
scas
fisttp
nop
loop
out
nop
pop
imul
xchg
(bad)
dec
xchg
(bad)
dec
jo
pusha
sbb
or
pusha
jge
in
add
cmp
or
xchg
outs
mov
in
mov
xchg
(bad)
out
addr16
jae
cmc
or
outs
(bad)
imul
daa
push
sbb
or
in
hlt
icebp
out
or
inc
rcl
retf
dec
and
test
or
in
sbb
pop
fmul
sbb
pop
out
mov
ins
or
adc
das
lahf
or
cdq
pop
adc
pop
pop
nop
dec
pop
cmps
std
mov
(bad)
(bad)
xchg
(bad)
nop
(bad)
or
push
adc
dec
pusha
jge
in
add
outs
xchg
loopne
sbb
push
rcr
retf
dec
iret
pop
cmps
mov
addr16
xchg
pop
test
test
bound
jb
or
sbb
or
cmc
or
outs
xchg
imul
push
push
sbb
cmp
icebp
test
ins
add
or
sbb
or
jmp
adc
adc
daa
xlat
or
sub
or
pop
imul
and
lahf
cmp
pop
rol
dec
push
in
call
sbb
pop
xchg
pop
xchg
cwde
in
ror
pop
push
sbb
pop
test
pusha
add
popf
or
pusha
jge
in
add
out
fmul
sbb
pop
jl
sub
daa
xchg
ficom
dec
dec
cmc
or
pusha
jge
in
hlt
icebp
(bad)
fmul
sbb
pop
jl
in
hlt
icebp
fcmovnu
or
sub
add
jmp
adc
xchg
mov
or
push
dec
jmp
rcr
dec
pop
dec
dec
and
ficomp
sbb
lahf
or
ja
pop
sbb
or
xchg
(bad)
nop
loop
lock
fnstsw
hlt
int3
pop
lahf
xor
daa
sub
(bad)
pop
jo
pusha
ficomp
lahf
or
cmc
or
imul
pop
lahf
loopne
pop
lahf
or
fwait
push
add
outs
fwait
cmp
icebp
mov
sub
dec
dec
sbb
xlat
dec
sbb
push
dec
in
cdq
mov
std
test
sbb
rcr
int3
jg
or
shl
push
leave
xchg
pop
mov
xlat
pop
sbb
pop
adc
retf
dec
int3
pop
dec
xchg
jmp
out
dec
xchg
das
adc
in
pop
and
xchg
retf
lds
mov
lock
iret
sub
outs
(bad)
loopne
pop
lahf
or
xor
dec
or
sbb
push
lock
hlt
int
lahf
or
mov
add
outs
mov
jge
xchg
addr16
cdq
es
add
dec
or
lahf
or
sbb
ds
jmp
sbb
push
iret
cwde
pop
arpl
out
add
outs
(bad)
loopne
pop
lahf
or
xor
dec
out
rcr
loop
or
fcmovb
push
inc
rcr
call
or
inc
xchg
iret
pop
jmp
jmp
dec
ja
pop
sbb
iret
enter
adc
dec
icebp
fmul
sbb
je
push
lods
fwait
cmp
outs
xchg
pop
scas
push
lods
mov
imul
sub
loope
jp
je
mov
iret
pop
in
or
push
nop
mov
and
add
icebp
nop
int3
sbb
js
push
lock
mov
push
or
pop
xchg
imul
inc
dec
sbb
jae
sbb
neg
mov
loope
xor
inc
rcr
jmp
inc
sbb
lahf
loopne
pop
lahf
or
enter
arpl
fdivr
fwait
mov
sbb
cmc
in
neg
xchg
sbb
out
pusha
pop
out
xchg
loopne
jmp
ficom
pop
add
outs
cwde
cmp
repz
sbb
sbb
loope
popa
neg
outs
xchg
pop
icebp
mov
or
sub
or
lahf
or
outs
mov
push
pop
lahf
or
in
adc
sbb
mul
xchg
sbb
out
pusha
and
shl
out
cmp
in
mov
sbb
dec
icebp
dec
fisttp
sbb
pusha
mov
xchg
jmp
push
sahf
or
repnz
dec
sbb
push
clc
xor
push
into
xchg
pop
xchg
sbb
fisttp
loopne
pop
bound
xchg
or
out
pusha
or
dec
ja
aam
pusha
mov
adc
pop
(bad)
pop
lahf
imul
xchg
mov
adc
inc
(bad)
pop
lahf
imul
(bad)
dec
sbb
sbb
adc
cmps
dec
sbb
add
sbb
repnz
mov
cli
fisttp
out
arpl
out
ja
pop
sbb
clc
sub
push
into
icebp
pop
fimul
sbb
push
jmp
cdq
gs
pop
sbb
or
cmps
arpl
out
enter
fisttp
dec
repnz
sbb
sbb
or
inc
dec
sbb
add
sbb
repnz
mov
cli
fisttp
out
arpl
out
ja
pop
sbb
aas
(bad)
pop
lahf
imul
jnp
sbb
sbb
adc
aas
dec
sbb
add
sbb
repnz
mov
cli
fisttp
out
arpl
out
ja
pop
sbb
jae
sbb
or
pop
loop
icebp
jae
or
mov
push
jmp
dec
adc
in
popa
test
enter
lahf
or
neg
(bad)
pop
lahf
sbb
sub
pop
lahf
pop
icebp
push
fisttp
sbb
pop
push
sbb
ja
pop
sbb
or
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
pop
lahf
or
(bad)
out
arpl
out
ja
pop
sbb
jecxz
sbb
or
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
pop
lahf
or
(bad)
out
arpl
out
ja
pop
sbb
mov
adc
lahf
or
pop
loop
icebp
mov
cld
or
sbb
jmp
dec
adc
in
popa
test
enter
lahf
or
ja
or
cld
push
(bad)
aad
(bad)
not
sbb
or
out
dec
sbb
pusha
pop
icebp
ja
or
xchg
sbb
out
pusha
pop
out
pop
out
neg
(bad)
pop
lahf
pop
icebp
dec
fmul
sbb
fmul
sbb
push
jmp
cdq
gs
pop
sbb
or
cmps
arpl
out
enter
fisttp
dec
repnz
sbb
or
sbb
out
pusha
sbb
sbb
add
sbb
repnz
mov
cli
fisttp
out
arpl
out
ja
pop
sbb
ret
pop
sbb
or
pop
loop
jno
inc
dec
sbb
sub
out
pusha
loopne
pop
lahf
or
pop
lahf
or
sub
loopne
jne
jb
call
in
popa
div
(bad)
or
cdq
pop
add
fdiv
lahf
(bad)
pop
lahf
imul
(bad)
in
popa
test
iret
loopne
pop
lahf
or
pop
lahf
or
sub
loopne
jne
jb
(bad)
pop
sbb
in
popa
div
fisttp
sbb
fisttp
sbb
push
jmp
cdq
gs
stc
pop
lahf
imul
(bad)
dec
sbb
sbb
adc
mov
sbb
add
sbb
repnz
mov
or
sub
xchg
and
out
pusha
pop
jno
inc
dec
sbb
neg
lahf
mov
or
popf
sbb
mul
in
loope
sbb
or
in
mov
dec
in
or
cdq
cmp
out
pusha
or
gs
fucom
(bad)
neg
lahf
pop
mul
in
(bad)
loope
popa
imul
adc
fucom
(bad)
neg
cmps
pop
mul
in
mov
mov
sub
fdivr
pop
nop
loop
adc
sbb
inc
out
clc
pop
loop
xchg
or
cdq
pop
imul
pusha
pop
jno
inc
dec
sbb
pusha
pop
icebp
jae
or
cdq
pop
sbb
xor
or
in
jns
pushf
mov
pop
neg
and
out
pusha
mov
sbb
mul
in
cld
out
pusha
imul
lea
sbb
dec
xchg
sbb
out
pusha
pop
jno
inc
dec
sbb
pop
pop
sbb
neg
lahf
mov
sbb
mov
pop
loop
jno
inc
dec
sbb
sub
out
pusha
loopne
pop
lahf
or
pop
lahf
or
sub
loopne
jne
jb
(bad)
pop
sbb
in
popa
div
jecxz
or
cdq
pop
add
fdiv
pop
sbb
or
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
pop
lahf
or
fisub
out
lahf
or
in
cld
out
pusha
sbb
int3
out
pusha
pop
fwait
test
out
sbb
out
pusha
sub
fisub
out
pop
loope
sbb
sbb
pop
mov
sbb
sbb
lahf
sub
xchg
ficom
sbb
sbb
sbb
out
pusha
pop
call
lock
pusha
sbb
inc
dec
sbb
pusha
pop
icebp
add
or
cdq
pop
add
xchg
imul
in
shl
pop
xor
sbb
icebp
nop
(bad)
and
pop
test
nop
mov
out
sbb
dec
repnz
(bad)
in
in
test
sbb
sbb
out
imul
jmp
in
(bad)
in
popa
test
iret
loopne
and
xchg
lahf
and
lahf
or
sub
loopne
jne
jb
(bad)
pop
sbb
in
popa
div
mov
pop
add
fdiv
sbb
or
pop
loop
jno
inc
dec
sbb
sub
out
pusha
loopne
and
xchg
loopne
and
lahf
or
sub
loopne
jne
jb
call
in
popa
div
dec
mov
add
scas
outs
mul
in
retf
and
lahf
mov
pop
mov
sbb
sbb
out
pusha
test
pusha
mov
dec
repnz
out
sbb
adc
in
add
adc
pusha
pusha
and
fisttp
out
arpl
out
ja
sbb
retf
daa
sbb
or
pop
loop
jno
inc
dec
sbb
sub
out
pusha
loopne
and
or
and
or
sub
loopne
jne
jb
(bad)
pop
sbb
in
popa
div
cmps
mov
add
lahf
pop
mul
in
into
icebp
ja
or
mov
push
jmp
cdq
gs
stc
pop
lahf
imul
adc
sbb
sbb
adc
(bad)
pop
sbb
in
popa
div
arpl
add
das
mov
or
sbb
jmp
cdq
gs
daa
sbb
or
cmps
arpl
out
enter
fisttp
dec
repnz
int3
or
lahf
sbb
add
sbb
repnz
mov
(bad)
fisttp
out
arpl
out
ja
daa
sbb
inc
xor
or
mov
push
jmp
cdq
gs
(bad)
pop
lahf
imul
imul
repnz
xor
sbb
lahf
xchg
out
jecxz
repnz
mov
cli
fisttp
out
arpl
out
ja
and
lahf
mov
adc
and
lahf
mov
sbb
mov
pop
loop
icebp
arpl
or
sbb
jmp
dec
adc
in
popa
test
enter
lahf
or
(bad)
fisttp
out
arpl
out
ja
and
lahf
mov
adc
clc
xor
push
into
icebp
daa
mov
or
sbb
jmp
cdq
gs
stc
pop
lahf
imul
ret
xor
adc
(bad)
pop
sbb
in
popa
div
push
mov
add
pop
mov
or
sbb
jmp
cdq
gs
stc
pop
lahf
imul
mov
int3
adc
(bad)
pop
sbb
in
popa
div
or
add
sbb
and
sbb
mov
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
es
or
les
out
adc
in
popa
test
iret
loopne
es
or
es
or
sub
loopne
jne
jb
call
in
popa
div
mov
pop
add
inc
dec
sbb
sub
out
pusha
loopne
es
or
es
or
sub
loopne
jne
jb
call
in
popa
div
ja
or
cdq
pop
add
in
jns
pushf
fisub
out
pop
loopne
es
or
sub
int
iret
or
and
out
pusha
pop
jno
inc
dec
sbb
pop
and
or
and
lahf
mov
sbb
mov
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
es
or
(bad)
fisttp
out
arpl
out
ja
and
lahf
mov
adc
and
lahf
mov
sbb
mov
pop
loop
jno
jg
sbb
sub
out
pusha
loopne
and
mov
imul
xor
sbb
add
sbb
repnz
mov
or
sub
xchg
and
out
pusha
pop
jno
inc
dec
sbb
jg
sbb
fadd
pop
lahf
imul
pop
xor
sbb
adc
bound
jo
bound
jo
pusha
sbb
lahf
dec
out
xchg
loopne
and
mul
in
into
and
out
arpl
out
ja
and
lahf
bound
xchg
and
out
pusha
pop
dec
in
hlt
out
pusha
imul
push
sbb
pusha
mov
icebp
jecxz
or
in
hlt
out
pusha
loopne
sub
sahf
clc
nop
fmul
loopne
sub
jae
in
rcl
pop
pop
nop
call
in
sbb
or
push
lock
std
push
(bad)
loope
pusha
not
sbb
lods
(bad)
dec
jb
aad
sbb
(bad)
out
pusha
test
push
lock
push
iret
jae
test
out
test
out
jmp
pop
in
sbb
imul
sbb
aad
sbb
or
sbb
loopne
jmp
sbb
aam
sbb
jecxz
pop
lahf
pusha
sbb
lahf
mov
xchg
outs
mul
cdq
pop
sub
sbb
rcr
push
in
cwde
test
sbb
int3
pop
dec
movs
xor
mov
loop
iret
call
sbb
sbb
sahf
sbb
call
xchg
(bad)
mul
xchg
addr16
xchg
pop
cmp
xchg
fiadd
nop
fcomp
sbb
ja
sbb
pop
sbb
fld
out
ja
sbb
mul
in
test
in
loopne
sub
xchg
adc
add
retf
or
pop
push
popf
and
sahf
lock
(bad)
loopne
sub
out
out
pusha
mov
icebp
jmp
or
xchg
sbb
pusha
imul
jg
sbb
adc
adc
pusha
test
call
xchg
retf
add
xchg
retf
or
pop
push
popf
xchg
out
neg
sbb
or
pop
lahf
loopne
das
lahf
or
in
push
pop
lahf
or
cmc
or
iret
loopne
and
or
dec
ja
and
lahf
pusha
sbb
lahf
sub
out
iret
pusha
mov
fisttp
jno
inc
dec
sbb
or
call
fnstsw
xchg
enter
loopne
das
lahf
or
fidiv
sbb
lahf
loopne
in
div
sahf
or
xchg
sbb
out
pusha
pop
xchg
lahf
sub
out
iret
loopne
cs
or
scas
or
out
pusha
mov
out
adc
out
pusha
mov
out
pop
cmc
out
pusha
mov
dec
xchg
sbb
push
ins
mul
cdq
pop
sub
in
enter
loopne
das
lahf
or
fidiv
sbb
lahf
pusha
mov
lahf
arpl
out
iret
loopne
and
lock
fst
lea
xchg
sbb
out
pusha
pop
icebp
mov
out
in
lea
pop
cmc
or
iret
loopne
and
and
fstp
mov
in
dec
sbb
lahf
iret
pushf
(bad)
popa
mul
sbb
(bad)
icebp
in
neg
sbb
sbb
outs
ficomp
sahf
or
sbb
lea
repnz
out
mov
dec
adc
dec
jo
bound
jo
bound
jo
bound
xchg
sbb
out
pusha
pop
jae
ja
sub
adc
lahf
imul
daa
cmp
sbb
lock
push
iret
out
or
out
neg
(bad)
pop
lahf
pusha
fs
fisttp
xchg
lahf
arpl
out
iret
loopne
sub
(bad)
into
pushf
imul
cwde
in
xchg
push
sbb
adc
dec
jb
aam
sbb
sub
lahf
sbb
jb
or
sbb
sub
imul
push
pusha
mul
shr
jno
out
sbb
sar
sbb
sbb
pusha
sbb
lahf
or
and
or
sbb
(bad)
in
pusha
test
lahf
bound
jb
aam
sbb
(bad)
in
pusha
test
sbb
adc
sbb
sub
out
lahf
jecxz
cdq
cmp
fld
add
out
lahf
mov
sub
in
pusha
pop
icebp
inc
stos
or
mov
push
cmc
out
push
iret
dec
repnz
cmp
sbb
or
scas
cmp
out
ja
sub
lahf
imul
cmp
sbb
adc
test
pusha
div
adc
lahf
(bad)
(bad)
xchg
sbb
pusha
sbb
fcomp
mov
or
pop
dec
xchg
ret
pushf
xchg
or
addr16
xchg
pop
imul
(bad)
sub
lahf
sbb
xchg
addr16
xchg
pop
imul
mov
sbb
pop
in
jmp
xchg
pop
outs
nop
dec
imul
xchg
pop
outs
nop
dec
imul
pop
popa
pop
scas
dec
arpl
leave
adc
dec
pop
scas
dec
imul
sbb
sub
lahf
sbb
sbb
adc
adc
outs
sbb
fwait
test
sub
das
lahf
or
adc
clc
call
or
in
add
lods
(bad)
xchg
pop
cdq
or
sub
lahf
and
in
sbb
lods
(bad)
xchg
pop
cdq
or
xchg
pop
(bad)
xchg
cmp
sbb
pop
scas
pop
popa
test
call
adc
fistp
sbb
jecxz
sbb
bound
dec
imul
dec
pop
lahf
bound
jo
loopne
sub
out
ds
or
leave
loopne
sub
pop
dec
repnz
cmp
sbb
loopne
sub
push
inc
inc
push
retf
dec
xchg
jp
push
add
scas
or
dec
leave
pop
xchg
inc
xchg
mov
pop
sub
mov
nop
frstor
adc
lahf
(bad)
(bad)
xchg
sbb
(bad)
sbb
sbb
mul
dec
adc
dec
jb
aam
sbb
sbb
pop
popf
mov
dec
bndldx
call
sub
adc
mov
out
xchg
loopne
sub
out
nop
lahf
sub
out
push
iret
sub
(bad)
inc
fstp
mov
in
dec
push
sbb
mul
dec
adc
dec
dec
ja
sbb
and
dec
pusha
mov
icebp
das
stos
or
cdq
pop
add
(bad)
adc
scas
push
call
adc
sbb
mov
and
xor
push
rcr
retf
mov
ja
sbb
push
adc
into
cmp
or
fmul
pusha
sbb
inc
scas
or
xchg
inc
mov
in
mov
xchg
pop
bound
xchg
inc
or
dec
ja
movs
in
mov
adc
pop
(bad)
pop
lahf
pop
icebp
pop
stos
or
cdq
pop
add
sbb
clc
xor
push
into
jno
inc
dec
sbb
pusha
pop
icebp
sbb
add
sti
lods
or
mov
push
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
sub
lahf
mov
sbb
mov
pop
loop
icebp
mov
or
mov
push
jmp
dec
adc
dec
jb
aam
sbb
mov
cli
pusha
test
sbb
or
pop
cmp
sbb
add
sbb
repnz
mov
cli
fisttp
xchg
lahf
lahf
call
xchg
lahf
or
xor
fbstp
xlat
pop
sbb
lea
cli
pusha
test
sbb
adc
fistp
sbb
add
sbb
repnz
mov
cli
fisttp
xchg
lahf
lahf
call
inc
sub
loopne
sub
or
sub
loopne
jne
repnz
cmp
sbb
imul
lahf
xchg
out
jecxz
test
not
pop
lahf
test
ja
sub
lahf
mov
or
or
xlat
pop
sbb
lea
cli
pusha
test
adc
dec
repnz
cmp
sbb
or
xchg
sbb
(bad)
in
sbb
sbb
add
sbb
repnz
mov
cli
fisttp
xchg
lahf
lahf
call
xlat
sub
pusha
adc
fisttp
xchg
lahf
lahf
call
mov
ficom
or
sub
loopne
jne
jb
call
sbb
pusha
test
sbb
adc
xlat
pop
sbb
lea
cli
pusha
test
sbb
adc
sbb
(bad)
in
sbb
sbb
add
sbb
repnz
mov
pop
sub
or
sub
xchg
and
stc
in
pop
jno
inc
dec
sbb
pusha
pop
icebp
shrd
sbb
inc
dec
sbb
pusha
pop
icebp
aas
lods
or
cdq
pop
add
sti
scas
or
mov
push
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
inc
lds
test
ja
sub
lahf
mov
adc
clc
sub
push
into
icebp
mov
xchg
or
sbb
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
adc
pop
lahf
test
ja
sub
lahf
mov
adc
sub
lahf
mov
sbb
mov
pop
loop
jno
jg
sbb
pusha
pop
icebp
lahf
scas
or
cdq
pop
add
sbb
adc
in
pop
jno
inc
dec
sbb
pusha
pop
icebp
daa
scas
or
cdq
pop
sbb
pop
scas
or
mov
push
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
or
pop
lahf
test
ja
sub
lahf
mov
adc
sub
lahf
mov
sbb
mov
pop
loop
jno
jg
sbb
pusha
pop
icebp
sbb
add
in
jns
pushf
test
xchg
pop
loopne
sub
or
sub
int
iret
or
and
stc
in
pop
jno
inc
dec
sbb
pusha
pop
icebp
xchg
sbb
scas
or
mov
push
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
(bad)
les
test
ja
sub
lahf
mov
adc
out
pop
lahf
or
daa
scas
or
mov
push
jmp
cdq
gs
stc
pop
lahf
test
ja
sub
lahf
mov
adc
sub
lahf
mov
sbb
mov
pop
loop
icebp
pop
scas
or
mov
push
jmp
dec
adc
dec
jb
aam
sbb
mov
cli
pusha
test
sbb
or
aad
sbb
lea
cli
pusha
test
sbb
adc
bound
jo
bound
jo
pusha
sbb
lahf
dec
dec
repnz
and
sbb
(bad)
in
pusha
neg
sbb
lea
cli
pusha
test
cmc
or
enter
lahf
call
lods
out
mul
bnd
sbb
pusha
mov
icebp
addr16
sbb
pop
dec
repnz
clc
xor
push
into
inc
inc
(bad)
push
in
cwde
neg
or
sbb
pop
dec
movs
jno
loop
push
lock
std
push
lea
fstp
sbb
imul
dec
repnz
and
sbb
sbb
pusha
and
call
push
xor
daa
sbb
ja
in
in
mov
retf
stos
or
jb
ficomp
ja
xor
lahf
sbb
sbb
(bad)
or
sbb
lea
jb
aam
sbb
mov
sbb
lahf
mov
cli
jp
out
pop
sub
ficom
or
sahf
or
xchg
sbb
out
pusha
pop
xchg
lahf
sub
out
iret
loopne
xor
lock
frstor
mov
xchg
sbb
xor
out
pop
add
ficom
or
inc
dec
sbb
pusha
pop
icebp
mov
or
xchg
sbb
lahf
arpl
out
iret
loopne
xor
or
in
jp
out
sbb
loope
addr16
xchg
sbb
icebp
cmpxchg
sbb
mov
sbb
pop
lea
sbb
mul
in
or
sbb
sbb
outs
ficomp
sahf
or
sbb
lea
repnz
out
mov
dec
adc
dec
jo
bound
jo
bound
jo
bound
xchg
sbb
out
pusha
pop
jae
ja
xor
lahf
add
adc
lahf
imul
pop
and
sbb
lock
push
iret
out
aas
cmc
out
neg
(bad)
pop
lahf
pusha
fs
fisttp
xchg
lahf
arpl
out
iret
loopne
aaa
lahf
or
gs
sbb
fucomp
xor
sbb
(bad)
in
pusha
test
ja
xor
lahf
sbb
jb
or
sbb
xor
lahf
mov
adc
mul
in
nop
mov
sbb
or
repnz
and
sbb
lock
push
iret
jno
sahf
or
xchg
sbb
dec
repnz
and
sbb
or
inc
dec
sbb
pusha
pop
icebp
dec
sub
out
pop
add
in
or
adc
lahf
test
int3
loopne
in
pusha
neg
adc
lahf
bound
in
pushf
in
pusha
test
ja
xor
lahf
mov
gs
or
xchg
sbb
scas
or
out
ja
into
in
sbb
in
loopne
xor
dec
sbb
and
sbb
pusha
adc
fisttp
dec
repnz
sbb
or
jb
aam
sbb
xor
lahf
add
xor
pop
or
dec
pusha
mov
icebp
sub
mul
cdq
pop
add
add
pusha
neg
in
pushf
in
pusha
loopne
ret
call
or
dec
ja
xor
lahf
iret
pushf
xchg
out
lahf
or
xchg
sbb
shl
or
xchg
pop
bound
in
lods
in
pusha
loopne
xor
cmc
out
ja
xor
lahf
sbb
mov
adc
or
inc
rcl
fwait
or
mov
or
pop
dec
xchg
ret
in
cli
sub
pop
test
pop
icebp
dec
mov
sbb
xchg
loopne
xor
test
(bad)
pop
jae
ja
xor
lahf
sbb
cmp
ror
sbb
js
pop
out
push
iret
dec
repnz
jge
xchg
retf
push
sbb
(bad)
sbb
or
xchg
(bad)
dec
jo
pop
jno
ror
lahf
bound
repnz
and
sbb
into
jae
leave
loopne
xor
out
nop
pop
outs
sbb
dec
ja
sbb
or
xchg
(bad)
inc
inc
(bad)
push
in
mov
repnz
sbb
leave
pop
cmps
ins
fstp
fwait
pop
add
sbb
add
out
or
xchg
pop
and
adc
sbb
jb
pop
sbb
adc
dec
dec
ja
xor
lahf
bound
in
add
lahf
sahf
clc
out
iret
loopne
stos
pusha
neg
in
or
push
clc
repnz
inc
jl
or
leave
loopne
xor
cmps
inc
inc
push
retf
dec
xchg
jp
cmc
push
enter
or
cwde
in
xor
sbb
stc
iret
pop
in
or
js
mov
pop
(bad)
fisttp
xchg
pop
imul
mov
sbb
lahf
test
bound
jb
or
sbb
cdq
mov
mov
sbb
pop
or
pusha
rcr
adc
dec
ja
xor
lahf
mov
add
dec
in
dec
cmc
or
sahf
or
in
and
pop
lahf
loopne
xor
not
lods
(bad)
call
retf
dec
xchg
jp
cmc
push
leave
pop
cmps
outs
movs
adc
jbe
sbb
push
sbb
jo
bound
jo
bound
jo
bound
jo
pusha
mov
lahf
or
cmc
or
cmc
sbb
daa
mov
sbb
lahf
or
cld
push
dec
loope
pop
bound
dec
cmc
cmp
das
sbb
xor
lahf
bound
dec
cmc
cmp
das
ja
pop
sbb
xor
lahf
bound
dec
cmc
cmp
das
pop
test
xor
lahf
bound
dec
cmc
cmp
das
mov
pop
sbb
xor
lahf
bound
dec
cmc
cmp
das
sbb
sbb
or
jo
pop
jae
pusha
cmp
icebp
and
pop
jae
pusha
cmp
icebp
xor
pop
jae
pusha
cmp
icebp
add
pop
jae
pusha
cmp
icebp
adc
cmp
xchg
pop
bound
dec
cmc
cmp
das
scas
xchg
pop
sbb
sbb
cmp
das
outs
xchg
pop
sbb
sbb
cmp
das
or
sbb
cmp
das
pop
stos
pop
sbb
sbb
or
cld
push
dec
in
xchg
pop
push
inc
rcr
fld
pop
adc
lahf
(bad)
in
stos
loopne
pop
lahf
loopne
cmp
or
jb
(bad)
pop
sbb
hlt
out
ja
pop
sbb
sbb
mov
cmp
add
jb
(bad)
pop
sbb
hlt
out
pop
test
sbb
or
jo
imul
add
repnz
cmp
xchg
pusha
or
pusha
cmp
icebp
idiv
imul
or
repnz
sbb
cmp
mov
pusha
or
pusha
cmp
icebp
sar
imul
add
repnz
sbb
cmp
mov
popf
fisttp
jae
pusha
cmp
icebp
mov
arpl
sub
add
repnz
sbb
cmp
sbb
or
pusha
cmp
icebp
fwait
mov
cmp
xchg
pop
(bad)
in
stos
mov
cmp
or
jb
(bad)
pop
sbb
hlt
out
sbb
aas
sbb
in
call
jno
pop
push
out
cmp
dec
sbb
jmp
xchg
pop
pusha
cmc
rcr
dec
repnz
out
sbb
or
cmc
or
out
sbb
push
call
lahf
or
repz
out
stos
xchg
pop
sbb
or
(bad)
xor
pop
xchg
pop
and
iret
bound
jo
pusha
sbb
pop
pop
jno
inc
dec
sbb
rcr
test
daa
cmp
or
jo
imul
add
jo
pop
jae
adc
loope
(bad)
call
sbb
sbb
rcr
not
ret
bound
repnz
sbb
cmp
xchg
and
jo
imul
add
jo
imul
aas
dec
sbb
or
sbb
call
sbb
adc
xlat
pop
sbb
rol
pop
lahf
bound
repnz
sub
mov
jo
bound
jo
bound
sahf
bound
jo
bound
jb
or
sbb
or
cmc
add
ja
aas
sbb
pop
jae
pusha
cmp
icebp
jg
or
jo
imul
add
jo
imul
aas
dec
sbb
pusha
das
sbb
and
lahf
or
repz
not
ret
bound
repnz
sub
mov
sub
or
jo
imul
add
jo
imul
aas
dec
sbb
pusha
cmp
lahf
or
cmc
and
lahf
or
xchg
pop
sbb
rol
pop
lahf
bound
repnz
pop
lahf
bound
in
cmp
pop
lahf
bound
in
dec
mov
jb
or
sbb
test
sbb
or
dec
test
ret
rcr
jae
ja
cmp
test
or
pusha
cmp
jae
pusha
cmp
jae
div
sbb
or
test
xchg
rcr
jno
inc
dec
sbb
loopne
ds
or
jo
imul
add
jo
imul
aas
dec
sbb
bound
xor
sbb
sbb
xlat
pop
sbb
(bad)
ret
pop
lahf
bound
bnd
sbb
cmp
test
mov
nop
mov
rcr
cmc
or
sahf
or
dec
ja
cmp
rcr
jae
test
repnz
repnz
cmc
or
das
stos
xchg
pop
sbb
or
das
jmp
sbb
lahf
bound
jb
or
sbb
jb
sbb
xlat
pop
sbb
(bad)
ret
pop
lahf
bound
repnz
sub
sbb
mov
inc
fmul
sbb
imul
add
jo
imul
aas
dec
sbb
or
sbb
xor
mov
or
jb
or
sbb
or
call
jno
inc
dec
sbb
loopne
cmp
dec
sbb
mov
out
cmc
or
das
stos
xchg
pop
sbb
or
das
fld
jae
imul
sbb
lahf
pusha
jno
lahf
or
lahf
or
hlt
rcr
not
ret
bound
repnz
sbb
cmp
mov
in
js
pop
not
iret
jae
pusha
cmp
jae
pusha
cmp
jae
test
jno
sahf
or
jb
or
dec
neg
pop
lahf
pusha
ret
rcr
jae
ja
cmp
lahf
stos
ins
mov
pusha
cmp
jae
pusha
cmp
jae
cmc
outs
jno
sahf
or
jb
or
sbb
or
sbb
pusha
pop
rcr
jno
inc
dec
sbb
loopne
cmp
dec
sbb
imul
add
jo
imul
aas
dec
sbb
pusha
in
lahf
or
sahf
or
jo
pusha
sbb
lahf
pop
jno
inc
dec
sbb
rcr
cmc
or
iret
mov
xchg
pop
sbb
or
das
stos
xchg
pop
sbb
or
das
fld
jae
test
sbb
or
cdq
rcr
not
ret
bound
repnz
sbb
cmp
mov
in
cmp
pop
lahf
bound
in
push
add
or
sbb
cdq
sbb
lahf
bound
dec
not
(bad)
pop
lahf
pusha
sbb
fisttp
jno
popf
or
repnz
sbb
cmp
mov
in
cmp
pop
lahf
bound
in
push
add
or
sbb
retf
sbb
lahf
bound
dec
neg
sbb
fisttp
jno
popf
or
repnz
adc
pop
lahf
and
jo
imul
add
jo
imul
aas
dec
sbb
bound
jb
or
sbb
sbb
sbb
xlat
pop
sbb
or
pop
lahf
pusha
sbb
lahf
or
(bad)
mov
xchg
pop
sbb
or
das
stos
xchg
pop
sbb
or
das
jmp
jae
idiv
sbb
lahf
bound
dec
not
(bad)
pop
lahf
pusha
sbb
fisttp
jno
popf
or
repnz
sbb
cmp
xchg
bound
in
cmp
pop
lahf
bound
in
dec
mov
jb
or
sbb
mov
pop
jb
or
pop
lahf
pusha
jecxz
fisttp
jae
ja
cmp
lahf
stos
cmp
addr16
xchg
pop
loopne
jecxz
test
jp
cmc
add
pop
cmps
sub
addr16
xchg
pop
pusha
in
rcr
out
xchg
loopne
in
pusha
not
pop
lahf
pop
icebp
push
push
sbb
xchg
addr16
xchg
pop
bound
in
add
cmp
pop
dec
repnz
sub
sbb
or
das
stos
xchg
pop
sbb
or
(bad)
xor
pop
xchg
pop
and
iret
bound
jo
pusha
sbb
pop
pop
jno
inc
dec
sbb
rcr
test
retf
cmp
dec
sbb
imul
add
jo
pop
jae
adc
loope
(bad)
call
sbb
sbb
rcr
not
ret
bound
repnz
sbb
cmp
xchg
mov
ja
or
jo
imul
add
jo
imul
aas
dec
sbb
or
sbb
call
sbb
adc
xlat
pop
sbb
rol
pop
lahf
bound
repnz
sub
sbb
mov
jo
bound
jo
bound
sahf
bound
jo
bound
jb
or
sbb
or
cmc
add
ja
cmp
lahf
sbb
sub
sbb
jecxz
or
jo
imul
add
jo
imul
aas
dec
sbb
bound
mov
jb
or
pop
lahf
pusha
pushf
rcr
jae
ja
push
sbb
or
sbb
jb
pop
lahf
bound
jb
or
sbb
loopne
add
inc
dec
sbb
pusha
pop
sbb
xchg
pop
sbb
push
sbb
dec
sbb
jmp
push
sahf
or
in
loopne
pop
lahf
loopne
add
cmc
or
test
repnz
repnz
pop
sbb
cmc
or
das
stos
xchg
pop
sbb
or
das
jmp
sbb
lahf
bound
jo
bound
pushf
or
pop
lahf
pusha
pushf
rcr
jae
ja
push
sbb
or
(bad)
or
das
stos
xchg
pop
sbb
or
das
jmp
sbb
lahf
bound
sbb
mov
inc
xlat
pop
sbb
(bad)
ret
pop
lahf
bound
xacquire
sbb
cmp
xchg
loopne
out
pusha
div
pusha
cmp
jae
pusha
cmp
jae
test
sbb
test
dec
rcr
jno
inc
dec
sbb
loopne
add
or
jo
imul
add
jo
imul
aas
dec
sbb
bound
sbb
sbb
test
sbb
lahf
pop
jno
inc
dec
sbb
rcr
cmc
or
mov
scas
xchg
pop
sbb
loope
sbb
in
(bad)
or
das
stos
xchg
pop
sbb
or
das
fld
jno
lahf
or
jb
or
sbb
ins
jno
lahf
or
mov
pop
sbb
rol
pop
lahf
bound
bnd
push
sbb
cmp
test
bound
in
cmp
pop
lahf
bound
in
dec
mov
jo
pusha
mov
mov
lahf
or
dec
test
ret
rcr
jae
ja
pop
sbb
or
pusha
cmp
jae
pusha
cmp
jae
imul
sbb
lahf
pusha
call
lahf
or
test
addr16
fisttp
jno
inc
dec
sbb
loopne
pop
lahf
or
jo
imul
add
jo
imul
aas
dec
sbb
pusha
in
lahf
or
lahf
or
jo
pusha
sbb
lahf
pop
jno
inc
dec
sbb
rcr
cmc
or
stos
or
mov
cmc
or
das
stos
xchg
pop
sbb
or
das
jmp
jno
lahf
or
jo
bound
dec
neg
sbb
fisttp
jno
popf
or
repnz
sbb
cmp
mov
mov
cdq
out
sbb
imul
add
jo
imul
aas
dec
sbb
bound
jo
bound
dec
not
(bad)
pop
lahf
pusha
sbb
fisttp
jno
popf
or
repnz
and
in
cmp
pop
lahf
bound
in
push
add
bound
mov
sbb
pop
jno
inc
dec
sbb
rcr
test
pop
pop
lahf
or
jo
imul
add
jo
imul
aas
dec
sbb
pusha
sbb
or
sahf
or
jo
pusha
sbb
pop
pop
jno
inc
dec
sbb
rcr
cmc
or
xlat
or
mov
ja
jmp
or
std
push
dec
icebp
xchg
pop
loopne
out
pusha
test
jp
cmc
add
pop
dec
movs
mov
lock
std
push
dec
cmc
xchg
pop
bound
jb
or
sbb
or
cmc
or
lahf
or
xchg
mov
in
mov
sbb
loopne
add
loopne
add
or
pop
imul
lahf
and
repnz
iret
xchg
pop
outs
pop
xchg
pop
imul
arpl
outs
(bad)
pusha
and
fisttp
jno
lahf
or
in
int3
add
ret
pop
cmc
or
outs
arpl
ret
fisttp
jno
inc
dec
sbb
jmp
cld
pusha
neg
loop
enter
or
push
adc
dec
pusha
jge
jb
mov
sbb
pop
loopne
mov
xchg
fiadd
push
rcr
retf
fwait
jae
sbb
lahf
pop
dec
movs
sub
pop
jle
clc
sbb
push
into
cwde
hlt
sub
sbb
imul
pushf
sbb
out
ja
add
lahf
loopne
push
lahf
or
sub
leave
pop
push
out
loop
sbb
pusha
movs
stos
fisttp
xchg
lahf
lahf
mul
in
loopne
add
clc
nop
fcomp
jne
sbb
sbb
das
dec
sbb
pusha
pop
icebp
add
neg
outs
mov
stos
fisttp
xchg
lahf
lahf
mul
in
loopne
add
or
or
sbb
pop
lahf
test
ja
push
sbb
sbb
outs
mov
stos
fisttp
xchg
lahf
lahf
mul
in
loopne
or
pusha
push
ins
or
inc
test
lahf
test
ja
push
sbb
jge
jb
mov
sbb
pusha
test
pop
jne
adc
sbb
cs
sbb
pusha
pop
icebp
xchg
mov
sbb
pop
mov
jge
jb
mov
sbb
pusha
test
pop
jne
adc
sbb
cs
sbb
pusha
pop
icebp
dec
mov
sbb
mov
test
or
iret
loopne
or
pusha
add
or
sub
sbb
out
ja
push
sbb
jge
jb
mov
sbb
pusha
test
push
clc
out
cld
push
(bad)
in
pusha
not
adc
sbb
sub
or
in
pop
icebp
test
rcr
test
sbb
out
test
cmc
(bad)
pusha
div
inc
dec
sbb
mov
xchg
loopne
out
div
mov
adc
sbb
xor
sbb
out
pusha
sbb
in
push
rcr
fwait
or
pop
dec
dec
adc
adc
push
lock
push
iret
nop
in
leave
loopne
add
or
ja
mul
pusha
mov
adc
or
retf
adc
sbb
push
inc
inc
pop
or
dec
push
in
cwde
mul
pop
dec
movs
cdq
xor
push
(bad)
ins
jbe
or
sbb
jp
pop
lahf
test
ja
bndldx
or
sub
(bad)
ins
lock
pop
mov
loop
neg
outs
mov
test
or
iret
loopne
setg
cdq
cmps
ins
lock
popf
jge
jb
mov
hlt
in
pusha
test
pop
mov
loop
neg
outs
mov
test
or
iret
loopne
setg
mov
in
jns
pushf
(bad)
push
mov
jmp
xchg
sbb
out
in
pop
icebp
mov
and
loope
pusha
or
stos
pop
lahf
test
ja
or
lahf
mov
jmp
xchg
sbb
out
in
pop
icebp
ja
or
call
ins
or
inc
stos
pop
lahf
test
ja
or
lahf
sub
call
ins
or
fs
pop
lahf
test
ja
or
lahf
mov
jmp
xchg
sbb
out
in
pop
icebp
add
sti
loope
pusha
add
mov
pushf
imul
out
ja
or
jmp
jmp
xchg
sbb
out
in
pop
icebp
dec
(bad)
call
pusha
sbb
in
add
or
loopne
pop
lahf
test
ja
or
jmp
jmp
xchg
sbb
out
in
pop
icebp
mov
and
loope
pusha
push
ins
or
sub
imul
out
ja
or
mov
jb
out
iret
loopne
mul
nop
jmp
out
push
into
jno
aas
dec
sbb
mov
cmc
in
mov
or
(bad)
icebp
in
pusha
neg
in
jl
cdq
and
out
in
or
sahf
movs
or
sbb
out
adc
out
nop
lahf
inc
jmp
in
into
xor
push
into
sub
cmc
or
aas
dec
sbb
fmulp
out
sbb
adc
pusha
add
adc
lahf
loope
sbb
hlt
out
lahf
pop
popf
rcr
hlt
in
pusha
xor
lahf
movs
or
sbb
mov
out
mul
adc
lahf
into
pushf
in
mul
sbb
inc
sub
xchg
sbb
out
in
sbb
in
pop
jno
inc
dec
sbb
pusha
pop
icebp
fwait
xchg
sbb
addr16
lahf
jl
repnz
sbb
and
pop
nop
fld
fsub
cwde
leave
loopne
mov
nop
retf
ficomp
mov
loop
not
popf
ror
sbb
sbb
jns
fimul
sbb
pusha
mov
inc
dec
sbb
pusha
pop
icebp
ja
and
xchg
pop
pusha
mov
inc
dec
sbb
pusha
pop
icebp
jecxz
or
cdq
pop
adc
push
test
pushf
out
mul
dec
ja
or
inc
lahf
or
cld
push
(bad)
leave
in
pusha
not
loop
test
adc
dec
repnz
sbb
test
pushf
out
mul
dec
ja
push
sbb
(bad)
in
pusha
test
adc
call
lock
iret
pusha
jecxz
fisttp
xchg
lahf
arpl
out
iret
loopne
or
(bad)
bound
xchg
sbb
loope
pusha
pop
icebp
mov
sahf
pusha
in
ret
xchg
lahf
arpl
out
iret
loopne
xchg
call
imul
lahf
test
pop
or
sbb
mov
xchg
outs
(bad)
call
pusha
sbb
in
add
pushf
stos
or
sbb
loope
pusha
div
ds
sbb
rcr
adc
dec
repnz
pop
sbb
sbb
or
mov
in
pusha
test
adc
dec
repnz
sbb
sbb
(bad)
int
pusha
div
cmp
(bad)
int
pusha
neg
in
daa
ins
or
fistp
pusha
or
adc
pusha
neg
in
jg
xchg
outs
(bad)
call
pusha
sbb
in
test
neg
rcr
pushf
out
mul
dec
ja
bndldx
(bad)
in
pusha
test
push
(bad)
shr
pusha
not
enter
lahf
or
in
je
or
bound
jg
sbb
push
(bad)
in
loop
neg
sbb
(bad)
in
pusha
test
pusha
loopne
or
lock
iret
loopne
or
mul
in
and
prefetcht0
pop
or
lahf
test
cmc
or
scas
imul
in
jmp
lahf
loopne
or
sbb
sbb
(bad)
in
pusha
test
pusha
div
jecxz
mul
cdq
pop
add
fst
cmc
out
pusha
mov
icebp
inc
lea
sbb
lahf
pusha
pop
ins
test
icebp
das
mov
sbb
movs
jecxz
pusha
push
inc
inc
push
retf
retf
mov
ja
or
lahf
pop
dec
dec
and
sub
mov
sbb
sbb
or
lahf
pop
sbb
mov
lea
(bad)
sbb
repnz
sbb
sbb
or
adc
jecxz
and
stos
sub
pop
iret
xchg
pop
sbb
or
sbb
shr
stc
push
lea
fincstp
pop
test
loopne
or
or
jb
test
or
lahf
loopne
or
sbb
fidivr
sahf
or
xchg
sbb
out
xchg
loopne
or
cwde
mov
stos
jno
out
ja
and
mov
or
pop
pushf
add
or
cdq
call
aas
jmp
pop
sbb
ins
scas
fisttp
cwde
fsincos
adc
sbb
or
push
std
sbb
pop
push
(bad)
fsub
and
xchg
dec
push
nop
fstp
pop
xchg
or
mov
repnz
jnp
sbb
in
in
fist
pop
nop
fld
fsub
cwde
leave
loopne
mov
nop
retf
fistp
pop
pushf
and
jb
out
sbb
xchg
lahf
sub
out
mov
retf
outs
lahf
or
lahf
xor
out
lahf
loopne
push
lahf
or
outs
xchg
into
pushf
mov
mul
sub
mov
pusha
imul
xchg
sbb
jno
ds
sbb
rcr
adc
dec
repnz
sbb
sbb
sti
pop
or
lea
xchg
sbb
icebp
push
vpmacsdql
cmc
in
pop
icebp
pop
pop
mul
xchg
sbb
icebp
rcr
out
pop
adc
adc
dec
repnz
sbb
sbb
or
das
nop
or
fwait
ins
(bad)
aas
sbb
or
ds
sbb
rcr
test
or
out
in
cmp
mov
jmp
inc
dec
sbb
test
rcr
imul
inc
and
xchg
pop
test
stos
dec
iret
pop
lahf
mov
sbb
pusha
mov
fisttp
jno
ds
sbb
rcr
imul
mov
loopne
or
in
in
cmp
mov
jmp
inc
dec
sbb
test
rcr
sbb
or
cdq
pop
dec
xchg
cmps
and
out
adc
mov
jmp
inc
sbb
jo
bound
jo
pusha
sbb
lahf
dec
jno
add
repnz
pop
sbb
push
dec
lods
jo
bound
jo
pop
icebp
mov
or
fstp
mov
adc
daa
pop
xchg
lahf
sub
out
iret
loopne
adc
or
sbb
out
pop
xor
sbb
icebp
jae
adc
dec
iret
test
pusha
jge
repnz
pop
sbb
cmc
or
idiv
stc
pop
lahf
imul
iret
push
sbb
or
fstp
mov
adc
daa
pop
xchg
lahf
sub
out
iret
loopne
or
out
in
shl
pop
xor
sbb
icebp
jae
adc
dec
iret
test
pusha
jge
repnz
sbb
cmc
or
idiv
stc
pop
lahf
imul
addr16
sbb
add
sbb
or
stc
push
lea
lahf
das
in
in
retf
xchg
pop
jle
pop
sbb
dec
stc
mov
push
dec
aad
call
(bad)
or
lahf
bound
repnz
sbb
push
dec
int
pushf
ja
sbb
or
mov
fcmovu
cwde
icebp
dec
or
sbb
lds
lahf
or
jo
loopne
or
iret
pop
cmps
pushf
or
sbb
shl
ret
ficomp
or
sbb
or
sbb
dec
movs
dec
ja
push
sbb
cmp
pop
lahf
bound
jo
bound
jo
bound
jo
pusha
sbb
push
or
inc
dec
sbb
rcr
cmc
or
pop
(bad)
lahf
xchg
pop
sbb
pushf
test
jo
loopne
adc
or
ja
stos
in
mov
push
ja
adc
lahf
xor
imul
loopne
pop
lahf
or
inc
dec
sbb
das
adc
lahf
sbb
lahf
loopne
push
lahf
or
iret
test
pusha
or
sbb
sbb
in
pop
xchg
lahf
xor
out
iret
pusha
jne
fisttp
jno
inc
dec
sbb
mov
sbb
pop
loopne
mov
call
mov
sub
sbb
jne
fisttp
sbb
lahf
or
mov
mul
xchg
inc
and
xchg
pop
test
cmc
or
mul
imul
loopne
adc
or
pop
add
sbb
lea
jo
bound
jb
jnp
sbb
or
ja
adc
lahf
pop
icebp
jae
or
jo
pusha
in
sbb
cmp
icebp
inc
xchg
or
icebp
xchg
mov
fldenv
dec
std
dec
ja
pop
sbb
bound
xchg
(bad)
dec
repnz
push
sbb
xchg
enter
push
inc
rcr
sbb
in
cwde
mul
pop
dec
movs
xchg
jp
iret
jge
lahf
or
or
or
sbb
sbb
lahf
loope
adc
or
adc
lahf
xor
ins
add
pop
xchg
mov
or
daa
cmps
or
sbb
or
xchg
pusha
lods
pop
lahf
or
sahf
dec
or
sbb
std
ret
imul
sub
repnz
(bad)
cmc
out
not
(bad)
in
pop
lahf
imul
mov
int3
or
pusha
test
pusha
mov
icebp
or
pop
popf
lahf
lahf
or
xchg
sbb
in
pusha
pop
out
fld
adc
outs
lock
shl
in
mov
push
adc
leave
out
div
(bad)
push
cmc
out
cmps
fsubr
(bad)
std
out
div
lahf
inc
cmc
out
sbb
sbb
in
and
dec
jl
jo
sbb
aam
in
pop
xchg
lahf
jg
out
mov
shl
test
stos
dec
mov
pop
lahf
or
sbb
sbb
lahf
test
mov
fwait
push
mov
sub
sbb
xor
sbb
pop
icebp
in
mul
inc
pop
xor
sbb
lahf
imul
sub
repnz
out
(bad)
loope
sbb
sahf
lock
fnstsw
or
adc
or
ja
adc
lahf
loope
sbb
add
and
add
jge
repnz
xor
lahf
(bad)
(bad)
xchg
sbb
in
pusha
sbb
sbb
out
pusha
mov
jb
or
and
jl
and
jl
and
jl
and
jl
and
jl
and
jl
and
jl
and
jl
and
pop
pushf
rcr
ins
or
adc
loop
mul
and
jl
and
jl
and
jge
jb
sbb
sbb
or
daa
add
sbb
mul
in
imul
xchg
adc
ss
or
std
push
(bad)
shl
not
out
neg
cdq
cmp
in
pusha
or
iret
loopne
push
lahf
or
in
iret
popf
add
or
xchg
addr16
xchg
pop
pusha
out
lahf
or
iret
imul
add
bnd
sbb
pop
mov
in
neg
outs
mov
pusha
dec
ret
jae
ja
adc
lahf
imul
add
repnz
add
sbb
sbb
lahf
and
nop
sbb
out
pusha
sbb
(bad)
in
pusha
or
sbb
or
jb
or
sbb
lea
in
test
lahf
loopne
adc
mul
in
shl
pop
xor
sbb
icebp
call
pusha
inc
sti
fisttp
xchg
xchg
loopne
mov
call
or
or
idiv
rcr
sbb
push
add
sbb
popf
mov
xchg
or
repz
or
and
lahf
(bad)
(bad)
xchg
sbb
in
pusha
sbb
in
pop
xchg
lahf
push
out
iret
pusha
xor
fisttp
xchg
lahf
push
out
iret
loopne
push
lahf
or
sbb
mul
in
imul
or
bnd
sbb
pop
mov
in
neg
outs
mov
pusha
pop
ret
jae
ja
adc
lahf
imul
or
repnz
add
sbb
sbb
sbb
out
push
neg
mov
mov
or
sub
cmc
or
dec
dec
sbb
loopne
adc
popf
pop
sbb
adc
lahf
loope
push
lahf
or
lahf
lahf
mul
in
jecxz
adc
pusha
not
in
xor
data16
xor
fs
pusha
dec
fisttp
jae
ja
adc
lahf
imul
or
repnz
sbb
sbb
sbb
out
adc
mul
loop
lock
fst
lea
in
test
pusha
pop
jno
inc
dec
sbb
pusha
pop
icebp
(bad)
xchg
or
cdq
pop
sbb
lahf
or
xchg
sbb
out
pusha
pop
out
pop
test
adc
lahf
mov
jmp
fisttp
sbb
loopne
adc
test
adc
lahf
loope
push
lahf
or
sbb
lea
in
test
pusha
pop
jno
inc
dec
sbb
pusha
pop
icebp
aaa
xchg
or
cdq
pop
sbb
lahf
or
xchg
sbb
out
pusha
pop
out
mov
pop
sbb
adc
lahf
mov
jmp
mov
dec
sbb
loopne
adc
xchg
pop
sbb
adc
lahf
loope
sbb
lock
fst
lea
in
test
pusha
pop
jno
dec
dec
sbb
pusha
pop
icebp
fist
sbb
lahf
or
xchg
sbb
out
pusha
pop
out
mov
pop
sbb
adc
lahf
mov
jmp
jno
dec
sbb
loopne
adc
xchg
pop
sbb
adc
lahf
loope
sbb
mul
in
shl
pop
xor
sbb
icebp
call
bound
jb
fistp
cmc
or
jg
or
in
and
adc
or
fcomp
mul
in
or
daa
nop
mov
out
sbb
and
and
sub
cmc
or
dec
dec
sbb
loopne
adc
xchg
pop
sbb
push
sbb
or
in
sbb
jp
xchg
addr16
xchg
pop
test
adc
dec
jb
rcr
adc
dec
repnz
add
sbb
or
or
sbb
lea
in
test
lahf
loopne
sbb
sahf
mul
in
jge
jo
bound
jb
fistp
cmc
or
mov
or
in
sub
sbb
popf
or
fcomp
mul
in
or
daa
nop
mov
out
sbb
and
and
sub
cmc
or
dec
dec
sbb
loopne
sbb
mov
adc
sbb
or
in
test
push
neg
mov
pop
scas
(bad)
popa
mul
in
retf
push
lock
push
iret
xchg
lahf
sahf
mul
in
test
mul
pushf
out
(bad)
mul
dec
ja
adc
lahf
mov
or
mov
sbb
loopne
in
sbb
bound
jo
bound
jb
or
pop
test
pop
lahf
or
in
or
cmc
or
scas
imul
in
stos
sbb
lahf
mov
sub
sbb
dec
xchg
pop
scas
xchg
pop
sbb
out
pop
xor
sbb
icebp
nop
fprem1
or
int
jno
push
dec
sbb
sub
out
pusha
loopne
pop
lahf
or
adc
dec
jo
pusha
jmp
scas
imul
in
mov
sbb
mul
cdq
push
neg
mov
bound
xchg
or
in
pusha
pop
dec
xchg
add
in
pusha
pop
out
imul
in
fwait
sbb
lahf
bound
xchg
sbb
in
pusha
pop
jae
idiv
stc
pop
lahf
imul
out
sbb
pusha
mov
icebp
or
dec
mov
sbb
or
cmc
or
cmc
or
test
cmp
fwait
or
xchg
sbb
out
pusha
and
(bad)
(bad)
mul
xchg
sbb
in
pusha
sbb
jo
imul
sub
sbb
add
call
or
retf
jae
adc
dec
dec
neg
lods
out
popa
mul
repnz
cmc
or
iret
bound
jb
ficomp
pusha
mov
icebp
ret
fwait
or
in
cld
out
pusha
loopne
sbb
mov
sbb
push
lock
push
iret
jae
cmc
or
jbe
dec
sbb
rcr
neg
pop
lahf
pusha
sbb
lahf
mov
pushf
adc
out
pop
adc
pusha
cmp
icebp
iret
call
sbb
nop
lahf
jg
out
push
iret
repnz
or
outs
xchg
imul
jmp
sbb
retf
retf
cdq
jae
dec
dec
enter
and
mov
and
xchg
fiadd
sbb
fstp
sbb
pop
pushf
fstp
mov
in
loopne
pop
lahf
loopne
push
lahf
or
pop
addr16
pop
lahf
jge
in
mov
push
lahf
or
das
pop
test
out
mov
pop
sbb
sbb
add
outs
xchg
imul
or
bnd
or
sbb
lock
std
push
dec
in
xchg
pop
xor
or
outs
xchg
imul
add
repnz
sbb
ins
adc
cmp
fwait
or
and
jge
call
ins
adc
icebp
xchg
or
or
sub
call
ins
or
cmp
icebp
out
pushf
or
icebp
xchg
and
jmp
icebp
xchg
or
adc
and
pop
test
xchg
pop
mov
cmp
ins
sbb
adc
cwde
cmc
push
pop
sbb
movs
cmp
ins
sbb
adc
and
mov
pop
sbb
push
xchg
pop
out
pop
sbb
ins
sbb
adc
and
sbb
xchg
pop
adc
or
or
outs
xchg
pop
dec
bnd
sbb
je
cwde
fstp
push
inc
rcr
sbb
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
retf
dec
enter
lahf
or
outs
mov
dec
dec
repnz
or
adc
jmp
nop
fstp
jecxz
pop
pop
aaa
cmp
jecxz
pop
nop
mov
adc
sbb
sub
je
pop
adc
jmp
call
loopne
sbb
bound
dec
ja
mul
pusha
push
rcr
(bad)
mov
sbb
sbb
sbb
or
daa
lahf
sbb
sbb
jecxz
ficomp
or
in
or
sbb
cmp
in
mul
popf
gs
mov
inc
test
adc
cmp
ds
sti
mov
pop
mov
or
sbb
pop
jmp
lahf
or
sbb
pop
jmp
lahf
or
sbb
push
jmp
lahf
or
sbb
push
jmp
lahf
or
sbb
dec
jmp
lahf
or
sbb
dec
jmp
lahf
or
sbb
inc
jmp
lahf
or
sbb
inc
jmp
lahf
or
sbb
jns
fisttp
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
pusha
sub
mov
