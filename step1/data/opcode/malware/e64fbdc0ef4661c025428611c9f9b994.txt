xor
pop
add
add
add
add
add
add
add
add
add
add
sub
add
mov
add
ficomp
add
xor
aad
add
add
add
sub
add
or
sub
add
or
outs
adc
add
or
add
push
or
or
sbb
add
or
pop
or
push
adc
adc
jnp
add
add
add
adc
sahf
adc
pop
adc
add
mov
out
outs
adc
add
jae
add
or
add
adc
add
add
or
adc
pop
pop
adc
adc
push
outs
adc
add
xor
adc
or
push
adc
sub
pop
adc
push
pushf
adc
pop
pop
adc
adc
pop
mov
out
adc
adc
push
adc
sub
outs
sbb
add
adc
pop
pop
adc
adc
sbb
out
or
or
pop
es
add
jo
xor
add
pop
adc
pop
add
or
adc
or
push
es
or
add
or
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
adc
adc
add
sbb
sub
add
or
and
add
add
or
or
sysret
or
jnp
add
add
xchg
sahf
or
pop
or
and
add
add
jmp
add
add
add
(bad)
xor
jno
add
add
or
add
or
pop
or
xor
and
add
add
adc
adc
and
add
add
add
or
add
add
push
adc
sub
adc
push
adc
push
xchg
add
add
add
push
xchg
popa
and
add
add
pushf
adc
pop
pop
adc
adc
adc
add
sbb
add
es
adc
adc
or
adc
and
add
add
add
or
mov
and
and
sub
push
outs
sbb
add
push
outs
sbb
sub
add
jge
add
add
outs
sbb
add
fsubr
add
add
add
add
aam
add
cmp
add
add
add
(bad)
add
add
add
push
add
push
add
or
cmps
add
and
add
and
add
add
add
jb
add
jo
pop
add
jo
sub
add
or
add
add
and
add
sub
add
xor
add
add
add
add
adc
add
and
add
add
jge
add
add
sub
add
push
add
add
add
add
add
jo
and
add
add
add
add
sub
or
add
jae
add
or
push
outs
add
or
jle
add
add
daa
add
or
add
add
jnp
add
add
jnp
add
add
imul
push
add
add
add
outs
sub
add
pop
pop
outs
sub
add
sub
add
push
inc
push
push
dec
inc
pop
add
xor
jb
add
add
add
adc
sub
add
push
or
sub
add
add
push
or
add
or
sub
add
or
add
jo
sub
add
sub
add
add
add
sub
sub
add
push
add
add
add
sub
or
add
jae
add
push
or
outs
add
or
adc
pop
adc
add
mov
cmps
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
lea
add
das
add
or
xor
add
sub
add
lea
add
das
add
or
xor
add
outs
sbb
add
sub
jle
add
add
lea
add
das
add
or
xor
add
sub
jle
add
add
lea
add
das
add
or
xor
add
add
and
add
sub
add
xor
add
add
add
xor
add
or
add
push
or
add
jae
add
or
add
or
add
push
or
add
jae
add
or
add
or
outs
cmp
add
sub
add
adc
add
xor
add
adc
sub
add
or
pop
and
add
add
push
add
cmp
add
or
add
cmp
add
and
inc
add
push
and
lock
xor
sub
add
cmp
add
sub
sub
add
add
add
or
jnp
add
add
cmp
add
add
or
adc
push
add
add
add
add
adc
add
add
sub
add
or
add
or
add
add
or
add
add
jae
add
or
add
add
sub
add
add
add
add
or
inc
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
cld
and
(bad)
(bad)
push
add
or
add
or
jnp
add
add
popf
add
jo
dec
add
or
jnp
add
add
pop
and
dec
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
or
inc
add
or
jnp
add
add
dec
add
or
add
or
jnp
add
add
scas
add
jo
add
nop
inc
push
sbb
jae
add
or
add
or
jnp
add
add
push
add
or
add
or
jnp
add
add
jb
add
jo
push
add
or
add
outs
push
add
or
jnp
add
add
(bad)
and
(bad)
(bad)
push
add
or
add
or
jnp
add
add
fild
add
dec
add
or
jnp
add
add
pop
or
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
jmp
add
and
add
add
add
add
outs
push
add
or
and
add
inc
and
add
jae
add
or
push
add
or
pop
sub
add
add
jb
add
jo
push
add
or
add
outs
pop
add
or
push
push
jae
add
or
pop
add
or
push
sub
add
add
pop
add
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
pop
sub
add
add
add
jo
dec
add
or
push
sub
add
add
sub
add
add
add
jo
and
add
add
sub
add
add
inc
add
bound
add
sub
add
add
sub
or
add
adc
add
add
add
adc
pop
fs
add
add
sub
add
or
add
add
add
sub
add
push
add
add
add
add
or
sbb
or
push
jb
add
jo
push
pop
jb
add
jo
push
jae
add
or
add
or
add
add
add
add
or
sbb
or
push
jb
add
jo
pop
pop
jb
add
jo
pop
jae
add
or
add
or
add
add
add
add
or
sbb
or
push
jb
add
jo
or
jb
add
jo
or
add
or
add
or
sub
add
adc
push
add
add
add
add
adc
jnp
add
add
push
aas
add
jo
imul
jb
add
jo
xor
add
pop
xor
pop
add
or
sub
jnp
add
add
push
add
sub
add
or
add
add
add
adc
stos
add
jo
xor
add
pop
xor
pop
add
or
sub
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
jge
add
add
jnp
add
add
pop
add
push
add
add
jo
jnp
add
add
xor
ins
add
or
add
or
jnp
add
add
add
or
sbb
or
push
jb
add
jo
pop
pop
jb
add
jo
mov
ins
add
or
add
outs
add
or
sub
add
and
add
sub
sub
sub
sub
add
add
add
or
jnp
add
add
cmp
add
add
or
add
adc
push
add
add
adc
add
aas
add
or
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
inc
add
or
jnp
add
add
or
add
or
jnp
add
add
scas
add
jo
(bad)
inc
inc
push
sbb
jae
add
or
add
or
jnp
add
add
out
add
add
mov
add
jae
add
or
add
or
jnp
add
add
xchg
add
jo
dec
add
or
jnp
add
add
ins
pop
sbb
dec
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
cmps
add
jo
and
add
add
add
add
outs
je
add
add
add
add
inc
adc
add
jae
add
or
add
or
jnp
add
add
push
outs
inc
add
or
jnp
add
add
dec
add
or
add
or
jnp
add
add
mul
xchg
add
jae
add
or
add
or
jnp
add
add
mov
add
dec
add
or
jnp
add
add
fs
add
sub
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
mov
jbe
add
add
add
add
js
ja
add
add
add
add
xlat
add
jo
jbe
add
add
add
add
js
ja
add
add
add
add
movq
or
jnp
add
add
js
add
sbb
or
push
add
add
add
pop
pop
add
add
add
pop
outs
jns
add
add
add
add
outs
jp
add
add
add
add
outs
jnp
add
add
add
add
arpl
(bad)
call
cmps
jae
add
or
add
or
jnp
add
add
outs
jl
add
add
add
add
in
add
dec
add
or
jnp
add
add
pop
addr16
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
outs
jge
add
add
add
add
outs
jle
add
add
add
add
outs
jg
add
add
add
add
arpl
(bad)
jmp
push
(bad)
(bad)
push
add
or
add
or
jnp
add
add
cmc
add
jo
dec
add
or
jnp
add
add
xor
or
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
add
jo
and
add
add
add
add
outs
jg
add
add
add
add
gs
(bad)
jmp
push
(bad)
push
add
or
add
or
jnp
add
add
adc
dec
add
or
jnp
add
add
cs
or
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
and
jo
and
add
add
add
add
cdq
and
(bad)
push
add
or
add
or
jnp
add
add
xor
jo
dec
add
or
jnp
add
add
or
adc
dec
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
cdq
and
(bad)
push
add
or
add
or
jnp
add
add
lea
or
pop
sahf
or
add
or
add
or
jnp
add
add
dec
add
jo
dec
add
or
jnp
add
add
or
adc
dec
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
lea
or
pop
sahf
or
add
or
add
or
jnp
add
add
sbb
xor
add
outs
dec
add
or
jnp
add
add
push
add
jo
dec
add
or
jnp
add
add
or
or
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
addr16
jo
and
add
add
add
add
outs
je
add
add
add
add
inc
adc
add
jae
add
or
add
or
jnp
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
cli
pop
(bad)
jae
add
or
add
or
jnp
add
add
xchg
add
jo
dec
add
or
jnp
add
add
popa
add
add
clc
add
add
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
outs
test
add
add
add
add
outs
xchg
add
add
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
ds
and
add
or
add
or
jnp
add
add
rol
jo
dec
add
or
jnp
add
add
cli
add
add
cmp
dec
add
or
add
or
jnp
add
add
adc
add
or
jnp
add
add
outs
xchg
add
add
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
and
add
add
add
or
add
or
jnp
add
add
or
dec
add
or
jnp
add
add
pop
add
add
xchg
add
jae
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
adc
add
or
jnp
add
add
outs
xchg
add
add
add
rol
add
jae
add
or
push
add
or
pop
sub
add
add
inc
pop
inc
pop
inc
sub
inc
add
or
and
add
and
add
or
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
dec
add
or
jb
add
add
or
push
sub
add
add
add
add
or
add
push
adc
bound
add
sub
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
sub
or
sub
mov
add
add
add
add
lea
sbb
add
and
add
add
jge
add
add
push
sub
add
push
sub
adc
add
inc
add
add
add
adc
sub
add
or
and
add
add
jge
add
add
and
add
add
jge
add
add
or
lar
add
add
add
xchg
sahf
push
pop
pop
or
add
pop
sub
add
push
sub
adc
push
add
add
adc
and
add
and
add
pop
and
add
add
add
jge
add
add
or
add
add
or
add
add
jnp
add
add
xchg
or
and
add
jnp
add
add
or
add
add
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
add
add
add
add
xchg
or
and
add
jnp
add
add
fs
jge
add
add
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
push
sahf
add
add
add
xchg
or
and
add
jnp
add
add
bound
sbb
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
pop
sahf
add
add
add
xchg
or
and
add
jnp
add
add
adc
sbb
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
or
add
aas
(bad)
std
(bad)
call
or
add
add
jnp
add
add
xchg
or
and
add
jnp
add
add
or
add
add
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
or
add
xchg
or
and
add
jnp
add
add
fs
jge
add
add
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
or
add
xchg
or
and
add
jnp
add
add
bound
sbb
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
jge
add
add
or
add
xchg
or
and
add
jnp
add
add
adc
sbb
and
add
jnp
add
add
and
pop
jge
add
add
jnp
add
add
add
add
add
and
pop
add
pop
sbb
add
add
add
add
add
add
and
sbb
add
and
add
add
add
pop
or
cld
pop
add
pop
sbb
or
adc
adc
pop
and
add
add
(bad)
std
(bad)
jmp
add
xor
jmp
add
or
mov
adc
and
push
and
add
or
or
movs
add
add
or
or
or
add
pop
adc
or
or
sbb
adc
or
add
or
bound
adc
or
push
adc
add
add
add
adc
pop
adc
adc
adc
add
pop
or
adc
pop
adc
adc
adc
pop
adc
adc
adc
sbb
push
pop
adc
pop
or
pop
adc
pop
adc
adc
adc
push
bound
pop
or
pop
pop
or
or
pop
adc
adc
pop
pop
or
or
adc
pop
or
push
pop
pop
or
sbb
push
(bad)
(bad)
call
or
jae
add
add
pop
add
add
add
xchg
pop
or
add
add
add
pop
pop
xchg
pop
or
add
add
add
sbb
pop
or
sbb
add
sbb
pop
adc
add
add
sbb
pop
adc
sbb
add
sbb
pop
adc
adc
add
add
add
sbb
xchg
pop
adc
adc
add
add
add
sbb
or
or
or
or
add
pop
adc
or
or
sbb
adc
or
add
or
bound
adc
or
push
adc
add
add
add
adc
pop
adc
adc
adc
add
pop
or
adc
pop
adc
adc
adc
pop
adc
adc
adc
sbb
push
pop
adc
pop
or
pop
adc
pop
adc
adc
adc
push
bound
pop
or
pop
pop
or
or
pop
adc
adc
pop
pop
or
or
adc
pop
or
add
add
add
pop
sahf
add
add
add
pop
pop
or
add
sbb
sahf
add
add
add
sbb
add
add
add
add
sbb
add
add
add
sbb
push
sahf
add
add
add
sbb
adc
sahf
add
add
add
sbb
push
push
pop
or
and
add
add
cmp
inc
cmp
or
jo
add
pop
add
add
add
xchg
pop
or
add
add
add
pop
pop
xchg
pop
or
add
add
add
sbb
pop
or
sbb
add
sbb
pop
adc
add
add
sbb
pop
adc
sbb
add
sbb
pop
adc
adc
add
add
add
sbb
xchg
pop
adc
adc
add
add
add
sbb
or
or
or
or
add
pop
adc
or
or
sbb
adc
or
add
or
bound
adc
or
push
adc
add
add
add
adc
pop
adc
adc
adc
add
pop
or
adc
pop
adc
adc
adc
pop
adc
adc
adc
sbb
push
pop
adc
pop
or
pop
adc
pop
adc
adc
adc
push
bound
pop
or
pop
pop
or
or
pop
adc
adc
pop
pop
or
or
adc
pop
or
add
add
add
pop
sahf
add
add
add
pop
pop
or
add
sbb
sahf
add
add
add
sbb
add
add
add
add
sbb
add
add
add
sbb
push
sahf
add
add
add
sbb
adc
sahf
add
add
add
sbb
push
push
pop
or
and
add
add
test
(bad)
inc
sub
add
push
add
add
add
jge
add
add
add
xor
add
add
add
add
adc
and
add
or
pop
jge
add
add
sub
add
push
add
inc
add
jge
add
add
jnp
add
add
jnp
add
add
sub
add
push
add
or
add
add
add
add
add
add
add
add
jnp
add
add
mov
add
jge
add
add
jnp
add
add
add
add
push
add
dec
add
add
mov
add
sub
mov
jl
add
add
mov
add
mov
jl
add
add
pop
add
mov
nop
add
or
add
or
push
outs
and
add
and
add
add
or
jnp
add
add
outs
xchg
add
or
add
xor
add
add
add
add
adc
add
fs
add
add
jae
add
or
add
add
sub
add
or
add
push
or
add
add
add
sub
add
push
push
and
add
add
add
aas
sub
inc
add
add
and
add
add
add
inc
sub
add
add
jnp
add
add
call
xchg
add
or
jnp
add
add
inc
cmp
bound
add
outs
xchg
add
or
jnp
add
add
xchg
add
or
jnp
add
add
jnp
add
add
cwde
add
or
jnp
add
add
sub
sub
add
jae
add
or
pop
outs
add
or
add
add
push
jge
add
add
and
sub
sub
add
add
pop
add
add
add
add
jnp
add
add
jge
add
jnp
add
add
xor
add
add
add
add
mov
ins
add
or
add
or
jnp
add
add
das
daa
add
add
add
outs
xchg
add
or
jnp
add
add
call
add
add
popf
add
add
or
add
add
add
fwait
add
or
sub
add
and
add
sub
adc
add
xor
add
adc
sub
add
or
pop
and
add
add
push
add
cmp
add
or
add
cmp
add
and
inc
add
push
and
lock
xor
sub
add
cmp
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
or
jnp
add
add
cmp
add
add
or
add
adc
push
add
add
adc
pop
add
add
aas
add
or
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
inc
add
or
jnp
add
add
outs
jg
add
add
add
add
mov
add
add
inc
inc
pop
sbb
jae
add
or
add
or
jnp
add
add
sti
(bad)
(bad)
call
or
add
or
jnp
add
add
mov
add
dec
add
or
jnp
add
add
pop
add
add
adc
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
mov
and
add
add
add
add
outs
jg
add
add
add
add
cmps
pop
jne
dec
add
or
add
or
jnp
add
add
std
add
add
or
jnp
add
add
xor
or
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
or
add
and
add
add
add
add
or
add
or
jnp
add
add
dec
add
or
add
or
jnp
add
add
scas
add
jo
add
nop
inc
push
sbb
jae
add
or
add
or
jnp
add
add
jb
push
add
push
add
or
add
outs
pushf
add
or
jnp
add
add
out
add
and
add
jae
add
or
add
or
jnp
add
add
cmp
dec
add
or
jnp
add
add
call
dec
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
outs
je
add
add
add
add
inc
and
add
jae
add
or
add
or
jnp
add
add
jb
push
add
push
add
or
add
outs
pop
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
outs
popf
add
or
jnp
add
add
cmp
add
and
dec
add
or
add
or
jnp
add
add
add
jo
dec
add
or
jnp
add
add
dec
pop
pop
jae
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
outs
je
add
add
add
add
inc
and
add
jae
add
or
add
or
jnp
add
add
dec
add
or
add
or
jnp
add
add
cld
pop
hlt
jae
add
or
add
or
jnp
add
add
xchg
push
add
dec
add
or
jnp
add
add
or
or
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
inc
and
add
jae
add
or
add
or
jnp
add
add
or
or
jnp
add
add
outs
sahf
add
or
jnp
add
add
or
or
add
jae
add
or
add
or
jnp
add
add
cmps
push
add
dec
add
or
jnp
add
add
jae
add
or
add
or
jnp
add
add
call
or
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
mov
add
outs
inc
add
or
jnp
add
add
outs
mov
jnp
add
add
es
add
add
add
or
add
or
jnp
add
add
mov
add
dec
add
or
jnp
add
add
outs
mov
jnp
add
add
sbb
or
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
rol
add
and
add
add
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
add
add
push
jae
add
or
add
or
jnp
add
add
xchg
add
jo
dec
add
or
jnp
add
add
mov
add
pop
dec
jae
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
sbb
add
or
jnp
add
add
outs
xchg
add
add
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
pop
push
jae
add
or
add
or
jnp
add
add
or
dec
add
or
jnp
add
add
rol
add
and
dec
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
pop
outs
test
add
add
add
add
outs
xchg
add
add
add
add
jb
push
add
push
add
or
add
outs
add
or
jnp
add
add
cmps
add
add
adc
add
jae
add
or
add
or
jnp
add
add
pop
pop
add
dec
add
or
jnp
add
add
cmp
and
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
and
add
or
jnp
add
add
outs
xchg
add
add
add
add
or
or
jnp
add
add
mov
inc
add
or
jnp
add
add
mov
add
add
jl
pop
sbb
jae
add
or
add
or
jnp
add
add
inc
add
and
sub
dec
add
or
jnp
add
add
(bad)
and
add
jae
add
or
add
or
jnp
add
add
das
pop
add
dec
add
or
jnp
add
add
rol
add
sub
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
inc
pop
add
and
add
add
add
add
and
add
or
jnp
add
add
inc
and
bound
add
outs
jne
add
add
add
add
jb
pop
add
push
add
or
add
outs
add
or
jnp
add
add
icebp
add
add
or
add
jae
add
or
add
or
jnp
add
add
jge
add
dec
add
or
jnp
add
add
xchg
add
add
sbb
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
daa
outs
test
add
add
add
add
outs
xchg
add
add
add
add
jb
add
jo
push
add
or
add
outs
add
or
jnp
add
add
and
add
add
add
or
add
or
jnp
add
add
rol
jo
dec
add
or
jnp
add
add
rol
add
pop
xor
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
sub
add
or
jnp
add
add
outs
xchg
add
add
add
add
jb
pop
add
push
add
or
add
outs
add
or
jnp
add
add
and
add
add
add
or
add
or
jnp
add
add
mov
dec
add
or
jnp
add
add
rol
add
and
add
add
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
outs
test
add
add
add
add
outs
xchg
add
add
add
add
jb
pop
add
push
add
or
add
outs
add
or
jnp
add
add
or
add
adc
or
add
or
jnp
add
add
cmc
pop
add
dec
add
or
jnp
add
add
mov
add
and
add
add
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
sub
add
or
jnp
add
add
outs
xchg
add
add
add
add
jb
or
jo
push
add
or
add
outs
add
or
jnp
add
add
icebp
add
add
xchg
add
add
add
or
add
or
jnp
add
add
xor
add
dec
add
or
jnp
add
add
xchg
add
add
sbb
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
sub
add
or
jnp
add
add
outs
xchg
add
add
add
rol
add
jae
add
or
push
add
or
pop
sub
add
add
outs
movs
add
or
sub
inc
add
or
and
add
add
add
add
add
or
pop
add
or
push
sub
add
add
pop
add
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
or
jnp
add
add
pop
add
or
sub
cmps
add
or
pop
sub
add
add
sub
push
sub
jb
or
jo
dec
add
or
push
sub
add
add
sub
pop
sub
add
add
or
jo
and
add
add
inc
push
add
push
jae
add
or
arpl
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
sub
or
sub
push
add
push
add
or
push
add
push
add
or
add
xor
add
add
add
add
add
add
add
dec
add
add
xor
add
sub
sub
add
add
lea
add
das
add
or
xor
add
sub
add
push
sub
sbb
lods
add
or
jae
add
push
sub
or
pop
jge
add
add
sub
add
add
add
add
adc
inc
push
add
add
add
sbb
pop
add
add
sldt
adc
add
push
adc
sbb
scas
add
or
push
jb
or
jo
das
add
or
pop
or
or
pop
jb
or
jo
das
add
or
push
sub
or
or
jo
das
add
or
pop
daa
sub
or
or
jo
das
add
or
jle
add
add
scas
add
or
add
xor
add
pop
adc
pop
add
or
sub
xor
add
sub
add
push
adc
pop
jb
or
jo
mov
add
jle
add
or
and
add
add
add
or
sub
dec
add
add
mov
add
es
add
push
adc
adc
adc
jge
add
add
pop
jnp
add
add
add
push
adc
push
jge
add
add
xor
add
adc
inc
inc
add
push
jae
add
or
add
or
add
or
pop
pop
sub
push
jnp
add
add
lock
fiadd
ficom
adc
add
push
adc
jnp
add
add
das
add
push
fsubr
add
add
add
add
add
add
add
push
add
add
push
sub
add
push
add
or
push
add
push
add
or
add
adc
add
xor
add
adc
add
jle
add
add
sub
and
or
jo
or
add
sub
add
or
add
or
add
or
push
add
add
inc
add
add
sbb
add
add
push
add
sub
add
xor
add
add
adc
add
sub
mov
add
inc
add
add
mov
push
je
add
add
sbb
add
add
push
jae
add
push
sub
or
add
add
add
push
add
mov
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
jmp
sbb
add
add
add
add
add
sub
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
ins
add
bound
add
add
ins
add
add
out
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
inc
xor
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
jmp
add
add
dec
dec
add
add
add
add
xchg
add
add
add
add
sbb
add
add
add
add
je
add
sub
add
add
push
add
inc
add
add
cmp
and
add
sub
add
add
add
xor
add
add
add
add
jae
imul
and
dec
add
inc
add
add
push
add
inc
add
add
add
add
add
and
jno
jne
popa
add
add
add
add
add
add
add
add
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
rol
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
or
push
ror
inc
adc
push
jecxz
push
cmp
loop
adc
fimul
or
popf
dec
cmps
push
inc
xor
xchg
sbb
jmp
ret
xor
mov
outs
add
in
inc
xor
mov
push
add
xchg
je
inc
fmul
je
add
jmp
ret
ret
sub
push
push
mov
shr
cmovp
iret
push
pop
pop
bound
out
sub
jb
push
xchg
dec
pop
adc
jo
icebp
fcom
not
sub
jecxz
sti
or
std
sub
push
mov
in
int
cmp
cmps
jecxz
inc
bound
mov
ss
imul
ins
sub
and
cmp
dec
pop
std
sub
push
jns
pop
or
push
mov
and
push
push
mov
sub
or
fadd
(bad)
push
stc
dec
and
bound
pop
(bad)
cmps
arpl
mov
xchg
jmp
inc
push
call
loope
adc
jecxz
xor
sub
and
(bad)
jp
xor
mov
loopne
ja
aas
loop
cld
jbe
or
xchg
repnz
mov
inc
div
(bad)
imul
xor
fiadd
xor
out
dec
outs
ss
loopne
retf
or
movs
xchg
inc
or
xor
cli
push
mov
dec
ss
imul
sbb
push
and
add
and
cmp
mov
adc
mov
movs
repz
call
cmp
ins
and
push
pusha
jp
dec
mov
push
jbe
cs
mov
cmps
push
test
adc
cli
aam
xchg
dec
cmp
lods
data16
push
fiadd
push
inc
(bad)
mov
(bad)
out
shl
push
sub
mov
call
mul
loop
mov
dec
push
movs
cmp
inc
sub
jecxz
mov
(bad)
mov
cmp
sbb
cmp
dec
inc
gs
and
stc
pop
in
scas
cmp
xchg
push
jp
popa
inc
jno
jle
loopne
cmc
stos
pop
push
loop
in
loop
jl
je
xor
mov
jo
inc
dec
int3
jns
sub
movs
movs
in
outs
sbb
xor
jb
cmp
stc
xchg
xchg
adc
push
sub
outs
mov
ss
stc
mov
add
lods
in
adc
or
jp
cmp
dec
out
daa
enter
ds
out
ins
mov
push
dec
ja
mov
les
dec
arpl
pop
cld
imul
les
icebp
js
dec
ins
xor
and
push
xchg
sahf
mov
rol
in
imul
mov
adc
shl
mov
xchg
sar
adc
stc
jnp
repnz
inc
sub
loop
inc
call
mov
and
lahf
cli
or
aam
jb
jae
adc
mov
js
inc
add
xchg
add
popf
push
out
pop
mov
mov
mov
pop
rcl
mov
adc
mov
inc
inc
or
inc
es
push
lods
cdq
out
inc
or
push
and
pop
and
add
sub
and
out
or
ret
adc
loopne
aam
pushf
push
push
inc
mov
sub
inc
inc
cmp
bound
mov
lds
xchg
adc
pop
mov
jnp
fs
push
jnp
data16
jle
push
inc
lods
inc
xor
dec
arpl
push
cmps
popa
call
dec
mov
test
xchg
sub
loop
pop
and
jge
aaa
sub
ror
mov
or
jmp
jns
dec
push
cmp
mov
scas
hlt
sti
(bad)
push
or
test
retf
cmp
icebp
mov
mov
cmps
add
out
retf
jnp
(bad)
das
or
and
lods
pop
or
dec
in
jnp
icebp
cmp
into
lods
cmp
sbb
mov
sub
test
lods
cdq
ficomp
xchg
and
je
loopne
sbb
xchg
int3
bound
cmc
aaa
retf
sub
push
out
shr
lods
push
inc
or
mov
push
cs
rcl
pop
mov
add
xor
add
cdq
sti
mov
iret
in
(bad)
ficomp
jo
add
(bad)
sbb
(bad)
(bad)
jmp
stos
bound
pop
nop
jecxz
int
lahf
mov
and
lahf
mov
xor
ins
pushf
shld
aas
or
jae
inc
cmp
loopne
xchg
test
mov
leave
xchg
in
pop
push
cld
jne
lods
mov
mov
jmp
cmps
xor
shl
hlt
sbb
inc
scas
cmp
mov
mov
clc
push
jl
jecxz
addr16
pop
(bad)
jae
leave
into
imul
jmp
iret
jno
lds
dec
push
mov
cmp
cs
in
xor
mov
ret
scas
mov
xchg
adc
jbe
sub
mov
mov
xor
push
inc
shr
mov
hlt
sbb
cdq
dec
lea
cmp
fucom
xchg
sbb
add
enter
in
mov
repz
(bad)
xchg
out
cld
(bad)
or
sbb
mov
leave
outs
xchg
mov
push
dec
dec
popf
ds
push
cmps
stos
jecxz
pop
pop
test
(bad)
ds
push
or
add
dec
movs
ffree
clts
cmps
inc
push
add
inc
mov
mov
inc
dec
or
aaa
adc
mov
sar
xchg
inc
scas
gs
pushf
ins
push
sub
lds
mov
mov
adc
inc
dec
mov
pushf
pop
ins
cli
sub
xchg
adc
pop
std
popa
test
add
jo
pop
mov
popa
pop
mov
push
push
sub
mov
xchg
js
jns
stos
jo
mov
push
mov
mov
in
xor
mov
xor
mov
or
out
shl
daa
movs
push
(bad)
mov
and
push
xor
fwait
aam
and
daa
inc
dec
push
xchg
and
ja
pusha
(bad)
xchg
fld
jge
xor
daa
mov
fmul
lahf
dec
int
jno
push
and
out
mov
xor
dec
pop
cli
sub
dec
movs
sbb
retf
rcr
sbb
(bad)
dec
pusha
adc
jmp
mov
xor
mov
mov
push
push
dec
inc
add
push
inc
dec
add
xchg
inc
add
movs
mov
inc
pushf
push
sub
pop
jne
add
xor
add
pop
xchg
jmp
inc
cwde
test
imul
add
dec
or
shr
sbb
sub
add
push
xor
pop
xchg
bound
rcr
cs
xor
jno
jp
or
sub
mov
sahf
sbb
pop
data16
mov
dec
adc
mov
movs
shl
(bad)
nop
or
xor
arpl
inc
in
jb
push
and
or
lahf
jg
lods
mov
push
test
and
jae
ja
push
cmp
xchg
mul
xlat
rcl
fild
push
cmp
test
test
sub
dec
push
jbe
pop
xchg
mov
sar
push
scas
jp
and
ret
pop
ss
mov
js
cdq
and
push
mov
jl
(bad)
inc
popf
movs
cwde
add
adc
jge
or
(bad)
and
xchg
add
jp
mov
leave
sbb
out
mov
dec
cmp
dec
stc
(bad)
mov
imul
pusha
outs
cmc
lods
test
test
dec
dec
ins
imul
or
mov
cmp
xor
mov
out
arpl
movs
iret
pop
mov
push
xor
call
neg
push
ins
in
sbb
jnp
aam
repz
inc
sub
cmp
shl
mov
mov
sbb
dec
inc
out
es
les
(bad)
sub
pop
sbb
fmul
mov
pop
dec
jnp
sbb
cs
cmp
mov
jns
pop
sub
cmps
sahf
push
pop
aas
xchg
cmp
adc
mov
xchg
mov
and
sbb
push
adc
shr
adc
mov
dec
push
lea
daa
fwait
sahf
mov
mov
or
call
pop
test
mov
scas
stc
dec
xchg
pop
test
or
mov
dec
std
jecxz
stos
iret
jo
mov
mov
retf
mov
mov
push
out
cwde
and
outs
cmps
mov
xchg
adc
jl
ins
(bad)
cmp
mov
int
aaa
nop
fwait
mov
pop
outs
push
push
into
fdiv
pushf
cwd
test
jge
dec
mov
fcmovne
adc
pop
es
mov
mov
ret
nop
scas
jns
xor
or
rcr
movs
arpl
mov
jle
call
mov
xor
cld
dec
mov
inc
jp
loopne
cld
jbe
test
xchg
inc
mov
es
mov
call
mov
fs
addr16
adc
imul
lea
and
iret
xor
push
sub
ret
pop
pop
ja
cdq
and
and
jae
add
test
xor
inc
push
nop
mov
dec
dec
lods
or
ins
(bad)
dec
ss
and
div
mov
or
inc
lods
xchg
(bad)
mov
xor
mov
adc
inc
lods
ds
imul
ins
inc
mov
pushf
jle
push
push
imul
xor
movs
jle
mov
xchg
sub
sub
mov
fwait
xchg
jecxz
push
or
movs
arpl
cmp
push
adc
pusha
push
out
push
sub
and
dec
imul
dec
xchg
(bad)
adc
xchg
xchg
pop
sbb
leave
test
mov
push
rol
les
inc
repz
mov
rcl
xchg
jle
stos
and
test
cmps
je
adc
shl
mov
bound
inc
xor
popa
rcl
int
inc
imul
(bad)
xchg
mov
jp
push
scas
pop
clc
mov
sti
(bad)
ror
cld
pushf
jle
in
xor
test
js
test
mov
adc
cmp
xchg
in
jg
je
jle
clc
sub
adc
and
jo
adc
sbb
test
xchg
xchg
cmp
pushf
cmp
lods
popf
aad
sbb
test
int
rcl
and
jns
shl
(bad)
jb
sbb
dec
clc
sub
js
xlat
jle
mov
pushf
push
push
loopne
push
hlt
popf
pop
sbb
dec
push
ins
inc
fiadd
adc
rcl
mov
mov
pop
stc
psadbw
(bad)
call
and
test
loope
push
lods
xor
xlat
adc
loop
aam
jge
rol
jl
sti
imul
inc
(bad)
xchg
test
ja
mov
jmp
in
gs
jbe
adc
xchg
lds
xchg
xor
jne
push
int3
mov
ds
ror
mov
lds
js
dec
es
call
cwde
mov
pop
lock
push
inc
push
popf
test
pop
int
mov
sahf
sub
pop
or
lods
sbb
xor
lds
cvtps2pi
jecxz
scas
dec
in
dec
inc
gs
cmp
sahf
pop
push
ror
sub
xchg
push
jae
dec
sub
or
jmp
mov
push
pop
mov
mov
pop
dec
push
(bad)
cwde
pop
lods
or
int
jp
in
(bad)
and
sub
rcr
cwde
pop
adc
dec
pop
ja
in
outs
fs
push
mov
lods
and
movs
xchg
jae
leave
xor
xchg
mov
sbb
mov
xor
sub
push
fsubp
adc
dec
imul
jge
adc
fdivr
int
sbb
out
mov
imul
mov
and
xchg
iret
xor
sar
inc
add
test
int3
ins
cmc
inc
pop
lods
cmp
cwde
jne
inc
and
cwde
jmp
xor
inc
outs
jg
pushf
xchg
pop
mov
xor
inc
les
xchg
sub
shr
jmp
mov
rol
sbb
cmp
pop
xchg
xor
jo
mov
add
dec
out
jp
out
(bad)
daa
fisubr
mov
push
movs
nop
lahf
movs
sub
dec
push
jae
rcr
fdiv
xchg
rcl
xor
sbb
aam
adc
xchg
xchg
sbb
and
loope
cwde
xor
or
mov
xchg
mov
xor
pushf
push
inc
push
mov
(bad)
push
xchg
mov
push
xchg
test
sahf
mov
lds
xchg
inc
cmp
or
mov
pop
jne
imul
xchg
pushf
cmp
sub
push
mov
dec
adc
je
cdq
popa
int
sbb
lods
and
inc
in
xchg
mov
(bad)
xchg
and
push
inc
lods
mov
adc
and
out
dec
cmps
push
sub
xor
adc
sbb
in
mov
movs
sub
adc
enter
movs
imul
mov
cmp
nop
pop
xor
shl
jb
adc
add
clc
push
cdq
mov
mov
arpl
ficom
lods
(bad)
mov
cmp
repnz
xor
sahf
lods
mov
and
scas
jb
sub
dec
adc
cli
adc
call
out
dec
call
pushf
mov
ret
ret
jne
sbb
jp
and
sub
ds
push
retf
sahf
imul
push
mov
jns
xchg
hlt
pop
in
sbb
and
test
jns
(bad)
movups
call
enter
lahf
bound
sub
not
push
iret
es
push
es
leave
sti
sub
loopne
in
mov
jp
fldenv
ds
mov
repz
sbb
adc
hlt
push
fidiv
adc
stos
(bad)
mov
jae
jbe
dec
xor
fwait
push
(bad)
jp
xchg
dec
in
leave
and
dec
mov
inc
cmp
je
imul
test
rol
dec
ds
adc
js
pop
or
push
pusha
sbb
or
pushf
or
sbb
shl
push
lods
xor
sbb
sub
cmp
cmp
out
out
outs
push
les
repnz
cmp
inc
mov
pop
xchg
aam
xor
jno
retf
test
mov
ret
adc
xchg
dec
out
inc
int
mov
test
jo
cmp
jmp
fsubr
lods
cmp
hlt
xor
loop
xchg
cmp
lds
sbb
idiv
push
xor
shr
xchg
ins
jns
(bad)
shl
pushf
push
sub
popa
stc
push
xchg
cmp
cmps
xor
adc
in
jecxz
jbe
das
lds
and
mov
lods
or
cmc
scas
push
std
mov
or
inc
loop
es
clc
xchg
jmp
int
pop
adc
mov
pop
push
icebp
push
pop
scas
aam
xchg
in
mov
out
std
setne
aam
es
iret
mov
movs
pop
sbb
in
jnp
call
jae
add
(bad)
movs
movs
fisubr
mov
push
imul
pop
or
ffreep
mov
mov
movs
fwait
push
adc
adc
jecxz
hlt
scas
pop
sti
sbb
mov
aad
mov
fxch
xor
and
jae
sbb
cwde
adc
add
jae
xchg
lea
cmp
aad
jg
outs
pop
push
fxch
xchg
xor
xchg
xor
ret
pop
sahf
or
ins
jg
ja
mov
xchg
mov
or
dec
xor
repz
push
xchg
mov
fmul
cmps
loop
sbb
sbb
dec
ret
add
(bad)
lods
and
test
cmps
and
int
and
lea
mov
pop
ss
add
jmp
into
(bad)
mov
ret
mov
mov
cmps
dec
sbb
mov
mov
scas
movs
es
loopne
jp
mov
(bad)
adc
cmp
fisub
rcl
mov
jo
or
xor
dec
pop
and
repz
cmp
mov
jne
aad
pop
fwait
mov
arpl
cmp
clc
push
inc
or
jmp
mov
enter
out
jno
dec
and
fwait
inc
enter
jo
or
out
jmp
popf
lock
(bad)
mov
jnp
ss
out
xor
aad
arpl
dec
jg
cld
imul
add
test
dec
lahf
mov
sbb
mov
cld
popa
lock
psllw
das
out
sub
mov
call
fwait
or
scas
mov
sbb
xchg
push
(bad)
sbb
das
loop
ret
pop
retf
aad
fcmove
loope
add
xchg
jg
out
push
jno
mov
push
pop
xor
mov
ja
shr
js
sbb
adc
call
mov
xchg
shl
scas
mov
popa
sbb
dec
mov
les
pushf
sbb
jmp
icebp
jb
ret
cdq
xor
add
push
mov
jne
dec
and
arpl
xor
and
inc
cdq
mov
mov
iret
cmps
(bad)
and
aad
mov
retf
loopne
jne
pushf
cmc
inc
adc
outs
xor
pop
mov
dec
mov
daa
ds
sbb
popa
aad
out
sub
push
xchg
cmp
xor
dec
mov
rcl
dec
pop
dec
mov
dec
fdiv
rcl
cmp
(bad)
xor
mov
outs
jecxz
sub
push
sbb
adc
sub
data16
(bad)
movs
push
push
adc
js
mov
aam
cmps
rcr
xor
inc
sub
mov
addr16
stos
xchg
and
(bad)
adc
xchg
mov
or
mov
je
rol
jmp
lea
(bad)
int
pushf
pusha
jp
fwait
bnd
mov
push
lods
inc
jb
push
inc
xchg
and
mov
jmp
(bad)
sub
js
dec
repz
inc
jbe
pop
mov
lock
xor
repnz
ret
dec
test
sbb
mov
out
mov
or
jecxz
out
fadd
out
mov
sbb
pop
aas
retf
jbe
scas
xor
mov
ja
mov
movs
mov
aam
fcmovb
mov
int3
xor
jno
lods
cmc
adc
push
xor
dec
fdiv
mov
xchg
mov
dec
xchg
xchg
mov
mov
jae
inc
and
dec
cmps
mov
xor
sub
ja
jno
push
mov
cmps
add
dec
push
les
sti
mov
jb
ffreep
call
cmp
xchg
mov
add
cmp
jp
push
imul
movs
or
call
push
fld
test
xchg
movs
repz
inc
rcl
mov
pushf
mov
shr
mov
sbb
mov
pop
imul
xchg
fcmovu
mov
dec
jmp
pusha
mov
pop
imul
lds
jp
fld
pop
(bad)
push
es
mov
cld
inc
sbb
mov
pop
jnp
leave
and
aaa
adc
stos
mov
int
mov
dec
aaa
bound
jo
cmp
mov
mov
stos
sub
jne
push
in
fiadd
inc
pop
lods
push
jmp
jbe
test
xchg
lds
sbb
retf
cmp
add
mov
jl
loope
add
sbb
cmp
(bad)
or
cmps
call
fidivr
lahf
sub
jp
jge
imul
dec
cmps
jmp
jno
clc
xlat
les
out
std
fcomp
les
lock
daa
scas
imul
pop
(bad)
xor
repnz
sbb
jae
push
jecxz
pop
loop
aad
fwait
nop
jb
mov
idiv
addr16
fs
and
pop
mov
jae
adc
es
push
aaa
jae
xor
cs
(bad)
xchg
movs
cmp
xchg
jae
cmps
xchg
push
adc
cmps
mov
and
push
call
push
sbb
sub
add
adc
lods
cmp
rol
sub
int3
addr16
imul
scas
aaa
sbb
mov
inc
sub
cmps
pusha
mov
outs
mov
sbb
inc
shr
mov
data16
rcr
mov
fadd
push
mov
dec
inc
es
inc
sub
dec
push
jmp
das
fisubr
loopne
xlat
xchg
dec
lods
in
xchg
outs
jns
inc
mov
dec
sbb
jbe
sbb
loopne
rol
xor
imul
jge
push
clc
and
mov
test
fwait
scas
(bad)
mov
imul
loopne
iret
mov
and
hlt
mov
jl
jecxz
or
aaa
(bad)
xlat
fisubr
pop
pop
aaa
push
sbb
mov
inc
shr
ja
add
mov
dec
sub
add
push
lds
push
mov
fidiv
mov
sub
outs
stos
test
xor
jnp
and
mov
loop
int3
icebp
stc
test
and
mov
pop
mov
sahf
or
mov
mov
fcomp
fadd
push
cdq
test
and
mov
pop
imul
ror
push
js
xlat
adc
cli
xchg
xchg
dec
push
retf
cmovp
or
mov
int3
jbe
daa
dec
sahf
addr16
push
sub
push
jecxz
mov
jge
adc
ss
in
xor
cmps
mov
mov
pop
imul
enter
mov
pop
loope
(bad)
push
or
add
sbb
dec
out
push
push
mov
sub
push
enter
xor
push
push
pop
test
xchg
bound
mov
test
push
pop
inc
mov
sub
xchg
or
sahf
dec
in
pop
mov
addr16
inc
ret
sbb
ins
xor
stos
fs
or
mov
xor
sub
sub
popa
push
mov
ret
add
ins
xor
ins
cdq
sar
(bad)
or
adc
gs
adc
and
xor
and
mov
in
mov
sar
cmp
popf
js
sub
adc
dec
gs
fcomp
adc
lahf
stos
loopne
dec
ret
mov
sbb
pop
add
hlt
sub
jo
test
loop
(bad)
jmp
adc
sub
in
push
cmp
into
dec
jmp
imul
je
xor
jne
int
div
adc
jnp
adc
inc
xor
pop
leave
je
or
push
and
xchg
out
sub
inc
sub
dec
shl
(bad)
shr
xchg
es
mov
sub
inc
sbb
push
mov
or
and
push
cmp
push
xor
xor
(bad)
int
xor
test
jmp
sbb
push
xor
sbb
mov
lods
inc
fdiv
bound
mov
cdq
shl
pop
pop
stos
imul
adc
xor
mov
retf
cmp
or
test
adc
or
xor
dec
adc
int
ja
sbb
cmc
cwde
xor
push
in
push
inc
fsub
test
xor
jns
mov
dec
lods
mov
bound
lds
or
test
inc
lahf
push
(bad)
xchg
or
test
movs
movs
and
sbb
cmp
xchg
ficomp
push
push
scas
ins
fimul
mov
mov
test
mov
push
add
push
fld
mov
add
enter
cmp
or
in
mov
adc
pop
lds
lea
cwde
ret
sar
in
scas
sbb
repz
mov
int
adc
jae
pop
inc
js
inc
inc
inc
stc
imul
xchg
mov
push
push
xlat
mov
mov
rol
sub
push
add
mov
mov
jmp
xor
(bad)
cmp
ins
(bad)
repz
cmc
loopne
das
aam
movs
jl
(bad)
pop
and
and
lds
enter
into
dec
fisttp
cmps
mov
push
or
or
sbb
push
shl
adc
jo
movs
into
sub
arpl
je
jae
lods
cmp
mov
data16
push
add
sub
(bad)
movs
and
(bad)
push
loop
jp
jmp
cvtps2pd
inc
int
or
imul
pop
inc
or
mov
in
movs
add
push
movs
and
lds
push
movs
cmps
bound
dec
sahf
push
mov
or
xchg
test
push
xchg
dec
cmp
test
nop
hlt
es
enter
clc
inc
ret
and
lahf
push
hlt
test
jae
mov
push
inc
mov
inc
or
imul
xchg
lock
dec
ins
add
inc
sbb
stos
pop
mov
call
jmp
psubsw
mov
xchg
icebp
outs
xchg
and
push
mov
daa
sub
sub
pop
and
je
push
push
mov
xor
(bad)
cld
add
scas
aaa
push
clc
pusha
(bad)
and
pushf
xlat
test
cwde
inc
sar
out
push
xor
push
mov
aas
or
pop
(bad)
retf
cmp
les
std
pop
pop
test
lods
pop
push
mov
xchg
sbb
jns
xchg
leave
cmp
inc
jne
dec
mov
sbb
fwait
inc
call
rol
stos
xor
imul
mov
stos
sbb
dec
xor
mov
call
in
xlat
in
ret
mov
add
aaa
test
pop
mov
mov
mov
and
das
imul
inc
xchg
xchg
ds
sbb
es
jmp
xor
fxch
cmp
sub
jmp
daa
pop
jb
ss
pop
xchg
aas
sub
movs
cmp
aad
les
xor
imul
enter
xchg
pop
(bad)
rcr
sub
mov
sbb
js
pushf
push
mov
aaa
sbb
cmps
ins
cmps
imul
jns
(bad)
imul
imul
sbb
hlt
cmps
xchg
push
je
inc
pop
cs
add
jmp
ret
sub
add
xor
xor
add
adc
xchg
sbb
push
jecxz
in
cmps
mov
ja
pop
adc
sbb
cld
sub
pop
jge
pop
mov
div
popa
adc
loope
or
cmp
sbb
pusha
out
sub
sbb
mov
fldenv
ror
fucom
out
(bad)
push
aam
adc
iret
sbb
aam
retf
sar
xor
aaa
shr
pop
inc
xchg
loop
shl
aas
xchg
js
das
adc
pop
sbb
loop
hlt
mov
clc
adc
daa
mov
cdq
ret
lahf
sti
pop
dec
(bad)
fdiv
mov
add
shl
ins
pop
xchg
jae
outs
inc
cmp
xchg
(bad)
dec
mov
cmp
mov
fnsave
ret
xor
ins
jb
mov
cmps
in
int
pop
xchg
xor
adc
inc
mov
cli
xchg
fsub
mov
sub
call
loop
and
daa
shl
cmp
jle
sub
and
pop
or
loopne
cmc
not
mov
pop
push
lods
(bad)
and
sti
jecxz
(bad)
(bad)
icebp
sub
test
dec
cmp
push
(bad)
jecxz
ret
sub
push
(bad)
jno
jle
pop
lods
dec
push
cwde
push
call
retf
push
sbb
pop
xchg
push
enter
ins
cmp
test
mov
inc
ret
push
cmps
popa
push
xchg
int
hlt
xor
xor
popa
int
sbb
push
jmp
push
aad
pop
test
nop
sahf
push
sbb
sbb
sbb
inc
jecxz
mov
push
dec
sbb
inc
jnp
cmps
ret
loop
jle
cld
rcr
or
into
xor
in
out
adc
mov
xor
fcom
leave
stos
xor
cld
jno
jg
mov
gs
fist
inc
xor
and
sub
fst
adc
hlt
aas
sbb
loope
add
cli
pop
retf
jmp
enter
icebp
in
xlat
lock
cld
ins
clc
jbe
or
xchg
sbb
xor
adc
jmp
aad
sbb
jle
jle
in
shl
inc
sbb
sub
call
jo
push
in
dec
cmp
push
lock
sbb
movs
xor
xchg
aaa
adc
xor
cmp
jecxz
xchg
call
xchg
pop
xchg
ret
(bad)
mov
mov
xchg
pop
test
sub
xchg
dec
xchg
jno
dec
inc
pop
adc
xor
dec
addr16
sar
jns
les
cmp
cs
and
mov
and
or
sets
xor
scas
inc
mov
fiadd
push
lock
out
fidiv
add
outs
or
ss
mov
test
mov
sub
dec
pop
sbb
icebp
test
xchg
shr
test
pop
mov
mov
mov
mov
arpl
ja
or
dec
sub
movs
add
mov
js
xchg
repnz
sub
add
adc
sub
and
adc
ins
mov
loop
sub
call
packssdw
pop
dec
aaa
dec
repz
cmps
mov
out
sbb
or
lods
ja
out
push
movs
jl
jecxz
sub
clc
repz
fucomip
pushf
xlat
retf
call
push
push
mov
mov
cmp
movs
jp
mov
push
xchg
jmp
fst
sub
std
imul
mov
sub
out
or
xchg
in
dec
cmp
jae
dec
test
outs
xor
or
test
pop
dec
aad
mov
mov
xchg
cdq
pop
enter
push
or
jge
addr16
xor
mov
dec
dec
shl
inc
adc
push
imul
adc
sar
mov
nop
jne
sahf
push
adc
sub
dec
or
adc
popa
hlt
push
dec
pushf
push
dec
and
rol
jbe
pop
and
les
push
imul
push
mov
and
push
dec
sbb
out
cmp
cmps
push
inc
push
cmp
inc
jmp
xchg
rol
jne
fwait
add
dec
(bad)
lds
push
push
dec
dec
or
scas
inc
lock
mov
dec
xchg
push
cld
pusha
xlat
xchg
xchg
jmp
lods
out
pop
and
pop
mov
je
loop
jge
jl
xor
add
jns
push
mov
jl
jle
mov
shl
inc
loop
pop
repnz
repz
cmp
loop
aad
jl
xchg
xor
dec
mov
cli
xlat
into
pop
fcmovbe
xor
lea
lock
jg
test
arpl
adc
ja
aaa
sub
(bad)
rol
adc
test
mov
xor
jae
(bad)
aad
les
clc
sbb
loope
mov
dec
mov
(bad)
mov
xlat
jecxz
push
sahf
xchg
sub
add
sar
push
aas
jp
cdq
scas
mov
inc
test
ret
arpl
test
xor
xchg
xchg
test
inc
clc
sub
cmp
inc
jge
shl
not
push
mov
xor
es
lods
pop
inc
jbe
and
pop
aad
push
cmps
pop
je
rol
shr
jg
mov
push
paddw
mov
add
or
lock
pop
pusha
lea
sahf
xchg
rol
mov
pop
xor
in
dec
in
cmps
cdq
into
jae
push
mov
inc
es
inc
sbb
inc
push
loopne
fs
test
inc
test
shr
mov
je
arpl
push
call
in
in
imul
data16
or
(bad)
(bad)
mov
out
pop
pop
adc
xor
daa
pop
mov
push
sbb
inc
add
xchg
pushf
in
call
pop
imul
arpl
add
cwde
adc
ficom
dec
cmp
mov
adc
cmp
fisttp
sub
(bad)
dec
xor
dec
lds
mov
icebp
cmc
movs
fimul
cmps
sub
cmp
out
mov
push
in
cmp
inc
sub
movs
add
sbb
cmps
mov
and
add
test
dec
imul
and
jo
es
call
in
push
and
fsubr
(bad)
mov
out
push
scas
aas
or
push
mov
inc
mov
pop
push
xor
mov
xor
add
daa
cli
push
xor
out
jnp
iret
aaa
clc
mov
mov
xor
sub
dec
aas
lds
cmc
int3
out
cld
jmp
imul
ins
dec
(bad)
gs
(bad)
loopne
adc
push
data16
out
mov
out
jb
push
xchg
int3
jno
arpl
jae
mov
push
dec
xor
test
jb
pop
inc
push
test
mov
cmps
rcr
jno
xor
push
movs
stos
call
mov
cmp
cmp
inc
cmp
ss
dec
fld
sbb
daa
cmp
sbb
xor
cs
sub
adc
sub
add
sub
xor
push
pop
sbb
mov
popa
push
mov
fnstenv
mov
xor
sbb
xchg
arpl
mov
pop
jne
fnstcw
push
jp
xlat
aas
dec
mov
xor
(bad)
inc
leave
xchg
enter
inc
mov
loop
jl
cmps
mov
repz
and
movs
and
lods
fnstenv
arpl
jae
outs
pop
xchg
in
shl
xor
xor
test
and
push
mov
jecxz
ret
retf
mov
ficomp
inc
repz
xchg
sbb
add
sbb
ret
pop
and
fmul
mov
mov
push
cmps
bound
popf
pop
outs
mov
jmp
mov
xchg
sbb
ror
rcl
pop
xchg
inc
add
mov
loop
xor
mov
stc
das
mov
pop
push
pop
fnstcw
inc
mov
loope
(bad)
movs
cwde
add
or
xor
inc
push
mov
cmp
xor
jb
in
call
dec
imul
add
mov
sahf
adc
hlt
ins
inc
cli
(bad)
jnp
xor
dec
sbb
add
dec
imul
adc
xor
sbb
jp
not
dec
dec
leave
call
sub
xchg
mov
push
pusha
sub
mov
popa
or
ror
mov
adc
push
pop
mov
inc
jae
add
xor
stc
lea
not
jb
cmp
scas
mov
mov
xchg
mov
test
inc
push
aad
or
add
ja
push
sub
mov
jmp
mov
add
cmps
stos
xchg
lds
imul
sub
mov
mov
mov
fldcw
xchg
mov
lds
dec
pop
mov
sbb
mov
jae
inc
sbb
inc
sbb
cmp
in
fisttp
ins
lahf
jbe
pop
jmp
cmc
fdivr
mov
mov
jg
xchg
push
stc
cmp
(bad)
sbb
out
push
int
sbb
lods
xor
mov
stos
inc
cs
xchg
lods
es
stos
sub
sub
dec
pop
xchg
xchg
call
push
fimul
adc
cmps
push
sub
out
and
jb
sub
test
push
scas
pop
jne
test
cmps
lods
cmp
sbb
cdq
hlt
test
sbb
jmp
mov
xchg
jns
cmp
mov
lods
inc
inc
lds
or
sub
rcl
popf
push
mov
imul
lds
cdq
sub
scas
adc
test
lea
test
inc
mov
add
movs
mov
mov
dec
gs
rol
or
push
dec
cs
xchg
loop
cmps
mov
xor
rcl
in
cmp
dec
adc
in
xchg
pop
mov
imul
fucompp
fs
mov
lea
mov
or
pop
fisub
sahf
lahf
jp
pusha
push
jb
sbb
lsl
push
fwait
dec
mov
jge
(bad)
cs
es
pushf
sbb
sub
adc
push
jnp
sub
jbe
jmp
lock
loop
fisub
lock
dec
sti
mov
mov
pop
jge
push
sahf
sub
push
aam
pop
sti
xor
cmc
mov
leave
or
shr
pop
pop
mov
test
shl
jns
ds
repz
pop
xchg
adc
icebp
dec
jne
stos
inc
int3
jle
lock
jb
shl
sahf
sub
sub
push
adc
repnz
xor
jb
ror
fdivr
data16
int
inc
ins
add
gs
icebp
pop
mov
ret
inc
sub
sbb
and
and
mov
in
scas
xchg
inc
fld
ficomp
(bad)
xchg
push
test
mov
ret
xor
int
adc
mov
ins
adc
and
add
stos
test
in
xor
addr16
dec
retf
xor
push
adc
ins
pop
shl
sub
(bad)
gs
pop
xor
dec
sahf
gs
xor
pop
sub
jns
fild
mov
mov
fadd
jns
pop
mov
cld
push
mov
push
outs
fidivr
aad
sbb
out
cmps
loope
mov
xor
sub
out
lods
dec
retf
pop
pop
test
mov
mov
hlt
ds
dec
es
dec
fcom
xchg
sub
stos
mov
mov
mov
shr
movs
pusha
mov
fsubr
clc
xor
imul
sub
out
xor
push
fisttp
fidivr
out
mov
push
ffree
fidiv
pusha
aas
in
jp
mov
imul
fs
dec
in
cwde
je
fsubr
inc
into
push
sub
mov
aad
pusha
mov
shl
shl
dec
push
sbb
and
push
push
and
cmps
add
push
shl
addr16
and
jae
(bad)
fisubr
in
sub
mov
push
aas
or
test
(bad)
jp
mov
mov
pop
xchg
mov
xor
sub
imul
repz
jno
mov
imul
ins
sub
pop
aam
push
xchg
frstor
xchg
xchg
mov
xchg
dec
sub
cmp
fcom
xor
push
dec
mov
gs
sbb
inc
dec
or
xchg
xchg
pusha
jb
cmps
cmp
cdq
cwde
mov
xchg
dec
jp
lea
aam
ret
xchg
jae
mov
dec
gs
dec
int
fs
test
push
xchg
xchg
lock
cmp
int
popa
dec
popa
call
(bad)
dec
mov
mov
icebp
(bad)
mov
addr16
push
dec
mov
inc
ret
fisubr
sub
or
in
adc
push
dec
jge
push
mov
xchg
fiadd
movs
mov
dec
sbb
jno
popa
ret
cmovb
lods
cmp
push
retf
imul
test
push
mov
fisubr
push
mov
cdq
jno
data16
enter
fld
jg
jmp
mov
and
in
outs
outs
outs
ins
int
ja
or
popf
mov
and
scas
push
mov
xchg
ins
test
hlt
test
arpl
pop
mov
sub
(bad)
fnstenv
retf
pop
mov
clc
ins
and
mov
(bad)
rol
aaa
sbb
gs
cwde
(bad)
daa
(bad)
movs
jnp
les
clc
and
js
out
push
shr
xor
lods
lods
pop
test
inc
test
jmp
xchg
cld
adc
loop
xchg
out
loop
mov
mov
retf
enter
push
fcom
imul
sub
jl
loope
mov
dec
shr
arpl
retf
jae
loope
jge
std
xchg
icebp
pop
call
shl
int3
(bad)
ins
jne
or
and
sub
jge
jbe
aaa
inc
pop
sti
cmp
pop
jl
mov
scas
adc
mov
ja
jne
ss
es
repnz
imul
xchg
pop
jmp
push
fisub
or
outs
xor
in
scas
sub
xor
mov
cmp
cmps
jae
cmp
bound
cli
neg
jno
ins
arpl
xchg
outs
sbb
push
pop
push
pushf
in
push
jp
(bad)
or
fs
stos
les
jmp
and
push
push
imul
cmp
sti
ss
sbb
inc
adc
fsubr
push
inc
mov
(bad)
fisub
cmps
xchg
jl
std
cld
icebp
(bad)
int
dec
lods
in
adc
sub
dec
pop
xor
mov
test
repnz
sbb
mov
add
adc
push
add
mov
dec
and
push
mov
sub
sub
add
push
add
shr
dec
dec
pop
pop
ror
retf
add
je
arpl
(bad)
mov
lods
adc
push
out
jl
cmps
jns
mov
sub
xchg
jne
xchg
mov
bound
js
xchg
bound
mov
xor
bnd
js
outs
les
add
and
xlat
sub
xchg
pop
xchg
daa
add
clc
fld
xor
sbb
xchg
add
cmp
xchg
add
adc
dec
sub
mov
out
adc
adc
call
push
mov
lds
sub
inc
mov
adc
rcl
jp
or
lods
adc
scas
pop
jne
jne
push
or
mov
ss
rol
fs
push
test
lds
mov
xor
call
hlt
mov
nop
jae
push
jecxz
jae
shr
call
stos
dec
add
arpl
jnp
and
and
push
and
movs
inc
sub
push
data16
xchg
lds
fmulp
mov
cmps
mov
push
sub
test
(bad)
test
sbb
shr
dec
enter
ds
push
(bad)
int
sub
shr
(bad)
or
add
imul
sub
push
inc
cmp
retf
and
ret
fisubr
xchg
fwait
cmps
push
xor
push
sub
scas
lods
je
jle
jle
fisub
shl
inc
(bad)
fnstenv
lahf
pop
hlt
out
fiadd
mov
adc
retf
nop
inc
cli
push
ret
pop
add
gs
lods
rol
mov
jo
lds
or
repz
and
ja
sti
dec
and
cmp
jle
clc
mov
lahf
push
cwde
sub
sbb
mov
mov
mov
jecxz
add
dec
movs
arpl
xor
cmp
sub
mov
ja
loope
lds
cmp
jp
loopne
dec
loopne
popf
and
xor
(bad)
mov
jne
lods
cmps
or
inc
push
xchg
jmp
xchg
scas
outs
mov
mov
fs
popa
fs
and
mov
fisub
in
movs
dec
or
mov
dec
icebp
ja
imul
mov
xchg
xchg
ds
inc
call
mov
out
xor
call
cmp
mov
push
clc
pop
pop
lahf
inc
mov
cmp
xchg
test
adc
push
push
sub
sahf
test
xchg
or
jmp
sbb
rcl
sub
push
in
hlt
movs
add
int
ins
sub
es
mov
mov
mov
aaa
sbb
push
or
lock
pop
outs
push
pop
cmp
xchg
xchg
mov
lock
mov
and
jbe
(bad)
ror
sub
push
sbb
aad
into
jmp
out
jmp
outs
inc
jmp
sbb
stos
add
mul
adc
in
mov
fisub
sbb
mov
mov
fs
shl
push
sub
push
mov
adc
mov
adc
jb
stc
dec
pop
mov
dec
xchg
dec
mul
adc
movs
push
mov
gs
push
icebp
mov
pushf
mov
iret
sbb
cld
sbb
test
in
stos
fld
in
inc
int3
mov
call
adc
pop
cmp
popf
test
mov
pushf
sub
xor
push
cli
push
aam
movs
jne
dec
xchg
ins
movs
mov
sbb
mov
loopne
mov
mov
fwait
jp
lods
push
fild
xlat
mov
push
mov
mov
mov
push
pop
fwait
lahf
mov
inc
gs
mov
jo
cmc
test
repz
sub
add
adc
pusha
mov
sbb
sbb
rcr
sub
add
mov
push
xchg
test
stos
gs
sbb
in
xchg
sbb
sub
mov
add
sbb
dec
adc
ret
cvtps2pd
aad
push
gs
outs
push
scas
xor
sbb
aam
pop
xor
dec
mov
shr
mov
pushf
cmps
popa
leave
cmps
mov
inc
push
jmp
mov
leave
test
jno
xor
test
push
dec
fst
adc
les
stos
xor
loop
push
xor
cmp
outs
xchg
cmp
(bad)
scas
daa
rcl
mov
int
out
fmul
ss
jns
jmp
aad
cmp
loop
push
dec
dec
sbb
and
jle
pushf
or
jno
lds
sub
pop
test
cdq
stos
dec
hlt
and
scas
pop
dec
loop
and
shl
loopne
jp
or
jns
sbb
imul
mov
jle
aad
shl
inc
mov
lea
sbb
nop
sbb
cmp
sub
mov
int
repnz
add
ss
rcl
pop
call
push
inc
out
aam
xchg
lds
mov
int
xor
sbb
mov
xor
xchg
sub
test
pusha
aam
jne
and
ins
ds
mov
stos
pop
mov
in
and
and
xchg
call
sbb
les
jecxz
pop
or
sub
daa
xor
add
hlt
scas
pop
push
cmp
(bad)
mov
(bad)
loope
adc
pusha
adc
inc
add
inc
sub
push
inc
adc
add
inc
adc
push
inc
adc
sub
mov
sub
rcr
add
movs
mov
mov
dec
(bad)
jmp
or
pop
adc
call
loope
push
shl
pop
adc
or
inc
mov
mov
adc
jae
jnp
(bad)
aad
js
or
xor
loop
adc
xor
outs
jecxz
and
jmp
push
icebp
pop
xchg
sbb
lods
xchg
dec
jb
mov
mov
lea
and
sbb
mov
push
sbb
add
mov
inc
adc
cmps
push
adc
imul
movs
es
push
das
xor
cmp
data16
mov
dec
cmps
inc
enter
dec
lds
repz
arpl
retf
dec
inc
mov
jne
push
mov
dec
sbb
(bad)
rol
xchg
sbb
mov
sub
test
inc
push
mov
cmps
lods
and
je
test
retf
int
mov
hlt
cdq
das
cmps
push
mov
pop
int
in
mov
cmp
pop
sub
push
ret
or
aam
push
adc
lgs
les
or
stc
push
cmp
inc
retf
xchg
(bad)
pop
push
cmp
mov
pop
mov
dec
push
sub
ret
mov
jno
sub
jnp
test
sub
dec
ja
xor
xchg
pop
nop
call
shl
test
outs
pop
adc
mov
xchg
out
cmps
inc
jo
xchg
nop
add
mov
xchg
ficom
pop
test
sbb
cwde
enter
sbb
imul
and
cmp
cmp
mov
jge
shl
jecxz
mov
sbb
cmp
fbstp
mov
in
call
icebp
aaa
ret
jbe
mov
repnz
mov
int3
shr
mov
cmp
je
mov
nop
push
sbb
(bad)
mov
cmps
mov
neg
aaa
aam
and
mov
mov
add
fisttp
ja
mov
shl
dec
out
dec
stc
cdq
pop
ins
das
pop
(bad)
push
jl
xchg
cmp
je
popf
imul
mov
fs
ret
or
push
fisttp
xor
mov
dec
pop
mov
sbb
repz
aam
ds
ins
loopne
mov
push
mov
pop
mov
nop
gs
jnp
test
mov
ds
shr
in
scas
ins
lods
test
jl
out
repz
into
jae
ins
push
out
jecxz
mov
js
mov
pop
push
or
xor
and
cmc
dec
out
sub
pop
dec
cmps
into
retf
xchg
hlt
xor
push
icebp
or
mov
adc
or
enter
pop
xchg
push
movs
mov
jge
loope
jl
inc
adc
sbb
sub
lods
jns
mov
xchg
retf
push
mov
jns
sahf
inc
inc
andnps
cmp
lods
movs
in
(bad)
cmps
sbb
out
xchg
pop
xchg
pop
dec
rcl
and
jnp
shr
(bad)
shr
adc
mov
push
pop
xchg
daa
mov
dec
mov
pop
inc
dec
dec
movs
dec
mov
(bad)
dec
push
xor
or
dec
jo
pop
xchg
mov
outs
ficom
dec
or
cwde
in
jl
add
jge
add
xor
fcom
inc
add
dec
sbb
pop
mov
pop
and
es
movs
shl
adc
push
and
inc
xor
lahf
mov
ds
je
push
sbb
xchg
add
cmps
mov
(bad)
outs
xchg
retf
les
add
xlat
icebp
movs
pop
sub
test
aaa
movs
sub
and
mov
mov
push
lock
enter
icebp
cmc
cmps
xchg
push
inc
cmps
out
retf
sbb
mov
shl
jbe
aad
and
mov
test
retf
mov
cmp
sahf
add
cmps
mov
out
dec
pop
pop
call
(bad)
pop
into
cmps
and
xchg
pop
repnz
xor
ins
xor
pop
aad
jecxz
and
test
dec
lahf
pop
inc
mov
or
xor
jmp
push
lea
dec
jmp
dec
in
and
test
ret
dec
(bad)
or
in
xor
jg
ds
bswap
mov
aam
pushf
aad
pop
xchg
jmp
ins
int3
inc
push
add
mov
jecxz
xor
aaa
mov
enter
push
call
cmp
push
stos
push
and
push
xchg
xor
mov
leave
xchg
fldcw
pop
popf
xchg
push
mov
lds
xor
xchg
sbb
push
int
retf
sahf
push
jle
or
sub
jbe
mov
adc
pop
xchg
cmp
adc
inc
pop
cmp
aam
push
cmp
jne
or
sbb
push
sahf
dec
sub
or
jae
xor
adc
xchg
repz
je
outs
lods
gs
push
je
scas
xor
push
stos
(bad)
cld
mov
ss
cli
push
push
xor
mov
sbb
(bad)
in
arpl
xor
pusha
push
push
sub
(bad)
loop
pushf
jae
mov
rcr
sbb
pop
cwde
mov
rcr
mov
lahf
into
sahf
inc
test
pushf
out
ss
jae
jle
push
lods
sub
pop
cmc
fwait
inc
call
adc
lods
fnstenv
or
and
mov
xor
dec
cmp
imul
push
add
lea
jb
xchg
push
cwde
push
imul
dec
add
jmp
sub
movs
bound
rol
mov
(bad)
sbb
sbb
mov
push
dec
mov
xchg
sub
mov
or
jb
dec
dec
adc
inc
add
xchg
or
push
mov
pusha
mov
movs
add
push
add
push
add
push
mov
add
lahf
jp
sub
icebp
lds
pop
sbb
int
or
push
cdq
mov
gs
push
test
mov
jne
cmp
lods
and
(bad)
fstp
push
fdiv
gs
test
jl
pop
or
sbb
int
pop
call
call
xor
push
stos
xchg
and
lds
cdq
dec
pop
xor
xor
jb
movs
dec
in
adc
pop
xor
or
sub
cmp
sub
out
cmp
popf
inc
and
mov
ror
add
cmps
sar
shr
mov
jo
rol
sbb
sub
sub
data16
mov
mov
push
shl
mov
cmp
dec
imul
test
adc
mov
xchg
xchg
xor
add
sub
(bad)
push
clc
test
mov
adc
in
movs
loope
cmps
sbb
ror
lahf
paddsb
jecxz
sbb
mov
adc
addr16
xchg
out
add
xor
pop
pop
(bad)
mov
and
pushf
xlat
jno
jl
mov
popa
or
sub
mov
ds
mov
jae
jns
dec
popf
(bad)
xchg
ds
sub
out
pop
add
adc
cmp
xor
inc
jge
loop
es
les
int3
fwait
pop
cmp
jle
movs
sar
push
add
sar
dec
adc
push
mov
fsub
repz
hlt
fist
ins
stos
cli
push
sbb
xor
(bad)
test
(bad)
jmp
aam
fidiv
sbb
(bad)
push
movs
leave
mov
aad
cmp
movs
cmp
mov
das
pusha
rol
(bad)
mov
sub
ja
pop
sbb
mov
xor
sub
xchg
scas
mov
mov
test
sti
and
fwait
in
cli
les
mov
dec
cmp
add
call
dec
icebp
inc
scas
int
mov
iret
inc
dec
div
adc
sar
mov
jbe
test
xchg
cs
mov
add
or
in
aas
mov
imul
les
and
cmp
mov
in
je
xor
scas
lahf
jae
or
cmps
scas
pop
nop
or
scas
jns
or
daa
lods
sbb
loopne
pop
push
fmul
add
push
mov
in
outs
hlt
enter
or
mov
les
mov
jmp
mov
test
cmps
jp
inc
dec
push
in
out
pop
out
mov
or
mov
test
mov
mov
fst
stos
aaa
cmp
mov
pop
aas
xchg
in
out
outs
sub
sub
adc
mov
mov
lahf
adc
pop
dec
mov
int3
fcomp
aaa
ret
cmp
xor
add
(bad)
pop
pmuludq
(bad)
push
push
add
add
arpl
jmp
xchg
mov
(bad)
fistp
sbb
in
ficomp
mov
jle
jmp
mov
and
ins
inc
ins
push
pop
aaa
dec
(bad)
pop
mov
jbe
mov
mov
lock
sub
sbb
add
push
dec
aad
gs
adc
aaa
xchg
sbb
jno
dec
cli
rcl
adc
xor
nop
pop
pop
repz
cmp
je
push
xor
add
stos
jp
popf
cmps
jb
add
and
sti
fst
ret
retf
adc
xor
shl
pusha
sub
xor
adc
mov
adc
inc
int
adc
jns
popf
mov
lahf
mov
mov
loope
leave
cmps
pusha
out
lds
pop
mov
mov
cmps
popa
pop
jecxz
enter
aas
ins
sbb
or
dec
and
push
fwait
inc
movs
and
in
lds
xor
adc
sub
add
dec
inc
mov
lods
out
mov
inc
xor
or
or
call
sub
cmp
xchg
push
pop
mov
(bad)
jnp
int3
dec
xor
sahf
cmps
nop
lods
daa
test
mov
nop
lods
cmp
js
das
mov
mov
mov
jp
movs
inc
nop
xchg
pop
addr16
repnz
sbb
into
lgs
sub
mov
scas
js
sub
aas
mov
and
jbe
scas
xor
pop
jae
cmps
sub
call
enter
push
pop
movs
push
xchg
mov
or
movs
mov
lock
and
push
ret
(bad)
daa
ds
push
sub
cmp
mov
mov
mov
and
xor
in
push
xchg
test
dec
hlt
test
push
or
dec
mov
nop
imul
(bad)
cmp
pusha
mov
iret
cmp
add
push
test
in
mov
sub
or
adc
jnp
xchg
not
imul
jmp
push
stc
ins
and
mov
mov
dec
xchg
and
add
dec
adc
jbe
mov
retf
or
int
retf
push
into
cwde
mov
scas
adc
inc
pop
add
push
aas
jbe
push
fwait
inc
inc
gs
mov
cmp
fnstsw
push
mov
out
adc
sbb
adc
cmp
lods
call
fsub
push
add
xchg
sub
push
das
pushf
cmp
fdiv
mov
(bad)
pop
shl
fs
mov
xor
sub
push
dec
(bad)
mov
inc
pop
or
mov
out
movs
pusha
dec
aaa
leave
addr16
mov
std
stos
cmp
lods
mov
sti
int3
pop
fisub
call
xor
adc
pushf
ins
and
(bad)
jl
aad
sub
cdq
fld
ins
hlt
mov
iret
ret
mov
sub
imul
je
jmp
ins
xchg
jns
(bad)
dec
arpl
ds
sub
inc
imul
add
fwait
dec
clc
xchg
inc
addr16
movs
fcomp
mov
xchg
xchg
inc
pop
cld
add
mov
ror
xor
push
mov
pop
icebp
shr
dec
stos
imul
enter
ss
mov
or
lds
xchg
pop
shl
addr16
cmp
test
xor
xchg
shr
call
xor
push
sbb
pop
daa
jo
fsubp
ds
pushf
lea
int
adc
and
pop
mov
inc
cmp
xor
pushf
shl
ja
xchg
mov
leave
ins
xor
sbb
mov
inc
shr
xchg
lods
iret
cmps
adc
movs
mov
fcmovnu
das
and
mov
stc
out
imul
xchg
or
int3
rcl
adc
dec
dec
inc
or
xchg
push
inc
dec
add
adc
inc
add
adc
inc
add
adc
loop
jnp
fadd
add
add
adc
add
mov
mov
inc
lods
jp
pop
add
jle
xor
movs
popa
movs
test
xchg
adc
push
push
mov
mov
cmp
push
dec
xor
aam
loop
mov
add
and
mov
leave
movs
fist
inc
cmps
or
jne
fcom
jp
and
adc
push
(bad)
lea
ret
push
stos
mov
sub
nop
fldenv
mov
test
enter
jmp
inc
cmps
jmp
jecxz
sub
dec
adc
movs
inc
push
call
xchg
sub
outs
xchg
leave
mov
push
movs
sbb
sbb
mov
or
sbb
call
nop
mov
dec
addr16
dec
in
sbb
inc
dec
xchg
dec
retf
fidiv
push
dec
stos
es
loopne
add
jne
xor
sub
jmp
pop
pop
(bad)
mov
mov
gs
pop
mov
das
mov
inc
add
adc
rcr
sub
leave
adc
pop
repnz
mov
and
mov
adc
mov
push
cmp
mov
mov
sbb
call
ret
inc
mov
mov
and
jp
mov
test
cmc
scas
pusha
icebp
xchg
frstor
inc
js
mov
test
cmps
dec
push
push
cmp
scas
push
push
xor
dec
mov
jecxz
shl
mov
(bad)
leave
fidivr
hlt
ins
xchg
inc
xor
loope
dec
rcr
sbb
inc
dec
rcl
out
call
test
adc
push
mov
rcl
movs
mov
(bad)
mov
int
or
clc
adc
mov
adc
xor
xchg
ins
xor
ins
loope
dec
xchg
rcl
fisubr
ja
retf
aam
dec
push
push
(bad)
ror
loopne
dec
mov
jg
cld
out
mov
sbb
xor
mov
mul
lods
scas
jg
js
push
rcr
out
push
pushf
inc
dec
stc
pop
imul
mov
and
aas
(bad)
mov
mov
pop
push
call
aas
cmps
push
push
cmps
dec
adc
and
enter
rcr
dec
ja
xchg
jae
aad
xor
mov
pop
sbb
pop
aam
push
jnp
lds
rcl
loopne
xchg
push
bound
xor
push
mov
mov
dec
imul
retf
stos
retf
fcmovne
mov
xchg
daa
mov
(bad)
xor
sub
std
mov
jle
icebp
xchg
sub
mov
sbb
sub
test
cwde
jle
(bad)
cld
bound
ror
inc
ss
dec
aad
cmp
retf
xor
pop
and
xchg
mov
loop
and
inc
scas
clc
jo
sbb
mul
sar
push
(bad)
jmp
je
jecxz
in
(bad)
pop
in
aam
mov
add
aas
sbb
jns
jnp
xlat
mov
mov
js
push
repnz
ret
lahf
out
dec
mov
xor
cmp
pop
sbb
dec
add
push
inc
call
fs
lock
in
out
test
jno
mov
fld
loop
scas
xor
out
mov
fldcw
xchg
pop
pop
enter
call
rcr
adc
push
ins
push
mov
outs
xchg
bnd
sub
jmp
pop
movs
cmps
ins
add
cmc
cmps
mov
aad
in
jae
push
jae
aaa
xchg
mov
jmp
jne
popa
jae
inc
ret
pop
ja
sub
arpl
enter
cmp
fstp
lods
ror
imul
jbe
ja
push
xor
inc
enter
inc
into
push
dec
mov
xor
shl
movntq
mov
inc
push
icebp
mov
push
loop
sti
add
xor
push
movs
out
ins
and
xchg
adc
(bad)
cld
imul
xchg
into
pop
(bad)
xor
xor
jl
mov
mov
sti
or
dec
sub
scas
dec
dec
in
outs
add
cdq
lds
xor
movs
aaa
and
fldln2
cmps
mov
add
stos
(bad)
dec
rcr
push
mov
mov
cdq
inc
imul
pushf
pusha
push
in
push
div
push
in
sbb
sub
sub
xor
jbe
mov
and
sub
and
mov
inc
jmp
adc
movs
stos
nop
xchg
dec
sub
and
je
test
lods
dec
lea
mov
retf
jmp
xor
lods
inc
xor
adc
mov
mov
push
mov
dec
mov
sub
push
shl
gs
adc
leave
mov
or
(bad)
fidiv
iret
(bad)
or
or
xchg
mov
adc
cmp
jno
push
push
inc
pop
add
mov
mov
js
mov
mov
shr
shl
cs
test
sbb
and
dec
(bad)
push
or
pop
sbb
mov
pop
icebp
test
dec
sub
or
cli
aam
sub
or
inc
addr16
mov
dec
mov
push
popa
push
xor
pop
popa
push
xor
pop
sbb
mov
ror
mov
sub
push
push
adc
lahf
xchg
inc
jae
imul
lods
(bad)
int
sahf
enter
cld
pop
mov
test
push
aaa
addr16
mov
mov
mov
cmp
imul
popa
sub
dec
clc
mov
fbld
dec
jne
xor
dec
mov
push
gs
and
xor
pop
jp
in
jmp
ss
adc
cmps
adc
push
xor
dec
jle
lods
and
shl
ds
(bad)
pop
push
adc
xchg
push
mov
inc
imul
call
and
cmp
xor
nop
cvtps2pd
xor
push
sub
or
lea
popa
std
xchg
push
retf
xchg
in
(bad)
outs
jl
ret
retf
repnz
rcr
into
jae
aas
test
mov
cwde
lods
in
push
adc
sub
dec
ja
hlt
movs
test
pop
adc
jp
xlat
jo
jecxz
movs
lds
add
cmp
mov
add
dec
iret
pop
mov
xchg
sub
out
addr16
mov
jae
popa
ins
sbb
imul
mov
mov
lds
pop
xor
sub
mov
cwde
ret
mov
mov
popa
add
rcl
in
dec
jnp
addr16
xchg
leave
int
mov
push
fild
mov
inc
out
and
jmp
xor
dec
sub
jmp
mov
xchg
dec
inc
(bad)
mov
call
or
ret
(bad)
mov
and
dec
mov
pushf
cmps
add
dec
dec
repz
xcrypt-ofb
cmps
sub
js
inc
xor
adc
sub
stos
and
(bad)
xchg
mov
xor
mov
popf
mov
add
push
xchg
or
push
call
add
inc
test
push
adc
or
pop
mov
dec
push
test
push
cmp
icebp
sahf
out
scas
in
dec
arpl
je
jo
xor
sbb
inc
lahf
int3
sar
adc
or
jne
push
sahf
sub
push
inc
movs
push
out
inc
sbb
sub
push
imul
or
sub
loopne
mov
mov
xchg
loop
popf
cmp
enter
cmp
mov
je
mov
shr
sbb
adc
and
mov
inc
fnsave
out
das
vmread
dec
xchg
dec
xor
imul
out
mov
dec
and
mov
lods
hlt
sti
jo
nop
add
jnp
cmp
repnz
(bad)
sbb
xchg
sub
dec
lock
and
clc
movmskps
es
bound
and
cs
pop
sbb
outs
rcr
hlt
mov
adc
pop
clc
mov
sahf
pop
ins
loope
pop
dec
or
ret
jecxz
aas
jbe
pushf
sbb
push
pop
cmps
js
push
mov
dec
aam
daa
mov
outs
out
sub
jno
dec
leave
sub
mov
push
and
pop
(bad)
(bad)
jge
aam
lahf
out
pop
xchg
mov
das
xchg
mov
jno
xchg
and
adc
iret
add
ins
xor
and
lea
das
les
mov
retf
xor
out
ror
jge
dec
into
int
pop
jle
mov
mov
xchg
cmps
pop
shr
pop
xor
lock
push
pavgw
adc
mov
std
bound
sahf
sub
jg
fwait
in
pop
pop
mov
outs
jecxz
cmp
out
cmp
fisttp
push
jnp
inc
pop
lods
nop
sbb
cli
xlat
(bad)
push
lds
cmp
aas
inc
mov
sub
jle
dec
sub
adc
ror
mov
ins
push
imul
lock
call
cs
jmp
outs
clc
daa
(bad)
mov
out
mov
hlt
mov
enter
xchg
jnp
(bad)
retf
(bad)
(bad)
loope
std
jge
cmp
mov
es
cli
(bad)
cld
and
cmp
inc
ja
and
pop
mov
sbb
mov
das
and
pushf
les
push
(bad)
popa
jmp
add
jbe
aaa
repnz
sahf
and
sub
hlt
icebp
sti
cmp
fucomi
pop
fidivr
push
mov
movs
in
pop
mov
gs
sub
xor
cs
sbb
inc
movs
and
inc
(bad)
scas
push
adc
sub
xchg
in
movs
sbb
add
imul
call
popf
xlat
jno
lods
cs
adc
mov
or
xorps
push
mov
add
fnstcw
cmps
jne
cmp
or
jle
pop
dec
test
lods
stos
cdq
cs
and
push
in
jmp
int
mov
jae
xor
cmp
sbb
ret
sub
push
mov
xlat
call
cmp
popa
jno
pop
adc
and
add
mov
mov
xor
jle
pop
inc
arpl
test
popa
inc
inc
scas
(bad)
cwde
dec
jge
jne
jbe
out
into
mov
aad
pop
jbe
push
adc
stc
xchg
shl
cmps
sbb
fld1
enter
inc
sahf
and
mov
xor
sahf
xor
cdq
mov
sti
jns
pusha
out
mov
stos
inc
dec
mov
sahf
mov
adc
xor
int3
js
push
push
push
cwde
int
sub
repz
aas
fld
(bad)
in
(bad)
out
iret
scas
sub
cmp
xchg
dec
sbb
or
adc
inc
cwde
push
cmc
jle
cmp
mov
jmp
or
in
push
mov
daa
mov
sub
mov
jl
sub
rol
cmc
loop
in
(bad)
jae
cmps
mov
jb
loopne
push
jo
sbb
icebp
mov
(bad)
sbb
add
fidivr
push
leave
mov
test
jl
movs
bound
jb
stos
add
dec
push
jmp
and
xchg
xchg
dec
(bad)
cmp
lea
sbb
sub
xor
mov
xchg
out
mov
sub
add
cmps
adc
mov
push
dec
sub
movs
mov
inc
push
mov
fisub
jae
xchg
push
xchg
test
push
stos
bound
mov
pop
fisubr
ret
imul
fmul
cmp
leave
push
ret
add
js
sbb
xor
mov
push
mov
mov
out
push
ror
frstor
add
adc
retf
jp
addr16
out
or
movs
mov
retf
cmps
xor
cmp
into
mov
mov
push
mov
test
arpl
mov
pop
sbb
xchg
xchg
push
xor
imul
lds
retf
scas
dec
xor
pop
fs
stos
fcomp
mov
xor
mov
mov
add
(bad)
(bad)
jle
push
xchg
mov
pop
movs
popa
cli
add
adc
in
dec
mov
lods
xor
fstp
and
mov
xchg
aaa
push
arpl
inc
test
mov
jno
aam
cmp
sub
mov
gs
fimul
lds
inc
ret
mov
mov
aad
fdiv
sbb
push
lods
cmp
cwde
fild
cmp
icebp
mov
(bad)
xchg
mov
iret
cmps
pop
inc
and
push
push
int3
rcr
add
cmp
jnp
push
ds
out
adc
inc
mov
xor
or
cmp
fild
js
or
call
pop
imul
and
out
rcl
retf
dec
dec
pushw
aad
es
push
xor
mov
in
ins
cwde
ret
lds
adc
sub
add
adc
(bad)
ins
mov
dec
push
mov
mov
cmp
cmps
push
xor
xchg
add
loopne
mov
fcmovnbe
xor
add
adc
js
scas
add
ds
in
mov
sub
aam
daa
and
cmps
jge
mov
movs
push
and
xor
mov
fadd
xchg
nop
adc
cmps
bound
and
iret
bound
jmp
outs
in
cmp
rol
sub
jmp
loop
call
sub
inc
pop
mov
test
mov
dec
mov
mov
xchg
mov
sub
push
add
push
ins
outs
rcl
jmp
mov
xor
xor
push
out
gs
push
lea
hlt
popa
jnp
xor
mov
fstp
mov
mov
inc
mov
cmps
and
int
jns
adc
dec
cpuid
mov
test
imul
inc
cmp
loop
adc
push
ja
mov
ss
push
push
mov
int
sub
push
sahf
push
sub
stos
mov
xchg
cmp
test
inc
pop
cwde
sbb
xchg
fldenv
xchg
call
adc
xor
push
inc
(bad)
movs
dec
cmps
push
call
inc
jmp
in
and
mov
repz
jmp
push
mov
cmp
xchg
cmp
test
movs
jns
adc
push
mov
cmps
push
les
cmp
leave
stos
sbb
adc
sub
inc
les
pop
mov
fist
loop
cmp
(bad)
mov
xor
(bad)
mov
cmps
and
fimul
rcr
fld
push
lea
push
into
jp
enter
and
movs
sar
dec
jns
xor
adc
mov
addr16
test
xchg
sbb
xor
sbb
cli
pop
sar
pop
je
sbb
lods
mov
adc
sbb
cmp
shl
pusha
jge
mov
test
shl
and
or
test
inc
sbb
pop
pop
cld
inc
clc
add
das
je
mov
sbb
cmp
xchg
stos
inc
push
pop
mov
scas
sub
jle
jle
xlat
mov
and
sahf
or
scas
jl
mov
retf
sub
cmp
jecxz
push
inc
push
icebp
cmp
xchg
jae
jbe
stc
call
xor
sbb
sar
dec
dec
ret
mov
leave
push
push
xchg
aas
inc
pop
or
ror
test
or
mov
push
js
sub
mov
cmp
jge
inc
cmp
fcom
add
push
cld
(bad)
clc
aaa
sbb
movs
xchg
mov
jno
inc
retf
scas
enter
sub
out
or
loop
aas
fidivr
pop
mov
clc
aam
jecxz
lahf
in
retf
iret
push
xchg
push
js
push
out
in
cdq
cmp
sahf
xchg
ds
icebp
cmps
mov
and
mov
xor
ror
push
scas
jns
push
push
pop
adc
sub
xor
test
ret
mov
les
call
inc
xor
xchg
pusha
aaa
dec
retf
sub
jl
outs
push
jp
pop
pop
sbb
pop
imul
(bad)
mul
popa
std
imul
arpl
icebp
data16
dec
repz
pop
inc
push
test
mov
sub
scas
mov
lock
fwait
ds
add
mov
add
inc
add
mov
inc
les
xchg
jmp
xor
scas
xchg
mov
mov
fwait
shl
mov
outs
sub
push
xchg
fmulp
lods
push
div
xchg
sti
inc
add
(bad)
and
xlat
add
mov
stos
fs
pop
je
dec
sbb
ficomp
dec
xor
jo
jg
lock
fcmovnbe
mov
(bad)
jecxz
psrad
(bad)
scas
dec
(bad)
scas
(bad)
pop
out
loope
int
adc
pop
fistp
(bad)
shl
nop
jmp
jg
xor
popa
cld
bsf
cld
dec
scas
xchg
jbe
push
inc
sbb
repnz
cmc
stos
pop
sub
repz
outs
inc
(bad)
dec
cld
push
cmp
mov
jmp
repz
add
aas
(bad)
cmc
jge
mov
jno
into
pop
repnz
arpl
pop
push
cmc
pop
je
mov
xchg
sbb
mov
(bad)
aam
pop
retf
lock
ret
aas
adc
(bad)
in
mov
xchg
(bad)
hlt
js
add
cmp
sti
and
jp
adc
js
les
sub
outs
vpsrld
imul
push
jbe
ret
dec
mov
std
(bad)
mov
(bad)
push
sub
cld
(bad)
cmp
cmp
pop
push
pop
out
in
int
lahf
aam
mov
icebp
ins
jbe
inc
aad
sbb
xchg
xchg
cmp
fs
fwait
sbb
hlt
into
sub
shl
loopne
ret
push
repnz
aas
adc
arpl
jmp
hlt
sub
jne
imul
lahf
scas
jmp
push
pop
add
ror
jae
push
cmp
lea
in
inc
cmp
rcl
repnz
jmp
sbb
test
or
add
jecxz
sahf
sahf
xor
aam
or
fcom
addr16
loopne
mov
sti
mov
stos
jl
mov
dec
inc
ja
xor
test
jle
lock
outs
das
jne
adc
sbb
shr
fcomi
jae
(bad)
scas
sub
into
movs
xor
lods
outs
popf
cmc
hlt
push
outs
lock
out
jg
mov
data16
arpl
jmp
mov
scas
movs
inc
retf
mov
imul
pop
sub
rcr
mov
xor
aam
js
nop
scas
xor
ins
movs
popw
and
dec
mov
push
mov
sub
xchg
scas
imul
cs
dec
jge
dec
je
and
int3
je
cwde
add
movs
sbb
mov
jbe
stos
sbb
xor
sub
xor
push
xchg
pushf
jno
and
mov
movs
jae
xchg
aad
adc
sbb
rcr
jbe
in
and
(bad)
out
aam
adc
popa
lds
pop
inc
push
fsubr
jp
scas
ret
push
enter
xchg
xchg
call
push
outs
popf
mov
mov
or
dec
in
gs
xor
pop
pop
out
div
shl
stos
adc
mov
mov
sub
sub
mov
cdq
rcl
push
popa
push
mov
mov
in
mov
aam
pop
or
popf
les
call
int
push
dec
movs
hlt
stos
push
sub
sbb
scas
xor
cmp
imul
dec
test
and
cmp
and
(bad)
adc
xchg
jp
lahf
(bad)
jmp
jo
jae
xor
fsubr
(bad)
xor
xchg
xor
jnp
outs
dec
lods
xor
nop
jne
pop
imul
inc
pop
jnp
call
imul
ins
cmps
push
or
or
mov
xchg
mov
loope
enter
add
jb
loopne
dec
jmp
pop
bound
int3
dec
add
inc
add
stos
ss
loop
in
cmp
mov
jmp
xchg
shr
cmp
pop
mov
push
dec
jae
xor
push
pop
test
es
adc
out
imul
adc
rcl
cld
xor
in
cdq
sbb
mov
cmps
mov
int
cmps
les
dec
not
movs
mov
sub
pop
xor
cs
mov
mov
nop
(bad)
jmp
mov
adc
dec
sbb
icebp
dec
scas
jecxz
push
ins
dec
pop
aam
xor
cs
xor
pushf
arpl
stos
ficom
loope
sbb
push
in
inc
and
add
push
dec
stos
js
fs
(bad)
cmp
mov
adc
jo
or
dec
jae
xor
mov
test
jno
pushf
inc
adc
test
inc
push
mov
mov
jge
out
xchg
out
inc
sub
(bad)
xor
adc
inc
adc
mov
daa
jno
movs
push
test
sbb
push
bound
sub
mov
dec
imul
adc
inc
xor
xor
mov
sub
mov
mov
add
mov
add
stos
pusha
shr
cmps
popf
test
imul
out
pushf
(bad)
mov
pop
stos
neg
xor
mov
inc
dec
inc
mov
scas
mov
int
cmp
dec
cmp
push
sub
lds
mov
push
and
jne
test
dec
pop
inc
xor
mov
shl
cmp
movs
inc
or
mov
sub
sbb
dec
or
call
int
xchg
call
sub
cmp
push
add
cmps
inc
daa
pop
js
loop
push
or
pop
and
add
lock
cmp
mov
dec
outs
dec
xor
fdiv
fcmovu
mov
cmp
mov
call
iret
sbb
xor
push
je
cmp
int
movs
scas
jns
push
push
shl
xchg
shl
fnstsw
and
add
movs
dec
aam
ins
enter
call
inc
pop
mov
in
push
cmps
cmp
ins
xor
sub
xchg
and
retf
inc
jno
repz
mov
mov
mov
adc
xor
loopne
dec
xchg
inc
push
adc
sub
aas
jb
adc
add
loope
xchg
vcvttss2si
inc
loope
in
inc
ins
test
es
loop
adc
jo
movs
mov
mov
das
les
xlat
dec
jl
mov
repz
add
int3
xchg
in
sbb
test
jle
imul
repnz
pop
(bad)
lods
cli
push
xchg
cmp
test
in
shl
mov
icebp
sub
mov
lock
mov
add
loopne
out
aas
addr16
sbb
pop
push
mov
xchg
out
cmp
sar
mov
sbb
lea
or
mov
mov
sub
ds
int
and
push
jle
xchg
xor
cmp
fxtract
cld
jg
adc
gs
daa
clc
cli
adc
dec
mov
ds
das
clc
sub
jg
push
mov
or
call
retf
dec
test
xchg
lahf
mov
cs
xchg
test
hlt
add
sub
cmc
popf
movs
mov
pop
fs
int
sahf
and
inc
imul
loop
inc
(bad)
movs
outs
clc
jg
cmp
mov
rcl
dec
shr
mov
or
sbb
lods
cmp
imul
xor
push
mov
in
je
clc
push
dec
jmp
(bad)
call
icebp
lock
ret
popa
popf
jg
neg
imul
or
movs
jnp
fidivr
inc
lock
int
scas
out
cmp
inc
int
pop
dec
je
arpl
hlt
out
add
cld
je
dec
femms
fadd
ins
fdivr
mov
xlat
cs
jg
hlt
cmp
stos
popa
clc
jns
or
xchg
mov
in
push
pop
pop
mov
clc
call
fisttp
or
adc
jle
stc
mov
clc
bound
mov
sub
jp
das
mov
lahf
mov
cmp
shr
es
mov
cmps
fstp
je
inc
or
ret
rcl
mov
mov
jne
jle
push
pop
push
adc
(bad)
push
repz
jbe
test
jge
retf
clc
mov
lock
xchg
cdq
std
gs
clc
push
push
cld
pop
fdivrp
add
icebp
dec
in
ins
jecxz
add
fistp
add
sub
stos
cmp
mov
cmc
jnp
sahf
repnz
sub
jmp
daa
cmp
je
mov
cmps
push
fisub
dec
in
mov
or
icebp
cmps
test
xchg
mov
(bad)
cmp
clc
xor
ficomp
push
call
(bad)
jecxz
mov
lods
mov
mov
or
cmp
aas
js
popa
clc
ss
icebp
shl
in
jae
inc
into
adc
dec
in
shl
dec
stos
js
lock
inc
pop
fldenv
xchg
rol
mov
scas
out
jecxz
popf
push
jl
cmps
push
stos
ficomp
inc
or
xchg
mov
push
scas
jno
jnp
mov
dec
add
mov
jmp
xor
loopne
jns
sar
sub
out
das
ins
lods
out
out
xor
mov
sub
sbb
xchg
not
aaa
sbb
std
jns
inc
shl
pusha
popa
dec
(bad)
sbb
call
or
add
in
sbb
sbb
retf
ficomp
mov
mov
jge
(bad)
pop
adc
aad
dec
cmp
jle
(bad)
aas
fimul
jmp
int3
xor
cld
sbb
xchg
lds
push
xlat
mov
icebp
add
pop
pop
in
or
jg
jle
out
mov
retf
xchg
add
jmp
outs
xor
or
pop
pop
pop
icebp
test
cdq
movs
dec
les
push
jbe
sbb
mov
add
or
sbb
mov
xchg
jecxz
das
dec
sar
push
test
push
dec
mov
pop
xchg
(bad)
jmp
pop
(bad)
fild
(bad)
lods
aaa
sbb
popa
pop
inc
xor
inc
in
in
fisub
fdiv
xor
lods
es
loop
and
and
dec
(bad)
push
addr16
sub
inc
dec
xor
nop
addr16
dec
scas
inc
dec
mov
sub
mov
retf
mov
ret
xor
call
xor
(bad)
push
mov
push
popw
fldenv
sti
test
push
mov
repz
jle
enter
fs
push
aas
cmp
jg
jb
push
dec
loope
jmp
mov
fsub
mov
lods
std
popf
mov
iret
jg
push
(bad)
ss
jmp
lahf
data16
add
add
jecxz
mov
mov
mov
xchg
loop
mov
mov
(bad)
adc
cmc
scas
and
pop
iret
cmps
jae
pushf
mov
push
and
std
pop
repz
mov
(bad)
lods
adc
inc
loopne
cmps
retf
push
mov
lods
xchg
daa
mov
jp
xor
es
jno
cmp
lods
xor
push
mov
xor
sar
imul
mov
mov
or
hlt
lods
stos
cmp
out
scas
push
sub
shr
daa
add
push
xor
aad
and
cmp
mov
(bad)
test
mov
rcr
aaa
mov
cwde
ins
cmps
mov
and
out
xchg
jne
dec
test
pop
dec
test
stos
(bad)
aas
sbb
add
cmp
lods
inc
or
int3
dec
sbb
sbb
pop
ins
stc
inc
mov
xlat
sbb
inc
(bad)
ja
xor
xchg
pop
mov
xor
jmp
fdivr
(bad)
pop
test
cmps
jmp
cwde
icebp
push
mov
aam
pop
dec
inc
(bad)
dec
mov
sbb
xor
sti
into
jnp
jecxz
jae
pop
jne
pop
xor
cmp
movs
pop
aad
or
xchg
sbb
sbb
push
sub
retf
lods
inc
jmp
les
aaa
retf
sbb
dec
mov
aad
inc
inc
pop
adc
cmp
mov
jmp
hlt
stos
and
and
push
inc
lods
push
mov
fisubr
mov
jb
int
dec
xor
imul
push
mov
mov
rcr
add
dec
rcr
mov
or
aam
test
in
pop
mov
cdq
sbb
push
cmc
sbb
int
jb
sysenter
shr
ss
cdq
or
cmps
xor
cmps
nop
jl
out
dec
sbb
imul
enter
sub
bound
mov
cmp
xor
sbb
imul
push
shr
mov
inc
movs
sbb
sub
push
icebp
mov
dec
cmp
pop
add
sub
movs
popa
mov
pop
push
push
mov
adc
inc
sub
shl
sub
test
push
push
scas
inc
and
mov
mov
ins
cmp
push
or
mov
cmp
pop
cli
and
add
aad
dec
mov
jecxz
test
cmp
add
enter
jmp
rcl
inc
xor
pop
jmp
cmps
push
or
sub
sbb
imul
sub
into
sub
sub
mov
stos
and
rol
mov
jmp
test
repz
lods
dec
push
push
sahf
pop
fisub
and
cwde
sbb
rcl
lods
cmp
push
add
jmp
int
sub
mov
popf
inc
jp
xlat
hlt
add
movs
jmp
ins
(bad)
mov
adc
mov
cmc
out
(bad)
retf
(bad)
call
push
sbb
push
push
and
xor
cmp
call
adc
ins
fwait
js
mov
call
sub
psrlw
fisub
loopne
mov
(bad)
push
pushf
mov
repz
push
cmp
int
and
mov
retf
(bad)
call
jb
movs
sbb
dec
pop
mov
pushf
sbb
jae
add
inc
cmp
test
inc
mov
add
es
or
pop
movs
add
into
std
test
sbb
xchg
sub
adc
xor
popf
mov
neg
mov
xchg
jmp
imul
movs
jmp
retf
cmps
pop
jl
inc
jge
pop
outs
repnz
and
jmp
rcl
aaa
data16
cld
add
test
mov
mov
popf
ss
dec
(bad)
jecxz
in
aas
lock
xlat
iret
mov
scas
add
outs
push
(bad)
fstp
add
stc
mov
sar
stos
into
aas
inc
(bad)
das
cmp
push
jmp
mov
popf
popf
mov
addr16
sar
cmps
push
xchg
lahf
sti
inc
(bad)
(bad)
neg
pop
mov
ins
daa
inc
test
mov
fld
scas
cdq
ret
loopne
xchg
mov
push
xchg
push
jge
(bad)
scas
jge
sub
xchg
das
push
je
jp
shl
and
mov
ret
adc
add
in
pop
push
icebp
(bad)
mov
imul
jbe
cmps
aad
imul
pop
clc
dec
dec
sar
sahf
add
ins
mov
(bad)
sti
int3
aas
push
add
imul
retf
ja
pushf
mov
xor
sub
xchg
neg
add
pop
sub
xchg
sbb
lods
clc
out
clc
popf
push
mov
jmp
not
jge
xchg
xchg
clc
cs
inc
pop
jmp
xor
sbb
jbe
inc
xor
push
je
fstp
loopne
adc
dec
add
pop
imul
pop
into
sar
push
out
loope
sub
mov
movs
add
test
mov
das
mov
or
lods
data16
jecxz
mov
loopne
sbb
xchg
(bad)
cmp
fwait
ror
inc
dec
sub
lea
push
fwait
sti
inc
mov
xor
adc
popa
into
ficom
add
adc
adc
jbe
inc
out
loop
xor
sar
sbb
retf
sbb
mov
cmps
movs
loopne
jle
mov
dec
cwde
cmc
add
es
mov
push
xchg
or
mov
in
das
lods
lahf
in
mov
repnz
jmp
shl
aam
cmp
mov
cmc
and
push
in
out
pop
or
sub
sub
pop
dec
shl
cmp
sub
outs
mov
aaa
pop
ins
xchg
int3
mov
das
in
pop
mov
daa
mov
adc
js
leave
cs
inc
popf
add
out
into
mov
lods
cmps
dec
push
mov
into
xor
push
not
jecxz
inc
lahf
push
cmp
packuswb
cmp
mul
shl
sahf
or
test
xchg
int
and
or
arpl
jnp
jp
jmp
xchg
cmp
sbb
das
inc
scas
fwait
jne
imul
xchg
sub
sbb
gs
sbb
test
jmp
ja
hlt
movs
jnp
mov
leave
cmp
mov
outs
aam
loop
inc
mov
sub
repz
jno
dec
jp
hlt
adc
rcl
jne
aad
dec
mov
pop
outs
shr
pop
call
add
cmps
add
popf
mov
mov
jbe
or
jp
jp
je
jno
icebp
jmp
mov
dec
arpl
mov
jno
cmp
ficom
fs
push
xor
adc
mov
lods
in
fs
out
dec
and
ins
shl
xor
pop
lods
push
and
mov
call
push
sub
mov
xchg
(bad)
ficomp
aad
scas
sub
adc
pop
bound
mov
push
xchg
add
stos
push
call
push
inc
ja
test
cmp
addr16
pop
xchg
cld
stos
sub
add
add
int
lods
add
mov
shr
ins
mov
mov
mov
cli
or
pushf
lods
mov
repnz
popf
cmp
push
sub
push
xchg
push
xor
fs
pop
retf
add
leave
mov
push
jecxz
fcom
mov
mov
imul
in
xlat
dec
mov
call
jno
pop
pop
sub
jle
call
mov
mov
jl
(bad)
cld
stos
sti
fmulp
inc
fistp
xchg
push
xchg
out
ins
jg
xor
inc
mov
aaa
mov
ret
fiadd
pop
out
int3
das
adc
gs
sub
inc
loope
xor
push
dec
ins
and
pop
(bad)
enter
jmp
jge
push
push
pop
pop
xor
(bad)
cmc
inc
sbb
sub
add
into
les
retf
or
sti
mov
icebp
xor
jne
jecxz
popa
in
mov
sar
mov
jae
stc
cs
daa
pop
jge
or
(bad)
mov
dec
or
xor
cmp
in
cmp
jmp
daa
push
arpl
fiadd
mov
popf
lods
enter
xchg
dec
out
lea
jns
adc
xchg
pop
test
mov
mov
dec
into
push
inc
out
xor
lods
test
adc
scas
push
popa
xchg
push
cmp
xchg
pop
test
fs
xchg
retf
push
pop
sbb
data16
icebp
arpl
stos
or
and
cmp
ss
mov
inc
lds
mov
es
inc
inc
retf
mov
(bad)
ins
sbb
inc
ret
cmp
or
jmp
pop
dec
mov
pop
and
iret
int3
pop
out
rol
adc
scas
outs
push
pop
lock
aaa
mov
mov
pop
inc
rcr
sub
out
xchg
clc
push
jecxz
inc
ret
(bad)
iret
push
fst
in
loopne
xor
push
inc
cmc
cmps
retf
push
xchg
mov
out
dec
es
out
mov
dec
cmp
xchg
mov
lea
shl
xchg
mov
and
out
(bad)
jp
jecxz
lods
cdq
mov
test
jno
mov
fidiv
xor
sbb
test
dec
mov
mov
movs
shl
dec
int
or
sub
cmps
loopne
(bad)
and
popa
push
add
outs
adc
xchg
in
xor
inc
xor
sbb
push
mov
stos
jbe
dec
jb
push
push
pop
shr
dec
mov
stos
push
mov
das
je
mov
adc
sbb
scas
cmps
test
popa
in
and
mov
or
xchg
lods
and
mov
or
mov
xchg
push
dec
inc
dec
push
push
cmp
iret
push
unpcklps
ror
jne
rol
daa
jb
sbb
dec
pop
jae
outs
pop
xchg
ins
adc
dec
or
test
push
pushf
pop
xor
mov
push
push
test
fist
push
cmp
adc
out
lahf
and
cmp
push
push
jo
movs
mov
mov
dec
mov
pop
xor
movs
dec
mov
iret
xor
dec
xchg
inc
sbb
xor
imul
xchg
or
loopne
and
aam
dec
add
or
lods
push
and
inc
jp
xor
xor
mov
sub
js
fldlg2
or
push
inc
movs
retf
loop
stos
sub
or
(bad)
mov
jno
loop
inc
xchg
push
sub
push
pop
dec
cmps
adc
dec
into
pop
out
pushf
push
adc
dec
adc
push
pop
sbb
jp
sbb
retf
push
test
jne
gs
push
movs
mov
ficom
sub
cmps
mov
mov
mov
push
fnstenv
xchg
mov
push
mov
call
hlt
in
in
jb
int
sbb
pop
js
sub
in
xor
and
xor
mov
jmp
in
sbb
push
lock
mov
add
inc
dec
mov
push
les
jp
ss
xor
adc
add
leave
and
cmp
sbb
jge
inc
mov
dec
(bad)
out
ins
mov
jb
test
cmps
mov
pop
retf
daa
adc
retf
and
pop
(bad)
mov
xchg
lods
sbb
(bad)
repz
mov
xlat
and
call
outs
enter
jno
rcr
mov
dec
imul
push
sbb
rol
loop
das
adc
(bad)
sub
test
inc
jl
adc
imul
lock
and
and
stos
mov
in
jg
stos
inc
pop
cli
ficomp
or
push
pusha
jno
mov
in
adc
hlt
sub
hlt
movs
push
adc
call
jae
add
adc
add
call
mov
adc
dec
lds
les
cmps
jo
dec
mov
sbb
jae
scas
add
jns
xor
xlat
in
sbb
aad
cld
fiadd
and
jmp
stc
in
js
or
adc
adc
daa
mov
lahf
lds
das
push
or
push
mov
lahf
mov
fist
cld
daa
jno
out
loop
mov
ds
dec
xchg
xchg
stos
lahf
les
jg
loope
sti
stos
shl
clc
(bad)
addr16
je
push
cmps
pop
das
push
out
mov
and
inc
scas
outs
mov
or
stc
mov
jle
(bad)
push
ds
lods
or
cmc
(bad)
adc
rep
cmp
lods
rol
adc
imul
mov
and
shr
mov
mov
sub
setb
mov
cmp
inc
loopne
fldcw
sar
pop
repnz
stos
test
int
data16
pushf
xlat
into
lahf
push
jne
add
sahf
cs
clc
inc
loop
sbb
xor
mov
lahf
inc
sbb
push
ret
pop
mov
das
scas
xchg
cli
fstp
sahf
pop
pop
inc
(bad)
movs
add
adc
lods
mov
add
aam
xor
shr
fsubrp
daa
xor
cmp
or
xchg
(bad)
and
mov
mov
(bad)
sbb
sub
into
in
xchg
xchg
xchg
(bad)
jae
cmp
imul
xchg
xchg
xchg
inc
add
movs
xor
jg
pop
jb
push
cmp
jecxz
add
fisub
push
sbb
(bad)
movs
xor
add
sbb
mov
sbb
cmps
stc
fs
or
nop
jecxz
push
dec
movs
pusha
adc
mov
ret
fwait
sbb
retf
sbb
mov
loope
pusha
ja
out
push
int
mov
cli
aam
mov
ins
loopne
sahf
cmp
mov
in
pop
xchg
fs
js
mov
cmps
ret
pushf
push
outs
test
push
mov
sub
jae
xor
repnz
sbb
sub
(bad)
loop
sbb
jecxz
outs
push
mov
rcr
push
jne
mov
jns
add
jecxz
lods
fidivr
and
inc
popa
iret
sub
and
push
call
std
ret
enter
retf
add
cli
adc
(bad)
xor
push
movs
cmp
jnp
rol
out
add
idiv
pop
sbb
cmc
pop
mov
or
pop
popf
fild
scas
or
and
or
push
loope
out
in
cld
lods
jae
and
fistp
loope
xchg
call
dec
dec
mov
push
xor
call
push
cmp
cmp
jo
jnp
lods
mov
push
pop
jns
into
mov
lods
fucomi
mov
call
add
pop
xor
mov
mov
stos
out
mov
mov
dec
xlat
jb
mov
gs
into
jmp
mov
aaa
aaa
out
pop
jo
es
push
jne
inc
inc
mov
pop
cmp
lods
adc
xor
dec
out
sbb
mov
repz
and
mov
or
dec
sbb
aaa
mov
fs
aad
add
push
push
xor
cmp
lods
mov
mov
(bad)
test
enter
enter
test
pusha
loop
fnstenv
xor
push
sahf
mov
or
imul
nop
xchg
dec
fucomi
dec
push
int
mov
dec
inc
jmp
sar
adc
int
push
in
in
lahf
xchg
add
fwait
test
mov
in
inc
cmp
add
xchg
pop
fild
pop
pop
mov
repz
mov
aad
and
xor
sub
popf
call
nop
sbb
movs
(bad)
xor
out
mov
xor
and
push
outs
popa
repnz
ja
mov
dec
inc
dec
push
mov
pusha
shr
inc
or
add
mov
add
pop
call
xor
and
add
xor
cmps
sahf
pop
mov
add
or
mov
dec
scas
ins
xor
fwait
sbb
sub
dec
mov
sub
push
pushf
push
add
imul
and
movs
pop
xor
xor
jo
sub
dec
inc
rcl
push
sub
jmp
popf
xchg
jmp
xchg
inc
repnz
imul
test
dec
push
lds
pop
sub
sub
or
call
cmp
pop
and
pop
pop
push
iret
loope
out
and
jae
lods
add
push
test
sahf
loop
out
enterw
out
pop
mov
mov
je
fadd
mov
push
daa
frstor
jae
pop
call
sub
movs
loope
arpl
push
cmp
cmp
fcomp
rcl
or
and
sub
movs
data16
das
xor
icebp
dec
je
push
fisub
aam
push
in
and
loopne
cmps
scas
frstor
push
imul
mov
sbb
dec
adc
mov
test
push
xchg
push
(bad)
xlat
push
pop
jne
sbb
adc
xchg
jb
inc
push
add
rcl
lods
int
lods
popf
or
xlat
pop
cs
(bad)
fldln2
and
pop
imul
cmp
jbe
mov
fs
mov
pop
das
xchg
dec
inc
loopne
jge
inc
retf
scas
mov
jae
inc
lock
lods
push
or
fwait
outs
xor
repnz
(bad)
in
dec
inc
sub
push
mov
adc
(bad)
xor
add
mov
cmp
push
sbb
stos
inc
pop
lock
mov
rol
mov
mov
xchg
pushf
mov
sub
xchg
dec
ds
pushf
xor
mov
cmp
push
add
data16
mov
(bad)
aas
std
push
sbb
fldenv
js
and
and
in
dec
cmc
and
xchg
dec
or
or
mov
dec
sbb
rcr
xchg
cmps
fdiv
push
pop
ret
jno
pop
daa
jmp
jge
lock
inc
loope
cld
push
icebp
scas
and
cmps
scas
jge
jg
mov
adc
mov
call
fild
stc
xchg
xlat
lods
jne
jp
stc
lahf
cmp
cli
adc
mov
mul
mov
aaa
cli
test
inc
addr16
or
rcl
push
jge
push
jae
dec
cli
not
stos
js
inc
lock
and
mov
mov
aad
loope
mov
ss
jecxz
in
push
pop
loope
lock
rcl
jl
icebp
adc
add
retf
rol
adc
cmps
scas
add
scas
imul
push
cmp
mov
jecxz
xchg
loopne
mov
(bad)
pop
mov
fs
rcr
pop
xchg
adc
pop
push
leave
jmp
xchg
pop
xchg
movs
push
push
(bad)
adc
aas
pop
xchg
sbb
ja
ja
in
jl
sahf
(bad)
stc
cdq
(bad)
jae
cmp
mov
mov
adc
and
inc
sbb
sub
cmp
and
sub
mov
ins
sbb
mov
sub
pop
dec
cwde
leave
dec
push
int
call
repz
ret
ins
xor
movs
arpl
push
rcr
cmp
aad
ret
int
cmp
mov
push
pop
adc
mov
imul
mov
enter
mov
ret
std
push
std
cmc
pop
inc
loop
inc
stos
and
fs
mov
push
lea
cs
inc
adc
cmps
fistp
lahf
mov
retf
aas
and
les
inc
and
mov
inc
inc
aad
inc
test
push
out
in
pop
pusha
pop
loopne
cmp
sbb
scas
mov
push
dec
cmp
mov
lds
mov
mov
mov
mov
or
xchg
push
cwde
push
in
cmp
fisubr
lds
adc
js
into
mov
pop
xchg
ror
push
test
cmc
cmps
loope
cmp
mov
xor
std
pop
loop
ss
int
stc
and
cmp
movs
jmp
jmp
pop
loopne
xchg
jno
imul
mov
mov
mov
rol
pushf
cmc
mov
sub
mov
mov
clc
mov
or
push
cmp
pop
mov
sub
ret
call
add
mov
mov
inc
pop
cdq
aad
inc
adc
xor
into
mov
xor
pop
shl
xor
test
int
int
and
dec
inc
dec
addr16
cwde
sbb
xchg
push
xlat
(bad)
sar
inc
cld
mov
and
sub
push
xor
fisttp
xor
push
aad
push
and
xor
ja
mov
xor
jnp
sub
sub
sbb
mov
jne
dec
test
add
fistp
test
cwde
and
dec
jae
push
mov
sub
sbb
mov
movs
jle
xor
cmp
(bad)
push
jne
push
and
dec
mov
mov
xchg
jmp
ror
sub
sbb
mov
xor
fwait
and
xchg
mov
add
xor
and
shr
add
sahf
mov
aaa
xor
sbb
cmc
(bad)
pushf
pop
and
imul
jge
bound
dec
movs
add
rol
cmps
mov
lea
and
sahf
and
sbb
jbe
dec
mov
cmp
(bad)
push
or
push
or
je
xor
xor
inc
adc
push
xor
ficom
aam
jae
cmps
push
xchg
mov
sub
xor
sub
call
movs
jmp
cmp
and
call
sub
cmps
sbb
sbb
dec
cmps
push
xchg
movs
xor
adc
push
outs
inc
push
inc
inc
cmp
push
(bad)
test
pop
xchg
loop
jae
pop
inc
shl
stos
xchg
(bad)
lahf
ins
sub
mov
jae
loopne
cmp
jbe
fsub
aam
push
xchg
xchg
push
push
imul
call
cmp
push
jge
xchg
or
push
arpl
sahf
and
sub
xchg
fwait
and
and
push
fwait
retf
push
and
mov
push
arpl
dec
push
sub
test
inc
dec
adc
adc
jae
scas
out
or
lds
mov
mov
mov
and
movs
push
lds
xchg
pop
push
sub
adc
xor
retf
sbb
mov
leave
and
lods
leave
(bad)
adc
cmps
sub
(bad)
push
lds
mov
push
pushf
pop
xor
cmp
dec
mov
jo
sti
push
sbb
(bad)
xchg
sbb
or
and
in
fsub
adc
loop
push
fwait
inc
ins
cwde
aam
mov
cmc
test
nop
jg
jle
(bad)
sub
stos
push
xlat
adc
retf
mov
adc
repz
jno
aaa
(bad)
retf
and
pop
xor
mov
stos
sub
scas
std
je
xlat
jmp
jp
mov
test
pushf
cmp
or
sbb
rol
rol
out
lods
inc
add
sub
xor
jp
hlt
jno
(bad)
es
adc
jecxz
es
sbb
popfw
adc
imul
aad
cmp
lods
cmp
dec
push
ja
inc
jno
mov
loope
clc
movs
lods
pop
inc
mov
outs
ret
mov
sar
cld
sub
xchg
jae
inc
jl
daa
loop
ror
js
and
cmc
add
daa
outs
cli
cmps
aas
cmp
(bad)
stos
out
lds
fwait
test
inc
jmp
and
push
stos
out
fdivr
bound
es
(bad)
jecxz
(bad)
test
sbb
in
xchg
adc
push
cmovp
inc
pop
mov
dec
cmc
in
dec
(bad)
dec
push
shr
es
add
dec
mov
mov
sbb
xchg
mov
push
add
add
cwde
cmp
movs
std
imul
imul
cdq
test
add
dec
mov
cli
adc
pop
lock
scas
jl
sub
cmp
xchg
gs
inc
cmp
loopne
(bad)
adc
mov
sar
pop
sar
dec
test
aam
mov
fdivr
or
push
cli
xlat
push
mov
lods
jae
add
cmp
(bad)
xor
bndldx
push
mov
pop
mov
xor
and
int3
sbb
(bad)
jae
inc
pop
xlat
jecxz
mov
jo
mov
or
adc
inc
lahf
push
mov
adc
cmc
xchg
xchg
fld
inc
(bad)
rcl
xlat
(bad)
sbb
mov
cmp
lea
dec
xor
dec
clc
jae
iret
mov
sbb
push
adc
shl
xchg
jl
jecxz
xchg
sub
ror
arpl
sbb
jo
jmp
xor
pusha
push
imul
inc
or
push
pop
mov
test
in
pop
int
scas
push
lock
sub
lods
cmp
xchg
mov
stc
adc
mov
push
popa
mov
ss
(bad)
adc
jae
xor
ins
mov
out
dec
xchg
dec
cmp
arpl
pop
add
sti
aam
scas
sub
dec
mov
xchg
add
out
xchg
adc
jne
aas
inc
dec
stos
sbb
out
push
jno
arpl
fimul
jecxz
xor
aas
test
bound
xchg
inc
loop
addr16
pop
add
push
aaa
pop
mov
dec
addr16
mov
cld
dec
je
sub
mov
pop
clc
inc
cmc
test
pop
adc
(bad)
xor
adc
mov
aad
sbb
(bad)
int3
pop
sbb
clc
push
jnp
ja
xchg
(bad)
arpl
outs
cmps
mov
jnp
xor
or
xor
fdiv
stos
call
(bad)
rol
dec
retf
mov
push
mov
mov
jmp
push
bnd
mov
dec
ins
add
imul
pop
test
and
stc
jae
aad
sbb
in
sub
pop
push
sub
jne
fwait
mov
push
adc
into
cmp
inc
ret
adc
xor
jno
add
mov
sub
jmp
aam
push
xchg
adc
push
jge
jg
cmp
fdiv
icebp
into
cmp
cmps
xchg
movs
inc
jns
(bad)
sbb
ss
aad
fisubr
xchg
xchg
adc
fnstenv
push
sbb
cwde
js
movzx
adc
test
xchg
dec
gs
and
xor
mov
xchg
(bad)
retf
imul
jno
xor
sbb
push
in
cs
ins
lods
cmc
or
loop
mov
retf
pushf
cmp
sbb
jl
jmp
das
add
pop
mov
test
add
xchg
hlt
stos
sub
cmp
dec
fmul
rcr
xor
mov
and
mov
test
in
ins
retf
mov
mov
mov
mov
sbb
mov
shl
inc
inc
imul
cmp
aam
movs
xchg
popf
les
push
dec
lds
mov
jb
mov
push
and
sub
mov
cmp
push
mov
and
push
inc
push
mov
jecxz
or
xor
sbb
mov
and
loopne
popf
xchg
stc
test
cmp
cmps
stos
bound
xchg
mov
sar
int3
adc
mov
mov
mov
sbb
jle
xor
jno
aad
in
mov
mov
push
jecxz
push
ds
mov
mov
adc
(bad)
int3
mov
add
fld
dec
loop
add
push
dec
les
push
mov
arpl
xor
mov
pop
aam
push
cmps
push
rcr
sub
adc
bound
adc
push
dec
rcl
sub
sbb
aad
sub
cmp
inc
sub
sub
movs
add
ror
mov
(bad)
push
das
sbb
jns
rol
push
inc
push
fmul
push
imul
jne
push
mov
adc
pop
shl
or
xchg
repz
mov
adc
push
inc
adc
sub
jne
or
jge
jo
push
and
lods
xor
jns
jle
call
vmovd
int
sub
inc
lods
(bad)
rcl
cmp
cmp
movs
cmp
push
xchg
adc
or
imul
stc
test
sahf
movs
aad
sbb
sbb
jb
inc
int
adc
loop
sbb
ud2
inc
test
ins
leave
add
cmps
pop
lods
and
adc
mov
mov
data16
hlt
dec
lea
ins
(bad)
sbb
pop
fcmovnu
push
jmp
lea
mov
dec
stos
pop
test
cdq
and
add
cmp
mov
ds
mov
adc
pop
movs
int3
popf
hlt
cmp
cmp
adc
mov
movs
test
mov
mov
das
adc
sbb
or
mov
jmp
mov
out
repz
lods
mov
mov
test
mov
push
mov
(bad)
pop
mov
sbb
cli
jnp
and
cmp
bound
push
xchg
push
mov
jbe
fmulp
in
mov
loopne
movs
push
push
mov
xchg
dec
push
sub
cdq
or
pop
xor
jge
sbb
inc
pop
mov
gs
fdiv
fcom
sub
cmps
push
aas
xchg
js
out
jbe
push
add
hlt
out
repnz
ins
pusha
inc
sbb
xchg
rcl
sbb
adc
pop
dec
or
pop
jmp
dec
mov
std
add
cli
push
jae
loope
test
inc
hlt
in
xor
scas
test
dec
stos
cmp
mov
xchg
(bad)
inc
pop
mov
stos
or
repz
add
mov
loop
adc
fisttp
out
pop
dec
(bad)
lods
int3
(bad)
cmp
cmp
jg
and
movs
push
ss
js
(bad)
test
jg
imul
dec
mov
jno
fdivr
xchg
pop
out
inc
loope
cmp
icebp
cs
les
(bad)
and
aad
jo
inc
or
add
mov
jl
jne
xchg
cmp
jp
pop
loope
mov
out
jo
lahf
pop
ds
call
fdivr
jo
inc
mov
mov
(bad)
(bad)
fidiv
or
imul
loop
xchg
push
or
push
ror
inc
and
dec
stos
fmul
cmp
add
sbb
fnstsw
add
ss
in
dec
pop
mov
les
sbb
movs
mov
popa
xchg
test
lea
xchg
or
leave
(bad)
icebp
(bad)
xchg
leave
out
xchg
sub
outs
fldcw
mov
inc
lahf
cdq
dec
in
push
and
cwde
stc
cmp
dec
out
dec
mov
icebp
aas
push
sar
mov
lea
popf
ds
sbb
cmp
(bad)
jecxz
(bad)
jne
(bad)
cmp
loopne
adc
xor
popf
xor
pop
ret
sbb
sub
out
test
cmc
pop
(bad)
popf
ins
xor
call
aam
test
je
pop
ror
pop
mov
repz
inc
adc
mov
jae
loop
xchg
adc
or
mov
sbb
outs
xor
retf
push
out
dec
out
aas
sbb
repnz
scas
fisubr
pop
cdq
pop
add
add
rcr
inc
push
push
mov
lock
daa
xchg
dec
scas
inc
inc
(bad)
xor
ret
clc
dec
add
loopne
fwait
jmp
mov
dec
sar
jne
xor
pop
popa
ja
jmp
xor
movs
popa
lahf
jp
sbb
popf
mov
lea
sbb
pop
jo
(bad)
cld
xchg
in
cmc
in
iret
sbb
jle
cmps
jae
jnp
adc
dec
not
movs
test
ja
popa
nop
jb
push
inc
cli
sbb
call
out
push
inc
or
xchg
out
(bad)
arpl
mov
sahf
push
inc
jge
adc
retf
movs
dec
jecxz
dec
mov
push
imul
cmps
sub
mov
fsubr
leave
mov
dec
fs
mov
cmp
jp
mov
xlat
fistp
daa
in
in
(bad)
out
cld
inc
loop
inc
(bad)
scas
movs
mov
gs
inc
sbb
cmp
lock
loopne
ret
fisttp
imul
mov
mov
mov
mov
cmp
repnz
stos
dec
unpcklps
(bad)
xchg
out
retf
add
jp
cdq
pop
xchg
jnp
stc
lahf
and
daa
sbb
js
and
cli
call
aaa
in
cmp
les
ret
mov
into
dec
sub
sar
jecxz
mov
push
out
dec
test
pop
fstp
xchg
aam
sub
push
loopne
mov
and
lods
mov
es
scas
retf
int
(bad)
lods
xor
rcl
inc
loop
jno
pop
popa
push
dec
cmp
mov
push
sub
cmp
ss
sbb
lds
js
test
(bad)
(bad)
dec
adc
cmp
scas
push
jae
push
fwait
inc
mov
test
in
push
mov
ret
call
not
dec
and
cmp
pushf
mov
in
lods
push
outs
or
push
out
lock
lods
jmp
int
imul
ins
repz
xor
fs
lock
jmp
jns
mov
sbb
out
pop
mov
adc
ss
jecxz
int
xor
fdiv
jo
shl
pushf
int3
(bad)
in
into
jno
xchg
pop
call
xor
mov
xchg
push
(bad)
adc
jmp
pushw
cmp
dec
jbe
ja
cmovae
aad
cmps
cmp
cdq
pop
adc
push
sbb
push
push
cmp
pop
sbb
jne
aaa
sbb
or
inc
sub
fimul
or
fwait
dec
sub
stos
and
xchg
jns
push
add
loop
sub
mov
test
dec
push
sbb
inc
ja
inc
adc
xor
jb
cmc
adc
dec
imul
movs
mov
call
xchg
scas
outs
pop
jmp
sbb
mov
mov
dec
cmp
mov
mov
stos
sbb
and
or
push
xor
sbb
scas
push
xor
dec
out
add
mov
int
bound
mov
cmps
arpl
call
or
sahf
push
fild
(bad)
sub
dec
or
sbb
sti
cdq
fdiv
mov
pop
stos
lods
addr16
pop
mov
push
ficom
cmps
jecxz
stos
dec
es
push
pushf
outs
inc
inc
xor
aaa
mov
cmps
sub
inc
and
scas
imul
cmp
cmp
sahf
scas
sbb
add
lods
inc
jno
cli
push
js
(bad)
aaa
pop
fisubr
sbb
inc
mov
push
jl
stc
test
repz
loop
cmp
dec
adc
sar
and
mov
inc
push
xchg
dec
ror
cmps
pop
call
stos
inc
leave
adc
push
add
test
xchg
sub
mov
jae
mov
pop
js
test
mov
add
pop
sbb
sub
mov
stos
and
sbb
loopne
call
cld
mov
cdq
and
dec
xor
je
adc
mov
ss
jg
hlt
cmc
aas
jne
or
push
jg
gs
lock
ja
out
in
iret
jecxz
fisttp
xchg
test
pop
arpl
cmp
imul
cmp
xchg
outs
push
pop
hlt
cmp
jmp
mov
xor
cld
aaa
cmps
jmp
sahf
sub
retf
add
cmp
jl
je
jo
push
scas
pop
lods
pop
adc
mov
mov
dec
pop
in
in
pushf
nop
mov
add
cmps
pop
shr
aad
mov
test
jp
mov
xchg
push
mov
aam
rcr
mov
hlt
loopne
push
cmps
mov
dec
pushf
mov
mov
push
stos
inc
xor
mov
cmc
test
movs
push
xchg
dec
int
adc
or
dec
out
cmc
cli
aad
cmp
jmp
sbb
push
add
js
ins
ds
push
repnz
ficomp
push
jp
not
push
xor
inc
xor
jg
ret
fcom
cmp
cmp
inc
xchg
je
and
mov
lods
inc
xor
mov
dec
jg
jmp
shr
je
adc
jb
jmp
lahf
test
mov
xchg
inc
in
and
shr
aas
sbb
xor
pushf
and
mov
or
shl
dec
(bad)
dec
into
inc
push
cmp
cli
pop
pop
pop
lock
data16
push
push
and
ins
out
aam
enter
xchg
lock
cmp
pop
push
out
les
xor
cmps
clc
xchg
int
into
jp
add
lea
pop
sub
gs
add
rcr
je
rcl
out
pop
lds
mov
test
dec
mov
mov
mov
jge
cmp
dec
xor
dec
pop
pop
mov
imul
pop
add
dec
sbb
shl
add
push
xor
jnp
jle
sub
xchg
pop
push
xor
ss
imul
jg
fwait
outs
fild
inc
jae
cmp
mov
mov
jmp
mov
scas
mov
xchg
mov
inc
mov
xchg
(bad)
shl
call
jle
call
push
xchg
int3
jne
daa
jge
cmp
sub
sbb
or
out
cmc
mul
bound
mov
mov
mov
clc
inc
dec
mov
popf
jnp
jmp
sahf
jmp
stc
loope
cmp
mov
mov
clc
dec
into
out
imul
sub
in
daa
add
rcr
xlat
cmp
call
mov
in
stos
adc
call
jbe
ret
jae
pop
iret
or
repz
hlt
aas
mov
add
xor
sbb
mov
hlt
iret
in
stos
xchg
push
das
out
push
xchg
clc
out
stc
(bad)
jne
dec
dec
xchg
dec
ds
push
xchg
cmps
add
or
lds
aam
stos
jmp
cmp
jle
xor
stos
sub
mov
aam
call
es
call
lds
mov
dec
cmp
inc
inc
dec
shl
mov
xor
pop
test
(bad)
dec
inc
push
dec
fwait
sbb
and
push
mov
dec
xor
inc
jecxz
cmps
xor
es
outs
mov
mov
xlat
(bad)
jp
mov
pop
cld
addr16
xchg
scas
mov
ret
pop
imul
imul
add
xchg
int
sahf
and
push
movs
loop
pop
jecxz
aam
in
mov
lods
mov
pushf
fisub
dec
sub
push
popf
push
movs
push
hlt
inc
mov
or
ret
pop
lods
cmp
cli
sahf
test
sbb
jmp
jne
xor
arpl
shr
inc
ret
fist
aas
test
push
gs
je
sti
gs
mov
sbb
sbb
jle
cld
sub
ds
jmp
mov
stc
pop
or
pop
xchg
xchg
mov
aaa
mov
xor
data16
and
push
xor
stos
push
sysexit
add
sub
je
nop
dec
sub
push
(bad)
adc
sub
mov
inc
jecxz
cmps
popa
(bad)
mov
and
cmp
test
pusha
aam
sub
sbb
(bad)
ins
call
xchg
cmp
test
mov
dec
popa
js
mov
idiv
cmp
mov
dec
inc
(bad)
push
sbb
ins
repz
dec
pop
dec
mov
push
call
pop
mov
add
icebp
adc
daa
mov
(bad)
fs
push
pop
mov
jmp
(bad)
mov
outs
or
ret
aaa
sti
jno
or
add
dec
movs
mov
push
mov
mov
cmc
test
pop
xchg
jns
mov
ficom
mov
sbb
enter
cmp
pop
shr
sub
movs
jle
sbb
imul
mov
popa
sahf
sub
xor
sbb
movs
shl
ss
adc
mov
ret
sbb
es
xchg
dec
sub
push
dec
add
fdiv
rol
add
and
aaa
add
dec
imul
and
add
movs
in
sbb
jae
inc
xor
inc
inc
xor
out
cmc
test
shr
mov
pop
push
ror
xchg
inc
adc
adc
jg
push
and
(bad)
sub
not
mov
(bad)
or
push
push
mov
sub
ins
fsub
mov
mov
push
test
ror
sub
jb
aam
push
sbb
shl
jge
or
hlt
sbb
mov
adc
dec
pop
cmovp
test
(bad)
rol
add
adc
mov
dec
mov
adc
imul
dec
mov
add
inc
add
loop
ror
sub
daa
adc
sub
mov
sub
dec
cmps
scas
push
jnp
lahf
es
cmp
mov
dec
sbb
cmp
sbb
jae
loop
xchg
xor
out
stos
jae
dec
sub
push
mov
outs
pop
mov
dec
xor
cmc
movs
ficomp
(bad)
xchg
mov
mov
shr
cmp
pop
inc
or
stos
jmp
call
cmp
jecxz
js
adc
cmc
lods
ins
dec
dec
xor
jecxz
lods
jns
mov
retf
mov
inc
mov
cmp
test
outs
lds
enter
movs
sbb
aaa
add
or
push
adc
jno
fisttp
into
sub
or
mov
cdq
mov
call
push
add
(bad)
cmps
inc
in
push
push
mov
push
shr
ret
aam
sub
mov
sub
or
dec
xchg
shl
loope
push
push
add
sbb
dec
push
xchg
xor
mov
push
xor
mov
fisub
inc
jecxz
dec
popf
stos
xchg
xchg
sbb
fisub
push
lahf
cmp
jb
and
mov
popa
shl
xor
gs
inc
ret
bound
outs
and
fwait
dec
or
xchg
mov
(bad)
repz
adc
mov
test
aam
jp
int3
sahf
pop
test
ja
ds
adc
arpl
pushf
xor
imul
inc
test
aam
imul
cmp
stos
jno
mov
push
dec
or
lea
shl
movs
xchg
xor
test
mov
jge
pop
pop
pcmpeqw
xchg
ret
sti
mov
sub
pusha
shl
jmp
push
rcr
fldcw
cdq
sub
xchg
xlat
adc
add
mov
push
inc
push
stos
enter
mov
sbb
inc
sub
repz
mov
mov
stos
dec
jno
pop
jmp
and
fnstcw
sar
div
lods
and
sub
mov
push
je
shl
lods
and
mov
enter
jne
mov
cmp
mov
out
int3
loope
dec
jge
fs
sahf
cmps
mov
pusha
(bad)
or
sahf
cmc
mov
clc
mov
dec
lods
int3
imul
fiadd
fisttp
aas
dec
(bad)
sbb
loop
xchg
xchg
xchg
out
ja
call
es
jae
mov
ja
loop
clc
addr16
mov
jne
ja
fcomp
mov
push
les
movs
imul
xor
mov
imul
mov
ins
mov
enter
out
lahf
jno
and
push
adc
sub
cmc
pop
fisubr
es
jecxz
cmp
int
xlat
outs
inc
and
xsaveopt
lods
js
sbb
scas
stos
cld
and
mov
hlt
mov
jne
add
dec
pusha
les
xchg
pop
cmp
cmp
adc
and
dec
mov
fwait
lods
fxch
popa
jne
ret
movs
mov
pop
cs
push
in
inc
dec
cmp
(bad)
rcl
or
jne
ja
inc
int
dec
js
and
mov
pop
or
push
leave
outs
dec
cmc
scas
pop
push
sub
fadd
rcr
div
mov
hlt
cmps
dec
xchg
fcom
jp
dec
dec
jnp
xchg
add
lds
iret
(bad)
xchg
xchg
mov
add
cmps
xchg
(bad)
es
pushf
push
addr16
xchg
lahf
push
movs
push
mov
cmps
mov
(bad)
mov
rcl
mov
imul
scas
adc
sbb
imul
addr16
imul
mov
mov
xchg
je
fisttp
test
pop
xchg
stos
cmp
mov
xchg
sbb
push
loop
outs
sub
push
in
movs
int
inc
loop
lds
inc
std
imul
inc
nop
xchg
cmp
push
popa
jecxz
mov
clc
xchg
jl
lods
hlt
mov
in
shr
inc
add
or
push
push
xchg
xchg
mov
mov
dec
pop
inc
mov
mov
mov
mov
add
xor
cli
push
adc
cdq
mov
enter
cmps
movs
inc
cmc
mov
bound
push
aaa
jp
dec
cmps
mov
cwde
xchg
fsub
or
pop
sbb
call
lods
xor
(bad)
mov
dec
pop
dec
stc
test
jb
jmp
or
movs
inc
aad
cmp
retf
cmp
in
mov
push
xor
mov
inc
jecxz
hlt
(bad)
scas
idiv
add
outs
adc
out
lds
(bad)
add
mov
jae
shr
clc
mov
cs
fdivp
jecxz
pusha
test
inc
loopne
loop
cld
mov
shl
mov
cmp
jne
cld
dec
lock
push
cdq
je
sub
jl
in
ds
fucomi
pop
popa
sbb
leave
dec
pop
or
sub
int
jns
(bad)
sbb
cwde
inc
dec
inc
xor
int
mov
inc
sbb
push
xchg
push
sti
call
push
xchg
(bad)
push
call
xchg
neg
adc
inc
jae
and
cmps
xchg
add
pop
and
push
push
ficom
mov
hlt
movs
pop
xchg
sar
cmps
push
push
add
mov
mov
mov
mov
cmps
mov
inc
movs
lods
test
fild
pop
adc
int
in
xchg
push
sahf
mov
ror
inc
adc
sub
mov
sub
mov
push
(bad)
inc
inc
adc
sbb
adc
push
inc
adc
(bad)
sbb
repnz
adc
and
or
pop
adc
cmps
rcr
mov
dec
cmps
add
cmp
inc
mov
push
ins
fdiv
push
or
jp
nop
xchg
(bad)
pop
movs
jp
xchg
push
pop
retf
inc
pop
lods
loope
xchg
pop
add
imul
popf
mov
cli
push
outs
adc
push
es
imul
leave
lds
sub
mov
aam
iret
inc
rcr
lds
pop
xchg
out
(bad)
aas
or
fld
retf
mov
ret
mov
enter
imul
es
cmps
xchg
push
ss
xchg
sub
shl
mov
aam
mov
push
jb
mov
das
dec
into
imul
std
imul
adc
push
fnstenv
call
aad
cmp
pop
pop
xor
ja
inc
loop
or
shld
stc
mov
xchg
leave
mov
sub
lea
xchg
pop
ficomp
mov
lock
mov
jmp
jle
cmp
mov
std
cmp
and
xchg
aad
sbb
fcmovnbe
repnz
mov
lock
pusha
cmp
pop
(bad)
dec
enter
fdivr
arpl
addr16
adc
fist
in
cmps
push
int
xor
dec
cmp
aam
xor
sbb
test
push
xchg
repz
pop
adc
pop
xor
xchg
ror
sub
cmp
pushf
sbb
lods
sar
imul
mov
xchg
lds
into
dec
cld
aam
sbb
xchg
dec
int3
jae
dec
inc
lds
jno
mov
shl
push
shr
test
mov
mov
and
push
jmp
and
pop
jo
pop
xor
mov
pop
pop
pop
pop
sub
dec
jo
push
pusha
or
mov
xchg
mov
cdq
jns
cmp
add
push
xchg
dec
int
mov
and
lds
xor
imul
adc
fldcw
jno
sbb
cmc
sbb
sahf
add
movs
push
push
scas
xor
(bad)
sbb
cmps
movs
cmp
xchg
mov
loopne
push
sahf
sub
out
cmps
in
imul
or
rcr
mov
aam
movs
jbe
addr16
cwde
lods
jb
outs
hlt
jmp
jle
fidiv
sar
lea
sbb
mov
fld
cmp
push
clc
imul
push
arpl
shl
ins
jp
fmul
out
mov
fst
mov
ror
imul
cmp
mov
cmps
adc
inc
and
cdq
(bad)
sub
cmp
fistp
(bad)
popf
sahf
cmp
sbb
pop
mov
dec
or
lahf
ret
mov
add
iret
push
in
hlt
cld
sub
ds
lds
movs
enter
inc
rcr
jmp
(bad)
arpl
xchg
add
movs
add
pop
jmp
jmp
leave
push
push
xchg
arpl
add
push
and
popf
int
mov
adc
cmps
push
dec
dec
fucomp
and
sub
cmp
cmp
mov
mov
mov
(bad)
xor
push
(bad)
push
or
mov
ins
cli
push
out
mov
cmp
fisub
or
test
mov
inc
dec
iret
lds
jmp
leave
xor
mov
jmp
nop
aaa
add
fimul
cmp
jg
xchg
add
xchg
sbb
inc
add
fadd
(bad)
mov
call
adc
pop
sti
push
adc
inc
rcr
aaa
std
stos
daa
js
xchg
nop
imul
shl
push
in
mov
cmp
mov
(bad)
mov
push
mov
lahf
(bad)
mov
inc
dec
or
xchg
aas
sbb
adc
mov
jmp
mov
scas
in
mov
add
int
arpl
mov
sub
(bad)
in
fstp
test
movs
dec
cmc
adc
xor
into
xchg
inc
rcl
cmp
scas
fprem
push
jmp
xchg
fild
leave
sbb
xchg
pop
in
shl
outs
adc
xlat
mov
call
pop
add
cs
mov
or
or
pop
cmp
int3
aas
lods
pusha
sahf
sub
xchg
scas
pop
push
dec
push
mov
mov
pop
xchg
loopne
stc
test
pusha
loop
xchg
push
fsub
sub
add
pop
test
xchg
fcomp
out
inc
push
or
stc
jmp
push
idiv
push
mov
pop
mov
xchg
ret
lds
cmp
call
inc
cmp
addr16
hlt
cmp
push
lea
stos
pop
(bad)
xchg
mov
dec
jns
fiadd
xchg
sbb
mov
sar
sbb
dec
ss
fsubp
cli
call
adc
aad
add
and
div
xchg
sub
in
ds
bound
and
or
jp
test
out
mov
or
mov
movs
cmp
jne
pop
call
mov
rcr
aam
xchg
sbb
and
sbb
inc
mov
lds
push
xor
movs
aaa
cmp
add
movs
and
xchg
mov
mov
int
adc
push
inc
add
loop
jns
out
dec
test
dec
sub
sub
add
dec
add
and
fidivr
pop
ror
mov
adc
jb
sub
hlt
mov
jmp
adc
clc
cmps
mov
adc
cmp
scas
repz
(bad)
xchg
push
or
rcr
sbb
cmp
leave
aaa
push
jge
movs
js
inc
adc
jle
pop
pop
icebp
mov
fsubr
jns
scas
mov
or
add
xor
jns
jae
pop
fwait
mov
scas
jns
mov
scas
es
fxch
ds
movs
ins
xchg
pop
mov
call
leave
fisttp
out
pushf
push
sub
xor
cmp
xchg
imul
dec
loop
push
or
int
cmp
jmp
test
push
push
mov
mov
adc
cmps
fisub
pop
lods
push
sbb
pushf
sbb
repz
rcl
movs
xor
inc
mov
sub
jns
sub
fld
jle
jne
pop
xchg
outs
and
cmp
(bad)
imul
daa
dec
push
mov
ja
arpl
test
or
scas
fld
mov
mov
cmp
sahf
out
aam
dec
adc
lahf
and
cmp
mov
inc
popf
test
push
shl
stos
inc
sub
js
out
adc
push
push
inc
push
push
cmp
out
mov
and
cmps
movs
push
push
mov
mov
xor
mov
cmp
adc
pop
sub
loope
lods
adc
ja
jp
mov
push
xlat
dec
mov
test
dec
sbb
daa
lahf
push
inc
ror
mov
call
ins
retf
push
aad
ret
xor
in
fcom
sub
pop
and
pop
xchg
hlt
int
ins
ins
popa
test
jge
pop
cdq
mov
mov
push
(bad)
jmp
mov
outs
cmps
ins
xchg
adc
xchg
arpl
or
leave
jmp
and
sbb
mov
retf
cmp
mov
int
dec
sub
xchg
dec
sub
pop
sub
fmul
cmp
pop
mov
xchg
lds
call
cwde
sysenter
loope
lods
or
sub
mov
jno
rcl
mov
jne
in
xchg
popa
in
inc
int
pop
scas
sub
mov
cmps
test
cld
hlt
test
sbb
imul
xchg
cmp
and
stos
mov
mov
and
jo
xchg
mov
dec
cmp
sbb
test
fs
push
aam
adc
inc
sbb
loop
push
push
scas
movs
ins
mov
ins
ret
mov
imul
jp
jmp
fwait
imul
in
not
jnp
mov
shr
enter
mov
dec
iret
xchg
xchg
xor
inc
mov
cmps
xor
or
mov
cmp
jp
jge
jmp
movs
and
std
xor
dec
movs
cmp
jp
stc
bound
jo
adc
ficomp
stc
ja
iret
push
leave
push
fwait
add
and
jno
mov
movs
stos
sub
cld
imul
arpl
into
inc
cmps
adc
xor
cmp
aam
rol
jbe
dec
arpl
or
lds
mul
cdq
mov
loope
ds
aad
mov
mov
(bad)
xor
out
push
xor
fwait
and
test
or
dec
fwait
inc
fs
shr
jnp
cmp
mov
jmp
mov
aas
sbb
fwait
mov
xor
data16
test
xor
scas
std
imul
rcl
es
test
mov
dec
dec
cwde
jo
inc
jnp
in
int
pop
mov
adc
mov
ins
sub
add
(bad)
in
mov
xchg
movs
sbb
jbe
jns
adc
cmp
pushf
sbb
stos
cmc
mov
aam
adc
mov
mov
cmp
test
pop
shl
pop
mov
adc
loop
and
(bad)
adc
bound
xor
ss
out
lods
fnstenv
sbb
pushf
push
(bad)
shl
call
popf
xchg
inc
cmp
sub
dec
popf
aas
(bad)
jno
scas
fldcw
mov
imul
out
pop
jno
jl
sti
push
sub
add
movs
stos
shl
in
push
in
mov
loop
jle
mov
pop
clc
lods
aas
mov
(bad)
scas
cli
jbe
repnz
xchg
jmp
in
and
jb
xor
call
movs
cmp
adc
pop
xchg
push
ret
mov
mov
movs
nop
test
imul
ins
mov
(bad)
cmp
gs
aaa
dec
push
inc
imul
push
iret
push
jge
pop
ins
cs
sub
jae
fisub
add
xor
jb
repz
dec
jecxz
adc
cmp
jmp
push
cdq
sbb
mov
cmps
lods
inc
push
pop
mov
dec
imul
or
adc
jmp
mov
or
xchg
sub
sbb
mov
sub
xor
push
inc
push
push
stos
in
inc
or
or
mov
or
add
mov
lods
mov
xor
lds
popa
mov
dec
imul
nop
ret
test
or
popf
jno
push
mov
out
hlt
cmps
shl
sub
mov
pop
in
pushf
sbb
push
mov
call
out
dec
fwait
adc
adc
lods
lds
sbb
xchg
pop
call
push
sysenter
fldcw
or
movs
and
nop
enter
jl
xchg
xor
dec
inc
mov
fst
iret
jp
call
out
push
dec
push
jae
mov
xchg
ficom
fld
xchg
push
jmp
xchg
mov
lods
ss
xchg
xor
je
fwait
push
add
jae
sub
jbe
ja
retf
call
fwait
jb
outs
movs
or
jns
rcl
cmp
mov
pop
lods
imul
or
mov
cmps
lods
cwde
adc
push
(bad)
aaa
push
push
daa
xor
jo
pop
jmp
aaa
and
call
mov
fisub
jmp
fs
call
jp
xchg
and
jb
mov
mov
or
jge
jmp
push
push
shl
scas
dec
cmps
xor
imul
sbb
mov
xchg
inc
xchg
jo
shl
push
aam
cmc
test
ins
pushf
je
and
dec
shl
push
int
or
out
xchg
jecxz
lods
int3
pop
sbb
sbb
push
cmp
movs
cmp
inc
inc
cmps
sahf
mov
xor
cli
pop
idiv
icebp
inc
xchg
cmp
(bad)
push
popf
mov
sahf
fs
sbb
mov
pusha
repnz
jl
dec
stc
popf
dec
sub
call
(bad)
aam
mov
cmc
dec
psubb
jp
or
cwde
sub
add
mov
(bad)
fstp
sbb
xchg
fs
movs
pop
jbe
push
xor
cmp
mov
aad
je
jp
mov
clc
(bad)
hlt
pusha
test
dec
repz
out
pop
jb
iret
push
cmps
pop
cwde
fmul
push
sub
push
or
popa
mov
xchg
cdq
cmp
inc
lods
loope
psubsb
in
push
and
fnstcw
fistp
adc
push
and
xor
movs
pop
pop
cwde
(bad)
js
mov
adc
cmps
test
and
lods
xchg
xor
push
ret
jae
xchg
jmp
mov
loop
mov
test
and
xor
in
xor
jae
retf
inc
dec
inc
dec
or
hlt
shl
inc
out
mov
out
outs
cmps
jae
mov
jb
(bad)
xchg
dec
cmc
test
aad
xor
push
cmps
mov
xchg
inc
icebp
ret
movs
std
shr
dec
pop
mov
push
js
push
dec
push
ss
mov
mov
arpl
fbstp
imul
mov
loope
cli
push
(bad)
sahf
jecxz
sar
add
retf
pop
xor
jnp
jle
inc
mov
mov
outs
cmp
and
mov
in
jmp
movs
sbb
fiadd
jne
push
aad
push
mov
loope
pop
mov
mov
repz
inc
daa
pop
xor
cmps
cmp
jmp
shr
out
jge
and
lods
loope
imul
push
fbld
cmc
sub
cmp
nop
sahf
adc
or
ins
inc
cmp
stc
mov
rcl
add
add
imul
and
sbb
dec
shr
and
xchg
xchg
in
pop
and
or
push
inc
cmp
xlat
(bad)
mov
xchg
push
xor
ss
mov
cmps
ss
iret
das
test
fdivp
xchg
dec
sub
sbb
cmps
mov
xor
pop
icebp
test
cmp
retf
add
fisub
mov
jns
mov
out
jnp
iret
xor
gs
adc
mov
test
push
(bad)
cmp
repz
mov
cmp
pop
jp
aaa
cmp
xchg
int
fsub
movs
fwait
inc
ja
arpl
jecxz
aaa
inc
fadd
mov
cmp
xchg
cmp
cmc
fstp
es
cmp
and
mov
mov
inc
fcomp
mov
outs
xor
fistp
mov
pop
xchg
int3
fs
lock
sbb
xchg
ins
fstp
loopne
inc
loope
mov
fnstcw
fsub
daa
leave
out
repz
jmp
mov
xlat
aam
mov
sub
inc
shr
dec
gs
mov
jecxz
aad
sub
cmps
shl
sqrtps
dec
jmp
imul
into
xchg
xor
sbb
or
jns
dec
shr
and
cmp
das
mov
push
js
retf
inc
bound
out
iret
add
scas
sub
fnsave
mov
push
xor
aaa
xor
push
dec
shl
addr16
xor
movs
adc
jae
mov
retf
inc
pop
mov
addr16
and
push
and
shl
sub
loop
jle
ss
pop
aad
mov
cmps
cs
ja
pushf
out
jbe
xor
fnsave
pop
js
cmp
and
pop
movs
enter
mov
xor
push
cmp
mov
loop
test
out
stos
imul
cs
or
sub
sbb
out
sbb
jmp
(bad)
cmc
adc
xlat
jae
lock
jge
loope
mov
js
outs
xor
dec
push
pop
and
(bad)
aas
mov
lahf
punpckldq
push
xchg
imul
pusha
and
pop
jb
imul
enter
xor
dec
jg
xor
push
mov
ds
adc
push
cmp
out
mov
dec
xor
xchg
(bad)
or
xchg
and
add
push
imul
cmc
out
cs
mov
add
iret
es
test
pop
fs
(bad)
push
pop
dec
dec
cmp
add
in
xchg
xchg
stos
jmp
sbb
mov
sub
adc
hlt
sbb
retf
fcmovu
pop
lds
or
pusha
imul
test
jl
mov
jne
lahf
mov
fadd
add
mov
mov
(bad)
pushf
popa
sub
outs
enter
f2xm1
inc
push
clc
dec
scas
iret
popa
jg
inc
and
push
xchg
mov
push
or
cld
outs
sar
sub
(bad)
out
push
and
push
cmp
scas
sub
sub
fsub
dec
movs
mov
loopne
nop
hlt
xor
mov
push
ins
ss
pop
sub
movs
pop
(bad)
jmp
push
ficomp
and
mov
or
and
xor
scas
add
add
dec
xor
inc
adc
adc
and
or
cdq
xor
or
mov
mov
adc
inc
add
inc
sub
push
push
fadd
movs
pop
push
mov
imul
imul
dec
outs
mov
xchg
(bad)
jmp
push
int
sbb
cmp
push
mov
adc
rcl
xchg
fisttp
xor
mov
jae
int
jg
sbb
add
xor
cmps
rol
pop
xor
shl
dec
nop
jae
push
mov
dec
sbb
pop
jmp
push
cmps
push
mov
sub
and
mov
mov
enter
inc
jae
pop
pop
mov
or
inc
sbb
pushf
or
and
mov
dec
sub
stos
xor
dec
cmp
add
inc
in
pop
outs
test
repnz
in
xor
sbb
mov
out
or
mov
mov
jne
in
add
scas
es
imul
inc
scas
lahf
push
jnp
or
imul
(bad)
fwait
rcl
push
push
mov
rol
dec
cdq
(bad)
adc
js
xchg
ret
(bad)
jns
loope
out
fcompp
xchg
and
test
lahf
mov
iret
dec
mov
and
icebp
push
mov
addr16
push
test
pop
xchg
dec
dec
rcl
leave
nop
aam
push
push
push
push
mov
inc
cmps
movs
pop
data16
mov
push
fisub
push
test
jp
xor
push
icebp
push
mov
sbb
xchg
push
cmp
cmps
movs
pop
in
mov
iret
inc
clc
jae
outs
push
clc
(bad)
loope
jnp
mov
mov
sub
cmp
pop
(bad)
cmp
retf
mov
sbb
mov
bndldx
enter
xchg
sbb
fstp
xor
sub
add
out
dec
mov
aam
call
mov
ins
iret
lahf
or
sbb
xchg
push
sbb
arpl
loop
(bad)
xlat
mov
jae
xor
shr
popa
das
popa
mov
inc
cmp
sbb
cld
ja
stos
push
jns
adc
shr
pop
jl
es
retf
xlat
icebp
adc
dec
push
push
fdiv
out
mov
ficomp
pop
xor
jo
inc
xchg
xor
push
stos
push
cdq
stos
xor
jb
inc
cmp
mov
adc
loope
stos
and
mov
or
int
or
retf
outs
scas
mov
(bad)
dec
imul
hlt
repnz
inc
pusha
mov
cmp
sahf
hlt
scas
lods
mov
inc
pushf
jb
cmp
xor
sbb
cmc
stos
mov
movs
mov
push
std
sahf
fimul
fs
sbb
movs
bnd
mov
call
imul
xor
push
out
cmp
xor
(bad)
mov
push
mov
dec
shl
pop
js
loop
ret
cli
xchg
jmp
(bad)
inc
movs
xor
add
xor
je
in
idiv
add
mov
push
mov
cs
popf
std
sbb
xor
xchg
popa
sbb
mov
adc
(bad)
fld
xor
jl
jg
stos
push
shl
pop
dec
daa
or
test
sbb
sbb
ins
xchg
dec
xor
cs
xor
test
jmp
ret
sti
(bad)
pusha
add
out
jecxz
sub
mov
(bad)
push
cmp
cld
sub
cmp
add
bnd
dec
(bad)
inc
not
gs
pop
int3
repz
repnz
imul
dec
pop
lahf
pop
mov
ins
out
xchg
inc
adc
mov
test
jmp
mov
enter
sub
arpl
or
add
pushf
jp
adc
outs
sub
stos
mov
(bad)
pop
mov
dec
shr
or
add
les
je
stos
xor
ins
fadd
sti
push
sub
mov
push
xor
sbb
iret
adc
lds
shl
or
jp
aam
shl
inc
std
stos
es
outs
push
call
cmp
jae
test
push
cmc
or
adc
or
sbb
or
pop
int
into
cwde
adc
pop
mov
aam
aam
jns
pop
mov
inc
push
or
test
lods
dec
std
push
jmp
xor
dec
cmc
or
fisub
fisub
or
push
aaa
shl
loopne
xor
sbb
test
add
ins
fst
aaa
push
loopne
ins
adc
movs
imul
sbb
mov
jecxz
push
in
cmps
test
inc
pop
mov
xlat
das
movs
shl
xlat
mov
out
mov
lods
int
gs
mov
inc
push
pop
sahf
and
hlt
jmp
test
(bad)
and
mov
push
mov
cmp
mov
pop
in
fs
mov
jmp
or
lods
push
dec
sahf
daa
mov
je
movs
es
shr
jnp
dec
or
lods
sub
das
ds
inc
ret
add
gs
and
dec
pop
fimul
add
mov
xor
sub
dec
call
(bad)
xchg
movs
jns
mov
cli
pop
fmul
outs
ret
mov
mov
pop
dec
movs
adc
mov
imul
aaa
sub
xchg
rcr
sahf
dec
inc
pop
shl
mov
and
or
js
fnsave
dec
shr
(bad)
cld
mov
xor
sti
dec
mov
gs
std
sub
push
lea
inc
mov
xor
loop
xchg
ja
retf
fld
into
cmp
mov
fiadd
data16
(bad)
cmp
lods
sahf
out
jne
push
push
sbb
sub
dec
adc
add
or
pop
adc
sbb
test
leave
lods
dec
outs
das
gs
(bad)
jae
inc
int
pop
push
in
pop
inc
out
jno
mov
popa
fcomp
hlt
xor
sub
sbb
fst
addr16
outs
xor
sbb
mov
dec
int
push
mov
sahf
cmp
fmul
lds
into
cmp
push
inc
xchg
add
xlat
add
movs
(bad)
int
pop
mov
mov
push
sub
nop
pushf
push
ror
xchg
retf
inc
adc
inc
add
add
adc
outs
push
imul
rcr
fldcw
cmps
cmps
dec
mov
xchg
mov
inc
sbb
sub
adc
ins
ror
loop
mov
push
dec
retf
mov
fwait
inc
xor
jae
push
add
ss
bound
xor
and
push
sub
mov
cmp
mov
add
loopne
sub
inc
int
cmc
movs
fisttp
out
push
sahf
sub
push
mov
rcr
out
inc
pop
mov
repz
sbb
mov
xor
inc
mov
push
in
xor
sub
pusha
push
stos
push
xchg
adc
stos
dec
leave
mov
pop
dec
cmp
cmc
and
xchg
mov
ss
aam
push
es
mov
mov
or
je
mov
cs
fistp
and
popa
test
stc
add
imul
jmp
cmp
mov
xchg
out
sbb
test
lahf
pop
xor
push
cmp
add
cmp
in
clc
aam
js
shl
mov
in
outs
and
cld
fwait
xchg
loop
mov
aaa
retf
push
jb
inc
xor
jnp
mov
push
jnp
sub
sub
pop
cmps
pusha
sar
jecxz
cmp
mov
mov
daa
inc
mov
xchg
shr
xchg
loope
dec
pop
mov
out
in
lods
and
mov
and
and
inc
(bad)
fdiv
int3
pop
outs
bound
and
sub
iret
lods
dec
cmps
call
inc
jae
push
enter
lods
sbb
aad
pushf
sbb
and
inc
test
push
cmc
test
int
mov
ins
push
mov
das
inc
cs
retf
xchg
(bad)
jp
jmp
adc
ss
and
enter
xchg
cmp
inc
mov
cli
jb
add
mov
fsub
mov
and
and
aam
cwde
mov
out
test
jecxz
jl
push
shl
push
ds
xchg
mov
push
aad
xchg
(bad)
sub
in
and
pop
repnz
dec
cmps
and
(bad)
sahf
les
push
push
int3
ficomp
xchg
ficom
ds
hlt
or
lods
movs
std
dec
dec
movs
sti
sbb
cmp
movs
xchg
mov
push
nop
inc
arpl
ret
and
imul
or
add
push
xor
and
js
cs
mov
jne
pop
xor
jno
mov
cmp
xchg
xchg
movs
ins
int3
jb
test
mov
mov
dec
sahf
sbb
xchg
cmp
add
xchg
cmp
cmp
lods
cmps
mov
jp
push
fdivr
cmp
les
mov
cmp
inc
jae
adc
stc
pop
imul
mov
push
inc
ins
adc
pusha
inc
mov
push
inc
(bad)
fbstp
add
cmp
cmp
repz
mov
inc
shl
or
xor
shl
iret
xor
rcl
stc
push
dec
adc
pusha
es
mov
(bad)
cmps
xchg
push
aad
fist
xchg
dec
mov
int3
outs
sbb
loopne
xor
pop
test
mov
aaa
aas
jecxz
cmp
sbb
add
test
imul
imul
test
jb
in
aam
shr
cmc
test
xchg
lods
inc
mov
jo
into
cmp
hlt
loop
xor
nop
fstp
mov
pusha
or
adc
push
push
or
mov
or
sar
mov
add
fistp
mov
push
cs
cs
ror
cs
xor
xchg
or
cmc
sbb
xchg
jmp
cld
into
xchg
mov
lods
inc
(bad)
test
inc
aaa
inc
aad
cmps
mov
sub
and
jecxz
fidivr
xor
sub
mov
mov
inc
(bad)
mov
sbb
pop
mov
push
push
mov
pop
jl
pop
mov
mov
aam
push
aaa
pop
int
adc
cmc
or
scas
shl
and
cmc
test
call
sub
loopne
push
call
mov
ins
ins
std
fcmove
fwait
and
sahf
inc
jbe
and
mov
ficomp
test
xchg
xor
call
push
ss
shl
bswap
sahf
fnsave
push
push
mov
fisub
xor
xor
push
rcr
lods
shl
pop
xchg
sbb
iret
cmp
jge
push
xor
mov
push
addr16
mov
in
mov
sti
inc
clc
xchg
push
imul
loopne
out
addr16
clc
es
pop
adc
gs
loope
push
inc
out
xor
xchg
adc
paddq
mov
(bad)
inc
(bad)
sub
push
mov
js
in
sti
jge
inc
in
dec
ret
out
sbb
pop
cmp
lahf
mov
cmp
(bad)
xlat
lods
out
data16
push
dec
ins
lods
fs
out
dec
mov
mov
pop
inc
or
jo
in
pushf
cmps
das
jns
dec
cld
xor
loope
jo
sub
push
stos
add
sar
cs
retf
std
pop
les
fwait
cdq
adc
dec
ss
mov
mov
popa
dec
pop
sar
cmp
or
popf
adc
les
jp
les
fisub
pop
bound
adc
mov
shl
ja
jno
sbb
(bad)
js
mov
retf
sub
push
push
mov
pop
mov
rol
xchg
in
outs
ror
xchg
sbb
adc
sbb
dec
inc
lds
xchg
inc
daa
mov
mov
sub
lds
add
data16
push
xchg
xchg
sahf
imul
mov
movs
add
push
xor
pushf
push
push
sub
push
les
mov
pushf
sbb
cld
push
push
out
out
or
jecxz
cmps
xchg
cmc
movs
fld
mov
pushf
rcr
inc
dec
jno
dec
call
add
mov
les
adc
push
dec
nop
bnd
inc
adc
cs
dec
sbb
add
mov
xchg
jne
push
out
mov
jb
aad
cmp
es
unpcklps
jo
cmps
test
cmps
xchg
adc
aad
ss
or
dec
pushf
rol
xchg
mov
and
push
hlt
xor
jb
cmp
sub
xchg
xchg
push
shl
push
sub
jns
dec
leave
mov
or
pop
shl
xlat
loope
mov
mov
iret
and
jmp
cli
(bad)
(bad)
push
sar
mov
xchg
scas
push
imul
popf
movs
fbstp
enter
fisttp
lods
arpl
fidivr
xchg
and
loop
outs
pop
stc
leave
and
mov
cmps
stos
or
and
jns
aad
call
in
mov
mov
cmp
pushf
xor
push
ja
cld
xor
push
lods
arpl
int
cmps
xor
retw
mov
out
jecxz
into
push
and
loopne
retf
pop
(bad)
pop
pop
mov
and
std
movs
mov
gs
retf
stos
and
cmp
pop
mov
jl
lods
inc
sbb
xchg
imul
inc
push
test
mov
sub
pop
arpl
mov
ja
les
cmps
aam
mov
xor
outs
and
add
push
shr
(bad)
sbb
mov
mov
xchg
addr16
jb
and
imul
and
loop
out
adc
mov
mov
pop
sbb
mov
push
call
push
dec
dec
cmp
loope
mov
pusha
jb
iret
cmp
or
imul
pop
xchg
dec
adc
push
push
mov
cmp
mov
test
mov
aam
fsub
pop
nop
push
imul
dec
imul
xchg
dec
jnp
xor
dec
cmp
sbb
shr
neg
sti
mov
cmc
push
enter
movs
out
pop
hlt
pop
dec
loop
cld
sub
ja
cmps
add
test
mov
xchg
sub
in
mov
dec
ins
jg
mov
push
in
push
mov
xlat
icebp
xchg
inc
mul
ss
repnz
push
imul
jge
jmp
sbb
ins
sub
in
es
sbb
push
pop
(bad)
das
das
int
ss
push
xchg
enter
inc
xchg
pushf
sub
sub
jbe
div
xchg
stc
mov
cmp
jp
xor
test
or
sbb
pop
dec
in
sub
nop
jecxz
and
mov
and
int3
jge
jne
ficomp
jae
imul
xchg
pop
or
popa
fnstsw
hlt
scas
pop
mul
add
lods
inc
dec
pop
xor
mov
jns
sub
outs
xor
sub
clc
cld
adc
daa
clc
xchg
jmp
ins
scas
push
fidiv
sub
jb
cmovae
jmp
lds
add
lods
daa
and
mov
push
fld
lods
xchg
lock
inc
scas
out
inc
mov
inc
repz
out
xor
jns
aaa
jno
stos
cvtps2pi
jp
jae
sahf
sub
movs
mov
ror
daa
call
rol
js
cmps
xchg
inc
adc
lahf
lods
dec
imul
add
mov
cmp
dec
add
and
dec
int
int3
inc
push
push
xlat
cmp
dec
imul
adc
lea
dec
lods
(bad)
mov
mov
dec
pop
call
pop
int
or
xchg
inc
inc
jno
popf
mov
test
stos
fwait
dec
int
jmp
inc
rcr
mov
push
adc
push
in
fdiv
shr
xor
dec
sti
xchg
mov
fisubr
mov
pusha
and
jb
mov
(bad)
adc
jnp
xchg
push
jnp
push
add
and
dec
loop
xor
mov
sti
aam
push
xor
push
adc
out
inc
mov
aam
lods
dec
std
sub
(bad)
mov
icebp
push
or
and
lea
dec
out
or
push
pop
cmps
arpl
push
pop
mov
and
push
leave
stc
push
lea
fisubr
push
jmp
aaa
pop
(bad)
jmp
outs
mov
outs
mov
mov
sub
xor
xchg
xchg
pop
push
xor
dec
push
nop
inc
inc
jo
ins
xor
cmp
out
cmp
jo
mov
pop
in
in
jge
ds
aad
int
push
lock
sub
fld
mov
retf
sub
dec
bound
and
in
ins
fst
lods
xor
stos
sbb
and
shl
daa
ficom
sbb
test
leave
test
rcr
dec
jle
cli
arpl
fldcw
adc
mov
outs
xor
jno
inc
shl
push
cvtps2pd
adc
push
sub
jne
cdq
inc
sbb
jecxz
aam
xlat
add
jp
xor
sub
bound
rcr
jne
mov
cmp
adc
leave
xor
mov
and
nop
push
loopne
xor
cmp
cmps
push
sbb
mov
inc
sbb
push
ins
dec
ror
inc
lods
pop
lea
push
dec
pop
inc
sbb
mov
pop
lods
and
adc
jmp
jbe
jmp
fdiv
int
test
rol
cmp
jp
dec
fmul
mov
sub
push
dec
sub
movs
mov
loop
jp
dec
jp
imul
mov
inc
sub
add
adc
in
sub
xor
xor
in
mov
cmc
xchg
dec
mov
adc
out
mov
xor
data16
dec
dec
mov
test
pop
nop
je
mov
and
data16
sahf
pushf
push
lahf
daa
mov
mov
sbb
xor
cmp
or
sbb
hlt
in
push
sub
scas
arpl
fsubr
inc
rcl
fidivr
dec
(bad)
(bad)
stos
fcomp
iret
adc
pusha
stos
sbb
sysexit
movs
and
les
mov
dec
and
xchg
cmps
mov
mov
cmp
push
jge
xchg
jno
sbb
xor
xchg
out
xor
inc
lds
cmp
in
xor
xchg
mov
or
mov
xchg
dec
fmul
jbe
dec
push
dec
out
mov
add
fcom
ror
test
xor
sbb
jp
push
into
js
push
ret
and
mov
sbb
pop
cmp
popf
push
leave
pop
or
mov
add
not
iret
mov
sar
mov
imul
in
or
mov
pop
lea
and
arpl
lods
pop
cmp
int
sti
rcr
outs
push
xchg
and
inc
test
outs
loop
cld
xor
or
scas
dec
xchg
loop
sub
jl
cmps
xchg
adc
mov
popa
mov
(bad)
fnstenv
(bad)
mov
sub
(bad)
lahf
jp
push
xchg
iret
dec
pushf
xchg
mov
(bad)
and
adc
mov
and
inc
inc
sub
push
xor
cmp
mov
sub
sub
push
push
outs
sub
mov
mov
push
stos
push
sbb
add
push
arpl
and
sub
push
outs
sub
pusha
aaa
scas
cmp
push
aam
fcom
arpl
iret
movs
dec
lea
loop
or
inc
xchg
and
(bad)
pop
rol
xchg
sub
mov
ret
ds
aam
push
sub
and
xlat
adc
mov
gs
pusha
aad
(bad)
xor
dec
jg
test
js
(bad)
test
test
aam
aad
dec
adc
push
scas
(bad)
sahf
push
push
mov
push
jecxz
out
fisttp
cmp
dec
fst
dec
and
add
call
xor
pushf
push
pop
fwait
pop
lods
cmc
sbb
pop
lea
push
stc
push
xlat
mov
inc
cmp
mov
push
pop
dec
mov
rcl
(bad)
push
aam
stos
adc
push
sub
jb
xor
fnsave
push
mov
jbe
mov
imul
iret
daa
aas
enter
pop
mov
dec
bound
movs
loop
add
das
fst
fs
leave
mov
stos
jnp
mov
cmp
add
pop
xor
inc
jmp
dec
cdq
sub
inc
pop
ins
sbb
addr16
jae
sbb
push
test
jo
fxch
mov
adc
sysexit
push
mov
mov
jp
mov
mov
cmps
nop
inc
addr16
fcomp
add
mov
sub
xchg
in
(bad)
es
fnstcw
sbb
cdq
mov
dec
loop
mov
test
mov
and
sahf
sub
retf
scas
xor
call
dec
cvtps2pd
mov
movs
push
sub
add
fst
mov
(bad)
sub
dec
cmps
push
cld
push
xchg
lds
ret
push
xchg
jmp
into
push
mov
xor
icebp
dec
arpl
adc
adc
sbb
movs
loop
cmp
fnstenv
std
sub
mov
out
call
cld
push
stos
sbb
mov
movs
mov
push
out
and
and
inc
(bad)
adc
dec
jae
into
mov
cmps
mov
inc
out
callw
adc
stos
fsubr
(bad)
or
mov
push
fsub
pop
xlat
or
sbb
test
test
mov
test
add
shr
mov
sbb
push
mov
int
sbb
movs
add
xchg
sbb
call
sbb
out
xor
das
pop
popf
adc
outs
mov
push
mov
jno
inc
(bad)
test
iret
pop
(bad)
iret
aas
dec
nop
cmc
test
test
dec
dec
test
aam
je
(bad)
pop
mov
(bad)
sub
in
lahf
dec
scas
dec
dec
xchg
retf
xor
ins
test
outs
js
inc
(bad)
imul
jns
fldenv
push
push
or
xlat
daa
or
(bad)
jmp
push
xor
movs
dec
sub
test
pop
mov
xor
rcr
mov
ss
jno
(bad)
mov
popf
fild
(bad)
sub
mov
into
dec
xlat
mov
in
repz
data16
jecxz
xchg
(bad)
jmp
inc
xor
(bad)
mov
call
jmp
out
call
jnp
es
xchg
into
loop
addr16
es
test
sbb
dec
dec
pusha
lods
in
imul
xchg
retf
push
movs
jnp
ja
mov
test
lods
aaa
jns
(bad)
adc
xor
jne
adc
inc
(bad)
push
icebp
push
pop
movs
jb
in
test
pusha
loop
mov
shl
xchg
push
test
call
cmp
mov
rcl
jmp
mov
call
cmps
iret
sub
push
xor
sub
adc
int
call
cmp
xor
popf
mov
pop
mov
adc
inc
push
jae
adc
add
push
add
imul
dec
pop
lea
and
arpl
mov
push
out
push
cmc
sbb
pop
sub
xor
pop
stos
add
adc
inc
add
dec
or
sub
movs
dec
xchg
dec
mov
and
and
or
mov
bound
popa
fisubr
sbb
movs
imul
imul
dec
add
mov
fdivp
aaa
ss
shl
aad
rcl
lahf
sbb
push
adc
pop
jmp
scas
cmp
mov
ror
mov
out
mov
or
test
jae
sti
cmp
add
js
in
ins
push
jb
dec
jmp
mov
dec
fcom
push
call
arpl
imul
ret
or
pop
push
mov
dec
dec
pop
aam
xchg
xchg
jbe
leave
movs
adc
pop
int3
ins
mov
xchg
pop
push
or
(bad)
div
popa
push
out
push
aaa
jl
push
test
(bad)
push
cmps
pushf
push
sub
dec
jge
shl
or
imul
dec
cmp
lods
dec
(bad)
push
dec
mov
xor
in
xchg
mov
clc
outs
fimul
xchg
push
or
mov
out
push
pop
popf
je
sub
push
inc
shl
mov
jmp
inc
cmp
imul
dec
mov
lds
jp
leave
fcmovnb
scas
popf
push
out
dec
jmp
out
jecxz
mov
mov
inc
jmp
mov
xchg
dec
cmp
test
shl
dec
leave
movs
pop
mov
or
inc
sbb
mov
not
mov
jp
dec
inc
push
pop
aad
and
sbb
cmp
cs
xchg
icebp
mov
stos
inc
aas
popf
pop
sub
test
and
call
add
jns
push
dec
xor
mov
sub
lds
movs
inc
stos
shl
push
iret
and
mov
xchg
mov
fsubr
int3
sbb
xor
adc
xor
jbe
fs
test
pop
push
mov
mov
test
je
xchg
test
push
ret
mov
call
call
in
jbe
test
mov
dec
in
in
sub
jge
and
ror
ret
mov
ret
sub
lods
or
push
aam
fcom
push
aam
test
mov
mov
push
aad
and
test
inc
cmp
int
ja
imul
es
sub
mov
aas
(bad)
outs
clc
lds
sti
inc
jmp
sahf
test
xor
fld
sbb
fidivr
jmp
pusha
retf
sbb
push
or
pop
(bad)
int3
aas
fidivr
popf
(bad)
xchg
pop
mov
es
mov
lods
into
ror
jecxz
rsqrtps
and
call
sbb
cmovae
inc
scas
push
out
pop
int3
mov
jge
rcr
dec
xchg
(bad)
lds
push
data16
inc
scas
inc
push
mov
xor
xchg
cld
maxps
mov
arpl
stos
sbb
das
gs
mov
loopne
push
cmc
popf
xor
mov
mov
(bad)
lods
add
fnstsw
into
int3
push
out
inc
sbb
push
outs
in
jns
mov
mov
ret
pop
mov
out
call
xchg
ret
sbb
push
cmc
push
call
xor
jmp
fwait
xor
push
inc
xor
stos
sub
mov
push
in
int
test
cwde
mov
jae
sbb
pushf
bound
out
pop
inc
(bad)
mov
call
and
cmp
test
arpl
mov
aam
stos
pop
xor
dec
xor
xor
sar
ret
xor
pop
xor
xchg
dec
(bad)
mov
add
loop
push
fidivr
sahf
lahf
sbb
sub
fmul
sub
in
lds
fisub
stos
cmp
arpl
mov
ins
call
arpl
jae
movs
inc
aaa
mov
outs
dec
imul
ss
lods
cmp
add
data16
push
sub
jns
xor
jmp
fcompp
pop
ret
movs
fcomp
lds
nop
dec
data16
mov
push
add
dec
sbb
cmp
push
jae
or
xor
gs
jmp
jmp
jb
inc
fadd
out
push
into
test
jmp
stos
lods
push
test
mov
inc
ins
jp
add
out
xchg
(bad)
pop
or
sbb
xchg
or
cmp
or
(bad)
push
pusha
xchg
shr
and
jecxz
arpl
sbb
or
aas
sub
or
mov
inc
pop
dec
jne
fld
mov
int3
mov
fstp
cli
mov
sti
int
jae
in
cmc
test
push
aas
and
sub
out
dec
test
movs
dec
cmc
sbb
mov
dec
sbb
mov
(bad)
fwait
pop
xor
xchg
push
mov
push
xor
pop
das
leave
lahf
mov
push
pop
or
imul
pop
or
in
stos
adc
cmp
dec
cmp
movs
test
enter
fbstp
imul
jno
push
cmp
and
hlt
(bad)
out
cmps
push
jb
mov
shl
sbb
or
push
lods
mov
jbe
fimul
and
nop
sar
adc
or
cmps
add
pop
pop
add
es
add
mov
loopne
mov
sbb
xchg
mov
lods
retf
or
mov
int
xor
lods
fadd
rcl
add
inc
and
sub
test
xor
ror
ret
push
jnp
mov
mov
adc
(bad)
rol
add
lods
add
xchg
imul
inc
pop
jg
(bad)
cmc
cmps
mov
inc
dec
jb
into
cmp
jp
cwde
mov
xchg
mov
lods
and
repz
jle
pop
cmp
fs
and
lahf
movs
xor
cmps
mov
xchg
pop
aaa
push
and
imul
(bad)
outs
mov
xor
and
inc
push
lods
adc
in
imul
int
rcl
mov
xor
rcr
adc
jb
lds
dec
adc
mov
mov
jno
and
or
jp
sbb
arpl
cmp
jns
pop
imul
call
aam
daa
or
xchg
test
pop
and
mov
shl
mov
xor
leave
xor
aad
leave
mov
xlat
movs
jl
mov
lahf
sbb
xor
sbb
adc
ins
cmp
outs
inc
test
inc
icebp
and
(bad)
push
aad
xor
jns
scas
outs
sahf
loopne
fwait
xor
das
ror
adc
jne
ins
scas
inc
mov
ror
out
and
push
cld
jmp
in
bound
xchg
push
and
aam
dec
xor
ja
lds
push
sahf
mov
jbe
in
int3
push
xor
cmp
test
jmp
pop
fmul
push
pop
xchg
push
jecxz
dec
cmps
call
inc
sub
aad
jno
sub
rcr
mov
push
push
test
int
xor
pop
add
mov
jp
pop
mov
ret
call
pop
cmps
(bad)
cmp
xchg
xor
adc
push
mov
jge
inc
xor
dec
push
call
and
rcl
imul
jne
inc
jl
push
xor
pop
cmps
lock
pop
mov
pop
cmp
push
dec
jo
adc
or
add
sbb
cwde
sbb
push
aam
lods
inc
lea
jp
lods
and
aas
jne
or
xor
mov
shr
add
rol
jae
sar
cmp
mov
ins
adc
dec
xchg
push
push
out
or
add
data16
add
jmp
add
test
pop
sub
adc
cld
pop
outs
jp
les
bound
mov
(bad)
(bad)
pop
inc
xor
pop
(bad)
fwait
mov
jmp
or
fwait
sbb
cli
shl
push
fadd
sub
sub
mov
mov
mov
out
jmp
xchg
cli
pop
mov
in
pop
out
pop
inc
fadd
add
cdq
adc
xchg
ins
sbb
jmp
xchg
ja
xor
push
inc
cmp
test
push
cmps
loop
mov
xor
aad
scas
fcmovnb
jge
push
scas
ins
mov
xor
ja
sqrtps
jp
sbb
in
int
push
fmul
int
xchg
mov
out
push
pusha
mov
popf
cmp
add
dec
sub
mov
outs
cmps
xchg
sub
or
fwait
lahf
jp
fldenv
(bad)
lods
add
into
repz
xchg
test
inc
inc
push
cmp
ins
jno
es
push
and
mov
xor
push
xchg
cmps
(bad)
cmp
in
dec
jb
gs
test
or
sbb
inc
adc
ror
int
ss
inc
push
push
imul
mov
cwde
and
bound
test
cmp
mov
arpl
sahf
pop
adc
sub
mov
dec
(bad)
sub
imul
xchg
sbb
jp
call
xor
push
aas
pop
xchg
xchg
ss
out
movs
(bad)
or
mov
test
jp
lahf
sbb
add
ins
fisubr
mov
fxch
sbb
sub
leave
int
scas
push
pop
pop
test
push
mov
cdq
rcl
aaa
out
dec
mov
or
mov
cld
inc
cmps
imul
or
push
into
test
xchg
ja
(bad)
ss
lahf
jne
loopne
stos
mov
movs
outs
add
adc
cmp
cmp
cmp
jmp
cmps
jmp
mov
ins
int3
inc
inc
add
enter
test
cmp
adc
shl
(bad)
test
and
ret
pop
mov
lds
rcr
push
mov
adc
out
or
or
imul
scas
lds
sbb
sysenter
bnd
xchg
sahf
mov
ss
cmp
gs
jne
jno
dec
sbb
pop
mov
in
jo
dec
rcl
stos
mov
mov
xlat
adc
clc
into
push
aad
mov
or
dec
cmc
stos
xor
ret
ja
mov
or
and
xor
mov
int3
data16
push
xor
test
mov
and
rol
cmps
aaa
dec
ins
inc
add
adc
push
jo
sub
cmps
loopne
push
dec
dec
and
je
movs
cmps
push
in
mov
ret
test
in
xchg
dec
jecxz
jmp
out
les
pushf
sbb
retf
inc
leave
fs
sahf
mov
sbb
test
xor
jl
test
lods
or
and
loop
and
ds
stos
in
fxch
or
mov
xor
push
ins
xchg
test
inc
jg
gs
mov
push
inc
cmc
push
jno
(bad)
cmc
dec
cwde
retf
xchg
xchg
push
add
xor
les
dec
ret
pop
mov
stos
and
imul
addr16
in
(bad)
inc
nop
mov
mov
mov
int
lods
xchg
dec
into
sub
sbb
inc
xchg
sub
shl
lods
mov
adc
cmps
adc
adc
push
inc
repz
or
and
mov
mov
int
jl
sar
call
xor
into
inc
cmp
cmp
adc
adc
sahf
imul
mov
stos
cmp
mov
sub
xor
cdq
outs
adc
retf
out
and
cs
retf
mov
push
bound
and
dec
lods
push
test
push
mov
daa
push
mov
mov
sub
add
stos
inc
push
xor
mov
aam
push
jge
inc
push
xor
mov
mov
loopne
movs
push
shr
int
sbb
ret
cwde
mov
lea
call
sar
mov
mov
mov
mov
in
mov
ins
mov
int3
inc
les
arpl
push
mov
mov
push
add
stos
fs
mov
ins
adc
jecxz
sahf
push
jns
adc
sar
rol
in
or
adc
icebp
dec
sbb
mov
xchg
out
ins
dec
xor
outs
add
ret
jmp
pop
shl
push
push
or
gs
push
enter
push
inc
inc
push
mov
les
outs
fdivr
hlt
stos
pop
test
mov
sbb
std
punpckhdq
enter
mov
mov
(bad)
icebp
stos
lds
loop
add
push
fisttp
mov
aad
mov
in
out
mov
push
and
jecxz
pshufw
lahf
inc
pop
add
sub
jp
xor
dec
adc
int3
push
jno
jno
fs
sbb
retf
cs
test
xor
loop
cmp
sbb
movs
ins
or
xchg
jmp
fist
sub
jge
jle
(bad)
cmp
cld
sub
mov
ds
xor
sti
test
loope
xor
inc
ror
jp
pop
(bad)
movs
addr16
jnp
adc
jb
stc
cmps
xchg
leave
cmps
adc
cs
imul
mov
jmp
in
(bad)
cwde
dec
add
cwde
(bad)
adc
sub
xor
pop
xor
fiadd
es
pushf
sbb
dec
movs
aad
sbb
or
add
ins
push
pop
mov
add
inc
xor
sbb
call
int
xor
imul
movs
sbb
xor
xchg
int
fwait
nop
xor
mov
dec
mov
jnp
mov
daa
loop
iret
add
sub
adc
sub
sub
add
leave
fwait
and
mov
mov
movs
jns
add
sub
outs
mov
rcr
bound
retf
xchg
pop
in
xchg
popf
movs
loopne
push
inc
jno
pop
out
arpl
inc
jp
xor
pop
jmp
dec
lods
(bad)
sub
and
cmp
and
xor
call
cmp
sub
les
adc
stos
push
jno
int
ja
inc
(bad)
mov
xchg
out
hlt
pop
pop
pop
ret
in
sbb
jae
inc
cmp
push
sahf
mov
push
test
adc
outs
adc
out
mov
mov
inc
mov
scas
xor
je
imul
icebp
push
mov
push
test
pushf
aam
dec
je
pop
add
push
and
aaa
pop
jbe
(bad)
fiadd
mov
int3
data16
enter
lods
jae
(bad)
(bad)
outs
dec
icebp
push
div
push
xchg
pop
mov
lods
fs
xchg
(bad)
mov
xor
add
mov
arpl
dec
jae
mov
(bad)
movs
je
adc
retf
jae
ss
mov
and
push
or
lods
je
mov
cmps
loope
pop
jbe
dec
dec
pop
ds
je
push
sbb
in
cmp
lods
pop
push
and
pop
dec
pushf
call
push
mov
sbb
add
(bad)
dec
call
push
shl
cmp
fst
or
push
fsub
fdivr
sub
inc
leave
movs
and
lods
dec
call
jo
mov
pusha
(bad)
fwait
inc
push
push
add
push
adc
cwde
rcl
adc
cmp
cmps
push
add
dec
sahf
imul
mov
mov
xchg
movs
ss
cmp
sub
inc
and
or
mov
push
dec
sub
(bad)
sahf
add
sbb
test
push
mov
dec
daa
adc
out
and
inc
and
rcl
into
or
imul
in
inc
aam
sbb
std
mov
fbld
movs
test
jbe
out
arpl
push
and
inc
mov
sbb
push
xor
xor
cli
push
aaa
in
push
fs
popf
ss
push
mov
mov
cmps
sub
mov
push
jae
push
out
pop
rol
stos
push
sub
or
cmp
push
stos
in
dec
mov
sub
adc
xchg
xchg
inc
mov
nop
cmps
mov
jmp
aaa
xchg
(bad)
adc
sbb
mov
aad
sar
sahf
xchg
cs
cmc
pushw
xchg
ret
xor
jne
xor
scas
pop
sub
sub
cmps
pop
lods
outs
sbb
dec
cmps
movs
inc
test
test
push
push
sub
sub
inc
dec
adc
push
call
push
push
mov
stos
bound
ret
jo
adc
outs
retf
cmp
test
push
ror
mov
leave
(bad)
mov
aaa
inc
nop
jp
mov
pop
pop
adc
xor
sbb
sub
lods
sbb
retf
sub
mov
in
push
adc
xchg
pop
inc
jl
aam
(bad)
test
test
aam
imul
fcmovb
outs
mov
and
mov
pop
loopne
(bad)
cmps
mov
(bad)
sub
add
js
adc
adc
xchg
push
pop
daa
cmp
jmp
jae
pop
jb
mov
cmp
test
daa
xchg
arpl
jbe
cmp
push
mov
stos
prefetch
or
shld
push
loopne
fidivr
inc
stos
fsub
add
sbb
ror
xor
cmp
sub
xor
mov
cmps
jb
dec
mov
adc
jae
popf
leave
mov
jb
sbb
mov
ds
inc
and
(bad)
stos
in
js
aaa
jnp
gs
(bad)
push
jl
mov
fld
rcr
push
pop
mov
lds
sub
sti
rol
dec
mov
(bad)
fstp
push
xor
hlt
sbb
pop
out
test
sub
push
xchg
rcl
fmul
push
pop
jmp
adc
jp
(bad)
lea
sub
and
and
push
xchg
and
pavgw
mov
imul
shr
xlat
ins
xor
div
loopne
sbb
outs
mov
push
dec
xlat
push
mov
push
test
repnz
fdivr
lahf
clc
test
lock
shl
mov
mov
sub
mov
xor
adc
pop
loop
or
xchg
ss
pop
pop
inc
and
adc
dec
in
inc
or
aam
add
mov
jbe
fnstsw
push
xchg
ins
cwde
xor
mov
clc
xlat
mov
sbb
out
sub
call
mov
inc
mov
inc
(bad)
cmp
jmp
lods
xchg
inc
(bad)
jle
outs
cli
je
jne
cld
rcl
inc
aaa
stos
sbb
fistp
dec
enter
sub
push
mov
movs
loopne
(bad)
icebp
pop
push
xchg
icebp
dec
xor
(bad)
cdq
loope
sub
cmps
dec
sub
pop
ret
jnp
xlat
push
shl
cmp
cwde
push
pushf
mov
xchg
loopne
pop
cld
daa
sbb
outs
pop
jne
retf
out
ja
adc
arpl
mov
aad
frstor
aas
adc
retf
adc
scas
jns
xlat
mov
loop
mov
ficomp
sub
call
dec
aaa
sub
in
rcl
mov
inc
loopne
not
in
dec
in
pop
test
rcr
push
dec
retf
dec
jl
mov
cmp
retf
xchg
sahf
imul
xchg
cmp
out
sub
mov
aam
mov
lahf
mov
pop
retf
imul
(bad)
int3
test
mov
mov
out
dec
jae
push
aad
mov
repz
dec
daa
mov
push
int
sbb
jbe
mov
imul
loope
fwait
loopne
mov
dec
cmp
call
push
test
sbb
sub
and
push
mov
rcr
aam
shl
cmp
(bad)
mov
lods
js
xlat
dec
mov
adc
mov
(bad)
and
jge
into
mov
jbe
ficomp
je
leave
in
xchg
cmp
inc
jne
popa
pop
mov
xchg
call
jecxz
cmc
cmp
ja
mov
adc
inc
lds
fs
inc
push
inc
in
lods
jp
sbb
nop
aam
push
ins
adc
cmp
jns
aaa
mov
fld
lods
inc
fdiv
cmps
mov
loop
dec
ret
pop
fimul
cmps
fidiv
xor
and
push
inc
(bad)
jno
jae
mov
sbb
adc
mul
push
sbb
aam
jle
jne
jmp
fnstsw
mov
jmp
xor
push
cmc
aaa
mov
daa
and
lea
test
fs
sub
add
shl
or
cmp
imul
dec
outs
inc
inc
xor
cmps
ror
push
cmc
test
lods
dec
jp
dec
test
test
inc
push
mov
mov
loop
or
dec
bound
cmp
inc
add
push
cmp
sub
xchg
push
mov
test
dec
test
call
inc
push
push
sub
or
addr16
adc
sub
and
(bad)
mov
mov
ss
mov
aam
je
jae
inc
(bad)
xchg
lock
mov
xor
xchg
dec
push
dec
dec
stos
adc
sti
aam
imul
imul
push
dec
jp
call
add
inc
adc
inc
ret
mov
mov
or
sub
jp
xor
mov
shl
sar
push
push
call
mov
xor
aam
add
inc
adc
jne
clts
mov
call
ins
dec
out
push
mov
xchg
imul
add
fisubr
movs
daa
adc
xor
dec
push
mov
jns
inc
inc
call
sub
cwde
or
jae
cdq
fwait
pop
mov
call
push
xchg
inc
lahf
ror
mov
sbb
dec
dec
in
lods
mov
push
add
add
lods
add
pushf
sub
jmp
mov
imul
adc
cmp
push
dec
stos
dec
in
mov
aad
cdq
inc
jmp
(bad)
fidiv
sub
gs
sub
pop
dec
aam
pop
jae
test
std
sub
cmp
movs
scas
adc
cwde
fldl2t
pop
mov
push
jle
dec
loope
dec
pop
lfs
sbb
test
sbb
fisttp
xor
ja
mov
mov
fcomi
enter
arpl
ret
iret
inc
pop
or
and
jnp
(bad)
lahf
lea
mov
sub
mov
iret
sub
xor
xchg
imul
loopne
mov
and
push
add
push
fldcw
bound
test
push
mov
or
sbb
jp
mov
push
cmp
xor
inc
cmp
sbb
cmps
movs
jp
xchg
xor
addr16
xchg
adc
out
xchg
push
or
jb
stos
sbb
pop
fcomp
and
push
or
sub
xor
pop
xchg
aam
mov
sbb
lods
call
sbb
sub
push
xchg
push
cmp
pushf
sbb
mov
and
push
bound
inc
ins
sahf
xchg
mov
mov
shr
sub
test
inc
icebp
sub
and
xchg
daa
mov
push
inc
cld
jne
stos
add
jecxz
push
mov
push
cmp
jo
ficomp
inc
stc
cmps
add
in
and
jne
pop
pinsrw
mov
jg
outs
sub
and
pop
mov
repnz
dec
or
sbb
jle
icebp
(bad)
(bad)
lods
mov
push
test
addr16
scas
add
xor
push
hlt
loop
scas
mov
and
jbe
jp
and
jmp
bound
movs
int
mov
push
leave
test
movs
pop
cmp
mov
fiadd
sub
popfw
lds
(bad)
(bad)
not
pop
arpl
test
dec
sbb
push
mov
aas
pop
sahf
shr
pop
lods
(bad)
xchg
inc
fdiv
mov
push
int
cli
shl
adc
dec
push
cmp
dec
xor
push
sbb
jns
inc
push
jb
inc
(bad)
pop
cmp
push
clc
push
sti
inc
jmp
push
mov
cmc
fisttp
jl
sbb
scas
rol
jle
jnp
jae
cld
adc
mov
jg
inc
(bad)
aam
neg
mov
xchg
int3
jle
xlat
cld
jnp
int
aad
pinsrw
jne
das
hlt
fstp
ror
or
sbb
mov
jp
sar
pop
stos
std
ja
loope
fst
mov
cli
ins
inc
stos
imul
ja
repnz
fadd
lds
sub
hlt
and
in
in
jo
mov
out
mov
jg
cli
and
loopne
(bad)
push
adc
adc
xlat
dec
xlat
xchg
jl
jg
pop
inc
xchg
popa
xor
add
sahf
lahf
dec
mov
fist
loope
mov
mov
inc
pop
push
inc
jl
adc
popf
cmps
fdivr
sbb
push
pop
mov
(bad)
cmc
es
push
lock
mov
cld
(bad)
xor
mov
add
outs
stos
push
loopne
stos
jo
sbb
jae
das
inc
sub
retf
push
or
add
aaa
xchg
enter
arpl
call
adc
inc
mov
mul
xor
icebp
jmp
push
fwait
xor
inc
(bad)
ins
int
sahf
mov
add
adc
and
mov
xchg
in
sub
stos
rcl
push
push
xor
xor
imul
daa
cwde
mov
jecxz
mov
aad
inc
aam
xor
aam
loop
callw
mov
in
jo
les
repz
sbb
cmp
push
adc
cs
jmp
mov
cmp
pop
fisttp
lods
push
cmp
jns
addr16
mov
fistp
cmp
xchg
pop
mov
inc
aam
and
xchg
popa
xor
push
xor
test
mov
shr
(bad)
(bad)
push
paddusb
sahf
aad
fist
mov
mov
jmp
popa
xor
int
imul
push
push
cmp
out
pop
mov
inc
std
sub
or
test
jbe
and
jae
cmovp
arpl
sub
xchg
inc
test
dec
pop
mov
hlt
mov
jbe
xchg
add
xchg
cmp
inc
inc
inc
jecxz
fldenv
not
push
jbe
inc
je
dec
mov
mov
sahf
scas
mov
out
jae
nop
sbb
xor
lahf
push
xor
mov
push
in
lea
xchg
add
pop
ins
mov
mov
and
fcmovu
push
sub
pop
ret
mov
adc
cmp
mov
jge
pop
mov
mov
retf
mov
pop
xchg
sbb
stc
in
push
imul
lods
xor
test
rol
hlt
cmp
movs
inc
dec
out
push
adc
inc
fs
imul
xor
mov
leave
cmps
sahf
xchg
and
in
xor
movs
imul
pop
mov
or
test
add
sbb
sahf
imul
call
cmc
lods
retf
adc
test
(bad)
mov
das
push
mov
sub
push
inc
and
sub
adc
movs
mov
adc
pushf
ror
sub
test
sub
sub
dec
inc
cmp
pop
push
rcl
or
or
movs
inc
mov
dec
mov
inc
(bad)
cmp
push
jae
fisttp
imul
push
popa
jmp
mov
imul
test
mov
and
mov
push
pop
loop
inc
push
and
xchg
push
dec
mov
mov
mov
test
ss
sbb
test
movs
movs
jmp
dec
adc
jbe
and
test
out
cmp
dec
xchg
jno
or
sahf
push
pop
or
mov
mov
sahf
mov
sub
stos
mov
pop
add
mov
lahf
sub
fdivr
xlat
cmp
mov
imul
pop
mov
dec
push
mov
or
adc
bound
loopne
sub
adc
push
test
movs
push
lods
adc
cmp
push
add
push
stos
push
mov
stos
fadd
push
push
mov
mov
out
inc
call
push
mov
jns
push
xor
call
div
adc
mov
fwait
inc
cld
arpl
ja
sbb
cmps
(bad)
leave
xchg
(bad)
pop
aad
pop
mov
sub
pop
ret
mov
(bad)
(bad)
mov
push
jnp
retf
jbe
adc
pop
cmps
js
les
shl
movs
jg
mov
retf
nop
mov
jae
dec
push
inc
int
cmps
lods
push
aam
jns
loopne
mov
lods
adc
push
sbb
push
stos
jno
add
mov
mov
test
iret
jp
push
cmp
movs
push
push
mov
and
enter
sub
mov
imul
push
lds
retf
xor
mov
movs
push
push
add
sahf
xchg
ins
repz
or
call
test
imul
sub
sub
retf
and
jbe
pop
or
and
mov
cmps
outs
jno
mov
leave
push
cdq
mov
push
sub
test
fldenv
sbb
out
push
mov
adc
popf
and
stos
inc
or
cmp
retf
aam
xchg
movs
lods
jge
(bad)
out
sahf
push
fmul
push
xor
ss
and
inc
loop
dec
fisttp
jb
dec
pop
(bad)
hlt
int3
out
xchg
or
loop
xor
jno
xchg
jg
and
jne
adc
sbb
xor
push
adc
loope
push
in
push
sub
add
pop
ficom
add
jmp
push
(bad)
test
sahf
xchg
addr16
mov
mov
cs
loope
test
lahf
or
push
ds
sub
retf
jae
pop
jl
enter
pop
imul
or
test
push
jbe
aam
jg
cld
pop
icebp
stos
ret
clc
pop
jbe
scas
mov
lock
loop
(bad)
lods
dec
(bad)
out
jnp
and
punpckhdq
sbb
scas
xor
dec
(bad)
pop
dec
test
movs
xchg
dec
mov
int
les
xchg
jmp
ins
out
loopne
icebp
int
xchg
gs
fidivr
(bad)
aas
push
cld
jge
popa
sar
sub
mov
cmps
shl
and
repz
or
sar
cmp
sub
outs
out
inc
icebp
pop
out
fwait
test
test
mov
inc
xchg
cld
cmp
push
retf
xchg
xchg
or
repnz
bound
dec
adc
sub
outs
or
pusha
ret
stos
pop
sbb
pushf
adc
push
and
arpl
pop
shl
mov
int3
nop
mov
mov
xor
lds
aaa
xor
in
or
popa
inc
iret
pop
fwait
call
sahf
(bad)
mov
aad
stos
sbb
(bad)
xor
loop
dec
jp
fs
push
cs
(bad)
xor
cmp
(bad)
bound
xchg
pop
inc
jmp
xor
push
push
cmp
push
mov
cmp
movs
mov
and
dec
fs
and
dec
data16
mov
mov
cmps
aaa
xor
sbb
push
mov
mov
mov
cmps
xor
or
or
lea
mov
cdq
mov
jp
dec
test
lods
xchg
lds
xchg
sub
ds
jmp
cmc
sbb
push
jecxz
sub
mov
xor
lods
fldcw
and
dec
and
lods
adc
jno
push
retf
mov
ja
(bad)
dec
jns
dec
add
outs
sub
lods
cmp
mov
(bad)
adc
imul
mov
scas
int
cmp
pop
ficomp
cmp
(bad)
mov
out
xchg
dec
push
xor
pop
xor
popf
clc
cmp
test
pusha
mov
dec
dec
xchg
xor
outs
cmp
or
add
mov
push
jae
test
mov
or
xor
cmp
push
inc
add
inc
adc
aam
rol
adc
mov
call
adc
bound
push
data16
mov
dec
lods
sbb
xchg
mov
sub
das
cmp
sub
xor
sub
dec
add
inc
jmp
cmp
xor
mov
movs
mov
cs
lods
or
jmp
mov
push
inc
cmp
call
cmps
daa
cmp
adc
mov
xor
std
jmp
mov
push
xor
sbb
stos
xor
cmp
push
nop
mul
xchg
adc
cmp
js
push
aam
hlt
movs
add
popf
ret
adc
test
in
jmp
inc
loop
jnp
mov
push
adc
sub
xor
dec
push
ins
dec
lods
mov
lds
sahf
sub
push
call
add
inc
sbb
cdq
stos
fmul
mov
mov
inc
ss
pop
mov
adc
dec
pop
xor
sbb
sbb
je
jae
popf
int3
call
push
test
push
cdq
xchg
mov
cmps
stos
sbb
(bad)
in
mov
out
sbb
icebp
push
add
imul
sub
pop
sbb
mov
nop
lods
mov
das
xor
mov
es
mov
adc
arpl
nop
jge
inc
int3
fisubr
jecxz
jo
aad
pop
pop
xchg
dec
cmp
mov
pushf
pop
inc
ins
fcomp
inc
sbb
test
(bad)
jecxz
sbb
xor
push
pop
xor
adc
add
iret
adc
imul
sub
push
sub
push
cdq
fwait
inc
test
push
pop
call
add
in
mov
int3
fisub
pop
sbb
popf
inc
push
imul
mov
xor
sar
shr
test
rol
or
pop
mov
push
pop
xchg
sbb
add
pop
push
out
ret
mov
(bad)
push
mov
jo
xlat
call
jnp
fimul
sbb
inc
dec
cmp
push
inc
movs
ss
cmp
std
outs
pop
mov
xchg
jle
pushf
retf
movs
or
adc
dec
mov
outs
cmc
movs
push
adc
pop
call
sub
mov
push
pop
dec
ja
mov
in
and
shr
sbb
xor
(bad)
jnp
inc
sbb
aaa
daa
mov
pop
popa
fxch
movs
into
sub
jb
sub
cmps
mov
dec
inc
ins
push
fsubp
and
out
and
sbb
test
mov
imul
lahf
or
sub
or
dec
movs
fild
sti
jns
cmc
add
in
aas
dec
les
out
jne
sbb
lods
cld
sub
leave
jae
cmp
(bad)
jmp
cmp
(bad)
xor
aas
add
iret
out
fnstsw
imul
push
pop
imul
fninit
call
lds
dec
out
jo
gs
aas
push
std
xor
dec
jns
xchg
pop
(bad)
cli
dec
pop
ja
aam
xor
dec
gs
ins
xchg
sbb
(bad)
popa
ins
xlat
aam
pop
(bad)
das
or
jno
pusha
sar
sub
push
sbb
ins
mov
jns
mov
in
cmp
pushf
cld
pusha
std
fwait
cld
inc
lock
xor
and
fisttp
repz
imul
xor
cmovge
daa
imul
lods
ja
push
pop
pop
xor
shl
out
mov
cmp
mov
xchg
mov
mov
loopne
cmp
pop
push
enter
lods
retf
hlt
lods
mov
push
inc
sub
xor
inc
repz
scas
and
adc
test
and
xor
outs
movs
fld
daa
ficomp
movs
shr
sahf
cmp
arpl
xchg
xor
xor
xchg
stos
inc
mov
ss
test
repz
fldenv
lea
aaa
outs
jns
dec
lods
dec
fstp
fld
mov
hlt
push
xor
pop
ins
test
mov
cmp
inc
(bad)
movs
(bad)
sub
dec
push
jae
push
mov
mov
mov
popa
jmp
daa
or
stos
or
hlt
movs
push
sbb
aam
(bad)
pushf
js
call
movs
or
inc
mov
movs
inc
pop
mov
(bad)
xor
iret
jp
fldcw
call
sahf
push
bound
rol
ins
bound
shr
jmp
data16
sub
rcr
lods
dec
jle
lds
ror
arpl
mov
fs
mov
fild
jmp
sbb
jbe
jo
dec
add
leave
lds
jl
xor
or
test
lods
ins
imul
and
sbb
mov
fidivr
xchg
mov
sub
js
ja
sbb
jb
movs
fwait
pop
test
mov
mov
fstp
cmp
mov
cmp
ja
xchg
push
(bad)
adc
dec
jp
mov
and
cmp
mov
cmpxchg
int
dec
xchg
pop
jmp
shl
(bad)
sub
xor
nop
or
xchg
mov
add
mov
mov
leave
cmps
adc
and
dec
xor
sub
int3
inc
mov
sub
mov
inc
xor
adc
inc
add
loop
ror
movs
cmp
adc
call
dec
push
sub
movs
xor
test
add
push
and
cmc
sub
push
add
xchg
pop
shr
es
mov
add
mov
pop
lods
and
dec
push
or
jmp
pop
cmp
pop
pop
xor
push
dec
dec
unpckhps
mov
dec
push
(bad)
scas
out
push
push
push
imul
imul
call
imul
imul
and
push
mov
in
bound
nop
adc
cmp
jb
jno
mov
cmps
add
test
sbb
sub
push
pop
ins
(bad)
sub
(bad)
out
xchg
loop
or
dec
sub
xor
mov
adc
retf
xchg
or
sbb
sbb
test
add
lods
adc
mov
stos
in
add
dec
inc
test
push
mov
dec
lahf
mov
xor
popf
mov
pop
push
cmp
xchg
dec
inc
push
pop
sbb
jae
push
test
push
(bad)
in
jnp
or
ficomp
jmp
mov
sub
dec
push
inc
fidivr
dec
pop
mov
cdq
xor
call
jbe
inc
jg
mov
call
test
movs
xchg
(bad)
push
jmp
push
cmp
pop
xchg
xchg
and
push
jne
mov
fisub
push
out
xchg
pop
repz
enter
dec
leave
mov
pop
(bad)
aaa
dec
out
outs
bswap
mov
xor
aad
xor
sbb
fdiv
inc
xchg
cmp
mov
sbb
sub
add
adc
jns
std
fldenv
dec
out
push
cdq
or
shr
nop
shl
mov
rol
mov
pusha
fsub
dec
push
dec
inc
test
popf
cmp
mov
loope
xor
popa
pop
test
add
xchg
enter
sbb
dec
push
pop
daa
push
pushf
jno
adc
(bad)
jp
outs
jp
mov
out
xor
(bad)
jbe
pop
aaa
jnp
mov
jle
test
ja
xchg
pop
sub
pop
jne
loop
add
inc
push
sbb
fwait
mov
cmp
push
lea
mov
outs
in
movs
mov
mov
xchg
shl
je
inc
cmovp
hlt
or
add
(bad)
cli
cwd
ins
div
or
data16
div
sub
xchg
dec
mov
pushf
in
jnp
fwait
jmp
lods
mov
rcl
call
in
jecxz
popf
mov
cmc
mov
imul
test
(bad)
mov
mov
xchg
les
mov
xor
test
test
lds
jmp
cld
daa
xchg
in
and
or
mov
and
lahf
jno
out
lods
sahf
jae
mov
arpl
mov
inc
shr
icebp
jbe
aam
mov
cmp
ret
sar
dec
test
out
daa
add
cmp
(bad)
out
dec
repnz
xchg
loop
jmp
cmp
or
push
pop
push
ins
call
cmp
xor
push
(bad)
retf
pop
mov
adc
mov
mov
loopne
test
(bad)
daa
fisub
jecxz
dec
cmp
fbstp
loope
jno
xor
dec
jnp
imul
(bad)
addr16
rol
push
sar
inc
loop
mov
xor
fwait
dec
(bad)
sub
shr
popa
cmp
sub
jge
lods
mov
mov
ficomp
pop
lock
pop
inc
mov
cmp
(bad)
fidivr
lods
jae
pop
xchg
(bad)
sbb
fwait
jno
pop
les
dec
sbb
sub
stos
in
jae
jo
ret
out
inc
fmul
cmp
mov
push
shl
(bad)
mov
into
lea
add
add
xor
mov
popf
jecxz
add
clc
arpl
lock
mov
xchg
add
jo
cmp
push
xchg
out
test
test
sbb
cmps
adc
sbb
jnp
mov
lea
push
and
ds
xchg
adc
inc
stc
add
mov
push
aam
lods
jecxz
dec
daa
nop
inc
lods
and
dec
(bad)
dec
in
sub
mov
push
call
lahf
bswap
loope
jle
dec
mov
jg
movs
mov
icebp
mov
popa
(bad)
mov
fs
pop
out
and
test
sahf
out
test
dec
xchg
xchg
sbb
sbb
shl
mov
mov
dec
out
int3
jo
cmp
lods
sub
mov
jo
ss
and
xchg
push
cwde
inc
movs
repnz
mov
cmp
sbb
cmc
cmps
adc
push
sahf
xchg
push
stos
jno
rcl
ret
shl
and
inc
js
pop
push
xchg
push
xchg
mov
and
pop
pop
push
leave
movs
mov
pop
jnp
hlt
int3
jae
mov
and
fdivr
test
(bad)
(bad)
inc
xor
aam
pop
call
fisub
pop
xchg
cmc
stos
and
mov
test
imul
movs
push
jmp
aam
in
ins
(bad)
mov
(bad)
retf
popa
push
jp
mov
pop
sahf
jp
push
mov
shl
out
xchg
ja
sbb
stc
push
arpl
stos
dec
jb
adc
lahf
push
bound
jp
push
xchg
fidiv
cmps
or
cmps
lods
das
jecxz
sbb
dec
aaa
mov
cmp
repz
aad
inc
lock
not
push
hlt
aam
retf
mov
iret
jns
out
sub
sbb
test
cld
stos
in
dec
xchg
xchg
mov
jmp
test
jmp
jge
pop
(bad)
pop
adc
in
jae
sbb
push
pop
mov
clc
mov
add
sub
cmp
call
or
pop
dec
data16
push
mov
jno
cmp
push
push
inc
adc
dec
rcl
movs
adc
test
sbb
rol
daa
xor
je
xchg
sub
mov
shl
sub
mov
mov
lods
les
sub
cmps
cmp
and
test
inc
or
xchg
push
inc
add
add
test
test
imul
inc
mov
dec
xchg
dec
or
fimul
lds
mov
movs
pop
es
push
pop
adc
std
imul
cmps
push
sbb
cmp
lds
arpl
push
loop
test
ss
lahf
push
jl
test
jp
lods
dec
in
dec
or
push
xchg
jno
xor
push
push
add
movs
push
xchg
out
push
cdq
fwait
inc
enter
mov
into
or
mov
jl
push
jo
shl
xor
aad
or
aad
out
push
cmp
stos
cmps
mov
xor
and
scas
xchg
int
cmps
call
mov
adc
sbb
xchg
sbb
ror
out
cmp
xor
mov
mov
int
xchg
push
mov
sub
cmp
xchg
push
xchg
and
dec
push
xor
lods
iret
xor
mov
stos
mov
cld
sbb
stos
dec
jns
adc
les
xchg
pushf
lods
push
jae
mov
push
ret
jle
push
jb
inc
cld
push
xor
sbb
aam
jmp
cdq
mov
pushf
push
xchg
stos
and
dec
sbb
lods
xor
es
mov
outs
cmc
add
test
mov
test
aaa
pop
mov
cs
add
clc
xchg
shr
fstp
scas
sbb
ja
adc
push
test
add
mov
mov
imul
pop
xchg
jecxz
stos
dec
loop
mov
jne
mov
nop
pop
retf
xor
ss
pop
sbb
std
sub
jno
or
nop
test
sbb
in
sbb
imul
aaa
or
xor
imul
adc
ins
pushf
jno
lods
test
and
aam
mov
cmp
mul
(bad)
int
outs
out
mov
scas
xchg
dec
test
dec
pop
mov
je
xchg
mov
mov
icebp
dec
popf
push
sar
(bad)
cli
(bad)
mov
stos
lods
push
push
mov
fild
mov
int
imul
fisttp
stos
retf
das
sti
cmp
call
pop
les
jo
loopne
loop
outs
ror
in
lods
test
test
pop
jo
dec
jmp
sub
movs
sbb
and
sahf
push
jb
adc
mov
dec
sbb
outs
lds
jae
aas
add
adc
mov
adc
mov
push
mov
shl
mov
push
mov
popf
cmps
and
cmps
cmps
push
push
inc
pop
(bad)
adc
sbb
(bad)
retf
loop
(bad)
pop
adc
sub
mov
dec
fdivr
or
xlat
mov
lock
int
sub
ins
jne
and
sub
add
sbb
stc
dec
loop
pop
push
je
pop
jb
sub
sub
jbe
inc
push
test
call
and
jg
jge
loop
fcom
mov
out
sbb
mov
mov
cmp
test
sbb
stc
pop
loop
ret
cld
das
aam
ret
les
(bad)
fwait
cmp
add
shl
inc
cmp
loop
mov
in
and
mov
mov
es
stos
das
loop
jmp
add
inc
mov
sub
jbe
(bad)
cmp
cld
lea
mul
sbb
repnz
xchg
inc
sbb
cld
cdq
rcr
out
(bad)
stc
scas
(bad)
clc
nop
xchg
push
push
inc
aaa
es
pop
scas
sar
push
ret
cmps
push
mov
xchg
xor
pop
out
(bad)
stc
dec
loop
in
xlat
jecxz
test
xchg
lds
in
shl
loop
jmp
cmps
push
repnz
imul
je
xor
popf
(bad)
stos
out
cmp
jo
mov
mov
mov
xchg
popa
sub
das
cwde
push
stc
addr16
shr
data16
jle
sar
sub
dec
pop
pop
(bad)
push
xor
shl
and
cmp
push
or
cwde
aam
push
(bad)
cmp
inc
mov
mov
pusha
mov
mov
hlt
inc
in
jae
adc
jg
fild
movs
push
mov
imul
cmps
std
movs
jg
sti
pop
(bad)
push
shl
cdq
jne
outs
mov
not
or
push
jnp
inc
fsub
test
jle
jmp
pop
adc
jmp
sbb
push
mov
fsub
xchg
addr16
mov
std
mov
cld
outs
lock
fsubr
popa
cmp
xor
sub
in
loop
mov
jnp
mov
fcomip
lahf
xlat
call
inc
lock
fwait
pop
add
push
or
sbb
jns
jmp
mov
cmp
stos
sbb
push
mov
jmp
(bad)
es
ss
pop
mov
icebp
and
ins
out
or
out
mov
mov
inc
stc
or
sbb
and
sub
adc
gs
inc
iret
dec
sbb
aam
lods
dec
mov
sbb
cmps
sahf
std
sub
cmovp
jp
iret
dec
lea
mov
xor
test
inc
inc
(bad)
and
dec
jne
cmps
adc
(bad)
pop
inc
jmp
and
cwde
jp
jb
inc
dec
mov
xor
jb
sub
pop
ins
sub
dec
xor
xchg
add
xchg
cmp
fdiv
mov
rol
fwait
mov
aam
jnp
cmps
out
leave
leave
test
int
imul
and
fidiv
cmps
mov
add
sub
xlat
mov
pop
lds
push
imul
pop
into
push
retf
cdq
sub
pop
movs
pop
push
ds
inc
cmps
and
mov
cmp
adc
and
int
(bad)
pop
mov
pop
sub
outs
jae
push
mov
mov
mov
sahf
dec
add
movs
xlat
dec
dec
push
mov
fcomp
adc
stos
out
mov
dec
int3
fwait
sbb
push
test
push
loope
adc
mov
sub
sub
mov
dec
dec
inc
sub
xor
lods
jns
inc
adc
add
pop
rol
(bad)
push
inc
adc
or
add
mov
mov
add
inc
rcl
lock
cmp
push
jb
jmp
stos
dec
sub
ret
jmp
call
sbb
push
sbb
imul
mov
jo
stos
fcom
sbb
mov
sub
xor
and
add
adc
call
(bad)
lods
adc
inc
jmp
ror
jbe
push
sbb
int
push
aad
sub
adc
push
test
dec
or
lds
(bad)
cmps
dec
adc
cmps
test
jmp
sbb
into
dec
mov
mov
or
push
lds
jne
mov
inc
xchg
xor
or
xor
ficom
pop
xor
lds
sub
jb
or
fwait
xor
es
cld
stos
push
cmp
imul
mov
aam
adc
xor
pop
sahf
mov
xor
pushf
mov
sbb
and
xor
mov
jae
sub
lods
sbb
sub
scas
out
retf
repnz
push
pop
dec
repnz
mov
add
leave
sbb
and
sahf
sbb
sar
pushf
lods
xchg
shl
cmc
imul
pop
pop
(bad)
bound
add
jle
stos
out
iret
dec
ins
int
mov
cdq
cmps
nop
leave
and
jge
cmps
push
test
xlat
jb
loop
xchg
mov
or
dec
call
imul
sbb
jo
jno
mov
pop
(bad)
popf
leave
mov
jl
pop
mov
lods
dec
call
cmp
adc
or
jp
scas
sbb
push
pop
inc
dec
xor
mov
mov
cdq
fimul
es
pop
movs
adc
sub
nop
mov
dec
popa
loop
mov
mov
lahf
or
test
pop
aas
cmp
sbb
sbb
push
jae
cmp
std
aam
(bad)
pop
add
popa
in
fwait
mov
adc
fldenv
mov
sbb
loopne
sub
and
adc
gs
push
dec
jecxz
jae
xchg
in
jns
aaa
cmp
lds
rol
or
ins
rcr
loop
lock
ret
push
adc
in
les
inc
push
pop
jbe
sahf
xchg
call
mov
sahf
fs
das
mov
add
dec
out
sub
or
adc
(bad)
xor
cmps
xor
data16
xor
icebp
add
ficomp
ins
mov
in
inc
sbb
aas
lock
inc
adc
push
dec
mov
(bad)
ficom
lea
outs
sti
fisttp
clc
adc
dec
or
or
ins
dec
jae
out
dec
(bad)
cld
dec
ror
inc
in
push
add
or
inc
mov
fmul
call
daa
jmp
std
mov
and
aaa
sbb
stc
dec
sti
dec
fiadd
cli
mov
add
retf
mov
add
xchg
cmp
pushf
xchg
sub
pop
pop
cld
ss
je
bound
xchg
or
sub
(bad)
sbb
push
je
sar
sbb
pop
sahf
inc
daa
(bad)
addr16
xchg
sub
fistp
inc
xchg
repnz
mov
inc
push
inc
inc
pop
or
sbb
imul
mov
cmp
xchg
jecxz
pop
or
inc
jmp
add
(bad)
add
push
daa
mov
rcl
sub
je
pushf
test
fs
ret
repnz
pushf
xor
in
mov
pop
mov
inc
mov
call
lods
ins
and
and
retf
xor
add
and
rcr
inc
jbe
push
scas
(bad)
push
out
or
pop
add
je
dec
dec
mov
adc
inc
call
mov
inc
jns
imul
jmp
mov
sbb
rcr
mov
push
mov
lods
pop
inc
les
xchg
mov
cmc
hlt
mov
fnsave
add
push
sbb
ins
cmc
(bad)
adc
or
cmps
test
scas
push
daa
fwait
pop
jno
add
lock
div
inc
movs
dec
fcmove
shl
sbb
out
into
pop
jns
out
int
(bad)
(bad)
mov
or
mov
jmp
test
fs
xchg
sbb
jno
leave
cmp
popa
and
or
mov
jae
adc
out
mov
jb
inc
add
sub
xchg
imul
(bad)
shl
jne
aad
jle
sbb
mov
mov
adc
xor
mov
test
mov
ficom
je
iret
pop
xchg
dec
(bad)
leave
iret
xor
out
jge
push
outs
jae
inc
jle
xor
sbb
dec
cmp
jb
or
ror
lds
movs
inc
dec
sub
test
lods
xor
ins
stc
push
iret
test
sbb
adc
mov
sub
lds
outs
jmp
sbb
fisub
push
mov
cmps
dec
jl
icebp
pushf
std
push
in
push
xor
xchg
enter
iret
jl
mov
int
pop
imul
dec
dec
sub
cmp
dec
sub
or
mov
sub
inc
adc
rol
push
inc
pop
out
ins
push
push
add
pop
(bad)
iret
xor
add
cmps
test
mov
lds
enter
cmp
dec
pop
add
jg
push
push
inc
jo
sub
xor
xor
mov
adc
add
adc
sub
stc
lds
jmp
mov
loop
mov
xchg
push
and
mov
call
pop
scas
retf
mov
adc
sbb
rcl
rol
inc
lds
push
dec
icebp
int
mov
add
int
push
imul
loop
je
mov
mov
sbb
movs
test
pushf
push
dec
and
inc
xchg
push
xor
lods
adc
test
fidiv
xor
out
xor
dec
push
sub
sbb
loopne
stos
and
push
arpl
clts
cmps
push
xchg
push
mov
shl
cwde
jo
push
ins
mov
and
dec
sbb
mov
movs
add
scas
adc
retf
fisub
push
sahf
sysexit
adc
push
int3
call
dec
(bad)
hlt
mov
fnstenv
jb
pop
pop
ret
xor
cmps
or
xor
(bad)
movs
iret
sbb
xchg
fwait
test
(bad)
int
mov
jb
mov
js
add
xor
and
mov
imul
push
cmps
sahf
or
sub
stos
mov
add
push
xor
xor
repz
push
sbb
sub
xchg
or
xchg
add
sub
push
sub
xlat
addr16
push
jmp
ja
dec
or
pusha
mov
and
xor
mov
sub
mov
(bad)
xchg
mov
jnp
test
cli
push
xchg
mov
shl
call
call
in
aaa
push
jo
shl
shr
dec
cwde
sub
popa
call
fsubr
mov
dec
push
xchg
dec
ja
add
and
inc
leave
(bad)
push
ins
jnp
out
mov
jge
push
call
ret
leave
sbb
es
xchg
popf
fidiv
pop
jno
inc
jae
dec
call
dec
ror
movs
jb
cs
or
ss
nop
rol
jo
mov
mov
call
test
mov
popf
xchg
neg
inc
imul
push
mov
add
inc
in
out
cmc
jg
dec
sbb
cdq
fidiv
sahf
jg
aam
adc
mov
rcl
dec
inc
call
push
scas
out
cmps
out
xchg
mov
xchg
repnz
sub
or
(bad)
pop
jbe
sbb
sbb
test
hlt
test
pop
cmc
and
push
loopne
dec
retf
fdivr
mov
(bad)
adc
push
sub
ja
fs
popa
fsub
popw
mov
pop
and
(bad)
inc
jnp
sar
jg
aaa
shl
scas
mov
jns
cmp
and
sbb
std
mov
mov
clc
push
pop
(bad)
fdiv
and
hlt
out
sub
mov
inc
hlt
in
out
pop
fstp
mov
add
(bad)
add
mov
xchg
lock
mov
pop
rcl
add
shl
cmps
cld
adc
mov
xchg
les
sbb
dec
pop
xchg
pop
cdq
lock
cmp
dec
cmp
xor
(bad)
aad
pop
mov
pop
adc
imul
js
push
je
data16
and
lds
sbb
mov
call
push
out
mov
jp
ss
xlat
fbstp
(bad)
or
xor
sub
or
clc
xlat
retf
les
call
fidiv
in
fs
mov
push
shr
and
lahf
in
or
test
inc
scas
mov
sbb
cld
test
lods
lock
les
cld
inc
jne
jmp
adc
inc
jo
mov
adc
ret
and
mov
push
mov
into
pop
xchg
imul
xchg
aas
pop
cmc
dec
imul
lea
fwait
push
retf
inc
fwait
imul
arpl
in
rol
add
sbb
shl
test
xchg
dec
(bad)
xor
inc
mov
pushf
aam
repz
dec
test
mov
jmp
cmp
cwde
inc
sub
mov
cmps
mov
arpl
jmp
mov
scas
cdq
loope
lea
inc
test
pop
cwde
mov
mov
cmp
and
dec
mov
xchg
fstp
sahf
mov
out
pop
cmp
jae
jno
rcr
inc
push
inc
sub
mov
push
add
loop
inc
rol
retf
sbb
inc
jmp
ins
punpckldq
inc
inc
push
dec
(bad)
sub
jmp
dec
ins
dec
rcl
adc
inc
dec
aam
test
add
mov
bound
sub
bound
mov
inc
pop
sub
movs
fisttp
inc
shrd
xchg
and
inc
imul
pusha
adc
pop
push
test
dec
inc
inc
xor
sti
aad
jo
mov
or
imul
adc
xor
mov
add
sub
rol
pop
lods
addr16
jmp
fdiv
jns
imul
jo
cmp
add
out
inc
dec
adc
loop
and
fcom
ins
icebp
inc
sub
mov
inc
jno
(bad)
xchg
sub
ins
and
xchg
push
add
aaa
sbb
xchg
inc
or
inc
adc
jecxz
xor
cmps
sub
cmp
inc
xchg
addr16
sbb
lods
adc
add
stos
mov
xor
inc
cmp
sbb
inc
out
lods
push
bound
lahf
push
and
push
mov
push
push
cmp
call
push
sahf
push
sub
xchg
inc
rol
lds
aad
or
es
xor
push
xchg
mov
cdq
fwait
inc
inc
loope
lods
es
pop
cmps
fisttp
popa
mov
xor
ret
div
xor
call
pop
outs
or
sbb
call
call
add
or
dec
lods
mov
xchg
mov
adc
jmp
push
lds
sbb
xchg
xor
sbb
js
aad
mov
dec
lods
xchg
lods
push
xor
sbb
repz
cmp
loope
add
or
cmp
cmp
daa
int
cmp
cmp
xchg
sbb
adc
pop
(bad)
mov
in
movs
xor
mov
popf
mov
int3
xor
lds
bound
fwait
paddusw
inc
jmp
xchg
enter
out
inc
cmp
call
fucomp
dec
mov
mov
ss
mov
add
outs
and
shr
fsubr
xchg
imul
aam
jbe
pop
pushf
fs
mov
fwait
mov
push
pop
call
cmp
sbb
sbb
sub
call
int
int
dec
movs
xchg
cbw
dec
imul
mov
(bad)
test
jp
(bad)
leave
fist
je
push
sub
pop
push
popa
daa
sbb
in
or
add
fimul
in
movs
les
push
push
mov
jo
daa
call
sub
out
addr16
dec
dec
xor
adc
push
xor
movs
rcl
mov
shr
in
dec
jae
lds
and
jp
pop
adc
lods
les
xor
mov
shl
inc
adc
or
lds
push
and
mov
pop
test
pop
xchg
stc
mov
push
mov
movs
stos
hlt
ss
nop
mov
lods
fdiv
inc
bound
dec
call
sbb
in
sub
icebp
dec
sub
xlat
xchg
add
add
sbb
(bad)
pop
cld
sti
fs
jle
lods
imul
adc
mov
cmp
stos
ds
jae
push
repz
mov
in
es
cwde
das
mov
popf
cmps
fcomi
int
in
arpl
push
cmp
sti
arpl
js
lods
sar
and
sub
in
out
mov
outs
fnsave
add
pop
rcr
jne
sbb
ins
(bad)
xchg
mov
mul
cmc
sbb
dec
repnz
sti
into
(bad)
data16
mov
sub
mov
sbb
mov
jo
xchg
pop
jmp
(bad)
imul
sub
cmc
push
mov
dec
push
mov
and
jo
push
sti
inc
and
add
aad
cmp
dec
sub
sub
cmp
aam
popf
push
mov
shl
push
dec
lock
push
xchg
shr
js
(bad)
adc
push
shl
stos
fs
aas
sub
cmp
fdiv
push
test
test
xchg
add
daa
cmp
mov
fldcw
sub
jb
inc
dec
arpl
push
pop
fadd
retf
dec
popa
(bad)
movs
and
je
xor
cmps
mov
mov
pop
sbb
sub
inc
adc
inc
xchg
mov
dec
jae
or
xor
je
ror
xor
push
inc
adc
adc
inc
data16
mov
bound
xor
xor
hlt
cmps
rcl
push
inc
cmp
mov
cwde
cmps
add
int
pop
js
push
or
push
mov
pop
xchg
cmp
sub
push
inc
popf
into
xchg
xchg
imul
cld
stos
mov
cmp
test
test
call
dec
jl
cmp
xor
mov
or
xchg
push
pop
jno
inc
adc
adc
push
mov
pop
leave
popf
xor
xor
push
sbb
arpl
mov
or
mov
lds
adc
add
push
jno
mov
or
or
mov
lds
dec
pop
call
xor
retf
mov
hlt
repnz
push
inc
add
jno
call
sub
jp
lods
inc
sbb
(bad)
mov
push
jl
cmp
sub
ret
xchg
repnz
cli
push
aad
inc
xor
jne
lds
jae
sbb
push
push
out
mov
push
xchg
push
xchg
leave
jp
dec
push
or
and
rcl
xchg
jbe
mov
xchg
push
js
(bad)
pop
jp
mov
xchg
mov
clc
shr
sbb
add
xchg
movs
pop
fwait
aam
cmp
out
mov
push
loopne
repz
add
js
inc
ins
adc
push
adc
addr16
dec
push
push
mov
push
cmc
jmp
add
aam
imul
sub
stos
push
retf
jo
add
lods
sbb
mov
add
es
sbb
xor
loopne
rol
sub
adc
cdq
and
out
push
mov
push
mov
cmp
push
inc
inc
fsub
sbb
inc
mov
mov
sub
cwde
cmp
stc
ins
dec
or
dec
inc
call
push
and
cli
push
pop
xchg
and
or
sub
push
mov
mov
aas
adc
ret
pop
pop
mov
(bad)
imul
dec
xor
push
imul
addr16
cmps
add
fisubr
rcr
stc
adc
mov
(bad)
daa
out
sbb
mov
out
push
sbb
pop
mov
ds
push
std
mov
ret
and
fdivr
adc
out
cmc
lods
and
xchg
push
out
movs
iret
mov
aad
inc
leave
mov
push
into
imul
add
push
and
or
test
sbb
into
push
xor
adc
and
addr16
out
stc
xchg
shl
loop
pop
sbb
cs
fnstenv
call
adc
xor
pop
inc
xor
dec
pop
push
bound
(bad)
mov
movs
xchg
aad
inc
fsub
ss
imul
stos
jg
cld
sub
xchg
shl
mov
aas
call
out
dec
pop
imul
ins
jg
mov
(bad)
stos
dec
sbb
pop
in
sti
push
jl
icebp
movs
into
cmp
cmps
push
adc
or
pop
sbb
xchg
(bad)
adc
dec
and
mov
js
int
mov
lds
mov
cmp
movs
xchg
nop
pop
hlt
cmps
test
jo
call
jmp
jmp
jl
(bad)
add
cmp
(bad)
test
mov
lods
(bad)
movs
les
mov
cmp
movs
out
pop
adc
cmp
iret
imul
ret
and
lea
sbb
mov
pop
xchg
shl
pop
or
test
hlt
scas
in
sti
sti
dec
jmp
fild
pop
and
cmc
repnz
repz
push
nop
fdiv
sbb
push
pop
cmc
sub
mov
sbb
iret
loope
test
aas
push
bound
shl
aam
in
hlt
scas
mov
cld
sbb
push
nop
inc
sbb
(bad)
sub
add
mov
(bad)
mov
out
pop
scas
test
gs
pop
les
mov
popf
test
inc
out
test
in
and
jae
lods
jge
icebp
mov
fs
loop
cmp
and
fsubr
or
fcom
sub
mov
mov
or
into
add
mov
xchg
ficom
push
test
stos
push
jne
mov
adc
dec
shl
inc
jno
mov
fisub
dec
and
dec
dec
ficom
sbb
cmc
adc
dec
cmp
jp
(bad)
call
in
aad
add
out
outs
out
es
inc
popf
cli
or
aaa
aaa
adc
fist
and
stos
imul
and
cmp
call
ds
and
sbb
sbb
sub
cmp
nop
cmc
cmps
mov
jecxz
mov
dec
ins
adc
push
retf
inc
inc
inc
adc
and
gs
cmps
push
pop
push
ins
pop
mov
adc
dec
mov
int
or
mov
jmp
add
xor
push
rol
or
dec
mov
xor
adc
daa
mov
stos
mov
add
int
fcom
gs
stos
cmp
lods
inc
lea
cdq
mov
mov
mov
cmp
cmp
inc
push
pop
sbb
push
fadd
outs
rcr
dec
push
cwde
outs
push
xchg
(bad)
or
mov
lods
mov
mov
movs
test
xor
in
fsub
mov
call
or
sub
icebp
shl
hlt
xor
jne
mov
dec
dec
jp
push
xor
or
movs
daa
push
movs
arpl
leave
cmps
or
mov
push
loopne
push
and
sahf
cmp
push
loopne
dec
bound
dec
xchg
data16
push
sub
or
adc
loop
pop
adc
mov
xor
test
jo
mov
or
loopne
mov
(bad)
pushf
cmp
sbb
dec
mov
sbb
test
xchg
jno
and
mov
xor
sub
jb
xchg
in
jb
push
jno
xchg
cli
jb
imul
jp
aad
(bad)
mov
xchg
inc
enter
dec
sub
xchg
jp
lods
dec
mov
sahf
mov
shl
fisub
dec
inc
sub
push
push
push
and
push
and
push
inc
enter
lods
int
jmp
pop
pop
in
sub
push
bound
xor
jb
mov
sahf
mov
xor
js
sub
and
push
and
rol
stos
fmul
mov
sub
aad
mov
data16
pop
xor
cmp
in
cli
push
nop
shl
sub
fadd
addr16
push
dec
sub
inc
movs
push
xchg
sub
aad
cdq
outs
out
popa
mov
xchg
cdq
pop
and
push
daa
sbb
mov
jne
cmp
mov
inc
mov
or
xchg
inc
leave
sub
xchg
mov
popf
mov
pop
sbb
cmps
and
loop
mov
imul
mov
cmc
cmps
sub
pushf
pusha
pusha
in
jecxz
adc
retf
movs
xchg
rcl
xchg
ret
and
sub
out
popa
pop
jecxz
inc
cmp
mov
sar
and
mov
sbb
jmp
aad
xchg
nop
in
(bad)
out
and
push
push
out
cmp
xor
xor
rcr
mov
fwait
xchg
dec
dec
jecxz
cmp
add
shl
adc
movs
xchg
xor
jb
sbb
xchg
push
sahf
or
mov
inc
outs
mov
mov
sahf
mov
adc
stos
rcr
jno
sub
push
retf
push
nop
pop
fdivr
data16
inc
imul
or
loope
and
push
pushf
xchg
push
mov
lahf
mov
rcr
pop
cmps
clc
ja
fwait
(bad)
mov
mov
popa
popa
pop
into
in
cld
std
cld
addr16
dec
sub
sub
push
pop
leave
sbb
push
fimul
pop
push
cmps
jo
mov
test
neg
mov
stos
nop
xor
rcl
pop
cs
pop
add
dec
(bad)
fiadd
dec
xor
inc
mov
clc
pop
push
inc
icebp
jle
jns
or
psubsw
sub
scas
mov
cmp
dec
loope
fisubr
sub
(bad)
xor
in
push
popa
push
loope
(bad)
test
or
xor
pop
jmp
push
push
or
add
xor
jno
aaa
les
xchg
jmp
sub
or
inc
mov
push
loopne
retf
mov
push
imul
mov
je
fmul
dec
pop
add
or
rcl
lea
fdiv
es
sbb
rep
mov
mov
mov
xchg
xor
push
cmp
nop
push
dec
dec
dec
mov
daa
lods
cmp
(bad)
jmp
mov
test
test
cmp
mov
imul
push
adc
daa
mov
adc
xchg
mov
movs
lods
(bad)
imul
std
sbb
jns
cmps
dec
icebp
ficomp
sub
mov
cmc
scas
daa
jecxz
in
imul
inc
sub
fbstp
fistp
clc
pop
(bad)
ja
adc
mov
lock
cld
ja
inc
addr16
xchg
dec
or
inc
repz
arpl
cmp
loopne
fisttp
pop
enter
sub
mov
movs
mov
icebp
ffreep
cmp
(bad)
test
ret
cmp
enter
push
fidivr
jmp
pop
shr
dec
shl
xchg
movs
stos
mov
jl
into
push
xlat
imul
push
inc
dec
fbld
loop
(bad)
call
mov
lods
cmp
push
push
pop
xor
push
retfw
push
jmp
xor
xor
push
mov
out
push
shr
mov
adc
cmp
ins
movs
imul
loopne
xchg
push
pop
dec
push
ss
jb
xchg
test
fsubr
cmp
imul
outs
inc
sahf
jno
jle
lods
test
cwde
pop
ja
xchg
mov
sar
push
push
hlt
mov
mov
sar
cmps
push
dec
out
arpl
shl
gs
xchg
nop
push
push
xchg
mov
mov
adc
push
pusha
or
shl
xchg
daa
mov
pushf
pop
xor
mov
bound
add
mov
call
fwait
std
repz
adc
sbb
push
iret
stc
adc
repnz
xchg
push
xchg
cdq
test
jecxz
sbb
push
dec
add
aad
iret
jp
cmp
and
pusha
or
xor
mov
pop
out
call
(bad)
sub
xor
ret
adc
movs
imul
sub
dec
dec
xor
repz
xlat
(bad)
stos
xor
es
or
lds
push
sahf
dec
dec
inc
out
test
xchg
dec
inc
adc
inc
xchg
or
loop
or
or
and
push
inc
sahf
jae
push
imul
or
jno
pop
mov
pop
jbe
jae
cmp
cmp
sub
push
enter
(bad)
mov
bound
or
adc
call
shr
xchg
sub
pop
jb
js
retf
ds
jno
push
push
dec
sub
call
mov
xchg
push
jno
das
dec
push
dec
and
int
loopne
mov
test
movs
dec
cmps
movs
pop
fwait
sbb
sbb
in
push
dec
into
sub
xor
aam
jb
and
and
cmp
dec
stos
fmul
call
jge
mov
mov
mov
pop
sub
xor
push
mov
sbb
ret
scas
sub
sbb
lea
sub
ins
jo
cmps
sub
mov
pop
and
test
icebp
dec
into
sub
movs
test
dec
jns
sub
mov
cmp
sbb
jp
dec
push
stos
dec
into
dec
cli
push
and
or
jle
shl
iret
cmp
sub
stos
xchg
es
es
xchg
mov
mov
mov
imul
mov
call
dec
outs
mov
xor
cwde
push
fsub
jecxz
mov
arpl
mov
out
test
in
fsubrp
pusha
xchg
lods
xchg
xor
aad
or
sahf
cdq
and
cmp
push
sub
imul
out
and
inc
sbb
sbb
aad
aam
and
dec
jle
mov
loop
sub
jmp
outs
stos
xchg
(bad)
ror
js
test
xchg
sub
lods
push
jns
pop
mov
pop
push
sub
mov
sub
sub
fsubr
cmps
out
xchg
cmp
imul
sbb
push
retf
nop
jae
cmp
in
push
push
push
xchg
push
aam
outs
pop
rcr
sbb
arpl
adc
stos
adc
push
sysenter
add
aad
stos
int
fsub
adc
in
repnz
cmp
add
rcr
in
(bad)
(bad)
push
popa
sub
popf
(bad)
in
push
dec
call
add
jmp
jae
es
cs
jne
int
and
fstp
pop
mov
(bad)
cmps
imul
add
in
mov
in
movs
js
xor
xchg
aam
cmps
lods
leave
xchg
xor
mov
xchg
(bad)
mov
leave
xor
dec
xor
xor
call
pop
sub
dec
inc
dec
iret
pop
dec
jecxz
and
pusha
into
sub
int
cmp
or
jl
mov
or
jmp
daa
mov
mul
stos
fxch
sub
das
cmc
scas
cmp
(bad)
(bad)
sar
jg
pop
xchg
xchg
and
ja
mov
sub
mov
les
pop
rcr
ins
out
adc
(bad)
int
or
test
inc
test
and
sbb
cmp
mov
pushf
call
xchg
push
sbb
cmps
xor
test
fst
stos
inc
adc
imul
ror
movs
out
pop
xchg
xor
push
sti
dec
mov
addr16
jno
movs
jnp
inc
scas
imul
into
mov
fs
adc
pop
dec
cdq
pop
inc
and
imul
and
retf
adc
sub
adc
data16
push
ds
clc
dec
icebp
ficomp
sbb
adc
mov
adc
mov
stc
retf
popa
test
xor
cld
xor
ret
jno
int
cmp
pop
pop
repz
mov
adc
xchg
dec
add
scas
daa
and
jp
xchg
leave
fstp
xor
cmp
mov
sbb
sbb
dec
mov
ss
cdq
lock
les
sahf
sub
pop
scas
jbe
retf
mov
fs
xchg
loopne
lea
lock
xor
ds
lds
mov
xor
lods
cmp
inc
lods
cdq
dec
pushf
mov
aam
dec
movs
into
test
pushf
push
dec
es
loopne
call
cmps
xchg
mov
test
mov
inc
mov
push
jnp
mov
push
aad
sbb
adc
in
sbb
xchg
out
loop
gs
mov
retf
fs
sub
in
sbb
adc
sub
test
in
cmp
cmp
xchg
popf
lds
mov
jmp
adc
adc
cmp
inc
sub
not
(bad)
push
loopne
test
and
sahf
xchg
in
popf
stos
inc
mov
fcom
rcl
sub
aad
lods
mov
dec
inc
bound
bound
push
les
adc
xor
movs
test
sbb
push
adc
(bad)
and
call
call
(bad)
xor
pop
enter
stos
out
into
loop
jns
jmp
test
cs
test
jl
push
jno
xchg
dec
mov
xchg
fist
cmp
lods
sahf
lods
jmp
sub
xor
cmps
push
ss
push
dec
inc
adc
adc
inc
and
or
daa
inc
dec
sub
movs
daa
mov
push
push
xor
cmp
leave
imul
pushf
or
dec
pop
sub
adc
inc
mov
mov
inc
adc
inc
adc
inc
push
or
dec
dec
stos
lahf
lods
inc
cmp
cmps
mov
xor
and
dec
push
cmp
mov
mov
mov
pushf
clc
add
sar
fcom
add
cmp
jge
mov
mov
mov
xor
rcl
popf
push
mov
imul
cmc
push
and
test
out
cmp
fwait
nop
dec
(bad)
or
inc
and
cwde
sbb
sahf
mov
xchg
popf
dec
cmps
(bad)
test
mov
jne
fwait
and
cmp
pop
cdq
mov
push
imul
push
dec
stos
mov
mov
jne
push
mov
mov
pop
jo
aam
shr
mov
xchg
imul
sbb
adc
inc
sbb
(bad)
test
ret
inc
mov
pop
cmp
push
push
repz
push
dec
ret
aaa
xor
repz
rcl
cmp
xor
fcom
push
lods
inc
add
stos
out
scas
push
movs
xor
push
pop
pop
outs
lods
or
jecxz
sub
jae
dec
add
cdq
sub
outs
mov
xor
rcl
or
into
push
jno
jne
cmp
sahf
aam
xchg
sub
adc
pop
int
xor
stos
xor
xor
xchg
mov
lds
xchg
jo
scas
add
jbe
in
pop
mov
test
or
or
inc
retf
xor
outs
movs
int
sub
cmps
xchg
lds
enter
popa
jae
sub
lds
sub
fwait
xchg
push
sbb
push
sub
dec
in
sahf
push
enter
into
sti
loope
ret
fwait
es
sub
jl
aas
xchg
jno
mov
push
rol
dec
stc
mov
ins
gs
ss
in
call
outs
loope
mov
int3
mul
adc
bound
add
test
dec
adc
out
arpl
imul
rcr
dec
aam
movs
into
xor
xor
test
aad
push
adc
mov
pop
and
arpl
fld
arpl
mov
call
xchg
loope
cmps
lods
leave
jne
ficomp
arpl
jecxz
push
imul
imul
call
cmp
pop
pop
cmp
stos
xchg
loop
pop
call
or
sub
dec
sahf
xor
jmp
mov
sub
and
xor
ss
push
ins
loope
sbb
dec
lahf
mov
movs
and
xchg
jl
mov
add
sub
shr
ins
cmp
mov
jmp
loop
fbld
dec
and
js
xlat
jge
femms
pop
js
enter
inc
dec
sub
mov
iret
jge
dec
xchg
ror
je
mov
push
cwde
clc
xor
jno
in
sub
jne
or
popa
and
test
mov
loope
cmp
sbb
fwait
lea
and
sub
ret
push
mov
lds
push
sysexit
popf
int
int3
jb
cvtps2pd
xlat
enter
dec
popf
jnp
sub
cmc
adc
mov
inc
push
mov
ret
and
nop
test
inc
inc
(bad)
cdq
push
jmp
jecxz
cmp
js
pushf
rcr
arpl
jecxz
hlt
stos
sub
outs
cmp
push
push
loop
adc
xor
or
push
xchg
mov
in
inc
pop
int
push
xor
lds
arpl
imul
lods
dec
or
sbb
sbb
imul
hlt
fadd
dec
jbe
sub
mov
mov
inc
fisub
jns
ja
out
sbb
lds
lds
lods
fld
inc
xor
or
push
xor
push
cmc
xchg
jecxz
push
int
sub
fimul
push
dec
or
pusha
inc
inc
ficom
es
pop
dec
mov
in
fldcw
mov
sbb
data16
add
outs
dec
ins
sub
dec
inc
mov
push
inc
adc
add
rcr
sbb
xchg
nop
mov
shl
rol
push
cmp
jae
sub
das
pop
push
push
call
outs
ret
push
subps
jnp
test
ins
push
cdq
(bad)
movs
adc
dec
add
add
xchg
stos
fs
inc
add
mov
mov
push
ins
push
xor
xchg
mov
sbb
ins
sbb
and
movs
daa
mov
lds
adc
(bad)
xchg
cmp
loop
dec
pop
daa
ficomp
aam
shl
and
int
push
imul
adc
addr16
push
cmc
jno
(bad)
push
xchg
dec
sbb
xor
aad
xor
push
test
pop
xor
loop
add
cli
mov
test
mov
test
cmp
lods
sbb
inc
cwde
mov
in
sub
movs
sti
inc
neg
inc
xor
test
jno
sahf
in
jb
test
push
shr
das
dec
test
or
dec
jo
int
in
call
push
loop
cmp
push
fs
fsub
aam
push
cmp
test
xchg
bound
sub
in
mov
iret
iret
shr
cmps
push
jecxz
and
ja
imul
adc
or
stos
inc
mov
cmp
cmc
(bad)
(bad)
adc
push
(bad)
cdq
cmovne
repz
bound
xor
mov
xchg
jo
rcr
cmp
(bad)
xor
jle
sub
dec
jno
pop
call
jbe
sub
icebp
stos
ins
ror
out
repz
fisttp
out
ret
iret
pop
sub
dec
dec
dec
jmp
xchg
mov
adc
ret
xor
scas
aas
ja
mov
or
xchg
push
and
push
cmp
sub
in
dec
inc
mov
add
push
mov
sbb
mov
jmp
xchg
xor
pusha
cli
mov
dec
and
dec
cld
push
pop
xchg
mov
call
retf
shr
test
mov
enter
scas
xor
fstp
movs
xor
or
mov
xor
mov
sub
stc
push
dec
jge
test
in
jecxz
mov
dec
xlat
sbb
mov
jmp
in
push
lods
push
or
daa
or
push
xchg
ja
hlt
test
shl
or
(bad)
test
jbe
add
outs
cmp
dec
lods
add
and
rol
ss
sub
cmp
xchg
push
mov
and
mov
jbe
hlt
movs
mov
stos
xor
test
aam
push
pop
adc
iret
xor
xchg
push
sbb
sbb
or
mov
sbb
in
inc
push
aas
dec
mov
push
lods
pop
enter
mov
rcl
cmp
loop
mov
adc
sar
adc
adc
arpl
cwde
shr
dec
or
or
pop
fist
xlat
sbb
xor
ins
sbb
iret
mov
inc
clc
test
mov
daa
jmp
stc
loope
dec
pop
adc
les
outs
cmp
lahf
sub
ins
ins
xor
fst
mov
sub
adc
stos
pushf
aad
(bad)
lods
fs
addr16
add
mov
inc
jae
(bad)
(bad)
dec
(bad)
arpl
sub
sbb
lahf
aaa
fidivr
mov
fnstenv
pop
mov
fnstenv
repnz
(bad)
push
jp
push
dec
call
push
push
xchg
xor
cmps
adc
xor
pop
nop
mov
inc
add
or
rol
call
lds
imul
cmc
fs
pop
hlt
movs
repz
jae
mov
cmp
add
test
test
dec
dec
ror
aaa
arpl
sbb
jno
je
aam
mov
int
adc
mov
jnp
mov
jno
mov
add
dec
repz
movs
movs
repz
push
or
mov
cmp
pop
xor
mov
xor
cmp
dec
inc
or
jns
in
(bad)
je
sahf
push
fs
data16
rcl
(bad)
mov
lods
int
push
dec
js
xchg
cmp
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
out
add
inc
outs
bound
add
add
add
loope
scas
inc
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
inc
outs
bound
push
push
push
inc
and
xor
xor
outs
outs
ja
sub
xor
xor
xor
push
xor
cmp
xor
xor
sub
xor
add
add
pop
add
add
xor
xor
add
add
loope
add
add
add
add
add
add
add
add
and
add
add
add
fild
inc
add
add
add
add
add
add
push
push
or
or
or
or
or
or
or
or
adc
movups
push
or
adc
adc
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
(bad)
fild
inc
add
pop
pop
or
adc
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
add
or
and
add
adc
add
add
les
sbb
add
add
add
add
add
add
add
les
sub
add
add
add
add
add
add
add
add
add
add
xor
inc
push
popa
adc
jno
xor
add
icebp
and
les
adc
add
add
add
les
adc
add
add
add
fiadd
or
add
add
add
add
add
cs
add
mov
add
sbb
add
add
add
in
sbb
add
add
add
outs
sbb
add
add
add
add
int
fwait
sub
add
add
add
or
cmp
jne
enter
mov
pop
test
add
or
add
add
add
mov
inc
nop
add
add
mov
lods
loopne
pop
jnp
fdiv
out
push
pusha
add
add
out
mov
add
cmp
sub
add
movs
mov
add
or
pushf
add
add
add
and
add
or
add
or
push
inc
add
add
pusha
sub
xchg
loope
cmp
add
add
add
sub
add
add
test
retf
(bad)
or
fisub
jne
pop
cmp
add
add
add
add
add
add
push
dec
sub
add
push
inc
inc
out
add
add
inc
add
add
adc
dec
rcl
add
pop
or
or
add
add
or
(bad)
fsincos
mov
jnp
(bad)
mov
xchg
pop
in
rcr
add
jae
cmc
inc
add
add
add
jnp
sbb
pusha
push
add
add
pop
add
jno
add
add
add
icebp
fcom
add
hlt
push
inc
add
add
fiadd
and
add
dec
add
push
jo
jle
xor
xchg
push
sbb
push
outs
adc
add
add
cmp
push
adc
add
add
pop
mov
add
add
jno
or
sbb
rol
data16
add
add
add
mov
mov
ins
add
add
push
(bad)
push
shl
(bad)
add
fdivr
icebp
out
out
call
add
pop
mov
add
data16
sbb
pusha
push
add
add
sbb
add
add
pop
daa
(bad)
lahf
sub
sbb
xchg
pusha
add
std
add
add
add
add
inc
lods
ss
add
add
fld
fwait
xchg
inc
dec
aas
(bad)
jne
shl
loopne
or
add
add
shr
mov
add
add
add
cmp
out
jp
sahf
pop
gs
sti
je
pop
cmp
mov
leave
sahf
aaa
or
cli
mov
jnp
add
add
cli
inc
and
add
add
cmp
mov
add
add
rcr
mov
or
mov
push
movs
xchg
mov
add
add
cmp
add
push
add
xor
add
xor
add
add
add
dec
mov
in
ret
add
fdivr
lods
fiadd
out
pop
ss
out
lahf
push
loopne
add
or
aas
pop
shl
add
pop
mov
add
xchg
sub
test
add
js
push
pop
jmp
out
sbb
add
add
add
or
add
push
outs
loopne
add
int
mov
add
add
add
add
sub
gs
inc
out
sbb
mov
arpl
mov
retf
pop
mov
xor
push
ins
or
add
in
std
jg
nop
add
add
add
call
add
inc
in
and
add
aaa
mov
mov
mov
push
mov
add
add
mov
mov
call
aaa
jo
add
add
outs
cmp
add
sub
add
add
xchg
mov
mov
fstp
add
outs
add
pushf
lock
arpl
add
mov
movs
fiadd
add
mov
xor
add
add
add
add
cmp
add
add
add
mov
add
add
fdivr
add
or
imul
xor
add
add
aam
test
add
add
add
push
add
add
rol
add
add
leave
inc
cs
add
add
add
add
add
out
cmp
pop
cmps
inc
inc
add
add
add
retf
jns
or
cmp
ret
std
out
sbb
add
add
jb
mov
add
push
iret
xlat
lock
add
add
add
sbb
add
or
mov
add
add
add
or
xor
(bad)
pop
scas
cmp
inc
add
add
add
add
add
add
add
sbb
or
add
cdq
outs
or
add
add
add
data16
or
add
add
add
add
sub
fldcw
and
add
add
add
add
xchg
loopne
add
shr
ja
retf
sahf
pop
sbb
cli
push
inc
add
add
cmps
jge
sar
add
add
add
arpl
cli
inc
and
add
add
cmp
mov
add
add
adc
and
ins
mov
add
add
pop
ins
or
mov
add
add
pop
add
adc
add
add
add
add
icebp
fcom
add
add
add
add
add
add
add
add
dec
mov
dec
mov
ins
mov
add
add
add
add
add
add
add
add
enter
in
fdiv
(bad)
(bad)
xor
jle
cmp
(bad)
jle
cld
add
add
add
add
aam
arpl
cli
inc
and
add
add
cmp
mov
add
add
shl
add
add
add
add
pop
ins
or
jmp
cli
pop
adc
add
add
push
pop
add
add
add
add
add
add
add
add
add
adc
outs
or
or
jp
ins
mov
add
add
add
arpl
fs
daa
sbb
jbe
js
add
add
jnp
icebp
retf
pop
mov
xor
add
add
push
pop
ss
cmps
jb
mov
add
add
out
add
add
add
add
sbb
add
add
add
add
cs
add
sbb
inc
add
cmp
xor
scas
fdiv
add
add
add
or
mov
add
add
add
mov
mov
add
mov
add
add
or
add
gs
add
add
add
add
add
add
add
add
pushf
mov
cld
hlt
pop
cmp
retf
das
mov
add
add
add
add
or
mov
sbb
xor
aaa
add
add
add
add
shl
xchg
out
sub
add
add
sahf
jg
inc
add
add
push
outs
pop
ds
pop
ins
or
add
jb
or
inc
add
add
and
dec
mov
add
add
aam
test
add
add
add
or
add
add
sub
add
add
add
xchg
adc
add
adc
add
add
mov
add
add
dec
add
add
and
xchg
mov
mov
add
add
sbb
add
add
pop
cli
xor
add
pop
adc
add
add
add
push
cmps
jbe
push
movs
xchg
pusha
push
add
add
rcl
fwait
jno
int
out
add
inc
or
add
or
int
add
add
add
or
ds
jne
repz
add
add
add
add
add
add
or
add
or
add
add
add
add
add
es
add
add
add
mov
add
add
add
sbb
div
in
sbb
add
add
mov
add
xor
push
jl
jecxz
retf
add
add
add
add
add
test
pop
jbe
add
(bad)
lock
add
inc
mov
add
add
add
add
dec
fs
outs
inc
add
add
add
add
add
mov
add
pusha
xor
add
inc
add
add
add
gs
add
add
pusha
xor
add
inc
add
retf
fldenv
fsubr
fsubr
add
jnp
inc
add
add
iret
fld
sar
add
add
int
xor
mov
add
hlt
add
sbb
add
rcr
add
add
mov
sbb
add
add
sub
call
add
add
add
add
add
cmp
sub
add
add
xchg
loopne
add
add
aaa
push
sbb
sbb
addr16
pop
mov
add
jnp
inc
add
add
pop
int
ret
(bad)
sub
add
xor
push
ja
lahf
pusha
add
add
(bad)
sbb
push
jb
sbb
add
sbb
pusha
push
add
(bad)
add
inc
jmp
add
add
add
xchg
loopne
or
pop
int3
lods
loope
add
add
add
or
test
sbb
xor
aaa
add
add
xor
add
add
add
add
mov
repz
xor
add
add
data16
push
imul
add
add
add
outs
xlat
mov
rol
adc
add
cdq
outs
or
add
add
jb
or
sbb
add
add
add
xchg
lock
add
add
pop
paddw
jg
inc
add
add
add
add
gs
add
add
in
add
pop
xchg
out
dec
rol
add
pop
ins
or
add
iret
mov
mov
add
add
jmp
and
or
add
add
add
or
add
pop
movs
push
sub
data16
add
add
add
add
add
pop
cs
jb
inc
add
add
add
add
pushf
mov
add
add
shr
mov
imul
add
add
add
sbb
(bad)
dec
fiadd
add
add
add
add
test
add
and
add
add
adc
dec
fs
outs
push
add
add
mov
or
add
push
add
add
mov
add
add
out
ret
retf
sbb
rol
add
add
add
add
cmp
add
add
add
in
adc
add
cwde
sub
(bad)
sbb
inc
add
add
add
cdq
dec
data16
add
xchg
sbb
add
add
add
add
add
and
add
adc
in
adc
add
add
mov
add
inc
dec
and
add
add
pop
add
add
add
add
fld
cmp
add
add
add
jb
add
add
add
in
add
add
add
gs
sub
add
add
add
add
add
sbb
cwde
repz
push
add
mov
and
add
add
add
add
add
rcr
aam
add
add
push
cmp
add
add
add
add
push
xor
adc
add
add
add
addr16
pop
clc
fnstsw
ds
sub
pop
loopne
xor
add
add
mov
add
add
add
pop
ins
push
movs
xchg
add
add
add
add
add
inc
jno
dec
mov
add
add
add
dec
or
add
add
add
add
add
add
add
add
dec
or
push
add
add
mov
or
add
add
add
or
add
add
add
(bad)
jnp
cmp
lock
jns
pop
add
retf
jo
add
add
add
fsubr
add
add
gs
push
cmps
xchg
pusha
add
pusha
rol
add
add
add
add
jecxz
xlat
pushf
pop
and
add
add
add
add
ret
push
add
add
add
add
enter
add
add
add
xchg
and
add
add
add
add
inc
in
sbb
jb
add
addr16
enter
add
add
add
shr
int3
pop
das
mov
sbb
cli
push
inc
add
add
add
add
retf
nop
and
add
add
(bad)
pop
adc
add
add
add
add
sbb
imul
rol
add
add
add
add
pop
jecxz
in
or
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
lods
add
je
inc
add
or
sub
add
add
add
add
add
cmp
mov
(bad)
pop
mov
add
add
add
add
jb
add
add
add
in
and
add
add
mov
add
add
sbb
mov
add
add
adc
add
add
add
add
jle
pusha
fadd
add
add
add
add
add
add
add
retf
mov
add
cmp
add
add
add
add
and
pop
aaa
mov
pop
stc
pop
xor
add
add
add
xor
or
add
add
add
shl
add
pop
ins
add
add
add
add
add
add
add
add
in
(bad)
lahf
fdiv
add
add
add
add
jmp
or
add
add
inc
add
xor
or
add
add
inc
add
add
(bad)
and
add
add
add
or
enter
add
add
add
add
jae
lea
jmp
add
add
add
push
inc
add
add
add
mov
push
pop
add
add
ret
cwde
xor
add
int
add
add
scas
cwde
add
add
add
or
add
es
add
and
or
xor
in
add
add
add
jl
nop
add
(bad)
inc
inc
pop
out
aas
mov
add
add
xchg
rcr
add
add
add
in
and
add
mov
iret
mov
add
sbb
mov
add
add
add
pushf
icebp
(bad)
imul
nop
add
add
add
aaa
jmp
or
add
add
add
or
cs
add
cmp
call
add
dec
and
pop
popw
sbb
cli
clc
push
inc
add
add
add
shl
add
add
mov
mov
add
add
xor
add
sahf
cmp
sbb
add
add
add
add
add
add
add
or
cmp
ss
add
xor
in
push
nop
adc
pushf
stc
add
add
push
jle
cmp
loope
fwait
add
add
add
add
xor
add
add
add
add
sbb
add
adc
lods
rcr
add
add
add
int3
sbb
add
add
add
add
add
into
jmp
add
enter
add
add
sub
fild
setnp
xchg
add
add
es
inc
add
add
add
fbld
test
add
add
jno
int
shl
push
add
add
sti
xor
test
add
add
jmp
or
add
dec
inc
push
outs
adc
push
outs
outs
or
add
add
in
in
or
out
mov
jmp
add
iret
sbb
leave
gs
retf
mov
add
inc
add
add
or
pcmpeqb
adc
add
lods
jae
mov
inc
add
add
add
mov
mov
adc
add
add
int3
sbb
add
add
adc
add
push
outs
adc
add
(bad)
mov
xor
add
gs
popf
call
add
add
jecxz
ret
std
out
adc
add
add
push
jb
or
add
add
loop
add
data16
pusha
aaa
sub
add
add
add
into
js
xor
add
add
int3
sbb
add
add
add
add
add
add
add
add
add
add
mov
push
or
add
into
inc
rol
add
add
sbb
jbe
add
add
add
shr
seta
xchg
add
add
pop
add
sub
js
adc
pop
inc
mov
mov
add
add
add
pop
sub
shl
mov
aaa
jmp
and
add
add
add
aam
push
adc
ja
outs
push
ja
inc
add
add
(bad)
and
add
add
aaa
push
cs
fdiv
add
push
jle
cmp
loope
fcomp
xor
add
xor
and
js
add
add
sub
ins
or
sbb
add
add
add
adc
lods
rcr
add
add
add
and
add
add
add
push
add
add
lahf
add
add
add
add
or
ss
add
cmp
jno
sub
add
add
cmp
(bad)
ins
jg
sbb
add
addr16
dec
mov
js
adc
add
add
cmps
push
ins
or
push
add
add
add
iret
(bad)
add
lock
add
xchg
adc
add
add
add
add
add
mov
pop
mov
add
add
add
xor
add
add
add
add
in
jo
in
inc
inc
add
add
add
js
mov
fisub
sub
jmp
es
add
add
push
ins
add
add
mov
add
add
jmp
add
add
push
add
add
call
and
add
add
sbb
add
jo
or
pusha
or
ss
add
add
add
add
jo
retf
cmp
add
add
add
add
xchg
cmp
jo
add
dec
inc
aas
shl
sub
add
test
or
xor
xchg
pop
add
(bad)
pop
scas
cmp
inc
add
add
add
add
add
mov
add
add
and
add
add
add
push
int
xor
add
add
add
jge
rcl
mov
movs
pop
leave
in
ret
ret
sub
mov
cld
inc
inc
nop
add
ins
aam
add
pop
mov
add
add
mov
add
add
cmp
xchg
mov
inc
push
lock
add
add
mov
add
xchg
dec
mov
and
add
add
xor
fidivr
add
add
add
jae
outs
and
mov
add
add
jle
cmp
loope
fcomp
xor
cdq
(bad)
jg
enter
add
add
inc
(bad)
dec
inc
add
pop
ss
out
jae
rol
dec
cmps
mov
jno
sbb
jp
add
inc
add
or
add
xor
add
add
or
ss
add
add
pop
dec
fdivp
push
cs
out
mov
inc
pop
int
ret
(bad)
sub
int3
adc
iret
hlt
sbb
mov
enter
rcl
mov
add
push
add
or
mov
je
cmp
inc
mov
cmp
rol
add
sbb
add
add
aaa
sbb
aaa
sbb
add
add
mov
pop
xor
add
fcomp
mov
add
add
add
cmp
xor
retf
int3
pop
and
adc
iret
hlt
sbb
call
shr
sbb
add
cli
add
add
mov
inc
mov
mov
pop
or
add
add
fwait
test
rcr
rol
jae
add
pop
fcos
add
fdiv
add
mov
iret
xchg
rol
adc
fnstcw
shl
ja
add
pop
call
add
cmp
mov
rcr
jo
sbb
add
add
xor
or
or
mov
xor
fadd
ins
fadd
add
clc
call
mov
mov
inc
or
faddp
add
add
hlt
push
push
pop
inc
js
add
add
sub
add
add
add
add
add
add
add
add
les
sahf
retf
int3
or
fnstenv
(bad)
add
pusha
sbb
xor
add
aam
addr16
xor
in
and
add
cmp
mov
imul
add
add
cmp
jno
or
outs
inc
jl
jnp
out
call
aam
addr16
xor
add
add
add
add
movaps
xchg
add
ja
pop
fmul
sub
movaps
movaps
in
cmp
jns
in
in
movaps
movaps
and
dec
pop
xchg
jmp
in
cvtpi2ps
xchg
add
hlt
add
mov
xchg
pusha
dec
sar
retf
mov
add
mov
push
mov
pop
xchg
add
and
pop
sar
test
cmp
(bad)
mov
fdivr
and
mov
cmp
push
cmp
push
pop
add
xchg
outs
mov
pop
sahf
pop
mov
cli
pop
call
scas
rcl
pop
xor
xor
push
xor
push
xor
push
xor
or
push
mov
inc
jne
call
push
mov
push
es
push
add
xor
jl
xchg
pusha
pop
lahf
push
push
add
dec
mov
sbb
push
xchg
sbb
fcomp
mov
ror
aam
mov
repz
xchg
sub
xchg
fld
imul
lods
out
mov
add
pop
mov
push
gs
add
adc
popf
ror
call
mov
xor
add
(bad)
frstor
cmp
mov
add
xor
and
addr16
push
inc
add
out
fsubr
ins
mov
cld
mov
ins
add
aas
enter
add
or
add
rcr
or
in
pop
(bad)
add
je
sub
push
shl
xchg
adc
add
add
iret
das
ins
lahf
sahf
xor
out
push
(bad)
add
dec
mov
add
add
or
data16
add
add
cs
test
jno
js
jl
cdq
(bad)
jle
int3
or
jl
add
mov
add
clc
adc
add
add
test
add
lahf
pop
dec
cmp
jb
mov
sbb
add
cdq
fnstcw
add
add
pop
sub
retf
sub
add
add
nop
add
add
cs
add
jns
push
inc
add
jl
in
xchg
mov
(bad)
outs
lock
add
dec
fadd
add
pop
cmp
out
inc
inc
test
add
mov
or
mov
add
add
outs
xchg
push
jno
pop
test
xor
xor
add
or
retf
mov
add
or
gs
retf
add
add
add
or
inc
add
add
or
mov
add
add
ror
sbb
fldl2t
cmp
idiv
jno
adc
int
add
sbb
add
xor
add
add
add
scas
xor
inc
add
add
pusha
add
push
add
or
add
add
fwait
add
mov
add
push
pop
jnp
arpl
push
pusha
add
add
add
xchg
pusha
add
add
add
or
mov
inc
add
add
outs
push
ja
int
out
or
add
or
mov
int
mov
mov
(bad)
cwde
add
pop
mov
std
add
sbb
add
add
add
push
gs
add
sub
mov
add
add
add
or
or
add
add
jnp
loope
sbb
add
in
jecxz
add
add
add
add
add
add
add
add
add
jno
sbb
xchg
sub
push
cs
test
push
ds
cmc
mov
and
add
cdq
(bad)
outs
lock
add
inc
add
pop
mov
add
add
add
push
fild
push
mov
cmp
mov
push
sbb
add
rcl
add
call
int3
lods
push
out
add
add
cmp
(bad)
mov
xchg
pop
in
rcr
add
ror
and
mov
inc
add
or
push
cs
xor
add
add
add
in
mov
add
cld
fnstsw
cmp
loopne
add
cli
add
xor
add
add
std
add
add
jae
dec
fiadd
popa
mov
add
nop
add
add
add
push
addr16
pop
jbe
adc
cmp
loope
add
add
add
add
add
cs
add
aaa
push
or
outs
or
out
mov
jmp
mov
add
add
add
jl
fdivr
mov
mov
sbb
add
xor
fnstsw
cmp
pop
mov
add
add
add
add
add
sub
add
add
mov
test
add
or
inc
add
data16
add
add
add
inc
add
fldenv
mov
repnz
(bad)
in
sbb
mov
js
add
add
add
jo
loope
sbb
add
dec
fcomp
mov
add
add
add
add
in
iret
(bad)
sbb
add
add
add
sbb
cli
push
inc
inc
cli
add
xor
add
add
xor
in
add
or
xor
cmps
pop
ror
add
sbb
jo
add
add
enter
add
add
add
fwait
add
mov
add
add
add
jnp
fisttp
jp
or
inc
add
inc
fwait
lea
add
add
add
push
outs
hlt
or
lods
in
add
add
add
add
add
fs
sub
nop
add
add
enter
add
and
inc
add
add
add
add
gs
adc
mov
inc
add
add
rcl
add
add
pusha
add
add
add
add
sub
ins
or
xor
add
add
into
pop
jecxz
iret
inc
jb
fst
add
cs
add
add
add
add
shr
sbb
pop
das
jbe
jmp
mov
add
jg
jae
add
add
dec
pusha
std
add
sbb
add
jecxz
test
add
loopne
add
add
(bad)
pop
mov
add
sbb
add
add
add
pop
xchg
lahf
sbb
mov
sbb
fnstsw
add
add
nop
add
add
cs
push
ins
mov
inc
add
mov
rol
add
add
add
add
sub
lods
mov
ja
add
add
addr16
mov
add
pop
mov
shl
add
add
add
add
add
mov
adc
add
add
rcl
add
add
sub
inc
add
sbb
cmps
fwait
sbb
mov
(bad)
push
add
nop
add
retf
or
fsubr
add
fstp
repnz
pusha
add
add
or
add
add
(bad)
or
add
add
outs
mov
add
addr16
mov
push
inc
add
add
sbb
hlt
push
add
add
add
pusha
and
add
ds
lds
sub
rol
add
or
inc
add
add
cmp
fucomip
sbb
mul
xchg
or
pusha
add
add
in
iret
(bad)
sbb
cmp
add
add
or
add
add
(bad)
or
add
add
add
add
nop
add
add
add
add
add
add
or
aas
adc
add
in
sbb
add
add
add
add
push
leave
xor
sti
lods
loope
push
loopne
add
add
add
jnp
repnz
pop
push
test
inc
add
add
add
sbb
add
add
add
dec
shl
add
inc
fwait
inc
add
sbb
add
fld
add
add
mov
inc
je
add
add
add
ins
out
add
xor
cld
push
jo
add
cs
add
add
add
add
jns
movs
loope
sbb
nop
cmp
ins
(bad)
(bad)
add
add
add
add
sbb
fldl2t
cmp
idiv
jo
add
add
add
repz
int3
add
add
add
mov
or
add
jno
add
add
add
add
(bad)
mov
pop
pusha
out
add
add
add
add
add
add
or
mov
add
add
add
iret
mov
inc
rol
add
gs
aaa
xor
adc
or
add
add
sbb
jno
xchg
mov
outs
mov
inc
add
add
sub
and
pop
ss
pop
mov
repz
add
add
add
repz
int3
add
add
add
mov
add
add
adc
add
add
sbb
add
add
add
sub
jo
add
add
add
imul
pop
inc
add
add
add
add
inc
add
add
add
add
in
out
add
add
and
add
sbb
mul
xchg
fsub
xor
add
add
inc
push
add
addr16
add
add
add
add
repz
int3
add
add
add
mov
add
dec
inc
xor
add
jno
add
add
add
add
out
mov
push
sbb
add
add
add
sbb
cmc
add
add
add
add
add
fwait
add
addr16
mov
add
add
retf
mov
add
add
add
add
add
fs
mov
fcomp
add
add
add
and
add
add
sahf
pop
cmp
cmc
repnz
add
add
gs
mov
add
add
add
add
push
add
add
add
into
jns
cmp
or
add
add
lods
aas
push
sbb
add
add
adc
add
add
add
in
cld
push
jo
add
add
add
or
cmc
sti
push
add
add
add
add
dec
mov
add
outs
pop
inc
in
mov
outs
mov
add
add
add
add
add
add
add
cld
mov
ins
add
add
add
repz
int3
add
add
add
mov
add
add
add
add
sub
add
add
add
sbb
add
add
add
sub
and
add
add
add
or
add
add
add
add
add
add
in
cld
push
jo
xchg
int
mov
add
add
add
add
add
add
add
add
add
sti
jno
mov
xor
jge
add
adc
add
add
add
add
cmp
jnp
ds
add
add
add
add
aas
int
xor
add
add
push
clc
adc
add
add
add
add
xor
add
add
add
add
add
add
add
(bad)
pop
dec
cmp
add
add
add
adc
mov
add
add
add
add
ds
lds
add
add
jg
aaa
xor
add
add
in
or
add
add
add
loopne
out
retf
daa
stc
push
add
add
stc
mov
retf
sub
add
add
add
add
das
int
xor
add
add
push
clc
adc
add
add
add
adc
add
add
add
cs
test
add
add
add
add
push
jno
pop
test
or
add
pusha
xor
add
add
add
xor
cld
push
jo
add
add
ja
fmul
pop
add
or
add
add
add
adc
add
out
or
add
add
add
cmp
sar
jnp
mov
es
call
add
add
add
push
push
or
add
add
add
out
retf
xchg
fdiv
add
(bad)
add
int
add
add
add
into
jg
push
add
push
cmp
mov
sub
add
add
jbe
add
add
iret
aas
je
xor
jg
cmp
retf
and
add
add
jg
push
add
add
add
dec
mov
retf
outs
and
ins
mov
add
add
add
add
cld
fild
add
add
add
dec
inc
add
add
add
add
adc
call
add
add
add
mov
add
add
add
add
cmp
das
sar
add
add
mov
jbe
rol
cmp
xor
mov
xor
jge
add
add
in
adc
add
add
add
sar
jae
add
stc
mov
add
add
fild
outs
or
add
cs
test
add
add
add
in
pop
(bad)
sbb
add
pop
aam
push
add
push
ins
out
add
add
add
cmp
das
sar
add
add
ja
or
xor
sbb
mov
mov
scas
or
jg
pusha
add
add
or
add
add
add
int3
cld
jno
sahf
rcr
xor
add
jg
loopne
add
add
add
dec
shl
add
pop
sbb
add
add
into
jns
cmp
jb
add
pop
ja
jmp
add
add
add
add
add
into
jg
lock
add
xor
je
lock
pop
sbb
fdiv
mov
add
add
add
ds
jle
jbe
and
add
add
sbb
add
add
add
jnp
imul
add
add
cmp
je
add
add
add
sub
add
mov
out
ret
xor
dec
add
push
jae
gs
add
jns
jno
daa
sbb
pop
gs
pop
shl
inc
test
add
add
sub
add
add
lahf
mov
inc
add
add
push
leave
mov
push
jns
mov
push
cmps
pop
jle
inc
add
add
mov
aam
inc
add
sbb
add
add
in
retf
xchg
fdivr
add
add
add
add
add
jb
pusha
data16
push
mov
sub
(bad)
xlat
mov
add
add
add
add
pusha
and
add
add
into
add
add
call
retf
mov
or
add
cdq
jne
pushf
inc
inc
add
es
add
add
pop
and
in
add
gs
retf
sub
add
add
add
push
fild
rol
mov
ins
fcomp
cdq
dec
mov
add
jnp
arpl
sub
add
mov
add
sub
jmp
add
or
add
add
(bad)
mov
fiadd
scas
cmp
xchg
fcomi
push
add
add
add
add
dec
or
add
add
lahf
jecxz
cmp
add
add
xchg
push
sbb
fsubr
push
pusha
add
xor
push
add
add
add
mov
add
out
iret
std
addr16
sbb
out
jno
add
add
in
add
add
in
add
arpl
sub
add
mov
add
iret
fst
add
add
add
add
lods
fwait
xor
or
add
add
add
add
pop
ins
pushf
xor
cmp
pop
pop
xchg
mov
jne
data16
add
sbb
add
pusha
jb
(bad)
pop
mov
mov
aaa
lea
add
mov
adc
or
add
add
add
xchg
pop
cmp
setle
outs
mov
or
add
add
add
and
(bad)
inc
mov
add
pop
xchg
stc
adc
in
hlt
(bad)
or
push
sbb
add
xor
add
pop
imul
add
add
add
add
je
push
inc
add
add
pusha
and
add
add
cmp
in
fdivr
dec
sub
ins
or
add
add
add
xor
add
add
jo
add
sbb
mul
cmp
sbb
retf
sub
mov
add
push
inc
add
add
push
pop
add
add
add
inc
add
add
fistp
cld
sbb
add
leave
mov
add
add
add
add
xor
add
add
add
add
rol
add
aam
add
sbb
retf
pop
fisubr
add
add
add
pop
movs
push
ins
mov
add
add
add
add
add
add
mov
jne
inc
jne
fld
jmp
inc
add
add
add
add
or
add
add
mov
push
jb
sbb
fbld
sbb
enter
add
pop
xor
add
add
push
gs
pop
jbe
add
outs
or
add
push
fdivr
jno
js
jl
add
add
add
int
cmps
fdiv
add
add
add
add
add
add
out
add
sub
add
sub
add
cmp
es
call
add
add
xor
adc
add
add
add
outs
or
add
add
add
xor
fld
xlat
pop
cmp
sub
add
add
add
add
add
pop
fwait
lock
add
add
add
add
sub
jne
xor
aas
enter
add
add
add
xor
add
add
add
add
retf
test
mov
add
add
add
add
retf
retf
sub
add
add
adc
fsubr
push
sub
add
add
add
push
add
add
add
jnp
dec
loopne
add
dec
loopne
add
jmp
mov
add
aaa
cs
add
add
add
add
add
add
aaa
(bad)
mov
jnp
jne
cmp
fstp
rol
add
add
aaa
loopne
cmp
add
add
add
ja
sub
sar
jle
retf
mov
inc
cmp
add
add
add
adc
mov
add
add
sub
add
fsubrp
lock
and
add
add
call
add
add
add
add
mov
add
add
add
add
add
add
js
mov
in
push
pusha
add
add
pop
mov
add
add
arpl
mov
jecxz
enter
call
xor
add
jo
add
add
add
outs
cmp
pushf
push
outs
jg
add
add
add
add
add
inc
add
pop
ss
cmps
push
lahf
add
add
add
add
add
xchg
fiadd
lods
mov
ja
add
push
leave
mov
inc
add
pop
mov
add
add
jnp
jae
inc
add
mov
mov
add
add
dec
fcomp
mov
inc
add
gs
cmp
(bad)
(bad)
add
fdivr
dec
sub
ins
or
add
stc
mov
add
add
retf
cmp
fistp
jecxz
mov
mov
add
pop
xor
add
movs
add
pop
pop
aam
add
lods
icebp
pushf
mov
pop
and
add
mov
add
add
data16
add
add
add
out
add
sbb
add
es
(bad)
jmp
add
jle
nop
add
arpl
inc
jne
fld
or
pop
mov
sub
inc
xor
fild
add
jb
(bad)
js
mov
add
push
pusha
enter
add
mov
or
add
mov
or
lahf
mov
repz
cwde
add
fwait
pushf
fwait
jno
loopne
mov
rol
add
add
sbb
rol
add
add
add
es
or
xchg
xchg
mov
int3
sbb
add
push
mov
sub
(bad)
cs
test
or
(bad)
clc
pop
into
add
add
jnp
popf
mov
outs
sbb
add
enter
add
add
xor
or
dec
loopne
ds
jle
jo
ins
or
pop
movs
stc
call
cmp
add
sub
sbb
rol
add
add
add
sbb
xlat
call
sbb
add
add
push
icebp
mul
jns
sbb
fbld
cld
add
add
iret
fisttp
(bad)
sub
retf
jg
inc
add
or
add
add
inc
dec
ror
mov
mov
add
add
add
add
add
add
add
add
pusha
xlat
mov
cmc
pushf
test
ins
mov
add
(bad)
fist
xchg
sub
(bad)
fld
xchg
jl
mov
mov
add
das
outs
pop
jbe
add
mov
add
sub
outs
and
outs
xchg
pop
iret
loopne
fld
add
add
add
add
jnp
add
add
scas
lahf
hlt
or
xchg
mov
add
pop
and
or
jae
fldcw
cmp
cmps
pop
retf
test
or
xor
mov
cmp
add
xor
add
add
add
add
add
adc
adc
inc
add
add
add
add
mov
out
mov
les
sbb
popa
in
jns
cmp
sbb
dec
fs
add
push
inc
add
add
push
jg
xor
add
cwde
add
add
add
add
add
add
lock
add
add
test
add
add
and
xor
jae
sub
mov
jecxz
(bad)
dec
mov
jg
sbb
aaa
xor
add
add
add
sub
outs
fadd
add
jb
add
aam
add
push
add
add
add
jnp
add
add
push
and
add
add
add
pusha
and
add
es
dec
mov
test
es
int3
movs
xchg
pop
cmp
add
aaa
mov
or
xor
xor
test
and
cwde
add
add
mov
add
push
add
add
add
jnp
add
mov
add
add
add
and
sub
fnstenv
xchg
adc
add
add
iret
fisttp
add
add
into
int
xor
add
add
add
add
add
nop
add
add
mov
ffree
add
add
rol
add
add
rol
add
push
add
add
add
jnp
add
add
add
add
add
test
add
add
and
add
add
add
add
fcomp
add
add
add
pop
iret
sahf
ds
dec
mov
inc
mov
retf
rol
add
add
add
add
sub
xchg
mov
xchg
and
push
pusha
add
jo
add
add
add
mov
or
add
add
add
add
add
add
or
add
xor
xchg
push
out
hlt
or
add
add
add
or
add
mov
sub
outs
ss
add
add
add
pushf
clc
add
enter
add
add
add
outs
fwait
xor
retf
and
add
add
adc
add
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
(bad)
jo
retf
cmp
add
add
add
adc
add
pop
outs
cmp
sub
add
rol
add
add
lods
inc
mov
inc
mov
add
add
inc
add
add
add
add
mov
add
add
add
pushf
test
add
push
pusha
add
jo
add
add
add
mov
add
add
add
push
mov
add
sub
add
or
push
or
add
add
add
xchg
mov
add
adc
add
sbb
movs
fiadd
add
add
add
jecxz
popf
loopne
dec
movs
inc
mov
add
add
add
add
adc
daa
jo
(bad)
add
add
add
add
add
add
add
add
mov
add
sbb
add
add
add
add
add
add
dec
inc
add
add
add
add
adc
inc
add
add
retf
fldenv
fadd
fstp
or
add
add
add
out
(bad)
std
cmps
hlt
sbb
add
add
add
push
cmps
jbe
les
xchg
pop
add
add
add
add
inc
mov
and
add
add
add
int
add
add
xor
add
add
add
add
add
rol
add
xchg
leave
xor
jnp
cli
lock
ud0
or
add
call
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
sbb
out
sbb
pop
dec
add
add
add
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
push
mov
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
or
or
add
or
add
add
add
add
add
shl
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
les
add
les
xchg
sub
sbb
add
push
js
in
std
cmp
loope
stos
rol
or
and
enter
ret
adc
loopne
add
jae
dec
rol
jne
cmc
ja
nop
(bad)
dec
enter
ds
or
push
mov
push
inc
scas
mov
xor
push
cmc
and
add
pop
xchg
cdq
icebp
pop
icebp
pop
push
jnp
jg
idiv
(bad)
out
(bad)
out
mov
add
cmp
(bad)
sahf
or
(bad)
(bad)
idiv
xor
mov
push
xchg
xlat
fdiv
gs
xchg
clc
(bad)
(bad)
clc
(bad)
(bad)
clc
(bad)
dec
(bad)
(bad)
clc
(bad)
(bad)
clc
(bad)
(bad)
clc
(bad)
(bad)
clc
outs
fwait
(bad)
mov
(bad)
je
mov
jg
fwait
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
call
test
inc
push
or
mov
stc
jmp
iret
fimul
mul
mov
retf
add
out
jbe
aas
jmp
test
add
push
lock
(bad)
sahf
neg
push
clc
lock
in
neg
jge
jecxz
jnp
clc
cmps
call
adc
jmp
(bad)
(bad)
clc
out
mov
arpl
loope
fstp
inc
(bad)
mov
or
pop
(bad)
rcl
inc
jg
xor
loope
jmp
(bad)
cmp
out
(bad)
and
mov
jecxz
lods
fsub
cmc
icebp
fisttp
pop
fidivr
fnstsw
xchg
retf
mov
std
aas
fidivr
sub
push
shl
pop
fiadd
dec
je
xor
mov
jno
out
mov
pop
xchg
frstor
lods
pop
xchg
mov
mov
cmp
(bad)
je
ds
ds
ficom
jnp
jl
hlt
cmp
jecxz
mov
fcmovu
sbb
add
jg
movs
(bad)
cld
neg
iret
into
test
push
call
out
sar
not
in
xlat
mov
push
add
ret
sbb
adc
or
sub
inc
jne
out
push
mul
push
push
test
int
mov
pop
sub
lods
jmp
dec
mov
loop
sub
hlt
imul
sbb
jmp
(bad)
scas
xchg
push
xchg
ins
and
cli
push
fdivr
sahf
addr16
adc
xchg
fs
mov
repz
iret
cld
stc
lahf
call
adc
sti
sti
in
mov
ins
addr16
repnz
cli
and
mov
inc
les
cmp
pop
xchg
jmp
outs
pop
pop
fwait
mul
ds
pusha
fsubr
out
or
add
cmps
mov
xor
into
dec
(bad)
inc
stc
test
mov
or
or
ret
test
mov
(bad)
jge
leave
cmp
push
sahf
ss
jle
movs
stc
repz
outs
fwait
mov
mov
std
scas
and
fs
out
test
outs
movs
xchg
retf
movs
(bad)
jge
out
ja
sbb
sub
mov
sbb
out
jg
(bad)
aaa
and
pop
pop
inc
jb
mov
pop
sbb
cld
jo
in
fistp
std
cmp
sti
cmps
fld
jge
addr16
jecxz
fucomi
repnz
std
jle
jmp
icebp
mov
test
or
hlt
sti
(bad)
in
xchg
add
push
sub
icebp
push
ss
fisubr
mov
iret
stos
ficomp
sti
jmp
jmp
rsqrtps
cmps
mov
xor
fcomp
test
icebp
idiv
xchg
dec
jg
lahf
rcr
inc
xchg
xor
mov
ins
xchg
stos
arpl
cdq
das
jbe
aas
(bad)
jmp
aad
cmp
repnz
call
and
imul
pop
jbe
int
push
mov
(bad)
(bad)
jl
out
mov
sub
stc
mov
fld
cld
cmp
lock
add
cld
popf
mov
mov
pop
imul
(bad)
mov
out
xchg
cmp
xlat
inc
jg
jmp
and
sahf
lahf
pop
js
fdivr
sbb
sbb
fisubr
aam
jecxz
movsx
pop
jg
cmps
sub
jecxz
ins
push
cmp
adc
int3
(bad)
push
icebp
hlt
leave
std
mov
pop
cld
out
xor
fwait
(bad)
shl
pop
retf
arpl
imul
js
rcr
cmc
mov
pop
enter
retf
cwde
data16
aam
and
ins
rcl
push
xor
fisubr
std
ins
xchg
push
or
js
fbstp
mov
sub
add
clc
adc
jnp
pop
sbb
in
call
lahf
icebp
pop
inc
inc
std
int
lods
lahf
jnp
in
xchg
adc
cmp
xor
call
adc
mov
popa
(bad)
aaa
and
jle
cli
xlat
ins
cs
jne
imul
xchg
pusha
adc
xchg
sbb
pop
and
cs
mov
popf
push
xchg
pusha
enter
inc
push
mov
push
ins
call
js
jne
sti
test
mov
ins
mov
pushf
popf
pop
mov
sbb
cmps
(bad)
shl
jge
enter
xor
and
movs
enter
in
xlat
xchg
leave
cmp
bswap
(bad)
pop
pop
fwait
jge
sub
les
iret
jbe
aam
stc
xchg
fwait
push
(bad)
outs
pop
push
aam
dec
and
daa
cli
fs
push
xchg
pushf
cdq
mov
mov
outs
xchg
add
cmp
dec
add
jmp
gs
stc
jmp
mov
mov
mov
cmps
popf
sub
sub
pop
mov
mov
mov
ins
mov
retf
inc
sub
repz
rol
push
mov
movs
data16
mov
xchg
sbb
enter
pop
xchg
iret
dec
mov
lock
scas
(bad)
les
icebp
fdivp
mov
loop
xchg
dec
xchg
mov
iret
jmp
std
cmp
imul
cli
mov
outs
imul
loop
sub
push
repnz
xchg
adc
jge
jns
scas
pop
xchg
mov
(bad)
push
outs
lds
ret
sti
mov
fmul
cli
jns
cli
xchg
out
cmp
mov
arpl
iret
cdq
dec
stos
idiv
pop
aaa
(bad)
and
out
push
mov
and
push
pop
outs
inc
repnz
mov
outs
mov
(bad)
movs
inc
cwde
mov
jo
xchg
add
std
cdq
jns
in
fnsave
push
sahf
mov
adc
xchg
xchg
in
iret
jmp
mov
jne
dec
bound
lahf
jmp
xchg
in
bound
int3
or
jmp
dec
loopne
xchg
mov
bound
sar
pop
pop
arpl
dec
test
test
adc
xchg
fwait
mov
jne
aad
fild
mov
add
ds
pop
jno
(bad)
pop
mov
ret
fnstenv
mov
cdq
add
stos
mov
test
in
ins
cmp
jae
out
cld
jno
jmp
ins
(bad)
jne
push
mov
cli
push
sbb
mov
sub
push
cmps
xor
jne
push
retf
xor
jns
mov
push
cmp
xchg
add
daa
adc
push
fs
shl
jne
imul
push
int3
cdq
xchg
fdivrp
mov
pop
sub
fdiv
cmc
mov
jle
cmp
cmps
mov
nop
repz
push
add
test
addr16
xlat
test
ficomp
scas
retf
es
stos
retf
ds
loop
retf
(bad)
mul
or
fcom
cmps
in
xchg
add
out
popf
push
xlat
dec
mov
lods
iret
sbb
imul
into
aad
push
mov
test
out
push
push
mov
test
movs
cmc
popf
test
mov
nop
in
ins
fidiv
rol
pop
movs
(bad)
test
repnz
cmp
fwait
xchg
dec
fld
pop
adc
xchg
push
scas
jp
mov
jmp
fst
scas
outs
(bad)
neg
dec
mov
in
jmp
ror
shl
push
inc
lahf
and
mov
mov
iret
pop
mov
in
pop
jmp
gs
out
ja
mov
push
(bad)
xchg
cmc
jge
retf
jne
cmp
xchg
out
cdq
loope
rcr
(bad)
loope
dec
(bad)
cdq
inc
jp
cmp
jle
ficom
jg
jae
sbb
push
outs
in
cmp
lds
or
fstp
push
inc
jno
imul
jae
std
(bad)
jb
out
rcr
sub
hlt
gs
pop
pop
retf
mov
xchg
mov
in
mov
jae
enter
int3
push
lahf
leave
mov
xlat
push
scas
dec
mov
test
mov
mov
sahf
stos
jb
jno
pop
pop
sar
lods
adc
cmp
retf
add
aaa
mov
repz
jp
and
mov
and
mov
shl
div
mov
in
jne
jp
(bad)
sbb
imul
sub
out
mov
ins
adc
jae
mov
inc
mov
xor
out
outs
dec
aas
jae
cs
adc
fidivr
or
xor
sti
cmp
xor
pop
or
or
mov
scas
sub
test
scas
xchg
in
nop
ficom
push
push
aam
shl
dec
fwait
neg
mov
imul
jo
fcmovb
ins
cmp
push
test
xchg
in
fisub
retf
cli
js
mov
cli
mov
mov
sti
cs
cwde
xlat
and
jge
inc
mov
call
xor
arpl
mov
das
aas
jg
sti
test
fwait
ins
(bad)
mov
clc
lods
in
xchg
not
jmp
cdq
loop
xchg
jno
mov
mov
pushf
fwait
xchg
fs
dec
loop
pop
fstp
pop
mov
cmp
push
hlt
gs
pop
(bad)
mov
(bad)
dec
(bad)
jns
sti
or
xchg
mov
jge
sbb
cdq
cmps
mov
jb
mov
(bad)
or
push
jmp
mov
pmaxsw
mov
cmp
retf
ret
mov
daa
xchg
les
adc
or
push
xchg
outs
test
jge
retf
fidivr
pop
loope
mov
data16
in
fs
aas
mov
inc
mov
ja
mov
xchg
lods
mov
sbb
test
sbb
sub
adc
xor
xchg
test
mov
aaa
push
lds
fistp
push
ds
adc
sar
shr
repnz
cmc
pop
cmp
retf
imul
dec
mov
mov
push
mov
lea
shl
mov
jge
repnz
fsubr
adc
dec
fldcw
push
daa
add
sbb
pop
push
shl
iret
test
fnstenv
sbb
(bad)
mov
enter
sbb
ins
xor
pop
ins
outs
jno
imul
jecxz
sti
in
call
mov
inc
jmp
jnp
fs
ins
ins
out
fistp
loop
push
retf
aas
lods
(bad)
(bad)
lds
dec
hlt
leave
jl
fstp
mov
imul
in
pop
cli
ins
inc
mov
cmp
retf
imul
xlat
xor
jno
(bad)
data16
stos
(bad)
int
std
inc
cld
mov
pop
ja
outs
pop
(bad)
dec
push
dec
pop
je
int3
cwde
push
in
std
jmp
xchg
sbb
retf
movs
sbb
int
call
pop
dec
push
and
xchg
dec
xor
xor
mov
jl
cmp
sub
shr
mov
mov
push
arpl
jle
icebp
and
bound
test
and
push
cs
out
inc
lds
shl
outs
mov
pusha
call
aaa
mov
pop
xor
outs
scas
xchg
lea
jp
scas
ror
scas
and
xchg
xchg
mov
and
in
int
shl
repnz
mov
cmp
ss
aad
xchg
in
test
int3
fimul
es
cmp
dec
xchg
jae
test
dec
sbb
jl
out
out
sbb
adc
jbe
and
push
push
cmp
mov
xchg
sbb
and
shl
cmp
mov
(bad)
mov
test
mov
pop
lahf
stos
jmp
pop
jp
cmp
aaa
xor
xchg
sbb
shr
mov
xor
jmp
cwde
xor
mov
jb
xchg
dec
mov
pop
cmp
addr16
imul
cmp
fwait
and
(bad)
push
les
mov
xor
xor
jae
and
dec
test
loop
fcomp
js
pop
adc
repz
inc
fwait
cmp
cdq
sbb
je
sti
pop
jnp
outs
xlat
fmul
(bad)
aas
mov
xor
neg
fwait
or
cli
xchg
test
mov
sub
mov
inc
sbb
(bad)
adc
and
retf
cdq
scas
mov
sbb
cmp
cs
gs
ins
fcom
cli
inc
fiadd
fwait
pusha
and
addr16
mov
int
mov
mov
xchg
fwait
loopne
cmps
cld
dec
sti
les
mov
iret
dec
sbb
sbb
shl
call
pop
rol
sahf
(bad)
xchg
mov
fs
(bad)
out
cli
(bad)
lods
inc
lods
out
ret
jl
repnz
mov
cli
leave
neg
shr
mov
mov
sbb
ins
dec
movs
jmp
movs
out
adc
outs
adc
pushf
sbb
iret
sub
mov
dec
outs
test
or
and
sbb
mov
rcl
mov
aam
sub
data16
mov
mov
or
lods
xchg
mov
xchg
mov
int
iret
int
lods
rcr
lds
pop
inc
in
jle
imul
dec
xor
push
leave
bound
not
xchg
push
jnp
movs
test
bound
int
push
out
sub
mov
jp
push
adc
xor
xchg
cmp
mov
mov
iret
dec
xlat
jg
add
aaa
test
mov
xlat
fistp
push
pop
(bad)
cmc
sti
fisttp
daa
dec
and
fild
movs
(bad)
mov
xchg
loope
imul
cmp
xchg
fmulp
call
in
lock
fbstp
test
js
mov
fstp
sbb
clc
les
ret
stc
icebp
into
ss
in
adc
cli
xchg
loop
sub
sahf
scas
mov
adc
in
int
ins
repz
cld
pop
bound
sti
cmp
lahf
or
jecxz
pop
daa
xor
cmp
mov
repnz
jp
pop
mov
ins
xchg
push
ret
and
shr
jo
xor
push
outs
das
out
pop
adc
xor
pop
stc
lahf
(bad)
push
push
fsubr
xor
setle
xchg
pop
pusha
pop
fidivr
mov
push
stos
(bad)
out
pop
stc
lds
dec
xor
test
inc
mov
sahf
mov
clc
ins
cmps
repnz
fstp
(bad)
icebp
(bad)
mov
dec
fild
dec
ins
inc
xchg
or
mov
fcmovnb
lds
sub
jg
sbb
jecxz
inc
std
mov
push
fisttp
scas
cli
cwde
adc
jb
js
in
ss
addr16
jg
lods
arpl
mov
mov
rcr
cld
add
(bad)
neg
jecxz
movs
in
jecxz
(bad)
fcom
in
mov
pushf
jmp
out
mov
hlt
jb
mov
inc
xlat
xor
in
cdq
jle
out
in
mov
(bad)
pusha
jle
aas
push
push
aad
jnp
sub
inc
gs
or
ds
jbe
ins
xchg
push
ret
out
pop
outs
pop
out
mov
mov
loop
pop
jl
add
cmp
cmp
jnp
jge
mov
inc
jno
mov
jns
dec
pop
jnp
enter
loopne
jecxz
sub
mov
jmp
or
in
xor
out
xchg
ins
out
jae
dec
pop
(bad)
mov
jg
call
jge
push
mov
(bad)
xlat
fucomip
jl
pop
or
lahf
leave
stc
cmp
dec
jne
mov
and
stos
in
fisttp
repnz
test
out
xchg
lahf
ret
cld
out
xchg
cmps
mov
leave
retf
gs
(bad)
popf
and
dec
test
mov
add
repz
xor
jns
xchg
jle
push
sahf
push
pop
aam
neg
bound
call
aas
ficomp
nop
hlt
mov
xchg
xor
ja
xchg
es
fst
sbb
mov
mov
cmp
pop
mov
in
xchg
call
iret
sub
movs
lods
jecxz
in
rcr
mov
test
mov
addr16
fwait
jecxz
jae
jno
xchg
outs
out
mov
icebp
fdiv
mov
les
(bad)
fcom
retf
fnstcw
in
and
icebp
int
pop
jg
jecxz
out
mov
lahf
rol
or
sti
es
les
pop
inc
or
xchg
or
imul
retf
mov
rol
movs
xor
mov
jo
mov
mov
clc
mov
ja
repnz
icebp
dec
jne
adc
sti
std
mov
inc
push
scas
idiv
dec
dec
mov
mov
jl
pop
das
call
cmc
mov
das
dec
ficomp
test
jle
or
push
and
jg
stos
fisttp
rcr
es
fcos
pop
retf
mov
mov
in
mov
lods
jmp
ss
test
aam
add
or
pop
ins
arpl
dec
cli
cmps
mov
cmp
loope
mov
cmp
mov
mov
in
loope
jmp
imul
clc
popf
popa
pop
fidiv
mov
les
(bad)
iret
mov
mov
jns
outs
(bad)
ds
outs
scas
sbb
jae
stc
lahf
push
fld
inc
inc
or
(bad)
jecxz
mov
dec
jl
iret
fsub
and
xor
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
iret
(bad)
js
repz
jg
std
icebp
fnstsw
cmp
jg
int
addr16
pop
jecxz
jmp
movs
mov
cld
sti
retf
(bad)
icebp
sti
jo
and
add
add
hlt
fidivr
xchg
mov
add
loop
and
int
in
jp
test
out
cli
mov
js
cli
dec
sti
stc
inc
jmp
les
and
add
add
aam
leave
xor
xchg
gs
aas
jl
jge
sti
lods
mov
sbb
xchg
xor
outs
pop
sti
outs
xchg
mov
fcomp
sub
imul
push
dec
mov
dec
stos
mov
jmp
mov
aas
fidivr
inc
addr16
jge
or
add
add
icebp
(bad)
div
sti
loope
loop
fs
ja
mov
ja
and
push
add
xlat
adc
cld
sar
lods
fwait
es
pop
jle
std
xor
ficomp
(bad)
imul
call
imul
xchg
add
mov
repz
retf
jmp
in
push
pop
das
test
add
not
adc
add
scas
in
jle
in
xchg
dec
ins
pslld
ds
dec
mov
leave
mov
ins
dec
xchg
cmp
call
mov
push
mov
jbe
call
test
dec
std
gs
cdq
adc
mov
fldenv
(bad)
adc
shl
aam
add
pop
push
mov
push
xchg
imul
mov
mov
test
cmp
(bad)
and
das
dec
jb
mov
popf
retf
mov
xchg
pop
jns
fs
xor
popa
lea
stos
inc
stc
jecxz
je
nop
ds
jecxz
dec
push
xchg
push
add
add
xor
mov
psrad
mov
mov
addr16
test
ret
jp
mov
inc
jno
dec
ds
outs
pushf
(bad)
les
jbe
xor
leave
cwde
ins
cmp
sub
aad
or
add
data16
in
aaa
bswap
jns
mov
mov
ins
call
(bad)
or
push
xchg
lods
sbb
aam
and
aad
std
sub
xchg
or
nop
out
movs
pop
push
call
mov
fidiv
pop
pop
pop
mov
hlt
mov
push
retf
mov
jp
and
pop
jnp
xchg
xlat
(bad)
mov
push
or
mov
inc
lea
push
pop
std
sub
mov
mov
xor
mov
mov
aaa
(bad)
jno
ja
push
aad
sbb
test
xchg
out
sbb
ret
clc
inc
mov
in
pop
bnd
sub
(bad)
mov
jl
ja
shl
xlat
iret
lds
int
int
test
add
ror
cmc
jmp
dec
mov
jmp
pop
ss
sbb
ss
xor
push
pop
test
xchg
scas
mov
xchg
jne
xchg
inc
xchg
pusha
cmp
imul
cmp
sti
ret
adc
pop
cmp
mov
aas
pop
jne
dec
cmp
lods
lds
pop
xchg
and
fcomi
pushf
adc
rcl
fld
(bad)
es
loopne
aad
jnp
repnz
inc
pop
add
lea
jge
and
xchg
pop
fistp
ss
in
jle
jp
sbb
mov
hlt
aad
in
mov
adc
sbb
mov
in
sbb
push
adc
shr
sbb
mov
pop
call
jae
out
adc
in
enter
inc
loop
mov
mov
std
aas
jno
fdiv
(bad)
(bad)
call
push
(bad)
cmc
loopne
les
movs
or
push
push
int
push
out
out
pop
aad
mov
xor
jbe
push
retf
ss
sbb
test
out
jmp
(bad)
xlat
xchg
lahf
add
xchg
dec
xlat
push
mov
cmps
sbb
jae
lea
imul
pop
pop
mov
retf
jmp
repz
stos
mov
(bad)
xor
retf
mov
mov
pop
push
fmul
jbe
bound
jg
or
and
xchg
fiadd
inc
sar
loope
dec
jl
imul
cmp
adc
retf
sbb
inc
std
mov
push
sub
pop
pop
in
pusha
ret
aas
repz
push
stos
sub
(bad)
popa
cmp
stos
adc
xor
xchg
jp
xor
rol
icebp
cmp
xchg
mov
lods
idiv
fdivr
inc
pop
shl
imul
jmp
mov
addr16
test
push
lahf
xchg
mov
jns
dec
mov
add
jo
xor
popf
mov
jmp
cmp
jnp
sub
ss
push
add
mov
or
push
mov
cmps
mov
(bad)
lods
jp
mov
pop
neg
or
rcr
inc
or
jno
out
pop
pushf
or
add
mov
push
mov
ret
push
dec
ins
cli
push
mov
push
sbb
dec
leave
jp
push
inc
sub
scas
test
xchg
(bad)
adc
adc
icebp
sub
(bad)
mov
syscall
or
xchg
in
cs
push
cmp
test
fnstenv
pop
pop
(bad)
sahf
jbe
push
dec
xchg
xchg
add
mov
and
xchg
sbb
cdq
js
retf
xchg
jne
push
ret
pop
lea
mov
mov
cmp
iret
test
dec
cmps
sbb
loope
fdiv
xchg
aad
pop
div
pop
mov
jns
loop
das
pop
xchg
and
aaa
imul
pop
hlt
inc
sbb
rcr
dec
mov
cmps
pop
cdq
sti
mov
stos
in
jmp
ins
(bad)
xor
iret
xchg
out
adc
in
lea
int
mov
add
loope
pop
xor
arpl
cld
dec
fsubp
sahf
jb
pop
cmp
push
iret
repnz
(bad)
cmp
les
fdivr
inc
sbb
loopne
xchg
fstp
sti
ja
cdq
jb
cs
(bad)
ror
call
(bad)
aad
cmp
scas
xchg
cmc
(bad)
fisubr
pop
dec
push
inc
dec
in
nop
iret
xchg
in
pusha
mov
sub
sbb
sub
bts
ds
pop
xchg
mov
dec
mov
xchg
push
jno
outs
push
jg
mov
in
(bad)
dec
cmp
mov
pusha
pop
daa
xlat
les
std
mov
pop
fwait
xor
xchg
dec
test
add
mov
and
dec
outs
inc
cs
cmovnp
jns
mov
outs
int
leave
add
loope
sub
in
jae
sub
and
mov
pop
xchg
inc
cmp
std
pop
jmp
dec
push
sub
sub
retf
dec
lea
xchg
mov
xchg
in
addr16
imul
arpl
popf
pop
mul
cwde
int3
les
or
push
jnp
jmp
mov
scas
push
fistp
rcr
jb
jae
(bad)
fs
xchg
aas
aam
xchg
xor
xor
imul
sub
dec
(bad)
out
fs
fistp
fcom
adc
add
das
inc
outs
imul
ja
mov
pop
mov
movs
in
xlat
jmp
sub
and
fnsave
jmp
retf
pop
dec
jl
push
push
leave
cli
(bad)
out
lods
dec
or
ss
dec
mov
cdq
scas
pop
js
ins
cmps
hlt
or
xor
in
cmp
jmp
jmp
das
imul
daa
mov
xchg
push
cwde
retf
mov
iret
cld
jne
fsub
mov
and
aam
dec
or
sub
push
xchg
sub
js
in
daa
aam
dec
mov
outs
or
in
adc
fisttp
xchg
sub
xor
adc
imul
outs
(bad)
(bad)
cli
(bad)
mov
jmp
or
imul
inc
aad
leave
fucomp
dec
pusha
cmp
imul
lds
mov
fwait
mov
adc
add
das
bound
int
fcom
inc
cmp
(bad)
call
mov
fwait
xor
cmp
test
das
ja
out
and
dec
dec
sub
sbb
xor
or
sahf
test
sti
mov
call
adc
or
mov
rcl
mov
int3
test
rcr
adc
loope
mov
cmp
xor
out
jge
adc
ret
cmp
pop
lods
out
mov
adc
add
scas
and
pop
aaa
lods
imul
adc
sbb
mov
imul
cli
icebp
pop
mov
outs
fdiv
jno
addr16
loope
push
sbb
mov
cld
out
jne
sar
add
xchg
out
loop
jge
inc
ret
aas
xor
les
mov
pop
and
in
(bad)
xchg
sbb
xor
loope
sub
sbb
mov
inc
out
push
(bad)
scas
retf
nop
push
xchg
mov
push
retf
fnstsw
jmp
mov
sar
retf
sbb
test
or
jno
adc
call
push
ins
int3
test
cmp
sar
or
out
and
pop
sbb
pop
cmps
sbb
aam
add
pop
(bad)
mov
in
sbb
mov
cmp
les
fs
(bad)
ficom
lods
adc
xor
xchg
cmp
not
add
jecxz
pop
fild
lods
adc
pop
mov
daa
cmps
and
add
jae
and
(bad)
cmp
fsub
mov
inc
in
shl
inc
sbb
js
cwde
ins
enter
cdq
fdivr
sub
sahf
ror
ds
dec
mov
pushf
mov
xlat
movntq
out
mov
(bad)
push
jne
mov
pop
int
jle
jle
inc
inc
or
enter
add
and
hlt
outs
retf
pop
or
lea
stos
dec
stos
dec
leave
xor
ror
lock
(bad)
jle
lods
adc
jmp
fs
dec
popf
icebp
pop
or
hlt
push
out
cli
jne
add
jbe
inc
or
test
xchg
mov
clc
jne
add
dec
and
add
add
rol
mov
jle
xchg
movs
sbb
add
add
in
and
inc
pop
add
loopne
dec
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
in
retf
xchg
hlt
stc
mov
in
mov
mov
call
out
hlt
jecxz
in
std
idiv
mov
(bad)
in
push
in
js
and
add
add
lods
mov
push
jb
and
sahf
repz
(bad)
div
jnp
push
mov
jge
stc
je
xor
clc
repz
fild
(bad)
lahf
outs
shl
mov
aad
(bad)
xlat
sub
js
jno
adc
jmp
sar
in
fucomi
and
div
retf
aas
cli
idiv
out
aas
jg
pop
aas
adc
xor
lods
ja
mov
cli
add
neg
mov
and
and
xlat
stos
mov
out
xchg
xlat
jbe
xchg
cmp
sub
inc
inc
int
mov
movs
aam
lock
jmp
cmc
out
jmp
jle
cmc
(bad)
not
in
xlat
mov
in
mov
or
popf
icebp
and
es
loop
(bad)
sahf
loope
pop
rcl
dec
or
mov
stos
or
inc
mov
es
fisttp
xchg
daa
xchg
in
movs
out
dec
test
scas
xor
(bad)
in
xchg
jb
ret
mov
dec
push
cdq
xchg
cmp
xor
jmp
fwait
dec
stos
xchg
push
add
add
not
sbb
sbb
mov
les
sub
mov
xchg
push
dec
mov
jb
push
pop
stos
cli
out
adc
mov
xchg
pop
mov
icebp
or
aad
aaa
aam
jle
std
imul
mov
std
shr
mov
(bad)
(bad)
imul
popfw
loope
ins
pop
aas
aas
add
push
add
cmp
mov
adc
cmp
or
cmp
cmp
hlt
ins
xor
or
int
enter
idiv
mov
sub
ja
ins
sbb
xor
iret
xor
pop
jnp
cs
or
adc
lods
dec
add
jg
in
xchg
jg
in
aam
test
add
add
inc
jle
mov
mov
inc
cmc
sbb
jmp
inc
dec
std
out
nop
mov
jmp
mov
cld
jecxz
jge
outs
aas
setl
js
jno
sub
push
sbb
fisub
cld
cli
(bad)
jmp
dec
add
add
jne
std
sbb
lock
clc
jne
jmp
not
and
xchg
push
mov
xchg
js
mov
jg
pop
dec
jb
xchg
push
repz
ins
repz
fidiv
xchg
out
rol
in
cwde
pop
add
jbe
mov
jecxz
jmp
sub
mov
leave
mov
xor
mov
jmp
(bad)
xlat
scas
fwait
sub
call
loopne
add
cli
not
sbb
ins
cld
cmc
pop
iret
jae
test
add
loopne
fs
jnp
jg
cld
frstor
mov
in
stc
loopne
pop
fwait
dec
fimul
cmp
cpuid
pushf
mov
je
mov
cmc
dec
test
cmp
jecxz
inc
(bad)
cmp
and
mov
jg
ins
rol
mov
rcr
cmps
lea
cmc
push
jecxz
xchg
ins
fimul
sub
cs
popf
jmp
es
loopne
mov
jno
test
inc
clc
xchg
mov
xchg
leave
mov
cli
sub
fnstenv
push
cmp
push
(bad)
scas
aam
loop
test
mov
sub
mov
imul
add
hlt
les
jns
sbb
lods
rol
add
loopne
pop
iret
sbb
jae
xchg
sahf
jl
std
cmp
sub
gs
inc
mov
mov
jne
ja
xor
jl
fs
call
mov
sbb
(bad)
dec
jg
cmps
mov
(bad)
stc
(bad)
sahf
neg
dec
retf
mov
dec
mov
fcmovb
mov
test
and
icebp
jge
xor
xchg
push
fnstenv
jno
retf
mov
fldenv
lds
and
cmp
mov
lahf
or
outs
mov
sub
mov
scas
dec
(bad)
mov
inc
mov
ins
jp
sub
xlat
mov
jno
in
mov
xlat
(bad)
mov
or
push
and
repz
dec
fidivr
movs
retf
test
addr16
or
rcr
push
mov
movs
setae
dec
mov
movs
shl
mov
stos
lahf
jle
pop
fistp
sti
retf
add
cmp
ficomp
das
sar
mov
jg
pop
outs
aad
xchg
pop
repnz
popf
xor
adc
in
das
popa
scas
jno
xchg
stos
cld
fimul
mov
cmc
fmulp
(bad)
sub
push
push
xor
daa
mov
or
scas
es
lahf
adc
(bad)
repnz
jnp
jg
jge
ins
dec
cmp
(bad)
sbb
ret
dec
pop
mov
mov
hlt
movs
fld
stos
mov
cld
xchg
sahf
dec
add
xchg
sbb
pop
cli
mov
pop
jg
xchg
push
cmp
xchg
and
pop
pop
out
dec
inc
xchg
mov
push
mov
push
movs
daa
adc
ja
(bad)
sar
sub
jp
ficomp
cmp
mov
jbe
scas
push
mov
sub
jb
jmp
lods
out
das
loope
jecxz
and
mov
repnz
scas
ds
fadd
dec
mov
mov
test
rcr
and
stos
mov
add
jnp
xor
and
es
imul
(bad)
stos
jmp
push
inc
inc
dec
jge
jo
pop
push
and
xchg
js
nop
push
add
add
test
jno
adc
mov
cdq
cmp
fdivp
pop
xor
jmp
pop
cmps
cmc
sti
daa
mov
jl
cmp
fcomip
xchg
test
pop
mov
js
push
ret
(bad)
scas
dec
pop
or
jmp
aaa
cmc
ins
lahf
inc
sbb
sahf
stos
jbe
shr
push
jecxz
inc
mov
pop
xchg
jmp
ss
out
in
pop
push
loop
xor
jmp
cmp
xchg
movs
push
out
jbe
mov
mov
jae
cli
out
jno
repnz
fistp
adc
cwde
push
sub
fstp
xor
aaa
and
or
movs
xchg
lods
pushf
dec
sbb
inc
xchg
dec
mov
inc
dec
ins
or
jae
sahf
pop
add
retf
js
adc
add
cmp
call
adc
cdq
and
sti
push
jg
dec
es
or
ror
mov
movs
rcl
mov
daa
inc
in
aas
in
fist
ds
xchg
mov
pop
bound
stc
mov
js
cmp
mov
out
mov
retf
movs
(bad)
repnz
gs
addr16
stos
jle
adc
sub
ss
adc
mov
in
test
(bad)
mov
stc
mul
mov
pop
sub
adc
mov
fisub
dec
cs
push
xchg
das
dec
dec
push
dec
test
add
loopne
adc
mov
add
fild
in
xchg
cmp
jg
std
inc
pop
jb
jne
sbb
pop
icebp
mov
cmp
mov
stc
mov
pop
mov
aad
mov
fincstp
fwait
adc
mov
out
push
mov
loop
sub
xor
xchg
imul
fild
cld
push
cdq
mov
jecxz
and
repnz
(bad)
cli
mov
pop
mov
mov
pop
and
mov
xlat
ja
addr16
clc
push
xchg
ins
fidiv
lods
lock
push
xchg
cmp
jae
imul
mov
pop
imul
cmp
adc
das
xchg
push
xor
(bad)
jmp
pop
adc
dec
es
xchg
push
add
add
jo
xchg
movs
push
psubd
inc
loopne
add
test
push
sbb
inc
xchg
sub
popa
xchg
sub
test
adc
fs
mov
mov
mov
or
imul
mov
jmp
adc
xor
in
retf
xchg
out
cmps
int3
fistp
rcr
call
mov
frstor
or
or
stc
sub
xlat
lahf
(bad)
es
push
in
in
imul
mov
sti
mov
mov
repnz
(bad)
enter
out
cmps
sub
mov
int
lea
arpl
cwde
mov
cmp
rcl
repnz
cld
es
je
sbb
push
(bad)
fcmovbe
and
cmovno
(bad)
pushf
add
add
imul
mov
int
ins
daa
icebp
ins
scas
mov
jnp
fs
lea
push
dec
cmps
xchg
pop
jg
movs
mov
(bad)
(bad)
sub
into
push
ss
sub
inc
daa
aam
nop
adc
repz
rcl
adc
sti
sti
in
mov
jmp
hlt
test
push
sbb
shl
jg
mov
inc
in
out
jle
and
mov
adc
add
add
add
sub
scas
xchg
push
imul
jle
jb
cld
ins
test
adc
mov
inc
add
mov
loop
fisttp
inc
mov
jae
sbb
pop
ret
mov
lahf
inc
cmp
mov
sub
sbb
aam
push
pop
pop
xor
arpl
jns
mov
cld
or
dec
movs
mov
loop
pop
cwde
adc
out
xchg
in
repz
mov
clc
sub
add
inc
lods
call
scas
test
inc
mov
in
push
jo
outs
and
les
inc
mov
sti
sahf
jl
pop
pushf
or
xchg
movs
leave
repnz
setb
lahf
and
rol
push
and
xlat
mov
out
push
dec
stos
loop
scas
jl
mov
pop
(bad)
lahf
pop
movs
in
xchg
dec
jmp
(bad)
fisub
push
add
add
mov
hlt
lods
sub
xlat
(bad)
sahf
icebp
fwait
and
jo
dec
cmp
pop
mov
jp
and
leave
mov
cli
adc
xchg
scas
xchg
xor
lods
or
in
xor
loop
xor
call
add
add
add
in
loope
sbb
mov
and
and
adc
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
xor
fidivr
add
mov
fcmovnu
outs
(bad)
std
mov
fistp
(bad)
imul
mov
sub
push
add
fcom
out
jle
std
stc
xchg
mov
jge
mov
cwde
dec
sti
neg
outs
mov
or
jle
(bad)
and
(bad)
idiv
pop
inc
jnp
add
dec
mov
out
fild
aad
add
xchg
jg
dec
movs
(bad)
(bad)
repz
std
cmc
daa
repz
(bad)
jle
pop
stc
stc
cmp
cmp
je
mov
mov
das
pop
sub
in
jle
std
cli
retf
or
inc
popf
(bad)
mov
shl
dec
(bad)
jp
jbe
pop
fst
mov
in
ret
cmps
test
aam
add
loopne
fstp
add
lods
and
mov
jg
sahf
dec
adc
cmp
hlt
lods
lods
push
cli
xchg
(bad)
nop
add
mov
pop
test
push
inc
jmp
in
clc
fldcw
(bad)
(bad)
leave
sbb
xchg
push
inc
in
add
fsub
add
jle
pop
ds
adc
imul
ss
jmp
test
xchg
sbb
das
data16
outs
pop
cmps
test
arpl
lods
sbb
mov
ins
lock
adc
ror
xchg
sbb
or
inc
dec
jns
out
or
into
mov
cli
inc
imul
push
shl
jbe
fstp
in
(bad)
and
dec
ins
fdivr
xor
arpl
loop
lahf
xchg
ins
jg
aad
jmp
aad
loope
push
inc
cli
mov
adc
test
es
iret
sub
fistp
pop
jmp
jecxz
dec
inc
int
shl
imul
sbb
mov
mov
and
pop
xor
pop
dec
stos
out
adc
jp
call
pusha
ret
mov
xlat
into
ds
lds
ror
icebp
or
f2xm1
pushf
jmp
dec
add
mov
cld
xor
lds
rcl
xor
mov
add
(bad)
aaa
ror
sbb
mov
inc
aas
push
pop
xchg
xchg
sbb
push
pop
mov
push
xlat
into
lock
add
ror
retf
daa
movs
scas
push
dec
xor
mov
mov
je
div
outs
sar
mov
cmps
retf
cmp
lea
xchg
loopne
(bad)
cmp
int3
cwde
push
sbb
mov
fbld
fstp
fst
cmp
xor
cmp
push
(bad)
cmp
mov
(bad)
mov
aas
xchg
loop
in
pusha
mov
pop
fnstsw
jae
shr
out
and
mov
xlat
or
aam
scas
push
inc
lahf
and
xor
mov
mov
leave
add
test
mov
mov
lea
das
imul
or
jge
or
inc
sbb
mov
rcr
outs
sbb
cmp
test
outs
(bad)
fdivr
fistp
cmp
jle
push
inc
adc
mov
push
mov
scas
je
push
xor
mov
test
(bad)
cli
fiadd
(bad)
jno
jp
ficomp
cli
icebp
enter
sbb
scas
push
push
les
pop
mov
pop
fcomi
out
test
jle
xor
loop
inc
xchg
jae
and
fcmovu
lea
push
pop
push
addr16
scas
dec
mov
cs
xchg
xchg
pushf
xchg
mov
das
test
stos
dec
xor
(bad)
enter
xchg
mul
jbe
(bad)
fnsave
in
push
jecxz
mov
sub
mov
dec
sbb
repnz
fcomp
repnz
out
mov
scas
dec
imul
lea
mov
xor
out
jl
mov
mov
jmp
jp
or
cli
adc
(bad)
and
push
dec
bound
cmc
sahf
movs
xlat
js
das
pop
aas
es
jmp
xchg
outs
sub
mov
jle
gs
ss
outs
inc
out
jns
fs
jge
sti
imul
int
out
mov
mov
lods
or
sub
mov
mov
ss
dec
cmps
jne
push
(bad)
js
pop
sbb
in
cdq
adc
mov
jle
sbb
mov
mov
jns
push
mov
aaa
sub
inc
fild
mov
rcr
push
ja
and
inc
pop
push
mov
(bad)
mov
mov
ins
ins
imul
pop
lods
in
jmp
sbb
mov
scas
stc
popa
cmps
aam
mov
push
sub
out
(bad)
mov
mov
mov
shr
dec
fwait
jae
ins
loop
shl
ret
call
int
mov
arpl
xlat
xchg
and
push
lods
stos
and
jae
arpl
repz
in
bound
sub
retf
outs
pop
cmp
sbb
loope
cmp
push
push
mov
ret
jl
xchg
dec
dec
xchg
fnstsw
fisubr
idiv
inc
nop
stos
out
fcom
jg
sti
(bad)
mov
add
lock
pop
push
xchg
iret
pop
sti
retf
inc
xchg
loopne
repz
retf
(bad)
mov
inc
pop
out
and
shr
or
pop
xchg
fild
imul
cli
dec
scas
dec
mov
xor
test
mov
dec
outs
push
cwde
pop
xchg
mov
cmps
test
ins
push
add
xchg
in
adc
mov
mov
adc
jno
scas
mov
xor
idiv
jge
(bad)
data16
popf
repnz
jg
push
xchg
in
mov
mov
sbb
fnstenv
js
push
(bad)
int3
fcomp
jmp
in
xor
xor
push
fs
je
aaa
mov
loop
out
(bad)
mov
mov
(bad)
rcr
mov
push
mov
cmp
push
push
sbb
in
or
jae
cmp
xor
xchg
jne
test
cmc
cmp
xchg
loop
repnz
js
lahf
pop
mov
mov
mov
lods
(bad)
and
fldcw
movs
xchg
retf
out
fs
test
into
daa
xor
xor
lock
into
shl
pop
jns
aaa
and
mov
out
je
iret
push
enter
jne
and
push
fild
shl
dec
mov
xchg
clc
cwde
or
mov
mov
jb
imul
jne
es
pop
pop
addr16
stos
das
inc
(bad)
out
(bad)
retf
scas
ret
outs
fnstenv
xlat
cmps
out
cmp
dec
mov
mov
iret
cld
sbb
sar
daa
div
les
call
ds
loopne
loop
out
sahf
jb
(bad)
retf
adc
shl
sti
inc
sbb
jecxz
mov
mov
test
sbb
jmp
movs
enter
mov
lods
(bad)
mov
es
xchg
std
xchg
cmp
sti
jbe
mov
mov
outs
mov
std
xchg
outs
sbb
out
and
xchg
mov
and
test
and
sbb
xchg
imul
mov
and
ja
fistp
or
sub
outs
push
mov
sub
enter
ins
and
pop
into
jo
gs
arpl
pop
adc
mov
push
test
out
sti
add
ss
fld
mov
imul
mov
xchg
(bad)
pop
cmps
or
jae
mov
mov
arpl
out
cmps
loopne
imul
jns
xlat
jge
ins
cld
fisttp
dec
xchg
xor
dec
call
arpl
sub
cmps
adc
ja
inc
test
push
bnd
test
lods
ret
or
or
imul
rcl
neg
scas
push
xchg
and
retf
scas
outs
mov
pop
out
cmc
mov
pop
enter
leave
daa
repz
pop
daa
mov
gs
lods
xchg
in
and
xchg
loop
mov
mov
add
inc
inc
outs
pop
pop
mov
lock
repnz
pop
mov
cmps
sbb
rol
test
pop
cdq
out
xchg
jb
jmp
mov
cdq
bound
out
mov
(bad)
xlat
xchg
lahf
push
(bad)
lahf
dec
mov
in
adc
add
push
inc
jge
icebp
fld
mov
(bad)
adc
fwait
(bad)
dec
popa
rep
sub
mov
mov
jb
iret
iret
dec
mov
jle
out
mov
jge
enter
dec
jbe
data16
arpl
xor
mov
xchg
cmp
jmp
lea
sbb
lahf
leave
jnp
jbe
cmp
in
or
jb
jp
(bad)
jmp
sbb
jecxz
retf
gs
aad
fstp
mov
adc
das
push
mov
jmp
repnz
push
fcmovne
js
cli
arpl
mov
jge
into
dec
(bad)
out
push
pop
mov
push
dec
mov
out
jmp
sysret
jns
jbe
push
xchg
or
dec
xor
addr16
(bad)
sahf
inc
fisttp
xchg
and
(bad)
shl
stos
mov
pop
xchg
mov
mov
push
bound
(bad)
cmp
sahf
mov
mov
mov
dec
cmc
retf
and
test
sbb
mov
mov
dec
js
cdq
(bad)
lods
enter
outs
mov
xchg
sbb
mov
mov
repz
fs
lds
aas
sub
mov
(bad)
xchg
mov
cmps
lea
xchg
dec
push
daa
mov
neg
test
cmp
outs
imul
movs
(bad)
mov
xchg
sbb
mov
xlat
add
jae
outs
fwait
lea
lds
popf
jp
(bad)
sbb
lods
arpl
aas
rcl
pop
xor
push
ins
enter
dec
(bad)
cdq
adc
push
lods
pop
xchg
pop
xor
adc
cmp
dec
(bad)
mov
inc
arpl
xchg
mov
jns
ins
mov
mov
jge
pop
int
sar
jle
inc
fimul
pop
pop
mov
mov
mov
int
sti
push
mov
mov
cld
nop
jmp
sub
cmp
pop
fsub
cmp
in
xchg
jae
fstp
aas
mov
cmp
push
mov
mov
push
mov
and
or
dec
add
ins
iret
dec
(bad)
in
pop
das
inc
jb
jl
cmps
js
js
mov
dec
js
es
xor
into
or
daa
xchg
nop
push
cdq
cli
push
retf
sub
mov
sti
int3
jmp
cs
mov
pop
mov
inc
mov
inc
in
retf
or
sbb
scas
pop
stos
cld
cdq
inc
jo
xchg
cmp
and
in
popf
outs
retf
pop
sti
sti
inc
sbb
sahf
pop
pop
loop
push
jmp
test
(bad)
jle
pop
xlat
ja
int
push
mov
retf
sub
jb
jge
jns
fimul
in
sbb
sbb
jecxz
rcr
pop
(bad)
jne
das
out
test
jne
mov
retf
adc
mov
sbb
retf
fsubr
xlat
jno
or
xor
cmps
aas
aaa
cmps
or
mov
outs
out
es
aam
loopne
outs
jmp
jmp
mov
xchg
ins
xchg
push
xchg
les
jle
inc
fimul
dec
clc
mov
push
aad
mov
jo
sahf
hlt
mov
jmp
cs
mov
mov
adc
jbe
stc
jns
mov
jle
jge
(bad)
push
aad
pop
out
mov
div
es
loope
cmp
fist
cmp
xor
cmp
test
(bad)
and
mov
and
pop
sub
cmps
and
int
leave
fcom
inc
mov
xchg
in
aad
(bad)
neg
neg
and
adc
adc
outs
bound
jmp
fisub
leave
mov
fcomp
dec
mov
movs
mov
mov
xor
test
sub
test
push
mov
dec
aam
aam
push
shl
sbb
mov
(bad)
aam
btc
lods
push
mov
(bad)
jp
jno
mov
(bad)
fisub
jg
pushf
inc
mov
mov
imul
cmp
xchg
in
cli
fcmovbe
lahf
sub
jmp
pop
repz
xor
lods
dec
sub
movs
ss
daa
push
pop
jmp
dec
xchg
dec
adc
nop
jmp
mov
sbb
es
in
jmp
inc
in
jae
enter
into
pop
mov
js
jns
jge
repz
mov
fsubr
sbb
xlat
cwde
fsubr
fst
cwde
mov
outs
and
ins
rcl
iret
sahf
push
sbb
sub
in
test
pop
xchg
imul
data16
out
sub
outs
add
mov
push
std
inc
mov
out
cmp
out
jg
xchg
mov
mov
int3
into
jb
cwde
fsubr
cmc
xor
(bad)
jno
pop
pop
mov
xchg
xchg
js
mov
jp
fwait
leave
loop
mov
pop
cmp
les
out
sbb
cmp
push
jmp
fwait
push
push
push
popf
cmc
xor
int
xchg
ins
mov
lahf
xor
jno
mov
arpl
xor
cmps
pop
jg
mov
lahf
xchg
test
lods
ins
xchg
sbb
out
sti
call
bound
and
xor
cmc
fstp
sti
(bad)
lods
iret
xor
rol
xor
fcom
(bad)
mov
xor
sub
jns
and
xor
xchg
data16
jecxz
cmp
(bad)
cmps
cwde
fst
(bad)
iret
mov
rcl
dec
sbb
outs
aas
fdivr
mov
lahf
jnp
and
xlat
outs
leave
pop
xchg
cmp
sub
mov
adc
and
test
cmp
sti
out
xchg
lods
imul
sahf
jge
xchg
jmp
sub
aaa
push
push
push
std
repnz
jne
iret
cmp
scas
in
(bad)
cld
mov
stc
xchg
lahf
dec
leave
cdq
xchg
xor
xor
or
xor
in
jbe
push
(bad)
pop
not
mov
mov
adc
pop
repnz
inc
cld
fisub
sbb
mov
loop
pop
xchg
mov
pop
and
push
ss
mov
adc
nop
cld
je
cmc
mov
ret
repnz
popa
std
xchg
out
add
pop
je
(bad)
ss
loopne
jge
(bad)
sti
sbb
fisttp
and
mov
pop
imul
arpl
movs
cli
int
xlat
jge
loopne
xchg
adc
mov
mov
sahf
push
lods
scas
out
stc
(bad)
loopne
scas
out
rcr
mov
cld
(bad)
push
outs
cli
sti
arpl
movs
into
je
mov
scas
fdiv
or
(bad)
dec
and
stos
fidivr
xlat
mov
mov
mov
pop
addr16
out
sbb
pop
cli
test
mov
inc
sti
sbb
xor
outs
cmc
sub
add
pop
cld
outs
in
call
push
sti
mov
sbb
add
sbb
fcmovnb
mov
jnp
icebp
jns
dec
daa
cmp
xchg
push
std
and
loope
not
adc
aas
inc
and
inc
scas
fst
idiv
jne
ja
dec
cdq
push
shr
addr16
dec
mov
sbb
push
dec
xchg
in
pop
push
and
jns
ins
dec
pusha
fnsave
in
sub
daa
mov
out
in
cwde
xor
les
cmp
dec
cmps
popf
cmps
jge
and
into
dec
outs
mov
jecxz
fadd
mov
xchg
lock
jg
div
cli
neg
pop
jns
mov
push
gs
pusha
cli
xchg
cmp
inc
rol
jno
sbb
(bad)
fldz
shr
mov
cdq
test
adc
xchg
jmp
mov
mov
dec
repz
repz
jmp
xchg
cmc
ffree
pop
cmps
add
mov
dec
mov
xchg
mov
aad
and
inc
fs
cmps
push
xchg
les
test
call
into
imul
pop
in
cmp
dec
jmp
pop
nop
(bad)
(bad)
daa
pop
icebp
xor
aad
jge
imul
and
div
ss
mov
movs
outs
adc
xor
add
mov
popf
jp
inc
xchg
test
aad
cmp
mov
xchg
cmp
adc
mov
xchg
mov
sbb
lods
xlat
neg
test
popf
sbb
clc
mov
cli
stc
lahf
(bad)
cmp
jmp
or
fst
xchg
ret
mov
dec
in
push
jg
sbb
out
(bad)
int
out
inc
lods
outs
(bad)
mov
inc
cwde
retf
mov
sbb
idiv
xchg
(bad)
pop
aam
repz
pop
call
push
pop
mul
daa
ins
cmp
adc
xchg
daa
aam
test
pop
repz
push
jae
repz
scas
mov
add
push
add
add
add
cmp
add
add
sbb
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
lock
mul
inc
inc
jnp
add
add
movs
nop
push
add
pusha
cmp
out
(bad)
cmp
icebp
div
popf
(bad)
add
add
xchg
shl
aam
pop
lock
fisttp
ds
sbb
mov
pop
pop
sbb
mov
mov
add
dec
out
push
jg
fwait
push
sbb
sub
jl
pop
jg
xor
jno
jnp
inc
push
int
(bad)
mov
add
std
nop
in
loop
ins
ds
dec
fisub
cmp
inc
and
inc
pushf
pop
out
mov
cmp
and
or
add
cmp
dec
test
jnp
std
mov
sti
push
daa
out
(bad)
idiv
pop
inc
jnp
mov
lahf
outs
pop
mov
iret
cmps
pop
(bad)
(bad)
mov
jecxz
ret
sbb
mov
sahf
ss
xor
je
ss
in
cdq
retf
jmp
iret
lds
adc
cld
mov
cdq
mov
pop
out
ret
test
repz
lods
jns
cmp
iret
mov
add
cmps
dec
test
sub
mov
es
mov
cmps
fsubp
jnp
int
cld
out
mov
(bad)
xor
xor
shl
aam
mov
jae
push
sub
cdq
movd
jbe
nop
hlt
lahf
sahf
mov
pop
and
out
adc
inc
cmc
inc
mov
nop
pushf
xchg
in
retf
sub
test
mov
or
cmp
xor
aaa
aam
and
xchg
inc
loop
jb
add
ins
fcom
out
call
repz
lods
push
ss
fnsave
jmp
xchg
fsub
mov
outs
(bad)
jbe
js
cli
fstp
fisttp
std
mov
test
dec
fst
add
(bad)
mov
call
cvtdq2ps
(bad)
cdq
cli
pusha
js
xchg
mov
jne
dec
js
jecxz
retf
jbe
or
dec
test
das
sti
mov
jmp
pop
stos
std
ja
jg
mov
mov
gs
out
(bad)
cli
fdiv
cli
xor
push
pop
jle
(bad)
shl
xchg
sub
mov
sahf
jp
(bad)
and
call
aas
dec
lods
fwait
sbb
jne
bts
scas
and
inc
and
cmps
out
mov
pop
movs
ins
lds
pop
xlat
ss
mov
pop
mov
cmp
ds
adc
in
out
mov
pop
and
bound
test
clc
pop
xchg
dec
cmp
xchg
xchg
retf
mov
mov
mov
jl
repnz
in
lahf
fwait
daa
pop
mov
add
ret
or
popf
dec
jb
push
mov
xchg
push
cmp
pop
fimul
adc
xchg
scas
arpl
bnd
repz
xor
or
jmp
dec
mov
int
xchg
aad
clc
inc
hlt
jmp
cli
movs
(bad)
std
ficomp
and
leave
mov
fnsave
ds
adc
jle
mov
lods
mov
inc
cmp
arpl
in
div
out
js
cmp
dec
and
cmp
sub
imul
push
out
jns
xor
sub
ins
pushf
repz
jns
int3
and
pop
out
test
ds
in
xor
loope
sbb
dec
ds
data16
out
xchg
inc
stos
dec
jecxz
fst
pusha
xor
push
repz
icebp
cli
icebp
(bad)
icebp
mov
xor
jl
jb
cmps
push
scas
arpl
jne
lahf
ret
add
(bad)
ret
popa
lock
mov
outs
mov
inc
aas
cmp
push
jmp
pop
or
or
stos
loop
in
fdiv
imul
push
or
dec
in
push
(bad)
jmp
fstp
sbb
imul
adc
mov
xor
mov
xor
out
(bad)
scas
mov
mov
xchg
push
cmp
neg
ja
mov
fist
jnp
inc
sbb
pop
sti
retf
cmp
fiadd
mov
popf
mov
mov
call
cdq
jecxz
xor
jl
dec
ss
push
pop
sbb
cmp
(bad)
hlt
add
rcr
sub
sahf
push
adc
(bad)
jmp
lods
mov
out
es
xchg
mov
mov
cmp
xor
cwde
jo
lods
icebp
xchg
cs
addr16
outs
mov
push
fidivr
jnp
sbb
pusha
inc
fdivr
stos
int3
adc
fnstsw
mov
sub
dec
ret
cmp
arpl
ror
push
mov
pop
popf
je
lahf
loope
pop
push
jno
fisub
inc
adc
cmp
fcmovnb
ror
pop
div
call
xlat
out
(bad)
out
jno
xchg
xchg
std
(bad)
xchg
pop
or
mov
addr16
mov
not
lds
jmp
pusha
mov
mov
jne
outs
retf
ss
mov
jo
jmp
mov
mov
retf
xlat
test
add
lods
pop
sub
sti
jmp
inc
xchg
mov
push
pop
sahf
inc
fwait
scas
test
add
cmps
or
jno
fs
xlat
push
scas
dec
mov
stos
sti
cmps
arpl
xor
jle
lds
cmp
outs
mov
pushf
sub
inc
or
cdq
pop
retf
cmp
icebp
xchg
daa
adc
cmp
ins
gs
div
and
in
ret
fidivr
scas
dec
dec
fnstcw
or
xlat
cmp
xor
sub
cmps
xchg
sbb
in
in
sbb
test
(bad)
ds
jmp
lods
jecxz
mov
mov
test
std
fidiv
mov
iret
outs
dec
xchg
and
cli
pop
lods
(bad)
div
mov
xlat
adc
sbb
mov
cmp
dec
jge
div
icebp
mov
inc
sti
push
div
cli
pop
and
push
iret
xchg
addr16
out
xor
inc
fisub
or
push
mov
sbb
cmps
add
cmp
cli
aaa
xchg
(bad)
mov
scas
aad
mov
cdq
fmul
ficomp
mov
ss
push
inc
popa
out
pop
inc
cmp
movs
pop
jg
jo
mov
scas
dec
cmp
inc
jb
xchg
push
lds
out
js
aad
idiv
in
push
and
jge
jbe
jnp
fs
fmulp
cli
(bad)
aam
mov
mov
nop
outs
pop
(bad)
jb
bound
xor
retf
sbb
jge
ds
(bad)
(bad)
shl
in
and
bound
xchg
cmp
div
mov
dec
pop
pop
cli
and
iret
xor
lods
jmp
mov
xchg
jb
jne
pop
xchg
(bad)
not
(bad)
clc
jp
push
xchg
cmp
jbe
lods
in
ja
mov
icebp
sbb
(bad)
leave
adc
pop
arpl
xchg
fsubr
ins
fucomi
sub
push
fnstsw
repz
lods
scas
minps
aam
xor
jecxz
popf
in
mov
pop
aam
xchg
xor
js
pop
and
sub
push
jb
mov
cmp
jb
cmp
ja
mov
in
gs
mov
jle
iret
rol
push
icebp
mov
inc
dec
jbe
stos
loopne
sub
jno
mov
mov
xchg
neg
es
pop
enter
es
out
pop
(bad)
pusha
xor
and
add
outs
repz
fcmove
mov
sti
mov
sub
dec
mov
and
inc
cmp
fwait
lea
arpl
fisub
pop
pop
xor
pop
jecxz
push
push
xchg
jb
gs
test
retf
test
cmp
mov
data16
aas
jb
pop
mov
in
clc
nop
fadd
(bad)
mov
cs
cwde
out
xchg
cmp
xchg
jnp
jmp
sbb
jle
(bad)
js
ret
cmp
ss
aam
pop
(bad)
xor
push
xlat
hlt
inc
mov
repnz
mov
not
movs
hlt
jl
mov
mov
mov
push
push
mov
mov
dec
lods
iret
lods
xchg
das
pop
push
les
(bad)
mov
ins
ins
mov
out
xchg
inc
pop
pcmpgtb
dec
xor
stos
sub
sub
jns
fcom
jae
movs
jecxz
stc
jp
lds
mov
mov
jno
test
and
scas
mov
test
jae
pop
push
leave
jns
data16
ins
repz
fimul
int
fldcw
inc
sbb
in
pop
enter
lods
test
pop
xor
sbb
inc
jbe
pushf
mov
ins
inc
mov
daa
inc
std
cmp
push
pop
xchg
sub
std
jne
mov
inc
arpl
jmp
gs
jmp
rol
shl
fld
pop
pop
jp
aas
in
push
pop
shr
cld
les
(bad)
js
sti
jno
js
push
in
arpl
mov
(bad)
sub
adc
out
ret
jg
xlat
lds
arpl
mov
mov
sti
les
xor
push
mov
cdq
lahf
jecxz
pusha
jnp
mov
and
mov
enter
pop
test
mov
mov
dec
(bad)
jae
or
bnd
mov
imul
inc
pop
ret
jne
mov
sub
ror
ds
fs
push
xor
idiv
mov
fsubr
cdq
ss
xchg
fstp
aaa
mov
xchg
xor
cdq
cmc
and
add
neg
mov
cld
xor
sub
iret
jo
aas
push
sti
call
xchg
ins
mov
inc
gs
arpl
pop
mov
jne
das
mov
cs
jb
fcomp
int
jg
scas
int3
and
cli
push
mov
sub
inc
cmp
(bad)
mov
jae
or
icebp
and
push
push
addr16
cmp
repnz
out
xor
mov
repz
jb
xor
and
and
daa
movs
stc
pop
(bad)
jae
out
push
fnsave
or
stos
lock
ins
sub
scas
lods
mov
adc
push
fsubr
lahf
fmul
and
adc
mov
mov
mov
fwait
movs
es
ret
mov
cdq
sbb
xor
cli
ret
adc
jle
dec
cmc
dec
hlt
fisub
call
inc
out
and
mov
pop
mov
rol
jns
adc
ss
mov
hlt
gs
(bad)
gs
fidiv
cmp
cmp
aad
sar
ret
mov
sbb
sub
sti
and
mov
jb
mov
push
in
cmp
mov
mov
(bad)
std
xchg
push
(bad)
cmp
in
push
aad
sar
jnp
rep
push
out
lods
push
mov
and
and
push
sti
in
jmp
pushf
sti
test
les
mov
pop
movs
cld
jnp
mov
fwait
int
xlat
ficom
inc
(bad)
cmp
stc
aam
sub
dec
mov
clc
mov
mov
or
dec
(bad)
xchg
mov
(bad)
outs
inc
or
(bad)
dec
pop
jecxz
jae
jge
test
jmp
cli
fistp
fisub
jb
out
pop
mov
jno
mov
scas
leave
mov
push
push
les
mov
int
(bad)
sahf
sub
ds
imul
jne
cs
push
xor
std
mov
inc
dec
sub
and
ror
mov
and
imul
inc
dec
dec
dec
pop
sub
xor
test
call
push
push
xlat
push
stos
pushf
int3
in
test
pop
sahf
stos
neg
sub
xchg
popa
repnz
cmc
int
fbstp
fs
cmp
sti
aaa
xor
sub
mov
cmp
fcmove
cmp
sub
neg
mov
jne
sub
fs
imul
mov
sub
xor
clc
aaa
dec
mov
(bad)
lahf
lahf
cmps
rsqrtps
jne
out
dec
fs
ins
pushf
adc
scas
or
test
mov
cmp
clc
dec
(bad)
mov
fdiv
retf
or
out
sub
pusha
push
test
mov
imul
sub
outs
push
(bad)
jecxz
push
out
ins
sbb
mov
mov
mov
int
dec
int3
pop
out
icebp
pop
mov
mov
dec
in
aam
popf
mov
ins
jmp
push
mov
fsubrp
(bad)
je
mov
leave
fisttp
icebp
test
jne
(bad)
scas
jecxz
dec
sbb
shr
pop
cmp
in
pop
mov
mov
xor
jl
sub
push
mov
test
sahf
mov
scas
shl
lods
sbb
pop
iret
(bad)
pop
or
dec
jecxz
sbb
jp
in
sbb
repz
sub
int3
ret
mov
bound
ins
jl
div
(bad)
jmp
mov
mov
mov
popf
addr16
push
jp
inc
pop
jne
ins
fidivr
fidivr
sar
mov
neg
int3
cmp
das
cmp
cwde
loop
push
mov
dec
fdivr
xor
outs
or
mov
sti
(bad)
in
out
mov
jmp
jp
sti
jecxz
mov
in
(bad)
sbb
(bad)
mov
cmp
addr16
outs
pop
(bad)
ds
fdivr
ins
(bad)
bnd
lods
jecxz
das
movs
retf
mov
inc
aas
je
mov
xchg
push
inc
pushf
call
nop
mov
enter
jno
mov
mov
es
mov
les
out
out
mov
ficom
sti
ret
retf
push
fild
imul
dec
xor
xor
push
sbb
(bad)
out
ds
pop
cmc
stos
mov
out
leave
cmp
fiadd
inc
(bad)
sbb
xchg
stc
or
repz
aaa
sbb
frstor
push
stos
jecxz
loopne
jge
jge
sbb
clc
pop
idiv
(bad)
add
jle
jle
lods
ss
dec
inc
(bad)
cdq
das
outs
lods
mov
stos
inc
in
xchg
cwde
sti
in
das
mov
jmp
mov
push
fild
pusha
mov
loopne
mov
sub
cmp
fadd
mov
repz
sub
mov
ins
adc
addr16
cdq
fwait
pop
adc
sahf
jne
xchg
sti
push
in
xor
in
ret
xlat
(bad)
jno
gs
adc
jle
pop
xor
not
retf
mov
sbb
sti
cmc
xor
jl
jnp
jl
mov
outs
shr
retf
(bad)
int
mov
mov
mov
fldenv
jg
cld
aas
into
pop
push
push
rol
out
ret
jno
adc
push
jnp
dec
sbb
mov
daa
jmp
imul
repnz
ins
fst
sbb
push
mov
inc
mov
jbe
ins
sahf
(bad)
ss
fimul
in
lds
pop
lods
cmc
call
cmp
sbb
fld
push
aad
push
cmps
scas
cmps
inc
aas
retf
sbb
sbb
cmp
stos
(bad)
mov
jg
int3
jge
retf
cmp
mov
inc
jge
ret
and
arpl
mov
jecxz
fcom
sbb
popf
mov
jne
lods
jecxz
test
and
out
dec
pop
movs
(bad)
retf
push
pop
scas
pop
pop
gs
sub
(bad)
dec
aam
sub
and
mov
imul
into
inc
mov
mov
and
jns
adc
jno
sub
mov
and
cwde
std
inc
aad
xor
mov
adc
ja
sub
mov
mov
in
mov
jecxz
lds
stos
loope
mov
(bad)
xchg
jae
cmp
ins
aad
sub
movs
scas
loop
(bad)
jp
arpl
loopne
pop
nop
cmp
pusha
repz
div
fdivr
out
icebp
loopne
es
out
or
pusha
mov
out
ror
jge
xchg
fild
push
les
dec
mov
jnp
sbb
and
and
mov
call
dec
cdq
arpl
shl
mov
call
mov
in
and
out
aas
(bad)
cli
mov
push
mov
cmp
mov
rcr
pop
(bad)
stc
jbe
or
push
xchg
mov
dec
aam
cmp
mov
mov
push
inc
icebp
inc
icebp
mov
out
rcl
push
dec
scas
popf
mov
pop
imul
into
outs
stos
lea
pop
mov
loope
mov
shl
pop
mov
aas
fwait
push
push
mov
repz
stos
int
verw
mov
in
sub
enter
pop
es
jp
push
popa
pop
stc
mov
ret
sub
call
and
mov
mov
mov
repz
jne
ds
clc
jb
ret
out
jmp
test
jns
mul
mov
cwde
cmp
or
popf
mov
pop
das
daa
mov
inc
in
and
sub
into
mov
xor
retf
or
inc
cmps
dec
ror
call
int
push
cli
pushf
(bad)
jge
loope
sub
mov
mov
into
mov
inc
mov
fdiv
jnp
mov
dec
leave
xor
pop
cmp
(bad)
cld
out
jge
mov
cmc
sub
aam
lods
ds
imul
adc
sbb
pop
jg
adc
push
jmp
(bad)
ficomp
sar
in
aad
ret
pop
out
(bad)
mov
dec
and
in
sub
fisttp
shr
mov
jle
les
into
mov
pop
inc
or
out
dec
leave
push
pusha
pop
jmp
pop
stos
dec
dec
push
(bad)
sbb
and
in
std
loop
sub
mov
xchg
jno
jb
out
mov
jne
mov
out
popa
mov
call
jl
fld
adc
into
fild
cmp
scas
icebp
call
data16
adc
repz
loope
add
xchg
jne
pop
mov
jp
xor
pop
cmp
jo
and
jmp
jbe
sub
(bad)
(bad)
call
cmp
sbb
or
add
rol
int3
inc
sbb
cs
jg
push
or
cli
push
push
ss
leave
mov
or
add
adc
or
lods
inc
pop
fisttp
pushf
loope
fcomp
and
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
jl
lock
mov
mov
fdivrp
cld
(bad)
in
neg
std
ret
out
add
mov
(bad)
int
jg
je
mov
sti
cli
std
clc
fidiv
inc
inc
or
js
mov
cli
jnp
loop
gs
mov
pop
push
aam
ds
fdivr
test
push
mov
(bad)
mov
out
hlt
div
mov
or
shl
nop
sbb
and
sbb
mov
xlat
stos
mov
sbb
(bad)
xlat
cmp
sbb
out
fisubr
mov
call
stos
adc
pop
adc
mov
lds
or
retf
sub
pop
fxtract
pop
test
ds
aam
jnp
cmps
je
cmp
fldz
jno
inc
or
shl
pop
and
jae
test
retf
xchg
mov
jns
mov
xor
cdq
pop
push
lods
lock
lods
sti
push
mov
scas
sub
aam
add
into
loopne
fwait
std
sub
dec
fs
jecxz
out
gs
scas
mov
aam
jl
clc
dec
test
fbld
lods
mov
push
mov
out
movs
or
push
lods
mov
sbb
mov
xchg
stc
pusha
sti
rcr
cdq
pusha
cmp
mov
std
aas
jg
jecxz
pop
adc
add
pop
adc
leave
retf
es
dec
ins
mov
in
jnp
mov
lea
pop
outs
jns
jmp
(bad)
std
mov
sbb
out
xchg
bound
mov
jge
push
jns
call
cmp
fstp
test
fidivr
cli
pop
inc
addr16
and
sub
cmp
mov
dec
mov
xchg
repz
and
into
or
and
add
shl
xchg
mov
sahf
jp
(bad)
and
call
xchg
inc
mov
nop
xchg
scas
mov
outs
and
out
or
outs
xlat
adc
dec
es
into
mov
xor
fild
push
pop
cmc
pop
xor
sub
push
fdiv
sbb
lock
jg
sub
and
mov
mov
and
loope
pop
lahf
sub
adc
or
jp
jne
sbb
cmps
inc
in
outs
popa
in
sbb
imul
jle
movs
cmp
idiv
push
sar
push
mov
fidiv
cdq
mov
scas
test
pop
jmp
adc
xchg
(bad)
fidivr
fwait
sub
cmps
aas
add
cwde
jae
pop
aam
pop
xor
inc
xlat
push
xchg
ins
call
fisub
pop
pop
and
pushf
xor
adc
add
sbb
in
sbb
fnsave
dec
pop
pop
mov
push
mov
jmp
mov
pop
push
sub
adc
fisubr
test
retf
sbb
jmp
int3
xchg
jmp
les
dec
mov
push
gs
sub
in
cmp
retf
fldcw
(bad)
jmp
jecxz
scas
add
ret
pop
inc
repnz
and
sbb
xchg
neg
stos
aas
in
adc
push
(bad)
xor
aaa
retf
es
std
or
and
mov
sub
es
mov
jge
ins
mov
mov
xchg
push
add
add
pusha
fld
stos
lahf
retf
add
loop
jmp
daa
ss
mov
lahf
lock
shl
sar
cmp
je
cli
icebp
std
jo
jge
sub
(bad)
out
cld
jge
cmp
jno
pop
pop
lods
arpl
mov
ins
fisub
aam
xchg
mov
push
jae
mov
jecxz
repz
or
retf
rcr
mov
sbb
xchg
dec
mov
sbb
fwait
(bad)
xchg
xchg
cmp
daa
pop
inc
mov
and
push
fwait
pop
pop
push
push
rol
mov
mov
jmp
cmp
xchg
xchg
mov
std
ds
icebp
sbb
mov
shl
ds
sbb
mov
sar
stc
(bad)
sahf
neg
dec
dec
ins
mov
dec
sub
pop
into
les
lea
jae
rcr
ret
fcmovnbe
aaa
std
jmp
mov
int
rcr
inc
hlt
aad
aas
dec
cmc
xchg
fwait
out
mov
shl
aaa
pop
shl
mov
jecxz
cli
mov
addr16
icebp
mov
(bad)
jne
hlt
(bad)
jge
xor
xor
pop
out
sti
mov
int3
jne
iret
out
retf
push
stos
jecxz
push
mov
movs
jnp
jne
pop
and
xor
or
pop
shl
xchg
jnp
(bad)
cwde
neg
mov
push
(bad)
popf
fdivr
push
mov
sub
int3
daa
pop
cmp
nop
xor
sbb
stc
xor
fild
xchg
xchg
in
push
mov
fcmovne
pop
jmp
out
push
add
add
push
fiadd
leave
ret
jp
add
lods
rol
mov
int
jmp
leave
data16
dec
jge
test
outs
inc
push
jne
sbb
jno
mov
es
mov
scas
aad
mov
cdq
cmp
in
data16
int3
pop
jbe
dec
mov
sbb
rcl
sahf
fwait
jnp
call
push
jge
fs
mov
pop
aad
fs
mov
in
pop
adc
(bad)
(bad)
xlat
xchg
lahf
cdq
retf
imul
outs
mov
ret
mov
test
hlt
jae
outs
jge
dec
iret
dec
imul
mov
(bad)
mov
aaa
sbb
push
gs
inc
xchg
inc
adc
popf
retf
std
mov
or
mov
or
mov
add
shl
push
aaa
mov
jmp
jb
gs
not
es
pop
jg
xchg
cli
in
jl
aam
mov
js
test
shr
fisub
fidivr
cmps
(bad)
(bad)
jle
in
retf
call
repz
pusha
ds
lods
jecxz
jo
mov
fidiv
arpl
mov
mov
sbb
mov
jge
push
fsub
cmp
fcmovb
sbb
gs
imul
ja
idiv
out
mov
jns
cmps
cmp
mov
(bad)
xchg
mov
ss
mov
dec
dec
imul
movs
call
and
xchg
sbb
(bad)
jns
push
adc
pop
mov
push
jmp
jbe
mov
xor
fcmovnu
inc
and
add
shl
cmp
mov
pop
outs
cli
inc
sahf
test
lods
ja
popa
jo
das
cmc
loopne
pusha
cmp
jmp
fmul
fidivr
push
inc
div
or
dec
repnz
fs
ja
popf
mov
and
mov
das
fist
inc
dec
(bad)
xlat
fiadd
jmp
jge
mov
call
sbb
imul
adc
in
fwait
shr
retf
push
in
mul
jmp
dec
pop
xchg
mov
cmp
and
mov
ins
sbb
les
jb
ffree
std
cmp
out
pop
mov
dec
sbb
icebp
and
iret
shl
cs
pop
lea
out
xchg
ficomp
leave
pop
retf
int3
dec
movs
mov
hlt
pop
mov
xchg
test
jne
jp
push
cdq
mov
call
and
imul
and
add
rcl
jb
mov
imul
xchg
jnp
push
fcom
mov
mov
es
jge
mov
pop
pop
fsubp
es
cmp
movs
int3
push
mov
xchg
cli
out
bound
shl
mov
pop
jge
gs
and
fs
push
out
push
mov
fs
fdivr
push
xchg
fnstcw
scas
mov
rep
mov
cmp
sbb
lods
cmps
mov
mov
xor
cmp
iret
(bad)
mov
js
aad
mov
jno
lods
or
mov
hlt
xchg
xor
aaa
dec
test
xor
call
mov
cmps
fstp
jo
push
adc
mov
push
sub
push
ins
mov
cmovp
aam
sti
into
(bad)
ja
add
sbb
inc
mov
cmps
das
cli
neg
jo
mov
in
push
ins
outs
fidiv
push
in
pop
push
aad
out
mov
(bad)
cmp
sub
ins
adc
push
ficom
xlat
test
lea
fs
cmp
(bad)
out
and
fidiv
int3
mov
(bad)
ja
imul
xchg
push
pop
movs
bound
pop
xchg
in
or
int
(bad)
mov
sbb
int3
dec
xchg
out
jg
mov
push
jnp
mov
retf
enter
xor
dec
test
add
or
out
mov
push
dec
push
fwait
(bad)
jne
jmp
icebp
adc
outs
mov
dec
pusha
xor
(bad)
xor
pop
mov
inc
xor
mov
jne
scas
sbb
sbb
setle
sahf
aam
jno
mov
test
rcl
inc
int3
xchg
jo
not
add
enter
mov
fwait
dec
stc
dec
outs
fwait
add
jge
inc
out
fcomp
outs
bound
cmc
call
cmc
mov
icebp
mov
pop
frstor
outs
pop
fistp
fnstsw
scas
jnp
outs
dec
adc
cmp
jbe
lds
scas
jae
imul
or
(bad)
cmp
mov
xchg
fwait
push
or
mov
add
cmp
cli
jns
pop
pop
out
xor
ds
popf
push
repz
es
std
sbb
lock
inc
mov
retf
and
mov
popa
lock
jne
scas
sbb
push
(bad)
mov
arpl
xchg
xlat
in
test
fiadd
sub
mov
jns
and
test
adc
add
mov
loope
dec
xchg
leave
in
ins
adc
fcomp
dec
fistp
and
call
jmp
(bad)
clc
cli
lds
ds
out
jg
push
test
xor
mov
fcomi
loopne
jne
scas
sbb
xor
rcl
dec
cmp
in
outs
push
pop
or
mov
jle
jne
add
in
int3
inc
int3
out
(bad)
jmp
or
jge
or
fisub
mov
adc
movs
aam
inc
sbb
imul
shl
or
jmp
cmp
sub
sub
lahf
loopne
test
push
(bad)
daa
in
mov
cmp
in
xchg
dec
(bad)
xchg
mov
pushf
aaa
mov
add
and
sub
div
mov
sub
xor
inc
or
jbe
mov
dec
idiv
test
rcr
and
repnz
out
mov
jbe
ins
in
jmp
xchg
call
sbb
dec
fidiv
dec
adc
cs
cmp
and
out
imul
add
add
(bad)
jecxz
pop
push
pushf
add
loopne
push
dec
loopne
mov
jne
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
xor
(bad)
out
outs
mov
cmp
adc
add
add
xchg
outs
(bad)
stc
jg
(bad)
(bad)
out
mov
aad
add
sahf
push
or
call
outs
fcmove
adc
mov
mov
mov
inc
lods
jae
cmp
cld
retf
dec
hlt
add
add
add
je
movs
mov
int
xor
std
pop
in
cmc
ror
(bad)
inc
fidivr
cmps
pop
out
cld
cmc
ffreep
aaa
aam
stc
jmp
jmp
jle
and
ret
jbe
mov
repz
(bad)
out
adc
mov
imul
(bad)
lahf
loop
fidivr
sub
dec
inc
or
rcr
mov
hlt
xlat
xor
int
xor
xor
test
mov
push
cmp
sub
dec
pop
pop
aad
aad
cli
fisttp
pop
jecxz
mov
(bad)
cmp
and
inc
and
add
add
cmp
iret
inc
mov
fmul
test
cdq
ss
outs
movs
lds
(bad)
xchg
or
inc
call
cmp
dec
adc
sahf
imul
dec
inc
or
(bad)
fistp
(bad)
out
fisubr
lahf
cmps
cli
std
stc
not
iret
or
repnz
dec
jnp
imul
add
add
jmp
and
(bad)
mul
sbb
jge
jle
in
xchg
cld
push
retf
push
outs
mov
cmps
fld
mov
iret
jmp
mov
pop
mov
mov
push
out
adc
and
adc
outs
pop
mov
adc
cmc
sti
retf
cmps
fist
ffreep
lahf
jg
ss
ja
mov
int
jge
adc
aad
adc
stc
and
ins
std
dec
pop
int
mov
mul
icebp
out
das
outs
lahf
outs
fucomip
out
out
mov
loop
scas
mov
and
add
jo
xor
fist
jg
sub
fsubr
out
cmp
rcr
sar
dec
jl
lods
das
jmp
out
cmp
scas
test
fbstp
bound
push
in
(bad)
jmp
sti
aad
mov
sbb
mov
adc
out
out
jmp
inc
outs
push
inc
in
fstp
in
(bad)
popa
loope
dec
loop
mov
xor
sahf
ret
lods
rcr
repz
fcmovnbe
ja
imul
call
mov
push
(bad)
cmp
ret
sub
adc
cmp
xchg
movs
call
dec
mov
mov
jle
sbb
fcomi
(bad)
out
push
leave
movs
loope
outs
addr16
xor
and
mov
adc
push
cmc
cli
ss
jmp
ds
jo
pop
mov
dec
cmp
jne
div
dec
jmp
jo
arpl
jmp
jl
jb
mov
test
out
add
gs
ins
js
mov
sbb
mov
cmp
add
adc
mov
xor
out
or
clc
fild
ror
aam
icebp
lea
jbe
sub
add
xor
cmp
aad
push
(bad)
mov
hlt
in
xor
xchg
retf
lods
xlat
push
cdq
push
mov
(bad)
jmp
idiv
fs
pop
mov
xor
sub
mov
dec
(bad)
call
cld
mov
add
outs
iret
mov
ret
(bad)
xor
or
mov
jmp
push
not
sti
test
data16
mov
mov
ins
pusha
in
arpl
(bad)
std
or
dec
in
mov
mov
pop
repz
cmp
push
mov
mov
xchg
cli
push
jecxz
sub
dec
pushf
clc
stc
js
cli
fstp
pop
jmp
cmp
cmp
cld
sbb
std
adc
(bad)
xor
aaa
lods
out
xchg
cmp
jb
sub
mov
imul
out
retf
(bad)
jmp
icebp
jae
xor
and
pop
fdivr
sub
(bad)
mov
out
dec
mov
mov
ss
cmp
xchg
ss
mov
pushf
sub
mov
push
xchg
push
(bad)
xor
dec
or
pop
jecxz
adc
xchg
ds
xchg
fstp
cld
(bad)
leave
mov
imul
test
in
jge
xchg
jne
push
(bad)
mov
pop
out
mov
repz
pop
frstor
lods
cmp
xchg
test
xchg
mov
mov
sub
mov
jecxz
loope
aam
fistp
scas
mov
cmc
pop
jno
jg
xchg
dec
fwait
sahf
adc
jnp
push
sbb
pop
fist
mov
xor
es
ds
clc
cmp
fcom
fsubr
mov
ret
xor
pop
aas
ds
mov
pop
retf
scas
dec
pop
dec
cmp
fs
aad
jecxz
arpl
frstor
jno
scas
mov
push
mov
lock
xor
scas
mov
sahf
shl
xor
aas
jae
shr
pslld
imul
cmps
mov
sar
shl
and
jle
cmps
push
into
push
cmp
cmp
addr16
movs
popf
(bad)
mov
gs
sti
test
sub
stc
lea
and
mov
jl
pop
push
in
xchg
jle
pop
xchg
mov
push
cmps
pop
pop
mov
lahf
mov
push
dec
(bad)
aaa
xlat
stos
aad
or
mov
inc
iret
cmp
push
push
fbstp
daa
clc
pop
sbb
(bad)
lock
jg
or
(bad)
push
repnz
sbb
jg
or
xlat
fcom
cwde
sub
mov
pop
push
aaa
jno
mov
pop
inc
fsubr
xor
mov
into
sub
ins
std
dec
pop
(bad)
in
xor
fidiv
push
sbb
jno
pop
rcr
(bad)
ror
mov
idiv
ds
icebp
loope
cmp
push
xlat
mov
repz
mov
inc
aas
mov
jg
jmp
mov
xlat
daa
arpl
add
sub
retf
(bad)
stc
dec
mov
stc
mov
xchg
(bad)
mov
mov
hlt
mov
iret
retf
mov
mov
xchg
dec
sbb
retf
jmp
xchg
push
into
(bad)
std
xchg
mov
and
bound
xor
sub
mov
jg
int
mov
ins
mov
lods
test
popa
jg
jae
sbb
jle
sar
xchg
push
adc
movs
jb
int
push
sbb
mov
and
enter
gs
movs
bound
aas
retf
jne
mov
ja
repnz
pop
retf
mov
xchg
movs
jne
in
inc
(bad)
cmc
mov
lahf
gs
(bad)
jo
cmp
pop
push
jno
sub
push
sbb
mov
jns
mov
(bad)
fcmovne
imul
in
jmp
hlt
cmc
mov
xor
scas
push
ja
cwde
hlt
mov
sub
cmp
int
push
cmp
or
sbb
mov
mov
scas
mov
cmp
mov
outs
sub
push
cmp
ficom
jle
pusha
scas
sbb
mov
cli
mov
fbstp
or
aas
adc
lds
xchg
mov
jg
sbb
cmp
push
addr16
test
mov
add
(bad)
jp
call
cli
mov
adc
fnstsw
xor
shl
xor
ins
(bad)
sbb
and
xchg
jmp
pop
jge
jno
xchg
ficom
push
(bad)
jbe
fisubr
pop
stc
mov
jecxz
fsub
mov
fwait
pop
inc
aad
inc
outs
test
sbb
aaa
enter
(bad)
dec
sub
cdq
push
test
test
(bad)
ins
in
inc
sti
cmp
out
mov
inc
mov
fsubr
ja
gs
add
inc
ds
fld
dec
cli
push
cmp
enter
push
or
xchg
xlat
adc
fcomp
sbb
in
xchg
lahf
fbld
sub
add
nop
xlat
(bad)
mov
sub
jmp
push
les
setae
clc
inc
inc
cmp
jb
xchg
mov
stc
mov
addr16
aam
push
mov
cmp
jge
pop
pop
pop
test
mov
add
out
mov
fistp
jo
push
div
xchg
dec
inc
fld
mov
sbb
push
std
jnp
or
inc
push
xchg
and
and
sbb
outs
push
out
inc
ds
je
aam
imul
sbb
sub
outs
inc
cld
lds
lods
xlat
inc
xlat
bound
ds
rcl
inc
cmp
scas
mov
push
xchg
mov
xor
std
cmp
push
(bad)
neg
out
dec
and
dec
popf
es
arpl
in
mov
(bad)
iret
pop
fcomi
inc
inc
inc
out
dec
(bad)
mov
sbb
xchg
cmp
outs
arpl
and
adc
retf
imul
jb
or
jmp
aam
jno
sub
adc
jo
and
mov
inc
stc
inc
das
ja
aaa
mov
dec
icebp
xchg
fld1
xchg
retf
cmc
retf
fsubr
mov
xchg
mov
fcmovne
les
xor
xlat
ds
mov
jns
sub
arpl
outs
in
cmps
fsub
ja
jnp
imul
adc
jmp
shl
jno
pop
iret
xchg
mov
stc
mov
cmp
xchg
popf
inc
pop
dec
jecxz
sub
not
xchg
mov
jecxz
jp
adc
inc
lahf
pop
dec
inc
mov
cwde
jo
adc
mov
pop
pop
rcr
jl
clc
xchg
std
pop
ror
xchg
pop
jnp
pop
push
ins
ins
mov
aad
(bad)
fst
fstp
dec
addr16
mov
dec
pushf
ins
shl
cmp
(bad)
(bad)
movs
leave
fsubr
jge
jne
pop
fisub
mov
push
je
xchg
sub
inc
pop
clc
(bad)
in
ja
mov
jmp
inc
cmp
aam
sahf
cmp
cmp
dec
jbe
jmp
mov
push
ins
sub
stos
push
push
push
sti
pop
xchg
dec
shl
xor
es
vcvtuqq2pd
add
ins
mov
dec
push
test
imul
cmp
div
movlhps
jno
lods
cmp
sbb
in
mov
test
pop
inc
jecxz
scas
push
pop
sti
ret
dec
mov
xor
rcr
stc
xor
mov
popf
in
lods
outs
sbb
dec
outs
xchg
pop
pop
mov
xchg
mov
lea
cmp
aad
nop
dec
in
mov
dec
xor
jecxz
imul
dec
repz
daa
ror
xchg
outs
xchg
cmp
test
retf
cdq
mov
lds
(bad)
mov
inc
jns
std
(bad)
xlat
xchg
lahf
cdq
retf
stos
cmp
cmp
cmp
jbe
mov
(bad)
(bad)
sub
mov
(bad)
imul
xchg
mov
xor
jle
xor
cmps
scas
pop
fidiv
cld
sub
mov
dec
jns
xor
mov
leave
cmps
(bad)
in
popf
push
ins
mov
jno
dec
(bad)
cmp
lahf
pop
jecxz
sub
(bad)
pop
mov
scas
jl
mov
iret
pop
test
leave
xchg
fdiv
jmp
cmp
push
iret
popf
push
cmp
push
and
repz
sub
and
or
popf
dec
data16
ror
hlt
add
jb
in
fld
js
lds
xchg
repnz
cmp
inc
xchg
call
sti
daa
bound
jmp
adc
dec
fdiv
int3
in
xor
and
pop
mov
mov
js
dec
les
cs
xchg
scas
repz
leave
jp
or
(bad)
mov
mov
fidivr
pcmpeqw
(bad)
(bad)
ss
sti
aas
(bad)
fwait
lods
repz
jmp
fwait
es
bound
mov
rol
pop
mov
retf
(bad)
xlat
jl
fdivr
xlat
add
repz
dec
xchg
leave
jne
mov
fimul
xchg
std
push
mov
sub
push
scas
sub
dec
not
je
mov
ror
aad
in
jno
push
jmp
idiv
xchg
clc
adc
and
mov
or
pop
scas
stos
es
mov
retf
mov
jg
icebp
xchg
sbb
call
lea
sahf
inc
adc
movs
jg
jnp
mov
popf
dec
jb
sub
push
sti
inc
neg
fbld
jae
iret
adc
push
sti
sub
cmc
(bad)
ds
mov
pop
gs
shl
mov
rcl
sti
xor
or
ins
mov
ds
cmc
dec
mov
sti
mov
test
popa
mov
or
xor
dec
pop
ja
xlat
icebp
addr16
mov
sbb
push
loope
cmps
imul
mov
pop
fcmovu
stos
jg
jno
mov
lock
repz
shr
cmps
push
ffree
xchg
push
repz
push
mov
bound
push
imul
psubsw
xchg
leave
loope
lds
(bad)
jmp
aas
pop
sub
repz
les
lea
pop
mov
xchg
inc
fwait
scas
dec
stos
jg
imul
out
ror
lods
xlat
and
fwait
adc
cdq
mov
pop
mov
and
retf
fadd
xchg
pop
idiv
jae
test
fidiv
(bad)
scas
sub
fcomp
movs
pop
pop
out
mov
cdq
shl
xchg
std
pop
sbb
stc
repnz
cmp
(bad)
imul
das
cmps
out
fdiv
js
movs
jmp
jp
ins
sbb
jns
mov
mov
push
sti
sub
pop
adc
daa
mov
cmp
fcomp
pop
jae
push
xchg
inc
jo
lahf
sbb
iret
lea
cli
out
test
arpl
in
ficom
or
retf
xlat
sti
xor
inc
jmp
ins
fisttp
leave
cwde
int3
int
sbb
(bad)
jmp
cmp
cmp
ja
sbb
xchg
pop
movzx
(bad)
sub
repz
pop
jg
push
fcmove
lock
aam
sbb
cmc
iret
and
int3
or
jnp
(bad)
out
sub
imul
sti
push
xor
into
or
push
repz
sbb
push
push
ss
stc
test
mov
loopne
loop
lods
sub
fimul
int3
shl
inc
mov
in
push
std
mov
pop
out
inc
mov
retf
ss
frstor
out
xor
xchg
(bad)
lds
pop
icebp
std
mov
inc
sti
fcom
pop
push
scas
clc
xchg
adc
repz
aas
mov
std
out
push
jno
nop
mov
mov
mov
pop
cmp
inc
mov
inc
mov
push
xchg
inc
xchg
(bad)
and
cld
test
div
call
out
fstp
out
repz
jecxz
jns
jecxz
mov
cs
pop
lods
stc
loopne
sar
imul
in
jl
sub
dec
arpl
fwait
movs
sar
rcr
idiv
push
int3
sub
cmps
ins
sti
addr16
jno
icebp
repz
aas
cdq
xchg
arpl
mov
ret
xor
gs
cwde
sub
jmp
mov
xchg
ds
mov
dec
xor
ss
ja
fiadd
pop
pop
mov
imul
jmp
lea
jmp
(bad)
cli
fiadd
and
mov
(bad)
mov
fidiv
mov
jge
jmp
outs
fidiv
(bad)
fldenv
div
inc
std
mov
xchg
outs
stos
aas
mov
fld
push
aas
inc
xlat
adc
lods
jb
les
sbb
and
les
sti
cwde
mov
(bad)
call
sbb
sbb
enter
adc
call
mov
dec
(bad)
mov
cmp
sub
push
in
and
sbb
sar
nop
jne
mov
fsubr
fldenv
fincstp
jne
jbe
in
push
jne
ins
int3
rcl
jno
fucom
inc
fsubr
xchg
icebp
mov
lods
cmp
push
into
dec
mov
and
test
hlt
mov
lahf
std
jge
repz
ins
jne
loop
(bad)
neg
je
outs
icebp
lods
mov
lods
sti
addr16
imul
add
test
jmp
movs
call
lds
xor
aas
xchg
jo
jmp
mov
test
xchg
fwait
dec
cmc
and
sub
fwait
jb
jnp
mov
inc
jns
dec
aam
jne
mov
push
sbb
enter
pusha
fsub
push
(bad)
call
pop
mov
mov
lock
push
mov
sbb
dec
cwde
movs
mov
hlt
(bad)
dec
pop
in
mov
and
fdiv
mov
sub
(bad)
fcmovb
les
xchg
adc
and
push
jge
daa
loop
fwait
daa
rcr
hlt
push
arpl
xor
clc
clc
cmc
xchg
mov
aas
dec
rcr
xlat
dec
test
mov
pop
ret
mov
aas
mov
mov
fdivr
stos
cmc
sub
sbb
aad
xchg
mov
mov
out
jno
std
(bad)
fcmovnu
push
neg
jmp
frstor
and
jge
mov
sbb
mov
daa
les
add
and
add
pop
mov
push
mov
mov
shl
pop
inc
jae
ins
dec
aas
loop
dec
(bad)
pop
jg
ds
cdq
pop
call
dec
sbb
xchg
ss
jbe
xor
xor
jbe
dec
outs
dec
sahf
lock
xchg
test
push
xor
(bad)
fstp
ins
jae
and
cs
adc
push
mov
jnp
xor
aas
retf
xchg
and
in
fstp
mov
jne
sbb
cmp
and
jmp
jnp
jle
mov
push
repz
fstp
(bad)
mov
mov
xchg
sbb
sbb
dec
es
in
ret
mov
cs
lods
out
dec
adc
pusha
jg
cld
outs
in
call
mov
add
aaa
loope
and
es
or
clc
ins
xchg
jp
loope
lock
mov
aaa
(bad)
add
les
cmc
mov
add
adc
cmp
sar
push
ret
xchg
and
ficomp
mov
(bad)
arpl
and
sahf
ret
mov
fs
pop
xchg
call
mov
movs
cmp
mov
push
xor
mov
lods
(bad)
sbb
popf
pop
daa
push
add
mov
xchg
adc
lods
push
ins
je
and
adc
gs
push
sub
or
sbb
sti
xchg
pop
pop
sub
sar
xor
cld
aas
je
fdiv
adc
mov
ja
adc
pop
jmp
cld
fild
fidivr
push
fstp
jmp
clc
icebp
and
out
sbb
or
test
xor
jae
aas
mov
add
loopne
nop
push
ret
and
lahf
ret
cmps
rcr
xchg
in
mov
in
retf
mov
rcl
fstp
add
sti
not
push
repz
out
mov
loop
mov
inc
mov
retf
rol
fdiv
out
arpl
aad
popf
jbe
sub
mov
add
bound
lock
push
sbb
aas
loop
adc
iret
outs
dec
(bad)
ror
js
loop
jo
aam
add
pop
add
loopne
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
mov
xlat
mov
add
in
xor
(bad)
pop
pop
in
ret
cmps
fistp
iret
out
fild
mov
add
xchg
div
jmp
jmp
jne
push
ret
cmp
ds
or
lods
xor
out
(bad)
clc
outs
mov
pop
(bad)
das
outs
bound
jg
out
(bad)
std
jmp
inc
pop
retf
stc
int3
mov
mov
jp
ret
mov
out
push
fld
fistp
jmp
je
xchg
xor
push
jge
jno
inc
or
std
fnstcw
xor
call
pop
push
in
add
inc
into
lods
push
fmul
leave
sti
test
loop
(bad)
loop
iret
pushf
cli
out
push
sub
mov
sub
loope
mov
stc
xchg
cld
add
jae
push
pop
imul
mov
ja
dec
mov
and
sub
sar
dec
mov
in
enter
xchg
scas
xor
test
movs
push
sbb
sub
loopne
adc
arpl
das
xor
sub
sub
dec
aad
sbb
jle
sbb
in
jge
mov
add
and
(bad)
movs
not
das
jg
sbb
aad
iret
mov
lahf
xor
sbb
pop
out
mov
ja
cmc
xchg
std
mov
xchg
sbb
dec
cmc
xor
out
sub
xchg
ins
sub
stc
dec
loope
idiv
fimul
cmp
xlat
mov
daa
dec
test
cmp
enter
push
or
(bad)
fwait
sbb
les
xor
dec
test
cld
fs
leave
jmp
popf
lods
or
mov
mov
mov
push
das
pop
leave
aad
lahf
mov
pop
pushf
cld
jnp
jnp
push
cmp
adc
gs
inc
gs
int3
xchg
(bad)
mov
mov
outs
arpl
cli
cli
stos
imul
shl
mul
pop
mov
test
retf
xchg
lods
cmc
push
out
jmp
sti
arpl
sti
xor
stc
jns
and
cmp
fsubr
(bad)
mov
sub
aad
es
push
fwait
push
int3
popa
loopne
shl
pushf
call
fistp
(bad)
jnp
push
cld
fldcw
not
pushf
add
dec
or
popf
sub
data16
sbb
scas
popf
cmp
sbb
inc
in
das
sar
mov
(bad)
cmp
xchg
fisub
push
rcl
push
mov
(bad)
pushf
clc
fild
mov
cmc
sub
mov
inc
pop
ret
jmp
pop
fidiv
jge
sti
xchg
jns
xor
out
lea
repz
mov
jb
(bad)
lds
mov
pushf
adc
fs
sahf
xor
pop
cmp
iret
adc
retf
mov
xchg
cld
in
mov
fwait
adc
rcl
cmp
in
inc
sbb
(bad)
inc
fcomi
aad
push
jle
data16
jno
pushf
adc
xchg
push
mov
add
xchg
nop
jp
push
pop
cli
add
dec
push
iret
test
cli
out
repz
pop
mov
mov
jnp
cmp
and
mov
push
mov
out
int
jmp
jp
cdq
scas
mov
aas
and
inc
sbb
(bad)
xor
jns
outs
test
leave
mov
push
in
out
sbb
cmp
mov
cwde
pop
xor
int
jge
jmp
fwait
mov
repnz
pushf
xchg
mov
pop
fild
test
lahf
aam
(bad)
mul
and
cmp
idiv
sub
aas
pop
push
jne
sbb
xchg
mov
pusha
sti
sti
popa
out
ret
dec
and
mov
js
cs
test
fidiv
arpl
push
iret
call
dec
mov
mov
(bad)
mov
xchg
mov
lods
(bad)
out
pop
ins
popa
in
cmp
jge
jmp
and
pop
leave
addr16
sahf
mov
jecxz
jecxz
jecxz
fwait
lods
lods
ja
mov
gs
lods
movs
repz
sbb
hlt
jle
mov
fcmovnbe
xchg
push
jnp
mov
cmp
iret
inc
outs
js
adc
add
stos
pop
mov
dec
push
add
jo
jg
fcomp
shr
adc
loop
shl
iret
sub
sub
aas
and
fldenv
xchg
mov
cmp
retf
cmp
sbb
pop
into
gs
inc
push
ins
mov
push
(bad)
jno
(bad)
fmul
sub
xchg
sar
sbb
call
call
sbb
arpl
outs
xlat
(bad)
sar
xchg
call
mov
imul
lds
jecxz
shl
sbb
(bad)
cdq
sub
pop
retf
out
lock
arpl
jp
js
xor
stos
iret
xor
aad
les
mov
sahf
ins
imul
ss
fild
pop
pop
sbb
jne
pop
cmp
dec
dec
out
dec
(bad)
int
or
cmp
dec
test
or
push
jno
retf
daa
sub
popf
and
xlat
mov
sbb
sbb
xor
push
fisub
cmp
std
mov
cmp
cmps
in
imul
stos
xor
gs
sub
cmc
mov
inc
cmps
out
aad
mov
shl
adc
fwait
jmp
aaa
adc
out
jge
mov
xchg
cmp
(bad)
mov
mov
mov
xchg
leave
jbe
jecxz
fcomi
arpl
cs
out
stc
jns
mov
jae
imul
fnsave
sahf
xchg
ficomp
sahf
pushf
xor
sub
xor
das
add
cwde
xchg
jge
sahf
out
jne
cmc
mov
dec
pop
(bad)
mov
loop
das
scas
xchg
imul
mov
jnp
inc
and
fcomp
ins
mov
test
jno
pop
sbb
cmp
sar
mov
cmp
out
cmp
mov
(bad)
dec
(bad)
pop
mov
mov
int3
mov
lahf
sbb
stos
cli
ja
fisttp
pop
adc
out
or
mov
sub
inc
(bad)
idiv
int
adc
and
jg
pop
les
cli
pop
fimul
mov
mov
leave
test
adc
xchg
xchg
jecxz
inc
jg
data16
xchg
cmp
int
jo
pop
dec
lods
xor
jb
jg
idiv
test
in
cmp
or
pop
and
pop
jb
sbb
ins
cdq
js
mov
jl
mov
cmp
test
dec
xchg
lds
sub
arpl
sub
or
popa
mov
jecxz
(bad)
mov
pushf
retf
xchg
aas
pop
xlat
mov
mov
dec
je
pop
jmp
scas
test
in
pop
cmps
das
inc
cmp
lods
sub
fstp
dec
xor
cmp
mov
mov
xchg
in
and
fs
mov
(bad)
(bad)
ja
and
fild
outs
xlat
xor
mov
mov
bound
das
(bad)
retf
loop
neg
int
and
lods
retf
pop
sub
mov
mov
js
add
mov
test
in
pop
xchg
imul
fsubr
(bad)
push
push
mov
xchg
sub
cmc
outs
out
mov
push
mov
pop
fidivr
lods
mov
pop
jnp
retf
mov
mov
popf
imul
mov
jmp
bound
jmp
fwait
scas
aad
mov
cdq
xor
vpmaxub
sub
out
jmp
mov
mov
xor
mov
mov
cwde
push
mov
push
(bad)
cmp
jno
sub
xor
sub
clc
mov
pop
(bad)
pop
out
and
xor
push
mov
test
ror
iret
sbb
dec
cs
xor
xchg
idiv
enter
retf
cmps
test
outs
test
movs
jle
sub
pop
mov
repnz
test
mov
or
push
hlt
lds
push
test
lea
cmps
sti
scas
rol
sbb
inc
pop
or
sub
shl
jbe
xlat
push
mov
das
xchg
dec
jno
out
out
ins
and
dec
iret
sub
mov
in
xor
cld
sub
xor
push
gs
(bad)
dec
mov
xlat
cwde
out
(bad)
in
xchg
ins
ss
pop
xchg
sahf
pop
mov
arpl
fmul
xchg
in
mov
js
lods
jmp
ds
aas
xchg
not
mov
das
in
cmp
gs
mov
arpl
xor
add
fcomp
aas
iret
aam
add
je
or
out
dec
repnz
mov
(bad)
dec
adc
out
ins
mov
loop
and
push
pop
fadd
repz
jge
pop
push
lahf
cdq
ins
out
pushf
inc
pop
ins
cmp
jmp
push
pop
fldcw
stos
mov
iret
push
not
xchg
test
mov
fistp
jmp
dec
mov
mov
bound
jmp
sub
out
push
div
and
scas
dec
xlat
aaa
lods
fnstcw
pop
fmul
cmp
mov
imul
sub
(bad)
call
jbe
retf
(bad)
into
pop
xchg
mov
ins
and
test
cs
les
sbb
mov
and
xchg
sub
pop
sbb
cmp
mov
gs
add
jmp
rcl
or
test
je
mov
jecxz
ror
xchg
imul
(bad)
push
dec
jge
cmp
xchg
jp
test
mov
xchg
xor
adc
sbb
jb
hlt
xchg
sbb
sar
dec
(bad)
mov
xchg
out
test
mov
cmps
mov
mov
jne
mov
int3
and
jnp
fs
mov
inc
fwait
and
(bad)
mov
dec
in
push
stos
test
std
in
xlat
fld
sbb
ins
cli
pop
pop
mov
popa
push
lock
daa
gs
sti
clc
arpl
fistp
xlat
push
inc
int3
push
ins
mov
(bad)
jg
ins
jae
cli
out
cld
xor
jbe
jne
pushf
stos
arpl
int3
xor
out
mov
lahf
sub
stos
arpl
stos
jecxz
xchg
xor
sti
jmp
lds
setns
xor
scas
repnz
jge
jge
ins
sti
in
jnp
push
mov
and
arpl
stos
int
lds
push
pop
ja
loopne
scas
imul
sbb
sysret
popa
jp
out
pop
fisub
xor
(bad)
in
ins
add
stc
jae
adc
ret
iret
cmp
es
in
mov
or
sar
push
aam
pop
test
sub
ds
jns
or
and
outs
jo
xchg
cmps
pop
(bad)
cld
repz
stos
(bad)
mov
and
ins
fidiv
aad
xor
pop
inc
ins
mov
jg
ja
(bad)
pop
mov
mov
cwde
enter
sbb
cmc
or
mov
lods
jge
daa
jmp
shr
cmp
pop
jmp
(bad)
inc
sti
jno
test
das
lods
jmp
repnz
bound
cwde
pop
(bad)
dec
adc
arpl
fcom
mov
sub
mov
and
pop
sbb
mov
jle
int3
xor
pop
iret
jle
mov
popf
inc
sbb
mov
jmp
sub
inc
mov
out
mov
cwde
mov
fld
jmp
push
xor
xlat
cmp
xor
lods
mov
xchg
in
mov
adc
int
pop
(bad)
repnz
mov
inc
sub
add
jecxz
mov
sar
pop
mov
push
xchg
iret
das
dec
sbb
pop
xchg
call
sti
cmp
(bad)
mov
cmp
in
clc
pop
jmp
jbe
(bad)
jne
out
mov
clc
aam
in
enter
cmp
repnz
sar
call
arpl
pop
mov
and
sti
aad
push
push
cmps
bound
push
aas
pop
scas
leave
lahf
inc
jge
cmp
mov
sub
outs
mov
mov
jne
sub
aad
add
jne
cmc
or
loope
outs
cwde
sub
icebp
sbb
and
jg
in
xchg
cld
jnp
jmp
fs
mov
(bad)
sub
retf
xchg
jg
repz
arpl
movs
inc
or
aaa
sub
jae
xchg
sar
in
pop
dec
(bad)
cmc
in
nop
loop
mov
clc
out
sub
xchg
jae
idiv
rdmsr
ins
push
stos
cmps
mov
dec
ins
mov
scas
xchg
mov
dec
sti
clc
dec
lds
mov
push
ja
mov
pop
scas
ins
paddusw
cs
es
retf
idiv
jno
leave
mov
ds
sub
sub
pxor
push
jl
jmp
adc
dec
mov
cmp
pop
(bad)
jbe
fist
jno
scas
add
(bad)
cld
rcl
xchg
int3
cmp
(bad)
push
sbb
mov
stos
pop
or
xchg
arpl
loop
dec
aad
pop
pop
mov
push
jo
add
leave
loopne
push
fs
call
mov
add
jecxz
aas
stos
dec
xor
lea
xor
jne
ss
mov
popa
loope
leave
jp
xlat
in
mov
push
les
xor
out
cmp
xchg
int
(bad)
mov
dec
ins
pop
popa
xor
cmp
test
rol
retf
and
mov
into
js
cmp
pop
fnstcw
int3
mov
aam
fist
addr16
push
out
sti
call
cmp
loope
(bad)
mov
push
ja
adc
nop
cli
or
jle
jno
pop
sbb
aad
(bad)
xor
jmp
sbb
lods
jb
sub
dec
repnz
jnp
(bad)
outs
add
retf
mov
dec
adc
out
jecxz
retf
out
daa
adc
sub
pushf
jb
and
das
ja
pop
push
dec
test
xor
loope
mov
mov
imul
pop
fisttp
jns
sar
out
xor
outs
call
dec
fs
ins
push
adc
retf
mov
test
mov
(bad)
pop
mov
sbb
leave
cmc
cmps
cmp
aas
data16
push
adc
jg
out
or
fbstp
std
sub
into
mov
fidivr
in
sbb
out
popf
fdivr
pop
and
sbb
rcr
push
inc
pop
pop
push
aaa
jle
push
sti
sbb
imul
imul
ins
ins
cmp
sti
jg
fwait
sub
pop
pop
icebp
in
fist
xor
scas
lock
retf
mov
int3
inc
test
adc
ret
call
ss
iret
cs
or
push
pop
(bad)
clc
mov
out
push
(bad)
(bad)
(bad)
fimul
mov
sub
jecxz
in
pop
dec
lea
pop
fidivr
xor
scas
sbb
(bad)
jp
mov
imul
cmp
loop
sahf
push
jbe
repz
shr
popa
or
mov
push
(bad)
or
push
out
fwait
in
mov
xor
fld
cmp
mov
(bad)
ins
enter
in
mov
aam
test
aaa
jmp
aam
(bad)
ficom
rcr
icebp
es
sahf
sub
pushf
imul
shl
sar
xchg
imul
imul
pusha
ja
sti
lock
jg
div
cli
neg
leave
or
pop
mov
(bad)
mov
cmps
out
sub
push
cwde
push
in
jne
fstp
loop
(bad)
cmp
arpl
sbb
pop
jnp
and
retf
sbb
and
outs
leave
retf
lea
jle
sbb
adc
ja
xchg
ins
mov
loope
mov
in
out
(bad)
add
sbb
leave
cmps
ja
mov
fwait
mov
mov
scas
gs
jg
lea
iret
mov
xchg
push
pop
or
xlat
mov
mov
aas
jecxz
cmps
pushf
jbe
cmp
xchg
mov
std
js
aad
(bad)
(bad)
(bad)
mov
xchg
imul
in
imul
rcl
mov
mov
inc
sbb
xlat
jmp
imul
imul
pushf
test
mov
push
in
xchg
dec
mov
test
in
cwde
and
cmp
ds
(bad)
js
fistp
push
(bad)
in
test
cdq
dec
aas
dec
mov
rep
jge
outs
ret
fiadd
lahf
out
imul
sar
jge
fs
movs
js
adc
or
cld
outs
xor
scas
gs
xor
jae
jno
cmp
xchg
dec
fmul
cmc
jb
cmp
ds
rol
out
enter
es
sbb
mov
sbb
int
jnp
(bad)
pop
in
sti
xchg
repz
or
xchg
jmp
mov
push
mov
mov
jne
and
pop
stc
dec
pop
popf
or
(bad)
stos
(bad)
or
loope
adc
sahf
and
out
push
movs
addr16
mov
add
add
call
aas
xchg
lea
out
dec
jmp
mov
fs
jecxz
clc
mov
add
dec
pop
and
push
mov
fs
mov
lahf
add
add
js
push
dec
test
add
add
add
cmps
inc
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
mov
pop
cmp
imul
mov
fnstsw
add
ret
add
push
dec
add
stc
mov
in
sbb
pop
fucomip
out
add
add
aas
scas
mov
fistp
add
mov
test
adc
daa
xor
out
fisubr
mov
push
in
fbld
cmp
movs
sub
jae
adc
(bad)
iret
fnstsw
push
dec
loopne
cmp
pop
xor
lea
(bad)
int
data16
xchg
xor
xor
test
and
movs
xchg
mov
(bad)
(bad)
fist
(bad)
repz
test
fimul
jnp
push
imul
adc
push
(bad)
scas
out
jb
jns
push
in
loop
enter
mov
push
ret
test
mov
pushw
sbb
shr
mov
cmps
sub
xchg
lods
fistp
mov
mov
les
cwde
idiv
xchg
jbe
mov
out
call
loopne
ds
out
mov
lock
xchg
sbb
jae
mov
xchg
aaa
iret
sahf
das
div
jp
jbe
shl
mov
retf
sti
sbb
imul
(bad)
repnz
iret
cmp
ja
fidiv
mul
adc
in
ss
iret
mov
(bad)
push
ins
cli
adc
mov
es
stos
std
lods
neg
push
ins
loopne
sbb
mov
cmp
xor
jb
dec
int3
adc
sbb
sub
lss
test
push
sbb
pop
or
in
and
fwait
imul
shr
jns
(bad)
ds
int3
adc
repz
sub
fdiv
(bad)
(bad)
(bad)
adc
(bad)
mul
rcl
fcomp
pushf
lea
movs
fwait
mov
inc
mov
arpl
fld
idiv
retf
mov
adc
retf
outs
movs
adc
sub
cmp
sbb
aam
(bad)
stos
cmp
cmp
aaa
sahf
pop
aam
mov
xchg
mov
inc
mov
(bad)
ss
iret
jae
pop
cmp
mov
mov
shl
stos
fidiv
mov
div
(bad)
push
lods
dec
fnstsw
(bad)
out
movs
in
dec
inc
or
sbb
fwait
(bad)
add
push
mov
aam
in
sti
je
div
mov
(bad)
(bad)
fild
pop
pop
lahf
int3
cmps
jmp
int
aad
jo
popa
xchg
mov
int3
sbb
push
jae
in
sbb
out
fsubr
mov
retf
cmp
ficom
repz
dec
(bad)
jle
sub
pop
imul
jns
loop
dec
mov
adc
dec
inc
sahf
inc
scas
cmp
and
aaa
cwde
mov
mov
sbb
int
jle
test
mov
sub
std
(bad)
jle
mov
sbb
pop
adc
mov
and
cmp
xchg
or
jmp
lahf
mov
jg
xor
jmp
lds
jbe
repz
in
push
(bad)
fsub
mov
out
xlat
popf
push
popa
xchg
scas
jmp
repz
lock
cmps
dec
(bad)
xchg
arpl
xchg
or
xchg
(bad)
div
mov
imul
dec
dec
neg
outs
int
into
mov
jae
ds
push
bnd
jmp
in
adc
scas
mov
mov
(bad)
cmp
outs
outs
lahf
cmp
jle
mov
jle
cmp
adc
aad
adc
into
dec
pop
into
(bad)
ror
lea
dec
push
shl
retf
xlat
outs
jp
dec
xor
ss
cmc
lods
pop
mov
lods
mov
fldenv
cmp
aam
jecxz
mov
fcom
scas
dec
fwait
into
inc
xor
push
mov
movs
jmp
scas
addr16
ret
fisttp
cmps
fsub
mov
sbb
fnstcw
and
cmp
cmps
sahf
sub
inc
out
or
div
test
ss
mov
cli
pop
xchg
sub
popa
push
xchg
imul
ins
cmp
(bad)
jne
pop
pop
repz
mov
mov
mov
(bad)
jge
movs
in
dec
inc
or
and
retf
sar
ret
cmp
pusha
pop
sub
xchg
sar
fdiv
xchg
mov
cmps
jb
mov
call
sub
jbe
xor
jno
sbb
(bad)
cmp
popa
push
mov
jns
loop
mov
pushf
adc
fidiv
ins
push
outs
sti
inc
mov
sub
mov
cwde
stos
push
jl
stc
outs
outs
cmp
movs
sti
mov
(bad)
cld
push
mov
leave
jnp
loop
xchg
pop
retf
ss
rcr
shl
pusha
fnsave
sub
arpl
fdivr
int
leave
jnp
ss
fucomi
mov
retf
mov
imul
lahf
xchg
xchg
inc
fild
and
mov
mov
jae
scas
je
rol
push
cli
mov
out
xchg
imul
xor
in
jnp
frndint
mov
jge
movs
in
dec
inc
or
pop
or
add
mov
fstp
push
gs
jp
mov
pop
cmps
cld
xor
pop
call
pop
xor
mov
int
cmp
mov
adc
sahf
mov
outs
dec
sbb
out
outs
shl
lods
and
xor
popf
xchg
imul
mov
sbb
mov
xor
cmps
js
fmul
or
ret
jnp
sbb
dec
mov
es
jp
lahf
popa
imul
jmp
lock
mov
mov
retf
mov
out
lods
mov
jmp
pop
fidiv
xchg
gs
xor
ja
ss
cmp
mov
xlat
inc
sub
loopne
leave
ror
push
repz
pop
dec
inc
xlat
fs
pop
mov
out
jecxz
lahf
xor
pop
pop
scas
lods
pop
(bad)
ja
jnp
imul
sub
sub
bound
out
test
lods
bound
push
or
pop
sub
or
sti
mov
sbb
out
pushw
call
test
addr16
xor
or
sub
sub
cmp
push
scas
dec
(bad)
sbb
push
jbe
aas
out
pop
mov
ins
mov
cmp
gs
jbe
(bad)
mov
xor
cli
(bad)
(bad)
sub
xlat
in
jmp
cmp
movs
jp
sbb
or
mov
(bad)
jmp
xlat
mov
cmps
pop
inc
pop
dec
gs
fidiv
ja
pop
addr16
in
push
dec
stc
mov
sbb
fistp
ja
xor
dec
iret
sbb
imul
pop
dec
mov
aad
aaa
out
xchg
cmp
(bad)
sbb
jle
ficom
jg
ins
cmps
ds
test
jp
ins
iret
push
jge
loopne
jae
jp
(bad)
int3
ins
xor
cmp
xlat
(bad)
mov
push
jge
and
jmp
jecxz
push
inc
mov
cmps
bound
xor
mov
(bad)
stc
outs
scas
(bad)
adc
inc
lods
cmps
arpl
mov
je
cmps
jmp
jb
popf
jmp
aam
sahf
push
sub
pop
pop
mov
std
mov
retf
mov
scas
pop
pop
pop
fisttp
aam
mov
or
fwait
push
jne
stc
es
pop
into
lods
xchg
sub
enter
aad
mov
pop
dec
mov
fld
mov
dec
pushf
push
ins
mov
loope
push
mov
mov
dec
jmp
(bad)
std
mov
mov
pop
fild
mov
push
jmp
inc
cld
fs
gs
iret
mov
stos
add
cmp
cmp
fldcw
or
sbb
sub
and
(bad)
mov
std
jge
jne
push
arpl
mov
out
inc
mov
xchg
clc
(bad)
data16
fs
sti
push
scas
lea
pop
in
in
aad
movs
mov
loop
mov
push
div
pop
out
gs
xchg
mov
cs
mov
cwde
sti
sub
outs
(bad)
test
in
aas
int
jg
gs
scas
mov
shufps
sbb
push
jecxz
ficomp
dec
mov
jle
sar
push
fisubr
pop
cmps
shr
(bad)
sbb
sub
inc
fcmovnb
jno
mov
pop
leave
bound
loopne
fwait
inc
dec
sbb
mov
dec
test
sub
push
jl
cmp
or
es
ret
js
cmps
jle
mov
jg
sub
ja
adc
mov
rcr
xor
pop
mov
push
outs
es
push
mov
xor
xchg
mov
mov
gs
arpl
push
out
rcr
lea
int
inc
ja
aaa
fnstcw
ror
mov
mov
stos
bound
retf
cmp
pop
out
jbe
xor
sti
dec
mov
aaa
jne
leave
sbb
popf
jns
movs
cmp
adc
in
or
xlat
dec
iret
pop
scas
int
retf
(bad)
arpl
sub
mov
out
push
icebp
jge
js
jmp
fmulp
xor
sub
bound
sti
sub
jecxz
fnstsw
xor
(bad)
mov
jecxz
sahf
sti
adc
scas
sbb
cs
cmps
jmp
jge
in
xchg
std
hlt
mov
mov
xchg
push
fidiv
add
sti
cwde
popf
jmp
les
out
in
push
xor
(bad)
jp
mov
repz
gs
ins
lahf
dec
fild
push
dec
fld
jge
clc
mov
xchg
fs
out
push
push
stc
jae
cmps
lods
jmp
or
adc
dec
dec
fidivr
add
inc
push
or
dec
jg
outs
cmp
aaa
pop
cmp
imul
dec
stc
cmp
jl
jns
dec
stos
jl
test
mov
gs
cmp
rol
lahf
mov
in
(bad)
dec
cld
jle
sbb
bound
dec
pusha
and
cmps
mov
int3
xor
cmp
mov
mov
aas
mov
push
out
dec
pop
lods
fiadd
retf
fild
arpl
pop
out
mov
ins
lahf
outs
xlat
js
fwait
mov
sub
cmp
push
ficom
call
sub
dec
iret
cli
xor
(bad)
jmp
pop
repnz
mov
mov
sbb
fnstcw
(bad)
mov
sti
into
xor
adc
iret
mov
cmp
ret
xor
inc
iret
jmp
push
jge
jno
stc
inc
jg
lods
mov
mov
mov
xor
sbb
xchg
xor
mov
retf
add
les
inc
shl
cld
pop
xor
or
jle
mov
loop
retf
sub
jo
push
mov
or
jb
imul
ret
jb
mov
push
ds
pop
pop
imul
push
jne
cmp
mov
mov
mov
mov
push
out
out
pop
aaa
push
inc
cmps
scas
mov
mov
rep
cmp
fdiv
ins
fcmovbe
fcmovb
mov
(bad)
push
movs
mov
push
ret
repnz
or
lods
jno
fnstenv
std
fnsave
ins
enter
jl
out
int3
mov
in
dec
es
mov
push
pop
addr16
outs
gs
add
lahf
popf
mov
xor
leave
test
out
ror
jp
sub
sahf
sbb
lods
into
mov
xchg
div
sub
cmc
cld
push
(bad)
xor
pop
fdivrp
cmp
std
push
bnd
lea
jne
xchg
fisub
adc
add
sbb
cmp
xchg
push
or
fcom
xchg
sub
sbb
cdq
sar
fnstcw
dec
push
cld
inc
xchg
pop
sub
cmp
push
shl
ret
mov
pop
test
push
push
retf
lea
push
xchg
fiadd
iret
xor
test
dec
adc
dec
sub
cmps
out
arpl
or
out
imul
es
pop
dec
imul
test
ja
mov
test
mov
dec
aad
xor
dec
test
enter
ins
mov
out
hlt
jnp
jnp
cmps
fcomp
jp
neg
outs
sbb
pusha
xor
mov
pop
pop
mov
mov
fwait
dec
call
jb
dec
hlt
mov
ins
xchg
lock
in
dec
inc
or
outs
cmp
in
mov
push
push
bound
adc
sar
mov
jb
xchg
inc
jae
mov
push
mov
add
and
sti
fcmovnbe
mov
mov
outs
arpl
lods
push
or
fst
mov
pop
imul
mov
mov
in
pop
cs
xchg
bound
lahf
sbb
das
xor
sub
or
xor
js
arpl
mov
pop
lods
test
dec
fist
in
mov
loope
into
mov
shr
jae
and
mov
(bad)
sub
pop
mov
jno
mov
lds
mov
ret
les
imul
retf
std
cwde
movs
mov
clc
cli
cld
loope
in
retf
fst
in
das
dec
test
cmp
inc
pusha
cwde
xor
cmp
xor
das
xchg
scas
mov
mov
mov
ins
mov
fcomip
ins
inc
xchg
(bad)
scas
dec
gs
lock
loope
jg
mov
outs
into
(bad)
fdiv
jl
sahf
cmp
imul
in
mov
frstor
imul
jae
fcom
jno
aas
(bad)
(bad)
in
je
out
sub
xor
sahf
jae
mov
fcomp
push
mov
pavgw
sar
movs
icebp
gs
test
mov
mov
push
lods
(bad)
jmp
cmp
jl
in
pop
and
retf
fsubrp
mov
outs
sub
jp
imul
cmp
js
jnp
test
pop
inc
(bad)
push
(bad)
into
mov
fistp
sub
sti
fmul
ds
bound
mov
and
cmp
jmp
xor
ds
push
(bad)
fs
adc
les
call
and
mov
call
mov
into
jge
xchg
test
sub
in
push
mov
fdivr
(bad)
mov
hlt
in
inc
das
test
adc
sbb
push
call
cmp
jbe
scas
cmps
jge
cmc
mov
fsubr
in
jg
movq
arpl
scas
xchg
and
dec
and
lock
pop
or
mov
jae
test
jbe
das
call
sbb
cwde
jmp
(bad)
mov
jno
jno
out
ret
adc
jns
cmp
sbb
adc
ja
mov
popa
call
cmp
pop
mov
fsubr
add
jae
movs
cmp
add
mov
add
loopne
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
js
repnz
add
loopne
nop
push
add
mov
mov
push
jle
jge
cmps
mov
mov
mov
add
test
add
pop
out
outs
pop
mov
fistp
or
mov
pop
push
push
xor
lea
add
lock
dec
nop
push
add
shr
fstp
repz
int
ret
mov
shl
inc
shr
stos
out
popf
xchg
push
mov
mov
rcr
sbb
xor
pop
adc
xor
call
mov
dec
or
xchg
call
leave
(bad)
leave
adc
mov
cli
mov
shl
fld
movsx
stos
stc
xor
mov
push
aas
sahf
ret
add
xor
xchg
nop
mov
hlt
movs
gs
(bad)
sbb
dec
xor
mov
mov
mov
push
mov
sub
iret
int3
mov
pop
repz
pop
in
outs
or
or
adc
mov
aaa
scas
repnz
push
xchg
fbld
scas
mov
gs
ss
cmp
mov
(bad)
enter
adc
jae
ins
gs
pop
and
cdq
jnp
cmp
and
aad
pop
(bad)
out
je
(bad)
sbb
dec
mov
std
out
outs
sbb
mov
mov
cmp
(bad)
fdiv
mov
in
push
ret
push
mov
sub
pop
aam
cmp
int
imul
push
fcom
enter
(bad)
xor
gs
fwait
mov
sbb
xor
pop
cld
xchg
(bad)
retf
dec
aam
aaa
cwde
repz
js
sbb
scas
jns
dec
es
jae
sti
icebp
xor
sbb
ret
cmp
add
xor
imul
jecxz
ror
mov
jne
popa
pop
add
mov
mov
cwde
dec
inc
in
sub
aaa
nop
jne
mov
adc
pop
mov
movs
xor
in
mov
jbe
cmc
sub
jmp
test
pop
lock
in
bound
addr16
and
cdq
mov
iret
idiv
dec
mov
push
and
xchg
(bad)
rcr
stc
sbb
mov
int
lods
bound
cmps
mov
xor
pop
mul
jge
sbb
jge
xor
lds
cmp
out
pxor
fld
pop
cmp
inc
lods
inc
int3
cmp
out
dec
test
stc
aam
sub
cwde
in
cmp
(bad)
fcmovbe
pop
test
sub
cld
imul
push
out
das
aaa
push
dec
pop
fwait
retf
(bad)
retf
ret
inc
lods
mov
sub
sar
push
(bad)
xor
push
mov
mov
(bad)
iret
(bad)
clc
out
sub
inc
sbb
outs
mov
or
and
rcl
std
jle
xor
jg
lods
jg
aam
ret
cmc
loope
mov
clc
cmp
jmp
stos
fucomi
dec
test
pop
inc
(bad)
int
jmp
mov
scas
(bad)
cmp
icebp
jg
mov
push
std
test
in
mov
push
daa
aad
cmp
retf
test
jle
xlat
(bad)
jb
inc
dec
es
in
f2xm1
fldcw
mov
push
mov
nop
leave
es
adc
fdivr
dec
push
pop
rcl
mov
ficom
mov
mov
data16
sti
cli
fcom
(bad)
sbb
mov
xlat
dec
sti
int3
(bad)
repnz
xlat
pop
test
inc
cdq
jl
fld
arpl
mov
jae
scas
stos
sti
ja
cld
mov
iret
jae
ja
ficom
out
cmp
loop
mov
jmp
cmp
push
sahf
rcl
sti
sahf
test
mov
inc
das
mov
hlt
add
mov
cs
mov
adc
jae
dec
or
mov
test
dec
mov
and
les
daa
ja
mov
jb
adc
retf
pop
cmp
call
mov
out
mov
xor
outs
xchg
outs
jmp
jne
popf
ins
pop
test
mov
jnp
arpl
jb
jb
sub
xor
out
ror
stos
push
pop
cmp
bound
cs
inc
ss
sub
cmp
mov
pop
dec
mov
mov
xchg
int
mov
ds
(bad)
jmp
(bad)
pop
stos
fdivr
jne
sbb
test
retf
cli
jns
jno
ret
pop
xor
call
pushf
cmp
adc
or
cs
movs
pop
fst
loope
xchg
sbb
mov
xchg
sub
pop
sbb
ret
cmc
int3
jmp
dec
test
push
fwait
ins
inc
xor
add
sub
mov
out
sbb
mov
adc
fnstcw
adc
xor
jp
sbb
cmps
mov
mov
enter
inc
outs
adc
dec
sub
retf
test
dec
scas
mov
inc
pop
(bad)
ins
adc
retf
pop
scas
mov
xor
(bad)
sub
(bad)
fcmovu
xchg
in
xchg
aas
clc
xchg
jmp
int
xchg
jno
sub
jno
outs
test
lahf
pop
push
jnp
in
out
xor
mov
enter
retf
ret
shl
cmc
(bad)
jmp
dec
push
clc
sti
jnp
(bad)
(bad)
fimul
out
xchg
ins
pand
cmp
inc
enter
xchg
(bad)
pop
dec
fidiv
mov
icebp
cmp
cmp
fwait
scas
xchg
ins
cdq
fwait
xchg
ss
or
into
cmp
imul
out
rcr
ds
xchg
jae
outs
scas
mov
fidivr
pop
xchg
rcl
std
mov
mov
fild
nop
push
ret
mov
sbb
cmp
pop
pop
pushf
shl
push
pop
xchg
xor
mov
mov
scas
jl
pop
in
jne
mov
test
xchg
in
xor
sub
lea
sub
ds
jbe
sbb
lds
ins
cmp
mov
dec
aam
fadd
outs
pop
pop
in
jae
ins
and
cmps
aad
ins
mov
es
mov
out
jae
movs
jecxz
mov
inc
mov
rcl
out
xchg
mov
js
iret
add
cmp
xchg
stos
stc
gs
sbb
xor
div
(bad)
dec
cmps
(bad)
sub
push
jl
xor
je
inc
sbb
mov
sub
mov
push
out
pop
sbb
dec
xlat
mov
mov
fdiv
mov
jmp
ins
sub
loopne
(bad)
cli
ins
js
ins
fisttp
out
ins
(bad)
mov
fist
pop
and
lahf
mov
daa
out
es
mov
js
stos
(bad)
div
fsub
jge
das
fcmove
cmp
cmp
loop
mov
or
sbb
adc
mov
call
or
mov
pop
cmp
xchg
in
jmp
rcr
xchg
jle
mov
adc
pop
cdq
adc
push
ret
loope
inc
pop
ja
pop
mov
inc
out
fwait
jle
pop
mov
inc
cmc
adc
or
mov
xchg
dec
mov
outs
xchg
adc
xchg
xchg
(bad)
out
lahf
jns
xlat
aaa
cmp
bound
sub
ret
xor
aaa
push
dec
arpl
mov
xor
shl
sbb
pushf
setns
adc
sbb
pop
pop
mov
pop
ins
and
movs
das
xchg
imul
mov
jp
jne
leave
xchg
xor
(bad)
pop
stc
jne
mov
mov
cmp
stc
sub
sbb
xchg
push
retf
xchg
mov
ins
pop
ss
mov
js
push
pop
mov
aad
mov
dec
imul
fld
jmp
mov
loop
jne
leave
dec
iret
popa
sbb
pop
xlat
es
xlat
jmp
scas
aaa
xchg
and
fisub
fld
daa
pop
out
loope
mov
push
jne
hlt
push
push
std
dec
icebp
jmp
or
xor
gs
jbe
xor
cmp
into
push
mov
mov
and
pushf
xor
pop
(bad)
jbe
cs
ins
pop
int3
gs
push
fld
in
or
pop
shl
cmp
jg
xchg
cmp
jnp
or
(bad)
sbb
ror
add
fstp
adc
and
les
not
xchg
xchg
bound
lahf
jl
test
in
(bad)
test
xor
mov
loop
pop
sub
push
ud1
dec
jne
jecxz
inc
cmp
(bad)
xor
aaa
pop
cmps
push
cmp
mov
mov
call
adc
xchg
test
into
mov
xchg
xor
test
jnp
fcomp
jg
shl
push
dec
jp
aam
sbb
sub
cmp
push
call
fwait
add
out
imul
mov
in
(bad)
cmp
sar
push
sbb
std
sbb
cdq
int
dec
(bad)
push
div
test
mov
pop
imul
pop
xchg
dec
cmp
cli
into
mov
jmp
(bad)
sub
and
cmps
(bad)
dec
lds
inc
or
jno
xor
push
ds
ds
into
sbb
stc
call
jp
fiadd
retf
retf
xchg
jmp
sar
add
xor
mov
pop
jmp
mov
sbb
inc
or
inc
out
jge
les
fistp
push
pusha
jge
sbb
cmc
call
and
lea
jp
jl
pop
gs
dec
or
dec
(bad)
shl
or
pop
push
sbb
jmp
into
mov
arpl
icebp
test
inc
mov
pop
inc
mov
pushw
mov
mov
mov
enter
xchg
rcr
inc
loop
mov
retf
xor
mov
inc
repnz
test
add
lock
shl
rdmsr
pop
pop
(bad)
out
mov
jg
(bad)
in
xor
jl
(bad)
dec
pop
cmps
jb
xchg
movs
arpl
inc
in
rol
dec
rcl
popa
mov
sbb
xchg
cmp
ror
movs
xlat
(bad)
mov
(bad)
push
fbld
repnz
pop
fsubr
ds
test
frstor
fst
repz
push
xchg
sahf
push
cli
fstp
mov
retf
xor
hlt
pop
cmp
movs
ss
lea
dec
jmp
mov
sti
and
lods
mov
loop
imul
pop
cli
jb
fstp
jl
mov
cmp
ds
lea
test
inc
jg
stos
ins
sbb
fst
repnz
fidivr
repnz
iret
or
imul
jno
mov
stos
mov
mov
mov
iret
cdq
mov
xchg
cmp
(bad)
imul
adc
aad
enter
push
jp
jb
pop
nop
loope
pusha
rcr
sub
cli
add
pop
dec
pusha
mov
push
xchg
test
inc
stc
cmp
es
mov
mov
mov
pop
cmp
neg
dec
fnstcw
retf
mov
movs
cs
jl
sti
(bad)
fnstenv
pop
addr16
mov
xor
mov
fnstenv
jno
sbb
fidivr
mov
mul
xchg
movs
adc
mov
loop
lahf
jnp
adc
dec
fldcw
cmp
je
or
pop
(bad)
and
sbb
loop
and
data16
sub
pop
(bad)
in
push
popa
or
pop
addr16
cli
aad
sub
(bad)
mov
(bad)
test
mov
ins
cli
aaa
sub
mov
int3
fnsave
icebp
pop
xor
sub
sbb
imul
cmc
icebp
(bad)
xor
ds
xor
sbb
mov
ss
or
xor
icebp
add
popf
pop
outs
fild
dec
test
dec
cmps
ficomp
inc
or
push
in
nop
fimul
bound
mov
cwde
aaa
xor
(bad)
call
xor
cmc
sub
sbb
cmp
jle
adc
ins
out
mov
pop
loope
lock
test
out
test
popf
hlt
mov
mov
shl
lods
mov
clc
sub
push
push
push
jle
retf
movs
ficom
outs
out
std
dec
fist
jae
push
mov
inc
or
gs
leave
pop
pop
enter
gs
int
(bad)
push
xchg
jnp
fcomp
fcmovnu
aas
in
loop
push
fisttp
or
out
(bad)
rcr
fucom
lods
lds
jg
fild
movs
aas
imul
cs
xor
push
push
xor
xchg
xor
retf
push
jge
xchg
mov
mov
mov
cli
movs
lds
push
dec
into
mov
lea
fistp
pop
stos
loop
aaa
xchg
mov
xchg
cmp
shl
scas
mov
ja
mov
ins
sbb
pop
jp
iret
xchg
(bad)
not
adc
pop
(bad)
shl
add
adc
in
gs
mov
jl
dec
mov
call
sub
push
ror
pop
and
sahf
cmp
out
repz
jmp
mov
inc
mov
jp
mov
aas
xlat
fisubr
mov
or
ficomp
jno
dec
scas
mov
sub
and
out
outs
mov
cmps
sub
xor
and
pop
icebp
ds
in
mov
jne
outs
adc
sahf
mov
push
xor
iret
sahf
sbb
ss
pop
in
jecxz
mov
nop
repz
cmc
popa
(bad)
fldenv
inc
jge
ss
out
aad
mov
jmp
xor
cdq
pop
pop
ret
jns
xor
dec
sti
test
push
dec
fiadd
xor
fmul
fidiv
jne
in
sub
sub
cwde
dec
fs
mov
ja
arpl
cdq
(bad)
leave
fnstsw
loop
lds
push
lods
ins
push
cmps
mov
nop
cmp
dec
jle
outs
push
pop
mov
daa
and
dec
mov
xchg
push
mov
fisub
mov
sti
div
into
pop
idiv
jmp
clc
fcmovnbe
mov
push
iret
ins
fnsetpm(287
test
lds
js
pop
mov
jp
inc
or
fstp
xor
dec
pop
or
test
inc
mov
es
dec
es
xlat
idiv
test
mov
pop
xchg
cli
mov
aaa
dec
cmp
into
push
xchg
movs
iret
ret
fdivr
leave
inc
fbstp
fsubp
and
iret
sbb
clc
fsubr
inc
(bad)
mov
leave
jae
and
addr16
aaa
(bad)
enter
and
xchg
ror
and
and
push
or
mov
xchg
stos
fdivr
retf
cmp
mov
iret
stc
mul
ja
sti
mov
adc
mov
push
cdq
sar
xchg
jnp
scas
fucomi
inc
push
addr16
fs
and
jmp
ss
dec
fidiv
inc
popf
sub
or
stos
jl
sub
div
outs
fcmovnb
rcr
mov
pop
scas
pop
mov
mov
aam
ds
mov
ds
idiv
jne
xor
out
mov
lahf
popf
rcr
pop
imul
arpl
or
(bad)
sub
dec
mov
inc
push
ins
jne
pop
xor
rcr
aam
cmp
dec
cmps
mov
xchg
push
mov
lods
mul
jo
rol
in
mov
fsubr
inc
mov
cmc
cmps
jnp
dec
out
or
es
mov
jle
jne
lods
dec
mov
mov
out
jge
pop
lea
xchg
dec
pushf
test
outs
ds
inc
fbstp
sbb
xor
shl
mov
pop
into
mov
icebp
and
cmc
clc
xor
jnp
movs
xchg
jge
stos
out
jge
sub
mov
cmp
sahf
mov
fcmovbe
out
jnp
jne
push
jecxz
jo
test
cli
pop
jmp
or
neg
clc
inc
idiv
in
imul
xor
pop
enter
xchg
sub
xchg
inc
mov
or
fld
jne
mov
call
sbb
sub
ror
pop
pop
jl
dec
xchg
sbb
push
jecxz
mov
retf
ds
icebp
fisubr
fiadd
test
hlt
ins
xor
lods
ds
fiadd
mov
scas
mul
adc
and
ret
jb
fidivr
push
getsec
or
data16
(bad)
jmp
and
cld
add
add
jnp
pop
push
or
add
rol
add
add
inc
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
add
add
add
add
inc
or
add
jo
mov
add
add
nop
push
add
add
add
add
test
add
add
add
push
and
add
add
add
add
adc
add
add
add
xor
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
cmp
jg
xchg
jg
(bad)
jg
(bad)
jg
(bad)
jg
clc
out
jbe
inc
rcr
xchg
inc
push
jnp
bound
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
add
mov
inc
or
add
or
add
add
add
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
or
js
in
xchg
mov
aaa
lahf
dec
lds
cmp
xchg
add
lahf
jmp
adc
dec
loop
jg
mov
repz
out
inc
or
pop
movs
rcr
arpl
xor
sbb
pop
movs
rcr
arpl
jecxz
scas
pop
(bad)
sbb
jns
stos
xchg
daa
movs
lock
mov
ret
ret
ret
arpl
jno
repz
jae
sbb
pop
add
jg
mov
out
pusha
mov
xor
add
int
sbb
stc
adc
outs
inc
sbb
xchg
jo
aaa
(bad)
sbb
add
fwait
mov
and
fdivr
lea
(bad)
cwde
jno
cmps
nop
mov
sbb
out
mov
xor
outs
pusha
jl
stc
jecxz
clc
jmp
mov
test
inc
mov
mov
adc
add
test
push
leave
int3
cli
neg
stos
stc
mov
nop
(bad)
(bad)
std
mov
jmp
jle
mov
gs
scas
loop
fidiv
xchg
mov
cmps
xor
sbb
shr
sub
rcr
push
sbb
fcmovnu
arpl
aaa
scas
push
jae
shl
pop
jae
xchg
sbb
(bad)
js
bound
mov
psubsb
rcr
mov
cmp
xor
out
mov
sub
pop
dec
rol
sub
mov
in
aam
lods
mov
mov
imul
push
(bad)
xor
add
loop
mov
sbb
mov
jg
fdivp
cmp
cmp
(bad)
push
mov
jo
outs
mov
repz
mov
adc
and
dec
mov
push
inc
sub
ins
jbe
in
mov
mov
fisubr
aam
ficomp
jne
jle
xchg
ror
sbb
js
mov
clc
mov
push
out
icebp
in
dec
pusha
add
push
in
fild
(bad)
std
int
test
inc
shl
add
out
adc
pop
pop
stc
push
add
in
inc
clc
mov
mov
mov
mov
out
js
push
popa
outs
cld
adc
pmuludq
xchg
(bad)
mov
idiv
je
dec
lock
int
mov
in
fdiv
sar
shr
pop
rcr
aas
cld
rcl
mov
sub
and
(bad)
adc
sar
daa
jae
outs
mov
fbstp
(bad)
mov
mov
jp
mov
lea
loop
ret
jl
adc
popf
cmp
outs
inc
pextrw
mov
adc
push
dec
nop
(bad)
mov
in
add
mov
sub
shl
in
mov
or
jp
outs
lods
pop
in
mov
repz
cmp
pop
push
jbe
xor
push
mov
stc
cdq
clc
adc
dec
cli
aaa
mov
imul
ja
(bad)
data16
inc
push
stc
inc
sti
and
aaa
add
jle
jns
int3
sub
and
(bad)
jae
jb
mov
repz
or
add
in
pop
xchg
push
pop
jmp
ret
mov
dec
xor
(bad)
ins
or
nop
clc
jmp
int
mov
mov
clc
push
icebp
cdq
push
mov
stc
xor
inc
xor
xor
stc
fisub
popf
idiv
mov
test
xor
jmp
loop
popf
jne
pop
sub
xchg
add
sti
mov
or
imul
cmp
sar
(bad)
pop
int
push
dec
xchg
mov
fmul
test
sub
and
in
popf
cmp
sahf
int
add
inc
gs
fiadd
mov
mov
cmps
in
in
pusha
xor
cld
sbb
pusha
fucomip
pop
test
mov
push
imul
push
cli
fcmovne
jno
not
inc
lahf
retf
sub
imul
iret
(bad)
push
mov
add
loop
sbb
test
mov
pop
scas
stos
jl
sbb
aad
mov
sar
mov
(bad)
loop
clc
into
mov
out
jns
sub
ss
push
mul
pushf
sub
sahf
shr
aas
enter
lea
and
in
push
xchg
inc
add
mov
cmp
out
mov
shl
daa
mov
xchg
xchg
scas
inc
in
mov
pop
xlat
jbe
mov
adc
fisttp
stos
js
pop
dec
inc
or
sbb
gs
xchg
cmc
jmp
stos
js
cmps
into
test
sub
cmp
movs
jg
dec
mov
outs
aas
or
sub
sub
cli
lea
cmps
addr16
retf
cmp
sti
mov
sub
sbb
xor
cmps
add
cmps
and
and
mov
add
sub
cmp
daa
sbb
ss
xchg
push
fld
pop
inc
mov
scas
add
scas
out
movs
lahf
push
icebp
push
hlt
je
pop
jge
in
and
sti
icebp
popf
jae
aam
fsubr
and
pusha
xchg
(bad)
mov
ja
inc
cmps
jl
cli
call
push
jp
hlt
inc
popf
rol
jmp
movs
adc
pop
lock
inc
add
push
std
jmp
add
push
inc
push
jge
sahf
pop
in
out
stc
(bad)
push
add
and
sar
mov
fild
out
and
enter
int
add
inc
add
and
addr16
pop
enter
cs
sbb
int3
push
cmps
ins
mov
repnz
scas
pop
mov
(bad)
push
adc
(bad)
push
iret
(bad)
call
aam
xlat
add
dec
stc
fwait
mov
jmp
stos
clc
sub
dec
push
and
inc
inc
pop
mov
iret
shr
pop
pop
in
test
sub
mov
adc
fwait
mov
ja
dec
pop
add
xchg
fisttp
into
cli
sbb
scas
test
pop
pushf
add
push
enter
cmp
push
cmp
stc
pop
lods
sub
sbb
jg
fiadd
int3
jg
daa
mov
call
lods
test
ins
das
lods
add
test
fmul
jle
cmp
(bad)
jo
pop
stos
out
and
jnp
into
jg
or
pop
inc
aam
daa
int3
sub
and
sub
xlat
lahf
cdq
sti
aaa
stos
push
int
sbb
mov
or
scas
loop
fdiv
into
sub
mov
jnp
add
pusha
scas
call
mov
jmp
repz
or
inc
cmp
mov
inc
cmp
push
iret
mov
lods
hlt
bnd
in
out
int3
ret
mov
push
adc
push
imul
ins
data16
pop
and
stos
rcr
jl
aas
mov
mov
into
inc
cmp
mov
movs
ror
adc
(bad)
aas
(bad)
xor
pop
push
imul
leave
lds
mov
adc
jmp
push
mov
push
jnp
fs
dec
test
adc
in
(bad)
(bad)
or
hlt
(bad)
int
lock
inc
into
mov
push
ja
in
mov
inc
xor
fisttp
add
loopne
stc
mov
aad
and
add
jmpw
js
call
or
mov
in
addr16
(bad)
pop
dec
lods
(bad)
sbb
mov
out
pop
pop
sub
outs
jle
icebp
mov
jb
or
jmp
call
cmp
sbb
mov
int3
cmp
js
cmp
jnp
out
retf
sbb
pop
fiadd
inc
loopne
xor
inc
jle
mov
mov
into
(bad)
sub
mov
cmp
jecxz
mov
cmp
jmp
xchg
mov
sub
adc
addr16
hlt
sbb
xchg
ins
lods
adc
aad
lock
sbb
ficom
add
addr16
inc
cmps
outs
add
es
sbb
ins
mov
lahf
pushf
out
pop
nop
lods
lds
into
mov
rol
fidivr
mov
fwait
imul
popf
aad
sub
push
ss
jno
push
jle
jae
cld
retf
and
pusha
in
cmp
cli
int
lea
and
pop
cmc
lock
mov
mov
repnz
jg
xor
repz
imul
push
jl
aam
nop
in
popf
test
cli
mov
push
sahf
jnp
sub
adc
mov
imul
not
leave
sub
adc
push
repz
and
dec
mov
jl
xor
outs
(bad)
icebp
xchg
pop
cwde
imul
cmp
not
cli
or
pop
cli
push
cmp
pop
loope
not
sub
test
push
mov
in
lods
fidivr
pminub
int3
pop
push
jmp
loopne
mov
cld
int
sub
cld
xor
arpl
popa
aad
(bad)
je
jo
aaa
(bad)
sbb
add
fwait
mov
and
fdivr
lea
(bad)
cwde
jno
xor
jl
or
jg
mov
out
pusha
mov
xor
add
int
sbb
stc
adc
outs
inc
sbb
xchg
jo
aaa
(bad)
sbb
add
fwait
mov
and
fdivr
lea
(bad)
cwde
jno
xor
jl
or
jg
mov
out
pusha
mov
xor
add
lock
loope
loope
loope
mov
cmp
out
test
sahf
nop
inc
arpl
xor
sbb
jnp
inc
arpl
xor
sbb
jnp
inc
arpl
xor
sbb
jnp
inc
arpl
(bad)
inc
mov
and
push
ins
xor
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sahf
sub
add
mov
inc
or
add
or
add
add
add
add
add
mov
cmps
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
sub
inc
inc
push
js
in
(bad)
xchg
jecxz
xchg
scas
loope
movs
retf
mov
jmp
imul
call
jns
dec
test
dec
sub
aas
or
dec
xchg
ror
mov
mov
push
retf
iret
jg
jae
add
add
add
shr
mov
inc
dec
jg
sbb
push
sub
ret
test
push
sub
test
mov
mov
test
(bad)
aaa
or
lods
mov
add
add
add
ins
add
add
add
lock
enter
xchg
inc
enter
add
scas
dec
xlat
jle
ins
add
add
add
lock
enter
xchg
inc
enter
add
scas
dec
xlat
jle
ins
inc
(bad)
scas
sti
in
mov
xchg
inc
enter
add
scas
dec
xlat
jle
ins
inc
in
(bad)
(bad)
mov
out
pop
aas
in
ins
adc
or
add
add
loopne
jmp
sbb
jae
clc
xchg
pusha
ins
lock
sti
(bad)
rcr
push
call
add
add
pop
fwait
scas
std
dec
pop
mov
push
inc
fistp
call
xor
jp
int
imul
xchg
cmp
cmp
(bad)
sti
jae
push
inc
loopne
dec
and
add
sub
mov
xlat
mov
dec
inc
ss
test
dec
add
push
xchg
xlat
cld
daa
cmps
pop
mov
imul
(bad)
stos
imul
push
cwde
cmps
repz
pop
mov
loop
pop
out
into
movs
adc
and
loop
out
dec
jecxz
jecxz
fidivr
fstp
(bad)
mov
ins
scas
imul
fistp
imul
out
sti
in
imul
adc
and
mov
jne
xor
jge
ret
mov
je
mov
imul
add
add
aas
xchg
fstp
icebp
imul
sbb
mov
cmp
out
mov
mov
shl
pop
xor
std
mov
das
aas
sbb
std
or
(bad)
cmc
mov
rol
cmp
cdq
mov
lea
imul
xchg
jae
idiv
pop
stos
call
add
add
sbb
jmp
ins
out
adc
les
ds
stos
in
jae
retf
dec
std
mov
or
ss
je
lock
mov
pop
pop
mov
cmp
fidivr
mov
jge
int
mov
imul
cld
outs
jmp
iret
addr16
xchg
and
les
(bad)
fucompp
call
sbb
add
scas
gs
pop
test
pop
(bad)
adc
addr16
jne
fwait
neg
(bad)
fstp
dec
xlat
jle
jns
dec
ret
cmps
jmp
mov
div
inc
jns
shl
push
fcmovnbe
js
idiv
mov
mov
shl
loopne
jl
int
mov
in
push
mov
mov
fsub
mov
scas
xchg
inc
mov
jns
inc
mov
xchg
aad
and
cwde
adc
add
add
adc
jmp
sub
jle
(bad)
pop
xchg
sti
mov
pop
cmps
imul
add
mov
inc
jg
cmp
mov
mov
into
add
cmp
pushf
and
inc
fidiv
imul
in
pusha
outs
cmps
scas
daa
pusha
int
xchg
mov
mov
daa
push
or
add
add
sbb
sbb
(bad)
hlt
imul
cmp
mov
push
jbe
fstp
nop
in
out
lahf
scas
fisttp
mul
hlt
xchg
xor
call
(bad)
pop
sbb
jo
mov
ds
cwde
(bad)
scas
cmc
jl
scas
(bad)
push
mov
sbb
in
outs
sbb
sub
popa
mov
inc
sti
aad
xlat
jg
lods
out
and
and
pop
fcmovne
sbb
in
or
sbb
add
cs
add
fdiv
imul
icebp
out
(bad)
or
outs
pop
mov
std
pop
iret
pop
neg
sbb
or
push
sbb
add
loopne
xchg
rol
jmp
mov
inc
mov
fcmovu
mov
ss
sbb
jne
cs
fwait
sahf
into
xchg
(bad)
mov
ret
and
daa
sbb
push
ins
add
sub
lods
jb
xor
inc
mov
bsr
xor
int3
inc
fistp
outs
dec
pop
jne
vmovdqa
sbb
dec
out
cmp
into
xor
xor
pop
repz
(bad)
mov
add
nop
xchg
pop
mov
js
xlat
sbb
es
sbb
ja
and
rcr
das
cwde
cmps
xlat
inc
mov
(bad)
outs
arpl
jl
out
neg
ror
inc
xlat
dec
sbb
fdiv
push
popa
(bad)
jmp
jmp
popf
sub
jp
mov
jp
mov
mov
std
test
add
es
push
pop
test
xlat
retf
and
sub
(bad)
out
and
sub
push
cmp
enter
push
sbb
jge
leave
shl
adc
jmp
cld
xchg
xor
vhsubpd
pusha
add
mov
adc
popa
jmp
movs
mov
jae
and
imul
xchg
outs
jae
aas
cmp
mov
aaa
mov
ja
cmp
jno
in
mov
clc
call
in
(bad)
shr
repz
or
sbb
add
dec
add
lods
rol
mov
repnz
push
cs
arpl
mov
push
mov
das
outs
lods
rcl
jo
sbb
xor
cmc
bound
adc
mov
push
inc
lods
jecxz
(bad)
movs
sar
jne
repnz
add
gs
mov
jbe
jl
lea
cmp
out
mul
pop
sbb
mov
pop
push
mov
add
cmp
mov
test
movs
ins
mov
out
loop
inc
cmc
repz
mul
fidiv
or
dec
fcom
scas
scas
out
test
push
inc
mov
aaa
push
inc
mov
add
fwait
mov
push
or
xchg
xlat
je
pop
fwait
ss
jg
adc
neg
cmp
jle
jmp
std
jmp
pop
repz
test
xchg
push
mov
rcl
loop
inc
call
ja
in
mov
fs
mov
stos
ds
jbe
out
sub
mov
jmp
lods
in
xlat
sbb
cmp
fisttp
xchg
imul
outs
jmp
sbb
aam
mov
and
mov
add
mov
or
or
gs
mov
pop
mov
push
(bad)
pusha
sbb
dec
inc
ss
cdq
in
sub
enter
inc
popa
or
popa
test
jae
in
ja
cmc
je
lea
repnz
dec
iret
mov
cmps
in
hlt
(bad)
cmps
jae
out
cmps
clc
clc
fwait
int
sbb
pop
sar
daa
cwde
adc
sbb
sti
popf
pop
scas
jns
ss
mov
or
add
add
or
mov
enter
icebp
fdivr
int
sbb
xchg
test
dec
inc
jnp
ss
fwait
jp
push
or
lea
fstp
push
cmp
ficomp
xlat
imul
imul
out
int
fbstp
jecxz
mov
repz
pop
xlat
mul
mov
fnstcw
mov
jg
arpl
mov
clc
out
ret
push
cmp
mov
inc
test
imul
sbb
cld
mov
cmp
cld
mov
xor
mov
xor
movs
std
mov
cld
or
std
jae
jo
cmp
int
aad
jl
sbb
std
cli
mov
xchg
loopne
sub
push
or
pop
inc
mov
mov
mov
mov
out
fstp
jge
out
ja
lahf
fs
sbb
out
call
jne
cwde
test
(bad)
cmc
xlat
and
lahf
or
cmp
(bad)
icebp
int3
mov
pop
hlt
mov
imul
pop
xchg
mov
jmp
pop
sti
in
sbb
or
push
mov
popa
jg
loopne
or
cmp
rcl
jb
rol
or
push
popa
xchg
pop
xlat
jp
outs
mov
movs
mov
xchg
jne
cmp
mov
movs
cmp
lods
jle
cmp
dec
dec
lea
sahf
ds
jp
js
jl
(bad)
xlat
cld
fidivr
push
add
sbb
and
fdivr
outs
pop
sbb
add
mov
jae
xchg
test
test
mov
jge
cmp
mov
sub
fidivr
sti
iret
mov
sti
iret
std
xor
std
mov
std
(bad)
clc
pop
out
scas
pop
iret
fmul
int3
add
fcmovne
lds
push
fstp
idiv
and
add
std
adc
lds
ins
cs
add
jmp
mov
sub
xor
aas
fist
xchg
push
jp
push
xlat
jl
jb
mov
mov
sub
sahf
or
int3
stc
aad
push
push
xor
cmps
push
xor
push
cdq
jg
cmp
dec
xor
stos
inc
not
jmp
repz
ret
push
scas
cdq
ds
and
add
mov
dec
stc
cmp
or
fimul
add
out
das
ins
push
ss
jge
(bad)
dec
int
dec
es
mov
mov
cmp
aas
jns
mov
xor
mov
xor
(bad)
movs
ffree
mul
mov
dec
loopne
and
into
dec
data16
arpl
pop
fisttp
sbb
xor
je
ja
enter
fs
pop
xchg
jmp
fimul
out
jo
jbe
jb
sbb
sub
les
stos
addr16
mov
fistp
add
sbb
adc
ret
(bad)
dec
les
push
(bad)
icebp
push
mov
fild
not
cli
adc
not
icebp
push
movs
dec
fstp
push
stos
imul
test
xchg
jo
movs
pop
shl
je
cld
arpl
cli
jl
push
or
add
add
not
ret
shl
inc
ret
mov
xchg
rcl
rep
retf
jmp
cmp
xrelease
in
ja
nop
in
xlat
std
sub
call
mov
ins
ins
push
pop
push
stc
dec
fild
hlt
sbb
pinsrw
or
mov
arpl
repz
sahf
xor
fidivr
xchg
cli
jl
push
or
add
add
std
fisub
xor
enter
stos
sub
fwait
mov
inc
jge
sbb
ret
jle
push
push
push
jge
hlt
add
in
ja
nop
dec
pop
clc
add
jmp
xor
mov
imul
jge
cmp
xchg
lahf
mov
cli
hlt
xor
mov
imul
jae
fsub
jnp
inc
enter
add
scas
fcom
mov
mov
xor
div
cmc
dec
fstp
outs
or
in
jecxz
imul
pop
sub
ins
jl
movs
icebp
test
out
or
int3
adc
rcr
pop
stos
pop
(bad)
popf
push
sahf
sbb
mov
fist
add
cmp
cld
and
aad
imul
outs
lods
and
cld
cmc
into
push
aas
enter
call
jge
xchg
int
jmp
jmp
ror
cmps
push
frstor
mov
popa
cmc
sub
fwait
jg
cmp
stos
jge
aas
sub
sahf
hlt
jg
lahf
mov
pop
inc
sar
(bad)
xor
out
fstp
cmc
push
sahf
loope
jecxz
imul
lahf
pop
jg
mov
xor
mov
or
pop
fwait
scas
std
or
add
push
or
add
add
loopne
jmp
add
test
add
scas
std
or
add
push
or
add
add
loopne
jmp
add
test
add
scas
std
or
add
push
or
add
add
loopne
jmp
add
test
add
scas
std
or
add
push
or
add
add
loopne
jmp
add
test
add
scas
std
or
add
push
or
add
add
loopne
jmp
lea
push
sub
inc
enter
into
inc
out
dec
add
sti
js
add
aam
lahf
mov
and
es
test
mov
nop
or
jo
sbb
jne
adc
rcr
add
add
add
xor
enter
xchg
inc
enter
add
outs
test
test
add
or
sbb
ins
dec
or
sbb
add
add
sahf
adc
fs
pop
and
add
add
add
enter
stos
push
add
dec
inc
mov
xchg
push
sub
mov
add
add
mov
outs
jg
(bad)
(bad)
jnp
jg
cld
arpl
sti
jp
add
call
out
mov
pop
adc
mov
add
mov
fcom
add
jmp
add
mov
sahf
and
fcomip
pop
push
std
inc
jle
aas
fisttp
rcr
pop
repz
ret
test
add
add
and
add
js
sub
push
fistp
cmps
jo
repz
aaa
mov
popf
div
(bad)
icebp
ret
jle
cdq
ins
ss
inc
enter
leave
iret
in
xchg
mov
pop
or
sbb
daa
movs
push
daa
or
add
add
lock
iret
sahf
and
xchg
xor
test
dec
imul
test
fs
imul
xor
add
fld
add
arpl
fnstcw
or
cmp
cmp
and
mov
pushf
and
sbb
test
popf
xchg
push
popf
and
fld
add
arpl
mov
idiv
fwait
or
mov
std
icebp
icebp
aaa
fdiv
out
repz
sti
(bad)
ja
scas
xchg
loopne
cmc
fcomp
loopne
cmp
pop
pop
ins
sbb
es
sti
pop
jg
aaa
jg
cli
sahf
ficom
das
xlat
(bad)
mov
dec
jmp
repz
fscale
push
sub
dec
fcmovu
xor
sti
jae
mov
jmp
pop
out
xor
xor
mov
dec
mov
mov
xchg
cmp
inc
or
sbb
daa
movs
push
daa
or
add
add
lock
int
mov
xor
ret
or
push
leave
aam
mov
pop
dec
shl
and
add
addr16
fist
add
leave
loop
jb
and
sbb
pop
pusha
and
in
das
leave
push
push
test
jnp
clc
mov
das
fdivr
sti
repz
sbb
cmp
in
adc
and
jge
cmp
lods
shl
and
retf
jmp
mov
enterw
popf
adc
ss
mov
stos
dec
adc
add
xor
ins
and
gs
jp
push
push
dec
push
mov
add
jge
es
xchg
(bad)
test
xor
cmp
pop
adc
mov
(bad)
pop
pop
adc
cld
jle
fistp
mov
leave
(bad)
shl
fidiv
leave
mov
call
inc
js
idiv
lods
jae
rcl
jns
pmaddwd
inc
jge
call
and
fwait
xor
movs
stos
fmul
mov
les
movs
adc
mov
fst
retf
sbb
aad
mov
ret
xchg
jl
push
pusha
mov
jp
push
sub
ins
add
cs
or
(bad)
loopne
sbb
mov
sbb
adc
mov
sti
jae
pop
icebp
cmp
jno
mov
jecxz
mov
es
mov
push
cmp
mov
jns
cmp
scas
out
sbb
dec
mov
mov
jl
adc
rcr
(bad)
push
movs
push
daa
or
xor
test
sar
push
std
aam
cmps
shl
sbb
cmp
lock
dec
add
add
adc
(bad)
jno
push
push
sbb
or
xchg
jae
add
faddp
inc
mov
pop
(bad)
sbb
mov
outs
ret
fcomp
icebp
ds
ins
mov
or
out
rol
movs
adc
pusha
(bad)
(bad)
std
adc
out
neg
xlat
call
inc
add
fldenv
mov
push
test
or
jp
or
dec
enter
xor
lahf
test
cmp
nop
std
sbb
pusha
lods
xlat
sub
add
rol
mov
pop
enter
lods
sbb
aam
repnz
(bad)
jae
jle
sub
pop
vdivsd
mov
jge
pop
cmps
ds
xor
(bad)
ins
jl
jno
fidiv
pop
into
mov
push
inc
popa
(bad)
(bad)
std
cmc
mov
neg
jae
mov
hlt
push
loopne
ds
aam
int
sar
repnz
lahf
jmp
stos
out
fst
shl
addr16
xlat
daa
test
call
and
pop
fnstsw
jmp
ret
xchg
add
rcr
adc
add
mov
(bad)
and
stos
pusha
popa
jmp
lods
sbb
movs
jne
(bad)
(bad)
xlat
add
inc
lock
or
xchg
jmp
out
popf
sbb
std
push
cmp
sar
mov
loopne
in
icebp
pop
mov
fstp
push
outs
mov
ds
dec
lods
jns
pushf
sub
aam
sahf
cld
mov
into
mov
int3
xor
xchg
sahf
mov
mov
jne
or
aad
inc
ss
daa
int
xor
xchg
dec
repz
mov
(bad)
fst
xchg
inc
repz
mov
test
mov
enter
mov
mov
je
arpl
popf
pop
enter
xchg
jae
idiv
rol
shl
xchg
cli
popa
fsub
pop
fsub
push
sti
shl
test
fist
add
fsub
mov
jg
jecxz
mov
neg
inc
fiadd
imul
ss
jb
int3
jle
mov
jl
jae
cdq
cmp
out
pop
in
repz
jl
sub
fnstenv
icebp
push
and
mov
mov
gs
int3
js
and
push
imul
bound
pop
das
rcr
loope
dec
int
jge
test
inc
sbb
cmps
(bad)
push
out
sbb
mov
(bad)
out
pop
shl
popf
aad
jge
sub
aas
outs
xor
sahf
je
int
fwait
sbb
ds
int3
cmps
mov
arpl
fldcw
ficomp
aas
retf
mov
push
ret
hlt
iret
cmp
lods
inc
add
add
lds
xor
call
add
mov
out
cmp
repnz
adc
fistp
out
adc
dec
mov
sub
je
mov
fist
fistp
icebp
lods
sbb
dec
out
neg
stos
jge
imul
(bad)
inc
jmp
jp
(bad)
repz
cdq
ins
sar
jle
imul
ja
jnp
out
xchg
jb
enter
fs
jge
stos
cli
mov
or
jge
ds
das
jo
scas
xchg
mov
sti
(bad)
cli
mov
js
fidivr
std
bound
call
jecxz
xchg
ficom
cmc
repz
shl
(bad)
int3
mov
jns
xlat
mov
add
sub
jg
mov
int
nop
mov
sbb
in
out
cwde
arpl
std
mov
bound
call
loope
push
daa
jae
push
add
sub
es
cmc
ds
sub
mov
dec
jmp
in
jae
mov
pop
das
sahf
mov
adc
test
jb
pop
or
les
mov
sti
push
rol
mov
mov
ss
jns
jnp
enter
xchg
sbb
sbb
push
mov
pop
clc
scas
in
mov
push
dec
jbe
adc
std
sub
fbld
xor
cmps
nop
jb
enter
movs
or
xor
add
mov
or
dec
jmp
mov
mov
fmul
(bad)
out
cmps
jge
test
pop
popa
mov
jmp
jae
fist
adc
xchg
test
stc
push
pop
out
cmp
aaa
aaa
(bad)
not
mov
(bad)
cmp
test
(bad)
out
sub
inc
(bad)
and
push
imul
enter
mov
cmc
sbb
fcom
cmp
push
mov
dec
test
cld
sti
sbb
or
js
pop
pop
ficom
xchg
sub
jnp
popf
cmp
test
ss
loop
jo
test
add
iret
cmp
pusha
outs
mov
jmp
mov
out
fsubr
aaa
lock
(bad)
cmp
xchg
pushf
pop
icebp
pushf
daa
jae
xor
mov
xchg
in
clc
stc
jne
sti
sub
in
cmp
dec
(bad)
xor
imul
jne
cwde
std
push
stos
(bad)
pop
lods
jae
and
sbb
repz
call
loop
pop
out
ss
dec
cmp
sub
pusha
jne
cmp
adc
add
sbb
sbb
loope
test
mov
(bad)
ficom
dec
mov
dec
lock
pop
lods
out
jp
pushf
fdivp
fs
mul
fcmovnbe
xadd
sbb
ds
sti
(bad)
je
imul
shl
movs
lock
or
add
sti
or
mov
dec
mov
jne
jne
outs
mov
out
ja
scas
pop
pop
arpl
idiv
pop
mov
add
mov
out
and
jnp
pop
mov
js
outs
loope
mov
fcmovbe
jae
sar
sub
out
fs
pop
fdivr
xchg
jo
fidivr
cmp
sbb
test
or
into
push
shl
mov
or
dec
jge
lahf
mov
cmp
and
mov
(bad)
dec
hlt
in
scas
fadd
pop
jp
mul
stos
mov
ss
imul
in
imul
jl
mov
sahf
jge
fnstcw
fs
into
rcr
mov
push
inc
mov
xchg
sub
inc
je
inc
mov
jmp
int
(bad)
pop
sti
es
out
pop
lods
outs
je
pushf
add
cmp
push
test
repz
pop
push
out
dec
imul
mov
aam
mov
sbb
mov
das
data16
aaa
lahf
neg
or
mov
push
stc
hlt
jge
call
add
or
jb
lea
add
sti
dec
pusha
aaa
lea
(bad)
imul
cli
jmp
lahf
xchg
not
mov
mov
xchg
adc
test
adc
test
nop
ins
inc
out
pop
out
jno
in
gs
mov
jge
jecxz
lods
outs
pop
std
cli
icebp
or
mov
xlat
stos
cmp
iret
xor
xor
dec
call
xor
and
add
inc
enter
inc
inc
xchg
adc
hlt
imul
shl
imul
adc
ins
repz
nop
test
(bad)
stos
jecxz
mov
adc
ins
jle
cmc
lods
nop
ins
pop
mov
js
(bad)
mov
jb
aaa
inc
pop
mov
enter
pushf
dec
xchg
fdivr
retf
clc
outs
push
out
xor
adc
scas
jle
clc
xchg
arpl
mov
dec
xor
stc
push
jmp
add
adc
fs
sbb
mov
in
pop
push
imul
or
mov
jle
aad
sti
sbb
call
cli
cs
loopne
lods
mov
mov
pop
cmps
and
ja
inc
adc
pop
shl
idiv
es
mov
fcomp
or
icebp
mul
rcl
ja
jns
fld
push
jmp
je
cmp
pop
or
outs
lahf
pop
adc
dec
enter
dec
adc
or
sub
or
imul
(bad)
pushf
(bad)
retf
mov
mov
sbb
mov
mov
push
outs
cmp
ss
fistp
inc
in
sbb
scas
push
and
pop
sbb
in
jae
push
mov
(bad)
jl
sahf
into
fstp
pop
fcom
fistp
jge
push
cmp
mov
fcomp
clc
cli
lods
std
aad
mov
das
into
hlt
mov
cmp
popf
inc
scas
pop
icebp
mov
sti
sub
in
or
ror
mov
cwde
fdivp
xchg
fisubr
lods
mov
into
jmp
jne
dec
dec
cmp
fwait
pop
xchg
cdq
mov
dec
push
call
pop
add
jle
in
xor
jge
in
sub
int
fnstenv
aaa
cmps
mov
push
popf
fdiv
xchg
pop
les
add
cli
jb
int3
out
mov
sti
jmp
bound
jae
pusha
pop
mul
push
test
fsub
pop
daa
add
add
cmp
add
(bad)
rol
inc
jbe
sbb
push
enter
add
mov
fisub
xlat
std
jae
xor
shrd
ss
push
mov
push
js
out
shl
mov
fs
mov
add
jge
popf
fist
rol
mov
shl
adc
push
xchg
cli
fdivr
int
mov
out
fbld
inc
arpl
jmp
add
mov
mov
in
nop
dec
in
mov
scas
(bad)
xchg
sub
loop
pop
sbb
repnz
scas
mov
pop
xor
sbb
sti
fld
mov
pop
mov
mov
cmp
ret
jmp
ins
out
int3
ficomp
add
aaa
repnz
push
mov
jns
inc
movs
ins
jnp
rcr
das
sahf
bound
imul
out
enter
xchg
in
nop
or
push
repnz
push
pop
jne
sbb
inc
iret
sti
imul
(bad)
loop
sbb
mov
test
in
lock
jecxz
movs
mov
add
add
ret
ds
or
test
pusha
sub
jnp
or
dec
and
sub
shl
and
out
movs
mov
add
add
mov
dec
or
sbb
add
jnp
add
sahf
adc
mov
enter
push
jne
sbb
xchg
push
popf
loopne
loopne
jmp
(bad)
pop
test
add
mov
not
add
daa
adc
xor
jno
inc
cmc
lods
jecxz
je
pop
jne
sbb
inc
aas
inc
jns
push
or
add
rcr
add
mul
push
pop
jne
sbb
adc
jnp
add
sahf
adc
ss
mov
stos
dec
jo
add
mov
add
add
xchg
inc
enter
dec
imul
inc
add
lock
adc
mov
nop
or
stos
adc
add
fadd
add
inc
enter
test
push
daa
lds
shl
add
add
cmp
jo
cmp
lods
cmp
push
adc
rcr
cmp
xchg
shr
and
add
add
pushf
lea
sbb
sub
adc
rcr
cmp
xchg
shr
and
add
add
pushf
lea
sbb
sub
adc
rcr
cmp
or
dec
movs
and
mov
add
ftst
sahf
adc
sub
fldcw
loopne
ficom
js
(bad)
xor
sbb
out
dec
sub
push
in
loopne
mov
add
sbb
mov
add
add
sub
rol
sbb
add
add
call
movs
adc
add
inc
or
sbb
add
add
call
movs
adc
add
scas
pop
neg
int
jge
push
int3
nop
dec
pop
add
pop
jmp
add
add
sub
mov
adc
push
js
pop
pop
jg
(bad)
(bad)
jnp
cld
mov
(bad)
nop
ins
lods
mov
inc
add
add
scas
adc
jecxz
xor
jae
std
dec
xor
js
add
ror
add
sub
outs
enter
cmp
mov
stc
(bad)
clc
(bad)
fadd
jae
xor
out
std
in
pop
cmps
jb
pushf
(bad)
sub
jg
out
iret
pop
loope
cmp
dec
das
cmp
add
xchg
jns
scas
or
adc
dec
test
repz
cmps
cli
jge
dec
sub
pop
je
sbb
pop
leave
mov
imul
xor
pop
and
daa
fwait
sub
iret
retf
or
push
mov
or
or
xchg
arpl
jecxz
imul
mov
pop
ror
add
sub
cs
dec
jmp
ins
mov
adc
jecxz
cmp
ins
es
daa
aam
aas
mov
ins
out
loope
jecxz
cld
loope
(bad)
scas
or
add
movs
pop
popf
push
pop
add
add
push
jb
enter
mov
lock
adc
hlt
and
xchg
xchg
xchg
not
push
retf
jnp
pusha
into
test
jecxz
cmc
mov
mov
or
lock
test
mul
and
(bad)
jae
fstp
push
jne
icebp
cmps
jge
sahf
test
xchg
inc
enter
das
cmp
add
or
xor
xchg
pop
and
mov
inc
enter
push
out
xor
out
mov
sbb
lahf
sub
xor
mov
pop
adc
jns
lods
in
leave
xor
fisttp
inc
jp
pop
jne
add
add
sti
xchg
dec
ret
clc
adc
sub
imul
test
and
out
sub
jge
push
jge
sub
(bad)
mov
ds
cmp
ss
jge
(bad)
std
lahf
outs
xlat
jecxz
mov
pop
dec
mov
fs
or
cmps
push
inc
pop
push
dec
das
cmp
add
test
and
cmp
call
scas
ja
dec
cmp
dec
mov
add
or
aas
sub
jmp
pop
xchg
movaps
test
sbb
sti
mov
ja
pop
push
dec
das
cmp
add
pop
scas
inc
inc
mov
and
in
sbb
ins
loope
stos
pop
inc
ss
std
cdq
nop
test
test
push
adc
xlat
jnp
bound
pop
lods
aaa
(bad)
mov
std
sub
in
xor
sahf
jne
pop
mov
jo
mov
push
or
ficomp
call
add
mov
sub
xor
cs
mov
add
xor
aam
mov
mov
jbe
movs
mov
retf
cmp
jo
or
jmp
(bad)
stos
hlt
cmp
sahf
test
stc
mov
lahf
inc
ins
and
nop
in
fst
xchg
add
add
sub
cmp
dec
fwait
inc
nop
clc
leave
stos
test
push
sbb
mov
sbb
adc
cmp
jecxz
fbld
mov
rcl
fisub
xor
fimul
fs
hlt
loope
hlt
mov
add
loopne
mov
fxch
add
sbb
mov
enter
test
jo
test
(bad)
mov
add
int
fwait
mov
add
call
in
shl
sahf
lahf
pop
dec
data16
and
sub
adc
jge
or
lahf
(bad)
jns
mov
cld
jecxz
je
(bad)
ins
call
pop
out
stc
jne
or
dec
add
mov
jae
call
pop
dec
jmp
retf
sti
out
lods
call
stc
mov
dec
rol
xor
ror
add
sub
jnp
ss
push
leave
mov
dec
inc
ss
mov
shl
push
adc
or
fwait
test
mov
mov
xor
int3
jno
lea
adc
in
shr
xchg
jl
je
pop
in
jbe
cmc
iret
or
cmp
push
das
xor
dec
adc
mov
scas
adc
jnp
pop
dec
adc
xchg
idiv
sbb
mul
cmp
sbb
mov
jmp
idiv
pop
in
idiv
inc
ret
and
int3
mov
mov
mov
inc
(bad)
imul
mov
jecxz
mov
outs
inc
hlt
mov
add
loopne
test
cmps
add
pop
jmp
cmp
push
xlat
imul
ror
mov
loop
ins
out
jne
into
cmp
scas
out
jae
pop
lods
dec
ret
lods
sar
xchg
cli
mov
nop
ins
out
(bad)
mov
pop
fsubr
sbb
inc
mov
pusha
cmps
or
and
xor
shl
and
add
addr16
cmp
adc
push
add
sub
sar
xlat
repz
cli
jle
mov
mov
ret
mov
jge
adc
daa
(bad)
std
jge
pop
xchg
lods
out
dec
das
cmp
add
pop
mov
mov
inc
sbb
xchg
shl
out
mov
jp
enter
(bad)
(bad)
sbb
out
cmp
lock
leave
jnp
pop
sbb
and
sahf
mov
iret
scas
mov
cmc
inc
mov
push
popa
dec
fwait
jmp
icebp
ds
cwde
leave
push
push
jecxz
arpl
pop
icebp
sti
outs
ss
sbb
push
ss
xchg
adc
or
dec
cmps
jne
loopne
inc
pop
jmp
cmps
retf
mov
and
xchg
mov
push
in
in
xchg
fdiv
push
sti
xlat
hlt
popa
stc
pushf
jecxz
lods
mov
sbb
into
xor
pop
(bad)
ins
mov
jmp
call
add
mov
pop
xchg
mov
sub
inc
cdq
scas
xor
mov
jge
dec
fisubr
aas
mov
(bad)
sbb
stos
lods
out
retf
cmc
mov
sub
scas
lea
std
scas
push
cmp
enter
ficom
push
lock
into
(bad)
repnz
cmp
cmc
fiadd
cmp
or
sub
imul
sbb
stos
or
fidiv
jnp
mov
neg
les
mov
add
add
push
mov
enter
imul
(bad)
fisubr
sbb
xchg
in
inc
ss
test
les
inc
mov
dec
ficom
add
jnp
loop
das
pop
dec
push
rcl
xchg
mov
out
nop
lods
cmps
cmp
sbb
and
add
add
out
out
nop
lods
clc
cmc
rcl
inc
push
test
push
mov
imul
mov
enter
or
add
inc
xchg
fild
in
fs
les
adc
arpl
mov
in
psubusw
lods
in
xor
jno
adc
js
xchg
or
stos
lods
mov
fcomi
jne
mov
and
adc
clc
sbb
test
mov
fisubr
in
push
push
cdq
movs
data16
outs
nop
rcl
or
pop
jge
cli
gs
cmps
jo
sub
jo
enter
push
out
inc
jns
mov
add
add
stc
adc
mov
push
sbb
inc
mov
gs
std
mov
mov
or
fild
std
sahf
cmp
wrmsr
push
arpl
icebp
cmp
fiadd
inc
lds
sbb
aam
mov
das
into
hlt
mov
xor
test
leave
sub
inc
jp
(bad)
cli
ins
inc
(bad)
cmps
pop
popf
push
pop
add
add
push
jb
enter
sub
jg
pusha
push
dec
add
mov
lods
lods
mov
int
fadd
xor
add
push
fst
add
mov
rol
into
xchg
test
arpl
fdivr
ins
jbe
jnp
or
setg
push
pop
pmuludq
pop
jge
rcr
jbe
neg
inc
jecxz
and
add
lock
sahf
adc
icebp
mov
pop
jg
push
dec
pop
and
nop
ins
or
dec
mov
inc
cmp
or
cmp
int3
dec
add
js
jo
mov
cmp
adc
fst
cmp
xlat
jnp
js
idiv
(bad)
sub
mov
cdq
jge
stos
fstp
adc
sbb
add
xor
push
sub
ins
push
mov
inc
call
or
or
jne
cmp
nop
loop
aaa
mov
push
cld
pop
rol
pop
mov
ret
test
pop
in
xchg
fucomi
add
sar
add
out
xchg
ds
test
test
fcomp
fidiv
mov
add
add
and
cmps
scas
int3
cmps
or
sahf
pop
je
sbb
pop
or
sbb
ret
ret
mov
out
hlt
mov
add
loopne
or
add
sahf
push
push
dec
jg
in
ins
in
jns
mov
add
add
and
mov
sbb
ins
in
jns
mov
add
add
and
pop
je
sbb
pop
or
sbb
sbb
das
cmp
add
dec
and
movs
pop
popf
push
pop
add
add
push
mov
cdq
or
sbb
mov
add
add
or
mov
pop
and
add
add
cmc
call
cmp
add
add
add
mov
pop
ror
add
add
xlat
movs
jmp
xor
sti
inc
clc
std
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
popa
xor
test
dec
sbb
jecxz
fst
out
sbb
cmp
jbe
cmp
xchg
pop
ins
and
add
add
cmps
add
add
add
add
add
add
add
and
add
add
add
imul
add
and
je
outs
add
add
outs
add
imul
dec
add
popa
add
add
add
add
bound
je
outs
add
add
je
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
push
sldt
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
ret
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
inc
cmp
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
and
add
arpl
je
jne
jb
add
outs
add
xor
add
popa
add
add
jo
imul
jne
jb
add
outs
add
add
add
ins
add
add
push
mov
add
arpl
je
jne
jb
add
outs
add
aaa
add
add
ins
add
add
test
jo
imul
jne
jb
add
outs
add
cmp
add
ins
add
add
movs
lea
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sbb
add
add
or
or
add
or
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
or
js
in
fsubr
xchg
in
push
add
mov
or
jnp
call
dec
dec
add
and
test
popf
mov
mov
mov
xor
xor
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
(bad)
jae
outs
push
jl
and
jg
cli
add
sti
or
add
fnstenv
mov
mov
sub
mov
pop
nop
xor
into
ins
pcmpeqd
loope
lock
pop
int3
sbb
jl
add
je
clc
imul
sbb
popf
pop
(bad)
mov
inc
push
ror
dec
rcr
mov
inc
movs
pop
mov
cmc
inc
aas
icebp
xchg
daa
xlat
pop
sbb
push
or
jecxz
scas
xchg
clc
xor
ds
or
das
cmp
dec
popa
lds
jb
sub
cmp
pop
std
fist
or
lds
les
idiv
sbb
sbb
cmp
out
jns
nop
pop
js
outs
pop
adc
mov
inc
lock
adc
(bad)
fs
mov
shr
fst
or
sbb
popa
test
sahf
pusha
jne
xor
jp
add
cmp
dec
pop
scas
and
sub
arpl
retf
test
in
adc
stos
xor
jno
xchg
mov
arpl
daa
dec
(bad)
in
and
pop
add
or
test
loopne
pop
sub
push
ins
fwait
jns
jae
inc
adc
daa
push
daa
pop
call
loope
in
fnstenv
mov
int
mov
loop
push
arpl
je
push
(bad)
in
or
(bad)
lods
shl
lock
scas
pop
jge
xor
lock
push
push
pop
add
sub
and
mov
(bad)
push
pop
cwde
mov
mov
pusha
addr16
cmp
push
add
test
mov
leave
leave
pop
mov
leave
xor
sbb
arpl
not
ror
scas
ret
push
and
lock
pop
fcmovne
test
ja
into
std
in
xchg
sbb
mov
jb
fidivr
outs
sub
push
push
mov
scas
orps
jl
in
adc
cmp
icebp
cdq
cmp
pop
shl
data16
imul
jbe
sub
sbb
ins
add
inc
xchg
add
addr16
mov
adc
sub
fnstcw
hlt
out
sbb
(bad)
gs
cmp
push
pop
mov
in
lods
lahf
imul
mov
not
fldcw
loope
icebp
pop
add
mov
enter
jnp
fidivr
call
push
push
mov
cdq
and
cli
data16
push
ss
call
inc
add
pop
ftst
xchg
xchg
mov
(bad)
scas
shr
mov
xchg
iret
ins
cld
push
xor
arpl
mov
xchg
cmp
scas
jp
push
ja
push
je
fimul
push
xor
sbb
xchg
adc
mov
add
fild
ja
pop
mov
mov
push
stc
cmp
outs
hlt
dec
das
push
cmp
stos
xor
add
sbb
lods
stos
or
sahf
not
mov
cmps
sar
mov
xor
sahf
adc
add
xor
hlt
(bad)
test
iret
dec
rcl
bound
fldenv
(bad)
push
mov
cld
mov
inc
iret
push
pushf
add
ins
mov
arpl
bound
int
test
pop
leave
or
loopne
jecxz
push
out
push
sbb
jge
mul
dec
test
xor
cmp
stos
dec
mov
jecxz
cmp
push
int
inc
jecxz
enter
dec
mov
sub
fidivr
sar
xor
and
mov
fidiv
mov
xchg
pop
lods
and
dec
imul
lods
mov
mov
iret
shl
xor
lds
mov
rcr
daa
bound
mov
imul
jp
shl
mov
xchg
addr16
jno
cmc
mov
imul
add
addr16
sbb
mov
aam
xor
lods
sar
cmp
std
inc
jns
lds
add
and
fsubr
fmulp
mov
fadd
dec
(bad)
jo
int3
out
movs
jmp
mov
jno
pushf
jecxz
daa
mov
mov
xor
inc
pop
mov
xor
ja
pop
xor
xor
mov
pop
pop
fs
lods
pop
movs
mov
(bad)
imul
add
push
fimul
cld
pop
rcr
ror
cld
sahf
and
mov
ins
xchg
push
jp
call
repz
test
sbb
aad
lods
xchg
clc
pushf
stos
(bad)
xchg
mov
jmp
xlat
fwait
jnp
xor
mov
sub
in
dec
sti
stos
sub
cdq
pop
div
stos
call
pushf
setle
fnclex
fcomp
retf
pop
popa
ins
test
iret
inc
iret
hlt
inc
fild
adc
aaa
push
out
pop
(bad)
pop
sbb
ret
ret
mov
popa
sub
sahf
jmp
int3
jmp
loop
mov
or
lea
pushf
dec
xor
jmp
dec
popf
sbb
sbb
retf
dec
xor
int
push
iret
les
mov
ss
mov
lods
into
mov
cld
xchg
fst
addr16
ret
pop
outs
scas
or
pop
jno
push
mul
jae
mov
jmp
pop
scas
ds
mov
jecxz
lds
cmc
out
leave
fs
adc
sub
mov
(bad)
mov
mov
inc
cmp
xchg
dec
das
jg
fdivr
sbb
in
mov
iret
fs
jbe
(bad)
scas
push
dec
and
idiv
retf
jmp
inc
jp
ret
(bad)
int3
adc
or
dec
loope
adc
adc
les
xor
imul
imul
push
sahf
pushf
cmp
sub
nop
loope
mov
dec
cmp
jmp
loop
xor
cmp
repnz
pop
fbstp
pop
push
mov
jmp
or
daa
sbb
cmp
std
test
and
stos
repz
mov
jmp
(bad)
sbb
xor
outs
push
repz
jle
mov
mov
in
mov
das
push
push
pop
(bad)
sti
cdq
add
shl
or
movs
test
inc
stc
bound
(bad)
or
add
push
mov
jae
imul
outs
mov
fistp
jl
out
xor
hlt
inc
inc
add
push
add
daa
add
add
lock
adc
pop
or
xlat
jbe
cmp
mov
and
fild
xchg
mov
loopne
cld
adc
inc
into
pop
outs
mov
xchg
in
scas
pop
jle
out
xor
hlt
inc
dec
cmp
jp
mov
clc
into
imul
ret
jae
mov
jns
(bad)
mov
pop
push
std
dec
stc
dec
jbe
sub
ja
or
call
inc
inc
xor
and
div
cmp
sbb
mov
jnp
fbld
in
jg
jg
out
xor
hlt
cmp
loop
loop
add
jle
retf
cmp
int3
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
lods
loope
ror
sbb
sbb
int3
sub
cli
cmc
das
enter
idiv
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
add
or
or
add
or
add
add
or
add
add
(bad)
and
add
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
inc
dec
inc
add
(bad)
xor
dec
jo
add
add
jo
pop
jae
add
les
add
les
xchg
sub
sbb
add
dec
inc
inc
push
js
in
aad
adc
and
xor
jmp
mov
add
add
and
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
xchg
rol
adc
add
add
dec
pusha
add
or
and
add
add
inc
shr
pop
bound
cmp
loopne
cdq
out
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
and
add
mov
inc
or
add
or
add
add
add
add
push
add
add
cmp
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
and
inc
inc
push
js
in
popf
jnp
ss
push
(bad)
push
inc
lds
mov
loop
mov
push
mov
mov
aam
add
or
(bad)
rcr
dec
mov
pusha
add
sbb
xchg
push
arpl
es
lock
and
mov
lahf
popf
xor
outs
repnz
mov
addr16
jge
out
pushf
cmp
and
and
pop
cwde
xchg
inc
adc
adc
mov
or
popa
push
push
inc
adc
jo
int3
retf
and
mov
adc
icebp
xor
and
and
push
data16
adc
ret
lods
or
and
and
cwde
xchg
inc
adc
adc
mov
or
popa
push
out
mov
icebp
shl
and
sub
pop
jl
movs
scas
xor
jnp
jmp
xor
test
pop
xlat
xchg
sti
mov
mov
xchg
cmps
mov
add
sti
sbb
cmp
xor
inc
jl
add
(bad)
mov
(bad)
(bad)
and
dec
inc
cmp
mov
mov
div
fild
stc
push
icebp
cmp
clc
or
jg
clc
jbe
xor
cmp
pop
data16
movs
lahf
sub
fst
adc
jns
icebp
pop
icebp
inc
loop
(bad)
fidivr
dec
cld
xchg
pusha
and
jno
add
cld
mov
rol
fisttp
mov
mov
mov
mov
fistp
pop
jmp
pop
daa
jle
cld
(bad)
loopne
std
movs
pusha
loop
ret
lock
pop
fsub
xlat
mov
aas
and
add
cli
jecxz
sub
mov
pop
(bad)
xchg
js
clc
arpl
es
aad
shl
pop
add
cmc
lock
aam
inc
test
fcomip
adc
dec
mov
les
mov
dec
loopne
xchg
clc
addr16
sti
mov
fbld
fisubr
out
adc
sub
fdiv
cmp
stc
cmp
aas
jge
loopne
sbb
mov
ja
fmulp
cmp
jle
xor
xor
mov
shl
lds
call
cmp
jmp
out
cmps
push
out
push
xor
out
fnstcw
pop
daa
call
pop
test
leave
out
dec
pop
(bad)
jnp
lahf
loop
add
cmps
neg
jns
test
pusha
mov
test
cmp
pop
or
icebp
cmp
scas
pop
in
(bad)
es
sbb
retf
fdiv
in
cmps
loop
or
pop
std
push
popa
mov
mov
mov
adc
addr16
clc
mov
hlt
adc
pop
jae
cld
and
xor
add
and
adc
sbb
push
cmp
xchg
add
gs
loope
lahf
push
add
pop
jns
push
jp
aas
sub
ss
add
and
int3
xor
es
xlat
icebp
cli
icebp
fbld
and
add
jp
jg
cwde
aam
scas
out
mov
in
push
aas
sub
mov
call
dec
push
jae
std
cli
lea
in
call
int
cmps
loopne
mov
and
sbb
and
adc
pop
pop
iret
mov
xor
dec
xchg
mov
xchg
push
lods
or
jo
push
test
test
mov
daa
gs
mov
loopne
lods
pusha
bound
xor
jge
add
push
add
js
add
cli
mov
mov
cmp
adc
outs
mov
fwait
nop
push
xor
addr16
jno
mov
inc
xchg
imul
movs
test
test
push
mov
out
mov
test
mov
pop
adc
sub
stos
gs
xor
cmp
mov
mov
iret
push
inc
xor
xor
test
retf
hlt
cmp
jno
inc
lahf
jno
sub
repz
jmp
stos
lea
stos
xor
je
js
sbb
xor
iret
pop
or
gs
mov
ret
into
test
shl
ret
ss
adc
add
in
dec
movs
int
mov
rol
les
xchg
pop
ins
test
pop
into
push
pop
or
in
jbe
arpl
cmp
rcr
lods
jbe
and
aad
int3
retf
xchg
inc
in
ret
mov
cmp
loopne
ror
xchg
aas
sub
call
sbb
fsqrt
pushf
call
out
idiv
dec
cld
movs
push
popa
push
xor
push
(bad)
cdq
push
and
xchg
add
js
or
jnp
imul
sbb
cwde
jl
adc
xor
jge
rol
pop
pop
in
(bad)
es
sbb
retf
dec
jbe
sub
test
pusha
adc
mov
xor
bound
xor
out
movs
in
adc
or
push
sti
aaa
pop
adc
and
lods
add
mov
xor
and
push
inc
sub
xchg
leave
nop
(bad)
fild
cmp
int3
retf
mov
add
addr16
sbb
cmp
outs
sbb
or
cmc
sti
sbb
add
in
pop
xchg
sbb
adc
inc
xor
dec
out
ja
loopne
cmp
aas
nop
cli
or
mov
lea
xlat
in
mov
add
inc
pop
sbb
mov
pusha
shl
mov
imul
sbb
retf
jbe
cmp
pop
(bad)
xor
aam
clc
jae
loopne
mov
sbb
aam
or
or
retf
(bad)
dec
stc
inc
jnp
or
in
inc
das
cmp
jnp
scas
or
mov
mov
xlat
retf
mov
cs
sub
mov
test
lods
dec
enter
xchg
dec
cwde
pop
or
mov
imul
into
xchg
mov
shr
and
test
pop
movs
push
daa
in
xor
sub
in
bound
pop
les
or
and
mov
rol
int
hlt
std
jnp
les
not
test
push
dec
mov
mov
mov
pop
cdq
fs
(bad)
adc
lea
mov
ficomp
cmp
pop
jmp
(bad)
test
jo
or
(bad)
jp
jecxz
mov
cld
inc
pop
popf
xchg
xchg
add
mov
cmp
fcmovb
cs
mov
pop
out
mov
es
gs
mov
adc
adc
stos
sbb
xor
xchg
xchg
test
jp
ror
and
or
lahf
nop
(bad)
(bad)
addr16
cmps
jnp
push
out
push
fdivr
adc
dec
test
(bad)
sti
and
gs
retf
jmp
and
or
mov
cmp
not
rol
mov
jp
pop
scas
(bad)
mov
push
test
mov
and
jge
cmc
sbb
push
aad
sub
mov
(bad)
push
xchg
imul
inc
adc
les
inc
icebp
frstor
mov
or
(bad)
push
stos
cmp
pushf
rol
aaa
jge
outs
lock
jnp
mov
push
jg
ds
pop
ins
adc
imul
mov
dec
int3
retf
sbb
add
mov
stos
push
aam
rcl
pusha
in
cmp
xor
js
dec
ffreep
dec
xchg
and
and
sbb
lahf
add
call
aas
jl
mov
ret
xor
dec
test
or
into
pop
stc
or
hlt
push
and
sbb
push
retf
jmp
inc
pop
outs
cli
hlt
retf
lds
dec
sar
sub
dec
test
push
movd
hlt
sub
push
mov
push
dec
sbb
popa
in
mov
cmc
cmp
and
rol
mov
adc
retf
dec
inc
(bad)
jl
pusha
xor
das
retf
adc
xor
xchg
jae
ret
push
xchg
dec
pop
pop
jmp
(bad)
pop
popf
mov
aaa
sub
daa
stos
shl
or
xchg
adc
(bad)
rol
in
sti
loope
mov
movs
ins
push
popf
xchg
jns
ret
mov
and
(bad)
div
dec
sbb
cld
pop
pop
sbb
(bad)
cdq
cli
ror
loope
ins
pop
xor
inc
pusha
jge
push
nop
and
jnp
xchg
xchg
ins
jmp
cli
adc
call
add
add
out
xchg
push
jae
add
fistp
call
ret
sti
inc
das
int3
iretw
push
jbe
inc
repnz
test
xor
(bad)
pavgw
push
das
xchg
mov
pop
or
dec
pop
loopne
(bad)
pop
mov
ficom
popa
xchg
repnz
ret
and
pop
loopne
inc
lods
adc
pop
inc
dec
pop
push
push
jmp
loop
mov
bound
loope
fild
xor
hlt
dec
pop
in
(bad)
int3
sub
or
inc
nop
xor
inc
dec
js
inc
stc
outs
test
mov
in
dec
pop
adc
lahf
vmovshdup
cmp
and
mov
mov
aad
inc
mov
sub
test
jecxz
cmp
mov
fdiv
test
jp
in
pop
in
mov
and
aad
int3
inc
popa
mov
fstp
movs
loop
in
push
dec
(bad)
or
jb
int
adc
retf
loopne
pop
retf
in
and
idiv
dec
(bad)
cmp
mov
inc
sub
add
arpl
pop
or
test
sbb
add
stos
mov
test
out
jle
retf
add
jo
inc
push
inc
iret
std
inc
stos
icebp
adc
fcomp
mov
xor
fist
mov
(bad)
jae
cmp
mov
push
mov
scas
push
xor
and
ret
jae
push
icebp
sbb
mov
sahf
cmp
cli
push
out
and
fwait
cmp
rol
and
ret
jbe
add
add
pusha
inc
cmp
sbb
out
iret
lock
jbe
fidiv
push
mov
sbb
fiadd
call
and
(bad)
les
sahf
xchg
and
into
mov
ds
adc
repz
inc
pop
cs
or
fwait
xor
mov
out
outs
lods
pop
pop
das
mov
(bad)
push
outs
pop
sub
pop
mov
mov
aaa
vcvtps2pd
mov
jo
jns
aad
call
mov
arpl
ins
and
into
sbb
mov
lahf
mov
lahf
(bad)
jae
in
inc
push
fwait
xor
sbb
cmp
sub
and
xlat
popf
retf
mov
dec
js
out
push
mov
aas
jle
mov
pop
cld
and
repz
aad
nop
into
xchg
pusha
pushf
ss
and
mov
pop
cwde
test
add
or
adc
in
inc
mov
aad
push
pusha
mov
pop
imul
push
push
into
cmp
push
out
pop
sbb
pop
sub
aas
inc
test
push
rol
fbstp
gs
mov
pop
imul
mov
dec
in
adc
dec
bnd
and
sub
jecxz
fwait
mov
dec
jnp
cwde
fdivr
test
or
stos
and
xor
push
arpl
mov
movs
(bad)
xchg
popf
add
lea
cmp
dec
out
jne
mov
shl
sub
int3
retf
mov
pusha
ucomiss
loop
xchg
push
mov
xchg
shr
arpl
mov
shr
in
inc
sub
cmp
cwde
pusha
pushf
je
loopne
loope
mov
pop
push
inc
add
add
dec
daa
scas
popf
push
mov
jg
iret
and
ja
test
imul
mov
scas
or
ret
gs
and
in
adc
xchg
xchg
loopne
or
popf
sbb
cmp
sub
repz
bound
pop
xchg
xchg
jl
add
inc
mov
lahf
add
cli
test
cmp
xchg
addps
std
hlt
push
adc
sbb
test
js
sbb
adc
icebp
jl
dec
mov
mov
out
movs
xchg
(bad)
or
xlat
or
scas
adc
jbe
jnp
hlt
xchg
les
pop
imul
enter
jno
push
and
cli
or
lea
leave
ror
iret
xor
pop
mov
cdq
dec
clts
xchg
dec
call
dec
pusha
push
mov
sub
idiv
mov
or
mov
loop
iret
or
mov
repz
add
loopne
test
(bad)
je
mov
jmp
pop
int3
in
mov
push
movs
in
and
sub
jae
mov
jp
mov
mov
add
aad
sbb
fs
cwde
adc
pop
pop
cdq
xchg
dec
and
mov
jmp
int3
and
js
xlat
in
add
or
push
push
push
jae
rcr
movs
mov
dec
or
add
cmps
pop
retf
jb
adc
aas
pop
fs
pop
dec
sbb
pushf
rcr
jo
mov
jecxz
xchg
xchg
xlat
(bad)
iret
je
scas
int3
retf
test
loope
xchg
adc
pop
lea
imul
cdq
shl
daa
mov
mov
fadd
lods
call
xchg
lock
fistp
pop
mov
sub
ficomp
mov
pusha
inc
int
pop
test
sub
add
fldl2t
pop
and
retf
add
dec
pop
stc
and
adc
cmp
test
xchg
aad
cdq
xchg
enter
dec
fisttp
dec
stos
add
jmp
push
movs
(bad)
add
(bad)
rcl
sub
jnp
add
in
push
js
or
rcl
iret
data16
arpl
mov
(bad)
repnz
ret
pop
test
fbld
(bad)
pop
jecxz
add
cmp
clc
mov
popf
in
popa
add
sub
cmp
ins
pop
cld
pop
adc
stos
jae
fimul
push
mov
inc
sub
imul
pushf
push
jg
div
fwait
mov
arpl
scas
adc
daa
leave
mov
push
lods
pop
mov
shl
mov
mov
scas
int3
retf
in
retf
out
call
or
cdq
sbb
aaa
cmp
movs
or
add
add
and
fwait
test
inc
pusha
cmp
pop
jmp
add
mov
mov
inc
lock
shl
mov
sbb
jns
outs
cmp
add
arpl
push
sbb
out
push
jmp
in
test
test
mov
pop
movs
into
retf
sbb
in
pop
ret
mov
xor
jnp
sub
scas
pop
xor
xchg
jp
mov
popf
mov
fst
mov
mov
mul
jb
aaa
mov
aaa
ins
aaa
aaa
dec
neg
add
fisub
pop
cdq
xchg
dec
sar
xor
out
pushf
push
shl
movs
jle
push
adc
xchg
xor
call
popf
in
add
jae
or
enter
arpl
xor
popa
xchg
enter
jae
mov
repz
pop
clc
dec
(bad)
xchg
sub
sub
sbb
sbb
jmp
fwait
ror
sbb
push
es
jbe
cmp
lahf
dec
int3
ret
and
pop
dec
cmp
(bad)
out
inc
pop
add
xchg
or
cmp
test
and
dec
into
mov
ins
dec
pop
popa
jae
xor
cs
xchg
xor
fwait
loope
cdq
out
xor
adc
xor
xchg
adc
cli
mov
js
lock
test
dec
loope
fstp
cmp
sbb
mov
push
xor
or
daa
pop
das
sahf
mov
icebp
sub
adc
test
mov
call
and
jge
sahf
jo
cmp
push
push
xor
push
enter
sub
fldenv
pop
hlt
ins
sub
inc
out
jno
cdq
fwait
in
dec
pop
int3
outs
inc
test
cmps
pop
out
add
and
sub
cmp
pop
ret
addr16
mov
add
or
aam
sub
and
lock
jae
mov
mov
fnsave
push
call
xor
mov
leave
js
cmp
mov
sub
add
shr
add
push
xchg
sar
pop
adc
out
adc
jno
test
sahf
loope
ret
push
outs
cmp
xor
gs
add
mov
mov
mov
sbb
mov
jp
js
cld
in
lea
test
nop
xchg
push
into
jae
mov
imul
mov
fsub
adc
push
fwait
jo
mov
cwde
and
cmp
xor
pop
ret
pop
nop
dec
add
sbb
fsub
jle
pusha
test
mov
inc
push
sub
adc
outs
test
mov
mov
adc
mov
das
mov
loopne
sahf
and
inc
(bad)
repnz
xor
aam
sub
(bad)
jns
jnp
mov
jne
or
ja
push
shr
js
stos
mov
inc
stos
gs
outs
inc
lahf
arpl
inc
lock
popa
in
aaa
lods
daa
imul
push
sub
adc
lods
ds
movs
jbe
cld
ds
ret
adc
icebp
sub
pop
shr
pop
pop
cdq
xchg
int
sub
cs
mov
(bad)
cmp
pop
xor
test
and
push
mov
aas
sub
jns
mov
mov
retf
mov
push
adc
adc
or
push
out
jp
and
loope
dec
add
fidiv
(bad)
out
popa
(bad)
je
scas
int3
retf
pop
repz
pop
je
cmp
jg
cmp
pop
or
fild
push
enter
(bad)
fnstenv
sahf
js
mov
gs
add
bound
sbb
scas
icebp
push
shr
ror
mov
jae
aaa
fmul
jl
out
dec
add
aaa
scas
loop
out
fldln2
arpl
(bad)
mov
aad
dec
je
scas
int3
retf
add
or
gs
aam
cmp
cmp
push
and
add
nop
lds
ins
adc
stos
loop
add
sub
addr16
fadd
test
adc
mov
jae
cs
dec
dec
imul
cwde
aam
ds
push
dec
sti
xchg
call
mov
or
sbb
add
test
std
fmulp
hlt
dec
mov
test
mov
dec
and
loopne
data16
es
aad
and
hlt
xor
pop
push
push
pop
mov
push
push
loop
mov
fnsave
in
dec
jae
dec
cmps
jle
rol
xor
mov
cmp
sub
int3
retf
inc
cmp
ja
cwde
lods
sub
xchg
das
movs
rcl
pop
test
or
push
mov
and
push
or
imul
pop
test
ret
and
int3
adc
mov
adc
mov
jb
xor
push
fisub
push
(bad)
repnz
inc
dec
xor
mov
or
hlt
mov
imul
push
xchg
mov
push
pop
(bad)
enter
imul
sub
mov
sub
jp
xchg
sbb
jo
cmc
push
or
jns
fwait
dec
pop
mov
xlat
mov
xor
fwait
rol
cmp
test
iret
ret
aaa
add
cmp
mov
mov
(bad)
cmps
inc
mov
jmp
adc
mov
adc
lds
jmp
retf
sub
push
add
push
cwde
and
mov
ror
jg
mov
in
mov
test
imul
jmp
add
xchg
int
repnz
mov
xchg
jnp
xor
les
push
sub
push
test
cmp
hlt
(bad)
test
mov
add
add
lock
xor
xchg
test
jmp
mov
fwait
mov
xchg
pop
(bad)
int
jno
ret
jp
sub
stos
retf
test
loopne
xor
mov
in
jge
xchg
imul
fs
jns
lock
cdq
or
jo
movs
jno
imul
or
xchg
add
jl
push
(bad)
out
je
add
xor
mov
sub
jnp
adc
mov
ja
sub
jbe
push
and
xchg
int
stos
or
gs
mov
and
cwde
or
jp
rol
fsubr
and
and
aaa
or
ror
call
scas
call
cwde
xchg
sub
sub
aaa
or
shl
mov
shl
inc
out
jg
std
ret
mul
ss
fwait
xor
xchg
sbb
inc
iret
cdq
or
mov
dec
lods
aam
fimul
out
dec
rcr
leave
jns
sub
hlt
push
cmp
pop
sub
dec
movs
ret
std
mov
lods
or
cmp
push
lods
inc
lock
pushf
xchg
mov
lock
aad
and
and
sbb
js
imul
adc
pop
lock
pop
jg
jbe
ja
adc
aad
jecxz
xchg
nop
test
pushf
in
adc
lock
aam
and
adc
cmps
and
and
and
loope
xor
out
int
add
cli
popf
retf
mov
or
out
cdq
es
pop
or
jp
jle
call
leave
and
mov
mov
xchg
xchg
sub
or
xor
pop
sub
cwde
ror
arpl
inc
ins
dec
pop
adc
jnp
cmp
out
sahf
or
in
js
fst
inc
(bad)
repnz
inc
mov
and
or
cwde
aad
jns
cdq
inc
pop
fnstenv
imul
or
pop
js
mov
jae
inc
and
jmp
cs
sub
jle
lock
ins
push
mov
or
ins
push
push
popa
mov
mov
mov
loopne
inc
inc
daa
cld
stc
or
pcmpeqw
mov
in
jg
sub
pop
test
icebp
push
outs
lea
push
and
sub
int3
retf
push
inc
or
push
(bad)
aad
jns
sbb
pop
in
test
or
(bad)
aam
mov
mov
lock
adc
pop
and
push
push
std
jmp
(bad)
enter
scas
(bad)
or
cli
and
and
pop
and
dec
pushf
mov
or
shr
xchg
pop
or
lock
ss
mov
jp
pushf
shl
js
mov
pop
js
lods
inc
cmps
repnz
add
fs
movs
mov
cmc
jb
js
iret
repz
sub
(bad)
fistp
stos
nop
inc
dec
test
xchg
imul
xchg
xchg
test
into
sbb
daa
stos
in
mov
mov
add
iret
dec
lds
xor
push
dec
iret
adc
inc
add
xor
mov
mov
arpl
push
mov
push
in
sahf
addr16
pop
fwait
jp
lods
and
rol
mov
pop
sbb
mov
adc
cmp
pushf
icebp
int
fisubr
sub
push
adc
mov
jb
fist
adc
or
shl
adc
fadd
sbb
or
lods
dec
inc
add
push
fnstenv
sahf
je
add
aas
fstp
sub
jb
dec
mov
push
loop
mov
push
sbb
cmps
(bad)
std
fild
dec
adc
leave
test
inc
jg
mov
xor
xchg
jecxz
pop
jmp
mov
inc
(bad)
repnz
add
dec
test
into
or
mov
cmp
dec
lods
cld
hlt
dec
ret
cmp
aaa
faddp
sbb
and
cmp
pusha
outs
lock
sbb
pop
sub
xchg
outs
sub
scas
aaa
scas
les
pop
lods
cmp
dec
lods
and
mov
push
test
sub
cmp
ins
push
add
mov
pop
push
scas
mov
inc
jne
jp
sbb
daa
inc
jne
sti
pop
sar
cmps
scas
sbb
out
repnz
jmp
sbb
xchg
test
aam
push
jno
arpl
push
adc
mov
jmp
fwait
xchg
sbb
inc
xor
xchg
inc
mov
add
jns
aam
jb
retf
add
push
ror
std
lods
lock
aam
xchg
mov
cmp
pop
jbe
imul
ins
movs
jle
scas
lahf
ds
sti
movhps
mov
sub
and
xor
call
sub
ins
imul
mov
cmp
jns
js
add
mov
sbb
jmp
dec
leave
mov
pop
inc
lods
test
xchg
push
mov
jb
sbb
test
mov
and
push
add
mov
jo
adc
cmc
std
inc
test
enter
and
xlat
mov
mov
pop
jnp
aam
jge
pop
push
mov
(bad)
in
shl
add
xchg
or
lods
jmp
add
dec
dec
mov
aam
shr
loope
shl
xchg
jmp
push
sbb
fcomp
mov
xchg
fucomip
cmp
cmc
cmp
mov
imul
mov
dec
add
adc
jmp
xchg
and
mov
test
shl
(bad)
add
cmp
shr
cmp
xor
outs
(bad)
sub
(bad)
push
cmc
in
lods
(bad)
in
jl
cmp
xor
or
in
aad
cld
jo
and
sbb
js
fdivr
mov
in
pop
fld
jno
lea
or
fild
xchg
or
lods
xlat
test
fld
pusha
push
cdq
(bad)
fidivr
ins
adc
push
mov
outs
add
lods
loope
pop
mov
(bad)
data16
mov
push
mov
sbb
sbb
jbe
inc
ss
cmp
stos
mov
mov
leave
dec
fcomp
cmp
js
sub
(bad)
jnp
pop
cmp
mov
(bad)
cli
jbe
lea
jns
rol
mov
call
js
not
sahf
ss
inc
lods
bound
inc
cmps
repnz
add
fnstcw
cmp
add
dec
sub
jne
nop
dec
mov
inc
fsubr
sub
addr16
stos
xor
adc
imul
cmp
mov
xchg
ss
lds
fdiv
test
mov
or
retf
fisub
pop
and
xchg
cmp
js
test
lds
aas
lahf
jo
sub
call
cmc
in
mov
xor
and
das
adc
dec
xchg
out
inc
cmps
shl
mov
mov
or
ins
das
pop
sbb
idiv
inc
mov
pop
sbb
sbb
cmps
sar
and
add
mov
sub
pop
test
dec
pusha
mov
cmp
shl
adc
dec
in
out
(bad)
iret
xor
lods
adc
sti
pop
xor
in
stos
pop
loop
shl
push
loope
or
pop
adc
push
movs
dec
adc
in
hlt
pop
sub
les
adc
das
pop
cld
pop
jecxz
jmp
fidivr
inc
add
aas
ins
mov
and
aas
adc
cmc
bound
xchg
fcom
(bad)
stc
mov
test
imul
jne
and
sbb
fnstcw
jecxz
enter
cmp
mov
mov
cmp
fdivr
in
jb
cmp
mov
and
or
xor
and
push
cmps
fsub
stc
ds
fcom
ins
test
retf
or
xor
push
aad
adc
push
pop
out
iret
ret
and
out
mov
inc
int
sbb
xor
retf
add
in
jl
out
mov
pop
loopne
shl
cwde
cwde
cdq
test
lds
mov
pushf
or
dec
js
add
sbb
adc
cld
jge
mov
dec
fld
pusha
bound
call
inc
jne
pop
(bad)
dec
cld
lea
add
cmps
mov
sahf
addr16
sbb
pop
mov
shl
repz
xor
(bad)
cmp
xchg
cmp
int
out
sbb
mov
cmp
xor
scas
int3
retf
and
mov
adc
icebp
xor
and
and
push
data16
adc
ret
lods
or
and
and
cwde
xchg
inc
adc
adc
mov
or
popa
push
push
inc
adc
jo
int3
retf
and
mov
adc
icebp
xor
and
and
push
data16
adc
ret
lods
or
and
and
cwde
xchg
inc
adc
adc
mov
or
popa
push
push
inc
adc
jo
int3
retf
and
mov
adc
icebp
xor
and
and
adc
clc
lock
enter
test
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fisttp
add
add
or
or
add
or
add
add
add
add
push
add
add
cs
daa
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
or
inc
inc
push
js
in
popf
fst
mov
movs
mov
faddp
aam
adc
data16
test
and
out
mov
das
movs
sbb
das
inc
enter
test
enter
and
nop
adc
pop
sbb
and
lods
or
push
or
and
test
mov
repz
cli
cld
scas
scas
adc
sub
jg
jge
std
sti
div
xor
(bad)
cmp
inc
mov
xor
jns
(bad)
sub
mov
jmp
(bad)
iret
inc
or
mov
mov
dec
out
xchg
pop
cli
cli
xor
mov
(bad)
ds
xchg
(bad)
sub
jmp
(bad)
iret
xchg
xchg
mov
arpl
xchg
xchg
push
ja
cmps
daa
scas
mov
movs
imul
mov
fsubrp
(bad)
or
(bad)
ins
js
or
in
(bad)
in
push
pushf
jp
dec
sahf
mov
mov
fidiv
mov
inc
loope
sub
in
rol
add
cmp
ficomp
add
call
hlt
test
icebp
(bad)
cmp
adc
pop
cmp
lods
add
xchg
in
(bad)
jmp
jmp
jle
test
xor
les
xlat
add
popa
cmp
cmp
mov
cmp
pop
les
jae
ret
add
enter
scas
ror
mov
gs
cmp
fstp
jmp
addr16
adc
sub
push
loop
and
in
jne
lock
cmp
push
into
enter
jge
pop
rcr
pop
dec
mov
dec
mov
icebp
push
loope
in
(bad)
enter
sti
inc
popa
cwde
ja
pusha
xchg
cs
push
fs
into
sub
ins
xchg
fbstp
mov
inc
fnstenv
iret
aad
(bad)
pop
mov
xchg
std
jnp
sar
mov
arpl
call
jb
adc
mov
lds
jo
(bad)
les
(bad)
retf
fwait
sti
sar
mov
push
sti
mov
ins
cmps
sub
lods
fxch
int
push
mov
and
repz
ret
pop
or
into
xchg
mov
adc
mov
add
jecxz
mov
jmp
mov
bnd
pop
pushf
mov
ja
mov
xor
(bad)
xor
jae
jno
push
add
and
(bad)
ins
scas
add
arpl
sub
clc
cmp
inc
mov
inc
iret
xor
pop
sub
int3
mov
aam
sbb
pushf
jb
lock
dec
jbe
jb
cmp
inc
(bad)
addr16
or
movs
inc
call
(bad)
sahf
ss
cmp
jmp
addr16
aas
les
xlat
sub
leave
pop
xlat
das
cdq
mov
in
addr16
aas
or
fadd
aaa
mov
(bad)
ror
enter
(bad)
adc
push
in
rcr
jp
test
clc
push
fisubr
call
xor
mov
and
pop
aad
sbb
mov
clc
into
cmp
push
fxch
sub
inc
sub
inc
test
int3
dec
sbb
js
jle
fistp
in
imul
xchg
dec
retf
cli
shl
and
adc
ss
and
ja
sub
test
scas
inc
cmp
shl
xchg
mov
mov
shl
jno
jbe
xor
push
lods
push
push
and
xor
es
mov
int3
les
out
adc
xchg
lds
cwde
xor
adc
test
xor
mov
jns
call
pop
(bad)
sub
cli
stc
out
call
sub
popf
mov
pushf
clc
test
xor
sbb
test
cmp
(bad)
(bad)
retf
adc
cmp
and
scas
mov
push
add
or
inc
adc
sbb
mov
push
out
cdq
cmp
inc
push
xchg
pop
adc
add
inc
inc
enter
and
nop
adc
pop
sbb
and
lods
or
push
or
and
test
enter
and
nop
adc
nop
cld
lea
add
cmp
and
fidivr
repnz
mov
pop
sub
pop
(bad)
leave
jnp
cmp
cmp
into
out
ja
movs
jae
jle
movs
std
leave
mov
sub
jg
icebp
xchg
nop
cmp
mov
aaa
test
cmp
lock
push
aam
icebp
adc
jp
mov
xchg
pop
inc
add
or
lods
lahf
or
xor
push
dec
cmp
cmp
cdq
rcl
jp
xor
test
div
mov
cli
(bad)
jge
add
mov
loope
inc
and
mov
je
std
sub
std
stc
cmps
mov
jns
xor
or
outs
les
daa
push
or
add
fst
hlt
scas
push
lahf
scas
lods
jo
xchg
add
mov
dec
fsubrp
jne
sub
mov
scas
es
test
mov
sbb
js
push
dec
mov
cs
jnp
push
inc
std
add
push
loope
aaa
rcr
das
xchg
mov
or
sub
inc
inc
loope
enter
iret
pop
adc
fnsave
test
jae
aas
jae
pushf
add
and
jmp
dec
das
clc
mov
inc
xchg
cmp
or
mov
call
loope
nop
sar
inc
sub
jae
call
popa
fs
cmp
rol
lods
xlat
fwait
sub
push
sub
mov
loope
inc
loope
nop
pusha
cmp
jno
sahf
mov
pop
mov
popf
dec
pop
xchg
mov
adc
pop
xchg
ret
std
add
sub
mov
ret
mov
(bad)
sbb
pop
fistp
stc
pushf
adc
mov
and
ror
adc
daa
arpl
jns
and
loop
mov
push
mov
mov
(bad)
mov
dec
mov
inc
pop
mov
pop
jbe
daa
push
js
fsub
and
imul
xchg
out
dec
add
mov
js
jle
pop
aaa
aas
sbb
or
adc
cmp
scas
or
sbb
mov
dec
je
ins
xor
xchg
ins
jmp
cmp
pop
adc
(bad)
sub
mov
scas
pop
mov
jbe
mov
inc
mov
add
lahf
pusha
and
xchg
adc
neg
adc
add
dec
loopne
cmps
test
mul
arpl
mov
cmp
dec
cmps
xor
js
lods
xchg
dec
or
push
fist
dec
fidivr
cwde
mov
jne
fwait
mov
mov
mov
icebp
mov
cli
sbb
in
lods
or
pop
in
lods
(bad)
test
jae
fwait
mov
or
mov
pop
loope
mov
ret
push
push
jnp
dec
mov
push
mov
retf
mov
jmp
popf
lds
jl
mov
push
dec
pop
nop
jl
out
mov
nop
mov
inc
inc
enter
and
nop
adc
pop
sbb
and
lods
or
push
or
and
test
enter
and
nop
adc
pop
sbb
and
sub
fcmovnbe
das
in
test
iret
stos
movs
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
dec
inc
or
add
or
add
add
ror
add
add
and
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
les
add
les
xchg
sub
sbb
add
push
js
in
std
dec
mov
ficom
or
add
jo
jne
adc
adc
fisttp
cmp
mul
cwde
addr16
cmp
dec
push
mov
sbb
clc
imul
adc
stc
pop
addr16
dec
(bad)
out
pop
inc
or
test
inc
or
test
inc
or
test
cmp
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
dec
ins
inc
or
test
inc
or
test
inc
or
mov
sar
loop
(bad)
cld
cmps
dec
jl
enter
mov
inc
or
test
inc
or
test
mul
ret
movs
inc
icebp
inc
lock
jns
js
inc
enter
mov
adc
push
in
loop
das
ins
loopne
jg
repz
or
test
inc
or
pop
clc
cmp
add
test
cs
aas
nop
lds
fadd
mov
pop
mov
lea
adc
inc
sti
lock
dec
xlat
jg
std
cmp
scas
jg
retf
jp
dec
mov
loop
mov
out
sbb
lahf
lds
in
add
call
xchg
clc
or
push
int
or
(bad)
aam
test
adc
test
sub
rol
xchg
cmc
mov
mov
push
scas
xor
mov
xchg
mov
adc
movs
(bad)
jecxz
mov
jo
inc
pushf
xor
repz
not
pop
cld
adc
xor
pop
cmps
mov
lods
mov
call
lock
cmp
imul
outs
lea
retf
pop
repz
call
and
stos
pop
sub
cmp
icebp
popw
xor
(bad)
pusha
inc
sbb
(bad)
sub
ins
lea
jecxz
mov
sbb
addr16
dec
int3
std
test
lods
cmp
in
cmp
jge
pop
or
(bad)
mov
jno
jle
jl
scas
add
mov
loope
shl
mov
xlat
movs
xor
sbb
push
test
cli
mov
sub
out
sub
or
jns
out
push
(bad)
int
jmp
fld
fsubrp
dec
lds
aad
inc
cmc
dec
cli
ins
stc
iret
mov
inc
adc
shl
movs
mov
push
repnz
wbinvd
fscale
fldenv
(bad)
enterw
jp
xor
xchg
jno
(bad)
mov
div
mov
mov
jno
inc
pushf
mov
jl
(bad)
xchg
daa
popf
mov
aad
jo
ja
jo
jnp
sar
out
pop
fistp
scas
lock
iret
enter
ins
cmp
es
(bad)
ficom
jnp
fs
out
frstor
adc
push
mov
mov
out
leave
clc
jae
daa
iret
fwait
and
popf
stc
xchg
repz
cmp
cmc
in
out
mov
shl
fild
out
(bad)
rcr
cmp
sbb
enter
adc
lds
repnz
je
retf
rol
ins
retf
jg
loop
push
jle
ja
in
sti
loopne
mov
icebp
ds
emms
fdiv
push
jno
fnstenv
ja
imul
jge
xchg
mov
and
cli
dec
jnp
jbe
dec
std
fistp
adc
cld
fcom
jne
cli
jne
jle
std
sahf
push
xchg
aad
lds
test
addr16
sti
cwde
stc
fs
cmp
sbb
mov
jnp
push
repnz
add
fnstsw
pop
pop
jg
jl
jecxz
stc
and
mov
sar
cmc
ins
stc
imul
mov
add
js
adc
inc
aas
jecxz
or
popf
pop
and
fimul
fwait
push
lods
mov
fisttp
in
xchg
and
retf
sbb
(bad)
sar
jecxz
and
jnp
(bad)
pop
cmp
dec
je
test
std
sahf
mov
clc
test
jmp
mov
fnsave
xchg
cmp
(bad)
sti
adc
push
icebp
sbb
mov
push
aas
mov
scas
inc
int3
inc
cmp
mov
jne
fnstcw
aam
clc
mov
mov
mov
(bad)
icebp
jbe
scas
cmp
cli
cmp
lock
stc
loop
xchg
push
bswap
iret
sbb
mov
jnp
lahf
aas
pop
stc
hlt
mov
pop
repz
out
cwde
jmp
jb
fistp
ret
jae
icebp
repz
cdq
out
xlat
mov
pop
test
scas
jns
ja
test
retf
mov
mov
xor
idiv
nop
in
cmp
mov
pop
inc
mov
pop
and
sbb
jmp
ins
test
outs
pop
das
mov
push
out
je
mov
fcmovu
mov
adc
movs
scas
xor
movs
inc
stc
mov
pop
xlat
mov
cld
jae
xor
out
out
jo
jbe
out
or
int
iret
movs
jmp
push
out
arpl
fistp
cmp
cmps
xor
push
aad
mov
ins
cdq
cmps
fnstsw
cdq
enter
push
daa
imul
bound
(bad)
movs
jns
stc
add
popf
mov
jmp
xor
popf
call
ja
call
(bad)
out
mov
stc
cmps
stc
inc
cmp
(bad)
sbb
pop
mov
test
cli
mov
fsubr
jmp
mov
enter
je
(bad)
retf
xor
daa
jo
xor
adc
int3
mov
mov
dec
jecxz
sbb
sbb
and
or
push
jae
xor
jae
iret
cmps
pop
inc
lods
cdq
into
jge
hlt
pop
ins
pop
fwait
mov
shl
xor
cmp
lock
aad
cmp
jge
ds
cdq
ds
pop
mov
jae
sub
ret
jmp
lods
das
xlat
add
(bad)
lods
push
lods
imul
jae
in
or
(bad)
ins
pushf
mov
clc
xchg
arpl
cmp
cmp
pop
xchg
mov
cmc
call
pop
bound
lods
clc
leave
stc
inc
cmp
mov
repz
fs
xor
xchg
add
xchg
stc
ds
fild
daa
and
or
jge
ror
pushf
add
push
loop
fs
(bad)
jge
cmp
icebp
jmp
addr16
sub
popf
mov
xor
int3
(bad)
pushf
in
mov
lods
mov
movs
adc
cmp
out
sbb
popf
cmp
(bad)
mov
js
les
sbb
cmp
int
out
xchg
jnp
int3
sbb
mov
repnz
jl
into
lods
jg
pop
cmp
ror
rcl
cmp
xlat
addr16
out
jecxz
jl
pop
aaa
add
out
ret
addr16
jnp
adc
jo
nop
push
xchg
arpl
out
cli
sub
xchg
pop
cld
and
in
or
xor
mov
jg
fcom
iret
cmc
mov
call
jns
out
lods
mov
xchg
arpl
xor
cwde
imul
daa
xlat
sbb
xchg
out
or
ds
jno
jecxz
mov
mov
jns
fcom
xor
out
cmp
iret
push
js
push
(bad)
jbe
repz
xchg
push
mov
lods
jns
sbb
sub
jp
pop
test
popf
adc
data16
dec
repz
pushf
mov
cmp
std
or
and
lahf
lea
mov
cmp
leave
mov
or
das
xor
iret
lods
lods
add
pushf
rcr
mov
scas
data16
arpl
ins
mov
scas
mov
pop
jno
nop
cdq
scas
inc
lds
mov
out
jmp
jne
iret
mov
(bad)
int
fnstcw
les
xor
sbb
cwde
pop
xor
add
pop
bound
(bad)
cmp
(bad)
pop
mov
sbb
jnp
mov
lea
scas
mov
push
adc
lock
fisubr
pop
clc
jno
vmread
pusha
sbb
cmp
(bad)
sbb
popf
call
addr16
mov
mov
(bad)
push
bound
mov
out
cmp
jne
loop
sbb
call
pop
fld
fist
(bad)
xchg
aad
push
sbb
scas
ror
div
nop
sub
in
cmp
jae
cmp
and
(bad)
xor
or
push
in
ins
xor
js
(bad)
mov
lods
lods
inc
sbb
adc
retf
pop
mov
pop
sub
ja
adc
jmp
pop
sub
xor
mov
fist
call
dec
push
xor
ja
pop
sbb
call
xchg
pop
add
hlt
add
jae
lahf
dec
mov
xlat
xor
das
out
std
enter
xor
fiadd
sbb
(bad)
fcomp
lods
shr
add
pusha
mov
cmp
sub
outs
pop
or
dec
daa
outs
(bad)
iret
shr
ins
adc
sbb
pop
ror
push
nop
imul
int3
mov
(bad)
mov
xor
mov
jbe
xchg
adc
xchg
jmp
fwait
idiv
pushf
pop
jbe
leave
(bad)
and
ds
xor
aas
jg
xlat
in
mov
call
xchg
xor
mov
jmp
aas
mov
mov
pop
fdiv
xchg
outs
(bad)
test
add
cld
pop
int
cwde
lods
inc
int
xor
iret
(bad)
leave
cld
into
cld
retf
int
add
and
xchg
or
pop
xor
inc
into
fstp
(bad)
call
jl
push
add
pop
inc
mov
pop
inc
(bad)
xor
(bad)
enter
xor
jno
mov
sbb
mov
sbb
out
(bad)
arpl
push
scas
data16
cmp
cmp
call
imul
iret
out
jmp
pop
fwait
jge
pop
jno
fnstcw
js
daa
inc
jecxz
mov
clc
bound
das
pop
push
sti
loope
cli
jl
mov
push
push
stc
add
xor
aad
out
es
xor
xor
xor
(bad)
fs
sub
imul
out
jmp
or
rcl
cmp
mov
pop
cmp
xchg
jge
dec
cmp
cmp
jge
std
test
not
dec
inc
push
or
pop
add
fadd
out
inc
bound
daa
out
mov
and
jbe
not
shl
iret
cmp
stc
xchg
stc
leave
addr16
or
ds
stc
popa
dec
pop
fsubr
mov
sub
adc
add
mov
jae
(bad)
cdq
shl
jp
mov
jmp
(bad)
cld
call
or
lea
out
int
in
mov
pop
ins
xor
mov
(bad)
mov
sub
push
fwait
mov
xor
jle
sub
push
js
cmp
not
ins
lods
inc
fsubr
ret
lahf
scas
shl
cmps
jmp
in
or
jle
xor
sar
sahf
cmp
lods
fnstcw
(bad)
sahf
cmc
ins
lods
dec
das
mov
les
sub
xchg
test
sub
jmp
cmps
dec
fsub
jmp
jecxz
outs
xchg
push
int
or
cmp
into
mov
push
push
jmp
fld
fwait
stc
popf
popa
int
cmp
mov
out
ror
pushf
rol
out
mov
in
loop
mov
adc
call
jl
sub
pop
ins
inc
mov
out
pop
ins
fadd
fiadd
test
scas
lds
(bad)
sahf
sub
scas
dec
hlt
jge
movntps
arpl
call
jmp
dec
mov
mov
mov
pop
shr
fidivr
ret
push
mov
add
clc
mov
scas
xor
shr
rol
mov
push
jmp
cwde
and
adc
clc
inc
test
test
sub
pusha
push
arpl
mov
jecxz
inc
pop
mov
sti
mov
fstp
lods
cmp
aas
pop
repz
jmp
dec
pop
sub
ins
mov
xchg
imul
scas
jmp
aad
fldenv
add
cmc
imul
mov
pop
mov
xlat
mov
aam
iret
rol
inc
sbb
out
push
dec
call
ins
sahf
push
movntq
out
lahf
cdq
mov
xor
adc
cs
test
les
jno
ins
cdq
push
jl
les
fsubr
inc
movs
cmp
sbb
div
pop
jae
cmps
pop
jecxz
or
sbb
outs
pop
aas
icebp
adc
call
sub
sbb
inc
stos
sub
xor
(bad)
mov
ja
repnz
jmp
outs
aad
icebp
addr16
mov
cmps
push
lods
sbb
inc
xchg
inc
jbe
iret
retf
or
mov
inc
pop
mov
std
lea
jle
xchg
sub
mov
int
cdq
(bad)
movs
pop
sbb
or
sti
or
mov
or
stc
call
nop
lea
cdq
iret
cdq
neg
pop
iret
call
into
int3
outs
imul
jne
pop
aaa
mov
lods
xchg
in
sub
xor
sbb
push
neg
daa
out
mov
pop
jno
in
(bad)
call
xor
ins
hlt
add
xor
mov
cmp
jno
addr16
pop
in
xchg
out
push
fldenv
cmc
jo
pop
mov
jo
test
ins
add
jle
addr16
iret
sti
retf
mov
xchg
repz
popf
xor
jmp
hlt
and
mov
push
inc
imul
jecxz
sbb
pop
ret
rcl
popa
cmps
jmp
xor
outs
mov
std
pop
pop
xchg
pop
repz
hlt
aaa
fidiv
pop
xor
jae
jge
cmp
rcr
stos
xor
arpl
sub
sbb
push
lods
mov
and
jae
mov
pushf
sbb
xor
call
mov
add
es
fs
jno
sti
out
loopne
adc
stc
cmc
jecxz
ficomp
push
and
cld
dec
xor
mov
pop
(bad)
dec
(bad)
mov
repz
mov
xchg
dec
sbb
pusha
sbb
pusha
dec
in
rep
cdq
mov
std
addr16
lods
jns
lods
or
iret
cmp
sbb
sub
xor
mov
hlt
xor
push
and
cmp
xor
in
sub
push
sbb
fiadd
mov
pop
push
out
jno
push
inc
push
cmps
mov
sahf
sbb
dec
xor
int
(bad)
adc
mov
dec
pop
lods
lahf
sub
ror
clc
sbb
cmp
std
jae
lods
mov
push
mov
les
inc
xor
xor
ret
inc
cld
cmp
pop
dec
sbb
out
cli
or
call
sub
ja
cmp
sub
pop
xlat
add
jecxz
jl
cmp
cli
dec
sub
loopne
mov
add
iret
push
cmp
pop
cdq
scas
pop
dec
and
jno
imul
fadd
test
lods
jns
jmp
lds
push
dec
xor
mov
jne
sub
xor
data16
fsubr
inc
pop
jecxz
mov
call
pop
imul
mov
add
push
stc
push
lods
jns
repz
loope
inc
in
fstp
(bad)
mul
push
mov
push
aad
test
sti
jnp
imul
pusha
daa
cdq
fidivr
ror
(bad)
or
mov
test
enter
pop
mov
into
aad
sbb
out
arpl
push
add
mov
add
jl
fucomi
out
pushf
fcmovnu
call
addr16
jge
idiv
lock
xor
xlat
icebp
mov
ret
dec
sbb
and
(bad)
and
cmp
cld
(bad)
fmul
pop
popf
pop
stos
xor
call
rcr
arpl
shr
imul
jbe
pop
and
mov
out
add
and
(bad)
add
push
mov
stos
loopne
fnstenv
fs
lahf
jnp
ret
int3
mov
mov
add
jae
jle
(bad)
sahf
add
mov
and
ret
ret
js
fdiv
fcmove
hlt
sub
xchg
into
fisubr
cmc
jl
sahf
sbb
sar
retf
jae
and
(bad)
lods
cmp
(bad)
loopne
dec
call
mov
mov
cli
sbb
mov
data16
add
cli
gs
jg
ficomp
aad
(bad)
pushf
adc
sti
xchg
shl
jae
outs
mov
ds
pop
or
cmp
clc
adc
jl
jo
cmps
repz
jl
fwait
out
dec
xchg
clc
scas
add
jns
call
inc
repz
jl
lods
les
cmp
cmp
ja
outs
ds
and
ret
jecxz
je
jg
jae
inc
ins
mul
int
cmp
pop
sbb
fsubr
xchg
pusha
ins
jne
loope
out
(bad)
iret
mov
stos
jae
ds
inc
jg
mov
dec
cmp
jecxz
jge
icebp
arpl
(bad)
add
ret
push
call
jl
push
mov
mov
mov
icebp
in
dec
xor
mov
adc
ret
pop
fidivr
and
je
es
dec
mov
jl
pop
nop
leave
and
sub
and
or
in
das
inc
cld
sbb
inc
push
and
add
cli
add
pop
std
cld
mov
fist
cmp
popa
inc
pop
mov
pop
aad
ds
mov
add
push
jne
stos
pop
loopne
sbb
jb
in
jecxz
cwde
lods
fs
neg
scas
mov
cmp
movs
cmp
jae
arpl
add
mov
mov
int3
js
xor
sbb
pop
cmc
inc
sbb
retf
mov
push
cli
les
push
ror
cmps
push
pop
(bad)
pop
or
jl
sahf
add
test
int3
fsqrt
jle
iret
cmp
cld
mov
int3
out
pop
int3
cmp
mov
jno
mov
dec
sahf
stos
pop
mov
xor
mov
cmps
lds
jge
mov
pop
nop
cmp
ins
mov
bnd
xchg
inc
lods
jns
cmc
arpl
into
sbb
push
in
test
(bad)
aad
xor
jge
mov
lea
lea
(bad)
jbe
jecxz
jno
mul
sub
push
xlat
in
fmulp
mov
scas
ins
lods
cmps
pop
jecxz
or
outs
sub
daa
mov
jmp
(bad)
in
cdq
dec
popf
pop
inc
out
icebp
repz
xor
mov
movs
push
hlt
xchg
inc
cmp
je
add
scas
sbb
pop
push
in
(bad)
aad
xor
jp
fmul
popf
mov
addr16
cwde
daa
fidiv
idiv
xchg
xor
in
lods
mov
pop
jmp
imul
out
(bad)
sahf
xchg
mov
sub
jnp
mul
sbb
lahf
rcr
cld
cmp
push
dec
cmp
mov
fld
bound
pop
mov
dec
lods
mov
ins
int
(bad)
pop
jae
fmul
push
sti
test
jbe
fdiv
(bad)
xor
fisttp
pop
mov
or
icebp
div
lea
shr
into
cmp
movs
cdq
xor
and
outs
inc
sbb
pop
fadd
(bad)
sub
cmp
fld
fst
mov
mov
retf
jle
pop
pop
pop
inc
jnp
jae
pop
sti
cmp
ror
cld
ja
out
jg
mov
xlat
fsubr
sti
leave
call
jl
jne
mov
add
xchg
sbb
in
out
mov
ds
cmp
mov
outs
ds
inc
aad
lahf
outs
out
jge
push
sahf
jl
data16
xlat
popf
repz
stos
cmp
xor
dec
mov
pavgw
in
push
sahf
jp
imul
xor
mov
mov
add
mov
xlat
jp
pcmpeqd
fwait
repz
cdq
sub
(bad)
outs
cmc
mov
push
mov
out
mov
ds
out
push
inc
jnp
pop
loope
(bad)
les
out
push
cli
jns
xorps
cs
sbb
mov
and
mov
adc
mov
add
mov
sahf
mov
std
loop
cmp
sub
icebp
test
push
nop
outs
std
jl
inc
in
(bad)
cmp
in
int
push
idiv
int3
mov
call
sub
mov
sar
iret
sahf
call
fidivr
jmp
xchg
fnstenvw
shl
test
in
mov
cmp
push
nop
cmc
in
in
mov
push
addr16
pop
adc
(bad)
dec
daa
pop
cmp
out
hlt
jae
iret
xchg
fincstp
fcomp
pop
int
fdivr
sub
call
mov
lahf
xor
stc
xor
mov
into
push
aam
push
jnp
push
repnz
cmp
jge
pop
popw
xchg
adc
xlat
fstp
ret
ror
inc
ja
inc
and
pop
mov
outs
and
and
int
std
jmp
test
into
cs
clc
fdivr
mov
jbe
cdq
shr
sti
jbe
inc
in
or
pop
aas
jge
jp
mov
lahf
sbb
mov
or
mov
jg
idiv
loop
mov
pop
int
dec
(bad)
pop
mov
in
pop
out
je
jne
ficomp
fwait
xor
in
lods
sub
iret
jmp
pop
das
jmp
sbb
into
jge
ja
push
std
faddp
std
push
fist
cmp
out
sbb
or
jp
sahf
ds
lods
out
xor
pop
movs
arpl
(bad)
mov
jmp
jecxz
js
xor
(bad)
mov
in
ja
xor
aaa
inc
inc
ret
call
mov
xor
fsub
dec
jl
xchg
shl
mov
mov
sbb
(bad)
mov
pop
sbb
fs
cdq
pop
in
cdq
fstp
jbe
adc
push
pop
repz
(bad)
call
mov
data16
div
test
fsubr
out
in
mov
out
add
and
loop
retf
mov
sbb
cmp
jl
data16
mov
lods
aas
repnz
jecxz
loopne
cmpps
push
cmp
sub
mul
dec
sub
aas
fs
out
gs
jns
cmc
stc
mov
pop
repz
arpl
out
xor
sub
inc
pushf
outs
(bad)
push
(bad)
mov
nop
jb
pop
and
out
lods
jg
ja
cmps
sbb
sub
cmp
loopne
pop
push
arpl
mov
fucomi
je
into
aam
jmp
fstp
mov
shr
mov
ja
jnp
fsubr
iret
cdq
cmps
mov
add
data16
ja
call
out
jl
imul
popf
stc
dec
mov
test
std
cli
xor
cmp
jge
mov
jmp
dec
dec
dec
pop
xchg
sar
jne
out
std
fld
call
fprem
cmp
pop
mov
pop
mov
scas
add
pop
scas
and
std
inc
je
out
or
adc
lds
or
mov
shl
test
fwait
mov
jnp
inc
or
lods
ror
push
loop
cmp
fwait
ss
inc
or
test
inc
or
test
loop
push
mov
test
inc
or
test
inc
or
scas
and
adc
and
adc
pop
push
mov
test
inc
or
test
inc
or
scas
and
adc
and
adc
pop
push
mov
test
inc
or
test
inc
or
scas
and
adc
and
adc
pop
push
mov
test
inc
or
test
inc
or
scas
and
adc
and
adc
pop
push
mov
test
inc
or
test
inc
or
scas
and
adc
and
dec
ins
inc
or
(bad)
inc
or
test
fisttp
loop
mov
test
mov
imul
xchg
mov
push
inc
or
les
cld
inc
gs
das
lock
and
pop
stc
cmps
(bad)
pop
xchg
dec
cli
test
icebp
jg
mov
mov
cwde
sbb
call
mov
jmp
fmul
jmp
jnp
clc
shl
das
push
call
xchg
pop
clc
xchg
fsubr
push
or
ret
cmp
jle
ds
mov
mov
xchg
cs
sbb
js
(bad)
fbld
mov
test
icebp
xor
nop
pop
jno
inc
push
mov
add
cld
outs
sti
das
pop
sub
iret
push
mov
imul
jge
lods
pop
sbb
jle
mov
pop
cmp
mov
mov
clc
jle
mov
std
add
pusha
mov
jmp
jae
pushf
pop
repz
fild
mov
(bad)
scas
clc
cmp
pushf
push
mov
mov
out
out
iret
in
lods
outs
test
loope
fild
sub
int
int
popf
jne
cmp
mov
(bad)
rcr
jne
loop
mov
xor
mov
ja
sti
repnz
cmps
(bad)
call
mov
jg
mov
jmp
es
sub
data16
std
outs
loope
lods
stc
(bad)
sbb
mov
pop
jge
adc
cs
jnp
mov
lock
rol
jl
xchg
pop
repz
icebp
and
vlddqu
lds
outs
cmp
into
les
icebp
std
push
mov
stos
lock
mov
dec
popa
div
(bad)
stos
jge
rcr
pop
inc
push
stc
mov
in
std
cmp
pop
sub
lods
(bad)
push
cmp
pop
jge
jmp
adc
hlt
mov
lods
retf
pop
out
mov
lock
out
xchg
and
stos
repz
(bad)
xor
mov
pop
mov
dec
jl
imul
jecxz
push
out
(bad)
das
mov
sbb
lds
mov
sub
fld
jno
sar
mov
or
sahf
mov
enter
(bad)
mov
fild
jo
cmp
in
or
lock
stos
ds
(bad)
jne
mov
mov
cli
les
xchg
jae
lea
dec
jg
jl
out
adc
in
mov
call
out
mov
scas
xor
out
mov
jg
fsubp
fdivr
fwait
cmp
das
mov
jecxz
cmp
mov
push
into
xchg
mov
ret
jge
cmps
jp
mov
mov
sti
inc
aam
jno
movs
mov
push
into
jle
data16
in
lods
out
dec
clc
xor
jle
pop
jne
jle
xchg
jg
cmp
aaa
add
sahf
or
cs
mov
push
fld
das
retf
jg
and
icebp
neg
dec
push
scas
imul
dec
xlat
arpl
or
idiv
(bad)
retf
sar
out
neg
xor
xchg
cmp
cdq
mov
out
shl
xlat
call
fxch
jbe
add
ficomp
sbb
jge
int3
daa
enter
mov
mov
xchg
fist
mov
jmp
pop
bound
cld
mov
(bad)
test
in
gs
mov
jle
add
inc
fnsave
fs
fs
in
dec
pop
mov
shl
mov
test
clc
js
jle
les
bnd
cmps
call
ins
test
(bad)
mov
push
mov
aas
into
jge
in
sbb
mov
ds
pop
mov
push
ins
lods
aad
popa
lods
add
lock
mov
mov
push
mov
cmp
das
ficomp
sub
push
inc
pop
repz
mov
pop
mov
call
xor
xchg
lods
call
loop
pop
ins
stos
out
pop
je
fisub
jecxz
sbb
aaa
jle
lods
dec
mov
sub
mov
cmps
mov
pop
repz
stos
cmp
cmp
out
js
adc
push
fs
sub
sahf
clc
add
xchg
sbb
loopne
xor
mov
fdiv
scas
fidiv
jecxz
jmp
pop
lds
(bad)
cmp
test
mov
out
scas
(bad)
mov
jg
stos
mov
lods
lods
ja
outs
sub
push
out
jmp
in
test
addr16
xor
cmp
sbb
outs
xchg
cmp
lahf
cmp
out
clc
stc
or
aad
cmp
pop
xlat
mov
cld
jae
loop
cmp
jno
cmp
repnz
mov
jl
mov
into
sar
cmps
mov
out
inc
mul
(bad)
call
sti
fld
(bad)
mov
xchg
adc
pop
icebp
int
outs
lea
cmp
lea
mov
(bad)
xor
add
mov
jmp
sub
push
ficom
enter
xchg
repz
stos
int3
(bad)
dec
push
cmp
mov
ss
mov
retf
sbb
out
mov
cmp
imul
lods
fisttp
xor
inc
jmp
add
cmp
jnp
stos
(bad)
push
neg
sbb
mov
xor
mov
neg
pop
into
xor
push
retf
mov
arpl
xchg
ins
shr
mov
cdq
mov
idiv
(bad)
mov
sub
and
mov
aaa
push
hlt
and
in
sub
aas
add
repz
xor
std
ins
test
pop
cmp
mov
sbb
ret
sub
sahf
aad
out
pushf
mov
ds
xor
test
push
hlt
retf
adc
iret
jo
call
rcr
inc
inc
mov
std
mov
scas
jecxz
(bad)
sbb
cmp
sbb
daa
leave
push
ficomp
out
lods
dec
jne
jecxz
test
pop
jae
fistp
ins
mov
(bad)
mov
sti
sbb
addr16
dec
cwde
ret
fidivr
jmp
into
xor
sar
idiv
loop
sbb
cmp
cmp
pop
nop
adc
(bad)
aas
mov
or
pop
ret
inc
pop
sbb
stos
jns
lahf
cmc
fs
addr16
clc
ret
test
clc
ret
xor
sbb
jl
mov
mov
data16
aad
out
cmp
aad
mov
bound
push
cld
cmp
out
mov
js
std
in
cmps
xor
out
in
fadd
jmp
int3
popa
add
dec
sahf
aas
pop
sahf
lods
loopne
xor
sub
fwait
(bad)
in
sahf
ins
fcom
test
mov
(bad)
pop
xchg
cli
pop
or
mov
movntq
(bad)
cmp
xchg
imul
lea
arpl
aas
jnp
ret
call
imul
inc
ins
fnstsw
sbb
add
scas
stos
ins
lods
gs
outs
test
cmp
push
dec
xor
hlt
lock
lds
sahf
ins
fcomp
mul
hlt
mov
int3
mov
cld
sub
fs
cld
and
std
mov
xor
out
sbb
push
ins
inc
xchg
retf
ins
fmul
(bad)
mov
sahf
or
dec
not
mov
jp
push
push
stos
je
adc
aam
pop
push
inc
xor
in
icebp
mov
cld
fs
sahf
fnstcw
cmp
sahf
cmp
ins
jbe
add
mov
out
sub
into
call
(bad)
sub
addr16
fadd
adc
xchg
xor
mov
retf
loopne
jle
add
xor
push
xor
out
loopne
pop
fisttp
xchg
adc
repz
jge
adc
fcmovbe
out
data16
jbe
mov
sub
xor
cs
stc
jecxz
cmp
mov
call
jae
out
std
or
xor
xor
cld
into
out
sbb
inc
or
iret
xchg
cmp
adc
pusha
dec
cs
inc
in
fs
mov
mov
mov
pop
xor
vpsubq
adc
mov
(bad)
pop
add
jmp
(bad)
mov
add
xchg
pop
iret
arpl
mov
jmp
pop
mov
sbb
sbb
(bad)
mov
pop
outs
idiv
ins
sbb
clc
lods
outs
inc
hlt
xchg
int3
hlt
fwait
lds
cmp
(bad)
bound
add
icebp
arpl
es
pop
repz
stc
shl
ja
add
psrad
pop
std
push
mov
push
aas
xor
push
pop
mov
ins
jl
xor
imul
call
or
lods
clc
dec
inc
mov
ins
mov
imul
mov
call
mov
jmp
fimul
movs
inc
inc
aam
xlat
mov
mov
mov
cmp
sbb
lea
cli
call
inc
push
add
inc
test
push
jg
pop
cmp
loop
lahf
fnstcw
outs
add
sub
scas
jecxz
push
mov
sbb
sbb
cdq
adc
lea
sub
stos
cmp
pop
mov
cmp
fisubr
mov
cmp
das
popa
cmp
idiv
xchg
xor
mov
jae
movs
jne
inc
imul
rcr
in
lahf
lds
inc
in
sti
sub
daa
adc
mov
adc
mov
pop
inc
xor
or
hlt
jecxz
mov
fs
pusha
mov
adc
arpl
jp
(bad)
out
in
and
addr16
adc
(bad)
fnstcw
int
fsub
inc
mov
mov
mov
mov
repz
imul
sahf
rcl
js
out
fimul
mov
mov
int
test
sbb
sbb
cmp
xlat
pop
cmp
xor
test
inc
sbb
xchg
jg
lea
fs
dec
fist
push
pop
xchg
push
retf
xor
push
jne
shl
scas
inc
adc
in
cmc
icebp
icebp
lods
aam
in
loopne
and
stos
cmp
adc
sbb
inc
jno
mov
mov
jnp
sbb
js
dec
lods
icebp
or
add
scas
fld
outs
xchg
jle
jne
jecxz
aam
xlat
mov
or
ror
ret
mov
jbe
iretw
mov
jge
cmps
ror
imul
outs
dec
pop
fcmovnb
jns
repz
jno
push
std
xchg
or
shr
retf
cli
xor
cmp
ret
aas
pop
inc
(bad)
les
clc
mov
cmp
(bad)
aas
mov
loope
neg
sbb
sbb
test
div
sahf
scas
(bad)
(bad)
mov
inc
inc
push
or
cmps
sbb
sbb
je
jge
(bad)
sar
ja
cmp
mov
and
jbe
sbb
ss
in
sbb
jl
xor
lods
(bad)
push
mov
(bad)
fs
dec
pop
xlat
stos
mov
xchg
pop
pop
(bad)
pop
and
sbb
mov
in
pop
mov
cli
or
mov
fdiv
lods
das
repnz
in
xor
jmp
adc
popa
pop
outs
jle
cld
mov
push
jae
push
jb
stos
cwde
call
clc
addr16
add
and
push
dec
cmps
pop
data16
adc
(bad)
xor
sub
and
jmp
sti
jno
sbb
fisttp
imul
jbe
mov
cmp
repz
and
jmp
(bad)
jb
mov
out
mov
lods
jns
xor
retf
lds
mov
aam
daa
es
arpl
inc
pop
inc
jle
xchg
dec
mov
hlt
rcr
jbe
cmp
js
stc
mov
inc
pop
sub
pop
mov
test
dec
lods
jns
jge
sahf
sub
cmp
faddp
data16
jg
std
adc
xor
shl
cmp
push
fldcw
loope
in
jecxz
aas
scas
ret
sub
mov
inc
push
je
shr
lods
das
arpl
pop
jae
std
adc
loop
mov
iret
icebp
fs
xchg
xlat
cs
mov
sbb
ins
add
push
neg
pop
sbb
(bad)
lahf
stos
retf
jl
test
movs
repnz
rol
mov
scas
repnz
scas
addr16
mov
push
jno
sbb
mov
test
jl
ret
call
(bad)
push
stc
punpcklbw
les
popf
into
fcom
stos
(bad)
push
dec
fild
mov
sti
cmp
mov
sbb
jo
dec
popf
push
xor
rcr
mov
jne
mov
imul
push
pop
into
cmp
les
jl
repz
ret
stc
lock
imul
fsub
cmps
mov
cwde
sbb
sbb
loope
jle
cli
in
adc
test
inc
les
jecxz
icebp
iret
call
lods
or
addr16
outs
jmp
mov
mov
xor
cmp
pop
jecxz
stos
lods
in
call
mov
(bad)
dec
lods
jns
cmp
cmc
je
js
ss
stos
xor
cmc
retf
cli
xor
jl
push
add
inc
into
out
mov
(bad)
add
sbb
inc
cmc
fs
lds
mov
stos
sub
sub
adc
daa
ret
pop
adc
cli
pop
xchg
pop
mov
les
pop
sbb
int
js
cmp
mov
xchg
(bad)
jecxz
sbb
int3
repnz
fistp
ds
ret
clc
inc
hlt
(bad)
jbe
add
add
pop
mov
test
fist
inc
movs
lahf
xor
int
mov
ds
jmp
cmp
push
aad
test
into
loopne
fsub
ds
xlat
pop
push
add
out
pushf
(bad)
cmp
fsubr
test
pop
in
and
adc
cmp
addr16
push
mov
mov
push
jne
out
push
arpl
ds
sub
sbb
mov
sbb
push
inc
pop
mov
inc
imul
loopne
pop
aas
push
stc
ficomp
sbb
jp
cli
add
push
sbb
add
test
int
xor
sar
inc
cmp
call
mov
in
inc
xchg
sub
mov
xchg
mov
lods
pop
xchg
cmp
fidivr
repnz
out
jns
mov
(bad)
mov
inc
mov
sbb
call
imul
push
cld
cmc
pop
sti
ds
cmp
loope
mov
and
add
mov
cmp
xor
ret
arpl
fistp
hlt
cmp
mov
stos
inc
test
repz
or
cmp
cmp
sbb
call
stc
sbb
out
sbb
imul
data16
mov
push
dec
add
and
jp
sbb
xor
pop
repz
jge
(bad)
jnp
jne
dec
aaa
(bad)
cmp
mov
bound
sar
imul
aas
stos
mov
imul
mov
mov
fsubr
in
ins
hlt
int
test
cmp
jecxz
xchg
jg
pop
fs
les
int
xchg
sub
repnz
stc
loop
add
test
out
cdq
mov
sbb
cmps
push
nop
pop
loope
ds
adc
xor
push
clc
xor
lahf
dec
in
or
add
pop
xchg
sbb
pop
sbb
cmp
jecxz
stc
cmp
cmp
repz
sbb
xor
addr16
cmps
sub
jp
sbb
dec
lods
out
mov
mov
adc
or
iret
push
cmp
mov
mov
sbb
(bad)
cmp
or
mov
push
rcl
cmp
shl
sbb
xor
in
sub
cdq
mov
mov
(bad)
xor
(bad)
call
popf
std
dec
data16
popa
int
jmp
not
scas
push
lahf
outs
pop
mov
shr
scas
pop
pop
lahf
mov
cmp
icebp
stc
xchg
mov
push
not
in
aas
xor
lods
mov
push
mov
popf
mov
jae
push
fisub
jmp
dec
mov
clc
leave
cmp
sub
mov
and
iret
jbe
jne
or
and
into
jnp
ins
pop
fld
pop
(bad)
gs
push
into
jns
cmp
mov
je
cmp
outs
ins
adc
fs
cli
xchg
shl
aad
iret
(bad)
jmp
push
adc
data16
mov
xor
(bad)
popf
(bad)
mov
xor
sar
sub
test
(bad)
shrd
sub
add
jbe
pop
jle
jns
mov
sbb
clc
dec
inc
push
clc
cdq
pop
sbb
(bad)
js
(bad)
jns
mov
cwde
mov
cmp
scas
repnz
ret
leave
mov
pop
and
repz
mov
(bad)
xlat
xchg
xchg
xchg
cmp
xor
push
mov
jo
xchg
pop
pop
sbb
das
movsx
cmp
out
mov
mov
pop
and
std
ins
fmul
fisub
js
into
add
popf
stos
mov
jge
jge
test
and
outs
push
pop
hlt
(bad)
xor
js
in
xor
fwait
xlat
(bad)
out
xchg
sub
mov
push
inc
jno
(bad)
std
xchg
push
mov
stos
mov
jne
cwde
ret
dec
mov
push
jno
ror
sub
sti
movs
shr
retf
(bad)
pop
xchg
aad
sbb
ins
loopne
xor
outs
arpl
xchg
lea
int3
push
shr
lahf
cmc
xchg
mov
fnstenv
hlt
ins
cmps
cmps
cmp
cmc
xchg
jmp
cmp
les
iret
push
bound
xor
cli
xchg
ror
lods
daa
scas
leave
mov
adc
(bad)
inc
cmp
inc
mov
mov
sub
xor
outs
jecxz
sbb
inc
ds
lea
cwde
dec
push
add
mov
aaa
push
jbe
pop
rcr
dec
inc
call
sti
jl
movs
sbb
adc
in
(bad)
sbb
(bad)
jno
sub
test
jmp
ficom
jmp
std
xchg
in
cmp
(bad)
rcl
ret
out
repz
sbb
stc
mov
out
push
imul
retf
(bad)
jp
jne
dec
push
sbb
aad
dec
sub
xchg
(bad)
int
pop
dec
sbb
xor
imul
xchg
jne
cmp
iret
daa
sar
cmc
inc
cmp
movs
ret
out
inc
cmp
mov
(bad)
sbb
ror
fsubp
mov
sbb
retf
mov
ds
arpl
add
fadd
clc
jno
pop
mov
mov
pop
cmps
in
mov
pop
mov
scas
lds
mov
mov
xor
inc
jl
adc
imul
jae
call
pop
rcr
sub
push
sub
mov
icebp
repz
xor
push
sar
(bad)
mov
push
(bad)
inc
mov
push
jmp
test
jle
fild
and
sub
cmc
or
cmp
xchg
pop
sbb
jns
push
mov
test
das
add
jge
out
fstp
inc
lahf
adc
shl
fiadd
ja
icebp
mov
push
mov
into
fdivr
sar
pop
leave
push
xlat
ds
into
adc
adc
out
aas
loope
sub
test
jl
pop
jbe
mov
je
pop
repz
retf
rcr
xchg
push
jmp
repnz
pop
sub
aad
(bad)
loop
pop
pop
jg
dec
aam
jmp
(bad)
fistp
mov
lea
sbb
fs
loop
icebp
pop
cwde
mov
fidivr
(bad)
sti
or
out
popa
fdivr
aaa
jnp
mov
inc
cmp
aam
jmp
cld
js
pushf
jg
sti
out
sbb
rcr
icebp
jns
jecxz
mov
repz
mov
mov
pop
fnsave
shrd
jle
ds
jo
sbb
cmc
jnp
ins
pop
jmp
xchg
jbe
push
cli
jbe
mov
daa
lock
cs
mov
call
cmp
cmp
jle
mov
loop
fld
cmp
(bad)
fsubr
mov
sub
mov
cmp
pop
out
fs
pop
scas
mov
outs
jne
jne
out
imul
push
call
movs
aaa
arpl
lods
stc
xor
mov
das
inc
mov
ja
movs
mov
cmp
and
mov
call
mov
(bad)
mov
xchg
(bad)
mov
mov
addr16
(bad)
mov
call
ins
aam
jnp
out
add
add
mov
paddb
loope
jl
fdivp
jns
pop
rcr
pop
popa
int
in
ffree
mov
add
mov
pop
ja
pop
lahf
xchg
fmul
daa
sahf
inc
pop
std
sahf
adc
cld
mov
pop
sti
fsub
xchg
out
fidivr
add
addr16
push
addr16
scas
in
add
jge
fisttp
mov
lods
jo
jns
iret
adc
mov
pusha
(bad)
arpl
ret
inc
mov
ss
loope
push
cs
sahf
pop
xor
pop
jmp
dec
mov
aad
enter
fsubr
push
inc
rcr
in
enter
mov
sbb
or
addr16
sahf
icebp
std
mov
fmulp
out
push
pop
fst
mov
ins
xchg
xchg
outs
shr
rol
dec
adc
dec
or
icebp
jns
int3
dec
or
sub
mov
sbb
inc
ins
mov
fstp
jl
jo
iret
dec
and
repnz
jecxz
dec
je
mov
loop
mov
xchg
pusha
dec
imul
jns
pop
fs
pop
call
arpl
lahf
mov
xchg
call
daa
enter
mov
iret
rcr
mov
jmp
lods
stc
icebp
xchg
stc
mov
es
sti
push
into
jmp
mov
outs
aas
fwait
cmp
mov
das
cld
iret
pop
and
stc
out
clc
hlt
jnp
int3
mov
cdq
jb
sbb
jge
in
in
sub
int3
dec
stc
ror
test
mov
cmp
fld
cli
sub
dec
sbb
movlps
mov
loopne
mov
pop
mov
retf
loope
leave
jecxz
xchg
inc
(bad)
movs
mov
sbb
test
div
cmp
xlat
and
jecxz
or
inc
jp
pop
vpaddusb
sbb
jp
jne
sar
sti
jns
fdivr
popa
int
push
pushf
test
cmp
sbb
enter
push
cmp
mov
aaa
ds
add
jecxz
jns
jle
adc
loopne
out
mov
cmps
into
(bad)
lahf
mov
dec
jne
sub
shr
retf
sub
(bad)
sbb
ja
mov
or
xor
sbb
adc
imul
or
jle
and
cmp
mov
and
push
push
mov
pop
mov
mov
movs
inc
and
adc
and
adc
or
test
inc
or
test
inc
or
les
adc
and
adc
dec
push
inc
or
test
inc
or
test
inc
or
les
adc
and
adc
dec
push
inc
or
test
inc
or
test
inc
or
les
adc
and
adc
dec
push
inc
or
test
inc
or
test
inc
or
les
adc
and
adc
dec
push
inc
or
test
inc
or
test
inc
or
les
adc
and
adc
dec
push
inc
or
test
inc
or
test
inc
pop
enter
and
mov
sub
adc
and
lds
cld
sar
sbb
test
xor
lock
in
(bad)
cli
mov
cld
pop
pop
(bad)
push
mov
test
les
sahf
ds
scas
icebp
or
(bad)
pop
inc
daa
std
mov
xor
retf
sbb
scas
inc
out
pop
mov
jb
or
cld
pop
ret
cs
jg
xchg
outs
shl
(bad)
dec
xchg
pop
dec
lea
add
arpl
cmp
add
or
jmp
(bad)
in
mov
pop
inc
mov
cs
jge
rcr
pop
lods
lea
mov
or
addr16
or
retf
jb
outs
adc
cmp
repz
in
js
dec
mov
xlat
inc
(bad)
jg
jle
jo
cdq
mov
imul
pop
lea
pop
pop
xchg
xor
addr16
js
call
mov
push
sti
sbb
mov
aaa
sti
or
push
(bad)
std
ja
popf
mov
fwait
xor
(bad)
call
and
jecxz
cmp
jmp
(bad)
jl
out
jbe
cwde
xor
or
mov
mov
add
fidiv
(bad)
mov
lock
push
mov
neg
pop
push
jno
(bad)
jl
ds
mov
das
cmp
dec
cld
shr
sbb
(bad)
mov
cmp
repnz
aas
jnp
out
sub
jge
cmc
daa
aas
fs
out
mov
mov
neg
pop
test
fcom
scas
js
cli
fidivr
cmp
imul
mov
sub
out
loop
out
xor
cmps
mov
mov
(bad)
jmp
xlat
jo
(bad)
std
xor
sbb
fpatan
mov
inc
in
cli
inc
(bad)
imul
mov
ins
dec
pop
xchg
clc
sub
add
jae
mov
sbb
aam
imul
pop
(bad)
pop
stc
cmp
js
push
add
scas
mov
ja
dec
hlt
das
push
enter
sbb
fnstcw
cld
fld
shr
arpl
clc
nop
lock
aas
sub
pop
stc
pop
pop
lock
int
add
cmp
sbb
mov
or
fxtract
jns
retf
dec
mov
mov
pop
cli
mov
mov
std
cdq
sbb
pop
cwde
mov
popf
into
mov
dec
mov
adc
mov
jmp
cli
das
(bad)
clc
(bad)
std
jg
mov
cld
movs
std
push
mov
imul
jns
xchg
ret
sbb
loope
cld
ja
mov
or
cmp
data16
or
mov
cmp
mov
or
(bad)
shl
out
sbb
xchg
pop
cmp
adc
fnstsw
outs
movs
or
outs
es
push
addr16
sub
or
dec
das
xchg
mov
adc
cmp
fstp
lods
in
pfmax
jle
or
scas
inc
and
jecxz
or
mov
mov
push
(bad)
out
mov
ret
xchg
iret
pop
in
pushf
add
mov
jb
into
cli
xor
or
(bad)
retf
out
neg
xor
and
aad
(bad)
push
jnp
out
enter
push
cmp
pop
jno
test
hlt
sub
jmp
sti
imul
pop
xlat
jmp
aas
(bad)
jecxz
sbb
pop
into
cmp
call
in
push
jae
jmp
xlat
call
xchg
call
mov
jbe
jp
fisub
fnstsw
loop
sti
jae
enter
repnz
cmc
stc
pop
mov
or
push
clc
aad
mov
ficomp
jmp
cmp
mov
mov
push
stc
mov
ret
loop
and
pop
and
ret
in
pusha
pop
movs
pop
aas
(bad)
int
mov
mov
jg
mov
xor
(bad)
loope
sub
cmp
pop
jp
and
jbe
mov
or
xchg
mov
and
lahf
das
fisubr
xor
mov
jae
xchg
xor
sub
je
push
(bad)
and
ret
out
daa
(bad)
je
das
outs
cdq
sbb
clc
icebp
icebp
(bad)
scas
mov
in
mov
mov
jne
sbb
mov
pop
sub
enter
cmps
repz
push
mov
inc
add
pop
mov
je
adc
int3
jnp
mov
ret
and
adc
sub
jmp
ror
mov
(bad)
push
loop
sbb
mov
fwait
das
pop
jb
push
lods
lods
ja
outs
sub
fnstenv
call
mov
js
enter
mov
mov
mov
outs
pop
jmp
js
jnp
(bad)
sbb
popa
or
sbb
sti
fstp
cmp
mov
mov
popa
or
(bad)
push
leave
push
lahf
and
push
add
(bad)
call
cmp
fcmovb
call
ret
xchg
xor
loope
int
aas
int
daa
cli
(bad)
jno
call
sub
dec
stos
imul
sahf
call
(bad)
(bad)
cmp
daa
outs
(bad)
repz
sbb
scas
(bad)
cmp
jg
(bad)
(bad)
clc
ja
in
sbb
push
in
lods
jp
add
(bad)
lods
pop
pop
rep
lahf
jle
push
pusha
adc
sti
cmp
lds
cmp
cld
addr16
inc
cld
jae
loop
cmp
jno
cmp
repnz
mov
(bad)
sbb
loopne
loopne
popf
mov
in
mov
cmp
fpatan
sahf
lock
mov
idiv
cmp
(bad)
fild
out
cmps
lock
not
add
loope
hlt
inc
push
not
jp
mov
arpl
xchg
(bad)
cmp
sbb
(bad)
test
outs
pop
fwait
repnz
int
pop
or
fist
sbb
xchg
cmc
gs
out
aam
out
or
setg
inc
mov
mov
enter
inc
test
rcr
call
(bad)
cmps
lods
mov
scas
(bad)
cmp
or
pop
aad
add
loopne
mov
in
pusha
movs
mov
repz
int3
shr
and
push
ds
push
fsubr
int
pop
inc
(bad)
lahf
shl
imul
mov
dec
mov
or
jmp
sbb
loop
inc
in
fistp
cs
cmp
loop
and
repnz
(bad)
lahf
neg
jnp
std
sar
aas
(bad)
jecxz
dec
in
mov
jns
(bad)
cld
sahf
jp
sub
iret
mul
add
sub
jge
scas
mov
repz
into
lds
neg
cwde
xlat
cs
pop
add
stc
cmp
int
pushw
inc
in
jmp
int
and
mov
not
lds
xchg
(bad)
hlt
sub
pop
pop
scas
or
xchg
mov
ss
sahf
cmp
cmps
ret
adc
xchg
pop
cmp
pop
dec
and
cmc
cmp
das
(bad)
(bad)
jae
aaa
push
adc
int
out
add
inc
jecxz
sub
dec
loop
mov
adc
push
idiv
or
sbb
mov
dec
jge
lds
push
(bad)
data16
lods
mov
jge
retf
out
pop
jmp
fwait
pop
jge
call
mov
inc
je
mov
dec
das
mov
xor
in
mov
gs
jl
(bad)
outs
out
pop
out
sbb
add
scas
pop
jmp
cmp
data16
or
mov
sbb
mov
lea
lahf
pop
jmp
pop
dec
inc
mov
jge
sbb
out
or
jnp
pusha
sbb
cmp
std
sahf
mov
cmp
adc
int3
mov
mov
int
shr
xlat
sbb
jnp
cmps
ja
fistp
out
enter
nop
(bad)
stc
pop
mov
out
aas
jmp
jg
repz
out
(bad)
out
jg
mov
fld
loope
xlat
in
push
aas
inc
sti
(bad)
cld
jecxz
cmp
jge
pushf
loopne
clc
mov
xlat
aas
cmp
mov
mov
iret
lods
in
std
pop
lods
lods
arpl
jecxz
stc
fbld
adc
out
pop
add
stos
jb
call
push
dec
xor
hlt
lock
retf
pop
inc
cmc
lds
sahf
ins
fcomp
repz
aam
cmps
add
mov
out
inc
push
cmp
fstp
fwait
lods
pop
in
xchg
adc
cli
and
aad
push
mov
adc
push
or
test
(bad)
imul
cmp
inc
(bad)
out
lods
mov
jnp
pop
fs
loopne
cmp
jno
dec
(bad)
push
jmp
xor
fidivr
ret
scas
push
fnstcw
dec
cmp
loopne
jmp
lea
sub
pop
loope
pop
fisttp
jo
inc
into
shl
test
jle
dec
mov
sub
xor
std
clc
xchg
ss
loop
gs
pop
int3
xor
(bad)
mov
and
xor
dec
push
repz
pushf
jns
enter
div
dec
push
(bad)
imul
loop
shl
sub
in
stos
in
mov
call
jge
sub
arpl
cmp
xchg
mov
sahf
push
int
mov
(bad)
icebp
fstp
fs
xchg
lahf
(bad)
mov
aad
lds
push
push
jo
mov
cs
cld
call
addr16
fldcw
int3
lea
mov
push
hlt
daa
fsubp
dec
aas
push
ror
fst
add
sahf
out
(bad)
int
repz
lods
sbb
out
bound
xor
out
in
cmp
cli
data16
xlat
into
jl
iret
jo
aas
inc
aaa
es
fcmovnb
or
arpl
lods
sbb
(bad)
lods
idiv
mov
mov
repnz
push
ja
pusha
(bad)
(bad)
jmp
retf
out
jle
(bad)
outs
jg
(bad)
xlat
mov
outs
fld
(bad)
outs
mov
jg
pop
push
repz
add
jae
in
lahf
jo
xchg
lahf
(bad)
mov
imul
mov
aam
loopne
jno
repz
lods
retf
push
pop
pop
aaa
sbb
add
sbb
mov
inc
pop
stos
pushf
fs
mov
push
mov
(bad)
addr16
push
cld
and
fmul
cld
sbb
popa
int
sahf
fst
in
sub
cmc
pop
jle
lds
outs
inc
ins
cdq
fnsave
shl
and
lea
jge
push
mov
(bad)
sbb
call
sub
xor
into
dec
jg
loopne
cmp
inc
jnp
xlat
sahf
imul
aas
(bad)
movs
(bad)
jmp
jno
sub
add
jo
pop
adc
push
adc
clc
xchg
loop
(bad)
bound
stc
js
jg
sub
add
leave
cli
dec
adc
loop
(bad)
jbe
stos
mov
lea
mov
fadd
into
sti
sub
adc
movs
repnz
inc
pusha
jmp
enter
scas
inc
xchg
pop
imul
dec
aas
dec
mov
or
mov
aaa
jnp
(bad)
cli
int3
cwde
cmp
jl
(bad)
retf
mov
pop
mov
xchg
or
mov
mov
add
jnp
push
lds
cld
sub
in
jp
movs
mov
mov
inc
xor
cmc
add
or
std
pop
loopne
sbb
cmps
pop
sbb
dec
out
mov
xchg
mov
clc
fmul
push
fisttp
(bad)
stc
test
out
xchg
mov
(bad)
jmp
fwait
cmp
xchg
lods
pop
rcl
cmp
mov
cmp
cli
push
mov
xor
repz
sbb
cmp
cli
int
icebp
sbb
inc
lahf
lods
stc
movs
dec
daa
das
aam
push
lea
(bad)
mov
loope
(bad)
rol
mov
je
sub
mul
jns
out
xor
inc
pop
inc
int
jg
std
fistp
push
jle
ds
gs
inc
pop
aad
push
fistp
mov
shl
pop
test
pop
jecxz
aam
repz
push
(bad)
cmp
pop
mov
jmp
mov
jl
mov
pop
mov
lock
push
push
mov
jno
clc
dec
pusha
pop
mov
jno
cmp
sub
dec
outs
out
ror
pushf
iret
jge
mov
ss
xchg
sbb
cmp
fnstcw
xor
jmp
jle
out
repz
sbb
out
push
stc
fwait
xor
(bad)
xor
in
mov
mov
mov
adc
xlat
loope
jle
(bad)
dec
sub
movs
(bad)
pop
and
sub
das
sbb
add
adc
mov
jmp
mov
jb
stc
mov
jmp
mov
lahf
xchg
repz
jmp
jle
jmp
mov
cmp
mov
addr16
sub
mov
push
or
int3
popa
pop
mov
jmp
pop
lods
xchg
sar
scas
xchg
mov
rcr
lock
jmp
mov
test
call
xchg
iret
sbb
sbb
jae
mov
cmc
mov
cld
push
outs
(bad)
int
jg
mov
jmp
call
imul
clc
dec
lahf
cmp
mov
add
out
mov
pop
arpl
(bad)
jmp
mov
jp
fimul
jno
addr16
sbb
data16
sahf
mov
lds
sub
fsubr
add
test
jno
lods
ret
ds
sub
hlt
jecxz
mov
and
push
jne
clc
lods
pop
ror
retf
sbb
stos
or
mov
lods
stc
xor
test
pop
push
cld
sub
cmp
gs
(bad)
mov
mov
fcomi
out
fbld
into
xchg
inc
test
mov
mov
xchg
sbb
pushf
xchg
mov
sbb
lods
imul
ror
not
jbe
cs
cld
jp
jo
ins
dec
jns
mov
repz
icebp
(bad)
xchg
xor
sbb
aas
sbb
repz
shl
inc
lods
cli
dec
sub
ss
or
out
out
lock
xchg
sub
std
cmp
mov
js
dec
sahf
push
addr16
sbb
test
mov
repnz
retf
daa
and
mov
stos
jns
out
push
imul
cwde
stc
pop
imul
je
dec
mov
push
cmp
(bad)
fdiv
retf
call
mov
inc
stos
xor
add
lock
xor
jge
or
(bad)
cmps
pop
cmp
jmp
(bad)
lds
cmp
ret
cmc
mov
outs
fmul
push
fs
icebp
lea
fwait
jae
sub
mov
cmc
xchg
mov
xor
out
mov
and
movs
imul
xor
mov
clc
mov
or
mov
stc
pop
xchg
mov
aaa
(bad)
mov
aaa
cmp
xor
std
fs
sbb
or
data16
cmp
jnp
mov
cmps
scas
xlat
pusha
mov
mov
hlt
jnp
int
jns
push
xor
call
stos
cmp
scas
lahf
jmp
test
cmp
addr16
cmp
or
mov
or
jl
arpl
xchg
inc
(bad)
mov
stos
(bad)
pusha
pop
pop
mov
jb
popa
mov
xor
outs
cli
or
mov
jns
and
or
mov
test
enter
pop
mov
into
aad
sbb
out
arpl
xlat
or
sahf
in
cmp
adc
jno
sub
cmps
adc
push
repnz
sti
push
fild
std
jae
(bad)
std
adc
jmp
xchg
jg
out
lahf
mov
cld
stc
sbb
adc
mov
test
neg
ss
add
mov
stc
mov
std
outs
xlat
mov
mov
(bad)
push
movs
or
enter
mov
not
(bad)
mov
aas
loope
(bad)
(bad)
retf
mov
(bad)
jnp
cdq
scas
dec
cmp
imul
mov
or
int
dec
pop
fadd
or
(bad)
repnz
int
jg
outs
push
in
jmp
in
aam
stos
push
adc
and
xlat
test
repz
ds
scas
pop
jl
clc
mov
mov
lods
jns
test
iret
adc
lds
mov
out
aad
arpl
or
sti
cmp
(bad)
mov
push
or
xchg
adc
adc
mov
mov
xchg
fsubr
sub
push
lahf
addr16
jecxz
sbb
mov
push
xor
in
inc
(bad)
call
pop
push
mov
xchg
dec
iret
lods
outs
and
cmp
sbb
and
lock
clc
(bad)
cdq
out
fimul
in
mul
fcom
movs
in
ins
mov
dec
rep
jnp
xchg
int
inc
sti
xchg
jle
push
xor
into
pusha
outs
mov
in
pop
jl
clc
mov
out
loope
int3
cli
push
mov
push
mov
nop
stc
xchg
loope
call
arpl
ficomp
out
mov
data16
out
je
addr16
cmp
cmp
not
jo
(bad)
sub
jne
aas
loop
xor
mov
iret
sbb
jle
pop
call
out
pop
pop
das
jp
pop
inc
out
xchg
out
shl
fstp
xlat
ins
jle
cmp
jle
jge
les
data16
int
icebp
stc
xchg
mov
fnstcw
std
ins
scas
lods
iret
mov
into
not
sahf
xor
jne
push
hlt
fs
dec
dec
bound
out
clc
repz
xlat
jmp
dec
cmps
jae
out
icebp
cmp
jne
in
je
cmp
(bad)
sahf
dec
jae
jg
sub
movs
(bad)
int
mov
add
mov
fwait
and
out
jg
icebp
in
mov
xor
push
daa
add
sbb
mov
jge
(bad)
mov
pop
icebp
jno
idiv
sub
shl
xlat
(bad)
ficom
loop
loop
(bad)
push
cmp
jbe
js
cmp
ds
out
stos
jl
push
(bad)
add
mov
mov
cdq
int3
push
fsub
cmp
xor
pop
ds
mov
mov
int
mov
fstp
hlt
cmp
neg
sahf
in
cdq
mov
arpl
sbb
and
pop
pop
out
enter
into
xchg
ins
lea
jnp
retf
imul
cmp
movs
xor
jge
loop
xor
sbb
adc
jp
jecxz
popf
cmp
jle
fadd
push
sub
jns
lahf
cmp
out
hlt
fidivr
(bad)
cld
(bad)
arpl
popf
mov
jp
cmps
jecxz
fsub
jae
cld
int3
sahf
jmp
pop
pop
repz
pop
inc
mov
xor
scas
test
nop
in
sbb
punpckhwd
or
outs
bnd
dec
pop
das
adc
mov
ins
movs
xor
jge
loop
xor
sbb
ds
lea
enter
std
dec
mov
mov
fnstenv
hlt
in
call
rcl
stos
(bad)
jb
pop
pop
lods
lea
iret
shr
out
out
retf
ja
daa
mov
mov
shr
mov
sbb
push
mov
jmp
push
pop
xchg
lods
cmp
push
inc
mov
dec
jecxz
lods
adc
leave
(bad)
int3
bound
(bad)
fsubrp
test
es
xchg
pusha
or
fwait
cld
or
sub
mov
mov
pop
mov
cmp
add
(bad)
mov
(bad)
movs
(bad)
push
arpl
jb
(bad)
movs
iret
ror
aas
sahf
jnp
jne
mov
int
pop
dec
int3
mov
iret
in
aaa
sbb
mov
xchg
shl
sar
cld
sbb
sbb
cli
enter
cmp
jmp
lods
das
jb
iret
(bad)
mov
out
jg
ss
cmps
addr16
mov
mov
clc
scas
dec
pusha
int3
aas
scas
pop
mul
fild
sbb
cmp
xor
outs
pop
mov
retf
test
mov
cli
mov
aad
xor
inc
jl
xor
hlt
mov
lods
mov
or
mov
aaa
sar
dec
out
sti
stos
inc
popf
ds
and
mov
cmp
(bad)
fbld
pop
pop
cli
js
out
in
mov
xchg
ds
int
jge
out
jl
cmp
mov
sub
cmp
push
(bad)
mov
cli
dec
out
adc
mov
test
pop
std
into
fxch
pop
lahf
mov
ret
jmp
outs
fiadd
fucomi
pop
out
inc
mov
cli
aaa
lock
aaa
repnz
aas
and
jg
mov
fmul
iret
test
cli
mov
mov
out
jns
aas
loope
inc
popf
(bad)
lock
repz
add
jle
pop
aad
enter
out
ds
icebp
or
loopne
xor
pop
aas
add
cli
pop
pop
xor
cmp
and
dec
or
out
popf
pushf
adc
pop
pop
pop
and
aas
xchg
outs
or
stos
mov
mov
pop
outs
jns
sbb
jbe
data16
adc
adc
retf
clc
jno
lods
sahf
mov
mov
jg
jne
jns
repz
daa
addr16
mov
cmp
lods
sti
pop
adc
cli
and
std
ins
cld
aas
jg
(bad)
cli
inc
cld
jmp
mov
das
mov
mov
dec
(bad)
scas
pushf
fwait
inc
shl
das
jg
mov
mov
in
loop
sti
adc
adc
pop
fs
sub
neg
lahf
jnp
jne
in
std
and
jnp
fnstsw
jbe
xchg
sub
adc
lods
jns
ins
dec
mov
inc
xchg
(bad)
stc
xor
mov
cwde
imul
jge
call
pop
sbb
cwde
lods
les
sbb
movs
(bad)
pop
mov
das
lahf
mov
scas
xor
lods
jns
cdq
cmc
cmp
mov
xlat
cdq
hlt
xlat
jmp
ret
call
call
pop
pushf
loop
lahf
jnp
dec
mov
clc
or
mov
je
in
mov
mov
push
repnz
adc
addr16
mov
(bad)
dec
xlat
retf
ja
inc
int3
jb
or
aas
jae
sahf
cmc
add
jnp
fiadd
int3
jb
sti
iret
sar
push
int3
test
cmc
inc
scas
enter
lea
vshufps
mov
lock
stos
je
iret
jnp
icebp
push
pop
cmp
pop
int
out
mov
jnp
and
push
mov
(bad)
pop
mov
jmp
or
xor
(bad)
sub
repz
jae
mov
mov
sahf
sahf
js
or
and
cli
pop
aam
jmp
pop
out
xchg
sub
out
test
adc
mov
sbb
xor
(bad)
xchg
into
out
jbe
pop
repz
(bad)
jg
(bad)
cld
clc
retf
xor
in
sti
jae
xor
outs
dec
idiv
fsubp
imul
out
data16
mov
dec
inc
inc
jge
jl
cmp
and
std
shl
cmc
ds
xor
sbb
outs
shr
sti
js
sbb
stc
or
lock
jmp
in
jl
loop
lock
leave
mov
xor
pusha
dec
mov
jecxz
fild
pop
test
popf
sub
mov
(bad)
mov
or
cmc
out
push
pop
scas
clc
jge
adc
icebp
or
loopne
pop
sub
les
into
add
test
inc
or
test
cli
(bad)
std
push
dec
les
dec
lea
and
adc
and
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
or
and
clc
push
hlt
xor
push
fadd
repnz
or
pusha
ss
or
test
inc
or
(bad)
pop
ret
cs
aas
pop
lock
jg
repz
fcmovnbe
iret
inc
inc
cmp
in
push
jno
push
mov
call
adc
aas
enter
mov
xor
repz
pushf
xor
idiv
movs
fstp
(bad)
xchg
cmc
clc
xchg
arpl
dec
add
mov
lea
inc
and
cmp
imul
adc
js
iret
mov
cmc
pop
xchg
rcr
out
cmc
in
outs
rcl
and
cmc
outs
rcl
dec
mov
lock
data16
loop
fmul
sbb
std
adc
imul
adc
scas
pop
jae
push
mov
(bad)
cld
int
scas
les
push
jmp
in
jnp
mov
imul
imul
ss
les
push
jns
mov
dec
std
xlat
out
sub
sub
mov
(bad)
and
popa
int
iret
sub
push
bound
mov
cs
jnp
imul
js
scas
mov
out
outs
xchg
push
mov
sbb
addr16
bound
rcl
jl
inc
jne
and
iret
mov
jecxz
pop
test
jg
call
mov
test
and
cld
stc
(bad)
xlat
mov
ret
imul
fld
fwait
std
or
mov
pop
retf
(bad)
mov
lock
icebp
sti
push
fs
dec
enter
dec
iret
mov
fistp
arpl
mov
cs
std
mov
popf
mov
out
mov
push
pop
sbb
lds
fst
int3
pop
js
sbb
sub
pop
xor
(bad)
shl
das
(bad)
test
not
mov
aaa
loop
mov
int
aam
jae
push
pop
enter
pop
mov
clc
jbe
mov
data16
lods
mov
jge
fidivr
mov
jmp
scas
push
vpmaxub
addr16
pop
jae
dec
mov
sbb
pop
or
jne
adc
cmp
lods
popa
pop
aas
cmp
addr16
mov
test
mov
(bad)
cmp
into
push
cld
mov
js
fnstcw
lds
jle
xchg
js
into
enter
add
es
jnp
jae
jmp
mov
mov
add
adc
pusha
in
retf
out
add
mov
std
mov
(bad)
pop
repz
jbe
cmp
outs
cli
inc
sbb
fadd
scas
mov
hlt
sbb
idiv
cmp
and
jno
lock
xchg
lods
ds
jmp
in
rcr
fdivr
(bad)
mov
loop
lock
(bad)
in
pop
movs
(bad)
clc
int
repz
fs
adc
enter
addr16
jecxz
sub
cmp
xor
ret
cs
clc
fs
popf
cmp
out
div
jge
daa
repz
jno
imul
jnp
stos
in
sbb
mov
jle
out
and
jns
jnp
xor
repz
std
sbb
xchg
mov
mov
push
sbb
sbb
sahf
xchg
fistp
sub
pop
fsub
pop
mov
(bad)
jle
jno
mov
out
pop
mov
mov
mov
retf
or
aas
lahf
cmc
pop
leave
mov
js
cs
jae
mov
mov
les
das
(bad)
enter
loopne
fidiv
lahf
pop
call
jg
inc
outs
(bad)
std
adc
fld
cmp
jmp
(bad)
jecxz
out
nop
add
sub
addr16
dec
jmp
xlat
cmp
retf
addr16
push
stos
push
addr16
xchg
mov
scas
jns
(bad)
push
inc
xor
xor
imul
(bad)
stc
mov
enter
repnz
call
imul
ds
popa
xchg
daa
into
jg
scas
cli
popf
lds
(bad)
or
cmp
lods
call
loop
pop
ins
sbb
push
(bad)
pop
repz
pop
arpl
test
push
pop
sub
cmp
sbb
dec
ins
dec
idiv
ficomp
pop
lods
push
pop
cdq
(bad)
mov
sti
adc
push
push
ds
sub
push
mov
pop
push
out
fsub
enter
mov
xchg
out
inc
(bad)
mul
mov
cmp
or
jmp
aas
ret
inc
(bad)
jg
jl
fxch
jnp
pop
jnp
das
enter
xor
shr
dec
lods
stc
rol
sub
add
mov
into
add
arpl
jne
inc
jmp
jmp
aam
push
lods
jns
cwde
cmc
lods
xor
push
in
(bad)
jg
addr16
pusha
ins
mov
mov
jl
add
cmc
mov
dec
jno
sahf
mov
sub
jl
stos
sti
cmc
push
lahf
pop
in
repnz
(bad)
cmp
aaa
pop
aad
lods
cld
sbb
out
mov
js
push
adc
mov
xor
sub
and
push
pop
pop
xchg
scas
inc
jnp
jnp
icebp
inc
repz
hlt
push
sbb
jae
push
jg
int3
cdq
ins
aad
or
scas
pop
pushf
mov
scas
mov
fisub
pop
adc
mov
mov
pushf
sbb
lods
sub
fstp
sub
push
jnp
retf
sbb
std
mov
add
fld
fldcw
jb
and
mov
xor
xor
fbld
in
push
std
add
stc
loopne
lods
xor
mov
jl
push
sbb
outs
das
jnp
pusha
int
aad
lahf
xchg
pop
out
sub
jmp
inc
mov
call
sahf
scas
call
cmp
pop
arpl
shr
push
sbb
pop
fsub
inc
aaa
loopne
stos
loop
(bad)
fsubrp
adc
cmp
outs
cld
pop
retf
cs
mov
imul
push
je
stc
mov
pop
cmp
push
jmp
add
xchg
ss
mov
and
sbb
xor
mov
addr16
cmp
out
icebp
daa
(bad)
pushf
leave
push
mov
lds
imul
pop
inc
mov
mov
(bad)
dec
addr16
les
mov
sbb
mov
popf
out
fidivr
retf
push
xor
inc
ret
pop
(bad)
lods
pop
sub
imul
(bad)
ins
rol
mov
inc
cmp
stos
mov
out
cmp
sub
(bad)
cmp
jge
aas
rcr
sbb
cmp
int3
jecxz
jns
push
mov
sahf
ins
fcomp
not
mov
fcmove
je
cld
inc
push
cs
(bad)
pusha
mov
mov
int
(bad)
cld
jmp
into
fcmovnb
push
push
int
ds
in
jge
dec
stc
lods
daa
sbb
cmp
iret
xchg
sbb
(bad)
pop
ja
push
mov
xlat
mov
icebp
out
std
ror
ret
jne
leave
jmp
mov
call
rcr
ds
outs
test
pop
add
mov
enter
cmp
inc
out
pop
leave
cmc
sahf
idiv
jmp
xor
mov
xor
repz
adc
fnstsw
push
fld
call
int3
cdq
sbb
and
jmp
pop
ins
add
pop
jns
in
dec
sbb
out
mov
outs
pop
aas
push
jle
mov
push
jmp
jge
icebp
scas
out
in
mov
adc
inc
movs
out
push
cli
jo
movs
mov
cdq
or
pop
xor
(bad)
(bad)
mov
sbb
into
add
sbb
cdq
imul
in
sar
bound
test
les
xchg
cdq
outs
sbb
mov
fcmovb
xor
jmp
and
sbb
xor
mov
pop
pop
mov
ja
xor
(bad)
cld
add
test
loope
xor
inc
enter
ins
movs
mov
pop
push
cmc
push
fnstenv
sbb
ins
mov
les
jmp
push
aas
lock
cs
jmp
cmp
into
in
sahf
sub
xchg
jmp
(bad)
lahf
dec
std
pop
xor
stos
pop
cli
int3
jl
les
jg
and
cmps
cmps
rcr
sbb
or
mov
rcr
mov
int
mov
xchg
int
mov
sbb
aas
jmp
dec
xor
jae
push
out
sub
hlt
stc
pop
mov
mov
data16
xor
iret
call
adc
and
or
pop
ins
pushf
and
adc
xor
(bad)
sub
xchg
xchg
sbb
ja
add
in
stos
cmp
cmp
cmp
xchg
push
mov
mov
mov
dec
sub
in
retf
add
call
pop
aad
and
mov
(bad)
fdivr
jg
sbb
sbb
sbb
aas
xor
mul
jae
push
out
iret
mov
xor
call
jge
xor
dec
pop
iret
ficomp
stos
icebp
and
xchg
xchg
paddsb
loop
cli
ret
mov
jge
ds
outs
xchg
mov
pop
fld
pop
stc
enter
rsm
jns
stos
hlt
shl
jnp
inc
jmp
or
sub
xor
mov
aaa
enter
outs
ret
std
int3
mov
test
cdq
jge
mov
loopne
pop
mov
xchg
fnstcw
jecxz
pop
mov
ret
dec
inc
mov
lahf
jecxz
ins
xchg
repz
xchg
leavew
retf
sub
add
sbb
and
sti
cmp
jo
aas
getsec
js
aaa
mov
jmp
pusha
mov
jno
pop
shl
or
scas
ss
mov
aad
mov
pop
popa
add
fild
cld
mov
push
push
push
pop
aad
ror
pop
hlt
add
dec
push
xlat
(bad)
lahf
pop
jg
jge
sahf
loope
mov
int
mov
cmp
pavgw
rcr
imul
xchg
imul
popf
sbb
push
imul
mov
dec
pop
clc
bound
outs
std
pushf
fcmovnu
test
mov
(bad)
loopne
cmp
outs
adc
ins
call
fisub
stc
pop
cmp
sbb
dec
imul
jle
div
into
dec
add
mov
add
cli
ror
lahf
jae
gs
xor
sbb
inc
(bad)
aaa
sbb
jp
jl
int
ret
fsub
repz
pop
sub
imul
out
iret
rcr
xor
mov
fiadd
pop
jmp
mov
mov
sub
sbb
out
jge
xlat
pop
out
mov
cdq
jmp
pop
sbb
ja
mov
and
jmp
jle
in
fldcw
sub
bound
fimul
dec
sub
std
into
out
jge
cmp
int
movs
retf
dec
out
(bad)
sbb
ins
sbb
cmp
pop
sub
loop
mov
int
out
jmp
mov
shr
daa
mov
jmp
xor
out
jecxz
mov
pop
popa
add
fild
cld
mov
push
push
push
pop
aad
ror
pop
hlt
add
dec
push
xlat
(bad)
lahf
fmulp
cmc
mov
jnp
loopne
sbb
xor
test
div
sahf
scas
(bad)
mov
cmc
pop
popa
dec
mov
stos
xchg
out
jno
pop
sbb
into
ja
sbb
sahf
add
mov
mov
jge
stos
inc
push
or
mov
adc
sbb
jbe
imul
je
lods
(bad)
sbb
cmc
push
repz
pop
jmp
push
ds
sbb
aas
sbb
test
cmp
pop
push
sti
test
mov
pop
cmp
xchg
mov
inc
clc
dec
adc
(bad)
pop
pushf
stos
retf
(bad)
sbb
jmp
repz
inc
pop
and
fstp
inc
icebp
gs
cmp
xor
pop
mov
and
aas
push
aas
(bad)
xor
fisubr
jle
jmp
xor
not
addr16
jno
fpatan
xchg
xchg
pushf
add
(bad)
in
and
imul
xchg
addr16
sbb
(bad)
mov
enter
out
(bad)
je
mov
xchg
jle
mov
int
mulps
outs
fsub
push
out
pusha
add
xchg
cmp
cmp
or
fdivr
sets
repz
movs
cdq
xor
int3
adc
sub
(bad)
fwait
lods
lss
stos
sahf
jmp
rcr
imul
mov
call
xchg
fistp
(bad)
mov
lods
out
push
not
inc
jmp
xor
mov
aaa
jnp
adc
imul
pop
jl
and
xchg
xor
test
push
ret
dec
cmps
or
fidivr
and
xor
xor
lds
sub
dec
push
dec
adc
pusha
push
cmp
out
cmp
and
lahf
inc
pop
xor
int3
sub
cmc
pushf
lds
push
repz
pop
jmp
cli
xor
lods
sbb
inc
fdivr
cmps
xor
stos
mov
adc
mov
mov
push
cli
in
mov
add
mov
jns
xor
mov
call
popa
sahf
mov
lds
fild
jecxz
popa
add
pop
hlt
sub
pop
xor
and
add
or
mov
movs
imul
in
test
mov
add
sub
imul
mul
push
push
sub
fbld
je
shl
mov
mov
jne
cmp
pop
push
pop
add
mov
out
fsubr
hlt
sbb
call
shl
fistp
lock
jne
push
and
(bad)
retf
jb
sti
xchg
clc
push
jno
cmp
imul
push
pop
repz
leave
cld
lock
repz
cmc
sub
ins
sbb
xchg
lods
sar
jg
push
lock
jbe
into
xor
mov
or
test
ret
call
mov
jecxz
daa
ds
out
pop
not
sar
jne
add
call
(bad)
inc
mov
test
lock
push
iret
adc
or
int
ins
popf
push
push
cmp
xor
and
sar
cmp
enter
fs
daa
div
repz
repz
adc
lods
mov
mov
xchg
cmp
paddb
ror
jae
jmp
push
repz
in
mov
sbb
jno
xchg
lea
dec
push
das
jl
cli
xor
(bad)
sti
jno
sti
out
cmp
pop
(bad)
mov
repz
sahf
mul
jmp
push
cmp
xor
retf
bound
cwde
mov
mov
push
pop
(bad)
or
cld
jge
ss
sbb
cmp
xor
movs
daa
pusha
or
jmp
out
mov
stos
jns
out
jle
aas
mov
pop
push
cmc
push
aad
mov
push
imul
push
cld
cmc
pop
sti
ds
cmp
loope
mov
and
add
mov
retf
inc
aas
cmp
mov
xchg
inc
scas
xor
int3
jmp
cmp
ret
fcom
(bad)
jle
shl
ja
fisub
adc
scas
mov
(bad)
xlat
rcl
mov
(bad)
je
add
arpl
jge
out
loop
cmp
fimul
je
fdivr
pop
out
add
mov
xchg
xor
(bad)
data16
ficom
xchg
fst
(bad)
fnstenv
dec
push
(bad)
sbb
jo
sub
jns
pop
pop
mov
adc
xlat
stos
fdiv
fadd
push
jl
mov
dec
cmps
mov
mov
shr
fwait
sbb
inc
ror
pushf
ja
int
jmp
jne
jg
jno
lds
aad
mov
inc
daa
(bad)
sahf
adc
mov
sbb
sar
jmp
sar
(bad)
lea
push
dec
sbb
repz
out
mov
daa
add
ins
mov
mov
xchg
xor
das
mov
arpl
in
pop
cli
fdivp
sub
lahf
nop
cmp
nop
arpl
pusha
sbb
(bad)
iret
jno
mov
(bad)
dec
xchg
dec
out
cmp
out
sahf
mov
sub
(bad)
mov
into
cmp
lock
xor
pop
cli
int3
call
stos
jbe
hlt
mov
xchg
xor
(bad)
jb
cdq
ins
not
test
test
iret
call
push
les
imul
xor
lea
sbb
aad
loope
bound
in
fldenv
pop
sub
sbb
pop
fst
clc
push
test
test
frstor
mov
push
(bad)
sbb
ds
sbb
inc
xchg
mov
lods
cli
retf
cmc
jl
jo
pop
pop
xchg
repz
retf
push
test
stc
jne
arpl
out
sahf
mov
xlat
jmp
mov
cli
and
jl
pop
mov
(bad)
cwde
mov
(bad)
lock
xchg
mov
and
add
cli
mov
(bad)
lea
lea
xchg
cmp
repz
cmp
iret
aas
out
fisttp
pop
dec
push
and
int
aad
daa
ds
sar
daa
sub
jns
enter
sub
clc
inc
mov
xor
pop
push
jae
push
lds
repnz
mov
lds
stc
ds
push
mov
push
stos
sti
daa
repz
cmp
mov
outs
daa
xlat
pushf
(bad)
mov
cmp
pushf
jbe
mov
cmps
sbb
sbb
or
scas
mov
sbb
je
mov
mov
cmp
adc
jns
mov
inc
imul
icebp
stc
and
or
je
addr16
push
out
xor
out
mov
shl
mov
lods
xor
shl
mov
cmp
jecxz
neg
call
mov
stc
ret
xor
xor
jbe
imul
jg
iret
dec
aas
xor
mov
ja
xchg
add
cmp
(bad)
test
push
mov
xor
cli
add
mov
scas
stos
xor
sbb
sbb
mov
pusha
dec
fcom
pusha
xchg
jne
push
in
adc
add
pop
ret
inc
sti
or
and
(bad)
int
jnp
call
dec
(bad)
pop
jns
stc
inc
jg
mov
pop
mov
outs
stos
lahf
xor
push
xor
leave
fimul
icebp
xchg
ds
mov
imul
out
clc
xchg
pop
mov
in
add
fsubr
fsubrp
push
int3
ins
pop
aas
pop
cmc
sbb
data16
imul
jae
pop
loop
pushf
movs
not
fild
cmc
cmp
std
push
jecxz
mov
dec
rol
mov
(bad)
pop
xchg
repnz
jmp
rcr
clc
(bad)
stos
call
adc
scas
in
das
inc
push
(bad)
ja
jnp
int3
rcl
push
(bad)
outs
fnstcw
(bad)
cmp
loop
jg
lock
ficomp
xchg
cmp
xlat
cmp
push
je
fmul
adc
test
xchg
dec
out
mov
lods
inc
icebp
aaa
loopne
mov
sub
lahf
xchg
fs
pop
hlt
xchg
mov
add
loop
call
inc
adc
shr
lods
sub
lock
push
repnz
call
in
pop
mov
jae
mov
mov
mov
pop
call
and
ror
and
lds
int3
leave
or
jecxz
movs
jae
repnz
aas
xlat
in
sbb
ds
ja
jnp
mov
idiv
push
loop
jmp
lods
pop
inc
js
aas
sbb
das
lahf
or
xchg
xor
cmp
fmul
jg
dec
aas
fdivr
fadd
sti
sub
sahf
lods
addr16
icebp
mov
mov
xchg
push
(bad)
cli
aas
jecxz
jl
cmp
sub
mov
sti
cmp
je
sbb
adc
jne
into
mov
cmp
add
mov
pop
cmp
out
ds
cmp
addr16
inc
jne
pop
xor
lahf
bnd
push
mov
pop
fs
sub
sub
jge
leave
(bad)
aaa
ret
jp
xor
push
jecxz
and
push
fstp
loopne
(bad)
sar
adc
adc
dec
(bad)
add
xor
sub
pop
jmp
mov
mov
pop
ja
xchg
xchg
mov
mov
(bad)
mov
pop
xor
or
pop
jmp
enter
xlat
paddsb
or
mov
mov
imul
scas
in
mov
dec
movs
lahf
fistp
(bad)
(bad)
lods
(bad)
dec
scas
fdivr
mov
jg
test
aas
jmp
mov
outs
pop
outs
jae
clc
jo
(bad)
mov
retf
daa
jae
mov
xlat
cld
sbb
mov
fld
fnstsw
ins
cmp
push
pop
ficomp
xor
mov
push
daa
xor
and
inc
mov
mov
stc
outs
int
sub
pop
mov
pop
sti
ins
iret
ins
sar
rcr
mov
daa
das
shl
(bad)
mov
xor
aas
out
xchg
fwait
xchg
sbb
cli
xchg
push
mov
jmp
lds
rcr
adc
fwait
daa
rol
test
pop
lods
stc
and
aas
or
jl
scas
loop
icebp
dec
mov
arpl
push
(bad)
pushf
sbb
mov
ss
jne
push
ds
out
jo
jbe
mov
xlat
and
repnz
cmps
pop
mov
stc
lea
mulps
push
push
cli
pop
lods
stc
and
(bad)
adc
or
into
fsub
cwde
lods
pop
repz
(bad)
jmp
sub
jle
mov
mov
out
scas
add
sahf
out
sbb
enter
lods
push
jo
fadd
or
int
cmp
jmp
aam
inc
neg
daa
mov
and
mov
xchg
xchg
stc
mov
test
shl
outs
push
aas
inc
push
push
call
mov
xor
fisttp
outs
ret
out
mov
outs
clc
ror
mov
jae
shrd
into
jmp
pop
mov
sbb
lds
dec
mov
xor
scas
jle
mov
pop
sti
loope
cmp
cmps
mov
lahf
adc
cmps
jge
xchg
dec
sahf
sub
rcr
sub
loop
pop
push
xchg
(bad)
fild
mul
out
sahf
mov
or
push
lods
mov
and
dec
xrelease
jno
inc
jle
jl
fidivr
in
xchg
cld
push
dec
lea
jno
js
jle
and
(bad)
xor
xchg
sub
in
lods
call
mov
loop
call
add
mov
lds
lea
and
adc
and
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
and
adc
imul
or
test
inc
or
test
inc
or
test
adc
sbb
fisttp
adc
and
lea
jge
push
dec
lea
and
mov
clc
enter
and
lahf
cli
dec
std
aas
xchg
(bad)
out
(bad)
cli
out
adc
aas
iret
mov
adc
adc
and
repnz
mov
in
(bad)
imul
cld
dec
in
(bad)
xchg
mov
cmp
sbb
mov
outs
ror
jae
(bad)
call
inc
or
add
mov
in
loop
ret
adc
sahf
fdivr
outs
mulps
jmp
je
dec
sti
test
pop
(bad)
lock
xlat
call
ret
call
aas
sbb
push
retf
cmp
mov
adc
movs
(bad)
sti
pop
sbb
shr
push
pop
movs
stc
pop
pop
jae
cs
idiv
cmp
imul
pop
(bad)
push
mov
adc
and
call
jns
ins
xor
scas
pop
mov
imul
(bad)
je
ins
addr16
adc
hlt
mov
test
retf
fcmove
dec
mov
sbb
inc
clc
mov
or
xacquire
xchg
mov
retf
mov
mov
hlt
cli
sbb
jl
cwde
sti
jmp
iret
rcl
push
stc
(bad)
ds
cmc
sbb
pop
in
jmp
sar
sub
fldln2
sti
adc
addr16
pusha
int
xor
mov
mov
daa
jo
sbb
mov
push
int
addr16
mov
xor
arpl
aas
fdiv
jge
pop
push
jl
clc
dec
mov
jns
lods
sahf
lds
inc
mov
ja
push
inc
or
les
loopne
lahf
clc
pop
fcomp
(bad)
jns
xchg
cmc
fst
mov
call
sbb
(bad)
sbb
out
scas
loopne
in
cmp
jmp
scas
outs
int
(bad)
out
jg
jb
pop
jb
xor
xchg
xor
rcl
pop
daa
jle
in
stc
xchg
cmp
outs
loopne
fild
adc
mov
mov
ds
out
call
mov
mov
mov
cli
jge
ja
cld
cmp
mov
xchg
pop
cmp
not
addr16
pushf
mov
push
inc
or
les
loopne
lock
mov
and
pop
in
jle
push
jns
pop
in
stc
mov
xchg
(bad)
scas
jno
sbb
pop
rcr
sub
out
popf
dec
sti
mov
mov
aas
out
mov
(bad)
jecxz
pop
inc
outs
int
jmp
outs
push
imul
mov
shl
enter
dec
popf
mov
daa
clc
call
push
mov
popf
xchg
push
jmp
bsf
ret
xchg
cmp
aas
cmp
jge
dec
xchg
and
je
lods
ds
dec
(bad)
hlt
mov
and
mov
add
addr16
(bad)
out
inc
ins
aaa
push
imul
sbb
mov
jle
ins
int
or
dec
std
mov
fs
xor
push
push
aam
sbb
dec
aas
pop
mov
mov
out
mov
xchg
add
ds
scas
addr16
daa
lock
push
(bad)
mov
sti
sub
jmp
pop
jb
push
(bad)
jnp
neg
pop
mov
jae
sbb
dec
inc
into
cmc
sub
iret
sbb
jle
out
jne
(bad)
push
js
arpl
sahf
call
ficomp
inc
sbb
inc
or
ja
cmps
loop
popf
xor
je
pop
pop
bound
stos
push
mov
mov
and
jg
mov
cmc
scas
ror
nop
cmc
pop
pop
mov
aas
cmp
test
mov
in
jecxz
mov
xchg
jnp
shl
lods
mov
in
jp
mov
jmp
mov
xor
add
push
pop
les
ja
fist
jnp
retf
push
pusha
dec
cmp
push
imul
(bad)
in
pop
xchg
push
xchg
jbe
shl
sti
jnp
es
or
and
xchg
aad
test
repz
push
repz
hlt
jge
int
jle
mov
into
jnp
cmp
sub
jle
and
mov
(bad)
jg
push
mov
daa
loope
cmp
and
cmp
inc
ficomp
adc
lea
and
mov
cmp
lods
cdq
scas
push
jmp
push
cmp
fcom
lahf
rcr
pop
out
pop
mov
repz
lea
mov
bound
lods
ret
sub
rcr
pushf
stc
pop
out
mov
repz
aad
sahf
mov
in
outs
int
cli
aam
sar
inc
imul
mov
lods
sub
xchg
into
int3
popa
fs
pop
push
mov
pop
je
icebp
test
test
mov
sar
int
cs
push
dec
push
add
jbe
fstp
pop
addr16
mov
xor
lods
test
enter
mov
call
pop
mov
not
rcr
push
or
mov
inc
in
mov
cs
fld
sbb
imul
fdivrp
pop
or
dec
cli
inc
lock
adc
ds
(bad)
dec
div
test
test
fs
clc
jno
(bad)
jg
xchg
cmp
jmp
jno
jmp
imul
push
arpl
ins
ds
dec
push
push
aas
out
cmp
mov
lock
repnz
mov
cmps
fstp
sbb
xor
mov
stos
cmp
int
stc
sbb
out
rcl
jne
fwait
retf
ret
cwde
cmp
aad
push
mov
jl
xor
ret
mov
scas
stos
mov
xchg
jge
aad
xchg
lods
iret
and
adc
call
cmp
xor
int3
xchg
lea
aad
pop
xor
(bad)
xor
mov
mov
scas
xor
out
mov
mov
mov
or
aaa
sar
int
jle
xchg
xlat
pop
pop
(bad)
call
mov
daa
ds
sbb
into
adc
jbe
push
test
(bad)
retf
mov
into
cli
inc
push
xchg
cmp
sbb
retf
sbb
fs
jno
cmp
xor
jg
imul
imul
cmp
or
loope
fiadd
cmp
jge
shr
std
in
aam
xlat
and
(bad)
stc
xor
out
repnz
jns
clc
pop
pusha
inc
pop
mov
popa
int
cli
xor
or
std
sub
sbb
ror
push
fcom
sub
jmp
nop
stc
or
cmp
mov
mov
lahf
lods
adc
push
lds
mov
xlat
dec
xor
xor
fs
mov
or
retf
jmp
cs
or
enter
adc
xor
daa
das
pop
pop
cld
icebp
ss
or
(bad)
arpl
xor
in
jge
stos
push
sub
pop
mov
(bad)
adc
aad
bound
ins
push
dec
xchg
mov
jns
and
mov
test
jmp
retf
int
aas
cld
mov
aaa
scas
pop
jae
sbb
xor
sbb
shl
add
pop
aam
xlat
and
xchg
mov
outs
sbb
sub
sub
(bad)
nop
cmc
int
mov
ins
popf
cmp
pop
pop
and
into
xor
ror
addr16
cdq
sbb
xchg
xor
addr16
(bad)
ficomp
add
(bad)
stc
jo
pop
mov
call
lods
call
iret
into
and
sti
cmp
cli
ja
inc
and
rcr
call
inc
(bad)
out
test
sbb
arpl
jnp
out
rol
iret
jns
jae
pop
inc
lea
(bad)
dec
dec
scas
or
fiadd
mov
push
neg
add
sar
loope
ds
aam
fisttp
in
shr
mov
cwde
dec
dec
mov
cmp
push
fld
out
sbb
mov
adc
push
xlat
sbb
or
jns
mov
outs
and
fiadd
adc
stos
pop
adc
fadd
out
stos
addr16
pop
in
and
add
data16
addr16
repz
sub
and
out
mov
(bad)
xor
xor
pop
test
mov
inc
repz
push
inc
jae
push
jne
or
mov
mov
mov
jg
cmp
hlt
inc
mov
mov
push
ja
psubq
pop
and
cmp
ins
pop
mov
hlt
popf
arpl
pop
inc
jae
push
mov
add
inc
inc
imul
jmp
cmp
je
in
pop
pop
out
loope
sbb
repz
imul
xor
test
int
enter
xchg
dec
cli
lahf
stc
jns
lea
fmul
dec
fistp
(bad)
sbb
xchg
and
mov
stos
mov
ss
hlt
or
cli
pushf
ja
fstp
in
mov
dec
xchg
lds
js
dec
aam
inc
jg
ins
ins
inc
push
inc
or
(bad)
sub
pop
dec
movs
xor
arpl
fistp
cld
std
pop
inc
fs
mov
and
sbb
fsub
(bad)
push
mul
rol
push
cwde
jecxz
mov
packssdw
(bad)
pop
(bad)
pop
jecxz
je
movs
sahf
(bad)
arpl
mov
(bad)
icebp
or
mov
fld
fwait
das
jle
lods
pop
sub
sbb
clc
jl
lahf
xor
mov
pop
out
lahf
pop
jno
lods
or
cmp
ins
push
icebp
push
adc
test
bound
sub
aad
hlt
aaa
scas
mov
xchg
pop
(bad)
mov
pusha
into
mov
jmp
jno
enter
out
mov
inc
sbb
test
pop
popf
or
adc
xchg
(bad)
repz
pusha
or
push
movs
adc
movs
retf
outs
inc
int3
dec
(bad)
(bad)
jne
js
(bad)
fcmovu
mov
push
sbb
jge
mov
out
sbb
(bad)
mov
mov
mov
xor
cld
les
or
lea
push
imul
(bad)
adc
mov
in
bnd
pop
dec
std
mov
int
std
xor
jmp
addr16
(bad)
lahf
push
stc
shr
lods
iret
arpl
pop
jle
mov
sub
adc
in
mov
xor
gs
fidiv
and
dec
out
sbb
test
adc
test
pop
add
loopne
and
ss
add
xchg
jge
ror
xchg
mov
rcr
push
(bad)
pop
xchg
sti
jo
pop
push
pushf
daa
jmp
mov
dec
cs
std
fist
dec
cmc
dec
xchg
inc
mov
pop
jp
stos
cmc
std
jae
dec
sbb
mov
lahf
cld
jl
pminub
jae
xor
(bad)
xor
pop
jno
(bad)
push
jmp
(bad)
int3
je
int
cdq
in
sbb
cdq
ficom
jo
mov
sbb
in
icebp
les
inc
mov
daa
pushf
das
cmp
mov
mov
retf
cmps
xchg
lods
cmp
pcmpgtd
cli
in
cmp
jae
retf
lods
jns
arpl
or
push
jmp
push
arpl
pop
repz
sti
stos
clc
pop
mov
adc
xor
push
lds
call
pop
ja
jle
sbb
cmps
scas
mov
jg
sbb
cmp
jmp
loopne
mov
jg
fwait
in
mov
lahf
stc
jl
jle
(bad)
mov
int3
loopne
mov
fs
jno
dec
aaa
out
push
in
ins
sar
imul
jmp
or
xor
jne
rcr
jbe
inc
cmps
js
test
sbb
mov
mov
test
jle
push
pop
scas
out
jae
mov
jb
hlt
jns
(bad)
ins
mov
call
cmp
je
int
xor
imul
and
jle
mov
cmp
push
shl
sbb
xor
popa
pop
mov
cdq
cdq
cs
sub
clc
jmp
div
xor
rcl
jp
pusha
cld
(bad)
push
lahf
xchg
outs
fnstenv
cmp
bound
shr
pop
mov
shr
movs
jmp
(bad)
out
inc
jl
ret
sti
or
icebp
jno
push
pop
and
sahf
scas
bound
sbb
inc
call
mov
cmps
and
loope
movs
fisub
mov
(bad)
xchg
in
shr
arpl
fidiv
cmp
inc
or
aam
or
push
push
jge
je
or
out
lahf
lds
js
vpackuswb
test
mov
aas
fwait
mov
(bad)
cdq
cmc
scas
inc
jge
jnp
pop
lods
jae
jge
inc
not
cmp
jl
pushf
sbb
mov
enter
and
cmp
mov
dec
push
mov
mov
jne
ror
pop
fs
xchg
aad
cmp
iret
push
cld
nop
mov
stc
xchg
jge
jb
mov
ds
and
push
push
jb
loop
cmc
add
stos
xchg
mov
pushf
iret
jg
xor
xor
push
(bad)
mov
cmps
ds
mov
das
sbb
in
stos
inc
not
scas
out
retf
stc
mov
jmp
sbb
lahf
add
push
in
inc
push
xchg
cmps
shr
dec
mov
xor
cmp
(bad)
repz
clc
jns
push
jnp
movs
scas
arpl
(bad)
call
dec
lods
inc
lods
(bad)
cmps
outs
xor
(bad)
retf
out
jno
adc
mov
daa
sub
stc
fcom
pop
sbb
retf
out
xchg
std
pop
int
int
mov
mov
lods
addr16
mov
dec
ss
xchg
add
hlt
jne
iret
popf
jns
pop
fstp
popa
pop
push
loop
pop
sbb
push
mov
mov
(bad)
xor
mov
sub
adc
jmp
js
sbb
repz
popf
pop
daa
test
cmp
push
sti
fs
sahf
pop
gs
cld
fs
jmp
iret
jmp
std
inc
cmp
xchg
jecxz
sub
cdq
ficom
xor
cmp
cmp
inc
or
test
test
xor
cmp
mov
ja
sub
pop
stc
fmul
mov
imul
jbe
inc
aas
mov
inc
pop
mov
nop
jnp
sub
lock
mov
xor
xor
push
scas
(bad)
ins
mov
fbld
out
lds
ffree
xor
sbb
sub
popf
call
cwde
std
inc
aam
mov
scas
lods
mov
jge
pop
jae
mov
nop
sbb
shr
cld
xchg
outs
jl
sub
sbb
cmp
shl
lahf
inc
vpaddw
jbe
xor
pop
sbb
(bad)
cs
je
or
idiv
inc
aas
mov
xchg
in
ret
mov
std
and
xchg
into
xor
les
test
mov
mov
out
sbb
aaa
mov
cmp
fadd
dec
jmp
dec
outs
(bad)
fbld
lods
loop
mov
icebp
jl
rcr
loopne
push
push
inc
or
test
mov
jecxz
lock
and
loopne
pop
jmp
jne
mov
jg
xchg
stc
add
jo
sub
mov
cmp
mov
(bad)
hlt
in
call
in
push
pop
out
jle
jp
jmp
mov
je
or
cmp
addr16
sbb
out
sub
push
pop
daa
xor
stc
cmp
mov
jnp
sbb
rcl
xor
pop
mov
and
aas
cdq
aam
test
inc
mov
ds
getsec
(bad)
mov
pop
(bad)
lock
lahf
pop
mov
adc
mov
cmp
(bad)
popa
pop
out
std
mov
sbb
in
sbb
sbb
fdiv
in
or
into
pusha
xchg
xadd
and
loopne
clc
mov
jg
mov
fcmovu
mov
imul
not
neg
jns
icebp
mov
outs
sub
out
call
dec
fld
or
call
jnp
leave
out
clc
pop
sbb
stos
cmp
stos
repz
pop
(bad)
fucom
out
jecxz
fisttp
ja
stos
addr16
dec
or
or
dec
sar
or
and
hlt
adc
jg
clc
fdiv
add
lods
stc
test
jl
push
in
fisttp
(bad)
fnstenv
xchg
(bad)
mov
xchg
call
aad
iret
stos
jbe
ror
jbe
lods
stc
and
mov
pop
cmp
stos
push
outs
out
jno
retf
int
pop
jmp
fstp
mov
mov
lahf
mov
push
ja
dec
cmp
mov
ret
imul
sub
pop
cmp
test
int
pop
call
dec
lea
and
cli
retf
shr
in
loop
sbb
jg
cdq
into
das
adc
sti
mov
sbb
fst
repz
cld
loope
xchg
inc
daa
mov
cmps
popf
arpl
mov
or
mov
dec
mov
addr16
dec
ss
sbb
jae
jno
jnp
mov
cld
cmp
cmp
push
test
cld
and
scas
pop
jno
sub
inc
or
clc
cwde
mov
aas
xor
fmul
jmp
(bad)
popf
jg
das
test
inc
or
dec
lods
fprem1
or
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
xchg
sbb
test
inc
or
test
inc
or
test
adc
and
adc
dec
push
cmp
sbb
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
retf
mov
add
inc
dec
inc
cmp
popa
inc
add
add
xor
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
stc
add
add
add
and
or
push
push
inc
inc
push
inc
xor
xor
add
add
sub
add
add
mov
add
inc
jo
sub
(bad)
leave
ins
cmp
lods
pop
scas
fsubr
loopne
js
cs
iret
call
mov
dec
scas
fucomi
clc
mov
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
lea
add
add
cmps
cdq
test
push
fwait
cmps
popf
lods
movs
add
add
stos
mov
popf
mov
movs
mov
(bad)
mov
cmps
mov
aam
into
lds
mov
fsub
mov
rcl
jmp
(bad)
mov
mov
(bad)
into
jmp
xlat
push
stos
and
leave
retf
xchg
dec
fsubr
out
sbb
mov
sub
sub
sub
mov
inc
lods
loop
mov
popf
js
fyl2x
xchg
cs
pop
sahf
ins
enter
ds
sub
push
movs
clc
das
cmps
shl
aaa
imul
(bad)
sbb
ins
retf
mov
sub
jb
push
xchg
in
xchg
cmp
cmps
dec
cmps
dec
and
add
and
dec
adc
pop
aaa
jl
and
jmp
addr16
sar
or
mov
mov
or
cs
iret
mov
pop
cmp
add
cld
je
xor
or
dec
mov
and
add
fisttp
xor
xor
cmc
sub
jecxz
jno
sub
sub
jp
pop
pop
in
adc
outs
jnp
dec
xor
repz
or
pop
xchg
and
lock
jo
test
xor
jmp
pop
mov
outs
repz
js
rol
or
neg
push
or
int3
inc
loope
neg
or
push
xchg
fdiv
movs
and
jl
gs
int3
movs
or
add
movs
cmps
add
sbb
sub
inc
rcr
pop
jge
in
mov
push
movs
or
pop
sbb
movs
rol
pop
loopne
add
pushf
js
cmp
mov
jmp
clc
mov
dec
inc
adc
in
push
inc
and
retf
and
inc
pusha
add
mov
adc
mov
dec
pop
jns
leave
es
cli
mov
jns
jo
call
rcl
leave
xchg
sub
push
and
mov
daa
and
pop
cmps
enter
cmp
jns
mov
stos
adc
push
push
jae
fdiv
je
jle
retf
shl
imul
cmps
icebp
movs
mov
cmp
scas
mov
pop
and
pop
mov
cmp
cli
sub
or
push
imul
push
scas
inc
es
add
mov
jns
cld
movs
daa
sub
fild
aad
fwait
push
outs
(bad)
mov
inc
dec
inc
sar
mov
jmp
aam
hlt
dec
or
add
sbb
(bad)
xchg
pop
bound
add
dec
cld
jmp
(bad)
out
pop
jl
in
stos
int3
sub
outs
out
xor
inc
cli
fs
sub
mov
dec
int3
sbb
jp
in
fnsave
shr
and
das
xor
in
xor
ins
mov
sub
jo
or
mov
add
imul
push
mov
cmps
aam
xor
cdq
clc
shr
pop
shr
mov
push
sbb
adc
adc
popa
mov
cmps
mov
push
cmp
js
xor
sahf
shl
mov
int
mov
out
ss
cmp
xlat
lds
cs
aad
ds
fidiv
adc
scas
inc
stc
dec
ss
addr16
out
into
mov
test
jnp
int3
dec
(bad)
or
fwait
xchg
fwait
test
cs
cmc
inc
stos
movs
cmp
nop
retf
inc
push
mov
jp
cli
and
jns
int3
xor
dec
and
mov
xchg
mov
mov
call
jge
jp
int3
pop
jae
cmc
mov
fimul
jae
ds
mov
stc
push
fcmovu
stos
icebp
aaa
scas
fisttp
jae
pushf
imul
add
inc
lea
scas
and
xor
mov
mov
addr16
fdiv
pop
or
or
fbld
mov
daa
or
xchg
sbb
and
lock
scas
push
mov
js
vmread
mov
or
je
xchg
adc
mov
js
jecxz
int
stos
fidivr
fisttp
rcl
push
sub
pushf
sbb
cmp
lods
shl
dec
mov
stos
xchg
push
sub
xchg
enter
sub
jl
popf
pop
les
outs
repnz
cmp
jmp
movs
mov
jno
js
fisubr
mov
xor
and
push
mov
ins
pop
inc
add
adc
mov
or
mov
inc
lods
inc
and
jns
xchg
ror
xor
(bad)
dec
cmp
xchg
mov
mov
fwait
sbb
mov
or
cmp
dec
fs
cmp
cld
inc
cmp
mov
fs
scas
js
mov
and
gs
xchg
sbb
adc
movs
ins
rcl
lea
jo
(bad)
mov
movs
call
add
inc
add
jmp
test
sbb
fbld
inc
dec
or
rcr
add
nop
mov
jle
arpl
cmp
xor
xor
xor
dec
stos
push
dec
cdq
xor
mov
and
in
mov
test
inc
pop
(bad)
pop
test
inc
xor
adc
add
mov
cmove
and
test
push
mov
rol
xchg
dec
mov
cmp
ins
stos
pop
pop
sub
push
jb
bound
inc
add
add
call
add
lods
mov
cli
shl
jno
(bad)
jp
fcmovbe
scas
into
inc
add
inc
or
mov
push
ror
ins
cmp
jmp
jno
mov
lock
or
inc
pop
aas
loopne
dec
sbb
mov
in
mov
imul
stos
push
sbb
add
dec
stos
cmps
add
cwde
jp
sbb
loope
mov
and
jecxz
cmps
adc
pop
mov
add
pop
mov
xor
pop
jmp
loopne
and
adc
loope
stc
sar
xchg
sub
inc
xchg
cmps
mov
push
aaa
add
inc
mov
and
inc
pop
scas
fistp
loopne
add
cwde
mov
xchg
pop
mov
mov
sub
out
xchg
xor
test
mov
add
dec
add
inc
push
mov
scas
mov
push
mov
sar
ins
mov
aas
clc
add
xor
enter
mov
adc
imul
mov
das
rol
daa
adc
adc
add
xor
ficom
int3
inc
repz
sub
jecxz
fnstcw
inc
jo
(bad)
adc
or
in
add
(bad)
jmp
mul
mov
sbb
add
cmp
and
inc
enter
rol
cmps
aam
shl
outs
mov
imul
mov
add
ret
sub
sbb
call
test
loope
dec
cdq
call
inc
adc
or
fwait
inc
out
fisubr
(bad)
add
inc
fist
mov
cmp
xchg
adc
shr
shld
arpl
pushf
mov
and
sbb
fs
nop
add
sbb
aaa
jle
push
fsubr
jno
push
hlt
mov
push
sbb
icebp
ret
mov
ret
test
pusha
mov
mov
clc
mov
mov
shl
dec
sub
pusha
rol
add
add
mov
mov
aad
and
xchg
mov
sbb
sbb
or
or
mov
jmp
ja
lds
sub
hlt
enter
add
adc
mov
aam
sub
pop
in
pmaxub
pop
test
dec
cmp
lock
sbb
jge
dec
lahf
retf
xchg
xor
movs
xchg
push
jle
test
lea
shl
inc
and
xchg
jg
imul
mov
daa
jecxz
sti
mov
cmp
or
sbb
sahf
fimul
mov
jb
icebp
or
xchg
xchg
shr
in
lods
jno
stos
mov
push
sbb
sbb
stos
adc
mov
and
iret
xchg
jp
out
cld
out
and
repnz
je
push
dec
neg
pop
add
mov
cmp
cli
push
add
aaa
and
lods
mov
mov
inc
inc
jno
push
and
dec
rcr
pusha
jg
adc
lds
mul
ret
movs
outs
popf
div
aaa
cmp
inc
jmp
inc
outs
dec
(bad)
jnp
loope
je
je
xlat
inc
lea
pop
gs
pop
inc
adc
js
test
jg
(bad)
jg
out
cmps
add
aad
jns
data16
ins
lea
pop
shl
mov
adc
add
ss
arpl
jb
inc
pop
push
xor
in
or
push
and
aad
sar
jno
data16
xchg
ds
jae
adc
push
cmps
inc
scas
adc
out
sub
adc
push
or
js
xlat
cmp
and
mov
inc
div
js
push
test
and
ret
and
out
sub
add
jle
out
push
mov
(bad)
movs
and
mov
push
jp
adc
sub
and
jae
data16
in
and
sub
mov
add
test
jb
xor
cmp
mov
mov
aaa
sub
xor
shl
pop
mov
shl
push
test
jge
clc
jbe
loop
lea
pop
mov
rcl
adc
xchg
jb
into
sub
pop
mov
jbe
add
cmp
mov
jle
pop
(bad)
mov
jle
js
(bad)
xchg
aaa
jbe
pop
fistp
add
push
adc
es
fs
out
test
pop
ret
pop
adc
jno
sub
and
test
dec
inc
test
xor
or
js
and
add
pop
pop
and
pop
enter
(bad)
lds
lods
jno
icebp
inc
adc
ja
mov
xchg
(bad)
pop
ror
test
loop
outs
and
and
and
sbb
adc
pop
and
inc
pop
sub
xor
dec
and
pop
xchg
push
adc
add
mov
xchg
mov
jge
pop
pop
test
aaa
and
add
adc
pop
adc
adc
xchg
sub
inc
outs
xchg
xchg
or
cmps
xchg
lea
sub
push
push
inc
xchg
jecxz
xchg
jmp
call
ss
pop
xchg
push
adc
cmp
rol
xchg
xchg
scas
or
cdq
xchg
test
pop
test
push
push
dec
aaa
imul
mov
pushf
dec
inc
cwde
xchg
add
imul
nop
pop
push
stc
call
xchg
cdq
dec
lods
dec
add
mov
stos
sbb
ja
daa
adc
fiadd
jecxz
sahf
in
cmp
jecxz
lds
add
dec
sbb
aad
loopne
xor
ins
in
not
xchg
sub
cmp
movs
(bad)
(bad)
push
sub
adc
aad
add
dec
nop
adc
add
cmps
xor
aas
push
xor
sbb
xchg
pcmpgtw
inc
push
daa
mov
rcr
sub
inc
and
sub
repz
jmp
push
and
xchg
cmp
xor
mov
mov
dec
dec
or
call
outs
aad
nop
out
bound
push
pop
out
movs
fs
push
xchg
jb
mov
test
xchg
dec
sbb
push
popf
push
xchg
test
ss
mov
aam
jnp
add
clc
lahf
mov
sub
cwde
test
mov
inc
cdq
movs
sub
adc
cwde
mov
jnp
(bad)
jmp
cmp
addr16
dec
sub
inc
imul
clc
xlat
xchg
inc
or
mov
jb
add
sbb
in
sbb
adc
push
xchg
xchg
arpl
inc
adc
pop
data16
mov
mov
mov
nop
push
nop
mov
or
repz
cwde
xor
mov
lods
call
aas
leave
cmps
(bad)
stos
stos
xchg
add
test
xchg
mul
sbb
dec
inc
push
add
jbe
cmp
cmp
lods
lds
sub
ja
jbe
aad
inc
pop
lods
mov
test
cli
nop
mul
sub
je
xchg
pop
pop
mul
movs
popa
add
push
test
xchg
jl
push
mov
add
add
pop
ror
push
xrelease
push
jb
jb
rol
adc
stos
cmps
mov
cmp
daa
xchg
cmps
mov
and
or
mov
xor
dec
ins
add
xor
inc
popa
sahf
shl
aam
scas
aaa
xor
or
stos
xchg
sbb
pop
pop
inc
pop
inc
xor
bound
cmp
xchg
popa
cmp
inc
pop
lods
test
sbb
daa
mov
cmp
jle
sbb
cli
pop
pop
test
lds
pop
sub
cmc
xchg
jp
scas
add
jg
loopne
psllq
jge
lahf
push
jae
aaa
sbb
bound
test
push
mov
sub
dec
pop
add
popa
mov
cmps
and
es
push
icebp
xchg
ins
and
addr16
mov
push
pop
in
retf
movs
std
push
jb
inc
sub
(bad)
pop
add
mov
movs
mov
dec
xchg
into
or
pop
mov
mov
js
sub
and
call
mov
or
aad
push
ror
or
mov
clc
dec
push
xchg
fisub
mov
mov
cli
inc
mov
stos
sbb
mov
mov
mov
pop
xor
xchg
js
loope
test
and
fadd
sbb
test
jno
fwait
rcr
mov
idiv
daa
gs
sub
fwait
jp
pop
es
jo
test
dec
xor
movs
push
push
or
inc
imul
xchg
mov
out
mov
xchg
bound
xchg
dec
sbb
and
sub
adc
dec
jecxz
jp
and
inc
gs
movs
xchg
stos
fwait
mov
test
imul
pusha
sub
rol
enter
pop
repnz
ret
cmp
lahf
jg
jle
sub
pop
mov
mov
xchg
mov
adc
add
push
pop
xchg
mov
mov
gs
call
dec
das
push
mov
pushf
test
(bad)
xchg
sub
xchg
repz
addr16
pop
in
mov
xor
xchg
je
adc
or
jo
pushf
retf
jnp
dec
mov
dec
mov
scas
pop
test
push
stc
test
cmp
push
xchg
xor
or
js
enter
cmps
fxch
enter
push
sbb
scas
les
enter
fnstsw
mov
rcl
inc
jnp
dec
je
push
mov
add
adc
dec
mov
jmp
je
jl
fbld
xor
ret
into
cmc
out
mov
and
shr
pop
cmp
lea
sub
mov
sub
pop
gs
loop
push
push
daa
sbb
inc
aam
cli
mov
mov
push
ja
adc
pop
es
jmp
pop
sub
stos
ror
mov
ja
das
int
or
jle
test
cs
aad
adc
cmps
and
or
sbb
out
mov
js
dec
cmps
jns
fcmovu
xlat
fs
rol
mov
gs
adc
mov
daa
push
dec
(bad)
iret
inc
fnsave
add
jl
jb
cmp
mov
dec
ret
test
sub
sgdtd
rcl
mov
xlat
sbb
pop
sbb
ss
sahf
fst
xchg
ret
in
into
add
inc
cmp
adc
jne
or
mov
mov
test
sub
and
jecxz
retf
lods
in
mov
hlt
(bad)
aad
jge
xor
fidiv
loopne
xor
test
int
dec
fild
mov
xor
pop
mov
add
add
inc
in
or
ret
cmp
fldcw
mov
or
nop
pusha
(bad)
jle
and
mov
push
imul
xlat
dec
rcl
and
inc
add
(bad)
or
mov
icebp
loope
cdq
jne
lea
(bad)
pushf
arpl
bound
dec
fisttp
movs
loope
in
stc
shl
fld
(bad)
sbb
lods
xchg
lea
(bad)
jg
fst
xor
add
sar
aaa
out
sbb
mov
clc
in
adc
inc
sbb
into
int3
aad
shr
outs
pop
fstp
out
fdivp
je
ds
jns
scas
fs
cmc
adc
push
aad
inc
sub
cs
test
push
mov
mov
adc
pop
dec
aas
ss
pop
loope
mov
mov
mov
push
(bad)
adc
and
inc
mov
xchg
inc
fld
int3
add
sti
shl
jmp
lock
push
and
mov
shl
and
(bad)
adc
pop
fdiv
jge
femms
jnp
icebp
in
add
and
sahf
xchg
(bad)
jmp
popf
scas
mov
cli
ficomp
push
xchg
rol
add
xchg
xor
loope
mov
loope
push
push
mov
jecxz
out
in
pop
adc
ds
mov
and
dec
jmp
pop
loop
jle
lds
std
out
sahf
in
jge
daa
or
paddd
imul
mov
pop
add
ret
push
xor
in
data16
cmps
ins
sbb
sub
adc
call
mov
(bad)
stos
dec
fild
adc
seta
ss
fcmovne
add
xlat
(bad)
mov
push
sbb
lock
aas
ret
jmp
clc
xor
xchg
sbb
and
mov
push
repz
pop
ja
pushf
mov
(bad)
ds
mov
jl
sub
sbb
push
adc
push
in
mov
push
xor
es
popf
sub
pop
lods
and
sbb
fstp
fadd
push
inc
jae
and
jbe
and
(bad)
lock
sub
imul
inc
cmc
mov
in
jae
push
or
push
shr
jp
hlt
mov
push
gs
pop
cli
pop
or
cmovle
fisttp
sbb
fild
mov
les
bound
shl
fs
repnz
loopne
pushf
and
sub
mov
xchg
ins
push
push
fucomip
xchg
mov
add
and
fcomip
or
dec
getsec
loop
adc
push
pop
lds
adc
add
add
xchg
aad
rcl
mov
outs
xor
inc
push
inc
sbb
add
xchg
iret
jmp
xlat
out
stc
jge
pop
xor
add
icebp
lea
mov
into
push
enter
test
dec
jmp
dec
int
and
push
jne
mov
cmc
aad
(bad)
xor
adc
mov
adc
push
aaa
ins
mov
xor
jae
not
clc
xor
stc
or
cli
fimul
sbb
in
or
add
sbb
mov
mov
push
ins
sub
(bad)
pop
pusha
sar
mov
rcr
cmp
add
inc
daa
push
push
cmp
push
jecxz
jns
ss
outs
add
xor
shl
lods
outs
ficom
jb
fldenv
push
inc
test
shl
dec
dec
dec
adc
and
test
addr16
inc
mov
adc
test
aad
push
xchg
je
push
and
inc
add
adc
add
(bad)
stos
in
cmp
dec
movs
js
in
inc
inc
aaa
fidiv
cmc
dec
xchg
mov
dec
fld
push
enter
and
mov
jae
mov
imul
mov
shr
xchg
xchg
pop
loope
ret
sbb
in
(bad)
adc
pop
pusha
dec
inc
ret
mov
mov
mov
out
sub
cmps
cdq
aaa
ja
dec
and
xchg
int
inc
ret
add
push
sub
or
call
ja
ja
jl
xchg
(bad)
cmp
sbb
mov
or
and
add
in
xchg
jbe
ror
outs
mov
adc
lock
mov
inc
mov
clc
mov
inc
push
cmp
sbb
push
nop
mov
push
test
cmp
adc
sbb
inc
dec
lock
fcom
adc
mov
enter
xchg
leave
es
jl
lahf
and
scas
push
retf
je
xchg
jl
xchg
jb
xor
mov
lds
(bad)
stos
pop
mov
inc
xor
jl
into
push
fmul
ror
cmp
cmp
enter
adc
jg
mov
xor
and
inc
xchg
push
xor
add
rol
popf
xchg
ror
mov
fst
aam
inc
sbb
cmp
pop
xchg
push
rol
add
add
add
sub
add
mov
sahf
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
cdq
add
xor
add
add
xor
xor
data16
data16
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
cdq
cdq
cdq
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
inc
jo
sub
(bad)
sbb
cmp
lods
pop
scas
fsubr
add
call
mov
jecxz
push
inc
mov
mov
add
test
jno
ja
popa
jns
jl
test
xchg
push
mov
mov
add
(bad)
je
push
jae
pop
jnp
xchg
scas
inc
lahf
jo
lahf
mov
mov
jnp
mov
xor
inc
mov
jae
test
sar
(bad)
gs
(bad)
fcmovnb
int3
stos
mov
shr
shr
mov
call
add
mov
dec
mov
push
cmp
xchg
sub
sbb
add
or
sub
ror
mov
arpl
jmp
xchg
adc
or
sub
and
add
lock
or
movs
dec
inc
pop
mov
jbe
dec
mov
jno
ds
cdq
adc
mov
movs
add
call
fiadd
not
sbb
test
push
lods
aas
xlat
ins
ins
(bad)
out
and
stos
stos
retf
push
and
into
dec
adc
inc
outs
ds
data16
jge
cmp
sub
xor
test
ss
cwde
pop
mov
movs
adc
leave
adc
xor
in
xor
fcmovnb
jecxz
in
test
xchg
cmp
mov
cmp
mov
mov
js
loope
add
dec
sub
mov
stos
and
mov
daa
or
xor
adc
inc
jmp
test
adc
iret
sub
mov
fcomp
or
push
mov
das
add
mov
sub
pop
aas
imul
adc
mov
push
mov
add
or
mov
xchg
push
adc
and
icebp
xor
mov
adc
cmps
mov
jbe
xor
les
mov
cmp
inc
jl
retf
xchg
sub
mov
cmp
sbb
pop
push
inc
shl
loope
add
adc
adc
ret
xchg
xchg
std
in
pop
xor
les
jecxz
push
xchg
ficomp
add
add
cmp
test
sbb
push
adc
jmp
into
sbb
or
mov
or
sar
cmp
dec
dec
(bad)
test
cli
rol
cmp
stos
ins
and
jne
(bad)
cmp
sub
dec
and
pop
mov
lea
test
into
inc
xor
sub
dec
lods
pop
mov
sti
test
loop
ret
dec
and
sub
dec
mov
push
shl
xor
fs
push
movs
sahf
pop
xchg
popa
loop
mov
ss
sbb
jmp
pop
add
cmp
jae
adc
stc
and
mov
mov
push
push
adc
arpl
repnz
popa
adc
lods
cmp
fnstcw
jne
clc
fstp
mov
arpl
out
fsubr
jmp
adc
sub
aad
adc
or
sbb
push
sbb
sbb
sub
repz
std
mov
dec
js
stos
or
sub
push
jge
push
cmc
pop
mov
mul
ins
xor
inc
in
mov
(bad)
scas
jp
sbb
xor
add
cli
push
movs
mov
popf
int3
inc
pop
rcr
sbb
dec
mov
lods
or
lods
xchg
sbb
jl
int
popaw
das
das
fmul
ret
adc
shl
dec
(bad)
sti
sbb
cmc
mov
add
or
stos
xor
inc
pop
push
les
ds
jo
es
pusha
or
pop
mov
sub
jns
(bad)
outs
test
out
clc
shl
in
fadd
adc
cmc
push
jmp
and
xor
push
mov
cmp
jne
cmc
pop
mov
loopne
loopne
fdiv
xlat
mov
jne
iret
lahf
cwde
inc
cwde
or
sar
mov
(bad)
(bad)
and
mov
mov
ins
adc
aam
enter
adc
popa
fs
push
add
sub
cmps
enter
inc
or
dec
push
mov
in
loope
push
(bad)
or
fstp
js
xor
jle
or
mov
xchg
(bad)
es
aaa
and
retf
dec
rol
pusha
push
into
xchg
jb
sbb
add
daa
cld
nop
mov
std
mov
xor
and
xchg
push
adc
sub
rol
dec
rol
adc
es
jb
outs
inc
add
sbb
jmp
dec
jl
loop
pop
sbb
popa
pusha
add
dec
adc
loope
scas
sub
mov
add
sbb
jle
dec
(bad)
cld
push
add
add
add
mov
push
stos
sub
pop
ret
mov
mov
add
sub
ret
or
enter
push
add
add
mov
xchg
in
adc
add
xchg
push
stos
fisub
(bad)
in
fwait
add
call
add
add
inc
fdiv
xor
popa
jmp
and
and
pop
pusha
add
ins
add
pop
jecxz
iret
push
iret
inc
clc
shl
cmp
call
in
cs
mov
fist
inc
adc
lock
or
sub
je
or
sbb
adc
pusha
jnp
or
adc
add
lock
inc
popa
ins
xor
loope
sbb
in
jl
mov
imul
icebp
dec
fs
adc
or
nop
sbb
pop
mov
cld
mov
rcl
cmp
cdq
mov
xchg
mov
mov
or
repz
sbb
or
test
push
cmove
shl
iret
add
or
sbb
xor
in
sar
test
jo
inc
ficom
jmp
fstp
xor
adc
pop
inc
or
(bad)
in
push
(bad)
cmp
dec
mov
in
pop
fist
out
mov
dec
push
out
aam
adc
fmul
je
ret
loop
sub
push
aam
cmps
je
dec
cdq
lods
xor
idiv
mov
cmps
dec
sbb
mov
push
cmp
imul
idiv
and
xor
loop
les
and
sub
dec
adc
add
dec
or
(bad)
into
ins
dec
push
inc
jns
or
jmp
push
jns
push
mov
test
fbstp
cmp
es
sub
inc
pop
push
enter
xlat
mov
inc
pop
adc
dec
sub
les
enter
push
cmp
(bad)
xor
mov
adc
jg
loopne
xor
cmp
add
sbb
sub
and
xchg
stos
aad
xor
jl
lds
repnz
sub
frstor
xor
add
cld
or
sub
and
sub
ss
pop
push
jmp
mov
jne
and
xchg
mov
jne
cmp
xor
sub
popf
mov
sbb
xchg
sbb
xchg
out
mov
mov
mov
retf
repz
test
ds
adc
xchg
bound
push
into
and
mov
out
ret
stos
mov
pop
fistp
lock
cmp
jo
push
mov
cmp
cmps
jbe
outs
fwait
dec
fs
pop
fadd
dec
(bad)
dec
pop
mov
cmps
or
imul
dec
sub
inc
lods
sub
mov
fnstcw
(bad)
icebp
sahf
not
(bad)
cmps
pop
out
fldenv
lds
dec
pop
imul
xor
sbb
push
imul
mov
jge
mov
or
in
jmp
sbb
xor
mov
pushf
push
mov
cmp
int
cs
pop
ret
ss
jg
adc
jb
mov
pushf
push
or
in
paddb
loope
rol
cmps
ds
adc
xor
(bad)
sahf
cmp
jbe
ins
or
scas
pop
cmps
retf
js
into
test
shl
xchg
jb
movs
mov
repz
sbb
sub
adc
jne
pop
adc
enter
jae
shr
xlat
in
adc
rol
mov
inc
add
outs
xor
inc
outs
cmp
leave
outs
xchg
mov
inc
daa
or
(bad)
add
cmp
test
jmp
lods
cmp
jo
lods
ficomp
push
lods
fild
fs
push
dec
add
(bad)
xor
jp
sar
xchg
out
and
pop
mov
sbb
arpl
cmps
clc
ja
xor
loope
jl
pop
outs
xchg
add
jb
nop
sbb
out
div
jge
mov
xchg
jae
sbb
jns
xchg
cmp
pop
add
sbb
fs
out
imul
jp
les
and
push
xor
or
jbe
pop
add
jmp
add
jle
adc
cwde
add
jle
daa
cmp
pop
add
jne
push
jb
adc
mov
sbb
adc
loope
push
js
sbb
addr16
(bad)
push
mov
adc
addr16
ret
xor
dec
inc
dec
inc
cmp
sub
add
sbb
sbb
pusha
call
push
add
int
jo
(bad)
sub
clc
add
xor
and
adc
sbb
in
xor
aam
sbb
dec
inc
sbb
inc
js
ins
cmp
sub
push
sub
xor
sbb
outs
shl
sub
sub
xor
(bad)
rol
sbb
jbe
(bad)
jbe
xchg
jb
or
setae
or
and
ins
inc
shl
cmp
cmp
sbb
jecxz
sub
xor
aam
and
pop
sbb
jae
xlat
and
and
loope
mov
pop
adc
add
repz
jbe
aaa
pop
pop
xchg
ja
(bad)
js
leave
js
jno
jns
sbb
add
mov
add
or
bound
cs
outs
lods
popa
and
pop
push
sbb
push
and
xchg
es
or
jp
clc
pusha
stos
and
addr16
and
sbb
test
mul
dec
lock
xor
sub
sbb
push
add
imul
mov
push
add
inc
repnz
push
aam
add
add
and
mov
push
outs
adc
js
sub
xchg
push
mov
adc
nop
inc
sub
inc
sub
xor
and
test
push
inc
xor
mov
test
cmp
les
pop
lea
ss
add
xor
pop
mov
ins
cmp
and
xor
cmp
add
test
sbb
push
pop
mov
fwait
mov
pop
add
adc
mov
arpl
xor
xchg
scas
jne
sbb
stc
lds
sbb
out
xchg
dec
push
xchg
or
mov
pop
test
test
sbb
inc
dec
das
xor
mov
xchg
test
mov
and
call
add
push
push
shr
inc
mov
dec
add
pop
clc
test
sbb
call
sub
leave
jl
shr
adc
dec
adc
xchg
jp
adc
imul
xor
sbb
es
es
and
inc
adc
xchg
sbb
pushf
pusha
push
es
and
jbe
lock
mov
pop
pushf
inc
arpl
test
xor
ss
mov
xchg
jbe
retf
rcl
sub
ret
outs
repz
outs
int3
xor
sbb
push
repnz
(bad)
add
stos
sahf
adc
add
js
xor
pop
stos
dec
xchg
jl
inc
ins
and
(bad)
inc
ja
cmps
xchg
daa
xchg
outs
imul
rol
repnz
movs
cli
and
sbb
cmp
mov
sub
les
imul
sub
imul
and
test
out
ja
sbb
bound
retf
jne
call
(bad)
mov
lahf
mov
stos
aad
xor
lods
dec
cmps
and
aas
daa
push
cmps
pop
push
inc
ret
mov
in
xchg
movs
(bad)
in
jg
dec
scas
popa
pop
cmps
push
outs
stc
xchg
(bad)
cmp
and
sub
xor
push
dec
in
bound
loope
add
inc
mov
jg
icebp
cmp
push
test
jb
dec
daa
pop
fnstsw
xor
cmovle
out
mov
mov
add
or
sub
jns
aaa
mov
(bad)
jb
mov
jne
mov
addr16
sti
xchg
retf
push
inc
pop
and
enter
add
xchg
cmp
aaa
dec
mov
ins
and
sbb
adc
inc
add
in
aaa
pop
jmp
mov
aad
int
adc
push
dec
inc
(bad)
sbb
inc
(bad)
pop
xor
mov
dec
inc
jbe
inc
mov
(bad)
dec
cmps
mov
into
add
pop
hlt
or
loope
adc
inc
fwait
push
mov
lods
cmp
mov
jmp
add
sbb
push
inc
maxps
aad
adc
jno
jecxz
ins
addr16
dec
xor
cmp
add
loope
inc
das
mov
push
arpl
jp
mov
loope
jecxz
movs
movs
adc
inc
mov
aam
fiadd
scas
cwde
lods
shl
test
inc
pusha
in
jg
mov
lds
rcl
sbb
mov
rol
adc
xor
adc
add
inc
pop
or
aad
lea
in
inc
sti
jecxz
ror
fwait
add
xor
shr
sti
pop
imul
repnz
and
arpl
fist
popa
mov
ficomp
xchg
push
and
fstp
repz
and
and
in
jmp
cs
jecxz
xchg
mov
xor
pop
push
je
mov
jne
cmp
mov
mov
ret
or
ins
fisub
cmps
adc
inc
push
cmp
or
pop
fstenv
out
inc
sbb
(bad)
call
shl
dec
mov
mov
mov
lods
xor
mov
inc
push
popa
cmp
and
bound
inc
pop
lds
push
push
pop
push
fwait
pop
push
jno
jmp
mov
rol
jb
add
mov
pushf
pop
mov
mov
mov
xor
icebp
cmp
mov
ret
dec
(bad)
aam
and
iret
and
push
fadd
cmp
ins
jge
retf
lds
sbb
adc
inc
jb
outs
mov
mov
sub
sar
mov
xchg
test
jecxz
ret
xor
and
in
sbb
sbb
call
enter
sbb
in
mov
cmp
jbe
int3
mov
ficomp
sbb
mov
or
push
fidiv
inc
xchg
inc
mov
jp
aaa
xchg
test
mov
mov
inc
cmp
outs
icebp
cmp
jb
xlat
jmp
retf
sahf
mov
mov
ror
xchg
sti
pop
and
popa
retf
mov
inc
cld
ret
or
std
movs
mov
xor
cld
rol
push
das
jmp
iret
hlt
mul
sbb
xor
ret
ret
movs
cld
sar
cmp
sbb
sqrtps
add
inc
cs
add
retf
aad
ss
jno
add
mov
mov
jns
or
jbe
ins
adc
xchg
iret
inc
xor
(bad)
mov
retf
aam
mov
cmps
ins
(bad)
and
mov
sbb
cmp
add
push
sub
aam
shr
mov
inc
or
in
jmp
sbb
adc
mov
add
adc
pop
jg
push
xor
das
xchg
call
or
pop
aam
mov
xchg
dec
es
mov
imul
mov
iret
xchg
cmp
lea
mov
das
repz
jmp
xor
rcl
adc
fld
daa
bound
dec
arpl
pop
sbb
das
les
int3
mov
fstp
shr
sbb
and
and
mov
iret
jae
mov
shr
fcomp
pop
fwait
mov
sbb
cmps
inc
or
xor
inc
(bad)
fidivr
(bad)
push
aam
cmp
and
stos
std
mov
lea
xor
es
adc
ins
sub
or
xchg
xor
xor
mov
mov
gs
retf
enter
mov
xlat
cmp
scas
sub
ins
push
arpl
ds
movs
int3
cmp
xor
ret
mov
jg
rcl
cmp
inc
push
mov
sub
outs
sbb
mov
mov
loopne
push
out
scas
hlt
mov
rcl
pop
cs
dec
push
dec
out
adc
inc
ins
xchg
(bad)
call
addr16
(bad)
pop
sub
mov
pop
lods
fwait
rol
xchg
test
cmp
sub
fmulp
mov
adc
shr
pop
mov
pop
leave
jmp
outs
in
dec
push
jnp
les
js
xchg
(bad)
pop
retf
jb
cmp
jmp
adc
pop
fsubp
mov
and
jge
cmp
jg
xlat
scas
sub
push
push
ficom
mov
xlat
stos
mov
in
pop
and
sub
sar
fldpi
in
aaa
cwde
mov
lods
add
loop
out
in
out
out
out
call
out
in
fsubrp
je
out
lock
hlt
pop
out
idiv
clc
sahf
out
cli
mov
dec
inc
add
and
add
add
add
sub
add
add
add
xor
xor
add
xor
xor
add
add
inc
xor
xor
cdq
add
xor
add
add
xor
xor
data16
data16
add
xor
cwd
int3
cwd
jmp
push
int3
int3
data16
jmp
int3
cdq
cdq
call
int3
cdq
int3
call
int3
int3
int3
dec
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
inc
push
inc
jo
sub
(bad)
sbb
add
add
pusha
pop
xor
int
jb
in
jp
pusha
popa
push
jmp
mov
pusha
mov
sahf
es
mov
std
jne
jb
push
add
cmp
addr16
xchg
add
push
jae
adc
test
xchg
mov
jno
mov
mov
mov
push
jge
scas
mov
ja
pop
pop
lds
push
scas
mov
mov
mov
int3
(bad)
mov
mov
aam
push
or
or
in
jo
mov
mov
(bad)
sahf
fs
in
(bad)
xchg
rcr
or
adc
adc
data16
outs
adc
ins
out
(bad)
mov
mov
add
add
or
sub
les
mov
xchg
xor
sahf
inc
call
sub
fs
dec
stos
test
add
mov
nop
dec
(bad)
sub
enter
sub
fld
xor
lods
std
lock
adc
dec
and
mov
test
mov
(bad)
fst
push
in
rcl
pop
adc
xor
cmps
inc
sub
and
adc
push
xchg
out
mov
dec
stos
jmp
jne
dec
push
idiv
out
xchg
add
sbb
and
cmp
adc
fbld
pop
popa
cmp
mov
add
pusha
icebp
and
retf
aam
push
loopne
repz
dec
(bad)
je
jmp
imul
mov
aad
idiv
ffreep
aas
xor
and
les
jmp
and
lods
(bad)
aad
out
jo
and
cli
lods
in
cmp
and
jg
ret
cmp
pushf
test
loopne
or
xor
pop
jo
test
inc
cmp
mov
xor
lods
gs
mov
inc
mov
mov
xor
sub
jmp
push
(bad)
pop
sub
popa
daa
loop
jo
out
inc
push
mov
inc
add
add
xor
jno
push
les
pop
ins
sub
mov
push
add
add
mov
cdq
call
call
xchg
xchg
or
enter
mov
fs
iret
outs
push
cmc
leave
xchg
test
cmps
call
mov
mov
aad
pop
mov
loope
mov
push
dec
push
jp
adc
cmp
cmps
ins
mov
add
mov
mov
std
mov
pop
pop
sahf
(bad)
lahf
mov
mov
sahf
(bad)
bound
xchg
mov
retf
push
xchg
(bad)
push
or
mov
(bad)
jmp
lock
and
movs
mov
dec
fistp
imul
mov
push
inc
sbb
out
sub
iret
std
jp
inc
or
mov
enter
repnz
xchg
aaa
nop
pusha
sub
aad
les
dec
xor
icebp
fst
popa
retf
or
push
dec
adc
and
test
xchg
es
cmp
test
dec
jecxz
push
inc
test
and
lea
push
add
push
fst
and
enter
adc
jmp
popf
and
cmp
adc
scas
mov
outs
sbb
mov
add
push
jb
add
out
sub
sub
outs
xor
es
jae
push
mov
jp
jae
inc
jno
cmp
pop
and
jmp
loope
in
(bad)
in
jge
loop
jb
vandps
push
lea
es
adc
daa
outs
ins
adc
rcl
test
ins
icebp
mov
clc
pop
fs
arpl
popa
addr16
inc
push
add
ins
inc
mov
and
sti
and
pop
mov
pop
lahf
and
and
fiadd
les
sub
aad
inc
inc
and
jecxz
xor
add
sub
add
add
xlat
ficom
lea
cwde
push
add
dec
add
adc
xchg
and
and
adc
or
dec
add
sub
nop
push
lods
adc
sbb
int3
aad
loope
push
push
inc
add
dec
pop
nop
fadd
jmp
lock
inc
sub
adc
adc
sbb
or
add
sub
cwde
cdq
adc
js
adc
adc
dec
xchg
jmp
fcomp
lea
add
adc
nop
add
mov
jne
stc
xchg
daa
add
fdiv
mov
cwde
sbb
push
xlat
push
xchg
lock
and
retf
xor
mov
fld
dec
loop
add
mov
xor
movs
sub
or
mov
mov
dec
add
mov
ins
jns
mov
jb
clc
adc
out
mov
or
or
mov
cmp
add
lock
push
imul
mov
and
test
mov
pop
xchg
adc
xor
fsub
dec
adc
sbb
repz
cld
retf
mov
add
ja
int3
push
mov
call
ds
or
dec
xchg
adc
inc
mov
test
ja
ins
push
mov
adc
movs
add
dec
hlt
(bad)
fstp
mov
clc
imul
in
or
mov
add
repnz
jae
mov
add
pop
int
mov
add
jo
pusha
add
cmp
adc
int
pop
rol
popa
push
hlt
push
push
adc
(bad)
(bad)
jo
add
aad
pop
push
je
dec
jmp
out
and
add
lds
pop
push
cmp
dec
jnp
push
sub
inc
and
and
ss
xor
add
and
inc
or
push
pop
push
rol
pushf
and
aam
sahf
xchg
pop
popf
adc
ret
ss
popf
cmp
inc
mov
test
add
cmps
repz
ins
xor
fcmovne
aaa
and
mov
out
sub
pusha
popf
xor
rcl
js
imul
sub
adc
pushf
mov
or
xchg
pop
xor
push
retf
and
loope
mov
add
jle
das
pop
cdq
or
adc
push
(bad)
ins
imul
mov
xchg
inc
mov
xor
adc
ss
or
rcl
sbb
push
outs
(bad)
lds
ror
pop
add
repz
fwait
adc
movs
in
les
jb
mov
push
dec
xchg
lahf
mov
idiv
sbb
inc
gs
or
stos
pop
xchg
and
push
sbb
in
xor
adc
out
pop
xchg
sbb
outs
xor
(bad)
adc
pop
sub
sbb
stc
add
mov
inc
in
mov
aas
push
je
fyl2xp1
test
xchg
test
movs
adc
sar
aam
cmps
mov
or
jo
mov
(bad)
and
sub
cmc
jge
mov
and
hlt
mov
ret
movs
movs
cdq
cmp
xor
fsub
cdq
inc
adc
test
in
sbb
dec
fcmovnb
add
nop
mov
xor
or
xchg
(bad)
sahf
mov
cmp
jnp
and
imul
add
and
out
sub
push
mov
mov
mov
cmp
ret
jl
inc
inc
test
cs
scas
and
adc
mov
call
jmp
ja
mov
fbld
inc
jmp
shl
and
sub
push
mov
or
lods
mov
jl
jmp
pop
(bad)
in
xchg
add
add
xchg
int3
jp
add
sar
dec
in
adc
push
xor
sahf
add
cmp
fucomip
pusha
imul
repz
cmps
cld
ret
fdivr
mov
lods
out
iret
rcr
iret
sbb
pop
cmp
mov
(bad)
lea
lock
push
pop
push
(bad)
stos
movs
sbb
mov
hlt
xchg
test
xor
cmps
inc
pop
sar
push
test
aas
mov
into
ficom
fisttp
sti
add
movs
cdq
mov
jne
dec
fdivrp
adc
pop
jne
sbb
xchg
not
retf
jl
ret
addr16
fwait
call
mov
inc
inc
fdivp
out
fistp
call
pop
inc
cdq
pop
mov
dec
jg
mul
and
rcr
xchg
mov
je
adc
or
pop
mov
jne
(bad)
addr16
inc
or
add
loope
sbb
cli
(bad)
pop
jae
pop
adc
fwait
add
add
lods
pop
jl
adc
mov
push
bnd
addr16
and
pop
and
cmp
dec
adc
sbb
nop
inc
push
and
inc
push
mov
inc
add
daa
ins
inc
test
add
xchg
pop
cmp
jge
(bad)
cmp
movs
xor
xchg
addr16
cmps
adc
mov
je
sub
enter
pop
adc
push
mov
mul
(bad)
imul
add
cmp
mov
nop/reserved
mov
push
test
add
xor
mov
sbb
adc
pop
daa
cmps
jae
loopne
pop
inc
arpl
sub
pusha
adc
xor
fadd
push
xchg
daa
push
adc
push
xchg
addr16
repnz
inc
mov
call
jg
rcr
addr16
(bad)
rol
call
es
push
push
les
adc
pop
neg
shl
lods
push
scas
js
mov
push
inc
push
and
and
je
or
mov
js
jge
js
sub
popa
push
push
enter
loop
xchg
daa
mov
jle
xchg
ins
stos
pop
dec
mov
stos
ror
ds
push
mov
sub
outs
mov
mov
cmp
xchg
add
sub
and
cmp
sub
push
push
aas
retf
or
xchg
adc
adc
mov
push
cmp
mov
out
mov
and
cmp
inc
sub
xchg
adc
jb
fst
sbb
enter
fs
adc
mov
sbb
push
clc
mov
ror
inc
jns
lahf
test
mov
cmp
push
and
lahf
mov
adc
xchg
and
xchg
mov
push
inc
gs
in
and
jns
xchg
mov
sar
mov
sub
xor
cmp
and
xchg
outs
sub
sub
test
pop
test
cdq
test
pop
mov
popa
xchg
pop
sub
pusha
ret
mov
push
mov
inc
or
xchg
dec
push
and
test
inc
int3
and
or
and
fwait
aas
jecxz
jno
daa
js
xor
push
cmp
mov
push
lds
add
ret
adc
inc
sahf
movs
or
dec
sbb
(bad)
sbb
mov
in
and
xchg
push
mov
scas
test
cwde
adc
mov
cmp
jecxz
jmp
xchg
(bad)
cmp
push
ds
and
mov
jns
cld
adc
retf
adc
in
sahf
jo
mov
push
lahf
loopne
mov
push
inc
mov
mov
bound
mov
stos
push
mov
push
sbb
int
jg
adc
jae
das
fimul
jmp
sahf
or
or
rcl
out
jns
jmp
pop
mov
movs
and
and
push
icebp
dec
ret
jae
pop
xchg
dec
aaa
xor
mov
int3
cmp
fmul
hlt
adc
shr
fisub
push
jns
mov
jns
or
push
movs
(bad)
icebp
test
mov
test
xor
ja
xchg
movs
imul
xchg
xlat
sub
lahf
inc
(bad)
cmp
mov
pop
jmp
movs
and
mov
or
jae
imul
xor
xchg
sbb
inc
js
or
stos
lods
(bad)
inc
shr
cmp
out
add
lahf
mov
movs
out
and
xchg
test
mov
mov
push
es
jo
sub
or
jmp
add
xor
fistp
(bad)
mov
mov
leave
out
fdiv
xchg
dec
push
push
das
lds
dec
iret
push
test
sub
aaa
scas
popf
mov
movs
jbe
retf
xor
jp
and
push
jp
push
or
bound
call
jp
neg
(bad)
sbb
les
in
mov
push
jbe
imul
push
dec
stos
lods
call
sub
jp
lahf
jo
dec
scas
popf
xchg
cs
adc
inc
pop
adc
leave
pusha
pop
jne
add
sbb
xor
xchg
fimul
mov
ins
jmp
adc
dec
push
cmp
dec
dec
movs
mov
jb
cmps
(bad)
fidivr
mov
mov
dec
cmp
xchg
xchg
jmp
mov
dec
dec
mov
into
and
ins
cmp
nop
sub
imul
ret
jo
shr
loop
mov
test
add
mov
jle
sbb
mov
pop
dec
stos
jns
mov
sbb
sub
mov
jno
pop
pop
test
aad
mov
dec
stos
les
aam
sbb
dec
push
ret
fwait
mov
mov
pop
sbb
mov
adc
pop
xor
cmp
sbb
sbb
mov
imul
mov
jnp
and
lods
mov
fwait
dec
jmp
test
sub
jecxz
retf
pop
xchg
push
cdq
rcl
fbld
cmp
xchg
xchg
leave
daa
stos
push
fcomp
ja
inc
mov
repnz
movs
sub
fisttp
jge
xchg
ss
ret
jne
mov
fcmovnb
inc
sbb
inc
cmp
inc
pop
les
les
mov
ss
and
add
add
add
sub
add
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
data16
add
add
xor
xor
add
xor
cwd
int3
xor
push
int3
jmp
call
dec
int3
add
imul
int3
test
ins
mov
rcl
jb
mov
or
push
out
call
xchg
xor
xchg
inc
jo
fldcw
jl
outs
fbstp
clc
cmc
mov
(bad)
imul
mov
inc
pop
jno
pop
pop
xchg
and
jg
or
push
xchg
inc
mov
mov
cmp
cmp
test
stos
movs
mov
xchg
pushf
fwait
mov
movs
sub
stos
mov
or
push
or
int
push
xchg
mov
inc
shl
mov
xor
adc
push
mov
mov
(bad)
repz
push
push
shr
pusha
cwde
adc
ret
jmp
or
hlt
std
cdq
dec
pop
fsubr
dec
stos
jl
mov
add
in
pop
lea
xor
push
and
test
and
mov
mov
mov
lea
sub
test
test
dec
inc
mov
clc
xchg
mov
add
test
push
cwde
mov
dec
xor
mov
cmp
fwait
and
hlt
lods
jmp
(bad)
push
add
jecxz
fistp
mov
fwait
or
(bad)
imul
cdq
daa
or
xor
inc
add
je
imul
sbb
push
xchg
popa
mov
sub
hlt
cs
sbb
sbb
cwde
xor
hlt
pop
pushf
push
push
dec
stos
mov
inc
sbb
mov
mov
jo
mul
pusha
and
and
mov
lds
int
(bad)
call
popf
pop
aas
mov
fldcw
(bad)
push
inc
pop
lods
xor
in
rol
jmp
icebp
cmps
nop
inc
or
and
pop
sub
push
inc
cmp
pop
xor
ja
cdq
jno
test
cmp
fdivr
imul
add
and
cdq
and
sub
sahf
mov
push
adc
sbb
in
popa
test
or
pop
pop
cmp
and
jecxz
add
or
cmps
bound
fmul
inc
mov
test
js
adc
mov
dec
mov
xchg
fadd
sub
or
sub
movs
call
call
mov
push
adc
add
rcr
mov
mov
push
xchg
pop
pop
movs
loop
xchg
fxch
pop
xchg
inc
inc
pop
mov
ja
add
xchg
scas
mov
dec
movs
jge
mov
mov
dec
bound
pop
xchg
in
or
mov
pop
jae
test
pop
dec
jecxz
icebp
mov
add
sbb
mov
add
stc
loope
jmp
stos
and
sub
pop
mov
ret
mov
nop
push
xchg
aam
inc
in
fadd
cmp
sub
push
cmp
int3
js
mov
frstor
sbb
inc
pop
bound
push
ins
mov
dec
loopne
xchg
ja
clc
scas
xchg
jge
sub
cmps
jle
push
fldenv
mov
call
js
cmps
xchg
dec
cmp
sbb
cmp
pop
bound
imul
loop
leave
adc
rep
ins
or
in
jp
mov
add
jo
mov
iret
pop
adc
fnstenv
mov
dec
push
addr16
mov
int3
xor
jmp
push
or
ss
sbb
adc
scas
push
mov
push
mov
and
leave
(bad)
xchg
cmp
sub
ds
jo
add
and
movs
pop
(bad)
adc
add
aad
call
adc
scas
jae
push
adc
dec
sar
pop
outs
push
add
pop
jo
adc
inc
add
ret
adc
mov
jmp
inc
(bad)
add
sub
xor
sbb
xor
pusha
loopne
sbb
add
div
rcr
test
pusha
adc
cmps
and
xor
in
xor
mov
sar
(bad)
mov
inc
mov
pusha
jne
inc
retf
mov
push
mov
sbb
cmps
sbb
ret
ret
nop
out
xor
xchg
jl
push
and
hlt
adc
xchg
imul
or
xlat
xor
and
or
lds
mov
(bad)
(bad)
into
and
mov
adc
mov
mov
jnp
inc
adc
mov
add
mov
add
xchg
inc
jmp
std
test
mov
shl
outs
xlat
xchg
test
ja
pusha
jecxz
mov
and
bound
or
add
scas
movs
sbb
loop
push
inc
mov
fidivr
je
icebp
std
test
(bad)
jne
das
jle
jbe
mov
dec
xchg
rol
dec
call
mov
and
fadd
inc
jo
inc
xchg
mov
fld
jp
or
dec
add
outs
sub
mov
inc
aaa
jl
sub
inc
or
fstp
sub
inc
jl
and
adc
jo
dec
mov
iret
cs
xchg
call
dec
push
(bad)
pop
pop
jge
popf
inc
rol
add
or
movs
ds
retf
es
push
push
(bad)
jl
and
add
mov
loope
fsub
and
int
xor
call
inc
pop
pop
mov
adc
jae
inc
daa
sub
xchg
popf
repz
fucomip
dec
cmp
scas
lahf
call
xchg
adc
dec
jno
dec
mov
jo
call
pop
and
repz
out
sub
inc
jne
jae
rcr
sub
dec
sar
and
adc
mov
mov
addr16
fistp
mov
sbb
(bad)
jle
and
pop
out
and
mov
int
jne
out
fisub
push
div
mov
fst
push
iret
ret
push
mov
mov
loope
cwde
mov
aaa
popf
cmps
inc
std
mov
xor
pop
lds
push
fisubr
das
xchg
jp
ins
xchg
out
sub
(bad)
jle
mov
fsub
mov
mov
add
sahf
cmc
dec
xor
cmp
xor
add
jmp
add
sahf
jo
pop
fisttp
adc
sub
retf
jle
daa
inc
lods
jne
cmc
sahf
rcl
mov
fisub
js
add
and
xor
mov
test
lds
pop
add
retf
dec
stos
mov
int3
inc
cmp
inc
aam
mov
mov
hlt
inc
sub
mov
pop
test
mov
shl
add
push
mov
mov
aad
jecxz
add
sub
push
sbb
out
and
not
mov
jbe
and
jb
and
bound
mov
call
pop
push
int3
rol
jl
sbb
outs
lds
adc
pop
dec
and
movs
dec
loopne
jecxz
jg
inc
mov
jo
xchg
pop
aaa
dec
inc
mov
outs
and
inc
and
(bad)
imul
inc
mov
into
sub
fist
call
add
jmp
mov
push
mov
pop
adc
(bad)
add
inc
sti
jmp
ja
xor
sbb
sub
dec
gs
ror
sti
ret
call
pushf
cmp
and
clc
ins
mov
sbb
xchg
test
push
test
add
cmp
mov
out
pusha
lds
jmp
inc
dec
test
fs
iret
or
bound
ret
into
pushf
jno
or
cld
or
shr
push
imul
icebp
sbb
sub
ja
cld
jb
sbb
pop
xchg
xchg
mov
(bad)
push
sbb
push
sahf
mov
mov
ficom
and
sbb
stos
retf
mov
jb
cs
cmp
fidivr
sbb
push
xchg
mov
addr16
pop
push
fnstenv
stos
mov
mov
cld
jecxz
(bad)
mov
movs
push
loope
cmc
fcom
movs
fwait
xchg
es
pop
mov
xchg
mov
movs
sub
and
test
enter
shr
push
jmp
div
pop
fmul
loop
std
lock
sub
loope
adc
cmp
fidivr
ins
dec
int3
sbb
fdiv
leave
(bad)
rol
scas
xchg
cmp
out
clc
lock
aam
and
neg
outs
dec
push
data16
popf
stc
ret
icebp
jmp
leave
sti
sbb
cli
scas
push
xchg
xlat
xchg
mov
push
popa
mov
jp
inc
jge
aaa
cmp
das
and
repz
out
jns
arpl
ins
inc
stos
dec
(bad)
mov
xor
push
adc
sub
jp
jae
push
xor
adc
(bad)
je
add
in
xor
jbe
xor
push
inc
or
out
mov
jle
repz
test
shl
outs
call
arpl
xchg
sbb
xor
icebp
arpl
(bad)
dec
xor
adc
movs
outs
lea
ja
adc
test
xor
jg
mov
jbe
jo
xor
sbb
sub
jle
cwde
xor
or
and
rcl
push
sub
jp
fadd
test
cmp
or
je
sub
sub
test
pop
push
data16
mov
jnp
add
inc
push
es
jp
add
(bad)
sbb
pusha
xchg
mov
mov
test
mov
xor
jno
add
fs
xlat
inc
add
(bad)
xchg
and
xchg
sub
lods
cwde
pop
cmps
sub
cwde
push
bound
mov
call
mov
dec
sbb
adc
push
stos
test
loope
jo
mov
xor
aas
popf
enter
inc
jne
pop
inc
enter
mov
push
jne
mov
mov
push
popf
xor
mov
or
cmp
call
xchg
mov
sub
mov
enter
(bad)
dec
out
mov
nop
hlt
fdiv
xor
add
loop
push
sub
sub
mov
push
ror
aaa
dec
bound
ret
sbb
imul
adc
mov
ret
je
cmp
ss
daa
in
nop
in
xchg
xor
(bad)
sbb
inc
jl
cwde
lea
push
inc
mov
jne
movs
jl
jecxz
cmp
add
nop
fs
mov
daa
push
jns
sub
scas
cmps
push
icebp
ror
cmp
sbb
xchg
pop
mov
inc
sub
xchg
nop
scas
inc
or
and
xor
test
push
cmp
add
push
pusha
sbb
lock
hlt
jg
mov
inc
jns
int
ins
nop
loop
mov
add
cmp
test
push
adc
jns
jb
sbb
sbb
add
or
arpl
jae
mov
mov
and
or
and
test
adc
arpl
pushf
and
xchg
sbb
inc
je
movs
mov
dec
stc
add
add
add
je
pushf
jge
adc
test
adc
dec
outs
je
fld
and
stc
cdq
sub
add
adc
dec
out
lock
mov
add
cmp
sub
les
pushf
out
xchg
push
pop
mov
cmp
jnp
pop
push
adc
retf
xchg
cmp
add
or
loope
or
cs
and
push
aas
loop
xchg
and
adc
inc
rol
mov
scas
push
mov
and
xor
test
xchg
xchg
cwde
mov
sub
sub
ja
hlt
add
jns
push
cmps
jbe
imul
xor
add
inc
rcr
add
cmps
in
fcom
push
or
cmc
mov
loop
cmp
lahf
pop
cli
cdq
mov
or
sbb
xor
bound
imul
rcpps
sub
cmc
pusha
test
inc
sbb
je
or
mov
lea
inc
leave
pop
call
test
push
stos
adc
xchg
fldenv
adc
adc
sar
mov
add
fisubr
lods
fidivr
fdivrp
lods
loopne
lods
and
add
stc
add
add
add
sub
add
add
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
add
xor
cwd
jmp
int3
data16
jmp
int3
cdq
cdq
call
int3
int3
int3
dec
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
inc
add
push
inc
jo
sub
(bad)
sbb
ss
popa
push
cmp
jbe
in
jp
aad
js
cs
mov
outs
mov
dec
out
retf
mov
xchg
jns
add
add
add
lea
mov
je
xchg
xchg
add
mov
add
xchg
stos
lods
lods
mov
(bad)
mov
stos
jg
jp
xchg
sar
mov
lds
outs
shr
(bad)
mov
int3
enter
mov
test
fmul
fsubp
fucom
in
pop
out
fstp
loopne
call
lock
cli
pop
jo
mov
jnp
push
adc
or
sub
dec
popf
xor
neg
pop
mov
outs
mov
and
mov
in
outs
ret
xor
ins
or
cmp
sbb
mov
dec
inc
add
push
sub
mov
pushf
cld
dec
and
jae
mov
shl
push
xor
push
dec
loopne
sub
adc
in
jmp
bound
shl
sub
push
sbb
xor
cmp
cwde
cld
sub
cwde
test
dec
loopne
fnstcw
push
lock
loope
fwait
pop
mov
sbb
push
pop
test
shl
hlt
leave
inc
sub
cmp
js
cmps
pop
jnp
mov
sub
and
mov
mov
in
cli
push
cmps
dec
push
add
mov
push
and
jb
test
int
push
jle
add
pop
push
sbb
push
stc
rol
push
cmp
fcom
and
mov
(bad)
nop
add
add
add
push
inc
push
add
or
pop
pop
mov
cmp
mov
(bad)
cmp
rcl
xlat
int
push
sub
and
fs
mov
pusha
inc
call
or
pop
ins
cmp
test
jo
pop
add
push
xchg
push
push
loopne
sar
jbe
pop
sar
inc
test
or
mov
mov
xchg
ror
xchg
xor
fwait
add
loope
bound
cmc
xchg
addr16
movs
jmp
pop
rcr
lea
xchg
xchg
pop
cli
xchg
int3
xor
mov
addr16
cmp
rcr
call
ret
cwde
(bad)
pop
mov
aam
sub
mov
sbb
cmps
mov
mov
shr
test
daa
call
xor
push
mov
in
call
gs
in
xchg
mov
enter
scas
cmp
push
push
and
test
imul
adc
inc
adc
sub
jno
frstor
jbe
stos
sbb
jbe
adc
scas
movs
or
or
mov
ss
cmp
xor
mov
mov
mov
fsub
loope
xchg
sbb
dec
xor
dec
add
lahf
ret
and
out
jbe
in
jnp
ss
xchg
outs
retf
jmp
retf
iret
mov
jg
adc
xchg
pop
mov
mov
push
jmp
ja
(bad)
lahf
push
bound
addr16
add
pop
xor
cmp
mov
or
out
jle
into
push
sbb
sub
mov
daa
or
fisubr
mov
pop
stos
mov
mov
fild
cmp
mov
add
sbb
stos
jbe
ss
xlat
pop
aam
push
dec
push
xor
pushf
lods
ss
ficomp
sbb
jle
push
jb
(bad)
push
xchg
cmp
retf
enterw
mov
scas
push
cmp
fidivr
sub
into
mov
jbe
or
inc
icebp
jg
ret
(bad)
je
pushf
xor
cmp
mov
jl
cld
retf
inc
daa
sbb
xchg
cmp
add
sbb
dec
lods
fcomp
add
ins
add
or
push
arpl
les
test
cmps
sub
enter
add
scas
dec
jge
dec
sbb
add
sub
ins
nop
dec
pop
(bad)
sbb
push
mov
dec
pop
cmps
mov
cli
inc
test
jl
push
lock
push
aas
mov
push
mov
popa
sub
mov
jb
pop
fldcw
add
add
dec
fimul
test
sub
mov
and
inc
cld
push
arpl
sub
or
xchg
rcr
mov
ror
or
mov
sahf
rol
add
sub
sahf
add
mov
lock
sub
add
imul
xchg
xor
or
inc
pop
int
add
dec
dec
dec
mov
ror
ret
or
aam
scas
jo
sub
and
push
mov
xor
lea
and
xchg
xchg
add
adc
(bad)
jmp
and
add
add
cmp
scas
xchg
and
call
int
jbe
sahf
imul
jb
mov
jo
clc
sbb
cmc
jns
sub
mov
les
push
jge
repz
and
add
sub
xchg
fdivp
leave
dec
int3
and
outs
test
add
test
jno
mov
jo
addr16
sub
or
add
mov
pop
sahf
into
sbb
cmp
popf
test
push
or
mov
shl
sub
mov
gs
add
adc
jp
cmp
sub
pushw
cs
shl
loop
or
push
jb
push
call
cmps
nop
push
lea
mov
dec
cmp
and
mov
jnp
adc
mov
xor
dec
sahf
pop
cli
es
jge
pop
test
loopne
xchg
dec
aad
xor
adc
fimul
gs
dec
or
out
push
test
in
mov
sbb
sbb
lods
mov
aad
dec
and
xchg
into
push
xchg
jb
ins
les
jge
and
ins
dec
xlat
adc
rcl
nop
push
mov
dec
test
out
cmp
jns
adc
and
sub
xchg
dec
retf
into
jbe
(bad)
pop
xchg
cwde
movs
dec
mov
mov
mov
outs
in
jo
aaa
and
sbb
jb
ins
hlt
jbe
jle
mov
stos
mov
or
cs
(bad)
lods
bnd
pop
sub
(bad)
xchg
push
add
push
fcmovb
mov
pushf
add
dec
and
cmps
and
mov
inc
sub
lds
mov
and
outs
addr16
xor
and
sbb
ins
lds
adc
nop
popa
sbb
sub
fsubr
call
mov
push
stos
cmps
mov
cwde
adc
movs
adc
ret
mov
push
add
jmp
in
mov
fadd
aad
pop
pop
sub
mov
mov
ret
mov
gs
mov
push
push
addr16
icebp
je
push
or
or
das
int3
jecxz
sbb
cwde
mov
(bad)
pop
pop
push
mov
in
pop
dec
ss
dec
pop
cmp
aas
xchg
cmps
pop
xor
mov
pop
retf
inc
cmp
ins
dec
fndisi(8087
int3
test
outs
lock
sub
fs
movs
pop
lods
nop
(bad)
ror
dec
sahf
push
das
aam
test
xor
xchg
adc
pop
or
es
and
mov
(bad)
mov
not
les
inc
mov
add
out
(bad)
jae
jmp
adc
add
inc
ret
icebp
dec
inc
loope
lds
fisttp
mov
push
stos
adc
loopne
or
dec
jge
cld
add
test
push
and
(bad)
add
add
clc
inc
fsubr
icebp
cmp
(bad)
retf
dec
dec
push
out
stc
int
rol
or
push
test
xchg
imul
add
mov
ret
(bad)
sbb
out
or
aas
sbb
ss
jl
out
xor
jmp
sub
adc
(bad)
adc
aas
add
in
pop
arpl
xchg
push
or
or
cmc
inc
add
neg
in
jnp
mov
jmp
aam
mov
xchg
into
dec
inc
mov
call
sub
(bad)
in
lock
pop
pop
cli
out
jns
mul
rdpmc
fcom
call
es
xor
cld
jmp
repnz
outs
pop
mov
mul
push
icebp
push
jle
jle
bound
dec
dec
push
into
jbe
hlt
jp
xlat
or
jge
cwde
sub
cmc
mov
push
lahf
xor
and
pop
(bad)
jmp
out
jle
int3
lods
pop
loop
jno
push
push
jg
xor
inc
mov
xlat
jne
cld
test
dec
hlt
daa
adc
xchg
push
xchg
and
lock
pop
push
push
pop
mov
or
ret
mov
les
push
cwde
ins
cmp
inc
xor
add
jle
mov
popf
and
adc
ret
dec
mov
adc
adc
shl
aaa
loope
xor
add
cmc
sbb
xlat
adc
aas
movs
arpl
dec
pop
and
sbb
mov
dec
call
push
push
push
mov
pop
lock
test
imul
and
push
sub
xor
cmc
xchg
xchg
xchg
sar
inc
test
push
pop
rol
(bad)
jmp
cmp
xor
sti
xlat
or
sbb
sbb
pop
les
inc
xor
ds
iret
jae
add
sbb
hlt
sbb
test
and
or
aam
aaa
ret
ja
lock
mov
xor
jno
icebp
popa
xchg
pusha
push
ja
jp
inc
mov
and
xor
sub
je
clc
pop
cmp
push
cmp
test
mov
loope
popa
sub
ja
test
add
or
mov
cli
adc
push
mov
mov
add
lods
mov
ss
mov
mov
xchg
inc
pop
mov
je
add
lock
(bad)
gs
dec
cmp
retf
aaa
or
pushf
loope
lods
xor
or
pop
loopne
shl
cmp
cmp
fdiv
xchg
xor
and
jae
in
pop
sub
aaa
das
cdq
or
xchg
mov
psubb
icebp
inc
jae
pop
pop
in
nop
fldcw
or
test
jnp
cmp
daa
imul
xchg
dec
xchg
cmp
clc
nop
push
out
xor
pop
xchg
fs
sar
fcom
xchg
xchg
rcl
mov
sub
ins
xor
xchg
(bad)
enter
dec
push
jae
push
jnp
and
mov
movs
xor
add
dec
push
xchg
xchg
push
inc
jo
or
sbb
jb
inc
xor
adc
movs
inc
(bad)
adc
jns
ins
xchg
pop
test
mov
jbe
sub
sbb
test
or
mov
push
push
fld
hlt
sbb
xor
(bad)
popa
xor
jg
leave
add
hlt
push
dec
adc
mov
bound
jl
jecxz
push
imul
mov
fwait
shr
jb
(bad)
jns
xchg
or
imul
xchg
cwde
pop
mov
add
ja
jns
mov
test
mov
shl
sti
stc
pushf
(bad)
sub
hlt
pop
xchg
mov
bound
mov
leave
test
(bad)
cmc
mov
cmp
jns
xor
(bad)
out
xchg
cmp
adc
jno
cwde
jae
adc
add
push
sahf
inc
or
(bad)
sahf
xchg
inc
mov
or
add
arpl
dec
data16
test
pop
sbb
adc
mov
mov
push
cmc
pushf
das
stc
mov
sbb
push
adc
and
jecxz
sahf
xchg
mov
sahf
js
mov
xchg
call
and
pop
ficom
pop
mov
shl
ds
or
(bad)
sub
addr16
lds
retf
xchg
inc
push
mov
jne
and
push
mov
pop
icebp
cmp
xchg
outs
test
popf
repnz
xor
movs
outs
mov
mov
nop
sub
imul
pop
dec
sub
push
test
cmp
adc
sub
mov
loope
lea
nop
fdiv
(bad)
aaa
cmp
leave
test
sbb
bound
sub
mov
inc
mov
mov
lods
xchg
or
stos
xor
lea
push
push
pusha
sbb
cwde
aad
push
lods
mov
fwait
jb
adc
push
dec
add
xchg
das
mov
lahf
pop
and
loopne
cmp
lods
into
in
pushf
call
inc
add
push
pop
aad
or
cmp
sbb
and
inc
arpl
mov
daa
adc
mov
dec
dec
sbb
frstor
xchg
das
pop
xchg
bound
aam
sub
mov
sbb
mov
mov
imul
inc
cmp
mov
dec
cmp
bound
sub
cmp
js
retf
jo
xchg
(bad)
scas
(bad)
clc
pusha
add
or
cmp
popf
jecxz
rcr
push
test
es
dec
pop
out
and
mov
xor
sahf
ins
mov
xrelease
lods
add
mov
popf
mov
lods
sbb
aad
inc
(bad)
mov
sbb
xchg
pop
fdiv
jl
push
inc
pusha
lock
stos
add
and
in
test
xchg
jnp
cs
dec
mov
in
mov
xchg
sahf
xor
mov
pop
mov
push
pop
mov
dec
lds
popa
inc
pop
jns
push
cmps
repnz
ja
adc
jmp
lods
cmp
mov
or
lods
ds
cmps
daa
(bad)
(bad)
out
dec
xchg
and
arpl
outs
dec
jbe
adc
popf
jp
mov
imul
mov
mov
mov
pop
or
sbb
cld
shl
ret
add
and
add
add
add
sub
add
xchg
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
add
xor
cwd
jmp
push
int3
int3
data16
jmp
call
dec
inc
add
add
add
imul
mov
scas
out
movs
jmp
mov
adc
dec
and
ins
xor
push
lods
xor
inc
inc
call
aam
cs
movs
inc
xor
test
push
outs
mov
arpl
cmps
push
js
pop
outs
xor
pop
outs
jbe
push
jnp
sub
arpl
jge
push
push
outs
test
xchg
ins
lea
xchg
sub
fwait
pushf
mov
cmp
fwait
mov
outs
jbe
scas
movs
jge
mov
mov
cwde
popf
cmp
add
or
mov
mov
daa
push
mov
mov
add
out
xor
mov
fsubr
xchg
lods
pop
pop
pop
add
xchg
inc
ret
test
adc
push
mov
cs
lods
ror
pop
stos
push
dec
dec
mov
cmp
das
and
adc
xor
cwde
add
aas
jmp
pop
gs
(bad)
scas
retf
dec
xchg
push
pop
outs
icebp
pop
xchg
sar
xor
imul
pop
fs
inc
xchg
sbb
popf
mov
or
xlat
je
out
sbb
jo
sub
jno
stos
jge
add
sbb
inc
test
neg
rcl
int3
sar
add
add
addr16
call
adc
ins
mov
or
push
push
fwait
sbb
push
and
jp
sub
push
cmp
inc
push
mul
inc
push
sbb
loop
push
fisub
add
or
add
push
mov
in
xchg
sahf
bound
inc
aaa
xchg
pop
cwde
movs
retf
std
jle
cmp
xchg
ins
pop
add
inc
in
push
fs
loopne
xchg
pop
sbb
inc
dec
jo
inc
mov
add
xlat
jae
adc
adc
call
pop
mov
push
loope
mov
xor
add
xor
xor
xor
cmp
pop
and
xchg
dec
pop
nop
adc
sbb
das
add
rol
push
rcr
and
push
push
push
push
cmps
mov
jecxz
mov
dec
pop
sbb
sub
fmul
pop
mov
pop
mov
pop
cmp
xchg
(bad)
cmps
test
jae
jl
push
inc
mov
adc
ss
push
pop
pop
out
and
push
and
cmp
stc
adc
rcr
fwait
(bad)
sahf
ins
out
cmc
movs
adc
xrelease
add
sar
in
jb
jbe
movs
adc
adc
fist
(bad)
out
xor
cmp
add
dec
mov
sbb
inc
aam
into
ja
xchg
xor
mov
pop
arpl
dec
xchg
fmul
xor
and
jle
mov
mul
jmp
jl
inc
inc
data16
cli
and
jnp
(bad)
aad
jne
stos
pop
rcr
ins
sub
mov
push
clc
je
pop
xchg
xor
imul
fcmovnu
push
cmc
stos
xchg
gs
lods
lock
cmp
and
addr16
neg
cmp
pop
dec
push
xchg
xlat
int
push
mov
lods
add
ins
and
jecxz
aaa
sbb
push
pop
or
jnp
jns
daa
pop
pop
vmread
mov
mov
les
sub
mov
sbb
loop
and
push
mov
inc
push
fsubr
into
mov
pushf
cmp
fidivr
push
ror
movs
push
dec
dec
cmp
sbb
mov
adc
scas
jns
xchg
mov
sbb
or
(bad)
fist
jmp
repnz
and
ins
popf
and
mov
xor
xor
in
push
add
sbb
cmp
inc
mov
ja
lods
pop
jp
mov
mov
out
std
or
rcl
sub
sti
cmp
jmp
cs
sti
jnp
iret
cs
inc
add
movs
sti
outs
sub
popf
out
push
and
mov
pop
dec
ficom
inc
sar
pop
mov
retf
mov
and
add
pop
rol
or
adc
sbb
mov
or
cmp
test
loop
or
inc
push
add
rol
pop
pop
cdq
or
sub
sub
out
dec
test
retf
add
(bad)
adc
mov
mov
adc
popa
add
pusha
or
adc
je
fadd
sub
test
(bad)
(bad)
mov
lods
movs
cld
jmp
adc
js
push
mov
and
pop
bound
ficomp
jno
inc
out
push
ds
push
sub
inc
and
sub
pop
xchg
jne
xlat
(bad)
push
jne
addr16
pusha
inc
out
push
mov
xor
cmp
out
hlt
xchg
mov
and
arpl
into
in
sub
pop
jmp
pop
int
xchg
cmp
push
mov
fiadd
or
sub
rcr
fisub
mov
imul
dec
adc
arpl
xchg
nop
dec
push
adc
sbb
push
mov
jmp
dec
ds
push
push
imul
cmp
mov
dec
pop
movs
xor
mov
ins
and
ret
and
push
jmp
pop
xor
ins
jp
cmp
sub
ror
mov
mov
(bad)
xor
enter
pop
dec
add
cmps
mov
and
dec
inc
pop
xchg
fstp
xchg
repnz
add
dec
fst
cli
adc
mov
mov
ja
mov
cdq
push
push
mov
cmp
add
bound
pop
inc
xchg
stos
cmp
add
inc
loopne
cmps
nop
and
mov
cmc
imul
dec
mov
adc
cmp
sub
scas
mov
pop
inc
and
sar
or
sbb
sahf
popa
into
inc
pop
lods
mov
aam
pop
in
scas
test
call
pop
or
xchg
ror
ss
or
mov
add
cmp
jmp
xchg
jb
repnz
add
jl
push
mov
cli
fwait
loope
retf
or
pop
pop
mov
add
cmp
xor
mov
test
sub
rol
and
xchg
inc
mov
xchg
sbb
xor
mov
jno
adc
xor
imul
xlat
fwait
cdq
mov
(bad)
loopne
add
fdivr
in
scas
mov
in
call
cdq
and
xor
scas
push
pop
in
jmp
pop
lods
ds
sbb
test
sbb
scas
mov
xlat
(bad)
js
adc
sub
inc
adc
jae
dec
shr
mov
dec
stc
ins
or
mov
sub
adc
out
jno
add
gs
and
vaddpd
movs
(bad)
int3
call
dec
cmp
xchg
dec
ret
rol
mov
push
(bad)
loopne
sbb
sub
jnp
cmps
lods
xchg
xchg
repz
cli
mov
int3
xchg
push
int
mov
add
and
cmp
and
mov
adc
call
(bad)
jge
lods
push
sub
retf
sub
stos
ins
xor
fnsave
stos
xchg
in
imul
push
sbb
icebp
data16
xor
sub
pop
call
mov
add
inc
mov
xchg
mov
jg
fcmovnu
add
cmp
daa
add
rcr
mov
mov
(bad)
or
and
sbb
stos
in
jns
cdq
inc
mov
xor
pop
in
or
sub
push
and
xchg
mov
(bad)
popf
push
xchg
push
and
shl
dec
in
dec
adc
jb
das
dec
adc
rcr
xchg
sub
fcomp
pusha
data16
(bad)
in
(bad)
outs
pop
cmp
stos
xchg
bound
and
xor
push
test
stc
mov
out
call
cmp
fstp
shr
test
pop
mov
inc
prefetcht0
jne
push
(bad)
cmps
and
(bad)
ins
jl
ds
mul
daa
dec
das
push
into
inc
xchg
mov
into
daa
xlat
jp
fprem
inc
cmps
jecxz
cmp
pop
movs
pop
test
lods
lea
inc
scas
ret
retf
rcl
cmps
or
out
pop
mov
push
mov
sub
pop
movs
dec
jl
and
sub
xchg
(bad)
mul
mov
xor
dec
scas
dec
cmp
arpl
pop
jb
les
cld
popa
xchg
adc
fidiv
leave
pop
or
rol
retf
and
and
pop
jge
arpl
jecxz
jle
leave
leave
call
fistp
xadd
js
ins
pusha
push
dec
adc
imul
ja
rol
jmp
or
pusha
inc
jno
push
pop
jge
out
xchg
xchg
push
and
sbb
cmp
fadd
cli
in
cmps
xor
or
jle
in
push
jno
or
out
dec
mov
jp
(bad)
pop
out
lock
pop
xchg
inc
jecxz
and
sbb
movs
push
ret
jbe
add
push
fwait
adc
jne
inc
or
dec
inc
cmp
and
je
inc
xchg
xor
test
test
sub
cwde
sub
sub
cmps
pop
push
call
pusha
xlat
add
cmp
jmp
jne
mov
adc
ss
cmp
adc
mov
mov
inc
sub
mov
or
test
pop
(bad)
loop
pop
and
mov
rcl
xor
push
dec
sub
sbb
ja
jae
arpl
xchg
xchg
adc
add
out
xor
das
mov
mov
sub
push
cmps
test
loop
pop
addr16
mov
or
sub
mov
int3
js
jl
pop
vmovaps
cmp
xchg
inc
pusha
call
lock
xchg
dec
enter
inc
ss
mov
mov
ror
push
dec
adc
inc
cmp
(bad)
mov
sbb
imul
psrad
jns
mov
lea
add
inc
xor
jns
loopne
jb
mov
setns
and
jne
mov
cs
xor
push
pop
repz
fstp
imul
or
and
cwde
adc
or
sbb
test
sub
cmp
ss
dec
test
jb
lock
jne
xchg
hlt
or
jge
dec
sub
mov
pop
pop
pop
rcl
mov
cmp
mov
sbb
xchg
jnp
loopne
cmc
push
and
push
popa
xchg
dec
jp
cmp
ret
hlt
add
dec
pop
cmp
xchg
leave
push
xchg
int
or
add
leave
arpl
adc
in
dec
mov
xchg
test
add
xor
adc
jns
mov
xchg
lock
jle
addr16
mov
call
fild
jl
arpl
add
pop
jl
aaa
pushf
push
cmp
ror
xchg
call
outs
stc
and
inc
pop
cmp
ss
pop
mov
xchg
shr
fld
mov
xchg
(bad)
mov
jg
mov
jl
or
push
mov
sub
cmp
or
cwde
xchg
add
mov
sbb
xor
mov
aam
pushf
and
(bad)
les
xchg
out
ds
adc
pop
retf
icebp
mul
jo
fcmovnbe
dec
cmp
(bad)
xchg
pop
pusha
mov
nop
pop
xchg
psadbw
mov
jmp
mov
cwde
bound
iret
jb
nop
out
adc
add
movs
ins
aad
jmp
add
cli
mov
je
adc
sbb
mov
ss
or
test
push
push
test
mov
cmp
test
jns
mov
sahf
shr
pushf
cmp
xchg
mov
jo
mov
stc
pop
inc
pop
rol
mov
push
sub
in
dec
test
push
sub
pop
imul
out
mov
sbb
call
push
mov
pop
mov
jp
in
inc
cmp
lgdtd
mov
xor
cmp
jl
fs
push
push
push
cli
stos
call
dec
or
xor
mov
repz
ins
(bad)
call
das
je
inc
into
ja
xor
aas
or
lods
retf
mov
in
or
ficom
pusha
fimul
cmps
es
stos
inc
jmp
mov
add
imul
imul
push
bound
pop
and
not
imul
daa
mov
mov
cmp
sbb
jo
add
xor
push
add
cmp
mov
out
outs
and
data16
int3
mov
loopne
adc
movs
nop
int3
push
outs
dec
push
mov
movs
xchg
and
test
dec
arpl
(bad)
dec
pop
repnz
test
push
icebp
or
test
push
jb
cmc
push
xchg
lea
inc
fistp
leave
pop
pop
call
je
outs
leave
push
cmp
ficom
dec
pop
adc
mov
mov
nop
push
add
scas
mov
pop
mov
outs
rcr
stos
mov
sti
mov
cmp
pop
mov
sbb
mov
sbb
and
add
add
add
sub
add
add
add
xor
xor
add
xor
xor
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
data16
cdq
data16
add
xor
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
int3
cdq
int3
call
int3
int3
int3
dec
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
inc
add
inc
jo
sub
(bad)
sbb
xor
rol
xor
jb
in
jp
loopne
rcr
je
call
mov
(bad)
int
jle
pop
fsubrp
outs
ins
push
test
push
jae
jg
dec
(bad)
jge
xchg
inc
js
or
add
sahf
xchg
mov
cmps
dec
lea
mov
mov
lea
xor
call
mov
mov
stos
mov
rcl
ror
lods
ret
shl
loopne
ror
xlat
pushf
test
imul
in
test
or
jecxz
retf
push
into
push
mov
mov
ins
adc
sbb
outs
sahf
add
add
sar
test
stos
jecxz
or
ret
xchg
xchg
int3
dec
je
inc
retf
inc
cmc
cmp
shl
add
or
rep
mov
test
mov
dec
nop
xor
mov
mov
sar
out
ffree
loopne
dec
(bad)
adc
push
mov
jbe
into
sbb
dec
movs
stos
push
jns
pop
dec
jnp
test
dec
imul
cmp
mov
and
push
push
and
hlt
dec
ds
push
out
sahf
les
out
outs
movs
jb
test
and
or
push
cmps
inc
or
mov
and
sbb
mov
mov
adc
push
mov
inc
(bad)
std
mov
test
dec
scas
pop
add
adc
and
cmp
add
add
fisttp
mov
shl
out
add
mov
sub
iret
sbb
cli
sar
fldenv
je
push
or
pop
lea
add
pushf
pusha
and
popa
lahf
and
cmps
mov
push
xchg
dec
add
fpatan
cmp
adc
jno
cld
add
dec
adc
daa
cli
xchg
xor
pop
cmp
push
mov
and
popf
pop
cmp
xchg
pop
push
ficomp
mov
cmps
xchg
aaa
and
rcr
xchg
inc
and
adc
xchg
xchg
push
cmp
(bad)
pop
leave
ins
inc
arpl
sbb
push
jae
fsub
popf
pop
cs
add
daa
pop
push
cmps
je
xor
call
retf
dec
push
dec
xchg
and
fst
out
xlat
cmc
xchg
sbb
inc
dec
mov
(bad)
sub
jp
mov
cmps
add
mov
(bad)
cwde
xchg
test
dec
add
xchg
add
out
jb
sar
xor
inc
push
xlat
adc
pop
fld
mov
mov
mov
push
push
sbb
nop
dec
jmp
(bad)
sbb
jp
push
sub
adc
xchg
mov
jmp
fsub
mov
dec
out
adc
jae
cmp
icebp
jmp
dec
shr
sub
test
push
adc
push
sub
lfs
cmp
inc
mov
cwde
ins
pop
adc
stos
pop
shl
out
out
cmc
shr
and
ja
push
sbb
cmp
push
stos
lods
mov
inc
je
nop
test
or
and
xchg
int3
test
jo
fninit
retf
adc
xor
clc
cmps
dec
(bad)
cli
mov
sbb
inc
cld
sub
mov
aam
adc
popa
mov
mov
call
sti
mov
bswap
xor
fs
dec
cmp
xlat
mov
popa
fild
push
xor
in
popf
pop
mov
(bad)
rol
fnsave
mov
and
popf
jno
xchg
das
repz
mov
jnp
add
popa
in
fist
mov
sar
js
fisttp
mov
xchg
adc
inc
inc
imul
inc
std
rol
js
jns
lods
mov
popf
icebp
sbb
sbb
inc
pop
pop
dec
mov
imul
clc
cmp
popf
jmp
les
sbb
add
cmp
dec
xor
pop
sbb
test
nop
adc
fisubr
inc
inc
lods
mov
push
cdq
lds
mov
add
jl
add
rol
mov
cmps
scas
mov
pop
jge
xchg
push
pop
and
aad
(bad)
out
xor
loope
xchg
clc
cmps
adc
push
inc
or
jns
dec
cli
ror
test
jbe
or
sub
xor
and
sbb
pushf
call
bound
push
(bad)
adc
adc
mov
js
aad
add
sub
mov
add
aas
shl
and
pop
test
or
lods
and
add
cs
dec
pop
jo
and
sbb
xor
push
adc
in
and
(bad)
inc
sbb
mov
add
xor
psllw
add
dec
cmps
and
xchg
push
mov
xchg
stc
enter
add
nop
shl
add
clc
in
inc
adc
cmp
ret
xchg
(bad)
jge
and
jl
push
and
xor
mov
sbb
loopne
movs
cmp
rol
inc
jecxz
into
shl
inc
push
xchg
sub
pop
push
xchg
fwait
add
and
adc
add
and
sub
nop
aad
dec
mov
inc
adc
je
push
xchg
push
mov
loope
add
and
adc
push
xchg
cmc
or
sub
imul
mov
jmp
lds
add
mov
and
sbb
push
and
and
int3
in
add
loop
pop
jns
cmps
and
test
adc
inc
sbb
nop
sub
mov
cld
ret
mov
add
sbb
adc
cmc
jmp
sbb
mov
cmp
add
inc
fild
push
sub
mov
dec
aam
loop
mov
pop
inc
push
add
lds
scas
adc
and
sbb
lods
mov
jns
adc
jnp
adc
and
retf
adc
sub
mov
(bad)
inc
in
and
pop
sub
cwde
cmp
cmp
(bad)
mov
push
aad
or
addr16
fistp
test
sub
mov
sbb
and
inc
adc
hlt
cli
rcr
push
add
cmps
sbb
mov
fnsave
clc
cld
(bad)
addr16
mov
int3
dec
inc
ja
xchg
js
or
jnp
(bad)
jb
dec
shr
xchg
mov
sbb
cs
aam
push
jle
pop
repnz
sbb
shr
stos
jmp
xlat
(bad)
loopne
xchg
inc
rol
rol
mov
lock
cmp
and
popa
lds
mov
out
fdivr
out
and
add
or
xor
out
pusha
xchg
sbb
clc
xor
jno
pop
mov
enter
push
out
push
xchg
sahf
fdivr
movs
mov
pop
hlt
push
lea
add
ror
js
ss
sbb
adc
movs
retf
jbe
mov
(bad)
nop
in
test
ret
outs
inc
pusha
aaa
outs
not
sbb
inc
fld
out
mov
push
push
jl
adc
fs
inc
sub
mov
jnp
mov
sub
sub
pop
push
scas
push
and
adc
test
fistp
rcl
(bad)
dec
push
xor
ret
push
dec
outs
(bad)
push
and
or
add
movs
jbe
jecxz
dec
ins
(bad)
cmps
inc
dec
push
push
scas
test
in
mov
js
sbb
sub
les
sbb
push
adc
cli
add
pop
push
neg
(bad)
pop
add
inc
jg
add
cmp
jb
out
jne
xor
ds
pop
or
push
(bad)
or
jns
inc
fisub
sbb
shl
sub
ret
dec
add
mov
fimul
cli
in
mov
sbb
sbb
scas
sub
cli
jo
repnz
iret
es
cmp
xor
add
add
and
inc
inc
out
sub
lods
jne
add
inc
cmp
cmps
dec
mov
add
and
fisub
lahf
mov
fdivr
test
bound
ret
dec
inc
jne
cld
mov
(bad)
int3
cs
push
cmps
mov
or
movs
and
or
push
adc
xchg
mov
out
or
push
out
or
inc
mov
jns
dec
shr
sbb
add
xlat
mov
ret
inc
fmulp
jae
sub
fucomp
icebp
arpl
add
cmp
pop
loopne
sub
dec
daa
sti
out
lods
sub
mov
and
sbb
ja
gs
popa
jnp
aas
jmp
mov
xor
inc
mov
and
and
je
cmps
(bad)
ins
push
mov
mov
inc
cdq
je
cmp
push
imul
jge
gs
adc
loope
add
rcr
and
ret
es
(bad)
push
jo
xor
sbb
jb
pop
and
and
mov
ins
fst
outs
and
cmps
cmc
jno
es
mov
or
push
push
inc
(bad)
daa
je
mov
sbb
inc
xchg
fs
xor
xchg
mov
sbb
retf
(bad)
arpl
jne
mov
dec
mov
mov
pusha
xor
pop
lock
or
xor
div
and
and
adc
cli
pusha
popa
xor
sub
call
addr16
sbb
and
jecxz
arpl
pusha
cwde
add
add
or
dec
xlat
outs
outs
fcomp
adc
jae
push
jg
add
pusha
fwait
dec
adc
add
inc
xor
jno
adc
cmp
mov
add
inc
ss
mov
xchg
sbb
cmp
push
out
pop
push
cmp
pusha
inc
clc
sbb
inc
add
push
add
and
shr
cmp
jns
cwde
sub
push
jle
push
dec
jp
fadd
xchg
push
push
add
es
mov
jno
xor
inc
fs
fs
dec
mov
jg
mov
push
xchg
gs
pop
bound
add
or
cmc
xchg
leave
sbb
add
and
call
sub
sbb
(bad)
adc
pop
or
cmc
inc
dec
jl
adc
ss
addr16
outs
jbe
add
xchg
sbb
xchg
mov
xchg
jmp
mov
adc
mov
leave
cmc
add
xchg
into
and
sub
jno
sbb
cmp
lds
jbe
outs
shl
(bad)
retf
inc
mov
inc
pop
and
(bad)
mov
xor
xchg
daa
out
mov
sbb
jns
nop
jmp
mov
pop
jp
jae
sub
add
xchg
mov
(bad)
shl
retf
and
sbb
pop
push
retf
rcl
jb
xor
xchg
xor
out
add
push
dec
xor
test
js
sub
xchg
cmp
and
sub
test
inc
add
addr16
push
loop
add
cmc
(bad)
sbb
leave
mov
sbb
ficom
xor
xchg
and
adc
push
fwait
aad
pushf
pop
fdivr
dec
adc
cmps
cs
icebp
fs
jne
mov
call
out
ret
arpl
int3
xlat
jl
sub
jo
jne
add
inc
sbb
nop
(bad)
pushf
dec
jns
lea
cdq
jg
ss
pushf
(bad)
ffree
xor
daa
mov
xor
mov
test
fldcw
and
ins
and
push
cmp
and
out
pushf
arpl
sub
shl
stos
cmc
mov
or
pop
sbb
mov
jae
mov
es
lock
imul
sub
adc
jmp
adc
ins
or
das
xor
dec
xchg
and
jp
push
gs
cmp
cmps
cmps
dec
aaa
retfw
cwde
cmp
adc
jae
push
add
jbe
push
dec
(bad)
ja
jbe
inc
gs
call
xor
es
mov
pop
xor
shl
jns
mov
cmps
loopne
movs
repnz
push
(bad)
bound
mov
jmp
sbb
repnz
ficom
in
stos
dec
bound
ror
or
sub
adc
push
xchg
jp
dec
mov
push
aaa
jnp
mov
bound
push
mov
stos
jo
lods
xchg
xor
xchg
pop
enter
jmp
prefetch
or
dec
xor
and
ret
add
mov
inc
sbb
jnp
inc
xchg
cmps
repz
sub
or
jo
jge
scas
in
and
dec
push
adc
(bad)
adc
lods
or
pop
mov
mov
sub
mov
icebp
or
retf
lods
movs
or
loope
test
inc
and
sbb
add
sub
test
dec
sahf
and
daa
sbb
jmp
mov
pop
popa
(bad)
jmp
nop
and
pop
es
sub
lahf
and
add
push
xchg
out
push
sbb
inc
fild
xchg
mov
ins
push
pmulhw
jae
clc
inc
inc
or
ret
ret
dec
(bad)
pop
sub
jbe
push
adc
sub
inc
sahf
sti
mov
popa
mov
sub
stos
push
int
mov
stos
mov
mov
cmp
stos
data16
loopne
push
mov
rcr
imul
fstp
test
adc
ins
and
sti
mov
loopne
test
int3
inc
jno
mov
jbe
add
sar
ss
push
fwait
pop
sbb
sbb
pop
sbb
xor
adc
add
jge
xchg
scas
cdq
movs
enter
sub
mov
push
not
stc
imul
lods
inc
or
out
call
and
stos
sbb
fadd
push
sub
ins
add
stc
or
sbb
shr
inc
cli
test
fwait
add
and
dec
loope
dec
and
or
pop
pop
sub
je
pusha
and
loopne
and
das
and
mov
movs
xchg
stos
lock
sbb
int
les
(bad)
out
scas
xlat
imul
mov
adc
dec
cmp
add
mov
lds
mov
cmp
and
pop
lds
ret
xchg
ror
push
shl
jns
aam
jmp
cmp
in
xchg
xor
int3
shr
sbb
fwait
mov
fs
pop
inc
shl
cmc
add
or
pop
movs
mov
mov
mov
add
(bad)
jmp
jle
xor
pop
or
jecxz
(bad)
lods
imul
inc
jno
push
xor
cmp
push
dec
pop
lds
lahf
fist
cmp
mov
je
rcl
ins
shl
retf
stos
add
not
dec
xchg
dec
stos
mov
mov
sbb
ret
ja
lock
ja
sub
jnp
aam
and
sti
xor
dec
mov
adc
repz
rol
mov
rcr
xor
sbb
pop
sub
ins
leave
xchg
mov
neg
imul
dec
dec
or
and
pop
xor
lods
cmp
pusha
sbb
test
add
mov
movs
dec
into
xchg
lods
pop
mov
or
arpl
lds
jo
iret
sti
into
neg
xor
ds
jmp
int3
push
lods
push
jecxz
mov
sbb
ins
push
pop
fst
in
aad
and
aad
jp
cli
jbe
jl
into
inc
hlt
xor
les
mov
(bad)
aam
int
mov
jne
mov
jmp
cvtdq2ps
int
cmp
cli
popa
jp
cdq
shl
lds
jle
mov
bound
cld
or
pop
test
in
stos
ins
cmp
cmp
imul
jmp
aad
pop
stos
inc
fld
adc
test
int
cmp
(bad)
icebp
mov
rcr
jmp
fld
fstp
fnsave
mov
fidivr
pop
sti
fstp
pop
fucom
dec
fucom
jge
call
aad
lea
add
and
add
add
add
sub
add
lea
sahf
add
add
data16
data16
cdq
add
cdq
add
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
data16
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
cdq
cdq
cdq
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
(bad)
(bad)
(bad)
inc
push
inc
jo
sub
(bad)
sub
add
sub
lods
pop
scas
fsubr
dec
ret
sub
mov
in
add
dec
clc
pop
dec
xchg
adc
clc
sti
adc
out
mov
sbb
dec
jae
jae
fs
gs
lea
outs
sub
xchg
cmp
pusha
mov
mov
xchg
inc
pop
xchg
test
test
test
stos
mov
push
mov
mov
enter
push
xchg
ret
jle
rcr
les
xchg
leave
mov
mov
iret
int
mov
rol
dec
aad
(bad)
popf
loope
sahf
int3
into
jne
mov
add
cld
push
lock
ror
pop
mov
fidivr
outs
mov
inc
loope
scas
shl
pop
adc
sbb
and
xchg
adc
lahf
inc
sub
fnstsw
add
pusha
sbb
inc
inc
loopne
push
sbb
and
inc
and
adc
je
mov
xlat
adc
sub
pushf
dec
cmc
pop
iret
popf
adc
pop
xor
lods
jbe
ret
stc
sub
dec
cmps
push
imul
out
aad
push
idiv
inc
lock
stos
inc
call
test
and
test
dec
sbb
rol
sbb
and
mov
pop
rol
mov
sbb
out
pop
mov
adc
pop
gs
push
aam
adc
xor
jne
or
fstp
cmp
aas
or
ror
cmp
in
ss
jae
ins
xchg
push
scas
imul
mov
xlat
into
sbb
fmul
xchg
jbe
jecxz
sub
out
sbb
mov
mov
push
mov
retf
sar
out
mov
push
test
imul
int3
aam
(bad)
call
xchg
add
inc
in
jno
xlat
jnp
pop
xor
cmp
aas
cld
cmp
mov
push
dec
(bad)
adc
test
popa
aam
add
sbb
push
mov
and
push
shl
je
dec
(bad)
enter
mov
add
arpl
push
pop
mov
cmps
je
jecxz
sbb
neg
dec
mov
pushf
aad
adc
pop
into
in
outs
or
push
jecxz
outs
dec
mov
popf
xchg
mov
xchg
mov
movs
test
push
sahf
into
push
in
test
pop
push
add
loopne
scas
push
and
outs
inc
fiadd
ss
bound
push
lock
jne
cmc
movs
mov
sub
loop
xor
jae
and
test
xchg
push
or
pop
rol
movs
xchg
pop
mov
xchg
xchg
and
mov
popf
pushf
int3
xlat
movs
mov
or
xchg
jle
inc
in
gs
and
adc
call
and
jae
xchg
mov
hlt
adc
pop
in
jmp
push
int3
sbb
pop
ret
add
sbb
outs
xchg
add
sbb
into
outs
ja
cmps
pop
pop
add
mov
jbe
cmp
jae
test
sub
push
inc
fwait
out
jg
inc
push
push
mov
and
xchg
leave
mov
pop
out
movs
adc
push
xor
jmp
sbb
fwait
xchg
stos
sub
imul
pop
xchg
movs
jns
test
cmc
das
rcr
les
int
xor
ror
mov
out
xchg
(bad)
test
loop
mov
shl
imul
or
fs
xor
int3
cmp
nop
pop
xor
outs
jecxz
arpl
jb
xlat
xor
(bad)
xchg
jg
sub
pusha
fldenv
xchg
sbb
rol
mov
aam
inc
push
inc
inc
lods
xchg
jnp
pop
fadd
pop
test
add
imul
sub
outs
hlt
jbe
ret
shr
(bad)
xchg
mov
push
xor
hlt
cmc
not
mov
imul
lock
cdq
cwde
inc
scas
sub
movs
mov
and
fadd
mov
mov
test
sbb
adc
xchg
xor
inc
ins
and
call
cs
imul
fidiv
inc
pop
push
clc
arpl
aad
in
jb
pop
and
sbb
jl
test
loope
sbb
add
pushf
rol
and
or
push
sbb
xor
xor
inc
sub
or
push
lds
and
icebp
push
xor
sub
xor
or
pop
rol
ret
aaa
jb
test
jp
sub
mov
retf
sbb
add
mov
mov
add
adc
cwde
and
and
mov
ret
and
cmp
xor
pusha
pushf
and
stos
inc
add
loop
push
add
add
stc
fs
repnz
lods
adc
xor
cmps
add
xchg
ftst
xor
mov
fdiv
or
cli
aam
aas
leave
addr16
mov
(bad)
sub
adc
je
fisttp
jmp
cwde
je
inc
push
xchg
push
shl
and
mov
push
xchg
mov
inc
and
inc
popf
clc
iret
loope
sub
in
arpl
ret
xchg
pop
loopne
daa
add
pop
jle
(bad)
repnz
aaa
push
enter
mov
mov
dec
add
das
adc
loopne
aas
ret
and
push
jae
xlat
dec
ret
mov
or
loopne
and
add
stc
icebp
into
mov
shl
jbe
je
pop
push
add
pop
das
push
(bad)
push
dec
leave
cmps
push
mov
xor
jo
push
adc
sbb
es
adc
add
add
cmp
pop
icebp
sbb
jmp
(bad)
fsub
and
jns
adc
mov
pop
xchg
mov
xchg
jmp
add
(bad)
pop
aas
add
add
add
xchg
add
dec
cmc
aam
mov
add
es
aaa
pop
gs
(bad)
or
sbb
sub
push
push
mov
adc
cmps
mov
push
sub
out
cmc
adc
mov
add
rol
rol
adc
rol
add
sbb
sub
je
push
movs
jb
mov
into
cdq
in
sub
(bad)
mov
inc
xor
and
mov
add
push
mov
dec
imul
(bad)
aad
lds
adc
add
mov
sub
sbb
aaa
inc
sub
sub
cmp
push
lahf
xchg
dec
mov
pop
sbb
or
pop
pop
jb
or
and
lods
adc
add
mov
cmp
mov
sub
sbb
dec
adc
cmp
or
sbb
sbb
repz
ss
adc
or
or
out
dec
and
nop
add
leave
push
and
loop
neg
mov
xchg
sbb
mov
sub
jo
sbb
sbb
add
sar
(bad)
and
xor
mov
jmp
jge
mov
or
pop
call
out
(bad)
cs
ret
sub
inc
scas
adc
jo
out
mov
xchg
jne
cwde
or
fld
(bad)
out
sbb
test
mov
push
fistp
pusha
mov
dec
push
inc
ja
leave
dec
imul
add
mov
shl
push
or
dec
cmp
out
inc
or
jp
ror
adc
hlt
ja
mov
xor
push
mov
add
adc
pop
xor
jp
sub
sbb
add
xor
cmp
imul
ds
add
or
(bad)
in
mov
add
iret
jno
and
loop
mov
call
inc
xchg
dec
stos
cmp
mov
pop
sbb
pop
jbe
mov
pop
xchg
cmp
or
out
sti
pop
xchg
xor
mov
(bad)
fcomp
lods
dec
sbb
mov
out
stc
pop
inc
or
fs
cmc
fwait
dec
adc
cmp
rol
add
mov
mov
dec
pop
fcom
ret
lods
dec
adc
or
xor
les
ret
cmp
call
ins
das
out
or
aam
in
cwde
xor
pusha
xlat
add
mov
rol
add
sbb
mov
call
xchg
into
adc
cmc
fdivr
loop
das
cmp
xor
int3
in
inc
outs
inc
jbe
jmp
icebp
movs
in
and
jmp
inc
mov
mov
mov
js
inc
lahf
sti
or
adc
xor
adc
pop
into
jmp
jmp
sti
sub
xor
sbb
add
xor
mov
inc
(bad)
bound
je
les
push
das
jne
add
sti
xor
push
adc
test
rol
data16
ja
es
pop
add
pop
adc
adc
adc
add
rcr
inc
das
cmp
dec
adc
add
pop
mov
add
adc
adc
pop
inc
add
pop
sub
add
ins
adc
pop
add
adc
pop
push
push
pop
mov
xor
jbe
sbb
and
fwait
adc
pusha
sub
test
and
lock
bound
and
xchg
sbb
pop
mov
sub
push
pop
sub
inc
jbe
or
test
js
pop
push
push
push
sbb
xor
(bad)
mov
ins
adc
xchg
add
mov
inc
add
sbb
mov
dec
(bad)
mov
jne
pop
es
sub
rcr
lds
lds
cmp
sbb
jno
cmps
outs
aaa
push
pop
xchg
dec
xchg
adc
xchg
add
loopne
out
mov
mov
add
sbb
dec
div
add
push
push
push
in
sbb
push
outs
add
test
inc
sub
jg
call
sbb
push
je
test
xor
jns
cs
jno
xchg
or
add
sbb
sub
sub
fmul
in
out
pop
pop
xor
push
mov
sar
nop
and
add
jo
jp
gs
jne
fldenv
and
mov
inc
mov
addr16
jnp
xor
sbb
(bad)
(bad)
lea
push
loopne
push
inc
add
adc
cmc
and
xchg
sbb
mov
mov
add
add
fadd
or
xchg
xchg
dec
mov
lock
mov
outs
adc
jno
pop
pop
enter
aad
mov
jo
cmp
xor
and
nop
fld
xchg
gs
dec
add
or
and
push
stos
pop
jp
leave
adc
pop
fist
or
add
rcl
cmc
dec
or
mov
je
sbb
xchg
js
jmp
js
inc
(bad)
cld
add
cmp
test
cmp
movs
add
push
outs
xchg
adc
hlt
add
add
dec
movs
(bad)
jne
push
sub
pop
outs
mov
mov
fs
xchg
or
push
hlt
mov
loopne
push
mov
mov
push
cmps
adc
push
loope
es
add
call
jb
pusha
imul
xchg
loopne
lahf
cli
push
jecxz
cwde
xor
or
sbb
call
test
cmp
jns
adc
mov
fadd
test
mov
leave
mov
add
dec
les
push
jne
cmc
loop
xor
ins
mov
stc
xchg
outs
xchg
add
xor
loopne
jns
pushf
xor
push
or
sub
xchg
adc
cmp
jecxz
sbb
div
sbb
cmp
dec
xchg
push
mov
adc
js
add
test
xor
clc
push
mov
cmp
outs
ss
das
xor
add
call
add
xor
jmp
push
add
add
jb
push
jmp
dec
pop
jns
push
sbb
mov
dec
es
es
sbb
data16
ret
pop
add
mov
push
repz
or
add
call
test
mul
jnp
icebp
mov
rol
adc
add
push
push
lds
add
stc
add
repz
shl
test
xor
mov
xchg
jbe
je
sbb
ins
pop
jmp
pop
cmp
pop
loop
or
(bad)
cmp
jmp
jbe
lock
lods
mov
dec
dec
hlt
jne
push
inc
or
sub
addr16
add
sub
xchg
xlat
add
pop
push
ins
sbb
cmp
imul
mov
add
push
mov
arpl
adc
sub
add
loopne
pop
jmp
push
or
pop
sub
fs
sbb
push
dec
sbb
xor
outs
mov
call
push
add
xchg
mov
xchg
popa
xor
popw
jb
push
lods
repnz
xchg
or
xchg
lods
dec
stos
add
adc
cmp
and
imul
cdq
loope
jne
mov
mov
stos
sbb
push
jo
dec
ins
inc
adc
mov
sti
ss
jb
outs
push
mov
pop
retf
in
imul
sbb
xor
xchg
push
not
dec
jp
dec
mov
sahf
pop
sub
xor
push
push
ins
mov
xchg
mov
xchg
dec
mov
sbb
pushf
lds
loop
xchg
fisub
lea
adc
and
mov
fisub
mov
mov
mov
je
jno
xchg
pop
xchg
cmp
test
sbb
daa
aas
or
lods
sub
mov
(bad)
push
jns
pop
leave
in
pop
gs
out
add
mov
(bad)
xchg
xor
mov
sub
xor
cdq
or
jo
jbe
jnp
sbb
adc
push
or
test
pop
mov
mov
stc
(bad)
sbb
inc
inc
mov
adc
ins
pop
add
xor
or
popa
push
out
adc
js
inc
ret
sbb
mov
sar
add
rcl
xor
loop
shl
sar
sbb
nop
shl
mov
das
and
inc
mov
adc
mov
push
pop
mov
jmp
ds
jno
cmp
dec
test
sub
dec
sub
xor
cmp
inc
or
xor
lods
jmp
mov
push
fs
xor
call
repz
xchg
add
jle
inc
and
(bad)
pop
mov
push
inc
ror
ret
ja
pop
push
jns
outs
mov
imul
pop
imul
xchg
and
dec
dec
movs
cmp
cmps
aaa
mov
nop
(bad)
mov
pop
cmp
les
data16
jbe
xor
js
push
outs
mov
scas
sub
outs
adc
xchg
sti
mov
jp
fidivr
jne
push
pop
mov
jne
dec
cmps
or
push
sub
dec
fadd
or
leave
inc
add
adc
and
dec
jo
push
push
shl
retf
and
xor
out
jge
imul
cli
ins
sub
xchg
cmp
dec
ds
(bad)
out
push
jbe
cmp
idiv
ins
(bad)
loopne
push
sbb
add
sbb
pop
push
ins
fs
sub
adc
idiv
add
das
popa
dec
inc
jbe
jno
and
adc
mov
add
(bad)
sub
adc
es
cmp
leave
lds
jmp
ror
addr16
sub
jb
test
cli
test
mov
xor
stos
shl
leave
ins
in
lahf
and
xor
test
pop
into
fld
int
add
pusha
dec
dec
add
cmp
xchg
mov
ss
ret
ins
sar
es
xlat
pop
lea
std
mov
scas
sub
jno
(bad)
(bad)
fs
dec
push
xor
jb
add
sahf
mov
jbe
int
std
fsub
xchg
sub
(bad)
lods
mov
sub
sub
aam
and
ins
adc
inc
ss
xlat
and
fs
iret
sub
add
xchg
xor
cmp
movs
retf
cmps
cmp
lods
xlat
dec
mov
xchg
int3
fisubr
add
add
sbb
int
movs
nop
fdivr
ins
adc
hlt
aad
icebp
cmp
xor
loop
(bad)
fdiv
xor
ss
jo
or
shr
xor
cmc
push
aam
pusha
or
ss
int
sub
push
push
sbb
(bad)
into
cmp
fidiv
sub
stos
int
imul
jge
push
popa
rcl
in
fcom
xchg
(bad)
lock
xchg
(bad)
retf
mov
adc
data16
xchg
or
pop
aam
jb
addr16
dec
in
add
push
sbb
xor
jmp
loopne
xor
fsub
in
adc
add
cmc
sbb
popa
fs
retf
sbb
adc
mov
mov
outs
cmovbe
adc
dec
fcomi
ror
dec
pop
adc
icebp
dec
and
out
mov
xchg
daa
retf
pusha
in
add
imul
retf
loopne
ds
push
pusha
inc
popa
aas
lock
and
pop
call
in
jle
xor
aad
inc
adc
jae
pop
add
mov
leave
and
pop
out
jmp
in
int3
xchg
and
test
xor
xor
xchg
and
loop
jmp
in
int3
(bad)
arpl
fst
pop
mov
and
add
jmp
repnz
jmp
or
pop
add
sar
xor
push
add
popa
in
(bad)
repz
(bad)
ins
jmp
in
adc
loopne
mov
dec
cmp
sbb
sbb
mov
mov
sbb
dec
sub
cmp
lods
test
adc
icebp
adc
inc
fcmovne
cmp
and
pop
inc
jno
dec
jno
stos
sbb
or
or
and
mov
jmp
mov
aaa
and
inc
popf
fild
or
cs
xchg
pushf
dec
sub
sbb
xor
shr
repnz
sti
lock
jno
rcl
and
or
pop
fld
ret
xchg
cs
push
dec
out
aas
repz
jae
add
push
dec
aas
pop
dec
pop
jg
push
lahf
sbb
and
nop
pop
scas
out
test
pop
ret
shr
arpl
or
loopne
mov
popa
xor
iret
hlt
inc
sbb
mov
daa
in
push
ret
sahf
lock
aam
adc
test
xor
pop
movs
nop
sbb
ret
loopne
sbb
push
icebp
xor
inc
jmp
repnz
push
ficomp
in
cmp
clc
mov
xchg
stc
scas
in
lods
retf
mov
iret
dec
sbb
mul
fisubr
cmp
test
or
dec
mov
or
out
aas
jecxz
and
adc
pop
fstp
mov
dec
and
mov
and
lock
jmp
jmp
mov
add
xrelease
adc
cmp
xchg
jmp
nop
adc
add
inc
sbb
xchg
push
jg
repz
pop
jo
into
lods
int
outs
or
mov
and
inc
lods
adc
inc
xchg
jae
shr
mov
pusha
int
(bad)
scas
scas
nop
jne
movups
(bad)
dec
nop
dec
mov
aad
aam
push
imul
shl
rol
add
or
xor
fwait
sti
(bad)
ss
push
aaa
ja
xlat
mov
cld
cmp
leave
or
jmp
iret
mov
ds
jbe
pusha
mov
xor
jmp
xchg
pusha
or
dec
dec
mov
mov
packsswb
ja
mov
sub
inc
lea
test
sub
push
retf
ins
xchg
cmp
jecxz
icebp
fstp
cld
jns
sub
xchg
scas
lods
pop
sub
xor
aam
adc
fwait
dec
lods
pop
mov
stos
ds
pusha
ret
outs
aad
push
xchg
cmp
out
fld
jecxz
outs
pop
mov
jmp
mov
sbb
pop
popa
lds
sbb
xchg
in
and
mov
add
add
add
sub
add
cdq
add
add
add
data16
data16
cdq
add
cdq
add
int3
add
inc
add
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
int3
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
cdq
cdq
cdq
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
push
inc
jo
sub
(bad)
sbb
xor
dec
and
test
or
ret
in
jp
loopne
js
test
jnp
adc
jmp
fucomi
fs
pop
movs
out
loope
push
push
pop
add
xchg
push
js
(bad)
jns
mov
test
add
mov
jae
movs
(bad)
mov
jle
xchg
xchg
add
fwait
pop
xchg
lahf
jo
mov
dec
mov
scas
mov
ins
cdq
ins
scas
stos
mov
inc
jae
shl
(bad)
mov
or
mov
call
popa
mov
faddp
lock
mov
in
mov
neg
jno
aam
mov
or
es
test
add
or
cmp
rcl
dec
retf
enter
push
repz
inc
js
popa
ds
add
cmp
add
rol
or
test
sbb
mov
(bad)
xor
pusha
add
push
inc
loopne
ret
add
pusha
adc
adc
push
test
movs
dec
inc
push
iret
sahf
icebp
nop
add
les
loopne
ret
pop
cmp
sub
test
mov
push
not
rol
jnp
nop
pop
ret
inc
jl
push
test
into
adc
xor
into
lea
lea
inc
js
xchg
je
mov
pop
ss
in
int
lds
adc
je
pop
xor
xor
fucomp
mov
out
test
mov
jecxz
mov
ja
xor
pop
push
mov
xlat
sub
push
les
out
sahf
jmp
xchg
dec
repnz
sub
les
lock
xchg
mov
pop
sbb
sub
add
inc
jne
push
push
gs
push
fimul
stc
not
push
adc
lahf
not
sbb
aam
mov
add
inc
pop
add
nop
inc
push
inc
or
popa
je
outs
fwait
jno
fwait
add
mov
pushf
xchg
inc
add
cmp
jg
push
test
sub
push
rol
outs
shl
xchg
push
outs
in
call
dec
cmp
lds
xchg
aam
inc
sbb
cwde
enter
xor
adc
inc
mov
xchg
shl
adc
xchg
push
adc
or
ds
fadd
xor
adc
xor
pop
and
int
aaa
xchg
adc
dec
dec
cmps
cwde
fs
push
cmp
mov
jmp
aad
jp
dec
cli
arpl
sub
mov
dec
adc
pop
sbb
cmps
add
dec
stos
xlat
jns
retf
sub
add
dec
aas
test
dec
imul
push
rol
add
mov
mov
mov
mov
inc
push
push
pop
jl
pop
add
xchg
mov
leave
dec
movs
xchg
sbb
rcl
sub
mov
popf
inc
jmp
xchg
(bad)
fisttp
cwde
or
jmp
add
pop
push
mov
push
push
in
adc
outs
mov
std
mov
and
stc
fisttp
push
jge
mov
mov
or
imul
lods
push
fild
nop
test
sti
jl
shl
or
cwde
scas
test
push
lods
and
out
xor
out
inc
sub
cmps
iret
inc
xor
inc
lahf
mov
fwait
ror
loop
cld
xchg
ror
addr16
nop
and
call
loopne
adc
sub
sub
repz
pop
ss
(bad)
out
mov
enter
inc
je
xor
xchg
mov
cmps
mov
mov
pop
sbb
inc
sub
fisub
cli
xor
adc
fmul
lea
ins
bound
test
xchg
inc
fs
and
cwde
(bad)
imul
mov
lds
ja
cmp
outs
jbe
xor
test
cmc
xor
mov
sub
(bad)
mov
cmp
push
pop
xchg
shr
pop
pop
addr16
loope
or
fcmovnu
repz
repz
cmp
jp
rcr
imul
rol
(bad)
push
push
add
mov
mov
push
inc
xlat
mov
sub
cmp
dec
xor
sub
push
adc
or
bound
or
jb
sbb
das
retf
stos
xchg
(bad)
dec
xchg
pop
mov
sahf
push
push
inc
es
jno
hlt
inc
sub
loop
or
add
xchg
xor
mov
add
ror
adc
and
shr
inc
jo
sub
leave
xchg
add
adc
test
push
call
inc
push
pop
sub
mov
xor
cld
dec
jp
ins
jecxz
push
cwde
rcl
or
pop
mov
out
mov
add
and
mov
out
inc
xor
(bad)
adc
push
popa
pop
mov
xchg
xchg
mov
push
or
xor
loopne
push
push
mov
adc
retf
fcomp
dec
enter
ins
pop
sub
sbb
and
enter
fbstp
jecxz
add
call
push
mov
mov
xchg
pushf
add
jb
push
rol
(bad)
(bad)
stc
adc
pop
imul
push
add
movs
retf
add
pop
add
xchg
enter
fstp
mov
(bad)
jge
test
rol
cmp
call
js
int3
push
sahf
int
push
ror
sub
xchg
jmp
inc
cmp
cmp
mov
adc
adc
mov
push
jmp
push
xchg
inc
movs
mov
mov
sbb
dec
xor
add
add
inc
nop
add
dec
and
js
dec
mov
je
add
push
fld
push
jecxz
mov
outs
sub
sub
mov
sti
iret
test
inc
dec
scas
ss
pop
dec
inc
fist
mov
sbb
push
pop
data16
add
test
ins
or
jo
xor
add
(bad)
push
aad
icebp
mov
into
mov
inc
loope
or
inc
sub
push
inc
(bad)
pop
adc
clc
movs
pop
(bad)
xor
xor
xchg
sbb
ret
stos
xor
fcmovbe
rcr
add
mov
push
adc
popa
xor
je
or
jp
sbb
mov
sbb
sar
mov
mov
mov
cwde
aad
dec
and
cmp
retf
out
and
mov
inc
add
loop
fstp
pop
pushf
add
cs
mov
sbb
xlat
je
or
ret
jae
cmp
sub
sbb
xchg
and
fldenv
push
or
push
xchg
pop
xchg
sub
or
sbb
mov
aaa
push
ret
sbb
lea
mov
test
lods
add
hlt
cwde
je
xor
dec
fcomp
dec
jno
popf
mov
dec
sar
in
daa
stos
test
xor
jmp
mov
pop
mov
dec
mov
inc
dec
mov
(bad)
loopne
fwait
loope
jb
mov
and
and
cmc
jg
adc
jp
add
sbb
scas
push
inc
or
lock
xchg
push
(bad)
mov
fiadd
out
jmp
fiadd
lock
pop
or
imul
push
jg
sub
xchg
push
xlat
(bad)
jbe
xchg
xor
adc
mov
cdq
gs
popa
mov
sub
sub
push
mov
push
add
mov
neg
cdq
je
shl
sahf
inc
sbb
sub
jno
push
inc
loope
pushf
ja
adc
xor
mov
jle
lds
loopne
mov
push
enter
push
mov
dec
and
sbb
into
push
fst
scas
cld
jmp
xor
ret
(bad)
adc
add
test
movs
cmp
xor
mov
lods
or
fisttp
in
jge
push
dec
push
or
lock
cmps
scas
cld
mov
mov
xchg
adc
jo
jae
xchg
bound
jmp
jmp
(bad)
or
dec
dec
daa
inc
mov
and
pusha
lods
jno
push
clc
add
cmp
bound
push
jb
daa
sub
jno
push
add
aas
sar
mov
and
sub
xchg
js
repz
add
fistp
retf
imul
pop
adc
mov
hlt
adc
mov
lahf
stos
xchg
pushf
sub
xor
xchg
pusha
test
sub
stos
fisubr
call
les
mov
and
inc
sub
sbb
adc
sub
and
ja
add
movs
repz
cmp
and
push
add
out
inc
and
je
push
dec
sub
jle
cmps
jae
add
adc
sbb
shl
jle
pop
jp
inc
add
dec
sbb
sub
jne
inc
(bad)
sub
add
mov
ds
arpl
mov
int3
idiv
cmps
xor
ss
xchg
ins
sub
in
jp
cmps
cs
cmp
clc
jo
and
jcxz
adc
push
xor
add
xor
mov
and
and
mov
jns
add
gs
neg
xchg
inc
inc
call
and
dec
clc
test
ins
fist
sbb
out
push
and
test
pop
pop
fdivr
aaa
popa
jmp
inc
adc
daa
jge
mov
push
out
adc
outs
cmp
cmc
push
adc
into
rcl
(bad)
mov
jle
xlat
sbb
enter
inc
pop
enter
test
push
mov
adc
mov
add
xor
loopne
adc
lea
jns
aad
pop
aad
iret
enter
jno
rol
dec
outs
outs
je
jns
lea
jne
test
leave
xor
into
or
and
pop
aam
push
push
lea
mov
mov
xlat
dec
out
data16
mov
adc
sbb
pop
mov
dec
mov
sbb
push
jle
dec
jg
sbb
dec
dec
mov
(bad)
movs
xchg
cmp
jns
xchg
mov
xor
cmp
sub
xor
inc
and
xchg
inc
cmp
call
adc
sbb
cmp
sbb
pop
mov
stc
pop
addr16
xchg
adc
xchg
xchg
add
sub
add
adc
mov
cmp
sub
add
in
aas
jns
daa
jo
or
sbb
xchg
inc
mov
mov
add
xchg
mov
pop
sbb
je
shl
push
and
frstor
adc
cwde
(bad)
out
cmp
mov
out
js
repz
fs
imul
add
or
dec
lds
cmp
call
jecxz
and
addr16
mov
mov
pop
shl
pop
clc
add
test
xacquire
gs
outs
stos
test
inc
cmp
fmul
cwde
pop
inc
mov
loope
cdq
out
adc
jmp
jns
in
sbb
dec
in
outs
and
xchg
test
icebp
jle
test
jp
inc
add
jmp
push
sub
jo
pop
inc
inc
imul
ins
xchg
test
adc
cwde
cmp
je
cdq
and
in
out
pop
jmp
clc
sahf
mov
sar
dec
adc
cdq
(bad)
outs
dec
inc
add
ins
loopne
push
test
sbb
push
dec
dec
shr
mov
sub
fmul
popa
repnz
adc
jnp
xchg
xchg
dec
xor
adc
outs
pusha
mov
pop
movs
dec
xchg
adc
nop
dec
nop
test
inc
sub
cmp
mov
sahf
xor
mov
stc
adc
popa
data16
add
arpl
and
popa
cdq
es
icebp
mov
sub
movs
cmp
mov
mov
pop
gs
sahf
cmp
add
adc
aaa
or
add
adc
mov
sahf
int3
or
or
movs
stos
dec
popa
mov
sbb
cmp
mov
push
or
imul
or
sub
stos
push
ja
jnp
stos
gs
jo
add
ss
xor
push
push
sbb
xchg
dec
sub
cmp
ds
xchg
mov
(bad)
sbb
rcl
dec
push
and
cmps
xor
cmp
mov
pop
or
pop
lods
inc
cwde
sbb
sub
and
(bad)
scas
stc
xor
xlat
adc
out
es
cmp
stos
dec
sbb
lods
rcr
lahf
pop
jnp
inc
adc
xchg
add
mov
mov
or
imul
pop
push
sub
sti
dec
test
mov
sbb
mov
inc
add
ss
shr
adc
shr
(bad)
xchg
(bad)
lock
imul
push
adc
and
retf
sub
pop
(bad)
adc
lock
push
out
xlat
inc
push
test
xlat
popa
(bad)
dec
popf
in
sbb
inc
into
and
push
shl
cmp
cmp
fldcw
xlat
fwait
imul
push
cmps
cwde
(bad)
js
xor
pop
sub
dec
push
ss
loop
pushf
push
push
into
push
pusha
shl
and
mov
jmp
xchg
test
test
enter
adc
or
lds
aam
mov
jns
imul
or
fistp
shr
test
xor
pop
jo
data16
ret
sbb
and
mov
push
jnp
xor
daa
shr
rcl
dec
movs
test
mov
call
push
popa
and
sbb
xchg
push
add
sub
mov
sbb
push
push
xlat
lods
jp
xchg
stos
sbb
xor
jg
call
add
mov
push
dec
mov
and
je
lock
mov
and
dec
in
mov
mov
ins
xchg
xchg
fs
ficomp
retf
loop
mov
push
inc
inc
push
bound
in
ret
xor
inc
inc
ss
sbb
pop
(bad)
mov
add
dec
bound
rol
in
xor
je
stos
aad
fwait
xchg
inc
repz
sub
movs
scas
mov
jl
xor
or
cmp
arpl
test
push
lods
push
data16
nop
xor
pop
or
sbb
cmps
xchg
test
inc
push
xlat
clc
pop
adc
push
jmp
inc
call
call
inc
adc
inc
test
ror
push
movs
addr16
xchg
(bad)
inc
sub
rep
cs
mov
pop
cmp
shr
or
jne
fs
ins
mov
in
adc
fmul
out
push
aad
jnp
jp
pop
mov
mov
pop
mov
(bad)
xchg
sub
jmp
popa
int
nop
pop
mov
cmp
cmps
sub
push
call
shr
lods
mov
sahf
mov
lahf
push
or
nop
jns
cmp
mov
and
fwait
ret
adc
dec
jmp
xor
jnp
sbb
cdq
sbb
sbb
sbb
call
inc
adc
adc
sub
mov
fimul
xor
cmp
rcr
sub
gs
sti
dec
jns
dec
or
fwait
dec
shr
inc
jae
xchg
xor
pop
push
call
xor
dec
loope
mov
inc
jns
and
fidivr
push
jmp
xchg
cmp
ret
mov
sbb
and
iret
jmp
movs
ins
(bad)
int3
retf
loop
sub
pusha
mov
add
stos
jmp
jecxz
or
es
pop
sbb
jno
inc
and
mov
ins
dec
inc
jb
mov
sub
or
push
outs
cmp
and
lods
imul
mov
jle
loop
mov
mov
and
adc
pop
pop
xlat
jl
mov
loop
cs
mov
push
cmp
mov
fnstsw
les
and
pop
clc
xor
hlt
mov
jmp
retf
js
or
leave
add
js
fadd
and
xor
pop
push
rcl
mov
int
fsub
cmp
loopne
aad
adc
inc
dec
lea
push
sbb
jg
mov
int
xchg
popf
mov
inc
mov
call
push
mov
call
dec
es
add
cmp
and
inc
fiadd
retf
xor
cmp
xchg
in
int
(bad)
xchg
repnz
adc
mov
cmp
adc
mov
sub
lods
jmp
dec
dec
cmp
dec
hlt
and
pop
push
inc
cmp
popf
rcl
xor
xchg
loop
sub
pusha
jne
imul
cwde
sti
stos
aam
out
inc
pop
xor
rcl
push
pop
loop
scas
inc
lds
adc
fnstenv
clc
(bad)
push
(bad)
and
into
xlat
into
icebp
jns
mov
push
imul
je
mov
loop
(bad)
cmp
sub
mov
out
xchg
call
or
dec
(bad)
fild
(bad)
xchg
cmp
in
mov
sub
loope
mov
add
mov
push
enter
pop
inc
call
(bad)
xor
pop
xor
in
cmp
pop
addr16
lea
sbb
xchg
push
addr16
xor
add
xor
call
(bad)
in
dec
sub
mov
lods
lea
in
fst
cmp
js
sbb
jge
mov
dec
push
and
jg
ins
movs
pop
cmps
cmps
cmps
in
repnz
mov
dec
and
xor
(bad)
mov
lsl
(bad)
arpl
jns
sub
and
or
mov
scas
fnstenv
dec
in
and
shl
push
xor
movs
push
mov
sbb
ds
out
push
test
scas
dec
xor
call
sti
adc
inc
add
xchg
dec
mov
push
xor
pop
aad
pushf
ret
(bad)
cmp
shl
or
std
and
fstp
push
or
inc
ffreep
fimul
jecxz
cmp
jmp
push
fisttp
dec
dec
and
adc
shl
add
out
xor
or
push
mov
sahf
rcl
jne
cwde
or
cmp
sbb
xlat
lods
adc
xchg
or
loope
xor
pop
pop
and
adc
xor
lods
loope
jnp
jns
sub
in
push
in
and
out
outs
in
rcl
jo
dec
mov
sbb
cdq
push
iret
in
cmc
ja
or
sbb
add
push
cmp
lock
sub
in
xchg
pop
or
int
inc
aas
jae
xor
clc
jmp
cmps
stos
loopne
sub
pop
rol
shl
xor
cmc
ret
adc
ins
cmp
jl
add
imul
rdmsr
daa
push
mov
out
xor
add
add
ret
lock
(bad)
repz
mov
dec
pop
jmp
cmp
xor
clc
mov
or
repz
stos
inc
or
hlt
push
and
and
inc
out
inc
and
or
ret
rcl
or
xchg
dec
addr16
pop
dec
lahf
into
push
pop
bound
loope
and
jecxz
cdq
inc
sub
das
adc
push
sbb
push
inc
and
in
or
dec
dec
lea
outs
mov
mov
or
sub
dec
dec
shl
popa
ins
dec
and
xor
sub
or
in
iret
loope
mov
or
mov
xor
retf
sbb
adc
out
sub
pusha
xor
cmp
push
ja
mov
mov
jp
div
xchg
push
imul
pop
pop
repz
pop
ja
(bad)
lods
xor
xchg
or
sbb
jle
pop
pop
mov
dec
mov
push
xchg
into
pop
inc
dec
pop
mov
adc
push
add
in
cmps
out
mov
stc
push
inc
pop
dec
pop
jo
sbb
cs
cmp
adc
push
pop
(bad)
and
xor
(bad)
xchg
repz
adc
sbb
cwde
scas
fadd
adc
cdq
adc
mov
lahf
cmp
jno
ins
dec
pop
pop
fcmovnbe
jl
data16
(bad)
fld
push
das
adc
mov
mov
fdiv
or
jl
mov
mov
sar
clc
inc
fs
or
inc
push
rol
cmp
mov
cmc
and
pop
daa
adc
call
pop
inc
mov
add
or
sbb
(bad)
or
scas
pop
mov
stc
popa
dec
sar
push
loop
fcom
arpl
mov
inc
or
and
test
mov
sbb
xor
lods
movs
out
and
sbb
loopne
icebp
cs
adc
add
add
mov
mov
mov
xchg
ret
call
push
mov
pop
jno
fisub
retf
(bad)
ret
mov
dec
cmp
adc
or
add
and
add
xor
and
je
in
scas
cli
fdiv
es
add
xor
sbb
scas
pop
adc
sub
aam
into
das
ret
in
dec
enter
dec
int3
xor
popa
xchg
dec
aaa
rcl
dec
cli
sbb
data16
adc
cld
xor
sub
mov
in
push
sub
jle
hlt
mov
push
inc
stos
push
ror
std
adc
xchg
cmp
push
or
dec
pop
in
nop
push
and
jne
or
sti
xchg
ror
adc
pop
jge
aad
sub
aam
dec
mov
adc
adc
stos
add
das
shl
popf
(bad)
push
aas
jnp
cmc
mov
iret
call
in
sub
push
lods
cmp
xchg
cmc
stos
cmp
aas
dec
in
xor
xchg
lds
fidivr
jmp
cs
std
pop
push
je
xor
pop
jge
add
and
add
add
add
sub
add
cwde
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
inc
add
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
data16
int3
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
(bad)
(bad)
(bad)
inc
add
push
inc
jo
sub
(bad)
sbb
xor
dec
addr16
inc
lods
adc
call
mov
sub
xchg
call
inc
jbe
jne
es
cmp
jbe
outs
jae
mov
xchg
test
jnp
add
mov
jb
ja
pop
pop
(bad)
jnp
xchg
jl
add
sub
mov
movs
test
push
push
xchg
lods
movs
fwait
fwait
xchg
mov
xchg
test
xchg
(bad)
fidiv
int3
rol
(bad)
fsub
in
test
retf
stos
aad
mov
dec
lahf
cli
out
jmp
or
add
push
adc
push
in
in
out
fist
stos
pop
into
cwde
cmp
jle
inc
nop
nop
xor
test
ror
xor
das
sub
pop
shr
pop
adc
inc
hlt
test
rdmsr
fs
add
loope
sub
stos
mov
inc
or
rcl
sub
add
adc
ja
outs
dec
jl
jmp
(bad)
and
sbb
(bad)
addr16
test
ins
cmp
cdq
inc
test
(bad)
cli
cld
shl
jl
shl
jns
pop
adc
and
test
ret
push
rcl
dec
ja
push
sub
xor
xchg
in
mov
adc
hlt
loopne
add
adc
add
dec
cmp
or
adc
dec
sbb
stos
cmp
or
add
mov
fst
arpl
gs
xchg
inc
or
xchg
push
pop
mov
and
mov
inc
pop
adc
clc
icebp
or
(bad)
pop
sub
adc
loope
int
les
add
push
inc
nop
add
xchg
xchg
mov
dec
leave
(bad)
xchg
hlt
shl
dec
adc
jns
inc
gs
dec
pop
inc
bound
leave
jecxz
addr16
mov
daa
fisttp
sub
pop
rcr
add
inc
adc
xchg
clc
xchg
sub
in
rcl
arpl
sahf
and
call
push
sub
or
cmp
adc
and
fisub
leave
ficom
ror
inc
cwde
or
adc
dec
adc
adc
add
imul
fcomp
add
test
sahf
ss
inc
repnz
aaa
pop
(bad)
shr
add
dec
mov
mov
imul
push
mov
pop
hlt
sbb
fs
xchg
shr
int3
inc
movs
pop
mov
mov
daa
fisub
pop
loopne
nop
shl
jo
and
push
push
inc
and
cmp
jp
pop
shl
sbb
pop
retf
sbb
cmps
jmp
dec
sub
pop
addr16
sub
pop
stos
inc
retf
xchg
xchg
cmp
in
push
jmp
jb
jae
mov
push
mov
shl
test
xchg
cdq
sub
and
stc
mov
sub
aaa
pop
push
push
and
enter
movs
jnp
sar
ss
sar
sub
xor
data16
add
jmp
leave
lahf
and
lea
leave
mov
dec
popa
inc
sbb
out
inc
shl
mov
sub
mov
in
leave
es
add
inc
cdq
shl
imul
mov
push
bound
adc
jns
ja
out
sub
xchg
jl
mov
out
test
mov
jmp
ds
(bad)
fcomi
cmp
dec
dec
mov
pop
in
and
pop
and
dec
push
ins
push
or
pop
mov
cmp
test
xor
sub
push
add
adc
adc
jns
adc
daa
pushf
mov
cli
sbb
adc
dec
xor
fisttp
and
movs
repz
repnz
scas
mov
sbb
ret
inc
mov
fisub
dec
outs
push
nop
ret
cmp
sbb
fxch
jbe
inc
xchg
lock
mov
loopne
pop
xchg
adc
test
rol
mov
fild
jmp
shl
pop
xchg
hlt
out
lahf
cmp
cdq
pop
adc
mov
inc
xor
add
mov
xor
add
cmp
add
or
test
inc
inc
mov
or
ror
inc
cmps
or
push
adc
inc
icebp
test
in
lds
loope
pop
and
mov
scas
mov
ror
jl
adc
stc
mov
sbb
lsl
dec
pop
jle
and
ins
sub
inc
sbb
cmps
add
pusha
inc
cmp
pusha
or
sub
pop
push
ss
adc
mov
lahf
bound
dec
repnz
cli
xlat
es
cs
pusha
add
mov
sub
mov
xchg
add
jo
ret
xor
arpl
jecxz
jnp
mov
out
ret
mov
in
jo
outs
mov
adc
pop
dec
in
rol
pop
or
or
inc
cmps
mov
retf
aam
mov
xor
push
inc
add
test
dec
sbb
inc
(bad)
jl
pop
push
or
(bad)
jae
sahf
dec
fmul
icebp
mov
imul
cmp
(bad)
adc
adc
cmp
mov
mov
mov
mov
(bad)
jbe
cmps
movs
mov
dec
sub
sub
sbb
call
jbe
je
in
push
loopne
pusha
add
scas
jle
cdq
inc
or
push
add
dec
imul
cmp
rol
and
in
jb
or
stc
into
stos
push
out
push
addr16
sub
inc
loopne
xor
jmp
mov
leave
push
push
add
mov
jbe
inc
inc
sbb
mov
inc
aad
hlt
jp
cwde
push
out
nop
test
add
or
in
dec
or
stos
mov
mov
pop
or
add
mov
cs
stos
inc
rcr
popf
pop
int3
rol
pop
ror
das
jmp
push
call
pop
mov
mov
sbb
push
dec
jo
fcomp
push
xor
stos
pop
xchg
jno
adc
dec
mov
fdiv
add
or
(bad)
mov
mov
jno
js
(bad)
jne
sbb
xor
pop
aaa
pop
push
mov
xor
bound
jp
xchg
and
xor
push
dec
addr16
nop
es
jb
rol
xor
hlt
jne
mov
pusha
or
jge
mov
in
xchg
jnp
xchg
jo
adc
sbb
mov
add
dec
dec
sub
loopne
jl
in
inc
stos
push
in
jnp
dec
dec
retf
sub
inc
inc
retf
call
adc
adc
add
xor
mov
mov
sub
(bad)
xor
inc
inc
sub
add
lods
xlat
add
mov
cli
int3
es
mov
test
je
xchg
inc
jae
cmp
call
fstp
scas
rol
fstp
push
push
sub
imul
add
ja
push
push
inc
lahf
sub
(bad)
jbe
jno
cmp
inc
add
or
pop
adc
addr16
in
and
push
mov
dec
dec
lahf
faddp
jne
sbb
inc
push
cli
xor
(bad)
push
cmps
cmp
jle
mov
adc
xchg
or
mov
nop
inc
scas
pop
mov
gs
pop
das
mov
cmc
push
in
imul
inc
popa
in
stos
rol
mov
iret
push
dec
sbb
pop
and
bound
push
xchg
push
mov
pop
out
pop
push
pop
add
ja
xor
dec
jge
inc
jae
lods
mov
addr16
cmps
inc
inc
or
xor
or
mov
mov
xchg
jae
lods
stos
inc
add
aam
rcl
adc
jl
jp
lahf
mov
adc
cmp
and
xchg
retf
jne
xchg
outs
jbe
data16
jb
or
les
adc
cdq
out
(bad)
aad
in
adc
xlat
fwait
in
inc
ja
jnp
xor
add
pcmpgtd
sub
fldcw
scas
mov
adc
arpl
push
clc
clc
mov
leave
enter
fsubr
mov
in
inc
jae
test
cwde
dec
inc
and
out
mov
imul
ret
js
ds
sti
jl
add
dec
lea
push
pop
scas
dec
icebp
test
aam
cmp
xadd
cdq
add
pop
inc
pop
sbb
mov
int3
int
les
mov
xchg
xchg
xchg
add
ss
add
ja
xchg
cs
imul
xchg
pop
adc
fiadd
aaa
mov
dec
adc
adc
cmc
add
js
(bad)
push
cmp
add
mov
cmp
add
data16
push
add
shl
adc
sbb
daa
or
sub
aad
int
add
ins
stc
push
js
add
pop
jnp
xor
pop
adc
and
jb
push
pusha
sbb
adc
xor
ret
lahf
loope
imul
adc
push
hlt
add
stc
ss
sbb
ss
jp
shl
loop
aaa
pop
imul
es
jl
and
add
outs
sub
cmp
push
imul
test
jne
adc
test
jmp
xchg
pop
or
add
mov
cmp
dec
shl
add
add
pop
inc
out
and
sbb
and
inc
imul
ins
popa
pusha
mov
(bad)
jne
xor
fnsave
sti
test
ds
add
sbb
enter
add
cwde
add
add
add
xor
dec
pop
cmps
pop
(bad)
loopne
xor
mov
add
and
mov
add
call
and
rcr
sub
add
and
dec
in
and
add
add
or
mov
pop
mov
add
push
adc
pop
push
push
add
test
(bad)
jge
jb
pusha
add
inc
ss
inc
xor
mov
jle
mov
xchg
sbb
jp
xchg
sub
cmp
daa
lods
daa
jge
xchg
pop
sbb
sub
inc
cmp
push
pop
enter
test
and
pop
ds
fsub
jo
test
enter
bound
add
sub
ds
mov
xchg
xchg
mov
add
dec
je
cwde
xchg
and
jnp
arpl
xchg
push
pop
test
inc
inc
jp
repnz
outs
cmp
into
mov
push
pop
xchg
mov
jge
fldenv
fstp
jmp
mov
retf
jbe
sub
xchg
stos
in
sub
fidiv
add
mov
loopne
inc
inc
sbb
and
xchg
mov
mov
bound
xchg
mov
xor
sub
xor
jp
pushw
and
pop
(bad)
mov
rol
xor
mov
outs
call
push
add
add
fwait
je
ins
std
inc
push
retf
mov
dec
cmp
mov
xchg
stos
test
mov
xchg
sti
ror
aaa
adc
xor
pop
fcmovne
popf
inc
pop
xchg
jb
pop
jecxz
cs
stc
sub
inc
push
scas
ss
pushf
aas
sub
mov
sbb
les
ror
or
push
add
out
xchg
pop
sbb
cmp
inc
adc
xor
fadd
cmp
das
mov
daa
inc
adc
add
cmc
dec
adc
adc
je
stc
add
mov
or
retf
push
bound
sub
sbb
rcr
outs
aam
add
mov
sbb
shl
rol
push
rcr
ret
(bad)
jg
sar
clc
pop
adc
out
push
adc
ret
(bad)
xor
mov
pop
sbb
push
mov
sbb
jbe
add
in
xchg
cdq
movs
cwde
jns
mov
call
jle
cmp
sbb
push
rcl
jo
push
cmp
add
sub
inc
mov
test
and
imul
das
pop
xor
cdq
call
pusha
pop
popf
sti
cmps
xchg
xor
pop
sbb
test
sub
xchg
jmp
movs
or
and
mov
jmp
adc
icebp
push
add
mov
data16
lods
jge
mov
cmp
adc
sub
cmps
xchg
and
jmp
adc
xchg
scas
cdq
mov
or
xchg
mov
lea
cmps
lods
aad
adc
mov
jno
das
ret
push
dec
pop
gs
imul
js
icebp
push
push
test
cmp
mov
pop
sbb
push
jne
add
xor
ret
mov
add
push
(bad)
test
aad
cmc
fcomp
arpl
jbe
xor
call
call
xchg
push
push
push
adc
pop
and
or
in
js
dec
(bad)
shl
mov
(bad)
sub
xchg
xchg
mov
(bad)
mov
imul
es
push
xchg
sbb
mov
push
jnp
movs
jnp
push
aad
push
adc
dec
or
dec
mov
inc
pop
xchg
add
adc
pop
jmp
sbb
jg
movs
mov
jae
dec
es
push
cmp
fstp
inc
cmp
inc
ja
inc
push
jmp
add
adc
in
mov
jge
sti
je
call
retf
mov
je
mov
xor
adc
loope
sub
imul
gs
loope
pushf
test
sahf
mov
xchg
jae
stos
jg
push
sub
pop
pop
dec
inc
cdq
inc
xchg
aad
ja
xchg
jecxz
cmp
mov
je
in
jl
pop
sub
or
mov
fwait
loop
retf
sub
icebp
push
inc
push
add
mov
pop
mov
dec
lods
inc
(bad)
sbb
xchg
scas
movs
xchg
or
fs
xor
push
xor
shl
shl
dec
es
fwait
jno
rol
(bad)
js
xchg
test
gs
dec
out
repz
fisubr
lds
push
pop
adc
rcr
cmp
outs
into
sub
les
je
cmps
je
push
jns
mov
loopne
lds
pusha
out
scas
inc
stos
adc
inc
mov
bound
sub
mov
cmp
retf
mov
mov
push
inc
push
pop
dec
sbb
pushf
loopne
xchg
das
int3
mov
lock
jg
stos
ins
xchg
dec
pop
xor
xchg
mov
in
sbb
and
and
jmp
mov
pop
retf
jae
mov
inc
cmp
ins
jge
mov
dec
adc
jb
xor
jae
test
sbb
adc
aaa
test
and
out
xchg
dec
jbe
xor
dec
rcl
mov
inc
mov
or
mov
repnz
sbb
fbld
popa
jae
shl
lods
adc
sbb
inc
mul
clc
and
sbb
push
daa
and
mov
(bad)
sbb
dec
jle
adc
add
jg
sbb
loope
test
push
inc
movs
xor
mov
daa
sar
cmp
stos
(bad)
movs
leave
shl
sbb
jnp
jge
pop
test
pop
test
push
aaa
cs
cld
retf
(bad)
ror
movs
mov
in
push
and
cmp
or
xor
xchg
(bad)
sub
ss
aas
mov
imul
mov
sub
or
push
xchg
mov
push
mov
pop
push
push
ror
mov
xchg
aad
shl
test
sbb
dec
cli
inc
dec
and
cli
push
jne
addr16
bound
nop
xor
sub
sbb
ins
cmp
ret
in
int3
add
jmp
cs
xchg
push
pushf
cs
retf
mov
nop
pop
into
in
pop
jmp
add
cmp
xlat
enter
and
sub
push
fcomp
js
or
xchg
fwait
cmps
sbb
push
retf
and
js
adc
pop
movs
aam
sub
data16
push
xor
mov
mov
(bad)
ja
iret
std
das
rol
shl
mov
adc
mov
aaa
cmc
xlat
inc
mov
add
fbld
cmp
push
xchg
push
jne
dec
fld
loopne
jge
push
xcrypt-cfb
cmps
and
ret
xor
mov
aaa
cmc
fst
sbb
daa
mov
mov
xchg
cmp
ret
cmp
ret
pop
je
clc
imul
in
add
cmps
xchg
xchg
inc
jb
jns
and
cmps
xor
xor
fistp
add
xchg
adc
add
or
fnstsw
je
mov
hlt
inc
dec
jmp
mov
(bad)
jne
jbe
enter
loopne
jle
or
fstp
loop
dec
dec
push
and
and
xor
pop
sub
popa
mov
cwde
or
jno
test
xchg
jne
out
mov
dec
push
dec
add
wrmsr
pop
dec
test
cmp
nop
mov
sbb
dec
inc
lds
call
cmp
ds
ss
mov
(bad)
out
jp
retf
mov
jl
pop
rcr
inc
dec
popa
stos
test
aas
mov
mov
daa
in
jnp
in
push
out
mov
add
aaa
add
push
xor
xchg
dec
imul
mov
pop
mov
mov
push
inc
push
xor
jae
add
cli
jp
pop
inc
imul
pop
mov
adc
push
and
cmp
jmp
int
xor
lds
push
mov
and
xchg
adc
add
fnstsw
mov
mov
mov
push
gs
adc
cmp
inc
loop
add
ins
inc
jmp
and
bound
popa
sub
popf
aaa
loopne
inc
(bad)
mov
repnz
repnz
mov
xor
mov
mov
and
mov
jmp
adc
test
and
push
out
(bad)
nop
fsub
adc
xlat
shl
icebp
in
bound
bsf
repz
pop
hlt
or
or
sbb
mov
push
bound
pop
rcl
das
xor
in
or
mov
repnz
xor
xchg
cwde
sub
xchg
icebp
jae
xor
fcomip
mov
shl
push
mov
or
stos
clc
push
mov
call
out
adc
pop
adc
pop
or
xlat
jbe
and
adc
dec
dec
pop
lock
lea
jge
adc
push
rcr
push
xor
cmp
nop
ror
xor
push
mov
mov
and
shl
inc
ret
mov
fadd
inc
inc
and
or
inc
mov
add
and
nop
dec
movs
push
jmp
xchg
repnz
xor
test
nop
and
icebp
repz
fwait
in
int
push
jo
lods
retf
sub
push
xor
test
int
jb
ins
rcl
or
outs
ror
das
lods
hlt
pusha
dec
das
jne
xor
xor
lock
mov
xchg
sub
retf
not
xor
test
dec
dec
xor
mov
out
cmc
mov
mov
into
in
call
(bad)
(bad)
jbe
pop
shr
aaa
icebp
lods
xor
and
and
out
cmp
push
hlt
lods
aam
cmp
into
jg
lods
aas
sti
loop
inc
and
fsubr
inc
enter
or
and
cmps
xor
int3
int
inc
scas
push
test
pop
inc
call
test
adc
pushf
scas
dec
mov
or
push
mov
adc
xchg
cmp
enter
mov
jae
adc
cmps
ins
aad
mov
sub
mov
mov
push
mov
fst
sub
(bad)
cmc
movs
fnstenv
idiv
mov
add
xchg
cwde
mov
or
adc
bound
test
rol
push
mov
dec
pop
mov
test
mov
inc
and
inc
(bad)
test
and
test
dec
push
lods
movs
int
addr16
fwait
aad
xchg
ss
pop
in
(bad)
(bad)
mov
std
shl
push
xchg
es
int
out
in
xchg
jns
inc
fistp
fidiv
dec
stos
xlat
in
les
mov
movs
bnd
dec
pop
fidivr
mov
loopne
mov
xchg
mov
in
xchg
pop
call
xor
loope
mov
scas
add
inc
aas
sub
sbb
adc
cmp
inc
push
xor
repnz
mov
adc
pop
jmp
out
inc
or
hlt
sbb
or
aaa
and
mov
movs
pusha
fcom
enter
xchg
mov
stc
fwait
mov
or
push
sti
sbb
out
test
xor
push
jno
retf
and
int3
xor
adc
mov
push
dec
xchg
push
adc
dec
inc
bound
dec
scas
push
or
sbb
adc
and
mov
xor
sub
dec
retf
(bad)
in
mov
adc
jo
les
push
cs
and
add
test
add
and
jae
mov
or
jo
fmul
gs
cmp
call
retf
shl
sub
ret
bound
enter
xor
add
add
jne
push
pop
xor
push
push
das
std
nop
(bad)
push
dec
sub
hlt
and
jmp
(bad)
pop
push
add
neg
lea
or
xchg
aaa
iret
jb
jnp
pop
mov
sub
jmp
enter
push
mov
add
cmp
adc
or
pop
cmp
mov
les
inc
mov
inc
cmp
jbe
loop
mov
dec
jnp
mov
push
jmp
lds
pop
dec
mov
(bad)
(bad)
sub
repz
push
retf
outs
ins
scas
xchg
(bad)
mov
cmps
sahf
sbb
iret
scas
xchg
ins
or
in
mov
mov
mov
xchg
out
icebp
jp
mov
mov
sub
enter
daa
mov
mov
shr
push
add
mov
sbb
push
xchg
mov
stos
outs
ret
inc
mov
ret
fucomp
mov
jle
retf
lds
std
loope
jns
fcomi
loopne
(bad)
mov
fmul
sub
mov
stos
jne
loope
rep
jmp
inc
sbb
repnz
int
cmp
add
stc
add
add
add
sub
add
fwait
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
inc
add
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
data16
int3
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
(bad)
(bad)
(bad)
inc
add
push
inc
jo
sub
(bad)
sbb
xor
into
push
xchg
fsubr
dec
test
stos
push
repz
retf
outs
mov
xor
add
out
jmp
jb
bound
test
cmp
jl
mov
adc
xchg
sahf
lea
add
nop
add
push
xchg
add
sahf
js
mov
mov
gs
addr16
iret
rcl
lods
ret
mov
leave
jo
(bad)
fidiv
shl
mov
rcl
aad
sbb
jmp
mov
scas
(bad)
pop
popf
jmp
push
shl
jmp
fadd
call
or
push
sub
jmp
adc
lea
pushf
imul
bound
and
add
inc
xchg
lods
add
inc
arpl
mov
mov
xadd
inc
stos
push
dec
addr16
pop
mov
aad
mov
push
imul
add
add
(bad)
(bad)
push
adc
pop
dec
jbe
stos
sbb
fwait
adc
ror
adc
and
nop
pusha
scas
jecxz
dec
repz
cmc
or
fmul
xor
xor
inc
outs
adc
out
shl
popf
scas
jne
jp
fs
adc
ret
call
cld
stos
cmp
lds
fst
in
retf
inc
xchg
jno
pop
push
cmps
pop
dec
scas
lods
jbe
pusha
add
fwait
pop
repz
mov
(bad)
push
aas
call
out
push
mov
jp
out
xchg
leave
sahf
fstp
jae
test
fisubr
rol
adc
arpl
rcl
xor
rol
push
test
cmp
xchg
jbe
and
outs
mov
jp
push
fsubr
rol
bound
ins
xchg
add
xor
mov
cwde
(bad)
fs
xchg
je
dec
mov
and
in
call
mov
arpl
sti
inc
add
ins
mov
add
xchg
and
cmps
xchg
add
popf
push
out
js
and
test
arpl
pop
sbb
push
rcl
jns
call
les
mov
push
dec
mov
pop
pop
leave
out
pusha
outs
push
push
loope
(bad)
je
adc
ret
cmp
and
pop
mov
push
push
mov
inc
sbb
cmc
leave
addr16
les
rol
call
jb
sub
xchg
mov
dec
ret
and
imul
test
push
jnp
cwde
and
xor
xchg
xor
shr
push
add
cmps
imul
mov
push
dec
dec
add
sub
dec
jbe
lods
dec
mov
sti
popf
mov
lock
ds
scas
mov
cmps
cs
jmp
dec
int3
mov
jge
adc
retf
sbb
scas
mov
and
loope
or
cmc
fisub
inc
adc
int3
push
xor
in
mov
ins
push
imul
mov
out
sub
int
out
push
ss
outs
add
jno
sbb
pop
xchg
cmp
jnp
xchg
pop
sbb
lock
enter
fs
mov
cld
sub
leave
sbb
mov
dec
sbb
iret
jge
leave
add
pop
and
test
imul
mov
lea
int3
inc
mov
test
cdq
outs
pop
ins
mov
mov
jnp
repnz
push
pop
test
pop
sbb
add
fsub
fld
pop
adc
sysexit
xchg
cs
or
push
dec
xor
pop
mov
mov
into
mov
adc
cwde
xchg
retf
push
jp
dec
cmc
push
scas
or
stos
xor
push
cdq
iretw
(bad)
cli
stos
inc
das
leave
cmp
adc
cmp
add
icebp
dec
outs
pop
xor
push
and
stos
(bad)
call
cmp
xchg
xchg
mov
movs
pop
xchg
int3
dec
xchg
dec
xor
mov
cmp
xor
mov
ds
mov
pop
cmp
shl
add
cld
push
mov
cmp
retf
add
mov
js
mov
jb
fs
shl
or
push
cld
ror
mov
lea
dec
sar
movs
xchg
outs
jns
ja
fwait
and
jns
xchg
mov
mov
inc
and
mov
push
ret
sub
add
adc
sbb
nop
xchg
les
mov
ret
daa
add
enter
mov
mov
jecxz
inc
in
xor
cs
dec
sub
mov
mov
and
push
test
add
cmp
xor
hlt
dec
imul
cmp
inc
adc
sbb
add
js
pop
and
daa
inc
inc
pop
mov
xor
and
es
jl
dec
dec
xchg
cmovs
adc
add
xor
mov
and
in
and
mov
mov
xchg
je
adc
cmps
pusha
fidiv
in
dec
out
mov
cmps
or
lock
into
or
pusha
push
xchg
lock
mov
add
mov
sub
repnz
xchg
lods
xchg
add
add
aam
clc
cli
mov
cmp
xor
and
js
jg
xchg
or
sub
mov
push
(bad)
pop
xchg
xchg
inc
fldenv
outs
dec
lds
or
ja
jecxz
or
adc
mov
inc
and
xor
dec
rol
mov
sahf
scas
retf
dec
push
scas
fmul
rcl
push
pushf
jp
mov
push
add
sub
dec
jbe
jns
push
cmps
xchg
mov
add
adc
fcom
or
adc
rcl
daa
xchg
out
xor
xchg
adc
and
add
hlt
sub
outs
fiadd
popf
dec
and
(bad)
pushf
pop
cld
or
loopne
xchg
pop
jo
rcr
in
inc
rcr
cmp
add
out
aam
aam
in
push
int
add
fdiv
push
fwait
les
add
xor
addr16
ror
xlat
loop
shr
cmps
jo
cmp
push
add
pushf
push
test
fmul
pop
lods
stos
pop
stos
call
adc
popa
test
jbe
shl
mov
sub
push
clc
and
(bad)
xlat
(bad)
les
lds
add
fsubr
stos
or
imul
fiadd
hlt
push
(bad)
fdiv
add
jl
mov
and
dec
sbb
push
mov
fcomp
ret
mov
mov
nop
sbb
cmps
aam
sbb
lods
movs
fcomp
push
fsubr
add
sub
add
js
push
pusha
out
or
xor
mov
test
push
dec
pop
mov
dec
or
mov
sbb
loopne
dec
retf
xlat
std
movs
jbe
lea
dec
fcmovnu
inc
data16
jae
lods
jmp
ja
enter
xor
outs
push
xchg
jp
jbe
add
imul
and
call
add
add
sub
pop
push
imul
pop
add
mov
(bad)
test
jge
call
mov
jo
add
(bad)
out
xchg
xor
jmp
imul
arpl
pop
repnz
sbb
fisub
bound
mov
inc
cmp
aaa
in
jecxz
cmps
pusha
into
inc
or
test
push
stc
mov
imul
in
sub
push
adc
lea
inc
into
in
stos
addr16
jae
out
rcl
push
lods
add
out
adc
add
jge
xor
fst
ins
bound
xlat
mov
or
lods
mov
or
push
(bad)
fucomp
movs
ror
add
(bad)
sar
rcl
mov
adc
jae
out
fsubr
add
retf
cmp
push
sub
das
loop
out
cld
fcomp
faddp
dec
push
and
cmp
ds
xchg
jae
shl
jl
inc
in
sub
jl
push
out
add
pusha
loopne
retf
push
jae
iret
fcom
jmp
out
fld
sar
xchg
scas
jb
push
lock
pop
sbb
addr16
ins
or
xor
or
out
cmp
fiadd
in
das
out
jge
ret
stc
push
int3
in
mov
sbb
fwait
clc
or
mov
mov
mov
sbb
lds
aas
out
(bad)
cmp
leave
dec
mov
into
dec
or
xchg
(bad)
mov
sbb
stos
xchg
js
bound
es
and
xor
call
(bad)
and
loop
loop
pop
xlat
jnp
idiv
aaa
jns
adc
mov
push
sbb
ret
sbb
cmps
dec
pop
lock
loop
bound
dec
pop
jb
popa
push
push
sbb
pop
xchg
mul
add
in
sbb
jae
jnp
pop
jbe
aaa
jns
add
jecxz
bound
ja
pop
cdq
loop
mov
cmp
cmp
xor
test
out
and
xor
xor
mov
inc
jg
ds
out
sar
mov
sbb
push
jge
jbe
adc
and
and
out
hlt
in
lea
adc
and
push
adc
daa
push
lea
jae
add
movs
xchg
jae
mov
pusha
push
jbe
mov
pop
mov
mov
dec
and
and
add
pop
xor
sbb
add
and
xor
mov
js
rol
xchg
and
lds
add
clc
mov
mov
div
add
or
sbb
cmp
jg
and
jp
push
push
xchg
bound
xor
or
jp
cmp
mov
pop
jge
daa
sbb
imul
gs
leave
or
test
das
test
push
popa
jo
sbb
sbb
inc
cmp
je
enter
add
popa
inc
pop
sub
add
cwde
je
xor
mov
push
mov
jnp
ret
pop
add
nop
aaa
xchg
jmp
push
add
and
push
inc
aam
push
add
push
or
inc
add
sub
xchg
mov
arpl
js
sbb
in
pop
ds
jb
addr16
inc
(bad)
jmp
xchg
xchg
aaa
xchg
sub
pop
loopne
and
inc
and
push
push
jg
add
and
dec
jnp
ja
sub
sub
sub
out
inc
test
xor
mov
xor
ins
jmp
out
clc
cwde
jle
cmc
jae
test
mov
dec
in
pop
pop
push
je
adc
adc
fiadd
pop
clc
lea
pop
(bad)
xlat
jnp
imul
daa
xchg
jp
mov
aad
push
les
cmp
pop
xor
inc
rcl
inc
push
mov
add
nop
cmp
push
pop
mov
(bad)
xchg
call
rcr
data16
cdq
xchg
daa
jbe
mov
pop
or
hlt
daa
xor
push
lods
fadd
into
xchg
sub
jne
inc
add
test
jnp
pop
xchg
mov
xchg
cdq
retf
jge
xchg
sbb
repz
ins
push
sbb
sbb
mov
jne
xor
pusha
xchg
(bad)
ins
retf
data16
pop
leave
test
lock
cmc
imul
call
push
push
push
imul
and
ds
ja
lds
ret
xor
imul
push
data16
fwait
clc
sahf
int
mov
inc
lahf
ret
mov
sbb
jbe
mov
dec
bound
shl
add
cwde
add
mov
sbb
jbe
aad
and
mov
push
mov
pop
push
xor
imul
sbb
mov
movs
sub
pop
fild
and
or
cmps
neg
cmps
xor
pop
sub
xchg
mov
pop
sub
retf
dec
push
dec
and
arpl
sbb
xchg
daa
popa
sub
mov
test
leave
mov
movs
test
xor
sbb
cmp
movs
je
cmps
sub
ins
sbb
bound
push
test
aad
cmps
cli
jnp
jp
sub
idiv
add
cdq
adc
jmp
jl
jne
push
sahf
ds
dec
sub
lods
(bad)
cli
dec
xchg
enter
jg
leave
pop
fld
cmps
fcom
paddw
aad
je
repz
scas
mov
cmp
pop
jo
pop
stos
in
or
jo
loop
test
cmp
inc
and
je
and
nop
pusha
add
fst
sbb
pop
div
fcmovbe
mov
sub
arpl
cmp
add
xchg
and
cdq
or
cmp
call
cld
cdq
nop
dec
ror
ins
adc
push
inc
mov
push
(bad)
add
mov
ss
sbb
sbb
xor
push
dec
adc
aam
mov
test
dec
pop
inc
bound
cmps
imul
mov
popa
pushf
xchg
mov
test
loope
xchg
xor
cmp
cmp
stos
cmp
add
pop
and
adc
shl
out
push
mov
mov
mov
imul
sub
add
retf
mov
or
inc
and
push
jbe
xchg
push
mov
xchg
gs
mov
xlat
mov
jns
ret
mov
test
jo
es
stos
sub
ins
cmps
dec
das
movs
mov
pop
add
xor
fs
and
mov
ins
cdq
sbb
xchg
push
cwde
mov
mov
gs
sar
inc
lds
jp
int
push
jns
dec
and
call
adc
xchg
sub
push
pop
stos
jge
mov
cmps
xchg
movs
(bad)
cmp
jae
pop
nop
pop
rcr
push
and
pop
fst
nop
sbb
pushf
dec
xor
rcr
sahf
repz
pushf
push
mov
leave
pop
ret
sub
sbb
cmp
outs
inc
pusha
ror
jns
nop
push
sbb
push
mov
cs
ror
push
dec
or
stos
jle
shr
call
scas
mov
push
pop
inc
movs
int3
in
outs
dec
shl
adc
adc
push
and
sub
pop
jg
mov
mov
cmps
and
xor
fistp
sub
ret
inc
pop
stos
arpl
and
inc
xor
adc
or
gs
in
mov
das
pushf
push
push
push
cdq
sub
pop
mov
ret
cmp
js
mov
div
jp
rol
outs
idiv
(bad)
inc
mov
mov
jmp
xchg
xchg
jb
test
xor
pop
and
mov
ret
sub
scas
aam
test
gs
and
adc
sub
cmp
fadd
xor
leave
mov
mov
push
push
or
and
pop
leave
push
pop
jl
xor
bound
int3
lahf
scas
test
push
repnz
jbe
push
jne
add
xchg
mov
push
or
in
cmp
and
jno
pop
in
jl
ficom
jae
call
mov
jl
mov
jne
push
js
sub
xchg
int
movs
pop
cmp
ja
inc
add
inc
popa
int3
xchg
pop
mov
fidiv
push
xor
fsub
cmc
mov
hlt
in
jnp
sbb
mov
cmp
mov
and
inc
fisub
add
jnp
dec
dec
xor
lea
lock
lods
dec
inc
xor
rcl
adc
aam
jno
cmp
cmp
cmp
ins
push
pop
add
adc
adc
daa
adc
pop
add
inc
xchg
inc
test
sbb
sbb
neg
stos
aam
mov
sbb
cmp
xchg
push
jmp
push
in
inc
mov
sbb
mov
add
xchg
int3
addr16
xchg
mov
rcr
cmp
push
arpl
mov
fwait
out
cwde
or
(bad)
push
xchg
shr
mov
push
jp
adc
popf
pop
adc
adc
mov
pop
xchg
push
dec
mov
pop
cmp
das
cmp
xlat
push
ja
mov
aaa
push
inc
nop
add
popf
dec
xor
imul
lea
or
mov
add
push
pop
int3
aad
outs
(bad)
add
lds
les
xor
jg
inc
cmp
and
mov
gs
(bad)
ja
lea
and
xor
aam
in
retf
or
sbb
adc
pop
je
call
fist
(bad)
jmp
xchg
adc
and
add
pushf
daa
mov
sbb
cmps
inc
sub
mov
xchg
sbb
and
sbb
inc
test
mov
adc
in
lds
push
in
cmp
or
mov
mov
and
icebp
test
pop
aas
and
mov
sub
inc
fimul
hlt
ins
add
and
inc
add
xor
fcmovb
cmp
sub
dec
mov
pop
ret
icebp
mov
adc
imul
mov
das
mov
cmc
inc
mov
jl
sahf
pop
adc
aaa
xchg
jb
out
sti
out
sub
push
and
mov
pusha
cmps
aad
sbb
jg
jae
stos
ficom
(bad)
call
dec
imul
aas
xchg
mov
cmp
adc
sbb
dec
lods
lods
fwait
dec
scas
daa
call
inc
cli
add
stc
add
adc
fbld
mov
inc
test
mov
push
adc
cmp
ficomp
rcl
stos
push
mov
and
in
add
(bad)
js
xchg
scas
push
inc
dec
cmp
mov
inc
mov
pusha
sub
add
pop
adc
ds
adc
add
cmp
fnstenv
jecxz
sahf
cmp
cmps
xchg
xchg
dec
add
daa
or
pop
add
xchg
test
fld
inc
push
jecxz
mov
(bad)
out
and
sbb
sar
imul
pop
xor
mov
push
mov
call
fidiv
pop
out
dec
js
push
es
mov
push
(bad)
sub
(bad)
mov
mov
push
loope
in
out
repz
repnz
inc
and
jmp
push
test
xlat
ds
mov
lock
hlt
out
mov
movs
mov
(bad)
out
cs
jg
lock
mov
fidiv
outs
dec
mov
xor
push
mov
fild
dec
xchg
jno
mul
in
and
daa
fmul
adc
jb
sti
mov
cmp
adc
movs
add
cmp
aas
inc
imul
xchg
vpsrlq
adc
jae
xchg
pop
out
mov
ret
jp
inc
fidivr
adc
lock
shl
test
dec
and
and
inc
inc
and
les
js
sub
add
xor
dec
sub
fisubr
or
adc
dec
or
ins
jbe
or
rcr
out
dec
dec
dec
mov
adc
dec
or
add
add
mov
sub
adc
ins
push
dec
adc
xchg
(bad)
lea
jmp
mov
adc
jbe
push
fdiv
xchg
adc
add
and
sbb
push
mov
dec
sub
or
xchg
jne
into
dec
idiv
push
std
mov
push
js
popf
std
sub
call
inc
loopne
dec
adc
and
adc
add
retf
sbb
push
mov
push
jecxz
jb
lock
mov
scas
cwde
ss
ret
sbb
ins
cwde
cmp
adc
sbb
inc
rcl
push
aad
xchg
fadd
test
jo
ret
lds
cmp
les
repz
push
ins
push
dec
stos
xor
sub
push
dec
dec
xchg
je
aad
fs
add
jns
push
adc
addr16
mov
pop
mov
push
inc
sbb
leave
ins
xchg
(bad)
sub
xchg
sub
sbb
repnz
loopne
lahf
dec
cmps
dec
in
stc
sahf
pop
xor
(bad)
int
test
adc
push
xor
fldenv
retf
mov
jg
outs
scas
mov
xor
adc
scas
adc
jo
lock
mov
stos
mov
adc
inc
pushf
mov
jns
mov
xchg
shl
pop
adc
retf
cmc
jb
mov
ja
fcmovnu
pushf
mov
jb
mov
ret
int3
scas
jl
and
inc
push
xor
(bad)
imul
sbb
int3
mov
test
dec
and
(bad)
ins
lock
mov
mov
retf
push
aam
sub
retf
and
fdivr
stos
pushf
push
std
test
xchg
sub
jo
mov
and
out
mov
xchg
cmps
out
sub
je
inc
jno
test
movs
retf
sbb
sub
imul
cmp
mov
add
dec
dec
mov
lds
lods
lds
call
pusha
mov
and
in
cmp
dec
or
cmps
sub
cmp
int3
sbb
mov
movs
mov
dec
arpl
dec
add
adc
cmp
and
pop
xor
adc
and
imul
push
stc
push
movs
push
int3
fcom
mov
stos
fld
mov
xchg
enter
lea
dec
jne
aad
adc
jo
or
lods
lock
jmp
mov
rcr
adc
cmp
test
std
je
xchg
sbb
sub
inc
ja
push
fild
xor
mov
adc
ss
mov
cwde
in
imul
sub
aam
xor
inc
xor
aaa
test
iret
ss
rol
cmp
jae
jne
sbb
retf
or
nop
inc
ret
retf
dec
cmp
loop
cmp
rol
in
push
(bad)
in
cmp
xchg
(bad)
xchg
push
xchg
call
push
cmp
xchg
je
out
aam
mov
lea
cmp
std
or
call
adc
rcl
and
call
mov
or
mov
in
mov
jl
ret
push
in
jb
imul
ins
and
and
call
lahf
add
stc
or
jmp
fdiv
jge
outs
mov
xlat
test
cmp
dec
sub
nop
and
or
cmps
xor
(bad)
rcl
gs
aad
dec
sub
test
xchg
add
jnp
aaa
jns
add
cmp
mov
ror
stc
sbb
rcl
repz
iret
add
cmps
push
test
ins
and
mov
mov
pop
or
mov
xchg
mov
inc
rol
push
inc
pop
add
xlat
cmp
add
push
inc
icebp
enter
xchg
jecxz
xchg
dec
sahf
push
std
xor
lods
rol
push
sbb
mov
ret
rdmsr
lock
xor
sub
mov
push
mov
pop
adc
cmps
ret
and
xchg
and
loop
mov
bound
cmp
jb
sbb
adc
xor
mov
jae
or
sar
(bad)
pop
push
xchg
mov
setge
clc
shl
add
test
daa
(bad)
or
adc
adc
mov
mov
and
push
(bad)
sbb
sbb
mov
xchg
or
pop
(bad)
mul
xchg
test
clc
enter
(bad)
jg
lea
imul
nop
mov
movs
sbb
pop
les
xor
xchg
mov
stc
add
add
add
sub
add
movs
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
push
xor
inc
data16
xor
xor
data16
add
xor
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
push
inc
jo
sub
(bad)
sbb
xor
into
push
mov
in
jp
fisub
push
dec
jbe
stos
push
call
fisttp
mov
push
jnp
iret
daa
lock
jo
xchg
jae
jne
js
jg
xchg
adc
bound
mov
adc
add
jle
movs
jns
test
mov
mov
jnp
cmps
test
mov
sar
mov
rol
(bad)
xlat
jg
ret
retf
push
nop
mov
xlat
mov
mov
loopne
frstor
out
(bad)
(bad)
in
fsubp
leave
fild
pop
cmp
sub
sbb
jg
add
enter
push
rol
xchg
inc
add
pop
sub
mov
xchg
xor
loop
popa
mov
cwde
dec
mov
stos
xchg
mov
(bad)
mov
retf
mov
xor
mov
stos
add
imul
stos
jmp
xchg
inc
add
leave
mov
shl
xor
pop
xchg
sbb
in
mov
pop
and
dec
jle
dec
jp
cmp
fdiv
or
inc
loope
mov
and
(bad)
lods
pop
mov
cdq
push
inc
dec
push
dec
and
push
xor
inc
push
test
or
retf
xor
cmp
pop
shl
pop
cmp
int
clc
ret
jmp
or
mov
retf
push
retf
cmc
xor
rcl
xchg
pop
lods
push
mov
sub
cmps
scas
jb
fdivr
stc
fwait
jno
push
push
and
test
imul
aad
pop
or
shl
gs
and
fisubr
enter
rcr
inc
add
out
push
rcr
(bad)
sub
dec
pop
xlat
push
adc
pop
loope
or
aam
inc
pop
stos
in
mov
jne
adc
pop
in
add
add
cmc
clc
jecxz
mov
std
mov
or
dec
inc
or
fdiv
cmps
push
jg
cmp
inc
add
pop
pop
jb
add
push
cwde
fst
sub
xor
rcr
test
sub
dec
add
add
dec
inc
call
pop
push
in
imul
jmp
xchg
fsub
mov
dec
add
push
adc
movs
xchg
jg
or
add
sbb
sbb
and
ror
loopne
or
pop
jne
std
pop
jmp
aas
pop
cmc
pusha
data16
pop
push
das
mov
push
and
adc
sub
sbb
xchg
cli
out
popa
(bad)
cmp
test
in
pop
mov
hlt
push
stos
cs
inc
mul
jmp
imul
adc
fidiv
adc
xchg
out
inc
or
cmp
pushf
cvttps2pi
sti
or
stc
clc
imul
rcr
push
test
imul
(bad)
xor
cmp
outs
xchg
ins
sub
and
push
xchg
and
enter
jb
push
push
nop
scas
jbe
mov
lods
mov
loop
les
jb
and
and
cmps
fimul
push
jo
mov
add
inc
push
ret
push
daa
and
retf
movs
enter
dec
push
pop
push
pop
stc
xchg
test
jg
adc
sbb
pop
inc
xchg
imul
add
jge
fs
push
adc
aam
xchg
inc
loop
into
aaa
mov
fs
add
stos
xchg
(bad)
jecxz
fsub
daa
mov
lods
repz
xchg
mov
(bad)
cli
pop
stc
push
(bad)
pop
pop
add
sbb
std
cmp
mov
movs
lds
stc
push
sbb
dec
retf
sbb
or
xchg
test
sub
pop
add
mov
sahf
inc
jmp
cmc
cld
(bad)
inc
inc
lds
test
pusha
sub
mov
pusha
add
stos
or
test
sahf
mov
cmp
lods
fwait
pop
test
and
int
ror
push
lods
cmp
pop
aam
mov
lar
xchg
add
rol
mov
sub
add
pop
and
shl
xor
sahf
mov
jno
add
xchg
xor
adc
or
out
sbb
ss
cmp
(bad)
test
xchg
xchg
shl
rcl
aad
call
outs
xchg
xchg
mov
dec
adc
retf
add
xchg
ret
movs
pushf
rcl
jmp
xor
dec
loop
mov
add
pop
xchg
sub
cmp
js
add
push
pop
jecxz
bound
inc
repnz
cmp
mov
mov
adc
call
mov
inc
mov
mov
or
mov
inc
ret
adc
add
sub
arpl
mov
je
mov
aaa
arpl
jp
and
inc
xchg
std
inc
or
and
xchg
jne
gs
pop
mov
pop
sti
pop
ins
ficom
ins
ins
and
into
mov
inc
mov
add
popf
mov
repz
mov
xchg
popa
adc
jnp
mov
adc
dec
sub
(bad)
mov
sbb
imul
or
xchg
dec
push
inc
int
sti
mov
int
jmp
ret
sbb
sbb
or
js
movs
(bad)
adc
rcr
repnz
jo
mov
rol
xchg
xor
mov
jo
inc
shr
not
cmps
mov
or
ins
jmp
sub
push
cmp
stos
sub
lods
push
jmp
jb
std
fs
xchg
xchg
shl
mov
adc
arpl
xchg
mov
dec
jne
or
add
xchg
or
setnp
cmp
mov
xchg
and
jp
daa
popa
mov
inc
add
push
or
mov
mov
(bad)
mov
inc
inc
and
xchg
into
xchg
pop
mov
push
push
dec
(bad)
out
mov
ret
add
mov
pop
jnp
mov
mov
in
and
add
or
pop
or
inc
sbb
imul
push
enter
or
(bad)
pop
add
jo
push
cmp
cmps
test
ds
jnp
adc
aaa
test
sub
add
pop
xor
sbb
mov
stos
fidiv
mov
push
lods
bnd
mov
imul
or
out
jl
pop
into
push
jecxz
mov
cwde
(bad)
clc
lods
mov
xchg
sbb
cmps
rol
sub
fwait
enter
or
xor
hlt
lock
fadd
add
mov
dec
pop
push
test
dec
outs
mov
mov
mov
push
dec
lock
or
inc
scas
retf
add
lods
aad
popa
jecxz
xor
int3
(bad)
pop
mov
cmp
mov
push
or
cmp
out
jl
add
or
jns
jge
push
or
jns
rol
adc
fidiv
fimul
adc
or
adc
and
sub
dec
mov
aad
inc
mov
inc
lock
out
add
cmps
pop
sbb
std
mov
push
adc
xor
ret
lds
int
arpl
sub
fsubr
lds
add
and
pop
bnd
push
xchg
pusha
aam
and
(bad)
jno
xchg
sbb
(bad)
push
add
pop
sub
ins
xor
(bad)
out
jl
ficom
iret
(bad)
and
adc
cmp
xchg
shr
dec
adc
jbe
cmp
repz
aam
mov
and
sbb
jo
cdq
cmp
jns
fimul
movs
xchg
mov
stos
cmp
call
inc
add
push
pusha
add
(bad)
cwde
rol
inc
or
pusha
add
inc
or
xchg
or
dec
mov
jae
pushf
or
aam
icebp
cmp
imul
inc
or
imul
add
dec
mov
icebp
xchg
imul
jg
cwde
out
and
mov
sar
add
cmp
cmp
mov
fistp
and
inc
add
je
pusha
push
(bad)
mul
dec
lock
xor
imul
test
cmp
imul
mov
mov
dec
jne
pop
test
out
daa
adc
pop
lock
jnp
jle
repnz
pushf
mov
das
jbe
pop
mov
stc
push
rol
mov
mov
sbb
pusha
bound
sub
sub
or
xchg
int
inc
in
add
mov
sbb
inc
push
(bad)
inc
addr16
sbb
push
aas
test
jmp
js
mov
test
inc
je
pop
inc
adc
push
xchg
add
fwait
pop
sbb
add
lods
lock
repnz
push
mov
xchg
aam
les
add
push
jne
mov
cdq
jne
lods
inc
cmp
dec
bound
sbb
jnp
push
push
and
inc
out
pop
jg
push
pop
daa
js
test
adc
or
inc
cmovs
dec
mul
mov
jge
add
aas
movs
jb
mov
xchg
call
adc
inc
jp
mov
dec
inc
ja
inc
jg
mov
mov
cmp
shl
idiv
or
pop
push
mov
js
dec
(bad)
div
push
xchg
xlat
add
and
sub
jbe
push
jb
clc
js
enter
add
(bad)
loope
ss
test
xchg
or
and
int3
jecxz
and
js
inc
out
ds
inc
arpl
div
pop
sub
aas
iret
xchg
bound
dec
add
xchg
ja
sbb
add
mov
jo
mov
xlat
enter
sbb
adc
xor
and
lock
xor
inc
mov
lahf
mov
push
in
shl
mov
mov
push
ss
int3
xor
push
and
aaa
or
push
les
dec
xchg
outs
gs
xor
loop
pop
fs
ins
les
cwde
jle
mov
stc
cmc
addr16
movs
(bad)
clc
xchg
mov
(bad)
cmp
adc
movs
adc
or
add
mov
add
int
outs
sub
mov
(bad)
add
jg
xchg
pop
mov
push
add
sub
push
push
mov
xor
(bad)
and
sbb
mov
xchg
push
test
push
gs
(bad)
xchg
mov
js
sbb
push
push
in
idiv
imul
cwde
imul
inc
cs
cmps
ret
aad
sbb
add
inc
sub
and
das
aaa
xchg
test
xchg
jno
xchg
dec
fnstcw
ss
push
mov
jb
add
in
jbe
or
pop
js
pop
xchg
test
cmp
xchg
pop
and
dec
jns
sbb
jle
xor
push
inc
fcom
and
js
xchg
inc
ins
shl
addr16
je
cmps
ret
xchg
imul
mov
push
jne
nop
in
rcl
adc
jb
(bad)
ins
sbb
dec
sbb
shr
mov
(bad)
popf
mov
sub
test
rcl
jge
ss
dec
inc
ds
inc
out
xchg
ret
and
pusha
push
(bad)
jb
adc
pop
pop
cmc
aad
and
fwait
jmp
push
mov
xor
xchg
loop
lea
mov
jns
jo
lods
inc
aas
inc
mov
js
add
outs
or
cmc
arpl
xchg
adc
mov
cmps
jb
out
jg
(bad)
pusha
cmps
ja
ret
jo
mov
bound
and
popa
sbb
stc
outs
call
gs
cmps
pop
dec
imul
outs
test
xor
dec
fs
mov
or
add
cmp
jns
inc
inc
mov
test
push
xchg
dec
gs
xchg
pop
stos
xchg
sbb
sahf
sub
retf
cmc
dec
and
inc
movs
cmps
test
cmp
sub
push
fnsave
ss
repnz
inc
pop
sbb
movs
mov
sub
clc
push
mov
js
clc
(bad)
mov
mov
add
xor
stos
lahf
inc
(bad)
and
inc
cmp
data16
push
jne
jmp
and
sahf
daa
imul
ss
mov
inc
out
popa
test
(bad)
push
xor
and
les
push
ret
jp
leave
ins
out
stos
push
pop
xchg
inc
lods
popf
stos
cmps
and
cmps
stos
call
sub
clc
sbb
push
or
mov
call
inc
repz
sahf
cmp
sub
jnp
sub
pop
icebp
or
scas
cmps
jno
cmps
sub
cmp
push
inc
and
mov
push
lahf
aad
push
or
aad
add
scas
add
xchg
push
daa
jne
enter
lahf
test
cmp
in
inc
sub
icebp
cmp
add
adc
sbb
sub
sbb
pop
sbb
mov
jb
pop
scas
cmps
enter
ss
ret
dec
cmp
add
rcl
dec
mov
adc
fs
inc
pop
ret
inc
pop
add
sub
xlat
sahf
test
lods
jg
xchg
jnp
(bad)
mov
jns
jnp
sub
or
cli
xchg
repz
cmp
cmp
mov
fs
test
add
mov
stos
push
outs
mov
push
(bad)
outs
cli
in
shl
daa
xlat
pop
dec
aaa
fs
adc
cmp
movs
adc
jg
sbb
push
icebp
xor
sub
es
popa
adc
fsub
sub
fwait
jb
sub
sub
xor
jo
gs
and
in
leave
xchg
arpl
xchg
movs
push
ficomp
cmp
push
stos
jae
pop
sub
xchg
xor
mov
and
sub
fwait
xchg
popa
add
jb
das
mov
inc
xor
dec
dec
push
mov
dec
cdq
xor
test
adc
mov
adc
popa
imul
jbe
sub
loopne
cmp
sub
mov
mul
fnstcw
xchg
pop
dec
inc
jb
sub
mov
out
pusha
bound
mov
sub
je
mov
mov
cmps
push
stc
cmp
and
mov
jmp
cdq
xor
ins
dec
lods
(bad)
pop
stos
call
imul
push
test
push
ret
mov
js
jecxz
stos
ret
mov
loope
cs
inc
jbe
cmp
or
cmp
push
sahf
test
and
and
sub
mov
or
inc
add
xchg
sub
addr16
pop
adc
and
cdq
push
xchg
aas
jns
cmps
xchg
mov
nop
dec
pop
mov
cmp
dec
icebp
mov
inc
rcl
daa
test
pusha
mov
stc
push
pop
mov
icebp
and
xor
push
and
push
out
pop
call
sub
(bad)
retf
out
pop
fadd
add
mov
xchg
mov
and
and
out
js
(bad)
fmul
and
mov
scas
push
stos
pop
inc
test
inc
imul
loope
jns
retf
ret
seta
pop
sbb
ss
pop
repz
mov
mov
in
arpl
addr16
not
dec
lds
xchg
pop
popf
jmp
inc
mov
sar
sub
icebp
jno
sbb
mov
xor
movs
mov
je
xor
cmp
xchg
push
mov
cmp
dec
cmp
test
sub
cmp
sti
enter
dec
stos
mov
push
inc
das
xchg
pop
pop
scas
loope
mov
mov
inc
cs
dec
xor
inc
xor
push
mov
add
es
clc
or
dec
aaa
sbb
ret
lds
fldcw
(bad)
ins
sub
xor
into
xor
or
xor
shl
enter
mov
jbe
lds
js
inc
and
push
cmc
cmp
xor
dec
add
movs
(bad)
sahf
in
xlat
xchg
or
xor
or
call
inc
iret
into
jl
lods
inc
sbb
mov
jo
addr16
mov
adc
arpl
jae
push
jg
gs
or
jns
mov
xor
mov
push
sub
mov
lods
nop
mov
int
fwait
aad
arpl
mov
xor
dec
add
mov
(bad)
outs
js
cmps
mov
gs
cmc
push
dec
test
and
cmp
fwait
xor
sbb
(bad)
iret
add
(bad)
rol
sbb
aam
jmp
loop
fcom
(bad)
mov
js
in
sar
mov
xchg
or
dec
shr
mov
test
inc
cmp
sub
fidivr
push
into
jl
rcr
mov
(bad)
pop
cs
pushf
push
mov
cmps
loope
push
(bad)
dec
ss
in
sbb
(bad)
lods
mov
bound
inc
adc
push
xchg
cmp
xor
mov
xchg
aas
cmps
(bad)
loopne
imul
pand
loope
sbb
fsub
mov
dec
jge
xlat
mov
sub
clc
fs
ja
pop
sub
shl
xchg
pop
inc
pop
movs
dec
in
and
dec
rol
pop
and
dec
outs
jns
mov
sbb
add
pop
leave
xchg
xor
mov
ins
(bad)
inc
shl
push
dec
(bad)
and
out
in
fst
pop
out
out
jb
jmp
inc
call
mov
inc
xor
jo
dec
(bad)
or
movs
bound
cmp
sahf
pop
out
xchg
(bad)
mov
fdivr
dec
and
enter
ret
inc
jb
mov
repnz
pushf
popa
xchg
movs
sub
movs
and
int
sbb
cmp
imul
loope
cs
dec
inc
dec
dec
out
jae
lods
pop
ds
dec
out
pop
psllw
pop
rol
fst
sbb
mov
dec
rcl
jo
loope
mov
cmc
and
dec
gs
xlat
dec
xor
fwait
xchg
push
pop
pop
pop
lock
fisttp
cwde
ret
inc
cld
jno
cmp
mov
sbb
mov
inc
sub
mov
dec
in
jle
into
jmp
cmps
sub
jp
lock
rol
loope
(bad)
cdq
cmps
ja
ds
push
scas
sbb
in
clc
mov
(bad)
pop
inc
mov
xchg
jp
jl
fidivr
xchg
popf
cmp
inc
adc
cmp
mov
lods
shl
fcomip
pop
add
gs
fnstsw
mov
xchg
jg
out
jbe
test
pop
pop
mov
test
mov
ins
inc
rol
ja
and
cmp
dec
fldcw
in
jns
scas
outs
popf
cs
call
(bad)
addr16
dec
je
sbb
cmps
movs
aad
shl
cmps
and
mov
lds
xchg
lahf
bnd
push
(bad)
jle
cmps
mov
sbb
push
inc
ja
sbb
or
cld
push
mov
push
ss
sub
(bad)
pop
push
call
rdrand
aas
int3
inc
scas
add
xchg
xchg
int
in
mov
dec
aas
or
test
mov
(bad)
mov
add
clc
push
inc
push
xor
inc
adc
push
add
adc
add
dec
nop
ds
dec
fs
scas
add
jno
les
pop
movs
repnz
cs
mov
xchg
clc
cmp
mov
fist
add
popa
sub
add
test
imul
leave
adc
in
and
aad
retf
push
(bad)
sub
or
mov
xchg
lock
xchg
scas
push
clc
dec
lea
dec
dec
ins
shl
popa
adc
lods
inc
push
and
jb
push
hlt
jb
mov
call
add
jne
cmc
retf
mov
dec
or
ret
stc
scas
mov
or
adc
sbb
mov
mov
sbb
cs
test
add
movs
fwait
shr
retf
scas
mov
rcl
mov
push
bound
adc
add
pushf
imul
cmps
cmp
adc
jno
clc
test
cmp
(bad)
(bad)
into
pop
mov
inc
push
push
int
mov
jbe
mov
rol
fwait
daa
xchg
adc
or
or
sub
push
cmps
xchg
mov
pop
sbb
add
aad
sub
dec
sahf
pop
xchg
add
push
xor
stos
pushfw
or
inc
enter
push
and
into
les
sub
adc
dec
xor
xor
dec
ins
pusha
lods
call
(bad)
sbb
mov
jno
xor
ins
inc
(bad)
stos
and
xchg
lods
sub
mov
retf
dec
enter
retf
and
shl
jl
cmp
retf
out
add
mov
(bad)
in
jp
add
push
pop
mov
lods
ror
mov
ss
and
inc
nop
fdivr
stos
pop
mov
adc
and
std
push
and
pop
in
lods
test
repnz
cmp
and
(bad)
ret
movs
or
and
lock
push
imul
push
or
xchg
int3
test
jns
dec
cld
lods
movs
jecxz
inc
sbb
imul
dec
inc
repnz
inc
and
cmp
aad
pushf
add
sub
cmp
inc
in
jns
movs
inc
clc
sbb
mov
cmp
adc
push
mov
test
push
mov
stos
inc
dec
dec
fild
mov
sahf
(bad)
mov
rcr
adc
and
js
xor
jno
sub
add
and
nop
rcl
gs
xor
pop
(bad)
loop
bound
xor
int3
data16
aam
or
jmp
cmp
loop
mov
lds
fdiv
push
pop
sbb
jne
f2xm1
bound
call
dec
and
adc
jle
sbb
jno
(bad)
inc
sbb
bound
jbe
xchg
sub
fs
add
(bad)
int
leave
cs
dec
adc
popf
(bad)
call
in
push
jne
test
sbb
dec
add
add
test
mov
fisubr
cs
mov
xchg
or
test
pop
jbe
sbb
aaa
es
push
outs
out
dec
popf
int
scas
sub
mov
add
ret
cmps
repz
fld
pushf
or
repnz
xor
or
jmp
adc
ins
and
push
or
fs
jne
jge
push
daa
or
dec
push
dec
sub
push
push
add
adc
dec
mov
dec
rcl
pop
xlat
(bad)
pusha
ret
movs
cmp
jnp
das
js
xor
out
xor
es
jbe
lods
aaa
adc
out
mov
cdq
imul
cmp
test
cvtps2pi
aad
mov
es
mov
xlat
xchg
mov
pop
mov
push
mov
rol
push
cmp
sbb
data16
jo
inc
hlt
pop
xlat
jecxz
outs
ins
jmp
inc
mov
ss
(bad)
lahf
data16
leave
inc
jns
inc
cmp
rcr
movs
adc
movs
and
retf
rol
mov
cmp
sbb
int3
out
lea
sub
retf
adc
sub
lods
sub
je
push
movs
add
mov
imul
adc
movs
pop
imul
xchg
std
(bad)
xchg
test
xor
sub
adc
mov
mov
into
jg
(bad)
movnti
add
or
js
mov
dec
lods
cmp
sbb
daa
cmp
add
mov
mov
sub
xor
out
add
bound
and
adc
popf
cli
sar
inc
shl
jp
iret
inc
push
popa
mov
dec
mov
fbstp
out
ins
test
adc
mov
clc
pop
xchg
dec
sub
adc
add
xchg
or
mov
jno
ss
and
xor
xchg
(bad)
push
add
inc
adc
int3
dec
sbb
dec
cmp
sub
dec
cli
adc
cmp
jbe
stos
pop
push
mov
sar
shl
pop
or
mov
and
lock
out
push
or
jno
pop
repnz
adc
add
aam
sub
leave
(bad)
jge
sahf
push
rcr
push
mov
push
push
movs
fs
dec
xchg
push
xor
mov
sbb
daa
add
xchg
mov
mov
shr
in
push
jg
jnp
push
or
jmp
jge
retf
push
xchg
cmp
xchg
push
pop
es
(bad)
mov
push
cmc
fs
jae
inc
test
test
repnz
repnz
xor
push
mov
xchg
lods
imul
mov
jge
inc
rep
push
mov
adc
daa
in
call
std
jmp
add
pop
nop
cs
cwde
jns
sub
jno
call
stos
arpl
pop
(bad)
pushf
push
push
pushf
fwait
and
pop
sar
mov
dec
sub
dec
(bad)
ret
push
inc
sbb
pop
shl
addr16
push
leave
dec
imul
fsqrt
fnstenv
gs
out
jbe
and
leave
les
mov
mov
ss
outs
mov
pop
mov
dec
imul
jmp
rep
pop
mov
(bad)
jmp
faddp
not
inc
add
and
add
add
add
sub
add
add
mov
test
add
xor
add
add
data16
data16
cdq
add
cdq
add
int3
add
int3
add
inc
xor
inc
data16
xor
xor
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
int3
int3
(bad)
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
jo
sub
(bad)
mov
or
pusha
pop
stos
fsubr
mov
cs
iret
call
mov
dec
(bad)
jmp
in
sti
inc
jne
pop
jne
gs
bound
nop
xchg
xchg
xchg
xchg
xchg
ins
jae
mov
xchg
jns
or
mov
pushf
mov
cdq
mov
scas
fwait
mov
lods
cmps
js
test
inc
movs
inc
int3
inc
cmps
enter
mov
mov
xchg
fmul
pop
rol
rol
into
mov
(bad)
out
stos
out
shl
cwde
mov
jecxz
inc
add
stos
inc
push
push
sub
add
lds
xor
push
mov
mov
mov
ja
bound
jl
stos
movs
xchg
xchg
stos
aam
mov
jge
inc
jmp
dec
add
push
pop
retf
fwait
lods
pop
dec
dec
loope
mov
xor
xchg
cmps
mov
ret
sub
lahf
sbb
xchg
push
push
cdq
test
je
cmp
mov
pop
repz
fwait
aad
push
mov
or
xor
xchg
adc
aam
inc
push
outs
loopne
ja
mov
int3
aaa
or
ret
fldl2t
pop
lds
stos
pop
cmp
pushf
pop
mov
(bad)
lods
jp
out
pop
xor
mov
mov
jbe
imul
(bad)
movs
cmovbe
cwde
shl
jmp
loopne
data16
scas
pop
icebp
fcom
mov
dec
push
out
mov
repz
jae
pop
sar
enter
jne
fld
and
pop
inc
pop
leave
and
xor
push
je
cmc
sbb
(bad)
pop
xchg
mov
std
xchg
call
push
xlat
cdq
jle
jns
xchg
and
push
pop
xor
push
pslld
xchg
loope
test
add
pusha
add
adc
xchg
push
adc
movs
xchg
push
push
pop
in
push
dec
mov
pop
loopne
fild
or
loopne
out
jecxz
je
les
(bad)
ss
push
aam
fsubr
aaa
ror
push
sbb
add
dec
fldenv
gs
pop
xor
clc
mov
retf
mov
lds
fild
test
ret
daa
not
xor
imul
daa
mov
mov
lods
push
mov
movs
xchg
dec
xor
xchg
sub
mov
xor
cdq
bound
shr
mov
movs
mov
cmp
and
lods
dec
scas
dec
out
scas
(bad)
push
mov
xchg
mov
movs
scas
ja
call
stc
call
(bad)
cmps
mov
retf
enter
hlt
jne
push
mov
push
add
mov
idiv
jns
stos
push
mov
call
jmp
cmp
fwait
lds
and
push
enter
pushf
mov
(bad)
dec
jp
out
les
push
sbb
mov
mov
int
es
mov
pusha
out
aad
cmps
sub
in
cmp
xlat
cmp
dec
xor
out
jmp
pop
imul
push
jnp
ins
mov
ss
jnp
movs
fist
mov
xchg
jnp
adc
inc
push
out
and
scas
mov
retf
int
lods
scas
mov
jge
lahf
loopne
mov
leave
out
test
dec
xlat
cdq
or
aad
mov
adc
pop
mov
mov
jp
sub
mov
icebp
enter
iret
inc
addr16
sti
xchg
(bad)
sub
out
mov
test
cmc
push
jbe
sub
xchg
cwde
pop
scas
inc
out
int3
lods
jmp
loopne
or
mov
test
mov
add
loopne
cmp
sahf
arpl
in
xor
cs
stos
imul
scas
aad
push
das
shl
xlat
rcr
cmc
rol
scas
cli
xchg
pop
xchg
pop
inc
adc
pusha
add
lahf
lods
pop
movs
mov
push
push
jp
and
(bad)
xchg
xchg
xor
jmp
push
ja
jge
or
sbb
es
xchg
leave
cmps
jl
inc
push
out
mov
push
pop
(bad)
arpl
std
jns
add
sti
mov
pop
dec
jno
sub
repz
sar
push
xchg
mov
lods
push
sub
popa
jno
rcl
(bad)
call
(bad)
mov
aas
xor
js
dec
and
mov
inc
sbb
push
pop
inc
and
xchg
retf
mov
aad
mov
add
xor
test
repz
repz
movs
mov
mov
and
ret
and
pop
mov
mov
cs
and
jl
push
push
or
and
add
gs
push
adc
dec
call
jns
pop
popa
out
and
pop
in
cmp
jmp
mov
cmp
and
cli
data16
or
push
sub
pop
mov
mov
mov
hlt
xor
inc
add
pop
dec
leave
inc
xor
inc
sahf
and
xor
(bad)
sbb
xchg
fiadd
ins
mov
inc
mov
leave
test
dec
xlat
loope
and
jb
jge
loope
in
dec
ja
add
fs
mov
in
mov
or
mov
mov
and
mov
ret
adc
stos
xchg
jne
adc
push
inc
or
inc
das
in
hlt
cwde
add
int3
mov
mov
push
dec
and
adc
sbb
push
mov
mov
sbb
leave
pushf
imul
cmp
scas
test
dec
xchg
inc
in
ss
sub
fisubr
fs
std
(bad)
mov
stos
or
pop
inc
inc
add
xchg
and
(bad)
push
lods
int
pop
sbb
cmp
cmc
add
xor
adc
push
cwde
xchg
test
(bad)
cmp
out
dec
stos
imul
nop
mov
or
retf
adc
and
(bad)
xor
mov
idiv
aas
sbb
pop
jne
cmp
pop
pop
pop
add
fs
fmul
ret
sub
pop
cmc
dec
pushf
out
mov
stos
dec
les
mov
adc
adc
push
int3
cmp
mov
xor
inc
lods
std
xor
and
bound
xor
cmp
dec
aas
mov
jnp
fcomp
adc
(bad)
cmp
adc
pop
stos
dec
les
mov
mov
test
(bad)
adc
mov
loopne
push
mov
imul
mov
xor
mov
sahf
clc
nop
xor
fs
dec
inc
mov
xor
outs
das
sar
cli
mov
and
pop
jecxz
xor
mov
xor
add
pop
ror
lds
add
cmp
jmp
mov
in
sbb
mov
nop
nop
pop
sub
retf
push
xor
push
push
stos
mov
and
add
(bad)
hlt
xchg
cmp
add
dec
add
test
mov
xchg
cwde
scas
add
aam
push
mov
mov
push
movs
rcl
rcl
or
sub
(bad)
cdq
out
mov
(bad)
leave
arpl
mov
jne
mov
adc
adc
(bad)
jmp
hlt
xchg
aad
inc
add
aaa
xchg
cs
in
add
mov
sub
and
push
ror
pop
mov
jne
mov
mov
add
int
add
jp
in
add
test
xor
or
pushf
add
push
repz
adc
dec
add
rol
jmp
mov
ss
cmp
stc
xchg
add
popf
lods
shr
jae
add
ret
jb
ins
into
adc
add
daa
aaa
lods
into
xchg
js
and
push
popf
jmp
fcmovne
data16
xor
push
fs
bound
xor
cmp
mov
iret
mov
shl
neg
jmp
xlat
adc
in
sub
or
jae
ds
jb
sahf
add
lock
inc
cs
loop
fistp
mov
or
iret
clc
lds
std
into
out
repnz
and
mov
in
jbe
jne
mov
fidiv
adc
sub
sbb
sbb
sahf
cmp
sbb
inc
lock
pop
mov
test
pop
jmp
mov
std
int
mov
pop
pop
loope
pop
dec
test
push
lods
add
leave
sti
ja
mov
fwait
cmp
daa
or
loope
mov
cmp
jne
pop
aas
cld
or
rol
push
add
inc
add
inc
pusha
fst
sbb
jne
mov
les
sbb
add
push
cli
xchg
inc
or
jp
and
xchg
arpl
test
jb
xchg
ins
cs
cmp
sbb
sbb
pop
push
icebp
jle
add
adc
fs
retf
xchg
jo
xchg
pop
pop
inc
jl
pop
test
jo
and
add
adc
out
push
cmps
js
cmp
test
adc
push
clc
add
xlat
data16
cmc
jns
ss
jle
pop
fild
icebp
inc
das
cmps
pop
outs
push
adc
bound
aam
adc
push
cmp
sbb
xchg
cmps
sub
jae
jne
push
js
sub
js
adc
daa
nop
mov
pop
cmps
push
jne
(bad)
jg
cmps
add
test
add
add
jns
je
inc
pop
push
psadbw
add
mov
xchg
cmp
xchg
xor
jns
and
leave
jbe
sub
sub
in
mov
jge
inc
test
mov
or
mov
push
push
idiv
test
mov
mov
rol
push
adc
sub
dec
ja
pop
loop
push
test
inc
and
push
dec
in
aaa
sub
div
and
es
xchg
test
dec
pop
push
jb
push
push
cdq
mov
jb
test
sbb
aad
lea
sbb
add
imul
ret
clc
and
push
sbb
hlt
popa
mov
push
test
jnp
js
mov
xor
and
retf
mov
mov
test
pushf
dec
xchg
fisttp
add
push
adc
mov
xchg
dec
sub
daa
sub
xchg
out
movs
push
dec
mov
outs
bound
ret
idiv
xor
cmp
sub
(bad)
rcl
xchg
ins
leavew
sub
xor
xchg
jl
out
inc
pop
xchg
cmp
xchg
push
sbb
pop
or
pop
xchg
cmp
xchg
je
nop
and
and
push
sti
xchg
xor
xchg
ret
loop
inc
add
cmp
hlt
ret
xor
hlt
push
cmp
jge
xchg
fcmove
jg
pop
(bad)
(bad)
out
jb
test
call
dec
mov
jbe
push
or
popa
aaa
inc
dec
lods
or
test
pop
jmp
cmp
push
cdq
jmp
push
jne
and
push
shl
inc
pop
div
jns
sbb
nop
js
daa
add
aad
mov
inc
cwde
fs
sbb
add
inc
xchg
mov
scas
aad
dec
inc
pop
mov
das
jbe
sbb
pop
xchg
mov
outs
inc
neg
sbb
sbb
rcl
inc
mov
add
jge
push
sub
jp
lds
ins
pop
cdq
jp
xchg
sti
push
xor
push
pop
add
pop
adc
popf
cdq
js
adc
sahf
sbb
xchg
(bad)
push
mov
mov
push
jb
test
and
dec
(bad)
and
fwait
pop
cdq
xchg
das
and
jae
cmp
jbe
and
sub
or
test
gs
imul
jmp
jl
nop
call
popf
push
arpl
mov
movs
cwde
lods
fcomp
push
jae
inc
movs
and
xchg
leave
jns
xchg
adc
shl
ror
cmps
inc
enter
mov
cmp
test
outs
jp
adc
add
enter
xchg
push
add
push
push
adc
inc
mov
jecxz
ficom
pop
add
pushf
mov
sahf
cmp
jp
fucomip
test
imul
xchg
and
adc
mov
movs
xor
xor
mov
(bad)
jmp
jg
push
adc
or
scas
pop
mov
mov
adc
test
dec
movs
das
stos
dec
jmp
inc
and
lahf
and
arpl
not
sbb
pop
fistp
dec
push
jnp
mov
jne
ror
add
mov
shl
lea
lods
xchg
call
movs
int
xor
stos
aaa
cmps
daa
sub
(bad)
mov
loopne
imul
out
inc
mov
dec
stos
aaa
dec
push
push
daa
mov
fldcw
fwait
jp
sbb
mov
pop
add
xchg
call
retf
call
mov
ins
(bad)
test
sub
cdq
mov
inc
push
outs
loope
mov
jae
cmc
push
lea
cmp
jmp
jl
jmp
mov
retf
mov
call
arpl
pop
cli
arpl
shl
cdq
mov
jb
dec
ss
cdq
xchg
pop
dec
ja
inc
pushf
arpl
jo
jmp
jle
mov
mov
ret
push
nop
cmp
adc
mov
cmp
aad
pop
sub
enter
push
cld
and
sti
adc
mov
retf
mov
inc
aas
adc
xor
outs
retf
mov
(bad)
cli
mov
mov
xor
lea
inc
adc
mov
sahf
xor
mov
xchg
adc
jp
jae
ffreep
cwde
fdiv
sub
mov
xchg
nop
push
neg
mov
jmp
inc
or
and
jbe
push
mov
mov
imul
jle
or
sub
sti
mov
push
mov
rol
adc
cmp
fwait
test
and
xchg
and
popf
xchg
jp
pop
pop
add
inc
or
mov
idiv
sahf
retf
sahf
pop
push
add
imul
sub
mov
mov
sub
addr16
mov
pop
ret
lds
cmps
adc
add
rcr
cmp
xor
sub
mov
out
push
outs
pushf
xor
test
and
mov
add
sti
cmp
cdq
mov
inc
dec
xchg
arpl
add
pop
mov
ret
add
fdivr
mov
movups
daa
adc
or
mov
or
ret
push
bound
mov
test
movs
imul
mov
imul
mov
dec
mov
pop
lea
jp
retf
mov
aam
sbb
jns
stos
sbb
shr
mov
stos
and
mov
pop
xchg
daa
mov
test
out
adc
jo
retf
push
pushf
(bad)
push
cmp
ret
or
mov
jcxz
inc
and
fmul
xchg
movs
(bad)
sbb
ja
cmp
inc
pushf
add
dec
cld
add
inc
push
or
mov
pusha
push
in
scas
cmps
xchg
inc
inc
or
in
and
(bad)
lea
xchg
ins
jnp
jecxz
movs
sbb
int
jae
sub
jne
test
(bad)
mov
jb
les
rol
inc
mov
fwait
iret
mov
adc
bound
sar
dec
pushf
sub
jne
or
je
pusha
jne
mov
push
int
dec
js
xlat
xchg
xchg
and
cmp
scas
and
ret
lods
push
fcmove
(bad)
mov
jbe
jl
cli
clc
mov
in
inc
call
into
push
mov
shl
test
sar
addr16
mov
std
es
leave
push
repz
push
mov
ja
ret
shl
int3
xchg
bound
and
mov
cwde
and
outs
lea
gs
aaa
mov
ret
push
mov
mul
cmp
or
lahf
mov
cdq
cld
(bad)
sub
cmp
aad
push
js
retf
ret
mov
lods
mov
cli
sub
daa
out
and
push
mov
sysret
xchg
inc
stc
rol
pop
lds
pusha
movs
fst
lds
xor
sub
sbb
mov
fdivr
rcl
jo
pop
dec
hlt
mov
jae
jge
mov
sahf
jge
or
or
add
push
jb
or
cmp
retf
ror
cmps
mov
sub
shr
or
rcr
cmps
pop
sub
rol
lea
ror
aad
stc
pop
clc
(bad)
into
sbb
jb
loope
in
shr
xchg
push
stos
mov
push
enter
sub
psubsw
sbb
loop
scas
imul
(bad)
push
sar
mov
fld
sahf
mov
icebp
xor
dec
fld
aam
sbb
mov
lods
mov
mov
sub
in
aad
jmp
out
adc
push
mov
imul
adc
pop
mov
out
out
fild
xor
arpl
fisub
out
leave
fcmovu
lods
gs
test
inc
mov
and
mov
mov
jne
dec
mov
div
ins
lods
cld
retf
jmp
pop
jb
movs
mov
jge
cmp
repnz
int3
jno
ror
outs
pushf
neg
pop
lods
inc
(bad)
cmp
jo
ja
cs
shl
adc
cdq
sbb
push
jmp
mov
pusha
adc
or
jecxz
out
fidivr
cmp
and
cmp
pushf
cwde
test
pop
xor
loop
mov
sahf
push
in
xlat
rol
out
xor
mov
add
out
push
jmp
jl
imul
or
in
push
mov
mov
dec
dec
pusha
or
push
pop
out
fcmovnu
xchg
in
cmp
enter
hlt
mov
mov
mov
xchg
mov
push
or
in
dec
fsin
jno
test
movs
and
mov
hlt
mov
es
in
add
lock
test
int3
cmps
mov
cmp
ds
movs
push
sbb
cmp
call
(bad)
stos
xchg
outs
sub
fcom
popf
or
int3
dec
fistp
mov
pop
imul
mov
loop
movs
test
div
enter
cld
mov
dec
test
pop
clc
mov
ja
mov
and
pop
movs
mov
push
(bad)
mov
mov
in
gs
mov
inc
(bad)
movs
(bad)
shl
pop
or
(bad)
mov
out
ret
pusha
rol
jb
in
aas
retf
rol
repnz
lea
ins
into
push
cs
add
xchg
add
push
lahf
in
sahf
jnp
stos
popf
shr
ret
cld
sub
cwde
fldenv
mov
sbb
mov
sti
fdiv
gs
sti
mov
test
jp
(bad)
stos
mov
dec
aam
retf
xchg
arpl
dec
imul
mov
mov
loopne
push
and
mov
cmp
adc
dec
test
sub
add
pop
sub
push
les
scas
int
rcr
xchg
iret
jmp
into
jecxz
sti
cld
pop
out
dec
jo
dec
into
int3
lock
dec
mov
retf
stos
dec
or
or
add
ret
and
jne
mov
cmc
adc
push
aad
jecxz
ret
mov
retf
push
sub
cdq
imul
int3
stc
jns
jmp
int
rcr
nop
dec
out
dec
iret
outs
out
fwait
jnp
dec
sbb
ficomp
jb
lods
or
jb
dec
or
or
pop
bound
and
arpl
adc
lods
push
sbb
in
cmp
push
xor
fnstenv
jns
movs
cmp
mov
repz
pop
and
sar
xchg
push
dec
ss
nop
test
(bad)
fs
lods
adc
pop
inc
and
adc
les
xchg
add
or
add
ja
rcl
push
scas
pop
fs
mov
inc
cmp
fldcw
cmp
jmp
xchg
mov
leave
aam
mov
add
push
cmps
mov
aaa
or
and
ficom
ins
push
das
pop
bnd
xchg
data16
sbb
sub
mov
mov
mov
mov
cmp
xchg
adc
adc
cld
test
cmc
inc
loopne
mov
dec
shl
bound
adc
out
xchg
and
cli
and
cmp
xchg
cmps
data16
mov
icebp
jl
cmp
pop
or
in
or
add
mov
dec
js
mov
mov
mov
or
das
rcl
clc
shl
inc
outs
dec
xchg
mov
push
xchg
scas
nop
mov
sbb
out
int3
jmp
sbb
push
test
adc
mov
pop
and
or
mov
ret
ja
ror
ss
out
mov
inc
(bad)
jmp
imul
sub
rol
jmp
fucomip
or
das
add
movs
or
sub
jae
push
push
xchg
adc
popa
mov
data16
xor
jae
cmp
fwait
xor
pop
std
push
int
rcl
cmps
sbb
aam
or
add
pop
push
dec
rcl
mov
xchg
dec
retf
cmps
cwde
inc
das
loope
adc
(bad)
mov
lods
(bad)
cmp
rol
stos
scas
sbb
test
shl
and
sub
arpl
pop
lods
lods
mov
mov
mov
lods
cmc
xchg
dec
jno
dec
pop
push
stos
int3
jp
mov
lods
imul
test
mov
inc
stos
jle
push
outs
push
jo
jbe
sub
mov
pop
mov
mov
mov
hlt
js
inc
stos
add
mov
fiadd
inc
neg
adc
outs
pop
sub
repnz
retf
test
mov
stos
or
lea
ret
mov
es
outs
sub
shr
xor
jns
dec
in
pop
mov
dec
cmp
adc
js
pushw
mov
sbb
retf
xchg
mov
fs
call
leave
enter
mov
stos
pop
inc
es
cmp
in
or
mov
addr16
(bad)
popf
adc
scas
or
out
cmp
mov
(bad)
aam
test
add
mov
mov
stc
loopne
ins
shr
arpl
(bad)
imul
push
paddq
cld
repnz
mov
or
push
ja
and
daa
push
cmp
cmp
jle
pushw
xchg
retf
popa
dec
cmp
repnz
xor
lods
scas
hlt
xchg
repz
add
and
fist
pop
jb
test
jecxz
enter
xchg
pop
pop
or
ror
mov
rol
or
inc
pop
mov
shl
fs
mov
(bad)
ins
mov
daa
mov
and
add
jb
movs
sbb
dec
and
adc
daa
test
ds
sub
arpl
aam
pusha
sbb
mov
and
mov
mov
leave
push
cmps
xchg
lahf
or
add
add
cmp
xchg
test
push
push
inc
push
adc
loop
sbb
inc
loop
movs
shl
xchg
mov
(bad)
jecxz
aam
stos
cmc
stos
mov
icebp
add
add
mov
cwde
(bad)
cmps
or
push
adc
add
icebp
pop
imul
repnz
pusha
mov
ss
xor
dec
rol
stc
icebp
or
cmp
sub
add
mov
sub
cmps
and
out
push
nop
aad
int3
add
jl
mov
mov
push
mov
movs
rcl
adc
pop
pop
push
jp
adc
lods
add
adc
and
retf
or
xor
repz
xor
xchg
mov
aam
or
xor
mov
adc
out
push
xchg
or
xchg
or
fmul
(bad)
cdq
push
adc
or
jbe
jp
add
sub
xchg
add
loopne
xor
push
mov
adc
lods
and
ins
fisttp
mov
mov
sbb
xor
bound
inc
add
rol
push
je
inc
adc
mov
(bad)
dec
dec
fst
mov
fmul
fs
int
sbb
das
pushf
repz
lds
xchg
idiv
adc
lds
mov
nop
push
sub
add
loopne
inc
lods
mov
or
mov
aaa
xchg
rol
or
pop
fs
and
push
sub
inc
scas
(bad)
pusha
jmp
cmp
or
test
ret
inc
mov
and
cmp
rol
pop
sbb
aad
sahf
add
xchg
repnz
push
jns
int3
shl
jo
retf
mov
sub
ret
sub
pop
sbb
cdq
rcl
int3
add
mov
inc
push
mov
sub
xor
sub
or
out
mov
push
test
mov
or
pop
je
arpl
xor
xchg
test
sub
mov
xor
jns
test
and
out
lea
sbb
push
adc
mov
add
jmp
pop
xor
push
push
dec
dec
mov
sbb
sub
daa
pusha
push
in
dec
xchg
push
movs
jp
rol
retf
shl
loopne
and
pop
xlat
xor
scas
adc
jge
repz
enter
cmp
mov
mov
rcr
adc
xchg
je
sub
bound
fistp
xor
adc
jbe
mov
inc
or
adc
sbb
mov
hlt
mov
mov
(bad)
mov
push
sti
add
mov
sahf
aaa
daa
add
inc
into
cmp
repnz
and
mov
cmps
ins
jmp
fld
mov
inc
dec
in
mov
pop
xor
retf
xor
mov
ret
jmp
jbe
push
addr16
xchg
dec
jge
arpl
sub
les
clc
enter
xor
pop
lods
pop
xlat
jle
pop
test
test
sbb
jnp
sbb
je
xor
cmp
cdq
addr16
or
mov
imul
mov
not
xlat
test
add
cmp
pop
sbb
pop
jmp
mov
jae
sub
(bad)
adc
xchg
ins
arpl
or
xchg
jne
fmulp
in
jno
repz
fld
es
loope
add
(bad)
cmp
ret
or
and
int3
movs
fdiv
xchg
or
std
int3
push
or
jns
push
(bad)
sbb
sub
call
hlt
xlat
mov
ins
test
ficomp
sbb
adc
ins
adc
stos
in
(bad)
xor
jns
push
hlt
add
xchg
lds
jno
mov
cwde
sub
cvtps2pi
cmp
mov
das
call
push
imul
(bad)
fild
pop
push
push
shl
dec
or
fst
pop
pop
or
shl
mov
xchg
bound
jbe
call
mov
xchg
fistp
and
adc
adc
push
xchg
push
test
repnz
inc
xchg
or
int3
out
and
sub
push
enter
out
xchg
cmp
pop
xor
adc
stc
push
push
adc
cmp
mov
dec
into
dec
xchg
add
dec
push
dec
shl
shr
out
cmp
sub
je
mov
dec
das
and
inc
add
add
add
inc
or
dec
dec
in
ss
sub
xlat
movs
out
jecxz
bound
in
sbb
cmp
cli
call
cwde
int
jb
fs
push
out
push
add
adc
test
mov
out
or
inc
cwde
jecxz
adc
and
inc
repnz
out
mov
(bad)
ror
popa
cmp
jmp
inc
pop
jo
scas
sub
sbb
call
movq
push
repnz
je
mov
loopne
ret
(bad)
out
outs
xchg
lock
push
sahf
xchg
add
lock
xchg
or
repnz
sub
(bad)
fadd
add
or
imul
repnz
jo
test
cmp
and
bnd
sbb
jl
cmovo
hlt
sbb
out
loope
out
nop
loop
mov
arpl
call
jmp
loop
movs
cmps
lods
jmp
sub
cmps
cs
mov
fdivp
ret
push
dec
cs
pmulhw
adc
or
and
retf
out
lock
pop
stos
repz
into
hlt
retf
ins
push
pusha
enter
mov
arpl
xor
add
dec
inc
add
xor
loop
inc
rol
and
sub
and
bound
xor
mov
das
mov
data16
mov
and
in
movs
xchg
(bad)
in
mov
nop
mov
push
adc
xor
enter
repz
xchg
jl
and
leave
xchg
mov
mov
es
repnz
jb
es
repnz
arpl
push
call
out
fisub
je
clc
aam
cmps
(bad)
mov
test
sbb
ss
inc
inc
inc
mov
pusha
pop
dec
sub
mov
test
xchg
bound
inc
(bad)
dec
fdiv
xor
and
addr16
xor
add
hlt
or
popa
ror
nop
shl
jo
sbb
inc
and
shl
mov
hlt
and
pop
outs
xchg
call
les
je
test
lds
mov
jle
pop
and
popf
jp
inc
add
movs
(bad)
and
push
push
cdq
pop
push
out
ins
repnz
sti
in
out
call
(bad)
mov
push
inc
or
and
or
unpcklps
xabort
cmp
addr16
sahf
sub
or
sbb
jecxz
xor
ins
iret
mul
pop
repnz
int3
xor
adc
inc
cmp
xor
jb
or
ss
rcl
mov
outs
fmulp
ret
xchg
es
sub
and
outs
sar
jns
and
mov
pusha
xchg
and
xchg
mov
sysenter
adc
push
lds
push
adc
inc
xor
mov
pop
and
mov
fcmovnb
push
xor
inc
xor
cmp
mov
xor
pop
and
sahf
sub
les
push
cmps
enter
ins
inc
adc
xor
mov
(bad)
aas
sub
mov
add
sbb
or
mov
test
jp
inc
dec
mov
add
pusha
out
bound
fnstsw
stos
mov
in
ror
inc
data16
sub
mov
adc
scas
mov
shr
mov
pop
test
sbb
pusha
mov
xchg
jo
add
pusha
sub
cmp
int3
mov
adc
sbb
sti
les
mov
pop
cmp
dec
mov
inc
jne
mov
retf
and
dec
or
mov
mov
and
loopne
xor
add
push
xchg
shr
sub
adc
add
call
adc
sbb
add
mov
xchg
icebp
das
sbb
sub
out
hlt
popa
mov
ror
mov
dec
adc
mov
enter
pop
cmps
mov
xchg
sub
inc
lods
pop
inc
push
or
sub
scas
dec
mov
dec
dec
xor
retf
in
jp
scas
sub
ficom
scas
loop
(bad)
sub
or
dec
mov
and
xor
dec
ins
loope
gs
dec
aaa
pop
mov
or
jmp
and
cmp
adc
cs
dec
in
loop
mov
shl
sub
sub
mov
mov
pop
stos
aam
sub
lea
add
cmp
xlat
fsubr
ret
stos
jne
adc
out
enter
sub
dec
or
shl
jae
je
int3
sahf
xor
inc
pop
rol
and
popa
pop
shr
jle
dec
xchg
(bad)
aam
fs
jmp
arpl
inc
or
pop
sti
push
les
lock
clc
shr
mov
retf
xor
ficom
sbb
scas
dec
icebp
add
push
int
test
mov
adc
add
shl
call
enter
mov
push
cli
adc
loope
lock
push
mov
rcl
cdq
push
push
jbe
test
mov
mov
icebp
in
retf
rol
jno
jae
inc
push
cmps
add
add
push
imul
xchg
and
sbb
jno
push
arpl
add
dec
fist
ins
lock
inc
push
mov
out
sub
sub
jae
scas
jle
ins
pop
jecxz
cmp
aaa
pop
adc
jae
sub
adc
mov
add
add
dec
adc
div
lods
jno
push
jl
ja
out
idiv
jno
xor
push
aad
jmp
cmp
cmps
xchg
sub
mov
retf
mov
mov
jno
aas
out
jbe
sar
push
fmul
and
daa
sub
jno
arpl
adc
jbe
ja
push
outs
icebp
and
sbb
cmp
add
dec
and
mov
push
push
icebp
jle
aad
xor
jge
je
xchg
inc
push
fsubr
lods
dec
and
cmps
hlt
pop
dec
xchg
cli
jp
dec
ret
push
outs
sub
jae
cdq
mov
xchg
sub
push
repnz
int3
push
mov
xchg
push
add
dec
jl
push
jbe
ror
sbb
xchg
and
or
vmread
jle
sbb
jecxz
mov
sar
mov
aam
or
inc
push
inc
div
mov
xchg
lea
mov
mov
jns
xchg
xor
jl
cwde
jl
lods
imul
cs
aaa
aad
aaa
jne
lea
xor
(bad)
or
stc
sub
push
mov
pop
into
cmps
call
ror
cmp
xor
or
or
(bad)
pop
fwait
icebp
les
pop
pop
(bad)
fsubr
rol
stos
adc
je
push
mov
pop
test
movs
repz
cli
pop
inc
ins
mul
test
inc
xor
inc
int
pop
pop
je
fisttp
je
inc
(bad)
mov
sbb
jg
add
pop
push
push
nop
pop
jns
jae
sub
outs
mov
push
push
sub
mov
push
mov
enter
mov
jecxz
pop
cmp
cmp
rol
or
in
dec
or
fcom
sbb
dec
ins
sar
and
add
das
enter
test
add
jmp
int
bound
push
sbb
push
pop
or
(bad)
(bad)
fidivr
rcr
mov
xchg
lods
in
mov
dec
scas
cs
fwait
sub
(bad)
imul
inc
mov
inc
data16
test
dec
out
mov
and
sbb
enter
sbb
mov
mov
xchg
pop
and
mov
test
xchg
dec
cmps
inc
outs
imul
or
call
jne
fidiv
mov
nop
test
xor
int
test
jbe
xchg
pop
sbb
mov
aaa
cmps
(bad)
addr16
pop
std
adc
push
add
retf
adc
ins
add
call
mov
mov
push
jnp
adc
(bad)
into
jae
xchg
scas
add
sar
movs
imul
fild
cwde
mov
inc
dec
lods
push
fdivr
cmps
nop
jb
or
dec
fnstsw
shl
mov
xchg
data16
adc
inc
jno
retf
jmp
daa
push
repnz
mov
mov
mov
retf
mov
shl
stos
jl
inc
out
mov
lods
push
or
add
pop
xor
in
push
inc
stc
or
out
pop
cmps
cmp
sti
or
daa
and
mov
jnp
iret
idiv
jno
shr
inc
int3
out
pop
cmps
mov
rol
mov
and
push
aaa
mov
sub
cmp
add
adc
jmp
adc
int3
int
int3
jae
(bad)
addr16
dec
mov
cmp
movs
pushf
aad
push
xchg
(bad)
ds
mov
into
stc
in
and
scas
sti
dec
xor
pop
jecxz
jns
loop
push
mov
sbb
imul
mov
and
mov
push
retf
rol
xchg
mov
pushf
sub
pop
int3
cld
test
jge
popf
outs
test
ret
sbb
retf
out
mov
xchg
leave
sbb
sub
dec
sbb
pop
test
in
call
dec
jns
mov
mov
sbb
cmp
push
loope
fcmovne
mov
inc
adc
(bad)
jp
and
fsub
mov
fwait
scas
push
xor
int3
cmp
fabs
sbb
stc
fisub
pop
pusha
ins
lods
and
pop
pushf
(bad)
sti
jae
test
call
cmp
mov
dec
arpl
xor
ja
nop
out
push
mov
pop
and
(bad)
cld
lods
xor
cmp
sub
inc
fcmovnb
(bad)
mov
jle
in
fdivr
mov
or
in
sbb
mov
and
ffree
dec
mov
mov
mov
xor
jg
jnp
std
call
dec
mov
jno
dec
lahf
loope
mov
imul
mul
xor
in
cmp
mov
test
push
test
jbe
or
adc
lahf
cmp
jecxz
pop
adc
lea
(bad)
into
ret
dec
repz
pop
inc
and
dec
cwde
das
icebp
js
cmps
pushf
and
pusha
fisttp
pop
mov
push
jmp
(bad)
sti
(bad)
cld
ja
mov
and
add
cwde
pop
mov
fucomip
mov
sbb
push
or
add
test
xor
add
sbb
fldln2
and
outs
xlat
call
imul
xor
std
dec
mov
cld
stc
add
or
push
push
and
sbb
es
inc
dec
push
add
push
inc
pop
push
pop
es
push
jbe
push
or
fiadd
stos
(bad)
sbb
or
cmc
fldenv
sbb
sbb
adc
mov
dec
test
popa
xchg
gs
cmp
or
test
int
(bad)
push
add
rol
mov
mov
or
jle
xchg
into
lahf
mov
das
and
retf
and
xchg
ret
out
arpl
jno
mov
aam
xor
mov
loope
out
mov
pop
mov
cmps
adc
xchg
mov
(bad)
movs
out
jmp
into
js
push
pop
shl
scas
les
and
sub
dec
and
inc
xor
cmps
popa
mov
out
inc
lods
ins
mov
and
xchg
adc
or
or
loope
imul
retf
enter
xchg
sbb
jecxz
and
adc
or
dec
and
mov
cmp
push
xchg
sub
sub
or
sub
cmp
into
jnp
jge
cmp
(bad)
inc
and
mov
add
dec
imul
dec
mov
dec
fwait
enter
xchg
dec
adc
cmp
lea
dec
ins
movs
hlt
retf
gs
or
xor
ret
div
mov
or
push
mov
(bad)
mov
fnsave
push
jge
loopne
popf
ins
jbe
pop
push
jns
fcom
inc
xchg
adc
or
ins
or
push
and
and
in
jbe
jl
leave
inc
pop
pop
cmp
ja
pop
push
or
movs
adc
movs
xchg
test
inc
and
fdiv
gs
(bad)
xor
mov
jecxz
stc
mov
sahf
outs
mul
cmc
xchg
fwait
jge
frstor
aam
xor
xor
sbb
push
cmp
sbb
sub
fnstenv
mov
xchg
mov
push
xchg
xchg
in
and
mov
enter
push
scas
inc
es
jno
pop
sbb
xchg
push
or
sbb
jne
repnz
cmp
mov
pop
pop
call
mov
xchg
cwde
in
and
inc
stos
xchg
in
add
push
push
add
add
cdq
and
mov
mov
and
stos
popf
test
repnz
fdiv
and
dec
mov
mov
sbb
data16
push
sub
push
test
sbb
fisubr
and
mov
mov
sbb
pushf
outs
lods
or
sub
popa
out
enter
jb
nop
mov
sahf
in
cdq
xchg
jno
rol
push
cmp
jle
push
pop
repz
(bad)
fcmovbe
mov
aas
test
call
lods
int3
(bad)
popf
dec
repz
loope
es
imul
bound
(bad)
mov
mov
or
mov
or
lds
stc
add
add
add
sub
add
add
add
xor
add
add
data16
data16
cdq
add
cdq
add
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
jo
sub
(bad)
mov
call
scas
shr
loopne
js
cs
iret
call
dec
mov
stos
cmp
(bad)
ficomp
in
sti
(bad)
jg
dec
xor
xchg
ins
imul
bound
test
lahf
inc
jl
xor
and
fwait
mov
xchg
mov
mov
pop
scas
mov
cmps
jns
mov
push
shr
jo
gs
fcomp
fidiv
loopne
loop
mov
int
into
rcr
xlat
(bad)
pop
idiv
cmc
mov
lock
repnz
or
in
cdq
inc
jno
add
inc
push
jecxz
fistp
enter
inc
mov
(bad)
pusha
and
int3
and
xchg
mov
xor
lea
and
out
push
enter
jle
enter
sbb
hlt
inc
pusha
les
and
mov
jge
icebp
cdq
dec
test
les
xchg
dec
mov
mov
ret
jne
mov
dec
dec
push
jae
jb
xchg
test
ss
lock
sti
xor
arpl
icebp
mov
ja
cmp
test
(bad)
xor
dec
fbld
retf
push
lahf
fdivr
fdiv
mov
push
jmp
stos
je
nop
pop
mov
out
or
lock
popf
movs
and
into
and
lods
dec
mov
xchg
xor
pop
and
sbb
shr
lods
cdq
int3
out
lds
jl
call
pop
pop
ss
loop
pop
jno
mov
jno
lahf
stos
mov
shl
inc
test
or
sti
xor
add
outs
add
cmp
dec
and
and
inc
jecxz
inc
mov
sbb
push
mov
jnp
sub
call
cmp
xchg
loopne
add
add
div
push
test
pusha
xor
mov
addr16
jp
pop
add
in
test
inc
push
pop
and
sbb
in
add
add
push
push
cdq
in
push
push
mov
xchg
add
and
pusha
popa
inc
ins
out
xchg
adc
push
xchg
xchg
lods
hlt
push
xchg
push
pop
data16
ins
xchg
pop
sbb
push
neg
in
sub
sbb
in
mov
sbb
cwde
cs
sub
pop
and
leave
pop
aad
ins
(bad)
repnz
das
mov
gs
xchg
push
sbb
movs
pop
ss
jmp
add
add
scas
mov
push
lahf
push
inc
push
xlat
out
bound
addr16
mov
jmp
fsub
enter
push
cmp
mov
jp
xchg
(bad)
pop
cmps
jmp
mov
mov
mov
inc
ror
pop
test
sbb
sbb
mov
jae
mov
jmp
cwde
mov
sub
xchg
(bad)
pop
jno
ret
in
(bad)
mov
enter
imul
push
daa
imul
je
xor
mov
mov
xchg
(bad)
into
sbb
sub
pop
jbe
cmps
ret
pop
aaa
cmp
imul
ins
mov
mov
lods
xlat
mov
push
xchg
cdq
xchg
cmp
mov
sti
jo
aas
(bad)
jns
lods
adc
mov
xchg
call
mov
jmp
jp
stos
dec
mov
mov
in
mov
cmp
repz
repnz
(bad)
(bad)
ret
fstp
inc
jnp
fimul
int
loopne
xor
cmps
imul
inc
ds
xor
aaa
and
cmp
push
mov
cmps
scas
or
jo
repnz
pop
stc
push
xor
mov
mov
pop
aad
mov
xchg
dec
mov
cdq
js
mov
xchg
jl
mov
jno
int3
xlat
outs
jg
inc
push
pop
ja
jp
jge
lods
sub
xor
ror
mov
and
jnp
(bad)
or
ins
or
in
xlat
mov
ror
add
loopne
in
lods
push
fwait
mov
ror
or
inc
push
or
mov
imul
or
test
add
sahf
add
rol
xchg
lock
inc
adc
xchg
mov
and
sbb
mov
sahf
adc
xor
pop
lods
or
sbb
pop
push
int
or
jne
js
mov
xchg
shl
sbb
or
ror
rol
adc
loop
pop
jns
inc
xor
pop
mov
sub
inc
mov
popa
movs
add
inc
cld
inc
push
jae
loope
and
fiadd
mov
js
mov
and
fldcw
inc
fnstenv
add
pop
jns
mov
(bad)
std
jp
dec
(bad)
mov
and
xchg
sub
add
loopne
jmp
sbb
push
stos
and
bound
mov
xor
jg
xchg
sahf
add
or
cmc
pop
push
and
rol
dec
adc
xchg
sub
fimul
into
or
int3
mov
rcl
ret
aaa
pop
dec
and
jno
add
add
xor
icebp
and
repz
add
add
push
fst
cwd
test
es
dec
and
ds
(bad)
sub
jge
adc
cmp
shr
cmp
add
pop
xor
jne
mov
shl
test
in
mov
shl
movs
sub
data16
push
bound
push
popa
fisubr
jl
and
adc
xor
fimul
scas
inc
sbb
jmp
mov
add
push
shl
pusha
pop
movs
sub
stos
imul
stos
inc
jno
and
add
add
dec
dec
cmps
mov
push
mov
cmp
shl
dec
dec
fwait
push
leave
and
jecxz
out
daa
and
sbb
cli
mov
popf
loop
adc
(bad)
div
add
inc
add
sbb
xor
mov
addr16
sbb
ss
ret
xor
xchg
jbe
inc
retf
mov
rcr
mov
sti
call
push
shl
clc
mov
sbb
ins
ins
arpl
jmp
inc
mov
mov
es
push
pop
mov
sub
enter
sbb
mov
cmp
dec
imul
loopne
leave
ss
(bad)
in
stos
mov
bound
nop
pop
sub
outs
xchg
loop
mov
ror
iret
mul
mov
ret
or
movs
dec
loopne
adc
aam
pop
sub
outs
sub
aad
add
shr
test
mov
push
pop
ss
aaa
sub
adc
(bad)
das
add
pop
pop
sub
push
fisubr
in
xor
test
out
data16
lea
mov
in
or
push
sbb
lods
sbb
jp
and
mov
push
rol
xor
out
push
xlat
xchg
pop
add
cmp
pop
xor
inc
scas
(bad)
les
outs
out
pop
cdq
and
jo
xor
(bad)
pop
ss
dec
jge
push
out
rcl
and
mov
xor
mov
(bad)
call
pusha
or
push
mov
in
retf
push
fcomp
ss
dec
aam
js
stos
jmp
inc
loopne
adc
or
mov
nop
int3
adc
bound
aaa
cmp
add
or
gs
lea
dec
scas
div
pop
rol
test
sub
mov
sub
shr
sub
out
mov
ins
int3
mov
addr16
jno
mov
push
mov
inc
and
push
sbb
shl
call
call
repz
add
mov
xlat
(bad)
clc
xchg
repz
sub
aaa
mov
and
aam
mov
mov
mov
adc
stc
jl
popa
push
inc
std
test
fimul
and
neg
pop
ror
xor
jae
call
or
mov
jp
cld
add
jae
(bad)
fist
cmp
cdq
push
sbb
test
out
aad
es
sbb
inc
cmp
into
inc
inc
mov
sbb
jle
test
in
push
mov
mov
sbb
les
arpl
cdq
mov
lahf
jmp
mul
ss
in
pop
sahf
xchg
fcom
arpl
fdivr
loop
(bad)
xchg
ja
xor
icebp
push
adc
add
push
mov
mov
mov
add
mov
rcr
pop
fdiv
mov
ror
cmc
cmp
lea
test
pop
sbb
pushf
js
shl
cmps
push
idiv
stos
mov
data16
inc
dec
pop
xlat
pop
pop
add
das
cmp
sahf
mul
cmps
jbe
push
adc
jp
xchg
outs
mov
jns
push
jp
push
add
pop
sub
jns
push
and
scas
jb
dec
not
jae
je
sbb
(bad)
inc
adc
xlat
popa
mov
into
adc
pushf
xchg
jne
and
sub
add
push
or
fist
pop
loopne
loop
jbe
cmp
inc
adc
add
lock
lock
out
outs
cmps
jge
rol
xchg
add
add
push
pop
and
addr16
inc
(bad)
xor
movs
test
add
out
push
js
and
movs
adc
cmp
lds
sub
push
cmp
mov
mov
jp
xchg
ins
mov
add
mov
adc
jp
push
ins
(bad)
(bad)
pop
in
add
jle
bound
mov
stos
adc
hlt
je
xlat
push
inc
pop
sete
(bad)
pusha
jl
test
adc
jb
adc
cmps
sub
(bad)
jb
add
ror
add
fmul
add
and
and
add
add
xchg
add
jge
push
and
lea
jle
(bad)
jbe
push
pop
xor
inc
pushf
add
loop
or
jne
in
outs
add
cmps
cmc
inc
clc
test
pop
ret
dec
hlt
loopne
add
pop
mov
add
jo
rol
mov
into
cmp
mov
mov
adc
mov
ins
daa
clc
jns
add
(bad)
and
push
mov
mov
ins
frstor
adc
pop
fwait
jno
jecxz
jae
fadd
data16
add
xor
adc
adc
int3
mov
sbb
imul
test
or
ror
test
(bad)
cmp
sub
cmp
(bad)
mov
jl
add
jmp
add
data16
fisub
cmp
cwde
add
cmp
push
jle
pop
jle
call
inc
sub
cmp
xchg
arpl
inc
inc
adc
js
mov
shl
inc
push
lea
std
ja
(bad)
es
adc
xchg
xor
nop
inc
clc
nop
sub
mov
sub
int
lea
test
jbe
ja
(bad)
add
sbb
mov
in
test
xlat
addr16
add
not
mov
addr16
jae
sbb
or
inc
push
fs
cmp
les
add
pusha
fwait
mov
cwde
mov
cwde
int
mov
call
nop
sbb
leave
mov
jbe
(bad)
(bad)
pop
mov
push
xchg
mov
push
inc
call
je
jno
and
retf
out
hlt
aam
(bad)
bnd
and
repnz
fcomp
cmp
mov
ins
push
sbb
xchg
mov
mov
(bad)
les
imul
inc
push
inc
inc
sub
movs
cmp
inc
jmp
xchg
test
imul
xchg
stc
jmp
outs
mov
loop
sbb
pushf
retf
leave
pushf
push
push
movs
out
lahf
out
bound
mov
adc
jecxz
inc
xor
call
fwait
dec
jnp
or
add
cli
movs
mov
mov
xchg
xor
call
mov
mov
push
push
or
add
pop
xlat
adc
std
(bad)
sbb
mov
add
scas
cmp
push
dec
call
aam
pop
sub
jmp
mov
xchg
xchg
clc
mov
cmps
jb
jbe
ja
div
push
xchg
jb
test
cmp
pusha
adc
mov
xchg
pop
add
push
xor
mov
inc
imul
enter
test
nop
call
sbb
pushf
xlat
enter
stos
arpl
test
xlat
jbe
inc
xchg
mov
and
add
inc
add
cmp
out
push
mov
scas
and
in
add
push
ins
(bad)
xchg
add
inc
pop
cwde
scas
sub
or
lods
iret
stos
cmps
xchg
js
int3
sbb
jmp
fwait
call
dec
lods
cwde
jl
jp
je
fs
mov
cmps
xor
cmp
stos
rcl
push
sub
pop
gs
inc
or
data16
scas
inc
mov
jge
push
inc
fst
test
fs
mov
movs
sub
push
dec
adc
inc
jne
js
sub
jno
add
pop
sbb
rol
pop
mov
mov
retf
mov
jns
std
or
clc
xchg
push
cmp
test
test
sub
mov
inc
jnp
test
xchg
adc
add
cs
xchg
add
adc
jge
add
cwde
mov
call
mov
call
xchg
or
bound
and
inc
jno
cmp
mov
jno
push
jp
dec
sbb
sub
mov
mov
sbb
sub
leave
mov
fisttp
clc
test
sbb
push
les
inc
(bad)
xchg
sti
daa
dec
jb
mov
mov
sbb
push
in
dec
pop
push
xchg
imul
sahf
dec
je
sub
add
mov
stos
xchg
aam
mov
add
clc
test
retf
mov
cli
cmps
cmp
aam
mov
cdq
and
sbb
push
mov
add
cmps
mov
pop
in
mov
scas
inc
test
ror
sbb
jp
adc
scas
stc
stc
test
js
mov
jb
addr16
rcr
add
or
push
aas
adc
push
dec
test
add
jbe
mov
pushf
les
mov
cli
add
mov
sub
mov
mov
inc
jg
cmps
cmps
retf
cmps
test
mov
dec
stos
dec
mov
mov
leave
mov
sti
sti
dec
pop
or
fmul
stos
cwde
cwde
dec
lea
aad
mov
cli
pushf
mov
lds
jl
dec
cli
sub
sub
jb
rol
in
cmp
push
xor
mov
jo
out
sub
mov
stos
cwde
lahf
mov
and
mov
mov
in
inc
jnp
jb
pop
pop
retf
or
fs
sahf
mov
mov
cli
mov
daa
push
seta
jae
int3
jb
add
ror
jl
fcomp
jmp
movs
ins
or
int3
cmp
push
jb
mov
xchg
mov
stos
dec
push
mov
mov
mov
xor
pop
imul
add
in
mov
jmp
int
in
mov
xchg
(bad)
jbe
fwait
stc
int
sbb
sti
ins
mov
ret
jnp
mov
cld
dec
cmp
pop
xchg
cmp
push
inc
jo
inc
jae
enter
movs
cli
scas
pop
stc
test
dec
test
xchg
pushf
pop
add
repnz
mov
dec
sbb
adc
imul
sub
mov
xor
mov
jmp
stos
dec
test
(bad)
es
xchg
ins
mov
and
leave
dec
jmp
loop
mov
js
mov
retf
mov
jnp
jb
mov
jno
sbb
xchg
int3
add
cmp
iret
pop
or
xchg
loope
fsub
mov
or
pop
xor
push
inc
(bad)
cmp
dec
imul
push
stos
movs
push
pop
inc
es
dec
xlat
mov
inc
js
iret
mov
mov
pop
lea
fisub
aad
or
xor
mov
mov
gs
mov
jg
popf
pop
xchg
(bad)
lds
adc
idiv
or
cmp
(bad)
loopne
push
pop
cmp
sbb
aaa
int3
push
out
sbb
mov
xor
jb
or
mov
sahf
fwait
sub
xchg
mov
push
pop
lahf
pop
sbb
retf
clc
add
test
mov
xchg
call
add
int
adc
loopne
movs
xor
xchg
(bad)
into
mov
daa
mov
sbb
imul
fistp
es
mov
mov
jmp
mov
add
outs
(bad)
mov
or
jle
xor
stos
retf
scas
jnp
jg
adc
xchg
enter
lods
mov
(bad)
movs
jecxz
lds
xchg
push
mov
cmp
pop
jge
adc
cmps
hlt
cmps
sbb
(bad)
fcom
push
mov
mov
loope
rcl
jge
push
shl
out
pop
xchg
repnz
movs
or
aaa
retf
cld
rcl
mov
(bad)
mov
push
sub
ins
fcmovnu
dec
out
push
(bad)
ror
push
int3
sbb
mov
fwait
add
jmp
cwde
out
retf
sub
fwait
or
or
scas
std
aad
ret
push
stos
jnp
(bad)
sub
jl
xor
into
cmp
outs
sub
inc
inc
nop
and
pop
fwait
lahf
mov
frstor
pop
int
sub
and
sar
frstor
jae
lods
dec
mov
jg
ins
fnstcw
stos
mov
ror
push
cmp
push
dec
rcl
inc
into
fnstcw
out
in
(bad)
movs
bound
push
or
enter
fimul
mov
fs
in
cmp
stc
call
mov
adc
xlat
je
icebp
sbb
(bad)
call
repnz
test
stc
in
jl
mov
sahf
fstp
sbb
jl
fucomip
inc
(bad)
fisttp
out
dec
retf
sti
ins
or
sub
xchg
add
xor
push
iret
repz
lods
popa
push
mov
repnz
sbb
std
or
mov
inc
ret
or
jnp
movs
scas
mov
pop
fnstsw
xchg
and
hlt
les
es
push
mul
repz
iret
scas
mov
xor
add
hlt
and
fisub
outs
mov
mov
clc
push
movd
fisttp
and
push
movs
jo
call
(bad)
aas
test
mov
jnp
mov
fistp
pop
inc
xor
in
shl
loopne
int3
sar
out
in
in
out
(bad)
or
jg
pop
(bad)
add
mov
test
push
push
sahf
loop
dec
test
ror
push
add
syscall
sahf
push
(bad)
jmp
data16
fistp
jle
(bad)
gs
loope
add
lds
les
pop
sub
sbb
mov
adc
add
vmwrite
sbb
sbb
add
lahf
pop
add
jl
push
lock
adc
push
shl
jno
shl
jb
xchg
push
shl
shr
xor
shl
enter
ret
in
push
aaa
push
mov
movs
xlat
xlat
les
int3
ins
inc
fs
mov
ret
ret
aad
je
mov
push
rcl
rcl
jae
repnz
jb
jno
xchg
bnd
pop
cmp
pop
aam
scas
add
loope
test
push
add
jbe
inc
cmp
pop
retf
and
xchg
sub
mov
lea
pop
arpl
jmp
(bad)
pop
inc
inc
push
and
test
into
mov
lods
xor
sub
fs
pusha
push
mov
(bad)
ret
or
aam
jnp
inc
cdq
xchg
lock
(bad)
js
aas
scas
hlt
div
(bad)
cmps
adc
into
in
jae
pusha
(bad)
push
adc
cmp
mov
adc
lock
daa
pop
mov
xlat
rol
loop
push
and
shl
mov
(bad)
jge
mov
dec
xchg
and
mov
jmp
test
loop
test
mov
lea
cmp
cmp
or
ja
sbb
inc
test
out
int3
mov
mov
cmc
xor
icebp
and
in
push
mov
shr
fidivr
test
in
(bad)
mov
xor
loopne
xchg
lds
into
jo
and
and
or
test
push
lods
hlt
shr
(bad)
ror
pop
retf
sub
xor
lock
call
dec
test
cdq
inc
lahf
sbb
pusha
test
mov
(bad)
add
into
call
push
sub
or
sub
mov
stos
adc
and
ret
mov
sub
adc
sbb
retf
repnz
or
lods
les
cmp
xchg
push
mov
loope
adc
mov
and
nop
mov
arpl
rol
stos
shr
stos
cmp
outs
inc
xor
dec
repnz
add
les
nop
xchg
ds
lods
mov
fsub
ret
sub
inc
mov
or
dec
(bad)
xor
stc
adc
or
sbb
add
jnp
mov
cmp
sub
les
cs
cmp
cmp
jmp
stos
and
jae
xchg
clc
adc
cdq
adc
xchg
adc
adc
(bad)
or
xor
mov
sub
jae
pop
cdq
dec
in
aam
dec
xor
sub
stos
mov
pop
sub
push
pusha
scas
lock
ret
sub
adc
or
dec
inc
enter
push
jne
sub
push
mov
es
shl
daa
xchg
xchg
pop
dec
xor
retf
out
(bad)
pop
push
scas
rol
xor
clc
mov
add
jae
lea
ret
xlat
std
js
loop
hlt
adc
or
cmc
movs
lods
or
popf
mov
(bad)
or
in
fsub
adc
pop
mov
into
fndisi(8087
xor
dec
popf
sbb
or
sub
pop
push
xchg
sub
cmp
inc
mov
xchg
or
push
not
or
push
mov
movs
pop
push
rep
mov
inc
mov
popf
daa
(bad)
imul
jo
popa
icebp
mov
loopne
cmps
and
xchg
xchg
mov
mov
push
dec
add
frstor
cmps
in
mov
xchg
nop
sbb
fistp
ins
pop
cld
mov
or
fcmovne
add
shl
stos
xchg
adc
wrmsr
xor
xchg
aam
pop
mov
sub
jp
pop
fidivr
inc
shl
jmp
pop
test
xchg
mov
xor
push
mov
int
add
out
sub
ret
pop
push
mov
jl
mov
mov
mov
movs
mov
mov
sbb
cwde
inc
repz
dec
push
sahf
and
daa
hlt
inc
adc
movs
mov
test
add
push
or
aam
pushf
in
es
push
sar
lods
jp
arpl
pop
sub
add
xchg
inc
or
stos
mov
les
lahf
jns
cmp
sub
adc
cmp
push
inc
ret
adc
add
mov
retf
xor
xchg
fldenv
aaa
mov
push
retf
adc
jl
jnp
stc
pop
ret
mov
adc
movs
fistp
xchg
imul
add
fadd
mov
xchg
inc
xor
test
sbb
fwait
out
lds
push
dec
test
xchg
rcl
lock
jl
push
pop
push
mov
adc
shl
(bad)
in
outs
jmp
or
jle
mov
add
and
dec
or
sub
push
push
xchg
add
call
pop
fild
push
push
outs
dec
dec
retf
clc
js
cmp
popf
aam
xchg
mov
loop
inc
inc
sub
jno
and
mov
push
lea
test
or
jg
and
inc
mov
dec
push
or
push
scas
and
pushf
adc
iret
xchg
(bad)
push
shl
mov
je
sbb
gs
inc
jmp
add
push
outs
pop
push
mov
sub
test
or
pop
repnz
xchg
mov
hlt
fidiv
inc
lea
clc
jo
and
cmps
push
rcl
dec
ret
sub
jecxz
sbb
into
mov
mov
pusha
cmps
cmp
mov
fwait
dec
arpl
add
popa
adc
nop
les
shr
aaa
ins
add
les
(bad)
jmp
push
in
mov
test
xor
fcomp
push
inc
inc
add
sbb
aas
inc
adc
add
push
retf
sbb
aad
push
ss
ins
jae
fcomp
xchg
into
data16
addr16
mov
mov
repnz
in
arpl
test
and
(bad)
cmp
(bad)
aad
and
push
arpl
inc
add
nop
push
push
xor
movs
push
je
and
iret
ins
and
pop
jmp
mov
push
pop
cmp
leave
fild
inc
sub
sti
mov
and
pusha
ret
in
mov
sub
fidiv
jp
hlt
mov
sbb
mov
or
inc
jo
pop
push
imul
adc
pop
mov
cli
rol
(bad)
js
aad
mov
push
or
mov
or
and
es
shl
inc
addr16
in
movs
enter
out
adc
mov
aad
jne
cli
xor
sti
xchg
jne
imul
mov
rcr
and
ror
cmc
rol
and
cmps
xchg
pushf
jo
or
or
mov
or
(bad)
test
add
les
enter
sbb
mov
lods
test
cmp
(bad)
sbb
in
movs
pop
xor
ins
enter
dec
sbb
jmp
sbb
jno
scas
ret
cld
outs
cs
sbb
(bad)
mov
bound
pop
loop
(bad)
call
xchg
repz
rol
jne
mov
cmp
add
cmp
fadd
sub
jge
cmp
hlt
xchg
push
sub
rcr
jle
or
cmc
or
into
adc
ficomp
repz
pusha
mov
hlt
mov
mov
inc
and
and
clc
loop
popa
call
fstp
ins
push
or
sbb
add
xchg
mul
pop
sub
dec
sbb
int
movs
inc
rcl
fsubr
lock
shl
out
call
ficomp
cmp
and
icebp
and
mov
out
aaa
adc
or
inc
mov
or
shl
imul
pop
cdq
ja
add
loop
retf
pop
add
aad
mov
jecxz
(bad)
mov
mov
call
lds
js
mov
pop
push
dec
push
pop
push
inc
enter
std
cmp
(bad)
jae
xchg
mov
cmp
movs
or
retf
mov
inc
mov
pop
xor
retf
(bad)
fimul
xor
pop
or
push
jge
mov
cmp
sub
cmp
or
pop
or
inc
cmps
xchg
sbb
les
dec
in
push
cld
vcvttsd2si
jnp
out
sar
mov
mov
sub
fucompp
(bad)
mov
shr
(bad)
iret
mov
jecxz
retf
push
in
pop
clc
mov
adc
cli
mov
mov
mov
leave
add
push
loop
jp
jb
push
jp
or
dec
cmp
and
in
sbb
hlt
pop
rcl
jo
inc
jl
sub
add
mov
ins
scas
pusha
cmp
lods
mov
jmp
pop
mov
mov
jmp
nop
mov
inc
add
in
cdq
xor
mov
xchg
popa
inc
jmp
and
out
xor
shr
in
cmp
mov
or
add
adc
adc
out
add
pop
sub
iret
in
xchg
push
mov
sbb
and
dec
inc
mov
and
mov
jmp
add
or
push
add
add
loope
mov
lahf
out
imul
scas
mov
or
rcr
jecxz
cmc
(bad)
adc
sub
cli
and
call
sub
mov
aaa
in
add
call
and
pushf
inc
xchg
mov
mov
nop
mov
mov
xor
push
fiadd
test
or
sbb
pop
dec
rcr
stos
das
sbb
cmp
jo
or
add
stos
test
mov
loopne
sub
and
inc
or
or
jmp
icebp
mov
lods
adc
mov
mov
or
jo
and
sbb
jno
xchg
push
test
shr
adc
lock
push
stc
add
ds
dec
and
mov
imul
add
push
retf
(bad)
pop
lods
pop
retf
sub
cmp
shl
inc
mov
in
jo
mov
stos
jo
rdmsr
fucomp
scas
jle
les
fisubr
xchg
ret
test
dec
inc
and
xor
ret
dec
fs
scas
iret
add
stos
(bad)
push
out
adc
push
repnz
cld
test
aam
xchg
and
sub
sub
mov
add
adc
aad
repnz
out
pop
mov
and
pusha
xor
outs
or
shl
out
xchg
add
nop
or
push
dec
adc
enter
xchg
lock
loope
into
int3
xor
xor
mov
cmp
mov
sub
add
adc
or
xor
add
arpl
add
out
ret
int3
shl
xchg
movntps
xor
add
mov
lods
jecxz
and
mov
xchg
out
mov
(bad)
sbb
bound
loopne
cmps
sub
xor
out
jle
inc
or
jmp
into
stos
push
sub
jp
lds
dec
out
iret
push
pop
dec
adc
cmp
mov
jmp
adc
inc
imul
es
jmp
sbb
push
xor
jmp
or
push
mov
ds
lods
add
ds
push
pop
sub
cmc
jae
sub
std
xchg
sbb
inc
aaa
or
dec
dec
xor
push
in
mov
jne
inc
jns
jo
dec
inc
mov
sti
je
inc
inc
push
out
icebp
add
adc
dec
stc
shl
test
int
inc
mov
dec
mov
cmp
mov
jmp
rol
out
daa
sahf
inc
or
sti
fmul
cdq
ds
sbb
xlat
adc
and
lds
xor
iret
pop
cmp
jg
adc
(bad)
scas
cmps
repz
sub
idiv
mov
push
and
fmul
jns
xor
cmp
add
dec
pop
jae
sub
pop
outs
add
pop
adc
mov
push
or
mov
xchg
mov
ss
jae
ja
push
push
shl
scas
bound
daa
push
pop
xor
and
jns
xchg
and
push
movs
aam
mov
daa
push
outs
aas
sti
xchg
pop
scas
cmc
pop
inc
in
inc
mov
inc
(bad)
jno
cmp
jmp
adc
lods
jp
sbb
pop
dec
dec
jb
lock
icebp
xor
xchg
out
test
xchg
inc
pop
xchg
mov
push
pusha
ja
aam
hlt
pop
sbb
jp
in
imul
jno
movs
scas
mov
imul
(bad)
repz
cmps
mov
lock
jl
jmp
lea
xor
gs
inc
mov
sbb
cmp
repnz
out
sbb
jb
mov
jmp
je
push
mov
(bad)
(bad)
arpl
mov
add
js
jmp
mov
pusha
inc
push
pop
cmp
ret
jmp
jo
and
sbb
inc
jns
ins
jg
and
inc
ins
mov
or
jbe
test
nop
(bad)
ins
mov
cmps
pusha
loope
xor
dec
inc
xchg
mov
ja
repz
push
(bad)
aad
mov
sub
jne
pop
jbe
jle
arpl
scas
aas
pop
adc
mov
sar
cmp
aaa
mov
push
add
xchg
ja
jne
out
push
lock
es
cmp
cmp
xor
add
loopne
adc
int
pop
add
pop
push
jb
loopne
push
(bad)
ins
and
xchg
mov
pusha
push
mov
mov
adc
push
push
xchg
aam
aam
or
sub
add
ja
xchg
pop
xor
imul
addr16
nop
xchg
inc
pop
int
jae
inc
sbb
outs
dec
mov
not
mov
ja
push
xor
(bad)
push
mov
push
test
xlat
jb
cmps
ja
js
adc
(bad)
dec
adc
rcr
cmps
push
jmp
xchg
dec
push
inc
cwde
add
outs
(bad)
mov
jo
add
jne
xlat
les
hlt
mov
pop
inc
shr
xor
lods
and
sbb
sub
pop
jbe
sti
sub
es
fs
cwde
push
sub
add
not
cmp
(bad)
inc
fadd
cmp
push
jg
adc
push
push
or
dec
mov
lods
sbb
xchg
jns
pop
mov
arpl
daa
rcl
cmp
ja
or
or
push
data16
adc
mov
push
icebp
xchg
pop
sahf
clc
lods
mov
jge
pop
bound
xchg
xchg
mov
push
aaa
push
ins
xchg
pop
push
mov
xchg
xchg
pop
sbb
jge
lods
mov
inc
pop
jmp
mov
scas
jo
push
out
jb
out
js
inc
ins
out
xor
fbstp
lds
stc
adc
mov
pop
cdq
dec
mov
pushf
iret
and
dec
pop
pushf
dec
outs
imul
xchg
xchg
mov
or
push
xchg
test
cdq
fnstsw
xchg
icebp
out
out
scas
jecxz
shr
or
push
mov
mov
push
xor
repz
int3
pop
dec
hlt
data16
mov
xor
mov
popa
sub
jp
imul
mov
pmulhw
cdq
clc
nop
repz
push
mov
mov
enter
jg
cwde
pop
cmp
jp
push
mov
pop
mov
pop
cwde
pop
je
test
or
stos
(bad)
lods
xor
adc
push
pop
xor
mov
mov
xor
and
pop
add
add
rcr
pushf
arpl
mov
adc
scas
cmp
jne
movs
xor
fldenv
pop
shl
fidivr
dec
(bad)
into
mov
mov
mov
mov
ins
fidiv
sub
cwde
xchg
mov
mov
xor
cdq
dec
cmp
test
(bad)
stc
xchg
imul
int3
jnp
pop
mov
cli
pop
aaa
jnp
gs
cdq
sti
outs
mov
jbe
leave
dec
dec
and
leave
pop
sub
int
push
mov
loop
repnz
pop
xchg
mov
stos
(bad)
out
nop
fnstsw
mov
int
test
push
or
out
push
test
cmp
mov
(bad)
push
popa
xchg
mov
sar
jne
push
xor
movsx
dec
bound
loope
or
aaa
pop
lds
ret
or
xchg
loop
mov
cwde
std
mov
lds
jne
pop
pop
xor
push
cmps
pop
bound
mov
fadd
imul
push
(bad)
aaa
pop
inc
or
add
cmp
leave
stos
jl
adc
fadd
add
xchg
bound
sti
fcmove
(bad)
jl
ret
push
push
in
mov
xchg
fmul
mov
add
inc
(bad)
into
mov
call
inc
fistp
scas
into
pop
pushf
mov
sbb
(bad)
pop
jne
pushf
leave
rcr
inc
jb
rcr
(bad)
mov
shr
fnstsw
sbb
push
mov
sub
mov
xlat
rol
gs
jl
sar
mov
cdq
aam
jge
imul
popf
aad
jge
xor
nop
fs
test
xlat
pop
sbb
ja
fsubr
fmul
aam
fstp
push
and
add
and
add
add
add
sub
add
movs
add
add
add
data16
data16
cdq
add
cdq
add
int3
add
inc
add
add
inc
xor
xor
push
xor
inc
data16
xor
xor
data16
int3
add
xor
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
dec
(bad)
(bad)
(bad)
inc
add
inc
jo
sub
(bad)
sbb
ss
dec
inc
pusha
dec
lods
dec
mov
in
jp
fbld
dec
xchg
lods
push
sub
or
mov
dec
cmps
or
ja
jle
out
sti
idiv
je
test
xchg
addr16
ja
jns
jnp
jg
add
ins
mov
jne
push
movs
jp
xchg
xchg
stos
xchg
add
xchg
lods
add
xchg
jle
cdq
mov
mov
cmps
cmps
jg
mov
jge
mov
cwde
mov
mov
aad
(bad)
(bad)
fld
popf
mov
(bad)
(bad)
(bad)
fucomi
ret
out
jl
repnz
push
loope
jecxz
sar
xlat
jmp
std
or
push
daa
jnp
inc
in
jecxz
setnp
mov
xchg
adc
daa
ins
loope
js
(bad)
lds
pusha
inc
movs
enter
movs
mov
scas
mov
sub
movs
add
xor
inc
xchg
scas
popf
sub
sub
mov
xor
movs
push
push
scas
or
jo
pusha
push
lahf
popf
cmp
push
push
push
leave
sbb
xchg
xchg
mov
push
cdq
lods
retf
dec
add
cmps
sahf
movs
test
inc
sbb
imul
jl
mov
push
add
add
bound
pop
pop
shr
and
pop
adc
adc
loopne
push
movlps
test
dec
push
fld1
sahf
stos
and
and
sbb
mov
and
inc
(bad)
loope
sub
cmp
xor
nop
mov
xor
fld
repnz
mov
loopne
test
jbe
jge
dec
mov
mov
cmps
in
int3
and
and
jle
add
popf
and
push
sbb
pusha
mov
sbb
out
mov
push
cmp
loopne
sub
dec
test
popa
test
push
or
add
cmp
popf
je
(bad)
push
and
push
test
aam
push
inc
mov
xchg
shl
push
mov
add
sbb
push
inc
xor
add
std
or
cmp
test
or
xor
cmp
push
cwde
xor
ins
clc
mov
adc
push
cmp
add
test
and
pop
cmp
(bad)
mov
int
iret
xor
push
push
dec
push
cmp
mov
add
xor
call
fstp
jge
ficomp
inc
dec
and
popa
dec
jle
sbb
inc
mov
push
push
adc
sub
pop
je
test
dec
xchg
and
pop
xor
inc
scas
loop
dec
sahf
sbb
call
sub
imul
imul
scas
dec
mov
sub
movs
push
or
add
cdq
(bad)
xchg
mov
or
cmp
(bad)
mov
out
test
stos
das
mov
or
stos
cmp
xchg
fldcw
std
int
gs
inc
or
sbb
lods
inc
and
and
mov
sub
cld
pop
cmp
add
gs
sbb
popa
cmp
xor
inc
adc
or
bound
dec
and
mov
jb
in
psubusb
xchg
dec
sub
stos
leave
xchg
(bad)
imul
int3
xchg
int
cs
pop
pop
ins
xor
xchg
mov
(bad)
jle
push
sub
aam
or
mov
sbb
jne
mov
and
add
push
sub
xchg
aas
adc
and
lds
pop
mov
xor
ror
pop
pop
or
cmp
mov
xchg
mov
mov
add
ins
imul
loop
dec
movs
fld
popf
add
inc
mov
add
fisttp
add
bound
mov
(bad)
sub
or
pop
push
clc
jmp
sub
out
out
mov
shr
cs
jne
pop
pop
mov
jp
aam
and
pop
lds
je
mov
js
pop
cmp
jne
and
cmp
pop
add
(bad)
xor
cmp
push
add
shr
shl
pop
inc
xchg
push
hlt
mov
popa
addr16
ja
sbb
nop
inc
xor
jb
lods
outs
and
mov
or
add
mov
jmp
cwde
jge
add
ss
fcmovbe
fcom
movs
sahf
ins
sub
jmp
mov
enter
pusha
js
ret
shr
sbb
pop
inc
add
push
adc
and
inc
push
retf
jns
cmp
shr
mov
add
cmp
int
jo
dec
loope
pop
clc
inc
push
or
adc
push
sub
sbb
retf
fistp
outs
xchg
fsub
xor
adc
sbb
sub
adc
cdq
(bad)
sub
add
sub
pop
and
fisubr
(bad)
xchg
add
or
or
fcmovbe
pop
xchg
or
dec
or
xchg
jl
dec
push
mov
add
add
rol
cmp
push
add
js
in
call
push
sbb
push
xchg
imul
adc
in
cmp
and
in
cmps
push
add
ins
out
aas
movs
mov
bound
xor
dec
aad
out
into
clc
inc
repz
xchg
adc
cmc
push
cmps
add
adc
daa
test
add
int3
test
lds
loope
add
push
xchg
sub
repz
aad
cmp
jl
imul
sub
movs
rcl
rcr
mov
inc
mov
inc
fstp
js
rcr
inc
cmc
test
pop
lods
loopne
dec
sbb
xchg
shr
add
pop
ja
ror
push
aam
cld
cld
fwait
and
sub
add
adc
xor
stos
pop
ret
movs
jp
adc
cmp
retf
jp
jecxz
addr16
cs
push
movs
repnz
stos
cmp
mov
add
jnp
push
jbe
mov
push
loopne
cmp
test
dec
lds
add
jne
inc
not
clc
fs
mov
aaa
pop
sub
scas
pop
mov
popa
scas
add
addr16
imul
sub
mov
jae
hlt
ins
sub
jecxz
jae
cmc
xchg
mov
js
sti
push
lds
pop
adc
or
(bad)
xchg
push
add
into
jbe
hlt
add
fadd
cmps
mov
(bad)
push
dec
cmps
cmp
(bad)
lea
vminss
aad
lods
mov
mov
loope
sbb
pop
ins
mov
pop
jge
fild
or
je
ret
ins
imul
js
mov
mov
sub
sub
mov
push
sbb
dec
mov
loope
call
out
call
jp
add
ds
retf
adc
sub
mov
or
inc
pop
push
out
jp
push
inc
test
(bad)
mov
leave
dec
cmp
or
jne
jmp
push
adc
mov
sbb
shl
jmp
jno
data16
clc
fld
leave
pop
(bad)
mov
jnp
mov
push
sbb
adc
mov
pop
mov
xchg
jne
add
jl
and
shl
sbb
in
rcr
xchg
xchg
mov
(bad)
xchg
add
sub
inc
ins
cmps
sub
adc
test
jge
cwde
xor
test
sbb
loope
bound
stos
or
or
xor
mov
ss
lods
add
mov
mov
dec
nop
adc
cmp
mov
ins
invd
ficom
in
cmp
push
mov
shl
mov
push
inc
add
aas
imul
call
mov
and
push
cmp
fisubr
or
and
cwde
mov
push
inc
into
pop
jle
mov
cmps
arpl
retf
fdiv
rcl
sar
movs
loopne
ror
rol
jo
push
fwait
add
inc
fisttp
arpl
mov
iret
xor
add
mov
push
mov
cld
xchg
add
mov
adc
jbe
dec
sub
adc
jne
das
push
sbb
in
jbe
(bad)
ins
movs
add
iret
and
xor
rcr
mov
sub
dec
add
mov
test
mov
or
pop
mov
setne
cmp
cmp
ds
and
mov
ss
mov
bswap
cmc
outs
movs
ret
mov
or
pop
sbb
mov
(bad)
cmc
mov
inc
xor
adc
xor
stc
sub
mov
imul
mov
xor
inc
sbb
xor
cmps
out
jns
mov
add
sar
mov
pop
clc
cli
add
lahf
mov
out
aas
popf
ror
jmp
mov
(bad)
cmps
mov
retf
lods
or
mov
fild
jmp
push
sti
add
sub
cmp
js
xlat
pop
lods
inc
inc
jl
outs
loopne
je
jo
lds
(bad)
sbb
jl
xchg
imul
xor
adc
add
ja
(bad)
jb
mov
inc
xor
sub
test
sbb
sub
mov
adc
repnz
fld
cmp
ds
and
push
aad
retf
add
jb
pop
jo
push
dec
fbstp
xor
push
push
inc
test
xchg
jbe
mov
sub
and
xor
adc
or
mov
and
iret
xchg
jl
(bad)
jl
cmps
jb
and
lahf
add
(bad)
in
cmpxchg
sub
sub
pop
pop
inc
mov
outs
pop
mov
ja
jbe
loop
test
adc
xlat
jle
bound
adc
jbe
jno
jo
xchg
jne
xchg
addr16
sub
repnz
dec
mov
pop
push
arpl
mov
xor
push
push
or
xor
jle
mov
cmp
add
jb
js
int
xchg
dec
push
test
xchg
push
pop
add
or
add
add
push
xor
jno
add
mov
jle
jo
mov
mov
pop
adc
and
jo
test
(bad)
sbb
adc
jne
and
pop
sub
cdq
movs
mov
xchg
inc
push
test
sub
sub
in
xor
movs
aam
xor
xor
jb
mov
aam
cmp
bound
adc
out
movs
imul
add
adc
nop
pop
icebp
nop
dec
cmp
cmps
adc
fldenv
xor
gs
push
movs
push
xchg
and
xchg
jo
push
mov
push
push
mov
inc
jp
push
add
or
dec
mov
dec
retf
xor
cmp
cmp
pop
movs
or
std
aad
adc
call
add
xchg
neg
jb
sbb
inc
cmp
je
cmps
push
add
xchg
fs
gs
add
mov
not
or
jecxz
xchg
pop
push
add
jg
outs
sbb
push
add
gs
test
jne
push
push
dec
xchg
movs
inc
add
pusha
push
pop
ins
sbb
pop
or
dec
bnd
pop
add
jecxz
fs
add
or
adc
cmps
aad
scas
addr16
je
lds
cmp
jne
push
jns
mov
gs
enter
gs
pop
int3
adc
retf
push
(bad)
int3
push
fwait
xchg
push
jle
mov
test
cmp
or
xchg
push
jae
xor
cwde
push
sahf
dec
popf
int
xchg
and
pop
aam
(bad)
sub
xchg
in
je
cmps
js
icebp
inc
mov
ins
pop
sar
sbb
xor
sub
dec
mov
js
in
push
xchg
and
cmc
imul
bound
and
mov
aam
sub
je
data16
pop
adc
inc
retf
add
xchg
jo
mov
xchg
push
and
test
sbb
jb
imul
scas
pop
js
aam
mov
test
adc
xlat
pop
xor
add
push
sub
sub
(bad)
fsub
retf
pop
dec
jle
pusha
retf
mov
gs
cmps
add
adc
fldenv
sub
and
shl
je
lds
mov
and
daa
push
add
and
mov
sbb
mov
shl
add
push
mov
leave
(bad)
(bad)
daa
push
leave
mov
dec
mov
inc
fs
popf
and
data16
jge
jns
mov
or
sahf
pusha
or
xor
addr16
dec
mov
xchg
jbe
push
retf
mov
dec
enter
lahf
movs
push
mov
div
fisub
mov
jns
sbb
pop
sbb
sti
loope
adc
jb
add
(bad)
movs
push
fisubr
(bad)
pop
les
data16
sub
outs
dec
jbe
adc
push
sbb
test
lods
mov
pop
pop
add
bound
xchg
test
mov
ins
add
jns
pop
aam
push
cmp
pop
jo
push
dec
sbb
sbb
leave
pop
icebp
mov
div
scas
mov
sbb
mov
mov
lahf
dec
retf
pop
jo
pop
pop
mov
dec
repnz
jg
sbb
lds
sti
xchg
push
mov
xor
dec
mov
push
and
inc
dec
call
lods
xchg
call
inc
loope
add
jb
add
es
sbb
xor
xchg
push
dec
sbb
push
dec
inc
stos
xchg
xor
cmc
mov
rcr
push
xor
cld
cmc
call
scas
test
inc
xor
sbb
and
ss
loope
inc
(bad)
lds
xchg
xchg
inc
add
js
adc
(bad)
sub
and
xchg
dec
xor
mov
mov
movs
or
inc
pusha
jb
popa
ror
push
xchg
popf
fldcw
fld
gs
cld
sbb
dec
mov
sub
loop
data16
movs
mov
inc
cmp
pop
xchg
outs
mov
xchg
sub
sbb
ja
pop
xchg
cs
mov
xor
fwait
mov
(bad)
and
cmp
cmp
xchg
xor
pop
hlt
cmp
mov
push
cmp
inc
push
or
add
push
push
les
cli
xor
pop
test
dec
mov
dec
int
mov
ret
shl
mov
dec
lds
pop
cmp
aaa
xchg
repnz
jg
pop
test
shr
daa
sar
xor
dec
add
cwde
stos
dec
mov
mov
or
and
xchg
popa
or
xchg
aaa
xchg
popa
lods
jb
addr16
in
(bad)
shr
sbb
test
mov
es
in
xchg
imul
mov
jb
add
imul
sub
addr16
mov
aaa
mov
xchg
dec
clc
adc
fisubr
inc
sub
ins
xchg
mov
aaa
or
fld
cmp
imul
ins
mov
xchg
(bad)
not
arpl
repz
fstp
mov
cmp
xchg
mov
imul
cmp
cmps
sbb
xchg
sub
and
add
xor
rol
in
xchg
int
leave
cmp
push
pop
rol
xchg
ins
cmps
fdiv
les
and
adc
and
or
adc
cli
sbb
push
pop
dec
pop
mov
mov
subps
or
jp
(bad)
in
popa
xor
rol
sub
add
stc
(bad)
push
aas
and
adc
in
clc
xor
js
jmp
call
sar
jp
fs
xor
cmps
jl
icebp
jl
popf
mov
movs
jg
xchg
cmp
test
fwait
(bad)
cli
mov
lods
sar
xor
(bad)
int3
fadd
test
(bad)
sbb
in
inc
dec
aam
push
and
sbb
es
pop
mov
mov
test
sub
lods
fwait
lock
or
scas
dec
ror
(bad)
sub
cmp
inc
cmp
clc
mov
push
push
ret
inc
pop
inc
xor
pop
stos
(bad)
test
bound
and
arpl
ss
and
cmps
aad
cmp
mov
sub
dec
or
das
mov
xchg
(bad)
(bad)
and
xor
fist
test
js
sub
push
imul
in
dec
inc
ret
sbb
push
and
cmp
mov
shr
fcom
fcom
and
sub
es
dec
dec
adc
je
cld
push
push
into
xchg
ins
outs
popa
enter
cmp
ss
fdivr
inc
(bad)
and
test
pop
pushf
jae
fcmovne
fstp
and
fimul
push
push
inc
leave
add
mov
(bad)
or
sti
xor
mov
cmp
and
adc
inc
add
mov
(bad)
(bad)
aad
pop
mov
call
inc
out
xor
pop
add
push
or
sub
aam
inc
jbe
fdiv
loope
mov
adc
cmp
icebp
(bad)
ret
xor
push
out
pop
or
popa
icebp
arpl
sbb
popf
mov
inc
clc
xchg
mov
xor
mov
popa
es
pop
push
jecxz
mov
dec
mov
xor
cmp
sbb
add
daa
pushf
fs
movs
pop
outs
addr16
cmp
adc
pop
xchg
imul
loop
push
sar
jecxz
adc
mov
add
data16
push
out
(bad)
push
aaa
clc
pop
into
push
in
out
mov
not
pusha
out
outs
ds
push
aad
bnd
mov
iret
add
popf
push
into
cmp
out
push
cmp
dec
add
mov
cmps
aad
mov
xchg
mov
cmps
aam
fucomp
fstp
fcom
aaa
in
mov
adc
jae
sub
loope
sahf
or
ret
outs
fnstcw
in
push
ds
push
scas
and
ds
add
sbb
sbb
push
mov
xchg
xchg
fdiv
into
out
jp
in
cld
pop
cli
pop
inc
stos
adc
xchg
push
lock
fidivr
sbb
push
inc
in
mov
push
lods
mov
movhps
push
inc
rcr
mov
fdivr
in
mov
dec
or
clc
jge
mov
in
push
data16
or
sbb
lock
mov
shr
inc
xchg
xor
not
mov
ds
mov
jecxz
hlt
inc
jbe
adc
xor
ds
inc
add
mov
pmuludq
xor
xchg
mov
repz
lahf
hlt
add
xchg
ret
push
iret
xchg
and
aas
daa
repnz
sbb
in
out
and
inc
push
inc
hlt
neg
cmc
dec
mov
rcl
cwde
shr
and
arpl
sub
push
and
xor
imul
sbb
add
cmp
pop
cmp
xor
cmc
dec
push
popf
fistp
dec
adc
xchg
adc
adc
inc
mov
xor
and
push
inc
xchg
mov
std
mov
jbe
push
xor
push
sub
stos
sbb
mov
pop
jmp
aaa
loop
fistp
mov
dec
jb
das
in
scas
sbb
aas
mov
and
nop
sbb
aam
mov
inc
push
inc
inc
sub
test
and
dec
or
loop
pop
mov
xchg
dec
and
adc
mov
rcl
push
pop
add
neg
jp
xchg
iret
mov
in
or
icebp
das
push
push
sub
imul
scas
dec
dec
cs
int3
xchg
int3
or
lods
ins
lods
rcl
sub
rcl
enter
add
or
out
push
mov
xchg
not
or
int3
imul
clc
lods
sub
mov
cs
scas
loopne
mov
xor
push
dec
sbb
mov
dec
mov
pop
cmp
mov
xchg
sbb
cdq
mov
outs
xor
add
mov
push
(bad)
sub
adc
or
inc
jl
cli
in
jecxz
retf
pop
popa
aam
mov
and
sbb
les
aas
or
ds
inc
cmp
cmp
aam
push
inc
cmps
mov
cmp
xor
bound
leave
fldenv
leave
es
nop
loopne
push
and
xchg
cwde
in
xor
cmps
ret
mov
loope
stos
or
dec
adc
scas
cli
pop
push
mov
mov
pop
sub
xchg
cmps
jae
pushf
ret
jnp
data16
mov
daa
xchg
jo
ret
cmc
xchg
push
adc
into
jp
sbb
sbb
enter
xchg
sub
xchg
pop
xor
add
mov
enter
mov
loopne
add
stos
scas
fnstcw
cdq
jbe
mov
mov
push
xchg
js
icebp
in
(bad)
mov
in
mov
and
cmp
gs
fidiv
fld
and
dec
xchg
lods
adc
adc
add
cmp
sub
mov
cmp
xor
retf
cwde
jbe
sub
cmps
cmp
retf
push
psubq
sub
aaa
or
jmp
and
mov
mov
daa
xchg
ss
mov
stos
xor
ja
sbb
pop
loop
or
(bad)
test
cmp
and
or
ins
bound
add
sbb
dec
sub
sti
test
inc
mov
jmp
cmp
stos
xchg
shl
imul
push
clc
cld
adc
mov
push
adc
xchg
and
loop
mul
test
mov
inc
add
call
inc
sbb
and
push
sbb
xor
into
shr
xor
add
mov
mov
add
fdiv
mov
aaa
mov
les
mov
loope
jnp
fld1
push
pop
mov
imul
sbb
push
mov
mov
(bad)
lods
push
ret
xor
lods
sub
aaa
jg
lods
lahf
movs
or
test
pop
or
add
sbb
push
in
iret
add
adc
inc
jne
ror
retf
fnsave
leave
and
pusha
cld
jmp
mov
mov
pop
or
shl
jge
sub
mov
jp
pop
mov
xchg
pushf
addr16
push
test
stos
lods
jbe
cs
jmp
pusha
mov
xor
or
jecxz
call
and
lahf
data16
sbb
inc
cdq
sub
pop
rcr
dec
pop
call
inc
mov
xchg
mov
scas
adc
xlat
push
jecxz
mov
test
push
pop
lock
cli
jmp
mov
xor
lahf
xchg
sbb
mov
mov
data16
push
pop
cmp
sbb
in
test
(bad)
neg
cmp
sti
outs
jp
loope
out
sbb
xor
fadd
sbb
jnp
mov
mov
retf
cmp
ret
daa
ss
cld
sbb
out
dec
outs
(bad)
sti
std
je
sbb
in
stos
aam
(bad)
dec
outs
mov
aas
jns
iret
dec
sti
pop
imul
push
inc
aam
sub
add
push
or
add
and
add
add
add
sub
add
call
add
add
data16
data16
cdq
add
cdq
add
int3
add
inc
add
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
data16
int3
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
dec
cdq
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
dec
(bad)
(bad)
(bad)
inc
push
inc
jo
sub
(bad)
sbb
ss
xor
xchg
fsubr
push
imul
sub
jp
pop
lahf
int
test
in
hlt
mov
movs
imul
jg
jne
jnp
lea
xchg
add
jp
add
mov
(bad)
jg
xchg
lods
dec
xchg
call
jle
xchg
dec
lods
shl
fwait
mov
fwait
jnp
mov
jb
xlat
mov
test
int3
retf
(bad)
(bad)
stos
rcr
(bad)
mov
lock
icebp
jl
out
call
cwde
in
out
call
cdq
cmp
mov
xchg
push
or
sub
push
mov
shr
or
xchg
mov
push
or
ret
inc
adc
mov
shl
dec
int3
jo
gs
push
(bad)
test
sbb
aam
sub
pop
daa
stos
pop
lods
fwait
inc
jle
push
jae
rcl
and
rol
imul
push
ror
inc
loope
inc
pusha
pusha
test
ins
mov
sub
add
pusha
xchg
mov
int
(bad)
xor
sub
std
cli
hlt
test
add
xor
stos
jbe
mov
imul
enter
mov
out
popf
sti
loopne
test
inc
sti
push
inc
mov
cmps
retf
test
mov
pop
sbb
repnz
aad
dec
retf
adc
pop
jle
pusha
ss
stos
mov
shl
ror
ret
outs
and
xchg
mov
xchg
jb
aam
je
aam
cmp
mov
sbb
xor
push
rcl
cdq
xchg
push
ds
add
push
pop
ds
xchg
ficom
and
pop
add
and
inc
pusha
sbb
icebp
cmps
mov
add
inc
mov
push
and
int
or
fistp
rol
test
pop
ror
add
push
jae
call
xchg
xchg
outs
add
pusha
adc
adc
mov
icebp
cmps
lahf
xchg
mov
jne
popa
adc
mov
push
xchg
pop
(bad)
lods
xor
aam
push
push
add
xlat
adc
xor
and
inc
add
add
xchg
pop
pop
add
call
jbe
daa
mov
and
cmps
push
xor
add
jp
or
sbb
imul
je
daa
retf
sub
mov
mov
adc
daa
add
xchg
jmp
cmps
xor
cmp
sbb
sub
sub
sbb
mov
shl
clc
sub
mov
push
fstp
mov
stc
mov
mov
popf
das
out
dec
in
mov
add
xchg
sub
add
inc
pop
movs
not
push
xor
xchg
rcr
sub
out
pop
int
push
in
mov
inc
jmp
push
mov
pop
cdq
add
jecxz
icebp
mov
repnz
in
scas
enter
push
pop
add
arpl
push
and
xor
ins
cmp
xor
ret
jmp
aas
mov
xchg
stos
cmps
enter
movs
loopne
shr
int
and
je
push
jmp
sbb
fisttp
xchg
sbb
out
imul
push
mov
retf
cli
(bad)
xor
xor
enter
mov
ss
sbb
loopne
(bad)
mov
sub
idiv
stc
adc
and
mov
idiv
cs
mov
pop
push
sbb
clc
test
fdiv
call
arpl
xchg
add
call
fstp
push
sbb
les
scas
or
xlat
push
inc
iret
retf
mov
adc
lods
sbb
add
idiv
jbe
fstp
inc
clc
and
in
inc
jnp
and
jmp
or
xchg
arpl
repz
push
pop
and
fnop
(bad)
and
ror
sbb
lahf
push
add
repnz
sbb
or
fcomp
cmps
sub
dec
out
or
(bad)
clc
push
mov
fldcw
scas
mov
add
mov
(bad)
sub
sbb
nop
adc
pop
xlat
pushf
mov
push
test
pop
sbb
mov
add
pop
iret
in
stos
fdiv
dec
lock
sbb
cmp
add
and
jno
push
imul
rol
pop
pop
stos
or
jo
mov
adc
jno
out
cmp
into
fstp
shl
sub
cmps
jle
les
ins
and
cwde
and
mov
inc
jmp
xchg
bound
xor
fwait
adc
xor
dec
xchg
adc
fcomp
call
aaa
pop
jb
dec
mov
dec
and
xchg
jecxz
push
pop
aam
movs
retf
add
adc
in
adc
mov
cmovnp
js
mov
or
mov
inc
and
mov
cmp
stc
inc
hlt
imul
mov
fisubr
sbb
inc
test
iret
xchg
ins
jmp
xchg
dec
out
cmp
add
loopne
inc
and
xchg
add
or
cmp
ret
mov
hlt
adc
xor
and
push
cmp
call
and
cmps
dec
or
add
jns
leave
push
xor
cwde
xchg
xor
add
mov
jg
cli
rol
stos
mov
call
xchg
fstp
or
gs
cmp
loopne
ss
push
lds
dec
icebp
cmps
inc
cmp
push
mov
add
cwde
add
(bad)
in
movs
mov
mov
or
jmp
dec
inc
mov
mov
lods
xchg
add
call
mov
mov
adc
push
cs
push
mov
cs
xchg
arpl
adc
int3
sub
je
ret
add
and
pop
fstp
push
push
in
or
xor
retf
cs
rol
or
mov
add
and
loop
sbb
xchg
xor
pop
xor
popa
mov
aad
jmp
sti
inc
(bad)
(bad)
in
and
test
lock
test
xor
xchg
jnp
xchg
fmul
cmp
fldenv
sub
fld
pusha
dec
sbb
jl
repz
push
cs
xor
xchg
mov
sub
cmps
repz
dec
rol
mov
adc
add
add
iret
mov
sub
cmp
inc
dec
mov
lahf
xor
stos
add
pop
aaa
mov
mov
sbb
add
dec
push
scas
cmp
loopne
adc
and
adc
fiadd
or
sub
js
arpl
stos
mov
sahf
jo
sub
and
xchg
adc
pusha
enter
sbb
or
gs
loop
ror
popa
aaa
repz
retf
xor
loop
xchg
div
cmp
dec
clc
rol
repz
inc
pusha
sbb
cmc
sub
add
and
sahf
push
mov
push
lods
loopne
das
dec
add
add
mov
call
int
inc
into
enter
adc
fs
sbb
scas
push
adc
pop
enter
push
popa
and
js
xor
lea
mov
mov
xlat
lods
out
xor
xchg
sub
ins
aaa
outs
(bad)
clc
jbe
outs
inc
fucom
sbb
mov
jo
sti
add
xchg
or
ror
mov
scas
fwait
iret
sub
or
sbb
mov
adc
pusha
ret
int
es
das
lahf
mov
sbb
inc
adc
pop
in
push
dec
xchg
jmp
jo
jne
push
pusha
jno
add
(bad)
xchg
xchg
sbb
es
cmps
in
dec
rcr
push
(bad)
mov
mov
scas
dec
xor
add
cmps
lock
(bad)
in
dec
adc
or
mov
mov
mov
inc
pop
aaa
inc
mov
or
inc
pop
adc
cwde
sub
in
add
jns
or
or
pop
mov
cmp
fsin
test
(bad)
jbe
push
push
cmp
push
lahf
cmps
mov
popa
cld
lock
pusha
loop
push
inc
lds
jl
shl
adc
fsubr
push
(bad)
cmp
out
hlt
or
add
(bad)
jo
int
clc
push
aaa
movs
xchg
outs
xchg
loopne
and
rep
mov
push
dec
mov
call
out
movs
cmps
cmp
(bad)
fmul
fdivr
int
test
shl
jb
or
cmp
and
jae
out
ins
xchg
stos
mov
mov
jno
pop
fucomp
fild
ins
cmps
jbe
out
leave
xor
inc
pop
and
(bad)
arpl
add
adc
adc
push
jns
and
xor
mov
outs
cmps
jbe
repz
imul
push
adc
imul
and
cmp
xchg
jge
xchg
jge
push
jb
and
aaa
jnp
add
or
adc
not
shl
pop
xor
adc
(bad)
in
jns
jg
repnz
je
cmps
outs
mov
add
adc
xchg
bound
addr16
cwde
sbb
popa
cmp
add
js
popa
inc
int3
gs
in
xchg
sbb
inc
js
mov
ret
sbb
js
lds
push
je
movs
add
xor
sub
repz
xchg
rol
and
adc
jne
test
mov
and
dec
xchg
xor
adc
jle
xor
add
mov
outs
loope
add
daa
push
inc
adc
sbb
js
outs
push
pusha
or
adc
and
leave
adc
cmc
xor
jp
dec
call
ret
jns
jecxz
add
add
mov
mov
xchg
data16
in
jge
gs
mov
jne
cmp
mov
adc
xchg
loope
leave
gs
(bad)
clc
js
(bad)
push
cmp
sub
ins
aas
div
fsubr
pop
cmc
add
imul
mov
mov
sub
xchg
xchg
and
mov
outs
sbb
test
inc
je
(bad)
mov
xor
push
lea
sub
cmp
xchg
test
sub
fdiv
jmp
jae
mov
shl
fidiv
mov
xor
add
and
and
imul
sbb
nop
mov
xor
push
(bad)
adc
jae
push
sub
es
mov
fwait
ss
sub
inc
pop
and
inc
xor
and
int3
xchg
ja
movs
mov
es
in
jno
aaa
inc
xor
xchg
callw
xchg
jb
or
pusha
xchg
sub
mov
push
mov
ss
jbe
add
push
xor
repz
loope
imul
test
jno
call
imul
and
in
pop
xor
div
imul
data16
inc
push
cwde
loope
mov
pop
mov
ficom
cwde
mov
fwait
ret
fcom
xchg
jno
addr16
xor
push
popa
and
xor
ret
je
bound
mov
(bad)
aad
mov
push
add
test
dec
jg
mov
push
fwait
jle
(bad)
push
fucom
nop
out
jle
push
ins
sar
pop
in
adc
sub
js
sub
mov
jne
jns
cwde
adc
fs
cli
nop
add
dec
nop
inc
icebp
jae
ret
sub
dec
lahf
pop
repnz
cmp
dec
pop
retf
xchg
push
mov
xchg
cmp
pop
push
mov
xchg
dec
push
push
inc
pop
sbb
sbb
xchg
inc
mov
sub
xlat
jno
or
test
cmp
sub
push
xchg
aad
cwde
fwait
sar
popa
(bad)
mul
or
imul
sbb
jnp
dec
push
dec
shl
das
push
mov
icebp
xor
je
data16
push
add
xchg
ins
retf
mov
push
data16
push
movs
aam
dec
dec
mov
push
xor
jne
add
cmp
add
dec
popf
retfw
xchg
dec
and
aam
(bad)
pop
mov
sbb
es
jno
jmp
pop
daa
push
pop
xor
mov
ret
test
mov
bound
dec
push
mov
sbb
enter
push
xchg
pusha
add
movs
test
ds
push
retf
or
jb
sbb
mov
in
add
jb
xor
jb
inc
addr16
push
inc
push
add
jnp
xchg
or
stos
ja
jmp
lods
inc
stos
mov
ja
mov
fisubr
add
and
popf
inc
mov
cmp
xchg
dec
and
and
mov
test
fidivr
xor
fldenv
test
retf
in
icebp
add
aas
outs
cmps
add
sahf
add
inc
or
outs
int
cmp
add
movs
push
jmp
addr16
inc
out
scas
mov
out
fwait
and
mov
fwait
sub
mov
lds
adc
es
pop
cmc
aaa
pop
sub
lods
out
test
popf
ss
bound
and
add
jns
mov
scas
enter
mov
les
inc
add
push
popf
sbb
mov
pop
stos
outs
aas
sub
mov
mov
jp
inc
push
xor
les
push
xchg
adc
movs
pushf
(bad)
pusha
and
add
fcomi
jns
stc
call
les
and
pushf
bound
cli
and
mov
(bad)
in
cmp
sub
mov
gs
bound
pop
inc
pusha
mov
xchg
add
outs
ja
cmps
mov
in
js
(bad)
lds
jo
xchg
cmp
push
das
rcl
shl
mov
dec
mov
je
mov
mov
cli
aaa
mov
mov
add
outs
in
les
pop
jno
adc
push
adc
jnp
add
inc
lahf
and
xor
dec
mov
xchg
jnp
xchg
cmp
dec
addr16
pop
jns
(bad)
in
test
inc
mov
shl
das
arpl
push
jnp
pusha
loop
pop
jns
xor
test
out
jno
inc
add
mov
stos
mov
adc
push
idiv
mov
jae
mov
push
xor
mov
mov
lock
add
xchg
xchg
pop
test
pop
push
pop
ja
daa
aam
xchg
dec
sub
pop
cs
sbb
push
cmps
ins
xchg
pusha
dec
mov
test
es
loop
or
cmc
stos
adc
xchg
(bad)
pop
mov
mov
push
dec
jmp
push
shl
inc
push
enter
jnp
gs
cmp
push
xlat
sub
sbb
(bad)
dec
les
movs
push
push
retf
and
mov
push
ins
leave
mov
icebp
push
push
push
(bad)
cmp
push
jmp
jb
cmp
scas
pop
sub
leave
sbb
shr
pop
loopne
into
mov
and
int3
mov
mov
xor
mov
enter
mov
retf
stos
and
mov
out
push
mov
push
and
adc
(bad)
jp
jae
cmp
mov
mov
enter
gs
sar
xor
inc
cdq
push
push
mov
jge
mov
sbb
jmp
inc
inc
mov
and
cld
dec
mov
pop
add
out
enter
ja
and
fidivr
mov
push
dec
in
or
jg
and
shr
cmp
aaa
mov
pop
popa
repnz
pop
leave
or
mul
aam
cmc
push
push
adc
dec
push
cmp
ja
sub
mov
xor
jg
adc
sub
fcomp
and
jns
jo
int
aam
inc
cs
fcom
es
ins
cmp
(bad)
jmp
arpl
neg
xchg
fisub
jp
and
push
push
jne
mov
ficom
inc
push
cmp
ja
bound
sub
sub
(bad)
cmp
fsubr
cmp
test
push
jnp
inc
sub
push
nop
std
(bad)
push
ds
push
fnstcw
adc
push
xchg
push
and
int3
and
adc
scas
push
not
leave
jmp
sahf
fs
in
stos
sbb
lahf
inc
sub
adc
push
cmp
pop
mov
mov
or
sar
aam
push
ss
sbb
popf
ficom
das
and
push
adc
aam
xor
fwait
inc
hlt
push
sbb
jns
fwait
lods
or
lds
lods
ficom
inc
test
(bad)
loopne
popf
jle
sub
ds
sbb
(bad)
loope
(bad)
ins
or
jo
inc
fiadd
xor
rep
dec
mov
repnz
(bad)
or
or
cmp
cmp
dec
stos
cmp
xor
popf
adc
test
sub
loop
jle
cmp
pop
cli
or
push
cs
xchg
fcmove
je
fcom
push
xchg
fadd
jle
js
inc
mov
outs
add
in
adc
ins
mov
sahf
xchg
imul
int
fnsave
push
mov
pop
ds
mov
mov
in
adc
dec
push
nop
(bad)
retf
push
sbb
push
fisubr
inc
(bad)
lods
out
(bad)
fild
add
std
sbb
xor
xchg
(bad)
jmp
and
or
push
dec
loop
add
push
sub
mov
lea
add
mov
cdq
int3
or
mov
sub
sub
in
ds
cmp
call
test
mov
retf
and
jge
arpl
jmp
jnp
cmp
fidiv
jmp
dec
cmp
mov
inc
(bad)
aam
in
pop
into
inc
int3
mov
fnstenv
loop
mov
mov
jp
ror
fnsave
scas
lock
cmc
int
xchg
shl
repz
push
adc
cmp
int3
outs
xor
popf
sub
dec
xchg
test
cmps
and
mov
push
scas
ss
ja
rcl
cmp
cs
jl
sub
inc
xor
and
jecxz
iret
scas
shl
into
cmp
and
xchg
ror
test
add
add
adc
imul
scas
pop
jmp
cmp
repz
adc
cld
(bad)
mov
push
or
hlt
xchg
cdq
jmp
hlt
sar
sbb
jl
out
xchg
daa
cmc
dec
(bad)
or
mov
dec
inc
pushf
stc
jp
push
out
in
prefetcht0
and
enter
inc
mov
mov
pop
(bad)
and
inc
stos
daa
dec
shl
pop
jmp
adc
xchg
repnz
push
push
fldenv
push
adc
fdivrp
add
cmp
test
and
rol
add
int3
and
pop
shr
inc
adc
lds
dec
and
pop
fsubrp
(bad)
mov
(bad)
mov
dec
add
add
out
lahf
cli
mov
sub
dec
xor
fild
out
sti
inc
inc
sub
or
cs
dec
fs
push
xchg
add
add
scas
neg
(bad)
pop
leave
gs
xchg
push
rcr
adc
xchg
popa
inc
adc
int
and
or
sub
retf
xor
xor
shr
or
mov
imul
nop
pusha
(bad)
push
enter
outs
sub
push
dec
ss
div
adc
dec
lods
not
mov
js
aad
adc
xchg
outs
dec
sbb
imul
pop
adc
fsubr
push
adc
imul
imul
(bad)
sbb
std
mov
and
sbb
and
in
cmp
xchg
les
mov
adc
pop
push
jp
cld
loopne
xor
push
and
adc
pusha
(bad)
lods
outs
jno
nop
jp
or
sub
inc
(bad)
jg
sub
jmp
cwde
cmc
jmp
inc
or
push
enter
sbb
pop
inc
xor
jg
mov
xchg
(bad)
xchg
jbe
xchg
mov
mov
rol
jns
dec
test
mov
outs
cmp
xchg
ficomp
(bad)
cli
lods
rol
out
jl
(bad)
mov
mov
mov
jbe
sub
lea
cmp
pop
das
gs
push
shl
popa
pusha
stos
jne
jb
mov
inc
xor
xchg
dec
lock
mov
rol
add
pushw
pop
push
outs
or
pushf
test
xchg
dec
sub
int3
cmp
mov
ins
mov
dec
push
ret
mov
jp
call
cmc
imul
retf
les
add
lods
cmp
addr16
mov
adc
lock
cld
jbe
dec
xchg
scas
push
cmp
inc
jne
inc
cmp
mov
mov
in
jno
cmp
stos
(bad)
mov
xor
cmp
xchg
arpl
addr16
mov
fimul
test
mov
cmp
aaa
mov
inc
daa
ins
data16
adc
and
test
mov
or
ret
add
mov
push
sbb
mov
cmp
nop
je
adc
cmp
or
mov
mov
inc
leave
add
pop
and
aam
pop
push
lea
jmp
inc
stc
dec
ror
sub
adc
adc
cmp
repz
and
xchg
rcl
add
add
bound
xchg
aam
mov
inc
sbb
xchg
jae
sub
mov
arpl
add
and
int
add
nop
adc
lods
(bad)
xlat
jb
or
xchg
aaa
cmp
ror
cmc
push
mov
mov
or
rol
or
imul
xor
dec
sub
cmc
int3
and
pop
sbb
mov
pop
dec
push
pop
sbb
rcl
or
and
in
push
loope
pop
cmp
cmp
bound
(bad)
es
loope
jne
scas
push
bound
pop
mov
pop
and
adc
out
xor
bound
aad
adc
push
iret
call
out
nop
push
lock
lods
mov
pop
xchg
cmp
fidiv
mov
jae
out
test
iret
mov
(bad)
fwait
outs
stos
mov
add
jbe
mov
mov
sar
dec
sbb
enter
sbb
adc
fwait
out
(bad)
cmp
cmp
push
mov
jbe
mov
dec
cld
inc
sbb
dec
std
jno
sub
popf
cdq
not
mov
gs
pop
jo
sbb
and
sbb
std
jbe
xlat
fidivr
daa
xchg
in
call
jle
jmp
scas
cmp
ret
pop
daa
or
and
add
add
add
sub
add
xchg
add
add
add
data16
data16
cdq
add
cdq
add
cdq
xor
int3
add
int3
add
inc
xor
xor
push
xor
data16
add
add
xor
xor
data16
int3
add
xor
cwd
int3
cwd
jmp
int3
xor
push
int3
int3
data16
jmp
int3
cdq
cdq
call
int3
cdq
int3
call
int3
int3
int3
dec
int3
int3
dec
(bad)
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
jo
sub
(bad)
sbb
add
sub
add
jbe
in
jp
int
push
sbb
mov
mov
mov
clc
sub
mov
ja
arpl
xchg
arpl
jp
add
or
jbe
mov
push
imul
add
xchg
xchg
cwde
push
mov
imul
jns
mov
jl
ret
cmps
(bad)
push
(bad)
mov
movs
mov
jp
xlat
xlat
(bad)
fmul
(bad)
mov
test
gs
jne
fst
nop
push
stos
rcr
push
aad
cmc
cmc
fbstp
loop
outs
push
int3
(bad)
call
push
pop
add
mov
add
fstp
push
std
mov
mov
fld
sub
loope
push
or
stos
fnsave
call
push
cmc
cmp
or
sub
rcl
jbe
stos
mov
dec
and
imul
data16
out
test
cmp
test
add
sahf
jg
mov
mov
push
imul
add
xchg
inc
imul
sbb
fwait
push
sahf
pop
jne
jns
mov
stos
push
fidivr
dec
ret
inc
nop
pusha
popa
leave
test
push
mov
ror
(bad)
xor
or
inc
sub
add
inc
sahf
xchg
cmp
test
ds
push
fild
xchg
dec
pop
int3
xor
sbb
mov
mov
pop
adc
jg
shr
(bad)
inc
sub
xor
ins
mov
ret
push
jmp
and
out
cld
(bad)
and
jnp
out
inc
fidiv
aam
les
retf
jne
pop
sbb
dec
xor
jge
jo
fild
push
push
(bad)
fistp
(bad)
and
cmp
mov
loope
xlat
mov
in
add
ret
pop
ss
push
pop
jne
cwde
in
add
ficomp
test
ss
rcl
jns
and
inc
mov
mov
call
dec
cs
add
xchg
and
call
lods
adc
fisubr
aas
stc
and
pop
ss
icebp
mov
aaa
adc
add
bound
lock
outs
adc
lea
jno
adc
jb
push
nop
neg
sahf
dec
in
inc
jo
push
adc
inc
add
bound
hlt
adc
nop
mov
mov
sub
xchg
dec
pop
dec
mov
xchg
stc
pop
mov
add
imul
hlt
pop
xor
lods
mov
int
pop
and
shl
mov
pushf
loop
add
push
pop
(bad)
repz
mov
fs
es
dec
clc
frstor
sahf
pushf
pop
loopne
dec
pop
cmp
and
imul
or
test
xchg
fldenv
pop
mov
sub
xor
inc
test
adc
cdq
mov
(bad)
into
mov
push
jb
adc
ins
pop
(bad)
pop
addr16
lods
out
icebp
xor
adc
push
nop
push
popa
sub
sub
movs
push
pop
pusha
ss
stos
pop
mov
stos
jmp
fstp
xchg
mov
mov
je
push
int3
sub
into
push
mov
cmp
neg
inc
mov
fcom
je
stos
xchg
and
cmp
or
adc
pop
xchg
xor
gs
sbb
push
inc
jmp
aad
pop
dec
xor
arpl
lea
into
pop
sub
lahf
cwde
std
mov
xlat
outs
push
lods
pop
test
stc
(bad)
pop
sar
ret
out
or
sahf
add
sbb
dec
mov
dec
xlat
lds
not
sub
clc
out
xchg
in
sahf
xchg
pop
adc
loope
outs
adc
sbb
add
gs
jns
jp
or
cs
int
or
push
xchg
fld
fcom
ins
add
mov
(bad)
les
gs
call
mov
(bad)
lods
xchg
fistp
pop
xchg
jl
cld
pop
xor
shl
popa
mov
clc
inc
adc
jae
inc
pop
out
scas
inc
addr16
mov
adc
cmp
mov
mov
cmps
inc
and
mov
or
and
dec
call
sbb
or
loopne
or
retf
in
sbb
xchg
xor
or
ror
(bad)
sub
aas
or
mov
inc
frstor
clc
mov
or
scas
int3
and
push
iret
xchg
mov
or
test
sub
dec
inc
fcmovbe
mov
mov
and
loopne
jge
mov
iret
fsubr
inc
les
es
xchg
adc
adc
fld
or
test
jns
add
arpl
pop
or
or
push
inc
inc
xor
and
lods
push
cli
mov
xchg
pop
or
mov
sti
cld
pop
adc
dec
jmp
dec
pusha
add
push
cwde
mov
inc
aas
adc
cmp
xchg
jo
mov
push
ins
repnz
lahf
clc
imul
adc
mov
mov
inc
mov
dec
jno
inc
sar
and
pop
jb
mov
jmp
pusha
mov
mov
(bad)
mov
sar
(bad)
test
xchg
arpl
xor
or
mov
sbb
pop
mov
ds
xchg
shl
sahf
cmpxchg
add
add
or
jo
xchg
outs
mov
push
push
mov
push
xor
adc
mov
cmps
sbb
fistp
pushf
dec
lea
mov
imul
popfw
sub
push
inc
sbb
ins
mov
rcl
and
cmp
lods
add
xchg
arpl
inc
jmp
push
movs
inc
sub
push
mov
cmps
dec
aad
dec
cmp
add
shl
inc
sub
mov
add
mov
mov
jmp
cmps
mov
jno
push
jae
mov
retf
add
push
xlat
loope
adc
dec
fwait
cmp
add
movs
add
sub
sub
cmp
inc
dec
jns
in
mov
cwde
inc
scas
and
loopne
int
adc
les
sbb
jno
ror
in
dec
shl
imul
les
shl
idiv
pop
and
add
test
jns
sbb
test
fsubr
mov
int
fwait
hlt
mul
fcomp
add
add
sub
mov
cmp
jge
pop
fisttp
div
ret
sar
arpl
jb
daa
pushf
movs
sar
pop
sti
ficom
movs
and
add
rcr
dec
xchg
sbb
mov
push
dec
mov
enter
push
mov
ror
push
mov
push
and
fst
cld
dec
inc
in
shr
sbb
push
dec
mov
mov
jge
mov
add
xor
adc
pop
add
push
lahf
pushf
add
test
loope
sub
sub
xor
(bad)
fild
lods
ror
hlt
mov
add
popf
sub
mov
iret
sub
(bad)
(bad)
mov
jo
imul
sbb
into
lods
push
push
add
jmp
cmc
jbe
sbb
aam
int3
and
mov
in
mov
rcr
(bad)
jmp
push
push
add
addr16
cmp
int
xchg
xchg
movs
repnz
dec
out
ss
xor
push
gs
sub
inc
xor
sub
pop
fwait
mov
add
xor
cmp
mov
add
ret
sar
dec
jmp
loop
add
xor
cmps
mov
repnz
cmc
in
rcl
dec
das
idiv
mov
in
cmp
push
inc
jmp
into
outs
fidiv
jge
cmps
mov
xor
pop
bnd
sti
ret
dec
sub
cmc
hlt
imul
dec
jb
ror
outs
dec
sbb
sub
mov
cmp
cs
lea
and
pop
sub
jge
jnp
add
stc
mov
in
push
push
mov
ror
pop
jmp
js
(bad)
pop
in
pop
test
push
sub
pop
and
jnp
sbb
test
cdq
sbb
retf
mov
jbe
lahf
stos
movs
mov
mov
push
mov
push
jae
into
cmps
sub
rcl
push
(bad)
and
daa
fnsave
add
cmp
out
sbb
idiv
es
or
int
pop
(bad)
or
pusha
push
or
pop
or
retf
dec
sahf
xchg
das
mov
je
int
jle
and
not
mov
in
movs
sbb
push
jecxz
mov
xor
lods
sub
dec
(bad)
ss
adc
dec
das
(bad)
ins
jmp
and
inc
xor
and
popa
or
dec
fld
stc
jb
sub
ins
out
dec
and
and
dec
loope
pop
adc
mov
pop
inc
push
jno
dec
adc
pop
sub
cmp
cmp
add
ja
inc
test
movs
xor
and
gs
cli
mov
jne
js
push
and
jae
mov
mov
xor
loopne
push
xchg
push
push
sbb
adc
jae
mov
sbb
jne
add
mov
cmp
and
imul
jg
and
xor
sub
dec
pusha
test
mov
or
adc
jne
pop
mov
add
(bad)
jle
clc
add
or
mov
xor
icebp
pusha
ja
sbb
in
inc
mov
mov
sub
nop
test
push
pop
mov
push
xor
adc
(bad)
cmps
add
and
cli
repnz
(bad)
pusha
iret
mov
test
imul
add
push
xchg
dec
gs
jb
push
sbb
sub
es
data16
cmp
inc
mov
pop
xchg
and
ret
inc
ins
push
lock
xchg
add
or
xor
add
nop
sub
mov
pop
rol
pusha
cmp
cmp
pusha
imul
push
sub
dec
adc
inc
or
add
aad
lds
cmp
mov
stc
sub
mov
adc
jno
and
out
xchg
test
or
inc
xor
inc
sbb
outs
and
ja
and
ja
dec
sub
test
and
pop
dec
xchg
add
daa
adc
mov
test
or
xchg
jb
mov
imul
cmp
add
or
xchg
stos
aaa
pop
jne
sub
imul
jns
call
ja
iret
test
aaa
je
push
rol
push
adc
(bad)
outs
imul
das
pushf
inc
nop
test
in
je
loopne
inc
push
push
xchg
add
div
xchg
xchg
je
ja
imul
pop
cdq
xor
adc
imul
in
outs
cwde
push
daa
and
inc
adc
data16
xchg
pop
fadd
scas
js
mov
jo
jns
add
test
cdq
out
push
repnz
fsubp
adc
sbb
push
call
or
dec
xchg
push
daa
pushw
fwait
pusha
or
jmp
adc
adc
test
xchg
add
xor
imul
inc
xor
or
push
mov
popf
or
and
xchg
pop
xchg
popf
mov
jnp
xchg
imul
xchg
push
mov
arpl
xor
sub
jmp
(bad)
sar
popf
rcl
jp
addr16
cmp
mov
in
jp
adc
fidiv
outs
mov
das
clc
push
mov
and
pusha
sbb
jge
mov
mov
popa
xchg
fld
mov
stc
lahf
and
fdiv
sbb
add
xchg
out
sbb
and
xchg
rcr
xchg
cbw
mov
and
mov
ficomp
or
sbb
js
movs
pop
mov
dec
aas
test
sub
sub
jne
sbb
jge
mov
enter
imul
adc
mov
inc
(bad)
jns
mov
lahf
outs
cdq
jne
retf
clc
(bad)
sti
xchg
jae
stc
mov
add
call
dec
lods
call
aaa
fwait
push
cmps
mov
xchg
mov
cmp
mov
pop
in
add
or
cwde
cmp
and
push
fwait
push
jp
cmp
push
jne
add
xchg
cdq
test
and
dec
mov
mov
test
movs
push
pop
push
push
mov
fwait
mov
jne
adc
test
inc
movs
imul
loopne
sbb
xor
jns
dec
or
inc
xor
push
dec
test
aam
jb
push
adc
lods
cmp
mul
and
mov
and
pminub
mov
xor
test
add
fst
xchg
mov
mov
mov
out
or
mov
loopne
test
bound
xchg
sbb
loopne
lods
jae
movs
cs
pop
div
pop
mov
xchg
xchg
push
jbe
les
or
mov
add
push
mov
popf
and
pop
aam
or
test
jno
sub
xor
pop
iret
inc
and
xchg
bound
data16
or
inc
push
mov
sbb
bound
jmp
cmp
jmp
inc
pop
stos
xlat
out
addr16
lock
cmp
(bad)
sbb
sbb
mov
loope
bound
pop
jmp
push
sub
pop
adc
push
jecxz
and
add
sbb
pop
pop
mov
bnd
mov
mov
cmp
adc
adc
sti
sub
mov
sbb
cmp
add
add
aad
jne
jp
add
retf
push
lods
arpl
sbb
xchg
rol
rol
mov
add
add
mov
push
mov
jp
std
sbb
pop
shl
in
pop
push
and
inc
adc
cmp
daa
xchg
and
inc
data16
inc
cdq
repnz
mov
and
test
stos
jo
lods
sub
inc
and
stos
cmp
adc
fs
movs
pop
mov
mov
or
outs
xchg
lods
sar
cwde
pop
cmps
(bad)
xchg
retf
pop
mov
in
out
pusha
lds
jo
xor
mov
fdiv
mov
inc
cwde
fs
inc
xor
push
pop
sub
(bad)
jmp
inc
cmp
popa
adc
(bad)
icebp
rcl
xor
call
repnz
(bad)
mov
pop
je
sbb
pushf
scas
(bad)
sbb
dec
and
xlat
sub
fs
sub
add
imul
cmp
sbb
daa
cld
mov
pushf
stos
mov
mov
aaa
int
retf
sbb
nop
add
div
jns
cmp
and
jl
xor
(bad)
bound
adc
inc
mov
in
cmps
rcl
shl
js
sti
inc
cmp
or
retf
pop
outs
mov
cmp
adc
jp
stos
retf
mov
nop
pop
pop
mov
sahf
gs
push
mov
xor
push
fstp
pop
repnz
and
leave
push
mov
(bad)
inc
dec
ins
cmc
popa
fbld
ins
sbb
dec
test
mov
shl
dec
sub
loope
jg
sbb
loope
or
aam
in
into
lock
xchg
dec
bound
and
mov
push
scas
adc
lods
sub
fwait
(bad)
and
aam
stos
mov
in
scas
or
mov
test
ficomp
in
and
xchg
mov
mov
mov
and
shl
mov
aam
push
pop
adc
pop
jo
test
sbb
inc
pop
jg
push
lods
xor
jp
and
jle
or
sar
sub
jg
cld
lahf
push
push
bound
dec
pop
mov
xchg
lods
cmp
rcl
mov
mul
aam
push
movs
arpl
popf
sbb
fs
fnstcw
inc
pop
xor
outs
xchg
fcomp
mov
cmp
jg
xor
pop
push
jne
fwait
sub
jo
es
inc
inc
adc
xchg
add
out
cmp
sti
dec
in
popf
sub
ret
xchg
xor
movs
adc
stc
int
add
inc
icebp
es
in
shl
cdq
pushf
aad
xor
fdivr
dec
rcl
push
add
dec
rcl
xchg
mov
inc
bound
and
mov
scas
lea
dec
adc
cmp
dec
adc
push
cmps
adc
jge
and
int
test
(bad)
pop
aam
adc
ins
not
shl
mov
xchg
pop
jne
or
xlat
stos
and
pushf
ins
mov
dec
push
add
loop
daa
inc
cmp
(bad)
in
es
xor
or
aam
popfw
call
and
sbb
push
sbb
enter
xor
and
mov
ss
icebp
aam
sbb
or
jbe
retf
out
in
jecxz
ret
loop
inc
call
les
sub
aam
(bad)
pop
(bad)
and
mov
adc
mov
jp
sbb
mov
or
inc
out
in
mov
fisub
cmp
mov
mov
sub
inc
mov
icebp
mov
or
je
push
pop
lahf
xor
fsub
mov
retf
pop
jge
aad
sub
mov
jmp
sbb
mul
inc
in
cmps
and
rcl
dec
sub
dec
mov
shr
mov
adc
out
pop
pop
out
sbb
pop
jb
jae
and
mov
mov
pop
dec
out
adc
adc
xor
les
int3
sbb
popa
(bad)
sbb
and
or
sbb
and
mov
and
inc
out
shr
stos
dec
aaa
iret
mov
mov
jnp
jg
pop
inc
cs
popa
xor
ds
pop
icebp
mov
sahf
popa
fiadd
test
mov
mov
in
mul
repz
push
sbb
inc
fisttp
ss
das
loope
jno
(bad)
hlt
sbb
cmp
adc
fwait
(bad)
sbb
lock
mov
cmp
gs
mov
sub
or
push
xor
push
outs
dec
scas
add
(bad)
shl
push
and
xor
dec
loop
adc
call
and
imul
inc
fcmovnu
pop
test
cmp
sub
pop
out
sbb
xor
fld
sub
and
jmp
fidiv
mov
sbb
leave
pop
jecxz
mov
adc
xor
jno
pop
push
dec
inc
and
seto
xchg
mov
mov
xor
daa
outs
pop
shl
xlat
pop
and
popa
adc
shl
pop
push
and
outs
pushf
lods
cmp
imul
repz
(bad)
mov
sar
adc
cmc
ficom
inc
and
(bad)
sub
icebp
jecxz
test
and
loope
push
push
mov
inc
inc
and
test
xchg
dec
rcl
or
push
add
dec
int3
ds
or
jo
or
inc
inc
xor
jmp
and
jle
in
mov
lods
shr
shr
dec
nop
or
and
loope
sub
lods
mov
imul
or
xchg
or
add
add
push
lods
mov
into
je
adc
xchg
outs
dec
xchg
or
push
loopne
push
xor
(bad)
scas
push
sub
add
or
leave
mov
cmp
cli
scas
push
(bad)
outs
shr
test
dec
ins
push
jmp
fsubr
add
fimul
xchg
adc
inc
pop
dec
call
xor
shl
sub
dec
and
sub
mov
and
mov
mov
bound
xchg
xor
dec
mov
mov
jo
retf
aas
push
cld
xchg
adc
sahf
(bad)
pushf
shr
les
sbb
retf
in
inc
or
cmp
rcr
jl
cmps
or
mov
idiv
pop
lock
pop
or
xor
movs
in
xor
shr
mov
adc
adc
popa
add
imul
leave
xor
jbe
pop
mov
loopne
xor
adc
cmp
lods
mov
pop
int
cmp
cmp
mov
and
xor
lds
aaa
scas
gs
mov
and
xchg
or
sub
fwait
push
fs
fst
dec
loopne
push
call
push
lea
mov
out
into
imul
mov
das
xchg
xchg
pop
mov
inc
out
mov
xchg
iret
inc
sbb
je
sti
lods
test
inc
sub
das
sub
scas
cmp
cs
shl
mov
sub
test
cmp
std
stos
repz
(bad)
jp
jmp
pop
sbb
iret
add
and
lds
out
mov
jb
adc
dec
(bad)
push
jne
cmps
sub
cmp
mov
mov
retf
inc
sbb
ret
push
daa
pushf
or
jo
push
pop
mov
inc
call
mov
int3
adc
lods
cmps
test
retf
jmp
aam
xor
retf
xor
fwait
arpl
mov
xchg
dec
cmp
jae
cmp
adc
inc
add
or
or
rol
jne
push
sar
ror
and
loopne
int
sub
jl
push
cmp
in
xor
rol
xchg
sar
dec
fisttp
aam
add
or
dec
adc
lods
aad
in
push
in
aad
je
rcl
rcl
jne
bound
cmc
je
push
sub
jns
(bad)
push
scas
nop
gs
ins
mov
dec
std
(bad)
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
shr
add
add
or
or
add
or
add
add
add
add
hlt
push
mov
addr16
dec
inc
add
mov
or
popa
add
dec
inc
inc
push
js
in
popf
jns
data16
andnps
or
test
repz
xor
adc
test
sub
mov
popa
xor
sbb
sub
push
xor
call
push
xor
popf
out
movs
xchg
dec
mov
pop
sahf
jle
ja
mov
ds
cmp
jmp
cmc
sar
div
sti
outs
aad
fsubrp
cmps
stos
xchg
push
js
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
mov
(bad)
fldenv
sahf
and
cmp
sub
adc
mov
jp
sub
outs
into
paddsb
jg
inc
adc
inc
push
cmps
xchg
in
and
cwde
out
jnp
ret
add
jns
jb
popf
xchg
repnz
or
or
test
add
push
jge
push
lea
xor
je
push
or
mov
lods
fsubr
jns
adc
mov
or
ds
push
outs
(bad)
xlat
out
movs
and
push
outs
test
(bad)
loopne
cmp
das
dec
dec
adc
inc
pop
pop
xrelease
out
mov
or
hlt
push
mov
or
sub
mov
push
pop
xchg
cmp
in
mov
adc
popf
mov
or
add
pop
pop
imul
or
fldenv
aas
xor
test
rcr
inc
and
retf
push
bound
fdiv
loop
or
(bad)
xchg
inc
iret
fnstenv
inc
inc
aam
arpl
loop
and
in
inc
mov
mov
jmp
sub
movs
sbb
(bad)
add
push
shl
sub
mov
jmp
sub
xor
add
fidivr
pop
cwde
enter
psubsw
test
and
leave
sub
pop
cwde
pop
push
xor
lds
mov
push
xchg
movs
imul
adc
sbb
bound
(bad)
pushf
sub
xor
enter
or
mov
push
mov
mov
imul
push
mov
mov
lea
lds
mov
inc
and
jbe
mov
push
adc
outs
inc
sub
in
adc
push
xchg
push
mov
call
sub
push
mov
inc
jle
shl
pop
mov
imul
inc
xor
xchg
call
cdq
push
pushf
retf
sub
inc
inc
or
cmp
jle
call
mov
and
xchg
test
or
data16
mov
push
xor
pushf
sub
jp
inc
adc
ror
inc
adc
xchg
jo
shl
lods
push
jbe
jb
or
adc
clc
xchg
add
fst
cmp
mov
mov
mov
cld
push
cmp
inc
xchg
sbb
mov
mov
imul
in
shl
stos
addr16
or
and
out
push
lds
add
mov
dec
jecxz
and
jle
leave
xor
xchg
adc
xchg
or
outs
int
jno
in
jae
cmp
sbb
mov
lea
sbb
mov
add
pop
pop
jb
pop
mov
or
shl
sub
(bad)
ins
lds
xchg
fistp
add
lds
inc
(bad)
mov
cmps
les
sub
mov
or
in
leave
push
and
test
inc
stc
push
sti
pop
inc
daa
push
lds
sbb
mov
inc
movs
pop
jmp
add
cmps
hlt
push
jmp
jge
enter
sbb
ror
lea
push
xlat
repnz
or
sub
aaa
inc
aaa
sbb
aas
inc
ins
xchg
scas
jne
xchg
jbe
call
loop
call
and
fistp
arpl
xor
cdq
test
daa
push
inc
adc
inc
shr
adc
aam
adc
xor
add
adc
push
lds
and
add
push
dec
sbb
or
movs
xchg
gs
shl
call
mov
(bad)
cmp
xor
pop
push
adc
lahf
mov
dec
out
leave
dec
repz
jnp
mov
xor
call
add
push
mov
call
mov
call
pop
pop
mov
push
mul
cmp
test
push
push
enter
xchg
sub
jmp
mov
xchg
xor
mov
daa
cwde
dec
call
mov
test
ins
out
xor
lods
xor
mov
xchg
and
and
cmp
push
loopne
popf
cmp
pop
mov
lods
sub
aam
cmps
xchg
ror
ror
out
push
adc
push
pop
mov
inc
pop
gs
mov
retf
mov
sbb
loop
(bad)
js
test
dec
pop
fdiv
imul
inc
inc
cs
pop
or
leave
or
add
retf
scas
push
call
pop
ds
test
into
into
stos
adc
aad
in
or
pop
ret
stos
cwde
fild
or
mov
or
xor
aad
movhlps
or
mov
in
int3
dec
push
dec
pop
jo
and
mov
in
(bad)
xchg
stos
dec
xor
add
jp
fucomi
pushw
call
or
ja
sbb
push
xor
jmp
dec
pop
adc
rcl
add
xor
inc
mov
push
imul
fcom
push
pop
sbb
shl
aas
cwde
adc
popa
jp
(bad)
xor
popf
aaa
movs
lods
sub
movs
ins
push
mov
mov
adc
jg
shl
push
fadd
dec
xor
push
push
and
les
cdq
jmp
sub
mov
adc
test
inc
pop
imul
mov
sbb
je
lods
xor
push
mov
fnstcw
jmp
or
xchg
aas
sub
add
push
xor
mov
mov
arpl
push
cmp
sub
stc
pop
cmp
mov
imul
test
shr
into
cmps
mov
push
mov
clc
jecxz
cmps
or
push
and
xchg
push
cmps
(bad)
adc
inc
add
fisub
retf
jecxz
retf
cmps
(bad)
xchg
cmp
adc
dec
and
dec
data16
pop
sub
pushf
popf
add
mov
test
jne
inc
xchg
pop
mov
cld
imul
sbb
push
mov
push
lods
movs
xchg
cmp
mov
adc
mov
popf
xchg
inc
int3
mov
fdiv
test
push
or
cld
fldenv
adc
adc
adc
ret
retf
sub
cmp
jne
pop
movs
or
call
xchg
in
shl
repz
jmp
xor
jne
lahf
mov
ja
push
pop
(bad)
cld
nop
ret
cmps
xchg
sub
enter
push
retf
sub
push
call
shl
adc
call
mov
and
mov
cdq
out
xor
pop
imul
fldcw
push
cmp
mov
inc
call
in
les
or
outs
xchg
pop
imul
dec
xchg
ds
es
jmp
(bad)
xlat
xchg
xchg
sbb
sub
add
stos
popf
add
or
push
cmps
dec
xor
sbb
or
enter
dec
jmp
bound
or
push
mov
daa
sub
push
push
dec
aam
adc
mov
mov
cmp
in
and
and
xchg
pop
pop
adc
dec
fcom
fimul
loope
add
add
xchg
push
stos
mov
ds
add
jnp
(bad)
adc
cld
gs
arpl
xor
(bad)
sub
je
call
call
sbb
rcr
ror
jp
in
mov
push
sahf
into
pop
jg
sbb
add
jae
xor
dec
cdq
sub
fld
(bad)
xor
loop
jno
sahf
push
lods
gs
pop
pop
push
(bad)
push
mov
push
out
addr16
cli
loop
(bad)
ins
pop
nop
push
cmps
jecxz
jne
retf
jnp
bswap
push
cmp
stc
stos
push
mov
stos
sub
jno
(bad)
push
cdq
popf
xchg
xchg
test
mov
outs
mov
and
cwde
sbb
dec
dec
inc
(bad)
call
dec
xchg
ds
adc
sub
push
inc
mov
out
cld
cmc
imul
sub
lods
xor
out
mov
stos
je
xor
xchg
imul
test
xchg
sub
stc
push
pop
push
stos
sub
movs
dec
and
inc
adc
jmp
ret
call
push
mov
lods
mov
or
mov
push
cdq
or
std
neg
ror
inc
cmps
mov
(bad)
ss
xchg
jmp
xchg
ds
sub
xchg
popf
jg
sbb
mov
add
repz
inc
xor
icebp
scas
push
retf
inc
pop
adc
sub
cdq
sub
aam
cmps
rol
call
mov
xor
pop
jmp
push
cmps
sub
mov
ins
adc
cmps
pop
imul
xlat
xchg
pusha
dec
in
adc
dec
scas
lods
xchg
pusha
xchg
cmp
inc
cmps
mov
ins
pop
in
push
loop
add
sub
pop
call
daa
dec
inc
pop
cmps
xor
hlt
sbb
xor
pop
push
pop
dec
and
les
lea
and
dec
cdq
mov
retf
leave
call
xchg
xor
push
or
pop
push
pop
or
dec
mov
call
imul
cmp
inc
shl
mov
xchg
push
les
ins
jge
pop
fmul
dec
ret
add
and
dec
pop
jmp
sub
xchg
(bad)
in
imul
js
pop
sbb
test
shl
(bad)
sar
push
inc
mov
retf
mov
mov
mov
call
adc
inc
lea
dec
movs
push
retf
jge
xor
stos
call
dec
imul
rol
mov
xchg
js
xor
pop
push
(bad)
push
cmps
or
jno
sbb
push
jg
jg
cmp
add
sbb
mov
aam
movs
cmps
mov
adc
repnz
push
pop
push
or
jmp
pop
xchg
test
bound
add
lods
test
and
and
mov
cmp
das
daa
sub
stos
xchg
cwde
push
dec
adc
rcl
repnz
xchg
jge
xor
jge
in
mov
dec
xchg
fisttp
add
pop
js
test
in
dec
in
retf
leave
call
sub
aas
xor
cli
je
ror
call
jns
cmp
jl
gs
data16
fs
fld
inc
inc
in
cld
lea
sbb
pop
pop
rcr
and
inc
cdq
mov
stos
xchg
push
push
xor
or
daa
(bad)
adc
add
mov
cmps
movs
cdq
add
call
jmp
inc
cmp
das
daa
retf
call
test
dec
cmp
pop
pop
mov
addr16
lods
rcl
loopne
leave
jb
int
xchg
push
std
lock
dec
cmp
retf
mul
fs
dec
mov
movs
sbb
mov
(bad)
ins
(bad)
sahf
mov
push
mov
add
push
ficom
movs
dec
jmp
movs
sbb
adc
jge
retf
xchg
cmps
push
adc
mov
fistp
xor
sahf
mov
aaa
call
in
or
pop
into
(bad)
xchg
lds
rol
pop
fidiv
test
inc
movs
ins
xchg
pop
jl
mov
icebp
push
int
aam
cmps
into
push
imul
dec
add
test
jb
bound
hlt
in
pop
push
and
cwde
cmp
test
or
popa
sbb
adc
push
(bad)
addr16
inc
xor
pop
gs
mov
dec
pop
dec
push
mov
call
sub
int3
in
cld
scas
aaa
lods
push
call
push
cmps
in
and
sbb
jge
gs
pop
mov
push
adc
ret
mov
mov
std
fisub
mov
mov
in
mov
jbe
sbb
mov
(bad)
push
cmc
fld
call
scas
xchg
das
xchg
xchg
aaa
in
int
dec
out
leave
rcl
sahf
jmp
ficomp
imul
pop
out
stos
iret
mov
jp
adc
sbb
push
pop
mov
mov
idiv
mov
mov
repz
cmps
xchg
inc
pop
xor
push
mul
mov
cmps
call
cmps
dec
xor
popa
repz
out
jl
jge
mov
addr16
push
lahf
jl
jge
mov
cdq
cmc
or
mov
hlt
jp
idiv
cmp
or
(bad)
aaa
aas
cld
loop
(bad)
lahf
fdivr
ins
xchg
fisub
clc
jmp
sbb
popf
cmps
xor
out
fdivr
(bad)
(bad)
xchg
fist
jns
jge
pop
into
retf
mov
jmp
mov
test
pop
mov
ds
aam
les
xchg
fdivr
sti
in
fidiv
push
cmp
in
xchg
aad
adc
or
out
cmp
(bad)
into
(bad)
jmp
scas
scas
mov
pop
outs
cmp
jno
push
mov
pushf
pop
scas
(bad)
loopne
cmp
xchg
(bad)
lahf
out
fnstcw
xlat
aam
pop
(bad)
lea
add
into
push
out
out
fcomp
shl
pop
pop
aaa
movs
jno
xchg
int3
mov
lods
sub
popf
not
addr16
out
retf
cmp
xchg
ins
and
lds
inc
fbld
xlat
fwait
into
lods
dec
mov
jecxz
add
xchg
aad
xchg
ficom
xchg
outs
stos
inc
push
xor
clc
cld
rcr
fdivp
pusha
mov
mov
arpl
jbe
es
call
dec
scas
aaa
ins
scas
aaa
out
jo
outs
push
cmp
adc
test
cmp
or
ss
ss
xlat
sbb
imul
cmc
jnp
stc
adc
loop
cdq
(bad)
mov
and
repz
stos
das
fld
sub
jge
in
leave
mov
pop
outs
jmp
pop
stos
das
fcom
cmp
in
sub
pop
pop
mov
pop
push
arpl
jge
fwait
jmp
mov
lods
cmc
inc
aaa
(bad)
cmp
ds
(bad)
lahf
aam
ret
push
lahf
jl
jge
out
outs
fdivrp
sbb
push
inc
pop
mov
mov
test
mov
dec
fsincos
xchg
xchg
xor
rcl
jle
std
xchg
pop
scas
icebp
(bad)
fadd
(bad)
les
jmp
iret
scas
iret
mov
xchg
outs
jp
mov
in
jl
add
jns
mov
js
mov
mov
sub
rcr
cmc
or
mov
cmc
popf
out
sti
cld
(bad)
lods
lahf
cmp
(bad)
cmp
jge
mov
mov
or
fadd
sahf
sub
push
sbb
btr
stc
aaa
cmp
mov
add
pushf
in
out
pop
pop
out
(bad)
neg
dec
push
mov
(bad)
mov
jge
loopne
inc
in
inc
in
ror
jge
out
movs
jle
xchg
fistp
or
xchg
xchg
aad
xor
cmc
in
arpl
xchg
push
lahf
jne
jnp
ret
push
sub
xor
(bad)
mov
sahf
fidiv
out
pop
popf
loope
adc
fdivr
(bad)
jnp
push
das
jb
xor
fucomip
mov
mov
pop
ret
mov
pop
jge
(bad)
jmp
jne
ficomp
(bad)
adc
jns
sti
xchg
cmc
cmc
not
cmps
pop
push
pop
mov
outs
jmp
cmp
test
jl
rcr
sub
jb
or
das
popa
mov
cmps
iret
mov
sbb
repnz
scas
fsub
jmp
lock
fsubr
xlat
ficomp
cli
out
retf
fsin
sbb
outs
xor
(bad)
mov
pop
xchg
scas
mov
mov
out
(bad)
(bad)
ficom
dec
ja
xchg
popa
pop
mov
mov
aad
mov
push
test
pop
mov
mov
push
lahf
cmp
dec
mov
pop
lahf
jg
mov
mov
xlat
into
mov
push
cmp
stc
popf
fistp
je
jnp
or
mov
int
mov
imul
in
in
cdq
sub
enter
enter
mov
call
out
pop
mov
sbb
cwde
int
aad
lods
sbb
outs
jl
xor
push
jnp
sbb
scas
mov
out
sbb
xchg
call
out
mov
mov
mov
lds
xchg
xchg
in
adc
leave
ins
adc
aas
jmp
or
cmp
ret
pop
adc
push
push
or
mov
jmp
out
sub
xchg
fist
ds
mov
loopne
leave
mov
out
shl
xchg
in
mov
ja
stc
movs
cmc
gs
or
jge
movs
(bad)
jbe
retf
(bad)
jns
dec
inc
mov
pop
aam
cld
test
pop
(bad)
aad
pop
and
int
scas
ror
sub
aad
scas
inc
push
icebp
xchg
fmul
mov
pop
push
mov
mov
mov
and
imul
jns
jnp
inc
addr16
inc
fistp
out
(bad)
jecxz
xchg
jmp
dec
inc
jbe
out
(bad)
movs
mov
xor
cmp
sub
scas
dec
push
out
dec
je
out
or
lods
jle
sti
jmp
jbe
pop
repnz
ja
or
sub
jbe
sub
jmp
call
shl
inc
push
icebp
adc
push
sub
xor
jne
jnp
lods
push
fdivr
dec
idiv
sti
fs
in
out
lea
mov
push
adc
cmc
cmp
cmp
scas
into
ins
(bad)
cmc
fs
ins
scas
dec
scas
inc
jg
sub
in
xchg
enter
fs
inc
out
mov
jno
xlat
(bad)
lods
nop
cmc
outs
stos
ret
cmp
rcl
out
(bad)
test
mov
jecxz
in
lods
aas
sub
pop
in
out
inc
mov
sbb
retf
inc
push
jae
stos
test
mov
not
lods
cmp
sub
or
aad
jge
btc
pop
outs
rcl
popf
loopne
sbb
aam
cmc
push
jge
(bad)
jmp
les
dec
hlt
xchg
jbe
sub
xchg
and
mov
gs
sub
cmc
dec
popa
xchg
cli
xchg
out
ja
jge
or
xor
fscale
in
int
pop
push
popf
cmps
in
in
and
xchg
mov
xor
xchg
movs
mov
pop
rcl
mov
icebp
aad
dec
pop
mov
rcl
mov
and
inc
ja
dec
outs
pop
cs
xor
movs
mov
sti
or
pop
jns
mov
push
loop
mov
adc
fldcw
js
inc
jmp
mov
adc
pop
in
xchg
dec
mov
das
mov
imul
adc
aad
icebp
sub
ja
jnp
mov
sub
gs
jae
push
pop
push
pop
js
jge
sub
mov
loop
(bad)
add
ss
push
fild
xlat
lahf
push
scas
(bad)
in
in
mov
(bad)
js
sub
fist
cmc
aas
cli
je
sub
xlat
xor
push
ja
sub
ret
repnz
popf
lods
out
sti
(bad)
out
dec
pushf
xchg
into
jbe
retf
clc
loop
jne
sub
sti
int3
mov
iret
das
pop
mov
jae
push
xchg
scas
xchg
mov
pop
outs
test
push
ret
idiv
out
scas
fdivr
ret
pop
pop
mov
fldenv
loopne
in
das
adc
out
jb
jbe
pop
std
nop
outs
cs
and
xchg
sub
stos
xchg
(bad)
stc
enter
sbb
das
mov
mov
or
(bad)
in
icebp
out
xchg
in
cmc
pushf
sbb
pop
mov
pushf
cmp
test
sahf
push
pop
add
pop
jno
aaa
fadd
aam
mov
sbb
ret
imul
jmp
jg
gs
pop
pop
push
(bad)
jae
push
lahf
push
xchg
jl
inc
pop
test
jle
mov
jp
mov
gs
cmp
adc
aam
push
sbb
pop
mov
les
add
xor
popf
fmulp
repnz
retf
fcomp
mov
pop
fst
mov
clc
or
pop
push
retf
xchg
daa
pop
pop
int
cmp
mov
push
das
test
adc
(bad)
mov
fcom
int
xor
jno
jg
xchg
xchg
out
retf
xlat
aas
mov
and
outs
idiv
dec
(bad)
cli
rcl
xor
mov
pop
jmp
outs
push
pop
loop
xchg
adc
lods
popf
fucomip
fiadd
lods
cmp
fwait
retf
xlat
popa
and
stos
jnp
hlt
das
jns
sar
pop
mov
inc
xchg
jmp
jl
iret
add
adc
ins
jo
and
ins
(bad)
inc
jne
std
out
mov
push
xlat
xchg
lods
xchg
das
or
leave
into
sub
xchg
popf
lods
dec
out
pop
sbb
std
cmp
xchg
mov
jecxz
retf
call
dec
push
mov
cmp
and
outs
clc
popf
adc
les
(bad)
jle
dec
jg
xchg
dec
xchg
clc
add
sub
cmp
xchg
or
fidiv
pop
fwait
and
rcr
leave
aam
sub
inc
fs
push
dec
xchg
clc
push
dec
stc
push
jl
mov
ins
mov
pop
cmp
mov
pop
pop
mov
fdivrp
std
and
shl
dec
jl
out
push
xchg
clc
push
lods
jo
hlt
out
mov
jne
cli
fwait
sub
fnsave
(bad)
xchg
and
xchg
sub
cmps
push
jl
leave
push
push
sub
push
arpl
js
mov
sub
test
stos
fld
aam
pop
sbb
ins
sub
stos
cld
imul
aam
dec
clc
jb
mov
mov
cwde
mov
stos
das
imul
repz
dec
sbb
xchg
jmp
push
xor
pop
mov
stc
mov
dec
push
jnp
bound
pop
inc
sti
and
lahf
dec
retf
repnz
xchg
ja
mov
stos
fstp
sub
das
sub
sbb
jge
retf
dec
dec
push
lea
mov
retf
xchg
and
lods
mov
xchg
lahf
aam
mov
push
repnz
cmc
aad
xor
and
adc
icebp
inc
gs
mov
jmp
dec
(bad)
cmp
pop
pop
ins
stos
mov
aaa
mov
cmc
movlhps
jne
pop
pop
mov
inc
pop
inc
imul
dec
inc
dec
mov
ins
fs
les
popa
mov
dec
retf
mov
ss
jp
pop
je
(bad)
outs
test
imul
call
xchg
ins
adc
rcr
stc
cmps
mov
fist
xchg
fdivr
stos
scas
imul
push
imul
(bad)
stos
or
sub
adc
inc
(bad)
mov
pop
xor
aad
mov
rcl
mov
and
push
imul
retf
sub
sub
push
jl
xchg
jne
mov
mov
div
fs
mov
xacquire
xchg
xchg
xchg
mov
mov
out
icebp
mov
mov
(bad)
mov
push
(bad)
retf
pop
pop
scas
cmp
xchg
xor
push
mov
enter
xchg
icebp
in
ss
fmul
add
cmps
mov
lods
icebp
mov
hlt
mov
dec
outs
stos
imul
cmp
out
mov
or
test
sub
jp
jmp
popf
lods
mov
leave
mov
(bad)
push
hlt
in
and
popf
sub
dec
fs
fs
aaa
adc
inc
xchg
or
inc
rcr
dec
sar
test
enter
xchg
jne
and
outs
in
stc
mov
mov
gs
push
dec
push
mov
jae
scas
cli
call
pop
pop
pop
or
add
xchg
push
sti
lds
push
jge
pop
xchg
mov
xchg
das
rol
lods
fsub
sub
js
sti
idiv
adc
int
(bad)
xchg
scas
mov
mov
inc
fldenv
imul
call
loope
sahf
lods
mov
mov
sub
cmp
aas
sbb
js
dec
clc
stos
scas
mov
retf
pop
xlat
xchg
lahf
dec
dec
sub
jbe
stos
or
shl
xchg
and
into
call
sbb
dec
cmp
test
in
adc
and
mov
movs
mov
fbstp
mov
jecxz
pop
mov
stos
mov
test
lds
mov
pop
test
add
das
loope
mov
cmp
movs
sub
stos
cmps
cli
fld
addr16
push
and
outs
stos
out
inc
adc
xor
leave
aam
mov
jl
mov
cmc
ret
pop
pop
mov
jnp
jbe
sbb
sbb
sahf
clc
fcom
int
xchg
scas
jge
ja
adc
mov
mov
mov
pop
jle
push
push
fcom
inc
and
stos
outs
jg
fidiv
sti
push
xchg
fdivr
inc
int3
mov
mov
sbb
enter
imul
ficomp
add
js
mov
mov
xchg
push
je
push
fld
sub
int
enter
dec
(bad)
out
push
outs
mov
test
ins
push
jl
xor
mov
cmp
sti
dec
iret
pop
jns
push
sub
push
mov
xor
(bad)
icebp
(bad)
xlat
outs
jg
fdivrp
scas
cli
cmps
ja
cmp
lods
scas
jg
std
mov
or
mov
rcl
enter
(bad)
push
jo
sti
scas
inc
jmp
enter
ds
push
mov
sahf
sub
in
jmp
inc
fwait
and
add
imul
add
dec
or
jnp
in
fldcw
adc
je
pop
ficom
inc
adc
shr
add
push
add
add
lock
pop
mov
pop
stos
sub
add
and
and
dec
pusha
push
cmps
adc
pusha
daa
sub
mul
pop
sub
scas
or
cld
and
push
push
sbb
jno
mov
fwait
imul
add
(bad)
push
dec
mov
push
adc
in
xchg
fisttp
cmc
jle
xchg
sbb
jl
cs
xor
stos
inc
pop
push
push
push
pop
inc
cmp
sub
and
call
jl
scas
ins
rcr
jb
cmp
imul
mov
xchg
sti
stc
pop
test
adc
jmp
push
fistp
cmp
fimul
int3
rcl
inc
aaa
xlat
fs
and
scas
jne
cmps
cmp
dec
shl
mov
mov
int
mov
lods
dec
add
push
dec
and
lods
int3
pcmpeqw
sub
xor
push
add
xor
jge
cwde
fist
and
pop
jae
xchg
push
xchg
mov
dec
retf
call
leave
(bad)
or
clc
xchg
fstp
pop
push
sub
cmp
xchg
jae
ins
inc
adc
pushf
cs
xor
sub
sub
ret
loopne
test
push
stos
ins
enter
pusha
daa
das
xchg
jmp
xchg
xchg
gs
mov
sar
call
mov
fist
push
div
loopne
pop
repz
add
sbb
inc
push
adc
call
cmps
pop
pop
dec
xchg
xchg
xchg
inc
xchg
mov
scas
adc
imul
sbb
add
mov
int
inc
cdq
sti
das
dec
add
sub
imul
rcl
dec
mov
daa
call
add
(bad)
aaa
in
int
add
outs
je
and
push
push
push
test
call
cmps
fs
movs
dec
test
in
stos
int
pop
pusha
gs
imul
and
pusha
dec
push
fdiv
push
inc
shl
cmps
mov
call
jne
mov
out
test
or
or
lods
das
into
xchg
xchg
inc
les
fistp
pop
push
sbb
dec
xchg
(bad)
out
test
push
cmps
inc
pop
pop
add
or
in
dec
in
nop
(bad)
sbb
inc
dec
in
push
jecxz
call
sub
imul
sub
sub
add
mov
mov
mov
jo
adc
std
in
xchg
sbb
sub
add
add
dec
inc
push
cmp
push
shl
cmps
call
push
jp
sbb
shl
gs
js
xchg
ins
test
xchg
stc
movs
fcmovnbe
xchg
pop
xchg
cmp
rcr
test
add
fisttp
add
scas
fist
fsubr
mov
pop
sub
shr
or
pop
ret
fadd
push
jb
pop
push
mov
enter
mov
add
xor
dec
mov
add
ins
and
push
mov
bound
pop
test
mov
jae
lods
adc
and
and
sbb
stos
ds
popa
lahf
cmp
xor
fcom
rcr
and
int
xor
and
xchg
movs
cmps
sbb
xlat
add
or
cmc
pop
nop
in
jmp
pop
mov
add
bound
push
sbb
out
in
push
push
xchg
push
dec
push
call
sub
pop
adc
call
xor
push
inc
mov
daa
jmp
fisttp
or
je
or
cmp
add
mov
jge
mov
push
mov
adc
ss
add
or
adc
test
(bad)
in
nop
xlat
xchg
sti
add
inc
add
sbb
out
add
mov
sbb
or
call
daa
dec
cwde
dec
pop
push
add
or
sub
cmp
lods
adc
jnp
xchg
xor
rcr
test
lds
xor
mov
push
stos
lods
rcr
or
mov
sar
jb
ins
cmp
mov
(bad)
call
xchg
in
add
call
(bad)
rcl
inc
adc
mov
cmp
mov
cmovb
adc
(bad)
adc
push
jg
fs
jae
xor
add
gs
lods
mov
repnz
movs
das
or
add
dec
xor
pop
pop
arpl
mov
inc
adc
mov
and
add
inc
rol
pop
xchg
mov
mov
adc
adc
add
inc
xor
push
push
call
add
cmp
mov
sub
enter
inc
xor
xlat
aam
add
mov
(bad)
sbb
adc
inc
pop
adc
es
pop
xchg
inc
push
sub
adc
lods
movs
les
xor
and
or
mov
cmps
mov
sub
(bad)
push
adc
sbb
jge
mov
and
inc
retf
jmp
inc
or
jae
cld
jbe
aad
push
sub
lea
inc
add
add
dec
and
sub
sub
loope
xchg
pop
stos
das
mov
push
sub
fadd
cmp
out
sub
fdiv
push
dec
and
and
sbb
pop
or
inc
scas
sub
jns
pop
pop
add
sbb
xor
adc
inc
sub
fild
xchg
add
jne
test
mov
dec
mov
mov
test
mov
std
mov
jp
push
gs
pop
dec
add
inc
dec
or
enter
dec
inc
cld
inc
xchg
xchg
and
mov
push
nop
and
jmp
movs
or
mov
gs
mov
push
xchg
push
push
rcl
rcl
enter
lds
jne
(bad)
mov
hlt
cmp
test
fsub
ins
pop
push
add
jbe
sbb
daa
jmp
dec
push
jecxz
call
sbb
shl
jecxz
xor
mov
outs
sub
pusha
cmps
rcl
sbb
push
aad
push
cmp
xor
sbb
and
dec
cmp
sbb
jno
dec
sbb
test
sub
and
add
add
test
and
js
inc
enter
and
leave
adc
push
push
add
adc
inc
add
add
pusha
sbb
call
pop
pusha
and
inc
add
call
push
call
popf
dec
(bad)
dec
imul
test
pop
add
in
mov
push
xchg
adc
add
inc
inc
imul
pop
push
mov
pop
call
xor
pop
mov
add
and
stos
dec
push
jo
ret
cmp
in
or
imul
or
sub
adc
and
shl
dec
mov
imul
les
or
rcl
xor
push
test
mov
cmp
jbe
imul
mov
jge
sar
lods
add
stos
shl
sbb
fmul
dec
dec
call
scas
or
imul
pop
test
and
mov
or
xor
lea
aad
push
pop
aaa
or
sub
inc
adc
xchg
ins
imul
cdq
push
pop
daa
dec
add
and
repnz
cmp
sbb
stos
lods
mov
xor
loopne
mov
inc
aas
mov
jns
ret
sbb
cmp
dec
data16
dec
jmp
or
add
cdq
inc
inc
retf
imul
xchg
xor
(bad)
imul
adc
shl
add
enter
retf
xchg
push
std
data16
xchg
loopne
or
xor
inc
cmps
movs
mov
mov
mov
xchg
push
push
repnz
push
loop
call
inc
mov
jge
sub
cmp
sbb
inc
fwait
push
cwde
and
out
or
adc
ins
leave
add
fistp
mov
and
lods
mov
mov
jecxz
sahf
mov
mov
add
out
mov
mov
push
pop
jno
ja
sbb
or
or
rcl
mov
or
xchg
aad
out
(bad)
add
cmps
sbb
aaa
sbb
cmp
popf
out
imul
out
and
pop
aas
aad
das
cmp
fadd
add
adc
movs
inc
sub
enter
add
imul
(bad)
ins
xor
lea
int3
sbb
add
mov
mov
pop
dec
push
pop
(bad)
sbb
xor
push
xchg
mov
push
data16
jns
and
scas
out
mov
shl
mov
xchg
cmp
jmp
push
mov
es
rcl
mov
imul
pop
push
dec
cmp
cmp
mov
ds
pop
add
(bad)
pop
pop
pop
ficomp
aad
jmp
mov
les
fs
call
pop
or
adc
add
dec
adc
fcomp
dec
xchg
and
sti
sub
(bad)
add
fiadd
fcom
push
mov
popa
adc
pushf
xchg
xor
cmp
bound
push
sbb
pusha
fist
inc
daa
imul
inc
inc
stc
add
sub
inc
cmp
neg
sar
inc
inc
setne
test
lds
test
sbb
sbb
jno
mov
sar
pop
jmp
adc
mov
sub
mov
xlat
and
mov
ds
add
adc
pop
sub
and
add
add
jmp
adc
and
adc
xor
add
std
or
sub
add
and
add
push
adc
scas
sahf
es
cmps
xchg
xchg
mov
cmp
add
push
dec
cmp
sub
cwde
cmps
adc
add
jns
shr
jmp
jge
dec
add
xchg
mov
push
push
sbb
js
mov
rcr
mov
jge
mov
xchg
pusha
cmp
fiadd
retf
inc
xchg
int3
sbb
add
inc
jo
mov
xchg
test
add
xchg
rcl
or
scas
shl
push
add
dec
add
add
call
jae
call
stos
dec
lods
cmp
inc
retf
inc
aad
pop
das
(bad)
test
out
add
popa
mov
or
adc
sub
inc
push
cmc
loope
mov
xchg
ror
pusha
push
sbb
mov
ret
adc
bound
cvtps2pi
lods
xor
push
cmp
call
test
inc
jecxz
sbb
je
mov
jne
es
pop
jno
and
cdq
xor
mov
dec
xchg
sub
mov
push
aas
mov
xor
cmp
shl
jae
jbe
(bad)
cwde
inc
add
imul
pop
aam
movs
xor
push
pop
dec
cmp
test
or
mov
push
push
jge
shl
mov
cdq
cmp
dec
mov
and
(bad)
cmp
xor
push
cmc
sar
fidiv
inc
lds
mov
push
inc
and
push
outs
test
or
add
jno
in
mov
test
jb
inc
jmp
push
aas
mov
ds
xlat
sub
sub
and
inc
add
push
inc
inc
ror
enter
inc
(bad)
inc
dec
pushf
mov
sbb
pop
cmps
(bad)
inc
mov
sar
or
test
imul
inc
sub
rol
jns
fdivr
push
das
sub
push
out
scas
mov
pop
sub
push
push
and
xchg
jle
mov
mov
push
xchg
push
add
aas
add
fs
aad
jno
out
sub
fidiv
push
or
push
and
or
jb
push
cmc
ror
jmp
push
xor
jnp
popa
sub
inc
add
sbb
call
repz
push
sub
sahf
jns
pop
push
add
adc
push
jp
inc
pmaddwd
lods
add
dec
push
vpmovb2m
sbb
inc
add
adc
jl
push
sbb
pop
sub
test
movs
ror
sbb
lock
push
or
cmp
add
or
cs
jns
fcom
xor
and
(bad)
in
movs
movs
jno
loope
je
xchg
xchg
sub
(bad)
loope
rol
jmp
inc
pop
sti
shl
inc
gs
sahf
mov
inc
call
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
dec
push
std
jg
mov
(bad)
jno
out
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
popa
or
add
add
fucomp
in
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
jge
dec
inc
inc
push
js
in
fisttp
in
retf
loope
and
jno
push
pusha
rcr
cmp
ret
adc
sub
(bad)
shl
sub
repz
mov
xor
xor
mov
mov
and
scas
cld
out
pop
js
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
nop
clc
jnp
daa
jg
repnz
cdq
and
leave
es
dec
mov
or
add
add
add
add
cmc
mov
(bad)
and
add
add
add
add
add
jecxz
call
(bad)
xor
int
mov
scas
xchg
cmc
fnstcw
call
add
add
jnp
pop
pop
(bad)
sti
jge
pop
(bad)
fwait
xor
add
add
add
add
ins
cmp
sub
add
add
sub
sub
test
add
add
cwde
push
xchg
das
push
jnp
xchg
add
add
sub
sub
mov
gs
aam
(bad)
jnp
dec
sahf
fs
inc
dec
add
aaa
fstp
and
add
add
add
add
jl
div
ins
jl
stc
(bad)
cmps
(bad)
arpl
test
idiv
adc
push
xchg
das
fsin
sahf
clc
daa
adc
sub
add
add
add
pop
fadd
(bad)
(bad)
pop
cli
xchg
fs
push
in
pop
add
mov
retf
xor
add
add
add
add
enter
ss
stc
fwait
call
push
push
addr16
jl
push
int
mov
aas
mov
clc
pop
fimul
add
add
add
add
dec
gs
jmp
mov
mov
cld
add
dec
stc
pop
cmp
push
sbb
add
add
cmp
pop
jp
(bad)
fsubr
(bad)
cmpxchg
loope
jb
dec
xchg
jecxz
outs
repnz
jge
xchg
cdq
fist
or
xor
add
add
add
add
xchg
das
fstp
cmp
inc
ja
in
es
dec
mov
mov
into
(bad)
push
xor
inc
mov
add
add
add
dec
repnz
addr16
out
lahf
xchg
test
(bad)
cld
push
cld
xchg
pop
and
sbb
add
add
add
psrad
sti
lods
mov
das
ror
dec
cmps
cdq
fbstp
aad
xchg
jl
stc
popa
adc
add
add
add
add
cmp
mov
sbb
stc
shl
and
and
mov
cli
inc
add
outs
cmps
out
(bad)
cmp
add
add
add
add
dec
push
xchg
imul
call
and
jnp
ds
ret
pop
pushf
lods
dec
adc
mov
or
add
add
add
shr
outs
(bad)
mov
sub
test
mov
cli
cwde
mov
add
add
add
add
push
mov
fnstcw
imul
jl
cmc
add
scas
clc
sbb
pop
lahf
arpl
outs
mov
inc
call
add
rcl
fucomi
mul
repnz
hlt
pop
adc
dec
mov
add
add
add
shl
pop
mov
vmovsd
jl
out
dec
cli
test
fcomi
inc
gs
dec
dec
xor
add
add
add
add
dec
cld
in
repz
outs
sar
sbb
lahf
aad
push
call
add
clc
inc
into
jl
dec
mov
pop
les
int
add
add
add
add
iret
xlat
lods
clc
xchg
cmp
enter
in
in
push
out
imul
add
add
fisttp
mov
aas
sub
add
add
add
add
loopne
mov
rcr
adc
mov
add
add
add
add
inc
dec
dec
call
cmp
fild
add
add
add
add
push
xchg
das
addr16
(bad)
mov
call
add
ror
leave
retf
(bad)
aas
xor
das
cli
push
cmp
add
add
add
push
neg
retf
hlt
in
inc
mov
xchg
data16
add
add
add
lock
imul
mov
js
add
add
add
add
mov
in
add
xchg
lea
xor
add
add
add
add
or
add
add
add
add
jl
sti
jae
arpl
aas
jge
xchg
data16
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
xchg
mov
add
add
add
add
imul
push
ss
enter
add
add
add
fisttp
(bad)
movs
cdq
push
clc
ins
loopne
out
sbb
pop
cmp
sub
(bad)
imul
inc
sbb
add
sbb
fdivr
imul
push
ss
fcom
fisubr
lock
movd
ins
cs
fnstcw
ss
fldenv
mov
out
out
jmp
sbb
mov
xor
mov
in
jbe
sbb
fstp
daa
cmps
mov
dec
jb
pop
sahf
test
dec
(bad)
(bad)
in
ins
jg
clc
cli
adc
xlat
sub
dec
mov
xchg
xchg
mov
clc
pop
xchg
in
rep
jae
pop
sbb
fs
cld
sub
jmp
(bad)
mov
dec
mul
in
repnz
cld
std
xor
(bad)
jge
repnz
test
sbb
mov
pop
(bad)
cmc
mov
ins
into
mov
mov
and
dec
test
mov
aad
daa
jp
mov
jg
cmps
fisubr
imul
leave
xchg
mov
xor
dec
ror
outs
ins
dec
repnz
scas
and
ins
jg
xchg
pushf
shl
xchg
fsub
push
xor
jge
and
(bad)
out
jbe
xchg
fs
adc
sbb
cmp
lahf
ror
sub
dec
jb
and
leave
sub
je
sbb
mov
gs
call
sbb
xchg
pop
mov
dec
mov
sbb
rcr
fidiv
(bad)
ffreep
stos
jns
jns
aad
xchg
aad
mov
pop
jno
xchg
fs
jnp
in
ss
test
jne
(bad)
cmp
pop
not
cmp
(bad)
cmp
mov
js
jmp
fnstcw
outs
in
jmp
and
fcom
mov
xchg
pop
pop
dec
mov
push
mov
mov
jge
mov
jp
lods
(bad)
jae
out
ja
out
movs
and
jecxz
mov
pop
jmp
sbb
ss
repnz
imul
ja
jecxz
stos
mov
jl
pop
int3
pop
mul
mov
addr16
dec
dec
jmp
cmp
dec
push
cs
cmp
imul
and
add
xor
repz
(bad)
outs
dec
call
js
push
mov
retf
mov
jle
ret
call
jmp
mov
arpl
aad
lods
mov
stos
xlat
loopne
jnp
ds
scas
call
scas
in
sub
xchg
gs
dec
cmp
mov
es
(bad)
dec
pushf
push
xchg
lea
cli
add
ret
sbb
test
sub
imul
cli
call
jg
sub
daa
pop
mov
pushf
xlat
cli
xchg
dec
mov
dec
xchg
test
ja
mov
cmc
outs
jns
xor
push
idiv
stos
not
cmc
fldcw
ja
(bad)
(bad)
fucom
repnz
ins
xchg
lea
das
pushf
sti
xor
xor
fild
jmp
(bad)
iret
fnstenv
mov
push
pop
cld
gs
or
scas
inc
(bad)
pop
xchg
das
(bad)
push
movs
mov
ins
arpl
shl
hlt
fst
jecxz
mov
pop
jne
pop
mov
push
pop
cmp
scas
pop
xor
mov
lahf
pop
push
fcom
sti
imul
repz
out
icebp
jmp
mov
sahf
ja
repz
fcomp
jecxz
in
cwde
ja
xchg
push
cli
ins
xlat
pop
popf
das
addr16
jne
pop
icebp
jl
lds
pop
xor
jb
mov
outs
inc
lods
xor
rcr
mov
call
jmp
pop
scas
add
mov
scas
pop
out
pusha
in
inc
pop
mov
iret
cmp
scas
call
addr16
div
pop
lahf
adc
fistp
xchg
jmp
out
jp
dec
jmp
cld
call
popa
in
ror
popa
and
gs
add
mov
dec
in
test
jecxz
cmp
movs
jle
and
ret
mov
in
sbb
sub
jmp
jg
xor
ficom
mov
dec
pop
ins
lds
dec
jns
jno
cmp
and
int3
out
cmp
pop
fst
cdq
imul
jl
jl
jne
in
xchg
lea
mov
push
(bad)
adc
jmp
lods
cmp
repnz
xor
pop
jno
call
adc
sahf
fild
sbb
or
sbb
ins
mov
iret
mov
jecxz
push
jg
dec
lods
in
addr16
test
enter
pop
icebp
mov
retf
mov
mov
scas
mov
dec
icebp
cwde
jmp
dec
ja
push
(bad)
scas
push
imul
mov
(bad)
addr16
jns
xchg
test
jno
fnstenv
aaa
mov
out
mov
out
xlat
repz
jae
mov
push
pushf
pop
mov
adc
xlat
call
scas
ins
cmp
les
iret
(bad)
gs
mov
daa
out
push
dec
std
stos
dec
mov
call
arpl
push
fwait
mov
and
fwait
(bad)
in
vpcmpgtb
pop
loope
icebp
cli
cwde
xlat
out
and
pop
pop
sub
mov
frstor
into
addr16
(bad)
push
pop
repz
cmp
pop
fst
cdq
imul
jl
pop
shl
mov
(bad)
adc
xlat
xchg
mov
pop
mov
loope
lahf
adc
iret
addr16
push
into
fwait
xchg
sbb
shl
iret
in
xchg
aad
sbb
sbb
jecxz
in
xchg
in
mov
cmp
(bad)
xchg
movs
imul
ins
mov
push
mov
jl
xchg
scas
and
scas
aad
ss
stos
push
adc
scas
aaa
div
out
push
inc
jecxz
mov
lods
in
mov
addr16
mov
fsubr
int
pop
xor
stos
jge
pop
jae
jnp
xchg
lods
push
out
push
cmp
mov
bound
lods
std
cwde
fucomip
shl
dec
mov
sti
ins
jl
push
add
sub
shr
fcomp
inc
mov
aam
mov
mov
iret
jno
mov
test
mov
xlat
(bad)
fstp
sahf
pop
cmp
movs
or
adc
push
addr16
mov
pop
pop
repz
mov
mov
dec
xor
mov
imul
out
fdiv
sbb
lahf
fstp
jbe
loop
cmp
aad
dec
imul
arpl
mov
iret
ss
sbb
jno
lea
aad
lahf
aaa
imul
push
in
int
icebp
sub
push
and
pop
into
scas
pop
outs
xor
mov
and
xchg
lea
scas
and
loop
xor
out
stos
jne
jae
(bad)
xchg
cli
outs
inc
jge
loop
fyl2x
gs
std
scas
stos
jg
cmp
stc
push
cmp
push
mov
popf
cmps
jbe
cmc
mov
ins
mov
and
push
dec
imul
outs
(bad)
enter
stos
cmc
lods
xor
jecxz
cld
inc
lods
arpl
sar
mov
fisubr
push
out
dec
jg
iret
mov
(bad)
cmp
fdivr
lods
mov
push
mov
fisub
retf
jmp
scas
in
lods
sahf
cmp
mov
int3
idiv
(bad)
movs
iret
imul
call
jne
lea
cdq
push
lahf
mov
xor
addr16
push
aam
aas
xor
mov
xlat
out
cmp
mov
dec
out
cmp
(bad)
dec
xor
sbb
mov
dec
ins
fdivr
cli
fstp
outs
xchg
addr16
xlat
and
push
ss
push
ins
js
mov
lds
(bad)
cmps
pop
or
aas
adc
test
cmp
in
mov
mov
gs
xor
int
shl
pop
push
and
in
sar
jmp
cmc
xor
cmps
mov
gs
push
mov
mov
rol
cdq
push
lahf
out
fprem
push
(bad)
retf
loop
retf
pop
cmp
in
mov
dec
out
dec
push
imul
pop
std
mov
push
vpshlb
push
pop
push
push
data16
scas
sbb
pop
inc
jnp
aam
ins
lea
mov
(bad)
into
out
ins
cmp
fucomi
cmc
ficom
mov
arpl
pushf
std
mov
xor
cmps
imul
pop
repz
imul
mov
jl
arpl
(bad)
push
arpl
mov
es
stos
push
jmp
sub
movs
sbb
xor
jns
cmp
scas
xchg
cmp
retf
rcr
enter
jmp
mov
inc
ins
jg
out
clc
sub
neg
retf
out
cmp
pop
mov
mov
mov
mov
xor
mov
mov
pop
push
imul
fstp
retf
imul
sub
mov
mov
imul
stc
neg
sbb
aad
retf
cdq
inc
mov
iret
ds
in
outs
retf
sahf
xor
int
mov
sub
push
xchg
adc
or
cs
test
or
xchg
push
jnp
imul
and
jb
sbb
mov
retf
jp
repz
in
in
hlt
(bad)
inc
ss
mov
arpl
lods
push
in
inc
aam
fstp
outs
imul
jge
cmc
scas
aad
out
pop
(bad)
push
lahf
lods
mov
xor
cli
push
ss
jl
lea
sub
push
jnp
sub
mov
(bad)
div
vpunpckhbw
xor
mov
cmp
fisttp
imul
cdq
push
in
je
mov
jle
xlat
retf
not
jno
lods
mov
jmp
jl
(bad)
pop
aam
fwait
icebp
mov
mov
scas
jns
xor
sbb
pop
pop
fnstenv
sbb
idiv
ss
ficomp
push
dec
mov
test
mov
and
lahf
mov
mov
bound
fdivr
jl
iret
repz
loop
cmc
mov
push
fwait
jle
lods
dec
retf
retf
bound
icebp
addr16
test
arpl
std
int
movs
pop
dec
std
lock
cmp
fnstcw
stos
aas
mul
mov
fcomi
dec
int3
out
mov
push
xchg
cmps
div
or
xlat
xchg
(bad)
jmp
mov
cmc
sub
jg
jg
(bad)
mov
stc
cmp
imul
(bad)
movs
cmc
scas
mov
hlt
adc
arpl
dec
mov
aad
sar
dec
cld
and
xor
xchg
xchg
in
mov
xlat
jae
mov
dec
ss
daa
pop
sti
stos
push
jge
ins
xchg
mov
jns
iret
mov
imul
jle
jbe
cdq
ins
dec
lea
lahf
xchg
xchg
retf
aam
push
dec
shr
cmps
and
jno
out
jno
(bad)
xchg
outs
fnstcw
dec
in
push
xor
arpl
sbb
inc
mov
jnp
sbb
cwde
aas
mov
ins
cmc
cli
ins
jge
sbb
mov
jmp
das
test
adc
jmp
pop
fsubrp
cli
xor
cmps
(bad)
xlat
out
aam
lods
pop
scas
dec
fnstcw
cmps
push
fisub
js
ins
push
out
test
retf
inc
inc
xor
pop
pop
mov
call
aas
sbb
enter
lods
aad
pop
pop
and
addr16
pop
cmp
dec
ss
and
mov
neg
mov
jecxz
lds
test
inc
in
(bad)
fdiv
bound
push
arpl
(bad)
xor
xor
sbb
arpl
int3
int3
mov
dec
stc
sahf
cli
push
sbb
pop
icebp
enter
aam
xchg
pop
xchg
cmp
xor
inc
(bad)
adc
mov
jbe
fdivr
imul
inc
out
mov
imul
cmc
sub
stos
cmc
iret
test
ins
lahf
aam
shr
outs
sbb
lea
and
push
int3
retf
(bad)
dec
ss
ins
(bad)
jmp
xchg
cmc
lds
mov
cmp
aas
mov
imul
in
jmp
bound
pop
dec
inc
xlat
push
ss
cmc
(bad)
inc
das
outs
jnp
inc
lea
jns
xchg
jmp
js
std
stos
(bad)
sub
pop
pop
push
idiv
arpl
retf
cmps
ds
pop
jl
fnstcw
mov
jp
adc
not
loop
imul
enter
xlat
call
xchg
mov
lds
gs
xor
ins
push
data16
mov
retf
inc
mov
ds
int
loop
mov
gs
pop
pop
cmc
xor
fwait
movs
cmp
mov
and
iret
jg
lods
or
mov
retf
xor
pushf
int
xlat
idiv
pop
fsqrt
icebp
aam
jmp
call
int3
mov
cmp
pop
xlat
mov
mov
mov
mov
test
push
jnp
jmp
mov
xchg
js
(bad)
pusha
push
dec
outs
push
in
cmp
pop
lea
out
scas
aad
jns
scas
xchg
addr16
mov
(bad)
cmc
mul
push
(bad)
aaa
mov
std
ds
mov
dec
in
fcomp
cld
aad
jge
cmp
scas
dec
test
sbb
jno
pushf
jne
out
arpl
sub
jg
mov
xchg
shr
lods
aad
imul
ror
icebp
mov
xchg
push
xchg
das
mov
das
xchg
and
in
ja
sar
mov
sti
cmp
ins
or
out
imul
ds
cmc
sbb
out
jmp
je
sub
cld
(bad)
sub
ins
cmp
dec
jge
in
jmp
call
xlat
sbb
loop
in
mov
push
mov
dec
repz
in
pop
lods
jp
repnz
test
mov
jp
pop
imul
cdq
pop
mov
pop
push
fdivp
in
js
scas
cli
(bad)
cld
in
jae
repz
retf
jle
in
jnp
ins
sub
mov
jle
mov
loop
test
xchg
mov
cli
sbb
int
popf
dec
shr
ja
sbb
mov
push
sti
xor
les
adc
stc
ds
icebp
aad
cwde
mov
std
(bad)
cdq
clc
cdq
xchg
cmp
test
clc
push
aas
je
in
mov
mov
and
imul
mov
xor
sbb
movs
jge
push
mov
outs
ins
lahf
cli
adc
out
movs
fst
push
pop
jle
mov
fnstenv
retf
cdq
cdq
mov
mov
aad
mov
sub
(bad)
retf
outs
dec
ins
movs
std
xchg
jl
imul
aad
push
mov
and
cmc
xlat
in
pop
mov
dec
call
dec
fsub
pop
outs
pop
int
mov
mov
xchg
out
repz
fnstcw
xchg
in
(bad)
pop
sbb
idiv
sti
inc
aam
xor
pop
xor
jl
(bad)
sub
jns
(bad)
xchg
push
jns
lea
sti
pop
xor
fnstcw
pop
xchg
xor
sbb
xchg
test
lea
cmp
xor
jge
mov
cmp
push
mov
cdq
jae
pop
pop
mov
arpl
das
jg
jbe
(bad)
xchg
movs
pop
scas
pop
retf
fsin
sbb
test
(bad)
lahf
push
dec
sahf
(bad)
test
xor
outs
xchg
aas
mov
ror
in
pusha
xor
dec
jne
fs
dec
mov
add
mov
and
xchg
cmp
jnp
adc
std
mov
mov
xor
test
xchg
(bad)
bound
jno
gs
scas
xlat
cmp
pop
sub
js
and
adc
retf
sub
lods
mov
jecxz
icebp
idiv
cld
pushf
stos
push
aad
mov
dec
dec
ss
pop
sub
mov
ret
xchg
xchg
xchg
xor
loope
in
dec
(bad)
jge
ds
ds
mov
sbb
sahf
in
sbb
out
call
scas
adc
ins
mov
(bad)
sbb
lods
lods
loop
aad
aad
ror
imul
push
jg
out
call
jg
dec
scas
scas
mov
jns
cld
rcr
fs
xchg
outs
cld
js
aas
pop
mov
call
repnz
lods
inc
jae
fwait
dec
jmp
(bad)
jmp
retf
leave
retf
(bad)
jecxz
lds
pop
imul
repnz
mov
push
xor
pop
gs
iret
fnstcw
retf
aaa
jno
adc
jecxz
fs
sahf
das
fwait
leave
retf
mov
out
push
out
stc
jle
push
sub
mov
(bad)
int3
les
leave
cli
loope
fs
sahf
in
aaa
mov
inc
arpl
cmc
pop
jmp
je
mov
lods
cmp
outs
(bad)
fist
and
mov
jmp
(bad)
test
clc
push
out
in
jne
pop
jg
mov
push
mov
enter
lock
pop
pop
jecxz
push
sahf
das
sub
cli
lods
aad
push
xchg
cmps
mov
sti
xor
mov
mov
jmp
push
mov
xchg
movs
pop
imul
lods
lds
mov
idiv
mov
imul
(bad)
pop
push
stos
fistp
(bad)
in
out
(bad)
mov
lods
cmc
mov
xchg
call
dec
cmc
pop
mov
xlat
popf
in
les
jecxz
test
call
xchg
cmp
sti
push
xchg
std
sbb
in
scas
leave
loop
imul
push
xchg
pop
int3
xchg
cli
push
pop
stos
push
std
xor
adc
push
cmps
push
retf
fsin
jnp
jmp
cmp
aaa
sbb
in
sub
idiv
std
pop
sub
aas
mov
mov
xchg
imul
dec
stos
add
mov
pop
xor
mov
push
lea
jp
loop
cmp
fldenv
sbb
cld
push
cmps
jecxz
daa
xlat
test
jl
mov
jmp
fdivr
jmp
call
lods
or
fst
gs
lods
(bad)
push
stos
iret
mov
adc
mov
mov
mov
scas
jmp
int3
sahf
mov
xchg
std
cmp
ja
jmp
cmps
mov
imul
jecxz
ficom
and
(bad)
scas
xlat
out
dec
popf
pop
cmp
(bad)
pop
jns
mov
clc
(bad)
fs
and
icebp
jge
test
and
dec
out
jl
pop
outs
lods
in
sbb
mov
xor
xor
scas
mov
inc
arpl
xor
sbb
aas
into
ins
dec
test
cmc
mov
push
vpsllq
sti
(bad)
sub
cmc
mov
stos
cmp
ins
imul
jmp
int
pop
adc
mov
(bad)
mov
(bad)
retf
inc
mov
into
stc
repnz
adc
sahf
arpl
fbstp
pop
jbe
outs
das
fisttp
popa
mov
(bad)
and
test
xlat
mov
cmp
fbld
ins
(bad)
mov
cmp
mov
ja
aad
adc
sbb
int3
dec
adc
test
dec
push
fsubr
cmp
icebp
jns
pop
pop
aam
(bad)
into
retf
cmps
lods
into
(bad)
inc
out
pop
sbb
xor
mov
enter
inc
xor
ins
mov
mov
push
jnp
js
sahf
(bad)
mov
jp
xor
mov
scas
cwde
jmp
mov
call
lods
add
retf
mov
pop
cdq
shr
dec
mov
xor
ror
ins
push
mov
cld
fdiv
mov
sbb
push
jbe
jl
jmp
sbb
pop
sti
pop
mov
fidiv
lea
pop
fist
mov
jno
stos
scas
ds
mov
into
xlat
fnstenv
jmp
out
clc
jne
lea
and
aaa
mov
test
mov
xchg
lea
sub
xor
into
cmc
xchg
pop
inc
dec
(bad)
jbe
(bad)
out
aam
jne
in
aaa
and
cmp
fidiv
fnstcw
xchg
xchg
push
mov
(bad)
pop
pop
pop
sbb
mov
inc
jge
in
idiv
xor
fsub
ins
push
imul
jge
sbb
fsubr
int
dec
mov
fsub
cmc
and
dec
inc
in
(bad)
ds
mov
aas
inc
mov
fs
mov
xor
sbb
cld
cmp
stos
aad
leave
mov
cmp
enter
lahf
xchg
cmc
xlat
mov
xor
call
enter
sub
jecxz
pop
(bad)
pop
lods
mov
sbb
jle
call
lods
lods
lods
fucomip
out
arpl
push
sbb
xor
and
(bad)
adc
cdq
and
pop
mov
mov
jmp
in
cmp
adc
sub
pop
jge
jno
ds
imul
and
pop
scas
and
add
ret
sub
lahf
fimul
loop
adc
add
and
jo
and
fsubr
fisttp
dec
and
jmp
xchg
int
lahf
mov
jmp
fldcw
data16
push
xchg
rol
pop
xchg
mov
lahf
(bad)
icebp
fsubrp
push
arpl
sbb
push
out
mov
icebp
int3
test
dec
fwait
jmp
leave
bnd
popf
mov
pushf
inc
xor
aaa
jp
js
mov
sub
out
xor
cmps
jl
bound
cmps
pop
mov
int
dec
push
xchg
pop
(bad)
lock
neg
sub
shl
inc
scas
jle
sub
rcr
xor
(bad)
scas
mov
xchg
fs
cmps
and
(bad)
sbb
xchg
cmp
mov
sub
add
and
pop
push
outs
jg
stos
int
sbb
xor
aad
inc
daa
aam
mov
jae
cld
aas
test
movs
ins
or
adc
outs
ss
jne
pop
clc
imul
out
jl
jmp
repz
scas
data16
imul
adc
fisub
pop
fwait
stos
scas
stos
and
xchg
int
(bad)
cmps
frstor
addr16
pop
cmp
ins
(bad)
shl
test
pop
cmp
mov
out
repnz
pop
jg
sti
jge
call
pop
push
cmps
ins
ins
jecxz
neg
mov
mov
fnstsw
(bad)
out
mov
sub
xchg
mov
dec
or
xchg
pop
adc
pop
pushf
arpl
lods
inc
imul
inc
in
(bad)
pushf
and
les
in
imul
lods
cmp
into
ds
loop
out
les
leave
mul
das
aam
cs
jle
mov
pusha
mov
sar
scas
mov
jmp
stos
pop
jbe
xchg
lea
into
ds
(bad)
rcr
mov
out
(bad)
or
cmc
mov
xor
fist
pop
out
mov
lods
mov
repz
aaa
jmp
jno
fwait
shl
pop
int
shr
cmp
int
mov
jae
push
iret
cmp
jo
(bad)
mov
into
push
lods
sub
imul
scas
mov
jl
sti
(bad)
out
lods
adc
xlat
(bad)
pop
(bad)
push
sbb
jmp
imul
arpl
in
mov
push
scas
mov
cmp
pop
cmp
aad
je
cli
fmul
iret
pop
neg
(bad)
cmp
std
sub
jnp
xchg
out
jle
ss
lods
int3
sub
gs
cmp
std
mov
xchg
aas
jnp
dec
repnz
in
mov
ror
repz
clc
(bad)
mov
pop
rol
mov
pop
adc
sar
jmp
clc
mov
xchg
jl
pop
sbb
pop
mov
pop
cdq
push
les
push
fsub
adc
sbb
int
(bad)
out
mov
mov
(bad)
mov
fwait
(bad)
mov
xlat
jge
call
imul
into
mov
in
stc
outs
dec
rcr
sub
ss
ds
push
(bad)
neg
retf
xlat
cmc
shr
aam
mov
jecxz
repz
int3
repz
push
sahf
mov
dec
cmc
(bad)
jge
pop
cmps
and
(bad)
mov
adc
int
lds
pop
lods
mov
lods
pop
(bad)
sbb
fucom
mov
push
ss
repz
scas
mov
fnstsw
sti
jmp
adc
sub
out
cmp
ds
jbe
jg
dec
ins
jmp
xor
pop
cmps
mov
xor
xor
aas
jnp
dec
repnz
leave
jmp
ins
or
jnp
scas
mov
cld
sub
xchg
ins
jmp
and
and
inc
pop
ret
je
pop
pusha
lahf
(bad)
stc
mov
mov
imul
loope
(bad)
sti
mov
mov
aaa
ror
sahf
cmc
xor
and
mov
ja
pop
push
mov
mov
(bad)
test
sub
push
pop
xor
cmp
cmc
pushf
cmc
jae
mov
(bad)
mov
or
xlat
ins
pop
mov
jl
int
in
pushf
aaa
jbe
scas
pop
imul
(bad)
mov
mov
pop
scas
movs
sti
shr
scas
ret
mov
mov
dec
sub
sub
jae
cmp
cdq
jno
xor
in
mov
ins
arpl
pop
jl
out
test
xchg
in
mov
in
out
les
pop
imul
mov
mov
repnz
mov
pop
hlt
mov
stos
push
lock
pop
stos
sub
cld
loope
fadd
iret
xor
mov
stos
frndint
xchg
lea
dec
jle
push
mov
ficomp
push
pop
sbb
sbb
fldcw
int
retf
int
fsubr
xor
jmp
lods
int
cmc
fs
mov
cmp
dec
stos
xor
imul
xor
dec
push
push
dec
cmps
cmp
cdq
imul
ja
(bad)
jge
aad
push
xlat
adc
ffreep
dec
push
xchg
xchg
jg
mov
lahf
push
xlat
ret
xchg
push
gs
dec
dec
sahf
fdiv
mov
in
mov
popf
dec
dec
xor
mov
pop
jno
pop
ds
iret
out
cmp
sbb
xor
int
in
sbb
lods
adc
pop
das
cmps
cmp
jbe
mov
lock
fsubrp
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
pop
(bad)
cld
jecxz
(bad)
std
aas
jg
fild
call
add
add
call
lahf
das
jmp
dec
sbb
add
add
add
add
xor
cmp
(bad)
jecxz
aas
(bad)
nop
in
pop
loope
mov
movs
das
(bad)
test
cmp
push
out
(bad)
out
mov
add
add
add
jns
sbb
fild
call
jg
mov
dec
div
sbb
xor
addr16
div
hlt
jno
add
mov
cmc
scas
repz
add
add
loopne
(bad)
stos
sub
sbb
lahf
xchg
add
inc
call
fucomi
xchg
mov
inc
push
in
mov
sbb
stos
jmp
inc
mov
jecxz
pop
fstp
icebp
(bad)
jg
std
out
cmps
sti
imul
sbb
iret
adc
or
cmp
mov
idiv
jg
gs
push
jns
cdq
out
and
mov
jns
out
inc
(bad)
dec
mov
xchg
cmc
jg
icebp
mov
pop
mov
sahf
pop
imul
adc
mov
in
aas
(bad)
mov
lock
lea
xor
lock
and
pop
xor
mov
imul
repnz
cs
cmp
leave
jmp
scas
adc
and
lods
jecxz
icebp
xchg
fist
mov
mul
shl
dec
cli
inc
imul
push
dec
outs
xor
push
xchg
push
bound
lods
out
jbe
repnz
xchg
in
sub
ins
(bad)
ja
outs
rcl
and
retf
xlat
cld
fnstsw
out
dec
xchg
iret
mov
in
xor
(bad)
cmps
xchg
mov
push
cli
push
xchg
xchg
(bad)
int
jmp
(bad)
and
mov
repnz
aas
repnz
in
jmp
pop
sti
pop
out
test
sti
loop
scas
out
outs
inc
out
hlt
mov
icebp
lahf
jg
lods
xlat
(bad)
pop
push
(bad)
imul
cs
xlat
xabort
(bad)
cld
jecxz
mov
xchg
cmc
mov
xchg
dec
fcmovb
fisubr
add
jecxz
dec
jb
ins
jp
lock
lea
ds
out
jns
jns
in
xchg
lea
ja
mov
push
jmp
stos
out
or
cmps
fmulp
mov
pop
xchg
fsubr
pop
fs
sub
dec
stc
inc
jmp
and
pop
push
mov
loop
(bad)
sbb
push
xchg
xchg
(bad)
js
jmp
sbb
xchg
pop
mov
jnp
jl
xchg
mov
mov
xor
pop
push
cs
jns
cs
retf
scas
mov
(bad)
jecxz
push
out
lods
cmp
xor
cmp
in
push
jmp
fadd
outs
jecxz
call
pop
xor
mov
mov
dec
out
rcr
pop
retf
(bad)
hlt
push
imul
in
push
(bad)
pop
(bad)
pusha
mov
add
into
fucom
out
xchg
sub
div
push
lods
test
daa
push
(bad)
cld
push
xlat
mov
loop
fcomp
das
mov
sbb
(bad)
into
popf
(bad)
aad
daa
jle
push
les
fsub
push
push
xchg
fcmovnu
mov
jnp
mov
xchg
fs
test
cli
jo
jno
popf
cli
xor
cli
cmp
shl
repz
fwait
stos
xlat
mov
jp
xchg
mov
jecxz
loop
jns
ss
push
arpl
out
xor
inc
ja
fwait
shl
retf
lds
dec
call
mov
sub
rcr
pop
jo
jg
mov
mov
pop
not
(bad)
(bad)
sar
clc
cmc
cmps
cmp
(bad)
(bad)
mov
not
outs
repnz
xlat
fstp
jmp
aas
(bad)
sar
dec
mul
div
jecxz
repz
call
xchg
std
ret
rcr
mov
out
and
outs
scas
mov
sbb
pop
std
mov
in
mov
fwait
cdq
das
or
into
push
rcl
movs
push
xor
(bad)
clc
cmp
into
leave
cmp
sbb
fprem
call
cdq
rcl
icebp
stos
(bad)
aam
ficomp
xor
mov
jne
pop
jge
fnstenv
not
mov
dec
pop
push
sbb
stc
mov
mov
mov
mov
in
mov
fwait
js
push
out
hlt
sub
jb
ror
jnp
das
icebp
push
pop
push
mov
mov
mov
std
fcom
jnp
jle
shr
pushf
pop
dec
add
push
jg
arpl
sahf
mov
out
aad
cld
test
out
xchg
mov
arpl
cmps
xlat
pop
jae
mov
pop
jle
(bad)
psrld
pop
scas
xor
aaa
iret
dec
jmp
sar
jbe
stos
sbb
cli
jae
sbb
lsl
cli
cmps
mov
mov
mov
out
call
movs
stc
stc
ins
jnp
in
scas
pop
jmp
cmp
xchg
cmps
mov
std
and
push
std
push
int3
repz
jmp
inc
xor
enter
jle
icebp
mov
call
mov
dec
xor
neg
cli
ins
fist
arpl
jl
iret
repnz
jg
mov
popa
outs
pop
into
mov
jge
popa
std
cmc
jge
lahf
aas
mov
cmp
cmp
std
mov
pop
arpl
test
repz
jge
in
out
addr16
sbb
jmp
sub
imul
pop
(bad)
pop
fcomi
jns
iret
jae
imul
cld
int
shl
data16
mov
std
mul
pop
lds
jle
jg
aaa
(bad)
adc
inc
sub
(bad)
mov
cdq
popf
(bad)
icebp
sti
retf
mov
out
imul
jnp
movs
out
mov
dec
rcr
xor
jge
push
dec
jge
dec
pushf
sti
(bad)
sbb
adc
push
(bad)
mov
fstp
out
pop
stos
iret
pop
jg
jle
push
(bad)
push
(bad)
(bad)
jecxz
(bad)
(bad)
jmp
pop
fidiv
sbb
fsub
aaa
sbb
and
jbe
std
mov
repz
es
(bad)
lods
sub
inc
lock
out
and
mov
cs
pop
popa
iret
call
out
pop
jge
aad
in
jmp
jle
cmp
das
repnz
pop
test
mov
xchg
pop
jno
mov
pushf
bound
retf
inc
mov
imul
cmp
mov
adc
js
jge
das
jmp
scas
addr16
xchg
jecxz
cmp
in
pop
int3
retf
fidivr
movs
mov
dec
cmps
scas
pop
lahf
loopne
imul
std
dec
(bad)
gs
pop
into
mov
out
cmp
mov
mov
mov
push
sti
mov
addr16
xchg
out
int
out
retf
dec
das
jmp
lods
jle
div
xlat
inc
cmc
stc
pop
adc
xor
arpl
punpckhbw
out
iret
cmp
dec
(bad)
sbb
push
aam
mov
fstp
js
int3
mov
(bad)
dec
mov
xchg
push
jmp
mov
jne
test
cmp
xchg
jno
dec
aaa
push
jnp
mov
jp
adc
mov
and
xor
sbb
pop
(bad)
fs
pusha
cmp
pop
popa
in
arpl
sbb
jnp
cs
pop
aad
mov
movs
push
lea
retf
repz
jb
sbb
jge
in
lods
mov
xlat
lods
mov
jl
in
jg
dec
lahf
std
mov
mov
lods
jae
push
mov
mov
jnp
mov
aad
ja
mov
jecxz
sahf
cmp
(bad)
dec
mov
sahf
mov
mov
addr16
cwde
imul
mov
push
pop
push
stos
lods
xchg
push
pop
pop
out
dec
stos
into
mov
xor
(bad)
addr16
jno
fidiv
dec
xor
ins
ins
mov
adc
mov
cdq
pop
mov
sub
icebp
imul
push
fwait
jnp
cld
pop
and
cmp
retf
div
cmp
mov
pushf
mov
mov
pushf
mov
and
jnp
pop
jle
jmp
(bad)
jne
mov
stos
xor
inc
out
dec
xor
xchg
(bad)
jbe
int3
dec
xor
mov
jge
fdivr
fnstsw
fdivr
fsincos
int
push
fist
push
call
fistp
cli
mov
shl
mov
stos
mov
(bad)
mov
outs
out
mov
xchg
mov
sbb
fnstenv
cmp
imul
push
cli
xor
fwait
(bad)
pop
sbb
int
mov
enter
in
test
fwait
xchg
cmp
jge
iret
pop
mul
xchg
sbb
gs
repnz
push
frstor
(bad)
(bad)
xor
jle
sbb
pop
push
cmc
sar
int
iret
cwde
sbb
in
cli
ins
lods
jle
xor
fidivr
mov
es
scas
xchg
aad
(bad)
sar
jnp
cwde
iret
enter
jg
out
out
xor
ficomp
loope
xchg
in
test
push
ss
repnz
cmp
mov
cmps
push
mov
je
dec
dec
sahf
fs
cli
push
out
data16
aaa
mov
inc
into
adc
jmp
inc
jecxz
retf
pop
sbb
pop
mov
lods
(bad)
popf
outs
ret
ds
ins
push
push
fsubrp
push
sahf
das
pop
imul
mov
xor
mov
imul
cli
mov
mov
lods
iret
fidivr
mov
stc
fisubr
jae
icebp
adc
pop
xor
fnstcw
iretw
jl
(bad)
fidiv
mov
xor
sub
out
pop
repz
pop
add
ins
push
mov
xor
ficomp
jmp
sub
sub
cdq
xchg
fnstenv
mov
jmp
div
xlat
clc
ins
mov
pushf
imul
fwait
in
outs
out
cmp
push
cdq
jmp
in
repz
jge
push
scas
and
pop
iretw
mov
int3
int3
outs
mov
fidiv
test
pop
test
xchg
jge
aas
aam
mov
xor
ret
test
fwait
mov
jae
jns
bsr
dec
out
cld
cs
pop
sti
pop
bnd
ja
repz
jecxz
mov
stos
lea
test
xor
mov
jl
out
push
es
ret
repz
inc
aaa
or
test
fcomp
and
mov
pop
pop
sub
outs
pop
ds
fild
xor
fwait
outs
jl
or
mov
jecxz
std
fxch
pop
sti
mov
mov
mov
mov
(bad)
int
push
cld
xchg
jp
mov
call
ins
(bad)
aad
fldenv
mov
inc
push
mov
ins
cmc
lds
scas
in
xor
pop
xor
cmc
sbb
mov
jge
lahf
addr16
xor
dec
std
xor
out
pop
push
mov
jl
aaa
stos
and
std
enter
mov
sbb
xor
retf
mov
cmp
iret
cmp
int3
hlt
aas
retf
repz
shl
push
mov
sub
mov
cli
jecxz
in
(bad)
gs
cmc
imul
dec
stos
out
mov
retf
(bad)
(bad)
data16
daa
jmp
push
jnp
out
in
in
jge
mov
ds
div
pushf
lods
into
mov
xor
lods
jle
xor
icebp
stos
movsx
imul
aaa
mov
pop
mov
jecxz
cwde
fild
push
ins
xor
mov
imul
push
iret
fnstcw
push
popf
fwait
sub
xor
sub
arpl
(bad)
bound
loop
pop
pop
mov
out
enter
data16
clc
dec
sub
jecxz
jno
arpl
ins
or
aam
pop
push
outs
sbb
sar
out
movs
push
jmp
jbe
aam
(bad)
cwde
jp
sar
icebp
sbb
jge
jp
(bad)
(bad)
loop
sub
xor
xor
(bad)
scas
(bad)
js
imul
cli
sbb
test
sti
mov
xchg
cmc
jne
cmc
aas
test
lahf
in
mov
stos
retf
cli
mov
push
imul
ror
push
jno
retf
rol
loope
push
in
repnz
push
mov
ror
xchg
(bad)
dec
shl
in
das
jns
outs
jb
push
into
jge
jecxz
call
fistp
retf
mov
lods
aad
scas
jge
bound
jne
out
fcmovu
xchg
mov
cs
mov
and
repz
xchg
lds
into
outs
push
jg
sar
lods
push
mov
into
fcomp
sti
dec
push
ja
push
sbb
mov
mov
pop
fwait
shr
sbb
aad
lea
dec
int3
push
sbb
xchg
retf
push
retf
xor
lods
mov
mov
sbb
dec
push
outs
aad
data16
out
and
pop
arpl
lds
pop
dec
sub
imul
scas
in
mov
pop
lahf
data16
xlat
fistp
(bad)
fcomp
iret
stos
das
(bad)
and
mov
jl
xlat
call
jle
cmc
out
icebp
stos
cmc
int
pushf
sub
lahf
inc
jecxz
vrcpps
dec
stos
lods
mov
fistp
fstp
leave
inc
lahf
push
mov
and
(bad)
pop
(bad)
stos
jg
ins
(bad)
jmp
in
je
xchg
leave
repnz
test
mov
push
dec
mov
push
outs
aad
data16
js
outs
mov
bound
lahf
lods
pushf
fstp
retf
mov
sub
jecxz
sub
jbe
lds
mov
mov
mov
scas
push
add
xchg
pop
in
inc
sub
ficomp
sti
arpl
std
sbb
xchg
test
lods
mov
stos
xlat
mov
shl
enter
mov
out
ss
xchg
ds
lods
repnz
retf
dec
ins
jl
std
imul
cmc
stos
(bad)
push
ins
cmp
pop
ss
jae
clc
aad
pop
jmp
mov
cli
fsubr
ror
ds
(bad)
pop
pop
rcr
xchg
jmp
call
pop
jae
push
push
jmp
or
pop
(bad)
outs
aam
xchg
aaa
pop
inc
push
pop
fcomp
add
jecxz
cmc
mov
dec
std
in
mov
cmp
jle
fxch
leave
les
pushf
int
ins
pop
(bad)
cld
stc
(bad)
aas
fsubr
xlat
repz
jmp
cmp
aas
add
xchg
ja
xor
std
xor
mov
jae
xchg
cmp
fsub
jo
jns
jbe
aad
ss
in
push
xchg
cmp
jmp
lahf
lods
pushf
test
mov
jg
dec
mov
pusha
std
push
sahf
(bad)
push
dec
repnz
call
xor
lods
dec
xchg
xor
sahf
pop
mov
retf
sub
(bad)
rcr
out
scas
ins
cmp
(bad)
ds
dec
dec
dec
xor
stos
aaa
push
mov
lea
fist
cmc
fimul
xchg
test
pop
jle
test
stos
mov
push
out
sbb
fsubr
xlat
mov
ins
dec
loopne
ficomp
pop
das
mov
jmp
xor
adc
aaa
cmp
call
mov
retf
mul
xchg
sub
ret
sbb
mov
mov
das
jmp
daa
and
push
data16
pop
test
pop
mov
xlat
test
mov
aam
and
stos
mov
jle
mov
call
sti
js
outs
mov
test
adc
sub
mov
test
cmp
sar
sti
fcomp
ja
lahf
call
sub
jmp
push
xchg
cmps
xor
lea
jecxz
lds
jle
fsub
sbb
lea
imul
in
sub
(bad)
sub
sbb
cmc
jp
loop
cwde
cdq
xchg
xchg
cmp
fistp
mov
push
sbb
dec
lods
scas
fnstcw
push
fwait
lods
cmp
sbb
cmps
fdiv
not
jmp
(bad)
inc
pop
cmps
movs
and
jb
pop
into
neg
pop
mov
stos
into
ins
push
push
ficom
sbb
cmc
cld
jb
fisttp
xor
jg
std
fsubp
(bad)
je
test
shr
(bad)
sbb
int3
mov
and
sbb
ror
scas
jl
(bad)
xlat
mov
ss
sbb
pop
retf
gs
and
lds
(bad)
clc
dec
cmp
repnz
dec
push
inc
aad
(bad)
pop
jg
or
int3
sbb
dec
jbe
push
dec
xchg
bnd
clc
sbb
jmp
stos
xchg
pop
mov
out
xchg
addr16
fsubr
iret
xchg
cmc
jge
cmc
stc
xor
fistp
xchg
imul
sub
xchg
outs
bound
push
scas
lea
sbb
leave
push
popf
mov
fld
lods
pop
cmc
xlat
clc
mov
jecxz
call
pop
into
neg
sub
jge
mov
and
sbb
sahf
aas
sub
cmc
xlat
ds
jae
jno
(bad)
push
mov
jg
into
ds
mov
icebp
aad
mov
into
xchg
jne
aam
mov
push
in
jno
lea
mov
std
clc
bound
xor
aas
jecxz
mov
inc
mov
push
in
fsubr
mov
dec
xor
lods
pop
cdq
mov
mov
pop
jge
jl
jmp
rol
mov
mov
pop
stc
retf
lods
cmc
mov
ficom
pop
jge
imul
cmc
(bad)
xor
xor
mov
sti
pop
int
fcmovnb
lods
ss
jno
cli
outs
stc
(bad)
sbb
retf
ficomp
aam
mov
cmp
push
fs
jmp
sub
push
pop
mov
push
imul
and
retf
sahf
jno
mov
(bad)
les
mov
rcl
stos
retf
repnz
jmp
test
ss
fnstenv
std
xor
stc
(bad)
mov
xlat
inc
gs
cmp
dec
sub
jge
push
cmps
repnz
jg
push
mov
jg
sti
push
jbe
dec
ret
lods
loop
stos
mov
cld
outs
neg
push
stc
out
mov
jge
(bad)
and
and
mov
in
lea
das
push
sbb
cmps
ins
dec
rol
inc
jge
cmp
pop
mul
lds
pop
mov
iret
sub
(bad)
ds
adc
jge
mov
mov
xchg
(bad)
xor
push
out
jmp
scas
jae
mov
clc
leave
push
jge
(bad)
(bad)
mov
mov
mov
rep
(bad)
sti
cli
mov
pop
scas
in
mov
jns
test
scas
icebp
cmp
xchg
sub
int
pop
pop
xor
xchg
or
jne
(bad)
retf
pop
jecxz
mov
jmp
mov
imul
lds
lock
into
aad
js
jle
mov
sbb
repnz
sub
lahf
lds
jge
loop
call
js
sti
cmp
outs
es
mov
cld
pop
call
int
fistp
xchg
cmp
stos
aaa
push
out
cmc
jns
jecxz
lds
jmp
imul
jmp
dec
fwait
jnp
xor
xlat
mov
mov
(bad)
fsubp
push
daa
mov
es
cmps
cdq
mov
fistp
das
adc
dec
js
sti
jae
inc
jmp
add
(bad)
leave
xlat
cwde
jbe
nop
cmc
arpl
in
lahf
lahf
out
(bad)
xor
pushf
imul
stos
jnp
pop
imul
jg
fmul
ss
idiv
jbe
sar
mov
scas
das
arpl
sub
push
aad
xor
jmp
cmp
(bad)
int
inc
gs
lods
arpl
adc
jns
jae
pop
jmp
xor
mov
out
xor
cmp
(bad)
jle
sbb
mov
test
jae
popf
stc
xor
mov
fs
jne
repz
(bad)
push
fwait
mov
lods
(bad)
pop
fwait
xor
push
jle
sbb
sub
sbb
hlt
jne
lods
jp
sub
adc
cdq
xchg
mov
xor
es
lds
sub
lds
inc
cmc
mov
cmp
sub
push
aam
lods
push
fist
jle
mov
sahf
out
retf
into
push
pop
sub
mov
adc
les
imul
ficomp
push
lods
fstp
mov
mov
data16
jl
into
sti
mov
scas
test
mov
jle
outs
jne
(bad)
bound
xlat
dec
scas
jbe
jmp
test
cli
popa
push
stos
(bad)
arpl
adc
ficomp
out
sub
and
int
pop
(bad)
fild
icebp
data16
scas
jno
dec
mov
cli
pop
(bad)
push
xlat
jp
pop
xchg
js
scas
sbb
pop
imul
fbstp
stos
mov
inc
fisubr
(bad)
dec
pop
xchg
xlat
stos
xlat
aam
and
sbb
mov
gs
push
cmps
scas
retf
mov
scas
jae
push
call
pop
loop
aas
mov
lahf
call
jns
pop
ds
xor
cld
pop
(bad)
fdivp
rcr
idiv
out
aas
jl
pop
dec
pop
xchg
cdq
jp
ficomp
imul
xlat
adc
dec
mov
js
aaa
(bad)
int
jne
and
jmp
cmp
inc
and
leave
jmp
ss
jl
js
call
ds
int
jo
pop
cli
into
mov
in
iret
xor
out
pop
aad
xchg
pushf
mov
xor
fidiv
hlt
movs
and
sti
jle
mov
push
xchg
loope
cli
jp
jg
(bad)
dec
call
push
lods
jl
ficomp
pop
mov
ss
cld
mov
push
xchg
fcmovne
xor
loop
shl
mov
das
sub
jl
pop
jmp
(bad)
inc
out
fbld
(bad)
fistp
(bad)
std
lahf
and
cld
shl
push
fwait
jge
aam
out
fistp
mov
pcmpgtd
ja
inc
je
cmp
hlt
lock
xor
dec
jmp
out
fstp
jns
pop
jns
push
popa
std
repnz
popf
sbb
xlat
mov
in
mov
jmp
pop
lahf
je
push
jns
push
xor
stos
pop
lods
lea
pop
pop
cmp
jne
scas
dec
xchg
div
mov
outs
xor
scas
mov
out
mov
ret
jmp
cmp
xor
mov
dec
fld
cmp
sbb
(bad)
cmp
imul
cli
mov
(bad)
aas
(bad)
icebp
shr
pop
out
(bad)
data16
ficom
jle
outs
imul
push
sub
pop
push
jbe
fldenv
push
mov
stc
nop
mov
mov
or
push
pop
addr16
data16
and
(bad)
mov
scas
outs
fcmovnbe
cmp
in
cmp
fiadd
jge
cmp
lea
lods
cld
cdq
aam
imul
mov
pop
jns
loop
(bad)
inc
out
psubusw
test
ror
mov
jg
repnz
js
xchg
test
icebp
call
push
test
dec
arpl
aad
repz
pop
out
inc
arpl
mov
pop
inc
iret
int
mov
loope
cmp
mov
pop
in
push
imul
(bad)
xor
mov
jl
jae
js
pop
cmp
push
jnp
in
(bad)
call
mov
xor
mov
push
xlat
mov
mov
push
lock
scas
js
cli
dec
loop
dec
push
out
pop
mov
retf
(bad)
push
cmp
xchg
faddp
mov
rcr
int3
imul
int3
(bad)
jne
xchg
dec
in
popa
mov
mov
sub
ja
outs
pop
pop
xchg
jno
pop
fnstsw
(bad)
sbb
das
enter
sub
cmps
jne
stc
imul
push
jnp
mov
addr16
cmp
jmp
adc
cmc
jns
fsubr
xchg
shl
sbb
(bad)
out
mov
(bad)
retf
push
fwait
mov
out
and
xlat
xchg
cmc
mov
lds
pop
xchg
scas
je
pop
xor
into
mov
ja
dec
mov
jmp
cmp
(bad)
int3
retf
mov
mov
out
cs
pop
sub
add
loopne
dec
mov
jge
gs
push
std
ficom
and
mov
ja
xchg
retf
(bad)
fstp
inc
jg
hlt
loop
sahf
push
and
pop
inc
addr16
fs
cdq
in
cmp
aam
inc
mov
in
mov
pop
icebp
mov
mov
xlat
mov
pop
mov
sub
mul
(bad)
data16
xchg
outs
jl
test
ins
adc
mov
shl
push
sti
out
stos
and
mov
and
jle
mov
sahf
ret
xchg
jl
neg
pop
dec
dec
mov
in
push
push
xchg
das
fsin
xchg
cmp
mov
js
jmp
add
das
popa
cmovne
xrelease
and
add
xchg
xchg
lea
not
lods
call
jno
xchg
fcom
mov
dec
push
xchg
daa
mov
adc
les
(bad)
je
retf
pushf
std
add
xor
xor
fucomi
popf
stos
stos
out
and
sub
fnstcw
jnp
mov
shl
data16
cld
push
mov
shr
jecxz
stos
in
xchg
push
gs
dec
dec
sahf
fsubr
pop
cld
add
add
add
pop
ss
dec
cs
cmp
cmc
add
pop
mov
test
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
mov
pop
aas
(bad)
out
(bad)
jae
mov
out
std
retf
lahf
mov
(bad)
lock
aas
(bad)
clc
pop
mov
cs
add
add
add
lock
outs
repz
xchg
jmp
xlat
xlat
or
pop
aas
(bad)
icebp
xchg
std
imul
jecxz
mov
into
mov
imul
mov
lods
lea
add
add
add
ror
int
jnp
bound
aas
mov
outs
cld
mov
loope
or
(bad)
jg
sbb
popf
fst
or
out
(bad)
clc
jecxz
jg
lods
cwde
inc
call
add
xchg
fsubr
mov
repnz
scas
(bad)
mov
in
iret
mov
jmp
(bad)
(bad)
mov
fistp
and
pop
jmp
mov
call
jg
int
ret
xchg
(bad)
fisubr
inc
arpl
mov
ror
add
add
add
jmp
stos
mov
test
out
lock
test
pushf
hlt
ret
pop
rol
adc
jecxz
imul
in
mov
out
hlt
mov
lahf
adc
imul
leave
jne
data16
add
add
add
loope
mul
out
gs
mov
out
call
mov
jnp
(bad)
pop
jg
xor
push
add
pop
idiv
gs
xchg
loope
xchg
data16
add
add
add
retf
mov
lods
repz
repnz
jl
lock
jae
inc
mov
jbe
pop
push
jl
jge
mov
cmc
fwait
mov
(bad)
hlt
retf
sbb
stos
test
jmp
loop
fimul
add
add
add
lock
out
gs
pop
mov
cld
jnp
aad
lods
scas
dec
xchg
pop
xchg
mov
pop
push
jmp
out
test
inc
lock
mov
mov
call
jnp
jle
cmp
icebp
jno
jle
pop
stos
(bad)
outs
das
enter
xchg
inc
mov
jmp
clc
daa
sahf
bound
add
add
add
scas
xchg
mov
cli
xlat
dec
repz
mov
in
pop
data16
idiv
pop
mov
fsubr
cld
pushf
push
sahf
inc
ret
repnz
les
cld
cmp
mov
push
outs
aam
arpl
cmp
(bad)
imul
scas
aad
icebp
psllq
xor
mov
std
dec
jmp
sbb
sbb
add
add
add
lock
out
(bad)
retf
aad
retf
lds
call
mov
mov
test
cli
fcmovnb
leave
or
pop
fmul
int
pop
not
cmp
div
test
stc
jmp
inc
jg
lea
out
xchg
test
(bad)
push
cmps
fistp
mov
ins
cld
cmp
inc
fs
xor
movs
(bad)
pop
arpl
aad
cmp
ret
aas
mov
cmp
mov
mov
add
add
add
dec
in
add
cwde
mov
jae
fsubr
das
inc
mov
pop
sar
fwait
mov
arpl
jbe
mov
aas
mov
(bad)
shr
mov
fs
sbb
and
jge
aam
iret
aam
fnstcw
fwait
jmp
std
dec
std
dec
ficomp
stos
jmp
cmc
movs
push
data16
test
mov
adc
add
add
add
mov
in
pop
(bad)
jne
nop
div
and
pop
sub
dec
das
cmp
dec
shr
das
int3
jg
xchg
cld
pop
adc
fcmovbe
retf
shl
add
jle
test
fmul
sbb
(bad)
icebp
ja
(bad)
pop
(bad)
retf
add
out
dec
cmp
mov
xrelease
cli
repz
fstp
shl
xchg
icebp
jmp
popf
scas
jge
clc
repnz
call
add
test
pop
pop
push
mov
aas
std
imul
in
popa
(bad)
in
jg
jp
xchg
xchg
mov
mov
lods
jmp
fwait
mov
aas
add
jg
xchg
stc
mov
jl
mov
cli
cld
add
nop
aas
sbb
ds
mov
dec
add
add
add
add
test
in
gs
dec
(bad)
(bad)
xor
icebp
maskmovq
neg
cmc
mov
idiv
loope
mov
mov
push
jmp
in
add
data16
test
cmps
inc
das
test
fbld
outs
jge
mov
pop
cmc
jmp
pop
cmp
(bad)
jno
mov
add
add
add
add
cmp
ret
mov
ror
add
add
add
out
retf
fsub
jecxz
into
jmp
xchg
jmp
mov
ror
add
add
add
(bad)
fmul
xchg
(bad)
idiv
jmp
sbb
stc
aas
pop
mov
mov
ret
jg
imul
xchg
das
sti
popa
xchg
(bad)
mov
outs
pop
cmp
add
add
add
es
inc
jns
test
ret
fist
imul
loopne
idiv
pop
cmp
(bad)
push
out
mul
cld
in
jns
fist
(bad)
and
add
add
add
add
test
out
inc
mov
mov
std
mul
pop
(bad)
ja
pop
cmp
pushf
test
retf
pop
dec
mov
cmp
aas
hlt
enter
jb
cmp
dec
add
add
add
add
inc
cld
lahf
dec
jns
outs
aad
cmc
cmp
out
es
std
and
aaa
jmp
call
add
inc
push
pop
sub
clc
js
cld
jg
sbb
add
add
add
add
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
add
add
add
add
sbb
dec
in
mov
sub
(bad)
out
mov
add
add
add
add
shl
mul
icebp
pop
cmp
pop
push
call
sti
rol
xchg
xchg
sbb
add
add
shl
inc
fild
jge
lock
add
add
add
lock
cli
shl
xor
adc
mov
xor
idiv
jo
xchg
data16
add
add
add
rcl
das
and
rcl
ss
mov
cmp
icebp
rcr
add
add
add
xchg
dec
loopne
div
mov
xchg
data16
add
add
add
rcl
das
and
in
pop
(bad)
ss
cs
mov
or
add
add
add
ror
in
sahf
pop
test
outs
out
jbe
wbinvd
dec
repnz
adc
add
add
add
pop
jmp
(bad)
lock
test
stc
ret
add
add
add
add
in
mov
sti
push
dec
mov
dec
imul
add
add
pop
mov
push
adc
add
add
add
add
mov
stc
sahf
pop
aad
jmp
(bad)
pop
push
jle
dec
sahf
fs
stc
cmp
pminub
add
add
or
das
(bad)
retf
(bad)
xchg
mov
das
stos
dec
repnz
fcmovbe
xor
push
fdiv
mov
ror
add
add
add
fcmovu
jmp
mov
mov
jecxz
or
add
add
add
rcl
int
in
pop
icebp
ret
out
mov
scas
outs
dec
ins
jl
out
sub
inc
push
xchg
test
add
add
add
mov
and
outs
repnz
xchg
call
aam
hlt
mov
jnp
add
add
add
shl
repz
outs
mov
mov
dec
sbb
loope
jb
dec
xchg
jecxz
int3
inc
jecxz
dec
xor
add
add
add
add
push
jl
(bad)
or
jge
sub
sub
pop
jp
js
push
stc
das
mov
pop
fadd
add
add
add
add
jmp
std
add
mov
or
add
add
add
shl
shl
ds
and
fmul
(bad)
out
sub
push
add
add
add
add
jb
aas
in
fidivr
out
pop
ins
(bad)
cld
dec
fwait
xchg
cmp
cmp
movlps
movlps
add
add
add
add
aad
jle
fidivr
mov
mov
aad
xlat
addr16
and
sbb
or
add
add
add
clc
mov
sti
xchg
(bad)
cmp
aaa
repz
xor
icebp
jmp
add
add
fistp
and
cdq
in
dec
int
jle
mov
stc
fwait
idiv
repz
mov
lock
test
add
add
add
add
(bad)
lds
xchg
fist
pop
inc
inc
dec
dec
mov
add
add
add
lock
xchg
call
idiv
dec
inc
pop
sar
stc
ret
add
add
add
add
xchg
clc
daa
inc
jmp
sti
int3
outs
fmul
sahf
aas
aas
shl
lods
scas
xor
test
daa
jnp
xor
add
add
add
add
add
mov
push
add
dec
add
add
add
add
pop
mov
fbld
ret
ror
add
add
add
aaa
gs
mov
ja
rcl
add
add
add
cld
cmp
add
add
add
mov
dec
xor
add
add
add
add
dec
div
push
push
cmps
dec
xor
add
add
add
add
inc
cld
xor
xchg
shr
dec
movs
cdq
add
add
add
add
xchg
or
call
add
clc
pusha
fldcw
sbb
mov
add
add
add
clc
push
jmp
(bad)
adc
lahf
xchg
(bad)
ror
add
add
add
xchg
jle
sub
add
add
add
or
fbstp
and
add
add
add
xlat
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
add
add
mov
pop
cld
dec
enter
add
shl
add
add
xlat
mov
push
push
push
add
add
addr16
mov
data16
adc
xchg
xchg
in
add
call
std
fwait
in
call
das
iretw
dec
sti
ins
cmps
mov
adc
clc
sbb
idiv
jno
jns
imul
retf
pop
mov
lea
jnp
mov
ins
clc
sub
ins
mov
sahf
cmp
add
sub
mov
cmp
or
nop
ret
imul
not
idiv
jmp
lods
and
mov
ja
ja
je
sbb
aaa
in
or
js
mov
jbe
leave
inc
cmp
ds
scas
pop
dec
mov
aad
push
xchg
dec
mov
mov
xlat
dec
into
cmps
xlat
sar
jnp
sbb
in
sub
retf
or
xlat
(bad)
ins
loopne
sub
xchg
addr16
(bad)
xchg
data16
or
in
sahf
std
fwait
or
and
ret
aam
mov
das
pop
jnp
aad
fcomp
gs
cdq
cmps
xchg
or
sar
push
ficomp
mov
jge
std
les
jge
jmp
out
aad
sub
push
rep
repz
ss
push
out
mov
sahf
mov
cli
jl
cmp
shr
sahf
scas
and
ss
(bad)
ins
jg
pop
fmul
jge
mov
fdivr
xor
dec
add
push
mov
dec
xlat
mov
mov
(bad)
adc
add
jbe
cmp
ja
fld
sahf
and
dec
sahf
jl
xchg
je
or
arpl
sar
lahf
jl
pop
std
jb
and
mov
ja
pop
mov
pop
xchg
into
sub
and
mov
sahf
lds
pop
mov
aad
adc
pop
in
retf
(bad)
in
mov
or
ins
je
xchg
mov
loope
fnstcw
std
ins
push
xchg
daa
fsubr
dec
call
jl
sub
jge
push
mov
fdiv
push
rcl
test
das
xor
mov
fnstcw
stos
sbb
inc
xlat
adc
(bad)
jmp
mov
sar
int
out
icebp
outs
out
lods
jmp
xor
(bad)
(bad)
cmp
imul
icebp
pushf
pop
retf
addr16
dec
cwde
mov
movs
jae
mov
hlt
dec
addr16
sahf
into
adc
or
sub
sbb
call
or
js
jp
repz
jbe
out
mov
stos
sti
int3
xchg
imul
lock
pusha
aas
data16
xor
cdq
(bad)
ins
pop
arpl
push
call
neg
mov
rcr
push
push
jmp
inc
jecxz
test
jmp
fnstcw
xchg
outs
jl
mov
jae
cmc
mov
xchg
mov
stos
push
jnp
aas
mov
loopne
lods
mov
int3
cmc
xor
and
cmp
scas
loope
xchg
in
jae
out
call
pushf
bound
xchg
lea
jp
stos
push
int3
mov
push
sub
sub
jecxz
jne
addr16
ins
ror
out
xor
cmp
sbb
mov
mov
pop
fstp
imul
hlt
add
sbb
pop
arpl
inc
and
ret
lahf
mov
shl
(bad)
sahf
(bad)
fdivr
jne
scas
pop
mov
inc
out
retf
fs
inc
(bad)
aam
cmp
mov
xor
push
mov
ja
jge
pop
mov
mov
cld
pop
stc
adc
ins
jge
(bad)
cld
mov
jmp
sbb
mov
mov
jnp
cmp
inc
sub
xlat
hlt
sub
cmps
jae
ja
popf
mov
jae
mov
sahf
sti
adc
mov
adc
push
arpl
fdiv
dec
retf
fdivrp
in
dec
mov
arpl
cld
sbb
pop
push
iret
stc
cmps
icebp
jmp
pusha
in
ror
fwait
mov
test
repz
arpl
push
nop
mov
stos
push
je
jle
sub
and
ret
aas
inc
dec
outs
popf
scas
push
xchg
dec
mov
push
inc
imul
mov
pop
sub
mov
arpl
or
scas
jmp
aas
popf
aas
pop
sbb
loop
xchg
jmp
pop
pop
ror
icebp
scas
data16
div
cmp
ins
mov
jl
mov
in
fdiv
jne
mov
cmp
mov
fsub
inc
iret
jmp
jae
jbe
(bad)
pushf
dec
and
lods
mov
dec
stos
out
sahf
mov
sbb
xor
scas
loopne
fistp
js
popf
repnz
mov
(bad)
mov
xchg
(bad)
xchg
lea
mov
xchg
in
das
sbb
jb
aas
push
dec
push
les
int
add
cmp
xchg
jp
xor
add
xchg
push
pop
cmp
jg
xchg
pxor
jnp
ds
xchg
(bad)
aad
in
pop
movs
xchg
push
xchg
and
pop
iret
iret
outs
outs
jge
jmp
ins
mov
(bad)
fisubr
sbb
mov
ss
dec
ds
mov
dec
jle
mov
jnp
in
sbb
cmps
jns
aad
cmp
gs
pop
push
xchg
int
scas
out
data16
fs
scas
push
xchg
mov
mov
ror
jp
pop
cmp
bound
pop
jbe
call
pop
mov
adc
push
inc
scas
sbb
push
jnp
jb
jl
xchg
jno
es
jecxz
xchg
mov
aad
clc
js
mov
call
adc
mov
nop
cli
push
iret
or
iret
scas
dec
jae
jp
sub
data16
mov
xor
push
xchg
dec
das
inc
inc
scas
xorps
jns
enter
repz
sbb
fcom
imul
jns
div
scas
cmp
xchg
cmp
sbb
gs
sub
jae
inc
jno
cmp
jge
adc
sub
xchg
lods
pushf
xlat
jmp
or
push
(bad)
scas
sub
push
aas
ficomp
(bad)
scas
push
xchg
dec
mov
fs
sti
loop
adc
pop
mov
push
fnstenv
push
das
pop
fist
lea
jnp
xlat
mov
mov
outs
test
jmp
sub
mov
data16
ins
stc
mov
cli
sar
pop
adc
scas
push
dec
int
retf
retf
mov
mov
aam
test
dec
mov
add
fbstp
xor
leave
(bad)
bound
sbb
sbb
cmp
push
pop
mov
ins
cmp
lods
loope
mov
icebp
out
(bad)
cmps
cmp
push
mov
jecxz
mov
jecxz
in
outs
shl
jmp
and
xchg
repz
dec
jg
bound
jb
and
rcr
imul
fcmovu
mov
rcr
mov
fisttp
fidiv
mov
(bad)
jae
outs
dec
repnz
jns
mov
jmp
stc
sub
imul
mov
xchg
jg
(bad)
jmp
mov
xchg
ins
jl
jmp
jl
push
jmp
imul
bound
push
xchg
outs
jnp
loop
xlat
je
(bad)
lods
outs
rcr
call
fcomip
and
fwait
(bad)
cmp
xchg
test
jmp
iret
cmp
ficomp
cdq
push
xchg
int
pop
mov
sbb
out
lea
shl
jg
outs
neg
out
popf
out
inc
pushf
ins
fdiv
dec
ins
imul
out
sar
xchg
in
int3
shr
xchg
sbb
jecxz
cmp
sti
lahf
popf
pop
ds
mov
fstp
addr16
(bad)
out
repz
push
xchg
push
pushf
outs
sti
cmp
scas
xchg
movs
cmc
hlt
clc
mov
in
pop
mov
add
pop
pop
xchg
ds
ds
sub
retf
sti
cmp
xchg
xchg
movs
jne
push
sbb
imul
xchg
sub
sub
iret
ins
jg
push
mov
test
(bad)
out
movs
jle
mov
aam
sar
(bad)
imul
mov
mov
jl
mov
pop
mov
iret
bound
sti
ss
scas
mov
xor
jmp
push
pop
out
in
cmp
push
arpl
pushf
hlt
cmp
scas
cmp
fcomi
jne
cld
adc
arpl
gs
sbb
dec
add
sbb
inc
addr16
(bad)
aad
fwait
ja
adc
clc
enter
rol
xchg
ja
pop
int
das
imul
pop
mov
movs
(bad)
cdq
cmc
mov
cmp
mov
(bad)
mov
push
sbb
push
lahf
pop
int3
mov
xor
outs
(bad)
sar
mov
stos
mov
in
fild
xchg
push
aas
mov
aam
mov
arpl
(bad)
pop
scas
lgs
xchg
ja
mov
ffreep
out
ds
pop
mov
push
outs
cld
pop
pop
loop
xchg
sar
inc
aad
mov
xor
mov
hlt
push
xor
cmp
lea
(bad)
ss
mov
pop
stos
ret
dec
neg
mov
in
clc
pop
jg
inc
das
cs
jl
mov
mov
icebp
gs
aas
and
aas
jl
(bad)
pmaddwd
pop
ja
addr16
push
iret
bound
jl
jl
scas
inc
jecxz
adc
sbb
lds
mov
test
push
cmp
cmps
xlat
ja
push
aam
cdq
icebp
cwde
push
jno
lods
mov
jl
lods
mov
ss
mov
mul
jae
mov
xchg
cdq
mov
sar
call
mov
call
pop
(bad)
les
fwait
out
cdq
cmp
xor
jmp
je
cmp
xor
xchg
mov
cli
iret
cwde
repz
dec
dec
push
xchg
push
pushf
mov
scas
mov
clc
pop
std
scas
fnstcw
adc
or
jecxz
pop
aaa
sub
aaa
jno
jbe
jbe
adc
movs
je
shl
retf
jp
mov
sbb
dec
std
push
fild
ficom
inc
mov
(bad)
xchg
addr16
cld
(bad)
retf
mov
sub
sahf
in
pop
pop
mov
(bad)
mov
imul
leave
cli
ss
jmp
(bad)
cdq
das
fwait
in
aam
xor
shrd
pop
xor
outs
and
mov
sub
fisubr
xchg
leave
(bad)
push
push
jmp
mov
push
stos
(bad)
scas
pop
aas
xchg
jne
scas
xchg
push
lea
xor
dec
dec
cmp
stos
scas
aad
test
(bad)
ficomp
mov
jecxz
scas
xchg
int
lods
std
fwait
in
out
push
mov
std
push
cmp
dec
(bad)
xchg
sbb
outs
inc
stc
mov
mov
mov
xchg
(bad)
jns
jmp
and
leave
clc
sbb
mov
imul
leave
jo
pop
addr16
jp
ja
lods
jmp
fidivr
mov
sbb
push
lods
daa
push
xchg
lea
mov
dec
dec
xchg
arpl
mov
mov
arpl
xor
call
cmps
push
mov
jne
mov
(bad)
in
xlat
xchg
scas
outs
out
test
test
xchg
push
sbb
mov
outs
stc
es
retf
mov
repz
retf
sbb
adc
jp
mov
mov
dec
add
sbb
mov
xchg
fnsave
rcl
rcl
fwait
mov
mov
(bad)
mov
repz
pushw
push
xor
cmp
jecxz
cmp
fdivr
add
(bad)
out
jmp
jns
retf
bound
(bad)
jmp
test
jg
stos
out
lahf
fist
push
mov
out
stos
cmp
pop
repz
imul
(bad)
out
xchg
fs
nop
push
jnp
jb
clc
int
inc
jae
in
gs
xor
push
jnp
loop
xchg
out
mov
repnz
(bad)
(bad)
loop
arpl
cmp
mov
out
jmp
or
jmp
mov
rcr
sub
pop
cld
push
pop
ins
aaa
pop
or
outs
(bad)
push
ds
xor
mov
push
gs
push
sbb
pushf
ja
xor
scas
mov
lods
ss
adc
pop
mov
sub
mov
in
les
repz
retf
les
pop
dec
mov
(bad)
cmps
mov
jecxz
jmp
loop
push
scas
(bad)
icebp
int3
sbb
mov
push
pop
in
xchg
js
fsubr
fdiv
dec
xchg
mov
stc
sbb
sbb
dec
jle
cli
mov
fidivr
mov
jns
dec
xor
pop
aas
scas
ins
dec
push
and
ins
cmp
cdq
mov
mov
adc
mov
pop
mov
and
leave
(bad)
mov
sahf
mov
aam
mov
sbb
xchg
mov
cli
fst
dec
imul
imul
sbb
inc
in
add
mov
and
push
pop
adc
adc
aaa
inc
jg
int
mov
jl
pop
mov
pop
imul
(bad)
test
stos
ins
sub
xchg
xchg
js
cmp
jl
pop
retf
mov
gs
pop
pop
mov
pop
mov
test
sti
mov
xlat
into
add
scas
ins
jg
sti
xchg
in
scas
int
das
mov
test
push
dec
jne
ins
mov
jp
xor
and
data16
xor
pop
push
fist
sbb
clc
(bad)
repz
sub
cmps
iret
jno
inc
jne
out
dec
dec
ss
xchg
outs
push
push
xchg
pop
mov
cmc
cmps
pop
cmps
push
stos
mov
ins
jl
xchg
pop
sti
lods
mov
mov
(bad)
mov
mov
icebp
jecxz
mov
cmp
pusha
push
push
mov
cli
aam
dec
dec
push
jle
gs
out
(bad)
adc
jp
push
cmp
adc
arpl
xlat
gs
mov
jmp
mov
in
(bad)
push
faddp
(bad)
xlat
adc
in
lds
ds
jl
pop
(bad)
std
lods
jne
bound
mov
test
rcl
dec
movs
mov
xor
repnz
dec
jl
mov
dec
lods
(bad)
mov
mov
push
out
push
lods
cmp
adc
jb
dec
push
les
jle
lahf
repnz
cmp
test
jecxz
cli
data16
call
xchg
in
jl
fcomi
jl
mov
sub
pop
push
push
ins
(bad)
jl
fcmovb
inc
jns
cmp
(bad)
in
jnp
popf
leave
cli
in
jmp
xor
js
jno
dec
xor
add
fimul
mov
mov
dec
aaa
pop
in
lock
adc
mov
mov
mov
sahf
push
int3
ins
fisttp
jnp
fsubrp
aad
jge
mov
sub
mov
(bad)
lahf
cmp
cmp
sub
push
fstp
clc
imul
lahf
sahf
(bad)
pusha
jmp
mov
xor
mov
jae
fs
test
iret
pop
lods
aas
fnstcw
retf
les
xor
pop
imul
shr
mov
xchg
neg
pop
bound
cmc
scas
cmp
lea
xor
push
iret
mov
es
fnstcw
jne
clc
cli
(bad)
fcomip
into
aad
pop
frstor
sub
inc
lahf
pop
jb
cmp
mov
imul
rcl
jae
and
sbb
sti
int3
mov
popf
sbb
cwde
ins
pop
sub
imul
xchg
ins
sub
fsin
cmp
push
iret
xchg
js
imul
jge
mov
sbb
push
scas
mov
sbb
xlat
shr
cmp
pop
aaa
loop
scas
push
iretw
sbb
lea
out
xchg
neg
test
xor
add
hlt
popa
and
ss
mov
fistp
mov
stc
arpl
fld
lods
call
arpl
jno
aam
jl
push
cmp
mov
test
(bad)
jns
arpl
nop
fbstp
imul
gs
dec
repnz
jbe
cwde
cmp
mov
ds
and
xchg
lds
fucomi
stc
jns
jmp
jbe
iret
enter
cmp
mov
scas
lods
outs
mov
test
aad
(bad)
jmp
xor
les
cli
aam
xchg
leave
(bad)
loop
data16
lahf
clc
jbe
clc
sub
jnp
fs
sub
mov
loop
sbb
lahf
jmp
gs
(bad)
mov
imul
sub
cmps
push
push
(bad)
cli
fwait
lds
pop
xchg
lods
js
cld
mov
pop
jmp
jae
sti
test
addr16
pop
je
pop
iret
cmp
mov
jne
mov
pop
pop
int
js
fidivr
lods
jno
(bad)
popa
data16
mov
sub
out
int3
mov
aad
icebp
int
mov
xor
pop
push
xchg
jp
std
aam
gs
div
xchg
fs
pushf
in
cmp
xor
sbb
xchg
sbb
std
mov
(bad)
stos
xor
pushfw
mov
push
lods
xchg
fstp
inc
mov
mov
in
lea
xor
imul
test
cmp
add
dec
add
cmps
pop
call
out
sbb
push
lods
inc
pop
fsubp
ret
stos
cmp
movs
xor
cli
in
in
sbb
fcomp
(bad)
shl
xchg
imul
jmp
cmp
jge
xchg
fstp
popf
inc
fild
loop
ja
std
dec
xor
loop
aad
loope
add
mov
mov
add
fsubr
data16
cwde
mov
loop
cmp
(bad)
fstp
daa
sub
xchg
(bad)
mov
hlt
in
pop
sahf
xor
jg
(bad)
jl
jne
repz
xchg
push
add
sti
mov
sti
cmp
add
mov
in
fwait
jne
jne
jge
(bad)
std
in
jae
sar
data16
jp
jmp
dec
xchg
jge
call
aas
jb
mov
jg
jecxz
sbb
push
in
stc
inc
(bad)
sbb
adc
(bad)
out
das
mov
aad
jmp
xchg
ds
mov
jmp
jecxz
xlat
test
cmc
aad
sti
neg
icebp
xlat
mov
(bad)
mov
fsub
retfw
mov
jno
inc
pop
sub
ss
(bad)
fisubr
int
out
xor
jae
mov
fisttp
movs
cdq
add
xchg
in
div
and
jnp
ja
mov
repz
xchg
xchg
sahf
clc
mov
sub
hlt
(bad)
inc
dec
mov
lss
mov
mov
xor
clc
mov
xor
xchg
mov
mov
retf
xchg
shl
test
leave
sub
cmp
mov
inc
pop
mov
mov
iret
sbb
adc
pop
pop
fnstcw
stc
mov
cli
pop
jno
out
jbe
mov
mov
jno
out
ins
out
jge
jmp
xchg
iret
aad
dec
xor
add
push
dec
mov
add
mov
jecxz
xor
cmp
mov
retf
mov
int3
aas
test
call
les
(bad)
out
arpl
cmp
mov
push
ss
jle
pop
(bad)
xor
iret
iret
stos
jne
xchg
das
pop
sbb
mov
mov
xchg
inc
cmp
xchg
in
fldpi
fisubr
in
push
xchg
int
imul
mov
in
mov
xchg
cli
repz
out
in
cmp
push
loopne
xchg
in
jmp
jae
jmp
dec
mov
dec
xor
add
mov
aaa
pop
sbb
das
pop
addr16
mov
repz
stc
cmc
adc
pop
int
sub
cld
mov
inc
jmp
ins
lds
shr
push
cmp
aaa
mov
dec
imul
mov
call
ficomp
xlat
cmp
in
mov
xlat
push
pushf
jecxz
ficomp
xchg
lods
mov
fbld
dec
xor
add
mov
mov
mov
mov
mov
repnz
xlat
inc
cld
int
stc
movs
cmc
in
mov
sbb
loop
loope
jmp
jnp
push
jae
xchg
aad
imul
cmp
jne
jnp
stc
mov
outs
add
mov
jb
ja
mov
or
add
pushf
mov
mov
ins
push
loopne
cmc
pop
jp
out
xor
mov
mov
add
xchg
data16
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
add
add
sub
loopne
imul
add
add
mov
add
add
add
add
add
call
lea
add
mov
data16
add
and
sub
(bad)
out
mov
fdiv
add
rol
xor
add
mov
mov
jnp
xchg
xchg
add
mov
sub
inc
call
outs
jl
mov
repnz
movs
and
sti
adc
mov
ja
cmp
xlat
mov
retf
mov
jle
push
and
xchg
test
loopne
in
fstp
int
(bad)
stc
push
fisttp
mov
add
jl
jae
loop
fdivr
xor
dec
xchg
cmc
mov
sbb
addr16
std
xchg
int3
lods
adc
into
fs
icebp
call
cmp
movs
mov
mov
mov
push
scas
mov
repnz
sbb
or
sbb
jmp
mov
repz
test
loop
nop
cmp
pop
out
hlt
popf
call
data16
(bad)
je
dec
xor
add
jp
jecxz
in
xchg
cmp
xor
lods
fist
sub
jecxz
cmc
jae
fistp
leave
enter
dec
fnstcw
cmp
bound
call
jge
arpl
loope
jnp
jg
mov
jno
cmc
xor
mov
loopne
inc
out
xchg
fsubr
loop
pop
lahf
fucomip
movs
fist
lods
test
fwait
gs
imul
xor
ins
mov
repnz
popf
sbb
mov
xor
add
and
out
sbb
hlt
gs
ja
jp
mov
sub
xchg
xchg
cmp
retf
(bad)
cmp
xchg
popf
scas
gs
das
lds
icebp
mov
push
pop
outs
scas
cwde
mov
inc
scas
icebp
ja
fwait
xlat
sbb
pop
xlat
retf
dec
dec
sahf
int3
sahf
cmps
ja
jns
sahf
fs
ja
ss
ds
mov
lods
into
outs
pop
mov
sar
cs
in
sbb
xchg
and
sets
sahf
pop
lods
scas
mov
(bad)
imul
and
dec
xor
add
lods
fwait
imul
cmc
pusha
bound
mov
cld
sub
retf
push
cmc
std
xchg
aam
rcr
push
in
out
pop
mov
pop
jg
pop
mov
adc
aad
pop
les
das
lahf
out
cmp
iret
scas
lods
js
rcr
into
pop
jae
(bad)
sbb
fincstp
jmp
cli
in
or
iret
ja
das
scas
mov
int
pop
div
mov
out
and
(bad)
sbb
jae
out
rcr
scas
retf
clc
push
into
pop
ja
xor
xchg
lahf
in
jnp
popf
out
call
xor
and
mov
neg
(bad)
mov
movs
fs
fwait
xor
jp
cwde
sub
dec
repz
or
ins
mov
lock
leave
cli
outs
jno
gs
push
fwait
and
rcr
std
cli
lahf
popf
iret
xchg
jne
stos
mov
dec
mov
cmps
aaa
sbb
fcomp
dec
(bad)
(bad)
in
fidiv
sahf
icebp
imul
mov
cmp
int
(bad)
fs
out
out
out
test
mov
neg
mov
fwait
in
stos
shl
ds
fldcw
ins
outs
in
mov
sti
xor
push
jge
fistp
jne
addr16
aaa
ds
call
(bad)
sbb
ds
test
pop
cdq
int3
sbb
add
pusha
imul
lahf
jg
cmp
lahf
mov
into
in
sti
stos
iret
sti
mov
sbb
push
lahf
lods
ja
cli
imul
lods
xor
fisttp
cmp
retf
fcmovnu
rcr
fwait
scas
inc
sahf
(bad)
out
test
mov
rcr
int
imul
stc
cmp
cli
xor
sahf
push
push
cmp
jno
mov
pop
icebp
out
cld
stc
mov
data16
retf
mov
icebp
fwait
(bad)
fidivr
cmp
pop
xchg
xchg
lahf
lods
mov
xlat
pop
out
mov
push
bound
call
retf
cmps
aas
aas
inc
out
and
ds
data16
ficom
mov
cdq
mov
jbe
int
jp
fwait
neg
jmp
test
cmp
repz
fstp
jmp
cmp
in
aad
call
pushf
cmp
sub
lahf
scas
(bad)
fs
out
shl
jmp
ds
sbb
outs
push
dec
fnstcw
fnstenv
ss
aaa
push
(bad)
(bad)
das
xchg
mov
cld
xchg
in
shl
retf
repnz
jmp
gs
sbb
jne
addr16
cmc
repnz
mov
push
xchg
stos
mov
jb
mov
aaa
pop
dec
mov
lds
fbld
out
jns
fisttp
scas
mov
xor
cmp
jge
mov
ficomp
fisttp
(bad)
mov
arpl
jb
sub
push
stc
pop
cmp
push
call
xchg
in
pop
cmp
dec
in
push
add
dec
shr
idiv
shr
inc
out
out
cmp
push
xchg
mov
retf
(bad)
(bad)
dec
mov
sub
cmps
not
mov
cdq
inc
push
call
pop
dec
push
(bad)
fstp
sete
ins
fbld
pop
jne
ins
jmp
jnp
(bad)
in
cmp
fs
cmp
sar
stos
mov
mov
(bad)
push
fild
jl
cdq
cmps
xor
xlat
xchg
pop
jae
mov
dec
mov
neg
sti
cld
cdq
jmp
sbb
cmps
sbb
shl
aas
jecxz
pop
mov
retf
mov
and
addr16
pop
in
inc
imul
push
sbb
neg
movs
cwde
sbb
inc
jp
fcom
pop
mov
pushf
arpl
sbb
aad
scas
std
and
(bad)
call
mov
imul
dec
mov
inc
(bad)
fucomi
jne
hlt
loop
iret
xor
jmp
xlat
mov
jmp
fisubr
leave
push
cmp
jno
(bad)
imul
sbb
retf
fmulp
mov
(bad)
dec
popf
cmp
scas
cmp
fmul
test
mov
es
int
out
mov
mov
sbb
fstp
mov
repz
aaa
push
imul
mov
repz
sbb
(bad)
fstp
movs
pop
jnp
jmp
mov
or
(bad)
pop
repz
fs
jns
ins
dec
scas
dec
jmp
jge
cmp
inc
out
fs
addr16
sti
push
mov
aad
repz
mov
retf
mov
sahf
xchg
(bad)
in
(bad)
cmp
aas
dec
cmc
lods
ds
dec
stos
into
(bad)
sbb
xchg
sbb
sub
(bad)
mov
out
out
push
iret
push
dec
mov
out
ins
or
jmp
fstp
sub
mov
data16
mov
mov
mov
mov
jle
sti
cmp
dec
mov
(bad)
xor
(bad)
xor
rcr
das
mov
repz
shl
xchg
ss
mov
push
dec
(bad)
ins
jg
in
fisubr
dec
jae
imul
mov
loop
lods
test
cmc
jmp
test
das
call
aad
jno
push
je
imul
sbb
or
shr
ja
cdq
cmp
inc
jmp
cmp
(bad)
dec
in
cmc
into
int3
retf
xor
inc
dec
ss
popa
(bad)
call
dec
aaa
data16
gs
aaa
cmps
mov
xor
scas
jbe
lahf
jne
mov
(bad)
fcmovu
loop
iret
pop
rcr
jae
outs
push
mov
sub
and
jmp
ficom
cmp
adc
into
fstp
retf
fnsave
into
out
fistp
stc
mov
sbb
mov
and
pop
xchg
int
sbb
xchg
ins
mov
mov
call
test
ins
addr16
pop
ins
shl
jns
popf
rcr
mov
xchg
cmc
pop
arpl
out
repnz
iret
mov
push
in
pop
hlt
icebp
mov
mov
xor
test
jp
xlat
(bad)
sbb
push
lods
movs
and
cdq
push
sbb
mov
sbb
(bad)
repz
mov
(bad)
enter
cli
push
sbb
dec
ss
out
pop
bts
not
out
lea
mov
mul
enter
inc
out
push
fistp
xor
mov
out
vmovdqu
xor
fist
retf
xlat
pop
jmp
das
xlat
mov
cmp
inc
neg
(bad)
ins
jg
mov
pop
cmc
jecxz
cmp
mov
inc
fyl2x
arpl
xchg
push
aas
adc
sar
jle
mov
fwait
test
loopne
jmp
stc
push
xchg
push
in
dec
movs
jp
fild
lods
mov
cmp
iret
(bad)
cmp
pop
xor
icebp
jns
jnp
pop
out
lea
scas
mov
xor
lahf
scas
ss
outs
pop
cld
ds
das
and
add
ds
mov
mov
hlt
cmps
cmp
mov
sub
xchg
stos
cmc
jae
int3
xchg
out
gs
les
fs
fsubr
retf
test
mov
sub
sahf
push
outs
inc
cli
loopne
jno
cmp
sahf
jge
sbb
xor
sbb
mov
jnp
outs
xor
jnp
ds
(bad)
sub
inc
ins
xchg
addr16
mov
imul
popf
xchg
xchg
xor
jp
stc
xchg
cmc
xor
retf
leave
retf
out
(bad)
jge
sbb
fmul
pop
jae
sub
push
ss
xor
push
mov
js
arpl
dec
stos
sub
(bad)
(bad)
(bad)
push
mov
in
outs
das
scas
pop
cmp
xchg
int
(bad)
clc
cld
pop
jmp
lods
mov
lahf
in
mov
mov
jns
(bad)
sbb
xor
(bad)
adc
daa
cmp
aam
push
fwait
fwait
sbb
sti
xlat
ds
mov
mov
test
lods
mov
stos
mov
pop
imul
pop
lahf
xchg
aaa
pop
inc
dec
pushf
cmps
test
outs
pop
mov
aad
jge
xlat
fwait
repnz
data16
cmp
hlt
(bad)
xchg
in
das
sbb
jb
jge
leave
mov
mov
data16
mov
xchg
pop
cdq
lods
lods
push
ins
push
jge
mov
jmp
sbb
into
bound
jmp
test
nop
add
movs
div
lods
sbb
(bad)
sti
mov
out
(bad)
int
mov
in
outs
fidivr
pop
jecxz
xchg
fcomp
cmp
mov
ins
jp
jns
push
test
push
dec
fnstcw
jle
and
cmp
push
jp
icebp
repz
aas
mov
dec
sti
push
dec
ss
cdq
sar
mov
fist
(bad)
pop
push
mov
jbe
xlat
rcr
mov
sbb
int
jge
clc
pop
sahf
icebp
imul
stos
idiv
cwde
push
cmc
xor
pop
mov
xchg
ins
loop
out
int
mov
dec
lods
dec
stos
lea
stos
(bad)
lahf
(bad)
jg
ss
rcr
sub
xchg
(bad)
vmaxss
(bad)
jb
ss
gs
xor
mov
aaa
sbb
lods
into
push
(bad)
cmp
push
scas
mov
mov
xor
aad
xchg
cli
push
mov
cwde
lea
fwait
push
fst
mov
gs
lahf
scas
fcomp
pop
ss
imul
imul
xor
lods
mov
pushf
movs
xlat
iret
test
sbb
xchg
(bad)
push
jmp
ss
fwait
mov
mov
jge
fisubr
int
mov
stc
stos
loop
jbe
pop
stos
mov
dec
in
pop
(bad)
retf
repnz
sub
and
mov
sub
mov
xchg
fistp
jge
bound
mov
push
xchg
ret
jne
cmp
repz
mov
or
xchg
xchg
add
mov
aaa
mov
retf
dec
lods
fild
dec
ficom
cmc
sub
nop
sub
pop
sub
xor
enter
lea
int3
(bad)
int
shl
stos
cmp
mov
leave
mul
retf
xchg
xchg
cmp
int
inc
in
cdq
push
fwait
sub
jmp
bound
sar
cli
inc
out
mov
es
dec
dec
lods
jne
jle
and
cli
cld
stc
mov
iret
clc
mov
int3
jmp
ins
push
repz
jge
pop
cmp
pop
pop
in
mov
in
imul
adc
dec
lods
out
ficomp
ins
scas
mov
xchg
and
pop
mov
iret
fsub
int
mov
in
iret
xchg
fs
pop
retf
mov
pop
fild
stos
std
push
lods
inc
(bad)
(bad)
inc
cli
fwait
lea
pop
ins
xor
sar
pop
dec
mov
int
ins
mov
fisttp
neg
icebp
arpl
sbb
inc
imul
je
cmc
out
test
mov
bound
jg
lods
in
lahf
xlat
mov
mov
mov
push
(bad)
ins
mov
test
fld
mov
js
and
pop
jle
jle
sub
pop
mov
(bad)
daa
(bad)
clc
cdq
cmc
cmps
jecxz
gs
pop
xor
inc
(bad)
xor
rcl
jno
jnp
fdiv
mov
sahf
cdq
cdq
pmullw
in
xor
gs
mov
push
aam
mov
jle
mov
jae
jns
data16
fiadd
icebp
(bad)
lods
cld
js
stos
fst
(bad)
in
cdq
sbb
sar
xchg
outs
(bad)
fisttp
fcmovu
lods
sub
xor
jecxz
pop
pop
jne
mov
iret
not
clc
sbb
ds
sti
retf
mov
cmp
jno
test
sti
xor
(bad)
mov
jnp
cmps
iret
ds
cmc
xor
into
int3
push
jge
jl
rcr
xor
mov
int3
ins
jg
outs
xor
fwait
popf
rcr
fild
cs
and
movs
std
mov
mov
push
jmp
iret
xchg
fucomip
pop
mov
push
mov
jmp
imul
(bad)
adc
xchg
repnz
(bad)
mov
(bad)
icebp
(bad)
int3
scas
cdq
sbb
test
ins
lods
dec
retf
jle
cli
jno
xor
out
(bad)
aaa
sahf
add
push
xor
leave
(bad)
(bad)
mov
into
push
adc
and
scas
mov
test
cdq
jle
idiv
pushf
mov
sub
leave
push
cmp
push
mov
sahf
jnp
mov
(bad)
pop
ins
dec
dec
push
les
xlat
(bad)
sub
icebp
clc
sbb
aam
inc
stc
stos
retf
(bad)
cmp
jmp
iret
dec
sub
outs
stc
data16
sub
jle
out
mov
jl
out
(bad)
dec
in
xlat
bnd
addr16
dec
mov
cmp
les
jnp
aas
sbb
pop
in
(bad)
fldcw
dec
push
sbb
lock
pop
ja
pop
xchg
fidivr
scas
xor
lods
dec
fistp
pop
sub
jecxz
jmp
xchg
and
fisttp
ror
fwait
test
mov
icebp
inc
mov
sahf
push
jg
cmp
ins
ins
mov
test
cmp
std
int
jle
lds
std
lea
ss
cdq
mov
stos
popf
daa
mov
stos
sub
cdq
sar
out
lea
xor
(bad)
aad
sti
and
xor
(bad)
fistp
mov
in
dec
xor
out
stos
ss
xlat
lahf
(bad)
xchg
into
xchg
fwait
int
push
inc
inc
arpl
aad
mov
popf
xchg
pop
ins
data16
jg
lods
xor
fsubr
jp
mov
into
mov
into
xchg
out
jge
lods
lahf
push
xor
leave
(bad)
sub
shl
and
movs
aad
inc
dec
arpl
inc
dec
ss
xor
mov
pop
int
sar
lahf
loop
stos
popf
fistp
jle
and
into
scas
aad
pop
xor
pop
arpl
cmp
out
and
mov
jbe
ficomp
jg
call
xor
ret
jno
data16
(bad)
xor
aad
sub
fisttp
push
stc
fiadd
cld
int3
cwde
movs
mul
stos
jne
ficomp
aaa
imul
cmp
jl
inc
arpl
jmp
push
fsub
pop
xchg
dec
push
pop
stos
(bad)
div
mov
lock
sbb
std
mov
into
cdq
mov
pop
pop
dec
imul
ins
int3
pop
inc
mov
jecxz
pop
fwait
stos
daa
fidivr
cwde
xchg
icebp
stc
jbe
(bad)
lods
jae
xchg
(bad)
sbb
push
pop
mov
jl
mov
mov
out
and
fnstenv
iret
inc
stos
pop
imul
cli
push
pop
mov
cmp
mov
cwde
push
aad
pop
pop
mov
sub
mov
(bad)
retf
scas
xchg
xchg
imul
sub
fnstcw
(bad)
mov
sub
jl
fucomi
xchg
cmp
scas
ds
aam
stc
mov
cmps
imul
mov
fbstp
fdiv
xchg
mov
std
ds
retf
mov
mov
mov
test
sub
ds
lods
mov
jle
scas
aad
(bad)
daa
mov
mov
mov
(bad)
xlat
lods
imul
jne
push
xchg
scas
xchg
test
cmc
retf
fcmove
not
cli
gs
adc
arpl
pop
(bad)
sahf
cmp
bound
sbb
jno
sbb
jl
in
pop
inc
imul
int
jnp
repz
pushf
aam
mov
pop
dec
ds
mov
out
(bad)
std
popf
lods
mov
jmp
fnstcw
repz
dec
jnp
and
sub
mov
ds
adc
add
(bad)
inc
(bad)
rcl
(bad)
mov
mov
mov
add
xlat
in
std
stos
xor
inc
pushf
jno
cmp
cmp
ror
aaa
mov
mov
lahf
call
jg
or
sub
jns
sub
es
mov
ins
into
in
push
test
into
aad
mov
sbb
cmps
jae
outs
das
xor
cdq
imul
aad
mov
fwait
xchg
cmp
mov
imul
mov
add
push
jg
fidivr
fistp
clc
mov
sti
mov
mov
lahf
scas
and
xchg
imul
push
fld
sub
lock
xchg
fs
sub
add
fcomip
mov
(bad)
lods
das
pop
es
ror
jge
fldenv
jmp
jge
call
xlat
call
jmp
sbb
test
scas
icebp
sbb
lahf
jg
mov
cmp
xchg
aad
xchg
in
pop
gs
das
sbb
jae
jns
fcmovu
scas
fnstenv
xor
out
ins
ins
pop
lahf
arpl
cmp
cmp
ficomp
jge
jnp
fcom
icebp
mov
lahf
outs
out
aad
(bad)
push
not
and
xor
mov
push
mov
add
fild
sti
mov
pop
or
jmp
stc
xchg
cld
add
jns
mov
dec
xor
cdq
lods
pop
sti
pushf
sbb
sti
and
int
pop
jae
jmp
cmp
fwait
ja
pop
mov
xor
repz
adc
cwde
jne
hlt
jae
cmps
mov
xor
outs
and
mov
sbb
out
gs
push
cmc
loope
sti
scas
jo
mov
imul
mov
pop
loop
push
fistp
aas
std
mov
pop
sub
iret
xchg
mov
(bad)
jmp
stc
stc
jnp
mov
mov
mov
aad
hlt
mov
neg
call
and
add
jl
clc
and
es
jns
mov
dec
(bad)
fadd
push
push
(bad)
push
push
jl
xor
fild
xor
int3
fldcw
pushf
lahf
xor
lahf
loopne
jmp
stos
iret
aad
xlat
clc
lods
(bad)
fdivr
adc
lahf
arpl
sti
imul
out
jns
sbb
das
fstp
dec
mov
mov
pusha
dec
dec
jmp
std
mov
fisttp
dec
sti
data16
(bad)
mov
mov
ror
adc
retf
xchg
jnp
jno
ja
or
scas
push
xchg
das
fnstenv
pop
stos
loop
sub
dec
mov
into
push
cs
ror
xchg
mov
out
test
lds
mov
mov
push
cmp
scas
mov
fsubr
mov
pop
fdivrp
cmp
ja
pop
cmps
mov
ss
push
jbe
popf
mov
mov
jp
push
pop
inc
lods
fbld
dec
push
data16
pop
add
jmp
(bad)
jl
pop
xor
das
pop
cld
pop
ins
ins
stc
imul
(bad)
loope
xlat
jno
mov
cld
scas
mov
xor
repz
scas
mov
scas
repnz
add
mov
lea
div
sti
xchg
pop
mov
outs
push
inc
fnstenv
out
out
jae
sbb
aas
jmp
lds
cmp
cmp
in
push
pop
inc
push
iret
xchg
jnp
(bad)
mov
mov
xchg
xchg
mov
jp
xor
popf
stc
jmp
sbb
sub
sti
aad
mov
push
sbb
pop
in
out
call
adc
fwait
adc
cmp
retf
popf
out
sub
sub
out
mov
pop
mov
fimul
not
outs
and
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
sub
add
add
add
add
add
dec
xor
add
add
add
add
mov
dec
jo
xor
pop
out
std
clc
jmp
scas
jmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
imul
add
inc
cmp
popa
enter
test
adc
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
add
add
jnp
add
or
mov
add
xchg
or
xchg
or
pushf
add
pushf
or
pushf
or
movs
add
movs
or
movs
or
lods
add
lods
or
lods
or
mov
add
or
add
add
or
(bad)
or
into
add
into
or
into
or
into
adc
(bad)
add
(bad)
or
(bad)
or
(bad)
adc
fimul
add
or
ficom
add
or
out
or
add
out
or
jnp
or
adc
sub
or
add
or
or
adc
out
add
or
out
adc
test
and
or
or
add
adc
test
cmp
or
add
or
or
mov
or
or
or
or
adc
into
adc
test
or
or
inc
add
lods
adc
(bad)
adc
mov
add
or
arpl
or
add
or
mov
or
out
or
adc
ficom
adc
add
out
add
or
or
or
adc
or
or
mov
or
adc
fiadd
or
add
movs
adc
(bad)
add
pushf
adc
jnp
or
sbb
or
or
or
mov
or
adc
and
sub
and
dec
pushf
xchg
mov
or
adc
xchg
adc
lods
adc
not
add
adc
sub
or
or
and
or
add
cmp
adc
or
adc
adc
add
add
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
adc
inc
sub
add
add
add
add
mov
sub
mov
dec
pushf
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
shl
push
pop
xor
and
aas
push
push
cmp
inc
and
aas
adc
shl
sbb
and
and
or
add
and
nop
and
push
push
add
mov
leave
xchg
mov
mov
and
(bad)
pop
mov
loopne
imul
clc
mov
push
add
cwde
dec
cmc
or
or
in
mov
lea
xor
lods
adc
je
sti
add
pop
add
sub
add
add
add
fst
xchg
push
js
inc
jo
das
add
and
imul
xor
or
and
mov
add
jmp
xchg
sub
pop
mov
test
gs
aam
mov
test
sbb
rol
(bad)
pop
add
add
or
xchg
add
fs
inc
shr
mov
fs
lds
sbb
add
je
aaa
adc
add
push
push
inc
imul
fadd
dec
inc
xor
add
xchg
jp
add
movs
(bad)
fiadd
lea
xlat
adc
inc
jo
cmp
cwde
je
into
data16
loope
cmp
adc
add
shl
pop
and
es
add
movs
cmp
dec
dec
xchg
bound
rol
pop
jle
sub
xchg
ss
inc
cmc
add
and
sbb
add
sub
inc
add
pusha
mov
fwait
xchg
push
add
rol
lock
jno
mov
hlt
mov
jno
push
pop
adc
or
mov
ja
add
add
(bad)
push
add
inc
pop
fadd
leave
sbb
inc
inc
rol
adc
add
jge
dec
shl
jns
mov
add
jno
mov
shl
xlat
jnp
push
out
mov
push
icebp
ja
gs
test
mov
dec
inc
lock
mov
mov
stos
bound
sahf
in
xchg
arpl
aas
lods
call
and
out
(bad)
and
xchg
ins
repnz
sub
mov
repnz
xor
sub
int3
xor
ins
repz
out
repz
cmps
xchg
je
iret
sub
inc
xchg
rcr
pop
cmp
movs
adc
mov
fld
pop
push
push
xchg
push
add
xor
test
js
xchg
add
adc
test
mov
shl
xchg
jnp
sbb
xlat
dec
add
mov
sbb
sbb
pop
jmp
adc
stos
push
test
fnstsw
adc
add
adc
cli
int
adc
test
push
shufps
adc
cmp
js
sub
(bad)
push
inc
fwait
add
or
pop
rcl
in
xor
sub
add
fcom
mov
pop
mov
xor
int
data16
mov
push
push
cmp
mov
scas
add
xchg
retf
inc
in
cmp
adc
add
mov
add
pusha
sar
adc
xor
or
jge
pop
cwde
pop
(bad)
adc
out
mov
repz
adc
or
push
push
cld
mov
and
or
or
aam
es
add
cmp
jmp
xchg
xor
inc
and
rcr
add
sub
in
cmp
or
pop
add
out
lds
bound
add
dec
and
add
add
mov
or
retf
cwde
adc
cmps
sub
add
jae
jmp
test
rol
cmps
xchg
daa
fisubr
pop
mov
mov
lods
cmp
mov
mov
adc
jnp
es
fs
fadd
xchg
dec
add
or
and
cmp
cmp
jl
mov
lods
or
je
in
cmp
mov
cmp
(bad)
jecxz
add
sbb
and
jmp
pop
jle
xchg
das
fsub
mov
mov
fmul
test
adc
push
add
popf
pop
mov
repz
loopne
cmps
cmp
dec
into
jb
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
xchg
inc
clc
adc
push
dec
xor
aam
add
rcl
jno
sub
sbb
and
push
int
add
inc
and
rol
es
or
inc
add
rol
and
and
pusha
or
mov
retf
add
shr
sub
jp
aaa
call
adc
outs
push
xchg
es
add
push
xor
sbb
mov
ins
push
pushf
add
adc
imul
jecxz
add
mov
xchg
sub
fisubr
add
xor
in
and
pop
sub
sub
pop
sub
(bad)
cld
and
adc
stos
xor
dec
aam
enter
or
add
inc
lods
add
sub
jl
ffree
ja
inc
dec
lods
dec
adc
sub
and
pop
pop
inc
push
inc
dec
sub
xor
add
sbb
jle
push
dec
push
push
xchg
icebp
pop
adc
and
stos
ds
inc
cs
or
or
pushf
add
pop
aad
add
mov
aam
hlt
fisttp
(bad)
mov
push
xchg
(bad)
call
add
push
cmp
sub
cmc
dec
imul
sub
or
inc
xchg
cs
push
dec
es
out
cmps
add
sbb
add
push
add
mov
sub
add
mov
jno
and
cmp
sub
add
mov
push
add
dec
mov
movs
inc
test
rcl
lock
and
inc
and
add
mov
mov
mov
push
add
adc
mov
xchg
push
in
icebp
dec
sbb
and
ror
test
push
add
cmp
xchg
ror
mov
pop
neg
inc
and
data16
mov
sub
dec
rcr
sub
mov
inc
pop
outs
arpl
ror
push
xchg
mov
add
enter
push
outs
int
lods
dec
leave
(bad)
pop
test
sub
and
sub
paddsw
cmc
ror
mov
add
xor
xchg
add
or
mov
outs
jo
imul
(bad)
outs
pop
mov
and
or
pop
es
inc
outs
xchg
adc
add
xor
movs
ret
fmul
dec
iret
ror
dec
gs
nop
pop
push
xchg
push
sub
movs
sbb
push
cmp
mov
cmps
aad
shl
pop
dec
and
lds
and
movs
jp
xchg
dec
movs
stos
xor
lods
or
dec
icebp
xchg
or
sahf
push
fimul
call
test
sahf
jae
inc
or
xchg
adc
shr
dec
xchg
xor
mov
xor
cmp
outs
push
mov
rcl
push
push
jle
add
adc
cmp
shr
xchg
ds
jg
or
hlt
(bad)
ins
bound
or
bound
je
nop
jle
mov
jle
out
outs
adc
sub
js
xchg
jae
mov
jb
in
sub
sbb
mov
jne
or
or
jns
ror
cld
jne
mov
retf
pusha
or
or
les
sbb
in
je
push
sub
unpcklps
fld
call
loopne
adc
cmp
pusha
mov
(bad)
mov
jmp
out
js
cmp
jo
jae
jnp
jmp
xchg
(bad)
js
into
(bad)
test
jg
sub
and
ds
(bad)
cli
(bad)
(bad)
clc
iret
mov
(bad)
sti
(bad)
inc
sbb
pop
add
or
or
or
push
clc
adc
adc
adc
sbb
add
and
sub
xchg
jge
test
div
mov
div
adc
and
arpl
das
enter
jle
xlat
jle
add
inc
sbb
fs
dec
add
add
inc
push
or
test
adc
xor
push
ins
out
mov
adc
pop
xchg
inc
adc
push
lock
ror
pop
inc
adc
xchg
cmp
add
mov
add
add
rcl
aas
dec
xchg
sbb
push
xchg
cmc
add
adc
push
mov
gs
adc
loope
add
jge
pop
inc
cmc
adc
popa
sbb
jno
cmps
add
ja
adc
jne
mov
push
ret
mov
jl
push
mov
push
jge
inc
xchg
mov
adc
imul
repnz
mov
ja
pop
pop
inc
das
mov
cmp
pop
push
mov
xchg
inc
dec
adc
adc
retf
xor
test
sbb
push
sahf
cmp
or
sbb
and
mov
test
mov
push
push
aad
and
adc
pop
or
mov
sub
loop
or
adc
adc
fs
and
mov
call
loope
sbb
xchg
jne
pop
inc
pop
je
pop
shl
adc
push
xchg
push
sub
test
jo
icebp
imul
call
sub
add
retf
mov
les
shl
mov
mov
adc
pusha
mov
sub
and
add
jb
mov
adc
inc
pop
xor
cmps
push
adc
and
cmp
xor
add
adc
and
push
cmp
mov
mov
inc
movs
sbb
mov
fild
rol
jp
cmp
aaa
pop
pusha
pop
shl
cmps
adc
adc
pop
push
mov
xchg
xor
and
adc
rol
inc
push
hlt
lds
test
repz
xchg
popa
fs
mov
sbb
xor
add
pop
pop
loopne
and
add
popa
jle
jo
push
pop
pop
aaa
pop
nop
test
loope
push
add
adc
adc
adc
push
or
sub
pusha
arpl
xchg
mov
pusha
dec
loop
fisub
xchg
pop
sbb
test
mov
push
jmp
add
icebp
adc
inc
xchg
xchg
icebp
inc
out
dec
clc
jne
mov
stos
sbb
sub
push
and
fwait
bound
lahf
rcr
out
ret
leave
xor
pusha
das
jne
push
dec
mov
xor
inc
test
fst
pop
movs
jns
not
mov
sahf
or
movs
and
je
adc
and
xor
pop
pushf
add
xor
cmp
inc
ins
loope
inc
stc
pop
cmp
sub
mov
std
mov
mov
cmp
xor
(bad)
enter
aaa
rcl
jmp
and
xor
pop
adc
push
push
or
add
push
xlat
cmp
data16
mov
jmp
xchg
das
push
loopne
push
mul
gs
sbb
mov
or
popf
jp
and
inc
sbb
push
dec
xor
and
and
push
add
ret
(bad)
xor
inc
mov
and
popf
fsubp
es
aad
aas
push
call
xor
push
and
in
mov
jb
pusha
adc
jae
jae
jne
add
inc
adc
add
dec
add
loop
iret
cwde
shl
cld
push
mov
jnp
out
les
pop
bound
xchg
outs
std
xchg
inc
mov
sub
xchg
xchg
or
retf
mov
lahf
dec
test
and
lahf
icebp
adc
adc
bound
stos
push
jbe
cmp
stos
mov
imul
aam
sub
xchg
cmp
push
push
push
bnd
pop
add
push
sub
jns
xchg
and
imul
adc
outs
clc
mov
iret
fcomp
mov
push
jno
jno
imul
ret
inc
add
jbe
adc
xchg
rcr
push
scas
sub
loope
dec
(bad)
adc
mov
jecxz
addr16
xor
popa
daa
js
push
mov
daa
jg
es
mov
adc
or
pop
sub
mov
add
loopne
cmp
pop
sahf
add
loop
xlat
cdq
mov
sbb
daa
test
add
ret
push
sub
pop
pop
inc
sahf
pop
shl
sub
push
jb
add
bound
rcl
adc
and
or
in
ficom
ret
call
or
add
push
(bad)
hlt
daa
neg
sbb
adc
fst
or
imul
aad
inc
out
adc
xchg
push
dec
dec
sub
or
jb
ss
jo
mov
retf
pop
shl
call
sbb
cmp
xchg
push
sbb
push
jb
add
jb
and
ja
sub
es
jno
mov
sbb
test
mov
add
repz
ss
mov
test
push
mov
sbb
bound
rcl
(bad)
add
jecxz
loope
cs
jmp
or
mov
and
xchg
push
adc
push
mov
outs
pop
mov
mov
ret
movs
mov
jbe
mov
adc
mov
test
mov
xor
nop
pop
xor
test
outs
jne
aaa
cmp
push
cmp
push
xor
pusha
lods
adc
xor
ficom
enter
aaa
cmp
sub
push
dec
shr
imul
sbb
jecxz
mov
repz
cmp
sbb
daa
popf
mov
(bad)
push
ret
inc
lds
bound
and
pusha
lods
repz
xchg
jb
inc
dec
add
sahf
pushf
in
bound
mov
jae
retf
adc
js
mov
shl
jo
adc
jbe
(bad)
mov
je
add
push
sub
aam
test
mov
pop
add
pusha
jnp
add
mov
jns
lds
mov
dec
mov
dec
adc
inc
cmp
sbb
push
adc
in
jo
cmp
sar
pop
mov
dec
fbld
pop
pop
and
imul
mov
inc
and
popa
int
mov
mov
lds
pushf
rcl
cmp
or
neg
cdq
pop
int3
mov
int3
ret
clc
pop
adc
xchg
xchg
mov
jno
push
xor
out
imul
xor
pusha
push
pop
adc
push
pusha
add
ror
push
pop
lock
push
inc
mov
jge
ror
sub
mov
int
loop
sti
cli
or
dec
pop
inc
pop
inc
icebp
add
mov
movs
xor
push
jge
jl
rcl
dec
pop
and
clc
rol
aam
cmp
inc
jge
dec
popf
aam
mov
dec
std
aam
sbb
push
sub
and
add
adc
dec
add
add
add
or
add
mov
sub
popa
inc
add
add
test
sbb
push
sbb
adc
or
inc
dec
sbb
xchg
fs
mov
pop
push
movs
call
and
fmul
mov
retf
jnp
pop
sub
lea
adc
inc
imul
xor
cmps
add
mov
std
mov
cmp
add
mov
mov
mov
enter
sbb
adc
adc
ret
or
or
or
add
pushf
je
pop
mov
inc
rol
nop
dec
push
inc
inc
add
add
dec
pop
dec
add
and
mov
add
sbb
mov
push
mov
repz
cmp
cmp
call
push
fadd
pop
pop
mov
jo
add
inc
sub
and
mov
pop
push
pop
mov
cmp
inc
or
clc
loopne
push
ss
inc
outs
cmps
aad
and
fdiv
or
dec
jl
and
or
pop
add
add
xchg
inc
or
in
inc
(bad)
call
add
je
les
or
inc
mov
adc
xchg
inc
jmp
les
cmp
add
js
add
add
fcom
in
push
dec
adc
cdq
inc
mov
mov
out
call
(bad)
adc
(bad)
lock
add
clc
adc
push
cli
mov
or
add
sbb
in
aaa
inc
mov
test
leave
mov
shl
add
inc
hlt
mov
shr
xor
shl
sub
pop
or
ret
stos
inc
sbb
add
add
rol
pusha
push
mov
adc
jo
cmp
xchg
loopne
mov
and
mov
inc
(bad)
add
(bad)
or
jle
jecxz
cmp
mov
test
pop
rol
dec
cli
sub
add
pop
and
pop
xor
or
mov
xor
or
adc
add
(bad)
add
js
mov
or
ret
pop
or
lock
fsubrp
ret
add
push
mov
test
pusha
xchg
add
inc
int3
sub
cmp
add
sub
jo
and
xchg
imul
(bad)
rol
adc
and
push
add
ret
sub
push
add
add
jne
test
add
lods
addr16
mov
adc
in
mov
or
fisubr
and
loopne
aam
dec
lods
add
cmp
pushf
add
ret
adc
cmpxchg
add
fcmove
push
add
rol
add
or
or
lock
hlt
push
mov
lock
test
fild
or
pop
cs
pushf
sub
or
out
in
into
or
pusha
mov
inc
bndstx
sbb
cmps
cmp
shl
or
leave
cmp
pop
xor
pop
loope
loop
hlt
lods
push
cmp
add
add
mov
mov
call
and
pop
fsub
sub
test
add
pop
fsub
loopne
adc
mov
push
add
add
add
jnp
add
repz
push
push
pop
add
mov
adc
fcomp
ret
inc
add
repz
ins
nop
or
jo
add
cmp
adc
pop
adc
add
mov
push
adc
adc
mov
xor
or
pop
ins
or
xor
adc
and
cmp
das
adc
xor
loopne
adc
mov
add
enter
and
xchg
push
cmp
add
sub
cmp
add
add
dec
push
test
loopne
add
jbe
lea
adc
cmp
inc
sbb
inc
pop
jl
mov
cld
movs
add
in
push
cmps
mov
add
in
xchg
xor
into
mov
int
add
add
sub
adc
pop
pop
sbb
sbb
(bad)
xchg
inc
or
rol
add
push
jp
popa
stc
cmp
inc
cmp
clc
in
je
cmp
rcr
sub
rol
aam
jb
ins
arpl
cmp
mov
popf
lods
mov
fwait
and
adc
inc
xchg
into
add
mov
push
dec
shl
mov
lahf
and
sbb
fild
sbb
cs
add
fmul
or
sbb
scas
inc
pop
cmp
pop
ror
add
add
dec
loope
ror
adc
jge
clc
ror
call
xchg
or
adc
jmp
movs
add
xor
inc
and
add
xor
add
pop
mov
cld
test
cli
les
lock
mov
fwait
jecxz
and
(bad)
xchg
shl
or
pop
and
shl
add
add
cmp
push
xchg
into
push
rol
fldenv
ffree
scas
xor
aam
mov
mov
xchg
fcomp
in
inc
out
aas
mov
in
xchg
jl
or
and
shl
sahf
jbe
mov
pop
adc
pushf
or
pop
dec
and
adc
push
pop
gs
adc
jmp
adc
leave
ins
neg
jl
add
cmp
push
in
jb
fst
cmp
loope
add
mov
scas
in
sub
dec
jo
jne
add
sub
inc
add
lock
add
mov
ins
stos
and
pop
pop
jmp
jbe
gs
add
jmp
enter
pop
jmp
test
push
int3
or
xor
lds
sub
std
(bad)
pusha
daa
add
sbb
sub
jno
and
and
mov
mov
popf
inc
pusha
cld
xor
test
pop
mov
push
sbb
ins
add
outs
cwde
push
pusha
mov
or
retf
push
sbb
sbb
jo
sub
push
out
popa
xor
scas
adc
cmps
test
cmp
movlps
jnp
test
xchg
push
retf
xlat
pushf
outs
fldcw
and
mov
test
adc
or
retf
inc
add
sbb
dec
shr
cmp
pusha
add
call
sub
in
sbb
fld
test
es
or
movs
leave
or
fisttp
inc
mov
push
retf
test
xor
stos
fld
push
adc
adc
loop
xchg
push
test
mov
fild
lock
sbb
push
or
and
and
repz
mov
stos
dec
and
mov
int3
ror
and
loopne
xchg
pop
test
xchg
pop
xchg
pop
not
rol
inc
loop
fiadd
jp
retf
add
fisttp
mov
or
pop
stos
sub
push
mov
fstp
and
sub
xor
mov
ins
cmc
not
jp
jno
sbb
outs
ins
(bad)
and
push
sahf
add
scas
and
out
xchg
not
pop
loopne
rcr
pop
das
push
cmp
cmovae
lahf
mov
rol
or
add
bound
ds
into
mov
add
(bad)
mov
xor
xchg
sub
mov
mov
fmul
xlat
add
jo
mov
add
pop
mov
pop
(bad)
fst
push
add
mul
fadd
add
add
nop
add
xor
jne
adc
add
aaa
jle
push
jle
xchg
cmps
push
aad
cld
xor
sbb
aas
data16
jl
mov
add
jno
cmp
cmp
add
push
adc
sub
add
adc
sbb
jne
adc
add
mov
aaa
mov
sub
add
push
xor
mov
jge
mov
cmp
jp
enter
jle
pop
test
test
sahf
repz
pop
loopne
cli
arpl
mov
div
arpl
cmps
test
mov
mov
cmp
xchg
imul
stc
push
add
add
enter
daa
jbe
adc
ins
loopne
ss
inc
push
hlt
and
and
lock
add
inc
add
mov
push
rcl
push
daa
inc
and
nop
add
in
adc
push
xchg
sub
xor
sbb
or
push
dec
in
add
mov
add
rol
inc
add
mov
xor
add
cmp
xor
xchg
cmp
push
xchg
lea
enter
js
lahf
push
mov
imul
inc
add
push
mov
sbb
nop
sub
add
inc
cdq
push
add
movs
pop
mov
xor
cmp
xor
mov
dec
pop
pop
daa
addr16
add
icebp
sbb
loopne
sub
xor
inc
sub
jp
test
test
sub
or
adc
push
adc
add
daa
cmp
test
dec
mov
test
das
jecxz
mov
and
sub
jns
adc
dec
push
test
xchg
sub
cmc
jecxz
cmp
add
or
add
sub
inc
cmp
add
dec
scas
xchg
jle
adc
push
mov
dec
dec
xor
cdq
mov
push
(bad)
push
add
inc
add
inc
xchg
es
adc
jbe
adc
loopne
jecxz
add
adc
add
aad
cmp
das
xchg
test
fsub
xchg
dec
imul
and
pop
inc
test
push
and
add
pop
call
sbb
scas
xor
and
add
sub
inc
pop
mov
xor
ja
inc
jecxz
movs
leave
mov
gs
in
add
pop
add
sub
es
cwde
inc
jmp
sub
ins
push
add
mov
or
add
adc
mov
mul
movs
cdq
xchg
jno
mov
jb
mov
lods
or
or
and
rcl
pusha
push
push
or
aaa
mov
jge
test
xor
and
xlat
cdq
clc
mov
aas
test
mov
sub
add
xchg
lahf
and
mov
cmp
cwde
fldenv
adc
add
add
mov
push
push
nop
adc
pop
cmp
cmp
daa
inc
and
xchg
dec
mov
das
nop
gs
add
or
sub
leave
and
mov
mov
pop
loop
xor
lea
adc
and
mov
pop
dec
pop
je
fdivr
add
cmp
mov
fst
call
xchg
fwait
xchg
ror
jl
sbb
add
inc
test
cmps
daa
mov
add
or
sbb
pop
cmp
daa
pop
pop
xchg
fbstp
add
outs
fisttp
xchg
into
sbb
push
addr16
scas
jbe
out
push
add
xor
jo
jecxz
dec
adc
cdq
sbb
and
cmp
retf
pop
mov
cmps
inc
fidiv
add
jge
jp
cwde
stc
lods
and
lods
push
adc
daa
add
sbb
sbb
out
pop
stos
dec
inc
nop
add
pop
sub
jmp
stos
out
cmps
outs
and
mov
call
scas
push
add
mov
adc
(bad)
enter
test
mul
std
push
pop
rcl
nop
pop
int
inc
adc
lods
add
add
cmps
mov
inc
sub
cmp
add
rcr
push
cmp
jno
mov
and
xchg
fidivr
mov
adc
cs
mov
cmp
push
fiadd
mov
sbb
mov
add
jo
fadd
addr16
add
and
jae
push
pop
mov
sbb
ret
out
fisttp
and
add
call
add
imul
xchg
es
dec
jnp
fwait
imul
ja
popa
adc
add
mov
adc
lahf
pop
rol
and
and
add
popa
movs
add
aam
sbb
lahf
pop
rcl
add
xor
add
imul
ins
dec
xchg
add
xchg
cmps
cdq
push
bound
adc
add
add
mov
sub
ficomp
div
cmp
lds
sub
sub
adc
and
sbb
add
sub
sub
je
shr
or
jbe
mov
and
repz
xor
lods
popa
mov
out
mov
daa
je
add
and
inc
add
add
mov
test
mov
(bad)
cmp
mov
add
xor
outs
int3
sti
and
push
pop
and
lea
cmp
mov
pushf
hlt
mov
dec
cmps
test
adc
lock
mov
add
sub
jne
adc
adc
mov
inc
add
ja
enter
xchg
mov
xchg
add
xor
nop
add
data16
adc
add
mov
cmp
add
popf
push
push
popf
(bad)
add
cmp
popa
add
sbb
mov
shl
xor
test
sti
jns
and
xor
fs
inc
rol
add
add
xor
adc
adc
sub
(bad)
add
stc
jns
jo
aas
xor
jmp
add
sub
jo
xchg
rol
dec
cli
aaa
test
xor
adc
add
pop
sbb
into
fwait
add
(bad)
sub
xor
and
test
sub
enter
les
mov
add
and
jo
adc
adc
gs
imul
add
add
push
cs
add
add
adc
ret
int3
jbe
das
sbb
int
add
ret
adc
pop
pusha
cld
and
in
cmp
inc
into
or
shr
and
in
adc
and
and
sub
adc
mov
adc
or
xor
jmp
aas
mov
add
leave
mov
push
fsubr
in
pop
das
cmp
push
sub
xor
push
push
sar
ins
push
push
rol
or
icebp
stos
aam
pop
ror
adc
dec
jo
push
retf
sti
and
xor
add
shl
stos
pop
xchg
das
cmps
sub
push
sub
addr16
dec
sub
dec
in
scas
(bad)
sub
jg
(bad)
jl
add
jo
pop
push
ja
adc
inc
nop
push
inc
out
and
mov
and
loop
add
mov
shl
loopne
cmp
add
add
add
loopne
cmp
push
push
add
lock
pusha
and
or
add
mov
push
mov
mov
dec
nop
add
add
ins
and
adc
xchg
add
cmp
add
ins
and
or
pushf
pop
mov
jo
add
adc
pusha
add
fisub
push
mov
in
fstp
sub
add
or
or
lock
and
add
loopne
mov
add
jle
mov
add
sahf
rol
test
xor
adc
add
adc
sbb
add
adc
test
sbb
and
dec
imul
mov
pop
rol
xor
mov
add
mov
je
push
pop
inc
jae
mov
and
and
jle
add
add
pop
mov
(bad)
int
adc
mov
push
outs
in
les
sbb
imul
push
push
jl
dec
movs
rcl
inc
out
ds
shl
xor
sbb
push
rcl
shl
inc
in
and
push
and
xlat
out
push
call
loope
jg
adc
sub
out
ficom
ss
push
xor
repnz
enter
jp
jmp
shl
adc
(bad)
jmp
sub
add
stc
add
adc
dec
add
add
add
inc
cdq
or
mov
rol
add
rol
mov
lds
fcom
inc
mov
xor
mov
push
push
cdq
mov
add
cs
pushf
jmp
xor
mov
xchg
or
lea
sub
sub
add
retf
push
cmps
push
mov
push
ds
mov
shl
mov
or
(bad)
add
ins
fidivr
dec
adc
fisttp
and
pop
add
inc
lods
(bad)
add
jecxz
cwde
xor
mov
add
cmp
ror
dec
sub
xlat
mov
xchg
xor
aam
sub
inc
add
push
sbb
daa
mov
lea
jns
add
sbb
les
hlt
jae
movs
or
fild
aaa
push
lock
and
xchg
scas
shl
loopne
in
cmp
shl
inc
inc
add
adc
gs
pop
or
inc
push
adc
enter
movs
cmps
rcl
js
add
lock
jo
rol
sub
rol
nop
loopne
or
cs
add
mov
pop
adc
neg
inc
rol
adc
pop
pop
add
add
or
mov
xor
pop
or
loopne
or
je
ret
fsub
mov
xor
ret
cwde
lock
xchg
js
pusha
add
or
fdiv
push
cmp
pusha
inc
push
xchg
add
or
pop
aaa
pop
add
call
clc
nop
add
sets
cmovo
getsec
je
inc
add
fcom
inc
(bad)
pushf
stos
add
gs
inc
inc
stos
test
(bad)
fcmovb
add
dec
rol
test
or
cmp
cmp
or
adc
test
lahf
rol
add
mov
adc
add
loopne
cmps
inc
or
inc
push
mov
inc
add
inc
adc
push
cdq
add
jo
les
add
pusha
les
add
daa
add
adc
ret
adc
movs
and
push
inc
mov
xchg
int3
shr
mov
add
adc
std
dec
popa
test
adc
inc
sbb
sbb
add
data16
cmp
adc
pushf
adc
add
add
xor
and
push
xor
sub
mov
push
and
xchg
xor
or
pop
sbb
cmp
into
daa
or
test
ins
nop
add
js
xor
push
inc
push
ffree
push
adc
test
into
push
mov
cmp
or
retf
sub
pop
rol
adc
stc
test
lds
add
sbb
idiv
fisub
je
outs
int3
sbb
sar
inc
mov
les
stos
aas
ins
ret
or
or
adc
mov
mov
imul
xor
jo
fstp
xor
leave
adc
in
sbb
jl
xor
neg
xor
jns
adc
hlt
out
dec
xor
push
pop
mov
es
jb
pop
mov
ret
mov
loop
fwait
or
and
xchg
or
add
cmp
mov
mov
dec
cmp
fadd
imul
cmp
ss
pop
jl
sti
pop
cmovbe
arpl
loopne
pop
test
sub
ret
adc
adc
mov
push
je
test
fwait
rol
or
adc
mov
pop
sub
pop
inc
mov
mov
mov
add
xor
or
xchg
or
les
movs
loopne
sub
pusha
pop
mov
cwde
loopne
out
pop
or
sbb
ins
fwait
clc
jb
add
cmp
inc
mov
adc
xchg
or
mov
les
push
nop
and
sub
add
out
scas
add
rcr
je
or
aaa
sbb
pop
cmps
push
inc
jg
pusha
gs
sbb
popf
adc
push
inc
rcr
pop
(bad)
add
jg
adc
rol
iret
test
sbb
sahf
mov
inc
jb
sub
inc
adc
test
fs
add
xchg
test
and
gs
push
clc
ds
cmps
adc
and
add
stos
cmps
adc
or
inc
sub
mov
out
and
movs
add
test
xor
add
(bad)
mov
ret
and
adc
call
xor
out
add
std
movs
test
pushf
das
or
or
or
jns
jae
inc
add
pusha
mov
jmp
or
xor
push
test
rol
test
cmp
push
inc
rol
test
sbb
cs
dec
cli
jmp
sbb
and
xor
mov
mov
add
test
cmp
dec
push
sub
and
sti
mov
popf
cmp
ror
sbb
dec
mov
push
dec
add
and
stos
aad
rol
mov
add
mov
push
arpl
push
iret
jmp
push
adc
mov
sub
mov
add
fs
or
imul
xchg
loopne
xor
pop
mov
sbb
das
call
pop
add
adc
fs
and
or
fiadd
cli
mov
sbb
stos
imul
jle
mov
add
push
add
clc
rol
add
clc
dec
add
jne
or
mov
sbb
cmps
movs
jmp
adc
leave
aad
sub
xor
jmp
add
add
pusha
pop
and
dec
add
dec
rcr
mov
add
or
mov
outs
hlt
pop
sbb
imul
adc
xchg
mov
add
jb
push
aaa
sbb
jae
inc
adc
imul
stos
outs
fdivr
sahf
adc
mov
bound
push
add
pop
int3
aas
inc
cli
dec
ins
scas
jge
jg
jmp
retf
push
call
push
movs
(bad)
popf
push
and
ror
sbb
dec
into
add
jle
adc
inc
add
push
lfs
ss
into
neg
jae
xor
cmp
es
add
rcl
loop
push
jae
arpl
mov
arpl
dec
adc
adc
add
dec
add
sbb
or
pop
clc
mov
movs
popa
push
jmp
in
lahf
inc
in
inc
jl
or
adc
mov
mov
mov
xchg
fs
dec
xchg
and
adc
sub
add
mov
nop
or
sbb
repnz
nop
push
scas
popf
mul
mov
jnp
test
ins
add
nop
jne
cs
sub
(bad)
pop
div
mov
out
repnz
add
add
xchg
push
in
cli
pop
aaa
adc
or
or
fiadd
cmp
(bad)
fidiv
outs
js
mov
pusha
aad
neg
ins
pop
push
sbb
retf
cdq
js
call
dec
test
nop
stc
sbb
fcmovne
push
inc
out
leave
and
xchg
pop
mov
retf
maskmovq
not
push
or
call
xchg
(bad)
outs
pop
aas
test
push
add
push
pop
cmc
stos
retf
mov
inc
adc
cmp
nop
and
fld
or
dec
(bad)
mov
mov
pop
div
mov
out
aad
es
ins
mov
push
rol
or
add
ror
stos
test
pop
nop
inc
jge
je
in
jo
adc
bound
add
cmp
xchg
idiv
ror
pop
mov
add
jmp
add
nop
rol
add
adc
sar
rol
in
xlat
or
and
mov
rol
or
sbb
stos
xchg
and
and
jge
stos
fsubr
out
into
sbb
repnz
(bad)
xor
jl
xchg
sahf
pop
popf
rol
cmp
add
xor
jge
loop
xor
cmp
push
xor
xor
and
add
imul
dec
inc
add
out
cmps
movs
ficom
test
outs
push
xor
les
cmps
dec
ss
inc
mov
xor
push
jp
rol
loopne
mov
add
pop
add
jle
(bad)
push
push
dec
ds
loopne
test
cmp
repz
xchg
test
rcr
sub
xchg
lock
imul
gs
push
mov
push
xor
sub
inc
mov
jnp
out
or
jo
and
inc
fs
out
(bad)
daa
fs
pop
inc
jp
add
add
call
adc
xor
jno
repnz
xor
and
iret
push
clc
jnp
inc
add
bound
inc
mov
add
inc
aaa
or
ins
in
jge
xchg
sbb
and
mov
jo
inc
js
xchg
xor
jp
add
out
(bad)
test
dec
and
js
test
xor
add
xor
lock
rol
or
add
sub
mov
das
jl
xor
push
add
inc
mov
rol
mov
cmp
pop
pop
inc
mov
jl
repz
enter
mov
sub
adc
aaa
add
sbb
push
cmp
jo
jbe
push
sub
jb
and
mov
adc
push
jb
inc
ret
cwde
mov
dec
neg
aaa
int
inc
repnz
jge
and
loop
add
aad
jne
add
push
ret
add
cmp
ja
add
mov
inc
add
mov
fcom
sub
add
push
jo
or
ins
jmp
cmp
rcr
je
cmp
add
ror
inc
das
xor
jmp
mov
jo
enter
add
inc
fldcw
push
jge
call
cmp
ins
aam
and
inc
xchg
add
aas
push
cmp
xor
bound
sub
cmp
or
inc
mov
outs
leave
es
cmps
xchg
je
xor
loopne
cdq
push
fs
shl
inc
pusha
push
ror
sub
cmp
sub
imul
jne
cdq
add
dec
rcl
test
idiv
xchg
enter
gs
push
add
push
sub
stc
imul
test
jnp
data16
sub
sar
fwait
xchg
mov
sub
adc
daa
mov
add
mov
inc
mov
add
and
in
sub
dec
out
cdq
mov
add
pop
pop
test
call
push
cmp
add
adc
sahf
je
adc
pusha
add
and
dec
push
mov
pop
(bad)
add
xchg
dec
sbb
dec
iret
ss
jo
mov
outs
enter
fst
ret
lahf
adc
xchg
movs
test
dec
pusha
xchg
popf
inc
cdq
mov
sbb
ds
mov
dec
in
aaa
and
sub
lock
inc
add
inc
mov
or
sub
push
neg
push
mov
fwait
adc
xchg
or
and
add
push
sub
sub
repz
nop
cmc
jmp
xchg
popf
dec
dec
dec
jmp
mov
mov
lock
mov
xor
ja
rol
fcom
add
imul
cmp
xchg
cdq
dec
dec
aad
push
outs
mov
sub
jns
cmps
xchg
fs
push
out
mov
clc
xor
es
cs
jge
jle
lock
sbb
mov
jp
add
test
pop
stos
(bad)
cmp
jl
stos
mov
mov
test
je
mov
jbe
fcom
(bad)
pop
xor
and
mov
sub
add
test
and
(bad)
arpl
pop
add
mov
mov
lods
add
cmp
pop
xchg
push
lods
sub
test
xor
add
jge
xchg
add
push
mov
cmp
ins
leave
movs
popf
(bad)
ficomp
dec
bound
push
das
shl
xor
leave
cmps
popf
or
(bad)
jmp
fisub
sbb
cdq
or
popa
adc
ficomp
mov
aad
dec
pop
mov
mov
mov
add
jle
in
aad
mov
mov
pop
je
test
xor
mov
div
mov
inc
mov
sub
sbb
xor
fwait
movs
jno
ds
mov
jne
jo
xlat
cmp
jo
mov
sub
bound
jle
push
push
jae
inc
aam
cmps
mov
jmp
mov
jmp
aam
adc
mov
jmp
dec
pop
add
xchg
mov
lock
bound
adc
or
and
mov
add
loop
add
sahf
icebp
xchg
outs
sub
push
jne
mov
loop
mov
mov
add
ds
mov
sub
mov
add
ins
call
aaa
dec
shl
sub
add
and
mov
adc
push
rol
inc
jmp
nop
fld
stos
hlt
pop
mov
mov
test
inc
scas
inc
xor
fstp
popa
mov
mov
xchg
push
mov
xchg
adc
cdq
xchg
jecxz
rol
mov
scas
ret
dec
and
int3
push
jae
mov
pop
call
not
cmp
enter
dec
and
xchg
add
adc
or
xchg
adc
or
jae
cwde
add
rol
and
inc
lock
stc
adc
mov
mov
push
sbb
dec
cli
inc
scas
stos
dec
mov
mov
in
repz
nop
add
xchg
xor
jno
add
inc
push
and
test
jnp
jnp
pop
int3
popa
div
add
add
xchg
add
xor
and
repz
lds
inc
or
popa
or
add
add
jle
pusha
push
adc
mov
cmp
add
add
shr
ins
mov
sbb
bt
and
sbb
mov
cld
ret
hlt
(bad)
add
xor
sub
out
xor
or
adc
js
ret
add
cmp
sub
or
and
add
into
out
add
or
and
adc
push
sbb
and
sub
stos
add
or
dec
pusha
and
xor
daa
and
inc
and
aad
push
mov
push
ror
and
adc
add
inc
dec
sub
lahf
xchg
add
add
dec
(bad)
cmp
or
arpl
adc
add
add
xor
adc
mov
add
push
add
xlat
add
gs
push
aad
add
add
push
and
lock
xor
and
sub
xchg
add
mov
adc
add
inc
add
ins
(bad)
dec
add
mov
ds
fdiv
adc
aad
add
adc
or
push
jecxz
add
and
add
(bad)
(bad)
aas
mov
fld
sub
out
aad
push
add
add
sbb
add
pop
add
mov
and
pop
mov
pop
rol
push
dec
pop
sbb
nop
fimul
add
push
add
pop
jae
pop
jb
pop
jb
add
adc
and
(bad)
es
pop
add
add
nop
pop
or
add
lea
retf
sub
sbb
add
add
adc
js
xor
push
js
add
loopne
mov
or
mov
(bad)
add
jo
adc
pop
push
add
add
rol
mov
add
imul
push
adc
add
nop
fwait
jl
(bad)
popa
add
push
cmp
push
push
xor
xchg
sbb
xchg
dec
cdq
hlt
jno
or
ficom
sar
mov
shl
add
scas
loope
mov
adc
xor
add
push
or
sbb
pusha
loopne
scas
cmp
inc
sub
outs
loopne
push
sbb
loopne
nop
dec
or
iret
or
shl
inc
push
sbb
jno
xchg
icebp
pop
lahf
xchg
sbb
shl
shl
jo
jecxz
sbb
mov
sbb
das
enter
scas
add
push
aam
push
xchg
inc
push
or
mov
add
in
xchg
jecxz
and
cmps
adc
pop
pop
outs
loope
outs
mov
inc
popa
pop
add
pop
jg
sbb
out
in
rcr
push
call
inc
pop
je
sbb
sbb
jmp
(bad)
call
mov
jns
dec
cmp
adc
pop
add
jg
sbb
out
fsubrp
mov
jmp
mov
mov
sbb
jmp
push
xor
icebp
adc
xor
pop
adc
ret
les
inc
push
in
ret
pop
sub
mov
inc
push
adc
in
jmp
pop
in
sub
xor
mov
in
fdivrp
in
loopne
adc
popa
adc
scas
in
shr
out
cmp
out
jmp
(bad)
out
lock
out
repnz
hlt
pop
out
idiv
clc
sahf
out
cli
mov
in
out
or
lock
or
lock
or
lock
add
loopne
adc
out
add
add
stc
add
adc
pop
add
add
add
inc
test
xchg
lea
nop
mov
xchg
cwde
cdq
xchg
adc
mov
push
xchg
add
mov
mov
mov
mov
shl
(bad)
mov
sahf
mov
enter
rcl
retf
mov
mov
add
in
in
shl
jmp
rcr
popf
ret
cmps
neg
jecxz
add
or
add
mov
add
aam
xchg
or
sub
(bad)
les
rcl
push
or
(bad)
xor
pop
push
pop
add
test
and
or
xor
adc
adc
inc
jnp
push
jo
addr16
aas
inc
pusha
nop
jae
retf
sbb
adc
sub
mov
adc
clc
les
jmp
dec
gs
loopne
or
add
push
or
dec
nop
or
add
jle
jge
or
inc
xchg
jp
jb
mov
inc
add
nop
imul
lods
or
mov
xor
sbb
popf
adc
pop
movs
dec
icebp
inc
add
sbb
push
xchg
ret
dec
sbb
fdivr
lahf
dec
cmp
or
xchg
push
sbb
xor
add
or
jp
call
adc
sbb
sbb
jno
xchg
cmp
cmp
(bad)
stc
push
ss
cmp
daa
and
and
loopne
retf
lea
jnp
icebp
enter
adc
add
mov
les
inc
push
or
add
or
mov
nop
ror
pop
les
adc
push
enter
sbb
mov
adc
and
inc
adc
mov
inc
or
inc
dec
add
int3
mov
xchg
adc
or
inc
loopne
sub
adc
and
(bad)
or
daa
out
add
push
xchg
pop
mov
daa
sub
loopne
xchg
inc
nop
inc
inc
push
(bad)
sub
and
data16
add
adc
je
add
adc
clc
mov
rol
inc
jne
call
adc
sub
xchg
pop
popf
mov
out
and
jmp
sbb
push
aam
or
or
cmp
push
push
out
inc
add
xchg
sub
inc
inc
inc
stc
adc
daa
mov
adc
leave
bound
cs
bound
inc
push
sub
ds
out
push
and
xor
or
push
test
clc
push
mov
cmp
mov
mov
nop
nop
cmps
(bad)
dec
call
hlt
pop
mov
xlat
imul
test
rol
popa
mov
pop
cs
or
lods
adc
cli
dec
or
in
call
push
inc
add
push
push
cld
mov
nop
repnz
sbb
lods
loop
inc
jno
and
jo
daa
pop
cmovp
pop
stos
push
sub
pop
mov
mov
sbb
push
and
ret
sub
pop
pushf
jo
mov
data16
shl
sahf
fdiv
or
arpl
or
mov
or
or
inc
movs
xor
retf
inc
nop
outs
rcr
sub
shl
xchg
into
repnz
dec
fmul
push
push
push
add
sub
inc
loope
inc
je
fldenv
adc
lods
mov
add
or
jo
or
push
push
inc
and
inc
mov
das
and
movs
xor
les
int
aam
pop
nop
add
test
xchg
add
(bad)
mov
add
inc
add
inc
cmp
xlat
cmp
test
(bad)
lea
mov
or
add
fcomp
and
in
sub
pop
scas
jbe
inc
jno
outs
pop
(bad)
test
add
xchg
mov
cmp
adc
adc
cmp
ins
add
fs
push
mov
add
add
push
test
adc
retf
loopne
or
movs
add
cmp
adc
xor
fimul
adc
or
or
mov
iret
or
cmc
jns
or
add
shld
dec
inc
fcom
shr
add
dec
fsub
inc
xor
cmps
cmp
popa
inc
sub
xor
ins
scas
sbb
add
mov
pushw
and
jmp
inc
inc
lock
data16
int
adc
shl
dec
mov
ss
popa
jge
inc
adc
sub
in
pop
or
mov
add
mov
cmp
add
hlt
das
adc
in
inc
adc
add
(bad)
push
adc
rol
sub
shl
cmp
shl
pop
nop
ret
lea
cmp
add
lds
sbb
sub
add
test
xchg
(bad)
mov
push
movs
mov
out
mov
aam
cmp
xchg
mov
movs
and
adc
add
test
inc
es
inc
jge
inc
or
jecxz
sbb
add
shl
dec
xor
adc
cmp
jbe
add
test
add
or
retf
push
jbe
or
call
ret
imul
add
gs
int3
mov
outs
inc
mov
mov
adc
add
adc
and
cmp
mov
mov
cmp
inc
sbb
inc
call
and
add
popf
mov
or
jo
pop
sbb
dec
mov
adc
scas
or
add
add
add
push
rol
int3
pop
ss
and
cld
mov
inc
or
sbb
into
push
test
and
pop
(bad)
mov
gs
out
dec
stos
and
pusha
inc
into
adc
movs
or
and
add
push
push
stos
out
rcl
xor
(bad)
(bad)
retf
cmp
mov
ds
sub
or
add
cmp
or
fsubr
shr
enter
xchg
rol
push
push
add
not
xchg
int
popw
mov
adc
fsubr
cmps
jg
add
mov
(bad)
cmp
or
adc
jno
cmp
inc
jbe
pop
mov
cmp
into
jle
stos
shr
and
adc
add
mov
adc
sbb
lock
pusha
add
rcl
repz
lods
sahf
add
inc
scas
pop
xor
retf
dec
(bad)
jge
mov
movs
push
fidiv
add
ds
add
add
lock
retf
adc
cli
add
bound
jne
mov
(bad)
or
fdiv
add
xor
adc
ins
or
or
sub
gs
push
xchg
push
push
test
and
sub
or
out
es
inc
inc
nop
in
cdq
das
int
pushf
cmp
aam
es
xor
mov
push
ss
cmp
push
dec
or
bound
push
(bad)
sub
in
sbb
xor
movs
test
cwde
cmp
and
sbb
xchg
(bad)
in
sbb
push
test
inc
xor
xchg
and
add
sbb
cmp
cmp
and
or
repz
clc
aaa
mov
jge
pop
push
cmp
xor
mov
out
leave
cmps
fdiv
sti
adc
add
aas
dec
jo
jae
adc
mov
jmp
test
and
xor
enter
or
les
mov
imul
hlt
jnp
xor
retf
mov
cmp
add
(bad)
mov
mov
out
in
mov
pusha
xor
xchg
or
mov
xchg
sar
ret
xchg
or
ss
enter
js
loopne
dec
rcr
jp
call
in
xchg
inc
dec
inc
or
lds
mov
fdiv
call
xchg
push
xor
ins
xchg
add
add
sbb
fild
sti
inc
push
dec
mov
mov
emms
int
mov
mov
sti
pusha
repnz
(bad)
sbb
mov
inc
ret
push
test
dec
loope
lods
mov
ja
ficom
(bad)
jmp
sbb
jmp
cwde
retf
jp
cmp
and
popa
(bad)
cwde
shr
inc
shl
mov
imul
jmp
fidivr
xlat
fidivr
cmps
dec
sar
sbb
loopne
enter
daa
or
loopne
mov
jp
add
pushw
xor
sar
daa
add
and
jg
xchg
push
push
cmp
rol
ret
shl
dec
loopne
or
je
and
sub
pop
add
call
jl
mov
sub
inc
out
cmp
clc
popa
retf
mov
mov
cmp
push
out
or
lock
xor
push
add
or
or
pop
pop
movs
pop
pop
repnz
nop
add
aad
xchg
ret
jp
cmp
pop
xor
inc
popf
lock
inc
inc
imul
rol
add
dec
loopne
pop
repnz
push
daa
mov
dec
or
clc
jae
and
and
imul
fild
cwde
inc
imul
push
push
xor
and
or
inc
cmp
ins
pop
xor
xor
pop
aad
dec
ja
mov
pop
mov
or
xchg
jg
push
imul
inc
sbb
popf
lock
cmp
add
push
cmp
add
sub
pusha
inc
mov
xchg
pop
aaa
cmp
inc
jp
outs
and
push
push
and
lods
enter
and
add
add
mov
repz
js
movs
sbb
mov
mov
add
and
fimul
(bad)
push
sbb
dec
test
mov
add
ret
test
dec
ret
inc
xchg
dec
cdq
out
imul
movs
invd
push
add
push
cmp
and
inc
mov
sub
and
dec
pop
inc
aad
xchg
cmp
shl
movs
mov
xor
add
push
xor
adc
add
and
mov
push
xchg
push
jl
inc
je
nop
add
sar
xor
jecxz
and
imul
pop
or
mov
push
pop
push
xor
dec
xchg
sub
cwde
mov
dec
cdq
add
and
popf
add
aam
inc
mov
xor
add
inc
(bad)
jnp
inc
xor
sahf
pop
add
das
addr16
pop
mov
nop
movs
add
sahf
add
push
dec
xchg
mov
or
pusha
xchg
adc
imul
popf
adc
inc
or
loopne
and
add
xor
sbb
and
sub
add
aad
cmp
add
adc
and
xchg
in
sbb
mov
add
push
sub
aaa
xlat
daa
outs
dec
mov
cmp
add
xor
mov
xchg
mov
mov
jl
arpl
push
add
add
add
adc
jbe
inc
mov
js
push
nop
mov
sub
mov
repnz
jge
and
loope
add
cmp
pushf
movs
mov
nop
je
mov
add
aad
(bad)
mov
aas
and
cmp
xchg
push
nop
mov
enter
xchg
xor
cmp
enter
bound
jae
mov
call
add
sahf
fs
repz
ret
xor
jmp
inc
jae
mov
leave
jb
loop
dec
and
and
data16
jmp
daa
add
push
stos
ja
rol
repz
addr16
cmp
mov
ret
add
sbb
inc
xchg
mov
adc
dec
shl
mov
mov
cmps
and
fmul
adc
xchg
dec
aad
mov
or
add
add
push
cdq
popf
rol
sbb
add
stc
or
add
xlat
cmp
dec
mov
sahf
add
inc
add
imul
(bad)
or
add
push
inc
sbb
sub
push
mov
popf
xor
call
test
nop
das
xchg
data16
and
imul
push
cmp
push
xchg
(bad)
sub
cmp
call
adc
dec
nop
add
cwde
pop
and
fsub
push
leave
add
rol
mov
add
add
and
popa
xchg
xchg
mov
xchg
inc
movs
mov
jb
and
jb
aad
nop
inc
je
nop
add
sub
and
and
(bad)
mov
(bad)
xchg
or
jge
pop
inc
jecxz
scas
test
sub
mov
cld
imul
loopne
cmp
add
adc
adc
mov
xchg
inc
add
add
mov
ins
jbe
inc
inc
add
inc
add
cwde
inc
mov
sbb
jg
add
sub
imul
scas
inc
sbb
and
repz
add
dec
xor
sbb
add
lock
xchg
adc
add
add
jp
aas
rol
adc
adc
pusha
add
cmps
and
mov
inc
mov
mov
add
xor
mov
adc
add
test
pusha
sbb
ffree
nop
sbb
mov
nop
add
pusha
inc
inc
lock
add
mov
add
mov
pop
cmp
add
add
mov
fchs
add
add
or
mov
aas
jo
dec
add
sbb
loopne
jp
add
and
and
rol
or
dec
loopne
mov
add
mov
imul
cmp
add
rol
outs
inc
mov
and
sub
mov
add
add
mov
cmovo
inc
inc
add
inc
add
hlt
add
adc
sbb
(bad)
sbb
rol
adc
pop
and
add
sti
mov
adc
adc
mov
xor
adc
add
rol
adc
mov
push
icebp
adc
pusha
add
mov
sar
push
add
jl
and
add
and
add
ret
add
sbb
push
adc
mov
and
and
adc
xor
bound
or
mov
and
dec
movs
add
add
push
add
les
add
xor
cmp
xor
and
add
sbb
add
loopne
sub
adc
dec
lods
adc
adc
call
adc
adc
mov
rol
mov
dec
fadd
mov
add
lock
mov
adc
enter
mov
(bad)
push
jb
or
or
adc
and
pop
popa
sub
push
adc
add
dec
pop
xor
jb
cwde
xchg
aaa
sbb
loope
mov
pop
sub
mov
cmp
push
inc
adc
add
adc
adc
rcl
jne
adc
push
add
lods
adc
xchg
retf
(bad)
xchg
fcom
sbb
add
nop
jo
enter
into
cmp
mov
sti
xor
out
and
mov
adc
sbb
jmp
mov
movs
repnz
out
cld
retf
or
adc
xor
ror
jo
push
sbb
mov
seto
into
ret
jo
cdq
lock
or
or
shl
ins
rol
test
test
or
cmp
xchg
loopne
cmp
cmp
sar
std
rol
aam
cmp
inc
jge
dec
popf
aam
mov
dec
jge
mov
aad
pop
aad
jge
pop
popf
aad
mov
pop
std
aad
sbb
fs
(bad)
ins
aad
add
and
add
adc
dec
add
add
add
inc
scas
or
mov
rol
and
dec
pushf
dec
mov
lds
repnz
mov
xchg
push
daa
mov
retf
xchg
xor
pushf
stc
jb
int
adc
push
js
inc
dec
mov
lock
add
and
mov
add
dec
cmc
data16
mov
push
cmps
push
xchg
js
dec
mov
fnstenv
cmp
mov
inc
jp
out
retf
cmp
sbb
jle
out
std
clc
pop
scas
add
int3
mov
or
retf
aad
arpl
adc
xchg
ins
push
shl
loope
sub
les
rol
fdiv
xor
ins
push
or
jo
mov
ins
or
lods
mov
sbb
scas
loopne
loop
push
and
enter
and
add
or
mov
or
push
inc
ret
mov
aaa
inc
je
lock
add
sbb
call
push
jmp
cmp
adc
add
adc
(bad)
add
mov
lock
and
or
test
add
inc
and
mov
pop
movs
xor
ret
xchg
inc
xchg
add
lock
mov
inc
js
sub
inc
or
add
add
mov
xchg
xor
fs
xchg
inc
add
add
mov
cmp
rol
bound
jl
rol
loope
fwait
ds
and
push
add
adc
jno
pop
push
inc
xor
outs
add
jo
mov
add
dec
add
adc
mov
ret
adc
pop
addr16
daa
dec
add
and
nop
cmps
push
imul
(bad)
rol
push
pushf
call
add
js
jno
call
je
add
les
cmp
adc
push
in
or
dec
push
lods
inc
rol
add
mov
es
stos
inc
sub
imul
(bad)
nop
rol
jl
lods
adc
test
and
add
rcr
sbb
pop
mov
fs
adc
mov
les
jno
add
or
movs
mov
inc
ss
ja
push
shl
lds
mov
xor
add
in
rcr
and
lds
popa
inc
inc
std
mov
pop
or
aam
jmp
push
mov
dec
and
les
pop
or
fcom
sbb
ret
or
push
ins
mov
pop
xchg
mov
push
push
inc
and
push
adc
sbb
add
xor
ror
mov
(bad)
sti
push
or
jnp
push
loopne
movs
loopne
lgdtd
popf
add
and
or
sub
xor
add
nop
or
clc
dec
add
add
les
rol
daa
jl
lods
or
cmp
and
out
not
pop
push
dec
adc
sub
push
inc
in
test
pop
imul
inc
add
or
dec
jne
cmps
lds
inc
in
ror
inc
or
sbb
sub
push
inc
mov
or
adc
sbb
test
xchg
push
(bad)
jae
add
push
xchg
lea
add
jmp
push
movs
adc
jmp
mov
int3
and
loope
pop
cmp
inc
mov
add
aad
xchg
daa
adc
je
popa
push
push
add
je
add
pop
in
nop
and
aad
pusha
rcr
dec
cld
push
repnz
fs
xor
mov
rcr
inc
add
inc
aas
daa
xor
inc
dec
rol
movups
and
daa
adc
mov
daa
or
bound
push
xor
(bad)
rol
xchg
or
or
add
outs
not
sub
(bad)
adc
jo
and
inc
and
loop
and
xor
add
rol
clc
sub
es
in
dec
pop
inc
inc
test
fsub
and
loopne
xor
not
lock
xchg
ja
rol
call
xchg
push
push
icebp
and
add
sbb
jo
sbb
push
leave
sub
add
mov
and
dec
and
mov
and
stos
xchg
and
mov
or
jl
add
test
in
lea
xchg
mov
shl
fwait
adc
sar
adc
stc
sub
and
sub
jno
xchg
inc
dec
(bad)
add
sbb
sar
add
add
xchg
jb
loope
dec
cmp
ror
in
jo
cmp
and
fadd
out
adc
or
sub
mov
or
fld
imul
movs
hlt
and
or
rol
pushf
sub
or
add
mov
jge
dec
inc
add
sar
adc
or
jp
and
or
xchg
je
gs
jecxz
jne
int3
mov
aad
iret
fs
inc
sub
rcl
jb
adc
popa
and
push
or
push
inc
xchg
daa
mov
cmp
sbb
mov
je
pop
or
jae
loopne
dec
cli
dec
add
push
add
push
jmp
jmp
cdq
mov
rol
xchg
int
jmp
mov
mov
xchg
sub
aad
ret
mov
fs
xchg
cmovg
push
cdq
pop
add
fld
loopne
fwait
dec
ret
sti
xchg
cdq
adc
or
sbb
dec
fiadd
mov
mul
or
add
lock
inc
inc
jo
icebp
mov
add
(bad)
nop
pop
add
aam
retf
push
ja
dec
and
loopne
xlat
adc
dec
add
int3
and
loopne
inc
mov
sbb
pop
mov
xor
adc
(bad)
fs
fstp
or
sbb
in
add
push
(bad)
clc
xchg
rol
xchg
bound
leave
pop
xchg
jo
push
faddp
lds
dec
rcr
mov
sbb
or
xor
cmp
adc
pop
ins
sub
and
loopne
mov
push
dec
das
shl
daa
mov
pop
pop
movs
pop
xchg
sub
and
mov
inc
sti
and
and
or
mov
xchg
push
arpl
xchg
fistp
fcompp
cmps
fstp
push
aad
popa
(bad)
fimul
xor
add
or
dec
mov
call
push
xor
or
inc
or
in
dec
pop
cmp
pushf
cmc
dec
dec
jo
xchg
in
add
dec
push
mov
and
ds
mov
fwait
jb
adc
mov
enter
mov
push
dec
sub
lock
xor
fs
cmp
movs
ss
and
lds
jge
nop
dec
out
cs
out
cs
cmp
fcmovne
add
dec
adc
xchg
icebp
dec
push
push
mov
je
mov
bound
or
jecxz
dec
sub
les
loope
jne
call
push
cmp
stos
popf
dec
ret
xchg
xchg
pop
fwait
mov
inc
mov
and
inc
sbb
add
dec
scas
ins
(bad)
(bad)
and
das
dec
jne
xchg
add
and
push
loope
fdiv
inc
mov
xchg
adc
sub
aad
inc
push
nop
dec
stos
pop
fsubr
sbb
fsubrp
les
pop
or
jns
xor
aaa
loop
ret
ret
fst
add
das
fimul
rcr
ss
and
pusha
pop
imul
cwde
mov
sub
popa
xchg
mov
sub
retf
stos
cmp
and
fistp
lock
mov
cmp
pop
mov
or
mov
pushf
adc
fist
adc
pop
popa
iret
cmps
jge
xor
test
enter
and
dec
ins
push
and
std
and
daa
inc
test
icebp
fisttp
jl
push
pop
inc
fcom
inc
push
adc
popa
pusha
ss
add
out
iret
ja
sub
mov
ret
inc
adc
sub
or
out
inc
mov
jo
ret
add
and
inc
mov
jo
data16
pop
pop
pop
ss
(bad)
aaa
jo
rol
adc
nop
arpl
and
push
sub
add
adc
sub
adc
add
ss
out
scas
aaa
push
xor
imul
or
push
jg
inc
mov
push
inc
outs
and
cmp
add
push
data16
pop
add
addr16
adc
push
add
jl
mov
dec
inc
jb
arpl
in
fldenv
ins
js
push
add
xchg
imul
pop
jl
push
aas
push
add
add
xlat
adc
loopne
sbb
(bad)
in
inc
pop
jge
add
lock
xor
add
bound
mov
bound
call
xchg
enter
imul
adc
add
sub
aaa
push
sub
xchg
cwde
add
pop
adc
add
add
push
out
mov
repnz
push
push
add
ja
(bad)
test
inc
sub
ror
xor
mov
bound
arpl
pop
gs
inc
add
pop
add
jo
daa
aas
adc
adc
enter
add
xchg
gs
int
adc
adc
push
aam
xor
sub
jle
dec
test
jo
push
sub
add
call
cmps
add
pop
sub
ds
xchg
cmp
add
sub
aaa
sbb
add
sub
adc
lock
push
push
inc
adc
inc
adc
and
xlat
inc
sub
push
adc
push
js
push
and
cmp
mov
(bad)
cmp
xchg
sbb
inc
bnd
mov
mov
adc
dec
jb
xor
add
mov
xchg
inc
sub
les
add
add
add
xor
inc
inc
pushf
hlt
adc
rol
jo
sbb
pop
sub
pop
and
push
pop
xor
xor
rol
inc
nop
ins
and
gs
cwde
cdq
xchg
sbb
dec
lahf
cmc
outs
mov
ins
mov
add
add
add
sbb
add
lock
nop
cdq
add
mov
movs
sbb
cmp
xchg
fsub
add
xchg
add
jo
sbb
call
aaa
cmp
and
mov
xchg
fwait
in
pop
je
xor
adc
adc
xchg
jmp
aaa
jp
test
imul
dec
aas
lock
pop
test
adc
push
sub
add
adc
sub
movs
add
cdq
les
test
inc
sbb
mov
adc
xchg
inc
ds
pop
ret
and
pop
pop
xchg
and
mov
push
inc
add
loop
les
add
mov
adc
jno
inc
or
add
mov
and
inc
sub
clc
stc
dec
adc
sbb
add
mov
ret
rcr
adc
cwde
add
add
mov
or
sbb
add
add
loopne
aaa
hlt
adc
inc
pop
jb
adc
adc
mov
or
add
pop
ins
inc
jo
dec
loopne
ds
add
add
test
cdq
add
inc
push
add
nop
push
mov
adc
or
adc
cmp
push
imul
mov
or
add
pop
dec
adc
and
add
add
sub
lods
ret
cdq
lock
add
and
add
lock
rol
pusha
xchg
daa
inc
add
jmp
add
adc
adc
int3
in
sub
lods
adc
int3
inc
lods
mov
add
inc
lods
out
cli
adc
or
xor
and
dec
push
push
sbb
and
sbb
sub
imul
or
inc
cli
add
cmp
sbb
adc
rol
pop
ins
rcr
sbb
pop
push
rol
push
test
jo
dec
add
enter
jo
(bad)
shl
rol
mov
mov
sti
add
mov
push
push
adc
add
nop
sbb
inc
add
popa
add
shl
add
sti
adc
loopne
jle
mov
inc
add
pop
repnz
loope
sbb
mov
and
rol
add
mov
fwait
lods
and
add
mov
jb
enter
xor
and
popf
jno
dec
and
cmp
mov
shl
and
test
pop
mov
pop
push
cmp
ja
cmps
pop
sub
(bad)
pop
dec
test
push
adc
rcl
mov
in
popf
pop
cmp
outs
daa
and
inc
xor
das
sar
mov
mov
jnp
test
adc
add
stc
add
adc
add
add
add
inc
test
xchg
mov
push
xchg
xchg
xchg
cwde
cdq
cdq
xchg
adc
mov
nop
add
lahf
xchg
scas
mov
add
mov
xchg
mov
xchg
popf
mov
add
(bad)
movs
stos
int3
call
mov
rol
fisttp
add
add
ror
(bad)
iret
fisub
cdq
fsubrp
push
out
pop
in
repnz
repnz
cli
repz
(bad)
hlt
or
inc
inc
push
pop
mov
stos
pop
mov
jge
push
add
sbb
xor
pusha
or
mov
sbb
and
arpl
or
and
cmc
adc
rcl
rcl
dec
add
ins
sbb
xchg
daa
push
ds
add
add
ret
sbb
mov
inc
add
sbb
sub
sbb
or
es
jo
ror
add
loopne
(bad)
add
enter
add
add
test
add
out
and
sbb
or
sub
pushf
call
add
push
mov
mov
or
mov
(bad)
adc
adc
cmp
lds
cwde
sahf
ret
(bad)
or
sbb
sub
ja
cmp
call
pop
inc
cmp
mov
add
sbb
mov
add
xchg
loope
rcl
cmp
cs
add
mov
adc
jb
or
xor
test
push
shl
xor
test
dec
xor
xchg
or
adc
es
inc
push
sub
add
pushf
sub
adc
sub
push
inc
rsqrtps
dec
or
xor
inc
and
clc
jo
inc
and
pop
sub
push
call
pop
jb
and
pop
lea
rol
loop
sbb
enter
mov
mov
and
adc
ss
nop
nop
int3
inc
push
pop
ss
stc
enter
rol
and
adc
and
les
xchg
adc
adc
jo
xchg
add
aam
addr16
and
leave
mov
or
ds
add
data16
or
cmp
loopne
adc
push
fdiv
sub
jge
pop
inc
inc
sub
sbb
sub
test
mov
mov
add
ret
xor
mov
lods
or
cmp
or
inc
cmp
adc
and
aaa
pop
clc
cli
cmps
add
dec
loope
pop
dec
outs
pusha
ret
test
sbb
dec
sbb
ret
adc
enter
shr
cwde
or
shl
inc
add
and
div
or
adc
dec
cs
or
fs
inc
or
out
leave
int3
cwde
fs
inc
mov
cdq
inc
mov
xor
test
cmc
fidiv
adc
or
jp
adc
mov
ror
imul
xchg
gs
jge
push
sbb
adc
aas
shr
cmps
and
test
daa
in
mov
xor
out
test
fcom
mov
stos
cmc
and
sbb
shl
inc
or
or
pusha
mov
(bad)
cdq
sub
dec
fst
mov
mov
cmp
jp
and
mov
retf
(bad)
pop
ret
push
xchg
(bad)
sahf
dec
cmp
mov
cmp
cwde
or
rol
cwde
mov
mov
adc
xor
mov
jo
(bad)
lea
or
ret
stc
enter
dec
loopne
mov
or
call
bound
mov
mov
pushf
add
sub
or
arpl
dec
mov
rcl
push
add
stos
pop
sub
aaa
cmp
call
loop
add
imul
push
test
add
xchg
scas
xchg
add
mov
rcl
push
pop
xor
xchg
cmps
ret
jmp
pusha
rol
in
lock
sbb
xor
shr
jo
test
mov
or
hlt
mov
and
inc
dec
push
and
or
mov
adc
cmp
mov
js
or
pop
inc
ins
gs
pop
jp
aaa
inc
loopne
call
add
or
(bad)
adc
inc
sbb
je
dec
nop
xor
xchg
push
aas
sub
cmp
pop
iret
nop
inc
or
popa
mov
int3
mov
movs
push
add
ins
cdq
ins
sbb
cmp
cwde
stos
adc
ret
test
add
inc
xor
inc
add
pop
sub
(bad)
ror
mov
out
inc
cdq
adc
pusha
xchg
shl
out
dec
outs
pusha
mov
cmp
imul
inc
adc
pop
movs
mov
adc
pop
xchg
pop
out
pop
sub
mov
push
retf
into
or
sbb
add
test
dec
lock
push
(bad)
add
mov
xor
ins
jnp
sbb
popf
enter
call
das
inc
adc
dec
add
sub
add
sub
ror
cs
sbb
movs
mov
push
xor
stos
out
(bad)
arpl
int3
test
hlt
add
add
adc
mov
and
pop
popa
fs
sub
pop
nop
mov
inc
(bad)
push
jp
adc
cmp
add
jnp
outs
outs
jae
shl
add
add
(bad)
pop
ins
inc
test
adc
jge
inc
add
or
mov
adc
xor
xchg
ret
and
add
mov
dec
xchg
mov
pusha
add
or
sub
ins
retf
inc
sbb
fadd
pop
or
pop
or
add
inc
inc
ins
mov
or
push
xor
cli
xchg
nop
ds
push
push
and
es
cmp
lods
xor
sub
add
or
adc
add
push
inc
or
data16
sbb
add
jb
mov
ds
mov
or
arpl
mov
aad
or
mov
test
add
test
xchg
or
jmp
or
jmp
into
in
jg
xchg
js
push
inc
push
cmp
pop
sub
adc
test
mov
and
dec
pusha
jo
cmp
gs
jl
(bad)
push
jbe
es
lds
adc
out
(bad)
push
mul
xchg
fimul
lods
mov
js
test
push
or
pop
add
mov
cs
cwde
xchg
les
sbb
dec
scas
call
xchg
aaa
push
inc
into
call
xor
or
jb
push
dec
call
(bad)
(bad)
retf
cld
mov
repnz
xor
shl
and
cdq
ds
adc
mov
jnp
adc
cmc
jecxz
jle
ins
test
jmp
adc
mov
or
mov
scas
outs
dec
(bad)
jmp
and
cmps
pusha
mov
and
push
adc
enter
mov
xchg
aad
or
repnz
cmp
sbb
adc
test
bound
add
mov
add
inc
sbb
mov
gs
lock
sbb
outs
cmps
es
mov
movs
sbb
and
dec
hlt
push
mov
fldcw
imul
aam
jmp
fs
mov
sbb
test
adc
in
nop
cmps
sbb
dec
sar
fwait
adc
lds
jg
iret
scas
push
in
lods
jne
js
mov
inc
dec
in
aam
loope
nop
cmp
in
imul
scas
inc
and
sub
xor
jmp
push
loop
mov
(bad)
mov
dec
stos
add
adc
jmp
sar
repnz
aam
push
inc
or
or
mov
adc
mov
fsub
or
shl
psubd
inc
mov
cdq
jge
ds
inc
je
test
push
and
out
(bad)
lods
push
mov
push
adc
in
aad
mov
pop
outs
call
xchg
sbb
fist
rol
and
out
sbb
xor
xchg
and
mov
std
clc
pop
mov
lds
pusha
mov
mov
repz
inc
adc
les
push
js
add
add
mov
ins
fst
mov
daa
or
add
arpl
or
adc
mov
rol
push
lahf
push
pusha
shl
pop
cmp
inc
inc
dec
mov
fld
inc
adc
push
mov
jo
xchg
push
movs
shl
cmp
pop
test
xor
pop
push
inc
jl
clc
add
xor
mov
movs
mov
sub
add
rcl
test
xchg
push
push
in
je
xor
or
add
adc
jo
jle
or
or
test
aaa
pop
sub
pop
push
cmps
push
xchg
inc
add
pusha
and
push
add
in
inc
nop
add
nop
add
inc
daa
sbb
sbb
ss
add
xchg
xor
add
pop
repnz
aaa
or
pop
mov
and
jb
cmp
add
outs
rcl
add
inc
sub
mov
jg
push
cmp
sar
add
mov
and
jbe
xchg
jno
push
push
sub
xchg
add
movs
inc
les
ret
mov
push
sub
add
xor
std
mov
cdq
lock
add
sub
or
pop
das
in
es
enter
mov
test
lds
fs
mov
in
or
nop
inc
push
xchg
adc
sub
cmc
cmc
outs
test
pop
sahf
xchg
or
push
es
xchg
adc
pop
xchg
nop
nop
xchg
pop
adc
neg
or
jo
(bad)
lock
push
or
ror
sub
repnz
xor
or
ds
push
sti
loop
and
and
in
aas
xor
xchg
push
mov
pop
xlat
cmc
ja
xor
rcl
fsub
xchg
ret
cdq
ins
adc
or
jae
outs
or
mov
xor
sub
sbb
ss
not
ret
adc
push
adc
jmp
pusha
ds
add
aam
sbb
addr16
nop
xchg
add
pop
mov
xchg
sahf
repnz
movs
push
xchg
aad
dec
push
jno
out
jbe
add
daa
les
mov
xchg
into
xchg
push
and
add
xchg
add
jle
adc
stc
or
jl
nop
add
outs
aas
xor
dec
and
cmc
es
lds
or
or
dec
jg
and
js
xor
loopne
adc
nop
dec
ja
aas
pop
inc
xchg
xor
in
adc
add
sbb
ja
xor
and
sbb
or
rol
in
arpl
push
add
add
inc
or
mov
pop
add
xor
test
loopne
dec
adc
pop
xor
rol
rcl
pop
loopne
pop
add
cmp
shr
sub
or
add
jmp
add
pop
(bad)
add
lock
jp
pop
push
add
push
ds
or
in
add
adc
add
je
shl
cmp
add
push
add
adc
and
(bad)
lock
pop
inc
add
push
or
add
and
mov
sbb
add
mov
sub
add
loop
sbb
sbb
add
xor
cmp
add
aam
xchg
lea
add
add
inc
adc
inc
jge
add
add
add
add
sub
and
and
ins
jb
jmp
or
add
dec
ror
adc
ror
sbb
mov
pand
add
adc
nop
adc
lock
jo
cmp
daa
adc
inc
jno
leave
jmp
mov
lods
mov
pop
(bad)
mov
add
xchg
pop
mov
es
adc
inc
adc
adc
in
add
sub
and
mov
icebp
jp
pop
inc
adc
push
add
push
sub
scas
scas
inc
push
test
add
mov
xor
mov
rcl
loopne
movs
shl
add
push
push
fisttp
or
adc
inc
push
retf
shr
fwait
or
sub
add
in
test
adc
xor
inc
mov
test
mov
div
mov
fld
jns
dec
jle
sub
ret
mov
scas
lock
scas
adc
pop
(bad)
pop
mov
pop
mov
inc
or
sbb
push
mov
jmp
mov
jb
mov
sti
or
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
imul
add
inc
cmp
popa
enter
test
adc
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
add
add
jnp
add
or
mov
add
xchg
or
xchg
or
pushf
add
pushf
or
pushf
or
movs
add
movs
or
movs
or
lods
add
lods
or
lods
or
mov
add
or
add
add
or
(bad)
or
into
add
into
or
into
or
into
adc
(bad)
add
(bad)
or
(bad)
or
(bad)
adc
fimul
add
or
ficom
add
or
out
or
add
out
or
jnp
or
adc
sub
or
add
or
or
adc
out
add
or
out
adc
test
and
or
or
add
adc
test
cmp
or
add
or
or
mov
or
or
or
or
adc
into
adc
test
or
or
inc
add
lods
adc
(bad)
adc
mov
add
or
arpl
or
add
or
mov
or
out
or
adc
ficom
adc
add
out
add
or
or
or
adc
or
or
mov
or
adc
fiadd
or
add
movs
adc
(bad)
add
pushf
adc
jnp
or
sbb
or
or
or
mov
or
adc
and
sub
and
dec
pushf
xchg
mov
or
adc
xchg
adc
lods
adc
not
add
adc
sub
or
or
and
or
add
cmp
adc
or
adc
adc
add
add
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
adc
inc
sub
add
add
add
add
mov
sub
mov
dec
pushf
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
shl
push
pop
xor
and
aas
push
push
cmp
inc
and
aas
adc
shl
sbb
and
and
or
add
and
nop
and
push
push
add
mov
leave
xchg
mov
mov
and
(bad)
pop
mov
loopne
imul
clc
mov
push
add
cwde
dec
cmc
or
or
in
mov
lea
xor
lods
adc
je
sti
add
pop
add
sub
add
add
add
fst
xchg
push
js
inc
jo
das
add
and
imul
xor
or
and
mov
add
jmp
xchg
sub
pop
mov
test
gs
aam
mov
test
sbb
rol
(bad)
pop
add
add
or
xchg
add
fs
inc
shr
mov
fs
lds
sbb
add
je
aaa
adc
add
push
push
inc
imul
fadd
dec
inc
xor
add
xchg
jp
add
movs
(bad)
fiadd
lea
xlat
adc
inc
jo
cmp
cwde
je
into
data16
loope
cmp
adc
add
shl
pop
and
es
add
movs
cmp
dec
dec
xchg
bound
rol
pop
jle
sub
xchg
ss
inc
cmc
add
and
sbb
add
sub
inc
add
pusha
mov
fwait
xchg
push
add
rol
lock
jno
mov
hlt
mov
jno
push
pop
adc
or
mov
ja
add
add
(bad)
push
add
inc
pop
fadd
leave
sbb
inc
inc
rol
adc
add
jge
dec
shl
jns
mov
add
jno
mov
shl
xlat
jnp
push
out
mov
push
icebp
ja
gs
test
mov
dec
inc
lock
mov
mov
stos
bound
sahf
in
xchg
arpl
aas
lods
call
and
out
(bad)
and
xchg
ins
repnz
sub
mov
repnz
xor
sub
int3
xor
ins
repz
out
repz
cmps
xchg
je
iret
sub
inc
xchg
rcr
pop
cmp
movs
adc
mov
fld
pop
push
push
xchg
push
add
xor
test
js
xchg
add
adc
test
mov
shl
xchg
jnp
sbb
xlat
dec
add
mov
sbb
sbb
pop
jmp
adc
stos
push
test
fnstsw
adc
add
adc
cli
int
adc
test
push
shufps
adc
cmp
js
sub
(bad)
push
inc
fwait
add
or
pop
rcl
in
xor
sub
add
fcom
mov
pop
mov
xor
int
data16
mov
push
push
cmp
mov
scas
add
xchg
retf
inc
in
cmp
adc
add
mov
add
pusha
sar
adc
xor
or
jge
pop
cwde
pop
(bad)
adc
out
mov
repz
adc
or
push
push
cld
mov
and
or
or
aam
es
add
cmp
jmp
xchg
xor
inc
and
rcr
add
sub
in
cmp
or
pop
add
out
lds
bound
add
dec
and
add
add
mov
or
retf
cwde
adc
cmps
sub
add
jae
jmp
test
rol
cmps
xchg
daa
fisubr
pop
mov
mov
lods
cmp
mov
mov
adc
jnp
es
fs
fadd
xchg
dec
add
or
and
cmp
cmp
jl
mov
lods
or
je
in
cmp
mov
cmp
(bad)
jecxz
add
sbb
and
jmp
pop
jle
xchg
das
fsub
mov
mov
fmul
test
adc
push
add
popf
pop
mov
repz
loopne
cmps
cmp
dec
into
jb
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
xchg
inc
clc
adc
push
dec
xor
aam
add
rcl
jno
sub
sbb
and
push
int
add
inc
and
rol
es
or
inc
add
rol
and
and
pusha
or
mov
retf
add
shr
sub
jp
aaa
call
adc
outs
push
xchg
es
add
push
xor
sbb
mov
ins
push
pushf
add
adc
imul
jecxz
add
mov
xchg
sub
fisubr
add
xor
in
and
pop
sub
sub
pop
sub
(bad)
cld
and
adc
stos
xor
dec
aam
enter
or
add
inc
lods
add
sub
jl
ffree
ja
inc
dec
lods
dec
adc
sub
and
pop
pop
inc
push
inc
dec
sub
xor
add
sbb
jle
push
dec
push
push
xchg
icebp
pop
adc
and
stos
ds
inc
cs
or
or
pushf
add
pop
aad
add
mov
aam
hlt
fisttp
(bad)
mov
push
xchg
(bad)
call
add
push
cmp
sub
cmc
dec
imul
sub
or
inc
xchg
cs
push
dec
es
out
cmps
add
sbb
add
push
add
mov
sub
add
mov
jno
and
cmp
sub
add
mov
push
add
dec
mov
movs
inc
test
rcl
lock
and
inc
and
add
mov
mov
mov
push
add
adc
mov
xchg
push
in
icebp
dec
sbb
and
ror
test
push
add
cmp
xchg
ror
mov
pop
neg
inc
and
data16
mov
sub
dec
rcr
sub
mov
inc
pop
outs
arpl
ror
push
xchg
mov
add
enter
push
outs
int
lods
dec
leave
(bad)
pop
test
sub
and
sub
paddsw
cmc
ror
mov
add
xor
xchg
add
or
mov
outs
jo
imul
(bad)
outs
pop
mov
and
or
pop
es
inc
outs
xchg
adc
add
xor
movs
ret
fmul
dec
iret
ror
dec
gs
nop
pop
push
xchg
push
sub
movs
sbb
push
cmp
mov
cmps
aad
shl
pop
dec
and
lds
and
movs
jp
xchg
dec
movs
stos
xor
lods
or
dec
icebp
xchg
or
sahf
push
fimul
call
test
sahf
jae
inc
or
xchg
adc
shr
dec
xchg
xor
mov
xor
cmp
outs
push
mov
rcl
push
push
jle
add
adc
cmp
shr
xchg
ds
jg
or
hlt
(bad)
ins
bound
or
bound
je
nop
jle
mov
jle
out
outs
adc
sub
js
xchg
jae
mov
jb
in
sub
sbb
mov
jne
or
or
jns
ror
cld
jne
mov
retf
pusha
or
or
les
sbb
in
je
push
sub
unpcklps
fld
call
loopne
adc
cmp
pusha
mov
(bad)
mov
jmp
out
js
cmp
jo
jae
jnp
jmp
xchg
(bad)
js
into
(bad)
test
jg
sub
and
ds
(bad)
cli
(bad)
(bad)
clc
iret
mov
(bad)
sti
(bad)
inc
sbb
pop
add
or
or
or
push
clc
adc
adc
adc
sbb
add
and
sub
xchg
jge
test
div
mov
div
adc
and
arpl
das
enter
jle
xlat
jle
add
inc
sbb
fs
dec
add
add
inc
push
or
test
adc
xor
push
ins
out
mov
adc
pop
xchg
inc
adc
push
lock
ror
pop
inc
adc
xchg
cmp
add
mov
add
add
rcl
aas
dec
xchg
sbb
push
xchg
cmc
add
adc
push
mov
gs
adc
loope
add
jge
pop
inc
cmc
adc
popa
sbb
jno
cmps
add
ja
adc
jne
mov
push
ret
mov
jl
push
mov
push
jge
inc
xchg
mov
adc
imul
repnz
mov
ja
pop
pop
inc
das
mov
cmp
pop
push
mov
xchg
inc
dec
adc
adc
retf
xor
test
sbb
push
sahf
cmp
or
sbb
and
mov
test
mov
push
push
aad
and
adc
pop
or
mov
sub
loop
or
adc
adc
fs
and
mov
call
loope
sbb
xchg
jne
pop
inc
pop
je
pop
shl
adc
push
xchg
push
sub
test
jo
icebp
imul
call
sub
add
retf
mov
les
shl
mov
mov
adc
pusha
mov
sub
and
add
jb
mov
adc
inc
pop
xor
cmps
push
adc
and
cmp
xor
add
adc
and
push
cmp
mov
mov
inc
movs
sbb
mov
fild
rol
jp
cmp
aaa
pop
pusha
pop
shl
cmps
adc
adc
pop
push
mov
xchg
xor
and
adc
rol
inc
push
hlt
lds
test
repz
xchg
popa
fs
mov
sbb
xor
add
pop
pop
loopne
and
add
popa
jle
jo
push
pop
pop
aaa
pop
nop
test
loope
push
add
adc
adc
adc
push
or
sub
pusha
arpl
xchg
mov
pusha
dec
loop
fisub
xchg
pop
sbb
test
mov
push
jmp
add
icebp
adc
inc
xchg
xchg
icebp
inc
out
dec
clc
jne
mov
stos
sbb
sub
push
and
fwait
bound
lahf
rcr
out
ret
leave
xor
pusha
das
jne
push
dec
mov
xor
inc
test
fst
pop
movs
jns
not
mov
sahf
or
movs
and
je
adc
and
xor
pop
pushf
add
xor
cmp
inc
ins
loope
inc
stc
pop
cmp
sub
mov
std
mov
mov
cmp
xor
(bad)
enter
aaa
rcl
jmp
and
xor
pop
adc
push
push
or
add
push
xlat
cmp
data16
mov
jmp
xchg
das
push
loopne
push
mul
gs
sbb
mov
or
popf
jp
and
inc
sbb
push
dec
xor
and
and
push
add
ret
(bad)
xor
inc
mov
and
popf
fsubp
es
aad
aas
push
call
xor
push
and
in
mov
jb
pusha
adc
jae
jae
jne
add
inc
adc
add
dec
add
loop
iret
cwde
shl
cld
push
mov
jnp
out
les
pop
bound
xchg
outs
std
xchg
inc
mov
sub
xchg
xchg
or
retf
mov
lahf
dec
test
and
lahf
icebp
adc
adc
bound
stos
push
jbe
cmp
stos
mov
imul
aam
sub
xchg
cmp
push
push
push
bnd
pop
add
push
sub
jns
xchg
and
imul
adc
outs
clc
mov
iret
fcomp
mov
push
jno
jno
imul
ret
inc
add
jbe
adc
xchg
rcr
push
scas
sub
loope
dec
(bad)
adc
mov
jecxz
addr16
xor
popa
daa
js
push
mov
daa
jg
es
mov
adc
or
pop
sub
mov
add
loopne
cmp
pop
sahf
add
loop
xlat
cdq
mov
sbb
daa
test
add
ret
push
sub
pop
pop
inc
sahf
pop
shl
sub
push
jb
add
bound
rcl
adc
and
or
in
ficom
ret
call
or
add
push
(bad)
hlt
daa
neg
sbb
adc
fst
or
imul
aad
inc
out
adc
xchg
push
dec
dec
sub
or
jb
ss
jo
mov
retf
pop
shl
call
sbb
cmp
xchg
push
sbb
push
jb
add
jb
and
ja
sub
es
jno
mov
sbb
test
mov
add
repz
ss
mov
test
push
mov
sbb
bound
rcl
(bad)
add
jecxz
loope
cs
jmp
or
mov
and
xchg
push
adc
push
mov
outs
pop
mov
mov
ret
movs
mov
jbe
mov
adc
mov
test
mov
xor
nop
pop
xor
test
outs
jne
aaa
cmp
push
cmp
push
xor
pusha
lods
adc
xor
ficom
enter
aaa
cmp
sub
push
dec
shr
imul
sbb
jecxz
mov
repz
cmp
sbb
daa
popf
mov
(bad)
push
ret
inc
lds
bound
and
pusha
lods
repz
xchg
jb
inc
dec
add
sahf
pushf
in
bound
mov
jae
retf
adc
js
mov
shl
jo
adc
jbe
(bad)
mov
je
add
push
sub
aam
test
mov
pop
add
pusha
jnp
add
mov
jns
lds
mov
dec
mov
dec
adc
inc
cmp
sbb
push
adc
in
jo
cmp
sar
pop
mov
dec
fbld
pop
pop
and
imul
mov
inc
and
popa
int
mov
mov
lds
pushf
rcl
cmp
or
neg
cdq
pop
int3
mov
int3
ret
clc
pop
adc
xchg
xchg
mov
jno
push
xor
out
imul
xor
pusha
push
pop
adc
push
pusha
add
ror
push
pop
lock
push
inc
mov
jge
ror
sub
mov
int
loop
sti
cli
or
dec
pop
inc
pop
inc
icebp
add
mov
movs
xor
push
jge
jl
rcl
dec
pop
and
clc
rol
aam
cmp
inc
jge
dec
popf
aam
mov
dec
std
aam
sbb
push
sub
and
add
adc
dec
add
add
add
or
add
mov
sub
popa
inc
add
add
test
sbb
push
sbb
adc
or
inc
dec
sbb
xchg
fs
mov
pop
push
movs
call
and
fmul
mov
retf
jnp
pop
sub
lea
adc
inc
imul
xor
cmps
add
mov
std
mov
cmp
add
mov
mov
mov
enter
sbb
adc
adc
ret
or
or
or
add
pushf
je
pop
mov
inc
rol
nop
dec
push
inc
inc
add
add
dec
pop
dec
add
and
mov
add
sbb
mov
push
mov
repz
cmp
cmp
call
push
fadd
pop
pop
mov
jo
add
inc
sub
and
mov
pop
push
pop
mov
cmp
inc
or
clc
loopne
push
ss
inc
outs
cmps
aad
and
fdiv
or
dec
jl
and
or
pop
add
add
xchg
inc
or
in
inc
(bad)
call
add
je
les
or
inc
mov
adc
xchg
inc
jmp
les
cmp
add
js
add
add
fcom
in
push
dec
adc
cdq
inc
mov
mov
out
call
(bad)
adc
(bad)
lock
add
clc
adc
push
cli
mov
or
add
sbb
in
aaa
inc
mov
test
leave
mov
shl
add
inc
hlt
mov
shr
xor
shl
sub
pop
or
ret
stos
inc
sbb
add
add
rol
pusha
push
mov
adc
jo
cmp
xchg
loopne
mov
and
mov
inc
(bad)
add
(bad)
or
jle
jecxz
cmp
mov
test
pop
rol
dec
cli
sub
add
pop
and
pop
xor
or
mov
xor
or
adc
add
(bad)
add
js
mov
or
ret
pop
or
lock
fsubrp
ret
add
push
mov
test
pusha
xchg
add
inc
int3
sub
cmp
add
sub
jo
and
xchg
imul
(bad)
rol
adc
and
push
add
ret
sub
push
add
add
jne
test
add
lods
addr16
mov
adc
in
mov
or
fisubr
and
loopne
aam
dec
lods
add
cmp
pushf
add
ret
adc
cmpxchg
add
fcmove
push
add
rol
add
or
or
lock
hlt
push
mov
lock
test
fild
or
pop
cs
pushf
sub
or
out
in
into
or
pusha
mov
inc
bndstx
sbb
cmps
cmp
shl
or
leave
cmp
pop
xor
pop
loope
loop
hlt
lods
push
cmp
add
add
mov
mov
call
and
pop
fsub
sub
test
add
pop
fsub
loopne
adc
mov
push
add
add
add
jnp
add
repz
push
push
pop
add
mov
adc
fcomp
ret
inc
add
repz
ins
nop
or
jo
add
cmp
adc
pop
adc
add
mov
push
adc
adc
mov
xor
or
pop
ins
or
xor
adc
and
cmp
das
adc
xor
loopne
adc
mov
add
enter
and
xchg
push
cmp
add
sub
cmp
add
add
dec
push
test
loopne
add
jbe
lea
adc
cmp
inc
sbb
inc
pop
jl
mov
cld
movs
add
in
push
cmps
mov
add
in
xchg
xor
into
mov
int
add
add
sub
adc
pop
pop
sbb
sbb
(bad)
xchg
inc
or
rol
add
push
jp
popa
stc
cmp
inc
cmp
clc
in
je
cmp
rcr
sub
rol
aam
jb
ins
arpl
cmp
mov
popf
lods
mov
fwait
and
adc
inc
xchg
into
add
mov
push
dec
shl
mov
lahf
and
sbb
fild
sbb
cs
add
fmul
or
sbb
scas
inc
pop
cmp
pop
ror
add
add
dec
loope
ror
adc
jge
clc
ror
call
xchg
or
adc
jmp
movs
add
xor
inc
and
add
xor
add
pop
mov
cld
test
cli
les
lock
mov
fwait
jecxz
and
(bad)
xchg
shl
or
pop
and
shl
add
add
cmp
push
xchg
into
push
rol
fldenv
ffree
scas
xor
aam
mov
mov
xchg
fcomp
in
inc
out
aas
mov
in
xchg
jl
or
and
shl
sahf
jbe
mov
pop
adc
pushf
or
pop
dec
and
adc
push
pop
gs
adc
jmp
adc
leave
ins
neg
jl
add
cmp
push
in
jb
fst
cmp
loope
add
mov
scas
in
sub
dec
jo
jne
add
sub
inc
add
lock
add
mov
ins
stos
and
pop
pop
jmp
jbe
gs
add
jmp
enter
pop
jmp
test
push
int3
or
xor
lds
sub
std
(bad)
pusha
daa
add
sbb
sub
jno
and
and
mov
mov
popf
inc
pusha
cld
xor
test
pop
mov
push
sbb
ins
add
outs
cwde
push
pusha
mov
or
retf
push
sbb
sbb
jo
sub
push
out
popa
xor
scas
adc
cmps
test
cmp
movlps
jnp
test
xchg
push
retf
xlat
pushf
outs
fldcw
and
mov
test
adc
or
retf
inc
add
sbb
dec
shr
cmp
pusha
add
call
sub
in
sbb
fld
test
es
or
movs
leave
or
fisttp
inc
mov
push
retf
test
xor
stos
fld
push
adc
adc
loop
xchg
push
test
mov
fild
lock
sbb
push
or
and
and
repz
mov
stos
dec
and
mov
int3
ror
and
loopne
xchg
pop
test
xchg
pop
xchg
pop
not
rol
inc
loop
fiadd
jp
retf
add
fisttp
mov
or
pop
stos
sub
push
mov
fstp
and
sub
xor
mov
ins
cmc
not
jp
jno
sbb
outs
ins
(bad)
and
push
sahf
add
scas
and
out
xchg
not
pop
loopne
rcr
pop
das
push
cmp
cmovae
lahf
mov
rol
or
add
bound
ds
into
mov
add
(bad)
mov
xor
xchg
sub
mov
mov
fmul
xlat
add
jo
mov
add
pop
mov
pop
(bad)
fst
push
add
mul
fadd
add
add
nop
add
xor
jne
adc
add
aaa
jle
push
jle
xchg
cmps
push
aad
cld
xor
sbb
aas
data16
jl
mov
add
jno
cmp
cmp
add
push
adc
sub
add
adc
sbb
jne
adc
add
mov
aaa
mov
sub
add
push
xor
mov
jge
mov
cmp
jp
enter
jle
pop
test
test
sahf
repz
pop
loopne
cli
arpl
mov
div
arpl
cmps
test
mov
mov
cmp
xchg
imul
stc
push
add
add
enter
daa
jbe
adc
ins
loopne
ss
inc
push
hlt
and
and
lock
add
inc
add
mov
push
rcl
push
daa
inc
and
nop
add
in
adc
push
xchg
sub
xor
sbb
or
push
dec
in
add
mov
add
rol
inc
add
mov
xor
add
cmp
xor
xchg
cmp
push
xchg
lea
enter
js
lahf
push
mov
imul
inc
add
push
mov
sbb
nop
sub
add
inc
cdq
push
add
movs
pop
mov
xor
cmp
xor
mov
dec
pop
pop
daa
addr16
add
icebp
sbb
loopne
sub
xor
inc
sub
jp
test
test
sub
or
adc
push
adc
add
daa
cmp
test
dec
mov
test
das
jecxz
mov
and
sub
jns
adc
dec
push
test
xchg
sub
cmc
jecxz
cmp
add
or
add
sub
inc
cmp
add
dec
scas
xchg
jle
adc
push
mov
dec
dec
xor
cdq
mov
push
(bad)
push
add
inc
add
inc
xchg
es
adc
jbe
adc
loopne
jecxz
add
adc
add
aad
cmp
das
xchg
test
fsub
xchg
dec
imul
and
pop
inc
test
push
and
add
pop
call
sbb
scas
xor
and
add
sub
inc
pop
mov
xor
ja
inc
jecxz
movs
leave
mov
gs
in
add
pop
add
sub
es
cwde
inc
jmp
sub
ins
push
add
mov
or
add
adc
mov
mul
movs
cdq
xchg
jno
mov
jb
mov
lods
or
or
and
rcl
pusha
push
push
or
aaa
mov
jge
test
xor
and
xlat
cdq
clc
mov
aas
test
mov
sub
add
xchg
lahf
and
mov
cmp
cwde
fldenv
adc
add
add
mov
push
push
nop
adc
pop
cmp
cmp
daa
inc
and
xchg
dec
mov
das
nop
gs
add
or
sub
leave
and
mov
mov
pop
loop
xor
lea
adc
and
mov
pop
dec
pop
je
fdivr
add
cmp
mov
fst
call
xchg
fwait
xchg
ror
jl
sbb
add
inc
test
cmps
daa
mov
add
or
sbb
pop
cmp
daa
pop
pop
xchg
fbstp
add
outs
fisttp
xchg
into
sbb
push
addr16
scas
jbe
out
push
add
xor
jo
jecxz
dec
adc
cdq
sbb
and
cmp
retf
pop
mov
cmps
inc
fidiv
add
jge
jp
cwde
stc
lods
and
lods
push
adc
daa
add
sbb
sbb
out
pop
stos
dec
inc
nop
add
pop
sub
jmp
stos
out
cmps
outs
and
mov
call
scas
push
add
mov
adc
(bad)
enter
test
mul
std
push
pop
rcl
nop
pop
int
inc
adc
lods
add
add
cmps
mov
inc
sub
cmp
add
rcr
push
cmp
jno
mov
and
xchg
fidivr
mov
adc
cs
mov
cmp
push
fiadd
mov
sbb
mov
add
jo
fadd
addr16
add
and
jae
push
pop
mov
sbb
ret
out
fisttp
and
add
call
add
imul
xchg
es
dec
jnp
fwait
imul
ja
popa
adc
add
mov
adc
lahf
pop
rol
and
and
add
popa
movs
add
aam
sbb
lahf
pop
rcl
add
xor
add
imul
ins
dec
xchg
add
xchg
cmps
cdq
push
bound
adc
add
add
mov
sub
ficomp
div
cmp
lds
sub
sub
adc
and
sbb
add
sub
sub
je
shr
or
jbe
mov
and
repz
xor
lods
popa
mov
out
mov
daa
je
add
and
inc
add
add
mov
test
mov
(bad)
cmp
mov
add
xor
outs
int3
sti
and
push
pop
and
lea
cmp
mov
pushf
hlt
mov
dec
cmps
test
adc
lock
mov
add
sub
jne
adc
adc
mov
inc
add
ja
enter
xchg
mov
xchg
add
xor
nop
add
data16
adc
add
mov
cmp
add
popf
push
push
popf
(bad)
add
cmp
popa
add
sbb
mov
shl
xor
test
sti
jns
and
xor
fs
inc
rol
add
add
xor
adc
adc
sub
(bad)
add
stc
jns
jo
aas
xor
jmp
add
sub
jo
xchg
rol
dec
cli
aaa
test
xor
adc
add
pop
sbb
into
fwait
add
(bad)
sub
xor
and
test
sub
enter
les
mov
add
and
jo
adc
adc
gs
imul
add
add
push
cs
add
add
adc
ret
int3
jbe
das
sbb
int
add
ret
adc
pop
pusha
cld
and
in
cmp
inc
into
or
shr
and
in
adc
and
and
sub
adc
mov
adc
or
xor
jmp
aas
mov
add
leave
mov
push
fsubr
in
pop
das
cmp
push
sub
xor
push
push
sar
ins
push
push
rol
or
icebp
stos
aam
pop
ror
adc
dec
jo
push
retf
sti
and
xor
add
shl
stos
pop
xchg
das
cmps
sub
push
sub
addr16
dec
sub
dec
in
scas
(bad)
sub
jg
(bad)
jl
add
jo
pop
push
ja
adc
inc
nop
push
inc
out
and
mov
and
loop
add
mov
shl
loopne
cmp
add
add
add
loopne
cmp
push
push
add
lock
pusha
and
or
add
mov
push
mov
mov
dec
nop
add
add
ins
and
adc
xchg
add
cmp
add
ins
and
or
pushf
pop
mov
jo
add
adc
pusha
add
fisub
push
mov
in
fstp
sub
add
or
or
lock
and
add
loopne
mov
add
jle
mov
add
sahf
rol
test
xor
adc
add
adc
sbb
add
adc
test
sbb
and
dec
imul
mov
pop
rol
xor
mov
add
mov
je
push
pop
inc
jae
mov
and
and
jle
add
add
pop
mov
(bad)
int
adc
mov
push
outs
in
les
sbb
imul
push
push
jl
dec
movs
rcl
inc
out
ds
shl
xor
sbb
push
rcl
shl
inc
in
and
push
and
xlat
out
push
call
loope
jg
adc
sub
out
ficom
ss
push
xor
repnz
enter
jp
jmp
shl
adc
(bad)
jmp
sub
add
stc
add
adc
dec
add
add
add
inc
cdq
or
mov
rol
add
rol
mov
lds
fcom
inc
mov
xor
mov
push
push
cdq
mov
add
cs
pushf
jmp
xor
mov
xchg
or
lea
sub
sub
add
retf
push
cmps
push
mov
push
ds
mov
shl
mov
or
(bad)
add
ins
fidivr
dec
adc
fisttp
and
pop
add
inc
lods
(bad)
add
jecxz
cwde
xor
mov
add
cmp
ror
dec
sub
xlat
mov
xchg
xor
aam
sub
inc
add
push
sbb
daa
mov
lea
jns
add
sbb
les
hlt
jae
movs
or
fild
aaa
push
lock
and
xchg
scas
shl
loopne
in
cmp
shl
inc
inc
add
adc
gs
pop
or
inc
push
adc
enter
movs
cmps
rcl
js
add
lock
jo
rol
sub
rol
nop
loopne
or
cs
add
mov
pop
adc
neg
inc
rol
adc
pop
pop
add
add
or
mov
xor
pop
or
loopne
or
je
ret
fsub
mov
xor
ret
cwde
lock
xchg
js
pusha
add
or
fdiv
push
cmp
pusha
inc
push
xchg
add
or
pop
aaa
pop
add
call
clc
nop
add
sets
cmovo
getsec
je
inc
add
fcom
inc
(bad)
pushf
stos
add
gs
inc
inc
stos
test
(bad)
fcmovb
add
dec
rol
test
or
cmp
cmp
or
adc
test
lahf
rol
add
mov
adc
add
loopne
cmps
inc
or
inc
push
mov
inc
add
inc
adc
push
cdq
add
jo
les
add
pusha
les
add
daa
add
adc
ret
adc
movs
and
push
inc
mov
xchg
int3
shr
mov
add
adc
std
dec
popa
test
adc
inc
sbb
sbb
add
data16
cmp
adc
pushf
adc
add
add
xor
and
push
xor
sub
mov
push
and
xchg
xor
or
pop
sbb
cmp
into
daa
or
test
ins
nop
add
js
xor
push
inc
push
ffree
push
adc
test
into
push
mov
cmp
or
retf
sub
pop
rol
adc
stc
test
lds
add
sbb
idiv
fisub
je
outs
int3
sbb
sar
inc
mov
les
stos
aas
ins
ret
or
or
adc
mov
mov
imul
xor
jo
fstp
xor
leave
adc
in
sbb
jl
xor
neg
xor
jns
adc
hlt
out
dec
xor
push
pop
mov
es
jb
pop
mov
ret
mov
loop
fwait
or
and
xchg
or
add
cmp
mov
mov
dec
cmp
fadd
imul
cmp
ss
pop
jl
sti
pop
cmovbe
arpl
loopne
pop
test
sub
ret
adc
adc
mov
push
je
test
fwait
rol
or
adc
mov
pop
sub
pop
inc
mov
mov
mov
add
xor
or
xchg
or
les
movs
loopne
sub
pusha
pop
mov
cwde
loopne
out
pop
or
sbb
ins
fwait
clc
jb
add
cmp
inc
mov
adc
xchg
or
mov
les
push
nop
and
sub
add
out
scas
add
rcr
je
or
aaa
sbb
pop
cmps
push
inc
jg
pusha
gs
sbb
popf
adc
push
inc
rcr
pop
(bad)
add
jg
adc
rol
iret
test
sbb
sahf
mov
inc
jb
sub
inc
adc
test
fs
add
xchg
test
and
gs
push
clc
ds
cmps
adc
and
add
stos
cmps
adc
or
inc
sub
mov
out
and
movs
add
test
xor
add
(bad)
mov
ret
and
adc
call
xor
out
add
std
movs
test
pushf
das
or
or
or
jns
jae
inc
add
pusha
mov
jmp
or
xor
push
test
rol
test
cmp
push
inc
rol
test
sbb
cs
dec
cli
jmp
sbb
and
xor
mov
mov
add
test
cmp
dec
push
sub
and
sti
mov
popf
cmp
ror
sbb
dec
mov
push
dec
add
and
stos
aad
rol
mov
add
mov
push
arpl
push
iret
jmp
push
adc
mov
sub
mov
add
fs
or
imul
xchg
loopne
xor
pop
mov
sbb
das
call
pop
add
adc
fs
and
or
fiadd
cli
mov
sbb
stos
imul
jle
mov
add
push
add
clc
rol
add
clc
dec
add
jne
or
mov
sbb
cmps
movs
jmp
adc
leave
aad
sub
xor
jmp
add
add
pusha
pop
and
dec
add
dec
rcr
mov
add
or
mov
outs
hlt
pop
sbb
imul
adc
xchg
mov
add
jb
push
aaa
sbb
jae
inc
adc
imul
stos
outs
fdivr
sahf
adc
mov
bound
push
add
pop
int3
aas
inc
cli
dec
ins
scas
jge
jg
jmp
retf
push
call
push
movs
(bad)
popf
push
and
ror
sbb
dec
into
add
jle
adc
inc
add
push
lfs
ss
into
neg
jae
xor
cmp
es
add
rcl
loop
push
jae
arpl
mov
arpl
dec
adc
adc
add
dec
add
sbb
or
pop
clc
mov
movs
popa
push
jmp
in
lahf
inc
in
inc
jl
or
adc
mov
mov
mov
xchg
fs
dec
xchg
and
adc
sub
add
mov
nop
or
sbb
repnz
nop
push
scas
popf
mul
mov
jnp
test
ins
add
nop
jne
cs
sub
(bad)
pop
div
mov
out
repnz
add
add
xchg
push
in
cli
pop
aaa
adc
or
or
fiadd
cmp
(bad)
fidiv
outs
js
mov
pusha
aad
neg
ins
pop
push
sbb
retf
cdq
js
call
dec
test
nop
stc
sbb
fcmovne
push
inc
out
leave
and
xchg
pop
mov
retf
maskmovq
not
push
or
call
xchg
(bad)
outs
pop
aas
test
push
add
push
pop
cmc
stos
retf
mov
inc
adc
cmp
nop
and
fld
or
dec
(bad)
mov
mov
pop
div
mov
out
aad
es
ins
mov
push
rol
or
add
ror
stos
test
pop
nop
inc
jge
je
in
jo
adc
bound
add
cmp
xchg
idiv
ror
pop
mov
add
jmp
add
nop
rol
add
adc
sar
rol
in
xlat
or
and
mov
rol
or
sbb
stos
xchg
and
and
jge
stos
fsubr
out
into
sbb
repnz
(bad)
xor
jl
xchg
sahf
pop
popf
rol
cmp
add
xor
jge
loop
xor
cmp
push
xor
xor
and
add
imul
dec
inc
add
out
cmps
movs
ficom
test
outs
push
xor
les
cmps
dec
ss
inc
mov
xor
push
jp
rol
loopne
mov
add
pop
add
jle
(bad)
push
push
dec
ds
loopne
test
cmp
repz
xchg
test
rcr
sub
xchg
lock
imul
gs
push
mov
push
xor
sub
inc
mov
jnp
out
or
jo
and
inc
fs
out
(bad)
daa
fs
pop
inc
jp
add
add
call
adc
xor
jno
repnz
xor
and
iret
push
clc
jnp
inc
add
bound
inc
mov
add
inc
aaa
or
ins
in
jge
xchg
sbb
and
mov
jo
inc
js
xchg
xor
jp
add
out
(bad)
test
dec
and
js
test
xor
add
xor
lock
rol
or
add
sub
mov
das
jl
xor
push
add
inc
mov
rol
mov
cmp
pop
pop
inc
mov
jl
repz
enter
mov
sub
adc
aaa
add
sbb
push
cmp
jo
jbe
push
sub
jb
and
mov
adc
push
jb
inc
ret
cwde
mov
dec
neg
aaa
int
inc
repnz
jge
and
loop
add
aad
jne
add
push
ret
add
cmp
ja
add
mov
inc
add
mov
fcom
sub
add
push
jo
or
ins
jmp
cmp
rcr
je
cmp
add
ror
inc
das
xor
jmp
mov
jo
enter
add
inc
fldcw
push
jge
call
cmp
ins
aam
and
inc
xchg
add
aas
push
cmp
xor
bound
sub
cmp
or
inc
mov
outs
leave
es
cmps
xchg
je
xor
loopne
cdq
push
fs
shl
inc
pusha
push
ror
sub
cmp
sub
imul
jne
cdq
add
dec
rcl
test
idiv
xchg
enter
gs
push
add
push
sub
stc
imul
test
jnp
data16
sub
sar
fwait
xchg
mov
sub
adc
daa
mov
add
mov
inc
mov
add
and
in
sub
dec
out
cdq
mov
add
pop
pop
test
call
push
cmp
add
adc
sahf
je
adc
pusha
add
and
dec
push
mov
pop
(bad)
add
xchg
dec
sbb
dec
iret
ss
jo
mov
outs
enter
fst
ret
lahf
adc
xchg
movs
test
dec
pusha
xchg
popf
inc
cdq
mov
sbb
ds
mov
dec
in
aaa
and
sub
lock
inc
add
inc
mov
or
sub
push
neg
push
mov
fwait
adc
xchg
or
and
add
push
sub
sub
repz
nop
cmc
jmp
xchg
popf
dec
dec
dec
jmp
mov
mov
lock
mov
xor
ja
rol
fcom
add
imul
cmp
xchg
cdq
dec
dec
aad
push
outs
mov
sub
jns
cmps
xchg
fs
push
out
mov
clc
xor
es
cs
jge
jle
lock
sbb
mov
jp
add
test
pop
stos
(bad)
cmp
jl
stos
mov
mov
test
je
mov
jbe
fcom
(bad)
pop
xor
and
mov
sub
add
test
and
(bad)
arpl
pop
add
mov
mov
lods
add
cmp
pop
xchg
push
lods
sub
test
xor
add
jge
xchg
add
push
mov
cmp
ins
leave
movs
popf
(bad)
ficomp
dec
bound
push
das
shl
xor
leave
cmps
popf
or
(bad)
jmp
fisub
sbb
cdq
or
popa
adc
ficomp
mov
aad
dec
pop
mov
mov
mov
add
jle
in
aad
mov
mov
pop
je
test
xor
mov
div
mov
inc
mov
sub
sbb
xor
fwait
movs
jno
ds
mov
jne
jo
xlat
cmp
jo
mov
sub
bound
jle
push
push
jae
inc
aam
cmps
mov
jmp
mov
jmp
aam
adc
mov
jmp
dec
pop
add
xchg
mov
lock
bound
adc
or
and
mov
add
loop
add
sahf
icebp
xchg
outs
sub
push
jne
mov
loop
mov
mov
add
ds
mov
sub
mov
add
ins
call
aaa
dec
shl
sub
add
and
mov
adc
push
rol
inc
jmp
nop
fld
stos
hlt
pop
mov
mov
test
inc
scas
inc
xor
fstp
popa
mov
mov
xchg
push
mov
xchg
adc
cdq
xchg
jecxz
rol
mov
scas
ret
dec
and
int3
push
jae
mov
pop
call
not
cmp
enter
dec
and
xchg
add
adc
or
xchg
adc
or
jae
cwde
add
rol
and
inc
lock
stc
adc
mov
mov
push
sbb
dec
cli
inc
scas
stos
dec
mov
mov
in
repz
nop
add
xchg
xor
jno
add
inc
push
and
test
jnp
jnp
pop
int3
popa
div
add
add
xchg
add
xor
and
repz
lds
inc
or
popa
or
add
add
jle
pusha
push
adc
mov
cmp
add
add
shr
ins
mov
sbb
bt
and
sbb
mov
cld
ret
hlt
(bad)
add
xor
sub
out
xor
or
adc
js
ret
add
cmp
sub
or
and
add
into
out
add
or
and
adc
push
sbb
and
sub
stos
add
or
dec
pusha
and
xor
daa
and
inc
and
aad
push
mov
push
ror
and
adc
add
inc
dec
sub
lahf
xchg
add
add
dec
(bad)
cmp
or
arpl
adc
add
add
xor
adc
mov
add
push
add
xlat
add
gs
push
aad
add
add
push
and
lock
xor
and
sub
xchg
add
mov
adc
add
inc
add
ins
(bad)
dec
add
mov
ds
fdiv
adc
aad
add
adc
or
push
jecxz
add
and
add
(bad)
(bad)
aas
mov
fld
sub
out
aad
push
add
add
sbb
add
pop
add
mov
and
pop
mov
pop
rol
push
dec
pop
sbb
nop
fimul
add
push
add
pop
jae
pop
jb
pop
jb
add
adc
and
(bad)
es
pop
add
add
nop
pop
or
add
lea
retf
sub
sbb
add
add
adc
js
xor
push
js
add
loopne
mov
or
mov
(bad)
add
jo
adc
pop
push
add
add
rol
mov
add
imul
push
adc
add
nop
fwait
jl
(bad)
popa
add
push
cmp
push
push
xor
xchg
sbb
xchg
dec
cdq
hlt
jno
or
ficom
sar
mov
shl
add
scas
loope
mov
adc
xor
add
push
or
sbb
pusha
loopne
scas
cmp
inc
sub
outs
loopne
push
sbb
loopne
nop
dec
or
iret
or
shl
inc
push
sbb
jno
xchg
icebp
pop
lahf
xchg
sbb
shl
shl
jo
jecxz
sbb
mov
sbb
das
enter
scas
add
push
aam
push
xchg
inc
push
or
mov
add
in
xchg
jecxz
and
cmps
adc
pop
pop
outs
loope
outs
mov
inc
popa
pop
add
pop
jg
sbb
out
in
rcr
push
call
inc
pop
je
sbb
sbb
jmp
(bad)
call
mov
jns
dec
cmp
adc
pop
add
jg
sbb
out
fsubrp
mov
jmp
mov
mov
sbb
jmp
push
xor
icebp
adc
xor
pop
adc
ret
les
inc
push
in
ret
pop
sub
mov
inc
push
adc
in
jmp
pop
in
sub
xor
mov
in
fdivrp
in
loopne
adc
popa
adc
scas
in
shr
out
cmp
out
jmp
(bad)
out
lock
out
repnz
hlt
pop
out
idiv
clc
sahf
out
cli
mov
in
out
or
lock
or
lock
or
lock
add
loopne
adc
out
add
add
stc
add
adc
pop
add
add
add
inc
test
xchg
lea
nop
mov
xchg
cwde
cdq
xchg
adc
mov
push
xchg
add
mov
mov
mov
mov
shl
(bad)
mov
sahf
mov
enter
rcl
retf
mov
mov
add
in
in
shl
jmp
rcr
popf
ret
cmps
neg
jecxz
add
or
add
mov
add
aam
xchg
or
sub
(bad)
les
rcl
push
or
(bad)
xor
pop
push
pop
add
test
and
or
xor
adc
adc
inc
jnp
push
jo
addr16
aas
inc
pusha
nop
jae
retf
sbb
adc
sub
mov
adc
clc
les
jmp
dec
gs
loopne
or
add
push
or
dec
nop
or
add
jle
jge
or
inc
xchg
jp
jb
mov
inc
add
nop
imul
lods
or
mov
xor
sbb
popf
adc
pop
movs
dec
icebp
inc
add
sbb
push
xchg
ret
dec
sbb
fdivr
lahf
dec
cmp
or
xchg
push
sbb
xor
add
or
jp
call
adc
sbb
sbb
jno
xchg
cmp
cmp
(bad)
stc
push
ss
cmp
daa
and
and
loopne
retf
lea
jnp
icebp
enter
adc
add
mov
les
inc
push
or
add
or
mov
nop
ror
pop
les
adc
push
enter
sbb
mov
adc
and
inc
adc
mov
inc
or
inc
dec
add
int3
mov
xchg
adc
or
inc
loopne
sub
adc
and
(bad)
or
daa
out
add
push
xchg
pop
mov
daa
sub
loopne
xchg
inc
nop
inc
inc
push
(bad)
sub
and
data16
add
adc
je
add
adc
clc
mov
rol
inc
jne
call
adc
sub
xchg
pop
popf
mov
out
and
jmp
sbb
push
aam
or
or
cmp
push
push
out
inc
add
xchg
sub
inc
inc
inc
stc
adc
daa
mov
adc
leave
bound
cs
bound
inc
push
sub
ds
out
push
and
xor
or
push
test
clc
push
mov
cmp
mov
mov
nop
nop
cmps
(bad)
dec
call
hlt
pop
mov
xlat
imul
test
rol
popa
mov
pop
cs
or
lods
adc
cli
dec
or
in
call
push
inc
add
push
push
cld
mov
nop
repnz
sbb
lods
loop
inc
jno
and
jo
daa
pop
cmovp
pop
stos
push
sub
pop
mov
mov
sbb
push
and
ret
sub
pop
pushf
jo
mov
data16
shl
sahf
fdiv
or
arpl
or
mov
or
or
inc
movs
xor
retf
inc
nop
outs
rcr
sub
shl
xchg
into
repnz
dec
fmul
push
push
push
add
sub
inc
loope
inc
je
fldenv
adc
lods
mov
add
or
jo
or
push
push
inc
and
inc
mov
das
and
movs
xor
les
int
aam
pop
nop
add
test
xchg
add
(bad)
mov
add
inc
add
inc
cmp
xlat
cmp
test
(bad)
lea
mov
or
add
fcomp
and
in
sub
pop
scas
jbe
inc
jno
outs
pop
(bad)
test
add
xchg
mov
cmp
adc
adc
cmp
ins
add
fs
push
mov
add
add
push
test
adc
retf
loopne
or
movs
add
cmp
adc
xor
fimul
adc
or
or
mov
iret
or
cmc
jns
or
add
shld
dec
inc
fcom
shr
add
dec
fsub
inc
xor
cmps
cmp
popa
inc
sub
xor
ins
scas
sbb
add
mov
pushw
and
jmp
inc
inc
lock
data16
int
adc
shl
dec
mov
ss
popa
jge
inc
adc
sub
in
pop
or
mov
add
mov
cmp
add
hlt
das
adc
in
inc
adc
add
(bad)
push
adc
rol
sub
shl
cmp
shl
pop
nop
ret
lea
cmp
add
lds
sbb
sub
add
test
xchg
(bad)
mov
push
movs
mov
out
mov
aam
cmp
xchg
mov
movs
and
adc
add
test
inc
es
inc
jge
inc
or
jecxz
sbb
add
shl
dec
xor
adc
cmp
jbe
add
test
add
or
retf
push
jbe
or
call
ret
imul
add
gs
int3
mov
outs
inc
mov
mov
adc
add
adc
and
cmp
mov
mov
cmp
inc
sbb
inc
call
and
add
popf
mov
or
jo
pop
sbb
dec
mov
adc
scas
or
add
add
add
push
rol
int3
pop
ss
and
cld
mov
inc
or
sbb
into
push
test
and
pop
(bad)
mov
gs
out
dec
stos
and
pusha
inc
into
adc
movs
or
and
add
push
push
stos
out
rcl
xor
(bad)
(bad)
retf
cmp
mov
ds
sub
or
add
cmp
or
fsubr
shr
enter
xchg
rol
push
push
add
not
xchg
int
popw
mov
adc
fsubr
cmps
jg
add
mov
(bad)
cmp
or
adc
jno
cmp
inc
jbe
pop
mov
cmp
into
jle
stos
shr
and
adc
add
mov
adc
sbb
lock
pusha
add
rcl
repz
lods
sahf
add
inc
scas
pop
xor
retf
dec
(bad)
jge
mov
movs
push
fidiv
add
ds
add
add
lock
retf
adc
cli
add
bound
jne
mov
(bad)
or
fdiv
add
xor
adc
ins
or
or
sub
gs
push
xchg
push
push
test
and
sub
or
out
es
inc
inc
nop
in
cdq
das
int
pushf
cmp
aam
es
xor
mov
push
ss
cmp
push
dec
or
bound
push
(bad)
sub
in
sbb
xor
movs
test
cwde
cmp
and
sbb
xchg
(bad)
in
sbb
push
test
inc
xor
xchg
and
add
sbb
cmp
cmp
and
or
repz
clc
aaa
mov
jge
pop
push
cmp
xor
mov
out
leave
cmps
fdiv
sti
adc
add
aas
dec
jo
jae
adc
mov
jmp
test
and
xor
enter
or
les
mov
imul
hlt
jnp
xor
retf
mov
cmp
add
(bad)
mov
mov
out
in
mov
pusha
xor
xchg
or
mov
xchg
sar
ret
xchg
or
ss
enter
js
loopne
dec
rcr
jp
call
in
xchg
inc
dec
inc
or
lds
mov
fdiv
call
xchg
push
xor
ins
xchg
add
add
sbb
fild
sti
inc
push
dec
mov
mov
emms
int
mov
mov
sti
pusha
repnz
(bad)
sbb
mov
inc
ret
push
test
dec
loope
lods
mov
ja
ficom
(bad)
jmp
sbb
jmp
cwde
retf
jp
cmp
and
popa
(bad)
cwde
shr
inc
shl
mov
imul
jmp
fidivr
xlat
fidivr
cmps
dec
sar
sbb
loopne
enter
daa
or
loopne
mov
jp
add
pushw
xor
sar
daa
add
and
jg
xchg
push
push
cmp
rol
ret
shl
dec
loopne
or
je
and
sub
pop
add
call
jl
mov
sub
inc
out
cmp
clc
popa
retf
mov
mov
cmp
push
out
or
lock
xor
push
add
or
or
pop
pop
movs
pop
pop
repnz
nop
add
aad
xchg
ret
jp
cmp
pop
xor
inc
popf
lock
inc
inc
imul
rol
add
dec
loopne
pop
repnz
push
daa
mov
dec
or
clc
jae
and
and
imul
fild
cwde
inc
imul
push
push
xor
and
or
inc
cmp
ins
pop
xor
xor
pop
aad
dec
ja
mov
pop
mov
or
xchg
jg
push
imul
inc
sbb
popf
lock
cmp
add
push
cmp
add
sub
pusha
inc
mov
xchg
pop
aaa
cmp
inc
jp
outs
and
push
push
and
lods
enter
and
add
add
mov
repz
js
movs
sbb
mov
mov
add
and
fimul
(bad)
push
sbb
dec
test
mov
add
ret
test
dec
ret
inc
xchg
dec
cdq
out
imul
movs
invd
push
add
push
cmp
and
inc
mov
sub
and
dec
pop
inc
aad
xchg
cmp
shl
movs
mov
xor
add
push
xor
adc
add
and
mov
push
xchg
push
jl
inc
je
nop
add
sar
xor
jecxz
and
imul
pop
or
mov
push
pop
push
xor
dec
xchg
sub
cwde
mov
dec
cdq
add
and
popf
add
aam
inc
mov
xor
add
inc
(bad)
jnp
inc
xor
sahf
pop
add
das
addr16
pop
mov
nop
movs
add
sahf
add
push
dec
xchg
mov
or
pusha
xchg
adc
imul
popf
adc
inc
or
loopne
and
add
xor
sbb
and
sub
add
aad
cmp
add
adc
and
xchg
in
sbb
mov
add
push
sub
aaa
xlat
daa
outs
dec
mov
cmp
add
xor
mov
xchg
mov
mov
jl
arpl
push
add
add
add
adc
jbe
inc
mov
js
push
nop
mov
sub
mov
repnz
jge
and
loope
add
cmp
pushf
movs
mov
nop
je
mov
add
aad
(bad)
mov
aas
and
cmp
xchg
push
nop
mov
enter
xchg
xor
cmp
enter
bound
jae
mov
call
add
sahf
fs
repz
ret
xor
jmp
inc
jae
mov
leave
jb
loop
dec
and
and
data16
jmp
daa
add
push
stos
ja
rol
repz
addr16
cmp
mov
ret
add
sbb
inc
xchg
mov
adc
dec
shl
mov
mov
cmps
and
fmul
adc
xchg
dec
aad
mov
or
add
add
push
cdq
popf
rol
sbb
add
stc
or
add
xlat
cmp
dec
mov
sahf
add
inc
add
imul
(bad)
or
add
push
inc
sbb
sub
push
mov
popf
xor
call
test
nop
das
xchg
data16
and
imul
push
cmp
push
xchg
(bad)
sub
cmp
call
adc
dec
nop
add
cwde
pop
and
fsub
push
leave
add
rol
mov
add
add
and
popa
xchg
xchg
mov
xchg
inc
movs
mov
jb
and
jb
aad
nop
inc
je
nop
add
sub
and
and
(bad)
mov
(bad)
xchg
or
jge
pop
inc
jecxz
scas
test
sub
mov
cld
imul
loopne
cmp
add
adc
adc
mov
xchg
inc
add
add
mov
ins
jbe
inc
inc
add
inc
add
cwde
inc
mov
sbb
jg
add
sub
imul
scas
inc
sbb
and
repz
add
dec
xor
sbb
add
lock
xchg
adc
add
add
jp
aas
rol
adc
adc
pusha
add
cmps
and
mov
inc
mov
mov
add
xor
mov
adc
add
test
pusha
sbb
ffree
nop
sbb
mov
nop
add
pusha
inc
inc
lock
add
mov
add
mov
pop
cmp
add
add
mov
fchs
add
add
or
mov
aas
jo
dec
add
sbb
loopne
jp
add
and
and
rol
or
dec
loopne
mov
add
mov
imul
cmp
add
rol
outs
inc
mov
and
sub
mov
add
add
mov
cmovo
inc
inc
add
inc
add
hlt
add
adc
sbb
(bad)
sbb
rol
adc
pop
and
add
sti
mov
adc
adc
mov
xor
adc
add
rol
adc
mov
push
icebp
adc
pusha
add
mov
sar
push
add
jl
and
add
and
add
ret
add
sbb
push
adc
mov
and
and
adc
xor
bound
or
mov
and
dec
movs
add
add
push
add
les
add
xor
cmp
xor
and
add
sbb
add
loopne
sub
adc
dec
lods
adc
adc
call
adc
adc
mov
rol
mov
dec
fadd
mov
add
lock
mov
adc
enter
mov
(bad)
push
jb
or
or
adc
and
pop
popa
sub
push
adc
add
dec
pop
xor
jb
cwde
xchg
aaa
sbb
loope
mov
pop
sub
mov
cmp
push
inc
adc
add
adc
adc
rcl
jne
adc
push
add
lods
adc
xchg
retf
(bad)
xchg
fcom
sbb
add
nop
jo
enter
into
cmp
mov
sti
xor
out
and
mov
adc
sbb
jmp
mov
movs
repnz
out
cld
retf
or
adc
xor
ror
jo
push
sbb
mov
seto
into
ret
jo
cdq
lock
or
or
shl
ins
rol
test
test
or
cmp
xchg
loopne
cmp
cmp
sar
std
rol
aam
cmp
inc
jge
dec
popf
aam
mov
dec
jge
mov
aad
pop
aad
jge
pop
popf
aad
mov
pop
std
aad
sbb
fs
(bad)
ins
aad
add
and
add
adc
dec
add
add
add
inc
scas
or
mov
rol
and
dec
pushf
dec
mov
lds
repnz
mov
xchg
push
daa
mov
retf
xchg
xor
pushf
stc
jb
int
adc
push
js
inc
dec
mov
lock
add
and
mov
add
dec
cmc
data16
mov
push
cmps
push
xchg
js
dec
mov
fnstenv
cmp
mov
inc
jp
out
retf
cmp
sbb
jle
out
std
clc
pop
scas
add
int3
mov
or
retf
aad
arpl
adc
xchg
ins
push
shl
loope
sub
les
rol
fdiv
xor
ins
push
or
jo
mov
ins
or
lods
mov
sbb
scas
loopne
loop
push
and
enter
and
add
or
mov
or
push
inc
ret
mov
aaa
inc
je
lock
add
sbb
call
push
jmp
cmp
adc
add
adc
(bad)
add
mov
lock
and
or
test
add
inc
and
mov
pop
movs
xor
ret
xchg
inc
xchg
add
lock
mov
inc
js
sub
inc
or
add
add
mov
xchg
xor
fs
xchg
inc
add
add
mov
cmp
rol
bound
jl
rol
loope
fwait
ds
and
push
add
adc
jno
pop
push
inc
xor
outs
add
jo
mov
add
dec
add
adc
mov
ret
adc
pop
addr16
daa
dec
add
and
nop
cmps
push
imul
(bad)
rol
push
pushf
call
add
js
jno
call
je
add
les
cmp
adc
push
in
or
dec
push
lods
inc
rol
add
mov
es
stos
inc
sub
imul
(bad)
nop
rol
jl
lods
adc
test
and
add
rcr
sbb
pop
mov
fs
adc
mov
les
jno
add
or
movs
mov
inc
ss
ja
push
shl
lds
mov
xor
add
in
rcr
and
lds
popa
inc
inc
std
mov
pop
or
aam
jmp
push
mov
dec
and
les
pop
or
fcom
sbb
ret
or
push
ins
mov
pop
xchg
mov
push
push
inc
and
push
adc
sbb
add
xor
ror
mov
(bad)
sti
push
or
jnp
push
loopne
movs
loopne
lgdtd
popf
add
and
or
sub
xor
add
nop
or
clc
dec
add
add
les
rol
daa
jl
lods
or
cmp
and
out
not
pop
push
dec
adc
sub
push
inc
in
test
pop
imul
inc
add
or
dec
jne
cmps
lds
inc
in
ror
inc
or
sbb
sub
push
inc
mov
or
adc
sbb
test
xchg
push
(bad)
jae
add
push
xchg
lea
add
jmp
push
movs
adc
jmp
mov
int3
and
loope
pop
cmp
inc
mov
add
aad
xchg
daa
adc
je
popa
push
push
add
je
add
pop
in
nop
and
aad
pusha
rcr
dec
cld
push
repnz
fs
xor
mov
rcr
inc
add
inc
aas
daa
xor
inc
dec
rol
movups
and
daa
adc
mov
daa
or
bound
push
xor
(bad)
rol
xchg
or
or
add
outs
not
sub
(bad)
adc
jo
and
inc
and
loop
and
xor
add
rol
clc
sub
es
in
dec
pop
inc
inc
test
fsub
and
loopne
xor
not
lock
xchg
ja
rol
call
xchg
push
push
icebp
and
add
sbb
jo
sbb
push
leave
sub
add
mov
and
dec
and
mov
and
stos
xchg
and
mov
or
jl
add
test
in
lea
xchg
mov
shl
fwait
adc
sar
adc
stc
sub
and
sub
jno
xchg
inc
dec
(bad)
add
sbb
sar
add
add
xchg
jb
loope
dec
cmp
ror
in
jo
cmp
and
fadd
out
adc
or
sub
mov
or
fld
imul
movs
hlt
and
or
rol
pushf
sub
or
add
mov
jge
dec
inc
add
sar
adc
or
jp
and
or
xchg
je
gs
jecxz
jne
int3
mov
aad
iret
fs
inc
sub
rcl
jb
adc
popa
and
push
or
push
inc
xchg
daa
mov
cmp
sbb
mov
je
pop
or
jae
loopne
dec
cli
dec
add
push
add
push
jmp
jmp
cdq
mov
rol
xchg
int
jmp
mov
mov
xchg
sub
aad
ret
mov
fs
xchg
cmovg
push
cdq
pop
add
fld
loopne
fwait
dec
ret
sti
xchg
cdq
adc
or
sbb
dec
fiadd
mov
mul
or
add
lock
inc
inc
jo
icebp
mov
add
(bad)
nop
pop
add
aam
retf
push
ja
dec
and
loopne
xlat
adc
dec
add
int3
and
loopne
inc
mov
sbb
pop
mov
xor
adc
(bad)
fs
fstp
or
sbb
in
add
push
(bad)
clc
xchg
rol
xchg
bound
leave
pop
xchg
jo
push
faddp
lds
dec
rcr
mov
sbb
or
xor
cmp
adc
pop
ins
sub
and
loopne
mov
push
dec
das
shl
daa
mov
pop
pop
movs
pop
xchg
sub
and
mov
inc
sti
and
and
or
mov
xchg
push
arpl
xchg
fistp
fcompp
cmps
fstp
push
aad
popa
(bad)
fimul
xor
add
or
dec
mov
call
push
xor
or
inc
or
in
dec
pop
cmp
pushf
cmc
dec
dec
jo
xchg
in
add
dec
push
mov
and
ds
mov
fwait
jb
adc
mov
enter
mov
push
dec
sub
lock
xor
fs
cmp
movs
ss
and
lds
jge
nop
dec
out
cs
out
cs
cmp
fcmovne
add
dec
adc
xchg
icebp
dec
push
push
mov
je
mov
bound
or
jecxz
dec
sub
les
loope
jne
call
push
cmp
stos
popf
dec
ret
xchg
xchg
pop
fwait
mov
inc
mov
and
inc
sbb
add
dec
scas
ins
(bad)
(bad)
and
das
dec
jne
xchg
add
and
push
loope
fdiv
inc
mov
xchg
adc
sub
aad
inc
push
nop
dec
stos
pop
fsubr
sbb
fsubrp
les
pop
or
jns
xor
aaa
loop
ret
ret
fst
add
das
fimul
rcr
ss
and
pusha
pop
imul
cwde
mov
sub
popa
xchg
mov
sub
retf
stos
cmp
and
fistp
lock
mov
cmp
pop
mov
or
mov
pushf
adc
fist
adc
pop
popa
iret
cmps
jge
xor
test
enter
and
dec
ins
push
and
std
and
daa
inc
test
icebp
fisttp
jl
push
pop
inc
fcom
inc
push
adc
popa
pusha
ss
add
out
iret
ja
sub
mov
ret
inc
adc
sub
or
out
inc
mov
jo
ret
add
and
inc
mov
jo
data16
pop
pop
pop
ss
(bad)
aaa
jo
rol
adc
nop
arpl
and
push
sub
add
adc
sub
adc
add
ss
out
scas
aaa
push
xor
imul
or
push
jg
inc
mov
push
inc
outs
and
cmp
add
push
data16
pop
add
addr16
adc
push
add
jl
mov
dec
inc
jb
arpl
in
fldenv
ins
js
push
add
xchg
imul
pop
jl
push
aas
push
add
add
xlat
adc
loopne
sbb
(bad)
in
inc
pop
jge
add
lock
xor
add
bound
mov
bound
call
xchg
enter
imul
adc
add
sub
aaa
push
sub
xchg
cwde
add
pop
adc
add
add
push
out
mov
repnz
push
push
add
ja
(bad)
test
inc
sub
ror
xor
mov
bound
arpl
pop
gs
inc
add
pop
add
jo
daa
aas
adc
adc
enter
add
xchg
gs
int
adc
adc
push
aam
xor
sub
jle
dec
test
jo
push
sub
add
call
cmps
add
pop
sub
ds
xchg
cmp
add
sub
aaa
sbb
add
sub
adc
lock
push
push
inc
adc
inc
adc
and
xlat
inc
sub
push
adc
push
js
push
and
cmp
mov
(bad)
cmp
xchg
sbb
inc
bnd
mov
mov
adc
dec
jb
xor
add
mov
xchg
inc
sub
les
add
add
add
xor
inc
inc
pushf
hlt
adc
rol
jo
sbb
pop
sub
pop
and
push
pop
xor
xor
rol
inc
nop
ins
and
gs
cwde
cdq
xchg
sbb
dec
lahf
cmc
outs
mov
ins
mov
add
add
add
sbb
add
lock
nop
cdq
add
mov
movs
sbb
cmp
xchg
fsub
add
xchg
add
jo
sbb
call
aaa
cmp
and
mov
xchg
fwait
in
pop
je
xor
adc
adc
xchg
jmp
aaa
jp
test
imul
dec
aas
lock
pop
test
adc
push
sub
add
adc
sub
movs
add
cdq
les
test
inc
sbb
mov
adc
xchg
inc
ds
pop
ret
and
pop
pop
xchg
and
mov
push
inc
add
loop
les
add
mov
adc
jno
inc
or
add
mov
and
inc
sub
clc
stc
dec
adc
sbb
add
mov
ret
rcr
adc
cwde
add
add
mov
or
sbb
add
add
loopne
aaa
hlt
adc
inc
pop
jb
adc
adc
mov
or
add
pop
ins
inc
jo
dec
loopne
ds
add
add
test
cdq
add
inc
push
add
nop
push
mov
adc
or
adc
cmp
push
imul
mov
or
add
pop
dec
adc
and
add
add
sub
lods
ret
cdq
lock
add
and
add
lock
rol
pusha
xchg
daa
inc
add
jmp
add
adc
adc
int3
in
sub
lods
adc
int3
inc
lods
mov
add
inc
lods
out
cli
adc
or
xor
and
dec
push
push
sbb
and
sbb
sub
imul
or
inc
cli
add
cmp
sbb
adc
rol
pop
ins
rcr
sbb
pop
push
rol
push
test
jo
dec
add
enter
jo
(bad)
shl
rol
mov
mov
sti
add
mov
push
push
adc
add
nop
sbb
inc
add
popa
add
shl
add
sti
adc
loopne
jle
mov
inc
add
pop
repnz
loope
sbb
mov
and
rol
add
mov
fwait
lods
and
add
mov
jb
enter
xor
and
popf
jno
dec
and
cmp
mov
shl
and
test
pop
mov
pop
push
cmp
ja
cmps
pop
sub
(bad)
pop
dec
test
push
adc
rcl
mov
in
popf
pop
cmp
outs
daa
and
inc
xor
das
sar
mov
mov
jnp
test
adc
add
stc
add
adc
add
add
add
inc
test
xchg
mov
push
xchg
xchg
xchg
cwde
cdq
cdq
xchg
adc
mov
nop
add
lahf
xchg
scas
mov
add
mov
xchg
mov
xchg
popf
mov
add
(bad)
movs
stos
int3
call
mov
rol
fisttp
add
add
ror
(bad)
iret
fisub
cdq
fsubrp
push
out
pop
in
repnz
repnz
cli
repz
(bad)
hlt
or
inc
inc
push
pop
mov
stos
pop
mov
jge
push
add
sbb
xor
pusha
or
mov
sbb
and
arpl
or
and
cmc
adc
rcl
rcl
dec
add
ins
sbb
xchg
daa
push
ds
add
add
ret
sbb
mov
inc
add
sbb
sub
sbb
or
es
jo
ror
add
loopne
(bad)
add
enter
add
add
test
add
out
and
sbb
or
sub
pushf
call
add
push
mov
mov
or
mov
(bad)
adc
adc
cmp
lds
cwde
sahf
ret
(bad)
or
sbb
sub
ja
cmp
call
pop
inc
cmp
mov
add
sbb
mov
add
xchg
loope
rcl
cmp
cs
add
mov
adc
jb
or
xor
test
push
shl
xor
test
dec
xor
xchg
or
adc
es
inc
push
sub
add
pushf
sub
adc
sub
push
inc
rsqrtps
dec
or
xor
inc
and
clc
jo
inc
and
pop
sub
push
call
pop
jb
and
pop
lea
rol
loop
sbb
enter
mov
mov
and
adc
ss
nop
nop
int3
inc
push
pop
ss
stc
enter
rol
and
adc
and
les
xchg
adc
adc
jo
xchg
add
aam
addr16
and
leave
mov
or
ds
add
data16
or
cmp
loopne
adc
push
fdiv
sub
jge
pop
inc
inc
sub
sbb
sub
test
mov
mov
add
ret
xor
mov
lods
or
cmp
or
inc
cmp
adc
and
aaa
pop
clc
cli
cmps
add
dec
loope
pop
dec
outs
pusha
ret
test
sbb
dec
sbb
ret
adc
enter
shr
cwde
or
shl
inc
add
and
div
or
adc
dec
cs
or
fs
inc
or
out
leave
int3
cwde
fs
inc
mov
cdq
inc
mov
xor
test
cmc
fidiv
adc
or
jp
adc
mov
ror
imul
xchg
gs
jge
push
sbb
adc
aas
shr
cmps
and
test
daa
in
mov
xor
out
test
fcom
mov
stos
cmc
and
sbb
shl
inc
or
or
pusha
mov
(bad)
cdq
sub
dec
fst
mov
mov
cmp
jp
and
mov
retf
(bad)
pop
ret
push
xchg
(bad)
sahf
dec
cmp
mov
cmp
cwde
or
rol
cwde
mov
mov
adc
xor
mov
jo
(bad)
lea
or
ret
stc
enter
dec
loopne
mov
or
call
bound
mov
mov
pushf
add
sub
or
arpl
dec
mov
rcl
push
add
stos
pop
sub
aaa
cmp
call
loop
add
imul
push
test
add
xchg
scas
xchg
add
mov
rcl
push
pop
xor
xchg
cmps
ret
jmp
pusha
rol
in
lock
sbb
xor
shr
jo
test
mov
or
hlt
mov
and
inc
dec
push
and
or
mov
adc
cmp
mov
js
or
pop
inc
ins
gs
pop
jp
aaa
inc
loopne
call
add
or
(bad)
adc
inc
sbb
je
dec
nop
xor
xchg
push
aas
sub
cmp
pop
iret
nop
inc
or
popa
mov
int3
mov
movs
push
add
ins
cdq
ins
sbb
cmp
cwde
stos
adc
ret
test
add
inc
xor
inc
add
pop
sub
(bad)
ror
mov
out
inc
cdq
adc
pusha
xchg
shl
out
dec
outs
pusha
mov
cmp
imul
inc
adc
pop
movs
mov
adc
pop
xchg
pop
out
pop
sub
mov
push
retf
into
or
sbb
add
test
dec
lock
push
(bad)
add
mov
xor
ins
jnp
sbb
popf
enter
call
das
inc
adc
dec
add
sub
add
sub
ror
cs
sbb
movs
mov
push
xor
stos
out
(bad)
arpl
int3
test
hlt
add
add
adc
mov
and
pop
popa
fs
sub
pop
nop
mov
inc
(bad)
push
jp
adc
cmp
add
jnp
outs
outs
jae
shl
add
add
(bad)
pop
ins
inc
test
adc
jge
inc
add
or
mov
adc
xor
xchg
ret
and
add
mov
dec
xchg
mov
pusha
add
or
sub
ins
retf
inc
sbb
fadd
pop
or
pop
or
add
inc
inc
ins
mov
or
push
xor
cli
xchg
nop
ds
push
push
and
es
cmp
lods
xor
sub
add
or
adc
add
push
inc
or
data16
sbb
add
jb
mov
ds
mov
or
arpl
mov
aad
or
mov
test
add
test
xchg
or
jmp
or
jmp
into
in
jg
xchg
js
push
inc
push
cmp
pop
sub
adc
test
mov
and
dec
pusha
jo
cmp
gs
jl
(bad)
push
jbe
es
lds
adc
out
(bad)
push
mul
xchg
fimul
lods
mov
js
test
push
or
pop
add
mov
cs
cwde
xchg
les
sbb
dec
scas
call
xchg
aaa
push
inc
into
call
xor
or
jb
push
dec
call
(bad)
(bad)
retf
cld
mov
repnz
xor
shl
and
cdq
ds
adc
mov
jnp
adc
cmc
jecxz
jle
ins
test
jmp
adc
mov
or
mov
scas
outs
dec
(bad)
jmp
and
cmps
pusha
mov
and
push
adc
enter
mov
xchg
aad
or
repnz
cmp
sbb
adc
test
bound
add
mov
add
inc
sbb
mov
gs
lock
sbb
outs
cmps
es
mov
movs
sbb
and
dec
hlt
push
mov
fldcw
imul
aam
jmp
fs
mov
sbb
test
adc
in
nop
cmps
sbb
dec
sar
fwait
adc
lds
jg
iret
scas
push
in
lods
jne
js
mov
inc
dec
in
aam
loope
nop
cmp
in
imul
scas
inc
and
sub
xor
jmp
push
loop
mov
(bad)
mov
dec
stos
add
adc
jmp
sar
repnz
aam
push
inc
or
or
mov
adc
mov
fsub
or
shl
psubd
inc
mov
cdq
jge
ds
inc
je
test
push
and
out
(bad)
lods
push
mov
push
adc
in
aad
mov
pop
outs
call
xchg
sbb
fist
rol
and
out
sbb
xor
xchg
and
mov
std
clc
pop
mov
lds
pusha
mov
mov
repz
inc
adc
les
push
js
add
add
mov
ins
fst
mov
daa
or
add
arpl
or
adc
mov
rol
push
lahf
push
pusha
shl
pop
cmp
inc
inc
dec
mov
fld
inc
adc
push
mov
jo
xchg
push
movs
shl
cmp
pop
test
xor
pop
push
inc
jl
clc
add
xor
mov
movs
mov
sub
add
rcl
test
xchg
push
push
in
je
xor
or
add
adc
jo
jle
or
or
test
aaa
pop
sub
pop
push
cmps
push
xchg
inc
add
pusha
and
push
add
in
inc
nop
add
nop
add
inc
daa
sbb
sbb
ss
add
xchg
xor
add
pop
repnz
aaa
or
pop
mov
and
jb
cmp
add
outs
rcl
add
inc
sub
mov
jg
push
cmp
sar
add
mov
and
jbe
xchg
jno
push
push
sub
xchg
add
movs
inc
les
ret
mov
push
sub
add
xor
std
mov
cdq
lock
add
sub
or
pop
das
in
es
enter
mov
test
lds
fs
mov
in
or
nop
inc
push
xchg
adc
sub
cmc
cmc
outs
test
pop
sahf
xchg
or
push
es
xchg
adc
pop
xchg
nop
nop
xchg
pop
adc
neg
or
jo
(bad)
lock
push
or
ror
sub
repnz
xor
or
ds
push
sti
loop
and
and
in
aas
xor
xchg
push
mov
pop
xlat
cmc
ja
xor
rcl
fsub
xchg
ret
cdq
ins
adc
or
jae
outs
or
mov
xor
sub
sbb
ss
not
ret
adc
push
adc
jmp
pusha
ds
add
aam
sbb
addr16
nop
xchg
add
pop
mov
xchg
sahf
repnz
movs
push
xchg
aad
dec
push
jno
out
jbe
add
daa
les
mov
xchg
into
xchg
push
and
add
xchg
add
jle
adc
stc
or
jl
nop
add
outs
aas
xor
dec
and
cmc
es
lds
or
or
dec
jg
and
js
xor
loopne
adc
nop
dec
ja
aas
pop
inc
xchg
xor
in
adc
add
sbb
ja
xor
and
sbb
or
rol
in
arpl
push
add
add
inc
or
mov
pop
add
xor
test
loopne
dec
adc
pop
xor
rol
rcl
pop
loopne
pop
add
cmp
shr
sub
or
add
jmp
add
pop
(bad)
add
lock
jp
pop
push
add
push
ds
or
in
add
adc
add
je
shl
cmp
add
push
add
adc
and
(bad)
lock
pop
inc
add
push
or
add
and
mov
sbb
add
mov
sub
add
loop
sbb
sbb
add
xor
cmp
add
aam
xchg
lea
add
add
inc
adc
inc
jge
add
add
add
add
sub
and
and
ins
jb
jmp
or
add
dec
ror
adc
ror
sbb
mov
pand
add
adc
nop
adc
lock
jo
cmp
daa
adc
inc
jno
leave
jmp
mov
lods
mov
pop
(bad)
mov
add
xchg
pop
mov
es
adc
inc
adc
adc
in
add
sub
and
mov
icebp
jp
pop
inc
adc
push
add
push
sub
scas
scas
inc
push
test
add
mov
xor
mov
rcl
loopne
movs
shl
add
push
push
fisttp
or
adc
inc
push
retf
shr
fwait
or
sub
add
in
test
adc
xor
inc
mov
test
mov
div
mov
fld
jns
dec
jle
sub
ret
mov
scas
lock
scas
adc
pop
(bad)
pop
mov
pop
mov
inc
or
sbb
push
mov
jmp
mov
jb
mov
sti
or
or
add
add
add
mov
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
das
cmp
mov
add
add
add
add
jae
imul
bound
popa
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loopne
add
add
or
or
add
or
add
add
add
add
hlt
push
mov
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
dec
inc
inc
push
js
in
popf
jns
data16
andnps
or
test
repz
xor
adc
test
sub
mov
popa
xor
sbb
sub
push
xor
call
push
xor
popf
out
movs
xchg
dec
mov
pop
sahf
jle
ja
mov
ds
cmp
jmp
cmc
sar
div
sti
outs
aad
fsubrp
cmps
stos
xchg
push
js
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
mov
(bad)
fldenv
sahf
and
cmp
sub
adc
mov
jp
sub
outs
into
paddsb
jg
inc
adc
inc
push
cmps
xchg
in
and
cwde
out
jnp
ret
add
jns
jb
popf
xchg
repnz
or
or
test
add
push
jge
push
lea
xor
je
push
or
mov
lods
fsubr
jns
adc
mov
or
ds
push
outs
(bad)
xlat
out
movs
and
push
outs
test
(bad)
loopne
cmp
das
dec
dec
adc
inc
pop
pop
xrelease
out
mov
or
hlt
push
mov
or
sub
mov
push
pop
xchg
cmp
in
mov
adc
popf
mov
or
add
pop
pop
imul
or
fldenv
aas
xor
test
rcr
inc
and
retf
push
bound
fdiv
loop
or
(bad)
xchg
inc
iret
fnstenv
inc
inc
aam
arpl
loop
and
in
inc
mov
mov
jmp
sub
movs
sbb
(bad)
add
push
shl
sub
mov
jmp
sub
xor
add
fidivr
pop
cwde
enter
psubsw
test
and
leave
sub
pop
cwde
pop
push
xor
lds
mov
push
xchg
movs
imul
adc
sbb
bound
(bad)
pushf
sub
xor
enter
or
mov
push
mov
mov
imul
push
mov
mov
lea
lds
mov
inc
and
jbe
mov
push
adc
outs
inc
sub
in
adc
push
xchg
push
mov
call
sub
push
mov
inc
jle
shl
pop
mov
imul
inc
xor
xchg
call
cdq
push
pushf
retf
sub
inc
inc
or
cmp
jle
call
mov
and
xchg
test
or
data16
mov
push
xor
pushf
sub
jp
inc
adc
ror
inc
adc
xchg
jo
shl
lods
push
jbe
jb
or
adc
clc
xchg
add
fst
cmp
mov
mov
mov
cld
push
cmp
inc
xchg
sbb
mov
mov
imul
in
shl
stos
addr16
or
and
out
push
lds
add
mov
dec
jecxz
and
jle
leave
xor
xchg
adc
xchg
or
outs
int
jno
in
jae
cmp
sbb
mov
lea
sbb
mov
add
pop
pop
jb
pop
mov
or
shl
sub
(bad)
ins
lds
xchg
fistp
add
lds
inc
(bad)
mov
cmps
les
sub
mov
or
in
leave
push
and
test
inc
stc
push
sti
pop
inc
daa
push
lds
sbb
mov
inc
movs
pop
jmp
add
cmps
hlt
push
jmp
jge
enter
sbb
ror
lea
push
xlat
repnz
or
sub
aaa
inc
aaa
sbb
aas
inc
ins
xchg
scas
jne
xchg
jbe
call
loop
call
and
fistp
arpl
xor
cdq
test
daa
push
inc
adc
inc
shr
adc
aam
adc
xor
add
adc
push
lds
and
add
push
dec
sbb
or
movs
xchg
gs
shl
call
mov
(bad)
cmp
xor
pop
push
adc
lahf
mov
dec
out
leave
dec
repz
jnp
mov
xor
call
add
push
mov
call
mov
call
pop
pop
mov
push
mul
cmp
test
push
push
enter
xchg
sub
jmp
mov
xchg
xor
mov
daa
cwde
dec
call
mov
test
ins
out
xor
lods
xor
mov
xchg
and
and
cmp
push
loopne
popf
cmp
pop
mov
lods
sub
aam
cmps
xchg
ror
ror
out
push
adc
push
pop
mov
inc
pop
gs
mov
retf
mov
sbb
loop
(bad)
js
test
dec
pop
fdiv
imul
inc
inc
cs
pop
or
leave
or
add
retf
scas
push
call
pop
ds
test
into
into
stos
adc
aad
in
or
pop
ret
stos
cwde
fild
or
mov
or
xor
aad
movhlps
or
mov
in
int3
dec
push
dec
pop
jo
and
mov
in
(bad)
xchg
stos
dec
xor
add
jp
fucomi
pushw
call
or
ja
sbb
push
xor
jmp
dec
pop
adc
rcl
add
xor
inc
mov
push
imul
fcom
push
pop
sbb
shl
aas
cwde
adc
popa
jp
(bad)
xor
popf
aaa
movs
lods
sub
movs
ins
push
mov
mov
adc
jg
shl
push
fadd
dec
xor
push
push
and
les
cdq
jmp
sub
mov
adc
test
inc
pop
imul
mov
sbb
je
lods
xor
push
mov
fnstcw
jmp
or
xchg
aas
sub
add
push
xor
mov
mov
arpl
push
cmp
sub
stc
pop
cmp
mov
imul
test
shr
into
cmps
mov
push
mov
clc
jecxz
cmps
or
push
and
xchg
push
cmps
(bad)
adc
inc
add
fisub
retf
jecxz
retf
cmps
(bad)
xchg
cmp
adc
dec
and
dec
data16
pop
sub
pushf
popf
add
mov
test
jne
inc
xchg
pop
mov
cld
imul
sbb
push
mov
push
lods
movs
xchg
cmp
mov
adc
mov
popf
xchg
inc
int3
mov
fdiv
test
push
or
cld
fldenv
adc
adc
adc
ret
retf
sub
cmp
jne
pop
movs
or
call
xchg
in
shl
repz
jmp
xor
jne
lahf
mov
ja
push
pop
(bad)
cld
nop
ret
cmps
xchg
sub
enter
push
retf
sub
push
call
shl
adc
call
mov
and
mov
cdq
out
xor
pop
imul
fldcw
push
cmp
mov
inc
call
in
les
or
outs
xchg
pop
imul
dec
xchg
ds
es
jmp
(bad)
xlat
xchg
xchg
sbb
sub
add
stos
popf
add
or
push
cmps
dec
xor
sbb
or
enter
dec
jmp
bound
or
push
mov
daa
sub
push
push
dec
aam
adc
mov
mov
cmp
in
and
and
xchg
pop
pop
adc
dec
fcom
fimul
loope
add
add
xchg
push
stos
mov
ds
add
jnp
(bad)
adc
cld
gs
arpl
xor
(bad)
sub
je
call
call
sbb
rcr
ror
jp
in
mov
push
sahf
into
pop
jg
sbb
add
jae
xor
dec
cdq
sub
fld
(bad)
xor
loop
jno
sahf
push
lods
gs
pop
pop
push
(bad)
push
mov
push
out
addr16
cli
loop
(bad)
ins
pop
nop
push
cmps
jecxz
jne
retf
jnp
bswap
push
cmp
stc
stos
push
mov
stos
sub
jno
(bad)
push
cdq
popf
xchg
xchg
test
mov
outs
mov
and
cwde
sbb
dec
dec
inc
(bad)
call
dec
xchg
ds
adc
sub
push
inc
mov
out
cld
cmc
imul
sub
lods
xor
out
mov
stos
je
xor
xchg
imul
test
xchg
sub
stc
push
pop
push
stos
sub
movs
dec
and
inc
adc
jmp
ret
call
push
mov
lods
mov
or
mov
push
cdq
or
std
neg
ror
inc
cmps
mov
(bad)
ss
xchg
jmp
xchg
ds
sub
xchg
popf
jg
sbb
mov
add
repz
inc
xor
icebp
scas
push
retf
inc
pop
adc
sub
cdq
sub
aam
cmps
rol
call
mov
xor
pop
jmp
push
cmps
sub
mov
ins
adc
cmps
pop
imul
xlat
xchg
pusha
dec
in
adc
dec
scas
lods
xchg
pusha
xchg
cmp
inc
cmps
mov
ins
pop
in
push
loop
add
sub
pop
call
daa
dec
inc
pop
cmps
xor
hlt
sbb
xor
pop
push
pop
dec
and
les
lea
and
dec
cdq
mov
retf
leave
call
xchg
xor
push
or
pop
push
pop
or
dec
mov
call
imul
cmp
inc
shl
mov
xchg
push
les
ins
jge
pop
fmul
dec
ret
add
and
dec
pop
jmp
sub
xchg
(bad)
in
imul
js
pop
sbb
test
shl
(bad)
sar
push
inc
mov
retf
mov
mov
mov
call
adc
inc
lea
dec
movs
push
retf
jge
xor
stos
call
dec
imul
rol
mov
xchg
js
xor
pop
push
(bad)
push
cmps
or
jno
sbb
push
jg
jg
cmp
add
sbb
mov
aam
movs
cmps
mov
adc
repnz
push
pop
push
or
jmp
pop
xchg
test
bound
add
lods
test
and
and
mov
cmp
das
daa
sub
stos
xchg
cwde
push
dec
adc
rcl
repnz
xchg
jge
xor
jge
in
mov
dec
xchg
fisttp
add
pop
js
test
in
dec
in
retf
leave
call
sub
aas
xor
cli
je
ror
call
jns
cmp
jl
gs
data16
fs
fld
inc
inc
in
cld
lea
sbb
pop
pop
rcr
and
inc
cdq
mov
stos
xchg
push
push
xor
or
daa
(bad)
adc
add
mov
cmps
movs
cdq
add
call
jmp
inc
cmp
das
daa
retf
call
test
dec
cmp
pop
pop
mov
addr16
lods
rcl
loopne
leave
jb
int
xchg
push
std
lock
dec
cmp
retf
mul
fs
dec
mov
movs
sbb
mov
(bad)
ins
(bad)
sahf
mov
push
mov
add
push
ficom
movs
dec
jmp
movs
sbb
adc
jge
retf
xchg
cmps
push
adc
mov
fistp
xor
sahf
mov
aaa
call
in
or
pop
into
(bad)
xchg
lds
rol
pop
fidiv
test
inc
movs
ins
xchg
pop
jl
mov
icebp
push
int
aam
cmps
into
push
imul
dec
add
test
jb
bound
hlt
in
pop
push
and
cwde
cmp
test
or
popa
sbb
adc
push
(bad)
addr16
inc
xor
pop
gs
mov
dec
pop
dec
push
mov
call
sub
int3
in
cld
scas
aaa
lods
push
call
push
cmps
in
and
sbb
jge
gs
pop
mov
push
adc
ret
mov
mov
std
fisub
mov
mov
in
mov
jbe
sbb
mov
(bad)
push
cmc
fld
call
scas
xchg
das
xchg
xchg
aaa
in
int
dec
out
leave
rcl
sahf
jmp
ficomp
imul
pop
out
stos
iret
mov
jp
adc
sbb
push
pop
mov
mov
idiv
mov
mov
repz
cmps
xchg
inc
pop
xor
push
mul
mov
cmps
call
cmps
dec
xor
popa
repz
out
jl
jge
mov
addr16
push
lahf
jl
jge
mov
cdq
cmc
or
mov
hlt
jp
idiv
cmp
or
(bad)
aaa
aas
cld
loop
(bad)
lahf
fdivr
ins
xchg
fisub
clc
jmp
sbb
popf
cmps
xor
out
fdivr
(bad)
(bad)
xchg
fist
jns
jge
pop
into
retf
mov
jmp
mov
test
pop
mov
ds
aam
les
xchg
fdivr
sti
in
fidiv
push
cmp
in
xchg
aad
adc
or
out
cmp
(bad)
into
(bad)
jmp
scas
scas
mov
pop
outs
cmp
jno
push
mov
pushf
pop
scas
(bad)
loopne
cmp
xchg
(bad)
lahf
out
fnstcw
xlat
aam
pop
(bad)
lea
add
into
push
out
out
fcomp
shl
pop
pop
aaa
movs
jno
xchg
int3
mov
lods
sub
popf
not
addr16
out
retf
cmp
xchg
ins
and
lds
inc
fbld
xlat
fwait
into
lods
dec
mov
jecxz
add
xchg
aad
xchg
ficom
xchg
outs
stos
inc
push
xor
clc
cld
rcr
fdivp
pusha
mov
mov
arpl
jbe
es
call
dec
scas
aaa
ins
scas
aaa
out
jo
outs
push
cmp
adc
test
cmp
or
ss
ss
xlat
sbb
imul
cmc
jnp
stc
adc
loop
cdq
(bad)
mov
and
repz
stos
das
fld
sub
jge
in
leave
mov
pop
outs
jmp
pop
stos
das
fcom
cmp
in
sub
pop
pop
mov
pop
push
arpl
jge
fwait
jmp
mov
lods
cmc
inc
aaa
(bad)
cmp
ds
(bad)
lahf
aam
ret
push
lahf
jl
jge
out
outs
fdivrp
sbb
push
inc
pop
mov
mov
test
mov
dec
fsincos
xchg
xchg
xor
rcl
jle
std
xchg
pop
scas
icebp
(bad)
fadd
(bad)
les
jmp
iret
scas
iret
mov
xchg
outs
jp
mov
in
jl
add
jns
mov
js
mov
mov
sub
rcr
cmc
or
mov
cmc
popf
out
sti
cld
(bad)
lods
lahf
cmp
(bad)
cmp
jge
mov
mov
or
fadd
sahf
sub
push
sbb
btr
stc
aaa
cmp
mov
add
pushf
in
out
pop
pop
out
(bad)
neg
dec
push
mov
(bad)
mov
jge
loopne
inc
in
inc
in
ror
jge
out
movs
jle
xchg
fistp
or
xchg
xchg
aad
xor
cmc
in
arpl
xchg
push
lahf
jne
jnp
ret
push
sub
xor
(bad)
mov
sahf
fidiv
out
pop
popf
loope
adc
fdivr
(bad)
jnp
push
das
jb
xor
fucomip
mov
mov
pop
ret
mov
pop
jge
(bad)
jmp
jne
ficomp
(bad)
adc
jns
sti
xchg
cmc
cmc
not
cmps
pop
push
pop
mov
outs
jmp
cmp
test
jl
rcr
sub
jb
or
das
popa
mov
cmps
iret
mov
sbb
repnz
scas
fsub
jmp
lock
fsubr
xlat
ficomp
cli
out
retf
fsin
sbb
outs
xor
(bad)
mov
pop
xchg
scas
mov
mov
out
(bad)
(bad)
ficom
dec
ja
xchg
popa
pop
mov
mov
aad
mov
push
test
pop
mov
mov
push
lahf
cmp
dec
mov
pop
lahf
jg
mov
mov
xlat
into
mov
push
cmp
stc
popf
fistp
je
jnp
or
mov
int
mov
imul
in
in
cdq
sub
enter
enter
mov
call
out
pop
mov
sbb
cwde
int
aad
lods
sbb
outs
jl
xor
push
jnp
sbb
scas
mov
out
sbb
xchg
call
out
mov
mov
mov
lds
xchg
xchg
in
adc
leave
ins
adc
aas
jmp
or
cmp
ret
pop
adc
push
push
or
mov
jmp
out
sub
xchg
fist
ds
mov
loopne
leave
mov
out
shl
xchg
in
mov
ja
stc
movs
cmc
gs
or
jge
movs
(bad)
jbe
retf
(bad)
jns
dec
inc
mov
pop
aam
cld
test
pop
(bad)
aad
pop
and
int
scas
ror
sub
aad
scas
inc
push
icebp
xchg
fmul
mov
pop
push
mov
mov
mov
and
imul
jns
jnp
inc
addr16
inc
fistp
out
(bad)
jecxz
xchg
jmp
dec
inc
jbe
out
(bad)
movs
mov
xor
cmp
sub
scas
dec
push
out
dec
je
out
or
lods
jle
sti
jmp
jbe
pop
repnz
ja
or
sub
jbe
sub
jmp
call
shl
inc
push
icebp
adc
push
sub
xor
jne
jnp
lods
push
fdivr
dec
idiv
sti
fs
in
out
lea
mov
push
adc
cmc
cmp
cmp
scas
into
ins
(bad)
cmc
fs
ins
scas
dec
scas
inc
jg
sub
in
xchg
enter
fs
inc
out
mov
jno
xlat
(bad)
lods
nop
cmc
outs
stos
ret
cmp
rcl
out
(bad)
test
mov
jecxz
in
lods
aas
sub
pop
in
out
inc
mov
sbb
retf
inc
push
jae
stos
test
mov
not
lods
cmp
sub
or
aad
jge
btc
pop
outs
rcl
popf
loopne
sbb
aam
cmc
push
jge
(bad)
jmp
les
dec
hlt
xchg
jbe
sub
xchg
and
mov
gs
sub
cmc
dec
popa
xchg
cli
xchg
out
ja
jge
or
xor
fscale
in
int
pop
push
popf
cmps
in
in
and
xchg
mov
xor
xchg
movs
mov
pop
rcl
mov
icebp
aad
dec
pop
mov
rcl
mov
and
inc
ja
dec
outs
pop
cs
xor
movs
mov
sti
or
pop
jns
mov
push
loop
mov
adc
fldcw
js
inc
jmp
mov
adc
pop
in
xchg
dec
mov
das
mov
imul
adc
aad
icebp
sub
ja
jnp
mov
sub
gs
jae
push
pop
push
pop
js
jge
sub
mov
loop
(bad)
add
ss
push
fild
xlat
lahf
push
scas
(bad)
in
in
mov
(bad)
js
sub
fist
cmc
aas
cli
je
sub
xlat
xor
push
ja
sub
ret
repnz
popf
lods
out
sti
(bad)
out
dec
pushf
xchg
into
jbe
retf
clc
loop
jne
sub
sti
int3
mov
iret
das
pop
mov
jae
push
xchg
scas
xchg
mov
pop
outs
test
push
ret
idiv
out
scas
fdivr
ret
pop
pop
mov
fldenv
loopne
in
das
adc
out
jb
jbe
pop
std
nop
outs
cs
and
xchg
sub
stos
xchg
(bad)
stc
enter
sbb
das
mov
mov
or
(bad)
in
icebp
out
xchg
in
cmc
pushf
sbb
pop
mov
pushf
cmp
test
sahf
push
pop
add
pop
jno
aaa
fadd
aam
mov
sbb
ret
imul
jmp
jg
gs
pop
pop
push
(bad)
jae
push
lahf
push
xchg
jl
inc
pop
test
jle
mov
jp
mov
gs
cmp
adc
aam
push
sbb
pop
mov
les
add
xor
popf
fmulp
repnz
retf
fcomp
mov
pop
fst
mov
clc
or
pop
push
retf
xchg
daa
pop
pop
int
cmp
mov
push
das
test
adc
(bad)
mov
fcom
int
xor
jno
jg
xchg
xchg
out
retf
xlat
aas
mov
and
outs
idiv
dec
(bad)
cli
rcl
xor
mov
pop
jmp
outs
push
pop
loop
xchg
adc
lods
popf
fucomip
fiadd
lods
cmp
fwait
retf
xlat
popa
and
stos
jnp
hlt
das
jns
sar
pop
mov
inc
xchg
jmp
jl
iret
add
adc
ins
jo
and
ins
(bad)
inc
jne
std
out
mov
push
xlat
xchg
lods
xchg
das
or
leave
into
sub
xchg
popf
lods
dec
out
pop
sbb
std
cmp
xchg
mov
jecxz
retf
call
dec
push
mov
cmp
and
outs
clc
popf
adc
les
(bad)
jle
dec
jg
xchg
dec
xchg
clc
add
sub
cmp
xchg
or
fidiv
pop
fwait
and
rcr
leave
aam
sub
inc
fs
push
dec
xchg
clc
push
dec
stc
push
jl
mov
ins
mov
pop
cmp
mov
pop
pop
mov
fdivrp
std
and
shl
dec
jl
out
push
xchg
clc
push
lods
jo
hlt
out
mov
jne
cli
fwait
sub
fnsave
(bad)
xchg
and
xchg
sub
cmps
push
jl
leave
push
push
sub
push
arpl
js
mov
sub
test
stos
fld
aam
pop
sbb
ins
sub
stos
cld
imul
aam
dec
clc
jb
mov
mov
cwde
mov
stos
das
imul
repz
dec
sbb
xchg
jmp
push
xor
pop
mov
stc
mov
dec
push
jnp
bound
pop
inc
sti
and
lahf
dec
retf
repnz
xchg
ja
mov
stos
fstp
sub
das
sub
sbb
jge
retf
dec
dec
push
lea
mov
retf
xchg
and
lods
mov
xchg
lahf
aam
mov
push
repnz
cmc
aad
xor
and
adc
icebp
inc
gs
mov
jmp
dec
(bad)
cmp
pop
pop
ins
stos
mov
aaa
mov
cmc
movlhps
jne
pop
pop
mov
inc
pop
inc
imul
dec
inc
dec
mov
ins
fs
les
popa
mov
dec
retf
mov
ss
jp
pop
je
(bad)
outs
test
imul
call
xchg
ins
adc
rcr
stc
cmps
mov
fist
xchg
fdivr
stos
scas
imul
push
imul
(bad)
stos
or
sub
adc
inc
(bad)
mov
pop
xor
aad
mov
rcl
mov
and
push
imul
retf
sub
sub
push
jl
xchg
jne
mov
mov
div
fs
mov
xacquire
xchg
xchg
xchg
mov
mov
out
icebp
mov
mov
(bad)
mov
push
(bad)
retf
pop
pop
scas
cmp
xchg
xor
push
mov
enter
xchg
icebp
in
ss
fmul
add
cmps
mov
lods
icebp
mov
hlt
mov
dec
outs
stos
imul
cmp
out
mov
or
test
sub
jp
jmp
popf
lods
mov
leave
mov
(bad)
push
hlt
in
and
popf
sub
dec
fs
fs
aaa
adc
inc
xchg
or
inc
rcr
dec
sar
test
enter
xchg
jne
and
outs
in
stc
mov
mov
gs
push
dec
push
mov
jae
scas
cli
call
pop
pop
pop
or
add
xchg
push
sti
lds
push
jge
pop
xchg
mov
xchg
das
rol
lods
fsub
sub
js
sti
idiv
adc
int
(bad)
xchg
scas
mov
mov
inc
fldenv
imul
call
loope
sahf
lods
mov
mov
sub
cmp
aas
sbb
js
dec
clc
stos
scas
mov
retf
pop
xlat
xchg
lahf
dec
dec
sub
jbe
stos
or
shl
xchg
and
into
call
sbb
dec
cmp
test
in
adc
and
mov
movs
mov
fbstp
mov
jecxz
pop
mov
stos
mov
test
lds
mov
pop
test
add
das
loope
mov
cmp
movs
sub
stos
cmps
cli
fld
addr16
push
and
outs
stos
out
inc
adc
xor
leave
aam
mov
jl
mov
cmc
ret
pop
pop
mov
jnp
jbe
sbb
sbb
sahf
clc
fcom
int
xchg
scas
jge
ja
adc
mov
mov
mov
pop
jle
push
push
fcom
inc
and
stos
outs
jg
fidiv
sti
push
xchg
fdivr
inc
int3
mov
mov
sbb
enter
imul
ficomp
add
js
mov
mov
xchg
push
je
push
fld
sub
int
enter
dec
(bad)
out
push
outs
mov
test
ins
push
jl
xor
mov
cmp
sti
dec
iret
pop
jns
push
sub
push
mov
xor
(bad)
icebp
(bad)
xlat
outs
jg
fdivrp
scas
cli
cmps
ja
cmp
lods
scas
jg
std
mov
or
mov
rcl
enter
(bad)
push
jo
sti
scas
inc
jmp
enter
ds
push
mov
sahf
sub
in
jmp
inc
fwait
and
add
imul
add
dec
or
jnp
in
fldcw
adc
je
pop
ficom
inc
adc
shr
add
push
add
add
lock
pop
mov
pop
stos
sub
add
and
and
dec
pusha
push
cmps
adc
pusha
daa
sub
mul
pop
sub
scas
or
cld
and
push
push
sbb
jno
mov
fwait
imul
add
(bad)
push
dec
mov
push
adc
in
xchg
fisttp
cmc
jle
xchg
sbb
jl
cs
xor
stos
inc
pop
push
push
push
pop
inc
cmp
sub
and
call
jl
scas
ins
rcr
jb
cmp
imul
mov
xchg
sti
stc
pop
test
adc
jmp
push
fistp
cmp
fimul
int3
rcl
inc
aaa
xlat
fs
and
scas
jne
cmps
cmp
dec
shl
mov
mov
int
mov
lods
dec
add
push
dec
and
lods
int3
pcmpeqw
sub
xor
push
add
xor
jge
cwde
fist
and
pop
jae
xchg
push
xchg
mov
dec
retf
call
leave
(bad)
or
clc
xchg
fstp
pop
push
sub
cmp
xchg
jae
ins
inc
adc
pushf
cs
xor
sub
sub
ret
loopne
test
push
stos
ins
enter
pusha
daa
das
xchg
jmp
xchg
xchg
gs
mov
sar
call
mov
fist
push
div
loopne
pop
repz
add
sbb
inc
push
adc
call
cmps
pop
pop
dec
xchg
xchg
xchg
inc
xchg
mov
scas
adc
imul
sbb
add
mov
int
inc
cdq
sti
das
dec
add
sub
imul
rcl
dec
mov
daa
call
add
(bad)
aaa
in
int
add
outs
je
and
push
push
push
test
call
cmps
fs
movs
dec
test
in
stos
int
pop
pusha
gs
imul
and
pusha
dec
push
fdiv
push
inc
shl
cmps
mov
call
jne
mov
out
test
or
or
lods
das
into
xchg
xchg
inc
les
fistp
pop
push
sbb
dec
xchg
(bad)
out
test
push
cmps
inc
pop
pop
add
or
in
dec
in
nop
(bad)
sbb
inc
dec
in
push
jecxz
call
sub
imul
sub
sub
add
mov
mov
mov
jo
adc
std
in
xchg
sbb
sub
add
add
dec
inc
push
cmp
push
shl
cmps
call
push
jp
sbb
shl
gs
js
xchg
ins
test
xchg
stc
movs
fcmovnbe
xchg
pop
xchg
cmp
rcr
test
add
fisttp
add
scas
fist
fsubr
mov
pop
sub
shr
or
pop
ret
fadd
push
jb
pop
push
mov
enter
mov
add
xor
dec
mov
add
ins
and
push
mov
bound
pop
test
mov
jae
lods
adc
and
and
sbb
stos
ds
popa
lahf
cmp
xor
fcom
rcr
and
int
xor
and
xchg
movs
cmps
sbb
xlat
add
or
cmc
pop
nop
in
jmp
pop
mov
add
bound
push
sbb
out
in
push
push
xchg
push
dec
push
call
sub
pop
adc
call
xor
push
inc
mov
daa
jmp
fisttp
or
je
or
cmp
add
mov
jge
mov
push
mov
adc
ss
add
or
adc
test
(bad)
in
nop
xlat
xchg
sti
add
inc
add
sbb
out
add
mov
sbb
or
call
daa
dec
cwde
dec
pop
push
add
or
sub
cmp
lods
adc
jnp
xchg
xor
rcr
test
lds
xor
mov
push
stos
lods
rcr
or
mov
sar
jb
ins
cmp
mov
(bad)
call
xchg
in
add
call
(bad)
rcl
inc
adc
mov
cmp
mov
cmovb
adc
(bad)
adc
push
jg
fs
jae
xor
add
gs
lods
mov
repnz
movs
das
or
add
dec
xor
pop
pop
arpl
mov
inc
adc
mov
and
add
inc
rol
pop
xchg
mov
mov
adc
adc
add
inc
xor
push
push
call
add
cmp
mov
sub
enter
inc
xor
xlat
aam
add
mov
(bad)
sbb
adc
inc
pop
adc
es
pop
xchg
inc
push
sub
adc
lods
movs
les
xor
and
or
mov
cmps
mov
sub
(bad)
push
adc
sbb
jge
mov
and
inc
retf
jmp
inc
or
jae
cld
jbe
aad
push
sub
lea
inc
add
add
dec
and
sub
sub
loope
xchg
pop
stos
das
mov
push
sub
fadd
cmp
out
sub
fdiv
push
dec
and
and
sbb
pop
or
inc
scas
sub
jns
pop
pop
add
sbb
xor
adc
inc
sub
fild
xchg
add
jne
test
mov
dec
mov
mov
test
mov
std
mov
jp
push
gs
pop
dec
add
inc
dec
or
enter
dec
inc
cld
inc
xchg
xchg
and
mov
push
nop
and
jmp
movs
or
mov
gs
mov
push
xchg
push
push
rcl
rcl
enter
lds
jne
(bad)
mov
hlt
cmp
test
fsub
ins
pop
push
add
jbe
sbb
daa
jmp
dec
push
jecxz
call
sbb
shl
jecxz
xor
mov
outs
sub
pusha
cmps
rcl
sbb
push
aad
push
cmp
xor
sbb
and
dec
cmp
sbb
jno
dec
sbb
test
sub
and
add
add
test
and
js
inc
enter
and
leave
adc
push
push
add
adc
inc
add
add
pusha
sbb
call
pop
pusha
and
inc
add
call
push
call
popf
dec
(bad)
dec
imul
test
pop
add
in
mov
push
xchg
adc
add
inc
inc
imul
pop
push
mov
pop
call
xor
pop
mov
add
and
stos
dec
push
jo
ret
cmp
in
or
imul
or
sub
adc
and
shl
dec
mov
imul
les
or
rcl
xor
push
test
mov
cmp
jbe
imul
mov
jge
sar
lods
add
stos
shl
sbb
fmul
dec
dec
call
scas
or
imul
pop
test
and
mov
or
xor
lea
aad
push
pop
aaa
or
sub
inc
adc
xchg
ins
imul
cdq
push
pop
daa
dec
add
and
repnz
cmp
sbb
stos
lods
mov
xor
loopne
mov
inc
aas
mov
jns
ret
sbb
cmp
dec
data16
dec
jmp
or
add
cdq
inc
inc
retf
imul
xchg
xor
(bad)
imul
adc
shl
add
enter
retf
xchg
push
std
data16
xchg
loopne
or
xor
inc
cmps
movs
mov
mov
mov
xchg
push
push
repnz
push
loop
call
inc
mov
jge
sub
cmp
sbb
inc
fwait
push
cwde
and
out
or
adc
ins
leave
add
fistp
mov
and
lods
mov
mov
jecxz
sahf
mov
mov
add
out
mov
mov
push
pop
jno
ja
sbb
or
or
rcl
mov
or
xchg
aad
out
(bad)
add
cmps
sbb
aaa
sbb
cmp
popf
out
imul
out
and
pop
aas
aad
das
cmp
fadd
add
adc
movs
inc
sub
enter
add
imul
(bad)
ins
xor
lea
int3
sbb
add
mov
mov
pop
dec
push
pop
(bad)
sbb
xor
push
xchg
mov
push
data16
jns
and
scas
out
mov
shl
mov
xchg
cmp
jmp
push
mov
es
rcl
mov
imul
pop
push
dec
cmp
cmp
mov
ds
pop
add
(bad)
pop
pop
pop
ficomp
aad
jmp
mov
les
fs
call
pop
or
adc
add
dec
adc
fcomp
dec
xchg
and
sti
sub
(bad)
add
fiadd
fcom
push
mov
popa
adc
pushf
xchg
xor
cmp
bound
push
sbb
pusha
fist
inc
daa
imul
inc
inc
stc
add
sub
inc
cmp
neg
sar
inc
inc
setne
test
lds
test
sbb
sbb
jno
mov
sar
pop
jmp
adc
mov
sub
mov
xlat
and
mov
ds
add
adc
pop
sub
and
add
add
jmp
adc
and
adc
xor
add
std
or
sub
add
and
add
push
adc
scas
sahf
es
cmps
xchg
xchg
mov
cmp
add
push
dec
cmp
sub
cwde
cmps
adc
add
jns
shr
jmp
jge
dec
add
xchg
mov
push
push
sbb
js
mov
rcr
mov
jge
mov
xchg
pusha
cmp
fiadd
retf
inc
xchg
int3
sbb
add
inc
jo
mov
xchg
test
add
xchg
rcl
or
scas
shl
push
add
dec
add
add
call
jae
call
stos
dec
lods
cmp
inc
retf
inc
aad
pop
das
(bad)
test
out
add
popa
mov
or
adc
sub
inc
push
cmc
loope
mov
xchg
ror
pusha
push
sbb
mov
ret
adc
bound
cvtps2pi
lods
xor
push
cmp
call
test
inc
jecxz
sbb
je
mov
jne
es
pop
jno
and
cdq
xor
mov
dec
xchg
sub
mov
push
aas
mov
xor
cmp
shl
jae
jbe
(bad)
cwde
inc
add
imul
pop
aam
movs
xor
push
pop
dec
cmp
test
or
mov
push
push
jge
shl
mov
cdq
cmp
dec
mov
and
(bad)
cmp
xor
push
cmc
sar
fidiv
inc
lds
mov
push
inc
and
push
outs
test
or
add
jno
in
mov
test
jb
inc
jmp
push
aas
mov
ds
xlat
sub
sub
and
inc
add
push
inc
inc
ror
enter
inc
(bad)
inc
dec
pushf
mov
sbb
pop
cmps
(bad)
inc
mov
sar
or
test
imul
inc
sub
rol
jns
fdivr
push
das
sub
push
out
scas
mov
pop
sub
push
push
and
xchg
jle
mov
mov
push
xchg
push
add
aas
add
fs
aad
jno
out
sub
fidiv
push
or
push
and
or
jb
push
cmc
ror
jmp
push
xor
jnp
popa
sub
inc
add
sbb
call
repz
push
sub
sahf
jns
pop
push
add
adc
push
jp
inc
pmaddwd
lods
add
dec
push
vpmovb2m
sbb
inc
add
adc
jl
push
sbb
pop
sub
test
movs
ror
sbb
lock
push
or
cmp
add
or
cs
jns
fcom
xor
and
(bad)
in
movs
movs
jno
loope
je
xchg
xchg
sub
(bad)
loope
rol
jmp
inc
pop
sti
shl
inc
gs
sahf
mov
inc
call
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
add
and
scas
inc
xor
jp
dec
push
std
jg
mov
(bad)
jno
out
add
add
dec
inc
scas
inc
pusha
or
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
adc
add
jle
add
add
add
push
je
imul
add
daa
add
enter
and
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
popf
mov
add
cli
and
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
pushf
add
add
add
add
xor
and
push
add
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
or
or
add
adc
push
add
pop
push
add
sub
or
or
add
add
or
or
add
or
or
add
or
or
or
add
mov
push
add
cmp
or
xchg
or
pushf
add
add
add
add
or
or
add
or
or
add
or
or
add
or
or
add
or
or
add
add
mov
push
add
or
or
or
add
or
or
add
mov
or
jae
pushf
add
add
add
add
or
pushf
add
add
or
or
add
or
push
add
push
add
add
push
or
add
add
ror
add
mov
push
add
mov
push
add
mov
push
add
add
add
or
add
add
xor
aas
or
inc
or
push
add
add
add
or
stc
or
sbb
and
adc
and
and
adc
sub
and
adc
push
push
and
adc
fs
and
adc
or
push
or
mov
pushf
add
add
add
add
or
daa
setl
or
pop
setl
push
add
add
add
setl
push
add
jle
adc
or
das
adc
add
or
jmp
adc
mov
push
add
adc
pushf
add
add
pushf
add
add
add
add
adc
pushf
add
add
adc
mov
or
mov
pushf
add
add
add
adc
adc
add
adc
push
add
aas
adc
add
mov
push
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
adc
bound
ins
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
and
add
and
sub
add
jbe
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
push
ins
add
add
ins
add
add
jo
add
test
inc
add
add
fwait
add
add
mov
add
add
add
add
add
add
xor
or
push
cmp
or
push
cmp
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
enter
add
rol
push
add
add
in
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
dec
add
add
push
add
add
push
mov
add
rol
push
adc
rol
push
and
rol
push
cmp
rol
push
or
and
aaa
add
dec
add
popa
add
jbe
rol
push
or
add
out
adc
adc
push
push
inc
add
add
sbb
push
add
add
add
add
stc
add
add
cld
add
add
sub
push
and
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
xchg
push
add
add
lods
and
add
add
add
cmp
add
add
add
add
add
add
aaa
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
or
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
mov
add
adc
add
add
add
xchg
push
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xchg
push
add
add
add
xor
xchg
sbb
sub
pop
add
cmp
add
add
add
add
add
add
add
add
add
add
and
jo
add
add
xchg
aaa
add
add
add
cmp
add
add
add
add
cmp
add
add
add
lock
add
add
add
aaa
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
dec
add
add
xchg
sbb
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
dec
add
add
xchg
push
add
add
add
dec
add
add
sbb
add
add
add
dec
add
add
xchg
or
add
dec
dec
add
add
xchg
or
push
sbb
add
add
add
xchg
or
push
push
add
add
add
add
xchg
or
push
sub
dec
add
add
xchg
or
add
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
dec
add
add
xchg
push
add
add
sbb
add
add
add
and
add
add
xchg
jle
std
add
add
add
js
add
add
jg
add
add
xchg
add
add
and
add
add
mov
add
add
xchg
push
add
add
xchg
push
add
add
fwait
push
add
add
mov
add
add
xchg
push
add
add
cmp
add
add
aas
or
add
add
or
add
add
or
add
add
add
mov
add
add
movs
push
add
add
mov
add
push
add
add
mov
add
add
xchg
push
add
add
mov
add
add
xchg
push
add
add
mov
add
add
xchg
push
add
add
mov
add
add
xchg
push
add
add
fwait
push
add
add
lds
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
fild
add
add
out
add
add
out
push
add
add
add
add
pop
add
add
or
add
add
adc
add
add
add
sbb
add
add
daa
pop
add
add
cmp
add
add
aas
or
add
add
or
add
add
or
add
add
add
leave
add
add
rol
push
add
fld
push
add
loope
push
add
jmp
add
add
add
stc
add
add
add
add
add
or
push
add
adc
push
add
sbb
push
add
add
add
xor
push
add
add
add
or
inc
add
add
pop
or
dec
add
cdq
add
push
add
push
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
and
adc
push
add
add
add
or
icebp
add
add
jmp
add
add
or
add
add
add
add
add
add
add
sbb
jmp
add
or
or
add
add
add
push
add
add
push
add
inc
add
or
add
push
add
inc
add
or
add
add
adc
sbb
sub
dec
add
add
add
add
push
or
push
add
dec
add
add
add
push
add
add
add
add
lods
or
mov
mov
mov
lds
iret
or
push
add
or
lock
push
add
or
pop
push
pop
add
add
add
add
push
mov
mov
inc
push
test
mov
add
pop
push
mov
push
lds
leave
add
add
add
add
add
push
fld
jmp
add
add
push
sahf
add
add
push
sub
jmp
add
add
(bad)
add
add
paddsw
adc
dec
movntps
adc
push
hlt
add
add
add
add
add
adc
xchg
psubq
jmp
add
ret
add
add
add
add
add
unpcklps
jmp
add
jmp
add
add
cvtps2pi
dec
add
adc
imul
jno
push
add
add
push
add
add
add
add
add
add
add
adc
add
add
sti
add
leave
or
jno
pusha
adc
jns
adc
lea
inc
add
xchg
adc
add
test
sub
jns
mov
sub
jns
(bad)
adc
add
out
adc
jmp
add
add
add
adc
add
add
mov
adc
xchg
add
push
pop
add
add
add
add
add
and
jmp
add
movs
adc
adc
adc
adc
adc
adc
adc
add
add
jmp
mov
inc
add
adc
adc
cdq
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
mov
adc
add
bound
xlat
add
push
add
jmp
add
bound
xlat
add
xchg
adc
add
lods
adc
in
add
jmp
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
adc
adc
add
add
add
adc
add
add
add
add
mov
add
add
add
add
add
add
push
add
mov
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
mov
or
loopne
aad
or
in
fiadd
or
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
pop
add
add
add
jnp
jne
add
add
push
add
push
add
push
add
add
add
add
push
add
push
add
sub
add
push
add
arpl
ins
add
cwde
add
add
add
add
sti
add
add
sti
add
add
mov
add
add
add
fwait
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
push
add
pop
add
add
add
add
add
add
add
add
js
jl
mov
mov
add
add
add
add
add
add
test
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
adc
adc
add
pop
add
add
add
ins
add
add
add
jp
add
add
popa
add
add
cwde
add
add
add
test
and
add
add
add
add
sbb
add
add
add
add
test
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
and
add
add
stc
adc
add
add
add
add
add
add
sub
push
add
add
add
adc
add
or
or
push
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
inc
cs
add
jns
je
inc
push
dec
inc
add
jns
je
imul
arpl
outs
add
outs
jae
je
dec
push
inc
inc
inc
add
imul
jb
ins
add
outs
inc
push
dec
add
dec
push
dec
push
pop
inc
inc
inc
inc
push
push
add
jae
jne
arpl
add
inc
cs
jb
jo
jb
imul
je
outs
addr16
ins
jae
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
ins
je
arpl
je
gs
gs
je
add
jne
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
inc
dec
inc
add
gs
jb
dec
gs
inc
jb
jo
inc
imul
jb
imul
arpl
jo
add
outs
je
jb
jae
inc
jb
jo
push
imul
outs
popa
add
jae
popa
add
fs
jb
arpl
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
push
jb
addr16
jae
inc
popa
jb
jo
outs
addr16
jae
add
gs
add
gs
add
jbe
imul
inc
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
add
fs
outs
jbe
imul
imul
outs
jae
ins
popa
imul
outs
fs
inc
ins
imul
inc
ins
outs
jae
pop
inc
ins
imul
je
outs
js
pop
push
gs
inc
push
add
outs
jae
je
dec
outs
popa
add
je
outs
outs
add
outs
inc
ins
outs
jae
add
gs
xor
inc
outs
ins
jne
outs
dec
gs
fs
arpl
xor
arpl
xor
dec
imul
add
jae
outs
jb
add
gs
xor
ins
popa
bound
xor
push
gs
inc
outs
js
je
je
fs
jae
add
ins
gs
arpl
inc
outs
ja
add
outs
jne
je
bound
outs
add
arpl
gs
outs
js
jo
arpl
gs
outs
js
add
arpl
gs
outs
js
add
arpl
gs
outs
js
add
pop
inc
dec
add
pop
inc
add
push
dec
add
jne
je
jb
ins
add
ins
add
bound
arpl
dec
jae
popa
arpl
dec
outs
imul
imul
dec
popa
imul
add
fs
je
inc
imul
outs
jae
fs
bound
gs
jae
je
inc
ins
imul
dec
gs
pop
inc
ins
imul
jb
outs
arpl
inc
ins
imul
je
outs
js
pop
push
gs
inc
push
add
gs
push
imul
arpl
jo
arpl
gs
outs
js
xor
ins
imul
je
outs
xor
ins
imul
gs
xor
bound
gs
jae
je
bound
gs
add
gs
outs
arpl
ins
popa
bound
xor
inc
imul
outs
jae
jo
arpl
gs
outs
js
add
gs
push
imul
je
jb
inc
outs
js
add
arpl
gs
outs
js
add
arpl
gs
outs
js
add
arpl
gs
outs
js
add
ins
fs
push
dec
pop
push
pop
push
inc
dec
dec
dec
inc
dec
inc
add
pop
dec
dec
push
inc
add
gs
je
inc
gs
je
jo
push
ja
je
push
je
jo
inc
ins
outs
jae
inc
gs
je
jo
push
gs
push
inc
gs
je
jo
inc
gs
push
inc
gs
je
jo
inc
gs
jne
jb
outs
je
push
dec
add
ins
jne
pop
pop
add
dec
push
dec
push
pop
dec
dec
dec
inc
add
dec
push
dec
push
pop
push
inc
inc
inc
dec
inc
dec
inc
inc
push
push
add
dec
push
dec
push
pop
inc
push
inc
inc
push
inc
push
dec
dec
inc
dec
push
add
dec
push
dec
push
pop
inc
push
inc
inc
push
inc
dec
inc
dec
push
add
dec
push
dec
push
pop
dec
dec
dec
dec
inc
dec
dec
push
push
dec
dec
add
dec
push
dec
push
pop
dec
dec
push
push
dec
inc
dec
push
inc
inc
dec
push
inc
add
dec
push
dec
push
pop
dec
dec
push
push
dec
inc
dec
push
dec
inc
pop
inc
inc
inc
dec
add
dec
push
dec
push
pop
inc
dec
push
dec
inc
push
inc
push
inc
add
dec
push
dec
push
pop
push
push
dec
push
inc
dec
inc
dec
inc
inc
push
push
add
dec
push
dec
push
pop
push
push
dec
push
inc
dec
inc
inc
push
dec
push
dec
push
add
dec
inc
push
dec
inc
pop
inc
dec
dec
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
addr16
jae
fs
add
ins
je
jb
add
fs
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
arpl
jb
add
bound
jns
ins
outs
arpl
jae
outs
fs
add
jae
popa
add
jae
outs
jae
outs
add
push
arpl
gs
outs
add
ins
ins
bound
imul
gs
ins
je
ins
add
gs
popa
add
jae
inc
gs
je
jo
ins
jo
jp
gs
arpl
jo
gs
outs
fs
ins
popa
addr16
fs
gs
jb
fs
arpl
jae
add
popa
add
gs
je
jo
push
add
push
dec
add
ins
jne
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jbe
jb
outs
ins
outs
je
addr16
dec
popa
arpl
outs
gs
popa
ins
add
jae
gs
cs
gs
add
arpl
imul
pop
push
push
inc
cmp
inc
gs
jns
gs
push
je
imul
pop
dec
outs
addr16
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
imul
jae
addr16
outs
js
inc
imul
jae
ins
je
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
outs
ja
push
jns
je
ins
cs
gs
push
bound
arpl
je
outs
outs
add
jae
gs
cs
dec
add
ins
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
dec
jo
outs
add
je
xor
inc
jns
add
jb
popa
ins
add
popa
add
imul
imul
add
imul
add
popa
jne
push
gs
arpl
jae
inc
js
gs
imul
jae
inc
jbe
outs
je
jb
jae
cmp
arpl
bound
xor
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jne
gs
jne
je
outs
jae
addr16
inc
jne
je
outs
add
outs
je
outs
ins
add
je
push
gs
add
jne
gs
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
jne
gs
outs
ja
add
arpl
jns
inc
gs
imul
pop
dec
popa
js
ins
jne
add
outs
jb
inc
jbe
outs
je
jb
jae
cmp
jb
jo
push
imul
outs
popa
fs
xor
jo
jb
ins
xor
jo
jb
ins
xor
push
jne
push
outs
jb
gs
outs
ins
jo
gs
fs
jbe
outs
je
jb
jae
cmp
jb
jo
push
imul
outs
popa
fs
xor
cmp
jb
jo
push
imul
outs
popa
fs
xor
addr16
push
popa
ins
jne
add
je
push
popa
ins
jne
add
je
add
je
imul
outs
jo
inc
jno
popa
ins
imul
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
cmp
inc
xor
sub
sub
sub
inc
xor
inc
xor
popa
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
ins
gs
outs
xor
xor
xor
xor
sub
outs
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
inc
gs
gs
je
add
outs
arpl
add
imul
gs
je
add
gs
add
arpl
jb
jne
fs
outs
jb
gs
inc
outs
push
outs
jb
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
outs
push
outs
jb
add
outs
push
outs
jb
gs
outs
ins
jo
gs
fs
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
jne
push
outs
jb
gs
outs
ins
jo
gs
add
outs
push
outs
jb
gs
jae
outs
arpl
addr16
dec
jae
add
je
push
push
popa
jb
ins
add
je
je
add
outs
je
xor
dec
inc
imul
ins
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jne
jo
outs
fs
popa
jns
jne
add
arpl
jb
je
ins
gs
jae
je
inc
outs
arpl
jb
inc
outs
ins
outs
jb
addr16
push
push
jae
je
inc
popa
arpl
outs
ins
outs
jb
addr16
inc
jb
outs
add
je
inc
outs
jb
inc
outs
ins
outs
jb
push
outs
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
addr16
push
gs
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
addr16
dec
imul
dec
bound
arpl
ins
popa
add
je
dec
ins
popa
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
gs
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
ins
imul
add
je
inc
outs
outs
je
outs
ins
inc
outs
js
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
fs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
push
push
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
outs
jo
outs
jae
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
je
imul
inc
outs
ins
ins
arpl
outs
add
je
dec
je
ins
jae
dec
imul
dec
je
ins
add
jae
jb
add
je
push
gs
add
pop
dec
outs
gs
popa
ins
imul
ins
popa
ins
add
pop
inc
js
ins
imul
jb
popa
je
dec
push
jne
jo
jb
dec
outs
imul
add
imul
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
popa
fs
inc
ins
imul
pop
push
imul
jne
outs
dec
gs
fs
outs
ins
ins
arpl
outs
add
je
inc
outs
ins
jne
outs
jae
inc
fs
popa
outs
add
je
inc
jne
ins
push
outs
ja
gs
arpl
gs
inc
jb
fs
imul
je
dec
jne
je
push
gs
arpl
gs
push
jae
inc
outs
ins
jo
je
bound
je
je
dec
ins
popa
addr16
gs
jb
push
imul
pop
push
imul
pop
inc
jne
outs
push
imul
pop
dec
imul
push
imul
outs
js
imul
add
je
push
imul
add
je
push
popa
bound
outs
jo
inc
jb
ins
inc
jb
bound
addr16
inc
ins
popa
arpl
inc
outs
fs
outs
imul
jb
dec
popa
jns
jne
add
arpl
inc
imul
ins
popa
jae
xor
push
imul
add
arpl
add
add
xor
pop
je
imul
outs
jb
bound
xor
push
jne
je
popa
arpl
gs
push
outs
je
ins
dec
outs
jne
jae
dec
popa
je
add
outs
outs
jb
addr16
dec
imul
addr16
push
arpl
fs
jae
je
inc
outs
popa
bound
add
outs
ins
push
arpl
fs
inc
jb
ins
dec
outs
jne
jae
jae
je
dec
outs
je
jb
popa
ins
add
fs
push
imul
jb
add
je
push
popa
jb
outs
je
inc
outs
arpl
add
outs
jo
push
push
popa
ins
outs
add
popa
je
je
ins
add
je
inc
ins
popa
je
je
ins
add
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
fs
pop
push
popa
fs
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
push
jns
je
ins
inc
outs
ins
outs
jb
add
je
inc
arpl
gs
popa
jo
imul
add
je
push
popa
ins
imul
je
inc
jne
outs
push
popa
ins
imul
jb
outs
jb
add
jb
outs
jb
addr16
dec
outs
add
je
inc
jne
jae
jb
jae
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
push
push
push
popa
jae
bound
add
inc
push
push
inc
je
jb
bound
add
arpl
inc
imul
ins
popa
jae
xor
push
gs
je
jo
inc
push
and
cmp
ins
outs
arpl
jae
add
jb
outs
outs
add
bound
xor
inc
jo
ins
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
jb
add
jae
gs
cs
push
imul
gs
add
gs
arpl
outs
jb
inc
ins
ins
dec
ins
jo
jb
inc
je
jb
bound
add
gs
xor
fs
ins
add
jb
gs
xor
cs
ins
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
je
imul
add
outs
arpl
outs
outs
imul
dec
inc
cs
jb
jo
push
imul
gs
jne
arpl
add
inc
cs
gs
jae
je
jb
jae
jne
arpl
add
inc
cs
popa
imul
jne
arpl
add
inc
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
add
dec
add
jns
and
jae
add
jbe
add
and
jne
outs
add
jbe
popa
add
ins
add
bound
ins
add
add
or
jb
jb
outs
add
add
outs
add
add
add
jb
jns
jo
je
add
aas
add
or
outs
add
outs
add
daa
inc
add
arpl
jb
jns
jo
je
imul
and
data16
ins
add
jae
add
add
add
packsswb
jb
jns
jo
je
add
adc
jb
outs
add
jb
add
jae
add
dec
add
inc
add
push
add
outs
add
push
add
bound
add
ins
add
bound
add
add
ins
add
add
add
ins
add
bound
add
dec
inc
push
xor
test
add
int3
push
inc
push
das
push
dec
push
xor
and
xor
inc
push
daa
push
xor
daa
push
int3
push
int3
push
and
xor
das
push
and
and
inc
push
aaa
push
inc
push
daa
push
and
xor
push
and
inc
push
inc
push
daa
push
int3
push
int3
push
das
push
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
pop
inc
add
jns
jo
je
push
add
outs
add
add
add
and
inc
push
aaa
push
inc
push
daa
push
and
xor
push
and
inc
push
inc
push
daa
push
int3
push
int3
push
das
push
add
push
add
imul
je
outs
add
add
jne
jae
je
jb
popa
add
add
add
sub
xor
xor
xor
and
add
add
add
imul
outs
add
add
push
add
outs
add
add
add
add
outs
add
add
sub
add
add
add
add
add
jb
imul
outs
add
add
outs
add
add
add
add
jb
imul
add
inc
xor
inc
add
dec
add
arpl
push
add
jae
imul
dec
add
dec
add
push
add
dec
add
add
jae
outs
add
bound
bound
jp
xor
push
add
dec
add
add
and
arpl
outs
add
jb
add
je
and
popa
add
add
add
jae
add
jns
add
jne
and
add
and
outs
add
je
and
push
add
and
jae
jne
data16
imul
add
je
and
add
add
add
imul
outs
add
and
data16
jb
and
je
push
add
add
add
outs
add
popa
add
je
imul
add
daa
push
add
outs
add
add
add
popa
add
add
arpl
add
add
add
xor
jge
add
outs
add
add
add
add
add
je
and
push
add
jb
add
sub
add
and
add
add
add
imul
outs
add
add
bound
je
outs
add
ins
add
jae
add
or
push
xor
dec
push
sub
add
bound
add
add
pop
inc
add
jae
arpl
jb
imul
imul
add
popa
add
add
add
push
add
add
jns
add
bound
add
add
adc
add
add
jae
jae
cmp
add
bound
add
add
cmovno
ins
add
jne
outs
add
add
adc
je
inc
add
add
add
jae
add
outs
add
outs
add
punpckldq
je
outs
add
add
add
or
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
inc
add
jo
outs
add
imul
xchg
scas
push
dec
push
inc
push
scas
push
int3
push
and
jle
xor
das
push
daa
push
cs
sub
add
and
jnp
xor
jge
push
add
add
add
add
add
ins
add
add
xor
cmp
xor
xor
jge
jae
add
jnp
xor
jge
and
add
add
add
imul
outs
add
add
inc
add
dec
add
dec
add
push
add
inc
add
or
push
add
add
jne
and
push
add
and
bound
add
outs
add
add
je
jb
jne
arpl
imul
add
imul
and
inc
add
dec
add
add
bound
add
add
cmovle
add
add
add
add
and
je
outs
add
add
outs
add
imul
dec
add
popa
add
add
adc
outs
add
add
outs
add
imul
bound
je
outs
add
add
je
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
punpckldq
je
outs
add
add
je
add
add
add
add
outs
add
jns
add
bound
add
add
sbb
je
inc
add
add
add
imul
outs
add
add
xor
xor
xor
and
add
add
add
imul
outs
add
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
bound
add
add
ins
add
add
and
xor
xor
ins
add
add
add
add
add
jo
imul
jne
jb
add
outs
add
aaa
add
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
aaa
add
and
imul
jne
jb
add
outs
add
add
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
add
and
imul
jne
jb
add
outs
add
xor
add
popa
add
add
pop
jo
imul
jne
jb
add
outs
add
xor
add
arpl
je
jne
jb
add
outs
add
cmp
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
cmp
add
dec
add
imul
inc
add
jns
jo
je
outs
add
add
add
popa
add
je
add
add
add
inc
add
dec
add
add
inc
add
dec
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
jae
imul
bound
popa
add
add
add
mov
rcr
popf
jmp
fwait
(bad)
or
jp
push
sbb
mov
push
or
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
and
add
sbb
and
add
adc
add
adc
add
sbb
and
adc
and
add
sub
add
sbb
push
adc
add
adc
add
adc
push
adc
or
add
add
add
add
pop
add
add
sbb
add
or
push
adc
push
adc
push
push
add
add
add
add
add
lock
or
push
sbb
sbb
or
sbb
add
sbb
add
or
add
or
push
or
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
add
adc
add
adc
add
add
push
or
aad
cmp
add
pop
add
add
push
add
add
push
add
add
pop
add
adc
add
add
xor
add
xor
add
push
push
and
add
adc
add
add
add
mov
add
adc
add
or
mov
push
adc
adc
or
sbb
or
sub
sldt
add
adc
adc
or
and
or
adc
add
pop
pop
adc
or
and
add
sub
and
adc
adc
xor
cmp
add
sbb
add
cmp
and
add
add
sbb
add
add
push
add
adc
or
add
adc
push
and
sbb
sbb
sbb
add
push
push
add
add
push
push
add
adc
add
push
push
and
add
and
pop
add
and
add
sbb
add
adc
push
and
add
xor
add
adc
add
add
or
and
add
or
or
or
adc
and
add
adc
push
and
add
sbb
and
or
and
add
and
sub
jno
and
add
xor
and
add
xor
cmp
cmp
cmp
add
add
add
push
sbb
and
adc
or
or
add
sbb
adc
add
add
adc
add
or
add
adc
or
add
cmp
pop
add
sysret
or
or
or
or
or
or
pop
or
or
or
or
or
add
adc
adc
add
add
or
push
sbb
sbb
add
adc
add
cmp
cmp
and
add
mov
and
add
sub
and
add
xor
add
adc
add
add
push
adc
add
add
add
or
add
push
adc
add
push
pop
or
push
push
push
sbb
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
and
adc
add
adc
adc
and
sbb
adc
pop
add
and
add
sub
add
add
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
adc
or
add
push
dec
inc
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
xor
arpl
bound
arpl
sub
sub
sub
xor
xor
xor
or
add
xor
xor
xor
xor
add
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
mov
pop
add
add
add
add
sbb
add
fcomp
push
add
inc
push
mov
sub
dec
mov
cmps
add
out
add
add
arpl
pop
push
jae
jb
pop
popa
fs
imul
je
jb
ins
popa
imul
je
jo
inc
push
dec
inc
sub
gs
inc
push
dec
inc
pop
outs
bound
inc
bound
pop
inc
push
dec
inc
cs
bound
sbb
pop
add
pop
pop
add
and
add
pop
pop
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
