mov
adc
scas
shl
rcr
mov
sbb
push
sbb
dec
sbb
jg
nop
xor
call
xlat
or
retf
xor
add
pop
nop
xor
shl
mov
lahf
push
sbb
outs
retf
mov
stos
inc
jecxz
in
dec
ins
out
retf
jmp
retf
(bad)
xchg
pop
in
cmp
hlt
mov
(bad)
ficom
pop
retf
not
push
lds
xor
xor
sub
fsubr
push
into
outs
dec
mov
idiv
or
rol
addr16
push
lds
iret
cli
sbb
test
sub
shl
sbb
inc
in
xor
rcl
int3
dec
sbb
mov
ja
nop
mov
cmp
jecxz
dec
and
mov
pop
nop
xor
push
out
mov
and
popa
dec
xor
xor
pop
xor
sbb
ss
and
rcl
xor
jbe
xsavec
dec
nop
xor
aam
or
nop
mov
(bad)
stos
xor
jbe
shr
ins
cwde
pop
outs
pusha
dec
pop
int
dec
add
cmp
repz
cmp
mov
retf
cmp
sti
and
or
cmp
sbb
mov
xchg
(bad)
cwde
mov
mov
movs
mov
cmp
fbstp
xor
das
int3
outs
retf
cmp
push
cmp
jmp
nop
xor
push
js
mov
push
cdq
hlt
mov
cli
xor
pop
add
cli
cmp
xor
xor
ficom
cdq
in
jg
nop
xor
mov
mov
cmps
in
xchg
cmps
movs
and
sbb
xor
popf
cwde
retf
repnz
and
mov
dec
(bad)
pop
adc
ret
loope
xor
pop
int
cdq
add
fcomp
jmp
xchg
mov
pop
nop
xor
mov
sbb
nop
pop
int3
cmps
jo
jg
nop
xor
mov
push
pop
nop
xor
or
shr
sbb
xor
cmp
nop
xor
mov
addr16
push
sbb
or
jecxz
adc
jecxz
xchg
in
jmp
adc
ret
xor
test
sbb
xor
sbb
xor
cmps
movs
sbb
sbb
jbe
cmps
movs
adc
sbb
jbe
mov
inc
(bad)
pop
adc
fild
mov
lea
nop
xor
call
add
lds
(bad)
pop
js
mov
nop
addr16
push
das
mov
ja
inc
test
push
pop
(bad)
xor
pop
(bad)
xor
adc
sbb
xor
call
and
adc
mov
mov
mov
xor
fsub
cmps
rcr
xor
fsubr
cmp
out
(bad)
fdivr
(bad)
pop
nop
addr16
pop
out
(bad)
push
add
repnz
js
(bad)
pop
nop
mov
push
lods
retf
cmp
inc
ret
je
inc
adc
(bad)
loope
ins
(bad)
pop
ror
js
cmp
xchg
cmps
loop
neg
push
popa
dec
mov
das
fcomip
push
test
sub
div
aam
int3
xchg
aam
enter
pop
clc
pop
lahf
xor
pop
cli
xor
pop
outs
inc
retf
cmps
in
das
in
xor
rcl
add
mov
(bad)
push
inc
ret
push
in
cmp
retf
mov
cli
xor
sub
retf
mov
js
mov
cmps
in
das
shr
(bad)
push
inc
ret
push
in
int3
(bad)
sub
mov
pop
nop
xor
push
adc
mov
nop
xor
cdq
shr
nop
push
popa
dec
mov
(bad)
mov
cmp
jg
repz
scas
ja
and
fs
inc
nop
ss
xor
inc
iret
mov
dec
(bad)
pop
sbb
into
scas
in
neg
mov
mov
outs
inc
(bad)
nop
retf
mov
outs
inc
cmp
sbb
cmp
(bad)
and
xor
cdq
jnp
neg
push
ror
push
call
xchg
vmptrst
aas
scas
xchg
dec
fwait
mov
retf
ret
jbe
(bad)
rol
cmc
enter
add
dec
fwait
xchg
test
retf
ret
jbe
push
aad
(bad)
mov
cs
push
cs
pusha
inc
inc
(bad)
sbb
lds
je
gs
xor
mov
outs
jno
rcl
and
sbb
inc
ret
enter
or
pop
nop
ret
mov
rcl
int3
adc
mov
cmps
shl
pusha
push
inc
imul
mov
xchg
lods
xor
and
retf
jg
outs
xor
push
into
outs
push
call
(bad)
pop
js
mov
nop
addr16
push
sbb
ror
and
fsubr
cmps
movs
add
cmp
mov
retf
cmp
shl
sbb
mov
xchg
lods
xor
add
cdq
repnz
pop
nop
retf
cmp
jle
scas
jnp
dec
mov
cwde
mov
ret
retf
cmp
test
mov
cmps
outs
retf
dec
fsubr
cmp
outs
retf
xor
push
mov
cmps
outs
retf
dec
fsubr
cmps
sbb
out
test
nop
retf
cmp
mov
pop
outs
retf
cwde
pop
retf
std
add
sbb
inc
mov
addr16
push
sbb
sahf
aad
bound
cmp
mov
(bad)
scas
cmc
enter
mov
sub
js
mov
push
sub
mov
and
fiadd
cmc
ds
mov
mov
dec
dec
cmps
jb
xchg
loop
sbb
bnd
inc
nop
mov
xor
aad
xor
mov
cmp
into
outs
push
call
xchg
push
sbb
sahf
aad
cmc
jb
jnp
sbb
mov
xchg
movs
mov
sti
mov
nop
mov
mov
and
fiadd
cmc
ds
mov
mov
dec
dec
cmps
jb
xchg
loop
and
dec
sbb
mov
mov
shl
sbb
bnd
inc
nop
imul
jne
xchg
vmptrst
rcr
gs
sbb
mov
xchg
movs
outs
xor
scas
jnp
dec
sbb
cmp
test
cmp
push
lahf
mov
dec
test
hlt
xchg
in
aam
xor
loope
pop
nop
add
push
call
xchg
push
sbb
out
add
sbb
mul
in
test
inc
retf
xor
aad
pop
(bad)
fadd
sbb
mov
scas
pop
jno
(bad)
vmread
cmp
ins
ja
vmread
cmp
jnp
dec
mov
push
outs
push
call
xchg
push
sbb
out
sub
pop
nop
ret
and
aad
dec
sahf
outs
inc
iret
mov
inc
(bad)
pop
sbb
lods
pop
cli
xor
cmps
(bad)
xor
or
retf
mov
cli
xor
pop
js
mov
nop
mov
mov
push
bnd
push
mov
push
call
nop
shl
cmp
sub
lods
popf
pop
nop
mov
lds
jbe
pop
in
lds
jbe
or
sub
or
inc
ret
ror
xor
outs
sbb
or
mov
das
and
mov
lds
xchg
vmptrst
cli
jmp
add
mov
inc
aas
xchg
xor
pop
js
mov
nop
mov
xlat
mov
loopne
(bad)
rcl
aas
pop
push
cmp
dec
sbb
cmp
scas
jmp
xchg
pop
(bad)
aam
les
pop
sbb
neg
push
mov
mov
sbb
inc
cdq
xchg
fs
stc
jno
(bad)
rcl
retf
ror
(bad)
pop
sbb
inc
mov
jg
pop
mov
test
rcl
ror
cdq
in
neg
push
bound
pop
outs
retf
cmp
mov
std
add
sbb
jg
nop
xor
(bad)
pop
ret
bound
ja
in
out
sbb
add
in
inc
jl
add
shl
sbb
cmp
xchg
xor
rcl
cmp
jbe
fcom
fcomp
mov
lds
jbe
pop
in
lds
jbe
or
add
sets
(bad)
fidiv
xor
cmps
outs
xor
aam
aad
cmps
outs
cmp
fcomp
nop
xor
pop
clc
(bad)
daa
sbb
retf
js
cmp
outs
mov
push
lods
retf
cmp
inc
retf
fidiv
xor
add
arpl
iret
pop
nop
mov
dec
ret
xor
aam
rcl
xchg
fs
popa
outs
arpl
rcl
enter
xor
frstor
dec
cmp
mov
pop
nop
xor
cmp
xor
fs
add
in
dec
and
cmp
in
add
xchg
dec
jae
nop
inc
rcr
dec
jae
nop
xor
and
aad
inc
call
das
movs
jecxz
mov
sbb
mov
pop
sbb
rcl
fsub
jbe
aam
les
mov
mov
(bad)
pop
arpl
mov
cmps
(bad)
adc
sbb
mov
inc
sub
mov
xor
test
hlt
sbb
mov
(bad)
pop
nop
xor
sbb
cmp
pop
jo
mov
cmp
xor
or
or
into
add
(bad)
pop
sbb
push
push
inc
rcr
nop
retf
cmp
mov
sbb
adc
inc
jbe
xor
fs
test
inc
int3
clc
or
test
mov
cmp
mov
aas
push
adc
loop
xor
pop
sub
nop
ret
and
adc
mov
push
call
xchg
cmpxchg8b
inc
mov
dec
(bad)
pop
mov
ret
in
nop
xor
cmp
xor
sbb
mov
imul
rcr
nop
xor
stos
sbb
xor
push
fistp
adc
int3
xlat
sub
mov
les
add
pop
adc
pop
sbb
aam
aaa
(bad)
or
movs
sbb
xor
popf
cwde
mov
and
xchg
test
fsubr
cdq
in
inc
cmp
xor
and
xor
push
xor
sbb
xor
adc
int3
(bad)
mov
ins
xor
sbb
xor
push
(bad)
push
dec
inc
ret
pusha
arpl
mov
mov
mul
dec
ret
mov
enter
add
dec
sbb
mov
imul
enter
enter
retf
mov
clc
add
sbb
xor
and
repz
dec
nop
xor
pop
cli
xor
pop
cli
xor
pop
clc
xor
pop
rcr
shl
js
xor
rcl
int3
lods
pop
cli
xor
pop
rcr
ss
xor
sbb
mov
xchg
lods
xor
add
lods
shl
cwde
retf
mov
js
test
nop
pop
(bad)
aam
rcl
shl
sub
fsubr
mov
pusha
mov
cmp
fdivr
pop
retf
std
add
sbb
jg
nop
ss
mov
pop
(bad)
pop
ret
bound
inc
sub
and
adc
mov
int
nop
repnz
movs
outs
retf
clc
shl
sbb
xor
fsub
cmps
sbb
retf
xchg
mov
iret
cmp
adc
iret
pop
nop
mov
add
nop
fsubr
sub
xor
rcl
mov
add
and
mov
cmp
js
cmp
outs
mov
push
adc
pop
cli
shl
sub
nop
xor
mov
outs
retf
dec
call
xchg
clc
or
test
mov
dec
sbb
cmp
pop
scas
jae
inc
cmc
outs
retf
push
mov
cmp
clc
push
sbb
retf
sbb
dec
lods
xor
pop
nop
mov
enter
(bad)
pop
adc
outs
push
nop
xor
fcom
cmp
shl
shr
jno
push
push
cmp
cwde
xor
xor
xchg
xchg
add
mov
push
cmp
sahf
xlat
mov
cmp
adc
xchg
xchg
stc
shl
cmp
retf
xchg
clc
or
test
mov
dec
sbb
cmp
rcr
inc
in
retf
cmp
xchg
xor
fldcw
xor
fisttp
xor
(bad)
aam
leave
cmp
retfw
cmp
push
cmp
idiv
cmp
push
mov
pop
nop
cmp
ss
cmp
nop
cmp
xchg
xor
push
daa
mov
cmps
outs
retf
xchg
sbb
retf
xchg
xor
xchg
xchg
iret
test
nop
mov
push
lahf
add
retf
xchg
xor
fidiv
xor
fs
add
xchg
xor
fcom
loop
nop
pop
(bad)
xor
test
sbb
scas
outs
retf
inc
popf
pushf
or
cmps
nop
xor
jle
xor
(bad)
aam
leave
cmp
retfw
cmp
push
cmp
cmps
outs
xor
sub
outs
retf
nop
xor
xor
xor
or
jne
mov
sar
adc
retf
outs
retf
(bad)
pop
in
lods
pop
clc
lea
sbb
retf
js
xor
lods
retf
cmp
inc
int
adc
xor
(bad)
xor
sbb
lods
outs
retf
inc
popf
pushf
or
cmps
nop
xor
jle
xor
(bad)
aam
leave
cmp
gs
cmp
push
cmp
cmps
outs
xor
sub
outs
retf
nop
xor
xor
xor
or
jne
mov
sar
adc
retf
outs
retf
(bad)
pop
in
lods
pop
clc
lea
sbb
retf
js
xor
lods
retf
cmp
inc
int
adc
xor
pop
scas
jae
inc
stc
outs
retf
push
pop
(bad)
xor
test
sbb
lods
outs
retf
inc
popf
pushf
or
cmps
nop
xor
push
push
mov
cmps
outs
retf
(bad)
pop
nop
xor
pop
clc
mov
sbb
xor
test
retf
cmp
push
cmp
cmps
outs
xor
sub
outs
retf
nop
xor
xor
xor
or
jne
mov
sar
adc
retf
outs
retf
(bad)
pop
in
lods
pop
clc
lea
sbb
retf
js
xor
lods
retf
cmp
inc
fidiv
xchg
pop
mov
shl
in
retf
cmp
outs
retf
inc
popf
pushf
or
cmps
nop
xor
push
push
mov
cmps
outs
retf
(bad)
pop
nop
xor
stos
fdivr
(bad)
pop
adc
(bad)
sub
bnd
jbe
pop
sbb
retf
xchg
mov
into
cmp
xchg
inc
jae
nop
xor
(bad)
cli
hlt
add
sbb
add
ins
retf
cmp
nop
xor
stos
aam
(bad)
pop
sbb
retf
xchg
rcl
fs
popa
outs
arpl
cdq
lahf
mov
pop
nop
xor
fsubr
retf
cmp
outs
retf
sbb
push
mov
and
test
xor
pop
adc
(bad)
fsub
(bad)
pop
nop
mov
mov
cmp
mov
outs
retf
(bad)
push
push
add
jb
xor
aas
push
mov
cmps
outs
retf
rcr
mov
cmps
outs
retf
(bad)
pop
nop
xor
fcomp
retf
cmp
outs
retf
sbb
xchg
shl
in
xor
outs
retf
dec
call
xchg
xor
aad
pop
sbb
xchg
shr
xor
pop
sbb
push
push
cmp
xchg
xor
aam
in
cmps
outs
fs
fadd
cmps
sar
pop
nop
mov
mov
xor
fcom
mov
cmps
outs
retf
xchg
rcl
fs
popa
outs
arpl
rcl
enter
mov
pop
nop
xor
stos
jl
(bad)
pop
jnp
dec
fdivr
cmp
outs
retf
sbb
push
test
and
ret
and
adc
mov
(bad)
push
adc
mov
cmp
sbb
xchg
shr
jno
ror
pop
rcl
mov
cmp
jnp
mov
test
outs
cmp
or
jne
aam
leave
cmp
cld
xor
ficom
cld
jl
cmp
nop
xor
pop
js
lods
pop
nop
mov
xchg
aad
(bad)
cmps
and
mov
cmp
clc
push
daa
sbb
retf
js
stos
pop
nop
mov
dec
sbb
out
sbb
mov
(bad)
rcl
mov
cmp
adc
fs
in
sbb
cmp
ja
ret
pop
nop
xor
cld
sbb
retf
inc
mov
mov
(bad)
pop
arpl
cmp
(bad)
sbb
ins
cmp
lds
mov
std
outs
retf
adc
cmp
nop
xor
fdiv
cmp
shl
fmul
cmp
test
(bad)
pop
nop
xor
sbb
cmp
lds
mov
pop
leave
xor
aam
xchg
cmp
xor
cmp
(bad)
pop
dec
sbb
cmp
(bad)
pop
nop
mov
icebp
outs
retf
jns
(bad)
pop
nop
pop
(bad)
mov
pop
(bad)
pop
leave
mov
add
push
mov
cmps
outs
retf
lds
mov
cmps
outs
retf
dec
fsubr
retf
cmp
outs
retf
xchg
aam
inc
cmp
sbb
jle
nop
xor
stos
xor
retf
jl
dec
mov
nop
(bad)
vpminsb
outs
arpl
sub
xor
scas
jae
inc
add
push
mov
movs
nop
cmp
xchg
xor
fidiv
xor
fcom
cmp
shl
fcom
retf
cmp
test
(bad)
pop
nop
xor
sbb
cmp
(bad)
pop
nop
mov
(bad)
cmp
mov
pop
nop
xor
fdiv
retf
cmp
and
mov
cmp
sbb
push
mov
and
test
xor
pop
div
cmp
mov
pop
nop
xor
in
retf
cmp
nop
xor
aam
imul
in
clc
retf
cmp
outs
mov
push
sbb
adc
ins
cmp
xor
fldcw
xor
fstp
xor
pop
push
mov
cmps
outs
retf
(bad)
pop
nop
xor
pop
outs
sub
ins
retf
cmp
shl
fsubr
cmp
nop
xor
popf
test
cmp
pop
retf
xchg
lods
xor
inc
mov
jnp
ficomp
retf
jb
outs
leave
cmp
adc
fs
fsubr
cmp
outs
retf
js
scas
pop
nop
mov
push
cli
xor
ins
retf
cmp
shl
fsubr
cmp
nop
xor
popf
xor
fisubr
xor
pop
sbb
xchg
shl
in
xor
outs
retf
dec
call
dec
fdiv
retf
cmp
outs
retf
enter
cmp
outs
retf
xchg
shl
mov
cmps
outs
retf
xchg
shl
mov
cmps
outs
retf
dec
fdiv
cmps
test
retf
enter
cmp
outs
retf
(bad)
sub
repnz
movs
outs
retf
sub
(bad)
pop
nop
ret
and
adc
mov
cmp
outs
(bad)
iret
fisubr
xor
push
sbb
xchg
shl
mov
cmps
outs
retf
(bad)
sub
outs
retf
sbb
sets
cmp
sbb
sets
cmp
sbb
sets
add
adc
fs
imul
cmp
push
popa
dec
mov
and
(bad)
xor
and
pop
hlt
xchg
(bad)
pop
nop
xor
cmp
nop
xor
mov
addr16
push
sbb
sahf
aad
cld
outs
or
inc
xor
fwait
mov
repz
jno
xchg
mov
(bad)
xor
ss
pop
js
scas
pop
nop
mov
pop
js
xor
and
(bad)
pop
in
sub
push
jno
cmps
outs
retf
cmp
xchg
xor
pop
sbb
call
fnstsw
push
mov
mov
jnp
add
retf
cmp
add
(bad)
pop
nop
xor
nop
push
xor
or
rcl
jnp
mov
and
jbe
xor
adc
pop
js
mov
push
js
movs
pop
nop
imul
lds
xchg
bndstx
out
or
sbb
(bad)
test
in
test
in
inc
jl
movs
xchg
mov
add
mov
pop
sbb
stos
xchg
mov
push
add
push
xor
(bad)
shl
pop
nop
xor
pop
aam
xchg
xor
pop
sbb
xchg
nop
xchg
xchg
shl
out
xchg
je
sbb
dec
lds
or
pop
nop
xor
(bad)
jecxz
(bad)
pop
outs
adc
and
(bad)
fstp
je
cmp
inc
jae
nop
add
enter
inc
mov
push
jne
mov
ss
pop
adc
ffreep
shl
scas
xchg
or
fdivr
xor
sub
shl
pop
test
xchg
xor
pop
test
xchg
les
mov
push
ffree
pop
nop
xor
pop
test
xchg
into
(bad)
pop
nop
retf
ret
jbe
scas
xchg
sub
sbb
hlt
cs
xor
fsub
rcr
retf
jne
dec
xor
nop
xchg
xlat
leave
shl
push
xchg
sub
sbb
hlt
cs
xchg
xor
fsub
xlat
pop
nop
mov
inc
pcmpeqw
pop
jns
cmp
pcmpeqw
push
in
neg
nop
mov
cmp
xor
fstp
cmp
sbb
jne
sti
rcl
cmps
outs
ret
pcmpeqw
pop
in
neg
nop
mov
add
popf
sub
sbb
test
(bad)
pop
jns
cmp
pcmpeqw
pop
in
neg
nop
mov
push
lahf
xor
fstp
add
xchg
xor
pop
jns
cmp
and
(bad)
cmps
xchg
or
sbb
mov
pop
sbb
xor
clc
jl
xchg
xor
(bad)
shl
inc
sti
xor
scas
jbe
sub
stos
xchg
frstor
pop
nop
xor
mov
jne
ficom
(bad)
pop
test
xchg
cli
(bad)
pop
nop
xchg
add
xor
pop
cwde
movs
xchg
mov
pop
nop
xchg
sub
shl
pop
test
xchg
call
and
(bad)
ficom
ss
sbb
ret
jne
pop
jns
(bad)
pop
nop
add
(bad)
pop
adc
ffreep
shl
fcom
leave
pop
nop
mov
or
jbe
push
xor
cdq
in
pusha
inc
mov
mov
push
loope
xor
fst
or
pop
nop
xor
arpl
inc
cdq
es
fstp
je
outs
outs
xor
jbe
fcomp
nop
xor
(bad)
mov
retf
ret
jne
shl
aaa
rcl
retf
jne
sbb
neg
nop
mov
icebp
fdiv
cmps
xchg
inc
jae
nop
ret
pcmpeqw
sbb
xor
xchg
sar
test
(bad)
out
test
xchg
inc
sbb
xor
sbb
cmp
loopne
test
aam
rcl
into
enter
cli
cdq
nop
xor
push
adc
(bad)
pop
nop
mov
mov
xchg
cmp
sbb
xor
push
es
adc
pop
in
sbb
(bad)
pop
xchg
cmp
sbb
jne
pop
in
inc
and
xor
or
dec
cmp
pop
cwde
movs
xchg
fild
mov
retf
jne
fstp
(bad)
(bad)
test
sar
xchg
add
or
xor
push
mov
fldln2
iret
(bad)
sub
mov
push
add
sbb
out
test
pushf
movs
xchg
(bad)
rcr
dec
dec
pushf
movs
xchg
xor
pop
test
sbb
je
clc
cwde
movs
xchg
xor
leave
shl
jg
xor
jl
movs
xchg
(bad)
rcr
dec
dec
pushf
movs
xchg
xor
pop
test
push
add
test
xchg
xor
leave
shl
in
shl
xchg
mov
je
push
pop
not
cmpxchg8b
jg
aam
(bad)
scas
jbe
and
add
nop
fdiv
sahf
clc
daa
jge
nop
arpl
fmul
xor
cli
int3
xchg
test
sbb
sbb
xor
cli
sub
pop
nop
ret
and
aad
dec
lahf
clc
or
nop
arpl
or
xor
cli
fs
jge
nop
arpl
sbb
xor
cli
mov
push
sbb
xor
cli
enter
iret
push
call
xchg
cmpxchg8b
dec
adc
xor
(bad)
jbe
aam
pushf
xchg
cmps
test
sbb
xor
pop
sbb
mov
xor
sbb
mov
xor
nop
xor
fdivr
sti
pop
nop
mov
mov
nop
retf
ret
jbe
(bad)
in
ror
pop
rcl
mov
adc
xor
loope
adc
pop
xlat
dec
sbb
mov
jge
nop
mov
mov
shl
sbb
ss
pop
nop
mov
sbb
rcl
sub
xor
pop
adc
pop
sbb
in
pop
nop
xor
stos
xor
pop
(bad)
pop
xchg
xor
sbb
cmp
xchg
in
test
lods
pop
sbb
xor
pop
cli
xor
mov
push
(bad)
pop
sbb
inc
arpl
aad
xchg
xor
xor
pop
in
test
xor
sub
pop
(bad)
xor
retf
mov
js
cmps
pop
nop
mov
nop
xor
mov
push
retf
mov
js
call
jbe
aam
fcom
sbb
cmp
xchg
jno
mov
mov
std
mov
mov
lds
add
adc
pop
fistp
and
aad
xor
mov
cmp
aad
dec
sbb
mov
aas
(bad)
rol
inc
mov
das
xor
and
retf
mov
cli
xor
sbb
lods
cmps
outs
inc
iret
cmps
test
sbb
xor
ins
and
add
sbb
xchg
push
das
xor
jo
mov
jae
nop
retf
mov
cli
retf
cmp
xchg
sar
rcl
enter
std
add
sbb
inc
mov
addr16
push
sbb
ror
cmp
pop
in
test
retf
enter
cli
cmps
nop
xor
sub
cmp
cmps
xor
(bad)
sub
cmp
cmps
ss
cmps
nop
xor
sub
cmp
cmps
aaa
cli
cmps
nop
xor
sub
cmp
cmps
xor
cmps
nop
xor
push
adc
lds
mov
les
stc
rol
enter
enter
movs
in
xor
out
test
(bad)
fwait
lahf
mov
pop
nop
xor
mov
xchg
(bad)
pop
nop
mov
enter
(bad)
fwait
in
dec
mov
es
pusha
push
inc
test
pop
lahf
add
lods
fadd
pop
nop
inc
cdq
push
es
xor
dec
pop
xchg
pop
jnp
nop
fs
add
xor
push
es
cmp
inc
and
test
jnp
nop
xchg
mov
push
aas
ficomp
dec
or
mov
cmp
mov
xor
fs
les
inc
mov
mov
ret
xor
mov
cmp
outs
pop
pop
dec
adc
ret
jbe
pop
in
inc
sbb
xor
cmp
nop
mov
addr16
inc
xchg
shr
inc
gs
xor
mov
mov
pop
xchg
inc
xchg
push
or
pop
in
dec
mov
es
gs
inc
aad
cs
pop
in
dec
mov
lods
xor
sub
mov
dec
or
xchg
mov
pop
sbb
rcr
xor
fldcw
aas
adc
or
pop
in
dec
mov
lods
xor
sub
mov
inc
gs
ss
sbb
inc
mov
cmp
xchg
or
pop
nop
xor
pop
lods
ffree
pop
nop
inc
call
or
mov
cmp
mov
mov
xlat
aam
aaa
ret
mov
pop
sbb
rol
inc
gs
xor
(bad)
fldcw
aas
fidivr
inc
gs
xor
inc
mov
mov
pop
xchg
inc
hlt
shr
das
pop
lahf
add
lods
or
pop
nop
inc
shl
pop
in
das
lock
rol
and
or
adc
ret
rcl
sbb
xor
pop
nop
cmp
ins
retf
cmp
into
outs
push
call
xchg
cmpxchg8b
(bad)
retf
ret
jbe
shl
cmp
inc
mov
or
pop
in
sbb
fadd
pop
nop
inc
fsubr
les
inc
aad
sbb
je
aaa
(bad)
pop
test
ffree
pop
nop
mov
push
outs
xor
out
lds
mov
mov
xchg
out
dec
mov
adc
cmp
and
(bad)
push
es
fs
(bad)
pop
in
cli
mov
xor
sub
nop
(bad)
ror
and
xor
sbb
xchg
ret
leave
shl
sbb
inc
das
mov
mov
(bad)
aam
(bad)
rcl
mov
mov
out
(bad)
mov
jno
aam
sub
rol
ror
sub
leave
shl
mov
pop
retf
dec
stos
xchg
out
out
mov
into
mov
mov
hlt
mov
jo
pop
sbb
rol
jbe
ficomp
out
mov
xchg
in
mov
mov
rcl
xchg
setg
lds
shl
sub
push
cmp
or
sar
mov
(bad)
mov
ins
(bad)
pop
ret
bound
cmps
push
mov
xchg
(bad)
mov
ins
(bad)
pop
lods
xor
pop
adc
lahf
adc
xor
cmp
and
(bad)
pop
adc
(bad)
sub
cmp
arpl
cmp
sub
(bad)
pop
in
inc
in
jmp
cmps
nop
inc
aam
es
mov
retf
inc
gs
push
jnp
nop
ss
jnp
enter
sub
dec
retf
cmp
pop
cmp
popf
or
sbb
xor
rol
mov
xchg
adc
retf
cmp
pop
sub
popf
jmp
xchg
mov
cmp
shl
mov
add
mov
xchg
mov
mov
retf
(bad)
push
es
mov
retf
lods
cdq
mov
pop
nop
cmp
outs
retf
cmp
outs
xor
out
add
cmc
and
jns
je
pop
lahf
mov
pop
nop
xor
out
add
cmc
and
or
jne
rol
retf
ret
jbe
fldcw
xor
fld
xor
cmps
outs
mov
cmp
nop
mov
cmp
inc
cmc
sub
push
xlat
rcl
dec
xor
pop
shl
fsub
cmps
mov
xor
pop
nop
addr16
hlt
enter
push
mov
pop
push
rol
shl
aas
mov
retf
sbb
xor
pop
nop
cvtps2pd
inc
mov
cmp
js
lahf
pop
nop
retf
ret
jbe
fidiv
xor
aad
xor
xor
(bad)
pop
outs
sub
in
dec
jmp
cmps
js
cmp
push
sbb
push
push
inc
movs
fidiv
xor
les
jmp
sbb
push
mov
cmc
and
shl
jae
push
cmp
ret
pop
nop
inc
sbb
outs
retf
les
inc
enter
(bad)
dec
nop
xor
fcom
jmp
nop
and
pop
adc
(bad)
test
outs
inc
cmp
leave
mov
mov
retf
cmp
xor
sbb
nop
xor
fdivr
cmps
lahf
mov
cmps
outs
retf
cmp
test
sbb
pusha
(bad)
xor
mov
aaa
(bad)
pop
lahf
adc
retf
cmp
test
sbb
retf
cmp
xor
xor
int3
fstp
cmps
push
(bad)
(bad)
cmc
cs
push
aad
pop
(bad)
dec
push
cmp
xor
xchg
mov
push
mov
xchg
inc
xchg
retf
inc
lods
jg
cmp
sub
xor
pop
nop
inc
jo
xchg
inc
jae
nop
mov
mov
in
scas
pop
sub
(bad)
(bad)
pop
sbb
dec
fwait
xchg
and
gs
xor
rol
mov
and
jmp
outs
retf
dec
int3
or
cmp
xchg
mov
cmp
adc
mov
cmp
mov
cmp
adc
mov
cmp
adc
pop
fcmovnbe
adc
fs
dec
jmp
cmps
js
nop
pop
nop
mov
cmp
mov
cmps
outs
inc
test
adc
mov
cmp
call
jp
dec
retf
cmp
imul
xor
retf
cmp
add
cmc
sub
pop
xchg
xor
int3
cmp
cmp
in
test
adc
retf
cmp
dec
jmp
cmps
mov
retf
dec
push
test
sbb
fstp
cmps
push
(bad)
(bad)
and
enter
int3
fstp
cmps
clc
xor
pop
nop
data16
fs
xor
rcl
cmp
(bad)
pop
nop
mov
push
nop
cmp
xchg
xor
rcl
cmp
lods
ffree
pop
nop
inc
enter
(bad)
push
adc
(bad)
pop
nop
fstp
pop
nop
xor
fsub
cmps
sbb
ret
xor
fidivr
dec
sbb
je
cmp
outs
retf
(bad)
fidivr
xor
jmp
cmps
sbb
(bad)
fldcw
les
mov
pop
in
dec
test
test
mov
sbb
inc
mov
mov
pop
in
dec
test
test
mov
(bad)
or
nop
cmp
xor
cmp
and
arpl
xor
cmp
lods
ffree
pop
nop
inc
rcl
xchg
add
pop
nop
xor
mov
mov
inc
mov
adc
inc
lods
jg
cmp
sbb
xlat
push
stos
mov
xchg
mov
adc
(bad)
push
mov
push
mov
xor
cmp
lods
or
pop
nop
xor
sub
mov
fs
xor
pop
nop
inc
(bad)
lods
or
pop
nop
xor
sub
mov
fs
xor
pop
nop
inc
int
lods
or
pop
nop
xor
sub
lahf
add
retf
cmp
dec
(bad)
fldln2
cmp
sub
arpl
cmp
dec
retf
cmp
outs
fdiv
popf
pushf
mov
mov
in
inc
cld
fstp
cmps
nop
mov
cmp
push
ffree
cwde
jno
les
mov
cmp
adc
mov
lods
jg
cmp
xor
sub
ret
jbe
mov
enter
mov
mov
retf
(bad)
push
es
mov
retf
lods
cdq
mov
pop
nop
cmp
imul
push
into
outs
push
call
xchg
vmptrst
aas
cmps
mov
int3
aad
nop
xor
sbb
xor
repnz
xor
sbb
mov
(bad)
cmc
clc
dec
sbb
mov
pop
aam
mov
sbb
xor
std
sbb
mov
rcr
xor
adc
inc
stos
xor
fldcw
mov
cmps
xchg
mov
(bad)
fwait
sbb
lahf
aad
(bad)
mov
mov
cmp
and
sub
mov
cmps
xchg
(bad)
(bad)
retf
in
retf
je
and
dec
pop
lahf
adc
lahf
mov
pop
nop
xor
sbb
mov
pop
nop
mov
cmps
xchg
cmp
xchg
or
pop
nop
xor
cmp
hlt
(bad)
pop
nop
mov
sbb
xor
outs
xor
dec
fwait
adc
rcr
xor
sub
mov
sbb
xor
outs
xor
xor
xchg
hlt
mov
adc
rcr
xor
pop
sbb
rcl
add
out
shl
(bad)
adc
pop
in
inc
sbb
xor
out
xchg
or
pop
nop
xor
push
data16
popa
in
inc
sbb
xor
ins
xor
enter
cmp
jnp
dec
pop
lahf
adc
in
inc
sbb
xor
cmp
dec
cmp
rol
push
cmp
lods
mov
pop
nop
inc
ret
(bad)
retf
(bad)
push
es
push
into
outs
push
call
dec
sub
(bad)
ja
dec
jp
mov
daa
(bad)
pop
clc
retf
(bad)
pop
nop
bound
pop
nop
mov
xchg
lods
xor
add
int3
inc
rcr
xor
mov
in
test
imul
mov
(bad)
mov
gs
pop
(bad)
arpl
(bad)
sub
shr
and
adc
mov
add
in
xchg
cmps
in
dec
fcom
(bad)
seto
fcom
fmul
pop
nop
xor
popf
cmp
push
push
popa
dec
mov
cmp
inc
mov
cmp
pop
cli
xor
pop
outs
inc
iret
xor
xor
add
popa
dec
mov
(bad)
arpl
into
sub
fsub
(bad)
pop
nop
pop
(bad)
xor
xor
pop
cli
aaa
lods
pop
cli
aaa
scas
pop
nop
xor
cmps
in
das
inc
ret
rcl
cmp
pushf
xor
pop
sbb
fidiv
ror
fs
xchg
xor
xor
rcl
pop
dec
rcr
push
gs
pop
sbb
fdivr
les
pop
(bad)
(bad)
cmp
sub
sbb
mov
mov
xor
in
xchg
mov
gs
pop
(bad)
fsubr
sbb
ffreep
shr
aas
rcl
cdq
add
xchg
shl
xchg
cmpxchg8b
dec
mov
cli
xor
fst
pop
(bad)
xor
hlt
cmp
fdivr
lahf
adc
mov
xor
cmps
outs
inc
ret
push
xchg
pop
(bad)
xor
xor
rcl
cmp
adc
cmp
adc
(bad)
pop
in
dec
call
xchg
cmps
in
xchg
mov
gs
pop
cli
xor
sbb
lods
pop
clc
les
sbb
xor
fsub
out
pop
nop
bound
or
xor
loope
xor
pop
iret
push
nop
push
popa
dec
mov
(bad)
mov
and
xlat
xor
scas
ja
and
mov
pop
nop
pop
ret
xor
xor
cdq
outs
inc
iret
mov
fs
pop
sbb
dec
mov
fs
mov
mov
lods
pop
cli
xor
mov
fs
pop
cli
xor
sbb
cmp
retf
mov
(bad)
fdivr
or
int3
dec
sahf
(bad)
fcom
push
nop
xor
cdq
shr
nop
push
popa
dec
mov
sbb
sahf
aad
cmp
jne
xor
mov
sbb
dec
ffreep
push
es
pop
push
jae
and
dec
xor
outs
inc
retf
xor
aam
pop
js
xchg
pop
nop
mov
movs
cmp
(bad)
sbb
xor
popf
add
pop
mov
jo
(bad)
mov
addr16
pop
adc
iret
sbb
add
sti
addr16
inc
ret
lahf
xchg
or
push
stos
dec
retf
and
jo
(bad)
mov
addr16
pop
adc
iret
rcl
enter
test
imul
jne
xchg
vmptrst
retf
sahf
aad
adc
sbb
lock
nop
pop
cld
mov
ret
add
add
rcr
xor
mov
push
cmp
pusha
addr16
xor
sti
xchg
pop
nop
ins
dec
sbb
mov
xchg
movs
iret
push
nop
push
popa
dec
mov
(bad)
arpl
(bad)
ror
pop
rcl
add
xor
(bad)
(bad)
fadd
(bad)
rol
aam
(bad)
dec
ins
or
(bad)
pop
nop
(bad)
(bad)
pop
xlat
dec
sbb
mov
(bad)
sub
push
add
sub
rcl
cmp
out
shl
dec
sbb
fucomip
loope
push
(bad)
pop
xlat
dec
sbb
mov
cmp
jo
test
hlt
fstp
fadd
outs
ss
adc
pop
adc
ins
nop
xor
xor
xor
mov
sbb
push
daa
je
rcl
retf
adc
and
xor
out
aad
enter
ficom
(bad)
sbb
mov
cmps
xchg
inc
ret
(bad)
fadd
fscale
retf
in
retf
inc
mov
add
cmp
sbb
push
daa
es
mov
hlt
stos
pop
nop
xor
out
(bad)
not
cmp
test
fmul
out
fst
xor
aad
dec
sbb
cmp
xchg
mov
xchg
pop
mov
(bad)
enter
cmp
je
rol
cmp
out
ret
mov
shr
sbb
mov
std
add
add
dec
shl
loop
mov
mov
fcom
push
leave
add
leave
add
leave
add
add
leave
add
add
leave
add
push
sub
movs
push
leave
add
loop
aad
pop
add
push
fcom
push
leave
add
leave
add
leave
add
push
pusha
dec
movs
push
leave
add
leave
add
leave
add
rol
movs
push
leave
add
pop
enter
add
leave
mov
movs
dec
inc
add
leave
add
leave
mov
movs
inc
call
push
leave
add
leave
adc
retf
leave
add
leave
in
push
leave
add
leave
neg
je
ins
retf
(bad)
dec
shl
xlat
shl
inc
xchg
jmp
shl
push
push
jbe
cmp
movs
push
leave
add
xor
push
leave
add
leave
add
leave
add
pop
add
push
jo
movs
push
leave
add
push
or
movs
push
leave
add
push
scas
movs
push
leave
add
push
add
movs
push
leave
add
push
push
add
push
mov
add
fisubr
push
leave
add
leave
add
pop
add
push
jo
movs
push
leave
add
push
or
movs
push
leave
add
push
scas
movs
push
leave
add
push
add
movs
push
leave
add
push
push
add
push
mov
add
leave
add
movs
outs
test
mov
push
sbb
rcl
cmp
sbb
fld
movs
sbb
(bad)
fwait
sbb
push
pusha
xor
mov
xor
pop
sbb
(bad)
test
outs
retf
sahf
rcl
xchg
mov
in
add
xor
jae
mov
mov
mov
pop
nop
xor
out
(bad)
mov
imul
add
adc
(bad)
scas
cmc
enter
mov
fldenv
inc
shl
inc
xlat
ror
aaa
sbb
jns
jo
mov
fldenv
(bad)
pop
in
dec
adc
into
out
xchg
sbb
sbb
test
xor
xor
pop
sbb
fwait
mov
cmp
imul
les
out
vshufps
xor
pop
sbb
in
(bad)
test
nop
xor
popf
mov
add
inc
cmp
xor
aas
outs
jno
push
daa
jno
adc
retf
cmp
push
popa
dec
mov
(bad)
arpl
out
fcom
in
pop
nop
fsubr
push
nop
aaa
pop
or
cmc
xor
popf
cmc
ds
mov
mov
inc
fs
mov
push
nop
xor
sbb
cmp
fdivr
retf
inc
popf
cwde
mov
inc
jb
xor
push
es
sub
lods
cwde
jp
nop
pop
shl
test
jecxz
shr
fcom
cwde
ja
cmp
pushf
jp
nop
mov
jp
nop
arpl
cwde
fnsave
xor
ret
jbe
pop
aad
xchg
mov
jns
pop
adc
(bad)
pop
mov
mov
mov
xor
xor
shl
and
xor
dec
adc
pop
xor
jp
nop
aaa
ret
jbe
pusha
aad
mov
xor
jp
nop
mov
jg
ret
xor
scas
jae
add
jno
rol
add
ret
clc
inc
mov
in
xor
sbb
inc
adc
cld
jns
pop
sbb
mov
jns
pop
sbb
push
daa
retf
dec
fwait
lahf
adc
sbb
pop
in
xor
mov
add
pop
js
mov
mov
mov
mov
cmp
push
cmp
push
(bad)
xlat
push
inc
mov
(bad)
xor
pop
jg
shl
test
shl
mov
js
pop
adc
retf
clc
pop
mov
mov
mov
mov
pusha
aaa
sub
xor
dec
adc
pop
xor
jp
nop
aaa
ret
jbe
pusha
aad
mov
xor
jp
nop
mov
dec
test
test
jp
nop
add
ret
clc
inc
mov
in
xor
sbb
inc
sbb
addr16
cli
popf
sub
popa
sub
jo
test
cmp
in
xor
push
stos
mov
jp
nop
cmp
jg
and
in
xor
push
dec
mov
fcom
enter
mov
(bad)
(bad)
push
daa
jno
or
(bad)
les
test
fsubr
outs
retf
inc
popf
cwde
pop
(bad)
xor
pop
(bad)
xor
inc
iret
mov
jge
pop
sbb
fsub
rcr
pop
(bad)
aam
fcom
cmps
in
das
and
xor
cmps
in
das
inc
fdiv
vmread
(bad)
pop
nop
add
jg
scas
xor
scas
jae
or
std
add
sbb
inc
mov
ss
pop
ret
bound
sub
mov
rcl
mov
jae
nop
sahf
(bad)
pop
nop
mov
(bad)
shl
aaa
rcl
jns
nop
xor
mov
push
xlat
or
cmc
xor
imul
sahf
rcl
add
sbb
dec
int3
outs
retf
push
jno
pop
jnp
das
enter
push
es
cmp
inc
jns
dec
sar
pop
push
int
jo
mov
inc
fwait
icebp
mov
cmp
sbb
gs
inc
or
adc
xor
or
xor
rcl
add
fcom
repnz
pop
outs
retf
cmp
ret
nop
xor
fsubr
cmp
shl
lods
dec
jbe
aam
iret
cmp
(bad)
xor
pop
(bad)
xor
je
fsubr
cmp
nop
xor
fsub
cmps
outs
inc
iret
loope
inc
adc
mov
movs
outs
retf
xchg
xor
int3
jp
nop
retf
jb
ins
retf
cmp
sbb
(bad)
test
fs
cmp
nop
retf
ret
jbe
or
jmp
inc
cmps
outs
retf
cmp
js
lea
mov
cmp
clc
call
inc
cmps
outs
retf
cmp
clc
xor
pop
adc
xchg
pop
nop
xor
fcomp
xor
scas
jbe
inc
mov
retf
cmp
push
retf
ret
jbe
xor
test
stc
sbb
nop
mov
cmp
clc
xor
pop
adc
in
nop
xor
xor
jmp
pop
clc
dec
sbb
nop
pop
lds
mov
push
nop
xor
ficom
scas
iret
dec
(bad)
pop
iret
push
nop
push
popa
dec
mov
(bad)
arpl
mov
and
sbb
mov
xor
mov
fs
(bad)
aam
int3
xchg
aam
enter
pop
clc
pop
lahf
xor
pop
cli
xor
pop
outs
inc
retf
cmps
in
das
js
xor
shl
xsha256
mov
pop
nop
inc
ds
int3
cmp
bound
sub
retf
mov
js
mov
mov
test
cmps
in
das
movs
fdiv
push
into
outs
push
call
in
cmp
mov
dec
shl
cmps
in
das
push
xlat
xor
xor
retf
mov
outs
inc
retf
cmps
in
das
ins
nop
xor
ficom
add
popa
dec
mov
lods
pop
call
rcl
enter
xor
or
xlat
cmps
in
cmp
fadd
pop
nop
xor
popf
mov
call
js
(bad)
fimul
rcl
and
pop
(bad)
xor
xor
pop
cli
xor
sub
retf
mov
js
(bad)
pop
nop
cmp
pop
mov
retf
mov
outs
inc
shl
outs
inc
xlat
cmps
in
das
xor
xor
push
push
inc
retf
cmps
in
das
fdiv
push
push
retf
mov
js
(bad)
pop
nop
add
add
sbb
inc
mov
bound
sbb
push
dec
sbb
mov
adc
iret
jb
pop
push
xor
shr
aas
rcl
and
xor
pop
outs
inc
retf
cmps
in
das
lods
xlat
xor
push
push
inc
ret
push
aad
xchg
psubd
cmps
in
das
mov
push
inc
retf
cmps
in
das
cwde
xlat
xor
push
in
das
in
xlat
xor
push
daa
jno
mov
mov
dec
nop
xor
mov
push
imul
shl
xchg
mov
pop
repz
fisubr
xor
jp
xor
clc
(bad)
xor
rcl
int3
dec
mov
xor
adc
nop
or
neg
nop
pop
add
xor
pop
cli
xor
pop
clc
push
sbb
nop
fcomp
movs
inc
jbe
fsub
mov
nop
cmp
pop
mov
retf
repnz
inc
jbe
mov
jb
pop
sbb
mov
mov
mov
into
std
add
ret
inc
pop
dec
sbb
out
xchg
sbb
dec
sbb
icebp
jmp
pop
sbb
lds
nop
shl
cmp
add
repz
jno
rcl
add
xchg
inc
gs
cmp
add
cmp
fcomp
popf
pushf
mov
xchg
dec
push
xor
pop
sbb
inc
cdq
xchg
fild
dec
nop
xor
fldcw
sbb
mov
sti
addr16
inc
(bad)
push
ds
sbb
lahf
nop
xor
sbb
mov
pop
nop
mov
dec
test
xor
(bad)
pop
sbb
inc
sbb
mov
pop
nop
cmp
aaa
pop
dec
cmp
fdivr
sbb
mov
xchg
movs
sbb
(bad)
mov
iret
push
nop
push
popa
dec
mov
(bad)
arpl
repz
inc
aaa
jge
xor
or
sbb
and
repz
push
cli
je
fcom
xor
rcl
shl
jnp
enter
inc
test
call
sub
xor
pop
stos
inc
aas
sub
stos
test
div
and
cmp
sbb
jle
nop
xor
shl
(bad)
adc
cmps
nop
jle
nop
xor
jecxz
fadd
pop
addr16
push
mov
mov
inc
sahf
icebp
arpl
arpl
push
js
sbb
retf
and
jno
sub
mov
pushf
nop
push
popa
dec
mov
nop
fdivr
cmpxchg8b
push
mov
outs
retf
adc
(bad)
aam
int3
cmp
pushf
fcomp
retf
inc
popf
cwde
mov
aaa
rcl
sbb
xchg
add
(bad)
pop
adc
(bad)
sub
addr16
lock
push
nop
xor
sub
fmul
fmul
cmp
nop
ret
bound
adc
mov
cmp
sub
push
dec
int3
inc
retf
cmp
xchg
xor
push
cli
je
or
xor
rcl
mov
shl
xor
cmps
in
scas
pop
xchg
xor
mov
jne
pop
sbb
out
test
cwde
mov
cmp
push
mov
cmps
shl
rcl
iret
rol
xor
or
clc
popa
sbb
nop
retf
mov
js
sbb
add
jp
sbb
retf
enter
adc
iret
mov
jno
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
sbb
imul
aad
(bad)
loopne
xor
pop
or
fisubr
mov
pop
nop
lea
imul
cmps
(bad)
pop
stc
xchg
xor
mov
jo
pop
adc
xlat
mov
jo
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
clc
add
sbb
retf
je
(bad)
pop
adc
iret
mov
jo
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
js
sbb
int
nop
xor
scas
imul
(bad)
loopne
xor
pop
or
or
mov
cmps
outs
retf
nop
xor
fsub
popf
or
jge
sbb
nop
mov
cmp
clc
adc
das
adc
xor
ficom
mov
ins
(bad)
pop
js
sbb
int
nop
xor
scas
imul
(bad)
cmps
and
fadd
popf
cwde
pop
int
shl
in
ins
retf
cmp
nop
mov
push
js
test
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fmul
sbb
cwde
pop
les
ins
retf
cmp
nop
mov
push
js
test
(bad)
int
nop
xor
scas
imul
(bad)
loopne
xor
pop
or
or
mov
cmps
outs
retf
nop
xor
fcomp
nop
xor
popf
or
sbb
dec
lahf
js
test
lea
pop
nop
xor
scas
imul
aam
jmp
shl
aam
jmp
cmp
or
in
sbb
xor
ficom
push
call
fisubr
mov
pop
nop
lea
imul
cmps
(bad)
pop
stc
xchg
xor
mov
ja
pop
adc
xlat
shl
and
adc
mov
(bad)
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
js
test
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fsubr
popf
cwde
fsub
nop
xor
push
nop
xor
shl
mov
pusha
aam
pop
outs
cmp
pushf
shl
ficom
test
clc
mov
mov
sbb
xchg
xor
jmp
nop
xor
popf
test
cdq
sbb
xor
shl
mov
pop
jmp
outs
retf
das
and
xor
ficom
pusha
shl
loopne
xor
pop
or
fisubr
mov
sbb
retf
enter
adc
iret
mov
jbe
pop
sub
(bad)
pop
nop
lods
xor
mov
lds
nop
xor
cmp
int
shr
arpl
push
js
xchg
mov
dec
adc
pop
lahf
mov
pop
nop
xor
cld
push
retf
cmp
nop
xor
fcom
mov
push
jecxz
(bad)
fidiv
xor
sbb
(bad)
fcom
cmp
outs
retf
mov
sbb
(bad)
in
retf
cmp
sbb
jle
nop
xor
shl
fwait
icebp
dec
mov
nop
mov
mov
add
mov
nop
aam
xor
cmps
outs
arpl
aam
xor
cmps
outs
arpl
xor
xor
ficom
jno
xor
scas
jbe
inc
loope
leave
cmp
push
retf
inc
cdq
outs
leave
cmp
sub
mov
pop
nop
cmp
outs
retf
cmp
outs
retf
mov
sbb
retf
xchg
rcl
fs
cmp
js
xchg
mov
inc
js
xchg
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
(bad)
sbb
fcomp
push
nop
xor
shl
mov
pop
jmp
outs
retf
das
mov
push
cmp
test
js
xchg
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fmul
sbb
mov
popf
outs
leave
cmp
nop
xor
cmps
adc
mov
cmp
lock
retf
cmp
adc
mov
inc
cdq
outs
leave
cmp
push
fnstsw
mov
cmp
adc
(bad)
push
adc
(bad)
pop
nop
mov
add
aad
ret
xor
pusha
adc
cmp
xor
rcl
mov
cmp
dec
jbe
aam
sar
outs
fs
inc
shl
ficom
aam
retf
cmp
adc
(bad)
pop
in
dec
sahf
idiv
cmp
pusha
add
inc
pop
nop
retf
cmp
lahf
add
leave
cmp
adc
xor
mov
(bad)
pop
sbb
retf
xchg
mov
int3
cmp
adc
retf
jb
outs
retf
in
cmp
pusha
retf
cmp
outs
retf
xchg
xor
jmp
nop
xor
popf
mov
inc
xchg
xor
push
nop
xor
shl
mov
int
test
cmp
cld
scas
xor
ficom
test
js
clc
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fdivr
popf
cwde
fdiv
xchg
xor
push
nop
xor
shl
mov
pusha
aam
pop
outs
cmp
or
xor
ficom
in
pusha
retf
cmp
nop
mov
sbb
sar
outs
mov
cmp
outs
cmp
mov
ret
cmp
adc
cmp
cmp
shl
in
ins
retf
cmp
nop
mov
push
js
stc
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fsub
popf
cwde
fcomp
nop
xor
push
nop
xor
shl
mov
pop
jmp
outs
retf
das
in
xor
ficom
test
push
retf
cmp
scas
xor
loopne
xor
pop
or
fisubr
mov
sbb
retf
sbb
(bad)
pop
adc
iret
xor
cmp
and
cmp
ins
scas
xor
loopne
xor
pop
or
fisubr
mov
pop
nop
lea
imul
cmps
(bad)
pop
stc
xchg
xor
mov
or
pop
adc
xlat
mov
or
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
adc
fdiv
xor
mov
xor
pop
or
fisubr
mov
sbb
retf
fs
pop
adc
iret
mov
or
pop
sub
(bad)
pop
nop
lods
xor
sbb
xor
in
ins
retf
cmp
nop
mov
push
js
cli
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
loopne
xor
pop
or
or
mov
cmps
outs
retf
nop
xor
fdiv
popf
sbb
xor
in
ins
retf
cmp
nop
mov
push
sbb
out
test
lods
xor
loopne
xor
pop
or
fisubr
mov
sbb
retf
int3
or
pop
adc
iret
xor
cmp
lods
xor
ficom
pop
lods
xor
loopne
xor
pop
or
fisubr
mov
sbb
retf
mov
(bad)
pop
adc
iret
xor
cmp
dec
lods
xor
ficom
scas
xchg
and
pop
js
sti
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fsub
gs
xor
popf
cwde
mov
cmp
sbb
xchg
xor
fsub
nop
xor
popf
sbb
gs
xor
push
nop
xor
shl
mov
pusha
aam
pop
outs
cmp
cld
lods
xor
ficom
pop
dec
jbe
cmps
and
fcom
nop
xor
popf
cwde
fmul
push
nop
xor
shl
mov
pusha
aam
pop
outs
cmp
xor
xor
ficom
cs
(bad)
scas
jbe
inc
cdq
outs
leave
cmp
push
(bad)
gs
xor
mov
xor
shl
mov
repz
jle
xor
shr
arpl
push
js
sti
pop
nop
mov
dec
js
cld
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fmul
gs
xor
popf
cwde
pop
sbb
retf
cmp
nop
mov
push
js
cld
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
cmps
and
fcom
bound
mov
sub
xor
mov
xrstors
ds
pop
nop
lods
xor
mov
mov
cmp
int
shr
arpl
push
js
cld
pop
nop
mov
dec
clc
in
sbb
retf
sbb
(bad)
pop
adc
iret
xor
pop
(bad)
xor
je
sub
fadd
popa
nop
xor
fdivr
cmp
nop
xor
in
ins
retf
cmp
nop
pop
(bad)
aam
sar
outs
arpl
cmps
outs
retf
jb
outs
leave
cmp
outs
sub
mov
and
fsub
nop
xor
test
ret
fcom
nop
xor
fdivr
cmps
iret
push
nop
push
popa
dec
mov
nop
xor
out
aaa
retf
int3
xor
outs
retf
dec
sahf
push
jno
pop
jnp
enter
xchg
xor
jmp
cmp
and
(bad)
pop
sbb
mul
clc
mov
sbb
retf
cmp
clc
xor
xor
mov
cmps
lods
xor
popa
dec
jbe
xor
jmp
(bad)
pop
adc
adc
outs
retf
scas
(bad)
dec
jbe
xor
test
fistp
sbb
mov
shl
cmp
push
adc
mov
jl
pop
iret
std
add
sbb
inc
mov
ss
pop
ret
bound
sub
int3
mul
or
cmp
adc
push
add
inc
mov
ins
retf
cmp
aad
dec
pop
xchg
xor
inc
aad
retf
cmp
push
add
dec
lahf
adc
ret
jg
pop
nop
mov
lds
push
stc
ins
retf
cmp
js
lock
nop
mov
cmp
outs
fsub
outs
nop
xor
or
mov
cmp
les
ret
ss
sbb
mov
dec
mov
(bad)
fadd
outs
nop
xor
fsubr
leave
cmp
outs
retf
das
test
xor
rcl
retf
jb
ins
retf
cmp
sbb
rcr
mov
dec
sub
les
(bad)
aam
ss
sbb
mov
inc
scas
cmc
push
(bad)
pop
clc
xor
sbb
xor
fadd
cmp
nop
xor
dec
cli
xor
fdiv
cmp
nop
xor
or
xor
or
(bad)
pop
nop
pop
ret
pop
nop
xor
fsub
cmp
shl
in
dec
jbe
xor
and
cmps
outs
mov
jge
hlt
mov
(bad)
fsub
nop
xor
cdq
jns
lds
fmul
cmps
outs
retf
scas
pop
xchg
xor
aam
enter
fs
fsub
cmp
nop
xor
in
add
cmp
outs
retf
cmp
sbb
cmp
outs
retf
cmp
or
cmp
outs
retf
xchg
aam
cmp
outs
fs
pop
(bad)
retf
cmp
push
adc
fmul
cmp
(bad)
fdivr
ins
nop
xor
cdq
jns
(bad)
pop
nop
pop
addr16
xor
fsubr
cmps
rcr
popa
nop
xor
mov
sbb
retf
xchg
aam
enter
fs
enter
mov
fstp
cmps
sbb
lods
sbb
sub
cmp
nop
xor
popf
mov
add
outs
jo
pop
nop
repz
mov
nop
xor
aas
push
mov
cmps
outs
retf
(bad)
pop
adc
(bad)
sub
js
cmp
(bad)
jne
pop
sbb
retf
xchg
mov
les
cmps
leave
mov
cmp
sbb
retf
xchg
xor
pop
(bad)
xor
enter
lods
pop
js
repz
nop
cmp
(bad)
pop
nop
retf
jb
ins
retf
cmp
sbb
out
mov
add
cmp
nop
pop
mov
fsubr
cmps
rcr
outs
nop
xor
popf
xor
sub
cmp
sbb
fwait
imul
cmps
outs
retf
xchg
xor
call
repnz
nop
mov
fdiv
js
(bad)
pop
js
repz
nop
mov
sub
cmp
mov
movs
outs
retf
sti
pop
loop
into
and
scas
pop
call
add
pop
adc
(bad)
sub
nop
xor
pusha
movs
xor
xor
cmp
js
repz
nop
pop
(bad)
xor
call
cmp
aam
cmp
outs
retf
(bad)
pop
in
inc
cld
or
cmp
xor
xor
sahf
(bad)
push
(bad)
pop
jnp
inc
cld
or
cmp
mov
cmp
outs
fs
add
xor
loope
sub
pop
ror
loopne
cmp
loopne
(bad)
pop
cli
xor
in
xor
cmp
nop
retf
jb
ins
retf
cmp
sbb
sub
sub
nop
ret
and
adc
mov
push
fwait
xchg
xor
shl
sub
bound
fistp
add
mov
js
hlt
pop
nop
mov
cmp
push
retf
mov
js
hlt
pop
nop
mov
cmp
mov
push
dec
or
addr16
clc
mov
push
dec
or
cmp
outs
cmp
ins
xor
xor
cmp
fs
lods
pop
js
cmc
pop
nop
mov
mov
add
(bad)
push
add
dec
sbb
mov
add
aaa
sbb
fdivr
nop
xor
popf
pushf
retf
mov
sbb
inc
cdq
xchg
fs
pusha
mov
cmp
out
aad
dec
sbb
js
neg
mov
add
aad
dec
sbb
(bad)
sbb
cwde
add
jo
outs
mov
jo
ins
xor
xor
aam
les
js
neg
mov
(bad)
psubb
xchg
sbb
fdivr
lahf
adc
cmp
xor
cmps
(bad)
fsub
nop
xor
sbb
fs
mov
add
popf
push
push
not
inc
nop
xor
fsub
arpl
mov
push
mov
mov
sub
and
adc
mov
daa
cmps
outs
je
pop
nop
mov
cmp
sbb
retf
xchg
xor
call
call
push
push
cmp
nop
xor
fsub
rcr
addr16
push
aam
cmps
js
repz
nop
mov
push
cdq
hlt
mov
outs
or
sub
fsubr
imul
aam
cmps
sbb
neg
adc
je
pop
nop
mov
cmp
sbb
retf
xchg
vmread
pop
nop
cmp
aas
jo
mov
add
movs
xor
ficom
cdq
in
cmp
pop
aam
cmps
outs
inc
retf
mov
sbb
pop
mov
mov
fnstenvw
mov
add
push
call
(bad)
pop
js
call
push
sbb
out
push
out
nop
xor
test
ret
pop
ret
pop
nop
xor
add
mov
cmps
shl
rcl
iret
ror
cmp
cmps
outs
mov
push
clc
popa
sbb
nop
addr16
sbb
xor
ficom
scas
pop
pop
(bad)
pop
sbb
out
test
dec
jbe
aam
xor
cmps
outs
fs
pop
movs
xor
ficom
mov
call
fisubr
mov
sbb
retf
cmp
js
hlt
pop
nop
mov
push
js
hlt
pop
nop
(bad)
int
nop
xor
scas
imul
(bad)
loopne
xor
pop
or
or
retf
nop
xor
call
(bad)
mov
xor
(bad)
pop
adc
xlat
mov
pop
(bad)
pop
sub
(bad)
pop
nop
lods
xor
test
shl
fcom
fcomp
nop
xor
popf
cwde
mov
add
cmps
jmp
pop
sbb
retf
xchg
mov
pop
(bad)
pop
adc
iret
mov
pop
(bad)
pop
sub
(bad)
pop
nop
lods
xor
test
shl
fcom
fcomp
popf
cwde
(bad)
push
xor
push
nop
xor
shl
mov
cwde
pop
(bad)
pop
sub
pop
nop
lods
xor
jo
cmp
clc
ins
sbb
nop
mov
cmp
js
cmc
pop
nop
mov
dec
outs
inc
xlat
xor
mov
mov
mov
test
mov
mov
dec
push
(bad)
pop
adc
rcl
pusha
ret
and
adc
mov
(bad)
pop
sub
(bad)
pop
nop
lods
xor
test
shl
fcom
fmul
imul
int
shl
fcom
fdivr
nop
xor
popf
cwde
fdiv
push
nop
xor
shl
mov
pusha
aam
pop
sbb
retf
xchg
mov
push
(bad)
pop
adc
iret
xor
mov
mov
adc
(bad)
pop
adc
iret
shl
and
adc
mov
(bad)
pop
sub
(bad)
pop
nop
lods
xor
mov
xor
cmp
int
aam
xor
cmps
outs
arpl
aam
xor
cmps
outs
arpl
dec
mov
and
jo
jbe
aam
xor
cmps
outs
fs
jl
xor
ficom
mov
call
fisubr
mov
sbb
retf
cmp
js
neg
mov
push
clc
jg
sbb
retf
cmp
js
neg
mov
push
sbb
imul
mov
xor
pop
or
fisubr
mov
sbb
retf
cmp
js
neg
mov
push
clc
sbb
nop
mov
cmp
js
neg
mov
push
js
neg
(bad)
int
nop
xor
scas
imul
(bad)
aam
xor
cmps
outs
fs
fsub
cmp
scas
add
(bad)
pop
outs
inc
retf
aam
xor
cmps
outs
fs
ja
jbe
aam
xor
cmps
outs
fs
mov
and
inc
mov
xor
pop
or
fisubr
mov
sbb
retf
cmp
js
neg
mov
push
clc
xor
sbb
retf
cmp
js
neg
mov
push
js
neg
(bad)
int
nop
xor
scas
imul
(bad)
aam
xor
cmps
outs
fs
pop
mov
cmp
push
scas
jbe
inc
mov
retf
cmp
push
fsubr
nop
xor
mov
xor
shl
mov
repz
jle
xor
aam
xor
cmps
outs
arpl
aam
xor
cmps
outs
arpl
les
and
and
xor
loopne
xor
pop
or
fisubr
mov
sbb
retf
cmp
js
neg
mov
push
clc
jmp
jo
cmp
js
neg
mov
push
adc
jne
nop
xor
mov
xor
pop
or
fisubr
mov
sbb
retf
cmp
js
neg
mov
push
js
neg
(bad)
int
nop
xor
scas
imul
(bad)
loopne
xor
pop
or
or
retf
nop
xor
call
(bad)
mov
ins
sbb
pop
adc
xlat
xor
test
mov
mov
pushf
add
pop
adc
iret
xor
pop
(bad)
xor
je
mov
sbb
pop
sbb
inc
lahf
pop
and
pop
sbb
retf
xchg
mov
sbb
pop
cli
xor
in
jmp
cmps
(bad)
fs
in
aam
cmps
(bad)
retf
jb
dec
retf
cmp
outs
cmp
and
xor
push
sbb
out
test
retf
std
add
sbb
inc
mov
xor
pop
ret
bound
xor
int3
xor
outs
retf
dec
sahf
adc
(bad)
push
in
(bad)
ror
cmp
mov
sbb
pop
sbb
aam
ss
rol
mov
inc
fldcw
cmp
push
fmul
mov
sbb
pop
js
xor
movs
xor
xor
inc
in
pop
nop
mov
cmp
sbb
adc
fs
cwde
mov
xor
jae
outs
retf
xchg
xor
call
sbb
nop
pop
lds
mov
mov
push
adc
cdq
lahf
mov
pop
nop
xor
pop
xchg
xor
aam
enter
fs
fsub
cmp
nop
xor
mov
outs
and
adc
fs
jo
retf
cmp
push
cmp
cdq
lahf
mov
pop
nop
xor
stc
dec
jbe
aam
enter
fs
lock
cmp
outs
fs
fsubr
cmps
rcr
ja
xor
scas
jne
cmp
adc
mov
add
aam
(bad)
aam
mov
cmps
outs
fs
dec
mov
sub
xchg
jg
outs
retf
sbb
add
je
cmp
adc
(bad)
sub
js
cmp
in
(bad)
pop
sbb
retf
xchg
mov
sar
cmps
leave
mov
cmp
sbb
retf
xchg
xor
pop
(bad)
xor
enter
lods
pop
js
in
pop
nop
cmp
(bad)
pop
nop
retf
jb
ins
retf
cmp
sbb
(bad)
mov
xor
cmp
nop
pop
mov
fsubr
cmps
rcr
je
xor
popf
xor
es
pop
jnp
inc
sahf
loopne
(bad)
pop
sbb
retf
xchg
xor
call
in
pop
nop
mov
fdiv
js
(bad)
pop
js
in
pop
nop
mov
es
pop
sbb
sti
pop
loop
into
scas
lahf
mov
pop
nop
xor
pop
pusha
xor
mov
push
(bad)
pop
sbb
out
mov
xchg
xor
aam
movs
cmp
pop
push
(bad)
pop
cli
xor
(bad)
aam
movs
cmp
and
cmp
push
cmp
cmps
outs
xor
push
adc
(bad)
pop
nop
mov
cmp
ret
fdiv
outs
retf
inc
popf
cwde
cmp
(bad)
pop
nop
pop
(bad)
cmps
and
mov
cmp
js
out
pop
nop
mov
es
xor
aam
test
cmps
outs
fs
add
cmp
outs
mov
cmp
nop
xor
push
dec
jbe
mov
push
(bad)
pop
rcr
xor
mov
sbb
pop
adc
rcl
inc
out
xor
retf
out
pop
nop
mov
cmp
jnp
xchg
rcl
xor
outs
adc
dec
retf
cmp
push
cmp
sbb
inc
mov
fs
cmps
and
(bad)
sub
sub
xor
pop
nop
repz
lds
cmp
xor
aam
cmp
outs
fs
nop
mov
xor
(bad)
cmps
and
fdivr
jo
xor
in
xor
cmp
nop
mov
cmp
repnz
push
into
outs
push
fwait
xchg
xor
shl
sub
bound
scas
cmc
adc
xchg
pop
nop
addr16
or
xor
rcl
int3
cmp
fmul
or
mov
lods
sbb
out
pop
nop
mov
loope
nop
xor
sahf
fidiv
scas
ja
sub
sbb
retf
aam
xor
or
loopne
nop
addr16
add
enter
bound
xor
sbb
lods
cmps
(bad)
fdivr
nop
xor
mov
pusha
mov
xchg
vmread
pop
nop
bound
xor
xor
rcl
enter
std
add
sbb
jg
xor
add
(bad)
pop
(bad)
arpl
aam
loope
push
cmp
ret
cmp
movs
mov
mov
add
inc
ret
push
outs
cmp
pop
sbb
retf
xchg
vmread
out
pop
nop
pop
(bad)
cmps
in
dec
fcom
fadd
popf
pushf
or
cmps
nop
xor
pop
sbb
sub
adc
fnstcw
nop
xor
pop
(bad)
fsubr
nop
xor
lahf
jnp
cwde
pop
pop
not
push
(bad)
mov
cmp
pop
div
and
add
shl
sbb
fs
mov
sbb
lods
rcr
shl
inc
clc
shl
jo
xor
push
daa
jno
ficom
xchg
xor
test
jno
or
in
pop
nop
mov
inc
sbb
xor
sbb
sbb
nop
fdivr
cmps
aad
enter
inc
mov
pop
not
push
(bad)
arpl
stos
sub
loope
cmp
pop
ror
ins
mov
lds
nop
pop
(bad)
xor
pop
(bad)
xor
xor
pop
cli
xor
pop
cli
and
fs
mov
mov
push
pop
(bad)
push
cli
add
ins
adc
test
mov
(bad)
push
cli
add
ins
js
xchg
dec
out
pop
nop
pop
(bad)
push
cli
add
ins
adc
out
pop
nop
pop
(bad)
push
cli
add
ins
mov
imul
nop
pop
(bad)
push
cli
add
ins
mov
out
pop
nop
mov
mov
arpl
(bad)
shl
pusha
mov
arpl
(bad)
shl
jo
xor
xor
add
shl
inc
mov
arpl
clc
shl
push
mov
add
(bad)
push
cli
add
ins
mov
(bad)
loopne
nop
pop
(bad)
push
cli
add
ins
pusha
test
loopne
nop
pop
(bad)
push
cli
add
ins
add
test
out
pop
nop
pop
(bad)
push
cli
add
ins
or
loopne
nop
mov
nop
xor
mov
push
imul
mov
int
nop
pop
cmp
nop
fadd
jns
je
xor
enter
test
loopne
nop
pop
cmp
nop
fsub
jle
xor
gs
xor
enter
xchg
test
and
pop
nop
mov
sbb
retf
bnd
jne
mov
adc
pop
xor
pop
sbb
xor
movs
outs
add
(bad)
shl
mov
xor
xor
inc
add
adc
pop
xor
sbb
xor
movs
outs
add
int3
shl
nop
mov
(bad)
xor
jno
jne
mov
adc
pop
xor
nop
pop
xlat
(bad)
xor
movs
outs
add
(bad)
shl
cld
mov
(bad)
xor
jns
jne
mov
adc
pop
xor
pop
sbb
xor
movs
outs
add
(bad)
shl
fdiv
add
cmp
nop
fsub
inc
pcmpeqw
xor
enter
xchg
test
arpl
pop
nop
imul
rol
bound
inc
adc
sbb
xor
lods
dec
jbe
cmps
in
das
leave
ins
retf
cmp
push
pop
sub
adc
cmp
cwde
stos
xchg
xor
mov
adc
pop
adc
add
dec
sbb
fs
mov
adc
pop
cli
xor
ins
movs
stos
xchg
xor
rcl
enter
fs
sbb
pop
sub
pop
(bad)
pop
adc
dec
jbe
xor
test
xor
pop
nop
fdivr
jg
xor
sbb
nop
retf
repnz
pcmpeqw
xor
jno
jb
les
lods
dec
cli
and
xor
pop
clc
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
pop
sbb
mov
repnz
pcmpeqw
xor
jne
xor
xor
aas
jb
les
lods
or
and
xor
pop
clc
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
nop
pop
(bad)
xor
pop
ret
pop
(bad)
xor
ss
pop
cli
xor
pop
cli
cmp
dec
js
loope
nop
mov
lods
imul
das
cmp
xor
xor
jne
xor
jne
xor
xor
cmp
nop
xor
xor
out
test
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
sbb
xor
xor
jne
xor
jne
xor
xor
and
sbb
pop
nop
xor
xor
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
cmps
movs
add
nop
pop
(bad)
cmps
movs
jo
sbb
xor
(bad)
pop
nop
pop
out
xor
cli
sbb
adc
lods
pop
js
jecxz
nop
xchg
retf
(bad)
shl
(bad)
shl
stc
shl
pop
nop
pop
jns
nop
xor
jno
xor
pop
rcr
xor
or
xor
xor
dec
pcmpeqw
xor
jne
xor
jbe
xor
pop
mov
pop
cli
and
xor
pop
clc
mov
sbb
adc
pop
xor
pop
sbb
xor
xor
out
test
xor
sbb
pop
jecxz
nop
pop
mov
shl
pop
nop
retf
repnz
jne
mov
adc
pop
cli
xor
ins
movs
stos
xchg
xor
ins
lock
test
sbb
pop
nop
pop
cmc
xor
xor
pop
cli
dec
scas
pop
nop
mov
xor
pop
clc
mov
sbb
adc
pop
xor
add
nop
retf
repnz
pcmpeqw
xor
jbe
xor
scas
pause
xor
xor
xor
pop
clc
aaa
(bad)
fld
pop
sbb
dec
jbe
xor
xor
jne
jne
mov
into
cmp
movs
stos
xchg
xor
ins
aam
xchg
and
(bad)
clc
rol
pop
nop
pop
scas
pop
nop
xor
pop
nop
xor
xor
out
test
out
sbb
nop
pop
(bad)
mov
pop
(bad)
pop
xor
scas
ja
xor
add
(bad)
shl
stc
shl
pop
nop
pop
cmp
xor
dec
xchg
xor
xor
addr16
adc
lods
pop
js
in
nop
xchg
mov
shl
(bad)
shl
stc
shl
inc
xchg
xor
xor
(bad)
pop
clc
xor
pop
rcr
xor
or
xor
xor
imul
retf
repnz
pcmpeqw
xor
jne
xor
xor
push
hlt
pop
(bad)
pop
nop
fs
dec
dec
jbe
xor
test
xor
mov
test
cmp
xchg
xor
ins
aam
xchg
and
psubb
pop
nop
pop
addr16
nop
xor
pop
nop
xor
xor
out
sbb
nop
pop
(bad)
mov
push
(bad)
pop
xor
(bad)
cmps
movs
add
nop
pop
(bad)
cmps
movs
push
sbb
xor
(bad)
pop
nop
pop
shl
nop
xor
or
call
mov
xor
mov
push
(bad)
pop
xor
(bad)
cmps
movs
add
nop
pop
(bad)
cmps
movs
push
sbb
xor
xor
pop
clc
test
xor
movs
sbb
xor
pop
xchg
xor
mov
push
(bad)
pop
xor
push
sbb
mov
repnz
pcmpeqw
xor
jbe
xor
xor
pop
cli
and
xor
pop
clc
xor
(bad)
pop
nop
xor
mov
mov
xor
ins
movs
stos
xchg
xor
ins
lock
test
sub
cmp
nop
pop
shl
nop
xor
or
call
mov
xor
mov
adc
pop
sbb
add
nop
pop
(bad)
cmps
movs
jo
sbb
xor
pop
clc
popf
(bad)
pop
nop
pop
fnstenv
nop
xor
or
xlat
push
sbb
xor
pop
js
out
nop
xchg
pop
cli
shl
add
cmp
push
fadd
outs
retf
cwde
pop
pop
not
inc
(bad)
arpl
cli
rcr
shr
aas
rcl
xor
cwde
fsubr
scas
outs
retf
dec
lahf
clc
fcomp
nop
bound
inc
addr16
cmp
push
and
push
pcmpeqw
shr
aas
rcl
(bad)
cmps
movs
cmp
sbb
xor
sbb
fs
mov
adc
pop
cli
xor
ins
movs
stos
xchg
xor
rcl
enter
fs
sbb
pop
sub
pop
(bad)
pop
adc
dec
jbe
xor
test
xor
pop
nop
fcom
sbb
nop
retf
repnz
pcmpeqw
xor
jno
jb
les
lods
dec
cli
and
xor
test
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
pop
sbb
xor
xor
jne
xor
jne
xor
aas
jb
les
lods
or
and
xor
pop
clc
out
sbb
nop
pop
(bad)
mov
adc
pop
xor
nop
pop
(bad)
xor
pop
ret
pop
(bad)
xor
ss
pop
cli
xor
pop
cli
cmp
dec
js
out
nop
mov
lods
imul
das
mov
nop
retf
repnz
pcmpeqw
xor
jbe
xor
pop
mov
xor
call
inc
adc
lods
pop
js
fcomp
xchg
das
(bad)
shl
mov
and
pop
clc
dec
sbb
xor
xor
imul
jbe
xor
xor
ins
js
xchg
mov
cli
leave
xor
ins
in
lods
pop
cli
xor
(bad)
cmps
movs
fcomp
nop
fdivr
dec
cli
xor
pop
clc
jp
pop
nop
retf
repnz
jne
mov
sub
pop
cli
xor
ins
movs
stos
xchg
xor
ins
lock
test
sbb
pop
nop
pop
cmc
xor
inc
or
call
inc
adc
lods
pop
js
fcomp
xchg
inc
clc
shl
mov
cli
xor
ins
movs
stos
xchg
xor
ins
lock
test
sbb
pop
nop
pop
sti
xor
scas
pop
nop
mov
xor
pop
clc
mov
sbb
sub
pop
xor
pop
sbb
retf
lods
pop
outs
add
(bad)
shl
stc
shl
pop
nop
pop
test
pop
clc
xor
pop
rcr
xor
or
xor
xor
sub
nop
retf
repnz
pcmpeqw
xor
jne
xor
xor
pop
clc
test
pop
nop
fs
sbb
(bad)
xor
test
xor
clc
mov
cli
mov
(bad)
pop
nop
ret
and
aad
dec
sahf
cli
xor
ins
movs
stos
xchg
xor
ins
aam
xchg
and
movs
nop
xor
xor
xor
pop
cli
push
scas
pop
nop
xor
xor
out
sbb
nop
pop
(bad)
mov
sub
pop
xor
pop
sbb
add
nop
pop
(bad)
cmps
movs
jo
sbb
pop
jle
nop
xor
stc
nop
xor
xor
xor
adc
lods
pop
js
fstp
xchg
push
cli
shl
(bad)
shl
stc
shl
pop
nop
pop
and
xor
inc
clc
xor
pop
rcr
xor
or
xor
xor
and
nop
retf
repnz
pcmpeqw
xor
jne
xor
xor
cmps
nop
xor
xor
fs
push
dec
jbe
xor
test
xor
call
xor
cmp
xchg
xor
ins
lock
test
sub
fist
pop
shl
nop
xor
or
movs
sbb
xor
pop
xchg
xor
mov
sub
pop
xor
push
sbb
xor
xor
jne
xor
jbe
xor
pop
shl
nop
xor
or
call
mov
xor
mov
sub
pop
xor
sbb
add
nop
pop
(bad)
cmps
movs
push
sbb
xor
pop
cwde
xor
scas
test
(bad)
xor
xor
pop
nop
fadd
inc
nop
xor
jns
jne
xor
jne
xor
jne
xor
xor
sbb
pop
(bad)
pop
adc
dec
jbe
xor
test
xor
xchg
mov
cli
or
xor
outs
mov
or
jno
rcl
sbb
outs
retf
cwde
pop
pop
not
inc
ret
bound
push
sbb
xor
push
pop
(bad)
xor
xor
pop
cli
aaa
lods
pop
cli
aaa
scas
pop
nop
xor
cmps
in
das
les
mov
cmps
lahf
mov
pop
nop
xor
pop
(bad)
fcomp
nop
xor
call
inc
cmp
xor
sbb
xor
pop
nop
mov
xor
fs
sbb
fs
sbb
cmp
pop
cli
in
shl
pop
nop
xor
mov
xchg
cmp
int
mov
cli
xor
sub
pop
xchg
adc
scas
or
in
cmp
fcomp
mov
mov
mov
cli
xor
or
xlat
xor
xor
mov
popf
mov
add
into
outs
push
call
(bad)
pop
nop
addr16
out
sbb
cmp
sbb
inc
mov
jb
pop
clc
xchg
ja
nop
mov
cmp
js
fistp
fdivr
push
nop
xor
shl
mov
imul
sub
pop
jp
shl
fcom
fdiv
inc
nop
xor
test
adc
pop
in
scas
and
xor
cmps
outs
fs
inc
mov
fldln2
retf
les
pop
xor
shl
fcom
fadd
inc
nop
xor
and
xor
sbb
retf
cmp
js
rcr
mov
add
in
retf
ret
pop
imul
shl
fcom
fmul
dec
nop
xor
and
xor
sbb
retf
cmp
js
rcr
mov
cmps
xchg
inc
(bad)
xor
test
cmps
outs
retf
xchg
mov
and
pop
adc
push
in
scas
fisub
jbe
aam
xor
cmps
outs
fs
rol
sbb
mov
xor
test
cmps
outs
retf
xchg
mov
and
pop
adc
push
in
scas
xchg
jbe
aam
xor
cmps
outs
fs
or
xor
fldln2
retf
int3
sub
pop
(bad)
jmp
xor
fcom
fdivr
dec
nop
xor
and
cmp
sbb
retf
cmp
js
rcr
mov
cmps
popf
inc
(bad)
xor
mov
cmps
outs
retf
xchg
mov
and
pop
sbb
xor
outs
retf
dec
lahf
adc
push
in
scas
or
jbe
aam
xor
cmps
outs
fs
mov
xor
xor
in
test
jg
sbb
retf
cmp
clc
xor
sbb
retf
scas
bound
(bad)
xor
test
sbb
retf
scas
cdq
mov
(bad)
mov
cs
pop
adc
out
shl
and
adc
mov
cmp
xchg
xor
shl
xchg
push
sbb
out
xor
sbb
out
mov
(bad)
fadd
nop
xor
add
js
sub
cdq
hlt
mov
cli
xor
mov
sub
pop
iret
push
add
xor
or
rol
test
(bad)
pop
ret
bound
addr16
mov
nop
xor
mov
or
jne
nop
mov
cmp
js
rcr
fadd
inc
nop
xor
push
nop
xor
shl
int3
arpl
cmp
outs
retf
(bad)
sub
pop
imul
xor
fdivr
cmp
nop
xor
in
int3
cmp
push
xchg
scas
outs
retf
xchg
mov
and
pop
adc
les
pop
and
shl
fdivr
cmp
nop
xor
std
xor
mov
push
mov
stos
push
and
(bad)
aam
fnstenv
cmps
outs
fs
clc
test
fldcw
xor
sbb
retf
cmp
js
rcr
mov
stos
push
and
(bad)
aam
fnstenv
cmps
outs
fs
xor
xor
fldcw
xor
sbb
retf
cmp
js
rcr
mov
add
sub
cmp
dec
clc
pop
je
nop
mov
cmp
js
rcr
mov
stos
push
and
(bad)
aam
fnstenv
cmps
outs
fs
inc
test
fldcw
ds
clc
sahf
je
nop
mov
cmp
js
rcr
mov
stos
push
and
(bad)
aam
fnstenv
cmps
outs
fs
mov
pusha
ret
and
adc
mov
aas
cmps
outs
cmp
sbb
retf
cmp
js
rcr
mov
stos
push
and
(bad)
aam
fnstenv
cmps
outs
fs
cld
test
fldcw
cmp
sbb
retf
cmp
js
rcr
pop
mov
shl
fdivr
cmp
outs
retf
dec
test
dec
ret
cmp
xor
xor
xchg
cmps
outs
mov
dec
sbb
inc
in
int3
cmp
sub
xor
(bad)
fiadd
nop
xor
test
dec
ret
cmp
sbb
test
jbe
mov
idiv
cmps
adc
iret
rcl
cmp
lds
ffree
pop
nop
xor
in
enter
cmp
xchg
xor
fldcw
push
enter
(bad)
pop
adc
std
push
adc
repnz
cmps
ins
retf
cmp
jle
pop
nop
ret
and
adc
mov
aas
cmps
outs
fs
ins
dec
jbe
aam
enter
fs
fmul
cmp
int3
cmp
shr
pop
sub
push
inc
repnz
cwde
fiadd
cmc
ds
mov
mov
aas
mov
fdiv
(bad)
pop
adc
cmps
(bad)
shl
clc
shl
jae
jbe
aam
enter
fs
dec
mov
shl
aaa
rcl
push
clc
shl
inc
dec
jbe
aam
enter
fs
mov
push
sub
adc
nop
mov
cmp
js
rcr
mov
xor
mov
outs
retf
dec
lahf
sbb
retf
xchg
xor
mov
cmps
outs
retf
xchg
mov
and
pop
clc
aaa
push
sbb
retf
cmp
js
rcr
mov
dec
sbb
retf
xchg
mov
and
pop
sbb
retf
inc
cdq
xchg
fs
fsubr
cmps
rcr
xor
fsubr
cmps
rcr
dec
nop
xor
popf
sbb
adc
fs
cld
test
xor
xor
fsubr
cmps
rcr
les
inc
popf
pushf
cmp
(bad)
pop
nop
mov
cmp
push
xor
pop
leave
mov
cmp
pusha
ret
and
adc
mov
aas
cmps
outs
ds
(bad)
pop
outs
cmp
leave
xor
xor
test
mov
mov
nop
and
pop
adc
xlat
xor
xchg
cmps
outs
retf
xchg
mov
es
pop
sbb
retf
xchg
mov
and
pop
sbb
sub
sbb
inc
in
enter
sbb
scas
outs
retf
add
xchg
enter
xor
push
outs
mov
inc
in
ret
cmp
pusha
ret
and
adc
mov
aas
cmps
outs
mov
cmp
clc
loop
sbb
retf
cmp
js
rcr
mov
dec
sbb
retf
xchg
mov
daa
(bad)
pop
sbb
dec
in
retf
(bad)
fdiv
nop
xor
in
ret
cmp
(bad)
pop
xchg
sbb
inc
scas
cmp
cmp
and
fdiv
fsubr
cmps
rcr
dec
nop
xor
in
retf
(bad)
mov
cmp
in
xor
push
js
(bad)
pop
nop
mov
cmp
cli
xor
in
fs
cmp
nop
pop
(bad)
xor
xor
mov
and
cmp
outs
sub
mov
push
cmp
cdq
hlt
enter
cmp
outs
retf
das
add
xor
fdivr
mov
pop
xchg
mov
ins
test
add
cmp
add
ret
pop
lds
(bad)
pop
js
xlat
pop
nop
addr16
push
sub
pop
push
add
test
xor
pop
nop
sub
mov
es
pop
sbb
into
cdq
in
xchg
mov
and
das
push
test
add
fistp
nop
xor
sbb
xchg
repz
shl
pop
shr
pop
sbb
xor
outs
retf
dec
call
movs
dec
nop
xor
cmps
nop
xor
xor
xchg
test
pop
(bad)
pop
nop
fdiv
dec
nop
xor
mov
and
pop
adc
add
nop
xor
pop
xchg
xor
aam
test
cmps
outs
cmp
fmul
dec
nop
xor
pop
clc
movs
sbb
retf
cmp
js
pop
cmps
outs
mov
dec
lods
retf
cmp
cmp
xchg
xor
ficom
cmp
jl
add
shl
call
rcr
mov
repnz
rcl
sub
mov
inc
ins
dec
sahf
adc
xchg
push
push
cli
jge
cmp
outs
xor
rcr
cmp
and
cmp
and
fiadd
cmc
ds
mov
mov
dec
stos
sbb
cmp
adc
xor
cmp
adc
mov
fdivr
fnstcw
cmps
nop
fsub
dec
nop
xor
fwait
data16
sahf
repnz
lock
cmp
mov
mov
retf
cmc
aam
xchg
sub
xor
xor
pop
sbb
retf
xchg
mov
and
pop
adc
or
mov
mov
retf
xchg
aam
test
cmps
outs
fs
adc
stos
sub
push
retf
cmp
adc
fs
xchg
push
retf
cmp
push
sub
pop
sbb
retf
xchg
mov
and
das
ins
lahf
xor
fsub
loope
nop
pop
jp
shl
leave
xor
xor
test
je
sbb
xor
in
fidivr
cmps
sbb
xor
js
xor
stos
not
(bad)
xor
xchg
test
repnz
sbb
xor
sub
xor
ror
pop
rcl
jp
jle
cmp
movs
jb
sbb
xor
aas
xor
xor
leave
xor
xor
test
adc
sbb
xor
in
fnstcw
cmps
sbb
xor
jp
xor
stos
not
(bad)
xor
xchg
test
repnz
sbb
xor
dec
xor
push
je
in
fnstcw
cmps
sbb
xor
push
nop
xor
stos
xor
mov
(bad)
xor
(bad)
pop
nop
je
pop
push
jne
mov
cmp
pop
sbb
xor
fs
hlt
lahf
xor
sahf
aad
cmp
xor
sbb
fs
fsub
fcom
aam
fstp
cmps
adc
cmp
adc
(bad)
pop
in
lods
pop
sbb
mov
cmp
outs
inc
jae
dec
cmp
pop
cli
xor
sbb
lods
pop
clc
les
sbb
repz
sub
(bad)
xor
sahf
aad
cmp
xor
sbb
fs
fsub
fdiv
aam
fstp
cmps
adc
cmp
adc
(bad)
pop
in
lods
pop
sbb
mov
cmp
outs
inc
jae
adc
(bad)
pop
cli
xor
sbb
lods
pop
clc
les
sbb
pop
enter
mov
js
leave
pop
nop
mov
sub
mov
mov
retf
dec
fsub
fnstcw
cmps
sbb
dec
pop
jno
test
jno
clc
movs
stos
xchg
jno
aam
iret
mov
cdq
clc
xor
pop
nop
pop
(bad)
mov
cmp
pop
sbb
xor
xor
loopne
xor
rcl
in
mov
xor
sbb
xor
xor
xor
sbb
repz
xor
pop
sbb
out
sbb
xor
pop
nop
repz
jno
or
enter
(bad)
cmps
movs
add
nop
pop
(bad)
xor
pop
(bad)
xor
xor
mov
jno
test
xor
pop
xor
nop
stos
xchg
mov
(bad)
xor
xor
pop
js
je
outs
mov
pop
js
retf
or
pop
nop
mov
jbe
mov
fst
scas
daa
dec
jbe
or
retf
mov
cmp
jnp
rcr
fadd
pop
ror
cmc
jge
cmp
outs
xor
pop
nop
mov
add
adc
fs
fdivr
cmp
shl
and
(bad)
xor
add
adc
dec
iret
outs
retf
inc
popf
mov
loop
and
(bad)
pop
push
xor
pop
nop
xor
int
retf
cmp
dec
sbb
inc
icebp
jle
cmp
cli
xor
pop
clc
fdiv
xor
xor
mov
cmp
pop
sbb
retf
xchg
xor
inc
xchg
xor
pop
js
retf
fs
xor
xor
xor
pop
outs
add
(bad)
shl
add
mov
jge
nop
xor
call
and
js
leave
pop
nop
pop
(bad)
xor
rcl
pop
cdq
hlt
mov
iret
push
nop
push
and
or
rol
test
(bad)
pop
ret
bound
cmp
repz
sbb
mov
dec
lahf
mov
pop
nop
xor
push
adc
lds
push
(bad)
pop
nop
fisttp
dec
xchg
xor
push
adc
lds
or
pop
nop
xor
inc
lods
and
dec
hlt
cwde
xor
fs
(bad)
pop
lahf
mov
pop
nop
xor
les
pop
jae
nop
xor
fld
pop
clc
rcr
retf
repnz
(bad)
mov
sar
cmps
sbb
dec
mov
clc
fcomp
nop
retf
jb
ins
retf
cmp
adc
xlat
rcl
mov
cmp
outs
sub
dec
popf
xor
push
push
cmp
nop
xor
aam
cld
cmp
aam
xchg
ret
retf
pop
nop
cmp
inc
mov
adc
mov
pop
sbb
in
int3
pop
leave
cmp
sbb
in
fmul
cmps
adc
ret
rol
pop
push
xchg
ins
retf
cmp
inc
div
xchg
mov
cmp
call
dec
fdiv
cmp
outs
retf
xchg
xor
jo
sbb
xor
scas
mov
or
push
adc
rcr
mov
xor
(bad)
fsub
cld
pop
nop
mov
cmp
adc
mov
shl
sub
fs
cmps
jnp
cmp
adc
mov
shl
push
adc
retf
repnz
(bad)
mov
sar
cmps
leave
fnstsw
xchg
int3
dec
sahf
xor
sbb
mov
pop
nop
xor
pop
js
retf
fstp
pcmpeqw
pusha
aad
mov
outs
inc
iret
mov
cmp
pop
sub
jmp
fdivr
cmps
outs
mov
(bad)
pop
sbb
rcl
mov
xor
movs
sbb
inc
sbb
add
sbb
les
nop
inc
jmp
xchg
mov
jecxz
xchg
dec
sbb
xchg
sbb
cmp
nop
inc
retf
bound
cmp
xchg
xor
xor
xlat
retf
pop
nop
mov
cmp
dec
sbb
xchg
sbb
add
nop
inc
retf
and
pop
outs
inc
xlat
mov
cmp
pop
clc
retf
cmp
js
retf
pop
nop
mov
jne
xor
mov
outs
retf
dec
sahf
adc
(bad)
fidiv
xor
fmul
cmps
rcr
push
nop
xor
fdivr
cmp
nop
xor
pop
xchg
xor
shr
aas
rcl
cmp
xor
fcom
retf
repnz
jne
mov
ds
pop
adc
(bad)
sub
pop
(bad)
xor
xor
pop
js
int3
pop
nop
retf
repnz
jne
mov
aas
(bad)
pop
jns
ret
mov
add
adc
mov
cmp
outs
xor
fs
test
cmp
nop
xor
xor
(bad)
pop
sbb
retf
xchg
cmps
movs
mov
sbb
xor
aam
retf
cmp
adc
(bad)
pop
in
inc
mov
xchg
pop
cdq
mov
xchg
retf
cmp
outs
retf
inc
popf
pushf
or
cmps
nop
xor
jns
xor
pop
clc
pop
pop
sbb
ds
pop
outs
add
shl
sub
xor
mov
xor
pop
sub
and
adc
mov
cmp
gs
cmp
shl
fsub
cmp
nop
xor
popf
sbb
xor
fcom
retf
repnz
add
cmp
(bad)
cmps
outs
retf
(bad)
sub
pop
(bad)
xor
xor
pop
js
int
nop
retf
repnz
add
ds
pop
jns
ret
pop
nop
mov
cmp
pop
retf
xchg
lods
xor
aas
dec
in
lods
pop
cli
xor
mov
nop
fsub
push
nop
xor
ins
mov
into
pop
nop
fld
pop
nop
xor
fcom
(bad)
push
es
cmps
outs
retf
dec
fst
or
and
mov
(bad)
xor
xor
pop
js
into
pop
nop
retf
repnz
add
cmp
ret
pop
nop
mov
pop
outs
retf
cmp
mov
cmps
outs
retf
sti
dec
loop
dec
mov
sbb
retf
xchg
aam
sar
outs
fs
je
jbe
aam
sar
outs
fs
int3
fwait
xor
ficom
cmps
nop
xor
aam
xor
cmp
test
retf
iret
pop
nop
mov
pop
outs
retf
cmp
adc
pop
cli
xor
sahf
inc
jbe
xor
xor
ins
adc
into
pop
nop
(bad)
pop
nop
xor
mov
pop
(bad)
pop
sbb
retf
xchg
aam
sar
outs
fs
je
jbe
aam
sar
outs
fs
je
xor
ficom
cmps
nop
xor
aam
xor
cmp
xchg
mov
jp
outs
retf
cmp
adc
pop
cli
xor
icebp
inc
jbe
xor
xor
ins
mov
fwait
iret
pop
nop
frstor
nop
xor
mov
sbb
retf
xchg
aam
sar
outs
fs
sti
inc
jbe
aam
sar
outs
fs
pushf
call
cmps
nop
xor
aam
xor
cmp
xchg
sbb
pop
nop
mov
pop
outs
retf
cmp
adc
pop
cli
xor
xor
(bad)
xor
xor
ins
mov
jae
pop
nop
(bad)
pop
nop
xor
aam
retf
cmp
adc
(bad)
pop
in
inc
mov
nop
pop
(bad)
xor
das
cmp
xor
cmps
movs
sbb
sbb
xor
pop
xchg
xor
lahf
adc
xor
fs
add
retf
cmp
adc
(bad)
cmps
outs
retf
sti
imul
adc
pop
cli
xor
jne
jbe
xor
xor
ins
mov
out
pop
nop
fld
pop
nop
xor
fsubr
cmp
outs
retf
cmp
inc
jle
push
mov
cmp
sbb
retf
xchg
xor
mov
movs
outs
retf
xchg
mov
cmp
xlat
xor
(bad)
pop
sbb
retf
xchg
cmps
movs
adc
sbb
xor
in
retf
cmp
nop
pop
(bad)
xor
xor
hlt
xchg
xor
cmps
movs
adc
sbb
xor
adc
adc
xor
fs
add
retf
cmp
adc
(bad)
cmps
outs
retf
sti
imul
adc
pop
cli
xor
mov
jbe
xor
xor
ins
mov
xchg
das
rcr
retf
xor
fsubr
cmp
outs
retf
cmp
pop
retf
xchg
lods
xor
jno
outs
retf
test
int3
mul
xchg
retf
cmp
ins
retf
cmp
clc
sbb
sbb
retf
cmp
js
into
pop
nop
mov
dec
sub
and
adc
mov
cmp
push
pop
(bad)
xor
pop
(bad)
xor
je
sbb
xor
fsub
cmps
cli
lods
pop
cli
xor
in
fs
js
ret
mov
sub
(bad)
pop
in
dec
push
mov
cld
cmp
adc
(bad)
pop
in
dec
call
cmp
or
and
fcomp
pop
sbb
retf
xchg
xor
xor
in
fs
js
ret
mov
cmp
pop
retf
xchg
lods
xor
(bad)
aam
les
cmps
outs
xchg
aam
sar
outs
addr16
fs
js
ret
pop
(bad)
aam
les
cmps
outs
lods
pop
clc
les
sbb
retf
cmp
outs
xor
dec
xchg
xor
cmps
movs
jo
sbb
xor
pop
cli
xor
pop
cli
xor
pop
clc
xor
pop
rcr
shl
loopne
xor
rcl
mov
inc
mov
adc
mov
(bad)
xor
retf
cmp
sbb
xor
xchg
outs
je
gs
xor
mov
sbb
retf
xchg
or
movs
sbb
retf
cmp
cli
xor
fsub
cmp
jl
test
xor
adc
cmps
outs
fdiv
pop
cld
add
sbb
out
mov
cli
xor
xor
in
test
fs
nop
pop
(bad)
pop
nop
mov
fistp
cmp
push
sub
pop
outs
add
(bad)
shl
mov
sub
pop
ror
jo
cmp
outs
inc
shl
pushf
retf
mov
js
ret
imul
lds
xchg
vmptrst
int3
cmc
repnz
add
aad
cli
pop
xchg
xor
push
adc
mov
dec
cdq
cmp
nop
xor
bound
inc
int3
cmps
movs
fcomp
nop
fcomp
nop
xor
mov
push
fcomp
nop
inc
int3
cmps
movs
mov
sbb
xor
ins
adc
cmp
xchg
pop
ret
pop
nop
pslld
jne
sub
retf
repnz
add
xor
pop
sbb
xor
push
pslld
je
sub
retf
bnd
jne
mov
xor
pop
stos
add
(bad)
shl
push
outs
add
(bad)
shl
je
xor
bound
inc
rcr
lods
inc
jae
nop
xor
push
outs
add
(bad)
shl
dec
xchg
xor
bound
inc
fcomp
lods
inc
jae
nop
xor
inc
clc
shl
lods
xchg
xor
mov
mov
sub
add
(bad)
shl
pop
sbb
out
shl
ins
adc
dec
inc
lods
stos
xchg
add
(bad)
shl
pop
sbb
jecxz
shl
mov
sub
pop
stos
add
int3
shl
pop
sbb
(bad)
leave
shl
ins
mov
xor
xchg
test
add
(bad)
shl
pop
sbb
jmp
shl
ins
adc
test
xor
stos
xchg
out
mov
outs
inc
shl
pushf
bound
jnp
inc
sahf
xchg
cs
pop
iret
push
nop
push
and
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
lds
jns
nop
xor
sahf
adc
in
mov
in
push
xor
pop
adc
iret
rcl
enter
sbb
(bad)
push
adc
out
push
fistp
lahf
mov
push
push
inc
ret
adc
stos
jnp
adc
into
cdq
in
inc
mov
nop
fadd
pop
nop
xor
pop
(bad)
pop
(bad)
or
sub
leave
mov
pop
xor
nop
and
pop
adc
and
pop
jecxz
out
popf
adc
xor
pop
sbb
push
mov
retf
cmp
push
imul
push
mov
arpl
pop
jecxz
sbb
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
stos
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
outs
adc
lods
shl
leave
nop
xor
pop
